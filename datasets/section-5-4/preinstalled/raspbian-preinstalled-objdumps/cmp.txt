
raspbian-preinstalled/cmp:     file format elf32-littlearm


Disassembly of section .init:

00010e8c <.init>:
   10e8c:	push	{r3, lr}
   10e90:	bl	12260 <sigaltstack@plt+0x10d8>
   10e94:	pop	{r3, pc}

Disassembly of section .plt:

00010e98 <calloc@plt-0x14>:
   10e98:	push	{lr}		; (str lr, [sp, #-4]!)
   10e9c:	ldr	lr, [pc, #4]	; 10ea8 <calloc@plt-0x4>
   10ea0:	add	lr, pc, lr
   10ea4:	ldr	pc, [lr, #8]!
   10ea8:	andeq	r7, r1, r8, asr r1

00010eac <calloc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #344]!	; 0x158

00010eb8 <fputs_unlocked@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #336]!	; 0x150

00010ec4 <raise@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #94208	; 0x17000
   10ecc:	ldr	pc, [ip, #328]!	; 0x148

00010ed0 <iconv_close@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #94208	; 0x17000
   10ed8:	ldr	pc, [ip, #320]!	; 0x140

00010edc <iconv@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #94208	; 0x17000
   10ee4:	ldr	pc, [ip, #312]!	; 0x138

00010ee8 <strcmp@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #94208	; 0x17000
   10ef0:	ldr	pc, [ip, #304]!	; 0x130

00010ef4 <read@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #296]!	; 0x128

00010f00 <wcwidth@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #288]!	; 0x120

00010f0c <memmove@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #94208	; 0x17000
   10f14:	ldr	pc, [ip, #280]!	; 0x118

00010f18 <free@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #94208	; 0x17000
   10f20:	ldr	pc, [ip, #272]!	; 0x110

00010f24 <_exit@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #94208	; 0x17000
   10f2c:	ldr	pc, [ip, #264]!	; 0x108

00010f30 <memcpy@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #94208	; 0x17000
   10f38:	ldr	pc, [ip, #256]!	; 0x100

00010f3c <__strtoull_internal@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #94208	; 0x17000
   10f44:	ldr	pc, [ip, #248]!	; 0xf8

00010f48 <mbsinit@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #94208	; 0x17000
   10f50:	ldr	pc, [ip, #240]!	; 0xf0

00010f54 <memcmp@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #94208	; 0x17000
   10f5c:	ldr	pc, [ip, #232]!	; 0xe8

00010f60 <dcgettext@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #94208	; 0x17000
   10f68:	ldr	pc, [ip, #224]!	; 0xe0

00010f6c <strdup@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #94208	; 0x17000
   10f74:	ldr	pc, [ip, #216]!	; 0xd8

00010f78 <__stack_chk_fail@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #94208	; 0x17000
   10f80:	ldr	pc, [ip, #208]!	; 0xd0

00010f84 <realloc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #94208	; 0x17000
   10f8c:	ldr	pc, [ip, #200]!	; 0xc8

00010f90 <textdomain@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #94208	; 0x17000
   10f98:	ldr	pc, [ip, #192]!	; 0xc0

00010f9c <iswcntrl@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #94208	; 0x17000
   10fa4:	ldr	pc, [ip, #184]!	; 0xb8

00010fa8 <rawmemchr@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #94208	; 0x17000
   10fb0:	ldr	pc, [ip, #176]!	; 0xb0

00010fb4 <__fxstat64@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #94208	; 0x17000
   10fbc:	ldr	pc, [ip, #168]!	; 0xa8

00010fc0 <sigaction@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #94208	; 0x17000
   10fc8:	ldr	pc, [ip, #160]!	; 0xa0

00010fcc <fwrite@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #94208	; 0x17000
   10fd4:	ldr	pc, [ip, #152]!	; 0x98

00010fd8 <lseek64@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #94208	; 0x17000
   10fe0:	ldr	pc, [ip, #144]!	; 0x90

00010fe4 <__ctype_get_mb_cur_max@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #94208	; 0x17000
   10fec:	ldr	pc, [ip, #136]!	; 0x88

00010ff0 <mbrtowc@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #94208	; 0x17000
   10ff8:	ldr	pc, [ip, #128]!	; 0x80

00010ffc <error@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #94208	; 0x17000
   11004:	ldr	pc, [ip, #120]!	; 0x78

00011008 <open64@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #94208	; 0x17000
   11010:	ldr	pc, [ip, #112]!	; 0x70

00011014 <puts@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #94208	; 0x17000
   1101c:	ldr	pc, [ip, #104]!	; 0x68

00011020 <malloc@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #94208	; 0x17000
   11028:	ldr	pc, [ip, #96]!	; 0x60

0001102c <iconv_open@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #94208	; 0x17000
   11034:	ldr	pc, [ip, #88]!	; 0x58

00011038 <__libc_start_main@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #94208	; 0x17000
   11040:	ldr	pc, [ip, #80]!	; 0x50

00011044 <__gmon_start__@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #94208	; 0x17000
   1104c:	ldr	pc, [ip, #72]!	; 0x48

00011050 <getopt_long@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #94208	; 0x17000
   11058:	ldr	pc, [ip, #64]!	; 0x40

0001105c <__ctype_b_loc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #94208	; 0x17000
   11064:	ldr	pc, [ip, #56]!	; 0x38

00011068 <exit@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #94208	; 0x17000
   11070:	ldr	pc, [ip, #48]!	; 0x30

00011074 <iswspace@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #94208	; 0x17000
   1107c:	ldr	pc, [ip, #40]!	; 0x28

00011080 <strlen@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #94208	; 0x17000
   11088:	ldr	pc, [ip, #32]!

0001108c <strchr@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #94208	; 0x17000
   11094:	ldr	pc, [ip, #24]!

00011098 <__errno_location@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #94208	; 0x17000
   110a0:	ldr	pc, [ip, #16]!

000110a4 <iswalnum@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #94208	; 0x17000
   110ac:	ldr	pc, [ip, #8]!

000110b0 <__sprintf_chk@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #94208	; 0x17000
   110b8:	ldr	pc, [ip, #0]!

000110bc <memset@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #90112	; 0x16000
   110c4:	ldr	pc, [ip, #4088]!	; 0xff8

000110c8 <__printf_chk@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #90112	; 0x16000
   110d0:	ldr	pc, [ip, #4080]!	; 0xff0

000110d4 <write@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #90112	; 0x16000
   110dc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110e0 <__fprintf_chk@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #90112	; 0x16000
   110e8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110ec <memchr@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #90112	; 0x16000
   110f4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f8 <fclose@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #90112	; 0x16000
   11100:	ldr	pc, [ip, #4048]!	; 0xfd0

00011104 <strnlen@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #90112	; 0x16000
   1110c:	ldr	pc, [ip, #4040]!	; 0xfc8

00011110 <setlocale@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #90112	; 0x16000
   11118:	ldr	pc, [ip, #4032]!	; 0xfc0

0001111c <sigemptyset@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #90112	; 0x16000
   11124:	ldr	pc, [ip, #4024]!	; 0xfb8

00011128 <strrchr@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #90112	; 0x16000
   11130:	ldr	pc, [ip, #4016]!	; 0xfb0

00011134 <nl_langinfo@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #90112	; 0x16000
   1113c:	ldr	pc, [ip, #4008]!	; 0xfa8

00011140 <bindtextdomain@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #90112	; 0x16000
   11148:	ldr	pc, [ip, #4000]!	; 0xfa0

0001114c <__xstat64@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #90112	; 0x16000
   11154:	ldr	pc, [ip, #3992]!	; 0xf98

00011158 <strncmp@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #90112	; 0x16000
   11160:	ldr	pc, [ip, #3984]!	; 0xf90

00011164 <abort@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #90112	; 0x16000
   1116c:	ldr	pc, [ip, #3976]!	; 0xf88

00011170 <close@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #90112	; 0x16000
   11178:	ldr	pc, [ip, #3968]!	; 0xf80

0001117c <__assert_fail@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #90112	; 0x16000
   11184:	ldr	pc, [ip, #3960]!	; 0xf78

00011188 <sigaltstack@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #90112	; 0x16000
   11190:	ldr	pc, [ip, #3952]!	; 0xf70

Disassembly of section .text:

00011194 <.text>:
   11194:	ldr	r2, [pc, #4036]	; 12160 <sigaltstack@plt+0xfd8>
   11198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1119c:	mov	r5, r1
   111a0:	ldr	r3, [pc, #4028]	; 12164 <sigaltstack@plt+0xfdc>
   111a4:	sub	sp, sp, #388	; 0x184
   111a8:	ldr	r1, [r2]
   111ac:	mov	r6, r0
   111b0:	mov	r2, #2
   111b4:	ldr	r0, [r5]
   111b8:	str	r1, [sp, #380]	; 0x17c
   111bc:	str	r2, [r3]
   111c0:	bl	12828 <sigaltstack@plt+0x16a0>
   111c4:	ldr	r1, [pc, #3996]	; 12168 <sigaltstack@plt+0xfe0>
   111c8:	mov	r0, #6
   111cc:	bl	11110 <setlocale@plt>
   111d0:	ldr	r1, [pc, #3988]	; 1216c <sigaltstack@plt+0xfe4>
   111d4:	ldr	r0, [pc, #3988]	; 12170 <sigaltstack@plt+0xfe8>
   111d8:	bl	11140 <bindtextdomain@plt>
   111dc:	ldr	r0, [pc, #3980]	; 12170 <sigaltstack@plt+0xfe8>
   111e0:	bl	10f90 <textdomain@plt>
   111e4:	ldr	r3, [pc, #3976]	; 12174 <sigaltstack@plt+0xfec>
   111e8:	mov	r0, #0
   111ec:	add	r8, r3, #80	; 0x50
   111f0:	bl	12614 <sigaltstack@plt+0x148c>
   111f4:	ldr	r7, [pc, #3964]	; 12178 <sigaltstack@plt+0xff0>
   111f8:	ldr	r9, [pc, #3964]	; 1217c <sigaltstack@plt+0xff4>
   111fc:	mov	r4, #0
   11200:	str	r4, [sp]
   11204:	mov	r3, r8
   11208:	mov	r2, r7
   1120c:	mov	r1, r5
   11210:	mov	r0, r6
   11214:	bl	11050 <getopt_long@plt>
   11218:	cmn	r0, #1
   1121c:	beq	114bc <sigaltstack@plt+0x334>
   11220:	cmp	r0, #108	; 0x6c
   11224:	beq	11474 <sigaltstack@plt+0x2ec>
   11228:	ble	112ac <sigaltstack@plt+0x124>
   1122c:	cmp	r0, #115	; 0x73
   11230:	beq	1148c <sigaltstack@plt+0x304>
   11234:	ble	113dc <sigaltstack@plt+0x254>
   11238:	cmp	r0, #118	; 0x76
   1123c:	bne	112c8 <sigaltstack@plt+0x140>
   11240:	ldr	r2, [pc, #3896]	; 12180 <sigaltstack@plt+0xff8>
   11244:	ldr	r3, [pc, #3896]	; 12184 <sigaltstack@plt+0xffc>
   11248:	ldr	r1, [pc, #3896]	; 12188 <sigaltstack@plt+0x1000>
   1124c:	ldr	r0, [pc, #3896]	; 1218c <sigaltstack@plt+0x1004>
   11250:	ldr	r5, [r2]
   11254:	ldr	r6, [r3]
   11258:	bl	13170 <sigaltstack@plt+0x1fe8>
   1125c:	mov	r7, r0
   11260:	ldr	r0, [pc, #3880]	; 12190 <sigaltstack@plt+0x1008>
   11264:	bl	130dc <sigaltstack@plt+0x1f54>
   11268:	mov	r3, r6
   1126c:	ldr	r2, [pc, #3872]	; 12194 <sigaltstack@plt+0x100c>
   11270:	ldr	r1, [pc, #3872]	; 12198 <sigaltstack@plt+0x1010>
   11274:	str	r7, [sp]
   11278:	str	r4, [sp, #8]
   1127c:	str	r0, [sp, #4]
   11280:	mov	r0, r5
   11284:	bl	13db4 <sigaltstack@plt+0x2c2c>
   11288:	bl	12504 <sigaltstack@plt+0x137c>
   1128c:	ldr	r3, [pc, #3788]	; 12160 <sigaltstack@plt+0xfd8>
   11290:	ldr	r2, [sp, #380]	; 0x17c
   11294:	mov	r0, #0
   11298:	ldr	r3, [r3]
   1129c:	cmp	r2, r3
   112a0:	bne	12090 <sigaltstack@plt+0xf08>
   112a4:	add	sp, sp, #388	; 0x184
   112a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   112ac:	cmp	r0, #98	; 0x62
   112b0:	blt	12070 <sigaltstack@plt+0xee8>
   112b4:	cmp	r0, #99	; 0x63
   112b8:	bgt	11428 <sigaltstack@plt+0x2a0>
   112bc:	mov	r3, #1
   112c0:	strb	r3, [r9, #48]	; 0x30
   112c4:	b	111fc <sigaltstack@plt+0x74>
   112c8:	cmp	r0, #256	; 0x100
   112cc:	bne	12070 <sigaltstack@plt+0xee8>
   112d0:	mov	r2, #5
   112d4:	ldr	r1, [pc, #3776]	; 1219c <sigaltstack@plt+0x1014>
   112d8:	mov	r0, r4
   112dc:	bl	10f60 <dcgettext@plt>
   112e0:	ldr	r3, [pc, #3768]	; 121a0 <sigaltstack@plt+0x1018>
   112e4:	ldr	r5, [pc, #3768]	; 121a4 <sigaltstack@plt+0x101c>
   112e8:	ldr	r6, [pc, #3768]	; 121a8 <sigaltstack@plt+0x1020>
   112ec:	ldr	r2, [r3]
   112f0:	ldr	r7, [pc, #3764]	; 121ac <sigaltstack@plt+0x1024>
   112f4:	mov	r1, r0
   112f8:	mov	r0, #1
   112fc:	bl	110c8 <__printf_chk@plt>
   11300:	mov	r2, #5
   11304:	ldr	r1, [pc, #3748]	; 121b0 <sigaltstack@plt+0x1028>
   11308:	mov	r0, r4
   1130c:	bl	10f60 <dcgettext@plt>
   11310:	bl	11014 <puts@plt>
   11314:	mov	r2, #5
   11318:	ldr	r1, [pc, #3732]	; 121b4 <sigaltstack@plt+0x102c>
   1131c:	mov	r0, r4
   11320:	bl	10f60 <dcgettext@plt>
   11324:	ldr	r1, [pc, #3724]	; 121b8 <sigaltstack@plt+0x1030>
   11328:	mov	r2, r0
   1132c:	mov	r0, #1
   11330:	bl	110c8 <__printf_chk@plt>
   11334:	mov	r2, #5
   11338:	ldr	r1, [pc, #3708]	; 121bc <sigaltstack@plt+0x1034>
   1133c:	mov	r0, r4
   11340:	bl	10f60 <dcgettext@plt>
   11344:	ldr	r3, [pc, #3636]	; 12180 <sigaltstack@plt+0xff8>
   11348:	ldr	r1, [r3]
   1134c:	bl	10eb8 <fputs_unlocked@plt>
   11350:	mov	r1, r5
   11354:	mov	r2, #5
   11358:	mov	r0, #0
   1135c:	bl	10f60 <dcgettext@plt>
   11360:	mov	r1, r7
   11364:	mov	r2, r0
   11368:	mov	r0, #1
   1136c:	bl	110c8 <__printf_chk@plt>
   11370:	ldr	r1, [r6, #4]!
   11374:	cmp	r1, #0
   11378:	bne	11354 <sigaltstack@plt+0x1cc>
   1137c:	mov	r5, r1
   11380:	mov	r2, #5
   11384:	ldr	r1, [pc, #3636]	; 121c0 <sigaltstack@plt+0x1038>
   11388:	mov	r0, r5
   1138c:	bl	10f60 <dcgettext@plt>
   11390:	mov	r2, #5
   11394:	ldr	r1, [pc, #3624]	; 121c4 <sigaltstack@plt+0x103c>
   11398:	mov	r4, r0
   1139c:	mov	r0, r5
   113a0:	bl	10f60 <dcgettext@plt>
   113a4:	mov	r2, #5
   113a8:	ldr	r1, [pc, #3608]	; 121c8 <sigaltstack@plt+0x1040>
   113ac:	mov	r6, r0
   113b0:	mov	r0, r5
   113b4:	bl	10f60 <dcgettext@plt>
   113b8:	mov	r3, r6
   113bc:	mov	r2, r4
   113c0:	ldr	r1, [pc, #3588]	; 121cc <sigaltstack@plt+0x1044>
   113c4:	str	r0, [sp]
   113c8:	mov	r0, #1
   113cc:	bl	110c8 <__printf_chk@plt>
   113d0:	bl	13e34 <sigaltstack@plt+0x2cac>
   113d4:	bl	12504 <sigaltstack@plt+0x137c>
   113d8:	b	1128c <sigaltstack@plt+0x104>
   113dc:	cmp	r0, #110	; 0x6e
   113e0:	bne	12070 <sigaltstack@plt+0xee8>
   113e4:	ldr	r3, [pc, #3464]	; 12174 <sigaltstack@plt+0xfec>
   113e8:	ldr	fp, [pc, #3552]	; 121d0 <sigaltstack@plt+0x1048>
   113ec:	str	r3, [sp]
   113f0:	mov	r2, r4
   113f4:	add	r3, sp, #208	; 0xd0
   113f8:	ldr	r0, [fp]
   113fc:	mov	r1, r4
   11400:	bl	141d4 <sigaltstack@plt+0x304c>
   11404:	cmp	r0, #0
   11408:	bne	11914 <sigaltstack@plt+0x78c>
   1140c:	ldr	r3, [pc, #3520]	; 121d4 <sigaltstack@plt+0x104c>
   11410:	ldrd	r0, [sp, #208]	; 0xd0
   11414:	ldrd	sl, [r3]
   11418:	cmp	r1, fp
   1141c:	cmpeq	r0, sl
   11420:	strdcc	r0, [r3]
   11424:	b	111fc <sigaltstack@plt+0x74>
   11428:	cmp	r0, #105	; 0x69
   1142c:	bne	12070 <sigaltstack@plt+0xee8>
   11430:	ldr	fp, [pc, #3480]	; 121d0 <sigaltstack@plt+0x1048>
   11434:	mov	r2, #58	; 0x3a
   11438:	mov	r1, fp
   1143c:	mov	r0, r4
   11440:	bl	12378 <sigaltstack@plt+0x11f0>
   11444:	ldr	r3, [fp]
   11448:	add	r2, r3, #1
   1144c:	str	r2, [fp]
   11450:	ldrb	r3, [r3]
   11454:	cmp	r3, #58	; 0x3a
   11458:	beq	114a8 <sigaltstack@plt+0x320>
   1145c:	ldrd	r0, [r9]
   11460:	ldrd	r2, [r9, #8]
   11464:	cmp	r2, r0
   11468:	sbcs	r3, r3, r1
   1146c:	strdlt	r0, [r9, #8]
   11470:	b	111fc <sigaltstack@plt+0x74>
   11474:	ldr	r3, [r9, #52]	; 0x34
   11478:	cmp	r3, #1
   1147c:	bhi	12094 <sigaltstack@plt+0xf0c>
   11480:	mov	r3, #1
   11484:	str	r3, [r9, #52]	; 0x34
   11488:	b	111fc <sigaltstack@plt+0x74>
   1148c:	ldr	r3, [r9, #52]	; 0x34
   11490:	cmp	r3, #0
   11494:	cmpne	r3, #3
   11498:	bne	12094 <sigaltstack@plt+0xf0c>
   1149c:	mov	r3, #3
   114a0:	str	r3, [r9, #52]	; 0x34
   114a4:	b	111fc <sigaltstack@plt+0x74>
   114a8:	mov	r2, r4
   114ac:	mov	r1, fp
   114b0:	mov	r0, #1
   114b4:	bl	12378 <sigaltstack@plt+0x11f0>
   114b8:	b	111fc <sigaltstack@plt+0x74>
   114bc:	ldr	r4, [pc, #3348]	; 121d8 <sigaltstack@plt+0x1050>
   114c0:	ldr	r3, [r4]
   114c4:	cmp	r3, r6
   114c8:	beq	12120 <sigaltstack@plt+0xf98>
   114cc:	add	r2, r3, #1
   114d0:	cmp	r2, r6
   114d4:	ldr	r1, [r5, r3, lsl #2]
   114d8:	str	r2, [r4]
   114dc:	lsl	r2, r3, #2
   114e0:	addlt	r2, r5, r2
   114e4:	addlt	r3, r3, #2
   114e8:	ldrlt	r2, [r2, #4]
   114ec:	ldr	fp, [pc, #3208]	; 1217c <sigaltstack@plt+0xff4>
   114f0:	strlt	r3, [r4]
   114f4:	ldr	r3, [r4]
   114f8:	ldrge	r2, [pc, #3292]	; 121dc <sigaltstack@plt+0x1054>
   114fc:	cmp	r6, r3
   11500:	str	r1, [fp, #56]	; 0x38
   11504:	str	r2, [fp, #60]	; 0x3c
   11508:	ble	11564 <sigaltstack@plt+0x3dc>
   1150c:	ldr	r0, [r5, r3, lsl #2]
   11510:	mov	r2, #0
   11514:	add	r3, r3, #1
   11518:	str	r0, [sp, #208]	; 0xd0
   1151c:	add	r1, sp, #208	; 0xd0
   11520:	mov	r0, r2
   11524:	str	r3, [r4]
   11528:	bl	12378 <sigaltstack@plt+0x11f0>
   1152c:	ldr	r3, [r4]
   11530:	cmp	r3, r6
   11534:	bge	11564 <sigaltstack@plt+0x3dc>
   11538:	ldr	r0, [r5, r3, lsl #2]
   1153c:	add	r1, sp, #208	; 0xd0
   11540:	add	r3, r3, #1
   11544:	str	r0, [sp, #208]	; 0xd0
   11548:	mov	r2, #0
   1154c:	mov	r0, #1
   11550:	str	r3, [r4]
   11554:	bl	12378 <sigaltstack@plt+0x11f0>
   11558:	ldr	r3, [r4]
   1155c:	cmp	r3, r6
   11560:	blt	12114 <sigaltstack@plt+0xf8c>
   11564:	ldr	r6, [pc, #3184]	; 121dc <sigaltstack@plt+0x1054>
   11568:	mov	r4, #0
   1156c:	ldr	r7, [fp, #60]	; 0x3c
   11570:	mov	r1, r6
   11574:	mov	r0, r7
   11578:	bl	10ee8 <strcmp@plt>
   1157c:	cmp	r0, #0
   11580:	movne	r5, r4
   11584:	eoreq	r5, r4, #1
   11588:	cmp	r4, #0
   1158c:	beq	115a4 <sigaltstack@plt+0x41c>
   11590:	ldrd	r0, [fp]
   11594:	ldrd	r2, [fp, #8]
   11598:	cmp	r1, r3
   1159c:	cmpeq	r0, r2
   115a0:	beq	11d24 <sigaltstack@plt+0xb9c>
   115a4:	lsl	r9, r5, #2
   115a8:	add	r7, fp, r9
   115ac:	mov	r1, r6
   115b0:	ldr	r8, [r7, #56]	; 0x38
   115b4:	mov	r0, r8
   115b8:	bl	10ee8 <strcmp@plt>
   115bc:	subs	r1, r0, #0
   115c0:	streq	r1, [r7, #40]	; 0x28
   115c4:	bne	11cf0 <sigaltstack@plt+0xb68>
   115c8:	ldr	r3, [pc, #3088]	; 121e0 <sigaltstack@plt+0x1058>
   115cc:	mov	r2, #104	; 0x68
   115d0:	mov	r0, #3
   115d4:	mla	r2, r2, r5, r3
   115d8:	bl	10fb4 <__fxstat64@plt>
   115dc:	cmp	r0, #0
   115e0:	bne	11f8c <sigaltstack@plt+0xe04>
   115e4:	cmp	r4, #1
   115e8:	bne	11818 <sigaltstack@plt+0x690>
   115ec:	ldr	r1, [pc, #3056]	; 121e4 <sigaltstack@plt+0x105c>
   115f0:	ldrd	r2, [fp, #160]	; 0xa0
   115f4:	ldrd	r0, [r1, #-8]
   115f8:	cmp	r3, r1
   115fc:	cmpeq	r2, r0
   11600:	beq	11820 <sigaltstack@plt+0x698>
   11604:	ldr	r3, [fp, #80]	; 0x50
   11608:	and	r3, r3, #61440	; 0xf000
   1160c:	cmp	r3, #24576	; 0x6000
   11610:	beq	118d0 <sigaltstack@plt+0x748>
   11614:	cmp	r3, #8192	; 0x2000
   11618:	beq	11e0c <sigaltstack@plt+0xc84>
   1161c:	ldr	r3, [fp, #52]	; 0x34
   11620:	cmp	r3, #3
   11624:	bne	118ec <sigaltstack@plt+0x764>
   11628:	ldr	r3, [fp, #80]	; 0x50
   1162c:	and	r3, r3, #61440	; 0xf000
   11630:	cmp	r3, #32768	; 0x8000
   11634:	bne	11648 <sigaltstack@plt+0x4c0>
   11638:	ldr	r3, [fp, #184]	; 0xb8
   1163c:	and	r3, r3, #61440	; 0xf000
   11640:	cmp	r3, #32768	; 0x8000
   11644:	beq	11fc0 <sigaltstack@plt+0xe38>
   11648:	ldr	r4, [pc, #2948]	; 121d4 <sigaltstack@plt+0x104c>
   1164c:	mvn	r2, #-2147483644	; 0x80000004
   11650:	ldr	r1, [fp, #224]	; 0xe0
   11654:	ldr	r0, [fp, #120]	; 0x78
   11658:	bl	14c38 <sigaltstack@plt+0x3ab0>
   1165c:	add	r5, r0, #7
   11660:	str	r0, [fp, #272]	; 0x110
   11664:	lsr	r0, r5, #2
   11668:	bic	r5, r5, #3
   1166c:	lsl	r0, r0, #3
   11670:	bl	13eb8 <sigaltstack@plt+0x2d30>
   11674:	ldr	r3, [fp, #52]	; 0x34
   11678:	cmp	r3, #1
   1167c:	add	r2, r0, r5
   11680:	str	r2, [sp, #48]	; 0x30
   11684:	str	r2, [fp, #280]	; 0x118
   11688:	ldrd	r2, [r4]
   1168c:	mov	r8, r0
   11690:	str	r0, [fp, #276]	; 0x114
   11694:	strd	r2, [sp, #24]
   11698:	beq	11d88 <sigaltstack@plt+0xc00>
   1169c:	ldr	sl, [pc, #2776]	; 1217c <sigaltstack@plt+0xff4>
   116a0:	mov	r3, #0
   116a4:	add	r9, sl, #40	; 0x28
   116a8:	str	r3, [sp, #52]	; 0x34
   116ac:	ldrd	r4, [sl], #8
   116b0:	orrs	r3, r4, r5
   116b4:	bne	11c58 <sigaltstack@plt+0xad0>
   116b8:	ldr	r1, [sp, #52]	; 0x34
   116bc:	cmp	r1, #1
   116c0:	bne	11c4c <sigaltstack@plt+0xac4>
   116c4:	mov	r3, #0
   116c8:	mov	r2, #1
   116cc:	mov	sl, r8
   116d0:	strd	r2, [sp, #32]
   116d4:	strd	r2, [sp, #56]	; 0x38
   116d8:	mov	r3, #0
   116dc:	str	r3, [sp, #64]	; 0x40
   116e0:	str	r1, [sp, #76]	; 0x4c
   116e4:	ldrd	r0, [sp, #24]
   116e8:	mvn	r3, #0
   116ec:	mvn	r2, #0
   116f0:	cmp	r1, r3
   116f4:	cmpeq	r0, r2
   116f8:	ldr	r4, [fp, #272]	; 0x110
   116fc:	beq	11734 <sigaltstack@plt+0x5ac>
   11700:	mov	r3, #0
   11704:	cmp	r1, r3
   11708:	cmpeq	r0, r4
   1170c:	mov	r2, r4
   11710:	ldr	r1, [sp, #24]
   11714:	movcc	r4, r0
   11718:	movcc	r2, r4
   1171c:	movcc	r3, #0
   11720:	subs	r1, r1, r2
   11724:	str	r1, [sp, #24]
   11728:	ldr	r1, [sp, #28]
   1172c:	sbc	r3, r1, r3
   11730:	str	r3, [sp, #28]
   11734:	mov	r2, r4
   11738:	mov	r1, sl
   1173c:	ldr	r0, [fp, #40]	; 0x28
   11740:	bl	14bdc <sigaltstack@plt+0x3a54>
   11744:	cmn	r0, #1
   11748:	mov	r9, r0
   1174c:	beq	12148 <sigaltstack@plt+0xfc0>
   11750:	mov	r2, r4
   11754:	ldr	r1, [sp, #48]	; 0x30
   11758:	ldr	r0, [fp, #44]	; 0x2c
   1175c:	bl	14bdc <sigaltstack@plt+0x3a54>
   11760:	cmn	r0, #1
   11764:	mov	r7, r0
   11768:	beq	12130 <sigaltstack@plt+0xfa8>
   1176c:	cmp	r9, r0
   11770:	movcs	r8, r0
   11774:	movcc	r8, r9
   11778:	mov	r2, r8
   1177c:	ldr	r1, [sp, #48]	; 0x30
   11780:	mov	r0, sl
   11784:	bl	10f54 <memcmp@plt>
   11788:	ldr	r2, [fp, #52]	; 0x34
   1178c:	clz	r3, r2
   11790:	lsr	r3, r3, #5
   11794:	cmp	r0, #0
   11798:	bne	11994 <sigaltstack@plt+0x80c>
   1179c:	ldrd	r0, [sp, #32]
   117a0:	cmp	r8, #0
   117a4:	moveq	r3, #0
   117a8:	adds	r0, r0, r8
   117ac:	adc	r1, r1, #0
   117b0:	cmp	r3, #0
   117b4:	strd	r0, [sp, #32]
   117b8:	bne	11920 <sigaltstack@plt+0x798>
   117bc:	cmp	r9, r7
   117c0:	bne	11a3c <sigaltstack@plt+0x8b4>
   117c4:	ldr	r3, [fp, #272]	; 0x110
   117c8:	cmp	r9, r3
   117cc:	beq	116e4 <sigaltstack@plt+0x55c>
   117d0:	ldr	r3, [sp, #64]	; 0x40
   117d4:	adds	r8, r3, #0
   117d8:	movne	r8, #1
   117dc:	ldr	r0, [fp, #40]	; 0x28
   117e0:	bl	11170 <close@plt>
   117e4:	cmp	r0, #0
   117e8:	bne	120a0 <sigaltstack@plt+0xf18>
   117ec:	ldr	r0, [fp, #44]	; 0x2c
   117f0:	bl	11170 <close@plt>
   117f4:	cmp	r0, #0
   117f8:	bne	11cd0 <sigaltstack@plt+0xb48>
   117fc:	cmp	r8, #0
   11800:	beq	11810 <sigaltstack@plt+0x688>
   11804:	ldr	r3, [fp, #52]	; 0x34
   11808:	cmp	r3, #1
   1180c:	bls	11f10 <sigaltstack@plt+0xd88>
   11810:	mov	r0, r8
   11814:	bl	11068 <exit@plt>
   11818:	mov	r4, #1
   1181c:	b	1156c <sigaltstack@plt+0x3e4>
   11820:	ldrd	r0, [fp, #64]	; 0x40
   11824:	ldrd	r2, [fp, #168]	; 0xa8
   11828:	cmp	r1, r3
   1182c:	cmpeq	r0, r2
   11830:	bne	11604 <sigaltstack@plt+0x47c>
   11834:	ldr	r2, [fp, #80]	; 0x50
   11838:	ldr	r3, [fp, #184]	; 0xb8
   1183c:	cmp	r2, r3
   11840:	bne	1161c <sigaltstack@plt+0x494>
   11844:	ldr	r2, [fp, #84]	; 0x54
   11848:	ldr	r3, [fp, #188]	; 0xbc
   1184c:	cmp	r2, r3
   11850:	bne	1161c <sigaltstack@plt+0x494>
   11854:	ldr	r2, [fp, #88]	; 0x58
   11858:	ldr	r3, [fp, #192]	; 0xc0
   1185c:	cmp	r2, r3
   11860:	bne	1161c <sigaltstack@plt+0x494>
   11864:	ldr	r2, [fp, #92]	; 0x5c
   11868:	ldr	r3, [fp, #196]	; 0xc4
   1186c:	cmp	r2, r3
   11870:	bne	1161c <sigaltstack@plt+0x494>
   11874:	ldrd	r0, [fp, #112]	; 0x70
   11878:	ldrd	r2, [fp, #216]	; 0xd8
   1187c:	cmp	r1, r3
   11880:	cmpeq	r0, r2
   11884:	bne	1161c <sigaltstack@plt+0x494>
   11888:	ldr	r2, [fp, #144]	; 0x90
   1188c:	ldr	r3, [fp, #248]	; 0xf8
   11890:	cmp	r2, r3
   11894:	bne	1161c <sigaltstack@plt+0x494>
   11898:	ldr	r2, [fp, #152]	; 0x98
   1189c:	ldr	r3, [fp, #256]	; 0x100
   118a0:	cmp	r2, r3
   118a4:	bne	1161c <sigaltstack@plt+0x494>
   118a8:	mov	r0, #0
   118ac:	bl	12434 <sigaltstack@plt+0x12ac>
   118b0:	mov	r4, r0
   118b4:	mov	r0, #1
   118b8:	mov	r5, r1
   118bc:	bl	12434 <sigaltstack@plt+0x12ac>
   118c0:	cmp	r5, r1
   118c4:	cmpeq	r4, r0
   118c8:	bne	1161c <sigaltstack@plt+0x494>
   118cc:	b	1128c <sigaltstack@plt+0x104>
   118d0:	ldr	r3, [fp, #184]	; 0xb8
   118d4:	and	r3, r3, #61440	; 0xf000
   118d8:	cmp	r3, #24576	; 0x6000
   118dc:	beq	11e1c <sigaltstack@plt+0xc94>
   118e0:	ldr	r3, [fp, #52]	; 0x34
   118e4:	cmp	r3, #3
   118e8:	beq	11648 <sigaltstack@plt+0x4c0>
   118ec:	add	r2, sp, #104	; 0x68
   118f0:	mov	r1, #1
   118f4:	mov	r0, #3
   118f8:	bl	10fb4 <__fxstat64@plt>
   118fc:	cmp	r0, #0
   11900:	beq	11e98 <sigaltstack@plt+0xd10>
   11904:	ldr	r3, [fp, #52]	; 0x34
   11908:	cmp	r3, #3
   1190c:	bne	11648 <sigaltstack@plt+0x4c0>
   11910:	b	11628 <sigaltstack@plt+0x4a0>
   11914:	ldr	r1, [fp]
   11918:	ldr	r0, [pc, #2248]	; 121e8 <sigaltstack@plt+0x1060>
   1191c:	bl	12314 <sigaltstack@plt+0x118c>
   11920:	str	r8, [sp, #40]	; 0x28
   11924:	ldr	r2, [sp, #40]	; 0x28
   11928:	mov	r3, #10
   1192c:	add	r5, sl, r2
   11930:	ldrb	r6, [sl, r2]
   11934:	mov	r0, sl
   11938:	strb	r3, [sl, r2]
   1193c:	mov	r4, #0
   11940:	b	1194c <sigaltstack@plt+0x7c4>
   11944:	add	r4, r4, #1
   11948:	add	r0, r0, #1
   1194c:	mov	r1, #10
   11950:	bl	10fa8 <rawmemchr@plt>
   11954:	cmp	r5, r0
   11958:	bne	11944 <sigaltstack@plt+0x7bc>
   1195c:	ldrd	r2, [sp, #56]	; 0x38
   11960:	strb	r6, [r5]
   11964:	adds	r2, r2, r4
   11968:	adc	r3, r3, #0
   1196c:	strd	r2, [sp, #56]	; 0x38
   11970:	ldr	r3, [sp, #40]	; 0x28
   11974:	cmp	r8, r3
   11978:	bhi	11bec <sigaltstack@plt+0xa64>
   1197c:	ldrb	r3, [r5, #-1]
   11980:	sub	r3, r3, #10
   11984:	clz	r3, r3
   11988:	lsr	r3, r3, #5
   1198c:	str	r3, [sp, #76]	; 0x4c
   11990:	b	117bc <sigaltstack@plt+0x634>
   11994:	ldr	ip, [sp, #48]	; 0x30
   11998:	mov	r5, sl
   1199c:	mov	r0, ip
   119a0:	ldrb	r1, [ip, r9]
   119a4:	mvn	r1, r1
   119a8:	strb	r1, [sl, r9]
   119ac:	ldrb	r1, [sl, r7]
   119b0:	mvn	r1, r1
   119b4:	strb	r1, [ip, r7]
   119b8:	mov	ip, r5
   119bc:	ldr	lr, [r0]
   119c0:	ldr	r4, [ip], #4
   119c4:	mov	r1, r0
   119c8:	cmp	r4, lr
   119cc:	add	r0, r0, #4
   119d0:	beq	11e04 <sigaltstack@plt+0xc7c>
   119d4:	sub	r1, r1, #1
   119d8:	mov	r4, r5
   119dc:	ldrb	r0, [r1, #1]!
   119e0:	ldrb	ip, [r4], #1
   119e4:	cmp	ip, r0
   119e8:	beq	11dfc <sigaltstack@plt+0xc74>
   119ec:	ldrd	r0, [sp, #32]
   119f0:	sub	ip, r5, sl
   119f4:	cmp	ip, #0
   119f8:	moveq	r3, #0
   119fc:	adds	r0, r0, ip
   11a00:	adc	r1, r1, #0
   11a04:	cmp	r3, #0
   11a08:	str	ip, [sp, #40]	; 0x28
   11a0c:	strd	r0, [sp, #32]
   11a10:	bne	11924 <sigaltstack@plt+0x79c>
   11a14:	ldr	r3, [sp, #40]	; 0x28
   11a18:	cmp	r8, r3
   11a1c:	bls	117bc <sigaltstack@plt+0x634>
   11a20:	cmp	r2, #3
   11a24:	ldrls	pc, [pc, r2, lsl #2]
   11a28:	b	117bc <sigaltstack@plt+0x634>
   11a2c:	andeq	r1, r1, ip, ror #23
   11a30:	andeq	r1, r1, r8, lsl #22
   11a34:	strdeq	r1, [r1], -r4
   11a38:	andeq	r1, r1, ip, ror #21
   11a3c:	ldr	r3, [fp, #52]	; 0x34
   11a40:	cmp	r3, #3
   11a44:	beq	11aec <sigaltstack@plt+0x964>
   11a48:	cmp	r9, r7
   11a4c:	ldrd	r0, [sp, #32]
   11a50:	movls	r3, #0
   11a54:	movhi	r3, #1
   11a58:	cmp	r1, #0
   11a5c:	add	r3, fp, r3, lsl #2
   11a60:	cmpeq	r0, #1
   11a64:	ldr	r4, [r3, #56]	; 0x38
   11a68:	beq	120ac <sigaltstack@plt+0xf24>
   11a6c:	ldrd	r2, [sp, #32]
   11a70:	subs	r0, r2, #1
   11a74:	sbc	r1, r3, #0
   11a78:	add	r2, sp, #332	; 0x14c
   11a7c:	bl	12760 <sigaltstack@plt+0x15d8>
   11a80:	ldr	r8, [fp, #52]	; 0x34
   11a84:	cmp	r8, #0
   11a88:	mov	r5, r0
   11a8c:	bne	120e0 <sigaltstack@plt+0xf58>
   11a90:	ldrd	r0, [sp, #56]	; 0x38
   11a94:	ldr	r6, [sp, #76]	; 0x4c
   11a98:	add	r2, sp, #356	; 0x164
   11a9c:	subs	r0, r0, r6
   11aa0:	sbc	r1, r1, #0
   11aa4:	bl	12760 <sigaltstack@plt+0x15d8>
   11aa8:	cmp	r6, #0
   11aac:	ldr	r3, [pc, #1848]	; 121ec <sigaltstack@plt+0x1064>
   11ab0:	movne	r2, #5
   11ab4:	ldrne	r1, [pc, #1844]	; 121f0 <sigaltstack@plt+0x1068>
   11ab8:	moveq	r2, #5
   11abc:	ldreq	r1, [pc, #1840]	; 121f4 <sigaltstack@plt+0x106c>
   11ac0:	ldr	r6, [r3]
   11ac4:	mov	r7, r0
   11ac8:	movne	r0, r8
   11acc:	ldreq	r0, [sp, #76]	; 0x4c
   11ad0:	bl	10f60 <dcgettext@plt>
   11ad4:	stm	sp, {r5, r7}
   11ad8:	mov	r3, r4
   11adc:	mov	r1, #1
   11ae0:	mov	r2, r0
   11ae4:	mov	r0, r6
   11ae8:	bl	110e0 <__fprintf_chk@plt>
   11aec:	mov	r8, #1
   11af0:	b	117dc <sigaltstack@plt+0x654>
   11af4:	cmp	r9, r7
   11af8:	moveq	r3, #1
   11afc:	streq	r3, [sp, #64]	; 0x40
   11b00:	bne	11aec <sigaltstack@plt+0x964>
   11b04:	b	117d0 <sigaltstack@plt+0x648>
   11b08:	ldr	r3, [sp, #48]	; 0x30
   11b0c:	ldr	r2, [sp, #40]	; 0x28
   11b10:	str	sl, [sp, #88]	; 0x58
   11b14:	add	r1, r3, r2
   11b18:	add	r3, sl, r8
   11b1c:	str	r3, [sp, #64]	; 0x40
   11b20:	ldrd	r2, [sp, #32]
   11b24:	str	r9, [sp, #92]	; 0x5c
   11b28:	str	r7, [sp, #96]	; 0x60
   11b2c:	mov	r6, r2
   11b30:	str	r8, [sp, #100]	; 0x64
   11b34:	mov	sl, r1
   11b38:	mov	r9, r3
   11b3c:	b	11b6c <sigaltstack@plt+0x9e4>
   11b40:	stm	sp, {r7, r8}
   11b44:	ldr	r2, [sp, #68]	; 0x44
   11b48:	ldr	r1, [pc, #1704]	; 121f8 <sigaltstack@plt+0x1070>
   11b4c:	mov	r0, #1
   11b50:	bl	110c8 <__printf_chk@plt>
   11b54:	ldr	r3, [sp, #64]	; 0x40
   11b58:	adds	r6, r6, #1
   11b5c:	adc	r9, r9, #0
   11b60:	cmp	r3, r4
   11b64:	beq	11d3c <sigaltstack@plt+0xbb4>
   11b68:	add	r4, r4, #1
   11b6c:	ldrb	r7, [r5]
   11b70:	ldrb	r8, [sl], #1
   11b74:	mov	r5, r4
   11b78:	cmp	r7, r8
   11b7c:	beq	11b54 <sigaltstack@plt+0x9cc>
   11b80:	add	r2, sp, #356	; 0x164
   11b84:	mov	r0, r6
   11b88:	mov	r1, r9
   11b8c:	bl	12760 <sigaltstack@plt+0x15d8>
   11b90:	ldrb	r2, [fp, #48]	; 0x30
   11b94:	cmp	r2, #0
   11b98:	mov	r3, r0
   11b9c:	beq	11b40 <sigaltstack@plt+0x9b8>
   11ba0:	add	r2, sp, #324	; 0x144
   11ba4:	str	r0, [sp, #72]	; 0x48
   11ba8:	mov	r1, r7
   11bac:	mov	r0, r2
   11bb0:	bl	12490 <sigaltstack@plt+0x1308>
   11bb4:	add	r0, sp, #332	; 0x14c
   11bb8:	mov	r1, r8
   11bbc:	bl	12490 <sigaltstack@plt+0x1308>
   11bc0:	add	r2, sp, #324	; 0x144
   11bc4:	add	r3, sp, #332	; 0x14c
   11bc8:	str	r2, [sp, #4]
   11bcc:	str	r3, [sp, #12]
   11bd0:	str	r8, [sp, #8]
   11bd4:	str	r7, [sp]
   11bd8:	ldrd	r2, [sp, #68]	; 0x44
   11bdc:	ldr	r1, [pc, #1560]	; 121fc <sigaltstack@plt+0x1074>
   11be0:	mov	r0, #1
   11be4:	bl	110c8 <__printf_chk@plt>
   11be8:	b	11b54 <sigaltstack@plt+0x9cc>
   11bec:	ldrd	r0, [sp, #32]
   11bf0:	add	r2, sp, #332	; 0x14c
   11bf4:	bl	12760 <sigaltstack@plt+0x15d8>
   11bf8:	add	r2, sp, #356	; 0x164
   11bfc:	mov	r4, r0
   11c00:	ldrd	r0, [sp, #56]	; 0x38
   11c04:	bl	12760 <sigaltstack@plt+0x15d8>
   11c08:	mov	r5, r0
   11c0c:	ldrb	r0, [fp, #48]	; 0x30
   11c10:	cmp	r0, #0
   11c14:	bne	11e34 <sigaltstack@plt+0xcac>
   11c18:	ldr	r7, [pc, #1504]	; 12200 <sigaltstack@plt+0x1078>
   11c1c:	mov	r2, #5
   11c20:	mov	r1, r7
   11c24:	bl	10f60 <dcgettext@plt>
   11c28:	cmp	r0, r7
   11c2c:	mov	r6, r0
   11c30:	beq	11fa8 <sigaltstack@plt+0xe20>
   11c34:	strd	r4, [sp]
   11c38:	mov	r1, r6
   11c3c:	ldrd	r2, [fp, #56]	; 0x38
   11c40:	mov	r0, #1
   11c44:	bl	110c8 <__printf_chk@plt>
   11c48:	b	11aec <sigaltstack@plt+0x964>
   11c4c:	mov	r3, #1
   11c50:	str	r3, [sp, #52]	; 0x34
   11c54:	b	116ac <sigaltstack@plt+0x524>
   11c58:	ldr	r0, [sp, #52]	; 0x34
   11c5c:	bl	12434 <sigaltstack@plt+0x12ac>
   11c60:	mvn	r3, #0
   11c64:	mvn	r2, #0
   11c68:	cmp	r1, r3
   11c6c:	cmpeq	r0, r2
   11c70:	bne	116b8 <sigaltstack@plt+0x530>
   11c74:	str	sl, [sp, #32]
   11c78:	mov	sl, r8
   11c7c:	ldr	r8, [sp, #52]	; 0x34
   11c80:	b	11c94 <sigaltstack@plt+0xb0c>
   11c84:	subs	r4, r4, r6
   11c88:	sbc	r5, r5, #0
   11c8c:	orrs	r3, r4, r5
   11c90:	beq	11f80 <sigaltstack@plt+0xdf8>
   11c94:	ldr	r6, [fp, #272]	; 0x110
   11c98:	mov	r7, #0
   11c9c:	cmp	r4, r6
   11ca0:	sbcs	r3, r5, r7
   11ca4:	movlt	r6, r4
   11ca8:	mov	r2, r6
   11cac:	mov	r1, sl
   11cb0:	ldr	r0, [r9, r8, lsl #2]
   11cb4:	bl	14bdc <sigaltstack@plt+0x3a54>
   11cb8:	cmp	r6, r0
   11cbc:	beq	11c84 <sigaltstack@plt+0xafc>
   11cc0:	cmn	r0, #1
   11cc4:	mov	r8, sl
   11cc8:	ldr	sl, [sp, #32]
   11ccc:	bne	116b8 <sigaltstack@plt+0x530>
   11cd0:	bl	11098 <__errno_location@plt>
   11cd4:	ldr	r3, [sp, #52]	; 0x34
   11cd8:	ldr	r2, [pc, #1316]	; 12204 <sigaltstack@plt+0x107c>
   11cdc:	add	r3, fp, r3, lsl #2
   11ce0:	ldr	r3, [r3, #56]	; 0x38
   11ce4:	ldr	r1, [r0]
   11ce8:	mov	r0, #2
   11cec:	bl	10ffc <error@plt>
   11cf0:	mov	r2, #0
   11cf4:	mov	r1, r2
   11cf8:	mov	r0, r8
   11cfc:	bl	11008 <open64@plt>
   11d00:	cmp	r0, #0
   11d04:	mov	r1, r0
   11d08:	str	r0, [r7, #40]	; 0x28
   11d0c:	bge	115c8 <sigaltstack@plt+0x440>
   11d10:	ldr	r3, [fp, #52]	; 0x34
   11d14:	cmp	r3, #3
   11d18:	bne	11f8c <sigaltstack@plt+0xe04>
   11d1c:	mov	r0, #2
   11d20:	bl	11068 <exit@plt>
   11d24:	mov	r1, r7
   11d28:	ldr	r0, [fp, #56]	; 0x38
   11d2c:	bl	10ee8 <strcmp@plt>
   11d30:	cmp	r0, #0
   11d34:	bne	115a4 <sigaltstack@plt+0x41c>
   11d38:	b	1128c <sigaltstack@plt+0x104>
   11d3c:	ldrd	r0, [sp, #32]
   11d40:	ldr	r8, [sp, #100]	; 0x64
   11d44:	ldr	sl, [sp, #88]	; 0x58
   11d48:	adds	r3, r0, #1
   11d4c:	adc	r2, r1, #0
   11d50:	str	r3, [sp, #80]	; 0x50
   11d54:	str	r2, [sp, #84]	; 0x54
   11d58:	ldrd	r0, [sp, #80]	; 0x50
   11d5c:	ldr	r2, [sp, #40]	; 0x28
   11d60:	sub	r3, r8, #1
   11d64:	sub	r3, r3, r2
   11d68:	adds	r0, r0, r3
   11d6c:	adc	r1, r1, #0
   11d70:	mvn	r3, #0
   11d74:	ldr	r9, [sp, #92]	; 0x5c
   11d78:	ldr	r7, [sp, #96]	; 0x60
   11d7c:	strd	r0, [sp, #32]
   11d80:	str	r3, [sp, #64]	; 0x40
   11d84:	b	117bc <sigaltstack@plt+0x634>
   11d88:	mov	r5, r3
   11d8c:	cmp	r2, #0
   11d90:	sbcs	r3, r5, #0
   11d94:	ldr	r3, [fp, #80]	; 0x50
   11d98:	mov	r4, r2
   11d9c:	and	r3, r3, #61440	; 0xf000
   11da0:	mvnlt	r4, #0
   11da4:	mvnlt	r5, #-2147483648	; 0x80000000
   11da8:	cmp	r3, #32768	; 0x8000
   11dac:	beq	11f4c <sigaltstack@plt+0xdc4>
   11db0:	ldr	r3, [fp, #184]	; 0xb8
   11db4:	and	r3, r3, #61440	; 0xf000
   11db8:	cmp	r3, #32768	; 0x8000
   11dbc:	beq	11f18 <sigaltstack@plt+0xd90>
   11dc0:	mov	r3, #1
   11dc4:	str	r3, [sp, #68]	; 0x44
   11dc8:	mov	r0, r4
   11dcc:	mov	r1, r5
   11dd0:	mov	r3, #0
   11dd4:	mov	r2, #10
   11dd8:	bl	16ea4 <sigaltstack@plt+0x5d1c>
   11ddc:	mov	r4, r0
   11de0:	mov	r5, r1
   11de4:	orrs	r3, r4, r5
   11de8:	beq	1169c <sigaltstack@plt+0x514>
   11dec:	ldr	r3, [sp, #68]	; 0x44
   11df0:	add	r3, r3, #1
   11df4:	str	r3, [sp, #68]	; 0x44
   11df8:	b	11dc8 <sigaltstack@plt+0xc40>
   11dfc:	mov	r5, r4
   11e00:	b	119d8 <sigaltstack@plt+0x850>
   11e04:	mov	r5, ip
   11e08:	b	119b8 <sigaltstack@plt+0x830>
   11e0c:	ldr	r3, [fp, #184]	; 0xb8
   11e10:	and	r3, r3, #61440	; 0xf000
   11e14:	cmp	r3, #8192	; 0x2000
   11e18:	bne	118e0 <sigaltstack@plt+0x758>
   11e1c:	ldrd	r0, [fp, #96]	; 0x60
   11e20:	ldrd	r2, [fp, #200]	; 0xc8
   11e24:	cmp	r1, r3
   11e28:	cmpeq	r0, r2
   11e2c:	bne	1161c <sigaltstack@plt+0x494>
   11e30:	b	11834 <sigaltstack@plt+0x6ac>
   11e34:	ldr	r3, [sp, #40]	; 0x28
   11e38:	ldr	r2, [sp, #48]	; 0x30
   11e3c:	add	r9, sp, #316	; 0x13c
   11e40:	ldrb	r6, [sl, r3]
   11e44:	ldrb	r7, [r2, r3]
   11e48:	mov	r0, r9
   11e4c:	mov	r1, r6
   11e50:	add	r8, sp, #324	; 0x144
   11e54:	bl	12490 <sigaltstack@plt+0x1308>
   11e58:	mov	r1, r7
   11e5c:	mov	r0, r8
   11e60:	bl	12490 <sigaltstack@plt+0x1308>
   11e64:	mov	r2, #5
   11e68:	ldr	r1, [pc, #920]	; 12208 <sigaltstack@plt+0x1080>
   11e6c:	mov	r0, #0
   11e70:	bl	10f60 <dcgettext@plt>
   11e74:	str	r9, [sp, #12]
   11e78:	str	r8, [sp, #20]
   11e7c:	str	r7, [sp, #16]
   11e80:	stm	sp, {r4, r5, r6}
   11e84:	ldrd	r2, [fp, #56]	; 0x38
   11e88:	mov	r1, r0
   11e8c:	mov	r0, #1
   11e90:	bl	110c8 <__printf_chk@plt>
   11e94:	b	11aec <sigaltstack@plt+0x964>
   11e98:	add	r2, sp, #208	; 0xd0
   11e9c:	ldr	r1, [pc, #872]	; 1220c <sigaltstack@plt+0x1084>
   11ea0:	mov	r0, #3
   11ea4:	bl	1114c <__xstat64@plt>
   11ea8:	cmp	r0, #0
   11eac:	bne	11904 <sigaltstack@plt+0x77c>
   11eb0:	add	r3, sp, #304	; 0x130
   11eb4:	ldrd	r0, [sp, #200]	; 0xc8
   11eb8:	ldrd	r2, [r3]
   11ebc:	cmp	r1, r3
   11ec0:	cmpeq	r0, r2
   11ec4:	beq	12058 <sigaltstack@plt+0xed0>
   11ec8:	ldr	r3, [sp, #120]	; 0x78
   11ecc:	and	r3, r3, #61440	; 0xf000
   11ed0:	cmp	r3, #24576	; 0x6000
   11ed4:	beq	1207c <sigaltstack@plt+0xef4>
   11ed8:	cmp	r3, #8192	; 0x2000
   11edc:	bne	11904 <sigaltstack@plt+0x77c>
   11ee0:	ldr	r3, [sp, #224]	; 0xe0
   11ee4:	and	r3, r3, #61440	; 0xf000
   11ee8:	cmp	r3, #8192	; 0x2000
   11eec:	bne	11904 <sigaltstack@plt+0x77c>
   11ef0:	ldrd	r0, [sp, #136]	; 0x88
   11ef4:	ldrd	r2, [sp, #240]	; 0xf0
   11ef8:	cmp	r1, r3
   11efc:	cmpeq	r0, r2
   11f00:	bne	11904 <sigaltstack@plt+0x77c>
   11f04:	mov	r3, #2
   11f08:	str	r3, [fp, #52]	; 0x34
   11f0c:	b	11904 <sigaltstack@plt+0x77c>
   11f10:	bl	12504 <sigaltstack@plt+0x137c>
   11f14:	b	11810 <sigaltstack@plt+0x688>
   11f18:	mov	r0, #1
   11f1c:	ldrd	r6, [fp, #216]	; 0xd8
   11f20:	bl	12434 <sigaltstack@plt+0x12ac>
   11f24:	subs	r3, r6, r0
   11f28:	str	r3, [sp, #40]	; 0x28
   11f2c:	sbc	r3, r7, r1
   11f30:	str	r3, [sp, #44]	; 0x2c
   11f34:	ldrd	r2, [sp, #40]	; 0x28
   11f38:	cmp	r2, r4
   11f3c:	sbcs	r1, r3, r5
   11f40:	movlt	r4, r2
   11f44:	movlt	r5, r3
   11f48:	b	11dc0 <sigaltstack@plt+0xc38>
   11f4c:	mov	r0, #0
   11f50:	ldrd	r6, [fp, #112]	; 0x70
   11f54:	bl	12434 <sigaltstack@plt+0x12ac>
   11f58:	subs	r3, r6, r0
   11f5c:	str	r3, [sp, #32]
   11f60:	sbc	r3, r7, r1
   11f64:	str	r3, [sp, #36]	; 0x24
   11f68:	ldrd	r2, [sp, #32]
   11f6c:	cmp	r2, r4
   11f70:	sbcs	r1, r3, r5
   11f74:	movlt	r4, r2
   11f78:	movlt	r5, r3
   11f7c:	b	11db0 <sigaltstack@plt+0xc28>
   11f80:	mov	r8, sl
   11f84:	ldr	sl, [sp, #32]
   11f88:	b	116b8 <sigaltstack@plt+0x530>
   11f8c:	bl	11098 <__errno_location@plt>
   11f90:	add	r9, fp, r9
   11f94:	ldr	r2, [pc, #616]	; 12204 <sigaltstack@plt+0x107c>
   11f98:	ldr	r3, [r9, #56]	; 0x38
   11f9c:	ldr	r1, [r0]
   11fa0:	mov	r0, #2
   11fa4:	bl	10ffc <error@plt>
   11fa8:	mov	r0, #5
   11fac:	bl	12714 <sigaltstack@plt+0x158c>
   11fb0:	sub	r3, r6, #192	; 0xc0
   11fb4:	cmp	r0, #0
   11fb8:	moveq	r6, r3
   11fbc:	b	11c34 <sigaltstack@plt+0xaac>
   11fc0:	mov	r0, #0
   11fc4:	ldr	r5, [fp, #112]	; 0x70
   11fc8:	ldr	r7, [fp, #116]	; 0x74
   11fcc:	bl	12434 <sigaltstack@plt+0x12ac>
   11fd0:	ldr	r4, [fp, #216]	; 0xd8
   11fd4:	ldr	r6, [fp, #220]	; 0xdc
   11fd8:	subs	r5, r5, r0
   11fdc:	mov	r0, #1
   11fe0:	sbc	r7, r7, r1
   11fe4:	bl	12434 <sigaltstack@plt+0x12ac>
   11fe8:	mov	r2, r5
   11fec:	mov	r3, r7
   11ff0:	subs	r4, r4, r0
   11ff4:	sbc	r6, r6, r1
   11ff8:	cmp	r5, #0
   11ffc:	sbcs	r1, r7, #0
   12000:	movlt	r2, #0
   12004:	movlt	r3, #0
   12008:	cmp	r4, #0
   1200c:	sbcs	ip, r6, #0
   12010:	mov	r1, r6
   12014:	movlt	r1, #0
   12018:	mov	r0, r4
   1201c:	movlt	r0, #0
   12020:	cmp	r1, r3
   12024:	cmpeq	r0, r2
   12028:	beq	11648 <sigaltstack@plt+0x4c0>
   1202c:	ldr	r4, [pc, #416]	; 121d4 <sigaltstack@plt+0x104c>
   12030:	cmp	r2, r0
   12034:	sbcs	ip, r3, r1
   12038:	movlt	r0, r2
   1203c:	movlt	r1, r3
   12040:	ldrd	r2, [r4]
   12044:	cmp	r1, r3
   12048:	cmpeq	r0, r2
   1204c:	bcs	1164c <sigaltstack@plt+0x4c4>
   12050:	mov	r0, #1
   12054:	bl	11068 <exit@plt>
   12058:	ldrd	r0, [sp, #104]	; 0x68
   1205c:	ldrd	r2, [sp, #208]	; 0xd0
   12060:	cmp	r1, r3
   12064:	cmpeq	r0, r2
   12068:	bne	11ec8 <sigaltstack@plt+0xd40>
   1206c:	b	11f04 <sigaltstack@plt+0xd7c>
   12070:	mov	r1, #0
   12074:	mov	r0, r1
   12078:	bl	12314 <sigaltstack@plt+0x118c>
   1207c:	ldr	r3, [sp, #224]	; 0xe0
   12080:	and	r3, r3, #61440	; 0xf000
   12084:	cmp	r3, #24576	; 0x6000
   12088:	bne	11904 <sigaltstack@plt+0x77c>
   1208c:	b	11ef0 <sigaltstack@plt+0xd68>
   12090:	bl	10f78 <__stack_chk_fail@plt>
   12094:	mov	r1, #0
   12098:	ldr	r0, [pc, #368]	; 12210 <sigaltstack@plt+0x1088>
   1209c:	bl	12314 <sigaltstack@plt+0x118c>
   120a0:	mov	r3, #0
   120a4:	str	r3, [sp, #52]	; 0x34
   120a8:	b	11cd0 <sigaltstack@plt+0xb48>
   120ac:	ldr	r3, [pc, #312]	; 121ec <sigaltstack@plt+0x1064>
   120b0:	mov	r2, #5
   120b4:	ldr	r1, [pc, #344]	; 12214 <sigaltstack@plt+0x108c>
   120b8:	mov	r0, #0
   120bc:	ldr	r5, [r3]
   120c0:	bl	10f60 <dcgettext@plt>
   120c4:	mov	r3, r4
   120c8:	mov	r1, #1
   120cc:	mov	r8, #1
   120d0:	mov	r2, r0
   120d4:	mov	r0, r5
   120d8:	bl	110e0 <__fprintf_chk@plt>
   120dc:	b	117dc <sigaltstack@plt+0x654>
   120e0:	ldr	r3, [pc, #260]	; 121ec <sigaltstack@plt+0x1064>
   120e4:	mov	r2, #5
   120e8:	ldr	r1, [pc, #296]	; 12218 <sigaltstack@plt+0x1090>
   120ec:	mov	r0, #0
   120f0:	ldr	r6, [r3]
   120f4:	bl	10f60 <dcgettext@plt>
   120f8:	str	r5, [sp]
   120fc:	mov	r3, r4
   12100:	mov	r1, #1
   12104:	mov	r2, r0
   12108:	mov	r0, r6
   1210c:	bl	110e0 <__fprintf_chk@plt>
   12110:	b	11aec <sigaltstack@plt+0x964>
   12114:	ldr	r1, [r5, r3, lsl #2]
   12118:	ldr	r0, [pc, #252]	; 1221c <sigaltstack@plt+0x1094>
   1211c:	bl	12314 <sigaltstack@plt+0x118c>
   12120:	sub	r6, r6, #-1073741823	; 0xc0000001
   12124:	ldr	r0, [pc, #244]	; 12220 <sigaltstack@plt+0x1098>
   12128:	ldr	r1, [r5, r6, lsl #2]
   1212c:	bl	12314 <sigaltstack@plt+0x118c>
   12130:	bl	11098 <__errno_location@plt>
   12134:	ldr	r3, [fp, #60]	; 0x3c
   12138:	ldr	r2, [pc, #196]	; 12204 <sigaltstack@plt+0x107c>
   1213c:	ldr	r1, [r0]
   12140:	mov	r0, #2
   12144:	bl	10ffc <error@plt>
   12148:	bl	11098 <__errno_location@plt>
   1214c:	ldr	r3, [fp, #56]	; 0x38
   12150:	ldr	r2, [pc, #172]	; 12204 <sigaltstack@plt+0x107c>
   12154:	ldr	r1, [r0]
   12158:	mov	r0, #2
   1215c:	bl	10ffc <error@plt>
   12160:	andeq	r7, r2, r8, lsl #30
   12164:	andeq	r8, r2, ip, lsl r1
   12168:	ldrdeq	r7, [r1], -r0
   1216c:	andeq	r7, r1, r4, lsl r3
   12170:	andeq	r7, r1, r4, lsr #7
   12174:	andeq	r7, r1, ip, asr r1
   12178:	andeq	r7, r1, r8, lsl r6
   1217c:	andeq	r8, r2, r0, asr #2
   12180:	andeq	r8, r2, r4, lsr r1
   12184:	andeq	r8, r2, r8, lsl r1
   12188:	andeq	r7, r1, r8, ror #6
   1218c:	andeq	r7, r1, ip, ror r3
   12190:	muleq	r1, r0, r3
   12194:	andeq	r7, r1, r0, lsr #7
   12198:			; <UNDEFINED> instruction: 0x000173b0
   1219c:			; <UNDEFINED> instruction: 0x000173b4
   121a0:	andeq	sl, r2, r0, ror r2
   121a4:	ldrdeq	r7, [r1], -ip
   121a8:	andeq	r7, r1, r8, ror #2
   121ac:	ldrdeq	r7, [r1], -r4
   121b0:	andeq	r7, r1, ip, ror #7
   121b4:	andeq	r7, r1, ip, lsl #8
   121b8:	andeq	r7, r1, r0, lsl #9
   121bc:	andeq	r7, r1, r8, lsl #9
   121c0:	ldrdeq	r7, [r1], -ip
   121c4:	muleq	r1, r0, r5
   121c8:	andeq	r7, r1, r4, asr #11
   121cc:	andeq	r7, r1, ip, lsl #12
   121d0:	andeq	r8, r2, r8, lsr r1
   121d4:	andeq	r8, r2, r0, lsl r1
   121d8:	andeq	r8, r2, r8, lsr #2
   121dc:	andeq	r7, r1, r0, lsl r3
   121e0:	andeq	r8, r2, r0, lsl #3
   121e4:	andeq	r8, r2, r0, asr r2
   121e8:	andeq	r7, r1, ip, asr #6
   121ec:	andeq	r8, r2, r0, lsr r1
   121f0:	ldrdeq	r7, [r1], -ip
   121f4:	andeq	r7, r1, r4, lsl #14
   121f8:	muleq	r1, r4, r6
   121fc:	andeq	r7, r1, r4, lsr #13
   12200:	andeq	r7, r1, ip, asr #4
   12204:	andeq	r7, r1, r8, asr #5
   12208:	andeq	r7, r1, r0, ror #12
   1220c:	andeq	r7, r1, r4, asr r6
   12210:	andeq	r7, r1, r8, lsr #6
   12214:			; <UNDEFINED> instruction: 0x000176bc
   12218:	andeq	r7, r1, r0, lsr r7
   1221c:	andeq	r7, r1, r0, asr #12
   12220:	andeq	r7, r1, r4, lsr #12
   12224:	mov	fp, #0
   12228:	mov	lr, #0
   1222c:	pop	{r1}		; (ldr r1, [sp], #4)
   12230:	mov	r2, sp
   12234:	push	{r2}		; (str r2, [sp, #-4]!)
   12238:	push	{r0}		; (str r0, [sp, #-4]!)
   1223c:	ldr	ip, [pc, #16]	; 12254 <sigaltstack@plt+0x10cc>
   12240:	push	{ip}		; (str ip, [sp, #-4]!)
   12244:	ldr	r0, [pc, #12]	; 12258 <sigaltstack@plt+0x10d0>
   12248:	ldr	r3, [pc, #12]	; 1225c <sigaltstack@plt+0x10d4>
   1224c:	bl	11038 <__libc_start_main@plt>
   12250:	bl	11164 <abort@plt>
   12254:	andeq	r7, r1, ip, asr #2
   12258:	muleq	r1, r4, r1
   1225c:	andeq	r7, r1, ip, ror #1
   12260:	ldr	r3, [pc, #20]	; 1227c <sigaltstack@plt+0x10f4>
   12264:	ldr	r2, [pc, #20]	; 12280 <sigaltstack@plt+0x10f8>
   12268:	add	r3, pc, r3
   1226c:	ldr	r2, [r3, r2]
   12270:	cmp	r2, #0
   12274:	bxeq	lr
   12278:	b	11044 <__gmon_start__@plt>
   1227c:	muleq	r1, r0, sp
   12280:	andeq	r0, r0, r4, lsl #2
   12284:	ldr	r0, [pc, #24]	; 122a4 <sigaltstack@plt+0x111c>
   12288:	ldr	r3, [pc, #24]	; 122a8 <sigaltstack@plt+0x1120>
   1228c:	cmp	r3, r0
   12290:	bxeq	lr
   12294:	ldr	r3, [pc, #16]	; 122ac <sigaltstack@plt+0x1124>
   12298:	cmp	r3, #0
   1229c:	bxeq	lr
   122a0:	bx	r3
   122a4:	andeq	r8, r2, r0, lsr #2
   122a8:	andeq	r8, r2, r0, lsr #2
   122ac:	andeq	r0, r0, r0
   122b0:	ldr	r0, [pc, #36]	; 122dc <sigaltstack@plt+0x1154>
   122b4:	ldr	r1, [pc, #36]	; 122e0 <sigaltstack@plt+0x1158>
   122b8:	sub	r1, r1, r0
   122bc:	asr	r1, r1, #2
   122c0:	add	r1, r1, r1, lsr #31
   122c4:	asrs	r1, r1, #1
   122c8:	bxeq	lr
   122cc:	ldr	r3, [pc, #16]	; 122e4 <sigaltstack@plt+0x115c>
   122d0:	cmp	r3, #0
   122d4:	bxeq	lr
   122d8:	bx	r3
   122dc:	andeq	r8, r2, r0, lsr #2
   122e0:	andeq	r8, r2, r0, lsr #2
   122e4:	andeq	r0, r0, r0
   122e8:	push	{r4, lr}
   122ec:	ldr	r4, [pc, #24]	; 1230c <sigaltstack@plt+0x1184>
   122f0:	ldrb	r3, [r4]
   122f4:	cmp	r3, #0
   122f8:	popne	{r4, pc}
   122fc:	bl	12284 <sigaltstack@plt+0x10fc>
   12300:	mov	r3, #1
   12304:	strb	r3, [r4]
   12308:	pop	{r4, pc}
   1230c:	andeq	r8, r2, ip, lsr r1
   12310:	b	122b0 <sigaltstack@plt+0x1128>
   12314:	cmp	r0, #0
   12318:	push	{r4, lr}
   1231c:	beq	12348 <sigaltstack@plt+0x11c0>
   12320:	mov	r4, r1
   12324:	mov	r2, #5
   12328:	mov	r1, r0
   1232c:	mov	r0, #0
   12330:	bl	10f60 <dcgettext@plt>
   12334:	mov	r1, #0
   12338:	mov	r3, r4
   1233c:	mov	r2, r0
   12340:	mov	r0, r1
   12344:	bl	10ffc <error@plt>
   12348:	mov	r2, #5
   1234c:	ldr	r1, [pc, #28]	; 12370 <sigaltstack@plt+0x11e8>
   12350:	mov	r0, #0
   12354:	bl	10f60 <dcgettext@plt>
   12358:	ldr	r3, [pc, #20]	; 12374 <sigaltstack@plt+0x11ec>
   1235c:	mov	r1, #0
   12360:	ldr	r3, [r3]
   12364:	mov	r2, r0
   12368:	mov	r0, #2
   1236c:	bl	10ffc <error@plt>
   12370:	andeq	r7, r1, ip, ror #4
   12374:	andeq	sl, r2, r0, ror r2
   12378:	push	{r4, r5, r6, r7, r8, lr}
   1237c:	sub	sp, sp, #24
   12380:	ldr	r6, [pc, #156]	; 12424 <sigaltstack@plt+0x129c>
   12384:	ldr	r7, [r1]
   12388:	ldr	r3, [pc, #152]	; 12428 <sigaltstack@plt+0x12a0>
   1238c:	ldr	ip, [r6]
   12390:	str	r3, [sp]
   12394:	mov	r4, r0
   12398:	mov	r8, r2
   1239c:	mov	r0, r7
   123a0:	add	r3, sp, #8
   123a4:	mov	r2, #0
   123a8:	mov	r5, r1
   123ac:	str	ip, [sp, #20]
   123b0:	bl	141d4 <sigaltstack@plt+0x304c>
   123b4:	cmp	r0, #0
   123b8:	beq	123d4 <sigaltstack@plt+0x124c>
   123bc:	cmp	r0, #2
   123c0:	bne	12414 <sigaltstack@plt+0x128c>
   123c4:	ldr	r3, [r5]
   123c8:	ldrb	r3, [r3]
   123cc:	cmp	r3, r8
   123d0:	bne	12414 <sigaltstack@plt+0x128c>
   123d4:	ldrd	r2, [sp, #8]
   123d8:	cmp	r2, #0
   123dc:	sbcs	r1, r3, #0
   123e0:	blt	12414 <sigaltstack@plt+0x128c>
   123e4:	ldr	r1, [pc, #64]	; 1242c <sigaltstack@plt+0x12a4>
   123e8:	lsl	r0, r4, #3
   123ec:	ldrd	r4, [r1, r0]
   123f0:	cmp	r3, r5
   123f4:	cmpeq	r2, r4
   123f8:	strdhi	r2, [r1, r0]
   123fc:	ldr	r2, [sp, #20]
   12400:	ldr	r3, [r6]
   12404:	cmp	r2, r3
   12408:	bne	12420 <sigaltstack@plt+0x1298>
   1240c:	add	sp, sp, #24
   12410:	pop	{r4, r5, r6, r7, r8, pc}
   12414:	mov	r1, r7
   12418:	ldr	r0, [pc, #16]	; 12430 <sigaltstack@plt+0x12a8>
   1241c:	bl	12314 <sigaltstack@plt+0x118c>
   12420:	bl	10f78 <__stack_chk_fail@plt>
   12424:	andeq	r7, r2, r8, lsl #30
   12428:	andeq	r7, r1, ip, asr r1
   1242c:	andeq	r8, r2, r0, asr #2
   12430:	muleq	r1, r4, r2
   12434:	ldr	r1, [pc, #80]	; 1248c <sigaltstack@plt+0x1304>
   12438:	add	ip, r1, r0
   1243c:	ldrb	r3, [ip, #16]
   12440:	cmp	r3, #0
   12444:	beq	12454 <sigaltstack@plt+0x12cc>
   12448:	add	r1, r1, r0, lsl #3
   1244c:	ldrd	r0, [r1, #24]
   12450:	bx	lr
   12454:	push	{r4, lr}
   12458:	lsl	r4, r0, #3
   1245c:	sub	sp, sp, #8
   12460:	add	r0, r1, r0, lsl #2
   12464:	mov	lr, #1
   12468:	ldrd	r2, [r1, r4]
   1246c:	ldr	r0, [r0, #40]	; 0x28
   12470:	str	lr, [sp]
   12474:	strb	lr, [ip, #16]
   12478:	add	r4, r1, r4
   1247c:	bl	10fd8 <lseek64@plt>
   12480:	strd	r0, [r4, #24]
   12484:	add	sp, sp, #8
   12488:	pop	{r4, pc}
   1248c:	andeq	r8, r2, r0, asr #2
   12490:	push	{r4, r5, r6, lr}
   12494:	mov	r5, r1
   12498:	mov	r4, r0
   1249c:	bl	1105c <__ctype_b_loc@plt>
   124a0:	lsl	r3, r5, #1
   124a4:	ldr	r2, [r0]
   124a8:	ldrh	r3, [r2, r3]
   124ac:	tst	r3, #16384	; 0x4000
   124b0:	bne	124dc <sigaltstack@plt+0x1354>
   124b4:	tst	r5, #128	; 0x80
   124b8:	eorne	r5, r5, #128	; 0x80
   124bc:	ldrne	r3, [pc, #60]	; 12500 <sigaltstack@plt+0x1378>
   124c0:	strhne	r3, [r4], #2
   124c4:	cmp	r5, #31
   124c8:	bhi	124ec <sigaltstack@plt+0x1364>
   124cc:	add	r5, r5, #64	; 0x40
   124d0:	mov	r3, #94	; 0x5e
   124d4:	uxtb	r5, r5
   124d8:	strb	r3, [r4], #1
   124dc:	mov	r3, #0
   124e0:	strb	r5, [r4]
   124e4:	strb	r3, [r4, #1]
   124e8:	pop	{r4, r5, r6, pc}
   124ec:	cmp	r5, #127	; 0x7f
   124f0:	moveq	r3, #94	; 0x5e
   124f4:	strbeq	r3, [r4], #1
   124f8:	moveq	r5, #63	; 0x3f
   124fc:	b	124dc <sigaltstack@plt+0x1354>
   12500:	andeq	r2, r0, sp, asr #26
   12504:	ldr	r3, [pc, #108]	; 12578 <sigaltstack@plt+0x13f0>
   12508:	push	{r4, r5, r6, lr}
   1250c:	ldr	r0, [r3]
   12510:	ldr	r3, [r0]
   12514:	ands	r4, r3, #32
   12518:	bne	12554 <sigaltstack@plt+0x13cc>
   1251c:	bl	110f8 <fclose@plt>
   12520:	cmp	r0, #0
   12524:	popeq	{r4, r5, r6, pc}
   12528:	bl	11098 <__errno_location@plt>
   1252c:	mov	r2, #5
   12530:	ldr	r1, [pc, #68]	; 1257c <sigaltstack@plt+0x13f4>
   12534:	ldr	r5, [r0]
   12538:	mov	r0, r4
   1253c:	bl	10f60 <dcgettext@plt>
   12540:	mov	r1, r5
   12544:	ldr	r2, [pc, #52]	; 12580 <sigaltstack@plt+0x13f8>
   12548:	mov	r3, r0
   1254c:	mov	r0, #2
   12550:	bl	10ffc <error@plt>
   12554:	mov	r2, #5
   12558:	ldr	r1, [pc, #36]	; 12584 <sigaltstack@plt+0x13fc>
   1255c:	mov	r0, #0
   12560:	bl	10f60 <dcgettext@plt>
   12564:	ldr	r2, [pc, #20]	; 12580 <sigaltstack@plt+0x13f8>
   12568:	mov	r1, #0
   1256c:	mov	r3, r0
   12570:	mov	r0, #2
   12574:	bl	10ffc <error@plt>
   12578:	andeq	r8, r2, r4, lsr r1
   1257c:	andeq	r7, r1, ip, asr #5
   12580:	andeq	r7, r1, r8, asr #5
   12584:			; <UNDEFINED> instruction: 0x000172b8
   12588:	bx	lr
   1258c:	push	{r4, lr}
   12590:	mov	r0, #0
   12594:	ldr	r4, [pc, #104]	; 12604 <sigaltstack@plt+0x147c>
   12598:	ldr	r3, [r4]
   1259c:	blx	r3
   125a0:	bl	12704 <sigaltstack@plt+0x157c>
   125a4:	mov	r5, r0
   125a8:	bl	11080 <strlen@plt>
   125ac:	mov	r1, r5
   125b0:	ldr	r4, [r4, #4]
   125b4:	mov	r2, r0
   125b8:	mov	r0, #2
   125bc:	bl	110d4 <write@plt>
   125c0:	mov	r2, #2
   125c4:	mov	r0, r2
   125c8:	ldr	r1, [pc, #56]	; 12608 <sigaltstack@plt+0x1480>
   125cc:	bl	110d4 <write@plt>
   125d0:	mov	r0, r4
   125d4:	bl	11080 <strlen@plt>
   125d8:	mov	r1, r4
   125dc:	mov	r2, r0
   125e0:	mov	r0, #2
   125e4:	bl	110d4 <write@plt>
   125e8:	mov	r2, #1
   125ec:	ldr	r1, [pc, #24]	; 1260c <sigaltstack@plt+0x1484>
   125f0:	mov	r0, #2
   125f4:	bl	110d4 <write@plt>
   125f8:	ldr	r3, [pc, #16]	; 12610 <sigaltstack@plt+0x1488>
   125fc:	ldr	r0, [r3]
   12600:	bl	10f24 <_exit@plt>
   12604:	andeq	r8, r2, r0, ror #4
   12608:			; <UNDEFINED> instruction: 0x000179b0
   1260c:	andeq	r7, r1, r4, lsl #9
   12610:	andeq	r8, r2, ip, lsl r1
   12614:	push	{r4, r5, r6, r7, lr}
   12618:	sub	sp, sp, #164	; 0xa4
   1261c:	ldr	r6, [pc, #192]	; 126e4 <sigaltstack@plt+0x155c>
   12620:	mov	r3, #0
   12624:	ldr	ip, [pc, #188]	; 126e8 <sigaltstack@plt+0x1560>
   12628:	ldr	r2, [r6]
   1262c:	mov	r5, r0
   12630:	str	r2, [sp, #156]	; 0x9c
   12634:	mov	r1, r3
   12638:	mov	r2, #8192	; 0x2000
   1263c:	add	r0, sp, #4
   12640:	str	r3, [sp, #8]
   12644:	str	ip, [sp, #4]
   12648:	str	r2, [sp, #12]
   1264c:	bl	11188 <sigaltstack@plt>
   12650:	subs	r4, r0, #0
   12654:	bne	126c4 <sigaltstack@plt+0x153c>
   12658:	ldr	r3, [pc, #140]	; 126ec <sigaltstack@plt+0x1564>
   1265c:	ldr	r7, [pc, #140]	; 126f0 <sigaltstack@plt+0x1568>
   12660:	cmp	r5, #0
   12664:	moveq	r5, r3
   12668:	mov	r2, #5
   1266c:	ldr	r1, [pc, #128]	; 126f4 <sigaltstack@plt+0x156c>
   12670:	str	r5, [r7]
   12674:	bl	10f60 <dcgettext@plt>
   12678:	mov	r2, #5
   1267c:	ldr	r1, [pc, #116]	; 126f8 <sigaltstack@plt+0x1570>
   12680:	mov	r3, r0
   12684:	mov	r0, r4
   12688:	str	r3, [r7, #8]
   1268c:	bl	10f60 <dcgettext@plt>
   12690:	mov	r3, r0
   12694:	add	r0, sp, #20
   12698:	str	r3, [r7, #4]
   1269c:	bl	1111c <sigemptyset@plt>
   126a0:	ldr	ip, [pc, #84]	; 126fc <sigaltstack@plt+0x1574>
   126a4:	ldr	r3, [pc, #84]	; 12700 <sigaltstack@plt+0x1578>
   126a8:	mov	r2, r4
   126ac:	add	r1, sp, #16
   126b0:	mov	r0, #11
   126b4:	str	ip, [sp, #148]	; 0x94
   126b8:	str	r3, [sp, #16]
   126bc:	bl	10fc0 <sigaction@plt>
   126c0:	mov	r4, r0
   126c4:	ldr	r2, [sp, #156]	; 0x9c
   126c8:	ldr	r3, [r6]
   126cc:	mov	r0, r4
   126d0:	cmp	r2, r3
   126d4:	bne	126e0 <sigaltstack@plt+0x1558>
   126d8:	add	sp, sp, #164	; 0xa4
   126dc:	pop	{r4, r5, r6, r7, pc}
   126e0:	bl	10f78 <__stack_chk_fail@plt>
   126e4:	andeq	r7, r2, r8, lsl #30
   126e8:	andeq	r8, r2, r0, ror r2
   126ec:	andeq	r2, r1, r8, lsl #11
   126f0:	andeq	r8, r2, r0, ror #4
   126f4:			; <UNDEFINED> instruction: 0x000179b4
   126f8:	andeq	r7, r1, r4, asr #19
   126fc:	stmdagt	r0, {r2}
   12700:	andeq	r2, r1, ip, lsl #11
   12704:	ldr	r3, [pc, #4]	; 12710 <sigaltstack@plt+0x1588>
   12708:	ldr	r0, [r3]
   1270c:	bx	lr
   12710:	andeq	r8, r2, r0, lsr #2
   12714:	push	{r4, lr}
   12718:	mov	r1, #0
   1271c:	bl	11110 <setlocale@plt>
   12720:	subs	r4, r0, #0
   12724:	beq	12750 <sigaltstack@plt+0x15c8>
   12728:	ldr	r1, [pc, #40]	; 12758 <sigaltstack@plt+0x15d0>
   1272c:	bl	10ee8 <strcmp@plt>
   12730:	cmp	r0, #0
   12734:	popeq	{r4, pc}
   12738:	mov	r0, r4
   1273c:	ldr	r1, [pc, #24]	; 1275c <sigaltstack@plt+0x15d4>
   12740:	bl	10ee8 <strcmp@plt>
   12744:	adds	r0, r0, #0
   12748:	movne	r0, #1
   1274c:	pop	{r4, pc}
   12750:	mov	r0, #1
   12754:	pop	{r4, pc}
   12758:	ldrdeq	r7, [r1], -r4
   1275c:	ldrdeq	r7, [r1], -r8
   12760:	cmp	r0, #0
   12764:	sbcs	r3, r1, #0
   12768:	mov	r3, #0
   1276c:	push	{r4, r5, r6, r7, r8, lr}
   12770:	mov	r4, r0
   12774:	mov	r5, r1
   12778:	strb	r3, [r2, #20]
   1277c:	add	r6, r2, #20
   12780:	blt	127d0 <sigaltstack@plt+0x1648>
   12784:	mov	r0, r4
   12788:	mov	r1, r5
   1278c:	mov	r2, #10
   12790:	mov	r3, #0
   12794:	bl	16ea4 <sigaltstack@plt+0x5d1c>
   12798:	mov	r0, r4
   1279c:	mov	r1, r5
   127a0:	mov	r3, #0
   127a4:	add	r2, r2, #48	; 0x30
   127a8:	strb	r2, [r6, #-1]!
   127ac:	mov	r2, #10
   127b0:	bl	16ea4 <sigaltstack@plt+0x5d1c>
   127b4:	mov	r4, r0
   127b8:	mov	r5, r1
   127bc:	orrs	r3, r4, r5
   127c0:	bne	12784 <sigaltstack@plt+0x15fc>
   127c4:	mov	r0, r6
   127c8:	pop	{r4, r5, r6, r7, r8, pc}
   127cc:	mov	r6, r7
   127d0:	mov	r0, r4
   127d4:	mov	r1, r5
   127d8:	mov	r2, #10
   127dc:	mov	r3, #0
   127e0:	bl	16ea4 <sigaltstack@plt+0x5d1c>
   127e4:	mov	r0, r4
   127e8:	mov	r1, r5
   127ec:	mov	r3, #0
   127f0:	sub	r7, r6, #1
   127f4:	rsb	r2, r2, #48	; 0x30
   127f8:	strb	r2, [r6, #-1]
   127fc:	mov	r2, #10
   12800:	bl	16ea4 <sigaltstack@plt+0x5d1c>
   12804:	mov	r4, r0
   12808:	mov	r5, r1
   1280c:	orrs	r3, r4, r5
   12810:	bne	127cc <sigaltstack@plt+0x1644>
   12814:	mov	r3, #45	; 0x2d
   12818:	sub	r6, r6, #2
   1281c:	strb	r3, [r7, #-1]
   12820:	mov	r0, r6
   12824:	pop	{r4, r5, r6, r7, r8, pc}
   12828:	push	{r4, r5, r6, lr}
   1282c:	subs	r4, r0, #0
   12830:	beq	128a4 <sigaltstack@plt+0x171c>
   12834:	mov	r1, #47	; 0x2f
   12838:	bl	11128 <strrchr@plt>
   1283c:	subs	r5, r0, #0
   12840:	beq	12890 <sigaltstack@plt+0x1708>
   12844:	add	r6, r5, #1
   12848:	sub	r3, r6, r4
   1284c:	cmp	r3, #6
   12850:	ble	12890 <sigaltstack@plt+0x1708>
   12854:	mov	r2, #7
   12858:	ldr	r1, [pc, #96]	; 128c0 <sigaltstack@plt+0x1738>
   1285c:	sub	r0, r5, #6
   12860:	bl	11158 <strncmp@plt>
   12864:	cmp	r0, #0
   12868:	bne	12890 <sigaltstack@plt+0x1708>
   1286c:	mov	r2, #3
   12870:	ldr	r1, [pc, #76]	; 128c4 <sigaltstack@plt+0x173c>
   12874:	mov	r0, r6
   12878:	bl	11158 <strncmp@plt>
   1287c:	cmp	r0, #0
   12880:	movne	r4, r6
   12884:	ldreq	r3, [pc, #60]	; 128c8 <sigaltstack@plt+0x1740>
   12888:	addeq	r4, r5, #4
   1288c:	streq	r4, [r3]
   12890:	ldr	r2, [pc, #52]	; 128cc <sigaltstack@plt+0x1744>
   12894:	ldr	r3, [pc, #52]	; 128d0 <sigaltstack@plt+0x1748>
   12898:	str	r4, [r2]
   1289c:	str	r4, [r3]
   128a0:	pop	{r4, r5, r6, pc}
   128a4:	ldr	r3, [pc, #40]	; 128d4 <sigaltstack@plt+0x174c>
   128a8:	mov	r2, #55	; 0x37
   128ac:	mov	r1, #1
   128b0:	ldr	r3, [r3]
   128b4:	ldr	r0, [pc, #28]	; 128d8 <sigaltstack@plt+0x1750>
   128b8:	bl	10fcc <fwrite@plt>
   128bc:	bl	11164 <abort@plt>
   128c0:	andeq	r7, r1, r8, lsl sl
   128c4:	andeq	r7, r1, r0, lsr #20
   128c8:	andeq	r8, r2, r0, lsr #2
   128cc:	andeq	sl, r2, r0, ror r2
   128d0:	andeq	r8, r2, r4, lsr #2
   128d4:	andeq	r8, r2, r0, lsr r1
   128d8:	andeq	r7, r1, r0, ror #19
   128dc:	push	{r4, lr}
   128e0:	mov	r2, #179	; 0xb3
   128e4:	ldr	r3, [pc, #8]	; 128f4 <sigaltstack@plt+0x176c>
   128e8:	ldr	r1, [pc, #8]	; 128f8 <sigaltstack@plt+0x1770>
   128ec:	ldr	r0, [pc, #8]	; 128fc <sigaltstack@plt+0x1774>
   128f0:	bl	1117c <__assert_fail@plt>
   128f4:	andeq	r7, r1, r4, lsr #20
   128f8:	andeq	r7, r1, r8, lsr sl
   128fc:	andeq	r7, r1, r4, asr #20
   12900:	ldr	r3, [pc, #1976]	; 130c0 <sigaltstack@plt+0x1f38>
   12904:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12908:	sub	sp, sp, #124	; 0x7c
   1290c:	ldr	r3, [r3]
   12910:	mov	r4, r0
   12914:	mov	r0, r1
   12918:	mov	r1, #2
   1291c:	str	r3, [sp, #116]	; 0x74
   12920:	bl	1346c <sigaltstack@plt+0x22e4>
   12924:	ldr	r8, [pc, #1944]	; 130c4 <sigaltstack@plt+0x1f3c>
   12928:	mov	r6, #0
   1292c:	mov	sl, r0
   12930:	ldrb	r3, [r4]
   12934:	cmp	r3, #0
   12938:	beq	129cc <sigaltstack@plt+0x1844>
   1293c:	mov	r1, sl
   12940:	mov	r0, r4
   12944:	bl	158a0 <sigaltstack@plt+0x4718>
   12948:	subs	r9, r0, #0
   1294c:	beq	129cc <sigaltstack@plt+0x1844>
   12950:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   12954:	cmp	r0, #1
   12958:	bhi	129f8 <sigaltstack@plt+0x1870>
   1295c:	mov	r0, sl
   12960:	bl	11080 <strlen@plt>
   12964:	cmp	r4, r9
   12968:	mov	r5, r0
   1296c:	bcs	1298c <sigaltstack@plt+0x1804>
   12970:	bl	1105c <__ctype_b_loc@plt>
   12974:	ldrb	r3, [r9, #-1]
   12978:	lsl	r3, r3, #1
   1297c:	ldr	r2, [r0]
   12980:	ldrh	r3, [r2, r3]
   12984:	tst	r3, #8
   12988:	bne	129b0 <sigaltstack@plt+0x1828>
   1298c:	ldrb	r4, [r9, r5]
   12990:	cmp	r4, #0
   12994:	beq	1308c <sigaltstack@plt+0x1f04>
   12998:	bl	1105c <__ctype_b_loc@plt>
   1299c:	lsl	r4, r4, #1
   129a0:	ldr	r3, [r0]
   129a4:	ldrh	r3, [r3, r4]
   129a8:	tst	r3, #8
   129ac:	beq	1308c <sigaltstack@plt+0x1f04>
   129b0:	ldrb	r3, [r9]
   129b4:	cmp	r3, #0
   129b8:	beq	129cc <sigaltstack@plt+0x1844>
   129bc:	add	r4, r9, #1
   129c0:	ldrb	r3, [r4]
   129c4:	cmp	r3, #0
   129c8:	bne	1293c <sigaltstack@plt+0x17b4>
   129cc:	mov	fp, #0
   129d0:	mov	r0, sl
   129d4:	bl	10f18 <free@plt>
   129d8:	ldr	r3, [pc, #1760]	; 130c0 <sigaltstack@plt+0x1f38>
   129dc:	ldr	r2, [sp, #116]	; 0x74
   129e0:	mov	r0, fp
   129e4:	ldr	r3, [r3]
   129e8:	cmp	r2, r3
   129ec:	bne	130bc <sigaltstack@plt+0x1f34>
   129f0:	add	sp, sp, #124	; 0x7c
   129f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129f8:	cmp	r4, r9
   129fc:	str	r4, [sp, #20]
   12a00:	strb	r6, [sp, #4]
   12a04:	str	r6, [sp, #8]
   12a08:	strb	r6, [sp, #16]
   12a0c:	str	r6, [sp, #12]
   12a10:	movcc	r5, #1
   12a14:	bcc	12a74 <sigaltstack@plt+0x18ec>
   12a18:	b	12ee0 <sigaltstack@plt+0x1d58>
   12a1c:	ldrb	r3, [r4]
   12a20:	and	r2, r3, #31
   12a24:	lsr	r3, r3, #5
   12a28:	ldr	r3, [r8, r3, lsl #2]
   12a2c:	lsr	r3, r3, r2
   12a30:	tst	r3, #1
   12a34:	beq	12b04 <sigaltstack@plt+0x197c>
   12a38:	str	r5, [sp, #24]
   12a3c:	ldrb	r7, [r4]
   12a40:	strb	r5, [sp, #28]
   12a44:	strb	r5, [sp, #16]
   12a48:	cmp	r7, #0
   12a4c:	str	r7, [sp, #32]
   12a50:	beq	12b00 <sigaltstack@plt+0x1978>
   12a54:	ldr	r4, [sp, #20]
   12a58:	ldr	r3, [sp, #24]
   12a5c:	strb	r6, [sp, #16]
   12a60:	add	r4, r4, r3
   12a64:	cmp	r4, r9
   12a68:	str	r4, [sp, #20]
   12a6c:	ldrb	r3, [sp, #28]
   12a70:	bcs	12b54 <sigaltstack@plt+0x19cc>
   12a74:	ldrb	r3, [sp, #4]
   12a78:	cmp	r3, #0
   12a7c:	beq	12a1c <sigaltstack@plt+0x1894>
   12a80:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   12a84:	mov	r1, r0
   12a88:	mov	r0, r4
   12a8c:	bl	1341c <sigaltstack@plt+0x2294>
   12a90:	add	r3, sp, #8
   12a94:	mov	r1, r4
   12a98:	mov	r2, r0
   12a9c:	add	r0, sp, #32
   12aa0:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   12aa4:	cmn	r0, #1
   12aa8:	str	r0, [sp, #24]
   12aac:	beq	12b1c <sigaltstack@plt+0x1994>
   12ab0:	cmn	r0, #2
   12ab4:	beq	12b30 <sigaltstack@plt+0x19a8>
   12ab8:	cmp	r0, #0
   12abc:	bne	12b4c <sigaltstack@plt+0x19c4>
   12ac0:	ldr	r4, [sp, #20]
   12ac4:	str	r5, [sp, #24]
   12ac8:	ldrb	r3, [r4]
   12acc:	cmp	r3, #0
   12ad0:	bne	130a8 <sigaltstack@plt+0x1f20>
   12ad4:	ldr	r7, [sp, #32]
   12ad8:	cmp	r7, #0
   12adc:	bne	12e90 <sigaltstack@plt+0x1d08>
   12ae0:	add	r0, sp, #8
   12ae4:	strb	r5, [sp, #28]
   12ae8:	bl	10f48 <mbsinit@plt>
   12aec:	strb	r5, [sp, #16]
   12af0:	cmp	r0, #0
   12af4:	strbne	r6, [sp, #4]
   12af8:	cmp	r7, #0
   12afc:	bne	12a54 <sigaltstack@plt+0x18cc>
   12b00:	bl	11164 <abort@plt>
   12b04:	add	r0, sp, #8
   12b08:	bl	10f48 <mbsinit@plt>
   12b0c:	cmp	r0, #0
   12b10:	beq	13094 <sigaltstack@plt+0x1f0c>
   12b14:	strb	r5, [sp, #4]
   12b18:	b	12a80 <sigaltstack@plt+0x18f8>
   12b1c:	str	r5, [sp, #24]
   12b20:	strb	r6, [sp, #28]
   12b24:	ldr	r7, [sp, #32]
   12b28:	ldr	r4, [sp, #20]
   12b2c:	b	12a58 <sigaltstack@plt+0x18d0>
   12b30:	ldr	r4, [sp, #20]
   12b34:	mov	r0, r4
   12b38:	bl	11080 <strlen@plt>
   12b3c:	strb	r6, [sp, #28]
   12b40:	ldr	r7, [sp, #32]
   12b44:	str	r0, [sp, #24]
   12b48:	b	12a58 <sigaltstack@plt+0x18d0>
   12b4c:	ldr	r7, [sp, #32]
   12b50:	b	12ae0 <sigaltstack@plt+0x1958>
   12b54:	cmp	r3, #0
   12b58:	beq	12ee0 <sigaltstack@plt+0x1d58>
   12b5c:	mov	r0, r7
   12b60:	bl	110a4 <iswalnum@plt>
   12b64:	clz	fp, r0
   12b68:	lsr	fp, fp, #5
   12b6c:	str	r9, [sp, #20]
   12b70:	strb	r6, [sp, #4]
   12b74:	str	r6, [sp, #8]
   12b78:	str	r6, [sp, #12]
   12b7c:	strb	r6, [sp, #16]
   12b80:	str	sl, [sp, #76]	; 0x4c
   12b84:	strb	r6, [sp, #60]	; 0x3c
   12b88:	str	r6, [sp, #64]	; 0x40
   12b8c:	strb	r6, [sp, #72]	; 0x48
   12b90:	str	r6, [sp, #68]	; 0x44
   12b94:	mov	r5, sl
   12b98:	mov	r7, #1
   12b9c:	b	12c54 <sigaltstack@plt+0x1acc>
   12ba0:	ldrb	r3, [r5]
   12ba4:	and	r2, r3, #31
   12ba8:	lsr	r3, r3, #5
   12bac:	ldr	r3, [r8, r3, lsl #2]
   12bb0:	lsr	r3, r3, r2
   12bb4:	tst	r3, #1
   12bb8:	beq	12e30 <sigaltstack@plt+0x1ca8>
   12bbc:	str	r7, [sp, #80]	; 0x50
   12bc0:	ldrb	r4, [r5]
   12bc4:	strb	r7, [sp, #84]	; 0x54
   12bc8:	strb	r7, [sp, #72]	; 0x48
   12bcc:	cmp	r4, #0
   12bd0:	str	r4, [sp, #88]	; 0x58
   12bd4:	beq	12cd0 <sigaltstack@plt+0x1b48>
   12bd8:	ldrb	r3, [sp, #16]
   12bdc:	cmp	r3, #0
   12be0:	bne	12e1c <sigaltstack@plt+0x1c94>
   12be4:	ldrb	r3, [sp, #4]
   12be8:	ldr	r4, [sp, #20]
   12bec:	cmp	r3, #0
   12bf0:	bne	12dbc <sigaltstack@plt+0x1c34>
   12bf4:	ldrb	r3, [r4]
   12bf8:	and	r2, r3, #31
   12bfc:	lsr	r3, r3, #5
   12c00:	ldr	r3, [r8, r3, lsl #2]
   12c04:	lsr	r3, r3, r2
   12c08:	tst	r3, #1
   12c0c:	beq	12da8 <sigaltstack@plt+0x1c20>
   12c10:	str	r7, [sp, #24]
   12c14:	ldrb	r4, [r4]
   12c18:	strb	r7, [sp, #28]
   12c1c:	strb	r7, [sp, #16]
   12c20:	str	r4, [sp, #32]
   12c24:	cmp	r4, #0
   12c28:	beq	12b00 <sigaltstack@plt+0x1978>
   12c2c:	ldr	r4, [sp, #20]
   12c30:	ldr	r5, [sp, #76]	; 0x4c
   12c34:	ldr	r3, [sp, #24]
   12c38:	ldr	r2, [sp, #80]	; 0x50
   12c3c:	add	r4, r4, r3
   12c40:	add	r5, r5, r2
   12c44:	strb	r6, [sp, #16]
   12c48:	strb	r6, [sp, #72]	; 0x48
   12c4c:	str	r4, [sp, #20]
   12c50:	str	r5, [sp, #76]	; 0x4c
   12c54:	ldrb	r3, [sp, #60]	; 0x3c
   12c58:	cmp	r3, #0
   12c5c:	beq	12ba0 <sigaltstack@plt+0x1a18>
   12c60:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   12c64:	mov	r1, r0
   12c68:	mov	r0, r5
   12c6c:	bl	1341c <sigaltstack@plt+0x2294>
   12c70:	add	r3, sp, #64	; 0x40
   12c74:	mov	r1, r5
   12c78:	mov	r2, r0
   12c7c:	add	r0, sp, #88	; 0x58
   12c80:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   12c84:	cmn	r0, #1
   12c88:	str	r0, [sp, #80]	; 0x50
   12c8c:	strbeq	r6, [sp, #84]	; 0x54
   12c90:	streq	r7, [sp, #80]	; 0x50
   12c94:	strbeq	r7, [sp, #72]	; 0x48
   12c98:	beq	12bd8 <sigaltstack@plt+0x1a50>
   12c9c:	cmn	r0, #2
   12ca0:	beq	12e58 <sigaltstack@plt+0x1cd0>
   12ca4:	cmp	r0, #0
   12ca8:	beq	12e70 <sigaltstack@plt+0x1ce8>
   12cac:	ldr	r4, [sp, #88]	; 0x58
   12cb0:	add	r0, sp, #64	; 0x40
   12cb4:	strb	r7, [sp, #84]	; 0x54
   12cb8:	bl	10f48 <mbsinit@plt>
   12cbc:	strb	r7, [sp, #72]	; 0x48
   12cc0:	cmp	r0, #0
   12cc4:	strbne	r6, [sp, #60]	; 0x3c
   12cc8:	cmp	r4, #0
   12ccc:	bne	12bd8 <sigaltstack@plt+0x1a50>
   12cd0:	ldrb	r3, [sp, #16]
   12cd4:	cmp	r3, #0
   12cd8:	bne	12f68 <sigaltstack@plt+0x1de0>
   12cdc:	ldrb	r3, [sp, #4]
   12ce0:	ldr	r4, [sp, #20]
   12ce4:	cmp	r3, #0
   12ce8:	bne	12f00 <sigaltstack@plt+0x1d78>
   12cec:	ldrb	r3, [r4]
   12cf0:	and	r2, r3, #31
   12cf4:	lsr	r3, r3, #5
   12cf8:	ldr	r3, [r8, r3, lsl #2]
   12cfc:	lsr	r3, r3, r2
   12d00:	tst	r3, #1
   12d04:	beq	12ee8 <sigaltstack@plt+0x1d60>
   12d08:	mov	r3, #1
   12d0c:	str	r3, [sp, #24]
   12d10:	ldrb	r4, [r4]
   12d14:	strb	r3, [sp, #28]
   12d18:	strb	r3, [sp, #16]
   12d1c:	str	r4, [sp, #32]
   12d20:	cmp	r4, #0
   12d24:	beq	12d44 <sigaltstack@plt+0x1bbc>
   12d28:	ldrb	r3, [sp, #28]
   12d2c:	cmp	r3, #0
   12d30:	beq	12d44 <sigaltstack@plt+0x1bbc>
   12d34:	mov	r0, r4
   12d38:	bl	110a4 <iswalnum@plt>
   12d3c:	cmp	r0, #0
   12d40:	bne	12d4c <sigaltstack@plt+0x1bc4>
   12d44:	cmp	fp, #0
   12d48:	bne	129d0 <sigaltstack@plt+0x1848>
   12d4c:	str	r9, [sp, #20]
   12d50:	strb	r6, [sp, #4]
   12d54:	str	r6, [sp, #8]
   12d58:	str	r6, [sp, #12]
   12d5c:	strb	r6, [sp, #16]
   12d60:	ldrb	r3, [r9]
   12d64:	and	r2, r3, #31
   12d68:	lsr	r3, r3, #5
   12d6c:	ldr	r3, [r8, r3, lsl #2]
   12d70:	lsr	r3, r3, r2
   12d74:	tst	r3, #1
   12d78:	beq	12f7c <sigaltstack@plt+0x1df4>
   12d7c:	mov	r3, #1
   12d80:	str	r3, [sp, #24]
   12d84:	ldrb	r4, [r9]
   12d88:	strb	r3, [sp, #28]
   12d8c:	strb	r3, [sp, #16]
   12d90:	str	r4, [sp, #32]
   12d94:	cmp	r4, #0
   12d98:	beq	129cc <sigaltstack@plt+0x1844>
   12d9c:	ldr	r4, [sp, #24]
   12da0:	add	r4, r9, r4
   12da4:	b	12930 <sigaltstack@plt+0x17a8>
   12da8:	add	r0, sp, #8
   12dac:	bl	10f48 <mbsinit@plt>
   12db0:	cmp	r0, #0
   12db4:	beq	13094 <sigaltstack@plt+0x1f0c>
   12db8:	strb	r7, [sp, #4]
   12dbc:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   12dc0:	mov	r1, r0
   12dc4:	mov	r0, r4
   12dc8:	bl	1341c <sigaltstack@plt+0x2294>
   12dcc:	add	r3, sp, #8
   12dd0:	mov	r1, r4
   12dd4:	mov	r2, r0
   12dd8:	add	r0, sp, #32
   12ddc:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   12de0:	cmn	r0, #1
   12de4:	str	r0, [sp, #24]
   12de8:	beq	12e48 <sigaltstack@plt+0x1cc0>
   12dec:	cmn	r0, #2
   12df0:	beq	12ea4 <sigaltstack@plt+0x1d1c>
   12df4:	cmp	r0, #0
   12df8:	beq	12ebc <sigaltstack@plt+0x1d34>
   12dfc:	ldr	r4, [sp, #32]
   12e00:	add	r0, sp, #8
   12e04:	strb	r7, [sp, #28]
   12e08:	bl	10f48 <mbsinit@plt>
   12e0c:	strb	r7, [sp, #16]
   12e10:	cmp	r0, #0
   12e14:	strbne	r6, [sp, #4]
   12e18:	b	12c24 <sigaltstack@plt+0x1a9c>
   12e1c:	ldrb	r3, [sp, #28]
   12e20:	cmp	r3, #0
   12e24:	ldrne	r4, [sp, #32]
   12e28:	beq	12c2c <sigaltstack@plt+0x1aa4>
   12e2c:	b	12c24 <sigaltstack@plt+0x1a9c>
   12e30:	add	r0, sp, #64	; 0x40
   12e34:	bl	10f48 <mbsinit@plt>
   12e38:	cmp	r0, #0
   12e3c:	beq	13094 <sigaltstack@plt+0x1f0c>
   12e40:	strb	r7, [sp, #60]	; 0x3c
   12e44:	b	12c60 <sigaltstack@plt+0x1ad8>
   12e48:	str	r7, [sp, #24]
   12e4c:	strb	r6, [sp, #28]
   12e50:	ldr	r4, [sp, #20]
   12e54:	b	12c30 <sigaltstack@plt+0x1aa8>
   12e58:	ldr	r0, [sp, #76]	; 0x4c
   12e5c:	bl	11080 <strlen@plt>
   12e60:	strb	r6, [sp, #84]	; 0x54
   12e64:	strb	r7, [sp, #72]	; 0x48
   12e68:	str	r0, [sp, #80]	; 0x50
   12e6c:	b	12bd8 <sigaltstack@plt+0x1a50>
   12e70:	ldr	r3, [sp, #76]	; 0x4c
   12e74:	str	r7, [sp, #80]	; 0x50
   12e78:	ldrb	r3, [r3]
   12e7c:	cmp	r3, #0
   12e80:	bne	130a8 <sigaltstack@plt+0x1f20>
   12e84:	ldr	r4, [sp, #88]	; 0x58
   12e88:	cmp	r4, #0
   12e8c:	beq	12cb0 <sigaltstack@plt+0x1b28>
   12e90:	ldr	r3, [pc, #560]	; 130c8 <sigaltstack@plt+0x1f40>
   12e94:	mov	r2, #179	; 0xb3
   12e98:	ldr	r1, [pc, #556]	; 130cc <sigaltstack@plt+0x1f44>
   12e9c:	ldr	r0, [pc, #556]	; 130d0 <sigaltstack@plt+0x1f48>
   12ea0:	bl	1117c <__assert_fail@plt>
   12ea4:	ldr	r4, [sp, #20]
   12ea8:	mov	r0, r4
   12eac:	bl	11080 <strlen@plt>
   12eb0:	strb	r6, [sp, #28]
   12eb4:	str	r0, [sp, #24]
   12eb8:	b	12c30 <sigaltstack@plt+0x1aa8>
   12ebc:	ldr	r4, [sp, #20]
   12ec0:	str	r7, [sp, #24]
   12ec4:	ldrb	r3, [r4]
   12ec8:	cmp	r3, #0
   12ecc:	bne	130a8 <sigaltstack@plt+0x1f20>
   12ed0:	ldr	r4, [sp, #32]
   12ed4:	cmp	r4, #0
   12ed8:	beq	12e00 <sigaltstack@plt+0x1c78>
   12edc:	b	12e90 <sigaltstack@plt+0x1d08>
   12ee0:	mov	fp, #1
   12ee4:	b	12b6c <sigaltstack@plt+0x19e4>
   12ee8:	add	r0, sp, #8
   12eec:	bl	10f48 <mbsinit@plt>
   12ef0:	cmp	r0, #0
   12ef4:	beq	13094 <sigaltstack@plt+0x1f0c>
   12ef8:	mov	r3, #1
   12efc:	strb	r3, [sp, #4]
   12f00:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   12f04:	mov	r1, r0
   12f08:	mov	r0, r4
   12f0c:	bl	1341c <sigaltstack@plt+0x2294>
   12f10:	add	r3, sp, #8
   12f14:	mov	r1, r4
   12f18:	mov	r2, r0
   12f1c:	add	r0, sp, #32
   12f20:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   12f24:	cmn	r0, #1
   12f28:	str	r0, [sp, #24]
   12f2c:	beq	12ffc <sigaltstack@plt+0x1e74>
   12f30:	cmn	r0, #2
   12f34:	beq	1306c <sigaltstack@plt+0x1ee4>
   12f38:	cmp	r0, #0
   12f3c:	bne	13038 <sigaltstack@plt+0x1eb0>
   12f40:	ldr	r3, [sp, #20]
   12f44:	mov	r2, #1
   12f48:	str	r2, [sp, #24]
   12f4c:	ldrb	r3, [r3]
   12f50:	cmp	r3, #0
   12f54:	bne	130a8 <sigaltstack@plt+0x1f20>
   12f58:	ldr	r4, [sp, #32]
   12f5c:	cmp	r4, #0
   12f60:	beq	1303c <sigaltstack@plt+0x1eb4>
   12f64:	bl	128dc <sigaltstack@plt+0x1754>
   12f68:	ldrb	r3, [sp, #28]
   12f6c:	ldr	r4, [sp, #32]
   12f70:	cmp	r3, #0
   12f74:	beq	12d28 <sigaltstack@plt+0x1ba0>
   12f78:	b	12d20 <sigaltstack@plt+0x1b98>
   12f7c:	add	r0, sp, #8
   12f80:	bl	10f48 <mbsinit@plt>
   12f84:	cmp	r0, #0
   12f88:	beq	13094 <sigaltstack@plt+0x1f0c>
   12f8c:	mov	r4, #1
   12f90:	strb	r4, [sp, #4]
   12f94:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   12f98:	mov	r1, r0
   12f9c:	mov	r0, r9
   12fa0:	bl	1341c <sigaltstack@plt+0x2294>
   12fa4:	add	r3, sp, #8
   12fa8:	mov	r1, r9
   12fac:	mov	r2, r0
   12fb0:	add	r0, sp, #32
   12fb4:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   12fb8:	cmn	r0, #1
   12fbc:	str	r0, [sp, #24]
   12fc0:	streq	r4, [sp, #24]
   12fc4:	beq	12d9c <sigaltstack@plt+0x1c14>
   12fc8:	cmn	r0, #2
   12fcc:	beq	1305c <sigaltstack@plt+0x1ed4>
   12fd0:	cmp	r0, #0
   12fd4:	bne	13014 <sigaltstack@plt+0x1e8c>
   12fd8:	ldr	r3, [sp, #20]
   12fdc:	str	r4, [sp, #24]
   12fe0:	ldrb	r3, [r3]
   12fe4:	cmp	r3, #0
   12fe8:	bne	130a8 <sigaltstack@plt+0x1f20>
   12fec:	ldr	r4, [sp, #32]
   12ff0:	cmp	r4, #0
   12ff4:	beq	13018 <sigaltstack@plt+0x1e90>
   12ff8:	b	12f64 <sigaltstack@plt+0x1ddc>
   12ffc:	mov	r3, #1
   13000:	strb	r6, [sp, #28]
   13004:	str	r3, [sp, #24]
   13008:	strb	r3, [sp, #16]
   1300c:	ldr	r4, [sp, #32]
   13010:	b	12d28 <sigaltstack@plt+0x1ba0>
   13014:	ldr	r4, [sp, #32]
   13018:	mov	r5, #1
   1301c:	add	r0, sp, #8
   13020:	strb	r5, [sp, #28]
   13024:	bl	10f48 <mbsinit@plt>
   13028:	strb	r5, [sp, #16]
   1302c:	cmp	r0, #0
   13030:	strbne	r6, [sp, #4]
   13034:	b	12d94 <sigaltstack@plt+0x1c0c>
   13038:	ldr	r4, [sp, #32]
   1303c:	mov	r5, #1
   13040:	add	r0, sp, #8
   13044:	strb	r5, [sp, #28]
   13048:	bl	10f48 <mbsinit@plt>
   1304c:	strb	r5, [sp, #16]
   13050:	cmp	r0, #0
   13054:	strbne	r6, [sp, #4]
   13058:	b	12d20 <sigaltstack@plt+0x1b98>
   1305c:	ldr	r0, [sp, #20]
   13060:	bl	11080 <strlen@plt>
   13064:	str	r0, [sp, #24]
   13068:	b	12d9c <sigaltstack@plt+0x1c14>
   1306c:	ldr	r0, [sp, #20]
   13070:	bl	11080 <strlen@plt>
   13074:	mov	r3, #1
   13078:	strb	r6, [sp, #28]
   1307c:	strb	r3, [sp, #16]
   13080:	ldr	r4, [sp, #32]
   13084:	str	r0, [sp, #24]
   13088:	b	12d28 <sigaltstack@plt+0x1ba0>
   1308c:	mov	fp, #1
   13090:	b	129d0 <sigaltstack@plt+0x1848>
   13094:	ldr	r3, [pc, #44]	; 130c8 <sigaltstack@plt+0x1f40>
   13098:	mov	r2, #150	; 0x96
   1309c:	ldr	r1, [pc, #40]	; 130cc <sigaltstack@plt+0x1f44>
   130a0:	ldr	r0, [pc, #44]	; 130d4 <sigaltstack@plt+0x1f4c>
   130a4:	bl	1117c <__assert_fail@plt>
   130a8:	ldr	r3, [pc, #24]	; 130c8 <sigaltstack@plt+0x1f40>
   130ac:	mov	r2, #178	; 0xb2
   130b0:	ldr	r1, [pc, #20]	; 130cc <sigaltstack@plt+0x1f44>
   130b4:	ldr	r0, [pc, #28]	; 130d8 <sigaltstack@plt+0x1f50>
   130b8:	bl	1117c <__assert_fail@plt>
   130bc:	bl	10f78 <__stack_chk_fail@plt>
   130c0:	andeq	r7, r2, r8, lsl #30
   130c4:	andeq	r7, r1, r0, ror #28
   130c8:	andeq	r7, r1, r4, lsr #20
   130cc:	andeq	r7, r1, r8, lsr sl
   130d0:	andeq	r7, r1, r4, asr #20
   130d4:	andeq	r7, r1, r8, asr sl
   130d8:	andeq	r7, r1, r0, ror sl
   130dc:	push	{r4, r5, r6, lr}
   130e0:	mov	r1, r0
   130e4:	mov	r4, r0
   130e8:	sub	sp, sp, #8
   130ec:	mov	r2, #5
   130f0:	mov	r0, #0
   130f4:	bl	10f60 <dcgettext@plt>
   130f8:	cmp	r4, r0
   130fc:	mov	r5, r0
   13100:	beq	13114 <sigaltstack@plt+0x1f8c>
   13104:	mov	r1, r4
   13108:	bl	12900 <sigaltstack@plt+0x1778>
   1310c:	cmp	r0, #0
   13110:	beq	13120 <sigaltstack@plt+0x1f98>
   13114:	mov	r0, r5
   13118:	add	sp, sp, #8
   1311c:	pop	{r4, r5, r6, pc}
   13120:	mov	r0, r5
   13124:	bl	11080 <strlen@plt>
   13128:	mov	r6, r0
   1312c:	mov	r0, r4
   13130:	bl	11080 <strlen@plt>
   13134:	add	r0, r6, r0
   13138:	add	r0, r0, #4
   1313c:	bl	13eb8 <sigaltstack@plt+0x2d30>
   13140:	str	r5, [sp]
   13144:	str	r4, [sp, #4]
   13148:	ldr	r3, [pc, #28]	; 1316c <sigaltstack@plt+0x1fe4>
   1314c:	mvn	r2, #0
   13150:	mov	r1, #1
   13154:	mov	r6, r0
   13158:	bl	110b0 <__sprintf_chk@plt>
   1315c:	mov	r5, r6
   13160:	mov	r0, r5
   13164:	add	sp, sp, #8
   13168:	pop	{r4, r5, r6, pc}
   1316c:	andeq	r7, r1, r8, lsl #21
   13170:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13174:	mov	r2, #5
   13178:	sub	sp, sp, #8
   1317c:	mov	r6, r0
   13180:	mov	r5, r1
   13184:	mov	r1, r0
   13188:	mov	r0, #0
   1318c:	bl	10f60 <dcgettext@plt>
   13190:	mov	r8, r0
   13194:	bl	14db4 <sigaltstack@plt+0x3c2c>
   13198:	ldr	r1, [pc, #624]	; 13410 <sigaltstack@plt+0x2288>
   1319c:	mov	r9, r0
   131a0:	bl	14d44 <sigaltstack@plt+0x3bbc>
   131a4:	subs	r4, r0, #0
   131a8:	bne	132c0 <sigaltstack@plt+0x2138>
   131ac:	subs	r9, r5, #0
   131b0:	movne	r7, r5
   131b4:	beq	13230 <sigaltstack@plt+0x20a8>
   131b8:	mov	r1, r6
   131bc:	mov	r0, r8
   131c0:	bl	10ee8 <strcmp@plt>
   131c4:	cmp	r0, #0
   131c8:	beq	13224 <sigaltstack@plt+0x209c>
   131cc:	mov	r1, r6
   131d0:	mov	r0, r8
   131d4:	bl	12900 <sigaltstack@plt+0x1778>
   131d8:	subs	r6, r0, #0
   131dc:	bne	1320c <sigaltstack@plt+0x2084>
   131e0:	cmp	r5, #0
   131e4:	beq	1323c <sigaltstack@plt+0x20b4>
   131e8:	mov	r1, r5
   131ec:	mov	r0, r8
   131f0:	bl	12900 <sigaltstack@plt+0x1778>
   131f4:	cmp	r0, #0
   131f8:	beq	1323c <sigaltstack@plt+0x20b4>
   131fc:	cmp	r6, #0
   13200:	beq	1320c <sigaltstack@plt+0x2084>
   13204:	mov	r0, r6
   13208:	bl	10f18 <free@plt>
   1320c:	cmp	r4, #0
   13210:	moveq	r7, r8
   13214:	beq	13224 <sigaltstack@plt+0x209c>
   13218:	mov	r0, r4
   1321c:	bl	10f18 <free@plt>
   13220:	mov	r7, r8
   13224:	mov	r0, r7
   13228:	add	sp, sp, #8
   1322c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13230:	mov	r4, r5
   13234:	mov	r7, r6
   13238:	b	131b8 <sigaltstack@plt+0x2030>
   1323c:	cmp	r9, #0
   13240:	beq	13258 <sigaltstack@plt+0x20d0>
   13244:	mov	r1, r9
   13248:	mov	r0, r8
   1324c:	bl	12900 <sigaltstack@plt+0x1778>
   13250:	cmp	r0, #0
   13254:	bne	131fc <sigaltstack@plt+0x2074>
   13258:	mov	r0, r8
   1325c:	bl	11080 <strlen@plt>
   13260:	mov	r5, r0
   13264:	mov	r0, r7
   13268:	bl	11080 <strlen@plt>
   1326c:	add	r0, r5, r0
   13270:	add	r0, r0, #4
   13274:	bl	13eb8 <sigaltstack@plt+0x2d30>
   13278:	str	r7, [sp, #4]
   1327c:	str	r8, [sp]
   13280:	ldr	r3, [pc, #396]	; 13414 <sigaltstack@plt+0x228c>
   13284:	mvn	r2, #0
   13288:	mov	r1, #1
   1328c:	mov	r5, r0
   13290:	bl	110b0 <__sprintf_chk@plt>
   13294:	cmp	r6, #0
   13298:	beq	132a4 <sigaltstack@plt+0x211c>
   1329c:	mov	r0, r6
   132a0:	bl	10f18 <free@plt>
   132a4:	cmp	r4, #0
   132a8:	moveq	r7, r5
   132ac:	beq	13224 <sigaltstack@plt+0x209c>
   132b0:	mov	r0, r4
   132b4:	bl	10f18 <free@plt>
   132b8:	mov	r7, r5
   132bc:	b	13224 <sigaltstack@plt+0x209c>
   132c0:	mov	r2, r9
   132c4:	ldr	r1, [pc, #324]	; 13410 <sigaltstack@plt+0x2288>
   132c8:	mov	r0, r5
   132cc:	bl	141a8 <sigaltstack@plt+0x3020>
   132d0:	mov	r7, r0
   132d4:	mov	r0, r9
   132d8:	bl	11080 <strlen@plt>
   132dc:	mov	r4, r0
   132e0:	add	r0, r0, #11
   132e4:	bl	13eb8 <sigaltstack@plt+0x2d30>
   132e8:	mov	r2, r4
   132ec:	mov	r1, r9
   132f0:	mov	sl, r0
   132f4:	bl	10f30 <memcpy@plt>
   132f8:	ldr	r3, [pc, #280]	; 13418 <sigaltstack@plt+0x2290>
   132fc:	add	ip, sl, r4
   13300:	mov	r2, sl
   13304:	ldm	r3!, {r0, r1}
   13308:	ldrh	lr, [r3]
   1330c:	ldrb	r3, [r3, #2]
   13310:	str	r0, [sl, r4]
   13314:	str	r1, [ip, #4]
   13318:	strh	lr, [ip, #8]
   1331c:	ldr	r1, [pc, #236]	; 13410 <sigaltstack@plt+0x2288>
   13320:	strb	r3, [ip, #10]
   13324:	mov	r0, r5
   13328:	bl	141a8 <sigaltstack@plt+0x3020>
   1332c:	mov	r4, r0
   13330:	mov	r0, sl
   13334:	bl	10f18 <free@plt>
   13338:	cmp	r4, #0
   1333c:	beq	133dc <sigaltstack@plt+0x2254>
   13340:	mov	r1, #63	; 0x3f
   13344:	mov	r0, r4
   13348:	bl	1108c <strchr@plt>
   1334c:	cmp	r0, #0
   13350:	beq	133a0 <sigaltstack@plt+0x2218>
   13354:	mov	r0, r4
   13358:	bl	10f18 <free@plt>
   1335c:	cmp	r7, #0
   13360:	beq	133e4 <sigaltstack@plt+0x225c>
   13364:	mov	r1, r6
   13368:	mov	r0, r8
   1336c:	bl	10ee8 <strcmp@plt>
   13370:	cmp	r0, #0
   13374:	beq	13224 <sigaltstack@plt+0x209c>
   13378:	mov	r9, #0
   1337c:	mov	r4, r9
   13380:	mov	r1, r6
   13384:	mov	r0, r8
   13388:	bl	12900 <sigaltstack@plt+0x1778>
   1338c:	cmp	r0, #0
   13390:	bne	13408 <sigaltstack@plt+0x2280>
   13394:	mov	r5, r7
   13398:	mov	r6, r7
   1339c:	b	131e0 <sigaltstack@plt+0x2058>
   133a0:	cmp	r7, #0
   133a4:	beq	133f8 <sigaltstack@plt+0x2270>
   133a8:	mov	r1, r6
   133ac:	mov	r0, r8
   133b0:	bl	10ee8 <strcmp@plt>
   133b4:	cmp	r0, #0
   133b8:	movne	r9, r4
   133bc:	bne	13380 <sigaltstack@plt+0x21f8>
   133c0:	cmp	r7, r4
   133c4:	beq	13224 <sigaltstack@plt+0x209c>
   133c8:	mov	r0, r4
   133cc:	bl	10f18 <free@plt>
   133d0:	mov	r0, r7
   133d4:	add	sp, sp, #8
   133d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133dc:	cmp	r7, #0
   133e0:	bne	13364 <sigaltstack@plt+0x21dc>
   133e4:	mov	r9, #0
   133e8:	mov	r5, r9
   133ec:	mov	r4, r9
   133f0:	mov	r7, r6
   133f4:	b	131b8 <sigaltstack@plt+0x2030>
   133f8:	mov	r5, r7
   133fc:	mov	r9, r4
   13400:	mov	r7, r4
   13404:	b	131b8 <sigaltstack@plt+0x2030>
   13408:	mov	r6, r7
   1340c:	b	13204 <sigaltstack@plt+0x207c>
   13410:	muleq	r1, r0, sl
   13414:	andeq	r7, r1, r8, lsl #21
   13418:	muleq	r1, r8, sl
   1341c:	push	{r4, r5, r6, lr}
   13420:	mov	r2, r1
   13424:	mov	r4, r1
   13428:	mov	r1, #0
   1342c:	mov	r5, r0
   13430:	bl	110ec <memchr@plt>
   13434:	cmp	r0, #0
   13438:	subne	r0, r0, r5
   1343c:	addne	r0, r0, #1
   13440:	moveq	r0, r4
   13444:	pop	{r4, r5, r6, pc}
   13448:	push	{r4, lr}
   1344c:	mov	r2, #170	; 0xaa
   13450:	ldr	r3, [pc, #8]	; 13460 <sigaltstack@plt+0x22d8>
   13454:	ldr	r1, [pc, #8]	; 13464 <sigaltstack@plt+0x22dc>
   13458:	ldr	r0, [pc, #8]	; 13468 <sigaltstack@plt+0x22e0>
   1345c:	bl	1117c <__assert_fail@plt>
   13460:	andeq	r7, r1, r4, lsr #21
   13464:			; <UNDEFINED> instruction: 0x00017ab8
   13468:	andeq	r7, r1, r4, asr #20
   1346c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13470:	sub	sp, sp, #76	; 0x4c
   13474:	ldr	r7, [pc, #1232]	; 1394c <sigaltstack@plt+0x27c4>
   13478:	mov	r5, r1
   1347c:	ldr	r3, [r7]
   13480:	str	r3, [sp, #68]	; 0x44
   13484:	bl	10f6c <strdup@plt>
   13488:	subs	r6, r0, #0
   1348c:	beq	13920 <sigaltstack@plt+0x2798>
   13490:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   13494:	cmp	r0, #1
   13498:	bls	136b0 <sigaltstack@plt+0x2528>
   1349c:	cmp	r5, #0
   134a0:	bne	137a4 <sigaltstack@plt+0x261c>
   134a4:	add	r9, sp, #16
   134a8:	mov	r0, r6
   134ac:	str	r6, [sp, #28]
   134b0:	bl	11080 <strlen@plt>
   134b4:	mov	r5, #0
   134b8:	str	r5, [sp, #16]
   134bc:	strb	r5, [sp, #12]
   134c0:	str	r5, [r9, #4]
   134c4:	strb	r5, [sp, #24]
   134c8:	add	sl, r6, r0
   134cc:	cmp	sl, r6
   134d0:	str	sl, [sp, #8]
   134d4:	movhi	r4, r6
   134d8:	movhi	r8, #1
   134dc:	bhi	13514 <sigaltstack@plt+0x238c>
   134e0:	b	13668 <sigaltstack@plt+0x24e0>
   134e4:	ldrb	r3, [sp, #36]	; 0x24
   134e8:	cmp	r3, #0
   134ec:	beq	13598 <sigaltstack@plt+0x2410>
   134f0:	ldr	r0, [sp, #40]	; 0x28
   134f4:	bl	11074 <iswspace@plt>
   134f8:	clz	r5, r0
   134fc:	lsr	r5, r5, #5
   13500:	mov	r3, #0
   13504:	cmp	r4, sl
   13508:	str	r4, [sp, #28]
   1350c:	strb	r3, [sp, #24]
   13510:	bcs	13778 <sigaltstack@plt+0x25f0>
   13514:	ldrb	r3, [sp, #12]
   13518:	cmp	r3, #0
   1351c:	bne	135b4 <sigaltstack@plt+0x242c>
   13520:	ldrb	r3, [r4]
   13524:	ldr	r2, [pc, #1060]	; 13950 <sigaltstack@plt+0x27c8>
   13528:	and	r1, r3, #31
   1352c:	lsr	r3, r3, #5
   13530:	ldr	r3, [r2, r3, lsl #2]
   13534:	lsr	r3, r3, r1
   13538:	tst	r3, #1
   1353c:	beq	135a0 <sigaltstack@plt+0x2418>
   13540:	ldr	fp, [sp, #28]
   13544:	str	r8, [sp, #32]
   13548:	ldr	sl, [sp, #8]
   1354c:	ldrb	r2, [r4]
   13550:	add	r4, fp, #1
   13554:	strb	r8, [sp, #36]	; 0x24
   13558:	str	r2, [sp, #40]	; 0x28
   1355c:	cmp	r5, #0
   13560:	strb	r8, [sp, #24]
   13564:	beq	134e4 <sigaltstack@plt+0x235c>
   13568:	cmp	r5, #1
   1356c:	beq	13684 <sigaltstack@plt+0x24fc>
   13570:	cmp	r5, #2
   13574:	bne	13598 <sigaltstack@plt+0x2410>
   13578:	ldrb	r3, [sp, #36]	; 0x24
   1357c:	cmp	r3, #0
   13580:	beq	13598 <sigaltstack@plt+0x2410>
   13584:	ldr	r0, [sp, #40]	; 0x28
   13588:	bl	11074 <iswspace@plt>
   1358c:	cmp	r0, #0
   13590:	moveq	r5, #1
   13594:	b	13500 <sigaltstack@plt+0x2378>
   13598:	mov	r5, #1
   1359c:	b	13500 <sigaltstack@plt+0x2378>
   135a0:	mov	r0, r9
   135a4:	bl	10f48 <mbsinit@plt>
   135a8:	cmp	r0, #0
   135ac:	beq	13938 <sigaltstack@plt+0x27b0>
   135b0:	strb	r8, [sp, #12]
   135b4:	sub	r2, sl, r4
   135b8:	mov	r1, r4
   135bc:	mov	r3, r9
   135c0:	add	r0, sp, #40	; 0x28
   135c4:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   135c8:	cmn	r0, #1
   135cc:	mov	r4, r0
   135d0:	str	r0, [sp, #32]
   135d4:	beq	1375c <sigaltstack@plt+0x25d4>
   135d8:	cmn	r0, #2
   135dc:	ldr	fp, [sp, #28]
   135e0:	beq	13788 <sigaltstack@plt+0x2600>
   135e4:	cmp	r0, #0
   135e8:	bne	1360c <sigaltstack@plt+0x2484>
   135ec:	str	r8, [sp, #32]
   135f0:	ldrb	r2, [fp]
   135f4:	cmp	r2, #0
   135f8:	bne	13924 <sigaltstack@plt+0x279c>
   135fc:	ldr	r2, [sp, #40]	; 0x28
   13600:	cmp	r2, #0
   13604:	bne	13910 <sigaltstack@plt+0x2788>
   13608:	mov	r4, #1
   1360c:	mov	r0, r9
   13610:	strb	r8, [sp, #36]	; 0x24
   13614:	bl	10f48 <mbsinit@plt>
   13618:	add	r4, fp, r4
   1361c:	ldr	sl, [sp, #8]
   13620:	cmp	r0, #0
   13624:	movne	r1, #0
   13628:	strbne	r1, [sp, #12]
   1362c:	b	1355c <sigaltstack@plt+0x23d4>
   13630:	ldr	r4, [sp, #28]
   13634:	mov	r3, #1
   13638:	mov	r2, #0
   1363c:	str	r3, [sp, #32]
   13640:	strb	r3, [sp, #24]
   13644:	strb	r2, [sp, #36]	; 0x24
   13648:	mov	r0, r4
   1364c:	bl	11080 <strlen@plt>
   13650:	mov	r1, r4
   13654:	add	r2, r0, #1
   13658:	mov	r0, r6
   1365c:	bl	10f0c <memmove@plt>
   13660:	cmp	r5, #1
   13664:	bne	134a8 <sigaltstack@plt+0x2320>
   13668:	ldr	r2, [sp, #68]	; 0x44
   1366c:	ldr	r3, [r7]
   13670:	mov	r0, r6
   13674:	cmp	r2, r3
   13678:	bne	1391c <sigaltstack@plt+0x2794>
   1367c:	add	sp, sp, #76	; 0x4c
   13680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13684:	ldrb	r1, [sp, #36]	; 0x24
   13688:	cmp	r1, #0
   1368c:	beq	13500 <sigaltstack@plt+0x2378>
   13690:	ldr	r0, [sp, #40]	; 0x28
   13694:	bl	11074 <iswspace@plt>
   13698:	ldr	r3, [sp, #4]
   1369c:	cmp	r0, #0
   136a0:	movne	r3, fp
   136a4:	str	r3, [sp, #4]
   136a8:	movne	r5, #2
   136ac:	b	13500 <sigaltstack@plt+0x2378>
   136b0:	cmp	r5, #0
   136b4:	beq	13710 <sigaltstack@plt+0x2588>
   136b8:	ldrb	r4, [r6]
   136bc:	cmp	r4, #0
   136c0:	beq	13914 <sigaltstack@plt+0x278c>
   136c4:	bl	1105c <__ctype_b_loc@plt>
   136c8:	mov	r8, r6
   136cc:	ldr	r2, [r0]
   136d0:	b	136e0 <sigaltstack@plt+0x2558>
   136d4:	ldrb	r4, [r8, #1]!
   136d8:	cmp	r4, #0
   136dc:	beq	136f0 <sigaltstack@plt+0x2568>
   136e0:	lsl	r4, r4, #1
   136e4:	ldrh	r3, [r2, r4]
   136e8:	tst	r3, #8192	; 0x2000
   136ec:	bne	136d4 <sigaltstack@plt+0x254c>
   136f0:	mov	r0, r8
   136f4:	bl	11080 <strlen@plt>
   136f8:	mov	r1, r8
   136fc:	add	r2, r0, #1
   13700:	mov	r0, r6
   13704:	bl	10f0c <memmove@plt>
   13708:	cmp	r5, #1
   1370c:	beq	13668 <sigaltstack@plt+0x24e0>
   13710:	mov	r0, r6
   13714:	bl	11080 <strlen@plt>
   13718:	sub	r0, r0, #1
   1371c:	adds	r4, r6, r0
   13720:	bcs	13668 <sigaltstack@plt+0x24e0>
   13724:	bl	1105c <__ctype_b_loc@plt>
   13728:	mov	r3, r4
   1372c:	mov	ip, #0
   13730:	ldr	r1, [r0]
   13734:	b	13744 <sigaltstack@plt+0x25bc>
   13738:	cmp	r6, r3
   1373c:	strb	ip, [r3, #1]
   13740:	bhi	13668 <sigaltstack@plt+0x24e0>
   13744:	ldrb	r2, [r3], #-1
   13748:	lsl	r2, r2, #1
   1374c:	ldrh	r2, [r1, r2]
   13750:	tst	r2, #8192	; 0x2000
   13754:	bne	13738 <sigaltstack@plt+0x25b0>
   13758:	b	13668 <sigaltstack@plt+0x24e0>
   1375c:	ldr	fp, [sp, #28]
   13760:	mov	r2, #0
   13764:	str	r8, [sp, #32]
   13768:	add	r4, fp, #1
   1376c:	strb	r2, [sp, #36]	; 0x24
   13770:	ldr	sl, [sp, #8]
   13774:	b	1355c <sigaltstack@plt+0x23d4>
   13778:	cmp	r5, #2
   1377c:	ldreq	r2, [sp, #4]
   13780:	strbeq	r3, [r2]
   13784:	b	13668 <sigaltstack@plt+0x24e0>
   13788:	ldr	r4, [sp, #8]
   1378c:	mov	r1, #0
   13790:	sub	r2, r4, fp
   13794:	str	r2, [sp, #32]
   13798:	mov	sl, r4
   1379c:	strb	r1, [sp, #36]	; 0x24
   137a0:	b	1355c <sigaltstack@plt+0x23d4>
   137a4:	mov	r0, r6
   137a8:	str	r6, [sp, #28]
   137ac:	bl	11080 <strlen@plt>
   137b0:	add	r9, sp, #16
   137b4:	mov	r3, #0
   137b8:	str	r3, [sp, #16]
   137bc:	strb	r3, [sp, #12]
   137c0:	str	r3, [r9, #4]
   137c4:	strb	r3, [sp, #24]
   137c8:	add	sl, r6, r0
   137cc:	cmp	sl, r6
   137d0:	str	sl, [sp, #8]
   137d4:	movls	r4, r6
   137d8:	bls	13648 <sigaltstack@plt+0x24c0>
   137dc:	ldr	fp, [pc, #364]	; 13950 <sigaltstack@plt+0x27c8>
   137e0:	mov	r4, r6
   137e4:	mov	r8, #1
   137e8:	b	13854 <sigaltstack@plt+0x26cc>
   137ec:	ldrb	r3, [r4]
   137f0:	and	r1, r3, #31
   137f4:	lsr	r3, r3, #5
   137f8:	ldr	r3, [fp, r3, lsl #2]
   137fc:	lsr	r3, r3, r1
   13800:	tst	r3, #1
   13804:	beq	138bc <sigaltstack@plt+0x2734>
   13808:	str	r8, [sp, #32]
   1380c:	ldrb	r3, [r4]
   13810:	ldr	r4, [sp, #28]
   13814:	strb	r8, [sp, #36]	; 0x24
   13818:	mov	sl, r3
   1381c:	strb	r8, [sp, #24]
   13820:	str	r3, [sp, #40]	; 0x28
   13824:	mov	r0, sl
   13828:	bl	11074 <iswspace@plt>
   1382c:	cmp	r0, #0
   13830:	beq	13648 <sigaltstack@plt+0x24c0>
   13834:	ldr	r3, [sp, #32]
   13838:	ldr	sl, [sp, #8]
   1383c:	add	r4, r4, r3
   13840:	cmp	r4, sl
   13844:	mov	r3, #0
   13848:	str	r4, [sp, #28]
   1384c:	strb	r3, [sp, #24]
   13850:	bcs	13648 <sigaltstack@plt+0x24c0>
   13854:	ldrb	r3, [sp, #12]
   13858:	cmp	r3, #0
   1385c:	beq	137ec <sigaltstack@plt+0x2664>
   13860:	sub	r2, sl, r4
   13864:	mov	r1, r4
   13868:	mov	r3, r9
   1386c:	add	r0, sp, #40	; 0x28
   13870:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   13874:	cmn	r0, #1
   13878:	str	r0, [sp, #32]
   1387c:	beq	13630 <sigaltstack@plt+0x24a8>
   13880:	cmn	r0, #2
   13884:	ldr	r4, [sp, #28]
   13888:	beq	138d4 <sigaltstack@plt+0x274c>
   1388c:	cmp	r0, #0
   13890:	beq	138f4 <sigaltstack@plt+0x276c>
   13894:	ldr	sl, [sp, #40]	; 0x28
   13898:	mov	r0, r9
   1389c:	strb	r8, [sp, #36]	; 0x24
   138a0:	bl	10f48 <mbsinit@plt>
   138a4:	cmp	r0, #0
   138a8:	movne	r2, #0
   138ac:	strbeq	r8, [sp, #24]
   138b0:	strbne	r8, [sp, #24]
   138b4:	strbne	r2, [sp, #12]
   138b8:	b	13824 <sigaltstack@plt+0x269c>
   138bc:	mov	r0, r9
   138c0:	bl	10f48 <mbsinit@plt>
   138c4:	cmp	r0, #0
   138c8:	beq	13938 <sigaltstack@plt+0x27b0>
   138cc:	strb	r8, [sp, #12]
   138d0:	b	13860 <sigaltstack@plt+0x26d8>
   138d4:	ldr	r3, [sp, #8]
   138d8:	mov	r2, #0
   138dc:	sub	r3, r3, r4
   138e0:	str	r3, [sp, #32]
   138e4:	mov	r3, #1
   138e8:	strb	r2, [sp, #36]	; 0x24
   138ec:	strb	r3, [sp, #24]
   138f0:	b	13648 <sigaltstack@plt+0x24c0>
   138f4:	str	r8, [sp, #32]
   138f8:	ldrb	r3, [r4]
   138fc:	cmp	r3, #0
   13900:	bne	13924 <sigaltstack@plt+0x279c>
   13904:	ldr	sl, [sp, #40]	; 0x28
   13908:	cmp	sl, #0
   1390c:	beq	13898 <sigaltstack@plt+0x2710>
   13910:	bl	13448 <sigaltstack@plt+0x22c0>
   13914:	mov	r8, r6
   13918:	b	136f0 <sigaltstack@plt+0x2568>
   1391c:	bl	10f78 <__stack_chk_fail@plt>
   13920:	bl	14100 <sigaltstack@plt+0x2f78>
   13924:	ldr	r3, [pc, #40]	; 13954 <sigaltstack@plt+0x27cc>
   13928:	mov	r2, #169	; 0xa9
   1392c:	ldr	r1, [pc, #36]	; 13958 <sigaltstack@plt+0x27d0>
   13930:	ldr	r0, [pc, #36]	; 1395c <sigaltstack@plt+0x27d4>
   13934:	bl	1117c <__assert_fail@plt>
   13938:	ldr	r3, [pc, #20]	; 13954 <sigaltstack@plt+0x27cc>
   1393c:	mov	r2, #142	; 0x8e
   13940:	ldr	r1, [pc, #16]	; 13958 <sigaltstack@plt+0x27d0>
   13944:	ldr	r0, [pc, #20]	; 13960 <sigaltstack@plt+0x27d8>
   13948:	bl	1117c <__assert_fail@plt>
   1394c:	andeq	r7, r2, r8, lsl #30
   13950:	andeq	r7, r1, r0, ror #28
   13954:	andeq	r7, r1, r4, lsr #21
   13958:			; <UNDEFINED> instruction: 0x00017ab8
   1395c:	andeq	r7, r1, r0, ror sl
   13960:	andeq	r7, r1, r8, asr sl
   13964:	push	{r4, r5, r6, lr}
   13968:	sub	sp, sp, #32
   1396c:	cmp	r1, #0
   13970:	mov	r5, r0
   13974:	ldr	r4, [sp, #48]	; 0x30
   13978:	ldr	r6, [sp, #52]	; 0x34
   1397c:	beq	13a78 <sigaltstack@plt+0x28f0>
   13980:	strd	r2, [sp]
   13984:	mov	r3, r1
   13988:	ldr	r2, [pc, #824]	; 13cc8 <sigaltstack@plt+0x2b40>
   1398c:	mov	r1, #1
   13990:	bl	110e0 <__fprintf_chk@plt>
   13994:	mov	r2, #5
   13998:	ldr	r1, [pc, #812]	; 13ccc <sigaltstack@plt+0x2b44>
   1399c:	mov	r0, #0
   139a0:	bl	10f60 <dcgettext@plt>
   139a4:	ldr	r3, [pc, #804]	; 13cd0 <sigaltstack@plt+0x2b48>
   139a8:	ldr	r2, [pc, #804]	; 13cd4 <sigaltstack@plt+0x2b4c>
   139ac:	str	r3, [sp]
   139b0:	mov	r1, #1
   139b4:	mov	r3, r0
   139b8:	mov	r0, r5
   139bc:	bl	110e0 <__fprintf_chk@plt>
   139c0:	ldr	r1, [pc, #784]	; 13cd8 <sigaltstack@plt+0x2b50>
   139c4:	mov	r2, #5
   139c8:	mov	r0, #0
   139cc:	bl	10f60 <dcgettext@plt>
   139d0:	mov	r1, r5
   139d4:	bl	10eb8 <fputs_unlocked@plt>
   139d8:	cmp	r6, #9
   139dc:	ldrls	pc, [pc, r6, lsl #2]
   139e0:	b	13cbc <sigaltstack@plt+0x2b34>
   139e4:	andeq	r3, r1, r0, ror sl
   139e8:	muleq	r1, r0, sl
   139ec:			; <UNDEFINED> instruction: 0x00013abc
   139f0:	strdeq	r3, [r1], -r0
   139f4:	andeq	r3, r1, ip, lsr #22
   139f8:	andeq	r3, r1, ip, ror #22
   139fc:			; <UNDEFINED> instruction: 0x00013bb4
   13a00:	andeq	r3, r1, r4, lsl #24
   13a04:	andeq	r3, r1, ip, asr ip
   13a08:	andeq	r3, r1, ip, lsl #20
   13a0c:	ldr	r1, [pc, #712]	; 13cdc <sigaltstack@plt+0x2b54>
   13a10:	mov	r2, #5
   13a14:	mov	r0, #0
   13a18:	bl	10f60 <dcgettext@plt>
   13a1c:	ldr	r2, [r4, #32]
   13a20:	ldr	r3, [r4, #28]
   13a24:	ldr	r1, [r4, #24]
   13a28:	str	r2, [sp, #28]
   13a2c:	ldr	r2, [r4, #20]
   13a30:	str	r3, [sp, #24]
   13a34:	ldr	r3, [r4, #16]
   13a38:	str	r1, [sp, #20]
   13a3c:	ldr	r1, [r4, #12]
   13a40:	str	r2, [sp, #16]
   13a44:	ldr	r2, [r4, #8]
   13a48:	str	r3, [sp, #12]
   13a4c:	ldr	r3, [r4, #4]
   13a50:	str	r1, [sp, #8]
   13a54:	str	r2, [sp, #4]
   13a58:	str	r3, [sp]
   13a5c:	mov	r1, #1
   13a60:	ldr	r3, [r4]
   13a64:	mov	r2, r0
   13a68:	mov	r0, r5
   13a6c:	bl	110e0 <__fprintf_chk@plt>
   13a70:	add	sp, sp, #32
   13a74:	pop	{r4, r5, r6, pc}
   13a78:	str	r3, [sp]
   13a7c:	mov	r1, #1
   13a80:	mov	r3, r2
   13a84:	ldr	r2, [pc, #596]	; 13ce0 <sigaltstack@plt+0x2b58>
   13a88:	bl	110e0 <__fprintf_chk@plt>
   13a8c:	b	13994 <sigaltstack@plt+0x280c>
   13a90:	mov	r2, #5
   13a94:	ldr	r1, [pc, #584]	; 13ce4 <sigaltstack@plt+0x2b5c>
   13a98:	mov	r0, #0
   13a9c:	bl	10f60 <dcgettext@plt>
   13aa0:	ldr	r3, [r4]
   13aa4:	mov	r1, #1
   13aa8:	mov	r2, r0
   13aac:	mov	r0, r5
   13ab0:	add	sp, sp, #32
   13ab4:	pop	{r4, r5, r6, lr}
   13ab8:	b	110e0 <__fprintf_chk@plt>
   13abc:	mov	r2, #5
   13ac0:	ldr	r1, [pc, #544]	; 13ce8 <sigaltstack@plt+0x2b60>
   13ac4:	mov	r0, #0
   13ac8:	bl	10f60 <dcgettext@plt>
   13acc:	ldr	r2, [r4, #4]
   13ad0:	ldr	r3, [r4]
   13ad4:	mov	r1, #1
   13ad8:	str	r2, [sp, #48]	; 0x30
   13adc:	mov	r2, r0
   13ae0:	mov	r0, r5
   13ae4:	add	sp, sp, #32
   13ae8:	pop	{r4, r5, r6, lr}
   13aec:	b	110e0 <__fprintf_chk@plt>
   13af0:	mov	r2, #5
   13af4:	ldr	r1, [pc, #496]	; 13cec <sigaltstack@plt+0x2b64>
   13af8:	mov	r0, #0
   13afc:	bl	10f60 <dcgettext@plt>
   13b00:	ldr	r2, [r4, #8]
   13b04:	ldr	r3, [r4, #4]
   13b08:	mov	r1, #1
   13b0c:	str	r2, [sp, #52]	; 0x34
   13b10:	str	r3, [sp, #48]	; 0x30
   13b14:	ldr	r3, [r4]
   13b18:	mov	r2, r0
   13b1c:	mov	r0, r5
   13b20:	add	sp, sp, #32
   13b24:	pop	{r4, r5, r6, lr}
   13b28:	b	110e0 <__fprintf_chk@plt>
   13b2c:	mov	r2, #5
   13b30:	ldr	r1, [pc, #440]	; 13cf0 <sigaltstack@plt+0x2b68>
   13b34:	mov	r0, #0
   13b38:	bl	10f60 <dcgettext@plt>
   13b3c:	ldr	r1, [r4, #12]
   13b40:	ldr	r2, [r4, #8]
   13b44:	ldr	r3, [r4, #4]
   13b48:	str	r1, [sp, #8]
   13b4c:	str	r2, [sp, #4]
   13b50:	str	r3, [sp]
   13b54:	mov	r1, #1
   13b58:	ldr	r3, [r4]
   13b5c:	mov	r2, r0
   13b60:	mov	r0, r5
   13b64:	bl	110e0 <__fprintf_chk@plt>
   13b68:	b	13a70 <sigaltstack@plt+0x28e8>
   13b6c:	mov	r2, #5
   13b70:	ldr	r1, [pc, #380]	; 13cf4 <sigaltstack@plt+0x2b6c>
   13b74:	mov	r0, #0
   13b78:	bl	10f60 <dcgettext@plt>
   13b7c:	ldr	r3, [r4, #16]
   13b80:	ldr	r1, [r4, #12]
   13b84:	ldr	r2, [r4, #8]
   13b88:	str	r3, [sp, #12]
   13b8c:	ldr	r3, [r4, #4]
   13b90:	str	r1, [sp, #8]
   13b94:	str	r2, [sp, #4]
   13b98:	str	r3, [sp]
   13b9c:	mov	r1, #1
   13ba0:	ldr	r3, [r4]
   13ba4:	mov	r2, r0
   13ba8:	mov	r0, r5
   13bac:	bl	110e0 <__fprintf_chk@plt>
   13bb0:	b	13a70 <sigaltstack@plt+0x28e8>
   13bb4:	mov	r2, #5
   13bb8:	ldr	r1, [pc, #312]	; 13cf8 <sigaltstack@plt+0x2b70>
   13bbc:	mov	r0, #0
   13bc0:	bl	10f60 <dcgettext@plt>
   13bc4:	ldr	r2, [r4, #20]
   13bc8:	ldr	r3, [r4, #16]
   13bcc:	ldr	r1, [r4, #12]
   13bd0:	str	r2, [sp, #16]
   13bd4:	ldr	r2, [r4, #8]
   13bd8:	str	r3, [sp, #12]
   13bdc:	ldr	r3, [r4, #4]
   13be0:	str	r1, [sp, #8]
   13be4:	str	r2, [sp, #4]
   13be8:	str	r3, [sp]
   13bec:	mov	r1, #1
   13bf0:	ldr	r3, [r4]
   13bf4:	mov	r2, r0
   13bf8:	mov	r0, r5
   13bfc:	bl	110e0 <__fprintf_chk@plt>
   13c00:	b	13a70 <sigaltstack@plt+0x28e8>
   13c04:	mov	r2, #5
   13c08:	ldr	r1, [pc, #236]	; 13cfc <sigaltstack@plt+0x2b74>
   13c0c:	mov	r0, #0
   13c10:	bl	10f60 <dcgettext@plt>
   13c14:	ldr	r1, [r4, #24]
   13c18:	ldr	r2, [r4, #20]
   13c1c:	ldr	r3, [r4, #16]
   13c20:	str	r1, [sp, #20]
   13c24:	ldr	r1, [r4, #12]
   13c28:	str	r2, [sp, #16]
   13c2c:	ldr	r2, [r4, #8]
   13c30:	str	r3, [sp, #12]
   13c34:	ldr	r3, [r4, #4]
   13c38:	str	r1, [sp, #8]
   13c3c:	str	r2, [sp, #4]
   13c40:	str	r3, [sp]
   13c44:	mov	r1, #1
   13c48:	ldr	r3, [r4]
   13c4c:	mov	r2, r0
   13c50:	mov	r0, r5
   13c54:	bl	110e0 <__fprintf_chk@plt>
   13c58:	b	13a70 <sigaltstack@plt+0x28e8>
   13c5c:	mov	r2, #5
   13c60:	ldr	r1, [pc, #152]	; 13d00 <sigaltstack@plt+0x2b78>
   13c64:	mov	r0, #0
   13c68:	bl	10f60 <dcgettext@plt>
   13c6c:	ldr	r3, [r4, #28]
   13c70:	ldr	r1, [r4, #24]
   13c74:	ldr	r2, [r4, #20]
   13c78:	str	r3, [sp, #24]
   13c7c:	ldr	r3, [r4, #16]
   13c80:	str	r1, [sp, #20]
   13c84:	ldr	r1, [r4, #12]
   13c88:	str	r2, [sp, #16]
   13c8c:	ldr	r2, [r4, #8]
   13c90:	str	r3, [sp, #12]
   13c94:	ldr	r3, [r4, #4]
   13c98:	str	r1, [sp, #8]
   13c9c:	str	r2, [sp, #4]
   13ca0:	str	r3, [sp]
   13ca4:	mov	r1, #1
   13ca8:	ldr	r3, [r4]
   13cac:	mov	r2, r0
   13cb0:	mov	r0, r5
   13cb4:	bl	110e0 <__fprintf_chk@plt>
   13cb8:	b	13a70 <sigaltstack@plt+0x28e8>
   13cbc:	mov	r2, #5
   13cc0:	ldr	r1, [pc, #60]	; 13d04 <sigaltstack@plt+0x2b7c>
   13cc4:	b	13a14 <sigaltstack@plt+0x288c>
   13cc8:	andeq	r7, r1, r4, asr #21
   13ccc:	ldrdeq	r7, [r1], -r8
   13cd0:	andeq	r0, r0, r2, ror #15
   13cd4:	ldrdeq	r7, [r1], -r4
   13cd8:	ldrdeq	r7, [r1], -ip
   13cdc:			; <UNDEFINED> instruction: 0x00017cb4
   13ce0:	ldrdeq	r7, [r1], -r0
   13ce4:	andeq	r7, r1, r8, lsr #23
   13ce8:			; <UNDEFINED> instruction: 0x00017bb8
   13cec:	ldrdeq	r7, [r1], -r0
   13cf0:	andeq	r7, r1, ip, ror #23
   13cf4:	andeq	r7, r1, ip, lsl #24
   13cf8:	andeq	r7, r1, r0, lsr ip
   13cfc:	andeq	r7, r1, r8, asr ip
   13d00:	andeq	r7, r1, r4, lsl #25
   13d04:	andeq	r7, r1, r8, ror #25
   13d08:	push	{r4, r5, lr}
   13d0c:	sub	sp, sp, #12
   13d10:	ldr	r5, [sp, #24]
   13d14:	ldr	ip, [r5]
   13d18:	cmp	ip, #0
   13d1c:	beq	13d38 <sigaltstack@plt+0x2bb0>
   13d20:	mov	lr, r5
   13d24:	mov	ip, #0
   13d28:	ldr	r4, [lr, #4]!
   13d2c:	add	ip, ip, #1
   13d30:	cmp	r4, #0
   13d34:	bne	13d28 <sigaltstack@plt+0x2ba0>
   13d38:	stm	sp, {r5, ip}
   13d3c:	bl	13964 <sigaltstack@plt+0x27dc>
   13d40:	add	sp, sp, #12
   13d44:	pop	{r4, r5, pc}
   13d48:	push	{r4, r5, r6, lr}
   13d4c:	sub	sp, sp, #56	; 0x38
   13d50:	ldr	r6, [pc, #88]	; 13db0 <sigaltstack@plt+0x2c28>
   13d54:	ldr	r5, [sp, #72]	; 0x48
   13d58:	add	r4, sp, #8
   13d5c:	ldr	ip, [r6]
   13d60:	str	ip, [sp, #52]	; 0x34
   13d64:	mov	ip, #0
   13d68:	ldr	lr, [r5], #4
   13d6c:	cmp	lr, #0
   13d70:	str	lr, [r4, #4]!
   13d74:	beq	13d84 <sigaltstack@plt+0x2bfc>
   13d78:	add	ip, ip, #1
   13d7c:	cmp	ip, #10
   13d80:	bne	13d68 <sigaltstack@plt+0x2be0>
   13d84:	add	lr, sp, #12
   13d88:	str	ip, [sp, #4]
   13d8c:	str	lr, [sp]
   13d90:	bl	13964 <sigaltstack@plt+0x27dc>
   13d94:	ldr	r2, [sp, #52]	; 0x34
   13d98:	ldr	r3, [r6]
   13d9c:	cmp	r2, r3
   13da0:	bne	13dac <sigaltstack@plt+0x2c24>
   13da4:	add	sp, sp, #56	; 0x38
   13da8:	pop	{r4, r5, r6, pc}
   13dac:	bl	10f78 <__stack_chk_fail@plt>
   13db0:	andeq	r7, r2, r8, lsl #30
   13db4:	push	{r3}		; (str r3, [sp, #-4]!)
   13db8:	mov	ip, #0
   13dbc:	push	{r4, r5, r6, lr}
   13dc0:	sub	sp, sp, #60	; 0x3c
   13dc4:	ldr	r6, [pc, #100]	; 13e30 <sigaltstack@plt+0x2ca8>
   13dc8:	add	r5, sp, #8
   13dcc:	add	r4, sp, #80	; 0x50
   13dd0:	ldr	r3, [r6]
   13dd4:	str	r4, [sp, #8]
   13dd8:	str	r3, [sp, #52]	; 0x34
   13ddc:	ldr	r3, [sp, #76]	; 0x4c
   13de0:	ldr	lr, [r4], #4
   13de4:	cmp	lr, #0
   13de8:	str	lr, [r5, #4]!
   13dec:	beq	13dfc <sigaltstack@plt+0x2c74>
   13df0:	add	ip, ip, #1
   13df4:	cmp	ip, #10
   13df8:	bne	13de0 <sigaltstack@plt+0x2c58>
   13dfc:	add	lr, sp, #12
   13e00:	str	ip, [sp, #4]
   13e04:	str	lr, [sp]
   13e08:	bl	13964 <sigaltstack@plt+0x27dc>
   13e0c:	ldr	r2, [sp, #52]	; 0x34
   13e10:	ldr	r3, [r6]
   13e14:	cmp	r2, r3
   13e18:	bne	13e2c <sigaltstack@plt+0x2ca4>
   13e1c:	add	sp, sp, #60	; 0x3c
   13e20:	pop	{r4, r5, r6, lr}
   13e24:	add	sp, sp, #4
   13e28:	bx	lr
   13e2c:	bl	10f78 <__stack_chk_fail@plt>
   13e30:	andeq	r7, r2, r8, lsl #30
   13e34:	push	{r4, lr}
   13e38:	mov	r2, #5
   13e3c:	ldr	r1, [pc, #88]	; 13e9c <sigaltstack@plt+0x2d14>
   13e40:	mov	r0, #0
   13e44:	bl	10f60 <dcgettext@plt>
   13e48:	ldr	r2, [pc, #80]	; 13ea0 <sigaltstack@plt+0x2d18>
   13e4c:	mov	r1, r0
   13e50:	mov	r0, #1
   13e54:	bl	110c8 <__printf_chk@plt>
   13e58:	mov	r2, #5
   13e5c:	ldr	r1, [pc, #64]	; 13ea4 <sigaltstack@plt+0x2d1c>
   13e60:	mov	r0, #0
   13e64:	bl	10f60 <dcgettext@plt>
   13e68:	ldr	r3, [pc, #56]	; 13ea8 <sigaltstack@plt+0x2d20>
   13e6c:	ldr	r2, [pc, #56]	; 13eac <sigaltstack@plt+0x2d24>
   13e70:	mov	r1, r0
   13e74:	mov	r0, #1
   13e78:	bl	110c8 <__printf_chk@plt>
   13e7c:	ldr	r1, [pc, #44]	; 13eb0 <sigaltstack@plt+0x2d28>
   13e80:	mov	r2, #5
   13e84:	mov	r0, #0
   13e88:	bl	10f60 <dcgettext@plt>
   13e8c:	ldr	r3, [pc, #32]	; 13eb4 <sigaltstack@plt+0x2d2c>
   13e90:	pop	{r4, lr}
   13e94:	ldr	r1, [r3]
   13e98:	b	10eb8 <fputs_unlocked@plt>
   13e9c:	andeq	r7, r1, r4, lsr #26
   13ea0:	andeq	r7, r1, ip, lsr sp
   13ea4:	andeq	r7, r1, r4, asr sp
   13ea8:	andeq	r7, r1, r8, ror #26
   13eac:	andeq	r7, r1, r0, lsr #7
   13eb0:	muleq	r1, r0, sp
   13eb4:	andeq	r8, r2, r4, lsr r1
   13eb8:	push	{r4, lr}
   13ebc:	mov	r4, r0
   13ec0:	bl	11020 <malloc@plt>
   13ec4:	adds	r4, r4, #0
   13ec8:	movne	r4, #1
   13ecc:	cmp	r0, #0
   13ed0:	movne	r4, #0
   13ed4:	cmp	r4, #0
   13ed8:	popeq	{r4, pc}
   13edc:	bl	14100 <sigaltstack@plt+0x2f78>
   13ee0:	push	{r4, r5, r6, lr}
   13ee4:	umull	r4, r5, r0, r1
   13ee8:	adds	r3, r5, #0
   13eec:	movne	r3, #1
   13ef0:	cmp	r4, #0
   13ef4:	blt	13f0c <sigaltstack@plt+0x2d84>
   13ef8:	cmp	r3, #0
   13efc:	bne	13f0c <sigaltstack@plt+0x2d84>
   13f00:	mul	r0, r1, r0
   13f04:	pop	{r4, r5, r6, lr}
   13f08:	b	13eb8 <sigaltstack@plt+0x2d30>
   13f0c:	bl	14100 <sigaltstack@plt+0x2f78>
   13f10:	b	13eb8 <sigaltstack@plt+0x2d30>
   13f14:	adds	r3, r0, #0
   13f18:	movne	r3, #1
   13f1c:	cmp	r1, #0
   13f20:	movne	r3, #0
   13f24:	cmp	r3, #0
   13f28:	push	{r4, lr}
   13f2c:	bne	13f54 <sigaltstack@plt+0x2dcc>
   13f30:	mov	r4, r1
   13f34:	bl	10f84 <realloc@plt>
   13f38:	adds	r4, r4, #0
   13f3c:	movne	r4, #1
   13f40:	cmp	r0, #0
   13f44:	movne	r4, #0
   13f48:	cmp	r4, #0
   13f4c:	popeq	{r4, pc}
   13f50:	bl	14100 <sigaltstack@plt+0x2f78>
   13f54:	bl	10f18 <free@plt>
   13f58:	mov	r0, #0
   13f5c:	pop	{r4, pc}
   13f60:	push	{r4, r5, r6, lr}
   13f64:	umull	r4, r5, r1, r2
   13f68:	adds	r3, r5, #0
   13f6c:	movne	r3, #1
   13f70:	cmp	r4, #0
   13f74:	blt	13f8c <sigaltstack@plt+0x2e04>
   13f78:	cmp	r3, #0
   13f7c:	bne	13f8c <sigaltstack@plt+0x2e04>
   13f80:	mul	r1, r2, r1
   13f84:	pop	{r4, r5, r6, lr}
   13f88:	b	13f14 <sigaltstack@plt+0x2d8c>
   13f8c:	bl	14100 <sigaltstack@plt+0x2f78>
   13f90:	push	{r4, r5, r6, r7, r8, lr}
   13f94:	subs	r7, r0, #0
   13f98:	mov	r6, r1
   13f9c:	mov	r5, r2
   13fa0:	ldr	r4, [r1]
   13fa4:	beq	13fd8 <sigaltstack@plt+0x2e50>
   13fa8:	mov	r1, r2
   13fac:	ldr	r0, [pc, #104]	; 1401c <sigaltstack@plt+0x2e94>
   13fb0:	bl	16c98 <sigaltstack@plt+0x5b10>
   13fb4:	cmp	r0, r4
   13fb8:	bls	13ffc <sigaltstack@plt+0x2e74>
   13fbc:	add	r3, r4, #1
   13fc0:	add	r4, r3, r4, lsr #1
   13fc4:	str	r4, [r6]
   13fc8:	mul	r1, r5, r4
   13fcc:	mov	r0, r7
   13fd0:	pop	{r4, r5, r6, r7, r8, lr}
   13fd4:	b	13f14 <sigaltstack@plt+0x2d8c>
   13fd8:	cmp	r4, #0
   13fdc:	beq	14000 <sigaltstack@plt+0x2e78>
   13fe0:	umull	r0, r1, r4, r5
   13fe4:	adds	r3, r1, #0
   13fe8:	movne	r3, #1
   13fec:	cmp	r0, #0
   13ff0:	blt	13ffc <sigaltstack@plt+0x2e74>
   13ff4:	cmp	r3, #0
   13ff8:	beq	13fc4 <sigaltstack@plt+0x2e3c>
   13ffc:	bl	14100 <sigaltstack@plt+0x2f78>
   14000:	mov	r1, r2
   14004:	mov	r0, #64	; 0x40
   14008:	bl	16c98 <sigaltstack@plt+0x5b10>
   1400c:	cmp	r5, #64	; 0x40
   14010:	movls	r4, r0
   14014:	addhi	r4, r0, #1
   14018:	b	13fe0 <sigaltstack@plt+0x2e58>
   1401c:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14020:	cmp	r0, #0
   14024:	ldr	r3, [r1]
   14028:	beq	1404c <sigaltstack@plt+0x2ec4>
   1402c:	ldr	r2, [pc, #60]	; 14070 <sigaltstack@plt+0x2ee8>
   14030:	cmp	r3, r2
   14034:	bhi	14068 <sigaltstack@plt+0x2ee0>
   14038:	add	r2, r3, #1
   1403c:	add	r3, r2, r3, lsr #1
   14040:	str	r3, [r1]
   14044:	mov	r1, r3
   14048:	b	13f14 <sigaltstack@plt+0x2d8c>
   1404c:	cmp	r3, #0
   14050:	bne	14064 <sigaltstack@plt+0x2edc>
   14054:	mov	r3, #64	; 0x40
   14058:	str	r3, [r1]
   1405c:	mov	r1, r3
   14060:	b	13f14 <sigaltstack@plt+0x2d8c>
   14064:	bge	14040 <sigaltstack@plt+0x2eb8>
   14068:	push	{r4, lr}
   1406c:	bl	14100 <sigaltstack@plt+0x2f78>
   14070:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   14074:	push	{r4, lr}
   14078:	mov	r4, r0
   1407c:	bl	13eb8 <sigaltstack@plt+0x2d30>
   14080:	mov	r2, r4
   14084:	mov	r1, #0
   14088:	pop	{r4, lr}
   1408c:	b	110bc <memset@plt>
   14090:	push	{r4, r5, r6, lr}
   14094:	umull	r4, r5, r0, r1
   14098:	adds	r3, r5, #0
   1409c:	movne	r3, #1
   140a0:	cmp	r4, #0
   140a4:	blt	140bc <sigaltstack@plt+0x2f34>
   140a8:	cmp	r3, #0
   140ac:	bne	140bc <sigaltstack@plt+0x2f34>
   140b0:	bl	10eac <calloc@plt>
   140b4:	cmp	r0, #0
   140b8:	popne	{r4, r5, r6, pc}
   140bc:	bl	14100 <sigaltstack@plt+0x2f78>
   140c0:	push	{r4, r5, r6, lr}
   140c4:	mov	r4, r1
   140c8:	mov	r5, r0
   140cc:	mov	r0, r1
   140d0:	bl	13eb8 <sigaltstack@plt+0x2d30>
   140d4:	mov	r2, r4
   140d8:	mov	r1, r5
   140dc:	pop	{r4, r5, r6, lr}
   140e0:	b	10f30 <memcpy@plt>
   140e4:	push	{r4, lr}
   140e8:	mov	r4, r0
   140ec:	bl	11080 <strlen@plt>
   140f0:	add	r1, r0, #1
   140f4:	mov	r0, r4
   140f8:	pop	{r4, lr}
   140fc:	b	140c0 <sigaltstack@plt+0x2f38>
   14100:	ldr	r3, [pc, #44]	; 14134 <sigaltstack@plt+0x2fac>
   14104:	push	{r4, lr}
   14108:	mov	r2, #5
   1410c:	ldr	r1, [pc, #36]	; 14138 <sigaltstack@plt+0x2fb0>
   14110:	mov	r0, #0
   14114:	ldr	r4, [r3]
   14118:	bl	10f60 <dcgettext@plt>
   1411c:	ldr	r2, [pc, #24]	; 1413c <sigaltstack@plt+0x2fb4>
   14120:	mov	r1, #0
   14124:	mov	r3, r0
   14128:	mov	r0, r4
   1412c:	bl	10ffc <error@plt>
   14130:	bl	11164 <abort@plt>
   14134:	andeq	r8, r2, ip, lsl r1
   14138:	andeq	r7, r1, r4, lsl #28
   1413c:	andeq	r7, r1, r8, asr #5
   14140:	push	{r4, lr}
   14144:	sub	sp, sp, #8
   14148:	ldr	ip, [sp, #16]
   1414c:	str	ip, [sp]
   14150:	bl	164e4 <sigaltstack@plt+0x535c>
   14154:	subs	r4, r0, #0
   14158:	blt	14168 <sigaltstack@plt+0x2fe0>
   1415c:	mov	r0, r4
   14160:	add	sp, sp, #8
   14164:	pop	{r4, pc}
   14168:	bl	11098 <__errno_location@plt>
   1416c:	ldr	r3, [r0]
   14170:	cmp	r3, #12
   14174:	bne	1415c <sigaltstack@plt+0x2fd4>
   14178:	bl	14100 <sigaltstack@plt+0x2f78>
   1417c:	push	{r4, lr}
   14180:	bl	1677c <sigaltstack@plt+0x55f4>
   14184:	subs	r4, r0, #0
   14188:	beq	14194 <sigaltstack@plt+0x300c>
   1418c:	mov	r0, r4
   14190:	pop	{r4, pc}
   14194:	bl	11098 <__errno_location@plt>
   14198:	ldr	r3, [r0]
   1419c:	cmp	r3, #12
   141a0:	bne	1418c <sigaltstack@plt+0x3004>
   141a4:	bl	14100 <sigaltstack@plt+0x2f78>
   141a8:	push	{r4, lr}
   141ac:	bl	16964 <sigaltstack@plt+0x57dc>
   141b0:	subs	r4, r0, #0
   141b4:	beq	141c0 <sigaltstack@plt+0x3038>
   141b8:	mov	r0, r4
   141bc:	pop	{r4, pc}
   141c0:	bl	11098 <__errno_location@plt>
   141c4:	ldr	r3, [r0]
   141c8:	cmp	r3, #12
   141cc:	bne	141b8 <sigaltstack@plt+0x3030>
   141d0:	bl	14100 <sigaltstack@plt+0x2f78>
   141d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141d8:	sub	sp, sp, #36	; 0x24
   141dc:	ldr	r5, [pc, #2536]	; 14bcc <sigaltstack@plt+0x3a44>
   141e0:	mov	r9, r2
   141e4:	cmp	r2, #36	; 0x24
   141e8:	str	r3, [sp, #12]
   141ec:	ldr	r2, [r5]
   141f0:	ldr	r3, [sp, #72]	; 0x48
   141f4:	str	r2, [sp, #28]
   141f8:	str	r3, [sp]
   141fc:	bhi	14bb8 <sigaltstack@plt+0x3a30>
   14200:	cmp	r1, #0
   14204:	mov	r4, r1
   14208:	mov	r6, r0
   1420c:	addeq	r4, sp, #24
   14210:	bl	11098 <__errno_location@plt>
   14214:	mov	r3, #0
   14218:	str	r3, [r0]
   1421c:	mov	r7, r0
   14220:	bl	1105c <__ctype_b_loc@plt>
   14224:	ldrb	r3, [r6]
   14228:	mov	r1, r6
   1422c:	ldr	r0, [r0]
   14230:	b	14238 <sigaltstack@plt+0x30b0>
   14234:	ldrb	r3, [r1, #1]!
   14238:	lsl	r2, r3, #1
   1423c:	ldrh	r8, [r0, r2]
   14240:	ands	r8, r8, #8192	; 0x2000
   14244:	bne	14234 <sigaltstack@plt+0x30ac>
   14248:	cmp	r3, #45	; 0x2d
   1424c:	beq	142e8 <sigaltstack@plt+0x3160>
   14250:	mov	r2, r9
   14254:	mov	r3, r8
   14258:	mov	r1, r4
   1425c:	mov	r0, r6
   14260:	bl	10f3c <__strtoull_internal@plt>
   14264:	ldr	r9, [r4]
   14268:	cmp	r9, r6
   1426c:	mov	sl, r0
   14270:	mov	fp, r1
   14274:	beq	142d0 <sigaltstack@plt+0x3148>
   14278:	ldr	r8, [r7]
   1427c:	cmp	r8, #0
   14280:	bne	142c0 <sigaltstack@plt+0x3138>
   14284:	ldr	r3, [sp]
   14288:	cmp	r3, #0
   1428c:	beq	1429c <sigaltstack@plt+0x3114>
   14290:	ldrb	r6, [r9]
   14294:	cmp	r6, #0
   14298:	bne	14670 <sigaltstack@plt+0x34e8>
   1429c:	ldr	r3, [sp, #12]
   142a0:	strd	sl, [r3]
   142a4:	ldr	r2, [sp, #28]
   142a8:	ldr	r3, [r5]
   142ac:	mov	r0, r8
   142b0:	cmp	r2, r3
   142b4:	bne	14bb4 <sigaltstack@plt+0x3a2c>
   142b8:	add	sp, sp, #36	; 0x24
   142bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142c0:	cmp	r8, #34	; 0x22
   142c4:	bne	142e8 <sigaltstack@plt+0x3160>
   142c8:	mov	r8, #1
   142cc:	b	14284 <sigaltstack@plt+0x30fc>
   142d0:	ldr	r0, [sp]
   142d4:	cmp	r0, #0
   142d8:	beq	142e8 <sigaltstack@plt+0x3160>
   142dc:	ldrb	r6, [r6]
   142e0:	cmp	r6, #0
   142e4:	bne	142f0 <sigaltstack@plt+0x3168>
   142e8:	mov	r8, #4
   142ec:	b	142a4 <sigaltstack@plt+0x311c>
   142f0:	mov	r1, r6
   142f4:	bl	1108c <strchr@plt>
   142f8:	cmp	r0, #0
   142fc:	movne	sl, #1
   14300:	movne	fp, #0
   14304:	beq	142e8 <sigaltstack@plt+0x3160>
   14308:	sub	r7, r6, #69	; 0x45
   1430c:	cmp	r7, #47	; 0x2f
   14310:	ldrls	pc, [pc, r7, lsl #2]
   14314:	b	144d4 <sigaltstack@plt+0x334c>
   14318:	ldrdeq	r4, [r1], -r8
   1431c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14320:	ldrdeq	r4, [r1], -r8
   14324:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14328:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1432c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14330:	ldrdeq	r4, [r1], -r8
   14334:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14338:	ldrdeq	r4, [r1], -r8
   1433c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14340:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14344:	ldrdeq	r4, [r1], -r8
   14348:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1434c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14350:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14354:	ldrdeq	r4, [r1], -r8
   14358:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1435c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14360:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14364:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14368:	ldrdeq	r4, [r1], -r8
   1436c:	ldrdeq	r4, [r1], -r8
   14370:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14374:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14378:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1437c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14380:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14384:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14388:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1438c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14390:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14394:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14398:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1439c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143a0:	ldrdeq	r4, [r1], -r8
   143a4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143a8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143ac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143b0:	ldrdeq	r4, [r1], -r8
   143b4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143b8:	ldrdeq	r4, [r1], -r8
   143bc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143c0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143c4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143c8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143cc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143d0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143d4:	ldrdeq	r4, [r1], -r8
   143d8:	ldr	r0, [sp]
   143dc:	mov	r1, #48	; 0x30
   143e0:	bl	1108c <strchr@plt>
   143e4:	cmp	r0, #0
   143e8:	beq	144d4 <sigaltstack@plt+0x334c>
   143ec:	ldrb	r3, [r9, #1]
   143f0:	cmp	r3, #68	; 0x44
   143f4:	beq	14ab4 <sigaltstack@plt+0x392c>
   143f8:	cmp	r3, #105	; 0x69
   143fc:	beq	14694 <sigaltstack@plt+0x350c>
   14400:	cmp	r3, #66	; 0x42
   14404:	beq	14ab4 <sigaltstack@plt+0x392c>
   14408:	cmp	r7, #47	; 0x2f
   1440c:	ldrls	pc, [pc, r7, lsl #2]
   14410:	b	14684 <sigaltstack@plt+0x34fc>
   14414:	muleq	r1, r8, sl
   14418:	andeq	r4, r1, r4, lsl #13
   1441c:	andeq	r4, r1, r8, lsl #21
   14420:	andeq	r4, r1, r4, lsl #13
   14424:	andeq	r4, r1, r4, lsl #13
   14428:	andeq	r4, r1, r4, lsl #13
   1442c:	andeq	r4, r1, r8, ror sl
   14430:	andeq	r4, r1, r4, lsl #13
   14434:	andeq	r4, r1, r8, ror #20
   14438:	andeq	r4, r1, r4, lsl #13
   1443c:	andeq	r4, r1, r4, lsl #13
   14440:	andeq	r4, r1, r8, asr sl
   14444:	andeq	r4, r1, r4, lsl #13
   14448:	andeq	r4, r1, r4, lsl #13
   1444c:	andeq	r4, r1, r4, lsl #13
   14450:	andeq	r4, r1, r8, asr #20
   14454:	andeq	r4, r1, r4, lsl #13
   14458:	andeq	r4, r1, r4, lsl #13
   1445c:	andeq	r4, r1, r4, lsl #13
   14460:	andeq	r4, r1, r4, lsl #13
   14464:	andeq	r4, r1, r8, lsr sl
   14468:	andeq	r4, r1, r8, lsr #20
   1446c:	andeq	r4, r1, r4, lsl #13
   14470:	andeq	r4, r1, r4, lsl #13
   14474:	andeq	r4, r1, r4, lsl #13
   14478:	andeq	r4, r1, r4, lsl #13
   1447c:	andeq	r4, r1, r4, lsl #13
   14480:	andeq	r4, r1, r4, lsl #13
   14484:	andeq	r4, r1, r4, lsl #13
   14488:	ldrdeq	r4, [r1], -r0
   1448c:	andeq	r4, r1, r0, lsr #20
   14490:	andeq	r4, r1, r4, lsl #13
   14494:	andeq	r4, r1, r4, lsl #13
   14498:	andeq	r4, r1, r4, lsl #13
   1449c:	andeq	r4, r1, r8, lsl #21
   144a0:	andeq	r4, r1, r4, lsl #13
   144a4:	andeq	r4, r1, r4, lsl #13
   144a8:	andeq	r4, r1, r4, lsl #13
   144ac:	andeq	r4, r1, r8, ror sl
   144b0:	andeq	r4, r1, r4, lsl #13
   144b4:	andeq	r4, r1, r8, ror #20
   144b8:	andeq	r4, r1, r4, lsl #13
   144bc:	andeq	r4, r1, r4, lsl #13
   144c0:	andeq	r4, r1, r4, lsl #13
   144c4:	andeq	r4, r1, r4, lsl #13
   144c8:	andeq	r4, r1, r4, lsl #13
   144cc:	andeq	r4, r1, r4, lsl #13
   144d0:	andeq	r4, r1, r8, asr #20
   144d4:	mov	lr, #1
   144d8:	mov	r0, #1024	; 0x400
   144dc:	sub	r6, r6, #66	; 0x42
   144e0:	cmp	r6, #53	; 0x35
   144e4:	ldrls	pc, [pc, r6, lsl #2]
   144e8:	b	14684 <sigaltstack@plt+0x34fc>
   144ec:	strdeq	r4, [r1], -r8
   144f0:	andeq	r4, r1, r4, lsl #13
   144f4:	andeq	r4, r1, r4, lsl #13
   144f8:	andeq	r4, r1, ip, lsl r7
   144fc:	andeq	r4, r1, r4, lsl #13
   14500:	andeq	r4, r1, r4, asr #11
   14504:	andeq	r4, r1, r4, lsl #13
   14508:	andeq	r4, r1, r4, lsl #13
   1450c:	andeq	r4, r1, r4, lsl #13
   14510:	andeq	r4, r1, r4, lsl r8
   14514:	andeq	r4, r1, r4, lsl #13
   14518:			; <UNDEFINED> instruction: 0x000149b8
   1451c:	andeq	r4, r1, r4, lsl #13
   14520:	andeq	r4, r1, r4, lsl #13
   14524:	andeq	r4, r1, ip, lsr r9
   14528:	andeq	r4, r1, r4, lsl #13
   1452c:	andeq	r4, r1, r4, lsl #13
   14530:	andeq	r4, r1, r4, lsl #13
   14534:	andeq	r4, r1, r0, asr #17
   14538:	andeq	r4, r1, r4, lsl #13
   1453c:	andeq	r4, r1, r4, lsl #13
   14540:	andeq	r4, r1, r4, lsl #13
   14544:	andeq	r4, r1, r4, lsl #13
   14548:	andeq	r4, r1, r4, asr #16
   1454c:	muleq	r1, r8, r7
   14550:	andeq	r4, r1, r4, lsl #13
   14554:	andeq	r4, r1, r4, lsl #13
   14558:	andeq	r4, r1, r4, lsl #13
   1455c:	andeq	r4, r1, r4, lsl #13
   14560:	andeq	r4, r1, r4, lsl #13
   14564:	andeq	r4, r1, r4, lsl #13
   14568:	andeq	r4, r1, r4, lsl #13
   1456c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14570:	andeq	r4, r1, r8, asr r6
   14574:	andeq	r4, r1, r4, lsl #13
   14578:	andeq	r4, r1, r4, lsl #13
   1457c:	andeq	r4, r1, r4, lsl #13
   14580:	andeq	r4, r1, r4, asr #11
   14584:	andeq	r4, r1, r4, lsl #13
   14588:	andeq	r4, r1, r4, lsl #13
   1458c:	andeq	r4, r1, r4, lsl #13
   14590:	andeq	r4, r1, r4, lsl r8
   14594:	andeq	r4, r1, r4, lsl #13
   14598:			; <UNDEFINED> instruction: 0x000149b8
   1459c:	andeq	r4, r1, r4, lsl #13
   145a0:	andeq	r4, r1, r4, lsl #13
   145a4:	andeq	r4, r1, r4, lsl #13
   145a8:	andeq	r4, r1, r4, lsl #13
   145ac:	andeq	r4, r1, r4, lsl #13
   145b0:	andeq	r4, r1, r4, lsl #13
   145b4:	andeq	r4, r1, r0, asr #17
   145b8:	andeq	r4, r1, r4, lsl #13
   145bc:	andeq	r4, r1, r4, lsl #13
   145c0:	andeq	r4, r1, ip, lsr #13
   145c4:	asr	r1, r0, #31
   145c8:	mov	r2, #0
   145cc:	mov	r3, #0
   145d0:	cmp	fp, #0
   145d4:	strd	r2, [sp]
   145d8:	bne	14af8 <sigaltstack@plt+0x3970>
   145dc:	ldrd	r2, [sp]
   145e0:	orrs	r3, r2, r3
   145e4:	bne	14ae8 <sigaltstack@plt+0x3960>
   145e8:	mul	r3, sl, r1
   145ec:	umull	r6, r7, sl, r0
   145f0:	mla	r3, r0, fp, r3
   145f4:	ldrd	sl, [sp]
   145f8:	add	ip, r3, r7
   145fc:	cmp	ip, #0
   14600:	mov	r7, ip
   14604:	bne	14b8c <sigaltstack@plt+0x3a04>
   14608:	orrs	r3, sl, fp
   1460c:	bne	14ae8 <sigaltstack@plt+0x3960>
   14610:	umull	r2, r3, r6, r0
   14614:	mul	ip, r6, r1
   14618:	strd	r2, [sp]
   1461c:	mla	r3, r0, r7, ip
   14620:	ldr	r2, [sp, #4]
   14624:	add	ip, r3, r2
   14628:	cmp	ip, #0
   1462c:	str	ip, [sp, #4]
   14630:	bne	14b68 <sigaltstack@plt+0x39e0>
   14634:	orrs	r3, sl, fp
   14638:	bne	14ae8 <sigaltstack@plt+0x3960>
   1463c:	ldrd	r6, [sp]
   14640:	mov	r3, #0
   14644:	mul	r2, r6, r1
   14648:	umull	sl, fp, r6, r0
   1464c:	mla	r2, r0, r7, r2
   14650:	add	fp, r2, fp
   14654:	orr	r8, r8, r3
   14658:	add	r3, r9, lr
   1465c:	str	r3, [r4]
   14660:	ldrb	r3, [r9, lr]
   14664:	cmp	r3, #0
   14668:	orrne	r8, r8, #2
   1466c:	b	1429c <sigaltstack@plt+0x3114>
   14670:	mov	r1, r6
   14674:	ldr	r0, [sp]
   14678:	bl	1108c <strchr@plt>
   1467c:	cmp	r0, #0
   14680:	bne	14308 <sigaltstack@plt+0x3180>
   14684:	ldr	r3, [sp, #12]
   14688:	orr	r8, r8, #2
   1468c:	strd	sl, [r3]
   14690:	b	142a4 <sigaltstack@plt+0x311c>
   14694:	ldrb	r3, [r9, #2]
   14698:	mov	r0, #1024	; 0x400
   1469c:	cmp	r3, #66	; 0x42
   146a0:	movne	lr, #1
   146a4:	moveq	lr, #3
   146a8:	b	144dc <sigaltstack@plt+0x3354>
   146ac:	lsr	r3, fp, #31
   146b0:	adds	sl, sl, sl
   146b4:	adc	fp, fp, fp
   146b8:	cmp	r3, #0
   146bc:	beq	14658 <sigaltstack@plt+0x34d0>
   146c0:	mov	r8, #1
   146c4:	mvn	sl, #0
   146c8:	mvn	fp, #0
   146cc:	b	14658 <sigaltstack@plt+0x34d0>
   146d0:	mov	lr, #1
   146d4:	lsr	r3, fp, #23
   146d8:	cmp	r3, #0
   146dc:	bne	146c0 <sigaltstack@plt+0x3538>
   146e0:	lsl	r3, fp, #9
   146e4:	orr	r3, r3, sl, lsr #23
   146e8:	lsl	r2, sl, #9
   146ec:	mov	sl, r2
   146f0:	mov	fp, r3
   146f4:	b	14658 <sigaltstack@plt+0x34d0>
   146f8:	lsr	r3, fp, #22
   146fc:	cmp	r3, #0
   14700:	bne	146c0 <sigaltstack@plt+0x3538>
   14704:	lsl	r3, fp, #10
   14708:	orr	r3, r3, sl, lsr #22
   1470c:	lsl	r2, sl, #10
   14710:	mov	sl, r2
   14714:	mov	fp, r3
   14718:	b	14658 <sigaltstack@plt+0x34d0>
   1471c:	mov	r6, r0
   14720:	asr	r7, r0, #31
   14724:	mov	r3, #0
   14728:	mov	ip, #6
   1472c:	str	r3, [sp]
   14730:	strd	r4, [sp, #16]
   14734:	b	14764 <sigaltstack@plt+0x35dc>
   14738:	orrs	r3, r2, r3
   1473c:	movne	r3, #1
   14740:	muleq	r3, sl, r7
   14744:	strne	r3, [sp]
   14748:	mlaeq	r3, r6, fp, r3
   1474c:	umulleq	sl, fp, sl, r6
   14750:	mvnne	sl, #0
   14754:	addeq	fp, r3, fp
   14758:	mvnne	fp, #0
   1475c:	subs	ip, ip, #1
   14760:	beq	14aa8 <sigaltstack@plt+0x3920>
   14764:	cmp	fp, #0
   14768:	mov	r2, #0
   1476c:	mov	r3, #0
   14770:	beq	14738 <sigaltstack@plt+0x35b0>
   14774:	umull	r0, r1, sl, r6
   14778:	mov	r5, #0
   1477c:	mov	r0, r1
   14780:	mov	r1, r5
   14784:	umlal	r0, r1, fp, r6
   14788:	cmp	r1, r5
   1478c:	movne	r2, #1
   14790:	movne	r3, #0
   14794:	b	14738 <sigaltstack@plt+0x35b0>
   14798:	mov	r6, r0
   1479c:	asr	r7, r0, #31
   147a0:	mov	r3, #0
   147a4:	mov	ip, #7
   147a8:	str	r3, [sp]
   147ac:	strd	r4, [sp, #16]
   147b0:	b	147e0 <sigaltstack@plt+0x3658>
   147b4:	orrs	r3, r2, r3
   147b8:	movne	r3, #1
   147bc:	muleq	r3, sl, r7
   147c0:	strne	r3, [sp]
   147c4:	mlaeq	r3, r6, fp, r3
   147c8:	umulleq	sl, fp, sl, r6
   147cc:	mvnne	sl, #0
   147d0:	addeq	fp, r3, fp
   147d4:	mvnne	fp, #0
   147d8:	subs	ip, ip, #1
   147dc:	beq	14aa8 <sigaltstack@plt+0x3920>
   147e0:	cmp	fp, #0
   147e4:	mov	r2, #0
   147e8:	mov	r3, #0
   147ec:	beq	147b4 <sigaltstack@plt+0x362c>
   147f0:	umull	r0, r1, sl, r6
   147f4:	mov	r5, #0
   147f8:	mov	r0, r1
   147fc:	mov	r1, r5
   14800:	umlal	r0, r1, fp, r6
   14804:	cmp	r1, r5
   14808:	movne	r2, #1
   1480c:	movne	r3, #0
   14810:	b	147b4 <sigaltstack@plt+0x362c>
   14814:	asr	r1, r0, #31
   14818:	cmp	fp, #0
   1481c:	mov	r6, #0
   14820:	mov	r7, #0
   14824:	bne	14ac0 <sigaltstack@plt+0x3938>
   14828:	orrs	r3, r6, r7
   1482c:	bne	146c0 <sigaltstack@plt+0x3538>
   14830:	mul	r3, sl, r1
   14834:	mla	r3, r0, fp, r3
   14838:	umull	sl, fp, sl, r0
   1483c:	add	fp, r3, fp
   14840:	b	14658 <sigaltstack@plt+0x34d0>
   14844:	mov	r6, r0
   14848:	asr	r7, r0, #31
   1484c:	mov	r3, #0
   14850:	mov	ip, #8
   14854:	str	r3, [sp]
   14858:	strd	r4, [sp, #16]
   1485c:	b	1488c <sigaltstack@plt+0x3704>
   14860:	orrs	r3, r2, r3
   14864:	movne	r3, #1
   14868:	muleq	r3, sl, r7
   1486c:	strne	r3, [sp]
   14870:	mlaeq	r3, r6, fp, r3
   14874:	umulleq	sl, fp, sl, r6
   14878:	mvnne	sl, #0
   1487c:	addeq	fp, r3, fp
   14880:	mvnne	fp, #0
   14884:	subs	ip, ip, #1
   14888:	beq	14aa8 <sigaltstack@plt+0x3920>
   1488c:	cmp	fp, #0
   14890:	mov	r2, #0
   14894:	mov	r3, #0
   14898:	beq	14860 <sigaltstack@plt+0x36d8>
   1489c:	umull	r0, r1, sl, r6
   148a0:	mov	r5, #0
   148a4:	mov	r0, r1
   148a8:	mov	r1, r5
   148ac:	umlal	r0, r1, fp, r6
   148b0:	cmp	r1, r5
   148b4:	movne	r2, #1
   148b8:	movne	r3, #0
   148bc:	b	14860 <sigaltstack@plt+0x36d8>
   148c0:	mov	r6, r0
   148c4:	asr	r7, r0, #31
   148c8:	mov	r3, #0
   148cc:	mov	ip, #4
   148d0:	str	r3, [sp]
   148d4:	strd	r4, [sp, #16]
   148d8:	b	14908 <sigaltstack@plt+0x3780>
   148dc:	orrs	r3, r2, r3
   148e0:	movne	r3, #1
   148e4:	muleq	r3, sl, r7
   148e8:	strne	r3, [sp]
   148ec:	mlaeq	r3, r6, fp, r3
   148f0:	umulleq	sl, fp, sl, r6
   148f4:	mvnne	sl, #0
   148f8:	addeq	fp, r3, fp
   148fc:	mvnne	fp, #0
   14900:	subs	ip, ip, #1
   14904:	beq	14aa8 <sigaltstack@plt+0x3920>
   14908:	cmp	fp, #0
   1490c:	mov	r2, #0
   14910:	mov	r3, #0
   14914:	beq	148dc <sigaltstack@plt+0x3754>
   14918:	umull	r0, r1, sl, r6
   1491c:	mov	r5, #0
   14920:	mov	r0, r1
   14924:	mov	r1, r5
   14928:	umlal	r0, r1, fp, r6
   1492c:	cmp	r1, r5
   14930:	movne	r2, #1
   14934:	movne	r3, #0
   14938:	b	148dc <sigaltstack@plt+0x3754>
   1493c:	mov	r6, r0
   14940:	asr	r7, r0, #31
   14944:	mov	r3, #0
   14948:	mov	ip, #5
   1494c:	str	r3, [sp]
   14950:	strd	r4, [sp, #16]
   14954:	b	14984 <sigaltstack@plt+0x37fc>
   14958:	orrs	r3, r2, r3
   1495c:	movne	r3, #1
   14960:	muleq	r3, sl, r7
   14964:	strne	r3, [sp]
   14968:	mlaeq	r3, r6, fp, r3
   1496c:	umulleq	sl, fp, sl, r6
   14970:	mvnne	sl, #0
   14974:	addeq	fp, r3, fp
   14978:	mvnne	fp, #0
   1497c:	subs	ip, ip, #1
   14980:	beq	14aa8 <sigaltstack@plt+0x3920>
   14984:	cmp	fp, #0
   14988:	mov	r2, #0
   1498c:	mov	r3, #0
   14990:	beq	14958 <sigaltstack@plt+0x37d0>
   14994:	umull	r0, r1, sl, r6
   14998:	mov	r5, #0
   1499c:	mov	r0, r1
   149a0:	mov	r1, r5
   149a4:	umlal	r0, r1, fp, r6
   149a8:	cmp	r1, r5
   149ac:	movne	r2, #1
   149b0:	movne	r3, #0
   149b4:	b	14958 <sigaltstack@plt+0x37d0>
   149b8:	asr	r1, r0, #31
   149bc:	cmp	fp, #0
   149c0:	mov	r6, #0
   149c4:	mov	r7, #0
   149c8:	bne	14b1c <sigaltstack@plt+0x3994>
   149cc:	orrs	r3, r6, r7
   149d0:	bne	146c0 <sigaltstack@plt+0x3538>
   149d4:	umull	r2, r3, sl, r0
   149d8:	mul	ip, sl, r1
   149dc:	strd	r2, [sp]
   149e0:	mla	r3, r0, fp, ip
   149e4:	ldr	r2, [sp, #4]
   149e8:	mov	sl, r6
   149ec:	add	ip, r3, r2
   149f0:	cmp	ip, #0
   149f4:	mov	fp, r7
   149f8:	str	ip, [sp, #4]
   149fc:	bne	14b44 <sigaltstack@plt+0x39bc>
   14a00:	orrs	r3, sl, fp
   14a04:	bne	146c0 <sigaltstack@plt+0x3538>
   14a08:	ldrd	r6, [sp]
   14a0c:	mul	r3, r6, r1
   14a10:	umull	sl, fp, r6, r0
   14a14:	mla	r0, r0, r7, r3
   14a18:	add	fp, r0, fp
   14a1c:	b	14658 <sigaltstack@plt+0x34d0>
   14a20:	mov	lr, #1
   14a24:	b	14658 <sigaltstack@plt+0x34d0>
   14a28:	mov	lr, #1
   14a2c:	mov	r6, #1024	; 0x400
   14a30:	mov	r7, #0
   14a34:	b	147a0 <sigaltstack@plt+0x3618>
   14a38:	mov	lr, #1
   14a3c:	mov	r6, #1024	; 0x400
   14a40:	mov	r7, #0
   14a44:	b	1484c <sigaltstack@plt+0x36c4>
   14a48:	mov	lr, #1
   14a4c:	mov	r6, #1024	; 0x400
   14a50:	mov	r7, #0
   14a54:	b	148c8 <sigaltstack@plt+0x3740>
   14a58:	mov	lr, #1
   14a5c:	mov	r6, #1024	; 0x400
   14a60:	mov	r7, #0
   14a64:	b	14944 <sigaltstack@plt+0x37bc>
   14a68:	mov	lr, #1
   14a6c:	mov	r0, #1024	; 0x400
   14a70:	mov	r1, #0
   14a74:	b	149bc <sigaltstack@plt+0x3834>
   14a78:	mov	lr, #1
   14a7c:	mov	r0, #1024	; 0x400
   14a80:	mov	r1, #0
   14a84:	b	14818 <sigaltstack@plt+0x3690>
   14a88:	mov	lr, #1
   14a8c:	mov	r0, #1024	; 0x400
   14a90:	mov	r1, #0
   14a94:	b	145c8 <sigaltstack@plt+0x3440>
   14a98:	mov	lr, #1
   14a9c:	mov	r6, #1024	; 0x400
   14aa0:	mov	r7, #0
   14aa4:	b	14724 <sigaltstack@plt+0x359c>
   14aa8:	ldrd	r4, [sp, #16]
   14aac:	ldr	r3, [sp]
   14ab0:	b	14654 <sigaltstack@plt+0x34cc>
   14ab4:	mov	lr, #2
   14ab8:	mov	r0, #1000	; 0x3e8
   14abc:	b	144dc <sigaltstack@plt+0x3354>
   14ac0:	umull	r2, r3, sl, r0
   14ac4:	str	r3, [sp]
   14ac8:	mov	r3, #0
   14acc:	str	r3, [sp, #4]
   14ad0:	ldrd	r2, [sp]
   14ad4:	umlal	r2, r3, fp, r0
   14ad8:	cmp	r3, #0
   14adc:	movne	r6, #1
   14ae0:	movne	r7, #0
   14ae4:	b	14828 <sigaltstack@plt+0x36a0>
   14ae8:	mov	r3, #1
   14aec:	mvn	sl, #0
   14af0:	mvn	fp, #0
   14af4:	b	14654 <sigaltstack@plt+0x34cc>
   14af8:	umull	r2, r3, sl, r0
   14afc:	mov	r7, #0
   14b00:	mov	r6, r3
   14b04:	umlal	r6, r7, fp, r0
   14b08:	cmp	r7, #0
   14b0c:	movne	r2, #1
   14b10:	movne	r3, #0
   14b14:	strdne	r2, [sp]
   14b18:	b	145dc <sigaltstack@plt+0x3454>
   14b1c:	umull	r2, r3, sl, r0
   14b20:	str	r3, [sp]
   14b24:	mov	r3, #0
   14b28:	str	r3, [sp, #4]
   14b2c:	ldrd	r2, [sp]
   14b30:	umlal	r2, r3, fp, r0
   14b34:	cmp	r3, #0
   14b38:	movne	r6, #1
   14b3c:	movne	r7, #0
   14b40:	b	149cc <sigaltstack@plt+0x3844>
   14b44:	ldr	r3, [sp]
   14b48:	mov	r7, #0
   14b4c:	umull	r2, r3, r3, r0
   14b50:	mov	r6, r3
   14b54:	umlal	r6, r7, ip, r0
   14b58:	cmp	r7, #0
   14b5c:	movne	sl, #1
   14b60:	movne	fp, #0
   14b64:	b	14a00 <sigaltstack@plt+0x3878>
   14b68:	ldr	r3, [sp]
   14b6c:	mov	r7, #0
   14b70:	umull	r2, r3, r3, r0
   14b74:	mov	r6, r3
   14b78:	umlal	r6, r7, ip, r0
   14b7c:	cmp	r7, #0
   14b80:	movne	sl, #1
   14b84:	movne	fp, #0
   14b88:	b	14634 <sigaltstack@plt+0x34ac>
   14b8c:	umull	r2, r3, r6, r0
   14b90:	str	r3, [sp]
   14b94:	mov	r3, #0
   14b98:	str	r3, [sp, #4]
   14b9c:	ldrd	r2, [sp]
   14ba0:	umlal	r2, r3, ip, r0
   14ba4:	cmp	r3, #0
   14ba8:	movne	sl, #1
   14bac:	movne	fp, #0
   14bb0:	b	14608 <sigaltstack@plt+0x3480>
   14bb4:	bl	10f78 <__stack_chk_fail@plt>
   14bb8:	ldr	r3, [pc, #16]	; 14bd0 <sigaltstack@plt+0x3a48>
   14bbc:	mov	r2, #84	; 0x54
   14bc0:	ldr	r1, [pc, #12]	; 14bd4 <sigaltstack@plt+0x3a4c>
   14bc4:	ldr	r0, [pc, #12]	; 14bd8 <sigaltstack@plt+0x3a50>
   14bc8:	bl	1117c <__assert_fail@plt>
   14bcc:	andeq	r7, r2, r8, lsl #30
   14bd0:	andeq	r7, r1, r8, lsl lr
   14bd4:	andeq	r7, r1, r4, lsr #28
   14bd8:	andeq	r7, r1, r0, lsr lr
   14bdc:	push	{r4, r5, r6, r7, r8, lr}
   14be0:	mov	r8, r1
   14be4:	add	r6, r1, r2
   14be8:	mov	r7, r0
   14bec:	mov	r4, r1
   14bf0:	mvn	r5, #-2147483648	; 0x80000000
   14bf4:	b	14c04 <sigaltstack@plt+0x3a7c>
   14bf8:	add	r4, r4, r0
   14bfc:	cmp	r6, r4
   14c00:	bls	14c28 <sigaltstack@plt+0x3aa0>
   14c04:	sub	r2, r6, r4
   14c08:	cmp	r2, r5
   14c0c:	movcs	r2, r5
   14c10:	mov	r1, r4
   14c14:	mov	r0, r7
   14c18:	bl	10ef4 <read@plt>
   14c1c:	cmp	r0, #0
   14c20:	bgt	14bf8 <sigaltstack@plt+0x3a70>
   14c24:	bne	14c30 <sigaltstack@plt+0x3aa8>
   14c28:	sub	r0, r4, r8
   14c2c:	pop	{r4, r5, r6, r7, r8, pc}
   14c30:	mvn	r0, #0
   14c34:	pop	{r4, r5, r6, r7, r8, pc}
   14c38:	push	{r4, r5, r6, r7, r8, lr}
   14c3c:	subs	r4, r0, #0
   14c40:	mov	r5, r1
   14c44:	beq	14ca4 <sigaltstack@plt+0x3b1c>
   14c48:	cmp	r1, #0
   14c4c:	beq	14c9c <sigaltstack@plt+0x3b14>
   14c50:	mov	r7, r2
   14c54:	mov	r6, r1
   14c58:	mov	r0, r4
   14c5c:	mov	r1, r6
   14c60:	bl	16e84 <sigaltstack@plt+0x5cfc>
   14c64:	cmp	r1, #0
   14c68:	bne	14cb8 <sigaltstack@plt+0x3b30>
   14c6c:	mov	r1, r6
   14c70:	mov	r0, r4
   14c74:	bl	16c98 <sigaltstack@plt+0x5b10>
   14c78:	mul	r6, r0, r5
   14c7c:	mov	r8, r0
   14c80:	cmp	r6, r7
   14c84:	bhi	14c9c <sigaltstack@plt+0x3b14>
   14c88:	mov	r1, r5
   14c8c:	mov	r0, r6
   14c90:	bl	16c98 <sigaltstack@plt+0x5b10>
   14c94:	cmp	r0, r8
   14c98:	moveq	r4, r6
   14c9c:	mov	r0, r4
   14ca0:	pop	{r4, r5, r6, r7, r8, pc}
   14ca4:	cmp	r1, #0
   14ca8:	movne	r4, r1
   14cac:	moveq	r4, #8192	; 0x2000
   14cb0:	mov	r0, r4
   14cb4:	pop	{r4, r5, r6, r7, r8, pc}
   14cb8:	mov	r0, r6
   14cbc:	mov	r6, r1
   14cc0:	b	14c5c <sigaltstack@plt+0x3ad4>
   14cc4:	push	{r4, r5, r6, r7, r8, lr}
   14cc8:	subs	r7, r0, #0
   14ccc:	ldr	r5, [pc, #108]	; 14d40 <sigaltstack@plt+0x3bb8>
   14cd0:	sub	sp, sp, #8
   14cd4:	mov	r8, r1
   14cd8:	ldr	r1, [r5]
   14cdc:	moveq	r7, sp
   14ce0:	str	r1, [sp, #4]
   14ce4:	mov	r0, r7
   14ce8:	mov	r1, r8
   14cec:	mov	r6, r2
   14cf0:	bl	10ff0 <mbrtowc@plt>
   14cf4:	cmp	r6, #0
   14cf8:	cmnne	r0, #3
   14cfc:	mov	r4, r0
   14d00:	bhi	14d20 <sigaltstack@plt+0x3b98>
   14d04:	ldr	r2, [sp, #4]
   14d08:	ldr	r3, [r5]
   14d0c:	mov	r0, r4
   14d10:	cmp	r2, r3
   14d14:	bne	14d3c <sigaltstack@plt+0x3bb4>
   14d18:	add	sp, sp, #8
   14d1c:	pop	{r4, r5, r6, r7, r8, pc}
   14d20:	mov	r0, #0
   14d24:	bl	12714 <sigaltstack@plt+0x158c>
   14d28:	cmp	r0, #0
   14d2c:	moveq	r4, #1
   14d30:	ldrbeq	r3, [r8]
   14d34:	streq	r3, [r7]
   14d38:	b	14d04 <sigaltstack@plt+0x3b7c>
   14d3c:	bl	10f78 <__stack_chk_fail@plt>
   14d40:	andeq	r7, r2, r8, lsl #30
   14d44:	cmp	r0, r1
   14d48:	beq	14dac <sigaltstack@plt+0x3c24>
   14d4c:	push	{lr}		; (str lr, [sp, #-4]!)
   14d50:	sub	r0, r0, #1
   14d54:	sub	r1, r1, #1
   14d58:	b	14d64 <sigaltstack@plt+0x3bdc>
   14d5c:	cmp	r3, r2
   14d60:	bne	14d9c <sigaltstack@plt+0x3c14>
   14d64:	ldrb	r3, [r0, #1]!
   14d68:	sub	r2, r3, #65	; 0x41
   14d6c:	cmp	r2, #25
   14d70:	ldrb	r2, [r1, #1]!
   14d74:	mov	ip, r3
   14d78:	addls	ip, r3, #32
   14d7c:	sub	lr, r2, #65	; 0x41
   14d80:	uxtbls	r3, ip
   14d84:	cmp	lr, #25
   14d88:	mov	lr, r2
   14d8c:	addls	lr, r2, #32
   14d90:	uxtbls	r2, lr
   14d94:	cmp	r3, #0
   14d98:	bne	14d5c <sigaltstack@plt+0x3bd4>
   14d9c:	uxtb	ip, ip
   14da0:	uxtb	r0, lr
   14da4:	sub	r0, ip, r0
   14da8:	pop	{pc}		; (ldr pc, [sp], #4)
   14dac:	mov	r0, #0
   14db0:	bx	lr
   14db4:	push	{r4, lr}
   14db8:	mov	r0, #14
   14dbc:	bl	11134 <nl_langinfo@plt>
   14dc0:	cmp	r0, #0
   14dc4:	beq	14ddc <sigaltstack@plt+0x3c54>
   14dc8:	ldrb	r2, [r0]
   14dcc:	ldr	r3, [pc, #16]	; 14de4 <sigaltstack@plt+0x3c5c>
   14dd0:	cmp	r2, #0
   14dd4:	moveq	r0, r3
   14dd8:	pop	{r4, pc}
   14ddc:	ldr	r0, [pc]	; 14de4 <sigaltstack@plt+0x3c5c>
   14de0:	pop	{r4, pc}
   14de4:	andeq	r7, r1, r8, asr lr
   14de8:	push	{r4, lr}
   14dec:	mov	r4, r0
   14df0:	bl	10f00 <wcwidth@plt>
   14df4:	cmp	r0, #0
   14df8:	popge	{r4, pc}
   14dfc:	mov	r0, r4
   14e00:	bl	10f9c <iswcntrl@plt>
   14e04:	clz	r0, r0
   14e08:	lsr	r0, r0, #5
   14e0c:	pop	{r4, pc}
   14e10:	mov	r3, r1
   14e14:	push	{r4, r5, r6, lr}
   14e18:	mov	r4, r1
   14e1c:	ldr	r1, [r3], #16
   14e20:	ldr	r2, [r4, #4]
   14e24:	cmp	r1, r3
   14e28:	mov	r5, r0
   14e2c:	strne	r1, [r0]
   14e30:	beq	14e50 <sigaltstack@plt+0x3cc8>
   14e34:	ldrb	r3, [r4, #8]
   14e38:	str	r2, [r5, #4]
   14e3c:	cmp	r3, #0
   14e40:	strb	r3, [r5, #8]
   14e44:	ldrne	r3, [r4, #12]
   14e48:	strne	r3, [r5, #12]
   14e4c:	pop	{r4, r5, r6, pc}
   14e50:	add	r3, r0, #16
   14e54:	mov	r0, r3
   14e58:	bl	10f30 <memcpy@plt>
   14e5c:	ldr	r2, [r4, #4]
   14e60:	str	r0, [r5]
   14e64:	b	14e34 <sigaltstack@plt+0x3cac>
   14e68:	ldr	r3, [pc, #20]	; 14e84 <sigaltstack@plt+0x3cfc>
   14e6c:	lsr	r2, r0, #5
   14e70:	and	r0, r0, #31
   14e74:	ldr	r3, [r3, r2, lsl #2]
   14e78:	lsr	r0, r3, r0
   14e7c:	and	r0, r0, #1
   14e80:	bx	lr
   14e84:	andeq	r7, r1, r0, ror #28
   14e88:	push	{r4, r5, r6, r7, r8, fp, lr}
   14e8c:	mov	r7, r2
   14e90:	ldr	r6, [pc, #368]	; 15008 <sigaltstack@plt+0x3e80>
   14e94:	add	fp, sp, #24
   14e98:	lsrs	r2, r7, #30
   14e9c:	sub	sp, sp, #12
   14ea0:	ldr	lr, [r6]
   14ea4:	movne	ip, #1
   14ea8:	moveq	ip, #0
   14eac:	lsls	r2, r7, #2
   14eb0:	str	lr, [fp, #-32]	; 0xffffffe0
   14eb4:	bmi	14fc8 <sigaltstack@plt+0x3e40>
   14eb8:	cmp	ip, #0
   14ebc:	bne	14fc8 <sigaltstack@plt+0x3e40>
   14ec0:	cmp	r2, #4016	; 0xfb0
   14ec4:	mov	r5, r0
   14ec8:	mov	r4, r1
   14ecc:	mov	r8, r3
   14ed0:	bhi	14fb8 <sigaltstack@plt+0x3e30>
   14ed4:	add	r3, r2, #22
   14ed8:	bic	r3, r3, #7
   14edc:	sub	sp, sp, r3
   14ee0:	add	r0, sp, #15
   14ee4:	bic	r0, r0, #15
   14ee8:	cmp	r0, #0
   14eec:	beq	14fc8 <sigaltstack@plt+0x3e40>
   14ef0:	cmp	r7, #2
   14ef4:	mov	r3, #1
   14ef8:	str	r3, [r0, #4]
   14efc:	movhi	r1, r4
   14f00:	movhi	ip, #0
   14f04:	movhi	r3, #2
   14f08:	bls	14f50 <sigaltstack@plt+0x3dc8>
   14f0c:	ldrb	r2, [r1, #1]!
   14f10:	ldrb	lr, [r4, ip]
   14f14:	cmp	lr, r2
   14f18:	bne	14f34 <sigaltstack@plt+0x3dac>
   14f1c:	b	14fec <sigaltstack@plt+0x3e64>
   14f20:	ldr	lr, [r0, ip, lsl #2]
   14f24:	sub	ip, ip, lr
   14f28:	ldrb	lr, [r4, ip]
   14f2c:	cmp	lr, r2
   14f30:	beq	14fec <sigaltstack@plt+0x3e64>
   14f34:	cmp	ip, #0
   14f38:	bne	14f20 <sigaltstack@plt+0x3d98>
   14f3c:	mov	ip, #0
   14f40:	str	r3, [r0, r3, lsl #2]
   14f44:	add	r3, r3, #1
   14f48:	cmp	r7, r3
   14f4c:	bne	14f0c <sigaltstack@plt+0x3d84>
   14f50:	mov	r3, #0
   14f54:	str	r3, [r8]
   14f58:	ldrb	r2, [r5]
   14f5c:	mov	r1, r5
   14f60:	cmp	r2, #0
   14f64:	beq	14f98 <sigaltstack@plt+0x3e10>
   14f68:	ldrb	ip, [r4, r3]
   14f6c:	cmp	ip, r2
   14f70:	beq	14fd0 <sigaltstack@plt+0x3e48>
   14f74:	cmp	r3, #0
   14f78:	addeq	r5, r5, #1
   14f7c:	ldrbeq	r2, [r1, #1]
   14f80:	ldrne	ip, [r0, r3, lsl #2]
   14f84:	addeq	r1, r1, #1
   14f88:	addne	r5, r5, ip
   14f8c:	subne	r3, r3, ip
   14f90:	cmp	r2, #0
   14f94:	bne	14f68 <sigaltstack@plt+0x3de0>
   14f98:	bl	16a78 <sigaltstack@plt+0x58f0>
   14f9c:	mov	r0, #1
   14fa0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14fa4:	ldr	r3, [r6]
   14fa8:	cmp	r2, r3
   14fac:	bne	15004 <sigaltstack@plt+0x3e7c>
   14fb0:	sub	sp, fp, #24
   14fb4:	pop	{r4, r5, r6, r7, r8, fp, pc}
   14fb8:	mov	r0, r2
   14fbc:	bl	16a3c <sigaltstack@plt+0x58b4>
   14fc0:	cmp	r0, #0
   14fc4:	bne	14ef0 <sigaltstack@plt+0x3d68>
   14fc8:	mov	r0, #0
   14fcc:	b	14fa0 <sigaltstack@plt+0x3e18>
   14fd0:	add	r3, r3, #1
   14fd4:	cmp	r7, r3
   14fd8:	add	ip, r1, #1
   14fdc:	beq	14ffc <sigaltstack@plt+0x3e74>
   14fe0:	ldrb	r2, [r1, #1]
   14fe4:	mov	r1, ip
   14fe8:	b	14f60 <sigaltstack@plt+0x3dd8>
   14fec:	add	ip, ip, #1
   14ff0:	sub	r2, r3, ip
   14ff4:	str	r2, [r0, r3, lsl #2]
   14ff8:	b	14f44 <sigaltstack@plt+0x3dbc>
   14ffc:	str	r5, [r8]
   15000:	b	14f98 <sigaltstack@plt+0x3e10>
   15004:	bl	10f78 <__stack_chk_fail@plt>
   15008:	andeq	r7, r2, r8, lsl #30
   1500c:	push	{r4, lr}
   15010:	mov	r2, #179	; 0xb3
   15014:	ldr	r3, [pc, #8]	; 15024 <sigaltstack@plt+0x3e9c>
   15018:	ldr	r1, [pc, #8]	; 15028 <sigaltstack@plt+0x3ea0>
   1501c:	ldr	r0, [pc, #8]	; 1502c <sigaltstack@plt+0x3ea4>
   15020:	bl	1117c <__assert_fail@plt>
   15024:	andeq	r7, r1, r0, lsl #29
   15028:	andeq	r7, r1, r8, lsr sl
   1502c:	andeq	r7, r1, r4, asr #20
   15030:	ldr	r3, [pc, #2124]	; 15884 <sigaltstack@plt+0x46fc>
   15034:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15038:	add	fp, sp, #32
   1503c:	sub	sp, sp, #196	; 0xc4
   15040:	ldr	r3, [r3]
   15044:	str	r0, [fp, #-220]	; 0xffffff24
   15048:	mov	r0, r1
   1504c:	mov	r7, r1
   15050:	str	r2, [fp, #-224]	; 0xffffff20
   15054:	str	r3, [fp, #-40]	; 0xffffffd8
   15058:	bl	16a9c <sigaltstack@plt+0x5914>
   1505c:	mov	r2, #44	; 0x2c
   15060:	str	r0, [fp, #-216]	; 0xffffff28
   15064:	umull	r0, r1, r0, r2
   15068:	adds	r3, r1, #0
   1506c:	movne	r3, #1
   15070:	cmp	r0, #0
   15074:	blt	15434 <sigaltstack@plt+0x42ac>
   15078:	cmp	r3, #0
   1507c:	bne	15434 <sigaltstack@plt+0x42ac>
   15080:	ldr	r3, [fp, #-216]	; 0xffffff28
   15084:	lsl	r4, r3, #2
   15088:	add	r0, r4, r3
   1508c:	add	r0, r3, r0, lsl #1
   15090:	lsl	r0, r0, #2
   15094:	cmp	r0, #4016	; 0xfb0
   15098:	bhi	15454 <sigaltstack@plt+0x42cc>
   1509c:	add	r3, r0, #22
   150a0:	bic	r3, r3, #7
   150a4:	sub	sp, sp, r3
   150a8:	add	r8, sp, #15
   150ac:	bic	r8, r8, #15
   150b0:	cmp	r8, #0
   150b4:	beq	15434 <sigaltstack@plt+0x42ac>
   150b8:	ldr	r3, [fp, #-216]	; 0xffffff28
   150bc:	mov	r5, #0
   150c0:	add	r4, r4, r3
   150c4:	str	r7, [fp, #-192]	; 0xffffff40
   150c8:	add	r9, r8, r4, lsl #3
   150cc:	str	r5, [fp, #-200]	; 0xffffff38
   150d0:	strb	r5, [fp, #-208]	; 0xffffff30
   150d4:	str	r5, [fp, #-204]	; 0xffffff34
   150d8:	strb	r5, [fp, #-196]	; 0xffffff3c
   150dc:	add	r4, r8, #16
   150e0:	ldr	r6, [pc, #1952]	; 15888 <sigaltstack@plt+0x4700>
   150e4:	b	15168 <sigaltstack@plt+0x3fe0>
   150e8:	ldrb	r3, [r7]
   150ec:	and	r2, r3, #31
   150f0:	lsr	r3, r3, #5
   150f4:	ldr	r3, [r6, r3, lsl #2]
   150f8:	lsr	r3, r3, r2
   150fc:	tst	r3, #1
   15100:	beq	15460 <sigaltstack@plt+0x42d8>
   15104:	mov	r3, #1
   15108:	str	r3, [fp, #-188]	; 0xffffff44
   1510c:	ldrb	r7, [r7]
   15110:	strb	r3, [fp, #-184]	; 0xffffff48
   15114:	strb	r3, [fp, #-196]	; 0xffffff3c
   15118:	str	r7, [fp, #-180]	; 0xffffff4c
   1511c:	cmp	r7, #0
   15120:	beq	151dc <sigaltstack@plt+0x4054>
   15124:	mov	r3, #1
   15128:	ldr	r1, [fp, #-192]	; 0xffffff40
   1512c:	sub	r2, fp, #176	; 0xb0
   15130:	cmp	r1, r2
   15134:	ldr	r2, [fp, #-188]	; 0xffffff44
   15138:	strne	r1, [r4, #-16]
   1513c:	beq	1547c <sigaltstack@plt+0x42f4>
   15140:	cmp	r3, #0
   15144:	str	r2, [r4, #-12]
   15148:	strb	r3, [r4, #-8]
   1514c:	ldrne	r3, [fp, #-180]	; 0xffffff4c
   15150:	ldr	r7, [fp, #-192]	; 0xffffff40
   15154:	strne	r3, [r4, #-4]
   15158:	add	r4, r4, #40	; 0x28
   1515c:	add	r7, r7, r2
   15160:	strb	r5, [fp, #-196]	; 0xffffff3c
   15164:	str	r7, [fp, #-192]	; 0xffffff40
   15168:	ldrb	r3, [fp, #-208]	; 0xffffff30
   1516c:	cmp	r3, #0
   15170:	beq	150e8 <sigaltstack@plt+0x3f60>
   15174:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   15178:	mov	r1, r0
   1517c:	mov	r0, r7
   15180:	bl	1341c <sigaltstack@plt+0x2294>
   15184:	sub	r3, fp, #204	; 0xcc
   15188:	mov	r1, r7
   1518c:	mov	r2, r0
   15190:	sub	r0, fp, #180	; 0xb4
   15194:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   15198:	cmn	r0, #1
   1519c:	str	r0, [fp, #-188]	; 0xffffff44
   151a0:	beq	15494 <sigaltstack@plt+0x430c>
   151a4:	cmn	r0, #2
   151a8:	beq	154ac <sigaltstack@plt+0x4324>
   151ac:	cmp	r0, #0
   151b0:	beq	154cc <sigaltstack@plt+0x4344>
   151b4:	ldr	r7, [fp, #-180]	; 0xffffff4c
   151b8:	mov	sl, #1
   151bc:	sub	r0, fp, #204	; 0xcc
   151c0:	strb	sl, [fp, #-184]	; 0xffffff48
   151c4:	bl	10f48 <mbsinit@plt>
   151c8:	strb	sl, [fp, #-196]	; 0xffffff3c
   151cc:	cmp	r0, #0
   151d0:	strbne	r5, [fp, #-208]	; 0xffffff30
   151d4:	cmp	r7, #0
   151d8:	bne	15124 <sigaltstack@plt+0x3f9c>
   151dc:	ldr	r3, [fp, #-216]	; 0xffffff28
   151e0:	cmp	r3, #2
   151e4:	mov	r3, #1
   151e8:	str	r3, [r9, #4]
   151ec:	bls	15290 <sigaltstack@plt+0x4108>
   151f0:	mov	sl, #2
   151f4:	mov	r4, r7
   151f8:	str	r7, [fp, #-228]	; 0xffffff1c
   151fc:	mov	r7, sl
   15200:	ldr	sl, [fp, #-216]	; 0xffffff28
   15204:	mov	r5, r8
   15208:	ldrb	r6, [r5, #48]	; 0x30
   1520c:	b	1523c <sigaltstack@plt+0x40b4>
   15210:	ldrb	r2, [r3, #8]
   15214:	cmp	r2, #0
   15218:	beq	1524c <sigaltstack@plt+0x40c4>
   1521c:	ldr	r3, [r3, #12]
   15220:	ldr	r2, [r5, #52]	; 0x34
   15224:	cmp	r2, r3
   15228:	beq	15270 <sigaltstack@plt+0x40e8>
   1522c:	cmp	r4, #0
   15230:	beq	157a8 <sigaltstack@plt+0x4620>
   15234:	ldr	r3, [r9, r4, lsl #2]
   15238:	sub	r4, r4, r3
   1523c:	add	r3, r4, r4, lsl #2
   15240:	cmp	r6, #0
   15244:	add	r3, r8, r3, lsl #3
   15248:	bne	15210 <sigaltstack@plt+0x4088>
   1524c:	ldr	r2, [r5, #44]	; 0x2c
   15250:	ldr	r1, [r3, #4]
   15254:	cmp	r2, r1
   15258:	bne	1522c <sigaltstack@plt+0x40a4>
   1525c:	ldr	r1, [r3]
   15260:	ldr	r0, [r5, #40]	; 0x28
   15264:	bl	10f54 <memcmp@plt>
   15268:	cmp	r0, #0
   1526c:	bne	1522c <sigaltstack@plt+0x40a4>
   15270:	add	r4, r4, #1
   15274:	sub	r2, r7, r4
   15278:	str	r2, [r9, r7, lsl #2]
   1527c:	add	r7, r7, #1
   15280:	cmp	sl, r7
   15284:	add	r5, r5, #40	; 0x28
   15288:	bne	15208 <sigaltstack@plt+0x4080>
   1528c:	ldr	r7, [fp, #-228]	; 0xffffff1c
   15290:	ldr	r2, [fp, #-220]	; 0xffffff24
   15294:	ldr	sl, [pc, #1516]	; 15888 <sigaltstack@plt+0x4700>
   15298:	str	r2, [fp, #-136]	; 0xffffff78
   1529c:	str	r2, [fp, #-80]	; 0xffffffb0
   152a0:	ldr	r2, [fp, #-224]	; 0xffffff20
   152a4:	mov	r6, #1
   152a8:	mov	r3, #0
   152ac:	str	r3, [fp, #-144]	; 0xffffff70
   152b0:	str	r3, [r2]
   152b4:	strb	r3, [fp, #-152]	; 0xffffff68
   152b8:	str	r3, [fp, #-148]	; 0xffffff6c
   152bc:	strb	r3, [fp, #-140]	; 0xffffff74
   152c0:	strb	r3, [fp, #-96]	; 0xffffffa0
   152c4:	str	r3, [fp, #-92]	; 0xffffffa4
   152c8:	strb	r3, [fp, #-84]	; 0xffffffac
   152cc:	str	r3, [fp, #-88]	; 0xffffffa8
   152d0:	cmp	r3, #0
   152d4:	ldreq	r5, [fp, #-80]	; 0xffffffb0
   152d8:	beq	1538c <sigaltstack@plt+0x4204>
   152dc:	ldrb	r3, [fp, #-72]	; 0xffffffb8
   152e0:	cmp	r3, #0
   152e4:	ldrne	r4, [fp, #-68]	; 0xffffffbc
   152e8:	bne	153c8 <sigaltstack@plt+0x4240>
   152ec:	add	r3, r7, r7, lsl #2
   152f0:	add	r3, r8, r3, lsl #3
   152f4:	ldr	r2, [r3, #4]
   152f8:	ldr	r4, [fp, #-76]	; 0xffffffb4
   152fc:	cmp	r2, r4
   15300:	beq	15570 <sigaltstack@plt+0x43e8>
   15304:	cmp	r7, #0
   15308:	bne	15594 <sigaltstack@plt+0x440c>
   1530c:	ldrb	r3, [fp, #-140]	; 0xffffff74
   15310:	cmp	r3, #0
   15314:	bne	157f0 <sigaltstack@plt+0x4668>
   15318:	ldrb	r3, [fp, #-152]	; 0xffffff68
   1531c:	ldr	r4, [fp, #-136]	; 0xffffff78
   15320:	cmp	r3, #0
   15324:	bne	15740 <sigaltstack@plt+0x45b8>
   15328:	ldrb	r3, [r4]
   1532c:	and	r2, r3, #31
   15330:	lsr	r3, r3, #5
   15334:	ldr	r3, [sl, r3, lsl #2]
   15338:	lsr	r3, r3, r2
   1533c:	tst	r3, #1
   15340:	beq	1572c <sigaltstack@plt+0x45a4>
   15344:	str	r6, [fp, #-132]	; 0xffffff7c
   15348:	ldrb	r4, [r4]
   1534c:	strb	r6, [fp, #-128]	; 0xffffff80
   15350:	strb	r6, [fp, #-140]	; 0xffffff74
   15354:	str	r4, [fp, #-124]	; 0xffffff84
   15358:	cmp	r4, #0
   1535c:	beq	1562c <sigaltstack@plt+0x44a4>
   15360:	ldr	r4, [fp, #-136]	; 0xffffff78
   15364:	ldr	r3, [fp, #-132]	; 0xffffff7c
   15368:	ldr	r5, [fp, #-80]	; 0xffffffb0
   1536c:	add	r4, r4, r3
   15370:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15374:	str	r4, [fp, #-136]	; 0xffffff78
   15378:	add	r5, r5, r3
   1537c:	mov	r3, #0
   15380:	str	r5, [fp, #-80]	; 0xffffffb0
   15384:	strb	r3, [fp, #-140]	; 0xffffff74
   15388:	strb	r3, [fp, #-84]	; 0xffffffac
   1538c:	ldrb	r3, [fp, #-96]	; 0xffffffa0
   15390:	cmp	r3, #0
   15394:	bne	15508 <sigaltstack@plt+0x4380>
   15398:	ldrb	r3, [r5]
   1539c:	and	r2, r3, #31
   153a0:	lsr	r3, r3, #5
   153a4:	ldr	r3, [sl, r3, lsl #2]
   153a8:	lsr	r3, r3, r2
   153ac:	tst	r3, #1
   153b0:	beq	154f4 <sigaltstack@plt+0x436c>
   153b4:	str	r6, [fp, #-76]	; 0xffffffb4
   153b8:	ldrb	r4, [r5]
   153bc:	strb	r6, [fp, #-72]	; 0xffffffb8
   153c0:	strb	r6, [fp, #-84]	; 0xffffffac
   153c4:	str	r4, [fp, #-68]	; 0xffffffbc
   153c8:	cmp	r4, #0
   153cc:	beq	15424 <sigaltstack@plt+0x429c>
   153d0:	add	r3, r7, r7, lsl #2
   153d4:	add	r3, r8, r3, lsl #3
   153d8:	ldrb	r2, [r3, #8]
   153dc:	cmp	r2, #0
   153e0:	beq	152f4 <sigaltstack@plt+0x416c>
   153e4:	ldr	r3, [r3, #12]
   153e8:	cmp	r3, r4
   153ec:	bne	15304 <sigaltstack@plt+0x417c>
   153f0:	ldr	r4, [fp, #-76]	; 0xffffffb4
   153f4:	ldr	r5, [fp, #-80]	; 0xffffffb0
   153f8:	ldr	r3, [fp, #-216]	; 0xffffff28
   153fc:	add	r7, r7, #1
   15400:	cmp	r3, r7
   15404:	add	r5, r5, r4
   15408:	mov	r3, #0
   1540c:	str	r5, [fp, #-80]	; 0xffffffb0
   15410:	strb	r3, [fp, #-84]	; 0xffffffac
   15414:	bne	1538c <sigaltstack@plt+0x4204>
   15418:	ldr	r2, [fp, #-224]	; 0xffffff20
   1541c:	ldr	r3, [fp, #-136]	; 0xffffff78
   15420:	str	r3, [r2]
   15424:	mov	r0, r8
   15428:	bl	16a78 <sigaltstack@plt+0x58f0>
   1542c:	mov	r0, #1
   15430:	b	15438 <sigaltstack@plt+0x42b0>
   15434:	mov	r0, #0
   15438:	ldr	r3, [pc, #1092]	; 15884 <sigaltstack@plt+0x46fc>
   1543c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15440:	ldr	r3, [r3]
   15444:	cmp	r2, r3
   15448:	bne	15880 <sigaltstack@plt+0x46f8>
   1544c:	sub	sp, fp, #32
   15450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15454:	bl	16a3c <sigaltstack@plt+0x58b4>
   15458:	mov	r8, r0
   1545c:	b	150b0 <sigaltstack@plt+0x3f28>
   15460:	sub	r0, fp, #204	; 0xcc
   15464:	bl	10f48 <mbsinit@plt>
   15468:	cmp	r0, #0
   1546c:	beq	15858 <sigaltstack@plt+0x46d0>
   15470:	mov	r3, #1
   15474:	strb	r3, [fp, #-208]	; 0xffffff30
   15478:	b	15174 <sigaltstack@plt+0x3fec>
   1547c:	mov	r0, r4
   15480:	bl	10f30 <memcpy@plt>
   15484:	str	r4, [r4, #-16]
   15488:	ldrb	r3, [fp, #-184]	; 0xffffff48
   1548c:	ldr	r2, [fp, #-188]	; 0xffffff44
   15490:	b	15140 <sigaltstack@plt+0x3fb8>
   15494:	mov	r3, #1
   15498:	str	r3, [fp, #-188]	; 0xffffff44
   1549c:	strb	r3, [fp, #-196]	; 0xffffff3c
   154a0:	strb	r5, [fp, #-184]	; 0xffffff48
   154a4:	mov	r3, #0
   154a8:	b	15128 <sigaltstack@plt+0x3fa0>
   154ac:	ldr	r0, [fp, #-192]	; 0xffffff40
   154b0:	bl	11080 <strlen@plt>
   154b4:	mov	r3, #1
   154b8:	strb	r3, [fp, #-196]	; 0xffffff3c
   154bc:	strb	r5, [fp, #-184]	; 0xffffff48
   154c0:	mov	r3, #0
   154c4:	str	r0, [fp, #-188]	; 0xffffff44
   154c8:	b	15128 <sigaltstack@plt+0x3fa0>
   154cc:	ldr	r3, [fp, #-192]	; 0xffffff40
   154d0:	mov	r2, #1
   154d4:	str	r2, [fp, #-188]	; 0xffffff44
   154d8:	ldrb	r3, [r3]
   154dc:	cmp	r3, #0
   154e0:	bne	1586c <sigaltstack@plt+0x46e4>
   154e4:	ldr	r7, [fp, #-180]	; 0xffffff4c
   154e8:	cmp	r7, #0
   154ec:	beq	151b8 <sigaltstack@plt+0x4030>
   154f0:	bl	1500c <sigaltstack@plt+0x3e84>
   154f4:	sub	r0, fp, #92	; 0x5c
   154f8:	bl	10f48 <mbsinit@plt>
   154fc:	cmp	r0, #0
   15500:	beq	15858 <sigaltstack@plt+0x46d0>
   15504:	strb	r6, [fp, #-96]	; 0xffffffa0
   15508:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   1550c:	mov	r1, r0
   15510:	mov	r0, r5
   15514:	bl	1341c <sigaltstack@plt+0x2294>
   15518:	sub	r3, fp, #92	; 0x5c
   1551c:	mov	r1, r5
   15520:	mov	r2, r0
   15524:	sub	r0, fp, #68	; 0x44
   15528:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   1552c:	cmn	r0, #1
   15530:	str	r0, [fp, #-76]	; 0xffffffb4
   15534:	beq	15718 <sigaltstack@plt+0x4590>
   15538:	cmn	r0, #2
   1553c:	beq	157b0 <sigaltstack@plt+0x4628>
   15540:	cmp	r0, #0
   15544:	beq	157cc <sigaltstack@plt+0x4644>
   15548:	ldr	r4, [fp, #-68]	; 0xffffffbc
   1554c:	sub	r0, fp, #92	; 0x5c
   15550:	strb	r6, [fp, #-72]	; 0xffffffb8
   15554:	bl	10f48 <mbsinit@plt>
   15558:	cmp	r0, #0
   1555c:	movne	r3, #0
   15560:	strbeq	r6, [fp, #-84]	; 0xffffffac
   15564:	strbne	r6, [fp, #-84]	; 0xffffffac
   15568:	strbne	r3, [fp, #-96]	; 0xffffffa0
   1556c:	b	153c8 <sigaltstack@plt+0x4240>
   15570:	ldr	r5, [fp, #-80]	; 0xffffffb0
   15574:	ldr	r0, [r3]
   15578:	mov	r1, r5
   1557c:	mov	r2, r4
   15580:	bl	10f54 <memcmp@plt>
   15584:	cmp	r0, #0
   15588:	beq	153f8 <sigaltstack@plt+0x4270>
   1558c:	cmp	r7, #0
   15590:	beq	1530c <sigaltstack@plt+0x4184>
   15594:	ldr	r5, [r9, r7, lsl #2]
   15598:	sub	r3, r7, r5
   1559c:	cmp	r5, #0
   155a0:	str	r3, [fp, #-220]	; 0xffffff24
   155a4:	beq	15710 <sigaltstack@plt+0x4588>
   155a8:	ldrb	r3, [fp, #-140]	; 0xffffff74
   155ac:	cmp	r3, #0
   155b0:	ldreq	r4, [fp, #-136]	; 0xffffff78
   155b4:	beq	155e8 <sigaltstack@plt+0x4460>
   155b8:	ldrb	r3, [fp, #-128]	; 0xffffff80
   155bc:	cmp	r3, #0
   155c0:	ldrne	r4, [fp, #-124]	; 0xffffff84
   155c4:	bne	15624 <sigaltstack@plt+0x449c>
   155c8:	ldr	r4, [fp, #-136]	; 0xffffff78
   155cc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   155d0:	subs	r5, r5, #1
   155d4:	add	r4, r4, r3
   155d8:	mov	r3, #0
   155dc:	str	r4, [fp, #-136]	; 0xffffff78
   155e0:	strb	r3, [fp, #-140]	; 0xffffff74
   155e4:	beq	1570c <sigaltstack@plt+0x4584>
   155e8:	ldrb	r3, [fp, #-152]	; 0xffffff68
   155ec:	cmp	r3, #0
   155f0:	bne	15644 <sigaltstack@plt+0x44bc>
   155f4:	ldrb	r3, [r4]
   155f8:	and	r2, r3, #31
   155fc:	lsr	r3, r3, #5
   15600:	ldr	r3, [sl, r3, lsl #2]
   15604:	lsr	r3, r3, r2
   15608:	tst	r3, #1
   1560c:	beq	15630 <sigaltstack@plt+0x44a8>
   15610:	str	r6, [fp, #-132]	; 0xffffff7c
   15614:	ldrb	r4, [r4]
   15618:	strb	r6, [fp, #-128]	; 0xffffff80
   1561c:	strb	r6, [fp, #-140]	; 0xffffff74
   15620:	str	r4, [fp, #-124]	; 0xffffff84
   15624:	cmp	r4, #0
   15628:	bne	155c8 <sigaltstack@plt+0x4440>
   1562c:	bl	11164 <abort@plt>
   15630:	sub	r0, fp, #148	; 0x94
   15634:	bl	10f48 <mbsinit@plt>
   15638:	cmp	r0, #0
   1563c:	beq	15858 <sigaltstack@plt+0x46d0>
   15640:	strb	r6, [fp, #-152]	; 0xffffff68
   15644:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   15648:	mov	r1, r0
   1564c:	mov	r0, r4
   15650:	bl	1341c <sigaltstack@plt+0x2294>
   15654:	sub	r3, fp, #148	; 0x94
   15658:	mov	r1, r4
   1565c:	mov	r2, r0
   15660:	sub	r0, fp, #124	; 0x7c
   15664:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   15668:	cmn	r0, #1
   1566c:	str	r0, [fp, #-132]	; 0xffffff7c
   15670:	beq	156ac <sigaltstack@plt+0x4524>
   15674:	cmn	r0, #2
   15678:	beq	156bc <sigaltstack@plt+0x4534>
   1567c:	cmp	r0, #0
   15680:	beq	156d8 <sigaltstack@plt+0x4550>
   15684:	ldr	r4, [fp, #-124]	; 0xffffff84
   15688:	sub	r0, fp, #148	; 0x94
   1568c:	strb	r6, [fp, #-128]	; 0xffffff80
   15690:	bl	10f48 <mbsinit@plt>
   15694:	cmp	r0, #0
   15698:	movne	r3, #0
   1569c:	strbeq	r6, [fp, #-140]	; 0xffffff74
   156a0:	strbne	r6, [fp, #-140]	; 0xffffff74
   156a4:	strbne	r3, [fp, #-152]	; 0xffffff68
   156a8:	b	15624 <sigaltstack@plt+0x449c>
   156ac:	mov	r3, #0
   156b0:	str	r6, [fp, #-132]	; 0xffffff7c
   156b4:	strb	r3, [fp, #-128]	; 0xffffff80
   156b8:	b	155c8 <sigaltstack@plt+0x4440>
   156bc:	ldr	r4, [fp, #-136]	; 0xffffff78
   156c0:	mov	r0, r4
   156c4:	bl	11080 <strlen@plt>
   156c8:	mov	r3, #0
   156cc:	strb	r3, [fp, #-128]	; 0xffffff80
   156d0:	str	r0, [fp, #-132]	; 0xffffff7c
   156d4:	b	155cc <sigaltstack@plt+0x4444>
   156d8:	ldr	r4, [fp, #-136]	; 0xffffff78
   156dc:	str	r6, [fp, #-132]	; 0xffffff7c
   156e0:	ldrb	r3, [r4]
   156e4:	cmp	r3, #0
   156e8:	bne	1586c <sigaltstack@plt+0x46e4>
   156ec:	ldr	r4, [fp, #-124]	; 0xffffff84
   156f0:	cmp	r4, #0
   156f4:	beq	15688 <sigaltstack@plt+0x4500>
   156f8:	ldr	r3, [pc, #396]	; 1588c <sigaltstack@plt+0x4704>
   156fc:	mov	r2, #179	; 0xb3
   15700:	ldr	r1, [pc, #392]	; 15890 <sigaltstack@plt+0x4708>
   15704:	ldr	r0, [pc, #392]	; 15894 <sigaltstack@plt+0x470c>
   15708:	bl	1117c <__assert_fail@plt>
   1570c:	ldr	r7, [fp, #-220]	; 0xffffff24
   15710:	ldrb	r3, [fp, #-84]	; 0xffffffac
   15714:	b	152d0 <sigaltstack@plt+0x4148>
   15718:	mov	r3, #0
   1571c:	str	r6, [fp, #-76]	; 0xffffffb4
   15720:	strb	r6, [fp, #-84]	; 0xffffffac
   15724:	strb	r3, [fp, #-72]	; 0xffffffb8
   15728:	b	152ec <sigaltstack@plt+0x4164>
   1572c:	sub	r0, fp, #148	; 0x94
   15730:	bl	10f48 <mbsinit@plt>
   15734:	cmp	r0, #0
   15738:	beq	15858 <sigaltstack@plt+0x46d0>
   1573c:	strb	r6, [fp, #-152]	; 0xffffff68
   15740:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   15744:	mov	r1, r0
   15748:	mov	r0, r4
   1574c:	bl	1341c <sigaltstack@plt+0x2294>
   15750:	sub	r3, fp, #148	; 0x94
   15754:	mov	r1, r4
   15758:	mov	r2, r0
   1575c:	sub	r0, fp, #124	; 0x7c
   15760:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   15764:	cmn	r0, #1
   15768:	str	r0, [fp, #-132]	; 0xffffff7c
   1576c:	beq	15804 <sigaltstack@plt+0x467c>
   15770:	cmn	r0, #2
   15774:	beq	15818 <sigaltstack@plt+0x4690>
   15778:	cmp	r0, #0
   1577c:	beq	15834 <sigaltstack@plt+0x46ac>
   15780:	ldr	r4, [fp, #-124]	; 0xffffff84
   15784:	sub	r0, fp, #148	; 0x94
   15788:	strb	r6, [fp, #-128]	; 0xffffff80
   1578c:	bl	10f48 <mbsinit@plt>
   15790:	cmp	r0, #0
   15794:	movne	r3, #0
   15798:	strbeq	r6, [fp, #-140]	; 0xffffff74
   1579c:	strbne	r6, [fp, #-140]	; 0xffffff74
   157a0:	strbne	r3, [fp, #-152]	; 0xffffff68
   157a4:	b	15358 <sigaltstack@plt+0x41d0>
   157a8:	str	r7, [r9, r7, lsl #2]
   157ac:	b	1527c <sigaltstack@plt+0x40f4>
   157b0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   157b4:	bl	11080 <strlen@plt>
   157b8:	mov	r3, #0
   157bc:	strb	r6, [fp, #-84]	; 0xffffffac
   157c0:	strb	r3, [fp, #-72]	; 0xffffffb8
   157c4:	str	r0, [fp, #-76]	; 0xffffffb4
   157c8:	b	152ec <sigaltstack@plt+0x4164>
   157cc:	ldr	r5, [fp, #-80]	; 0xffffffb0
   157d0:	str	r6, [fp, #-76]	; 0xffffffb4
   157d4:	ldrb	r3, [r5]
   157d8:	cmp	r3, #0
   157dc:	bne	1586c <sigaltstack@plt+0x46e4>
   157e0:	ldr	r4, [fp, #-68]	; 0xffffffbc
   157e4:	cmp	r4, #0
   157e8:	beq	1554c <sigaltstack@plt+0x43c4>
   157ec:	b	154f0 <sigaltstack@plt+0x4368>
   157f0:	ldrb	r3, [fp, #-128]	; 0xffffff80
   157f4:	cmp	r3, #0
   157f8:	ldrne	r4, [fp, #-124]	; 0xffffff84
   157fc:	beq	15360 <sigaltstack@plt+0x41d8>
   15800:	b	15358 <sigaltstack@plt+0x41d0>
   15804:	mov	r3, #0
   15808:	str	r6, [fp, #-132]	; 0xffffff7c
   1580c:	strb	r3, [fp, #-128]	; 0xffffff80
   15810:	ldr	r4, [fp, #-136]	; 0xffffff78
   15814:	b	15364 <sigaltstack@plt+0x41dc>
   15818:	ldr	r4, [fp, #-136]	; 0xffffff78
   1581c:	mov	r0, r4
   15820:	bl	11080 <strlen@plt>
   15824:	mov	r3, #0
   15828:	strb	r3, [fp, #-128]	; 0xffffff80
   1582c:	str	r0, [fp, #-132]	; 0xffffff7c
   15830:	b	15364 <sigaltstack@plt+0x41dc>
   15834:	ldr	r4, [fp, #-136]	; 0xffffff78
   15838:	str	r6, [fp, #-132]	; 0xffffff7c
   1583c:	ldrb	r3, [r4]
   15840:	cmp	r3, #0
   15844:	bne	1586c <sigaltstack@plt+0x46e4>
   15848:	ldr	r4, [fp, #-124]	; 0xffffff84
   1584c:	cmp	r4, #0
   15850:	beq	15784 <sigaltstack@plt+0x45fc>
   15854:	b	154f0 <sigaltstack@plt+0x4368>
   15858:	ldr	r3, [pc, #44]	; 1588c <sigaltstack@plt+0x4704>
   1585c:	mov	r2, #150	; 0x96
   15860:	ldr	r1, [pc, #40]	; 15890 <sigaltstack@plt+0x4708>
   15864:	ldr	r0, [pc, #44]	; 15898 <sigaltstack@plt+0x4710>
   15868:	bl	1117c <__assert_fail@plt>
   1586c:	ldr	r3, [pc, #24]	; 1588c <sigaltstack@plt+0x4704>
   15870:	mov	r2, #178	; 0xb2
   15874:	ldr	r1, [pc, #20]	; 15890 <sigaltstack@plt+0x4708>
   15878:	ldr	r0, [pc, #28]	; 1589c <sigaltstack@plt+0x4714>
   1587c:	bl	1117c <__assert_fail@plt>
   15880:	bl	10f78 <__stack_chk_fail@plt>
   15884:	andeq	r7, r2, r8, lsl #30
   15888:	andeq	r7, r1, r0, ror #28
   1588c:	andeq	r7, r1, r0, lsl #29
   15890:	andeq	r7, r1, r8, lsr sl
   15894:	andeq	r7, r1, r4, asr #20
   15898:	andeq	r7, r1, r8, asr sl
   1589c:	andeq	r7, r1, r0, ror sl
   158a0:	ldr	r3, [pc, #3108]	; 164cc <sigaltstack@plt+0x5344>
   158a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158a8:	sub	sp, sp, #308	; 0x134
   158ac:	ldr	r3, [r3]
   158b0:	str	r0, [sp, #4]
   158b4:	mov	fp, r1
   158b8:	str	r3, [sp, #300]	; 0x12c
   158bc:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   158c0:	cmp	r0, #1
   158c4:	bhi	15af0 <sigaltstack@plt+0x4968>
   158c8:	ldrb	r7, [fp]
   158cc:	cmp	r7, #0
   158d0:	beq	15a6c <sigaltstack@plt+0x48e4>
   158d4:	ldr	r3, [sp, #4]
   158d8:	ldrb	r8, [r3]
   158dc:	add	r3, fp, #1
   158e0:	str	r3, [sp, #8]
   158e4:	cmp	r8, #0
   158e8:	beq	15ae8 <sigaltstack@plt+0x4960>
   158ec:	ldr	sl, [sp, #4]
   158f0:	mov	r5, #0
   158f4:	mov	ip, r5
   158f8:	str	r5, [sp]
   158fc:	mov	r9, fp
   15900:	mov	lr, #1
   15904:	mov	r6, sl
   15908:	b	1596c <sigaltstack@plt+0x47e4>
   1590c:	cmp	r9, #0
   15910:	str	r3, [sp, #4]
   15914:	beq	1593c <sigaltstack@plt+0x47b4>
   15918:	ldr	r3, [sp]
   1591c:	mov	r0, r9
   15920:	sub	r1, r4, r3
   15924:	bl	11104 <strnlen@plt>
   15928:	ldr	r3, [sp, #4]
   1592c:	ldrb	r2, [r9, r0]!
   15930:	cmp	r2, #0
   15934:	bne	1621c <sigaltstack@plt+0x5094>
   15938:	str	r4, [sp]
   1593c:	mov	r0, fp
   15940:	bl	11080 <strlen@plt>
   15944:	add	r3, sp, #16
   15948:	mov	r1, fp
   1594c:	mov	r2, r0
   15950:	mov	r0, r6
   15954:	bl	14e88 <sigaltstack@plt+0x3d00>
   15958:	subs	lr, r0, #0
   1595c:	bne	16458 <sigaltstack@plt+0x52d0>
   15960:	ldrb	r8, [sl, r5]
   15964:	mov	r9, lr
   15968:	mov	ip, r4
   1596c:	add	r5, r5, #1
   15970:	mov	r0, r6
   15974:	cmp	r7, r8
   15978:	add	r6, r5, sl
   1597c:	mov	r1, r6
   15980:	add	r4, ip, #1
   15984:	beq	15a8c <sigaltstack@plt+0x4904>
   15988:	ldrb	r8, [sl, r5]
   1598c:	cmp	r8, #0
   15990:	beq	15ae8 <sigaltstack@plt+0x4960>
   15994:	cmp	r5, #9
   15998:	movls	r3, #0
   1599c:	andhi	r3, lr, #1
   159a0:	cmp	r3, #0
   159a4:	beq	15968 <sigaltstack@plt+0x47e0>
   159a8:	add	r2, r5, r5, lsl #2
   159ac:	cmp	r4, r2
   159b0:	bcs	1590c <sigaltstack@plt+0x4784>
   159b4:	mov	lr, r3
   159b8:	b	15968 <sigaltstack@plt+0x47e0>
   159bc:	add	r0, sp, #24
   159c0:	bl	10f48 <mbsinit@plt>
   159c4:	cmp	r0, #0
   159c8:	beq	164a0 <sigaltstack@plt+0x5318>
   159cc:	mov	r5, #1
   159d0:	strb	r5, [sp, #20]
   159d4:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   159d8:	mov	r1, r0
   159dc:	mov	r0, fp
   159e0:	bl	1341c <sigaltstack@plt+0x2294>
   159e4:	add	r3, sp, #24
   159e8:	mov	r1, fp
   159ec:	mov	r2, r0
   159f0:	add	r0, sp, #48	; 0x30
   159f4:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   159f8:	cmn	r0, #1
   159fc:	str	r0, [sp, #40]	; 0x28
   15a00:	strbeq	r4, [sp, #44]	; 0x2c
   15a04:	streq	r5, [sp, #40]	; 0x28
   15a08:	strbeq	r5, [sp, #32]
   15a0c:	beq	15b58 <sigaltstack@plt+0x49d0>
   15a10:	cmn	r0, #2
   15a14:	beq	15b44 <sigaltstack@plt+0x49bc>
   15a18:	cmp	r0, #0
   15a1c:	bne	16438 <sigaltstack@plt+0x52b0>
   15a20:	ldr	r3, [sp, #36]	; 0x24
   15a24:	str	r5, [sp, #40]	; 0x28
   15a28:	ldrb	r3, [r3]
   15a2c:	cmp	r3, #0
   15a30:	bne	164b4 <sigaltstack@plt+0x532c>
   15a34:	ldr	r4, [sp, #48]	; 0x30
   15a38:	cmp	r4, #0
   15a3c:	bne	16480 <sigaltstack@plt+0x52f8>
   15a40:	mov	r5, #1
   15a44:	add	r0, sp, #24
   15a48:	strb	r5, [sp, #44]	; 0x2c
   15a4c:	bl	10f48 <mbsinit@plt>
   15a50:	cmp	r0, #0
   15a54:	movne	r3, #0
   15a58:	strbeq	r5, [sp, #32]
   15a5c:	strbne	r5, [sp, #32]
   15a60:	strbne	r3, [sp, #20]
   15a64:	cmp	r4, #0
   15a68:	bne	15b58 <sigaltstack@plt+0x49d0>
   15a6c:	ldr	r0, [sp, #4]
   15a70:	ldr	r3, [pc, #2644]	; 164cc <sigaltstack@plt+0x5344>
   15a74:	ldr	r2, [sp, #300]	; 0x12c
   15a78:	ldr	r3, [r3]
   15a7c:	cmp	r2, r3
   15a80:	bne	164c8 <sigaltstack@plt+0x5340>
   15a84:	add	sp, sp, #308	; 0x134
   15a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a8c:	ldrb	r3, [fp, #1]
   15a90:	cmp	r3, #0
   15a94:	beq	15a70 <sigaltstack@plt+0x48e8>
   15a98:	ldrb	r8, [sl, r5]
   15a9c:	cmp	r8, #0
   15aa0:	beq	15ae8 <sigaltstack@plt+0x4960>
   15aa4:	cmp	r3, r8
   15aa8:	add	r4, ip, #2
   15aac:	bne	15994 <sigaltstack@plt+0x480c>
   15ab0:	ldr	r3, [sp, #8]
   15ab4:	add	r3, r3, #1
   15ab8:	b	15ad0 <sigaltstack@plt+0x4948>
   15abc:	add	r3, r3, #1
   15ac0:	cmp	r2, r4
   15ac4:	sub	r4, r3, fp
   15ac8:	add	r4, r4, ip
   15acc:	bne	15994 <sigaltstack@plt+0x480c>
   15ad0:	ldrb	r2, [r3]
   15ad4:	cmp	r2, #0
   15ad8:	beq	15a70 <sigaltstack@plt+0x48e8>
   15adc:	ldrb	r4, [r1, #1]!
   15ae0:	cmp	r4, #0
   15ae4:	bne	15abc <sigaltstack@plt+0x4934>
   15ae8:	mov	r0, #0
   15aec:	b	15a70 <sigaltstack@plt+0x48e8>
   15af0:	ldrb	r1, [fp]
   15af4:	ldr	r8, [pc, #2516]	; 164d0 <sigaltstack@plt+0x5348>
   15af8:	str	fp, [sp, #36]	; 0x24
   15afc:	and	r0, r1, #31
   15b00:	lsr	r3, r1, #5
   15b04:	ldr	r2, [r8, r3, lsl #2]
   15b08:	mov	r3, #0
   15b0c:	str	r3, [sp, #28]
   15b10:	lsr	r2, r2, r0
   15b14:	ands	r4, r2, #1
   15b18:	strb	r3, [sp, #20]
   15b1c:	str	r3, [sp, #24]
   15b20:	strb	r3, [sp, #32]
   15b24:	beq	159bc <sigaltstack@plt+0x4834>
   15b28:	mov	r3, #1
   15b2c:	str	r1, [sp, #48]	; 0x30
   15b30:	mov	r4, r1
   15b34:	str	r3, [sp, #40]	; 0x28
   15b38:	strb	r3, [sp, #44]	; 0x2c
   15b3c:	strb	r3, [sp, #32]
   15b40:	b	15a64 <sigaltstack@plt+0x48dc>
   15b44:	ldr	r0, [sp, #36]	; 0x24
   15b48:	bl	11080 <strlen@plt>
   15b4c:	strb	r4, [sp, #44]	; 0x2c
   15b50:	strb	r5, [sp, #32]
   15b54:	str	r0, [sp, #40]	; 0x28
   15b58:	mov	r3, #0
   15b5c:	str	r3, [sp, #12]
   15b60:	mov	r6, r3
   15b64:	mov	r7, r3
   15b68:	str	fp, [sp, #92]	; 0x5c
   15b6c:	strb	r3, [sp, #76]	; 0x4c
   15b70:	str	r3, [sp, #80]	; 0x50
   15b74:	strb	r3, [sp, #88]	; 0x58
   15b78:	strb	r3, [sp, #132]	; 0x84
   15b7c:	str	r3, [sp, #136]	; 0x88
   15b80:	strb	r3, [sp, #144]	; 0x90
   15b84:	str	r3, [sp, #84]	; 0x54
   15b88:	str	r3, [sp, #140]	; 0x8c
   15b8c:	str	fp, [sp, #8]
   15b90:	mov	fp, r3
   15b94:	ldrb	r3, [sp, #132]	; 0x84
   15b98:	mov	r1, #1
   15b9c:	str	r1, [sp]
   15ba0:	mov	r4, r1
   15ba4:	mov	r9, r1
   15ba8:	ldr	r1, [sp, #4]
   15bac:	cmp	r3, #0
   15bb0:	mov	r5, r1
   15bb4:	str	r1, [sp, #148]	; 0x94
   15bb8:	bne	15e98 <sigaltstack@plt+0x4d10>
   15bbc:	ldrb	r3, [r5]
   15bc0:	and	r2, r3, #31
   15bc4:	lsr	r3, r3, #5
   15bc8:	ldr	r3, [r8, r3, lsl #2]
   15bcc:	lsr	r3, r3, r2
   15bd0:	tst	r3, #1
   15bd4:	beq	161c8 <sigaltstack@plt+0x5040>
   15bd8:	str	r9, [sp, #152]	; 0x98
   15bdc:	ldrb	r5, [r5]
   15be0:	strb	r4, [sp, #156]	; 0x9c
   15be4:	strb	r4, [sp, #144]	; 0x90
   15be8:	str	r5, [sp, #160]	; 0xa0
   15bec:	cmp	r5, #0
   15bf0:	beq	15ae8 <sigaltstack@plt+0x4960>
   15bf4:	ldr	r3, [sp]
   15bf8:	cmp	fp, #9
   15bfc:	movls	r3, #0
   15c00:	andhi	r3, r3, #1
   15c04:	cmp	r3, #0
   15c08:	addeq	r6, r6, #1
   15c0c:	beq	15c24 <sigaltstack@plt+0x4a9c>
   15c10:	add	r2, fp, fp, lsl #2
   15c14:	cmp	r6, r2
   15c18:	addcc	r6, r6, #1
   15c1c:	strcc	r3, [sp]
   15c20:	bcs	16050 <sigaltstack@plt+0x4ec8>
   15c24:	ldrb	r3, [sp, #44]	; 0x2c
   15c28:	cmp	r3, #0
   15c2c:	beq	15fe0 <sigaltstack@plt+0x4e58>
   15c30:	ldr	r2, [sp, #160]	; 0xa0
   15c34:	ldr	r3, [sp, #48]	; 0x30
   15c38:	cmp	r2, r3
   15c3c:	bne	15e74 <sigaltstack@plt+0x4cec>
   15c40:	add	lr, sp, #132	; 0x84
   15c44:	add	ip, sp, #188	; 0xbc
   15c48:	ldm	lr!, {r0, r1, r2, r3}
   15c4c:	stmia	ip!, {r0, r1, r2, r3}
   15c50:	ldm	lr!, {r0, r1, r2, r3}
   15c54:	strb	r7, [sp, #200]	; 0xc8
   15c58:	stmia	ip!, {r0, r1, r2, r3}
   15c5c:	ldm	lr!, {r0, r1, r2, r3}
   15c60:	ldr	r5, [sp, #204]	; 0xcc
   15c64:	stmia	ip!, {r0, r1, r2, r3}
   15c68:	ldm	lr, {r0, r1}
   15c6c:	ldr	r3, [sp, #208]	; 0xd0
   15c70:	add	r5, r5, r3
   15c74:	stm	ip, {r0, r1}
   15c78:	str	r5, [sp, #204]	; 0xcc
   15c7c:	ldr	r3, [sp, #8]
   15c80:	strb	r7, [sp, #244]	; 0xf4
   15c84:	str	r3, [sp, #260]	; 0x104
   15c88:	ldrb	r3, [r3]
   15c8c:	str	r7, [sp, #248]	; 0xf8
   15c90:	strb	r7, [sp, #256]	; 0x100
   15c94:	and	r2, r3, #31
   15c98:	lsr	r1, r3, #5
   15c9c:	str	r7, [sp, #252]	; 0xfc
   15ca0:	ldr	sl, [r8, r1, lsl #2]
   15ca4:	lsr	sl, sl, r2
   15ca8:	ands	sl, sl, #1
   15cac:	beq	162bc <sigaltstack@plt+0x5134>
   15cb0:	mov	r5, r3
   15cb4:	cmp	r5, #0
   15cb8:	str	r9, [sp, #264]	; 0x108
   15cbc:	str	r3, [sp, #272]	; 0x110
   15cc0:	strb	r4, [sp, #268]	; 0x10c
   15cc4:	strb	r4, [sp, #256]	; 0x100
   15cc8:	beq	16338 <sigaltstack@plt+0x51b0>
   15ccc:	ldr	r5, [sp, #260]	; 0x104
   15cd0:	ldr	r3, [sp, #264]	; 0x108
   15cd4:	add	r6, r6, #1
   15cd8:	add	r5, r5, r3
   15cdc:	strb	r7, [sp, #256]	; 0x100
   15ce0:	str	r5, [sp, #260]	; 0x104
   15ce4:	b	15dcc <sigaltstack@plt+0x4c44>
   15ce8:	ldrb	r3, [r5]
   15cec:	and	r2, r3, #31
   15cf0:	lsr	r3, r3, #5
   15cf4:	ldr	r3, [r8, r3, lsl #2]
   15cf8:	lsr	r3, r3, r2
   15cfc:	tst	r3, #1
   15d00:	beq	15fc4 <sigaltstack@plt+0x4e3c>
   15d04:	str	r9, [sp, #264]	; 0x108
   15d08:	ldrb	r5, [r5]
   15d0c:	strb	r4, [sp, #268]	; 0x10c
   15d10:	strb	r4, [sp, #256]	; 0x100
   15d14:	cmp	r5, #0
   15d18:	str	r5, [sp, #272]	; 0x110
   15d1c:	beq	15e48 <sigaltstack@plt+0x4cc0>
   15d20:	ldrb	r3, [sp, #200]	; 0xc8
   15d24:	cmp	r3, #0
   15d28:	bne	15f8c <sigaltstack@plt+0x4e04>
   15d2c:	ldrb	r3, [sp, #188]	; 0xbc
   15d30:	ldr	r5, [sp, #204]	; 0xcc
   15d34:	cmp	r3, #0
   15d38:	addne	sl, sp, #192	; 0xc0
   15d3c:	bne	15f20 <sigaltstack@plt+0x4d98>
   15d40:	ldrb	r3, [r5]
   15d44:	and	r2, r3, #31
   15d48:	lsr	r3, r3, #5
   15d4c:	ldr	r3, [r8, r3, lsl #2]
   15d50:	lsr	r3, r3, r2
   15d54:	tst	r3, #1
   15d58:	beq	15f08 <sigaltstack@plt+0x4d80>
   15d5c:	str	r9, [sp, #208]	; 0xd0
   15d60:	ldrb	r0, [r5]
   15d64:	strb	r4, [sp, #212]	; 0xd4
   15d68:	strb	r4, [sp, #200]	; 0xc8
   15d6c:	mov	r5, r0
   15d70:	str	r0, [sp, #216]	; 0xd8
   15d74:	cmp	r5, #0
   15d78:	beq	15ae8 <sigaltstack@plt+0x4960>
   15d7c:	ldrb	r3, [sp, #268]	; 0x10c
   15d80:	cmp	r3, #0
   15d84:	beq	15e64 <sigaltstack@plt+0x4cdc>
   15d88:	ldr	r0, [sp, #272]	; 0x110
   15d8c:	subs	r0, r0, r5
   15d90:	movne	r0, #1
   15d94:	cmp	r0, #0
   15d98:	add	r1, r6, #1
   15d9c:	bne	15e74 <sigaltstack@plt+0x4cec>
   15da0:	ldr	r3, [sp, #204]	; 0xcc
   15da4:	ldr	r2, [sp, #208]	; 0xd0
   15da8:	ldr	r5, [sp, #260]	; 0x104
   15dac:	add	r3, r3, r2
   15db0:	ldr	r2, [sp, #264]	; 0x108
   15db4:	mov	r6, r1
   15db8:	add	r5, r5, r2
   15dbc:	strb	r0, [sp, #200]	; 0xc8
   15dc0:	strb	r0, [sp, #256]	; 0x100
   15dc4:	str	r3, [sp, #204]	; 0xcc
   15dc8:	str	r5, [sp, #260]	; 0x104
   15dcc:	ldrb	r3, [sp, #244]	; 0xf4
   15dd0:	cmp	r3, #0
   15dd4:	beq	15ce8 <sigaltstack@plt+0x4b60>
   15dd8:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   15ddc:	mov	r1, r0
   15de0:	mov	r0, r5
   15de4:	bl	1341c <sigaltstack@plt+0x2294>
   15de8:	add	r3, sp, #248	; 0xf8
   15dec:	mov	r1, r5
   15df0:	mov	r2, r0
   15df4:	add	r0, sp, #272	; 0x110
   15df8:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   15dfc:	cmn	r0, #1
   15e00:	str	r0, [sp, #264]	; 0x108
   15e04:	strbeq	r7, [sp, #268]	; 0x10c
   15e08:	streq	r9, [sp, #264]	; 0x108
   15e0c:	strbeq	r4, [sp, #256]	; 0x100
   15e10:	beq	15d20 <sigaltstack@plt+0x4b98>
   15e14:	cmn	r0, #2
   15e18:	beq	16144 <sigaltstack@plt+0x4fbc>
   15e1c:	cmp	r0, #0
   15e20:	beq	1615c <sigaltstack@plt+0x4fd4>
   15e24:	ldr	r5, [sp, #272]	; 0x110
   15e28:	add	r0, sp, #248	; 0xf8
   15e2c:	strb	r4, [sp, #268]	; 0x10c
   15e30:	bl	10f48 <mbsinit@plt>
   15e34:	strb	r4, [sp, #256]	; 0x100
   15e38:	cmp	r0, #0
   15e3c:	strbne	r7, [sp, #244]	; 0xf4
   15e40:	cmp	r5, #0
   15e44:	bne	15d20 <sigaltstack@plt+0x4b98>
   15e48:	ldr	r0, [sp, #148]	; 0x94
   15e4c:	b	15a70 <sigaltstack@plt+0x48e8>
   15e50:	ldr	r0, [sp, #204]	; 0xcc
   15e54:	bl	11080 <strlen@plt>
   15e58:	strb	r7, [sp, #212]	; 0xd4
   15e5c:	strb	r4, [sp, #200]	; 0xc8
   15e60:	str	r0, [sp, #208]	; 0xd0
   15e64:	ldr	r2, [sp, #208]	; 0xd0
   15e68:	ldr	r3, [sp, #264]	; 0x108
   15e6c:	cmp	r2, r3
   15e70:	beq	15fac <sigaltstack@plt+0x4e24>
   15e74:	ldr	r5, [sp, #148]	; 0x94
   15e78:	ldr	sl, [sp, #152]	; 0x98
   15e7c:	ldrb	r3, [sp, #132]	; 0x84
   15e80:	add	r5, r5, sl
   15e84:	str	r5, [sp, #148]	; 0x94
   15e88:	cmp	r3, #0
   15e8c:	strb	r7, [sp, #144]	; 0x90
   15e90:	add	fp, fp, #1
   15e94:	beq	15bbc <sigaltstack@plt+0x4a34>
   15e98:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   15e9c:	mov	r1, r0
   15ea0:	mov	r0, r5
   15ea4:	bl	1341c <sigaltstack@plt+0x2294>
   15ea8:	add	r3, sp, #136	; 0x88
   15eac:	mov	r1, r5
   15eb0:	mov	r2, r0
   15eb4:	add	r0, sp, #160	; 0xa0
   15eb8:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   15ebc:	cmn	r0, #1
   15ec0:	str	r0, [sp, #152]	; 0x98
   15ec4:	strbeq	r7, [sp, #156]	; 0x9c
   15ec8:	streq	r9, [sp, #152]	; 0x98
   15ecc:	strbeq	r4, [sp, #144]	; 0x90
   15ed0:	beq	16024 <sigaltstack@plt+0x4e9c>
   15ed4:	cmn	r0, #2
   15ed8:	beq	16010 <sigaltstack@plt+0x4e88>
   15edc:	cmp	r0, #0
   15ee0:	bne	16228 <sigaltstack@plt+0x50a0>
   15ee4:	ldr	r5, [sp, #148]	; 0x94
   15ee8:	str	r9, [sp, #152]	; 0x98
   15eec:	ldrb	r3, [r5]
   15ef0:	cmp	r3, #0
   15ef4:	bne	164b4 <sigaltstack@plt+0x532c>
   15ef8:	ldr	r5, [sp, #160]	; 0xa0
   15efc:	cmp	r5, #0
   15f00:	beq	1622c <sigaltstack@plt+0x50a4>
   15f04:	b	16480 <sigaltstack@plt+0x52f8>
   15f08:	add	sl, sp, #192	; 0xc0
   15f0c:	mov	r0, sl
   15f10:	bl	10f48 <mbsinit@plt>
   15f14:	cmp	r0, #0
   15f18:	beq	164a0 <sigaltstack@plt+0x5318>
   15f1c:	strb	r4, [sp, #188]	; 0xbc
   15f20:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   15f24:	mov	r1, r0
   15f28:	mov	r0, r5
   15f2c:	bl	1341c <sigaltstack@plt+0x2294>
   15f30:	mov	r3, sl
   15f34:	mov	r1, r5
   15f38:	mov	r2, r0
   15f3c:	add	r0, sp, #216	; 0xd8
   15f40:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   15f44:	cmn	r0, #1
   15f48:	str	r0, [sp, #208]	; 0xd0
   15f4c:	strbeq	r7, [sp, #212]	; 0xd4
   15f50:	streq	r9, [sp, #208]	; 0xd0
   15f54:	strbeq	r4, [sp, #200]	; 0xc8
   15f58:	beq	15e64 <sigaltstack@plt+0x4cdc>
   15f5c:	cmn	r0, #2
   15f60:	beq	15e50 <sigaltstack@plt+0x4cc8>
   15f64:	cmp	r0, #0
   15f68:	beq	16180 <sigaltstack@plt+0x4ff8>
   15f6c:	ldr	r5, [sp, #216]	; 0xd8
   15f70:	mov	r0, sl
   15f74:	strb	r4, [sp, #212]	; 0xd4
   15f78:	bl	10f48 <mbsinit@plt>
   15f7c:	strb	r4, [sp, #200]	; 0xc8
   15f80:	cmp	r0, #0
   15f84:	strbne	r7, [sp, #188]	; 0xbc
   15f88:	b	15d74 <sigaltstack@plt+0x4bec>
   15f8c:	ldrb	r3, [sp, #212]	; 0xd4
   15f90:	cmp	r3, #0
   15f94:	ldrne	r5, [sp, #216]	; 0xd8
   15f98:	bne	15d74 <sigaltstack@plt+0x4bec>
   15f9c:	ldr	r2, [sp, #208]	; 0xd0
   15fa0:	ldr	r3, [sp, #264]	; 0x108
   15fa4:	cmp	r2, r3
   15fa8:	bne	15e74 <sigaltstack@plt+0x4cec>
   15fac:	ldr	r1, [sp, #260]	; 0x104
   15fb0:	ldr	r0, [sp, #204]	; 0xcc
   15fb4:	bl	10f54 <memcmp@plt>
   15fb8:	adds	r0, r0, #0
   15fbc:	movne	r0, #1
   15fc0:	b	15d94 <sigaltstack@plt+0x4c0c>
   15fc4:	add	r0, sp, #248	; 0xf8
   15fc8:	bl	10f48 <mbsinit@plt>
   15fcc:	cmp	r0, #0
   15fd0:	beq	164a0 <sigaltstack@plt+0x5318>
   15fd4:	strb	r4, [sp, #244]	; 0xf4
   15fd8:	b	15dd8 <sigaltstack@plt+0x4c50>
   15fdc:	add	r6, r6, #1
   15fe0:	ldr	sl, [sp, #152]	; 0x98
   15fe4:	ldr	r3, [sp, #40]	; 0x28
   15fe8:	ldr	r5, [sp, #148]	; 0x94
   15fec:	cmp	sl, r3
   15ff0:	bne	15e7c <sigaltstack@plt+0x4cf4>
   15ff4:	mov	r2, sl
   15ff8:	mov	r0, r5
   15ffc:	ldr	r1, [sp, #36]	; 0x24
   16000:	bl	10f54 <memcmp@plt>
   16004:	cmp	r0, #0
   16008:	bne	15e7c <sigaltstack@plt+0x4cf4>
   1600c:	b	15c40 <sigaltstack@plt+0x4ab8>
   16010:	ldr	r0, [sp, #148]	; 0x94
   16014:	bl	11080 <strlen@plt>
   16018:	strb	r7, [sp, #156]	; 0x9c
   1601c:	strb	r4, [sp, #144]	; 0x90
   16020:	str	r0, [sp, #152]	; 0x98
   16024:	ldr	r3, [sp]
   16028:	cmp	fp, #9
   1602c:	movls	r3, #0
   16030:	andhi	r3, r3, #1
   16034:	cmp	r3, #0
   16038:	beq	15fdc <sigaltstack@plt+0x4e54>
   1603c:	add	r2, fp, fp, lsl #2
   16040:	cmp	r6, r2
   16044:	addcc	r6, r6, #1
   16048:	strcc	r3, [sp]
   1604c:	bcc	15fe0 <sigaltstack@plt+0x4e58>
   16050:	ldr	r3, [sp, #12]
   16054:	subs	sl, r6, r3
   16058:	ldrb	r3, [sp, #88]	; 0x58
   1605c:	beq	16484 <sigaltstack@plt+0x52fc>
   16060:	cmp	r3, #0
   16064:	ldreq	r5, [sp, #92]	; 0x5c
   16068:	beq	160d8 <sigaltstack@plt+0x4f50>
   1606c:	ldrb	r3, [sp, #100]	; 0x64
   16070:	cmp	r3, #0
   16074:	ldrne	r5, [sp, #104]	; 0x68
   16078:	beq	160b8 <sigaltstack@plt+0x4f30>
   1607c:	b	160b0 <sigaltstack@plt+0x4f28>
   16080:	ldrb	r3, [r5]
   16084:	and	r2, r3, #31
   16088:	lsr	r3, r3, #5
   1608c:	ldr	r3, [r8, r3, lsl #2]
   16090:	lsr	r3, r3, r2
   16094:	tst	r3, #1
   16098:	beq	161a4 <sigaltstack@plt+0x501c>
   1609c:	str	r9, [sp, #96]	; 0x60
   160a0:	ldrb	r5, [r5]
   160a4:	strb	r4, [sp, #100]	; 0x64
   160a8:	strb	r4, [sp, #88]	; 0x58
   160ac:	str	r5, [sp, #104]	; 0x68
   160b0:	cmp	r5, #0
   160b4:	beq	163d0 <sigaltstack@plt+0x5248>
   160b8:	ldr	r5, [sp, #92]	; 0x5c
   160bc:	ldr	r3, [sp, #96]	; 0x60
   160c0:	subs	sl, sl, #1
   160c4:	add	r5, r5, r3
   160c8:	strb	r7, [sp, #88]	; 0x58
   160cc:	str	r5, [sp, #92]	; 0x5c
   160d0:	str	r5, [sp]
   160d4:	beq	16250 <sigaltstack@plt+0x50c8>
   160d8:	ldrb	r3, [sp, #76]	; 0x4c
   160dc:	cmp	r3, #0
   160e0:	beq	16080 <sigaltstack@plt+0x4ef8>
   160e4:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   160e8:	mov	r1, r0
   160ec:	mov	r0, r5
   160f0:	bl	1341c <sigaltstack@plt+0x2294>
   160f4:	add	r3, sp, #80	; 0x50
   160f8:	mov	r1, r5
   160fc:	mov	r2, r0
   16100:	add	r0, sp, #104	; 0x68
   16104:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   16108:	cmn	r0, #1
   1610c:	str	r0, [sp, #96]	; 0x60
   16110:	beq	161bc <sigaltstack@plt+0x5034>
   16114:	cmn	r0, #2
   16118:	beq	161e0 <sigaltstack@plt+0x5058>
   1611c:	cmp	r0, #0
   16120:	beq	161f8 <sigaltstack@plt+0x5070>
   16124:	ldr	r5, [sp, #104]	; 0x68
   16128:	add	r0, sp, #80	; 0x50
   1612c:	strb	r4, [sp, #100]	; 0x64
   16130:	bl	10f48 <mbsinit@plt>
   16134:	strb	r4, [sp, #88]	; 0x58
   16138:	cmp	r0, #0
   1613c:	strbne	r7, [sp, #76]	; 0x4c
   16140:	b	160b0 <sigaltstack@plt+0x4f28>
   16144:	ldr	r0, [sp, #260]	; 0x104
   16148:	bl	11080 <strlen@plt>
   1614c:	strb	r7, [sp, #268]	; 0x10c
   16150:	strb	r4, [sp, #256]	; 0x100
   16154:	str	r0, [sp, #264]	; 0x108
   16158:	b	15d20 <sigaltstack@plt+0x4b98>
   1615c:	ldr	r3, [sp, #260]	; 0x104
   16160:	str	r9, [sp, #264]	; 0x108
   16164:	ldrb	r3, [r3]
   16168:	cmp	r3, #0
   1616c:	bne	164b4 <sigaltstack@plt+0x532c>
   16170:	ldr	r5, [sp, #272]	; 0x110
   16174:	cmp	r5, #0
   16178:	beq	15e28 <sigaltstack@plt+0x4ca0>
   1617c:	b	16480 <sigaltstack@plt+0x52f8>
   16180:	ldr	r3, [sp, #204]	; 0xcc
   16184:	str	r9, [sp, #208]	; 0xd0
   16188:	ldrb	r3, [r3]
   1618c:	cmp	r3, #0
   16190:	bne	164b4 <sigaltstack@plt+0x532c>
   16194:	ldr	r5, [sp, #216]	; 0xd8
   16198:	cmp	r5, #0
   1619c:	beq	15f70 <sigaltstack@plt+0x4de8>
   161a0:	b	16480 <sigaltstack@plt+0x52f8>
   161a4:	add	r0, sp, #80	; 0x50
   161a8:	bl	10f48 <mbsinit@plt>
   161ac:	cmp	r0, #0
   161b0:	beq	164a0 <sigaltstack@plt+0x5318>
   161b4:	strb	r4, [sp, #76]	; 0x4c
   161b8:	b	160e4 <sigaltstack@plt+0x4f5c>
   161bc:	str	r9, [sp, #96]	; 0x60
   161c0:	strb	r7, [sp, #100]	; 0x64
   161c4:	b	160b8 <sigaltstack@plt+0x4f30>
   161c8:	add	r0, sp, #136	; 0x88
   161cc:	bl	10f48 <mbsinit@plt>
   161d0:	cmp	r0, #0
   161d4:	beq	164a0 <sigaltstack@plt+0x5318>
   161d8:	strb	r4, [sp, #132]	; 0x84
   161dc:	b	15e98 <sigaltstack@plt+0x4d10>
   161e0:	ldr	r5, [sp, #92]	; 0x5c
   161e4:	mov	r0, r5
   161e8:	bl	11080 <strlen@plt>
   161ec:	strb	r7, [sp, #100]	; 0x64
   161f0:	str	r0, [sp, #96]	; 0x60
   161f4:	b	160bc <sigaltstack@plt+0x4f34>
   161f8:	ldr	r5, [sp, #92]	; 0x5c
   161fc:	str	r9, [sp, #96]	; 0x60
   16200:	ldrb	r3, [r5]
   16204:	cmp	r3, #0
   16208:	bne	164b4 <sigaltstack@plt+0x532c>
   1620c:	ldr	r5, [sp, #104]	; 0x68
   16210:	cmp	r5, #0
   16214:	beq	16128 <sigaltstack@plt+0x4fa0>
   16218:	b	16480 <sigaltstack@plt+0x52f8>
   1621c:	mov	lr, r3
   16220:	str	r4, [sp]
   16224:	b	15968 <sigaltstack@plt+0x47e0>
   16228:	ldr	r5, [sp, #160]	; 0xa0
   1622c:	add	r0, sp, #136	; 0x88
   16230:	strb	r4, [sp, #156]	; 0x9c
   16234:	bl	10f48 <mbsinit@plt>
   16238:	strb	r4, [sp, #144]	; 0x90
   1623c:	cmp	r0, #0
   16240:	strbne	r7, [sp, #132]	; 0x84
   16244:	b	15bec <sigaltstack@plt+0x4a64>
   16248:	ldr	r3, [sp, #92]	; 0x5c
   1624c:	str	r3, [sp]
   16250:	ldrb	r3, [sp, #76]	; 0x4c
   16254:	cmp	r3, #0
   16258:	bne	16350 <sigaltstack@plt+0x51c8>
   1625c:	ldr	r1, [sp]
   16260:	ldrb	r3, [r1]
   16264:	and	r2, r3, #31
   16268:	lsr	r3, r3, #5
   1626c:	ldr	r3, [r8, r3, lsl #2]
   16270:	lsr	r3, r3, r2
   16274:	tst	r3, #1
   16278:	beq	1633c <sigaltstack@plt+0x51b4>
   1627c:	str	r9, [sp, #96]	; 0x60
   16280:	ldrb	r5, [r1]
   16284:	strb	r4, [sp, #100]	; 0x64
   16288:	strb	r4, [sp, #88]	; 0x58
   1628c:	str	r5, [sp, #104]	; 0x68
   16290:	cmp	r5, #0
   16294:	beq	163dc <sigaltstack@plt+0x5254>
   16298:	ldrb	r3, [sp, #156]	; 0x9c
   1629c:	mov	r2, #1
   162a0:	str	r2, [sp]
   162a4:	cmp	r3, #0
   162a8:	add	r3, r6, #1
   162ac:	str	r6, [sp, #12]
   162b0:	mov	r6, r3
   162b4:	bne	15c24 <sigaltstack@plt+0x4a9c>
   162b8:	b	15fe0 <sigaltstack@plt+0x4e58>
   162bc:	add	r0, sp, #248	; 0xf8
   162c0:	bl	10f48 <mbsinit@plt>
   162c4:	cmp	r0, #0
   162c8:	beq	164a0 <sigaltstack@plt+0x5318>
   162cc:	strb	r4, [sp, #244]	; 0xf4
   162d0:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   162d4:	ldr	r5, [sp, #8]
   162d8:	mov	r1, r0
   162dc:	mov	r0, r5
   162e0:	bl	1341c <sigaltstack@plt+0x2294>
   162e4:	add	r3, sp, #248	; 0xf8
   162e8:	mov	r1, r5
   162ec:	mov	r2, r0
   162f0:	add	r0, sp, #272	; 0x110
   162f4:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   162f8:	cmn	r0, #1
   162fc:	str	r0, [sp, #264]	; 0x108
   16300:	beq	163c0 <sigaltstack@plt+0x5238>
   16304:	cmn	r0, #2
   16308:	beq	163fc <sigaltstack@plt+0x5274>
   1630c:	cmp	r0, #0
   16310:	beq	16414 <sigaltstack@plt+0x528c>
   16314:	ldr	r5, [sp, #272]	; 0x110
   16318:	add	r0, sp, #248	; 0xf8
   1631c:	strb	r4, [sp, #268]	; 0x10c
   16320:	bl	10f48 <mbsinit@plt>
   16324:	strb	r4, [sp, #256]	; 0x100
   16328:	cmp	r0, #0
   1632c:	strbne	r7, [sp, #244]	; 0xf4
   16330:	cmp	r5, #0
   16334:	bne	15ccc <sigaltstack@plt+0x4b44>
   16338:	bl	11164 <abort@plt>
   1633c:	add	r0, sp, #80	; 0x50
   16340:	bl	10f48 <mbsinit@plt>
   16344:	cmp	r0, #0
   16348:	beq	164a0 <sigaltstack@plt+0x5318>
   1634c:	strb	r4, [sp, #76]	; 0x4c
   16350:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   16354:	ldr	r5, [sp]
   16358:	mov	r1, r0
   1635c:	mov	r0, r5
   16360:	bl	1341c <sigaltstack@plt+0x2294>
   16364:	add	r3, sp, #80	; 0x50
   16368:	mov	r1, r5
   1636c:	mov	r2, r0
   16370:	add	r0, sp, #104	; 0x68
   16374:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   16378:	cmn	r0, #1
   1637c:	str	r0, [sp, #96]	; 0x60
   16380:	strbeq	r7, [sp, #100]	; 0x64
   16384:	streq	r9, [sp, #96]	; 0x60
   16388:	strbeq	r4, [sp, #88]	; 0x58
   1638c:	beq	16298 <sigaltstack@plt+0x5110>
   16390:	cmn	r0, #2
   16394:	beq	16440 <sigaltstack@plt+0x52b8>
   16398:	cmp	r0, #0
   1639c:	beq	16460 <sigaltstack@plt+0x52d8>
   163a0:	ldr	r5, [sp, #104]	; 0x68
   163a4:	add	r0, sp, #80	; 0x50
   163a8:	strb	r4, [sp, #100]	; 0x64
   163ac:	bl	10f48 <mbsinit@plt>
   163b0:	strb	r4, [sp, #88]	; 0x58
   163b4:	cmp	r0, #0
   163b8:	strbne	r7, [sp, #76]	; 0x4c
   163bc:	b	16290 <sigaltstack@plt+0x5108>
   163c0:	str	r9, [sp, #264]	; 0x108
   163c4:	strb	sl, [sp, #268]	; 0x10c
   163c8:	ldr	r5, [sp, #260]	; 0x104
   163cc:	b	15cd0 <sigaltstack@plt+0x4b48>
   163d0:	ldrb	r3, [sp, #88]	; 0x58
   163d4:	cmp	r3, #0
   163d8:	beq	16248 <sigaltstack@plt+0x50c0>
   163dc:	add	r2, sp, #16
   163e0:	ldrd	r0, [sp, #4]
   163e4:	bl	15030 <sigaltstack@plt+0x3ea8>
   163e8:	subs	r3, r0, #0
   163ec:	str	r3, [sp]
   163f0:	bne	16458 <sigaltstack@plt+0x52d0>
   163f4:	ldrb	r3, [sp, #156]	; 0x9c
   163f8:	b	162a4 <sigaltstack@plt+0x511c>
   163fc:	ldr	r5, [sp, #260]	; 0x104
   16400:	mov	r0, r5
   16404:	bl	11080 <strlen@plt>
   16408:	strb	sl, [sp, #268]	; 0x10c
   1640c:	str	r0, [sp, #264]	; 0x108
   16410:	b	15cd0 <sigaltstack@plt+0x4b48>
   16414:	ldr	r5, [sp, #260]	; 0x104
   16418:	str	r9, [sp, #264]	; 0x108
   1641c:	ldrb	r3, [r5]
   16420:	cmp	r3, #0
   16424:	bne	164b4 <sigaltstack@plt+0x532c>
   16428:	ldr	r5, [sp, #272]	; 0x110
   1642c:	cmp	r5, #0
   16430:	beq	16318 <sigaltstack@plt+0x5190>
   16434:	b	16480 <sigaltstack@plt+0x52f8>
   16438:	ldr	r4, [sp, #48]	; 0x30
   1643c:	b	15a40 <sigaltstack@plt+0x48b8>
   16440:	ldr	r0, [sp, #92]	; 0x5c
   16444:	bl	11080 <strlen@plt>
   16448:	strb	r7, [sp, #100]	; 0x64
   1644c:	strb	r4, [sp, #88]	; 0x58
   16450:	str	r0, [sp, #96]	; 0x60
   16454:	b	16298 <sigaltstack@plt+0x5110>
   16458:	ldr	r0, [sp, #16]
   1645c:	b	15a70 <sigaltstack@plt+0x48e8>
   16460:	ldr	r5, [sp, #92]	; 0x5c
   16464:	str	r9, [sp, #96]	; 0x60
   16468:	ldrb	r3, [r5]
   1646c:	cmp	r3, #0
   16470:	bne	164b4 <sigaltstack@plt+0x532c>
   16474:	ldr	r5, [sp, #104]	; 0x68
   16478:	cmp	r5, #0
   1647c:	beq	163a4 <sigaltstack@plt+0x521c>
   16480:	bl	1500c <sigaltstack@plt+0x3e84>
   16484:	cmp	r3, #0
   16488:	beq	16248 <sigaltstack@plt+0x50c0>
   1648c:	ldrb	r3, [sp, #100]	; 0x64
   16490:	cmp	r3, #0
   16494:	ldrne	r5, [sp, #104]	; 0x68
   16498:	beq	16298 <sigaltstack@plt+0x5110>
   1649c:	b	16290 <sigaltstack@plt+0x5108>
   164a0:	ldr	r3, [pc, #44]	; 164d4 <sigaltstack@plt+0x534c>
   164a4:	mov	r2, #150	; 0x96
   164a8:	ldr	r1, [pc, #40]	; 164d8 <sigaltstack@plt+0x5350>
   164ac:	ldr	r0, [pc, #40]	; 164dc <sigaltstack@plt+0x5354>
   164b0:	bl	1117c <__assert_fail@plt>
   164b4:	ldr	r3, [pc, #24]	; 164d4 <sigaltstack@plt+0x534c>
   164b8:	mov	r2, #178	; 0xb2
   164bc:	ldr	r1, [pc, #20]	; 164d8 <sigaltstack@plt+0x5350>
   164c0:	ldr	r0, [pc, #24]	; 164e0 <sigaltstack@plt+0x5358>
   164c4:	bl	1117c <__assert_fail@plt>
   164c8:	bl	10f78 <__stack_chk_fail@plt>
   164cc:	andeq	r7, r2, r8, lsl #30
   164d0:	andeq	r7, r1, r0, ror #28
   164d4:	andeq	r7, r1, r0, lsl #29
   164d8:	andeq	r7, r1, r8, lsr sl
   164dc:	andeq	r7, r1, r8, asr sl
   164e0:	andeq	r7, r1, r0, ror sl
   164e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164e8:	mov	r6, r2
   164ec:	sub	sp, sp, #4096	; 0x1000
   164f0:	ldr	r2, [pc, #640]	; 16778 <sigaltstack@plt+0x55f0>
   164f4:	sub	sp, sp, #44	; 0x2c
   164f8:	add	lr, sp, #4096	; 0x1000
   164fc:	ldr	ip, [r2]
   16500:	add	lr, lr, #36	; 0x24
   16504:	mov	r4, #0
   16508:	str	r4, [sp]
   1650c:	str	ip, [lr]
   16510:	add	ip, sp, #4160	; 0x1040
   16514:	add	ip, ip, #16
   16518:	mov	r9, r1
   1651c:	ldr	ip, [ip]
   16520:	mov	fp, r0
   16524:	str	r3, [sp, #8]
   16528:	mov	r0, r6
   1652c:	mov	r3, r4
   16530:	mov	r2, r4
   16534:	mov	r1, r4
   16538:	str	ip, [sp, #12]
   1653c:	bl	10edc <iconv@plt>
   16540:	cmp	r9, r4
   16544:	str	fp, [sp, #20]
   16548:	str	r9, [sp, #24]
   1654c:	beq	1675c <sigaltstack@plt+0x55d4>
   16550:	add	r5, sp, #36	; 0x24
   16554:	add	r7, sp, #28
   16558:	add	r8, sp, #32
   1655c:	mov	sl, #4096	; 0x1000
   16560:	b	16578 <sigaltstack@plt+0x53f0>
   16564:	ldrd	r2, [sp, #24]
   16568:	sub	r3, r3, r5
   1656c:	cmp	r2, #0
   16570:	add	r4, r4, r3
   16574:	beq	165b8 <sigaltstack@plt+0x5430>
   16578:	str	r8, [sp]
   1657c:	mov	r3, r7
   16580:	add	r2, sp, #24
   16584:	add	r1, sp, #20
   16588:	mov	r0, r6
   1658c:	str	r5, [sp, #28]
   16590:	str	sl, [sp, #32]
   16594:	bl	10edc <iconv@plt>
   16598:	cmn	r0, #1
   1659c:	bne	16564 <sigaltstack@plt+0x53dc>
   165a0:	bl	11098 <__errno_location@plt>
   165a4:	ldr	r3, [r0]
   165a8:	cmp	r3, #7
   165ac:	beq	16564 <sigaltstack@plt+0x53dc>
   165b0:	cmp	r3, #22
   165b4:	bne	16754 <sigaltstack@plt+0x55cc>
   165b8:	mov	r2, #0
   165bc:	mov	ip, #4096	; 0x1000
   165c0:	str	r8, [sp]
   165c4:	mov	r1, r2
   165c8:	mov	r3, r7
   165cc:	mov	r0, r6
   165d0:	str	r5, [sp, #28]
   165d4:	str	ip, [sp, #32]
   165d8:	bl	10edc <iconv@plt>
   165dc:	cmn	r0, #1
   165e0:	beq	16754 <sigaltstack@plt+0x55cc>
   165e4:	ldr	r3, [sp, #28]
   165e8:	sub	r5, r3, r5
   165ec:	adds	r4, r5, r4
   165f0:	beq	16704 <sigaltstack@plt+0x557c>
   165f4:	ldr	r3, [sp, #8]
   165f8:	ldr	sl, [r3]
   165fc:	cmp	sl, #0
   16600:	beq	166e0 <sigaltstack@plt+0x5558>
   16604:	ldr	r3, [sp, #12]
   16608:	ldr	r3, [r3]
   1660c:	cmp	r3, r4
   16610:	bcc	166e0 <sigaltstack@plt+0x5558>
   16614:	mov	r3, #0
   16618:	str	r3, [sp]
   1661c:	mov	r2, r3
   16620:	mov	r1, r3
   16624:	mov	r0, r6
   16628:	bl	10edc <iconv@plt>
   1662c:	add	r3, sp, #40	; 0x28
   16630:	str	fp, [sp, #20]
   16634:	add	r5, sp, #24
   16638:	str	r9, [sp, #24]
   1663c:	str	sl, [sp, #28]
   16640:	str	r4, [sp, #32]
   16644:	sub	fp, r3, #20
   16648:	b	16670 <sigaltstack@plt+0x54e8>
   1664c:	str	r8, [sp]
   16650:	mov	r3, r7
   16654:	mov	r2, r5
   16658:	mov	r1, fp
   1665c:	mov	r0, r6
   16660:	bl	10edc <iconv@plt>
   16664:	cmn	r0, #1
   16668:	beq	16714 <sigaltstack@plt+0x558c>
   1666c:	ldr	r9, [sp, #24]
   16670:	cmp	r9, #0
   16674:	bne	1664c <sigaltstack@plt+0x54c4>
   16678:	mov	r2, #0
   1667c:	str	r8, [sp]
   16680:	mov	r3, r7
   16684:	mov	r0, r6
   16688:	mov	r1, r2
   1668c:	bl	10edc <iconv@plt>
   16690:	cmn	r0, #1
   16694:	beq	16724 <sigaltstack@plt+0x559c>
   16698:	ldr	r3, [sp, #32]
   1669c:	cmp	r3, #0
   166a0:	bne	16774 <sigaltstack@plt+0x55ec>
   166a4:	ldr	r2, [sp, #8]
   166a8:	str	sl, [r2]
   166ac:	ldr	r2, [sp, #12]
   166b0:	str	r4, [r2]
   166b4:	add	r2, sp, #4096	; 0x1000
   166b8:	add	r2, r2, #36	; 0x24
   166bc:	ldr	r1, [r2]
   166c0:	ldr	r2, [pc, #176]	; 16778 <sigaltstack@plt+0x55f0>
   166c4:	mov	r0, r3
   166c8:	ldr	r2, [r2]
   166cc:	cmp	r1, r2
   166d0:	bne	16770 <sigaltstack@plt+0x55e8>
   166d4:	add	sp, sp, #4096	; 0x1000
   166d8:	add	sp, sp, #44	; 0x2c
   166dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166e0:	mov	r0, r4
   166e4:	bl	11020 <malloc@plt>
   166e8:	subs	sl, r0, #0
   166ec:	bne	16614 <sigaltstack@plt+0x548c>
   166f0:	bl	11098 <__errno_location@plt>
   166f4:	mov	r2, #12
   166f8:	mvn	r3, #0
   166fc:	str	r2, [r0]
   16700:	b	166b4 <sigaltstack@plt+0x552c>
   16704:	ldr	r3, [sp, #12]
   16708:	str	r4, [r3]
   1670c:	mov	r3, r4
   16710:	b	166b4 <sigaltstack@plt+0x552c>
   16714:	bl	11098 <__errno_location@plt>
   16718:	ldr	r3, [r0]
   1671c:	cmp	r3, #22
   16720:	beq	16678 <sigaltstack@plt+0x54f0>
   16724:	ldr	r3, [sp, #8]
   16728:	ldr	r3, [r3]
   1672c:	cmp	r3, sl
   16730:	beq	16754 <sigaltstack@plt+0x55cc>
   16734:	bl	11098 <__errno_location@plt>
   16738:	mov	r4, r0
   1673c:	mov	r0, sl
   16740:	ldr	r5, [r4]
   16744:	bl	10f18 <free@plt>
   16748:	str	r5, [r4]
   1674c:	mvn	r3, #0
   16750:	b	166b4 <sigaltstack@plt+0x552c>
   16754:	mvn	r3, #0
   16758:	b	166b4 <sigaltstack@plt+0x552c>
   1675c:	mov	r4, r9
   16760:	add	r5, sp, #36	; 0x24
   16764:	add	r7, sp, #28
   16768:	add	r8, sp, #32
   1676c:	b	165b8 <sigaltstack@plt+0x5430>
   16770:	bl	10f78 <__stack_chk_fail@plt>
   16774:	bl	11164 <abort@plt>
   16778:	andeq	r7, r2, r8, lsl #30
   1677c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16780:	sub	sp, sp, #36	; 0x24
   16784:	ldr	r9, [pc, #468]	; 16960 <sigaltstack@plt+0x57d8>
   16788:	mov	r7, r1
   1678c:	str	r0, [sp, #12]
   16790:	ldr	r3, [r9]
   16794:	str	r3, [sp, #28]
   16798:	bl	11080 <strlen@plt>
   1679c:	cmp	r0, #4096	; 0x1000
   167a0:	mov	r4, r0
   167a4:	lslcc	r4, r0, #4
   167a8:	add	sl, r4, #1
   167ac:	str	r0, [sp, #16]
   167b0:	mov	r0, sl
   167b4:	bl	11020 <malloc@plt>
   167b8:	subs	r6, r0, #0
   167bc:	beq	1694c <sigaltstack@plt+0x57c4>
   167c0:	mov	r3, #0
   167c4:	str	r3, [sp]
   167c8:	mov	r2, r3
   167cc:	mov	r1, r3
   167d0:	mov	r0, r7
   167d4:	bl	10edc <iconv@plt>
   167d8:	add	r8, sp, #24
   167dc:	str	r6, [sp, #20]
   167e0:	str	r4, [sp, #24]
   167e4:	b	16848 <sigaltstack@plt+0x56c0>
   167e8:	bl	11098 <__errno_location@plt>
   167ec:	ldr	r3, [r0]
   167f0:	mov	fp, r0
   167f4:	cmp	r3, #22
   167f8:	beq	168c4 <sigaltstack@plt+0x573c>
   167fc:	cmp	r3, #7
   16800:	bne	16924 <sigaltstack@plt+0x579c>
   16804:	ldr	r4, [sp, #20]
   16808:	lsl	r5, sl, #1
   1680c:	cmp	sl, r5
   16810:	sub	r4, r4, r6
   16814:	bcs	1691c <sigaltstack@plt+0x5794>
   16818:	mov	r1, r5
   1681c:	mov	r0, r6
   16820:	bl	10f84 <realloc@plt>
   16824:	cmp	r0, #0
   16828:	beq	1691c <sigaltstack@plt+0x5794>
   1682c:	sub	r3, r5, #1
   16830:	mov	r6, r0
   16834:	mov	sl, r5
   16838:	sub	r3, r3, r4
   1683c:	add	r4, r0, r4
   16840:	str	r3, [sp, #24]
   16844:	str	r4, [sp, #20]
   16848:	str	r8, [sp]
   1684c:	add	r3, sp, #20
   16850:	add	r2, sp, #16
   16854:	add	r1, sp, #12
   16858:	mov	r0, r7
   1685c:	bl	10edc <iconv@plt>
   16860:	cmn	r0, #1
   16864:	beq	167e8 <sigaltstack@plt+0x5660>
   16868:	b	168c4 <sigaltstack@plt+0x573c>
   1686c:	bl	11098 <__errno_location@plt>
   16870:	ldr	r3, [r0]
   16874:	mov	fp, r0
   16878:	cmp	r3, #7
   1687c:	bne	16924 <sigaltstack@plt+0x579c>
   16880:	ldr	r4, [sp, #20]
   16884:	lsl	r5, sl, #1
   16888:	cmp	sl, r5
   1688c:	sub	r4, r4, r6
   16890:	bcs	1691c <sigaltstack@plt+0x5794>
   16894:	mov	r1, r5
   16898:	mov	r0, r6
   1689c:	bl	10f84 <realloc@plt>
   168a0:	cmp	r0, #0
   168a4:	beq	1691c <sigaltstack@plt+0x5794>
   168a8:	sub	r3, r5, #1
   168ac:	mov	sl, r5
   168b0:	mov	r6, r0
   168b4:	sub	r3, r3, r4
   168b8:	add	r4, r0, r4
   168bc:	str	r3, [sp, #24]
   168c0:	str	r4, [sp, #20]
   168c4:	mov	r2, #0
   168c8:	str	r8, [sp]
   168cc:	mov	r1, r2
   168d0:	add	r3, sp, #20
   168d4:	mov	r0, r7
   168d8:	bl	10edc <iconv@plt>
   168dc:	cmn	r0, #1
   168e0:	beq	1686c <sigaltstack@plt+0x56e4>
   168e4:	ldr	r3, [sp, #20]
   168e8:	mov	r2, #0
   168ec:	add	r1, r3, #1
   168f0:	str	r1, [sp, #20]
   168f4:	strb	r2, [r3]
   168f8:	ldr	r1, [sp, #20]
   168fc:	sub	r1, r1, r6
   16900:	cmp	sl, r1
   16904:	bls	16930 <sigaltstack@plt+0x57a8>
   16908:	mov	r0, r6
   1690c:	bl	10f84 <realloc@plt>
   16910:	cmp	r0, #0
   16914:	movne	r6, r0
   16918:	b	16930 <sigaltstack@plt+0x57a8>
   1691c:	mov	r3, #12
   16920:	str	r3, [fp]
   16924:	mov	r0, r6
   16928:	bl	10f18 <free@plt>
   1692c:	mov	r6, #0
   16930:	ldr	r2, [sp, #28]
   16934:	ldr	r3, [r9]
   16938:	mov	r0, r6
   1693c:	cmp	r2, r3
   16940:	bne	1695c <sigaltstack@plt+0x57d4>
   16944:	add	sp, sp, #36	; 0x24
   16948:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1694c:	bl	11098 <__errno_location@plt>
   16950:	mov	r3, #12
   16954:	str	r3, [r0]
   16958:	b	16930 <sigaltstack@plt+0x57a8>
   1695c:	bl	10f78 <__stack_chk_fail@plt>
   16960:	andeq	r7, r2, r8, lsl #30
   16964:	push	{r4, r5, r6, lr}
   16968:	mov	r4, r0
   1696c:	ldrb	r3, [r0]
   16970:	cmp	r3, #0
   16974:	beq	16994 <sigaltstack@plt+0x580c>
   16978:	mov	r6, r1
   1697c:	mov	r0, r6
   16980:	mov	r1, r2
   16984:	mov	r5, r2
   16988:	bl	14d44 <sigaltstack@plt+0x3bbc>
   1698c:	cmp	r0, #0
   16990:	bne	169ac <sigaltstack@plt+0x5824>
   16994:	mov	r0, r4
   16998:	bl	10f6c <strdup@plt>
   1699c:	subs	r4, r0, #0
   169a0:	beq	16a0c <sigaltstack@plt+0x5884>
   169a4:	mov	r0, r4
   169a8:	pop	{r4, r5, r6, pc}
   169ac:	mov	r0, r5
   169b0:	mov	r1, r6
   169b4:	bl	1102c <iconv_open@plt>
   169b8:	cmn	r0, #1
   169bc:	mov	r5, r0
   169c0:	moveq	r4, #0
   169c4:	beq	169a4 <sigaltstack@plt+0x581c>
   169c8:	mov	r0, r4
   169cc:	mov	r1, r5
   169d0:	bl	1677c <sigaltstack@plt+0x55f4>
   169d4:	subs	r4, r0, #0
   169d8:	beq	16a20 <sigaltstack@plt+0x5898>
   169dc:	mov	r0, r5
   169e0:	bl	10ed0 <iconv_close@plt>
   169e4:	cmp	r0, #0
   169e8:	bge	169a4 <sigaltstack@plt+0x581c>
   169ec:	bl	11098 <__errno_location@plt>
   169f0:	mov	r5, r0
   169f4:	mov	r0, r4
   169f8:	ldr	r6, [r5]
   169fc:	mov	r4, #0
   16a00:	bl	10f18 <free@plt>
   16a04:	str	r6, [r5]
   16a08:	b	169a4 <sigaltstack@plt+0x581c>
   16a0c:	bl	11098 <__errno_location@plt>
   16a10:	mov	r3, #12
   16a14:	str	r3, [r0]
   16a18:	mov	r0, r4
   16a1c:	pop	{r4, r5, r6, pc}
   16a20:	bl	11098 <__errno_location@plt>
   16a24:	mov	r6, r0
   16a28:	mov	r0, r5
   16a2c:	ldr	r5, [r6]
   16a30:	bl	10ed0 <iconv_close@plt>
   16a34:	str	r5, [r6]
   16a38:	b	169a4 <sigaltstack@plt+0x581c>
   16a3c:	mov	r3, #16
   16a40:	adds	r0, r0, r3
   16a44:	bcs	16a70 <sigaltstack@plt+0x58e8>
   16a48:	push	{r4, lr}
   16a4c:	bl	11020 <malloc@plt>
   16a50:	subs	r2, r0, #0
   16a54:	addne	r3, r2, #8
   16a58:	bicne	r3, r3, #15
   16a5c:	moveq	r0, #0
   16a60:	addne	r0, r3, #8
   16a64:	subne	r2, r0, r2
   16a68:	strbne	r2, [r3, #7]
   16a6c:	pop	{r4, pc}
   16a70:	mov	r0, #0
   16a74:	bx	lr
   16a78:	tst	r0, #7
   16a7c:	bne	16a94 <sigaltstack@plt+0x590c>
   16a80:	tst	r0, #8
   16a84:	bxeq	lr
   16a88:	ldrb	r3, [r0, #-1]
   16a8c:	sub	r0, r0, r3
   16a90:	b	10f18 <free@plt>
   16a94:	push	{r4, lr}
   16a98:	bl	11164 <abort@plt>
   16a9c:	push	{r4, r5, r6, r7, r8, lr}
   16aa0:	sub	sp, sp, #64	; 0x40
   16aa4:	ldr	r7, [pc, #464]	; 16c7c <sigaltstack@plt+0x5af4>
   16aa8:	mov	r4, r0
   16aac:	ldr	r3, [r7]
   16ab0:	str	r3, [sp, #60]	; 0x3c
   16ab4:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   16ab8:	cmp	r0, #1
   16abc:	bhi	16ae8 <sigaltstack@plt+0x5960>
   16ac0:	mov	r0, r4
   16ac4:	bl	11080 <strlen@plt>
   16ac8:	mov	r5, r0
   16acc:	ldr	r2, [sp, #60]	; 0x3c
   16ad0:	ldr	r3, [r7]
   16ad4:	mov	r0, r5
   16ad8:	cmp	r2, r3
   16adc:	bne	16c64 <sigaltstack@plt+0x5adc>
   16ae0:	add	sp, sp, #64	; 0x40
   16ae4:	pop	{r4, r5, r6, r7, r8, pc}
   16ae8:	mov	r5, #0
   16aec:	str	r4, [sp, #20]
   16af0:	str	r5, [sp, #12]
   16af4:	strb	r5, [sp, #4]
   16af8:	str	r5, [sp, #8]
   16afc:	strb	r5, [sp, #16]
   16b00:	mov	r6, #1
   16b04:	ldr	r8, [pc, #372]	; 16c80 <sigaltstack@plt+0x5af8>
   16b08:	b	16b60 <sigaltstack@plt+0x59d8>
   16b0c:	ldrb	r3, [r4]
   16b10:	and	r2, r3, #31
   16b14:	lsr	r3, r3, #5
   16b18:	ldr	r3, [r8, r3, lsl #2]
   16b1c:	lsr	r3, r3, r2
   16b20:	tst	r3, #1
   16b24:	beq	16bd4 <sigaltstack@plt+0x5a4c>
   16b28:	str	r6, [sp, #24]
   16b2c:	ldrb	r4, [r4]
   16b30:	strb	r6, [sp, #28]
   16b34:	strb	r6, [sp, #16]
   16b38:	str	r4, [sp, #32]
   16b3c:	cmp	r4, #0
   16b40:	beq	16acc <sigaltstack@plt+0x5944>
   16b44:	ldr	r4, [sp, #20]
   16b48:	ldr	r3, [sp, #24]
   16b4c:	add	r5, r5, #1
   16b50:	add	r4, r4, r3
   16b54:	mov	r3, #0
   16b58:	str	r4, [sp, #20]
   16b5c:	strb	r3, [sp, #16]
   16b60:	ldrb	r3, [sp, #4]
   16b64:	cmp	r3, #0
   16b68:	beq	16b0c <sigaltstack@plt+0x5984>
   16b6c:	bl	10fe4 <__ctype_get_mb_cur_max@plt>
   16b70:	mov	r1, r0
   16b74:	mov	r0, r4
   16b78:	bl	1341c <sigaltstack@plt+0x2294>
   16b7c:	add	r3, sp, #8
   16b80:	mov	r1, r4
   16b84:	mov	r2, r0
   16b88:	add	r0, sp, #32
   16b8c:	bl	14cc4 <sigaltstack@plt+0x3b3c>
   16b90:	cmn	r0, #1
   16b94:	str	r0, [sp, #24]
   16b98:	beq	16bec <sigaltstack@plt+0x5a64>
   16b9c:	cmn	r0, #2
   16ba0:	beq	16c00 <sigaltstack@plt+0x5a78>
   16ba4:	cmp	r0, #0
   16ba8:	beq	16c1c <sigaltstack@plt+0x5a94>
   16bac:	ldr	r4, [sp, #32]
   16bb0:	add	r0, sp, #8
   16bb4:	strb	r6, [sp, #28]
   16bb8:	bl	10f48 <mbsinit@plt>
   16bbc:	cmp	r0, #0
   16bc0:	movne	r3, #0
   16bc4:	strbeq	r6, [sp, #16]
   16bc8:	strbne	r6, [sp, #16]
   16bcc:	strbne	r3, [sp, #4]
   16bd0:	b	16b3c <sigaltstack@plt+0x59b4>
   16bd4:	add	r0, sp, #8
   16bd8:	bl	10f48 <mbsinit@plt>
   16bdc:	cmp	r0, #0
   16be0:	beq	16c50 <sigaltstack@plt+0x5ac8>
   16be4:	strb	r6, [sp, #4]
   16be8:	b	16b6c <sigaltstack@plt+0x59e4>
   16bec:	mov	r3, #0
   16bf0:	str	r6, [sp, #24]
   16bf4:	strb	r3, [sp, #28]
   16bf8:	ldr	r4, [sp, #20]
   16bfc:	b	16b48 <sigaltstack@plt+0x59c0>
   16c00:	ldr	r4, [sp, #20]
   16c04:	mov	r0, r4
   16c08:	bl	11080 <strlen@plt>
   16c0c:	mov	r3, #0
   16c10:	strb	r3, [sp, #28]
   16c14:	str	r0, [sp, #24]
   16c18:	b	16b48 <sigaltstack@plt+0x59c0>
   16c1c:	ldr	r4, [sp, #20]
   16c20:	str	r6, [sp, #24]
   16c24:	ldrb	r3, [r4]
   16c28:	cmp	r3, #0
   16c2c:	bne	16c68 <sigaltstack@plt+0x5ae0>
   16c30:	ldr	r4, [sp, #32]
   16c34:	cmp	r4, #0
   16c38:	beq	16bb0 <sigaltstack@plt+0x5a28>
   16c3c:	ldr	r3, [pc, #64]	; 16c84 <sigaltstack@plt+0x5afc>
   16c40:	mov	r2, #179	; 0xb3
   16c44:	ldr	r1, [pc, #60]	; 16c88 <sigaltstack@plt+0x5b00>
   16c48:	ldr	r0, [pc, #60]	; 16c8c <sigaltstack@plt+0x5b04>
   16c4c:	bl	1117c <__assert_fail@plt>
   16c50:	ldr	r3, [pc, #44]	; 16c84 <sigaltstack@plt+0x5afc>
   16c54:	mov	r2, #150	; 0x96
   16c58:	ldr	r1, [pc, #40]	; 16c88 <sigaltstack@plt+0x5b00>
   16c5c:	ldr	r0, [pc, #44]	; 16c90 <sigaltstack@plt+0x5b08>
   16c60:	bl	1117c <__assert_fail@plt>
   16c64:	bl	10f78 <__stack_chk_fail@plt>
   16c68:	ldr	r3, [pc, #20]	; 16c84 <sigaltstack@plt+0x5afc>
   16c6c:	mov	r2, #178	; 0xb2
   16c70:	ldr	r1, [pc, #16]	; 16c88 <sigaltstack@plt+0x5b00>
   16c74:	ldr	r0, [pc, #24]	; 16c94 <sigaltstack@plt+0x5b0c>
   16c78:	bl	1117c <__assert_fail@plt>
   16c7c:	andeq	r7, r2, r8, lsl #30
   16c80:	andeq	r7, r1, r0, ror #28
   16c84:	muleq	r1, r4, lr
   16c88:	andeq	r7, r1, r8, lsr sl
   16c8c:	andeq	r7, r1, r4, asr #20
   16c90:	andeq	r7, r1, r8, asr sl
   16c94:	andeq	r7, r1, r0, ror sl
   16c98:	subs	r2, r1, #1
   16c9c:	bxeq	lr
   16ca0:	bcc	16e78 <sigaltstack@plt+0x5cf0>
   16ca4:	cmp	r0, r1
   16ca8:	bls	16e5c <sigaltstack@plt+0x5cd4>
   16cac:	tst	r1, r2
   16cb0:	beq	16e68 <sigaltstack@plt+0x5ce0>
   16cb4:	clz	r3, r0
   16cb8:	clz	r2, r1
   16cbc:	sub	r3, r2, r3
   16cc0:	rsbs	r3, r3, #31
   16cc4:	addne	r3, r3, r3, lsl #1
   16cc8:	mov	r2, #0
   16ccc:	addne	pc, pc, r3, lsl #2
   16cd0:	nop			; (mov r0, r0)
   16cd4:	cmp	r0, r1, lsl #31
   16cd8:	adc	r2, r2, r2
   16cdc:	subcs	r0, r0, r1, lsl #31
   16ce0:	cmp	r0, r1, lsl #30
   16ce4:	adc	r2, r2, r2
   16ce8:	subcs	r0, r0, r1, lsl #30
   16cec:	cmp	r0, r1, lsl #29
   16cf0:	adc	r2, r2, r2
   16cf4:	subcs	r0, r0, r1, lsl #29
   16cf8:	cmp	r0, r1, lsl #28
   16cfc:	adc	r2, r2, r2
   16d00:	subcs	r0, r0, r1, lsl #28
   16d04:	cmp	r0, r1, lsl #27
   16d08:	adc	r2, r2, r2
   16d0c:	subcs	r0, r0, r1, lsl #27
   16d10:	cmp	r0, r1, lsl #26
   16d14:	adc	r2, r2, r2
   16d18:	subcs	r0, r0, r1, lsl #26
   16d1c:	cmp	r0, r1, lsl #25
   16d20:	adc	r2, r2, r2
   16d24:	subcs	r0, r0, r1, lsl #25
   16d28:	cmp	r0, r1, lsl #24
   16d2c:	adc	r2, r2, r2
   16d30:	subcs	r0, r0, r1, lsl #24
   16d34:	cmp	r0, r1, lsl #23
   16d38:	adc	r2, r2, r2
   16d3c:	subcs	r0, r0, r1, lsl #23
   16d40:	cmp	r0, r1, lsl #22
   16d44:	adc	r2, r2, r2
   16d48:	subcs	r0, r0, r1, lsl #22
   16d4c:	cmp	r0, r1, lsl #21
   16d50:	adc	r2, r2, r2
   16d54:	subcs	r0, r0, r1, lsl #21
   16d58:	cmp	r0, r1, lsl #20
   16d5c:	adc	r2, r2, r2
   16d60:	subcs	r0, r0, r1, lsl #20
   16d64:	cmp	r0, r1, lsl #19
   16d68:	adc	r2, r2, r2
   16d6c:	subcs	r0, r0, r1, lsl #19
   16d70:	cmp	r0, r1, lsl #18
   16d74:	adc	r2, r2, r2
   16d78:	subcs	r0, r0, r1, lsl #18
   16d7c:	cmp	r0, r1, lsl #17
   16d80:	adc	r2, r2, r2
   16d84:	subcs	r0, r0, r1, lsl #17
   16d88:	cmp	r0, r1, lsl #16
   16d8c:	adc	r2, r2, r2
   16d90:	subcs	r0, r0, r1, lsl #16
   16d94:	cmp	r0, r1, lsl #15
   16d98:	adc	r2, r2, r2
   16d9c:	subcs	r0, r0, r1, lsl #15
   16da0:	cmp	r0, r1, lsl #14
   16da4:	adc	r2, r2, r2
   16da8:	subcs	r0, r0, r1, lsl #14
   16dac:	cmp	r0, r1, lsl #13
   16db0:	adc	r2, r2, r2
   16db4:	subcs	r0, r0, r1, lsl #13
   16db8:	cmp	r0, r1, lsl #12
   16dbc:	adc	r2, r2, r2
   16dc0:	subcs	r0, r0, r1, lsl #12
   16dc4:	cmp	r0, r1, lsl #11
   16dc8:	adc	r2, r2, r2
   16dcc:	subcs	r0, r0, r1, lsl #11
   16dd0:	cmp	r0, r1, lsl #10
   16dd4:	adc	r2, r2, r2
   16dd8:	subcs	r0, r0, r1, lsl #10
   16ddc:	cmp	r0, r1, lsl #9
   16de0:	adc	r2, r2, r2
   16de4:	subcs	r0, r0, r1, lsl #9
   16de8:	cmp	r0, r1, lsl #8
   16dec:	adc	r2, r2, r2
   16df0:	subcs	r0, r0, r1, lsl #8
   16df4:	cmp	r0, r1, lsl #7
   16df8:	adc	r2, r2, r2
   16dfc:	subcs	r0, r0, r1, lsl #7
   16e00:	cmp	r0, r1, lsl #6
   16e04:	adc	r2, r2, r2
   16e08:	subcs	r0, r0, r1, lsl #6
   16e0c:	cmp	r0, r1, lsl #5
   16e10:	adc	r2, r2, r2
   16e14:	subcs	r0, r0, r1, lsl #5
   16e18:	cmp	r0, r1, lsl #4
   16e1c:	adc	r2, r2, r2
   16e20:	subcs	r0, r0, r1, lsl #4
   16e24:	cmp	r0, r1, lsl #3
   16e28:	adc	r2, r2, r2
   16e2c:	subcs	r0, r0, r1, lsl #3
   16e30:	cmp	r0, r1, lsl #2
   16e34:	adc	r2, r2, r2
   16e38:	subcs	r0, r0, r1, lsl #2
   16e3c:	cmp	r0, r1, lsl #1
   16e40:	adc	r2, r2, r2
   16e44:	subcs	r0, r0, r1, lsl #1
   16e48:	cmp	r0, r1
   16e4c:	adc	r2, r2, r2
   16e50:	subcs	r0, r0, r1
   16e54:	mov	r0, r2
   16e58:	bx	lr
   16e5c:	moveq	r0, #1
   16e60:	movne	r0, #0
   16e64:	bx	lr
   16e68:	clz	r2, r1
   16e6c:	rsb	r2, r2, #31
   16e70:	lsr	r0, r0, r2
   16e74:	bx	lr
   16e78:	cmp	r0, #0
   16e7c:	mvnne	r0, #0
   16e80:	b	16fb4 <sigaltstack@plt+0x5e2c>
   16e84:	cmp	r1, #0
   16e88:	beq	16e78 <sigaltstack@plt+0x5cf0>
   16e8c:	push	{r0, r1, lr}
   16e90:	bl	16c98 <sigaltstack@plt+0x5b10>
   16e94:	pop	{r1, r2, lr}
   16e98:	mul	r3, r2, r0
   16e9c:	sub	r1, r1, r3
   16ea0:	bx	lr
   16ea4:	cmp	r3, #0
   16ea8:	cmpeq	r2, #0
   16eac:	bne	16ed0 <sigaltstack@plt+0x5d48>
   16eb0:	cmp	r1, #0
   16eb4:	movlt	r1, #-2147483648	; 0x80000000
   16eb8:	movlt	r0, #0
   16ebc:	blt	16ecc <sigaltstack@plt+0x5d44>
   16ec0:	cmpeq	r0, #0
   16ec4:	mvnne	r1, #-2147483648	; 0x80000000
   16ec8:	mvnne	r0, #0
   16ecc:	b	16fb4 <sigaltstack@plt+0x5e2c>
   16ed0:	sub	sp, sp, #8
   16ed4:	push	{sp, lr}
   16ed8:	cmp	r1, #0
   16edc:	blt	16efc <sigaltstack@plt+0x5d74>
   16ee0:	cmp	r3, #0
   16ee4:	blt	16f30 <sigaltstack@plt+0x5da8>
   16ee8:	bl	16fc4 <sigaltstack@plt+0x5e3c>
   16eec:	ldr	lr, [sp, #4]
   16ef0:	add	sp, sp, #8
   16ef4:	pop	{r2, r3}
   16ef8:	bx	lr
   16efc:	rsbs	r0, r0, #0
   16f00:	sbc	r1, r1, r1, lsl #1
   16f04:	cmp	r3, #0
   16f08:	blt	16f54 <sigaltstack@plt+0x5dcc>
   16f0c:	bl	16fc4 <sigaltstack@plt+0x5e3c>
   16f10:	ldr	lr, [sp, #4]
   16f14:	add	sp, sp, #8
   16f18:	pop	{r2, r3}
   16f1c:	rsbs	r0, r0, #0
   16f20:	sbc	r1, r1, r1, lsl #1
   16f24:	rsbs	r2, r2, #0
   16f28:	sbc	r3, r3, r3, lsl #1
   16f2c:	bx	lr
   16f30:	rsbs	r2, r2, #0
   16f34:	sbc	r3, r3, r3, lsl #1
   16f38:	bl	16fc4 <sigaltstack@plt+0x5e3c>
   16f3c:	ldr	lr, [sp, #4]
   16f40:	add	sp, sp, #8
   16f44:	pop	{r2, r3}
   16f48:	rsbs	r0, r0, #0
   16f4c:	sbc	r1, r1, r1, lsl #1
   16f50:	bx	lr
   16f54:	rsbs	r2, r2, #0
   16f58:	sbc	r3, r3, r3, lsl #1
   16f5c:	bl	16fc4 <sigaltstack@plt+0x5e3c>
   16f60:	ldr	lr, [sp, #4]
   16f64:	add	sp, sp, #8
   16f68:	pop	{r2, r3}
   16f6c:	rsbs	r2, r2, #0
   16f70:	sbc	r3, r3, r3, lsl #1
   16f74:	bx	lr
   16f78:	cmp	r3, #0
   16f7c:	cmpeq	r2, #0
   16f80:	bne	16f98 <sigaltstack@plt+0x5e10>
   16f84:	cmp	r1, #0
   16f88:	cmpeq	r0, #0
   16f8c:	mvnne	r1, #0
   16f90:	mvnne	r0, #0
   16f94:	b	16fb4 <sigaltstack@plt+0x5e2c>
   16f98:	sub	sp, sp, #8
   16f9c:	push	{sp, lr}
   16fa0:	bl	16fc4 <sigaltstack@plt+0x5e3c>
   16fa4:	ldr	lr, [sp, #4]
   16fa8:	add	sp, sp, #8
   16fac:	pop	{r2, r3}
   16fb0:	bx	lr
   16fb4:	push	{r1, lr}
   16fb8:	mov	r0, #8
   16fbc:	bl	10ec4 <raise@plt>
   16fc0:	pop	{r1, pc}
   16fc4:	cmp	r1, r3
   16fc8:	cmpeq	r0, r2
   16fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fd0:	mov	r4, r0
   16fd4:	movcc	r0, #0
   16fd8:	mov	r5, r1
   16fdc:	ldr	lr, [sp, #36]	; 0x24
   16fe0:	movcc	r1, r0
   16fe4:	bcc	170e0 <sigaltstack@plt+0x5f58>
   16fe8:	cmp	r3, #0
   16fec:	clzeq	ip, r2
   16ff0:	clzne	ip, r3
   16ff4:	addeq	ip, ip, #32
   16ff8:	cmp	r5, #0
   16ffc:	clzeq	r1, r4
   17000:	addeq	r1, r1, #32
   17004:	clzne	r1, r5
   17008:	sub	ip, ip, r1
   1700c:	sub	sl, ip, #32
   17010:	lsl	r9, r3, ip
   17014:	rsb	fp, ip, #32
   17018:	orr	r9, r9, r2, lsl sl
   1701c:	orr	r9, r9, r2, lsr fp
   17020:	lsl	r8, r2, ip
   17024:	cmp	r5, r9
   17028:	cmpeq	r4, r8
   1702c:	movcc	r0, #0
   17030:	movcc	r1, r0
   17034:	bcc	17050 <sigaltstack@plt+0x5ec8>
   17038:	mov	r0, #1
   1703c:	subs	r4, r4, r8
   17040:	lsl	r1, r0, sl
   17044:	orr	r1, r1, r0, lsr fp
   17048:	lsl	r0, r0, ip
   1704c:	sbc	r5, r5, r9
   17050:	cmp	ip, #0
   17054:	beq	170e0 <sigaltstack@plt+0x5f58>
   17058:	lsr	r6, r8, #1
   1705c:	orr	r6, r6, r9, lsl #31
   17060:	lsr	r7, r9, #1
   17064:	mov	r2, ip
   17068:	b	1708c <sigaltstack@plt+0x5f04>
   1706c:	subs	r3, r4, r6
   17070:	sbc	r8, r5, r7
   17074:	adds	r3, r3, r3
   17078:	adc	r8, r8, r8
   1707c:	adds	r4, r3, #1
   17080:	adc	r5, r8, #0
   17084:	subs	r2, r2, #1
   17088:	beq	170a8 <sigaltstack@plt+0x5f20>
   1708c:	cmp	r5, r7
   17090:	cmpeq	r4, r6
   17094:	bcs	1706c <sigaltstack@plt+0x5ee4>
   17098:	adds	r4, r4, r4
   1709c:	adc	r5, r5, r5
   170a0:	subs	r2, r2, #1
   170a4:	bne	1708c <sigaltstack@plt+0x5f04>
   170a8:	lsr	r3, r4, ip
   170ac:	orr	r3, r3, r5, lsl fp
   170b0:	lsr	r2, r5, ip
   170b4:	orr	r3, r3, r5, lsr sl
   170b8:	adds	r0, r0, r4
   170bc:	mov	r4, r3
   170c0:	lsl	r3, r2, ip
   170c4:	orr	r3, r3, r4, lsl sl
   170c8:	lsl	ip, r4, ip
   170cc:	orr	r3, r3, r4, lsr fp
   170d0:	adc	r1, r1, r5
   170d4:	subs	r0, r0, ip
   170d8:	mov	r5, r2
   170dc:	sbc	r1, r1, r3
   170e0:	cmp	lr, #0
   170e4:	strdne	r4, [lr]
   170e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   170f0:	mov	r7, r0
   170f4:	ldr	r6, [pc, #72]	; 17144 <sigaltstack@plt+0x5fbc>
   170f8:	ldr	r5, [pc, #72]	; 17148 <sigaltstack@plt+0x5fc0>
   170fc:	add	r6, pc, r6
   17100:	add	r5, pc, r5
   17104:	sub	r6, r6, r5
   17108:	mov	r8, r1
   1710c:	mov	r9, r2
   17110:	bl	10e8c <calloc@plt-0x20>
   17114:	asrs	r6, r6, #2
   17118:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1711c:	mov	r4, #0
   17120:	add	r4, r4, #1
   17124:	ldr	r3, [r5], #4
   17128:	mov	r2, r9
   1712c:	mov	r1, r8
   17130:	mov	r0, r7
   17134:	blx	r3
   17138:	cmp	r6, r4
   1713c:	bne	17120 <sigaltstack@plt+0x5f98>
   17140:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17144:	andeq	r0, r1, r0, lsl #28
   17148:	strdeq	r0, [r1], -r8
   1714c:	bx	lr

Disassembly of section .fini:

00017150 <.fini>:
   17150:	push	{r3, lr}
   17154:	pop	{r3, pc}
