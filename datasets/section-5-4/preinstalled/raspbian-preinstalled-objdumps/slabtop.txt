
raspbian-preinstalled/slabtop:     file format elf32-littlearm


Disassembly of section .init:

00010d9c <_init@@Base>:
   10d9c:	push	{r3, lr}
   10da0:	bl	119c8 <tcgetattr@plt+0xa08>
   10da4:	pop	{r3, pc}

Disassembly of section .plt:

00010da8 <resizeterm@plt-0x14>:
   10da8:	push	{lr}		; (str lr, [sp, #-4]!)
   10dac:	ldr	lr, [pc, #4]	; 10db8 <_init@@Base+0x1c>
   10db0:	add	lr, pc, lr
   10db4:	ldr	pc, [lr, #8]!
   10db8:	andeq	r2, r1, r4, lsl #3

00010dbc <resizeterm@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #388]!	; 0x184

00010dc8 <strcmp@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #380]!	; 0x17c

00010dd4 <strtol@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #372]!	; 0x174

00010de0 <read@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #73728	; 0x12000
   10de8:	ldr	pc, [ip, #364]!	; 0x16c

00010dec <ferror@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #73728	; 0x12000
   10df4:	ldr	pc, [ip, #356]!	; 0x164

00010df8 <_exit@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #73728	; 0x12000
   10e00:	ldr	pc, [ip, #348]!	; 0x15c

00010e04 <signal@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #73728	; 0x12000
   10e0c:	ldr	pc, [ip, #340]!	; 0x154

00010e10 <put_slabinfo@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #73728	; 0x12000
   10e18:	ldr	pc, [ip, #332]!	; 0x14c

00010e1c <select@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #73728	; 0x12000
   10e24:	ldr	pc, [ip, #324]!	; 0x144

00010e28 <dcgettext@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #73728	; 0x12000
   10e30:	ldr	pc, [ip, #316]!	; 0x13c

00010e34 <__stack_chk_fail@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #73728	; 0x12000
   10e3c:	ldr	pc, [ip, #308]!	; 0x134

00010e40 <textdomain@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #73728	; 0x12000
   10e48:	ldr	pc, [ip, #300]!	; 0x12c

00010e4c <initscr@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #73728	; 0x12000
   10e54:	ldr	pc, [ip, #292]!	; 0x124

00010e58 <wrefresh@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #73728	; 0x12000
   10e60:	ldr	pc, [ip, #284]!	; 0x11c

00010e64 <ioctl@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #73728	; 0x12000
   10e6c:	ldr	pc, [ip, #276]!	; 0x114

00010e70 <tcsetattr@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #73728	; 0x12000
   10e78:	ldr	pc, [ip, #268]!	; 0x10c

00010e7c <__fpending@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #73728	; 0x12000
   10e84:	ldr	pc, [ip, #260]!	; 0x104

00010e88 <error@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #73728	; 0x12000
   10e90:	ldr	pc, [ip, #252]!	; 0xfc

00010e94 <wattr_on@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #244]!	; 0xf4

00010ea0 <__libc_start_main@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #236]!	; 0xec

00010eac <__ctype_toupper_loc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #228]!	; 0xe4

00010eb8 <__gmon_start__@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #220]!	; 0xdc

00010ec4 <getopt_long@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #212]!	; 0xd4

00010ed0 <__ctype_b_loc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #204]!	; 0xcc

00010edc <exit@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #196]!	; 0xc4

00010ee8 <__errno_location@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #188]!	; 0xbc

00010ef4 <__cxa_atexit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #180]!	; 0xb4

00010f00 <memset@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #172]!	; 0xac

00010f0c <get_slabinfo@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #164]!	; 0xa4

00010f18 <__printf_chk@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #156]!	; 0x9c

00010f24 <strtod@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #148]!	; 0x94

00010f30 <__fprintf_chk@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #140]!	; 0x8c

00010f3c <fclose@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #132]!	; 0x84

00010f48 <free_slabinfo@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #124]!	; 0x7c

00010f54 <setlocale@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #116]!	; 0x74

00010f60 <wmove@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #108]!	; 0x6c

00010f6c <printw@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #100]!	; 0x64

00010f78 <bindtextdomain@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #92]!	; 0x5c

00010f84 <endwin@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #73728	; 0x12000
   10f8c:	ldr	pc, [ip, #84]!	; 0x54

00010f90 <isatty@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #73728	; 0x12000
   10f98:	ldr	pc, [ip, #76]!	; 0x4c

00010f9c <fputs@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #73728	; 0x12000
   10fa4:	ldr	pc, [ip, #68]!	; 0x44

00010fa8 <abort@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #73728	; 0x12000
   10fb0:	ldr	pc, [ip, #60]!	; 0x3c

00010fb4 <wattr_off@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #73728	; 0x12000
   10fbc:	ldr	pc, [ip, #52]!	; 0x34

00010fc0 <tcgetattr@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #73728	; 0x12000
   10fc8:	ldr	pc, [ip, #44]!	; 0x2c

Disassembly of section .text:

00010fd0 <.text>:
   10fd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fd4:	vpush	{d8-d14}
   10fd8:	ldr	r3, [pc, #1416]	; 11568 <tcgetattr@plt+0x5a8>
   10fdc:	ldr	r9, [pc, #1416]	; 1156c <tcgetattr@plt+0x5ac>
   10fe0:	ldr	r2, [pc, #1416]	; 11570 <tcgetattr@plt+0x5b0>
   10fe4:	sub	sp, sp, #348	; 0x15c
   10fe8:	ldr	lr, [r3]
   10fec:	ldr	ip, [r9]
   10ff0:	mov	r3, #0
   10ff4:	mov	r8, r0
   10ff8:	mov	r7, r1
   10ffc:	mov	r0, #6
   11000:	ldr	r1, [pc, #1388]	; 11574 <tcgetattr@plt+0x5b4>
   11004:	str	r3, [sp, #152]	; 0x98
   11008:	str	lr, [sp, #340]	; 0x154
   1100c:	str	ip, [r2]
   11010:	bl	10f54 <setlocale@plt>
   11014:	ldr	r1, [pc, #1372]	; 11578 <tcgetattr@plt+0x5b8>
   11018:	ldr	r0, [pc, #1372]	; 1157c <tcgetattr@plt+0x5bc>
   1101c:	bl	10f78 <bindtextdomain@plt>
   11020:	ldr	r0, [pc, #1364]	; 1157c <tcgetattr@plt+0x5bc>
   11024:	bl	10e40 <textdomain@plt>
   11028:	ldr	fp, [pc, #1360]	; 11580 <tcgetattr@plt+0x5c0>
   1102c:	ldr	r0, [pc, #1360]	; 11584 <tcgetattr@plt+0x5c4>
   11030:	ldr	r6, [pc, #1360]	; 11588 <tcgetattr@plt+0x5c8>
   11034:	ldr	r5, [pc, #1360]	; 1158c <tcgetattr@plt+0x5cc>
   11038:	ldr	sl, [pc, #1360]	; 11590 <tcgetattr@plt+0x5d0>
   1103c:	bl	12420 <tcgetattr@plt+0x1460>
   11040:	ldr	r3, [pc, #1440]	; 115e8 <tcgetattr@plt+0x628>
   11044:	str	r3, [fp]
   11048:	mov	r4, #0
   1104c:	str	r4, [sp]
   11050:	mov	r3, r6
   11054:	mov	r2, r5
   11058:	mov	r1, r7
   1105c:	mov	r0, r8
   11060:	bl	10ec4 <getopt_long@plt>
   11064:	cmn	r0, #1
   11068:	beq	111e4 <tcgetattr@plt+0x224>
   1106c:	sub	r0, r0, #86	; 0x56
   11070:	cmp	r0, #29
   11074:	ldrls	pc, [pc, r0, lsl #2]
   11078:	b	11908 <tcgetattr@plt+0x948>
   1107c:	muleq	r1, r8, r1
   11080:	andeq	r1, r1, r8, lsl #18
   11084:	andeq	r1, r1, r8, lsl #18
   11088:	andeq	r1, r1, r8, lsl #18
   1108c:	andeq	r1, r1, r8, lsl #18
   11090:	andeq	r1, r1, r8, lsl #18
   11094:	andeq	r1, r1, r8, lsl #18
   11098:	andeq	r1, r1, r8, lsl #18
   1109c:	andeq	r1, r1, r8, lsl #18
   110a0:	andeq	r1, r1, r8, lsl #18
   110a4:	andeq	r1, r1, r8, lsl #18
   110a8:	andeq	r1, r1, r8, lsl #18
   110ac:	andeq	r1, r1, r8, lsl #18
   110b0:	andeq	r1, r1, r8, lsl #18
   110b4:	andeq	r1, r1, r4, lsr r1
   110b8:	andeq	r1, r1, r8, lsl #18
   110bc:	andeq	r1, r1, r8, lsl #18
   110c0:	andeq	r1, r1, r8, lsl #18
   110c4:	strdeq	r1, [r1], -ip
   110c8:	andeq	r1, r1, r8, lsl #18
   110cc:	andeq	r1, r1, r8, lsl #18
   110d0:	andeq	r1, r1, r8, lsl #18
   110d4:	andeq	r1, r1, r8, lsl #18
   110d8:	andeq	r1, r1, r8, lsl #18
   110dc:	andeq	r1, r1, r8, lsl #18
   110e0:	andeq	r1, r1, ip, lsl r1
   110e4:	andeq	r1, r1, r8, lsl #18
   110e8:	andeq	r1, r1, r8, lsl #18
   110ec:	andeq	r1, r1, r8, lsl #18
   110f0:	strdeq	r1, [r1], -r4
   110f4:	ldr	r3, [sl]
   110f8:	ldrb	r3, [r3]
   110fc:	sub	r3, r3, #97	; 0x61
   11100:	uxtb	r3, r3
   11104:	cmp	r3, #21
   11108:	ldrls	r2, [pc, #1156]	; 11594 <tcgetattr@plt+0x5d4>
   1110c:	ldrhi	r3, [pc, #1236]	; 115e8 <tcgetattr@plt+0x628>
   11110:	ldrls	r3, [r2, r3, lsl #2]
   11114:	str	r3, [fp]
   11118:	b	11048 <tcgetattr@plt+0x88>
   1111c:	mov	r2, #1
   11120:	str	r2, [fp, #8]
   11124:	ldr	r2, [pc, #1192]	; 115d4 <tcgetattr@plt+0x614>
   11128:	mov	r3, #0
   1112c:	str	r3, [r2]
   11130:	b	11048 <tcgetattr@plt+0x88>
   11134:	bl	10ee8 <__errno_location@plt>
   11138:	mov	r4, #0
   1113c:	ldr	r3, [sl]
   11140:	mov	r2, #5
   11144:	ldr	r1, [pc, #1100]	; 11598 <tcgetattr@plt+0x5d8>
   11148:	str	r3, [sp, #128]	; 0x80
   1114c:	str	r4, [r0]
   11150:	mov	r0, r4
   11154:	bl	10e28 <dcgettext@plt>
   11158:	ldr	r3, [sp, #128]	; 0x80
   1115c:	mov	r1, r0
   11160:	mov	r0, r3
   11164:	bl	11f98 <tcgetattr@plt+0xfd8>
   11168:	ldr	r3, [pc, #1124]	; 115d4 <tcgetattr@plt+0x614>
   1116c:	cmp	r0, r4
   11170:	str	r0, [r3]
   11174:	bgt	11048 <tcgetattr@plt+0x88>
   11178:	mov	r2, #5
   1117c:	ldr	r1, [pc, #1048]	; 1159c <tcgetattr@plt+0x5dc>
   11180:	mov	r0, r4
   11184:	bl	10e28 <dcgettext@plt>
   11188:	mov	r1, r4
   1118c:	mov	r2, r0
   11190:	mov	r0, #1
   11194:	bl	10e88 <error@plt>
   11198:	mov	r2, #5
   1119c:	ldr	r1, [pc, #1020]	; 115a0 <tcgetattr@plt+0x5e0>
   111a0:	mov	r0, #0
   111a4:	bl	10e28 <dcgettext@plt>
   111a8:	ldr	r2, [r9]
   111ac:	ldr	r3, [pc, #1008]	; 115a4 <tcgetattr@plt+0x5e4>
   111b0:	mov	r6, #0
   111b4:	mov	r1, r0
   111b8:	mov	r0, #1
   111bc:	bl	10f18 <__printf_chk@plt>
   111c0:	ldr	r3, [pc, #928]	; 11568 <tcgetattr@plt+0x5a8>
   111c4:	ldr	r2, [sp, #340]	; 0x154
   111c8:	mov	r0, r6
   111cc:	ldr	r3, [r3]
   111d0:	cmp	r2, r3
   111d4:	bne	11988 <tcgetattr@plt+0x9c8>
   111d8:	add	sp, sp, #348	; 0x15c
   111dc:	vpop	{d8-d14}
   111e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111e4:	mov	r0, r4
   111e8:	bl	10f90 <isatty@plt>
   111ec:	subs	r3, r0, #0
   111f0:	str	r3, [sp, #140]	; 0x8c
   111f4:	bne	11914 <tcgetattr@plt+0x954>
   111f8:	ldrh	r3, [fp, #6]
   111fc:	mov	r0, #0
   11200:	str	r3, [sp, #136]	; 0x88
   11204:	bl	11f04 <tcgetattr@plt+0xf44>
   11208:	ldr	r3, [fp, #8]
   1120c:	cmp	r3, #0
   11210:	beq	11968 <tcgetattr@plt+0x9a8>
   11214:	ldr	r1, [pc, #908]	; 115a8 <tcgetattr@plt+0x5e8>
   11218:	mov	r0, #2
   1121c:	bl	10e04 <signal@plt>
   11220:	vldr	d8, [pc, #816]	; 11558 <tcgetattr@plt+0x598>
   11224:	vldr	d9, [pc, #820]	; 11560 <tcgetattr@plt+0x5a0>
   11228:	ldr	r8, [pc, #892]	; 115ac <tcgetattr@plt+0x5ec>
   1122c:	ldr	r7, [pc, #892]	; 115b0 <tcgetattr@plt+0x5f0>
   11230:	mov	r2, #48	; 0x30
   11234:	mov	r1, #0
   11238:	add	r0, sp, #164	; 0xa4
   1123c:	bl	10f00 <memset@plt>
   11240:	add	r1, sp, #164	; 0xa4
   11244:	add	r0, sp, #152	; 0x98
   11248:	bl	10f0c <get_slabinfo@plt>
   1124c:	subs	r6, r0, #0
   11250:	bne	11864 <tcgetattr@plt+0x8a4>
   11254:	ldr	r3, [fp, #8]
   11258:	cmp	r3, #0
   1125c:	bne	11280 <tcgetattr@plt+0x2c0>
   11260:	ldrh	r0, [fp, #6]
   11264:	ldr	r3, [sp, #136]	; 0x88
   11268:	cmp	r0, r3
   1126c:	beq	11280 <tcgetattr@plt+0x2c0>
   11270:	ldrh	r1, [fp, #4]
   11274:	bl	10dbc <resizeterm@plt>
   11278:	ldrh	r3, [fp, #6]
   1127c:	str	r3, [sp, #136]	; 0x88
   11280:	mov	r2, #0
   11284:	mov	r1, r2
   11288:	ldr	r0, [r8]
   1128c:	bl	10f60 <wmove@plt>
   11290:	ldr	r4, [fp, #8]
   11294:	mov	r2, #5
   11298:	cmp	r4, #0
   1129c:	ldr	r1, [pc, #784]	; 115b4 <tcgetattr@plt+0x5f4>
   112a0:	beq	11614 <tcgetattr@plt+0x654>
   112a4:	mov	r0, #0
   112a8:	bl	10e28 <dcgettext@plt>
   112ac:	ldr	r3, [sp, #176]	; 0xb0
   112b0:	mov	r2, #5
   112b4:	ldr	r1, [pc, #768]	; 115bc <tcgetattr@plt+0x5fc>
   112b8:	str	r3, [sp, #128]	; 0x80
   112bc:	vldr	s24, [sp, #172]	; 0xac
   112c0:	mov	r4, r0
   112c4:	mov	r0, #0
   112c8:	bl	10e28 <dcgettext@plt>
   112cc:	mov	r2, #5
   112d0:	ldr	r1, [pc, #744]	; 115c0 <tcgetattr@plt+0x600>
   112d4:	vldr	s25, [sp, #188]	; 0xbc
   112d8:	vldr	s26, [sp, #184]	; 0xb8
   112dc:	mov	sl, r0
   112e0:	mov	r0, #0
   112e4:	bl	10e28 <dcgettext@plt>
   112e8:	mov	r2, #5
   112ec:	ldr	r1, [pc, #720]	; 115c4 <tcgetattr@plt+0x604>
   112f0:	vldr	s27, [sp, #196]	; 0xc4
   112f4:	vldr	s28, [sp, #192]	; 0xc0
   112f8:	mov	r5, r0
   112fc:	mov	r0, #0
   11300:	bl	10e28 <dcgettext@plt>
   11304:	vldr	s15, [sp, #168]	; 0xa8
   11308:	mov	r2, #5
   1130c:	ldr	r1, [pc, #692]	; 115c8 <tcgetattr@plt+0x608>
   11310:	vcvt.f64.u32	d11, s15
   11314:	vldr	s15, [sp, #164]	; 0xa4
   11318:	vcvt.f64.u32	d10, s15
   1131c:	mov	r9, r0
   11320:	mov	r0, #0
   11324:	bl	10e28 <dcgettext@plt>
   11328:	vmul.f64	d4, d11, d9
   1132c:	ldr	r3, [sp, #128]	; 0x80
   11330:	vcvt.f64.u32	d5, s27
   11334:	vcvt.f64.u32	d3, s25
   11338:	vmov	s15, r3
   1133c:	vcvt.f64.u32	d2, s26
   11340:	vcvt.f64.u32	d0, s24
   11344:	vmul.f64	d11, d11, d8
   11348:	str	sl, [sp, #16]
   1134c:	vdiv.f64	d6, d4, d10
   11350:	vmul.f64	d5, d5, d9
   11354:	vstr	s28, [sp, #48]	; 0x30
   11358:	vcvt.f64.u32	d1, s15
   1135c:	vcvt.f64.u32	d7, s28
   11360:	vmul.f64	d3, d3, d9
   11364:	vstr	s27, [sp, #44]	; 0x2c
   11368:	vmul.f64	d10, d10, d8
   1136c:	str	r5, [sp, #40]	; 0x28
   11370:	vstr	s26, [sp, #24]
   11374:	vstr	s25, [sp, #20]
   11378:	vmul.f64	d1, d1, d9
   1137c:	vstr	s24, [sp]
   11380:	mov	r2, r4
   11384:	ldr	r1, [pc, #576]	; 115cc <tcgetattr@plt+0x60c>
   11388:	str	r9, [sp, #64]	; 0x40
   1138c:	vstr	d10, [sp, #80]	; 0x50
   11390:	vstr	d11, [sp, #72]	; 0x48
   11394:	str	r0, [sp, #96]	; 0x60
   11398:	mov	r0, #1
   1139c:	vdiv.f64	d4, d5, d7
   113a0:	vldr	s15, [sp, #208]	; 0xd0
   113a4:	vstr	d6, [sp, #88]	; 0x58
   113a8:	vcvt.f64.u32	d7, s15
   113ac:	vmul.f64	d7, d7, d8
   113b0:	vstr	d7, [sp, #120]	; 0x78
   113b4:	vldr	s15, [sp, #200]	; 0xc8
   113b8:	vcvt.f64.u32	d6, s15
   113bc:	vldr	s15, [sp, #204]	; 0xcc
   113c0:	vdiv.f64	d5, d3, d2
   113c4:	vcvt.f64.u32	d7, s15
   113c8:	vstr	d4, [sp, #56]	; 0x38
   113cc:	vmul.f64	d6, d6, d8
   113d0:	vmul.f64	d7, d7, d8
   113d4:	vstr	d6, [sp, #112]	; 0x70
   113d8:	vstr	d7, [sp, #104]	; 0x68
   113dc:	vdiv.f64	d7, d1, d0
   113e0:	vstr	d5, [sp, #32]
   113e4:	vstr	d7, [sp, #8]
   113e8:	bl	10f18 <__printf_chk@plt>
   113ec:	ldr	r0, [sp, #152]	; 0x98
   113f0:	bl	11a7c <tcgetattr@plt+0xabc>
   113f4:	mov	r2, #0
   113f8:	mov	r1, #262144	; 0x40000
   113fc:	str	r0, [sp, #152]	; 0x98
   11400:	ldr	r0, [r8]
   11404:	bl	10e94 <wattr_on@plt>
   11408:	ldr	r0, [fp, #8]
   1140c:	mov	r2, #5
   11410:	cmp	r0, #0
   11414:	ldr	r1, [pc, #412]	; 115b8 <tcgetattr@plt+0x5f8>
   11418:	beq	11760 <tcgetattr@plt+0x7a0>
   1141c:	mov	r0, #0
   11420:	bl	10e28 <dcgettext@plt>
   11424:	ldr	r1, [pc, #420]	; 115d0 <tcgetattr@plt+0x610>
   11428:	mov	r2, r0
   1142c:	mov	r0, #1
   11430:	bl	10f18 <__printf_chk@plt>
   11434:	mov	r2, #0
   11438:	mov	r1, #262144	; 0x40000
   1143c:	ldr	r0, [r8]
   11440:	bl	10fb4 <wattr_off@plt>
   11444:	ldrh	r3, [fp, #6]
   11448:	ldr	r4, [sp, #152]	; 0x98
   1144c:	cmp	r4, #0
   11450:	cmpne	r3, #8
   11454:	mov	r0, r4
   11458:	bls	11504 <tcgetattr@plt+0x544>
   1145c:	mov	r5, #0
   11460:	b	114ac <tcgetattr@plt+0x4ec>
   11464:	str	r0, [sp, #24]
   11468:	str	r3, [sp]
   1146c:	str	r4, [sp, #28]
   11470:	mov	r3, r2
   11474:	str	lr, [sp, #20]
   11478:	mov	r2, r1
   1147c:	str	ip, [sp, #16]
   11480:	vstr	d7, [sp, #8]
   11484:	mov	r1, r7
   11488:	mov	r0, #1
   1148c:	bl	10f18 <__printf_chk@plt>
   11490:	ldrh	r3, [fp, #6]
   11494:	ldr	r4, [r4, #132]	; 0x84
   11498:	add	r5, r5, #1
   1149c:	sub	r3, r3, #8
   114a0:	cmp	r4, #0
   114a4:	cmpne	r3, r5
   114a8:	ble	11500 <tcgetattr@plt+0x540>
   114ac:	vldr	s15, [r4, #148]	; 0x94
   114b0:	ldr	r3, [r4, #136]	; 0x88
   114b4:	ldr	r2, [fp, #8]
   114b8:	ldr	r1, [r4, #140]	; 0x8c
   114bc:	vcvt.f64.u32	d7, s15
   114c0:	cmp	r2, #0
   114c4:	lsr	r0, r3, #10
   114c8:	ldr	r2, [r4, #144]	; 0x90
   114cc:	ldr	r3, [r4, #168]	; 0xa8
   114d0:	ldr	ip, [r4, #160]	; 0xa0
   114d4:	ldr	lr, [r4, #152]	; 0x98
   114d8:	vmul.f64	d7, d7, d8
   114dc:	bne	11464 <tcgetattr@plt+0x4a4>
   114e0:	str	r0, [sp, #16]
   114e4:	str	r4, [sp, #20]
   114e8:	str	lr, [sp, #12]
   114ec:	str	ip, [sp, #8]
   114f0:	vstr	d7, [sp]
   114f4:	mov	r0, r7
   114f8:	bl	10f6c <printw@plt>
   114fc:	b	11490 <tcgetattr@plt+0x4d0>
   11500:	ldr	r0, [sp, #152]	; 0x98
   11504:	bl	10e10 <put_slabinfo@plt>
   11508:	ldr	r4, [fp, #8]
   1150c:	cmp	r4, #0
   11510:	beq	11774 <tcgetattr@plt+0x7b4>
   11514:	ldr	r5, [pc, #184]	; 115d4 <tcgetattr@plt+0x614>
   11518:	ldr	r3, [r5]
   1151c:	cmp	r3, #0
   11520:	bne	11230 <tcgetattr@plt+0x270>
   11524:	ldr	r3, [sp, #140]	; 0x8c
   11528:	cmp	r3, #0
   1152c:	bne	11954 <tcgetattr@plt+0x994>
   11530:	ldr	r0, [sp, #152]	; 0x98
   11534:	cmp	r0, #0
   11538:	beq	11540 <tcgetattr@plt+0x580>
   1153c:	bl	10f48 <free_slabinfo@plt>
   11540:	ldr	r3, [fp, #8]
   11544:	cmp	r3, #0
   11548:	bne	111c0 <tcgetattr@plt+0x200>
   1154c:	bl	10f84 <endwin@plt>
   11550:	b	111c0 <tcgetattr@plt+0x200>
   11554:	nop			; (mov r0, r0)
   11558:	andeq	r0, r0, r0
   1155c:	svccc	0x00500000
   11560:	andeq	r0, r0, r0
   11564:	subsmi	r0, r9, r0
   11568:	andeq	r2, r2, r8, lsl lr
   1156c:	andeq	r3, r2, r0, lsl r0
   11570:	andeq	r3, r2, r4, lsl r0
   11574:	andeq	r2, r1, r8, lsr r7
   11578:			; <UNDEFINED> instruction: 0x000127bc
   1157c:	ldrdeq	r2, [r1], -r0
   11580:	andeq	r3, r2, r0, lsr r0
   11584:	andeq	r2, r1, r8, lsr r3
   11588:	muleq	r1, ip, r4
   1158c:	andeq	r2, r1, ip, lsr #16
   11590:	andeq	r3, r2, r8, lsr #32
   11594:	andeq	r2, r1, r4, asr #8
   11598:	ldrdeq	r2, [r1], -ip
   1159c:	andeq	r2, r1, ip, ror #15
   115a0:	andeq	r2, r1, ip, lsl #16
   115a4:	andeq	r2, r1, r8, lsl r8
   115a8:	andeq	r1, r1, ip, asr #24
   115ac:	andeq	r3, r2, ip, lsl r0
   115b0:	andeq	r2, r1, r4, asr #19
   115b4:	andeq	r2, r1, r0, asr r8
   115b8:	andeq	r2, r1, r0, lsl #19
   115bc:	andeq	r2, r1, r0, ror r8
   115c0:	muleq	r1, r0, r8
   115c4:			; <UNDEFINED> instruction: 0x000128b0
   115c8:	ldrdeq	r2, [r1], -r0
   115cc:	strdeq	r2, [r1], -r4
   115d0:			; <UNDEFINED> instruction: 0x000129bc
   115d4:	andeq	r3, r2, r8
   115d8:	andeq	r1, r1, r4, lsl #24
   115dc:	andeq	r1, r1, ip, lsl ip
   115e0:	andeq	r1, r1, r4, lsr #23
   115e4:	ldrdeq	r1, [r1], -r4
   115e8:	andeq	r1, r1, r4, ror fp
   115ec:	andeq	r1, r1, r0, ror #24
   115f0:	andeq	r1, r1, ip, ror #23
   115f4:	andeq	r1, r1, r4, lsr ip
   115f8:			; <UNDEFINED> instruction: 0x00011bbc
   115fc:	andeq	r1, r1, ip, lsl #23
   11600:	andeq	r3, r2, r0, lsr #32
   11604:	andeq	r3, r2, r8, lsl r0
   11608:	andeq	r2, r1, r4, lsr r8
   1160c:	andeq	r3, r2, ip, lsr r0
   11610:	andeq	r1, r1, r4, lsl #30
   11614:	mov	r0, r4
   11618:	bl	10e28 <dcgettext@plt>
   1161c:	ldr	r3, [sp, #172]	; 0xac
   11620:	mov	r2, #5
   11624:	ldr	r1, [pc, #-112]	; 115bc <tcgetattr@plt+0x5fc>
   11628:	str	r3, [sp, #132]	; 0x84
   1162c:	vldr	s24, [sp, #176]	; 0xb0
   11630:	mov	r5, r0
   11634:	mov	r0, r4
   11638:	bl	10e28 <dcgettext@plt>
   1163c:	mov	r2, #5
   11640:	ldr	r1, [pc, #-136]	; 115c0 <tcgetattr@plt+0x600>
   11644:	vldr	s25, [sp, #188]	; 0xbc
   11648:	vldr	s26, [sp, #184]	; 0xb8
   1164c:	str	r0, [sp, #128]	; 0x80
   11650:	mov	r0, r4
   11654:	bl	10e28 <dcgettext@plt>
   11658:	mov	r2, #5
   1165c:	ldr	r1, [pc, #-160]	; 115c4 <tcgetattr@plt+0x604>
   11660:	vldr	s27, [sp, #196]	; 0xc4
   11664:	vldr	s28, [sp, #192]	; 0xc0
   11668:	mov	r9, r0
   1166c:	mov	r0, r4
   11670:	bl	10e28 <dcgettext@plt>
   11674:	vldr	s15, [sp, #168]	; 0xa8
   11678:	mov	r2, #5
   1167c:	ldr	r1, [pc, #-188]	; 115c8 <tcgetattr@plt+0x608>
   11680:	vcvt.f64.u32	d11, s15
   11684:	vldr	s15, [sp, #164]	; 0xa4
   11688:	vcvt.f64.u32	d10, s15
   1168c:	mov	sl, r0
   11690:	mov	r0, r4
   11694:	bl	10e28 <dcgettext@plt>
   11698:	vmul.f64	d4, d11, d9
   1169c:	ldr	r3, [sp, #128]	; 0x80
   116a0:	vcvt.f64.u32	d5, s27
   116a4:	str	r3, [sp, #8]
   116a8:	ldr	r3, [sp, #132]	; 0x84
   116ac:	vcvt.f64.u32	d7, s28
   116b0:	vcvt.f64.u32	d3, s25
   116b4:	vmov	s13, r3
   116b8:	vcvt.f64.u32	d1, s24
   116bc:	vcvt.f64.u32	d2, s26
   116c0:	vmul.f64	d5, d5, d9
   116c4:	str	sl, [sp, #56]	; 0x38
   116c8:	vcvt.f64.u32	d0, s13
   116cc:	vdiv.f64	d6, d4, d10
   116d0:	vmul.f64	d3, d3, d9
   116d4:	vstr	s28, [sp, #40]	; 0x28
   116d8:	vmul.f64	d1, d1, d9
   116dc:	vstr	s27, [sp, #36]	; 0x24
   116e0:	vmul.f64	d11, d11, d8
   116e4:	str	r9, [sp, #32]
   116e8:	vmul.f64	d10, d10, d8
   116ec:	vstr	s26, [sp, #16]
   116f0:	vstr	s25, [sp, #12]
   116f4:	mov	r1, r5
   116f8:	vmov	r2, s24
   116fc:	vstr	d11, [sp, #64]	; 0x40
   11700:	vstr	d10, [sp, #72]	; 0x48
   11704:	str	r0, [sp, #88]	; 0x58
   11708:	ldr	r0, [pc, #-324]	; 115cc <tcgetattr@plt+0x60c>
   1170c:	vdiv.f64	d4, d5, d7
   11710:	vldr	s15, [sp, #208]	; 0xd0
   11714:	vstr	d6, [sp, #80]	; 0x50
   11718:	vcvt.f64.u32	d7, s15
   1171c:	vmul.f64	d7, d7, d8
   11720:	vstr	d7, [sp, #112]	; 0x70
   11724:	vldr	s15, [sp, #200]	; 0xc8
   11728:	vcvt.f64.u32	d6, s15
   1172c:	vldr	s15, [sp, #204]	; 0xcc
   11730:	vdiv.f64	d5, d3, d2
   11734:	vcvt.f64.u32	d7, s15
   11738:	vstr	d4, [sp, #48]	; 0x30
   1173c:	vmul.f64	d6, d6, d8
   11740:	vmul.f64	d7, d7, d8
   11744:	vstr	d6, [sp, #104]	; 0x68
   11748:	vstr	d7, [sp, #96]	; 0x60
   1174c:	vdiv.f64	d7, d1, d0
   11750:	vstr	d5, [sp, #24]
   11754:	vstr	d7, [sp]
   11758:	bl	10f6c <printw@plt>
   1175c:	b	113ec <tcgetattr@plt+0x42c>
   11760:	bl	10e28 <dcgettext@plt>
   11764:	mov	r1, r0
   11768:	ldr	r0, [pc, #-416]	; 115d0 <tcgetattr@plt+0x610>
   1176c:	bl	10f6c <printw@plt>
   11770:	b	11434 <tcgetattr@plt+0x474>
   11774:	ldr	r0, [r8]
   11778:	bl	10e58 <wrefresh@plt>
   1177c:	add	r3, sp, #208	; 0xd0
   11780:	add	r2, sp, #336	; 0x150
   11784:	mov	r1, r4
   11788:	str	r1, [r3, #4]!
   1178c:	cmp	r2, r3
   11790:	bne	11788 <tcgetattr@plt+0x7c8>
   11794:	ldr	r5, [pc, #-456]	; 115d4 <tcgetattr@plt+0x614>
   11798:	ldr	ip, [sp, #212]	; 0xd4
   1179c:	add	r2, sp, #156	; 0x9c
   117a0:	ldr	r0, [r5]
   117a4:	mov	r3, #0
   117a8:	orr	ip, ip, #1
   117ac:	str	r2, [sp]
   117b0:	str	r1, [sp, #160]	; 0xa0
   117b4:	str	r0, [sp, #156]	; 0x9c
   117b8:	mov	r2, r3
   117bc:	add	r1, sp, #212	; 0xd4
   117c0:	mov	r0, #1
   117c4:	str	ip, [sp, #212]	; 0xd4
   117c8:	bl	10e1c <select@plt>
   117cc:	cmp	r0, #0
   117d0:	ble	11518 <tcgetattr@plt+0x558>
   117d4:	mov	r2, #1
   117d8:	add	r1, sp, #151	; 0x97
   117dc:	mov	r0, #0
   117e0:	bl	10de0 <read@plt>
   117e4:	cmp	r0, #1
   117e8:	bne	11870 <tcgetattr@plt+0x8b0>
   117ec:	bl	10eac <__ctype_toupper_loc@plt>
   117f0:	ldrb	r2, [sp, #151]	; 0x97
   117f4:	ldr	r3, [r0]
   117f8:	ldrb	r3, [r3, r2, lsl #2]
   117fc:	sub	r3, r3, #65	; 0x41
   11800:	cmp	r3, #21
   11804:	ldrls	pc, [pc, r3, lsl #2]
   11808:	b	11518 <tcgetattr@plt+0x558>
   1180c:	strdeq	r1, [r1], -r0
   11810:	andeq	r1, r1, r4, ror #17
   11814:	ldrdeq	r1, [r1], -r8
   11818:	andeq	r1, r1, r8, lsl r5
   1181c:	andeq	r1, r1, r8, lsl r5
   11820:	andeq	r1, r1, r8, lsl r5
   11824:	andeq	r1, r1, r8, lsl r5
   11828:	andeq	r1, r1, r8, lsl r5
   1182c:	andeq	r1, r1, r8, lsl r5
   11830:	andeq	r1, r1, r8, lsl r5
   11834:	andeq	r1, r1, r8, lsl r5
   11838:	andeq	r1, r1, ip, asr #17
   1183c:	andeq	r1, r1, r8, lsl r5
   11840:	andeq	r1, r1, r0, asr #17
   11844:			; <UNDEFINED> instruction: 0x000118b4
   11848:	andeq	r1, r1, r8, lsr #17
   1184c:	muleq	r1, ip, r8
   11850:	andeq	r1, r1, r8, lsl r5
   11854:	muleq	r1, r0, r8
   11858:	andeq	r1, r1, r8, lsl r5
   1185c:	andeq	r1, r1, r4, lsl #17
   11860:	andeq	r1, r1, r8, ror r8
   11864:	mov	r4, #1
   11868:	mov	r3, #0
   1186c:	str	r3, [sp, #152]	; 0x98
   11870:	mov	r6, r4
   11874:	b	11524 <tcgetattr@plt+0x564>
   11878:	ldr	r3, [pc, #-680]	; 115d8 <tcgetattr@plt+0x618>
   1187c:	str	r3, [fp]
   11880:	b	11518 <tcgetattr@plt+0x558>
   11884:	ldr	r3, [pc, #-688]	; 115dc <tcgetattr@plt+0x61c>
   11888:	str	r3, [fp]
   1188c:	b	11518 <tcgetattr@plt+0x558>
   11890:	ldr	r3, [pc, #-696]	; 115e0 <tcgetattr@plt+0x620>
   11894:	str	r3, [fp]
   11898:	b	11518 <tcgetattr@plt+0x558>
   1189c:	mov	r3, #0
   118a0:	str	r3, [r5]
   118a4:	b	11518 <tcgetattr@plt+0x558>
   118a8:	ldr	r3, [pc, #-716]	; 115e4 <tcgetattr@plt+0x624>
   118ac:	str	r3, [fp]
   118b0:	b	11518 <tcgetattr@plt+0x558>
   118b4:	ldr	r3, [pc, #-724]	; 115e8 <tcgetattr@plt+0x628>
   118b8:	str	r3, [fp]
   118bc:	b	11518 <tcgetattr@plt+0x558>
   118c0:	ldr	r3, [pc, #-732]	; 115ec <tcgetattr@plt+0x62c>
   118c4:	str	r3, [fp]
   118c8:	b	11518 <tcgetattr@plt+0x558>
   118cc:	ldr	r3, [pc, #-740]	; 115f0 <tcgetattr@plt+0x630>
   118d0:	str	r3, [fp]
   118d4:	b	11518 <tcgetattr@plt+0x558>
   118d8:	ldr	r3, [pc, #-748]	; 115f4 <tcgetattr@plt+0x634>
   118dc:	str	r3, [fp]
   118e0:	b	11518 <tcgetattr@plt+0x558>
   118e4:	ldr	r3, [pc, #-756]	; 115f8 <tcgetattr@plt+0x638>
   118e8:	str	r3, [fp]
   118ec:	b	11518 <tcgetattr@plt+0x558>
   118f0:	ldr	r3, [pc, #-764]	; 115fc <tcgetattr@plt+0x63c>
   118f4:	str	r3, [fp]
   118f8:	b	11518 <tcgetattr@plt+0x558>
   118fc:	ldr	r3, [pc, #-772]	; 11600 <tcgetattr@plt+0x640>
   11900:	ldr	r0, [r3]
   11904:	bl	11c70 <tcgetattr@plt+0xcb0>
   11908:	ldr	r3, [pc, #-780]	; 11604 <tcgetattr@plt+0x644>
   1190c:	ldr	r0, [r3]
   11910:	bl	11c70 <tcgetattr@plt+0xcb0>
   11914:	ldr	r1, [pc, #-784]	; 1160c <tcgetattr@plt+0x64c>
   11918:	mov	r0, r4
   1191c:	bl	10fc0 <tcgetattr@plt>
   11920:	cmn	r0, #1
   11924:	bne	111f8 <tcgetattr@plt+0x238>
   11928:	bl	10ee8 <__errno_location@plt>
   1192c:	mov	r2, #5
   11930:	ldr	r1, [pc, #-816]	; 11608 <tcgetattr@plt+0x648>
   11934:	ldr	r5, [r0]
   11938:	mov	r0, r4
   1193c:	bl	10e28 <dcgettext@plt>
   11940:	mov	r1, r5
   11944:	mov	r2, r0
   11948:	mov	r0, r4
   1194c:	bl	10e88 <error@plt>
   11950:	b	111f8 <tcgetattr@plt+0x238>
   11954:	ldr	r2, [pc, #-848]	; 1160c <tcgetattr@plt+0x64c>
   11958:	mov	r1, #2
   1195c:	mov	r0, #0
   11960:	bl	10e70 <tcsetattr@plt>
   11964:	b	11530 <tcgetattr@plt+0x570>
   11968:	bl	10e4c <initscr@plt>
   1196c:	ldrh	r1, [fp, #4]
   11970:	ldrh	r0, [fp, #6]
   11974:	bl	10dbc <resizeterm@plt>
   11978:	ldr	r1, [pc, #-880]	; 11610 <tcgetattr@plt+0x650>
   1197c:	mov	r0, #28
   11980:	bl	10e04 <signal@plt>
   11984:	b	11214 <tcgetattr@plt+0x254>
   11988:	bl	10e34 <__stack_chk_fail@plt>
   1198c:	mov	fp, #0
   11990:	mov	lr, #0
   11994:	pop	{r1}		; (ldr r1, [sp], #4)
   11998:	mov	r2, sp
   1199c:	push	{r2}		; (str r2, [sp, #-4]!)
   119a0:	push	{r0}		; (str r0, [sp, #-4]!)
   119a4:	ldr	ip, [pc, #16]	; 119bc <tcgetattr@plt+0x9fc>
   119a8:	push	{ip}		; (str ip, [sp, #-4]!)
   119ac:	ldr	r0, [pc, #12]	; 119c0 <tcgetattr@plt+0xa00>
   119b0:	ldr	r3, [pc, #12]	; 119c4 <tcgetattr@plt+0xa04>
   119b4:	bl	10ea0 <__libc_start_main@plt>
   119b8:	bl	10fa8 <abort@plt>
   119bc:	andeq	r2, r1, ip, lsl r4
   119c0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   119c4:			; <UNDEFINED> instruction: 0x000123bc
   119c8:	ldr	r3, [pc, #20]	; 119e4 <tcgetattr@plt+0xa24>
   119cc:	ldr	r2, [pc, #20]	; 119e8 <tcgetattr@plt+0xa28>
   119d0:	add	r3, pc, r3
   119d4:	ldr	r2, [r3, r2]
   119d8:	cmp	r2, #0
   119dc:	bxeq	lr
   119e0:	b	10eb8 <__gmon_start__@plt>
   119e4:	andeq	r1, r1, r4, ror #10
   119e8:	strheq	r0, [r0], -ip
   119ec:	ldr	r0, [pc, #24]	; 11a0c <tcgetattr@plt+0xa4c>
   119f0:	ldr	r3, [pc, #24]	; 11a10 <tcgetattr@plt+0xa50>
   119f4:	cmp	r3, r0
   119f8:	bxeq	lr
   119fc:	ldr	r3, [pc, #16]	; 11a14 <tcgetattr@plt+0xa54>
   11a00:	cmp	r3, #0
   11a04:	bxeq	lr
   11a08:	bx	r3
   11a0c:	andeq	r3, r2, ip
   11a10:	andeq	r3, r2, ip
   11a14:	andeq	r0, r0, r0
   11a18:	ldr	r0, [pc, #36]	; 11a44 <tcgetattr@plt+0xa84>
   11a1c:	ldr	r1, [pc, #36]	; 11a48 <tcgetattr@plt+0xa88>
   11a20:	sub	r1, r1, r0
   11a24:	asr	r1, r1, #2
   11a28:	add	r1, r1, r1, lsr #31
   11a2c:	asrs	r1, r1, #1
   11a30:	bxeq	lr
   11a34:	ldr	r3, [pc, #16]	; 11a4c <tcgetattr@plt+0xa8c>
   11a38:	cmp	r3, #0
   11a3c:	bxeq	lr
   11a40:	bx	r3
   11a44:	andeq	r3, r2, ip
   11a48:	andeq	r3, r2, ip
   11a4c:	andeq	r0, r0, r0
   11a50:	push	{r4, lr}
   11a54:	ldr	r4, [pc, #24]	; 11a74 <tcgetattr@plt+0xab4>
   11a58:	ldrb	r3, [r4]
   11a5c:	cmp	r3, #0
   11a60:	popne	{r4, pc}
   11a64:	bl	119ec <tcgetattr@plt+0xa2c>
   11a68:	mov	r3, #1
   11a6c:	strb	r3, [r4]
   11a70:	pop	{r4, pc}
   11a74:	andeq	r3, r2, ip, lsr #32
   11a78:	b	11a18 <tcgetattr@plt+0xa58>
   11a7c:	push	{r4, r5, r6, r7, r8, lr}
   11a80:	sub	sp, sp, #176	; 0xb0
   11a84:	ldr	r7, [pc, #224]	; 11b6c <tcgetattr@plt+0xbac>
   11a88:	cmp	r0, #0
   11a8c:	ldr	r3, [r7]
   11a90:	str	r3, [sp, #172]	; 0xac
   11a94:	beq	11aac <tcgetattr@plt+0xaec>
   11a98:	ldr	r3, [r0, #132]	; 0x84
   11a9c:	cmp	r3, #0
   11aa0:	movne	r2, r3
   11aa4:	movne	r1, r0
   11aa8:	bne	11ac8 <tcgetattr@plt+0xb08>
   11aac:	ldr	r2, [sp, #172]	; 0xac
   11ab0:	ldr	r3, [r7]
   11ab4:	cmp	r2, r3
   11ab8:	bne	11b68 <tcgetattr@plt+0xba8>
   11abc:	add	sp, sp, #176	; 0xb0
   11ac0:	pop	{r4, r5, r6, r7, r8, pc}
   11ac4:	mov	r2, r5
   11ac8:	ldr	r3, [r3, #132]	; 0x84
   11acc:	cmp	r3, #0
   11ad0:	beq	11b5c <tcgetattr@plt+0xb9c>
   11ad4:	ldr	r3, [r3, #132]	; 0x84
   11ad8:	ldr	r5, [r2, #132]	; 0x84
   11adc:	cmp	r3, #0
   11ae0:	mov	r1, r2
   11ae4:	bne	11ac4 <tcgetattr@plt+0xb04>
   11ae8:	mov	r3, #0
   11aec:	str	r3, [r2, #132]	; 0x84
   11af0:	bl	11a7c <tcgetattr@plt+0xabc>
   11af4:	mov	r6, sp
   11af8:	ldr	r8, [pc, #112]	; 11b70 <tcgetattr@plt+0xbb0>
   11afc:	mov	r4, r0
   11b00:	mov	r0, r5
   11b04:	bl	11a7c <tcgetattr@plt+0xabc>
   11b08:	mov	r5, r0
   11b0c:	b	11b3c <tcgetattr@plt+0xb7c>
   11b10:	mov	r1, r5
   11b14:	mov	r0, r4
   11b18:	ldr	r3, [r8]
   11b1c:	blx	r3
   11b20:	cmp	r0, #0
   11b24:	strne	r4, [r6, #132]	; 0x84
   11b28:	streq	r5, [r6, #132]	; 0x84
   11b2c:	movne	r6, r4
   11b30:	moveq	r6, r5
   11b34:	ldrne	r4, [r4, #132]	; 0x84
   11b38:	ldreq	r5, [r5, #132]	; 0x84
   11b3c:	cmp	r4, #0
   11b40:	cmpne	r5, #0
   11b44:	bne	11b10 <tcgetattr@plt+0xb50>
   11b48:	cmp	r4, #0
   11b4c:	moveq	r4, r5
   11b50:	str	r4, [r6, #132]	; 0x84
   11b54:	ldr	r0, [sp, #132]	; 0x84
   11b58:	b	11aac <tcgetattr@plt+0xaec>
   11b5c:	mov	r5, r2
   11b60:	mov	r2, r1
   11b64:	b	11ae8 <tcgetattr@plt+0xb28>
   11b68:	bl	10e34 <__stack_chk_fail@plt>
   11b6c:	andeq	r2, r2, r8, lsl lr
   11b70:	andeq	r3, r2, r0, lsr r0
   11b74:	ldr	r0, [r0, #140]	; 0x8c
   11b78:	ldr	r3, [r1, #140]	; 0x8c
   11b7c:	cmp	r0, r3
   11b80:	movls	r0, #0
   11b84:	movhi	r0, #1
   11b88:	bx	lr
   11b8c:	ldr	r0, [r0, #144]	; 0x90
   11b90:	ldr	r3, [r1, #144]	; 0x90
   11b94:	cmp	r0, r3
   11b98:	movls	r0, #0
   11b9c:	movhi	r0, #1
   11ba0:	bx	lr
   11ba4:	ldr	r0, [r0, #148]	; 0x94
   11ba8:	ldr	r3, [r1, #148]	; 0x94
   11bac:	cmp	r0, r3
   11bb0:	movls	r0, #0
   11bb4:	movhi	r0, #1
   11bb8:	bx	lr
   11bbc:	ldr	r0, [r0, #152]	; 0x98
   11bc0:	ldr	r3, [r1, #152]	; 0x98
   11bc4:	cmp	r0, r3
   11bc8:	movls	r0, #0
   11bcc:	movhi	r0, #1
   11bd0:	bx	lr
   11bd4:	ldr	r0, [r0, #156]	; 0x9c
   11bd8:	ldr	r3, [r1, #156]	; 0x9c
   11bdc:	cmp	r0, r3
   11be0:	movls	r0, #0
   11be4:	movhi	r0, #1
   11be8:	bx	lr
   11bec:	ldr	r0, [r0, #160]	; 0xa0
   11bf0:	ldr	r3, [r1, #160]	; 0xa0
   11bf4:	cmp	r0, r3
   11bf8:	movls	r0, #0
   11bfc:	movhi	r0, #1
   11c00:	bx	lr
   11c04:	ldr	r0, [r0, #164]	; 0xa4
   11c08:	ldr	r3, [r1, #164]	; 0xa4
   11c0c:	cmp	r0, r3
   11c10:	movls	r0, #0
   11c14:	movhi	r0, #1
   11c18:	bx	lr
   11c1c:	ldr	r0, [r0, #168]	; 0xa8
   11c20:	ldr	r3, [r1, #168]	; 0xa8
   11c24:	cmp	r0, r3
   11c28:	movls	r0, #0
   11c2c:	movhi	r0, #1
   11c30:	bx	lr
   11c34:	ldr	r0, [r0, #136]	; 0x88
   11c38:	ldr	r3, [r1, #136]	; 0x88
   11c3c:	cmp	r0, r3
   11c40:	movls	r0, #0
   11c44:	movhi	r0, #1
   11c48:	bx	lr
   11c4c:	ldr	r3, [pc, #8]	; 11c5c <tcgetattr@plt+0xc9c>
   11c50:	mov	r2, #0
   11c54:	str	r2, [r3]
   11c58:	bx	lr
   11c5c:	andeq	r3, r2, r8
   11c60:	push	{r4, lr}
   11c64:	bl	10dc8 <strcmp@plt>
   11c68:	lsr	r0, r0, #31
   11c6c:	pop	{r4, pc}
   11c70:	push	{r4, lr}
   11c74:	mov	r2, #5
   11c78:	mov	r4, r0
   11c7c:	ldr	r1, [pc, #544]	; 11ea4 <tcgetattr@plt+0xee4>
   11c80:	mov	r0, #0
   11c84:	bl	10e28 <dcgettext@plt>
   11c88:	mov	r1, r4
   11c8c:	bl	10f9c <fputs@plt>
   11c90:	mov	r2, #5
   11c94:	ldr	r1, [pc, #524]	; 11ea8 <tcgetattr@plt+0xee8>
   11c98:	mov	r0, #0
   11c9c:	bl	10e28 <dcgettext@plt>
   11ca0:	ldr	r3, [pc, #516]	; 11eac <tcgetattr@plt+0xeec>
   11ca4:	mov	r1, #1
   11ca8:	ldr	r3, [r3]
   11cac:	mov	r2, r0
   11cb0:	mov	r0, r4
   11cb4:	bl	10f30 <__fprintf_chk@plt>
   11cb8:	mov	r2, #5
   11cbc:	ldr	r1, [pc, #492]	; 11eb0 <tcgetattr@plt+0xef0>
   11cc0:	mov	r0, #0
   11cc4:	bl	10e28 <dcgettext@plt>
   11cc8:	mov	r1, r4
   11ccc:	bl	10f9c <fputs@plt>
   11cd0:	mov	r2, #5
   11cd4:	ldr	r1, [pc, #472]	; 11eb4 <tcgetattr@plt+0xef4>
   11cd8:	mov	r0, #0
   11cdc:	bl	10e28 <dcgettext@plt>
   11ce0:	mov	r1, r4
   11ce4:	bl	10f9c <fputs@plt>
   11ce8:	mov	r2, #5
   11cec:	ldr	r1, [pc, #452]	; 11eb8 <tcgetattr@plt+0xef8>
   11cf0:	mov	r0, #0
   11cf4:	bl	10e28 <dcgettext@plt>
   11cf8:	mov	r1, r4
   11cfc:	bl	10f9c <fputs@plt>
   11d00:	mov	r2, #5
   11d04:	ldr	r1, [pc, #432]	; 11ebc <tcgetattr@plt+0xefc>
   11d08:	mov	r0, #0
   11d0c:	bl	10e28 <dcgettext@plt>
   11d10:	mov	r1, r4
   11d14:	bl	10f9c <fputs@plt>
   11d18:	mov	r2, #5
   11d1c:	ldr	r1, [pc, #412]	; 11ec0 <tcgetattr@plt+0xf00>
   11d20:	mov	r0, #0
   11d24:	bl	10e28 <dcgettext@plt>
   11d28:	mov	r1, r4
   11d2c:	bl	10f9c <fputs@plt>
   11d30:	mov	r2, #5
   11d34:	ldr	r1, [pc, #392]	; 11ec4 <tcgetattr@plt+0xf04>
   11d38:	mov	r0, #0
   11d3c:	bl	10e28 <dcgettext@plt>
   11d40:	mov	r1, r4
   11d44:	bl	10f9c <fputs@plt>
   11d48:	mov	r2, #5
   11d4c:	ldr	r1, [pc, #372]	; 11ec8 <tcgetattr@plt+0xf08>
   11d50:	mov	r0, #0
   11d54:	bl	10e28 <dcgettext@plt>
   11d58:	mov	r1, r4
   11d5c:	bl	10f9c <fputs@plt>
   11d60:	mov	r2, #5
   11d64:	ldr	r1, [pc, #352]	; 11ecc <tcgetattr@plt+0xf0c>
   11d68:	mov	r0, #0
   11d6c:	bl	10e28 <dcgettext@plt>
   11d70:	mov	r1, r4
   11d74:	bl	10f9c <fputs@plt>
   11d78:	mov	r2, #5
   11d7c:	ldr	r1, [pc, #332]	; 11ed0 <tcgetattr@plt+0xf10>
   11d80:	mov	r0, #0
   11d84:	bl	10e28 <dcgettext@plt>
   11d88:	mov	r1, r4
   11d8c:	bl	10f9c <fputs@plt>
   11d90:	mov	r2, #5
   11d94:	ldr	r1, [pc, #312]	; 11ed4 <tcgetattr@plt+0xf14>
   11d98:	mov	r0, #0
   11d9c:	bl	10e28 <dcgettext@plt>
   11da0:	mov	r1, r4
   11da4:	bl	10f9c <fputs@plt>
   11da8:	mov	r2, #5
   11dac:	ldr	r1, [pc, #292]	; 11ed8 <tcgetattr@plt+0xf18>
   11db0:	mov	r0, #0
   11db4:	bl	10e28 <dcgettext@plt>
   11db8:	mov	r1, r4
   11dbc:	bl	10f9c <fputs@plt>
   11dc0:	mov	r2, #5
   11dc4:	ldr	r1, [pc, #272]	; 11edc <tcgetattr@plt+0xf1c>
   11dc8:	mov	r0, #0
   11dcc:	bl	10e28 <dcgettext@plt>
   11dd0:	mov	r1, r4
   11dd4:	bl	10f9c <fputs@plt>
   11dd8:	mov	r2, #5
   11ddc:	ldr	r1, [pc, #252]	; 11ee0 <tcgetattr@plt+0xf20>
   11de0:	mov	r0, #0
   11de4:	bl	10e28 <dcgettext@plt>
   11de8:	mov	r1, r4
   11dec:	bl	10f9c <fputs@plt>
   11df0:	mov	r2, #5
   11df4:	ldr	r1, [pc, #232]	; 11ee4 <tcgetattr@plt+0xf24>
   11df8:	mov	r0, #0
   11dfc:	bl	10e28 <dcgettext@plt>
   11e00:	mov	r1, r4
   11e04:	bl	10f9c <fputs@plt>
   11e08:	mov	r2, #5
   11e0c:	ldr	r1, [pc, #212]	; 11ee8 <tcgetattr@plt+0xf28>
   11e10:	mov	r0, #0
   11e14:	bl	10e28 <dcgettext@plt>
   11e18:	mov	r1, r4
   11e1c:	bl	10f9c <fputs@plt>
   11e20:	mov	r2, #5
   11e24:	ldr	r1, [pc, #192]	; 11eec <tcgetattr@plt+0xf2c>
   11e28:	mov	r0, #0
   11e2c:	bl	10e28 <dcgettext@plt>
   11e30:	mov	r1, r4
   11e34:	bl	10f9c <fputs@plt>
   11e38:	mov	r2, #5
   11e3c:	ldr	r1, [pc, #172]	; 11ef0 <tcgetattr@plt+0xf30>
   11e40:	mov	r0, #0
   11e44:	bl	10e28 <dcgettext@plt>
   11e48:	mov	r1, r4
   11e4c:	bl	10f9c <fputs@plt>
   11e50:	mov	r2, #5
   11e54:	ldr	r1, [pc, #152]	; 11ef4 <tcgetattr@plt+0xf34>
   11e58:	mov	r0, #0
   11e5c:	bl	10e28 <dcgettext@plt>
   11e60:	mov	r1, r4
   11e64:	bl	10f9c <fputs@plt>
   11e68:	mov	r2, #5
   11e6c:	ldr	r1, [pc, #132]	; 11ef8 <tcgetattr@plt+0xf38>
   11e70:	mov	r0, #0
   11e74:	bl	10e28 <dcgettext@plt>
   11e78:	ldr	r3, [pc, #124]	; 11efc <tcgetattr@plt+0xf3c>
   11e7c:	mov	r1, #1
   11e80:	mov	r2, r0
   11e84:	mov	r0, r4
   11e88:	bl	10f30 <__fprintf_chk@plt>
   11e8c:	ldr	r3, [pc, #108]	; 11f00 <tcgetattr@plt+0xf40>
   11e90:	ldr	r0, [r3]
   11e94:	sub	r0, r0, r4
   11e98:	clz	r0, r0
   11e9c:	lsr	r0, r0, #5
   11ea0:	bl	10edc <exit@plt>
   11ea4:	strdeq	r2, [r1], -ip
   11ea8:	andeq	r2, r1, r8, lsl #10
   11eac:	andeq	r3, r2, r0, lsl r0
   11eb0:	andeq	r2, r1, r8, lsl r5
   11eb4:	andeq	r2, r1, r4, lsr #10
   11eb8:	andeq	r2, r1, r8, asr #10
   11ebc:	andeq	r2, r1, ip, ror r5
   11ec0:	andeq	r2, r1, ip, ror r9
   11ec4:	andeq	r2, r1, r4, asr #11
   11ec8:	strdeq	r2, [r1], -r0
   11ecc:	andeq	r2, r1, r8, lsr #12
   11ed0:	andeq	r2, r1, r4, asr r6
   11ed4:	andeq	r2, r1, ip, ror r6
   11ed8:	muleq	r1, ip, r6
   11edc:			; <UNDEFINED> instruction: 0x000126b4
   11ee0:	ldrdeq	r2, [r1], -r4
   11ee4:	strdeq	r2, [r1], -r8
   11ee8:	andeq	r2, r1, ip, lsl #14
   11eec:	andeq	r2, r1, ip, lsr r7
   11ef0:	andeq	r2, r1, r8, asr r7
   11ef4:	andeq	r2, r1, r4, ror r7
   11ef8:	muleq	r1, r4, r7
   11efc:			; <UNDEFINED> instruction: 0x000127b0
   11f00:	andeq	r3, r2, r8, lsl r0
   11f04:	push	{r4, lr}
   11f08:	sub	sp, sp, #16
   11f0c:	ldr	r4, [pc, #120]	; 11f8c <tcgetattr@plt+0xfcc>
   11f10:	add	r2, sp, #4
   11f14:	ldr	r1, [pc, #116]	; 11f90 <tcgetattr@plt+0xfd0>
   11f18:	ldr	r3, [r4]
   11f1c:	mov	r0, #1
   11f20:	str	r3, [sp, #12]
   11f24:	bl	10e64 <ioctl@plt>
   11f28:	ldr	r3, [pc, #100]	; 11f94 <tcgetattr@plt+0xfd4>
   11f2c:	cmn	r0, #1
   11f30:	beq	11f40 <tcgetattr@plt+0xf80>
   11f34:	ldrh	r2, [sp, #4]
   11f38:	cmp	r2, #10
   11f3c:	bhi	11f78 <tcgetattr@plt+0xfb8>
   11f40:	mov	r1, #80	; 0x50
   11f44:	mov	r2, #24
   11f48:	strh	r1, [r3, #4]
   11f4c:	strh	r2, [r3, #6]
   11f50:	ldr	r2, [r3, #8]
   11f54:	cmp	r2, #0
   11f58:	mvnne	r2, #0
   11f5c:	strhne	r2, [r3, #6]
   11f60:	ldr	r2, [sp, #12]
   11f64:	ldr	r3, [r4]
   11f68:	cmp	r2, r3
   11f6c:	bne	11f88 <tcgetattr@plt+0xfc8>
   11f70:	add	sp, sp, #16
   11f74:	pop	{r4, pc}
   11f78:	ldrh	r1, [sp, #6]
   11f7c:	strh	r2, [r3, #6]
   11f80:	strh	r1, [r3, #4]
   11f84:	b	11f50 <tcgetattr@plt+0xf90>
   11f88:	bl	10e34 <__stack_chk_fail@plt>
   11f8c:	andeq	r2, r2, r8, lsl lr
   11f90:	andeq	r5, r0, r3, lsl r4
   11f94:	andeq	r3, r2, r0, lsr r0
   11f98:	push	{r4, r5, r6, r7, r8, lr}
   11f9c:	sub	sp, sp, #16
   11fa0:	ldr	r7, [pc, #160]	; 12048 <tcgetattr@plt+0x1088>
   11fa4:	mov	r6, #0
   11fa8:	mov	r4, r0
   11fac:	ldr	r3, [r7]
   11fb0:	mov	r8, r1
   11fb4:	str	r3, [sp, #12]
   11fb8:	str	r6, [sp, #8]
   11fbc:	bl	10ee8 <__errno_location@plt>
   11fc0:	cmp	r4, r6
   11fc4:	mov	r5, r0
   11fc8:	beq	1202c <tcgetattr@plt+0x106c>
   11fcc:	ldrb	r3, [r4]
   11fd0:	cmp	r3, #0
   11fd4:	beq	1202c <tcgetattr@plt+0x106c>
   11fd8:	str	r6, [r0]
   11fdc:	add	r1, sp, #8
   11fe0:	mov	r2, #10
   11fe4:	mov	r0, r4
   11fe8:	bl	10dd4 <strtol@plt>
   11fec:	ldr	r1, [r5]
   11ff0:	cmp	r1, #0
   11ff4:	bne	12030 <tcgetattr@plt+0x1070>
   11ff8:	ldr	r3, [sp, #8]
   11ffc:	cmp	r3, r4
   12000:	cmpne	r3, #0
   12004:	beq	12030 <tcgetattr@plt+0x1070>
   12008:	ldrb	r3, [r3]
   1200c:	cmp	r3, #0
   12010:	bne	12030 <tcgetattr@plt+0x1070>
   12014:	ldr	r2, [sp, #12]
   12018:	ldr	r3, [r7]
   1201c:	cmp	r2, r3
   12020:	bne	12044 <tcgetattr@plt+0x1084>
   12024:	add	sp, sp, #16
   12028:	pop	{r4, r5, r6, r7, r8, pc}
   1202c:	ldr	r1, [r5]
   12030:	str	r4, [sp]
   12034:	mov	r3, r8
   12038:	ldr	r2, [pc, #12]	; 1204c <tcgetattr@plt+0x108c>
   1203c:	mov	r0, #1
   12040:	bl	10e88 <error@plt>
   12044:	bl	10e34 <__stack_chk_fail@plt>
   12048:	andeq	r2, r2, r8, lsl lr
   1204c:	andeq	r2, r1, r0, lsl sl
   12050:	push	{r4, r5, r6, r7, r8, lr}
   12054:	sub	sp, sp, #16
   12058:	ldr	r7, [pc, #156]	; 120fc <tcgetattr@plt+0x113c>
   1205c:	mov	r6, #0
   12060:	mov	r4, r0
   12064:	ldr	r3, [r7]
   12068:	mov	r8, r1
   1206c:	str	r3, [sp, #12]
   12070:	str	r6, [sp, #8]
   12074:	bl	10ee8 <__errno_location@plt>
   12078:	cmp	r4, r6
   1207c:	mov	r5, r0
   12080:	beq	120e0 <tcgetattr@plt+0x1120>
   12084:	ldrb	r3, [r4]
   12088:	cmp	r3, #0
   1208c:	beq	120e0 <tcgetattr@plt+0x1120>
   12090:	str	r6, [r0]
   12094:	add	r1, sp, #8
   12098:	mov	r0, r4
   1209c:	bl	10f24 <strtod@plt>
   120a0:	ldr	r1, [r5]
   120a4:	cmp	r1, #0
   120a8:	bne	120e4 <tcgetattr@plt+0x1124>
   120ac:	ldr	r3, [sp, #8]
   120b0:	cmp	r3, r4
   120b4:	cmpne	r3, #0
   120b8:	beq	120e4 <tcgetattr@plt+0x1124>
   120bc:	ldrb	r3, [r3]
   120c0:	cmp	r3, #0
   120c4:	bne	120e4 <tcgetattr@plt+0x1124>
   120c8:	ldr	r2, [sp, #12]
   120cc:	ldr	r3, [r7]
   120d0:	cmp	r2, r3
   120d4:	bne	120f8 <tcgetattr@plt+0x1138>
   120d8:	add	sp, sp, #16
   120dc:	pop	{r4, r5, r6, r7, r8, pc}
   120e0:	ldr	r1, [r5]
   120e4:	str	r4, [sp]
   120e8:	mov	r3, r8
   120ec:	ldr	r2, [pc, #12]	; 12100 <tcgetattr@plt+0x1140>
   120f0:	mov	r0, #1
   120f4:	bl	10e88 <error@plt>
   120f8:	bl	10e34 <__stack_chk_fail@plt>
   120fc:	andeq	r2, r2, r8, lsl lr
   12100:	andeq	r2, r1, r0, lsl sl
   12104:	push	{r4, r5, r6, lr}
   12108:	subs	r5, r0, #0
   1210c:	sub	sp, sp, #8
   12110:	mov	r6, r1
   12114:	beq	12258 <tcgetattr@plt+0x1298>
   12118:	ldrb	r4, [r5]
   1211c:	cmp	r4, #0
   12120:	beq	12258 <tcgetattr@plt+0x1298>
   12124:	bl	10ed0 <__ctype_b_loc@plt>
   12128:	mov	r3, r5
   1212c:	ldr	r2, [r0]
   12130:	b	12138 <tcgetattr@plt+0x1178>
   12134:	ldrb	r4, [r3, #1]!
   12138:	lsl	r1, r4, #1
   1213c:	ldrh	r1, [r2, r1]
   12140:	ands	ip, r1, #8192	; 0x2000
   12144:	bne	12134 <tcgetattr@plt+0x1174>
   12148:	cmp	r4, #45	; 0x2d
   1214c:	beq	12234 <tcgetattr@plt+0x1274>
   12150:	cmp	r4, #43	; 0x2b
   12154:	ldrbeq	r4, [r3, #1]
   12158:	addeq	r3, r3, #1
   1215c:	lsleq	r1, r4, #1
   12160:	ldrheq	r1, [r2, r1]
   12164:	tst	r1, #2048	; 0x800
   12168:	beq	12250 <tcgetattr@plt+0x1290>
   1216c:	vldr	d7, [pc, #284]	; 12290 <tcgetattr@plt+0x12d0>
   12170:	vldr	d6, [pc, #288]	; 12298 <tcgetattr@plt+0x12d8>
   12174:	mov	r0, r3
   12178:	ldrb	r1, [r0, #1]!
   1217c:	vmul.f64	d7, d7, d6
   12180:	lsl	r1, r1, #1
   12184:	ldrh	r1, [r2, r1]
   12188:	tst	r1, #2048	; 0x800
   1218c:	bne	12178 <tcgetattr@plt+0x11b8>
   12190:	vldr	d0, [pc, #264]	; 122a0 <tcgetattr@plt+0x12e0>
   12194:	vldr	d5, [pc, #252]	; 12298 <tcgetattr@plt+0x12d8>
   12198:	sub	r1, r4, #48	; 0x30
   1219c:	ldrb	r4, [r3, #1]!
   121a0:	vmov	s12, r1
   121a4:	lsl	r1, r4, #1
   121a8:	vcvt.f64.s32	d6, s12
   121ac:	ldrh	r1, [r2, r1]
   121b0:	tst	r1, #2048	; 0x800
   121b4:	vmla.f64	d0, d6, d7
   121b8:	vdiv.f64	d7, d7, d5
   121bc:	bne	12198 <tcgetattr@plt+0x11d8>
   121c0:	cmp	r4, #0
   121c4:	beq	12224 <tcgetattr@plt+0x1264>
   121c8:	and	r4, r4, #253	; 0xfd
   121cc:	cmp	r4, #44	; 0x2c
   121d0:	bne	12274 <tcgetattr@plt+0x12b4>
   121d4:	ldrb	r1, [r3, #1]
   121d8:	add	r3, r3, #1
   121dc:	lsl	r0, r1, #1
   121e0:	ldrh	r0, [r2, r0]
   121e4:	tst	r0, #2048	; 0x800
   121e8:	beq	1221c <tcgetattr@plt+0x125c>
   121ec:	vldr	d6, [pc, #156]	; 12290 <tcgetattr@plt+0x12d0>
   121f0:	vldr	d5, [pc, #160]	; 12298 <tcgetattr@plt+0x12d8>
   121f4:	sub	r1, r1, #48	; 0x30
   121f8:	vmov	s14, r1
   121fc:	ldrb	r1, [r3, #1]!
   12200:	vcvt.f64.s32	d7, s14
   12204:	lsl	r0, r1, #1
   12208:	ldrh	r0, [r2, r0]
   1220c:	tst	r0, #2048	; 0x800
   12210:	vmla.f64	d0, d7, d6
   12214:	vdiv.f64	d6, d6, d5
   12218:	bne	121f4 <tcgetattr@plt+0x1234>
   1221c:	cmp	r1, #0
   12220:	bne	12258 <tcgetattr@plt+0x1298>
   12224:	cmp	ip, #0
   12228:	vnegne.f64	d0, d0
   1222c:	add	sp, sp, #8
   12230:	pop	{r4, r5, r6, pc}
   12234:	ldrb	r4, [r3, #1]
   12238:	mov	ip, #1
   1223c:	add	r3, r3, ip
   12240:	lsl	r1, r4, ip
   12244:	ldrh	r1, [r2, r1]
   12248:	tst	r1, #2048	; 0x800
   1224c:	bne	1216c <tcgetattr@plt+0x11ac>
   12250:	vldr	d0, [pc, #72]	; 122a0 <tcgetattr@plt+0x12e0>
   12254:	b	121c0 <tcgetattr@plt+0x1200>
   12258:	bl	10ee8 <__errno_location@plt>
   1225c:	mov	r3, r6
   12260:	ldr	r2, [pc, #64]	; 122a8 <tcgetattr@plt+0x12e8>
   12264:	ldr	r1, [r0]
   12268:	str	r5, [sp]
   1226c:	mov	r0, #1
   12270:	bl	10e88 <error@plt>
   12274:	str	r5, [sp]
   12278:	mov	r3, r6
   1227c:	ldr	r2, [pc, #36]	; 122a8 <tcgetattr@plt+0x12e8>
   12280:	mov	r1, #22
   12284:	mov	r0, #1
   12288:	bl	10e88 <error@plt>
   1228c:	nop			; (mov r0, r0)
   12290:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   12294:	svccc	0x00b99999
   12298:	andeq	r0, r0, r0
   1229c:	eormi	r0, r4, r0
	...
   122a8:	andeq	r2, r1, r0, lsl sl
   122ac:	push	{r4, r5, r6, lr}
   122b0:	mov	r4, r0
   122b4:	bl	10e7c <__fpending@plt>
   122b8:	mov	r6, r0
   122bc:	mov	r0, r4
   122c0:	bl	10dec <ferror@plt>
   122c4:	mov	r5, r0
   122c8:	mov	r0, r4
   122cc:	bl	10f3c <fclose@plt>
   122d0:	cmp	r5, #0
   122d4:	mov	r4, r0
   122d8:	bne	122f8 <tcgetattr@plt+0x1338>
   122dc:	cmp	r0, #0
   122e0:	beq	122f0 <tcgetattr@plt+0x1330>
   122e4:	cmp	r6, #0
   122e8:	beq	12320 <tcgetattr@plt+0x1360>
   122ec:	mvn	r4, #0
   122f0:	mov	r0, r4
   122f4:	pop	{r4, r5, r6, pc}
   122f8:	cmp	r0, #0
   122fc:	bne	122ec <tcgetattr@plt+0x132c>
   12300:	bl	10ee8 <__errno_location@plt>
   12304:	ldr	r3, [r0]
   12308:	cmp	r3, #32
   1230c:	beq	122ec <tcgetattr@plt+0x132c>
   12310:	str	r4, [r0]
   12314:	mvn	r4, #0
   12318:	mov	r0, r4
   1231c:	pop	{r4, r5, r6, pc}
   12320:	bl	10ee8 <__errno_location@plt>
   12324:	ldr	r4, [r0]
   12328:	subs	r4, r4, #9
   1232c:	mvnne	r4, #0
   12330:	mov	r0, r4
   12334:	pop	{r4, r5, r6, pc}
   12338:	ldr	r3, [pc, #108]	; 123ac <tcgetattr@plt+0x13ec>
   1233c:	push	{r4, lr}
   12340:	ldr	r0, [r3]
   12344:	bl	122ac <tcgetattr@plt+0x12ec>
   12348:	cmp	r0, #0
   1234c:	beq	12364 <tcgetattr@plt+0x13a4>
   12350:	bl	10ee8 <__errno_location@plt>
   12354:	ldr	r3, [r0]
   12358:	mov	r4, r0
   1235c:	cmp	r3, #32
   12360:	bne	12380 <tcgetattr@plt+0x13c0>
   12364:	ldr	r3, [pc, #68]	; 123b0 <tcgetattr@plt+0x13f0>
   12368:	ldr	r0, [r3]
   1236c:	bl	122ac <tcgetattr@plt+0x12ec>
   12370:	cmp	r0, #0
   12374:	popeq	{r4, pc}
   12378:	mov	r0, #1
   1237c:	bl	10df8 <_exit@plt>
   12380:	mov	r2, #5
   12384:	ldr	r1, [pc, #40]	; 123b4 <tcgetattr@plt+0x13f4>
   12388:	mov	r0, #0
   1238c:	bl	10e28 <dcgettext@plt>
   12390:	ldr	r1, [r4]
   12394:	ldr	r2, [pc, #28]	; 123b8 <tcgetattr@plt+0x13f8>
   12398:	mov	r3, r0
   1239c:	mov	r0, #0
   123a0:	bl	10e88 <error@plt>
   123a4:	mov	r0, #1
   123a8:	bl	10df8 <_exit@plt>
   123ac:	andeq	r3, r2, r0, lsr #32
   123b0:	andeq	r3, r2, r8, lsl r0
   123b4:	andeq	r2, r1, ip, lsl sl
   123b8:	andeq	r2, r1, r8, lsr #20
   123bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   123c0:	mov	r7, r0
   123c4:	ldr	r6, [pc, #72]	; 12414 <tcgetattr@plt+0x1454>
   123c8:	ldr	r5, [pc, #72]	; 12418 <tcgetattr@plt+0x1458>
   123cc:	add	r6, pc, r6
   123d0:	add	r5, pc, r5
   123d4:	sub	r6, r6, r5
   123d8:	mov	r8, r1
   123dc:	mov	r9, r2
   123e0:	bl	10d9c <_init@@Base>
   123e4:	asrs	r6, r6, #2
   123e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   123ec:	mov	r4, #0
   123f0:	add	r4, r4, #1
   123f4:	ldr	r3, [r5], #4
   123f8:	mov	r2, r9
   123fc:	mov	r1, r8
   12400:	mov	r0, r7
   12404:	blx	r3
   12408:	cmp	r6, r4
   1240c:	bne	123f0 <tcgetattr@plt+0x1430>
   12410:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12414:	andeq	r0, r1, r0, asr #20
   12418:	andeq	r0, r1, r8, lsr sl
   1241c:	bx	lr
   12420:	ldr	r3, [pc, #12]	; 12434 <tcgetattr@plt+0x1474>
   12424:	mov	r1, #0
   12428:	add	r3, pc, r3
   1242c:	ldr	r2, [r3]
   12430:	b	10ef4 <__cxa_atexit@plt>
   12434:	ldrdeq	r0, [r1], -r4

Disassembly of section .fini:

00012438 <_fini@@Base>:
   12438:	push	{r3, lr}
   1243c:	pop	{r3, pc}
