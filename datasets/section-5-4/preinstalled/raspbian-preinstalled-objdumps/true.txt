
raspbian-preinstalled/true:     file format elf32-littlearm


Disassembly of section .init:

00010ac8 <.init>:
   10ac8:	push	{r3, lr}
   10acc:	bl	10dfc <abort@plt+0x128>
   10ad0:	pop	{r3, pc}

Disassembly of section .plt:

00010ad4 <calloc@plt-0x14>:
   10ad4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ad8:	ldr	lr, [pc, #4]	; 10ae4 <calloc@plt-0x4>
   10adc:	add	lr, pc, lr
   10ae0:	ldr	pc, [lr, #8]!
   10ae4:	andeq	r4, r1, ip, lsl r5

00010ae8 <calloc@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #20, 20	; 0x14000
   10af0:	ldr	pc, [ip, #1308]!	; 0x51c

00010af4 <fputs_unlocked@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #20, 20	; 0x14000
   10afc:	ldr	pc, [ip, #1300]!	; 0x514

00010b00 <raise@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #20, 20	; 0x14000
   10b08:	ldr	pc, [ip, #1292]!	; 0x50c

00010b0c <strcmp@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #20, 20	; 0x14000
   10b14:	ldr	pc, [ip, #1284]!	; 0x504

00010b18 <fflush@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #20, 20	; 0x14000
   10b20:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b24 <free@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #20, 20	; 0x14000
   10b2c:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b30 <_exit@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #20, 20	; 0x14000
   10b38:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b3c <memcpy@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #20, 20	; 0x14000
   10b44:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b48 <mbsinit@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #20, 20	; 0x14000
   10b50:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b54 <memcmp@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #20, 20	; 0x14000
   10b5c:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b60 <dcgettext@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #20, 20	; 0x14000
   10b68:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b6c <__stack_chk_fail@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #20, 20	; 0x14000
   10b74:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b78 <realloc@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #20, 20	; 0x14000
   10b80:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b84 <textdomain@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #20, 20	; 0x14000
   10b8c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b90 <iswprint@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #20, 20	; 0x14000
   10b98:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b9c <fwrite@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #20, 20	; 0x14000
   10ba4:	ldr	pc, [ip, #1188]!	; 0x4a4

00010ba8 <lseek64@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #20, 20	; 0x14000
   10bb0:	ldr	pc, [ip, #1180]!	; 0x49c

00010bb4 <__ctype_get_mb_cur_max@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #20, 20	; 0x14000
   10bbc:	ldr	pc, [ip, #1172]!	; 0x494

00010bc0 <__fpending@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #20, 20	; 0x14000
   10bc8:	ldr	pc, [ip, #1164]!	; 0x48c

00010bcc <mbrtowc@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #20, 20	; 0x14000
   10bd4:	ldr	pc, [ip, #1156]!	; 0x484

00010bd8 <error@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #20, 20	; 0x14000
   10be0:	ldr	pc, [ip, #1148]!	; 0x47c

00010be4 <malloc@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #20, 20	; 0x14000
   10bec:	ldr	pc, [ip, #1140]!	; 0x474

00010bf0 <__libc_start_main@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #20, 20	; 0x14000
   10bf8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bfc <__freading@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #20, 20	; 0x14000
   10c04:	ldr	pc, [ip, #1124]!	; 0x464

00010c08 <__gmon_start__@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #20, 20	; 0x14000
   10c10:	ldr	pc, [ip, #1116]!	; 0x45c

00010c14 <__ctype_b_loc@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #20, 20	; 0x14000
   10c1c:	ldr	pc, [ip, #1108]!	; 0x454

00010c20 <exit@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #20, 20	; 0x14000
   10c28:	ldr	pc, [ip, #1100]!	; 0x44c

00010c2c <strlen@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #1092]!	; 0x444

00010c38 <__errno_location@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #1084]!	; 0x43c

00010c44 <__cxa_atexit@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #1076]!	; 0x434

00010c50 <memset@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #1068]!	; 0x42c

00010c5c <__printf_chk@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #1060]!	; 0x424

00010c68 <fileno@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #1052]!	; 0x41c

00010c74 <__fprintf_chk@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #1044]!	; 0x414

00010c80 <fclose@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #1036]!	; 0x40c

00010c8c <fseeko64@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #1028]!	; 0x404

00010c98 <setlocale@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #1020]!	; 0x3fc

00010ca4 <strrchr@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #1012]!	; 0x3f4

00010cb0 <nl_langinfo@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #1004]!	; 0x3ec

00010cbc <bindtextdomain@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #996]!	; 0x3e4

00010cc8 <strncmp@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #988]!	; 0x3dc

00010cd4 <abort@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #980]!	; 0x3d4

Disassembly of section .text:

00010ce0 <.text>:
   10ce0:	cmp	r0, #2
   10ce4:	beq	10cf0 <abort@plt+0x1c>
   10ce8:	mov	r0, #0
   10cec:	bx	lr
   10cf0:	push	{r4, lr}
   10cf4:	sub	sp, sp, #8
   10cf8:	ldr	r0, [r1]
   10cfc:	mov	r4, r1
   10d00:	bl	11280 <abort@plt+0x5ac>
   10d04:	ldr	r1, [pc, #136]	; 10d94 <abort@plt+0xc0>
   10d08:	mov	r0, #6
   10d0c:	bl	10c98 <setlocale@plt>
   10d10:	ldr	r1, [pc, #128]	; 10d98 <abort@plt+0xc4>
   10d14:	ldr	r0, [pc, #128]	; 10d9c <abort@plt+0xc8>
   10d18:	bl	10cbc <bindtextdomain@plt>
   10d1c:	ldr	r0, [pc, #120]	; 10d9c <abort@plt+0xc8>
   10d20:	bl	10b84 <textdomain@plt>
   10d24:	ldr	r0, [pc, #116]	; 10da0 <abort@plt+0xcc>
   10d28:	bl	14270 <abort@plt+0x359c>
   10d2c:	ldr	r4, [r4, #4]
   10d30:	ldr	r1, [pc, #108]	; 10da4 <abort@plt+0xd0>
   10d34:	mov	r0, r4
   10d38:	bl	10b0c <strcmp@plt>
   10d3c:	cmp	r0, #0
   10d40:	beq	10d90 <abort@plt+0xbc>
   10d44:	mov	r0, r4
   10d48:	ldr	r1, [pc, #88]	; 10da8 <abort@plt+0xd4>
   10d4c:	bl	10b0c <strcmp@plt>
   10d50:	cmp	r0, #0
   10d54:	beq	10d64 <abort@plt+0x90>
   10d58:	mov	r0, #0
   10d5c:	add	sp, sp, #8
   10d60:	pop	{r4, pc}
   10d64:	ldr	r1, [pc, #64]	; 10dac <abort@plt+0xd8>
   10d68:	ldr	r3, [pc, #64]	; 10db0 <abort@plt+0xdc>
   10d6c:	ldr	r2, [pc, #64]	; 10db4 <abort@plt+0xe0>
   10d70:	str	r0, [sp, #4]
   10d74:	ldr	r0, [r1]
   10d78:	ldr	r3, [r3]
   10d7c:	ldr	r1, [pc, #52]	; 10db8 <abort@plt+0xe4>
   10d80:	str	r2, [sp]
   10d84:	ldr	r2, [pc, #48]	; 10dbc <abort@plt+0xe8>
   10d88:	bl	13950 <abort@plt+0x2c7c>
   10d8c:	b	10d58 <abort@plt+0x84>
   10d90:	bl	10eb0 <abort@plt+0x1dc>
   10d94:	andeq	r4, r1, r4, asr #6
   10d98:	andeq	r4, r1, r0, ror #10
   10d9c:			; <UNDEFINED> instruction: 0x000144b4
   10da0:	andeq	r1, r1, r8, lsr #3
   10da4:	andeq	r4, r1, r4, ror r5
   10da8:	andeq	r4, r1, ip, ror r5
   10dac:	andeq	r5, r2, r4, lsl r1
   10db0:	andeq	r5, r2, r0, asr #1
   10db4:	andeq	r4, r1, r8, lsl #11
   10db8:	andeq	r4, r1, ip, asr #5
   10dbc:			; <UNDEFINED> instruction: 0x000144b0
   10dc0:	mov	fp, #0
   10dc4:	mov	lr, #0
   10dc8:	pop	{r1}		; (ldr r1, [sp], #4)
   10dcc:	mov	r2, sp
   10dd0:	push	{r2}		; (str r2, [sp, #-4]!)
   10dd4:	push	{r0}		; (str r0, [sp, #-4]!)
   10dd8:	ldr	ip, [pc, #16]	; 10df0 <abort@plt+0x11c>
   10ddc:	push	{ip}		; (str ip, [sp, #-4]!)
   10de0:	ldr	r0, [pc, #12]	; 10df4 <abort@plt+0x120>
   10de4:	ldr	r3, [pc, #12]	; 10df8 <abort@plt+0x124>
   10de8:	bl	10bf0 <__libc_start_main@plt>
   10dec:	bl	10cd4 <abort@plt>
   10df0:	andeq	r4, r1, ip, ror #4
   10df4:	andeq	r0, r1, r0, ror #25
   10df8:	andeq	r4, r1, ip, lsl #4
   10dfc:	ldr	r3, [pc, #20]	; 10e18 <abort@plt+0x144>
   10e00:	ldr	r2, [pc, #20]	; 10e1c <abort@plt+0x148>
   10e04:	add	r3, pc, r3
   10e08:	ldr	r2, [r3, r2]
   10e0c:	cmp	r2, #0
   10e10:	bxeq	lr
   10e14:	b	10c08 <__gmon_start__@plt>
   10e18:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   10e1c:	strheq	r0, [r0], -r4
   10e20:	ldr	r0, [pc, #24]	; 10e40 <abort@plt+0x16c>
   10e24:	ldr	r3, [pc, #24]	; 10e44 <abort@plt+0x170>
   10e28:	cmp	r3, r0
   10e2c:	bxeq	lr
   10e30:	ldr	r3, [pc, #16]	; 10e48 <abort@plt+0x174>
   10e34:	cmp	r3, #0
   10e38:	bxeq	lr
   10e3c:	bx	r3
   10e40:	andeq	r5, r2, r8, lsl #2
   10e44:	andeq	r5, r2, r8, lsl #2
   10e48:	andeq	r0, r0, r0
   10e4c:	ldr	r0, [pc, #36]	; 10e78 <abort@plt+0x1a4>
   10e50:	ldr	r1, [pc, #36]	; 10e7c <abort@plt+0x1a8>
   10e54:	sub	r1, r1, r0
   10e58:	asr	r1, r1, #2
   10e5c:	add	r1, r1, r1, lsr #31
   10e60:	asrs	r1, r1, #1
   10e64:	bxeq	lr
   10e68:	ldr	r3, [pc, #16]	; 10e80 <abort@plt+0x1ac>
   10e6c:	cmp	r3, #0
   10e70:	bxeq	lr
   10e74:	bx	r3
   10e78:	andeq	r5, r2, r8, lsl #2
   10e7c:	andeq	r5, r2, r8, lsl #2
   10e80:	andeq	r0, r0, r0
   10e84:	push	{r4, lr}
   10e88:	ldr	r4, [pc, #24]	; 10ea8 <abort@plt+0x1d4>
   10e8c:	ldrb	r3, [r4]
   10e90:	cmp	r3, #0
   10e94:	popne	{r4, pc}
   10e98:	bl	10e20 <abort@plt+0x14c>
   10e9c:	mov	r3, #1
   10ea0:	strb	r3, [r4]
   10ea4:	pop	{r4, pc}
   10ea8:	andeq	r5, r2, r8, lsl r1
   10eac:	b	10e4c <abort@plt+0x178>
   10eb0:	ldr	r3, [pc, #640]	; 11138 <abort@plt+0x464>
   10eb4:	push	{r7, lr}
   10eb8:	sub	sp, sp, #64	; 0x40
   10ebc:	ldr	r3, [r3]
   10ec0:	mov	r2, #5
   10ec4:	ldr	r1, [pc, #624]	; 1113c <abort@plt+0x468>
   10ec8:	mov	r6, r0
   10ecc:	mov	r0, #0
   10ed0:	str	r3, [sp, #60]	; 0x3c
   10ed4:	bl	10b60 <dcgettext@plt>
   10ed8:	ldr	r3, [pc, #608]	; 11140 <abort@plt+0x46c>
   10edc:	ldr	r4, [pc, #608]	; 11144 <abort@plt+0x470>
   10ee0:	ldr	r3, [r3]
   10ee4:	mov	r2, r3
   10ee8:	mov	r1, r0
   10eec:	mov	r0, #1
   10ef0:	bl	10c5c <__printf_chk@plt>
   10ef4:	mov	r2, #5
   10ef8:	ldr	r1, [pc, #584]	; 11148 <abort@plt+0x474>
   10efc:	mov	r0, #0
   10f00:	bl	10b60 <dcgettext@plt>
   10f04:	ldr	r1, [pc, #576]	; 1114c <abort@plt+0x478>
   10f08:	mov	r2, r0
   10f0c:	mov	r0, #1
   10f10:	bl	10c5c <__printf_chk@plt>
   10f14:	mov	r2, #5
   10f18:	ldr	r1, [pc, #560]	; 11150 <abort@plt+0x47c>
   10f1c:	mov	r0, #0
   10f20:	bl	10b60 <dcgettext@plt>
   10f24:	ldr	r1, [r4]
   10f28:	bl	10af4 <fputs_unlocked@plt>
   10f2c:	mov	r2, #5
   10f30:	ldr	r1, [pc, #540]	; 11154 <abort@plt+0x480>
   10f34:	mov	r0, #0
   10f38:	bl	10b60 <dcgettext@plt>
   10f3c:	ldr	r1, [r4]
   10f40:	bl	10af4 <fputs_unlocked@plt>
   10f44:	mov	r2, #5
   10f48:	ldr	r1, [pc, #520]	; 11158 <abort@plt+0x484>
   10f4c:	mov	r0, #0
   10f50:	bl	10b60 <dcgettext@plt>
   10f54:	ldr	r2, [pc, #512]	; 1115c <abort@plt+0x488>
   10f58:	mov	r1, r0
   10f5c:	mov	r0, #1
   10f60:	bl	10c5c <__printf_chk@plt>
   10f64:	ldr	lr, [pc, #500]	; 11160 <abort@plt+0x48c>
   10f68:	add	ip, sp, #4
   10f6c:	ldm	lr!, {r0, r1, r2, r3}
   10f70:	stmia	ip!, {r0, r1, r2, r3}
   10f74:	ldm	lr!, {r0, r1, r2, r3}
   10f78:	ldr	r5, [sp, #4]
   10f7c:	stmia	ip!, {r0, r1, r2, r3}
   10f80:	cmp	r5, #0
   10f84:	ldm	lr!, {r0, r1, r2, r3}
   10f88:	addeq	r4, sp, #4
   10f8c:	stmia	ip!, {r0, r1, r2, r3}
   10f90:	ldm	lr, {r0, r1}
   10f94:	stm	ip, {r0, r1}
   10f98:	beq	10fc8 <abort@plt+0x2f4>
   10f9c:	ldr	r7, [pc, #440]	; 1115c <abort@plt+0x488>
   10fa0:	add	r4, sp, #4
   10fa4:	b	10fb4 <abort@plt+0x2e0>
   10fa8:	ldr	r5, [r4, #8]!
   10fac:	cmp	r5, #0
   10fb0:	beq	10fc8 <abort@plt+0x2f4>
   10fb4:	mov	r1, r5
   10fb8:	mov	r0, r7
   10fbc:	bl	10b0c <strcmp@plt>
   10fc0:	cmp	r0, #0
   10fc4:	bne	10fa8 <abort@plt+0x2d4>
   10fc8:	ldr	r4, [r4, #4]
   10fcc:	mov	r2, #5
   10fd0:	cmp	r4, #0
   10fd4:	ldr	r1, [pc, #392]	; 11164 <abort@plt+0x490>
   10fd8:	beq	11084 <abort@plt+0x3b0>
   10fdc:	mov	r0, #0
   10fe0:	bl	10b60 <dcgettext@plt>
   10fe4:	ldr	r3, [pc, #380]	; 11168 <abort@plt+0x494>
   10fe8:	ldr	r2, [pc, #380]	; 1116c <abort@plt+0x498>
   10fec:	mov	r1, r0
   10ff0:	mov	r0, #1
   10ff4:	bl	10c5c <__printf_chk@plt>
   10ff8:	mov	r1, #0
   10ffc:	mov	r0, #5
   11000:	bl	10c98 <setlocale@plt>
   11004:	cmp	r0, #0
   11008:	ldreq	r5, [pc, #332]	; 1115c <abort@plt+0x488>
   1100c:	beq	11028 <abort@plt+0x354>
   11010:	mov	r2, #3
   11014:	ldr	r1, [pc, #340]	; 11170 <abort@plt+0x49c>
   11018:	bl	10cc8 <strncmp@plt>
   1101c:	ldr	r5, [pc, #312]	; 1115c <abort@plt+0x488>
   11020:	cmp	r0, #0
   11024:	bne	110d0 <abort@plt+0x3fc>
   11028:	mov	r2, #5
   1102c:	ldr	r1, [pc, #320]	; 11174 <abort@plt+0x4a0>
   11030:	mov	r0, #0
   11034:	bl	10b60 <dcgettext@plt>
   11038:	ldr	r3, [pc, #284]	; 1115c <abort@plt+0x488>
   1103c:	ldr	r2, [pc, #292]	; 11168 <abort@plt+0x494>
   11040:	mov	r1, r0
   11044:	mov	r0, #1
   11048:	bl	10c5c <__printf_chk@plt>
   1104c:	mov	r2, #5
   11050:	ldr	r1, [pc, #288]	; 11178 <abort@plt+0x4a4>
   11054:	mov	r0, #0
   11058:	bl	10b60 <dcgettext@plt>
   1105c:	ldr	r2, [pc, #280]	; 1117c <abort@plt+0x4a8>
   11060:	cmp	r4, r5
   11064:	ldr	r3, [pc, #276]	; 11180 <abort@plt+0x4ac>
   11068:	movne	r3, r2
   1106c:	mov	r1, r0
   11070:	mov	r2, r4
   11074:	mov	r0, #1
   11078:	bl	10c5c <__printf_chk@plt>
   1107c:	mov	r0, r6
   11080:	bl	10c20 <exit@plt>
   11084:	mov	r0, r4
   11088:	bl	10b60 <dcgettext@plt>
   1108c:	ldr	r3, [pc, #212]	; 11168 <abort@plt+0x494>
   11090:	ldr	r2, [pc, #212]	; 1116c <abort@plt+0x498>
   11094:	mov	r1, r0
   11098:	mov	r0, #1
   1109c:	bl	10c5c <__printf_chk@plt>
   110a0:	mov	r1, r4
   110a4:	mov	r0, #5
   110a8:	bl	10c98 <setlocale@plt>
   110ac:	cmp	r0, #0
   110b0:	beq	110f4 <abort@plt+0x420>
   110b4:	mov	r2, #3
   110b8:	ldr	r1, [pc, #176]	; 11170 <abort@plt+0x49c>
   110bc:	bl	10cc8 <strncmp@plt>
   110c0:	cmp	r0, #0
   110c4:	beq	110f4 <abort@plt+0x420>
   110c8:	ldr	r5, [pc, #140]	; 1115c <abort@plt+0x488>
   110cc:	mov	r4, r5
   110d0:	mov	r2, #5
   110d4:	ldr	r1, [pc, #168]	; 11184 <abort@plt+0x4b0>
   110d8:	mov	r0, #0
   110dc:	bl	10b60 <dcgettext@plt>
   110e0:	ldr	r2, [pc, #116]	; 1115c <abort@plt+0x488>
   110e4:	mov	r1, r0
   110e8:	mov	r0, #1
   110ec:	bl	10c5c <__printf_chk@plt>
   110f0:	b	11028 <abort@plt+0x354>
   110f4:	mov	r2, #5
   110f8:	ldr	r1, [pc, #116]	; 11174 <abort@plt+0x4a0>
   110fc:	mov	r0, #0
   11100:	bl	10b60 <dcgettext@plt>
   11104:	ldr	r3, [pc, #80]	; 1115c <abort@plt+0x488>
   11108:	ldr	r2, [pc, #88]	; 11168 <abort@plt+0x494>
   1110c:	mov	r4, r3
   11110:	mov	r1, r0
   11114:	mov	r0, #1
   11118:	bl	10c5c <__printf_chk@plt>
   1111c:	ldr	r1, [pc, #84]	; 11178 <abort@plt+0x4a4>
   11120:	mov	r2, #5
   11124:	mov	r0, #0
   11128:	bl	10b60 <dcgettext@plt>
   1112c:	ldr	r3, [pc, #76]	; 11180 <abort@plt+0x4ac>
   11130:	mov	r1, r0
   11134:	b	11070 <abort@plt+0x39c>
   11138:	andeq	r4, r2, r8, lsl #30
   1113c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11140:	andeq	r5, r2, r4, lsr #2
   11144:	andeq	r5, r2, r4, lsl r1
   11148:	andeq	r4, r1, r4, lsl r3
   1114c:	andeq	r4, r1, r0, asr #6
   11150:	andeq	r4, r1, r8, asr #6
   11154:	andeq	r4, r1, r8, ror r3
   11158:			; <UNDEFINED> instruction: 0x000143b0
   1115c:	andeq	r4, r1, ip, asr #5
   11160:	muleq	r1, r4, r2
   11164:	andeq	r4, r1, r0, ror r4
   11168:	andeq	r4, r1, r8, lsl #9
   1116c:			; <UNDEFINED> instruction: 0x000144b0
   11170:	andeq	r4, r1, r0, asr #9
   11174:	andeq	r4, r1, ip, lsl #10
   11178:	andeq	r4, r1, ip, lsr #10
   1117c:	andeq	r4, r1, r4, asr #6
   11180:	andeq	r4, r1, r0, lsr #11
   11184:	andeq	r4, r1, r4, asr #9
   11188:	ldr	r3, [pc, #4]	; 11194 <abort@plt+0x4c0>
   1118c:	str	r0, [r3]
   11190:	bx	lr
   11194:	andeq	r5, r2, ip, lsl r1
   11198:	ldr	r3, [pc, #4]	; 111a4 <abort@plt+0x4d0>
   1119c:	strb	r0, [r3, #4]
   111a0:	bx	lr
   111a4:	andeq	r5, r2, ip, lsl r1
   111a8:	ldr	r3, [pc, #180]	; 11264 <abort@plt+0x590>
   111ac:	push	{r4, r5, r6, lr}
   111b0:	sub	sp, sp, #8
   111b4:	ldr	r0, [r3]
   111b8:	bl	13d5c <abort@plt+0x3088>
   111bc:	cmp	r0, #0
   111c0:	beq	111e8 <abort@plt+0x514>
   111c4:	bl	10c38 <__errno_location@plt>
   111c8:	ldr	r5, [pc, #152]	; 11268 <abort@plt+0x594>
   111cc:	ldrb	r3, [r5, #4]
   111d0:	cmp	r3, #0
   111d4:	mov	r4, r0
   111d8:	beq	11204 <abort@plt+0x530>
   111dc:	ldr	r3, [r0]
   111e0:	cmp	r3, #32
   111e4:	bne	11204 <abort@plt+0x530>
   111e8:	ldr	r3, [pc, #124]	; 1126c <abort@plt+0x598>
   111ec:	ldr	r0, [r3]
   111f0:	bl	13d5c <abort@plt+0x3088>
   111f4:	cmp	r0, #0
   111f8:	bne	11244 <abort@plt+0x570>
   111fc:	add	sp, sp, #8
   11200:	pop	{r4, r5, r6, pc}
   11204:	mov	r2, #5
   11208:	ldr	r1, [pc, #96]	; 11270 <abort@plt+0x59c>
   1120c:	mov	r0, #0
   11210:	bl	10b60 <dcgettext@plt>
   11214:	mov	r6, r0
   11218:	ldr	r0, [r5]
   1121c:	cmp	r0, #0
   11220:	beq	11250 <abort@plt+0x57c>
   11224:	ldr	r4, [r4]
   11228:	bl	13304 <abort@plt+0x2630>
   1122c:	mov	r1, r4
   11230:	str	r6, [sp]
   11234:	ldr	r2, [pc, #56]	; 11274 <abort@plt+0x5a0>
   11238:	mov	r3, r0
   1123c:	mov	r0, #0
   11240:	bl	10bd8 <error@plt>
   11244:	ldr	r3, [pc, #44]	; 11278 <abort@plt+0x5a4>
   11248:	ldr	r0, [r3]
   1124c:	bl	10b30 <_exit@plt>
   11250:	mov	r3, r6
   11254:	ldr	r1, [r4]
   11258:	ldr	r2, [pc, #28]	; 1127c <abort@plt+0x5a8>
   1125c:	bl	10bd8 <error@plt>
   11260:	b	11244 <abort@plt+0x570>
   11264:	andeq	r5, r2, r4, lsl r1
   11268:	andeq	r5, r2, ip, lsl r1
   1126c:	andeq	r5, r2, r0, lsl r1
   11270:	andeq	r4, r1, ip, lsl #12
   11274:	andeq	r4, r1, r8, lsl r6
   11278:	andeq	r5, r2, r4, asr #1
   1127c:	andeq	r4, r1, ip, lsl r6
   11280:	push	{r4, r5, r6, lr}
   11284:	subs	r4, r0, #0
   11288:	beq	112fc <abort@plt+0x628>
   1128c:	mov	r1, #47	; 0x2f
   11290:	bl	10ca4 <strrchr@plt>
   11294:	subs	r5, r0, #0
   11298:	beq	112e8 <abort@plt+0x614>
   1129c:	add	r6, r5, #1
   112a0:	sub	r3, r6, r4
   112a4:	cmp	r3, #6
   112a8:	ble	112e8 <abort@plt+0x614>
   112ac:	mov	r2, #7
   112b0:	ldr	r1, [pc, #96]	; 11318 <abort@plt+0x644>
   112b4:	sub	r0, r5, #6
   112b8:	bl	10cc8 <strncmp@plt>
   112bc:	cmp	r0, #0
   112c0:	bne	112e8 <abort@plt+0x614>
   112c4:	mov	r2, #3
   112c8:	ldr	r1, [pc, #76]	; 1131c <abort@plt+0x648>
   112cc:	mov	r0, r6
   112d0:	bl	10cc8 <strncmp@plt>
   112d4:	cmp	r0, #0
   112d8:	movne	r4, r6
   112dc:	ldreq	r3, [pc, #60]	; 11320 <abort@plt+0x64c>
   112e0:	addeq	r4, r5, #4
   112e4:	streq	r4, [r3]
   112e8:	ldr	r2, [pc, #52]	; 11324 <abort@plt+0x650>
   112ec:	ldr	r3, [pc, #52]	; 11328 <abort@plt+0x654>
   112f0:	str	r4, [r2]
   112f4:	str	r4, [r3]
   112f8:	pop	{r4, r5, r6, pc}
   112fc:	ldr	r3, [pc, #40]	; 1132c <abort@plt+0x658>
   11300:	mov	r2, #55	; 0x37
   11304:	mov	r1, #1
   11308:	ldr	r3, [r3]
   1130c:	ldr	r0, [pc, #28]	; 11330 <abort@plt+0x65c>
   11310:	bl	10b9c <fwrite@plt>
   11314:	bl	10cd4 <abort@plt>
   11318:	andeq	r4, r1, r8, asr r6
   1131c:	andeq	r4, r1, r0, ror #12
   11320:	andeq	r5, r2, r8, lsl #2
   11324:	andeq	r5, r2, r4, lsr #2
   11328:	andeq	r5, r2, ip, lsl #2
   1132c:	andeq	r5, r2, r0, lsl r1
   11330:	andeq	r4, r1, r0, lsr #12
   11334:	push	{r4, lr}
   11338:	mov	r2, #48	; 0x30
   1133c:	mov	r4, r1
   11340:	mov	r1, #0
   11344:	bl	10c50 <memset@plt>
   11348:	cmp	r4, #10
   1134c:	beq	11358 <abort@plt+0x684>
   11350:	str	r4, [r0]
   11354:	pop	{r4, pc}
   11358:	bl	10cd4 <abort@plt>
   1135c:	push	{r4, r5, r6, lr}
   11360:	mov	r2, #5
   11364:	mov	r5, r0
   11368:	mov	r6, r1
   1136c:	mov	r1, r0
   11370:	mov	r0, #0
   11374:	bl	10b60 <dcgettext@plt>
   11378:	cmp	r5, r0
   1137c:	mov	r4, r0
   11380:	beq	1138c <abort@plt+0x6b8>
   11384:	mov	r0, r4
   11388:	pop	{r4, r5, r6, pc}
   1138c:	bl	13e1c <abort@plt+0x3148>
   11390:	ldrb	r3, [r0]
   11394:	bic	r3, r3, #32
   11398:	cmp	r3, #85	; 0x55
   1139c:	bne	113fc <abort@plt+0x728>
   113a0:	ldrb	r3, [r0, #1]
   113a4:	bic	r3, r3, #32
   113a8:	cmp	r3, #84	; 0x54
   113ac:	bne	11474 <abort@plt+0x7a0>
   113b0:	ldrb	r3, [r0, #2]
   113b4:	bic	r3, r3, #32
   113b8:	cmp	r3, #70	; 0x46
   113bc:	bne	11474 <abort@plt+0x7a0>
   113c0:	ldrb	r3, [r0, #3]
   113c4:	cmp	r3, #45	; 0x2d
   113c8:	bne	11474 <abort@plt+0x7a0>
   113cc:	ldrb	r3, [r0, #4]
   113d0:	cmp	r3, #56	; 0x38
   113d4:	bne	11474 <abort@plt+0x7a0>
   113d8:	ldrb	r3, [r0, #5]
   113dc:	cmp	r3, #0
   113e0:	bne	11474 <abort@plt+0x7a0>
   113e4:	ldrb	r2, [r4]
   113e8:	ldr	r3, [pc, #156]	; 1148c <abort@plt+0x7b8>
   113ec:	ldr	r4, [pc, #156]	; 11490 <abort@plt+0x7bc>
   113f0:	cmp	r2, #96	; 0x60
   113f4:	movne	r4, r3
   113f8:	b	11384 <abort@plt+0x6b0>
   113fc:	cmp	r3, #71	; 0x47
   11400:	bne	11474 <abort@plt+0x7a0>
   11404:	ldrb	r3, [r0, #1]
   11408:	bic	r3, r3, #32
   1140c:	cmp	r3, #66	; 0x42
   11410:	bne	11474 <abort@plt+0x7a0>
   11414:	ldrb	r3, [r0, #2]
   11418:	cmp	r3, #49	; 0x31
   1141c:	bne	11474 <abort@plt+0x7a0>
   11420:	ldrb	r3, [r0, #3]
   11424:	cmp	r3, #56	; 0x38
   11428:	bne	11474 <abort@plt+0x7a0>
   1142c:	ldrb	r3, [r0, #4]
   11430:	cmp	r3, #48	; 0x30
   11434:	bne	11474 <abort@plt+0x7a0>
   11438:	ldrb	r3, [r0, #5]
   1143c:	cmp	r3, #51	; 0x33
   11440:	bne	11474 <abort@plt+0x7a0>
   11444:	ldrb	r3, [r0, #6]
   11448:	cmp	r3, #48	; 0x30
   1144c:	bne	11474 <abort@plt+0x7a0>
   11450:	ldrb	r3, [r0, #7]
   11454:	cmp	r3, #0
   11458:	bne	11474 <abort@plt+0x7a0>
   1145c:	ldrb	r2, [r4]
   11460:	ldr	r3, [pc, #44]	; 11494 <abort@plt+0x7c0>
   11464:	ldr	r4, [pc, #44]	; 11498 <abort@plt+0x7c4>
   11468:	cmp	r2, #96	; 0x60
   1146c:	movne	r4, r3
   11470:	b	11384 <abort@plt+0x6b0>
   11474:	ldr	r3, [pc, #32]	; 1149c <abort@plt+0x7c8>
   11478:	ldr	r4, [pc, #32]	; 114a0 <abort@plt+0x7cc>
   1147c:	cmp	r6, #9
   11480:	movne	r4, r3
   11484:	mov	r0, r4
   11488:	pop	{r4, r5, r6, pc}
   1148c:			; <UNDEFINED> instruction: 0x000146bc
   11490:	andeq	r4, r1, r8, asr #13
   11494:	andeq	r4, r1, r0, asr #13
   11498:	andeq	r4, r1, r4, asr #13
   1149c:	andeq	r4, r1, ip, asr #13
   114a0:			; <UNDEFINED> instruction: 0x000146b8
   114a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114a8:	sub	sp, sp, #124	; 0x7c
   114ac:	ldr	ip, [pc, #3576]	; 122ac <abort@plt+0x15d8>
   114b0:	str	r3, [sp, #24]
   114b4:	ldr	r3, [sp, #168]	; 0xa8
   114b8:	ldr	ip, [ip]
   114bc:	str	r3, [sp, #56]	; 0x38
   114c0:	ldr	r3, [sp, #172]	; 0xac
   114c4:	ldr	r8, [sp, #160]	; 0xa0
   114c8:	str	r3, [sp, #80]	; 0x50
   114cc:	ldr	r3, [sp, #176]	; 0xb0
   114d0:	mov	fp, r0
   114d4:	str	r3, [sp, #76]	; 0x4c
   114d8:	mov	sl, r1
   114dc:	str	r2, [sp, #36]	; 0x24
   114e0:	str	ip, [sp, #116]	; 0x74
   114e4:	bl	10bb4 <__ctype_get_mb_cur_max@plt>
   114e8:	ldr	r3, [sp, #164]	; 0xa4
   114ec:	ands	r4, r3, #2
   114f0:	movne	r3, #1
   114f4:	moveq	r3, #0
   114f8:	str	r3, [sp, #32]
   114fc:	str	r0, [sp, #64]	; 0x40
   11500:	cmp	r8, #10
   11504:	ldrls	pc, [pc, r8, lsl #2]
   11508:	b	12cb8 <abort@plt+0x1fe4>
   1150c:	andeq	r1, r1, r0, lsl #18
   11510:	muleq	r1, r8, r9
   11514:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11518:			; <UNDEFINED> instruction: 0x000119b8
   1151c:	andeq	r1, r1, ip, ror #16
   11520:			; <UNDEFINED> instruction: 0x000118b4
   11524:	andeq	r1, r1, r0, lsr r9
   11528:	andeq	r1, r1, r8, ror #18
   1152c:	andeq	r1, r1, r8, lsr r5
   11530:	andeq	r1, r1, r8, lsr r5
   11534:	andeq	r1, r1, r8, lsr r5
   11538:	cmp	r8, #10
   1153c:	beq	11560 <abort@plt+0x88c>
   11540:	mov	r1, r8
   11544:	ldr	r0, [pc, #3428]	; 122b0 <abort@plt+0x15dc>
   11548:	bl	1135c <abort@plt+0x688>
   1154c:	mov	r1, r8
   11550:	str	r0, [sp, #80]	; 0x50
   11554:	ldr	r0, [pc, #3420]	; 122b8 <abort@plt+0x15e4>
   11558:	bl	1135c <abort@plt+0x688>
   1155c:	str	r0, [sp, #76]	; 0x4c
   11560:	cmp	r4, #0
   11564:	movne	r4, #0
   11568:	beq	12978 <abort@plt+0x1ca4>
   1156c:	ldr	r7, [sp, #76]	; 0x4c
   11570:	mov	r5, #0
   11574:	mov	r6, #1
   11578:	mov	r0, r7
   1157c:	str	r6, [sp, #40]	; 0x28
   11580:	str	r5, [sp, #68]	; 0x44
   11584:	bl	10c2c <strlen@plt>
   11588:	str	r6, [sp, #28]
   1158c:	str	r5, [sp, #44]	; 0x2c
   11590:	str	r5, [sp, #72]	; 0x48
   11594:	str	r7, [sp, #60]	; 0x3c
   11598:	str	r0, [sp, #52]	; 0x34
   1159c:	str	r8, [sp, #160]	; 0xa0
   115a0:	mov	r8, fp
   115a4:	ldr	fp, [sp, #160]	; 0xa0
   115a8:	mov	r9, #0
   115ac:	ldr	r3, [sp, #24]
   115b0:	cmn	r3, #1
   115b4:	beq	11b1c <abort@plt+0xe48>
   115b8:	ldr	r3, [sp, #24]
   115bc:	subs	r6, r3, r9
   115c0:	movne	r6, #1
   115c4:	cmp	r6, #0
   115c8:	beq	11b34 <abort@plt+0xe60>
   115cc:	ldr	r7, [sp, #28]
   115d0:	ldr	r0, [sp, #36]	; 0x24
   115d4:	cmp	fp, #2
   115d8:	moveq	r7, #0
   115dc:	andne	r7, r7, #1
   115e0:	add	r3, r0, r9
   115e4:	cmp	r7, #0
   115e8:	str	r3, [sp, #48]	; 0x30
   115ec:	beq	11fd8 <abort@plt+0x1304>
   115f0:	ldr	r2, [sp, #52]	; 0x34
   115f4:	cmp	r2, #0
   115f8:	beq	122bc <abort@plt+0x15e8>
   115fc:	ldr	r1, [sp, #24]
   11600:	cmp	r2, #1
   11604:	mov	r3, r2
   11608:	movls	r3, #0
   1160c:	movhi	r3, #1
   11610:	cmn	r1, #1
   11614:	movne	r3, #0
   11618:	cmp	r3, #0
   1161c:	add	r5, r9, r2
   11620:	beq	1162c <abort@plt+0x958>
   11624:	bl	10c2c <strlen@plt>
   11628:	str	r0, [sp, #24]
   1162c:	ldr	r3, [sp, #24]
   11630:	cmp	r5, r3
   11634:	bhi	122bc <abort@plt+0x15e8>
   11638:	ldr	r2, [sp, #52]	; 0x34
   1163c:	ldr	r1, [sp, #60]	; 0x3c
   11640:	ldr	r0, [sp, #48]	; 0x30
   11644:	bl	10b54 <memcmp@plt>
   11648:	cmp	r0, #0
   1164c:	bne	122bc <abort@plt+0x15e8>
   11650:	ldr	r3, [sp, #32]
   11654:	cmp	r3, #0
   11658:	bne	12b78 <abort@plt+0x1ea4>
   1165c:	ldr	r3, [sp, #48]	; 0x30
   11660:	ldrb	r5, [r3]
   11664:	cmp	r5, #126	; 0x7e
   11668:	ldrls	pc, [pc, r5, lsl #2]
   1166c:	b	11f3c <abort@plt+0x1268>
   11670:	andeq	r1, r1, r8, lsr #28
   11674:	andeq	r1, r1, ip, lsr pc
   11678:	andeq	r1, r1, ip, lsr pc
   1167c:	andeq	r1, r1, ip, lsr pc
   11680:	andeq	r1, r1, ip, lsr pc
   11684:	andeq	r1, r1, ip, lsr pc
   11688:	andeq	r1, r1, ip, lsr pc
   1168c:	strdeq	r1, [r1], -r4
   11690:	andeq	r1, r1, r4, ror #29
   11694:	andeq	r1, r1, r4, ror #27
   11698:	andeq	r1, r1, ip, lsr #27
   1169c:	andeq	r1, r1, r4, lsl #28
   116a0:	andeq	r1, r1, ip, ror #27
   116a4:	andeq	r1, r1, ip, lsl sp
   116a8:	andeq	r1, r1, ip, lsr pc
   116ac:	andeq	r1, r1, ip, lsr pc
   116b0:	andeq	r1, r1, ip, lsr pc
   116b4:	andeq	r1, r1, ip, lsr pc
   116b8:	andeq	r1, r1, ip, lsr pc
   116bc:	andeq	r1, r1, ip, lsr pc
   116c0:	andeq	r1, r1, ip, lsr pc
   116c4:	andeq	r1, r1, ip, lsr pc
   116c8:	andeq	r1, r1, ip, lsr pc
   116cc:	andeq	r1, r1, ip, lsr pc
   116d0:	andeq	r1, r1, ip, lsr pc
   116d4:	andeq	r1, r1, ip, lsr pc
   116d8:	andeq	r1, r1, ip, lsr pc
   116dc:	andeq	r1, r1, ip, lsr pc
   116e0:	andeq	r1, r1, ip, lsr pc
   116e4:	andeq	r1, r1, ip, lsr pc
   116e8:	andeq	r1, r1, ip, lsr pc
   116ec:	andeq	r1, r1, ip, lsr pc
   116f0:	strdeq	r1, [r1], -ip
   116f4:	andeq	r1, r1, r0, lsl lr
   116f8:	andeq	r1, r1, r0, lsl lr
   116fc:	andeq	r1, r1, r4, lsl pc
   11700:	andeq	r1, r1, r0, lsl lr
   11704:	andeq	r1, r1, r0, lsr pc
   11708:	andeq	r1, r1, r0, lsl lr
   1170c:	andeq	r1, r1, r0, asr ip
   11710:	andeq	r1, r1, r0, lsl lr
   11714:	andeq	r1, r1, r0, lsl lr
   11718:	andeq	r1, r1, r0, lsl lr
   1171c:	andeq	r1, r1, r0, lsr pc
   11720:	andeq	r1, r1, r0, lsr pc
   11724:	andeq	r1, r1, r0, lsr pc
   11728:	andeq	r1, r1, r0, lsr pc
   1172c:	andeq	r1, r1, r0, lsr pc
   11730:	andeq	r1, r1, r0, lsr pc
   11734:	andeq	r1, r1, r0, lsr pc
   11738:	andeq	r1, r1, r0, lsr pc
   1173c:	andeq	r1, r1, r0, lsr pc
   11740:	andeq	r1, r1, r0, lsr pc
   11744:	andeq	r1, r1, r0, lsr pc
   11748:	andeq	r1, r1, r0, lsr pc
   1174c:	andeq	r1, r1, r0, lsr pc
   11750:	andeq	r1, r1, r0, lsr pc
   11754:	andeq	r1, r1, r0, lsr pc
   11758:	andeq	r1, r1, r0, lsr pc
   1175c:	andeq	r1, r1, r0, lsl lr
   11760:	andeq	r1, r1, r0, lsl lr
   11764:	andeq	r1, r1, r0, lsl lr
   11768:	andeq	r1, r1, r0, lsl lr
   1176c:	andeq	r1, r1, r4, lsr #24
   11770:	andeq	r1, r1, ip, lsr pc
   11774:	andeq	r1, r1, r0, lsr pc
   11778:	andeq	r1, r1, r0, lsr pc
   1177c:	andeq	r1, r1, r0, lsr pc
   11780:	andeq	r1, r1, r0, lsr pc
   11784:	andeq	r1, r1, r0, lsr pc
   11788:	andeq	r1, r1, r0, lsr pc
   1178c:	andeq	r1, r1, r0, lsr pc
   11790:	andeq	r1, r1, r0, lsr pc
   11794:	andeq	r1, r1, r0, lsr pc
   11798:	andeq	r1, r1, r0, lsr pc
   1179c:	andeq	r1, r1, r0, lsr pc
   117a0:	andeq	r1, r1, r0, lsr pc
   117a4:	andeq	r1, r1, r0, lsr pc
   117a8:	andeq	r1, r1, r0, lsr pc
   117ac:	andeq	r1, r1, r0, lsr pc
   117b0:	andeq	r1, r1, r0, lsr pc
   117b4:	andeq	r1, r1, r0, lsr pc
   117b8:	andeq	r1, r1, r0, lsr pc
   117bc:	andeq	r1, r1, r0, lsr pc
   117c0:	andeq	r1, r1, r0, lsr pc
   117c4:	andeq	r1, r1, r0, lsr pc
   117c8:	andeq	r1, r1, r0, lsr pc
   117cc:	andeq	r1, r1, r0, lsr pc
   117d0:	andeq	r1, r1, r0, lsr pc
   117d4:	andeq	r1, r1, r0, lsr pc
   117d8:	andeq	r1, r1, r0, lsr pc
   117dc:	andeq	r1, r1, r0, lsl lr
   117e0:	ldrdeq	r1, [r1], -ip
   117e4:	andeq	r1, r1, r0, lsr pc
   117e8:	andeq	r1, r1, r0, lsl lr
   117ec:	andeq	r1, r1, r0, lsr pc
   117f0:	andeq	r1, r1, r0, lsl lr
   117f4:	andeq	r1, r1, r0, lsr pc
   117f8:	andeq	r1, r1, r0, lsr pc
   117fc:	andeq	r1, r1, r0, lsr pc
   11800:	andeq	r1, r1, r0, lsr pc
   11804:	andeq	r1, r1, r0, lsr pc
   11808:	andeq	r1, r1, r0, lsr pc
   1180c:	andeq	r1, r1, r0, lsr pc
   11810:	andeq	r1, r1, r0, lsr pc
   11814:	andeq	r1, r1, r0, lsr pc
   11818:	andeq	r1, r1, r0, lsr pc
   1181c:	andeq	r1, r1, r0, lsr pc
   11820:	andeq	r1, r1, r0, lsr pc
   11824:	andeq	r1, r1, r0, lsr pc
   11828:	andeq	r1, r1, r0, lsr pc
   1182c:	andeq	r1, r1, r0, lsr pc
   11830:	andeq	r1, r1, r0, lsr pc
   11834:	andeq	r1, r1, r0, lsr pc
   11838:	andeq	r1, r1, r0, lsr pc
   1183c:	andeq	r1, r1, r0, lsr pc
   11840:	andeq	r1, r1, r0, lsr pc
   11844:	andeq	r1, r1, r0, lsr pc
   11848:	andeq	r1, r1, r0, lsr pc
   1184c:	andeq	r1, r1, r0, lsr pc
   11850:	andeq	r1, r1, r0, lsr pc
   11854:	andeq	r1, r1, r0, lsr pc
   11858:	andeq	r1, r1, r0, lsr pc
   1185c:	strdeq	r1, [r1], -r4
   11860:	andeq	r1, r1, r0, lsl lr
   11864:	strdeq	r1, [r1], -r4
   11868:	andeq	r1, r1, r4, lsl pc
   1186c:	cmp	r4, #0
   11870:	moveq	r3, #1
   11874:	streq	r3, [sp, #28]
   11878:	beq	11fa4 <abort@plt+0x12d0>
   1187c:	mov	r3, #0
   11880:	mov	r4, r3
   11884:	mov	r2, #1
   11888:	str	r2, [sp, #40]	; 0x28
   1188c:	str	r3, [sp, #68]	; 0x44
   11890:	str	r2, [sp, #32]
   11894:	str	r2, [sp, #52]	; 0x34
   11898:	ldr	r3, [pc, #2584]	; 122b8 <abort@plt+0x15e4>
   1189c:	str	r4, [sp, #44]	; 0x2c
   118a0:	str	r4, [sp, #72]	; 0x48
   118a4:	str	r4, [sp, #28]
   118a8:	str	r3, [sp, #60]	; 0x3c
   118ac:	mov	r8, #2
   118b0:	b	1159c <abort@plt+0x8c8>
   118b4:	cmp	r4, #0
   118b8:	bne	12b44 <abort@plt+0x1e70>
   118bc:	cmp	sl, #0
   118c0:	beq	12904 <abort@plt+0x1c30>
   118c4:	mov	r3, #34	; 0x22
   118c8:	strb	r3, [fp]
   118cc:	ldr	r3, [pc, #2528]	; 122b4 <abort@plt+0x15e0>
   118d0:	mov	r1, r4
   118d4:	mov	r2, #1
   118d8:	str	r4, [sp, #68]	; 0x44
   118dc:	str	r2, [sp, #40]	; 0x28
   118e0:	mov	r4, r2
   118e4:	str	r1, [sp, #44]	; 0x2c
   118e8:	str	r1, [sp, #72]	; 0x48
   118ec:	str	r1, [sp, #32]
   118f0:	str	r2, [sp, #28]
   118f4:	str	r2, [sp, #52]	; 0x34
   118f8:	str	r3, [sp, #60]	; 0x3c
   118fc:	b	1159c <abort@plt+0x8c8>
   11900:	mov	r3, #0
   11904:	str	r3, [sp, #68]	; 0x44
   11908:	str	r3, [sp, #44]	; 0x2c
   1190c:	str	r3, [sp, #32]
   11910:	str	r3, [sp, #28]
   11914:	str	r3, [sp, #60]	; 0x3c
   11918:	mov	r3, #1
   1191c:	str	r8, [sp, #72]	; 0x48
   11920:	str	r8, [sp, #52]	; 0x34
   11924:	mov	r4, r8
   11928:	str	r3, [sp, #40]	; 0x28
   1192c:	b	1159c <abort@plt+0x8c8>
   11930:	mov	r3, #1
   11934:	str	r3, [sp, #40]	; 0x28
   11938:	str	r3, [sp, #32]
   1193c:	str	r3, [sp, #28]
   11940:	str	r3, [sp, #52]	; 0x34
   11944:	ldr	r3, [pc, #2408]	; 122b4 <abort@plt+0x15e0>
   11948:	mov	r2, #0
   1194c:	mov	r4, r2
   11950:	str	r2, [sp, #68]	; 0x44
   11954:	str	r2, [sp, #44]	; 0x2c
   11958:	str	r2, [sp, #72]	; 0x48
   1195c:	str	r3, [sp, #60]	; 0x3c
   11960:	mov	r8, #5
   11964:	b	1159c <abort@plt+0x8c8>
   11968:	mov	r3, #0
   1196c:	mov	r2, #1
   11970:	str	r2, [sp, #40]	; 0x28
   11974:	mov	r4, r3
   11978:	str	r3, [sp, #68]	; 0x44
   1197c:	str	r2, [sp, #28]
   11980:	str	r3, [sp, #44]	; 0x2c
   11984:	str	r3, [sp, #72]	; 0x48
   11988:	str	r3, [sp, #32]
   1198c:	str	r3, [sp, #52]	; 0x34
   11990:	str	r3, [sp, #60]	; 0x3c
   11994:	b	1159c <abort@plt+0x8c8>
   11998:	mov	r2, #1
   1199c:	mov	r3, #0
   119a0:	str	r2, [sp, #40]	; 0x28
   119a4:	mov	r4, r3
   119a8:	str	r3, [sp, #68]	; 0x44
   119ac:	str	r8, [sp, #52]	; 0x34
   119b0:	str	r2, [sp, #32]
   119b4:	b	11898 <abort@plt+0xbc4>
   119b8:	mov	r3, #1
   119bc:	str	r3, [sp, #40]	; 0x28
   119c0:	str	r3, [sp, #32]
   119c4:	str	r3, [sp, #28]
   119c8:	str	r3, [sp, #52]	; 0x34
   119cc:	ldr	r3, [pc, #2276]	; 122b8 <abort@plt+0x15e4>
   119d0:	mov	r2, #0
   119d4:	mov	r4, r2
   119d8:	str	r2, [sp, #68]	; 0x44
   119dc:	str	r2, [sp, #44]	; 0x2c
   119e0:	str	r2, [sp, #72]	; 0x48
   119e4:	str	r3, [sp, #60]	; 0x3c
   119e8:	mov	r8, #2
   119ec:	b	1159c <abort@plt+0x8c8>
   119f0:	mov	r7, #0
   119f4:	ldr	r3, [sp, #24]
   119f8:	cmn	r3, #1
   119fc:	beq	12538 <abort@plt+0x1864>
   11a00:	ldr	r3, [sp, #24]
   11a04:	subs	r3, r3, #1
   11a08:	movne	r3, #1
   11a0c:	cmp	r3, #0
   11a10:	sub	r2, fp, #2
   11a14:	clz	r2, r2
   11a18:	lsr	r2, r2, #5
   11a1c:	bne	11c18 <abort@plt+0xf44>
   11a20:	cmp	r9, #0
   11a24:	bne	11c18 <abort@plt+0xf44>
   11a28:	ldr	r3, [sp, #32]
   11a2c:	tst	r3, r2
   11a30:	bne	11d38 <abort@plt+0x1064>
   11a34:	ldr	r3, [sp, #28]
   11a38:	eor	r3, r3, #1
   11a3c:	orr	r3, r2, r3
   11a40:	ldr	r2, [sp, #32]
   11a44:	eor	r3, r3, #1
   11a48:	orrs	r3, r2, r3
   11a4c:	beq	11a7c <abort@plt+0xda8>
   11a50:	mov	r3, #0
   11a54:	ldr	r1, [sp, #56]	; 0x38
   11a58:	cmp	r1, #0
   11a5c:	beq	11a7c <abort@plt+0xda8>
   11a60:	lsr	r2, r5, #5
   11a64:	and	r0, r5, #31
   11a68:	uxtb	r2, r2
   11a6c:	ldr	r1, [r1, r2, lsl #2]
   11a70:	lsr	r2, r1, r0
   11a74:	tst	r2, #1
   11a78:	bne	11a84 <abort@plt+0xdb0>
   11a7c:	cmp	r7, #0
   11a80:	beq	11cd4 <abort@plt+0x1000>
   11a84:	sub	r2, fp, #2
   11a88:	clz	r2, r2
   11a8c:	lsr	r2, r2, #5
   11a90:	ldr	r3, [sp, #32]
   11a94:	cmp	r3, #0
   11a98:	bne	11dc4 <abort@plt+0x10f0>
   11a9c:	ldr	r3, [sp, #44]	; 0x2c
   11aa0:	eor	r3, r3, #1
   11aa4:	ands	r3, r2, r3
   11aa8:	beq	11ae0 <abort@plt+0xe0c>
   11aac:	cmp	sl, r4
   11ab0:	movhi	r2, #39	; 0x27
   11ab4:	strbhi	r2, [r8, r4]
   11ab8:	add	r2, r4, #1
   11abc:	cmp	r2, sl
   11ac0:	movcc	r1, #36	; 0x24
   11ac4:	strbcc	r1, [r8, r2]
   11ac8:	add	r2, r4, #2
   11acc:	cmp	r2, sl
   11ad0:	add	r4, r4, #3
   11ad4:	movcc	r1, #39	; 0x27
   11ad8:	strbcc	r1, [r8, r2]
   11adc:	str	r3, [sp, #44]	; 0x2c
   11ae0:	cmp	r4, sl
   11ae4:	movcc	r3, #92	; 0x5c
   11ae8:	strbcc	r3, [r8, r4]
   11aec:	add	r9, r9, #1
   11af0:	add	r4, r4, #1
   11af4:	cmp	r4, sl
   11af8:	ldr	r3, [sp, #40]	; 0x28
   11afc:	strbcc	r5, [r8, r4]
   11b00:	cmp	r6, #0
   11b04:	moveq	r3, #0
   11b08:	str	r3, [sp, #40]	; 0x28
   11b0c:	ldr	r3, [sp, #24]
   11b10:	add	r4, r4, #1
   11b14:	cmn	r3, #1
   11b18:	bne	115b8 <abort@plt+0x8e4>
   11b1c:	ldr	r3, [sp, #36]	; 0x24
   11b20:	ldrb	r6, [r3, r9]
   11b24:	adds	r6, r6, #0
   11b28:	movne	r6, #1
   11b2c:	cmp	r6, #0
   11b30:	bne	115cc <abort@plt+0x8f8>
   11b34:	str	fp, [sp, #160]	; 0xa0
   11b38:	mov	fp, r8
   11b3c:	ldr	r8, [sp, #160]	; 0xa0
   11b40:	ldr	r1, [sp, #32]
   11b44:	cmp	r4, #0
   11b48:	sub	r2, r8, #2
   11b4c:	clz	r2, r2
   11b50:	lsr	r2, r2, #5
   11b54:	andeq	r3, r2, r1
   11b58:	movne	r3, #0
   11b5c:	cmp	r3, #0
   11b60:	bne	12c4c <abort@plt+0x1f78>
   11b64:	eor	r3, r1, #1
   11b68:	ands	r2, r2, r3
   11b6c:	beq	12b88 <abort@plt+0x1eb4>
   11b70:	ldr	r3, [sp, #68]	; 0x44
   11b74:	cmp	r3, #0
   11b78:	beq	12b8c <abort@plt+0x1eb8>
   11b7c:	ldr	r3, [sp, #40]	; 0x28
   11b80:	cmp	r3, #0
   11b84:	bne	12c08 <abort@plt+0x1f34>
   11b88:	ldr	r3, [sp, #72]	; 0x48
   11b8c:	adds	r3, r3, #0
   11b90:	movne	r3, #1
   11b94:	cmp	sl, #0
   11b98:	movne	r3, #0
   11b9c:	cmp	r3, #0
   11ba0:	ldreq	r2, [sp, #68]	; 0x44
   11ba4:	beq	12b8c <abort@plt+0x1eb8>
   11ba8:	ldr	sl, [sp, #72]	; 0x48
   11bac:	str	r3, [sp, #68]	; 0x44
   11bb0:	ldr	r3, [pc, #1792]	; 122b8 <abort@plt+0x15e4>
   11bb4:	mov	r2, #39	; 0x27
   11bb8:	mov	r4, #1
   11bbc:	str	r3, [sp, #60]	; 0x3c
   11bc0:	mov	r3, #0
   11bc4:	strb	r2, [fp]
   11bc8:	str	r4, [sp, #52]	; 0x34
   11bcc:	mov	r8, #2
   11bd0:	str	r3, [sp, #32]
   11bd4:	b	1159c <abort@plt+0x8c8>
   11bd8:	mov	r7, #0
   11bdc:	cmp	fp, #2
   11be0:	beq	12518 <abort@plt+0x1844>
   11be4:	ldr	r3, [sp, #52]	; 0x34
   11be8:	ldr	r2, [sp, #28]
   11bec:	ldr	r1, [sp, #32]
   11bf0:	cmp	r3, #0
   11bf4:	andne	r2, r2, r1
   11bf8:	moveq	r2, #0
   11bfc:	cmp	r2, #0
   11c00:	moveq	r5, #92	; 0x5c
   11c04:	moveq	r3, r5
   11c08:	bne	12524 <abort@plt+0x1850>
   11c0c:	ldr	r1, [sp, #28]
   11c10:	cmp	r1, #0
   11c14:	bne	12c94 <abort@plt+0x1fc0>
   11c18:	mov	r6, #0
   11c1c:	b	11a34 <abort@plt+0xd60>
   11c20:	mov	r7, #0
   11c24:	cmp	fp, #2
   11c28:	beq	12588 <abort@plt+0x18b4>
   11c2c:	cmp	fp, #5
   11c30:	beq	1254c <abort@plt+0x1878>
   11c34:	sub	r2, fp, #2
   11c38:	mov	r6, #0
   11c3c:	clz	r2, r2
   11c40:	mov	r5, #63	; 0x3f
   11c44:	lsr	r2, r2, #5
   11c48:	b	11a34 <abort@plt+0xd60>
   11c4c:	mov	r7, #0
   11c50:	cmp	fp, #2
   11c54:	strne	r6, [sp, #68]	; 0x44
   11c58:	movne	r2, #0
   11c5c:	movne	r5, #39	; 0x27
   11c60:	bne	11a34 <abort@plt+0xd60>
   11c64:	ldr	r3, [sp, #32]
   11c68:	cmp	r3, #0
   11c6c:	bne	12968 <abort@plt+0x1c94>
   11c70:	cmp	sl, #0
   11c74:	ldr	r3, [sp, #72]	; 0x48
   11c78:	clz	r3, r3
   11c7c:	lsr	r3, r3, #5
   11c80:	moveq	r3, #0
   11c84:	cmp	r3, #0
   11c88:	bne	1289c <abort@plt+0x1bc8>
   11c8c:	cmp	sl, r4
   11c90:	movhi	r3, #39	; 0x27
   11c94:	strbhi	r3, [r8, r4]
   11c98:	add	r3, r4, #1
   11c9c:	cmp	sl, r3
   11ca0:	movhi	r2, #92	; 0x5c
   11ca4:	strbhi	r2, [r8, r3]
   11ca8:	add	r3, r4, #2
   11cac:	cmp	sl, r3
   11cb0:	movhi	r2, #39	; 0x27
   11cb4:	strbhi	r2, [r8, r3]
   11cb8:	mov	r3, #0
   11cbc:	cmp	r7, #0
   11cc0:	add	r4, r4, #3
   11cc4:	str	r3, [sp, #44]	; 0x2c
   11cc8:	str	r6, [sp, #68]	; 0x44
   11ccc:	mov	r5, #39	; 0x27
   11cd0:	bne	11a84 <abort@plt+0xdb0>
   11cd4:	ldr	r2, [sp, #44]	; 0x2c
   11cd8:	eor	r3, r3, #1
   11cdc:	and	r3, r3, r2
   11ce0:	add	r9, r9, #1
   11ce4:	uxtb	r3, r3
   11ce8:	cmp	r3, #0
   11cec:	beq	11af4 <abort@plt+0xe20>
   11cf0:	cmp	sl, r4
   11cf4:	movhi	r3, #39	; 0x27
   11cf8:	strbhi	r3, [r8, r4]
   11cfc:	add	r3, r4, #1
   11d00:	cmp	sl, r3
   11d04:	movhi	r2, #39	; 0x27
   11d08:	strbhi	r2, [r8, r3]
   11d0c:	mov	r3, #0
   11d10:	add	r4, r4, #2
   11d14:	str	r3, [sp, #44]	; 0x2c
   11d18:	b	11af4 <abort@plt+0xe20>
   11d1c:	mov	r3, #114	; 0x72
   11d20:	ldr	r1, [sp, #32]
   11d24:	sub	r2, fp, #2
   11d28:	clz	r2, r2
   11d2c:	lsr	r2, r2, #5
   11d30:	tst	r2, r1
   11d34:	beq	11c0c <abort@plt+0xf38>
   11d38:	mov	fp, r8
   11d3c:	mov	r8, #2
   11d40:	ldr	r3, [sp, #28]
   11d44:	cmp	r3, #0
   11d48:	movne	r8, #4
   11d4c:	ldr	r3, [sp, #164]	; 0xa4
   11d50:	mov	ip, #0
   11d54:	bic	r3, r3, #2
   11d58:	str	r3, [sp, #4]
   11d5c:	ldr	r3, [sp, #76]	; 0x4c
   11d60:	str	r8, [sp]
   11d64:	str	r3, [sp, #16]
   11d68:	ldr	r3, [sp, #80]	; 0x50
   11d6c:	ldr	r2, [sp, #36]	; 0x24
   11d70:	str	r3, [sp, #12]
   11d74:	mov	r1, sl
   11d78:	ldr	r3, [sp, #24]
   11d7c:	mov	r0, fp
   11d80:	str	ip, [sp, #8]
   11d84:	bl	114a4 <abort@plt+0x7d0>
   11d88:	mov	r4, r0
   11d8c:	ldr	r3, [pc, #1304]	; 122ac <abort@plt+0x15d8>
   11d90:	ldr	r2, [sp, #116]	; 0x74
   11d94:	mov	r0, r4
   11d98:	ldr	r3, [r3]
   11d9c:	cmp	r2, r3
   11da0:	bne	12c90 <abort@plt+0x1fbc>
   11da4:	add	sp, sp, #124	; 0x7c
   11da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dac:	mov	r5, #110	; 0x6e
   11db0:	ldr	r3, [sp, #32]
   11db4:	mov	r2, #0
   11db8:	cmp	r3, #0
   11dbc:	mov	r6, r2
   11dc0:	beq	11a9c <abort@plt+0xdc8>
   11dc4:	str	fp, [sp, #160]	; 0xa0
   11dc8:	mov	fp, r8
   11dcc:	ldr	r8, [sp, #160]	; 0xa0
   11dd0:	mov	r3, r2
   11dd4:	ldr	r2, [sp, #28]
   11dd8:	and	r2, r2, r3
   11ddc:	str	r2, [sp, #28]
   11de0:	b	11d40 <abort@plt+0x106c>
   11de4:	mov	r5, #116	; 0x74
   11de8:	b	11db0 <abort@plt+0x10dc>
   11dec:	mov	r5, #102	; 0x66
   11df0:	ldr	r3, [sp, #32]
   11df4:	cmp	r3, #0
   11df8:	bne	129a4 <abort@plt+0x1cd0>
   11dfc:	mov	r6, #0
   11e00:	b	11ae0 <abort@plt+0xe0c>
   11e04:	mov	r5, #118	; 0x76
   11e08:	b	11df0 <abort@plt+0x111c>
   11e0c:	mov	r7, #0
   11e10:	mov	r6, #0
   11e14:	b	11a50 <abort@plt+0xd7c>
   11e18:	ldr	r3, [sp, #32]
   11e1c:	cmp	r3, #0
   11e20:	bne	12be8 <abort@plt+0x1f14>
   11e24:	mov	r7, r3
   11e28:	ldr	r3, [sp, #44]	; 0x2c
   11e2c:	sub	r2, fp, #2
   11e30:	eor	r3, r3, #1
   11e34:	clz	r2, r2
   11e38:	lsr	r2, r2, #5
   11e3c:	ands	r3, r2, r3
   11e40:	beq	12888 <abort@plt+0x1bb4>
   11e44:	cmp	sl, r4
   11e48:	movhi	r1, #39	; 0x27
   11e4c:	strbhi	r1, [r8, r4]
   11e50:	add	r1, r4, #1
   11e54:	cmp	sl, r1
   11e58:	movhi	r0, #36	; 0x24
   11e5c:	strbhi	r0, [r8, r1]
   11e60:	add	r1, r4, #2
   11e64:	cmp	sl, r1
   11e68:	movhi	r0, #39	; 0x27
   11e6c:	strbhi	r0, [r8, r1]
   11e70:	add	r1, r4, #3
   11e74:	cmp	sl, r1
   11e78:	bls	128e8 <abort@plt+0x1c14>
   11e7c:	mov	r4, r1
   11e80:	mov	r1, #92	; 0x5c
   11e84:	strb	r1, [r8, r4]
   11e88:	mov	r1, r4
   11e8c:	str	r3, [sp, #44]	; 0x2c
   11e90:	cmp	fp, #2
   11e94:	add	r4, r4, #1
   11e98:	beq	12930 <abort@plt+0x1c5c>
   11e9c:	ldr	r0, [sp, #24]
   11ea0:	add	r3, r9, #1
   11ea4:	cmp	r3, r0
   11ea8:	bcs	11ec0 <abort@plt+0x11ec>
   11eac:	ldr	r0, [sp, #36]	; 0x24
   11eb0:	ldrb	r3, [r0, r3]
   11eb4:	sub	r3, r3, #48	; 0x30
   11eb8:	cmp	r3, #9
   11ebc:	bls	12940 <abort@plt+0x1c6c>
   11ec0:	mov	r5, #48	; 0x30
   11ec4:	ldr	r3, [sp, #28]
   11ec8:	eor	r3, r3, #1
   11ecc:	orrs	r2, r2, r3
   11ed0:	mov	r3, r6
   11ed4:	moveq	r6, r2
   11ed8:	beq	11a54 <abort@plt+0xd80>
   11edc:	mov	r6, #0
   11ee0:	b	11a7c <abort@plt+0xda8>
   11ee4:	mov	r2, #0
   11ee8:	mov	r6, r2
   11eec:	mov	r5, #98	; 0x62
   11ef0:	b	11a9c <abort@plt+0xdc8>
   11ef4:	mov	r5, #97	; 0x61
   11ef8:	b	11dfc <abort@plt+0x1128>
   11efc:	mov	r3, r7
   11f00:	mov	r6, r7
   11f04:	mov	r2, #0
   11f08:	mov	r7, r3
   11f0c:	mov	r5, #32
   11f10:	b	11a34 <abort@plt+0xd60>
   11f14:	cmp	r9, #0
   11f18:	mov	r3, r7
   11f1c:	bne	124e4 <abort@plt+0x1810>
   11f20:	mov	r6, r7
   11f24:	mov	r2, r9
   11f28:	mov	r7, r3
   11f2c:	b	11a34 <abort@plt+0xd60>
   11f30:	mov	r6, r7
   11f34:	b	11a50 <abort@plt+0xd7c>
   11f38:	mov	r7, #0
   11f3c:	ldr	r3, [sp, #64]	; 0x40
   11f40:	cmp	r3, #1
   11f44:	bne	125a0 <abort@plt+0x18cc>
   11f48:	bl	10c14 <__ctype_b_loc@plt>
   11f4c:	ldr	r2, [sp, #64]	; 0x40
   11f50:	sxth	r3, r5
   11f54:	mov	ip, r2
   11f58:	lsl	r3, r3, #1
   11f5c:	ldr	r2, [r0]
   11f60:	ldrh	r3, [r2, r3]
   11f64:	and	r3, r3, #16384	; 0x4000
   11f68:	cmp	r3, #0
   11f6c:	ldr	r3, [sp, #28]
   11f70:	movne	r6, #1
   11f74:	moveq	r6, #0
   11f78:	movne	r2, #0
   11f7c:	andeq	r2, r3, #1
   11f80:	cmp	r2, #0
   11f84:	bne	128b0 <abort@plt+0x1bdc>
   11f88:	sub	r2, fp, #2
   11f8c:	clz	r2, r2
   11f90:	lsr	r2, r2, #5
   11f94:	b	11a34 <abort@plt+0xd60>
   11f98:	cmp	r4, #0
   11f9c:	bne	12c5c <abort@plt+0x1f88>
   11fa0:	str	r4, [sp, #28]
   11fa4:	cmp	sl, #0
   11fa8:	bne	12ca0 <abort@plt+0x1fcc>
   11fac:	ldr	r3, [pc, #772]	; 122b8 <abort@plt+0x15e4>
   11fb0:	mov	r4, #1
   11fb4:	str	r4, [sp, #40]	; 0x28
   11fb8:	str	r3, [sp, #60]	; 0x3c
   11fbc:	str	r4, [sp, #52]	; 0x34
   11fc0:	str	sl, [sp, #72]	; 0x48
   11fc4:	str	sl, [sp, #68]	; 0x44
   11fc8:	str	sl, [sp, #44]	; 0x2c
   11fcc:	str	sl, [sp, #32]
   11fd0:	mov	r8, #2
   11fd4:	b	1159c <abort@plt+0x8c8>
   11fd8:	ldr	r3, [sp, #36]	; 0x24
   11fdc:	ldrb	r5, [r3, r9]
   11fe0:	cmp	r5, #126	; 0x7e
   11fe4:	ldrls	pc, [pc, r5, lsl #2]
   11fe8:	b	11f3c <abort@plt+0x1268>
   11fec:	andeq	r2, r1, r0, lsr #4
   11ff0:	andeq	r1, r1, ip, lsr pc
   11ff4:	andeq	r1, r1, ip, lsr pc
   11ff8:	andeq	r1, r1, ip, lsr pc
   11ffc:	andeq	r1, r1, ip, lsr pc
   12000:	andeq	r1, r1, ip, lsr pc
   12004:	andeq	r1, r1, ip, lsr pc
   12008:	andeq	r2, r1, ip, lsl #4
   1200c:	strdeq	r2, [r1], -r8
   12010:	strdeq	r2, [r1], -r0
   12014:	andeq	r2, r1, r8, ror #3
   12018:	muleq	r1, r8, r2
   1201c:	andeq	r2, r1, r4, lsl #5
   12020:	andeq	r1, r1, ip, lsl sp
   12024:	andeq	r1, r1, ip, lsr pc
   12028:	andeq	r1, r1, ip, lsr pc
   1202c:	andeq	r1, r1, ip, lsr pc
   12030:	andeq	r1, r1, ip, lsr pc
   12034:	andeq	r1, r1, ip, lsr pc
   12038:	andeq	r1, r1, ip, lsr pc
   1203c:	andeq	r1, r1, ip, lsr pc
   12040:	andeq	r1, r1, ip, lsr pc
   12044:	andeq	r1, r1, ip, lsr pc
   12048:	andeq	r1, r1, ip, lsr pc
   1204c:	andeq	r1, r1, ip, lsr pc
   12050:	andeq	r1, r1, ip, lsr pc
   12054:	andeq	r1, r1, ip, lsr pc
   12058:	andeq	r1, r1, ip, lsr pc
   1205c:	andeq	r1, r1, ip, lsr pc
   12060:	andeq	r1, r1, ip, lsr pc
   12064:	andeq	r1, r1, ip, lsr pc
   12068:	andeq	r1, r1, ip, lsr pc
   1206c:	andeq	r2, r1, r4, ror r2
   12070:	andeq	r2, r1, r0, ror #4
   12074:	andeq	r2, r1, r0, ror #4
   12078:	andeq	r2, r1, r0, asr r2
   1207c:	andeq	r2, r1, r0, ror #4
   12080:	andeq	r1, r1, r8, lsl #31
   12084:	andeq	r2, r1, r0, ror #4
   12088:	andeq	r1, r1, r0, asr ip
   1208c:	andeq	r2, r1, r0, ror #4
   12090:	andeq	r2, r1, r0, ror #4
   12094:	andeq	r2, r1, r0, ror #4
   12098:	andeq	r1, r1, r8, lsl #31
   1209c:	andeq	r1, r1, r8, lsl #31
   120a0:	andeq	r1, r1, r8, lsl #31
   120a4:	andeq	r1, r1, r8, lsl #31
   120a8:	andeq	r1, r1, r8, lsl #31
   120ac:	andeq	r1, r1, r8, lsl #31
   120b0:	andeq	r1, r1, r8, lsl #31
   120b4:	andeq	r1, r1, r8, lsl #31
   120b8:	andeq	r1, r1, r8, lsl #31
   120bc:	andeq	r1, r1, r8, lsl #31
   120c0:	andeq	r1, r1, r8, lsl #31
   120c4:	andeq	r1, r1, r8, lsl #31
   120c8:	andeq	r1, r1, r8, lsl #31
   120cc:	andeq	r1, r1, r8, lsl #31
   120d0:	andeq	r1, r1, r8, lsl #31
   120d4:	andeq	r1, r1, r8, lsl #31
   120d8:	andeq	r2, r1, r0, ror #4
   120dc:	andeq	r2, r1, r0, ror #4
   120e0:	andeq	r2, r1, r0, ror #4
   120e4:	andeq	r2, r1, r0, ror #4
   120e8:	andeq	r1, r1, r4, lsr #24
   120ec:	andeq	r1, r1, ip, lsr pc
   120f0:	andeq	r1, r1, r8, lsl #31
   120f4:	andeq	r1, r1, r8, lsl #31
   120f8:	andeq	r1, r1, r8, lsl #31
   120fc:	andeq	r1, r1, r8, lsl #31
   12100:	andeq	r1, r1, r8, lsl #31
   12104:	andeq	r1, r1, r8, lsl #31
   12108:	andeq	r1, r1, r8, lsl #31
   1210c:	andeq	r1, r1, r8, lsl #31
   12110:	andeq	r1, r1, r8, lsl #31
   12114:	andeq	r1, r1, r8, lsl #31
   12118:	andeq	r1, r1, r8, lsl #31
   1211c:	andeq	r1, r1, r8, lsl #31
   12120:	andeq	r1, r1, r8, lsl #31
   12124:	andeq	r1, r1, r8, lsl #31
   12128:	andeq	r1, r1, r8, lsl #31
   1212c:	andeq	r1, r1, r8, lsl #31
   12130:	andeq	r1, r1, r8, lsl #31
   12134:	andeq	r1, r1, r8, lsl #31
   12138:	andeq	r1, r1, r8, lsl #31
   1213c:	andeq	r1, r1, r8, lsl #31
   12140:	andeq	r1, r1, r8, lsl #31
   12144:	andeq	r1, r1, r8, lsl #31
   12148:	andeq	r1, r1, r8, lsl #31
   1214c:	andeq	r1, r1, r8, lsl #31
   12150:	andeq	r1, r1, r8, lsl #31
   12154:	andeq	r1, r1, r8, lsl #31
   12158:	andeq	r2, r1, r0, ror #4
   1215c:	ldrdeq	r1, [r1], -ip
   12160:	andeq	r1, r1, r8, lsl #31
   12164:	andeq	r2, r1, r0, ror #4
   12168:	andeq	r1, r1, r8, lsl #31
   1216c:	andeq	r2, r1, r0, ror #4
   12170:	andeq	r1, r1, r8, lsl #31
   12174:	andeq	r1, r1, r8, lsl #31
   12178:	andeq	r1, r1, r8, lsl #31
   1217c:	andeq	r1, r1, r8, lsl #31
   12180:	andeq	r1, r1, r8, lsl #31
   12184:	andeq	r1, r1, r8, lsl #31
   12188:	andeq	r1, r1, r8, lsl #31
   1218c:	andeq	r1, r1, r8, lsl #31
   12190:	andeq	r1, r1, r8, lsl #31
   12194:	andeq	r1, r1, r8, lsl #31
   12198:	andeq	r1, r1, r8, lsl #31
   1219c:	andeq	r1, r1, r8, lsl #31
   121a0:	andeq	r1, r1, r8, lsl #31
   121a4:	andeq	r1, r1, r8, lsl #31
   121a8:	andeq	r1, r1, r8, lsl #31
   121ac:	andeq	r1, r1, r8, lsl #31
   121b0:	andeq	r1, r1, r8, lsl #31
   121b4:	andeq	r1, r1, r8, lsl #31
   121b8:	andeq	r1, r1, r8, lsl #31
   121bc:	andeq	r1, r1, r8, lsl #31
   121c0:	andeq	r1, r1, r8, lsl #31
   121c4:	andeq	r1, r1, r8, lsl #31
   121c8:	andeq	r1, r1, r8, lsl #31
   121cc:	andeq	r1, r1, r8, lsl #31
   121d0:	andeq	r1, r1, r8, lsl #31
   121d4:	andeq	r1, r1, r8, lsl #31
   121d8:	strdeq	r1, [r1], -r4
   121dc:	andeq	r2, r1, r0, ror #4
   121e0:	strdeq	r1, [r1], -r4
   121e4:	andeq	r2, r1, r0, asr r2
   121e8:	mov	r3, #110	; 0x6e
   121ec:	b	11d20 <abort@plt+0x104c>
   121f0:	mov	r3, #116	; 0x74
   121f4:	b	11d20 <abort@plt+0x104c>
   121f8:	sub	r2, fp, #2
   121fc:	mov	r3, #98	; 0x62
   12200:	clz	r2, r2
   12204:	lsr	r2, r2, #5
   12208:	b	11c0c <abort@plt+0xf38>
   1220c:	sub	r2, fp, #2
   12210:	mov	r3, #97	; 0x61
   12214:	clz	r2, r2
   12218:	lsr	r2, r2, #5
   1221c:	b	11c0c <abort@plt+0xf38>
   12220:	ldr	r3, [sp, #28]
   12224:	cmp	r3, #0
   12228:	bne	11e18 <abort@plt+0x1144>
   1222c:	ldr	r3, [sp, #164]	; 0xa4
   12230:	tst	r3, #1
   12234:	bne	128a8 <abort@plt+0x1bd4>
   12238:	ldr	r6, [sp, #28]
   1223c:	sub	r2, fp, #2
   12240:	mov	r7, r6
   12244:	clz	r2, r2
   12248:	lsr	r2, r2, #5
   1224c:	b	11a34 <abort@plt+0xd60>
   12250:	sub	r2, fp, #2
   12254:	clz	r2, r2
   12258:	lsr	r2, r2, #5
   1225c:	b	11a20 <abort@plt+0xd4c>
   12260:	sub	r2, fp, #2
   12264:	mov	r6, #0
   12268:	clz	r2, r2
   1226c:	lsr	r2, r2, #5
   12270:	b	11a28 <abort@plt+0xd54>
   12274:	sub	r2, fp, #2
   12278:	clz	r2, r2
   1227c:	lsr	r2, r2, #5
   12280:	b	11a28 <abort@plt+0xd54>
   12284:	sub	r2, fp, #2
   12288:	mov	r3, #102	; 0x66
   1228c:	clz	r2, r2
   12290:	lsr	r2, r2, #5
   12294:	b	11c0c <abort@plt+0xf38>
   12298:	sub	r2, fp, #2
   1229c:	mov	r3, #118	; 0x76
   122a0:	clz	r2, r2
   122a4:	lsr	r2, r2, #5
   122a8:	b	11c0c <abort@plt+0xf38>
   122ac:	andeq	r4, r2, r8, lsl #30
   122b0:	ldrdeq	r4, [r1], -r0
   122b4:			; <UNDEFINED> instruction: 0x000146b8
   122b8:	andeq	r4, r1, ip, asr #13
   122bc:	ldr	r3, [sp, #48]	; 0x30
   122c0:	ldrb	r5, [r3]
   122c4:	cmp	r5, #126	; 0x7e
   122c8:	ldrls	pc, [pc, r5, lsl #2]
   122cc:	b	11f38 <abort@plt+0x1264>
   122d0:	andeq	r1, r1, r8, lsl lr
   122d4:	andeq	r1, r1, r8, lsr pc
   122d8:	andeq	r1, r1, r8, lsr pc
   122dc:	andeq	r1, r1, r8, lsr pc
   122e0:	andeq	r1, r1, r8, lsr pc
   122e4:	andeq	r1, r1, r8, lsr pc
   122e8:	andeq	r1, r1, r8, lsr pc
   122ec:	andeq	r2, r1, r0, lsl r5
   122f0:	andeq	r2, r1, r8, lsl #10
   122f4:	andeq	r1, r1, r4, ror #27
   122f8:	andeq	r1, r1, ip, lsr #27
   122fc:	andeq	r1, r1, r4, lsl #28
   12300:	andeq	r1, r1, ip, ror #27
   12304:	strdeq	r2, [r1], -ip
   12308:	andeq	r1, r1, r8, lsr pc
   1230c:	andeq	r1, r1, r8, lsr pc
   12310:	andeq	r1, r1, r8, lsr pc
   12314:	andeq	r1, r1, r8, lsr pc
   12318:	andeq	r1, r1, r8, lsr pc
   1231c:	andeq	r1, r1, r8, lsr pc
   12320:	andeq	r1, r1, r8, lsr pc
   12324:	andeq	r1, r1, r8, lsr pc
   12328:	andeq	r1, r1, r8, lsr pc
   1232c:	andeq	r1, r1, r8, lsr pc
   12330:	andeq	r1, r1, r8, lsr pc
   12334:	andeq	r1, r1, r8, lsr pc
   12338:	andeq	r1, r1, r8, lsr pc
   1233c:	andeq	r1, r1, r8, lsr pc
   12340:	andeq	r1, r1, r8, lsr pc
   12344:	andeq	r1, r1, r8, lsr pc
   12348:	andeq	r1, r1, r8, lsr pc
   1234c:	andeq	r1, r1, r8, lsr pc
   12350:	strdeq	r2, [r1], -r4
   12354:	andeq	r1, r1, ip, lsl #28
   12358:	andeq	r1, r1, ip, lsl #28
   1235c:	ldrdeq	r2, [r1], -r8
   12360:	andeq	r1, r1, ip, lsl #28
   12364:	andeq	r2, r1, ip, asr #9
   12368:	andeq	r1, r1, ip, lsl #28
   1236c:	andeq	r1, r1, ip, asr #24
   12370:	andeq	r1, r1, ip, lsl #28
   12374:	andeq	r1, r1, ip, lsl #28
   12378:	andeq	r1, r1, ip, lsl #28
   1237c:	andeq	r2, r1, ip, asr #9
   12380:	andeq	r2, r1, ip, asr #9
   12384:	andeq	r2, r1, ip, asr #9
   12388:	andeq	r2, r1, ip, asr #9
   1238c:	andeq	r2, r1, ip, asr #9
   12390:	andeq	r2, r1, ip, asr #9
   12394:	andeq	r2, r1, ip, asr #9
   12398:	andeq	r2, r1, ip, asr #9
   1239c:	andeq	r2, r1, ip, asr #9
   123a0:	andeq	r2, r1, ip, asr #9
   123a4:	andeq	r2, r1, ip, asr #9
   123a8:	andeq	r2, r1, ip, asr #9
   123ac:	andeq	r2, r1, ip, asr #9
   123b0:	andeq	r2, r1, ip, asr #9
   123b4:	andeq	r2, r1, ip, asr #9
   123b8:	andeq	r2, r1, ip, asr #9
   123bc:	andeq	r1, r1, ip, lsl #28
   123c0:	andeq	r1, r1, ip, lsl #28
   123c4:	andeq	r1, r1, ip, lsl #28
   123c8:	andeq	r1, r1, ip, lsl #28
   123cc:	andeq	r1, r1, r0, lsr #24
   123d0:	andeq	r1, r1, r8, lsr pc
   123d4:	andeq	r2, r1, ip, asr #9
   123d8:	andeq	r2, r1, ip, asr #9
   123dc:	andeq	r2, r1, ip, asr #9
   123e0:	andeq	r2, r1, ip, asr #9
   123e4:	andeq	r2, r1, ip, asr #9
   123e8:	andeq	r2, r1, ip, asr #9
   123ec:	andeq	r2, r1, ip, asr #9
   123f0:	andeq	r2, r1, ip, asr #9
   123f4:	andeq	r2, r1, ip, asr #9
   123f8:	andeq	r2, r1, ip, asr #9
   123fc:	andeq	r2, r1, ip, asr #9
   12400:	andeq	r2, r1, ip, asr #9
   12404:	andeq	r2, r1, ip, asr #9
   12408:	andeq	r2, r1, ip, asr #9
   1240c:	andeq	r2, r1, ip, asr #9
   12410:	andeq	r2, r1, ip, asr #9
   12414:	andeq	r2, r1, ip, asr #9
   12418:	andeq	r2, r1, ip, asr #9
   1241c:	andeq	r2, r1, ip, asr #9
   12420:	andeq	r2, r1, ip, asr #9
   12424:	andeq	r2, r1, ip, asr #9
   12428:	andeq	r2, r1, ip, asr #9
   1242c:	andeq	r2, r1, ip, asr #9
   12430:	andeq	r2, r1, ip, asr #9
   12434:	andeq	r2, r1, ip, asr #9
   12438:	andeq	r2, r1, ip, asr #9
   1243c:	andeq	r1, r1, ip, lsl #28
   12440:	ldrdeq	r1, [r1], -r8
   12444:	andeq	r2, r1, ip, asr #9
   12448:	andeq	r1, r1, ip, lsl #28
   1244c:	andeq	r2, r1, ip, asr #9
   12450:	andeq	r1, r1, ip, lsl #28
   12454:	andeq	r2, r1, ip, asr #9
   12458:	andeq	r2, r1, ip, asr #9
   1245c:	andeq	r2, r1, ip, asr #9
   12460:	andeq	r2, r1, ip, asr #9
   12464:	andeq	r2, r1, ip, asr #9
   12468:	andeq	r2, r1, ip, asr #9
   1246c:	andeq	r2, r1, ip, asr #9
   12470:	andeq	r2, r1, ip, asr #9
   12474:	andeq	r2, r1, ip, asr #9
   12478:	andeq	r2, r1, ip, asr #9
   1247c:	andeq	r2, r1, ip, asr #9
   12480:	andeq	r2, r1, ip, asr #9
   12484:	andeq	r2, r1, ip, asr #9
   12488:	andeq	r2, r1, ip, asr #9
   1248c:	andeq	r2, r1, ip, asr #9
   12490:	andeq	r2, r1, ip, asr #9
   12494:	andeq	r2, r1, ip, asr #9
   12498:	andeq	r2, r1, ip, asr #9
   1249c:	andeq	r2, r1, ip, asr #9
   124a0:	andeq	r2, r1, ip, asr #9
   124a4:	andeq	r2, r1, ip, asr #9
   124a8:	andeq	r2, r1, ip, asr #9
   124ac:	andeq	r2, r1, ip, asr #9
   124b0:	andeq	r2, r1, ip, asr #9
   124b4:	andeq	r2, r1, ip, asr #9
   124b8:	andeq	r2, r1, ip, asr #9
   124bc:	strdeq	r1, [r1], -r0
   124c0:	andeq	r1, r1, ip, lsl #28
   124c4:	strdeq	r1, [r1], -r0
   124c8:	ldrdeq	r2, [r1], -r8
   124cc:	mov	r6, r7
   124d0:	mov	r7, #0
   124d4:	b	11a50 <abort@plt+0xd7c>
   124d8:	cmp	r9, #0
   124dc:	mov	r3, #0
   124e0:	beq	11f20 <abort@plt+0x124c>
   124e4:	mov	r6, #0
   124e8:	mov	r7, r3
   124ec:	mov	r3, r6
   124f0:	b	11a54 <abort@plt+0xd80>
   124f4:	mov	r3, #0
   124f8:	b	11f00 <abort@plt+0x122c>
   124fc:	mov	r7, #0
   12500:	mov	r3, #114	; 0x72
   12504:	b	11d20 <abort@plt+0x104c>
   12508:	mov	r5, #98	; 0x62
   1250c:	b	11db0 <abort@plt+0x10dc>
   12510:	mov	r5, #97	; 0x61
   12514:	b	11df0 <abort@plt+0x111c>
   12518:	ldr	r3, [sp, #32]
   1251c:	cmp	r3, #0
   12520:	bne	12968 <abort@plt+0x1c94>
   12524:	add	r9, r9, #1
   12528:	ldr	r3, [sp, #44]	; 0x2c
   1252c:	mov	r6, #0
   12530:	mov	r5, #92	; 0x5c
   12534:	b	11ce8 <abort@plt+0x1014>
   12538:	ldr	r3, [sp, #36]	; 0x24
   1253c:	ldrb	r3, [r3, #1]
   12540:	adds	r3, r3, #0
   12544:	movne	r3, #1
   12548:	b	11a0c <abort@plt+0xd38>
   1254c:	ldr	r3, [sp, #164]	; 0xa4
   12550:	ands	r3, r3, #4
   12554:	beq	12578 <abort@plt+0x18a4>
   12558:	ldr	r2, [sp, #24]
   1255c:	add	r3, r9, #2
   12560:	cmp	r3, r2
   12564:	bcs	12578 <abort@plt+0x18a4>
   12568:	ldr	r2, [sp, #48]	; 0x30
   1256c:	ldrb	r5, [r2, #1]
   12570:	cmp	r5, #63	; 0x3f
   12574:	beq	129dc <abort@plt+0x1d08>
   12578:	mov	r2, #0
   1257c:	mov	r6, r2
   12580:	mov	r5, #63	; 0x3f
   12584:	b	11a34 <abort@plt+0xd60>
   12588:	ldr	r3, [sp, #32]
   1258c:	cmp	r3, #0
   12590:	bne	12968 <abort@plt+0x1c94>
   12594:	mov	r6, r3
   12598:	mov	r5, #63	; 0x3f
   1259c:	b	11a7c <abort@plt+0xda8>
   125a0:	ldr	r3, [sp, #24]
   125a4:	cmn	r3, #1
   125a8:	mov	r3, #0
   125ac:	str	r3, [sp, #108]	; 0x6c
   125b0:	str	r3, [sp, #112]	; 0x70
   125b4:	bne	125c4 <abort@plt+0x18f0>
   125b8:	ldr	r0, [sp, #36]	; 0x24
   125bc:	bl	10c2c <strlen@plt>
   125c0:	str	r0, [sp, #24]
   125c4:	mov	r3, #0
   125c8:	str	sl, [sp, #88]	; 0x58
   125cc:	ldr	sl, [sp, #36]	; 0x24
   125d0:	str	r5, [sp, #92]	; 0x5c
   125d4:	mov	r5, r3
   125d8:	str	r7, [sp, #96]	; 0x60
   125dc:	str	r4, [sp, #100]	; 0x64
   125e0:	str	r8, [sp, #84]	; 0x54
   125e4:	ldr	r3, [sp, #24]
   125e8:	add	r4, r9, r5
   125ec:	add	r7, sl, r4
   125f0:	sub	r2, r3, r4
   125f4:	mov	r1, r7
   125f8:	add	r3, sp, #108	; 0x6c
   125fc:	add	r0, sp, #104	; 0x68
   12600:	bl	13cdc <abort@plt+0x3008>
   12604:	subs	r8, r0, #0
   12608:	beq	12658 <abort@plt+0x1984>
   1260c:	cmn	r8, #1
   12610:	beq	129b8 <abort@plt+0x1ce4>
   12614:	cmn	r8, #2
   12618:	beq	12ad8 <abort@plt+0x1e04>
   1261c:	ldr	r3, [sp, #32]
   12620:	cmp	fp, #2
   12624:	movne	r3, #0
   12628:	andeq	r3, r3, #1
   1262c:	cmp	r3, #0
   12630:	bne	127b8 <abort@plt+0x1ae4>
   12634:	ldr	r0, [sp, #104]	; 0x68
   12638:	bl	10b90 <iswprint@plt>
   1263c:	add	r5, r5, r8
   12640:	cmp	r0, #0
   12644:	add	r0, sp, #108	; 0x6c
   12648:	moveq	r6, #0
   1264c:	bl	10b48 <mbsinit@plt>
   12650:	cmp	r0, #0
   12654:	beq	125e4 <abort@plt+0x1910>
   12658:	ldr	r3, [sp, #28]
   1265c:	mov	ip, r5
   12660:	eor	r2, r6, #1
   12664:	ldr	r5, [sp, #92]	; 0x5c
   12668:	ldr	r7, [sp, #96]	; 0x60
   1266c:	ldr	r4, [sp, #100]	; 0x64
   12670:	ldr	r8, [sp, #84]	; 0x54
   12674:	ldr	sl, [sp, #88]	; 0x58
   12678:	and	r2, r2, r3
   1267c:	cmp	ip, #1
   12680:	bls	11f80 <abort@plt+0x12ac>
   12684:	add	r1, ip, r9
   12688:	ldr	lr, [sp, #48]	; 0x30
   1268c:	mov	r0, #0
   12690:	str	r6, [sp, #48]	; 0x30
   12694:	mov	ip, #39	; 0x27
   12698:	ldr	r6, [sp, #44]	; 0x2c
   1269c:	b	12754 <abort@plt+0x1a80>
   126a0:	ldr	r0, [sp, #32]
   126a4:	sub	r3, fp, #2
   126a8:	cmp	r0, #0
   126ac:	clz	r3, r3
   126b0:	lsr	r3, r3, #5
   126b4:	bne	128bc <abort@plt+0x1be8>
   126b8:	eor	r0, r6, #1
   126bc:	ands	r3, r3, r0
   126c0:	beq	126f0 <abort@plt+0x1a1c>
   126c4:	add	r0, r4, #1
   126c8:	cmp	sl, r4
   126cc:	strbhi	ip, [r8, r4]
   126d0:	cmp	sl, r0
   126d4:	movhi	r6, #36	; 0x24
   126d8:	strbhi	r6, [r8, r0]
   126dc:	add	r0, r4, #2
   126e0:	mov	r6, r3
   126e4:	add	r4, r4, #3
   126e8:	cmp	sl, r0
   126ec:	strbhi	ip, [r8, r0]
   126f0:	cmp	sl, r4
   126f4:	movhi	r3, #92	; 0x5c
   126f8:	strbhi	r3, [r8, r4]
   126fc:	add	r3, r4, #1
   12700:	cmp	sl, r3
   12704:	lsrhi	r0, r5, #6
   12708:	addhi	r0, r0, #48	; 0x30
   1270c:	strbhi	r0, [r8, r3]
   12710:	add	r0, r4, #2
   12714:	cmp	sl, r0
   12718:	lsrhi	r3, r5, #3
   1271c:	andhi	r3, r3, #7
   12720:	addhi	r3, r3, #48	; 0x30
   12724:	add	r9, r9, #1
   12728:	strbhi	r3, [r8, r0]
   1272c:	and	r5, r5, #7
   12730:	cmp	r9, r1
   12734:	add	r5, r5, #48	; 0x30
   12738:	add	r4, r4, #3
   1273c:	bcs	128dc <abort@plt+0x1c08>
   12740:	mov	r0, r2
   12744:	cmp	sl, r4
   12748:	strbhi	r5, [r8, r4]
   1274c:	ldrb	r5, [lr, #1]!
   12750:	add	r4, r4, #1
   12754:	cmp	r2, #0
   12758:	bne	126a0 <abort@plt+0x19cc>
   1275c:	eor	r3, r0, #1
   12760:	and	r3, r3, r6
   12764:	cmp	r7, #0
   12768:	uxtb	r3, r3
   1276c:	beq	12780 <abort@plt+0x1aac>
   12770:	cmp	sl, r4
   12774:	movhi	r7, #92	; 0x5c
   12778:	strbhi	r7, [r8, r4]
   1277c:	add	r4, r4, #1
   12780:	add	r9, r9, #1
   12784:	cmp	r9, r1
   12788:	bcs	128d0 <abort@plt+0x1bfc>
   1278c:	cmp	r3, #0
   12790:	beq	128fc <abort@plt+0x1c28>
   12794:	cmp	sl, r4
   12798:	add	r3, r4, #1
   1279c:	strbhi	ip, [r8, r4]
   127a0:	mov	r7, #0
   127a4:	cmp	sl, r3
   127a8:	strbhi	ip, [r8, r3]
   127ac:	add	r4, r4, #2
   127b0:	mov	r6, r7
   127b4:	b	12744 <abort@plt+0x1a70>
   127b8:	cmp	r8, #1
   127bc:	beq	12634 <abort@plt+0x1960>
   127c0:	add	r1, r4, #1
   127c4:	add	r3, sl, r8
   127c8:	add	r1, sl, r1
   127cc:	add	r4, r3, r4
   127d0:	ldrb	r3, [r1], #1
   127d4:	sub	r3, r3, #91	; 0x5b
   127d8:	cmp	r3, #33	; 0x21
   127dc:	ldrls	pc, [pc, r3, lsl #2]
   127e0:	b	1286c <abort@plt+0x1b98>
   127e4:	andeq	r2, r1, r8, ror r8
   127e8:	andeq	r2, r1, r8, ror r8
   127ec:	andeq	r2, r1, ip, ror #16
   127f0:	andeq	r2, r1, r8, ror r8
   127f4:	andeq	r2, r1, ip, ror #16
   127f8:	andeq	r2, r1, r8, ror r8
   127fc:	andeq	r2, r1, ip, ror #16
   12800:	andeq	r2, r1, ip, ror #16
   12804:	andeq	r2, r1, ip, ror #16
   12808:	andeq	r2, r1, ip, ror #16
   1280c:	andeq	r2, r1, ip, ror #16
   12810:	andeq	r2, r1, ip, ror #16
   12814:	andeq	r2, r1, ip, ror #16
   12818:	andeq	r2, r1, ip, ror #16
   1281c:	andeq	r2, r1, ip, ror #16
   12820:	andeq	r2, r1, ip, ror #16
   12824:	andeq	r2, r1, ip, ror #16
   12828:	andeq	r2, r1, ip, ror #16
   1282c:	andeq	r2, r1, ip, ror #16
   12830:	andeq	r2, r1, ip, ror #16
   12834:	andeq	r2, r1, ip, ror #16
   12838:	andeq	r2, r1, ip, ror #16
   1283c:	andeq	r2, r1, ip, ror #16
   12840:	andeq	r2, r1, ip, ror #16
   12844:	andeq	r2, r1, ip, ror #16
   12848:	andeq	r2, r1, ip, ror #16
   1284c:	andeq	r2, r1, ip, ror #16
   12850:	andeq	r2, r1, ip, ror #16
   12854:	andeq	r2, r1, ip, ror #16
   12858:	andeq	r2, r1, ip, ror #16
   1285c:	andeq	r2, r1, ip, ror #16
   12860:	andeq	r2, r1, ip, ror #16
   12864:	andeq	r2, r1, ip, ror #16
   12868:	andeq	r2, r1, r8, ror r8
   1286c:	cmp	r4, r1
   12870:	bne	127d0 <abort@plt+0x1afc>
   12874:	b	12634 <abort@plt+0x1960>
   12878:	ldr	fp, [sp, #84]	; 0x54
   1287c:	ldr	sl, [sp, #88]	; 0x58
   12880:	mov	r8, #2
   12884:	b	11d40 <abort@plt+0x106c>
   12888:	cmp	sl, r4
   1288c:	movls	r1, r4
   12890:	bls	11e90 <abort@plt+0x11bc>
   12894:	ldr	r3, [sp, #44]	; 0x2c
   12898:	b	11e80 <abort@plt+0x11ac>
   1289c:	str	sl, [sp, #72]	; 0x48
   128a0:	ldr	sl, [sp, #32]
   128a4:	b	11cb8 <abort@plt+0xfe4>
   128a8:	add	r9, r9, #1
   128ac:	b	115ac <abort@plt+0x8d8>
   128b0:	ldr	r2, [sp, #28]
   128b4:	mov	r6, #0
   128b8:	b	12684 <abort@plt+0x19b0>
   128bc:	str	fp, [sp, #160]	; 0xa0
   128c0:	str	r3, [sp, #28]
   128c4:	mov	fp, r8
   128c8:	ldr	r8, [sp, #160]	; 0xa0
   128cc:	b	11d40 <abort@plt+0x106c>
   128d0:	str	r6, [sp, #44]	; 0x2c
   128d4:	ldr	r6, [sp, #48]	; 0x30
   128d8:	b	11ce8 <abort@plt+0x1014>
   128dc:	str	r6, [sp, #44]	; 0x2c
   128e0:	ldr	r6, [sp, #48]	; 0x30
   128e4:	b	11af4 <abort@plt+0xe20>
   128e8:	add	r4, r4, #4
   128ec:	str	r3, [sp, #44]	; 0x2c
   128f0:	mov	r6, #0
   128f4:	mov	r5, #48	; 0x30
   128f8:	b	11a7c <abort@plt+0xda8>
   128fc:	mov	r7, r3
   12900:	b	12744 <abort@plt+0x1a70>
   12904:	ldr	r3, [pc, #-1624]	; 122b4 <abort@plt+0x15e0>
   12908:	mov	r4, #1
   1290c:	str	r4, [sp, #40]	; 0x28
   12910:	str	r4, [sp, #28]
   12914:	str	r4, [sp, #52]	; 0x34
   12918:	str	sl, [sp, #72]	; 0x48
   1291c:	str	sl, [sp, #68]	; 0x44
   12920:	str	sl, [sp, #44]	; 0x2c
   12924:	str	sl, [sp, #32]
   12928:	str	r3, [sp, #60]	; 0x3c
   1292c:	b	1159c <abort@plt+0x8c8>
   12930:	mov	r3, r6
   12934:	mov	r5, #48	; 0x30
   12938:	mov	r6, #0
   1293c:	b	11a7c <abort@plt+0xda8>
   12940:	cmp	sl, r4
   12944:	movhi	r3, #48	; 0x30
   12948:	strbhi	r3, [r8, r4]
   1294c:	add	r3, r1, #2
   12950:	cmp	sl, r3
   12954:	movhi	r0, #48	; 0x30
   12958:	strbhi	r0, [r8, r3]
   1295c:	add	r4, r1, #3
   12960:	mov	r5, #48	; 0x30
   12964:	b	11ec4 <abort@plt+0x11f0>
   12968:	str	fp, [sp, #160]	; 0xa0
   1296c:	mov	fp, r8
   12970:	ldr	r8, [sp, #160]	; 0xa0
   12974:	b	11d40 <abort@plt+0x106c>
   12978:	ldr	r2, [sp, #80]	; 0x50
   1297c:	ldrb	r3, [r2]
   12980:	cmp	r3, #0
   12984:	beq	1156c <abort@plt+0x898>
   12988:	cmp	sl, r4
   1298c:	strbhi	r3, [fp, r4]
   12990:	ldrb	r3, [r2, #1]!
   12994:	add	r4, r4, #1
   12998:	cmp	r3, #0
   1299c:	bne	12988 <abort@plt+0x1cb4>
   129a0:	b	1156c <abort@plt+0x898>
   129a4:	str	fp, [sp, #160]	; 0xa0
   129a8:	mov	r3, #0
   129ac:	mov	fp, r8
   129b0:	ldr	r8, [sp, #160]	; 0xa0
   129b4:	b	11dd4 <abort@plt+0x1100>
   129b8:	mov	ip, r5
   129bc:	ldr	r7, [sp, #96]	; 0x60
   129c0:	ldr	r5, [sp, #92]	; 0x5c
   129c4:	ldr	r4, [sp, #100]	; 0x64
   129c8:	ldr	r8, [sp, #84]	; 0x54
   129cc:	ldr	sl, [sp, #88]	; 0x58
   129d0:	ldr	r2, [sp, #28]
   129d4:	mov	r6, #0
   129d8:	b	1267c <abort@plt+0x19a8>
   129dc:	ldr	r2, [sp, #36]	; 0x24
   129e0:	ldrb	r1, [r2, r3]
   129e4:	sub	r2, r1, #33	; 0x21
   129e8:	cmp	r2, #29
   129ec:	ldrls	pc, [pc, r2, lsl #2]
   129f0:	b	12acc <abort@plt+0x1df8>
   129f4:	andeq	r2, r1, ip, ror #20
   129f8:	andeq	r2, r1, ip, asr #21
   129fc:	andeq	r2, r1, ip, asr #21
   12a00:	andeq	r2, r1, ip, asr #21
   12a04:	andeq	r2, r1, ip, asr #21
   12a08:	andeq	r2, r1, ip, asr #21
   12a0c:	andeq	r2, r1, ip, ror #20
   12a10:	andeq	r2, r1, ip, ror #20
   12a14:	andeq	r2, r1, ip, ror #20
   12a18:	andeq	r2, r1, ip, asr #21
   12a1c:	andeq	r2, r1, ip, asr #21
   12a20:	andeq	r2, r1, ip, asr #21
   12a24:	andeq	r2, r1, ip, ror #20
   12a28:	andeq	r2, r1, ip, asr #21
   12a2c:	andeq	r2, r1, ip, ror #20
   12a30:	andeq	r2, r1, ip, asr #21
   12a34:	andeq	r2, r1, ip, asr #21
   12a38:	andeq	r2, r1, ip, asr #21
   12a3c:	andeq	r2, r1, ip, asr #21
   12a40:	andeq	r2, r1, ip, asr #21
   12a44:	andeq	r2, r1, ip, asr #21
   12a48:	andeq	r2, r1, ip, asr #21
   12a4c:	andeq	r2, r1, ip, asr #21
   12a50:	andeq	r2, r1, ip, asr #21
   12a54:	andeq	r2, r1, ip, asr #21
   12a58:	andeq	r2, r1, ip, asr #21
   12a5c:	andeq	r2, r1, ip, asr #21
   12a60:	andeq	r2, r1, ip, ror #20
   12a64:	andeq	r2, r1, ip, ror #20
   12a68:	andeq	r2, r1, ip, ror #20
   12a6c:	ldr	r2, [sp, #32]
   12a70:	cmp	r2, #0
   12a74:	bne	12b78 <abort@plt+0x1ea4>
   12a78:	cmp	sl, r4
   12a7c:	movhi	r2, #63	; 0x3f
   12a80:	strbhi	r2, [r8, r4]
   12a84:	add	r2, r4, #1
   12a88:	cmp	sl, r2
   12a8c:	movhi	r0, #34	; 0x22
   12a90:	strbhi	r0, [r8, r2]
   12a94:	add	r2, r4, #2
   12a98:	cmp	sl, r2
   12a9c:	movhi	r0, #34	; 0x22
   12aa0:	strbhi	r0, [r8, r2]
   12aa4:	add	r2, r4, #3
   12aa8:	cmp	sl, r2
   12aac:	movhi	r0, #63	; 0x3f
   12ab0:	strbhi	r0, [r8, r2]
   12ab4:	mov	r2, #0
   12ab8:	add	r4, r4, #4
   12abc:	mov	r5, r1
   12ac0:	mov	r9, r3
   12ac4:	mov	r6, r2
   12ac8:	b	11ec4 <abort@plt+0x11f0>
   12acc:	mov	r2, #0
   12ad0:	mov	r6, r2
   12ad4:	b	11a34 <abort@plt+0xd60>
   12ad8:	ldr	r0, [sp, #24]
   12adc:	mov	r1, r4
   12ae0:	cmp	r1, r0
   12ae4:	mov	r2, r7
   12ae8:	mov	r3, r5
   12aec:	mov	ip, r5
   12af0:	ldr	r7, [sp, #96]	; 0x60
   12af4:	ldr	r5, [sp, #92]	; 0x5c
   12af8:	ldr	r4, [sp, #100]	; 0x64
   12afc:	ldr	r8, [sp, #84]	; 0x54
   12b00:	ldr	sl, [sp, #88]	; 0x58
   12b04:	bcs	12b38 <abort@plt+0x1e64>
   12b08:	ldrb	r6, [r2]
   12b0c:	cmp	r6, #0
   12b10:	bne	12b24 <abort@plt+0x1e50>
   12b14:	b	12c54 <abort@plt+0x1f80>
   12b18:	ldrb	r6, [r2, #1]!
   12b1c:	cmp	r6, #0
   12b20:	beq	12bdc <abort@plt+0x1f08>
   12b24:	add	r3, r3, #1
   12b28:	add	r1, r9, r3
   12b2c:	cmp	r1, r0
   12b30:	bcc	12b18 <abort@plt+0x1e44>
   12b34:	mov	ip, r3
   12b38:	ldr	r2, [sp, #28]
   12b3c:	mov	r6, #0
   12b40:	b	1267c <abort@plt+0x19a8>
   12b44:	mov	r3, #1
   12b48:	str	r3, [sp, #40]	; 0x28
   12b4c:	str	r3, [sp, #32]
   12b50:	str	r3, [sp, #28]
   12b54:	str	r3, [sp, #52]	; 0x34
   12b58:	ldr	r3, [pc, #-2220]	; 122b4 <abort@plt+0x15e0>
   12b5c:	mov	r2, #0
   12b60:	str	r2, [sp, #68]	; 0x44
   12b64:	str	r2, [sp, #44]	; 0x2c
   12b68:	str	r2, [sp, #72]	; 0x48
   12b6c:	mov	r4, r2
   12b70:	str	r3, [sp, #60]	; 0x3c
   12b74:	b	1159c <abort@plt+0x8c8>
   12b78:	str	fp, [sp, #160]	; 0xa0
   12b7c:	mov	fp, r8
   12b80:	ldr	r8, [sp, #160]	; 0xa0
   12b84:	b	11d4c <abort@plt+0x1078>
   12b88:	mov	r2, r3
   12b8c:	ldr	r3, [sp, #60]	; 0x3c
   12b90:	cmp	r3, #0
   12b94:	moveq	r2, #0
   12b98:	andne	r2, r2, #1
   12b9c:	cmp	r2, #0
   12ba0:	beq	12bcc <abort@plt+0x1ef8>
   12ba4:	mov	r2, r3
   12ba8:	ldrb	r3, [r3]
   12bac:	cmp	r3, #0
   12bb0:	beq	12bcc <abort@plt+0x1ef8>
   12bb4:	cmp	sl, r4
   12bb8:	strbhi	r3, [fp, r4]
   12bbc:	ldrb	r3, [r2, #1]!
   12bc0:	add	r4, r4, #1
   12bc4:	cmp	r3, #0
   12bc8:	bne	12bb4 <abort@plt+0x1ee0>
   12bcc:	cmp	sl, r4
   12bd0:	movhi	r3, #0
   12bd4:	strbhi	r3, [fp, r4]
   12bd8:	b	11d8c <abort@plt+0x10b8>
   12bdc:	mov	ip, r3
   12be0:	ldr	r2, [sp, #28]
   12be4:	b	1267c <abort@plt+0x19a8>
   12be8:	str	fp, [sp, #160]	; 0xa0
   12bec:	mov	fp, r8
   12bf0:	ldr	r8, [sp, #160]	; 0xa0
   12bf4:	sub	r3, r8, #2
   12bf8:	clz	r3, r3
   12bfc:	lsr	r3, r3, #5
   12c00:	str	r3, [sp, #28]
   12c04:	b	11d40 <abort@plt+0x106c>
   12c08:	ldr	r3, [sp, #76]	; 0x4c
   12c0c:	mov	ip, #5
   12c10:	str	r3, [sp, #16]
   12c14:	ldr	r3, [sp, #80]	; 0x50
   12c18:	ldr	r2, [sp, #36]	; 0x24
   12c1c:	str	r3, [sp, #12]
   12c20:	ldr	r3, [sp, #56]	; 0x38
   12c24:	ldr	r1, [sp, #72]	; 0x48
   12c28:	str	r3, [sp, #8]
   12c2c:	ldr	r3, [sp, #164]	; 0xa4
   12c30:	mov	r0, fp
   12c34:	str	r3, [sp, #4]
   12c38:	str	ip, [sp]
   12c3c:	ldr	r3, [sp, #24]
   12c40:	bl	114a4 <abort@plt+0x7d0>
   12c44:	mov	r4, r0
   12c48:	b	11d8c <abort@plt+0x10b8>
   12c4c:	mov	r8, #2
   12c50:	b	11d40 <abort@plt+0x106c>
   12c54:	ldr	r2, [sp, #28]
   12c58:	b	1267c <abort@plt+0x19a8>
   12c5c:	mov	r3, #0
   12c60:	str	r3, [sp, #68]	; 0x44
   12c64:	str	r3, [sp, #44]	; 0x2c
   12c68:	str	r3, [sp, #72]	; 0x48
   12c6c:	str	r3, [sp, #28]
   12c70:	mov	r4, r3
   12c74:	ldr	r3, [pc, #-2500]	; 122b8 <abort@plt+0x15e4>
   12c78:	mov	r2, #1
   12c7c:	str	r2, [sp, #40]	; 0x28
   12c80:	str	r2, [sp, #32]
   12c84:	str	r2, [sp, #52]	; 0x34
   12c88:	str	r3, [sp, #60]	; 0x3c
   12c8c:	b	1159c <abort@plt+0x8c8>
   12c90:	bl	10b6c <__stack_chk_fail@plt>
   12c94:	mov	r5, r3
   12c98:	mov	r6, #0
   12c9c:	b	11a90 <abort@plt+0xdbc>
   12ca0:	mov	r3, #0
   12ca4:	mov	r2, #1
   12ca8:	str	r3, [sp, #44]	; 0x2c
   12cac:	str	r3, [sp, #72]	; 0x48
   12cb0:	str	r2, [sp, #40]	; 0x28
   12cb4:	b	11bac <abort@plt+0xed8>
   12cb8:	bl	10cd4 <abort@plt>
   12cbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12cc0:	sub	sp, sp, #44	; 0x2c
   12cc4:	mov	r6, r0
   12cc8:	mov	r4, r3
   12ccc:	mov	sl, r1
   12cd0:	mov	fp, r2
   12cd4:	bl	10c38 <__errno_location@plt>
   12cd8:	ldr	r7, [pc, #364]	; 12e4c <abort@plt+0x2178>
   12cdc:	cmp	r6, #0
   12ce0:	ldr	r5, [r7]
   12ce4:	ldr	r3, [r0]
   12ce8:	str	r3, [sp, #24]
   12cec:	blt	12e48 <abort@plt+0x2174>
   12cf0:	ldr	r3, [r7, #4]
   12cf4:	mov	r8, r0
   12cf8:	cmp	r3, r6
   12cfc:	bgt	12d48 <abort@plt+0x2074>
   12d00:	cmn	r6, #-268435454	; 0xf0000002
   12d04:	bgt	12e44 <abort@plt+0x2170>
   12d08:	add	r9, r6, #1
   12d0c:	add	r3, r7, #8
   12d10:	cmp	r5, r3
   12d14:	lsl	r1, r9, #3
   12d18:	beq	12e24 <abort@plt+0x2150>
   12d1c:	mov	r0, r5
   12d20:	bl	13ab0 <abort@plt+0x2ddc>
   12d24:	mov	r5, r0
   12d28:	str	r0, [r7]
   12d2c:	ldr	r0, [r7, #4]
   12d30:	mov	r1, #0
   12d34:	sub	r2, r9, r0
   12d38:	add	r0, r5, r0, lsl #3
   12d3c:	lsl	r2, r2, #3
   12d40:	bl	10c50 <memset@plt>
   12d44:	str	r9, [r7, #4]
   12d48:	add	r3, r5, r6, lsl #3
   12d4c:	ldr	r1, [r4, #4]
   12d50:	ldr	r7, [r3, #4]
   12d54:	ldr	r9, [r5, r6, lsl #3]
   12d58:	ldr	r2, [r4, #40]	; 0x28
   12d5c:	ldr	ip, [r4, #44]	; 0x2c
   12d60:	str	r3, [sp, #28]
   12d64:	ldr	r3, [r4]
   12d68:	orr	r1, r1, #1
   12d6c:	add	lr, r4, #8
   12d70:	str	r1, [sp, #36]	; 0x24
   12d74:	str	r1, [sp, #4]
   12d78:	str	r2, [sp, #12]
   12d7c:	str	r3, [sp]
   12d80:	mov	r0, r7
   12d84:	mov	r1, r9
   12d88:	str	ip, [sp, #16]
   12d8c:	str	lr, [sp, #8]
   12d90:	mov	r3, fp
   12d94:	mov	r2, sl
   12d98:	str	lr, [sp, #32]
   12d9c:	bl	114a4 <abort@plt+0x7d0>
   12da0:	cmp	r9, r0
   12da4:	bhi	12e10 <abort@plt+0x213c>
   12da8:	ldr	r3, [pc, #160]	; 12e50 <abort@plt+0x217c>
   12dac:	add	r9, r0, #1
   12db0:	cmp	r7, r3
   12db4:	str	r9, [r5, r6, lsl #3]
   12db8:	beq	12dc4 <abort@plt+0x20f0>
   12dbc:	mov	r0, r7
   12dc0:	bl	10b24 <free@plt>
   12dc4:	mov	r0, r9
   12dc8:	bl	13a54 <abort@plt+0x2d80>
   12dcc:	ldr	lr, [sp, #28]
   12dd0:	ldr	ip, [r4, #44]	; 0x2c
   12dd4:	ldr	r5, [r4, #40]	; 0x28
   12dd8:	mov	r3, fp
   12ddc:	mov	r2, sl
   12de0:	mov	r1, r9
   12de4:	str	r0, [lr, #4]
   12de8:	ldr	lr, [r4]
   12dec:	ldr	r4, [sp, #32]
   12df0:	str	ip, [sp, #16]
   12df4:	str	r4, [sp, #8]
   12df8:	ldr	r4, [sp, #36]	; 0x24
   12dfc:	str	r5, [sp, #12]
   12e00:	str	r4, [sp, #4]
   12e04:	str	lr, [sp]
   12e08:	mov	r7, r0
   12e0c:	bl	114a4 <abort@plt+0x7d0>
   12e10:	ldr	r3, [sp, #24]
   12e14:	mov	r0, r7
   12e18:	str	r3, [r8]
   12e1c:	add	sp, sp, #44	; 0x2c
   12e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e24:	mov	r0, #0
   12e28:	bl	13ab0 <abort@plt+0x2ddc>
   12e2c:	ldr	r3, [pc, #32]	; 12e54 <abort@plt+0x2180>
   12e30:	mov	r5, r0
   12e34:	ldm	r3, {r0, r1}
   12e38:	str	r5, [r7]
   12e3c:	stm	r5, {r0, r1}
   12e40:	b	12d2c <abort@plt+0x2058>
   12e44:	bl	13c9c <abort@plt+0x2fc8>
   12e48:	bl	10cd4 <abort@plt>
   12e4c:	andeq	r5, r2, r8, asr #1
   12e50:	andeq	r5, r2, r8, lsr #2
   12e54:	ldrdeq	r5, [r2], -r0
   12e58:	push	{r4, r5, r6, lr}
   12e5c:	mov	r5, r0
   12e60:	bl	10c38 <__errno_location@plt>
   12e64:	cmp	r5, #0
   12e68:	mov	r1, #48	; 0x30
   12e6c:	mov	r4, r0
   12e70:	ldr	r0, [pc, #16]	; 12e88 <abort@plt+0x21b4>
   12e74:	ldr	r6, [r4]
   12e78:	movne	r0, r5
   12e7c:	bl	13c5c <abort@plt+0x2f88>
   12e80:	str	r6, [r4]
   12e84:	pop	{r4, r5, r6, pc}
   12e88:	andeq	r5, r2, r8, lsr #4
   12e8c:	ldr	r3, [pc, #12]	; 12ea0 <abort@plt+0x21cc>
   12e90:	cmp	r0, #0
   12e94:	moveq	r0, r3
   12e98:	ldr	r0, [r0]
   12e9c:	bx	lr
   12ea0:	andeq	r5, r2, r8, lsr #4
   12ea4:	ldr	r3, [pc, #12]	; 12eb8 <abort@plt+0x21e4>
   12ea8:	cmp	r0, #0
   12eac:	moveq	r0, r3
   12eb0:	str	r1, [r0]
   12eb4:	bx	lr
   12eb8:	andeq	r5, r2, r8, lsr #4
   12ebc:	ldr	r3, [pc, #52]	; 12ef8 <abort@plt+0x2224>
   12ec0:	cmp	r0, #0
   12ec4:	moveq	r0, r3
   12ec8:	add	r3, r0, #8
   12ecc:	push	{lr}		; (str lr, [sp, #-4]!)
   12ed0:	lsr	lr, r1, #5
   12ed4:	and	r1, r1, #31
   12ed8:	ldr	ip, [r3, lr, lsl #2]
   12edc:	lsr	r0, ip, r1
   12ee0:	eor	r2, r2, r0
   12ee4:	and	r2, r2, #1
   12ee8:	and	r0, r0, #1
   12eec:	eor	r1, ip, r2, lsl r1
   12ef0:	str	r1, [r3, lr, lsl #2]
   12ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ef8:	andeq	r5, r2, r8, lsr #4
   12efc:	ldr	r3, [pc, #16]	; 12f14 <abort@plt+0x2240>
   12f00:	cmp	r0, #0
   12f04:	movne	r3, r0
   12f08:	ldr	r0, [r3, #4]
   12f0c:	str	r1, [r3, #4]
   12f10:	bx	lr
   12f14:	andeq	r5, r2, r8, lsr #4
   12f18:	ldr	r3, [pc, #44]	; 12f4c <abort@plt+0x2278>
   12f1c:	cmp	r0, #0
   12f20:	moveq	r0, r3
   12f24:	mov	ip, #10
   12f28:	cmp	r2, #0
   12f2c:	cmpne	r1, #0
   12f30:	str	ip, [r0]
   12f34:	beq	12f44 <abort@plt+0x2270>
   12f38:	str	r1, [r0, #40]	; 0x28
   12f3c:	str	r2, [r0, #44]	; 0x2c
   12f40:	bx	lr
   12f44:	push	{r4, lr}
   12f48:	bl	10cd4 <abort@plt>
   12f4c:	andeq	r5, r2, r8, lsr #4
   12f50:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12f54:	sub	sp, sp, #24
   12f58:	ldr	ip, [pc, #108]	; 12fcc <abort@plt+0x22f8>
   12f5c:	ldr	r4, [sp, #56]	; 0x38
   12f60:	mov	r9, r2
   12f64:	cmp	r4, #0
   12f68:	moveq	r4, ip
   12f6c:	mov	sl, r3
   12f70:	mov	r7, r0
   12f74:	mov	r8, r1
   12f78:	bl	10c38 <__errno_location@plt>
   12f7c:	ldr	r3, [r4, #44]	; 0x2c
   12f80:	mov	r1, r8
   12f84:	ldr	r6, [r0]
   12f88:	str	r3, [sp, #16]
   12f8c:	ldr	r2, [r4, #40]	; 0x28
   12f90:	add	r3, r4, #8
   12f94:	str	r3, [sp, #8]
   12f98:	str	r2, [sp, #12]
   12f9c:	ldr	r2, [r4, #4]
   12fa0:	mov	r5, r0
   12fa4:	str	r2, [sp, #4]
   12fa8:	ldr	ip, [r4]
   12fac:	mov	r3, sl
   12fb0:	mov	r2, r9
   12fb4:	mov	r0, r7
   12fb8:	str	ip, [sp]
   12fbc:	bl	114a4 <abort@plt+0x7d0>
   12fc0:	str	r6, [r5]
   12fc4:	add	sp, sp, #24
   12fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12fcc:	andeq	r5, r2, r8, lsr #4
   12fd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12fd4:	cmp	r3, #0
   12fd8:	sub	sp, sp, #44	; 0x2c
   12fdc:	ldr	r4, [pc, #192]	; 130a4 <abort@plt+0x23d0>
   12fe0:	mov	r6, r2
   12fe4:	movne	r4, r3
   12fe8:	mov	r9, r1
   12fec:	mov	r8, r0
   12ff0:	bl	10c38 <__errno_location@plt>
   12ff4:	ldr	r3, [r4, #44]	; 0x2c
   12ff8:	ldr	r5, [r4, #4]
   12ffc:	add	sl, r4, #8
   13000:	cmp	r6, #0
   13004:	orreq	r5, r5, #1
   13008:	mov	r1, #0
   1300c:	ldr	r2, [r0]
   13010:	str	r3, [sp, #16]
   13014:	ldr	r3, [r4, #40]	; 0x28
   13018:	stmib	sp, {r5, sl}
   1301c:	str	r3, [sp, #12]
   13020:	ldr	r3, [r4]
   13024:	mov	r7, r0
   13028:	str	r2, [sp, #28]
   1302c:	str	r3, [sp]
   13030:	mov	r2, r8
   13034:	mov	r3, r9
   13038:	mov	r0, r1
   1303c:	bl	114a4 <abort@plt+0x7d0>
   13040:	add	r1, r0, #1
   13044:	mov	fp, r0
   13048:	mov	r0, r1
   1304c:	str	r1, [sp, #36]	; 0x24
   13050:	bl	13a54 <abort@plt+0x2d80>
   13054:	ldr	r3, [r4, #44]	; 0x2c
   13058:	mov	r2, r8
   1305c:	str	r3, [sp, #16]
   13060:	ldr	r3, [r4, #40]	; 0x28
   13064:	str	r5, [sp, #4]
   13068:	str	r3, [sp, #12]
   1306c:	str	sl, [sp, #8]
   13070:	ldr	ip, [r4]
   13074:	ldr	r1, [sp, #36]	; 0x24
   13078:	mov	r3, r9
   1307c:	str	ip, [sp]
   13080:	str	r0, [sp, #32]
   13084:	bl	114a4 <abort@plt+0x7d0>
   13088:	ldr	r2, [sp, #28]
   1308c:	cmp	r6, #0
   13090:	str	r2, [r7]
   13094:	ldr	r0, [sp, #32]
   13098:	strne	fp, [r6]
   1309c:	add	sp, sp, #44	; 0x2c
   130a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130a4:	andeq	r5, r2, r8, lsr #4
   130a8:	mov	r3, r2
   130ac:	mov	r2, #0
   130b0:	b	12fd0 <abort@plt+0x22fc>
   130b4:	push	{r4, r5, r6, r7, r8, lr}
   130b8:	ldr	r6, [pc, #112]	; 13130 <abort@plt+0x245c>
   130bc:	ldr	r3, [r6, #4]
   130c0:	ldr	r7, [r6]
   130c4:	cmp	r3, #1
   130c8:	ble	130ec <abort@plt+0x2418>
   130cc:	sub	r5, r7, #8
   130d0:	add	r5, r5, r3, lsl #3
   130d4:	mov	r4, r7
   130d8:	ldr	r0, [r4, #12]
   130dc:	add	r4, r4, #8
   130e0:	bl	10b24 <free@plt>
   130e4:	cmp	r4, r5
   130e8:	bne	130d8 <abort@plt+0x2404>
   130ec:	ldr	r0, [r7, #4]
   130f0:	ldr	r4, [pc, #60]	; 13134 <abort@plt+0x2460>
   130f4:	cmp	r0, r4
   130f8:	beq	1310c <abort@plt+0x2438>
   130fc:	bl	10b24 <free@plt>
   13100:	mov	r3, #256	; 0x100
   13104:	str	r4, [r6, #12]
   13108:	str	r3, [r6, #8]
   1310c:	ldr	r4, [pc, #36]	; 13138 <abort@plt+0x2464>
   13110:	cmp	r7, r4
   13114:	beq	13124 <abort@plt+0x2450>
   13118:	mov	r0, r7
   1311c:	bl	10b24 <free@plt>
   13120:	str	r4, [r6]
   13124:	mov	r3, #1
   13128:	str	r3, [r6, #4]
   1312c:	pop	{r4, r5, r6, r7, r8, pc}
   13130:	andeq	r5, r2, r8, asr #1
   13134:	andeq	r5, r2, r8, lsr #2
   13138:	ldrdeq	r5, [r2], -r0
   1313c:	ldr	r3, [pc, #4]	; 13148 <abort@plt+0x2474>
   13140:	mvn	r2, #0
   13144:	b	12cbc <abort@plt+0x1fe8>
   13148:	andeq	r5, r2, r8, lsr #4
   1314c:	ldr	r3, [pc]	; 13154 <abort@plt+0x2480>
   13150:	b	12cbc <abort@plt+0x1fe8>
   13154:	andeq	r5, r2, r8, lsr #4
   13158:	mov	r1, r0
   1315c:	ldr	r3, [pc, #8]	; 1316c <abort@plt+0x2498>
   13160:	mvn	r2, #0
   13164:	mov	r0, #0
   13168:	b	12cbc <abort@plt+0x1fe8>
   1316c:	andeq	r5, r2, r8, lsr #4
   13170:	mov	r2, r1
   13174:	ldr	r3, [pc, #8]	; 13184 <abort@plt+0x24b0>
   13178:	mov	r1, r0
   1317c:	mov	r0, #0
   13180:	b	12cbc <abort@plt+0x1fe8>
   13184:	andeq	r5, r2, r8, lsr #4
   13188:	push	{r4, r5, r6, lr}
   1318c:	sub	sp, sp, #56	; 0x38
   13190:	ldr	r4, [pc, #68]	; 131dc <abort@plt+0x2508>
   13194:	mov	r6, r2
   13198:	mov	r5, r0
   1319c:	ldr	r3, [r4]
   131a0:	add	r0, sp, #4
   131a4:	str	r3, [sp, #52]	; 0x34
   131a8:	bl	11334 <abort@plt+0x660>
   131ac:	add	r3, sp, #4
   131b0:	mvn	r2, #0
   131b4:	mov	r1, r6
   131b8:	mov	r0, r5
   131bc:	bl	12cbc <abort@plt+0x1fe8>
   131c0:	ldr	r2, [sp, #52]	; 0x34
   131c4:	ldr	r3, [r4]
   131c8:	cmp	r2, r3
   131cc:	bne	131d8 <abort@plt+0x2504>
   131d0:	add	sp, sp, #56	; 0x38
   131d4:	pop	{r4, r5, r6, pc}
   131d8:	bl	10b6c <__stack_chk_fail@plt>
   131dc:	andeq	r4, r2, r8, lsl #30
   131e0:	push	{r4, r5, r6, r7, lr}
   131e4:	sub	sp, sp, #60	; 0x3c
   131e8:	ldr	r4, [pc, #72]	; 13238 <abort@plt+0x2564>
   131ec:	mov	r6, r2
   131f0:	mov	r7, r3
   131f4:	ldr	ip, [r4]
   131f8:	mov	r5, r0
   131fc:	add	r0, sp, #4
   13200:	str	ip, [sp, #52]	; 0x34
   13204:	bl	11334 <abort@plt+0x660>
   13208:	add	r3, sp, #4
   1320c:	mov	r2, r7
   13210:	mov	r1, r6
   13214:	mov	r0, r5
   13218:	bl	12cbc <abort@plt+0x1fe8>
   1321c:	ldr	r2, [sp, #52]	; 0x34
   13220:	ldr	r3, [r4]
   13224:	cmp	r2, r3
   13228:	bne	13234 <abort@plt+0x2560>
   1322c:	add	sp, sp, #60	; 0x3c
   13230:	pop	{r4, r5, r6, r7, pc}
   13234:	bl	10b6c <__stack_chk_fail@plt>
   13238:	andeq	r4, r2, r8, lsl #30
   1323c:	mov	r2, r1
   13240:	mov	r1, r0
   13244:	mov	r0, #0
   13248:	b	13188 <abort@plt+0x24b4>
   1324c:	mov	r3, r2
   13250:	mov	r2, r1
   13254:	mov	r1, r0
   13258:	mov	r0, #0
   1325c:	b	131e0 <abort@plt+0x250c>
   13260:	push	{r4, r5, r6, r7, r8, r9, lr}
   13264:	mov	r4, r2
   13268:	ldr	lr, [pc, #128]	; 132f0 <abort@plt+0x261c>
   1326c:	mov	r8, r0
   13270:	mov	r9, r1
   13274:	ldm	lr!, {r0, r1, r2, r3}
   13278:	sub	sp, sp, #60	; 0x3c
   1327c:	add	ip, sp, #4
   13280:	lsr	r6, r4, #5
   13284:	stmia	ip!, {r0, r1, r2, r3}
   13288:	add	r7, sp, #12
   1328c:	ldm	lr!, {r0, r1, r2, r3}
   13290:	and	r4, r4, #31
   13294:	ldr	r5, [pc, #88]	; 132f4 <abort@plt+0x2620>
   13298:	stmia	ip!, {r0, r1, r2, r3}
   1329c:	ldm	lr, {r0, r1, r2, r3}
   132a0:	stm	ip, {r0, r1, r2, r3}
   132a4:	mov	r2, r9
   132a8:	ldr	r3, [r7, r6, lsl #2]
   132ac:	ldr	ip, [r5]
   132b0:	mov	r1, r8
   132b4:	mvn	r0, r3, lsr r4
   132b8:	and	r0, r0, #1
   132bc:	str	ip, [sp, #52]	; 0x34
   132c0:	eor	r4, r3, r0, lsl r4
   132c4:	add	r3, sp, #4
   132c8:	mov	r0, #0
   132cc:	str	r4, [r7, r6, lsl #2]
   132d0:	bl	12cbc <abort@plt+0x1fe8>
   132d4:	ldr	r2, [sp, #52]	; 0x34
   132d8:	ldr	r3, [r5]
   132dc:	cmp	r2, r3
   132e0:	bne	132ec <abort@plt+0x2618>
   132e4:	add	sp, sp, #60	; 0x3c
   132e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   132ec:	bl	10b6c <__stack_chk_fail@plt>
   132f0:	andeq	r5, r2, r8, lsr #4
   132f4:	andeq	r4, r2, r8, lsl #30
   132f8:	mov	r2, r1
   132fc:	mvn	r1, #0
   13300:	b	13260 <abort@plt+0x258c>
   13304:	mov	r2, #58	; 0x3a
   13308:	mvn	r1, #0
   1330c:	b	13260 <abort@plt+0x258c>
   13310:	mov	r2, #58	; 0x3a
   13314:	b	13260 <abort@plt+0x258c>
   13318:	push	{r4, r5, r6, r7, r8, lr}
   1331c:	sub	sp, sp, #104	; 0x68
   13320:	ldr	r5, [pc, #120]	; 133a0 <abort@plt+0x26cc>
   13324:	mov	r6, r0
   13328:	mov	r0, sp
   1332c:	ldr	r3, [r5]
   13330:	mov	r7, r2
   13334:	str	r3, [sp, #100]	; 0x64
   13338:	bl	11334 <abort@plt+0x660>
   1333c:	mov	ip, sp
   13340:	add	lr, sp, #52	; 0x34
   13344:	ldm	ip!, {r0, r1, r2, r3}
   13348:	stmia	lr!, {r0, r1, r2, r3}
   1334c:	ldm	ip!, {r0, r1, r2, r3}
   13350:	ldr	r8, [sp, #64]	; 0x40
   13354:	stmia	lr!, {r0, r1, r2, r3}
   13358:	mvn	r4, r8
   1335c:	ldm	ip, {r0, r1, r2, r3}
   13360:	and	ip, r4, #67108864	; 0x4000000
   13364:	eor	ip, ip, r8
   13368:	str	ip, [sp, #64]	; 0x40
   1336c:	stm	lr, {r0, r1, r2, r3}
   13370:	add	r3, sp, #52	; 0x34
   13374:	mvn	r2, #0
   13378:	mov	r1, r7
   1337c:	mov	r0, r6
   13380:	bl	12cbc <abort@plt+0x1fe8>
   13384:	ldr	r2, [sp, #100]	; 0x64
   13388:	ldr	r3, [r5]
   1338c:	cmp	r2, r3
   13390:	bne	1339c <abort@plt+0x26c8>
   13394:	add	sp, sp, #104	; 0x68
   13398:	pop	{r4, r5, r6, r7, r8, pc}
   1339c:	bl	10b6c <__stack_chk_fail@plt>
   133a0:	andeq	r4, r2, r8, lsl #30
   133a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   133a8:	mov	r6, r1
   133ac:	ldr	lr, [pc, #132]	; 13438 <abort@plt+0x2764>
   133b0:	mov	r5, r2
   133b4:	mov	r8, r0
   133b8:	mov	r9, r3
   133bc:	ldm	lr!, {r0, r1, r2, r3}
   133c0:	sub	sp, sp, #60	; 0x3c
   133c4:	add	ip, sp, #4
   133c8:	ldr	r4, [pc, #108]	; 1343c <abort@plt+0x2768>
   133cc:	stmia	ip!, {r0, r1, r2, r3}
   133d0:	mov	r7, #10
   133d4:	ldm	lr!, {r0, r1, r2, r3}
   133d8:	cmp	r5, #0
   133dc:	cmpne	r6, #0
   133e0:	str	r7, [sp, #4]
   133e4:	stmia	ip!, {r0, r1, r2, r3}
   133e8:	ldm	lr, {r0, r1, r2, r3}
   133ec:	ldr	lr, [r4]
   133f0:	stm	ip, {r0, r1, r2, r3}
   133f4:	str	lr, [sp, #52]	; 0x34
   133f8:	beq	13434 <abort@plt+0x2760>
   133fc:	add	r3, sp, #4
   13400:	ldr	r2, [sp, #88]	; 0x58
   13404:	mov	r1, r9
   13408:	mov	r0, r8
   1340c:	str	r6, [sp, #44]	; 0x2c
   13410:	str	r5, [sp, #48]	; 0x30
   13414:	bl	12cbc <abort@plt+0x1fe8>
   13418:	ldr	r2, [sp, #52]	; 0x34
   1341c:	ldr	r3, [r4]
   13420:	cmp	r2, r3
   13424:	bne	13430 <abort@plt+0x275c>
   13428:	add	sp, sp, #60	; 0x3c
   1342c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13430:	bl	10b6c <__stack_chk_fail@plt>
   13434:	bl	10cd4 <abort@plt>
   13438:	andeq	r5, r2, r8, lsr #4
   1343c:	andeq	r4, r2, r8, lsl #30
   13440:	push	{lr}		; (str lr, [sp, #-4]!)
   13444:	sub	sp, sp, #12
   13448:	mvn	ip, #0
   1344c:	str	ip, [sp]
   13450:	bl	133a4 <abort@plt+0x26d0>
   13454:	add	sp, sp, #12
   13458:	pop	{pc}		; (ldr pc, [sp], #4)
   1345c:	push	{lr}		; (str lr, [sp, #-4]!)
   13460:	sub	sp, sp, #12
   13464:	mvn	ip, #0
   13468:	mov	r3, r2
   1346c:	str	ip, [sp]
   13470:	mov	r2, r1
   13474:	mov	r1, r0
   13478:	mov	r0, #0
   1347c:	bl	133a4 <abort@plt+0x26d0>
   13480:	add	sp, sp, #12
   13484:	pop	{pc}		; (ldr pc, [sp], #4)
   13488:	push	{lr}		; (str lr, [sp, #-4]!)
   1348c:	sub	sp, sp, #12
   13490:	str	r3, [sp]
   13494:	mov	r3, r2
   13498:	mov	r2, r1
   1349c:	mov	r1, r0
   134a0:	mov	r0, #0
   134a4:	bl	133a4 <abort@plt+0x26d0>
   134a8:	add	sp, sp, #12
   134ac:	pop	{pc}		; (ldr pc, [sp], #4)
   134b0:	ldr	r3, [pc]	; 134b8 <abort@plt+0x27e4>
   134b4:	b	12cbc <abort@plt+0x1fe8>
   134b8:	ldrdeq	r5, [r2], -r8
   134bc:	mov	r2, r1
   134c0:	ldr	r3, [pc, #8]	; 134d0 <abort@plt+0x27fc>
   134c4:	mov	r1, r0
   134c8:	mov	r0, #0
   134cc:	b	12cbc <abort@plt+0x1fe8>
   134d0:	ldrdeq	r5, [r2], -r8
   134d4:	ldr	r3, [pc, #4]	; 134e0 <abort@plt+0x280c>
   134d8:	mvn	r2, #0
   134dc:	b	12cbc <abort@plt+0x1fe8>
   134e0:	ldrdeq	r5, [r2], -r8
   134e4:	mov	r1, r0
   134e8:	ldr	r3, [pc, #8]	; 134f8 <abort@plt+0x2824>
   134ec:	mvn	r2, #0
   134f0:	mov	r0, #0
   134f4:	b	12cbc <abort@plt+0x1fe8>
   134f8:	ldrdeq	r5, [r2], -r8
   134fc:	push	{r4, r5, r6, lr}
   13500:	sub	sp, sp, #32
   13504:	cmp	r1, #0
   13508:	mov	r5, r0
   1350c:	ldr	r4, [sp, #48]	; 0x30
   13510:	ldr	r6, [sp, #52]	; 0x34
   13514:	beq	135a4 <abort@plt+0x28d0>
   13518:	strd	r2, [sp]
   1351c:	mov	r3, r1
   13520:	ldr	r2, [pc, #828]	; 13864 <abort@plt+0x2b90>
   13524:	mov	r1, #1
   13528:	bl	10c74 <__fprintf_chk@plt>
   1352c:	mov	r2, #5
   13530:	ldr	r1, [pc, #816]	; 13868 <abort@plt+0x2b94>
   13534:	mov	r0, #0
   13538:	bl	10b60 <dcgettext@plt>
   1353c:	ldr	r3, [pc, #808]	; 1386c <abort@plt+0x2b98>
   13540:	ldr	r2, [pc, #808]	; 13870 <abort@plt+0x2b9c>
   13544:	str	r3, [sp]
   13548:	mov	r1, #1
   1354c:	mov	r3, r0
   13550:	mov	r0, r5
   13554:	bl	10c74 <__fprintf_chk@plt>
   13558:	ldr	r1, [pc, #788]	; 13874 <abort@plt+0x2ba0>
   1355c:	mov	r2, #5
   13560:	mov	r0, #0
   13564:	bl	10b60 <dcgettext@plt>
   13568:	mov	r1, r5
   1356c:	bl	10af4 <fputs_unlocked@plt>
   13570:	cmp	r6, #9
   13574:	ldrls	pc, [pc, r6, lsl #2]
   13578:	b	13854 <abort@plt+0x2b80>
   1357c:	andeq	r3, r1, r0, ror #16
   13580:	andeq	r3, r1, r8, lsr #12
   13584:	andeq	r3, r1, r4, asr r6
   13588:	andeq	r3, r1, r8, lsl #13
   1358c:	andeq	r3, r1, r4, asr #13
   13590:	andeq	r3, r1, r4, lsl #14
   13594:	andeq	r3, r1, ip, asr #14
   13598:	muleq	r1, ip, r7
   1359c:	strdeq	r3, [r1], -r4
   135a0:			; <UNDEFINED> instruction: 0x000135bc
   135a4:	str	r3, [sp]
   135a8:	mov	r1, #1
   135ac:	mov	r3, r2
   135b0:	ldr	r2, [pc, #704]	; 13878 <abort@plt+0x2ba4>
   135b4:	bl	10c74 <__fprintf_chk@plt>
   135b8:	b	1352c <abort@plt+0x2858>
   135bc:	ldr	r1, [pc, #696]	; 1387c <abort@plt+0x2ba8>
   135c0:	mov	r2, #5
   135c4:	mov	r0, #0
   135c8:	bl	10b60 <dcgettext@plt>
   135cc:	ldr	r2, [r4, #32]
   135d0:	ldr	r3, [r4, #28]
   135d4:	ldr	r1, [r4, #24]
   135d8:	str	r2, [sp, #28]
   135dc:	ldr	r2, [r4, #20]
   135e0:	str	r3, [sp, #24]
   135e4:	ldr	r3, [r4, #16]
   135e8:	str	r1, [sp, #20]
   135ec:	ldr	r1, [r4, #12]
   135f0:	str	r2, [sp, #16]
   135f4:	ldr	r2, [r4, #8]
   135f8:	str	r3, [sp, #12]
   135fc:	ldr	r3, [r4, #4]
   13600:	str	r1, [sp, #8]
   13604:	str	r2, [sp, #4]
   13608:	str	r3, [sp]
   1360c:	mov	r1, #1
   13610:	ldr	r3, [r4]
   13614:	mov	r2, r0
   13618:	mov	r0, r5
   1361c:	bl	10c74 <__fprintf_chk@plt>
   13620:	add	sp, sp, #32
   13624:	pop	{r4, r5, r6, pc}
   13628:	mov	r2, #5
   1362c:	ldr	r1, [pc, #588]	; 13880 <abort@plt+0x2bac>
   13630:	mov	r0, #0
   13634:	bl	10b60 <dcgettext@plt>
   13638:	ldr	r3, [r4]
   1363c:	mov	r1, #1
   13640:	mov	r2, r0
   13644:	mov	r0, r5
   13648:	add	sp, sp, #32
   1364c:	pop	{r4, r5, r6, lr}
   13650:	b	10c74 <__fprintf_chk@plt>
   13654:	mov	r2, #5
   13658:	ldr	r1, [pc, #548]	; 13884 <abort@plt+0x2bb0>
   1365c:	mov	r0, #0
   13660:	bl	10b60 <dcgettext@plt>
   13664:	ldr	r2, [r4, #4]
   13668:	ldr	r3, [r4]
   1366c:	mov	r1, #1
   13670:	str	r2, [sp, #48]	; 0x30
   13674:	mov	r2, r0
   13678:	mov	r0, r5
   1367c:	add	sp, sp, #32
   13680:	pop	{r4, r5, r6, lr}
   13684:	b	10c74 <__fprintf_chk@plt>
   13688:	mov	r2, #5
   1368c:	ldr	r1, [pc, #500]	; 13888 <abort@plt+0x2bb4>
   13690:	mov	r0, #0
   13694:	bl	10b60 <dcgettext@plt>
   13698:	ldr	r2, [r4, #8]
   1369c:	ldr	r3, [r4, #4]
   136a0:	mov	r1, #1
   136a4:	str	r2, [sp, #52]	; 0x34
   136a8:	str	r3, [sp, #48]	; 0x30
   136ac:	ldr	r3, [r4]
   136b0:	mov	r2, r0
   136b4:	mov	r0, r5
   136b8:	add	sp, sp, #32
   136bc:	pop	{r4, r5, r6, lr}
   136c0:	b	10c74 <__fprintf_chk@plt>
   136c4:	mov	r2, #5
   136c8:	ldr	r1, [pc, #444]	; 1388c <abort@plt+0x2bb8>
   136cc:	mov	r0, #0
   136d0:	bl	10b60 <dcgettext@plt>
   136d4:	ldr	r1, [r4, #12]
   136d8:	ldr	r2, [r4, #8]
   136dc:	ldr	r3, [r4, #4]
   136e0:	str	r1, [sp, #8]
   136e4:	str	r2, [sp, #4]
   136e8:	str	r3, [sp]
   136ec:	mov	r1, #1
   136f0:	ldr	r3, [r4]
   136f4:	mov	r2, r0
   136f8:	mov	r0, r5
   136fc:	bl	10c74 <__fprintf_chk@plt>
   13700:	b	13620 <abort@plt+0x294c>
   13704:	mov	r2, #5
   13708:	ldr	r1, [pc, #384]	; 13890 <abort@plt+0x2bbc>
   1370c:	mov	r0, #0
   13710:	bl	10b60 <dcgettext@plt>
   13714:	ldr	r3, [r4, #16]
   13718:	ldr	r1, [r4, #12]
   1371c:	ldr	r2, [r4, #8]
   13720:	str	r3, [sp, #12]
   13724:	ldr	r3, [r4, #4]
   13728:	str	r1, [sp, #8]
   1372c:	str	r2, [sp, #4]
   13730:	str	r3, [sp]
   13734:	mov	r1, #1
   13738:	ldr	r3, [r4]
   1373c:	mov	r2, r0
   13740:	mov	r0, r5
   13744:	bl	10c74 <__fprintf_chk@plt>
   13748:	b	13620 <abort@plt+0x294c>
   1374c:	mov	r2, #5
   13750:	ldr	r1, [pc, #316]	; 13894 <abort@plt+0x2bc0>
   13754:	mov	r0, #0
   13758:	bl	10b60 <dcgettext@plt>
   1375c:	ldr	r2, [r4, #20]
   13760:	ldr	r3, [r4, #16]
   13764:	ldr	r1, [r4, #12]
   13768:	str	r2, [sp, #16]
   1376c:	ldr	r2, [r4, #8]
   13770:	str	r3, [sp, #12]
   13774:	ldr	r3, [r4, #4]
   13778:	str	r1, [sp, #8]
   1377c:	str	r2, [sp, #4]
   13780:	str	r3, [sp]
   13784:	mov	r1, #1
   13788:	ldr	r3, [r4]
   1378c:	mov	r2, r0
   13790:	mov	r0, r5
   13794:	bl	10c74 <__fprintf_chk@plt>
   13798:	b	13620 <abort@plt+0x294c>
   1379c:	mov	r2, #5
   137a0:	ldr	r1, [pc, #240]	; 13898 <abort@plt+0x2bc4>
   137a4:	mov	r0, #0
   137a8:	bl	10b60 <dcgettext@plt>
   137ac:	ldr	r1, [r4, #24]
   137b0:	ldr	r2, [r4, #20]
   137b4:	ldr	r3, [r4, #16]
   137b8:	str	r1, [sp, #20]
   137bc:	ldr	r1, [r4, #12]
   137c0:	str	r2, [sp, #16]
   137c4:	ldr	r2, [r4, #8]
   137c8:	str	r3, [sp, #12]
   137cc:	ldr	r3, [r4, #4]
   137d0:	str	r1, [sp, #8]
   137d4:	str	r2, [sp, #4]
   137d8:	str	r3, [sp]
   137dc:	mov	r1, #1
   137e0:	ldr	r3, [r4]
   137e4:	mov	r2, r0
   137e8:	mov	r0, r5
   137ec:	bl	10c74 <__fprintf_chk@plt>
   137f0:	b	13620 <abort@plt+0x294c>
   137f4:	mov	r2, #5
   137f8:	ldr	r1, [pc, #156]	; 1389c <abort@plt+0x2bc8>
   137fc:	mov	r0, #0
   13800:	bl	10b60 <dcgettext@plt>
   13804:	ldr	r3, [r4, #28]
   13808:	ldr	r1, [r4, #24]
   1380c:	ldr	r2, [r4, #20]
   13810:	str	r3, [sp, #24]
   13814:	ldr	r3, [r4, #16]
   13818:	str	r1, [sp, #20]
   1381c:	ldr	r1, [r4, #12]
   13820:	str	r2, [sp, #16]
   13824:	ldr	r2, [r4, #8]
   13828:	str	r3, [sp, #12]
   1382c:	ldr	r3, [r4, #4]
   13830:	str	r1, [sp, #8]
   13834:	str	r2, [sp, #4]
   13838:	str	r3, [sp]
   1383c:	mov	r1, #1
   13840:	ldr	r3, [r4]
   13844:	mov	r2, r0
   13848:	mov	r0, r5
   1384c:	bl	10c74 <__fprintf_chk@plt>
   13850:	b	13620 <abort@plt+0x294c>
   13854:	mov	r2, #5
   13858:	ldr	r1, [pc, #64]	; 138a0 <abort@plt+0x2bcc>
   1385c:	b	135c4 <abort@plt+0x28f0>
   13860:	bl	10cd4 <abort@plt>
   13864:	andeq	r4, r1, ip, lsr r7
   13868:	andeq	r4, r1, r0, asr r7
   1386c:	andeq	r0, r0, r2, ror #15
   13870:	andeq	r4, r1, r4, lsr #20
   13874:	andeq	r4, r1, r4, asr r7
   13878:	andeq	r4, r1, r8, asr #14
   1387c:	andeq	r4, r1, ip, lsr #18
   13880:	andeq	r4, r1, r0, lsr #16
   13884:	andeq	r4, r1, r0, lsr r8
   13888:	andeq	r4, r1, r8, asr #16
   1388c:	andeq	r4, r1, r4, ror #16
   13890:	andeq	r4, r1, r4, lsl #17
   13894:	andeq	r4, r1, r8, lsr #17
   13898:	ldrdeq	r4, [r1], -r0
   1389c:	strdeq	r4, [r1], -ip
   138a0:	andeq	r4, r1, r0, ror #18
   138a4:	push	{r4, r5, lr}
   138a8:	sub	sp, sp, #12
   138ac:	ldr	r5, [sp, #24]
   138b0:	ldr	ip, [r5]
   138b4:	cmp	ip, #0
   138b8:	beq	138d4 <abort@plt+0x2c00>
   138bc:	mov	lr, r5
   138c0:	mov	ip, #0
   138c4:	ldr	r4, [lr, #4]!
   138c8:	add	ip, ip, #1
   138cc:	cmp	r4, #0
   138d0:	bne	138c4 <abort@plt+0x2bf0>
   138d4:	stm	sp, {r5, ip}
   138d8:	bl	134fc <abort@plt+0x2828>
   138dc:	add	sp, sp, #12
   138e0:	pop	{r4, r5, pc}
   138e4:	push	{r4, r5, r6, lr}
   138e8:	sub	sp, sp, #56	; 0x38
   138ec:	ldr	r6, [pc, #88]	; 1394c <abort@plt+0x2c78>
   138f0:	ldr	r5, [sp, #72]	; 0x48
   138f4:	add	r4, sp, #8
   138f8:	ldr	ip, [r6]
   138fc:	str	ip, [sp, #52]	; 0x34
   13900:	mov	ip, #0
   13904:	ldr	lr, [r5], #4
   13908:	cmp	lr, #0
   1390c:	str	lr, [r4, #4]!
   13910:	beq	13920 <abort@plt+0x2c4c>
   13914:	add	ip, ip, #1
   13918:	cmp	ip, #10
   1391c:	bne	13904 <abort@plt+0x2c30>
   13920:	add	lr, sp, #12
   13924:	str	ip, [sp, #4]
   13928:	str	lr, [sp]
   1392c:	bl	134fc <abort@plt+0x2828>
   13930:	ldr	r2, [sp, #52]	; 0x34
   13934:	ldr	r3, [r6]
   13938:	cmp	r2, r3
   1393c:	bne	13948 <abort@plt+0x2c74>
   13940:	add	sp, sp, #56	; 0x38
   13944:	pop	{r4, r5, r6, pc}
   13948:	bl	10b6c <__stack_chk_fail@plt>
   1394c:	andeq	r4, r2, r8, lsl #30
   13950:	push	{r3}		; (str r3, [sp, #-4]!)
   13954:	mov	ip, #0
   13958:	push	{r4, r5, r6, lr}
   1395c:	sub	sp, sp, #60	; 0x3c
   13960:	ldr	r6, [pc, #100]	; 139cc <abort@plt+0x2cf8>
   13964:	add	r5, sp, #8
   13968:	add	r4, sp, #80	; 0x50
   1396c:	ldr	r3, [r6]
   13970:	str	r4, [sp, #8]
   13974:	str	r3, [sp, #52]	; 0x34
   13978:	ldr	r3, [sp, #76]	; 0x4c
   1397c:	ldr	lr, [r4], #4
   13980:	cmp	lr, #0
   13984:	str	lr, [r5, #4]!
   13988:	beq	13998 <abort@plt+0x2cc4>
   1398c:	add	ip, ip, #1
   13990:	cmp	ip, #10
   13994:	bne	1397c <abort@plt+0x2ca8>
   13998:	add	lr, sp, #12
   1399c:	str	ip, [sp, #4]
   139a0:	str	lr, [sp]
   139a4:	bl	134fc <abort@plt+0x2828>
   139a8:	ldr	r2, [sp, #52]	; 0x34
   139ac:	ldr	r3, [r6]
   139b0:	cmp	r2, r3
   139b4:	bne	139c8 <abort@plt+0x2cf4>
   139b8:	add	sp, sp, #60	; 0x3c
   139bc:	pop	{r4, r5, r6, lr}
   139c0:	add	sp, sp, #4
   139c4:	bx	lr
   139c8:	bl	10b6c <__stack_chk_fail@plt>
   139cc:	andeq	r4, r2, r8, lsl #30
   139d0:	push	{r4, lr}
   139d4:	mov	r2, #5
   139d8:	ldr	r1, [pc, #88]	; 13a38 <abort@plt+0x2d64>
   139dc:	mov	r0, #0
   139e0:	bl	10b60 <dcgettext@plt>
   139e4:	ldr	r2, [pc, #80]	; 13a3c <abort@plt+0x2d68>
   139e8:	mov	r1, r0
   139ec:	mov	r0, #1
   139f0:	bl	10c5c <__printf_chk@plt>
   139f4:	mov	r2, #5
   139f8:	ldr	r1, [pc, #64]	; 13a40 <abort@plt+0x2d6c>
   139fc:	mov	r0, #0
   13a00:	bl	10b60 <dcgettext@plt>
   13a04:	ldr	r3, [pc, #56]	; 13a44 <abort@plt+0x2d70>
   13a08:	ldr	r2, [pc, #56]	; 13a48 <abort@plt+0x2d74>
   13a0c:	mov	r1, r0
   13a10:	mov	r0, #1
   13a14:	bl	10c5c <__printf_chk@plt>
   13a18:	ldr	r1, [pc, #44]	; 13a4c <abort@plt+0x2d78>
   13a1c:	mov	r2, #5
   13a20:	mov	r0, #0
   13a24:	bl	10b60 <dcgettext@plt>
   13a28:	ldr	r3, [pc, #32]	; 13a50 <abort@plt+0x2d7c>
   13a2c:	pop	{r4, lr}
   13a30:	ldr	r1, [r3]
   13a34:	b	10af4 <fputs_unlocked@plt>
   13a38:	muleq	r1, ip, r9
   13a3c:			; <UNDEFINED> instruction: 0x000149b4
   13a40:	andeq	r4, r1, ip, asr #19
   13a44:	andeq	r4, r1, r8, lsl #9
   13a48:			; <UNDEFINED> instruction: 0x000144b0
   13a4c:	andeq	r4, r1, r0, ror #19
   13a50:	andeq	r5, r2, r4, lsl r1
   13a54:	push	{r4, lr}
   13a58:	mov	r4, r0
   13a5c:	bl	10be4 <malloc@plt>
   13a60:	adds	r4, r4, #0
   13a64:	movne	r4, #1
   13a68:	cmp	r0, #0
   13a6c:	movne	r4, #0
   13a70:	cmp	r4, #0
   13a74:	popeq	{r4, pc}
   13a78:	bl	13c9c <abort@plt+0x2fc8>
   13a7c:	push	{r4, r5, r6, lr}
   13a80:	umull	r4, r5, r0, r1
   13a84:	adds	r3, r5, #0
   13a88:	movne	r3, #1
   13a8c:	cmp	r4, #0
   13a90:	blt	13aa8 <abort@plt+0x2dd4>
   13a94:	cmp	r3, #0
   13a98:	bne	13aa8 <abort@plt+0x2dd4>
   13a9c:	mul	r0, r1, r0
   13aa0:	pop	{r4, r5, r6, lr}
   13aa4:	b	13a54 <abort@plt+0x2d80>
   13aa8:	bl	13c9c <abort@plt+0x2fc8>
   13aac:	b	13a54 <abort@plt+0x2d80>
   13ab0:	adds	r3, r0, #0
   13ab4:	movne	r3, #1
   13ab8:	cmp	r1, #0
   13abc:	movne	r3, #0
   13ac0:	cmp	r3, #0
   13ac4:	push	{r4, lr}
   13ac8:	bne	13af0 <abort@plt+0x2e1c>
   13acc:	mov	r4, r1
   13ad0:	bl	10b78 <realloc@plt>
   13ad4:	adds	r4, r4, #0
   13ad8:	movne	r4, #1
   13adc:	cmp	r0, #0
   13ae0:	movne	r4, #0
   13ae4:	cmp	r4, #0
   13ae8:	popeq	{r4, pc}
   13aec:	bl	13c9c <abort@plt+0x2fc8>
   13af0:	bl	10b24 <free@plt>
   13af4:	mov	r0, #0
   13af8:	pop	{r4, pc}
   13afc:	push	{r4, r5, r6, lr}
   13b00:	umull	r4, r5, r1, r2
   13b04:	adds	r3, r5, #0
   13b08:	movne	r3, #1
   13b0c:	cmp	r4, #0
   13b10:	blt	13b28 <abort@plt+0x2e54>
   13b14:	cmp	r3, #0
   13b18:	bne	13b28 <abort@plt+0x2e54>
   13b1c:	mul	r1, r2, r1
   13b20:	pop	{r4, r5, r6, lr}
   13b24:	b	13ab0 <abort@plt+0x2ddc>
   13b28:	bl	13c9c <abort@plt+0x2fc8>
   13b2c:	push	{r4, r5, r6, r7, r8, lr}
   13b30:	subs	r7, r0, #0
   13b34:	mov	r6, r1
   13b38:	mov	r5, r2
   13b3c:	ldr	r4, [r1]
   13b40:	beq	13b74 <abort@plt+0x2ea0>
   13b44:	mov	r1, r2
   13b48:	ldr	r0, [pc, #104]	; 13bb8 <abort@plt+0x2ee4>
   13b4c:	bl	13ff0 <abort@plt+0x331c>
   13b50:	cmp	r0, r4
   13b54:	bls	13b98 <abort@plt+0x2ec4>
   13b58:	add	r3, r4, #1
   13b5c:	add	r4, r3, r4, lsr #1
   13b60:	str	r4, [r6]
   13b64:	mul	r1, r5, r4
   13b68:	mov	r0, r7
   13b6c:	pop	{r4, r5, r6, r7, r8, lr}
   13b70:	b	13ab0 <abort@plt+0x2ddc>
   13b74:	cmp	r4, #0
   13b78:	beq	13b9c <abort@plt+0x2ec8>
   13b7c:	umull	r0, r1, r4, r5
   13b80:	adds	r3, r1, #0
   13b84:	movne	r3, #1
   13b88:	cmp	r0, #0
   13b8c:	blt	13b98 <abort@plt+0x2ec4>
   13b90:	cmp	r3, #0
   13b94:	beq	13b60 <abort@plt+0x2e8c>
   13b98:	bl	13c9c <abort@plt+0x2fc8>
   13b9c:	mov	r1, r2
   13ba0:	mov	r0, #64	; 0x40
   13ba4:	bl	13ff0 <abort@plt+0x331c>
   13ba8:	cmp	r5, #64	; 0x40
   13bac:	movls	r4, r0
   13bb0:	addhi	r4, r0, #1
   13bb4:	b	13b7c <abort@plt+0x2ea8>
   13bb8:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   13bbc:	cmp	r0, #0
   13bc0:	ldr	r3, [r1]
   13bc4:	beq	13be8 <abort@plt+0x2f14>
   13bc8:	ldr	r2, [pc, #60]	; 13c0c <abort@plt+0x2f38>
   13bcc:	cmp	r3, r2
   13bd0:	bhi	13c04 <abort@plt+0x2f30>
   13bd4:	add	r2, r3, #1
   13bd8:	add	r3, r2, r3, lsr #1
   13bdc:	str	r3, [r1]
   13be0:	mov	r1, r3
   13be4:	b	13ab0 <abort@plt+0x2ddc>
   13be8:	cmp	r3, #0
   13bec:	bne	13c00 <abort@plt+0x2f2c>
   13bf0:	mov	r3, #64	; 0x40
   13bf4:	str	r3, [r1]
   13bf8:	mov	r1, r3
   13bfc:	b	13ab0 <abort@plt+0x2ddc>
   13c00:	bge	13bdc <abort@plt+0x2f08>
   13c04:	push	{r4, lr}
   13c08:	bl	13c9c <abort@plt+0x2fc8>
   13c0c:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   13c10:	push	{r4, lr}
   13c14:	mov	r4, r0
   13c18:	bl	13a54 <abort@plt+0x2d80>
   13c1c:	mov	r2, r4
   13c20:	mov	r1, #0
   13c24:	pop	{r4, lr}
   13c28:	b	10c50 <memset@plt>
   13c2c:	push	{r4, r5, r6, lr}
   13c30:	umull	r4, r5, r0, r1
   13c34:	adds	r3, r5, #0
   13c38:	movne	r3, #1
   13c3c:	cmp	r4, #0
   13c40:	blt	13c58 <abort@plt+0x2f84>
   13c44:	cmp	r3, #0
   13c48:	bne	13c58 <abort@plt+0x2f84>
   13c4c:	bl	10ae8 <calloc@plt>
   13c50:	cmp	r0, #0
   13c54:	popne	{r4, r5, r6, pc}
   13c58:	bl	13c9c <abort@plt+0x2fc8>
   13c5c:	push	{r4, r5, r6, lr}
   13c60:	mov	r4, r1
   13c64:	mov	r5, r0
   13c68:	mov	r0, r1
   13c6c:	bl	13a54 <abort@plt+0x2d80>
   13c70:	mov	r2, r4
   13c74:	mov	r1, r5
   13c78:	pop	{r4, r5, r6, lr}
   13c7c:	b	10b3c <memcpy@plt>
   13c80:	push	{r4, lr}
   13c84:	mov	r4, r0
   13c88:	bl	10c2c <strlen@plt>
   13c8c:	add	r1, r0, #1
   13c90:	mov	r0, r4
   13c94:	pop	{r4, lr}
   13c98:	b	13c5c <abort@plt+0x2f88>
   13c9c:	ldr	r3, [pc, #44]	; 13cd0 <abort@plt+0x2ffc>
   13ca0:	push	{r4, lr}
   13ca4:	mov	r2, #5
   13ca8:	ldr	r1, [pc, #36]	; 13cd4 <abort@plt+0x3000>
   13cac:	mov	r0, #0
   13cb0:	ldr	r4, [r3]
   13cb4:	bl	10b60 <dcgettext@plt>
   13cb8:	ldr	r2, [pc, #24]	; 13cd8 <abort@plt+0x3004>
   13cbc:	mov	r1, #0
   13cc0:	mov	r3, r0
   13cc4:	mov	r0, r4
   13cc8:	bl	10bd8 <error@plt>
   13ccc:	bl	10cd4 <abort@plt>
   13cd0:	andeq	r5, r2, r4, asr #1
   13cd4:	andeq	r4, r1, r4, asr sl
   13cd8:	andeq	r4, r1, ip, lsl r6
   13cdc:	push	{r4, r5, r6, r7, r8, lr}
   13ce0:	subs	r7, r0, #0
   13ce4:	ldr	r5, [pc, #108]	; 13d58 <abort@plt+0x3084>
   13ce8:	sub	sp, sp, #8
   13cec:	mov	r8, r1
   13cf0:	ldr	r1, [r5]
   13cf4:	moveq	r7, sp
   13cf8:	str	r1, [sp, #4]
   13cfc:	mov	r0, r7
   13d00:	mov	r1, r8
   13d04:	mov	r6, r2
   13d08:	bl	10bcc <mbrtowc@plt>
   13d0c:	cmp	r6, #0
   13d10:	cmnne	r0, #3
   13d14:	mov	r4, r0
   13d18:	bhi	13d38 <abort@plt+0x3064>
   13d1c:	ldr	r2, [sp, #4]
   13d20:	ldr	r3, [r5]
   13d24:	mov	r0, r4
   13d28:	cmp	r2, r3
   13d2c:	bne	13d54 <abort@plt+0x3080>
   13d30:	add	sp, sp, #8
   13d34:	pop	{r4, r5, r6, r7, r8, pc}
   13d38:	mov	r0, #0
   13d3c:	bl	13dd0 <abort@plt+0x30fc>
   13d40:	cmp	r0, #0
   13d44:	moveq	r4, #1
   13d48:	ldrbeq	r3, [r8]
   13d4c:	streq	r3, [r7]
   13d50:	b	13d1c <abort@plt+0x3048>
   13d54:	bl	10b6c <__stack_chk_fail@plt>
   13d58:	andeq	r4, r2, r8, lsl #30
   13d5c:	push	{r4, r5, r6, lr}
   13d60:	mov	r4, r0
   13d64:	bl	10bc0 <__fpending@plt>
   13d68:	ldr	r5, [r4]
   13d6c:	and	r5, r5, #32
   13d70:	mov	r6, r0
   13d74:	mov	r0, r4
   13d78:	bl	13e50 <abort@plt+0x317c>
   13d7c:	cmp	r5, #0
   13d80:	mov	r4, r0
   13d84:	bne	13db0 <abort@plt+0x30dc>
   13d88:	cmp	r0, #0
   13d8c:	beq	13da8 <abort@plt+0x30d4>
   13d90:	cmp	r6, #0
   13d94:	bne	13dc8 <abort@plt+0x30f4>
   13d98:	bl	10c38 <__errno_location@plt>
   13d9c:	ldr	r4, [r0]
   13da0:	subs	r4, r4, #9
   13da4:	mvnne	r4, #0
   13da8:	mov	r0, r4
   13dac:	pop	{r4, r5, r6, pc}
   13db0:	cmp	r0, #0
   13db4:	bne	13dc8 <abort@plt+0x30f4>
   13db8:	bl	10c38 <__errno_location@plt>
   13dbc:	str	r4, [r0]
   13dc0:	mvn	r4, #0
   13dc4:	b	13da8 <abort@plt+0x30d4>
   13dc8:	mvn	r4, #0
   13dcc:	b	13da8 <abort@plt+0x30d4>
   13dd0:	push	{r4, lr}
   13dd4:	mov	r1, #0
   13dd8:	bl	10c98 <setlocale@plt>
   13ddc:	subs	r4, r0, #0
   13de0:	beq	13e0c <abort@plt+0x3138>
   13de4:	ldr	r1, [pc, #40]	; 13e14 <abort@plt+0x3140>
   13de8:	bl	10b0c <strcmp@plt>
   13dec:	cmp	r0, #0
   13df0:	popeq	{r4, pc}
   13df4:	mov	r0, r4
   13df8:	ldr	r1, [pc, #24]	; 13e18 <abort@plt+0x3144>
   13dfc:	bl	10b0c <strcmp@plt>
   13e00:	adds	r0, r0, #0
   13e04:	movne	r0, #1
   13e08:	pop	{r4, pc}
   13e0c:	mov	r0, #1
   13e10:	pop	{r4, pc}
   13e14:	andeq	r4, r1, r8, ror #20
   13e18:	andeq	r4, r1, ip, ror #20
   13e1c:	push	{r4, lr}
   13e20:	mov	r0, #14
   13e24:	bl	10cb0 <nl_langinfo@plt>
   13e28:	cmp	r0, #0
   13e2c:	beq	13e44 <abort@plt+0x3170>
   13e30:	ldrb	r2, [r0]
   13e34:	ldr	r3, [pc, #16]	; 13e4c <abort@plt+0x3178>
   13e38:	cmp	r2, #0
   13e3c:	moveq	r0, r3
   13e40:	pop	{r4, pc}
   13e44:	ldr	r0, [pc]	; 13e4c <abort@plt+0x3178>
   13e48:	pop	{r4, pc}
   13e4c:	andeq	r4, r1, r4, ror sl
   13e50:	push	{r4, r5, lr}
   13e54:	sub	sp, sp, #12
   13e58:	mov	r4, r0
   13e5c:	bl	10c68 <fileno@plt>
   13e60:	cmp	r0, #0
   13e64:	mov	r0, r4
   13e68:	blt	13ee4 <abort@plt+0x3210>
   13e6c:	bl	10bfc <__freading@plt>
   13e70:	cmp	r0, #0
   13e74:	bne	13eb0 <abort@plt+0x31dc>
   13e78:	mov	r0, r4
   13e7c:	bl	13ef0 <abort@plt+0x321c>
   13e80:	cmp	r0, #0
   13e84:	beq	13ee0 <abort@plt+0x320c>
   13e88:	bl	10c38 <__errno_location@plt>
   13e8c:	mov	r5, r0
   13e90:	mov	r0, r4
   13e94:	ldr	r4, [r5]
   13e98:	bl	10c80 <fclose@plt>
   13e9c:	cmp	r4, #0
   13ea0:	mvnne	r0, #0
   13ea4:	strne	r4, [r5]
   13ea8:	add	sp, sp, #12
   13eac:	pop	{r4, r5, pc}
   13eb0:	mov	r0, r4
   13eb4:	bl	10c68 <fileno@plt>
   13eb8:	mov	r3, #1
   13ebc:	str	r3, [sp]
   13ec0:	mov	r2, #0
   13ec4:	mov	r3, #0
   13ec8:	bl	10ba8 <lseek64@plt>
   13ecc:	mvn	r3, #0
   13ed0:	mvn	r2, #0
   13ed4:	cmp	r1, r3
   13ed8:	cmpeq	r0, r2
   13edc:	bne	13e78 <abort@plt+0x31a4>
   13ee0:	mov	r0, r4
   13ee4:	add	sp, sp, #12
   13ee8:	pop	{r4, r5, lr}
   13eec:	b	10c80 <fclose@plt>
   13ef0:	push	{r4, lr}
   13ef4:	subs	r4, r0, #0
   13ef8:	sub	sp, sp, #8
   13efc:	beq	13f18 <abort@plt+0x3244>
   13f00:	bl	10bfc <__freading@plt>
   13f04:	cmp	r0, #0
   13f08:	beq	13f18 <abort@plt+0x3244>
   13f0c:	ldr	r3, [r4]
   13f10:	tst	r3, #256	; 0x100
   13f14:	bne	13f28 <abort@plt+0x3254>
   13f18:	mov	r0, r4
   13f1c:	add	sp, sp, #8
   13f20:	pop	{r4, lr}
   13f24:	b	10b18 <fflush@plt>
   13f28:	mov	r3, #1
   13f2c:	str	r3, [sp]
   13f30:	mov	r2, #0
   13f34:	mov	r3, #0
   13f38:	mov	r0, r4
   13f3c:	bl	13f50 <abort@plt+0x327c>
   13f40:	mov	r0, r4
   13f44:	add	sp, sp, #8
   13f48:	pop	{r4, lr}
   13f4c:	b	10b18 <fflush@plt>
   13f50:	push	{r4, r5, r6, r7, r8, lr}
   13f54:	sub	sp, sp, #8
   13f58:	ldmib	r0, {ip, lr}
   13f5c:	mov	r4, r0
   13f60:	ldr	r5, [sp, #32]
   13f64:	cmp	lr, ip
   13f68:	beq	13f80 <abort@plt+0x32ac>
   13f6c:	str	r5, [sp, #32]
   13f70:	mov	r0, r4
   13f74:	add	sp, sp, #8
   13f78:	pop	{r4, r5, r6, r7, r8, lr}
   13f7c:	b	10c8c <fseeko64@plt>
   13f80:	ldr	lr, [r0, #20]
   13f84:	ldr	ip, [r0, #16]
   13f88:	cmp	lr, ip
   13f8c:	bne	13f6c <abort@plt+0x3298>
   13f90:	ldr	r8, [r0, #36]	; 0x24
   13f94:	cmp	r8, #0
   13f98:	bne	13f6c <abort@plt+0x3298>
   13f9c:	mov	r6, r2
   13fa0:	mov	r7, r3
   13fa4:	bl	10c68 <fileno@plt>
   13fa8:	mov	r2, r6
   13fac:	mov	r3, r7
   13fb0:	str	r5, [sp]
   13fb4:	bl	10ba8 <lseek64@plt>
   13fb8:	mvn	r3, #0
   13fbc:	mvn	r2, #0
   13fc0:	cmp	r1, r3
   13fc4:	cmpeq	r0, r2
   13fc8:	beq	13fe8 <abort@plt+0x3314>
   13fcc:	ldr	r3, [r4]
   13fd0:	strd	r0, [r4, #80]	; 0x50
   13fd4:	mov	r0, r8
   13fd8:	bic	r3, r3, #16
   13fdc:	str	r3, [r4]
   13fe0:	add	sp, sp, #8
   13fe4:	pop	{r4, r5, r6, r7, r8, pc}
   13fe8:	mvn	r0, #0
   13fec:	b	13fe0 <abort@plt+0x330c>
   13ff0:	subs	r2, r1, #1
   13ff4:	bxeq	lr
   13ff8:	bcc	141d0 <abort@plt+0x34fc>
   13ffc:	cmp	r0, r1
   14000:	bls	141b4 <abort@plt+0x34e0>
   14004:	tst	r1, r2
   14008:	beq	141c0 <abort@plt+0x34ec>
   1400c:	clz	r3, r0
   14010:	clz	r2, r1
   14014:	sub	r3, r2, r3
   14018:	rsbs	r3, r3, #31
   1401c:	addne	r3, r3, r3, lsl #1
   14020:	mov	r2, #0
   14024:	addne	pc, pc, r3, lsl #2
   14028:	nop			; (mov r0, r0)
   1402c:	cmp	r0, r1, lsl #31
   14030:	adc	r2, r2, r2
   14034:	subcs	r0, r0, r1, lsl #31
   14038:	cmp	r0, r1, lsl #30
   1403c:	adc	r2, r2, r2
   14040:	subcs	r0, r0, r1, lsl #30
   14044:	cmp	r0, r1, lsl #29
   14048:	adc	r2, r2, r2
   1404c:	subcs	r0, r0, r1, lsl #29
   14050:	cmp	r0, r1, lsl #28
   14054:	adc	r2, r2, r2
   14058:	subcs	r0, r0, r1, lsl #28
   1405c:	cmp	r0, r1, lsl #27
   14060:	adc	r2, r2, r2
   14064:	subcs	r0, r0, r1, lsl #27
   14068:	cmp	r0, r1, lsl #26
   1406c:	adc	r2, r2, r2
   14070:	subcs	r0, r0, r1, lsl #26
   14074:	cmp	r0, r1, lsl #25
   14078:	adc	r2, r2, r2
   1407c:	subcs	r0, r0, r1, lsl #25
   14080:	cmp	r0, r1, lsl #24
   14084:	adc	r2, r2, r2
   14088:	subcs	r0, r0, r1, lsl #24
   1408c:	cmp	r0, r1, lsl #23
   14090:	adc	r2, r2, r2
   14094:	subcs	r0, r0, r1, lsl #23
   14098:	cmp	r0, r1, lsl #22
   1409c:	adc	r2, r2, r2
   140a0:	subcs	r0, r0, r1, lsl #22
   140a4:	cmp	r0, r1, lsl #21
   140a8:	adc	r2, r2, r2
   140ac:	subcs	r0, r0, r1, lsl #21
   140b0:	cmp	r0, r1, lsl #20
   140b4:	adc	r2, r2, r2
   140b8:	subcs	r0, r0, r1, lsl #20
   140bc:	cmp	r0, r1, lsl #19
   140c0:	adc	r2, r2, r2
   140c4:	subcs	r0, r0, r1, lsl #19
   140c8:	cmp	r0, r1, lsl #18
   140cc:	adc	r2, r2, r2
   140d0:	subcs	r0, r0, r1, lsl #18
   140d4:	cmp	r0, r1, lsl #17
   140d8:	adc	r2, r2, r2
   140dc:	subcs	r0, r0, r1, lsl #17
   140e0:	cmp	r0, r1, lsl #16
   140e4:	adc	r2, r2, r2
   140e8:	subcs	r0, r0, r1, lsl #16
   140ec:	cmp	r0, r1, lsl #15
   140f0:	adc	r2, r2, r2
   140f4:	subcs	r0, r0, r1, lsl #15
   140f8:	cmp	r0, r1, lsl #14
   140fc:	adc	r2, r2, r2
   14100:	subcs	r0, r0, r1, lsl #14
   14104:	cmp	r0, r1, lsl #13
   14108:	adc	r2, r2, r2
   1410c:	subcs	r0, r0, r1, lsl #13
   14110:	cmp	r0, r1, lsl #12
   14114:	adc	r2, r2, r2
   14118:	subcs	r0, r0, r1, lsl #12
   1411c:	cmp	r0, r1, lsl #11
   14120:	adc	r2, r2, r2
   14124:	subcs	r0, r0, r1, lsl #11
   14128:	cmp	r0, r1, lsl #10
   1412c:	adc	r2, r2, r2
   14130:	subcs	r0, r0, r1, lsl #10
   14134:	cmp	r0, r1, lsl #9
   14138:	adc	r2, r2, r2
   1413c:	subcs	r0, r0, r1, lsl #9
   14140:	cmp	r0, r1, lsl #8
   14144:	adc	r2, r2, r2
   14148:	subcs	r0, r0, r1, lsl #8
   1414c:	cmp	r0, r1, lsl #7
   14150:	adc	r2, r2, r2
   14154:	subcs	r0, r0, r1, lsl #7
   14158:	cmp	r0, r1, lsl #6
   1415c:	adc	r2, r2, r2
   14160:	subcs	r0, r0, r1, lsl #6
   14164:	cmp	r0, r1, lsl #5
   14168:	adc	r2, r2, r2
   1416c:	subcs	r0, r0, r1, lsl #5
   14170:	cmp	r0, r1, lsl #4
   14174:	adc	r2, r2, r2
   14178:	subcs	r0, r0, r1, lsl #4
   1417c:	cmp	r0, r1, lsl #3
   14180:	adc	r2, r2, r2
   14184:	subcs	r0, r0, r1, lsl #3
   14188:	cmp	r0, r1, lsl #2
   1418c:	adc	r2, r2, r2
   14190:	subcs	r0, r0, r1, lsl #2
   14194:	cmp	r0, r1, lsl #1
   14198:	adc	r2, r2, r2
   1419c:	subcs	r0, r0, r1, lsl #1
   141a0:	cmp	r0, r1
   141a4:	adc	r2, r2, r2
   141a8:	subcs	r0, r0, r1
   141ac:	mov	r0, r2
   141b0:	bx	lr
   141b4:	moveq	r0, #1
   141b8:	movne	r0, #0
   141bc:	bx	lr
   141c0:	clz	r2, r1
   141c4:	rsb	r2, r2, #31
   141c8:	lsr	r0, r0, r2
   141cc:	bx	lr
   141d0:	cmp	r0, #0
   141d4:	mvnne	r0, #0
   141d8:	b	141fc <abort@plt+0x3528>
   141dc:	cmp	r1, #0
   141e0:	beq	141d0 <abort@plt+0x34fc>
   141e4:	push	{r0, r1, lr}
   141e8:	bl	13ff0 <abort@plt+0x331c>
   141ec:	pop	{r1, r2, lr}
   141f0:	mul	r3, r2, r0
   141f4:	sub	r1, r1, r3
   141f8:	bx	lr
   141fc:	push	{r1, lr}
   14200:	mov	r0, #8
   14204:	bl	10b00 <raise@plt>
   14208:	pop	{r1, pc}
   1420c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14210:	mov	r7, r0
   14214:	ldr	r6, [pc, #72]	; 14264 <abort@plt+0x3590>
   14218:	ldr	r5, [pc, #72]	; 14268 <abort@plt+0x3594>
   1421c:	add	r6, pc, r6
   14220:	add	r5, pc, r5
   14224:	sub	r6, r6, r5
   14228:	mov	r8, r1
   1422c:	mov	r9, r2
   14230:	bl	10ac8 <calloc@plt-0x20>
   14234:	asrs	r6, r6, #2
   14238:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1423c:	mov	r4, #0
   14240:	add	r4, r4, #1
   14244:	ldr	r3, [r5], #4
   14248:	mov	r2, r9
   1424c:	mov	r1, r8
   14250:	mov	r0, r7
   14254:	blx	r3
   14258:	cmp	r6, r4
   1425c:	bne	14240 <abort@plt+0x356c>
   14260:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14264:	andeq	r0, r1, r0, ror #25
   14268:	ldrdeq	r0, [r1], -r8
   1426c:	bx	lr
   14270:	ldr	r3, [pc, #12]	; 14284 <abort@plt+0x35b0>
   14274:	mov	r1, #0
   14278:	add	r3, pc, r3
   1427c:	ldr	r2, [r3]
   14280:	b	10c44 <__cxa_atexit@plt>
   14284:	andeq	r0, r1, ip, lsr lr

Disassembly of section .fini:

00014288 <.fini>:
   14288:	push	{r3, lr}
   1428c:	pop	{r3, pc}
