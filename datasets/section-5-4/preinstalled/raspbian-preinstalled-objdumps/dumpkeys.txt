
raspbian-preinstalled/dumpkeys:     file format elf32-littlearm


Disassembly of section .init:

000109a0 <.init>:
   109a0:	push	{r3, lr}
   109a4:	bl	110b4 <close@plt+0x538>
   109a8:	pop	{r3, pc}

Disassembly of section .plt:

000109ac <calloc@plt-0x14>:
   109ac:	push	{lr}		; (str lr, [sp, #-4]!)
   109b0:	ldr	lr, [pc, #4]	; 109bc <calloc@plt-0x4>
   109b4:	add	lr, pc, lr
   109b8:	ldr	pc, [lr, #8]!
   109bc:	andeq	r1, r2, r4, asr #12

000109c0 <calloc@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #135168	; 0x21000
   109c8:	ldr	pc, [ip, #1604]!	; 0x644

000109cc <strcmp@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #135168	; 0x21000
   109d4:	ldr	pc, [ip, #1596]!	; 0x63c

000109d8 <strtol@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #135168	; 0x21000
   109e0:	ldr	pc, [ip, #1588]!	; 0x634

000109e4 <free@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #135168	; 0x21000
   109ec:	ldr	pc, [ip, #1580]!	; 0x62c

000109f0 <memcpy@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #135168	; 0x21000
   109f8:	ldr	pc, [ip, #1572]!	; 0x624

000109fc <dcgettext@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #135168	; 0x21000
   10a04:	ldr	pc, [ip, #1564]!	; 0x61c

00010a08 <strdup@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #135168	; 0x21000
   10a10:	ldr	pc, [ip, #1556]!	; 0x614

00010a14 <__stack_chk_fail@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #135168	; 0x21000
   10a1c:	ldr	pc, [ip, #1548]!	; 0x60c

00010a20 <realloc@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #135168	; 0x21000
   10a28:	ldr	pc, [ip, #1540]!	; 0x604

00010a2c <textdomain@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #135168	; 0x21000
   10a34:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a38 <strcasecmp@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #135168	; 0x21000
   10a40:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a44 <fwrite@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #135168	; 0x21000
   10a4c:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a50 <ioctl@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #135168	; 0x21000
   10a58:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a5c <malloc@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #135168	; 0x21000
   10a64:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a68 <__libc_start_main@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #135168	; 0x21000
   10a70:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a74 <strerror@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #135168	; 0x21000
   10a7c:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a80 <__vfprintf_chk@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #135168	; 0x21000
   10a88:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a8c <__gmon_start__@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #135168	; 0x21000
   10a94:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a98 <open@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #135168	; 0x21000
   10aa0:	ldr	pc, [ip, #1460]!	; 0x5b4

00010aa4 <getopt_long@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #135168	; 0x21000
   10aac:	ldr	pc, [ip, #1452]!	; 0x5ac

00010ab0 <__ctype_b_loc@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #135168	; 0x21000
   10ab8:	ldr	pc, [ip, #1444]!	; 0x5a4

00010abc <exit@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #135168	; 0x21000
   10ac4:	ldr	pc, [ip, #1436]!	; 0x59c

00010ac8 <strlen@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #135168	; 0x21000
   10ad0:	ldr	pc, [ip, #1428]!	; 0x594

00010ad4 <__errno_location@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #135168	; 0x21000
   10adc:	ldr	pc, [ip, #1420]!	; 0x58c

00010ae0 <__strcat_chk@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #135168	; 0x21000
   10ae8:	ldr	pc, [ip, #1412]!	; 0x584

00010aec <memset@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #135168	; 0x21000
   10af4:	ldr	pc, [ip, #1404]!	; 0x57c

00010af8 <strncpy@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #135168	; 0x21000
   10b00:	ldr	pc, [ip, #1396]!	; 0x574

00010b04 <__printf_chk@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #135168	; 0x21000
   10b0c:	ldr	pc, [ip, #1388]!	; 0x56c

00010b10 <__fprintf_chk@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #135168	; 0x21000
   10b18:	ldr	pc, [ip, #1380]!	; 0x564

00010b1c <setlocale@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #135168	; 0x21000
   10b24:	ldr	pc, [ip, #1372]!	; 0x55c

00010b28 <strrchr@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #135168	; 0x21000
   10b30:	ldr	pc, [ip, #1364]!	; 0x554

00010b34 <fputc@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #135168	; 0x21000
   10b3c:	ldr	pc, [ip, #1356]!	; 0x54c

00010b40 <bindtextdomain@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #135168	; 0x21000
   10b48:	ldr	pc, [ip, #1348]!	; 0x544

00010b4c <isatty@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #135168	; 0x21000
   10b54:	ldr	pc, [ip, #1340]!	; 0x53c

00010b58 <fputs@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #135168	; 0x21000
   10b60:	ldr	pc, [ip, #1332]!	; 0x534

00010b64 <strncmp@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #135168	; 0x21000
   10b6c:	ldr	pc, [ip, #1324]!	; 0x52c

00010b70 <abort@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #135168	; 0x21000
   10b78:	ldr	pc, [ip, #1316]!	; 0x524

00010b7c <close@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #135168	; 0x21000
   10b84:	ldr	pc, [ip, #1308]!	; 0x51c

Disassembly of section .text:

00010b88 <.text>:
   10b88:	ldr	r3, [pc, #1176]	; 11028 <close@plt+0x4ac>
   10b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10b90:	mov	r5, r1
   10b94:	sub	sp, sp, #268	; 0x10c
   10b98:	ldr	r3, [r3]
   10b9c:	mov	r2, #224	; 0xe0
   10ba0:	ldr	r1, [pc, #1156]	; 1102c <close@plt+0x4b0>
   10ba4:	mov	r6, r0
   10ba8:	add	r0, sp, #36	; 0x24
   10bac:	str	r3, [sp, #260]	; 0x104
   10bb0:	bl	109f0 <memcpy@plt>
   10bb4:	ldr	r4, [r5]
   10bb8:	mov	r1, #47	; 0x2f
   10bbc:	mov	r0, r4
   10bc0:	bl	10b28 <strrchr@plt>
   10bc4:	ldr	r9, [pc, #1124]	; 11030 <close@plt+0x4b4>
   10bc8:	ldr	r1, [pc, #1124]	; 11034 <close@plt+0x4b8>
   10bcc:	cmp	r0, #0
   10bd0:	addne	r4, r0, #1
   10bd4:	mov	r0, #6
   10bd8:	str	r4, [r9]
   10bdc:	bl	10b1c <setlocale@plt>
   10be0:	ldr	r1, [pc, #1104]	; 11038 <close@plt+0x4bc>
   10be4:	ldr	r0, [pc, #1104]	; 1103c <close@plt+0x4c0>
   10be8:	bl	10b40 <bindtextdomain@plt>
   10bec:	ldr	r0, [pc, #1096]	; 1103c <close@plt+0x4c0>
   10bf0:	bl	10a2c <textdomain@plt>
   10bf4:	bl	118c0 <close@plt+0xd44>
   10bf8:	subs	fp, r0, #0
   10bfc:	beq	10e78 <close@plt+0x2fc>
   10c00:	ldr	r7, [pc, #1080]	; 11040 <close@plt+0x4c4>
   10c04:	mov	sl, #2
   10c08:	mov	r8, #0
   10c0c:	str	r8, [sp, #24]
   10c10:	str	r8, [sp, #20]
   10c14:	str	r8, [sp, #28]
   10c18:	str	r8, [sp, #16]
   10c1c:	str	r8, [sp, #12]
   10c20:	mov	r4, #0
   10c24:	str	r4, [sp]
   10c28:	add	r3, sp, #36	; 0x24
   10c2c:	mov	r2, r7
   10c30:	mov	r1, r5
   10c34:	mov	r0, r6
   10c38:	bl	10aa4 <getopt_long@plt>
   10c3c:	cmn	r0, #1
   10c40:	beq	10e80 <close@plt+0x304>
   10c44:	sub	r0, r0, #49	; 0x31
   10c48:	cmp	r0, #69	; 0x45
   10c4c:	ldrls	pc, [pc, r0, lsl #2]
   10c50:	b	10c20 <close@plt+0xa4>
   10c54:			; <UNDEFINED> instruction: 0x00010db0
   10c58:	andeq	r0, r1, r0, lsr #24
   10c5c:	andeq	r0, r1, r0, lsr #24
   10c60:	andeq	r0, r1, r0, lsr #24
   10c64:	andeq	r0, r1, r0, lsr #24
   10c68:	andeq	r0, r1, r0, lsr #24
   10c6c:	andeq	r0, r1, r0, lsr #24
   10c70:	andeq	r0, r1, r0, lsr #24
   10c74:	andeq	r0, r1, r0, lsr #24
   10c78:	andeq	r0, r1, r0, lsr #24
   10c7c:	andeq	r0, r1, r0, lsr #24
   10c80:	andeq	r0, r1, r0, lsr #24
   10c84:	andeq	r0, r1, r0, lsr #24
   10c88:	andeq	r0, r1, r0, lsr #24
   10c8c:	andeq	r0, r1, ip, ror #26
   10c90:	andeq	r0, r1, r0, lsr #24
   10c94:	andeq	r0, r1, r0, lsr #24
   10c98:	andeq	r0, r1, r0, lsr #24
   10c9c:	andeq	r0, r1, r0, lsr #24
   10ca0:	andeq	r0, r1, r0, lsr #24
   10ca4:	andeq	r0, r1, r0, lsr #24
   10ca8:	andeq	r0, r1, r0, lsr #24
   10cac:	andeq	r0, r1, r0, lsr #24
   10cb0:	andeq	r0, r1, r0, lsr #24
   10cb4:	andeq	r0, r1, r0, lsr #24
   10cb8:	andeq	r0, r1, r0, lsr #24
   10cbc:	andeq	r0, r1, r0, lsr #24
   10cc0:	andeq	r0, r1, r0, lsr #24
   10cc4:	andeq	r0, r1, r0, lsr #24
   10cc8:	andeq	r0, r1, r0, lsr #24
   10ccc:	andeq	r0, r1, r0, lsr #24
   10cd0:	andeq	r0, r1, r0, lsr #24
   10cd4:	andeq	r0, r1, r0, lsr #24
   10cd8:	andeq	r0, r1, r0, lsr #24
   10cdc:	andeq	r0, r1, r0, lsr lr
   10ce0:	andeq	r0, r1, r0, lsr #24
   10ce4:	andeq	r0, r1, r0, lsr #24
   10ce8:	andeq	r0, r1, r4, lsl #28
   10cec:	andeq	r0, r1, r0, lsr #24
   10cf0:	andeq	r0, r1, r0, lsr #24
   10cf4:	andeq	r0, r1, r0, lsr #24
   10cf8:	andeq	r0, r1, r0, lsr #24
   10cfc:	andeq	r0, r1, r0, lsr #24
   10d00:	andeq	r0, r1, r0, lsr #24
   10d04:	andeq	r0, r1, r0, lsr #24
   10d08:	andeq	r0, r1, r0, lsr #24
   10d0c:	andeq	r0, r1, r0, lsr #24
   10d10:	andeq	r0, r1, r0, lsr #24
   10d14:	andeq	r0, r1, r0, lsr #24
   10d18:	andeq	r0, r1, r0, lsr #24
   10d1c:	ldrdeq	r0, [r1], -r4
   10d20:	andeq	r0, r1, ip, asr #27
   10d24:	andeq	r0, r1, r0, lsr #24
   10d28:	andeq	r0, r1, r4, asr #27
   10d2c:	andeq	r0, r1, r0, lsr #24
   10d30:	andeq	r0, r1, ip, ror #26
   10d34:			; <UNDEFINED> instruction: 0x00010db8
   10d38:	andeq	r0, r1, r0, lsr #24
   10d3c:	andeq	r0, r1, ip, ror sp
   10d40:	andeq	r0, r1, r0, ror sp
   10d44:	andeq	r0, r1, r0, lsr #24
   10d48:	andeq	r0, r1, r4, lsr #27
   10d4c:	andeq	r0, r1, r0, lsr #24
   10d50:	andeq	r0, r1, r0, lsr #24
   10d54:	andeq	r0, r1, r0, lsr #24
   10d58:	andeq	r0, r1, r0, lsr #24
   10d5c:	andeq	r0, r1, r0, ror sp
   10d60:	muleq	r1, r8, sp
   10d64:	andeq	r0, r1, r0, lsr #24
   10d68:	andeq	r0, r1, r8, lsl #27
   10d6c:	bl	11168 <close@plt+0x5ec>
   10d70:	mov	r3, #1
   10d74:	str	r3, [sp, #12]
   10d78:	b	10c20 <close@plt+0xa4>
   10d7c:	mov	r3, #1
   10d80:	str	r3, [sp, #24]
   10d84:	b	10c20 <close@plt+0xa4>
   10d88:	mov	r1, #6
   10d8c:	mov	r0, fp
   10d90:	bl	11720 <close@plt+0xba4>
   10d94:	b	10c20 <close@plt+0xa4>
   10d98:	mov	r3, #1
   10d9c:	str	r3, [sp, #20]
   10da0:	b	10c20 <close@plt+0xa4>
   10da4:	mov	r3, #1
   10da8:	str	r3, [sp, #28]
   10dac:	b	10c20 <close@plt+0xa4>
   10db0:	mov	sl, #8
   10db4:	b	10c20 <close@plt+0xa4>
   10db8:	mov	r3, #1
   10dbc:	str	r3, [sp, #16]
   10dc0:	b	10c20 <close@plt+0xa4>
   10dc4:	mov	sl, #4
   10dc8:	b	10c20 <close@plt+0xa4>
   10dcc:	mov	r8, #1
   10dd0:	b	10c20 <close@plt+0xa4>
   10dd4:	ldr	r3, [pc, #616]	; 11044 <close@plt+0x4c8>
   10dd8:	mov	r0, fp
   10ddc:	ldr	r1, [r3]
   10de0:	bl	15064 <close@plt+0x44e8>
   10de4:	cmp	r0, #0
   10de8:	bne	10ff4 <close@plt+0x478>
   10dec:	ldr	r3, [pc, #592]	; 11044 <close@plt+0x4c8>
   10df0:	ldr	r1, [pc, #592]	; 11048 <close@plt+0x4cc>
   10df4:	mov	r0, #1
   10df8:	ldr	r2, [r3]
   10dfc:	bl	10b04 <__printf_chk@plt>
   10e00:	b	10c20 <close@plt+0xa4>
   10e04:	mov	r2, #5
   10e08:	ldr	r1, [pc, #572]	; 1104c <close@plt+0x4d0>
   10e0c:	mov	r0, #0
   10e10:	bl	109fc <dcgettext@plt>
   10e14:	ldr	r2, [r9]
   10e18:	ldr	r3, [pc, #560]	; 11050 <close@plt+0x4d4>
   10e1c:	mov	r1, r0
   10e20:	mov	r0, #1
   10e24:	bl	10b04 <__printf_chk@plt>
   10e28:	mov	r0, #0
   10e2c:	bl	10abc <exit@plt>
   10e30:	ldr	r3, [pc, #524]	; 11044 <close@plt+0x4c8>
   10e34:	mov	r2, #10
   10e38:	mov	r1, #0
   10e3c:	ldr	r0, [r3]
   10e40:	bl	109d8 <strtol@plt>
   10e44:	mov	sl, r0
   10e48:	b	10c20 <close@plt+0xa4>
   10e4c:	ldr	r3, [pc, #512]	; 11054 <close@plt+0x4d8>
   10e50:	mov	r2, #5
   10e54:	ldr	r1, [pc, #508]	; 11058 <close@plt+0x4dc>
   10e58:	mov	r0, #0
   10e5c:	ldr	r4, [r3]
   10e60:	bl	109fc <dcgettext@plt>
   10e64:	ldr	r3, [r9]
   10e68:	mov	r1, #1
   10e6c:	mov	r2, r0
   10e70:	mov	r0, r4
   10e74:	bl	10b10 <__fprintf_chk@plt>
   10e78:	mov	r0, #1
   10e7c:	bl	10abc <exit@plt>
   10e80:	ldr	r3, [pc, #468]	; 1105c <close@plt+0x4e0>
   10e84:	ldr	r3, [r3]
   10e88:	cmp	r3, r6
   10e8c:	blt	10d6c <close@plt+0x1f0>
   10e90:	mov	r0, r4
   10e94:	bl	112f0 <close@plt+0x774>
   10e98:	ldr	r5, [pc, #448]	; 11060 <close@plt+0x4e4>
   10e9c:	cmp	r0, #0
   10ea0:	str	r0, [r5]
   10ea4:	blt	10f80 <close@plt+0x404>
   10ea8:	add	r2, sp, #32
   10eac:	ldr	r1, [pc, #432]	; 11064 <close@plt+0x4e8>
   10eb0:	ldr	r0, [r5]
   10eb4:	bl	10a50 <ioctl@plt>
   10eb8:	cmp	r0, #0
   10ebc:	bne	10e4c <close@plt+0x2d0>
   10ec0:	ldr	r3, [sp, #32]
   10ec4:	cmp	r3, #3
   10ec8:	beq	10f34 <close@plt+0x3b8>
   10ecc:	ldr	r1, [r5]
   10ed0:	mov	r0, fp
   10ed4:	bl	11d90 <close@plt+0x1214>
   10ed8:	cmp	r0, #0
   10edc:	blt	10f1c <close@plt+0x3a0>
   10ee0:	ldr	r3, [sp, #12]
   10ee4:	ldr	r2, [sp, #16]
   10ee8:	orrs	r3, r3, r2
   10eec:	bne	10fa4 <close@plt+0x428>
   10ef0:	cmp	r8, #0
   10ef4:	bne	10f5c <close@plt+0x3e0>
   10ef8:	ldr	r3, [sp, #20]
   10efc:	cmp	r3, #0
   10f00:	beq	10f44 <close@plt+0x3c8>
   10f04:	mov	r0, fp
   10f08:	bl	11758 <close@plt+0xbdc>
   10f0c:	ldr	r0, [r5]
   10f10:	bl	10b7c <close@plt>
   10f14:	mov	r0, #0
   10f18:	bl	10abc <exit@plt>
   10f1c:	mov	r0, fp
   10f20:	bl	11758 <close@plt+0xbdc>
   10f24:	ldr	r0, [r5]
   10f28:	bl	10b7c <close@plt>
   10f2c:	mov	r0, #1
   10f30:	bl	10abc <exit@plt>
   10f34:	mov	r1, #16
   10f38:	mov	r0, fp
   10f3c:	bl	11744 <close@plt+0xbc8>
   10f40:	b	10ecc <close@plt+0x350>
   10f44:	ldr	r1, [pc, #284]	; 11068 <close@plt+0x4ec>
   10f48:	ldr	r3, [sp, #28]
   10f4c:	mov	r2, sl
   10f50:	ldr	r1, [r1]
   10f54:	mov	r0, fp
   10f58:	bl	138dc <close@plt+0x2d60>
   10f5c:	ldr	r3, [sp, #20]
   10f60:	ldr	r2, [sp, #24]
   10f64:	orrs	r3, r3, r2
   10f68:	bne	10f04 <close@plt+0x388>
   10f6c:	ldr	r3, [pc, #244]	; 11068 <close@plt+0x4ec>
   10f70:	mov	r0, fp
   10f74:	ldr	r1, [r3]
   10f78:	bl	12e70 <close@plt+0x22f4>
   10f7c:	b	10f04 <close@plt+0x388>
   10f80:	mov	r2, #5
   10f84:	ldr	r1, [pc, #224]	; 1106c <close@plt+0x4f0>
   10f88:	mov	r0, r4
   10f8c:	bl	109fc <dcgettext@plt>
   10f90:	mov	r1, r4
   10f94:	mov	r2, r0
   10f98:	mov	r0, #1
   10f9c:	bl	114b4 <close@plt+0x938>
   10fa0:	b	10ea8 <close@plt+0x32c>
   10fa4:	ldr	r4, [pc, #188]	; 11068 <close@plt+0x4ec>
   10fa8:	ldr	r2, [r5]
   10fac:	mov	r0, fp
   10fb0:	ldr	r1, [r4]
   10fb4:	bl	1490c <close@plt+0x3d90>
   10fb8:	ldr	r3, [sp, #12]
   10fbc:	cmp	r3, #0
   10fc0:	beq	10f14 <close@plt+0x398>
   10fc4:	mov	r2, #5
   10fc8:	ldr	r1, [pc, #160]	; 11070 <close@plt+0x4f4>
   10fcc:	mov	r0, #0
   10fd0:	bl	109fc <dcgettext@plt>
   10fd4:	ldr	r2, [r9]
   10fd8:	mov	r1, r0
   10fdc:	mov	r0, #1
   10fe0:	bl	10b04 <__printf_chk@plt>
   10fe4:	ldr	r1, [r4]
   10fe8:	mov	r0, fp
   10fec:	bl	14bbc <close@plt+0x4040>
   10ff0:	b	10f14 <close@plt+0x398>
   10ff4:	ldr	r3, [pc, #88]	; 11054 <close@plt+0x4d8>
   10ff8:	mov	r2, #5
   10ffc:	ldr	r1, [pc, #112]	; 11074 <close@plt+0x4f8>
   11000:	mov	r0, #0
   11004:	ldr	r4, [r3]
   11008:	bl	109fc <dcgettext@plt>
   1100c:	ldr	r3, [pc, #48]	; 11044 <close@plt+0x4c8>
   11010:	mov	r1, #1
   11014:	ldr	r3, [r3]
   11018:	mov	r2, r0
   1101c:	mov	r0, r4
   11020:	bl	10b10 <__fprintf_chk@plt>
   11024:	bl	11168 <close@plt+0x5ec>
   11028:	andeq	r1, r3, r8, lsl #30
   1102c:	andeq	r5, r1, r8, asr #30
   11030:	andeq	r2, r3, r8, lsr #2
   11034:	ldrdeq	r6, [r1], -r8
   11038:	andeq	r6, r1, r4, lsr #6
   1103c:	andeq	r6, r1, r8, lsr r3
   11040:	muleq	r1, r4, r3
   11044:	andeq	r2, r3, r0, ror #1
   11048:	andeq	r6, r1, ip, ror #6
   1104c:	andeq	r6, r1, ip, ror r3
   11050:	andeq	r6, r1, r8, lsl #7
   11054:	ldrdeq	r2, [r3], -r8
   11058:	andeq	r6, r1, r0, ror #7
   1105c:	ldrdeq	r2, [r3], -r0
   11060:	andeq	r2, r3, r8, ror #1
   11064:	andeq	r4, r0, r4, asr #22
   11068:	ldrdeq	r2, [r3], -ip
   1106c:	andeq	r6, r1, r8, lsr #7
   11070:	andeq	r6, r1, r8, lsl #8
   11074:	andeq	r6, r1, ip, lsr r3
   11078:	mov	fp, #0
   1107c:	mov	lr, #0
   11080:	pop	{r1}		; (ldr r1, [sp], #4)
   11084:	mov	r2, sp
   11088:	push	{r2}		; (str r2, [sp, #-4]!)
   1108c:	push	{r0}		; (str r0, [sp, #-4]!)
   11090:	ldr	ip, [pc, #16]	; 110a8 <close@plt+0x52c>
   11094:	push	{ip}		; (str ip, [sp, #-4]!)
   11098:	ldr	r0, [pc, #12]	; 110ac <close@plt+0x530>
   1109c:	ldr	r3, [pc, #12]	; 110b0 <close@plt+0x534>
   110a0:	bl	10a68 <__libc_start_main@plt>
   110a4:	bl	10b70 <abort@plt>
   110a8:	andeq	r5, r1, r8, lsr pc
   110ac:	andeq	r0, r1, r8, lsl #23
   110b0:	ldrdeq	r5, [r1], -r8
   110b4:	ldr	r3, [pc, #20]	; 110d0 <close@plt+0x554>
   110b8:	ldr	r2, [pc, #20]	; 110d4 <close@plt+0x558>
   110bc:	add	r3, pc, r3
   110c0:	ldr	r2, [r3, r2]
   110c4:	cmp	r2, #0
   110c8:	bxeq	lr
   110cc:	b	10a8c <__gmon_start__@plt>
   110d0:	andeq	r0, r2, ip, lsr pc
   110d4:	strheq	r0, [r0], -r4
   110d8:	ldr	r0, [pc, #24]	; 110f8 <close@plt+0x57c>
   110dc:	ldr	r3, [pc, #24]	; 110fc <close@plt+0x580>
   110e0:	cmp	r3, r0
   110e4:	bxeq	lr
   110e8:	ldr	r3, [pc, #16]	; 11100 <close@plt+0x584>
   110ec:	cmp	r3, #0
   110f0:	bxeq	lr
   110f4:	bx	r3
   110f8:	ldrdeq	r2, [r3], -r0
   110fc:	ldrdeq	r2, [r3], -r0
   11100:	andeq	r0, r0, r0
   11104:	ldr	r0, [pc, #36]	; 11130 <close@plt+0x5b4>
   11108:	ldr	r1, [pc, #36]	; 11134 <close@plt+0x5b8>
   1110c:	sub	r1, r1, r0
   11110:	asr	r1, r1, #2
   11114:	add	r1, r1, r1, lsr #31
   11118:	asrs	r1, r1, #1
   1111c:	bxeq	lr
   11120:	ldr	r3, [pc, #16]	; 11138 <close@plt+0x5bc>
   11124:	cmp	r3, #0
   11128:	bxeq	lr
   1112c:	bx	r3
   11130:	ldrdeq	r2, [r3], -r0
   11134:	ldrdeq	r2, [r3], -r0
   11138:	andeq	r0, r0, r0
   1113c:	push	{r4, lr}
   11140:	ldr	r4, [pc, #24]	; 11160 <close@plt+0x5e4>
   11144:	ldrb	r3, [r4]
   11148:	cmp	r3, #0
   1114c:	popne	{r4, pc}
   11150:	bl	110d8 <close@plt+0x55c>
   11154:	mov	r3, #1
   11158:	strb	r3, [r4]
   1115c:	pop	{r4, pc}
   11160:	andeq	r2, r3, r4, ror #1
   11164:	b	11104 <close@plt+0x588>
   11168:	push	{r4, lr}
   1116c:	mov	r2, #5
   11170:	ldr	r4, [pc, #156]	; 11214 <close@plt+0x698>
   11174:	ldr	r1, [pc, #156]	; 11218 <close@plt+0x69c>
   11178:	mov	r0, #0
   1117c:	ldr	r5, [r4]
   11180:	bl	109fc <dcgettext@plt>
   11184:	ldr	r3, [pc, #144]	; 1121c <close@plt+0x6a0>
   11188:	mov	r1, #1
   1118c:	mov	r2, r0
   11190:	mov	r0, r5
   11194:	bl	10b10 <__fprintf_chk@plt>
   11198:	mov	r2, #5
   1119c:	ldr	r1, [pc, #124]	; 11220 <close@plt+0x6a4>
   111a0:	mov	r0, #0
   111a4:	ldr	r5, [r4]
   111a8:	bl	109fc <dcgettext@plt>
   111ac:	mov	r1, #1
   111b0:	mov	r2, r0
   111b4:	mov	r0, r5
   111b8:	bl	10b10 <__fprintf_chk@plt>
   111bc:	ldr	r0, [r4]
   111c0:	bl	14e20 <close@plt+0x42a4>
   111c4:	mov	r2, #5
   111c8:	ldr	r1, [pc, #84]	; 11224 <close@plt+0x6a8>
   111cc:	mov	r0, #0
   111d0:	ldr	r5, [r4]
   111d4:	bl	109fc <dcgettext@plt>
   111d8:	mov	r1, #1
   111dc:	mov	r2, r0
   111e0:	mov	r0, r5
   111e4:	bl	10b10 <__fprintf_chk@plt>
   111e8:	mov	r2, #5
   111ec:	ldr	r1, [pc, #52]	; 11228 <close@plt+0x6ac>
   111f0:	mov	r0, #0
   111f4:	ldr	r4, [r4]
   111f8:	bl	109fc <dcgettext@plt>
   111fc:	mov	r1, #1
   11200:	mov	r2, r0
   11204:	mov	r0, r4
   11208:	bl	10b10 <__fprintf_chk@plt>
   1120c:	mov	r0, #1
   11210:	bl	10abc <exit@plt>
   11214:	ldrdeq	r2, [r3], -r8
   11218:	andeq	r6, r1, r8, lsr #32
   1121c:	andeq	r6, r1, ip, lsl #7
   11220:	andeq	r6, r1, ip, lsr r0
   11224:	muleq	r1, r4, r2
   11228:	andeq	r6, r1, ip, ror #5
   1122c:	push	{r4, lr}
   11230:	mov	r1, #2
   11234:	mov	r4, r0
   11238:	bl	10a98 <open@plt>
   1123c:	cmp	r0, #0
   11240:	popge	{r4, pc}
   11244:	mov	r1, #1
   11248:	mov	r0, r4
   1124c:	bl	10a98 <open@plt>
   11250:	cmp	r0, #0
   11254:	popge	{r4, pc}
   11258:	mov	r0, r4
   1125c:	mov	r1, #0
   11260:	bl	10a98 <open@plt>
   11264:	orr	r0, r0, r0, asr #31
   11268:	pop	{r4, pc}
   1126c:	push	{r4, r5, lr}
   11270:	sub	sp, sp, #12
   11274:	ldr	r4, [pc, #108]	; 112e8 <close@plt+0x76c>
   11278:	mov	r3, #0
   1127c:	strb	r3, [sp, #3]
   11280:	ldr	r3, [r4]
   11284:	mov	r5, r0
   11288:	str	r3, [sp, #4]
   1128c:	bl	10b4c <isatty@plt>
   11290:	cmp	r0, #0
   11294:	bne	112b4 <close@plt+0x738>
   11298:	mov	r0, #0
   1129c:	ldr	r2, [sp, #4]
   112a0:	ldr	r3, [r4]
   112a4:	cmp	r2, r3
   112a8:	bne	112e4 <close@plt+0x768>
   112ac:	add	sp, sp, #12
   112b0:	pop	{r4, r5, pc}
   112b4:	mov	r0, r5
   112b8:	add	r2, sp, #3
   112bc:	ldr	r1, [pc, #40]	; 112ec <close@plt+0x770>
   112c0:	bl	10a50 <ioctl@plt>
   112c4:	cmp	r0, #0
   112c8:	bne	11298 <close@plt+0x71c>
   112cc:	ldrb	r0, [sp, #3]
   112d0:	sub	r0, r0, #1
   112d4:	cmp	r0, #1
   112d8:	movhi	r0, #0
   112dc:	movls	r0, #1
   112e0:	b	1129c <close@plt+0x720>
   112e4:	bl	10a14 <__stack_chk_fail@plt>
   112e8:	andeq	r1, r3, r8, lsl #30
   112ec:	andeq	r4, r0, r3, lsr fp
   112f0:	push	{r4, r5, r6, lr}
   112f4:	subs	r5, r0, #0
   112f8:	beq	1131c <close@plt+0x7a0>
   112fc:	bl	1122c <close@plt+0x6b0>
   11300:	subs	r4, r0, #0
   11304:	blt	113b4 <close@plt+0x838>
   11308:	bl	1126c <close@plt+0x6f0>
   1130c:	cmp	r0, #0
   11310:	beq	113ac <close@plt+0x830>
   11314:	mov	r0, r4
   11318:	pop	{r4, r5, r6, pc}
   1131c:	ldr	r5, [pc, #196]	; 113e8 <close@plt+0x86c>
   11320:	ldr	r0, [pc, #196]	; 113ec <close@plt+0x870>
   11324:	b	11334 <close@plt+0x7b8>
   11328:	ldr	r0, [r5], #4
   1132c:	cmp	r0, #0
   11330:	beq	11360 <close@plt+0x7e4>
   11334:	bl	1122c <close@plt+0x6b0>
   11338:	subs	r4, r0, #0
   1133c:	blt	11328 <close@plt+0x7ac>
   11340:	bl	1126c <close@plt+0x6f0>
   11344:	cmp	r0, #0
   11348:	bne	11314 <close@plt+0x798>
   1134c:	mov	r0, r4
   11350:	bl	10b7c <close@plt>
   11354:	ldr	r0, [r5], #4
   11358:	cmp	r0, #0
   1135c:	bne	11334 <close@plt+0x7b8>
   11360:	mov	r4, r0
   11364:	mov	r0, r4
   11368:	bl	1126c <close@plt+0x6f0>
   1136c:	cmp	r0, #0
   11370:	bne	11314 <close@plt+0x798>
   11374:	add	r4, r4, #1
   11378:	cmp	r4, #3
   1137c:	bne	11364 <close@plt+0x7e8>
   11380:	ldr	r3, [pc, #104]	; 113f0 <close@plt+0x874>
   11384:	mov	r2, #5
   11388:	ldr	r1, [pc, #100]	; 113f4 <close@plt+0x878>
   1138c:	ldr	r4, [r3]
   11390:	bl	109fc <dcgettext@plt>
   11394:	mov	r1, #1
   11398:	mov	r2, r0
   1139c:	mov	r0, r4
   113a0:	bl	10b10 <__fprintf_chk@plt>
   113a4:	mov	r0, #1
   113a8:	bl	10abc <exit@plt>
   113ac:	mov	r0, r4
   113b0:	bl	10b7c <close@plt>
   113b4:	ldr	r3, [pc, #52]	; 113f0 <close@plt+0x874>
   113b8:	mov	r2, #5
   113bc:	ldr	r1, [pc, #52]	; 113f8 <close@plt+0x87c>
   113c0:	mov	r0, #0
   113c4:	ldr	r4, [r3]
   113c8:	bl	109fc <dcgettext@plt>
   113cc:	mov	r3, r5
   113d0:	mov	r1, #1
   113d4:	mov	r2, r0
   113d8:	mov	r0, r4
   113dc:	bl	10b10 <__fprintf_chk@plt>
   113e0:	mov	r0, #1
   113e4:	bl	10abc <exit@plt>
   113e8:	andeq	r6, r1, ip, asr #9
   113ec:	andeq	r6, r1, r4, ror #9
   113f0:	ldrdeq	r2, [r3], -r8
   113f4:	andeq	r6, r1, r8, lsl #10
   113f8:	strdeq	r6, [r1], -r4
   113fc:	push	{r1, r2, r3}
   11400:	push	{r4, r5, r6, r7, lr}
   11404:	sub	sp, sp, #8
   11408:	ldr	r5, [pc, #144]	; 114a0 <close@plt+0x924>
   1140c:	ldr	r4, [pc, #144]	; 114a4 <close@plt+0x928>
   11410:	ldr	r3, [pc, #144]	; 114a8 <close@plt+0x92c>
   11414:	ldr	r1, [r5]
   11418:	ldr	r7, [sp, #28]
   1141c:	add	ip, sp, #32
   11420:	mov	r6, r0
   11424:	ldr	r3, [r3]
   11428:	ldr	r2, [pc, #124]	; 114ac <close@plt+0x930>
   1142c:	str	r1, [sp, #4]
   11430:	ldr	r0, [r4]
   11434:	mov	r1, #1
   11438:	str	ip, [sp]
   1143c:	bl	10b10 <__fprintf_chk@plt>
   11440:	mov	r2, r7
   11444:	ldr	r0, [r4]
   11448:	ldr	r3, [sp]
   1144c:	mov	r1, #1
   11450:	bl	10a80 <__vfprintf_chk@plt>
   11454:	cmp	r6, #0
   11458:	ble	1147c <close@plt+0x900>
   1145c:	mov	r0, r6
   11460:	ldr	r4, [r4]
   11464:	bl	10a74 <strerror@plt>
   11468:	ldr	r2, [pc, #64]	; 114b0 <close@plt+0x934>
   1146c:	mov	r1, #1
   11470:	mov	r3, r0
   11474:	mov	r0, r4
   11478:	bl	10b10 <__fprintf_chk@plt>
   1147c:	ldr	r2, [sp, #4]
   11480:	ldr	r3, [r5]
   11484:	cmp	r2, r3
   11488:	bne	1149c <close@plt+0x920>
   1148c:	add	sp, sp, #8
   11490:	pop	{r4, r5, r6, r7, lr}
   11494:	add	sp, sp, #12
   11498:	bx	lr
   1149c:	bl	10a14 <__stack_chk_fail@plt>
   114a0:	andeq	r1, r3, r8, lsl #30
   114a4:	ldrdeq	r2, [r3], -r8
   114a8:	andeq	r2, r3, r8, lsr #2
   114ac:	andeq	r6, r1, r4, lsl #11
   114b0:	andeq	r6, r1, ip, lsl #11
   114b4:	push	{r2, r3}
   114b8:	mov	r5, r1
   114bc:	ldr	r2, [pc, #124]	; 11540 <close@plt+0x9c4>
   114c0:	push	{r7, lr}
   114c4:	sub	sp, sp, #8
   114c8:	ldr	r4, [pc, #116]	; 11544 <close@plt+0x9c8>
   114cc:	ldr	r3, [pc, #116]	; 11548 <close@plt+0x9cc>
   114d0:	ldr	lr, [r2]
   114d4:	ldr	r7, [sp, #16]
   114d8:	add	ip, sp, #20
   114dc:	ldr	r3, [r3]
   114e0:	ldr	r2, [pc, #100]	; 1154c <close@plt+0x9d0>
   114e4:	mov	r1, #1
   114e8:	mov	r6, r0
   114ec:	ldr	r0, [r4]
   114f0:	str	lr, [sp, #4]
   114f4:	str	ip, [sp]
   114f8:	bl	10b10 <__fprintf_chk@plt>
   114fc:	mov	r2, r7
   11500:	ldr	r0, [r4]
   11504:	ldr	r3, [sp]
   11508:	mov	r1, #1
   1150c:	bl	10a80 <__vfprintf_chk@plt>
   11510:	cmp	r5, #0
   11514:	ble	11538 <close@plt+0x9bc>
   11518:	mov	r0, r5
   1151c:	ldr	r4, [r4]
   11520:	bl	10a74 <strerror@plt>
   11524:	ldr	r2, [pc, #36]	; 11550 <close@plt+0x9d4>
   11528:	mov	r1, #1
   1152c:	mov	r3, r0
   11530:	mov	r0, r4
   11534:	bl	10b10 <__fprintf_chk@plt>
   11538:	mov	r0, r6
   1153c:	bl	10abc <exit@plt>
   11540:	andeq	r1, r3, r8, lsl #30
   11544:	ldrdeq	r2, [r3], -r8
   11548:	andeq	r2, r3, r8, lsr #2
   1154c:	andeq	r6, r1, r4, lsl #11
   11550:	andeq	r6, r1, ip, lsl #11
   11554:	push	{r4, lr}
   11558:	mov	r1, #1
   1155c:	mov	r4, r0
   11560:	ldrd	r2, [sp, #12]
   11564:	bl	10a80 <__vfprintf_chk@plt>
   11568:	mov	r1, r4
   1156c:	mov	r0, #10
   11570:	pop	{r4, lr}
   11574:	b	10b34 <fputc@plt>
   11578:	ldr	ip, [pc, #96]	; 115e0 <close@plt+0xa64>
   1157c:	push	{r4, r5, r6, lr}
   11580:	add	ip, pc, ip
   11584:	ldr	lr, [pc, #88]	; 115e4 <close@plt+0xa68>
   11588:	ldr	r5, [r0, #20]
   1158c:	sub	sp, sp, #24
   11590:	ldr	r4, [ip, lr]
   11594:	cmp	r5, #0
   11598:	ldr	r6, [sp, #40]	; 0x28
   1159c:	ldr	ip, [r4]
   115a0:	ldr	lr, [sp, #44]	; 0x2c
   115a4:	str	ip, [sp, #20]
   115a8:	beq	115c4 <close@plt+0xa48>
   115ac:	add	ip, sp, #48	; 0x30
   115b0:	ldr	r0, [r0, #24]
   115b4:	stm	sp, {r6, lr}
   115b8:	str	ip, [sp, #8]
   115bc:	str	ip, [sp, #16]
   115c0:	blx	r5
   115c4:	ldr	r2, [sp, #20]
   115c8:	ldr	r3, [r4]
   115cc:	cmp	r2, r3
   115d0:	bne	115dc <close@plt+0xa60>
   115d4:	add	sp, sp, #24
   115d8:	pop	{r4, r5, r6, pc}
   115dc:	bl	10a14 <__stack_chk_fail@plt>
   115e0:	andeq	r0, r2, r8, ror sl
   115e4:	andeq	r0, r0, r4, lsr #1
   115e8:	push	{r4, r5, r6, r7, lr}
   115ec:	mov	r4, r0
   115f0:	sub	sp, sp, #20
   115f4:	mov	r0, #16
   115f8:	mov	r6, r1
   115fc:	mov	r5, r2
   11600:	bl	10a5c <malloc@plt>
   11604:	subs	r7, r0, #0
   11608:	beq	11630 <close@plt+0xab4>
   1160c:	mov	r1, r5
   11610:	mov	r2, #0
   11614:	bl	15c60 <close@plt+0x50e4>
   11618:	subs	r5, r0, #0
   1161c:	movge	r0, #0
   11620:	strge	r7, [r6]
   11624:	blt	11648 <close@plt+0xacc>
   11628:	add	sp, sp, #20
   1162c:	pop	{r4, r5, r6, r7, pc}
   11630:	ldr	r3, [r4, #28]
   11634:	cmp	r3, #2
   11638:	bgt	116a4 <close@plt+0xb28>
   1163c:	mvn	r0, #0
   11640:	add	sp, sp, #20
   11644:	pop	{r4, r5, r6, r7, pc}
   11648:	ldr	r3, [r4, #28]
   1164c:	cmp	r3, #2
   11650:	ble	1163c <close@plt+0xac0>
   11654:	ldr	r1, [pc, #132]	; 116e0 <close@plt+0xb64>
   11658:	mov	r2, #5
   1165c:	add	r1, pc, r1
   11660:	mov	r0, #0
   11664:	bl	109fc <dcgettext@plt>
   11668:	mov	r6, r0
   1166c:	mov	r0, r5
   11670:	bl	10a74 <strerror@plt>
   11674:	ldr	r3, [pc, #104]	; 116e4 <close@plt+0xb68>
   11678:	ldr	r2, [pc, #104]	; 116e8 <close@plt+0xb6c>
   1167c:	add	r3, pc, r3
   11680:	add	r2, pc, r2
   11684:	stm	sp, {r3, r6}
   11688:	mov	r1, #3
   1168c:	mov	r3, #146	; 0x92
   11690:	str	r0, [sp, #8]
   11694:	mov	r0, r4
   11698:	bl	11578 <close@plt+0x9fc>
   1169c:	mvn	r0, #0
   116a0:	b	11628 <close@plt+0xaac>
   116a4:	ldr	r1, [pc, #64]	; 116ec <close@plt+0xb70>
   116a8:	mov	r2, #5
   116ac:	add	r1, pc, r1
   116b0:	bl	109fc <dcgettext@plt>
   116b4:	ldr	r2, [pc, #52]	; 116f0 <close@plt+0xb74>
   116b8:	mov	r3, #140	; 0x8c
   116bc:	add	r2, pc, r2
   116c0:	str	r2, [sp]
   116c4:	ldr	r2, [pc, #40]	; 116f4 <close@plt+0xb78>
   116c8:	mov	r1, #3
   116cc:	add	r2, pc, r2
   116d0:	str	r0, [sp, #4]
   116d4:	mov	r0, r4
   116d8:	bl	11578 <close@plt+0x9fc>
   116dc:	b	1163c <close@plt+0xac0>
   116e0:	andeq	r4, r0, r8, asr pc
   116e4:	andeq	r4, r0, r0, lsl pc
   116e8:	andeq	r4, r0, r8, lsr #30
   116ec:	andeq	r4, r0, ip, ror #29
   116f0:	ldrdeq	r4, [r0], -r0
   116f4:	ldrdeq	r4, [r0], -ip
   116f8:	cmp	r0, #0
   116fc:	strne	r1, [r0, #20]
   11700:	strne	r2, [r0, #24]
   11704:	movne	r0, #0
   11708:	mvneq	r0, #0
   1170c:	bx	lr
   11710:	cmp	r0, #0
   11714:	ldrne	r0, [r0, #28]
   11718:	mvneq	r0, #0
   1171c:	bx	lr
   11720:	cmp	r0, #0
   11724:	strne	r1, [r0, #28]
   11728:	movne	r0, #0
   1172c:	mvneq	r0, #0
   11730:	bx	lr
   11734:	cmp	r0, #0
   11738:	ldrne	r0, [r0]
   1173c:	mvneq	r0, #0
   11740:	bx	lr
   11744:	cmp	r0, #0
   11748:	strne	r1, [r0]
   1174c:	movne	r0, #0
   11750:	mvneq	r0, #0
   11754:	bx	lr
   11758:	push	{r4, r5, r6, lr}
   1175c:	subs	r4, r0, #0
   11760:	beq	118b8 <close@plt+0xd3c>
   11764:	ldr	r0, [r4, #8]
   11768:	cmp	r0, #0
   1176c:	beq	117c4 <close@plt+0xc48>
   11770:	ldr	r3, [r0, #12]
   11774:	cmp	r3, #0
   11778:	beq	117b0 <close@plt+0xc34>
   1177c:	mov	r5, #0
   11780:	mov	r1, r5
   11784:	bl	15dac <close@plt+0x5230>
   11788:	add	r5, r5, #1
   1178c:	subs	r6, r0, #0
   11790:	beq	117a0 <close@plt+0xc24>
   11794:	bl	15cb4 <close@plt+0x5138>
   11798:	mov	r0, r6
   1179c:	bl	109e4 <free@plt>
   117a0:	ldr	r0, [r4, #8]
   117a4:	ldr	r3, [r0, #12]
   117a8:	cmp	r3, r5
   117ac:	bhi	11780 <close@plt+0xc04>
   117b0:	bl	15cb4 <close@plt+0x5138>
   117b4:	ldr	r0, [r4, #8]
   117b8:	bl	109e4 <free@plt>
   117bc:	mov	r3, #0
   117c0:	str	r3, [r4, #8]
   117c4:	ldr	r0, [r4, #12]
   117c8:	cmp	r0, #0
   117cc:	beq	1181c <close@plt+0xca0>
   117d0:	ldr	r3, [r0, #12]
   117d4:	cmp	r3, #0
   117d8:	beq	11808 <close@plt+0xc8c>
   117dc:	mov	r5, #0
   117e0:	mov	r1, r5
   117e4:	bl	15dac <close@plt+0x5230>
   117e8:	add	r5, r5, #1
   117ec:	cmp	r0, #0
   117f0:	beq	117f8 <close@plt+0xc7c>
   117f4:	bl	109e4 <free@plt>
   117f8:	ldr	r0, [r4, #12]
   117fc:	ldr	r3, [r0, #12]
   11800:	cmp	r3, r5
   11804:	bhi	117e0 <close@plt+0xc64>
   11808:	bl	15cb4 <close@plt+0x5138>
   1180c:	ldr	r0, [r4, #12]
   11810:	bl	109e4 <free@plt>
   11814:	mov	r3, #0
   11818:	str	r3, [r4, #12]
   1181c:	ldr	r0, [r4, #16]
   11820:	cmp	r0, #0
   11824:	beq	11874 <close@plt+0xcf8>
   11828:	ldr	r3, [r0, #12]
   1182c:	cmp	r3, #0
   11830:	beq	11860 <close@plt+0xce4>
   11834:	mov	r5, #0
   11838:	mov	r1, r5
   1183c:	bl	15dac <close@plt+0x5230>
   11840:	add	r5, r5, #1
   11844:	cmp	r0, #0
   11848:	beq	11850 <close@plt+0xcd4>
   1184c:	bl	109e4 <free@plt>
   11850:	ldr	r0, [r4, #16]
   11854:	ldr	r3, [r0, #12]
   11858:	cmp	r3, r5
   1185c:	bhi	11838 <close@plt+0xcbc>
   11860:	bl	15cb4 <close@plt+0x5138>
   11864:	ldr	r0, [r4, #16]
   11868:	bl	109e4 <free@plt>
   1186c:	mov	r3, #0
   11870:	str	r3, [r4, #16]
   11874:	ldr	r0, [r4, #36]	; 0x24
   11878:	cmp	r0, #0
   1187c:	beq	11894 <close@plt+0xd18>
   11880:	bl	15cb4 <close@plt+0x5138>
   11884:	ldr	r0, [r4, #36]	; 0x24
   11888:	bl	109e4 <free@plt>
   1188c:	mov	r3, #0
   11890:	str	r3, [r4, #36]	; 0x24
   11894:	ldr	r0, [r4, #40]	; 0x28
   11898:	cmp	r0, #0
   1189c:	popeq	{r4, r5, r6, pc}
   118a0:	bl	15cb4 <close@plt+0x5138>
   118a4:	ldr	r0, [r4, #40]	; 0x28
   118a8:	bl	109e4 <free@plt>
   118ac:	mov	r0, #0
   118b0:	str	r0, [r4, #40]	; 0x28
   118b4:	pop	{r4, r5, r6, pc}
   118b8:	mvn	r0, #0
   118bc:	pop	{r4, r5, r6, pc}
   118c0:	push	{r4, lr}
   118c4:	mov	r1, #1
   118c8:	mov	r0, #128	; 0x80
   118cc:	bl	109c0 <calloc@plt>
   118d0:	ldr	r2, [pc, #192]	; 11998 <close@plt+0xe1c>
   118d4:	add	r2, pc, r2
   118d8:	subs	r4, r0, #0
   118dc:	beq	1197c <close@plt+0xe00>
   118e0:	ldr	r3, [pc, #180]	; 1199c <close@plt+0xe20>
   118e4:	ldr	r1, [pc, #180]	; 119a0 <close@plt+0xe24>
   118e8:	ldr	r3, [r2, r3]
   118ec:	add	r1, pc, r1
   118f0:	ldr	r2, [r3]
   118f4:	bl	116f8 <close@plt+0xb7c>
   118f8:	mov	r1, #3
   118fc:	mov	r0, r4
   11900:	bl	11720 <close@plt+0xba4>
   11904:	mov	r2, #4
   11908:	add	r1, r4, #8
   1190c:	mov	r0, r4
   11910:	bl	115e8 <close@plt+0xa6c>
   11914:	cmp	r0, #0
   11918:	blt	11984 <close@plt+0xe08>
   1191c:	mov	r2, #4
   11920:	add	r1, r4, #12
   11924:	mov	r0, r4
   11928:	bl	115e8 <close@plt+0xa6c>
   1192c:	cmp	r0, #0
   11930:	blt	11984 <close@plt+0xe08>
   11934:	mov	r2, #4
   11938:	add	r1, r4, #16
   1193c:	mov	r0, r4
   11940:	bl	115e8 <close@plt+0xa6c>
   11944:	cmp	r0, #0
   11948:	blt	11984 <close@plt+0xe08>
   1194c:	mov	r2, #1
   11950:	add	r1, r4, #36	; 0x24
   11954:	mov	r0, r4
   11958:	bl	115e8 <close@plt+0xa6c>
   1195c:	cmp	r0, #0
   11960:	blt	11984 <close@plt+0xe08>
   11964:	mov	r2, #4
   11968:	add	r1, r4, #40	; 0x28
   1196c:	mov	r0, r4
   11970:	bl	115e8 <close@plt+0xa6c>
   11974:	cmp	r0, #0
   11978:	blt	11984 <close@plt+0xe08>
   1197c:	mov	r0, r4
   11980:	pop	{r4, pc}
   11984:	mov	r0, r4
   11988:	mov	r4, #0
   1198c:	bl	11758 <close@plt+0xbdc>
   11990:	mov	r0, r4
   11994:	pop	{r4, pc}
   11998:	andeq	r0, r2, r4, lsr #14
   1199c:	andeq	r0, r0, r8, lsr #1
   119a0:			; <UNDEFINED> instruction: 0xfffffc60
   119a4:	ldr	r3, [pc, #348]	; 11b08 <close@plt+0xf8c>
   119a8:	ldr	r2, [pc, #348]	; 11b0c <close@plt+0xf90>
   119ac:	add	r3, pc, r3
   119b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119b4:	sub	sp, sp, #44	; 0x2c
   119b8:	ldr	r2, [r3, r2]
   119bc:	ldr	r9, [pc, #332]	; 11b10 <close@plt+0xf94>
   119c0:	mov	r6, r0
   119c4:	ldr	r3, [r2]
   119c8:	mov	fp, r1
   119cc:	add	sl, sp, #32
   119d0:	mov	r5, #0
   119d4:	str	r2, [sp, #28]
   119d8:	str	r3, [sp, #36]	; 0x24
   119dc:	mov	r4, #0
   119e0:	mov	r8, r4
   119e4:	uxtb	r7, r5
   119e8:	b	11a10 <close@plt+0xe94>
   119ec:	mov	r2, r4
   119f0:	mov	r1, r5
   119f4:	mov	r0, r6
   119f8:	bl	13cb8 <close@plt+0x313c>
   119fc:	cmp	r0, #0
   11a00:	blt	11a64 <close@plt+0xee8>
   11a04:	cmp	r4, #255	; 0xff
   11a08:	beq	11ae8 <close@plt+0xf6c>
   11a0c:	add	r4, r4, #1
   11a10:	mov	r2, sl
   11a14:	mov	r1, r9
   11a18:	mov	r0, fp
   11a1c:	strb	r7, [sp, #32]
   11a20:	strb	r4, [sp, #33]	; 0x21
   11a24:	strh	r8, [sp, #34]	; 0x22
   11a28:	bl	10a50 <ioctl@plt>
   11a2c:	cmp	r0, #0
   11a30:	bne	11a84 <close@plt+0xf08>
   11a34:	cmp	r4, #0
   11a38:	ldrh	r3, [sp, #34]	; 0x22
   11a3c:	bne	119ec <close@plt+0xe70>
   11a40:	ldr	r2, [pc, #204]	; 11b14 <close@plt+0xf98>
   11a44:	cmp	r3, r2
   11a48:	beq	11ae8 <close@plt+0xf6c>
   11a4c:	mov	r2, r4
   11a50:	mov	r1, r5
   11a54:	mov	r0, r6
   11a58:	bl	13cb8 <close@plt+0x313c>
   11a5c:	cmp	r0, #0
   11a60:	bge	11a0c <close@plt+0xe90>
   11a64:	mvn	r0, #0
   11a68:	ldr	r3, [sp, #28]
   11a6c:	ldr	r2, [sp, #36]	; 0x24
   11a70:	ldr	r3, [r3]
   11a74:	cmp	r2, r3
   11a78:	bne	11b04 <close@plt+0xf88>
   11a7c:	add	sp, sp, #44	; 0x2c
   11a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a84:	ldr	r3, [r6, #28]
   11a88:	cmp	r3, #2
   11a8c:	ble	11a64 <close@plt+0xee8>
   11a90:	ldr	r1, [pc, #128]	; 11b18 <close@plt+0xf9c>
   11a94:	mov	r2, #5
   11a98:	add	r1, pc, r1
   11a9c:	mov	r0, #0
   11aa0:	bl	109fc <dcgettext@plt>
   11aa4:	mov	r7, r0
   11aa8:	bl	10ad4 <__errno_location@plt>
   11aac:	ldr	r0, [r0]
   11ab0:	bl	10a74 <strerror@plt>
   11ab4:	ldr	r3, [pc, #96]	; 11b1c <close@plt+0xfa0>
   11ab8:	ldr	r2, [pc, #96]	; 11b20 <close@plt+0xfa4>
   11abc:	add	r3, pc, r3
   11ac0:	str	r3, [sp]
   11ac4:	str	r7, [sp, #4]
   11ac8:	strd	r4, [sp, #12]
   11acc:	mov	r3, #33	; 0x21
   11ad0:	add	r2, pc, r2
   11ad4:	mov	r1, #3
   11ad8:	str	r0, [sp, #8]
   11adc:	mov	r0, r6
   11ae0:	bl	11578 <close@plt+0x9fc>
   11ae4:	b	11a64 <close@plt+0xee8>
   11ae8:	add	r5, r5, #1
   11aec:	cmp	r5, #256	; 0x100
   11af0:	bne	119dc <close@plt+0xe60>
   11af4:	mov	r0, r6
   11af8:	bl	13f68 <close@plt+0x33ec>
   11afc:	asr	r0, r0, #31
   11b00:	b	11a68 <close@plt+0xeec>
   11b04:	bl	10a14 <__stack_chk_fail@plt>
   11b08:	andeq	r0, r2, ip, asr #12
   11b0c:	andeq	r0, r0, r4, lsr #1
   11b10:	andeq	r4, r0, r6, asr #22
   11b14:	andeq	r0, r0, pc, ror r2
   11b18:	andeq	r4, r0, r0, ror fp
   11b1c:	andeq	r4, r0, r8, lsl fp
   11b20:	andeq	r4, r0, r4, ror #22
   11b24:	ldr	r3, [pc, #260]	; 11c30 <close@plt+0x10b4>
   11b28:	ldr	r2, [pc, #260]	; 11c34 <close@plt+0x10b8>
   11b2c:	add	r3, pc, r3
   11b30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b34:	sub	sp, sp, #536	; 0x218
   11b38:	ldr	sl, [r3, r2]
   11b3c:	ldr	r8, [pc, #244]	; 11c38 <close@plt+0x10bc>
   11b40:	mov	r9, r0
   11b44:	ldr	r2, [sl]
   11b48:	mov	r7, r1
   11b4c:	add	r5, sp, #16
   11b50:	mov	r4, #0
   11b54:	str	r2, [sp, #532]	; 0x214
   11b58:	b	11b88 <close@plt+0x100c>
   11b5c:	ldrb	r3, [sp, #17]
   11b60:	cmp	r3, #0
   11b64:	beq	11b7c <close@plt+0x1000>
   11b68:	mov	r1, r5
   11b6c:	mov	r0, r9
   11b70:	bl	146b4 <close@plt+0x3b38>
   11b74:	cmp	r0, #0
   11b78:	blt	11bb0 <close@plt+0x1034>
   11b7c:	add	r4, r4, #1
   11b80:	cmp	r4, #256	; 0x100
   11b84:	beq	11bb4 <close@plt+0x1038>
   11b88:	mov	r2, r5
   11b8c:	mov	r1, r8
   11b90:	mov	r0, r7
   11b94:	strb	r4, [sp, #16]
   11b98:	bl	10a50 <ioctl@plt>
   11b9c:	subs	r6, r0, #0
   11ba0:	beq	11b5c <close@plt+0xfe0>
   11ba4:	ldr	r3, [r9, #28]
   11ba8:	cmp	r3, #2
   11bac:	bgt	11bd0 <close@plt+0x1054>
   11bb0:	mvn	r6, #0
   11bb4:	ldr	r2, [sp, #532]	; 0x214
   11bb8:	ldr	r3, [sl]
   11bbc:	mov	r0, r6
   11bc0:	cmp	r2, r3
   11bc4:	bne	11c2c <close@plt+0x10b0>
   11bc8:	add	sp, sp, #536	; 0x218
   11bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bd0:	ldr	r1, [pc, #100]	; 11c3c <close@plt+0x10c0>
   11bd4:	mov	r2, #5
   11bd8:	add	r1, pc, r1
   11bdc:	mov	r0, #0
   11be0:	bl	109fc <dcgettext@plt>
   11be4:	mvn	r6, #0
   11be8:	mov	r4, r0
   11bec:	bl	10ad4 <__errno_location@plt>
   11bf0:	ldr	r0, [r0]
   11bf4:	bl	10a74 <strerror@plt>
   11bf8:	ldr	r3, [pc, #64]	; 11c40 <close@plt+0x10c4>
   11bfc:	ldr	r2, [pc, #64]	; 11c44 <close@plt+0x10c8>
   11c00:	add	r3, pc, r3
   11c04:	add	r3, r3, #16
   11c08:	str	r3, [sp]
   11c0c:	str	r4, [sp, #4]
   11c10:	mov	r3, #61	; 0x3d
   11c14:	add	r2, pc, r2
   11c18:	mov	r1, #3
   11c1c:	str	r0, [sp, #8]
   11c20:	mov	r0, r9
   11c24:	bl	11578 <close@plt+0x9fc>
   11c28:	b	11bb4 <close@plt+0x1038>
   11c2c:	bl	10a14 <__stack_chk_fail@plt>
   11c30:	andeq	r0, r2, ip, asr #9
   11c34:	andeq	r0, r0, r4, lsr #1
   11c38:	andeq	r4, r0, r8, asr #22
   11c3c:	andeq	r4, r0, r8, ror #20
   11c40:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   11c44:	andeq	r4, r0, r0, lsr #20
   11c48:	ldr	r3, [pc, #296]	; 11d78 <close@plt+0x11fc>
   11c4c:	ldr	r2, [pc, #296]	; 11d7c <close@plt+0x1200>
   11c50:	add	r3, pc, r3
   11c54:	push	{r4, r5, r6, r7, r8, r9, lr}
   11c58:	sub	sp, sp, #3104	; 0xc20
   11c5c:	ldr	r9, [r3, r2]
   11c60:	sub	sp, sp, #12
   11c64:	add	r4, sp, #32
   11c68:	ldr	ip, [r9]
   11c6c:	mov	r6, r0
   11c70:	mov	r2, r4
   11c74:	mov	r0, r1
   11c78:	ldr	r1, [pc, #256]	; 11d80 <close@plt+0x1204>
   11c7c:	str	ip, [sp, #3108]	; 0xc24
   11c80:	bl	10a50 <ioctl@plt>
   11c84:	subs	r8, r0, #0
   11c88:	bne	11d0c <close@plt+0x1190>
   11c8c:	ldr	r3, [sp, #32]
   11c90:	cmp	r3, #0
   11c94:	movne	r5, r8
   11c98:	addne	r7, sp, #20
   11c9c:	bne	11cb8 <close@plt+0x113c>
   11ca0:	b	11cec <close@plt+0x1170>
   11ca4:	ldr	r3, [sp, #32]
   11ca8:	add	r5, r5, #1
   11cac:	cmp	r3, r5
   11cb0:	add	r4, r4, #12
   11cb4:	bls	11cec <close@plt+0x1170>
   11cb8:	ldr	lr, [r4, #4]
   11cbc:	ldr	ip, [r4, #8]
   11cc0:	ldr	r3, [r4, #12]
   11cc4:	mov	r2, r7
   11cc8:	mov	r1, r5
   11ccc:	mov	r0, r6
   11cd0:	str	lr, [sp, #20]
   11cd4:	str	ip, [sp, #24]
   11cd8:	str	r3, [sp, #28]
   11cdc:	bl	143dc <close@plt+0x3860>
   11ce0:	cmp	r0, #0
   11ce4:	bge	11ca4 <close@plt+0x1128>
   11ce8:	mvn	r8, #0
   11cec:	ldr	r2, [sp, #3108]	; 0xc24
   11cf0:	ldr	r3, [r9]
   11cf4:	mov	r0, r8
   11cf8:	cmp	r2, r3
   11cfc:	bne	11d74 <close@plt+0x11f8>
   11d00:	add	sp, sp, #3104	; 0xc20
   11d04:	add	sp, sp, #12
   11d08:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11d0c:	ldr	r3, [r6, #28]
   11d10:	cmp	r3, #2
   11d14:	ble	11ce8 <close@plt+0x116c>
   11d18:	ldr	r1, [pc, #100]	; 11d84 <close@plt+0x1208>
   11d1c:	mov	r2, #5
   11d20:	add	r1, pc, r1
   11d24:	mov	r0, #0
   11d28:	bl	109fc <dcgettext@plt>
   11d2c:	mvn	r8, #0
   11d30:	mov	r4, r0
   11d34:	bl	10ad4 <__errno_location@plt>
   11d38:	ldr	r0, [r0]
   11d3c:	bl	10a74 <strerror@plt>
   11d40:	ldr	r3, [pc, #64]	; 11d88 <close@plt+0x120c>
   11d44:	ldr	r2, [pc, #64]	; 11d8c <close@plt+0x1210>
   11d48:	add	r3, pc, r3
   11d4c:	add	r3, r3, #32
   11d50:	str	r3, [sp]
   11d54:	str	r4, [sp, #4]
   11d58:	mov	r3, #91	; 0x5b
   11d5c:	add	r2, pc, r2
   11d60:	mov	r1, #3
   11d64:	str	r0, [sp, #8]
   11d68:	mov	r0, r6
   11d6c:	bl	11578 <close@plt+0x9fc>
   11d70:	b	11cec <close@plt+0x1170>
   11d74:	bl	10a14 <__stack_chk_fail@plt>
   11d78:	andeq	r0, r2, r8, lsr #7
   11d7c:	andeq	r0, r0, r4, lsr #1
   11d80:	strdeq	r4, [r0], -sl
   11d84:	andeq	r4, r0, r4, asr r9
   11d88:	andeq	r4, r0, ip, lsl #17
   11d8c:	ldrdeq	r4, [r0], -r8
   11d90:	push	{r4, r5, r6, lr}
   11d94:	mov	r4, r0
   11d98:	mov	r5, r1
   11d9c:	bl	119a4 <close@plt+0xe28>
   11da0:	cmp	r0, #0
   11da4:	blt	11dd0 <close@plt+0x1254>
   11da8:	mov	r1, r5
   11dac:	mov	r0, r4
   11db0:	bl	11b24 <close@plt+0xfa8>
   11db4:	cmp	r0, #0
   11db8:	blt	11dd0 <close@plt+0x1254>
   11dbc:	mov	r1, r5
   11dc0:	mov	r0, r4
   11dc4:	bl	11c48 <close@plt+0x10cc>
   11dc8:	asr	r0, r0, #31
   11dcc:	pop	{r4, r5, r6, pc}
   11dd0:	mvn	r0, #0
   11dd4:	pop	{r4, r5, r6, pc}
   11dd8:	push	{r4, r5, r6, lr}
   11ddc:	mov	r5, r0
   11de0:	mov	r4, r1
   11de4:	mov	r0, #39	; 0x27
   11de8:	mov	r1, r5
   11dec:	mov	r6, r2
   11df0:	bl	10b34 <fputc@plt>
   11df4:	cmp	r4, #39	; 0x27
   11df8:	cmpne	r4, #92	; 0x5c
   11dfc:	beq	11e24 <close@plt+0x12a8>
   11e00:	bl	10ab0 <__ctype_b_loc@plt>
   11e04:	lsl	r3, r4, #1
   11e08:	ldr	r2, [r0]
   11e0c:	ldrsh	r3, [r2, r3]
   11e10:	cmp	r3, #0
   11e14:	blt	11e74 <close@plt+0x12f8>
   11e18:	ldr	r2, [pc, #96]	; 11e80 <close@plt+0x1304>
   11e1c:	add	r2, pc, r2
   11e20:	b	11e2c <close@plt+0x12b0>
   11e24:	ldr	r2, [pc, #88]	; 11e84 <close@plt+0x1308>
   11e28:	add	r2, pc, r2
   11e2c:	mov	r3, r4
   11e30:	mov	r1, #1
   11e34:	mov	r0, r5
   11e38:	bl	10b10 <__fprintf_chk@plt>
   11e3c:	cmp	r6, #0
   11e40:	bne	11e5c <close@plt+0x12e0>
   11e44:	ldr	r2, [pc, #60]	; 11e88 <close@plt+0x130c>
   11e48:	mov	r0, r5
   11e4c:	add	r2, pc, r2
   11e50:	mov	r1, #1
   11e54:	pop	{r4, r5, r6, lr}
   11e58:	b	10b10 <__fprintf_chk@plt>
   11e5c:	ldr	r2, [pc, #40]	; 11e8c <close@plt+0x1310>
   11e60:	mov	r0, r5
   11e64:	add	r2, pc, r2
   11e68:	mov	r1, #1
   11e6c:	pop	{r4, r5, r6, lr}
   11e70:	b	10b10 <__fprintf_chk@plt>
   11e74:	ldr	r2, [pc, #20]	; 11e90 <close@plt+0x1314>
   11e78:	add	r2, pc, r2
   11e7c:	b	11e2c <close@plt+0x12b0>
   11e80:	muleq	r0, r8, r8
   11e84:	muleq	r0, r4, r8
   11e88:	andeq	r4, r0, ip, ror r8
   11e8c:	andeq	r4, r0, r0, ror #16
   11e90:	andeq	r4, r0, r8, asr #16
   11e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e98:	mov	r7, r0
   11e9c:	sub	sp, sp, #20
   11ea0:	mov	r0, #32
   11ea4:	mov	r4, r2
   11ea8:	mov	r8, r3
   11eac:	mov	r6, r1
   11eb0:	bl	10b34 <fputc@plt>
   11eb4:	ldr	r2, [pc, #592]	; 1210c <close@plt+0x1590>
   11eb8:	ldr	r1, [pc, #592]	; 12110 <close@plt+0x1594>
   11ebc:	add	r2, pc, r2
   11ec0:	asr	r5, r4, #8
   11ec4:	ldr	r3, [r2, r1]
   11ec8:	ldr	r3, [r3]
   11ecc:	cmp	r3, r5
   11ed0:	str	r3, [sp, #12]
   11ed4:	bhi	11f10 <close@plt+0x1394>
   11ed8:	cmp	r8, #0
   11edc:	bne	11f74 <close@plt+0x13f8>
   11ee0:	mov	r0, r7
   11ee4:	mov	r1, r4
   11ee8:	bl	15260 <close@plt+0x46e4>
   11eec:	subs	r3, r0, #0
   11ef0:	beq	11f74 <close@plt+0x13f8>
   11ef4:	ldr	r2, [pc, #536]	; 12114 <close@plt+0x1598>
   11ef8:	mov	r0, r6
   11efc:	add	r2, pc, r2
   11f00:	mov	r1, #1
   11f04:	add	sp, sp, #20
   11f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f0c:	b	10b10 <__fprintf_chk@plt>
   11f10:	cmp	r5, #11
   11f14:	beq	1200c <close@plt+0x1490>
   11f18:	clz	r3, r5
   11f1c:	mov	fp, #0
   11f20:	lsr	r3, r3, #5
   11f24:	clz	sl, r8
   11f28:	lsr	sl, sl, #5
   11f2c:	tst	sl, r3
   11f30:	uxtb	r9, r4
   11f34:	bne	12078 <close@plt+0x14fc>
   11f38:	cmp	r8, #0
   11f3c:	beq	11f94 <close@plt+0x1418>
   11f40:	cmp	fp, #0
   11f44:	bne	12000 <close@plt+0x1484>
   11f48:	ldr	r3, [pc, #456]	; 12118 <close@plt+0x159c>
   11f4c:	add	r3, pc, r3
   11f50:	ldr	r2, [pc, #452]	; 1211c <close@plt+0x15a0>
   11f54:	str	r3, [sp]
   11f58:	mov	r0, r6
   11f5c:	mov	r3, r4
   11f60:	add	r2, pc, r2
   11f64:	mov	r1, #1
   11f68:	bl	10b10 <__fprintf_chk@plt>
   11f6c:	add	sp, sp, #20
   11f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f74:	ldr	r2, [pc, #420]	; 12120 <close@plt+0x15a4>
   11f78:	eor	r3, r4, #61440	; 0xf000
   11f7c:	mov	r0, r6
   11f80:	add	r2, pc, r2
   11f84:	mov	r1, #1
   11f88:	add	sp, sp, #20
   11f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f90:	b	10b10 <__fprintf_chk@plt>
   11f94:	ldr	r3, [sp, #12]
   11f98:	cmp	r3, r5
   11f9c:	bhi	12028 <close@plt+0x14ac>
   11fa0:	cmp	r5, #8
   11fa4:	movne	r8, #0
   11fa8:	andeq	r8, sl, #1
   11fac:	cmp	r8, #0
   11fb0:	beq	120ac <close@plt+0x1530>
   11fb4:	cmp	r9, #127	; 0x7f
   11fb8:	bhi	11f40 <close@plt+0x13c4>
   11fbc:	mov	r1, #0
   11fc0:	mov	r0, r7
   11fc4:	bl	150d0 <close@plt+0x4554>
   11fc8:	cmp	r0, r9
   11fcc:	bls	11f40 <close@plt+0x13c4>
   11fd0:	mov	r2, r9
   11fd4:	mov	r0, r7
   11fd8:	mov	r1, #0
   11fdc:	bl	15178 <close@plt+0x45fc>
   11fe0:	ldrb	r3, [r0]
   11fe4:	cmp	r3, #0
   11fe8:	beq	11f40 <close@plt+0x13c4>
   11fec:	ldr	r2, [pc, #304]	; 12124 <close@plt+0x15a8>
   11ff0:	mov	r3, r0
   11ff4:	add	r2, pc, r2
   11ff8:	mov	r0, r6
   11ffc:	b	11f84 <close@plt+0x1408>
   12000:	ldr	r3, [pc, #288]	; 12128 <close@plt+0x15ac>
   12004:	add	r3, pc, r3
   12008:	b	11f50 <close@plt+0x13d4>
   1200c:	mov	r1, r6
   12010:	mov	r0, #43	; 0x2b
   12014:	bl	10b34 <fputc@plt>
   12018:	mov	r3, #1
   1201c:	mov	fp, r3
   12020:	mov	r5, #0
   12024:	b	11f24 <close@plt+0x13a8>
   12028:	mov	r1, r5
   1202c:	mov	r0, r7
   12030:	bl	150d0 <close@plt+0x4554>
   12034:	cmp	r0, r9
   12038:	bls	11fa0 <close@plt+0x1424>
   1203c:	mov	r2, r9
   12040:	mov	r1, r5
   12044:	mov	r0, r7
   12048:	bl	15178 <close@plt+0x45fc>
   1204c:	ldrb	r2, [r0]
   12050:	cmp	r2, #0
   12054:	beq	11fa0 <close@plt+0x1424>
   12058:	ldr	r2, [pc, #204]	; 1212c <close@plt+0x15b0>
   1205c:	str	r0, [sp]
   12060:	rsb	r3, fp, #16
   12064:	mov	r0, r6
   12068:	add	r2, pc, r2
   1206c:	mov	r1, #1
   12070:	bl	10b10 <__fprintf_chk@plt>
   12074:	b	11f6c <close@plt+0x13f0>
   12078:	mov	r1, r4
   1207c:	mov	r0, r7
   12080:	bl	15260 <close@plt+0x46e4>
   12084:	cmp	r0, #0
   12088:	beq	11f94 <close@plt+0x1418>
   1208c:	ldr	r2, [pc, #156]	; 12130 <close@plt+0x15b4>
   12090:	str	r0, [sp]
   12094:	rsb	r3, fp, #16
   12098:	mov	r0, r6
   1209c:	add	r2, pc, r2
   120a0:	mov	r1, #1
   120a4:	bl	10b10 <__fprintf_chk@plt>
   120a8:	b	11f6c <close@plt+0x13f0>
   120ac:	cmp	r5, #13
   120b0:	movne	r5, #0
   120b4:	andeq	r5, sl, #1
   120b8:	cmp	r5, #0
   120bc:	beq	11f40 <close@plt+0x13c4>
   120c0:	mov	r1, r8
   120c4:	mov	r0, r7
   120c8:	bl	150d0 <close@plt+0x4554>
   120cc:	cmp	r0, r9
   120d0:	bls	11f40 <close@plt+0x13c4>
   120d4:	mov	r2, r9
   120d8:	mov	r1, r8
   120dc:	mov	r0, r7
   120e0:	bl	15178 <close@plt+0x45fc>
   120e4:	ldrb	r3, [r0]
   120e8:	cmp	r3, #0
   120ec:	beq	11f40 <close@plt+0x13c4>
   120f0:	ldr	r1, [pc, #60]	; 12134 <close@plt+0x15b8>
   120f4:	mov	r2, r0
   120f8:	add	r1, pc, r1
   120fc:	mov	r0, #1
   12100:	add	sp, sp, #20
   12104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12108:	b	10b04 <__printf_chk@plt>
   1210c:	andeq	r0, r2, ip, lsr r1
   12110:	strheq	r0, [r0], -ip
   12114:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   12118:	andeq	r4, r0, r0, lsl #15
   1211c:	andeq	r4, r0, ip, lsr #15
   12120:	andeq	r4, r0, r8, asr r7
   12124:	andeq	r4, r0, r0, lsl #14
   12128:	andeq	r4, r0, ip, asr #19
   1212c:	andeq	r4, r0, r4, lsl #13
   12130:	andeq	r4, r0, r0, asr r6
   12134:	andeq	r4, r0, r8, lsl #12
   12138:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1213c:	mov	r7, r0
   12140:	ldr	r6, [sp, #40]	; 0x28
   12144:	ldr	r4, [pc, #196]	; 12210 <close@plt+0x1694>
   12148:	cmp	r6, #0
   1214c:	add	r4, pc, r4
   12150:	mov	r8, r2
   12154:	mov	r9, r3
   12158:	mov	r5, r1
   1215c:	ldrb	sl, [sp, #44]	; 0x2c
   12160:	bne	121b8 <close@plt+0x163c>
   12164:	ldr	r0, [pc, #168]	; 12214 <close@plt+0x1698>
   12168:	mov	r3, r1
   1216c:	mov	r2, #6
   12170:	mov	r1, #1
   12174:	add	r0, pc, r0
   12178:	bl	10a44 <fwrite@plt>
   1217c:	ldr	r2, [pc, #148]	; 12218 <close@plt+0x169c>
   12180:	mov	r3, r9
   12184:	add	r2, pc, r2
   12188:	mov	r1, #1
   1218c:	mov	r0, r5
   12190:	bl	10b10 <__fprintf_chk@plt>
   12194:	mov	r1, r5
   12198:	mov	r0, r7
   1219c:	mov	r3, sl
   121a0:	mov	r2, r8
   121a4:	bl	11e94 <close@plt+0x1318>
   121a8:	mov	r1, r5
   121ac:	mov	r0, #10
   121b0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121b4:	b	10b34 <fputc@plt>
   121b8:	mov	r0, #9
   121bc:	bl	10b34 <fputc@plt>
   121c0:	ldr	r3, [pc, #84]	; 1221c <close@plt+0x16a0>
   121c4:	ldr	r4, [r4, r3]
   121c8:	ldr	r3, [r4]
   121cc:	cmp	r3, #0
   121d0:	beq	1217c <close@plt+0x1600>
   121d4:	ldr	fp, [pc, #68]	; 12220 <close@plt+0x16a4>
   121d8:	add	fp, pc, fp
   121dc:	b	121ec <close@plt+0x1670>
   121e0:	ldr	r3, [r4, #8]!
   121e4:	cmp	r3, #0
   121e8:	beq	1217c <close@plt+0x1600>
   121ec:	ldr	r2, [r4, #4]
   121f0:	asr	r2, r6, r2
   121f4:	tst	r2, #1
   121f8:	beq	121e0 <close@plt+0x1664>
   121fc:	mov	r2, fp
   12200:	mov	r1, #1
   12204:	mov	r0, r5
   12208:	bl	10b10 <__fprintf_chk@plt>
   1220c:	b	121e0 <close@plt+0x1664>
   12210:	andeq	pc, r1, ip, lsr #29
   12214:	andeq	r4, r0, r0, asr #11
   12218:	andeq	r4, r0, r0, lsr #11
   1221c:	andeq	r0, r0, ip, lsr #1
   12220:	andeq	r4, r0, r8, asr #10
   12224:	ldr	r3, [pc, #132]	; 122b0 <close@plt+0x1734>
   12228:	push	{r4, r5, r6, r7, r8, lr}
   1222c:	add	r3, pc, r3
   12230:	ldr	r6, [pc, #124]	; 122b4 <close@plt+0x1738>
   12234:	ldr	r8, [pc, #124]	; 122b8 <close@plt+0x173c>
   12238:	ldr	r7, [pc, #124]	; 122bc <close@plt+0x1740>
   1223c:	mov	r4, #0
   12240:	add	r6, pc, r6
   12244:	add	r8, pc, r8
   12248:	add	r7, pc, r7
   1224c:	mov	r5, r0
   12250:	strb	r4, [r3]
   12254:	b	12274 <close@plt+0x16f8>
   12258:	mov	r2, #60	; 0x3c
   1225c:	ldr	r1, [r8, r4, lsl #2]
   12260:	mov	r0, r7
   12264:	bl	10ae0 <__strcat_chk@plt>
   12268:	add	r4, r4, #1
   1226c:	cmp	r4, #8
   12270:	beq	122a4 <close@plt+0x1728>
   12274:	asr	r3, r5, r4
   12278:	tst	r3, #1
   1227c:	beq	12268 <close@plt+0x16ec>
   12280:	ldrb	r3, [r6]
   12284:	cmp	r3, #0
   12288:	beq	12258 <close@plt+0x16dc>
   1228c:	ldr	r1, [pc, #44]	; 122c0 <close@plt+0x1744>
   12290:	mov	r2, #60	; 0x3c
   12294:	add	r1, pc, r1
   12298:	mov	r0, r6
   1229c:	bl	10ae0 <__strcat_chk@plt>
   122a0:	b	12258 <close@plt+0x16dc>
   122a4:	ldr	r0, [pc, #24]	; 122c4 <close@plt+0x1748>
   122a8:	add	r0, pc, r0
   122ac:	pop	{r4, r5, r6, r7, r8, pc}
   122b0:			; <UNDEFINED> instruction: 0x0001feb8
   122b4:	andeq	pc, r1, r4, lsr #29
   122b8:	andeq	sl, r1, ip, lsr pc
   122bc:	muleq	r1, ip, lr
   122c0:	andeq	r4, r0, r0, ror #29
   122c4:	andeq	pc, r1, ip, lsr lr	; <UNPREDICTABLE>
   122c8:	push	{r4, r5, r6, lr}
   122cc:	mov	r5, r0
   122d0:	mov	r4, r1
   122d4:	mov	r0, #39	; 0x27
   122d8:	mov	r1, r5
   122dc:	bl	10b34 <fputc@plt>
   122e0:	cmp	r4, #39	; 0x27
   122e4:	cmpne	r4, #92	; 0x5c
   122e8:	beq	12324 <close@plt+0x17a8>
   122ec:	bl	10ab0 <__ctype_b_loc@plt>
   122f0:	lsl	r3, r4, #1
   122f4:	ldr	r2, [r0]
   122f8:	ldrsh	r3, [r2, r3]
   122fc:	cmp	r3, #0
   12300:	blt	1234c <close@plt+0x17d0>
   12304:	sub	r3, r4, #32
   12308:	clz	r3, r3
   1230c:	lsr	r3, r3, #5
   12310:	orrs	r3, r3, r4, lsr #7
   12314:	beq	12358 <close@plt+0x17dc>
   12318:	ldr	r2, [pc, #68]	; 12364 <close@plt+0x17e8>
   1231c:	add	r2, pc, r2
   12320:	b	1232c <close@plt+0x17b0>
   12324:	ldr	r2, [pc, #60]	; 12368 <close@plt+0x17ec>
   12328:	add	r2, pc, r2
   1232c:	mov	r3, r4
   12330:	mov	r1, #1
   12334:	mov	r0, r5
   12338:	bl	10b10 <__fprintf_chk@plt>
   1233c:	mov	r1, r5
   12340:	mov	r0, #39	; 0x27
   12344:	pop	{r4, r5, r6, lr}
   12348:	b	10b34 <fputc@plt>
   1234c:	ldr	r2, [pc, #24]	; 1236c <close@plt+0x17f0>
   12350:	add	r2, pc, r2
   12354:	b	1232c <close@plt+0x17b0>
   12358:	ldr	r2, [pc, #16]	; 12370 <close@plt+0x17f4>
   1235c:	add	r2, pc, r2
   12360:	b	1232c <close@plt+0x17b0>
   12364:	andeq	r4, r0, r4, lsr #7
   12368:	muleq	r0, r4, r3
   1236c:	andeq	r4, r0, r0, ror r3
   12370:	andeq	r4, r0, r8, asr r3
   12374:	ldr	r3, [pc, #376]	; 124f4 <close@plt+0x1978>
   12378:	ldr	ip, [pc, #376]	; 124f8 <close@plt+0x197c>
   1237c:	ldr	r2, [pc, #376]	; 124fc <close@plt+0x1980>
   12380:	add	r3, pc, r3
   12384:	add	r2, pc, r2
   12388:	push	{r4, r5, r6, r7, r8, r9, lr}
   1238c:	mov	r5, r0
   12390:	ldr	r8, [r3, ip]
   12394:	sub	sp, sp, #28
   12398:	mov	r6, r1
   1239c:	ldm	r2, {r0, r1}
   123a0:	add	r4, sp, #12
   123a4:	ldr	r3, [r8]
   123a8:	stm	r4, {r0, r1}
   123ac:	mov	r0, r5
   123b0:	str	r3, [sp, #20]
   123b4:	bl	13f68 <close@plt+0x33ec>
   123b8:	cmp	r0, #0
   123bc:	blt	123e8 <close@plt+0x186c>
   123c0:	mov	r0, r4
   123c4:	mov	r3, r6
   123c8:	mov	r2, #1
   123cc:	mov	r1, #7
   123d0:	bl	10a44 <fwrite@plt>
   123d4:	cmp	r0, #1
   123d8:	beq	12404 <close@plt+0x1888>
   123dc:	ldr	r3, [r5, #28]
   123e0:	cmp	r3, #2
   123e4:	bgt	124b0 <close@plt+0x1934>
   123e8:	mvn	r0, #0
   123ec:	ldr	r2, [sp, #20]
   123f0:	ldr	r3, [r8]
   123f4:	cmp	r2, r3
   123f8:	bne	124f0 <close@plt+0x1974>
   123fc:	add	sp, sp, #28
   12400:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12404:	mov	r4, #0
   12408:	add	r7, sp, #10
   1240c:	mov	r1, r4
   12410:	mov	r0, r5
   12414:	bl	13918 <close@plt+0x2d9c>
   12418:	mov	r2, #1
   1241c:	mov	r1, r2
   12420:	mov	r3, r6
   12424:	strb	r0, [sp, #10]
   12428:	mov	r0, r7
   1242c:	bl	10a44 <fwrite@plt>
   12430:	cmp	r0, #1
   12434:	bne	123dc <close@plt+0x1860>
   12438:	add	r4, r4, #1
   1243c:	cmp	r4, #256	; 0x100
   12440:	bne	1240c <close@plt+0x1890>
   12444:	mov	r9, #0
   12448:	mov	r1, r9
   1244c:	mov	r0, r5
   12450:	bl	13918 <close@plt+0x2d9c>
   12454:	cmp	r0, #0
   12458:	beq	1249c <close@plt+0x1920>
   1245c:	mov	r4, #0
   12460:	mov	r2, r4
   12464:	mov	r1, r9
   12468:	mov	r0, r5
   1246c:	bl	13ad0 <close@plt+0x2f54>
   12470:	mov	r3, r6
   12474:	mov	r2, #1
   12478:	mov	r1, #2
   1247c:	strh	r0, [sp, #10]
   12480:	mov	r0, r7
   12484:	bl	10a44 <fwrite@plt>
   12488:	cmp	r0, #1
   1248c:	bne	123dc <close@plt+0x1860>
   12490:	add	r4, r4, #1
   12494:	cmp	r4, #128	; 0x80
   12498:	bne	12460 <close@plt+0x18e4>
   1249c:	add	r9, r9, #1
   124a0:	cmp	r9, #256	; 0x100
   124a4:	bne	12448 <close@plt+0x18cc>
   124a8:	mov	r0, #0
   124ac:	b	123ec <close@plt+0x1870>
   124b0:	ldr	r1, [pc, #72]	; 12500 <close@plt+0x1984>
   124b4:	mov	r2, #5
   124b8:	add	r1, pc, r1
   124bc:	mov	r0, #0
   124c0:	bl	109fc <dcgettext@plt>
   124c4:	ldr	r2, [pc, #56]	; 12504 <close@plt+0x1988>
   124c8:	mov	r3, #86	; 0x56
   124cc:	add	r2, pc, r2
   124d0:	str	r2, [sp]
   124d4:	ldr	r2, [pc, #44]	; 12508 <close@plt+0x198c>
   124d8:	mov	r1, #3
   124dc:	add	r2, pc, r2
   124e0:	str	r0, [sp, #4]
   124e4:	mov	r0, r5
   124e8:	bl	11578 <close@plt+0x9fc>
   124ec:	b	123e8 <close@plt+0x186c>
   124f0:	bl	10a14 <__stack_chk_fail@plt>
   124f4:	andeq	pc, r1, r8, ror ip	; <UNPREDICTABLE>
   124f8:	andeq	r0, r0, r4, lsr #1
   124fc:	ldrdeq	r4, [r0], -ip
   12500:	andeq	r4, r0, r4, lsl #5
   12504:	ldrdeq	r4, [r0], -r8
   12508:	andeq	r4, r0, ip, ror r2
   1250c:	ldr	r3, [pc, #1912]	; 12c8c <close@plt+0x2110>
   12510:	ldr	r2, [pc, #1912]	; 12c90 <close@plt+0x2114>
   12514:	add	r3, pc, r3
   12518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1251c:	sub	sp, sp, #1040	; 0x410
   12520:	ldr	r3, [r3, r2]
   12524:	sub	sp, sp, #4
   12528:	mov	r4, r1
   1252c:	str	r3, [sp, #4]
   12530:	ldr	r3, [r3]
   12534:	mov	r6, r0
   12538:	str	r3, [sp, #1036]	; 0x40c
   1253c:	bl	13f68 <close@plt+0x33ec>
   12540:	cmp	r0, #0
   12544:	blt	12c78 <close@plt+0x20fc>
   12548:	ldr	r0, [pc, #1860]	; 12c94 <close@plt+0x2118>
   1254c:	mov	r3, r4
   12550:	mov	r2, #65	; 0x41
   12554:	mov	r1, #1
   12558:	add	r0, pc, r0
   1255c:	bl	10a44 <fwrite@plt>
   12560:	ldr	r0, [pc, #1840]	; 12c98 <close@plt+0x211c>
   12564:	mov	r3, r4
   12568:	mov	r2, #66	; 0x42
   1256c:	mov	r1, #1
   12570:	add	r0, pc, r0
   12574:	bl	10a44 <fwrite@plt>
   12578:	ldr	r0, [pc, #1820]	; 12c9c <close@plt+0x2120>
   1257c:	mov	r3, r4
   12580:	mov	r2, #28
   12584:	mov	r1, #1
   12588:	add	r0, pc, r0
   1258c:	bl	10a44 <fwrite@plt>
   12590:	ldr	r0, [pc, #1800]	; 12ca0 <close@plt+0x2124>
   12594:	ldr	sl, [pc, #1800]	; 12ca4 <close@plt+0x2128>
   12598:	ldr	r8, [pc, #1800]	; 12ca8 <close@plt+0x212c>
   1259c:	ldr	r9, [pc, #1800]	; 12cac <close@plt+0x2130>
   125a0:	mov	r3, r4
   125a4:	mov	r2, #23
   125a8:	mov	r1, #1
   125ac:	add	r0, pc, r0
   125b0:	bl	10a44 <fwrite@plt>
   125b4:	add	sl, pc, sl
   125b8:	add	r8, pc, r8
   125bc:	add	r9, pc, r9
   125c0:	mov	r5, #0
   125c4:	b	125d4 <close@plt+0x1a58>
   125c8:	add	r5, r5, #1
   125cc:	cmp	r5, #256	; 0x100
   125d0:	beq	12694 <close@plt+0x1b18>
   125d4:	mov	r1, r5
   125d8:	mov	r0, r6
   125dc:	bl	13918 <close@plt+0x2d9c>
   125e0:	cmp	r0, #0
   125e4:	beq	125c8 <close@plt+0x1a4c>
   125e8:	cmp	r5, #0
   125ec:	beq	12758 <close@plt+0x1bdc>
   125f0:	ldr	r0, [pc, #1720]	; 12cb0 <close@plt+0x2134>
   125f4:	mov	r3, r4
   125f8:	mov	r2, #7
   125fc:	mov	r1, #1
   12600:	add	r0, pc, r0
   12604:	bl	10a44 <fwrite@plt>
   12608:	uxtb	r0, r5
   1260c:	bl	12224 <close@plt+0x16a8>
   12610:	mov	r3, r0
   12614:	mov	r2, sl
   12618:	mov	r1, #1
   1261c:	mov	r0, r4
   12620:	bl	10b10 <__fprintf_chk@plt>
   12624:	mov	r7, #0
   12628:	b	1265c <close@plt+0x1ae0>
   1262c:	mov	r2, r7
   12630:	mov	r1, r5
   12634:	mov	r0, r6
   12638:	bl	13ad0 <close@plt+0x2f54>
   1263c:	add	r7, r7, #1
   12640:	mov	r2, r8
   12644:	mov	r1, #1
   12648:	eor	r3, r0, #61440	; 0xf000
   1264c:	mov	r0, r4
   12650:	bl	10b10 <__fprintf_chk@plt>
   12654:	cmp	r7, #256	; 0x100
   12658:	beq	12674 <close@plt+0x1af8>
   1265c:	tst	r7, #7
   12660:	bne	1262c <close@plt+0x1ab0>
   12664:	mov	r1, r4
   12668:	mov	r0, #10
   1266c:	bl	10b34 <fputc@plt>
   12670:	b	1262c <close@plt+0x1ab0>
   12674:	mov	r3, r4
   12678:	mov	r2, #5
   1267c:	mov	r1, #1
   12680:	mov	r0, r9
   12684:	add	r5, r5, #1
   12688:	bl	10a44 <fwrite@plt>
   1268c:	cmp	r5, #256	; 0x100
   12690:	bne	125d4 <close@plt+0x1a58>
   12694:	mov	r7, #255	; 0xff
   12698:	b	126a4 <close@plt+0x1b28>
   1269c:	subs	r7, r7, #1
   126a0:	beq	126b8 <close@plt+0x1b3c>
   126a4:	mov	r1, r7
   126a8:	mov	r0, r6
   126ac:	bl	13918 <close@plt+0x2d9c>
   126b0:	cmp	r0, #0
   126b4:	beq	1269c <close@plt+0x1b20>
   126b8:	ldr	r0, [pc, #1524]	; 12cb4 <close@plt+0x2138>
   126bc:	mov	r2, #36	; 0x24
   126c0:	mov	r3, r4
   126c4:	mov	r1, #1
   126c8:	add	r0, pc, r0
   126cc:	bl	10a44 <fwrite@plt>
   126d0:	ldr	fp, [pc, #1504]	; 12cb8 <close@plt+0x213c>
   126d4:	ldr	r2, [pc, #1504]	; 12cbc <close@plt+0x2140>
   126d8:	ldr	sl, [pc, #1504]	; 12cc0 <close@plt+0x2144>
   126dc:	ldr	r9, [pc, #1504]	; 12cc4 <close@plt+0x2148>
   126e0:	mov	r8, #0
   126e4:	add	r2, pc, r2
   126e8:	add	fp, pc, fp
   126ec:	add	sl, pc, sl
   126f0:	add	r9, pc, r9
   126f4:	mov	r1, #1
   126f8:	mov	r0, r4
   126fc:	bl	10b10 <__fprintf_chk@plt>
   12700:	mov	r1, r8
   12704:	mov	r0, r6
   12708:	bl	13918 <close@plt+0x2d9c>
   1270c:	cmp	r0, #0
   12710:	beq	12764 <close@plt+0x1be8>
   12714:	cmp	r8, #0
   12718:	uxtb	r0, r8
   1271c:	beq	12c84 <close@plt+0x2108>
   12720:	bl	12224 <close@plt+0x16a8>
   12724:	mov	r3, r0
   12728:	mov	r2, sl
   1272c:	mov	r1, #1
   12730:	mov	r0, r4
   12734:	add	r8, r8, #1
   12738:	bl	10b10 <__fprintf_chk@plt>
   1273c:	cmp	r7, r8
   12740:	bcc	12784 <close@plt+0x1c08>
   12744:	tst	r8, #3
   12748:	beq	12aa4 <close@plt+0x1f28>
   1274c:	ldr	r2, [pc, #1396]	; 12cc8 <close@plt+0x214c>
   12750:	add	r2, pc, r2
   12754:	b	126f4 <close@plt+0x1b78>
   12758:	ldr	r3, [pc, #1388]	; 12ccc <close@plt+0x2150>
   1275c:	add	r3, pc, r3
   12760:	b	12614 <close@plt+0x1a98>
   12764:	mov	r3, r4
   12768:	mov	r2, #2
   1276c:	mov	r1, #1
   12770:	mov	r0, fp
   12774:	add	r8, r8, #1
   12778:	bl	10a44 <fwrite@plt>
   1277c:	cmp	r7, r8
   12780:	bcs	12744 <close@plt+0x1bc8>
   12784:	cmp	r7, #255	; 0xff
   12788:	beq	127a4 <close@plt+0x1c28>
   1278c:	ldr	r0, [pc, #1340]	; 12cd0 <close@plt+0x2154>
   12790:	mov	r3, r4
   12794:	mov	r2, #2
   12798:	mov	r1, #1
   1279c:	add	r0, pc, r0
   127a0:	bl	10a44 <fwrite@plt>
   127a4:	ldr	r3, [r6, #8]
   127a8:	ldr	r2, [pc, #1316]	; 12cd4 <close@plt+0x2158>
   127ac:	mov	r1, #1
   127b0:	add	r2, pc, r2
   127b4:	ldr	r3, [r3, #8]
   127b8:	mov	r0, r4
   127bc:	bl	10b10 <__fprintf_chk@plt>
   127c0:	ldr	r0, [pc, #1296]	; 12cd8 <close@plt+0x215c>
   127c4:	mov	r3, r4
   127c8:	mov	r2, #213	; 0xd5
   127cc:	mov	r1, #1
   127d0:	add	r0, pc, r0
   127d4:	bl	10a44 <fwrite@plt>
   127d8:	b	127e4 <close@plt+0x1c68>
   127dc:	subs	r5, r7, #0
   127e0:	beq	12be4 <close@plt+0x2068>
   127e4:	sub	r7, r5, #1
   127e8:	mov	r1, r7
   127ec:	ldr	r0, [r6, #12]
   127f0:	bl	15dac <close@plt+0x5230>
   127f4:	cmp	r0, #0
   127f8:	beq	127dc <close@plt+0x1c60>
   127fc:	ldr	r0, [pc, #1240]	; 12cdc <close@plt+0x2160>
   12800:	mov	r3, r4
   12804:	mov	r2, #20
   12808:	mov	r1, #1
   1280c:	add	r0, pc, r0
   12810:	bl	10a44 <fwrite@plt>
   12814:	ldr	fp, [pc, #1220]	; 12ce0 <close@plt+0x2164>
   12818:	mov	r8, #0
   1281c:	add	fp, pc, fp
   12820:	mov	r9, r8
   12824:	add	sl, sp, #12
   12828:	mov	r1, r9
   1282c:	ldr	r0, [r6, #12]
   12830:	bl	15dac <close@plt+0x5230>
   12834:	subs	r7, r0, #0
   12838:	beq	1289c <close@plt+0x1d20>
   1283c:	mov	r1, r4
   12840:	mov	r0, #9
   12844:	str	r8, [sl, r9, lsl #2]
   12848:	bl	10b34 <fputc@plt>
   1284c:	ldrb	r1, [r7]
   12850:	str	r7, [sp]
   12854:	cmp	r1, #0
   12858:	moveq	r7, r1
   1285c:	beq	12880 <close@plt+0x1d04>
   12860:	mov	r2, #1
   12864:	mov	r0, r4
   12868:	bl	11dd8 <close@plt+0x125c>
   1286c:	ldrb	r1, [r7, #1]!
   12870:	cmp	r1, #0
   12874:	bne	12860 <close@plt+0x1ce4>
   12878:	ldr	r3, [sp]
   1287c:	sub	r7, r7, r3
   12880:	mov	r3, r4
   12884:	mov	r2, #4
   12888:	mov	r1, #1
   1288c:	mov	r0, fp
   12890:	bl	10a44 <fwrite@plt>
   12894:	add	r8, r8, #1
   12898:	add	r8, r8, r7
   1289c:	add	r9, r9, #1
   128a0:	cmp	r9, r5
   128a4:	bne	12828 <close@plt+0x1cac>
   128a8:	ldr	r0, [pc, #1076]	; 12ce4 <close@plt+0x2168>
   128ac:	mov	r3, r4
   128b0:	mov	r2, #4
   128b4:	mov	r1, #1
   128b8:	add	r0, pc, r0
   128bc:	bl	10a44 <fwrite@plt>
   128c0:	ldr	r0, [pc, #1056]	; 12ce8 <close@plt+0x216c>
   128c4:	mov	r3, r4
   128c8:	mov	r2, #113	; 0x71
   128cc:	mov	r1, #1
   128d0:	add	r0, pc, r0
   128d4:	bl	10a44 <fwrite@plt>
   128d8:	ldr	r0, [pc, #1036]	; 12cec <close@plt+0x2170>
   128dc:	ldr	r9, [pc, #1036]	; 12cf0 <close@plt+0x2174>
   128e0:	mov	r3, r4
   128e4:	mov	r2, #34	; 0x22
   128e8:	mov	r1, #1
   128ec:	add	r0, pc, r0
   128f0:	bl	10a44 <fwrite@plt>
   128f4:	add	r9, pc, r9
   128f8:	mov	r7, #0
   128fc:	add	r8, sp, #12
   12900:	b	12928 <close@plt+0x1dac>
   12904:	ldr	r2, [pc, #1000]	; 12cf4 <close@plt+0x2178>
   12908:	ldr	r3, [r8, r7, lsl #2]
   1290c:	add	r2, pc, r2
   12910:	mov	r1, #1
   12914:	mov	r0, r4
   12918:	add	r7, r7, #1
   1291c:	bl	10b10 <__fprintf_chk@plt>
   12920:	cmp	r7, r5
   12924:	beq	1295c <close@plt+0x1de0>
   12928:	mov	r1, r7
   1292c:	ldr	r0, [r6, #12]
   12930:	bl	15dac <close@plt+0x5230>
   12934:	cmp	r0, #0
   12938:	bne	12904 <close@plt+0x1d88>
   1293c:	mov	r3, r4
   12940:	mov	r2, #4
   12944:	mov	r1, #1
   12948:	mov	r0, r9
   1294c:	add	r7, r7, #1
   12950:	bl	10a44 <fwrite@plt>
   12954:	cmp	r7, r5
   12958:	bne	12928 <close@plt+0x1dac>
   1295c:	cmp	r7, #256	; 0x100
   12960:	bne	12c5c <close@plt+0x20e0>
   12964:	ldr	r0, [pc, #908]	; 12cf8 <close@plt+0x217c>
   12968:	mov	r3, r4
   1296c:	mov	r2, #3
   12970:	mov	r1, #1
   12974:	add	r0, pc, r0
   12978:	bl	10a44 <fwrite@plt>
   1297c:	ldr	r5, [r6]
   12980:	mov	r3, r4
   12984:	ands	r5, r5, #16
   12988:	beq	12b1c <close@plt+0x1fa0>
   1298c:	ldr	r0, [pc, #872]	; 12cfc <close@plt+0x2180>
   12990:	mov	r2, #46	; 0x2e
   12994:	mov	r1, #1
   12998:	add	r0, pc, r0
   1299c:	bl	10a44 <fwrite@plt>
   129a0:	ldr	r0, [r6, #16]
   129a4:	ldr	r3, [r0, #8]
   129a8:	cmp	r3, #0
   129ac:	beq	12ac4 <close@plt+0x1f48>
   129b0:	mov	r1, #0
   129b4:	bl	15dac <close@plt+0x5230>
   129b8:	mov	r3, r4
   129bc:	mov	r2, #2
   129c0:	mov	r1, #1
   129c4:	ldr	sl, [pc, #820]	; 12d00 <close@plt+0x2184>
   129c8:	ldr	r9, [pc, #820]	; 12d04 <close@plt+0x2188>
   129cc:	mov	r7, #0
   129d0:	add	sl, pc, sl
   129d4:	add	r9, pc, r9
   129d8:	mov	r5, r0
   129dc:	ldr	r0, [pc, #804]	; 12d08 <close@plt+0x218c>
   129e0:	add	r0, pc, r0
   129e4:	bl	10a44 <fwrite@plt>
   129e8:	ldrb	r1, [r5]
   129ec:	mov	r2, #1
   129f0:	mov	r0, r4
   129f4:	bl	11dd8 <close@plt+0x125c>
   129f8:	ldrb	r1, [r5, #4]
   129fc:	mov	r2, #1
   12a00:	mov	r0, r4
   12a04:	bl	11dd8 <close@plt+0x125c>
   12a08:	ldr	r2, [pc, #764]	; 12d0c <close@plt+0x2190>
   12a0c:	ldr	r3, [r5, #8]
   12a10:	add	r2, pc, r2
   12a14:	mov	r1, #1
   12a18:	mov	r0, r4
   12a1c:	bl	10b10 <__fprintf_chk@plt>
   12a20:	ldr	r0, [r6, #16]
   12a24:	add	r7, r7, #1
   12a28:	and	r8, r7, #1
   12a2c:	ldr	r3, [r0, #8]
   12a30:	cmp	r3, r7
   12a34:	bls	12ab0 <close@plt+0x1f34>
   12a38:	mov	r1, r7
   12a3c:	bl	15dac <close@plt+0x5230>
   12a40:	mov	r3, r4
   12a44:	mov	r2, #2
   12a48:	mov	r1, #1
   12a4c:	mov	r5, r0
   12a50:	mov	r0, sl
   12a54:	bl	10a44 <fwrite@plt>
   12a58:	ldrb	r1, [r5]
   12a5c:	mov	r2, #1
   12a60:	mov	r0, r4
   12a64:	bl	11dd8 <close@plt+0x125c>
   12a68:	ldrb	r1, [r5, #4]
   12a6c:	mov	r2, #1
   12a70:	mov	r0, r4
   12a74:	bl	11dd8 <close@plt+0x125c>
   12a78:	ldr	r3, [r5, #8]
   12a7c:	mov	r2, r9
   12a80:	mov	r1, #1
   12a84:	mov	r0, r4
   12a88:	bl	10b10 <__fprintf_chk@plt>
   12a8c:	cmp	r8, #0
   12a90:	beq	12a20 <close@plt+0x1ea4>
   12a94:	mov	r1, r4
   12a98:	mov	r0, #10
   12a9c:	bl	10b34 <fputc@plt>
   12aa0:	b	12a20 <close@plt+0x1ea4>
   12aa4:	ldr	r2, [pc, #612]	; 12d10 <close@plt+0x2194>
   12aa8:	add	r2, pc, r2
   12aac:	b	126f4 <close@plt+0x1b78>
   12ab0:	cmp	r8, #0
   12ab4:	beq	12ac4 <close@plt+0x1f48>
   12ab8:	mov	r1, r4
   12abc:	mov	r0, #10
   12ac0:	bl	10b34 <fputc@plt>
   12ac4:	ldr	r0, [pc, #584]	; 12d14 <close@plt+0x2198>
   12ac8:	mov	r3, r4
   12acc:	mov	r2, #4
   12ad0:	mov	r1, #1
   12ad4:	add	r0, pc, r0
   12ad8:	bl	10a44 <fwrite@plt>
   12adc:	ldr	r3, [r6, #16]
   12ae0:	ldr	r2, [pc, #560]	; 12d18 <close@plt+0x219c>
   12ae4:	mov	r0, r4
   12ae8:	add	r2, pc, r2
   12aec:	ldr	r3, [r3, #8]
   12af0:	mov	r1, #1
   12af4:	bl	10b10 <__fprintf_chk@plt>
   12af8:	mov	r0, #0
   12afc:	ldr	r3, [sp, #4]
   12b00:	ldr	r2, [sp, #1036]	; 0x40c
   12b04:	ldr	r3, [r3]
   12b08:	cmp	r2, r3
   12b0c:	bne	12c80 <close@plt+0x2104>
   12b10:	add	sp, sp, #1040	; 0x410
   12b14:	add	sp, sp, #4
   12b18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b1c:	ldr	r0, [pc, #504]	; 12d1c <close@plt+0x21a0>
   12b20:	mov	r2, #44	; 0x2c
   12b24:	mov	r1, #1
   12b28:	add	r0, pc, r0
   12b2c:	bl	10a44 <fwrite@plt>
   12b30:	ldr	r0, [r6, #16]
   12b34:	ldr	r3, [r0, #8]
   12b38:	cmp	r3, #0
   12b3c:	beq	12ac4 <close@plt+0x1f48>
   12b40:	ldr	r8, [pc, #472]	; 12d20 <close@plt+0x21a4>
   12b44:	add	r8, pc, r8
   12b48:	mov	r1, r5
   12b4c:	bl	15dac <close@plt+0x5230>
   12b50:	mov	r3, r4
   12b54:	mov	r2, #2
   12b58:	mov	r1, #1
   12b5c:	mov	r7, r0
   12b60:	mov	r0, r8
   12b64:	bl	10a44 <fwrite@plt>
   12b68:	ldrb	r1, [r7]
   12b6c:	mov	r2, #1
   12b70:	mov	r0, r4
   12b74:	bl	11dd8 <close@plt+0x125c>
   12b78:	ldrb	r1, [r7, #4]
   12b7c:	mov	r2, #1
   12b80:	mov	r0, r4
   12b84:	bl	11dd8 <close@plt+0x125c>
   12b88:	ldrb	r1, [r7, #8]
   12b8c:	mov	r2, #0
   12b90:	mov	r0, r4
   12b94:	bl	11dd8 <close@plt+0x125c>
   12b98:	ldr	r0, [pc, #388]	; 12d24 <close@plt+0x21a8>
   12b9c:	mov	r3, r4
   12ba0:	mov	r2, #2
   12ba4:	mov	r1, #1
   12ba8:	add	r0, pc, r0
   12bac:	bl	10a44 <fwrite@plt>
   12bb0:	tst	r5, #1
   12bb4:	beq	12bc4 <close@plt+0x2048>
   12bb8:	mov	r1, r4
   12bbc:	mov	r0, #10
   12bc0:	bl	10b34 <fputc@plt>
   12bc4:	ldr	r0, [r6, #16]
   12bc8:	add	r5, r5, #1
   12bcc:	ldr	r3, [r0, #8]
   12bd0:	cmp	r3, r5
   12bd4:	bhi	12b48 <close@plt+0x1fcc>
   12bd8:	tst	r5, #1
   12bdc:	beq	12ac4 <close@plt+0x1f48>
   12be0:	b	12ab8 <close@plt+0x1f3c>
   12be4:	ldr	r0, [pc, #316]	; 12d28 <close@plt+0x21ac>
   12be8:	mov	r3, r4
   12bec:	mov	r2, #20
   12bf0:	mov	r1, #1
   12bf4:	add	r0, pc, r0
   12bf8:	bl	10a44 <fwrite@plt>
   12bfc:	ldr	r0, [pc, #296]	; 12d2c <close@plt+0x21b0>
   12c00:	mov	r3, r4
   12c04:	mov	r2, #3
   12c08:	mov	r1, #1
   12c0c:	add	r0, pc, r0
   12c10:	bl	10a44 <fwrite@plt>
   12c14:	ldr	r0, [pc, #276]	; 12d30 <close@plt+0x21b4>
   12c18:	mov	r3, r4
   12c1c:	mov	r2, #4
   12c20:	mov	r1, #1
   12c24:	add	r0, pc, r0
   12c28:	bl	10a44 <fwrite@plt>
   12c2c:	ldr	r0, [pc, #256]	; 12d34 <close@plt+0x21b8>
   12c30:	mov	r3, r4
   12c34:	mov	r2, #113	; 0x71
   12c38:	mov	r1, #1
   12c3c:	add	r0, pc, r0
   12c40:	bl	10a44 <fwrite@plt>
   12c44:	ldr	r0, [pc, #236]	; 12d38 <close@plt+0x21bc>
   12c48:	mov	r3, r4
   12c4c:	mov	r2, #34	; 0x22
   12c50:	mov	r1, #1
   12c54:	add	r0, pc, r0
   12c58:	bl	10a44 <fwrite@plt>
   12c5c:	ldr	r0, [pc, #216]	; 12d3c <close@plt+0x21c0>
   12c60:	mov	r3, r4
   12c64:	mov	r2, #4
   12c68:	mov	r1, #1
   12c6c:	add	r0, pc, r0
   12c70:	bl	10a44 <fwrite@plt>
   12c74:	b	12964 <close@plt+0x1de8>
   12c78:	mvn	r0, #0
   12c7c:	b	12afc <close@plt+0x1f80>
   12c80:	bl	10a14 <__stack_chk_fail@plt>
   12c84:	mov	r3, r9
   12c88:	b	12728 <close@plt+0x1bac>
   12c8c:	andeq	pc, r1, r4, ror #21
   12c90:	andeq	r0, r0, r4, lsr #1
   12c94:	andeq	r4, r0, ip, lsl r2
   12c98:	andeq	r4, r0, r8, asr #4
   12c9c:	andeq	r4, r0, r4, ror r2
   12ca0:	andeq	r4, r0, r0, ror r2
   12ca4:	andeq	r4, r0, r8, lsl #5
   12ca8:	andeq	r4, r0, r8, lsr #5
   12cac:			; <UNDEFINED> instruction: 0x000042b0
   12cb0:	andeq	r4, r0, r4, lsr r2
   12cb4:	andeq	r4, r0, ip, lsr #3
   12cb8:			; <UNDEFINED> instruction: 0x000041bc
   12cbc:	andeq	r4, r0, ip, lsl #1
   12cc0:			; <UNDEFINED> instruction: 0x000041b0
   12cc4:	andeq	r4, r0, r8, ror r0
   12cc8:	andeq	r3, r0, ip, ror pc
   12ccc:	andeq	r4, r0, ip
   12cd0:	andeq	r4, r0, ip, lsl #2
   12cd4:	strdeq	r4, [r0], -ip
   12cd8:	andeq	r4, r0, r4, lsl #2
   12cdc:	andeq	r4, r0, r0, lsr #3
   12ce0:	andeq	r4, r0, r8, lsr #3
   12ce4:	andeq	r4, r0, r4, lsl r1
   12ce8:	andeq	r4, r0, r4, lsl #2
   12cec:	andeq	r4, r0, ip, asr r1
   12cf0:	andeq	r4, r0, ip, lsl #3
   12cf4:	andeq	r4, r0, r0, ror #2
   12cf8:	andeq	r4, r0, r4, lsl r1
   12cfc:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   12d00:	andeq	r4, r0, ip, ror #1
   12d04:	andeq	r4, r0, ip, ror #1
   12d08:	ldrdeq	r4, [r0], -ip
   12d0c:	strheq	r4, [r0], -r0
   12d10:	andeq	r3, r0, r8, asr #25
   12d14:	strdeq	r3, [r0], -r8
   12d18:	andeq	r3, r0, r4, ror #31
   12d1c:	andeq	r3, r0, ip, asr #31
   12d20:	andeq	r3, r0, r8, ror pc
   12d24:	andeq	r3, r0, ip, ror pc
   12d28:			; <UNDEFINED> instruction: 0x00003db8
   12d2c:	andeq	r3, r0, ip, lsl pc
   12d30:	andeq	r3, r0, r8, lsr #27
   12d34:	muleq	r0, r8, sp
   12d38:	strdeq	r3, [r0], -r4
   12d3c:	andeq	r3, r0, r4, lsl lr
   12d40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d44:	mov	r8, r0
   12d48:	ldr	r0, [r0, #12]
   12d4c:	ldr	r3, [r0, #12]
   12d50:	cmp	r3, #0
   12d54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d58:	ldr	sl, [pc, #264]	; 12e68 <close@plt+0x22ec>
   12d5c:	ldr	r9, [pc, #264]	; 12e6c <close@plt+0x22f0>
   12d60:	mov	r6, r1
   12d64:	add	sl, pc, sl
   12d68:	add	r9, pc, r9
   12d6c:	mov	r7, #0
   12d70:	mov	r1, r7
   12d74:	bl	15dac <close@plt+0x5230>
   12d78:	subs	r5, r0, #0
   12d7c:	beq	12e38 <close@plt+0x22bc>
   12d80:	mov	r2, r7
   12d84:	mov	r1, #1
   12d88:	mov	r0, r8
   12d8c:	bl	15178 <close@plt+0x45fc>
   12d90:	mov	r2, sl
   12d94:	mov	r1, #1
   12d98:	mov	r3, r0
   12d9c:	mov	r0, r6
   12da0:	bl	10b10 <__fprintf_chk@plt>
   12da4:	ldrb	r4, [r5]
   12da8:	cmp	r4, #0
   12dac:	bne	12df0 <close@plt+0x2274>
   12db0:	b	12e20 <close@plt+0x22a4>
   12db4:	bl	10ab0 <__ctype_b_loc@plt>
   12db8:	lsl	r3, r4, #1
   12dbc:	sub	r2, r4, #32
   12dc0:	clz	r2, r2
   12dc4:	lsr	r2, r2, #5
   12dc8:	mov	r1, r6
   12dcc:	ldr	ip, [r0]
   12dd0:	mov	r0, r4
   12dd4:	ldrh	r3, [ip, r3]
   12dd8:	orrs	r3, r2, r3, lsr #15
   12ddc:	beq	12e50 <close@plt+0x22d4>
   12de0:	bl	10b34 <fputc@plt>
   12de4:	ldrb	r4, [r5, #1]!
   12de8:	cmp	r4, #0
   12dec:	beq	12e20 <close@plt+0x22a4>
   12df0:	cmp	r4, #92	; 0x5c
   12df4:	cmpne	r4, #34	; 0x22
   12df8:	bne	12db4 <close@plt+0x2238>
   12dfc:	mov	r1, r6
   12e00:	mov	r0, #92	; 0x5c
   12e04:	bl	10b34 <fputc@plt>
   12e08:	ldrb	r0, [r5]
   12e0c:	mov	r1, r6
   12e10:	bl	10b34 <fputc@plt>
   12e14:	ldrb	r4, [r5, #1]!
   12e18:	cmp	r4, #0
   12e1c:	bne	12df0 <close@plt+0x2274>
   12e20:	mov	r1, r6
   12e24:	mov	r0, #34	; 0x22
   12e28:	bl	10b34 <fputc@plt>
   12e2c:	mov	r1, r6
   12e30:	mov	r0, #10
   12e34:	bl	10b34 <fputc@plt>
   12e38:	ldr	r0, [r8, #12]
   12e3c:	add	r7, r7, #1
   12e40:	ldr	r3, [r0, #12]
   12e44:	cmp	r3, r7
   12e48:	bhi	12d70 <close@plt+0x21f4>
   12e4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e50:	mov	r3, r4
   12e54:	mov	r2, r9
   12e58:	mov	r1, #1
   12e5c:	mov	r0, r6
   12e60:	bl	10b10 <__fprintf_chk@plt>
   12e64:	b	12de4 <close@plt+0x2268>
   12e68:	andeq	r3, r0, r8, asr #27
   12e6c:	ldrdeq	r3, [r0], -r4
   12e70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e74:	mov	r7, r0
   12e78:	ldr	r0, [r0, #16]
   12e7c:	ldr	r3, [r0, #8]
   12e80:	cmp	r3, #0
   12e84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e88:	ldr	r8, [pc, #328]	; 12fd8 <close@plt+0x245c>
   12e8c:	ldr	sl, [pc, #328]	; 12fdc <close@plt+0x2460>
   12e90:	ldr	r9, [pc, #328]	; 12fe0 <close@plt+0x2464>
   12e94:	mov	r5, r1
   12e98:	add	r8, pc, r8
   12e9c:	add	sl, pc, sl
   12ea0:	add	r9, pc, r9
   12ea4:	mov	r4, #0
   12ea8:	b	12ed4 <close@plt+0x2358>
   12eac:	ldr	r2, [pc, #304]	; 12fe4 <close@plt+0x2468>
   12eb0:	mov	r1, #1
   12eb4:	add	r2, pc, r2
   12eb8:	mov	r0, r5
   12ebc:	bl	10b10 <__fprintf_chk@plt>
   12ec0:	ldr	r0, [r7, #16]
   12ec4:	add	r4, r4, #1
   12ec8:	ldr	r3, [r0, #8]
   12ecc:	cmp	r3, r4
   12ed0:	popls	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ed4:	mov	r1, r4
   12ed8:	bl	15dac <close@plt+0x5230>
   12edc:	subs	r6, r0, #0
   12ee0:	beq	12ec0 <close@plt+0x2344>
   12ee4:	mov	r3, r5
   12ee8:	mov	r2, #8
   12eec:	mov	r1, #1
   12ef0:	mov	r0, r8
   12ef4:	bl	10a44 <fwrite@plt>
   12ef8:	ldrb	r1, [r6]
   12efc:	mov	r0, r5
   12f00:	bl	122c8 <close@plt+0x174c>
   12f04:	mov	r1, r5
   12f08:	mov	r0, #32
   12f0c:	bl	10b34 <fputc@plt>
   12f10:	ldrb	r1, [r6, #4]
   12f14:	mov	r0, r5
   12f18:	bl	122c8 <close@plt+0x174c>
   12f1c:	ldr	r3, [r7]
   12f20:	tst	r3, #16
   12f24:	bne	12f5c <close@plt+0x23e0>
   12f28:	ldr	r3, [r6, #8]
   12f2c:	cmp	r3, #255	; 0xff
   12f30:	bhi	12eac <close@plt+0x2330>
   12f34:	mov	r1, r3
   12f38:	mov	r0, r7
   12f3c:	bl	15260 <close@plt+0x46e4>
   12f40:	subs	r3, r0, #0
   12f44:	beq	12f8c <close@plt+0x2410>
   12f48:	mov	r2, r9
   12f4c:	mov	r1, #1
   12f50:	mov	r0, r5
   12f54:	bl	10b10 <__fprintf_chk@plt>
   12f58:	b	12ec0 <close@plt+0x2344>
   12f5c:	ldr	r1, [r6, #8]
   12f60:	mov	r0, r7
   12f64:	eor	r1, r1, #61440	; 0xf000
   12f68:	bl	15260 <close@plt+0x46e4>
   12f6c:	subs	r3, r0, #0
   12f70:	beq	12fbc <close@plt+0x2440>
   12f74:	ldr	r2, [pc, #108]	; 12fe8 <close@plt+0x246c>
   12f78:	mov	r1, #1
   12f7c:	add	r2, pc, r2
   12f80:	mov	r0, r5
   12f84:	bl	10b10 <__fprintf_chk@plt>
   12f88:	b	12ec0 <close@plt+0x2344>
   12f8c:	mov	r3, r5
   12f90:	mov	r2, #4
   12f94:	mov	r1, #1
   12f98:	mov	r0, sl
   12f9c:	bl	10a44 <fwrite@plt>
   12fa0:	ldrb	r1, [r6, #8]
   12fa4:	mov	r0, r5
   12fa8:	bl	122c8 <close@plt+0x174c>
   12fac:	mov	r1, r5
   12fb0:	mov	r0, #10
   12fb4:	bl	10b34 <fputc@plt>
   12fb8:	b	12ec0 <close@plt+0x2344>
   12fbc:	ldr	r2, [pc, #40]	; 12fec <close@plt+0x2470>
   12fc0:	ldr	r3, [r6, #8]
   12fc4:	add	r2, pc, r2
   12fc8:	mov	r1, #1
   12fcc:	mov	r0, r5
   12fd0:	bl	10b10 <__fprintf_chk@plt>
   12fd4:	b	12ec0 <close@plt+0x2344>
   12fd8:	andeq	r3, r0, ip, lsr #25
   12fdc:	ldrdeq	r3, [r0], -r4
   12fe0:			; <UNDEFINED> instruction: 0x00003cb0
   12fe4:			; <UNDEFINED> instruction: 0x00003cb0
   12fe8:	ldrdeq	r3, [r0], -r4
   12fec:	muleq	r0, r4, fp
   12ff0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ff4:	mov	r5, r0
   12ff8:	ldr	r0, [pc, #416]	; 131a0 <close@plt+0x2624>
   12ffc:	mov	r3, r1
   13000:	mov	r2, #7
   13004:	sub	sp, sp, #8
   13008:	mov	r9, r1
   1300c:	add	r0, pc, r0
   13010:	mov	r1, #1
   13014:	bl	10a44 <fwrite@plt>
   13018:	ldr	r3, [r5, #8]
   1301c:	ldr	r2, [r3, #12]
   13020:	cmp	r2, #0
   13024:	beq	1312c <close@plt+0x25b0>
   13028:	ldr	sl, [pc, #372]	; 131a4 <close@plt+0x2628>
   1302c:	mov	r8, #0
   13030:	add	sl, pc, sl
   13034:	mov	r4, r8
   13038:	mov	r7, r8
   1303c:	mov	r1, r8
   13040:	b	130a0 <close@plt+0x2524>
   13044:	cmp	r4, #0
   13048:	beq	1308c <close@plt+0x2510>
   1304c:	sub	r7, r7, #1
   13050:	sub	r4, r4, #1
   13054:	cmp	r7, r4
   13058:	beq	13140 <close@plt+0x25c4>
   1305c:	cmp	r8, #0
   13060:	str	r4, [sp, #4]
   13064:	str	r7, [sp]
   13068:	mov	r4, r0
   1306c:	moveq	r3, #32
   13070:	movne	r3, #44	; 0x2c
   13074:	mov	r2, sl
   13078:	mov	r1, #1
   1307c:	mov	r0, r9
   13080:	bl	10b10 <__fprintf_chk@plt>
   13084:	mov	r7, r4
   13088:	mov	r8, #1
   1308c:	ldr	r3, [r5, #8]
   13090:	ldr	r2, [r3, #12]
   13094:	mov	r1, r6
   13098:	cmp	r2, r6
   1309c:	bls	130ec <close@plt+0x2570>
   130a0:	ldr	r2, [r5, #4]
   130a4:	add	r6, r1, #1
   130a8:	tst	r2, #4
   130ac:	beq	130bc <close@plt+0x2540>
   130b0:	orr	r2, r1, #8
   130b4:	cmp	r2, r1
   130b8:	beq	13090 <close@plt+0x2514>
   130bc:	mov	r0, r5
   130c0:	bl	13918 <close@plt+0x2d9c>
   130c4:	cmp	r0, #0
   130c8:	beq	13044 <close@plt+0x24c8>
   130cc:	ldr	r3, [r5, #8]
   130d0:	cmp	r7, #0
   130d4:	moveq	r7, r6
   130d8:	ldr	r2, [r3, #12]
   130dc:	mov	r4, r6
   130e0:	cmp	r2, r6
   130e4:	mov	r1, r6
   130e8:	bhi	130a0 <close@plt+0x2524>
   130ec:	cmp	r4, #0
   130f0:	beq	1312c <close@plt+0x25b0>
   130f4:	sub	r7, r7, #1
   130f8:	sub	r4, r4, #1
   130fc:	cmp	r7, r4
   13100:	beq	13178 <close@plt+0x25fc>
   13104:	ldr	r2, [pc, #156]	; 131a8 <close@plt+0x262c>
   13108:	cmp	r8, #0
   1310c:	str	r4, [sp, #4]
   13110:	str	r7, [sp]
   13114:	moveq	r3, #32
   13118:	movne	r3, #44	; 0x2c
   1311c:	add	r2, pc, r2
   13120:	mov	r1, #1
   13124:	mov	r0, r9
   13128:	bl	10b10 <__fprintf_chk@plt>
   1312c:	mov	r1, r9
   13130:	mov	r0, #10
   13134:	add	sp, sp, #8
   13138:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1313c:	b	10b34 <fputc@plt>
   13140:	ldr	r2, [pc, #100]	; 131ac <close@plt+0x2630>
   13144:	cmp	r8, #0
   13148:	str	r7, [sp]
   1314c:	mov	r4, r0
   13150:	moveq	r3, #32
   13154:	movne	r3, #44	; 0x2c
   13158:	add	r2, pc, r2
   1315c:	mov	r1, #1
   13160:	mov	r0, r9
   13164:	bl	10b10 <__fprintf_chk@plt>
   13168:	mov	r7, r4
   1316c:	mov	r8, #1
   13170:	ldr	r3, [r5, #8]
   13174:	b	13090 <close@plt+0x2514>
   13178:	ldr	r2, [pc, #48]	; 131b0 <close@plt+0x2634>
   1317c:	cmp	r8, #0
   13180:	str	r7, [sp]
   13184:	moveq	r3, #32
   13188:	movne	r3, #44	; 0x2c
   1318c:	add	r2, pc, r2
   13190:	mov	r1, #1
   13194:	mov	r0, r9
   13198:	bl	10b10 <__fprintf_chk@plt>
   1319c:	b	1312c <close@plt+0x25b0>
   131a0:	andeq	r3, r0, ip, ror #22
   131a4:	andeq	r3, r0, r8, asr fp
   131a8:	andeq	r3, r0, ip, ror #20
   131ac:	andeq	r3, r0, r8, lsr #20
   131b0:	strdeq	r3, [r0], -r4
   131b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131b8:	sub	sp, sp, #2160	; 0x870
   131bc:	ldr	lr, [pc, #1788]	; 138c0 <close@plt+0x2d44>
   131c0:	ldr	ip, [pc, #1788]	; 138c4 <close@plt+0x2d48>
   131c4:	sub	sp, sp, #4
   131c8:	add	lr, pc, lr
   131cc:	mov	r9, r0
   131d0:	ldr	r0, [r0, #8]
   131d4:	str	lr, [sp, #60]	; 0x3c
   131d8:	str	r1, [sp, #12]
   131dc:	ldr	ip, [lr, ip]
   131e0:	ldr	r8, [r0, #12]
   131e4:	mov	r1, lr
   131e8:	str	r2, [sp, #24]
   131ec:	mov	lr, r2
   131f0:	ldr	r2, [ip]
   131f4:	cmp	r8, #0
   131f8:	str	ip, [sp, #64]	; 0x40
   131fc:	str	r3, [sp, #28]
   13200:	str	r2, [sp, #2156]	; 0x86c
   13204:	beq	1345c <close@plt+0x28e0>
   13208:	sub	r3, lr, #4
   1320c:	bics	r3, r3, #4
   13210:	str	r3, [sp, #40]	; 0x28
   13214:	bne	137c0 <close@plt+0x2c44>
   13218:	mov	r3, #0
   1321c:	str	r3, [sp, #44]	; 0x2c
   13220:	add	r3, sp, #1120	; 0x460
   13224:	add	r3, r3, #12
   13228:	str	r3, [sp, #36]	; 0x24
   1322c:	add	r3, r3, r8, lsl #2
   13230:	str	r3, [sp, #48]	; 0x30
   13234:	ldr	r3, [sp, #24]
   13238:	mov	sl, #1
   1323c:	subs	r3, r3, #4
   13240:	movne	r3, #1
   13244:	str	r3, [sp, #20]
   13248:	ldr	r3, [pc, #1656]	; 138c8 <close@plt+0x2d4c>
   1324c:	add	fp, sp, #108	; 0x6c
   13250:	add	r3, pc, r3
   13254:	str	r3, [sp, #52]	; 0x34
   13258:	ldr	r3, [pc, #1644]	; 138cc <close@plt+0x2d50>
   1325c:	add	r3, pc, r3
   13260:	str	r3, [sp, #68]	; 0x44
   13264:	mov	r6, #1
   13268:	mov	r4, #0
   1326c:	mov	r7, #512	; 0x200
   13270:	b	13284 <close@plt+0x2708>
   13274:	add	r5, r4, #1
   13278:	cmp	r8, r5
   1327c:	beq	132c4 <close@plt+0x2748>
   13280:	mov	r4, r5
   13284:	mov	r1, r4
   13288:	mov	r0, r9
   1328c:	str	r7, [fp, r4, lsl #2]
   13290:	bl	13918 <close@plt+0x2d9c>
   13294:	cmp	r0, #0
   13298:	beq	13274 <close@plt+0x26f8>
   1329c:	mov	r2, sl
   132a0:	mov	r1, r4
   132a4:	mov	r0, r9
   132a8:	bl	13ad0 <close@plt+0x2f54>
   132ac:	add	r5, r4, #1
   132b0:	cmp	r0, #512	; 0x200
   132b4:	movne	r6, #0
   132b8:	cmp	r8, r5
   132bc:	str	r0, [fp, r4, lsl #2]
   132c0:	bne	13280 <close@plt+0x2704>
   132c4:	ldr	r3, [sp, #20]
   132c8:	ands	r6, r6, r3
   132cc:	bne	13450 <close@plt+0x28d4>
   132d0:	ldr	r3, [sp, #24]
   132d4:	cmp	r3, #4
   132d8:	beq	1376c <close@plt+0x2bf0>
   132dc:	ldr	r3, [sp, #40]	; 0x28
   132e0:	ldr	r2, [sp, #108]	; 0x6c
   132e4:	cmp	r3, #0
   132e8:	beq	13650 <close@plt+0x2ad4>
   132ec:	asrs	r1, r2, #8
   132f0:	moveq	r3, #1
   132f4:	movne	r3, #0
   132f8:	cmp	r1, #11
   132fc:	orreq	r3, r3, #1
   13300:	cmp	r3, #0
   13304:	uxtb	r1, r2
   13308:	str	r1, [sp, #32]
   1330c:	streq	r3, [sp, #16]
   13310:	beq	13328 <close@plt+0x27ac>
   13314:	bic	r3, r1, #32
   13318:	sub	r3, r3, #65	; 0x41
   1331c:	cmp	r3, #25
   13320:	strhi	r6, [sp, #16]
   13324:	bls	136a0 <close@plt+0x2b24>
   13328:	ldr	r3, [sp, #36]	; 0x24
   1332c:	ldr	r1, [sp, #48]	; 0x30
   13330:	mov	r2, #0
   13334:	str	r2, [r3], #4
   13338:	cmp	r1, r3
   1333c:	bne	13334 <close@plt+0x27b8>
   13340:	ldr	r3, [sp, #44]	; 0x2c
   13344:	cmp	r3, #0
   13348:	bne	13584 <close@plt+0x2a08>
   1334c:	mov	r3, sl
   13350:	ldr	r2, [sp, #52]	; 0x34
   13354:	mov	r1, #1
   13358:	ldr	r0, [sp, #12]
   1335c:	bl	10b10 <__fprintf_chk@plt>
   13360:	ldr	r3, [sp, #16]
   13364:	cmp	r3, #0
   13368:	bne	1347c <close@plt+0x2900>
   1336c:	cmp	r5, #1
   13370:	ldr	r6, [sp, #108]	; 0x6c
   13374:	moveq	r0, r3
   13378:	beq	133c0 <close@plt+0x2844>
   1337c:	ldr	r2, [sp, #16]
   13380:	ldr	ip, [sp, #36]	; 0x24
   13384:	mov	r0, r2
   13388:	mov	r3, #1
   1338c:	ldr	r1, [ip, r3, lsl #2]
   13390:	cmp	r1, #0
   13394:	bne	133ac <close@plt+0x2830>
   13398:	ldr	r1, [fp, r3, lsl #2]
   1339c:	cmp	r1, r6
   133a0:	addne	r0, r0, #1
   133a4:	cmp	r1, #512	; 0x200
   133a8:	addne	r2, r2, #1
   133ac:	add	r3, r3, #1
   133b0:	cmp	r3, r5
   133b4:	bne	1338c <close@plt+0x2810>
   133b8:	cmp	r0, r2
   133bc:	bhi	134b0 <close@plt+0x2934>
   133c0:	cmp	r4, r0
   133c4:	bls	134b0 <close@plt+0x2934>
   133c8:	cmp	r6, #512	; 0x200
   133cc:	beq	133e4 <close@plt+0x2868>
   133d0:	ldr	r3, [sp, #28]
   133d4:	mov	r2, r6
   133d8:	ldr	r1, [sp, #12]
   133dc:	mov	r0, r9
   133e0:	bl	11e94 <close@plt+0x1318>
   133e4:	ldr	r1, [sp, #12]
   133e8:	mov	r0, #10
   133ec:	bl	10b34 <fputc@plt>
   133f0:	cmp	r5, #1
   133f4:	beq	13450 <close@plt+0x28d4>
   133f8:	mov	r4, #1
   133fc:	ldr	r7, [sp, #36]	; 0x24
   13400:	b	13410 <close@plt+0x2894>
   13404:	add	r4, r4, #1
   13408:	cmp	r4, r5
   1340c:	beq	13450 <close@plt+0x28d4>
   13410:	ldr	r2, [fp, r4, lsl #2]
   13414:	cmp	r2, r6
   13418:	beq	13404 <close@plt+0x2888>
   1341c:	ldr	r3, [r7, r4, lsl #2]
   13420:	cmp	r3, #0
   13424:	bne	13404 <close@plt+0x2888>
   13428:	ldr	r3, [sp, #28]
   1342c:	str	r4, [sp]
   13430:	str	r3, [sp, #4]
   13434:	ldr	r1, [sp, #12]
   13438:	mov	r3, sl
   1343c:	mov	r0, r9
   13440:	add	r4, r4, #1
   13444:	bl	12138 <close@plt+0x15bc>
   13448:	cmp	r4, r5
   1344c:	bne	13410 <close@plt+0x2894>
   13450:	add	sl, sl, #1
   13454:	cmp	sl, #256	; 0x100
   13458:	bne	13264 <close@plt+0x26e8>
   1345c:	ldr	r3, [sp, #64]	; 0x40
   13460:	ldr	r2, [sp, #2156]	; 0x86c
   13464:	ldr	r3, [r3]
   13468:	cmp	r2, r3
   1346c:	bne	138bc <close@plt+0x2d40>
   13470:	add	sp, sp, #2160	; 0x870
   13474:	add	sp, sp, #4
   13478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1347c:	ldr	r4, [sp, #12]
   13480:	ldr	r2, [sp, #32]
   13484:	ldr	r3, [sp, #28]
   13488:	mov	r1, r4
   1348c:	mov	r0, r9
   13490:	bl	11e94 <close@plt+0x1318>
   13494:	add	sl, sl, #1
   13498:	mov	r1, r4
   1349c:	mov	r0, #10
   134a0:	bl	10b34 <fputc@plt>
   134a4:	cmp	sl, #256	; 0x100
   134a8:	bne	13264 <close@plt+0x26e8>
   134ac:	b	1345c <close@plt+0x28e0>
   134b0:	str	r8, [sp, #16]
   134b4:	str	sl, [sp, #32]
   134b8:	mov	r4, #0
   134bc:	mov	sl, r6
   134c0:	ldr	r8, [sp, #12]
   134c4:	ldr	r7, [sp, #24]
   134c8:	ldr	r6, [sp, #28]
   134cc:	b	134f4 <close@plt+0x2978>
   134d0:	mov	r2, sl
   134d4:	add	r4, r4, #1
   134d8:	mov	r3, r6
   134dc:	mov	r1, r8
   134e0:	mov	r0, r9
   134e4:	bl	11e94 <close@plt+0x1318>
   134e8:	cmp	r4, r5
   134ec:	beq	13738 <close@plt+0x2bbc>
   134f0:	ldr	sl, [fp, r4, lsl #2]
   134f4:	cmp	sl, #512	; 0x200
   134f8:	beq	13518 <close@plt+0x299c>
   134fc:	cmp	r7, #16
   13500:	bne	134d0 <close@plt+0x2954>
   13504:	mov	r1, r4
   13508:	mov	r0, r9
   1350c:	bl	13918 <close@plt+0x2d9c>
   13510:	cmp	r0, #0
   13514:	bne	134d0 <close@plt+0x2954>
   13518:	ldr	r1, [sp, #12]
   1351c:	mov	r0, #10
   13520:	mov	r6, sl
   13524:	ldr	r8, [sp, #16]
   13528:	ldr	sl, [sp, #32]
   1352c:	bl	10b34 <fputc@plt>
   13530:	cmp	r5, r4
   13534:	bls	13450 <close@plt+0x28d4>
   13538:	mov	r2, r6
   1353c:	ldr	r7, [sp, #12]
   13540:	ldr	r6, [sp, #28]
   13544:	b	1354c <close@plt+0x29d0>
   13548:	ldr	r2, [fp, r4, lsl #2]
   1354c:	cmp	r2, #512	; 0x200
   13550:	beq	13568 <close@plt+0x29ec>
   13554:	stm	sp, {r4, r6}
   13558:	mov	r3, sl
   1355c:	mov	r1, r7
   13560:	mov	r0, r9
   13564:	bl	12138 <close@plt+0x15bc>
   13568:	add	r4, r4, #1
   1356c:	cmp	r4, r5
   13570:	bne	13548 <close@plt+0x29cc>
   13574:	add	sl, sl, #1
   13578:	cmp	sl, #256	; 0x100
   1357c:	bne	13264 <close@plt+0x26e8>
   13580:	b	1345c <close@plt+0x28e0>
   13584:	mov	r6, #0
   13588:	orr	r7, r6, #8
   1358c:	cmp	r7, r6
   13590:	beq	13640 <close@plt+0x2ac4>
   13594:	mov	r1, r7
   13598:	mov	r0, r9
   1359c:	bl	13918 <close@plt+0x2d9c>
   135a0:	cmp	r0, #0
   135a4:	beq	13640 <close@plt+0x2ac4>
   135a8:	ldr	r3, [fp, r6, lsl #2]
   135ac:	asrs	r1, r3, #8
   135b0:	moveq	r2, #1
   135b4:	movne	r2, #0
   135b8:	cmp	r1, #11
   135bc:	orreq	r2, r2, #1
   135c0:	cmp	r2, #0
   135c4:	beq	13640 <close@plt+0x2ac4>
   135c8:	uxtb	r3, r3
   135cc:	cmp	r3, #127	; 0x7f
   135d0:	bgt	13640 <close@plt+0x2ac4>
   135d4:	lsl	r7, r7, #2
   135d8:	add	r2, sp, #2160	; 0x870
   135dc:	add	r2, r2, r7
   135e0:	orr	r3, r3, #2048	; 0x800
   135e4:	ldr	r2, [r2, #-2052]	; 0xfffff7fc
   135e8:	cmp	r2, r3
   135ec:	beq	13628 <close@plt+0x2aac>
   135f0:	ldr	r0, [sp, #60]	; 0x3c
   135f4:	ldr	r3, [pc, #724]	; 138d0 <close@plt+0x2d54>
   135f8:	mov	r2, #5
   135fc:	ldr	r1, [sp, #68]	; 0x44
   13600:	ldr	r3, [r0, r3]
   13604:	mov	r0, #0
   13608:	ldr	r3, [r3]
   1360c:	str	r3, [sp, #56]	; 0x38
   13610:	bl	109fc <dcgettext@plt>
   13614:	ldr	r3, [sp, #56]	; 0x38
   13618:	mov	r1, #1
   1361c:	mov	r2, r0
   13620:	mov	r0, r3
   13624:	bl	10b10 <__fprintf_chk@plt>
   13628:	add	r3, sp, #2160	; 0x870
   1362c:	add	r7, r3, r7
   13630:	mov	r3, #512	; 0x200
   13634:	str	r3, [r7, #-2052]	; 0xfffff7fc
   13638:	mov	r3, #1
   1363c:	str	r3, [r7, #-1028]	; 0xfffffbfc
   13640:	add	r6, r6, #1
   13644:	cmp	r6, r5
   13648:	bne	13588 <close@plt+0x2a0c>
   1364c:	b	1334c <close@plt+0x27d0>
   13650:	mov	r4, r3
   13654:	ldr	r6, [sp, #12]
   13658:	ldr	r7, [sp, #28]
   1365c:	b	13664 <close@plt+0x2ae8>
   13660:	ldr	r2, [fp, r4, lsl #2]
   13664:	stm	sp, {r4, r7}
   13668:	mov	r3, sl
   1366c:	add	r4, r4, #1
   13670:	mov	r1, r6
   13674:	mov	r0, r9
   13678:	bl	12138 <close@plt+0x15bc>
   1367c:	cmp	r4, r5
   13680:	bne	13660 <close@plt+0x2ae4>
   13684:	ldr	r1, [sp, #12]
   13688:	mov	r0, #10
   1368c:	bl	10b34 <fputc@plt>
   13690:	add	sl, sl, #1
   13694:	cmp	sl, #256	; 0x100
   13698:	bne	13264 <close@plt+0x26e8>
   1369c:	b	1345c <close@plt+0x28e0>
   136a0:	add	lr, sp, #80	; 0x50
   136a4:	sxth	r3, r1
   136a8:	eor	r6, r3, #2848	; 0xb20
   136ac:	mov	r7, r1
   136b0:	sub	ip, lr, #4
   136b4:	orr	r3, r3, #2816	; 0xb00
   136b8:	strh	r6, [lr, #-2]
   136bc:	strh	r6, [lr, #2]
   136c0:	and	r6, r7, #159	; 0x9f
   136c4:	add	r1, lr, #12
   136c8:	add	r0, lr, #28
   136cc:	strh	r3, [lr, #-4]
   136d0:	strh	r3, [ip, #4]
   136d4:	strh	r6, [lr, #4]
   136d8:	strh	r6, [lr, #6]
   136dc:	strh	r6, [lr, #8]
   136e0:	strh	r6, [lr, #10]
   136e4:	b	136ec <close@plt+0x2b70>
   136e8:	ldrh	r3, [r1, #-16]
   136ec:	uxtb	r3, r3
   136f0:	orr	r3, r3, #2048	; 0x800
   136f4:	strh	r3, [r1], #2
   136f8:	cmp	r1, r0
   136fc:	bne	136e8 <close@plt+0x2b6c>
   13700:	sub	lr, lr, #4
   13704:	mov	r3, #0
   13708:	b	13710 <close@plt+0x2b94>
   1370c:	ldr	r2, [fp, r3, lsl #2]
   13710:	cmp	r3, #15
   13714:	bls	13750 <close@plt+0x2bd4>
   13718:	cmp	r2, #512	; 0x200
   1371c:	bne	13760 <close@plt+0x2be4>
   13720:	add	r3, r3, #1
   13724:	cmp	r3, r5
   13728:	bne	1370c <close@plt+0x2b90>
   1372c:	mov	r3, #1
   13730:	str	r3, [sp, #16]
   13734:	b	13328 <close@plt+0x27ac>
   13738:	ldr	r1, [sp, #12]
   1373c:	mov	r0, #10
   13740:	ldr	r8, [sp, #16]
   13744:	ldr	sl, [sp, #32]
   13748:	bl	10b34 <fputc@plt>
   1374c:	b	13690 <close@plt+0x2b14>
   13750:	lsl	r1, r3, #1
   13754:	ldrh	r1, [r1, lr]
   13758:	cmp	r1, r2
   1375c:	beq	13720 <close@plt+0x2ba4>
   13760:	mov	r3, #0
   13764:	str	r3, [sp, #16]
   13768:	b	13328 <close@plt+0x27ac>
   1376c:	ldr	r2, [pc, #352]	; 138d4 <close@plt+0x2d58>
   13770:	mov	r3, sl
   13774:	add	r2, pc, r2
   13778:	mov	r1, #1
   1377c:	ldr	r0, [sp, #12]
   13780:	bl	10b10 <__fprintf_chk@plt>
   13784:	b	13794 <close@plt+0x2c18>
   13788:	add	r6, r6, #1
   1378c:	cmp	r6, r5
   13790:	beq	13684 <close@plt+0x2b08>
   13794:	mov	r1, r6
   13798:	mov	r0, r9
   1379c:	bl	13918 <close@plt+0x2d9c>
   137a0:	cmp	r0, #0
   137a4:	beq	13788 <close@plt+0x2c0c>
   137a8:	ldr	r3, [sp, #28]
   137ac:	ldr	r2, [fp, r6, lsl #2]
   137b0:	ldr	r1, [sp, #12]
   137b4:	mov	r0, r9
   137b8:	bl	11e94 <close@plt+0x1318>
   137bc:	b	13788 <close@plt+0x2c0c>
   137c0:	mov	r7, #0
   137c4:	b	137dc <close@plt+0x2c60>
   137c8:	ldr	r0, [r9, #8]
   137cc:	ldr	r3, [r0, #12]
   137d0:	add	r7, r7, #1
   137d4:	cmp	r3, r7
   137d8:	bls	13898 <close@plt+0x2d1c>
   137dc:	orr	r5, r7, #8
   137e0:	cmp	r5, r7
   137e4:	beq	137cc <close@plt+0x2c50>
   137e8:	mov	r1, r7
   137ec:	mov	r0, r9
   137f0:	bl	13918 <close@plt+0x2d9c>
   137f4:	cmp	r0, #0
   137f8:	beq	137c8 <close@plt+0x2c4c>
   137fc:	mov	r1, r5
   13800:	mov	r0, r9
   13804:	bl	13918 <close@plt+0x2d9c>
   13808:	cmp	r0, #0
   1380c:	movne	r4, #1
   13810:	bne	13854 <close@plt+0x2cd8>
   13814:	b	137c8 <close@plt+0x2c4c>
   13818:	mov	r1, r5
   1381c:	mov	r0, r9
   13820:	bl	13918 <close@plt+0x2d9c>
   13824:	cmp	r0, #0
   13828:	beq	13218 <close@plt+0x269c>
   1382c:	mov	r2, r4
   13830:	mov	r1, r5
   13834:	mov	r0, r9
   13838:	bl	13ad0 <close@plt+0x2f54>
   1383c:	orr	r6, r6, #2048	; 0x800
   13840:	cmp	r6, r0
   13844:	bne	13218 <close@plt+0x269c>
   13848:	add	r4, r4, #1
   1384c:	cmp	r4, #256	; 0x100
   13850:	beq	137c8 <close@plt+0x2c4c>
   13854:	mov	r2, r4
   13858:	mov	r1, r7
   1385c:	mov	r0, r9
   13860:	bl	13ad0 <close@plt+0x2f54>
   13864:	cmn	r0, #1
   13868:	beq	137c8 <close@plt+0x2c4c>
   1386c:	asrs	r2, r0, #8
   13870:	moveq	r3, #1
   13874:	movne	r3, #0
   13878:	cmp	r2, #11
   1387c:	orreq	r3, r3, #1
   13880:	cmp	r3, #0
   13884:	beq	13848 <close@plt+0x2ccc>
   13888:	uxtb	r6, r0
   1388c:	cmp	r6, #127	; 0x7f
   13890:	bgt	13848 <close@plt+0x2ccc>
   13894:	b	13818 <close@plt+0x2c9c>
   13898:	ldr	r0, [pc, #56]	; 138d8 <close@plt+0x2d5c>
   1389c:	ldr	r3, [sp, #12]
   138a0:	mov	r2, #12
   138a4:	mov	r1, #1
   138a8:	add	r0, pc, r0
   138ac:	bl	10a44 <fwrite@plt>
   138b0:	mov	r3, #1
   138b4:	str	r3, [sp, #44]	; 0x2c
   138b8:	b	13220 <close@plt+0x26a4>
   138bc:	bl	10a14 <__stack_chk_fail@plt>
   138c0:	andeq	lr, r1, r0, lsr lr
   138c4:	andeq	r0, r0, r4, lsr #1
   138c8:	ldrdeq	r3, [r0], -r4
   138cc:	andeq	r3, r0, r4, asr #18
   138d0:	andeq	r0, r0, r8, lsr #1
   138d4:			; <UNDEFINED> instruction: 0x00002fb0
   138d8:	andeq	r3, r0, r8, ror #5
   138dc:	push	{r4, r5, r6, r7, r8, lr}
   138e0:	mov	r4, r0
   138e4:	mov	r5, r1
   138e8:	mov	r6, r2
   138ec:	mov	r7, r3
   138f0:	bl	12ff0 <close@plt+0x2474>
   138f4:	mov	r1, r5
   138f8:	mov	r0, r4
   138fc:	mov	r3, r7
   13900:	mov	r2, r6
   13904:	bl	131b4 <close@plt+0x2638>
   13908:	mov	r1, r5
   1390c:	mov	r0, r4
   13910:	pop	{r4, r5, r6, r7, r8, lr}
   13914:	b	12d40 <close@plt+0x21c4>
   13918:	push	{r4, lr}
   1391c:	ldr	r0, [r0, #8]
   13920:	bl	15dac <close@plt+0x5230>
   13924:	adds	r0, r0, #0
   13928:	movne	r0, #1
   1392c:	pop	{r4, pc}
   13930:	push	{r4, lr}
   13934:	ldr	r0, [r0, #8]
   13938:	bl	15dac <close@plt+0x5230>
   1393c:	cmp	r0, #0
   13940:	ldrne	r0, [r0, #12]
   13944:	pop	{r4, pc}
   13948:	push	{r4, lr}
   1394c:	mov	r4, r2
   13950:	ldr	r0, [r0, #8]
   13954:	bl	15dac <close@plt+0x5230>
   13958:	cmp	r0, #0
   1395c:	beq	13980 <close@plt+0x2e04>
   13960:	mov	r1, r4
   13964:	bl	15d8c <close@plt+0x5210>
   13968:	cmp	r0, #0
   1396c:	beq	13980 <close@plt+0x2e04>
   13970:	ldr	r0, [r0]
   13974:	adds	r0, r0, #0
   13978:	movne	r0, #1
   1397c:	pop	{r4, pc}
   13980:	mov	r0, #0
   13984:	pop	{r4, pc}
   13988:	ldr	r3, [pc, #288]	; 13ab0 <close@plt+0x2f34>
   1398c:	ldr	r2, [pc, #288]	; 13ab4 <close@plt+0x2f38>
   13990:	add	r3, pc, r3
   13994:	push	{r4, r5, r6, r7, lr}
   13998:	sub	sp, sp, #20
   1399c:	ldr	r5, [r3, r2]
   139a0:	mov	r6, r0
   139a4:	mov	r7, r1
   139a8:	ldr	r3, [r5]
   139ac:	str	r3, [sp, #12]
   139b0:	bl	13918 <close@plt+0x2d9c>
   139b4:	subs	r4, r0, #0
   139b8:	movne	r4, #0
   139bc:	beq	139dc <close@plt+0x2e60>
   139c0:	ldr	r2, [sp, #12]
   139c4:	ldr	r3, [r5]
   139c8:	mov	r0, r4
   139cc:	cmp	r2, r3
   139d0:	bne	13aac <close@plt+0x2f30>
   139d4:	add	sp, sp, #20
   139d8:	pop	{r4, r5, r6, r7, pc}
   139dc:	mov	r0, #16
   139e0:	bl	10a5c <malloc@plt>
   139e4:	cmp	r0, #0
   139e8:	str	r0, [sp, #8]
   139ec:	beq	13a58 <close@plt+0x2edc>
   139f0:	mov	r2, r4
   139f4:	mov	r1, #4
   139f8:	bl	15c60 <close@plt+0x50e4>
   139fc:	mov	r1, r7
   13a00:	add	r2, sp, #8
   13a04:	ldr	r0, [r6, #8]
   13a08:	bl	15dcc <close@plt+0x5250>
   13a0c:	cmp	r0, #0
   13a10:	bge	139c0 <close@plt+0x2e44>
   13a14:	ldr	r0, [sp, #8]
   13a18:	bl	109e4 <free@plt>
   13a1c:	ldr	r3, [r6, #28]
   13a20:	cmp	r3, #2
   13a24:	ble	13a64 <close@plt+0x2ee8>
   13a28:	ldr	r1, [pc, #136]	; 13ab8 <close@plt+0x2f3c>
   13a2c:	mov	r2, #5
   13a30:	mov	r0, r4
   13a34:	add	r1, pc, r1
   13a38:	bl	109fc <dcgettext@plt>
   13a3c:	ldr	r2, [pc, #120]	; 13abc <close@plt+0x2f40>
   13a40:	mov	r3, #66	; 0x42
   13a44:	add	r2, pc, r2
   13a48:	str	r2, [sp]
   13a4c:	ldr	r2, [pc, #108]	; 13ac0 <close@plt+0x2f44>
   13a50:	add	r2, pc, r2
   13a54:	b	13a94 <close@plt+0x2f18>
   13a58:	ldr	r3, [r6, #28]
   13a5c:	cmp	r3, #2
   13a60:	bgt	13a6c <close@plt+0x2ef0>
   13a64:	mvn	r4, #0
   13a68:	b	139c0 <close@plt+0x2e44>
   13a6c:	ldr	r1, [pc, #80]	; 13ac4 <close@plt+0x2f48>
   13a70:	mov	r2, #5
   13a74:	add	r1, pc, r1
   13a78:	bl	109fc <dcgettext@plt>
   13a7c:	ldr	r2, [pc, #68]	; 13ac8 <close@plt+0x2f4c>
   13a80:	mov	r3, #58	; 0x3a
   13a84:	add	r2, pc, r2
   13a88:	str	r2, [sp]
   13a8c:	ldr	r2, [pc, #56]	; 13acc <close@plt+0x2f50>
   13a90:	add	r2, pc, r2
   13a94:	str	r0, [sp, #4]
   13a98:	mov	r1, #3
   13a9c:	mov	r0, r6
   13aa0:	mvn	r4, #0
   13aa4:	bl	11578 <close@plt+0x9fc>
   13aa8:	b	139c0 <close@plt+0x2e44>
   13aac:	bl	10a14 <__stack_chk_fail@plt>
   13ab0:	andeq	lr, r1, r8, ror #12
   13ab4:	andeq	r0, r0, r4, lsr #1
   13ab8:	andeq	r2, r0, r4, ror #22
   13abc:	muleq	r0, r8, r1
   13ac0:	ldrdeq	r3, [r0], -r0
   13ac4:	andeq	r2, r0, r4, lsr #22
   13ac8:	andeq	r3, r0, r8, asr r1
   13acc:	muleq	r0, r0, r1
   13ad0:	push	{r4, r5, r6, lr}
   13ad4:	mov	r4, r0
   13ad8:	sub	sp, sp, #16
   13adc:	ldr	r0, [r0, #8]
   13ae0:	mov	r5, r2
   13ae4:	mov	r6, r1
   13ae8:	bl	15dac <close@plt+0x5230>
   13aec:	cmp	r0, #0
   13af0:	beq	13b28 <close@plt+0x2fac>
   13af4:	mov	r1, r5
   13af8:	bl	15d8c <close@plt+0x5210>
   13afc:	cmp	r0, #0
   13b00:	beq	13b1c <close@plt+0x2fa0>
   13b04:	ldr	r0, [r0]
   13b08:	cmp	r0, #0
   13b0c:	subne	r0, r0, #1
   13b10:	beq	13b1c <close@plt+0x2fa0>
   13b14:	add	sp, sp, #16
   13b18:	pop	{r4, r5, r6, pc}
   13b1c:	mov	r0, #512	; 0x200
   13b20:	add	sp, sp, #16
   13b24:	pop	{r4, r5, r6, pc}
   13b28:	ldr	r3, [r4, #28]
   13b2c:	cmp	r3, #2
   13b30:	mvnle	r0, #0
   13b34:	ble	13b14 <close@plt+0x2f98>
   13b38:	ldr	r1, [pc, #68]	; 13b84 <close@plt+0x3008>
   13b3c:	mov	r2, #5
   13b40:	add	r1, pc, r1
   13b44:	bl	109fc <dcgettext@plt>
   13b48:	ldr	r3, [pc, #56]	; 13b88 <close@plt+0x300c>
   13b4c:	ldr	r2, [pc, #56]	; 13b8c <close@plt+0x3010>
   13b50:	add	r3, pc, r3
   13b54:	add	r3, r3, #12
   13b58:	str	r3, [sp]
   13b5c:	str	r6, [sp, #8]
   13b60:	mov	r3, #80	; 0x50
   13b64:	add	r2, pc, r2
   13b68:	mov	r1, #3
   13b6c:	str	r0, [sp, #4]
   13b70:	mov	r0, r4
   13b74:	bl	11578 <close@plt+0x9fc>
   13b78:	mvn	r0, #0
   13b7c:	add	sp, sp, #16
   13b80:	pop	{r4, r5, r6, pc}
   13b84:	andeq	r3, r0, r8, ror #1
   13b88:	andeq	r3, r0, ip, lsl #1
   13b8c:	strheq	r3, [r0], -ip
   13b90:	push	{r4, r5, r6, r7, lr}
   13b94:	mov	r4, r0
   13b98:	sub	sp, sp, #20
   13b9c:	ldr	r0, [r0, #8]
   13ba0:	mov	r5, r2
   13ba4:	mov	r7, r1
   13ba8:	bl	15dac <close@plt+0x5230>
   13bac:	subs	r6, r0, #0
   13bb0:	beq	13bd0 <close@plt+0x3054>
   13bb4:	mov	r1, r5
   13bb8:	bl	15d20 <close@plt+0x51a4>
   13bbc:	cmp	r0, #0
   13bc0:	bne	13be8 <close@plt+0x306c>
   13bc4:	mov	r0, #0
   13bc8:	add	sp, sp, #20
   13bcc:	pop	{r4, r5, r6, r7, pc}
   13bd0:	ldr	r3, [r4, #28]
   13bd4:	cmp	r3, #2
   13bd8:	bgt	13c54 <close@plt+0x30d8>
   13bdc:	mvn	r0, #0
   13be0:	add	sp, sp, #20
   13be4:	pop	{r4, r5, r6, r7, pc}
   13be8:	mov	r0, r6
   13bec:	mov	r1, r5
   13bf0:	bl	15e24 <close@plt+0x52a8>
   13bf4:	cmp	r0, #0
   13bf8:	bge	13bc4 <close@plt+0x3048>
   13bfc:	ldr	r3, [r4, #28]
   13c00:	cmp	r3, #2
   13c04:	ble	13bdc <close@plt+0x3060>
   13c08:	ldr	r1, [pc, #144]	; 13ca0 <close@plt+0x3124>
   13c0c:	mov	r2, #5
   13c10:	add	r1, pc, r1
   13c14:	mov	r0, #0
   13c18:	bl	109fc <dcgettext@plt>
   13c1c:	ldr	r3, [pc, #128]	; 13ca4 <close@plt+0x3128>
   13c20:	ldr	r2, [pc, #128]	; 13ca8 <close@plt+0x312c>
   13c24:	add	r3, pc, r3
   13c28:	add	r3, r3, #24
   13c2c:	str	r3, [sp]
   13c30:	str	r7, [sp, #12]
   13c34:	str	r5, [sp, #8]
   13c38:	mov	r3, #107	; 0x6b
   13c3c:	add	r2, pc, r2
   13c40:	mov	r1, #3
   13c44:	str	r0, [sp, #4]
   13c48:	mov	r0, r4
   13c4c:	bl	11578 <close@plt+0x9fc>
   13c50:	b	13bdc <close@plt+0x3060>
   13c54:	ldr	r1, [pc, #80]	; 13cac <close@plt+0x3130>
   13c58:	mov	r2, #5
   13c5c:	add	r1, pc, r1
   13c60:	bl	109fc <dcgettext@plt>
   13c64:	ldr	r3, [pc, #68]	; 13cb0 <close@plt+0x3134>
   13c68:	ldr	r2, [pc, #68]	; 13cb4 <close@plt+0x3138>
   13c6c:	add	r3, pc, r3
   13c70:	add	r3, r3, #24
   13c74:	str	r3, [sp]
   13c78:	str	r7, [sp, #8]
   13c7c:	mov	r3, #98	; 0x62
   13c80:	add	r2, pc, r2
   13c84:	mov	r1, #3
   13c88:	str	r0, [sp, #4]
   13c8c:	mov	r0, r4
   13c90:	bl	11578 <close@plt+0x9fc>
   13c94:	mvn	r0, #0
   13c98:	add	sp, sp, #20
   13c9c:	pop	{r4, r5, r6, r7, pc}
   13ca0:	andeq	r3, r0, r0, lsr r0
   13ca4:			; <UNDEFINED> instruction: 0x00002fb8
   13ca8:	andeq	r2, r0, r4, ror #31
   13cac:	andeq	r2, r0, ip, asr #31
   13cb0:	andeq	r2, r0, r0, ror pc
   13cb4:	andeq	r2, r0, r0, lsr #31
   13cb8:	ldr	ip, [pc, #636]	; 13f3c <close@plt+0x33c0>
   13cbc:	push	{r4, r5, r6, r7, r8, r9, lr}
   13cc0:	add	ip, pc, ip
   13cc4:	ldr	lr, [pc, #628]	; 13f40 <close@plt+0x33c4>
   13cc8:	sub	sp, sp, #28
   13ccc:	mov	r4, r3
   13cd0:	ldr	r6, [ip, lr]
   13cd4:	cmn	r3, #1
   13cd8:	mov	r3, ip
   13cdc:	ldr	r3, [r6]
   13ce0:	add	ip, r4, #1
   13ce4:	mov	r5, r0
   13ce8:	str	ip, [sp, #16]
   13cec:	str	r3, [sp, #20]
   13cf0:	bne	13d1c <close@plt+0x31a0>
   13cf4:	ldr	r3, [r0, #28]
   13cf8:	cmp	r3, #2
   13cfc:	bgt	13da0 <close@plt+0x3224>
   13d00:	mvn	r0, #0
   13d04:	ldr	r2, [sp, #20]
   13d08:	ldr	r3, [r6]
   13d0c:	cmp	r2, r3
   13d10:	bne	13f38 <close@plt+0x33bc>
   13d14:	add	sp, sp, #28
   13d18:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13d1c:	ldr	r0, [r0, #8]
   13d20:	mov	r7, r2
   13d24:	mov	r8, r1
   13d28:	bl	15dac <close@plt+0x5230>
   13d2c:	cmp	r0, #0
   13d30:	beq	13dec <close@plt+0x3270>
   13d34:	ldr	r2, [r5, #4]
   13d38:	sub	r3, r4, #512	; 0x200
   13d3c:	clz	r3, r3
   13d40:	lsr	r3, r3, #5
   13d44:	ands	r3, r3, r2, lsr #2
   13d48:	bne	13ea4 <close@plt+0x3328>
   13d4c:	mov	r1, r8
   13d50:	ldr	r0, [r5, #8]
   13d54:	bl	15dac <close@plt+0x5230>
   13d58:	add	r2, sp, #16
   13d5c:	mov	r1, r7
   13d60:	bl	15dcc <close@plt+0x5250>
   13d64:	cmp	r0, #0
   13d68:	blt	13e48 <close@plt+0x32cc>
   13d6c:	ldr	r3, [r5, #4]
   13d70:	tst	r3, #4
   13d74:	beq	13d98 <close@plt+0x321c>
   13d78:	orr	r9, r8, #8
   13d7c:	cmp	r8, r9
   13d80:	beq	13d98 <close@plt+0x321c>
   13d84:	mov	r1, r9
   13d88:	mov	r0, r5
   13d8c:	bl	13918 <close@plt+0x2d9c>
   13d90:	cmp	r0, #0
   13d94:	bne	13ec0 <close@plt+0x3344>
   13d98:	mov	r0, #0
   13d9c:	b	13d04 <close@plt+0x3188>
   13da0:	ldr	r1, [pc, #412]	; 13f44 <close@plt+0x33c8>
   13da4:	mov	r2, #5
   13da8:	add	r1, pc, r1
   13dac:	mov	r0, #0
   13db0:	bl	109fc <dcgettext@plt>
   13db4:	ldr	r3, [pc, #396]	; 13f48 <close@plt+0x33cc>
   13db8:	ldr	r2, [pc, #396]	; 13f4c <close@plt+0x33d0>
   13dbc:	add	r3, pc, r3
   13dc0:	add	r3, r3, #36	; 0x24
   13dc4:	str	r3, [sp]
   13dc8:	str	r4, [sp, #8]
   13dcc:	mov	r3, #122	; 0x7a
   13dd0:	add	r2, pc, r2
   13dd4:	mov	r1, #3
   13dd8:	str	r0, [sp, #4]
   13ddc:	mov	r0, r5
   13de0:	bl	11578 <close@plt+0x9fc>
   13de4:	mov	r0, r4
   13de8:	b	13d04 <close@plt+0x3188>
   13dec:	ldr	r3, [r5, #4]
   13df0:	tst	r3, #2
   13df4:	beq	13f20 <close@plt+0x33a4>
   13df8:	ldr	r3, [r5, #28]
   13dfc:	cmp	r3, #2
   13e00:	ble	13d00 <close@plt+0x3184>
   13e04:	ldr	r1, [pc, #324]	; 13f50 <close@plt+0x33d4>
   13e08:	mov	r2, #5
   13e0c:	add	r1, pc, r1
   13e10:	bl	109fc <dcgettext@plt>
   13e14:	ldr	r3, [pc, #312]	; 13f54 <close@plt+0x33d8>
   13e18:	ldr	r2, [pc, #312]	; 13f58 <close@plt+0x33dc>
   13e1c:	add	r3, pc, r3
   13e20:	add	r3, r3, #36	; 0x24
   13e24:	str	r3, [sp]
   13e28:	str	r8, [sp, #8]
   13e2c:	mov	r3, #130	; 0x82
   13e30:	add	r2, pc, r2
   13e34:	mov	r1, #3
   13e38:	str	r0, [sp, #4]
   13e3c:	mov	r0, r5
   13e40:	bl	11578 <close@plt+0x9fc>
   13e44:	b	13d00 <close@plt+0x3184>
   13e48:	ldr	r3, [r5, #28]
   13e4c:	cmp	r3, #2
   13e50:	ble	13d00 <close@plt+0x3184>
   13e54:	ldr	r1, [pc, #256]	; 13f5c <close@plt+0x33e0>
   13e58:	mov	r2, #5
   13e5c:	add	r1, pc, r1
   13e60:	mov	r0, #0
   13e64:	bl	109fc <dcgettext@plt>
   13e68:	ldr	r3, [pc, #240]	; 13f60 <close@plt+0x33e4>
   13e6c:	ldr	r2, [pc, #240]	; 13f64 <close@plt+0x33e8>
   13e70:	add	r3, pc, r3
   13e74:	add	r3, r3, #36	; 0x24
   13e78:	str	r3, [sp]
   13e7c:	str	r8, [sp, #12]
   13e80:	str	r7, [sp, #8]
   13e84:	mov	r3, #146	; 0x92
   13e88:	add	r2, pc, r2
   13e8c:	mov	r1, #3
   13e90:	str	r0, [sp, #4]
   13e94:	mov	r0, r5
   13e98:	bl	11578 <close@plt+0x9fc>
   13e9c:	mvn	r0, #0
   13ea0:	b	13d04 <close@plt+0x3188>
   13ea4:	mov	r2, r7
   13ea8:	mov	r1, r8
   13eac:	mov	r0, r5
   13eb0:	bl	13948 <close@plt+0x2dcc>
   13eb4:	cmp	r0, #0
   13eb8:	beq	13d4c <close@plt+0x31d0>
   13ebc:	b	13d98 <close@plt+0x321c>
   13ec0:	mov	r2, r7
   13ec4:	mov	r1, r9
   13ec8:	mov	r0, r5
   13ecc:	bl	13948 <close@plt+0x2dcc>
   13ed0:	cmp	r0, #0
   13ed4:	bne	13d98 <close@plt+0x321c>
   13ed8:	asrs	r1, r4, #8
   13edc:	moveq	r2, #1
   13ee0:	movne	r2, #0
   13ee4:	cmp	r1, #11
   13ee8:	orreq	r2, r2, #1
   13eec:	uxtb	r3, r4
   13ef0:	cmp	r3, #127	; 0x7f
   13ef4:	movgt	r2, #0
   13ef8:	andle	r2, r2, #1
   13efc:	cmp	r2, #0
   13f00:	beq	13d98 <close@plt+0x321c>
   13f04:	orr	r3, r3, #2048	; 0x800
   13f08:	mov	r2, r7
   13f0c:	mov	r1, r9
   13f10:	mov	r0, r5
   13f14:	bl	13cb8 <close@plt+0x313c>
   13f18:	asr	r0, r0, #31
   13f1c:	b	13d04 <close@plt+0x3188>
   13f20:	mov	r1, r8
   13f24:	mov	r0, r5
   13f28:	bl	13988 <close@plt+0x2e0c>
   13f2c:	cmp	r0, #0
   13f30:	bge	13d34 <close@plt+0x31b8>
   13f34:	b	13d00 <close@plt+0x3184>
   13f38:	bl	10a14 <__stack_chk_fail@plt>
   13f3c:	andeq	lr, r1, r8, lsr r3
   13f40:	andeq	r0, r0, r4, lsr #1
   13f44:			; <UNDEFINED> instruction: 0x00002ebc
   13f48:	andeq	r2, r0, r0, lsr #28
   13f4c:	andeq	r2, r0, r0, asr lr
   13f50:	andeq	r2, r0, r0, lsl #29
   13f54:	andeq	r2, r0, r0, asr #27
   13f58:	strdeq	r2, [r0], -r0
   13f5c:	andeq	r2, r0, r0, ror #28
   13f60:	andeq	r2, r0, ip, ror #26
   13f64:	muleq	r0, r8, sp
   13f68:	ldr	r3, [pc, #704]	; 14230 <close@plt+0x36b4>
   13f6c:	ldr	r2, [pc, #704]	; 14234 <close@plt+0x36b8>
   13f70:	add	r3, pc, r3
   13f74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f78:	sub	sp, sp, #48	; 0x30
   13f7c:	ldr	sl, [r3, r2]
   13f80:	ldr	r7, [r0, #4]
   13f84:	mov	r5, r0
   13f88:	ldr	r3, [sl]
   13f8c:	ands	r7, r7, #2
   13f90:	str	r3, [sp, #44]	; 0x2c
   13f94:	beq	13fac <close@plt+0x3430>
   13f98:	ldr	r3, [r0, #8]
   13f9c:	ldr	r7, [r3, #12]
   13fa0:	cmp	r7, #0
   13fa4:	movne	r7, #0
   13fa8:	bne	1414c <close@plt+0x35d0>
   13fac:	ldr	r0, [r5, #36]	; 0x24
   13fb0:	ldr	r3, [r0, #12]
   13fb4:	cmp	r3, #0
   13fb8:	beq	1411c <close@plt+0x35a0>
   13fbc:	mov	r6, #0
   13fc0:	add	r9, sp, #44	; 0x2c
   13fc4:	mov	r1, r6
   13fc8:	bl	15d8c <close@plt+0x5210>
   13fcc:	cmp	r0, #0
   13fd0:	beq	14108 <close@plt+0x358c>
   13fd4:	ldrb	r3, [r0]
   13fd8:	cmp	r3, #0
   13fdc:	beq	14108 <close@plt+0x358c>
   13fe0:	mov	r1, r7
   13fe4:	mov	r0, r5
   13fe8:	bl	13918 <close@plt+0x2d9c>
   13fec:	cmp	r0, #0
   13ff0:	beq	141dc <close@plt+0x3660>
   13ff4:	mov	r2, r6
   13ff8:	mov	r1, r7
   13ffc:	mov	r0, r5
   14000:	bl	13ad0 <close@plt+0x2f54>
   14004:	uxth	r3, r0
   14008:	lsrs	r1, r3, #8
   1400c:	moveq	r2, #1
   14010:	movne	r2, #0
   14014:	cmp	r1, #11
   14018:	orreq	r2, r2, #1
   1401c:	cmp	r2, #0
   14020:	beq	14164 <close@plt+0x35e8>
   14024:	and	r2, r3, #223	; 0xdf
   14028:	sub	r2, r2, #65	; 0x41
   1402c:	cmp	r2, #25
   14030:	bhi	14164 <close@plt+0x35e8>
   14034:	uxtb	r1, r3
   14038:	and	r3, r3, #159	; 0x9f
   1403c:	strh	r3, [sp, #20]
   14040:	strh	r3, [sp, #22]
   14044:	strh	r3, [sp, #24]
   14048:	strh	r3, [sp, #26]
   1404c:	orr	r3, r1, #2816	; 0xb00
   14050:	eor	r1, r1, #2848	; 0xb20
   14054:	add	r2, sp, #28
   14058:	strh	r3, [sp, #12]
   1405c:	strh	r3, [sp, #16]
   14060:	strh	r1, [sp, #14]
   14064:	strh	r1, [sp, #18]
   14068:	b	14070 <close@plt+0x34f4>
   1406c:	ldrh	r3, [r2, #-16]
   14070:	uxtb	r3, r3
   14074:	orr	r3, r3, #2048	; 0x800
   14078:	strh	r3, [r2], #2
   1407c:	cmp	r2, r9
   14080:	bne	1406c <close@plt+0x34f0>
   14084:	ldr	r3, [r5, #8]
   14088:	ldr	r3, [r3, #12]
   1408c:	cmp	r3, #0
   14090:	beq	14108 <close@plt+0x358c>
   14094:	mov	r4, #0
   14098:	mov	r1, r4
   1409c:	mov	r0, r5
   140a0:	bl	13918 <close@plt+0x2d9c>
   140a4:	cmp	r0, #0
   140a8:	beq	140f4 <close@plt+0x3578>
   140ac:	cmp	r4, #0
   140b0:	beq	140cc <close@plt+0x3550>
   140b4:	mov	r2, r6
   140b8:	mov	r1, r4
   140bc:	mov	r0, r5
   140c0:	bl	13948 <close@plt+0x2dcc>
   140c4:	cmp	r0, #0
   140c8:	bne	140f4 <close@plt+0x3578>
   140cc:	and	r3, r4, #15
   140d0:	add	r1, sp, #48	; 0x30
   140d4:	add	r3, r1, r3, lsl #1
   140d8:	mov	r2, r6
   140dc:	mov	r1, r4
   140e0:	ldrh	r3, [r3, #-36]	; 0xffffffdc
   140e4:	mov	r0, r5
   140e8:	bl	13cb8 <close@plt+0x313c>
   140ec:	cmp	r0, #0
   140f0:	blt	14224 <close@plt+0x36a8>
   140f4:	ldr	r3, [r5, #8]
   140f8:	add	r4, r4, #1
   140fc:	ldr	r3, [r3, #12]
   14100:	cmp	r4, r3
   14104:	bcc	14098 <close@plt+0x351c>
   14108:	ldr	r0, [r5, #36]	; 0x24
   1410c:	add	r6, r6, #1
   14110:	ldr	r3, [r0, #12]
   14114:	cmp	r3, r6
   14118:	bhi	13fc4 <close@plt+0x3448>
   1411c:	mov	r0, #0
   14120:	ldr	r2, [sp, #44]	; 0x2c
   14124:	ldr	r3, [sl]
   14128:	cmp	r2, r3
   1412c:	bne	1422c <close@plt+0x36b0>
   14130:	add	sp, sp, #48	; 0x30
   14134:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14138:	ldr	r3, [r5, #8]
   1413c:	add	r7, r7, #1
   14140:	ldr	r3, [r3, #12]
   14144:	cmp	r3, r7
   14148:	bls	13fac <close@plt+0x3430>
   1414c:	mov	r1, r7
   14150:	mov	r0, r5
   14154:	bl	13918 <close@plt+0x2d9c>
   14158:	cmp	r0, #0
   1415c:	beq	14138 <close@plt+0x35bc>
   14160:	b	13fac <close@plt+0x3430>
   14164:	ldr	r3, [r5, #8]
   14168:	ldr	r3, [r3, #12]
   1416c:	cmp	r3, #1
   14170:	uxthhi	r8, r0
   14174:	movhi	r4, #1
   14178:	bls	14108 <close@plt+0x358c>
   1417c:	mov	r1, r4
   14180:	mov	r0, r5
   14184:	bl	13918 <close@plt+0x2d9c>
   14188:	cmp	r0, #0
   1418c:	beq	141c4 <close@plt+0x3648>
   14190:	mov	r2, r6
   14194:	mov	r1, r4
   14198:	mov	r0, r5
   1419c:	bl	13948 <close@plt+0x2dcc>
   141a0:	cmp	r0, #0
   141a4:	bne	141c4 <close@plt+0x3648>
   141a8:	mov	r3, r8
   141ac:	mov	r2, r6
   141b0:	mov	r1, r4
   141b4:	mov	r0, r5
   141b8:	bl	13cb8 <close@plt+0x313c>
   141bc:	cmp	r0, #0
   141c0:	blt	14224 <close@plt+0x36a8>
   141c4:	ldr	r3, [r5, #8]
   141c8:	add	r4, r4, #1
   141cc:	ldr	r3, [r3, #12]
   141d0:	cmp	r4, r3
   141d4:	bcc	1417c <close@plt+0x3600>
   141d8:	b	14108 <close@plt+0x358c>
   141dc:	ldr	r3, [r5, #28]
   141e0:	cmp	r3, #2
   141e4:	ble	14224 <close@plt+0x36a8>
   141e8:	ldr	r1, [pc, #72]	; 14238 <close@plt+0x36bc>
   141ec:	mov	r2, #5
   141f0:	add	r1, pc, r1
   141f4:	bl	109fc <dcgettext@plt>
   141f8:	ldr	r2, [pc, #60]	; 1423c <close@plt+0x36c0>
   141fc:	mov	r3, #236	; 0xec
   14200:	add	r2, pc, r2
   14204:	add	r2, r2, #48	; 0x30
   14208:	str	r2, [sp]
   1420c:	ldr	r2, [pc, #44]	; 14240 <close@plt+0x36c4>
   14210:	mov	r1, #3
   14214:	add	r2, pc, r2
   14218:	str	r0, [sp, #4]
   1421c:	mov	r0, r5
   14220:	bl	11578 <close@plt+0x9fc>
   14224:	mvn	r0, #0
   14228:	b	14120 <close@plt+0x35a4>
   1422c:	bl	10a14 <__stack_chk_fail@plt>
   14230:	andeq	lr, r1, r8, lsl #1
   14234:	andeq	r0, r0, r4, lsr #1
   14238:	strdeq	r2, [r0], -r0
   1423c:	ldrdeq	r2, [r0], -ip
   14240:	andeq	r2, r0, ip, lsl #20
   14244:	push	{r4, lr}
   14248:	ldr	r0, [r0, #16]
   1424c:	bl	15dac <close@plt+0x5230>
   14250:	adds	r0, r0, #0
   14254:	movne	r0, #1
   14258:	pop	{r4, pc}
   1425c:	push	{r4, r5, r6, lr}
   14260:	mov	r5, r0
   14264:	sub	sp, sp, #16
   14268:	ldr	r0, [r0, #16]
   1426c:	mov	r4, r2
   14270:	mov	r6, r1
   14274:	bl	15dac <close@plt+0x5230>
   14278:	subs	r3, r0, #0
   1427c:	beq	14294 <close@plt+0x3718>
   14280:	ldm	r3, {r1, r2, r3}
   14284:	mov	r0, #0
   14288:	stm	r4, {r1, r2, r3}
   1428c:	add	sp, sp, #16
   14290:	pop	{r4, r5, r6, pc}
   14294:	ldr	r3, [r5, #28]
   14298:	cmp	r3, #2
   1429c:	mvnle	r0, #0
   142a0:	ble	1428c <close@plt+0x3710>
   142a4:	ldr	r1, [pc, #60]	; 142e8 <close@plt+0x376c>
   142a8:	mov	r2, #5
   142ac:	add	r1, pc, r1
   142b0:	bl	109fc <dcgettext@plt>
   142b4:	ldr	r3, [pc, #48]	; 142ec <close@plt+0x3770>
   142b8:	ldr	r2, [pc, #48]	; 142f0 <close@plt+0x3774>
   142bc:	add	r3, pc, r3
   142c0:	str	r3, [sp]
   142c4:	str	r6, [sp, #8]
   142c8:	mov	r3, #33	; 0x21
   142cc:	add	r2, pc, r2
   142d0:	mov	r1, #3
   142d4:	str	r0, [sp, #4]
   142d8:	mov	r0, r5
   142dc:	bl	11578 <close@plt+0x9fc>
   142e0:	mvn	r0, #0
   142e4:	b	1428c <close@plt+0x3710>
   142e8:	muleq	r0, ip, sl
   142ec:	andeq	r2, r0, ip, asr #20
   142f0:	andeq	r2, r0, r8, lsr #21
   142f4:	ldr	r3, [pc, #204]	; 143c8 <close@plt+0x384c>
   142f8:	ldr	r2, [pc, #204]	; 143cc <close@plt+0x3850>
   142fc:	add	r3, pc, r3
   14300:	push	{r4, r5, r6, lr}
   14304:	sub	sp, sp, #16
   14308:	ldr	r4, [r3, r2]
   1430c:	mov	r6, r0
   14310:	mov	r0, #12
   14314:	ldr	r3, [r4]
   14318:	mov	r5, r1
   1431c:	str	r3, [sp, #12]
   14320:	bl	10a5c <malloc@plt>
   14324:	cmp	r0, #0
   14328:	str	r0, [sp, #8]
   1432c:	beq	14370 <close@plt+0x37f4>
   14330:	ldm	r5, {r1, ip}
   14334:	mov	r3, r0
   14338:	ldr	r2, [r5, #8]
   1433c:	str	r1, [r3]
   14340:	ldr	r0, [r6, #16]
   14344:	add	r1, sp, #8
   14348:	str	ip, [r3, #4]
   1434c:	str	r2, [r3, #8]
   14350:	bl	15e84 <close@plt+0x5308>
   14354:	mov	r0, #0
   14358:	ldr	r2, [sp, #12]
   1435c:	ldr	r3, [r4]
   14360:	cmp	r2, r3
   14364:	bne	143c4 <close@plt+0x3848>
   14368:	add	sp, sp, #16
   1436c:	pop	{r4, r5, r6, pc}
   14370:	ldr	r3, [r6, #28]
   14374:	cmp	r3, #2
   14378:	mvnle	r0, #0
   1437c:	ble	14358 <close@plt+0x37dc>
   14380:	ldr	r1, [pc, #72]	; 143d0 <close@plt+0x3854>
   14384:	mov	r2, #5
   14388:	add	r1, pc, r1
   1438c:	bl	109fc <dcgettext@plt>
   14390:	ldr	r2, [pc, #60]	; 143d4 <close@plt+0x3858>
   14394:	mov	r3, #50	; 0x32
   14398:	add	r2, pc, r2
   1439c:	add	r2, r2, #16
   143a0:	str	r2, [sp]
   143a4:	ldr	r2, [pc, #44]	; 143d8 <close@plt+0x385c>
   143a8:	mov	r1, #3
   143ac:	add	r2, pc, r2
   143b0:	str	r0, [sp, #4]
   143b4:	mov	r0, r6
   143b8:	bl	11578 <close@plt+0x9fc>
   143bc:	mvn	r0, #0
   143c0:	b	14358 <close@plt+0x37dc>
   143c4:	bl	10a14 <__stack_chk_fail@plt>
   143c8:	strdeq	sp, [r1], -ip
   143cc:	andeq	r0, r0, r4, lsr #1
   143d0:	andeq	r2, r0, r0, lsl r2
   143d4:	andeq	r2, r0, r0, ror r9
   143d8:	andeq	r2, r0, r8, asr #19
   143dc:	ldr	r3, [pc, #212]	; 144b8 <close@plt+0x393c>
   143e0:	ldr	ip, [pc, #212]	; 144bc <close@plt+0x3940>
   143e4:	add	r3, pc, r3
   143e8:	push	{r4, r5, r6, r7, lr}
   143ec:	mov	r5, r2
   143f0:	ldr	r4, [r3, ip]
   143f4:	sub	sp, sp, #20
   143f8:	mov	r6, r0
   143fc:	ldr	r2, [r4]
   14400:	mov	r0, #12
   14404:	mov	r7, r1
   14408:	str	r2, [sp, #12]
   1440c:	bl	10a5c <malloc@plt>
   14410:	cmp	r0, #0
   14414:	str	r0, [sp, #8]
   14418:	beq	14460 <close@plt+0x38e4>
   1441c:	ldm	r5, {r2, lr}
   14420:	mov	r3, r0
   14424:	ldr	ip, [r5, #8]
   14428:	str	r2, [r3]
   1442c:	mov	r1, r7
   14430:	ldr	r0, [r6, #16]
   14434:	add	r2, sp, #8
   14438:	str	lr, [r3, #4]
   1443c:	str	ip, [r3, #8]
   14440:	bl	15dcc <close@plt+0x5250>
   14444:	mov	r0, #0
   14448:	ldr	r2, [sp, #12]
   1444c:	ldr	r3, [r4]
   14450:	cmp	r2, r3
   14454:	bne	144b4 <close@plt+0x3938>
   14458:	add	sp, sp, #20
   1445c:	pop	{r4, r5, r6, r7, pc}
   14460:	ldr	r3, [r6, #28]
   14464:	cmp	r3, #2
   14468:	mvnle	r0, #0
   1446c:	ble	14448 <close@plt+0x38cc>
   14470:	ldr	r1, [pc, #72]	; 144c0 <close@plt+0x3944>
   14474:	mov	r2, #5
   14478:	add	r1, pc, r1
   1447c:	bl	109fc <dcgettext@plt>
   14480:	ldr	r2, [pc, #60]	; 144c4 <close@plt+0x3948>
   14484:	mov	r3, #69	; 0x45
   14488:	add	r2, pc, r2
   1448c:	add	r2, r2, #32
   14490:	str	r2, [sp]
   14494:	ldr	r2, [pc, #44]	; 144c8 <close@plt+0x394c>
   14498:	mov	r1, #3
   1449c:	add	r2, pc, r2
   144a0:	str	r0, [sp, #4]
   144a4:	mov	r0, r6
   144a8:	bl	11578 <close@plt+0x9fc>
   144ac:	mvn	r0, #0
   144b0:	b	14448 <close@plt+0x38cc>
   144b4:	bl	10a14 <__stack_chk_fail@plt>
   144b8:	andeq	sp, r1, r4, lsl ip
   144bc:	andeq	r0, r0, r4, lsr #1
   144c0:	andeq	r2, r0, r0, lsr #2
   144c4:	andeq	r2, r0, r0, lsl #17
   144c8:	ldrdeq	r2, [r0], -r8
   144cc:	push	{r4, lr}
   144d0:	mov	r4, r0
   144d4:	sub	sp, sp, #8
   144d8:	ldr	r0, [r0, #16]
   144dc:	bl	15e24 <close@plt+0x52a8>
   144e0:	cmp	r0, #0
   144e4:	beq	144f8 <close@plt+0x397c>
   144e8:	ldr	r3, [r4, #28]
   144ec:	cmp	r3, #2
   144f0:	mvnle	r0, #0
   144f4:	bgt	14500 <close@plt+0x3984>
   144f8:	add	sp, sp, #8
   144fc:	pop	{r4, pc}
   14500:	ldr	r1, [pc, #68]	; 1454c <close@plt+0x39d0>
   14504:	mov	r2, #5
   14508:	add	r1, pc, r1
   1450c:	mov	r0, #0
   14510:	bl	109fc <dcgettext@plt>
   14514:	ldr	r2, [pc, #52]	; 14550 <close@plt+0x39d4>
   14518:	mov	r3, #87	; 0x57
   1451c:	add	r2, pc, r2
   14520:	add	r2, r2, #48	; 0x30
   14524:	str	r2, [sp]
   14528:	ldr	r2, [pc, #36]	; 14554 <close@plt+0x39d8>
   1452c:	mov	r1, #3
   14530:	add	r2, pc, r2
   14534:	str	r0, [sp, #4]
   14538:	mov	r0, r4
   1453c:	bl	11578 <close@plt+0x9fc>
   14540:	mvn	r0, #0
   14544:	add	sp, sp, #8
   14548:	pop	{r4, pc}
   1454c:	andeq	r2, r0, r4, ror r8
   14550:	andeq	r2, r0, ip, ror #15
   14554:	andeq	r2, r0, r4, asr #16
   14558:	ldr	r3, [pc, #140]	; 145ec <close@plt+0x3a70>
   1455c:	ldr	r2, [pc, #140]	; 145f0 <close@plt+0x3a74>
   14560:	add	r3, pc, r3
   14564:	push	{r4, r5, r6, r7, lr}
   14568:	sub	sp, sp, #20
   1456c:	ldr	r4, [r0]
   14570:	ldr	r7, [r3, r2]
   14574:	mov	r6, r1
   14578:	lsr	r4, r4, #4
   1457c:	ldr	ip, [r7]
   14580:	and	r4, r4, #1
   14584:	mov	r2, r4
   14588:	ldr	r1, [r1]
   1458c:	mov	r5, r0
   14590:	str	ip, [sp, #12]
   14594:	bl	15ac8 <close@plt+0x4f4c>
   14598:	mov	r2, r4
   1459c:	ldr	r1, [r6, #4]
   145a0:	str	r0, [sp]
   145a4:	mov	r0, r5
   145a8:	bl	15ac8 <close@plt+0x4f4c>
   145ac:	mov	r2, r4
   145b0:	ldr	r1, [r6, #8]
   145b4:	str	r0, [sp, #4]
   145b8:	mov	r0, r5
   145bc:	bl	15ac8 <close@plt+0x4f4c>
   145c0:	mov	r1, sp
   145c4:	str	r0, [sp, #8]
   145c8:	mov	r0, r5
   145cc:	bl	142f4 <close@plt+0x3778>
   145d0:	ldr	r2, [sp, #12]
   145d4:	ldr	r3, [r7]
   145d8:	cmp	r2, r3
   145dc:	bne	145e8 <close@plt+0x3a6c>
   145e0:	add	sp, sp, #20
   145e4:	pop	{r4, r5, r6, r7, pc}
   145e8:	bl	10a14 <__stack_chk_fail@plt>
   145ec:	muleq	r1, r8, sl
   145f0:	andeq	r0, r0, r4, lsr #1
   145f4:	push	{r4, lr}
   145f8:	ldr	r0, [r0, #12]
   145fc:	bl	15dac <close@plt+0x5230>
   14600:	adds	r0, r0, #0
   14604:	movne	r0, #1
   14608:	pop	{r4, pc}
   1460c:	push	{r4, r5, lr}
   14610:	mov	r5, r0
   14614:	sub	sp, sp, #20
   14618:	mov	r4, r1
   1461c:	ldr	r0, [r0, #12]
   14620:	ldrb	r1, [r1]
   14624:	bl	15dac <close@plt+0x5230>
   14628:	subs	r1, r0, #0
   1462c:	beq	1464c <close@plt+0x3ad0>
   14630:	mov	r2, #512	; 0x200
   14634:	add	r0, r4, #1
   14638:	bl	10af8 <strncpy@plt>
   1463c:	mov	r0, #0
   14640:	strb	r0, [r4, #512]	; 0x200
   14644:	add	sp, sp, #20
   14648:	pop	{r4, r5, pc}
   1464c:	ldr	r3, [r5, #28]
   14650:	cmp	r3, #2
   14654:	mvnle	r0, #0
   14658:	ble	14644 <close@plt+0x3ac8>
   1465c:	ldr	r1, [pc, #68]	; 146a8 <close@plt+0x3b2c>
   14660:	mov	r2, #5
   14664:	add	r1, pc, r1
   14668:	bl	109fc <dcgettext@plt>
   1466c:	ldr	r2, [pc, #56]	; 146ac <close@plt+0x3b30>
   14670:	ldrb	r1, [r4]
   14674:	add	r2, pc, r2
   14678:	str	r2, [sp]
   1467c:	ldr	r2, [pc, #44]	; 146b0 <close@plt+0x3b34>
   14680:	str	r1, [sp, #8]
   14684:	mov	r3, #32
   14688:	add	r2, pc, r2
   1468c:	mov	r1, #3
   14690:	str	r0, [sp, #4]
   14694:	mov	r0, r5
   14698:	bl	11578 <close@plt+0x9fc>
   1469c:	mvn	r0, #0
   146a0:	add	sp, sp, #20
   146a4:	pop	{r4, r5, pc}
   146a8:	andeq	r2, r0, r0, ror r7
   146ac:	andeq	r2, r0, ip, lsr r7
   146b0:	andeq	r2, r0, r4, ror #14
   146b4:	ldr	r3, [pc, #224]	; 1479c <close@plt+0x3c20>
   146b8:	ldr	r2, [pc, #224]	; 147a0 <close@plt+0x3c24>
   146bc:	add	r3, pc, r3
   146c0:	push	{r4, r5, r6, lr}
   146c4:	sub	sp, sp, #16
   146c8:	ldr	r6, [r3, r2]
   146cc:	mov	r5, r0
   146d0:	mov	r4, r1
   146d4:	ldr	r3, [r6]
   146d8:	ldrb	r1, [r1]
   146dc:	ldr	r0, [r0, #12]
   146e0:	str	r3, [sp, #12]
   146e4:	bl	15dac <close@plt+0x5230>
   146e8:	cmp	r0, #0
   146ec:	str	r0, [sp, #8]
   146f0:	beq	146f8 <close@plt+0x3b7c>
   146f4:	bl	109e4 <free@plt>
   146f8:	add	r0, r4, #1
   146fc:	bl	10a08 <strdup@plt>
   14700:	add	r2, sp, #16
   14704:	ldrb	r1, [r4]
   14708:	str	r0, [r2, #-8]!
   1470c:	ldr	r0, [r5, #12]
   14710:	bl	15dcc <close@plt+0x5250>
   14714:	cmp	r0, #0
   14718:	movge	r0, #0
   1471c:	blt	14738 <close@plt+0x3bbc>
   14720:	ldr	r2, [sp, #12]
   14724:	ldr	r3, [r6]
   14728:	cmp	r2, r3
   1472c:	bne	14798 <close@plt+0x3c1c>
   14730:	add	sp, sp, #16
   14734:	pop	{r4, r5, r6, pc}
   14738:	ldr	r0, [sp, #8]
   1473c:	bl	109e4 <free@plt>
   14740:	ldr	r3, [r5, #28]
   14744:	cmp	r3, #2
   14748:	mvnle	r0, #0
   1474c:	ble	14720 <close@plt+0x3ba4>
   14750:	ldr	r1, [pc, #76]	; 147a4 <close@plt+0x3c28>
   14754:	mov	r2, #5
   14758:	add	r1, pc, r1
   1475c:	mov	r0, #0
   14760:	bl	109fc <dcgettext@plt>
   14764:	ldr	r2, [pc, #60]	; 147a8 <close@plt+0x3c2c>
   14768:	mov	r3, #54	; 0x36
   1476c:	add	r2, pc, r2
   14770:	add	r2, r2, #12
   14774:	str	r2, [sp]
   14778:	ldr	r2, [pc, #44]	; 147ac <close@plt+0x3c30>
   1477c:	mov	r1, #3
   14780:	add	r2, pc, r2
   14784:	str	r0, [sp, #4]
   14788:	mov	r0, r5
   1478c:	bl	11578 <close@plt+0x9fc>
   14790:	mvn	r0, #0
   14794:	b	14720 <close@plt+0x3ba4>
   14798:	bl	10a14 <__stack_chk_fail@plt>
   1479c:	andeq	sp, r1, ip, lsr r9
   147a0:	andeq	r0, r0, r4, lsr #1
   147a4:	andeq	r1, r0, r0, asr #28
   147a8:	andeq	r2, r0, r4, asr #12
   147ac:	andeq	r2, r0, ip, ror #12
   147b0:	push	{r4, lr}
   147b4:	mov	r4, r0
   147b8:	sub	sp, sp, #8
   147bc:	ldr	r0, [r0, #12]
   147c0:	bl	15e24 <close@plt+0x52a8>
   147c4:	cmp	r0, #0
   147c8:	movge	r0, #0
   147cc:	blt	147d8 <close@plt+0x3c5c>
   147d0:	add	sp, sp, #8
   147d4:	pop	{r4, pc}
   147d8:	ldr	r3, [r4, #28]
   147dc:	cmp	r3, #2
   147e0:	mvnle	r0, #0
   147e4:	ble	147d0 <close@plt+0x3c54>
   147e8:	ldr	r1, [pc, #68]	; 14834 <close@plt+0x3cb8>
   147ec:	mov	r2, #5
   147f0:	add	r1, pc, r1
   147f4:	mov	r0, #0
   147f8:	bl	109fc <dcgettext@plt>
   147fc:	ldr	r2, [pc, #52]	; 14838 <close@plt+0x3cbc>
   14800:	mov	r3, #64	; 0x40
   14804:	add	r2, pc, r2
   14808:	add	r2, r2, #24
   1480c:	str	r2, [sp]
   14810:	ldr	r2, [pc, #36]	; 1483c <close@plt+0x3cc0>
   14814:	mov	r1, #3
   14818:	add	r2, pc, r2
   1481c:	str	r0, [sp, #4]
   14820:	mov	r0, r4
   14824:	bl	11578 <close@plt+0x9fc>
   14828:	mvn	r0, #0
   1482c:	add	sp, sp, #8
   14830:	pop	{r4, pc}
   14834:	andeq	r2, r0, r4, lsl #12
   14838:	andeq	r2, r0, ip, lsr #11
   1483c:	ldrdeq	r2, [r0], -r4
   14840:	push	{r4, r5, r6, r7, r8, lr}
   14844:	subs	r5, r0, #0
   14848:	beq	14900 <close@plt+0x3d84>
   1484c:	ldr	r3, [r5, #8]
   14850:	mov	r6, r1
   14854:	ldr	r0, [r5]
   14858:	ldr	r1, [r5, #12]
   1485c:	ldr	r2, [r5, #16]
   14860:	ldr	lr, [r3, #8]
   14864:	ldr	ip, [r3, #12]
   14868:	str	r0, [r6]
   1486c:	ldr	r0, [r5, #4]
   14870:	str	lr, [r6, #8]
   14874:	str	r0, [r6, #4]
   14878:	ldrd	r0, [r1, #8]
   1487c:	mov	r3, #0
   14880:	ldr	r7, [pc, #128]	; 14908 <close@plt+0x3d8c>
   14884:	str	r0, [r6, #16]
   14888:	ldr	r0, [r2, #8]
   1488c:	ldr	r2, [r2, #12]
   14890:	mov	r4, r3
   14894:	str	ip, [r6, #24]
   14898:	str	r0, [r6, #20]
   1489c:	str	r1, [r6, #28]
   148a0:	str	r2, [r6, #32]
   148a4:	str	r3, [r6, #12]
   148a8:	b	148b8 <close@plt+0x3d3c>
   148ac:	add	r4, r4, #1
   148b0:	cmp	r4, #256	; 0x100
   148b4:	beq	148f8 <close@plt+0x3d7c>
   148b8:	mov	r1, r4
   148bc:	mov	r0, r5
   148c0:	bl	13918 <close@plt+0x2d9c>
   148c4:	cmp	r0, #0
   148c8:	beq	148ac <close@plt+0x3d30>
   148cc:	mov	r1, r4
   148d0:	mov	r2, #0
   148d4:	mov	r0, r5
   148d8:	bl	13ad0 <close@plt+0x2f54>
   148dc:	add	r4, r4, #1
   148e0:	cmp	r0, r7
   148e4:	ldreq	r3, [r6, #12]
   148e8:	addeq	r3, r3, #1
   148ec:	streq	r3, [r6, #12]
   148f0:	cmp	r4, #256	; 0x100
   148f4:	bne	148b8 <close@plt+0x3d3c>
   148f8:	mov	r0, #0
   148fc:	pop	{r4, r5, r6, r7, r8, pc}
   14900:	mvn	r0, #0
   14904:	pop	{r4, r5, r6, r7, r8, pc}
   14908:	andeq	r0, r0, lr, ror r2
   1490c:	ldr	r3, [pc, #628]	; 14b88 <close@plt+0x400c>
   14910:	ldr	ip, [pc, #628]	; 14b8c <close@plt+0x4010>
   14914:	add	r3, pc, r3
   14918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1491c:	mov	r4, r2
   14920:	ldr	r2, [r3, ip]
   14924:	sub	sp, sp, #68	; 0x44
   14928:	mov	sl, r1
   1492c:	ldr	r3, [r2]
   14930:	add	r1, sp, #24
   14934:	str	r2, [sp, #12]
   14938:	str	r3, [sp, #60]	; 0x3c
   1493c:	bl	14840 <close@plt+0x3cc4>
   14940:	cmp	r0, #0
   14944:	bge	14964 <close@plt+0x3de8>
   14948:	ldr	r3, [sp, #12]
   1494c:	ldr	r2, [sp, #60]	; 0x3c
   14950:	ldr	r3, [r3]
   14954:	cmp	r2, r3
   14958:	bne	14b84 <close@plt+0x4008>
   1495c:	add	sp, sp, #68	; 0x44
   14960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14964:	ldr	r1, [pc, #548]	; 14b90 <close@plt+0x4014>
   14968:	mov	r2, #5
   1496c:	add	r1, pc, r1
   14970:	mov	r0, #0
   14974:	bl	109fc <dcgettext@plt>
   14978:	ldr	r2, [pc, #532]	; 14b94 <close@plt+0x4018>
   1497c:	mov	r3, #255	; 0xff
   14980:	add	r2, pc, r2
   14984:	mov	r1, #1
   14988:	str	r2, [sp, #8]
   1498c:	mov	r8, #0
   14990:	add	r9, sp, #20
   14994:	ldr	r5, [pc, #508]	; 14b98 <close@plt+0x401c>
   14998:	mov	r2, r0
   1499c:	mov	r0, sl
   149a0:	bl	10b10 <__fprintf_chk@plt>
   149a4:	ldr	r1, [pc, #496]	; 14b9c <close@plt+0x4020>
   149a8:	mov	r2, #5
   149ac:	add	r1, pc, r1
   149b0:	mov	r0, r8
   149b4:	bl	109fc <dcgettext@plt>
   149b8:	mov	r3, #256	; 0x100
   149bc:	mov	r1, #1
   149c0:	mov	r2, r0
   149c4:	mov	r0, sl
   149c8:	bl	10b10 <__fprintf_chk@plt>
   149cc:	ldr	r1, [pc, #460]	; 14ba0 <close@plt+0x4024>
   149d0:	mov	r2, #5
   149d4:	add	r1, pc, r1
   149d8:	mov	r0, r8
   149dc:	bl	109fc <dcgettext@plt>
   149e0:	ldr	r3, [sp, #32]
   149e4:	mov	r1, #1
   149e8:	mov	r2, r0
   149ec:	mov	r0, sl
   149f0:	bl	10b10 <__fprintf_chk@plt>
   149f4:	ldr	r1, [pc, #424]	; 14ba4 <close@plt+0x4028>
   149f8:	mov	r2, #5
   149fc:	add	r1, pc, r1
   14a00:	mov	r0, r8
   14a04:	bl	109fc <dcgettext@plt>
   14a08:	ldr	r3, [sp, #36]	; 0x24
   14a0c:	mov	r1, #1
   14a10:	mov	r2, r0
   14a14:	mov	r0, sl
   14a18:	bl	10b10 <__fprintf_chk@plt>
   14a1c:	ldr	r1, [pc, #388]	; 14ba8 <close@plt+0x402c>
   14a20:	mov	r2, #5
   14a24:	add	r1, pc, r1
   14a28:	mov	r0, r8
   14a2c:	bl	109fc <dcgettext@plt>
   14a30:	mov	r1, #1
   14a34:	mov	r2, r0
   14a38:	mov	r0, sl
   14a3c:	bl	10b10 <__fprintf_chk@plt>
   14a40:	mov	r3, #0
   14a44:	mov	r2, r9
   14a48:	mov	r1, r5
   14a4c:	mov	r0, r4
   14a50:	strh	r8, [sp, #22]
   14a54:	strh	r3, [sp, #20]
   14a58:	bl	10a50 <ioctl@plt>
   14a5c:	subs	fp, r0, #0
   14a60:	bne	14b00 <close@plt+0x3f84>
   14a64:	mov	ip, #33554432	; 0x2000000
   14a68:	mov	r2, r9
   14a6c:	ldr	r1, [pc, #312]	; 14bac <close@plt+0x4030>
   14a70:	mov	r0, r4
   14a74:	str	ip, [sp, #16]
   14a78:	str	ip, [sp, #20]
   14a7c:	sxth	r7, r8
   14a80:	bl	10a50 <ioctl@plt>
   14a84:	add	r6, sp, #16
   14a88:	b	14a98 <close@plt+0x3f1c>
   14a8c:	add	fp, fp, #1
   14a90:	cmp	fp, #256	; 0x100
   14a94:	beq	14b7c <close@plt+0x4000>
   14a98:	orr	r3, r7, fp
   14a9c:	mov	r2, r6
   14aa0:	mov	r1, r5
   14aa4:	mov	r0, r4
   14aa8:	strh	r3, [sp, #18]
   14aac:	bl	10a50 <ioctl@plt>
   14ab0:	cmp	r0, #0
   14ab4:	beq	14a8c <close@plt+0x3f10>
   14ab8:	sub	r3, fp, #1
   14abc:	uxtb	r6, r3
   14ac0:	mov	r3, #512	; 0x200
   14ac4:	mov	r2, r9
   14ac8:	mov	r1, r5
   14acc:	orr	r6, r8, r6
   14ad0:	mov	r0, r4
   14ad4:	strh	r3, [sp, #18]
   14ad8:	bl	10a50 <ioctl@plt>
   14adc:	mov	r3, r8
   14ae0:	str	r6, [sp]
   14ae4:	ldr	r2, [sp, #8]
   14ae8:	add	r8, r8, #256	; 0x100
   14aec:	mov	r1, #1
   14af0:	mov	r0, sl
   14af4:	bl	10b10 <__fprintf_chk@plt>
   14af8:	cmp	r8, #3840	; 0xf00
   14afc:	bne	14a40 <close@plt+0x3ec4>
   14b00:	ldr	r1, [pc, #168]	; 14bb0 <close@plt+0x4034>
   14b04:	mov	r2, #5
   14b08:	add	r1, pc, r1
   14b0c:	mov	r0, #0
   14b10:	bl	109fc <dcgettext@plt>
   14b14:	mov	r3, #256	; 0x100
   14b18:	mov	r1, #1
   14b1c:	mov	r2, r0
   14b20:	mov	r0, sl
   14b24:	bl	10b10 <__fprintf_chk@plt>
   14b28:	ldr	r1, [pc, #132]	; 14bb4 <close@plt+0x4038>
   14b2c:	mov	r2, #5
   14b30:	add	r1, pc, r1
   14b34:	mov	r0, #0
   14b38:	bl	109fc <dcgettext@plt>
   14b3c:	mov	r3, #256	; 0x100
   14b40:	mov	r1, #1
   14b44:	mov	r2, r0
   14b48:	mov	r0, sl
   14b4c:	bl	10b10 <__fprintf_chk@plt>
   14b50:	ldr	r1, [pc, #96]	; 14bb8 <close@plt+0x403c>
   14b54:	mov	r2, #5
   14b58:	add	r1, pc, r1
   14b5c:	mov	r0, #0
   14b60:	bl	109fc <dcgettext@plt>
   14b64:	ldr	r3, [sp, #44]	; 0x2c
   14b68:	mov	r1, #1
   14b6c:	mov	r2, r0
   14b70:	mov	r0, sl
   14b74:	bl	10b10 <__fprintf_chk@plt>
   14b78:	b	14948 <close@plt+0x3dcc>
   14b7c:	mov	r6, #255	; 0xff
   14b80:	b	14ac0 <close@plt+0x3f44>
   14b84:	bl	10a14 <__stack_chk_fail@plt>
   14b88:	andeq	sp, r1, r4, ror #13
   14b8c:	andeq	r0, r0, r4, lsr #1
   14b90:			; <UNDEFINED> instruction: 0x000024bc
   14b94:	andeq	r2, r0, r4, lsr #11
   14b98:	andeq	r4, r0, r7, asr #22
   14b9c:			; <UNDEFINED> instruction: 0x000024b4
   14ba0:	andeq	r2, r0, r4, asr #9
   14ba4:	ldrdeq	r2, [r0], -r4
   14ba8:	ldrdeq	r2, [r0], -r0
   14bac:	andeq	r4, r0, r6, asr #22
   14bb0:	andeq	r2, r0, r0, lsr r4
   14bb4:	andeq	r2, r0, ip, lsr r4
   14bb8:	andeq	r2, r0, r8, lsr r4
   14bbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bc0:	mov	r7, r1
   14bc4:	ldr	r9, [pc, #552]	; 14df4 <close@plt+0x4278>
   14bc8:	ldr	r3, [pc, #552]	; 14df8 <close@plt+0x427c>
   14bcc:	add	r9, pc, r9
   14bd0:	sub	sp, sp, #20
   14bd4:	ldr	r3, [r9, r3]
   14bd8:	ldr	r8, [r3]
   14bdc:	cmp	r8, #0
   14be0:	beq	14cf4 <close@plt+0x4178>
   14be4:	ldr	r3, [pc, #528]	; 14dfc <close@plt+0x4280>
   14be8:	ldr	fp, [pc, #528]	; 14e00 <close@plt+0x4284>
   14bec:	add	r3, pc, r3
   14bf0:	str	r9, [sp, #12]
   14bf4:	mov	r6, r0
   14bf8:	add	fp, pc, fp
   14bfc:	mov	r4, #0
   14c00:	mov	r9, r3
   14c04:	b	14c1c <close@plt+0x40a0>
   14c08:	cmp	r4, #8
   14c0c:	beq	14ca8 <close@plt+0x412c>
   14c10:	add	r4, r4, #1
   14c14:	cmp	r4, r8
   14c18:	beq	14cf0 <close@plt+0x4174>
   14c1c:	mov	r1, r4
   14c20:	mov	r0, r6
   14c24:	bl	150d0 <close@plt+0x4554>
   14c28:	subs	r5, r0, #0
   14c2c:	lslne	sl, r4, #8
   14c30:	movne	r5, #0
   14c34:	beq	14c08 <close@plt+0x408c>
   14c38:	b	14c58 <close@plt+0x40dc>
   14c3c:	str	r0, [sp]
   14c40:	orr	r3, sl, r5
   14c44:	mov	r2, fp
   14c48:	mov	r1, #1
   14c4c:	mov	r0, r7
   14c50:	bl	10b10 <__fprintf_chk@plt>
   14c54:	add	r5, r5, #1
   14c58:	mov	r1, r4
   14c5c:	mov	r0, r6
   14c60:	bl	150d0 <close@plt+0x4554>
   14c64:	mov	r2, r5
   14c68:	mov	r1, r4
   14c6c:	cmp	r0, r5
   14c70:	mov	r0, r6
   14c74:	bls	14c10 <close@plt+0x4094>
   14c78:	bl	15178 <close@plt+0x45fc>
   14c7c:	ldrb	r3, [r0]
   14c80:	cmp	r3, #0
   14c84:	beq	14c54 <close@plt+0x40d8>
   14c88:	b	14c3c <close@plt+0x40c0>
   14c8c:	str	r0, [sp]
   14c90:	orr	r3, r5, #2048	; 0x800
   14c94:	mov	r2, r9
   14c98:	mov	r1, #1
   14c9c:	mov	r0, r7
   14ca0:	bl	10b10 <__fprintf_chk@plt>
   14ca4:	add	r5, r5, #1
   14ca8:	mov	r1, #0
   14cac:	mov	r0, r6
   14cb0:	bl	150d0 <close@plt+0x4554>
   14cb4:	mov	r1, #0
   14cb8:	mov	r2, r5
   14cbc:	cmp	r0, r5
   14cc0:	movhi	r3, #1
   14cc4:	movls	r3, #0
   14cc8:	cmp	r5, #127	; 0x7f
   14ccc:	movhi	r3, #0
   14cd0:	cmp	r3, r1
   14cd4:	mov	r0, r6
   14cd8:	beq	14c10 <close@plt+0x4094>
   14cdc:	bl	15178 <close@plt+0x45fc>
   14ce0:	ldrb	r3, [r0]
   14ce4:	cmp	r3, #0
   14ce8:	beq	14ca4 <close@plt+0x4128>
   14cec:	b	14c8c <close@plt+0x4110>
   14cf0:	ldr	r9, [sp, #12]
   14cf4:	ldr	r1, [pc, #264]	; 14e04 <close@plt+0x4288>
   14cf8:	mov	r2, #5
   14cfc:	add	r1, pc, r1
   14d00:	mov	r0, #0
   14d04:	bl	109fc <dcgettext@plt>
   14d08:	mov	r1, #1
   14d0c:	mov	r2, r0
   14d10:	mov	r0, r7
   14d14:	bl	10b10 <__fprintf_chk@plt>
   14d18:	ldr	r3, [pc, #232]	; 14e08 <close@plt+0x428c>
   14d1c:	ldr	r3, [r9, r3]
   14d20:	ldr	r6, [r3]
   14d24:	cmp	r6, #0
   14d28:	beq	14d80 <close@plt+0x4204>
   14d2c:	ldr	r3, [pc, #216]	; 14e0c <close@plt+0x4290>
   14d30:	ldr	sl, [pc, #216]	; 14e10 <close@plt+0x4294>
   14d34:	mov	r4, #0
   14d38:	ldr	r8, [r9, r3]
   14d3c:	add	sl, pc, sl
   14d40:	mov	r5, r8
   14d44:	mov	r2, #5
   14d48:	mov	r1, sl
   14d4c:	mov	r0, #0
   14d50:	bl	109fc <dcgettext@plt>
   14d54:	ldr	r2, [r5, #4]
   14d58:	ldr	r3, [r8, r4, lsl #3]
   14d5c:	str	r2, [sp]
   14d60:	add	r4, r4, #1
   14d64:	mov	r1, #1
   14d68:	add	r5, r5, #8
   14d6c:	mov	r2, r0
   14d70:	mov	r0, r7
   14d74:	bl	10b10 <__fprintf_chk@plt>
   14d78:	cmp	r4, r6
   14d7c:	bne	14d44 <close@plt+0x41c8>
   14d80:	ldr	r1, [pc, #140]	; 14e14 <close@plt+0x4298>
   14d84:	mov	r2, #5
   14d88:	add	r1, pc, r1
   14d8c:	mov	r0, #0
   14d90:	bl	109fc <dcgettext@plt>
   14d94:	mov	r1, #1
   14d98:	mov	r2, r0
   14d9c:	mov	r0, r7
   14da0:	bl	10b10 <__fprintf_chk@plt>
   14da4:	ldr	r3, [pc, #108]	; 14e18 <close@plt+0x429c>
   14da8:	ldr	r4, [r9, r3]
   14dac:	ldr	r3, [r4]
   14db0:	cmp	r3, #0
   14db4:	beq	14dec <close@plt+0x4270>
   14db8:	ldr	r6, [pc, #92]	; 14e1c <close@plt+0x42a0>
   14dbc:	mov	r5, #1
   14dc0:	add	r6, pc, r6
   14dc4:	ldr	r0, [r4, #4]
   14dc8:	mov	r2, r6
   14dcc:	mov	r1, #1
   14dd0:	lsl	r0, r5, r0
   14dd4:	str	r0, [sp]
   14dd8:	mov	r0, r7
   14ddc:	bl	10b10 <__fprintf_chk@plt>
   14de0:	ldr	r3, [r4, #8]!
   14de4:	cmp	r3, #0
   14de8:	bne	14dc4 <close@plt+0x4248>
   14dec:	add	sp, sp, #20
   14df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14df4:	andeq	sp, r1, ip, lsr #8
   14df8:	strheq	r0, [r0], -ip
   14dfc:	andeq	r2, r0, r0, ror #7
   14e00:	andeq	r2, r0, r8, asr #7
   14e04:	andeq	r2, r0, r0, ror #5
   14e08:	andeq	r0, r0, r4, asr #1
   14e0c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14e10:	andeq	r2, r0, ip, asr #5
   14e14:	muleq	r0, r0, r2
   14e18:	andeq	r0, r0, ip, lsr #1
   14e1c:	muleq	r0, r0, r2
   14e20:	ldr	r3, [pc, #464]	; 14ff8 <close@plt+0x447c>
   14e24:	ldr	r1, [pc, #464]	; 14ffc <close@plt+0x4480>
   14e28:	add	r3, pc, r3
   14e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e30:	sub	sp, sp, #44	; 0x2c
   14e34:	ldr	r1, [r3, r1]
   14e38:	ldr	r2, [pc, #448]	; 15000 <close@plt+0x4484>
   14e3c:	mov	ip, r1
   14e40:	str	r1, [sp, #16]
   14e44:	ldr	r1, [pc, #440]	; 15004 <close@plt+0x4488>
   14e48:	ldr	r9, [pc, #440]	; 15008 <close@plt+0x448c>
   14e4c:	add	r1, pc, r1
   14e50:	mov	r8, r0
   14e54:	ldr	r0, [ip]
   14e58:	str	r1, [sp, #32]
   14e5c:	add	r9, pc, r9
   14e60:	mov	r1, #0
   14e64:	str	r9, [sp, #28]
   14e68:	str	r0, [sp, #36]	; 0x24
   14e6c:	str	r1, [sp]
   14e70:	ldr	r6, [r3, r2]
   14e74:	ldr	r3, [pc, #400]	; 1500c <close@plt+0x4490>
   14e78:	str	r6, [sp, #20]
   14e7c:	add	r3, pc, r3
   14e80:	str	r3, [sp, #4]
   14e84:	ldr	r3, [pc, #388]	; 15010 <close@plt+0x4494>
   14e88:	add	r3, pc, r3
   14e8c:	str	r3, [sp, #8]
   14e90:	mov	r3, r9
   14e94:	ldr	r2, [sp, #4]
   14e98:	mov	r1, #1
   14e9c:	mov	r0, r8
   14ea0:	bl	10b10 <__fprintf_chk@plt>
   14ea4:	mov	r0, r9
   14ea8:	bl	10ac8 <strlen@plt>
   14eac:	add	r4, r6, #24
   14eb0:	str	r6, [sp, #12]
   14eb4:	add	sl, r6, #228	; 0xe4
   14eb8:	ldr	fp, [sp, #8]
   14ebc:	mov	r5, #0
   14ec0:	mov	r7, r0
   14ec4:	b	14ee4 <close@plt+0x4368>
   14ec8:	add	r0, fp, r7
   14ecc:	mov	r1, r8
   14ed0:	bl	10b58 <fputs@plt>
   14ed4:	add	r4, r4, #12
   14ed8:	cmp	sl, r4
   14edc:	beq	14f18 <close@plt+0x439c>
   14ee0:	ldr	fp, [r4, #-12]
   14ee4:	mov	r2, r7
   14ee8:	mov	r1, r9
   14eec:	mov	r0, fp
   14ef0:	bl	10b64 <strncmp@plt>
   14ef4:	cmp	r0, #0
   14ef8:	bne	14ed4 <close@plt+0x4358>
   14efc:	cmp	r5, #0
   14f00:	add	r5, r5, #1
   14f04:	beq	14ec8 <close@plt+0x434c>
   14f08:	mov	r1, r8
   14f0c:	mov	r0, #44	; 0x2c
   14f10:	bl	10b34 <fputc@plt>
   14f14:	b	14ec8 <close@plt+0x434c>
   14f18:	mov	r1, r8
   14f1c:	mov	r0, #125	; 0x7d
   14f20:	bl	10b34 <fputc@plt>
   14f24:	ldr	r3, [sp]
   14f28:	cmp	r3, #1
   14f2c:	bne	14fd8 <close@plt+0x445c>
   14f30:	ldr	r3, [sp, #20]
   14f34:	ldr	r4, [pc, #216]	; 15014 <close@plt+0x4498>
   14f38:	ldr	r7, [pc, #216]	; 15018 <close@plt+0x449c>
   14f3c:	ldr	r9, [pc, #216]	; 1501c <close@plt+0x44a0>
   14f40:	ldr	sl, [pc, #216]	; 15020 <close@plt+0x44a4>
   14f44:	ldr	r6, [sp, #12]
   14f48:	add	r5, r3, #204	; 0xcc
   14f4c:	add	r4, pc, r4
   14f50:	add	r7, pc, r7
   14f54:	add	r9, pc, r9
   14f58:	add	sl, pc, sl
   14f5c:	b	14f64 <close@plt+0x43e8>
   14f60:	ldr	r4, [r6, #12]!
   14f64:	mov	r2, #9
   14f68:	mov	r1, r7
   14f6c:	mov	r0, r4
   14f70:	bl	10b64 <strncmp@plt>
   14f74:	cmp	r0, #0
   14f78:	beq	14fa8 <close@plt+0x442c>
   14f7c:	mov	r2, #5
   14f80:	mov	r1, r9
   14f84:	mov	r0, r4
   14f88:	bl	10b64 <strncmp@plt>
   14f8c:	cmp	r0, #0
   14f90:	beq	14fa8 <close@plt+0x442c>
   14f94:	mov	r3, r4
   14f98:	mov	r2, sl
   14f9c:	mov	r1, #1
   14fa0:	mov	r0, r8
   14fa4:	bl	10b10 <__fprintf_chk@plt>
   14fa8:	cmp	r6, r5
   14fac:	bne	14f60 <close@plt+0x43e4>
   14fb0:	ldr	r3, [sp, #16]
   14fb4:	ldr	r2, [sp, #36]	; 0x24
   14fb8:	ldr	r3, [r3]
   14fbc:	cmp	r2, r3
   14fc0:	bne	14ff4 <close@plt+0x4478>
   14fc4:	mov	r1, r8
   14fc8:	mov	r0, #10
   14fcc:	add	sp, sp, #44	; 0x2c
   14fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fd4:	b	10b34 <fputc@plt>
   14fd8:	mov	r1, r8
   14fdc:	mov	r0, #44	; 0x2c
   14fe0:	bl	10b34 <fputc@plt>
   14fe4:	mov	r3, #1
   14fe8:	ldr	r9, [sp, #32]
   14fec:	str	r3, [sp]
   14ff0:	b	14e90 <close@plt+0x4314>
   14ff4:	bl	10a14 <__stack_chk_fail@plt>
   14ff8:	ldrdeq	sp, [r1], -r0
   14ffc:	andeq	r0, r0, r4, lsr #1
   15000:	andeq	r0, r0, r0, asr #1
   15004:	muleq	r0, r4, r2
   15008:	andeq	r2, r0, r0, ror #4
   1500c:	andeq	r2, r0, ip, ror #4
   15010:	andeq	r2, r0, r0, asr #4
   15014:	andeq	r2, r0, r8, lsl #3
   15018:	andeq	r2, r0, ip, ror #2
   1501c:	andeq	r2, r0, ip, lsl #3
   15020:	muleq	r0, r4, r1
   15024:	cmp	r0, #0
   15028:	ldr	r1, [pc, #44]	; 1505c <close@plt+0x44e0>
   1502c:	add	r1, pc, r1
   15030:	bxeq	lr
   15034:	ldr	r3, [r0, #32]
   15038:	cmp	r3, #17
   1503c:	bhi	15054 <close@plt+0x44d8>
   15040:	ldr	r2, [pc, #24]	; 15060 <close@plt+0x44e4>
   15044:	add	r3, r3, r3, lsl #1
   15048:	ldr	r2, [r1, r2]
   1504c:	ldr	r0, [r2, r3, lsl #2]
   15050:	bx	lr
   15054:	mov	r0, #0
   15058:	bx	lr
   1505c:	andeq	ip, r1, ip, asr #31
   15060:	andeq	r0, r0, r0, asr #1
   15064:	ldr	r2, [pc, #88]	; 150c4 <close@plt+0x4548>
   15068:	ldr	ip, [pc, #88]	; 150c8 <close@plt+0x454c>
   1506c:	add	r2, pc, r2
   15070:	ldr	r3, [pc, #84]	; 150cc <close@plt+0x4550>
   15074:	push	{r4, r5, r6, r7, r8, lr}
   15078:	add	r3, pc, r3
   1507c:	mov	r7, r0
   15080:	ldr	r5, [r2, ip]
   15084:	mov	r6, r1
   15088:	mov	r4, #0
   1508c:	b	150a0 <close@plt+0x4524>
   15090:	add	r4, r4, #1
   15094:	cmp	r4, #18
   15098:	beq	150bc <close@plt+0x4540>
   1509c:	ldr	r3, [r5, #12]!
   150a0:	mov	r0, r3
   150a4:	mov	r1, r6
   150a8:	bl	10a38 <strcasecmp@plt>
   150ac:	cmp	r0, #0
   150b0:	bne	15090 <close@plt+0x4514>
   150b4:	str	r4, [r7, #32]
   150b8:	pop	{r4, r5, r6, r7, r8, pc}
   150bc:	mov	r0, #1
   150c0:	pop	{r4, r5, r6, r7, r8, pc}
   150c4:	andeq	ip, r1, ip, lsl #31
   150c8:	andeq	r0, r0, r0, asr #1
   150cc:	andeq	r2, r0, ip, asr r0
   150d0:	ldr	r3, [pc, #140]	; 15164 <close@plt+0x45e8>
   150d4:	cmp	r1, #14
   150d8:	add	r3, pc, r3
   150dc:	bls	150f4 <close@plt+0x4578>
   150e0:	ldr	r3, [r0, #28]
   150e4:	cmp	r3, #2
   150e8:	bgt	15108 <close@plt+0x458c>
   150ec:	mov	r0, #0
   150f0:	bx	lr
   150f4:	ldr	r2, [pc, #108]	; 15168 <close@plt+0x45ec>
   150f8:	ldr	r3, [r3, r2]
   150fc:	add	r1, r3, r1, lsl #3
   15100:	ldr	r0, [r1, #4]
   15104:	bx	lr
   15108:	push	{r4, r5, lr}
   1510c:	mov	r4, r1
   15110:	ldr	r1, [pc, #84]	; 1516c <close@plt+0x45f0>
   15114:	sub	sp, sp, #20
   15118:	mov	r5, r0
   1511c:	mov	r2, #5
   15120:	add	r1, pc, r1
   15124:	mov	r0, #0
   15128:	bl	109fc <dcgettext@plt>
   1512c:	ldr	r3, [pc, #60]	; 15170 <close@plt+0x45f4>
   15130:	ldr	r2, [pc, #60]	; 15174 <close@plt+0x45f8>
   15134:	add	r3, pc, r3
   15138:	str	r3, [sp]
   1513c:	str	r4, [sp, #8]
   15140:	mov	r3, #150	; 0x96
   15144:	add	r2, pc, r2
   15148:	mov	r1, #3
   1514c:	str	r0, [sp, #4]
   15150:	mov	r0, r5
   15154:	bl	11578 <close@plt+0x9fc>
   15158:	mov	r0, #0
   1515c:	add	sp, sp, #20
   15160:	pop	{r4, r5, pc}
   15164:	andeq	ip, r1, r0, lsr #30
   15168:	strheq	r0, [r0], -r8
   1516c:	ldrdeq	r1, [r0], -r0
   15170:	andeq	r1, r0, ip, asr pc
   15174:	ldrdeq	r1, [r0], -r4
   15178:	push	{r4, r5, r6, lr}
   1517c:	sub	sp, sp, #16
   15180:	mov	r4, r2
   15184:	mov	r6, r0
   15188:	mov	r5, r1
   1518c:	bl	150d0 <close@plt+0x4554>
   15190:	ldr	r3, [pc, #156]	; 15234 <close@plt+0x46b8>
   15194:	add	r3, pc, r3
   15198:	cmp	r0, #0
   1519c:	beq	151c8 <close@plt+0x464c>
   151a0:	ldr	r2, [pc, #144]	; 15238 <close@plt+0x46bc>
   151a4:	ldr	r3, [r3, r2]
   151a8:	add	r2, r3, r5, lsl #3
   151ac:	ldr	r2, [r2, #4]
   151b0:	cmp	r2, r4
   151b4:	bhi	151d0 <close@plt+0x4654>
   151b8:	ldr	r3, [r6, #28]
   151bc:	cmp	r3, #2
   151c0:	movle	r0, #0
   151c4:	bgt	151e0 <close@plt+0x4664>
   151c8:	add	sp, sp, #16
   151cc:	pop	{r4, r5, r6, pc}
   151d0:	ldr	r3, [r3, r5, lsl #3]
   151d4:	ldr	r0, [r3, r4, lsl #2]
   151d8:	add	sp, sp, #16
   151dc:	pop	{r4, r5, r6, pc}
   151e0:	ldr	r1, [pc, #84]	; 1523c <close@plt+0x46c0>
   151e4:	mov	r2, #5
   151e8:	add	r1, pc, r1
   151ec:	mov	r0, #0
   151f0:	bl	109fc <dcgettext@plt>
   151f4:	ldr	r3, [pc, #68]	; 15240 <close@plt+0x46c4>
   151f8:	ldr	r2, [pc, #68]	; 15244 <close@plt+0x46c8>
   151fc:	add	r3, pc, r3
   15200:	add	r3, r3, #16
   15204:	str	r3, [sp]
   15208:	str	r4, [sp, #12]
   1520c:	str	r5, [sp, #8]
   15210:	mov	r3, #164	; 0xa4
   15214:	add	r2, pc, r2
   15218:	mov	r1, #3
   1521c:	str	r0, [sp, #4]
   15220:	mov	r0, r6
   15224:	bl	11578 <close@plt+0x9fc>
   15228:	mov	r0, #0
   1522c:	add	sp, sp, #16
   15230:	pop	{r4, r5, r6, pc}
   15234:	andeq	ip, r1, r4, ror #28
   15238:	strheq	r0, [r0], -r8
   1523c:	andeq	r1, r0, r8, lsr pc
   15240:	muleq	r0, r4, lr
   15244:	andeq	r1, r0, r4, lsl #30
   15248:	push	{r4, lr}
   1524c:	bl	15178 <close@plt+0x45fc>
   15250:	cmp	r0, #0
   15254:	popeq	{r4, pc}
   15258:	pop	{r4, lr}
   1525c:	b	10a08 <strdup@plt>
   15260:	ldr	ip, [pc, #304]	; 15398 <close@plt+0x481c>
   15264:	subs	r2, r1, #0
   15268:	add	ip, pc, ip
   1526c:	blt	15390 <close@plt+0x4814>
   15270:	cmp	r2, #4096	; 0x1000
   15274:	blt	15304 <close@plt+0x4788>
   15278:	eor	r2, r2, #61440	; 0xf000
   1527c:	cmp	r2, #127	; 0x7f
   15280:	ble	15338 <close@plt+0x47bc>
   15284:	ldr	r1, [pc, #272]	; 1539c <close@plt+0x4820>
   15288:	push	{r4, lr}
   1528c:	ldr	r3, [pc, #268]	; 153a0 <close@plt+0x4824>
   15290:	ldr	ip, [ip, r1]
   15294:	add	r3, pc, r3
   15298:	add	r4, ip, #216	; 0xd8
   1529c:	cmp	r3, #0
   152a0:	beq	152f0 <close@plt+0x4774>
   152a4:	ldr	r1, [ip, #8]
   152a8:	cmp	r1, #255	; 0xff
   152ac:	bgt	152f0 <close@plt+0x4774>
   152b0:	add	r3, r3, #8
   152b4:	b	152c4 <close@plt+0x4748>
   152b8:	cmp	r1, #256	; 0x100
   152bc:	add	r3, r3, #8
   152c0:	beq	152f0 <close@plt+0x4774>
   152c4:	ldrh	r0, [r3, #-8]
   152c8:	add	r1, r1, #1
   152cc:	cmp	r0, r2
   152d0:	bne	152b8 <close@plt+0x473c>
   152d4:	ldr	r0, [r3, #-4]
   152d8:	ldrb	lr, [r0]
   152dc:	cmp	lr, #0
   152e0:	popne	{r4, pc}
   152e4:	cmp	r1, #256	; 0x100
   152e8:	add	r3, r3, #8
   152ec:	bne	152c4 <close@plt+0x4748>
   152f0:	add	ip, ip, #12
   152f4:	cmp	ip, r4
   152f8:	beq	15388 <close@plt+0x480c>
   152fc:	ldr	r3, [ip, #4]
   15300:	b	1529c <close@plt+0x4720>
   15304:	cmp	r2, #127	; 0x7f
   15308:	ble	15338 <close@plt+0x47bc>
   1530c:	asr	r1, r2, #8
   15310:	cmp	r1, #8
   15314:	beq	15390 <close@plt+0x4814>
   15318:	cmp	r1, #11
   1531c:	mov	r3, r0
   15320:	uxtbeq	r2, r2
   15324:	beq	15340 <close@plt+0x47c4>
   15328:	cmp	r1, #0
   1532c:	beq	15340 <close@plt+0x47c4>
   15330:	uxtb	r2, r2
   15334:	b	15178 <close@plt+0x45fc>
   15338:	mov	r1, #0
   1533c:	b	15178 <close@plt+0x45fc>
   15340:	ldr	r3, [r3, #32]
   15344:	ldr	r1, [pc, #80]	; 1539c <close@plt+0x4820>
   15348:	add	r3, r3, r3, lsl #1
   1534c:	ldr	r1, [ip, r1]
   15350:	add	r3, r1, r3, lsl #2
   15354:	ldr	r0, [r3, #4]
   15358:	cmp	r0, #0
   1535c:	bxeq	lr
   15360:	ldr	r1, [r3, #8]
   15364:	cmp	r1, r2
   15368:	bgt	15390 <close@plt+0x4814>
   1536c:	sub	r2, r2, r1
   15370:	add	r2, r0, r2, lsl #3
   15374:	ldr	r0, [r2, #4]
   15378:	ldrb	r3, [r0]
   1537c:	cmp	r3, #0
   15380:	moveq	r0, #0
   15384:	bx	lr
   15388:	mov	r0, #0
   1538c:	pop	{r4, pc}
   15390:	mov	r0, #0
   15394:	bx	lr
   15398:	muleq	r1, r0, sp
   1539c:	andeq	r0, r0, r0, asr #1
   153a0:	andeq	r7, r1, ip, asr pc
   153a4:	push	{r4, lr}
   153a8:	bl	15260 <close@plt+0x46e4>
   153ac:	cmp	r0, #0
   153b0:	popeq	{r4, pc}
   153b4:	pop	{r4, lr}
   153b8:	b	10a08 <strdup@plt>
   153bc:	ldr	r3, [pc, #1636]	; 15a28 <close@plt+0x4eac>
   153c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153c4:	sub	sp, sp, #36	; 0x24
   153c8:	add	r3, pc, r3
   153cc:	str	r3, [sp, #20]
   153d0:	ldr	r3, [pc, #1620]	; 15a2c <close@plt+0x4eb0>
   153d4:	ldr	r9, [pc, #1620]	; 15a30 <close@plt+0x4eb4>
   153d8:	add	r3, pc, r3
   153dc:	str	r3, [sp, #24]
   153e0:	ldr	r3, [pc, #1612]	; 15a34 <close@plt+0x4eb8>
   153e4:	mov	r5, r0
   153e8:	add	r3, pc, r3
   153ec:	str	r3, [sp, #28]
   153f0:	mov	r4, r1
   153f4:	mov	r8, r2
   153f8:	add	r9, pc, r9
   153fc:	cmn	r8, #1
   15400:	mov	r2, #5
   15404:	ldreq	r8, [r5]
   15408:	ldr	r1, [sp, #20]
   1540c:	mov	r0, r4
   15410:	lsreq	r8, r8, #4
   15414:	andeq	r8, r8, #1
   15418:	bl	10b64 <strncmp@plt>
   1541c:	subs	r6, r0, #0
   15420:	beq	15588 <close@plt+0x4a0c>
   15424:	mov	r2, #6
   15428:	ldr	r1, [sp, #24]
   1542c:	mov	r0, r4
   15430:	bl	10b64 <strncmp@plt>
   15434:	subs	r2, r0, #0
   15438:	beq	1556c <close@plt+0x49f0>
   1543c:	ldr	r3, [r5, #32]
   15440:	ldr	r2, [pc, #1520]	; 15a38 <close@plt+0x4ebc>
   15444:	cmp	r8, #1
   15448:	add	r3, r3, r3, lsl #1
   1544c:	ldr	sl, [r9, r2]
   15450:	add	r3, sl, r3, lsl #2
   15454:	ldr	r7, [r3, #4]
   15458:	ldr	r6, [r3, #8]
   1545c:	beq	15538 <close@plt+0x49bc>
   15460:	cmp	r6, #255	; 0xff
   15464:	movls	fp, #256	; 0x100
   15468:	bhi	154a8 <close@plt+0x492c>
   1546c:	ldr	r3, [r7, #4]
   15470:	mov	r0, r4
   15474:	mov	r1, r3
   15478:	ldrb	r3, [r3]
   1547c:	add	r7, r7, #8
   15480:	cmp	r3, #0
   15484:	beq	15494 <close@plt+0x4918>
   15488:	bl	109cc <strcmp@plt>
   1548c:	cmp	r0, #0
   15490:	beq	1552c <close@plt+0x49b0>
   15494:	add	r6, r6, #1
   15498:	cmp	r6, fp
   1549c:	bcc	1546c <close@plt+0x48f0>
   154a0:	cmp	r8, #1
   154a4:	beq	15544 <close@plt+0x49c8>
   154a8:	mov	r7, #256	; 0x100
   154ac:	mov	r6, #0
   154b0:	mov	r2, r6
   154b4:	mov	r1, #0
   154b8:	mov	r0, r5
   154bc:	bl	15178 <close@plt+0x45fc>
   154c0:	mov	r1, r0
   154c4:	mov	r0, r4
   154c8:	bl	109cc <strcmp@plt>
   154cc:	cmp	r0, #0
   154d0:	beq	1552c <close@plt+0x49b0>
   154d4:	add	r6, r6, #1
   154d8:	cmp	r6, r7
   154dc:	bne	154b0 <close@plt+0x4934>
   154e0:	mov	r7, #256	; 0x100
   154e4:	mov	r6, #1
   154e8:	cmp	r7, #0
   154ec:	movne	fp, #0
   154f0:	bne	15504 <close@plt+0x4988>
   154f4:	b	1554c <close@plt+0x49d0>
   154f8:	add	fp, fp, #1
   154fc:	cmp	r7, fp
   15500:	beq	1554c <close@plt+0x49d0>
   15504:	mov	r2, fp
   15508:	mov	r1, r6
   1550c:	mov	r0, r5
   15510:	bl	15178 <close@plt+0x45fc>
   15514:	mov	r1, r0
   15518:	mov	r0, r4
   1551c:	bl	109cc <strcmp@plt>
   15520:	cmp	r0, #0
   15524:	bne	154f8 <close@plt+0x497c>
   15528:	orr	r6, fp, r6, lsl #8
   1552c:	mov	r0, r6
   15530:	add	sp, sp, #36	; 0x24
   15534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15538:	cmp	r6, #127	; 0x7f
   1553c:	movls	fp, #128	; 0x80
   15540:	bls	1546c <close@plt+0x48f0>
   15544:	mov	r7, #128	; 0x80
   15548:	b	154ac <close@plt+0x4930>
   1554c:	add	r6, r6, #1
   15550:	cmp	r6, #15
   15554:	beq	155e0 <close@plt+0x4a64>
   15558:	ldr	r3, [pc, #1244]	; 15a3c <close@plt+0x4ec0>
   1555c:	ldr	r3, [r9, r3]
   15560:	add	r3, r3, r6, lsl #3
   15564:	ldr	r7, [r3, #4]
   15568:	b	154e8 <close@plt+0x496c>
   1556c:	add	r1, r4, #6
   15570:	mov	r0, r5
   15574:	bl	153bc <close@plt+0x4840>
   15578:	lsrs	r3, r0, #8
   1557c:	bne	1543c <close@plt+0x48c0>
   15580:	orr	r6, r0, #3328	; 0xd00
   15584:	b	1552c <close@plt+0x49b0>
   15588:	mov	r2, r6
   1558c:	add	r1, r4, #5
   15590:	mov	r0, r5
   15594:	bl	153bc <close@plt+0x4840>
   15598:	lsrs	r3, r0, #8
   1559c:	beq	15738 <close@plt+0x4bbc>
   155a0:	cmp	r8, #1
   155a4:	beq	1552c <close@plt+0x49b0>
   155a8:	mov	r2, #6
   155ac:	ldr	r1, [sp, #28]
   155b0:	mov	r0, r4
   155b4:	bl	10b64 <strncmp@plt>
   155b8:	subs	r2, r0, #0
   155bc:	beq	15628 <close@plt+0x4aac>
   155c0:	ldr	r3, [r5, #32]
   155c4:	ldr	r2, [pc, #1132]	; 15a38 <close@plt+0x4ebc>
   155c8:	add	r3, r3, r3, lsl #1
   155cc:	ldr	sl, [r9, r2]
   155d0:	add	r3, sl, r3, lsl #2
   155d4:	ldr	r7, [r3, #4]
   155d8:	ldr	r6, [r3, #8]
   155dc:	b	15460 <close@plt+0x48e4>
   155e0:	ldr	r1, [pc, #1112]	; 15a40 <close@plt+0x4ec4>
   155e4:	mov	r6, #0
   155e8:	add	r1, pc, r1
   155ec:	b	15604 <close@plt+0x4a88>
   155f0:	add	r6, r6, #1
   155f4:	cmp	r6, #64	; 0x40
   155f8:	beq	15640 <close@plt+0x4ac4>
   155fc:	ldr	r3, [r9, r3]
   15600:	ldr	r1, [r3, r6, lsl #3]
   15604:	mov	r0, r4
   15608:	bl	109cc <strcmp@plt>
   1560c:	ldr	r3, [pc, #1072]	; 15a44 <close@plt+0x4ec8>
   15610:	cmp	r0, #0
   15614:	bne	155f0 <close@plt+0x4a74>
   15618:	ldr	r3, [r9, r3]
   1561c:	add	r6, r3, r6, lsl #3
   15620:	ldr	r4, [r6, #4]
   15624:	b	153fc <close@plt+0x4880>
   15628:	add	r1, r4, #6
   1562c:	mov	r0, r5
   15630:	bl	153bc <close@plt+0x4840>
   15634:	lsrs	r3, r0, #8
   15638:	bne	155c0 <close@plt+0x4a44>
   1563c:	b	15580 <close@plt+0x4a04>
   15640:	cmp	r8, #1
   15644:	beq	156d8 <close@plt+0x4b5c>
   15648:	ldr	r7, [pc, #1016]	; 15a48 <close@plt+0x4ecc>
   1564c:	ldr	r1, [pc, #1016]	; 15a4c <close@plt+0x4ed0>
   15650:	add	r7, pc, r7
   15654:	add	r1, pc, r1
   15658:	mov	r6, #0
   1565c:	b	15670 <close@plt+0x4af4>
   15660:	add	r6, r6, #1
   15664:	cmp	r6, #96	; 0x60
   15668:	beq	15804 <close@plt+0x4c88>
   1566c:	ldr	r1, [r7, #4]
   15670:	mov	r0, r4
   15674:	bl	109cc <strcmp@plt>
   15678:	add	r7, r7, #8
   1567c:	cmp	r0, #0
   15680:	bne	15660 <close@plt+0x4ae4>
   15684:	ldr	r3, [r5, #28]
   15688:	cmp	r3, #5
   1568c:	ble	156d0 <close@plt+0x4b54>
   15690:	ldr	r1, [pc, #952]	; 15a50 <close@plt+0x4ed4>
   15694:	mov	r2, #5
   15698:	add	r1, pc, r1
   1569c:	bl	109fc <dcgettext@plt>
   156a0:	ldr	r3, [pc, #940]	; 15a54 <close@plt+0x4ed8>
   156a4:	ldr	r2, [pc, #940]	; 15a58 <close@plt+0x4edc>
   156a8:	add	r3, pc, r3
   156ac:	add	r3, r3, #24
   156b0:	str	r3, [sp]
   156b4:	str	r4, [sp, #8]
   156b8:	ldr	r3, [pc, #924]	; 15a5c <close@plt+0x4ee0>
   156bc:	add	r2, pc, r2
   156c0:	mov	r1, #6
   156c4:	str	r0, [sp, #4]
   156c8:	mov	r0, r5
   156cc:	bl	11578 <close@plt+0x9fc>
   156d0:	add	r6, r6, #160	; 0xa0
   156d4:	b	1552c <close@plt+0x49b0>
   156d8:	ldr	r8, [r5, #32]
   156dc:	add	r3, r8, r8, lsl #1
   156e0:	add	r3, sl, r3, lsl #2
   156e4:	ldr	r6, [r3, #4]
   156e8:	cmp	r6, #0
   156ec:	beq	15740 <close@plt+0x4bc4>
   156f0:	ldr	r3, [r3, #8]
   156f4:	cmp	r3, #255	; 0xff
   156f8:	bhi	15740 <close@plt+0x4bc4>
   156fc:	rsb	r3, r3, r3, lsl #29
   15700:	add	r7, r6, r3, lsl #3
   15704:	add	r7, r7, #2048	; 0x800
   15708:	b	15718 <close@plt+0x4b9c>
   1570c:	add	r6, r6, #8
   15710:	cmp	r6, r7
   15714:	beq	15740 <close@plt+0x4bc4>
   15718:	ldr	r1, [r6, #4]
   1571c:	mov	r0, r4
   15720:	bl	109cc <strcmp@plt>
   15724:	cmp	r0, #0
   15728:	bne	1570c <close@plt+0x4b90>
   1572c:	ldrh	r6, [r6]
   15730:	eor	r6, r6, #61440	; 0xf000
   15734:	b	1552c <close@plt+0x49b0>
   15738:	orr	r6, r0, #2048	; 0x800
   1573c:	b	1552c <close@plt+0x49b0>
   15740:	mov	r9, #0
   15744:	cmp	r8, r9
   15748:	beq	15798 <close@plt+0x4c1c>
   1574c:	ldr	r6, [sl, #4]
   15750:	cmp	r6, #0
   15754:	beq	15798 <close@plt+0x4c1c>
   15758:	ldr	r3, [sl, #8]
   1575c:	cmp	r3, #255	; 0xff
   15760:	bhi	15798 <close@plt+0x4c1c>
   15764:	rsb	r3, r3, r3, lsl #29
   15768:	add	r7, r6, r3, lsl #3
   1576c:	add	r7, r7, #2048	; 0x800
   15770:	b	15780 <close@plt+0x4c04>
   15774:	add	r6, r6, #8
   15778:	cmp	r6, r7
   1577c:	beq	15798 <close@plt+0x4c1c>
   15780:	ldr	r1, [r6, #4]
   15784:	mov	r0, r4
   15788:	bl	109cc <strcmp@plt>
   1578c:	cmp	r0, #0
   15790:	bne	15774 <close@plt+0x4bf8>
   15794:	b	1572c <close@plt+0x4bb0>
   15798:	add	r9, r9, #1
   1579c:	cmp	r9, #18
   157a0:	add	sl, sl, #12
   157a4:	bne	15744 <close@plt+0x4bc8>
   157a8:	ldr	r3, [r5, #28]
   157ac:	cmp	r3, #2
   157b0:	mvnle	r6, #0
   157b4:	ble	1552c <close@plt+0x49b0>
   157b8:	ldr	r1, [pc, #672]	; 15a60 <close@plt+0x4ee4>
   157bc:	mov	r2, #5
   157c0:	add	r1, pc, r1
   157c4:	mov	r0, #0
   157c8:	bl	109fc <dcgettext@plt>
   157cc:	ldr	r3, [pc, #656]	; 15a64 <close@plt+0x4ee8>
   157d0:	ldr	r2, [pc, #656]	; 15a68 <close@plt+0x4eec>
   157d4:	add	r3, pc, r3
   157d8:	add	r3, r3, #24
   157dc:	str	r3, [sp]
   157e0:	str	r4, [sp, #8]
   157e4:	mov	r3, #376	; 0x178
   157e8:	add	r2, pc, r2
   157ec:	mov	r1, #3
   157f0:	mvn	r6, #0
   157f4:	str	r0, [sp, #4]
   157f8:	mov	r0, r5
   157fc:	bl	11578 <close@plt+0x9fc>
   15800:	b	1552c <close@plt+0x49b0>
   15804:	ldr	r7, [pc, #608]	; 15a6c <close@plt+0x4ef0>
   15808:	ldr	r1, [pc, #608]	; 15a70 <close@plt+0x4ef4>
   1580c:	add	r7, pc, r7
   15810:	add	r1, pc, r1
   15814:	add	r7, r7, #768	; 0x300
   15818:	mov	r6, #0
   1581c:	b	15830 <close@plt+0x4cb4>
   15820:	add	r6, r6, #1
   15824:	cmp	r6, #96	; 0x60
   15828:	beq	15894 <close@plt+0x4d18>
   1582c:	ldr	r1, [r7, #4]
   15830:	mov	r0, r4
   15834:	bl	109cc <strcmp@plt>
   15838:	add	r7, r7, #8
   1583c:	cmp	r0, #0
   15840:	bne	15820 <close@plt+0x4ca4>
   15844:	ldr	r3, [r5, #28]
   15848:	cmp	r3, #5
   1584c:	ble	156d0 <close@plt+0x4b54>
   15850:	ldr	r1, [pc, #540]	; 15a74 <close@plt+0x4ef8>
   15854:	mov	r2, #5
   15858:	add	r1, pc, r1
   1585c:	bl	109fc <dcgettext@plt>
   15860:	ldr	r3, [pc, #528]	; 15a78 <close@plt+0x4efc>
   15864:	ldr	r2, [pc, #528]	; 15a7c <close@plt+0x4f00>
   15868:	add	r3, pc, r3
   1586c:	add	r3, r3, #24
   15870:	str	r3, [sp]
   15874:	str	r4, [sp, #8]
   15878:	ldr	r3, [pc, #512]	; 15a80 <close@plt+0x4f04>
   1587c:	add	r2, pc, r2
   15880:	mov	r1, #6
   15884:	str	r0, [sp, #4]
   15888:	mov	r0, r5
   1588c:	bl	11578 <close@plt+0x9fc>
   15890:	b	156d0 <close@plt+0x4b54>
   15894:	ldr	r7, [pc, #488]	; 15a84 <close@plt+0x4f08>
   15898:	mov	r6, #0
   1589c:	add	r7, pc, r7
   158a0:	add	r7, r7, #1536	; 0x600
   158a4:	b	158b4 <close@plt+0x4d38>
   158a8:	add	r6, r6, #1
   158ac:	cmp	r6, #96	; 0x60
   158b0:	beq	1591c <close@plt+0x4da0>
   158b4:	ldr	r1, [r7, #4]
   158b8:	mov	r0, r4
   158bc:	bl	109cc <strcmp@plt>
   158c0:	add	r7, r7, #8
   158c4:	cmp	r0, #0
   158c8:	bne	158a8 <close@plt+0x4d2c>
   158cc:	ldr	r3, [r5, #28]
   158d0:	cmp	r3, #5
   158d4:	ble	156d0 <close@plt+0x4b54>
   158d8:	ldr	r1, [pc, #424]	; 15a88 <close@plt+0x4f0c>
   158dc:	mov	r2, #5
   158e0:	add	r1, pc, r1
   158e4:	bl	109fc <dcgettext@plt>
   158e8:	ldr	r3, [pc, #412]	; 15a8c <close@plt+0x4f10>
   158ec:	ldr	r2, [pc, #412]	; 15a90 <close@plt+0x4f14>
   158f0:	add	r3, pc, r3
   158f4:	add	r3, r3, #24
   158f8:	str	r3, [sp]
   158fc:	str	r4, [sp, #8]
   15900:	ldr	r3, [pc, #396]	; 15a94 <close@plt+0x4f18>
   15904:	add	r2, pc, r2
   15908:	mov	r1, #6
   1590c:	str	r0, [sp, #4]
   15910:	mov	r0, r5
   15914:	bl	11578 <close@plt+0x9fc>
   15918:	b	156d0 <close@plt+0x4b54>
   1591c:	ldr	r7, [pc, #372]	; 15a98 <close@plt+0x4f1c>
   15920:	mov	r6, #0
   15924:	add	r7, pc, r7
   15928:	add	r7, r7, #2304	; 0x900
   1592c:	add	r3, r7, r6, lsl #3
   15930:	mov	r0, r4
   15934:	ldr	r1, [r3, #4]
   15938:	bl	109cc <strcmp@plt>
   1593c:	cmp	r0, #0
   15940:	beq	15988 <close@plt+0x4e0c>
   15944:	add	r6, r6, #1
   15948:	cmp	r6, #96	; 0x60
   1594c:	bne	1592c <close@plt+0x4db0>
   15950:	ldr	r7, [pc, #324]	; 15a9c <close@plt+0x4f20>
   15954:	mov	r6, #0
   15958:	add	r7, pc, r7
   1595c:	add	r7, r7, #3072	; 0xc00
   15960:	add	r3, r7, r6, lsl #3
   15964:	mov	r0, r4
   15968:	ldr	r1, [r3, #4]
   1596c:	bl	109cc <strcmp@plt>
   15970:	cmp	r0, #0
   15974:	beq	159d8 <close@plt+0x4e5c>
   15978:	add	r6, r6, #1
   1597c:	cmp	r6, #96	; 0x60
   15980:	bne	15960 <close@plt+0x4de4>
   15984:	b	157a8 <close@plt+0x4c2c>
   15988:	ldr	r3, [r5, #28]
   1598c:	cmp	r3, #5
   15990:	ble	156d0 <close@plt+0x4b54>
   15994:	ldr	r1, [pc, #260]	; 15aa0 <close@plt+0x4f24>
   15998:	mov	r2, #5
   1599c:	add	r1, pc, r1
   159a0:	bl	109fc <dcgettext@plt>
   159a4:	ldr	r3, [pc, #248]	; 15aa4 <close@plt+0x4f28>
   159a8:	ldr	r2, [pc, #248]	; 15aa8 <close@plt+0x4f2c>
   159ac:	add	r3, pc, r3
   159b0:	add	r3, r3, #24
   159b4:	str	r3, [sp]
   159b8:	str	r4, [sp, #8]
   159bc:	ldr	r3, [pc, #232]	; 15aac <close@plt+0x4f30>
   159c0:	add	r2, pc, r2
   159c4:	mov	r1, #6
   159c8:	str	r0, [sp, #4]
   159cc:	mov	r0, r5
   159d0:	bl	11578 <close@plt+0x9fc>
   159d4:	b	156d0 <close@plt+0x4b54>
   159d8:	ldr	r3, [r5, #28]
   159dc:	cmp	r3, #5
   159e0:	ble	156d0 <close@plt+0x4b54>
   159e4:	ldr	r1, [pc, #196]	; 15ab0 <close@plt+0x4f34>
   159e8:	mov	r2, #5
   159ec:	add	r1, pc, r1
   159f0:	bl	109fc <dcgettext@plt>
   159f4:	ldr	r3, [pc, #184]	; 15ab4 <close@plt+0x4f38>
   159f8:	ldr	r2, [pc, #184]	; 15ab8 <close@plt+0x4f3c>
   159fc:	add	r3, pc, r3
   15a00:	add	r3, r3, #24
   15a04:	str	r3, [sp]
   15a08:	str	r4, [sp, #8]
   15a0c:	ldr	r3, [pc, #168]	; 15abc <close@plt+0x4f40>
   15a10:	add	r2, pc, r2
   15a14:	mov	r1, #6
   15a18:	str	r0, [sp, #4]
   15a1c:	mov	r0, r5
   15a20:	bl	11578 <close@plt+0x9fc>
   15a24:	b	156d0 <close@plt+0x4b54>
   15a28:	andeq	r1, r0, r8, lsr #27
   15a2c:	andeq	r1, r0, r0, lsr #27
   15a30:	andeq	ip, r1, r0, lsl #24
   15a34:	muleq	r0, r0, sp
   15a38:	andeq	r0, r0, r0, asr #1
   15a3c:	strheq	r0, [r0], -r8
   15a40:	andeq	r1, r0, ip, ror #22
   15a44:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   15a48:	andeq	r7, r1, r0, lsr #23
   15a4c:	andeq	r1, r0, ip, lsl #22
   15a50:	andeq	r1, r0, r8, ror #21
   15a54:	andeq	r1, r0, r8, ror #19
   15a58:	andeq	r1, r0, ip, asr sl
   15a5c:	andeq	r0, r0, fp, asr r1
   15a60:	andeq	r1, r0, r8, lsr sl
   15a64:			; <UNDEFINED> instruction: 0x000018bc
   15a68:	andeq	r1, r0, r0, lsr r9
   15a6c:	andeq	r7, r1, r4, ror #19
   15a70:	andeq	r1, r0, r0, asr r9
   15a74:	andeq	r1, r0, r0, asr #18
   15a78:	andeq	r1, r0, r8, lsr #16
   15a7c:	muleq	r0, ip, r8
   15a80:	andeq	r0, r0, r1, ror #2
   15a84:	andeq	r7, r1, r4, asr r9
   15a88:	ldrdeq	r1, [r0], -r0
   15a8c:	andeq	r1, r0, r0, lsr #15
   15a90:	andeq	r1, r0, r4, lsl r8
   15a94:	andeq	r0, r0, r7, ror #2
   15a98:	andeq	r7, r1, ip, asr #17
   15a9c:	muleq	r1, r8, r8
   15aa0:	andeq	r1, r0, ip, lsr #16
   15aa4:	andeq	r1, r0, r4, ror #13
   15aa8:	andeq	r1, r0, r8, asr r7
   15aac:	andeq	r0, r0, sp, ror #2
   15ab0:	strdeq	r1, [r0], -r4
   15ab4:	muleq	r0, r4, r6
   15ab8:	andeq	r1, r0, r8, lsl #14
   15abc:	andeq	r0, r0, r3, ror r1
   15ac0:	mov	r2, #1
   15ac4:	b	153bc <close@plt+0x4840>
   15ac8:	cmn	r2, #1
   15acc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ad0:	asr	r6, r1, #8
   15ad4:	ldreq	r5, [r0]
   15ad8:	movne	r5, r2
   15adc:	mov	r7, r2
   15ae0:	lsreq	r5, r5, #4
   15ae4:	andeq	r5, r5, #1
   15ae8:	cmp	r6, #8
   15aec:	cmpne	r1, #127	; 0x7f
   15af0:	mov	r8, r0
   15af4:	mov	r4, r1
   15af8:	movle	r9, #1
   15afc:	movgt	r9, #0
   15b00:	bgt	15b0c <close@plt+0x4f90>
   15b04:	mov	r0, r4
   15b08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b0c:	ldr	r3, [pc, #172]	; 15bc0 <close@plt+0x5044>
   15b10:	cmp	r1, r3
   15b14:	movgt	r3, #1
   15b18:	movle	r3, #0
   15b1c:	ble	15b54 <close@plt+0x4fd8>
   15b20:	eor	r2, r1, #61440	; 0xf000
   15b24:	cmp	r2, #127	; 0x7f
   15b28:	movle	r4, r2
   15b2c:	ble	15b04 <close@plt+0x4f88>
   15b30:	cmp	r5, #1
   15b34:	bne	15b60 <close@plt+0x4fe4>
   15b38:	cmp	r7, #1
   15b3c:	movne	r5, #0
   15b40:	andeq	r5, r5, #1
   15b44:	cmp	r5, #0
   15b48:	eorne	r4, r4, #61440	; 0xf000
   15b4c:	mov	r0, r4
   15b50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b54:	sub	r9, r5, #1
   15b58:	clz	r9, r9
   15b5c:	lsr	r9, r9, #5
   15b60:	orrs	r3, r3, r5
   15b64:	beq	15b04 <close@plt+0x4f88>
   15b68:	mov	r1, r4
   15b6c:	mov	r0, r8
   15b70:	bl	15260 <close@plt+0x46e4>
   15b74:	subs	r1, r0, #0
   15b78:	beq	15b8c <close@plt+0x5010>
   15b7c:	mov	r2, r5
   15b80:	mov	r0, r8
   15b84:	bl	153bc <close@plt+0x4840>
   15b88:	mov	r4, r0
   15b8c:	cmp	r6, #11
   15b90:	movne	r6, #0
   15b94:	andeq	r6, r9, #1
   15b98:	cmp	r6, #0
   15b9c:	bne	15bb0 <close@plt+0x5034>
   15ba0:	cmp	r4, #4096	; 0x1000
   15ba4:	movlt	r5, #0
   15ba8:	movge	r5, #1
   15bac:	b	15b38 <close@plt+0x4fbc>
   15bb0:	eor	r3, r4, #61440	; 0xf000
   15bb4:	cmp	r3, #255	; 0xff
   15bb8:	orrle	r4, r3, #2816	; 0xb00
   15bbc:	b	15ba0 <close@plt+0x5024>
   15bc0:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   15bc4:	lsrs	r3, r1, #8
   15bc8:	bne	15bf0 <close@plt+0x5074>
   15bcc:	ldr	r3, [r0]
   15bd0:	lsr	r3, r3, #4
   15bd4:	eor	r3, r3, #1
   15bd8:	cmp	r1, #127	; 0x7f
   15bdc:	orrle	r3, r3, #1
   15be0:	tst	r3, #1
   15be4:	beq	15bf0 <close@plt+0x5074>
   15be8:	orr	r0, r1, #2816	; 0xb00
   15bec:	bx	lr
   15bf0:	eor	r3, r1, #61440	; 0xf000
   15bf4:	cmp	r3, #255	; 0xff
   15bf8:	bgt	15c04 <close@plt+0x5088>
   15bfc:	orr	r0, r3, #2816	; 0xb00
   15c00:	bx	lr
   15c04:	mvn	r2, #0
   15c08:	b	15ac8 <close@plt+0x4f4c>
   15c0c:	push	{r4, r5, r6, lr}
   15c10:	add	r5, r1, #1
   15c14:	mov	r4, r0
   15c18:	ldrd	r0, [r0]
   15c1c:	mul	r1, r1, r5
   15c20:	bl	10a20 <realloc@plt>
   15c24:	subs	r6, r0, #0
   15c28:	beq	15c58 <close@plt+0x50dc>
   15c2c:	ldr	r0, [r4, #12]
   15c30:	ldr	r3, [r4, #4]
   15c34:	sub	r2, r5, r0
   15c38:	mov	r1, #0
   15c3c:	mul	r2, r3, r2
   15c40:	mla	r0, r0, r3, r6
   15c44:	bl	10aec <memset@plt>
   15c48:	str	r6, [r4]
   15c4c:	str	r5, [r4, #12]
   15c50:	mov	r0, #0
   15c54:	pop	{r4, r5, r6, pc}
   15c58:	mvn	r0, #11
   15c5c:	pop	{r4, r5, r6, pc}
   15c60:	push	{r4, r5, r6, lr}
   15c64:	subs	r4, r0, #0
   15c68:	beq	15cac <close@plt+0x5130>
   15c6c:	mov	r3, #0
   15c70:	str	r3, [r4, #8]
   15c74:	mov	r0, r2
   15c78:	mov	r5, r2
   15c7c:	mov	r6, r1
   15c80:	bl	109c0 <calloc@plt>
   15c84:	adds	r3, r5, #0
   15c88:	movne	r3, #1
   15c8c:	str	r5, [r4, #12]
   15c90:	cmp	r0, #0
   15c94:	movne	r3, #0
   15c98:	cmp	r3, #0
   15c9c:	stm	r4, {r0, r6}
   15ca0:	mvnne	r0, #11
   15ca4:	moveq	r0, #0
   15ca8:	pop	{r4, r5, r6, pc}
   15cac:	mvn	r0, #21
   15cb0:	pop	{r4, r5, r6, pc}
   15cb4:	push	{r4, lr}
   15cb8:	subs	r4, r0, #0
   15cbc:	beq	15ce0 <close@plt+0x5164>
   15cc0:	ldr	r0, [r4]
   15cc4:	bl	109e4 <free@plt>
   15cc8:	mov	r0, #0
   15ccc:	str	r0, [r4]
   15cd0:	str	r0, [r4, #4]
   15cd4:	str	r0, [r4, #8]
   15cd8:	str	r0, [r4, #12]
   15cdc:	pop	{r4, pc}
   15ce0:	mvn	r0, #21
   15ce4:	pop	{r4, pc}
   15ce8:	push	{r4, lr}
   15cec:	subs	r4, r0, #0
   15cf0:	beq	15d18 <close@plt+0x519c>
   15cf4:	ldr	r3, [r4, #4]
   15cf8:	ldr	r2, [r4, #12]
   15cfc:	mov	r1, #0
   15d00:	ldr	r0, [r4]
   15d04:	mul	r2, r2, r3
   15d08:	bl	10aec <memset@plt>
   15d0c:	mov	r0, #0
   15d10:	str	r0, [r4, #8]
   15d14:	pop	{r4, pc}
   15d18:	mvn	r0, #21
   15d1c:	pop	{r4, pc}
   15d20:	cmp	r0, #0
   15d24:	bxeq	lr
   15d28:	ldr	r3, [r0, #12]
   15d2c:	cmp	r3, r1
   15d30:	bls	15d7c <close@plt+0x5200>
   15d34:	ldr	r2, [r0, #4]
   15d38:	ldr	r3, [r0]
   15d3c:	cmp	r2, #0
   15d40:	mul	r1, r2, r1
   15d44:	beq	15d7c <close@plt+0x5200>
   15d48:	ldrb	r0, [r3, r1]
   15d4c:	cmp	r0, #0
   15d50:	bne	15d84 <close@plt+0x5208>
   15d54:	add	r0, r1, #1
   15d58:	add	r1, r3, r1
   15d5c:	add	r3, r3, r0
   15d60:	add	r0, r1, r2
   15d64:	b	15d74 <close@plt+0x51f8>
   15d68:	ldrb	r2, [r3], #1
   15d6c:	cmp	r2, #0
   15d70:	bne	15d84 <close@plt+0x5208>
   15d74:	cmp	r3, r0
   15d78:	bne	15d68 <close@plt+0x51ec>
   15d7c:	mov	r0, #0
   15d80:	bx	lr
   15d84:	mov	r0, #1
   15d88:	bx	lr
   15d8c:	cmp	r0, #0
   15d90:	bxeq	lr
   15d94:	ldr	r3, [r0, #12]
   15d98:	cmp	r3, r1
   15d9c:	ldmhi	r0, {r0, r3}
   15da0:	mlahi	r0, r3, r1, r0
   15da4:	movls	r0, #0
   15da8:	bx	lr
   15dac:	cmp	r0, #0
   15db0:	bxeq	lr
   15db4:	ldr	r3, [r0, #12]
   15db8:	cmp	r3, r1
   15dbc:	ldrhi	r3, [r0]
   15dc0:	ldrhi	r0, [r3, r1, lsl #2]
   15dc4:	movls	r0, #0
   15dc8:	bx	lr
   15dcc:	push	{r4, r5, r6, lr}
   15dd0:	subs	r4, r0, #0
   15dd4:	beq	15e1c <close@plt+0x52a0>
   15dd8:	ldr	r3, [r4, #12]
   15ddc:	mov	r5, r1
   15de0:	cmp	r1, r3
   15de4:	mov	r6, r2
   15de8:	bcc	15df8 <close@plt+0x527c>
   15dec:	bl	15c0c <close@plt+0x5090>
   15df0:	cmp	r0, #0
   15df4:	poplt	{r4, r5, r6, pc}
   15df8:	ldm	r4, {r0, r2}
   15dfc:	mov	r1, r6
   15e00:	mla	r0, r5, r2, r0
   15e04:	bl	109f0 <memcpy@plt>
   15e08:	ldr	r3, [r4, #8]
   15e0c:	mov	r0, #0
   15e10:	add	r3, r3, #1
   15e14:	str	r3, [r4, #8]
   15e18:	pop	{r4, r5, r6, pc}
   15e1c:	mvn	r0, #21
   15e20:	pop	{r4, r5, r6, pc}
   15e24:	subs	r3, r0, #0
   15e28:	beq	15e7c <close@plt+0x5300>
   15e2c:	ldr	ip, [r3, #12]
   15e30:	push	{r4, r5, r6, lr}
   15e34:	cmp	ip, r1
   15e38:	mov	r5, r1
   15e3c:	bls	15e74 <close@plt+0x52f8>
   15e40:	mov	r4, r3
   15e44:	bl	15d20 <close@plt+0x51a4>
   15e48:	cmp	r0, #0
   15e4c:	popeq	{r4, r5, r6, pc}
   15e50:	ldm	r4, {r0, r2}
   15e54:	mov	r1, #0
   15e58:	mla	r0, r5, r2, r0
   15e5c:	bl	10aec <memset@plt>
   15e60:	ldr	r3, [r4, #8]
   15e64:	mov	r0, #0
   15e68:	sub	r3, r3, #1
   15e6c:	str	r3, [r4, #8]
   15e70:	pop	{r4, r5, r6, pc}
   15e74:	mvn	r0, #21
   15e78:	pop	{r4, r5, r6, pc}
   15e7c:	mvn	r0, #21
   15e80:	bx	lr
   15e84:	ldr	r3, [r0, #8]
   15e88:	ldr	r2, [r0, #12]
   15e8c:	push	{r4, r5, r6, lr}
   15e90:	cmp	r3, r2
   15e94:	mov	r4, r0
   15e98:	mov	r5, r1
   15e9c:	bcc	15eb4 <close@plt+0x5338>
   15ea0:	mov	r1, r3
   15ea4:	bl	15c0c <close@plt+0x5090>
   15ea8:	cmp	r0, #0
   15eac:	poplt	{r4, r5, r6, pc}
   15eb0:	ldr	r3, [r4, #8]
   15eb4:	ldm	r4, {r0, r2}
   15eb8:	mov	r1, r5
   15ebc:	mla	r0, r3, r2, r0
   15ec0:	bl	109f0 <memcpy@plt>
   15ec4:	ldr	r3, [r4, #8]
   15ec8:	mov	r0, #0
   15ecc:	add	r3, r3, #1
   15ed0:	str	r3, [r4, #8]
   15ed4:	pop	{r4, r5, r6, pc}
   15ed8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15edc:	mov	r7, r0
   15ee0:	ldr	r6, [pc, #72]	; 15f30 <close@plt+0x53b4>
   15ee4:	ldr	r5, [pc, #72]	; 15f34 <close@plt+0x53b8>
   15ee8:	add	r6, pc, r6
   15eec:	add	r5, pc, r5
   15ef0:	sub	r6, r6, r5
   15ef4:	mov	r8, r1
   15ef8:	mov	r9, r2
   15efc:	bl	109a0 <calloc@plt-0x20>
   15f00:	asrs	r6, r6, #2
   15f04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f08:	mov	r4, #0
   15f0c:	add	r4, r4, #1
   15f10:	ldr	r3, [r5], #4
   15f14:	mov	r2, r9
   15f18:	mov	r1, r8
   15f1c:	mov	r0, r7
   15f20:	blx	r3
   15f24:	cmp	r6, r4
   15f28:	bne	15f0c <close@plt+0x5390>
   15f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15f30:	muleq	r1, r4, r2
   15f34:	andeq	r7, r1, ip, lsl #5
   15f38:	bx	lr

Disassembly of section .fini:

00015f3c <.fini>:
   15f3c:	push	{r3, lr}
   15f40:	pop	{r3, pc}
