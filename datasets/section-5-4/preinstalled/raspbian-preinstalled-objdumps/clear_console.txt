
raspbian-preinstalled/clear_console:     file format elf32-littlearm


Disassembly of section .init:

0001078c <.init>:
   1078c:	push	{r3, lr}
   10790:	bl	10a98 <close@plt+0x1e4>
   10794:	pop	{r3, pc}

Disassembly of section .plt:

00010798 <tputs@plt-0x14>:
   10798:	push	{lr}		; (str lr, [sp, #-4]!)
   1079c:	ldr	lr, [pc, #4]	; 107a8 <tputs@plt-0x4>
   107a0:	add	lr, pc, lr
   107a4:	ldr	pc, [lr, #8]!
   107a8:	andeq	r1, r1, r8, asr r8

000107ac <tputs@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2136]!	; 0x858

000107b8 <strcmp@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #69632	; 0x11000
   107c0:	ldr	pc, [ip, #2128]!	; 0x850

000107c4 <__stack_chk_fail@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #69632	; 0x11000
   107cc:	ldr	pc, [ip, #2120]!	; 0x848

000107d0 <perror@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #69632	; 0x11000
   107d8:	ldr	pc, [ip, #2112]!	; 0x840

000107dc <fwrite@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #69632	; 0x11000
   107e4:	ldr	pc, [ip, #2104]!	; 0x838

000107e8 <ioctl@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #69632	; 0x11000
   107f0:	ldr	pc, [ip, #2096]!	; 0x830

000107f4 <getenv@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #69632	; 0x11000
   107fc:	ldr	pc, [ip, #2088]!	; 0x828

00010800 <__libc_start_main@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #69632	; 0x11000
   10808:	ldr	pc, [ip, #2080]!	; 0x820

0001080c <__gmon_start__@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #69632	; 0x11000
   10814:	ldr	pc, [ip, #2072]!	; 0x818

00010818 <open@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #69632	; 0x11000
   10820:	ldr	pc, [ip, #2064]!	; 0x810

00010824 <getopt_long@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #69632	; 0x11000
   1082c:	ldr	pc, [ip, #2056]!	; 0x808

00010830 <exit@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #69632	; 0x11000
   10838:	ldr	pc, [ip, #2048]!	; 0x800

0001083c <ttyname@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #69632	; 0x11000
   10844:	ldr	pc, [ip, #2040]!	; 0x7f8

00010848 <strlen@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #69632	; 0x11000
   10850:	ldr	pc, [ip, #2032]!	; 0x7f0

00010854 <__errno_location@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #69632	; 0x11000
   1085c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010860 <write@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #69632	; 0x11000
   10868:	ldr	pc, [ip, #2016]!	; 0x7e0

0001086c <__fprintf_chk@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #69632	; 0x11000
   10874:	ldr	pc, [ip, #2008]!	; 0x7d8

00010878 <setupterm@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #69632	; 0x11000
   10880:	ldr	pc, [ip, #2000]!	; 0x7d0

00010884 <strrchr@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #69632	; 0x11000
   1088c:	ldr	pc, [ip, #1992]!	; 0x7c8

00010890 <putc@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #69632	; 0x11000
   10898:	ldr	pc, [ip, #1984]!	; 0x7c0

0001089c <strncmp@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #69632	; 0x11000
   108a4:	ldr	pc, [ip, #1976]!	; 0x7b8

000108a8 <abort@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #69632	; 0x11000
   108b0:	ldr	pc, [ip, #1968]!	; 0x7b0

000108b4 <close@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #69632	; 0x11000
   108bc:	ldr	pc, [ip, #1960]!	; 0x7a8

Disassembly of section .text:

000108c0 <.text>:
   108c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108c4:	sub	sp, sp, #20
   108c8:	ldr	sl, [pc, #348]	; 10a2c <close@plt+0x178>
   108cc:	mov	r4, r1
   108d0:	mov	r6, r0
   108d4:	ldr	r3, [sl]
   108d8:	ldr	r0, [r1]
   108dc:	mov	r1, #47	; 0x2f
   108e0:	str	r3, [sp, #12]
   108e4:	bl	10884 <strrchr@plt>
   108e8:	ldr	r5, [pc, #320]	; 10a30 <close@plt+0x17c>
   108ec:	ldr	r8, [pc, #320]	; 10a34 <close@plt+0x180>
   108f0:	ldr	r7, [pc, #320]	; 10a38 <close@plt+0x184>
   108f4:	ldr	fp, [pc, #320]	; 10a3c <close@plt+0x188>
   108f8:	add	r9, sp, #8
   108fc:	cmp	r0, #0
   10900:	str	r0, [r5]
   10904:	ldreq	r0, [r4]
   10908:	addne	r0, r0, #1
   1090c:	str	r0, [r5]
   10910:	str	r9, [sp]
   10914:	mov	r3, r8
   10918:	mov	r2, r7
   1091c:	mov	r1, r4
   10920:	mov	r0, r6
   10924:	bl	10824 <getopt_long@plt>
   10928:	cmn	r0, #1
   1092c:	beq	10988 <close@plt+0xd4>
   10930:	cmp	r0, #104	; 0x68
   10934:	beq	1097c <close@plt+0xc8>
   10938:	cmp	r0, #113	; 0x71
   1093c:	beq	10970 <close@plt+0xbc>
   10940:	cmp	r0, #86	; 0x56
   10944:	bne	10910 <close@plt+0x5c>
   10948:	ldr	r1, [pc, #240]	; 10a40 <close@plt+0x18c>
   1094c:	ldr	r2, [pc, #240]	; 10a44 <close@plt+0x190>
   10950:	ldr	r3, [r5]
   10954:	ldr	r0, [r1]
   10958:	str	r2, [sp]
   1095c:	mov	r1, #1
   10960:	ldr	r2, [pc, #224]	; 10a48 <close@plt+0x194>
   10964:	bl	1086c <__fprintf_chk@plt>
   10968:	mov	r0, #0
   1096c:	bl	10830 <exit@plt>
   10970:	mov	r3, #1
   10974:	str	r3, [fp]
   10978:	b	10910 <close@plt+0x5c>
   1097c:	bl	10b5c <close@plt+0x2a8>
   10980:	mov	r0, #0
   10984:	bl	10830 <exit@plt>
   10988:	ldr	r3, [pc, #188]	; 10a4c <close@plt+0x198>
   1098c:	ldr	r3, [r3]
   10990:	cmp	r3, r6
   10994:	blt	109c8 <close@plt+0x114>
   10998:	mov	r0, #0
   1099c:	bl	10cec <close@plt+0x438>
   109a0:	cmn	r0, #1
   109a4:	beq	109e4 <close@plt+0x130>
   109a8:	bl	10e1c <close@plt+0x568>
   109ac:	ldr	r2, [sp, #12]
   109b0:	ldr	r3, [sl]
   109b4:	mov	r0, #0
   109b8:	cmp	r2, r3
   109bc:	bne	109e0 <close@plt+0x12c>
   109c0:	add	sp, sp, #20
   109c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109c8:	ldr	r3, [pc, #108]	; 10a3c <close@plt+0x188>
   109cc:	ldr	r3, [r3]
   109d0:	cmp	r3, #0
   109d4:	beq	10a10 <close@plt+0x15c>
   109d8:	mov	r0, #1
   109dc:	bl	10830 <exit@plt>
   109e0:	bl	107c4 <__stack_chk_fail@plt>
   109e4:	ldr	r3, [pc, #80]	; 10a3c <close@plt+0x188>
   109e8:	ldr	r3, [r3]
   109ec:	cmp	r3, #0
   109f0:	bne	109d8 <close@plt+0x124>
   109f4:	ldr	r1, [pc, #84]	; 10a50 <close@plt+0x19c>
   109f8:	ldr	r3, [r5]
   109fc:	ldr	r2, [pc, #80]	; 10a54 <close@plt+0x1a0>
   10a00:	ldr	r0, [r1]
   10a04:	mov	r1, #1
   10a08:	bl	1086c <__fprintf_chk@plt>
   10a0c:	b	109d8 <close@plt+0x124>
   10a10:	ldr	r1, [pc, #56]	; 10a50 <close@plt+0x19c>
   10a14:	ldr	r3, [r5]
   10a18:	ldr	r2, [pc, #56]	; 10a58 <close@plt+0x1a4>
   10a1c:	ldr	r0, [r1]
   10a20:	mov	r1, #1
   10a24:	bl	1086c <__fprintf_chk@plt>
   10a28:	b	109d8 <close@plt+0x124>
   10a2c:	andeq	r1, r2, r0, lsl #30
   10a30:	muleq	r2, r4, r0
   10a34:	andeq	r1, r1, r0, ror r0
   10a38:	andeq	r1, r1, r0, lsl #4
   10a3c:	muleq	r2, r0, r0
   10a40:	andeq	r2, r2, r4, lsl #1
   10a44:	andeq	r1, r1, r4, lsl r2
   10a48:	andeq	r1, r1, r4, lsl #4
   10a4c:	andeq	r2, r2, r8, ror r0
   10a50:	andeq	r2, r2, r0, lsl #1
   10a54:	andeq	r1, r1, r0, asr #4
   10a58:	andeq	r1, r1, r8, lsl r2
   10a5c:	mov	fp, #0
   10a60:	mov	lr, #0
   10a64:	pop	{r1}		; (ldr r1, [sp], #4)
   10a68:	mov	r2, sp
   10a6c:	push	{r2}		; (str r2, [sp, #-4]!)
   10a70:	push	{r0}		; (str r0, [sp, #-4]!)
   10a74:	ldr	ip, [pc, #16]	; 10a8c <close@plt+0x1d8>
   10a78:	push	{ip}		; (str ip, [sp, #-4]!)
   10a7c:	ldr	r0, [pc, #12]	; 10a90 <close@plt+0x1dc>
   10a80:	ldr	r3, [pc, #12]	; 10a94 <close@plt+0x1e0>
   10a84:	bl	10800 <__libc_start_main@plt>
   10a88:	bl	108a8 <abort@plt>
   10a8c:	andeq	r1, r1, r0, rrx
   10a90:	andeq	r0, r1, r0, asr #17
   10a94:	andeq	r1, r1, r0
   10a98:	ldr	r3, [pc, #20]	; 10ab4 <close@plt+0x200>
   10a9c:	ldr	r2, [pc, #20]	; 10ab8 <close@plt+0x204>
   10aa0:	add	r3, pc, r3
   10aa4:	ldr	r2, [r3, r2]
   10aa8:	cmp	r2, #0
   10aac:	bxeq	lr
   10ab0:	b	1080c <__gmon_start__@plt>
   10ab4:	andeq	r1, r1, r8, asr r5
   10ab8:	andeq	r0, r0, r8, rrx
   10abc:	ldr	r0, [pc, #24]	; 10adc <close@plt+0x228>
   10ac0:	ldr	r3, [pc, #24]	; 10ae0 <close@plt+0x22c>
   10ac4:	cmp	r3, r0
   10ac8:	bxeq	lr
   10acc:	ldr	r3, [pc, #16]	; 10ae4 <close@plt+0x230>
   10ad0:	cmp	r3, #0
   10ad4:	bxeq	lr
   10ad8:	bx	r3
   10adc:	andeq	r2, r2, r4, ror r0
   10ae0:	andeq	r2, r2, r4, ror r0
   10ae4:	andeq	r0, r0, r0
   10ae8:	ldr	r0, [pc, #36]	; 10b14 <close@plt+0x260>
   10aec:	ldr	r1, [pc, #36]	; 10b18 <close@plt+0x264>
   10af0:	sub	r1, r1, r0
   10af4:	asr	r1, r1, #2
   10af8:	add	r1, r1, r1, lsr #31
   10afc:	asrs	r1, r1, #1
   10b00:	bxeq	lr
   10b04:	ldr	r3, [pc, #16]	; 10b1c <close@plt+0x268>
   10b08:	cmp	r3, #0
   10b0c:	bxeq	lr
   10b10:	bx	r3
   10b14:	andeq	r2, r2, r4, ror r0
   10b18:	andeq	r2, r2, r4, ror r0
   10b1c:	andeq	r0, r0, r0
   10b20:	push	{r4, lr}
   10b24:	ldr	r4, [pc, #24]	; 10b44 <close@plt+0x290>
   10b28:	ldrb	r3, [r4]
   10b2c:	cmp	r3, #0
   10b30:	popne	{r4, pc}
   10b34:	bl	10abc <close@plt+0x208>
   10b38:	mov	r3, #1
   10b3c:	strb	r3, [r4]
   10b40:	pop	{r4, pc}
   10b44:	andeq	r2, r2, ip, lsl #1
   10b48:	b	10ae8 <close@plt+0x234>
   10b4c:	ldr	r3, [pc, #4]	; 10b58 <close@plt+0x2a4>
   10b50:	ldr	r1, [r3]
   10b54:	b	10890 <putc@plt>
   10b58:	andeq	r2, r2, r4, lsl #1
   10b5c:	push	{r4, lr}
   10b60:	mov	r1, #1
   10b64:	ldr	r4, [pc, #100]	; 10bd0 <close@plt+0x31c>
   10b68:	ldr	r3, [pc, #100]	; 10bd4 <close@plt+0x320>
   10b6c:	ldr	r2, [pc, #100]	; 10bd8 <close@plt+0x324>
   10b70:	ldr	r0, [r4]
   10b74:	ldr	r3, [r3]
   10b78:	bl	1086c <__fprintf_chk@plt>
   10b7c:	ldr	r3, [r4]
   10b80:	mov	r2, #19
   10b84:	mov	r1, #1
   10b88:	ldr	r0, [pc, #76]	; 10bdc <close@plt+0x328>
   10b8c:	bl	107dc <fwrite@plt>
   10b90:	ldr	r3, [r4]
   10b94:	mov	r2, #43	; 0x2b
   10b98:	mov	r1, #1
   10b9c:	ldr	r0, [pc, #60]	; 10be0 <close@plt+0x32c>
   10ba0:	bl	107dc <fwrite@plt>
   10ba4:	ldr	r3, [r4]
   10ba8:	mov	r2, #48	; 0x30
   10bac:	mov	r1, #1
   10bb0:	ldr	r0, [pc, #44]	; 10be4 <close@plt+0x330>
   10bb4:	bl	107dc <fwrite@plt>
   10bb8:	ldr	r3, [r4]
   10bbc:	mov	r2, #53	; 0x35
   10bc0:	mov	r1, #1
   10bc4:	ldr	r0, [pc, #28]	; 10be8 <close@plt+0x334>
   10bc8:	pop	{r4, lr}
   10bcc:	b	107dc <fwrite@plt>
   10bd0:	andeq	r2, r2, r0, lsl #1
   10bd4:	muleq	r2, r4, r0
   10bd8:	strheq	r1, [r1], -r0
   10bdc:	andeq	r1, r1, r4, asr #1
   10be0:	ldrdeq	r1, [r1], -r8
   10be4:	andeq	r1, r1, r4, lsl #2
   10be8:	andeq	r1, r1, r8, lsr r1
   10bec:	push	{r4, r5, lr}
   10bf0:	sub	sp, sp, #12
   10bf4:	ldr	r5, [pc, #84]	; 10c50 <close@plt+0x39c>
   10bf8:	mov	r4, #0
   10bfc:	add	r2, sp, #3
   10c00:	ldr	r3, [r5]
   10c04:	ldr	r1, [pc, #72]	; 10c54 <close@plt+0x3a0>
   10c08:	str	r3, [sp, #4]
   10c0c:	strb	r4, [sp, #3]
   10c10:	bl	107e8 <ioctl@plt>
   10c14:	cmp	r0, r4
   10c18:	movne	r0, r4
   10c1c:	bne	10c34 <close@plt+0x380>
   10c20:	ldrb	r0, [sp, #3]
   10c24:	sub	r0, r0, #1
   10c28:	cmp	r0, #2
   10c2c:	movhi	r0, #0
   10c30:	movls	r0, #1
   10c34:	ldr	r2, [sp, #4]
   10c38:	ldr	r3, [r5]
   10c3c:	cmp	r2, r3
   10c40:	bne	10c4c <close@plt+0x398>
   10c44:	add	sp, sp, #12
   10c48:	pop	{r4, r5, pc}
   10c4c:	bl	107c4 <__stack_chk_fail@plt>
   10c50:	andeq	r1, r2, r0, lsl #30
   10c54:	andeq	r4, r0, r3, lsr fp
   10c58:	push	{r4, r5, r6, lr}
   10c5c:	mov	r1, #2
   10c60:	mov	r5, r0
   10c64:	bl	10818 <open@plt>
   10c68:	subs	r4, r0, #0
   10c6c:	blt	10c88 <close@plt+0x3d4>
   10c70:	mov	r0, r4
   10c74:	bl	10bec <close@plt+0x338>
   10c78:	cmp	r0, #0
   10c7c:	beq	10ce0 <close@plt+0x42c>
   10c80:	mov	r0, r4
   10c84:	pop	{r4, r5, r6, pc}
   10c88:	bl	10854 <__errno_location@plt>
   10c8c:	ldr	r3, [r0]
   10c90:	mov	r6, r0
   10c94:	cmp	r3, #13
   10c98:	beq	10ca8 <close@plt+0x3f4>
   10c9c:	mvn	r4, #0
   10ca0:	mov	r0, r4
   10ca4:	pop	{r4, r5, r6, pc}
   10ca8:	mov	r1, #0
   10cac:	mov	r0, r5
   10cb0:	bl	10818 <open@plt>
   10cb4:	subs	r4, r0, #0
   10cb8:	bge	10c70 <close@plt+0x3bc>
   10cbc:	ldr	r3, [r6]
   10cc0:	cmp	r3, #13
   10cc4:	bne	10c9c <close@plt+0x3e8>
   10cc8:	mov	r0, r5
   10ccc:	mov	r1, #1
   10cd0:	bl	10818 <open@plt>
   10cd4:	subs	r4, r0, #0
   10cd8:	bge	10c70 <close@plt+0x3bc>
   10cdc:	b	10c9c <close@plt+0x3e8>
   10ce0:	mov	r0, r4
   10ce4:	bl	108b4 <close@plt>
   10ce8:	b	10c9c <close@plt+0x3e8>
   10cec:	subs	r3, r0, #0
   10cf0:	beq	10cf8 <close@plt+0x444>
   10cf4:	b	10c58 <close@plt+0x3a4>
   10cf8:	push	{r4, r5, r6, lr}
   10cfc:	mov	r4, r3
   10d00:	ldr	r0, [pc, #88]	; 10d60 <close@plt+0x4ac>
   10d04:	bl	10c58 <close@plt+0x3a4>
   10d08:	subs	r5, r0, #0
   10d0c:	blt	10d18 <close@plt+0x464>
   10d10:	mov	r0, r5
   10d14:	pop	{r4, r5, r6, pc}
   10d18:	ldr	r0, [pc, #68]	; 10d64 <close@plt+0x4b0>
   10d1c:	bl	10c58 <close@plt+0x3a4>
   10d20:	subs	r5, r0, #0
   10d24:	bge	10d10 <close@plt+0x45c>
   10d28:	ldr	r0, [pc, #56]	; 10d68 <close@plt+0x4b4>
   10d2c:	bl	10c58 <close@plt+0x3a4>
   10d30:	subs	r5, r0, #0
   10d34:	bge	10d10 <close@plt+0x45c>
   10d38:	mov	r5, r4
   10d3c:	mov	r0, r5
   10d40:	bl	10bec <close@plt+0x338>
   10d44:	cmp	r0, #0
   10d48:	bne	10d10 <close@plt+0x45c>
   10d4c:	add	r5, r5, #1
   10d50:	cmp	r5, #3
   10d54:	bne	10d3c <close@plt+0x488>
   10d58:	mvn	r5, #0
   10d5c:	b	10d10 <close@plt+0x45c>
   10d60:	andeq	r1, r1, r0, ror r1
   10d64:	andeq	r1, r1, ip, ror r1
   10d68:	andeq	r1, r1, r8, lsl #3
   10d6c:	push	{r4, r5, r6, lr}
   10d70:	bl	1083c <ttyname@plt>
   10d74:	subs	r5, r0, #0
   10d78:	beq	10de4 <close@plt+0x530>
   10d7c:	bl	10848 <strlen@plt>
   10d80:	cmp	r0, #8
   10d84:	bhi	10d98 <close@plt+0x4e4>
   10d88:	beq	10db0 <close@plt+0x4fc>
   10d8c:	mov	r4, #0
   10d90:	mov	r0, r4
   10d94:	pop	{r4, r5, r6, pc}
   10d98:	mov	r2, #9
   10d9c:	ldr	r1, [pc, #104]	; 10e0c <close@plt+0x558>
   10da0:	mov	r0, r5
   10da4:	bl	1089c <strncmp@plt>
   10da8:	cmp	r0, #0
   10dac:	beq	10e00 <close@plt+0x54c>
   10db0:	mov	r2, #8
   10db4:	ldr	r1, [pc, #84]	; 10e10 <close@plt+0x55c>
   10db8:	mov	r0, r5
   10dbc:	bl	1089c <strncmp@plt>
   10dc0:	cmp	r0, #0
   10dc4:	bne	10d8c <close@plt+0x4d8>
   10dc8:	ldrb	r4, [r5, #8]
   10dcc:	sub	r4, r4, #97	; 0x61
   10dd0:	cmp	r4, #25
   10dd4:	movhi	r4, #0
   10dd8:	movls	r4, #1
   10ddc:	mov	r0, r4
   10de0:	pop	{r4, r5, r6, pc}
   10de4:	ldr	r3, [pc, #40]	; 10e14 <close@plt+0x560>
   10de8:	ldr	r4, [r3]
   10dec:	cmp	r4, #0
   10df0:	bne	10d8c <close@plt+0x4d8>
   10df4:	ldr	r0, [pc, #28]	; 10e18 <close@plt+0x564>
   10df8:	bl	107d0 <perror@plt>
   10dfc:	b	10d90 <close@plt+0x4dc>
   10e00:	mov	r4, #1
   10e04:	mov	r0, r4
   10e08:	pop	{r4, r5, r6, pc}
   10e0c:	andeq	r1, r1, r0, lsr #3
   10e10:	andeq	r1, r1, r0, ror r1
   10e14:	muleq	r2, r0, r0
   10e18:	muleq	r1, r8, r1
   10e1c:	push	{r4, r5, r6, r7, lr}
   10e20:	sub	sp, sp, #20
   10e24:	ldr	r4, [pc, #408]	; 10fc4 <close@plt+0x710>
   10e28:	mov	r2, #4
   10e2c:	ldr	r1, [pc, #404]	; 10fc8 <close@plt+0x714>
   10e30:	ldr	r3, [r4]
   10e34:	mov	r5, r0
   10e38:	mov	r0, #1
   10e3c:	str	r3, [sp, #12]
   10e40:	bl	10860 <write@plt>
   10e44:	mov	r2, #0
   10e48:	mov	r0, r2
   10e4c:	mov	r1, #1
   10e50:	bl	10878 <setupterm@plt>
   10e54:	ldr	r3, [pc, #368]	; 10fcc <close@plt+0x718>
   10e58:	ldr	r2, [pc, #368]	; 10fd0 <close@plt+0x71c>
   10e5c:	ldr	r3, [r3]
   10e60:	ldr	r1, [r3, #12]
   10e64:	ldr	r3, [r3, #16]
   10e68:	ldrsh	r1, [r1, #4]
   10e6c:	ldr	r0, [r3, #20]
   10e70:	cmp	r1, #1
   10e74:	movlt	r1, #1
   10e78:	bl	107ac <tputs@plt>
   10e7c:	cmn	r0, #1
   10e80:	beq	10f60 <close@plt+0x6ac>
   10e84:	mov	r0, #0
   10e88:	bl	10d6c <close@plt+0x4b8>
   10e8c:	cmp	r0, #0
   10e90:	beq	10eb0 <close@plt+0x5fc>
   10e94:	ldr	r2, [sp, #12]
   10e98:	ldr	r3, [r4]
   10e9c:	mov	r0, #0
   10ea0:	cmp	r2, r3
   10ea4:	bne	10f68 <close@plt+0x6b4>
   10ea8:	add	sp, sp, #20
   10eac:	pop	{r4, r5, r6, r7, pc}
   10eb0:	ldr	r0, [pc, #284]	; 10fd4 <close@plt+0x720>
   10eb4:	bl	107f4 <getenv@plt>
   10eb8:	ldr	r1, [pc, #280]	; 10fd8 <close@plt+0x724>
   10ebc:	bl	107b8 <strcmp@plt>
   10ec0:	cmp	r0, #0
   10ec4:	beq	10e94 <close@plt+0x5e0>
   10ec8:	add	r2, sp, #4
   10ecc:	ldr	r1, [pc, #264]	; 10fdc <close@plt+0x728>
   10ed0:	mov	r0, r5
   10ed4:	bl	107e8 <ioctl@plt>
   10ed8:	cmp	r0, #0
   10edc:	blt	10f94 <close@plt+0x6e0>
   10ee0:	ldrh	r6, [sp, #4]
   10ee4:	ldr	r1, [pc, #244]	; 10fe0 <close@plt+0x72c>
   10ee8:	mov	r0, r5
   10eec:	cmp	r6, #6
   10ef0:	moveq	r7, #5
   10ef4:	movne	r7, #6
   10ef8:	mov	r2, r7
   10efc:	bl	107e8 <ioctl@plt>
   10f00:	cmp	r0, #0
   10f04:	bne	10f6c <close@plt+0x6b8>
   10f08:	mov	r2, r7
   10f0c:	ldr	r1, [pc, #208]	; 10fe4 <close@plt+0x730>
   10f10:	mov	r0, r5
   10f14:	bl	107e8 <ioctl@plt>
   10f18:	cmp	r0, #0
   10f1c:	bne	10f50 <close@plt+0x69c>
   10f20:	mov	r2, r6
   10f24:	ldr	r1, [pc, #180]	; 10fe0 <close@plt+0x72c>
   10f28:	mov	r0, r5
   10f2c:	bl	107e8 <ioctl@plt>
   10f30:	cmp	r0, #0
   10f34:	bne	10f6c <close@plt+0x6b8>
   10f38:	mov	r2, r6
   10f3c:	mov	r0, r5
   10f40:	ldr	r1, [pc, #156]	; 10fe4 <close@plt+0x730>
   10f44:	bl	107e8 <ioctl@plt>
   10f48:	cmp	r0, #0
   10f4c:	beq	10e94 <close@plt+0x5e0>
   10f50:	ldr	r3, [pc, #144]	; 10fe8 <close@plt+0x734>
   10f54:	ldr	r3, [r3]
   10f58:	cmp	r3, #0
   10f5c:	beq	10f88 <close@plt+0x6d4>
   10f60:	mov	r0, #1
   10f64:	bl	10830 <exit@plt>
   10f68:	bl	107c4 <__stack_chk_fail@plt>
   10f6c:	ldr	r3, [pc, #116]	; 10fe8 <close@plt+0x734>
   10f70:	ldr	r3, [r3]
   10f74:	cmp	r3, #0
   10f78:	bne	10f60 <close@plt+0x6ac>
   10f7c:	ldr	r0, [pc, #104]	; 10fec <close@plt+0x738>
   10f80:	bl	107d0 <perror@plt>
   10f84:	b	10f60 <close@plt+0x6ac>
   10f88:	ldr	r0, [pc, #96]	; 10ff0 <close@plt+0x73c>
   10f8c:	bl	107d0 <perror@plt>
   10f90:	b	10f60 <close@plt+0x6ac>
   10f94:	ldr	r3, [pc, #76]	; 10fe8 <close@plt+0x734>
   10f98:	ldr	r3, [r3]
   10f9c:	cmp	r3, #0
   10fa0:	bne	10f60 <close@plt+0x6ac>
   10fa4:	ldr	r1, [pc, #72]	; 10ff4 <close@plt+0x740>
   10fa8:	ldr	r3, [pc, #72]	; 10ff8 <close@plt+0x744>
   10fac:	ldr	r2, [pc, #72]	; 10ffc <close@plt+0x748>
   10fb0:	ldr	r0, [r1]
   10fb4:	ldr	r3, [r3]
   10fb8:	mov	r1, #1
   10fbc:	bl	1086c <__fprintf_chk@plt>
   10fc0:	b	10f60 <close@plt+0x6ac>
   10fc4:	andeq	r1, r2, r0, lsl #30
   10fc8:	andeq	r1, r1, ip, lsr #3
   10fcc:	andeq	r2, r2, r8, lsl #1
   10fd0:	andeq	r0, r1, ip, asr #22
   10fd4:			; <UNDEFINED> instruction: 0x000111b4
   10fd8:			; <UNDEFINED> instruction: 0x000111bc
   10fdc:	andeq	r5, r0, r3, lsl #12
   10fe0:	andeq	r5, r0, r6, lsl #12
   10fe4:	andeq	r5, r0, r7, lsl #12
   10fe8:	muleq	r2, r0, r0
   10fec:	ldrdeq	r1, [r1], -ip
   10ff0:	strdeq	r1, [r1], -r0
   10ff4:	andeq	r2, r2, r0, lsl #1
   10ff8:	muleq	r2, r4, r0
   10ffc:	andeq	r1, r1, r4, asr #3
   11000:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11004:	mov	r7, r0
   11008:	ldr	r6, [pc, #72]	; 11058 <close@plt+0x7a4>
   1100c:	ldr	r5, [pc, #72]	; 1105c <close@plt+0x7a8>
   11010:	add	r6, pc, r6
   11014:	add	r5, pc, r5
   11018:	sub	r6, r6, r5
   1101c:	mov	r8, r1
   11020:	mov	r9, r2
   11024:	bl	1078c <tputs@plt-0x20>
   11028:	asrs	r6, r6, #2
   1102c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11030:	mov	r4, #0
   11034:	add	r4, r4, #1
   11038:	ldr	r3, [r5], #4
   1103c:	mov	r2, r9
   11040:	mov	r1, r8
   11044:	mov	r0, r7
   11048:	blx	r3
   1104c:	cmp	r6, r4
   11050:	bne	11034 <close@plt+0x780>
   11054:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11058:	andeq	r0, r1, r4, ror #29
   1105c:	ldrdeq	r0, [r1], -ip
   11060:	bx	lr

Disassembly of section .fini:

00011064 <.fini>:
   11064:	push	{r3, lr}
   11068:	pop	{r3, pc}
