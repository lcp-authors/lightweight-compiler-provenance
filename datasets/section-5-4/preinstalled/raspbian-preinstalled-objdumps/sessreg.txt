
raspbian-preinstalled/sessreg:     file format elf32-littlearm


Disassembly of section .init:

00010764 <.init>:
   10764:	push	{r3, lr}
   10768:	bl	1113c <close@plt+0x868>
   1076c:	pop	{r3, pc}

Disassembly of section .plt:

00010770 <getpwnam@plt-0x14>:
   10770:	push	{lr}		; (str lr, [sp, #-4]!)
   10774:	ldr	lr, [pc, #4]	; 10780 <getpwnam@plt-0x4>
   10778:	add	lr, pc, lr
   1077c:	ldr	pc, [lr, #8]!
   10780:	andeq	r1, r1, r0, lsl #17

00010784 <getpwnam@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2176]!	; 0x880

00010790 <strcmp@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2168]!	; 0x878

0001079c <utmpxname@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2160]!	; 0x870

000107a8 <getutxid@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2152]!	; 0x868

000107b4 <pututxline@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2144]!	; 0x860

000107c0 <time@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2136]!	; 0x858

000107cc <setutxent@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2128]!	; 0x850

000107d8 <__stack_chk_fail@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2120]!	; 0x848

000107e4 <perror@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2112]!	; 0x840

000107f0 <lseek64@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2104]!	; 0x838

000107fc <open64@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2096]!	; 0x830

00010808 <puts@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2088]!	; 0x828

00010814 <__libc_start_main@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2080]!	; 0x820

00010820 <__gmon_start__@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2072]!	; 0x818

0001082c <exit@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2064]!	; 0x810

00010838 <ttyname@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2056]!	; 0x808

00010844 <strlen@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2048]!	; 0x800

00010850 <strchr@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #2040]!	; 0x7f8

0001085c <memset@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #2032]!	; 0x7f0

00010868 <strncpy@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #2024]!	; 0x7e8

00010874 <write@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #2016]!	; 0x7e0

00010880 <__fprintf_chk@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #2008]!	; 0x7d8

0001088c <endutxent@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #2000]!	; 0x7d0

00010898 <updwtmpx@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1992]!	; 0x7c8

000108a4 <getppid@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1984]!	; 0x7c0

000108b0 <strncmp@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1976]!	; 0x7b8

000108bc <abort@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1968]!	; 0x7b0

000108c8 <getutxent@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1960]!	; 0x7a8

000108d4 <close@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1952]!	; 0x7a0

Disassembly of section .text:

000108e0 <.text>:
   108e0:	ldr	r3, [pc, #40]	; 10910 <close@plt+0x3c>
   108e4:	ldr	r1, [pc, #40]	; 10914 <close@plt+0x40>
   108e8:	push	{lr}		; (str lr, [sp, #-4]!)
   108ec:	sub	sp, sp, #12
   108f0:	ldr	r3, [r3]
   108f4:	ldr	r0, [r1]
   108f8:	ldr	r2, [pc, #24]	; 10918 <close@plt+0x44>
   108fc:	str	r3, [sp]
   10900:	mov	r1, #1
   10904:	bl	10880 <__fprintf_chk@plt>
   10908:	mov	r0, #1
   1090c:	bl	1082c <exit@plt>
   10910:	muleq	r2, r8, r0
   10914:	muleq	r2, r0, r0
   10918:	ldrdeq	r1, [r1], -r8
   1091c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10920:	sub	sp, sp, #708	; 0x2c4
   10924:	ldr	r9, [pc, #1904]	; 1109c <close@plt+0x7c8>
   10928:	ldr	r5, [pc, #1904]	; 110a0 <close@plt+0x7cc>
   1092c:	ldr	r8, [pc, #1904]	; 110a4 <close@plt+0x7d0>
   10930:	mov	r3, r1
   10934:	str	r1, [sp, #12]
   10938:	mov	r7, r5
   1093c:	ldr	r1, [r1]
   10940:	ldr	r2, [r9]
   10944:	add	fp, r5, #48	; 0x30
   10948:	add	sl, r5, #44	; 0x2c
   1094c:	mov	r6, #0
   10950:	str	r1, [r7], #56	; 0x38
   10954:	str	r2, [sp, #700]	; 0x2bc
   10958:	add	r2, r3, #4
   1095c:	str	r2, [sp, #12]
   10960:	ldr	r4, [r3, #4]
   10964:	cmp	r4, #0
   10968:	beq	10fe8 <close@plt+0x714>
   1096c:	ldrb	r1, [r4]
   10970:	cmp	r1, #45	; 0x2d
   10974:	bne	10b70 <close@plt+0x29c>
   10978:	add	r1, r4, #1
   1097c:	str	r1, [r2]
   10980:	ldrb	r3, [r4, #1]
   10984:	sub	r3, r3, #76	; 0x4c
   10988:	cmp	r3, #44	; 0x2c
   1098c:	ldrls	pc, [pc, r3, lsl #2]
   10990:	b	10fc0 <close@plt+0x6ec>
   10994:	andeq	r0, r1, r0, asr #22
   10998:	andeq	r0, r1, r0, asr #31
   1099c:	andeq	r0, r1, r0, asr #31
   109a0:	andeq	r0, r1, r0, asr #31
   109a4:	andeq	r0, r1, r0, asr #31
   109a8:	andeq	r0, r1, r0, asr #31
   109ac:	andeq	r0, r1, r0, asr #31
   109b0:	andeq	r0, r1, r0, asr #31
   109b4:	andeq	r0, r1, r0, asr #31
   109b8:	andeq	r0, r1, r0, asr #31
   109bc:	andeq	r0, r1, r0, lsr fp
   109c0:	andeq	r0, r1, r0, asr #31
   109c4:	andeq	r0, r1, r0, asr #31
   109c8:	andeq	r0, r1, r0, asr #31
   109cc:	andeq	r0, r1, r0, asr #31
   109d0:	andeq	r0, r1, r0, asr #31
   109d4:	andeq	r0, r1, r0, asr #31
   109d8:	andeq	r0, r1, r0, asr #31
   109dc:	andeq	r0, r1, r0, asr #31
   109e0:	andeq	r0, r1, r0, asr #31
   109e4:	andeq	r0, r1, r0, asr #31
   109e8:	andeq	r0, r1, ip, lsl fp
   109ec:	andeq	r0, r1, r0, asr #31
   109f0:	andeq	r0, r1, r0, asr #31
   109f4:	andeq	r0, r1, r8, lsl #22
   109f8:	andeq	r0, r1, r0, asr #31
   109fc:	andeq	r0, r1, r0, asr #31
   10a00:	andeq	r0, r1, r0, asr #31
   10a04:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a08:	andeq	r0, r1, r0, asr #31
   10a0c:	andeq	r0, r1, r0, asr #31
   10a10:	andeq	r0, r1, r0, asr #31
   10a14:	ldrdeq	r0, [r1], -r8
   10a18:	andeq	r0, r1, r0, asr #31
   10a1c:	andeq	r0, r1, r0, asr #31
   10a20:	andeq	r0, r1, r0, asr #31
   10a24:	andeq	r0, r1, r0, asr #31
   10a28:	andeq	r0, r1, r0, asr #31
   10a2c:	andeq	r0, r1, r0, asr #31
   10a30:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a34:			; <UNDEFINED> instruction: 0x00010abc
   10a38:	andeq	r0, r1, ip, lsl #21
   10a3c:	andeq	r0, r1, r0, asr #31
   10a40:	andeq	r0, r1, ip, asr sl
   10a44:	andeq	r0, r1, r8, asr #20
   10a48:	mov	r1, r7
   10a4c:	add	r0, sp, #12
   10a50:	bl	11250 <close@plt+0x97c>
   10a54:	ldr	r3, [sp, #12]
   10a58:	b	10958 <close@plt+0x84>
   10a5c:	ldr	r1, [pc, #1604]	; 110a8 <close@plt+0x7d4>
   10a60:	add	r0, sp, #12
   10a64:	bl	11250 <close@plt+0x97c>
   10a68:	mov	r1, r8
   10a6c:	mov	r4, r0
   10a70:	bl	10790 <strcmp@plt>
   10a74:	cmp	r0, #0
   10a78:	moveq	r3, #1
   10a7c:	streq	r3, [r5, #8]
   10a80:	strne	r4, [r5, #12]
   10a84:	ldr	r3, [sp, #12]
   10a88:	b	10958 <close@plt+0x84>
   10a8c:	ldr	r1, [pc, #1560]	; 110ac <close@plt+0x7d8>
   10a90:	add	r0, sp, #12
   10a94:	bl	11250 <close@plt+0x97c>
   10a98:	mov	r1, r8
   10a9c:	mov	r4, r0
   10aa0:	bl	10790 <strcmp@plt>
   10aa4:	cmp	r0, #0
   10aa8:	moveq	r3, #1
   10aac:	streq	r3, [r5, #20]
   10ab0:	strne	r4, [r5, #24]
   10ab4:	ldr	r3, [sp, #12]
   10ab8:	b	10958 <close@plt+0x84>
   10abc:	ldr	r1, [pc, #1516]	; 110b0 <close@plt+0x7dc>
   10ac0:	add	r0, sp, #12
   10ac4:	bl	11250 <close@plt+0x97c>
   10ac8:	ldr	r3, [sp, #12]
   10acc:	b	10958 <close@plt+0x84>
   10ad0:	mov	r3, r2
   10ad4:	b	10958 <close@plt+0x84>
   10ad8:	mov	r1, sl
   10adc:	add	r0, sp, #12
   10ae0:	bl	11250 <close@plt+0x97c>
   10ae4:	ldr	r3, [sp, #12]
   10ae8:	mov	r6, r0
   10aec:	b	10958 <close@plt+0x84>
   10af0:	mov	r1, fp
   10af4:	add	r0, sp, #12
   10af8:	bl	11250 <close@plt+0x97c>
   10afc:	ldr	r3, [sp, #12]
   10b00:	str	r0, [r5, #52]	; 0x34
   10b04:	b	10958 <close@plt+0x84>
   10b08:	ldr	r1, [r5, #64]	; 0x40
   10b0c:	mov	r3, r2
   10b10:	add	r2, r1, #1
   10b14:	str	r2, [r5, #64]	; 0x40
   10b18:	b	10958 <close@plt+0x84>
   10b1c:	ldr	r1, [r5, #60]	; 0x3c
   10b20:	mov	r3, r2
   10b24:	add	r2, r1, #1
   10b28:	str	r2, [r5, #60]	; 0x3c
   10b2c:	b	10958 <close@plt+0x84>
   10b30:	ldr	r0, [pc, #1404]	; 110b4 <close@plt+0x7e0>
   10b34:	bl	10808 <puts@plt>
   10b38:	mov	r0, #0
   10b3c:	bl	1082c <exit@plt>
   10b40:	ldr	r1, [pc, #1392]	; 110b8 <close@plt+0x7e4>
   10b44:	add	r0, sp, #12
   10b48:	bl	11250 <close@plt+0x97c>
   10b4c:	mov	r1, r8
   10b50:	str	r0, [r5, #32]
   10b54:	bl	10790 <strcmp@plt>
   10b58:	cmp	r0, #0
   10b5c:	ldrne	r3, [sp, #12]
   10b60:	moveq	r3, #1
   10b64:	streq	r3, [r5, #36]	; 0x24
   10b68:	ldreq	r3, [sp, #12]
   10b6c:	b	10958 <close@plt+0x84>
   10b70:	ldr	r2, [r3, #8]
   10b74:	add	r3, r3, #8
   10b78:	cmp	r2, #0
   10b7c:	str	r4, [r5, #68]	; 0x44
   10b80:	str	r3, [sp, #12]
   10b84:	bne	11034 <close@plt+0x760>
   10b88:	ldr	r7, [r5, #60]	; 0x3c
   10b8c:	ldr	r3, [r5, #64]	; 0x40
   10b90:	cmp	r7, r3
   10b94:	beq	11054 <close@plt+0x780>
   10b98:	ldr	r3, [r5, #56]	; 0x38
   10b9c:	ldr	sl, [r5, #44]	; 0x2c
   10ba0:	cmp	r3, #0
   10ba4:	beq	10bb0 <close@plt+0x2dc>
   10ba8:	cmp	sl, #0
   10bac:	beq	11010 <close@plt+0x73c>
   10bb0:	ldr	r3, [r5, #4]
   10bb4:	cmp	r3, #0
   10bb8:	ldreq	r3, [pc, #1276]	; 110bc <close@plt+0x7e8>
   10bbc:	streq	r3, [r5, #12]
   10bc0:	ldr	r3, [r5, #16]
   10bc4:	cmp	r3, #0
   10bc8:	ldreq	r3, [pc, #1264]	; 110c0 <close@plt+0x7ec>
   10bcc:	streq	r3, [r5, #24]
   10bd0:	ldr	r3, [r5, #28]
   10bd4:	cmp	r3, #0
   10bd8:	ldreq	r3, [pc, #1252]	; 110c4 <close@plt+0x7f0>
   10bdc:	streq	r3, [r5, #32]
   10be0:	cmp	sl, #0
   10be4:	bne	10c10 <close@plt+0x33c>
   10be8:	mov	r0, sl
   10bec:	bl	10838 <ttyname@plt>
   10bf0:	subs	r6, r0, #0
   10bf4:	beq	1102c <close@plt+0x758>
   10bf8:	mov	r2, #5
   10bfc:	ldr	r1, [pc, #1220]	; 110c8 <close@plt+0x7f4>
   10c00:	bl	108b0 <strncmp@plt>
   10c04:	cmp	r0, #0
   10c08:	bne	10e94 <close@plt+0x5c0>
   10c0c:	add	r6, r6, #5
   10c10:	add	r0, sp, #20
   10c14:	bl	107c0 <time@plt>
   10c18:	ldr	r8, [r5, #24]
   10c1c:	cmp	r8, #0
   10c20:	beq	10c2c <close@plt+0x358>
   10c24:	mov	r0, r8
   10c28:	bl	1079c <utmpxname@plt>
   10c2c:	add	r8, sp, #316	; 0x13c
   10c30:	mov	r0, r8
   10c34:	mov	r2, #384	; 0x180
   10c38:	mov	r1, #0
   10c3c:	ldr	r4, [r5, #68]	; 0x44
   10c40:	ldr	sl, [sp, #20]
   10c44:	ldr	r7, [r5, #60]	; 0x3c
   10c48:	bl	1085c <memset@plt>
   10c4c:	cmp	r6, #0
   10c50:	beq	10ec4 <close@plt+0x5f0>
   10c54:	ldr	r1, [pc, #1136]	; 110cc <close@plt+0x7f8>
   10c58:	mov	r0, r6
   10c5c:	bl	10790 <strcmp@plt>
   10c60:	cmp	r0, #0
   10c64:	beq	10df8 <close@plt+0x524>
   10c68:	mov	r2, #32
   10c6c:	mov	r1, r6
   10c70:	add	r0, sp, #324	; 0x144
   10c74:	bl	10868 <strncpy@plt>
   10c78:	adds	r3, r7, #0
   10c7c:	movne	r3, #1
   10c80:	cmp	r4, #0
   10c84:	movne	fp, r3
   10c88:	moveq	fp, #0
   10c8c:	mov	r2, #256	; 0x100
   10c90:	mov	r1, r6
   10c94:	add	r0, sp, #392	; 0x188
   10c98:	str	r3, [sp, #8]
   10c9c:	bl	10868 <strncpy@plt>
   10ca0:	cmp	fp, #0
   10ca4:	ldr	r3, [sp, #8]
   10ca8:	beq	10e7c <close@plt+0x5a8>
   10cac:	mov	r1, r4
   10cb0:	mov	r2, #32
   10cb4:	add	r0, sp, #360	; 0x168
   10cb8:	bl	10868 <strncpy@plt>
   10cbc:	mov	r0, r6
   10cc0:	bl	10844 <strlen@plt>
   10cc4:	cmp	r0, #3
   10cc8:	movls	r3, #0
   10ccc:	subhi	r3, r0, #4
   10cd0:	add	r3, r6, r3
   10cd4:	mov	r1, r3
   10cd8:	mov	r2, #4
   10cdc:	add	r0, sp, #356	; 0x164
   10ce0:	str	r3, [sp, #8]
   10ce4:	bl	10868 <strncpy@plt>
   10ce8:	add	r0, sp, #356	; 0x164
   10cec:	bl	111f0 <close@plt+0x91c>
   10cf0:	cmp	r0, #0
   10cf4:	bne	10e0c <close@plt+0x538>
   10cf8:	cmp	fp, #0
   10cfc:	beq	10e14 <close@plt+0x540>
   10d00:	ldr	r3, [sp, #8]
   10d04:	ldr	r4, [pc, #964]	; 110d0 <close@plt+0x7fc>
   10d08:	ldrb	r2, [r3]
   10d0c:	add	r7, r4, #1
   10d10:	strb	r2, [sp, #357]	; 0x165
   10d14:	ldrb	r2, [r3, #1]
   10d18:	strb	r2, [sp, #358]	; 0x166
   10d1c:	ldrb	r3, [r3, #2]
   10d20:	strb	r3, [sp, #359]	; 0x167
   10d24:	ldrb	r3, [r4, #1]
   10d28:	add	r0, sp, #356	; 0x164
   10d2c:	add	fp, r4, #1
   10d30:	strb	r3, [sp, #356]	; 0x164
   10d34:	bl	111f0 <close@plt+0x91c>
   10d38:	sub	r3, r4, #60	; 0x3c
   10d3c:	subs	r2, r7, r3
   10d40:	movne	r2, #1
   10d44:	mov	r4, fp
   10d48:	cmp	r0, #0
   10d4c:	movne	r2, #0
   10d50:	cmp	r2, #0
   10d54:	bne	10d24 <close@plt+0x450>
   10d58:	bl	108a4 <getppid@plt>
   10d5c:	mov	r3, #7
   10d60:	strh	r3, [r8]
   10d64:	str	r0, [sp, #320]	; 0x140
   10d68:	ldr	r3, [r5, #20]
   10d6c:	str	sl, [sp, #656]	; 0x290
   10d70:	cmp	r3, #0
   10d74:	mov	r3, #0
   10d78:	str	r3, [sp, #660]	; 0x294
   10d7c:	bne	10da4 <close@plt+0x4d0>
   10d80:	ldr	r3, [r5, #24]
   10d84:	cmp	r3, #0
   10d88:	beq	10da4 <close@plt+0x4d0>
   10d8c:	bl	107cc <setutxent@plt>
   10d90:	mov	r0, r8
   10d94:	bl	107a8 <getutxid@plt>
   10d98:	mov	r0, r8
   10d9c:	bl	107b4 <pututxline@plt>
   10da0:	bl	1088c <endutxent@plt>
   10da4:	ldr	r3, [r5, #8]
   10da8:	cmp	r3, #0
   10dac:	bne	10dc4 <close@plt+0x4f0>
   10db0:	ldr	r0, [r5, #12]
   10db4:	cmp	r0, #0
   10db8:	beq	10dc4 <close@plt+0x4f0>
   10dbc:	mov	r1, r8
   10dc0:	bl	10898 <updwtmpx@plt>
   10dc4:	ldr	r3, [r5, #60]	; 0x3c
   10dc8:	cmp	r3, #0
   10dcc:	beq	10ddc <close@plt+0x508>
   10dd0:	ldr	r4, [r5, #36]	; 0x24
   10dd4:	cmp	r4, #0
   10dd8:	beq	10f00 <close@plt+0x62c>
   10ddc:	ldr	r2, [sp, #700]	; 0x2bc
   10de0:	ldr	r3, [r9]
   10de4:	mov	r0, #0
   10de8:	cmp	r2, r3
   10dec:	bne	11090 <close@plt+0x7bc>
   10df0:	add	sp, sp, #708	; 0x2c4
   10df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10df8:	ldr	r2, [pc, #724]	; 110d4 <close@plt+0x800>
   10dfc:	add	r3, sp, #324	; 0x144
   10e00:	ldm	r2, {r0, r1}
   10e04:	stm	r3, {r0, r1}
   10e08:	b	10c78 <close@plt+0x3a4>
   10e0c:	cmp	r7, #0
   10e10:	bne	10d58 <close@plt+0x484>
   10e14:	mov	r1, #58	; 0x3a
   10e18:	mov	r0, r6
   10e1c:	bl	10850 <strchr@plt>
   10e20:	cmp	r0, #0
   10e24:	beq	10e68 <close@plt+0x594>
   10e28:	bl	108c8 <getutxent@plt>
   10e2c:	subs	r4, r0, #0
   10e30:	beq	10e64 <close@plt+0x590>
   10e34:	mov	r1, r6
   10e38:	add	r0, r4, #76	; 0x4c
   10e3c:	bl	10790 <strcmp@plt>
   10e40:	cmp	r0, #0
   10e44:	bne	10e28 <close@plt+0x554>
   10e48:	ldrsh	r3, [r4]
   10e4c:	cmp	r3, #8
   10e50:	beq	10e28 <close@plt+0x554>
   10e54:	add	r1, r4, #40	; 0x28
   10e58:	add	r0, sp, #356	; 0x164
   10e5c:	mov	r2, #4
   10e60:	bl	10868 <strncpy@plt>
   10e64:	bl	1088c <endutxent@plt>
   10e68:	mov	r2, #0
   10e6c:	mov	r3, #8
   10e70:	str	r2, [sp, #320]	; 0x140
   10e74:	strh	r3, [r8]
   10e78:	b	10d68 <close@plt+0x494>
   10e7c:	mov	r1, fp
   10e80:	mov	r2, #32
   10e84:	add	r0, sp, #360	; 0x168
   10e88:	mov	fp, r3
   10e8c:	bl	1085c <memset@plt>
   10e90:	b	10cbc <close@plt+0x3e8>
   10e94:	ldr	r8, [r5, #24]
   10e98:	add	r0, sp, #20
   10e9c:	bl	107c0 <time@plt>
   10ea0:	cmp	r8, #0
   10ea4:	bne	10c24 <close@plt+0x350>
   10ea8:	add	r8, sp, #316	; 0x13c
   10eac:	mov	r1, sl
   10eb0:	mov	r0, r8
   10eb4:	mov	r2, #384	; 0x180
   10eb8:	ldr	sl, [sp, #20]
   10ebc:	bl	1085c <memset@plt>
   10ec0:	b	10c54 <close@plt+0x380>
   10ec4:	mov	r2, #32
   10ec8:	mov	r1, r6
   10ecc:	add	r0, sp, #324	; 0x144
   10ed0:	bl	1085c <memset@plt>
   10ed4:	cmp	r4, #0
   10ed8:	cmpne	r7, #0
   10edc:	bne	11078 <close@plt+0x7a4>
   10ee0:	mov	r2, #32
   10ee4:	mov	r1, r6
   10ee8:	add	r0, sp, #360	; 0x168
   10eec:	bl	1085c <memset@plt>
   10ef0:	cmp	r7, #0
   10ef4:	str	r6, [sp, #356]	; 0x164
   10ef8:	beq	10e68 <close@plt+0x594>
   10efc:	b	10d58 <close@plt+0x484>
   10f00:	ldr	r0, [r5, #68]	; 0x44
   10f04:	bl	10784 <getpwnam@plt>
   10f08:	subs	r8, r0, #0
   10f0c:	beq	11070 <close@plt+0x79c>
   10f10:	mov	r1, #2
   10f14:	ldr	r0, [r5, #32]
   10f18:	bl	107fc <open64@plt>
   10f1c:	cmn	r0, #1
   10f20:	mov	r7, r0
   10f24:	beq	10ddc <close@plt+0x508>
   10f28:	ldr	r2, [r8, #8]
   10f2c:	mov	r8, #292	; 0x124
   10f30:	mov	r3, r4
   10f34:	mul	r2, r8, r2
   10f38:	str	r4, [sp]
   10f3c:	bl	107f0 <lseek64@plt>
   10f40:	mvn	r3, #0
   10f44:	mvn	r2, #0
   10f48:	cmp	r1, r3
   10f4c:	cmpeq	r0, r2
   10f50:	beq	10fe0 <close@plt+0x70c>
   10f54:	mov	r2, r8
   10f58:	mov	r1, r4
   10f5c:	add	r0, sp, #24
   10f60:	bl	1085c <memset@plt>
   10f64:	ldr	r3, [sp, #20]
   10f68:	cmp	r6, #0
   10f6c:	str	r3, [sp, #24]
   10f70:	beq	10f84 <close@plt+0x6b0>
   10f74:	mov	r1, r6
   10f78:	mov	r2, #32
   10f7c:	add	r0, sp, #28
   10f80:	bl	10868 <strncpy@plt>
   10f84:	ldr	r1, [r5, #52]	; 0x34
   10f88:	cmp	r1, #0
   10f8c:	beq	10f9c <close@plt+0x6c8>
   10f90:	mov	r2, #256	; 0x100
   10f94:	add	r0, sp, #60	; 0x3c
   10f98:	bl	10868 <strncpy@plt>
   10f9c:	add	r1, sp, #24
   10fa0:	mov	r2, #292	; 0x124
   10fa4:	mov	r0, r7
   10fa8:	bl	10874 <write@plt>
   10fac:	cmp	r0, #292	; 0x124
   10fb0:	bne	11094 <close@plt+0x7c0>
   10fb4:	mov	r0, r7
   10fb8:	bl	108d4 <close@plt>
   10fbc:	b	10ddc <close@plt+0x508>
   10fc0:	ldr	r2, [pc, #272]	; 110d8 <close@plt+0x804>
   10fc4:	str	r1, [sp]
   10fc8:	ldr	r3, [r5]
   10fcc:	ldr	r0, [r2]
   10fd0:	mov	r1, #1
   10fd4:	ldr	r2, [pc, #256]	; 110dc <close@plt+0x808>
   10fd8:	bl	10880 <__fprintf_chk@plt>
   10fdc:	bl	108e0 <close@plt+0xc>
   10fe0:	ldr	r0, [pc, #248]	; 110e0 <close@plt+0x80c>
   10fe4:	bl	11240 <close@plt+0x96c>
   10fe8:	ldr	r2, [pc, #232]	; 110d8 <close@plt+0x804>
   10fec:	add	r1, r3, #8
   10ff0:	str	r1, [sp, #12]
   10ff4:	ldr	r3, [r5]
   10ff8:	ldr	r0, [r2]
   10ffc:	mov	r1, #1
   11000:	ldr	r2, [pc, #220]	; 110e4 <close@plt+0x810>
   11004:	str	r4, [r5, #68]	; 0x44
   11008:	bl	10880 <__fprintf_chk@plt>
   1100c:	bl	108e0 <close@plt+0xc>
   11010:	ldr	r1, [pc, #192]	; 110d8 <close@plt+0x804>
   11014:	ldr	r3, [r5]
   11018:	ldr	r2, [pc, #200]	; 110e8 <close@plt+0x814>
   1101c:	ldr	r0, [r1]
   11020:	mov	r1, #1
   11024:	bl	10880 <__fprintf_chk@plt>
   11028:	bl	108e0 <close@plt+0xc>
   1102c:	ldr	r0, [pc, #184]	; 110ec <close@plt+0x818>
   11030:	bl	11240 <close@plt+0x96c>
   11034:	ldr	r1, [pc, #156]	; 110d8 <close@plt+0x804>
   11038:	str	r2, [sp]
   1103c:	ldr	r3, [r5]
   11040:	ldr	r0, [r1]
   11044:	ldr	r2, [pc, #164]	; 110f0 <close@plt+0x81c>
   11048:	mov	r1, #1
   1104c:	bl	10880 <__fprintf_chk@plt>
   11050:	bl	108e0 <close@plt+0xc>
   11054:	ldr	r1, [pc, #124]	; 110d8 <close@plt+0x804>
   11058:	ldr	r3, [r5]
   1105c:	ldr	r2, [pc, #144]	; 110f4 <close@plt+0x820>
   11060:	ldr	r0, [r1]
   11064:	mov	r1, #1
   11068:	bl	10880 <__fprintf_chk@plt>
   1106c:	bl	108e0 <close@plt+0xc>
   11070:	ldr	r0, [pc, #128]	; 110f8 <close@plt+0x824>
   11074:	bl	11240 <close@plt+0x96c>
   11078:	mov	r1, r4
   1107c:	mov	r2, #32
   11080:	add	r0, sp, #360	; 0x168
   11084:	bl	10868 <strncpy@plt>
   11088:	str	r6, [sp, #356]	; 0x164
   1108c:	b	10d58 <close@plt+0x484>
   11090:	bl	107d8 <__stack_chk_fail@plt>
   11094:	ldr	r0, [pc, #96]	; 110fc <close@plt+0x828>
   11098:	bl	11240 <close@plt+0x96c>
   1109c:	andeq	r1, r2, r8, lsl #30
   110a0:	muleq	r2, r8, r0
   110a4:	andeq	r1, r1, r4, ror #13
   110a8:	muleq	r2, ip, r0
   110ac:	andeq	r2, r2, r8, lsr #1
   110b0:	andeq	r2, r2, r0, asr #1
   110b4:	andeq	r1, r1, ip, ror #13
   110b8:	strheq	r2, [r2], -r4
   110bc:	muleq	r1, r0, r7
   110c0:	andeq	r1, r1, r0, lsr #15
   110c4:			; <UNDEFINED> instruction: 0x000117b0
   110c8:	andeq	r1, r1, ip, asr #15
   110cc:	ldrdeq	r1, [r1], -r4
   110d0:	muleq	r1, r7, r5
   110d4:	ldrdeq	r1, [r1], -r8
   110d8:	muleq	r2, r0, r0
   110dc:	strdeq	r1, [r1], -ip
   110e0:	andeq	r1, r1, ip, ror #15
   110e4:	andeq	r1, r1, r8, lsl r8
   110e8:	andeq	r1, r1, r8, ror #14
   110ec:	andeq	r1, r1, r4, asr #15
   110f0:	andeq	r1, r1, ip, lsl r7
   110f4:	andeq	r1, r1, ip, lsr r7
   110f8:	andeq	r1, r1, r0, ror #15
   110fc:	andeq	r1, r1, r4, lsl #16
   11100:	mov	fp, #0
   11104:	mov	lr, #0
   11108:	pop	{r1}		; (ldr r1, [sp], #4)
   1110c:	mov	r2, sp
   11110:	push	{r2}		; (str r2, [sp, #-4]!)
   11114:	push	{r0}		; (str r0, [sp, #-4]!)
   11118:	ldr	ip, [pc, #16]	; 11130 <close@plt+0x85c>
   1111c:	push	{ip}		; (str ip, [sp, #-4]!)
   11120:	ldr	r0, [pc, #12]	; 11134 <close@plt+0x860>
   11124:	ldr	r3, [pc, #12]	; 11138 <close@plt+0x864>
   11128:	bl	10814 <__libc_start_main@plt>
   1112c:	bl	108bc <abort@plt>
   11130:	andeq	r1, r1, r8, lsl #11
   11134:	andeq	r0, r1, ip, lsl r9
   11138:	andeq	r1, r1, r8, lsr #10
   1113c:	ldr	r3, [pc, #20]	; 11158 <close@plt+0x884>
   11140:	ldr	r2, [pc, #20]	; 1115c <close@plt+0x888>
   11144:	add	r3, pc, r3
   11148:	ldr	r2, [r3, r2]
   1114c:	cmp	r2, #0
   11150:	bxeq	lr
   11154:	b	10820 <__gmon_start__@plt>
   11158:			; <UNDEFINED> instruction: 0x00010eb4
   1115c:	andeq	r0, r0, r0, lsl #1
   11160:	ldr	r0, [pc, #24]	; 11180 <close@plt+0x8ac>
   11164:	ldr	r3, [pc, #24]	; 11184 <close@plt+0x8b0>
   11168:	cmp	r3, r0
   1116c:	bxeq	lr
   11170:	ldr	r3, [pc, #16]	; 11188 <close@plt+0x8b4>
   11174:	cmp	r3, #0
   11178:	bxeq	lr
   1117c:	bx	r3
   11180:	andeq	r2, r2, ip, lsl #1
   11184:	andeq	r2, r2, ip, lsl #1
   11188:	andeq	r0, r0, r0
   1118c:	ldr	r0, [pc, #36]	; 111b8 <close@plt+0x8e4>
   11190:	ldr	r1, [pc, #36]	; 111bc <close@plt+0x8e8>
   11194:	sub	r1, r1, r0
   11198:	asr	r1, r1, #2
   1119c:	add	r1, r1, r1, lsr #31
   111a0:	asrs	r1, r1, #1
   111a4:	bxeq	lr
   111a8:	ldr	r3, [pc, #16]	; 111c0 <close@plt+0x8ec>
   111ac:	cmp	r3, #0
   111b0:	bxeq	lr
   111b4:	bx	r3
   111b8:	andeq	r2, r2, ip, lsl #1
   111bc:	andeq	r2, r2, ip, lsl #1
   111c0:	andeq	r0, r0, r0
   111c4:	push	{r4, lr}
   111c8:	ldr	r4, [pc, #24]	; 111e8 <close@plt+0x914>
   111cc:	ldrb	r3, [r4]
   111d0:	cmp	r3, #0
   111d4:	popne	{r4, pc}
   111d8:	bl	11160 <close@plt+0x88c>
   111dc:	mov	r3, #1
   111e0:	strb	r3, [r4]
   111e4:	pop	{r4, pc}
   111e8:	muleq	r2, r4, r0
   111ec:	b	1118c <close@plt+0x8b8>
   111f0:	push	{r4, r5, r6, lr}
   111f4:	mov	r6, r0
   111f8:	bl	107cc <setutxent@plt>
   111fc:	bl	108c8 <getutxent@plt>
   11200:	mov	r2, #4
   11204:	mov	r1, r6
   11208:	subs	r4, r0, #0
   1120c:	add	r0, r4, #40	; 0x28
   11210:	beq	11238 <close@plt+0x964>
   11214:	bl	108b0 <strncmp@plt>
   11218:	subs	r5, r0, #0
   1121c:	bne	111fc <close@plt+0x928>
   11220:	ldrsh	r3, [r4]
   11224:	cmp	r3, #8
   11228:	beq	111fc <close@plt+0x928>
   1122c:	bl	1088c <endutxent@plt>
   11230:	mov	r0, r5
   11234:	pop	{r4, r5, r6, pc}
   11238:	mov	r5, #1
   1123c:	b	1122c <close@plt+0x958>
   11240:	push	{r4, lr}
   11244:	bl	107e4 <perror@plt>
   11248:	mov	r0, #1
   1124c:	bl	1082c <exit@plt>
   11250:	push	{r4, lr}
   11254:	sub	sp, sp, #8
   11258:	ldr	r3, [r0]
   1125c:	ldr	r2, [r1]
   11260:	cmp	r2, #0
   11264:	ldr	r4, [r3]
   11268:	bne	112b0 <close@plt+0x9dc>
   1126c:	mov	lr, #1
   11270:	str	lr, [r1]
   11274:	ldr	ip, [r3]
   11278:	add	r2, ip, lr
   1127c:	str	r2, [r3]
   11280:	ldrb	r1, [ip, #1]
   11284:	cmp	r1, #0
   11288:	bne	112a4 <close@plt+0x9d0>
   1128c:	ldr	r1, [r3, #4]
   11290:	add	r2, r3, #4
   11294:	cmp	r1, #0
   11298:	strne	r2, [r0]
   1129c:	ldrne	r2, [r3, #4]
   112a0:	beq	112d4 <close@plt+0xa00>
   112a4:	mov	r0, r2
   112a8:	add	sp, sp, #8
   112ac:	pop	{r4, pc}
   112b0:	ldr	r2, [pc, #64]	; 112f8 <close@plt+0xa24>
   112b4:	ldr	r3, [pc, #64]	; 112fc <close@plt+0xa28>
   112b8:	str	r4, [sp]
   112bc:	mov	r1, #1
   112c0:	ldr	r3, [r3]
   112c4:	ldr	r0, [r2]
   112c8:	ldr	r2, [pc, #48]	; 11300 <close@plt+0xa2c>
   112cc:	bl	10880 <__fprintf_chk@plt>
   112d0:	bl	108e0 <close@plt+0xc>
   112d4:	ldr	r2, [pc, #28]	; 112f8 <close@plt+0xa24>
   112d8:	ldr	r3, [pc, #28]	; 112fc <close@plt+0xa28>
   112dc:	str	r4, [sp]
   112e0:	mov	r1, lr
   112e4:	ldr	r3, [r3]
   112e8:	ldr	r0, [r2]
   112ec:	ldr	r2, [pc, #16]	; 11304 <close@plt+0xa30>
   112f0:	bl	10880 <__fprintf_chk@plt>
   112f4:	bl	108e0 <close@plt+0xc>
   112f8:	muleq	r2, r0, r0
   112fc:	muleq	r2, r8, r0
   11300:	muleq	r1, r8, r6
   11304:	andeq	r1, r1, r4, asr #13
   11308:	cmp	r1, #11
   1130c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11310:	ldr	r5, [pc, #524]	; 11524 <close@plt+0xc50>
   11314:	bls	11518 <close@plt+0xc44>
   11318:	add	ip, r0, #12
   1131c:	mov	r4, r5
   11320:	mov	lr, r1
   11324:	ldrb	r6, [ip, #-6]
   11328:	ldrb	sl, [ip, #-7]
   1132c:	ldrb	r0, [ip, #-10]
   11330:	ldrb	r3, [ip, #-2]
   11334:	ldrb	r9, [ip, #-11]
   11338:	ldrb	r7, [ip, #-3]
   1133c:	ldrb	r8, [ip, #-8]
   11340:	lsl	r6, r6, #16
   11344:	ldrb	fp, [ip, #-5]
   11348:	add	r6, r6, sl, lsl #8
   1134c:	lsl	r0, r0, #16
   11350:	lsl	r3, r3, #16
   11354:	ldrb	sl, [ip, #-12]
   11358:	add	r6, r6, r8
   1135c:	add	r0, r0, r9, lsl #8
   11360:	ldrb	r8, [ip, #-9]
   11364:	ldrb	r9, [ip, #-4]
   11368:	add	r3, r3, r7, lsl #8
   1136c:	ldrb	r7, [ip, #-1]
   11370:	add	r6, r6, fp, lsl #24
   11374:	add	r0, r0, sl
   11378:	add	r3, r3, r9
   1137c:	add	r5, r6, r5
   11380:	add	r3, r3, r7, lsl #24
   11384:	add	r0, r0, r8, lsl #24
   11388:	add	r2, r3, r2
   1138c:	sub	r0, r0, r5
   11390:	sub	r3, r0, r2
   11394:	add	r3, r3, r4
   11398:	eor	r3, r3, r2, lsr #13
   1139c:	sub	r5, r5, r2
   113a0:	sub	r0, r5, r3
   113a4:	eor	r0, r0, r3, lsl #8
   113a8:	sub	r2, r2, r3
   113ac:	sub	r2, r2, r0
   113b0:	eor	r2, r2, r0, lsr #13
   113b4:	sub	r3, r3, r0
   113b8:	sub	r3, r3, r2
   113bc:	eor	r3, r3, r2, lsr #12
   113c0:	sub	r0, r0, r2
   113c4:	sub	r0, r0, r3
   113c8:	eor	r0, r0, r3, lsl #16
   113cc:	sub	r2, r2, r3
   113d0:	sub	r2, r2, r0
   113d4:	eor	r2, r2, r0, lsr #5
   113d8:	sub	r4, r3, r0
   113dc:	sub	r4, r4, r2
   113e0:	eor	r4, r4, r2, lsr #3
   113e4:	sub	r5, r0, r2
   113e8:	sub	r5, r5, r4
   113ec:	eor	r5, r5, r4, lsl #10
   113f0:	sub	lr, lr, #12
   113f4:	sub	r2, r2, r4
   113f8:	sub	r2, r2, r5
   113fc:	cmp	lr, #11
   11400:	mov	r0, ip
   11404:	eor	r2, r2, r5, lsr #15
   11408:	add	ip, ip, #12
   1140c:	bhi	11324 <close@plt+0xa50>
   11410:	sub	lr, lr, #1
   11414:	add	r2, r1, r2
   11418:	cmp	lr, #10
   1141c:	ldrls	pc, [pc, lr, lsl #2]
   11420:	b	114a8 <close@plt+0xbd4>
   11424:	andeq	r1, r1, r0, lsr #9
   11428:	muleq	r1, r8, r4
   1142c:	muleq	r1, r0, r4
   11430:	andeq	r1, r1, r8, lsl #9
   11434:	andeq	r1, r1, r0, lsl #9
   11438:	andeq	r1, r1, r8, ror r4
   1143c:	andeq	r1, r1, r0, ror r4
   11440:	andeq	r1, r1, r8, ror #8
   11444:	andeq	r1, r1, r0, ror #8
   11448:	andeq	r1, r1, r8, asr r4
   1144c:	andeq	r1, r1, r0, asr r4
   11450:	ldrb	r3, [r0, #10]
   11454:	add	r2, r2, r3, lsl #24
   11458:	ldrb	r3, [r0, #9]
   1145c:	add	r2, r2, r3, lsl #16
   11460:	ldrb	r3, [r0, #8]
   11464:	add	r2, r2, r3, lsl #8
   11468:	ldrb	r3, [r0, #7]
   1146c:	add	r5, r5, r3, lsl #24
   11470:	ldrb	r3, [r0, #6]
   11474:	add	r5, r5, r3, lsl #16
   11478:	ldrb	r3, [r0, #5]
   1147c:	add	r5, r5, r3, lsl #8
   11480:	ldrb	r3, [r0, #4]
   11484:	add	r5, r5, r3
   11488:	ldrb	r3, [r0, #3]
   1148c:	add	r4, r4, r3, lsl #24
   11490:	ldrb	r3, [r0, #2]
   11494:	add	r4, r4, r3, lsl #16
   11498:	ldrb	r3, [r0, #1]
   1149c:	add	r4, r4, r3, lsl #8
   114a0:	ldrb	r3, [r0]
   114a4:	add	r4, r4, r3
   114a8:	add	r3, r5, r2
   114ac:	sub	r4, r4, r3
   114b0:	eor	r4, r4, r2, lsr #13
   114b4:	sub	r5, r5, r2
   114b8:	sub	r5, r5, r4
   114bc:	eor	r5, r5, r4, lsl #8
   114c0:	sub	r2, r2, r4
   114c4:	sub	r0, r2, r5
   114c8:	eor	r0, r0, r5, lsr #13
   114cc:	sub	r3, r4, r5
   114d0:	sub	r3, r3, r0
   114d4:	eor	r3, r3, r0, lsr #12
   114d8:	sub	r2, r5, r0
   114dc:	sub	r2, r2, r3
   114e0:	eor	r2, r2, r3, lsl #16
   114e4:	sub	r0, r0, r3
   114e8:	sub	r0, r0, r2
   114ec:	eor	r0, r0, r2, lsr #5
   114f0:	sub	r3, r3, r2
   114f4:	sub	r3, r3, r0
   114f8:	eor	r3, r3, r0, lsr #3
   114fc:	sub	r2, r2, r0
   11500:	sub	r2, r2, r3
   11504:	eor	r2, r2, r3, lsl #10
   11508:	sub	r0, r0, r3
   1150c:	sub	r0, r0, r2
   11510:	eor	r0, r0, r2, lsr #15
   11514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11518:	mov	lr, r1
   1151c:	mov	r4, r5
   11520:	b	11410 <close@plt+0xb3c>
   11524:			; <UNDEFINED> instruction: 0x9e3779b9
   11528:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1152c:	mov	r7, r0
   11530:	ldr	r6, [pc, #72]	; 11580 <close@plt+0xcac>
   11534:	ldr	r5, [pc, #72]	; 11584 <close@plt+0xcb0>
   11538:	add	r6, pc, r6
   1153c:	add	r5, pc, r5
   11540:	sub	r6, r6, r5
   11544:	mov	r8, r1
   11548:	mov	r9, r2
   1154c:	bl	10764 <getpwnam@plt-0x20>
   11550:	asrs	r6, r6, #2
   11554:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11558:	mov	r4, #0
   1155c:	add	r4, r4, #1
   11560:	ldr	r3, [r5], #4
   11564:	mov	r2, r9
   11568:	mov	r1, r8
   1156c:	mov	r0, r7
   11570:	blx	r3
   11574:	cmp	r6, r4
   11578:	bne	1155c <close@plt+0xc88>
   1157c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11580:	andeq	r0, r1, r4, asr #19
   11584:			; <UNDEFINED> instruction: 0x000109bc
   11588:	bx	lr

Disassembly of section .fini:

0001158c <.fini>:
   1158c:	push	{r3, lr}
   11590:	pop	{r3, pc}
