
raspbian-preinstalled/dirname:     file format elf32-littlearm


Disassembly of section .init:

00010b6c <.init>:
   10b6c:	push	{r3, lr}
   10b70:	bl	10fe0 <abort@plt+0x244>
   10b74:	pop	{r3, pc}

Disassembly of section .plt:

00010b78 <calloc@plt-0x14>:
   10b78:	push	{lr}		; (str lr, [sp, #-4]!)
   10b7c:	ldr	lr, [pc, #4]	; 10b88 <calloc@plt-0x4>
   10b80:	add	lr, pc, lr
   10b84:	ldr	pc, [lr, #8]!
   10b88:	andeq	r4, r1, r8, ror r4

00010b8c <calloc@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #20, 20	; 0x14000
   10b94:	ldr	pc, [ip, #1144]!	; 0x478

00010b98 <fputs_unlocked@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #20, 20	; 0x14000
   10ba0:	ldr	pc, [ip, #1136]!	; 0x470

00010ba4 <raise@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #20, 20	; 0x14000
   10bac:	ldr	pc, [ip, #1128]!	; 0x468

00010bb0 <strcmp@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #20, 20	; 0x14000
   10bb8:	ldr	pc, [ip, #1120]!	; 0x460

00010bbc <fflush@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #20, 20	; 0x14000
   10bc4:	ldr	pc, [ip, #1112]!	; 0x458

00010bc8 <free@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #20, 20	; 0x14000
   10bd0:	ldr	pc, [ip, #1104]!	; 0x450

00010bd4 <_exit@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #20, 20	; 0x14000
   10bdc:	ldr	pc, [ip, #1096]!	; 0x448

00010be0 <memcpy@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #20, 20	; 0x14000
   10be8:	ldr	pc, [ip, #1088]!	; 0x440

00010bec <mbsinit@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #20, 20	; 0x14000
   10bf4:	ldr	pc, [ip, #1080]!	; 0x438

00010bf8 <fwrite_unlocked@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #20, 20	; 0x14000
   10c00:	ldr	pc, [ip, #1072]!	; 0x430

00010c04 <memcmp@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #20, 20	; 0x14000
   10c0c:	ldr	pc, [ip, #1064]!	; 0x428

00010c10 <dcgettext@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #20, 20	; 0x14000
   10c18:	ldr	pc, [ip, #1056]!	; 0x420

00010c1c <__stack_chk_fail@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #20, 20	; 0x14000
   10c24:	ldr	pc, [ip, #1048]!	; 0x418

00010c28 <realloc@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #20, 20	; 0x14000
   10c30:	ldr	pc, [ip, #1040]!	; 0x410

00010c34 <textdomain@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #20, 20	; 0x14000
   10c3c:	ldr	pc, [ip, #1032]!	; 0x408

00010c40 <iswprint@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #20, 20	; 0x14000
   10c48:	ldr	pc, [ip, #1024]!	; 0x400

00010c4c <fwrite@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #20, 20	; 0x14000
   10c54:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c58 <lseek64@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #20, 20	; 0x14000
   10c60:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c64 <__ctype_get_mb_cur_max@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #20, 20	; 0x14000
   10c6c:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c70 <__fpending@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #20, 20	; 0x14000
   10c78:	ldr	pc, [ip, #992]!	; 0x3e0

00010c7c <mbrtowc@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #20, 20	; 0x14000
   10c84:	ldr	pc, [ip, #984]!	; 0x3d8

00010c88 <error@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #20, 20	; 0x14000
   10c90:	ldr	pc, [ip, #976]!	; 0x3d0

00010c94 <malloc@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #20, 20	; 0x14000
   10c9c:	ldr	pc, [ip, #968]!	; 0x3c8

00010ca0 <__libc_start_main@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #20, 20	; 0x14000
   10ca8:	ldr	pc, [ip, #960]!	; 0x3c0

00010cac <__freading@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #20, 20	; 0x14000
   10cb4:	ldr	pc, [ip, #952]!	; 0x3b8

00010cb8 <__gmon_start__@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #20, 20	; 0x14000
   10cc0:	ldr	pc, [ip, #944]!	; 0x3b0

00010cc4 <getopt_long@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #20, 20	; 0x14000
   10ccc:	ldr	pc, [ip, #936]!	; 0x3a8

00010cd0 <__ctype_b_loc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #20, 20	; 0x14000
   10cd8:	ldr	pc, [ip, #928]!	; 0x3a0

00010cdc <exit@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #20, 20	; 0x14000
   10ce4:	ldr	pc, [ip, #920]!	; 0x398

00010ce8 <strlen@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #20, 20	; 0x14000
   10cf0:	ldr	pc, [ip, #912]!	; 0x390

00010cf4 <__errno_location@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #20, 20	; 0x14000
   10cfc:	ldr	pc, [ip, #904]!	; 0x388

00010d00 <__cxa_atexit@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #20, 20	; 0x14000
   10d08:	ldr	pc, [ip, #896]!	; 0x380

00010d0c <memset@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #20, 20	; 0x14000
   10d14:	ldr	pc, [ip, #888]!	; 0x378

00010d18 <__printf_chk@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #20, 20	; 0x14000
   10d20:	ldr	pc, [ip, #880]!	; 0x370

00010d24 <fileno@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #20, 20	; 0x14000
   10d2c:	ldr	pc, [ip, #872]!	; 0x368

00010d30 <__fprintf_chk@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #20, 20	; 0x14000
   10d38:	ldr	pc, [ip, #864]!	; 0x360

00010d3c <fclose@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #20, 20	; 0x14000
   10d44:	ldr	pc, [ip, #856]!	; 0x358

00010d48 <fseeko64@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #20, 20	; 0x14000
   10d50:	ldr	pc, [ip, #848]!	; 0x350

00010d54 <__overflow@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #20, 20	; 0x14000
   10d5c:	ldr	pc, [ip, #840]!	; 0x348

00010d60 <setlocale@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #20, 20	; 0x14000
   10d68:	ldr	pc, [ip, #832]!	; 0x340

00010d6c <strrchr@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #20, 20	; 0x14000
   10d74:	ldr	pc, [ip, #824]!	; 0x338

00010d78 <nl_langinfo@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #20, 20	; 0x14000
   10d80:	ldr	pc, [ip, #816]!	; 0x330

00010d84 <bindtextdomain@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #20, 20	; 0x14000
   10d8c:	ldr	pc, [ip, #808]!	; 0x328

00010d90 <strncmp@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #20, 20	; 0x14000
   10d98:	ldr	pc, [ip, #800]!	; 0x320

00010d9c <abort@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #20, 20	; 0x14000
   10da4:	ldr	pc, [ip, #792]!	; 0x318

Disassembly of section .text:

00010da8 <.text>:
   10da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10dac:	mov	r7, r0
   10db0:	sub	sp, sp, #20
   10db4:	ldr	r0, [r1]
   10db8:	mov	r4, r1
   10dbc:	bl	11614 <abort@plt+0x878>
   10dc0:	ldr	r1, [pc, #420]	; 10f6c <abort@plt+0x1d0>
   10dc4:	mov	r0, #6
   10dc8:	bl	10d60 <setlocale@plt>
   10dcc:	ldr	r1, [pc, #412]	; 10f70 <abort@plt+0x1d4>
   10dd0:	ldr	r0, [pc, #412]	; 10f74 <abort@plt+0x1d8>
   10dd4:	bl	10d84 <bindtextdomain@plt>
   10dd8:	ldr	r0, [pc, #404]	; 10f74 <abort@plt+0x1d8>
   10ddc:	bl	10c34 <textdomain@plt>
   10de0:	ldr	r0, [pc, #400]	; 10f78 <abort@plt+0x1dc>
   10de4:	bl	14604 <abort@plt+0x3868>
   10de8:	mov	r5, #0
   10dec:	ldr	r9, [pc, #392]	; 10f7c <abort@plt+0x1e0>
   10df0:	ldr	r8, [pc, #392]	; 10f80 <abort@plt+0x1e4>
   10df4:	mov	r6, r5
   10df8:	str	r6, [sp]
   10dfc:	mov	r3, r9
   10e00:	mov	r2, r8
   10e04:	mov	r1, r4
   10e08:	mov	r0, r7
   10e0c:	bl	10cc4 <getopt_long@plt>
   10e10:	cmn	r0, #1
   10e14:	beq	10e74 <abort@plt+0xd8>
   10e18:	cmn	r0, #2
   10e1c:	beq	10f40 <abort@plt+0x1a4>
   10e20:	cmp	r0, #122	; 0x7a
   10e24:	mov	r5, #1
   10e28:	beq	10df8 <abort@plt+0x5c>
   10e2c:	cmn	r0, #3
   10e30:	beq	10e3c <abort@plt+0xa0>
   10e34:	mov	r0, #1
   10e38:	bl	11094 <abort@plt+0x2f8>
   10e3c:	ldr	r3, [pc, #320]	; 10f84 <abort@plt+0x1e8>
   10e40:	ldr	r0, [pc, #320]	; 10f88 <abort@plt+0x1ec>
   10e44:	ldr	r1, [pc, #320]	; 10f8c <abort@plt+0x1f0>
   10e48:	ldr	r2, [pc, #320]	; 10f90 <abort@plt+0x1f4>
   10e4c:	str	r6, [sp, #8]
   10e50:	ldr	r0, [r0]
   10e54:	ldr	r3, [r3]
   10e58:	str	r1, [sp, #4]
   10e5c:	str	r2, [sp]
   10e60:	ldr	r1, [pc, #300]	; 10f94 <abort@plt+0x1f8>
   10e64:	ldr	r2, [pc, #300]	; 10f98 <abort@plt+0x1fc>
   10e68:	bl	13ce4 <abort@plt+0x2f48>
   10e6c:	mov	r0, #0
   10e70:	bl	10cdc <exit@plt>
   10e74:	ldr	r6, [pc, #288]	; 10f9c <abort@plt+0x200>
   10e78:	ldr	r3, [r6]
   10e7c:	cmp	r3, r7
   10e80:	bge	10f48 <abort@plt+0x1ac>
   10e84:	cmp	r5, #0
   10e88:	movne	sl, #0
   10e8c:	moveq	sl, #10
   10e90:	ldr	r5, [pc, #240]	; 10f88 <abort@plt+0x1ec>
   10e94:	uxtb	r9, sl
   10e98:	mov	r8, #46	; 0x2e
   10e9c:	b	10ef0 <abort@plt+0x154>
   10ea0:	ldr	r2, [r3, #20]
   10ea4:	ldr	r1, [r3, #24]
   10ea8:	cmp	r1, r2
   10eac:	addhi	r1, r2, #1
   10eb0:	strhi	r1, [r3, #20]
   10eb4:	strbhi	r8, [r2]
   10eb8:	bls	10f24 <abort@plt+0x188>
   10ebc:	ldr	r0, [r5]
   10ec0:	ldr	r3, [r0, #20]
   10ec4:	ldr	r2, [r0, #24]
   10ec8:	cmp	r3, r2
   10ecc:	addcc	r2, r3, #1
   10ed0:	strcc	r2, [r0, #20]
   10ed4:	strbcc	r9, [r3]
   10ed8:	bcs	10f34 <abort@plt+0x198>
   10edc:	ldr	r3, [r6]
   10ee0:	add	r3, r3, #1
   10ee4:	cmp	r3, r7
   10ee8:	str	r3, [r6]
   10eec:	bge	10f18 <abort@plt+0x17c>
   10ef0:	ldr	fp, [r4, r3, lsl #2]
   10ef4:	mov	r0, fp
   10ef8:	bl	114b4 <abort@plt+0x718>
   10efc:	ldr	r3, [r5]
   10f00:	subs	r2, r0, #0
   10f04:	beq	10ea0 <abort@plt+0x104>
   10f08:	mov	r0, fp
   10f0c:	mov	r1, #1
   10f10:	bl	10bf8 <fwrite_unlocked@plt>
   10f14:	b	10ebc <abort@plt+0x120>
   10f18:	mov	r0, #0
   10f1c:	add	sp, sp, #20
   10f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f24:	mov	r0, r3
   10f28:	mov	r1, #46	; 0x2e
   10f2c:	bl	10d54 <__overflow@plt>
   10f30:	b	10ebc <abort@plt+0x120>
   10f34:	mov	r1, sl
   10f38:	bl	10d54 <__overflow@plt>
   10f3c:	b	10edc <abort@plt+0x140>
   10f40:	mov	r0, #0
   10f44:	bl	11094 <abort@plt+0x2f8>
   10f48:	mov	r2, #5
   10f4c:	ldr	r1, [pc, #76]	; 10fa0 <abort@plt+0x204>
   10f50:	mov	r0, #0
   10f54:	bl	10c10 <dcgettext@plt>
   10f58:	mov	r1, #0
   10f5c:	mov	r2, r0
   10f60:	mov	r0, r1
   10f64:	bl	10c88 <error@plt>
   10f68:	b	10e34 <abort@plt+0x98>
   10f6c:	andeq	r4, r1, r8, lsl #29
   10f70:	andeq	r4, r1, r0, lsr #19
   10f74:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   10f78:	ldrdeq	r1, [r1], -ip
   10f7c:	andeq	r4, r1, r0, ror #12
   10f80:			; <UNDEFINED> instruction: 0x000149b4
   10f84:	andeq	r5, r2, ip, asr #1
   10f88:	andeq	r5, r2, ip, lsr #2
   10f8c:			; <UNDEFINED> instruction: 0x000149b8
   10f90:	andeq	r4, r1, r8, asr #19
   10f94:	andeq	r4, r1, r0, lsr #13
   10f98:	strdeq	r4, [r1], -r0
   10f9c:	andeq	r5, r2, r0, lsr #2
   10fa0:	ldrdeq	r4, [r1], -r8
   10fa4:	mov	fp, #0
   10fa8:	mov	lr, #0
   10fac:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb0:	mov	r2, sp
   10fb4:	push	{r2}		; (str r2, [sp, #-4]!)
   10fb8:	push	{r0}		; (str r0, [sp, #-4]!)
   10fbc:	ldr	ip, [pc, #16]	; 10fd4 <abort@plt+0x238>
   10fc0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc4:	ldr	r0, [pc, #12]	; 10fd8 <abort@plt+0x23c>
   10fc8:	ldr	r3, [pc, #12]	; 10fdc <abort@plt+0x240>
   10fcc:	bl	10ca0 <__libc_start_main@plt>
   10fd0:	bl	10d9c <abort@plt>
   10fd4:	andeq	r4, r1, r0, lsl #12
   10fd8:	andeq	r0, r1, r8, lsr #27
   10fdc:	andeq	r4, r1, r0, lsr #11
   10fe0:	ldr	r3, [pc, #20]	; 10ffc <abort@plt+0x260>
   10fe4:	ldr	r2, [pc, #20]	; 11000 <abort@plt+0x264>
   10fe8:	add	r3, pc, r3
   10fec:	ldr	r2, [r3, r2]
   10ff0:	cmp	r2, #0
   10ff4:	bxeq	lr
   10ff8:	b	10cb8 <__gmon_start__@plt>
   10ffc:	andeq	r4, r1, r0, lsl r0
   11000:	andeq	r0, r0, r0, asr #1
   11004:	ldr	r0, [pc, #24]	; 11024 <abort@plt+0x288>
   11008:	ldr	r3, [pc, #24]	; 11028 <abort@plt+0x28c>
   1100c:	cmp	r3, r0
   11010:	bxeq	lr
   11014:	ldr	r3, [pc, #16]	; 1102c <abort@plt+0x290>
   11018:	cmp	r3, #0
   1101c:	bxeq	lr
   11020:	bx	r3
   11024:	andeq	r5, r2, r4, lsl r1
   11028:	andeq	r5, r2, r4, lsl r1
   1102c:	andeq	r0, r0, r0
   11030:	ldr	r0, [pc, #36]	; 1105c <abort@plt+0x2c0>
   11034:	ldr	r1, [pc, #36]	; 11060 <abort@plt+0x2c4>
   11038:	sub	r1, r1, r0
   1103c:	asr	r1, r1, #2
   11040:	add	r1, r1, r1, lsr #31
   11044:	asrs	r1, r1, #1
   11048:	bxeq	lr
   1104c:	ldr	r3, [pc, #16]	; 11064 <abort@plt+0x2c8>
   11050:	cmp	r3, #0
   11054:	bxeq	lr
   11058:	bx	r3
   1105c:	andeq	r5, r2, r4, lsl r1
   11060:	andeq	r5, r2, r4, lsl r1
   11064:	andeq	r0, r0, r0
   11068:	push	{r4, lr}
   1106c:	ldr	r4, [pc, #24]	; 1108c <abort@plt+0x2f0>
   11070:	ldrb	r3, [r4]
   11074:	cmp	r3, #0
   11078:	popne	{r4, pc}
   1107c:	bl	11004 <abort@plt+0x268>
   11080:	mov	r3, #1
   11084:	strb	r3, [r4]
   11088:	pop	{r4, pc}
   1108c:	andeq	r5, r2, r0, lsr r1
   11090:	b	11030 <abort@plt+0x294>
   11094:	ldr	r3, [pc, #712]	; 11364 <abort@plt+0x5c8>
   11098:	push	{r7, lr}
   1109c:	sub	sp, sp, #72	; 0x48
   110a0:	ldr	r3, [r3]
   110a4:	subs	r4, r0, #0
   110a8:	str	r3, [sp, #68]	; 0x44
   110ac:	beq	110e8 <abort@plt+0x34c>
   110b0:	ldr	r3, [pc, #688]	; 11368 <abort@plt+0x5cc>
   110b4:	mov	r2, #5
   110b8:	ldr	r1, [pc, #684]	; 1136c <abort@plt+0x5d0>
   110bc:	mov	r0, #0
   110c0:	ldr	r5, [r3]
   110c4:	bl	10c10 <dcgettext@plt>
   110c8:	ldr	r3, [pc, #672]	; 11370 <abort@plt+0x5d4>
   110cc:	mov	r1, #1
   110d0:	ldr	r3, [r3]
   110d4:	mov	r2, r0
   110d8:	mov	r0, r5
   110dc:	bl	10d30 <__fprintf_chk@plt>
   110e0:	mov	r0, r4
   110e4:	bl	10cdc <exit@plt>
   110e8:	mov	r2, #5
   110ec:	ldr	r1, [pc, #640]	; 11374 <abort@plt+0x5d8>
   110f0:	bl	10c10 <dcgettext@plt>
   110f4:	ldr	r6, [pc, #628]	; 11370 <abort@plt+0x5d4>
   110f8:	ldr	r5, [pc, #632]	; 11378 <abort@plt+0x5dc>
   110fc:	ldr	r2, [r6]
   11100:	mov	r1, r0
   11104:	mov	r0, #1
   11108:	bl	10d18 <__printf_chk@plt>
   1110c:	mov	r2, #5
   11110:	ldr	r1, [pc, #612]	; 1137c <abort@plt+0x5e0>
   11114:	mov	r0, r4
   11118:	bl	10c10 <dcgettext@plt>
   1111c:	ldr	r1, [r5]
   11120:	bl	10b98 <fputs_unlocked@plt>
   11124:	mov	r2, #5
   11128:	ldr	r1, [pc, #592]	; 11380 <abort@plt+0x5e4>
   1112c:	mov	r0, r4
   11130:	bl	10c10 <dcgettext@plt>
   11134:	ldr	r1, [r5]
   11138:	bl	10b98 <fputs_unlocked@plt>
   1113c:	mov	r2, #5
   11140:	ldr	r1, [pc, #572]	; 11384 <abort@plt+0x5e8>
   11144:	mov	r0, r4
   11148:	bl	10c10 <dcgettext@plt>
   1114c:	ldr	r1, [r5]
   11150:	bl	10b98 <fputs_unlocked@plt>
   11154:	mov	r2, #5
   11158:	ldr	r1, [pc, #552]	; 11388 <abort@plt+0x5ec>
   1115c:	mov	r0, r4
   11160:	bl	10c10 <dcgettext@plt>
   11164:	ldr	r1, [r5]
   11168:	bl	10b98 <fputs_unlocked@plt>
   1116c:	mov	r2, #5
   11170:	ldr	r1, [pc, #532]	; 1138c <abort@plt+0x5f0>
   11174:	mov	r0, r4
   11178:	bl	10c10 <dcgettext@plt>
   1117c:	ldr	r3, [r6]
   11180:	str	r3, [sp]
   11184:	mov	r2, r3
   11188:	mov	r1, r0
   1118c:	mov	r0, #1
   11190:	bl	10d18 <__printf_chk@plt>
   11194:	ldr	lr, [pc, #500]	; 11390 <abort@plt+0x5f4>
   11198:	add	ip, sp, #12
   1119c:	ldm	lr!, {r0, r1, r2, r3}
   111a0:	stmia	ip!, {r0, r1, r2, r3}
   111a4:	ldm	lr!, {r0, r1, r2, r3}
   111a8:	ldr	r6, [sp, #12]
   111ac:	stmia	ip!, {r0, r1, r2, r3}
   111b0:	cmp	r6, #0
   111b4:	ldm	lr!, {r0, r1, r2, r3}
   111b8:	addeq	r5, sp, #12
   111bc:	stmia	ip!, {r0, r1, r2, r3}
   111c0:	ldm	lr, {r0, r1}
   111c4:	stm	ip, {r0, r1}
   111c8:	beq	111f8 <abort@plt+0x45c>
   111cc:	ldr	r7, [pc, #448]	; 11394 <abort@plt+0x5f8>
   111d0:	add	r5, sp, #12
   111d4:	b	111e4 <abort@plt+0x448>
   111d8:	ldr	r6, [r5, #8]!
   111dc:	cmp	r6, #0
   111e0:	beq	111f8 <abort@plt+0x45c>
   111e4:	mov	r1, r6
   111e8:	mov	r0, r7
   111ec:	bl	10bb0 <strcmp@plt>
   111f0:	cmp	r0, #0
   111f4:	bne	111d8 <abort@plt+0x43c>
   111f8:	ldr	r5, [r5, #4]
   111fc:	mov	r2, #5
   11200:	cmp	r5, #0
   11204:	ldr	r1, [pc, #396]	; 11398 <abort@plt+0x5fc>
   11208:	beq	112b0 <abort@plt+0x514>
   1120c:	mov	r0, #0
   11210:	bl	10c10 <dcgettext@plt>
   11214:	ldr	r3, [pc, #384]	; 1139c <abort@plt+0x600>
   11218:	ldr	r2, [pc, #384]	; 113a0 <abort@plt+0x604>
   1121c:	mov	r1, r0
   11220:	mov	r0, #1
   11224:	bl	10d18 <__printf_chk@plt>
   11228:	mov	r1, #0
   1122c:	mov	r0, #5
   11230:	bl	10d60 <setlocale@plt>
   11234:	cmp	r0, #0
   11238:	ldreq	r6, [pc, #340]	; 11394 <abort@plt+0x5f8>
   1123c:	beq	11258 <abort@plt+0x4bc>
   11240:	mov	r2, #3
   11244:	ldr	r1, [pc, #344]	; 113a4 <abort@plt+0x608>
   11248:	bl	10d90 <strncmp@plt>
   1124c:	ldr	r6, [pc, #320]	; 11394 <abort@plt+0x5f8>
   11250:	cmp	r0, #0
   11254:	bne	11340 <abort@plt+0x5a4>
   11258:	mov	r2, #5
   1125c:	ldr	r1, [pc, #324]	; 113a8 <abort@plt+0x60c>
   11260:	mov	r0, #0
   11264:	bl	10c10 <dcgettext@plt>
   11268:	ldr	r3, [pc, #292]	; 11394 <abort@plt+0x5f8>
   1126c:	ldr	r2, [pc, #296]	; 1139c <abort@plt+0x600>
   11270:	mov	r1, r0
   11274:	mov	r0, #1
   11278:	bl	10d18 <__printf_chk@plt>
   1127c:	mov	r2, #5
   11280:	ldr	r1, [pc, #292]	; 113ac <abort@plt+0x610>
   11284:	mov	r0, #0
   11288:	bl	10c10 <dcgettext@plt>
   1128c:	ldr	r2, [pc, #284]	; 113b0 <abort@plt+0x614>
   11290:	cmp	r5, r6
   11294:	ldr	r3, [pc, #280]	; 113b4 <abort@plt+0x618>
   11298:	movne	r3, r2
   1129c:	mov	r1, r0
   112a0:	mov	r2, r5
   112a4:	mov	r0, #1
   112a8:	bl	10d18 <__printf_chk@plt>
   112ac:	b	110e0 <abort@plt+0x344>
   112b0:	mov	r0, r5
   112b4:	bl	10c10 <dcgettext@plt>
   112b8:	ldr	r3, [pc, #220]	; 1139c <abort@plt+0x600>
   112bc:	ldr	r2, [pc, #220]	; 113a0 <abort@plt+0x604>
   112c0:	mov	r1, r0
   112c4:	mov	r0, #1
   112c8:	bl	10d18 <__printf_chk@plt>
   112cc:	mov	r1, r5
   112d0:	mov	r0, #5
   112d4:	bl	10d60 <setlocale@plt>
   112d8:	cmp	r0, #0
   112dc:	beq	112f4 <abort@plt+0x558>
   112e0:	mov	r2, #3
   112e4:	ldr	r1, [pc, #184]	; 113a4 <abort@plt+0x608>
   112e8:	bl	10d90 <strncmp@plt>
   112ec:	cmp	r0, #0
   112f0:	bne	11338 <abort@plt+0x59c>
   112f4:	mov	r2, #5
   112f8:	ldr	r1, [pc, #168]	; 113a8 <abort@plt+0x60c>
   112fc:	mov	r0, #0
   11300:	bl	10c10 <dcgettext@plt>
   11304:	ldr	r3, [pc, #136]	; 11394 <abort@plt+0x5f8>
   11308:	ldr	r2, [pc, #140]	; 1139c <abort@plt+0x600>
   1130c:	mov	r5, r3
   11310:	mov	r1, r0
   11314:	mov	r0, #1
   11318:	bl	10d18 <__printf_chk@plt>
   1131c:	ldr	r1, [pc, #136]	; 113ac <abort@plt+0x610>
   11320:	mov	r2, #5
   11324:	mov	r0, #0
   11328:	bl	10c10 <dcgettext@plt>
   1132c:	ldr	r3, [pc, #128]	; 113b4 <abort@plt+0x618>
   11330:	mov	r1, r0
   11334:	b	112a0 <abort@plt+0x504>
   11338:	ldr	r6, [pc, #84]	; 11394 <abort@plt+0x5f8>
   1133c:	mov	r5, r6
   11340:	mov	r2, #5
   11344:	ldr	r1, [pc, #108]	; 113b8 <abort@plt+0x61c>
   11348:	mov	r0, #0
   1134c:	bl	10c10 <dcgettext@plt>
   11350:	ldr	r2, [pc, #60]	; 11394 <abort@plt+0x5f8>
   11354:	mov	r1, r0
   11358:	mov	r0, #1
   1135c:	bl	10d18 <__printf_chk@plt>
   11360:	b	11258 <abort@plt+0x4bc>
   11364:	andeq	r4, r2, r8, lsl #30
   11368:	andeq	r5, r2, r8, lsr #2
   1136c:	andeq	r4, r1, r8, lsr #13
   11370:	andeq	r5, r2, ip, lsr r1
   11374:	ldrdeq	r4, [r1], -r0
   11378:	andeq	r5, r2, ip, lsr #2
   1137c:	andeq	r4, r1, ip, ror #13
   11380:	andeq	r4, r1, r4, lsl #15
   11384:	andeq	r4, r1, r4, asr #15
   11388:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1138c:	andeq	r4, r1, ip, lsr #16
   11390:	andeq	r4, r1, r8, lsr #12
   11394:	andeq	r4, r1, r0, lsr #13
   11398:			; <UNDEFINED> instruction: 0x000148b0
   1139c:	andeq	r4, r1, r8, asr #17
   113a0:	strdeq	r4, [r1], -r0
   113a4:	andeq	r4, r1, r0, lsl #18
   113a8:	andeq	r4, r1, ip, asr #18
   113ac:	andeq	r4, r1, ip, ror #18
   113b0:	andeq	r4, r1, r8, lsl #29
   113b4:	strdeq	r4, [r1], -r0
   113b8:	andeq	r4, r1, r4, lsl #18
   113bc:	ldr	r3, [pc, #4]	; 113c8 <abort@plt+0x62c>
   113c0:	str	r0, [r3]
   113c4:	bx	lr
   113c8:	andeq	r5, r2, r4, lsr r1
   113cc:	ldr	r3, [pc, #4]	; 113d8 <abort@plt+0x63c>
   113d0:	strb	r0, [r3, #4]
   113d4:	bx	lr
   113d8:	andeq	r5, r2, r4, lsr r1
   113dc:	ldr	r3, [pc, #180]	; 11498 <abort@plt+0x6fc>
   113e0:	push	{r4, r5, r6, lr}
   113e4:	sub	sp, sp, #8
   113e8:	ldr	r0, [r3]
   113ec:	bl	140f0 <abort@plt+0x3354>
   113f0:	cmp	r0, #0
   113f4:	beq	1141c <abort@plt+0x680>
   113f8:	bl	10cf4 <__errno_location@plt>
   113fc:	ldr	r5, [pc, #152]	; 1149c <abort@plt+0x700>
   11400:	ldrb	r3, [r5, #4]
   11404:	cmp	r3, #0
   11408:	mov	r4, r0
   1140c:	beq	11438 <abort@plt+0x69c>
   11410:	ldr	r3, [r0]
   11414:	cmp	r3, #32
   11418:	bne	11438 <abort@plt+0x69c>
   1141c:	ldr	r3, [pc, #124]	; 114a0 <abort@plt+0x704>
   11420:	ldr	r0, [r3]
   11424:	bl	140f0 <abort@plt+0x3354>
   11428:	cmp	r0, #0
   1142c:	bne	11478 <abort@plt+0x6dc>
   11430:	add	sp, sp, #8
   11434:	pop	{r4, r5, r6, pc}
   11438:	mov	r2, #5
   1143c:	ldr	r1, [pc, #96]	; 114a4 <abort@plt+0x708>
   11440:	mov	r0, #0
   11444:	bl	10c10 <dcgettext@plt>
   11448:	mov	r6, r0
   1144c:	ldr	r0, [r5]
   11450:	cmp	r0, #0
   11454:	beq	11484 <abort@plt+0x6e8>
   11458:	ldr	r4, [r4]
   1145c:	bl	13698 <abort@plt+0x28fc>
   11460:	mov	r1, r4
   11464:	str	r6, [sp]
   11468:	ldr	r2, [pc, #56]	; 114a8 <abort@plt+0x70c>
   1146c:	mov	r3, r0
   11470:	mov	r0, #0
   11474:	bl	10c88 <error@plt>
   11478:	ldr	r3, [pc, #44]	; 114ac <abort@plt+0x710>
   1147c:	ldr	r0, [r3]
   11480:	bl	10bd4 <_exit@plt>
   11484:	mov	r3, r6
   11488:	ldr	r1, [r4]
   1148c:	ldr	r2, [pc, #28]	; 114b0 <abort@plt+0x714>
   11490:	bl	10c88 <error@plt>
   11494:	b	11478 <abort@plt+0x6dc>
   11498:	andeq	r5, r2, ip, lsr #2
   1149c:	andeq	r5, r2, r4, lsr r1
   114a0:	andeq	r5, r2, r8, lsr #2
   114a4:	andeq	r4, r1, r4, ror sl
   114a8:	andeq	r4, r1, r0, lsl #21
   114ac:	ldrdeq	r5, [r2], -r0
   114b0:	andeq	r4, r1, r4, lsl #21
   114b4:	push	{r4, r5, r6, lr}
   114b8:	mov	r4, r0
   114bc:	ldrb	ip, [r0]
   114c0:	sub	r5, ip, #47	; 0x2f
   114c4:	bl	11574 <abort@plt+0x7d8>
   114c8:	clz	r5, r5
   114cc:	lsr	r5, r5, #5
   114d0:	sub	r0, r0, r4
   114d4:	cmp	r0, r5
   114d8:	popls	{r4, r5, r6, pc}
   114dc:	add	r3, r4, r0
   114e0:	ldrb	r3, [r3, #-1]
   114e4:	cmp	r3, #47	; 0x2f
   114e8:	popne	{r4, r5, r6, pc}
   114ec:	sub	r0, r0, #2
   114f0:	sub	ip, r4, #1
   114f4:	add	r3, r4, r0
   114f8:	add	ip, ip, r5
   114fc:	rsb	r2, r4, #1
   11500:	cmp	r3, ip
   11504:	add	r0, r2, r3
   11508:	popeq	{r4, r5, r6, pc}
   1150c:	ldrb	r1, [r3], #-1
   11510:	cmp	r1, #47	; 0x2f
   11514:	beq	11500 <abort@plt+0x764>
   11518:	pop	{r4, r5, r6, pc}
   1151c:	push	{r4, r5, r6, lr}
   11520:	mov	r6, r0
   11524:	bl	114b4 <abort@plt+0x718>
   11528:	add	r3, r0, #1
   1152c:	mov	r4, r0
   11530:	cmp	r0, #0
   11534:	movne	r0, r3
   11538:	addeq	r0, r3, #1
   1153c:	bl	10c94 <malloc@plt>
   11540:	subs	r5, r0, #0
   11544:	beq	1156c <abort@plt+0x7d0>
   11548:	mov	r2, r4
   1154c:	mov	r1, r6
   11550:	bl	10be0 <memcpy@plt>
   11554:	cmp	r4, #0
   11558:	moveq	r3, #46	; 0x2e
   1155c:	moveq	r4, #1
   11560:	strbeq	r3, [r5]
   11564:	mov	r3, #0
   11568:	strb	r3, [r5, r4]
   1156c:	mov	r0, r5
   11570:	pop	{r4, r5, r6, pc}
   11574:	ldrb	r3, [r0]
   11578:	cmp	r3, #47	; 0x2f
   1157c:	bne	1158c <abort@plt+0x7f0>
   11580:	ldrb	r3, [r0, #1]!
   11584:	cmp	r3, #47	; 0x2f
   11588:	beq	11580 <abort@plt+0x7e4>
   1158c:	cmp	r3, #0
   11590:	bxeq	lr
   11594:	mov	r2, r0
   11598:	mov	r1, #0
   1159c:	cmp	r3, #47	; 0x2f
   115a0:	moveq	r1, #1
   115a4:	beq	115b4 <abort@plt+0x818>
   115a8:	cmp	r1, #0
   115ac:	movne	r0, r2
   115b0:	movne	r1, #0
   115b4:	ldrb	r3, [r2, #1]!
   115b8:	cmp	r3, #0
   115bc:	bne	1159c <abort@plt+0x800>
   115c0:	bx	lr
   115c4:	push	{r4, lr}
   115c8:	mov	r4, r0
   115cc:	bl	10ce8 <strlen@plt>
   115d0:	cmp	r0, #1
   115d4:	popls	{r4, pc}
   115d8:	add	r2, r4, r0
   115dc:	mov	r3, r0
   115e0:	ldrb	r2, [r2, #-1]
   115e4:	cmp	r2, #47	; 0x2f
   115e8:	subeq	r3, r0, #2
   115ec:	addeq	r3, r4, r3
   115f0:	rsbeq	r1, r4, #1
   115f4:	popne	{r4, pc}
   115f8:	cmp	r3, r4
   115fc:	add	r0, r1, r3
   11600:	popeq	{r4, pc}
   11604:	ldrb	r2, [r3], #-1
   11608:	cmp	r2, #47	; 0x2f
   1160c:	popne	{r4, pc}
   11610:	b	115f8 <abort@plt+0x85c>
   11614:	push	{r4, r5, r6, lr}
   11618:	subs	r4, r0, #0
   1161c:	beq	11690 <abort@plt+0x8f4>
   11620:	mov	r1, #47	; 0x2f
   11624:	bl	10d6c <strrchr@plt>
   11628:	subs	r5, r0, #0
   1162c:	beq	1167c <abort@plt+0x8e0>
   11630:	add	r6, r5, #1
   11634:	sub	r3, r6, r4
   11638:	cmp	r3, #6
   1163c:	ble	1167c <abort@plt+0x8e0>
   11640:	mov	r2, #7
   11644:	ldr	r1, [pc, #96]	; 116ac <abort@plt+0x910>
   11648:	sub	r0, r5, #6
   1164c:	bl	10d90 <strncmp@plt>
   11650:	cmp	r0, #0
   11654:	bne	1167c <abort@plt+0x8e0>
   11658:	mov	r2, #3
   1165c:	ldr	r1, [pc, #76]	; 116b0 <abort@plt+0x914>
   11660:	mov	r0, r6
   11664:	bl	10d90 <strncmp@plt>
   11668:	cmp	r0, #0
   1166c:	movne	r4, r6
   11670:	ldreq	r3, [pc, #60]	; 116b4 <abort@plt+0x918>
   11674:	addeq	r4, r5, #4
   11678:	streq	r4, [r3]
   1167c:	ldr	r2, [pc, #52]	; 116b8 <abort@plt+0x91c>
   11680:	ldr	r3, [pc, #52]	; 116bc <abort@plt+0x920>
   11684:	str	r4, [r2]
   11688:	str	r4, [r3]
   1168c:	pop	{r4, r5, r6, pc}
   11690:	ldr	r3, [pc, #40]	; 116c0 <abort@plt+0x924>
   11694:	mov	r2, #55	; 0x37
   11698:	mov	r1, #1
   1169c:	ldr	r3, [r3]
   116a0:	ldr	r0, [pc, #28]	; 116c4 <abort@plt+0x928>
   116a4:	bl	10c4c <fwrite@plt>
   116a8:	bl	10d9c <abort@plt>
   116ac:	andeq	r4, r1, r0, asr #21
   116b0:	andeq	r4, r1, r8, asr #21
   116b4:	andeq	r5, r2, r8, lsl r1
   116b8:	andeq	r5, r2, ip, lsr r1
   116bc:	andeq	r5, r2, ip, lsl r1
   116c0:	andeq	r5, r2, r8, lsr #2
   116c4:	andeq	r4, r1, r8, lsl #21
   116c8:	push	{r4, lr}
   116cc:	mov	r2, #48	; 0x30
   116d0:	mov	r4, r1
   116d4:	mov	r1, #0
   116d8:	bl	10d0c <memset@plt>
   116dc:	cmp	r4, #10
   116e0:	beq	116ec <abort@plt+0x950>
   116e4:	str	r4, [r0]
   116e8:	pop	{r4, pc}
   116ec:	bl	10d9c <abort@plt>
   116f0:	push	{r4, r5, r6, lr}
   116f4:	mov	r2, #5
   116f8:	mov	r5, r0
   116fc:	mov	r6, r1
   11700:	mov	r1, r0
   11704:	mov	r0, #0
   11708:	bl	10c10 <dcgettext@plt>
   1170c:	cmp	r5, r0
   11710:	mov	r4, r0
   11714:	beq	11720 <abort@plt+0x984>
   11718:	mov	r0, r4
   1171c:	pop	{r4, r5, r6, pc}
   11720:	bl	141b0 <abort@plt+0x3414>
   11724:	ldrb	r3, [r0]
   11728:	bic	r3, r3, #32
   1172c:	cmp	r3, #85	; 0x55
   11730:	bne	11790 <abort@plt+0x9f4>
   11734:	ldrb	r3, [r0, #1]
   11738:	bic	r3, r3, #32
   1173c:	cmp	r3, #84	; 0x54
   11740:	bne	11808 <abort@plt+0xa6c>
   11744:	ldrb	r3, [r0, #2]
   11748:	bic	r3, r3, #32
   1174c:	cmp	r3, #70	; 0x46
   11750:	bne	11808 <abort@plt+0xa6c>
   11754:	ldrb	r3, [r0, #3]
   11758:	cmp	r3, #45	; 0x2d
   1175c:	bne	11808 <abort@plt+0xa6c>
   11760:	ldrb	r3, [r0, #4]
   11764:	cmp	r3, #56	; 0x38
   11768:	bne	11808 <abort@plt+0xa6c>
   1176c:	ldrb	r3, [r0, #5]
   11770:	cmp	r3, #0
   11774:	bne	11808 <abort@plt+0xa6c>
   11778:	ldrb	r2, [r4]
   1177c:	ldr	r3, [pc, #156]	; 11820 <abort@plt+0xa84>
   11780:	ldr	r4, [pc, #156]	; 11824 <abort@plt+0xa88>
   11784:	cmp	r2, #96	; 0x60
   11788:	movne	r4, r3
   1178c:	b	11718 <abort@plt+0x97c>
   11790:	cmp	r3, #71	; 0x47
   11794:	bne	11808 <abort@plt+0xa6c>
   11798:	ldrb	r3, [r0, #1]
   1179c:	bic	r3, r3, #32
   117a0:	cmp	r3, #66	; 0x42
   117a4:	bne	11808 <abort@plt+0xa6c>
   117a8:	ldrb	r3, [r0, #2]
   117ac:	cmp	r3, #49	; 0x31
   117b0:	bne	11808 <abort@plt+0xa6c>
   117b4:	ldrb	r3, [r0, #3]
   117b8:	cmp	r3, #56	; 0x38
   117bc:	bne	11808 <abort@plt+0xa6c>
   117c0:	ldrb	r3, [r0, #4]
   117c4:	cmp	r3, #48	; 0x30
   117c8:	bne	11808 <abort@plt+0xa6c>
   117cc:	ldrb	r3, [r0, #5]
   117d0:	cmp	r3, #51	; 0x33
   117d4:	bne	11808 <abort@plt+0xa6c>
   117d8:	ldrb	r3, [r0, #6]
   117dc:	cmp	r3, #48	; 0x30
   117e0:	bne	11808 <abort@plt+0xa6c>
   117e4:	ldrb	r3, [r0, #7]
   117e8:	cmp	r3, #0
   117ec:	bne	11808 <abort@plt+0xa6c>
   117f0:	ldrb	r2, [r4]
   117f4:	ldr	r3, [pc, #44]	; 11828 <abort@plt+0xa8c>
   117f8:	ldr	r4, [pc, #44]	; 1182c <abort@plt+0xa90>
   117fc:	cmp	r2, #96	; 0x60
   11800:	movne	r4, r3
   11804:	b	11718 <abort@plt+0x97c>
   11808:	ldr	r3, [pc, #32]	; 11830 <abort@plt+0xa94>
   1180c:	ldr	r4, [pc, #32]	; 11834 <abort@plt+0xa98>
   11810:	cmp	r6, #9
   11814:	movne	r4, r3
   11818:	mov	r0, r4
   1181c:	pop	{r4, r5, r6, pc}
   11820:	andeq	r4, r1, r4, lsr #22
   11824:	andeq	r4, r1, r0, lsr fp
   11828:	andeq	r4, r1, r8, lsr #22
   1182c:	andeq	r4, r1, ip, lsr #22
   11830:	andeq	r4, r1, r4, lsr fp
   11834:	andeq	r4, r1, r0, lsr #22
   11838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1183c:	sub	sp, sp, #124	; 0x7c
   11840:	ldr	ip, [pc, #3576]	; 12640 <abort@plt+0x18a4>
   11844:	str	r3, [sp, #24]
   11848:	ldr	r3, [sp, #168]	; 0xa8
   1184c:	ldr	ip, [ip]
   11850:	str	r3, [sp, #56]	; 0x38
   11854:	ldr	r3, [sp, #172]	; 0xac
   11858:	ldr	r8, [sp, #160]	; 0xa0
   1185c:	str	r3, [sp, #80]	; 0x50
   11860:	ldr	r3, [sp, #176]	; 0xb0
   11864:	mov	fp, r0
   11868:	str	r3, [sp, #76]	; 0x4c
   1186c:	mov	sl, r1
   11870:	str	r2, [sp, #36]	; 0x24
   11874:	str	ip, [sp, #116]	; 0x74
   11878:	bl	10c64 <__ctype_get_mb_cur_max@plt>
   1187c:	ldr	r3, [sp, #164]	; 0xa4
   11880:	ands	r4, r3, #2
   11884:	movne	r3, #1
   11888:	moveq	r3, #0
   1188c:	str	r3, [sp, #32]
   11890:	str	r0, [sp, #64]	; 0x40
   11894:	cmp	r8, #10
   11898:	ldrls	pc, [pc, r8, lsl #2]
   1189c:	b	1304c <abort@plt+0x22b0>
   118a0:	muleq	r1, r4, ip
   118a4:	andeq	r1, r1, ip, lsr #26
   118a8:	andeq	r2, r1, ip, lsr #6
   118ac:	andeq	r1, r1, ip, asr #26
   118b0:	andeq	r1, r1, r0, lsl #24
   118b4:	andeq	r1, r1, r8, asr #24
   118b8:	andeq	r1, r1, r4, asr #25
   118bc:	strdeq	r1, [r1], -ip
   118c0:	andeq	r1, r1, ip, asr #17
   118c4:	andeq	r1, r1, ip, asr #17
   118c8:	andeq	r1, r1, ip, asr #17
   118cc:	cmp	r8, #10
   118d0:	beq	118f4 <abort@plt+0xb58>
   118d4:	mov	r1, r8
   118d8:	ldr	r0, [pc, #3428]	; 12644 <abort@plt+0x18a8>
   118dc:	bl	116f0 <abort@plt+0x954>
   118e0:	mov	r1, r8
   118e4:	str	r0, [sp, #80]	; 0x50
   118e8:	ldr	r0, [pc, #3420]	; 1264c <abort@plt+0x18b0>
   118ec:	bl	116f0 <abort@plt+0x954>
   118f0:	str	r0, [sp, #76]	; 0x4c
   118f4:	cmp	r4, #0
   118f8:	movne	r4, #0
   118fc:	beq	12d0c <abort@plt+0x1f70>
   11900:	ldr	r7, [sp, #76]	; 0x4c
   11904:	mov	r5, #0
   11908:	mov	r6, #1
   1190c:	mov	r0, r7
   11910:	str	r6, [sp, #40]	; 0x28
   11914:	str	r5, [sp, #68]	; 0x44
   11918:	bl	10ce8 <strlen@plt>
   1191c:	str	r6, [sp, #28]
   11920:	str	r5, [sp, #44]	; 0x2c
   11924:	str	r5, [sp, #72]	; 0x48
   11928:	str	r7, [sp, #60]	; 0x3c
   1192c:	str	r0, [sp, #52]	; 0x34
   11930:	str	r8, [sp, #160]	; 0xa0
   11934:	mov	r8, fp
   11938:	ldr	fp, [sp, #160]	; 0xa0
   1193c:	mov	r9, #0
   11940:	ldr	r3, [sp, #24]
   11944:	cmn	r3, #1
   11948:	beq	11eb0 <abort@plt+0x1114>
   1194c:	ldr	r3, [sp, #24]
   11950:	subs	r6, r3, r9
   11954:	movne	r6, #1
   11958:	cmp	r6, #0
   1195c:	beq	11ec8 <abort@plt+0x112c>
   11960:	ldr	r7, [sp, #28]
   11964:	ldr	r0, [sp, #36]	; 0x24
   11968:	cmp	fp, #2
   1196c:	moveq	r7, #0
   11970:	andne	r7, r7, #1
   11974:	add	r3, r0, r9
   11978:	cmp	r7, #0
   1197c:	str	r3, [sp, #48]	; 0x30
   11980:	beq	1236c <abort@plt+0x15d0>
   11984:	ldr	r2, [sp, #52]	; 0x34
   11988:	cmp	r2, #0
   1198c:	beq	12650 <abort@plt+0x18b4>
   11990:	ldr	r1, [sp, #24]
   11994:	cmp	r2, #1
   11998:	mov	r3, r2
   1199c:	movls	r3, #0
   119a0:	movhi	r3, #1
   119a4:	cmn	r1, #1
   119a8:	movne	r3, #0
   119ac:	cmp	r3, #0
   119b0:	add	r5, r9, r2
   119b4:	beq	119c0 <abort@plt+0xc24>
   119b8:	bl	10ce8 <strlen@plt>
   119bc:	str	r0, [sp, #24]
   119c0:	ldr	r3, [sp, #24]
   119c4:	cmp	r5, r3
   119c8:	bhi	12650 <abort@plt+0x18b4>
   119cc:	ldr	r2, [sp, #52]	; 0x34
   119d0:	ldr	r1, [sp, #60]	; 0x3c
   119d4:	ldr	r0, [sp, #48]	; 0x30
   119d8:	bl	10c04 <memcmp@plt>
   119dc:	cmp	r0, #0
   119e0:	bne	12650 <abort@plt+0x18b4>
   119e4:	ldr	r3, [sp, #32]
   119e8:	cmp	r3, #0
   119ec:	bne	12f0c <abort@plt+0x2170>
   119f0:	ldr	r3, [sp, #48]	; 0x30
   119f4:	ldrb	r5, [r3]
   119f8:	cmp	r5, #126	; 0x7e
   119fc:	ldrls	pc, [pc, r5, lsl #2]
   11a00:	b	122d0 <abort@plt+0x1534>
   11a04:			; <UNDEFINED> instruction: 0x000121bc
   11a08:	ldrdeq	r2, [r1], -r0
   11a0c:	ldrdeq	r2, [r1], -r0
   11a10:	ldrdeq	r2, [r1], -r0
   11a14:	ldrdeq	r2, [r1], -r0
   11a18:	ldrdeq	r2, [r1], -r0
   11a1c:	ldrdeq	r2, [r1], -r0
   11a20:	andeq	r2, r1, r8, lsl #5
   11a24:	andeq	r2, r1, r8, ror r2
   11a28:	andeq	r2, r1, r8, ror r1
   11a2c:	andeq	r2, r1, r0, asr #2
   11a30:	muleq	r1, r8, r1
   11a34:	andeq	r2, r1, r0, lsl #3
   11a38:	strheq	r2, [r1], -r0
   11a3c:	ldrdeq	r2, [r1], -r0
   11a40:	ldrdeq	r2, [r1], -r0
   11a44:	ldrdeq	r2, [r1], -r0
   11a48:	ldrdeq	r2, [r1], -r0
   11a4c:	ldrdeq	r2, [r1], -r0
   11a50:	ldrdeq	r2, [r1], -r0
   11a54:	ldrdeq	r2, [r1], -r0
   11a58:	ldrdeq	r2, [r1], -r0
   11a5c:	ldrdeq	r2, [r1], -r0
   11a60:	ldrdeq	r2, [r1], -r0
   11a64:	ldrdeq	r2, [r1], -r0
   11a68:	ldrdeq	r2, [r1], -r0
   11a6c:	ldrdeq	r2, [r1], -r0
   11a70:	ldrdeq	r2, [r1], -r0
   11a74:	ldrdeq	r2, [r1], -r0
   11a78:	ldrdeq	r2, [r1], -r0
   11a7c:	ldrdeq	r2, [r1], -r0
   11a80:	ldrdeq	r2, [r1], -r0
   11a84:	muleq	r1, r0, r2
   11a88:	andeq	r2, r1, r4, lsr #3
   11a8c:	andeq	r2, r1, r4, lsr #3
   11a90:	andeq	r2, r1, r8, lsr #5
   11a94:	andeq	r2, r1, r4, lsr #3
   11a98:	andeq	r2, r1, r4, asr #5
   11a9c:	andeq	r2, r1, r4, lsr #3
   11aa0:	andeq	r1, r1, r4, ror #31
   11aa4:	andeq	r2, r1, r4, lsr #3
   11aa8:	andeq	r2, r1, r4, lsr #3
   11aac:	andeq	r2, r1, r4, lsr #3
   11ab0:	andeq	r2, r1, r4, asr #5
   11ab4:	andeq	r2, r1, r4, asr #5
   11ab8:	andeq	r2, r1, r4, asr #5
   11abc:	andeq	r2, r1, r4, asr #5
   11ac0:	andeq	r2, r1, r4, asr #5
   11ac4:	andeq	r2, r1, r4, asr #5
   11ac8:	andeq	r2, r1, r4, asr #5
   11acc:	andeq	r2, r1, r4, asr #5
   11ad0:	andeq	r2, r1, r4, asr #5
   11ad4:	andeq	r2, r1, r4, asr #5
   11ad8:	andeq	r2, r1, r4, asr #5
   11adc:	andeq	r2, r1, r4, asr #5
   11ae0:	andeq	r2, r1, r4, asr #5
   11ae4:	andeq	r2, r1, r4, asr #5
   11ae8:	andeq	r2, r1, r4, asr #5
   11aec:	andeq	r2, r1, r4, asr #5
   11af0:	andeq	r2, r1, r4, lsr #3
   11af4:	andeq	r2, r1, r4, lsr #3
   11af8:	andeq	r2, r1, r4, lsr #3
   11afc:	andeq	r2, r1, r4, lsr #3
   11b00:			; <UNDEFINED> instruction: 0x00011fb8
   11b04:	ldrdeq	r2, [r1], -r0
   11b08:	andeq	r2, r1, r4, asr #5
   11b0c:	andeq	r2, r1, r4, asr #5
   11b10:	andeq	r2, r1, r4, asr #5
   11b14:	andeq	r2, r1, r4, asr #5
   11b18:	andeq	r2, r1, r4, asr #5
   11b1c:	andeq	r2, r1, r4, asr #5
   11b20:	andeq	r2, r1, r4, asr #5
   11b24:	andeq	r2, r1, r4, asr #5
   11b28:	andeq	r2, r1, r4, asr #5
   11b2c:	andeq	r2, r1, r4, asr #5
   11b30:	andeq	r2, r1, r4, asr #5
   11b34:	andeq	r2, r1, r4, asr #5
   11b38:	andeq	r2, r1, r4, asr #5
   11b3c:	andeq	r2, r1, r4, asr #5
   11b40:	andeq	r2, r1, r4, asr #5
   11b44:	andeq	r2, r1, r4, asr #5
   11b48:	andeq	r2, r1, r4, asr #5
   11b4c:	andeq	r2, r1, r4, asr #5
   11b50:	andeq	r2, r1, r4, asr #5
   11b54:	andeq	r2, r1, r4, asr #5
   11b58:	andeq	r2, r1, r4, asr #5
   11b5c:	andeq	r2, r1, r4, asr #5
   11b60:	andeq	r2, r1, r4, asr #5
   11b64:	andeq	r2, r1, r4, asr #5
   11b68:	andeq	r2, r1, r4, asr #5
   11b6c:	andeq	r2, r1, r4, asr #5
   11b70:	andeq	r2, r1, r4, lsr #3
   11b74:	andeq	r1, r1, r0, ror pc
   11b78:	andeq	r2, r1, r4, asr #5
   11b7c:	andeq	r2, r1, r4, lsr #3
   11b80:	andeq	r2, r1, r4, asr #5
   11b84:	andeq	r2, r1, r4, lsr #3
   11b88:	andeq	r2, r1, r4, asr #5
   11b8c:	andeq	r2, r1, r4, asr #5
   11b90:	andeq	r2, r1, r4, asr #5
   11b94:	andeq	r2, r1, r4, asr #5
   11b98:	andeq	r2, r1, r4, asr #5
   11b9c:	andeq	r2, r1, r4, asr #5
   11ba0:	andeq	r2, r1, r4, asr #5
   11ba4:	andeq	r2, r1, r4, asr #5
   11ba8:	andeq	r2, r1, r4, asr #5
   11bac:	andeq	r2, r1, r4, asr #5
   11bb0:	andeq	r2, r1, r4, asr #5
   11bb4:	andeq	r2, r1, r4, asr #5
   11bb8:	andeq	r2, r1, r4, asr #5
   11bbc:	andeq	r2, r1, r4, asr #5
   11bc0:	andeq	r2, r1, r4, asr #5
   11bc4:	andeq	r2, r1, r4, asr #5
   11bc8:	andeq	r2, r1, r4, asr #5
   11bcc:	andeq	r2, r1, r4, asr #5
   11bd0:	andeq	r2, r1, r4, asr #5
   11bd4:	andeq	r2, r1, r4, asr #5
   11bd8:	andeq	r2, r1, r4, asr #5
   11bdc:	andeq	r2, r1, r4, asr #5
   11be0:	andeq	r2, r1, r4, asr #5
   11be4:	andeq	r2, r1, r4, asr #5
   11be8:	andeq	r2, r1, r4, asr #5
   11bec:	andeq	r2, r1, r4, asr #5
   11bf0:	andeq	r1, r1, r8, lsl #27
   11bf4:	andeq	r2, r1, r4, lsr #3
   11bf8:	andeq	r1, r1, r8, lsl #27
   11bfc:	andeq	r2, r1, r8, lsr #5
   11c00:	cmp	r4, #0
   11c04:	moveq	r3, #1
   11c08:	streq	r3, [sp, #28]
   11c0c:	beq	12338 <abort@plt+0x159c>
   11c10:	mov	r3, #0
   11c14:	mov	r4, r3
   11c18:	mov	r2, #1
   11c1c:	str	r2, [sp, #40]	; 0x28
   11c20:	str	r3, [sp, #68]	; 0x44
   11c24:	str	r2, [sp, #32]
   11c28:	str	r2, [sp, #52]	; 0x34
   11c2c:	ldr	r3, [pc, #2584]	; 1264c <abort@plt+0x18b0>
   11c30:	str	r4, [sp, #44]	; 0x2c
   11c34:	str	r4, [sp, #72]	; 0x48
   11c38:	str	r4, [sp, #28]
   11c3c:	str	r3, [sp, #60]	; 0x3c
   11c40:	mov	r8, #2
   11c44:	b	11930 <abort@plt+0xb94>
   11c48:	cmp	r4, #0
   11c4c:	bne	12ed8 <abort@plt+0x213c>
   11c50:	cmp	sl, #0
   11c54:	beq	12c98 <abort@plt+0x1efc>
   11c58:	mov	r3, #34	; 0x22
   11c5c:	strb	r3, [fp]
   11c60:	ldr	r3, [pc, #2528]	; 12648 <abort@plt+0x18ac>
   11c64:	mov	r1, r4
   11c68:	mov	r2, #1
   11c6c:	str	r4, [sp, #68]	; 0x44
   11c70:	str	r2, [sp, #40]	; 0x28
   11c74:	mov	r4, r2
   11c78:	str	r1, [sp, #44]	; 0x2c
   11c7c:	str	r1, [sp, #72]	; 0x48
   11c80:	str	r1, [sp, #32]
   11c84:	str	r2, [sp, #28]
   11c88:	str	r2, [sp, #52]	; 0x34
   11c8c:	str	r3, [sp, #60]	; 0x3c
   11c90:	b	11930 <abort@plt+0xb94>
   11c94:	mov	r3, #0
   11c98:	str	r3, [sp, #68]	; 0x44
   11c9c:	str	r3, [sp, #44]	; 0x2c
   11ca0:	str	r3, [sp, #32]
   11ca4:	str	r3, [sp, #28]
   11ca8:	str	r3, [sp, #60]	; 0x3c
   11cac:	mov	r3, #1
   11cb0:	str	r8, [sp, #72]	; 0x48
   11cb4:	str	r8, [sp, #52]	; 0x34
   11cb8:	mov	r4, r8
   11cbc:	str	r3, [sp, #40]	; 0x28
   11cc0:	b	11930 <abort@plt+0xb94>
   11cc4:	mov	r3, #1
   11cc8:	str	r3, [sp, #40]	; 0x28
   11ccc:	str	r3, [sp, #32]
   11cd0:	str	r3, [sp, #28]
   11cd4:	str	r3, [sp, #52]	; 0x34
   11cd8:	ldr	r3, [pc, #2408]	; 12648 <abort@plt+0x18ac>
   11cdc:	mov	r2, #0
   11ce0:	mov	r4, r2
   11ce4:	str	r2, [sp, #68]	; 0x44
   11ce8:	str	r2, [sp, #44]	; 0x2c
   11cec:	str	r2, [sp, #72]	; 0x48
   11cf0:	str	r3, [sp, #60]	; 0x3c
   11cf4:	mov	r8, #5
   11cf8:	b	11930 <abort@plt+0xb94>
   11cfc:	mov	r3, #0
   11d00:	mov	r2, #1
   11d04:	str	r2, [sp, #40]	; 0x28
   11d08:	mov	r4, r3
   11d0c:	str	r3, [sp, #68]	; 0x44
   11d10:	str	r2, [sp, #28]
   11d14:	str	r3, [sp, #44]	; 0x2c
   11d18:	str	r3, [sp, #72]	; 0x48
   11d1c:	str	r3, [sp, #32]
   11d20:	str	r3, [sp, #52]	; 0x34
   11d24:	str	r3, [sp, #60]	; 0x3c
   11d28:	b	11930 <abort@plt+0xb94>
   11d2c:	mov	r2, #1
   11d30:	mov	r3, #0
   11d34:	str	r2, [sp, #40]	; 0x28
   11d38:	mov	r4, r3
   11d3c:	str	r3, [sp, #68]	; 0x44
   11d40:	str	r8, [sp, #52]	; 0x34
   11d44:	str	r2, [sp, #32]
   11d48:	b	11c2c <abort@plt+0xe90>
   11d4c:	mov	r3, #1
   11d50:	str	r3, [sp, #40]	; 0x28
   11d54:	str	r3, [sp, #32]
   11d58:	str	r3, [sp, #28]
   11d5c:	str	r3, [sp, #52]	; 0x34
   11d60:	ldr	r3, [pc, #2276]	; 1264c <abort@plt+0x18b0>
   11d64:	mov	r2, #0
   11d68:	mov	r4, r2
   11d6c:	str	r2, [sp, #68]	; 0x44
   11d70:	str	r2, [sp, #44]	; 0x2c
   11d74:	str	r2, [sp, #72]	; 0x48
   11d78:	str	r3, [sp, #60]	; 0x3c
   11d7c:	mov	r8, #2
   11d80:	b	11930 <abort@plt+0xb94>
   11d84:	mov	r7, #0
   11d88:	ldr	r3, [sp, #24]
   11d8c:	cmn	r3, #1
   11d90:	beq	128cc <abort@plt+0x1b30>
   11d94:	ldr	r3, [sp, #24]
   11d98:	subs	r3, r3, #1
   11d9c:	movne	r3, #1
   11da0:	cmp	r3, #0
   11da4:	sub	r2, fp, #2
   11da8:	clz	r2, r2
   11dac:	lsr	r2, r2, #5
   11db0:	bne	11fac <abort@plt+0x1210>
   11db4:	cmp	r9, #0
   11db8:	bne	11fac <abort@plt+0x1210>
   11dbc:	ldr	r3, [sp, #32]
   11dc0:	tst	r3, r2
   11dc4:	bne	120cc <abort@plt+0x1330>
   11dc8:	ldr	r3, [sp, #28]
   11dcc:	eor	r3, r3, #1
   11dd0:	orr	r3, r2, r3
   11dd4:	ldr	r2, [sp, #32]
   11dd8:	eor	r3, r3, #1
   11ddc:	orrs	r3, r2, r3
   11de0:	beq	11e10 <abort@plt+0x1074>
   11de4:	mov	r3, #0
   11de8:	ldr	r1, [sp, #56]	; 0x38
   11dec:	cmp	r1, #0
   11df0:	beq	11e10 <abort@plt+0x1074>
   11df4:	lsr	r2, r5, #5
   11df8:	and	r0, r5, #31
   11dfc:	uxtb	r2, r2
   11e00:	ldr	r1, [r1, r2, lsl #2]
   11e04:	lsr	r2, r1, r0
   11e08:	tst	r2, #1
   11e0c:	bne	11e18 <abort@plt+0x107c>
   11e10:	cmp	r7, #0
   11e14:	beq	12068 <abort@plt+0x12cc>
   11e18:	sub	r2, fp, #2
   11e1c:	clz	r2, r2
   11e20:	lsr	r2, r2, #5
   11e24:	ldr	r3, [sp, #32]
   11e28:	cmp	r3, #0
   11e2c:	bne	12158 <abort@plt+0x13bc>
   11e30:	ldr	r3, [sp, #44]	; 0x2c
   11e34:	eor	r3, r3, #1
   11e38:	ands	r3, r2, r3
   11e3c:	beq	11e74 <abort@plt+0x10d8>
   11e40:	cmp	sl, r4
   11e44:	movhi	r2, #39	; 0x27
   11e48:	strbhi	r2, [r8, r4]
   11e4c:	add	r2, r4, #1
   11e50:	cmp	r2, sl
   11e54:	movcc	r1, #36	; 0x24
   11e58:	strbcc	r1, [r8, r2]
   11e5c:	add	r2, r4, #2
   11e60:	cmp	r2, sl
   11e64:	add	r4, r4, #3
   11e68:	movcc	r1, #39	; 0x27
   11e6c:	strbcc	r1, [r8, r2]
   11e70:	str	r3, [sp, #44]	; 0x2c
   11e74:	cmp	r4, sl
   11e78:	movcc	r3, #92	; 0x5c
   11e7c:	strbcc	r3, [r8, r4]
   11e80:	add	r9, r9, #1
   11e84:	add	r4, r4, #1
   11e88:	cmp	r4, sl
   11e8c:	ldr	r3, [sp, #40]	; 0x28
   11e90:	strbcc	r5, [r8, r4]
   11e94:	cmp	r6, #0
   11e98:	moveq	r3, #0
   11e9c:	str	r3, [sp, #40]	; 0x28
   11ea0:	ldr	r3, [sp, #24]
   11ea4:	add	r4, r4, #1
   11ea8:	cmn	r3, #1
   11eac:	bne	1194c <abort@plt+0xbb0>
   11eb0:	ldr	r3, [sp, #36]	; 0x24
   11eb4:	ldrb	r6, [r3, r9]
   11eb8:	adds	r6, r6, #0
   11ebc:	movne	r6, #1
   11ec0:	cmp	r6, #0
   11ec4:	bne	11960 <abort@plt+0xbc4>
   11ec8:	str	fp, [sp, #160]	; 0xa0
   11ecc:	mov	fp, r8
   11ed0:	ldr	r8, [sp, #160]	; 0xa0
   11ed4:	ldr	r1, [sp, #32]
   11ed8:	cmp	r4, #0
   11edc:	sub	r2, r8, #2
   11ee0:	clz	r2, r2
   11ee4:	lsr	r2, r2, #5
   11ee8:	andeq	r3, r2, r1
   11eec:	movne	r3, #0
   11ef0:	cmp	r3, #0
   11ef4:	bne	12fe0 <abort@plt+0x2244>
   11ef8:	eor	r3, r1, #1
   11efc:	ands	r2, r2, r3
   11f00:	beq	12f1c <abort@plt+0x2180>
   11f04:	ldr	r3, [sp, #68]	; 0x44
   11f08:	cmp	r3, #0
   11f0c:	beq	12f20 <abort@plt+0x2184>
   11f10:	ldr	r3, [sp, #40]	; 0x28
   11f14:	cmp	r3, #0
   11f18:	bne	12f9c <abort@plt+0x2200>
   11f1c:	ldr	r3, [sp, #72]	; 0x48
   11f20:	adds	r3, r3, #0
   11f24:	movne	r3, #1
   11f28:	cmp	sl, #0
   11f2c:	movne	r3, #0
   11f30:	cmp	r3, #0
   11f34:	ldreq	r2, [sp, #68]	; 0x44
   11f38:	beq	12f20 <abort@plt+0x2184>
   11f3c:	ldr	sl, [sp, #72]	; 0x48
   11f40:	str	r3, [sp, #68]	; 0x44
   11f44:	ldr	r3, [pc, #1792]	; 1264c <abort@plt+0x18b0>
   11f48:	mov	r2, #39	; 0x27
   11f4c:	mov	r4, #1
   11f50:	str	r3, [sp, #60]	; 0x3c
   11f54:	mov	r3, #0
   11f58:	strb	r2, [fp]
   11f5c:	str	r4, [sp, #52]	; 0x34
   11f60:	mov	r8, #2
   11f64:	str	r3, [sp, #32]
   11f68:	b	11930 <abort@plt+0xb94>
   11f6c:	mov	r7, #0
   11f70:	cmp	fp, #2
   11f74:	beq	128ac <abort@plt+0x1b10>
   11f78:	ldr	r3, [sp, #52]	; 0x34
   11f7c:	ldr	r2, [sp, #28]
   11f80:	ldr	r1, [sp, #32]
   11f84:	cmp	r3, #0
   11f88:	andne	r2, r2, r1
   11f8c:	moveq	r2, #0
   11f90:	cmp	r2, #0
   11f94:	moveq	r5, #92	; 0x5c
   11f98:	moveq	r3, r5
   11f9c:	bne	128b8 <abort@plt+0x1b1c>
   11fa0:	ldr	r1, [sp, #28]
   11fa4:	cmp	r1, #0
   11fa8:	bne	13028 <abort@plt+0x228c>
   11fac:	mov	r6, #0
   11fb0:	b	11dc8 <abort@plt+0x102c>
   11fb4:	mov	r7, #0
   11fb8:	cmp	fp, #2
   11fbc:	beq	1291c <abort@plt+0x1b80>
   11fc0:	cmp	fp, #5
   11fc4:	beq	128e0 <abort@plt+0x1b44>
   11fc8:	sub	r2, fp, #2
   11fcc:	mov	r6, #0
   11fd0:	clz	r2, r2
   11fd4:	mov	r5, #63	; 0x3f
   11fd8:	lsr	r2, r2, #5
   11fdc:	b	11dc8 <abort@plt+0x102c>
   11fe0:	mov	r7, #0
   11fe4:	cmp	fp, #2
   11fe8:	strne	r6, [sp, #68]	; 0x44
   11fec:	movne	r2, #0
   11ff0:	movne	r5, #39	; 0x27
   11ff4:	bne	11dc8 <abort@plt+0x102c>
   11ff8:	ldr	r3, [sp, #32]
   11ffc:	cmp	r3, #0
   12000:	bne	12cfc <abort@plt+0x1f60>
   12004:	cmp	sl, #0
   12008:	ldr	r3, [sp, #72]	; 0x48
   1200c:	clz	r3, r3
   12010:	lsr	r3, r3, #5
   12014:	moveq	r3, #0
   12018:	cmp	r3, #0
   1201c:	bne	12c30 <abort@plt+0x1e94>
   12020:	cmp	sl, r4
   12024:	movhi	r3, #39	; 0x27
   12028:	strbhi	r3, [r8, r4]
   1202c:	add	r3, r4, #1
   12030:	cmp	sl, r3
   12034:	movhi	r2, #92	; 0x5c
   12038:	strbhi	r2, [r8, r3]
   1203c:	add	r3, r4, #2
   12040:	cmp	sl, r3
   12044:	movhi	r2, #39	; 0x27
   12048:	strbhi	r2, [r8, r3]
   1204c:	mov	r3, #0
   12050:	cmp	r7, #0
   12054:	add	r4, r4, #3
   12058:	str	r3, [sp, #44]	; 0x2c
   1205c:	str	r6, [sp, #68]	; 0x44
   12060:	mov	r5, #39	; 0x27
   12064:	bne	11e18 <abort@plt+0x107c>
   12068:	ldr	r2, [sp, #44]	; 0x2c
   1206c:	eor	r3, r3, #1
   12070:	and	r3, r3, r2
   12074:	add	r9, r9, #1
   12078:	uxtb	r3, r3
   1207c:	cmp	r3, #0
   12080:	beq	11e88 <abort@plt+0x10ec>
   12084:	cmp	sl, r4
   12088:	movhi	r3, #39	; 0x27
   1208c:	strbhi	r3, [r8, r4]
   12090:	add	r3, r4, #1
   12094:	cmp	sl, r3
   12098:	movhi	r2, #39	; 0x27
   1209c:	strbhi	r2, [r8, r3]
   120a0:	mov	r3, #0
   120a4:	add	r4, r4, #2
   120a8:	str	r3, [sp, #44]	; 0x2c
   120ac:	b	11e88 <abort@plt+0x10ec>
   120b0:	mov	r3, #114	; 0x72
   120b4:	ldr	r1, [sp, #32]
   120b8:	sub	r2, fp, #2
   120bc:	clz	r2, r2
   120c0:	lsr	r2, r2, #5
   120c4:	tst	r2, r1
   120c8:	beq	11fa0 <abort@plt+0x1204>
   120cc:	mov	fp, r8
   120d0:	mov	r8, #2
   120d4:	ldr	r3, [sp, #28]
   120d8:	cmp	r3, #0
   120dc:	movne	r8, #4
   120e0:	ldr	r3, [sp, #164]	; 0xa4
   120e4:	mov	ip, #0
   120e8:	bic	r3, r3, #2
   120ec:	str	r3, [sp, #4]
   120f0:	ldr	r3, [sp, #76]	; 0x4c
   120f4:	str	r8, [sp]
   120f8:	str	r3, [sp, #16]
   120fc:	ldr	r3, [sp, #80]	; 0x50
   12100:	ldr	r2, [sp, #36]	; 0x24
   12104:	str	r3, [sp, #12]
   12108:	mov	r1, sl
   1210c:	ldr	r3, [sp, #24]
   12110:	mov	r0, fp
   12114:	str	ip, [sp, #8]
   12118:	bl	11838 <abort@plt+0xa9c>
   1211c:	mov	r4, r0
   12120:	ldr	r3, [pc, #1304]	; 12640 <abort@plt+0x18a4>
   12124:	ldr	r2, [sp, #116]	; 0x74
   12128:	mov	r0, r4
   1212c:	ldr	r3, [r3]
   12130:	cmp	r2, r3
   12134:	bne	13024 <abort@plt+0x2288>
   12138:	add	sp, sp, #124	; 0x7c
   1213c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12140:	mov	r5, #110	; 0x6e
   12144:	ldr	r3, [sp, #32]
   12148:	mov	r2, #0
   1214c:	cmp	r3, #0
   12150:	mov	r6, r2
   12154:	beq	11e30 <abort@plt+0x1094>
   12158:	str	fp, [sp, #160]	; 0xa0
   1215c:	mov	fp, r8
   12160:	ldr	r8, [sp, #160]	; 0xa0
   12164:	mov	r3, r2
   12168:	ldr	r2, [sp, #28]
   1216c:	and	r2, r2, r3
   12170:	str	r2, [sp, #28]
   12174:	b	120d4 <abort@plt+0x1338>
   12178:	mov	r5, #116	; 0x74
   1217c:	b	12144 <abort@plt+0x13a8>
   12180:	mov	r5, #102	; 0x66
   12184:	ldr	r3, [sp, #32]
   12188:	cmp	r3, #0
   1218c:	bne	12d38 <abort@plt+0x1f9c>
   12190:	mov	r6, #0
   12194:	b	11e74 <abort@plt+0x10d8>
   12198:	mov	r5, #118	; 0x76
   1219c:	b	12184 <abort@plt+0x13e8>
   121a0:	mov	r7, #0
   121a4:	mov	r6, #0
   121a8:	b	11de4 <abort@plt+0x1048>
   121ac:	ldr	r3, [sp, #32]
   121b0:	cmp	r3, #0
   121b4:	bne	12f7c <abort@plt+0x21e0>
   121b8:	mov	r7, r3
   121bc:	ldr	r3, [sp, #44]	; 0x2c
   121c0:	sub	r2, fp, #2
   121c4:	eor	r3, r3, #1
   121c8:	clz	r2, r2
   121cc:	lsr	r2, r2, #5
   121d0:	ands	r3, r2, r3
   121d4:	beq	12c1c <abort@plt+0x1e80>
   121d8:	cmp	sl, r4
   121dc:	movhi	r1, #39	; 0x27
   121e0:	strbhi	r1, [r8, r4]
   121e4:	add	r1, r4, #1
   121e8:	cmp	sl, r1
   121ec:	movhi	r0, #36	; 0x24
   121f0:	strbhi	r0, [r8, r1]
   121f4:	add	r1, r4, #2
   121f8:	cmp	sl, r1
   121fc:	movhi	r0, #39	; 0x27
   12200:	strbhi	r0, [r8, r1]
   12204:	add	r1, r4, #3
   12208:	cmp	sl, r1
   1220c:	bls	12c7c <abort@plt+0x1ee0>
   12210:	mov	r4, r1
   12214:	mov	r1, #92	; 0x5c
   12218:	strb	r1, [r8, r4]
   1221c:	mov	r1, r4
   12220:	str	r3, [sp, #44]	; 0x2c
   12224:	cmp	fp, #2
   12228:	add	r4, r4, #1
   1222c:	beq	12cc4 <abort@plt+0x1f28>
   12230:	ldr	r0, [sp, #24]
   12234:	add	r3, r9, #1
   12238:	cmp	r3, r0
   1223c:	bcs	12254 <abort@plt+0x14b8>
   12240:	ldr	r0, [sp, #36]	; 0x24
   12244:	ldrb	r3, [r0, r3]
   12248:	sub	r3, r3, #48	; 0x30
   1224c:	cmp	r3, #9
   12250:	bls	12cd4 <abort@plt+0x1f38>
   12254:	mov	r5, #48	; 0x30
   12258:	ldr	r3, [sp, #28]
   1225c:	eor	r3, r3, #1
   12260:	orrs	r2, r2, r3
   12264:	mov	r3, r6
   12268:	moveq	r6, r2
   1226c:	beq	11de8 <abort@plt+0x104c>
   12270:	mov	r6, #0
   12274:	b	11e10 <abort@plt+0x1074>
   12278:	mov	r2, #0
   1227c:	mov	r6, r2
   12280:	mov	r5, #98	; 0x62
   12284:	b	11e30 <abort@plt+0x1094>
   12288:	mov	r5, #97	; 0x61
   1228c:	b	12190 <abort@plt+0x13f4>
   12290:	mov	r3, r7
   12294:	mov	r6, r7
   12298:	mov	r2, #0
   1229c:	mov	r7, r3
   122a0:	mov	r5, #32
   122a4:	b	11dc8 <abort@plt+0x102c>
   122a8:	cmp	r9, #0
   122ac:	mov	r3, r7
   122b0:	bne	12878 <abort@plt+0x1adc>
   122b4:	mov	r6, r7
   122b8:	mov	r2, r9
   122bc:	mov	r7, r3
   122c0:	b	11dc8 <abort@plt+0x102c>
   122c4:	mov	r6, r7
   122c8:	b	11de4 <abort@plt+0x1048>
   122cc:	mov	r7, #0
   122d0:	ldr	r3, [sp, #64]	; 0x40
   122d4:	cmp	r3, #1
   122d8:	bne	12934 <abort@plt+0x1b98>
   122dc:	bl	10cd0 <__ctype_b_loc@plt>
   122e0:	ldr	r2, [sp, #64]	; 0x40
   122e4:	sxth	r3, r5
   122e8:	mov	ip, r2
   122ec:	lsl	r3, r3, #1
   122f0:	ldr	r2, [r0]
   122f4:	ldrh	r3, [r2, r3]
   122f8:	and	r3, r3, #16384	; 0x4000
   122fc:	cmp	r3, #0
   12300:	ldr	r3, [sp, #28]
   12304:	movne	r6, #1
   12308:	moveq	r6, #0
   1230c:	movne	r2, #0
   12310:	andeq	r2, r3, #1
   12314:	cmp	r2, #0
   12318:	bne	12c44 <abort@plt+0x1ea8>
   1231c:	sub	r2, fp, #2
   12320:	clz	r2, r2
   12324:	lsr	r2, r2, #5
   12328:	b	11dc8 <abort@plt+0x102c>
   1232c:	cmp	r4, #0
   12330:	bne	12ff0 <abort@plt+0x2254>
   12334:	str	r4, [sp, #28]
   12338:	cmp	sl, #0
   1233c:	bne	13034 <abort@plt+0x2298>
   12340:	ldr	r3, [pc, #772]	; 1264c <abort@plt+0x18b0>
   12344:	mov	r4, #1
   12348:	str	r4, [sp, #40]	; 0x28
   1234c:	str	r3, [sp, #60]	; 0x3c
   12350:	str	r4, [sp, #52]	; 0x34
   12354:	str	sl, [sp, #72]	; 0x48
   12358:	str	sl, [sp, #68]	; 0x44
   1235c:	str	sl, [sp, #44]	; 0x2c
   12360:	str	sl, [sp, #32]
   12364:	mov	r8, #2
   12368:	b	11930 <abort@plt+0xb94>
   1236c:	ldr	r3, [sp, #36]	; 0x24
   12370:	ldrb	r5, [r3, r9]
   12374:	cmp	r5, #126	; 0x7e
   12378:	ldrls	pc, [pc, r5, lsl #2]
   1237c:	b	122d0 <abort@plt+0x1534>
   12380:			; <UNDEFINED> instruction: 0x000125b4
   12384:	ldrdeq	r2, [r1], -r0
   12388:	ldrdeq	r2, [r1], -r0
   1238c:	ldrdeq	r2, [r1], -r0
   12390:	ldrdeq	r2, [r1], -r0
   12394:	ldrdeq	r2, [r1], -r0
   12398:	ldrdeq	r2, [r1], -r0
   1239c:	andeq	r2, r1, r0, lsr #11
   123a0:	andeq	r2, r1, ip, lsl #11
   123a4:	andeq	r2, r1, r4, lsl #11
   123a8:	andeq	r2, r1, ip, ror r5
   123ac:	andeq	r2, r1, ip, lsr #12
   123b0:	andeq	r2, r1, r8, lsl r6
   123b4:	strheq	r2, [r1], -r0
   123b8:	ldrdeq	r2, [r1], -r0
   123bc:	ldrdeq	r2, [r1], -r0
   123c0:	ldrdeq	r2, [r1], -r0
   123c4:	ldrdeq	r2, [r1], -r0
   123c8:	ldrdeq	r2, [r1], -r0
   123cc:	ldrdeq	r2, [r1], -r0
   123d0:	ldrdeq	r2, [r1], -r0
   123d4:	ldrdeq	r2, [r1], -r0
   123d8:	ldrdeq	r2, [r1], -r0
   123dc:	ldrdeq	r2, [r1], -r0
   123e0:	ldrdeq	r2, [r1], -r0
   123e4:	ldrdeq	r2, [r1], -r0
   123e8:	ldrdeq	r2, [r1], -r0
   123ec:	ldrdeq	r2, [r1], -r0
   123f0:	ldrdeq	r2, [r1], -r0
   123f4:	ldrdeq	r2, [r1], -r0
   123f8:	ldrdeq	r2, [r1], -r0
   123fc:	ldrdeq	r2, [r1], -r0
   12400:	andeq	r2, r1, r8, lsl #12
   12404:	strdeq	r2, [r1], -r4
   12408:	strdeq	r2, [r1], -r4
   1240c:	andeq	r2, r1, r4, ror #11
   12410:	strdeq	r2, [r1], -r4
   12414:	andeq	r2, r1, ip, lsl r3
   12418:	strdeq	r2, [r1], -r4
   1241c:	andeq	r1, r1, r4, ror #31
   12420:	strdeq	r2, [r1], -r4
   12424:	strdeq	r2, [r1], -r4
   12428:	strdeq	r2, [r1], -r4
   1242c:	andeq	r2, r1, ip, lsl r3
   12430:	andeq	r2, r1, ip, lsl r3
   12434:	andeq	r2, r1, ip, lsl r3
   12438:	andeq	r2, r1, ip, lsl r3
   1243c:	andeq	r2, r1, ip, lsl r3
   12440:	andeq	r2, r1, ip, lsl r3
   12444:	andeq	r2, r1, ip, lsl r3
   12448:	andeq	r2, r1, ip, lsl r3
   1244c:	andeq	r2, r1, ip, lsl r3
   12450:	andeq	r2, r1, ip, lsl r3
   12454:	andeq	r2, r1, ip, lsl r3
   12458:	andeq	r2, r1, ip, lsl r3
   1245c:	andeq	r2, r1, ip, lsl r3
   12460:	andeq	r2, r1, ip, lsl r3
   12464:	andeq	r2, r1, ip, lsl r3
   12468:	andeq	r2, r1, ip, lsl r3
   1246c:	strdeq	r2, [r1], -r4
   12470:	strdeq	r2, [r1], -r4
   12474:	strdeq	r2, [r1], -r4
   12478:	strdeq	r2, [r1], -r4
   1247c:			; <UNDEFINED> instruction: 0x00011fb8
   12480:	ldrdeq	r2, [r1], -r0
   12484:	andeq	r2, r1, ip, lsl r3
   12488:	andeq	r2, r1, ip, lsl r3
   1248c:	andeq	r2, r1, ip, lsl r3
   12490:	andeq	r2, r1, ip, lsl r3
   12494:	andeq	r2, r1, ip, lsl r3
   12498:	andeq	r2, r1, ip, lsl r3
   1249c:	andeq	r2, r1, ip, lsl r3
   124a0:	andeq	r2, r1, ip, lsl r3
   124a4:	andeq	r2, r1, ip, lsl r3
   124a8:	andeq	r2, r1, ip, lsl r3
   124ac:	andeq	r2, r1, ip, lsl r3
   124b0:	andeq	r2, r1, ip, lsl r3
   124b4:	andeq	r2, r1, ip, lsl r3
   124b8:	andeq	r2, r1, ip, lsl r3
   124bc:	andeq	r2, r1, ip, lsl r3
   124c0:	andeq	r2, r1, ip, lsl r3
   124c4:	andeq	r2, r1, ip, lsl r3
   124c8:	andeq	r2, r1, ip, lsl r3
   124cc:	andeq	r2, r1, ip, lsl r3
   124d0:	andeq	r2, r1, ip, lsl r3
   124d4:	andeq	r2, r1, ip, lsl r3
   124d8:	andeq	r2, r1, ip, lsl r3
   124dc:	andeq	r2, r1, ip, lsl r3
   124e0:	andeq	r2, r1, ip, lsl r3
   124e4:	andeq	r2, r1, ip, lsl r3
   124e8:	andeq	r2, r1, ip, lsl r3
   124ec:	strdeq	r2, [r1], -r4
   124f0:	andeq	r1, r1, r0, ror pc
   124f4:	andeq	r2, r1, ip, lsl r3
   124f8:	strdeq	r2, [r1], -r4
   124fc:	andeq	r2, r1, ip, lsl r3
   12500:	strdeq	r2, [r1], -r4
   12504:	andeq	r2, r1, ip, lsl r3
   12508:	andeq	r2, r1, ip, lsl r3
   1250c:	andeq	r2, r1, ip, lsl r3
   12510:	andeq	r2, r1, ip, lsl r3
   12514:	andeq	r2, r1, ip, lsl r3
   12518:	andeq	r2, r1, ip, lsl r3
   1251c:	andeq	r2, r1, ip, lsl r3
   12520:	andeq	r2, r1, ip, lsl r3
   12524:	andeq	r2, r1, ip, lsl r3
   12528:	andeq	r2, r1, ip, lsl r3
   1252c:	andeq	r2, r1, ip, lsl r3
   12530:	andeq	r2, r1, ip, lsl r3
   12534:	andeq	r2, r1, ip, lsl r3
   12538:	andeq	r2, r1, ip, lsl r3
   1253c:	andeq	r2, r1, ip, lsl r3
   12540:	andeq	r2, r1, ip, lsl r3
   12544:	andeq	r2, r1, ip, lsl r3
   12548:	andeq	r2, r1, ip, lsl r3
   1254c:	andeq	r2, r1, ip, lsl r3
   12550:	andeq	r2, r1, ip, lsl r3
   12554:	andeq	r2, r1, ip, lsl r3
   12558:	andeq	r2, r1, ip, lsl r3
   1255c:	andeq	r2, r1, ip, lsl r3
   12560:	andeq	r2, r1, ip, lsl r3
   12564:	andeq	r2, r1, ip, lsl r3
   12568:	andeq	r2, r1, ip, lsl r3
   1256c:	andeq	r1, r1, r8, lsl #27
   12570:	strdeq	r2, [r1], -r4
   12574:	andeq	r1, r1, r8, lsl #27
   12578:	andeq	r2, r1, r4, ror #11
   1257c:	mov	r3, #110	; 0x6e
   12580:	b	120b4 <abort@plt+0x1318>
   12584:	mov	r3, #116	; 0x74
   12588:	b	120b4 <abort@plt+0x1318>
   1258c:	sub	r2, fp, #2
   12590:	mov	r3, #98	; 0x62
   12594:	clz	r2, r2
   12598:	lsr	r2, r2, #5
   1259c:	b	11fa0 <abort@plt+0x1204>
   125a0:	sub	r2, fp, #2
   125a4:	mov	r3, #97	; 0x61
   125a8:	clz	r2, r2
   125ac:	lsr	r2, r2, #5
   125b0:	b	11fa0 <abort@plt+0x1204>
   125b4:	ldr	r3, [sp, #28]
   125b8:	cmp	r3, #0
   125bc:	bne	121ac <abort@plt+0x1410>
   125c0:	ldr	r3, [sp, #164]	; 0xa4
   125c4:	tst	r3, #1
   125c8:	bne	12c3c <abort@plt+0x1ea0>
   125cc:	ldr	r6, [sp, #28]
   125d0:	sub	r2, fp, #2
   125d4:	mov	r7, r6
   125d8:	clz	r2, r2
   125dc:	lsr	r2, r2, #5
   125e0:	b	11dc8 <abort@plt+0x102c>
   125e4:	sub	r2, fp, #2
   125e8:	clz	r2, r2
   125ec:	lsr	r2, r2, #5
   125f0:	b	11db4 <abort@plt+0x1018>
   125f4:	sub	r2, fp, #2
   125f8:	mov	r6, #0
   125fc:	clz	r2, r2
   12600:	lsr	r2, r2, #5
   12604:	b	11dbc <abort@plt+0x1020>
   12608:	sub	r2, fp, #2
   1260c:	clz	r2, r2
   12610:	lsr	r2, r2, #5
   12614:	b	11dbc <abort@plt+0x1020>
   12618:	sub	r2, fp, #2
   1261c:	mov	r3, #102	; 0x66
   12620:	clz	r2, r2
   12624:	lsr	r2, r2, #5
   12628:	b	11fa0 <abort@plt+0x1204>
   1262c:	sub	r2, fp, #2
   12630:	mov	r3, #118	; 0x76
   12634:	clz	r2, r2
   12638:	lsr	r2, r2, #5
   1263c:	b	11fa0 <abort@plt+0x1204>
   12640:	andeq	r4, r2, r8, lsl #30
   12644:	andeq	r4, r1, r8, lsr fp
   12648:	andeq	r4, r1, r0, lsr #22
   1264c:	andeq	r4, r1, r4, lsr fp
   12650:	ldr	r3, [sp, #48]	; 0x30
   12654:	ldrb	r5, [r3]
   12658:	cmp	r5, #126	; 0x7e
   1265c:	ldrls	pc, [pc, r5, lsl #2]
   12660:	b	122cc <abort@plt+0x1530>
   12664:	andeq	r2, r1, ip, lsr #3
   12668:	andeq	r2, r1, ip, asr #5
   1266c:	andeq	r2, r1, ip, asr #5
   12670:	andeq	r2, r1, ip, asr #5
   12674:	andeq	r2, r1, ip, asr #5
   12678:	andeq	r2, r1, ip, asr #5
   1267c:	andeq	r2, r1, ip, asr #5
   12680:	andeq	r2, r1, r4, lsr #17
   12684:	muleq	r1, ip, r8
   12688:	andeq	r2, r1, r8, ror r1
   1268c:	andeq	r2, r1, r0, asr #2
   12690:	muleq	r1, r8, r1
   12694:	andeq	r2, r1, r0, lsl #3
   12698:	muleq	r1, r0, r8
   1269c:	andeq	r2, r1, ip, asr #5
   126a0:	andeq	r2, r1, ip, asr #5
   126a4:	andeq	r2, r1, ip, asr #5
   126a8:	andeq	r2, r1, ip, asr #5
   126ac:	andeq	r2, r1, ip, asr #5
   126b0:	andeq	r2, r1, ip, asr #5
   126b4:	andeq	r2, r1, ip, asr #5
   126b8:	andeq	r2, r1, ip, asr #5
   126bc:	andeq	r2, r1, ip, asr #5
   126c0:	andeq	r2, r1, ip, asr #5
   126c4:	andeq	r2, r1, ip, asr #5
   126c8:	andeq	r2, r1, ip, asr #5
   126cc:	andeq	r2, r1, ip, asr #5
   126d0:	andeq	r2, r1, ip, asr #5
   126d4:	andeq	r2, r1, ip, asr #5
   126d8:	andeq	r2, r1, ip, asr #5
   126dc:	andeq	r2, r1, ip, asr #5
   126e0:	andeq	r2, r1, ip, asr #5
   126e4:	andeq	r2, r1, r8, lsl #17
   126e8:	andeq	r2, r1, r0, lsr #3
   126ec:	andeq	r2, r1, r0, lsr #3
   126f0:	andeq	r2, r1, ip, ror #16
   126f4:	andeq	r2, r1, r0, lsr #3
   126f8:	andeq	r2, r1, r0, ror #16
   126fc:	andeq	r2, r1, r0, lsr #3
   12700:	andeq	r1, r1, r0, ror #31
   12704:	andeq	r2, r1, r0, lsr #3
   12708:	andeq	r2, r1, r0, lsr #3
   1270c:	andeq	r2, r1, r0, lsr #3
   12710:	andeq	r2, r1, r0, ror #16
   12714:	andeq	r2, r1, r0, ror #16
   12718:	andeq	r2, r1, r0, ror #16
   1271c:	andeq	r2, r1, r0, ror #16
   12720:	andeq	r2, r1, r0, ror #16
   12724:	andeq	r2, r1, r0, ror #16
   12728:	andeq	r2, r1, r0, ror #16
   1272c:	andeq	r2, r1, r0, ror #16
   12730:	andeq	r2, r1, r0, ror #16
   12734:	andeq	r2, r1, r0, ror #16
   12738:	andeq	r2, r1, r0, ror #16
   1273c:	andeq	r2, r1, r0, ror #16
   12740:	andeq	r2, r1, r0, ror #16
   12744:	andeq	r2, r1, r0, ror #16
   12748:	andeq	r2, r1, r0, ror #16
   1274c:	andeq	r2, r1, r0, ror #16
   12750:	andeq	r2, r1, r0, lsr #3
   12754:	andeq	r2, r1, r0, lsr #3
   12758:	andeq	r2, r1, r0, lsr #3
   1275c:	andeq	r2, r1, r0, lsr #3
   12760:			; <UNDEFINED> instruction: 0x00011fb4
   12764:	andeq	r2, r1, ip, asr #5
   12768:	andeq	r2, r1, r0, ror #16
   1276c:	andeq	r2, r1, r0, ror #16
   12770:	andeq	r2, r1, r0, ror #16
   12774:	andeq	r2, r1, r0, ror #16
   12778:	andeq	r2, r1, r0, ror #16
   1277c:	andeq	r2, r1, r0, ror #16
   12780:	andeq	r2, r1, r0, ror #16
   12784:	andeq	r2, r1, r0, ror #16
   12788:	andeq	r2, r1, r0, ror #16
   1278c:	andeq	r2, r1, r0, ror #16
   12790:	andeq	r2, r1, r0, ror #16
   12794:	andeq	r2, r1, r0, ror #16
   12798:	andeq	r2, r1, r0, ror #16
   1279c:	andeq	r2, r1, r0, ror #16
   127a0:	andeq	r2, r1, r0, ror #16
   127a4:	andeq	r2, r1, r0, ror #16
   127a8:	andeq	r2, r1, r0, ror #16
   127ac:	andeq	r2, r1, r0, ror #16
   127b0:	andeq	r2, r1, r0, ror #16
   127b4:	andeq	r2, r1, r0, ror #16
   127b8:	andeq	r2, r1, r0, ror #16
   127bc:	andeq	r2, r1, r0, ror #16
   127c0:	andeq	r2, r1, r0, ror #16
   127c4:	andeq	r2, r1, r0, ror #16
   127c8:	andeq	r2, r1, r0, ror #16
   127cc:	andeq	r2, r1, r0, ror #16
   127d0:	andeq	r2, r1, r0, lsr #3
   127d4:	andeq	r1, r1, ip, ror #30
   127d8:	andeq	r2, r1, r0, ror #16
   127dc:	andeq	r2, r1, r0, lsr #3
   127e0:	andeq	r2, r1, r0, ror #16
   127e4:	andeq	r2, r1, r0, lsr #3
   127e8:	andeq	r2, r1, r0, ror #16
   127ec:	andeq	r2, r1, r0, ror #16
   127f0:	andeq	r2, r1, r0, ror #16
   127f4:	andeq	r2, r1, r0, ror #16
   127f8:	andeq	r2, r1, r0, ror #16
   127fc:	andeq	r2, r1, r0, ror #16
   12800:	andeq	r2, r1, r0, ror #16
   12804:	andeq	r2, r1, r0, ror #16
   12808:	andeq	r2, r1, r0, ror #16
   1280c:	andeq	r2, r1, r0, ror #16
   12810:	andeq	r2, r1, r0, ror #16
   12814:	andeq	r2, r1, r0, ror #16
   12818:	andeq	r2, r1, r0, ror #16
   1281c:	andeq	r2, r1, r0, ror #16
   12820:	andeq	r2, r1, r0, ror #16
   12824:	andeq	r2, r1, r0, ror #16
   12828:	andeq	r2, r1, r0, ror #16
   1282c:	andeq	r2, r1, r0, ror #16
   12830:	andeq	r2, r1, r0, ror #16
   12834:	andeq	r2, r1, r0, ror #16
   12838:	andeq	r2, r1, r0, ror #16
   1283c:	andeq	r2, r1, r0, ror #16
   12840:	andeq	r2, r1, r0, ror #16
   12844:	andeq	r2, r1, r0, ror #16
   12848:	andeq	r2, r1, r0, ror #16
   1284c:	andeq	r2, r1, r0, ror #16
   12850:	andeq	r1, r1, r4, lsl #27
   12854:	andeq	r2, r1, r0, lsr #3
   12858:	andeq	r1, r1, r4, lsl #27
   1285c:	andeq	r2, r1, ip, ror #16
   12860:	mov	r6, r7
   12864:	mov	r7, #0
   12868:	b	11de4 <abort@plt+0x1048>
   1286c:	cmp	r9, #0
   12870:	mov	r3, #0
   12874:	beq	122b4 <abort@plt+0x1518>
   12878:	mov	r6, #0
   1287c:	mov	r7, r3
   12880:	mov	r3, r6
   12884:	b	11de8 <abort@plt+0x104c>
   12888:	mov	r3, #0
   1288c:	b	12294 <abort@plt+0x14f8>
   12890:	mov	r7, #0
   12894:	mov	r3, #114	; 0x72
   12898:	b	120b4 <abort@plt+0x1318>
   1289c:	mov	r5, #98	; 0x62
   128a0:	b	12144 <abort@plt+0x13a8>
   128a4:	mov	r5, #97	; 0x61
   128a8:	b	12184 <abort@plt+0x13e8>
   128ac:	ldr	r3, [sp, #32]
   128b0:	cmp	r3, #0
   128b4:	bne	12cfc <abort@plt+0x1f60>
   128b8:	add	r9, r9, #1
   128bc:	ldr	r3, [sp, #44]	; 0x2c
   128c0:	mov	r6, #0
   128c4:	mov	r5, #92	; 0x5c
   128c8:	b	1207c <abort@plt+0x12e0>
   128cc:	ldr	r3, [sp, #36]	; 0x24
   128d0:	ldrb	r3, [r3, #1]
   128d4:	adds	r3, r3, #0
   128d8:	movne	r3, #1
   128dc:	b	11da0 <abort@plt+0x1004>
   128e0:	ldr	r3, [sp, #164]	; 0xa4
   128e4:	ands	r3, r3, #4
   128e8:	beq	1290c <abort@plt+0x1b70>
   128ec:	ldr	r2, [sp, #24]
   128f0:	add	r3, r9, #2
   128f4:	cmp	r3, r2
   128f8:	bcs	1290c <abort@plt+0x1b70>
   128fc:	ldr	r2, [sp, #48]	; 0x30
   12900:	ldrb	r5, [r2, #1]
   12904:	cmp	r5, #63	; 0x3f
   12908:	beq	12d70 <abort@plt+0x1fd4>
   1290c:	mov	r2, #0
   12910:	mov	r6, r2
   12914:	mov	r5, #63	; 0x3f
   12918:	b	11dc8 <abort@plt+0x102c>
   1291c:	ldr	r3, [sp, #32]
   12920:	cmp	r3, #0
   12924:	bne	12cfc <abort@plt+0x1f60>
   12928:	mov	r6, r3
   1292c:	mov	r5, #63	; 0x3f
   12930:	b	11e10 <abort@plt+0x1074>
   12934:	ldr	r3, [sp, #24]
   12938:	cmn	r3, #1
   1293c:	mov	r3, #0
   12940:	str	r3, [sp, #108]	; 0x6c
   12944:	str	r3, [sp, #112]	; 0x70
   12948:	bne	12958 <abort@plt+0x1bbc>
   1294c:	ldr	r0, [sp, #36]	; 0x24
   12950:	bl	10ce8 <strlen@plt>
   12954:	str	r0, [sp, #24]
   12958:	mov	r3, #0
   1295c:	str	sl, [sp, #88]	; 0x58
   12960:	ldr	sl, [sp, #36]	; 0x24
   12964:	str	r5, [sp, #92]	; 0x5c
   12968:	mov	r5, r3
   1296c:	str	r7, [sp, #96]	; 0x60
   12970:	str	r4, [sp, #100]	; 0x64
   12974:	str	r8, [sp, #84]	; 0x54
   12978:	ldr	r3, [sp, #24]
   1297c:	add	r4, r9, r5
   12980:	add	r7, sl, r4
   12984:	sub	r2, r3, r4
   12988:	mov	r1, r7
   1298c:	add	r3, sp, #108	; 0x6c
   12990:	add	r0, sp, #104	; 0x68
   12994:	bl	14070 <abort@plt+0x32d4>
   12998:	subs	r8, r0, #0
   1299c:	beq	129ec <abort@plt+0x1c50>
   129a0:	cmn	r8, #1
   129a4:	beq	12d4c <abort@plt+0x1fb0>
   129a8:	cmn	r8, #2
   129ac:	beq	12e6c <abort@plt+0x20d0>
   129b0:	ldr	r3, [sp, #32]
   129b4:	cmp	fp, #2
   129b8:	movne	r3, #0
   129bc:	andeq	r3, r3, #1
   129c0:	cmp	r3, #0
   129c4:	bne	12b4c <abort@plt+0x1db0>
   129c8:	ldr	r0, [sp, #104]	; 0x68
   129cc:	bl	10c40 <iswprint@plt>
   129d0:	add	r5, r5, r8
   129d4:	cmp	r0, #0
   129d8:	add	r0, sp, #108	; 0x6c
   129dc:	moveq	r6, #0
   129e0:	bl	10bec <mbsinit@plt>
   129e4:	cmp	r0, #0
   129e8:	beq	12978 <abort@plt+0x1bdc>
   129ec:	ldr	r3, [sp, #28]
   129f0:	mov	ip, r5
   129f4:	eor	r2, r6, #1
   129f8:	ldr	r5, [sp, #92]	; 0x5c
   129fc:	ldr	r7, [sp, #96]	; 0x60
   12a00:	ldr	r4, [sp, #100]	; 0x64
   12a04:	ldr	r8, [sp, #84]	; 0x54
   12a08:	ldr	sl, [sp, #88]	; 0x58
   12a0c:	and	r2, r2, r3
   12a10:	cmp	ip, #1
   12a14:	bls	12314 <abort@plt+0x1578>
   12a18:	add	r1, ip, r9
   12a1c:	ldr	lr, [sp, #48]	; 0x30
   12a20:	mov	r0, #0
   12a24:	str	r6, [sp, #48]	; 0x30
   12a28:	mov	ip, #39	; 0x27
   12a2c:	ldr	r6, [sp, #44]	; 0x2c
   12a30:	b	12ae8 <abort@plt+0x1d4c>
   12a34:	ldr	r0, [sp, #32]
   12a38:	sub	r3, fp, #2
   12a3c:	cmp	r0, #0
   12a40:	clz	r3, r3
   12a44:	lsr	r3, r3, #5
   12a48:	bne	12c50 <abort@plt+0x1eb4>
   12a4c:	eor	r0, r6, #1
   12a50:	ands	r3, r3, r0
   12a54:	beq	12a84 <abort@plt+0x1ce8>
   12a58:	add	r0, r4, #1
   12a5c:	cmp	sl, r4
   12a60:	strbhi	ip, [r8, r4]
   12a64:	cmp	sl, r0
   12a68:	movhi	r6, #36	; 0x24
   12a6c:	strbhi	r6, [r8, r0]
   12a70:	add	r0, r4, #2
   12a74:	mov	r6, r3
   12a78:	add	r4, r4, #3
   12a7c:	cmp	sl, r0
   12a80:	strbhi	ip, [r8, r0]
   12a84:	cmp	sl, r4
   12a88:	movhi	r3, #92	; 0x5c
   12a8c:	strbhi	r3, [r8, r4]
   12a90:	add	r3, r4, #1
   12a94:	cmp	sl, r3
   12a98:	lsrhi	r0, r5, #6
   12a9c:	addhi	r0, r0, #48	; 0x30
   12aa0:	strbhi	r0, [r8, r3]
   12aa4:	add	r0, r4, #2
   12aa8:	cmp	sl, r0
   12aac:	lsrhi	r3, r5, #3
   12ab0:	andhi	r3, r3, #7
   12ab4:	addhi	r3, r3, #48	; 0x30
   12ab8:	add	r9, r9, #1
   12abc:	strbhi	r3, [r8, r0]
   12ac0:	and	r5, r5, #7
   12ac4:	cmp	r9, r1
   12ac8:	add	r5, r5, #48	; 0x30
   12acc:	add	r4, r4, #3
   12ad0:	bcs	12c70 <abort@plt+0x1ed4>
   12ad4:	mov	r0, r2
   12ad8:	cmp	sl, r4
   12adc:	strbhi	r5, [r8, r4]
   12ae0:	ldrb	r5, [lr, #1]!
   12ae4:	add	r4, r4, #1
   12ae8:	cmp	r2, #0
   12aec:	bne	12a34 <abort@plt+0x1c98>
   12af0:	eor	r3, r0, #1
   12af4:	and	r3, r3, r6
   12af8:	cmp	r7, #0
   12afc:	uxtb	r3, r3
   12b00:	beq	12b14 <abort@plt+0x1d78>
   12b04:	cmp	sl, r4
   12b08:	movhi	r7, #92	; 0x5c
   12b0c:	strbhi	r7, [r8, r4]
   12b10:	add	r4, r4, #1
   12b14:	add	r9, r9, #1
   12b18:	cmp	r9, r1
   12b1c:	bcs	12c64 <abort@plt+0x1ec8>
   12b20:	cmp	r3, #0
   12b24:	beq	12c90 <abort@plt+0x1ef4>
   12b28:	cmp	sl, r4
   12b2c:	add	r3, r4, #1
   12b30:	strbhi	ip, [r8, r4]
   12b34:	mov	r7, #0
   12b38:	cmp	sl, r3
   12b3c:	strbhi	ip, [r8, r3]
   12b40:	add	r4, r4, #2
   12b44:	mov	r6, r7
   12b48:	b	12ad8 <abort@plt+0x1d3c>
   12b4c:	cmp	r8, #1
   12b50:	beq	129c8 <abort@plt+0x1c2c>
   12b54:	add	r1, r4, #1
   12b58:	add	r3, sl, r8
   12b5c:	add	r1, sl, r1
   12b60:	add	r4, r3, r4
   12b64:	ldrb	r3, [r1], #1
   12b68:	sub	r3, r3, #91	; 0x5b
   12b6c:	cmp	r3, #33	; 0x21
   12b70:	ldrls	pc, [pc, r3, lsl #2]
   12b74:	b	12c00 <abort@plt+0x1e64>
   12b78:	andeq	r2, r1, ip, lsl #24
   12b7c:	andeq	r2, r1, ip, lsl #24
   12b80:	andeq	r2, r1, r0, lsl #24
   12b84:	andeq	r2, r1, ip, lsl #24
   12b88:	andeq	r2, r1, r0, lsl #24
   12b8c:	andeq	r2, r1, ip, lsl #24
   12b90:	andeq	r2, r1, r0, lsl #24
   12b94:	andeq	r2, r1, r0, lsl #24
   12b98:	andeq	r2, r1, r0, lsl #24
   12b9c:	andeq	r2, r1, r0, lsl #24
   12ba0:	andeq	r2, r1, r0, lsl #24
   12ba4:	andeq	r2, r1, r0, lsl #24
   12ba8:	andeq	r2, r1, r0, lsl #24
   12bac:	andeq	r2, r1, r0, lsl #24
   12bb0:	andeq	r2, r1, r0, lsl #24
   12bb4:	andeq	r2, r1, r0, lsl #24
   12bb8:	andeq	r2, r1, r0, lsl #24
   12bbc:	andeq	r2, r1, r0, lsl #24
   12bc0:	andeq	r2, r1, r0, lsl #24
   12bc4:	andeq	r2, r1, r0, lsl #24
   12bc8:	andeq	r2, r1, r0, lsl #24
   12bcc:	andeq	r2, r1, r0, lsl #24
   12bd0:	andeq	r2, r1, r0, lsl #24
   12bd4:	andeq	r2, r1, r0, lsl #24
   12bd8:	andeq	r2, r1, r0, lsl #24
   12bdc:	andeq	r2, r1, r0, lsl #24
   12be0:	andeq	r2, r1, r0, lsl #24
   12be4:	andeq	r2, r1, r0, lsl #24
   12be8:	andeq	r2, r1, r0, lsl #24
   12bec:	andeq	r2, r1, r0, lsl #24
   12bf0:	andeq	r2, r1, r0, lsl #24
   12bf4:	andeq	r2, r1, r0, lsl #24
   12bf8:	andeq	r2, r1, r0, lsl #24
   12bfc:	andeq	r2, r1, ip, lsl #24
   12c00:	cmp	r4, r1
   12c04:	bne	12b64 <abort@plt+0x1dc8>
   12c08:	b	129c8 <abort@plt+0x1c2c>
   12c0c:	ldr	fp, [sp, #84]	; 0x54
   12c10:	ldr	sl, [sp, #88]	; 0x58
   12c14:	mov	r8, #2
   12c18:	b	120d4 <abort@plt+0x1338>
   12c1c:	cmp	sl, r4
   12c20:	movls	r1, r4
   12c24:	bls	12224 <abort@plt+0x1488>
   12c28:	ldr	r3, [sp, #44]	; 0x2c
   12c2c:	b	12214 <abort@plt+0x1478>
   12c30:	str	sl, [sp, #72]	; 0x48
   12c34:	ldr	sl, [sp, #32]
   12c38:	b	1204c <abort@plt+0x12b0>
   12c3c:	add	r9, r9, #1
   12c40:	b	11940 <abort@plt+0xba4>
   12c44:	ldr	r2, [sp, #28]
   12c48:	mov	r6, #0
   12c4c:	b	12a18 <abort@plt+0x1c7c>
   12c50:	str	fp, [sp, #160]	; 0xa0
   12c54:	str	r3, [sp, #28]
   12c58:	mov	fp, r8
   12c5c:	ldr	r8, [sp, #160]	; 0xa0
   12c60:	b	120d4 <abort@plt+0x1338>
   12c64:	str	r6, [sp, #44]	; 0x2c
   12c68:	ldr	r6, [sp, #48]	; 0x30
   12c6c:	b	1207c <abort@plt+0x12e0>
   12c70:	str	r6, [sp, #44]	; 0x2c
   12c74:	ldr	r6, [sp, #48]	; 0x30
   12c78:	b	11e88 <abort@plt+0x10ec>
   12c7c:	add	r4, r4, #4
   12c80:	str	r3, [sp, #44]	; 0x2c
   12c84:	mov	r6, #0
   12c88:	mov	r5, #48	; 0x30
   12c8c:	b	11e10 <abort@plt+0x1074>
   12c90:	mov	r7, r3
   12c94:	b	12ad8 <abort@plt+0x1d3c>
   12c98:	ldr	r3, [pc, #-1624]	; 12648 <abort@plt+0x18ac>
   12c9c:	mov	r4, #1
   12ca0:	str	r4, [sp, #40]	; 0x28
   12ca4:	str	r4, [sp, #28]
   12ca8:	str	r4, [sp, #52]	; 0x34
   12cac:	str	sl, [sp, #72]	; 0x48
   12cb0:	str	sl, [sp, #68]	; 0x44
   12cb4:	str	sl, [sp, #44]	; 0x2c
   12cb8:	str	sl, [sp, #32]
   12cbc:	str	r3, [sp, #60]	; 0x3c
   12cc0:	b	11930 <abort@plt+0xb94>
   12cc4:	mov	r3, r6
   12cc8:	mov	r5, #48	; 0x30
   12ccc:	mov	r6, #0
   12cd0:	b	11e10 <abort@plt+0x1074>
   12cd4:	cmp	sl, r4
   12cd8:	movhi	r3, #48	; 0x30
   12cdc:	strbhi	r3, [r8, r4]
   12ce0:	add	r3, r1, #2
   12ce4:	cmp	sl, r3
   12ce8:	movhi	r0, #48	; 0x30
   12cec:	strbhi	r0, [r8, r3]
   12cf0:	add	r4, r1, #3
   12cf4:	mov	r5, #48	; 0x30
   12cf8:	b	12258 <abort@plt+0x14bc>
   12cfc:	str	fp, [sp, #160]	; 0xa0
   12d00:	mov	fp, r8
   12d04:	ldr	r8, [sp, #160]	; 0xa0
   12d08:	b	120d4 <abort@plt+0x1338>
   12d0c:	ldr	r2, [sp, #80]	; 0x50
   12d10:	ldrb	r3, [r2]
   12d14:	cmp	r3, #0
   12d18:	beq	11900 <abort@plt+0xb64>
   12d1c:	cmp	sl, r4
   12d20:	strbhi	r3, [fp, r4]
   12d24:	ldrb	r3, [r2, #1]!
   12d28:	add	r4, r4, #1
   12d2c:	cmp	r3, #0
   12d30:	bne	12d1c <abort@plt+0x1f80>
   12d34:	b	11900 <abort@plt+0xb64>
   12d38:	str	fp, [sp, #160]	; 0xa0
   12d3c:	mov	r3, #0
   12d40:	mov	fp, r8
   12d44:	ldr	r8, [sp, #160]	; 0xa0
   12d48:	b	12168 <abort@plt+0x13cc>
   12d4c:	mov	ip, r5
   12d50:	ldr	r7, [sp, #96]	; 0x60
   12d54:	ldr	r5, [sp, #92]	; 0x5c
   12d58:	ldr	r4, [sp, #100]	; 0x64
   12d5c:	ldr	r8, [sp, #84]	; 0x54
   12d60:	ldr	sl, [sp, #88]	; 0x58
   12d64:	ldr	r2, [sp, #28]
   12d68:	mov	r6, #0
   12d6c:	b	12a10 <abort@plt+0x1c74>
   12d70:	ldr	r2, [sp, #36]	; 0x24
   12d74:	ldrb	r1, [r2, r3]
   12d78:	sub	r2, r1, #33	; 0x21
   12d7c:	cmp	r2, #29
   12d80:	ldrls	pc, [pc, r2, lsl #2]
   12d84:	b	12e60 <abort@plt+0x20c4>
   12d88:	andeq	r2, r1, r0, lsl #28
   12d8c:	andeq	r2, r1, r0, ror #28
   12d90:	andeq	r2, r1, r0, ror #28
   12d94:	andeq	r2, r1, r0, ror #28
   12d98:	andeq	r2, r1, r0, ror #28
   12d9c:	andeq	r2, r1, r0, ror #28
   12da0:	andeq	r2, r1, r0, lsl #28
   12da4:	andeq	r2, r1, r0, lsl #28
   12da8:	andeq	r2, r1, r0, lsl #28
   12dac:	andeq	r2, r1, r0, ror #28
   12db0:	andeq	r2, r1, r0, ror #28
   12db4:	andeq	r2, r1, r0, ror #28
   12db8:	andeq	r2, r1, r0, lsl #28
   12dbc:	andeq	r2, r1, r0, ror #28
   12dc0:	andeq	r2, r1, r0, lsl #28
   12dc4:	andeq	r2, r1, r0, ror #28
   12dc8:	andeq	r2, r1, r0, ror #28
   12dcc:	andeq	r2, r1, r0, ror #28
   12dd0:	andeq	r2, r1, r0, ror #28
   12dd4:	andeq	r2, r1, r0, ror #28
   12dd8:	andeq	r2, r1, r0, ror #28
   12ddc:	andeq	r2, r1, r0, ror #28
   12de0:	andeq	r2, r1, r0, ror #28
   12de4:	andeq	r2, r1, r0, ror #28
   12de8:	andeq	r2, r1, r0, ror #28
   12dec:	andeq	r2, r1, r0, ror #28
   12df0:	andeq	r2, r1, r0, ror #28
   12df4:	andeq	r2, r1, r0, lsl #28
   12df8:	andeq	r2, r1, r0, lsl #28
   12dfc:	andeq	r2, r1, r0, lsl #28
   12e00:	ldr	r2, [sp, #32]
   12e04:	cmp	r2, #0
   12e08:	bne	12f0c <abort@plt+0x2170>
   12e0c:	cmp	sl, r4
   12e10:	movhi	r2, #63	; 0x3f
   12e14:	strbhi	r2, [r8, r4]
   12e18:	add	r2, r4, #1
   12e1c:	cmp	sl, r2
   12e20:	movhi	r0, #34	; 0x22
   12e24:	strbhi	r0, [r8, r2]
   12e28:	add	r2, r4, #2
   12e2c:	cmp	sl, r2
   12e30:	movhi	r0, #34	; 0x22
   12e34:	strbhi	r0, [r8, r2]
   12e38:	add	r2, r4, #3
   12e3c:	cmp	sl, r2
   12e40:	movhi	r0, #63	; 0x3f
   12e44:	strbhi	r0, [r8, r2]
   12e48:	mov	r2, #0
   12e4c:	add	r4, r4, #4
   12e50:	mov	r5, r1
   12e54:	mov	r9, r3
   12e58:	mov	r6, r2
   12e5c:	b	12258 <abort@plt+0x14bc>
   12e60:	mov	r2, #0
   12e64:	mov	r6, r2
   12e68:	b	11dc8 <abort@plt+0x102c>
   12e6c:	ldr	r0, [sp, #24]
   12e70:	mov	r1, r4
   12e74:	cmp	r1, r0
   12e78:	mov	r2, r7
   12e7c:	mov	r3, r5
   12e80:	mov	ip, r5
   12e84:	ldr	r7, [sp, #96]	; 0x60
   12e88:	ldr	r5, [sp, #92]	; 0x5c
   12e8c:	ldr	r4, [sp, #100]	; 0x64
   12e90:	ldr	r8, [sp, #84]	; 0x54
   12e94:	ldr	sl, [sp, #88]	; 0x58
   12e98:	bcs	12ecc <abort@plt+0x2130>
   12e9c:	ldrb	r6, [r2]
   12ea0:	cmp	r6, #0
   12ea4:	bne	12eb8 <abort@plt+0x211c>
   12ea8:	b	12fe8 <abort@plt+0x224c>
   12eac:	ldrb	r6, [r2, #1]!
   12eb0:	cmp	r6, #0
   12eb4:	beq	12f70 <abort@plt+0x21d4>
   12eb8:	add	r3, r3, #1
   12ebc:	add	r1, r9, r3
   12ec0:	cmp	r1, r0
   12ec4:	bcc	12eac <abort@plt+0x2110>
   12ec8:	mov	ip, r3
   12ecc:	ldr	r2, [sp, #28]
   12ed0:	mov	r6, #0
   12ed4:	b	12a10 <abort@plt+0x1c74>
   12ed8:	mov	r3, #1
   12edc:	str	r3, [sp, #40]	; 0x28
   12ee0:	str	r3, [sp, #32]
   12ee4:	str	r3, [sp, #28]
   12ee8:	str	r3, [sp, #52]	; 0x34
   12eec:	ldr	r3, [pc, #-2220]	; 12648 <abort@plt+0x18ac>
   12ef0:	mov	r2, #0
   12ef4:	str	r2, [sp, #68]	; 0x44
   12ef8:	str	r2, [sp, #44]	; 0x2c
   12efc:	str	r2, [sp, #72]	; 0x48
   12f00:	mov	r4, r2
   12f04:	str	r3, [sp, #60]	; 0x3c
   12f08:	b	11930 <abort@plt+0xb94>
   12f0c:	str	fp, [sp, #160]	; 0xa0
   12f10:	mov	fp, r8
   12f14:	ldr	r8, [sp, #160]	; 0xa0
   12f18:	b	120e0 <abort@plt+0x1344>
   12f1c:	mov	r2, r3
   12f20:	ldr	r3, [sp, #60]	; 0x3c
   12f24:	cmp	r3, #0
   12f28:	moveq	r2, #0
   12f2c:	andne	r2, r2, #1
   12f30:	cmp	r2, #0
   12f34:	beq	12f60 <abort@plt+0x21c4>
   12f38:	mov	r2, r3
   12f3c:	ldrb	r3, [r3]
   12f40:	cmp	r3, #0
   12f44:	beq	12f60 <abort@plt+0x21c4>
   12f48:	cmp	sl, r4
   12f4c:	strbhi	r3, [fp, r4]
   12f50:	ldrb	r3, [r2, #1]!
   12f54:	add	r4, r4, #1
   12f58:	cmp	r3, #0
   12f5c:	bne	12f48 <abort@plt+0x21ac>
   12f60:	cmp	sl, r4
   12f64:	movhi	r3, #0
   12f68:	strbhi	r3, [fp, r4]
   12f6c:	b	12120 <abort@plt+0x1384>
   12f70:	mov	ip, r3
   12f74:	ldr	r2, [sp, #28]
   12f78:	b	12a10 <abort@plt+0x1c74>
   12f7c:	str	fp, [sp, #160]	; 0xa0
   12f80:	mov	fp, r8
   12f84:	ldr	r8, [sp, #160]	; 0xa0
   12f88:	sub	r3, r8, #2
   12f8c:	clz	r3, r3
   12f90:	lsr	r3, r3, #5
   12f94:	str	r3, [sp, #28]
   12f98:	b	120d4 <abort@plt+0x1338>
   12f9c:	ldr	r3, [sp, #76]	; 0x4c
   12fa0:	mov	ip, #5
   12fa4:	str	r3, [sp, #16]
   12fa8:	ldr	r3, [sp, #80]	; 0x50
   12fac:	ldr	r2, [sp, #36]	; 0x24
   12fb0:	str	r3, [sp, #12]
   12fb4:	ldr	r3, [sp, #56]	; 0x38
   12fb8:	ldr	r1, [sp, #72]	; 0x48
   12fbc:	str	r3, [sp, #8]
   12fc0:	ldr	r3, [sp, #164]	; 0xa4
   12fc4:	mov	r0, fp
   12fc8:	str	r3, [sp, #4]
   12fcc:	str	ip, [sp]
   12fd0:	ldr	r3, [sp, #24]
   12fd4:	bl	11838 <abort@plt+0xa9c>
   12fd8:	mov	r4, r0
   12fdc:	b	12120 <abort@plt+0x1384>
   12fe0:	mov	r8, #2
   12fe4:	b	120d4 <abort@plt+0x1338>
   12fe8:	ldr	r2, [sp, #28]
   12fec:	b	12a10 <abort@plt+0x1c74>
   12ff0:	mov	r3, #0
   12ff4:	str	r3, [sp, #68]	; 0x44
   12ff8:	str	r3, [sp, #44]	; 0x2c
   12ffc:	str	r3, [sp, #72]	; 0x48
   13000:	str	r3, [sp, #28]
   13004:	mov	r4, r3
   13008:	ldr	r3, [pc, #-2500]	; 1264c <abort@plt+0x18b0>
   1300c:	mov	r2, #1
   13010:	str	r2, [sp, #40]	; 0x28
   13014:	str	r2, [sp, #32]
   13018:	str	r2, [sp, #52]	; 0x34
   1301c:	str	r3, [sp, #60]	; 0x3c
   13020:	b	11930 <abort@plt+0xb94>
   13024:	bl	10c1c <__stack_chk_fail@plt>
   13028:	mov	r5, r3
   1302c:	mov	r6, #0
   13030:	b	11e24 <abort@plt+0x1088>
   13034:	mov	r3, #0
   13038:	mov	r2, #1
   1303c:	str	r3, [sp, #44]	; 0x2c
   13040:	str	r3, [sp, #72]	; 0x48
   13044:	str	r2, [sp, #40]	; 0x28
   13048:	b	11f40 <abort@plt+0x11a4>
   1304c:	bl	10d9c <abort@plt>
   13050:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13054:	sub	sp, sp, #44	; 0x2c
   13058:	mov	r6, r0
   1305c:	mov	r4, r3
   13060:	mov	sl, r1
   13064:	mov	fp, r2
   13068:	bl	10cf4 <__errno_location@plt>
   1306c:	ldr	r7, [pc, #364]	; 131e0 <abort@plt+0x2444>
   13070:	cmp	r6, #0
   13074:	ldr	r5, [r7]
   13078:	ldr	r3, [r0]
   1307c:	str	r3, [sp, #24]
   13080:	blt	131dc <abort@plt+0x2440>
   13084:	ldr	r3, [r7, #4]
   13088:	mov	r8, r0
   1308c:	cmp	r3, r6
   13090:	bgt	130dc <abort@plt+0x2340>
   13094:	cmn	r6, #-268435454	; 0xf0000002
   13098:	bgt	131d8 <abort@plt+0x243c>
   1309c:	add	r9, r6, #1
   130a0:	add	r3, r7, #8
   130a4:	cmp	r5, r3
   130a8:	lsl	r1, r9, #3
   130ac:	beq	131b8 <abort@plt+0x241c>
   130b0:	mov	r0, r5
   130b4:	bl	13e44 <abort@plt+0x30a8>
   130b8:	mov	r5, r0
   130bc:	str	r0, [r7]
   130c0:	ldr	r0, [r7, #4]
   130c4:	mov	r1, #0
   130c8:	sub	r2, r9, r0
   130cc:	add	r0, r5, r0, lsl #3
   130d0:	lsl	r2, r2, #3
   130d4:	bl	10d0c <memset@plt>
   130d8:	str	r9, [r7, #4]
   130dc:	add	r3, r5, r6, lsl #3
   130e0:	ldr	r1, [r4, #4]
   130e4:	ldr	r7, [r3, #4]
   130e8:	ldr	r9, [r5, r6, lsl #3]
   130ec:	ldr	r2, [r4, #40]	; 0x28
   130f0:	ldr	ip, [r4, #44]	; 0x2c
   130f4:	str	r3, [sp, #28]
   130f8:	ldr	r3, [r4]
   130fc:	orr	r1, r1, #1
   13100:	add	lr, r4, #8
   13104:	str	r1, [sp, #36]	; 0x24
   13108:	str	r1, [sp, #4]
   1310c:	str	r2, [sp, #12]
   13110:	str	r3, [sp]
   13114:	mov	r0, r7
   13118:	mov	r1, r9
   1311c:	str	ip, [sp, #16]
   13120:	str	lr, [sp, #8]
   13124:	mov	r3, fp
   13128:	mov	r2, sl
   1312c:	str	lr, [sp, #32]
   13130:	bl	11838 <abort@plt+0xa9c>
   13134:	cmp	r9, r0
   13138:	bhi	131a4 <abort@plt+0x2408>
   1313c:	ldr	r3, [pc, #160]	; 131e4 <abort@plt+0x2448>
   13140:	add	r9, r0, #1
   13144:	cmp	r7, r3
   13148:	str	r9, [r5, r6, lsl #3]
   1314c:	beq	13158 <abort@plt+0x23bc>
   13150:	mov	r0, r7
   13154:	bl	10bc8 <free@plt>
   13158:	mov	r0, r9
   1315c:	bl	13de8 <abort@plt+0x304c>
   13160:	ldr	lr, [sp, #28]
   13164:	ldr	ip, [r4, #44]	; 0x2c
   13168:	ldr	r5, [r4, #40]	; 0x28
   1316c:	mov	r3, fp
   13170:	mov	r2, sl
   13174:	mov	r1, r9
   13178:	str	r0, [lr, #4]
   1317c:	ldr	lr, [r4]
   13180:	ldr	r4, [sp, #32]
   13184:	str	ip, [sp, #16]
   13188:	str	r4, [sp, #8]
   1318c:	ldr	r4, [sp, #36]	; 0x24
   13190:	str	r5, [sp, #12]
   13194:	str	r4, [sp, #4]
   13198:	str	lr, [sp]
   1319c:	mov	r7, r0
   131a0:	bl	11838 <abort@plt+0xa9c>
   131a4:	ldr	r3, [sp, #24]
   131a8:	mov	r0, r7
   131ac:	str	r3, [r8]
   131b0:	add	sp, sp, #44	; 0x2c
   131b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131b8:	mov	r0, #0
   131bc:	bl	13e44 <abort@plt+0x30a8>
   131c0:	ldr	r3, [pc, #32]	; 131e8 <abort@plt+0x244c>
   131c4:	mov	r5, r0
   131c8:	ldm	r3, {r0, r1}
   131cc:	str	r5, [r7]
   131d0:	stm	r5, {r0, r1}
   131d4:	b	130c0 <abort@plt+0x2324>
   131d8:	bl	14030 <abort@plt+0x3294>
   131dc:	bl	10d9c <abort@plt>
   131e0:	ldrdeq	r5, [r2], -r4
   131e4:	andeq	r5, r2, r0, asr #2
   131e8:	ldrdeq	r5, [r2], -ip
   131ec:	push	{r4, r5, r6, lr}
   131f0:	mov	r5, r0
   131f4:	bl	10cf4 <__errno_location@plt>
   131f8:	cmp	r5, #0
   131fc:	mov	r1, #48	; 0x30
   13200:	mov	r4, r0
   13204:	ldr	r0, [pc, #16]	; 1321c <abort@plt+0x2480>
   13208:	ldr	r6, [r4]
   1320c:	movne	r0, r5
   13210:	bl	13ff0 <abort@plt+0x3254>
   13214:	str	r6, [r4]
   13218:	pop	{r4, r5, r6, pc}
   1321c:	andeq	r5, r2, r0, asr #4
   13220:	ldr	r3, [pc, #12]	; 13234 <abort@plt+0x2498>
   13224:	cmp	r0, #0
   13228:	moveq	r0, r3
   1322c:	ldr	r0, [r0]
   13230:	bx	lr
   13234:	andeq	r5, r2, r0, asr #4
   13238:	ldr	r3, [pc, #12]	; 1324c <abort@plt+0x24b0>
   1323c:	cmp	r0, #0
   13240:	moveq	r0, r3
   13244:	str	r1, [r0]
   13248:	bx	lr
   1324c:	andeq	r5, r2, r0, asr #4
   13250:	ldr	r3, [pc, #52]	; 1328c <abort@plt+0x24f0>
   13254:	cmp	r0, #0
   13258:	moveq	r0, r3
   1325c:	add	r3, r0, #8
   13260:	push	{lr}		; (str lr, [sp, #-4]!)
   13264:	lsr	lr, r1, #5
   13268:	and	r1, r1, #31
   1326c:	ldr	ip, [r3, lr, lsl #2]
   13270:	lsr	r0, ip, r1
   13274:	eor	r2, r2, r0
   13278:	and	r2, r2, #1
   1327c:	and	r0, r0, #1
   13280:	eor	r1, ip, r2, lsl r1
   13284:	str	r1, [r3, lr, lsl #2]
   13288:	pop	{pc}		; (ldr pc, [sp], #4)
   1328c:	andeq	r5, r2, r0, asr #4
   13290:	ldr	r3, [pc, #16]	; 132a8 <abort@plt+0x250c>
   13294:	cmp	r0, #0
   13298:	movne	r3, r0
   1329c:	ldr	r0, [r3, #4]
   132a0:	str	r1, [r3, #4]
   132a4:	bx	lr
   132a8:	andeq	r5, r2, r0, asr #4
   132ac:	ldr	r3, [pc, #44]	; 132e0 <abort@plt+0x2544>
   132b0:	cmp	r0, #0
   132b4:	moveq	r0, r3
   132b8:	mov	ip, #10
   132bc:	cmp	r2, #0
   132c0:	cmpne	r1, #0
   132c4:	str	ip, [r0]
   132c8:	beq	132d8 <abort@plt+0x253c>
   132cc:	str	r1, [r0, #40]	; 0x28
   132d0:	str	r2, [r0, #44]	; 0x2c
   132d4:	bx	lr
   132d8:	push	{r4, lr}
   132dc:	bl	10d9c <abort@plt>
   132e0:	andeq	r5, r2, r0, asr #4
   132e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   132e8:	sub	sp, sp, #24
   132ec:	ldr	ip, [pc, #108]	; 13360 <abort@plt+0x25c4>
   132f0:	ldr	r4, [sp, #56]	; 0x38
   132f4:	mov	r9, r2
   132f8:	cmp	r4, #0
   132fc:	moveq	r4, ip
   13300:	mov	sl, r3
   13304:	mov	r7, r0
   13308:	mov	r8, r1
   1330c:	bl	10cf4 <__errno_location@plt>
   13310:	ldr	r3, [r4, #44]	; 0x2c
   13314:	mov	r1, r8
   13318:	ldr	r6, [r0]
   1331c:	str	r3, [sp, #16]
   13320:	ldr	r2, [r4, #40]	; 0x28
   13324:	add	r3, r4, #8
   13328:	str	r3, [sp, #8]
   1332c:	str	r2, [sp, #12]
   13330:	ldr	r2, [r4, #4]
   13334:	mov	r5, r0
   13338:	str	r2, [sp, #4]
   1333c:	ldr	ip, [r4]
   13340:	mov	r3, sl
   13344:	mov	r2, r9
   13348:	mov	r0, r7
   1334c:	str	ip, [sp]
   13350:	bl	11838 <abort@plt+0xa9c>
   13354:	str	r6, [r5]
   13358:	add	sp, sp, #24
   1335c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13360:	andeq	r5, r2, r0, asr #4
   13364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13368:	cmp	r3, #0
   1336c:	sub	sp, sp, #44	; 0x2c
   13370:	ldr	r4, [pc, #192]	; 13438 <abort@plt+0x269c>
   13374:	mov	r6, r2
   13378:	movne	r4, r3
   1337c:	mov	r9, r1
   13380:	mov	r8, r0
   13384:	bl	10cf4 <__errno_location@plt>
   13388:	ldr	r3, [r4, #44]	; 0x2c
   1338c:	ldr	r5, [r4, #4]
   13390:	add	sl, r4, #8
   13394:	cmp	r6, #0
   13398:	orreq	r5, r5, #1
   1339c:	mov	r1, #0
   133a0:	ldr	r2, [r0]
   133a4:	str	r3, [sp, #16]
   133a8:	ldr	r3, [r4, #40]	; 0x28
   133ac:	stmib	sp, {r5, sl}
   133b0:	str	r3, [sp, #12]
   133b4:	ldr	r3, [r4]
   133b8:	mov	r7, r0
   133bc:	str	r2, [sp, #28]
   133c0:	str	r3, [sp]
   133c4:	mov	r2, r8
   133c8:	mov	r3, r9
   133cc:	mov	r0, r1
   133d0:	bl	11838 <abort@plt+0xa9c>
   133d4:	add	r1, r0, #1
   133d8:	mov	fp, r0
   133dc:	mov	r0, r1
   133e0:	str	r1, [sp, #36]	; 0x24
   133e4:	bl	13de8 <abort@plt+0x304c>
   133e8:	ldr	r3, [r4, #44]	; 0x2c
   133ec:	mov	r2, r8
   133f0:	str	r3, [sp, #16]
   133f4:	ldr	r3, [r4, #40]	; 0x28
   133f8:	str	r5, [sp, #4]
   133fc:	str	r3, [sp, #12]
   13400:	str	sl, [sp, #8]
   13404:	ldr	ip, [r4]
   13408:	ldr	r1, [sp, #36]	; 0x24
   1340c:	mov	r3, r9
   13410:	str	ip, [sp]
   13414:	str	r0, [sp, #32]
   13418:	bl	11838 <abort@plt+0xa9c>
   1341c:	ldr	r2, [sp, #28]
   13420:	cmp	r6, #0
   13424:	str	r2, [r7]
   13428:	ldr	r0, [sp, #32]
   1342c:	strne	fp, [r6]
   13430:	add	sp, sp, #44	; 0x2c
   13434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13438:	andeq	r5, r2, r0, asr #4
   1343c:	mov	r3, r2
   13440:	mov	r2, #0
   13444:	b	13364 <abort@plt+0x25c8>
   13448:	push	{r4, r5, r6, r7, r8, lr}
   1344c:	ldr	r6, [pc, #112]	; 134c4 <abort@plt+0x2728>
   13450:	ldr	r3, [r6, #4]
   13454:	ldr	r7, [r6]
   13458:	cmp	r3, #1
   1345c:	ble	13480 <abort@plt+0x26e4>
   13460:	sub	r5, r7, #8
   13464:	add	r5, r5, r3, lsl #3
   13468:	mov	r4, r7
   1346c:	ldr	r0, [r4, #12]
   13470:	add	r4, r4, #8
   13474:	bl	10bc8 <free@plt>
   13478:	cmp	r4, r5
   1347c:	bne	1346c <abort@plt+0x26d0>
   13480:	ldr	r0, [r7, #4]
   13484:	ldr	r4, [pc, #60]	; 134c8 <abort@plt+0x272c>
   13488:	cmp	r0, r4
   1348c:	beq	134a0 <abort@plt+0x2704>
   13490:	bl	10bc8 <free@plt>
   13494:	mov	r3, #256	; 0x100
   13498:	str	r4, [r6, #12]
   1349c:	str	r3, [r6, #8]
   134a0:	ldr	r4, [pc, #36]	; 134cc <abort@plt+0x2730>
   134a4:	cmp	r7, r4
   134a8:	beq	134b8 <abort@plt+0x271c>
   134ac:	mov	r0, r7
   134b0:	bl	10bc8 <free@plt>
   134b4:	str	r4, [r6]
   134b8:	mov	r3, #1
   134bc:	str	r3, [r6, #4]
   134c0:	pop	{r4, r5, r6, r7, r8, pc}
   134c4:	ldrdeq	r5, [r2], -r4
   134c8:	andeq	r5, r2, r0, asr #2
   134cc:	ldrdeq	r5, [r2], -ip
   134d0:	ldr	r3, [pc, #4]	; 134dc <abort@plt+0x2740>
   134d4:	mvn	r2, #0
   134d8:	b	13050 <abort@plt+0x22b4>
   134dc:	andeq	r5, r2, r0, asr #4
   134e0:	ldr	r3, [pc]	; 134e8 <abort@plt+0x274c>
   134e4:	b	13050 <abort@plt+0x22b4>
   134e8:	andeq	r5, r2, r0, asr #4
   134ec:	mov	r1, r0
   134f0:	ldr	r3, [pc, #8]	; 13500 <abort@plt+0x2764>
   134f4:	mvn	r2, #0
   134f8:	mov	r0, #0
   134fc:	b	13050 <abort@plt+0x22b4>
   13500:	andeq	r5, r2, r0, asr #4
   13504:	mov	r2, r1
   13508:	ldr	r3, [pc, #8]	; 13518 <abort@plt+0x277c>
   1350c:	mov	r1, r0
   13510:	mov	r0, #0
   13514:	b	13050 <abort@plt+0x22b4>
   13518:	andeq	r5, r2, r0, asr #4
   1351c:	push	{r4, r5, r6, lr}
   13520:	sub	sp, sp, #56	; 0x38
   13524:	ldr	r4, [pc, #68]	; 13570 <abort@plt+0x27d4>
   13528:	mov	r6, r2
   1352c:	mov	r5, r0
   13530:	ldr	r3, [r4]
   13534:	add	r0, sp, #4
   13538:	str	r3, [sp, #52]	; 0x34
   1353c:	bl	116c8 <abort@plt+0x92c>
   13540:	add	r3, sp, #4
   13544:	mvn	r2, #0
   13548:	mov	r1, r6
   1354c:	mov	r0, r5
   13550:	bl	13050 <abort@plt+0x22b4>
   13554:	ldr	r2, [sp, #52]	; 0x34
   13558:	ldr	r3, [r4]
   1355c:	cmp	r2, r3
   13560:	bne	1356c <abort@plt+0x27d0>
   13564:	add	sp, sp, #56	; 0x38
   13568:	pop	{r4, r5, r6, pc}
   1356c:	bl	10c1c <__stack_chk_fail@plt>
   13570:	andeq	r4, r2, r8, lsl #30
   13574:	push	{r4, r5, r6, r7, lr}
   13578:	sub	sp, sp, #60	; 0x3c
   1357c:	ldr	r4, [pc, #72]	; 135cc <abort@plt+0x2830>
   13580:	mov	r6, r2
   13584:	mov	r7, r3
   13588:	ldr	ip, [r4]
   1358c:	mov	r5, r0
   13590:	add	r0, sp, #4
   13594:	str	ip, [sp, #52]	; 0x34
   13598:	bl	116c8 <abort@plt+0x92c>
   1359c:	add	r3, sp, #4
   135a0:	mov	r2, r7
   135a4:	mov	r1, r6
   135a8:	mov	r0, r5
   135ac:	bl	13050 <abort@plt+0x22b4>
   135b0:	ldr	r2, [sp, #52]	; 0x34
   135b4:	ldr	r3, [r4]
   135b8:	cmp	r2, r3
   135bc:	bne	135c8 <abort@plt+0x282c>
   135c0:	add	sp, sp, #60	; 0x3c
   135c4:	pop	{r4, r5, r6, r7, pc}
   135c8:	bl	10c1c <__stack_chk_fail@plt>
   135cc:	andeq	r4, r2, r8, lsl #30
   135d0:	mov	r2, r1
   135d4:	mov	r1, r0
   135d8:	mov	r0, #0
   135dc:	b	1351c <abort@plt+0x2780>
   135e0:	mov	r3, r2
   135e4:	mov	r2, r1
   135e8:	mov	r1, r0
   135ec:	mov	r0, #0
   135f0:	b	13574 <abort@plt+0x27d8>
   135f4:	push	{r4, r5, r6, r7, r8, r9, lr}
   135f8:	mov	r4, r2
   135fc:	ldr	lr, [pc, #128]	; 13684 <abort@plt+0x28e8>
   13600:	mov	r8, r0
   13604:	mov	r9, r1
   13608:	ldm	lr!, {r0, r1, r2, r3}
   1360c:	sub	sp, sp, #60	; 0x3c
   13610:	add	ip, sp, #4
   13614:	lsr	r6, r4, #5
   13618:	stmia	ip!, {r0, r1, r2, r3}
   1361c:	add	r7, sp, #12
   13620:	ldm	lr!, {r0, r1, r2, r3}
   13624:	and	r4, r4, #31
   13628:	ldr	r5, [pc, #88]	; 13688 <abort@plt+0x28ec>
   1362c:	stmia	ip!, {r0, r1, r2, r3}
   13630:	ldm	lr, {r0, r1, r2, r3}
   13634:	stm	ip, {r0, r1, r2, r3}
   13638:	mov	r2, r9
   1363c:	ldr	r3, [r7, r6, lsl #2]
   13640:	ldr	ip, [r5]
   13644:	mov	r1, r8
   13648:	mvn	r0, r3, lsr r4
   1364c:	and	r0, r0, #1
   13650:	str	ip, [sp, #52]	; 0x34
   13654:	eor	r4, r3, r0, lsl r4
   13658:	add	r3, sp, #4
   1365c:	mov	r0, #0
   13660:	str	r4, [r7, r6, lsl #2]
   13664:	bl	13050 <abort@plt+0x22b4>
   13668:	ldr	r2, [sp, #52]	; 0x34
   1366c:	ldr	r3, [r5]
   13670:	cmp	r2, r3
   13674:	bne	13680 <abort@plt+0x28e4>
   13678:	add	sp, sp, #60	; 0x3c
   1367c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13680:	bl	10c1c <__stack_chk_fail@plt>
   13684:	andeq	r5, r2, r0, asr #4
   13688:	andeq	r4, r2, r8, lsl #30
   1368c:	mov	r2, r1
   13690:	mvn	r1, #0
   13694:	b	135f4 <abort@plt+0x2858>
   13698:	mov	r2, #58	; 0x3a
   1369c:	mvn	r1, #0
   136a0:	b	135f4 <abort@plt+0x2858>
   136a4:	mov	r2, #58	; 0x3a
   136a8:	b	135f4 <abort@plt+0x2858>
   136ac:	push	{r4, r5, r6, r7, r8, lr}
   136b0:	sub	sp, sp, #104	; 0x68
   136b4:	ldr	r5, [pc, #120]	; 13734 <abort@plt+0x2998>
   136b8:	mov	r6, r0
   136bc:	mov	r0, sp
   136c0:	ldr	r3, [r5]
   136c4:	mov	r7, r2
   136c8:	str	r3, [sp, #100]	; 0x64
   136cc:	bl	116c8 <abort@plt+0x92c>
   136d0:	mov	ip, sp
   136d4:	add	lr, sp, #52	; 0x34
   136d8:	ldm	ip!, {r0, r1, r2, r3}
   136dc:	stmia	lr!, {r0, r1, r2, r3}
   136e0:	ldm	ip!, {r0, r1, r2, r3}
   136e4:	ldr	r8, [sp, #64]	; 0x40
   136e8:	stmia	lr!, {r0, r1, r2, r3}
   136ec:	mvn	r4, r8
   136f0:	ldm	ip, {r0, r1, r2, r3}
   136f4:	and	ip, r4, #67108864	; 0x4000000
   136f8:	eor	ip, ip, r8
   136fc:	str	ip, [sp, #64]	; 0x40
   13700:	stm	lr, {r0, r1, r2, r3}
   13704:	add	r3, sp, #52	; 0x34
   13708:	mvn	r2, #0
   1370c:	mov	r1, r7
   13710:	mov	r0, r6
   13714:	bl	13050 <abort@plt+0x22b4>
   13718:	ldr	r2, [sp, #100]	; 0x64
   1371c:	ldr	r3, [r5]
   13720:	cmp	r2, r3
   13724:	bne	13730 <abort@plt+0x2994>
   13728:	add	sp, sp, #104	; 0x68
   1372c:	pop	{r4, r5, r6, r7, r8, pc}
   13730:	bl	10c1c <__stack_chk_fail@plt>
   13734:	andeq	r4, r2, r8, lsl #30
   13738:	push	{r4, r5, r6, r7, r8, r9, lr}
   1373c:	mov	r6, r1
   13740:	ldr	lr, [pc, #132]	; 137cc <abort@plt+0x2a30>
   13744:	mov	r5, r2
   13748:	mov	r8, r0
   1374c:	mov	r9, r3
   13750:	ldm	lr!, {r0, r1, r2, r3}
   13754:	sub	sp, sp, #60	; 0x3c
   13758:	add	ip, sp, #4
   1375c:	ldr	r4, [pc, #108]	; 137d0 <abort@plt+0x2a34>
   13760:	stmia	ip!, {r0, r1, r2, r3}
   13764:	mov	r7, #10
   13768:	ldm	lr!, {r0, r1, r2, r3}
   1376c:	cmp	r5, #0
   13770:	cmpne	r6, #0
   13774:	str	r7, [sp, #4]
   13778:	stmia	ip!, {r0, r1, r2, r3}
   1377c:	ldm	lr, {r0, r1, r2, r3}
   13780:	ldr	lr, [r4]
   13784:	stm	ip, {r0, r1, r2, r3}
   13788:	str	lr, [sp, #52]	; 0x34
   1378c:	beq	137c8 <abort@plt+0x2a2c>
   13790:	add	r3, sp, #4
   13794:	ldr	r2, [sp, #88]	; 0x58
   13798:	mov	r1, r9
   1379c:	mov	r0, r8
   137a0:	str	r6, [sp, #44]	; 0x2c
   137a4:	str	r5, [sp, #48]	; 0x30
   137a8:	bl	13050 <abort@plt+0x22b4>
   137ac:	ldr	r2, [sp, #52]	; 0x34
   137b0:	ldr	r3, [r4]
   137b4:	cmp	r2, r3
   137b8:	bne	137c4 <abort@plt+0x2a28>
   137bc:	add	sp, sp, #60	; 0x3c
   137c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   137c4:	bl	10c1c <__stack_chk_fail@plt>
   137c8:	bl	10d9c <abort@plt>
   137cc:	andeq	r5, r2, r0, asr #4
   137d0:	andeq	r4, r2, r8, lsl #30
   137d4:	push	{lr}		; (str lr, [sp, #-4]!)
   137d8:	sub	sp, sp, #12
   137dc:	mvn	ip, #0
   137e0:	str	ip, [sp]
   137e4:	bl	13738 <abort@plt+0x299c>
   137e8:	add	sp, sp, #12
   137ec:	pop	{pc}		; (ldr pc, [sp], #4)
   137f0:	push	{lr}		; (str lr, [sp, #-4]!)
   137f4:	sub	sp, sp, #12
   137f8:	mvn	ip, #0
   137fc:	mov	r3, r2
   13800:	str	ip, [sp]
   13804:	mov	r2, r1
   13808:	mov	r1, r0
   1380c:	mov	r0, #0
   13810:	bl	13738 <abort@plt+0x299c>
   13814:	add	sp, sp, #12
   13818:	pop	{pc}		; (ldr pc, [sp], #4)
   1381c:	push	{lr}		; (str lr, [sp, #-4]!)
   13820:	sub	sp, sp, #12
   13824:	str	r3, [sp]
   13828:	mov	r3, r2
   1382c:	mov	r2, r1
   13830:	mov	r1, r0
   13834:	mov	r0, #0
   13838:	bl	13738 <abort@plt+0x299c>
   1383c:	add	sp, sp, #12
   13840:	pop	{pc}		; (ldr pc, [sp], #4)
   13844:	ldr	r3, [pc]	; 1384c <abort@plt+0x2ab0>
   13848:	b	13050 <abort@plt+0x22b4>
   1384c:	andeq	r5, r2, r4, ror #1
   13850:	mov	r2, r1
   13854:	ldr	r3, [pc, #8]	; 13864 <abort@plt+0x2ac8>
   13858:	mov	r1, r0
   1385c:	mov	r0, #0
   13860:	b	13050 <abort@plt+0x22b4>
   13864:	andeq	r5, r2, r4, ror #1
   13868:	ldr	r3, [pc, #4]	; 13874 <abort@plt+0x2ad8>
   1386c:	mvn	r2, #0
   13870:	b	13050 <abort@plt+0x22b4>
   13874:	andeq	r5, r2, r4, ror #1
   13878:	mov	r1, r0
   1387c:	ldr	r3, [pc, #8]	; 1388c <abort@plt+0x2af0>
   13880:	mvn	r2, #0
   13884:	mov	r0, #0
   13888:	b	13050 <abort@plt+0x22b4>
   1388c:	andeq	r5, r2, r4, ror #1
   13890:	push	{r4, r5, r6, lr}
   13894:	sub	sp, sp, #32
   13898:	cmp	r1, #0
   1389c:	mov	r5, r0
   138a0:	ldr	r4, [sp, #48]	; 0x30
   138a4:	ldr	r6, [sp, #52]	; 0x34
   138a8:	beq	13938 <abort@plt+0x2b9c>
   138ac:	strd	r2, [sp]
   138b0:	mov	r3, r1
   138b4:	ldr	r2, [pc, #828]	; 13bf8 <abort@plt+0x2e5c>
   138b8:	mov	r1, #1
   138bc:	bl	10d30 <__fprintf_chk@plt>
   138c0:	mov	r2, #5
   138c4:	ldr	r1, [pc, #816]	; 13bfc <abort@plt+0x2e60>
   138c8:	mov	r0, #0
   138cc:	bl	10c10 <dcgettext@plt>
   138d0:	ldr	r3, [pc, #808]	; 13c00 <abort@plt+0x2e64>
   138d4:	ldr	r2, [pc, #808]	; 13c04 <abort@plt+0x2e68>
   138d8:	str	r3, [sp]
   138dc:	mov	r1, #1
   138e0:	mov	r3, r0
   138e4:	mov	r0, r5
   138e8:	bl	10d30 <__fprintf_chk@plt>
   138ec:	ldr	r1, [pc, #788]	; 13c08 <abort@plt+0x2e6c>
   138f0:	mov	r2, #5
   138f4:	mov	r0, #0
   138f8:	bl	10c10 <dcgettext@plt>
   138fc:	mov	r1, r5
   13900:	bl	10b98 <fputs_unlocked@plt>
   13904:	cmp	r6, #9
   13908:	ldrls	pc, [pc, r6, lsl #2]
   1390c:	b	13be8 <abort@plt+0x2e4c>
   13910:	strdeq	r3, [r1], -r4
   13914:			; <UNDEFINED> instruction: 0x000139bc
   13918:	andeq	r3, r1, r8, ror #19
   1391c:	andeq	r3, r1, ip, lsl sl
   13920:	andeq	r3, r1, r8, asr sl
   13924:	muleq	r1, r8, sl
   13928:	andeq	r3, r1, r0, ror #21
   1392c:	andeq	r3, r1, r0, lsr fp
   13930:	andeq	r3, r1, r8, lsl #23
   13934:	andeq	r3, r1, r0, asr r9
   13938:	str	r3, [sp]
   1393c:	mov	r1, #1
   13940:	mov	r3, r2
   13944:	ldr	r2, [pc, #704]	; 13c0c <abort@plt+0x2e70>
   13948:	bl	10d30 <__fprintf_chk@plt>
   1394c:	b	138c0 <abort@plt+0x2b24>
   13950:	ldr	r1, [pc, #696]	; 13c10 <abort@plt+0x2e74>
   13954:	mov	r2, #5
   13958:	mov	r0, #0
   1395c:	bl	10c10 <dcgettext@plt>
   13960:	ldr	r2, [r4, #32]
   13964:	ldr	r3, [r4, #28]
   13968:	ldr	r1, [r4, #24]
   1396c:	str	r2, [sp, #28]
   13970:	ldr	r2, [r4, #20]
   13974:	str	r3, [sp, #24]
   13978:	ldr	r3, [r4, #16]
   1397c:	str	r1, [sp, #20]
   13980:	ldr	r1, [r4, #12]
   13984:	str	r2, [sp, #16]
   13988:	ldr	r2, [r4, #8]
   1398c:	str	r3, [sp, #12]
   13990:	ldr	r3, [r4, #4]
   13994:	str	r1, [sp, #8]
   13998:	str	r2, [sp, #4]
   1399c:	str	r3, [sp]
   139a0:	mov	r1, #1
   139a4:	ldr	r3, [r4]
   139a8:	mov	r2, r0
   139ac:	mov	r0, r5
   139b0:	bl	10d30 <__fprintf_chk@plt>
   139b4:	add	sp, sp, #32
   139b8:	pop	{r4, r5, r6, pc}
   139bc:	mov	r2, #5
   139c0:	ldr	r1, [pc, #588]	; 13c14 <abort@plt+0x2e78>
   139c4:	mov	r0, #0
   139c8:	bl	10c10 <dcgettext@plt>
   139cc:	ldr	r3, [r4]
   139d0:	mov	r1, #1
   139d4:	mov	r2, r0
   139d8:	mov	r0, r5
   139dc:	add	sp, sp, #32
   139e0:	pop	{r4, r5, r6, lr}
   139e4:	b	10d30 <__fprintf_chk@plt>
   139e8:	mov	r2, #5
   139ec:	ldr	r1, [pc, #548]	; 13c18 <abort@plt+0x2e7c>
   139f0:	mov	r0, #0
   139f4:	bl	10c10 <dcgettext@plt>
   139f8:	ldr	r2, [r4, #4]
   139fc:	ldr	r3, [r4]
   13a00:	mov	r1, #1
   13a04:	str	r2, [sp, #48]	; 0x30
   13a08:	mov	r2, r0
   13a0c:	mov	r0, r5
   13a10:	add	sp, sp, #32
   13a14:	pop	{r4, r5, r6, lr}
   13a18:	b	10d30 <__fprintf_chk@plt>
   13a1c:	mov	r2, #5
   13a20:	ldr	r1, [pc, #500]	; 13c1c <abort@plt+0x2e80>
   13a24:	mov	r0, #0
   13a28:	bl	10c10 <dcgettext@plt>
   13a2c:	ldr	r2, [r4, #8]
   13a30:	ldr	r3, [r4, #4]
   13a34:	mov	r1, #1
   13a38:	str	r2, [sp, #52]	; 0x34
   13a3c:	str	r3, [sp, #48]	; 0x30
   13a40:	ldr	r3, [r4]
   13a44:	mov	r2, r0
   13a48:	mov	r0, r5
   13a4c:	add	sp, sp, #32
   13a50:	pop	{r4, r5, r6, lr}
   13a54:	b	10d30 <__fprintf_chk@plt>
   13a58:	mov	r2, #5
   13a5c:	ldr	r1, [pc, #444]	; 13c20 <abort@plt+0x2e84>
   13a60:	mov	r0, #0
   13a64:	bl	10c10 <dcgettext@plt>
   13a68:	ldr	r1, [r4, #12]
   13a6c:	ldr	r2, [r4, #8]
   13a70:	ldr	r3, [r4, #4]
   13a74:	str	r1, [sp, #8]
   13a78:	str	r2, [sp, #4]
   13a7c:	str	r3, [sp]
   13a80:	mov	r1, #1
   13a84:	ldr	r3, [r4]
   13a88:	mov	r2, r0
   13a8c:	mov	r0, r5
   13a90:	bl	10d30 <__fprintf_chk@plt>
   13a94:	b	139b4 <abort@plt+0x2c18>
   13a98:	mov	r2, #5
   13a9c:	ldr	r1, [pc, #384]	; 13c24 <abort@plt+0x2e88>
   13aa0:	mov	r0, #0
   13aa4:	bl	10c10 <dcgettext@plt>
   13aa8:	ldr	r3, [r4, #16]
   13aac:	ldr	r1, [r4, #12]
   13ab0:	ldr	r2, [r4, #8]
   13ab4:	str	r3, [sp, #12]
   13ab8:	ldr	r3, [r4, #4]
   13abc:	str	r1, [sp, #8]
   13ac0:	str	r2, [sp, #4]
   13ac4:	str	r3, [sp]
   13ac8:	mov	r1, #1
   13acc:	ldr	r3, [r4]
   13ad0:	mov	r2, r0
   13ad4:	mov	r0, r5
   13ad8:	bl	10d30 <__fprintf_chk@plt>
   13adc:	b	139b4 <abort@plt+0x2c18>
   13ae0:	mov	r2, #5
   13ae4:	ldr	r1, [pc, #316]	; 13c28 <abort@plt+0x2e8c>
   13ae8:	mov	r0, #0
   13aec:	bl	10c10 <dcgettext@plt>
   13af0:	ldr	r2, [r4, #20]
   13af4:	ldr	r3, [r4, #16]
   13af8:	ldr	r1, [r4, #12]
   13afc:	str	r2, [sp, #16]
   13b00:	ldr	r2, [r4, #8]
   13b04:	str	r3, [sp, #12]
   13b08:	ldr	r3, [r4, #4]
   13b0c:	str	r1, [sp, #8]
   13b10:	str	r2, [sp, #4]
   13b14:	str	r3, [sp]
   13b18:	mov	r1, #1
   13b1c:	ldr	r3, [r4]
   13b20:	mov	r2, r0
   13b24:	mov	r0, r5
   13b28:	bl	10d30 <__fprintf_chk@plt>
   13b2c:	b	139b4 <abort@plt+0x2c18>
   13b30:	mov	r2, #5
   13b34:	ldr	r1, [pc, #240]	; 13c2c <abort@plt+0x2e90>
   13b38:	mov	r0, #0
   13b3c:	bl	10c10 <dcgettext@plt>
   13b40:	ldr	r1, [r4, #24]
   13b44:	ldr	r2, [r4, #20]
   13b48:	ldr	r3, [r4, #16]
   13b4c:	str	r1, [sp, #20]
   13b50:	ldr	r1, [r4, #12]
   13b54:	str	r2, [sp, #16]
   13b58:	ldr	r2, [r4, #8]
   13b5c:	str	r3, [sp, #12]
   13b60:	ldr	r3, [r4, #4]
   13b64:	str	r1, [sp, #8]
   13b68:	str	r2, [sp, #4]
   13b6c:	str	r3, [sp]
   13b70:	mov	r1, #1
   13b74:	ldr	r3, [r4]
   13b78:	mov	r2, r0
   13b7c:	mov	r0, r5
   13b80:	bl	10d30 <__fprintf_chk@plt>
   13b84:	b	139b4 <abort@plt+0x2c18>
   13b88:	mov	r2, #5
   13b8c:	ldr	r1, [pc, #156]	; 13c30 <abort@plt+0x2e94>
   13b90:	mov	r0, #0
   13b94:	bl	10c10 <dcgettext@plt>
   13b98:	ldr	r3, [r4, #28]
   13b9c:	ldr	r1, [r4, #24]
   13ba0:	ldr	r2, [r4, #20]
   13ba4:	str	r3, [sp, #24]
   13ba8:	ldr	r3, [r4, #16]
   13bac:	str	r1, [sp, #20]
   13bb0:	ldr	r1, [r4, #12]
   13bb4:	str	r2, [sp, #16]
   13bb8:	ldr	r2, [r4, #8]
   13bbc:	str	r3, [sp, #12]
   13bc0:	ldr	r3, [r4, #4]
   13bc4:	str	r1, [sp, #8]
   13bc8:	str	r2, [sp, #4]
   13bcc:	str	r3, [sp]
   13bd0:	mov	r1, #1
   13bd4:	ldr	r3, [r4]
   13bd8:	mov	r2, r0
   13bdc:	mov	r0, r5
   13be0:	bl	10d30 <__fprintf_chk@plt>
   13be4:	b	139b4 <abort@plt+0x2c18>
   13be8:	mov	r2, #5
   13bec:	ldr	r1, [pc, #64]	; 13c34 <abort@plt+0x2e98>
   13bf0:	b	13958 <abort@plt+0x2bbc>
   13bf4:	bl	10d9c <abort@plt>
   13bf8:	andeq	r4, r1, r4, lsr #23
   13bfc:			; <UNDEFINED> instruction: 0x00014bb8
   13c00:	andeq	r0, r0, r2, ror #15
   13c04:	andeq	r4, r1, ip, lsl #29
   13c08:			; <UNDEFINED> instruction: 0x00014bbc
   13c0c:			; <UNDEFINED> instruction: 0x00014bb0
   13c10:	muleq	r1, r4, sp
   13c14:	andeq	r4, r1, r8, lsl #25
   13c18:	muleq	r1, r8, ip
   13c1c:			; <UNDEFINED> instruction: 0x00014cb0
   13c20:	andeq	r4, r1, ip, asr #25
   13c24:	andeq	r4, r1, ip, ror #25
   13c28:	andeq	r4, r1, r0, lsl sp
   13c2c:	andeq	r4, r1, r8, lsr sp
   13c30:	andeq	r4, r1, r4, ror #26
   13c34:	andeq	r4, r1, r8, asr #27
   13c38:	push	{r4, r5, lr}
   13c3c:	sub	sp, sp, #12
   13c40:	ldr	r5, [sp, #24]
   13c44:	ldr	ip, [r5]
   13c48:	cmp	ip, #0
   13c4c:	beq	13c68 <abort@plt+0x2ecc>
   13c50:	mov	lr, r5
   13c54:	mov	ip, #0
   13c58:	ldr	r4, [lr, #4]!
   13c5c:	add	ip, ip, #1
   13c60:	cmp	r4, #0
   13c64:	bne	13c58 <abort@plt+0x2ebc>
   13c68:	stm	sp, {r5, ip}
   13c6c:	bl	13890 <abort@plt+0x2af4>
   13c70:	add	sp, sp, #12
   13c74:	pop	{r4, r5, pc}
   13c78:	push	{r4, r5, r6, lr}
   13c7c:	sub	sp, sp, #56	; 0x38
   13c80:	ldr	r6, [pc, #88]	; 13ce0 <abort@plt+0x2f44>
   13c84:	ldr	r5, [sp, #72]	; 0x48
   13c88:	add	r4, sp, #8
   13c8c:	ldr	ip, [r6]
   13c90:	str	ip, [sp, #52]	; 0x34
   13c94:	mov	ip, #0
   13c98:	ldr	lr, [r5], #4
   13c9c:	cmp	lr, #0
   13ca0:	str	lr, [r4, #4]!
   13ca4:	beq	13cb4 <abort@plt+0x2f18>
   13ca8:	add	ip, ip, #1
   13cac:	cmp	ip, #10
   13cb0:	bne	13c98 <abort@plt+0x2efc>
   13cb4:	add	lr, sp, #12
   13cb8:	str	ip, [sp, #4]
   13cbc:	str	lr, [sp]
   13cc0:	bl	13890 <abort@plt+0x2af4>
   13cc4:	ldr	r2, [sp, #52]	; 0x34
   13cc8:	ldr	r3, [r6]
   13ccc:	cmp	r2, r3
   13cd0:	bne	13cdc <abort@plt+0x2f40>
   13cd4:	add	sp, sp, #56	; 0x38
   13cd8:	pop	{r4, r5, r6, pc}
   13cdc:	bl	10c1c <__stack_chk_fail@plt>
   13ce0:	andeq	r4, r2, r8, lsl #30
   13ce4:	push	{r3}		; (str r3, [sp, #-4]!)
   13ce8:	mov	ip, #0
   13cec:	push	{r4, r5, r6, lr}
   13cf0:	sub	sp, sp, #60	; 0x3c
   13cf4:	ldr	r6, [pc, #100]	; 13d60 <abort@plt+0x2fc4>
   13cf8:	add	r5, sp, #8
   13cfc:	add	r4, sp, #80	; 0x50
   13d00:	ldr	r3, [r6]
   13d04:	str	r4, [sp, #8]
   13d08:	str	r3, [sp, #52]	; 0x34
   13d0c:	ldr	r3, [sp, #76]	; 0x4c
   13d10:	ldr	lr, [r4], #4
   13d14:	cmp	lr, #0
   13d18:	str	lr, [r5, #4]!
   13d1c:	beq	13d2c <abort@plt+0x2f90>
   13d20:	add	ip, ip, #1
   13d24:	cmp	ip, #10
   13d28:	bne	13d10 <abort@plt+0x2f74>
   13d2c:	add	lr, sp, #12
   13d30:	str	ip, [sp, #4]
   13d34:	str	lr, [sp]
   13d38:	bl	13890 <abort@plt+0x2af4>
   13d3c:	ldr	r2, [sp, #52]	; 0x34
   13d40:	ldr	r3, [r6]
   13d44:	cmp	r2, r3
   13d48:	bne	13d5c <abort@plt+0x2fc0>
   13d4c:	add	sp, sp, #60	; 0x3c
   13d50:	pop	{r4, r5, r6, lr}
   13d54:	add	sp, sp, #4
   13d58:	bx	lr
   13d5c:	bl	10c1c <__stack_chk_fail@plt>
   13d60:	andeq	r4, r2, r8, lsl #30
   13d64:	push	{r4, lr}
   13d68:	mov	r2, #5
   13d6c:	ldr	r1, [pc, #88]	; 13dcc <abort@plt+0x3030>
   13d70:	mov	r0, #0
   13d74:	bl	10c10 <dcgettext@plt>
   13d78:	ldr	r2, [pc, #80]	; 13dd0 <abort@plt+0x3034>
   13d7c:	mov	r1, r0
   13d80:	mov	r0, #1
   13d84:	bl	10d18 <__printf_chk@plt>
   13d88:	mov	r2, #5
   13d8c:	ldr	r1, [pc, #64]	; 13dd4 <abort@plt+0x3038>
   13d90:	mov	r0, #0
   13d94:	bl	10c10 <dcgettext@plt>
   13d98:	ldr	r3, [pc, #56]	; 13dd8 <abort@plt+0x303c>
   13d9c:	ldr	r2, [pc, #56]	; 13ddc <abort@plt+0x3040>
   13da0:	mov	r1, r0
   13da4:	mov	r0, #1
   13da8:	bl	10d18 <__printf_chk@plt>
   13dac:	ldr	r1, [pc, #44]	; 13de0 <abort@plt+0x3044>
   13db0:	mov	r2, #5
   13db4:	mov	r0, #0
   13db8:	bl	10c10 <dcgettext@plt>
   13dbc:	ldr	r3, [pc, #32]	; 13de4 <abort@plt+0x3048>
   13dc0:	pop	{r4, lr}
   13dc4:	ldr	r1, [r3]
   13dc8:	b	10b98 <fputs_unlocked@plt>
   13dcc:	andeq	r4, r1, r4, lsl #28
   13dd0:	andeq	r4, r1, ip, lsl lr
   13dd4:	andeq	r4, r1, r4, lsr lr
   13dd8:	andeq	r4, r1, r8, asr #17
   13ddc:	strdeq	r4, [r1], -r0
   13de0:	andeq	r4, r1, r8, asr #28
   13de4:	andeq	r5, r2, ip, lsr #2
   13de8:	push	{r4, lr}
   13dec:	mov	r4, r0
   13df0:	bl	10c94 <malloc@plt>
   13df4:	adds	r4, r4, #0
   13df8:	movne	r4, #1
   13dfc:	cmp	r0, #0
   13e00:	movne	r4, #0
   13e04:	cmp	r4, #0
   13e08:	popeq	{r4, pc}
   13e0c:	bl	14030 <abort@plt+0x3294>
   13e10:	push	{r4, r5, r6, lr}
   13e14:	umull	r4, r5, r0, r1
   13e18:	adds	r3, r5, #0
   13e1c:	movne	r3, #1
   13e20:	cmp	r4, #0
   13e24:	blt	13e3c <abort@plt+0x30a0>
   13e28:	cmp	r3, #0
   13e2c:	bne	13e3c <abort@plt+0x30a0>
   13e30:	mul	r0, r1, r0
   13e34:	pop	{r4, r5, r6, lr}
   13e38:	b	13de8 <abort@plt+0x304c>
   13e3c:	bl	14030 <abort@plt+0x3294>
   13e40:	b	13de8 <abort@plt+0x304c>
   13e44:	adds	r3, r0, #0
   13e48:	movne	r3, #1
   13e4c:	cmp	r1, #0
   13e50:	movne	r3, #0
   13e54:	cmp	r3, #0
   13e58:	push	{r4, lr}
   13e5c:	bne	13e84 <abort@plt+0x30e8>
   13e60:	mov	r4, r1
   13e64:	bl	10c28 <realloc@plt>
   13e68:	adds	r4, r4, #0
   13e6c:	movne	r4, #1
   13e70:	cmp	r0, #0
   13e74:	movne	r4, #0
   13e78:	cmp	r4, #0
   13e7c:	popeq	{r4, pc}
   13e80:	bl	14030 <abort@plt+0x3294>
   13e84:	bl	10bc8 <free@plt>
   13e88:	mov	r0, #0
   13e8c:	pop	{r4, pc}
   13e90:	push	{r4, r5, r6, lr}
   13e94:	umull	r4, r5, r1, r2
   13e98:	adds	r3, r5, #0
   13e9c:	movne	r3, #1
   13ea0:	cmp	r4, #0
   13ea4:	blt	13ebc <abort@plt+0x3120>
   13ea8:	cmp	r3, #0
   13eac:	bne	13ebc <abort@plt+0x3120>
   13eb0:	mul	r1, r2, r1
   13eb4:	pop	{r4, r5, r6, lr}
   13eb8:	b	13e44 <abort@plt+0x30a8>
   13ebc:	bl	14030 <abort@plt+0x3294>
   13ec0:	push	{r4, r5, r6, r7, r8, lr}
   13ec4:	subs	r7, r0, #0
   13ec8:	mov	r6, r1
   13ecc:	mov	r5, r2
   13ed0:	ldr	r4, [r1]
   13ed4:	beq	13f08 <abort@plt+0x316c>
   13ed8:	mov	r1, r2
   13edc:	ldr	r0, [pc, #104]	; 13f4c <abort@plt+0x31b0>
   13ee0:	bl	14384 <abort@plt+0x35e8>
   13ee4:	cmp	r0, r4
   13ee8:	bls	13f2c <abort@plt+0x3190>
   13eec:	add	r3, r4, #1
   13ef0:	add	r4, r3, r4, lsr #1
   13ef4:	str	r4, [r6]
   13ef8:	mul	r1, r5, r4
   13efc:	mov	r0, r7
   13f00:	pop	{r4, r5, r6, r7, r8, lr}
   13f04:	b	13e44 <abort@plt+0x30a8>
   13f08:	cmp	r4, #0
   13f0c:	beq	13f30 <abort@plt+0x3194>
   13f10:	umull	r0, r1, r4, r5
   13f14:	adds	r3, r1, #0
   13f18:	movne	r3, #1
   13f1c:	cmp	r0, #0
   13f20:	blt	13f2c <abort@plt+0x3190>
   13f24:	cmp	r3, #0
   13f28:	beq	13ef4 <abort@plt+0x3158>
   13f2c:	bl	14030 <abort@plt+0x3294>
   13f30:	mov	r1, r2
   13f34:	mov	r0, #64	; 0x40
   13f38:	bl	14384 <abort@plt+0x35e8>
   13f3c:	cmp	r5, #64	; 0x40
   13f40:	movls	r4, r0
   13f44:	addhi	r4, r0, #1
   13f48:	b	13f10 <abort@plt+0x3174>
   13f4c:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   13f50:	cmp	r0, #0
   13f54:	ldr	r3, [r1]
   13f58:	beq	13f7c <abort@plt+0x31e0>
   13f5c:	ldr	r2, [pc, #60]	; 13fa0 <abort@plt+0x3204>
   13f60:	cmp	r3, r2
   13f64:	bhi	13f98 <abort@plt+0x31fc>
   13f68:	add	r2, r3, #1
   13f6c:	add	r3, r2, r3, lsr #1
   13f70:	str	r3, [r1]
   13f74:	mov	r1, r3
   13f78:	b	13e44 <abort@plt+0x30a8>
   13f7c:	cmp	r3, #0
   13f80:	bne	13f94 <abort@plt+0x31f8>
   13f84:	mov	r3, #64	; 0x40
   13f88:	str	r3, [r1]
   13f8c:	mov	r1, r3
   13f90:	b	13e44 <abort@plt+0x30a8>
   13f94:	bge	13f70 <abort@plt+0x31d4>
   13f98:	push	{r4, lr}
   13f9c:	bl	14030 <abort@plt+0x3294>
   13fa0:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   13fa4:	push	{r4, lr}
   13fa8:	mov	r4, r0
   13fac:	bl	13de8 <abort@plt+0x304c>
   13fb0:	mov	r2, r4
   13fb4:	mov	r1, #0
   13fb8:	pop	{r4, lr}
   13fbc:	b	10d0c <memset@plt>
   13fc0:	push	{r4, r5, r6, lr}
   13fc4:	umull	r4, r5, r0, r1
   13fc8:	adds	r3, r5, #0
   13fcc:	movne	r3, #1
   13fd0:	cmp	r4, #0
   13fd4:	blt	13fec <abort@plt+0x3250>
   13fd8:	cmp	r3, #0
   13fdc:	bne	13fec <abort@plt+0x3250>
   13fe0:	bl	10b8c <calloc@plt>
   13fe4:	cmp	r0, #0
   13fe8:	popne	{r4, r5, r6, pc}
   13fec:	bl	14030 <abort@plt+0x3294>
   13ff0:	push	{r4, r5, r6, lr}
   13ff4:	mov	r4, r1
   13ff8:	mov	r5, r0
   13ffc:	mov	r0, r1
   14000:	bl	13de8 <abort@plt+0x304c>
   14004:	mov	r2, r4
   14008:	mov	r1, r5
   1400c:	pop	{r4, r5, r6, lr}
   14010:	b	10be0 <memcpy@plt>
   14014:	push	{r4, lr}
   14018:	mov	r4, r0
   1401c:	bl	10ce8 <strlen@plt>
   14020:	add	r1, r0, #1
   14024:	mov	r0, r4
   14028:	pop	{r4, lr}
   1402c:	b	13ff0 <abort@plt+0x3254>
   14030:	ldr	r3, [pc, #44]	; 14064 <abort@plt+0x32c8>
   14034:	push	{r4, lr}
   14038:	mov	r2, #5
   1403c:	ldr	r1, [pc, #36]	; 14068 <abort@plt+0x32cc>
   14040:	mov	r0, #0
   14044:	ldr	r4, [r3]
   14048:	bl	10c10 <dcgettext@plt>
   1404c:	ldr	r2, [pc, #24]	; 1406c <abort@plt+0x32d0>
   14050:	mov	r1, #0
   14054:	mov	r3, r0
   14058:	mov	r0, r4
   1405c:	bl	10c88 <error@plt>
   14060:	bl	10d9c <abort@plt>
   14064:	ldrdeq	r5, [r2], -r0
   14068:			; <UNDEFINED> instruction: 0x00014ebc
   1406c:	andeq	r4, r1, r4, lsl #21
   14070:	push	{r4, r5, r6, r7, r8, lr}
   14074:	subs	r7, r0, #0
   14078:	ldr	r5, [pc, #108]	; 140ec <abort@plt+0x3350>
   1407c:	sub	sp, sp, #8
   14080:	mov	r8, r1
   14084:	ldr	r1, [r5]
   14088:	moveq	r7, sp
   1408c:	str	r1, [sp, #4]
   14090:	mov	r0, r7
   14094:	mov	r1, r8
   14098:	mov	r6, r2
   1409c:	bl	10c7c <mbrtowc@plt>
   140a0:	cmp	r6, #0
   140a4:	cmnne	r0, #3
   140a8:	mov	r4, r0
   140ac:	bhi	140cc <abort@plt+0x3330>
   140b0:	ldr	r2, [sp, #4]
   140b4:	ldr	r3, [r5]
   140b8:	mov	r0, r4
   140bc:	cmp	r2, r3
   140c0:	bne	140e8 <abort@plt+0x334c>
   140c4:	add	sp, sp, #8
   140c8:	pop	{r4, r5, r6, r7, r8, pc}
   140cc:	mov	r0, #0
   140d0:	bl	14164 <abort@plt+0x33c8>
   140d4:	cmp	r0, #0
   140d8:	moveq	r4, #1
   140dc:	ldrbeq	r3, [r8]
   140e0:	streq	r3, [r7]
   140e4:	b	140b0 <abort@plt+0x3314>
   140e8:	bl	10c1c <__stack_chk_fail@plt>
   140ec:	andeq	r4, r2, r8, lsl #30
   140f0:	push	{r4, r5, r6, lr}
   140f4:	mov	r4, r0
   140f8:	bl	10c70 <__fpending@plt>
   140fc:	ldr	r5, [r4]
   14100:	and	r5, r5, #32
   14104:	mov	r6, r0
   14108:	mov	r0, r4
   1410c:	bl	141e4 <abort@plt+0x3448>
   14110:	cmp	r5, #0
   14114:	mov	r4, r0
   14118:	bne	14144 <abort@plt+0x33a8>
   1411c:	cmp	r0, #0
   14120:	beq	1413c <abort@plt+0x33a0>
   14124:	cmp	r6, #0
   14128:	bne	1415c <abort@plt+0x33c0>
   1412c:	bl	10cf4 <__errno_location@plt>
   14130:	ldr	r4, [r0]
   14134:	subs	r4, r4, #9
   14138:	mvnne	r4, #0
   1413c:	mov	r0, r4
   14140:	pop	{r4, r5, r6, pc}
   14144:	cmp	r0, #0
   14148:	bne	1415c <abort@plt+0x33c0>
   1414c:	bl	10cf4 <__errno_location@plt>
   14150:	str	r4, [r0]
   14154:	mvn	r4, #0
   14158:	b	1413c <abort@plt+0x33a0>
   1415c:	mvn	r4, #0
   14160:	b	1413c <abort@plt+0x33a0>
   14164:	push	{r4, lr}
   14168:	mov	r1, #0
   1416c:	bl	10d60 <setlocale@plt>
   14170:	subs	r4, r0, #0
   14174:	beq	141a0 <abort@plt+0x3404>
   14178:	ldr	r1, [pc, #40]	; 141a8 <abort@plt+0x340c>
   1417c:	bl	10bb0 <strcmp@plt>
   14180:	cmp	r0, #0
   14184:	popeq	{r4, pc}
   14188:	mov	r0, r4
   1418c:	ldr	r1, [pc, #24]	; 141ac <abort@plt+0x3410>
   14190:	bl	10bb0 <strcmp@plt>
   14194:	adds	r0, r0, #0
   14198:	movne	r0, #1
   1419c:	pop	{r4, pc}
   141a0:	mov	r0, #1
   141a4:	pop	{r4, pc}
   141a8:	ldrdeq	r4, [r1], -r0
   141ac:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141b0:	push	{r4, lr}
   141b4:	mov	r0, #14
   141b8:	bl	10d78 <nl_langinfo@plt>
   141bc:	cmp	r0, #0
   141c0:	beq	141d8 <abort@plt+0x343c>
   141c4:	ldrb	r2, [r0]
   141c8:	ldr	r3, [pc, #16]	; 141e0 <abort@plt+0x3444>
   141cc:	cmp	r2, #0
   141d0:	moveq	r0, r3
   141d4:	pop	{r4, pc}
   141d8:	ldr	r0, [pc]	; 141e0 <abort@plt+0x3444>
   141dc:	pop	{r4, pc}
   141e0:	ldrdeq	r4, [r1], -ip
   141e4:	push	{r4, r5, lr}
   141e8:	sub	sp, sp, #12
   141ec:	mov	r4, r0
   141f0:	bl	10d24 <fileno@plt>
   141f4:	cmp	r0, #0
   141f8:	mov	r0, r4
   141fc:	blt	14278 <abort@plt+0x34dc>
   14200:	bl	10cac <__freading@plt>
   14204:	cmp	r0, #0
   14208:	bne	14244 <abort@plt+0x34a8>
   1420c:	mov	r0, r4
   14210:	bl	14284 <abort@plt+0x34e8>
   14214:	cmp	r0, #0
   14218:	beq	14274 <abort@plt+0x34d8>
   1421c:	bl	10cf4 <__errno_location@plt>
   14220:	mov	r5, r0
   14224:	mov	r0, r4
   14228:	ldr	r4, [r5]
   1422c:	bl	10d3c <fclose@plt>
   14230:	cmp	r4, #0
   14234:	mvnne	r0, #0
   14238:	strne	r4, [r5]
   1423c:	add	sp, sp, #12
   14240:	pop	{r4, r5, pc}
   14244:	mov	r0, r4
   14248:	bl	10d24 <fileno@plt>
   1424c:	mov	r3, #1
   14250:	str	r3, [sp]
   14254:	mov	r2, #0
   14258:	mov	r3, #0
   1425c:	bl	10c58 <lseek64@plt>
   14260:	mvn	r3, #0
   14264:	mvn	r2, #0
   14268:	cmp	r1, r3
   1426c:	cmpeq	r0, r2
   14270:	bne	1420c <abort@plt+0x3470>
   14274:	mov	r0, r4
   14278:	add	sp, sp, #12
   1427c:	pop	{r4, r5, lr}
   14280:	b	10d3c <fclose@plt>
   14284:	push	{r4, lr}
   14288:	subs	r4, r0, #0
   1428c:	sub	sp, sp, #8
   14290:	beq	142ac <abort@plt+0x3510>
   14294:	bl	10cac <__freading@plt>
   14298:	cmp	r0, #0
   1429c:	beq	142ac <abort@plt+0x3510>
   142a0:	ldr	r3, [r4]
   142a4:	tst	r3, #256	; 0x100
   142a8:	bne	142bc <abort@plt+0x3520>
   142ac:	mov	r0, r4
   142b0:	add	sp, sp, #8
   142b4:	pop	{r4, lr}
   142b8:	b	10bbc <fflush@plt>
   142bc:	mov	r3, #1
   142c0:	str	r3, [sp]
   142c4:	mov	r2, #0
   142c8:	mov	r3, #0
   142cc:	mov	r0, r4
   142d0:	bl	142e4 <abort@plt+0x3548>
   142d4:	mov	r0, r4
   142d8:	add	sp, sp, #8
   142dc:	pop	{r4, lr}
   142e0:	b	10bbc <fflush@plt>
   142e4:	push	{r4, r5, r6, r7, r8, lr}
   142e8:	sub	sp, sp, #8
   142ec:	ldmib	r0, {ip, lr}
   142f0:	mov	r4, r0
   142f4:	ldr	r5, [sp, #32]
   142f8:	cmp	lr, ip
   142fc:	beq	14314 <abort@plt+0x3578>
   14300:	str	r5, [sp, #32]
   14304:	mov	r0, r4
   14308:	add	sp, sp, #8
   1430c:	pop	{r4, r5, r6, r7, r8, lr}
   14310:	b	10d48 <fseeko64@plt>
   14314:	ldr	lr, [r0, #20]
   14318:	ldr	ip, [r0, #16]
   1431c:	cmp	lr, ip
   14320:	bne	14300 <abort@plt+0x3564>
   14324:	ldr	r8, [r0, #36]	; 0x24
   14328:	cmp	r8, #0
   1432c:	bne	14300 <abort@plt+0x3564>
   14330:	mov	r6, r2
   14334:	mov	r7, r3
   14338:	bl	10d24 <fileno@plt>
   1433c:	mov	r2, r6
   14340:	mov	r3, r7
   14344:	str	r5, [sp]
   14348:	bl	10c58 <lseek64@plt>
   1434c:	mvn	r3, #0
   14350:	mvn	r2, #0
   14354:	cmp	r1, r3
   14358:	cmpeq	r0, r2
   1435c:	beq	1437c <abort@plt+0x35e0>
   14360:	ldr	r3, [r4]
   14364:	strd	r0, [r4, #80]	; 0x50
   14368:	mov	r0, r8
   1436c:	bic	r3, r3, #16
   14370:	str	r3, [r4]
   14374:	add	sp, sp, #8
   14378:	pop	{r4, r5, r6, r7, r8, pc}
   1437c:	mvn	r0, #0
   14380:	b	14374 <abort@plt+0x35d8>
   14384:	subs	r2, r1, #1
   14388:	bxeq	lr
   1438c:	bcc	14564 <abort@plt+0x37c8>
   14390:	cmp	r0, r1
   14394:	bls	14548 <abort@plt+0x37ac>
   14398:	tst	r1, r2
   1439c:	beq	14554 <abort@plt+0x37b8>
   143a0:	clz	r3, r0
   143a4:	clz	r2, r1
   143a8:	sub	r3, r2, r3
   143ac:	rsbs	r3, r3, #31
   143b0:	addne	r3, r3, r3, lsl #1
   143b4:	mov	r2, #0
   143b8:	addne	pc, pc, r3, lsl #2
   143bc:	nop			; (mov r0, r0)
   143c0:	cmp	r0, r1, lsl #31
   143c4:	adc	r2, r2, r2
   143c8:	subcs	r0, r0, r1, lsl #31
   143cc:	cmp	r0, r1, lsl #30
   143d0:	adc	r2, r2, r2
   143d4:	subcs	r0, r0, r1, lsl #30
   143d8:	cmp	r0, r1, lsl #29
   143dc:	adc	r2, r2, r2
   143e0:	subcs	r0, r0, r1, lsl #29
   143e4:	cmp	r0, r1, lsl #28
   143e8:	adc	r2, r2, r2
   143ec:	subcs	r0, r0, r1, lsl #28
   143f0:	cmp	r0, r1, lsl #27
   143f4:	adc	r2, r2, r2
   143f8:	subcs	r0, r0, r1, lsl #27
   143fc:	cmp	r0, r1, lsl #26
   14400:	adc	r2, r2, r2
   14404:	subcs	r0, r0, r1, lsl #26
   14408:	cmp	r0, r1, lsl #25
   1440c:	adc	r2, r2, r2
   14410:	subcs	r0, r0, r1, lsl #25
   14414:	cmp	r0, r1, lsl #24
   14418:	adc	r2, r2, r2
   1441c:	subcs	r0, r0, r1, lsl #24
   14420:	cmp	r0, r1, lsl #23
   14424:	adc	r2, r2, r2
   14428:	subcs	r0, r0, r1, lsl #23
   1442c:	cmp	r0, r1, lsl #22
   14430:	adc	r2, r2, r2
   14434:	subcs	r0, r0, r1, lsl #22
   14438:	cmp	r0, r1, lsl #21
   1443c:	adc	r2, r2, r2
   14440:	subcs	r0, r0, r1, lsl #21
   14444:	cmp	r0, r1, lsl #20
   14448:	adc	r2, r2, r2
   1444c:	subcs	r0, r0, r1, lsl #20
   14450:	cmp	r0, r1, lsl #19
   14454:	adc	r2, r2, r2
   14458:	subcs	r0, r0, r1, lsl #19
   1445c:	cmp	r0, r1, lsl #18
   14460:	adc	r2, r2, r2
   14464:	subcs	r0, r0, r1, lsl #18
   14468:	cmp	r0, r1, lsl #17
   1446c:	adc	r2, r2, r2
   14470:	subcs	r0, r0, r1, lsl #17
   14474:	cmp	r0, r1, lsl #16
   14478:	adc	r2, r2, r2
   1447c:	subcs	r0, r0, r1, lsl #16
   14480:	cmp	r0, r1, lsl #15
   14484:	adc	r2, r2, r2
   14488:	subcs	r0, r0, r1, lsl #15
   1448c:	cmp	r0, r1, lsl #14
   14490:	adc	r2, r2, r2
   14494:	subcs	r0, r0, r1, lsl #14
   14498:	cmp	r0, r1, lsl #13
   1449c:	adc	r2, r2, r2
   144a0:	subcs	r0, r0, r1, lsl #13
   144a4:	cmp	r0, r1, lsl #12
   144a8:	adc	r2, r2, r2
   144ac:	subcs	r0, r0, r1, lsl #12
   144b0:	cmp	r0, r1, lsl #11
   144b4:	adc	r2, r2, r2
   144b8:	subcs	r0, r0, r1, lsl #11
   144bc:	cmp	r0, r1, lsl #10
   144c0:	adc	r2, r2, r2
   144c4:	subcs	r0, r0, r1, lsl #10
   144c8:	cmp	r0, r1, lsl #9
   144cc:	adc	r2, r2, r2
   144d0:	subcs	r0, r0, r1, lsl #9
   144d4:	cmp	r0, r1, lsl #8
   144d8:	adc	r2, r2, r2
   144dc:	subcs	r0, r0, r1, lsl #8
   144e0:	cmp	r0, r1, lsl #7
   144e4:	adc	r2, r2, r2
   144e8:	subcs	r0, r0, r1, lsl #7
   144ec:	cmp	r0, r1, lsl #6
   144f0:	adc	r2, r2, r2
   144f4:	subcs	r0, r0, r1, lsl #6
   144f8:	cmp	r0, r1, lsl #5
   144fc:	adc	r2, r2, r2
   14500:	subcs	r0, r0, r1, lsl #5
   14504:	cmp	r0, r1, lsl #4
   14508:	adc	r2, r2, r2
   1450c:	subcs	r0, r0, r1, lsl #4
   14510:	cmp	r0, r1, lsl #3
   14514:	adc	r2, r2, r2
   14518:	subcs	r0, r0, r1, lsl #3
   1451c:	cmp	r0, r1, lsl #2
   14520:	adc	r2, r2, r2
   14524:	subcs	r0, r0, r1, lsl #2
   14528:	cmp	r0, r1, lsl #1
   1452c:	adc	r2, r2, r2
   14530:	subcs	r0, r0, r1, lsl #1
   14534:	cmp	r0, r1
   14538:	adc	r2, r2, r2
   1453c:	subcs	r0, r0, r1
   14540:	mov	r0, r2
   14544:	bx	lr
   14548:	moveq	r0, #1
   1454c:	movne	r0, #0
   14550:	bx	lr
   14554:	clz	r2, r1
   14558:	rsb	r2, r2, #31
   1455c:	lsr	r0, r0, r2
   14560:	bx	lr
   14564:	cmp	r0, #0
   14568:	mvnne	r0, #0
   1456c:	b	14590 <abort@plt+0x37f4>
   14570:	cmp	r1, #0
   14574:	beq	14564 <abort@plt+0x37c8>
   14578:	push	{r0, r1, lr}
   1457c:	bl	14384 <abort@plt+0x35e8>
   14580:	pop	{r1, r2, lr}
   14584:	mul	r3, r2, r0
   14588:	sub	r1, r1, r3
   1458c:	bx	lr
   14590:	push	{r1, lr}
   14594:	mov	r0, #8
   14598:	bl	10ba4 <raise@plt>
   1459c:	pop	{r1, pc}
   145a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   145a4:	mov	r7, r0
   145a8:	ldr	r6, [pc, #72]	; 145f8 <abort@plt+0x385c>
   145ac:	ldr	r5, [pc, #72]	; 145fc <abort@plt+0x3860>
   145b0:	add	r6, pc, r6
   145b4:	add	r5, pc, r5
   145b8:	sub	r6, r6, r5
   145bc:	mov	r8, r1
   145c0:	mov	r9, r2
   145c4:	bl	10b6c <calloc@plt-0x20>
   145c8:	asrs	r6, r6, #2
   145cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   145d0:	mov	r4, #0
   145d4:	add	r4, r4, #1
   145d8:	ldr	r3, [r5], #4
   145dc:	mov	r2, r9
   145e0:	mov	r1, r8
   145e4:	mov	r0, r7
   145e8:	blx	r3
   145ec:	cmp	r6, r4
   145f0:	bne	145d4 <abort@plt+0x3838>
   145f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   145f8:	andeq	r0, r1, ip, asr #18
   145fc:	andeq	r0, r1, r4, asr #18
   14600:	bx	lr
   14604:	ldr	r3, [pc, #12]	; 14618 <abort@plt+0x387c>
   14608:	mov	r1, #0
   1460c:	add	r3, pc, r3
   14610:	ldr	r2, [r3]
   14614:	b	10d00 <__cxa_atexit@plt>
   14618:			; <UNDEFINED> instruction: 0x00010ab4

Disassembly of section .fini:

0001461c <.fini>:
   1461c:	push	{r3, lr}
   14620:	pop	{r3, pc}
