
raspbian-preinstalled/vlc:     file format elf32-littlearm


Disassembly of section .init:

00010a94 <.init>:
   10a94:	push	{r3, lr}
   10a98:	bl	10ff0 <dlsym@plt+0x374>
   10a9c:	pop	{r3, pc}

Disassembly of section .plt:

00010aa0 <sigemptyset@plt-0x14>:
   10aa0:	push	{lr}		; (str lr, [sp, #-4]!)
   10aa4:	ldr	lr, [pc, #4]	; 10ab0 <sigemptyset@plt-0x4>
   10aa8:	add	lr, pc, lr
   10aac:	ldr	pc, [lr, #8]!
   10ab0:	andeq	r1, r1, r4, lsr #9

00010ab4 <sigemptyset@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #69632	; 0x11000
   10abc:	ldr	pc, [ip, #1188]!	; 0x4a4

00010ac0 <geteuid@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #69632	; 0x11000
   10ac8:	ldr	pc, [ip, #1180]!	; 0x49c

00010acc <abort@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1172]!	; 0x494

00010ad8 <libvlc_get_changeset@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1164]!	; 0x48c

00010ae4 <__libc_start_main@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1156]!	; 0x484

00010af0 <signal@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1148]!	; 0x47c

00010afc <rand_r@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1140]!	; 0x474

00010b08 <libvlc_set_exit_handler@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1132]!	; 0x46c

00010b14 <__gmon_start__@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1124]!	; 0x464

00010b20 <libvlc_add_intf@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1116]!	; 0x45c

00010b2c <libvlc_get_version@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1108]!	; 0x454

00010b38 <pthread_kill@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1100]!	; 0x44c

00010b44 <libvlc_set_app_id@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1092]!	; 0x444

00010b50 <sigwait@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1084]!	; 0x43c

00010b5c <_exit@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1076]!	; 0x434

00010b68 <funlockfile@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1068]!	; 0x42c

00010b74 <libvlc_new@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1060]!	; 0x424

00010b80 <pthread_mutex_unlock@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1052]!	; 0x41c

00010b8c <fflush@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1044]!	; 0x414

00010b98 <isatty@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #69632	; 0x11000
   10ba0:	ldr	pc, [ip, #1036]!	; 0x40c

00010ba4 <flockfile@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #69632	; 0x11000
   10bac:	ldr	pc, [ip, #1028]!	; 0x404

00010bb0 <pthread_mutex_lock@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #69632	; 0x11000
   10bb8:	ldr	pc, [ip, #1020]!	; 0x3fc

00010bbc <memcpy@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #69632	; 0x11000
   10bc4:	ldr	pc, [ip, #1012]!	; 0x3f4

00010bc8 <alarm@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #69632	; 0x11000
   10bd0:	ldr	pc, [ip, #1004]!	; 0x3ec

00010bd4 <sigaddset@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #69632	; 0x11000
   10bdc:	ldr	pc, [ip, #996]!	; 0x3e4

00010be0 <pthread_sigmask@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #69632	; 0x11000
   10be8:	ldr	pc, [ip, #988]!	; 0x3dc

00010bec <libvlc_set_user_agent@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #69632	; 0x11000
   10bf4:	ldr	pc, [ip, #980]!	; 0x3d4

00010bf8 <__vfprintf_chk@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #69632	; 0x11000
   10c00:	ldr	pc, [ip, #972]!	; 0x3cc

00010c04 <fwrite@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #69632	; 0x11000
   10c0c:	ldr	pc, [ip, #964]!	; 0x3c4

00010c10 <libvlc_playlist_play@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #69632	; 0x11000
   10c18:	ldr	pc, [ip, #956]!	; 0x3bc

00010c1c <__stack_chk_fail@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #69632	; 0x11000
   10c24:	ldr	pc, [ip, #948]!	; 0x3b4

00010c28 <sigaction@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #69632	; 0x11000
   10c30:	ldr	pc, [ip, #940]!	; 0x3ac

00010c34 <sigdelset@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #69632	; 0x11000
   10c3c:	ldr	pc, [ip, #932]!	; 0x3a4

00010c40 <__fprintf_chk@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #69632	; 0x11000
   10c48:	ldr	pc, [ip, #924]!	; 0x39c

00010c4c <dlerror@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #69632	; 0x11000
   10c54:	ldr	pc, [ip, #916]!	; 0x394

00010c58 <libvlc_release@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #69632	; 0x11000
   10c60:	ldr	pc, [ip, #908]!	; 0x38c

00010c64 <__register_atfork@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #69632	; 0x11000
   10c6c:	ldr	pc, [ip, #900]!	; 0x384

00010c70 <pthread_self@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #69632	; 0x11000
   10c78:	ldr	pc, [ip, #892]!	; 0x37c

00010c7c <dlsym@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #69632	; 0x11000
   10c84:	ldr	pc, [ip, #884]!	; 0x374

Disassembly of section .text:

00010c88 <.text>:
   10c88:	push	{r4, r5, r6, r7, r8, fp, lr}
   10c8c:	add	fp, sp, #24
   10c90:	ldr	r5, [pc, #708]	; 10f5c <dlsym@plt+0x2e0>
   10c94:	sub	sp, sp, #292	; 0x124
   10c98:	ldr	r3, [r5]
   10c9c:	mov	r4, r0
   10ca0:	mov	r6, r1
   10ca4:	mov	r0, #13
   10ca8:	mov	r1, #1
   10cac:	str	r3, [fp, #-32]	; 0xffffffe0
   10cb0:	bl	10af0 <signal@plt>
   10cb4:	mov	r1, #0
   10cb8:	mov	r0, #17
   10cbc:	bl	10af0 <signal@plt>
   10cc0:	ldr	r0, [pc, #664]	; 10f60 <dlsym@plt+0x2e4>
   10cc4:	bl	11318 <dlsym@plt+0x69c>
   10cc8:	bl	10ac0 <geteuid@plt>
   10ccc:	cmp	r0, #0
   10cd0:	beq	10f38 <dlsym@plt+0x2bc>
   10cd4:	ldr	r1, [pc, #648]	; 10f64 <dlsym@plt+0x2e8>
   10cd8:	mov	r0, #6
   10cdc:	bl	11444 <dlsym@plt+0x7c8>
   10ce0:	mov	r0, #2
   10ce4:	bl	10b98 <isatty@plt>
   10ce8:	cmp	r0, #0
   10cec:	bne	10f08 <dlsym@plt+0x28c>
   10cf0:	sub	r0, fp, #300	; 0x12c
   10cf4:	bl	10ab4 <sigemptyset@plt>
   10cf8:	mov	r1, #2
   10cfc:	sub	r0, fp, #300	; 0x12c
   10d00:	bl	10bd4 <sigaddset@plt>
   10d04:	mov	r1, #1
   10d08:	sub	r0, fp, #300	; 0x12c
   10d0c:	bl	10bd4 <sigaddset@plt>
   10d10:	mov	r1, #3
   10d14:	sub	r0, fp, #300	; 0x12c
   10d18:	bl	10bd4 <sigaddset@plt>
   10d1c:	mov	r1, #15
   10d20:	sub	r0, fp, #300	; 0x12c
   10d24:	bl	10bd4 <sigaddset@plt>
   10d28:	mov	r1, #13
   10d2c:	sub	r0, fp, #300	; 0x12c
   10d30:	bl	10bd4 <sigaddset@plt>
   10d34:	mov	r1, #17
   10d38:	sub	r0, fp, #300	; 0x12c
   10d3c:	bl	10bd4 <sigaddset@plt>
   10d40:	bl	10c70 <pthread_self@plt>
   10d44:	mov	r2, #0
   10d48:	sub	r1, fp, #300	; 0x12c
   10d4c:	mov	r8, r2
   10d50:	add	r7, r4, #2
   10d54:	str	r0, [fp, #-308]	; 0xfffffecc
   10d58:	mov	r0, #2
   10d5c:	bl	10be0 <pthread_sigmask@plt>
   10d60:	add	r2, r4, #3
   10d64:	ldr	ip, [pc, #508]	; 10f68 <dlsym@plt+0x2ec>
   10d68:	lsl	r0, r2, #2
   10d6c:	add	r1, r0, #7
   10d70:	bic	r4, r1, #7
   10d74:	sub	sp, sp, r4
   10d78:	ldr	r3, [pc, #492]	; 10f6c <dlsym@plt+0x2f0>
   10d7c:	add	r4, sp, #8
   10d80:	str	ip, [sp, #8]
   10d84:	ldr	ip, [pc, #484]	; 10f70 <dlsym@plt+0x2f4>
   10d88:	add	r1, r6, #4
   10d8c:	sub	r2, r0, #16
   10d90:	add	r0, sp, #20
   10d94:	str	ip, [sp, #12]
   10d98:	str	r3, [sp, #16]
   10d9c:	bl	10bbc <memcpy@plt>
   10da0:	str	r8, [r4, r7, lsl #2]
   10da4:	bl	111e4 <dlsym@plt+0x568>
   10da8:	mov	r0, r7
   10dac:	mov	r1, r4
   10db0:	bl	10b74 <libvlc_new@plt>
   10db4:	subs	r7, r0, #0
   10db8:	moveq	r6, #1
   10dbc:	beq	10eec <dlsym@plt+0x270>
   10dc0:	sub	r2, fp, #308	; 0x134
   10dc4:	ldr	r1, [pc, #424]	; 10f74 <dlsym@plt+0x2f8>
   10dc8:	bl	10b08 <libvlc_set_exit_handler@plt>
   10dcc:	ldr	r3, [pc, #420]	; 10f78 <dlsym@plt+0x2fc>
   10dd0:	ldr	r2, [pc, #420]	; 10f7c <dlsym@plt+0x300>
   10dd4:	ldr	r1, [pc, #420]	; 10f80 <dlsym@plt+0x304>
   10dd8:	mov	r0, r7
   10ddc:	bl	10b44 <libvlc_set_app_id@plt>
   10de0:	ldr	r2, [pc, #412]	; 10f84 <dlsym@plt+0x308>
   10de4:	ldr	r1, [pc, #412]	; 10f88 <dlsym@plt+0x30c>
   10de8:	mov	r0, r7
   10dec:	bl	10bec <libvlc_set_user_agent@plt>
   10df0:	ldr	r1, [pc, #404]	; 10f8c <dlsym@plt+0x310>
   10df4:	mov	r0, r7
   10df8:	bl	10b20 <libvlc_add_intf@plt>
   10dfc:	ldr	r1, [pc, #396]	; 10f90 <dlsym@plt+0x314>
   10e00:	mov	r0, r7
   10e04:	bl	10b20 <libvlc_add_intf@plt>
   10e08:	mov	r1, r8
   10e0c:	mov	r0, r7
   10e10:	bl	10b20 <libvlc_add_intf@plt>
   10e14:	subs	r6, r0, #0
   10e18:	movne	r6, #1
   10e1c:	bne	10ee4 <dlsym@plt+0x268>
   10e20:	mov	r3, r6
   10e24:	mov	r2, r6
   10e28:	mvn	r1, #0
   10e2c:	mov	r0, r7
   10e30:	bl	10c10 <libvlc_playlist_play@plt>
   10e34:	mov	r1, #17
   10e38:	sub	r0, fp, #300	; 0x12c
   10e3c:	bl	10c34 <sigdelset@plt>
   10e40:	mov	r2, r6
   10e44:	sub	r1, fp, #300	; 0x12c
   10e48:	mov	r0, #2
   10e4c:	bl	10be0 <pthread_sigmask@plt>
   10e50:	sub	r2, fp, #172	; 0xac
   10e54:	mov	r1, r6
   10e58:	mov	r0, #1
   10e5c:	bl	10c28 <sigaction@plt>
   10e60:	cmp	r0, r8
   10e64:	bne	10e7c <dlsym@plt+0x200>
   10e68:	ldr	r1, [fp, #-172]	; 0xffffff54
   10e6c:	cmp	r1, #1
   10e70:	bne	10e7c <dlsym@plt+0x200>
   10e74:	sub	r0, fp, #300	; 0x12c
   10e78:	bl	10c34 <sigdelset@plt>
   10e7c:	mov	r1, #13
   10e80:	sub	r0, fp, #300	; 0x12c
   10e84:	bl	10c34 <sigdelset@plt>
   10e88:	sub	r1, fp, #304	; 0x130
   10e8c:	sub	r0, fp, #300	; 0x12c
   10e90:	bl	10b50 <sigwait@plt>
   10e94:	sub	r0, fp, #300	; 0x12c
   10e98:	bl	10ab4 <sigemptyset@plt>
   10e9c:	mov	r1, #2
   10ea0:	sub	r0, fp, #300	; 0x12c
   10ea4:	bl	10bd4 <sigaddset@plt>
   10ea8:	mov	r1, #14
   10eac:	sub	r0, fp, #300	; 0x12c
   10eb0:	bl	10bd4 <sigaddset@plt>
   10eb4:	mov	r1, #1
   10eb8:	mov	r0, #2
   10ebc:	bl	10af0 <signal@plt>
   10ec0:	ldr	r1, [pc, #204]	; 10f94 <dlsym@plt+0x318>
   10ec4:	mov	r0, #14
   10ec8:	bl	10af0 <signal@plt>
   10ecc:	sub	r1, fp, #300	; 0x12c
   10ed0:	mov	r2, #0
   10ed4:	mov	r0, #1
   10ed8:	bl	10be0 <pthread_sigmask@plt>
   10edc:	mov	r0, #3
   10ee0:	bl	10bc8 <alarm@plt>
   10ee4:	mov	r0, r7
   10ee8:	bl	10c58 <libvlc_release@plt>
   10eec:	ldr	r8, [fp, #-32]	; 0xffffffe0
   10ef0:	ldr	r5, [r5]
   10ef4:	mov	r0, r6
   10ef8:	cmp	r8, r5
   10efc:	bne	10f58 <dlsym@plt+0x2dc>
   10f00:	sub	sp, fp, #24
   10f04:	pop	{r4, r5, r6, r7, r8, fp, pc}
   10f08:	ldr	r0, [pc, #136]	; 10f98 <dlsym@plt+0x31c>
   10f0c:	ldr	r7, [r0]
   10f10:	bl	10b2c <libvlc_get_version@plt>
   10f14:	mov	r8, r0
   10f18:	bl	10ad8 <libvlc_get_changeset@plt>
   10f1c:	mov	r3, r8
   10f20:	ldr	r2, [pc, #116]	; 10f9c <dlsym@plt+0x320>
   10f24:	mov	r1, #1
   10f28:	str	r0, [sp]
   10f2c:	mov	r0, r7
   10f30:	bl	10c40 <__fprintf_chk@plt>
   10f34:	b	10cf0 <dlsym@plt+0x74>
   10f38:	ldr	lr, [pc, #88]	; 10f98 <dlsym@plt+0x31c>
   10f3c:	ldr	r3, [r6]
   10f40:	ldr	r2, [pc, #88]	; 10fa0 <dlsym@plt+0x324>
   10f44:	ldr	r0, [lr]
   10f48:	mov	r1, #1
   10f4c:	bl	10c40 <__fprintf_chk@plt>
   10f50:	mov	r6, #1
   10f54:	b	10eec <dlsym@plt+0x270>
   10f58:	bl	10c1c <__stack_chk_fail@plt>
   10f5c:	andeq	r1, r2, r8, lsr lr
   10f60:	andeq	r1, r1, r4, asr #14
   10f64:	strdeq	r1, [r1], -ip
   10f68:	andeq	r1, r1, r4, asr r8
   10f6c:	andeq	r1, r1, r8, ror r8
   10f70:	andeq	r1, r1, r8, ror #16
   10f74:	strheq	r1, [r1], -r0
   10f78:	andeq	r1, r1, r0, lsl #17
   10f7c:	muleq	r1, ip, r8
   10f80:	andeq	r1, r1, r4, lsl #17
   10f84:	muleq	r1, r8, r8
   10f88:	andeq	r1, r1, r4, lsr #17
   10f8c:			; <UNDEFINED> instruction: 0x000118b8
   10f90:	andeq	r1, r1, r8, asr #17
   10f94:	andeq	r1, r1, r4, lsr #1
   10f98:	andeq	r2, r2, r8
   10f9c:	andeq	r1, r1, r0, lsr r8
   10fa0:	andeq	r1, r1, r8, asr r7
   10fa4:	vmrs	r3, fpscr
   10fa8:	orr	r3, r3, #16777216	; 0x1000000
   10fac:	vmsr	fpscr, r3
   10fb0:	bx	lr
   10fb4:	mov	fp, #0
   10fb8:	mov	lr, #0
   10fbc:	pop	{r1}		; (ldr r1, [sp], #4)
   10fc0:	mov	r2, sp
   10fc4:	push	{r2}		; (str r2, [sp, #-4]!)
   10fc8:	push	{r0}		; (str r0, [sp, #-4]!)
   10fcc:	ldr	ip, [pc, #16]	; 10fe4 <dlsym@plt+0x368>
   10fd0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fd4:	ldr	r0, [pc, #12]	; 10fe8 <dlsym@plt+0x36c>
   10fd8:	ldr	r3, [pc, #12]	; 10fec <dlsym@plt+0x370>
   10fdc:	bl	10ae4 <__libc_start_main@plt>
   10fe0:	bl	10acc <abort@plt>
   10fe4:	andeq	r1, r1, r0, lsr #14
   10fe8:	andeq	r0, r1, r8, lsl #25
   10fec:	andeq	r1, r1, r0, asr #13
   10ff0:	ldr	r3, [pc, #20]	; 1100c <dlsym@plt+0x390>
   10ff4:	ldr	r2, [pc, #20]	; 11010 <dlsym@plt+0x394>
   10ff8:	add	r3, pc, r3
   10ffc:	ldr	r2, [r3, r2]
   11000:	cmp	r2, #0
   11004:	bxeq	lr
   11008:	b	10b14 <__gmon_start__@plt>
   1100c:	andeq	r0, r1, r4, asr pc
   11010:	andeq	r0, r0, r8, lsr #1
   11014:	ldr	r0, [pc, #24]	; 11034 <dlsym@plt+0x3b8>
   11018:	ldr	r3, [pc, #24]	; 11038 <dlsym@plt+0x3bc>
   1101c:	cmp	r3, r0
   11020:	bxeq	lr
   11024:	ldr	r3, [pc, #16]	; 1103c <dlsym@plt+0x3c0>
   11028:	cmp	r3, #0
   1102c:	bxeq	lr
   11030:	bx	r3
   11034:	andeq	r2, r2, r8
   11038:	andeq	r2, r2, r8
   1103c:	andeq	r0, r0, r0
   11040:	ldr	r0, [pc, #36]	; 1106c <dlsym@plt+0x3f0>
   11044:	ldr	r1, [pc, #36]	; 11070 <dlsym@plt+0x3f4>
   11048:	sub	r1, r1, r0
   1104c:	asr	r1, r1, #2
   11050:	add	r1, r1, r1, lsr #31
   11054:	asrs	r1, r1, #1
   11058:	bxeq	lr
   1105c:	ldr	r3, [pc, #16]	; 11074 <dlsym@plt+0x3f8>
   11060:	cmp	r3, #0
   11064:	bxeq	lr
   11068:	bx	r3
   1106c:	andeq	r2, r2, r8
   11070:	andeq	r2, r2, r8
   11074:	andeq	r0, r0, r0
   11078:	push	{r4, lr}
   1107c:	ldr	r4, [pc, #24]	; 1109c <dlsym@plt+0x420>
   11080:	ldrb	r3, [r4]
   11084:	cmp	r3, #0
   11088:	popne	{r4, pc}
   1108c:	bl	11014 <dlsym@plt+0x398>
   11090:	mov	r3, #1
   11094:	strb	r3, [r4]
   11098:	pop	{r4, pc}
   1109c:	andeq	r2, r2, ip
   110a0:	b	11040 <dlsym@plt+0x3c4>
   110a4:	push	{r4, lr}
   110a8:	mov	r0, #0
   110ac:	bl	10b5c <_exit@plt>
   110b0:	ldr	r0, [r0]
   110b4:	mov	r1, #15
   110b8:	b	10b38 <pthread_kill@plt>
   110bc:	ldr	r3, [pc, #8]	; 110cc <dlsym@plt+0x450>
   110c0:	mov	r2, #0
   110c4:	strb	r2, [r3]
   110c8:	bx	lr
   110cc:	andeq	r2, r2, r0, lsl r0
   110d0:	push	{r3}		; (str r3, [sp, #-4]!)
   110d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110d8:	mov	sl, r0
   110dc:	ldr	r5, [pc, #180]	; 11198 <dlsym@plt+0x51c>
   110e0:	ldr	r4, [pc, #180]	; 1119c <dlsym@plt+0x520>
   110e4:	sub	sp, sp, #20
   110e8:	ldr	r3, [r5]
   110ec:	ldr	r0, [r4]
   110f0:	add	r6, sp, #56	; 0x38
   110f4:	mov	r8, r1
   110f8:	mov	r9, r2
   110fc:	str	r3, [sp, #12]
   11100:	str	r6, [sp, #8]
   11104:	ldr	r7, [sp, #52]	; 0x34
   11108:	bl	10ba4 <flockfile@plt>
   1110c:	ldr	r0, [sl]
   11110:	cmp	r0, #4
   11114:	bls	11140 <dlsym@plt+0x4c4>
   11118:	ldr	r0, [r4]
   1111c:	bl	10b68 <funlockfile@plt>
   11120:	ldr	r2, [sp, #12]
   11124:	ldr	ip, [r5]
   11128:	cmp	r2, ip
   1112c:	bne	11194 <dlsym@plt+0x518>
   11130:	add	sp, sp, #20
   11134:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11138:	add	sp, sp, #4
   1113c:	bx	lr
   11140:	add	r1, r0, #1
   11144:	str	r1, [sl]
   11148:	mov	r3, r8
   1114c:	str	r9, [sp]
   11150:	ldr	r2, [pc, #72]	; 111a0 <dlsym@plt+0x524>
   11154:	mov	r1, #1
   11158:	ldr	r0, [r4]
   1115c:	bl	10c40 <__fprintf_chk@plt>
   11160:	mov	r3, r6
   11164:	mov	r2, r7
   11168:	mov	r1, #1
   1116c:	ldr	r0, [r4]
   11170:	bl	10bf8 <__vfprintf_chk@plt>
   11174:	ldr	r3, [r4]
   11178:	mov	r2, #2
   1117c:	mov	r1, #1
   11180:	ldr	r0, [pc, #28]	; 111a4 <dlsym@plt+0x528>
   11184:	bl	10c04 <fwrite@plt>
   11188:	ldr	r0, [r4]
   1118c:	bl	10b8c <fflush@plt>
   11190:	b	11118 <dlsym@plt+0x49c>
   11194:	bl	10c1c <__stack_chk_fail@plt>
   11198:	andeq	r1, r2, r8, lsr lr
   1119c:	andeq	r2, r2, r8
   111a0:	andeq	r1, r1, r8, lsl #19
   111a4:	andeq	r1, r1, r0, asr r8
   111a8:	ldr	r3, [pc, #44]	; 111dc <dlsym@plt+0x560>
   111ac:	push	{lr}		; (str lr, [sp, #-4]!)
   111b0:	sub	sp, sp, #12
   111b4:	ldr	r4, [r3]
   111b8:	mov	r5, r0
   111bc:	bl	10c4c <dlerror@plt>
   111c0:	mov	r3, r5
   111c4:	ldr	r2, [pc, #20]	; 111e0 <dlsym@plt+0x564>
   111c8:	mov	r1, #1
   111cc:	str	r0, [sp]
   111d0:	mov	r0, r4
   111d4:	bl	10c40 <__fprintf_chk@plt>
   111d8:	bl	10acc <abort@plt>
   111dc:	andeq	r2, r2, r8
   111e0:	muleq	r1, r8, r9
   111e4:	ldr	r3, [pc, #20]	; 11200 <dlsym@plt+0x584>
   111e8:	mov	r1, #0
   111ec:	mov	ip, #1
   111f0:	mov	r0, r1
   111f4:	ldr	r2, [pc, #8]	; 11204 <dlsym@plt+0x588>
   111f8:	strb	ip, [r3]
   111fc:	b	11724 <dlsym@plt+0xaa8>
   11200:	andeq	r2, r2, r0, lsl r0
   11204:	strheq	r1, [r1], -ip
   11208:	ldr	r3, [pc, #100]	; 11274 <dlsym@plt+0x5f8>
   1120c:	push	{r4, lr}
   11210:	mov	r4, r0
   11214:	ldrb	r2, [r3]
   11218:	sub	sp, sp, #8
   1121c:	cmp	r2, #0
   11220:	bne	11248 <dlsym@plt+0x5cc>
   11224:	ldr	r1, [pc, #76]	; 11278 <dlsym@plt+0x5fc>
   11228:	mvn	r0, #0
   1122c:	bl	10c7c <dlsym@plt>
   11230:	subs	r1, r0, #0
   11234:	beq	1126c <dlsym@plt+0x5f0>
   11238:	mov	r0, r4
   1123c:	add	sp, sp, #8
   11240:	pop	{r4, lr}
   11244:	bx	r1
   11248:	str	r0, [sp]
   1124c:	ldr	r2, [pc, #40]	; 1127c <dlsym@plt+0x600>
   11250:	add	r0, r3, #4
   11254:	ldr	r1, [pc, #36]	; 11280 <dlsym@plt+0x604>
   11258:	ldr	r3, [pc, #36]	; 11284 <dlsym@plt+0x608>
   1125c:	bl	110d0 <dlsym@plt+0x454>
   11260:	mov	r0, #0
   11264:	add	sp, sp, #8
   11268:	pop	{r4, pc}
   1126c:	ldr	r0, [pc, #4]	; 11278 <dlsym@plt+0x5fc>
   11270:	bl	111a8 <dlsym@plt+0x52c>
   11274:	andeq	r2, r2, r0, lsl r0
   11278:	andeq	r1, r1, r0, asr #19
   1127c:	ldrdeq	r1, [r1], -ip
   11280:			; <UNDEFINED> instruction: 0x000119b8
   11284:	strdeq	r1, [r1], -r8
   11288:	ldr	r3, [pc, #116]	; 11304 <dlsym@plt+0x688>
   1128c:	push	{r4, r5, r6, lr}
   11290:	mov	r5, r1
   11294:	ldrb	r1, [r3]
   11298:	sub	sp, sp, #16
   1129c:	mov	r4, r0
   112a0:	cmp	r1, #0
   112a4:	mov	r6, r2
   112a8:	bne	112d8 <dlsym@plt+0x65c>
   112ac:	ldr	r1, [pc, #84]	; 11308 <dlsym@plt+0x68c>
   112b0:	mvn	r0, #0
   112b4:	bl	10c7c <dlsym@plt>
   112b8:	subs	ip, r0, #0
   112bc:	beq	112fc <dlsym@plt+0x680>
   112c0:	mov	r2, r6
   112c4:	mov	r1, r5
   112c8:	mov	r0, r4
   112cc:	add	sp, sp, #16
   112d0:	pop	{r4, r5, r6, lr}
   112d4:	bx	ip
   112d8:	add	r0, r3, #8
   112dc:	stm	sp, {r4, r5, r6}
   112e0:	ldr	r3, [pc, #36]	; 1130c <dlsym@plt+0x690>
   112e4:	ldr	r2, [pc, #36]	; 11310 <dlsym@plt+0x694>
   112e8:	ldr	r1, [pc, #36]	; 11314 <dlsym@plt+0x698>
   112ec:	bl	110d0 <dlsym@plt+0x454>
   112f0:	mov	r0, #0
   112f4:	add	sp, sp, #16
   112f8:	pop	{r4, r5, r6, pc}
   112fc:	ldr	r0, [pc, #4]	; 11308 <dlsym@plt+0x68c>
   11300:	bl	111a8 <dlsym@plt+0x52c>
   11304:	andeq	r2, r2, r0, lsl r0
   11308:	ldrdeq	r1, [r1], -r8
   1130c:	andeq	r1, r1, r8, asr #19
   11310:	andeq	r1, r1, r4, ror #17
   11314:			; <UNDEFINED> instruction: 0x000119b8
   11318:	ldr	r3, [pc, #100]	; 11384 <dlsym@plt+0x708>
   1131c:	push	{r4, lr}
   11320:	mov	r4, r0
   11324:	ldrb	r2, [r3]
   11328:	sub	sp, sp, #8
   1132c:	cmp	r2, #0
   11330:	bne	11358 <dlsym@plt+0x6dc>
   11334:	ldr	r1, [pc, #76]	; 11388 <dlsym@plt+0x70c>
   11338:	mvn	r0, #0
   1133c:	bl	10c7c <dlsym@plt>
   11340:	subs	r1, r0, #0
   11344:	beq	1137c <dlsym@plt+0x700>
   11348:	mov	r0, r4
   1134c:	add	sp, sp, #8
   11350:	pop	{r4, lr}
   11354:	bx	r1
   11358:	str	r0, [sp]
   1135c:	ldr	r2, [pc, #40]	; 1138c <dlsym@plt+0x710>
   11360:	add	r0, r3, #12
   11364:	ldr	r1, [pc, #36]	; 11390 <dlsym@plt+0x714>
   11368:	ldr	r3, [pc, #36]	; 11394 <dlsym@plt+0x718>
   1136c:	bl	110d0 <dlsym@plt+0x454>
   11370:	mov	r0, #0
   11374:	add	sp, sp, #8
   11378:	pop	{r4, pc}
   1137c:	ldr	r0, [pc, #4]	; 11388 <dlsym@plt+0x70c>
   11380:	bl	111a8 <dlsym@plt+0x52c>
   11384:	andeq	r2, r2, r0, lsl r0
   11388:	andeq	r1, r1, r0, ror #19
   1138c:	andeq	r1, r1, ip, ror #17
   11390:			; <UNDEFINED> instruction: 0x000119b8
   11394:	strdeq	r1, [r1], -r8
   11398:	push	{r4, r5, r6, lr}
   1139c:	sub	sp, sp, #8
   113a0:	ldr	r4, [pc, #56]	; 113e0 <dlsym@plt+0x764>
   113a4:	mov	r5, r0
   113a8:	add	r6, r4, #16
   113ac:	mov	r0, r6
   113b0:	bl	10bb0 <pthread_mutex_lock@plt>
   113b4:	add	r0, r4, #44	; 0x2c
   113b8:	str	r5, [sp]
   113bc:	ldr	r3, [pc, #32]	; 113e4 <dlsym@plt+0x768>
   113c0:	ldr	r2, [pc, #32]	; 113e8 <dlsym@plt+0x76c>
   113c4:	ldr	r1, [pc, #32]	; 113ec <dlsym@plt+0x770>
   113c8:	bl	110d0 <dlsym@plt+0x454>
   113cc:	mov	r0, r6
   113d0:	str	r5, [r4, #40]	; 0x28
   113d4:	add	sp, sp, #8
   113d8:	pop	{r4, r5, r6, lr}
   113dc:	b	10b80 <pthread_mutex_unlock@plt>
   113e0:	andeq	r2, r2, r0, lsl r0
   113e4:	ldrdeq	r1, [r1], -r4
   113e8:	strdeq	r1, [r1], -r8
   113ec:	andeq	r1, r1, ip, ror #19
   113f0:	push	{r4, r5, r6, lr}
   113f4:	ldr	r4, [pc, #56]	; 11434 <dlsym@plt+0x7b8>
   113f8:	add	r5, r4, #16
   113fc:	mov	r0, r5
   11400:	bl	10bb0 <pthread_mutex_lock@plt>
   11404:	ldr	r3, [pc, #44]	; 11438 <dlsym@plt+0x7bc>
   11408:	ldr	r2, [pc, #44]	; 1143c <dlsym@plt+0x7c0>
   1140c:	ldr	r1, [pc, #44]	; 11440 <dlsym@plt+0x7c4>
   11410:	add	r0, r4, #48	; 0x30
   11414:	bl	110d0 <dlsym@plt+0x454>
   11418:	add	r0, r4, #40	; 0x28
   1141c:	bl	10afc <rand_r@plt>
   11420:	mov	r4, r0
   11424:	mov	r0, r5
   11428:	bl	10b80 <pthread_mutex_unlock@plt>
   1142c:	mov	r0, r4
   11430:	pop	{r4, r5, r6, pc}
   11434:	andeq	r2, r2, r0, lsl r0
   11438:	strdeq	r1, [r1], -ip
   1143c:	andeq	r1, r1, r0, lsl #18
   11440:	andeq	r1, r1, ip, ror #19
   11444:	ldr	r2, [pc, #124]	; 114c8 <dlsym@plt+0x84c>
   11448:	push	{r4, r5, lr}
   1144c:	mov	r5, r0
   11450:	ldrb	r3, [r2]
   11454:	sub	sp, sp, #12
   11458:	mov	r4, r1
   1145c:	cmp	r1, #0
   11460:	moveq	r3, #0
   11464:	andne	r3, r3, #1
   11468:	cmp	r3, #0
   1146c:	bne	11498 <dlsym@plt+0x81c>
   11470:	ldr	r1, [pc, #84]	; 114cc <dlsym@plt+0x850>
   11474:	mvn	r0, #0
   11478:	bl	10c7c <dlsym@plt>
   1147c:	subs	ip, r0, #0
   11480:	beq	114c0 <dlsym@plt+0x844>
   11484:	mov	r1, r4
   11488:	mov	r0, r5
   1148c:	add	sp, sp, #12
   11490:	pop	{r4, r5, lr}
   11494:	bx	ip
   11498:	str	r1, [sp, #4]
   1149c:	str	r0, [sp]
   114a0:	ldr	r3, [pc, #40]	; 114d0 <dlsym@plt+0x854>
   114a4:	add	r0, r2, #52	; 0x34
   114a8:	ldr	r1, [pc, #36]	; 114d4 <dlsym@plt+0x858>
   114ac:	ldr	r2, [pc, #36]	; 114d8 <dlsym@plt+0x85c>
   114b0:	bl	110d0 <dlsym@plt+0x454>
   114b4:	mov	r0, #0
   114b8:	add	sp, sp, #12
   114bc:	pop	{r4, r5, pc}
   114c0:	ldr	r0, [pc, #4]	; 114cc <dlsym@plt+0x850>
   114c4:	bl	111a8 <dlsym@plt+0x52c>
   114c8:	andeq	r2, r2, r0, lsl r0
   114cc:	andeq	r1, r1, r0, lsl #20
   114d0:	strdeq	r1, [r1], -r4
   114d4:			; <UNDEFINED> instruction: 0x000119b8
   114d8:	andeq	r1, r1, r8, lsl #18
   114dc:	ldr	r3, [pc, #100]	; 11548 <dlsym@plt+0x8cc>
   114e0:	push	{r4, lr}
   114e4:	mov	r4, r0
   114e8:	ldrb	r2, [r3]
   114ec:	sub	sp, sp, #8
   114f0:	cmp	r2, #0
   114f4:	bne	1151c <dlsym@plt+0x8a0>
   114f8:	ldr	r1, [pc, #76]	; 1154c <dlsym@plt+0x8d0>
   114fc:	mvn	r0, #0
   11500:	bl	10c7c <dlsym@plt>
   11504:	subs	r1, r0, #0
   11508:	beq	11540 <dlsym@plt+0x8c4>
   1150c:	mov	r0, r4
   11510:	add	sp, sp, #8
   11514:	pop	{r4, lr}
   11518:	bx	r1
   1151c:	str	r0, [sp]
   11520:	ldr	r2, [pc, #40]	; 11550 <dlsym@plt+0x8d4>
   11524:	add	r0, r3, #56	; 0x38
   11528:	ldr	r1, [pc, #36]	; 11554 <dlsym@plt+0x8d8>
   1152c:	ldr	r3, [pc, #36]	; 11558 <dlsym@plt+0x8dc>
   11530:	bl	110d0 <dlsym@plt+0x454>
   11534:	ldr	r0, [pc, #32]	; 1155c <dlsym@plt+0x8e0>
   11538:	add	sp, sp, #8
   1153c:	pop	{r4, pc}
   11540:	ldr	r0, [pc, #4]	; 1154c <dlsym@plt+0x8d0>
   11544:	bl	111a8 <dlsym@plt+0x52c>
   11548:	andeq	r2, r2, r0, lsl r0
   1154c:	andeq	r1, r1, ip, lsl #20
   11550:	andeq	r1, r1, r4, asr r9
   11554:			; <UNDEFINED> instruction: 0x000119b8
   11558:	ldrdeq	r1, [r1], -r4
   1155c:	andeq	r1, r1, r4, lsl r9
   11560:	push	{r4, r5, lr}
   11564:	mov	r5, r0
   11568:	ldr	r4, [pc, #140]	; 115fc <dlsym@plt+0x980>
   1156c:	sub	sp, sp, #12
   11570:	ldrb	r3, [r4]
   11574:	cmp	r3, #0
   11578:	bne	115a0 <dlsym@plt+0x924>
   1157c:	ldr	r1, [pc, #124]	; 11600 <dlsym@plt+0x984>
   11580:	mvn	r0, #0
   11584:	bl	10c7c <dlsym@plt>
   11588:	subs	r1, r0, #0
   1158c:	beq	115f4 <dlsym@plt+0x978>
   11590:	mov	r0, r5
   11594:	add	sp, sp, #12
   11598:	pop	{r4, r5, lr}
   1159c:	bx	r1
   115a0:	add	r0, r4, #60	; 0x3c
   115a4:	bl	10bb0 <pthread_mutex_lock@plt>
   115a8:	ldr	r2, [pc, #84]	; 11604 <dlsym@plt+0x988>
   115ac:	ldr	r3, [pc, #84]	; 11608 <dlsym@plt+0x98c>
   115b0:	ldr	r1, [pc, #84]	; 1160c <dlsym@plt+0x990>
   115b4:	add	r0, r4, #84	; 0x54
   115b8:	str	r5, [sp]
   115bc:	bl	110d0 <dlsym@plt+0x454>
   115c0:	ldr	r1, [pc, #56]	; 11600 <dlsym@plt+0x984>
   115c4:	mvn	r0, #0
   115c8:	bl	10c7c <dlsym@plt>
   115cc:	subs	r2, r0, #0
   115d0:	beq	115f4 <dlsym@plt+0x978>
   115d4:	mov	r0, r5
   115d8:	blx	r2
   115dc:	mov	r5, r0
   115e0:	add	r0, r4, #60	; 0x3c
   115e4:	bl	10b80 <pthread_mutex_unlock@plt>
   115e8:	mov	r0, r5
   115ec:	add	sp, sp, #12
   115f0:	pop	{r4, r5, pc}
   115f4:	ldr	r0, [pc, #4]	; 11600 <dlsym@plt+0x984>
   115f8:	bl	111a8 <dlsym@plt+0x52c>
   115fc:	andeq	r2, r2, r0, lsl r0
   11600:	andeq	r1, r1, r4, lsr #20
   11604:	andeq	r1, r1, r0, ror #18
   11608:	andeq	r1, r1, r8, lsl sl
   1160c:	andeq	r1, r1, ip, lsl sl
   11610:	push	{r4, r5, lr}
   11614:	mov	r5, r0
   11618:	ldr	r4, [pc, #140]	; 116ac <dlsym@plt+0xa30>
   1161c:	sub	sp, sp, #12
   11620:	ldrb	r3, [r4]
   11624:	cmp	r3, #0
   11628:	bne	11650 <dlsym@plt+0x9d4>
   1162c:	ldr	r1, [pc, #124]	; 116b0 <dlsym@plt+0xa34>
   11630:	mvn	r0, #0
   11634:	bl	10c7c <dlsym@plt>
   11638:	subs	r1, r0, #0
   1163c:	beq	116a4 <dlsym@plt+0xa28>
   11640:	mov	r0, r5
   11644:	add	sp, sp, #12
   11648:	pop	{r4, r5, lr}
   1164c:	bx	r1
   11650:	add	r0, r4, #60	; 0x3c
   11654:	bl	10bb0 <pthread_mutex_lock@plt>
   11658:	ldr	r2, [pc, #84]	; 116b4 <dlsym@plt+0xa38>
   1165c:	ldr	r3, [pc, #84]	; 116b8 <dlsym@plt+0xa3c>
   11660:	ldr	r1, [pc, #84]	; 116bc <dlsym@plt+0xa40>
   11664:	add	r0, r4, #88	; 0x58
   11668:	str	r5, [sp]
   1166c:	bl	110d0 <dlsym@plt+0x454>
   11670:	ldr	r1, [pc, #56]	; 116b0 <dlsym@plt+0xa34>
   11674:	mvn	r0, #0
   11678:	bl	10c7c <dlsym@plt>
   1167c:	subs	r2, r0, #0
   11680:	beq	116a4 <dlsym@plt+0xa28>
   11684:	mov	r0, r5
   11688:	blx	r2
   1168c:	mov	r5, r0
   11690:	add	r0, r4, #60	; 0x3c
   11694:	bl	10b80 <pthread_mutex_unlock@plt>
   11698:	mov	r0, r5
   1169c:	add	sp, sp, #12
   116a0:	pop	{r4, r5, pc}
   116a4:	ldr	r0, [pc, #4]	; 116b0 <dlsym@plt+0xa34>
   116a8:	bl	111a8 <dlsym@plt+0x52c>
   116ac:	andeq	r2, r2, r0, lsl r0
   116b0:	andeq	r1, r1, r8, lsr sl
   116b4:	andeq	r1, r1, r4, ror r9
   116b8:	andeq	r1, r1, r8, lsl sl
   116bc:	andeq	r1, r1, ip, lsl sl
   116c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   116c4:	mov	r7, r0
   116c8:	ldr	r6, [pc, #72]	; 11718 <dlsym@plt+0xa9c>
   116cc:	ldr	r5, [pc, #72]	; 1171c <dlsym@plt+0xaa0>
   116d0:	add	r6, pc, r6
   116d4:	add	r5, pc, r5
   116d8:	sub	r6, r6, r5
   116dc:	mov	r8, r1
   116e0:	mov	r9, r2
   116e4:	bl	10a94 <sigemptyset@plt-0x20>
   116e8:	asrs	r6, r6, #2
   116ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   116f0:	mov	r4, #0
   116f4:	add	r4, r4, #1
   116f8:	ldr	r3, [r5], #4
   116fc:	mov	r2, r9
   11700:	mov	r1, r8
   11704:	mov	r0, r7
   11708:	blx	r3
   1170c:	cmp	r6, r4
   11710:	bne	116f4 <dlsym@plt+0xa78>
   11714:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11718:	andeq	r0, r1, ip, asr r7
   1171c:	andeq	r0, r1, r0, asr r7
   11720:	bx	lr
   11724:	ldr	r3, [pc, #8]	; 11734 <dlsym@plt+0xab8>
   11728:	add	r3, pc, r3
   1172c:	ldr	r3, [r3]
   11730:	b	10c64 <__register_atfork@plt>
   11734:	ldrdeq	r0, [r1], -r4

Disassembly of section .fini:

00011738 <.fini>:
   11738:	push	{r3, lr}
   1173c:	pop	{r3, pc}
