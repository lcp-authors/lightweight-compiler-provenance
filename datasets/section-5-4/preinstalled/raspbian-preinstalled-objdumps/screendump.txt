
raspbian-preinstalled/screendump:     file format elf32-littlearm


Disassembly of section .init:

0001074c <.init>:
   1074c:	push	{r3, lr}
   10750:	bl	10f08 <abort@plt+0x658>
   10754:	pop	{r3, pc}

Disassembly of section .plt:

00010758 <strcmp@plt-0x14>:
   10758:	push	{lr}		; (str lr, [sp, #-4]!)
   1075c:	ldr	lr, [pc, #4]	; 10768 <strcmp@plt-0x4>
   10760:	add	lr, pc, lr
   10764:	ldr	pc, [lr, #8]!
   10768:	muleq	r1, r8, r8

0001076c <strcmp@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2200]!	; 0x898

00010778 <strtol@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2192]!	; 0x890

00010784 <read@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2184]!	; 0x888

00010790 <free@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2176]!	; 0x880

0001079c <strndup@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2168]!	; 0x878

000107a8 <dcgettext@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2160]!	; 0x870

000107b4 <strdup@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2152]!	; 0x868

000107c0 <__stack_chk_fail@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2144]!	; 0x860

000107cc <realloc@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2136]!	; 0x858

000107d8 <textdomain@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2128]!	; 0x850

000107e4 <perror@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2120]!	; 0x848

000107f0 <ioctl@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2112]!	; 0x840

000107fc <malloc@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2104]!	; 0x838

00010808 <__libc_start_main@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2096]!	; 0x830

00010814 <strerror@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2088]!	; 0x828

00010820 <__vfprintf_chk@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2080]!	; 0x820

0001082c <__gmon_start__@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2072]!	; 0x818

00010838 <open@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2064]!	; 0x810

00010844 <exit@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2056]!	; 0x808

00010850 <__errno_location@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #2048]!	; 0x800

0001085c <__sprintf_chk@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #2040]!	; 0x7f8

00010868 <__printf_chk@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #2032]!	; 0x7f0

00010874 <write@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010880 <__fprintf_chk@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #2016]!	; 0x7e0

0001088c <setlocale@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #2008]!	; 0x7d8

00010898 <strrchr@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #2000]!	; 0x7d0

000108a4 <bindtextdomain@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1992]!	; 0x7c8

000108b0 <abort@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1984]!	; 0x7c0

Disassembly of section .text:

000108bc <.text>:
   108bc:	ldr	r3, [pc, #52]	; 108f8 <abort@plt+0x48>
   108c0:	push	{r4, lr}
   108c4:	mov	r2, #5
   108c8:	ldr	r1, [pc, #44]	; 108fc <abort@plt+0x4c>
   108cc:	mov	r0, #0
   108d0:	ldr	r4, [r3]
   108d4:	bl	107a8 <dcgettext@plt>
   108d8:	ldr	r3, [pc, #32]	; 10900 <abort@plt+0x50>
   108dc:	mov	r1, #1
   108e0:	ldr	r3, [r3]
   108e4:	mov	r2, r0
   108e8:	mov	r0, r4
   108ec:	bl	10880 <__fprintf_chk@plt>
   108f0:	mov	r0, #71	; 0x47
   108f4:	bl	10844 <exit@plt>
   108f8:	andeq	r2, r2, r8, lsl #1
   108fc:	andeq	r1, r1, r4, lsl r3
   10900:	muleq	r2, r0, r0
   10904:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10908:	sub	sp, sp, #96	; 0x60
   1090c:	ldr	r6, [pc, #1372]	; 10e70 <abort@plt+0x5c0>
   10910:	ldr	r4, [r1]
   10914:	mov	r8, r0
   10918:	ldr	r3, [r6]
   1091c:	mov	r0, r4
   10920:	mov	r5, r1
   10924:	mov	r1, #47	; 0x2f
   10928:	str	r3, [sp, #92]	; 0x5c
   1092c:	bl	10898 <strrchr@plt>
   10930:	ldr	r7, [pc, #1340]	; 10e74 <abort@plt+0x5c4>
   10934:	ldr	r1, [pc, #1340]	; 10e78 <abort@plt+0x5c8>
   10938:	cmp	r0, #0
   1093c:	addne	r4, r0, #1
   10940:	mov	r0, #6
   10944:	str	r4, [r7]
   10948:	bl	1088c <setlocale@plt>
   1094c:	ldr	r1, [pc, #1320]	; 10e7c <abort@plt+0x5cc>
   10950:	ldr	r0, [pc, #1320]	; 10e80 <abort@plt+0x5d0>
   10954:	bl	108a4 <bindtextdomain@plt>
   10958:	ldr	r0, [pc, #1312]	; 10e80 <abort@plt+0x5d0>
   1095c:	bl	107d8 <textdomain@plt>
   10960:	cmp	r8, #2
   10964:	beq	10cbc <abort@plt+0x40c>
   10968:	bgt	10d8c <abort@plt+0x4dc>
   1096c:	mov	r5, #0
   10970:	ldr	r3, [pc, #1292]	; 10e84 <abort@plt+0x5d4>
   10974:	mov	r2, #20
   10978:	mov	r1, #1
   1097c:	str	r5, [sp]
   10980:	add	r0, sp, #32
   10984:	bl	1085c <__sprintf_chk@plt>
   10988:	add	r0, sp, #32
   1098c:	mov	r1, #0
   10990:	bl	10838 <open@plt>
   10994:	clz	r4, r5
   10998:	lsr	r4, r4, #5
   1099c:	ands	r3, r4, r0, lsr #31
   109a0:	mov	r9, r0
   109a4:	beq	10bac <abort@plt+0x2fc>
   109a8:	bl	10850 <__errno_location@plt>
   109ac:	ldr	r3, [r0]
   109b0:	cmp	r3, #2
   109b4:	beq	10b88 <abort@plt+0x2d8>
   109b8:	ldr	r3, [pc, #1224]	; 10e88 <abort@plt+0x5d8>
   109bc:	mov	r2, #20
   109c0:	mov	r1, #1
   109c4:	str	r5, [sp]
   109c8:	add	r0, sp, #52	; 0x34
   109cc:	bl	1085c <__sprintf_chk@plt>
   109d0:	add	r0, sp, #52	; 0x34
   109d4:	mov	r1, #0
   109d8:	bl	10838 <open@plt>
   109dc:	subs	r4, r0, #0
   109e0:	blt	10cec <abort@plt+0x43c>
   109e4:	add	r2, sp, #20
   109e8:	ldr	r1, [pc, #1180]	; 10e8c <abort@plt+0x5dc>
   109ec:	mov	r0, r4
   109f0:	bl	107f0 <ioctl@plt>
   109f4:	cmp	r0, #0
   109f8:	bne	10d10 <abort@plt+0x460>
   109fc:	ldrh	r3, [sp, #20]
   10a00:	ldrh	r0, [sp, #22]
   10a04:	mov	r7, #0
   10a08:	mul	r0, r0, r3
   10a0c:	add	r0, r0, #2
   10a10:	bl	10fbc <abort@plt+0x70c>
   10a14:	ldr	r1, [pc, #1140]	; 10e90 <abort@plt+0x5e0>
   10a18:	mov	r2, r0
   10a1c:	strb	r5, [r0, #1]
   10a20:	strb	r7, [r0]
   10a24:	mov	r8, r0
   10a28:	mov	r0, r4
   10a2c:	bl	107f0 <ioctl@plt>
   10a30:	cmp	r0, r7
   10a34:	beq	10a58 <abort@plt+0x1a8>
   10a38:	cmp	r4, r7
   10a3c:	beq	10c94 <abort@plt+0x3e4>
   10a40:	mov	r0, r7
   10a44:	mov	r2, r8
   10a48:	ldr	r1, [pc, #1088]	; 10e90 <abort@plt+0x5e0>
   10a4c:	bl	107f0 <ioctl@plt>
   10a50:	cmp	r0, #0
   10a54:	bne	10c94 <abort@plt+0x3e4>
   10a58:	ldrb	r5, [r8]
   10a5c:	ldrh	r3, [sp, #20]
   10a60:	ldrb	r4, [r8, #1]
   10a64:	cmp	r3, r5
   10a68:	bne	10a78 <abort@plt+0x1c8>
   10a6c:	ldrh	r3, [sp, #22]
   10a70:	cmp	r3, r4
   10a74:	beq	10aa8 <abort@plt+0x1f8>
   10a78:	mov	r2, #5
   10a7c:	ldr	r1, [pc, #1040]	; 10e94 <abort@plt+0x5e4>
   10a80:	mov	r0, #0
   10a84:	bl	107a8 <dcgettext@plt>
   10a88:	ldrh	r2, [sp, #20]
   10a8c:	ldrh	r3, [sp, #22]
   10a90:	strd	r4, [sp, #4]
   10a94:	str	r2, [sp]
   10a98:	mov	r1, #0
   10a9c:	mov	r2, r0
   10aa0:	mov	r0, #1
   10aa4:	bl	110e4 <abort@plt+0x834>
   10aa8:	mla	r0, r4, r5, r5
   10aac:	bl	10fbc <abort@plt+0x70c>
   10ab0:	cmp	r5, #0
   10ab4:	add	r2, r8, #2
   10ab8:	movne	lr, #0
   10abc:	movne	r8, #10
   10ac0:	mov	r7, r0
   10ac4:	beq	10b2c <abort@plt+0x27c>
   10ac8:	cmp	r4, #0
   10acc:	subne	r1, r0, #1
   10ad0:	addne	ip, r2, r4
   10ad4:	beq	10b18 <abort@plt+0x268>
   10ad8:	ldrb	r3, [r2], #1
   10adc:	cmp	r2, ip
   10ae0:	strb	r3, [r1, #1]!
   10ae4:	bne	10ad8 <abort@plt+0x228>
   10ae8:	cmp	r3, #32
   10aec:	add	r0, r0, r4
   10af0:	bne	10b18 <abort@plt+0x268>
   10af4:	sub	r3, r0, #1
   10af8:	sub	ip, r0, r4
   10afc:	b	10b0c <abort@plt+0x25c>
   10b00:	ldrb	r1, [r3, #-1]!
   10b04:	cmp	r1, #32
   10b08:	bne	10b18 <abort@plt+0x268>
   10b0c:	cmp	r3, ip
   10b10:	mov	r0, r3
   10b14:	bne	10b00 <abort@plt+0x250>
   10b18:	add	lr, lr, #1
   10b1c:	cmp	r5, lr
   10b20:	strb	r8, [r0]
   10b24:	add	r0, r0, #1
   10b28:	bne	10ac8 <abort@plt+0x218>
   10b2c:	sub	r4, r0, r7
   10b30:	mov	r1, r7
   10b34:	mov	r2, r4
   10b38:	mov	r0, #1
   10b3c:	bl	10874 <write@plt>
   10b40:	cmp	r4, r0
   10b44:	moveq	r0, #0
   10b48:	beq	10b70 <abort@plt+0x2c0>
   10b4c:	mov	r2, #5
   10b50:	ldr	r1, [pc, #832]	; 10e98 <abort@plt+0x5e8>
   10b54:	mov	r0, #0
   10b58:	bl	107a8 <dcgettext@plt>
   10b5c:	mov	r1, #0
   10b60:	mov	r2, r0
   10b64:	mov	r0, #1
   10b68:	bl	110e4 <abort@plt+0x834>
   10b6c:	mov	r0, #0
   10b70:	ldr	r2, [sp, #92]	; 0x5c
   10b74:	ldr	r3, [r6]
   10b78:	cmp	r2, r3
   10b7c:	bne	10e6c <abort@plt+0x5bc>
   10b80:	add	sp, sp, #96	; 0x60
   10b84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b88:	ldr	r2, [pc, #780]	; 10e9c <abort@plt+0x5ec>
   10b8c:	add	r3, sp, #32
   10b90:	ldm	r2, {r0, r1, r2}
   10b94:	stmia	r3!, {r0, r1}
   10b98:	mov	r1, #0
   10b9c:	add	r0, sp, #32
   10ba0:	strh	r2, [r3]
   10ba4:	bl	10838 <open@plt>
   10ba8:	mov	r9, r0
   10bac:	cmp	r9, #0
   10bb0:	blt	10dbc <abort@plt+0x50c>
   10bb4:	mov	r2, #4
   10bb8:	add	r1, sp, #28
   10bbc:	mov	r0, r9
   10bc0:	bl	10784 <read@plt>
   10bc4:	cmp	r0, #4
   10bc8:	bne	109b8 <abort@plt+0x108>
   10bcc:	ldrb	r8, [sp, #28]
   10bd0:	ldrb	r4, [sp, #29]
   10bd4:	smulbb	r7, r8, r4
   10bd8:	cmp	r7, #0
   10bdc:	beq	109b8 <abort@plt+0x108>
   10be0:	lsl	sl, r7, #1
   10be4:	mov	r0, sl
   10be8:	bl	10fbc <abort@plt+0x70c>
   10bec:	mov	r5, r0
   10bf0:	add	r0, r7, r8
   10bf4:	bl	10fbc <abort@plt+0x70c>
   10bf8:	mov	r2, sl
   10bfc:	mov	r1, r5
   10c00:	mov	r7, r0
   10c04:	mov	r0, r9
   10c08:	bl	10784 <read@plt>
   10c0c:	cmp	sl, r0
   10c10:	bne	10d5c <abort@plt+0x4ac>
   10c14:	lsl	lr, r4, #1
   10c18:	mov	r0, r7
   10c1c:	mov	r1, #0
   10c20:	mov	ip, #10
   10c24:	cmp	r1, r8
   10c28:	bcs	10b2c <abort@plt+0x27c>
   10c2c:	cmp	r4, #0
   10c30:	addne	r2, r0, r4
   10c34:	addne	r3, r5, #2
   10c38:	beq	10c84 <abort@plt+0x3d4>
   10c3c:	ldrb	r9, [r3, #-2]
   10c40:	add	r3, r3, #2
   10c44:	strb	r9, [r0], #1
   10c48:	cmp	r2, r0
   10c4c:	bne	10c3c <abort@plt+0x38c>
   10c50:	cmp	r9, #32
   10c54:	add	r5, r5, lr
   10c58:	mov	r0, r2
   10c5c:	bne	10c84 <abort@plt+0x3d4>
   10c60:	sub	r3, r2, #1
   10c64:	sub	r2, r2, r4
   10c68:	b	10c78 <abort@plt+0x3c8>
   10c6c:	ldrb	r9, [r3, #-1]!
   10c70:	cmp	r9, #32
   10c74:	bne	10c84 <abort@plt+0x3d4>
   10c78:	cmp	r2, r3
   10c7c:	mov	r0, r3
   10c80:	bne	10c6c <abort@plt+0x3bc>
   10c84:	strb	ip, [r0]
   10c88:	add	r1, r1, #1
   10c8c:	add	r0, r0, #1
   10c90:	b	10c24 <abort@plt+0x374>
   10c94:	mov	r2, #5
   10c98:	ldr	r1, [pc, #512]	; 10ea0 <abort@plt+0x5f0>
   10c9c:	mov	r0, #0
   10ca0:	bl	107a8 <dcgettext@plt>
   10ca4:	add	r2, sp, #32
   10ca8:	mov	r1, r0
   10cac:	mov	r0, #0
   10cb0:	bl	1102c <abort@plt+0x77c>
   10cb4:	mov	r0, #1
   10cb8:	b	10b70 <abort@plt+0x2c0>
   10cbc:	ldr	r4, [r5, #4]
   10cc0:	ldr	r1, [pc, #476]	; 10ea4 <abort@plt+0x5f4>
   10cc4:	mov	r0, r4
   10cc8:	bl	1076c <strcmp@plt>
   10ccc:	subs	r5, r0, #0
   10cd0:	beq	10e44 <abort@plt+0x594>
   10cd4:	mov	r0, r4
   10cd8:	mov	r2, #10
   10cdc:	mov	r1, #0
   10ce0:	bl	10778 <strtol@plt>
   10ce4:	mov	r5, r0
   10ce8:	b	10970 <abort@plt+0xc0>
   10cec:	bl	10850 <__errno_location@plt>
   10cf0:	ldr	r8, [r0]
   10cf4:	mov	r7, r0
   10cf8:	cmp	r8, #2
   10cfc:	beq	10d28 <abort@plt+0x478>
   10d00:	add	r0, sp, #52	; 0x34
   10d04:	bl	107e4 <perror@plt>
   10d08:	mov	r4, #0
   10d0c:	b	109e4 <abort@plt+0x134>
   10d10:	bl	10850 <__errno_location@plt>
   10d14:	ldr	r2, [pc, #396]	; 10ea8 <abort@plt+0x5f8>
   10d18:	ldr	r1, [r0]
   10d1c:	mov	r0, #1
   10d20:	bl	110e4 <abort@plt+0x834>
   10d24:	b	109fc <abort@plt+0x14c>
   10d28:	ldr	r3, [pc, #380]	; 10eac <abort@plt+0x5fc>
   10d2c:	mov	r2, #20
   10d30:	mov	r1, #1
   10d34:	str	r5, [sp]
   10d38:	add	r0, sp, #72	; 0x48
   10d3c:	bl	1085c <__sprintf_chk@plt>
   10d40:	add	r0, sp, #72	; 0x48
   10d44:	mov	r1, #0
   10d48:	bl	10838 <open@plt>
   10d4c:	subs	r4, r0, #0
   10d50:	strlt	r8, [r7]
   10d54:	bge	109e4 <abort@plt+0x134>
   10d58:	b	10d00 <abort@plt+0x450>
   10d5c:	bl	10850 <__errno_location@plt>
   10d60:	mov	r2, #5
   10d64:	ldr	r1, [pc, #324]	; 10eb0 <abort@plt+0x600>
   10d68:	ldr	r9, [r0]
   10d6c:	mov	r0, #0
   10d70:	bl	107a8 <dcgettext@plt>
   10d74:	add	r3, sp, #32
   10d78:	mov	r1, r9
   10d7c:	mov	r2, r0
   10d80:	mov	r0, #1
   10d84:	bl	110e4 <abort@plt+0x834>
   10d88:	b	10c14 <abort@plt+0x364>
   10d8c:	ldr	r3, [pc, #288]	; 10eb4 <abort@plt+0x604>
   10d90:	mov	r2, #5
   10d94:	ldr	r1, [pc, #284]	; 10eb8 <abort@plt+0x608>
   10d98:	mov	r0, #0
   10d9c:	ldr	r4, [r3]
   10da0:	bl	107a8 <dcgettext@plt>
   10da4:	mov	r1, #1
   10da8:	mov	r2, r0
   10dac:	mov	r0, r4
   10db0:	bl	10880 <__fprintf_chk@plt>
   10db4:	mov	r0, #1
   10db8:	bl	10844 <exit@plt>
   10dbc:	bl	10850 <__errno_location@plt>
   10dc0:	ldr	r3, [r0]
   10dc4:	mov	r7, r0
   10dc8:	cmp	r3, #2
   10dcc:	bne	109b8 <abort@plt+0x108>
   10dd0:	ldr	r3, [pc, #228]	; 10ebc <abort@plt+0x60c>
   10dd4:	mov	r2, #20
   10dd8:	mov	r1, #1
   10ddc:	str	r5, [sp]
   10de0:	add	r0, sp, #32
   10de4:	bl	1085c <__sprintf_chk@plt>
   10de8:	mov	r1, #0
   10dec:	add	r0, sp, #32
   10df0:	bl	10838 <open@plt>
   10df4:	ands	r3, r4, r0, lsr #31
   10df8:	mov	r9, r0
   10dfc:	beq	10e38 <abort@plt+0x588>
   10e00:	ldr	r3, [r7]
   10e04:	cmp	r3, #2
   10e08:	bne	109b8 <abort@plt+0x108>
   10e0c:	ldr	r2, [pc, #172]	; 10ec0 <abort@plt+0x610>
   10e10:	add	r3, sp, #32
   10e14:	ldm	r2, {r0, r1, r2}
   10e18:	lsr	ip, r2, #16
   10e1c:	stmia	r3!, {r0, r1}
   10e20:	mov	r1, #0
   10e24:	strh	r2, [r3], #2
   10e28:	add	r0, sp, #32
   10e2c:	strb	ip, [r3]
   10e30:	bl	10838 <open@plt>
   10e34:	mov	r9, r0
   10e38:	cmp	r9, #0
   10e3c:	bge	10bb4 <abort@plt+0x304>
   10e40:	b	109b8 <abort@plt+0x108>
   10e44:	mov	r2, #5
   10e48:	ldr	r1, [pc, #116]	; 10ec4 <abort@plt+0x614>
   10e4c:	bl	107a8 <dcgettext@plt>
   10e50:	ldr	r2, [r7]
   10e54:	ldr	r3, [pc, #108]	; 10ec8 <abort@plt+0x618>
   10e58:	mov	r1, r0
   10e5c:	mov	r0, #1
   10e60:	bl	10868 <__printf_chk@plt>
   10e64:	mov	r0, r5
   10e68:	bl	10844 <exit@plt>
   10e6c:	bl	107c0 <__stack_chk_fail@plt>
   10e70:	andeq	r1, r2, r8, lsl #30
   10e74:	muleq	r2, r0, r0
   10e78:	andeq	r1, r1, ip, lsr #6
   10e7c:	strdeq	r1, [r1], -r4
   10e80:	andeq	r1, r1, r8, lsl #4
   10e84:	andeq	r1, r1, r0, asr #4
   10e88:	andeq	r1, r1, r8, lsl #5
   10e8c:	andeq	r5, r0, r3, lsl r4
   10e90:	andeq	r5, r0, ip, lsl r4
   10e94:	andeq	r1, r1, r8, asr #5
   10e98:	strdeq	r1, [r1], -r8
   10e9c:	andeq	r1, r1, ip, asr #4
   10ea0:			; <UNDEFINED> instruction: 0x000112b4
   10ea4:	andeq	r1, r1, ip, lsl #4
   10ea8:	andeq	r1, r1, r0, lsr #5
   10eac:	muleq	r1, r4, r2
   10eb0:	andeq	r1, r1, r4, ror r2
   10eb4:	andeq	r2, r2, r8, lsl #1
   10eb8:	andeq	r1, r1, r8, lsr #4
   10ebc:	andeq	r1, r1, r8, asr r2
   10ec0:	andeq	r1, r1, r8, ror #4
   10ec4:	andeq	r1, r1, r0, lsl r2
   10ec8:	andeq	r1, r1, ip, lsl r2
   10ecc:	mov	fp, #0
   10ed0:	mov	lr, #0
   10ed4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ed8:	mov	r2, sp
   10edc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ee0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ee4:	ldr	ip, [pc, #16]	; 10efc <abort@plt+0x64c>
   10ee8:	push	{ip}		; (str ip, [sp, #-4]!)
   10eec:	ldr	r0, [pc, #12]	; 10f00 <abort@plt+0x650>
   10ef0:	ldr	r3, [pc, #12]	; 10f04 <abort@plt+0x654>
   10ef4:	bl	10808 <__libc_start_main@plt>
   10ef8:	bl	108b0 <abort@plt>
   10efc:	andeq	r1, r1, r4, ror #3
   10f00:	andeq	r0, r1, r4, lsl #18
   10f04:	andeq	r1, r1, r4, lsl #3
   10f08:	ldr	r3, [pc, #20]	; 10f24 <abort@plt+0x674>
   10f0c:	ldr	r2, [pc, #20]	; 10f28 <abort@plt+0x678>
   10f10:	add	r3, pc, r3
   10f14:	ldr	r2, [r3, r2]
   10f18:	cmp	r2, #0
   10f1c:	bxeq	lr
   10f20:	b	1082c <__gmon_start__@plt>
   10f24:	andeq	r1, r1, r8, ror #1
   10f28:	andeq	r0, r0, ip, ror r0
   10f2c:	ldr	r0, [pc, #24]	; 10f4c <abort@plt+0x69c>
   10f30:	ldr	r3, [pc, #24]	; 10f50 <abort@plt+0x6a0>
   10f34:	cmp	r3, r0
   10f38:	bxeq	lr
   10f3c:	ldr	r3, [pc, #16]	; 10f54 <abort@plt+0x6a4>
   10f40:	cmp	r3, #0
   10f44:	bxeq	lr
   10f48:	bx	r3
   10f4c:	andeq	r2, r2, r8, lsl #1
   10f50:	andeq	r2, r2, r8, lsl #1
   10f54:	andeq	r0, r0, r0
   10f58:	ldr	r0, [pc, #36]	; 10f84 <abort@plt+0x6d4>
   10f5c:	ldr	r1, [pc, #36]	; 10f88 <abort@plt+0x6d8>
   10f60:	sub	r1, r1, r0
   10f64:	asr	r1, r1, #2
   10f68:	add	r1, r1, r1, lsr #31
   10f6c:	asrs	r1, r1, #1
   10f70:	bxeq	lr
   10f74:	ldr	r3, [pc, #16]	; 10f8c <abort@plt+0x6dc>
   10f78:	cmp	r3, #0
   10f7c:	bxeq	lr
   10f80:	bx	r3
   10f84:	andeq	r2, r2, r8, lsl #1
   10f88:	andeq	r2, r2, r8, lsl #1
   10f8c:	andeq	r0, r0, r0
   10f90:	push	{r4, lr}
   10f94:	ldr	r4, [pc, #24]	; 10fb4 <abort@plt+0x704>
   10f98:	ldrb	r3, [r4]
   10f9c:	cmp	r3, #0
   10fa0:	popne	{r4, pc}
   10fa4:	bl	10f2c <abort@plt+0x67c>
   10fa8:	mov	r3, #1
   10fac:	strb	r3, [r4]
   10fb0:	pop	{r4, pc}
   10fb4:	andeq	r2, r2, ip, lsl #1
   10fb8:	b	10f58 <abort@plt+0x6a8>
   10fbc:	push	{r4, lr}
   10fc0:	bl	107fc <malloc@plt>
   10fc4:	cmp	r0, #0
   10fc8:	popne	{r4, pc}
   10fcc:	bl	108bc <abort@plt+0xc>
   10fd0:	push	{r4, lr}
   10fd4:	bl	107cc <realloc@plt>
   10fd8:	cmp	r0, #0
   10fdc:	popne	{r4, pc}
   10fe0:	bl	108bc <abort@plt+0xc>
   10fe4:	push	{r4, lr}
   10fe8:	bl	107b4 <strdup@plt>
   10fec:	cmp	r0, #0
   10ff0:	popne	{r4, pc}
   10ff4:	bl	108bc <abort@plt+0xc>
   10ff8:	push	{r4, lr}
   10ffc:	bl	1079c <strndup@plt>
   11000:	cmp	r0, #0
   11004:	popne	{r4, pc}
   11008:	bl	108bc <abort@plt+0xc>
   1100c:	cmp	r0, #0
   11010:	beq	11024 <abort@plt+0x774>
   11014:	push	{r4, lr}
   11018:	bl	10790 <free@plt>
   1101c:	mov	r0, #0
   11020:	pop	{r4, pc}
   11024:	mov	r0, #0
   11028:	bx	lr
   1102c:	push	{r1, r2, r3}
   11030:	push	{r4, r5, r6, r7, lr}
   11034:	sub	sp, sp, #8
   11038:	ldr	r5, [pc, #144]	; 110d0 <abort@plt+0x820>
   1103c:	ldr	r4, [pc, #144]	; 110d4 <abort@plt+0x824>
   11040:	ldr	r3, [pc, #144]	; 110d8 <abort@plt+0x828>
   11044:	ldr	r1, [r5]
   11048:	ldr	r7, [sp, #28]
   1104c:	add	ip, sp, #32
   11050:	mov	r6, r0
   11054:	ldr	r3, [r3]
   11058:	ldr	r2, [pc, #124]	; 110dc <abort@plt+0x82c>
   1105c:	str	r1, [sp, #4]
   11060:	ldr	r0, [r4]
   11064:	mov	r1, #1
   11068:	str	ip, [sp]
   1106c:	bl	10880 <__fprintf_chk@plt>
   11070:	mov	r2, r7
   11074:	ldr	r0, [r4]
   11078:	ldr	r3, [sp]
   1107c:	mov	r1, #1
   11080:	bl	10820 <__vfprintf_chk@plt>
   11084:	cmp	r6, #0
   11088:	ble	110ac <abort@plt+0x7fc>
   1108c:	mov	r0, r6
   11090:	ldr	r4, [r4]
   11094:	bl	10814 <strerror@plt>
   11098:	ldr	r2, [pc, #64]	; 110e0 <abort@plt+0x830>
   1109c:	mov	r1, #1
   110a0:	mov	r3, r0
   110a4:	mov	r0, r4
   110a8:	bl	10880 <__fprintf_chk@plt>
   110ac:	ldr	r2, [sp, #4]
   110b0:	ldr	r3, [r5]
   110b4:	cmp	r2, r3
   110b8:	bne	110cc <abort@plt+0x81c>
   110bc:	add	sp, sp, #8
   110c0:	pop	{r4, r5, r6, r7, lr}
   110c4:	add	sp, sp, #12
   110c8:	bx	lr
   110cc:	bl	107c0 <__stack_chk_fail@plt>
   110d0:	andeq	r1, r2, r8, lsl #30
   110d4:	andeq	r2, r2, r8, lsl #1
   110d8:	muleq	r2, r0, r0
   110dc:	andeq	r1, r1, r8, lsr #6
   110e0:	andeq	r1, r1, r0, lsr r3
   110e4:	push	{r2, r3}
   110e8:	mov	r5, r1
   110ec:	ldr	r2, [pc, #124]	; 11170 <abort@plt+0x8c0>
   110f0:	push	{r7, lr}
   110f4:	sub	sp, sp, #8
   110f8:	ldr	r4, [pc, #116]	; 11174 <abort@plt+0x8c4>
   110fc:	ldr	r3, [pc, #116]	; 11178 <abort@plt+0x8c8>
   11100:	ldr	lr, [r2]
   11104:	ldr	r7, [sp, #16]
   11108:	add	ip, sp, #20
   1110c:	ldr	r3, [r3]
   11110:	ldr	r2, [pc, #100]	; 1117c <abort@plt+0x8cc>
   11114:	mov	r1, #1
   11118:	mov	r6, r0
   1111c:	ldr	r0, [r4]
   11120:	str	lr, [sp, #4]
   11124:	str	ip, [sp]
   11128:	bl	10880 <__fprintf_chk@plt>
   1112c:	mov	r2, r7
   11130:	ldr	r0, [r4]
   11134:	ldr	r3, [sp]
   11138:	mov	r1, #1
   1113c:	bl	10820 <__vfprintf_chk@plt>
   11140:	cmp	r5, #0
   11144:	ble	11168 <abort@plt+0x8b8>
   11148:	mov	r0, r5
   1114c:	ldr	r4, [r4]
   11150:	bl	10814 <strerror@plt>
   11154:	ldr	r2, [pc, #36]	; 11180 <abort@plt+0x8d0>
   11158:	mov	r1, #1
   1115c:	mov	r3, r0
   11160:	mov	r0, r4
   11164:	bl	10880 <__fprintf_chk@plt>
   11168:	mov	r0, r6
   1116c:	bl	10844 <exit@plt>
   11170:	andeq	r1, r2, r8, lsl #30
   11174:	andeq	r2, r2, r8, lsl #1
   11178:	muleq	r2, r0, r0
   1117c:	andeq	r1, r1, r8, lsr #6
   11180:	andeq	r1, r1, r0, lsr r3
   11184:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11188:	mov	r7, r0
   1118c:	ldr	r6, [pc, #72]	; 111dc <abort@plt+0x92c>
   11190:	ldr	r5, [pc, #72]	; 111e0 <abort@plt+0x930>
   11194:	add	r6, pc, r6
   11198:	add	r5, pc, r5
   1119c:	sub	r6, r6, r5
   111a0:	mov	r8, r1
   111a4:	mov	r9, r2
   111a8:	bl	1074c <strcmp@plt-0x20>
   111ac:	asrs	r6, r6, #2
   111b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   111b4:	mov	r4, #0
   111b8:	add	r4, r4, #1
   111bc:	ldr	r3, [r5], #4
   111c0:	mov	r2, r9
   111c4:	mov	r1, r8
   111c8:	mov	r0, r7
   111cc:	blx	r3
   111d0:	cmp	r6, r4
   111d4:	bne	111b8 <abort@plt+0x908>
   111d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111dc:	andeq	r0, r1, r8, ror #26
   111e0:	andeq	r0, r1, r0, ror #26
   111e4:	bx	lr

Disassembly of section .fini:

000111e8 <.fini>:
   111e8:	push	{r3, lr}
   111ec:	pop	{r3, pc}
