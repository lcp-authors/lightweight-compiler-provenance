
raspbian-preinstalled/setarch:     file format elf32-littlearm


Disassembly of section .init:

00010850 <.init>:
   10850:	push	{r3, lr}
   10854:	bl	114dc <abort@plt+0xb04>
   10858:	pop	{r3, pc}

Disassembly of section .plt:

0001085c <strcmp@plt-0x14>:
   1085c:	push	{lr}		; (str lr, [sp, #-4]!)
   10860:	ldr	lr, [pc, #4]	; 1086c <strcmp@plt-0x4>
   10864:	add	lr, pc, lr
   10868:	ldr	pc, [lr, #8]!
   1086c:	andeq	r2, r1, r8, lsl #14

00010870 <strcmp@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #1800]!	; 0x708

0001087c <fflush@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #1792]!	; 0x700

00010888 <ferror@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #1784]!	; 0x6f8

00010894 <_exit@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1776]!	; 0x6f0

000108a0 <execvp@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1768]!	; 0x6e8

000108ac <uname@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #73728	; 0x12000
   108b4:	ldr	pc, [ip, #1760]!	; 0x6e0

000108b8 <dcgettext@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #73728	; 0x12000
   108c0:	ldr	pc, [ip, #1752]!	; 0x6d8

000108c4 <__stack_chk_fail@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #73728	; 0x12000
   108cc:	ldr	pc, [ip, #1744]!	; 0x6d0

000108d0 <textdomain@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #73728	; 0x12000
   108d8:	ldr	pc, [ip, #1736]!	; 0x6c8

000108dc <err@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #73728	; 0x12000
   108e4:	ldr	pc, [ip, #1728]!	; 0x6c0

000108e8 <__fpending@plt>:
   108e8:	add	ip, pc, #0, 12
   108ec:	add	ip, ip, #73728	; 0x12000
   108f0:	ldr	pc, [ip, #1720]!	; 0x6b8

000108f4 <puts@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #73728	; 0x12000
   108fc:	ldr	pc, [ip, #1712]!	; 0x6b0

00010900 <__libc_start_main@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #73728	; 0x12000
   10908:	ldr	pc, [ip, #1704]!	; 0x6a8

0001090c <__gmon_start__@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #73728	; 0x12000
   10914:	ldr	pc, [ip, #1696]!	; 0x6a0

00010918 <getopt_long@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #73728	; 0x12000
   10920:	ldr	pc, [ip, #1688]!	; 0x698

00010924 <exit@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #73728	; 0x12000
   1092c:	ldr	pc, [ip, #1680]!	; 0x690

00010930 <personality@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #73728	; 0x12000
   10938:	ldr	pc, [ip, #1672]!	; 0x688

0001093c <warnx@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #73728	; 0x12000
   10944:	ldr	pc, [ip, #1664]!	; 0x680

00010948 <__errno_location@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #73728	; 0x12000
   10950:	ldr	pc, [ip, #1656]!	; 0x678

00010954 <__cxa_atexit@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #73728	; 0x12000
   1095c:	ldr	pc, [ip, #1648]!	; 0x670

00010960 <__printf_chk@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #73728	; 0x12000
   10968:	ldr	pc, [ip, #1640]!	; 0x668

0001096c <__fprintf_chk@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #73728	; 0x12000
   10974:	ldr	pc, [ip, #1632]!	; 0x660

00010978 <fclose@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #73728	; 0x12000
   10980:	ldr	pc, [ip, #1624]!	; 0x658

00010984 <setlocale@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #73728	; 0x12000
   1098c:	ldr	pc, [ip, #1616]!	; 0x650

00010990 <errx@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #73728	; 0x12000
   10998:	ldr	pc, [ip, #1608]!	; 0x648

0001099c <execl@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #73728	; 0x12000
   109a4:	ldr	pc, [ip, #1600]!	; 0x640

000109a8 <warn@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #73728	; 0x12000
   109b0:	ldr	pc, [ip, #1592]!	; 0x638

000109b4 <fputc@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #73728	; 0x12000
   109bc:	ldr	pc, [ip, #1584]!	; 0x630

000109c0 <bindtextdomain@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #73728	; 0x12000
   109c8:	ldr	pc, [ip, #1576]!	; 0x628

000109cc <fputs@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #73728	; 0x12000
   109d4:	ldr	pc, [ip, #1568]!	; 0x620

000109d8 <abort@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #73728	; 0x12000
   109e0:	ldr	pc, [ip, #1560]!	; 0x618

Disassembly of section .text:

000109e4 <.text>:
   109e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   109e8:	mov	r6, r0
   109ec:	sub	sp, sp, #20
   109f0:	mov	r7, r1
   109f4:	mov	r0, #6
   109f8:	ldr	r1, [pc, #2468]	; 113a4 <abort@plt+0x9cc>
   109fc:	bl	10984 <setlocale@plt>
   10a00:	ldr	r1, [pc, #2464]	; 113a8 <abort@plt+0x9d0>
   10a04:	ldr	r0, [pc, #2464]	; 113ac <abort@plt+0x9d4>
   10a08:	bl	109c0 <bindtextdomain@plt>
   10a0c:	ldr	r0, [pc, #2456]	; 113ac <abort@plt+0x9d4>
   10a10:	bl	108d0 <textdomain@plt>
   10a14:	ldr	r0, [pc, #2452]	; 113b0 <abort@plt+0x9d8>
   10a18:	bl	118e4 <abort@plt+0xf0c>
   10a1c:	cmp	r6, #0
   10a20:	ble	11350 <abort@plt+0x978>
   10a24:	ldr	r3, [pc, #2440]	; 113b4 <abort@plt+0x9dc>
   10a28:	ldr	r1, [pc, #2440]	; 113b8 <abort@plt+0x9e0>
   10a2c:	ldr	fp, [r3]
   10a30:	mov	r0, fp
   10a34:	bl	10870 <strcmp@plt>
   10a38:	subs	r3, r0, #0
   10a3c:	str	r3, [sp, #12]
   10a40:	beq	10bdc <abort@plt+0x204>
   10a44:	ldr	r1, [pc, #2416]	; 113bc <abort@plt+0x9e4>
   10a48:	mov	r0, fp
   10a4c:	bl	10870 <strcmp@plt>
   10a50:	subs	r8, r0, #0
   10a54:	beq	10e90 <abort@plt+0x4b8>
   10a58:	mov	r8, #0
   10a5c:	ldr	sl, [pc, #2396]	; 113c0 <abort@plt+0x9e8>
   10a60:	ldr	r9, [pc, #2396]	; 113c4 <abort@plt+0x9ec>
   10a64:	mov	r5, r8
   10a68:	mov	r4, #0
   10a6c:	str	r4, [sp]
   10a70:	mov	r3, sl
   10a74:	mov	r2, r9
   10a78:	mov	r1, r7
   10a7c:	mov	r0, r6
   10a80:	bl	10918 <getopt_long@plt>
   10a84:	cmn	r0, #1
   10a88:	beq	10f68 <abort@plt+0x590>
   10a8c:	sub	r0, r0, #51	; 0x33
   10a90:	cmp	r0, #79	; 0x4f
   10a94:	ldrls	pc, [pc, r0, lsl #2]
   10a98:	b	11270 <abort@plt+0x898>
   10a9c:	andeq	r0, r1, r8, asr lr
   10aa0:	andeq	r1, r1, r0, ror r2
   10aa4:	andeq	r1, r1, r0, ror r2
   10aa8:	andeq	r1, r1, r0, ror r2
   10aac:	andeq	r1, r1, r0, ror r2
   10ab0:	andeq	r1, r1, r0, ror r2
   10ab4:	andeq	r1, r1, r0, ror r2
   10ab8:	andeq	r1, r1, r0, ror r2
   10abc:	andeq	r1, r1, r0, ror r2
   10ac0:	andeq	r1, r1, r0, ror r2
   10ac4:	andeq	r1, r1, r0, ror r2
   10ac8:	andeq	r1, r1, r0, ror r2
   10acc:	andeq	r1, r1, r0, ror r2
   10ad0:	andeq	r1, r1, r0, ror r2
   10ad4:	andeq	r1, r1, r0, ror r2
   10ad8:	andeq	r0, r1, r8, lsr #28
   10adc:	andeq	r1, r1, r0, ror r2
   10ae0:	andeq	r1, r1, r0, ror r2
   10ae4:	andeq	r1, r1, r0, ror r2
   10ae8:	strdeq	r0, [r1], -r8
   10aec:	andeq	r1, r1, r0, ror r2
   10af0:	andeq	r1, r1, r0, ror r2
   10af4:	andeq	r0, r1, r8, asr #27
   10af8:	andeq	r1, r1, r0, ror r2
   10afc:	andeq	r1, r1, r0, ror r2
   10b00:	muleq	r1, r8, sp
   10b04:	andeq	r1, r1, r0, ror r2
   10b08:	andeq	r1, r1, r0, ror r2
   10b0c:	andeq	r1, r1, r0, ror r2
   10b10:	andeq	r1, r1, r0, ror r2
   10b14:	andeq	r1, r1, r0, ror r2
   10b18:	andeq	r0, r1, r8, ror #26
   10b1c:	andeq	r0, r1, r8, lsr sp
   10b20:	andeq	r0, r1, r8, lsl #26
   10b24:	andeq	r1, r1, r0, ror r2
   10b28:	ldrdeq	r0, [r1], -r4
   10b2c:	andeq	r1, r1, r0, ror r2
   10b30:	andeq	r0, r1, r4, lsr #25
   10b34:	andeq	r1, r1, r0, ror r2
   10b38:	andeq	r0, r1, r4, ror ip
   10b3c:	andeq	r1, r1, r0, ror r2
   10b40:	andeq	r1, r1, r0, ror r2
   10b44:	andeq	r1, r1, r0, ror r2
   10b48:	andeq	r1, r1, r0, ror r2
   10b4c:	andeq	r1, r1, r0, ror r2
   10b50:	andeq	r1, r1, r0, ror r2
   10b54:	andeq	r1, r1, r0, ror r2
   10b58:	andeq	r1, r1, r0, ror r2
   10b5c:	andeq	r1, r1, r0, ror r2
   10b60:	andeq	r1, r1, r0, ror r2
   10b64:	andeq	r1, r1, r0, ror r2
   10b68:	andeq	r1, r1, r0, ror r2
   10b6c:	andeq	r1, r1, r0, ror r2
   10b70:	andeq	r1, r1, r8, lsl r0
   10b74:	andeq	r1, r1, r0, ror r2
   10b78:	andeq	r1, r1, r0, ror r2
   10b7c:	andeq	r1, r1, r0, ror r2
   10b80:	andeq	r1, r1, r0, ror r2
   10b84:	andeq	r1, r1, r0, ror r2
   10b88:	andeq	r1, r1, r0, ror r2
   10b8c:	andeq	r1, r1, r0, ror r2
   10b90:	andeq	r1, r1, r0, ror r2
   10b94:	andeq	r1, r1, r0, ror r2
   10b98:	andeq	r1, r1, r0, ror r2
   10b9c:	andeq	r1, r1, r0, ror r2
   10ba0:	andeq	r1, r1, r0, ror r2
   10ba4:	andeq	r1, r1, r0, ror r2
   10ba8:	andeq	r0, r1, ip, ror #24
   10bac:	andeq	r1, r1, r0, ror r2
   10bb0:	andeq	r1, r1, r0, ror r2
   10bb4:	andeq	r1, r1, r0, ror r2
   10bb8:	andeq	r1, r1, r0, ror r2
   10bbc:	andeq	r1, r1, r0, ror r2
   10bc0:	andeq	r1, r1, r0, ror r2
   10bc4:	andeq	r1, r1, r0, ror r2
   10bc8:	andeq	r1, r1, r0, ror r2
   10bcc:	andeq	r1, r1, r0, ror r2
   10bd0:	andeq	r0, r1, r8, ror #20
   10bd4:	andeq	r0, r1, ip, lsr ip
   10bd8:	andeq	r0, r1, r4, lsl #24
   10bdc:	cmp	r6, #1
   10be0:	beq	10e88 <abort@plt+0x4b0>
   10be4:	ldr	fp, [r7, #4]
   10be8:	ldrsb	r3, [fp]
   10bec:	cmp	r3, #45	; 0x2d
   10bf0:	beq	10e88 <abort@plt+0x4b0>
   10bf4:	ldr	r3, [r7]
   10bf8:	sub	r6, r6, #1
   10bfc:	str	r3, [r7, #4]!
   10c00:	b	10a58 <abort@plt+0x80>
   10c04:	ldr	r3, [sp, #12]
   10c08:	cmp	r3, #0
   10c0c:	bne	1125c <abort@plt+0x884>
   10c10:	bl	11590 <abort@plt+0xbb8>
   10c14:	mov	r4, r0
   10c18:	ldr	r0, [r0, #4]
   10c1c:	cmp	r0, #0
   10c20:	beq	10cfc <abort@plt+0x324>
   10c24:	add	r4, r4, #12
   10c28:	bl	108f4 <puts@plt>
   10c2c:	ldr	r0, [r4, #4]
   10c30:	cmp	r0, #0
   10c34:	bne	10c24 <abort@plt+0x24c>
   10c38:	b	10cfc <abort@plt+0x324>
   10c3c:	cmp	r8, #0
   10c40:	orr	r5, r5, #131072	; 0x20000
   10c44:	beq	10a68 <abort@plt+0x90>
   10c48:	mov	r2, #5
   10c4c:	ldr	r1, [pc, #1908]	; 113c8 <abort@plt+0x9f0>
   10c50:	mov	r0, #0
   10c54:	bl	108b8 <dcgettext@plt>
   10c58:	ldr	r2, [pc, #1900]	; 113cc <abort@plt+0x9f4>
   10c5c:	mov	r1, r0
   10c60:	mov	r0, #1
   10c64:	bl	10960 <__printf_chk@plt>
   10c68:	b	10a68 <abort@plt+0x90>
   10c6c:	mov	r8, #1
   10c70:	b	10a68 <abort@plt+0x90>
   10c74:	cmp	r8, #0
   10c78:	orr	r5, r5, #1048576	; 0x100000
   10c7c:	beq	10a68 <abort@plt+0x90>
   10c80:	mov	r2, #5
   10c84:	ldr	r1, [pc, #1852]	; 113c8 <abort@plt+0x9f0>
   10c88:	mov	r0, #0
   10c8c:	bl	108b8 <dcgettext@plt>
   10c90:	ldr	r2, [pc, #1848]	; 113d0 <abort@plt+0x9f8>
   10c94:	mov	r1, r0
   10c98:	mov	r0, #1
   10c9c:	bl	10960 <__printf_chk@plt>
   10ca0:	b	10a68 <abort@plt+0x90>
   10ca4:	cmp	r8, #0
   10ca8:	orr	r5, r5, #4194304	; 0x400000
   10cac:	beq	10a68 <abort@plt+0x90>
   10cb0:	mov	r2, #5
   10cb4:	ldr	r1, [pc, #1804]	; 113c8 <abort@plt+0x9f0>
   10cb8:	mov	r0, #0
   10cbc:	bl	108b8 <dcgettext@plt>
   10cc0:	ldr	r2, [pc, #1804]	; 113d4 <abort@plt+0x9fc>
   10cc4:	mov	r1, r0
   10cc8:	mov	r0, #1
   10ccc:	bl	10960 <__printf_chk@plt>
   10cd0:	b	10a68 <abort@plt+0x90>
   10cd4:	mov	r2, #5
   10cd8:	ldr	r1, [pc, #1784]	; 113d8 <abort@plt+0xa00>
   10cdc:	mov	r0, #0
   10ce0:	bl	108b8 <dcgettext@plt>
   10ce4:	ldr	r3, [pc, #1736]	; 113b4 <abort@plt+0x9dc>
   10ce8:	ldr	r2, [r3]
   10cec:	ldr	r3, [pc, #1768]	; 113dc <abort@plt+0xa04>
   10cf0:	mov	r1, r0
   10cf4:	mov	r0, #1
   10cf8:	bl	10960 <__printf_chk@plt>
   10cfc:	mov	r0, #0
   10d00:	add	sp, sp, #20
   10d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d08:	cmp	r8, #0
   10d0c:	orr	r5, r5, #67108864	; 0x4000000
   10d10:	beq	10a68 <abort@plt+0x90>
   10d14:	mov	r2, #5
   10d18:	ldr	r1, [pc, #1704]	; 113c8 <abort@plt+0x9f0>
   10d1c:	mov	r0, #0
   10d20:	bl	108b8 <dcgettext@plt>
   10d24:	ldr	r2, [pc, #1716]	; 113e0 <abort@plt+0xa08>
   10d28:	mov	r1, r0
   10d2c:	mov	r0, #1
   10d30:	bl	10960 <__printf_chk@plt>
   10d34:	b	10a68 <abort@plt+0x90>
   10d38:	cmp	r8, #0
   10d3c:	orr	r5, r5, #33554432	; 0x2000000
   10d40:	beq	10a68 <abort@plt+0x90>
   10d44:	mov	r2, #5
   10d48:	ldr	r1, [pc, #1656]	; 113c8 <abort@plt+0x9f0>
   10d4c:	mov	r0, #0
   10d50:	bl	108b8 <dcgettext@plt>
   10d54:	ldr	r2, [pc, #1672]	; 113e4 <abort@plt+0xa0c>
   10d58:	mov	r1, r0
   10d5c:	mov	r0, #1
   10d60:	bl	10960 <__printf_chk@plt>
   10d64:	b	10a68 <abort@plt+0x90>
   10d68:	cmp	r8, #0
   10d6c:	orr	r5, r5, #262144	; 0x40000
   10d70:	beq	10a68 <abort@plt+0x90>
   10d74:	mov	r2, #5
   10d78:	ldr	r1, [pc, #1608]	; 113c8 <abort@plt+0x9f0>
   10d7c:	mov	r0, #0
   10d80:	bl	108b8 <dcgettext@plt>
   10d84:	ldr	r2, [pc, #1628]	; 113e8 <abort@plt+0xa10>
   10d88:	mov	r1, r0
   10d8c:	mov	r0, #1
   10d90:	bl	10960 <__printf_chk@plt>
   10d94:	b	10a68 <abort@plt+0x90>
   10d98:	cmp	r8, #0
   10d9c:	orr	r5, r5, #2097152	; 0x200000
   10da0:	beq	10a68 <abort@plt+0x90>
   10da4:	mov	r2, #5
   10da8:	ldr	r1, [pc, #1560]	; 113c8 <abort@plt+0x9f0>
   10dac:	mov	r0, #0
   10db0:	bl	108b8 <dcgettext@plt>
   10db4:	ldr	r2, [pc, #1584]	; 113ec <abort@plt+0xa14>
   10db8:	mov	r1, r0
   10dbc:	mov	r0, #1
   10dc0:	bl	10960 <__printf_chk@plt>
   10dc4:	b	10a68 <abort@plt+0x90>
   10dc8:	cmp	r8, #0
   10dcc:	orr	r5, r5, #16777216	; 0x1000000
   10dd0:	beq	10a68 <abort@plt+0x90>
   10dd4:	mov	r2, #5
   10dd8:	ldr	r1, [pc, #1512]	; 113c8 <abort@plt+0x9f0>
   10ddc:	mov	r0, #0
   10de0:	bl	108b8 <dcgettext@plt>
   10de4:	ldr	r2, [pc, #1540]	; 113f0 <abort@plt+0xa18>
   10de8:	mov	r1, r0
   10dec:	mov	r0, #1
   10df0:	bl	10960 <__printf_chk@plt>
   10df4:	b	10a68 <abort@plt+0x90>
   10df8:	cmp	r8, #0
   10dfc:	orr	r5, r5, #524288	; 0x80000
   10e00:	beq	10a68 <abort@plt+0x90>
   10e04:	mov	r2, #5
   10e08:	ldr	r1, [pc, #1464]	; 113c8 <abort@plt+0x9f0>
   10e0c:	mov	r0, #0
   10e10:	bl	108b8 <dcgettext@plt>
   10e14:	ldr	r2, [pc, #1496]	; 113f4 <abort@plt+0xa1c>
   10e18:	mov	r1, r0
   10e1c:	mov	r0, #1
   10e20:	bl	10960 <__printf_chk@plt>
   10e24:	b	10a68 <abort@plt+0x90>
   10e28:	cmp	r8, #0
   10e2c:	orr	r5, r5, #8388608	; 0x800000
   10e30:	beq	10a68 <abort@plt+0x90>
   10e34:	mov	r2, #5
   10e38:	ldr	r1, [pc, #1416]	; 113c8 <abort@plt+0x9f0>
   10e3c:	mov	r0, #0
   10e40:	bl	108b8 <dcgettext@plt>
   10e44:	ldr	r2, [pc, #1452]	; 113f8 <abort@plt+0xa20>
   10e48:	mov	r1, r0
   10e4c:	mov	r0, #1
   10e50:	bl	10960 <__printf_chk@plt>
   10e54:	b	10a68 <abort@plt+0x90>
   10e58:	cmp	r8, #0
   10e5c:	orr	r5, r5, #134217728	; 0x8000000
   10e60:	beq	10a68 <abort@plt+0x90>
   10e64:	mov	r2, #5
   10e68:	ldr	r1, [pc, #1368]	; 113c8 <abort@plt+0x9f0>
   10e6c:	mov	r0, #0
   10e70:	bl	108b8 <dcgettext@plt>
   10e74:	ldr	r2, [pc, #1408]	; 113fc <abort@plt+0xa24>
   10e78:	mov	r1, r0
   10e7c:	mov	r0, #1
   10e80:	bl	10960 <__printf_chk@plt>
   10e84:	b	10a68 <abort@plt+0x90>
   10e88:	ldr	fp, [sp, #12]
   10e8c:	b	10a58 <abort@plt+0x80>
   10e90:	ldr	r4, [pc, #1292]	; 113a4 <abort@plt+0x9cc>
   10e94:	ldr	sl, [pc, #1380]	; 11400 <abort@plt+0xa28>
   10e98:	mov	r5, r8
   10e9c:	bl	11590 <abort@plt+0xbb8>
   10ea0:	ldr	r3, [r0]
   10ea4:	cmp	r3, #0
   10ea8:	blt	11300 <abort@plt+0x928>
   10eac:	mov	r9, r0
   10eb0:	b	10ec0 <abort@plt+0x4e8>
   10eb4:	ldr	r3, [r9, #12]!
   10eb8:	cmp	r3, #0
   10ebc:	blt	11300 <abort@plt+0x928>
   10ec0:	ldr	r1, [r9, #4]
   10ec4:	mov	r0, fp
   10ec8:	bl	10870 <strcmp@plt>
   10ecc:	cmp	r0, #0
   10ed0:	bne	10eb4 <abort@plt+0x4dc>
   10ed4:	ldr	r3, [r9]
   10ed8:	orr	r5, r3, r5
   10edc:	mov	r0, r5
   10ee0:	bl	10930 <personality@plt>
   10ee4:	cmp	r0, #0
   10ee8:	blt	10fe8 <abort@plt+0x610>
   10eec:	mov	r1, fp
   10ef0:	mov	r0, r9
   10ef4:	bl	11640 <abort@plt+0xc68>
   10ef8:	cmp	r6, #0
   10efc:	beq	10f54 <abort@plt+0x57c>
   10f00:	cmp	r8, #0
   10f04:	bne	112dc <abort@plt+0x904>
   10f08:	cmp	sl, #0
   10f0c:	beq	10fa8 <abort@plt+0x5d0>
   10f10:	mov	r1, r4
   10f14:	mov	r2, #0
   10f18:	mov	r0, sl
   10f1c:	bl	1099c <execl@plt>
   10f20:	bl	10948 <__errno_location@plt>
   10f24:	mov	r2, #5
   10f28:	ldr	r1, [pc, #1236]	; 11404 <abort@plt+0xa2c>
   10f2c:	ldr	r3, [r0]
   10f30:	mov	r0, #0
   10f34:	cmp	r3, #2
   10f38:	moveq	r4, #127	; 0x7f
   10f3c:	movne	r4, #126	; 0x7e
   10f40:	bl	108b8 <dcgettext@plt>
   10f44:	mov	r2, sl
   10f48:	mov	r1, r0
   10f4c:	mov	r0, r4
   10f50:	bl	108dc <err@plt>
   10f54:	cmp	r8, #0
   10f58:	bne	112a8 <abort@plt+0x8d0>
   10f5c:	ldr	r4, [pc, #1188]	; 11408 <abort@plt+0xa30>
   10f60:	ldr	sl, [pc, #1188]	; 1140c <abort@plt+0xa34>
   10f64:	b	10f10 <abort@plt+0x538>
   10f68:	orrs	r0, fp, r5
   10f6c:	beq	1138c <abort@plt+0x9b4>
   10f70:	ldr	r3, [pc, #1176]	; 11410 <abort@plt+0xa38>
   10f74:	cmp	fp, #0
   10f78:	movne	sl, r4
   10f7c:	ldr	r3, [r3]
   10f80:	sub	r6, r6, r3
   10f84:	add	r7, r7, r3, lsl #2
   10f88:	bne	10e9c <abort@plt+0x4c4>
   10f8c:	mov	r0, r5
   10f90:	bl	10930 <personality@plt>
   10f94:	cmp	r0, #0
   10f98:	blt	11320 <abort@plt+0x948>
   10f9c:	mov	r4, fp
   10fa0:	mov	sl, fp
   10fa4:	b	10ef8 <abort@plt+0x520>
   10fa8:	mov	r1, r7
   10fac:	ldr	r0, [r7]
   10fb0:	bl	108a0 <execvp@plt>
   10fb4:	bl	10948 <__errno_location@plt>
   10fb8:	mov	r2, #5
   10fbc:	ldr	r1, [pc, #1088]	; 11404 <abort@plt+0xa2c>
   10fc0:	ldr	r3, [r0]
   10fc4:	mov	r0, sl
   10fc8:	cmp	r3, #2
   10fcc:	moveq	r4, #127	; 0x7f
   10fd0:	movne	r4, #126	; 0x7e
   10fd4:	bl	108b8 <dcgettext@plt>
   10fd8:	ldr	r2, [r7]
   10fdc:	mov	r1, r0
   10fe0:	mov	r0, r4
   10fe4:	bl	108dc <err@plt>
   10fe8:	mov	r0, r5
   10fec:	bl	10930 <personality@plt>
   10ff0:	cmp	r0, #0
   10ff4:	bge	10eec <abort@plt+0x514>
   10ff8:	mov	r2, #5
   10ffc:	ldr	r1, [pc, #1040]	; 11414 <abort@plt+0xa3c>
   11000:	mov	r0, #0
   11004:	bl	108b8 <dcgettext@plt>
   11008:	mov	r2, fp
   1100c:	mov	r1, r0
   11010:	mov	r0, #1
   11014:	bl	108dc <err@plt>
   11018:	ldr	r4, [pc, #1016]	; 11418 <abort@plt+0xa40>
   1101c:	mov	r2, #5
   11020:	ldr	r1, [pc, #1012]	; 1141c <abort@plt+0xa44>
   11024:	mov	r0, #0
   11028:	bl	108b8 <dcgettext@plt>
   1102c:	ldr	r1, [r4]
   11030:	bl	109cc <fputs@plt>
   11034:	ldr	r0, [sp, #12]
   11038:	mov	r2, #5
   1103c:	cmp	r0, #0
   11040:	movne	r0, #0
   11044:	ldreq	r1, [pc, #980]	; 11420 <abort@plt+0xa48>
   11048:	ldrne	r1, [pc, #980]	; 11424 <abort@plt+0xa4c>
   1104c:	bl	108b8 <dcgettext@plt>
   11050:	ldr	r3, [pc, #860]	; 113b4 <abort@plt+0x9dc>
   11054:	ldr	r2, [r3]
   11058:	mov	r1, r0
   1105c:	mov	r0, #1
   11060:	bl	10960 <__printf_chk@plt>
   11064:	ldr	r1, [r4]
   11068:	mov	r0, #10
   1106c:	bl	109b4 <fputc@plt>
   11070:	mov	r2, #5
   11074:	ldr	r1, [pc, #940]	; 11428 <abort@plt+0xa50>
   11078:	mov	r0, #0
   1107c:	bl	108b8 <dcgettext@plt>
   11080:	ldr	r1, [r4]
   11084:	bl	109cc <fputs@plt>
   11088:	mov	r2, #5
   1108c:	ldr	r1, [pc, #920]	; 1142c <abort@plt+0xa54>
   11090:	mov	r0, #0
   11094:	bl	108b8 <dcgettext@plt>
   11098:	ldr	r1, [r4]
   1109c:	bl	109cc <fputs@plt>
   110a0:	mov	r2, #5
   110a4:	ldr	r1, [pc, #900]	; 11430 <abort@plt+0xa58>
   110a8:	mov	r0, #0
   110ac:	bl	108b8 <dcgettext@plt>
   110b0:	ldr	r1, [r4]
   110b4:	bl	109cc <fputs@plt>
   110b8:	mov	r2, #5
   110bc:	ldr	r1, [pc, #880]	; 11434 <abort@plt+0xa5c>
   110c0:	mov	r0, #0
   110c4:	bl	108b8 <dcgettext@plt>
   110c8:	ldr	r1, [r4]
   110cc:	bl	109cc <fputs@plt>
   110d0:	mov	r2, #5
   110d4:	ldr	r1, [pc, #860]	; 11438 <abort@plt+0xa60>
   110d8:	mov	r0, #0
   110dc:	bl	108b8 <dcgettext@plt>
   110e0:	ldr	r1, [r4]
   110e4:	bl	109cc <fputs@plt>
   110e8:	mov	r2, #5
   110ec:	ldr	r1, [pc, #840]	; 1143c <abort@plt+0xa64>
   110f0:	mov	r0, #0
   110f4:	bl	108b8 <dcgettext@plt>
   110f8:	ldr	r1, [r4]
   110fc:	bl	109cc <fputs@plt>
   11100:	mov	r2, #5
   11104:	ldr	r1, [pc, #820]	; 11440 <abort@plt+0xa68>
   11108:	mov	r0, #0
   1110c:	bl	108b8 <dcgettext@plt>
   11110:	ldr	r1, [r4]
   11114:	bl	109cc <fputs@plt>
   11118:	mov	r2, #5
   1111c:	ldr	r1, [pc, #800]	; 11444 <abort@plt+0xa6c>
   11120:	mov	r0, #0
   11124:	bl	108b8 <dcgettext@plt>
   11128:	ldr	r1, [r4]
   1112c:	bl	109cc <fputs@plt>
   11130:	mov	r2, #5
   11134:	ldr	r1, [pc, #780]	; 11448 <abort@plt+0xa70>
   11138:	mov	r0, #0
   1113c:	bl	108b8 <dcgettext@plt>
   11140:	ldr	r1, [r4]
   11144:	bl	109cc <fputs@plt>
   11148:	mov	r2, #5
   1114c:	ldr	r1, [pc, #760]	; 1144c <abort@plt+0xa74>
   11150:	mov	r0, #0
   11154:	bl	108b8 <dcgettext@plt>
   11158:	ldr	r1, [r4]
   1115c:	bl	109cc <fputs@plt>
   11160:	mov	r2, #5
   11164:	ldr	r1, [pc, #740]	; 11450 <abort@plt+0xa78>
   11168:	mov	r0, #0
   1116c:	bl	108b8 <dcgettext@plt>
   11170:	ldr	r1, [r4]
   11174:	bl	109cc <fputs@plt>
   11178:	mov	r2, #5
   1117c:	ldr	r1, [pc, #720]	; 11454 <abort@plt+0xa7c>
   11180:	mov	r0, #0
   11184:	bl	108b8 <dcgettext@plt>
   11188:	ldr	r1, [r4]
   1118c:	bl	109cc <fputs@plt>
   11190:	mov	r2, #5
   11194:	ldr	r1, [pc, #700]	; 11458 <abort@plt+0xa80>
   11198:	mov	r0, #0
   1119c:	bl	108b8 <dcgettext@plt>
   111a0:	ldr	r1, [r4]
   111a4:	bl	109cc <fputs@plt>
   111a8:	mov	r2, #5
   111ac:	ldr	r1, [pc, #680]	; 1145c <abort@plt+0xa84>
   111b0:	mov	r0, #0
   111b4:	bl	108b8 <dcgettext@plt>
   111b8:	ldr	r1, [r4]
   111bc:	bl	109cc <fputs@plt>
   111c0:	mov	r2, #5
   111c4:	ldr	r1, [pc, #660]	; 11460 <abort@plt+0xa88>
   111c8:	mov	r0, #0
   111cc:	bl	108b8 <dcgettext@plt>
   111d0:	ldr	r1, [r4]
   111d4:	bl	109cc <fputs@plt>
   111d8:	ldr	r3, [sp, #12]
   111dc:	cmp	r3, #0
   111e0:	beq	11334 <abort@plt+0x95c>
   111e4:	ldr	r1, [r4]
   111e8:	mov	r0, #10
   111ec:	bl	109b4 <fputc@plt>
   111f0:	mov	r2, #5
   111f4:	ldr	r1, [pc, #616]	; 11464 <abort@plt+0xa8c>
   111f8:	mov	r0, #0
   111fc:	bl	108b8 <dcgettext@plt>
   11200:	mov	r2, #5
   11204:	ldr	r1, [pc, #604]	; 11468 <abort@plt+0xa90>
   11208:	mov	r4, r0
   1120c:	mov	r0, #0
   11210:	bl	108b8 <dcgettext@plt>
   11214:	ldr	r2, [pc, #592]	; 1146c <abort@plt+0xa94>
   11218:	mov	r3, r4
   1121c:	str	r2, [sp]
   11220:	ldr	r1, [pc, #584]	; 11470 <abort@plt+0xa98>
   11224:	ldr	r2, [pc, #584]	; 11474 <abort@plt+0xa9c>
   11228:	str	r0, [sp, #4]
   1122c:	mov	r0, #1
   11230:	bl	10960 <__printf_chk@plt>
   11234:	mov	r2, #5
   11238:	ldr	r1, [pc, #568]	; 11478 <abort@plt+0xaa0>
   1123c:	mov	r0, #0
   11240:	bl	108b8 <dcgettext@plt>
   11244:	ldr	r2, [pc, #560]	; 1147c <abort@plt+0xaa4>
   11248:	mov	r1, r0
   1124c:	mov	r0, #1
   11250:	bl	10960 <__printf_chk@plt>
   11254:	mov	r0, #0
   11258:	bl	10924 <exit@plt>
   1125c:	mov	r2, #5
   11260:	ldr	r1, [pc, #536]	; 11480 <abort@plt+0xaa8>
   11264:	mov	r0, #0
   11268:	bl	108b8 <dcgettext@plt>
   1126c:	bl	1093c <warnx@plt>
   11270:	ldr	r3, [pc, #524]	; 11484 <abort@plt+0xaac>
   11274:	ldr	r1, [pc, #524]	; 11488 <abort@plt+0xab0>
   11278:	mov	r2, #5
   1127c:	mov	r0, #0
   11280:	ldr	r4, [r3]
   11284:	bl	108b8 <dcgettext@plt>
   11288:	ldr	r3, [pc, #292]	; 113b4 <abort@plt+0x9dc>
   1128c:	mov	r1, #1
   11290:	ldr	r3, [r3]
   11294:	mov	r2, r0
   11298:	mov	r0, r4
   1129c:	bl	1096c <__fprintf_chk@plt>
   112a0:	mov	r0, #1
   112a4:	bl	10924 <exit@plt>
   112a8:	mov	r2, #5
   112ac:	ldr	r1, [pc, #472]	; 1148c <abort@plt+0xab4>
   112b0:	mov	r0, r6
   112b4:	bl	108b8 <dcgettext@plt>
   112b8:	ldr	sl, [pc, #332]	; 1140c <abort@plt+0xa34>
   112bc:	ldr	r4, [pc, #324]	; 11408 <abort@plt+0xa30>
   112c0:	mov	r2, sl
   112c4:	mov	r1, r0
   112c8:	mov	r0, #1
   112cc:	bl	10960 <__printf_chk@plt>
   112d0:	mov	r0, #0
   112d4:	bl	1087c <fflush@plt>
   112d8:	b	10f08 <abort@plt+0x530>
   112dc:	mov	r2, #5
   112e0:	ldr	r1, [pc, #420]	; 1148c <abort@plt+0xab4>
   112e4:	mov	r0, #0
   112e8:	bl	108b8 <dcgettext@plt>
   112ec:	cmp	sl, #0
   112f0:	movne	r2, sl
   112f4:	ldreq	r2, [r7]
   112f8:	mov	r1, r0
   112fc:	b	112c8 <abort@plt+0x8f0>
   11300:	mov	r2, #5
   11304:	ldr	r1, [pc, #388]	; 11490 <abort@plt+0xab8>
   11308:	mov	r0, #0
   1130c:	bl	108b8 <dcgettext@plt>
   11310:	mov	r2, fp
   11314:	mov	r1, r0
   11318:	mov	r0, #1
   1131c:	bl	10990 <errx@plt>
   11320:	mov	r0, r5
   11324:	bl	10930 <personality@plt>
   11328:	cmp	r0, #0
   1132c:	bge	10f9c <abort@plt+0x5c4>
   11330:	b	10ff8 <abort@plt+0x620>
   11334:	mov	r0, r3
   11338:	mov	r2, #5
   1133c:	ldr	r1, [pc, #336]	; 11494 <abort@plt+0xabc>
   11340:	bl	108b8 <dcgettext@plt>
   11344:	ldr	r1, [r4]
   11348:	bl	109cc <fputs@plt>
   1134c:	b	111e4 <abort@plt+0x80c>
   11350:	mov	r2, #5
   11354:	ldr	r1, [pc, #316]	; 11498 <abort@plt+0xac0>
   11358:	mov	r0, #0
   1135c:	bl	108b8 <dcgettext@plt>
   11360:	bl	1093c <warnx@plt>
   11364:	ldr	r3, [pc, #280]	; 11484 <abort@plt+0xaac>
   11368:	ldr	r1, [pc, #280]	; 11488 <abort@plt+0xab0>
   1136c:	mov	r2, #5
   11370:	mov	r0, #0
   11374:	ldr	r4, [r3]
   11378:	bl	108b8 <dcgettext@plt>
   1137c:	ldr	r3, [pc, #48]	; 113b4 <abort@plt+0x9dc>
   11380:	mov	r1, #1
   11384:	ldr	r3, [r3]
   11388:	b	11294 <abort@plt+0x8bc>
   1138c:	ldr	r1, [pc, #264]	; 1149c <abort@plt+0xac4>
   11390:	mov	r2, #5
   11394:	bl	108b8 <dcgettext@plt>
   11398:	mov	r1, r0
   1139c:	mov	r0, #1
   113a0:	bl	10990 <errx@plt>
   113a4:	andeq	r1, r1, r8, ror #28
   113a8:	andeq	r1, r1, ip, lsl #21
   113ac:	andeq	r1, r1, r0, lsr #21
   113b0:	andeq	r1, r1, r8, asr #14
   113b4:	andeq	r3, r2, r8, asr #32
   113b8:	andeq	r1, r1, ip, ror #21
   113bc:	strdeq	r1, [r1], -r4
   113c0:	andeq	r1, r1, r8, lsl #18
   113c4:	andeq	r2, r1, r4, lsr #1
   113c8:			; <UNDEFINED> instruction: 0x00011fbc
   113cc:	andeq	r2, r1, ip, ror r0
   113d0:	strdeq	r1, [r1], -r4
   113d4:	andeq	r2, r1, r8, lsl r0
   113d8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   113dc:	andeq	r1, r1, r8, lsr #31
   113e0:	andeq	r2, r1, ip, asr r0
   113e4:	andeq	r2, r1, ip, asr #32
   113e8:	ldrdeq	r1, [r1], -r0
   113ec:	andeq	r2, r1, r4
   113f0:	andeq	r2, r1, r0, asr #32
   113f4:	andeq	r1, r1, r4, ror #31
   113f8:	andeq	r2, r1, ip, lsr #32
   113fc:	andeq	r2, r1, ip, rrx
   11400:	andeq	r1, r1, r4, ror sl
   11404:	andeq	r2, r1, r4, lsr #2
   11408:	andeq	r1, r1, r0, lsl #21
   1140c:	andeq	r1, r1, r4, lsl #21
   11410:	andeq	r3, r2, r0, asr r0
   11414:	andeq	r2, r1, ip, ror #1
   11418:	andeq	r3, r2, ip, asr r0
   1141c:	andeq	r1, r1, r0, lsl #22
   11420:	andeq	r1, r1, ip, lsl #22
   11424:	andeq	r1, r1, r0, asr #22
   11428:	andeq	r1, r1, ip, ror #22
   1142c:	andeq	r1, r1, ip, lsr #23
   11430:			; <UNDEFINED> instruction: 0x00011bb8
   11434:	strdeq	r1, [r1], -r0
   11438:	andeq	r1, r1, r8, lsr ip
   1143c:	andeq	r1, r1, r8, ror #24
   11440:			; <UNDEFINED> instruction: 0x00011cb0
   11444:	andeq	r1, r1, r0, lsl #26
   11448:	andeq	r1, r1, r4, lsr sp
   1144c:	andeq	r1, r1, r8, ror #26
   11450:	andeq	r1, r1, r0, lsr #27
   11454:	ldrdeq	r1, [r1], -r4
   11458:	andeq	r1, r1, r4, lsr #28
   1145c:	andeq	r1, r1, ip, ror #28
   11460:	muleq	r1, r8, lr
   11464:	andeq	r1, r1, r0, lsr #30
   11468:	andeq	r1, r1, r4, lsr pc
   1146c:	andeq	r1, r1, r4, ror #30
   11470:	andeq	r1, r1, r0, asr pc
   11474:	andeq	r1, r1, r4, asr #30
   11478:	andeq	r1, r1, r4, ror pc
   1147c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   11480:	andeq	r2, r1, r4, lsl #1
   11484:	andeq	r3, r2, r8, asr r0
   11488:	andeq	r1, r1, r4, asr #21
   1148c:	andeq	r2, r1, ip, lsl #2
   11490:	andeq	r2, r1, ip, lsr r1
   11494:	ldrdeq	r1, [r1], -ip
   11498:	andeq	r1, r1, ip, lsr #21
   1149c:	strheq	r2, [r1], -r4
   114a0:	mov	fp, #0
   114a4:	mov	lr, #0
   114a8:	pop	{r1}		; (ldr r1, [sp], #4)
   114ac:	mov	r2, sp
   114b0:	push	{r2}		; (str r2, [sp, #-4]!)
   114b4:	push	{r0}		; (str r0, [sp, #-4]!)
   114b8:	ldr	ip, [pc, #16]	; 114d0 <abort@plt+0xaf8>
   114bc:	push	{ip}		; (str ip, [sp, #-4]!)
   114c0:	ldr	r0, [pc, #12]	; 114d4 <abort@plt+0xafc>
   114c4:	ldr	r3, [pc, #12]	; 114d8 <abort@plt+0xb00>
   114c8:	bl	10900 <__libc_start_main@plt>
   114cc:	bl	109d8 <abort@plt>
   114d0:	andeq	r1, r1, r0, ror #17
   114d4:	andeq	r0, r1, r4, ror #19
   114d8:	andeq	r1, r1, r0, lsl #17
   114dc:	ldr	r3, [pc, #20]	; 114f8 <abort@plt+0xb20>
   114e0:	ldr	r2, [pc, #20]	; 114fc <abort@plt+0xb24>
   114e4:	add	r3, pc, r3
   114e8:	ldr	r2, [r3, r2]
   114ec:	cmp	r2, #0
   114f0:	bxeq	lr
   114f4:	b	1090c <__gmon_start__@plt>
   114f8:	andeq	r1, r1, r8, lsl #21
   114fc:	andeq	r0, r0, r8, lsl #1
   11500:	ldr	r0, [pc, #24]	; 11520 <abort@plt+0xb48>
   11504:	ldr	r3, [pc, #24]	; 11524 <abort@plt+0xb4c>
   11508:	cmp	r3, r0
   1150c:	bxeq	lr
   11510:	ldr	r3, [pc, #16]	; 11528 <abort@plt+0xb50>
   11514:	cmp	r3, #0
   11518:	bxeq	lr
   1151c:	bx	r3
   11520:	andeq	r3, r2, r4, asr #32
   11524:	andeq	r3, r2, r4, asr #32
   11528:	andeq	r0, r0, r0
   1152c:	ldr	r0, [pc, #36]	; 11558 <abort@plt+0xb80>
   11530:	ldr	r1, [pc, #36]	; 1155c <abort@plt+0xb84>
   11534:	sub	r1, r1, r0
   11538:	asr	r1, r1, #2
   1153c:	add	r1, r1, r1, lsr #31
   11540:	asrs	r1, r1, #1
   11544:	bxeq	lr
   11548:	ldr	r3, [pc, #16]	; 11560 <abort@plt+0xb88>
   1154c:	cmp	r3, #0
   11550:	bxeq	lr
   11554:	bx	r3
   11558:	andeq	r3, r2, r4, asr #32
   1155c:	andeq	r3, r2, r4, asr #32
   11560:	andeq	r0, r0, r0
   11564:	push	{r4, lr}
   11568:	ldr	r4, [pc, #24]	; 11588 <abort@plt+0xbb0>
   1156c:	ldrb	r3, [r4]
   11570:	cmp	r3, #0
   11574:	popne	{r4, pc}
   11578:	bl	11500 <abort@plt+0xb28>
   1157c:	mov	r3, #1
   11580:	strb	r3, [r4]
   11584:	pop	{r4, pc}
   11588:	andeq	r3, r2, r0, rrx
   1158c:	b	1152c <abort@plt+0xb54>
   11590:	push	{r4, r5, r6, r7, r8, lr}
   11594:	sub	sp, sp, #400	; 0x190
   11598:	ldr	r8, [pc, #152]	; 11638 <abort@plt+0xc60>
   1159c:	ldr	r7, [pc, #152]	; 1163c <abort@plt+0xc64>
   115a0:	add	r0, sp, #4
   115a4:	ldr	r3, [r8]
   115a8:	str	r3, [sp, #396]	; 0x18c
   115ac:	bl	108ac <uname@plt>
   115b0:	ldr	r3, [r7]
   115b4:	cmp	r3, #0
   115b8:	blt	1160c <abort@plt+0xc34>
   115bc:	mov	r4, r7
   115c0:	mov	r5, #0
   115c4:	add	r6, sp, #264	; 0x108
   115c8:	b	115dc <abort@plt+0xc04>
   115cc:	ldr	r3, [r4, #12]!
   115d0:	add	r5, r5, #1
   115d4:	cmp	r3, #0
   115d8:	blt	11614 <abort@plt+0xc3c>
   115dc:	ldr	r1, [r4, #4]
   115e0:	mov	r0, r6
   115e4:	bl	10870 <strcmp@plt>
   115e8:	cmp	r0, #0
   115ec:	bne	115cc <abort@plt+0xbf4>
   115f0:	ldr	r2, [sp, #396]	; 0x18c
   115f4:	ldr	r3, [r8]
   115f8:	ldr	r0, [pc, #60]	; 1163c <abort@plt+0xc64>
   115fc:	cmp	r2, r3
   11600:	bne	11634 <abort@plt+0xc5c>
   11604:	add	sp, sp, #400	; 0x190
   11608:	pop	{r4, r5, r6, r7, r8, pc}
   1160c:	mov	r5, #0
   11610:	add	r6, sp, #264	; 0x108
   11614:	mov	r3, #12
   11618:	mov	r2, #8
   1161c:	mul	r5, r3, r5
   11620:	add	r3, r7, r5
   11624:	str	r2, [r7, r5]
   11628:	str	r6, [r3, #4]
   1162c:	str	r6, [r3, #8]
   11630:	b	115f0 <abort@plt+0xc18>
   11634:	bl	108c4 <__stack_chk_fail@plt>
   11638:	andeq	r2, r2, r0, ror lr
   1163c:	andeq	r3, r2, r8
   11640:	push	{r4, r5, r6, lr}
   11644:	sub	sp, sp, #400	; 0x190
   11648:	ldr	r4, [pc, #220]	; 1172c <abort@plt+0xd54>
   1164c:	subs	r5, r0, #0
   11650:	ldr	r3, [r4]
   11654:	str	r3, [sp, #396]	; 0x18c
   11658:	beq	11710 <abort@plt+0xd38>
   1165c:	ldr	r3, [r5, #8]
   11660:	cmp	r3, #0
   11664:	beq	11710 <abort@plt+0xd38>
   11668:	add	r0, sp, #4
   1166c:	mov	r6, r1
   11670:	bl	108ac <uname@plt>
   11674:	ldr	r5, [r5, #8]
   11678:	add	r0, sp, #264	; 0x108
   1167c:	mov	r1, r5
   11680:	bl	10870 <strcmp@plt>
   11684:	cmp	r0, #0
   11688:	beq	11710 <abort@plt+0xd38>
   1168c:	mov	r0, r5
   11690:	ldr	r1, [pc, #152]	; 11730 <abort@plt+0xd58>
   11694:	bl	10870 <strcmp@plt>
   11698:	cmp	r0, #0
   1169c:	bne	116f0 <abort@plt+0xd18>
   116a0:	ldr	r1, [pc, #140]	; 11734 <abort@plt+0xd5c>
   116a4:	add	r0, sp, #264	; 0x108
   116a8:	bl	10870 <strcmp@plt>
   116ac:	cmp	r0, #0
   116b0:	beq	11710 <abort@plt+0xd38>
   116b4:	ldr	r1, [pc, #124]	; 11738 <abort@plt+0xd60>
   116b8:	add	r0, sp, #264	; 0x108
   116bc:	bl	10870 <strcmp@plt>
   116c0:	cmp	r0, #0
   116c4:	beq	11710 <abort@plt+0xd38>
   116c8:	ldr	r1, [pc, #108]	; 1173c <abort@plt+0xd64>
   116cc:	add	r0, sp, #264	; 0x108
   116d0:	bl	10870 <strcmp@plt>
   116d4:	cmp	r0, #0
   116d8:	beq	11710 <abort@plt+0xd38>
   116dc:	add	r0, sp, #264	; 0x108
   116e0:	ldr	r1, [pc, #88]	; 11740 <abort@plt+0xd68>
   116e4:	bl	10870 <strcmp@plt>
   116e8:	cmp	r0, #0
   116ec:	beq	11710 <abort@plt+0xd38>
   116f0:	mov	r2, #5
   116f4:	ldr	r1, [pc, #72]	; 11744 <abort@plt+0xd6c>
   116f8:	mov	r0, #0
   116fc:	bl	108b8 <dcgettext@plt>
   11700:	mov	r2, r6
   11704:	mov	r1, r0
   11708:	mov	r0, #1
   1170c:	bl	10990 <errx@plt>
   11710:	ldr	r2, [sp, #396]	; 0x18c
   11714:	ldr	r3, [r4]
   11718:	cmp	r2, r3
   1171c:	bne	11728 <abort@plt+0xd50>
   11720:	add	sp, sp, #400	; 0x190
   11724:	pop	{r4, r5, r6, pc}
   11728:	bl	108c4 <__stack_chk_fail@plt>
   1172c:	andeq	r2, r2, r0, ror lr
   11730:	andeq	r1, r1, r8, lsl sl
   11734:	andeq	r1, r1, r0, lsr #20
   11738:	andeq	r1, r1, r8, lsr #20
   1173c:	andeq	r1, r1, r0, lsr sl
   11740:	andeq	r1, r1, r8, lsr sl
   11744:	andeq	r1, r1, r0, asr #20
   11748:	ldr	r3, [pc, #292]	; 11874 <abort@plt+0xe9c>
   1174c:	push	{r4, r5, r6, lr}
   11750:	ldr	r4, [r3]
   11754:	mov	r0, r4
   11758:	bl	108e8 <__fpending@plt>
   1175c:	mov	r6, r0
   11760:	mov	r0, r4
   11764:	bl	10888 <ferror@plt>
   11768:	mov	r5, r0
   1176c:	mov	r0, r4
   11770:	bl	10978 <fclose@plt>
   11774:	cmp	r5, #0
   11778:	mov	r4, r0
   1177c:	bne	11824 <abort@plt+0xe4c>
   11780:	cmp	r0, #0
   11784:	beq	117a0 <abort@plt+0xdc8>
   11788:	bl	10948 <__errno_location@plt>
   1178c:	cmp	r6, #0
   11790:	ldr	r3, [r0]
   11794:	bne	117fc <abort@plt+0xe24>
   11798:	cmp	r3, #9
   1179c:	bne	117fc <abort@plt+0xe24>
   117a0:	ldr	r3, [pc, #208]	; 11878 <abort@plt+0xea0>
   117a4:	ldr	r4, [r3]
   117a8:	mov	r0, r4
   117ac:	bl	108e8 <__fpending@plt>
   117b0:	mov	r6, r0
   117b4:	mov	r0, r4
   117b8:	bl	10888 <ferror@plt>
   117bc:	mov	r5, r0
   117c0:	mov	r0, r4
   117c4:	bl	10978 <fclose@plt>
   117c8:	cmp	r5, #0
   117cc:	mov	r4, r0
   117d0:	bne	11858 <abort@plt+0xe80>
   117d4:	cmp	r0, #0
   117d8:	popeq	{r4, r5, r6, pc}
   117dc:	cmp	r6, #0
   117e0:	bne	117f4 <abort@plt+0xe1c>
   117e4:	bl	10948 <__errno_location@plt>
   117e8:	ldr	r3, [r0]
   117ec:	cmp	r3, #9
   117f0:	popeq	{r4, r5, r6, pc}
   117f4:	mov	r0, #1
   117f8:	bl	10894 <_exit@plt>
   117fc:	cmp	r3, #32
   11800:	beq	117a0 <abort@plt+0xdc8>
   11804:	cmp	r3, #0
   11808:	beq	11840 <abort@plt+0xe68>
   1180c:	mov	r2, #5
   11810:	ldr	r1, [pc, #100]	; 1187c <abort@plt+0xea4>
   11814:	mov	r0, #0
   11818:	bl	108b8 <dcgettext@plt>
   1181c:	bl	109a8 <warn@plt>
   11820:	b	117f4 <abort@plt+0xe1c>
   11824:	bl	10948 <__errno_location@plt>
   11828:	cmp	r4, #0
   1182c:	ldr	r3, [r0]
   11830:	bne	117fc <abort@plt+0xe24>
   11834:	cmp	r3, #32
   11838:	strne	r4, [r0]
   1183c:	beq	117a0 <abort@plt+0xdc8>
   11840:	mov	r2, #5
   11844:	ldr	r1, [pc, #48]	; 1187c <abort@plt+0xea4>
   11848:	mov	r0, #0
   1184c:	bl	108b8 <dcgettext@plt>
   11850:	bl	1093c <warnx@plt>
   11854:	b	117f4 <abort@plt+0xe1c>
   11858:	cmp	r0, #0
   1185c:	bne	117f4 <abort@plt+0xe1c>
   11860:	bl	10948 <__errno_location@plt>
   11864:	ldr	r3, [r0]
   11868:	cmp	r3, #32
   1186c:	strne	r4, [r0]
   11870:	b	117f4 <abort@plt+0xe1c>
   11874:	andeq	r3, r2, ip, asr r0
   11878:	andeq	r3, r2, r8, asr r0
   1187c:	andeq	r1, r1, r8, ror #20
   11880:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11884:	mov	r7, r0
   11888:	ldr	r6, [pc, #72]	; 118d8 <abort@plt+0xf00>
   1188c:	ldr	r5, [pc, #72]	; 118dc <abort@plt+0xf04>
   11890:	add	r6, pc, r6
   11894:	add	r5, pc, r5
   11898:	sub	r6, r6, r5
   1189c:	mov	r8, r1
   118a0:	mov	r9, r2
   118a4:	bl	10850 <strcmp@plt-0x20>
   118a8:	asrs	r6, r6, #2
   118ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   118b0:	mov	r4, #0
   118b4:	add	r4, r4, #1
   118b8:	ldr	r3, [r5], #4
   118bc:	mov	r2, r9
   118c0:	mov	r1, r8
   118c4:	mov	r0, r7
   118c8:	blx	r3
   118cc:	cmp	r6, r4
   118d0:	bne	118b4 <abort@plt+0xedc>
   118d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   118d8:	ldrdeq	r1, [r1], -r4
   118dc:	andeq	r1, r1, ip, asr #11
   118e0:	bx	lr
   118e4:	ldr	r3, [pc, #12]	; 118f8 <abort@plt+0xf20>
   118e8:	mov	r1, #0
   118ec:	add	r3, pc, r3
   118f0:	ldr	r2, [r3]
   118f4:	b	10954 <__cxa_atexit@plt>
   118f8:	andeq	r1, r1, r0, lsl r7

Disassembly of section .fini:

000118fc <.fini>:
   118fc:	push	{r3, lr}
   11900:	pop	{r3, pc}
