
raspbian-preinstalled/cat:     file format elf32-littlearm


Disassembly of section .init:

00010c8c <.init>:
   10c8c:	push	{r3, lr}
   10c90:	bl	11a8c <close@plt+0xb70>
   10c94:	pop	{r3, pc}

Disassembly of section .plt:

00010c98 <calloc@plt-0x14>:
   10c98:	push	{lr}		; (str lr, [sp, #-4]!)
   10c9c:	ldr	lr, [pc, #4]	; 10ca8 <calloc@plt-0x4>
   10ca0:	add	lr, pc, lr
   10ca4:	ldr	pc, [lr, #8]!
   10ca8:	andeq	r5, r1, r8, asr r3

00010cac <calloc@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #86016	; 0x15000
   10cb4:	ldr	pc, [ip, #856]!	; 0x358

00010cb8 <fputs_unlocked@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #86016	; 0x15000
   10cc0:	ldr	pc, [ip, #848]!	; 0x350

00010cc4 <raise@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #86016	; 0x15000
   10ccc:	ldr	pc, [ip, #840]!	; 0x348

00010cd0 <strcmp@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #86016	; 0x15000
   10cd8:	ldr	pc, [ip, #832]!	; 0x340

00010cdc <posix_fadvise64@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #86016	; 0x15000
   10ce4:	ldr	pc, [ip, #824]!	; 0x338

00010ce8 <read@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #86016	; 0x15000
   10cf0:	ldr	pc, [ip, #816]!	; 0x330

00010cf4 <fflush@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #86016	; 0x15000
   10cfc:	ldr	pc, [ip, #808]!	; 0x328

00010d00 <memmove@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #86016	; 0x15000
   10d08:	ldr	pc, [ip, #800]!	; 0x320

00010d0c <free@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #86016	; 0x15000
   10d14:	ldr	pc, [ip, #792]!	; 0x318

00010d18 <_exit@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #86016	; 0x15000
   10d20:	ldr	pc, [ip, #784]!	; 0x310

00010d24 <memcpy@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #86016	; 0x15000
   10d2c:	ldr	pc, [ip, #776]!	; 0x308

00010d30 <mbsinit@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #86016	; 0x15000
   10d38:	ldr	pc, [ip, #768]!	; 0x300

00010d3c <memcmp@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #86016	; 0x15000
   10d44:	ldr	pc, [ip, #760]!	; 0x2f8

00010d48 <stpcpy@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #86016	; 0x15000
   10d50:	ldr	pc, [ip, #752]!	; 0x2f0

00010d54 <dcgettext@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #86016	; 0x15000
   10d5c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d60 <__stack_chk_fail@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #86016	; 0x15000
   10d68:	ldr	pc, [ip, #736]!	; 0x2e0

00010d6c <realloc@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #86016	; 0x15000
   10d74:	ldr	pc, [ip, #728]!	; 0x2d8

00010d78 <textdomain@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #86016	; 0x15000
   10d80:	ldr	pc, [ip, #720]!	; 0x2d0

00010d84 <iswprint@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #86016	; 0x15000
   10d8c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d90 <__fxstat64@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #86016	; 0x15000
   10d98:	ldr	pc, [ip, #704]!	; 0x2c0

00010d9c <fwrite@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #86016	; 0x15000
   10da4:	ldr	pc, [ip, #696]!	; 0x2b8

00010da8 <ioctl@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #86016	; 0x15000
   10db0:	ldr	pc, [ip, #688]!	; 0x2b0

00010db4 <lseek64@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #86016	; 0x15000
   10dbc:	ldr	pc, [ip, #680]!	; 0x2a8

00010dc0 <__ctype_get_mb_cur_max@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #86016	; 0x15000
   10dc8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dcc <__fpending@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #86016	; 0x15000
   10dd4:	ldr	pc, [ip, #664]!	; 0x298

00010dd8 <mbrtowc@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #86016	; 0x15000
   10de0:	ldr	pc, [ip, #656]!	; 0x290

00010de4 <error@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #86016	; 0x15000
   10dec:	ldr	pc, [ip, #648]!	; 0x288

00010df0 <open64@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #86016	; 0x15000
   10df8:	ldr	pc, [ip, #640]!	; 0x280

00010dfc <malloc@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #86016	; 0x15000
   10e04:	ldr	pc, [ip, #632]!	; 0x278

00010e08 <__libc_start_main@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #86016	; 0x15000
   10e10:	ldr	pc, [ip, #624]!	; 0x270

00010e14 <__freading@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #86016	; 0x15000
   10e1c:	ldr	pc, [ip, #616]!	; 0x268

00010e20 <__gmon_start__@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #86016	; 0x15000
   10e28:	ldr	pc, [ip, #608]!	; 0x260

00010e2c <getopt_long@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #86016	; 0x15000
   10e34:	ldr	pc, [ip, #600]!	; 0x258

00010e38 <__ctype_b_loc@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #86016	; 0x15000
   10e40:	ldr	pc, [ip, #592]!	; 0x250

00010e44 <exit@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #86016	; 0x15000
   10e4c:	ldr	pc, [ip, #584]!	; 0x248

00010e50 <strlen@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #86016	; 0x15000
   10e58:	ldr	pc, [ip, #576]!	; 0x240

00010e5c <getpagesize@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #86016	; 0x15000
   10e64:	ldr	pc, [ip, #568]!	; 0x238

00010e68 <__errno_location@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #86016	; 0x15000
   10e70:	ldr	pc, [ip, #560]!	; 0x230

00010e74 <__cxa_atexit@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #86016	; 0x15000
   10e7c:	ldr	pc, [ip, #552]!	; 0x228

00010e80 <memset@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #86016	; 0x15000
   10e88:	ldr	pc, [ip, #544]!	; 0x220

00010e8c <__printf_chk@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #86016	; 0x15000
   10e94:	ldr	pc, [ip, #536]!	; 0x218

00010e98 <write@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #86016	; 0x15000
   10ea0:	ldr	pc, [ip, #528]!	; 0x210

00010ea4 <fileno@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #86016	; 0x15000
   10eac:	ldr	pc, [ip, #520]!	; 0x208

00010eb0 <__fprintf_chk@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #86016	; 0x15000
   10eb8:	ldr	pc, [ip, #512]!	; 0x200

00010ebc <fclose@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #86016	; 0x15000
   10ec4:	ldr	pc, [ip, #504]!	; 0x1f8

00010ec8 <fseeko64@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #86016	; 0x15000
   10ed0:	ldr	pc, [ip, #496]!	; 0x1f0

00010ed4 <setlocale@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #86016	; 0x15000
   10edc:	ldr	pc, [ip, #488]!	; 0x1e8

00010ee0 <strrchr@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #86016	; 0x15000
   10ee8:	ldr	pc, [ip, #480]!	; 0x1e0

00010eec <nl_langinfo@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #86016	; 0x15000
   10ef4:	ldr	pc, [ip, #472]!	; 0x1d8

00010ef8 <bindtextdomain@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #86016	; 0x15000
   10f00:	ldr	pc, [ip, #464]!	; 0x1d0

00010f04 <strncmp@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #86016	; 0x15000
   10f0c:	ldr	pc, [ip, #456]!	; 0x1c8

00010f10 <abort@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #86016	; 0x15000
   10f18:	ldr	pc, [ip, #448]!	; 0x1c0

00010f1c <close@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #86016	; 0x15000
   10f24:	ldr	pc, [ip, #440]!	; 0x1b8

Disassembly of section .text:

00010f28 <.text>:
   10f28:	ldr	r3, [pc, #2748]	; 119ec <close@plt+0xad0>
   10f2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f30:	sub	sp, sp, #244	; 0xf4
   10f34:	ldr	r3, [r3]
   10f38:	str	r0, [sp, #36]	; 0x24
   10f3c:	ldr	r0, [r1]
   10f40:	str	r3, [sp, #236]	; 0xec
   10f44:	str	r1, [sp, #48]	; 0x30
   10f48:	bl	120ec <close@plt+0x11d0>
   10f4c:	ldr	r1, [pc, #2716]	; 119f0 <close@plt+0xad4>
   10f50:	mov	r0, #6
   10f54:	mov	r7, #0
   10f58:	bl	10ed4 <setlocale@plt>
   10f5c:	ldr	r6, [pc, #2704]	; 119f4 <close@plt+0xad8>
   10f60:	ldr	r1, [pc, #2704]	; 119f8 <close@plt+0xadc>
   10f64:	ldr	r0, [pc, #2704]	; 119fc <close@plt+0xae0>
   10f68:	ldr	r5, [pc, #2704]	; 11a00 <close@plt+0xae4>
   10f6c:	bl	10ef8 <bindtextdomain@plt>
   10f70:	mov	r4, r7
   10f74:	ldr	r0, [pc, #2688]	; 119fc <close@plt+0xae0>
   10f78:	bl	10d78 <textdomain@plt>
   10f7c:	ldr	r0, [pc, #2688]	; 11a04 <close@plt+0xae8>
   10f80:	bl	151ac <close@plt+0x4290>
   10f84:	str	r7, [sp, #16]
   10f88:	str	r7, [sp, #20]
   10f8c:	str	r7, [sp, #52]	; 0x34
   10f90:	str	r7, [sp, #76]	; 0x4c
   10f94:	str	r7, [sp, #24]
   10f98:	str	r4, [sp]
   10f9c:	mov	r3, r6
   10fa0:	mov	r2, r5
   10fa4:	ldr	r1, [sp, #48]	; 0x30
   10fa8:	ldr	r0, [sp, #36]	; 0x24
   10fac:	bl	10e2c <getopt_long@plt>
   10fb0:	cmn	r0, #1
   10fb4:	beq	110d4 <close@plt+0x1b8>
   10fb8:	cmp	r0, #98	; 0x62
   10fbc:	beq	110c4 <close@plt+0x1a8>
   10fc0:	ble	10fe8 <close@plt+0xcc>
   10fc4:	cmp	r0, #115	; 0x73
   10fc8:	beq	110b8 <close@plt+0x19c>
   10fcc:	ble	1101c <close@plt+0x100>
   10fd0:	cmp	r0, #117	; 0x75
   10fd4:	beq	10f98 <close@plt+0x7c>
   10fd8:	bge	11008 <close@plt+0xec>
   10fdc:	mov	r7, #1
   10fe0:	str	r7, [sp, #16]
   10fe4:	b	10f98 <close@plt+0x7c>
   10fe8:	cmp	r0, #65	; 0x41
   10fec:	beq	110a8 <close@plt+0x18c>
   10ff0:	ble	11044 <close@plt+0x128>
   10ff4:	cmp	r0, #69	; 0x45
   10ff8:	bne	11034 <close@plt+0x118>
   10ffc:	mov	r3, #1
   11000:	str	r3, [sp, #20]
   11004:	b	10f98 <close@plt+0x7c>
   11008:	cmp	r0, #118	; 0x76
   1100c:	bne	119d0 <close@plt+0xab4>
   11010:	mov	r3, #1
   11014:	str	r3, [sp, #16]
   11018:	b	10f98 <close@plt+0x7c>
   1101c:	cmp	r0, #101	; 0x65
   11020:	bne	11084 <close@plt+0x168>
   11024:	mov	r3, #1
   11028:	str	r3, [sp, #16]
   1102c:	str	r3, [sp, #20]
   11030:	b	10f98 <close@plt+0x7c>
   11034:	cmp	r0, #84	; 0x54
   11038:	bne	119d0 <close@plt+0xab4>
   1103c:	mov	r7, #1
   11040:	b	10f98 <close@plt+0x7c>
   11044:	cmn	r0, #3
   11048:	bne	11098 <close@plt+0x17c>
   1104c:	ldr	r3, [pc, #2484]	; 11a08 <close@plt+0xaec>
   11050:	ldr	r0, [pc, #2484]	; 11a0c <close@plt+0xaf0>
   11054:	ldr	r1, [pc, #2484]	; 11a10 <close@plt+0xaf4>
   11058:	ldr	r2, [pc, #2484]	; 11a14 <close@plt+0xaf8>
   1105c:	str	r4, [sp, #8]
   11060:	ldr	r0, [r0]
   11064:	ldr	r3, [r3]
   11068:	str	r1, [sp, #4]
   1106c:	str	r2, [sp]
   11070:	ldr	r1, [pc, #2464]	; 11a18 <close@plt+0xafc>
   11074:	ldr	r2, [pc, #2464]	; 11a1c <close@plt+0xb00>
   11078:	bl	1488c <close@plt+0x3970>
   1107c:	mov	r0, #0
   11080:	bl	10e44 <exit@plt>
   11084:	cmp	r0, #110	; 0x6e
   11088:	bne	119d0 <close@plt+0xab4>
   1108c:	mov	r3, #1
   11090:	str	r3, [sp, #24]
   11094:	b	10f98 <close@plt+0x7c>
   11098:	cmn	r0, #2
   1109c:	bne	119d0 <close@plt+0xab4>
   110a0:	mov	r0, #0
   110a4:	bl	11bf0 <close@plt+0xcd4>
   110a8:	mov	r7, #1
   110ac:	str	r7, [sp, #16]
   110b0:	str	r7, [sp, #20]
   110b4:	b	10f98 <close@plt+0x7c>
   110b8:	mov	r3, #1
   110bc:	str	r3, [sp, #52]	; 0x34
   110c0:	b	10f98 <close@plt+0x7c>
   110c4:	mov	r3, #1
   110c8:	str	r3, [sp, #76]	; 0x4c
   110cc:	str	r3, [sp, #24]
   110d0:	b	10f98 <close@plt+0x7c>
   110d4:	add	r2, sp, #128	; 0x80
   110d8:	mov	r1, #1
   110dc:	mov	r0, #3
   110e0:	bl	10d90 <__fxstat64@plt>
   110e4:	cmp	r0, #0
   110e8:	blt	119dc <close@plt+0xac0>
   110ec:	ldr	sl, [sp, #184]	; 0xb8
   110f0:	ldr	r3, [pc, #2344]	; 11a20 <close@plt+0xb04>
   110f4:	sub	r2, sl, #131072	; 0x20000
   110f8:	cmp	r2, r3
   110fc:	movhi	sl, #131072	; 0x20000
   11100:	bl	10e5c <getpagesize@plt>
   11104:	ldr	r1, [pc, #2328]	; 11a24 <close@plt+0xb08>
   11108:	ldr	r2, [sp, #144]	; 0x90
   1110c:	ldr	r3, [pc, #2324]	; 11a28 <close@plt+0xb0c>
   11110:	ldr	r1, [r1]
   11114:	and	r2, r2, #61440	; 0xf000
   11118:	str	r1, [sp, #68]	; 0x44
   1111c:	str	r2, [sp, #92]	; 0x5c
   11120:	ldr	r2, [sp, #24]
   11124:	str	r7, [sp, #28]
   11128:	str	r0, [sp, #80]	; 0x50
   1112c:	ldrd	r0, [sp, #128]	; 0x80
   11130:	strd	r0, [sp, #104]	; 0x68
   11134:	ldrd	r0, [sp, #224]	; 0xe0
   11138:	strd	r0, [sp, #112]	; 0x70
   1113c:	ldr	r1, [sp, #20]
   11140:	orr	r2, r2, r1
   11144:	str	r2, [sp, #96]	; 0x60
   11148:	mov	r2, #0
   1114c:	str	r2, [sp, #100]	; 0x64
   11150:	mov	r2, #1
   11154:	str	r2, [sp, #72]	; 0x48
   11158:	ldr	r2, [pc, #2252]	; 11a2c <close@plt+0xb10>
   1115c:	str	r3, [r2]
   11160:	ldr	r3, [sp, #68]	; 0x44
   11164:	ldr	r2, [sp, #36]	; 0x24
   11168:	ldr	r1, [pc, #2232]	; 11a28 <close@plt+0xb0c>
   1116c:	cmp	r3, r2
   11170:	ldrlt	r3, [sp, #48]	; 0x30
   11174:	ldrge	r3, [pc, #2224]	; 11a2c <close@plt+0xb10>
   11178:	ldrlt	r2, [sp, #68]	; 0x44
   1117c:	ldrge	r4, [r3]
   11180:	ldrlt	r4, [r3, r2, lsl #2]
   11184:	ldrlt	r3, [pc, #2208]	; 11a2c <close@plt+0xb10>
   11188:	mov	r0, r4
   1118c:	strlt	r4, [r3]
   11190:	bl	10cd0 <strcmp@plt>
   11194:	subs	r6, r0, #0
   11198:	bne	116e8 <close@plt+0x7cc>
   1119c:	ldr	r3, [pc, #2184]	; 11a2c <close@plt+0xb10>
   111a0:	str	r6, [r3, #4]
   111a4:	mov	r3, #1
   111a8:	str	r3, [sp, #100]	; 0x64
   111ac:	add	r2, sp, #128	; 0x80
   111b0:	mov	r1, r6
   111b4:	mov	r0, #3
   111b8:	bl	10d90 <__fxstat64@plt>
   111bc:	cmp	r0, #0
   111c0:	blt	11810 <close@plt+0x8f4>
   111c4:	ldr	lr, [sp, #184]	; 0xb8
   111c8:	ldr	r1, [pc, #2128]	; 11a20 <close@plt+0xb04>
   111cc:	sub	ip, lr, #131072	; 0x20000
   111d0:	mov	r4, #0
   111d4:	mov	r5, #0
   111d8:	cmp	ip, r1
   111dc:	mov	r3, #2
   111e0:	movhi	lr, #131072	; 0x20000
   111e4:	str	r3, [sp, #8]
   111e8:	mov	r0, r6
   111ec:	mov	r3, r5
   111f0:	strd	r4, [sp]
   111f4:	mov	r2, r4
   111f8:	str	lr, [sp, #44]	; 0x2c
   111fc:	bl	12044 <close@plt+0x1128>
   11200:	ldr	r3, [sp, #92]	; 0x5c
   11204:	cmp	r3, #32768	; 0x8000
   11208:	beq	11774 <close@plt+0x858>
   1120c:	ldr	r3, [sp, #96]	; 0x60
   11210:	cmp	r3, #0
   11214:	ldr	r3, [sp, #80]	; 0x50
   11218:	sub	r8, r3, #1
   1121c:	bne	11238 <close@plt+0x31c>
   11220:	ldr	r3, [sp, #16]
   11224:	ldr	r2, [sp, #28]
   11228:	orr	r4, r3, r2
   1122c:	ldr	r3, [sp, #52]	; 0x34
   11230:	orrs	r4, r3, r4
   11234:	beq	11884 <close@plt+0x968>
   11238:	ldr	r4, [sp, #80]	; 0x50
   1123c:	ldr	r5, [sp, #44]	; 0x2c
   11240:	add	r0, r4, r5
   11244:	bl	14990 <close@plt+0x3a74>
   11248:	mov	r3, r0
   1124c:	str	r0, [sp, #84]	; 0x54
   11250:	add	r0, sl, #18
   11254:	add	r0, r0, r4
   11258:	add	r0, r0, r5, lsl #2
   1125c:	add	r9, r3, r8
   11260:	bl	14990 <close@plt+0x3a74>
   11264:	mov	r1, r4
   11268:	mov	r5, r0
   1126c:	str	r0, [sp, #88]	; 0x58
   11270:	mov	r0, r9
   11274:	bl	15118 <close@plt+0x41fc>
   11278:	add	r8, r5, r8
   1127c:	mov	r3, #1
   11280:	mov	r0, r8
   11284:	str	r3, [sp, #40]	; 0x28
   11288:	sub	r9, r9, r1
   1128c:	mov	r1, r4
   11290:	bl	15118 <close@plt+0x41fc>
   11294:	ldr	r3, [sp, #76]	; 0x4c
   11298:	ldr	r2, [sp, #24]
   1129c:	eor	r3, r3, #1
   112a0:	and	r3, r2, r3
   112a4:	str	r3, [sp, #64]	; 0x40
   112a8:	ldr	r3, [pc, #1916]	; 11a2c <close@plt+0xb10>
   112ac:	mov	r7, r9
   112b0:	add	fp, r9, #1
   112b4:	ldr	r6, [r3, #8]
   112b8:	str	fp, [sp, #56]	; 0x38
   112bc:	sub	r8, r8, r1
   112c0:	mov	r4, r8
   112c4:	add	r3, r8, sl
   112c8:	str	r3, [sp, #60]	; 0x3c
   112cc:	ldr	r3, [sp, #60]	; 0x3c
   112d0:	cmp	r4, r3
   112d4:	bcs	11474 <close@plt+0x558>
   112d8:	cmp	fp, r7
   112dc:	bls	114c4 <close@plt+0x5a8>
   112e0:	ldr	r3, [sp, #40]	; 0x28
   112e4:	mov	fp, #0
   112e8:	cmp	r3, #0
   112ec:	str	fp, [sp, #124]	; 0x7c
   112f0:	bne	11560 <close@plt+0x644>
   112f4:	subs	r5, r4, r8
   112f8:	bne	11600 <close@plt+0x6e4>
   112fc:	ldr	r3, [pc, #1832]	; 11a2c <close@plt+0xb10>
   11300:	ldr	r5, [r3, #4]
   11304:	mov	r0, r5
   11308:	ldr	r2, [sp, #44]	; 0x2c
   1130c:	mov	r1, r9
   11310:	bl	14368 <close@plt+0x344c>
   11314:	cmn	r0, #1
   11318:	beq	11628 <close@plt+0x70c>
   1131c:	cmp	r0, #0
   11320:	beq	11744 <close@plt+0x828>
   11324:	ldr	fp, [sp, #56]	; 0x38
   11328:	add	r7, r9, r0
   1132c:	mov	r1, r9
   11330:	mov	r3, #10
   11334:	strb	r3, [r9, r0]
   11338:	ldrb	r5, [r1]
   1133c:	cmp	r5, #10
   11340:	beq	112cc <close@plt+0x3b0>
   11344:	ldr	r3, [sp, #24]
   11348:	cmp	r6, #0
   1134c:	movlt	r3, #0
   11350:	andge	r3, r3, #1
   11354:	cmp	r3, #0
   11358:	bne	11544 <close@plt+0x628>
   1135c:	ldr	r3, [sp, #16]
   11360:	cmp	r3, #0
   11364:	moveq	r1, #94	; 0x5e
   11368:	moveq	r2, #73	; 0x49
   1136c:	beq	1143c <close@plt+0x520>
   11370:	ldr	r3, [sp, #28]
   11374:	mov	r2, #94	; 0x5e
   11378:	eor	r6, r3, #1
   1137c:	mov	lr, #9
   11380:	mov	ip, #77	; 0x4d
   11384:	mov	r0, #45	; 0x2d
   11388:	mov	r1, #63	; 0x3f
   1138c:	b	113e8 <close@plt+0x4cc>
   11390:	cmp	r5, #126	; 0x7e
   11394:	movls	r3, r4
   11398:	strbls	r5, [r3], #1
   1139c:	bls	113e0 <close@plt+0x4c4>
   113a0:	cmp	r5, #127	; 0x7f
   113a4:	moveq	r3, r4
   113a8:	strbeq	r2, [r3], #2
   113ac:	strbeq	r1, [r4, #1]
   113b0:	beq	113e0 <close@plt+0x4c4>
   113b4:	cmp	r5, #159	; 0x9f
   113b8:	strb	ip, [r4]
   113bc:	strb	r0, [r4, #1]
   113c0:	bls	11530 <close@plt+0x614>
   113c4:	cmp	r5, #255	; 0xff
   113c8:	addne	r3, r4, #3
   113cc:	addeq	r3, r4, #4
   113d0:	subne	r5, r5, #128	; 0x80
   113d4:	strbne	r5, [r4, #2]
   113d8:	strbeq	r2, [r4, #2]
   113dc:	strbeq	r1, [r4, #3]
   113e0:	ldrb	r5, [fp], #1
   113e4:	mov	r4, r3
   113e8:	cmp	r5, #31
   113ec:	bhi	11390 <close@plt+0x474>
   113f0:	cmp	r5, #9
   113f4:	movne	r3, #0
   113f8:	andeq	r3, r6, #1
   113fc:	cmp	r3, #0
   11400:	movne	r3, r4
   11404:	strbne	lr, [r3], #1
   11408:	bne	113e0 <close@plt+0x4c4>
   1140c:	cmp	r5, #10
   11410:	beq	11464 <close@plt+0x548>
   11414:	mov	r3, r4
   11418:	add	r5, r5, #64	; 0x40
   1141c:	strb	r2, [r3], #2
   11420:	strb	r5, [r4, #1]
   11424:	b	113e0 <close@plt+0x4c4>
   11428:	mov	r3, r4
   1142c:	strb	r1, [r3], #2
   11430:	strb	r2, [r4, #1]
   11434:	ldrb	r5, [fp], #1
   11438:	mov	r4, r3
   1143c:	ldr	r3, [sp, #28]
   11440:	cmp	r5, #9
   11444:	movne	r3, #0
   11448:	andeq	r3, r3, #1
   1144c:	cmp	r3, #0
   11450:	bne	11428 <close@plt+0x50c>
   11454:	cmp	r5, #10
   11458:	movne	r3, r4
   1145c:	strbne	r5, [r3], #1
   11460:	bne	11434 <close@plt+0x518>
   11464:	ldr	r3, [sp, #60]	; 0x3c
   11468:	mvn	r6, #0
   1146c:	cmp	r4, r3
   11470:	bcc	112d8 <close@plt+0x3bc>
   11474:	mov	r5, r8
   11478:	mov	r2, sl
   1147c:	mov	r1, r5
   11480:	mov	r0, #1
   11484:	bl	1207c <close@plt+0x1160>
   11488:	cmp	sl, r0
   1148c:	bne	11938 <close@plt+0xa1c>
   11490:	add	r5, r5, sl
   11494:	sub	r3, r4, r5
   11498:	cmp	sl, r3
   1149c:	bls	11478 <close@plt+0x55c>
   114a0:	mov	r2, r3
   114a4:	mov	r1, r5
   114a8:	mov	r0, r8
   114ac:	str	r3, [sp, #32]
   114b0:	bl	10d00 <memmove@plt>
   114b4:	ldr	r3, [sp, #32]
   114b8:	cmp	fp, r7
   114bc:	add	r4, r8, r3
   114c0:	bhi	112e0 <close@plt+0x3c4>
   114c4:	add	r6, r6, #1
   114c8:	cmp	r6, #0
   114cc:	add	r2, fp, #1
   114d0:	ble	114f8 <close@plt+0x5dc>
   114d4:	cmp	r6, #1
   114d8:	beq	114ec <close@plt+0x5d0>
   114dc:	ldr	r3, [sp, #52]	; 0x34
   114e0:	cmp	r3, #0
   114e4:	moveq	r6, #2
   114e8:	bne	115f0 <close@plt+0x6d4>
   114ec:	ldr	r3, [sp, #64]	; 0x40
   114f0:	cmp	r3, #0
   114f4:	bne	11590 <close@plt+0x674>
   114f8:	ldr	r3, [sp, #20]
   114fc:	cmp	r3, #0
   11500:	movne	r1, r4
   11504:	add	r3, r4, #1
   11508:	movne	r4, r3
   1150c:	movne	r0, #36	; 0x24
   11510:	strbne	r0, [r1], #2
   11514:	mov	r0, #10
   11518:	movne	r3, r1
   1151c:	strb	r0, [r4]
   11520:	mov	r1, fp
   11524:	mov	r4, r3
   11528:	mov	fp, r2
   1152c:	b	11338 <close@plt+0x41c>
   11530:	sub	r5, r5, #64	; 0x40
   11534:	strb	r5, [r4, #3]
   11538:	strb	r2, [r4, #2]
   1153c:	add	r3, r4, #4
   11540:	b	113e0 <close@plt+0x4c4>
   11544:	bl	11b40 <close@plt+0xc24>
   11548:	ldr	r3, [pc, #1248]	; 11a30 <close@plt+0xb14>
   1154c:	mov	r0, r4
   11550:	ldr	r1, [r3, #24]
   11554:	bl	10d48 <stpcpy@plt>
   11558:	mov	r4, r0
   1155c:	b	1135c <close@plt+0x440>
   11560:	ldr	r3, [pc, #1220]	; 11a2c <close@plt+0xb10>
   11564:	add	r2, sp, #124	; 0x7c
   11568:	ldr	r1, [pc, #1220]	; 11a34 <close@plt+0xb18>
   1156c:	ldr	r5, [r3, #4]
   11570:	mov	r0, r5
   11574:	bl	10da8 <ioctl@plt>
   11578:	cmp	r0, fp
   1157c:	blt	115b4 <close@plt+0x698>
   11580:	ldr	r3, [sp, #124]	; 0x7c
   11584:	cmp	r3, #0
   11588:	bne	11304 <close@plt+0x3e8>
   1158c:	b	112f4 <close@plt+0x3d8>
   11590:	str	r2, [sp, #32]
   11594:	bl	11b40 <close@plt+0xc24>
   11598:	ldr	r3, [pc, #1168]	; 11a30 <close@plt+0xb14>
   1159c:	mov	r0, r4
   115a0:	ldr	r1, [r3, #24]
   115a4:	bl	10d48 <stpcpy@plt>
   115a8:	ldr	r2, [sp, #32]
   115ac:	mov	r4, r0
   115b0:	b	114f8 <close@plt+0x5dc>
   115b4:	bl	10e68 <__errno_location@plt>
   115b8:	ldr	r3, [r0]
   115bc:	cmp	r3, #25
   115c0:	cmpne	r3, #95	; 0x5f
   115c4:	moveq	r7, #1
   115c8:	movne	r7, #0
   115cc:	sub	r2, r3, #22
   115d0:	cmp	r3, #19
   115d4:	orreq	r7, r7, #1
   115d8:	bics	r2, r2, #16
   115dc:	moveq	r7, #1
   115e0:	cmp	r7, fp
   115e4:	beq	11988 <close@plt+0xa6c>
   115e8:	str	fp, [sp, #40]	; 0x28
   115ec:	b	11580 <close@plt+0x664>
   115f0:	ldrb	r5, [fp]
   115f4:	mov	r6, #2
   115f8:	mov	fp, r2
   115fc:	b	1133c <close@plt+0x420>
   11600:	mov	r2, r5
   11604:	mov	r1, r8
   11608:	mov	r0, #1
   1160c:	bl	1207c <close@plt+0x1160>
   11610:	cmp	r5, r0
   11614:	bne	11938 <close@plt+0xa1c>
   11618:	ldr	r3, [pc, #1036]	; 11a2c <close@plt+0xb10>
   1161c:	mov	r4, r8
   11620:	ldr	r5, [r3, #4]
   11624:	b	11304 <close@plt+0x3e8>
   11628:	bl	10e68 <__errno_location@plt>
   1162c:	ldr	r3, [pc, #1016]	; 11a2c <close@plt+0xb10>
   11630:	mov	r1, #3
   11634:	ldr	r2, [r3]
   11638:	ldr	r5, [r0]
   1163c:	mov	r0, #0
   11640:	bl	14184 <close@plt+0x3268>
   11644:	mov	r1, r5
   11648:	ldr	r2, [pc, #1000]	; 11a38 <close@plt+0xb1c>
   1164c:	mov	r3, r0
   11650:	mov	r0, #0
   11654:	bl	10de4 <error@plt>
   11658:	subs	r4, r4, r8
   1165c:	bne	1184c <close@plt+0x930>
   11660:	ldr	r3, [pc, #964]	; 11a2c <close@plt+0xb10>
   11664:	mov	r7, #0
   11668:	str	r6, [r3, #8]
   1166c:	ldr	r3, [sp, #72]	; 0x48
   11670:	ldr	r0, [sp, #88]	; 0x58
   11674:	and	r3, r3, r7
   11678:	str	r3, [sp, #72]	; 0x48
   1167c:	bl	10d0c <free@plt>
   11680:	ldr	r0, [sp, #84]	; 0x54
   11684:	bl	10d0c <free@plt>
   11688:	ldr	r3, [pc, #924]	; 11a2c <close@plt+0xb10>
   1168c:	ldr	r1, [pc, #916]	; 11a28 <close@plt+0xb0c>
   11690:	ldr	r0, [r3]
   11694:	bl	10cd0 <strcmp@plt>
   11698:	cmp	r0, #0
   1169c:	bne	1175c <close@plt+0x840>
   116a0:	ldr	r3, [sp, #68]	; 0x44
   116a4:	ldr	r2, [sp, #36]	; 0x24
   116a8:	add	r3, r3, #1
   116ac:	cmp	r2, r3
   116b0:	str	r3, [sp, #68]	; 0x44
   116b4:	bgt	11160 <close@plt+0x244>
   116b8:	ldr	r3, [sp, #100]	; 0x64
   116bc:	cmp	r3, #0
   116c0:	bne	11968 <close@plt+0xa4c>
   116c4:	ldr	r3, [pc, #800]	; 119ec <close@plt+0xad0>
   116c8:	ldr	r2, [sp, #236]	; 0xec
   116cc:	ldr	r1, [sp, #72]	; 0x48
   116d0:	ldr	r3, [r3]
   116d4:	eor	r0, r1, #1
   116d8:	cmp	r2, r3
   116dc:	bne	119d8 <close@plt+0xabc>
   116e0:	add	sp, sp, #244	; 0xf4
   116e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116e8:	mov	r0, r4
   116ec:	mov	r1, #0
   116f0:	bl	10df0 <open64@plt>
   116f4:	ldr	r3, [pc, #816]	; 11a2c <close@plt+0xb10>
   116f8:	cmp	r0, #0
   116fc:	mov	r6, r0
   11700:	str	r0, [r3, #4]
   11704:	bge	111ac <close@plt+0x290>
   11708:	bl	10e68 <__errno_location@plt>
   1170c:	ldr	r3, [pc, #792]	; 11a2c <close@plt+0xb10>
   11710:	mov	r1, #3
   11714:	ldr	r2, [r3]
   11718:	mov	r3, #0
   1171c:	str	r3, [sp, #72]	; 0x48
   11720:	ldr	r4, [r0]
   11724:	mov	r0, r3
   11728:	bl	14184 <close@plt+0x3268>
   1172c:	mov	r1, r4
   11730:	ldr	r2, [pc, #768]	; 11a38 <close@plt+0xb1c>
   11734:	mov	r3, r0
   11738:	mov	r0, #0
   1173c:	bl	10de4 <error@plt>
   11740:	b	116a0 <close@plt+0x784>
   11744:	subs	r4, r4, r8
   11748:	bne	11868 <close@plt+0x94c>
   1174c:	ldr	r3, [pc, #728]	; 11a2c <close@plt+0xb10>
   11750:	mov	r7, #1
   11754:	str	r6, [r3, #8]
   11758:	b	1166c <close@plt+0x750>
   1175c:	ldr	r3, [pc, #712]	; 11a2c <close@plt+0xb10>
   11760:	ldr	r0, [r3, #4]
   11764:	bl	10f1c <close@plt>
   11768:	cmp	r0, #0
   1176c:	bge	116a0 <close@plt+0x784>
   11770:	b	11708 <close@plt+0x7ec>
   11774:	ldrd	r2, [sp, #128]	; 0x80
   11778:	ldrd	r0, [sp, #104]	; 0x68
   1177c:	cmp	r3, r1
   11780:	cmpeq	r2, r0
   11784:	bne	1120c <close@plt+0x2f0>
   11788:	ldrd	r2, [sp, #224]	; 0xe0
   1178c:	ldrd	r0, [sp, #112]	; 0x70
   11790:	cmp	r3, r1
   11794:	cmpeq	r2, r0
   11798:	bne	1120c <close@plt+0x2f0>
   1179c:	mov	r1, #1
   117a0:	str	r1, [sp]
   117a4:	ldr	r1, [pc, #640]	; 11a2c <close@plt+0xb10>
   117a8:	mov	r2, r4
   117ac:	mov	r3, r5
   117b0:	ldr	r0, [r1, #4]
   117b4:	bl	10db4 <lseek64@plt>
   117b8:	ldrd	r2, [sp, #176]	; 0xb0
   117bc:	cmp	r0, r2
   117c0:	sbcs	r3, r1, r3
   117c4:	bge	1120c <close@plt+0x2f0>
   117c8:	mov	r2, #5
   117cc:	ldr	r1, [pc, #616]	; 11a3c <close@plt+0xb20>
   117d0:	mov	r0, #0
   117d4:	bl	10d54 <dcgettext@plt>
   117d8:	ldr	r3, [pc, #588]	; 11a2c <close@plt+0xb10>
   117dc:	mov	r1, #3
   117e0:	ldr	r2, [r3]
   117e4:	mov	r4, r0
   117e8:	mov	r0, #0
   117ec:	bl	14184 <close@plt+0x3268>
   117f0:	mov	r1, #0
   117f4:	mov	r2, r4
   117f8:	mov	r3, r0
   117fc:	mov	r0, r1
   11800:	bl	10de4 <error@plt>
   11804:	mov	r3, #0
   11808:	str	r3, [sp, #72]	; 0x48
   1180c:	b	11688 <close@plt+0x76c>
   11810:	bl	10e68 <__errno_location@plt>
   11814:	ldr	r3, [pc, #528]	; 11a2c <close@plt+0xb10>
   11818:	mov	r1, #3
   1181c:	ldr	r2, [r3]
   11820:	mov	r3, #0
   11824:	str	r3, [sp, #72]	; 0x48
   11828:	ldr	r4, [r0]
   1182c:	mov	r0, r3
   11830:	bl	14184 <close@plt+0x3268>
   11834:	mov	r1, r4
   11838:	ldr	r2, [pc, #504]	; 11a38 <close@plt+0xb1c>
   1183c:	mov	r3, r0
   11840:	mov	r0, #0
   11844:	bl	10de4 <error@plt>
   11848:	b	11688 <close@plt+0x76c>
   1184c:	mov	r1, r8
   11850:	mov	r2, r4
   11854:	mov	r0, #1
   11858:	bl	1207c <close@plt+0x1160>
   1185c:	cmp	r4, r0
   11860:	beq	11660 <close@plt+0x744>
   11864:	bl	11bc0 <close@plt+0xca4>
   11868:	mov	r1, r8
   1186c:	mov	r2, r4
   11870:	mov	r0, #1
   11874:	bl	1207c <close@plt+0x1160>
   11878:	cmp	r4, r0
   1187c:	beq	1174c <close@plt+0x830>
   11880:	b	11864 <close@plt+0x948>
   11884:	ldr	r3, [sp, #44]	; 0x2c
   11888:	cmp	sl, r3
   1188c:	movcs	r5, sl
   11890:	movcc	r5, r3
   11894:	add	r0, r5, r8
   11898:	bl	14990 <close@plt+0x3a74>
   1189c:	ldr	r1, [sp, #80]	; 0x50
   118a0:	add	r8, r0, r8
   118a4:	str	r0, [sp, #84]	; 0x54
   118a8:	mov	r0, r8
   118ac:	bl	15118 <close@plt+0x41fc>
   118b0:	sub	r8, r8, r1
   118b4:	b	118d8 <close@plt+0x9bc>
   118b8:	cmp	r0, #0
   118bc:	beq	11960 <close@plt+0xa44>
   118c0:	mov	r2, r0
   118c4:	mov	r1, r8
   118c8:	mov	r0, #1
   118cc:	bl	1207c <close@plt+0x1160>
   118d0:	cmp	r6, r0
   118d4:	bne	11938 <close@plt+0xa1c>
   118d8:	ldr	r3, [pc, #332]	; 11a2c <close@plt+0xb10>
   118dc:	mov	r2, r5
   118e0:	mov	r1, r8
   118e4:	ldr	r0, [r3, #4]
   118e8:	bl	14368 <close@plt+0x344c>
   118ec:	cmn	r0, #1
   118f0:	mov	r6, r0
   118f4:	bne	118b8 <close@plt+0x99c>
   118f8:	bl	10e68 <__errno_location@plt>
   118fc:	ldr	r3, [pc, #296]	; 11a2c <close@plt+0xb10>
   11900:	mov	r1, #3
   11904:	ldr	r2, [r3]
   11908:	ldr	r5, [r0]
   1190c:	mov	r0, #0
   11910:	bl	14184 <close@plt+0x3268>
   11914:	mov	r1, r5
   11918:	ldr	r2, [pc, #280]	; 11a38 <close@plt+0xb1c>
   1191c:	mov	r3, r0
   11920:	mov	r0, #0
   11924:	bl	10de4 <error@plt>
   11928:	ldr	r3, [sp, #72]	; 0x48
   1192c:	and	r3, r3, r4
   11930:	str	r3, [sp, #72]	; 0x48
   11934:	b	11680 <close@plt+0x764>
   11938:	bl	10e68 <__errno_location@plt>
   1193c:	ldr	r1, [pc, #252]	; 11a40 <close@plt+0xb24>
   11940:	mov	r2, #5
   11944:	ldr	r4, [r0]
   11948:	mov	r0, #0
   1194c:	bl	10d54 <dcgettext@plt>
   11950:	mov	r1, r4
   11954:	mov	r2, r0
   11958:	mov	r0, #1
   1195c:	bl	10de4 <error@plt>
   11960:	mov	r4, #1
   11964:	b	11928 <close@plt+0xa0c>
   11968:	mov	r0, #0
   1196c:	bl	10f1c <close@plt>
   11970:	cmp	r0, #0
   11974:	bge	116c4 <close@plt+0x7a8>
   11978:	bl	10e68 <__errno_location@plt>
   1197c:	mov	r2, #5
   11980:	ldr	r1, [pc, #188]	; 11a44 <close@plt+0xb28>
   11984:	b	11944 <close@plt+0xa28>
   11988:	mov	r2, #5
   1198c:	ldr	r1, [pc, #180]	; 11a48 <close@plt+0xb2c>
   11990:	mov	r0, r7
   11994:	mov	r8, r3
   11998:	bl	10d54 <dcgettext@plt>
   1199c:	ldr	r2, [pc, #136]	; 11a2c <close@plt+0xb10>
   119a0:	mov	r5, r2
   119a4:	ldr	r1, [r2]
   119a8:	mov	r4, r0
   119ac:	mov	r0, #4
   119b0:	bl	140a8 <close@plt+0x318c>
   119b4:	mov	r2, r4
   119b8:	mov	r1, r8
   119bc:	mov	r3, r0
   119c0:	mov	r0, r7
   119c4:	bl	10de4 <error@plt>
   119c8:	str	r6, [r5, #8]
   119cc:	b	1166c <close@plt+0x750>
   119d0:	mov	r0, #1
   119d4:	bl	11bf0 <close@plt+0xcd4>
   119d8:	bl	10d60 <__stack_chk_fail@plt>
   119dc:	bl	10e68 <__errno_location@plt>
   119e0:	mov	r2, #5
   119e4:	ldr	r1, [pc, #96]	; 11a4c <close@plt+0xb30>
   119e8:	b	11944 <close@plt+0xa28>
   119ec:	andeq	r5, r2, r8, lsl #30
   119f0:	andeq	r5, r1, r0, lsl #6
   119f4:	andeq	r5, r1, r8, lsl #4
   119f8:	andeq	r5, r1, r0, ror r7
   119fc:	andeq	r5, r1, r4, asr #13
   11a00:	andeq	r5, r1, ip, lsr #15
   11a04:	andeq	r1, r1, ip, ror #30
   11a08:	andeq	r6, r2, r8, lsl #2
   11a0c:	andeq	r6, r2, r4, ror #2
   11a10:	andeq	r5, r1, r4, lsl #15
   11a14:	muleq	r1, r8, r7
   11a18:			; <UNDEFINED> instruction: 0x000152b4
   11a1c:	andeq	r5, r1, r0, asr #13
   11a20:	svcne	0x00fe0000
   11a24:	andeq	r6, r2, r8, asr r1
   11a28:	andeq	r5, r1, r8, asr #15
   11a2c:	andeq	r6, r2, ip, ror #2
   11a30:	andeq	r6, r2, ip, ror #1
   11a34:	andeq	r5, r0, fp, lsl r4
   11a38:	andeq	r5, r1, r4, lsl #18
   11a3c:	andeq	r5, r1, ip, asr #15
   11a40:	andeq	r5, r1, r8, lsr #5
   11a44:	andeq	r5, r1, r4, lsl #16
   11a48:	andeq	r5, r1, ip, ror #15
   11a4c:			; <UNDEFINED> instruction: 0x000157b8
   11a50:	mov	fp, #0
   11a54:	mov	lr, #0
   11a58:	pop	{r1}		; (ldr r1, [sp], #4)
   11a5c:	mov	r2, sp
   11a60:	push	{r2}		; (str r2, [sp, #-4]!)
   11a64:	push	{r0}		; (str r0, [sp, #-4]!)
   11a68:	ldr	ip, [pc, #16]	; 11a80 <close@plt+0xb64>
   11a6c:	push	{ip}		; (str ip, [sp, #-4]!)
   11a70:	ldr	r0, [pc, #12]	; 11a84 <close@plt+0xb68>
   11a74:	ldr	r3, [pc, #12]	; 11a88 <close@plt+0xb6c>
   11a78:	bl	10e08 <__libc_start_main@plt>
   11a7c:	bl	10f10 <abort@plt>
   11a80:	andeq	r5, r1, r8, lsr #3
   11a84:	andeq	r0, r1, r8, lsr #30
   11a88:	andeq	r5, r1, r8, asr #2
   11a8c:	ldr	r3, [pc, #20]	; 11aa8 <close@plt+0xb8c>
   11a90:	ldr	r2, [pc, #20]	; 11aac <close@plt+0xb90>
   11a94:	add	r3, pc, r3
   11a98:	ldr	r2, [r3, r2]
   11a9c:	cmp	r2, #0
   11aa0:	bxeq	lr
   11aa4:	b	10e20 <__gmon_start__@plt>
   11aa8:	andeq	r4, r1, r4, ror #10
   11aac:	andeq	r0, r0, r0, ror #1
   11ab0:	ldr	r0, [pc, #24]	; 11ad0 <close@plt+0xbb4>
   11ab4:	ldr	r3, [pc, #24]	; 11ad4 <close@plt+0xbb8>
   11ab8:	cmp	r3, r0
   11abc:	bxeq	lr
   11ac0:	ldr	r3, [pc, #16]	; 11ad8 <close@plt+0xbbc>
   11ac4:	cmp	r3, #0
   11ac8:	bxeq	lr
   11acc:	bx	r3
   11ad0:	andeq	r6, r2, r0, asr r1
   11ad4:	andeq	r6, r2, r0, asr r1
   11ad8:	andeq	r0, r0, r0
   11adc:	ldr	r0, [pc, #36]	; 11b08 <close@plt+0xbec>
   11ae0:	ldr	r1, [pc, #36]	; 11b0c <close@plt+0xbf0>
   11ae4:	sub	r1, r1, r0
   11ae8:	asr	r1, r1, #2
   11aec:	add	r1, r1, r1, lsr #31
   11af0:	asrs	r1, r1, #1
   11af4:	bxeq	lr
   11af8:	ldr	r3, [pc, #16]	; 11b10 <close@plt+0xbf4>
   11afc:	cmp	r3, #0
   11b00:	bxeq	lr
   11b04:	bx	r3
   11b08:	andeq	r6, r2, r0, asr r1
   11b0c:	andeq	r6, r2, r0, asr r1
   11b10:	andeq	r0, r0, r0
   11b14:	push	{r4, lr}
   11b18:	ldr	r4, [pc, #24]	; 11b38 <close@plt+0xc1c>
   11b1c:	ldrb	r3, [r4]
   11b20:	cmp	r3, #0
   11b24:	popne	{r4, pc}
   11b28:	bl	11ab0 <close@plt+0xb94>
   11b2c:	mov	r3, #1
   11b30:	strb	r3, [r4]
   11b34:	pop	{r4, pc}
   11b38:	andeq	r6, r2, r8, ror #2
   11b3c:	b	11adc <close@plt+0xbc0>
   11b40:	push	{lr}		; (str lr, [sp, #-4]!)
   11b44:	mov	ip, #48	; 0x30
   11b48:	ldr	lr, [pc, #104]	; 11bb8 <close@plt+0xc9c>
   11b4c:	mov	r3, lr
   11b50:	ldr	r1, [r3], #21
   11b54:	b	11b64 <close@plt+0xc48>
   11b58:	cmp	r1, r3
   11b5c:	strb	ip, [r3, #1]
   11b60:	bhi	11b80 <close@plt+0xc64>
   11b64:	mov	r0, r3
   11b68:	ldrb	r2, [r3], #-1
   11b6c:	cmp	r2, #56	; 0x38
   11b70:	bhi	11b58 <close@plt+0xc3c>
   11b74:	add	r2, r2, #1
   11b78:	strb	r2, [r0]
   11b7c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b80:	ldr	r3, [pc, #52]	; 11bbc <close@plt+0xca0>
   11b84:	cmp	r1, r3
   11b88:	movhi	r3, #49	; 0x31
   11b8c:	movls	r3, #62	; 0x3e
   11b90:	strbhi	r3, [r1, #-1]
   11b94:	strbls	r3, [lr, #4]
   11b98:	ldr	r3, [lr, #24]
   11b9c:	subhi	r2, r1, #1
   11ba0:	movls	r2, r1
   11ba4:	strhi	r2, [lr]
   11ba8:	cmp	r3, r2
   11bac:	subhi	r3, r3, #1
   11bb0:	strhi	r3, [lr, #24]
   11bb4:	pop	{pc}		; (ldr pc, [sp], #4)
   11bb8:	andeq	r6, r2, ip, ror #1
   11bbc:	strdeq	r6, [r2], -r0
   11bc0:	push	{r4, lr}
   11bc4:	bl	10e68 <__errno_location@plt>
   11bc8:	mov	r2, #5
   11bcc:	ldr	r1, [pc, #24]	; 11bec <close@plt+0xcd0>
   11bd0:	ldr	r4, [r0]
   11bd4:	mov	r0, #0
   11bd8:	bl	10d54 <dcgettext@plt>
   11bdc:	mov	r1, r4
   11be0:	mov	r2, r0
   11be4:	mov	r0, #1
   11be8:	bl	10de4 <error@plt>
   11bec:	andeq	r5, r1, r8, lsr #5
   11bf0:	ldr	r3, [pc, #756]	; 11eec <close@plt+0xfd0>
   11bf4:	push	{r7, lr}
   11bf8:	sub	sp, sp, #64	; 0x40
   11bfc:	ldr	r3, [r3]
   11c00:	subs	r4, r0, #0
   11c04:	str	r3, [sp, #60]	; 0x3c
   11c08:	beq	11c44 <close@plt+0xd28>
   11c0c:	ldr	r3, [pc, #732]	; 11ef0 <close@plt+0xfd4>
   11c10:	mov	r2, #5
   11c14:	ldr	r1, [pc, #728]	; 11ef4 <close@plt+0xfd8>
   11c18:	mov	r0, #0
   11c1c:	ldr	r5, [r3]
   11c20:	bl	10d54 <dcgettext@plt>
   11c24:	ldr	r3, [pc, #716]	; 11ef8 <close@plt+0xfdc>
   11c28:	mov	r1, #1
   11c2c:	ldr	r3, [r3]
   11c30:	mov	r2, r0
   11c34:	mov	r0, r5
   11c38:	bl	10eb0 <__fprintf_chk@plt>
   11c3c:	mov	r0, r4
   11c40:	bl	10e44 <exit@plt>
   11c44:	mov	r2, #5
   11c48:	ldr	r1, [pc, #684]	; 11efc <close@plt+0xfe0>
   11c4c:	bl	10d54 <dcgettext@plt>
   11c50:	ldr	r6, [pc, #672]	; 11ef8 <close@plt+0xfdc>
   11c54:	ldr	r5, [pc, #676]	; 11f00 <close@plt+0xfe4>
   11c58:	ldr	r2, [r6]
   11c5c:	mov	r1, r0
   11c60:	mov	r0, #1
   11c64:	bl	10e8c <__printf_chk@plt>
   11c68:	mov	r2, #5
   11c6c:	ldr	r1, [pc, #656]	; 11f04 <close@plt+0xfe8>
   11c70:	mov	r0, r4
   11c74:	bl	10d54 <dcgettext@plt>
   11c78:	ldr	r1, [r5]
   11c7c:	bl	10cb8 <fputs_unlocked@plt>
   11c80:	mov	r2, #5
   11c84:	ldr	r1, [pc, #636]	; 11f08 <close@plt+0xfec>
   11c88:	mov	r0, r4
   11c8c:	bl	10d54 <dcgettext@plt>
   11c90:	ldr	r1, [r5]
   11c94:	bl	10cb8 <fputs_unlocked@plt>
   11c98:	mov	r2, #5
   11c9c:	ldr	r1, [pc, #616]	; 11f0c <close@plt+0xff0>
   11ca0:	mov	r0, r4
   11ca4:	bl	10d54 <dcgettext@plt>
   11ca8:	ldr	r1, [r5]
   11cac:	bl	10cb8 <fputs_unlocked@plt>
   11cb0:	mov	r2, #5
   11cb4:	ldr	r1, [pc, #596]	; 11f10 <close@plt+0xff4>
   11cb8:	mov	r0, r4
   11cbc:	bl	10d54 <dcgettext@plt>
   11cc0:	ldr	r1, [r5]
   11cc4:	bl	10cb8 <fputs_unlocked@plt>
   11cc8:	mov	r2, #5
   11ccc:	ldr	r1, [pc, #576]	; 11f14 <close@plt+0xff8>
   11cd0:	mov	r0, r4
   11cd4:	bl	10d54 <dcgettext@plt>
   11cd8:	ldr	r1, [r5]
   11cdc:	bl	10cb8 <fputs_unlocked@plt>
   11ce0:	mov	r2, #5
   11ce4:	ldr	r1, [pc, #556]	; 11f18 <close@plt+0xffc>
   11ce8:	mov	r0, r4
   11cec:	bl	10d54 <dcgettext@plt>
   11cf0:	ldr	r1, [r5]
   11cf4:	bl	10cb8 <fputs_unlocked@plt>
   11cf8:	mov	r2, #5
   11cfc:	ldr	r1, [pc, #536]	; 11f1c <close@plt+0x1000>
   11d00:	mov	r0, r4
   11d04:	bl	10d54 <dcgettext@plt>
   11d08:	ldr	r3, [r6]
   11d0c:	mov	r2, r3
   11d10:	mov	r1, r0
   11d14:	mov	r0, #1
   11d18:	bl	10e8c <__printf_chk@plt>
   11d1c:	ldr	lr, [pc, #508]	; 11f20 <close@plt+0x1004>
   11d20:	add	ip, sp, #4
   11d24:	ldm	lr!, {r0, r1, r2, r3}
   11d28:	stmia	ip!, {r0, r1, r2, r3}
   11d2c:	ldm	lr!, {r0, r1, r2, r3}
   11d30:	ldr	r6, [sp, #4]
   11d34:	stmia	ip!, {r0, r1, r2, r3}
   11d38:	cmp	r6, #0
   11d3c:	ldm	lr!, {r0, r1, r2, r3}
   11d40:	addeq	r5, sp, #4
   11d44:	stmia	ip!, {r0, r1, r2, r3}
   11d48:	ldm	lr, {r0, r1}
   11d4c:	stm	ip, {r0, r1}
   11d50:	beq	11d80 <close@plt+0xe64>
   11d54:	ldr	r7, [pc, #456]	; 11f24 <close@plt+0x1008>
   11d58:	add	r5, sp, #4
   11d5c:	b	11d6c <close@plt+0xe50>
   11d60:	ldr	r6, [r5, #8]!
   11d64:	cmp	r6, #0
   11d68:	beq	11d80 <close@plt+0xe64>
   11d6c:	mov	r1, r6
   11d70:	mov	r0, r7
   11d74:	bl	10cd0 <strcmp@plt>
   11d78:	cmp	r0, #0
   11d7c:	bne	11d60 <close@plt+0xe44>
   11d80:	ldr	r5, [r5, #4]
   11d84:	mov	r2, #5
   11d88:	cmp	r5, #0
   11d8c:	ldr	r1, [pc, #404]	; 11f28 <close@plt+0x100c>
   11d90:	beq	11e38 <close@plt+0xf1c>
   11d94:	mov	r0, #0
   11d98:	bl	10d54 <dcgettext@plt>
   11d9c:	ldr	r3, [pc, #392]	; 11f2c <close@plt+0x1010>
   11da0:	ldr	r2, [pc, #392]	; 11f30 <close@plt+0x1014>
   11da4:	mov	r1, r0
   11da8:	mov	r0, #1
   11dac:	bl	10e8c <__printf_chk@plt>
   11db0:	mov	r1, #0
   11db4:	mov	r0, #5
   11db8:	bl	10ed4 <setlocale@plt>
   11dbc:	cmp	r0, #0
   11dc0:	ldreq	r6, [pc, #348]	; 11f24 <close@plt+0x1008>
   11dc4:	beq	11de0 <close@plt+0xec4>
   11dc8:	mov	r2, #3
   11dcc:	ldr	r1, [pc, #352]	; 11f34 <close@plt+0x1018>
   11dd0:	bl	10f04 <strncmp@plt>
   11dd4:	ldr	r6, [pc, #328]	; 11f24 <close@plt+0x1008>
   11dd8:	cmp	r0, #0
   11ddc:	bne	11ec8 <close@plt+0xfac>
   11de0:	mov	r2, #5
   11de4:	ldr	r1, [pc, #332]	; 11f38 <close@plt+0x101c>
   11de8:	mov	r0, #0
   11dec:	bl	10d54 <dcgettext@plt>
   11df0:	ldr	r3, [pc, #300]	; 11f24 <close@plt+0x1008>
   11df4:	ldr	r2, [pc, #304]	; 11f2c <close@plt+0x1010>
   11df8:	mov	r1, r0
   11dfc:	mov	r0, #1
   11e00:	bl	10e8c <__printf_chk@plt>
   11e04:	mov	r2, #5
   11e08:	ldr	r1, [pc, #300]	; 11f3c <close@plt+0x1020>
   11e0c:	mov	r0, #0
   11e10:	bl	10d54 <dcgettext@plt>
   11e14:	ldr	r2, [pc, #292]	; 11f40 <close@plt+0x1024>
   11e18:	cmp	r5, r6
   11e1c:	ldr	r3, [pc, #288]	; 11f44 <close@plt+0x1028>
   11e20:	movne	r3, r2
   11e24:	mov	r1, r0
   11e28:	mov	r2, r5
   11e2c:	mov	r0, #1
   11e30:	bl	10e8c <__printf_chk@plt>
   11e34:	b	11c3c <close@plt+0xd20>
   11e38:	mov	r0, r5
   11e3c:	bl	10d54 <dcgettext@plt>
   11e40:	ldr	r3, [pc, #228]	; 11f2c <close@plt+0x1010>
   11e44:	ldr	r2, [pc, #228]	; 11f30 <close@plt+0x1014>
   11e48:	mov	r1, r0
   11e4c:	mov	r0, #1
   11e50:	bl	10e8c <__printf_chk@plt>
   11e54:	mov	r1, r5
   11e58:	mov	r0, #5
   11e5c:	bl	10ed4 <setlocale@plt>
   11e60:	cmp	r0, #0
   11e64:	beq	11e7c <close@plt+0xf60>
   11e68:	mov	r2, #3
   11e6c:	ldr	r1, [pc, #192]	; 11f34 <close@plt+0x1018>
   11e70:	bl	10f04 <strncmp@plt>
   11e74:	cmp	r0, #0
   11e78:	bne	11ec0 <close@plt+0xfa4>
   11e7c:	mov	r2, #5
   11e80:	ldr	r1, [pc, #176]	; 11f38 <close@plt+0x101c>
   11e84:	mov	r0, #0
   11e88:	bl	10d54 <dcgettext@plt>
   11e8c:	ldr	r3, [pc, #144]	; 11f24 <close@plt+0x1008>
   11e90:	ldr	r2, [pc, #148]	; 11f2c <close@plt+0x1010>
   11e94:	mov	r5, r3
   11e98:	mov	r1, r0
   11e9c:	mov	r0, #1
   11ea0:	bl	10e8c <__printf_chk@plt>
   11ea4:	ldr	r1, [pc, #144]	; 11f3c <close@plt+0x1020>
   11ea8:	mov	r2, #5
   11eac:	mov	r0, #0
   11eb0:	bl	10d54 <dcgettext@plt>
   11eb4:	ldr	r3, [pc, #136]	; 11f44 <close@plt+0x1028>
   11eb8:	mov	r1, r0
   11ebc:	b	11e28 <close@plt+0xf0c>
   11ec0:	ldr	r6, [pc, #92]	; 11f24 <close@plt+0x1008>
   11ec4:	mov	r5, r6
   11ec8:	mov	r2, #5
   11ecc:	ldr	r1, [pc, #116]	; 11f48 <close@plt+0x102c>
   11ed0:	mov	r0, #0
   11ed4:	bl	10d54 <dcgettext@plt>
   11ed8:	ldr	r2, [pc, #68]	; 11f24 <close@plt+0x1008>
   11edc:	mov	r1, r0
   11ee0:	mov	r0, #1
   11ee4:	bl	10e8c <__printf_chk@plt>
   11ee8:	b	11de0 <close@plt+0xec4>
   11eec:	andeq	r5, r2, r8, lsl #30
   11ef0:	andeq	r6, r2, r0, ror #2
   11ef4:			; <UNDEFINED> instruction: 0x000152b8
   11ef8:	andeq	r6, r2, r0, lsl #3
   11efc:	andeq	r5, r1, r0, ror #5
   11f00:	andeq	r6, r2, r4, ror #2
   11f04:	andeq	r5, r1, r4, lsl #6
   11f08:	andeq	r5, r1, r0, lsr r3
   11f0c:	andeq	r5, r1, r8, ror #6
   11f10:			; <UNDEFINED> instruction: 0x000154b8
   11f14:	andeq	r5, r1, ip, lsl #11
   11f18:			; <UNDEFINED> instruction: 0x000155bc
   11f1c:	strdeq	r5, [r1], -r4
   11f20:	ldrdeq	r5, [r1], -r0
   11f24:			; <UNDEFINED> instruction: 0x000152b4
   11f28:	andeq	r5, r1, r0, lsl #13
   11f2c:	muleq	r1, r8, r6
   11f30:	andeq	r5, r1, r0, asr #13
   11f34:	ldrdeq	r5, [r1], -r0
   11f38:	andeq	r5, r1, ip, lsl r7
   11f3c:	andeq	r5, r1, ip, lsr r7
   11f40:	andeq	r5, r1, r0, lsl #6
   11f44:	muleq	r1, r4, r8
   11f48:	ldrdeq	r5, [r1], -r4
   11f4c:	ldr	r3, [pc, #4]	; 11f58 <close@plt+0x103c>
   11f50:	str	r0, [r3]
   11f54:	bx	lr
   11f58:	andeq	r6, r2, r8, ror r1
   11f5c:	ldr	r3, [pc, #4]	; 11f68 <close@plt+0x104c>
   11f60:	strb	r0, [r3, #4]
   11f64:	bx	lr
   11f68:	andeq	r6, r2, r8, ror r1
   11f6c:	ldr	r3, [pc, #180]	; 12028 <close@plt+0x110c>
   11f70:	push	{r4, r5, r6, lr}
   11f74:	sub	sp, sp, #8
   11f78:	ldr	r0, [r3]
   11f7c:	bl	14c98 <close@plt+0x3d7c>
   11f80:	cmp	r0, #0
   11f84:	beq	11fac <close@plt+0x1090>
   11f88:	bl	10e68 <__errno_location@plt>
   11f8c:	ldr	r5, [pc, #152]	; 1202c <close@plt+0x1110>
   11f90:	ldrb	r3, [r5, #4]
   11f94:	cmp	r3, #0
   11f98:	mov	r4, r0
   11f9c:	beq	11fc8 <close@plt+0x10ac>
   11fa0:	ldr	r3, [r0]
   11fa4:	cmp	r3, #32
   11fa8:	bne	11fc8 <close@plt+0x10ac>
   11fac:	ldr	r3, [pc, #124]	; 12030 <close@plt+0x1114>
   11fb0:	ldr	r0, [r3]
   11fb4:	bl	14c98 <close@plt+0x3d7c>
   11fb8:	cmp	r0, #0
   11fbc:	bne	12008 <close@plt+0x10ec>
   11fc0:	add	sp, sp, #8
   11fc4:	pop	{r4, r5, r6, pc}
   11fc8:	mov	r2, #5
   11fcc:	ldr	r1, [pc, #96]	; 12034 <close@plt+0x1118>
   11fd0:	mov	r0, #0
   11fd4:	bl	10d54 <dcgettext@plt>
   11fd8:	mov	r6, r0
   11fdc:	ldr	r0, [r5]
   11fe0:	cmp	r0, #0
   11fe4:	beq	12014 <close@plt+0x10f8>
   11fe8:	ldr	r4, [r4]
   11fec:	bl	14170 <close@plt+0x3254>
   11ff0:	mov	r1, r4
   11ff4:	str	r6, [sp]
   11ff8:	ldr	r2, [pc, #56]	; 12038 <close@plt+0x111c>
   11ffc:	mov	r3, r0
   12000:	mov	r0, #0
   12004:	bl	10de4 <error@plt>
   12008:	ldr	r3, [pc, #44]	; 1203c <close@plt+0x1120>
   1200c:	ldr	r0, [r3]
   12010:	bl	10d18 <_exit@plt>
   12014:	mov	r3, r6
   12018:	ldr	r1, [r4]
   1201c:	ldr	r2, [pc, #28]	; 12040 <close@plt+0x1124>
   12020:	bl	10de4 <error@plt>
   12024:	b	12008 <close@plt+0x10ec>
   12028:	andeq	r6, r2, r4, ror #2
   1202c:	andeq	r6, r2, r8, ror r1
   12030:	andeq	r6, r2, r0, ror #2
   12034:	andeq	r5, r1, r8, lsr #5
   12038:	andeq	r5, r1, r0, lsl #18
   1203c:	andeq	r6, r2, ip, lsl #2
   12040:	andeq	r5, r1, r4, lsl #18
   12044:	b	10cdc <posix_fadvise64@plt>
   12048:	cmp	r0, #0
   1204c:	bxeq	lr
   12050:	push	{r4, lr}
   12054:	sub	sp, sp, #16
   12058:	mov	r4, r1
   1205c:	bl	10ea4 <fileno@plt>
   12060:	mov	r2, #0
   12064:	mov	r3, #0
   12068:	str	r4, [sp, #8]
   1206c:	strd	r2, [sp]
   12070:	bl	10cdc <posix_fadvise64@plt>
   12074:	add	sp, sp, #16
   12078:	pop	{r4, pc}
   1207c:	push	{r4, r5, r6, r7, r8, lr}
   12080:	subs	r4, r2, #0
   12084:	beq	120e4 <close@plt+0x11c8>
   12088:	mov	r7, r0
   1208c:	mov	r5, r1
   12090:	mov	r6, #0
   12094:	b	120b0 <close@plt+0x1194>
   12098:	cmp	r0, #0
   1209c:	beq	120d0 <close@plt+0x11b4>
   120a0:	subs	r4, r4, r0
   120a4:	add	r6, r6, r0
   120a8:	add	r5, r5, r0
   120ac:	beq	120c8 <close@plt+0x11ac>
   120b0:	mov	r2, r4
   120b4:	mov	r1, r5
   120b8:	mov	r0, r7
   120bc:	bl	143d0 <close@plt+0x34b4>
   120c0:	cmn	r0, #1
   120c4:	bne	12098 <close@plt+0x117c>
   120c8:	mov	r0, r6
   120cc:	pop	{r4, r5, r6, r7, r8, pc}
   120d0:	bl	10e68 <__errno_location@plt>
   120d4:	mov	r3, #28
   120d8:	str	r3, [r0]
   120dc:	mov	r0, r6
   120e0:	pop	{r4, r5, r6, r7, r8, pc}
   120e4:	mov	r6, r4
   120e8:	b	120c8 <close@plt+0x11ac>
   120ec:	push	{r4, r5, r6, lr}
   120f0:	subs	r4, r0, #0
   120f4:	beq	12168 <close@plt+0x124c>
   120f8:	mov	r1, #47	; 0x2f
   120fc:	bl	10ee0 <strrchr@plt>
   12100:	subs	r5, r0, #0
   12104:	beq	12154 <close@plt+0x1238>
   12108:	add	r6, r5, #1
   1210c:	sub	r3, r6, r4
   12110:	cmp	r3, #6
   12114:	ble	12154 <close@plt+0x1238>
   12118:	mov	r2, #7
   1211c:	ldr	r1, [pc, #96]	; 12184 <close@plt+0x1268>
   12120:	sub	r0, r5, #6
   12124:	bl	10f04 <strncmp@plt>
   12128:	cmp	r0, #0
   1212c:	bne	12154 <close@plt+0x1238>
   12130:	mov	r2, #3
   12134:	ldr	r1, [pc, #76]	; 12188 <close@plt+0x126c>
   12138:	mov	r0, r6
   1213c:	bl	10f04 <strncmp@plt>
   12140:	cmp	r0, #0
   12144:	movne	r4, r6
   12148:	ldreq	r3, [pc, #60]	; 1218c <close@plt+0x1270>
   1214c:	addeq	r4, r5, #4
   12150:	streq	r4, [r3]
   12154:	ldr	r2, [pc, #52]	; 12190 <close@plt+0x1274>
   12158:	ldr	r3, [pc, #52]	; 12194 <close@plt+0x1278>
   1215c:	str	r4, [r2]
   12160:	str	r4, [r3]
   12164:	pop	{r4, r5, r6, pc}
   12168:	ldr	r3, [pc, #40]	; 12198 <close@plt+0x127c>
   1216c:	mov	r2, #55	; 0x37
   12170:	mov	r1, #1
   12174:	ldr	r3, [r3]
   12178:	ldr	r0, [pc, #28]	; 1219c <close@plt+0x1280>
   1217c:	bl	10d9c <fwrite@plt>
   12180:	bl	10f10 <abort@plt>
   12184:	andeq	r5, r1, r0, asr #18
   12188:	andeq	r5, r1, r8, asr #18
   1218c:	andeq	r6, r2, r0, asr r1
   12190:	andeq	r6, r2, r0, lsl #3
   12194:	andeq	r6, r2, r4, asr r1
   12198:	andeq	r6, r2, r0, ror #2
   1219c:	andeq	r5, r1, r8, lsl #18
   121a0:	push	{r4, lr}
   121a4:	mov	r2, #48	; 0x30
   121a8:	mov	r4, r1
   121ac:	mov	r1, #0
   121b0:	bl	10e80 <memset@plt>
   121b4:	cmp	r4, #10
   121b8:	beq	121c4 <close@plt+0x12a8>
   121bc:	str	r4, [r0]
   121c0:	pop	{r4, pc}
   121c4:	bl	10f10 <abort@plt>
   121c8:	push	{r4, r5, r6, lr}
   121cc:	mov	r2, #5
   121d0:	mov	r5, r0
   121d4:	mov	r6, r1
   121d8:	mov	r1, r0
   121dc:	mov	r0, #0
   121e0:	bl	10d54 <dcgettext@plt>
   121e4:	cmp	r5, r0
   121e8:	mov	r4, r0
   121ec:	beq	121f8 <close@plt+0x12dc>
   121f0:	mov	r0, r4
   121f4:	pop	{r4, r5, r6, pc}
   121f8:	bl	14d58 <close@plt+0x3e3c>
   121fc:	ldrb	r3, [r0]
   12200:	bic	r3, r3, #32
   12204:	cmp	r3, #85	; 0x55
   12208:	bne	12268 <close@plt+0x134c>
   1220c:	ldrb	r3, [r0, #1]
   12210:	bic	r3, r3, #32
   12214:	cmp	r3, #84	; 0x54
   12218:	bne	122e0 <close@plt+0x13c4>
   1221c:	ldrb	r3, [r0, #2]
   12220:	bic	r3, r3, #32
   12224:	cmp	r3, #70	; 0x46
   12228:	bne	122e0 <close@plt+0x13c4>
   1222c:	ldrb	r3, [r0, #3]
   12230:	cmp	r3, #45	; 0x2d
   12234:	bne	122e0 <close@plt+0x13c4>
   12238:	ldrb	r3, [r0, #4]
   1223c:	cmp	r3, #56	; 0x38
   12240:	bne	122e0 <close@plt+0x13c4>
   12244:	ldrb	r3, [r0, #5]
   12248:	cmp	r3, #0
   1224c:	bne	122e0 <close@plt+0x13c4>
   12250:	ldrb	r2, [r4]
   12254:	ldr	r3, [pc, #156]	; 122f8 <close@plt+0x13dc>
   12258:	ldr	r4, [pc, #156]	; 122fc <close@plt+0x13e0>
   1225c:	cmp	r2, #96	; 0x60
   12260:	movne	r4, r3
   12264:	b	121f0 <close@plt+0x12d4>
   12268:	cmp	r3, #71	; 0x47
   1226c:	bne	122e0 <close@plt+0x13c4>
   12270:	ldrb	r3, [r0, #1]
   12274:	bic	r3, r3, #32
   12278:	cmp	r3, #66	; 0x42
   1227c:	bne	122e0 <close@plt+0x13c4>
   12280:	ldrb	r3, [r0, #2]
   12284:	cmp	r3, #49	; 0x31
   12288:	bne	122e0 <close@plt+0x13c4>
   1228c:	ldrb	r3, [r0, #3]
   12290:	cmp	r3, #56	; 0x38
   12294:	bne	122e0 <close@plt+0x13c4>
   12298:	ldrb	r3, [r0, #4]
   1229c:	cmp	r3, #48	; 0x30
   122a0:	bne	122e0 <close@plt+0x13c4>
   122a4:	ldrb	r3, [r0, #5]
   122a8:	cmp	r3, #51	; 0x33
   122ac:	bne	122e0 <close@plt+0x13c4>
   122b0:	ldrb	r3, [r0, #6]
   122b4:	cmp	r3, #48	; 0x30
   122b8:	bne	122e0 <close@plt+0x13c4>
   122bc:	ldrb	r3, [r0, #7]
   122c0:	cmp	r3, #0
   122c4:	bne	122e0 <close@plt+0x13c4>
   122c8:	ldrb	r2, [r4]
   122cc:	ldr	r3, [pc, #44]	; 12300 <close@plt+0x13e4>
   122d0:	ldr	r4, [pc, #44]	; 12304 <close@plt+0x13e8>
   122d4:	cmp	r2, #96	; 0x60
   122d8:	movne	r4, r3
   122dc:	b	121f0 <close@plt+0x12d4>
   122e0:	ldr	r3, [pc, #32]	; 12308 <close@plt+0x13ec>
   122e4:	ldr	r4, [pc, #32]	; 1230c <close@plt+0x13f0>
   122e8:	cmp	r6, #9
   122ec:	movne	r4, r3
   122f0:	mov	r0, r4
   122f4:	pop	{r4, r5, r6, pc}
   122f8:	andeq	r5, r1, r4, lsr #19
   122fc:			; <UNDEFINED> instruction: 0x000159b0
   12300:	andeq	r5, r1, r8, lsr #19
   12304:	andeq	r5, r1, ip, lsr #19
   12308:			; <UNDEFINED> instruction: 0x000159b4
   1230c:	andeq	r5, r1, r0, lsr #19
   12310:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12314:	sub	sp, sp, #124	; 0x7c
   12318:	ldr	ip, [pc, #3576]	; 13118 <close@plt+0x21fc>
   1231c:	str	r3, [sp, #24]
   12320:	ldr	r3, [sp, #168]	; 0xa8
   12324:	ldr	ip, [ip]
   12328:	str	r3, [sp, #56]	; 0x38
   1232c:	ldr	r3, [sp, #172]	; 0xac
   12330:	ldr	r8, [sp, #160]	; 0xa0
   12334:	str	r3, [sp, #80]	; 0x50
   12338:	ldr	r3, [sp, #176]	; 0xb0
   1233c:	mov	fp, r0
   12340:	str	r3, [sp, #76]	; 0x4c
   12344:	mov	sl, r1
   12348:	str	r2, [sp, #36]	; 0x24
   1234c:	str	ip, [sp, #116]	; 0x74
   12350:	bl	10dc0 <__ctype_get_mb_cur_max@plt>
   12354:	ldr	r3, [sp, #164]	; 0xa4
   12358:	ands	r4, r3, #2
   1235c:	movne	r3, #1
   12360:	moveq	r3, #0
   12364:	str	r3, [sp, #32]
   12368:	str	r0, [sp, #64]	; 0x40
   1236c:	cmp	r8, #10
   12370:	ldrls	pc, [pc, r8, lsl #2]
   12374:	b	13b24 <close@plt+0x2c08>
   12378:	andeq	r2, r1, ip, ror #14
   1237c:	andeq	r2, r1, r4, lsl #16
   12380:	andeq	r2, r1, r4, lsl #28
   12384:	andeq	r2, r1, r4, lsr #16
   12388:	ldrdeq	r2, [r1], -r8
   1238c:	andeq	r2, r1, r0, lsr #14
   12390:	muleq	r1, ip, r7
   12394:	ldrdeq	r2, [r1], -r4
   12398:	andeq	r2, r1, r4, lsr #7
   1239c:	andeq	r2, r1, r4, lsr #7
   123a0:	andeq	r2, r1, r4, lsr #7
   123a4:	cmp	r8, #10
   123a8:	beq	123cc <close@plt+0x14b0>
   123ac:	mov	r1, r8
   123b0:	ldr	r0, [pc, #3428]	; 1311c <close@plt+0x2200>
   123b4:	bl	121c8 <close@plt+0x12ac>
   123b8:	mov	r1, r8
   123bc:	str	r0, [sp, #80]	; 0x50
   123c0:	ldr	r0, [pc, #3420]	; 13124 <close@plt+0x2208>
   123c4:	bl	121c8 <close@plt+0x12ac>
   123c8:	str	r0, [sp, #76]	; 0x4c
   123cc:	cmp	r4, #0
   123d0:	movne	r4, #0
   123d4:	beq	137e4 <close@plt+0x28c8>
   123d8:	ldr	r7, [sp, #76]	; 0x4c
   123dc:	mov	r5, #0
   123e0:	mov	r6, #1
   123e4:	mov	r0, r7
   123e8:	str	r6, [sp, #40]	; 0x28
   123ec:	str	r5, [sp, #68]	; 0x44
   123f0:	bl	10e50 <strlen@plt>
   123f4:	str	r6, [sp, #28]
   123f8:	str	r5, [sp, #44]	; 0x2c
   123fc:	str	r5, [sp, #72]	; 0x48
   12400:	str	r7, [sp, #60]	; 0x3c
   12404:	str	r0, [sp, #52]	; 0x34
   12408:	str	r8, [sp, #160]	; 0xa0
   1240c:	mov	r8, fp
   12410:	ldr	fp, [sp, #160]	; 0xa0
   12414:	mov	r9, #0
   12418:	ldr	r3, [sp, #24]
   1241c:	cmn	r3, #1
   12420:	beq	12988 <close@plt+0x1a6c>
   12424:	ldr	r3, [sp, #24]
   12428:	subs	r6, r3, r9
   1242c:	movne	r6, #1
   12430:	cmp	r6, #0
   12434:	beq	129a0 <close@plt+0x1a84>
   12438:	ldr	r7, [sp, #28]
   1243c:	ldr	r0, [sp, #36]	; 0x24
   12440:	cmp	fp, #2
   12444:	moveq	r7, #0
   12448:	andne	r7, r7, #1
   1244c:	add	r3, r0, r9
   12450:	cmp	r7, #0
   12454:	str	r3, [sp, #48]	; 0x30
   12458:	beq	12e44 <close@plt+0x1f28>
   1245c:	ldr	r2, [sp, #52]	; 0x34
   12460:	cmp	r2, #0
   12464:	beq	13128 <close@plt+0x220c>
   12468:	ldr	r1, [sp, #24]
   1246c:	cmp	r2, #1
   12470:	mov	r3, r2
   12474:	movls	r3, #0
   12478:	movhi	r3, #1
   1247c:	cmn	r1, #1
   12480:	movne	r3, #0
   12484:	cmp	r3, #0
   12488:	add	r5, r9, r2
   1248c:	beq	12498 <close@plt+0x157c>
   12490:	bl	10e50 <strlen@plt>
   12494:	str	r0, [sp, #24]
   12498:	ldr	r3, [sp, #24]
   1249c:	cmp	r5, r3
   124a0:	bhi	13128 <close@plt+0x220c>
   124a4:	ldr	r2, [sp, #52]	; 0x34
   124a8:	ldr	r1, [sp, #60]	; 0x3c
   124ac:	ldr	r0, [sp, #48]	; 0x30
   124b0:	bl	10d3c <memcmp@plt>
   124b4:	cmp	r0, #0
   124b8:	bne	13128 <close@plt+0x220c>
   124bc:	ldr	r3, [sp, #32]
   124c0:	cmp	r3, #0
   124c4:	bne	139e4 <close@plt+0x2ac8>
   124c8:	ldr	r3, [sp, #48]	; 0x30
   124cc:	ldrb	r5, [r3]
   124d0:	cmp	r5, #126	; 0x7e
   124d4:	ldrls	pc, [pc, r5, lsl #2]
   124d8:	b	12da8 <close@plt+0x1e8c>
   124dc:	muleq	r1, r4, ip
   124e0:	andeq	r2, r1, r8, lsr #27
   124e4:	andeq	r2, r1, r8, lsr #27
   124e8:	andeq	r2, r1, r8, lsr #27
   124ec:	andeq	r2, r1, r8, lsr #27
   124f0:	andeq	r2, r1, r8, lsr #27
   124f4:	andeq	r2, r1, r8, lsr #27
   124f8:	andeq	r2, r1, r0, ror #26
   124fc:	andeq	r2, r1, r0, asr sp
   12500:	andeq	r2, r1, r0, asr ip
   12504:	andeq	r2, r1, r8, lsl ip
   12508:	andeq	r2, r1, r0, ror ip
   1250c:	andeq	r2, r1, r8, asr ip
   12510:	andeq	r2, r1, r8, lsl #23
   12514:	andeq	r2, r1, r8, lsr #27
   12518:	andeq	r2, r1, r8, lsr #27
   1251c:	andeq	r2, r1, r8, lsr #27
   12520:	andeq	r2, r1, r8, lsr #27
   12524:	andeq	r2, r1, r8, lsr #27
   12528:	andeq	r2, r1, r8, lsr #27
   1252c:	andeq	r2, r1, r8, lsr #27
   12530:	andeq	r2, r1, r8, lsr #27
   12534:	andeq	r2, r1, r8, lsr #27
   12538:	andeq	r2, r1, r8, lsr #27
   1253c:	andeq	r2, r1, r8, lsr #27
   12540:	andeq	r2, r1, r8, lsr #27
   12544:	andeq	r2, r1, r8, lsr #27
   12548:	andeq	r2, r1, r8, lsr #27
   1254c:	andeq	r2, r1, r8, lsr #27
   12550:	andeq	r2, r1, r8, lsr #27
   12554:	andeq	r2, r1, r8, lsr #27
   12558:	andeq	r2, r1, r8, lsr #27
   1255c:	andeq	r2, r1, r8, ror #26
   12560:	andeq	r2, r1, ip, ror ip
   12564:	andeq	r2, r1, ip, ror ip
   12568:	andeq	r2, r1, r0, lsl #27
   1256c:	andeq	r2, r1, ip, ror ip
   12570:	muleq	r1, ip, sp
   12574:	andeq	r2, r1, ip, ror ip
   12578:			; <UNDEFINED> instruction: 0x00012abc
   1257c:	andeq	r2, r1, ip, ror ip
   12580:	andeq	r2, r1, ip, ror ip
   12584:	andeq	r2, r1, ip, ror ip
   12588:	muleq	r1, ip, sp
   1258c:	muleq	r1, ip, sp
   12590:	muleq	r1, ip, sp
   12594:	muleq	r1, ip, sp
   12598:	muleq	r1, ip, sp
   1259c:	muleq	r1, ip, sp
   125a0:	muleq	r1, ip, sp
   125a4:	muleq	r1, ip, sp
   125a8:	muleq	r1, ip, sp
   125ac:	muleq	r1, ip, sp
   125b0:	muleq	r1, ip, sp
   125b4:	muleq	r1, ip, sp
   125b8:	muleq	r1, ip, sp
   125bc:	muleq	r1, ip, sp
   125c0:	muleq	r1, ip, sp
   125c4:	muleq	r1, ip, sp
   125c8:	andeq	r2, r1, ip, ror ip
   125cc:	andeq	r2, r1, ip, ror ip
   125d0:	andeq	r2, r1, ip, ror ip
   125d4:	andeq	r2, r1, ip, ror ip
   125d8:	muleq	r1, r0, sl
   125dc:	andeq	r2, r1, r8, lsr #27
   125e0:	muleq	r1, ip, sp
   125e4:	muleq	r1, ip, sp
   125e8:	muleq	r1, ip, sp
   125ec:	muleq	r1, ip, sp
   125f0:	muleq	r1, ip, sp
   125f4:	muleq	r1, ip, sp
   125f8:	muleq	r1, ip, sp
   125fc:	muleq	r1, ip, sp
   12600:	muleq	r1, ip, sp
   12604:	muleq	r1, ip, sp
   12608:	muleq	r1, ip, sp
   1260c:	muleq	r1, ip, sp
   12610:	muleq	r1, ip, sp
   12614:	muleq	r1, ip, sp
   12618:	muleq	r1, ip, sp
   1261c:	muleq	r1, ip, sp
   12620:	muleq	r1, ip, sp
   12624:	muleq	r1, ip, sp
   12628:	muleq	r1, ip, sp
   1262c:	muleq	r1, ip, sp
   12630:	muleq	r1, ip, sp
   12634:	muleq	r1, ip, sp
   12638:	muleq	r1, ip, sp
   1263c:	muleq	r1, ip, sp
   12640:	muleq	r1, ip, sp
   12644:	muleq	r1, ip, sp
   12648:	andeq	r2, r1, ip, ror ip
   1264c:	andeq	r2, r1, r8, asr #20
   12650:	muleq	r1, ip, sp
   12654:	andeq	r2, r1, ip, ror ip
   12658:	muleq	r1, ip, sp
   1265c:	andeq	r2, r1, ip, ror ip
   12660:	muleq	r1, ip, sp
   12664:	muleq	r1, ip, sp
   12668:	muleq	r1, ip, sp
   1266c:	muleq	r1, ip, sp
   12670:	muleq	r1, ip, sp
   12674:	muleq	r1, ip, sp
   12678:	muleq	r1, ip, sp
   1267c:	muleq	r1, ip, sp
   12680:	muleq	r1, ip, sp
   12684:	muleq	r1, ip, sp
   12688:	muleq	r1, ip, sp
   1268c:	muleq	r1, ip, sp
   12690:	muleq	r1, ip, sp
   12694:	muleq	r1, ip, sp
   12698:	muleq	r1, ip, sp
   1269c:	muleq	r1, ip, sp
   126a0:	muleq	r1, ip, sp
   126a4:	muleq	r1, ip, sp
   126a8:	muleq	r1, ip, sp
   126ac:	muleq	r1, ip, sp
   126b0:	muleq	r1, ip, sp
   126b4:	muleq	r1, ip, sp
   126b8:	muleq	r1, ip, sp
   126bc:	muleq	r1, ip, sp
   126c0:	muleq	r1, ip, sp
   126c4:	muleq	r1, ip, sp
   126c8:	andeq	r2, r1, r0, ror #16
   126cc:	andeq	r2, r1, ip, ror ip
   126d0:	andeq	r2, r1, r0, ror #16
   126d4:	andeq	r2, r1, r0, lsl #27
   126d8:	cmp	r4, #0
   126dc:	moveq	r3, #1
   126e0:	streq	r3, [sp, #28]
   126e4:	beq	12e10 <close@plt+0x1ef4>
   126e8:	mov	r3, #0
   126ec:	mov	r4, r3
   126f0:	mov	r2, #1
   126f4:	str	r2, [sp, #40]	; 0x28
   126f8:	str	r3, [sp, #68]	; 0x44
   126fc:	str	r2, [sp, #32]
   12700:	str	r2, [sp, #52]	; 0x34
   12704:	ldr	r3, [pc, #2584]	; 13124 <close@plt+0x2208>
   12708:	str	r4, [sp, #44]	; 0x2c
   1270c:	str	r4, [sp, #72]	; 0x48
   12710:	str	r4, [sp, #28]
   12714:	str	r3, [sp, #60]	; 0x3c
   12718:	mov	r8, #2
   1271c:	b	12408 <close@plt+0x14ec>
   12720:	cmp	r4, #0
   12724:	bne	139b0 <close@plt+0x2a94>
   12728:	cmp	sl, #0
   1272c:	beq	13770 <close@plt+0x2854>
   12730:	mov	r3, #34	; 0x22
   12734:	strb	r3, [fp]
   12738:	ldr	r3, [pc, #2528]	; 13120 <close@plt+0x2204>
   1273c:	mov	r1, r4
   12740:	mov	r2, #1
   12744:	str	r4, [sp, #68]	; 0x44
   12748:	str	r2, [sp, #40]	; 0x28
   1274c:	mov	r4, r2
   12750:	str	r1, [sp, #44]	; 0x2c
   12754:	str	r1, [sp, #72]	; 0x48
   12758:	str	r1, [sp, #32]
   1275c:	str	r2, [sp, #28]
   12760:	str	r2, [sp, #52]	; 0x34
   12764:	str	r3, [sp, #60]	; 0x3c
   12768:	b	12408 <close@plt+0x14ec>
   1276c:	mov	r3, #0
   12770:	str	r3, [sp, #68]	; 0x44
   12774:	str	r3, [sp, #44]	; 0x2c
   12778:	str	r3, [sp, #32]
   1277c:	str	r3, [sp, #28]
   12780:	str	r3, [sp, #60]	; 0x3c
   12784:	mov	r3, #1
   12788:	str	r8, [sp, #72]	; 0x48
   1278c:	str	r8, [sp, #52]	; 0x34
   12790:	mov	r4, r8
   12794:	str	r3, [sp, #40]	; 0x28
   12798:	b	12408 <close@plt+0x14ec>
   1279c:	mov	r3, #1
   127a0:	str	r3, [sp, #40]	; 0x28
   127a4:	str	r3, [sp, #32]
   127a8:	str	r3, [sp, #28]
   127ac:	str	r3, [sp, #52]	; 0x34
   127b0:	ldr	r3, [pc, #2408]	; 13120 <close@plt+0x2204>
   127b4:	mov	r2, #0
   127b8:	mov	r4, r2
   127bc:	str	r2, [sp, #68]	; 0x44
   127c0:	str	r2, [sp, #44]	; 0x2c
   127c4:	str	r2, [sp, #72]	; 0x48
   127c8:	str	r3, [sp, #60]	; 0x3c
   127cc:	mov	r8, #5
   127d0:	b	12408 <close@plt+0x14ec>
   127d4:	mov	r3, #0
   127d8:	mov	r2, #1
   127dc:	str	r2, [sp, #40]	; 0x28
   127e0:	mov	r4, r3
   127e4:	str	r3, [sp, #68]	; 0x44
   127e8:	str	r2, [sp, #28]
   127ec:	str	r3, [sp, #44]	; 0x2c
   127f0:	str	r3, [sp, #72]	; 0x48
   127f4:	str	r3, [sp, #32]
   127f8:	str	r3, [sp, #52]	; 0x34
   127fc:	str	r3, [sp, #60]	; 0x3c
   12800:	b	12408 <close@plt+0x14ec>
   12804:	mov	r2, #1
   12808:	mov	r3, #0
   1280c:	str	r2, [sp, #40]	; 0x28
   12810:	mov	r4, r3
   12814:	str	r3, [sp, #68]	; 0x44
   12818:	str	r8, [sp, #52]	; 0x34
   1281c:	str	r2, [sp, #32]
   12820:	b	12704 <close@plt+0x17e8>
   12824:	mov	r3, #1
   12828:	str	r3, [sp, #40]	; 0x28
   1282c:	str	r3, [sp, #32]
   12830:	str	r3, [sp, #28]
   12834:	str	r3, [sp, #52]	; 0x34
   12838:	ldr	r3, [pc, #2276]	; 13124 <close@plt+0x2208>
   1283c:	mov	r2, #0
   12840:	mov	r4, r2
   12844:	str	r2, [sp, #68]	; 0x44
   12848:	str	r2, [sp, #44]	; 0x2c
   1284c:	str	r2, [sp, #72]	; 0x48
   12850:	str	r3, [sp, #60]	; 0x3c
   12854:	mov	r8, #2
   12858:	b	12408 <close@plt+0x14ec>
   1285c:	mov	r7, #0
   12860:	ldr	r3, [sp, #24]
   12864:	cmn	r3, #1
   12868:	beq	133a4 <close@plt+0x2488>
   1286c:	ldr	r3, [sp, #24]
   12870:	subs	r3, r3, #1
   12874:	movne	r3, #1
   12878:	cmp	r3, #0
   1287c:	sub	r2, fp, #2
   12880:	clz	r2, r2
   12884:	lsr	r2, r2, #5
   12888:	bne	12a84 <close@plt+0x1b68>
   1288c:	cmp	r9, #0
   12890:	bne	12a84 <close@plt+0x1b68>
   12894:	ldr	r3, [sp, #32]
   12898:	tst	r3, r2
   1289c:	bne	12ba4 <close@plt+0x1c88>
   128a0:	ldr	r3, [sp, #28]
   128a4:	eor	r3, r3, #1
   128a8:	orr	r3, r2, r3
   128ac:	ldr	r2, [sp, #32]
   128b0:	eor	r3, r3, #1
   128b4:	orrs	r3, r2, r3
   128b8:	beq	128e8 <close@plt+0x19cc>
   128bc:	mov	r3, #0
   128c0:	ldr	r1, [sp, #56]	; 0x38
   128c4:	cmp	r1, #0
   128c8:	beq	128e8 <close@plt+0x19cc>
   128cc:	lsr	r2, r5, #5
   128d0:	and	r0, r5, #31
   128d4:	uxtb	r2, r2
   128d8:	ldr	r1, [r1, r2, lsl #2]
   128dc:	lsr	r2, r1, r0
   128e0:	tst	r2, #1
   128e4:	bne	128f0 <close@plt+0x19d4>
   128e8:	cmp	r7, #0
   128ec:	beq	12b40 <close@plt+0x1c24>
   128f0:	sub	r2, fp, #2
   128f4:	clz	r2, r2
   128f8:	lsr	r2, r2, #5
   128fc:	ldr	r3, [sp, #32]
   12900:	cmp	r3, #0
   12904:	bne	12c30 <close@plt+0x1d14>
   12908:	ldr	r3, [sp, #44]	; 0x2c
   1290c:	eor	r3, r3, #1
   12910:	ands	r3, r2, r3
   12914:	beq	1294c <close@plt+0x1a30>
   12918:	cmp	sl, r4
   1291c:	movhi	r2, #39	; 0x27
   12920:	strbhi	r2, [r8, r4]
   12924:	add	r2, r4, #1
   12928:	cmp	r2, sl
   1292c:	movcc	r1, #36	; 0x24
   12930:	strbcc	r1, [r8, r2]
   12934:	add	r2, r4, #2
   12938:	cmp	r2, sl
   1293c:	add	r4, r4, #3
   12940:	movcc	r1, #39	; 0x27
   12944:	strbcc	r1, [r8, r2]
   12948:	str	r3, [sp, #44]	; 0x2c
   1294c:	cmp	r4, sl
   12950:	movcc	r3, #92	; 0x5c
   12954:	strbcc	r3, [r8, r4]
   12958:	add	r9, r9, #1
   1295c:	add	r4, r4, #1
   12960:	cmp	r4, sl
   12964:	ldr	r3, [sp, #40]	; 0x28
   12968:	strbcc	r5, [r8, r4]
   1296c:	cmp	r6, #0
   12970:	moveq	r3, #0
   12974:	str	r3, [sp, #40]	; 0x28
   12978:	ldr	r3, [sp, #24]
   1297c:	add	r4, r4, #1
   12980:	cmn	r3, #1
   12984:	bne	12424 <close@plt+0x1508>
   12988:	ldr	r3, [sp, #36]	; 0x24
   1298c:	ldrb	r6, [r3, r9]
   12990:	adds	r6, r6, #0
   12994:	movne	r6, #1
   12998:	cmp	r6, #0
   1299c:	bne	12438 <close@plt+0x151c>
   129a0:	str	fp, [sp, #160]	; 0xa0
   129a4:	mov	fp, r8
   129a8:	ldr	r8, [sp, #160]	; 0xa0
   129ac:	ldr	r1, [sp, #32]
   129b0:	cmp	r4, #0
   129b4:	sub	r2, r8, #2
   129b8:	clz	r2, r2
   129bc:	lsr	r2, r2, #5
   129c0:	andeq	r3, r2, r1
   129c4:	movne	r3, #0
   129c8:	cmp	r3, #0
   129cc:	bne	13ab8 <close@plt+0x2b9c>
   129d0:	eor	r3, r1, #1
   129d4:	ands	r2, r2, r3
   129d8:	beq	139f4 <close@plt+0x2ad8>
   129dc:	ldr	r3, [sp, #68]	; 0x44
   129e0:	cmp	r3, #0
   129e4:	beq	139f8 <close@plt+0x2adc>
   129e8:	ldr	r3, [sp, #40]	; 0x28
   129ec:	cmp	r3, #0
   129f0:	bne	13a74 <close@plt+0x2b58>
   129f4:	ldr	r3, [sp, #72]	; 0x48
   129f8:	adds	r3, r3, #0
   129fc:	movne	r3, #1
   12a00:	cmp	sl, #0
   12a04:	movne	r3, #0
   12a08:	cmp	r3, #0
   12a0c:	ldreq	r2, [sp, #68]	; 0x44
   12a10:	beq	139f8 <close@plt+0x2adc>
   12a14:	ldr	sl, [sp, #72]	; 0x48
   12a18:	str	r3, [sp, #68]	; 0x44
   12a1c:	ldr	r3, [pc, #1792]	; 13124 <close@plt+0x2208>
   12a20:	mov	r2, #39	; 0x27
   12a24:	mov	r4, #1
   12a28:	str	r3, [sp, #60]	; 0x3c
   12a2c:	mov	r3, #0
   12a30:	strb	r2, [fp]
   12a34:	str	r4, [sp, #52]	; 0x34
   12a38:	mov	r8, #2
   12a3c:	str	r3, [sp, #32]
   12a40:	b	12408 <close@plt+0x14ec>
   12a44:	mov	r7, #0
   12a48:	cmp	fp, #2
   12a4c:	beq	13384 <close@plt+0x2468>
   12a50:	ldr	r3, [sp, #52]	; 0x34
   12a54:	ldr	r2, [sp, #28]
   12a58:	ldr	r1, [sp, #32]
   12a5c:	cmp	r3, #0
   12a60:	andne	r2, r2, r1
   12a64:	moveq	r2, #0
   12a68:	cmp	r2, #0
   12a6c:	moveq	r5, #92	; 0x5c
   12a70:	moveq	r3, r5
   12a74:	bne	13390 <close@plt+0x2474>
   12a78:	ldr	r1, [sp, #28]
   12a7c:	cmp	r1, #0
   12a80:	bne	13b00 <close@plt+0x2be4>
   12a84:	mov	r6, #0
   12a88:	b	128a0 <close@plt+0x1984>
   12a8c:	mov	r7, #0
   12a90:	cmp	fp, #2
   12a94:	beq	133f4 <close@plt+0x24d8>
   12a98:	cmp	fp, #5
   12a9c:	beq	133b8 <close@plt+0x249c>
   12aa0:	sub	r2, fp, #2
   12aa4:	mov	r6, #0
   12aa8:	clz	r2, r2
   12aac:	mov	r5, #63	; 0x3f
   12ab0:	lsr	r2, r2, #5
   12ab4:	b	128a0 <close@plt+0x1984>
   12ab8:	mov	r7, #0
   12abc:	cmp	fp, #2
   12ac0:	strne	r6, [sp, #68]	; 0x44
   12ac4:	movne	r2, #0
   12ac8:	movne	r5, #39	; 0x27
   12acc:	bne	128a0 <close@plt+0x1984>
   12ad0:	ldr	r3, [sp, #32]
   12ad4:	cmp	r3, #0
   12ad8:	bne	137d4 <close@plt+0x28b8>
   12adc:	cmp	sl, #0
   12ae0:	ldr	r3, [sp, #72]	; 0x48
   12ae4:	clz	r3, r3
   12ae8:	lsr	r3, r3, #5
   12aec:	moveq	r3, #0
   12af0:	cmp	r3, #0
   12af4:	bne	13708 <close@plt+0x27ec>
   12af8:	cmp	sl, r4
   12afc:	movhi	r3, #39	; 0x27
   12b00:	strbhi	r3, [r8, r4]
   12b04:	add	r3, r4, #1
   12b08:	cmp	sl, r3
   12b0c:	movhi	r2, #92	; 0x5c
   12b10:	strbhi	r2, [r8, r3]
   12b14:	add	r3, r4, #2
   12b18:	cmp	sl, r3
   12b1c:	movhi	r2, #39	; 0x27
   12b20:	strbhi	r2, [r8, r3]
   12b24:	mov	r3, #0
   12b28:	cmp	r7, #0
   12b2c:	add	r4, r4, #3
   12b30:	str	r3, [sp, #44]	; 0x2c
   12b34:	str	r6, [sp, #68]	; 0x44
   12b38:	mov	r5, #39	; 0x27
   12b3c:	bne	128f0 <close@plt+0x19d4>
   12b40:	ldr	r2, [sp, #44]	; 0x2c
   12b44:	eor	r3, r3, #1
   12b48:	and	r3, r3, r2
   12b4c:	add	r9, r9, #1
   12b50:	uxtb	r3, r3
   12b54:	cmp	r3, #0
   12b58:	beq	12960 <close@plt+0x1a44>
   12b5c:	cmp	sl, r4
   12b60:	movhi	r3, #39	; 0x27
   12b64:	strbhi	r3, [r8, r4]
   12b68:	add	r3, r4, #1
   12b6c:	cmp	sl, r3
   12b70:	movhi	r2, #39	; 0x27
   12b74:	strbhi	r2, [r8, r3]
   12b78:	mov	r3, #0
   12b7c:	add	r4, r4, #2
   12b80:	str	r3, [sp, #44]	; 0x2c
   12b84:	b	12960 <close@plt+0x1a44>
   12b88:	mov	r3, #114	; 0x72
   12b8c:	ldr	r1, [sp, #32]
   12b90:	sub	r2, fp, #2
   12b94:	clz	r2, r2
   12b98:	lsr	r2, r2, #5
   12b9c:	tst	r2, r1
   12ba0:	beq	12a78 <close@plt+0x1b5c>
   12ba4:	mov	fp, r8
   12ba8:	mov	r8, #2
   12bac:	ldr	r3, [sp, #28]
   12bb0:	cmp	r3, #0
   12bb4:	movne	r8, #4
   12bb8:	ldr	r3, [sp, #164]	; 0xa4
   12bbc:	mov	ip, #0
   12bc0:	bic	r3, r3, #2
   12bc4:	str	r3, [sp, #4]
   12bc8:	ldr	r3, [sp, #76]	; 0x4c
   12bcc:	str	r8, [sp]
   12bd0:	str	r3, [sp, #16]
   12bd4:	ldr	r3, [sp, #80]	; 0x50
   12bd8:	ldr	r2, [sp, #36]	; 0x24
   12bdc:	str	r3, [sp, #12]
   12be0:	mov	r1, sl
   12be4:	ldr	r3, [sp, #24]
   12be8:	mov	r0, fp
   12bec:	str	ip, [sp, #8]
   12bf0:	bl	12310 <close@plt+0x13f4>
   12bf4:	mov	r4, r0
   12bf8:	ldr	r3, [pc, #1304]	; 13118 <close@plt+0x21fc>
   12bfc:	ldr	r2, [sp, #116]	; 0x74
   12c00:	mov	r0, r4
   12c04:	ldr	r3, [r3]
   12c08:	cmp	r2, r3
   12c0c:	bne	13afc <close@plt+0x2be0>
   12c10:	add	sp, sp, #124	; 0x7c
   12c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c18:	mov	r5, #110	; 0x6e
   12c1c:	ldr	r3, [sp, #32]
   12c20:	mov	r2, #0
   12c24:	cmp	r3, #0
   12c28:	mov	r6, r2
   12c2c:	beq	12908 <close@plt+0x19ec>
   12c30:	str	fp, [sp, #160]	; 0xa0
   12c34:	mov	fp, r8
   12c38:	ldr	r8, [sp, #160]	; 0xa0
   12c3c:	mov	r3, r2
   12c40:	ldr	r2, [sp, #28]
   12c44:	and	r2, r2, r3
   12c48:	str	r2, [sp, #28]
   12c4c:	b	12bac <close@plt+0x1c90>
   12c50:	mov	r5, #116	; 0x74
   12c54:	b	12c1c <close@plt+0x1d00>
   12c58:	mov	r5, #102	; 0x66
   12c5c:	ldr	r3, [sp, #32]
   12c60:	cmp	r3, #0
   12c64:	bne	13810 <close@plt+0x28f4>
   12c68:	mov	r6, #0
   12c6c:	b	1294c <close@plt+0x1a30>
   12c70:	mov	r5, #118	; 0x76
   12c74:	b	12c5c <close@plt+0x1d40>
   12c78:	mov	r7, #0
   12c7c:	mov	r6, #0
   12c80:	b	128bc <close@plt+0x19a0>
   12c84:	ldr	r3, [sp, #32]
   12c88:	cmp	r3, #0
   12c8c:	bne	13a54 <close@plt+0x2b38>
   12c90:	mov	r7, r3
   12c94:	ldr	r3, [sp, #44]	; 0x2c
   12c98:	sub	r2, fp, #2
   12c9c:	eor	r3, r3, #1
   12ca0:	clz	r2, r2
   12ca4:	lsr	r2, r2, #5
   12ca8:	ands	r3, r2, r3
   12cac:	beq	136f4 <close@plt+0x27d8>
   12cb0:	cmp	sl, r4
   12cb4:	movhi	r1, #39	; 0x27
   12cb8:	strbhi	r1, [r8, r4]
   12cbc:	add	r1, r4, #1
   12cc0:	cmp	sl, r1
   12cc4:	movhi	r0, #36	; 0x24
   12cc8:	strbhi	r0, [r8, r1]
   12ccc:	add	r1, r4, #2
   12cd0:	cmp	sl, r1
   12cd4:	movhi	r0, #39	; 0x27
   12cd8:	strbhi	r0, [r8, r1]
   12cdc:	add	r1, r4, #3
   12ce0:	cmp	sl, r1
   12ce4:	bls	13754 <close@plt+0x2838>
   12ce8:	mov	r4, r1
   12cec:	mov	r1, #92	; 0x5c
   12cf0:	strb	r1, [r8, r4]
   12cf4:	mov	r1, r4
   12cf8:	str	r3, [sp, #44]	; 0x2c
   12cfc:	cmp	fp, #2
   12d00:	add	r4, r4, #1
   12d04:	beq	1379c <close@plt+0x2880>
   12d08:	ldr	r0, [sp, #24]
   12d0c:	add	r3, r9, #1
   12d10:	cmp	r3, r0
   12d14:	bcs	12d2c <close@plt+0x1e10>
   12d18:	ldr	r0, [sp, #36]	; 0x24
   12d1c:	ldrb	r3, [r0, r3]
   12d20:	sub	r3, r3, #48	; 0x30
   12d24:	cmp	r3, #9
   12d28:	bls	137ac <close@plt+0x2890>
   12d2c:	mov	r5, #48	; 0x30
   12d30:	ldr	r3, [sp, #28]
   12d34:	eor	r3, r3, #1
   12d38:	orrs	r2, r2, r3
   12d3c:	mov	r3, r6
   12d40:	moveq	r6, r2
   12d44:	beq	128c0 <close@plt+0x19a4>
   12d48:	mov	r6, #0
   12d4c:	b	128e8 <close@plt+0x19cc>
   12d50:	mov	r2, #0
   12d54:	mov	r6, r2
   12d58:	mov	r5, #98	; 0x62
   12d5c:	b	12908 <close@plt+0x19ec>
   12d60:	mov	r5, #97	; 0x61
   12d64:	b	12c68 <close@plt+0x1d4c>
   12d68:	mov	r3, r7
   12d6c:	mov	r6, r7
   12d70:	mov	r2, #0
   12d74:	mov	r7, r3
   12d78:	mov	r5, #32
   12d7c:	b	128a0 <close@plt+0x1984>
   12d80:	cmp	r9, #0
   12d84:	mov	r3, r7
   12d88:	bne	13350 <close@plt+0x2434>
   12d8c:	mov	r6, r7
   12d90:	mov	r2, r9
   12d94:	mov	r7, r3
   12d98:	b	128a0 <close@plt+0x1984>
   12d9c:	mov	r6, r7
   12da0:	b	128bc <close@plt+0x19a0>
   12da4:	mov	r7, #0
   12da8:	ldr	r3, [sp, #64]	; 0x40
   12dac:	cmp	r3, #1
   12db0:	bne	1340c <close@plt+0x24f0>
   12db4:	bl	10e38 <__ctype_b_loc@plt>
   12db8:	ldr	r2, [sp, #64]	; 0x40
   12dbc:	sxth	r3, r5
   12dc0:	mov	ip, r2
   12dc4:	lsl	r3, r3, #1
   12dc8:	ldr	r2, [r0]
   12dcc:	ldrh	r3, [r2, r3]
   12dd0:	and	r3, r3, #16384	; 0x4000
   12dd4:	cmp	r3, #0
   12dd8:	ldr	r3, [sp, #28]
   12ddc:	movne	r6, #1
   12de0:	moveq	r6, #0
   12de4:	movne	r2, #0
   12de8:	andeq	r2, r3, #1
   12dec:	cmp	r2, #0
   12df0:	bne	1371c <close@plt+0x2800>
   12df4:	sub	r2, fp, #2
   12df8:	clz	r2, r2
   12dfc:	lsr	r2, r2, #5
   12e00:	b	128a0 <close@plt+0x1984>
   12e04:	cmp	r4, #0
   12e08:	bne	13ac8 <close@plt+0x2bac>
   12e0c:	str	r4, [sp, #28]
   12e10:	cmp	sl, #0
   12e14:	bne	13b0c <close@plt+0x2bf0>
   12e18:	ldr	r3, [pc, #772]	; 13124 <close@plt+0x2208>
   12e1c:	mov	r4, #1
   12e20:	str	r4, [sp, #40]	; 0x28
   12e24:	str	r3, [sp, #60]	; 0x3c
   12e28:	str	r4, [sp, #52]	; 0x34
   12e2c:	str	sl, [sp, #72]	; 0x48
   12e30:	str	sl, [sp, #68]	; 0x44
   12e34:	str	sl, [sp, #44]	; 0x2c
   12e38:	str	sl, [sp, #32]
   12e3c:	mov	r8, #2
   12e40:	b	12408 <close@plt+0x14ec>
   12e44:	ldr	r3, [sp, #36]	; 0x24
   12e48:	ldrb	r5, [r3, r9]
   12e4c:	cmp	r5, #126	; 0x7e
   12e50:	ldrls	pc, [pc, r5, lsl #2]
   12e54:	b	12da8 <close@plt+0x1e8c>
   12e58:	andeq	r3, r1, ip, lsl #1
   12e5c:	andeq	r2, r1, r8, lsr #27
   12e60:	andeq	r2, r1, r8, lsr #27
   12e64:	andeq	r2, r1, r8, lsr #27
   12e68:	andeq	r2, r1, r8, lsr #27
   12e6c:	andeq	r2, r1, r8, lsr #27
   12e70:	andeq	r2, r1, r8, lsr #27
   12e74:	andeq	r3, r1, r8, ror r0
   12e78:	andeq	r3, r1, r4, rrx
   12e7c:	andeq	r3, r1, ip, asr r0
   12e80:	andeq	r3, r1, r4, asr r0
   12e84:	andeq	r3, r1, r4, lsl #2
   12e88:	strdeq	r3, [r1], -r0
   12e8c:	andeq	r2, r1, r8, lsl #23
   12e90:	andeq	r2, r1, r8, lsr #27
   12e94:	andeq	r2, r1, r8, lsr #27
   12e98:	andeq	r2, r1, r8, lsr #27
   12e9c:	andeq	r2, r1, r8, lsr #27
   12ea0:	andeq	r2, r1, r8, lsr #27
   12ea4:	andeq	r2, r1, r8, lsr #27
   12ea8:	andeq	r2, r1, r8, lsr #27
   12eac:	andeq	r2, r1, r8, lsr #27
   12eb0:	andeq	r2, r1, r8, lsr #27
   12eb4:	andeq	r2, r1, r8, lsr #27
   12eb8:	andeq	r2, r1, r8, lsr #27
   12ebc:	andeq	r2, r1, r8, lsr #27
   12ec0:	andeq	r2, r1, r8, lsr #27
   12ec4:	andeq	r2, r1, r8, lsr #27
   12ec8:	andeq	r2, r1, r8, lsr #27
   12ecc:	andeq	r2, r1, r8, lsr #27
   12ed0:	andeq	r2, r1, r8, lsr #27
   12ed4:	andeq	r2, r1, r8, lsr #27
   12ed8:	andeq	r3, r1, r0, ror #1
   12edc:	andeq	r3, r1, ip, asr #1
   12ee0:	andeq	r3, r1, ip, asr #1
   12ee4:	strheq	r3, [r1], -ip
   12ee8:	andeq	r3, r1, ip, asr #1
   12eec:	strdeq	r2, [r1], -r4
   12ef0:	andeq	r3, r1, ip, asr #1
   12ef4:			; <UNDEFINED> instruction: 0x00012abc
   12ef8:	andeq	r3, r1, ip, asr #1
   12efc:	andeq	r3, r1, ip, asr #1
   12f00:	andeq	r3, r1, ip, asr #1
   12f04:	strdeq	r2, [r1], -r4
   12f08:	strdeq	r2, [r1], -r4
   12f0c:	strdeq	r2, [r1], -r4
   12f10:	strdeq	r2, [r1], -r4
   12f14:	strdeq	r2, [r1], -r4
   12f18:	strdeq	r2, [r1], -r4
   12f1c:	strdeq	r2, [r1], -r4
   12f20:	strdeq	r2, [r1], -r4
   12f24:	strdeq	r2, [r1], -r4
   12f28:	strdeq	r2, [r1], -r4
   12f2c:	strdeq	r2, [r1], -r4
   12f30:	strdeq	r2, [r1], -r4
   12f34:	strdeq	r2, [r1], -r4
   12f38:	strdeq	r2, [r1], -r4
   12f3c:	strdeq	r2, [r1], -r4
   12f40:	strdeq	r2, [r1], -r4
   12f44:	andeq	r3, r1, ip, asr #1
   12f48:	andeq	r3, r1, ip, asr #1
   12f4c:	andeq	r3, r1, ip, asr #1
   12f50:	andeq	r3, r1, ip, asr #1
   12f54:	muleq	r1, r0, sl
   12f58:	andeq	r2, r1, r8, lsr #27
   12f5c:	strdeq	r2, [r1], -r4
   12f60:	strdeq	r2, [r1], -r4
   12f64:	strdeq	r2, [r1], -r4
   12f68:	strdeq	r2, [r1], -r4
   12f6c:	strdeq	r2, [r1], -r4
   12f70:	strdeq	r2, [r1], -r4
   12f74:	strdeq	r2, [r1], -r4
   12f78:	strdeq	r2, [r1], -r4
   12f7c:	strdeq	r2, [r1], -r4
   12f80:	strdeq	r2, [r1], -r4
   12f84:	strdeq	r2, [r1], -r4
   12f88:	strdeq	r2, [r1], -r4
   12f8c:	strdeq	r2, [r1], -r4
   12f90:	strdeq	r2, [r1], -r4
   12f94:	strdeq	r2, [r1], -r4
   12f98:	strdeq	r2, [r1], -r4
   12f9c:	strdeq	r2, [r1], -r4
   12fa0:	strdeq	r2, [r1], -r4
   12fa4:	strdeq	r2, [r1], -r4
   12fa8:	strdeq	r2, [r1], -r4
   12fac:	strdeq	r2, [r1], -r4
   12fb0:	strdeq	r2, [r1], -r4
   12fb4:	strdeq	r2, [r1], -r4
   12fb8:	strdeq	r2, [r1], -r4
   12fbc:	strdeq	r2, [r1], -r4
   12fc0:	strdeq	r2, [r1], -r4
   12fc4:	andeq	r3, r1, ip, asr #1
   12fc8:	andeq	r2, r1, r8, asr #20
   12fcc:	strdeq	r2, [r1], -r4
   12fd0:	andeq	r3, r1, ip, asr #1
   12fd4:	strdeq	r2, [r1], -r4
   12fd8:	andeq	r3, r1, ip, asr #1
   12fdc:	strdeq	r2, [r1], -r4
   12fe0:	strdeq	r2, [r1], -r4
   12fe4:	strdeq	r2, [r1], -r4
   12fe8:	strdeq	r2, [r1], -r4
   12fec:	strdeq	r2, [r1], -r4
   12ff0:	strdeq	r2, [r1], -r4
   12ff4:	strdeq	r2, [r1], -r4
   12ff8:	strdeq	r2, [r1], -r4
   12ffc:	strdeq	r2, [r1], -r4
   13000:	strdeq	r2, [r1], -r4
   13004:	strdeq	r2, [r1], -r4
   13008:	strdeq	r2, [r1], -r4
   1300c:	strdeq	r2, [r1], -r4
   13010:	strdeq	r2, [r1], -r4
   13014:	strdeq	r2, [r1], -r4
   13018:	strdeq	r2, [r1], -r4
   1301c:	strdeq	r2, [r1], -r4
   13020:	strdeq	r2, [r1], -r4
   13024:	strdeq	r2, [r1], -r4
   13028:	strdeq	r2, [r1], -r4
   1302c:	strdeq	r2, [r1], -r4
   13030:	strdeq	r2, [r1], -r4
   13034:	strdeq	r2, [r1], -r4
   13038:	strdeq	r2, [r1], -r4
   1303c:	strdeq	r2, [r1], -r4
   13040:	strdeq	r2, [r1], -r4
   13044:	andeq	r2, r1, r0, ror #16
   13048:	andeq	r3, r1, ip, asr #1
   1304c:	andeq	r2, r1, r0, ror #16
   13050:	strheq	r3, [r1], -ip
   13054:	mov	r3, #110	; 0x6e
   13058:	b	12b8c <close@plt+0x1c70>
   1305c:	mov	r3, #116	; 0x74
   13060:	b	12b8c <close@plt+0x1c70>
   13064:	sub	r2, fp, #2
   13068:	mov	r3, #98	; 0x62
   1306c:	clz	r2, r2
   13070:	lsr	r2, r2, #5
   13074:	b	12a78 <close@plt+0x1b5c>
   13078:	sub	r2, fp, #2
   1307c:	mov	r3, #97	; 0x61
   13080:	clz	r2, r2
   13084:	lsr	r2, r2, #5
   13088:	b	12a78 <close@plt+0x1b5c>
   1308c:	ldr	r3, [sp, #28]
   13090:	cmp	r3, #0
   13094:	bne	12c84 <close@plt+0x1d68>
   13098:	ldr	r3, [sp, #164]	; 0xa4
   1309c:	tst	r3, #1
   130a0:	bne	13714 <close@plt+0x27f8>
   130a4:	ldr	r6, [sp, #28]
   130a8:	sub	r2, fp, #2
   130ac:	mov	r7, r6
   130b0:	clz	r2, r2
   130b4:	lsr	r2, r2, #5
   130b8:	b	128a0 <close@plt+0x1984>
   130bc:	sub	r2, fp, #2
   130c0:	clz	r2, r2
   130c4:	lsr	r2, r2, #5
   130c8:	b	1288c <close@plt+0x1970>
   130cc:	sub	r2, fp, #2
   130d0:	mov	r6, #0
   130d4:	clz	r2, r2
   130d8:	lsr	r2, r2, #5
   130dc:	b	12894 <close@plt+0x1978>
   130e0:	sub	r2, fp, #2
   130e4:	clz	r2, r2
   130e8:	lsr	r2, r2, #5
   130ec:	b	12894 <close@plt+0x1978>
   130f0:	sub	r2, fp, #2
   130f4:	mov	r3, #102	; 0x66
   130f8:	clz	r2, r2
   130fc:	lsr	r2, r2, #5
   13100:	b	12a78 <close@plt+0x1b5c>
   13104:	sub	r2, fp, #2
   13108:	mov	r3, #118	; 0x76
   1310c:	clz	r2, r2
   13110:	lsr	r2, r2, #5
   13114:	b	12a78 <close@plt+0x1b5c>
   13118:	andeq	r5, r2, r8, lsl #30
   1311c:			; <UNDEFINED> instruction: 0x000159b8
   13120:	andeq	r5, r1, r0, lsr #19
   13124:			; <UNDEFINED> instruction: 0x000159b4
   13128:	ldr	r3, [sp, #48]	; 0x30
   1312c:	ldrb	r5, [r3]
   13130:	cmp	r5, #126	; 0x7e
   13134:	ldrls	pc, [pc, r5, lsl #2]
   13138:	b	12da4 <close@plt+0x1e88>
   1313c:	andeq	r2, r1, r4, lsl #25
   13140:	andeq	r2, r1, r4, lsr #27
   13144:	andeq	r2, r1, r4, lsr #27
   13148:	andeq	r2, r1, r4, lsr #27
   1314c:	andeq	r2, r1, r4, lsr #27
   13150:	andeq	r2, r1, r4, lsr #27
   13154:	andeq	r2, r1, r4, lsr #27
   13158:	andeq	r3, r1, ip, ror r3
   1315c:	andeq	r3, r1, r4, ror r3
   13160:	andeq	r2, r1, r0, asr ip
   13164:	andeq	r2, r1, r8, lsl ip
   13168:	andeq	r2, r1, r0, ror ip
   1316c:	andeq	r2, r1, r8, asr ip
   13170:	andeq	r3, r1, r8, ror #6
   13174:	andeq	r2, r1, r4, lsr #27
   13178:	andeq	r2, r1, r4, lsr #27
   1317c:	andeq	r2, r1, r4, lsr #27
   13180:	andeq	r2, r1, r4, lsr #27
   13184:	andeq	r2, r1, r4, lsr #27
   13188:	andeq	r2, r1, r4, lsr #27
   1318c:	andeq	r2, r1, r4, lsr #27
   13190:	andeq	r2, r1, r4, lsr #27
   13194:	andeq	r2, r1, r4, lsr #27
   13198:	andeq	r2, r1, r4, lsr #27
   1319c:	andeq	r2, r1, r4, lsr #27
   131a0:	andeq	r2, r1, r4, lsr #27
   131a4:	andeq	r2, r1, r4, lsr #27
   131a8:	andeq	r2, r1, r4, lsr #27
   131ac:	andeq	r2, r1, r4, lsr #27
   131b0:	andeq	r2, r1, r4, lsr #27
   131b4:	andeq	r2, r1, r4, lsr #27
   131b8:	andeq	r2, r1, r4, lsr #27
   131bc:	andeq	r3, r1, r0, ror #6
   131c0:	andeq	r2, r1, r8, ror ip
   131c4:	andeq	r2, r1, r8, ror ip
   131c8:	andeq	r3, r1, r4, asr #6
   131cc:	andeq	r2, r1, r8, ror ip
   131d0:	andeq	r3, r1, r8, lsr r3
   131d4:	andeq	r2, r1, r8, ror ip
   131d8:			; <UNDEFINED> instruction: 0x00012ab8
   131dc:	andeq	r2, r1, r8, ror ip
   131e0:	andeq	r2, r1, r8, ror ip
   131e4:	andeq	r2, r1, r8, ror ip
   131e8:	andeq	r3, r1, r8, lsr r3
   131ec:	andeq	r3, r1, r8, lsr r3
   131f0:	andeq	r3, r1, r8, lsr r3
   131f4:	andeq	r3, r1, r8, lsr r3
   131f8:	andeq	r3, r1, r8, lsr r3
   131fc:	andeq	r3, r1, r8, lsr r3
   13200:	andeq	r3, r1, r8, lsr r3
   13204:	andeq	r3, r1, r8, lsr r3
   13208:	andeq	r3, r1, r8, lsr r3
   1320c:	andeq	r3, r1, r8, lsr r3
   13210:	andeq	r3, r1, r8, lsr r3
   13214:	andeq	r3, r1, r8, lsr r3
   13218:	andeq	r3, r1, r8, lsr r3
   1321c:	andeq	r3, r1, r8, lsr r3
   13220:	andeq	r3, r1, r8, lsr r3
   13224:	andeq	r3, r1, r8, lsr r3
   13228:	andeq	r2, r1, r8, ror ip
   1322c:	andeq	r2, r1, r8, ror ip
   13230:	andeq	r2, r1, r8, ror ip
   13234:	andeq	r2, r1, r8, ror ip
   13238:	andeq	r2, r1, ip, lsl #21
   1323c:	andeq	r2, r1, r4, lsr #27
   13240:	andeq	r3, r1, r8, lsr r3
   13244:	andeq	r3, r1, r8, lsr r3
   13248:	andeq	r3, r1, r8, lsr r3
   1324c:	andeq	r3, r1, r8, lsr r3
   13250:	andeq	r3, r1, r8, lsr r3
   13254:	andeq	r3, r1, r8, lsr r3
   13258:	andeq	r3, r1, r8, lsr r3
   1325c:	andeq	r3, r1, r8, lsr r3
   13260:	andeq	r3, r1, r8, lsr r3
   13264:	andeq	r3, r1, r8, lsr r3
   13268:	andeq	r3, r1, r8, lsr r3
   1326c:	andeq	r3, r1, r8, lsr r3
   13270:	andeq	r3, r1, r8, lsr r3
   13274:	andeq	r3, r1, r8, lsr r3
   13278:	andeq	r3, r1, r8, lsr r3
   1327c:	andeq	r3, r1, r8, lsr r3
   13280:	andeq	r3, r1, r8, lsr r3
   13284:	andeq	r3, r1, r8, lsr r3
   13288:	andeq	r3, r1, r8, lsr r3
   1328c:	andeq	r3, r1, r8, lsr r3
   13290:	andeq	r3, r1, r8, lsr r3
   13294:	andeq	r3, r1, r8, lsr r3
   13298:	andeq	r3, r1, r8, lsr r3
   1329c:	andeq	r3, r1, r8, lsr r3
   132a0:	andeq	r3, r1, r8, lsr r3
   132a4:	andeq	r3, r1, r8, lsr r3
   132a8:	andeq	r2, r1, r8, ror ip
   132ac:	andeq	r2, r1, r4, asr #20
   132b0:	andeq	r3, r1, r8, lsr r3
   132b4:	andeq	r2, r1, r8, ror ip
   132b8:	andeq	r3, r1, r8, lsr r3
   132bc:	andeq	r2, r1, r8, ror ip
   132c0:	andeq	r3, r1, r8, lsr r3
   132c4:	andeq	r3, r1, r8, lsr r3
   132c8:	andeq	r3, r1, r8, lsr r3
   132cc:	andeq	r3, r1, r8, lsr r3
   132d0:	andeq	r3, r1, r8, lsr r3
   132d4:	andeq	r3, r1, r8, lsr r3
   132d8:	andeq	r3, r1, r8, lsr r3
   132dc:	andeq	r3, r1, r8, lsr r3
   132e0:	andeq	r3, r1, r8, lsr r3
   132e4:	andeq	r3, r1, r8, lsr r3
   132e8:	andeq	r3, r1, r8, lsr r3
   132ec:	andeq	r3, r1, r8, lsr r3
   132f0:	andeq	r3, r1, r8, lsr r3
   132f4:	andeq	r3, r1, r8, lsr r3
   132f8:	andeq	r3, r1, r8, lsr r3
   132fc:	andeq	r3, r1, r8, lsr r3
   13300:	andeq	r3, r1, r8, lsr r3
   13304:	andeq	r3, r1, r8, lsr r3
   13308:	andeq	r3, r1, r8, lsr r3
   1330c:	andeq	r3, r1, r8, lsr r3
   13310:	andeq	r3, r1, r8, lsr r3
   13314:	andeq	r3, r1, r8, lsr r3
   13318:	andeq	r3, r1, r8, lsr r3
   1331c:	andeq	r3, r1, r8, lsr r3
   13320:	andeq	r3, r1, r8, lsr r3
   13324:	andeq	r3, r1, r8, lsr r3
   13328:	andeq	r2, r1, ip, asr r8
   1332c:	andeq	r2, r1, r8, ror ip
   13330:	andeq	r2, r1, ip, asr r8
   13334:	andeq	r3, r1, r4, asr #6
   13338:	mov	r6, r7
   1333c:	mov	r7, #0
   13340:	b	128bc <close@plt+0x19a0>
   13344:	cmp	r9, #0
   13348:	mov	r3, #0
   1334c:	beq	12d8c <close@plt+0x1e70>
   13350:	mov	r6, #0
   13354:	mov	r7, r3
   13358:	mov	r3, r6
   1335c:	b	128c0 <close@plt+0x19a4>
   13360:	mov	r3, #0
   13364:	b	12d6c <close@plt+0x1e50>
   13368:	mov	r7, #0
   1336c:	mov	r3, #114	; 0x72
   13370:	b	12b8c <close@plt+0x1c70>
   13374:	mov	r5, #98	; 0x62
   13378:	b	12c1c <close@plt+0x1d00>
   1337c:	mov	r5, #97	; 0x61
   13380:	b	12c5c <close@plt+0x1d40>
   13384:	ldr	r3, [sp, #32]
   13388:	cmp	r3, #0
   1338c:	bne	137d4 <close@plt+0x28b8>
   13390:	add	r9, r9, #1
   13394:	ldr	r3, [sp, #44]	; 0x2c
   13398:	mov	r6, #0
   1339c:	mov	r5, #92	; 0x5c
   133a0:	b	12b54 <close@plt+0x1c38>
   133a4:	ldr	r3, [sp, #36]	; 0x24
   133a8:	ldrb	r3, [r3, #1]
   133ac:	adds	r3, r3, #0
   133b0:	movne	r3, #1
   133b4:	b	12878 <close@plt+0x195c>
   133b8:	ldr	r3, [sp, #164]	; 0xa4
   133bc:	ands	r3, r3, #4
   133c0:	beq	133e4 <close@plt+0x24c8>
   133c4:	ldr	r2, [sp, #24]
   133c8:	add	r3, r9, #2
   133cc:	cmp	r3, r2
   133d0:	bcs	133e4 <close@plt+0x24c8>
   133d4:	ldr	r2, [sp, #48]	; 0x30
   133d8:	ldrb	r5, [r2, #1]
   133dc:	cmp	r5, #63	; 0x3f
   133e0:	beq	13848 <close@plt+0x292c>
   133e4:	mov	r2, #0
   133e8:	mov	r6, r2
   133ec:	mov	r5, #63	; 0x3f
   133f0:	b	128a0 <close@plt+0x1984>
   133f4:	ldr	r3, [sp, #32]
   133f8:	cmp	r3, #0
   133fc:	bne	137d4 <close@plt+0x28b8>
   13400:	mov	r6, r3
   13404:	mov	r5, #63	; 0x3f
   13408:	b	128e8 <close@plt+0x19cc>
   1340c:	ldr	r3, [sp, #24]
   13410:	cmn	r3, #1
   13414:	mov	r3, #0
   13418:	str	r3, [sp, #108]	; 0x6c
   1341c:	str	r3, [sp, #112]	; 0x70
   13420:	bne	13430 <close@plt+0x2514>
   13424:	ldr	r0, [sp, #36]	; 0x24
   13428:	bl	10e50 <strlen@plt>
   1342c:	str	r0, [sp, #24]
   13430:	mov	r3, #0
   13434:	str	sl, [sp, #88]	; 0x58
   13438:	ldr	sl, [sp, #36]	; 0x24
   1343c:	str	r5, [sp, #92]	; 0x5c
   13440:	mov	r5, r3
   13444:	str	r7, [sp, #96]	; 0x60
   13448:	str	r4, [sp, #100]	; 0x64
   1344c:	str	r8, [sp, #84]	; 0x54
   13450:	ldr	r3, [sp, #24]
   13454:	add	r4, r9, r5
   13458:	add	r7, sl, r4
   1345c:	sub	r2, r3, r4
   13460:	mov	r1, r7
   13464:	add	r3, sp, #108	; 0x6c
   13468:	add	r0, sp, #104	; 0x68
   1346c:	bl	14c18 <close@plt+0x3cfc>
   13470:	subs	r8, r0, #0
   13474:	beq	134c4 <close@plt+0x25a8>
   13478:	cmn	r8, #1
   1347c:	beq	13824 <close@plt+0x2908>
   13480:	cmn	r8, #2
   13484:	beq	13944 <close@plt+0x2a28>
   13488:	ldr	r3, [sp, #32]
   1348c:	cmp	fp, #2
   13490:	movne	r3, #0
   13494:	andeq	r3, r3, #1
   13498:	cmp	r3, #0
   1349c:	bne	13624 <close@plt+0x2708>
   134a0:	ldr	r0, [sp, #104]	; 0x68
   134a4:	bl	10d84 <iswprint@plt>
   134a8:	add	r5, r5, r8
   134ac:	cmp	r0, #0
   134b0:	add	r0, sp, #108	; 0x6c
   134b4:	moveq	r6, #0
   134b8:	bl	10d30 <mbsinit@plt>
   134bc:	cmp	r0, #0
   134c0:	beq	13450 <close@plt+0x2534>
   134c4:	ldr	r3, [sp, #28]
   134c8:	mov	ip, r5
   134cc:	eor	r2, r6, #1
   134d0:	ldr	r5, [sp, #92]	; 0x5c
   134d4:	ldr	r7, [sp, #96]	; 0x60
   134d8:	ldr	r4, [sp, #100]	; 0x64
   134dc:	ldr	r8, [sp, #84]	; 0x54
   134e0:	ldr	sl, [sp, #88]	; 0x58
   134e4:	and	r2, r2, r3
   134e8:	cmp	ip, #1
   134ec:	bls	12dec <close@plt+0x1ed0>
   134f0:	add	r1, ip, r9
   134f4:	ldr	lr, [sp, #48]	; 0x30
   134f8:	mov	r0, #0
   134fc:	str	r6, [sp, #48]	; 0x30
   13500:	mov	ip, #39	; 0x27
   13504:	ldr	r6, [sp, #44]	; 0x2c
   13508:	b	135c0 <close@plt+0x26a4>
   1350c:	ldr	r0, [sp, #32]
   13510:	sub	r3, fp, #2
   13514:	cmp	r0, #0
   13518:	clz	r3, r3
   1351c:	lsr	r3, r3, #5
   13520:	bne	13728 <close@plt+0x280c>
   13524:	eor	r0, r6, #1
   13528:	ands	r3, r3, r0
   1352c:	beq	1355c <close@plt+0x2640>
   13530:	add	r0, r4, #1
   13534:	cmp	sl, r4
   13538:	strbhi	ip, [r8, r4]
   1353c:	cmp	sl, r0
   13540:	movhi	r6, #36	; 0x24
   13544:	strbhi	r6, [r8, r0]
   13548:	add	r0, r4, #2
   1354c:	mov	r6, r3
   13550:	add	r4, r4, #3
   13554:	cmp	sl, r0
   13558:	strbhi	ip, [r8, r0]
   1355c:	cmp	sl, r4
   13560:	movhi	r3, #92	; 0x5c
   13564:	strbhi	r3, [r8, r4]
   13568:	add	r3, r4, #1
   1356c:	cmp	sl, r3
   13570:	lsrhi	r0, r5, #6
   13574:	addhi	r0, r0, #48	; 0x30
   13578:	strbhi	r0, [r8, r3]
   1357c:	add	r0, r4, #2
   13580:	cmp	sl, r0
   13584:	lsrhi	r3, r5, #3
   13588:	andhi	r3, r3, #7
   1358c:	addhi	r3, r3, #48	; 0x30
   13590:	add	r9, r9, #1
   13594:	strbhi	r3, [r8, r0]
   13598:	and	r5, r5, #7
   1359c:	cmp	r9, r1
   135a0:	add	r5, r5, #48	; 0x30
   135a4:	add	r4, r4, #3
   135a8:	bcs	13748 <close@plt+0x282c>
   135ac:	mov	r0, r2
   135b0:	cmp	sl, r4
   135b4:	strbhi	r5, [r8, r4]
   135b8:	ldrb	r5, [lr, #1]!
   135bc:	add	r4, r4, #1
   135c0:	cmp	r2, #0
   135c4:	bne	1350c <close@plt+0x25f0>
   135c8:	eor	r3, r0, #1
   135cc:	and	r3, r3, r6
   135d0:	cmp	r7, #0
   135d4:	uxtb	r3, r3
   135d8:	beq	135ec <close@plt+0x26d0>
   135dc:	cmp	sl, r4
   135e0:	movhi	r7, #92	; 0x5c
   135e4:	strbhi	r7, [r8, r4]
   135e8:	add	r4, r4, #1
   135ec:	add	r9, r9, #1
   135f0:	cmp	r9, r1
   135f4:	bcs	1373c <close@plt+0x2820>
   135f8:	cmp	r3, #0
   135fc:	beq	13768 <close@plt+0x284c>
   13600:	cmp	sl, r4
   13604:	add	r3, r4, #1
   13608:	strbhi	ip, [r8, r4]
   1360c:	mov	r7, #0
   13610:	cmp	sl, r3
   13614:	strbhi	ip, [r8, r3]
   13618:	add	r4, r4, #2
   1361c:	mov	r6, r7
   13620:	b	135b0 <close@plt+0x2694>
   13624:	cmp	r8, #1
   13628:	beq	134a0 <close@plt+0x2584>
   1362c:	add	r1, r4, #1
   13630:	add	r3, sl, r8
   13634:	add	r1, sl, r1
   13638:	add	r4, r3, r4
   1363c:	ldrb	r3, [r1], #1
   13640:	sub	r3, r3, #91	; 0x5b
   13644:	cmp	r3, #33	; 0x21
   13648:	ldrls	pc, [pc, r3, lsl #2]
   1364c:	b	136d8 <close@plt+0x27bc>
   13650:	andeq	r3, r1, r4, ror #13
   13654:	andeq	r3, r1, r4, ror #13
   13658:	ldrdeq	r3, [r1], -r8
   1365c:	andeq	r3, r1, r4, ror #13
   13660:	ldrdeq	r3, [r1], -r8
   13664:	andeq	r3, r1, r4, ror #13
   13668:	ldrdeq	r3, [r1], -r8
   1366c:	ldrdeq	r3, [r1], -r8
   13670:	ldrdeq	r3, [r1], -r8
   13674:	ldrdeq	r3, [r1], -r8
   13678:	ldrdeq	r3, [r1], -r8
   1367c:	ldrdeq	r3, [r1], -r8
   13680:	ldrdeq	r3, [r1], -r8
   13684:	ldrdeq	r3, [r1], -r8
   13688:	ldrdeq	r3, [r1], -r8
   1368c:	ldrdeq	r3, [r1], -r8
   13690:	ldrdeq	r3, [r1], -r8
   13694:	ldrdeq	r3, [r1], -r8
   13698:	ldrdeq	r3, [r1], -r8
   1369c:	ldrdeq	r3, [r1], -r8
   136a0:	ldrdeq	r3, [r1], -r8
   136a4:	ldrdeq	r3, [r1], -r8
   136a8:	ldrdeq	r3, [r1], -r8
   136ac:	ldrdeq	r3, [r1], -r8
   136b0:	ldrdeq	r3, [r1], -r8
   136b4:	ldrdeq	r3, [r1], -r8
   136b8:	ldrdeq	r3, [r1], -r8
   136bc:	ldrdeq	r3, [r1], -r8
   136c0:	ldrdeq	r3, [r1], -r8
   136c4:	ldrdeq	r3, [r1], -r8
   136c8:	ldrdeq	r3, [r1], -r8
   136cc:	ldrdeq	r3, [r1], -r8
   136d0:	ldrdeq	r3, [r1], -r8
   136d4:	andeq	r3, r1, r4, ror #13
   136d8:	cmp	r4, r1
   136dc:	bne	1363c <close@plt+0x2720>
   136e0:	b	134a0 <close@plt+0x2584>
   136e4:	ldr	fp, [sp, #84]	; 0x54
   136e8:	ldr	sl, [sp, #88]	; 0x58
   136ec:	mov	r8, #2
   136f0:	b	12bac <close@plt+0x1c90>
   136f4:	cmp	sl, r4
   136f8:	movls	r1, r4
   136fc:	bls	12cfc <close@plt+0x1de0>
   13700:	ldr	r3, [sp, #44]	; 0x2c
   13704:	b	12cec <close@plt+0x1dd0>
   13708:	str	sl, [sp, #72]	; 0x48
   1370c:	ldr	sl, [sp, #32]
   13710:	b	12b24 <close@plt+0x1c08>
   13714:	add	r9, r9, #1
   13718:	b	12418 <close@plt+0x14fc>
   1371c:	ldr	r2, [sp, #28]
   13720:	mov	r6, #0
   13724:	b	134f0 <close@plt+0x25d4>
   13728:	str	fp, [sp, #160]	; 0xa0
   1372c:	str	r3, [sp, #28]
   13730:	mov	fp, r8
   13734:	ldr	r8, [sp, #160]	; 0xa0
   13738:	b	12bac <close@plt+0x1c90>
   1373c:	str	r6, [sp, #44]	; 0x2c
   13740:	ldr	r6, [sp, #48]	; 0x30
   13744:	b	12b54 <close@plt+0x1c38>
   13748:	str	r6, [sp, #44]	; 0x2c
   1374c:	ldr	r6, [sp, #48]	; 0x30
   13750:	b	12960 <close@plt+0x1a44>
   13754:	add	r4, r4, #4
   13758:	str	r3, [sp, #44]	; 0x2c
   1375c:	mov	r6, #0
   13760:	mov	r5, #48	; 0x30
   13764:	b	128e8 <close@plt+0x19cc>
   13768:	mov	r7, r3
   1376c:	b	135b0 <close@plt+0x2694>
   13770:	ldr	r3, [pc, #-1624]	; 13120 <close@plt+0x2204>
   13774:	mov	r4, #1
   13778:	str	r4, [sp, #40]	; 0x28
   1377c:	str	r4, [sp, #28]
   13780:	str	r4, [sp, #52]	; 0x34
   13784:	str	sl, [sp, #72]	; 0x48
   13788:	str	sl, [sp, #68]	; 0x44
   1378c:	str	sl, [sp, #44]	; 0x2c
   13790:	str	sl, [sp, #32]
   13794:	str	r3, [sp, #60]	; 0x3c
   13798:	b	12408 <close@plt+0x14ec>
   1379c:	mov	r3, r6
   137a0:	mov	r5, #48	; 0x30
   137a4:	mov	r6, #0
   137a8:	b	128e8 <close@plt+0x19cc>
   137ac:	cmp	sl, r4
   137b0:	movhi	r3, #48	; 0x30
   137b4:	strbhi	r3, [r8, r4]
   137b8:	add	r3, r1, #2
   137bc:	cmp	sl, r3
   137c0:	movhi	r0, #48	; 0x30
   137c4:	strbhi	r0, [r8, r3]
   137c8:	add	r4, r1, #3
   137cc:	mov	r5, #48	; 0x30
   137d0:	b	12d30 <close@plt+0x1e14>
   137d4:	str	fp, [sp, #160]	; 0xa0
   137d8:	mov	fp, r8
   137dc:	ldr	r8, [sp, #160]	; 0xa0
   137e0:	b	12bac <close@plt+0x1c90>
   137e4:	ldr	r2, [sp, #80]	; 0x50
   137e8:	ldrb	r3, [r2]
   137ec:	cmp	r3, #0
   137f0:	beq	123d8 <close@plt+0x14bc>
   137f4:	cmp	sl, r4
   137f8:	strbhi	r3, [fp, r4]
   137fc:	ldrb	r3, [r2, #1]!
   13800:	add	r4, r4, #1
   13804:	cmp	r3, #0
   13808:	bne	137f4 <close@plt+0x28d8>
   1380c:	b	123d8 <close@plt+0x14bc>
   13810:	str	fp, [sp, #160]	; 0xa0
   13814:	mov	r3, #0
   13818:	mov	fp, r8
   1381c:	ldr	r8, [sp, #160]	; 0xa0
   13820:	b	12c40 <close@plt+0x1d24>
   13824:	mov	ip, r5
   13828:	ldr	r7, [sp, #96]	; 0x60
   1382c:	ldr	r5, [sp, #92]	; 0x5c
   13830:	ldr	r4, [sp, #100]	; 0x64
   13834:	ldr	r8, [sp, #84]	; 0x54
   13838:	ldr	sl, [sp, #88]	; 0x58
   1383c:	ldr	r2, [sp, #28]
   13840:	mov	r6, #0
   13844:	b	134e8 <close@plt+0x25cc>
   13848:	ldr	r2, [sp, #36]	; 0x24
   1384c:	ldrb	r1, [r2, r3]
   13850:	sub	r2, r1, #33	; 0x21
   13854:	cmp	r2, #29
   13858:	ldrls	pc, [pc, r2, lsl #2]
   1385c:	b	13938 <close@plt+0x2a1c>
   13860:	ldrdeq	r3, [r1], -r8
   13864:	andeq	r3, r1, r8, lsr r9
   13868:	andeq	r3, r1, r8, lsr r9
   1386c:	andeq	r3, r1, r8, lsr r9
   13870:	andeq	r3, r1, r8, lsr r9
   13874:	andeq	r3, r1, r8, lsr r9
   13878:	ldrdeq	r3, [r1], -r8
   1387c:	ldrdeq	r3, [r1], -r8
   13880:	ldrdeq	r3, [r1], -r8
   13884:	andeq	r3, r1, r8, lsr r9
   13888:	andeq	r3, r1, r8, lsr r9
   1388c:	andeq	r3, r1, r8, lsr r9
   13890:	ldrdeq	r3, [r1], -r8
   13894:	andeq	r3, r1, r8, lsr r9
   13898:	ldrdeq	r3, [r1], -r8
   1389c:	andeq	r3, r1, r8, lsr r9
   138a0:	andeq	r3, r1, r8, lsr r9
   138a4:	andeq	r3, r1, r8, lsr r9
   138a8:	andeq	r3, r1, r8, lsr r9
   138ac:	andeq	r3, r1, r8, lsr r9
   138b0:	andeq	r3, r1, r8, lsr r9
   138b4:	andeq	r3, r1, r8, lsr r9
   138b8:	andeq	r3, r1, r8, lsr r9
   138bc:	andeq	r3, r1, r8, lsr r9
   138c0:	andeq	r3, r1, r8, lsr r9
   138c4:	andeq	r3, r1, r8, lsr r9
   138c8:	andeq	r3, r1, r8, lsr r9
   138cc:	ldrdeq	r3, [r1], -r8
   138d0:	ldrdeq	r3, [r1], -r8
   138d4:	ldrdeq	r3, [r1], -r8
   138d8:	ldr	r2, [sp, #32]
   138dc:	cmp	r2, #0
   138e0:	bne	139e4 <close@plt+0x2ac8>
   138e4:	cmp	sl, r4
   138e8:	movhi	r2, #63	; 0x3f
   138ec:	strbhi	r2, [r8, r4]
   138f0:	add	r2, r4, #1
   138f4:	cmp	sl, r2
   138f8:	movhi	r0, #34	; 0x22
   138fc:	strbhi	r0, [r8, r2]
   13900:	add	r2, r4, #2
   13904:	cmp	sl, r2
   13908:	movhi	r0, #34	; 0x22
   1390c:	strbhi	r0, [r8, r2]
   13910:	add	r2, r4, #3
   13914:	cmp	sl, r2
   13918:	movhi	r0, #63	; 0x3f
   1391c:	strbhi	r0, [r8, r2]
   13920:	mov	r2, #0
   13924:	add	r4, r4, #4
   13928:	mov	r5, r1
   1392c:	mov	r9, r3
   13930:	mov	r6, r2
   13934:	b	12d30 <close@plt+0x1e14>
   13938:	mov	r2, #0
   1393c:	mov	r6, r2
   13940:	b	128a0 <close@plt+0x1984>
   13944:	ldr	r0, [sp, #24]
   13948:	mov	r1, r4
   1394c:	cmp	r1, r0
   13950:	mov	r2, r7
   13954:	mov	r3, r5
   13958:	mov	ip, r5
   1395c:	ldr	r7, [sp, #96]	; 0x60
   13960:	ldr	r5, [sp, #92]	; 0x5c
   13964:	ldr	r4, [sp, #100]	; 0x64
   13968:	ldr	r8, [sp, #84]	; 0x54
   1396c:	ldr	sl, [sp, #88]	; 0x58
   13970:	bcs	139a4 <close@plt+0x2a88>
   13974:	ldrb	r6, [r2]
   13978:	cmp	r6, #0
   1397c:	bne	13990 <close@plt+0x2a74>
   13980:	b	13ac0 <close@plt+0x2ba4>
   13984:	ldrb	r6, [r2, #1]!
   13988:	cmp	r6, #0
   1398c:	beq	13a48 <close@plt+0x2b2c>
   13990:	add	r3, r3, #1
   13994:	add	r1, r9, r3
   13998:	cmp	r1, r0
   1399c:	bcc	13984 <close@plt+0x2a68>
   139a0:	mov	ip, r3
   139a4:	ldr	r2, [sp, #28]
   139a8:	mov	r6, #0
   139ac:	b	134e8 <close@plt+0x25cc>
   139b0:	mov	r3, #1
   139b4:	str	r3, [sp, #40]	; 0x28
   139b8:	str	r3, [sp, #32]
   139bc:	str	r3, [sp, #28]
   139c0:	str	r3, [sp, #52]	; 0x34
   139c4:	ldr	r3, [pc, #-2220]	; 13120 <close@plt+0x2204>
   139c8:	mov	r2, #0
   139cc:	str	r2, [sp, #68]	; 0x44
   139d0:	str	r2, [sp, #44]	; 0x2c
   139d4:	str	r2, [sp, #72]	; 0x48
   139d8:	mov	r4, r2
   139dc:	str	r3, [sp, #60]	; 0x3c
   139e0:	b	12408 <close@plt+0x14ec>
   139e4:	str	fp, [sp, #160]	; 0xa0
   139e8:	mov	fp, r8
   139ec:	ldr	r8, [sp, #160]	; 0xa0
   139f0:	b	12bb8 <close@plt+0x1c9c>
   139f4:	mov	r2, r3
   139f8:	ldr	r3, [sp, #60]	; 0x3c
   139fc:	cmp	r3, #0
   13a00:	moveq	r2, #0
   13a04:	andne	r2, r2, #1
   13a08:	cmp	r2, #0
   13a0c:	beq	13a38 <close@plt+0x2b1c>
   13a10:	mov	r2, r3
   13a14:	ldrb	r3, [r3]
   13a18:	cmp	r3, #0
   13a1c:	beq	13a38 <close@plt+0x2b1c>
   13a20:	cmp	sl, r4
   13a24:	strbhi	r3, [fp, r4]
   13a28:	ldrb	r3, [r2, #1]!
   13a2c:	add	r4, r4, #1
   13a30:	cmp	r3, #0
   13a34:	bne	13a20 <close@plt+0x2b04>
   13a38:	cmp	sl, r4
   13a3c:	movhi	r3, #0
   13a40:	strbhi	r3, [fp, r4]
   13a44:	b	12bf8 <close@plt+0x1cdc>
   13a48:	mov	ip, r3
   13a4c:	ldr	r2, [sp, #28]
   13a50:	b	134e8 <close@plt+0x25cc>
   13a54:	str	fp, [sp, #160]	; 0xa0
   13a58:	mov	fp, r8
   13a5c:	ldr	r8, [sp, #160]	; 0xa0
   13a60:	sub	r3, r8, #2
   13a64:	clz	r3, r3
   13a68:	lsr	r3, r3, #5
   13a6c:	str	r3, [sp, #28]
   13a70:	b	12bac <close@plt+0x1c90>
   13a74:	ldr	r3, [sp, #76]	; 0x4c
   13a78:	mov	ip, #5
   13a7c:	str	r3, [sp, #16]
   13a80:	ldr	r3, [sp, #80]	; 0x50
   13a84:	ldr	r2, [sp, #36]	; 0x24
   13a88:	str	r3, [sp, #12]
   13a8c:	ldr	r3, [sp, #56]	; 0x38
   13a90:	ldr	r1, [sp, #72]	; 0x48
   13a94:	str	r3, [sp, #8]
   13a98:	ldr	r3, [sp, #164]	; 0xa4
   13a9c:	mov	r0, fp
   13aa0:	str	r3, [sp, #4]
   13aa4:	str	ip, [sp]
   13aa8:	ldr	r3, [sp, #24]
   13aac:	bl	12310 <close@plt+0x13f4>
   13ab0:	mov	r4, r0
   13ab4:	b	12bf8 <close@plt+0x1cdc>
   13ab8:	mov	r8, #2
   13abc:	b	12bac <close@plt+0x1c90>
   13ac0:	ldr	r2, [sp, #28]
   13ac4:	b	134e8 <close@plt+0x25cc>
   13ac8:	mov	r3, #0
   13acc:	str	r3, [sp, #68]	; 0x44
   13ad0:	str	r3, [sp, #44]	; 0x2c
   13ad4:	str	r3, [sp, #72]	; 0x48
   13ad8:	str	r3, [sp, #28]
   13adc:	mov	r4, r3
   13ae0:	ldr	r3, [pc, #-2500]	; 13124 <close@plt+0x2208>
   13ae4:	mov	r2, #1
   13ae8:	str	r2, [sp, #40]	; 0x28
   13aec:	str	r2, [sp, #32]
   13af0:	str	r2, [sp, #52]	; 0x34
   13af4:	str	r3, [sp, #60]	; 0x3c
   13af8:	b	12408 <close@plt+0x14ec>
   13afc:	bl	10d60 <__stack_chk_fail@plt>
   13b00:	mov	r5, r3
   13b04:	mov	r6, #0
   13b08:	b	128fc <close@plt+0x19e0>
   13b0c:	mov	r3, #0
   13b10:	mov	r2, #1
   13b14:	str	r3, [sp, #44]	; 0x2c
   13b18:	str	r3, [sp, #72]	; 0x48
   13b1c:	str	r2, [sp, #40]	; 0x28
   13b20:	b	12a18 <close@plt+0x1afc>
   13b24:	bl	10f10 <abort@plt>
   13b28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b2c:	sub	sp, sp, #44	; 0x2c
   13b30:	mov	r6, r0
   13b34:	mov	r4, r3
   13b38:	mov	sl, r1
   13b3c:	mov	fp, r2
   13b40:	bl	10e68 <__errno_location@plt>
   13b44:	ldr	r7, [pc, #364]	; 13cb8 <close@plt+0x2d9c>
   13b48:	cmp	r6, #0
   13b4c:	ldr	r5, [r7]
   13b50:	ldr	r3, [r0]
   13b54:	str	r3, [sp, #24]
   13b58:	blt	13cb4 <close@plt+0x2d98>
   13b5c:	ldr	r3, [r7, #4]
   13b60:	mov	r8, r0
   13b64:	cmp	r3, r6
   13b68:	bgt	13bb4 <close@plt+0x2c98>
   13b6c:	cmn	r6, #-268435454	; 0xf0000002
   13b70:	bgt	13cb0 <close@plt+0x2d94>
   13b74:	add	r9, r6, #1
   13b78:	add	r3, r7, #8
   13b7c:	cmp	r5, r3
   13b80:	lsl	r1, r9, #3
   13b84:	beq	13c90 <close@plt+0x2d74>
   13b88:	mov	r0, r5
   13b8c:	bl	149ec <close@plt+0x3ad0>
   13b90:	mov	r5, r0
   13b94:	str	r0, [r7]
   13b98:	ldr	r0, [r7, #4]
   13b9c:	mov	r1, #0
   13ba0:	sub	r2, r9, r0
   13ba4:	add	r0, r5, r0, lsl #3
   13ba8:	lsl	r2, r2, #3
   13bac:	bl	10e80 <memset@plt>
   13bb0:	str	r9, [r7, #4]
   13bb4:	add	r3, r5, r6, lsl #3
   13bb8:	ldr	r1, [r4, #4]
   13bbc:	ldr	r7, [r3, #4]
   13bc0:	ldr	r9, [r5, r6, lsl #3]
   13bc4:	ldr	r2, [r4, #40]	; 0x28
   13bc8:	ldr	ip, [r4, #44]	; 0x2c
   13bcc:	str	r3, [sp, #28]
   13bd0:	ldr	r3, [r4]
   13bd4:	orr	r1, r1, #1
   13bd8:	add	lr, r4, #8
   13bdc:	str	r1, [sp, #36]	; 0x24
   13be0:	str	r1, [sp, #4]
   13be4:	str	r2, [sp, #12]
   13be8:	str	r3, [sp]
   13bec:	mov	r0, r7
   13bf0:	mov	r1, r9
   13bf4:	str	ip, [sp, #16]
   13bf8:	str	lr, [sp, #8]
   13bfc:	mov	r3, fp
   13c00:	mov	r2, sl
   13c04:	str	lr, [sp, #32]
   13c08:	bl	12310 <close@plt+0x13f4>
   13c0c:	cmp	r9, r0
   13c10:	bhi	13c7c <close@plt+0x2d60>
   13c14:	ldr	r3, [pc, #160]	; 13cbc <close@plt+0x2da0>
   13c18:	add	r9, r0, #1
   13c1c:	cmp	r7, r3
   13c20:	str	r9, [r5, r6, lsl #3]
   13c24:	beq	13c30 <close@plt+0x2d14>
   13c28:	mov	r0, r7
   13c2c:	bl	10d0c <free@plt>
   13c30:	mov	r0, r9
   13c34:	bl	14990 <close@plt+0x3a74>
   13c38:	ldr	lr, [sp, #28]
   13c3c:	ldr	ip, [r4, #44]	; 0x2c
   13c40:	ldr	r5, [r4, #40]	; 0x28
   13c44:	mov	r3, fp
   13c48:	mov	r2, sl
   13c4c:	mov	r1, r9
   13c50:	str	r0, [lr, #4]
   13c54:	ldr	lr, [r4]
   13c58:	ldr	r4, [sp, #32]
   13c5c:	str	ip, [sp, #16]
   13c60:	str	r4, [sp, #8]
   13c64:	ldr	r4, [sp, #36]	; 0x24
   13c68:	str	r5, [sp, #12]
   13c6c:	str	r4, [sp, #4]
   13c70:	str	lr, [sp]
   13c74:	mov	r7, r0
   13c78:	bl	12310 <close@plt+0x13f4>
   13c7c:	ldr	r3, [sp, #24]
   13c80:	mov	r0, r7
   13c84:	str	r3, [r8]
   13c88:	add	sp, sp, #44	; 0x2c
   13c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c90:	mov	r0, #0
   13c94:	bl	149ec <close@plt+0x3ad0>
   13c98:	ldr	r3, [pc, #32]	; 13cc0 <close@plt+0x2da4>
   13c9c:	mov	r5, r0
   13ca0:	ldm	r3, {r0, r1}
   13ca4:	str	r5, [r7]
   13ca8:	stm	r5, {r0, r1}
   13cac:	b	13b98 <close@plt+0x2c7c>
   13cb0:	bl	14bd8 <close@plt+0x3cbc>
   13cb4:	bl	10f10 <abort@plt>
   13cb8:	andeq	r6, r2, r0, lsl r1
   13cbc:	andeq	r6, r2, r4, lsl #3
   13cc0:	andeq	r6, r2, r8, lsl r1
   13cc4:	push	{r4, r5, r6, lr}
   13cc8:	mov	r5, r0
   13ccc:	bl	10e68 <__errno_location@plt>
   13cd0:	cmp	r5, #0
   13cd4:	mov	r1, #48	; 0x30
   13cd8:	mov	r4, r0
   13cdc:	ldr	r0, [pc, #16]	; 13cf4 <close@plt+0x2dd8>
   13ce0:	ldr	r6, [r4]
   13ce4:	movne	r0, r5
   13ce8:	bl	14b98 <close@plt+0x3c7c>
   13cec:	str	r6, [r4]
   13cf0:	pop	{r4, r5, r6, pc}
   13cf4:	andeq	r6, r2, r4, lsl #5
   13cf8:	ldr	r3, [pc, #12]	; 13d0c <close@plt+0x2df0>
   13cfc:	cmp	r0, #0
   13d00:	moveq	r0, r3
   13d04:	ldr	r0, [r0]
   13d08:	bx	lr
   13d0c:	andeq	r6, r2, r4, lsl #5
   13d10:	ldr	r3, [pc, #12]	; 13d24 <close@plt+0x2e08>
   13d14:	cmp	r0, #0
   13d18:	moveq	r0, r3
   13d1c:	str	r1, [r0]
   13d20:	bx	lr
   13d24:	andeq	r6, r2, r4, lsl #5
   13d28:	ldr	r3, [pc, #52]	; 13d64 <close@plt+0x2e48>
   13d2c:	cmp	r0, #0
   13d30:	moveq	r0, r3
   13d34:	add	r3, r0, #8
   13d38:	push	{lr}		; (str lr, [sp, #-4]!)
   13d3c:	lsr	lr, r1, #5
   13d40:	and	r1, r1, #31
   13d44:	ldr	ip, [r3, lr, lsl #2]
   13d48:	lsr	r0, ip, r1
   13d4c:	eor	r2, r2, r0
   13d50:	and	r2, r2, #1
   13d54:	and	r0, r0, #1
   13d58:	eor	r1, ip, r2, lsl r1
   13d5c:	str	r1, [r3, lr, lsl #2]
   13d60:	pop	{pc}		; (ldr pc, [sp], #4)
   13d64:	andeq	r6, r2, r4, lsl #5
   13d68:	ldr	r3, [pc, #16]	; 13d80 <close@plt+0x2e64>
   13d6c:	cmp	r0, #0
   13d70:	movne	r3, r0
   13d74:	ldr	r0, [r3, #4]
   13d78:	str	r1, [r3, #4]
   13d7c:	bx	lr
   13d80:	andeq	r6, r2, r4, lsl #5
   13d84:	ldr	r3, [pc, #44]	; 13db8 <close@plt+0x2e9c>
   13d88:	cmp	r0, #0
   13d8c:	moveq	r0, r3
   13d90:	mov	ip, #10
   13d94:	cmp	r2, #0
   13d98:	cmpne	r1, #0
   13d9c:	str	ip, [r0]
   13da0:	beq	13db0 <close@plt+0x2e94>
   13da4:	str	r1, [r0, #40]	; 0x28
   13da8:	str	r2, [r0, #44]	; 0x2c
   13dac:	bx	lr
   13db0:	push	{r4, lr}
   13db4:	bl	10f10 <abort@plt>
   13db8:	andeq	r6, r2, r4, lsl #5
   13dbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13dc0:	sub	sp, sp, #24
   13dc4:	ldr	ip, [pc, #108]	; 13e38 <close@plt+0x2f1c>
   13dc8:	ldr	r4, [sp, #56]	; 0x38
   13dcc:	mov	r9, r2
   13dd0:	cmp	r4, #0
   13dd4:	moveq	r4, ip
   13dd8:	mov	sl, r3
   13ddc:	mov	r7, r0
   13de0:	mov	r8, r1
   13de4:	bl	10e68 <__errno_location@plt>
   13de8:	ldr	r3, [r4, #44]	; 0x2c
   13dec:	mov	r1, r8
   13df0:	ldr	r6, [r0]
   13df4:	str	r3, [sp, #16]
   13df8:	ldr	r2, [r4, #40]	; 0x28
   13dfc:	add	r3, r4, #8
   13e00:	str	r3, [sp, #8]
   13e04:	str	r2, [sp, #12]
   13e08:	ldr	r2, [r4, #4]
   13e0c:	mov	r5, r0
   13e10:	str	r2, [sp, #4]
   13e14:	ldr	ip, [r4]
   13e18:	mov	r3, sl
   13e1c:	mov	r2, r9
   13e20:	mov	r0, r7
   13e24:	str	ip, [sp]
   13e28:	bl	12310 <close@plt+0x13f4>
   13e2c:	str	r6, [r5]
   13e30:	add	sp, sp, #24
   13e34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13e38:	andeq	r6, r2, r4, lsl #5
   13e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e40:	cmp	r3, #0
   13e44:	sub	sp, sp, #44	; 0x2c
   13e48:	ldr	r4, [pc, #192]	; 13f10 <close@plt+0x2ff4>
   13e4c:	mov	r6, r2
   13e50:	movne	r4, r3
   13e54:	mov	r9, r1
   13e58:	mov	r8, r0
   13e5c:	bl	10e68 <__errno_location@plt>
   13e60:	ldr	r3, [r4, #44]	; 0x2c
   13e64:	ldr	r5, [r4, #4]
   13e68:	add	sl, r4, #8
   13e6c:	cmp	r6, #0
   13e70:	orreq	r5, r5, #1
   13e74:	mov	r1, #0
   13e78:	ldr	r2, [r0]
   13e7c:	str	r3, [sp, #16]
   13e80:	ldr	r3, [r4, #40]	; 0x28
   13e84:	stmib	sp, {r5, sl}
   13e88:	str	r3, [sp, #12]
   13e8c:	ldr	r3, [r4]
   13e90:	mov	r7, r0
   13e94:	str	r2, [sp, #28]
   13e98:	str	r3, [sp]
   13e9c:	mov	r2, r8
   13ea0:	mov	r3, r9
   13ea4:	mov	r0, r1
   13ea8:	bl	12310 <close@plt+0x13f4>
   13eac:	add	r1, r0, #1
   13eb0:	mov	fp, r0
   13eb4:	mov	r0, r1
   13eb8:	str	r1, [sp, #36]	; 0x24
   13ebc:	bl	14990 <close@plt+0x3a74>
   13ec0:	ldr	r3, [r4, #44]	; 0x2c
   13ec4:	mov	r2, r8
   13ec8:	str	r3, [sp, #16]
   13ecc:	ldr	r3, [r4, #40]	; 0x28
   13ed0:	str	r5, [sp, #4]
   13ed4:	str	r3, [sp, #12]
   13ed8:	str	sl, [sp, #8]
   13edc:	ldr	ip, [r4]
   13ee0:	ldr	r1, [sp, #36]	; 0x24
   13ee4:	mov	r3, r9
   13ee8:	str	ip, [sp]
   13eec:	str	r0, [sp, #32]
   13ef0:	bl	12310 <close@plt+0x13f4>
   13ef4:	ldr	r2, [sp, #28]
   13ef8:	cmp	r6, #0
   13efc:	str	r2, [r7]
   13f00:	ldr	r0, [sp, #32]
   13f04:	strne	fp, [r6]
   13f08:	add	sp, sp, #44	; 0x2c
   13f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f10:	andeq	r6, r2, r4, lsl #5
   13f14:	mov	r3, r2
   13f18:	mov	r2, #0
   13f1c:	b	13e3c <close@plt+0x2f20>
   13f20:	push	{r4, r5, r6, r7, r8, lr}
   13f24:	ldr	r6, [pc, #112]	; 13f9c <close@plt+0x3080>
   13f28:	ldr	r3, [r6, #4]
   13f2c:	ldr	r7, [r6]
   13f30:	cmp	r3, #1
   13f34:	ble	13f58 <close@plt+0x303c>
   13f38:	sub	r5, r7, #8
   13f3c:	add	r5, r5, r3, lsl #3
   13f40:	mov	r4, r7
   13f44:	ldr	r0, [r4, #12]
   13f48:	add	r4, r4, #8
   13f4c:	bl	10d0c <free@plt>
   13f50:	cmp	r4, r5
   13f54:	bne	13f44 <close@plt+0x3028>
   13f58:	ldr	r0, [r7, #4]
   13f5c:	ldr	r4, [pc, #60]	; 13fa0 <close@plt+0x3084>
   13f60:	cmp	r0, r4
   13f64:	beq	13f78 <close@plt+0x305c>
   13f68:	bl	10d0c <free@plt>
   13f6c:	mov	r3, #256	; 0x100
   13f70:	str	r4, [r6, #12]
   13f74:	str	r3, [r6, #8]
   13f78:	ldr	r4, [pc, #36]	; 13fa4 <close@plt+0x3088>
   13f7c:	cmp	r7, r4
   13f80:	beq	13f90 <close@plt+0x3074>
   13f84:	mov	r0, r7
   13f88:	bl	10d0c <free@plt>
   13f8c:	str	r4, [r6]
   13f90:	mov	r3, #1
   13f94:	str	r3, [r6, #4]
   13f98:	pop	{r4, r5, r6, r7, r8, pc}
   13f9c:	andeq	r6, r2, r0, lsl r1
   13fa0:	andeq	r6, r2, r4, lsl #3
   13fa4:	andeq	r6, r2, r8, lsl r1
   13fa8:	ldr	r3, [pc, #4]	; 13fb4 <close@plt+0x3098>
   13fac:	mvn	r2, #0
   13fb0:	b	13b28 <close@plt+0x2c0c>
   13fb4:	andeq	r6, r2, r4, lsl #5
   13fb8:	ldr	r3, [pc]	; 13fc0 <close@plt+0x30a4>
   13fbc:	b	13b28 <close@plt+0x2c0c>
   13fc0:	andeq	r6, r2, r4, lsl #5
   13fc4:	mov	r1, r0
   13fc8:	ldr	r3, [pc, #8]	; 13fd8 <close@plt+0x30bc>
   13fcc:	mvn	r2, #0
   13fd0:	mov	r0, #0
   13fd4:	b	13b28 <close@plt+0x2c0c>
   13fd8:	andeq	r6, r2, r4, lsl #5
   13fdc:	mov	r2, r1
   13fe0:	ldr	r3, [pc, #8]	; 13ff0 <close@plt+0x30d4>
   13fe4:	mov	r1, r0
   13fe8:	mov	r0, #0
   13fec:	b	13b28 <close@plt+0x2c0c>
   13ff0:	andeq	r6, r2, r4, lsl #5
   13ff4:	push	{r4, r5, r6, lr}
   13ff8:	sub	sp, sp, #56	; 0x38
   13ffc:	ldr	r4, [pc, #68]	; 14048 <close@plt+0x312c>
   14000:	mov	r6, r2
   14004:	mov	r5, r0
   14008:	ldr	r3, [r4]
   1400c:	add	r0, sp, #4
   14010:	str	r3, [sp, #52]	; 0x34
   14014:	bl	121a0 <close@plt+0x1284>
   14018:	add	r3, sp, #4
   1401c:	mvn	r2, #0
   14020:	mov	r1, r6
   14024:	mov	r0, r5
   14028:	bl	13b28 <close@plt+0x2c0c>
   1402c:	ldr	r2, [sp, #52]	; 0x34
   14030:	ldr	r3, [r4]
   14034:	cmp	r2, r3
   14038:	bne	14044 <close@plt+0x3128>
   1403c:	add	sp, sp, #56	; 0x38
   14040:	pop	{r4, r5, r6, pc}
   14044:	bl	10d60 <__stack_chk_fail@plt>
   14048:	andeq	r5, r2, r8, lsl #30
   1404c:	push	{r4, r5, r6, r7, lr}
   14050:	sub	sp, sp, #60	; 0x3c
   14054:	ldr	r4, [pc, #72]	; 140a4 <close@plt+0x3188>
   14058:	mov	r6, r2
   1405c:	mov	r7, r3
   14060:	ldr	ip, [r4]
   14064:	mov	r5, r0
   14068:	add	r0, sp, #4
   1406c:	str	ip, [sp, #52]	; 0x34
   14070:	bl	121a0 <close@plt+0x1284>
   14074:	add	r3, sp, #4
   14078:	mov	r2, r7
   1407c:	mov	r1, r6
   14080:	mov	r0, r5
   14084:	bl	13b28 <close@plt+0x2c0c>
   14088:	ldr	r2, [sp, #52]	; 0x34
   1408c:	ldr	r3, [r4]
   14090:	cmp	r2, r3
   14094:	bne	140a0 <close@plt+0x3184>
   14098:	add	sp, sp, #60	; 0x3c
   1409c:	pop	{r4, r5, r6, r7, pc}
   140a0:	bl	10d60 <__stack_chk_fail@plt>
   140a4:	andeq	r5, r2, r8, lsl #30
   140a8:	mov	r2, r1
   140ac:	mov	r1, r0
   140b0:	mov	r0, #0
   140b4:	b	13ff4 <close@plt+0x30d8>
   140b8:	mov	r3, r2
   140bc:	mov	r2, r1
   140c0:	mov	r1, r0
   140c4:	mov	r0, #0
   140c8:	b	1404c <close@plt+0x3130>
   140cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   140d0:	mov	r4, r2
   140d4:	ldr	lr, [pc, #128]	; 1415c <close@plt+0x3240>
   140d8:	mov	r8, r0
   140dc:	mov	r9, r1
   140e0:	ldm	lr!, {r0, r1, r2, r3}
   140e4:	sub	sp, sp, #60	; 0x3c
   140e8:	add	ip, sp, #4
   140ec:	lsr	r6, r4, #5
   140f0:	stmia	ip!, {r0, r1, r2, r3}
   140f4:	add	r7, sp, #12
   140f8:	ldm	lr!, {r0, r1, r2, r3}
   140fc:	and	r4, r4, #31
   14100:	ldr	r5, [pc, #88]	; 14160 <close@plt+0x3244>
   14104:	stmia	ip!, {r0, r1, r2, r3}
   14108:	ldm	lr, {r0, r1, r2, r3}
   1410c:	stm	ip, {r0, r1, r2, r3}
   14110:	mov	r2, r9
   14114:	ldr	r3, [r7, r6, lsl #2]
   14118:	ldr	ip, [r5]
   1411c:	mov	r1, r8
   14120:	mvn	r0, r3, lsr r4
   14124:	and	r0, r0, #1
   14128:	str	ip, [sp, #52]	; 0x34
   1412c:	eor	r4, r3, r0, lsl r4
   14130:	add	r3, sp, #4
   14134:	mov	r0, #0
   14138:	str	r4, [r7, r6, lsl #2]
   1413c:	bl	13b28 <close@plt+0x2c0c>
   14140:	ldr	r2, [sp, #52]	; 0x34
   14144:	ldr	r3, [r5]
   14148:	cmp	r2, r3
   1414c:	bne	14158 <close@plt+0x323c>
   14150:	add	sp, sp, #60	; 0x3c
   14154:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14158:	bl	10d60 <__stack_chk_fail@plt>
   1415c:	andeq	r6, r2, r4, lsl #5
   14160:	andeq	r5, r2, r8, lsl #30
   14164:	mov	r2, r1
   14168:	mvn	r1, #0
   1416c:	b	140cc <close@plt+0x31b0>
   14170:	mov	r2, #58	; 0x3a
   14174:	mvn	r1, #0
   14178:	b	140cc <close@plt+0x31b0>
   1417c:	mov	r2, #58	; 0x3a
   14180:	b	140cc <close@plt+0x31b0>
   14184:	push	{r4, r5, r6, r7, r8, lr}
   14188:	sub	sp, sp, #104	; 0x68
   1418c:	ldr	r5, [pc, #120]	; 1420c <close@plt+0x32f0>
   14190:	mov	r6, r0
   14194:	mov	r0, sp
   14198:	ldr	r3, [r5]
   1419c:	mov	r7, r2
   141a0:	str	r3, [sp, #100]	; 0x64
   141a4:	bl	121a0 <close@plt+0x1284>
   141a8:	mov	ip, sp
   141ac:	add	lr, sp, #52	; 0x34
   141b0:	ldm	ip!, {r0, r1, r2, r3}
   141b4:	stmia	lr!, {r0, r1, r2, r3}
   141b8:	ldm	ip!, {r0, r1, r2, r3}
   141bc:	ldr	r8, [sp, #64]	; 0x40
   141c0:	stmia	lr!, {r0, r1, r2, r3}
   141c4:	mvn	r4, r8
   141c8:	ldm	ip, {r0, r1, r2, r3}
   141cc:	and	ip, r4, #67108864	; 0x4000000
   141d0:	eor	ip, ip, r8
   141d4:	str	ip, [sp, #64]	; 0x40
   141d8:	stm	lr, {r0, r1, r2, r3}
   141dc:	add	r3, sp, #52	; 0x34
   141e0:	mvn	r2, #0
   141e4:	mov	r1, r7
   141e8:	mov	r0, r6
   141ec:	bl	13b28 <close@plt+0x2c0c>
   141f0:	ldr	r2, [sp, #100]	; 0x64
   141f4:	ldr	r3, [r5]
   141f8:	cmp	r2, r3
   141fc:	bne	14208 <close@plt+0x32ec>
   14200:	add	sp, sp, #104	; 0x68
   14204:	pop	{r4, r5, r6, r7, r8, pc}
   14208:	bl	10d60 <__stack_chk_fail@plt>
   1420c:	andeq	r5, r2, r8, lsl #30
   14210:	push	{r4, r5, r6, r7, r8, r9, lr}
   14214:	mov	r6, r1
   14218:	ldr	lr, [pc, #132]	; 142a4 <close@plt+0x3388>
   1421c:	mov	r5, r2
   14220:	mov	r8, r0
   14224:	mov	r9, r3
   14228:	ldm	lr!, {r0, r1, r2, r3}
   1422c:	sub	sp, sp, #60	; 0x3c
   14230:	add	ip, sp, #4
   14234:	ldr	r4, [pc, #108]	; 142a8 <close@plt+0x338c>
   14238:	stmia	ip!, {r0, r1, r2, r3}
   1423c:	mov	r7, #10
   14240:	ldm	lr!, {r0, r1, r2, r3}
   14244:	cmp	r5, #0
   14248:	cmpne	r6, #0
   1424c:	str	r7, [sp, #4]
   14250:	stmia	ip!, {r0, r1, r2, r3}
   14254:	ldm	lr, {r0, r1, r2, r3}
   14258:	ldr	lr, [r4]
   1425c:	stm	ip, {r0, r1, r2, r3}
   14260:	str	lr, [sp, #52]	; 0x34
   14264:	beq	142a0 <close@plt+0x3384>
   14268:	add	r3, sp, #4
   1426c:	ldr	r2, [sp, #88]	; 0x58
   14270:	mov	r1, r9
   14274:	mov	r0, r8
   14278:	str	r6, [sp, #44]	; 0x2c
   1427c:	str	r5, [sp, #48]	; 0x30
   14280:	bl	13b28 <close@plt+0x2c0c>
   14284:	ldr	r2, [sp, #52]	; 0x34
   14288:	ldr	r3, [r4]
   1428c:	cmp	r2, r3
   14290:	bne	1429c <close@plt+0x3380>
   14294:	add	sp, sp, #60	; 0x3c
   14298:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1429c:	bl	10d60 <__stack_chk_fail@plt>
   142a0:	bl	10f10 <abort@plt>
   142a4:	andeq	r6, r2, r4, lsl #5
   142a8:	andeq	r5, r2, r8, lsl #30
   142ac:	push	{lr}		; (str lr, [sp, #-4]!)
   142b0:	sub	sp, sp, #12
   142b4:	mvn	ip, #0
   142b8:	str	ip, [sp]
   142bc:	bl	14210 <close@plt+0x32f4>
   142c0:	add	sp, sp, #12
   142c4:	pop	{pc}		; (ldr pc, [sp], #4)
   142c8:	push	{lr}		; (str lr, [sp, #-4]!)
   142cc:	sub	sp, sp, #12
   142d0:	mvn	ip, #0
   142d4:	mov	r3, r2
   142d8:	str	ip, [sp]
   142dc:	mov	r2, r1
   142e0:	mov	r1, r0
   142e4:	mov	r0, #0
   142e8:	bl	14210 <close@plt+0x32f4>
   142ec:	add	sp, sp, #12
   142f0:	pop	{pc}		; (ldr pc, [sp], #4)
   142f4:	push	{lr}		; (str lr, [sp, #-4]!)
   142f8:	sub	sp, sp, #12
   142fc:	str	r3, [sp]
   14300:	mov	r3, r2
   14304:	mov	r2, r1
   14308:	mov	r1, r0
   1430c:	mov	r0, #0
   14310:	bl	14210 <close@plt+0x32f4>
   14314:	add	sp, sp, #12
   14318:	pop	{pc}		; (ldr pc, [sp], #4)
   1431c:	ldr	r3, [pc]	; 14324 <close@plt+0x3408>
   14320:	b	13b28 <close@plt+0x2c0c>
   14324:	andeq	r6, r2, r0, lsr #2
   14328:	mov	r2, r1
   1432c:	ldr	r3, [pc, #8]	; 1433c <close@plt+0x3420>
   14330:	mov	r1, r0
   14334:	mov	r0, #0
   14338:	b	13b28 <close@plt+0x2c0c>
   1433c:	andeq	r6, r2, r0, lsr #2
   14340:	ldr	r3, [pc, #4]	; 1434c <close@plt+0x3430>
   14344:	mvn	r2, #0
   14348:	b	13b28 <close@plt+0x2c0c>
   1434c:	andeq	r6, r2, r0, lsr #2
   14350:	mov	r1, r0
   14354:	ldr	r3, [pc, #8]	; 14364 <close@plt+0x3448>
   14358:	mvn	r2, #0
   1435c:	mov	r0, #0
   14360:	b	13b28 <close@plt+0x2c0c>
   14364:	andeq	r6, r2, r0, lsr #2
   14368:	push	{r4, r5, r6, r7, r8, lr}
   1436c:	mov	r8, r0
   14370:	ldr	r5, [pc, #84]	; 143cc <close@plt+0x34b0>
   14374:	mov	r7, r1
   14378:	mov	r4, r2
   1437c:	mov	r2, r4
   14380:	mov	r1, r7
   14384:	mov	r0, r8
   14388:	bl	10ce8 <read@plt>
   1438c:	subs	r6, r0, #0
   14390:	bge	143c4 <close@plt+0x34a8>
   14394:	bl	10e68 <__errno_location@plt>
   14398:	ldr	r3, [r0]
   1439c:	cmp	r3, #4
   143a0:	beq	1437c <close@plt+0x3460>
   143a4:	cmp	r4, r5
   143a8:	movls	r2, #0
   143ac:	movhi	r2, #1
   143b0:	cmp	r3, #22
   143b4:	movne	r2, #0
   143b8:	cmp	r2, #0
   143bc:	mov	r4, r5
   143c0:	bne	1437c <close@plt+0x3460>
   143c4:	mov	r0, r6
   143c8:	pop	{r4, r5, r6, r7, r8, pc}
   143cc:	svcvc	0x00f00000	; IMB
   143d0:	push	{r4, r5, r6, r7, r8, lr}
   143d4:	mov	r8, r0
   143d8:	ldr	r5, [pc, #84]	; 14434 <close@plt+0x3518>
   143dc:	mov	r7, r1
   143e0:	mov	r4, r2
   143e4:	mov	r2, r4
   143e8:	mov	r1, r7
   143ec:	mov	r0, r8
   143f0:	bl	10e98 <write@plt>
   143f4:	subs	r6, r0, #0
   143f8:	bge	1442c <close@plt+0x3510>
   143fc:	bl	10e68 <__errno_location@plt>
   14400:	ldr	r2, [r0]
   14404:	cmp	r2, #4
   14408:	beq	143e4 <close@plt+0x34c8>
   1440c:	cmp	r4, r5
   14410:	sub	r3, r2, #22
   14414:	clz	r3, r3
   14418:	lsr	r3, r3, #5
   1441c:	movls	r3, #0
   14420:	cmp	r3, #0
   14424:	mov	r4, r5
   14428:	bne	143e4 <close@plt+0x34c8>
   1442c:	mov	r0, r6
   14430:	pop	{r4, r5, r6, r7, r8, pc}
   14434:	svcvc	0x00f00000	; IMB
   14438:	push	{r4, r5, r6, lr}
   1443c:	sub	sp, sp, #32
   14440:	cmp	r1, #0
   14444:	mov	r5, r0
   14448:	ldr	r4, [sp, #48]	; 0x30
   1444c:	ldr	r6, [sp, #52]	; 0x34
   14450:	beq	144e0 <close@plt+0x35c4>
   14454:	strd	r2, [sp]
   14458:	mov	r3, r1
   1445c:	ldr	r2, [pc, #828]	; 147a0 <close@plt+0x3884>
   14460:	mov	r1, #1
   14464:	bl	10eb0 <__fprintf_chk@plt>
   14468:	mov	r2, #5
   1446c:	ldr	r1, [pc, #816]	; 147a4 <close@plt+0x3888>
   14470:	mov	r0, #0
   14474:	bl	10d54 <dcgettext@plt>
   14478:	ldr	r3, [pc, #808]	; 147a8 <close@plt+0x388c>
   1447c:	ldr	r2, [pc, #808]	; 147ac <close@plt+0x3890>
   14480:	str	r3, [sp]
   14484:	mov	r1, #1
   14488:	mov	r3, r0
   1448c:	mov	r0, r5
   14490:	bl	10eb0 <__fprintf_chk@plt>
   14494:	ldr	r1, [pc, #788]	; 147b0 <close@plt+0x3894>
   14498:	mov	r2, #5
   1449c:	mov	r0, #0
   144a0:	bl	10d54 <dcgettext@plt>
   144a4:	mov	r1, r5
   144a8:	bl	10cb8 <fputs_unlocked@plt>
   144ac:	cmp	r6, #9
   144b0:	ldrls	pc, [pc, r6, lsl #2]
   144b4:	b	14790 <close@plt+0x3874>
   144b8:	muleq	r1, ip, r7
   144bc:	andeq	r4, r1, r4, ror #10
   144c0:	muleq	r1, r0, r5
   144c4:	andeq	r4, r1, r4, asr #11
   144c8:	andeq	r4, r1, r0, lsl #12
   144cc:	andeq	r4, r1, r0, asr #12
   144d0:	andeq	r4, r1, r8, lsl #13
   144d4:	ldrdeq	r4, [r1], -r8
   144d8:	andeq	r4, r1, r0, lsr r7
   144dc:	strdeq	r4, [r1], -r8
   144e0:	str	r3, [sp]
   144e4:	mov	r1, #1
   144e8:	mov	r3, r2
   144ec:	ldr	r2, [pc, #704]	; 147b4 <close@plt+0x3898>
   144f0:	bl	10eb0 <__fprintf_chk@plt>
   144f4:	b	14468 <close@plt+0x354c>
   144f8:	ldr	r1, [pc, #696]	; 147b8 <close@plt+0x389c>
   144fc:	mov	r2, #5
   14500:	mov	r0, #0
   14504:	bl	10d54 <dcgettext@plt>
   14508:	ldr	r2, [r4, #32]
   1450c:	ldr	r3, [r4, #28]
   14510:	ldr	r1, [r4, #24]
   14514:	str	r2, [sp, #28]
   14518:	ldr	r2, [r4, #20]
   1451c:	str	r3, [sp, #24]
   14520:	ldr	r3, [r4, #16]
   14524:	str	r1, [sp, #20]
   14528:	ldr	r1, [r4, #12]
   1452c:	str	r2, [sp, #16]
   14530:	ldr	r2, [r4, #8]
   14534:	str	r3, [sp, #12]
   14538:	ldr	r3, [r4, #4]
   1453c:	str	r1, [sp, #8]
   14540:	str	r2, [sp, #4]
   14544:	str	r3, [sp]
   14548:	mov	r1, #1
   1454c:	ldr	r3, [r4]
   14550:	mov	r2, r0
   14554:	mov	r0, r5
   14558:	bl	10eb0 <__fprintf_chk@plt>
   1455c:	add	sp, sp, #32
   14560:	pop	{r4, r5, r6, pc}
   14564:	mov	r2, #5
   14568:	ldr	r1, [pc, #588]	; 147bc <close@plt+0x38a0>
   1456c:	mov	r0, #0
   14570:	bl	10d54 <dcgettext@plt>
   14574:	ldr	r3, [r4]
   14578:	mov	r1, #1
   1457c:	mov	r2, r0
   14580:	mov	r0, r5
   14584:	add	sp, sp, #32
   14588:	pop	{r4, r5, r6, lr}
   1458c:	b	10eb0 <__fprintf_chk@plt>
   14590:	mov	r2, #5
   14594:	ldr	r1, [pc, #548]	; 147c0 <close@plt+0x38a4>
   14598:	mov	r0, #0
   1459c:	bl	10d54 <dcgettext@plt>
   145a0:	ldr	r2, [r4, #4]
   145a4:	ldr	r3, [r4]
   145a8:	mov	r1, #1
   145ac:	str	r2, [sp, #48]	; 0x30
   145b0:	mov	r2, r0
   145b4:	mov	r0, r5
   145b8:	add	sp, sp, #32
   145bc:	pop	{r4, r5, r6, lr}
   145c0:	b	10eb0 <__fprintf_chk@plt>
   145c4:	mov	r2, #5
   145c8:	ldr	r1, [pc, #500]	; 147c4 <close@plt+0x38a8>
   145cc:	mov	r0, #0
   145d0:	bl	10d54 <dcgettext@plt>
   145d4:	ldr	r2, [r4, #8]
   145d8:	ldr	r3, [r4, #4]
   145dc:	mov	r1, #1
   145e0:	str	r2, [sp, #52]	; 0x34
   145e4:	str	r3, [sp, #48]	; 0x30
   145e8:	ldr	r3, [r4]
   145ec:	mov	r2, r0
   145f0:	mov	r0, r5
   145f4:	add	sp, sp, #32
   145f8:	pop	{r4, r5, r6, lr}
   145fc:	b	10eb0 <__fprintf_chk@plt>
   14600:	mov	r2, #5
   14604:	ldr	r1, [pc, #444]	; 147c8 <close@plt+0x38ac>
   14608:	mov	r0, #0
   1460c:	bl	10d54 <dcgettext@plt>
   14610:	ldr	r1, [r4, #12]
   14614:	ldr	r2, [r4, #8]
   14618:	ldr	r3, [r4, #4]
   1461c:	str	r1, [sp, #8]
   14620:	str	r2, [sp, #4]
   14624:	str	r3, [sp]
   14628:	mov	r1, #1
   1462c:	ldr	r3, [r4]
   14630:	mov	r2, r0
   14634:	mov	r0, r5
   14638:	bl	10eb0 <__fprintf_chk@plt>
   1463c:	b	1455c <close@plt+0x3640>
   14640:	mov	r2, #5
   14644:	ldr	r1, [pc, #384]	; 147cc <close@plt+0x38b0>
   14648:	mov	r0, #0
   1464c:	bl	10d54 <dcgettext@plt>
   14650:	ldr	r3, [r4, #16]
   14654:	ldr	r1, [r4, #12]
   14658:	ldr	r2, [r4, #8]
   1465c:	str	r3, [sp, #12]
   14660:	ldr	r3, [r4, #4]
   14664:	str	r1, [sp, #8]
   14668:	str	r2, [sp, #4]
   1466c:	str	r3, [sp]
   14670:	mov	r1, #1
   14674:	ldr	r3, [r4]
   14678:	mov	r2, r0
   1467c:	mov	r0, r5
   14680:	bl	10eb0 <__fprintf_chk@plt>
   14684:	b	1455c <close@plt+0x3640>
   14688:	mov	r2, #5
   1468c:	ldr	r1, [pc, #316]	; 147d0 <close@plt+0x38b4>
   14690:	mov	r0, #0
   14694:	bl	10d54 <dcgettext@plt>
   14698:	ldr	r2, [r4, #20]
   1469c:	ldr	r3, [r4, #16]
   146a0:	ldr	r1, [r4, #12]
   146a4:	str	r2, [sp, #16]
   146a8:	ldr	r2, [r4, #8]
   146ac:	str	r3, [sp, #12]
   146b0:	ldr	r3, [r4, #4]
   146b4:	str	r1, [sp, #8]
   146b8:	str	r2, [sp, #4]
   146bc:	str	r3, [sp]
   146c0:	mov	r1, #1
   146c4:	ldr	r3, [r4]
   146c8:	mov	r2, r0
   146cc:	mov	r0, r5
   146d0:	bl	10eb0 <__fprintf_chk@plt>
   146d4:	b	1455c <close@plt+0x3640>
   146d8:	mov	r2, #5
   146dc:	ldr	r1, [pc, #240]	; 147d4 <close@plt+0x38b8>
   146e0:	mov	r0, #0
   146e4:	bl	10d54 <dcgettext@plt>
   146e8:	ldr	r1, [r4, #24]
   146ec:	ldr	r2, [r4, #20]
   146f0:	ldr	r3, [r4, #16]
   146f4:	str	r1, [sp, #20]
   146f8:	ldr	r1, [r4, #12]
   146fc:	str	r2, [sp, #16]
   14700:	ldr	r2, [r4, #8]
   14704:	str	r3, [sp, #12]
   14708:	ldr	r3, [r4, #4]
   1470c:	str	r1, [sp, #8]
   14710:	str	r2, [sp, #4]
   14714:	str	r3, [sp]
   14718:	mov	r1, #1
   1471c:	ldr	r3, [r4]
   14720:	mov	r2, r0
   14724:	mov	r0, r5
   14728:	bl	10eb0 <__fprintf_chk@plt>
   1472c:	b	1455c <close@plt+0x3640>
   14730:	mov	r2, #5
   14734:	ldr	r1, [pc, #156]	; 147d8 <close@plt+0x38bc>
   14738:	mov	r0, #0
   1473c:	bl	10d54 <dcgettext@plt>
   14740:	ldr	r3, [r4, #28]
   14744:	ldr	r1, [r4, #24]
   14748:	ldr	r2, [r4, #20]
   1474c:	str	r3, [sp, #24]
   14750:	ldr	r3, [r4, #16]
   14754:	str	r1, [sp, #20]
   14758:	ldr	r1, [r4, #12]
   1475c:	str	r2, [sp, #16]
   14760:	ldr	r2, [r4, #8]
   14764:	str	r3, [sp, #12]
   14768:	ldr	r3, [r4, #4]
   1476c:	str	r1, [sp, #8]
   14770:	str	r2, [sp, #4]
   14774:	str	r3, [sp]
   14778:	mov	r1, #1
   1477c:	ldr	r3, [r4]
   14780:	mov	r2, r0
   14784:	mov	r0, r5
   14788:	bl	10eb0 <__fprintf_chk@plt>
   1478c:	b	1455c <close@plt+0x3640>
   14790:	mov	r2, #5
   14794:	ldr	r1, [pc, #64]	; 147dc <close@plt+0x38c0>
   14798:	b	14500 <close@plt+0x35e4>
   1479c:	bl	10f10 <abort@plt>
   147a0:	andeq	r5, r1, r4, lsr #20
   147a4:	andeq	r5, r1, r8, lsr sl
   147a8:	andeq	r0, r0, r2, ror #15
   147ac:	andeq	r5, r1, ip, lsl #26
   147b0:	andeq	r5, r1, ip, lsr sl
   147b4:	andeq	r5, r1, r0, lsr sl
   147b8:	andeq	r5, r1, r4, lsl ip
   147bc:	andeq	r5, r1, r8, lsl #22
   147c0:	andeq	r5, r1, r8, lsl fp
   147c4:	andeq	r5, r1, r0, lsr fp
   147c8:	andeq	r5, r1, ip, asr #22
   147cc:	andeq	r5, r1, ip, ror #22
   147d0:	muleq	r1, r0, fp
   147d4:			; <UNDEFINED> instruction: 0x00015bb8
   147d8:	andeq	r5, r1, r4, ror #23
   147dc:	andeq	r5, r1, r8, asr #24
   147e0:	push	{r4, r5, lr}
   147e4:	sub	sp, sp, #12
   147e8:	ldr	r5, [sp, #24]
   147ec:	ldr	ip, [r5]
   147f0:	cmp	ip, #0
   147f4:	beq	14810 <close@plt+0x38f4>
   147f8:	mov	lr, r5
   147fc:	mov	ip, #0
   14800:	ldr	r4, [lr, #4]!
   14804:	add	ip, ip, #1
   14808:	cmp	r4, #0
   1480c:	bne	14800 <close@plt+0x38e4>
   14810:	stm	sp, {r5, ip}
   14814:	bl	14438 <close@plt+0x351c>
   14818:	add	sp, sp, #12
   1481c:	pop	{r4, r5, pc}
   14820:	push	{r4, r5, r6, lr}
   14824:	sub	sp, sp, #56	; 0x38
   14828:	ldr	r6, [pc, #88]	; 14888 <close@plt+0x396c>
   1482c:	ldr	r5, [sp, #72]	; 0x48
   14830:	add	r4, sp, #8
   14834:	ldr	ip, [r6]
   14838:	str	ip, [sp, #52]	; 0x34
   1483c:	mov	ip, #0
   14840:	ldr	lr, [r5], #4
   14844:	cmp	lr, #0
   14848:	str	lr, [r4, #4]!
   1484c:	beq	1485c <close@plt+0x3940>
   14850:	add	ip, ip, #1
   14854:	cmp	ip, #10
   14858:	bne	14840 <close@plt+0x3924>
   1485c:	add	lr, sp, #12
   14860:	str	ip, [sp, #4]
   14864:	str	lr, [sp]
   14868:	bl	14438 <close@plt+0x351c>
   1486c:	ldr	r2, [sp, #52]	; 0x34
   14870:	ldr	r3, [r6]
   14874:	cmp	r2, r3
   14878:	bne	14884 <close@plt+0x3968>
   1487c:	add	sp, sp, #56	; 0x38
   14880:	pop	{r4, r5, r6, pc}
   14884:	bl	10d60 <__stack_chk_fail@plt>
   14888:	andeq	r5, r2, r8, lsl #30
   1488c:	push	{r3}		; (str r3, [sp, #-4]!)
   14890:	mov	ip, #0
   14894:	push	{r4, r5, r6, lr}
   14898:	sub	sp, sp, #60	; 0x3c
   1489c:	ldr	r6, [pc, #100]	; 14908 <close@plt+0x39ec>
   148a0:	add	r5, sp, #8
   148a4:	add	r4, sp, #80	; 0x50
   148a8:	ldr	r3, [r6]
   148ac:	str	r4, [sp, #8]
   148b0:	str	r3, [sp, #52]	; 0x34
   148b4:	ldr	r3, [sp, #76]	; 0x4c
   148b8:	ldr	lr, [r4], #4
   148bc:	cmp	lr, #0
   148c0:	str	lr, [r5, #4]!
   148c4:	beq	148d4 <close@plt+0x39b8>
   148c8:	add	ip, ip, #1
   148cc:	cmp	ip, #10
   148d0:	bne	148b8 <close@plt+0x399c>
   148d4:	add	lr, sp, #12
   148d8:	str	ip, [sp, #4]
   148dc:	str	lr, [sp]
   148e0:	bl	14438 <close@plt+0x351c>
   148e4:	ldr	r2, [sp, #52]	; 0x34
   148e8:	ldr	r3, [r6]
   148ec:	cmp	r2, r3
   148f0:	bne	14904 <close@plt+0x39e8>
   148f4:	add	sp, sp, #60	; 0x3c
   148f8:	pop	{r4, r5, r6, lr}
   148fc:	add	sp, sp, #4
   14900:	bx	lr
   14904:	bl	10d60 <__stack_chk_fail@plt>
   14908:	andeq	r5, r2, r8, lsl #30
   1490c:	push	{r4, lr}
   14910:	mov	r2, #5
   14914:	ldr	r1, [pc, #88]	; 14974 <close@plt+0x3a58>
   14918:	mov	r0, #0
   1491c:	bl	10d54 <dcgettext@plt>
   14920:	ldr	r2, [pc, #80]	; 14978 <close@plt+0x3a5c>
   14924:	mov	r1, r0
   14928:	mov	r0, #1
   1492c:	bl	10e8c <__printf_chk@plt>
   14930:	mov	r2, #5
   14934:	ldr	r1, [pc, #64]	; 1497c <close@plt+0x3a60>
   14938:	mov	r0, #0
   1493c:	bl	10d54 <dcgettext@plt>
   14940:	ldr	r3, [pc, #56]	; 14980 <close@plt+0x3a64>
   14944:	ldr	r2, [pc, #56]	; 14984 <close@plt+0x3a68>
   14948:	mov	r1, r0
   1494c:	mov	r0, #1
   14950:	bl	10e8c <__printf_chk@plt>
   14954:	ldr	r1, [pc, #44]	; 14988 <close@plt+0x3a6c>
   14958:	mov	r2, #5
   1495c:	mov	r0, #0
   14960:	bl	10d54 <dcgettext@plt>
   14964:	ldr	r3, [pc, #32]	; 1498c <close@plt+0x3a70>
   14968:	pop	{r4, lr}
   1496c:	ldr	r1, [r3]
   14970:	b	10cb8 <fputs_unlocked@plt>
   14974:	andeq	r5, r1, r4, lsl #25
   14978:	muleq	r1, ip, ip
   1497c:			; <UNDEFINED> instruction: 0x00015cb4
   14980:	muleq	r1, r8, r6
   14984:	andeq	r5, r1, r0, asr #13
   14988:	andeq	r5, r1, r8, asr #25
   1498c:	andeq	r6, r2, r4, ror #2
   14990:	push	{r4, lr}
   14994:	mov	r4, r0
   14998:	bl	10dfc <malloc@plt>
   1499c:	adds	r4, r4, #0
   149a0:	movne	r4, #1
   149a4:	cmp	r0, #0
   149a8:	movne	r4, #0
   149ac:	cmp	r4, #0
   149b0:	popeq	{r4, pc}
   149b4:	bl	14bd8 <close@plt+0x3cbc>
   149b8:	push	{r4, r5, r6, lr}
   149bc:	umull	r4, r5, r0, r1
   149c0:	adds	r3, r5, #0
   149c4:	movne	r3, #1
   149c8:	cmp	r4, #0
   149cc:	blt	149e4 <close@plt+0x3ac8>
   149d0:	cmp	r3, #0
   149d4:	bne	149e4 <close@plt+0x3ac8>
   149d8:	mul	r0, r1, r0
   149dc:	pop	{r4, r5, r6, lr}
   149e0:	b	14990 <close@plt+0x3a74>
   149e4:	bl	14bd8 <close@plt+0x3cbc>
   149e8:	b	14990 <close@plt+0x3a74>
   149ec:	adds	r3, r0, #0
   149f0:	movne	r3, #1
   149f4:	cmp	r1, #0
   149f8:	movne	r3, #0
   149fc:	cmp	r3, #0
   14a00:	push	{r4, lr}
   14a04:	bne	14a2c <close@plt+0x3b10>
   14a08:	mov	r4, r1
   14a0c:	bl	10d6c <realloc@plt>
   14a10:	adds	r4, r4, #0
   14a14:	movne	r4, #1
   14a18:	cmp	r0, #0
   14a1c:	movne	r4, #0
   14a20:	cmp	r4, #0
   14a24:	popeq	{r4, pc}
   14a28:	bl	14bd8 <close@plt+0x3cbc>
   14a2c:	bl	10d0c <free@plt>
   14a30:	mov	r0, #0
   14a34:	pop	{r4, pc}
   14a38:	push	{r4, r5, r6, lr}
   14a3c:	umull	r4, r5, r1, r2
   14a40:	adds	r3, r5, #0
   14a44:	movne	r3, #1
   14a48:	cmp	r4, #0
   14a4c:	blt	14a64 <close@plt+0x3b48>
   14a50:	cmp	r3, #0
   14a54:	bne	14a64 <close@plt+0x3b48>
   14a58:	mul	r1, r2, r1
   14a5c:	pop	{r4, r5, r6, lr}
   14a60:	b	149ec <close@plt+0x3ad0>
   14a64:	bl	14bd8 <close@plt+0x3cbc>
   14a68:	push	{r4, r5, r6, r7, r8, lr}
   14a6c:	subs	r7, r0, #0
   14a70:	mov	r6, r1
   14a74:	mov	r5, r2
   14a78:	ldr	r4, [r1]
   14a7c:	beq	14ab0 <close@plt+0x3b94>
   14a80:	mov	r1, r2
   14a84:	ldr	r0, [pc, #104]	; 14af4 <close@plt+0x3bd8>
   14a88:	bl	14f2c <close@plt+0x4010>
   14a8c:	cmp	r0, r4
   14a90:	bls	14ad4 <close@plt+0x3bb8>
   14a94:	add	r3, r4, #1
   14a98:	add	r4, r3, r4, lsr #1
   14a9c:	str	r4, [r6]
   14aa0:	mul	r1, r5, r4
   14aa4:	mov	r0, r7
   14aa8:	pop	{r4, r5, r6, r7, r8, lr}
   14aac:	b	149ec <close@plt+0x3ad0>
   14ab0:	cmp	r4, #0
   14ab4:	beq	14ad8 <close@plt+0x3bbc>
   14ab8:	umull	r0, r1, r4, r5
   14abc:	adds	r3, r1, #0
   14ac0:	movne	r3, #1
   14ac4:	cmp	r0, #0
   14ac8:	blt	14ad4 <close@plt+0x3bb8>
   14acc:	cmp	r3, #0
   14ad0:	beq	14a9c <close@plt+0x3b80>
   14ad4:	bl	14bd8 <close@plt+0x3cbc>
   14ad8:	mov	r1, r2
   14adc:	mov	r0, #64	; 0x40
   14ae0:	bl	14f2c <close@plt+0x4010>
   14ae4:	cmp	r5, #64	; 0x40
   14ae8:	movls	r4, r0
   14aec:	addhi	r4, r0, #1
   14af0:	b	14ab8 <close@plt+0x3b9c>
   14af4:	ldrbpl	r5, [r5, #-1364]	; 0xfffffaac
   14af8:	cmp	r0, #0
   14afc:	ldr	r3, [r1]
   14b00:	beq	14b24 <close@plt+0x3c08>
   14b04:	ldr	r2, [pc, #60]	; 14b48 <close@plt+0x3c2c>
   14b08:	cmp	r3, r2
   14b0c:	bhi	14b40 <close@plt+0x3c24>
   14b10:	add	r2, r3, #1
   14b14:	add	r3, r2, r3, lsr #1
   14b18:	str	r3, [r1]
   14b1c:	mov	r1, r3
   14b20:	b	149ec <close@plt+0x3ad0>
   14b24:	cmp	r3, #0
   14b28:	bne	14b3c <close@plt+0x3c20>
   14b2c:	mov	r3, #64	; 0x40
   14b30:	str	r3, [r1]
   14b34:	mov	r1, r3
   14b38:	b	149ec <close@plt+0x3ad0>
   14b3c:	bge	14b18 <close@plt+0x3bfc>
   14b40:	push	{r4, lr}
   14b44:	bl	14bd8 <close@plt+0x3cbc>
   14b48:	ldrbpl	r5, [r5, #-1363]	; 0xfffffaad
   14b4c:	push	{r4, lr}
   14b50:	mov	r4, r0
   14b54:	bl	14990 <close@plt+0x3a74>
   14b58:	mov	r2, r4
   14b5c:	mov	r1, #0
   14b60:	pop	{r4, lr}
   14b64:	b	10e80 <memset@plt>
   14b68:	push	{r4, r5, r6, lr}
   14b6c:	umull	r4, r5, r0, r1
   14b70:	adds	r3, r5, #0
   14b74:	movne	r3, #1
   14b78:	cmp	r4, #0
   14b7c:	blt	14b94 <close@plt+0x3c78>
   14b80:	cmp	r3, #0
   14b84:	bne	14b94 <close@plt+0x3c78>
   14b88:	bl	10cac <calloc@plt>
   14b8c:	cmp	r0, #0
   14b90:	popne	{r4, r5, r6, pc}
   14b94:	bl	14bd8 <close@plt+0x3cbc>
   14b98:	push	{r4, r5, r6, lr}
   14b9c:	mov	r4, r1
   14ba0:	mov	r5, r0
   14ba4:	mov	r0, r1
   14ba8:	bl	14990 <close@plt+0x3a74>
   14bac:	mov	r2, r4
   14bb0:	mov	r1, r5
   14bb4:	pop	{r4, r5, r6, lr}
   14bb8:	b	10d24 <memcpy@plt>
   14bbc:	push	{r4, lr}
   14bc0:	mov	r4, r0
   14bc4:	bl	10e50 <strlen@plt>
   14bc8:	add	r1, r0, #1
   14bcc:	mov	r0, r4
   14bd0:	pop	{r4, lr}
   14bd4:	b	14b98 <close@plt+0x3c7c>
   14bd8:	ldr	r3, [pc, #44]	; 14c0c <close@plt+0x3cf0>
   14bdc:	push	{r4, lr}
   14be0:	mov	r2, #5
   14be4:	ldr	r1, [pc, #36]	; 14c10 <close@plt+0x3cf4>
   14be8:	mov	r0, #0
   14bec:	ldr	r4, [r3]
   14bf0:	bl	10d54 <dcgettext@plt>
   14bf4:	ldr	r2, [pc, #24]	; 14c14 <close@plt+0x3cf8>
   14bf8:	mov	r1, #0
   14bfc:	mov	r3, r0
   14c00:	mov	r0, r4
   14c04:	bl	10de4 <error@plt>
   14c08:	bl	10f10 <abort@plt>
   14c0c:	andeq	r6, r2, ip, lsl #2
   14c10:	andeq	r5, r1, ip, lsr sp
   14c14:	andeq	r5, r1, r4, lsl #18
   14c18:	push	{r4, r5, r6, r7, r8, lr}
   14c1c:	subs	r7, r0, #0
   14c20:	ldr	r5, [pc, #108]	; 14c94 <close@plt+0x3d78>
   14c24:	sub	sp, sp, #8
   14c28:	mov	r8, r1
   14c2c:	ldr	r1, [r5]
   14c30:	moveq	r7, sp
   14c34:	str	r1, [sp, #4]
   14c38:	mov	r0, r7
   14c3c:	mov	r1, r8
   14c40:	mov	r6, r2
   14c44:	bl	10dd8 <mbrtowc@plt>
   14c48:	cmp	r6, #0
   14c4c:	cmnne	r0, #3
   14c50:	mov	r4, r0
   14c54:	bhi	14c74 <close@plt+0x3d58>
   14c58:	ldr	r2, [sp, #4]
   14c5c:	ldr	r3, [r5]
   14c60:	mov	r0, r4
   14c64:	cmp	r2, r3
   14c68:	bne	14c90 <close@plt+0x3d74>
   14c6c:	add	sp, sp, #8
   14c70:	pop	{r4, r5, r6, r7, r8, pc}
   14c74:	mov	r0, #0
   14c78:	bl	14d0c <close@plt+0x3df0>
   14c7c:	cmp	r0, #0
   14c80:	moveq	r4, #1
   14c84:	ldrbeq	r3, [r8]
   14c88:	streq	r3, [r7]
   14c8c:	b	14c58 <close@plt+0x3d3c>
   14c90:	bl	10d60 <__stack_chk_fail@plt>
   14c94:	andeq	r5, r2, r8, lsl #30
   14c98:	push	{r4, r5, r6, lr}
   14c9c:	mov	r4, r0
   14ca0:	bl	10dcc <__fpending@plt>
   14ca4:	ldr	r5, [r4]
   14ca8:	and	r5, r5, #32
   14cac:	mov	r6, r0
   14cb0:	mov	r0, r4
   14cb4:	bl	14d8c <close@plt+0x3e70>
   14cb8:	cmp	r5, #0
   14cbc:	mov	r4, r0
   14cc0:	bne	14cec <close@plt+0x3dd0>
   14cc4:	cmp	r0, #0
   14cc8:	beq	14ce4 <close@plt+0x3dc8>
   14ccc:	cmp	r6, #0
   14cd0:	bne	14d04 <close@plt+0x3de8>
   14cd4:	bl	10e68 <__errno_location@plt>
   14cd8:	ldr	r4, [r0]
   14cdc:	subs	r4, r4, #9
   14ce0:	mvnne	r4, #0
   14ce4:	mov	r0, r4
   14ce8:	pop	{r4, r5, r6, pc}
   14cec:	cmp	r0, #0
   14cf0:	bne	14d04 <close@plt+0x3de8>
   14cf4:	bl	10e68 <__errno_location@plt>
   14cf8:	str	r4, [r0]
   14cfc:	mvn	r4, #0
   14d00:	b	14ce4 <close@plt+0x3dc8>
   14d04:	mvn	r4, #0
   14d08:	b	14ce4 <close@plt+0x3dc8>
   14d0c:	push	{r4, lr}
   14d10:	mov	r1, #0
   14d14:	bl	10ed4 <setlocale@plt>
   14d18:	subs	r4, r0, #0
   14d1c:	beq	14d48 <close@plt+0x3e2c>
   14d20:	ldr	r1, [pc, #40]	; 14d50 <close@plt+0x3e34>
   14d24:	bl	10cd0 <strcmp@plt>
   14d28:	cmp	r0, #0
   14d2c:	popeq	{r4, pc}
   14d30:	mov	r0, r4
   14d34:	ldr	r1, [pc, #24]	; 14d54 <close@plt+0x3e38>
   14d38:	bl	10cd0 <strcmp@plt>
   14d3c:	adds	r0, r0, #0
   14d40:	movne	r0, #1
   14d44:	pop	{r4, pc}
   14d48:	mov	r0, #1
   14d4c:	pop	{r4, pc}
   14d50:	andeq	r5, r1, r0, asr sp
   14d54:	andeq	r5, r1, r4, asr sp
   14d58:	push	{r4, lr}
   14d5c:	mov	r0, #14
   14d60:	bl	10eec <nl_langinfo@plt>
   14d64:	cmp	r0, #0
   14d68:	beq	14d80 <close@plt+0x3e64>
   14d6c:	ldrb	r2, [r0]
   14d70:	ldr	r3, [pc, #16]	; 14d88 <close@plt+0x3e6c>
   14d74:	cmp	r2, #0
   14d78:	moveq	r0, r3
   14d7c:	pop	{r4, pc}
   14d80:	ldr	r0, [pc]	; 14d88 <close@plt+0x3e6c>
   14d84:	pop	{r4, pc}
   14d88:	andeq	r5, r1, ip, asr sp
   14d8c:	push	{r4, r5, lr}
   14d90:	sub	sp, sp, #12
   14d94:	mov	r4, r0
   14d98:	bl	10ea4 <fileno@plt>
   14d9c:	cmp	r0, #0
   14da0:	mov	r0, r4
   14da4:	blt	14e20 <close@plt+0x3f04>
   14da8:	bl	10e14 <__freading@plt>
   14dac:	cmp	r0, #0
   14db0:	bne	14dec <close@plt+0x3ed0>
   14db4:	mov	r0, r4
   14db8:	bl	14e2c <close@plt+0x3f10>
   14dbc:	cmp	r0, #0
   14dc0:	beq	14e1c <close@plt+0x3f00>
   14dc4:	bl	10e68 <__errno_location@plt>
   14dc8:	mov	r5, r0
   14dcc:	mov	r0, r4
   14dd0:	ldr	r4, [r5]
   14dd4:	bl	10ebc <fclose@plt>
   14dd8:	cmp	r4, #0
   14ddc:	mvnne	r0, #0
   14de0:	strne	r4, [r5]
   14de4:	add	sp, sp, #12
   14de8:	pop	{r4, r5, pc}
   14dec:	mov	r0, r4
   14df0:	bl	10ea4 <fileno@plt>
   14df4:	mov	r3, #1
   14df8:	str	r3, [sp]
   14dfc:	mov	r2, #0
   14e00:	mov	r3, #0
   14e04:	bl	10db4 <lseek64@plt>
   14e08:	mvn	r3, #0
   14e0c:	mvn	r2, #0
   14e10:	cmp	r1, r3
   14e14:	cmpeq	r0, r2
   14e18:	bne	14db4 <close@plt+0x3e98>
   14e1c:	mov	r0, r4
   14e20:	add	sp, sp, #12
   14e24:	pop	{r4, r5, lr}
   14e28:	b	10ebc <fclose@plt>
   14e2c:	push	{r4, lr}
   14e30:	subs	r4, r0, #0
   14e34:	sub	sp, sp, #8
   14e38:	beq	14e54 <close@plt+0x3f38>
   14e3c:	bl	10e14 <__freading@plt>
   14e40:	cmp	r0, #0
   14e44:	beq	14e54 <close@plt+0x3f38>
   14e48:	ldr	r3, [r4]
   14e4c:	tst	r3, #256	; 0x100
   14e50:	bne	14e64 <close@plt+0x3f48>
   14e54:	mov	r0, r4
   14e58:	add	sp, sp, #8
   14e5c:	pop	{r4, lr}
   14e60:	b	10cf4 <fflush@plt>
   14e64:	mov	r3, #1
   14e68:	str	r3, [sp]
   14e6c:	mov	r2, #0
   14e70:	mov	r3, #0
   14e74:	mov	r0, r4
   14e78:	bl	14e8c <close@plt+0x3f70>
   14e7c:	mov	r0, r4
   14e80:	add	sp, sp, #8
   14e84:	pop	{r4, lr}
   14e88:	b	10cf4 <fflush@plt>
   14e8c:	push	{r4, r5, r6, r7, r8, lr}
   14e90:	sub	sp, sp, #8
   14e94:	ldmib	r0, {ip, lr}
   14e98:	mov	r4, r0
   14e9c:	ldr	r5, [sp, #32]
   14ea0:	cmp	lr, ip
   14ea4:	beq	14ebc <close@plt+0x3fa0>
   14ea8:	str	r5, [sp, #32]
   14eac:	mov	r0, r4
   14eb0:	add	sp, sp, #8
   14eb4:	pop	{r4, r5, r6, r7, r8, lr}
   14eb8:	b	10ec8 <fseeko64@plt>
   14ebc:	ldr	lr, [r0, #20]
   14ec0:	ldr	ip, [r0, #16]
   14ec4:	cmp	lr, ip
   14ec8:	bne	14ea8 <close@plt+0x3f8c>
   14ecc:	ldr	r8, [r0, #36]	; 0x24
   14ed0:	cmp	r8, #0
   14ed4:	bne	14ea8 <close@plt+0x3f8c>
   14ed8:	mov	r6, r2
   14edc:	mov	r7, r3
   14ee0:	bl	10ea4 <fileno@plt>
   14ee4:	mov	r2, r6
   14ee8:	mov	r3, r7
   14eec:	str	r5, [sp]
   14ef0:	bl	10db4 <lseek64@plt>
   14ef4:	mvn	r3, #0
   14ef8:	mvn	r2, #0
   14efc:	cmp	r1, r3
   14f00:	cmpeq	r0, r2
   14f04:	beq	14f24 <close@plt+0x4008>
   14f08:	ldr	r3, [r4]
   14f0c:	strd	r0, [r4, #80]	; 0x50
   14f10:	mov	r0, r8
   14f14:	bic	r3, r3, #16
   14f18:	str	r3, [r4]
   14f1c:	add	sp, sp, #8
   14f20:	pop	{r4, r5, r6, r7, r8, pc}
   14f24:	mvn	r0, #0
   14f28:	b	14f1c <close@plt+0x4000>
   14f2c:	subs	r2, r1, #1
   14f30:	bxeq	lr
   14f34:	bcc	1510c <close@plt+0x41f0>
   14f38:	cmp	r0, r1
   14f3c:	bls	150f0 <close@plt+0x41d4>
   14f40:	tst	r1, r2
   14f44:	beq	150fc <close@plt+0x41e0>
   14f48:	clz	r3, r0
   14f4c:	clz	r2, r1
   14f50:	sub	r3, r2, r3
   14f54:	rsbs	r3, r3, #31
   14f58:	addne	r3, r3, r3, lsl #1
   14f5c:	mov	r2, #0
   14f60:	addne	pc, pc, r3, lsl #2
   14f64:	nop			; (mov r0, r0)
   14f68:	cmp	r0, r1, lsl #31
   14f6c:	adc	r2, r2, r2
   14f70:	subcs	r0, r0, r1, lsl #31
   14f74:	cmp	r0, r1, lsl #30
   14f78:	adc	r2, r2, r2
   14f7c:	subcs	r0, r0, r1, lsl #30
   14f80:	cmp	r0, r1, lsl #29
   14f84:	adc	r2, r2, r2
   14f88:	subcs	r0, r0, r1, lsl #29
   14f8c:	cmp	r0, r1, lsl #28
   14f90:	adc	r2, r2, r2
   14f94:	subcs	r0, r0, r1, lsl #28
   14f98:	cmp	r0, r1, lsl #27
   14f9c:	adc	r2, r2, r2
   14fa0:	subcs	r0, r0, r1, lsl #27
   14fa4:	cmp	r0, r1, lsl #26
   14fa8:	adc	r2, r2, r2
   14fac:	subcs	r0, r0, r1, lsl #26
   14fb0:	cmp	r0, r1, lsl #25
   14fb4:	adc	r2, r2, r2
   14fb8:	subcs	r0, r0, r1, lsl #25
   14fbc:	cmp	r0, r1, lsl #24
   14fc0:	adc	r2, r2, r2
   14fc4:	subcs	r0, r0, r1, lsl #24
   14fc8:	cmp	r0, r1, lsl #23
   14fcc:	adc	r2, r2, r2
   14fd0:	subcs	r0, r0, r1, lsl #23
   14fd4:	cmp	r0, r1, lsl #22
   14fd8:	adc	r2, r2, r2
   14fdc:	subcs	r0, r0, r1, lsl #22
   14fe0:	cmp	r0, r1, lsl #21
   14fe4:	adc	r2, r2, r2
   14fe8:	subcs	r0, r0, r1, lsl #21
   14fec:	cmp	r0, r1, lsl #20
   14ff0:	adc	r2, r2, r2
   14ff4:	subcs	r0, r0, r1, lsl #20
   14ff8:	cmp	r0, r1, lsl #19
   14ffc:	adc	r2, r2, r2
   15000:	subcs	r0, r0, r1, lsl #19
   15004:	cmp	r0, r1, lsl #18
   15008:	adc	r2, r2, r2
   1500c:	subcs	r0, r0, r1, lsl #18
   15010:	cmp	r0, r1, lsl #17
   15014:	adc	r2, r2, r2
   15018:	subcs	r0, r0, r1, lsl #17
   1501c:	cmp	r0, r1, lsl #16
   15020:	adc	r2, r2, r2
   15024:	subcs	r0, r0, r1, lsl #16
   15028:	cmp	r0, r1, lsl #15
   1502c:	adc	r2, r2, r2
   15030:	subcs	r0, r0, r1, lsl #15
   15034:	cmp	r0, r1, lsl #14
   15038:	adc	r2, r2, r2
   1503c:	subcs	r0, r0, r1, lsl #14
   15040:	cmp	r0, r1, lsl #13
   15044:	adc	r2, r2, r2
   15048:	subcs	r0, r0, r1, lsl #13
   1504c:	cmp	r0, r1, lsl #12
   15050:	adc	r2, r2, r2
   15054:	subcs	r0, r0, r1, lsl #12
   15058:	cmp	r0, r1, lsl #11
   1505c:	adc	r2, r2, r2
   15060:	subcs	r0, r0, r1, lsl #11
   15064:	cmp	r0, r1, lsl #10
   15068:	adc	r2, r2, r2
   1506c:	subcs	r0, r0, r1, lsl #10
   15070:	cmp	r0, r1, lsl #9
   15074:	adc	r2, r2, r2
   15078:	subcs	r0, r0, r1, lsl #9
   1507c:	cmp	r0, r1, lsl #8
   15080:	adc	r2, r2, r2
   15084:	subcs	r0, r0, r1, lsl #8
   15088:	cmp	r0, r1, lsl #7
   1508c:	adc	r2, r2, r2
   15090:	subcs	r0, r0, r1, lsl #7
   15094:	cmp	r0, r1, lsl #6
   15098:	adc	r2, r2, r2
   1509c:	subcs	r0, r0, r1, lsl #6
   150a0:	cmp	r0, r1, lsl #5
   150a4:	adc	r2, r2, r2
   150a8:	subcs	r0, r0, r1, lsl #5
   150ac:	cmp	r0, r1, lsl #4
   150b0:	adc	r2, r2, r2
   150b4:	subcs	r0, r0, r1, lsl #4
   150b8:	cmp	r0, r1, lsl #3
   150bc:	adc	r2, r2, r2
   150c0:	subcs	r0, r0, r1, lsl #3
   150c4:	cmp	r0, r1, lsl #2
   150c8:	adc	r2, r2, r2
   150cc:	subcs	r0, r0, r1, lsl #2
   150d0:	cmp	r0, r1, lsl #1
   150d4:	adc	r2, r2, r2
   150d8:	subcs	r0, r0, r1, lsl #1
   150dc:	cmp	r0, r1
   150e0:	adc	r2, r2, r2
   150e4:	subcs	r0, r0, r1
   150e8:	mov	r0, r2
   150ec:	bx	lr
   150f0:	moveq	r0, #1
   150f4:	movne	r0, #0
   150f8:	bx	lr
   150fc:	clz	r2, r1
   15100:	rsb	r2, r2, #31
   15104:	lsr	r0, r0, r2
   15108:	bx	lr
   1510c:	cmp	r0, #0
   15110:	mvnne	r0, #0
   15114:	b	15138 <close@plt+0x421c>
   15118:	cmp	r1, #0
   1511c:	beq	1510c <close@plt+0x41f0>
   15120:	push	{r0, r1, lr}
   15124:	bl	14f2c <close@plt+0x4010>
   15128:	pop	{r1, r2, lr}
   1512c:	mul	r3, r2, r0
   15130:	sub	r1, r1, r3
   15134:	bx	lr
   15138:	push	{r1, lr}
   1513c:	mov	r0, #8
   15140:	bl	10cc4 <raise@plt>
   15144:	pop	{r1, pc}
   15148:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1514c:	mov	r7, r0
   15150:	ldr	r6, [pc, #72]	; 151a0 <close@plt+0x4284>
   15154:	ldr	r5, [pc, #72]	; 151a4 <close@plt+0x4288>
   15158:	add	r6, pc, r6
   1515c:	add	r5, pc, r5
   15160:	sub	r6, r6, r5
   15164:	mov	r8, r1
   15168:	mov	r9, r2
   1516c:	bl	10c8c <calloc@plt-0x20>
   15170:	asrs	r6, r6, #2
   15174:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15178:	mov	r4, #0
   1517c:	add	r4, r4, #1
   15180:	ldr	r3, [r5], #4
   15184:	mov	r2, r9
   15188:	mov	r1, r8
   1518c:	mov	r0, r7
   15190:	blx	r3
   15194:	cmp	r6, r4
   15198:	bne	1517c <close@plt+0x4260>
   1519c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   151a0:	andeq	r0, r1, r4, lsr #27
   151a4:	muleq	r1, ip, sp
   151a8:	bx	lr
   151ac:	ldr	r3, [pc, #12]	; 151c0 <close@plt+0x42a4>
   151b0:	mov	r1, #0
   151b4:	add	r3, pc, r3
   151b8:	ldr	r2, [r3]
   151bc:	b	10e74 <__cxa_atexit@plt>
   151c0:	andeq	r0, r1, ip, lsr #30

Disassembly of section .fini:

000151c4 <.fini>:
   151c4:	push	{r3, lr}
   151c8:	pop	{r3, pc}
