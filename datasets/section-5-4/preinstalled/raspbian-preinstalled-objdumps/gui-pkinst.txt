
raspbian-preinstalled/gui-pkinst:     file format elf32-littlearm


Disassembly of section .init:

00010ff0 <.init>:
   10ff0:	push	{r3, lr}
   10ff4:	bl	11488 <g_strcmp0@plt+0x208>
   10ff8:	pop	{r3, pc}

Disassembly of section .plt:

00010ffc <bind_textdomain_codeset@plt-0x14>:
   10ffc:	push	{lr}		; (str lr, [sp, #-4]!)
   11000:	ldr	lr, [pc, #4]	; 1100c <bind_textdomain_codeset@plt-0x4>
   11004:	add	lr, pc, lr
   11008:	ldr	pc, [lr, #8]!
   1100c:	strdeq	r1, [r1], -r4

00011010 <bind_textdomain_codeset@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #69632	; 0x11000
   11018:	ldr	pc, [ip, #4084]!	; 0xff4

0001101c <pk_progress_get_role@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #69632	; 0x11000
   11024:	ldr	pc, [ip, #4076]!	; 0xfec

00011028 <pk_progress_get_percentage@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #69632	; 0x11000
   11030:	ldr	pc, [ip, #4068]!	; 0xfe4

00011034 <pk_results_get_error_code@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #69632	; 0x11000
   1103c:	ldr	pc, [ip, #4060]!	; 0xfdc

00011040 <puts@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #69632	; 0x11000
   11048:	ldr	pc, [ip, #4052]!	; 0xfd4

0001104c <pk_error_get_details@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #69632	; 0x11000
   11054:	ldr	pc, [ip, #4044]!	; 0xfcc

00011058 <textdomain@plt>:
   11058:	add	ip, pc, #0, 12
   1105c:	add	ip, ip, #69632	; 0x11000
   11060:	ldr	pc, [ip, #4036]!	; 0xfc4

00011064 <gtk_icon_theme_prepend_search_path@plt>:
   11064:	add	ip, pc, #0, 12
   11068:	add	ip, ip, #69632	; 0x11000
   1106c:	ldr	pc, [ip, #4028]!	; 0xfbc

00011070 <gtk_builder_get_object@plt>:
   11070:	add	ip, pc, #0, 12
   11074:	add	ip, ip, #69632	; 0x11000
   11078:	ldr	pc, [ip, #4020]!	; 0xfb4

0001107c <gtk_progress_bar_set_fraction@plt>:
   1107c:	add	ip, pc, #0, 12
   11080:	add	ip, ip, #69632	; 0x11000
   11084:	ldr	pc, [ip, #4012]!	; 0xfac

00011088 <g_strdup_printf@plt>:
   11088:	add	ip, pc, #0, 12
   1108c:	add	ip, ip, #69632	; 0x11000
   11090:	ldr	pc, [ip, #4004]!	; 0xfa4

00011094 <abort@plt>:
   11094:	add	ip, pc, #0, 12
   11098:	add	ip, ip, #69632	; 0x11000
   1109c:	ldr	pc, [ip, #3996]!	; 0xf9c

000110a0 <gdk_color_parse@plt>:
   110a0:	add	ip, pc, #0, 12
   110a4:	add	ip, ip, #69632	; 0x11000
   110a8:	ldr	pc, [ip, #3988]!	; 0xf94

000110ac <gtk_window_set_default_size@plt>:
   110ac:	add	ip, pc, #0, 12
   110b0:	add	ip, ip, #69632	; 0x11000
   110b4:	ldr	pc, [ip, #3980]!	; 0xf8c

000110b8 <gdk_threads_leave@plt>:
   110b8:	add	ip, pc, #0, 12
   110bc:	add	ip, ip, #69632	; 0x11000
   110c0:	ldr	pc, [ip, #3972]!	; 0xf84

000110c4 <pk_package_sack_get_array@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #69632	; 0x11000
   110cc:	ldr	pc, [ip, #3964]!	; 0xf7c

000110d0 <system@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #69632	; 0x11000
   110d8:	ldr	pc, [ip, #3956]!	; 0xf74

000110dc <g_idle_add@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #69632	; 0x11000
   110e4:	ldr	pc, [ip, #3948]!	; 0xf6c

000110e8 <g_signal_connect_data@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #69632	; 0x11000
   110f0:	ldr	pc, [ip, #3940]!	; 0xf64

000110f4 <gtk_label_set_text@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #69632	; 0x11000
   110fc:	ldr	pc, [ip, #3932]!	; 0xf5c

00011100 <gtk_widget_destroy@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #69632	; 0x11000
   11108:	ldr	pc, [ip, #3924]!	; 0xf54

0001110c <gdk_threads_enter@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #69632	; 0x11000
   11114:	ldr	pc, [ip, #3916]!	; 0xf4c

00011118 <gtk_widget_modify_bg@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #69632	; 0x11000
   11120:	ldr	pc, [ip, #3908]!	; 0xf44

00011124 <__stack_chk_fail@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #69632	; 0x11000
   1112c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011130 <gtk_progress_bar_pulse@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #69632	; 0x11000
   11138:	ldr	pc, [ip, #3892]!	; 0xf34

0001113c <g_free@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #69632	; 0x11000
   11144:	ldr	pc, [ip, #3884]!	; 0xf2c

00011148 <dcgettext@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #69632	; 0x11000
   11150:	ldr	pc, [ip, #3876]!	; 0xf24

00011154 <gtk_main@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #69632	; 0x11000
   1115c:	ldr	pc, [ip, #3868]!	; 0xf1c

00011160 <gdk_threads_init@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #69632	; 0x11000
   11168:	ldr	pc, [ip, #3860]!	; 0xf14

0001116c <pk_task_new@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #69632	; 0x11000
   11174:	ldr	pc, [ip, #3852]!	; 0xf0c

00011178 <g_object_get@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #69632	; 0x11000
   11180:	ldr	pc, [ip, #3844]!	; 0xf04

00011184 <pk_task_generic_finish@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #69632	; 0x11000
   1118c:	ldr	pc, [ip, #3836]!	; 0xefc

00011190 <g_timeout_add_seconds@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #69632	; 0x11000
   11198:	ldr	pc, [ip, #3828]!	; 0xef4

0001119c <bindtextdomain@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #69632	; 0x11000
   111a4:	ldr	pc, [ip, #3820]!	; 0xeec

000111a8 <pk_client_resolve_async@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #69632	; 0x11000
   111b0:	ldr	pc, [ip, #3812]!	; 0xee4

000111b4 <pk_results_get_package_sack@plt>:
   111b4:	add	ip, pc, #0, 12
   111b8:	add	ip, ip, #69632	; 0x11000
   111bc:	ldr	pc, [ip, #3804]!	; 0xedc

000111c0 <setlocale@plt>:
   111c0:	add	ip, pc, #0, 12
   111c4:	add	ip, ip, #69632	; 0x11000
   111c8:	ldr	pc, [ip, #3796]!	; 0xed4

000111cc <pk_task_install_packages_async@plt>:
   111cc:	add	ip, pc, #0, 12
   111d0:	add	ip, ip, #69632	; 0x11000
   111d4:	ldr	pc, [ip, #3788]!	; 0xecc

000111d8 <gtk_widget_show_all@plt>:
   111d8:	add	ip, pc, #0, 12
   111dc:	add	ip, ip, #69632	; 0x11000
   111e0:	ldr	pc, [ip, #3780]!	; 0xec4

000111e4 <gtk_builder_new@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #69632	; 0x11000
   111ec:	ldr	pc, [ip, #3772]!	; 0xebc

000111f0 <g_object_unref@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #69632	; 0x11000
   111f8:	ldr	pc, [ip, #3764]!	; 0xeb4

000111fc <gtk_main_quit@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #69632	; 0x11000
   11204:	ldr	pc, [ip, #3756]!	; 0xeac

00011208 <g_ptr_array_unref@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #69632	; 0x11000
   11210:	ldr	pc, [ip, #3748]!	; 0xea4

00011214 <gtk_window_set_modal@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #69632	; 0x11000
   1121c:	ldr	pc, [ip, #3740]!	; 0xe9c

00011220 <pk_progress_get_status@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #69632	; 0x11000
   11228:	ldr	pc, [ip, #3732]!	; 0xe94

0001122c <gtk_init@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #69632	; 0x11000
   11234:	ldr	pc, [ip, #3724]!	; 0xe8c

00011238 <gtk_icon_theme_get_default@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #69632	; 0x11000
   11240:	ldr	pc, [ip, #3716]!	; 0xe84

00011244 <pk_client_refresh_cache_async@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #69632	; 0x11000
   1124c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011250 <__libc_start_main@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #69632	; 0x11000
   11258:	ldr	pc, [ip, #3700]!	; 0xe74

0001125c <gtk_widget_set_visible@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #69632	; 0x11000
   11264:	ldr	pc, [ip, #3692]!	; 0xe6c

00011268 <__gmon_start__@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #69632	; 0x11000
   11270:	ldr	pc, [ip, #3684]!	; 0xe64

00011274 <gtk_builder_add_from_file@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #69632	; 0x11000
   1127c:	ldr	pc, [ip, #3676]!	; 0xe5c

00011280 <g_strcmp0@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #69632	; 0x11000
   11288:	ldr	pc, [ip, #3668]!	; 0xe54

Disassembly of section .text:

00011290 <.text>:
   11290:	push	{r4, r5, lr}
   11294:	sub	sp, sp, #12
   11298:	cmp	r0, #1
   1129c:	str	r0, [sp, #4]
   112a0:	str	r1, [sp]
   112a4:	ble	113f4 <g_strcmp0@plt+0x174>
   112a8:	ldr	r1, [r1, #4]
   112ac:	ldr	r0, [pc, #336]	; 11404 <g_strcmp0@plt+0x184>
   112b0:	bl	11088 <g_strdup_printf@plt>
   112b4:	mov	r5, r0
   112b8:	bl	110d0 <system@plt>
   112bc:	mov	r4, r0
   112c0:	mov	r0, r5
   112c4:	bl	1113c <g_free@plt>
   112c8:	cmp	r4, #0
   112cc:	bne	113e4 <g_strcmp0@plt+0x164>
   112d0:	ldr	r0, [pc, #304]	; 11408 <g_strcmp0@plt+0x188>
   112d4:	bl	110d0 <system@plt>
   112d8:	subs	r4, r0, #0
   112dc:	bne	11310 <g_strcmp0@plt+0x90>
   112e0:	ldr	r0, [pc, #292]	; 1140c <g_strcmp0@plt+0x18c>
   112e4:	bl	110d0 <system@plt>
   112e8:	cmp	r0, #0
   112ec:	bne	11328 <g_strcmp0@plt+0xa8>
   112f0:	ldr	r0, [pc, #280]	; 11410 <g_strcmp0@plt+0x190>
   112f4:	bl	110d0 <system@plt>
   112f8:	cmp	r0, #0
   112fc:	beq	11338 <g_strcmp0@plt+0xb8>
   11300:	ldr	r0, [pc, #268]	; 11414 <g_strcmp0@plt+0x194>
   11304:	bl	11040 <puts@plt>
   11308:	mvn	r4, #0
   1130c:	b	1131c <g_strcmp0@plt+0x9c>
   11310:	ldr	r0, [pc, #256]	; 11418 <g_strcmp0@plt+0x198>
   11314:	bl	11040 <puts@plt>
   11318:	mvn	r4, #0
   1131c:	mov	r0, r4
   11320:	add	sp, sp, #12
   11324:	pop	{r4, r5, pc}
   11328:	ldr	r0, [pc, #236]	; 1141c <g_strcmp0@plt+0x19c>
   1132c:	bl	110d0 <system@plt>
   11330:	cmp	r0, #0
   11334:	bne	11300 <g_strcmp0@plt+0x80>
   11338:	ldr	r1, [pc, #224]	; 11420 <g_strcmp0@plt+0x1a0>
   1133c:	mov	r0, #6
   11340:	bl	111c0 <setlocale@plt>
   11344:	ldr	r1, [pc, #216]	; 11424 <g_strcmp0@plt+0x1a4>
   11348:	ldr	r0, [pc, #216]	; 11428 <g_strcmp0@plt+0x1a8>
   1134c:	bl	1119c <bindtextdomain@plt>
   11350:	ldr	r1, [pc, #212]	; 1142c <g_strcmp0@plt+0x1ac>
   11354:	ldr	r0, [pc, #204]	; 11428 <g_strcmp0@plt+0x1a8>
   11358:	bl	11010 <bind_textdomain_codeset@plt>
   1135c:	ldr	r0, [pc, #196]	; 11428 <g_strcmp0@plt+0x1a8>
   11360:	bl	11058 <textdomain@plt>
   11364:	bl	11160 <gdk_threads_init@plt>
   11368:	bl	1110c <gdk_threads_enter@plt>
   1136c:	mov	r1, sp
   11370:	add	r0, sp, #4
   11374:	bl	1122c <gtk_init@plt>
   11378:	bl	11238 <gtk_icon_theme_get_default@plt>
   1137c:	ldr	r1, [pc, #172]	; 11430 <g_strcmp0@plt+0x1b0>
   11380:	bl	11064 <gtk_icon_theme_prepend_search_path@plt>
   11384:	ldr	r2, [sp]
   11388:	ldr	r3, [pc, #164]	; 11434 <g_strcmp0@plt+0x1b4>
   1138c:	ldr	r0, [sp, #4]
   11390:	ldr	r1, [r2, #4]
   11394:	cmp	r0, #2
   11398:	mov	r0, #0
   1139c:	str	r1, [r3]
   113a0:	str	r0, [r3, #4]
   113a4:	movle	r3, r0
   113a8:	bgt	113cc <g_strcmp0@plt+0x14c>
   113ac:	ldr	r2, [pc, #132]	; 11438 <g_strcmp0@plt+0x1b8>
   113b0:	mov	r1, #0
   113b4:	ldr	r0, [pc, #128]	; 1143c <g_strcmp0@plt+0x1bc>
   113b8:	str	r3, [r2]
   113bc:	bl	110dc <g_idle_add@plt>
   113c0:	bl	11154 <gtk_main@plt>
   113c4:	bl	110b8 <gdk_threads_leave@plt>
   113c8:	b	1131c <g_strcmp0@plt+0x9c>
   113cc:	ldr	r0, [r2, #8]
   113d0:	ldr	r1, [pc, #104]	; 11440 <g_strcmp0@plt+0x1c0>
   113d4:	bl	11280 <g_strcmp0@plt>
   113d8:	clz	r3, r0
   113dc:	lsr	r3, r3, #5
   113e0:	b	113ac <g_strcmp0@plt+0x12c>
   113e4:	ldr	r0, [pc, #88]	; 11444 <g_strcmp0@plt+0x1c4>
   113e8:	bl	11040 <puts@plt>
   113ec:	mvn	r4, #0
   113f0:	b	1131c <g_strcmp0@plt+0x9c>
   113f4:	ldr	r0, [pc, #76]	; 11448 <g_strcmp0@plt+0x1c8>
   113f8:	bl	11040 <puts@plt>
   113fc:	mvn	r4, #0
   11400:	b	1131c <g_strcmp0@plt+0x9c>
   11404:	andeq	r2, r1, ip, rrx
   11408:	andeq	r2, r1, r8, asr #1
   1140c:	andeq	r2, r1, r4, ror #1
   11410:	strdeq	r2, [r1], -ip
   11414:	andeq	r2, r1, r0, ror #2
   11418:	andeq	r2, r1, r8, asr #2
   1141c:	andeq	r2, r1, r4, lsl r1
   11420:	andeq	r2, r1, r4, asr #2
   11424:	andeq	r2, r1, ip, lsl #3
   11428:	andeq	r2, r1, r0, lsr #3
   1142c:	andeq	r2, r1, ip, lsr #3
   11430:	andeq	r1, r1, r4, asr #27
   11434:	andeq	r3, r2, r0, lsl #2
   11438:	andeq	r3, r2, ip, lsl #2
   1143c:			; <UNDEFINED> instruction: 0x000117b4
   11440:	andeq	r1, r1, r8, ror #27
   11444:	andeq	r2, r1, r0, lsr #1
   11448:	andeq	r2, r1, r0, asr r0
   1144c:	mov	fp, #0
   11450:	mov	lr, #0
   11454:	pop	{r1}		; (ldr r1, [sp], #4)
   11458:	mov	r2, sp
   1145c:	push	{r2}		; (str r2, [sp, #-4]!)
   11460:	push	{r0}		; (str r0, [sp, #-4]!)
   11464:	ldr	ip, [pc, #16]	; 1147c <g_strcmp0@plt+0x1fc>
   11468:	push	{ip}		; (str ip, [sp, #-4]!)
   1146c:	ldr	r0, [pc, #12]	; 11480 <g_strcmp0@plt+0x200>
   11470:	ldr	r3, [pc, #12]	; 11484 <g_strcmp0@plt+0x204>
   11474:	bl	11250 <__libc_start_main@plt>
   11478:	bl	11094 <abort@plt>
   1147c:			; <UNDEFINED> instruction: 0x00011db4
   11480:	muleq	r1, r0, r2
   11484:	andeq	r1, r1, r4, asr sp
   11488:	ldr	r3, [pc, #20]	; 114a4 <g_strcmp0@plt+0x224>
   1148c:	ldr	r2, [pc, #20]	; 114a8 <g_strcmp0@plt+0x228>
   11490:	add	r3, pc, r3
   11494:	ldr	r2, [r3, r2]
   11498:	cmp	r2, #0
   1149c:	bxeq	lr
   114a0:	b	11268 <__gmon_start__@plt>
   114a4:	andeq	r1, r1, r8, ror #22
   114a8:	andeq	r0, r0, r0, ror #1
   114ac:	ldr	r0, [pc, #24]	; 114cc <g_strcmp0@plt+0x24c>
   114b0:	ldr	r3, [pc, #24]	; 114d0 <g_strcmp0@plt+0x250>
   114b4:	cmp	r3, r0
   114b8:	bxeq	lr
   114bc:	ldr	r3, [pc, #16]	; 114d4 <g_strcmp0@plt+0x254>
   114c0:	cmp	r3, #0
   114c4:	bxeq	lr
   114c8:	bx	r3
   114cc:	andeq	r3, r2, ip, ror #1
   114d0:	andeq	r3, r2, ip, ror #1
   114d4:	andeq	r0, r0, r0
   114d8:	ldr	r0, [pc, #36]	; 11504 <g_strcmp0@plt+0x284>
   114dc:	ldr	r1, [pc, #36]	; 11508 <g_strcmp0@plt+0x288>
   114e0:	sub	r1, r1, r0
   114e4:	asr	r1, r1, #2
   114e8:	add	r1, r1, r1, lsr #31
   114ec:	asrs	r1, r1, #1
   114f0:	bxeq	lr
   114f4:	ldr	r3, [pc, #16]	; 1150c <g_strcmp0@plt+0x28c>
   114f8:	cmp	r3, #0
   114fc:	bxeq	lr
   11500:	bx	r3
   11504:	andeq	r3, r2, ip, ror #1
   11508:	andeq	r3, r2, ip, ror #1
   1150c:	andeq	r0, r0, r0
   11510:	push	{r4, lr}
   11514:	ldr	r4, [pc, #24]	; 11534 <g_strcmp0@plt+0x2b4>
   11518:	ldrb	r3, [r4]
   1151c:	cmp	r3, #0
   11520:	popne	{r4, pc}
   11524:	bl	114ac <g_strcmp0@plt+0x22c>
   11528:	mov	r3, #1
   1152c:	strb	r3, [r4]
   11530:	pop	{r4, pc}
   11534:	andeq	r3, r2, ip, ror #1
   11538:	b	114d8 <g_strcmp0@plt+0x258>
   1153c:	andeq	r0, r0, r0
   11540:	push	{r4, lr}
   11544:	mov	r2, r0
   11548:	ldr	r1, [pc, #24]	; 11568 <g_strcmp0@plt+0x2e8>
   1154c:	ldr	r0, [pc, #24]	; 1156c <g_strcmp0@plt+0x2ec>
   11550:	bl	11088 <g_strdup_printf@plt>
   11554:	mov	r4, r0
   11558:	bl	110d0 <system@plt>
   1155c:	mov	r0, r4
   11560:	pop	{r4, lr}
   11564:	b	1113c <g_free@plt>
   11568:	andeq	r1, r1, r4, asr #27
   1156c:	ldrdeq	r1, [r1], -ip
   11570:	push	{r4, lr}
   11574:	ldr	r4, [pc, #60]	; 115b8 <g_strcmp0@plt+0x338>
   11578:	ldr	r0, [r4]
   1157c:	cmp	r0, #0
   11580:	beq	11590 <g_strcmp0@plt+0x310>
   11584:	bl	11100 <gtk_widget_destroy@plt>
   11588:	mov	r3, #0
   1158c:	str	r3, [r4]
   11590:	ldr	r3, [pc, #36]	; 115bc <g_strcmp0@plt+0x33c>
   11594:	ldr	r3, [r3]
   11598:	cmp	r3, #0
   1159c:	bne	115ac <g_strcmp0@plt+0x32c>
   115a0:	bl	111fc <gtk_main_quit@plt>
   115a4:	mov	r0, #0
   115a8:	pop	{r4, pc}
   115ac:	ldr	r0, [pc, #12]	; 115c0 <g_strcmp0@plt+0x340>
   115b0:	bl	110d0 <system@plt>
   115b4:	b	115a0 <g_strcmp0@plt+0x320>
   115b8:	strdeq	r3, [r2], -r0
   115bc:	andeq	r3, r2, ip, lsl #2
   115c0:	andeq	r1, r1, r8, ror #27
   115c4:	push	{r4, lr}
   115c8:	ldr	r4, [pc, #32]	; 115f0 <g_strcmp0@plt+0x370>
   115cc:	ldr	r0, [r4]
   115d0:	cmp	r0, #0
   115d4:	beq	115e4 <g_strcmp0@plt+0x364>
   115d8:	bl	11100 <gtk_widget_destroy@plt>
   115dc:	mov	r3, #0
   115e0:	str	r3, [r4]
   115e4:	bl	111fc <gtk_main_quit@plt>
   115e8:	mov	r0, #0
   115ec:	pop	{r4, pc}
   115f0:	strdeq	r3, [r2], -r0
   115f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115f8:	sub	sp, sp, #24
   115fc:	ldr	r4, [pc, #388]	; 11788 <g_strcmp0@plt+0x508>
   11600:	ldr	r7, [pc, #388]	; 1178c <g_strcmp0@plt+0x50c>
   11604:	mov	r9, r0
   11608:	ldr	r6, [r4]
   1160c:	ldr	r3, [r7]
   11610:	cmp	r6, #0
   11614:	mov	r5, r1
   11618:	str	r3, [sp, #20]
   1161c:	beq	116a0 <g_strcmp0@plt+0x420>
   11620:	mov	r1, r0
   11624:	ldr	r0, [r4, #4]
   11628:	bl	110f4 <gtk_label_set_text@plt>
   1162c:	cmn	r5, #3
   11630:	movne	r1, #0
   11634:	moveq	r1, #1
   11638:	ldr	r0, [r4, #12]
   1163c:	bl	1125c <gtk_widget_set_visible@plt>
   11640:	cmn	r5, #1
   11644:	movlt	r1, #0
   11648:	movge	r1, #1
   1164c:	ldr	r0, [r4, #8]
   11650:	bl	1125c <gtk_widget_set_visible@plt>
   11654:	cmp	r5, #0
   11658:	bge	1167c <g_strcmp0@plt+0x3fc>
   1165c:	cmn	r5, #1
   11660:	beq	11770 <g_strcmp0@plt+0x4f0>
   11664:	ldr	r2, [sp, #20]
   11668:	ldr	r3, [r7]
   1166c:	cmp	r2, r3
   11670:	bne	1177c <g_strcmp0@plt+0x4fc>
   11674:	add	sp, sp, #24
   11678:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1167c:	vmov	s15, r5
   11680:	vldr	d6, [pc, #248]	; 11780 <g_strcmp0@plt+0x500>
   11684:	ldr	r0, [r4, #8]
   11688:	vcvt.f64.s32	d7, s15
   1168c:	vdiv.f64	d0, d7, d6
   11690:	vcvt.f32.f64	s0, d0
   11694:	vcvt.f64.f32	d0, s0
   11698:	bl	1107c <gtk_progress_bar_set_fraction@plt>
   1169c:	b	11664 <g_strcmp0@plt+0x3e4>
   116a0:	bl	111e4 <gtk_builder_new@plt>
   116a4:	mov	r2, r6
   116a8:	ldr	r1, [pc, #224]	; 11790 <g_strcmp0@plt+0x510>
   116ac:	mov	r8, r0
   116b0:	bl	11274 <gtk_builder_add_from_file@plt>
   116b4:	mov	r0, r8
   116b8:	ldr	r1, [pc, #212]	; 11794 <g_strcmp0@plt+0x514>
   116bc:	bl	11070 <gtk_builder_get_object@plt>
   116c0:	mov	r1, #1
   116c4:	str	r0, [r4]
   116c8:	bl	11214 <gtk_window_set_modal@plt>
   116cc:	mov	r2, #100	; 0x64
   116d0:	ldr	r0, [r4]
   116d4:	mov	r1, #340	; 0x154
   116d8:	bl	110ac <gtk_window_set_default_size@plt>
   116dc:	mov	r0, r8
   116e0:	ldr	r1, [pc, #176]	; 11798 <g_strcmp0@plt+0x518>
   116e4:	bl	11070 <gtk_builder_get_object@plt>
   116e8:	add	r1, sp, #8
   116ec:	mov	sl, r0
   116f0:	ldr	r0, [pc, #164]	; 1179c <g_strcmp0@plt+0x51c>
   116f4:	bl	110a0 <gdk_color_parse@plt>
   116f8:	add	r2, sp, #8
   116fc:	mov	r1, r6
   11700:	mov	r0, sl
   11704:	bl	11118 <gtk_widget_modify_bg@plt>
   11708:	mov	r0, r8
   1170c:	ldr	r1, [pc, #140]	; 117a0 <g_strcmp0@plt+0x520>
   11710:	bl	11070 <gtk_builder_get_object@plt>
   11714:	ldr	r1, [pc, #136]	; 117a4 <g_strcmp0@plt+0x524>
   11718:	str	r0, [r4, #4]
   1171c:	mov	r0, r8
   11720:	bl	11070 <gtk_builder_get_object@plt>
   11724:	ldr	r1, [pc, #124]	; 117a8 <g_strcmp0@plt+0x528>
   11728:	str	r0, [r4, #8]
   1172c:	mov	r0, r8
   11730:	bl	11070 <gtk_builder_get_object@plt>
   11734:	mov	r3, r6
   11738:	ldr	r2, [pc, #108]	; 117ac <g_strcmp0@plt+0x52c>
   1173c:	str	r6, [sp, #4]
   11740:	str	r6, [sp]
   11744:	ldr	r1, [pc, #100]	; 117b0 <g_strcmp0@plt+0x530>
   11748:	str	r0, [r4, #12]
   1174c:	bl	110e8 <g_signal_connect_data@plt>
   11750:	mov	r1, r9
   11754:	ldr	r0, [r4, #4]
   11758:	bl	110f4 <gtk_label_set_text@plt>
   1175c:	ldr	r0, [r4]
   11760:	bl	111d8 <gtk_widget_show_all@plt>
   11764:	mov	r0, r8
   11768:	bl	111f0 <g_object_unref@plt>
   1176c:	b	1162c <g_strcmp0@plt+0x3ac>
   11770:	ldr	r0, [r4, #8]
   11774:	bl	11130 <gtk_progress_bar_pulse@plt>
   11778:	b	11664 <g_strcmp0@plt+0x3e4>
   1177c:	bl	11124 <__stack_chk_fail@plt>
   11780:	andeq	r0, r0, r0
   11784:	subsmi	r0, r9, r0
   11788:	strdeq	r3, [r2], -r0
   1178c:	andeq	r2, r2, r0, ror #29
   11790:	strdeq	r1, [r1], -r0
   11794:	andeq	r1, r1, r4, lsl lr
   11798:	andeq	r1, r1, r8, lsl lr
   1179c:	andeq	r1, r1, r0, lsr #28
   117a0:	andeq	r1, r1, r8, lsr #28
   117a4:	andeq	r1, r1, r0, lsr lr
   117a8:	andeq	r1, r1, r8, lsr lr
   117ac:	andeq	r1, r1, r4, asr #11
   117b0:	andeq	r1, r1, r0, asr #28
   117b4:	push	{r4, lr}
   117b8:	sub	sp, sp, #16
   117bc:	ldr	r0, [pc, #80]	; 11814 <g_strcmp0@plt+0x594>
   117c0:	bl	110d0 <system@plt>
   117c4:	ldr	r0, [pc, #76]	; 11818 <g_strcmp0@plt+0x598>
   117c8:	bl	11540 <g_strcmp0@plt+0x2c0>
   117cc:	mov	r2, #5
   117d0:	ldr	r1, [pc, #68]	; 1181c <g_strcmp0@plt+0x59c>
   117d4:	mov	r0, #0
   117d8:	bl	11148 <dcgettext@plt>
   117dc:	mvn	r1, #0
   117e0:	bl	115f4 <g_strcmp0@plt+0x374>
   117e4:	bl	1116c <pk_task_new@plt>
   117e8:	ldr	r3, [pc, #48]	; 11820 <g_strcmp0@plt+0x5a0>
   117ec:	mov	r4, #0
   117f0:	str	r4, [sp]
   117f4:	stmib	sp, {r3, r4}
   117f8:	mov	r2, r4
   117fc:	ldr	r3, [pc, #32]	; 11824 <g_strcmp0@plt+0x5a4>
   11800:	mov	r1, #1
   11804:	bl	11244 <pk_client_refresh_cache_async@plt>
   11808:	mov	r0, r4
   1180c:	add	sp, sp, #16
   11810:	pop	{r4, pc}
   11814:	andeq	r1, r1, r8, asr #28
   11818:	andeq	r1, r1, r4, asr lr
   1181c:	andeq	r1, r1, r0, ror #28
   11820:			; <UNDEFINED> instruction: 0x00011cb0
   11824:	andeq	r1, r1, r4, lsr #22
   11828:	push	{r4, r5, r6, r7, r8, lr}
   1182c:	sub	sp, sp, #8
   11830:	ldr	r4, [pc, #232]	; 11920 <g_strcmp0@plt+0x6a0>
   11834:	mov	r5, #0
   11838:	mov	r8, r2
   1183c:	ldr	r3, [r4]
   11840:	mov	r2, sp
   11844:	str	r3, [sp, #4]
   11848:	str	r5, [sp]
   1184c:	bl	11184 <pk_task_generic_finish@plt>
   11850:	ldr	r7, [sp]
   11854:	cmp	r7, r5
   11858:	bne	11888 <g_strcmp0@plt+0x608>
   1185c:	mov	r6, r0
   11860:	bl	11034 <pk_results_get_error_code@plt>
   11864:	subs	r5, r0, #0
   11868:	bne	118cc <g_strcmp0@plt+0x64c>
   1186c:	ldr	r2, [sp, #4]
   11870:	ldr	r3, [r4]
   11874:	mov	r0, r6
   11878:	cmp	r2, r3
   1187c:	bne	1191c <g_strcmp0@plt+0x69c>
   11880:	add	sp, sp, #8
   11884:	pop	{r4, r5, r6, r7, r8, pc}
   11888:	mov	r2, #5
   1188c:	ldr	r1, [pc, #144]	; 11924 <g_strcmp0@plt+0x6a4>
   11890:	mov	r0, r5
   11894:	bl	11148 <dcgettext@plt>
   11898:	ldr	r3, [sp]
   1189c:	mov	r1, r8
   118a0:	mov	r6, r5
   118a4:	ldr	r2, [r3, #8]
   118a8:	bl	11088 <g_strdup_printf@plt>
   118ac:	mvn	r1, #2
   118b0:	mov	r5, r0
   118b4:	bl	115f4 <g_strcmp0@plt+0x374>
   118b8:	ldr	r0, [pc, #104]	; 11928 <g_strcmp0@plt+0x6a8>
   118bc:	bl	11540 <g_strcmp0@plt+0x2c0>
   118c0:	mov	r0, r5
   118c4:	bl	1113c <g_free@plt>
   118c8:	b	1186c <g_strcmp0@plt+0x5ec>
   118cc:	mov	r2, #5
   118d0:	ldr	r1, [pc, #76]	; 11924 <g_strcmp0@plt+0x6a4>
   118d4:	mov	r0, r7
   118d8:	bl	11148 <dcgettext@plt>
   118dc:	mov	r6, r0
   118e0:	mov	r0, r5
   118e4:	bl	1104c <pk_error_get_details@plt>
   118e8:	mov	r1, r8
   118ec:	mov	r2, r0
   118f0:	mov	r0, r6
   118f4:	bl	11088 <g_strdup_printf@plt>
   118f8:	mvn	r1, #2
   118fc:	mov	r6, r7
   11900:	mov	r5, r0
   11904:	bl	115f4 <g_strcmp0@plt+0x374>
   11908:	ldr	r0, [pc, #24]	; 11928 <g_strcmp0@plt+0x6a8>
   1190c:	bl	11540 <g_strcmp0@plt+0x2c0>
   11910:	mov	r0, r5
   11914:	bl	1113c <g_free@plt>
   11918:	b	1186c <g_strcmp0@plt+0x5ec>
   1191c:	bl	11124 <__stack_chk_fail@plt>
   11920:	andeq	r2, r2, r0, ror #29
   11924:	andeq	r1, r1, r8, lsl #29
   11928:	muleq	r1, r8, lr
   1192c:	push	{r4, r5, r6, r7, r8, lr}
   11930:	sub	sp, sp, #40	; 0x28
   11934:	ldr	r4, [pc, #268]	; 11a48 <g_strcmp0@plt+0x7c8>
   11938:	mov	r6, r0
   1193c:	mov	r5, r1
   11940:	ldr	r3, [r4]
   11944:	mov	r2, #5
   11948:	ldr	r1, [pc, #252]	; 11a4c <g_strcmp0@plt+0x7cc>
   1194c:	mov	r0, #0
   11950:	str	r3, [sp, #36]	; 0x24
   11954:	bl	11148 <dcgettext@plt>
   11958:	mov	r1, r5
   1195c:	mov	r2, r0
   11960:	mov	r0, r6
   11964:	bl	11828 <g_strcmp0@plt+0x5a8>
   11968:	cmp	r0, #0
   1196c:	beq	119fc <g_strcmp0@plt+0x77c>
   11970:	bl	111b4 <pk_results_get_package_sack@plt>
   11974:	mov	r8, r0
   11978:	bl	110c4 <pk_package_sack_get_array@plt>
   1197c:	mov	r5, r0
   11980:	ldr	r0, [r0, #4]
   11984:	cmp	r0, #0
   11988:	beq	11a14 <g_strcmp0@plt+0x794>
   1198c:	ldr	r3, [r5]
   11990:	add	r2, sp, #24
   11994:	mov	r7, #0
   11998:	ldr	r0, [r3]
   1199c:	ldr	r1, [pc, #172]	; 11a50 <g_strcmp0@plt+0x7d0>
   119a0:	ldr	r3, [pc, #172]	; 11a54 <g_strcmp0@plt+0x7d4>
   119a4:	stm	sp, {r2, r7}
   119a8:	add	r2, sp, #20
   119ac:	bl	11178 <g_object_get@plt>
   119b0:	ldr	r3, [sp, #20]
   119b4:	cmp	r3, #1
   119b8:	beq	11a34 <g_strcmp0@plt+0x7b4>
   119bc:	ldr	r3, [pc, #148]	; 11a58 <g_strcmp0@plt+0x7d8>
   119c0:	ldr	ip, [sp, #24]
   119c4:	str	r3, [sp, #4]
   119c8:	str	r7, [sp, #8]
   119cc:	str	r7, [sp]
   119d0:	mov	r0, r6
   119d4:	mov	r2, r7
   119d8:	ldr	r3, [pc, #124]	; 11a5c <g_strcmp0@plt+0x7dc>
   119dc:	add	r1, sp, #28
   119e0:	str	r7, [sp, #32]
   119e4:	str	ip, [sp, #28]
   119e8:	bl	111cc <pk_task_install_packages_async@plt>
   119ec:	mov	r0, r5
   119f0:	bl	11208 <g_ptr_array_unref@plt>
   119f4:	mov	r0, r8
   119f8:	bl	111f0 <g_object_unref@plt>
   119fc:	ldr	r2, [sp, #36]	; 0x24
   11a00:	ldr	r3, [r4]
   11a04:	cmp	r2, r3
   11a08:	bne	11a44 <g_strcmp0@plt+0x7c4>
   11a0c:	add	sp, sp, #40	; 0x28
   11a10:	pop	{r4, r5, r6, r7, r8, pc}
   11a14:	ldr	r1, [pc, #68]	; 11a60 <g_strcmp0@plt+0x7e0>
   11a18:	mov	r2, #5
   11a1c:	bl	11148 <dcgettext@plt>
   11a20:	mvn	r1, #2
   11a24:	bl	115f4 <g_strcmp0@plt+0x374>
   11a28:	ldr	r0, [pc, #52]	; 11a64 <g_strcmp0@plt+0x7e4>
   11a2c:	bl	11540 <g_strcmp0@plt+0x2c0>
   11a30:	b	119ec <g_strcmp0@plt+0x76c>
   11a34:	mov	r0, r7
   11a38:	mov	r2, #5
   11a3c:	ldr	r1, [pc, #36]	; 11a68 <g_strcmp0@plt+0x7e8>
   11a40:	b	11a1c <g_strcmp0@plt+0x79c>
   11a44:	bl	11124 <__stack_chk_fail@plt>
   11a48:	andeq	r2, r2, r0, ror #29
   11a4c:	andeq	r1, r1, r8, lsr #29
   11a50:	andeq	r1, r1, r4, ror #29
   11a54:	ldrdeq	r1, [r1], -r8
   11a58:	andeq	r1, r1, ip, ror #20
   11a5c:	andeq	r1, r1, r4, lsr #22
   11a60:			; <UNDEFINED> instruction: 0x00011ebc
   11a64:	muleq	r1, r8, lr
   11a68:	andeq	r1, r1, ip, ror #29
   11a6c:	push	{r4, r5, r6, lr}
   11a70:	mov	r2, #5
   11a74:	mov	r4, r0
   11a78:	mov	r5, r1
   11a7c:	mov	r0, #0
   11a80:	ldr	r1, [pc, #128]	; 11b08 <g_strcmp0@plt+0x888>
   11a84:	bl	11148 <dcgettext@plt>
   11a88:	mov	r1, r5
   11a8c:	mov	r2, r0
   11a90:	mov	r0, r4
   11a94:	bl	11828 <g_strcmp0@plt+0x5a8>
   11a98:	cmp	r0, #0
   11a9c:	popeq	{r4, r5, r6, pc}
   11aa0:	ldr	r3, [pc, #100]	; 11b0c <g_strcmp0@plt+0x88c>
   11aa4:	ldr	r4, [r3]
   11aa8:	cmp	r4, #0
   11aac:	bne	11ae4 <g_strcmp0@plt+0x864>
   11ab0:	ldr	r0, [pc, #88]	; 11b10 <g_strcmp0@plt+0x890>
   11ab4:	bl	11540 <g_strcmp0@plt+0x2c0>
   11ab8:	ldr	r1, [pc, #84]	; 11b14 <g_strcmp0@plt+0x894>
   11abc:	mov	r0, r4
   11ac0:	mov	r2, #5
   11ac4:	bl	11148 <dcgettext@plt>
   11ac8:	mvn	r1, #1
   11acc:	bl	115f4 <g_strcmp0@plt+0x374>
   11ad0:	mov	r2, #0
   11ad4:	ldr	r1, [pc, #60]	; 11b18 <g_strcmp0@plt+0x898>
   11ad8:	mov	r0, #2
   11adc:	pop	{r4, r5, r6, lr}
   11ae0:	b	11190 <g_timeout_add_seconds@plt>
   11ae4:	ldr	r0, [pc, #48]	; 11b1c <g_strcmp0@plt+0x89c>
   11ae8:	bl	11540 <g_strcmp0@plt+0x2c0>
   11aec:	mov	r2, #5
   11af0:	ldr	r1, [pc, #40]	; 11b20 <g_strcmp0@plt+0x8a0>
   11af4:	mov	r0, #0
   11af8:	bl	11148 <dcgettext@plt>
   11afc:	mvn	r1, #1
   11b00:	bl	115f4 <g_strcmp0@plt+0x374>
   11b04:	b	11ad0 <g_strcmp0@plt+0x850>
   11b08:	andeq	r1, r1, r8, lsl #30
   11b0c:	andeq	r3, r2, ip, lsl #2
   11b10:	andeq	r1, r1, r0, asr pc
   11b14:	andeq	r1, r1, r0, ror #30
   11b18:	andeq	r1, r1, r0, ror r5
   11b1c:	andeq	r1, r1, ip, lsl pc
   11b20:	andeq	r1, r1, ip, lsr #30
   11b24:	push	{r4, r5, r6, lr}
   11b28:	mov	r5, r0
   11b2c:	bl	1101c <pk_progress_get_role@plt>
   11b30:	mov	r4, r0
   11b34:	mov	r0, r5
   11b38:	bl	11220 <pk_progress_get_status@plt>
   11b3c:	ldr	r3, [pc, #332]	; 11c90 <g_strcmp0@plt+0xa10>
   11b40:	ldr	r2, [r3]
   11b44:	cmp	r2, #0
   11b48:	popeq	{r4, r5, r6, pc}
   11b4c:	mov	r6, r0
   11b50:	sub	r0, r4, #3
   11b54:	cmp	r0, #19
   11b58:	ldrls	pc, [pc, r0, lsl #2]
   11b5c:	b	11bb0 <g_strcmp0@plt+0x930>
   11b60:	andeq	r1, r1, r8, asr #23
   11b64:			; <UNDEFINED> instruction: 0x00011bb0
   11b68:			; <UNDEFINED> instruction: 0x00011bb0
   11b6c:			; <UNDEFINED> instruction: 0x00011bb0
   11b70:			; <UNDEFINED> instruction: 0x00011bb0
   11b74:			; <UNDEFINED> instruction: 0x00011bb0
   11b78:			; <UNDEFINED> instruction: 0x00011bb0
   11b7c:			; <UNDEFINED> instruction: 0x00011bb0
   11b80:	andeq	r1, r1, r4, ror #23
   11b84:			; <UNDEFINED> instruction: 0x00011bb0
   11b88:	andeq	r1, r1, r4, asr #24
   11b8c:			; <UNDEFINED> instruction: 0x00011bb0
   11b90:			; <UNDEFINED> instruction: 0x00011bb0
   11b94:			; <UNDEFINED> instruction: 0x00011bb0
   11b98:	andeq	r1, r1, r0, ror #24
   11b9c:			; <UNDEFINED> instruction: 0x00011bb0
   11ba0:			; <UNDEFINED> instruction: 0x00011bb0
   11ba4:			; <UNDEFINED> instruction: 0x00011bb0
   11ba8:			; <UNDEFINED> instruction: 0x00011bb0
   11bac:			; <UNDEFINED> instruction: 0x00011bb4
   11bb0:	pop	{r4, r5, r6, pc}
   11bb4:	cmp	r6, #27
   11bb8:	beq	11c7c <g_strcmp0@plt+0x9fc>
   11bbc:	ldr	r0, [r3, #8]
   11bc0:	pop	{r4, r5, r6, lr}
   11bc4:	b	11130 <gtk_progress_bar_pulse@plt>
   11bc8:	cmp	r6, #27
   11bcc:	bne	11bbc <g_strcmp0@plt+0x93c>
   11bd0:	mov	r2, #5
   11bd4:	ldr	r1, [pc, #184]	; 11c94 <g_strcmp0@plt+0xa14>
   11bd8:	mov	r0, #0
   11bdc:	bl	11148 <dcgettext@plt>
   11be0:	b	11c28 <g_strcmp0@plt+0x9a8>
   11be4:	sub	r2, r6, #8
   11be8:	cmp	r2, #1
   11bec:	bhi	11bbc <g_strcmp0@plt+0x93c>
   11bf0:	ldr	r1, [pc, #160]	; 11c98 <g_strcmp0@plt+0xa18>
   11bf4:	mov	r2, #5
   11bf8:	mov	r0, #0
   11bfc:	bl	11148 <dcgettext@plt>
   11c00:	cmp	r6, #9
   11c04:	mov	r2, #5
   11c08:	ldreq	r1, [pc, #140]	; 11c9c <g_strcmp0@plt+0xa1c>
   11c0c:	ldrne	r1, [pc, #140]	; 11ca0 <g_strcmp0@plt+0xa20>
   11c10:	mov	r4, r0
   11c14:	mov	r0, #0
   11c18:	bl	11148 <dcgettext@plt>
   11c1c:	mov	r1, r0
   11c20:	mov	r0, r4
   11c24:	bl	11088 <g_strdup_printf@plt>
   11c28:	mov	r4, r0
   11c2c:	mov	r0, r5
   11c30:	bl	11028 <pk_progress_get_percentage@plt>
   11c34:	mov	r1, r0
   11c38:	mov	r0, r4
   11c3c:	pop	{r4, r5, r6, lr}
   11c40:	b	115f4 <g_strcmp0@plt+0x374>
   11c44:	cmp	r6, #27
   11c48:	bne	11bbc <g_strcmp0@plt+0x93c>
   11c4c:	mov	r2, #5
   11c50:	ldr	r1, [pc, #76]	; 11ca4 <g_strcmp0@plt+0xa24>
   11c54:	mov	r0, #0
   11c58:	bl	11148 <dcgettext@plt>
   11c5c:	b	11c28 <g_strcmp0@plt+0x9a8>
   11c60:	cmp	r6, #27
   11c64:	bne	11bbc <g_strcmp0@plt+0x93c>
   11c68:	mov	r2, #5
   11c6c:	ldr	r1, [pc, #52]	; 11ca8 <g_strcmp0@plt+0xa28>
   11c70:	mov	r0, #0
   11c74:	bl	11148 <dcgettext@plt>
   11c78:	b	11c28 <g_strcmp0@plt+0x9a8>
   11c7c:	mov	r2, #5
   11c80:	ldr	r1, [pc, #36]	; 11cac <g_strcmp0@plt+0xa2c>
   11c84:	mov	r0, #0
   11c88:	bl	11148 <dcgettext@plt>
   11c8c:	b	11c28 <g_strcmp0@plt+0x9a8>
   11c90:	strdeq	r3, [r2], -r0
   11c94:	andeq	r1, r1, r4, asr #31
   11c98:	strdeq	r1, [r1], -r0
   11c9c:	andeq	r2, r1, ip
   11ca0:	andeq	r2, r1, r8, lsl r0
   11ca4:	andeq	r1, r1, r0, ror #28
   11ca8:	andeq	r1, r1, r8, ror pc
   11cac:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11cb0:	push	{r4, r5, lr}
   11cb4:	mov	r2, #5
   11cb8:	sub	sp, sp, #28
   11cbc:	mov	r4, r0
   11cc0:	mov	r5, r1
   11cc4:	mov	r0, #0
   11cc8:	ldr	r1, [pc, #112]	; 11d40 <g_strcmp0@plt+0xac0>
   11ccc:	bl	11148 <dcgettext@plt>
   11cd0:	mov	r1, r5
   11cd4:	mov	r2, r0
   11cd8:	mov	r0, r4
   11cdc:	bl	11828 <g_strcmp0@plt+0x5a8>
   11ce0:	cmp	r0, #0
   11ce4:	beq	11d38 <g_strcmp0@plt+0xab8>
   11ce8:	mov	r2, #5
   11cec:	ldr	r1, [pc, #80]	; 11d44 <g_strcmp0@plt+0xac4>
   11cf0:	mov	r0, #0
   11cf4:	bl	11148 <dcgettext@plt>
   11cf8:	mvn	r1, #0
   11cfc:	bl	115f4 <g_strcmp0@plt+0x374>
   11d00:	ldr	r2, [pc, #64]	; 11d48 <g_strcmp0@plt+0xac8>
   11d04:	ldr	ip, [pc, #64]	; 11d4c <g_strcmp0@plt+0xacc>
   11d08:	ldr	r1, [pc, #64]	; 11d50 <g_strcmp0@plt+0xad0>
   11d0c:	mov	r3, #0
   11d10:	str	r2, [sp]
   11d14:	str	r3, [sp, #20]
   11d18:	str	r3, [sp, #12]
   11d1c:	str	r3, [sp, #4]
   11d20:	mov	r0, r4
   11d24:	str	ip, [sp, #16]
   11d28:	str	r1, [sp, #8]
   11d2c:	mov	r2, #0
   11d30:	mov	r3, #0
   11d34:	bl	111a8 <pk_client_resolve_async@plt>
   11d38:	add	sp, sp, #28
   11d3c:	pop	{r4, r5, pc}
   11d40:	andeq	r2, r1, r4, lsr #32
   11d44:	andeq	r2, r1, r4, lsr r0
   11d48:	andeq	r3, r2, r0, lsl #2
   11d4c:	andeq	r1, r1, ip, lsr #18
   11d50:	andeq	r1, r1, r4, lsr #22
   11d54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d58:	mov	r7, r0
   11d5c:	ldr	r6, [pc, #72]	; 11dac <g_strcmp0@plt+0xb2c>
   11d60:	ldr	r5, [pc, #72]	; 11db0 <g_strcmp0@plt+0xb30>
   11d64:	add	r6, pc, r6
   11d68:	add	r5, pc, r5
   11d6c:	sub	r6, r6, r5
   11d70:	mov	r8, r1
   11d74:	mov	r9, r2
   11d78:	bl	10ff0 <bind_textdomain_codeset@plt-0x20>
   11d7c:	asrs	r6, r6, #2
   11d80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d84:	mov	r4, #0
   11d88:	add	r4, r4, #1
   11d8c:	ldr	r3, [r5], #4
   11d90:	mov	r2, r9
   11d94:	mov	r1, r8
   11d98:	mov	r0, r7
   11d9c:	blx	r3
   11da0:	cmp	r6, r4
   11da4:	bne	11d88 <g_strcmp0@plt+0xb08>
   11da8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11dac:	andeq	r1, r1, r0, ror r1
   11db0:	andeq	r1, r1, r8, ror #2
   11db4:	bx	lr

Disassembly of section .fini:

00011db8 <.fini>:
   11db8:	push	{r3, lr}
   11dbc:	pop	{r3, pc}
