
raspbian-preinstalled/bluemoon:     file format elf32-littlearm


Disassembly of section .init:

00010ba8 <.init>:
   10ba8:	push	{r3, lr}
   10bac:	bl	1171c <__snprintf_chk@plt+0x944>
   10bb0:	pop	{r3, pc}

Disassembly of section .plt:

00010bb4 <strtol@plt-0x14>:
   10bb4:	push	{lr}		; (str lr, [sp, #-4]!)
   10bb8:	ldr	lr, [pc, #4]	; 10bc4 <strtol@plt-0x4>
   10bbc:	add	lr, pc, lr
   10bc0:	ldr	pc, [lr, #8]!
   10bc4:	andeq	sl, r1, r0, ror r3

00010bc8 <strtol@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #106496	; 0x1a000
   10bd0:	ldr	pc, [ip, #880]!	; 0x370

00010bd4 <setsockopt@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #106496	; 0x1a000
   10bdc:	ldr	pc, [ip, #872]!	; 0x368

00010be0 <read@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #106496	; 0x1a000
   10be8:	ldr	pc, [ip, #864]!	; 0x360

00010bec <sigprocmask@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #106496	; 0x1a000
   10bf4:	ldr	pc, [ip, #856]!	; 0x358

00010bf8 <free@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #106496	; 0x1a000
   10c00:	ldr	pc, [ip, #848]!	; 0x350

00010c04 <__vsnprintf_chk@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #106496	; 0x1a000
   10c0c:	ldr	pc, [ip, #840]!	; 0x348

00010c10 <memcpy@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #106496	; 0x1a000
   10c18:	ldr	pc, [ip, #832]!	; 0x340

00010c1c <strdup@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #106496	; 0x1a000
   10c24:	ldr	pc, [ip, #824]!	; 0x338

00010c28 <__stack_chk_fail@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #106496	; 0x1a000
   10c30:	ldr	pc, [ip, #816]!	; 0x330

00010c34 <strcasecmp@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #106496	; 0x1a000
   10c3c:	ldr	pc, [ip, #808]!	; 0x328

00010c40 <signalfd@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #106496	; 0x1a000
   10c48:	ldr	pc, [ip, #800]!	; 0x320

00010c4c <fwrite@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #106496	; 0x1a000
   10c54:	ldr	pc, [ip, #792]!	; 0x318

00010c58 <puts@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #106496	; 0x1a000
   10c60:	ldr	pc, [ip, #784]!	; 0x310

00010c64 <malloc@plt>:
   10c64:	add	ip, pc, #0, 12
   10c68:	add	ip, ip, #106496	; 0x1a000
   10c6c:	ldr	pc, [ip, #776]!	; 0x308

00010c70 <sigaddset@plt>:
   10c70:	add	ip, pc, #0, 12
   10c74:	add	ip, ip, #106496	; 0x1a000
   10c78:	ldr	pc, [ip, #768]!	; 0x300

00010c7c <__libc_start_main@plt>:
   10c7c:	add	ip, pc, #0, 12
   10c80:	add	ip, ip, #106496	; 0x1a000
   10c84:	ldr	pc, [ip, #760]!	; 0x2f8

00010c88 <__fxstat@plt>:
   10c88:	add	ip, pc, #0, 12
   10c8c:	add	ip, ip, #106496	; 0x1a000
   10c90:	ldr	pc, [ip, #752]!	; 0x2f0

00010c94 <epoll_ctl@plt>:
   10c94:	add	ip, pc, #0, 12
   10c98:	add	ip, ip, #106496	; 0x1a000
   10c9c:	ldr	pc, [ip, #744]!	; 0x2e8

00010ca0 <__gmon_start__@plt>:
   10ca0:	add	ip, pc, #0, 12
   10ca4:	add	ip, ip, #106496	; 0x1a000
   10ca8:	ldr	pc, [ip, #736]!	; 0x2e0

00010cac <open@plt>:
   10cac:	add	ip, pc, #0, 12
   10cb0:	add	ip, ip, #106496	; 0x1a000
   10cb4:	ldr	pc, [ip, #728]!	; 0x2d8

00010cb8 <timerfd_create@plt>:
   10cb8:	add	ip, pc, #0, 12
   10cbc:	add	ip, ip, #106496	; 0x1a000
   10cc0:	ldr	pc, [ip, #720]!	; 0x2d0

00010cc4 <getopt_long@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #106496	; 0x1a000
   10ccc:	ldr	pc, [ip, #712]!	; 0x2c8

00010cd0 <__ctype_b_loc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #106496	; 0x1a000
   10cd8:	ldr	pc, [ip, #704]!	; 0x2c0

00010cdc <strlen@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #106496	; 0x1a000
   10ce4:	ldr	pc, [ip, #696]!	; 0x2b8

00010ce8 <strchr@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #106496	; 0x1a000
   10cf0:	ldr	pc, [ip, #688]!	; 0x2b0

00010cf4 <__errno_location@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #106496	; 0x1a000
   10cfc:	ldr	pc, [ip, #680]!	; 0x2a8

00010d00 <strncasecmp@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #106496	; 0x1a000
   10d08:	ldr	pc, [ip, #672]!	; 0x2a0

00010d0c <bind@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #106496	; 0x1a000
   10d14:	ldr	pc, [ip, #664]!	; 0x298

00010d18 <memset@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #106496	; 0x1a000
   10d20:	ldr	pc, [ip, #656]!	; 0x290

00010d24 <putchar@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #106496	; 0x1a000
   10d2c:	ldr	pc, [ip, #648]!	; 0x288

00010d30 <__printf_chk@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #106496	; 0x1a000
   10d38:	ldr	pc, [ip, #640]!	; 0x280

00010d3c <__fprintf_chk@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #106496	; 0x1a000
   10d44:	ldr	pc, [ip, #632]!	; 0x278

00010d48 <writev@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #106496	; 0x1a000
   10d50:	ldr	pc, [ip, #624]!	; 0x270

00010d54 <shutdown@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #106496	; 0x1a000
   10d5c:	ldr	pc, [ip, #616]!	; 0x268

00010d60 <epoll_wait@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #106496	; 0x1a000
   10d68:	ldr	pc, [ip, #608]!	; 0x260

00010d6c <sigemptyset@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #106496	; 0x1a000
   10d74:	ldr	pc, [ip, #600]!	; 0x258

00010d78 <sscanf@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #106496	; 0x1a000
   10d80:	ldr	pc, [ip, #592]!	; 0x250

00010d84 <timerfd_settime@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #106496	; 0x1a000
   10d8c:	ldr	pc, [ip, #584]!	; 0x248

00010d90 <socket@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #106496	; 0x1a000
   10d98:	ldr	pc, [ip, #576]!	; 0x240

00010d9c <__lxstat@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #106496	; 0x1a000
   10da4:	ldr	pc, [ip, #568]!	; 0x238

00010da8 <strncmp@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #106496	; 0x1a000
   10db0:	ldr	pc, [ip, #560]!	; 0x230

00010db4 <abort@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #106496	; 0x1a000
   10dbc:	ldr	pc, [ip, #552]!	; 0x228

00010dc0 <epoll_create1@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #106496	; 0x1a000
   10dc8:	ldr	pc, [ip, #544]!	; 0x220

00010dcc <close@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #106496	; 0x1a000
   10dd4:	ldr	pc, [ip, #536]!	; 0x218

00010dd8 <__snprintf_chk@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #106496	; 0x1a000
   10de0:	ldr	pc, [ip, #528]!	; 0x210

Disassembly of section .text:

00010de4 <.text>:
   10de4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10de8:	mov	r5, r0
   10dec:	ldr	r9, [pc, #2128]	; 11644 <__snprintf_chk@plt+0x86c>
   10df0:	ldr	r8, [pc, #2128]	; 11648 <__snprintf_chk@plt+0x870>
   10df4:	ldr	r7, [pc, #2128]	; 1164c <__snprintf_chk@plt+0x874>
   10df8:	ldr	sl, [pc, #2128]	; 11650 <__snprintf_chk@plt+0x878>
   10dfc:	sub	sp, sp, #244	; 0xf4
   10e00:	ldr	r3, [r9]
   10e04:	mov	r6, r1
   10e08:	mov	fp, #0
   10e0c:	str	r3, [sp, #236]	; 0xec
   10e10:	mov	r4, #0
   10e14:	str	r4, [sp]
   10e18:	mov	r3, r8
   10e1c:	mov	r2, r7
   10e20:	mov	r1, r6
   10e24:	mov	r0, r5
   10e28:	bl	10cc4 <getopt_long@plt>
   10e2c:	cmp	r0, #0
   10e30:	blt	1107c <__snprintf_chk@plt+0x2a4>
   10e34:	sub	r0, r0, #65	; 0x41
   10e38:	cmp	r0, #53	; 0x35
   10e3c:	ldrls	pc, [pc, r0, lsl #2]
   10e40:	b	11058 <__snprintf_chk@plt+0x280>
   10e44:	andeq	r1, r1, ip, lsr #32
   10e48:	andeq	r1, r1, ip, lsl r0
   10e4c:	andeq	r1, r1, r4
   10e50:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10e54:	ldrdeq	r0, [r1], -ip
   10e58:	andeq	r0, r1, r4, lsr #31
   10e5c:	andeq	r1, r1, r8, asr r0
   10e60:	andeq	r1, r1, r8, asr r0
   10e64:	andeq	r1, r1, r8, asr r0
   10e68:	andeq	r1, r1, r8, asr r0
   10e6c:	andeq	r1, r1, r8, asr r0
   10e70:	andeq	r1, r1, r8, asr r0
   10e74:	andeq	r1, r1, r8, asr r0
   10e78:	andeq	r1, r1, r8, asr r0
   10e7c:	andeq	r1, r1, r8, asr r0
   10e80:	andeq	r1, r1, r8, asr r0
   10e84:	andeq	r1, r1, r8, asr r0
   10e88:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   10e8c:	andeq	r1, r1, r8, asr r0
   10e90:	andeq	r0, r1, r8, asr #31
   10e94:	andeq	r1, r1, r8, asr r0
   10e98:	andeq	r1, r1, r8, asr r0
   10e9c:	andeq	r1, r1, r8, asr r0
   10ea0:	andeq	r1, r1, r8, asr r0
   10ea4:	andeq	r1, r1, r8, asr r0
   10ea8:	andeq	r1, r1, r8, asr r0
   10eac:	andeq	r1, r1, r8, asr r0
   10eb0:	andeq	r1, r1, r8, asr r0
   10eb4:	andeq	r1, r1, r8, asr r0
   10eb8:	andeq	r1, r1, r8, asr r0
   10ebc:	andeq	r1, r1, r8, asr r0
   10ec0:	andeq	r1, r1, r8, asr r0
   10ec4:	andeq	r1, r1, r8, asr r0
   10ec8:	andeq	r1, r1, r8, asr r0
   10ecc:	andeq	r1, r1, r8, asr r0
   10ed0:	andeq	r1, r1, r8, asr r0
   10ed4:	andeq	r1, r1, r8, asr r0
   10ed8:	andeq	r1, r1, r8, asr r0
   10edc:	andeq	r1, r1, r8, asr r0
   10ee0:	andeq	r0, r1, r0, ror pc
   10ee4:	andeq	r0, r1, r4, lsr #30
   10ee8:	andeq	r1, r1, r8, asr r0
   10eec:	andeq	r1, r1, r8, asr r0
   10ef0:	andeq	r1, r1, r8, asr r0
   10ef4:	andeq	r1, r1, r8, asr r0
   10ef8:	andeq	r1, r1, r8, asr r0
   10efc:	andeq	r1, r1, r8, asr r0
   10f00:	andeq	r1, r1, r8, asr r0
   10f04:	andeq	r1, r1, r8, asr r0
   10f08:	andeq	r0, r1, ip, lsl pc
   10f0c:	andeq	r1, r1, r8, asr r0
   10f10:	andeq	r1, r1, r8, asr r0
   10f14:	andeq	r1, r1, r8, asr r0
   10f18:	andeq	r1, r1, r8, asr #32
   10f1c:	mov	fp, #1
   10f20:	b	10e14 <__snprintf_chk@plt+0x3c>
   10f24:	ldr	r4, [sl]
   10f28:	mov	r0, r4
   10f2c:	bl	10cdc <strlen@plt>
   10f30:	cmp	r0, #3
   10f34:	bhi	11060 <__snprintf_chk@plt+0x288>
   10f38:	bl	10cd0 <__ctype_b_loc@plt>
   10f3c:	ldrb	r3, [r4]
   10f40:	lsl	r3, r3, #1
   10f44:	ldr	r2, [r0]
   10f48:	ldrh	r3, [r2, r3]
   10f4c:	tst	r3, #2048	; 0x800
   10f50:	beq	11518 <__snprintf_chk@plt+0x740>
   10f54:	mov	r0, r4
   10f58:	mov	r2, #10
   10f5c:	mov	r1, #0
   10f60:	bl	10bc8 <strtol@plt>
   10f64:	ldr	r4, [pc, #1768]	; 11654 <__snprintf_chk@plt+0x87c>
   10f68:	strh	r0, [r4, #28]
   10f6c:	b	10e10 <__snprintf_chk@plt+0x38>
   10f70:	bl	11864 <__snprintf_chk@plt+0xa8c>
   10f74:	mov	r5, #0
   10f78:	ldr	r2, [sp, #236]	; 0xec
   10f7c:	ldr	r3, [r9]
   10f80:	mov	r0, r5
   10f84:	cmp	r2, r3
   10f88:	bne	11640 <__snprintf_chk@plt+0x868>
   10f8c:	add	sp, sp, #244	; 0xf4
   10f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f94:	ldr	r4, [pc, #1720]	; 11654 <__snprintf_chk@plt+0x87c>
   10f98:	mov	r3, #1
   10f9c:	strb	r3, [r4, #4]
   10fa0:	b	10e10 <__snprintf_chk@plt+0x38>
   10fa4:	ldr	r4, [pc, #1704]	; 11654 <__snprintf_chk@plt+0x87c>
   10fa8:	ldr	r3, [sl]
   10fac:	mov	r2, #1
   10fb0:	cmp	r3, #0
   10fb4:	strne	r3, [r4, #36]	; 0x24
   10fb8:	mov	r3, #1
   10fbc:	strb	r2, [r4, #12]
   10fc0:	strb	r3, [r4, #31]
   10fc4:	b	10e10 <__snprintf_chk@plt+0x38>
   10fc8:	ldr	r4, [pc, #1668]	; 11654 <__snprintf_chk@plt+0x87c>
   10fcc:	mov	r3, #1
   10fd0:	strb	r3, [r4, #12]
   10fd4:	strb	r3, [r4, #14]
   10fd8:	b	10e10 <__snprintf_chk@plt+0x38>
   10fdc:	ldr	r4, [pc, #1648]	; 11654 <__snprintf_chk@plt+0x87c>
   10fe0:	mov	r3, #1
   10fe4:	strb	r3, [r4, #12]
   10fe8:	strb	r3, [r4, #33]	; 0x21
   10fec:	b	10e10 <__snprintf_chk@plt+0x38>
   10ff0:	ldr	r4, [pc, #1628]	; 11654 <__snprintf_chk@plt+0x87c>
   10ff4:	mov	r3, #1
   10ff8:	strb	r3, [r4, #12]
   10ffc:	strb	r3, [r4, #32]
   11000:	b	10e10 <__snprintf_chk@plt+0x38>
   11004:	ldr	r4, [pc, #1608]	; 11654 <__snprintf_chk@plt+0x87c>
   11008:	ldr	r2, [sl]
   1100c:	mov	r3, #1
   11010:	str	r2, [r4, #44]	; 0x2c
   11014:	strb	r3, [r4, #48]	; 0x30
   11018:	b	10e10 <__snprintf_chk@plt+0x38>
   1101c:	ldr	r4, [pc, #1584]	; 11654 <__snprintf_chk@plt+0x87c>
   11020:	mov	r3, #1
   11024:	strb	r3, [r4, #40]	; 0x28
   11028:	b	10e10 <__snprintf_chk@plt+0x38>
   1102c:	ldr	r3, [sl]
   11030:	ldr	r4, [pc, #1564]	; 11654 <__snprintf_chk@plt+0x87c>
   11034:	cmp	r3, #0
   11038:	strne	r3, [r4, #24]
   1103c:	mov	r3, #1
   11040:	strb	r3, [r4, #30]
   11044:	b	10e10 <__snprintf_chk@plt+0x38>
   11048:	ldr	r0, [pc, #1544]	; 11658 <__snprintf_chk@plt+0x880>
   1104c:	bl	10c58 <puts@plt>
   11050:	mov	r5, #0
   11054:	b	10f78 <__snprintf_chk@plt+0x1a0>
   11058:	mov	r5, #1
   1105c:	b	10f78 <__snprintf_chk@plt+0x1a0>
   11060:	mov	r0, r4
   11064:	mov	r2, #3
   11068:	ldr	r1, [pc, #1516]	; 1165c <__snprintf_chk@plt+0x884>
   1106c:	bl	10da8 <strncmp@plt>
   11070:	cmp	r0, #0
   11074:	addeq	r4, r4, #3
   11078:	b	10f38 <__snprintf_chk@plt+0x160>
   1107c:	ldr	r3, [pc, #1500]	; 11660 <__snprintf_chk@plt+0x888>
   11080:	ldr	r3, [r3]
   11084:	sub	r5, r5, r3
   11088:	cmp	r5, #0
   1108c:	bgt	1113c <__snprintf_chk@plt+0x364>
   11090:	bl	139d8 <__snprintf_chk@plt+0x2c00>
   11094:	add	r0, sp, #108	; 0x6c
   11098:	bl	10d6c <sigemptyset@plt>
   1109c:	mov	r1, #2
   110a0:	add	r0, sp, #108	; 0x6c
   110a4:	bl	10c70 <sigaddset@plt>
   110a8:	mov	r1, #15
   110ac:	add	r0, sp, #108	; 0x6c
   110b0:	bl	10c70 <sigaddset@plt>
   110b4:	ldr	r4, [pc, #1432]	; 11654 <__snprintf_chk@plt+0x87c>
   110b8:	mov	r3, #0
   110bc:	mov	r2, r3
   110c0:	ldr	r1, [pc, #1436]	; 11664 <__snprintf_chk@plt+0x88c>
   110c4:	add	r0, sp, #108	; 0x6c
   110c8:	bl	14160 <__snprintf_chk@plt+0x3388>
   110cc:	ldr	r2, [pc, #1412]	; 11658 <__snprintf_chk@plt+0x880>
   110d0:	ldr	r1, [pc, #1424]	; 11668 <__snprintf_chk@plt+0x890>
   110d4:	mov	r0, #1
   110d8:	bl	10d30 <__printf_chk@plt>
   110dc:	ldrb	r3, [r4, #48]	; 0x30
   110e0:	cmp	r3, #0
   110e4:	bne	1118c <__snprintf_chk@plt+0x3b4>
   110e8:	cmp	fp, #0
   110ec:	ldrh	r0, [r4, #28]
   110f0:	beq	1115c <__snprintf_chk@plt+0x384>
   110f4:	bl	13004 <__snprintf_chk@plt+0x222c>
   110f8:	cmp	r0, #0
   110fc:	str	r0, [r4]
   11100:	beq	11568 <__snprintf_chk@plt+0x790>
   11104:	ldr	r2, [pc, #1376]	; 1166c <__snprintf_chk@plt+0x894>
   11108:	mov	r3, #0
   1110c:	str	r2, [sp]
   11110:	str	r3, [sp, #8]
   11114:	str	r3, [sp, #4]
   11118:	mov	r2, r3
   1111c:	ldr	r1, [pc, #1356]	; 11670 <__snprintf_chk@plt+0x898>
   11120:	ldr	r0, [r4]
   11124:	bl	130cc <__snprintf_chk@plt+0x22f4>
   11128:	bl	13d28 <__snprintf_chk@plt+0x2f50>
   1112c:	mov	r5, r0
   11130:	ldr	r0, [r4]
   11134:	bl	12f30 <__snprintf_chk@plt+0x2158>
   11138:	b	10f78 <__snprintf_chk@plt+0x1a0>
   1113c:	ldr	r3, [pc, #1328]	; 11674 <__snprintf_chk@plt+0x89c>
   11140:	mov	r2, #32
   11144:	mov	r1, #1
   11148:	ldr	r3, [r3]
   1114c:	ldr	r0, [pc, #1316]	; 11678 <__snprintf_chk@plt+0x8a0>
   11150:	bl	10c4c <fwrite@plt>
   11154:	mov	r5, #1
   11158:	b	10f78 <__snprintf_chk@plt+0x1a0>
   1115c:	bl	12fbc <__snprintf_chk@plt+0x21e4>
   11160:	cmp	r0, #0
   11164:	str	r0, [r4]
   11168:	bne	11104 <__snprintf_chk@plt+0x32c>
   1116c:	ldr	r3, [pc, #1280]	; 11674 <__snprintf_chk@plt+0x89c>
   11170:	mov	r2, #32
   11174:	mov	r1, #1
   11178:	ldr	r3, [r3]
   1117c:	ldr	r0, [pc, #1272]	; 1167c <__snprintf_chk@plt+0x8a4>
   11180:	bl	10c4c <fwrite@plt>
   11184:	mov	r5, #1
   11188:	b	10f78 <__snprintf_chk@plt+0x1a0>
   1118c:	ldr	r6, [r4, #44]	; 0x2c
   11190:	mov	r1, #0
   11194:	mov	r0, r6
   11198:	bl	10cac <open@plt>
   1119c:	subs	r5, r0, #0
   111a0:	blt	11524 <__snprintf_chk@plt+0x74c>
   111a4:	add	r2, sp, #16
   111a8:	mov	r1, r5
   111ac:	mov	r0, #3
   111b0:	bl	10c88 <__fxstat@plt>
   111b4:	cmp	r0, #0
   111b8:	blt	11544 <__snprintf_chk@plt+0x76c>
   111bc:	ldr	r6, [sp, #60]	; 0x3c
   111c0:	mov	r0, r6
   111c4:	bl	10c64 <malloc@plt>
   111c8:	cmp	r0, #0
   111cc:	mov	r1, r0
   111d0:	str	r0, [r4, #8]
   111d4:	beq	115e4 <__snprintf_chk@plt+0x80c>
   111d8:	mov	r2, r6
   111dc:	mov	r0, r5
   111e0:	bl	10be0 <read@plt>
   111e4:	subs	r6, r0, #0
   111e8:	blt	115a4 <__snprintf_chk@plt+0x7cc>
   111ec:	mov	r0, r5
   111f0:	bl	10dcc <close@plt>
   111f4:	ldr	r3, [sp, #60]	; 0x3c
   111f8:	cmp	r6, r3
   111fc:	bne	11588 <__snprintf_chk@plt+0x7b0>
   11200:	cmp	r6, #127	; 0x7f
   11204:	bls	115c8 <__snprintf_chk@plt+0x7f0>
   11208:	ldr	r5, [r4, #8]
   1120c:	ldr	r1, [pc, #1132]	; 11680 <__snprintf_chk@plt+0x8a8>
   11210:	mov	r0, #1
   11214:	ldrb	lr, [r5, #1]
   11218:	ldrb	ip, [r5, #2]
   1121c:	ldrb	r3, [r5]
   11220:	ldrb	r2, [r5, #3]
   11224:	orr	r3, r3, lr, lsl #8
   11228:	orr	r3, r3, ip, lsl #16
   1122c:	orr	r2, r3, r2, lsl #24
   11230:	bl	10d30 <__printf_chk@plt>
   11234:	ldrb	r1, [r5, #5]
   11238:	ldrb	r0, [r5, #6]
   1123c:	ldrb	r3, [r5, #4]
   11240:	ldrb	r2, [r5, #7]
   11244:	orr	r3, r3, r1, lsl #8
   11248:	orr	r3, r3, r0, lsl #16
   1124c:	orr	r3, r3, r2, lsl #24
   11250:	mov	r2, r3
   11254:	ldr	r1, [pc, #1064]	; 11684 <__snprintf_chk@plt+0x8ac>
   11258:	lsl	r3, r3, #2
   1125c:	mov	r0, #1
   11260:	bl	10d30 <__printf_chk@plt>
   11264:	ldrb	r1, [r5, #9]
   11268:	ldrb	r0, [r5, #10]
   1126c:	ldrb	r2, [r5, #8]
   11270:	ldrb	r3, [r5, #11]
   11274:	orr	r2, r2, r1, lsl #8
   11278:	orr	r2, r2, r0, lsl #16
   1127c:	orr	r2, r2, r3, lsl #24
   11280:	ldr	r1, [pc, #1024]	; 11688 <__snprintf_chk@plt+0x8b0>
   11284:	uxth	r3, r2
   11288:	mov	r0, #1
   1128c:	lsr	r2, r2, #16
   11290:	bl	10d30 <__printf_chk@plt>
   11294:	ldrb	r1, [r5, #13]
   11298:	ldrb	r0, [r5, #14]
   1129c:	ldrb	r3, [r5, #12]
   112a0:	ldrb	r2, [r5, #15]
   112a4:	orr	r3, r3, r1, lsl #8
   112a8:	orr	r3, r3, r0, lsl #16
   112ac:	orr	r2, r3, r2, lsl #24
   112b0:	ldr	r1, [pc, #980]	; 1168c <__snprintf_chk@plt+0x8b4>
   112b4:	mov	r0, #1
   112b8:	bl	10d30 <__printf_chk@plt>
   112bc:	ldrb	r1, [r5, #17]
   112c0:	ldrb	r0, [r5, #18]
   112c4:	ldrb	r3, [r5, #16]
   112c8:	ldrb	r2, [r5, #19]
   112cc:	orr	r3, r3, r1, lsl #8
   112d0:	orr	r3, r3, r0, lsl #16
   112d4:	orr	r2, r3, r2, lsl #24
   112d8:	ldr	r1, [pc, #944]	; 11690 <__snprintf_chk@plt+0x8b8>
   112dc:	mov	r0, #1
   112e0:	bl	10d30 <__printf_chk@plt>
   112e4:	ldrb	r1, [r5, #21]
   112e8:	ldrb	r0, [r5, #22]
   112ec:	ldrb	r3, [r5, #20]
   112f0:	ldrb	r2, [r5, #23]
   112f4:	orr	r3, r3, r1, lsl #8
   112f8:	orr	r3, r3, r0, lsl #16
   112fc:	orr	r2, r3, r2, lsl #24
   11300:	ldr	r1, [pc, #908]	; 11694 <__snprintf_chk@plt+0x8bc>
   11304:	mov	r0, #1
   11308:	bl	10d30 <__printf_chk@plt>
   1130c:	ldrb	r1, [r5, #25]
   11310:	ldrb	r0, [r5, #26]
   11314:	ldrb	r3, [r5, #24]
   11318:	ldrb	r2, [r5, #27]
   1131c:	orr	r3, r3, r1, lsl #8
   11320:	orr	r3, r3, r0, lsl #16
   11324:	orr	r3, r3, r2, lsl #24
   11328:	mov	r2, r3
   1132c:	ldr	r1, [pc, #868]	; 11698 <__snprintf_chk@plt+0x8c0>
   11330:	lsl	r3, r3, #2
   11334:	mov	r0, #1
   11338:	bl	10d30 <__printf_chk@plt>
   1133c:	ldrb	r1, [r5, #29]
   11340:	ldrb	r0, [r5, #30]
   11344:	ldrb	r3, [r5, #28]
   11348:	ldrb	r2, [r5, #31]
   1134c:	orr	r3, r3, r1, lsl #8
   11350:	orr	r3, r3, r0, lsl #16
   11354:	orr	r3, r3, r2, lsl #24
   11358:	mov	r2, r3
   1135c:	ldr	r1, [pc, #824]	; 1169c <__snprintf_chk@plt+0x8c4>
   11360:	lsl	r3, r3, #2
   11364:	mov	r0, #1
   11368:	bl	10d30 <__printf_chk@plt>
   1136c:	ldrb	r1, [r5, #33]	; 0x21
   11370:	ldrb	r0, [r5, #34]	; 0x22
   11374:	ldrb	r3, [r5, #32]
   11378:	ldrb	r2, [r5, #35]	; 0x23
   1137c:	orr	r3, r3, r1, lsl #8
   11380:	orr	r3, r3, r0, lsl #16
   11384:	orr	r3, r3, r2, lsl #24
   11388:	mov	r2, r3
   1138c:	ldr	r1, [pc, #780]	; 116a0 <__snprintf_chk@plt+0x8c8>
   11390:	lsl	r3, r3, #2
   11394:	mov	r0, #1
   11398:	bl	10d30 <__printf_chk@plt>
   1139c:	ldrb	r1, [r5, #37]	; 0x25
   113a0:	ldrb	r0, [r5, #38]	; 0x26
   113a4:	ldrb	r3, [r5, #36]	; 0x24
   113a8:	ldrb	r2, [r5, #39]	; 0x27
   113ac:	orr	r3, r3, r1, lsl #8
   113b0:	orr	r3, r3, r0, lsl #16
   113b4:	orr	r3, r3, r2, lsl #24
   113b8:	mov	r2, r3
   113bc:	ldr	r1, [pc, #736]	; 116a4 <__snprintf_chk@plt+0x8cc>
   113c0:	lsl	r3, r3, #2
   113c4:	mov	r0, #1
   113c8:	bl	10d30 <__printf_chk@plt>
   113cc:	mov	r0, #10
   113d0:	bl	10d24 <putchar@plt>
   113d4:	ldrb	r0, [r5, #25]
   113d8:	ldrb	r2, [r5, #24]
   113dc:	ldrb	r1, [r5, #26]
   113e0:	ldrb	r3, [r5, #27]
   113e4:	orr	r2, r2, r0, lsl #8
   113e8:	orr	r2, r2, r1, lsl #16
   113ec:	orr	r2, r2, r3, lsl #24
   113f0:	lsl	r2, r2, #2
   113f4:	cmp	r6, r2
   113f8:	bne	11608 <__snprintf_chk@plt+0x830>
   113fc:	ldrb	lr, [r5, #29]
   11400:	ldrb	r0, [r5, #33]	; 0x21
   11404:	ldrb	ip, [r5, #30]
   11408:	ldrb	r3, [r5, #28]
   1140c:	ldrb	r1, [r5, #32]
   11410:	ldrb	r7, [r5, #5]
   11414:	orr	r3, r3, lr, lsl #8
   11418:	ldrb	lr, [r5, #34]	; 0x22
   1141c:	orr	r1, r1, r0, lsl #8
   11420:	orr	r3, r3, ip, lsl #16
   11424:	ldrb	r0, [r5, #31]
   11428:	ldrb	ip, [r5, #35]	; 0x23
   1142c:	orr	r1, r1, lr, lsl #16
   11430:	ldrb	lr, [r5, #37]	; 0x25
   11434:	orr	r3, r3, r0, lsl #24
   11438:	orr	r1, r1, ip, lsl #24
   1143c:	ldrb	r0, [r5, #36]	; 0x24
   11440:	ldrb	ip, [r5, #38]	; 0x26
   11444:	add	r3, r3, r1
   11448:	orr	r0, r0, lr, lsl #8
   1144c:	ldrb	r6, [r5, #39]	; 0x27
   11450:	ldrb	r1, [r5, #4]
   11454:	ldrb	lr, [r5, #6]
   11458:	orr	r0, r0, ip, lsl #16
   1145c:	ldrb	ip, [r5, #7]
   11460:	orr	r1, r1, r7, lsl #8
   11464:	add	r3, r3, #32
   11468:	orr	r0, r0, r6, lsl #24
   1146c:	orr	r1, r1, lr, lsl #16
   11470:	add	r3, r3, r0
   11474:	orr	r1, r1, ip, lsl #24
   11478:	cmp	r1, r3
   1147c:	bne	11624 <__snprintf_chk@plt+0x84c>
   11480:	lsl	r1, r1, #2
   11484:	str	r1, [r4, #16]
   11488:	str	r2, [r4, #20]
   1148c:	mov	r5, #0
   11490:	ldr	r8, [pc, #528]	; 116a8 <__snprintf_chk@plt+0x8d0>
   11494:	ldr	r7, [pc, #528]	; 116ac <__snprintf_chk@plt+0x8d4>
   11498:	ldr	r6, [pc, #528]	; 116b0 <__snprintf_chk@plt+0x8d8>
   1149c:	b	114ec <__snprintf_chk@plt+0x714>
   114a0:	ldr	r3, [r4, #8]
   114a4:	ldrb	r2, [r3, r2]!
   114a8:	ldrb	r1, [r3, #1]
   114ac:	ldrb	sl, [r3, #2]
   114b0:	orr	r2, r2, r1, lsl #8
   114b4:	cmp	r2, r8
   114b8:	beq	114d8 <__snprintf_chk@plt+0x700>
   114bc:	cmp	r2, r7
   114c0:	beq	114d8 <__snprintf_chk@plt+0x700>
   114c4:	cmp	r2, r6
   114c8:	beq	114d8 <__snprintf_chk@plt+0x700>
   114cc:	ldr	r1, [pc, #480]	; 116b4 <__snprintf_chk@plt+0x8dc>
   114d0:	mov	r0, #1
   114d4:	bl	10d30 <__printf_chk@plt>
   114d8:	ldr	r3, [r4, #16]
   114dc:	add	r5, r5, #1
   114e0:	add	r3, r3, #3
   114e4:	add	r3, r3, sl
   114e8:	str	r3, [r4, #16]
   114ec:	ldrd	r2, [r4, #16]
   114f0:	cmp	r2, r3
   114f4:	bcc	114a0 <__snprintf_chk@plt+0x6c8>
   114f8:	mov	r2, r5
   114fc:	ldr	r1, [pc, #436]	; 116b8 <__snprintf_chk@plt+0x8e0>
   11500:	mov	r0, #1
   11504:	bl	10d30 <__printf_chk@plt>
   11508:	ldr	r0, [r4, #8]
   1150c:	bl	10bf8 <free@plt>
   11510:	mov	r5, #0
   11514:	b	10f78 <__snprintf_chk@plt+0x1a0>
   11518:	bl	11864 <__snprintf_chk@plt+0xa8c>
   1151c:	mov	r5, #1
   11520:	b	10f78 <__snprintf_chk@plt+0x1a0>
   11524:	ldr	r1, [pc, #328]	; 11674 <__snprintf_chk@plt+0x89c>
   11528:	mov	r3, r6
   1152c:	ldr	r2, [pc, #392]	; 116bc <__snprintf_chk@plt+0x8e4>
   11530:	ldr	r0, [r1]
   11534:	mov	r1, #1
   11538:	bl	10d3c <__fprintf_chk@plt>
   1153c:	mov	r5, #0
   11540:	b	10f78 <__snprintf_chk@plt+0x1a0>
   11544:	ldr	r3, [pc, #296]	; 11674 <__snprintf_chk@plt+0x89c>
   11548:	mov	r2, #28
   1154c:	mov	r1, #1
   11550:	ldr	r3, [r3]
   11554:	ldr	r0, [pc, #356]	; 116c0 <__snprintf_chk@plt+0x8e8>
   11558:	bl	10c4c <fwrite@plt>
   1155c:	mov	r0, r5
   11560:	bl	10dcc <close@plt>
   11564:	b	1153c <__snprintf_chk@plt+0x764>
   11568:	ldr	r3, [pc, #260]	; 11674 <__snprintf_chk@plt+0x89c>
   1156c:	mov	r2, #30
   11570:	mov	r1, #1
   11574:	ldr	r3, [r3]
   11578:	ldr	r0, [pc, #324]	; 116c4 <__snprintf_chk@plt+0x8ec>
   1157c:	bl	10c4c <fwrite@plt>
   11580:	mov	r5, #1
   11584:	b	10f78 <__snprintf_chk@plt+0x1a0>
   11588:	ldr	r3, [pc, #228]	; 11674 <__snprintf_chk@plt+0x89c>
   1158c:	mov	r2, #38	; 0x26
   11590:	mov	r1, #1
   11594:	ldr	r3, [r3]
   11598:	ldr	r0, [pc, #296]	; 116c8 <__snprintf_chk@plt+0x8f0>
   1159c:	bl	10c4c <fwrite@plt>
   115a0:	b	11508 <__snprintf_chk@plt+0x730>
   115a4:	ldr	r3, [pc, #200]	; 11674 <__snprintf_chk@plt+0x89c>
   115a8:	mov	r2, #29
   115ac:	mov	r1, #1
   115b0:	ldr	r3, [r3]
   115b4:	ldr	r0, [pc, #272]	; 116cc <__snprintf_chk@plt+0x8f4>
   115b8:	bl	10c4c <fwrite@plt>
   115bc:	mov	r0, r5
   115c0:	bl	10dcc <close@plt>
   115c4:	b	11508 <__snprintf_chk@plt+0x730>
   115c8:	ldr	r3, [pc, #164]	; 11674 <__snprintf_chk@plt+0x89c>
   115cc:	mov	r2, #27
   115d0:	mov	r1, #1
   115d4:	ldr	r3, [r3]
   115d8:	ldr	r0, [pc, #240]	; 116d0 <__snprintf_chk@plt+0x8f8>
   115dc:	bl	10c4c <fwrite@plt>
   115e0:	b	11508 <__snprintf_chk@plt+0x730>
   115e4:	ldr	r3, [pc, #136]	; 11674 <__snprintf_chk@plt+0x89c>
   115e8:	mov	r2, #35	; 0x23
   115ec:	mov	r1, #1
   115f0:	ldr	r3, [r3]
   115f4:	ldr	r0, [pc, #216]	; 116d4 <__snprintf_chk@plt+0x8fc>
   115f8:	bl	10c4c <fwrite@plt>
   115fc:	mov	r0, r5
   11600:	bl	10dcc <close@plt>
   11604:	b	1153c <__snprintf_chk@plt+0x764>
   11608:	ldr	r3, [pc, #100]	; 11674 <__snprintf_chk@plt+0x89c>
   1160c:	mov	r2, #36	; 0x24
   11610:	mov	r1, #1
   11614:	ldr	r3, [r3]
   11618:	ldr	r0, [pc, #184]	; 116d8 <__snprintf_chk@plt+0x900>
   1161c:	bl	10c4c <fwrite@plt>
   11620:	b	11508 <__snprintf_chk@plt+0x730>
   11624:	ldr	r3, [pc, #72]	; 11674 <__snprintf_chk@plt+0x89c>
   11628:	mov	r2, #40	; 0x28
   1162c:	mov	r1, #1
   11630:	ldr	r3, [r3]
   11634:	ldr	r0, [pc, #160]	; 116dc <__snprintf_chk@plt+0x904>
   11638:	bl	10c4c <fwrite@plt>
   1163c:	b	11508 <__snprintf_chk@plt+0x730>
   11640:	bl	10c28 <__stack_chk_fail@plt>
   11644:	andeq	sl, r2, r8, lsr #28
   11648:	andeq	r4, r1, r8, lsr #30
   1164c:	andeq	r5, r1, r8, ror r9
   11650:	andeq	fp, r2, r8, lsl r0
   11654:	andeq	fp, r2, r0, lsr #32
   11658:	muleq	r1, r0, r9
   1165c:	andeq	r5, r1, ip, lsl #19
   11660:	andeq	fp, r2, r8
   11664:	andeq	r1, r1, r0, asr r8
   11668:			; <UNDEFINED> instruction: 0x000159bc
   1166c:	andeq	r2, r1, r8, ror #17
   11670:	andeq	pc, r0, r5, lsl #24
   11674:	andeq	fp, r2, r0, lsl r0
   11678:	muleq	r1, r8, r9
   1167c:	andeq	r5, r1, r4, asr #23
   11680:	andeq	r5, r1, r8, lsr #20
   11684:	andeq	r5, r1, ip, lsr sl
   11688:	andeq	r5, r1, r0, ror #20
   1168c:	andeq	r5, r1, r8, ror sl
   11690:	andeq	r5, r1, r8, lsl #21
   11694:	muleq	r1, ip, sl
   11698:	andeq	r5, r1, r8, lsr #21
   1169c:	andeq	r5, r1, r8, asr #21
   116a0:	andeq	r5, r1, r8, ror #21
   116a4:	andeq	r5, r1, ip, lsl #22
   116a8:	andeq	pc, r0, lr, lsl #24
   116ac:	andeq	pc, r0, lr, lsl #25
   116b0:	andeq	pc, r0, r2, lsl #24
   116b4:	andeq	r5, r1, ip, lsl r5
   116b8:	andeq	r5, r1, r8, lsl #23
   116bc:	andeq	r5, r1, r4, ror r4
   116c0:	muleq	r1, r0, r4
   116c4:	andeq	r5, r1, r4, lsr #23
   116c8:	andeq	r5, r1, r4, ror #19
   116cc:	ldrdeq	r5, [r1], -r4
   116d0:	andeq	r5, r1, ip, lsl #20
   116d4:			; <UNDEFINED> instruction: 0x000154b0
   116d8:	andeq	r5, r1, r4, lsr fp
   116dc:	andeq	r5, r1, ip, asr fp
   116e0:	mov	fp, #0
   116e4:	mov	lr, #0
   116e8:	pop	{r1}		; (ldr r1, [sp], #4)
   116ec:	mov	r2, sp
   116f0:	push	{r2}		; (str r2, [sp, #-4]!)
   116f4:	push	{r0}		; (str r0, [sp, #-4]!)
   116f8:	ldr	ip, [pc, #16]	; 11710 <__snprintf_chk@plt+0x938>
   116fc:	push	{ip}		; (str ip, [sp, #-4]!)
   11700:	ldr	r0, [pc, #12]	; 11714 <__snprintf_chk@plt+0x93c>
   11704:	ldr	r3, [pc, #12]	; 11718 <__snprintf_chk@plt+0x940>
   11708:	bl	10c7c <__libc_start_main@plt>
   1170c:	bl	10db4 <abort@plt>
   11710:	ldrdeq	r4, [r1], -r0
   11714:	andeq	r0, r1, r4, ror #27
   11718:	andeq	r4, r1, r0, ror lr
   1171c:	ldr	r3, [pc, #20]	; 11738 <__snprintf_chk@plt+0x960>
   11720:	ldr	r2, [pc, #20]	; 1173c <__snprintf_chk@plt+0x964>
   11724:	add	r3, pc, r3
   11728:	ldr	r2, [r3, r2]
   1172c:	cmp	r2, #0
   11730:	bxeq	lr
   11734:	b	10ca0 <__gmon_start__@plt>
   11738:	andeq	r9, r1, r8, lsl #16
   1173c:	andeq	r0, r0, r8, asr #1
   11740:	ldr	r0, [pc, #24]	; 11760 <__snprintf_chk@plt+0x988>
   11744:	ldr	r3, [pc, #24]	; 11764 <__snprintf_chk@plt+0x98c>
   11748:	cmp	r3, r0
   1174c:	bxeq	lr
   11750:	ldr	r3, [pc, #16]	; 11768 <__snprintf_chk@plt+0x990>
   11754:	cmp	r3, #0
   11758:	bxeq	lr
   1175c:	bx	r3
   11760:	andeq	fp, r2, r8
   11764:	andeq	fp, r2, r8
   11768:	andeq	r0, r0, r0
   1176c:	ldr	r0, [pc, #36]	; 11798 <__snprintf_chk@plt+0x9c0>
   11770:	ldr	r1, [pc, #36]	; 1179c <__snprintf_chk@plt+0x9c4>
   11774:	sub	r1, r1, r0
   11778:	asr	r1, r1, #2
   1177c:	add	r1, r1, r1, lsr #31
   11780:	asrs	r1, r1, #1
   11784:	bxeq	lr
   11788:	ldr	r3, [pc, #16]	; 117a0 <__snprintf_chk@plt+0x9c8>
   1178c:	cmp	r3, #0
   11790:	bxeq	lr
   11794:	bx	r3
   11798:	andeq	fp, r2, r8
   1179c:	andeq	fp, r2, r8
   117a0:	andeq	r0, r0, r0
   117a4:	push	{r4, lr}
   117a8:	ldr	r4, [pc, #24]	; 117c8 <__snprintf_chk@plt+0x9f0>
   117ac:	ldrb	r3, [r4]
   117b0:	cmp	r3, #0
   117b4:	popne	{r4, pc}
   117b8:	bl	11740 <__snprintf_chk@plt+0x968>
   117bc:	mov	r3, #1
   117c0:	strb	r3, [r4]
   117c4:	pop	{r4, pc}
   117c8:	andeq	fp, r2, ip, lsl r0
   117cc:	b	1176c <__snprintf_chk@plt+0x994>
   117d0:	push	{r4, lr}
   117d4:	sub	sp, sp, #24
   117d8:	ldr	r4, [pc, #92]	; 1183c <__snprintf_chk@plt+0xa64>
   117dc:	ldr	r0, [pc, #92]	; 11840 <__snprintf_chk@plt+0xa68>
   117e0:	ldr	r3, [pc, #92]	; 11844 <__snprintf_chk@plt+0xa6c>
   117e4:	ldr	r2, [r4]
   117e8:	ldr	r1, [pc, #88]	; 11848 <__snprintf_chk@plt+0xa70>
   117ec:	ldr	r0, [r0]
   117f0:	mov	ip, #3
   117f4:	str	r3, [sp]
   117f8:	mov	r3, #0
   117fc:	str	r3, [sp, #8]
   11800:	str	r3, [sp, #4]
   11804:	str	r2, [sp, #20]
   11808:	mov	r3, ip
   1180c:	add	r2, sp, #16
   11810:	strh	r1, [sp, #16]
   11814:	ldr	r1, [pc, #48]	; 1184c <__snprintf_chk@plt+0xa74>
   11818:	strb	ip, [sp, #18]
   1181c:	bl	130cc <__snprintf_chk@plt+0x22f4>
   11820:	ldr	r2, [sp, #20]
   11824:	ldr	r3, [r4]
   11828:	cmp	r2, r3
   1182c:	bne	11838 <__snprintf_chk@plt+0xa60>
   11830:	add	sp, sp, #24
   11834:	pop	{r4, pc}
   11838:	bl	10c28 <__stack_chk_fail@plt>
   1183c:	andeq	sl, r2, r8, lsr #28
   11840:	andeq	fp, r2, r0, lsr #32
   11844:	ldrdeq	r1, [r1], -ip
   11848:	andeq	r0, r0, r3, lsl #6
   1184c:	andeq	pc, r0, r3, asr #24
   11850:	cmp	r0, #2
   11854:	beq	11860 <__snprintf_chk@plt+0xa88>
   11858:	cmp	r0, #15
   1185c:	bxne	lr
   11860:	b	13a20 <__snprintf_chk@plt+0x2c48>
   11864:	push	{r4, lr}
   11868:	ldr	r0, [pc, #20]	; 11884 <__snprintf_chk@plt+0xaac>
   1186c:	bl	10c58 <puts@plt>
   11870:	ldr	r0, [pc, #16]	; 11888 <__snprintf_chk@plt+0xab0>
   11874:	bl	10c58 <puts@plt>
   11878:	ldr	r0, [pc, #12]	; 1188c <__snprintf_chk@plt+0xab4>
   1187c:	pop	{r4, lr}
   11880:	b	10c58 <puts@plt>
   11884:	strdeq	r4, [r1], -r8
   11888:	andeq	r5, r1, ip, lsr #32
   1188c:	andeq	r5, r1, r0, asr #32
   11890:	ldrb	r3, [r0]
   11894:	cmp	r3, #0
   11898:	bne	118a0 <__snprintf_chk@plt+0xac8>
   1189c:	b	13a20 <__snprintf_chk@plt+0x2c48>
   118a0:	ldr	r1, [pc, #24]	; 118c0 <__snprintf_chk@plt+0xae8>
   118a4:	push	{r4, lr}
   118a8:	ldr	r0, [r1]
   118ac:	ldr	r2, [pc, #16]	; 118c4 <__snprintf_chk@plt+0xaec>
   118b0:	mov	r1, #1
   118b4:	bl	10d3c <__fprintf_chk@plt>
   118b8:	pop	{r4, lr}
   118bc:	b	13a20 <__snprintf_chk@plt+0x2c48>
   118c0:	andeq	fp, r2, r0, lsl r0
   118c4:	andeq	r5, r1, r8, lsr #3
   118c8:	push	{r4, lr}
   118cc:	sub	sp, sp, #8
   118d0:	ldrb	r3, [r0]
   118d4:	cmp	r3, #0
   118d8:	bne	11a08 <__snprintf_chk@plt+0xc30>
   118dc:	cmp	r1, #23
   118e0:	bne	119e4 <__snprintf_chk@plt+0xc0c>
   118e4:	mov	r4, r0
   118e8:	ldr	r0, [pc, #312]	; 11a28 <__snprintf_chk@plt+0xc50>
   118ec:	bl	10c58 <puts@plt>
   118f0:	ldrb	r2, [r4, #1]
   118f4:	ldr	r1, [pc, #304]	; 11a2c <__snprintf_chk@plt+0xc54>
   118f8:	mov	r0, #1
   118fc:	bl	10d30 <__printf_chk@plt>
   11900:	ldrb	r2, [r4, #2]
   11904:	ldr	r1, [pc, #292]	; 11a30 <__snprintf_chk@plt+0xc58>
   11908:	mov	r0, #1
   1190c:	bl	10d30 <__printf_chk@plt>
   11910:	ldrb	r2, [r4, #3]
   11914:	ldr	r1, [pc, #280]	; 11a34 <__snprintf_chk@plt+0xc5c>
   11918:	mov	r0, #1
   1191c:	bl	10d30 <__printf_chk@plt>
   11920:	ldrb	r2, [r4, #5]
   11924:	ldrb	r3, [r4, #4]
   11928:	ldr	r1, [pc, #264]	; 11a38 <__snprintf_chk@plt+0xc60>
   1192c:	mov	r0, #1
   11930:	orr	r2, r3, r2, lsl #8
   11934:	bl	10d30 <__printf_chk@plt>
   11938:	ldrb	r2, [r4, #6]
   1193c:	ldr	r1, [pc, #248]	; 11a3c <__snprintf_chk@plt+0xc64>
   11940:	mov	r0, #1
   11944:	bl	10d30 <__printf_chk@plt>
   11948:	ldrb	r2, [r4, #7]
   1194c:	ldr	r1, [pc, #236]	; 11a40 <__snprintf_chk@plt+0xc68>
   11950:	mov	r0, #1
   11954:	bl	10d30 <__printf_chk@plt>
   11958:	ldrb	r2, [r4, #8]
   1195c:	ldr	r1, [pc, #224]	; 11a44 <__snprintf_chk@plt+0xc6c>
   11960:	mov	r0, #1
   11964:	bl	10d30 <__printf_chk@plt>
   11968:	ldrb	r2, [r4, #9]
   1196c:	ldr	r1, [pc, #212]	; 11a48 <__snprintf_chk@plt+0xc70>
   11970:	mov	r0, #1
   11974:	bl	10d30 <__printf_chk@plt>
   11978:	ldrb	r2, [r4, #10]
   1197c:	ldr	r1, [pc, #200]	; 11a4c <__snprintf_chk@plt+0xc74>
   11980:	mov	r0, #1
   11984:	bl	10d30 <__printf_chk@plt>
   11988:	ldrb	r2, [r4, #11]
   1198c:	ldr	r1, [pc, #188]	; 11a50 <__snprintf_chk@plt+0xc78>
   11990:	mov	r0, #1
   11994:	bl	10d30 <__printf_chk@plt>
   11998:	ldrb	r1, [r4, #20]
   1199c:	ldrb	r3, [r4, #19]
   119a0:	ldrb	r2, [r4, #18]
   119a4:	add	r1, r1, #2000	; 0x7d0
   119a8:	str	r1, [sp]
   119ac:	mov	r0, #1
   119b0:	ldr	r1, [pc, #156]	; 11a54 <__snprintf_chk@plt+0xc7c>
   119b4:	bl	10d30 <__printf_chk@plt>
   119b8:	ldrb	r2, [r4, #21]
   119bc:	ldr	r1, [pc, #148]	; 11a58 <__snprintf_chk@plt+0xc80>
   119c0:	mov	r0, #1
   119c4:	bl	10d30 <__printf_chk@plt>
   119c8:	ldrb	r2, [r4, #22]
   119cc:	ldr	r1, [pc, #136]	; 11a5c <__snprintf_chk@plt+0xc84>
   119d0:	mov	r0, #1
   119d4:	bl	10d30 <__printf_chk@plt>
   119d8:	add	sp, sp, #8
   119dc:	pop	{r4, lr}
   119e0:	b	13a20 <__snprintf_chk@plt+0x2c48>
   119e4:	ldr	r3, [pc, #116]	; 11a60 <__snprintf_chk@plt+0xc88>
   119e8:	mov	r2, #35	; 0x23
   119ec:	mov	r1, #1
   119f0:	ldr	r3, [r3]
   119f4:	ldr	r0, [pc, #104]	; 11a64 <__snprintf_chk@plt+0xc8c>
   119f8:	bl	10c4c <fwrite@plt>
   119fc:	add	sp, sp, #8
   11a00:	pop	{r4, lr}
   11a04:	b	13a20 <__snprintf_chk@plt+0x2c48>
   11a08:	ldr	r1, [pc, #80]	; 11a60 <__snprintf_chk@plt+0xc88>
   11a0c:	ldr	r2, [pc, #84]	; 11a68 <__snprintf_chk@plt+0xc90>
   11a10:	ldr	r0, [r1]
   11a14:	mov	r1, #1
   11a18:	bl	10d3c <__fprintf_chk@plt>
   11a1c:	add	sp, sp, #8
   11a20:	pop	{r4, lr}
   11a24:	b	13a20 <__snprintf_chk@plt+0x2c48>
   11a28:	andeq	r5, r1, r0, lsl r2
   11a2c:	andeq	r5, r1, r8, lsr #4
   11a30:	andeq	r5, r1, r4, asr #4
   11a34:	andeq	r5, r1, r0, ror #4
   11a38:	andeq	r5, r1, ip, ror r2
   11a3c:	muleq	r1, r8, r2
   11a40:			; <UNDEFINED> instruction: 0x000152b4
   11a44:	ldrdeq	r5, [r1], -r0
   11a48:	andeq	r5, r1, r4, ror #5
   11a4c:	strdeq	r5, [r1], -r4
   11a50:	andeq	r5, r1, r4, lsl #6
   11a54:	andeq	r5, r1, r8, lsl r3
   11a58:	andeq	r5, r1, r8, lsr r3
   11a5c:	andeq	r5, r1, r4, asr r3
   11a60:	andeq	fp, r2, r0, lsl r0
   11a64:	andeq	r5, r1, ip, ror #3
   11a68:	andeq	r5, r1, r4, asr #3
   11a6c:	ldr	r1, [pc, #48]	; 11aa4 <__snprintf_chk@plt+0xccc>
   11a70:	push	{lr}		; (str lr, [sp, #-4]!)
   11a74:	sub	sp, sp, #20
   11a78:	ldr	r2, [pc, #40]	; 11aa8 <__snprintf_chk@plt+0xcd0>
   11a7c:	mov	r3, #0
   11a80:	ldr	r0, [r1]
   11a84:	str	r2, [sp]
   11a88:	str	r3, [sp, #8]
   11a8c:	str	r3, [sp, #4]
   11a90:	mov	r2, r3
   11a94:	ldr	r1, [pc, #16]	; 11aac <__snprintf_chk@plt+0xcd4>
   11a98:	bl	130cc <__snprintf_chk@plt+0x22f4>
   11a9c:	add	sp, sp, #20
   11aa0:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa4:	andeq	fp, r2, r0, lsr #32
   11aa8:	muleq	r1, r0, r8
   11aac:	andeq	r0, r0, r3, lsl #24
   11ab0:	ldrb	r3, [r0]
   11ab4:	cmp	r3, #0
   11ab8:	bne	11ad4 <__snprintf_chk@plt+0xcfc>
   11abc:	ldr	r3, [pc, #48]	; 11af4 <__snprintf_chk@plt+0xd1c>
   11ac0:	ldrb	r3, [r3, #4]
   11ac4:	cmp	r3, #0
   11ac8:	bne	11ad0 <__snprintf_chk@plt+0xcf8>
   11acc:	b	13a20 <__snprintf_chk@plt+0x2c48>
   11ad0:	b	11a6c <__snprintf_chk@plt+0xc94>
   11ad4:	ldr	r1, [pc, #28]	; 11af8 <__snprintf_chk@plt+0xd20>
   11ad8:	push	{r4, lr}
   11adc:	ldr	r0, [r1]
   11ae0:	ldr	r2, [pc, #20]	; 11afc <__snprintf_chk@plt+0xd24>
   11ae4:	mov	r1, #1
   11ae8:	bl	10d3c <__fprintf_chk@plt>
   11aec:	pop	{r4, lr}
   11af0:	b	13a20 <__snprintf_chk@plt+0x2c48>
   11af4:	andeq	fp, r2, r0, lsr #32
   11af8:	andeq	fp, r2, r0, lsl r0
   11afc:	andeq	r5, r1, ip, ror #6
   11b00:	ldrb	r3, [r0]
   11b04:	cmp	r3, #0
   11b08:	bne	11b24 <__snprintf_chk@plt+0xd4c>
   11b0c:	ldr	r3, [pc, #48]	; 11b44 <__snprintf_chk@plt+0xd6c>
   11b10:	ldrb	r3, [r3, #4]
   11b14:	cmp	r3, #0
   11b18:	bne	11b20 <__snprintf_chk@plt+0xd48>
   11b1c:	b	13a20 <__snprintf_chk@plt+0x2c48>
   11b20:	b	11a6c <__snprintf_chk@plt+0xc94>
   11b24:	ldr	r1, [pc, #28]	; 11b48 <__snprintf_chk@plt+0xd70>
   11b28:	push	{r4, lr}
   11b2c:	ldr	r0, [r1]
   11b30:	ldr	r2, [pc, #20]	; 11b4c <__snprintf_chk@plt+0xd74>
   11b34:	mov	r1, #1
   11b38:	bl	10d3c <__fprintf_chk@plt>
   11b3c:	pop	{r4, lr}
   11b40:	b	13a20 <__snprintf_chk@plt+0x2c48>
   11b44:	andeq	fp, r2, r0, lsr #32
   11b48:	andeq	fp, r2, r0, lsl r0
   11b4c:	muleq	r1, r8, r3
   11b50:	push	{r4, r5, lr}
   11b54:	sub	sp, sp, #28
   11b58:	ldr	r5, [pc, #172]	; 11c0c <__snprintf_chk@plt+0xe34>
   11b5c:	ldr	r4, [pc, #172]	; 11c10 <__snprintf_chk@plt+0xe38>
   11b60:	ldr	r3, [r5]
   11b64:	ldr	r0, [r4]
   11b68:	str	r3, [sp, #20]
   11b6c:	bl	13248 <__snprintf_chk@plt+0x2470>
   11b70:	ldr	r0, [r4, #8]
   11b74:	bl	10bf8 <free@plt>
   11b78:	ldrb	r3, [r4, #12]
   11b7c:	cmp	r3, #0
   11b80:	bne	11bd0 <__snprintf_chk@plt+0xdf8>
   11b84:	ldrb	r2, [r4, #4]
   11b88:	cmp	r2, #0
   11b8c:	bne	11bac <__snprintf_chk@plt+0xdd4>
   11b90:	bl	13a20 <__snprintf_chk@plt+0x2c48>
   11b94:	ldr	r2, [sp, #20]
   11b98:	ldr	r3, [r5]
   11b9c:	cmp	r2, r3
   11ba0:	bne	11c08 <__snprintf_chk@plt+0xe30>
   11ba4:	add	sp, sp, #28
   11ba8:	pop	{r4, r5, pc}
   11bac:	ldr	r2, [pc, #96]	; 11c14 <__snprintf_chk@plt+0xe3c>
   11bb0:	str	r3, [sp, #8]
   11bb4:	str	r2, [sp]
   11bb8:	str	r3, [sp, #4]
   11bbc:	ldr	r0, [r4]
   11bc0:	mov	r2, r3
   11bc4:	ldr	r1, [pc, #76]	; 11c18 <__snprintf_chk@plt+0xe40>
   11bc8:	bl	130cc <__snprintf_chk@plt+0x22f4>
   11bcc:	b	11b94 <__snprintf_chk@plt+0xdbc>
   11bd0:	ldrb	r1, [r4, #13]
   11bd4:	ldr	r3, [pc, #64]	; 11c1c <__snprintf_chk@plt+0xe44>
   11bd8:	mov	ip, #0
   11bdc:	str	r3, [sp]
   11be0:	strb	r1, [sp, #17]
   11be4:	ldr	r0, [r4]
   11be8:	str	ip, [sp, #8]
   11bec:	str	ip, [sp, #4]
   11bf0:	mov	r3, #2
   11bf4:	add	r2, sp, #16
   11bf8:	ldr	r1, [pc, #32]	; 11c20 <__snprintf_chk@plt+0xe48>
   11bfc:	strb	ip, [sp, #16]
   11c00:	bl	130cc <__snprintf_chk@plt+0x22f4>
   11c04:	b	11b94 <__snprintf_chk@plt+0xdbc>
   11c08:	bl	10c28 <__stack_chk_fail@plt>
   11c0c:	andeq	sl, r2, r8, lsr #28
   11c10:	andeq	fp, r2, r0, lsr #32
   11c14:	muleq	r1, r0, r8
   11c18:	andeq	r0, r0, r3, lsl #24
   11c1c:			; <UNDEFINED> instruction: 0x00011ab0
   11c20:	andeq	pc, r0, r1, lsl ip	; <UNPREDICTABLE>
   11c24:	ldrb	r3, [r0]
   11c28:	cmp	r3, #0
   11c2c:	bne	11c34 <__snprintf_chk@plt+0xe5c>
   11c30:	b	11b50 <__snprintf_chk@plt+0xd78>
   11c34:	ldr	r1, [pc, #24]	; 11c54 <__snprintf_chk@plt+0xe7c>
   11c38:	push	{r4, lr}
   11c3c:	ldr	r0, [r1]
   11c40:	ldr	r2, [pc, #16]	; 11c58 <__snprintf_chk@plt+0xe80>
   11c44:	mov	r1, #1
   11c48:	bl	10d3c <__fprintf_chk@plt>
   11c4c:	pop	{r4, lr}
   11c50:	b	13a20 <__snprintf_chk@plt+0x2c48>
   11c54:	andeq	fp, r2, r0, lsl r0
   11c58:			; <UNDEFINED> instruction: 0x000153b8
   11c5c:	ldrb	r3, [r0]
   11c60:	cmp	r3, #0
   11c64:	bne	11c80 <__snprintf_chk@plt+0xea8>
   11c68:	ldr	r3, [pc, #48]	; 11ca0 <__snprintf_chk@plt+0xec8>
   11c6c:	ldrb	r3, [r3, #14]
   11c70:	cmp	r3, #0
   11c74:	bne	11c7c <__snprintf_chk@plt+0xea4>
   11c78:	b	11b50 <__snprintf_chk@plt+0xd78>
   11c7c:	b	117d0 <__snprintf_chk@plt+0x9f8>
   11c80:	ldr	r1, [pc, #28]	; 11ca4 <__snprintf_chk@plt+0xecc>
   11c84:	push	{r4, lr}
   11c88:	ldr	r0, [r1]
   11c8c:	ldr	r2, [pc, #20]	; 11ca8 <__snprintf_chk@plt+0xed0>
   11c90:	mov	r1, #1
   11c94:	bl	10d3c <__fprintf_chk@plt>
   11c98:	pop	{r4, lr}
   11c9c:	b	11b50 <__snprintf_chk@plt+0xd78>
   11ca0:	andeq	fp, r2, r0, lsr #32
   11ca4:	andeq	fp, r2, r0, lsl r0
   11ca8:	ldrdeq	r5, [r1], -ip
   11cac:	push	{r4, r5, lr}
   11cb0:	sub	sp, sp, #20
   11cb4:	ldrb	r3, [r0]
   11cb8:	cmp	r3, #0
   11cbc:	bne	11d70 <__snprintf_chk@plt+0xf98>
   11cc0:	ldr	r4, [pc, #252]	; 11dc4 <__snprintf_chk@plt+0xfec>
   11cc4:	ldr	r1, [r4, #16]
   11cc8:	ldr	r2, [r4, #20]
   11ccc:	cmp	r1, r2
   11cd0:	bcs	11db4 <__snprintf_chk@plt+0xfdc>
   11cd4:	ldr	r0, [r4, #8]
   11cd8:	ldrb	r2, [r0, r1]
   11cdc:	cmp	r2, #1
   11ce0:	beq	11d10 <__snprintf_chk@plt+0xf38>
   11ce4:	ldr	r3, [pc, #220]	; 11dc8 <__snprintf_chk@plt+0xff0>
   11ce8:	mov	r2, #27
   11cec:	mov	r1, #1
   11cf0:	ldr	r3, [r3]
   11cf4:	ldr	r0, [pc, #208]	; 11dcc <__snprintf_chk@plt+0xff4>
   11cf8:	bl	10c4c <fwrite@plt>
   11cfc:	mov	r3, #1
   11d00:	strb	r3, [r4, #13]
   11d04:	add	sp, sp, #20
   11d08:	pop	{r4, r5, lr}
   11d0c:	b	11b50 <__snprintf_chk@plt+0xd78>
   11d10:	add	ip, r0, r1
   11d14:	add	r2, r1, #4
   11d18:	ldrb	lr, [ip, #2]
   11d1c:	ldrb	r5, [ip, #3]
   11d20:	ldrb	r1, [ip, #1]
   11d24:	add	r2, r0, r2
   11d28:	ldr	r0, [pc, #160]	; 11dd0 <__snprintf_chk@plt+0xff8>
   11d2c:	str	r3, [sp, #8]
   11d30:	str	r3, [sp, #4]
   11d34:	str	r0, [sp]
   11d38:	mov	r3, r5
   11d3c:	orr	r1, r1, lr, lsl #8
   11d40:	ldr	r0, [r4]
   11d44:	bl	130cc <__snprintf_chk@plt+0x22f4>
   11d48:	ldr	r2, [r4, #16]
   11d4c:	ldr	r3, [r4, #8]
   11d50:	add	r5, r5, r2
   11d54:	add	r2, r5, #4
   11d58:	str	r2, [r4, #16]
   11d5c:	ldrb	r2, [r3, r2]
   11d60:	cmp	r2, #2
   11d64:	beq	11d9c <__snprintf_chk@plt+0xfc4>
   11d68:	add	sp, sp, #20
   11d6c:	pop	{r4, r5, pc}
   11d70:	ldr	r1, [pc, #80]	; 11dc8 <__snprintf_chk@plt+0xff0>
   11d74:	ldr	r2, [pc, #88]	; 11dd4 <__snprintf_chk@plt+0xffc>
   11d78:	ldr	r0, [r1]
   11d7c:	mov	r1, #1
   11d80:	bl	10d3c <__fprintf_chk@plt>
   11d84:	ldr	r3, [pc, #56]	; 11dc4 <__snprintf_chk@plt+0xfec>
   11d88:	mov	r2, #1
   11d8c:	strb	r2, [r3, #13]
   11d90:	add	sp, sp, #20
   11d94:	pop	{r4, r5, lr}
   11d98:	b	11b50 <__snprintf_chk@plt+0xd78>
   11d9c:	add	r3, r3, r5
   11da0:	add	r5, r5, #7
   11da4:	ldrb	r3, [r3, #6]
   11da8:	add	r5, r3, r5
   11dac:	str	r5, [r4, #16]
   11db0:	b	11d68 <__snprintf_chk@plt+0xf90>
   11db4:	ldr	r0, [pc, #28]	; 11dd8 <__snprintf_chk@plt+0x1000>
   11db8:	bl	10c58 <puts@plt>
   11dbc:	mov	r3, #2
   11dc0:	b	11d00 <__snprintf_chk@plt+0xf28>
   11dc4:	andeq	fp, r2, r0, lsr #32
   11dc8:	andeq	fp, r2, r0, lsl r0
   11dcc:	andeq	r5, r1, r4, lsr r4
   11dd0:	andeq	r1, r1, ip, lsr #25
   11dd4:	strdeq	r5, [r1], -ip
   11dd8:	andeq	r5, r1, r0, lsr #8
   11ddc:	ldrb	r3, [r0]
   11de0:	cmp	r3, #0
   11de4:	bne	11dec <__snprintf_chk@plt+0x1014>
   11de8:	b	11b50 <__snprintf_chk@plt+0xd78>
   11dec:	ldr	r1, [pc, #24]	; 11e0c <__snprintf_chk@plt+0x1034>
   11df0:	push	{r4, lr}
   11df4:	ldr	r0, [r1]
   11df8:	ldr	r2, [pc, #16]	; 11e10 <__snprintf_chk@plt+0x1038>
   11dfc:	mov	r1, #1
   11e00:	bl	10d3c <__fprintf_chk@plt>
   11e04:	pop	{r4, lr}
   11e08:	b	11b50 <__snprintf_chk@plt+0xd78>
   11e0c:	andeq	fp, r2, r0, lsl r0
   11e10:	andeq	r5, r1, r0, asr r4
   11e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e18:	sub	sp, sp, #100	; 0x64
   11e1c:	ldr	r5, [pc, #656]	; 120b4 <__snprintf_chk@plt+0x12dc>
   11e20:	mov	r1, #0
   11e24:	mov	r4, r0
   11e28:	ldr	r3, [r5]
   11e2c:	str	r3, [sp, #92]	; 0x5c
   11e30:	bl	10cac <open@plt>
   11e34:	subs	r6, r0, #0
   11e38:	blt	11f28 <__snprintf_chk@plt+0x1150>
   11e3c:	mov	r2, sp
   11e40:	mov	r1, r6
   11e44:	mov	r0, #3
   11e48:	bl	10c88 <__fxstat@plt>
   11e4c:	cmp	r0, #0
   11e50:	blt	12014 <__snprintf_chk@plt+0x123c>
   11e54:	ldr	r7, [sp, #44]	; 0x2c
   11e58:	ldr	r4, [pc, #600]	; 120b8 <__snprintf_chk@plt+0x12e0>
   11e5c:	mov	r0, r7
   11e60:	bl	10c64 <malloc@plt>
   11e64:	cmp	r0, #0
   11e68:	str	r0, [r4, #8]
   11e6c:	beq	11fec <__snprintf_chk@plt+0x1214>
   11e70:	mov	r2, r7
   11e74:	mov	r1, r0
   11e78:	mov	r0, r6
   11e7c:	bl	10be0 <read@plt>
   11e80:	subs	r7, r0, #0
   11e84:	blt	1203c <__snprintf_chk@plt+0x1264>
   11e88:	mov	r0, r6
   11e8c:	bl	10dcc <close@plt>
   11e90:	ldr	r3, [sp, #44]	; 0x2c
   11e94:	cmp	r3, r7
   11e98:	bgt	12064 <__snprintf_chk@plt+0x128c>
   11e9c:	ldr	r3, [r4, #8]
   11ea0:	mov	r6, #0
   11ea4:	ldr	sl, [pc, #528]	; 120bc <__snprintf_chk@plt+0x12e4>
   11ea8:	ldrb	r3, [r3]
   11eac:	ldr	r9, [pc, #524]	; 120c0 <__snprintf_chk@plt+0x12e8>
   11eb0:	ldr	r8, [pc, #524]	; 120c4 <__snprintf_chk@plt+0x12ec>
   11eb4:	cmp	r3, #255	; 0xff
   11eb8:	moveq	r3, #1
   11ebc:	ldrne	r1, [r4, #16]
   11ec0:	mov	ip, r7
   11ec4:	str	r7, [r4, #20]
   11ec8:	moveq	r1, r3
   11ecc:	mov	r7, r6
   11ed0:	streq	r3, [r4, #16]
   11ed4:	cmp	r1, ip
   11ed8:	bcs	12084 <__snprintf_chk@plt+0x12ac>
   11edc:	ldr	r2, [r4, #8]
   11ee0:	ldrb	r0, [r2, r1]
   11ee4:	cmp	r0, #1
   11ee8:	beq	11f70 <__snprintf_chk@plt+0x1198>
   11eec:	cmp	r0, #2
   11ef0:	beq	11f48 <__snprintf_chk@plt+0x1170>
   11ef4:	ldr	r3, [pc, #460]	; 120c8 <__snprintf_chk@plt+0x12f0>
   11ef8:	mov	r2, #22
   11efc:	mov	r1, #1
   11f00:	ldr	r3, [r3]
   11f04:	ldr	r0, [pc, #448]	; 120cc <__snprintf_chk@plt+0x12f4>
   11f08:	bl	10c4c <fwrite@plt>
   11f0c:	bl	11b50 <__snprintf_chk@plt+0xd78>
   11f10:	ldr	r2, [sp, #92]	; 0x5c
   11f14:	ldr	r3, [r5]
   11f18:	cmp	r2, r3
   11f1c:	bne	120b0 <__snprintf_chk@plt+0x12d8>
   11f20:	add	sp, sp, #100	; 0x64
   11f24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f28:	ldr	r1, [pc, #408]	; 120c8 <__snprintf_chk@plt+0x12f0>
   11f2c:	mov	r3, r4
   11f30:	ldr	r2, [pc, #408]	; 120d0 <__snprintf_chk@plt+0x12f8>
   11f34:	ldr	r0, [r1]
   11f38:	mov	r1, #1
   11f3c:	bl	10d3c <__fprintf_chk@plt>
   11f40:	bl	11b50 <__snprintf_chk@plt+0xd78>
   11f44:	b	11f10 <__snprintf_chk@plt+0x1138>
   11f48:	add	r3, r2, r1
   11f4c:	ldrb	r2, [r3, #1]
   11f50:	ldrb	fp, [r3, #2]
   11f54:	cmp	r2, #14
   11f58:	bne	11fc4 <__snprintf_chk@plt+0x11ec>
   11f5c:	add	fp, fp, #3
   11f60:	add	r1, r1, fp
   11f64:	str	r1, [r4, #16]
   11f68:	add	r6, r6, #1
   11f6c:	b	11ed4 <__snprintf_chk@plt+0x10fc>
   11f70:	add	r2, r2, r1
   11f74:	ldrb	lr, [r2, #2]
   11f78:	ldrb	r3, [r2, #1]
   11f7c:	ldrb	fp, [r2, #3]
   11f80:	orr	r2, r3, lr, lsl #8
   11f84:	cmp	r2, sl
   11f88:	bne	11fa0 <__snprintf_chk@plt+0x11c8>
   11f8c:	add	fp, fp, #4
   11f90:	add	r1, r1, fp
   11f94:	str	r1, [r4, #16]
   11f98:	add	r7, r7, #1
   11f9c:	b	11ed4 <__snprintf_chk@plt+0x10fc>
   11fa0:	mov	r1, r9
   11fa4:	bl	10d30 <__printf_chk@plt>
   11fa8:	ldr	r1, [r4, #16]
   11fac:	add	fp, fp, #4
   11fb0:	add	r1, r1, fp
   11fb4:	ldr	ip, [r4, #20]
   11fb8:	str	r1, [r4, #16]
   11fbc:	add	r7, r7, #1
   11fc0:	b	11ed4 <__snprintf_chk@plt+0x10fc>
   11fc4:	mov	r1, r8
   11fc8:	mov	r0, #1
   11fcc:	bl	10d30 <__printf_chk@plt>
   11fd0:	ldr	r1, [r4, #16]
   11fd4:	add	fp, fp, #3
   11fd8:	add	r1, r1, fp
   11fdc:	ldr	ip, [r4, #20]
   11fe0:	str	r1, [r4, #16]
   11fe4:	add	r6, r6, #1
   11fe8:	b	11ed4 <__snprintf_chk@plt+0x10fc>
   11fec:	ldr	r3, [pc, #212]	; 120c8 <__snprintf_chk@plt+0x12f0>
   11ff0:	mov	r2, #35	; 0x23
   11ff4:	mov	r1, #1
   11ff8:	ldr	r3, [r3]
   11ffc:	ldr	r0, [pc, #208]	; 120d4 <__snprintf_chk@plt+0x12fc>
   12000:	bl	10c4c <fwrite@plt>
   12004:	mov	r0, r6
   12008:	bl	10dcc <close@plt>
   1200c:	bl	11b50 <__snprintf_chk@plt+0xd78>
   12010:	b	11f10 <__snprintf_chk@plt+0x1138>
   12014:	ldr	r3, [pc, #172]	; 120c8 <__snprintf_chk@plt+0x12f0>
   12018:	mov	r2, #28
   1201c:	mov	r1, #1
   12020:	ldr	r3, [r3]
   12024:	ldr	r0, [pc, #172]	; 120d8 <__snprintf_chk@plt+0x1300>
   12028:	bl	10c4c <fwrite@plt>
   1202c:	mov	r0, r6
   12030:	bl	10dcc <close@plt>
   12034:	bl	11b50 <__snprintf_chk@plt+0xd78>
   12038:	b	11f10 <__snprintf_chk@plt+0x1138>
   1203c:	ldr	r3, [pc, #132]	; 120c8 <__snprintf_chk@plt+0x12f0>
   12040:	mov	r2, #29
   12044:	mov	r1, #1
   12048:	ldr	r3, [r3]
   1204c:	ldr	r0, [pc, #136]	; 120dc <__snprintf_chk@plt+0x1304>
   12050:	bl	10c4c <fwrite@plt>
   12054:	mov	r0, r6
   12058:	bl	10dcc <close@plt>
   1205c:	bl	11b50 <__snprintf_chk@plt+0xd78>
   12060:	b	11f10 <__snprintf_chk@plt+0x1138>
   12064:	ldr	r3, [pc, #92]	; 120c8 <__snprintf_chk@plt+0x12f0>
   12068:	mov	r2, #36	; 0x24
   1206c:	mov	r1, #1
   12070:	ldr	r3, [r3]
   12074:	ldr	r0, [pc, #100]	; 120e0 <__snprintf_chk@plt+0x1308>
   12078:	bl	10c4c <fwrite@plt>
   1207c:	bl	11b50 <__snprintf_chk@plt+0xd78>
   12080:	b	11f10 <__snprintf_chk@plt+0x1138>
   12084:	mov	r3, r6
   12088:	mov	r2, r7
   1208c:	ldr	r1, [pc, #80]	; 120e4 <__snprintf_chk@plt+0x130c>
   12090:	mov	r0, #1
   12094:	bl	10d30 <__printf_chk@plt>
   12098:	ldr	r3, [r4, #8]
   1209c:	ldrb	r3, [r3]
   120a0:	cmp	r3, #255	; 0xff
   120a4:	moveq	r3, #1
   120a8:	streq	r3, [r4, #16]
   120ac:	b	11f10 <__snprintf_chk@plt+0x1138>
   120b0:	bl	10c28 <__stack_chk_fail@plt>
   120b4:	andeq	sl, r2, r8, lsr #28
   120b8:	andeq	fp, r2, r0, lsr #32
   120bc:	andeq	pc, r0, lr, lsl #25
   120c0:	andeq	r5, r1, ip, lsl r5
   120c4:	andeq	r5, r1, r8, lsr r5
   120c8:	andeq	fp, r2, r0, lsl r0
   120cc:	andeq	r5, r1, r4, asr r5
   120d0:	andeq	r5, r1, r4, ror r4
   120d4:			; <UNDEFINED> instruction: 0x000154b0
   120d8:	muleq	r1, r0, r4
   120dc:	ldrdeq	r5, [r1], -r4
   120e0:	strdeq	r5, [r1], -r4
   120e4:	andeq	r5, r1, ip, ror #10
   120e8:	push	{r4, r5, r6, r7, lr}
   120ec:	sub	sp, sp, #36	; 0x24
   120f0:	ldr	r5, [pc, #300]	; 12224 <__snprintf_chk@plt+0x144c>
   120f4:	ldrb	r3, [r0]
   120f8:	ldr	r2, [r5]
   120fc:	cmp	r3, #0
   12100:	str	r2, [sp, #28]
   12104:	bne	12200 <__snprintf_chk@plt+0x1428>
   12108:	ldr	r6, [pc, #280]	; 12228 <__snprintf_chk@plt+0x1450>
   1210c:	ldr	r7, [r6, #24]
   12110:	cmp	r7, #0
   12114:	beq	1214c <__snprintf_chk@plt+0x1374>
   12118:	ldr	r3, [pc, #268]	; 1222c <__snprintf_chk@plt+0x1454>
   1211c:	mov	r2, #33	; 0x21
   12120:	mov	r1, #1
   12124:	ldr	r3, [r3]
   12128:	ldr	r0, [pc, #256]	; 12230 <__snprintf_chk@plt+0x1458>
   1212c:	bl	10c4c <fwrite@plt>
   12130:	bl	13a20 <__snprintf_chk@plt+0x2c48>
   12134:	ldr	r2, [sp, #28]
   12138:	ldr	r3, [r5]
   1213c:	cmp	r2, r3
   12140:	bne	12220 <__snprintf_chk@plt+0x1448>
   12144:	add	sp, sp, #36	; 0x24
   12148:	pop	{r4, r5, r6, r7, pc}
   1214c:	mov	r4, r0
   12150:	ldr	r0, [pc, #220]	; 12234 <__snprintf_chk@plt+0x145c>
   12154:	bl	10c58 <puts@plt>
   12158:	ldrb	r0, [r4, #1]
   1215c:	ldrb	r1, [r4, #2]
   12160:	ldrb	r2, [r4, #3]
   12164:	ldrb	r3, [r4, #4]
   12168:	str	r0, [sp, #12]
   1216c:	str	r1, [sp, #8]
   12170:	str	r2, [sp, #4]
   12174:	str	r3, [sp]
   12178:	ldr	r1, [pc, #184]	; 12238 <__snprintf_chk@plt+0x1460>
   1217c:	ldrb	r3, [r4, #5]
   12180:	ldrb	r2, [r4, #6]
   12184:	mov	r0, #1
   12188:	bl	10d30 <__printf_chk@plt>
   1218c:	ldr	r0, [r4, #1]!
   12190:	ldrb	ip, [r6, #28]
   12194:	str	r0, [sp, #20]
   12198:	lsr	r1, r0, #16
   1219c:	ldrh	r2, [r4, #4]
   121a0:	lsr	r3, r0, #8
   121a4:	uxtb	r1, r1
   121a8:	lsr	r0, r0, #24
   121ac:	uxtb	r3, r3
   121b0:	strh	r2, [sp, #24]
   121b4:	strd	r0, [sp]
   121b8:	str	r3, [sp, #8]
   121bc:	ldrb	r2, [sp, #25]
   121c0:	ldrb	r3, [sp, #24]
   121c4:	str	ip, [sp, #12]
   121c8:	ldr	r1, [pc, #108]	; 1223c <__snprintf_chk@plt+0x1464>
   121cc:	mov	r0, #1
   121d0:	strb	ip, [sp, #20]
   121d4:	bl	10d30 <__printf_chk@plt>
   121d8:	ldr	r3, [pc, #96]	; 12240 <__snprintf_chk@plt+0x1468>
   121dc:	add	r2, sp, #20
   121e0:	str	r3, [sp]
   121e4:	str	r7, [sp, #8]
   121e8:	str	r7, [sp, #4]
   121ec:	ldr	r0, [r6]
   121f0:	mov	r3, #6
   121f4:	ldr	r1, [pc, #72]	; 12244 <__snprintf_chk@plt+0x146c>
   121f8:	bl	130cc <__snprintf_chk@plt+0x22f4>
   121fc:	b	12134 <__snprintf_chk@plt+0x135c>
   12200:	ldr	r1, [pc, #36]	; 1222c <__snprintf_chk@plt+0x1454>
   12204:	ldr	r2, [pc, #60]	; 12248 <__snprintf_chk@plt+0x1470>
   12208:	ldr	r0, [r1]
   1220c:	mov	r1, #1
   12210:	bl	10d3c <__fprintf_chk@plt>
   12214:	bl	13a20 <__snprintf_chk@plt+0x2c48>
   12218:	bl	11b50 <__snprintf_chk@plt+0xd78>
   1221c:	b	12134 <__snprintf_chk@plt+0x135c>
   12220:	bl	10c28 <__stack_chk_fail@plt>
   12224:	andeq	sl, r2, r8, lsr #28
   12228:	andeq	fp, r2, r0, lsr #32
   1222c:	andeq	fp, r2, r0, lsl r0
   12230:			; <UNDEFINED> instruction: 0x000155bc
   12234:	andeq	r5, r1, r0, ror #11
   12238:	strdeq	r5, [r1], -r4
   1223c:	andeq	r5, r1, r8, lsr #12
   12240:	andeq	r1, r1, r4, lsr #24
   12244:	andeq	pc, r0, r1, lsr ip	; <UNPREDICTABLE>
   12248:	muleq	r1, r8, r5
   1224c:	push	{r4, r5, r6, r7, r8, r9, lr}
   12250:	sub	sp, sp, #116	; 0x74
   12254:	ldr	r5, [pc, #512]	; 1245c <__snprintf_chk@plt+0x1684>
   12258:	ldrb	r6, [r0]
   1225c:	ldr	r3, [r5]
   12260:	cmp	r6, #0
   12264:	str	r3, [sp, #108]	; 0x6c
   12268:	bne	12438 <__snprintf_chk@plt+0x1660>
   1226c:	mov	r4, r0
   12270:	ldr	r0, [pc, #488]	; 12460 <__snprintf_chk@plt+0x1688>
   12274:	bl	10c58 <puts@plt>
   12278:	ldrb	r0, [r4, #1]
   1227c:	ldrb	r1, [r4, #2]
   12280:	ldrb	r2, [r4, #3]
   12284:	ldrb	r3, [r4, #4]
   12288:	str	r0, [sp, #12]
   1228c:	str	r1, [sp, #8]
   12290:	str	r2, [sp, #4]
   12294:	str	r3, [sp]
   12298:	ldr	r1, [pc, #452]	; 12464 <__snprintf_chk@plt+0x168c>
   1229c:	ldrb	r3, [r4, #5]
   122a0:	ldrb	r2, [r4, #6]
   122a4:	mov	r0, #1
   122a8:	bl	10d30 <__printf_chk@plt>
   122ac:	ldrb	r2, [r4, #54]	; 0x36
   122b0:	ldr	r1, [pc, #432]	; 12468 <__snprintf_chk@plt+0x1690>
   122b4:	mov	r0, #1
   122b8:	bl	10d30 <__printf_chk@plt>
   122bc:	ldrb	ip, [r4, #19]
   122c0:	ldrb	lr, [r4, #20]
   122c4:	ldrb	r0, [r4, #18]
   122c8:	ldrb	r1, [r4, #17]
   122cc:	ldrb	r2, [r4, #16]
   122d0:	ldrb	r3, [r4, #15]
   122d4:	str	ip, [sp, #16]
   122d8:	str	lr, [sp, #20]
   122dc:	str	r0, [sp, #12]
   122e0:	str	r1, [sp, #8]
   122e4:	str	r2, [sp, #4]
   122e8:	str	r3, [sp]
   122ec:	ldr	r1, [pc, #376]	; 1246c <__snprintf_chk@plt+0x1694>
   122f0:	ldrb	r3, [r4, #14]
   122f4:	ldrb	r2, [r4, #13]
   122f8:	mov	r0, #1
   122fc:	bl	10d30 <__printf_chk@plt>
   12300:	ldrb	r2, [r4, #21]
   12304:	ldr	r1, [pc, #356]	; 12470 <__snprintf_chk@plt+0x1698>
   12308:	mov	r0, #1
   1230c:	bl	10d30 <__printf_chk@plt>
   12310:	ldr	ip, [pc, #348]	; 12474 <__snprintf_chk@plt+0x169c>
   12314:	ldrb	r3, [ip, #30]
   12318:	cmp	r3, #0
   1231c:	bne	1233c <__snprintf_chk@plt+0x1564>
   12320:	bl	11b50 <__snprintf_chk@plt+0xd78>
   12324:	ldr	r2, [sp, #108]	; 0x6c
   12328:	ldr	r3, [r5]
   1232c:	cmp	r2, r3
   12330:	bne	12458 <__snprintf_chk@plt+0x1680>
   12334:	add	sp, sp, #116	; 0x74
   12338:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1233c:	mov	lr, r4
   12340:	mov	r1, r4
   12344:	ldr	r0, [lr, #1]!
   12348:	mov	r2, r4
   1234c:	str	r0, [sp, #28]
   12350:	ldr	r0, [r1, #13]!
   12354:	mov	r3, r4
   12358:	ldr	r8, [r2, #7]!
   1235c:	ldr	r7, [r3, #22]!
   12360:	ldr	r1, [r1, #4]
   12364:	ldrh	r9, [lr, #4]
   12368:	ldrh	lr, [r2, #4]
   1236c:	add	r2, sp, #40	; 0x28
   12370:	str	r8, [sp, #34]	; 0x22
   12374:	stmia	r2!, {r0, r1}
   12378:	ldr	r2, [r3, #4]
   1237c:	ldr	r0, [r3, #8]
   12380:	str	r2, [sp, #53]	; 0x35
   12384:	ldr	r2, [r3, #12]
   12388:	ldrb	r1, [r4, #21]
   1238c:	str	r2, [sp, #61]	; 0x3d
   12390:	ldr	r2, [r3, #20]
   12394:	ldrh	r8, [ip, #28]
   12398:	str	r7, [sp, #49]	; 0x31
   1239c:	str	r0, [sp, #57]	; 0x39
   123a0:	ldr	r7, [r3, #16]
   123a4:	ldr	r0, [r3, #24]
   123a8:	str	r2, [sp, #69]	; 0x45
   123ac:	ldr	r2, [r3, #28]
   123b0:	orr	r1, r1, #30
   123b4:	mov	r3, #7
   123b8:	strh	r9, [sp, #32]
   123bc:	str	r7, [sp, #65]	; 0x41
   123c0:	strh	lr, [sp, #38]	; 0x26
   123c4:	str	r0, [sp, #73]	; 0x49
   123c8:	strb	r1, [sp, #48]	; 0x30
   123cc:	strb	r8, [sp, #28]
   123d0:	strb	r3, [sp, #81]	; 0x51
   123d4:	str	r2, [sp, #77]	; 0x4d
   123d8:	ldr	r7, [r4, #55]!	; 0x37
   123dc:	ldr	r3, [pc, #148]	; 12478 <__snprintf_chk@plt+0x16a0>
   123e0:	str	r7, [sp, #82]	; 0x52
   123e4:	ldr	lr, [r4, #4]
   123e8:	ldr	r1, [r4, #8]
   123ec:	ldrh	r8, [r4, #24]
   123f0:	ldr	r9, [r4, #12]
   123f4:	str	lr, [sp, #86]	; 0x56
   123f8:	str	r6, [sp, #8]
   123fc:	str	r6, [sp, #4]
   12400:	ldr	r7, [r4, #16]
   12404:	ldr	lr, [r4, #20]
   12408:	ldr	r0, [ip]
   1240c:	str	r1, [sp, #90]	; 0x5a
   12410:	str	r3, [sp]
   12414:	add	r2, sp, #28
   12418:	mov	r3, #80	; 0x50
   1241c:	ldr	r1, [pc, #88]	; 1247c <__snprintf_chk@plt+0x16a4>
   12420:	str	r9, [sp, #94]	; 0x5e
   12424:	str	r7, [sp, #98]	; 0x62
   12428:	str	lr, [sp, #102]	; 0x66
   1242c:	strh	r8, [sp, #106]	; 0x6a
   12430:	bl	130cc <__snprintf_chk@plt+0x22f4>
   12434:	b	12324 <__snprintf_chk@plt+0x154c>
   12438:	ldr	r1, [pc, #64]	; 12480 <__snprintf_chk@plt+0x16a8>
   1243c:	mov	r3, r6
   12440:	ldr	r2, [pc, #60]	; 12484 <__snprintf_chk@plt+0x16ac>
   12444:	ldr	r0, [r1]
   12448:	mov	r1, #1
   1244c:	bl	10d3c <__fprintf_chk@plt>
   12450:	bl	11b50 <__snprintf_chk@plt+0xd78>
   12454:	b	12324 <__snprintf_chk@plt+0x154c>
   12458:	bl	10c28 <__stack_chk_fail@plt>
   1245c:	andeq	sl, r2, r8, lsr #28
   12460:	andeq	r5, r1, ip, ror r6
   12464:	andeq	r5, r1, ip, lsl #13
   12468:			; <UNDEFINED> instruction: 0x000156bc
   1246c:	ldrdeq	r5, [r1], -r0
   12470:	andeq	r5, r1, r0, lsr #14
   12474:	andeq	fp, r2, r0, lsr #32
   12478:	andeq	r1, r1, ip, asr ip
   1247c:	andeq	pc, r0, pc, lsr #24
   12480:	andeq	fp, r2, r0, lsl r0
   12484:	andeq	r5, r1, ip, asr r6
   12488:	push	{r4, lr}
   1248c:	sub	sp, sp, #24
   12490:	ldr	r4, [pc, #256]	; 12598 <__snprintf_chk@plt+0x17c0>
   12494:	ldrb	r3, [r0]
   12498:	ldr	r2, [r4]
   1249c:	cmp	r3, #0
   124a0:	str	r2, [sp, #20]
   124a4:	bne	1252c <__snprintf_chk@plt+0x1754>
   124a8:	ldr	r2, [pc, #236]	; 1259c <__snprintf_chk@plt+0x17c4>
   124ac:	ldrb	r1, [r2, #31]
   124b0:	cmp	r1, #0
   124b4:	bne	12574 <__snprintf_chk@plt+0x179c>
   124b8:	ldrb	r3, [r2, #32]
   124bc:	cmp	r3, #0
   124c0:	bne	124f0 <__snprintf_chk@plt+0x1718>
   124c4:	ldrb	r3, [r2, #30]
   124c8:	cmp	r3, #0
   124cc:	bne	124f0 <__snprintf_chk@plt+0x1718>
   124d0:	ldrb	ip, [r2, #14]
   124d4:	cmp	ip, #0
   124d8:	bne	1258c <__snprintf_chk@plt+0x17b4>
   124dc:	ldrb	r3, [r2, #33]	; 0x21
   124e0:	cmp	r3, #0
   124e4:	bne	12548 <__snprintf_chk@plt+0x1770>
   124e8:	bl	11b50 <__snprintf_chk@plt+0xd78>
   124ec:	b	12514 <__snprintf_chk@plt+0x173c>
   124f0:	ldr	r1, [pc, #168]	; 125a0 <__snprintf_chk@plt+0x17c8>
   124f4:	mov	r3, #0
   124f8:	ldr	r0, [r2]
   124fc:	str	r1, [sp]
   12500:	str	r3, [sp, #8]
   12504:	str	r3, [sp, #4]
   12508:	mov	r2, r3
   1250c:	ldr	r1, [pc, #144]	; 125a4 <__snprintf_chk@plt+0x17cc>
   12510:	bl	130cc <__snprintf_chk@plt+0x22f4>
   12514:	ldr	r2, [sp, #20]
   12518:	ldr	r3, [r4]
   1251c:	cmp	r2, r3
   12520:	bne	12594 <__snprintf_chk@plt+0x17bc>
   12524:	add	sp, sp, #24
   12528:	pop	{r4, pc}
   1252c:	ldr	r1, [pc, #116]	; 125a8 <__snprintf_chk@plt+0x17d0>
   12530:	ldr	r2, [pc, #116]	; 125ac <__snprintf_chk@plt+0x17d4>
   12534:	ldr	r0, [r1]
   12538:	mov	r1, #1
   1253c:	bl	10d3c <__fprintf_chk@plt>
   12540:	bl	13a20 <__snprintf_chk@plt+0x2c48>
   12544:	b	12514 <__snprintf_chk@plt+0x173c>
   12548:	str	ip, [sp, #8]
   1254c:	str	ip, [sp, #4]
   12550:	str	ip, [sp]
   12554:	mov	r3, #1
   12558:	ldr	r1, [pc, #80]	; 125b0 <__snprintf_chk@plt+0x17d8>
   1255c:	ldr	r0, [r2]
   12560:	add	r2, sp, #16
   12564:	strb	ip, [sp, #16]
   12568:	bl	130cc <__snprintf_chk@plt+0x22f4>
   1256c:	bl	11b50 <__snprintf_chk@plt+0xd78>
   12570:	b	12514 <__snprintf_chk@plt+0x173c>
   12574:	mov	r2, r3
   12578:	mov	r1, #1
   1257c:	add	r0, sp, #16
   12580:	strb	r3, [sp, #16]
   12584:	bl	11cac <__snprintf_chk@plt+0xed4>
   12588:	b	12514 <__snprintf_chk@plt+0x173c>
   1258c:	bl	117d0 <__snprintf_chk@plt+0x9f8>
   12590:	b	12514 <__snprintf_chk@plt+0x173c>
   12594:	bl	10c28 <__stack_chk_fail@plt>
   12598:	andeq	sl, r2, r8, lsr #28
   1259c:	andeq	fp, r2, r0, lsr #32
   125a0:	andeq	r2, r1, ip, asr #4
   125a4:	andeq	pc, r0, r0, lsr ip	; <UNPREDICTABLE>
   125a8:	andeq	fp, r2, r0, lsl r0
   125ac:	andeq	r5, r1, r8, lsr r7
   125b0:	andeq	pc, r0, sp, asr #24
   125b4:	push	{r4, r5, r6, r7, lr}
   125b8:	sub	sp, sp, #4096	; 0x1000
   125bc:	ldr	r5, [pc, #692]	; 12878 <__snprintf_chk@plt+0x1aa0>
   125c0:	ldr	r6, [pc, #692]	; 1287c <__snprintf_chk@plt+0x1aa4>
   125c4:	sub	sp, sp, #60	; 0x3c
   125c8:	ldrb	r2, [r5, #31]
   125cc:	ldr	r3, [r6]
   125d0:	mov	r4, r0
   125d4:	cmp	r2, #0
   125d8:	add	r2, sp, #4096	; 0x1000
   125dc:	add	r2, r2, #52	; 0x34
   125e0:	str	r3, [r2]
   125e4:	beq	12608 <__snprintf_chk@plt+0x1830>
   125e8:	ldr	r2, [r5, #36]	; 0x24
   125ec:	cmp	r2, #0
   125f0:	beq	1279c <__snprintf_chk@plt+0x19c4>
   125f4:	ldr	r1, [pc, #644]	; 12880 <__snprintf_chk@plt+0x1aa8>
   125f8:	mov	r0, #1
   125fc:	bl	10d30 <__printf_chk@plt>
   12600:	ldr	r0, [r5, #36]	; 0x24
   12604:	bl	11e14 <__snprintf_chk@plt+0x103c>
   12608:	ldrb	r3, [r5, #12]
   1260c:	cmp	r3, #0
   12610:	bne	12768 <__snprintf_chk@plt+0x1990>
   12614:	ldrb	r2, [r5, #30]
   12618:	cmp	r2, #0
   1261c:	bne	12744 <__snprintf_chk@plt+0x196c>
   12620:	ldr	r0, [pc, #604]	; 12884 <__snprintf_chk@plt+0x1aac>
   12624:	bl	10c58 <puts@plt>
   12628:	ldrb	r2, [r4, #1]
   1262c:	ldr	r1, [pc, #596]	; 12888 <__snprintf_chk@plt+0x1ab0>
   12630:	mov	r0, #1
   12634:	bl	10d30 <__printf_chk@plt>
   12638:	ldrb	r3, [r4, #2]
   1263c:	cmp	r3, #6
   12640:	beq	12834 <__snprintf_chk@plt+0x1a5c>
   12644:	ldr	r1, [pc, #576]	; 1288c <__snprintf_chk@plt+0x1ab4>
   12648:	ldr	r2, [pc, #576]	; 12890 <__snprintf_chk@plt+0x1ab8>
   1264c:	ldrb	r0, [r1, #8]!
   12650:	cmp	r0, r3
   12654:	beq	12668 <__snprintf_chk@plt+0x1890>
   12658:	ldr	r2, [r1, #12]
   1265c:	cmp	r2, #0
   12660:	bne	1264c <__snprintf_chk@plt+0x1874>
   12664:	ldr	r2, [pc, #552]	; 12894 <__snprintf_chk@plt+0x1abc>
   12668:	ldr	r1, [pc, #552]	; 12898 <__snprintf_chk@plt+0x1ac0>
   1266c:	mov	r0, #1
   12670:	bl	10d30 <__printf_chk@plt>
   12674:	ldrb	r2, [r4, #3]
   12678:	ldr	r1, [pc, #540]	; 1289c <__snprintf_chk@plt+0x1ac4>
   1267c:	mov	r0, #1
   12680:	and	r3, r2, #15
   12684:	lsr	r2, r2, #4
   12688:	bl	10d30 <__printf_chk@plt>
   1268c:	ldrb	r3, [r4, #4]
   12690:	cmp	r3, #1
   12694:	beq	12864 <__snprintf_chk@plt+0x1a8c>
   12698:	cmp	r3, #6
   1269c:	beq	1286c <__snprintf_chk@plt+0x1a94>
   126a0:	ldr	r1, [pc, #504]	; 128a0 <__snprintf_chk@plt+0x1ac8>
   126a4:	cmp	r3, #35	; 0x23
   126a8:	ldr	r2, [pc, #484]	; 12894 <__snprintf_chk@plt+0x1abc>
   126ac:	moveq	r2, r1
   126b0:	ldr	r1, [pc, #492]	; 128a4 <__snprintf_chk@plt+0x1acc>
   126b4:	mov	r0, #1
   126b8:	bl	10d30 <__printf_chk@plt>
   126bc:	ldrb	r2, [r4, #5]
   126c0:	ldr	r1, [pc, #480]	; 128a8 <__snprintf_chk@plt+0x1ad0>
   126c4:	mov	r0, #1
   126c8:	and	r3, r2, #15
   126cc:	lsr	r2, r2, #4
   126d0:	bl	10d30 <__printf_chk@plt>
   126d4:	ldrb	r1, [r4, #8]
   126d8:	ldrb	r3, [r4, #7]
   126dc:	ldrb	r2, [r4, #6]
   126e0:	add	r1, r1, #2000	; 0x7d0
   126e4:	str	r1, [sp]
   126e8:	mov	r0, #1
   126ec:	ldr	r1, [pc, #440]	; 128ac <__snprintf_chk@plt+0x1ad4>
   126f0:	bl	10d30 <__printf_chk@plt>
   126f4:	ldrb	r2, [r4, #9]
   126f8:	ldr	r1, [pc, #432]	; 128b0 <__snprintf_chk@plt+0x1ad8>
   126fc:	mov	r0, #1
   12700:	bl	10d30 <__printf_chk@plt>
   12704:	ldrb	r3, [r4, #2]
   12708:	cmp	r3, #11
   1270c:	bne	1271c <__snprintf_chk@plt+0x1944>
   12710:	ldrb	r3, [r4, #4]
   12714:	cmp	r3, #6
   12718:	beq	1283c <__snprintf_chk@plt+0x1a64>
   1271c:	bl	13a20 <__snprintf_chk@plt+0x2c48>
   12720:	add	r3, sp, #4096	; 0x1000
   12724:	add	r3, r3, #52	; 0x34
   12728:	ldr	r2, [r3]
   1272c:	ldr	r3, [r6]
   12730:	cmp	r2, r3
   12734:	bne	12874 <__snprintf_chk@plt+0x1a9c>
   12738:	add	sp, sp, #4096	; 0x1000
   1273c:	add	sp, sp, #60	; 0x3c
   12740:	pop	{r4, r5, r6, r7, pc}
   12744:	ldr	r2, [pc, #360]	; 128b4 <__snprintf_chk@plt+0x1adc>
   12748:	str	r3, [sp, #8]
   1274c:	str	r2, [sp]
   12750:	str	r3, [sp, #4]
   12754:	ldr	r0, [r5]
   12758:	mov	r2, r3
   1275c:	ldr	r1, [pc, #340]	; 128b8 <__snprintf_chk@plt+0x1ae0>
   12760:	bl	130cc <__snprintf_chk@plt+0x22f4>
   12764:	b	12720 <__snprintf_chk@plt+0x1948>
   12768:	add	r2, sp, #56	; 0x38
   1276c:	ldr	r1, [pc, #328]	; 128bc <__snprintf_chk@plt+0x1ae4>
   12770:	mov	r3, #0
   12774:	mov	ip, #1
   12778:	strh	ip, [r2, #-8]!
   1277c:	ldr	r0, [r5]
   12780:	str	r1, [sp]
   12784:	str	r3, [sp, #8]
   12788:	str	r3, [sp, #4]
   1278c:	ldr	r1, [pc, #300]	; 128c0 <__snprintf_chk@plt+0x1ae8>
   12790:	mov	r3, #2
   12794:	bl	130cc <__snprintf_chk@plt+0x22f4>
   12798:	b	12720 <__snprintf_chk@plt+0x1948>
   1279c:	ldrb	ip, [r0, #8]
   127a0:	ldrb	r7, [r0, #7]
   127a4:	ldrb	r1, [r4, #5]
   127a8:	ldrb	r2, [r4, #4]
   127ac:	ldrb	r0, [r0, #6]
   127b0:	ldrb	r3, [r4, #2]
   127b4:	ldrb	lr, [r4, #3]
   127b8:	str	ip, [sp, #40]	; 0x28
   127bc:	ldrb	ip, [r4, #1]
   127c0:	str	r0, [sp, #32]
   127c4:	str	r1, [sp, #28]
   127c8:	str	r2, [sp, #24]
   127cc:	ldr	r0, [pc, #240]	; 128c4 <__snprintf_chk@plt+0x1aec>
   127d0:	ldr	r1, [pc, #240]	; 128c8 <__snprintf_chk@plt+0x1af0>
   127d4:	ldr	r2, [pc, #240]	; 128cc <__snprintf_chk@plt+0x1af4>
   127d8:	str	r3, [sp, #16]
   127dc:	mov	r3, #4096	; 0x1000
   127e0:	str	lr, [sp, #20]
   127e4:	str	ip, [sp, #12]
   127e8:	str	r0, [sp, #8]
   127ec:	str	r1, [sp, #4]
   127f0:	str	r2, [sp]
   127f4:	mov	r1, r3
   127f8:	str	r7, [sp, #36]	; 0x24
   127fc:	add	r0, sp, #52	; 0x34
   12800:	mov	r2, #1
   12804:	bl	10dd8 <__snprintf_chk@plt>
   12808:	add	r2, sp, #52	; 0x34
   1280c:	ldr	r1, [pc, #108]	; 12880 <__snprintf_chk@plt+0x1aa8>
   12810:	mov	r0, #1
   12814:	bl	10d30 <__printf_chk@plt>
   12818:	ldrb	r2, [r4, #9]
   1281c:	ldr	r1, [pc, #172]	; 128d0 <__snprintf_chk@plt+0x1af8>
   12820:	mov	r0, #1
   12824:	bl	10d30 <__printf_chk@plt>
   12828:	add	r0, sp, #52	; 0x34
   1282c:	bl	11e14 <__snprintf_chk@plt+0x103c>
   12830:	b	12608 <__snprintf_chk@plt+0x1830>
   12834:	ldr	r2, [pc, #152]	; 128d4 <__snprintf_chk@plt+0x1afc>
   12838:	b	12668 <__snprintf_chk@plt+0x1890>
   1283c:	ldr	r2, [pc, #148]	; 128d8 <__snprintf_chk@plt+0x1b00>
   12840:	mov	r3, #0
   12844:	str	r2, [sp]
   12848:	ldr	r0, [r5]
   1284c:	str	r3, [sp, #8]
   12850:	str	r3, [sp, #4]
   12854:	mov	r2, r3
   12858:	ldr	r1, [pc, #124]	; 128dc <__snprintf_chk@plt+0x1b04>
   1285c:	bl	130cc <__snprintf_chk@plt+0x22f4>
   12860:	b	12720 <__snprintf_chk@plt+0x1948>
   12864:	ldr	r2, [pc, #116]	; 128e0 <__snprintf_chk@plt+0x1b08>
   12868:	b	126b0 <__snprintf_chk@plt+0x18d8>
   1286c:	ldr	r2, [pc, #112]	; 128e4 <__snprintf_chk@plt+0x1b0c>
   12870:	b	126b0 <__snprintf_chk@plt+0x18d8>
   12874:	bl	10c28 <__stack_chk_fail@plt>
   12878:	andeq	fp, r2, r0, lsr #32
   1287c:	andeq	sl, r2, r8, lsr #28
   12880:	andeq	r5, r1, ip, asr #15
   12884:	andeq	r5, r1, r8, lsr r8
   12888:	andeq	r5, r1, r8, asr r8
   1288c:	andeq	r4, r1, r0, ror #29
   12890:	andeq	r5, r1, r4, ror #14
   12894:	andeq	r5, r1, r4, lsl #15
   12898:	andeq	r5, r1, r0, ror r8
   1289c:	muleq	r1, r0, r8
   128a0:	andeq	r5, r1, r0, lsr #15
   128a4:	andeq	r5, r1, ip, lsr #17
   128a8:	andeq	r5, r1, ip, asr #17
   128ac:	andeq	r5, r1, r8, ror #17
   128b0:	andeq	r5, r1, ip, lsl #18
   128b4:	andeq	r2, r1, r8, ror #1
   128b8:	andeq	r1, r0, r9
   128bc:	andeq	r2, r1, r8, lsl #9
   128c0:	andeq	pc, r0, r1, lsl ip	; <UNPREDICTABLE>
   128c4:	ldrdeq	r5, [r1], -ip
   128c8:	andeq	r5, r1, r4, ror #15
   128cc:	strdeq	r5, [r1], -r4
   128d0:	andeq	r5, r1, r4, lsr #16
   128d4:	andeq	r5, r1, r4, ror r7
   128d8:	andeq	r1, r1, r8, asr #17
   128dc:	andeq	pc, r0, sp, lsl #24
   128e0:			; <UNDEFINED> instruction: 0x000157b8
   128e4:	muleq	r1, r0, r7
   128e8:	push	{r4, lr}
   128ec:	sub	sp, sp, #32
   128f0:	ldr	r4, [pc, #188]	; 129b4 <__snprintf_chk@plt+0x1bdc>
   128f4:	ldrb	ip, [r0]
   128f8:	ldr	r3, [r4]
   128fc:	cmp	ip, #0
   12900:	str	r3, [sp, #28]
   12904:	bne	1295c <__snprintf_chk@plt+0x1b84>
   12908:	cmp	r1, #10
   1290c:	bne	1293c <__snprintf_chk@plt+0x1b64>
   12910:	ldr	r3, [pc, #160]	; 129b8 <__snprintf_chk@plt+0x1be0>
   12914:	ldrb	r2, [r3, #40]	; 0x28
   12918:	cmp	r2, #0
   1291c:	bne	1297c <__snprintf_chk@plt+0x1ba4>
   12920:	bl	125b4 <__snprintf_chk@plt+0x17dc>
   12924:	ldr	r2, [sp, #28]
   12928:	ldr	r3, [r4]
   1292c:	cmp	r2, r3
   12930:	bne	129b0 <__snprintf_chk@plt+0x1bd8>
   12934:	add	sp, sp, #32
   12938:	pop	{r4, pc}
   1293c:	ldr	r3, [pc, #120]	; 129bc <__snprintf_chk@plt+0x1be4>
   12940:	mov	r2, #40	; 0x28
   12944:	mov	r1, #1
   12948:	ldr	r3, [r3]
   1294c:	ldr	r0, [pc, #108]	; 129c0 <__snprintf_chk@plt+0x1be8>
   12950:	bl	10c4c <fwrite@plt>
   12954:	bl	13a20 <__snprintf_chk@plt+0x2c48>
   12958:	b	12924 <__snprintf_chk@plt+0x1b4c>
   1295c:	ldr	r1, [pc, #88]	; 129bc <__snprintf_chk@plt+0x1be4>
   12960:	mov	r3, ip
   12964:	ldr	r2, [pc, #88]	; 129c4 <__snprintf_chk@plt+0x1bec>
   12968:	ldr	r0, [r1]
   1296c:	mov	r1, #1
   12970:	bl	10d3c <__fprintf_chk@plt>
   12974:	bl	13a20 <__snprintf_chk@plt+0x2c48>
   12978:	b	12924 <__snprintf_chk@plt+0x1b4c>
   1297c:	ldr	r2, [pc, #68]	; 129c8 <__snprintf_chk@plt+0x1bf0>
   12980:	ldr	lr, [pc, #68]	; 129cc <__snprintf_chk@plt+0x1bf4>
   12984:	str	ip, [sp, #8]
   12988:	str	ip, [sp, #4]
   1298c:	ldr	r1, [pc, #60]	; 129d0 <__snprintf_chk@plt+0x1bf8>
   12990:	ldr	r0, [r3]
   12994:	str	r2, [sp]
   12998:	mov	r3, #8
   1299c:	add	r2, sp, #20
   129a0:	str	ip, [sp, #24]
   129a4:	str	lr, [sp, #20]
   129a8:	bl	130cc <__snprintf_chk@plt+0x22f4>
   129ac:	b	12924 <__snprintf_chk@plt+0x1b4c>
   129b0:	bl	10c28 <__stack_chk_fail@plt>
   129b4:	andeq	sl, r2, r8, lsr #28
   129b8:	andeq	fp, r2, r0, lsr #32
   129bc:	andeq	fp, r2, r0, lsl r0
   129c0:	andeq	r5, r1, ip, asr #18
   129c4:	andeq	r5, r1, r8, lsr #18
   129c8:	andeq	r1, r1, r0, lsl #22
   129cc:	andeq	r0, r1, r1
   129d0:	andeq	pc, r0, r1, lsl #24
   129d4:	ldrh	r0, [r0, #4]
   129d8:	uxth	r1, r1
   129dc:	sub	r0, r1, r0
   129e0:	clz	r0, r0
   129e4:	lsr	r0, r0, #5
   129e8:	bx	lr
   129ec:	ldr	r0, [r0]
   129f0:	sub	r0, r1, r0
   129f4:	clz	r0, r0
   129f8:	lsr	r0, r0, #5
   129fc:	bx	lr
   12a00:	ldr	r0, [r0]
   12a04:	sub	r0, r1, r0
   12a08:	clz	r0, r0
   12a0c:	lsr	r0, r0, #5
   12a10:	bx	lr
   12a14:	ldr	r3, [r0, #20]
   12a18:	push	{r4, lr}
   12a1c:	cmp	r3, #0
   12a20:	mov	r4, r0
   12a24:	beq	12a30 <__snprintf_chk@plt+0x1c58>
   12a28:	ldr	r0, [r0, #24]
   12a2c:	blx	r3
   12a30:	ldr	r0, [r4, #8]
   12a34:	bl	10bf8 <free@plt>
   12a38:	mov	r0, r4
   12a3c:	pop	{r4, lr}
   12a40:	b	10bf8 <free@plt>
   12a44:	ldr	r3, [r0, #12]
   12a48:	push	{r4, lr}
   12a4c:	cmp	r3, #0
   12a50:	mov	r4, r0
   12a54:	beq	12a60 <__snprintf_chk@plt+0x1c88>
   12a58:	ldr	r0, [r0, #16]
   12a5c:	blx	r3
   12a60:	mov	r0, r4
   12a64:	pop	{r4, lr}
   12a68:	b	10bf8 <free@plt>
   12a6c:	ldr	r3, [pc, #148]	; 12b08 <__snprintf_chk@plt+0x1d30>
   12a70:	ldr	r2, [pc, #148]	; 12b0c <__snprintf_chk@plt+0x1d34>
   12a74:	add	r3, pc, r3
   12a78:	push	{r4, r5, r6, r7, lr}
   12a7c:	sub	sp, sp, #20
   12a80:	ldr	r4, [r3, r2]
   12a84:	mov	r7, r0
   12a88:	mov	r6, r1
   12a8c:	ldr	ip, [r4]
   12a90:	mov	r2, #1
   12a94:	ldr	r1, [pc, #116]	; 12b10 <__snprintf_chk@plt+0x1d38>
   12a98:	mov	r0, #31
   12a9c:	str	ip, [sp, #12]
   12aa0:	bl	10d90 <socket@plt>
   12aa4:	subs	r5, r0, #0
   12aa8:	blt	12aec <__snprintf_chk@plt+0x1d14>
   12aac:	mov	r3, #31
   12ab0:	mov	r2, #6
   12ab4:	add	r1, sp, #4
   12ab8:	strh	r7, [sp, #6]
   12abc:	strh	r6, [sp, #8]
   12ac0:	strh	r3, [sp, #4]
   12ac4:	bl	10d0c <bind@plt>
   12ac8:	cmp	r0, #0
   12acc:	blt	12af4 <__snprintf_chk@plt+0x1d1c>
   12ad0:	ldr	r2, [sp, #12]
   12ad4:	ldr	r3, [r4]
   12ad8:	mov	r0, r5
   12adc:	cmp	r2, r3
   12ae0:	bne	12b04 <__snprintf_chk@plt+0x1d2c>
   12ae4:	add	sp, sp, #20
   12ae8:	pop	{r4, r5, r6, r7, pc}
   12aec:	mvn	r5, #0
   12af0:	b	12ad0 <__snprintf_chk@plt+0x1cf8>
   12af4:	mov	r0, r5
   12af8:	bl	10dcc <close@plt>
   12afc:	mvn	r5, #0
   12b00:	b	12ad0 <__snprintf_chk@plt+0x1cf8>
   12b04:	bl	10c28 <__stack_chk_fail@plt>
   12b08:			; <UNDEFINED> instruction: 0x000184b8
   12b0c:	andeq	r0, r0, r0, asr #1
   12b10:	andeq	r0, r8, r3, lsl #16
   12b14:	mov	r3, r1
   12b18:	ldrb	r1, [r0, #4]
   12b1c:	ldrb	r2, [r3]
   12b20:	cmp	r1, r2
   12b24:	bxne	lr
   12b28:	push	{lr}		; (str lr, [sp, #-4]!)
   12b2c:	ldr	lr, [r0, #8]
   12b30:	ldr	r2, [r0, #16]
   12b34:	ldrb	r1, [r3, #1]
   12b38:	add	r0, r3, #2
   12b3c:	mov	r3, lr
   12b40:	pop	{lr}		; (ldr lr, [sp], #4)
   12b44:	bx	r3
   12b48:	ldrb	r3, [r0, #9]
   12b4c:	cmp	r3, #0
   12b50:	bxne	lr
   12b54:	ldrb	r3, [r0, #10]
   12b58:	cmp	r3, #0
   12b5c:	bxeq	lr
   12b60:	push	{r4, lr}
   12b64:	mov	r4, r0
   12b68:	ldr	r0, [r0, #20]
   12b6c:	bl	14778 <__snprintf_chk@plt+0x39a0>
   12b70:	subs	r3, r0, #0
   12b74:	popne	{r4, pc}
   12b78:	ldr	r1, [pc, #28]	; 12b9c <__snprintf_chk@plt+0x1dc4>
   12b7c:	mov	r2, r4
   12b80:	add	r1, pc, r1
   12b84:	ldr	r0, [r4, #4]
   12b88:	bl	13774 <__snprintf_chk@plt+0x299c>
   12b8c:	cmp	r0, #0
   12b90:	movne	r3, #1
   12b94:	strbne	r3, [r4, #9]
   12b98:	pop	{r4, pc}
   12b9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12ba0:	cmp	r1, #0
   12ba4:	push	{r4, r5, r6, r7, r8, lr}
   12ba8:	mov	r4, r0
   12bac:	bne	12bbc <__snprintf_chk@plt+0x1de4>
   12bb0:	mov	r0, r4
   12bb4:	pop	{r4, r5, r6, r7, r8, lr}
   12bb8:	b	12b48 <__snprintf_chk@plt+0x1d70>
   12bbc:	mov	r6, r2
   12bc0:	mov	r2, r1
   12bc4:	ldr	r1, [pc, #68]	; 12c10 <__snprintf_chk@plt+0x1e38>
   12bc8:	ldr	r0, [r0, #24]
   12bcc:	add	r1, pc, r1
   12bd0:	mov	r7, r3
   12bd4:	bl	145c0 <__snprintf_chk@plt+0x37e8>
   12bd8:	subs	r5, r0, #0
   12bdc:	popeq	{r4, r5, r6, r7, r8, pc}
   12be0:	ldr	r3, [r5, #16]
   12be4:	cmp	r3, #0
   12be8:	beq	12bfc <__snprintf_chk@plt+0x1e24>
   12bec:	uxtb	r1, r7
   12bf0:	mov	r0, r6
   12bf4:	ldr	r2, [r5, #24]
   12bf8:	blx	r3
   12bfc:	mov	r0, r5
   12c00:	bl	12a14 <__snprintf_chk@plt+0x1c3c>
   12c04:	mov	r0, r4
   12c08:	pop	{r4, r5, r6, r7, r8, lr}
   12c0c:	b	12b48 <__snprintf_chk@plt+0x1d70>
   12c10:			; <UNDEFINED> instruction: 0xfffffe00
   12c14:	ldr	r3, [pc, #304]	; 12d4c <__snprintf_chk@plt+0x1f74>
   12c18:	ldr	r2, [pc, #304]	; 12d50 <__snprintf_chk@plt+0x1f78>
   12c1c:	add	r3, pc, r3
   12c20:	push	{r4, r5, r6, lr}
   12c24:	sub	sp, sp, #520	; 0x208
   12c28:	ldr	r4, [r3, r2]
   12c2c:	ldr	r0, [r1, #4]
   12c30:	mov	r5, r1
   12c34:	ldr	r3, [r4]
   12c38:	str	r3, [sp, #516]	; 0x204
   12c3c:	bl	136c8 <__snprintf_chk@plt+0x28f0>
   12c40:	cmp	r0, #0
   12c44:	blt	12c54 <__snprintf_chk@plt+0x1e7c>
   12c48:	ldrb	r3, [r5, #8]
   12c4c:	cmp	r3, #0
   12c50:	beq	12c70 <__snprintf_chk@plt+0x1e98>
   12c54:	mov	r0, #0
   12c58:	ldr	r2, [sp, #516]	; 0x204
   12c5c:	ldr	r3, [r4]
   12c60:	cmp	r2, r3
   12c64:	bne	12d48 <__snprintf_chk@plt+0x1f70>
   12c68:	add	sp, sp, #520	; 0x208
   12c6c:	pop	{r4, r5, r6, pc}
   12c70:	add	r6, sp, #4
   12c74:	mov	r1, r6
   12c78:	mov	r2, #512	; 0x200
   12c7c:	bl	10be0 <read@plt>
   12c80:	cmp	r0, #0
   12c84:	blt	12c54 <__snprintf_chk@plt+0x1e7c>
   12c88:	beq	12c98 <__snprintf_chk@plt+0x1ec0>
   12c8c:	ldrb	r3, [sp, #4]
   12c90:	cmp	r3, #4
   12c94:	beq	12ca0 <__snprintf_chk@plt+0x1ec8>
   12c98:	mov	r0, #1
   12c9c:	b	12c58 <__snprintf_chk@plt+0x1e80>
   12ca0:	cmp	r0, #2
   12ca4:	ble	12c98 <__snprintf_chk@plt+0x1ec0>
   12ca8:	ldrb	r2, [sp, #6]
   12cac:	sub	r3, r0, #3
   12cb0:	cmp	r3, r2
   12cb4:	bne	12c98 <__snprintf_chk@plt+0x1ec0>
   12cb8:	ldrb	r2, [sp, #5]
   12cbc:	cmp	r2, #14
   12cc0:	beq	12ce8 <__snprintf_chk@plt+0x1f10>
   12cc4:	cmp	r2, #15
   12cc8:	beq	12d14 <__snprintf_chk@plt+0x1f3c>
   12ccc:	ldr	r1, [pc, #128]	; 12d54 <__snprintf_chk@plt+0x1f7c>
   12cd0:	ldr	r0, [r5, #28]
   12cd4:	add	r2, r6, #1
   12cd8:	add	r1, pc, r1
   12cdc:	bl	14430 <__snprintf_chk@plt+0x3658>
   12ce0:	mov	r0, #1
   12ce4:	b	12c58 <__snprintf_chk@plt+0x1e80>
   12ce8:	cmp	r3, #2
   12cec:	bls	12c98 <__snprintf_chk@plt+0x1ec0>
   12cf0:	ldrb	r2, [sp, #7]
   12cf4:	sub	r3, r0, #6
   12cf8:	ldrh	r1, [r6, #4]
   12cfc:	mov	r0, r5
   12d00:	strb	r2, [r5, #10]
   12d04:	add	r2, r6, #6
   12d08:	bl	12ba0 <__snprintf_chk@plt+0x1dc8>
   12d0c:	mov	r0, #1
   12d10:	b	12c58 <__snprintf_chk@plt+0x1e80>
   12d14:	cmp	r3, #3
   12d18:	bls	12c98 <__snprintf_chk@plt+0x1ec0>
   12d1c:	ldr	r1, [r6, #4]
   12d20:	ldrb	r3, [sp, #8]
   12d24:	mov	r0, r5
   12d28:	lsr	r1, r1, #8
   12d2c:	strb	r3, [r5, #10]
   12d30:	add	r2, r6, #3
   12d34:	uxth	r1, r1
   12d38:	mov	r3, #1
   12d3c:	bl	12ba0 <__snprintf_chk@plt+0x1dc8>
   12d40:	mov	r0, #1
   12d44:	b	12c58 <__snprintf_chk@plt+0x1e80>
   12d48:	bl	10c28 <__stack_chk_fail@plt>
   12d4c:	andeq	r8, r1, r0, lsl r3
   12d50:	andeq	r0, r0, r0, asr #1
   12d54:			; <UNDEFINED> instruction: 0xfffffe34
   12d58:	ldr	r3, [pc, #204]	; 12e2c <__snprintf_chk@plt+0x2054>
   12d5c:	ldr	r2, [pc, #204]	; 12e30 <__snprintf_chk@plt+0x2058>
   12d60:	add	r3, pc, r3
   12d64:	push	{r4, r5, r6, lr}
   12d68:	sub	sp, sp, #40	; 0x28
   12d6c:	ldr	r6, [r3, r2]
   12d70:	ldr	r0, [r1, #20]
   12d74:	mov	r4, r1
   12d78:	ldr	r3, [r6]
   12d7c:	str	r3, [sp, #36]	; 0x24
   12d80:	bl	143b0 <__snprintf_chk@plt+0x35d8>
   12d84:	subs	r5, r0, #0
   12d88:	beq	12e08 <__snprintf_chk@plt+0x2030>
   12d8c:	ldrb	r2, [r4, #10]
   12d90:	mov	r3, #1
   12d94:	strb	r3, [sp, #7]
   12d98:	cmp	r2, #0
   12d9c:	ldr	ip, [r5, #8]
   12da0:	ldrh	r2, [r5, #4]
   12da4:	ldrb	r1, [r5, #12]
   12da8:	ldr	r0, [r4, #4]
   12dac:	beq	12dfc <__snprintf_chk@plt+0x2024>
   12db0:	cmp	r1, #0
   12db4:	strh	r2, [sp, #8]
   12db8:	str	r3, [sp, #16]
   12dbc:	mov	r2, #3
   12dc0:	add	r3, sp, #7
   12dc4:	strne	r1, [sp, #32]
   12dc8:	strb	r1, [sp, #10]
   12dcc:	str	r3, [sp, #12]
   12dd0:	str	r2, [sp, #24]
   12dd4:	add	r3, sp, #8
   12dd8:	moveq	r2, #2
   12ddc:	add	r1, sp, #12
   12de0:	str	r3, [sp, #20]
   12de4:	strne	ip, [sp, #28]
   12de8:	bl	1388c <__snprintf_chk@plt+0x2ab4>
   12dec:	cmp	r0, #0
   12df0:	ldrbge	r3, [r4, #10]
   12df4:	subge	r3, r3, #1
   12df8:	strbge	r3, [r4, #10]
   12dfc:	mov	r1, r5
   12e00:	ldr	r0, [r4, #24]
   12e04:	bl	14294 <__snprintf_chk@plt+0x34bc>
   12e08:	ldr	r2, [sp, #36]	; 0x24
   12e0c:	ldr	r3, [r6]
   12e10:	mov	r0, #0
   12e14:	cmp	r2, r3
   12e18:	strb	r0, [r4, #9]
   12e1c:	bne	12e28 <__snprintf_chk@plt+0x2050>
   12e20:	add	sp, sp, #40	; 0x28
   12e24:	pop	{r4, r5, r6, pc}
   12e28:	bl	10c28 <__stack_chk_fail@plt>
   12e2c:	andeq	r8, r1, ip, asr #3
   12e30:	andeq	r0, r0, r0, asr #1
   12e34:	cmp	r0, #0
   12e38:	bxeq	lr
   12e3c:	mcr	15, 0, r0, cr7, cr10, {5}
   12e40:	ldrex	r3, [r0]
   12e44:	add	r3, r3, #1
   12e48:	strex	r2, r3, [r0]
   12e4c:	cmp	r2, #0
   12e50:	bne	12e40 <__snprintf_chk@plt+0x2068>
   12e54:	mcr	15, 0, r0, cr7, cr10, {5}
   12e58:	bx	lr
   12e5c:	push	{r4, r5, r6, lr}
   12e60:	subs	r5, r0, #0
   12e64:	blt	12f20 <__snprintf_chk@plt+0x2148>
   12e68:	mov	r0, #32
   12e6c:	bl	14790 <__snprintf_chk@plt+0x39b8>
   12e70:	mov	r2, #32
   12e74:	mov	r1, #0
   12e78:	mov	r4, r0
   12e7c:	bl	10d18 <memset@plt>
   12e80:	mov	r0, r5
   12e84:	bl	135f4 <__snprintf_chk@plt+0x281c>
   12e88:	cmp	r0, #0
   12e8c:	str	r0, [r4, #4]
   12e90:	beq	12f18 <__snprintf_chk@plt+0x2140>
   12e94:	mov	r3, #1
   12e98:	strh	r3, [r4, #8]
   12e9c:	strb	r3, [r4, #10]
   12ea0:	str	r3, [r4, #12]
   12ea4:	str	r3, [r4, #16]
   12ea8:	bl	14250 <__snprintf_chk@plt+0x3478>
   12eac:	str	r0, [r4, #20]
   12eb0:	bl	14250 <__snprintf_chk@plt+0x3478>
   12eb4:	str	r0, [r4, #24]
   12eb8:	bl	14250 <__snprintf_chk@plt+0x3478>
   12ebc:	ldr	r1, [pc, #100]	; 12f28 <__snprintf_chk@plt+0x2150>
   12ec0:	mov	r3, #0
   12ec4:	mov	r2, r4
   12ec8:	add	r1, pc, r1
   12ecc:	str	r0, [r4, #28]
   12ed0:	ldr	r0, [r4, #4]
   12ed4:	bl	136e8 <__snprintf_chk@plt+0x2910>
   12ed8:	subs	r5, r0, #0
   12edc:	beq	12eec <__snprintf_chk@plt+0x2114>
   12ee0:	mov	r0, r4
   12ee4:	pop	{r4, r5, r6, lr}
   12ee8:	b	12e34 <__snprintf_chk@plt+0x205c>
   12eec:	mov	r1, r5
   12ef0:	ldr	r0, [r4, #28]
   12ef4:	bl	14734 <__snprintf_chk@plt+0x395c>
   12ef8:	mov	r1, r5
   12efc:	ldr	r0, [r4, #24]
   12f00:	bl	14734 <__snprintf_chk@plt+0x395c>
   12f04:	ldr	r0, [r4, #20]
   12f08:	mov	r1, r5
   12f0c:	bl	14734 <__snprintf_chk@plt+0x395c>
   12f10:	ldr	r0, [r4, #4]
   12f14:	bl	13698 <__snprintf_chk@plt+0x28c0>
   12f18:	mov	r0, r4
   12f1c:	bl	10bf8 <free@plt>
   12f20:	mov	r0, #0
   12f24:	pop	{r4, r5, r6, pc}
   12f28:			; <UNDEFINED> instruction: 0xfffffd44
   12f2c:	b	12e5c <__snprintf_chk@plt+0x2084>
   12f30:	push	{r4, r5, r6, lr}
   12f34:	subs	r4, r0, #0
   12f38:	popeq	{r4, r5, r6, pc}
   12f3c:	mcr	15, 0, r0, cr7, cr10, {5}
   12f40:	ldrex	r3, [r4]
   12f44:	sub	r3, r3, #1
   12f48:	strex	r2, r3, [r4]
   12f4c:	cmp	r2, #0
   12f50:	bne	12f40 <__snprintf_chk@plt+0x2168>
   12f54:	cmp	r3, #0
   12f58:	mcr	15, 0, r0, cr7, cr10, {5}
   12f5c:	popne	{r4, r5, r6, pc}
   12f60:	ldr	r5, [pc, #60]	; 12fa4 <__snprintf_chk@plt+0x21cc>
   12f64:	ldr	r1, [pc, #60]	; 12fa8 <__snprintf_chk@plt+0x21d0>
   12f68:	add	r5, pc, r5
   12f6c:	ldr	r0, [r4, #28]
   12f70:	add	r1, pc, r1
   12f74:	bl	14734 <__snprintf_chk@plt+0x395c>
   12f78:	mov	r1, r5
   12f7c:	ldr	r0, [r4, #20]
   12f80:	bl	14734 <__snprintf_chk@plt+0x395c>
   12f84:	mov	r1, r5
   12f88:	ldr	r0, [r4, #24]
   12f8c:	bl	14734 <__snprintf_chk@plt+0x395c>
   12f90:	ldr	r0, [r4, #4]
   12f94:	bl	13698 <__snprintf_chk@plt+0x28c0>
   12f98:	mov	r0, r4
   12f9c:	pop	{r4, r5, r6, lr}
   12fa0:	b	10bf8 <free@plt>
   12fa4:			; <UNDEFINED> instruction: 0xfffffaa4
   12fa8:			; <UNDEFINED> instruction: 0xfffffacc
   12fac:	subs	r3, r0, #0
   12fb0:	bxeq	lr
   12fb4:	ldr	r0, [r3, #4]
   12fb8:	b	136d8 <__snprintf_chk@plt+0x2900>
   12fbc:	push	{r4, r5, r6, lr}
   12fc0:	mov	r1, #1
   12fc4:	bl	12a6c <__snprintf_chk@plt+0x1c94>
   12fc8:	subs	r5, r0, #0
   12fcc:	movlt	r4, #0
   12fd0:	blt	12ff0 <__snprintf_chk@plt+0x2218>
   12fd4:	bl	12e5c <__snprintf_chk@plt+0x2084>
   12fd8:	subs	r4, r0, #0
   12fdc:	beq	12ff8 <__snprintf_chk@plt+0x2220>
   12fe0:	mov	r3, #0
   12fe4:	strb	r3, [r4, #8]
   12fe8:	mov	r1, #1
   12fec:	bl	12fac <__snprintf_chk@plt+0x21d4>
   12ff0:	mov	r0, r4
   12ff4:	pop	{r4, r5, r6, pc}
   12ff8:	mov	r0, r5
   12ffc:	bl	10dcc <close@plt>
   13000:	b	12ff0 <__snprintf_chk@plt+0x2218>
   13004:	ldr	r3, [pc, #184]	; 130c4 <__snprintf_chk@plt+0x22ec>
   13008:	ldr	r2, [pc, #184]	; 130c8 <__snprintf_chk@plt+0x22f0>
   1300c:	add	r3, pc, r3
   13010:	push	{r4, r5, r6, r7, lr}
   13014:	sub	sp, sp, #36	; 0x24
   13018:	ldr	r5, [r3, r2]
   1301c:	mov	r1, #0
   13020:	ldr	r3, [r5]
   13024:	str	r3, [sp, #28]
   13028:	bl	12a6c <__snprintf_chk@plt+0x1c94>
   1302c:	subs	r7, r0, #0
   13030:	movlt	r6, #0
   13034:	blt	1308c <__snprintf_chk@plt+0x22b4>
   13038:	mov	r4, #0
   1303c:	mov	r2, #16
   13040:	mvn	ip, #0
   13044:	str	r2, [sp]
   13048:	str	r2, [sp, #12]
   1304c:	mov	r1, r4
   13050:	add	r3, sp, #12
   13054:	mov	r2, #2
   13058:	str	r4, [sp, #24]
   1305c:	str	ip, [sp, #16]
   13060:	str	ip, [sp, #20]
   13064:	bl	10bd4 <setsockopt@plt>
   13068:	cmp	r0, r4
   1306c:	mov	r0, r7
   13070:	blt	130a8 <__snprintf_chk@plt+0x22d0>
   13074:	bl	12e5c <__snprintf_chk@plt+0x2084>
   13078:	subs	r6, r0, #0
   1307c:	beq	130b4 <__snprintf_chk@plt+0x22dc>
   13080:	strb	r4, [r6, #8]
   13084:	mov	r1, #1
   13088:	bl	12fac <__snprintf_chk@plt+0x21d4>
   1308c:	ldr	r2, [sp, #28]
   13090:	ldr	r3, [r5]
   13094:	mov	r0, r6
   13098:	cmp	r2, r3
   1309c:	bne	130c0 <__snprintf_chk@plt+0x22e8>
   130a0:	add	sp, sp, #36	; 0x24
   130a4:	pop	{r4, r5, r6, r7, pc}
   130a8:	bl	10dcc <close@plt>
   130ac:	mov	r6, r4
   130b0:	b	1308c <__snprintf_chk@plt+0x22b4>
   130b4:	mov	r0, r7
   130b8:	bl	10dcc <close@plt>
   130bc:	b	1308c <__snprintf_chk@plt+0x22b4>
   130c0:	bl	10c28 <__stack_chk_fail@plt>
   130c4:	andeq	r7, r1, r0, lsr #30
   130c8:	andeq	r0, r0, r0, asr #1
   130cc:	push	{r4, r5, r6, r7, r8, lr}
   130d0:	subs	r5, r0, #0
   130d4:	beq	131b8 <__snprintf_chk@plt+0x23e0>
   130d8:	mov	r0, #28
   130dc:	mov	r6, r3
   130e0:	mov	r7, r1
   130e4:	mov	r8, r2
   130e8:	bl	14790 <__snprintf_chk@plt+0x39b8>
   130ec:	cmp	r6, #0
   130f0:	mov	r4, r0
   130f4:	mov	r0, #0
   130f8:	str	r0, [r4, #4]
   130fc:	str	r0, [r4, #12]
   13100:	strh	r7, [r4, #4]
   13104:	str	r0, [r4]
   13108:	str	r0, [r4, #8]
   1310c:	str	r0, [r4, #16]
   13110:	str	r0, [r4, #20]
   13114:	str	r0, [r4, #24]
   13118:	strb	r6, [r4, #12]
   1311c:	bne	13178 <__snprintf_chk@plt+0x23a0>
   13120:	ldr	r3, [r5, #12]
   13124:	mov	r1, r4
   13128:	cmp	r3, #0
   1312c:	addne	r2, r3, #1
   13130:	moveq	r3, #1
   13134:	moveq	r2, #2
   13138:	str	r2, [r5, #12]
   1313c:	str	r3, [r4]
   13140:	ldr	r3, [sp, #24]
   13144:	ldr	r0, [r5, #20]
   13148:	str	r3, [r4, #16]
   1314c:	ldr	r3, [sp, #32]
   13150:	str	r3, [r4, #20]
   13154:	ldr	r3, [sp, #28]
   13158:	str	r3, [r4, #24]
   1315c:	bl	14294 <__snprintf_chk@plt+0x34bc>
   13160:	subs	r6, r0, #0
   13164:	beq	131a0 <__snprintf_chk@plt+0x23c8>
   13168:	mov	r0, r5
   1316c:	bl	12b48 <__snprintf_chk@plt+0x1d70>
   13170:	ldr	r0, [r4]
   13174:	pop	{r4, r5, r6, r7, r8, pc}
   13178:	mov	r0, r6
   1317c:	bl	10c64 <malloc@plt>
   13180:	cmp	r0, #0
   13184:	mov	r7, r0
   13188:	str	r0, [r4, #8]
   1318c:	beq	131c0 <__snprintf_chk@plt+0x23e8>
   13190:	mov	r2, r6
   13194:	mov	r1, r8
   13198:	bl	10c10 <memcpy@plt>
   1319c:	b	13120 <__snprintf_chk@plt+0x2348>
   131a0:	ldr	r0, [r4, #8]
   131a4:	bl	10bf8 <free@plt>
   131a8:	mov	r0, r4
   131ac:	bl	10bf8 <free@plt>
   131b0:	mov	r0, r6
   131b4:	pop	{r4, r5, r6, r7, r8, pc}
   131b8:	mov	r0, r5
   131bc:	pop	{r4, r5, r6, r7, r8, pc}
   131c0:	mov	r0, r4
   131c4:	bl	10bf8 <free@plt>
   131c8:	mov	r0, r7
   131cc:	pop	{r4, r5, r6, r7, r8, pc}
   131d0:	cmp	r1, #0
   131d4:	cmpne	r0, #0
   131d8:	bne	131e4 <__snprintf_chk@plt+0x240c>
   131dc:	mov	r0, #0
   131e0:	bx	lr
   131e4:	push	{r4, r5, r6, lr}
   131e8:	mov	r2, r1
   131ec:	ldr	r6, [pc, #80]	; 13244 <__snprintf_chk@plt+0x246c>
   131f0:	mov	r5, r1
   131f4:	add	r6, pc, r6
   131f8:	mov	r4, r0
   131fc:	mov	r1, r6
   13200:	ldr	r0, [r0, #20]
   13204:	bl	145c0 <__snprintf_chk@plt+0x37e8>
   13208:	cmp	r0, #0
   1320c:	beq	13224 <__snprintf_chk@plt+0x244c>
   13210:	bl	12a14 <__snprintf_chk@plt+0x1c3c>
   13214:	mov	r0, r4
   13218:	bl	12b48 <__snprintf_chk@plt+0x1d70>
   1321c:	mov	r0, #1
   13220:	pop	{r4, r5, r6, pc}
   13224:	mov	r2, r5
   13228:	mov	r1, r6
   1322c:	ldr	r0, [r4, #24]
   13230:	bl	145c0 <__snprintf_chk@plt+0x37e8>
   13234:	cmp	r0, #0
   13238:	bne	13210 <__snprintf_chk@plt+0x2438>
   1323c:	mov	r0, #0
   13240:	pop	{r4, r5, r6, pc}
   13244:			; <UNDEFINED> instruction: 0xfffff7f0
   13248:	push	{r4, r5, r6, lr}
   1324c:	subs	r4, r0, #0
   13250:	beq	132b8 <__snprintf_chk@plt+0x24e0>
   13254:	ldrb	r3, [r4, #9]
   13258:	cmp	r3, #0
   1325c:	bne	13298 <__snprintf_chk@plt+0x24c0>
   13260:	ldr	r5, [pc, #88]	; 132c0 <__snprintf_chk@plt+0x24e8>
   13264:	mov	r2, #0
   13268:	add	r5, pc, r5
   1326c:	mov	r3, r5
   13270:	mov	r1, r2
   13274:	ldr	r0, [r4, #20]
   13278:	bl	1466c <__snprintf_chk@plt+0x3894>
   1327c:	mov	r2, #0
   13280:	mov	r3, r5
   13284:	ldr	r0, [r4, #24]
   13288:	mov	r1, r2
   1328c:	bl	1466c <__snprintf_chk@plt+0x3894>
   13290:	mov	r0, #1
   13294:	pop	{r4, r5, r6, pc}
   13298:	mov	r3, #0
   1329c:	mov	r2, r3
   132a0:	mov	r1, r3
   132a4:	ldr	r0, [r4, #4]
   132a8:	bl	13774 <__snprintf_chk@plt+0x299c>
   132ac:	mov	r3, #0
   132b0:	strb	r3, [r4, #9]
   132b4:	b	13260 <__snprintf_chk@plt+0x2488>
   132b8:	mov	r0, r4
   132bc:	pop	{r4, r5, r6, pc}
   132c0:			; <UNDEFINED> instruction: 0xfffff7a4
   132c4:	push	{r4, r5, r6, r7, r8, lr}
   132c8:	subs	r5, r0, #0
   132cc:	beq	1334c <__snprintf_chk@plt+0x2574>
   132d0:	mov	r0, #20
   132d4:	mov	r7, r2
   132d8:	mov	r6, r3
   132dc:	mov	r8, r1
   132e0:	bl	14790 <__snprintf_chk@plt+0x39b8>
   132e4:	mov	r4, r0
   132e8:	mov	r0, #0
   132ec:	str	r0, [r4, #4]
   132f0:	str	r0, [r4]
   132f4:	str	r0, [r4, #8]
   132f8:	str	r0, [r4, #12]
   132fc:	str	r0, [r4, #16]
   13300:	strb	r8, [r4, #4]
   13304:	ldr	r3, [r5, #16]
   13308:	mov	r1, r4
   1330c:	cmp	r3, r0
   13310:	addne	r2, r3, #1
   13314:	moveq	r3, #1
   13318:	moveq	r2, #2
   1331c:	str	r2, [r5, #16]
   13320:	ldr	r0, [r5, #28]
   13324:	str	r3, [r4]
   13328:	ldr	r3, [sp, #24]
   1332c:	str	r7, [r4, #8]
   13330:	str	r3, [r4, #12]
   13334:	str	r6, [r4, #16]
   13338:	bl	14294 <__snprintf_chk@plt+0x34bc>
   1333c:	subs	r5, r0, #0
   13340:	beq	13354 <__snprintf_chk@plt+0x257c>
   13344:	ldr	r0, [r4]
   13348:	pop	{r4, r5, r6, r7, r8, pc}
   1334c:	mov	r0, r5
   13350:	pop	{r4, r5, r6, r7, r8, pc}
   13354:	mov	r0, r4
   13358:	bl	10bf8 <free@plt>
   1335c:	mov	r0, r5
   13360:	pop	{r4, r5, r6, r7, r8, pc}
   13364:	cmp	r1, #0
   13368:	cmpne	r0, #0
   1336c:	bne	13378 <__snprintf_chk@plt+0x25a0>
   13370:	mov	r0, #0
   13374:	bx	lr
   13378:	mov	r2, r1
   1337c:	ldr	r1, [pc, #64]	; 133c4 <__snprintf_chk@plt+0x25ec>
   13380:	push	{r4, lr}
   13384:	add	r1, pc, r1
   13388:	ldr	r0, [r0, #28]
   1338c:	bl	145c0 <__snprintf_chk@plt+0x37e8>
   13390:	subs	r4, r0, #0
   13394:	beq	133bc <__snprintf_chk@plt+0x25e4>
   13398:	ldr	r3, [r4, #12]
   1339c:	cmp	r3, #0
   133a0:	beq	133ac <__snprintf_chk@plt+0x25d4>
   133a4:	ldr	r0, [r4, #16]
   133a8:	blx	r3
   133ac:	mov	r0, r4
   133b0:	bl	10bf8 <free@plt>
   133b4:	mov	r0, #1
   133b8:	pop	{r4, pc}
   133bc:	mov	r0, #0
   133c0:	pop	{r4, pc}
   133c4:			; <UNDEFINED> instruction: 0xfffff674
   133c8:	ldr	r3, [r0, #32]
   133cc:	push	{r4, lr}
   133d0:	cmp	r3, #0
   133d4:	mov	r4, r0
   133d8:	beq	133e4 <__snprintf_chk@plt+0x260c>
   133dc:	ldr	r0, [r0, #36]	; 0x24
   133e0:	blx	r3
   133e4:	ldr	r3, [r4, #20]
   133e8:	cmp	r3, #0
   133ec:	beq	133f8 <__snprintf_chk@plt+0x2620>
   133f0:	ldr	r0, [r4, #24]
   133f4:	blx	r3
   133f8:	ldr	r3, [r4, #44]	; 0x2c
   133fc:	cmp	r3, #0
   13400:	beq	1340c <__snprintf_chk@plt+0x2634>
   13404:	ldr	r0, [r4, #48]	; 0x30
   13408:	blx	r3
   1340c:	ldrb	r3, [r4, #12]
   13410:	cmp	r3, #0
   13414:	bne	13424 <__snprintf_chk@plt+0x264c>
   13418:	mvn	r3, #0
   1341c:	str	r3, [r4, #4]
   13420:	pop	{r4, pc}
   13424:	ldr	r0, [r4, #4]
   13428:	bl	10dcc <close@plt>
   1342c:	b	13418 <__snprintf_chk@plt+0x2640>
   13430:	mov	r3, r0
   13434:	mcr	15, 0, r0, cr7, cr10, {5}
   13438:	ldrex	r2, [r3]
   1343c:	sub	r2, r2, #1
   13440:	strex	r1, r2, [r3]
   13444:	cmp	r1, #0
   13448:	bne	13438 <__snprintf_chk@plt+0x2660>
   1344c:	cmp	r2, #0
   13450:	mcr	15, 0, r0, cr7, cr10, {5}
   13454:	bxne	lr
   13458:	b	10bf8 <free@plt>
   1345c:	push	{r4, r5, r6, lr}
   13460:	subs	r4, r2, #0
   13464:	mov	r5, r1
   13468:	beq	13488 <__snprintf_chk@plt+0x26b0>
   1346c:	mcr	15, 0, r0, cr7, cr10, {5}
   13470:	ldrex	r3, [r4]
   13474:	add	r3, r3, #1
   13478:	strex	r2, r3, [r4]
   1347c:	cmp	r2, #0
   13480:	bne	13470 <__snprintf_chk@plt+0x2698>
   13484:	mcr	15, 0, r0, cr7, cr10, {5}
   13488:	ldr	r3, [pc, #352]	; 135f0 <__snprintf_chk@plt+0x2818>
   1348c:	tst	r5, r3
   13490:	beq	134f8 <__snprintf_chk@plt+0x2720>
   13494:	ldr	r2, [r4, #40]	; 0x28
   13498:	mov	r3, #0
   1349c:	cmp	r2, r3
   134a0:	str	r3, [r4, #16]
   134a4:	str	r3, [r4, #28]
   134a8:	beq	135dc <__snprintf_chk@plt+0x2804>
   134ac:	ldr	r1, [r4, #48]	; 0x30
   134b0:	mov	r0, r4
   134b4:	blx	r2
   134b8:	cmp	r0, #0
   134bc:	bne	134f8 <__snprintf_chk@plt+0x2720>
   134c0:	ldr	r3, [r4, #44]	; 0x2c
   134c4:	cmp	r3, #0
   134c8:	beq	134d4 <__snprintf_chk@plt+0x26fc>
   134cc:	ldr	r0, [r4, #48]	; 0x30
   134d0:	blx	r3
   134d4:	ldr	r1, [r4, #8]
   134d8:	mov	r3, #0
   134dc:	bic	r1, r1, #8192	; 0x2000
   134e0:	str	r1, [r4, #8]
   134e4:	str	r3, [r4, #40]	; 0x28
   134e8:	str	r3, [r4, #44]	; 0x2c
   134ec:	str	r3, [r4, #48]	; 0x30
   134f0:	ldr	r0, [r4, #4]
   134f4:	bl	13bfc <__snprintf_chk@plt+0x2e24>
   134f8:	tst	r5, #1
   134fc:	and	r5, r5, #4
   13500:	beq	135c8 <__snprintf_chk@plt+0x27f0>
   13504:	ldr	r3, [r4, #16]
   13508:	cmp	r3, #0
   1350c:	beq	1355c <__snprintf_chk@plt+0x2784>
   13510:	ldr	r1, [r4, #24]
   13514:	mov	r0, r4
   13518:	blx	r3
   1351c:	cmp	r0, #0
   13520:	bne	1355c <__snprintf_chk@plt+0x2784>
   13524:	ldr	r3, [r4, #20]
   13528:	cmp	r3, #0
   1352c:	beq	13538 <__snprintf_chk@plt+0x2760>
   13530:	ldr	r0, [r4, #24]
   13534:	blx	r3
   13538:	ldr	r1, [r4, #8]
   1353c:	mov	r3, #0
   13540:	bic	r1, r1, #1
   13544:	str	r1, [r4, #8]
   13548:	str	r3, [r4, #16]
   1354c:	str	r3, [r4, #20]
   13550:	str	r3, [r4, #24]
   13554:	ldr	r0, [r4, #4]
   13558:	bl	13bfc <__snprintf_chk@plt+0x2e24>
   1355c:	cmp	r5, #0
   13560:	beq	135bc <__snprintf_chk@plt+0x27e4>
   13564:	ldr	r3, [r4, #28]
   13568:	cmp	r3, #0
   1356c:	beq	135bc <__snprintf_chk@plt+0x27e4>
   13570:	ldr	r1, [r4, #36]	; 0x24
   13574:	mov	r0, r4
   13578:	blx	r3
   1357c:	cmp	r0, #0
   13580:	bne	135bc <__snprintf_chk@plt+0x27e4>
   13584:	ldr	r3, [r4, #32]
   13588:	cmp	r3, #0
   1358c:	beq	13598 <__snprintf_chk@plt+0x27c0>
   13590:	ldr	r0, [r4, #36]	; 0x24
   13594:	blx	r3
   13598:	ldr	r1, [r4, #8]
   1359c:	mov	r3, #0
   135a0:	bic	r1, r1, #4
   135a4:	str	r1, [r4, #8]
   135a8:	str	r3, [r4, #28]
   135ac:	str	r3, [r4, #32]
   135b0:	str	r3, [r4, #36]	; 0x24
   135b4:	ldr	r0, [r4, #4]
   135b8:	bl	13bfc <__snprintf_chk@plt+0x2e24>
   135bc:	mov	r0, r4
   135c0:	pop	{r4, r5, r6, lr}
   135c4:	b	13430 <__snprintf_chk@plt+0x2658>
   135c8:	cmp	r5, #0
   135cc:	bne	13564 <__snprintf_chk@plt+0x278c>
   135d0:	cmp	r4, #0
   135d4:	popeq	{r4, r5, r6, pc}
   135d8:	b	135bc <__snprintf_chk@plt+0x27e4>
   135dc:	ldr	r0, [r4, #4]
   135e0:	bl	13cac <__snprintf_chk@plt+0x2ed4>
   135e4:	mov	r0, r4
   135e8:	pop	{r4, r5, r6, lr}
   135ec:	b	13430 <__snprintf_chk@plt+0x2658>
   135f0:	andeq	r2, r0, r8, lsl r0
   135f4:	push	{r4, r5, r6, lr}
   135f8:	subs	r5, r0, #0
   135fc:	sub	sp, sp, #8
   13600:	movlt	r4, #0
   13604:	blt	13674 <__snprintf_chk@plt+0x289c>
   13608:	mov	r0, #52	; 0x34
   1360c:	bl	14790 <__snprintf_chk@plt+0x39b8>
   13610:	mov	r2, #52	; 0x34
   13614:	mov	r1, #0
   13618:	mov	r6, #0
   1361c:	mov	r4, r0
   13620:	bl	10d18 <memset@plt>
   13624:	ldr	r2, [pc, #100]	; 13690 <__snprintf_chk@plt+0x28b8>
   13628:	str	r5, [r4, #4]
   1362c:	add	r2, pc, r2
   13630:	strb	r6, [r4, #12]
   13634:	str	r2, [sp]
   13638:	ldr	r2, [pc, #84]	; 13694 <__snprintf_chk@plt+0x28bc>
   1363c:	mov	r0, r5
   13640:	mov	r3, r4
   13644:	mov	r1, r6
   13648:	add	r2, pc, r2
   1364c:	bl	13afc <__snprintf_chk@plt+0x2d24>
   13650:	cmp	r0, r6
   13654:	blt	13680 <__snprintf_chk@plt+0x28a8>
   13658:	mcr	15, 0, r0, cr7, cr10, {5}
   1365c:	ldrex	r3, [r4]
   13660:	add	r3, r3, #1
   13664:	strex	r2, r3, [r4]
   13668:	cmp	r2, #0
   1366c:	bne	1365c <__snprintf_chk@plt+0x2884>
   13670:	mcr	15, 0, r0, cr7, cr10, {5}
   13674:	mov	r0, r4
   13678:	add	sp, sp, #8
   1367c:	pop	{r4, r5, r6, pc}
   13680:	mov	r0, r4
   13684:	bl	10bf8 <free@plt>
   13688:	mov	r4, r6
   1368c:	b	13674 <__snprintf_chk@plt+0x289c>
   13690:			; <UNDEFINED> instruction: 0xfffffd94
   13694:			; <UNDEFINED> instruction: 0xfffffe0c
   13698:	push	{r4, lr}
   1369c:	subs	r4, r0, #0
   136a0:	popeq	{r4, pc}
   136a4:	mov	r3, #0
   136a8:	str	r3, [r4, #16]
   136ac:	str	r3, [r4, #28]
   136b0:	str	r3, [r4, #40]	; 0x28
   136b4:	ldr	r0, [r4, #4]
   136b8:	bl	13cac <__snprintf_chk@plt+0x2ed4>
   136bc:	mov	r0, r4
   136c0:	pop	{r4, lr}
   136c4:	b	13430 <__snprintf_chk@plt+0x2658>
   136c8:	cmp	r0, #0
   136cc:	ldrne	r0, [r0, #4]
   136d0:	mvneq	r0, #106	; 0x6a
   136d4:	bx	lr
   136d8:	cmp	r0, #0
   136dc:	strbne	r1, [r0, #12]
   136e0:	movne	r0, #1
   136e4:	bx	lr
   136e8:	push	{r4, r5, r6, r7, r8, lr}
   136ec:	subs	r4, r0, #0
   136f0:	beq	13764 <__snprintf_chk@plt+0x298c>
   136f4:	ldr	r0, [r4, #4]
   136f8:	cmp	r0, #0
   136fc:	blt	13764 <__snprintf_chk@plt+0x298c>
   13700:	mov	r7, r3
   13704:	ldr	r3, [r4, #20]
   13708:	mov	r6, r2
   1370c:	cmp	r3, #0
   13710:	mov	r5, r1
   13714:	beq	13720 <__snprintf_chk@plt+0x2948>
   13718:	ldr	r0, [r4, #24]
   1371c:	blx	r3
   13720:	ldr	r3, [r4, #8]
   13724:	cmp	r5, #0
   13728:	orrne	r8, r3, #1
   1372c:	biceq	r8, r3, #1
   13730:	cmp	r8, r3
   13734:	str	r5, [r4, #16]
   13738:	str	r7, [r4, #20]
   1373c:	str	r6, [r4, #24]
   13740:	beq	1376c <__snprintf_chk@plt+0x2994>
   13744:	mov	r1, r8
   13748:	ldr	r0, [r4, #4]
   1374c:	bl	13bfc <__snprintf_chk@plt+0x2e24>
   13750:	cmp	r0, #0
   13754:	blt	13764 <__snprintf_chk@plt+0x298c>
   13758:	str	r8, [r4, #8]
   1375c:	mov	r0, #1
   13760:	pop	{r4, r5, r6, r7, r8, pc}
   13764:	mov	r0, #0
   13768:	pop	{r4, r5, r6, r7, r8, pc}
   1376c:	mov	r0, #1
   13770:	pop	{r4, r5, r6, r7, r8, pc}
   13774:	push	{r4, r5, r6, r7, r8, lr}
   13778:	subs	r4, r0, #0
   1377c:	beq	137f0 <__snprintf_chk@plt+0x2a18>
   13780:	ldr	r0, [r4, #4]
   13784:	cmp	r0, #0
   13788:	blt	137f0 <__snprintf_chk@plt+0x2a18>
   1378c:	mov	r7, r3
   13790:	ldr	r3, [r4, #32]
   13794:	mov	r6, r2
   13798:	cmp	r3, #0
   1379c:	mov	r5, r1
   137a0:	beq	137ac <__snprintf_chk@plt+0x29d4>
   137a4:	ldr	r0, [r4, #36]	; 0x24
   137a8:	blx	r3
   137ac:	ldr	r3, [r4, #8]
   137b0:	cmp	r5, #0
   137b4:	orrne	r8, r3, #4
   137b8:	biceq	r8, r3, #4
   137bc:	cmp	r8, r3
   137c0:	str	r5, [r4, #28]
   137c4:	str	r7, [r4, #32]
   137c8:	str	r6, [r4, #36]	; 0x24
   137cc:	beq	137f8 <__snprintf_chk@plt+0x2a20>
   137d0:	mov	r1, r8
   137d4:	ldr	r0, [r4, #4]
   137d8:	bl	13bfc <__snprintf_chk@plt+0x2e24>
   137dc:	cmp	r0, #0
   137e0:	blt	137f0 <__snprintf_chk@plt+0x2a18>
   137e4:	str	r8, [r4, #8]
   137e8:	mov	r0, #1
   137ec:	pop	{r4, r5, r6, r7, r8, pc}
   137f0:	mov	r0, #0
   137f4:	pop	{r4, r5, r6, r7, r8, pc}
   137f8:	mov	r0, #1
   137fc:	pop	{r4, r5, r6, r7, r8, pc}
   13800:	push	{r4, r5, r6, r7, r8, lr}
   13804:	subs	r4, r0, #0
   13808:	beq	1387c <__snprintf_chk@plt+0x2aa4>
   1380c:	ldr	r0, [r4, #4]
   13810:	cmp	r0, #0
   13814:	blt	1387c <__snprintf_chk@plt+0x2aa4>
   13818:	mov	r7, r3
   1381c:	ldr	r3, [r4, #44]	; 0x2c
   13820:	mov	r6, r2
   13824:	cmp	r3, #0
   13828:	mov	r5, r1
   1382c:	beq	13838 <__snprintf_chk@plt+0x2a60>
   13830:	ldr	r0, [r4, #48]	; 0x30
   13834:	blx	r3
   13838:	ldr	r3, [r4, #8]
   1383c:	cmp	r5, #0
   13840:	orrne	r8, r3, #8192	; 0x2000
   13844:	biceq	r8, r3, #8192	; 0x2000
   13848:	cmp	r8, r3
   1384c:	str	r5, [r4, #40]	; 0x28
   13850:	str	r7, [r4, #44]	; 0x2c
   13854:	str	r6, [r4, #48]	; 0x30
   13858:	beq	13884 <__snprintf_chk@plt+0x2aac>
   1385c:	mov	r1, r8
   13860:	ldr	r0, [r4, #4]
   13864:	bl	13bfc <__snprintf_chk@plt+0x2e24>
   13868:	cmp	r0, #0
   1386c:	blt	1387c <__snprintf_chk@plt+0x2aa4>
   13870:	str	r8, [r4, #8]
   13874:	mov	r0, #1
   13878:	pop	{r4, r5, r6, r7, r8, pc}
   1387c:	mov	r0, #0
   13880:	pop	{r4, r5, r6, r7, r8, pc}
   13884:	mov	r0, #1
   13888:	pop	{r4, r5, r6, r7, r8, pc}
   1388c:	push	{r4, r5, r6, lr}
   13890:	subs	r4, r0, #0
   13894:	beq	138e0 <__snprintf_chk@plt+0x2b08>
   13898:	ldr	r0, [r4, #4]
   1389c:	mov	r6, r2
   138a0:	cmp	r0, #0
   138a4:	mov	r5, r1
   138a8:	bge	138b4 <__snprintf_chk@plt+0x2adc>
   138ac:	b	138e0 <__snprintf_chk@plt+0x2b08>
   138b0:	ldr	r0, [r4, #4]
   138b4:	mov	r2, r6
   138b8:	mov	r1, r5
   138bc:	bl	10d48 <writev@plt>
   138c0:	cmp	r0, #0
   138c4:	popge	{r4, r5, r6, pc}
   138c8:	bl	10cf4 <__errno_location@plt>
   138cc:	ldr	r3, [r0]
   138d0:	cmp	r3, #4
   138d4:	beq	138b0 <__snprintf_chk@plt+0x2ad8>
   138d8:	rsb	r0, r3, #0
   138dc:	pop	{r4, r5, r6, pc}
   138e0:	mvn	r0, #106	; 0x6a
   138e4:	pop	{r4, r5, r6, pc}
   138e8:	cmp	r0, #0
   138ec:	bxeq	lr
   138f0:	ldr	r0, [r0, #4]
   138f4:	cmp	r0, #0
   138f8:	blt	13914 <__snprintf_chk@plt+0x2b3c>
   138fc:	push	{r4, lr}
   13900:	mov	r1, #2
   13904:	bl	10d54 <shutdown@plt>
   13908:	clz	r0, r0
   1390c:	lsr	r0, r0, #5
   13910:	pop	{r4, pc}
   13914:	mov	r0, #0
   13918:	bx	lr
   1391c:	push	{r4, lr}
   13920:	mov	r4, r0
   13924:	ldr	r0, [r0]
   13928:	bl	10dcc <close@plt>
   1392c:	ldr	r3, [r4, #8]
   13930:	mvn	r2, #0
   13934:	cmp	r3, #0
   13938:	str	r2, [r4]
   1393c:	beq	13948 <__snprintf_chk@plt+0x2b70>
   13940:	ldr	r0, [r4, #12]
   13944:	blx	r3
   13948:	mov	r0, r4
   1394c:	pop	{r4, lr}
   13950:	b	10bf8 <free@plt>
   13954:	ldr	r3, [pc, #116]	; 139d0 <__snprintf_chk@plt+0x2bf8>
   13958:	ldr	r0, [pc, #116]	; 139d4 <__snprintf_chk@plt+0x2bfc>
   1395c:	add	r3, pc, r3
   13960:	push	{r4, r5, lr}
   13964:	sub	sp, sp, #20
   13968:	ldr	r4, [r3, r0]
   1396c:	tst	r1, #24
   13970:	ldr	r3, [r4]
   13974:	str	r3, [sp, #12]
   13978:	beq	13994 <__snprintf_chk@plt+0x2bbc>
   1397c:	ldr	r2, [sp, #12]
   13980:	ldr	r3, [r4]
   13984:	cmp	r2, r3
   13988:	bne	139cc <__snprintf_chk@plt+0x2bf4>
   1398c:	add	sp, sp, #20
   13990:	pop	{r4, r5, pc}
   13994:	mov	r5, r2
   13998:	mov	r1, sp
   1399c:	mov	r2, #8
   139a0:	ldr	r0, [r5]
   139a4:	bl	10be0 <read@plt>
   139a8:	cmp	r0, #8
   139ac:	bne	1397c <__snprintf_chk@plt+0x2ba4>
   139b0:	ldr	r3, [r5, #4]
   139b4:	cmp	r3, #0
   139b8:	beq	1397c <__snprintf_chk@plt+0x2ba4>
   139bc:	ldr	r1, [r5, #12]
   139c0:	ldr	r0, [r5]
   139c4:	blx	r3
   139c8:	b	1397c <__snprintf_chk@plt+0x2ba4>
   139cc:	bl	10c28 <__stack_chk_fail@plt>
   139d0:	ldrdeq	r7, [r1], -r0
   139d4:	andeq	r0, r0, r0, asr #1
   139d8:	push	{r4, lr}
   139dc:	mov	r0, #524288	; 0x80000
   139e0:	bl	10dc0 <epoll_create1@plt>
   139e4:	ldr	ip, [pc, #44]	; 13a18 <__snprintf_chk@plt+0x2c40>
   139e8:	mov	r2, #0
   139ec:	add	ip, pc, ip
   139f0:	mov	r3, ip
   139f4:	add	r1, ip, #512	; 0x200
   139f8:	str	r0, [ip]
   139fc:	str	r2, [r3, #4]!
   13a00:	cmp	r3, r1
   13a04:	bne	139fc <__snprintf_chk@plt+0x2c24>
   13a08:	ldr	r3, [pc, #12]	; 13a1c <__snprintf_chk@plt+0x2c44>
   13a0c:	add	r3, pc, r3
   13a10:	str	r2, [r3, #516]	; 0x204
   13a14:	pop	{r4, pc}
   13a18:	andeq	r7, r1, r0, ror #12
   13a1c:	andeq	r7, r1, r0, asr #12
   13a20:	ldr	r3, [pc, #12]	; 13a34 <__snprintf_chk@plt+0x2c5c>
   13a24:	mov	r2, #1
   13a28:	add	r3, pc, r3
   13a2c:	str	r2, [r3, #516]	; 0x204
   13a30:	bx	lr
   13a34:	andeq	r7, r1, r4, lsr #12
   13a38:	ldr	r3, [pc, #120]	; 13ab8 <__snprintf_chk@plt+0x2ce0>
   13a3c:	ldr	ip, [pc, #120]	; 13abc <__snprintf_chk@plt+0x2ce4>
   13a40:	add	r3, pc, r3
   13a44:	push	{r4, r5, lr}
   13a48:	sub	sp, sp, #140	; 0x8c
   13a4c:	ldr	r4, [r3, ip]
   13a50:	tst	r1, #24
   13a54:	ldr	r3, [r4]
   13a58:	str	r3, [sp, #132]	; 0x84
   13a5c:	bne	13aac <__snprintf_chk@plt+0x2cd4>
   13a60:	mov	r5, r2
   13a64:	mov	r1, sp
   13a68:	mov	r2, #128	; 0x80
   13a6c:	bl	10be0 <read@plt>
   13a70:	cmp	r0, #128	; 0x80
   13a74:	beq	13a90 <__snprintf_chk@plt+0x2cb8>
   13a78:	ldr	r2, [sp, #132]	; 0x84
   13a7c:	ldr	r3, [r4]
   13a80:	cmp	r2, r3
   13a84:	bne	13ab4 <__snprintf_chk@plt+0x2cdc>
   13a88:	add	sp, sp, #140	; 0x8c
   13a8c:	pop	{r4, r5, pc}
   13a90:	ldr	r3, [r5, #132]	; 0x84
   13a94:	cmp	r3, #0
   13a98:	beq	13a78 <__snprintf_chk@plt+0x2ca0>
   13a9c:	ldr	r1, [r5, #140]	; 0x8c
   13aa0:	ldr	r0, [sp]
   13aa4:	blx	r3
   13aa8:	b	13a78 <__snprintf_chk@plt+0x2ca0>
   13aac:	bl	13a20 <__snprintf_chk@plt+0x2c48>
   13ab0:	b	13a78 <__snprintf_chk@plt+0x2ca0>
   13ab4:	bl	10c28 <__stack_chk_fail@plt>
   13ab8:	andeq	r7, r1, ip, ror #9
   13abc:	andeq	r0, r0, r0, asr #1
   13ac0:	ldr	r3, [pc, #20]	; 13adc <__snprintf_chk@plt+0x2d04>
   13ac4:	mov	r1, #0
   13ac8:	add	r3, pc, r3
   13acc:	mov	r2, #1
   13ad0:	str	r1, [r3, #520]	; 0x208
   13ad4:	str	r2, [r3, #516]	; 0x204
   13ad8:	bx	lr
   13adc:	andeq	r7, r1, r4, lsl #11
   13ae0:	ldr	r3, [pc, #16]	; 13af8 <__snprintf_chk@plt+0x2d20>
   13ae4:	mov	r2, #1
   13ae8:	add	r3, pc, r3
   13aec:	str	r2, [r3, #520]	; 0x208
   13af0:	str	r2, [r3, #516]	; 0x204
   13af4:	bx	lr
   13af8:	andeq	r7, r1, r4, ror #10
   13afc:	ldr	ip, [pc, #236]	; 13bf0 <__snprintf_chk@plt+0x2e18>
   13b00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b04:	add	ip, pc, ip
   13b08:	ldr	lr, [pc, #228]	; 13bf4 <__snprintf_chk@plt+0x2e1c>
   13b0c:	mov	r7, r0
   13b10:	mov	r0, ip
   13b14:	ldr	ip, [ip, lr]
   13b18:	sub	sp, sp, #36	; 0x24
   13b1c:	clz	r4, r2
   13b20:	lsr	r4, r4, #5
   13b24:	str	ip, [sp, #4]
   13b28:	cmp	r7, #127	; 0x7f
   13b2c:	orrhi	r4, r4, #1
   13b30:	ldr	ip, [ip]
   13b34:	cmp	r4, #0
   13b38:	str	ip, [sp, #28]
   13b3c:	ldr	fp, [sp, #72]	; 0x48
   13b40:	bne	13bdc <__snprintf_chk@plt+0x2e04>
   13b44:	mov	r0, #20
   13b48:	mov	r9, r1
   13b4c:	mov	sl, r3
   13b50:	mov	r8, r2
   13b54:	bl	10c64 <malloc@plt>
   13b58:	subs	r5, r0, #0
   13b5c:	beq	13be4 <__snprintf_chk@plt+0x2e0c>
   13b60:	ldr	r6, [pc, #144]	; 13bf8 <__snprintf_chk@plt+0x2e20>
   13b64:	stm	r5, {r7, r9}
   13b68:	add	r6, pc, r6
   13b6c:	str	r8, [r5, #8]
   13b70:	ldr	r0, [r6]
   13b74:	str	fp, [r5, #12]
   13b78:	str	sl, [r5, #16]
   13b7c:	add	r3, sp, #8
   13b80:	mov	r2, r7
   13b84:	mov	r1, #1
   13b88:	str	r9, [sp, #8]
   13b8c:	str	r4, [sp, #12]
   13b90:	str	r4, [sp, #20]
   13b94:	str	r5, [sp, #16]
   13b98:	bl	10c94 <epoll_ctl@plt>
   13b9c:	subs	r9, r0, #0
   13ba0:	addge	r6, r6, r7, lsl #2
   13ba4:	movge	r9, r4
   13ba8:	strge	r5, [r6, #4]
   13bac:	blt	13bd0 <__snprintf_chk@plt+0x2df8>
   13bb0:	ldr	r3, [sp, #4]
   13bb4:	ldr	r2, [sp, #28]
   13bb8:	mov	r0, r9
   13bbc:	ldr	r3, [r3]
   13bc0:	cmp	r2, r3
   13bc4:	bne	13bec <__snprintf_chk@plt+0x2e14>
   13bc8:	add	sp, sp, #36	; 0x24
   13bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13bd0:	mov	r0, r5
   13bd4:	bl	10bf8 <free@plt>
   13bd8:	b	13bb0 <__snprintf_chk@plt+0x2dd8>
   13bdc:	mvn	r9, #21
   13be0:	b	13bb0 <__snprintf_chk@plt+0x2dd8>
   13be4:	mvn	r9, #11
   13be8:	b	13bb0 <__snprintf_chk@plt+0x2dd8>
   13bec:	bl	10c28 <__stack_chk_fail@plt>
   13bf0:	andeq	r7, r1, r8, lsr #8
   13bf4:	andeq	r0, r0, r0, asr #1
   13bf8:	andeq	r7, r1, r4, ror #9
   13bfc:	ldr	r3, [pc, #156]	; 13ca0 <__snprintf_chk@plt+0x2ec8>
   13c00:	ldr	r2, [pc, #156]	; 13ca4 <__snprintf_chk@plt+0x2ecc>
   13c04:	add	r3, pc, r3
   13c08:	push	{r4, r5, r6, r7, lr}
   13c0c:	sub	sp, sp, #28
   13c10:	ldr	r6, [r3, r2]
   13c14:	cmp	r0, #127	; 0x7f
   13c18:	ldr	r3, [r6]
   13c1c:	str	r3, [sp, #20]
   13c20:	bhi	13c8c <__snprintf_chk@plt+0x2eb4>
   13c24:	ldr	r3, [pc, #124]	; 13ca8 <__snprintf_chk@plt+0x2ed0>
   13c28:	add	r3, pc, r3
   13c2c:	add	r0, r3, r0, lsl #2
   13c30:	ldr	r4, [r0, #4]
   13c34:	cmp	r4, #0
   13c38:	beq	13c94 <__snprintf_chk@plt+0x2ebc>
   13c3c:	mov	r5, #0
   13c40:	mov	r7, r1
   13c44:	ldr	r0, [r3]
   13c48:	str	r5, [sp, #12]
   13c4c:	str	r5, [sp, #4]
   13c50:	mov	r3, sp
   13c54:	ldr	r2, [r4]
   13c58:	mov	r1, #3
   13c5c:	str	r7, [sp]
   13c60:	str	r4, [sp, #8]
   13c64:	bl	10c94 <epoll_ctl@plt>
   13c68:	cmp	r0, #0
   13c6c:	movge	r0, r5
   13c70:	strge	r7, [r4, #4]
   13c74:	ldr	r2, [sp, #20]
   13c78:	ldr	r3, [r6]
   13c7c:	cmp	r2, r3
   13c80:	bne	13c9c <__snprintf_chk@plt+0x2ec4>
   13c84:	add	sp, sp, #28
   13c88:	pop	{r4, r5, r6, r7, pc}
   13c8c:	mvn	r0, #21
   13c90:	b	13c74 <__snprintf_chk@plt+0x2e9c>
   13c94:	mvn	r0, #5
   13c98:	b	13c74 <__snprintf_chk@plt+0x2e9c>
   13c9c:	bl	10c28 <__stack_chk_fail@plt>
   13ca0:	andeq	r7, r1, r8, lsr #6
   13ca4:	andeq	r0, r0, r0, asr #1
   13ca8:	andeq	r7, r1, r4, lsr #8
   13cac:	cmp	r0, #127	; 0x7f
   13cb0:	push	{r4, r5, r6, lr}
   13cb4:	bhi	13d14 <__snprintf_chk@plt+0x2f3c>
   13cb8:	ldr	r3, [pc, #100]	; 13d24 <__snprintf_chk@plt+0x2f4c>
   13cbc:	add	r3, pc, r3
   13cc0:	add	r1, r3, r0, lsl #2
   13cc4:	ldr	r4, [r1, #4]
   13cc8:	cmp	r4, #0
   13ccc:	beq	13d1c <__snprintf_chk@plt+0x2f44>
   13cd0:	mov	ip, #0
   13cd4:	ldr	r0, [r3]
   13cd8:	ldr	r2, [r4]
   13cdc:	mov	r3, ip
   13ce0:	str	ip, [r1, #4]
   13ce4:	mov	r1, #2
   13ce8:	bl	10c94 <epoll_ctl@plt>
   13cec:	ldr	r3, [r4, #12]
   13cf0:	cmp	r3, #0
   13cf4:	mov	r5, r0
   13cf8:	beq	13d04 <__snprintf_chk@plt+0x2f2c>
   13cfc:	ldr	r0, [r4, #16]
   13d00:	blx	r3
   13d04:	mov	r0, r4
   13d08:	bl	10bf8 <free@plt>
   13d0c:	mov	r0, r5
   13d10:	pop	{r4, r5, r6, pc}
   13d14:	mvn	r5, #21
   13d18:	b	13d0c <__snprintf_chk@plt+0x2f34>
   13d1c:	mvn	r5, #5
   13d20:	b	13d0c <__snprintf_chk@plt+0x2f34>
   13d24:	muleq	r1, r0, r3
   13d28:	ldr	r3, [pc, #484]	; 13f14 <__snprintf_chk@plt+0x313c>
   13d2c:	ldr	r2, [pc, #484]	; 13f18 <__snprintf_chk@plt+0x3140>
   13d30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d34:	add	r3, pc, r3
   13d38:	ldr	r5, [pc, #476]	; 13f1c <__snprintf_chk@plt+0x3144>
   13d3c:	ldr	r8, [r3, r2]
   13d40:	add	r5, pc, r5
   13d44:	sub	sp, sp, #176	; 0xb0
   13d48:	ldr	r4, [r5, #524]	; 0x20c
   13d4c:	ldr	r3, [r8]
   13d50:	cmp	r4, #0
   13d54:	str	r3, [sp, #172]	; 0xac
   13d58:	beq	13db8 <__snprintf_chk@plt+0x2fe0>
   13d5c:	mov	r2, #0
   13d60:	add	r6, r4, #4
   13d64:	mov	r1, r6
   13d68:	mov	r0, r2
   13d6c:	bl	10bec <sigprocmask@plt>
   13d70:	cmp	r0, #0
   13d74:	blt	13f08 <__snprintf_chk@plt+0x3130>
   13d78:	mov	r1, r6
   13d7c:	ldr	r2, [pc, #412]	; 13f20 <__snprintf_chk@plt+0x3148>
   13d80:	mvn	r0, #0
   13d84:	bl	10c40 <signalfd@plt>
   13d88:	cmp	r0, #0
   13d8c:	str	r0, [r4]
   13d90:	blt	13f08 <__snprintf_chk@plt+0x3130>
   13d94:	mov	r2, #0
   13d98:	str	r2, [sp]
   13d9c:	ldr	r2, [pc, #384]	; 13f24 <__snprintf_chk@plt+0x314c>
   13da0:	mov	r3, r4
   13da4:	add	r2, pc, r2
   13da8:	mov	r1, #1
   13dac:	bl	13afc <__snprintf_chk@plt+0x2d24>
   13db0:	cmp	r0, #0
   13db4:	blt	13efc <__snprintf_chk@plt+0x3124>
   13db8:	ldr	r7, [pc, #360]	; 13f28 <__snprintf_chk@plt+0x3150>
   13dbc:	add	r9, sp, #8
   13dc0:	add	r7, pc, r7
   13dc4:	ldr	r3, [r7, #516]	; 0x204
   13dc8:	cmp	r3, #0
   13dcc:	bne	13e24 <__snprintf_chk@plt+0x304c>
   13dd0:	mvn	r3, #0
   13dd4:	mov	r2, #10
   13dd8:	mov	r1, r9
   13ddc:	ldr	r0, [r7]
   13de0:	bl	10d60 <epoll_wait@plt>
   13de4:	cmp	r0, #0
   13de8:	blt	13dc4 <__snprintf_chk@plt+0x2fec>
   13dec:	beq	13dc4 <__snprintf_chk@plt+0x2fec>
   13df0:	add	r6, r9, r0, lsl #4
   13df4:	mov	r4, r9
   13df8:	ldr	r3, [r4, #8]
   13dfc:	ldr	r1, [r4], #16
   13e00:	ldr	r5, [r3, #8]
   13e04:	ldr	r2, [r3, #16]
   13e08:	ldr	r0, [r3]
   13e0c:	blx	r5
   13e10:	cmp	r4, r6
   13e14:	bne	13df8 <__snprintf_chk@plt+0x3020>
   13e18:	ldr	r3, [r7, #516]	; 0x204
   13e1c:	cmp	r3, #0
   13e20:	beq	13dd0 <__snprintf_chk@plt+0x2ff8>
   13e24:	ldr	r3, [r7, #524]	; 0x20c
   13e28:	cmp	r3, #0
   13e2c:	beq	13e5c <__snprintf_chk@plt+0x3084>
   13e30:	ldr	r0, [r3]
   13e34:	bl	13cac <__snprintf_chk@plt+0x2ed4>
   13e38:	ldr	r3, [r7, #524]	; 0x20c
   13e3c:	ldr	r0, [r3]
   13e40:	bl	10dcc <close@plt>
   13e44:	ldr	r2, [r7, #524]	; 0x20c
   13e48:	ldr	r3, [r2, #136]	; 0x88
   13e4c:	cmp	r3, #0
   13e50:	beq	13e5c <__snprintf_chk@plt+0x3084>
   13e54:	ldr	r0, [r2, #140]	; 0x8c
   13e58:	blx	r3
   13e5c:	ldr	r3, [pc, #200]	; 13f2c <__snprintf_chk@plt+0x3154>
   13e60:	ldr	sl, [pc, #200]	; 13f30 <__snprintf_chk@plt+0x3158>
   13e64:	add	r3, pc, r3
   13e68:	add	sl, pc, sl
   13e6c:	ldr	r9, [r3]
   13e70:	mov	r4, r3
   13e74:	add	r7, r3, #512	; 0x200
   13e78:	mov	r6, #0
   13e7c:	ldr	r5, [r4, #4]!
   13e80:	cmp	r5, #0
   13e84:	str	r6, [r4]
   13e88:	beq	13ec0 <__snprintf_chk@plt+0x30e8>
   13e8c:	mov	r3, #0
   13e90:	ldr	r2, [r5]
   13e94:	mov	r1, #2
   13e98:	mov	r0, r9
   13e9c:	bl	10c94 <epoll_ctl@plt>
   13ea0:	ldr	r3, [r5, #12]
   13ea4:	cmp	r3, #0
   13ea8:	beq	13eb8 <__snprintf_chk@plt+0x30e0>
   13eac:	ldr	r0, [r5, #16]
   13eb0:	blx	r3
   13eb4:	ldr	r9, [sl]
   13eb8:	mov	r0, r5
   13ebc:	bl	10bf8 <free@plt>
   13ec0:	cmp	r7, r4
   13ec4:	bne	13e7c <__snprintf_chk@plt+0x30a4>
   13ec8:	mov	r0, r9
   13ecc:	bl	10dcc <close@plt>
   13ed0:	ldr	r3, [pc, #92]	; 13f34 <__snprintf_chk@plt+0x315c>
   13ed4:	mov	r2, #0
   13ed8:	add	r3, pc, r3
   13edc:	ldr	r0, [r3, #520]	; 0x208
   13ee0:	str	r2, [r3]
   13ee4:	ldr	r2, [sp, #172]	; 0xac
   13ee8:	ldr	r3, [r8]
   13eec:	cmp	r2, r3
   13ef0:	bne	13f10 <__snprintf_chk@plt+0x3138>
   13ef4:	add	sp, sp, #176	; 0xb0
   13ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13efc:	ldr	r3, [r5, #524]	; 0x20c
   13f00:	ldr	r0, [r3]
   13f04:	bl	10dcc <close@plt>
   13f08:	mov	r0, #1
   13f0c:	b	13ee4 <__snprintf_chk@plt+0x310c>
   13f10:	bl	10c28 <__stack_chk_fail@plt>
   13f14:	strdeq	r7, [r1], -r8
   13f18:	andeq	r0, r0, r0, asr #1
   13f1c:	andeq	r7, r1, ip, lsl #6
   13f20:	andeq	r0, r8, r0, lsl #16
   13f24:			; <UNDEFINED> instruction: 0xfffffc8c
   13f28:	andeq	r7, r1, ip, lsl #5
   13f2c:	andeq	r7, r1, r8, ror #3
   13f30:	andeq	r7, r1, r4, ror #3
   13f34:	andeq	r7, r1, r4, ror r1
   13f38:	ldr	ip, [pc, #320]	; 14080 <__snprintf_chk@plt+0x32a8>
   13f3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13f40:	add	ip, pc, ip
   13f44:	ldr	lr, [pc, #312]	; 14084 <__snprintf_chk@plt+0x32ac>
   13f48:	sub	sp, sp, #32
   13f4c:	subs	r8, r1, #0
   13f50:	ldr	r6, [ip, lr]
   13f54:	mov	r5, r0
   13f58:	mov	r0, ip
   13f5c:	ldr	r1, [r6]
   13f60:	str	r1, [sp, #28]
   13f64:	beq	14054 <__snprintf_chk@plt+0x327c>
   13f68:	mov	r0, #16
   13f6c:	mov	r9, r2
   13f70:	mov	sl, r3
   13f74:	bl	10c64 <malloc@plt>
   13f78:	subs	r4, r0, #0
   13f7c:	beq	1405c <__snprintf_chk@plt+0x3284>
   13f80:	mov	r7, #0
   13f84:	stmib	r4, {r8, sl}
   13f88:	str	r9, [r4, #12]
   13f8c:	str	r7, [r4]
   13f90:	ldr	r1, [pc, #240]	; 14088 <__snprintf_chk@plt+0x32b0>
   13f94:	mov	r0, #1
   13f98:	bl	10cb8 <timerfd_create@plt>
   13f9c:	cmp	r0, r7
   13fa0:	mov	r2, r0
   13fa4:	str	r0, [r4]
   13fa8:	blt	1406c <__snprintf_chk@plt+0x3294>
   13fac:	cmp	r5, #0
   13fb0:	bne	13ffc <__snprintf_chk@plt+0x3224>
   13fb4:	ldr	r3, [pc, #208]	; 1408c <__snprintf_chk@plt+0x32b4>
   13fb8:	mov	r0, r2
   13fbc:	ldr	r2, [pc, #204]	; 14090 <__snprintf_chk@plt+0x32b8>
   13fc0:	add	r3, pc, r3
   13fc4:	str	r3, [sp]
   13fc8:	add	r2, pc, r2
   13fcc:	mov	r3, r4
   13fd0:	mov	r1, #1073741825	; 0x40000001
   13fd4:	bl	13afc <__snprintf_chk@plt+0x2d24>
   13fd8:	cmp	r0, #0
   13fdc:	ldr	r0, [r4]
   13fe0:	blt	14068 <__snprintf_chk@plt+0x3290>
   13fe4:	ldr	r2, [sp, #28]
   13fe8:	ldr	r3, [r6]
   13fec:	cmp	r2, r3
   13ff0:	bne	1407c <__snprintf_chk@plt+0x32a4>
   13ff4:	add	sp, sp, #32
   13ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ffc:	ldr	r1, [pc, #144]	; 14094 <__snprintf_chk@plt+0x32bc>
   14000:	add	r2, sp, #12
   14004:	str	r7, [sp, #12]
   14008:	umull	r3, r1, r1, r5
   1400c:	str	r7, [r2, #4]
   14010:	lsr	r1, r1, #6
   14014:	str	r1, [sp, #20]
   14018:	rsb	r3, r1, r1, lsl #5
   1401c:	add	r1, r1, r3, lsl #2
   14020:	mov	r3, r7
   14024:	sub	r5, r5, r1, lsl #3
   14028:	mov	r1, r7
   1402c:	rsb	ip, r5, r5, lsl #5
   14030:	rsb	ip, ip, ip, lsl #6
   14034:	add	r5, r5, ip, lsl #3
   14038:	lsl	r5, r5, #6
   1403c:	str	r5, [sp, #24]
   14040:	bl	10d84 <timerfd_settime@plt>
   14044:	cmp	r0, #0
   14048:	blt	14064 <__snprintf_chk@plt+0x328c>
   1404c:	ldr	r2, [r4]
   14050:	b	13fb4 <__snprintf_chk@plt+0x31dc>
   14054:	mvn	r0, #21
   14058:	b	13fe4 <__snprintf_chk@plt+0x320c>
   1405c:	mvn	r0, #11
   14060:	b	13fe4 <__snprintf_chk@plt+0x320c>
   14064:	ldr	r0, [r4]
   14068:	bl	10dcc <close@plt>
   1406c:	mov	r0, r4
   14070:	bl	10bf8 <free@plt>
   14074:	mvn	r0, #4
   14078:	b	13fe4 <__snprintf_chk@plt+0x320c>
   1407c:	bl	10c28 <__stack_chk_fail@plt>
   14080:	andeq	r6, r1, ip, ror #31
   14084:	andeq	r0, r0, r0, asr #1
   14088:	andeq	r0, r8, r0, lsl #16
   1408c:			; <UNDEFINED> instruction: 0xfffff954
   14090:			; <UNDEFINED> instruction: 0xfffff984
   14094:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   14098:	ldr	r3, [pc, #176]	; 14150 <__snprintf_chk@plt+0x3378>
   1409c:	ldr	r2, [pc, #176]	; 14154 <__snprintf_chk@plt+0x337c>
   140a0:	add	r3, pc, r3
   140a4:	push	{r4, r5, lr}
   140a8:	sub	sp, sp, #28
   140ac:	ldr	r4, [r3, r2]
   140b0:	cmp	r1, #0
   140b4:	mov	r5, r0
   140b8:	ldr	r3, [r4]
   140bc:	str	r3, [sp, #20]
   140c0:	beq	14114 <__snprintf_chk@plt+0x333c>
   140c4:	ldr	r3, [pc, #140]	; 14158 <__snprintf_chk@plt+0x3380>
   140c8:	umull	r2, r3, r3, r1
   140cc:	lsr	r3, r3, #6
   140d0:	str	r3, [sp, #12]
   140d4:	rsb	r2, r3, r3, lsl #5
   140d8:	add	r2, r3, r2, lsl #2
   140dc:	mov	r3, #0
   140e0:	sub	r1, r1, r2, lsl #3
   140e4:	add	r2, sp, #4
   140e8:	rsb	ip, r1, r1, lsl #5
   140ec:	str	r3, [r2, #4]
   140f0:	rsb	ip, ip, ip, lsl #6
   140f4:	str	r3, [sp, #4]
   140f8:	add	r1, r1, ip, lsl #3
   140fc:	lsl	ip, r1, #6
   14100:	mov	r1, r3
   14104:	str	ip, [sp, #16]
   14108:	bl	10d84 <timerfd_settime@plt>
   1410c:	cmp	r0, #0
   14110:	blt	14144 <__snprintf_chk@plt+0x336c>
   14114:	mov	r0, r5
   14118:	mov	r1, #1073741825	; 0x40000001
   1411c:	bl	13bfc <__snprintf_chk@plt+0x2e24>
   14120:	cmp	r0, #0
   14124:	blt	14144 <__snprintf_chk@plt+0x336c>
   14128:	mov	r0, #0
   1412c:	ldr	r2, [sp, #20]
   14130:	ldr	r3, [r4]
   14134:	cmp	r2, r3
   14138:	bne	1414c <__snprintf_chk@plt+0x3374>
   1413c:	add	sp, sp, #28
   14140:	pop	{r4, r5, pc}
   14144:	mvn	r0, #4
   14148:	b	1412c <__snprintf_chk@plt+0x3354>
   1414c:	bl	10c28 <__stack_chk_fail@plt>
   14150:	andeq	r6, r1, ip, lsl #29
   14154:	andeq	r0, r0, r0, asr #1
   14158:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   1415c:	b	13cac <__snprintf_chk@plt+0x2ed4>
   14160:	cmp	r0, #0
   14164:	clz	ip, r1
   14168:	lsr	ip, ip, #5
   1416c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14170:	movne	r6, ip
   14174:	moveq	r6, #1
   14178:	cmp	r6, #0
   1417c:	bne	141e0 <__snprintf_chk@plt+0x3408>
   14180:	mov	r7, r0
   14184:	mov	r0, #144	; 0x90
   14188:	mov	r5, r1
   1418c:	mov	r8, r3
   14190:	mov	r9, r2
   14194:	bl	10c64 <malloc@plt>
   14198:	subs	r4, r0, #0
   1419c:	beq	141e8 <__snprintf_chk@plt+0x3410>
   141a0:	str	r5, [r4, #132]	; 0x84
   141a4:	ldr	r5, [pc, #68]	; 141f0 <__snprintf_chk@plt+0x3418>
   141a8:	mov	r0, r4
   141ac:	mvn	r3, #0
   141b0:	add	r5, pc, r5
   141b4:	str	r8, [r4, #136]	; 0x88
   141b8:	str	r9, [r4, #140]	; 0x8c
   141bc:	mov	r1, r7
   141c0:	str	r3, [r0], #4
   141c4:	mov	r2, #128	; 0x80
   141c8:	bl	10c10 <memcpy@plt>
   141cc:	ldr	r0, [r5, #524]	; 0x20c
   141d0:	bl	10bf8 <free@plt>
   141d4:	str	r4, [r5, #524]	; 0x20c
   141d8:	mov	r0, r6
   141dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141e0:	mvn	r0, #21
   141e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141e8:	mvn	r0, #11
   141ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   141f0:	muleq	r1, ip, lr
   141f4:	sub	r0, r1, r0
   141f8:	clz	r0, r0
   141fc:	lsr	r0, r0, #5
   14200:	bx	lr
   14204:	push	{r4, lr}
   14208:	mov	r4, r0
   1420c:	mov	r0, #8
   14210:	bl	14790 <__snprintf_chk@plt+0x39b8>
   14214:	mov	r2, #0
   14218:	str	r4, [r0]
   1421c:	str	r2, [r0, #4]
   14220:	pop	{r4, pc}
   14224:	mov	r3, r0
   14228:	mcr	15, 0, r0, cr7, cr10, {5}
   1422c:	ldrex	r2, [r3]
   14230:	sub	r2, r2, #1
   14234:	strex	r1, r2, [r3]
   14238:	cmp	r1, #0
   1423c:	bne	1422c <__snprintf_chk@plt+0x3454>
   14240:	cmp	r2, #0
   14244:	mcr	15, 0, r0, cr7, cr10, {5}
   14248:	bxne	lr
   1424c:	b	10bf8 <free@plt>
   14250:	push	{r4, lr}
   14254:	mov	r0, #16
   14258:	bl	14790 <__snprintf_chk@plt+0x39b8>
   1425c:	mov	r2, #0
   14260:	mov	r3, r0
   14264:	str	r2, [r0]
   14268:	str	r2, [r0, #4]
   1426c:	str	r2, [r0, #8]
   14270:	str	r2, [r0, #12]
   14274:	mcr	15, 0, r0, cr7, cr10, {5}
   14278:	ldrex	r2, [r3]
   1427c:	add	r2, r2, #1
   14280:	strex	r1, r2, [r3]
   14284:	cmp	r1, #0
   14288:	bne	14278 <__snprintf_chk@plt+0x34a0>
   1428c:	mcr	15, 0, r0, cr7, cr10, {5}
   14290:	pop	{r4, pc}
   14294:	push	{r4, lr}
   14298:	subs	r4, r0, #0
   1429c:	beq	142d8 <__snprintf_chk@plt+0x3500>
   142a0:	mov	r0, r1
   142a4:	bl	14204 <__snprintf_chk@plt+0x342c>
   142a8:	ldr	r3, [r4, #8]
   142ac:	cmp	r3, #0
   142b0:	strne	r0, [r3, #4]
   142b4:	ldr	r3, [r4, #4]
   142b8:	str	r0, [r4, #8]
   142bc:	cmp	r3, #0
   142c0:	ldr	r3, [r4, #12]
   142c4:	streq	r0, [r4, #4]
   142c8:	mov	r0, #1
   142cc:	add	r3, r3, r0
   142d0:	str	r3, [r4, #12]
   142d4:	pop	{r4, pc}
   142d8:	mov	r0, r4
   142dc:	pop	{r4, pc}
   142e0:	push	{r4, lr}
   142e4:	subs	r4, r0, #0
   142e8:	beq	14320 <__snprintf_chk@plt+0x3548>
   142ec:	mov	r0, r1
   142f0:	bl	14204 <__snprintf_chk@plt+0x342c>
   142f4:	ldr	r2, [r4, #8]
   142f8:	ldr	r3, [r4, #4]
   142fc:	cmp	r2, #0
   14300:	str	r3, [r0, #4]
   14304:	ldr	r3, [r4, #12]
   14308:	str	r0, [r4, #4]
   1430c:	streq	r0, [r4, #8]
   14310:	mov	r0, #1
   14314:	add	r3, r3, r0
   14318:	str	r3, [r4, #12]
   1431c:	pop	{r4, pc}
   14320:	mov	r0, r4
   14324:	pop	{r4, pc}
   14328:	push	{r4, r5, r6, lr}
   1432c:	subs	r5, r0, #0
   14330:	beq	143a8 <__snprintf_chk@plt+0x35d0>
   14334:	ldr	r4, [r5, #4]
   14338:	cmp	r4, #0
   1433c:	beq	14368 <__snprintf_chk@plt+0x3590>
   14340:	ldr	r3, [r4]
   14344:	cmp	r1, r3
   14348:	bne	1435c <__snprintf_chk@plt+0x3584>
   1434c:	b	14370 <__snprintf_chk@plt+0x3598>
   14350:	ldr	r3, [r4]
   14354:	cmp	r3, r1
   14358:	beq	14370 <__snprintf_chk@plt+0x3598>
   1435c:	ldr	r4, [r4, #4]
   14360:	cmp	r4, #0
   14364:	bne	14350 <__snprintf_chk@plt+0x3578>
   14368:	mov	r0, r4
   1436c:	pop	{r4, r5, r6, pc}
   14370:	mov	r0, r2
   14374:	bl	14204 <__snprintf_chk@plt+0x342c>
   14378:	ldr	r3, [r4, #4]
   1437c:	cmp	r3, #0
   14380:	str	r3, [r0, #4]
   14384:	beq	143a0 <__snprintf_chk@plt+0x35c8>
   14388:	ldr	r3, [r5, #12]
   1438c:	str	r0, [r4, #4]
   14390:	add	r3, r3, #1
   14394:	str	r3, [r5, #12]
   14398:	mov	r0, #1
   1439c:	pop	{r4, r5, r6, pc}
   143a0:	str	r0, [r5, #8]
   143a4:	b	14388 <__snprintf_chk@plt+0x35b0>
   143a8:	mov	r0, r5
   143ac:	pop	{r4, r5, r6, pc}
   143b0:	push	{r4, r5, r6, lr}
   143b4:	subs	r4, r0, #0
   143b8:	beq	143f8 <__snprintf_chk@plt+0x3620>
   143bc:	ldr	r5, [r4, #4]
   143c0:	cmp	r5, #0
   143c4:	beq	143f0 <__snprintf_chk@plt+0x3618>
   143c8:	ldr	r2, [r5, #4]
   143cc:	mov	r0, r5
   143d0:	cmp	r2, #0
   143d4:	str	r2, [r4, #4]
   143d8:	streq	r2, [r4, #8]
   143dc:	ldr	r5, [r5]
   143e0:	bl	10bf8 <free@plt>
   143e4:	ldr	r3, [r4, #12]
   143e8:	sub	r3, r3, #1
   143ec:	str	r3, [r4, #12]
   143f0:	mov	r0, r5
   143f4:	pop	{r4, r5, r6, pc}
   143f8:	mov	r5, r4
   143fc:	b	143f0 <__snprintf_chk@plt+0x3618>
   14400:	cmp	r0, #0
   14404:	bxeq	lr
   14408:	ldr	r0, [r0, #4]
   1440c:	cmp	r0, #0
   14410:	ldrne	r0, [r0]
   14414:	bx	lr
   14418:	cmp	r0, #0
   1441c:	bxeq	lr
   14420:	ldr	r0, [r0, #8]
   14424:	cmp	r0, #0
   14428:	ldrne	r0, [r0]
   1442c:	bx	lr
   14430:	cmp	r1, #0
   14434:	cmpne	r0, #0
   14438:	bxeq	lr
   1443c:	ldr	r3, [r0, #4]
   14440:	cmp	r3, #0
   14444:	bxeq	lr
   14448:	push	{r4, r5, r6, r7, r8, lr}
   1444c:	mov	r7, r1
   14450:	mov	r4, r0
   14454:	mov	r6, r2
   14458:	mcr	15, 0, r0, cr7, cr10, {5}
   1445c:	ldrex	r2, [r4]
   14460:	add	r2, r2, #1
   14464:	strex	r1, r2, [r4]
   14468:	cmp	r1, #0
   1446c:	bne	1445c <__snprintf_chk@plt+0x3684>
   14470:	mcr	15, 0, r0, cr7, cr10, {5}
   14474:	ldr	r0, [r4, #4]
   14478:	mov	r1, r6
   1447c:	cmp	r0, #0
   14480:	beq	144a0 <__snprintf_chk@plt+0x36c8>
   14484:	ldr	r0, [r4]
   14488:	cmp	r0, #1
   1448c:	ble	144a0 <__snprintf_chk@plt+0x36c8>
   14490:	ldm	r3, {r0, r5}
   14494:	blx	r7
   14498:	subs	r3, r5, #0
   1449c:	bne	14474 <__snprintf_chk@plt+0x369c>
   144a0:	mov	r0, r4
   144a4:	pop	{r4, r5, r6, r7, r8, lr}
   144a8:	b	14224 <__snprintf_chk@plt+0x344c>
   144ac:	cmp	r0, #0
   144b0:	beq	14514 <__snprintf_chk@plt+0x373c>
   144b4:	cmp	r1, #0
   144b8:	push	{r4, r5, r6, lr}
   144bc:	mov	r5, r1
   144c0:	mov	r6, r2
   144c4:	beq	14508 <__snprintf_chk@plt+0x3730>
   144c8:	ldr	r4, [r0, #4]
   144cc:	cmp	r4, #0
   144d0:	bne	144e4 <__snprintf_chk@plt+0x370c>
   144d4:	b	14500 <__snprintf_chk@plt+0x3728>
   144d8:	ldr	r4, [r4, #4]
   144dc:	cmp	r4, #0
   144e0:	beq	14500 <__snprintf_chk@plt+0x3728>
   144e4:	mov	r1, r6
   144e8:	ldr	r0, [r4]
   144ec:	blx	r5
   144f0:	cmp	r0, #0
   144f4:	beq	144d8 <__snprintf_chk@plt+0x3700>
   144f8:	ldr	r0, [r4]
   144fc:	pop	{r4, r5, r6, pc}
   14500:	mov	r0, #0
   14504:	pop	{r4, r5, r6, pc}
   14508:	ldr	r5, [pc, #12]	; 1451c <__snprintf_chk@plt+0x3744>
   1450c:	add	r5, pc, r5
   14510:	b	144c8 <__snprintf_chk@plt+0x36f0>
   14514:	mov	r0, #0
   14518:	bx	lr
   1451c:			; <UNDEFINED> instruction: 0xfffffce0
   14520:	push	{r4, lr}
   14524:	subs	r4, r0, #0
   14528:	beq	145b0 <__snprintf_chk@plt+0x37d8>
   1452c:	ldr	r2, [r4, #4]
   14530:	cmp	r2, #0
   14534:	beq	145b8 <__snprintf_chk@plt+0x37e0>
   14538:	ldr	ip, [r2]
   1453c:	ldr	r0, [r2, #4]
   14540:	cmp	r1, ip
   14544:	beq	1459c <__snprintf_chk@plt+0x37c4>
   14548:	cmp	r0, #0
   1454c:	popeq	{r4, pc}
   14550:	ldr	lr, [r0]
   14554:	ldr	ip, [r0, #4]
   14558:	cmp	lr, r1
   1455c:	beq	14574 <__snprintf_chk@plt+0x379c>
   14560:	mov	r2, r0
   14564:	mov	r0, ip
   14568:	cmp	r0, #0
   1456c:	bne	14550 <__snprintf_chk@plt+0x3778>
   14570:	pop	{r4, pc}
   14574:	str	ip, [r2, #4]
   14578:	ldr	r1, [r0, #4]
   1457c:	cmp	r1, #0
   14580:	streq	r2, [r4, #8]
   14584:	bl	10bf8 <free@plt>
   14588:	ldr	r3, [r4, #12]
   1458c:	mov	r0, #1
   14590:	sub	r3, r3, #1
   14594:	str	r3, [r4, #12]
   14598:	pop	{r4, pc}
   1459c:	str	r0, [r4, #4]
   145a0:	mov	r1, r0
   145a4:	mov	r0, r2
   145a8:	mov	r2, #0
   145ac:	b	1457c <__snprintf_chk@plt+0x37a4>
   145b0:	mov	r0, r4
   145b4:	pop	{r4, pc}
   145b8:	mov	r0, r2
   145bc:	pop	{r4, pc}
   145c0:	push	{r4, r5, r6, r7, r8, lr}
   145c4:	subs	r8, r0, #0
   145c8:	beq	14650 <__snprintf_chk@plt+0x3878>
   145cc:	cmp	r1, #0
   145d0:	mov	r5, r1
   145d4:	mov	r7, r2
   145d8:	beq	1465c <__snprintf_chk@plt+0x3884>
   145dc:	ldr	r4, [r8, #4]
   145e0:	cmp	r4, #0
   145e4:	beq	14650 <__snprintf_chk@plt+0x3878>
   145e8:	mov	r6, #0
   145ec:	b	14600 <__snprintf_chk@plt+0x3828>
   145f0:	ldr	r3, [r4, #4]
   145f4:	mov	r6, r4
   145f8:	subs	r4, r3, #0
   145fc:	beq	14650 <__snprintf_chk@plt+0x3878>
   14600:	mov	r1, r7
   14604:	ldr	r0, [r4]
   14608:	blx	r5
   1460c:	cmp	r0, #0
   14610:	beq	145f0 <__snprintf_chk@plt+0x3818>
   14614:	ldr	r3, [r4, #4]
   14618:	cmp	r6, #0
   1461c:	strne	r3, [r6, #4]
   14620:	ldrne	r3, [r4, #4]
   14624:	streq	r3, [r8, #4]
   14628:	cmp	r3, #0
   1462c:	mov	r0, r4
   14630:	streq	r6, [r8, #8]
   14634:	ldr	r4, [r4]
   14638:	bl	10bf8 <free@plt>
   1463c:	ldr	r3, [r8, #12]
   14640:	mov	r0, r4
   14644:	sub	r3, r3, #1
   14648:	str	r3, [r8, #12]
   1464c:	pop	{r4, r5, r6, r7, r8, pc}
   14650:	mov	r4, #0
   14654:	mov	r0, r4
   14658:	pop	{r4, r5, r6, r7, r8, pc}
   1465c:	ldr	r5, [pc, #4]	; 14668 <__snprintf_chk@plt+0x3890>
   14660:	add	r5, pc, r5
   14664:	b	145dc <__snprintf_chk@plt+0x3804>
   14668:			; <UNDEFINED> instruction: 0xfffffb8c
   1466c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14670:	subs	r4, r0, #0
   14674:	beq	14728 <__snprintf_chk@plt+0x3950>
   14678:	cmp	r1, #0
   1467c:	mov	r6, r3
   14680:	mov	r9, r2
   14684:	mov	r8, r1
   14688:	ldr	r7, [r4, #4]
   1468c:	beq	146e0 <__snprintf_chk@plt+0x3908>
   14690:	cmp	r7, #0
   14694:	beq	14728 <__snprintf_chk@plt+0x3950>
   14698:	ldr	r7, [r4, #12]
   1469c:	mov	r5, #0
   146a0:	b	146bc <__snprintf_chk@plt+0x38e4>
   146a4:	cmp	r6, #0
   146a8:	moveq	r7, r3
   146ac:	beq	146b8 <__snprintf_chk@plt+0x38e0>
   146b0:	blx	r6
   146b4:	ldr	r7, [r4, #12]
   146b8:	add	r5, r5, #1
   146bc:	mov	r2, r9
   146c0:	mov	r1, r8
   146c4:	mov	r0, r4
   146c8:	bl	145c0 <__snprintf_chk@plt+0x37e8>
   146cc:	ldr	r3, [r4, #12]
   146d0:	cmp	r3, r7
   146d4:	bne	146a4 <__snprintf_chk@plt+0x38cc>
   146d8:	mov	r0, r5
   146dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   146e0:	cmp	r7, #0
   146e4:	str	r1, [r4, #4]
   146e8:	str	r1, [r4, #8]
   146ec:	str	r1, [r4, #12]
   146f0:	beq	14728 <__snprintf_chk@plt+0x3950>
   146f4:	mov	r5, r1
   146f8:	cmp	r6, #0
   146fc:	ldr	r4, [r7, #4]
   14700:	beq	1470c <__snprintf_chk@plt+0x3934>
   14704:	ldr	r0, [r7]
   14708:	blx	r6
   1470c:	mov	r0, r7
   14710:	bl	10bf8 <free@plt>
   14714:	subs	r7, r4, #0
   14718:	add	r5, r5, #1
   1471c:	bne	146f8 <__snprintf_chk@plt+0x3920>
   14720:	mov	r0, r5
   14724:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14728:	mov	r5, #0
   1472c:	mov	r0, r5
   14730:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14734:	subs	r2, r0, #0
   14738:	bxeq	lr
   1473c:	push	{r4, lr}
   14740:	mov	r4, r2
   14744:	mov	r2, #0
   14748:	mov	r3, r1
   1474c:	mov	r1, r2
   14750:	bl	1466c <__snprintf_chk@plt+0x3894>
   14754:	mov	r0, r4
   14758:	pop	{r4, lr}
   1475c:	b	14224 <__snprintf_chk@plt+0x344c>
   14760:	cmp	r0, #0
   14764:	ldrne	r0, [r0, #4]
   14768:	bx	lr
   1476c:	cmp	r0, #0
   14770:	ldrne	r0, [r0, #12]
   14774:	bx	lr
   14778:	cmp	r0, #0
   1477c:	ldrne	r0, [r0, #12]
   14780:	clzne	r0, r0
   14784:	lsrne	r0, r0, #5
   14788:	moveq	r0, #1
   1478c:	bx	lr
   14790:	push	{r4, r5, r6, lr}
   14794:	subs	r3, r0, #0
   14798:	ldr	r5, [pc, #64]	; 147e0 <__snprintf_chk@plt+0x3a08>
   1479c:	add	r5, pc, r5
   147a0:	beq	147d8 <__snprintf_chk@plt+0x3a00>
   147a4:	mov	r4, r3
   147a8:	bl	10c64 <malloc@plt>
   147ac:	cmp	r0, #0
   147b0:	popne	{r4, r5, r6, pc}
   147b4:	ldr	r1, [pc, #40]	; 147e4 <__snprintf_chk@plt+0x3a0c>
   147b8:	ldr	r2, [pc, #40]	; 147e8 <__snprintf_chk@plt+0x3a10>
   147bc:	mov	r3, r4
   147c0:	ldr	r0, [r5, r1]
   147c4:	add	r2, pc, r2
   147c8:	mov	r1, #1
   147cc:	ldr	r0, [r0]
   147d0:	bl	10d3c <__fprintf_chk@plt>
   147d4:	bl	10db4 <abort@plt>
   147d8:	mov	r0, r3
   147dc:	pop	{r4, r5, r6, pc}
   147e0:	muleq	r1, r0, r7
   147e4:	andeq	r0, r0, r4, asr #1
   147e8:	strdeq	r1, [r0], -r8
   147ec:	push	{r2, r3}
   147f0:	ldr	r3, [pc, #132]	; 1487c <__snprintf_chk@plt+0x3aa4>
   147f4:	ldr	r2, [pc, #132]	; 14880 <__snprintf_chk@plt+0x3aa8>
   147f8:	add	r3, pc, r3
   147fc:	push	{r4, r5, r6, r7, lr}
   14800:	sub	sp, sp, #100	; 0x64
   14804:	ldr	r4, [r3, r2]
   14808:	ldr	ip, [sp, #120]	; 0x78
   1480c:	ldr	r3, [r4]
   14810:	cmp	ip, #0
   14814:	cmpne	r0, #0
   14818:	str	r3, [sp, #92]	; 0x5c
   1481c:	beq	14858 <__snprintf_chk@plt+0x3a80>
   14820:	add	lr, sp, #124	; 0x7c
   14824:	mov	r3, #78	; 0x4e
   14828:	add	r5, sp, #12
   1482c:	mov	r6, r1
   14830:	mov	r7, r0
   14834:	mov	r1, r3
   14838:	stm	sp, {ip, lr}
   1483c:	mov	r0, r5
   14840:	mov	r2, #1
   14844:	str	lr, [sp, #8]
   14848:	bl	10c04 <__vsnprintf_chk@plt>
   1484c:	mov	r1, r6
   14850:	mov	r0, r5
   14854:	blx	r7
   14858:	ldr	r2, [sp, #92]	; 0x5c
   1485c:	ldr	r3, [r4]
   14860:	cmp	r2, r3
   14864:	bne	14878 <__snprintf_chk@plt+0x3aa0>
   14868:	add	sp, sp, #100	; 0x64
   1486c:	pop	{r4, r5, r6, r7, lr}
   14870:	add	sp, sp, #8
   14874:	bx	lr
   14878:	bl	10c28 <__stack_chk_fail@plt>
   1487c:	andeq	r6, r1, r4, lsr r7
   14880:	andeq	r0, r0, r0, asr #1
   14884:	ldr	ip, [pc, #356]	; 149f0 <__snprintf_chk@plt+0x3c18>
   14888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1488c:	add	ip, pc, ip
   14890:	ldr	lr, [pc, #348]	; 149f4 <__snprintf_chk@plt+0x3c1c>
   14894:	sub	sp, sp, #92	; 0x5c
   14898:	cmp	r3, #0
   1489c:	ldr	lr, [ip, lr]
   148a0:	clz	r4, r2
   148a4:	str	lr, [sp, #12]
   148a8:	lsr	r4, r4, #5
   148ac:	ldr	lr, [lr]
   148b0:	moveq	r4, #1
   148b4:	cmp	r4, #0
   148b8:	str	lr, [sp, #84]	; 0x54
   148bc:	str	r3, [sp, #4]
   148c0:	ldr	sl, [sp, #128]	; 0x80
   148c4:	bne	149d0 <__snprintf_chk@plt+0x3bf8>
   148c8:	mov	r9, r2
   148cc:	strb	r0, [sp, #16]
   148d0:	sub	r7, r1, #1
   148d4:	bl	10cd0 <__ctype_b_loc@plt>
   148d8:	ldr	r8, [pc, #280]	; 149f8 <__snprintf_chk@plt+0x3c20>
   148dc:	add	r3, sp, #16
   148e0:	str	r3, [sp, #8]
   148e4:	mov	r3, r9
   148e8:	add	r8, pc, r8
   148ec:	mov	r5, r4
   148f0:	mov	r6, #32
   148f4:	mov	fp, r3
   148f8:	mov	r9, r0
   148fc:	ldrb	r1, [r7, #1]!
   14900:	add	r0, r5, r5, lsl #1
   14904:	add	r3, sp, #88	; 0x58
   14908:	and	lr, r1, #15
   1490c:	ldrb	ip, [r8, r1, lsr #4]
   14910:	ldrb	lr, [r8, lr]
   14914:	add	r0, r3, r0
   14918:	ldr	r3, [r9]
   1491c:	strb	r6, [r0, #-71]	; 0xffffffb9
   14920:	strb	lr, [r0, #-69]	; 0xffffffbb
   14924:	strb	ip, [r0, #-70]	; 0xffffffba
   14928:	lsl	r0, r1, #1
   1492c:	add	r4, r4, #1
   14930:	ldrh	ip, [r3, r0]
   14934:	add	r3, sp, #88	; 0x58
   14938:	add	r0, r3, r5
   1493c:	tst	ip, #16384	; 0x4000
   14940:	moveq	r1, #46	; 0x2e
   14944:	ands	r5, r4, #15
   14948:	strb	r1, [r0, #-21]	; 0xffffffeb
   1494c:	bne	14970 <__snprintf_chk@plt+0x3b98>
   14950:	strb	r6, [sp, #65]	; 0x41
   14954:	strb	r6, [sp, #66]	; 0x42
   14958:	strb	r5, [sp, #83]	; 0x53
   1495c:	mov	r1, sl
   14960:	ldr	r0, [sp, #8]
   14964:	ldr	r3, [sp, #4]
   14968:	blx	r3
   1496c:	strb	r6, [sp, #16]
   14970:	cmp	r4, fp
   14974:	bcc	148fc <__snprintf_chk@plt+0x3b24>
   14978:	cmp	r5, #0
   1497c:	beq	149d0 <__snprintf_chk@plt+0x3bf8>
   14980:	add	r0, sp, #16
   14984:	add	r3, r5, r5, lsl #1
   14988:	add	r5, r5, #50	; 0x32
   1498c:	add	r3, r0, r3
   14990:	add	r5, r0, r5
   14994:	add	r1, sp, #64	; 0x40
   14998:	mov	r2, #32
   1499c:	strb	r2, [r3, #1]
   149a0:	strb	r2, [r3, #2]
   149a4:	strb	r2, [r3, #3]!
   149a8:	cmp	r1, r3
   149ac:	strb	r2, [r5, #1]!
   149b0:	bne	1499c <__snprintf_chk@plt+0x3bc4>
   149b4:	mov	r3, #0
   149b8:	strb	r3, [sp, #83]	; 0x53
   149bc:	strb	r2, [sp, #65]	; 0x41
   149c0:	strb	r2, [sp, #66]	; 0x42
   149c4:	mov	r1, sl
   149c8:	ldr	r3, [sp, #4]
   149cc:	blx	r3
   149d0:	ldr	r3, [sp, #12]
   149d4:	ldr	r2, [sp, #84]	; 0x54
   149d8:	ldr	r3, [r3]
   149dc:	cmp	r2, r3
   149e0:	bne	149ec <__snprintf_chk@plt+0x3c14>
   149e4:	add	sp, sp, #92	; 0x5c
   149e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149ec:	bl	10c28 <__stack_chk_fail@plt>
   149f0:	andeq	r6, r1, r0, lsr #13
   149f4:	andeq	r0, r0, r0, asr #1
   149f8:	andeq	r1, r0, r0, asr #7
   149fc:	ldr	r2, [pc, #172]	; 14ab0 <__snprintf_chk@plt+0x3cd8>
   14a00:	ldr	r3, [pc, #172]	; 14ab4 <__snprintf_chk@plt+0x3cdc>
   14a04:	add	r2, pc, r2
   14a08:	push	{r4, r5, r6, lr}
   14a0c:	sub	sp, sp, #4160	; 0x1040
   14a10:	ldr	r4, [r2, r3]
   14a14:	ldr	ip, [pc, #156]	; 14ab8 <__snprintf_chk@plt+0x3ce0>
   14a18:	sub	sp, sp, #48	; 0x30
   14a1c:	add	ip, pc, ip
   14a20:	str	r1, [sp, #8]
   14a24:	ldr	lr, [r4]
   14a28:	str	ip, [sp]
   14a2c:	add	ip, sp, #4160	; 0x1040
   14a30:	add	ip, ip, #44	; 0x2c
   14a34:	mov	r3, #4096	; 0x1000
   14a38:	add	r6, sp, #108	; 0x6c
   14a3c:	str	r0, [sp, #4]
   14a40:	mov	r1, r3
   14a44:	str	lr, [ip]
   14a48:	mov	r0, r6
   14a4c:	mov	r2, #1
   14a50:	bl	10dd8 <__snprintf_chk@plt>
   14a54:	mov	r1, r6
   14a58:	add	r2, sp, #16
   14a5c:	mov	r0, #3
   14a60:	bl	10d9c <__lxstat@plt>
   14a64:	cmp	r0, #0
   14a68:	movne	r0, #0
   14a6c:	bne	14a88 <__snprintf_chk@plt+0x3cb0>
   14a70:	add	r5, sp, #112	; 0x70
   14a74:	ldr	r3, [r5, #-80]	; 0xffffffb0
   14a78:	and	r3, r3, #61440	; 0xf000
   14a7c:	cmp	r3, #16384	; 0x4000
   14a80:	movne	r0, #0
   14a84:	moveq	r0, #4
   14a88:	add	r3, sp, #4160	; 0x1040
   14a8c:	add	r3, r3, #44	; 0x2c
   14a90:	ldr	r2, [r3]
   14a94:	ldr	r3, [r4]
   14a98:	cmp	r2, r3
   14a9c:	bne	14aac <__snprintf_chk@plt+0x3cd4>
   14aa0:	add	sp, sp, #4160	; 0x1040
   14aa4:	add	sp, sp, #48	; 0x30
   14aa8:	pop	{r4, r5, r6, pc}
   14aac:	bl	10c28 <__stack_chk_fail@plt>
   14ab0:	andeq	r6, r1, r8, lsr #10
   14ab4:	andeq	r0, r0, r0, asr #1
   14ab8:	andeq	r1, r0, r0, asr #5
   14abc:	ldr	ip, [r0]
   14ac0:	push	{lr}		; (str lr, [sp, #-4]!)
   14ac4:	add	r3, ip, #1
   14ac8:	bic	r3, r3, ip
   14acc:	clz	r3, r3
   14ad0:	rsb	r3, r3, #31
   14ad4:	add	r2, r3, #1
   14ad8:	ands	r2, r2, #255	; 0xff
   14adc:	moveq	lr, #1
   14ae0:	movne	lr, #0
   14ae4:	cmp	r2, r1
   14ae8:	movls	r1, lr
   14aec:	orrhi	r1, lr, #1
   14af0:	cmp	r1, #0
   14af4:	moveq	r1, #1
   14af8:	movne	r2, #0
   14afc:	orreq	r3, ip, r1, lsl r3
   14b00:	streq	r3, [r0]
   14b04:	mov	r0, r2
   14b08:	pop	{pc}		; (ldr pc, [sp], #4)
   14b0c:	cmp	r1, #0
   14b10:	subne	r1, r1, #1
   14b14:	ldrne	r3, [r0]
   14b18:	movne	r2, #1
   14b1c:	bicne	r1, r3, r2, lsl r1
   14b20:	strne	r1, [r0]
   14b24:	bx	lr
   14b28:	cmp	r0, #1
   14b2c:	beq	14b68 <__snprintf_chk@plt+0x3d90>
   14b30:	ldr	r3, [pc, #60]	; 14b74 <__snprintf_chk@plt+0x3d9c>
   14b34:	ldr	r2, [pc, #60]	; 14b78 <__snprintf_chk@plt+0x3da0>
   14b38:	add	r3, pc, r3
   14b3c:	add	r2, pc, r2
   14b40:	ldrh	r1, [r3, #8]!
   14b44:	cmp	r1, r0
   14b48:	beq	14b60 <__snprintf_chk@plt+0x3d88>
   14b4c:	ldr	r2, [r3, #12]
   14b50:	cmp	r2, #0
   14b54:	bne	14b40 <__snprintf_chk@plt+0x3d68>
   14b58:	ldr	r2, [pc, #28]	; 14b7c <__snprintf_chk@plt+0x3da4>
   14b5c:	add	r2, pc, r2
   14b60:	mov	r0, r2
   14b64:	bx	lr
   14b68:	ldr	r2, [pc, #16]	; 14b80 <__snprintf_chk@plt+0x3da8>
   14b6c:	add	r2, pc, r2
   14b70:	b	14b60 <__snprintf_chk@plt+0x3d88>
   14b74:	ldrdeq	r5, [r1], -r8
   14b78:	andeq	r1, r0, r8, lsr #3
   14b7c:	muleq	r0, r4, r1
   14b80:	andeq	r1, r0, r0, lsl #3
   14b84:	lsr	r3, r0, #16
   14b88:	lsl	r3, r3, #16
   14b8c:	cmp	r3, #0
   14b90:	beq	14ba0 <__snprintf_chk@plt+0x3dc8>
   14b94:	ldr	r0, [pc, #12]	; 14ba8 <__snprintf_chk@plt+0x3dd0>
   14b98:	add	r0, pc, r0
   14b9c:	bx	lr
   14ba0:	uxth	r0, r0
   14ba4:	b	14b28 <__snprintf_chk@plt+0x3d50>
   14ba8:	andeq	r1, r0, r8, asr r1
   14bac:	ldr	r3, [pc, #312]	; 14cec <__snprintf_chk@plt+0x3f14>
   14bb0:	ldr	r2, [pc, #312]	; 14cf0 <__snprintf_chk@plt+0x3f18>
   14bb4:	add	r3, pc, r3
   14bb8:	push	{r4, r5, r6, r7, lr}
   14bbc:	sub	sp, sp, #20
   14bc0:	ldr	r7, [r3, r2]
   14bc4:	subs	r6, r0, #0
   14bc8:	ldr	r3, [r7]
   14bcc:	str	r3, [sp, #12]
   14bd0:	beq	14c74 <__snprintf_chk@plt+0x3e9c>
   14bd4:	bl	10cdc <strlen@plt>
   14bd8:	cmp	r0, #35	; 0x23
   14bdc:	bls	14c40 <__snprintf_chk@plt+0x3e68>
   14be0:	cmp	r0, #36	; 0x24
   14be4:	bne	14c74 <__snprintf_chk@plt+0x3e9c>
   14be8:	ldr	r4, [pc, #260]	; 14cf4 <__snprintf_chk@plt+0x3f1c>
   14bec:	ldr	r0, [pc, #260]	; 14cf8 <__snprintf_chk@plt+0x3f20>
   14bf0:	ldr	r5, [pc, #260]	; 14cfc <__snprintf_chk@plt+0x3f24>
   14bf4:	add	r4, pc, r4
   14bf8:	add	r0, pc, r0
   14bfc:	add	r5, pc, r5
   14c00:	b	14c14 <__snprintf_chk@plt+0x3e3c>
   14c04:	ldr	r5, [r4, #12]
   14c08:	cmp	r5, #0
   14c0c:	beq	14c7c <__snprintf_chk@plt+0x3ea4>
   14c10:	ldr	r0, [r4, #8]!
   14c14:	mov	r1, r6
   14c18:	bl	10c34 <strcasecmp@plt>
   14c1c:	cmp	r0, #0
   14c20:	bne	14c04 <__snprintf_chk@plt+0x3e2c>
   14c24:	ldr	r2, [sp, #12]
   14c28:	ldr	r3, [r7]
   14c2c:	mov	r0, r5
   14c30:	cmp	r2, r3
   14c34:	bne	14ce8 <__snprintf_chk@plt+0x3f10>
   14c38:	add	sp, sp, #20
   14c3c:	pop	{r4, r5, r6, r7, pc}
   14c40:	mov	r4, #0
   14c44:	mov	r0, r6
   14c48:	mov	r2, r4
   14c4c:	add	r1, sp, #8
   14c50:	str	r4, [sp, #8]
   14c54:	bl	10bc8 <strtol@plt>
   14c58:	ldr	r5, [sp, #8]
   14c5c:	cmp	r5, r4
   14c60:	str	r0, [sp, #4]
   14c64:	beq	14c24 <__snprintf_chk@plt+0x3e4c>
   14c68:	ldrb	r2, [r5]
   14c6c:	cmp	r2, r4
   14c70:	beq	14ca4 <__snprintf_chk@plt+0x3ecc>
   14c74:	mov	r5, #0
   14c78:	b	14c24 <__snprintf_chk@plt+0x3e4c>
   14c7c:	ldr	r1, [pc, #124]	; 14d00 <__snprintf_chk@plt+0x3f28>
   14c80:	mov	r2, #28
   14c84:	add	r1, pc, r1
   14c88:	add	r0, r6, #8
   14c8c:	bl	10d00 <strncasecmp@plt>
   14c90:	cmp	r0, #0
   14c94:	beq	14cbc <__snprintf_chk@plt+0x3ee4>
   14c98:	ldr	r5, [pc, #100]	; 14d04 <__snprintf_chk@plt+0x3f2c>
   14c9c:	add	r5, pc, r5
   14ca0:	b	14c24 <__snprintf_chk@plt+0x3e4c>
   14ca4:	cmp	r0, #65536	; 0x10000
   14ca8:	bcs	14cdc <__snprintf_chk@plt+0x3f04>
   14cac:	uxth	r0, r0
   14cb0:	bl	14b28 <__snprintf_chk@plt+0x3d50>
   14cb4:	mov	r5, r0
   14cb8:	b	14c24 <__snprintf_chk@plt+0x3e4c>
   14cbc:	ldr	r1, [pc, #68]	; 14d08 <__snprintf_chk@plt+0x3f30>
   14cc0:	mov	r0, r6
   14cc4:	add	r2, sp, #4
   14cc8:	add	r1, pc, r1
   14ccc:	bl	10d78 <sscanf@plt>
   14cd0:	cmp	r0, #1
   14cd4:	bne	14c74 <__snprintf_chk@plt+0x3e9c>
   14cd8:	ldr	r0, [sp, #4]
   14cdc:	bl	14b84 <__snprintf_chk@plt+0x3dac>
   14ce0:	mov	r5, r0
   14ce4:	b	14c24 <__snprintf_chk@plt+0x3e4c>
   14ce8:	bl	10c28 <__stack_chk_fail@plt>
   14cec:	andeq	r6, r1, r8, ror r3
   14cf0:	andeq	r0, r0, r0, asr #1
   14cf4:	andeq	r4, r1, r4, lsl sp
   14cf8:	andeq	r1, r0, r0, lsl #2
   14cfc:	andeq	r1, r0, r4, lsr #2
   14d00:	ldrdeq	r1, [r0], -r0
   14d04:	andeq	r1, r0, r4, lsr #1
   14d08:	andeq	r1, r0, r8, lsl #1
   14d0c:	ldr	r3, [pc, #116]	; 14d88 <__snprintf_chk@plt+0x3fb0>
   14d10:	ldr	ip, [pc, #116]	; 14d8c <__snprintf_chk@plt+0x3fb4>
   14d14:	mov	r2, #0
   14d18:	add	r3, pc, r3
   14d1c:	push	{r4, lr}
   14d20:	add	ip, pc, ip
   14d24:	add	r3, r3, #352	; 0x160
   14d28:	mov	r4, r2
   14d2c:	mov	r1, r2
   14d30:	b	14d48 <__snprintf_chk@plt+0x3f70>
   14d34:	ldr	ip, [r3, #12]
   14d38:	add	r1, r1, #1
   14d3c:	cmp	ip, #0
   14d40:	beq	14d70 <__snprintf_chk@plt+0x3f98>
   14d44:	ldrh	r2, [r3, #8]!
   14d48:	ldrb	lr, [r3, #2]
   14d4c:	cmp	lr, #0
   14d50:	beq	14d60 <__snprintf_chk@plt+0x3f88>
   14d54:	cmp	r2, r0
   14d58:	bhi	14d70 <__snprintf_chk@plt+0x3f98>
   14d5c:	mov	r4, r1
   14d60:	cmp	r2, r0
   14d64:	bne	14d34 <__snprintf_chk@plt+0x3f5c>
   14d68:	mov	r0, ip
   14d6c:	pop	{r4, pc}
   14d70:	ldr	r3, [pc, #24]	; 14d90 <__snprintf_chk@plt+0x3fb8>
   14d74:	add	r3, pc, r3
   14d78:	add	r4, r3, r4, lsl #3
   14d7c:	ldr	ip, [r4, #356]	; 0x164
   14d80:	mov	r0, ip
   14d84:	pop	{r4, pc}
   14d88:	strdeq	r4, [r1], -r0
   14d8c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14d90:	muleq	r1, r4, fp
   14d94:	push	{r4, r5, r6, r7, r8, lr}
   14d98:	subs	r7, r0, #0
   14d9c:	beq	14df0 <__snprintf_chk@plt+0x4018>
   14da0:	mov	r6, r1
   14da4:	mov	r5, r2
   14da8:	bl	10c1c <strdup@plt>
   14dac:	ldrb	r3, [r0]
   14db0:	mov	r7, r0
   14db4:	cmp	r3, #0
   14db8:	beq	14df0 <__snprintf_chk@plt+0x4018>
   14dbc:	ldrb	r4, [r6]
   14dc0:	cmp	r4, #0
   14dc4:	beq	14df0 <__snprintf_chk@plt+0x4018>
   14dc8:	mov	r0, r7
   14dcc:	b	14dd4 <__snprintf_chk@plt+0x3ffc>
   14dd0:	strb	r5, [r0]
   14dd4:	mov	r1, r4
   14dd8:	bl	10ce8 <strchr@plt>
   14ddc:	cmp	r0, #0
   14de0:	bne	14dd0 <__snprintf_chk@plt+0x3ff8>
   14de4:	ldrb	r4, [r6, #1]!
   14de8:	cmp	r4, #0
   14dec:	bne	14dc8 <__snprintf_chk@plt+0x3ff0>
   14df0:	mov	r0, r7
   14df4:	pop	{r4, r5, r6, r7, r8, pc}
   14df8:	cmp	r1, #0
   14dfc:	cmpne	r0, #0
   14e00:	beq	14e60 <__snprintf_chk@plt+0x4088>
   14e04:	ldrb	r3, [r0]
   14e08:	ldrb	r2, [r1]
   14e0c:	cmp	r3, #0
   14e10:	beq	14e58 <__snprintf_chk@plt+0x4080>
   14e14:	cmp	r2, #0
   14e18:	beq	14e60 <__snprintf_chk@plt+0x4088>
   14e1c:	push	{r4, r5, r6, lr}
   14e20:	mov	r5, r1
   14e24:	mov	r4, r0
   14e28:	bl	10cdc <strlen@plt>
   14e2c:	mov	r6, r0
   14e30:	mov	r0, r5
   14e34:	bl	10cdc <strlen@plt>
   14e38:	cmp	r6, r0
   14e3c:	mov	r2, r0
   14e40:	blt	14e68 <__snprintf_chk@plt+0x4090>
   14e44:	sub	r0, r6, r0
   14e48:	add	r0, r4, r0
   14e4c:	mov	r1, r5
   14e50:	pop	{r4, r5, r6, lr}
   14e54:	b	10da8 <strncmp@plt>
   14e58:	cmp	r2, #0
   14e5c:	beq	14e1c <__snprintf_chk@plt+0x4044>
   14e60:	mvn	r0, #0
   14e64:	bx	lr
   14e68:	mvn	r0, #0
   14e6c:	pop	{r4, r5, r6, pc}
   14e70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14e74:	mov	r7, r0
   14e78:	ldr	r6, [pc, #72]	; 14ec8 <__snprintf_chk@plt+0x40f0>
   14e7c:	ldr	r5, [pc, #72]	; 14ecc <__snprintf_chk@plt+0x40f4>
   14e80:	add	r6, pc, r6
   14e84:	add	r5, pc, r5
   14e88:	sub	r6, r6, r5
   14e8c:	mov	r8, r1
   14e90:	mov	r9, r2
   14e94:	bl	10ba8 <strtol@plt-0x20>
   14e98:	asrs	r6, r6, #2
   14e9c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ea0:	mov	r4, #0
   14ea4:	add	r4, r4, #1
   14ea8:	ldr	r3, [r5], #4
   14eac:	mov	r2, r9
   14eb0:	mov	r1, r8
   14eb4:	mov	r0, r7
   14eb8:	blx	r3
   14ebc:	cmp	r6, r4
   14ec0:	bne	14ea4 <__snprintf_chk@plt+0x40cc>
   14ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ec8:	andeq	r4, r1, r4, lsl #21
   14ecc:	andeq	r4, r1, ip, ror sl
   14ed0:	bx	lr

Disassembly of section .fini:

00014ed4 <.fini>:
   14ed4:	push	{r3, lr}
   14ed8:	pop	{r3, pc}
