
raspbian-preinstalled/xlsclients:     file format elf32-littlearm


Disassembly of section .init:

00010ab8 <_init@@Base>:
   10ab8:	push	{r3, lr}
   10abc:	bl	11050 <abort@plt+0x3f8>
   10ac0:	pop	{r3, pc}

Disassembly of section .plt:

00010ac4 <xcb_get_atom_name@plt-0x14>:
   10ac4:	push	{lr}		; (str lr, [sp, #-4]!)
   10ac8:	ldr	lr, [pc, #4]	; 10ad4 <_init@@Base+0x1c>
   10acc:	add	lr, pc, lr
   10ad0:	ldr	pc, [lr, #8]!
   10ad4:	andeq	r2, r1, ip, lsr #10

00010ad8 <xcb_get_atom_name@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #73728	; 0x12000
   10ae0:	ldr	pc, [ip, #1324]!	; 0x52c

00010ae4 <strtol@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #73728	; 0x12000
   10aec:	ldr	pc, [ip, #1316]!	; 0x524

00010af0 <xcb_get_property@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #73728	; 0x12000
   10af8:	ldr	pc, [ip, #1308]!	; 0x51c

00010afc <free@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #73728	; 0x12000
   10b04:	ldr	pc, [ip, #1300]!	; 0x514

00010b08 <xcb_get_property_value@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #73728	; 0x12000
   10b10:	ldr	pc, [ip, #1292]!	; 0x50c

00010b14 <xcb_connect@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #73728	; 0x12000
   10b1c:	ldr	pc, [ip, #1284]!	; 0x504

00010b20 <xcb_get_atom_name_reply@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #73728	; 0x12000
   10b28:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b2c <xcb_query_tree@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #73728	; 0x12000
   10b34:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b38 <xcb_intern_atom@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #73728	; 0x12000
   10b40:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b44 <xcb_query_tree_children@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #73728	; 0x12000
   10b4c:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b50 <_IO_putc@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #73728	; 0x12000
   10b58:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b5c <fwrite@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #73728	; 0x12000
   10b64:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b68 <xcb_screen_next@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #73728	; 0x12000
   10b70:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b74 <xcb_query_tree_reply@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #73728	; 0x12000
   10b7c:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b80 <getenv@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #73728	; 0x12000
   10b88:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b8c <xcb_setup_roots_iterator@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #73728	; 0x12000
   10b94:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b98 <puts@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #73728	; 0x12000
   10ba0:	ldr	pc, [ip, #1196]!	; 0x4ac

00010ba4 <malloc@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #73728	; 0x12000
   10bac:	ldr	pc, [ip, #1188]!	; 0x4a4

00010bb0 <__libc_start_main@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #73728	; 0x12000
   10bb8:	ldr	pc, [ip, #1180]!	; 0x49c

00010bbc <xcb_get_atom_name_name@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #73728	; 0x12000
   10bc4:	ldr	pc, [ip, #1172]!	; 0x494

00010bc8 <__gmon_start__@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #73728	; 0x12000
   10bd0:	ldr	pc, [ip, #1164]!	; 0x48c

00010bd4 <__ctype_b_loc@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #73728	; 0x12000
   10bdc:	ldr	pc, [ip, #1156]!	; 0x484

00010be0 <exit@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #73728	; 0x12000
   10be8:	ldr	pc, [ip, #1148]!	; 0x47c

00010bec <__printf_chk@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #73728	; 0x12000
   10bf4:	ldr	pc, [ip, #1140]!	; 0x474

00010bf8 <__fprintf_chk@plt>:
   10bf8:	add	ip, pc, #0, 12
   10bfc:	add	ip, ip, #73728	; 0x12000
   10c00:	ldr	pc, [ip, #1132]!	; 0x46c

00010c04 <xcb_get_atom_name_name_length@plt>:
   10c04:	add	ip, pc, #0, 12
   10c08:	add	ip, ip, #73728	; 0x12000
   10c0c:	ldr	pc, [ip, #1124]!	; 0x464

00010c10 <strnlen@plt>:
   10c10:	add	ip, pc, #0, 12
   10c14:	add	ip, ip, #73728	; 0x12000
   10c18:	ldr	pc, [ip, #1116]!	; 0x45c

00010c1c <xcb_intern_atom_reply@plt>:
   10c1c:	add	ip, pc, #0, 12
   10c20:	add	ip, ip, #73728	; 0x12000
   10c24:	ldr	pc, [ip, #1108]!	; 0x454

00010c28 <xcb_get_property_reply@plt>:
   10c28:	add	ip, pc, #0, 12
   10c2c:	add	ip, ip, #73728	; 0x12000
   10c30:	ldr	pc, [ip, #1100]!	; 0x44c

00010c34 <xcb_disconnect@plt>:
   10c34:	add	ip, pc, #0, 12
   10c38:	add	ip, ip, #73728	; 0x12000
   10c3c:	ldr	pc, [ip, #1092]!	; 0x444

00010c40 <xcb_connection_has_error@plt>:
   10c40:	add	ip, pc, #0, 12
   10c44:	add	ip, ip, #73728	; 0x12000
   10c48:	ldr	pc, [ip, #1084]!	; 0x43c

00010c4c <xcb_get_setup@plt>:
   10c4c:	add	ip, pc, #0, 12
   10c50:	add	ip, ip, #73728	; 0x12000
   10c54:	ldr	pc, [ip, #1076]!	; 0x434

00010c58 <abort@plt>:
   10c58:	add	ip, pc, #0, 12
   10c5c:	add	ip, ip, #73728	; 0x12000
   10c60:	ldr	pc, [ip, #1068]!	; 0x42c

Disassembly of section .text:

00010c64 <.text>:
   10c64:	ldr	r3, [pc, #868]	; 10fd0 <abort@plt+0x378>
   10c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c6c:	sub	sp, sp, #60	; 0x3c
   10c70:	ldr	r9, [pc, #860]	; 10fd4 <abort@plt+0x37c>
   10c74:	ldr	r8, [r1]
   10c78:	ldr	r3, [r3]
   10c7c:	mov	r4, #0
   10c80:	cmp	r0, #1
   10c84:	str	r8, [r9]
   10c88:	str	r3, [sp, #52]	; 0x34
   10c8c:	str	r4, [sp, #36]	; 0x24
   10c90:	ble	10dd0 <abort@plt+0x178>
   10c94:	mov	r6, r1
   10c98:	ldr	r1, [r1, #4]
   10c9c:	ldrb	r3, [r1]
   10ca0:	cmp	r3, #45	; 0x2d
   10ca4:	bne	10d64 <abort@plt+0x10c>
   10ca8:	ldr	fp, [pc, #808]	; 10fd8 <abort@plt+0x380>
   10cac:	mov	r7, r0
   10cb0:	mov	sl, r4
   10cb4:	mov	r3, r4
   10cb8:	mov	r5, #1
   10cbc:	ldrb	r2, [r1, #1]
   10cc0:	cmp	r2, #109	; 0x6d
   10cc4:	beq	10d98 <abort@plt+0x140>
   10cc8:	cmp	r2, #118	; 0x76
   10ccc:	beq	10d88 <abort@plt+0x130>
   10cd0:	cmp	r2, #100	; 0x64
   10cd4:	beq	10d18 <abort@plt+0xc0>
   10cd8:	cmp	r2, #0
   10cdc:	add	r1, r1, #1
   10ce0:	beq	10d48 <abort@plt+0xf0>
   10ce4:	cmp	r2, #97	; 0x61
   10ce8:	beq	10dc0 <abort@plt+0x168>
   10cec:	cmp	r2, #108	; 0x6c
   10cf0:	beq	10dac <abort@plt+0x154>
   10cf4:	ldr	r2, [pc, #736]	; 10fdc <abort@plt+0x384>
   10cf8:	str	r1, [sp]
   10cfc:	mov	r3, r8
   10d00:	ldr	r0, [r2]
   10d04:	mov	r1, #1
   10d08:	ldr	r2, [pc, #720]	; 10fe0 <abort@plt+0x388>
   10d0c:	bl	10bf8 <__fprintf_chk@plt>
   10d10:	mov	r0, #0
   10d14:	bl	11104 <abort@plt+0x4ac>
   10d18:	add	r5, r5, #1
   10d1c:	cmp	r7, r5
   10d20:	bgt	10dc8 <abort@plt+0x170>
   10d24:	ldr	r0, [pc, #696]	; 10fe4 <abort@plt+0x38c>
   10d28:	bl	11104 <abort@plt+0x4ac>
   10d2c:	mov	r2, #10
   10d30:	mov	r1, #0
   10d34:	ldr	r0, [r6, r5, lsl #2]
   10d38:	str	r3, [sp, #12]
   10d3c:	bl	10ae4 <strtol@plt>
   10d40:	ldr	r3, [sp, #12]
   10d44:	mov	fp, r0
   10d48:	add	r5, r5, #1
   10d4c:	cmp	r7, r5
   10d50:	ble	10ed0 <abort@plt+0x278>
   10d54:	ldr	r1, [r6, r5, lsl #2]
   10d58:	ldrb	r2, [r1]
   10d5c:	cmp	r2, #45	; 0x2d
   10d60:	beq	10cbc <abort@plt+0x64>
   10d64:	ldr	r2, [pc, #624]	; 10fdc <abort@plt+0x384>
   10d68:	str	r1, [sp]
   10d6c:	mov	r3, r8
   10d70:	ldr	r0, [r2]
   10d74:	mov	r1, #1
   10d78:	ldr	r2, [pc, #616]	; 10fe8 <abort@plt+0x390>
   10d7c:	bl	10bf8 <__fprintf_chk@plt>
   10d80:	mov	r0, #0
   10d84:	bl	11104 <abort@plt+0x4ac>
   10d88:	ldr	r0, [pc, #604]	; 10fec <abort@plt+0x394>
   10d8c:	bl	10b98 <puts@plt>
   10d90:	mov	r0, #0
   10d94:	bl	10be0 <exit@plt>
   10d98:	add	r5, r5, #1
   10d9c:	cmp	r7, r5
   10da0:	bgt	10d2c <abort@plt+0xd4>
   10da4:	ldr	r0, [pc, #580]	; 10ff0 <abort@plt+0x398>
   10da8:	bl	11104 <abort@plt+0x4ac>
   10dac:	mov	r4, #1
   10db0:	ldrb	r2, [r1, #1]!
   10db4:	cmp	r2, #0
   10db8:	bne	10ce4 <abort@plt+0x8c>
   10dbc:	b	10d48 <abort@plt+0xf0>
   10dc0:	mov	sl, #1
   10dc4:	b	10db0 <abort@plt+0x158>
   10dc8:	ldr	r3, [r6, r5, lsl #2]
   10dcc:	b	10d48 <abort@plt+0xf0>
   10dd0:	mov	r0, r4
   10dd4:	add	r1, sp, #36	; 0x24
   10dd8:	bl	10b14 <xcb_connect@plt>
   10ddc:	mov	r5, r0
   10de0:	bl	10c40 <xcb_connection_has_error@plt>
   10de4:	subs	r4, r0, #0
   10de8:	bne	10f20 <abort@plt+0x2c8>
   10dec:	mov	r0, #12
   10df0:	bl	10ba4 <malloc@plt>
   10df4:	add	ip, r9, #4
   10df8:	ldr	r3, [pc, #500]	; 10ff4 <abort@plt+0x39c>
   10dfc:	mov	r2, #8
   10e00:	mov	r1, r4
   10e04:	ldr	fp, [pc, #460]	; 10fd8 <abort@plt+0x380>
   10e08:	mov	r6, r0
   10e0c:	mov	r0, r5
   10e10:	str	ip, [r6, #8]
   10e14:	str	r5, [r6]
   10e18:	bl	10b38 <xcb_intern_atom@plt>
   10e1c:	mov	r1, r6
   10e20:	str	r0, [r6, #4]
   10e24:	ldr	r0, [pc, #460]	; 10ff8 <abort@plt+0x3a0>
   10e28:	bl	11160 <abort@plt+0x508>
   10e2c:	mov	r0, r5
   10e30:	bl	10c4c <xcb_get_setup@plt>
   10e34:	add	r6, sp, #16
   10e38:	mov	r1, r0
   10e3c:	mov	r0, r6
   10e40:	bl	10b8c <xcb_setup_roots_iterator@plt>
   10e44:	ldm	r6, {r0, r1, r2}
   10e48:	add	r6, sp, #40	; 0x28
   10e4c:	mov	r7, #0
   10e50:	stm	r6, {r0, r1, r2}
   10e54:	b	10e64 <abort@plt+0x20c>
   10e58:	mov	r0, r6
   10e5c:	bl	10b68 <xcb_screen_next@plt>
   10e60:	add	r7, r7, #1
   10e64:	ldr	r3, [sp, #36]	; 0x24
   10e68:	cmp	r3, r7
   10e6c:	bgt	10e58 <abort@plt+0x200>
   10e70:	ldr	r1, [sp, #40]	; 0x28
   10e74:	mov	r3, fp
   10e78:	mov	r2, r4
   10e7c:	ldr	r1, [r1]
   10e80:	mov	r0, r5
   10e84:	bl	111e0 <abort@plt+0x588>
   10e88:	b	10ea8 <abort@plt+0x250>
   10e8c:	ldr	r3, [r4]
   10e90:	ldr	r0, [r4, #4]
   10e94:	blx	r3
   10e98:	ldr	r3, [r4, #8]
   10e9c:	mov	r0, r4
   10ea0:	str	r3, [r9, #8]
   10ea4:	bl	10afc <free@plt>
   10ea8:	ldr	r4, [r9, #8]
   10eac:	cmp	r4, #0
   10eb0:	bne	10e8c <abort@plt+0x234>
   10eb4:	ldr	r3, [pc, #320]	; 10ffc <abort@plt+0x3a4>
   10eb8:	ldr	r2, [pc, #320]	; 11000 <abort@plt+0x3a8>
   10ebc:	mov	r0, r5
   10ec0:	str	r2, [r3]
   10ec4:	bl	10c34 <xcb_disconnect@plt>
   10ec8:	mov	r0, r4
   10ecc:	bl	10be0 <exit@plt>
   10ed0:	add	r1, sp, #36	; 0x24
   10ed4:	mov	r0, r3
   10ed8:	str	r3, [sp, #12]
   10edc:	bl	10b14 <xcb_connect@plt>
   10ee0:	mov	r5, r0
   10ee4:	bl	10c40 <xcb_connection_has_error@plt>
   10ee8:	subs	r6, r0, #0
   10eec:	beq	10f38 <abort@plt+0x2e0>
   10ef0:	ldr	r3, [sp, #12]
   10ef4:	cmp	r3, #0
   10ef8:	beq	10f20 <abort@plt+0x2c8>
   10efc:	ldr	r2, [pc, #216]	; 10fdc <abort@plt+0x384>
   10f00:	str	r3, [sp]
   10f04:	mov	r1, #1
   10f08:	ldr	r0, [r2]
   10f0c:	ldr	r3, [r9]
   10f10:	ldr	r2, [pc, #236]	; 11004 <abort@plt+0x3ac>
   10f14:	bl	10bf8 <__fprintf_chk@plt>
   10f18:	mov	r0, #1
   10f1c:	bl	10be0 <exit@plt>
   10f20:	ldr	r0, [pc, #224]	; 11008 <abort@plt+0x3b0>
   10f24:	bl	10b80 <getenv@plt>
   10f28:	ldr	r3, [pc, #220]	; 1100c <abort@plt+0x3b4>
   10f2c:	cmp	r0, #0
   10f30:	movne	r3, r0
   10f34:	b	10efc <abort@plt+0x2a4>
   10f38:	mov	r0, #12
   10f3c:	bl	10ba4 <malloc@plt>
   10f40:	ldr	ip, [pc, #200]	; 11010 <abort@plt+0x3b8>
   10f44:	ldr	r3, [pc, #168]	; 10ff4 <abort@plt+0x39c>
   10f48:	mov	r2, #8
   10f4c:	mov	r1, r6
   10f50:	mov	r7, r0
   10f54:	mov	r0, r5
   10f58:	str	ip, [r7, #8]
   10f5c:	str	r5, [r7]
   10f60:	bl	10b38 <xcb_intern_atom@plt>
   10f64:	mov	r1, r7
   10f68:	str	r0, [r7, #4]
   10f6c:	ldr	r0, [pc, #132]	; 10ff8 <abort@plt+0x3a0>
   10f70:	bl	11160 <abort@plt+0x508>
   10f74:	mov	r0, r5
   10f78:	bl	10c4c <xcb_get_setup@plt>
   10f7c:	cmp	sl, #0
   10f80:	beq	10e34 <abort@plt+0x1dc>
   10f84:	add	r6, sp, #16
   10f88:	mov	r1, r0
   10f8c:	mov	r0, r6
   10f90:	bl	10b8c <xcb_setup_roots_iterator@plt>
   10f94:	ldm	r6, {r0, r1, r2}
   10f98:	add	r6, sp, #40	; 0x28
   10f9c:	stm	r6, {r0, r1, r2}
   10fa0:	mov	r3, fp
   10fa4:	ldr	r1, [sp, #40]	; 0x28
   10fa8:	mov	r2, r4
   10fac:	mov	r0, r5
   10fb0:	ldr	r1, [r1]
   10fb4:	bl	111e0 <abort@plt+0x588>
   10fb8:	mov	r0, r6
   10fbc:	bl	10b68 <xcb_screen_next@plt>
   10fc0:	ldr	r3, [sp, #44]	; 0x2c
   10fc4:	cmp	r3, #0
   10fc8:	bne	10fa0 <abort@plt+0x348>
   10fcc:	b	10ea8 <abort@plt+0x250>
   10fd0:	andeq	r2, r2, r0, lsl #30
   10fd4:	andeq	r3, r2, ip, lsr #1
   10fd8:	andeq	r2, r0, r0, lsl r7
   10fdc:	andeq	r3, r2, r0, lsr #1
   10fe0:	andeq	r2, r1, r4, rrx
   10fe4:	andeq	r2, r1, r4, lsl r0
   10fe8:	andeq	r2, r1, r4, lsl #1
   10fec:	andeq	r2, r1, r0, asr r0
   10ff0:	andeq	r2, r1, r4, lsr r0
   10ff4:	ldrdeq	r2, [r1], -r0
   10ff8:	andeq	r1, r1, r8, lsr #3
   10ffc:	muleq	r2, ip, r0
   11000:	strheq	r3, [r2], -r4
   11004:	andeq	r2, r1, ip, lsr #1
   11008:	andeq	r2, r1, r4, lsr #1
   1100c:	andeq	r1, r1, ip, lsr #30
   11010:	strheq	r3, [r2], -r0
   11014:	mov	fp, #0
   11018:	mov	lr, #0
   1101c:	pop	{r1}		; (ldr r1, [sp], #4)
   11020:	mov	r2, sp
   11024:	push	{r2}		; (str r2, [sp, #-4]!)
   11028:	push	{r0}		; (str r0, [sp, #-4]!)
   1102c:	ldr	ip, [pc, #16]	; 11044 <abort@plt+0x3ec>
   11030:	push	{ip}		; (str ip, [sp, #-4]!)
   11034:	ldr	r0, [pc, #12]	; 11048 <abort@plt+0x3f0>
   11038:	ldr	r3, [pc, #12]	; 1104c <abort@plt+0x3f4>
   1103c:	bl	10bb0 <__libc_start_main@plt>
   11040:	bl	10c58 <abort@plt>
   11044:	andeq	r1, r1, r4, lsl pc
   11048:	andeq	r0, r1, r4, ror #24
   1104c:			; <UNDEFINED> instruction: 0x00011eb4
   11050:	ldr	r3, [pc, #20]	; 1106c <abort@plt+0x414>
   11054:	ldr	r2, [pc, #20]	; 11070 <abort@plt+0x418>
   11058:	add	r3, pc, r3
   1105c:	ldr	r2, [r3, r2]
   11060:	cmp	r2, #0
   11064:	bxeq	lr
   11068:	b	10bc8 <__gmon_start__@plt>
   1106c:	andeq	r1, r1, r0, lsr #31
   11070:	muleq	r0, r0, r0
   11074:	ldr	r0, [pc, #24]	; 11094 <abort@plt+0x43c>
   11078:	ldr	r3, [pc, #24]	; 11098 <abort@plt+0x440>
   1107c:	cmp	r3, r0
   11080:	bxeq	lr
   11084:	ldr	r3, [pc, #16]	; 1109c <abort@plt+0x444>
   11088:	cmp	r3, #0
   1108c:	bxeq	lr
   11090:	bx	r3
   11094:	andeq	r3, r2, r0, lsr #1
   11098:	andeq	r3, r2, r0, lsr #1
   1109c:	andeq	r0, r0, r0
   110a0:	ldr	r0, [pc, #36]	; 110cc <abort@plt+0x474>
   110a4:	ldr	r1, [pc, #36]	; 110d0 <abort@plt+0x478>
   110a8:	sub	r1, r1, r0
   110ac:	asr	r1, r1, #2
   110b0:	add	r1, r1, r1, lsr #31
   110b4:	asrs	r1, r1, #1
   110b8:	bxeq	lr
   110bc:	ldr	r3, [pc, #16]	; 110d4 <abort@plt+0x47c>
   110c0:	cmp	r3, #0
   110c4:	bxeq	lr
   110c8:	bx	r3
   110cc:	andeq	r3, r2, r0, lsr #1
   110d0:	andeq	r3, r2, r0, lsr #1
   110d4:	andeq	r0, r0, r0
   110d8:	push	{r4, lr}
   110dc:	ldr	r4, [pc, #24]	; 110fc <abort@plt+0x4a4>
   110e0:	ldrb	r3, [r4]
   110e4:	cmp	r3, #0
   110e8:	popne	{r4, pc}
   110ec:	bl	11074 <abort@plt+0x41c>
   110f0:	mov	r3, #1
   110f4:	strb	r3, [r4]
   110f8:	pop	{r4, pc}
   110fc:	andeq	r3, r2, r8, lsr #1
   11100:	b	110a0 <abort@plt+0x448>
   11104:	cmp	r0, #0
   11108:	push	{lr}		; (str lr, [sp, #-4]!)
   1110c:	sub	sp, sp, #12
   11110:	ldr	r5, [pc, #56]	; 11150 <abort@plt+0x4f8>
   11114:	ldr	r4, [pc, #56]	; 11154 <abort@plt+0x4fc>
   11118:	beq	11134 <abort@plt+0x4dc>
   1111c:	str	r0, [sp]
   11120:	ldr	r3, [r5]
   11124:	ldr	r0, [r4]
   11128:	ldr	r2, [pc, #40]	; 11158 <abort@plt+0x500>
   1112c:	mov	r1, #1
   11130:	bl	10bf8 <__fprintf_chk@plt>
   11134:	ldr	r3, [r5]
   11138:	ldr	r0, [r4]
   1113c:	ldr	r2, [pc, #24]	; 1115c <abort@plt+0x504>
   11140:	mov	r1, #1
   11144:	bl	10bf8 <__fprintf_chk@plt>
   11148:	mov	r0, #1
   1114c:	bl	10be0 <exit@plt>
   11150:	andeq	r3, r2, ip, lsr #1
   11154:	andeq	r3, r2, r0, lsr #1
   11158:	andeq	r1, r1, r4, lsr #30
   1115c:	andeq	r1, r1, r0, lsr pc
   11160:	push	{r4, r5, r6, lr}
   11164:	mov	r5, r0
   11168:	mov	r0, #12
   1116c:	mov	r4, r1
   11170:	bl	10ba4 <malloc@plt>
   11174:	cmp	r0, #0
   11178:	popeq	{r4, r5, r6, pc}
   1117c:	ldr	r3, [pc, #32]	; 111a4 <abort@plt+0x54c>
   11180:	add	ip, r0, #8
   11184:	mov	r1, #0
   11188:	ldr	r2, [r3]
   1118c:	str	r5, [r0]
   11190:	str	r4, [r0, #4]
   11194:	str	r1, [r0, #8]
   11198:	str	ip, [r3]
   1119c:	str	r0, [r2]
   111a0:	pop	{r4, r5, r6, pc}
   111a4:	muleq	r2, ip, r0
   111a8:	push	{r4, lr}
   111ac:	mov	r2, #0
   111b0:	mov	r4, r0
   111b4:	ldrd	r0, [r0]
   111b8:	bl	10c1c <xcb_intern_atom_reply@plt>
   111bc:	subs	r3, r0, #0
   111c0:	beq	111d4 <abort@plt+0x57c>
   111c4:	ldr	r2, [r4, #8]
   111c8:	ldr	r3, [r3, #8]
   111cc:	str	r3, [r2]
   111d0:	bl	10afc <free@plt>
   111d4:	mov	r0, r4
   111d8:	pop	{r4, lr}
   111dc:	b	10afc <free@plt>
   111e0:	push	{r4, r5, r6, r7, r8, lr}
   111e4:	mov	r5, r0
   111e8:	mov	r0, #16
   111ec:	mov	r8, r1
   111f0:	mov	r7, r2
   111f4:	mov	r6, r3
   111f8:	bl	10ba4 <malloc@plt>
   111fc:	subs	r4, r0, #0
   11200:	popeq	{r4, r5, r6, r7, r8, pc}
   11204:	mov	r1, r8
   11208:	str	r5, [r4]
   1120c:	mov	r0, r5
   11210:	bl	10b2c <xcb_query_tree@plt>
   11214:	str	r7, [r4, #8]
   11218:	str	r6, [r4, #12]
   1121c:	mov	r1, r4
   11220:	str	r0, [r4, #4]
   11224:	ldr	r0, [pc, #4]	; 11230 <abort@plt+0x5d8>
   11228:	pop	{r4, r5, r6, r7, r8, lr}
   1122c:	b	11160 <abort@plt+0x508>
   11230:	andeq	r1, r1, r4, lsr r2
   11234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11238:	mov	r2, #0
   1123c:	sub	sp, sp, #20
   11240:	mov	r6, r0
   11244:	ldrd	r0, [r0]
   11248:	bl	10b74 <xcb_query_tree_reply@plt>
   1124c:	subs	r8, r0, #0
   11250:	beq	11324 <abort@plt+0x6cc>
   11254:	bl	10b44 <xcb_query_tree_children@plt>
   11258:	ldrh	r3, [r8, #16]
   1125c:	cmp	r3, #0
   11260:	beq	11334 <abort@plt+0x6dc>
   11264:	ldr	sl, [pc, #224]	; 1134c <abort@plt+0x6f4>
   11268:	ldr	r9, [pc, #224]	; 11350 <abort@plt+0x6f8>
   1126c:	sub	r5, r0, #4
   11270:	mov	r7, #0
   11274:	b	112fc <abort@plt+0x6a4>
   11278:	str	lr, [r4, #4]
   1127c:	str	r2, [r4, #8]
   11280:	ldr	lr, [r6, #8]
   11284:	ldr	r2, [r6, #12]
   11288:	ldr	r0, [r6]
   1128c:	str	lr, [r4, #24]
   11290:	str	r3, [r4, #12]
   11294:	str	r0, [r4]
   11298:	str	r2, [r4, #28]
   1129c:	ldr	r2, [r5, #4]!
   112a0:	ldr	r3, [sl, #4]
   112a4:	str	r2, [r4, #16]
   112a8:	ldr	r2, [r5]
   112ac:	str	r2, [r4, #40]	; 0x28
   112b0:	ldr	r2, [r5]
   112b4:	str	ip, [sp, #8]
   112b8:	str	ip, [sp, #4]
   112bc:	str	ip, [sp]
   112c0:	bl	10af0 <xcb_get_property@plt>
   112c4:	ldr	fp, [r4, #8]
   112c8:	str	r0, [r4, #32]
   112cc:	ldr	r0, [r6]
   112d0:	ldr	r1, [r5]
   112d4:	bl	10b2c <xcb_query_tree@plt>
   112d8:	mov	r3, #1
   112dc:	mov	r1, r4
   112e0:	str	r0, [fp]
   112e4:	str	r3, [r4, #20]
   112e8:	mov	r0, r9
   112ec:	bl	11160 <abort@plt+0x508>
   112f0:	ldrh	r3, [r8, #16]
   112f4:	cmp	r3, r7
   112f8:	ble	11334 <abort@plt+0x6dc>
   112fc:	mov	r0, #44	; 0x2c
   11300:	bl	10ba4 <malloc@plt>
   11304:	mov	ip, #0
   11308:	mov	r1, ip
   1130c:	add	r7, r7, #1
   11310:	subs	r4, r0, #0
   11314:	add	lr, r4, #32
   11318:	add	r2, r4, #36	; 0x24
   1131c:	add	r3, r4, #40	; 0x28
   11320:	bne	11278 <abort@plt+0x620>
   11324:	mov	r0, r6
   11328:	add	sp, sp, #20
   1132c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11330:	b	10afc <free@plt>
   11334:	mov	r0, r8
   11338:	bl	10afc <free@plt>
   1133c:	mov	r0, r6
   11340:	add	sp, sp, #20
   11344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11348:	b	10afc <free@plt>
   1134c:	andeq	r3, r2, ip, lsr #1
   11350:	andeq	r1, r1, r8, ror #8
   11354:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11358:	mov	r6, r0
   1135c:	sub	sp, sp, #16
   11360:	mov	r0, #36	; 0x24
   11364:	mov	r7, r1
   11368:	mov	r9, r2
   1136c:	mov	sl, r3
   11370:	bl	10ba4 <malloc@plt>
   11374:	subs	r4, r0, #0
   11378:	beq	113f0 <abort@plt+0x798>
   1137c:	ldr	r8, [pc, #220]	; 11460 <abort@plt+0x808>
   11380:	mov	r5, #0
   11384:	str	r6, [r4]
   11388:	str	r7, [r4, #24]
   1138c:	str	r9, [r4, #28]
   11390:	str	sl, [r4, #32]
   11394:	mov	r1, r5
   11398:	mov	r3, #36	; 0x24
   1139c:	mov	r2, r7
   113a0:	stmib	sp, {r5, r8}
   113a4:	str	r5, [sp]
   113a8:	mov	r0, r6
   113ac:	bl	10af0 <xcb_get_property@plt>
   113b0:	mov	r1, r5
   113b4:	mov	r3, #34	; 0x22
   113b8:	mov	r2, r7
   113bc:	str	r0, [r4, #4]
   113c0:	stmib	sp, {r5, r8}
   113c4:	str	r5, [sp]
   113c8:	mov	r0, r6
   113cc:	bl	10af0 <xcb_get_property@plt>
   113d0:	cmp	r9, r5
   113d4:	str	r0, [r4, #8]
   113d8:	bne	113f8 <abort@plt+0x7a0>
   113dc:	mov	r1, r4
   113e0:	ldr	r0, [pc, #124]	; 11464 <abort@plt+0x80c>
   113e4:	add	sp, sp, #16
   113e8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   113ec:	b	11160 <abort@plt+0x508>
   113f0:	add	sp, sp, #16
   113f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   113f8:	mov	r3, #39	; 0x27
   113fc:	mov	r2, r7
   11400:	mov	r1, r5
   11404:	stmib	sp, {r5, r8}
   11408:	str	r5, [sp]
   1140c:	mov	r0, r6
   11410:	bl	10af0 <xcb_get_property@plt>
   11414:	mov	r3, #37	; 0x25
   11418:	mov	r2, r7
   1141c:	mov	r1, r5
   11420:	str	r0, [r4, #12]
   11424:	stmib	sp, {r5, r8}
   11428:	str	r5, [sp]
   1142c:	mov	r0, r6
   11430:	bl	10af0 <xcb_get_property@plt>
   11434:	mov	ip, #31
   11438:	mov	r2, r7
   1143c:	mov	r1, r5
   11440:	mov	r3, #67	; 0x43
   11444:	str	r0, [r4, #16]
   11448:	stmib	sp, {r5, r8}
   1144c:	mov	r0, r6
   11450:	str	ip, [sp]
   11454:	bl	10af0 <xcb_get_property@plt>
   11458:	str	r0, [r4, #20]
   1145c:	b	113dc <abort@plt+0x784>
   11460:	andeq	r4, pc, r0, asr #4
   11464:	andeq	r1, r1, r0, asr #18
   11468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1146c:	mov	r4, r0
   11470:	ldr	r0, [r0, #20]
   11474:	sub	sp, sp, #52	; 0x34
   11478:	cmp	r0, #0
   1147c:	ldr	r5, [r4, #16]
   11480:	ldr	r6, [r4]
   11484:	ldr	r9, [r4, #24]
   11488:	ldr	r7, [r4, #28]
   1148c:	ble	114d4 <abort@plt+0x87c>
   11490:	mov	r8, #0
   11494:	ldr	r3, [r4, #4]
   11498:	mov	r2, #0
   1149c:	mov	r0, r6
   114a0:	ldr	r1, [r3, r8, lsl #2]
   114a4:	bl	10c28 <xcb_get_property_reply@plt>
   114a8:	lsl	r1, r8, #2
   114ac:	subs	sl, r0, #0
   114b0:	beq	114c4 <abort@plt+0x86c>
   114b4:	ldr	r3, [sl, #8]
   114b8:	cmp	r3, #0
   114bc:	bne	116b4 <abort@plt+0xa5c>
   114c0:	bl	10afc <free@plt>
   114c4:	ldr	r0, [r4, #20]
   114c8:	add	r8, r8, #1
   114cc:	cmp	r0, r8
   114d0:	bgt	11494 <abort@plt+0x83c>
   114d4:	lsl	r0, r0, #2
   114d8:	bl	10ba4 <malloc@plt>
   114dc:	subs	fp, r0, #0
   114e0:	str	fp, [sp, #28]
   114e4:	beq	116a4 <abort@plt+0xa4c>
   114e8:	ldr	r3, [r4, #20]
   114ec:	mov	r8, #0
   114f0:	cmp	r3, #0
   114f4:	ble	11764 <abort@plt+0xb0c>
   114f8:	mov	sl, r8
   114fc:	ldr	r3, [r4, #8]
   11500:	mov	r2, #0
   11504:	mov	r0, r6
   11508:	ldr	r1, [r3, sl, lsl #2]
   1150c:	bl	10b74 <xcb_query_tree_reply@plt>
   11510:	ldr	r3, [r4, #20]
   11514:	add	sl, sl, #1
   11518:	cmp	r0, #0
   1151c:	str	r0, [fp, r8, lsl #2]
   11520:	addne	r8, r8, #1
   11524:	cmp	r3, sl
   11528:	bgt	114fc <abort@plt+0x8a4>
   1152c:	cmp	r8, #0
   11530:	beq	11764 <abort@plt+0xb0c>
   11534:	ldr	r3, [sp, #28]
   11538:	lsl	r2, r8, #2
   1153c:	sub	r3, r3, #4
   11540:	str	r2, [sp, #40]	; 0x28
   11544:	mov	sl, #0
   11548:	add	r2, r3, r2
   1154c:	str	r3, [sp, #36]	; 0x24
   11550:	str	r3, [sp, #24]
   11554:	ldr	r1, [r3, #4]!
   11558:	cmp	r3, r2
   1155c:	ldrh	r1, [r1, #16]
   11560:	add	sl, sl, r1
   11564:	bne	11554 <abort@plt+0x8fc>
   11568:	cmp	sl, #0
   1156c:	str	r3, [sp, #32]
   11570:	beq	11764 <abort@plt+0xb0c>
   11574:	add	r0, sl, sl, lsl #1
   11578:	lsl	r0, r0, #2
   1157c:	add	r0, r0, #32
   11580:	bl	10ba4 <malloc@plt>
   11584:	subs	r8, r0, #0
   11588:	beq	11680 <abort@plt+0xa28>
   1158c:	lsl	r3, sl, #2
   11590:	add	r1, r8, #32
   11594:	add	r2, r1, r3
   11598:	str	r9, [r8, #24]
   1159c:	mov	r9, #0
   115a0:	add	r3, r2, r3
   115a4:	mov	fp, r9
   115a8:	str	r6, [r8]
   115ac:	str	r7, [r8, #28]
   115b0:	str	r5, [r8, #16]
   115b4:	str	sl, [r8, #20]
   115b8:	str	r1, [r8, #4]
   115bc:	strd	r2, [r8, #8]
   115c0:	str	r4, [sp, #44]	; 0x2c
   115c4:	ldr	r3, [sp, #24]
   115c8:	ldr	sl, [r3, #4]!
   115cc:	mov	r0, sl
   115d0:	str	r3, [sp, #24]
   115d4:	bl	10b44 <xcb_query_tree_children@plt>
   115d8:	ldrh	r3, [sl, #16]
   115dc:	cmp	r3, #0
   115e0:	beq	11660 <abort@plt+0xa08>
   115e4:	rsb	r3, r0, r9, lsl #2
   115e8:	sub	r4, r0, #4
   115ec:	mov	r7, #0
   115f0:	add	r3, r3, #4
   115f4:	str	r3, [sp, #20]
   115f8:	ldr	r3, [sp, #20]
   115fc:	mov	r1, #0
   11600:	add	r5, r3, r4
   11604:	ldr	r3, [r8, #12]
   11608:	ldr	r2, [r4, #4]!
   1160c:	mov	r0, r6
   11610:	str	r2, [r3, r5]
   11614:	ldr	r3, [pc, #376]	; 11794 <abort@plt+0xb3c>
   11618:	ldr	r2, [r4]
   1161c:	add	r7, r7, #1
   11620:	ldr	r3, [r3, #4]
   11624:	str	fp, [sp, #8]
   11628:	str	fp, [sp, #4]
   1162c:	str	fp, [sp]
   11630:	bl	10af0 <xcb_get_property@plt>
   11634:	ldr	r3, [r8, #4]
   11638:	add	r9, r9, #1
   1163c:	str	r0, [r3, r5]
   11640:	mov	r0, r6
   11644:	ldr	r1, [r4]
   11648:	bl	10b2c <xcb_query_tree@plt>
   1164c:	ldr	r3, [r8, #8]
   11650:	str	r0, [r3, r5]
   11654:	ldrh	r3, [sl, #16]
   11658:	cmp	r3, r7
   1165c:	bgt	115f8 <abort@plt+0x9a0>
   11660:	ldr	r3, [sp, #32]
   11664:	ldr	r2, [sp, #24]
   11668:	cmp	r3, r2
   1166c:	bne	115c4 <abort@plt+0x96c>
   11670:	mov	r1, r8
   11674:	ldr	r0, [pc, #284]	; 11798 <abort@plt+0xb40>
   11678:	ldr	r4, [sp, #44]	; 0x2c
   1167c:	bl	11160 <abort@plt+0x508>
   11680:	ldr	r5, [sp, #36]	; 0x24
   11684:	ldr	r3, [sp, #40]	; 0x28
   11688:	add	r6, r5, r3
   1168c:	ldr	r0, [r5, #4]!
   11690:	bl	10afc <free@plt>
   11694:	cmp	r6, r5
   11698:	bne	1168c <abort@plt+0xa34>
   1169c:	ldr	r0, [sp, #28]
   116a0:	bl	10afc <free@plt>
   116a4:	mov	r0, r4
   116a8:	add	sp, sp, #52	; 0x34
   116ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116b0:	b	10afc <free@plt>
   116b4:	ldr	r0, [r4, #12]
   116b8:	ldrd	r2, [r4, #24]
   116bc:	add	r8, r8, #1
   116c0:	ldr	r1, [r0, r1]
   116c4:	mov	r0, r6
   116c8:	bl	11354 <abort@plt+0x6fc>
   116cc:	mov	r0, sl
   116d0:	bl	10afc <free@plt>
   116d4:	ldr	r3, [r4, #20]
   116d8:	cmp	r3, r8
   116dc:	ble	11718 <abort@plt+0xac0>
   116e0:	lsl	r5, r8, #2
   116e4:	ldr	r3, [r4, #4]
   116e8:	mov	r2, #0
   116ec:	mov	r0, r6
   116f0:	ldr	r1, [r3, r5]
   116f4:	bl	10c28 <xcb_get_property_reply@plt>
   116f8:	add	r8, r8, #1
   116fc:	add	r5, r5, #4
   11700:	cmp	r0, #0
   11704:	beq	1170c <abort@plt+0xab4>
   11708:	bl	10afc <free@plt>
   1170c:	ldr	r3, [r4, #20]
   11710:	cmp	r3, r8
   11714:	bgt	116e4 <abort@plt+0xa8c>
   11718:	cmp	r3, #0
   1171c:	ble	116a4 <abort@plt+0xa4c>
   11720:	mov	r5, #0
   11724:	ldr	r3, [r4, #8]
   11728:	mov	r2, #0
   1172c:	mov	r0, r6
   11730:	ldr	r1, [r3, r5, lsl #2]
   11734:	bl	10b74 <xcb_query_tree_reply@plt>
   11738:	add	r5, r5, #1
   1173c:	cmp	r0, #0
   11740:	beq	11748 <abort@plt+0xaf0>
   11744:	bl	10afc <free@plt>
   11748:	ldr	r3, [r4, #20]
   1174c:	cmp	r3, r5
   11750:	bgt	11724 <abort@plt+0xacc>
   11754:	mov	r0, r4
   11758:	add	sp, sp, #52	; 0x34
   1175c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11760:	b	10afc <free@plt>
   11764:	mov	r0, r6
   11768:	ldrd	r2, [r4, #24]
   1176c:	ldr	r1, [r4, #16]
   11770:	bl	11354 <abort@plt+0x6fc>
   11774:	cmp	r8, #0
   11778:	beq	1169c <abort@plt+0xa44>
   1177c:	lsl	r3, r8, #2
   11780:	str	r3, [sp, #40]	; 0x28
   11784:	ldr	r3, [sp, #28]
   11788:	sub	r3, r3, #4
   1178c:	str	r3, [sp, #36]	; 0x24
   11790:	b	11680 <abort@plt+0xa28>
   11794:	andeq	r3, r2, ip, lsr #1
   11798:	andeq	r1, r1, r8, ror #8
   1179c:	push	{r4, r5, r6, r7, r8, lr}
   117a0:	ldr	r5, [r2, #8]
   117a4:	cmp	r5, #0
   117a8:	beq	1183c <abort@plt+0xbe4>
   117ac:	ldrb	r3, [r2, #1]
   117b0:	cmp	r3, #0
   117b4:	beq	1183c <abort@plt+0xbe4>
   117b8:	cmp	r1, #0
   117bc:	mov	r7, r1
   117c0:	mov	r6, r0
   117c4:	mov	r4, r2
   117c8:	beq	1184c <abort@plt+0xbf4>
   117cc:	mov	r2, r1
   117d0:	mov	r0, #1
   117d4:	ldr	r1, [pc, #324]	; 11920 <abort@plt+0xcc8>
   117d8:	bl	10bec <__printf_chk@plt>
   117dc:	ldr	r5, [r4, #8]
   117e0:	cmp	r5, #31
   117e4:	beq	118e0 <abort@plt+0xc88>
   117e8:	ldr	r1, [pc, #308]	; 11924 <abort@plt+0xccc>
   117ec:	mov	r0, #1
   117f0:	ldrb	r4, [r4, #1]
   117f4:	bl	10bec <__printf_chk@plt>
   117f8:	cmp	r5, #0
   117fc:	bne	11870 <abort@plt+0xc18>
   11800:	ldr	r1, [pc, #288]	; 11928 <abort@plt+0xcd0>
   11804:	mov	r0, #1
   11808:	bl	10bec <__printf_chk@plt>
   1180c:	mov	r3, r4
   11810:	mov	r2, r5
   11814:	ldr	r1, [pc, #272]	; 1192c <abort@plt+0xcd4>
   11818:	mov	r0, #1
   1181c:	bl	10bec <__printf_chk@plt>
   11820:	cmp	r7, #0
   11824:	popeq	{r4, r5, r6, r7, r8, pc}
   11828:	ldr	r3, [pc, #256]	; 11930 <abort@plt+0xcd8>
   1182c:	mov	r0, #10
   11830:	pop	{r4, r5, r6, r7, r8, lr}
   11834:	ldr	r1, [r3]
   11838:	b	10b50 <_IO_putc@plt>
   1183c:	ldr	r1, [pc, #240]	; 11934 <abort@plt+0xcdc>
   11840:	mov	r0, #1
   11844:	pop	{r4, r5, r6, r7, r8, lr}
   11848:	b	10bec <__printf_chk@plt>
   1184c:	cmp	r5, #31
   11850:	bne	1190c <abort@plt+0xcb4>
   11854:	cmp	r3, #8
   11858:	beq	118e8 <abort@plt+0xc90>
   1185c:	ldr	r1, [pc, #192]	; 11924 <abort@plt+0xccc>
   11860:	mov	r0, #1
   11864:	mov	r4, r3
   11868:	bl	10bec <__printf_chk@plt>
   1186c:	mov	r5, #31
   11870:	mov	r1, r5
   11874:	mov	r0, r6
   11878:	bl	10ad8 <xcb_get_atom_name@plt>
   1187c:	mov	r2, #0
   11880:	mov	r1, r0
   11884:	mov	r0, r6
   11888:	bl	10b20 <xcb_get_atom_name_reply@plt>
   1188c:	subs	r6, r0, #0
   11890:	beq	118c4 <abort@plt+0xc6c>
   11894:	bl	10c04 <xcb_get_atom_name_name_length@plt>
   11898:	mov	r8, r0
   1189c:	mov	r0, r6
   118a0:	bl	10bbc <xcb_get_atom_name_name@plt>
   118a4:	mov	r2, r8
   118a8:	ldr	r1, [pc, #136]	; 11938 <abort@plt+0xce0>
   118ac:	mov	r3, r0
   118b0:	mov	r0, #1
   118b4:	bl	10bec <__printf_chk@plt>
   118b8:	mov	r0, r6
   118bc:	bl	10afc <free@plt>
   118c0:	b	1180c <abort@plt+0xbb4>
   118c4:	ldr	r3, [pc, #100]	; 11930 <abort@plt+0xcd8>
   118c8:	mov	r2, #5
   118cc:	mov	r1, #1
   118d0:	ldr	r3, [r3]
   118d4:	ldr	r0, [pc, #96]	; 1193c <abort@plt+0xce4>
   118d8:	bl	10b5c <fwrite@plt>
   118dc:	b	1180c <abort@plt+0xbb4>
   118e0:	ldrb	r3, [r4, #1]
   118e4:	b	11854 <abort@plt+0xbfc>
   118e8:	mov	r0, r4
   118ec:	ldr	r5, [r4, #16]
   118f0:	bl	10b08 <xcb_get_property_value@plt>
   118f4:	mov	r2, r5
   118f8:	ldr	r1, [pc, #56]	; 11938 <abort@plt+0xce0>
   118fc:	mov	r3, r0
   11900:	mov	r0, #1
   11904:	bl	10bec <__printf_chk@plt>
   11908:	b	11820 <abort@plt+0xbc8>
   1190c:	ldr	r1, [pc, #16]	; 11924 <abort@plt+0xccc>
   11910:	mov	r0, #1
   11914:	mov	r4, r3
   11918:	bl	10bec <__printf_chk@plt>
   1191c:	b	11870 <abort@plt+0xc18>
   11920:	andeq	r1, r1, r0, ror pc
   11924:	andeq	r1, r1, r4, ror pc
   11928:	andeq	r1, r1, r4, lsl #31
   1192c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   11930:	andeq	r3, r2, r4, lsr #1
   11934:	andeq	r1, r1, ip, ror #30
   11938:	andeq	r2, r1, ip
   1193c:	andeq	r1, r1, ip, lsl #31
   11940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11944:	mov	r4, r0
   11948:	sub	sp, sp, #68	; 0x44
   1194c:	ldr	r3, [r4, #32]
   11950:	str	r0, [sp, #28]
   11954:	mov	r2, #0
   11958:	ldrd	r0, [r0]
   1195c:	str	r3, [sp, #12]
   11960:	bl	10c28 <xcb_get_property_reply@plt>
   11964:	ldr	r1, [r4, #8]
   11968:	mov	r2, #0
   1196c:	str	r0, [sp, #32]
   11970:	ldr	r0, [r4]
   11974:	bl	10c28 <xcb_get_property_reply@plt>
   11978:	ldr	r3, [r4, #28]
   1197c:	cmp	r3, #0
   11980:	str	r0, [sp, #24]
   11984:	bne	11bcc <abort@plt+0xf74>
   11988:	ldr	r3, [sp, #24]
   1198c:	cmp	r3, #0
   11990:	beq	11c18 <abort@plt+0xfc0>
   11994:	ldr	r3, [r3, #8]
   11998:	cmp	r3, #0
   1199c:	bne	11a18 <abort@plt+0xdc0>
   119a0:	ldr	r3, [sp, #32]
   119a4:	cmp	r3, #0
   119a8:	beq	119b4 <abort@plt+0xd5c>
   119ac:	ldr	r0, [sp, #32]
   119b0:	bl	10afc <free@plt>
   119b4:	ldr	r0, [sp, #24]
   119b8:	bl	10afc <free@plt>
   119bc:	ldr	r3, [sp, #28]
   119c0:	ldr	r3, [r3, #28]
   119c4:	cmp	r3, #0
   119c8:	beq	11a08 <abort@plt+0xdb0>
   119cc:	ldr	r3, [sp, #56]	; 0x38
   119d0:	cmp	r3, #0
   119d4:	beq	119e0 <abort@plt+0xd88>
   119d8:	mov	r0, r3
   119dc:	bl	10afc <free@plt>
   119e0:	ldr	r3, [sp, #48]	; 0x30
   119e4:	cmp	r3, #0
   119e8:	beq	119f4 <abort@plt+0xd9c>
   119ec:	mov	r0, r3
   119f0:	bl	10afc <free@plt>
   119f4:	ldr	r3, [sp, #52]	; 0x34
   119f8:	cmp	r3, #0
   119fc:	beq	11a08 <abort@plt+0xdb0>
   11a00:	mov	r0, r3
   11a04:	bl	10afc <free@plt>
   11a08:	ldr	r0, [sp, #28]
   11a0c:	add	sp, sp, #68	; 0x44
   11a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a14:	b	10afc <free@plt>
   11a18:	ldr	r4, [sp, #28]
   11a1c:	ldr	r1, [r4, #28]
   11a20:	cmp	r1, #0
   11a24:	bne	11c30 <abort@plt+0xfd8>
   11a28:	ldr	r3, [sp, #28]
   11a2c:	ldr	r4, [pc, #1120]	; 11e94 <abort@plt+0x123c>
   11a30:	ldr	r2, [sp, #32]
   11a34:	ldr	r0, [r3]
   11a38:	str	r4, [sp, #60]	; 0x3c
   11a3c:	bl	1179c <abort@plt+0xb44>
   11a40:	ldr	r1, [r4]
   11a44:	mov	r0, #32
   11a48:	bl	10b50 <_IO_putc@plt>
   11a4c:	ldr	r1, [r4]
   11a50:	mov	r0, #32
   11a54:	bl	10b50 <_IO_putc@plt>
   11a58:	ldr	r3, [sp, #28]
   11a5c:	ldr	r2, [sp, #48]	; 0x30
   11a60:	ldr	r3, [r3, #28]
   11a64:	cmp	r2, #0
   11a68:	cmpne	r3, #0
   11a6c:	bne	11e2c <abort@plt+0x11d4>
   11a70:	cmp	r3, #0
   11a74:	bne	11e38 <abort@plt+0x11e0>
   11a78:	ldr	r4, [sp, #24]
   11a7c:	mov	r0, r4
   11a80:	bl	10b08 <xcb_get_property_value@plt>
   11a84:	ldr	r9, [sp, #60]	; 0x3c
   11a88:	ldr	r4, [r4, #16]
   11a8c:	mov	r3, #0
   11a90:	ldr	fp, [r9]
   11a94:	str	r3, [sp, #16]
   11a98:	str	r0, [sp, #44]	; 0x2c
   11a9c:	ldrd	r2, [sp, #12]
   11aa0:	cmp	r2, #0
   11aa4:	movle	r2, #0
   11aa8:	movgt	r2, #1
   11aac:	cmp	r3, r4
   11ab0:	movcs	r2, #0
   11ab4:	cmp	r2, #0
   11ab8:	beq	11d98 <abort@plt+0x1140>
   11abc:	ldr	r3, [sp, #44]	; 0x2c
   11ac0:	ldr	r2, [sp, #16]
   11ac4:	add	r5, r3, r2
   11ac8:	ldrb	sl, [r3, r2]
   11acc:	str	r5, [sp, #20]
   11ad0:	cmp	sl, #0
   11ad4:	beq	11e24 <abort@plt+0x11cc>
   11ad8:	mov	r4, sl
   11adc:	tst	r4, #128	; 0x80
   11ae0:	bne	11afc <abort@plt+0xea4>
   11ae4:	bl	10bd4 <__ctype_b_loc@plt>
   11ae8:	lsl	r3, r4, #1
   11aec:	ldr	r2, [r0]
   11af0:	ldrh	r3, [r2, r3]
   11af4:	tst	r3, #8
   11af8:	bne	11b30 <abort@plt+0xed8>
   11afc:	cmp	r4, #95	; 0x5f
   11b00:	cmpne	r4, #61	; 0x3d
   11b04:	movne	r3, #1
   11b08:	moveq	r3, #0
   11b0c:	cmp	r4, #58	; 0x3a
   11b10:	moveq	r3, #0
   11b14:	andne	r3, r3, #1
   11b18:	sub	r4, r4, #43	; 0x2b
   11b1c:	cmp	r4, #4
   11b20:	movls	r4, #0
   11b24:	andhi	r4, r3, #1
   11b28:	cmp	r4, #0
   11b2c:	bne	11d50 <abort@plt+0x10f8>
   11b30:	ldrb	r4, [r5, #1]!
   11b34:	cmp	r4, #0
   11b38:	bne	11adc <abort@plt+0xe84>
   11b3c:	ldr	r2, [sp, #12]
   11b40:	mov	r0, r4
   11b44:	mov	r1, #34	; 0x22
   11b48:	mov	r3, r4
   11b4c:	ldr	r6, [sp, #20]
   11b50:	mov	r4, r1
   11b54:	mov	r8, #39	; 0x27
   11b58:	mov	r1, fp
   11b5c:	mov	fp, r0
   11b60:	b	11b8c <abort@plt+0xf34>
   11b64:	ldrb	r0, [r6]
   11b68:	bl	10b50 <_IO_putc@plt>
   11b6c:	ldrb	sl, [r6, #1]!
   11b70:	mov	r3, r7
   11b74:	mov	r2, r5
   11b78:	cmp	sl, #0
   11b7c:	beq	11c9c <abort@plt+0x1044>
   11b80:	cmp	r5, #0
   11b84:	ldr	r1, [r9]
   11b88:	ble	11d40 <abort@plt+0x10e8>
   11b8c:	cmp	r8, sl
   11b90:	add	r7, r3, #1
   11b94:	sub	r5, r2, #1
   11b98:	bne	11b64 <abort@plt+0xf0c>
   11b9c:	cmp	fp, #0
   11ba0:	add	r7, r3, #2
   11ba4:	mov	fp, #1
   11ba8:	sub	r5, r2, #2
   11bac:	bne	11c78 <abort@plt+0x1020>
   11bb0:	mov	r0, r4
   11bb4:	bl	10b50 <_IO_putc@plt>
   11bb8:	mov	r3, r8
   11bbc:	ldr	r1, [r9]
   11bc0:	mov	r8, r4
   11bc4:	mov	r4, r3
   11bc8:	b	11b64 <abort@plt+0xf0c>
   11bcc:	ldr	r4, [sp, #28]
   11bd0:	mov	r2, #0
   11bd4:	ldr	r1, [r4, #12]
   11bd8:	ldr	r0, [r4]
   11bdc:	bl	10c28 <xcb_get_property_reply@plt>
   11be0:	mov	r2, #0
   11be4:	ldr	r1, [r4, #16]
   11be8:	str	r0, [sp, #56]	; 0x38
   11bec:	ldr	r0, [r4]
   11bf0:	bl	10c28 <xcb_get_property_reply@plt>
   11bf4:	mov	r2, #0
   11bf8:	ldr	r1, [r4, #20]
   11bfc:	str	r0, [sp, #48]	; 0x30
   11c00:	ldr	r0, [r4]
   11c04:	bl	10c28 <xcb_get_property_reply@plt>
   11c08:	ldr	r3, [sp, #24]
   11c0c:	cmp	r3, #0
   11c10:	str	r0, [sp, #52]	; 0x34
   11c14:	bne	11994 <abort@plt+0xd3c>
   11c18:	ldr	r3, [sp, #32]
   11c1c:	cmp	r3, #0
   11c20:	beq	119bc <abort@plt+0xd64>
   11c24:	ldr	r0, [sp, #32]
   11c28:	bl	10afc <free@plt>
   11c2c:	b	119bc <abort@plt+0xd64>
   11c30:	ldr	r2, [r4, #24]
   11c34:	ldr	r1, [pc, #604]	; 11e98 <abort@plt+0x1240>
   11c38:	mov	r0, #1
   11c3c:	bl	10bec <__printf_chk@plt>
   11c40:	ldr	r2, [sp, #32]
   11c44:	ldr	r1, [pc, #592]	; 11e9c <abort@plt+0x1244>
   11c48:	ldr	r0, [r4]
   11c4c:	bl	1179c <abort@plt+0xb44>
   11c50:	ldr	r3, [sp, #56]	; 0x38
   11c54:	cmp	r3, #0
   11c58:	beq	11c6c <abort@plt+0x1014>
   11c5c:	ldr	r3, [sp, #56]	; 0x38
   11c60:	ldr	r3, [r3, #8]
   11c64:	cmp	r3, #0
   11c68:	bne	11e64 <abort@plt+0x120c>
   11c6c:	ldr	r3, [pc, #544]	; 11e94 <abort@plt+0x123c>
   11c70:	str	r3, [sp, #60]	; 0x3c
   11c74:	b	11a58 <abort@plt+0xe00>
   11c78:	mov	r0, r8
   11c7c:	strd	r2, [sp, #36]	; 0x24
   11c80:	bl	10b50 <_IO_putc@plt>
   11c84:	ldr	r3, [sp, #40]	; 0x28
   11c88:	ldr	r2, [sp, #36]	; 0x24
   11c8c:	ldr	r1, [r9]
   11c90:	add	r7, r3, #3
   11c94:	sub	r5, r2, #3
   11c98:	b	11bb0 <abort@plt+0xf58>
   11c9c:	cmp	r5, #0
   11ca0:	movle	fp, #0
   11ca4:	andgt	fp, fp, #1
   11ca8:	mov	r5, fp
   11cac:	ldr	fp, [r9]
   11cb0:	cmp	r5, #0
   11cb4:	beq	11ccc <abort@plt+0x1074>
   11cb8:	mov	r1, fp
   11cbc:	mov	r0, r8
   11cc0:	bl	10b50 <_IO_putc@plt>
   11cc4:	ldr	fp, [r9]
   11cc8:	add	r7, r7, #1
   11ccc:	ldr	r3, [sp, #24]
   11cd0:	ldr	r4, [r3, #16]
   11cd4:	ldr	r5, [sp, #16]
   11cd8:	ldr	r0, [sp, #20]
   11cdc:	sub	r1, r4, r5
   11ce0:	bl	10c10 <strnlen@plt>
   11ce4:	ldr	r3, [sp, #12]
   11ce8:	add	r2, r5, #1
   11cec:	sub	r3, r3, r7
   11cf0:	str	r3, [sp, #12]
   11cf4:	add	r2, r2, r0
   11cf8:	cmp	r4, r2
   11cfc:	str	r2, [sp, #16]
   11d00:	movls	r2, #0
   11d04:	movhi	r2, #1
   11d08:	cmp	r3, #0
   11d0c:	movle	r2, #0
   11d10:	cmp	r2, #0
   11d14:	beq	11a9c <abort@plt+0xe44>
   11d18:	mov	r1, fp
   11d1c:	mov	r0, #32
   11d20:	bl	10b50 <_IO_putc@plt>
   11d24:	ldr	r3, [sp, #24]
   11d28:	ldr	fp, [r9]
   11d2c:	ldr	r4, [r3, #16]
   11d30:	ldr	r3, [sp, #12]
   11d34:	sub	r3, r3, #1
   11d38:	str	r3, [sp, #12]
   11d3c:	b	11a9c <abort@plt+0xe44>
   11d40:	ldr	r3, [sp, #24]
   11d44:	mov	fp, r1
   11d48:	ldr	r4, [r3, #16]
   11d4c:	b	11cd4 <abort@plt+0x107c>
   11d50:	mov	r1, fp
   11d54:	mov	r0, #39	; 0x27
   11d58:	bl	10b50 <_IO_putc@plt>
   11d5c:	ldr	r3, [sp, #20]
   11d60:	ldrb	sl, [r3]
   11d64:	ldr	r3, [sp, #12]
   11d68:	cmp	sl, #0
   11d6c:	sub	r2, r3, #1
   11d70:	beq	11e48 <abort@plt+0x11f0>
   11d74:	cmp	r2, #0
   11d78:	movne	r4, #1
   11d7c:	ldr	fp, [r9]
   11d80:	movne	r0, r4
   11d84:	bne	11b44 <abort@plt+0xeec>
   11d88:	ldr	r3, [sp, #24]
   11d8c:	mov	r7, #1
   11d90:	ldr	r4, [r3, #16]
   11d94:	b	11cd4 <abort@plt+0x107c>
   11d98:	mov	r1, fp
   11d9c:	mov	r0, #10
   11da0:	bl	10b50 <_IO_putc@plt>
   11da4:	ldr	r3, [sp, #28]
   11da8:	ldr	r2, [sp, #52]	; 0x34
   11dac:	ldr	r3, [r3, #28]
   11db0:	cmp	r3, #0
   11db4:	cmpne	r2, #0
   11db8:	beq	119a0 <abort@plt+0xd48>
   11dbc:	ldr	r3, [r2, #8]
   11dc0:	cmp	r3, #0
   11dc4:	beq	119a0 <abort@plt+0xd48>
   11dc8:	mov	r0, r2
   11dcc:	mov	r4, r2
   11dd0:	bl	10b08 <xcb_get_property_value@plt>
   11dd4:	ldr	r4, [r4, #16]
   11dd8:	mov	r1, r4
   11ddc:	mov	r5, r0
   11de0:	bl	10c10 <strnlen@plt>
   11de4:	add	r2, r0, #1
   11de8:	sub	r1, r4, r2
   11dec:	cmp	r1, #0
   11df0:	addgt	r3, r5, r2
   11df4:	ldrle	r3, [pc, #164]	; 11ea0 <abort@plt+0x1248>
   11df8:	movle	r1, #5
   11dfc:	mov	r0, #1
   11e00:	stm	sp, {r1, r3}
   11e04:	mov	r3, r5
   11e08:	ldr	r1, [pc, #148]	; 11ea4 <abort@plt+0x124c>
   11e0c:	bl	10bec <__printf_chk@plt>
   11e10:	ldr	r3, [sp, #60]	; 0x3c
   11e14:	mov	r0, #10
   11e18:	ldr	r1, [r3]
   11e1c:	bl	10b50 <_IO_putc@plt>
   11e20:	b	119a0 <abort@plt+0xd48>
   11e24:	mov	r7, sl
   11e28:	b	11cd4 <abort@plt+0x107c>
   11e2c:	ldr	r3, [r2, #8]
   11e30:	cmp	r3, #0
   11e34:	bne	11e7c <abort@plt+0x1224>
   11e38:	ldr	r1, [pc, #104]	; 11ea8 <abort@plt+0x1250>
   11e3c:	mov	r0, #1
   11e40:	bl	10bec <__printf_chk@plt>
   11e44:	b	11a78 <abort@plt+0xe20>
   11e48:	cmp	r2, #0
   11e4c:	movle	r5, #0
   11e50:	movgt	r5, #1
   11e54:	ldr	fp, [r9]
   11e58:	mov	r7, #1
   11e5c:	mov	r8, #39	; 0x27
   11e60:	b	11cb0 <abort@plt+0x1058>
   11e64:	ldr	r3, [sp, #28]
   11e68:	ldr	r2, [sp, #56]	; 0x38
   11e6c:	ldr	r1, [pc, #56]	; 11eac <abort@plt+0x1254>
   11e70:	ldr	r0, [r3]
   11e74:	bl	1179c <abort@plt+0xb44>
   11e78:	b	11c6c <abort@plt+0x1014>
   11e7c:	ldr	r4, [sp, #28]
   11e80:	ldr	r1, [pc, #40]	; 11eb0 <abort@plt+0x1258>
   11e84:	ldr	r0, [r4]
   11e88:	bl	1179c <abort@plt+0xb44>
   11e8c:	ldr	r3, [r4, #28]
   11e90:	b	11a70 <abort@plt+0xe18>
   11e94:	andeq	r3, r2, r4, lsr #1
   11e98:	andeq	r1, r1, r8, lsr #31
   11e9c:			; <UNDEFINED> instruction: 0x00011fb8
   11ea0:	andeq	r1, r1, ip, lsl #31
   11ea4:	strdeq	r1, [r1], -r4
   11ea8:	andeq	r1, r1, r4, ror #31
   11eac:	andeq	r1, r1, r8, asr #31
   11eb0:	ldrdeq	r1, [r1], -r4
   11eb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11eb8:	mov	r7, r0
   11ebc:	ldr	r6, [pc, #72]	; 11f0c <abort@plt+0x12b4>
   11ec0:	ldr	r5, [pc, #72]	; 11f10 <abort@plt+0x12b8>
   11ec4:	add	r6, pc, r6
   11ec8:	add	r5, pc, r5
   11ecc:	sub	r6, r6, r5
   11ed0:	mov	r8, r1
   11ed4:	mov	r9, r2
   11ed8:	bl	10ab8 <_init@@Base>
   11edc:	asrs	r6, r6, #2
   11ee0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ee4:	mov	r4, #0
   11ee8:	add	r4, r4, #1
   11eec:	ldr	r3, [r5], #4
   11ef0:	mov	r2, r9
   11ef4:	mov	r1, r8
   11ef8:	mov	r0, r7
   11efc:	blx	r3
   11f00:	cmp	r6, r4
   11f04:	bne	11ee8 <abort@plt+0x1290>
   11f08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f0c:	andeq	r1, r1, r0, lsr r0
   11f10:	andeq	r1, r1, r8, lsr #32
   11f14:	bx	lr

Disassembly of section .fini:

00011f18 <_fini@@Base>:
   11f18:	push	{r3, lr}
   11f1c:	pop	{r3, pc}
