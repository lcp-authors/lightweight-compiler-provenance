
raspbian-preinstalled/setxkbmap:     file format elf32-littlearm


Disassembly of section .init:

00010a8c <_init@@Base>:
   10a8c:	push	{r3, lr}
   10a90:	bl	10d7c <__snprintf_chk@plt+0x138>
   10a94:	pop	{r3, pc}

Disassembly of section .plt:

00010a98 <XkbCFParse@plt-0x14>:
   10a98:	push	{lr}		; (str lr, [sp, #-4]!)
   10a9c:	ldr	lr, [pc, #4]	; 10aa8 <_init@@Base+0x1c>
   10aa0:	add	lr, pc, lr
   10aa4:	ldr	pc, [lr, #8]!
   10aa8:	andeq	r3, r1, r8, asr r5

00010aac <XkbCFParse@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #77824	; 0x13000
   10ab4:	ldr	pc, [ip, #1368]!	; 0x558

00010ab8 <calloc@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #77824	; 0x13000
   10ac0:	ldr	pc, [ip, #1360]!	; 0x550

00010ac4 <strcmp@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #77824	; 0x13000
   10acc:	ldr	pc, [ip, #1352]!	; 0x548

00010ad0 <strtol@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #77824	; 0x13000
   10ad8:	ldr	pc, [ip, #1344]!	; 0x540

00010adc <XkbRF_SetNamesProp@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #77824	; 0x13000
   10ae4:	ldr	pc, [ip, #1336]!	; 0x538

00010ae8 <fopen@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #77824	; 0x13000
   10af0:	ldr	pc, [ip, #1328]!	; 0x530

00010af4 <free@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #77824	; 0x13000
   10afc:	ldr	pc, [ip, #1320]!	; 0x528

00010b00 <XkbGetKeyboardByName@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #77824	; 0x13000
   10b08:	ldr	pc, [ip, #1312]!	; 0x520

00010b0c <XkbRF_Load@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #77824	; 0x13000
   10b14:	ldr	pc, [ip, #1304]!	; 0x518

00010b18 <strdup@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #77824	; 0x13000
   10b20:	ldr	pc, [ip, #1296]!	; 0x510

00010b24 <__stack_chk_fail@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #77824	; 0x13000
   10b2c:	ldr	pc, [ip, #1288]!	; 0x508

00010b30 <XFree@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #77824	; 0x13000
   10b38:	ldr	pc, [ip, #1280]!	; 0x500

00010b3c <realloc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #77824	; 0x13000
   10b44:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b48 <fwrite@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #77824	; 0x13000
   10b50:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b54 <strcpy@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #77824	; 0x13000
   10b5c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b60 <XkbOpenDisplay@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #77824	; 0x13000
   10b68:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b6c <getenv@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #77824	; 0x13000
   10b74:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b78 <puts@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #77824	; 0x13000
   10b80:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b84 <__libc_start_main@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #77824	; 0x13000
   10b8c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b90 <__gmon_start__@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #77824	; 0x13000
   10b98:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b9c <__ctype_b_loc@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #77824	; 0x13000
   10ba4:	ldr	pc, [ip, #1208]!	; 0x4b8

00010ba8 <exit@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #77824	; 0x13000
   10bb0:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bb4 <strlen@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #77824	; 0x13000
   10bbc:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bc0 <strchr@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #77824	; 0x13000
   10bc8:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bcc <XkbRF_GetNamesProp@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #77824	; 0x13000
   10bd4:	ldr	pc, [ip, #1176]!	; 0x498

00010bd8 <__printf_chk@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #77824	; 0x13000
   10be0:	ldr	pc, [ip, #1168]!	; 0x490

00010be4 <__fprintf_chk@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #77824	; 0x13000
   10bec:	ldr	pc, [ip, #1160]!	; 0x488

00010bf0 <fclose@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #77824	; 0x13000
   10bf8:	ldr	pc, [ip, #1152]!	; 0x480

00010bfc <XSynchronize@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #77824	; 0x13000
   10c04:	ldr	pc, [ip, #1144]!	; 0x478

00010c08 <setlocale@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #77824	; 0x13000
   10c10:	ldr	pc, [ip, #1136]!	; 0x470

00010c14 <XkbRF_GetComponents@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #77824	; 0x13000
   10c1c:	ldr	pc, [ip, #1128]!	; 0x468

00010c20 <XCloseDisplay@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #77824	; 0x13000
   10c28:	ldr	pc, [ip, #1120]!	; 0x460

00010c2c <strncmp@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #77824	; 0x13000
   10c34:	ldr	pc, [ip, #1112]!	; 0x458

00010c38 <abort@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #77824	; 0x13000
   10c40:	ldr	pc, [ip, #1104]!	; 0x450

00010c44 <__snprintf_chk@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #77824	; 0x13000
   10c4c:	ldr	pc, [ip, #1096]!	; 0x448

Disassembly of section .text:

00010c50 <.text>:
   10c50:	push	{r4, lr}
   10c54:	mov	r5, r1
   10c58:	mov	r4, r0
   10c5c:	bl	11500 <__snprintf_chk@plt+0x8bc>
   10c60:	cmp	r0, #0
   10c64:	beq	10c7c <__snprintf_chk@plt+0x38>
   10c68:	mov	r1, r5
   10c6c:	mov	r0, r4
   10c70:	bl	11dac <__snprintf_chk@plt+0x1168>
   10c74:	cmp	r0, #0
   10c78:	bne	10c84 <__snprintf_chk@plt+0x40>
   10c7c:	mvn	r0, #0
   10c80:	bl	10ba8 <exit@plt>
   10c84:	ldr	r4, [pc, #168]	; 10d34 <__snprintf_chk@plt+0xf0>
   10c88:	mov	r0, #6
   10c8c:	ldr	r1, [r4, #44]	; 0x2c
   10c90:	bl	10c08 <setlocale@plt>
   10c94:	ldr	r2, [r4]
   10c98:	mov	r3, #1
   10c9c:	cmp	r2, #7
   10ca0:	str	r3, [r4, #48]	; 0x30
   10ca4:	str	r0, [r4, #44]	; 0x2c
   10ca8:	bgt	10d10 <__snprintf_chk@plt+0xcc>
   10cac:	ldr	r5, [pc, #132]	; 10d38 <__snprintf_chk@plt+0xf4>
   10cb0:	ldr	r3, [r5, #40]	; 0x28
   10cb4:	cmp	r3, #0
   10cb8:	beq	10cc0 <__snprintf_chk@plt+0x7c>
   10cbc:	bl	120d8 <__snprintf_chk@plt+0x1494>
   10cc0:	ldr	r0, [r4, #20]
   10cc4:	cmp	r0, #0
   10cc8:	beq	10cd8 <__snprintf_chk@plt+0x94>
   10ccc:	bl	12554 <__snprintf_chk@plt+0x1910>
   10cd0:	cmp	r0, #0
   10cd4:	beq	10d2c <__snprintf_chk@plt+0xe8>
   10cd8:	bl	12824 <__snprintf_chk@plt+0x1be0>
   10cdc:	cmp	r0, #0
   10ce0:	bne	10cec <__snprintf_chk@plt+0xa8>
   10ce4:	mvn	r0, #3
   10ce8:	bl	10ba8 <exit@plt>
   10cec:	bl	12c2c <__snprintf_chk@plt+0x1fe8>
   10cf0:	cmp	r0, #0
   10cf4:	beq	10d24 <__snprintf_chk@plt+0xe0>
   10cf8:	ldr	r0, [r5, #40]	; 0x28
   10cfc:	cmp	r0, #0
   10d00:	beq	10d08 <__snprintf_chk@plt+0xc4>
   10d04:	bl	10c20 <XCloseDisplay@plt>
   10d08:	mov	r0, #0
   10d0c:	bl	10ba8 <exit@plt>
   10d10:	mov	r2, r0
   10d14:	ldr	r1, [pc, #32]	; 10d3c <__snprintf_chk@plt+0xf8>
   10d18:	mov	r0, r3
   10d1c:	bl	10bd8 <__printf_chk@plt>
   10d20:	b	10cac <__snprintf_chk@plt+0x68>
   10d24:	mvn	r0, #4
   10d28:	bl	10ba8 <exit@plt>
   10d2c:	mvn	r0, #2
   10d30:	bl	10ba8 <exit@plt>
   10d34:	andeq	r4, r2, r4, lsr #1
   10d38:	andeq	r4, r2, r4, asr r1
   10d3c:	andeq	r3, r1, r0, lsl #26
   10d40:	mov	fp, #0
   10d44:	mov	lr, #0
   10d48:	pop	{r1}		; (ldr r1, [sp], #4)
   10d4c:	mov	r2, sp
   10d50:	push	{r2}		; (str r2, [sp, #-4]!)
   10d54:	push	{r0}		; (str r0, [sp, #-4]!)
   10d58:	ldr	ip, [pc, #16]	; 10d70 <__snprintf_chk@plt+0x12c>
   10d5c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d60:	ldr	r0, [pc, #12]	; 10d74 <__snprintf_chk@plt+0x130>
   10d64:	ldr	r3, [pc, #12]	; 10d78 <__snprintf_chk@plt+0x134>
   10d68:	bl	10b84 <__libc_start_main@plt>
   10d6c:	bl	10c38 <abort@plt>
   10d70:	strdeq	r2, [r1], -r4
   10d74:	andeq	r0, r1, r0, asr ip
   10d78:	muleq	r1, r4, lr
   10d7c:	ldr	r3, [pc, #20]	; 10d98 <__snprintf_chk@plt+0x154>
   10d80:	ldr	r2, [pc, #20]	; 10d9c <__snprintf_chk@plt+0x158>
   10d84:	add	r3, pc, r3
   10d88:	ldr	r2, [r3, r2]
   10d8c:	cmp	r2, #0
   10d90:	bxeq	lr
   10d94:	b	10b90 <__gmon_start__@plt>
   10d98:	andeq	r3, r1, r4, ror r2
   10d9c:	muleq	r0, r8, r0
   10da0:	ldr	r0, [pc, #24]	; 10dc0 <__snprintf_chk@plt+0x17c>
   10da4:	ldr	r3, [pc, #24]	; 10dc4 <__snprintf_chk@plt+0x180>
   10da8:	cmp	r3, r0
   10dac:	bxeq	lr
   10db0:	ldr	r3, [pc, #16]	; 10dc8 <__snprintf_chk@plt+0x184>
   10db4:	cmp	r3, #0
   10db8:	bxeq	lr
   10dbc:	bx	r3
   10dc0:	andeq	r4, r2, r8, asr #2
   10dc4:	andeq	r4, r2, r8, asr #2
   10dc8:	andeq	r0, r0, r0
   10dcc:	ldr	r0, [pc, #36]	; 10df8 <__snprintf_chk@plt+0x1b4>
   10dd0:	ldr	r1, [pc, #36]	; 10dfc <__snprintf_chk@plt+0x1b8>
   10dd4:	sub	r1, r1, r0
   10dd8:	asr	r1, r1, #2
   10ddc:	add	r1, r1, r1, lsr #31
   10de0:	asrs	r1, r1, #1
   10de4:	bxeq	lr
   10de8:	ldr	r3, [pc, #16]	; 10e00 <__snprintf_chk@plt+0x1bc>
   10dec:	cmp	r3, #0
   10df0:	bxeq	lr
   10df4:	bx	r3
   10df8:	andeq	r4, r2, r8, asr #2
   10dfc:	andeq	r4, r2, r8, asr #2
   10e00:	andeq	r0, r0, r0
   10e04:	push	{r4, lr}
   10e08:	ldr	r4, [pc, #24]	; 10e28 <__snprintf_chk@plt+0x1e4>
   10e0c:	ldrb	r3, [r4]
   10e10:	cmp	r3, #0
   10e14:	popne	{r4, pc}
   10e18:	bl	10da0 <__snprintf_chk@plt+0x15c>
   10e1c:	mov	r3, #1
   10e20:	strb	r3, [r4]
   10e24:	pop	{r4, pc}
   10e28:	andeq	r4, r2, r0, asr r1
   10e2c:	b	10dcc <__snprintf_chk@plt+0x188>
   10e30:	ldrb	r2, [r0]
   10e34:	cmp	r2, #0
   10e38:	beq	10fbc <__snprintf_chk@plt+0x378>
   10e3c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10e40:	mov	r3, #0
   10e44:	sub	sp, sp, #12
   10e48:	mov	lr, r0
   10e4c:	b	10e5c <__snprintf_chk@plt+0x218>
   10e50:	cmp	r2, #0
   10e54:	mov	lr, ip
   10e58:	beq	10edc <__snprintf_chk@plt+0x298>
   10e5c:	cmp	r3, #0
   10e60:	beq	10fb4 <__snprintf_chk@plt+0x370>
   10e64:	cmp	r2, #124	; 0x7c
   10e68:	cmpne	r2, #40	; 0x28
   10e6c:	moveq	ip, #1
   10e70:	movne	ip, #0
   10e74:	cmp	r2, #43	; 0x2b
   10e78:	orreq	ip, ip, #1
   10e7c:	cmp	ip, #0
   10e80:	bne	10ee4 <__snprintf_chk@plt+0x2a0>
   10e84:	cmp	r2, #41	; 0x29
   10e88:	add	ip, lr, #1
   10e8c:	ldrb	r2, [lr, #1]
   10e90:	bne	10e50 <__snprintf_chk@plt+0x20c>
   10e94:	cmp	r2, #0
   10e98:	beq	10ed0 <__snprintf_chk@plt+0x28c>
   10e9c:	mov	r3, ip
   10ea0:	cmp	r2, #40	; 0x28
   10ea4:	ldrb	r2, [r3, #1]!
   10ea8:	beq	10f90 <__snprintf_chk@plt+0x34c>
   10eac:	cmp	r2, #0
   10eb0:	beq	10ed0 <__snprintf_chk@plt+0x28c>
   10eb4:	cmp	r2, #40	; 0x28
   10eb8:	add	ip, r3, #1
   10ebc:	ldrb	r2, [r3, #1]
   10ec0:	beq	10e50 <__snprintf_chk@plt+0x20c>
   10ec4:	cmp	r2, #0
   10ec8:	mov	r3, ip
   10ecc:	bne	10eb4 <__snprintf_chk@plt+0x270>
   10ed0:	mov	r0, #1
   10ed4:	add	sp, sp, #12
   10ed8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10edc:	cmp	r3, #0
   10ee0:	beq	10ed0 <__snprintf_chk@plt+0x28c>
   10ee4:	ldrb	r4, [r3, #1]
   10ee8:	add	r5, r3, #1
   10eec:	cmp	r4, #0
   10ef0:	movne	r2, #1
   10ef4:	beq	10f44 <__snprintf_chk@plt+0x300>
   10ef8:	cmp	r4, #40	; 0x28
   10efc:	addeq	r2, r2, #1
   10f00:	beq	10f38 <__snprintf_chk@plt+0x2f4>
   10f04:	cmp	r4, #41	; 0x29
   10f08:	bne	10f38 <__snprintf_chk@plt+0x2f4>
   10f0c:	ldrb	r4, [r5, #1]
   10f10:	sub	r2, r2, #1
   10f14:	add	ip, r5, #1
   10f18:	cmp	r4, #0
   10f1c:	beq	10fac <__snprintf_chk@plt+0x368>
   10f20:	cmp	r2, #0
   10f24:	beq	10fa0 <__snprintf_chk@plt+0x35c>
   10f28:	cmp	r4, #40	; 0x28
   10f2c:	mov	r5, ip
   10f30:	addeq	r2, r2, #1
   10f34:	bne	10f04 <__snprintf_chk@plt+0x2c0>
   10f38:	ldrb	r4, [r5, #1]!
   10f3c:	cmp	r4, #0
   10f40:	bne	10ef8 <__snprintf_chk@plt+0x2b4>
   10f44:	ldr	r7, [pc, #120]	; 10fc4 <__snprintf_chk@plt+0x380>
   10f48:	mov	r6, #0
   10f4c:	mov	r8, r1
   10f50:	mov	r9, r0
   10f54:	strb	r6, [r5]
   10f58:	ldr	r2, [pc, #104]	; 10fc8 <__snprintf_chk@plt+0x384>
   10f5c:	ldr	r0, [r7]
   10f60:	mov	r1, #1
   10f64:	bl	10be4 <__fprintf_chk@plt>
   10f68:	strb	r4, [r5]
   10f6c:	mov	r3, r8
   10f70:	ldr	r0, [r7]
   10f74:	str	r9, [sp]
   10f78:	ldr	r2, [pc, #76]	; 10fcc <__snprintf_chk@plt+0x388>
   10f7c:	mov	r1, #1
   10f80:	bl	10be4 <__fprintf_chk@plt>
   10f84:	mov	r0, r6
   10f88:	add	sp, sp, #12
   10f8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10f90:	mov	lr, r3
   10f94:	mov	r3, ip
   10f98:	mov	ip, lr
   10f9c:	b	10e50 <__snprintf_chk@plt+0x20c>
   10fa0:	ldrb	r4, [r5, #2]
   10fa4:	add	r5, r5, #2
   10fa8:	b	10f44 <__snprintf_chk@plt+0x300>
   10fac:	mov	r5, ip
   10fb0:	b	10f44 <__snprintf_chk@plt+0x300>
   10fb4:	mov	ip, lr
   10fb8:	b	10e9c <__snprintf_chk@plt+0x258>
   10fbc:	mov	r0, #1
   10fc0:	bx	lr
   10fc4:	andeq	r4, r2, r8, asr #2
   10fc8:	andeq	r2, r1, r8, lsl pc
   10fcc:	andeq	r2, r1, r0, lsr pc
   10fd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10fd4:	mov	r8, r0
   10fd8:	ldr	r6, [r0, #8]
   10fdc:	mov	r7, r1
   10fe0:	cmp	r6, #0
   10fe4:	ldr	r9, [r0]
   10fe8:	ble	11014 <__snprintf_chk@plt+0x3d0>
   10fec:	sub	r5, r9, #4
   10ff0:	mov	r4, #0
   10ff4:	mov	r1, r7
   10ff8:	ldr	r0, [r5, #4]!
   10ffc:	bl	10ac4 <strcmp@plt>
   11000:	cmp	r0, #0
   11004:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11008:	add	r4, r4, #1
   1100c:	cmp	r4, r6
   11010:	bne	10ff4 <__snprintf_chk@plt+0x3b0>
   11014:	cmp	r9, #0
   11018:	beq	11060 <__snprintf_chk@plt+0x41c>
   1101c:	ldr	r1, [r8, #4]
   11020:	cmp	r1, #0
   11024:	ble	11060 <__snprintf_chk@plt+0x41c>
   11028:	cmp	r1, r6
   1102c:	ble	110a4 <__snprintf_chk@plt+0x460>
   11030:	lsl	r6, r6, #2
   11034:	mov	r0, r7
   11038:	bl	10b18 <strdup@plt>
   1103c:	str	r0, [r9, r6]
   11040:	ldr	r3, [r8, #8]
   11044:	ldr	r2, [r8]
   11048:	ldr	r2, [r2, r3, lsl #2]
   1104c:	cmp	r2, #0
   11050:	beq	11084 <__snprintf_chk@plt+0x440>
   11054:	add	r3, r3, #1
   11058:	str	r3, [r8, #8]
   1105c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11060:	mov	r1, #4
   11064:	mov	r6, #0
   11068:	mov	r0, r1
   1106c:	stmib	r8, {r1, r6}
   11070:	bl	10ab8 <calloc@plt>
   11074:	cmp	r0, r6
   11078:	mov	r9, r0
   1107c:	str	r0, [r8]
   11080:	bne	11034 <__snprintf_chk@plt+0x3f0>
   11084:	ldr	r3, [pc, #68]	; 110d0 <__snprintf_chk@plt+0x48c>
   11088:	mov	r2, #15
   1108c:	mov	r1, #1
   11090:	ldr	r3, [r3]
   11094:	ldr	r0, [pc, #56]	; 110d4 <__snprintf_chk@plt+0x490>
   11098:	bl	10b48 <fwrite@plt>
   1109c:	mvn	r0, #0
   110a0:	bl	10ba8 <exit@plt>
   110a4:	lsl	r3, r1, #1
   110a8:	mov	r0, r9
   110ac:	str	r3, [r8, #4]
   110b0:	lsl	r1, r1, #3
   110b4:	bl	10b3c <realloc@plt>
   110b8:	cmp	r0, #0
   110bc:	mov	r9, r0
   110c0:	str	r0, [r8]
   110c4:	beq	11084 <__snprintf_chk@plt+0x440>
   110c8:	ldr	r6, [r8, #8]
   110cc:	b	11030 <__snprintf_chk@plt+0x3ec>
   110d0:	andeq	r4, r2, r8, asr #2
   110d4:	andeq	r2, r1, r4, asr #30
   110d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110dc:	sub	sp, sp, #4096	; 0x1000
   110e0:	ldr	r5, [pc, #336]	; 11238 <__snprintf_chk@plt+0x5f4>
   110e4:	ldr	r3, [pc, #336]	; 1123c <__snprintf_chk@plt+0x5f8>
   110e8:	sub	sp, sp, #28
   110ec:	ldr	r2, [r5, #8]
   110f0:	ldr	r3, [r3]
   110f4:	cmp	r2, #0
   110f8:	add	r2, sp, #4096	; 0x1000
   110fc:	add	r2, r2, #20
   11100:	str	r3, [r2]
   11104:	ble	1122c <__snprintf_chk@plt+0x5e8>
   11108:	mov	r6, r0
   1110c:	ldr	r9, [pc, #300]	; 11240 <__snprintf_chk@plt+0x5fc>
   11110:	ldr	sl, [pc, #300]	; 11244 <__snprintf_chk@plt+0x600>
   11114:	ldr	r8, [pc, #300]	; 11248 <__snprintf_chk@plt+0x604>
   11118:	ldr	fp, [pc, #300]	; 1124c <__snprintf_chk@plt+0x608>
   1111c:	mov	r4, #0
   11120:	b	11158 <__snprintf_chk@plt+0x514>
   11124:	ldr	r3, [sl]
   11128:	cmp	r3, #0
   1112c:	ble	11148 <__snprintf_chk@plt+0x504>
   11130:	ldr	r0, [r5]
   11134:	mov	r3, r6
   11138:	ldr	r1, [pc, #272]	; 11250 <__snprintf_chk@plt+0x60c>
   1113c:	ldr	r2, [r0, r2]
   11140:	mov	r0, #1
   11144:	bl	10bd8 <__printf_chk@plt>
   11148:	ldr	r3, [r5, #8]
   1114c:	add	r4, r4, #1
   11150:	cmp	r4, r3
   11154:	bge	1122c <__snprintf_chk@plt+0x5e8>
   11158:	ldr	r2, [r5]
   1115c:	str	r6, [sp, #8]
   11160:	mov	r3, #4096	; 0x1000
   11164:	ldr	r2, [r2, r4, lsl #2]
   11168:	mov	r1, r3
   1116c:	str	r2, [sp, #4]
   11170:	str	r9, [sp]
   11174:	mov	r2, #1
   11178:	add	r0, sp, #20
   1117c:	bl	10c44 <__snprintf_chk@plt>
   11180:	lsl	r2, r4, #2
   11184:	cmp	r0, r8
   11188:	bgt	11124 <__snprintf_chk@plt+0x4e0>
   1118c:	mov	r1, fp
   11190:	add	r0, sp, #20
   11194:	bl	10ae8 <fopen@plt>
   11198:	ldr	r3, [sl]
   1119c:	cmp	r3, #7
   111a0:	bgt	111dc <__snprintf_chk@plt+0x598>
   111a4:	cmp	r0, #0
   111a8:	beq	11200 <__snprintf_chk@plt+0x5bc>
   111ac:	mov	r7, r0
   111b0:	add	r3, sp, #4096	; 0x1000
   111b4:	add	r3, r3, #20
   111b8:	ldr	r2, [r3]
   111bc:	ldr	r3, [pc, #120]	; 1123c <__snprintf_chk@plt+0x5f8>
   111c0:	mov	r0, r7
   111c4:	ldr	r3, [r3]
   111c8:	cmp	r2, r3
   111cc:	bne	11234 <__snprintf_chk@plt+0x5f0>
   111d0:	add	sp, sp, #4096	; 0x1000
   111d4:	add	sp, sp, #28
   111d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111dc:	cmp	r0, #0
   111e0:	beq	11208 <__snprintf_chk@plt+0x5c4>
   111e4:	mov	r7, r0
   111e8:	add	r3, sp, #20
   111ec:	ldr	r2, [pc, #96]	; 11254 <__snprintf_chk@plt+0x610>
   111f0:	ldr	r1, [pc, #96]	; 11258 <__snprintf_chk@plt+0x614>
   111f4:	mov	r0, #1
   111f8:	bl	10bd8 <__printf_chk@plt>
   111fc:	b	111b0 <__snprintf_chk@plt+0x56c>
   11200:	cmp	r3, #5
   11204:	ble	11148 <__snprintf_chk@plt+0x504>
   11208:	add	r3, sp, #20
   1120c:	ldr	r2, [pc, #72]	; 1125c <__snprintf_chk@plt+0x618>
   11210:	ldr	r1, [pc, #64]	; 11258 <__snprintf_chk@plt+0x614>
   11214:	mov	r0, #1
   11218:	bl	10bd8 <__printf_chk@plt>
   1121c:	ldr	r3, [r5, #8]
   11220:	add	r4, r4, #1
   11224:	cmp	r4, r3
   11228:	blt	11158 <__snprintf_chk@plt+0x514>
   1122c:	mov	r7, #0
   11230:	b	111b0 <__snprintf_chk@plt+0x56c>
   11234:	bl	10b24 <__stack_chk_fail@plt>
   11238:	andeq	r4, r2, r4, asr r1
   1123c:	strdeq	r3, [r2], -r8
   11240:	andeq	r2, r1, r4, asr pc
   11244:	andeq	r4, r2, r4, lsr #1
   11248:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   1124c:	andeq	r2, r1, r0, lsl #31
   11250:	andeq	r2, r1, ip, asr pc
   11254:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11258:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1125c:	andeq	r2, r1, r4, lsl #31
   11260:	subs	r3, r1, #0
   11264:	mov	r2, r0
   11268:	beq	11288 <__snprintf_chk@plt+0x644>
   1126c:	ldrb	r3, [r3]
   11270:	cmp	r3, #0
   11274:	beq	11288 <__snprintf_chk@plt+0x644>
   11278:	push	{r4, lr}
   1127c:	bl	10fd0 <__snprintf_chk@plt+0x38c>
   11280:	mov	r0, #1
   11284:	pop	{r4, pc}
   11288:	mov	r3, #0
   1128c:	str	r3, [r2, #8]
   11290:	mov	r0, #1
   11294:	bx	lr
   11298:	ldr	r2, [r1]
   1129c:	mov	r0, #1
   112a0:	ldr	r1, [pc]	; 112a8 <__snprintf_chk@plt+0x664>
   112a4:	b	10bd8 <__printf_chk@plt>
   112a8:	andeq	r2, r1, r4, lsr #31
   112ac:	ldr	r3, [r0, #4]
   112b0:	cmp	r3, #0
   112b4:	beq	11378 <__snprintf_chk@plt+0x734>
   112b8:	push	{r4, r5, r6, lr}
   112bc:	mov	r5, r2
   112c0:	ldr	r3, [r0, #8]
   112c4:	mov	r6, r1
   112c8:	cmp	r3, r2
   112cc:	mov	r4, r0
   112d0:	beq	11324 <__snprintf_chk@plt+0x6e0>
   112d4:	bls	11370 <__snprintf_chk@plt+0x72c>
   112d8:	ldr	r6, [pc, #160]	; 11380 <__snprintf_chk@plt+0x73c>
   112dc:	ldr	r3, [r6]
   112e0:	cmp	r3, #5
   112e4:	pople	{r4, r5, r6, pc}
   112e8:	ldr	r2, [r0]
   112ec:	ldr	r1, [pc, #144]	; 11384 <__snprintf_chk@plt+0x740>
   112f0:	mov	r0, #1
   112f4:	bl	10bd8 <__printf_chk@plt>
   112f8:	ldr	r3, [r6]
   112fc:	cmp	r3, #5
   11300:	pople	{r4, r5, r6, pc}
   11304:	ldr	r2, [r4, #8]
   11308:	ldr	r3, [pc, #120]	; 11388 <__snprintf_chk@plt+0x744>
   1130c:	ldr	r1, [pc, #120]	; 1138c <__snprintf_chk@plt+0x748>
   11310:	mov	r0, #1
   11314:	ldr	r2, [r3, r2, lsl #2]
   11318:	ldr	r3, [r3, r5, lsl #2]
   1131c:	pop	{r4, r5, r6, lr}
   11320:	b	10bd8 <__printf_chk@plt>
   11324:	ldr	r5, [pc, #84]	; 11380 <__snprintf_chk@plt+0x73c>
   11328:	ldr	r2, [r5]
   1132c:	cmp	r2, #0
   11330:	pople	{r4, r5, r6, pc}
   11334:	ldr	r0, [pc, #76]	; 11388 <__snprintf_chk@plt+0x744>
   11338:	ldr	r2, [r4]
   1133c:	ldr	r1, [pc, #76]	; 11390 <__snprintf_chk@plt+0x74c>
   11340:	ldr	r3, [r0, r3, lsl #2]
   11344:	mov	r0, #1
   11348:	bl	10bd8 <__printf_chk@plt>
   1134c:	ldr	r3, [r5]
   11350:	cmp	r3, #0
   11354:	pople	{r4, r5, r6, pc}
   11358:	mov	r3, r6
   1135c:	ldr	r2, [r4, #4]
   11360:	ldr	r1, [pc, #44]	; 11394 <__snprintf_chk@plt+0x750>
   11364:	mov	r0, #1
   11368:	pop	{r4, r5, r6, lr}
   1136c:	b	10bd8 <__printf_chk@plt>
   11370:	stmib	r0, {r1, r2}
   11374:	pop	{r4, r5, r6, pc}
   11378:	stmib	r0, {r1, r2}
   1137c:	bx	lr
   11380:	andeq	r4, r2, r4, lsr #1
   11384:	andeq	r3, r1, r4, lsr #10
   11388:	andeq	r2, r1, r4, lsl #30
   1138c:	andeq	r3, r1, ip, asr #10
   11390:	ldrdeq	r3, [r1], -ip
   11394:	andeq	r3, r1, r0, lsl #10
   11398:	push	{r4, r5, r6, r7, r8, lr}
   1139c:	sub	r1, r1, #1
   113a0:	ldr	ip, [r0]
   113a4:	mov	r6, r2
   113a8:	cmp	r1, ip
   113ac:	mov	r5, r3
   113b0:	bgt	113cc <__snprintf_chk@plt+0x788>
   113b4:	ldr	r4, [pc, #292]	; 114e0 <__snprintf_chk@plt+0x89c>
   113b8:	ldr	r3, [r4]
   113bc:	cmp	r3, #0
   113c0:	bgt	11444 <__snprintf_chk@plt+0x800>
   113c4:	mov	r0, #1
   113c8:	pop	{r4, r5, r6, r7, r8, pc}
   113cc:	add	r4, ip, #1
   113d0:	str	r4, [r0]
   113d4:	ldr	r3, [r3, #4]
   113d8:	cmp	r3, #0
   113dc:	beq	1147c <__snprintf_chk@plt+0x838>
   113e0:	ldr	r3, [r5, #8]
   113e4:	ldr	r2, [sp, #24]
   113e8:	cmp	r3, r2
   113ec:	beq	11494 <__snprintf_chk@plt+0x850>
   113f0:	bls	1147c <__snprintf_chk@plt+0x838>
   113f4:	ldr	r4, [pc, #228]	; 114e0 <__snprintf_chk@plt+0x89c>
   113f8:	ldr	r3, [r4]
   113fc:	cmp	r3, #5
   11400:	ble	113c4 <__snprintf_chk@plt+0x780>
   11404:	ldr	r2, [r5]
   11408:	ldr	r1, [pc, #212]	; 114e4 <__snprintf_chk@plt+0x8a0>
   1140c:	mov	r0, #1
   11410:	bl	10bd8 <__printf_chk@plt>
   11414:	ldr	r3, [r4]
   11418:	cmp	r3, #5
   1141c:	ble	113c4 <__snprintf_chk@plt+0x780>
   11420:	ldr	r2, [r5, #8]
   11424:	ldr	r3, [pc, #188]	; 114e8 <__snprintf_chk@plt+0x8a4>
   11428:	ldr	ip, [sp, #24]
   1142c:	ldr	r1, [pc, #184]	; 114ec <__snprintf_chk@plt+0x8a8>
   11430:	ldr	r2, [r3, r2, lsl #2]
   11434:	mov	r0, #1
   11438:	ldr	r3, [r3, ip, lsl #2]
   1143c:	bl	10bd8 <__printf_chk@plt>
   11440:	b	113c4 <__snprintf_chk@plt+0x780>
   11444:	ldr	r2, [r5]
   11448:	ldr	r1, [pc, #160]	; 114f0 <__snprintf_chk@plt+0x8ac>
   1144c:	mov	r0, #1
   11450:	ldr	r5, [r6, ip, lsl #2]
   11454:	bl	10bd8 <__printf_chk@plt>
   11458:	ldr	r3, [r4]
   1145c:	cmp	r3, #0
   11460:	ble	113c4 <__snprintf_chk@plt+0x780>
   11464:	mov	r2, r5
   11468:	ldr	r1, [pc, #132]	; 114f4 <__snprintf_chk@plt+0x8b0>
   1146c:	mov	r0, #1
   11470:	bl	10bd8 <__printf_chk@plt>
   11474:	mov	r0, #1
   11478:	pop	{r4, r5, r6, r7, r8, pc}
   1147c:	ldr	r3, [sp, #24]
   11480:	mov	r0, #1
   11484:	str	r3, [r5, #8]
   11488:	ldr	r3, [r6, r4, lsl #2]
   1148c:	str	r3, [r5, #4]
   11490:	pop	{r4, r5, r6, r7, r8, pc}
   11494:	ldr	r7, [pc, #68]	; 114e0 <__snprintf_chk@plt+0x89c>
   11498:	ldr	r2, [r7]
   1149c:	cmp	r2, #0
   114a0:	ble	113c4 <__snprintf_chk@plt+0x780>
   114a4:	ldr	r0, [pc, #60]	; 114e8 <__snprintf_chk@plt+0x8a4>
   114a8:	ldr	r2, [r5]
   114ac:	ldr	r1, [pc, #68]	; 114f8 <__snprintf_chk@plt+0x8b4>
   114b0:	ldr	r3, [r0, r3, lsl #2]
   114b4:	mov	r0, #1
   114b8:	bl	10bd8 <__printf_chk@plt>
   114bc:	ldr	r3, [r7]
   114c0:	cmp	r3, #0
   114c4:	ble	113c4 <__snprintf_chk@plt+0x780>
   114c8:	ldr	r3, [r6, r4, lsl #2]
   114cc:	ldr	r2, [r5, #4]
   114d0:	ldr	r1, [pc, #36]	; 114fc <__snprintf_chk@plt+0x8b8>
   114d4:	mov	r0, #1
   114d8:	bl	10bd8 <__printf_chk@plt>
   114dc:	b	113c4 <__snprintf_chk@plt+0x780>
   114e0:	andeq	r4, r2, r4, lsr #1
   114e4:	andeq	r3, r1, r4, ror #11
   114e8:	andeq	r2, r1, r4, lsl #30
   114ec:	andeq	r3, r1, r0, lsl #12
   114f0:	andeq	r3, r1, ip, ror #10
   114f4:	muleq	r1, r4, r5
   114f8:			; <UNDEFINED> instruction: 0x000135b0
   114fc:	andeq	r3, r1, r8, asr #11
   11500:	ldr	r3, [pc, #2008]	; 11ce0 <__snprintf_chk@plt+0x109c>
   11504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11508:	sub	sp, sp, #28
   1150c:	ldr	r3, [r3]
   11510:	mov	r7, r0
   11514:	mov	r8, r1
   11518:	ldr	r0, [pc, #1988]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   1151c:	ldr	r1, [pc, #1988]	; 11ce8 <__snprintf_chk@plt+0x10a4>
   11520:	str	r3, [sp, #20]
   11524:	bl	10fd0 <__snprintf_chk@plt+0x38c>
   11528:	ldr	r1, [pc, #1980]	; 11cec <__snprintf_chk@plt+0x10a8>
   1152c:	ldr	r0, [pc, #1968]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11530:	bl	10fd0 <__snprintf_chk@plt+0x38c>
   11534:	mov	r6, #1
   11538:	cmp	r7, #1
   1153c:	str	r6, [sp, #16]
   11540:	ble	11784 <__snprintf_chk@plt+0xb40>
   11544:	ldr	sl, [pc, #1956]	; 11cf0 <__snprintf_chk@plt+0x10ac>
   11548:	ldr	fp, [pc, #1956]	; 11cf4 <__snprintf_chk@plt+0x10b0>
   1154c:	mov	r4, r6
   11550:	b	115b4 <__snprintf_chk@plt+0x970>
   11554:	ldr	r0, [pc, #1948]	; 11cf8 <__snprintf_chk@plt+0x10b4>
   11558:	ldr	r2, [r0, #72]	; 0x48
   1155c:	cmp	r2, #0
   11560:	moveq	r1, r5
   11564:	addeq	r0, r0, #64	; 0x40
   11568:	beq	11644 <__snprintf_chk@plt+0xa00>
   1156c:	ldr	r2, [r0, #84]	; 0x54
   11570:	cmp	r2, #0
   11574:	beq	1163c <__snprintf_chk@plt+0x9f8>
   11578:	cmp	r3, #0
   1157c:	movne	r1, r5
   11580:	bne	1168c <__snprintf_chk@plt+0xa48>
   11584:	ldr	r2, [pc, #1880]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11588:	mov	r6, #1
   1158c:	ldr	r4, [sp, #16]
   11590:	mov	r5, r6
   11594:	str	r3, [r2, #20]
   11598:	add	r4, r4, #1
   1159c:	cmp	r4, r7
   115a0:	movge	r5, #0
   115a4:	andlt	r5, r5, #1
   115a8:	cmp	r5, #0
   115ac:	str	r4, [sp, #16]
   115b0:	beq	11784 <__snprintf_chk@plt+0xb40>
   115b4:	ldr	r5, [r8, r4, lsl #2]
   115b8:	lsl	r9, r4, #2
   115bc:	ldrb	r3, [r5]
   115c0:	cmp	r3, #45	; 0x2d
   115c4:	bne	11554 <__snprintf_chk@plt+0x910>
   115c8:	mov	r1, sl
   115cc:	mov	r0, r5
   115d0:	bl	10ac4 <strcmp@plt>
   115d4:	cmp	r0, #0
   115d8:	beq	1165c <__snprintf_chk@plt+0xa18>
   115dc:	mov	r1, fp
   115e0:	mov	r0, r5
   115e4:	bl	10ac4 <strcmp@plt>
   115e8:	cmp	r0, #0
   115ec:	beq	1174c <__snprintf_chk@plt+0xb08>
   115f0:	ldr	r1, [pc, #1796]	; 11cfc <__snprintf_chk@plt+0x10b8>
   115f4:	mov	r0, r5
   115f8:	bl	10ac4 <strcmp@plt>
   115fc:	subs	r1, r0, #0
   11600:	bne	116a4 <__snprintf_chk@plt+0xa60>
   11604:	add	r4, r4, #1
   11608:	cmp	r4, r7
   1160c:	str	r4, [sp, #16]
   11610:	bge	11b2c <__snprintf_chk@plt+0xee8>
   11614:	add	r9, r8, r9
   11618:	mov	r2, #10
   1161c:	ldr	r0, [r9, #4]
   11620:	bl	10ad0 <strtol@plt>
   11624:	ldr	r3, [pc, #1740]	; 11cf8 <__snprintf_chk@plt+0x10b4>
   11628:	adds	r5, r6, #0
   1162c:	ldr	r4, [sp, #16]
   11630:	movne	r5, #1
   11634:	str	r0, [r3, #160]	; 0xa0
   11638:	b	11598 <__snprintf_chk@plt+0x954>
   1163c:	mov	r1, r5
   11640:	add	r0, r0, #76	; 0x4c
   11644:	mov	r2, #4
   11648:	bl	112ac <__snprintf_chk@plt+0x668>
   1164c:	adds	r5, r6, #0
   11650:	movne	r5, #1
   11654:	ldr	r4, [sp, #16]
   11658:	b	11598 <__snprintf_chk@plt+0x954>
   1165c:	mov	r3, #4
   11660:	str	r3, [sp]
   11664:	ldr	r3, [pc, #1684]	; 11d00 <__snprintf_chk@plt+0x10bc>
   11668:	mov	r2, r8
   1166c:	mov	r1, r7
   11670:	add	r0, sp, #16
   11674:	bl	11398 <__snprintf_chk@plt+0x754>
   11678:	ldr	r4, [sp, #16]
   1167c:	adds	r5, r0, #0
   11680:	mov	r6, r0
   11684:	movne	r5, #1
   11688:	b	11598 <__snprintf_chk@plt+0x954>
   1168c:	ldr	r0, [pc, #1648]	; 11d04 <__snprintf_chk@plt+0x10c0>
   11690:	mov	r6, #1
   11694:	bl	10fd0 <__snprintf_chk@plt+0x38c>
   11698:	mov	r5, r6
   1169c:	ldr	r4, [sp, #16]
   116a0:	b	11598 <__snprintf_chk@plt+0x954>
   116a4:	ldr	r1, [pc, #1628]	; 11d08 <__snprintf_chk@plt+0x10c4>
   116a8:	mov	r0, r5
   116ac:	bl	10ac4 <strcmp@plt>
   116b0:	cmp	r0, #0
   116b4:	beq	11820 <__snprintf_chk@plt+0xbdc>
   116b8:	ldr	r1, [pc, #1612]	; 11d0c <__snprintf_chk@plt+0x10c8>
   116bc:	mov	r0, r5
   116c0:	bl	10ac4 <strcmp@plt>
   116c4:	cmp	r0, #0
   116c8:	beq	11830 <__snprintf_chk@plt+0xbec>
   116cc:	ldr	r1, [pc, #1596]	; 11d10 <__snprintf_chk@plt+0x10cc>
   116d0:	mov	r0, r5
   116d4:	bl	10ac4 <strcmp@plt>
   116d8:	cmp	r0, #0
   116dc:	beq	119d4 <__snprintf_chk@plt+0xd90>
   116e0:	ldr	r1, [pc, #1580]	; 11d14 <__snprintf_chk@plt+0x10d0>
   116e4:	mov	r0, r5
   116e8:	bl	10ac4 <strcmp@plt>
   116ec:	cmp	r0, #0
   116f0:	beq	119d4 <__snprintf_chk@plt+0xd90>
   116f4:	ldr	r1, [pc, #1564]	; 11d18 <__snprintf_chk@plt+0x10d4>
   116f8:	mov	r0, r5
   116fc:	bl	10ac4 <strcmp@plt>
   11700:	cmp	r0, #0
   11704:	bne	11840 <__snprintf_chk@plt+0xbfc>
   11708:	add	r4, r4, #1
   1170c:	cmp	r4, r7
   11710:	str	r4, [sp, #16]
   11714:	bge	118b4 <__snprintf_chk@plt+0xc70>
   11718:	add	r9, r8, r9
   1171c:	ldr	r1, [r9, #4]
   11720:	cmp	r1, #0
   11724:	beq	11734 <__snprintf_chk@plt+0xaf0>
   11728:	ldrb	r3, [r1]
   1172c:	cmp	r3, #0
   11730:	bne	119bc <__snprintf_chk@plt+0xd78>
   11734:	ldr	r3, [pc, #1448]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11738:	mov	r2, #0
   1173c:	mov	r5, #1
   11740:	str	r2, [r3, #8]
   11744:	mov	r6, r5
   11748:	b	11598 <__snprintf_chk@plt+0x954>
   1174c:	mov	r3, #4
   11750:	str	r3, [sp]
   11754:	ldr	r3, [pc, #1472]	; 11d1c <__snprintf_chk@plt+0x10d8>
   11758:	b	11668 <__snprintf_chk@plt+0xa24>
   1175c:	ldr	r1, [pc, #1468]	; 11d20 <__snprintf_chk@plt+0x10dc>
   11760:	mov	r3, r5
   11764:	ldr	r2, [pc, #1464]	; 11d24 <__snprintf_chk@plt+0x10e0>
   11768:	ldr	r0, [r1]
   1176c:	mov	r1, #1
   11770:	bl	10be4 <__fprintf_chk@plt>
   11774:	ldr	r3, [sp, #16]
   11778:	mov	r6, #0
   1177c:	add	r3, r3, #1
   11780:	str	r3, [sp, #16]
   11784:	ldr	r2, [pc, #1388]	; 11cf8 <__snprintf_chk@plt+0x10b4>
   11788:	ldr	r3, [r2, #104]	; 0x68
   1178c:	ldr	r1, [r2, #116]	; 0x74
   11790:	adds	r3, r3, #0
   11794:	movne	r3, #1
   11798:	cmp	r1, #0
   1179c:	ldr	r1, [r2, #128]	; 0x80
   117a0:	addne	r3, r3, #1
   117a4:	cmp	r1, #0
   117a8:	ldr	r1, [r2, #92]	; 0x5c
   117ac:	addne	r3, r3, #1
   117b0:	cmp	r1, #0
   117b4:	ldr	r1, [r2, #140]	; 0x8c
   117b8:	addne	r3, r3, #1
   117bc:	cmp	r1, #0
   117c0:	ldr	r1, [r2, #20]
   117c4:	addne	r3, r3, #1
   117c8:	cmp	r1, #0
   117cc:	ldr	r1, [r2, #56]	; 0x38
   117d0:	addne	r3, r3, #1
   117d4:	cmp	r1, #0
   117d8:	ldr	r1, [r2, #68]	; 0x44
   117dc:	addne	r3, r3, #1
   117e0:	cmp	r1, #0
   117e4:	ldr	r1, [r2, #80]	; 0x50
   117e8:	addne	r3, r3, #1
   117ec:	cmp	r1, #0
   117f0:	ldr	r2, [r2, #152]	; 0x98
   117f4:	beq	11888 <__snprintf_chk@plt+0xc44>
   117f8:	cmp	r2, #0
   117fc:	bne	11894 <__snprintf_chk@plt+0xc50>
   11800:	ldr	r3, [pc, #1240]	; 11ce0 <__snprintf_chk@plt+0x109c>
   11804:	ldr	r2, [sp, #20]
   11808:	mov	r0, r6
   1180c:	ldr	r3, [r3]
   11810:	cmp	r2, r3
   11814:	bne	11b44 <__snprintf_chk@plt+0xf00>
   11818:	add	sp, sp, #28
   1181c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11820:	mov	r3, #4
   11824:	str	r3, [sp]
   11828:	ldr	r3, [pc, #1272]	; 11d28 <__snprintf_chk@plt+0x10e4>
   1182c:	b	11668 <__snprintf_chk@plt+0xa24>
   11830:	mov	r3, #4
   11834:	str	r3, [sp]
   11838:	ldr	r3, [pc, #1260]	; 11d2c <__snprintf_chk@plt+0x10e8>
   1183c:	b	11668 <__snprintf_chk@plt+0xa24>
   11840:	mov	r2, #2
   11844:	ldr	r1, [pc, #1228]	; 11d18 <__snprintf_chk@plt+0x10d4>
   11848:	mov	r0, r5
   1184c:	bl	10c2c <strncmp@plt>
   11850:	cmp	r0, #0
   11854:	bne	118dc <__snprintf_chk@plt+0xc98>
   11858:	adds	r1, r5, #2
   1185c:	beq	1186c <__snprintf_chk@plt+0xc28>
   11860:	ldrb	r3, [r5, #2]
   11864:	cmp	r3, #0
   11868:	bne	119bc <__snprintf_chk@plt+0xd78>
   1186c:	ldr	r3, [pc, #1136]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11870:	mov	r2, #0
   11874:	mov	r5, #1
   11878:	str	r2, [r3, #8]
   1187c:	mov	r6, r5
   11880:	ldr	r4, [sp, #16]
   11884:	b	11598 <__snprintf_chk@plt+0x954>
   11888:	cmp	r3, #0
   1188c:	cmpne	r2, #0
   11890:	beq	11800 <__snprintf_chk@plt+0xbbc>
   11894:	ldr	r3, [pc, #1156]	; 11d20 <__snprintf_chk@plt+0x10dc>
   11898:	mov	r2, #62	; 0x3e
   1189c:	mov	r1, #1
   118a0:	ldr	r3, [r3]
   118a4:	ldr	r0, [pc, #1156]	; 11d30 <__snprintf_chk@plt+0x10ec>
   118a8:	bl	10b48 <fwrite@plt>
   118ac:	mov	r6, #0
   118b0:	b	11800 <__snprintf_chk@plt+0xbbc>
   118b4:	ldr	r3, [pc, #1084]	; 11cf8 <__snprintf_chk@plt+0x10b4>
   118b8:	adds	r5, r6, #0
   118bc:	movne	r5, #1
   118c0:	ldr	r3, [r3]
   118c4:	cmp	r3, #0
   118c8:	ble	11598 <__snprintf_chk@plt+0x954>
   118cc:	ldr	r0, [pc, #1120]	; 11d34 <__snprintf_chk@plt+0x10f0>
   118d0:	bl	10b78 <puts@plt>
   118d4:	ldr	r4, [sp, #16]
   118d8:	b	11598 <__snprintf_chk@plt+0x954>
   118dc:	ldr	r1, [pc, #1108]	; 11d38 <__snprintf_chk@plt+0x10f4>
   118e0:	mov	r0, r5
   118e4:	bl	10ac4 <strcmp@plt>
   118e8:	cmp	r0, #0
   118ec:	beq	119ac <__snprintf_chk@plt+0xd68>
   118f0:	ldr	r1, [pc, #1092]	; 11d3c <__snprintf_chk@plt+0x10f8>
   118f4:	mov	r0, r5
   118f8:	bl	10ac4 <strcmp@plt>
   118fc:	cmp	r0, #0
   11900:	beq	119ec <__snprintf_chk@plt+0xda8>
   11904:	ldr	r1, [pc, #1076]	; 11d40 <__snprintf_chk@plt+0x10fc>
   11908:	mov	r0, r5
   1190c:	bl	10ac4 <strcmp@plt>
   11910:	cmp	r0, #0
   11914:	beq	11a2c <__snprintf_chk@plt+0xde8>
   11918:	ldr	r1, [pc, #1060]	; 11d44 <__snprintf_chk@plt+0x1100>
   1191c:	mov	r0, r5
   11920:	bl	10ac4 <strcmp@plt>
   11924:	cmp	r0, #0
   11928:	beq	11a3c <__snprintf_chk@plt+0xdf8>
   1192c:	ldr	r1, [pc, #1044]	; 11d48 <__snprintf_chk@plt+0x1104>
   11930:	mov	r0, r5
   11934:	bl	10ac4 <strcmp@plt>
   11938:	cmp	r0, #0
   1193c:	bne	119fc <__snprintf_chk@plt+0xdb8>
   11940:	sub	r2, r7, #1
   11944:	cmp	r2, r4
   11948:	beq	11a7c <__snprintf_chk@plt+0xe38>
   1194c:	add	r9, r9, #4
   11950:	ldr	r1, [r8, r9]
   11954:	ldrb	r3, [r1]
   11958:	cmp	r3, #0
   1195c:	sub	r5, r3, #45	; 0x2d
   11960:	clz	r5, r5
   11964:	lsr	r5, r5, #5
   11968:	moveq	r5, #1
   1196c:	cmp	r5, #0
   11970:	beq	11a9c <__snprintf_chk@plt+0xe58>
   11974:	ldr	r3, [pc, #872]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11978:	mov	r6, #1
   1197c:	cmp	r2, r4
   11980:	str	r0, [r3, #20]
   11984:	str	r6, [r3, #24]
   11988:	ble	119a0 <__snprintf_chk@plt+0xd5c>
   1198c:	ldr	r3, [r8, r9]
   11990:	ldrb	r3, [r3]
   11994:	cmp	r3, #0
   11998:	addeq	r4, r4, #1
   1199c:	beq	11598 <__snprintf_chk@plt+0x954>
   119a0:	ldr	r4, [sp, #16]
   119a4:	mov	r6, #1
   119a8:	b	11598 <__snprintf_chk@plt+0x954>
   119ac:	mov	r3, #4
   119b0:	str	r3, [sp]
   119b4:	ldr	r3, [pc, #912]	; 11d4c <__snprintf_chk@plt+0x1108>
   119b8:	b	11668 <__snprintf_chk@plt+0xa24>
   119bc:	ldr	r0, [pc, #800]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   119c0:	mov	r5, #1
   119c4:	bl	10fd0 <__snprintf_chk@plt+0x38c>
   119c8:	mov	r6, r5
   119cc:	ldr	r4, [sp, #16]
   119d0:	b	11598 <__snprintf_chk@plt+0x954>
   119d4:	ldr	r2, [r8]
   119d8:	ldr	r1, [pc, #880]	; 11d50 <__snprintf_chk@plt+0x110c>
   119dc:	mov	r0, #1
   119e0:	bl	10bd8 <__printf_chk@plt>
   119e4:	mov	r0, #0
   119e8:	bl	10ba8 <exit@plt>
   119ec:	mov	r3, #4
   119f0:	str	r3, [sp]
   119f4:	ldr	r3, [pc, #856]	; 11d54 <__snprintf_chk@plt+0x1110>
   119f8:	b	11668 <__snprintf_chk@plt+0xa24>
   119fc:	ldr	r1, [pc, #852]	; 11d58 <__snprintf_chk@plt+0x1114>
   11a00:	mov	r0, r5
   11a04:	bl	10ac4 <strcmp@plt>
   11a08:	cmp	r0, #0
   11a0c:	bne	11a4c <__snprintf_chk@plt+0xe08>
   11a10:	ldr	r3, [pc, #716]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11a14:	mov	r2, #1
   11a18:	adds	r5, r6, #0
   11a1c:	ldr	r4, [sp, #16]
   11a20:	str	r2, [r3, #28]
   11a24:	movne	r5, #1
   11a28:	b	11598 <__snprintf_chk@plt+0x954>
   11a2c:	mov	r3, #4
   11a30:	str	r3, [sp]
   11a34:	ldr	r3, [pc, #800]	; 11d5c <__snprintf_chk@plt+0x1118>
   11a38:	b	11668 <__snprintf_chk@plt+0xa24>
   11a3c:	mov	r3, #4
   11a40:	str	r3, [sp]
   11a44:	ldr	r3, [pc, #788]	; 11d60 <__snprintf_chk@plt+0x111c>
   11a48:	b	11668 <__snprintf_chk@plt+0xa24>
   11a4c:	ldr	r1, [pc, #784]	; 11d64 <__snprintf_chk@plt+0x1120>
   11a50:	mov	r0, r5
   11a54:	bl	10ac4 <strcmp@plt>
   11a58:	cmp	r0, #0
   11a5c:	bne	11ac4 <__snprintf_chk@plt+0xe80>
   11a60:	ldr	r3, [pc, #636]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11a64:	mov	r2, #1
   11a68:	adds	r5, r6, #0
   11a6c:	ldr	r4, [sp, #16]
   11a70:	str	r2, [r3, #32]
   11a74:	movne	r5, #1
   11a78:	b	11598 <__snprintf_chk@plt+0x954>
   11a7c:	mov	r2, #1
   11a80:	ldr	r3, [pc, #604]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11a84:	mov	r6, r2
   11a88:	mov	r5, r2
   11a8c:	str	r2, [r3, #24]
   11a90:	str	r0, [r3, #20]
   11a94:	ldr	r4, [sp, #16]
   11a98:	b	11598 <__snprintf_chk@plt+0x954>
   11a9c:	add	r4, r4, #1
   11aa0:	str	r4, [sp, #16]
   11aa4:	ldrb	r3, [r1]
   11aa8:	cmp	r3, #0
   11aac:	bne	1168c <__snprintf_chk@plt+0xa48>
   11ab0:	ldr	r3, [pc, #556]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11ab4:	mov	r6, #1
   11ab8:	str	r5, [r3, #20]
   11abc:	mov	r5, r6
   11ac0:	b	11598 <__snprintf_chk@plt+0x954>
   11ac4:	ldr	r1, [pc, #668]	; 11d68 <__snprintf_chk@plt+0x1124>
   11ac8:	mov	r0, r5
   11acc:	bl	10ac4 <strcmp@plt>
   11ad0:	cmp	r0, #0
   11ad4:	beq	11b1c <__snprintf_chk@plt+0xed8>
   11ad8:	ldr	r1, [pc, #652]	; 11d6c <__snprintf_chk@plt+0x1128>
   11adc:	mov	r0, r5
   11ae0:	bl	10ac4 <strcmp@plt>
   11ae4:	cmp	r0, #0
   11ae8:	beq	11cac <__snprintf_chk@plt+0x1068>
   11aec:	ldr	r1, [pc, #636]	; 11d70 <__snprintf_chk@plt+0x112c>
   11af0:	mov	r0, r5
   11af4:	bl	10ac4 <strcmp@plt>
   11af8:	cmp	r0, #0
   11afc:	bne	11b48 <__snprintf_chk@plt+0xf04>
   11b00:	ldr	r3, [pc, #476]	; 11ce4 <__snprintf_chk@plt+0x10a0>
   11b04:	mov	r2, #1
   11b08:	adds	r5, r6, #0
   11b0c:	ldr	r4, [sp, #16]
   11b10:	str	r2, [r3, #36]	; 0x24
   11b14:	movne	r5, #1
   11b18:	b	11598 <__snprintf_chk@plt+0x954>
   11b1c:	mov	r3, #4
   11b20:	str	r3, [sp]
   11b24:	ldr	r3, [pc, #584]	; 11d74 <__snprintf_chk@plt+0x1130>
   11b28:	b	11668 <__snprintf_chk@plt+0xa24>
   11b2c:	ldr	r2, [r8]
   11b30:	ldr	r1, [pc, #536]	; 11d50 <__snprintf_chk@plt+0x110c>
   11b34:	mov	r0, #1
   11b38:	bl	10bd8 <__printf_chk@plt>
   11b3c:	mvn	r0, #0
   11b40:	bl	10ba8 <exit@plt>
   11b44:	bl	10b24 <__stack_chk_fail@plt>
   11b48:	ldr	r1, [pc, #552]	; 11d78 <__snprintf_chk@plt+0x1134>
   11b4c:	mov	r0, r5
   11b50:	bl	10ac4 <strcmp@plt>
   11b54:	cmp	r0, #0
   11b58:	beq	11c9c <__snprintf_chk@plt+0x1058>
   11b5c:	ldr	r1, [pc, #536]	; 11d7c <__snprintf_chk@plt+0x1138>
   11b60:	mov	r0, r5
   11b64:	bl	10ac4 <strcmp@plt>
   11b68:	cmp	r0, #0
   11b6c:	beq	11c7c <__snprintf_chk@plt+0x1038>
   11b70:	ldr	r1, [pc, #520]	; 11d80 <__snprintf_chk@plt+0x113c>
   11b74:	mov	r0, r5
   11b78:	bl	10ac4 <strcmp@plt>
   11b7c:	cmp	r0, #0
   11b80:	beq	11b98 <__snprintf_chk@plt+0xf54>
   11b84:	ldr	r1, [pc, #504]	; 11d84 <__snprintf_chk@plt+0x1140>
   11b88:	mov	r0, r5
   11b8c:	bl	10ac4 <strcmp@plt>
   11b90:	cmp	r0, #0
   11b94:	bne	11cbc <__snprintf_chk@plt+0x1078>
   11b98:	sub	r3, r7, #1
   11b9c:	cmp	r3, r4
   11ba0:	ble	11bc8 <__snprintf_chk@plt+0xf84>
   11ba4:	bl	10b9c <__ctype_b_loc@plt>
   11ba8:	add	r9, r8, r9
   11bac:	ldr	r2, [r9, #4]
   11bb0:	ldrb	r3, [r2]
   11bb4:	lsl	r3, r3, #1
   11bb8:	ldr	r1, [r0]
   11bbc:	ldrh	r3, [r1, r3]
   11bc0:	tst	r3, #2048	; 0x800
   11bc4:	bne	11c14 <__snprintf_chk@plt+0xfd0>
   11bc8:	ldr	r4, [pc, #296]	; 11cf8 <__snprintf_chk@plt+0x10b4>
   11bcc:	ldr	r3, [r4]
   11bd0:	add	r3, r3, #1
   11bd4:	str	r3, [r4]
   11bd8:	ldr	r3, [r4]
   11bdc:	adds	r5, r6, #0
   11be0:	movne	r5, #1
   11be4:	cmp	r3, #0
   11be8:	blt	11c58 <__snprintf_chk@plt+0x1014>
   11bec:	cmp	r3, #10
   11bf0:	bgt	11c38 <__snprintf_chk@plt+0xff4>
   11bf4:	cmp	r3, #7
   11bf8:	ble	11a94 <__snprintf_chk@plt+0xe50>
   11bfc:	mov	r2, r3
   11c00:	ldr	r1, [pc, #384]	; 11d88 <__snprintf_chk@plt+0x1144>
   11c04:	mov	r0, #1
   11c08:	bl	10bd8 <__printf_chk@plt>
   11c0c:	ldr	r4, [sp, #16]
   11c10:	b	11598 <__snprintf_chk@plt+0x954>
   11c14:	add	r4, r4, #1
   11c18:	mov	r0, r2
   11c1c:	mov	r1, #0
   11c20:	mov	r2, #10
   11c24:	str	r4, [sp, #16]
   11c28:	bl	10ad0 <strtol@plt>
   11c2c:	ldr	r4, [pc, #196]	; 11cf8 <__snprintf_chk@plt+0x10b4>
   11c30:	str	r0, [r4]
   11c34:	b	11bd8 <__snprintf_chk@plt+0xf94>
   11c38:	ldr	r1, [pc, #224]	; 11d20 <__snprintf_chk@plt+0x10dc>
   11c3c:	ldr	r2, [pc, #328]	; 11d8c <__snprintf_chk@plt+0x1148>
   11c40:	ldr	r0, [r1]
   11c44:	mov	r1, #1
   11c48:	bl	10be4 <__fprintf_chk@plt>
   11c4c:	mov	r3, #10
   11c50:	str	r3, [r4]
   11c54:	b	11bfc <__snprintf_chk@plt+0xfb8>
   11c58:	ldr	r1, [pc, #192]	; 11d20 <__snprintf_chk@plt+0x10dc>
   11c5c:	ldr	r2, [pc, #300]	; 11d90 <__snprintf_chk@plt+0x114c>
   11c60:	ldr	r0, [r1]
   11c64:	mov	r1, #1
   11c68:	bl	10be4 <__fprintf_chk@plt>
   11c6c:	mov	r3, #0
   11c70:	str	r3, [r4]
   11c74:	ldr	r4, [sp, #16]
   11c78:	b	11598 <__snprintf_chk@plt+0x954>
   11c7c:	str	r0, [sp, #12]
   11c80:	ldr	r2, [pc, #268]	; 11d94 <__snprintf_chk@plt+0x1150>
   11c84:	ldr	r1, [pc, #268]	; 11d98 <__snprintf_chk@plt+0x1154>
   11c88:	mov	r0, #1
   11c8c:	bl	10bd8 <__printf_chk@plt>
   11c90:	ldr	r3, [sp, #12]
   11c94:	mov	r0, r3
   11c98:	bl	10ba8 <exit@plt>
   11c9c:	mov	r3, #4
   11ca0:	str	r3, [sp]
   11ca4:	ldr	r3, [pc, #240]	; 11d9c <__snprintf_chk@plt+0x1158>
   11ca8:	b	11668 <__snprintf_chk@plt+0xa24>
   11cac:	mov	r3, #4
   11cb0:	str	r3, [sp]
   11cb4:	ldr	r3, [pc, #228]	; 11da0 <__snprintf_chk@plt+0x115c>
   11cb8:	b	11668 <__snprintf_chk@plt+0xa24>
   11cbc:	ldr	r1, [pc, #224]	; 11da4 <__snprintf_chk@plt+0x1160>
   11cc0:	mov	r0, r5
   11cc4:	bl	10ac4 <strcmp@plt>
   11cc8:	cmp	r0, #0
   11ccc:	bne	1175c <__snprintf_chk@plt+0xb18>
   11cd0:	mov	r3, #4
   11cd4:	str	r3, [sp]
   11cd8:	ldr	r3, [pc, #200]	; 11da8 <__snprintf_chk@plt+0x1164>
   11cdc:	b	11668 <__snprintf_chk@plt+0xa24>
   11ce0:	strdeq	r3, [r2], -r8
   11ce4:	andeq	r4, r2, r4, asr r1
   11ce8:	andeq	r3, r1, r8, lsl r6
   11cec:	andeq	r3, r1, ip, lsl r6
   11cf0:	andeq	r3, r1, r0, lsr r6
   11cf4:	andeq	r3, r1, r8, lsr r6
   11cf8:	andeq	r4, r2, r4, lsr #1
   11cfc:	andeq	r3, r1, r0, asr #12
   11d00:	andeq	r4, r2, r4, lsl r1
   11d04:	andeq	r4, r2, r0, ror #2
   11d08:	andeq	r3, r1, r8, asr #12
   11d0c:	andeq	r3, r1, r4, asr r6
   11d10:	andeq	r3, r1, r0, ror #12
   11d14:	andeq	r3, r1, r8, ror #12
   11d18:	andeq	r3, r1, ip, ror #12
   11d1c:	strheq	r4, [r2], -r4	; <UNPREDICTABLE>
   11d20:	andeq	r4, r2, r8, asr #2
   11d24:	andeq	r3, r1, r8, asr #15
   11d28:	andeq	r4, r2, r0, asr #1
   11d2c:	andeq	r4, r2, ip, lsr #2
   11d30:	strdeq	r3, [r1], -r0
   11d34:	andeq	r3, r1, r0, ror r6
   11d38:			; <UNDEFINED> instruction: 0x000136b8
   11d3c:	andeq	r3, r1, r4, asr #13
   11d40:	andeq	r3, r1, ip, asr #13
   11d44:	ldrdeq	r3, [r1], -r4
   11d48:	ldrdeq	r3, [r1], -ip
   11d4c:	strdeq	r4, [r2], -ip
   11d50:	andeq	r2, r1, r4, lsr #31
   11d54:	andeq	r4, r2, r8, lsr r1
   11d58:	andeq	r3, r1, r4, ror #13
   11d5c:	andeq	r4, r2, r4, ror #1
   11d60:	ldrdeq	r4, [r2], -r8
   11d64:	andeq	r3, r1, ip, ror #13
   11d68:	strdeq	r3, [r1], -r4
   11d6c:	strdeq	r3, [r1], -ip
   11d70:	andeq	r3, r1, r8, lsl #14
   11d74:	andeq	r4, r2, r8, lsr #1
   11d78:	andeq	r3, r1, r0, lsl r7
   11d7c:	andeq	r3, r1, r8, lsl r7
   11d80:	andeq	r3, r1, ip, lsr r7
   11d84:	andeq	r3, r1, r8, asr #14
   11d88:	muleq	r1, ip, r7
   11d8c:	andeq	r3, r1, r4, ror r7
   11d90:	andeq	r3, r1, ip, asr #14
   11d94:	andeq	r3, r1, r4, lsr #14
   11d98:	andeq	r3, r1, ip, lsr #14
   11d9c:	andeq	r4, r2, r8, lsl #2
   11da0:	andeq	r4, r2, r0, lsr #2
   11da4:			; <UNDEFINED> instruction: 0x000137bc
   11da8:	strdeq	r4, [r2], -r0
   11dac:	push	{r4, r5, r6, r7, r8, lr}
   11db0:	sub	sp, sp, #24
   11db4:	ldr	r5, [pc, #432]	; 11f6c <__snprintf_chk@plt+0x1328>
   11db8:	ldr	r6, [pc, #432]	; 11f70 <__snprintf_chk@plt+0x132c>
   11dbc:	mov	ip, #0
   11dc0:	ldr	r3, [r5]
   11dc4:	add	r2, sp, #16
   11dc8:	add	lr, sp, #12
   11dcc:	ldr	r0, [r6, #32]
   11dd0:	str	r3, [sp, #20]
   11dd4:	str	r2, [sp, #4]
   11dd8:	mov	r7, r1
   11ddc:	mov	r2, ip
   11de0:	str	lr, [sp]
   11de4:	mov	r1, ip
   11de8:	mov	r4, #1
   11dec:	add	r3, sp, #8
   11df0:	str	ip, [sp, #12]
   11df4:	str	r4, [sp, #8]
   11df8:	bl	10b60 <XkbOpenDisplay@plt>
   11dfc:	ldr	r2, [pc, #368]	; 11f74 <__snprintf_chk@plt+0x1330>
   11e00:	cmp	r0, #0
   11e04:	str	r0, [r2, #40]	; 0x28
   11e08:	beq	11e44 <__snprintf_chk@plt+0x1200>
   11e0c:	ldr	r3, [r2, #36]	; 0x24
   11e10:	cmp	r3, #0
   11e14:	moveq	r0, r4
   11e18:	bne	11e34 <__snprintf_chk@plt+0x11f0>
   11e1c:	ldr	r2, [sp, #20]
   11e20:	ldr	r3, [r5]
   11e24:	cmp	r2, r3
   11e28:	bne	11f68 <__snprintf_chk@plt+0x1324>
   11e2c:	add	sp, sp, #24
   11e30:	pop	{r4, r5, r6, r7, r8, pc}
   11e34:	mov	r1, r4
   11e38:	bl	10bfc <XSynchronize@plt>
   11e3c:	mov	r0, r4
   11e40:	b	11e1c <__snprintf_chk@plt+0x11d8>
   11e44:	ldr	r3, [r6, #32]
   11e48:	cmp	r3, #0
   11e4c:	beq	11f4c <__snprintf_chk@plt+0x1308>
   11e50:	ldr	r3, [sp, #16]
   11e54:	ldr	r8, [pc, #284]	; 11f78 <__snprintf_chk@plt+0x1334>
   11e58:	sub	r2, r3, #1
   11e5c:	ldr	r0, [r8]
   11e60:	cmp	r2, #3
   11e64:	ldrls	pc, [pc, r2, lsl #2]
   11e68:	b	11f38 <__snprintf_chk@plt+0x12f4>
   11e6c:	strdeq	r1, [r1], -r4
   11e70:	ldrdeq	r1, [r1], -ip
   11e74:	andeq	r1, r1, r4, asr #29
   11e78:	andeq	r1, r1, ip, ror lr
   11e7c:	ldr	r3, [r7]
   11e80:	mov	r4, #0
   11e84:	mov	r7, #1
   11e88:	mov	r1, r7
   11e8c:	ldr	r2, [pc, #232]	; 11f7c <__snprintf_chk@plt+0x1338>
   11e90:	str	r4, [sp, #4]
   11e94:	str	r7, [sp]
   11e98:	bl	10be4 <__fprintf_chk@plt>
   11e9c:	ldr	r2, [sp, #8]
   11ea0:	ldr	ip, [sp, #12]
   11ea4:	ldr	r3, [r6, #32]
   11ea8:	ldr	r0, [r8]
   11eac:	stm	sp, {r2, ip}
   11eb0:	mov	r1, r7
   11eb4:	ldr	r2, [pc, #196]	; 11f80 <__snprintf_chk@plt+0x133c>
   11eb8:	bl	10be4 <__fprintf_chk@plt>
   11ebc:	mov	r0, r4
   11ec0:	b	11e1c <__snprintf_chk@plt+0x11d8>
   11ec4:	ldr	r3, [r6, #32]
   11ec8:	ldr	r2, [pc, #180]	; 11f84 <__snprintf_chk@plt+0x1340>
   11ecc:	mov	r1, #1
   11ed0:	bl	10be4 <__fprintf_chk@plt>
   11ed4:	mov	r0, #0
   11ed8:	b	11e1c <__snprintf_chk@plt+0x11d8>
   11edc:	ldr	r3, [r6, #32]
   11ee0:	ldr	r2, [pc, #160]	; 11f88 <__snprintf_chk@plt+0x1344>
   11ee4:	mov	r1, #1
   11ee8:	bl	10be4 <__fprintf_chk@plt>
   11eec:	mov	r0, #0
   11ef0:	b	11e1c <__snprintf_chk@plt+0x11d8>
   11ef4:	mov	r6, #1
   11ef8:	mov	r4, #0
   11efc:	ldr	r3, [r7]
   11f00:	mov	r1, r6
   11f04:	ldr	r2, [pc, #112]	; 11f7c <__snprintf_chk@plt+0x1338>
   11f08:	str	r4, [sp, #4]
   11f0c:	str	r6, [sp]
   11f10:	bl	10be4 <__fprintf_chk@plt>
   11f14:	ldr	r2, [sp, #12]
   11f18:	ldr	r0, [r8]
   11f1c:	str	r2, [sp]
   11f20:	ldr	r3, [sp, #8]
   11f24:	mov	r1, r6
   11f28:	ldr	r2, [pc, #92]	; 11f8c <__snprintf_chk@plt+0x1348>
   11f2c:	bl	10be4 <__fprintf_chk@plt>
   11f30:	mov	r0, r4
   11f34:	b	11e1c <__snprintf_chk@plt+0x11d8>
   11f38:	ldr	r2, [pc, #80]	; 11f90 <__snprintf_chk@plt+0x134c>
   11f3c:	mov	r1, #1
   11f40:	bl	10be4 <__fprintf_chk@plt>
   11f44:	mov	r0, #0
   11f48:	b	11e1c <__snprintf_chk@plt+0x11d8>
   11f4c:	ldr	r0, [pc, #64]	; 11f94 <__snprintf_chk@plt+0x1350>
   11f50:	bl	10b6c <getenv@plt>
   11f54:	cmp	r0, #0
   11f58:	strne	r0, [r6, #32]
   11f5c:	ldreq	r3, [pc, #52]	; 11f98 <__snprintf_chk@plt+0x1354>
   11f60:	streq	r3, [r6, #32]
   11f64:	b	11e50 <__snprintf_chk@plt+0x120c>
   11f68:	bl	10b24 <__stack_chk_fail@plt>
   11f6c:	strdeq	r3, [r2], -r8
   11f70:	andeq	r4, r2, r4, lsr #1
   11f74:	andeq	r4, r2, r4, asr r1
   11f78:	andeq	r4, r2, r8, asr #2
   11f7c:	andeq	r3, r1, r8, asr #16
   11f80:	andeq	r3, r1, r0, ror #17
   11f84:			; <UNDEFINED> instruction: 0x000138bc
   11f88:	andeq	r3, r1, r0, lsr #17
   11f8c:	andeq	r3, r1, r4, ror r8
   11f90:	andeq	r3, r1, r0, lsl r9
   11f94:	andeq	r3, r1, r0, lsr r8
   11f98:	andeq	r3, r1, r8, lsr r8
   11f9c:	ldrb	r2, [r0]
   11fa0:	cmp	r2, #47	; 0x2f
   11fa4:	beq	11fac <__snprintf_chk@plt+0x1368>
   11fa8:	b	110d8 <__snprintf_chk@plt+0x494>
   11fac:	push	{r4, r5, r6, lr}
   11fb0:	mov	r4, r0
   11fb4:	ldr	r1, [pc, #88]	; 12014 <__snprintf_chk@plt+0x13d0>
   11fb8:	bl	10ae8 <fopen@plt>
   11fbc:	ldr	r3, [pc, #84]	; 12018 <__snprintf_chk@plt+0x13d4>
   11fc0:	ldr	r3, [r3]
   11fc4:	cmp	r3, #7
   11fc8:	mov	r5, r0
   11fcc:	ble	11ff4 <__snprintf_chk@plt+0x13b0>
   11fd0:	ldr	r3, [pc, #68]	; 1201c <__snprintf_chk@plt+0x13d8>
   11fd4:	cmp	r0, #0
   11fd8:	ldr	r2, [pc, #64]	; 12020 <__snprintf_chk@plt+0x13dc>
   11fdc:	moveq	r2, r3
   11fe0:	mov	r3, r4
   11fe4:	ldr	r1, [pc, #56]	; 12024 <__snprintf_chk@plt+0x13e0>
   11fe8:	mov	r0, #1
   11fec:	bl	10bd8 <__printf_chk@plt>
   11ff0:	b	11ffc <__snprintf_chk@plt+0x13b8>
   11ff4:	cmp	r0, #0
   11ff8:	beq	12004 <__snprintf_chk@plt+0x13c0>
   11ffc:	mov	r0, r5
   12000:	pop	{r4, r5, r6, pc}
   12004:	cmp	r3, #0
   12008:	ldrgt	r2, [pc, #12]	; 1201c <__snprintf_chk@plt+0x13d8>
   1200c:	bgt	11fe0 <__snprintf_chk@plt+0x139c>
   12010:	b	11ffc <__snprintf_chk@plt+0x13b8>
   12014:	andeq	r2, r1, r0, lsl #31
   12018:	andeq	r4, r2, r4, lsr #1
   1201c:	andeq	r2, r1, r4, lsl #31
   12020:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12024:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12028:	push	{r4, r5, r6, r7, r8, lr}
   1202c:	mov	r7, r1
   12030:	bl	10b18 <strdup@plt>
   12034:	subs	r6, r0, #0
   12038:	movne	r5, r6
   1203c:	movne	r8, #0
   12040:	beq	120b0 <__snprintf_chk@plt+0x146c>
   12044:	ldrb	r3, [r5]
   12048:	cmp	r3, #0
   1204c:	beq	12080 <__snprintf_chk@plt+0x143c>
   12050:	mov	r1, #44	; 0x2c
   12054:	mov	r0, r6
   12058:	bl	10bc0 <strchr@plt>
   1205c:	subs	r4, r0, #0
   12060:	beq	12090 <__snprintf_chk@plt+0x144c>
   12064:	strb	r8, [r4], #1
   12068:	ldrb	r3, [r5]
   1206c:	cmp	r3, #0
   12070:	streq	r3, [r7, #8]
   12074:	bne	120a0 <__snprintf_chk@plt+0x145c>
   12078:	subs	r5, r4, #0
   1207c:	bne	12044 <__snprintf_chk@plt+0x1400>
   12080:	mov	r0, r6
   12084:	bl	10af4 <free@plt>
   12088:	mov	r0, #1
   1208c:	pop	{r4, r5, r6, r7, r8, pc}
   12090:	mov	r1, r5
   12094:	mov	r0, r7
   12098:	bl	10fd0 <__snprintf_chk@plt+0x38c>
   1209c:	b	12080 <__snprintf_chk@plt+0x143c>
   120a0:	mov	r1, r5
   120a4:	mov	r0, r7
   120a8:	bl	10fd0 <__snprintf_chk@plt+0x38c>
   120ac:	b	12078 <__snprintf_chk@plt+0x1434>
   120b0:	ldr	r3, [pc, #24]	; 120d0 <__snprintf_chk@plt+0x148c>
   120b4:	mov	r2, #15
   120b8:	mov	r1, #1
   120bc:	ldr	r3, [r3]
   120c0:	ldr	r0, [pc, #12]	; 120d4 <__snprintf_chk@plt+0x1490>
   120c4:	bl	10b48 <fwrite@plt>
   120c8:	mvn	r0, #0
   120cc:	bl	10ba8 <exit@plt>
   120d0:	andeq	r4, r2, r8, asr #2
   120d4:	andeq	r2, r1, r4, asr #30
   120d8:	push	{r4, r5, r6, lr}
   120dc:	sub	sp, sp, #48	; 0x30
   120e0:	ldr	r4, [pc, #364]	; 12254 <__snprintf_chk@plt+0x1610>
   120e4:	ldr	r5, [pc, #364]	; 12258 <__snprintf_chk@plt+0x1614>
   120e8:	mov	r3, #0
   120ec:	ldr	r1, [r4]
   120f0:	ldr	r0, [r5, #40]	; 0x28
   120f4:	str	r1, [sp, #44]	; 0x2c
   120f8:	add	r2, sp, #16
   120fc:	add	r1, sp, #12
   12100:	str	r3, [sp, #12]
   12104:	bl	10bcc <XkbRF_GetNamesProp@plt>
   12108:	cmp	r0, #0
   1210c:	beq	121a4 <__snprintf_chk@plt+0x1560>
   12110:	ldr	r1, [sp, #12]
   12114:	cmp	r1, #0
   12118:	beq	121a4 <__snprintf_chk@plt+0x1560>
   1211c:	mov	r2, #1
   12120:	ldr	r0, [pc, #308]	; 1225c <__snprintf_chk@plt+0x1618>
   12124:	bl	112ac <__snprintf_chk@plt+0x668>
   12128:	ldr	r1, [sp, #16]
   1212c:	cmp	r1, #0
   12130:	beq	12140 <__snprintf_chk@plt+0x14fc>
   12134:	mov	r2, #1
   12138:	ldr	r0, [pc, #288]	; 12260 <__snprintf_chk@plt+0x161c>
   1213c:	bl	112ac <__snprintf_chk@plt+0x668>
   12140:	ldr	r1, [sp, #20]
   12144:	cmp	r1, #0
   12148:	beq	12158 <__snprintf_chk@plt+0x1514>
   1214c:	mov	r2, #1
   12150:	ldr	r0, [pc, #268]	; 12264 <__snprintf_chk@plt+0x1620>
   12154:	bl	112ac <__snprintf_chk@plt+0x668>
   12158:	ldr	r1, [sp, #24]
   1215c:	cmp	r1, #0
   12160:	beq	12170 <__snprintf_chk@plt+0x152c>
   12164:	mov	r2, #1
   12168:	ldr	r0, [pc, #248]	; 12268 <__snprintf_chk@plt+0x1624>
   1216c:	bl	112ac <__snprintf_chk@plt+0x668>
   12170:	ldr	r0, [sp, #28]
   12174:	cmp	r0, #0
   12178:	beq	12188 <__snprintf_chk@plt+0x1544>
   1217c:	ldr	r3, [r5, #24]
   12180:	cmp	r3, #0
   12184:	beq	121d8 <__snprintf_chk@plt+0x1594>
   12188:	ldr	r2, [sp, #44]	; 0x2c
   1218c:	ldr	r3, [r4]
   12190:	mov	r0, #1
   12194:	cmp	r2, r3
   12198:	bne	12248 <__snprintf_chk@plt+0x1604>
   1219c:	add	sp, sp, #48	; 0x30
   121a0:	pop	{r4, r5, r6, pc}
   121a4:	ldr	r6, [pc, #192]	; 1226c <__snprintf_chk@plt+0x1628>
   121a8:	ldr	r3, [r6]
   121ac:	cmp	r3, #3
   121b0:	bgt	121ec <__snprintf_chk@plt+0x15a8>
   121b4:	ldr	r2, [pc, #180]	; 12270 <__snprintf_chk@plt+0x162c>
   121b8:	mov	r3, #0
   121bc:	ldr	r1, [pc, #176]	; 12274 <__snprintf_chk@plt+0x1630>
   121c0:	ldr	r0, [pc, #176]	; 12278 <__snprintf_chk@plt+0x1634>
   121c4:	str	r1, [sp, #12]
   121c8:	str	r0, [sp, #16]
   121cc:	strd	r2, [sp, #20]
   121d0:	str	r3, [sp, #28]
   121d4:	b	1211c <__snprintf_chk@plt+0x14d8>
   121d8:	ldr	r1, [pc, #156]	; 1227c <__snprintf_chk@plt+0x1638>
   121dc:	bl	12028 <__snprintf_chk@plt+0x13e4>
   121e0:	ldr	r0, [sp, #28]
   121e4:	bl	10b30 <XFree@plt>
   121e8:	b	12188 <__snprintf_chk@plt+0x1544>
   121ec:	ldr	r2, [pc, #140]	; 12280 <__snprintf_chk@plt+0x163c>
   121f0:	ldr	r1, [pc, #140]	; 12284 <__snprintf_chk@plt+0x1640>
   121f4:	mov	r0, #1
   121f8:	bl	10bd8 <__printf_chk@plt>
   121fc:	ldr	r0, [r6]
   12200:	ldr	r2, [pc, #108]	; 12274 <__snprintf_chk@plt+0x1630>
   12204:	ldr	r3, [pc, #108]	; 12278 <__snprintf_chk@plt+0x1634>
   12208:	ldr	r1, [pc, #96]	; 12270 <__snprintf_chk@plt+0x162c>
   1220c:	cmp	r0, #3
   12210:	mov	r0, #0
   12214:	strd	r2, [sp, #12]
   12218:	str	r1, [sp, #20]
   1221c:	str	r0, [sp, #24]
   12220:	str	r0, [sp, #28]
   12224:	ble	1224c <__snprintf_chk@plt+0x1608>
   12228:	str	r1, [sp]
   1222c:	mov	r0, #1
   12230:	ldr	r1, [pc, #80]	; 12288 <__snprintf_chk@plt+0x1644>
   12234:	bl	10bd8 <__printf_chk@plt>
   12238:	ldr	r1, [sp, #12]
   1223c:	cmp	r1, #0
   12240:	beq	12128 <__snprintf_chk@plt+0x14e4>
   12244:	b	1211c <__snprintf_chk@plt+0x14d8>
   12248:	bl	10b24 <__stack_chk_fail@plt>
   1224c:	mov	r1, r2
   12250:	b	1211c <__snprintf_chk@plt+0x14d8>
   12254:	strdeq	r3, [r2], -r8
   12258:	andeq	r4, r2, r4, asr r1
   1225c:	andeq	r4, r2, r8, lsr #1
   12260:	ldrdeq	r4, [r2], -r8
   12264:	andeq	r4, r2, r4, ror #1
   12268:	strdeq	r4, [r2], -r0
   1226c:	andeq	r4, r2, r4, lsr #1
   12270:	andeq	r3, r1, ip, ror r9
   12274:	andeq	r3, r1, r8, lsr r9
   12278:	andeq	r3, r1, r4, ror r9
   1227c:	andeq	r4, r2, r0, ror #2
   12280:	andeq	r3, r1, r0, asr #18
   12284:	andeq	r3, r1, r4, asr r9
   12288:	andeq	r3, r1, r0, lsl #19
   1228c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12290:	subs	r6, r0, #0
   12294:	mov	r7, r1
   12298:	ldr	r9, [r1, #8]
   1229c:	beq	12380 <__snprintf_chk@plt+0x173c>
   122a0:	bl	10bb4 <strlen@plt>
   122a4:	cmp	r9, #0
   122a8:	add	r4, r0, #1
   122ac:	ble	122f0 <__snprintf_chk@plt+0x16ac>
   122b0:	ldr	r8, [r7]
   122b4:	mov	r5, #0
   122b8:	sub	r8, r8, #4
   122bc:	ldr	r0, [r8, #4]!
   122c0:	cmp	r0, #0
   122c4:	beq	122d4 <__snprintf_chk@plt+0x1690>
   122c8:	bl	10bb4 <strlen@plt>
   122cc:	add	r4, r4, #1
   122d0:	add	r4, r0, r4
   122d4:	add	r5, r5, #1
   122d8:	cmp	r9, r5
   122dc:	bgt	122bc <__snprintf_chk@plt+0x1678>
   122e0:	cmp	r4, #0
   122e4:	beq	1238c <__snprintf_chk@plt+0x1748>
   122e8:	cmp	r6, #0
   122ec:	beq	12394 <__snprintf_chk@plt+0x1750>
   122f0:	mov	r1, r4
   122f4:	mov	r0, r6
   122f8:	bl	10b3c <realloc@plt>
   122fc:	subs	r4, r0, #0
   12300:	beq	123a8 <__snprintf_chk@plt+0x1764>
   12304:	ldr	r3, [r7, #8]
   12308:	cmp	r3, #0
   1230c:	ble	1238c <__snprintf_chk@plt+0x1748>
   12310:	mov	r6, #1
   12314:	ldr	r8, [pc, #172]	; 123c8 <__snprintf_chk@plt+0x1784>
   12318:	mov	r5, #0
   1231c:	b	12358 <__snprintf_chk@plt+0x1714>
   12320:	bl	10bb4 <strlen@plt>
   12324:	ldrh	r3, [r8]
   12328:	mov	r2, r0
   1232c:	add	r0, r0, #1
   12330:	strh	r3, [r4, r2]
   12334:	ldr	r3, [r7]
   12338:	add	r0, r4, r0
   1233c:	ldr	r1, [r3, r9]
   12340:	bl	10b54 <strcpy@plt>
   12344:	add	r6, r6, #1
   12348:	ldr	r3, [r7, #8]
   1234c:	add	r5, r5, #1
   12350:	cmp	r3, r5
   12354:	ble	1238c <__snprintf_chk@plt+0x1748>
   12358:	ldr	r3, [r7]
   1235c:	lsl	r9, r5, #2
   12360:	ldr	r1, [r3, r5, lsl #2]
   12364:	cmp	r1, #0
   12368:	beq	12348 <__snprintf_chk@plt+0x1704>
   1236c:	cmp	r6, #0
   12370:	mov	r0, r4
   12374:	bne	12320 <__snprintf_chk@plt+0x16dc>
   12378:	bl	10b54 <strcpy@plt>
   1237c:	b	12344 <__snprintf_chk@plt+0x1700>
   12380:	cmp	r9, #0
   12384:	mov	r4, r6
   12388:	bgt	122b0 <__snprintf_chk@plt+0x166c>
   1238c:	mov	r0, r4
   12390:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12394:	mov	r0, r4
   12398:	mov	r1, #1
   1239c:	bl	10ab8 <calloc@plt>
   123a0:	subs	r4, r0, #0
   123a4:	bne	12314 <__snprintf_chk@plt+0x16d0>
   123a8:	ldr	r3, [pc, #28]	; 123cc <__snprintf_chk@plt+0x1788>
   123ac:	mov	r2, #15
   123b0:	mov	r1, #1
   123b4:	ldr	r3, [r3]
   123b8:	ldr	r0, [pc, #16]	; 123d0 <__snprintf_chk@plt+0x178c>
   123bc:	bl	10b48 <fwrite@plt>
   123c0:	mvn	r0, #0
   123c4:	bl	10ba8 <exit@plt>
   123c8:			; <UNDEFINED> instruction: 0x000139b8
   123cc:	andeq	r4, r2, r8, asr #2
   123d0:	andeq	r2, r1, r4, asr #30
   123d4:	cmp	r0, #0
   123d8:	push	{r4, r5, r6, lr}
   123dc:	mov	r5, r1
   123e0:	beq	12480 <__snprintf_chk@plt+0x183c>
   123e4:	ldr	r4, [pc, #308]	; 12520 <__snprintf_chk@plt+0x18dc>
   123e8:	ldr	r2, [r4, #8]
   123ec:	cmp	r2, #0
   123f0:	beq	12400 <__snprintf_chk@plt+0x17bc>
   123f4:	ldr	r1, [pc, #296]	; 12524 <__snprintf_chk@plt+0x18e0>
   123f8:	mov	r0, #1
   123fc:	bl	10bd8 <__printf_chk@plt>
   12400:	ldr	r2, [r4, #56]	; 0x38
   12404:	cmp	r2, #0
   12408:	beq	12418 <__snprintf_chk@plt+0x17d4>
   1240c:	ldr	r1, [pc, #276]	; 12528 <__snprintf_chk@plt+0x18e4>
   12410:	mov	r0, #1
   12414:	bl	10bd8 <__printf_chk@plt>
   12418:	ldr	r2, [r4, #68]	; 0x44
   1241c:	cmp	r2, #0
   12420:	beq	12430 <__snprintf_chk@plt+0x17ec>
   12424:	ldr	r1, [pc, #256]	; 1252c <__snprintf_chk@plt+0x18e8>
   12428:	mov	r0, #1
   1242c:	bl	10bd8 <__printf_chk@plt>
   12430:	ldr	r2, [r4, #80]	; 0x50
   12434:	cmp	r2, #0
   12438:	beq	12448 <__snprintf_chk@plt+0x1804>
   1243c:	ldr	r1, [pc, #236]	; 12530 <__snprintf_chk@plt+0x18ec>
   12440:	mov	r0, #1
   12444:	bl	10bd8 <__printf_chk@plt>
   12448:	ldr	r1, [pc, #228]	; 12534 <__snprintf_chk@plt+0x18f0>
   1244c:	ldr	r3, [r1, #12]
   12450:	cmp	r3, #0
   12454:	beq	12480 <__snprintf_chk@plt+0x183c>
   12458:	add	r1, r1, #12
   1245c:	mov	r0, #0
   12460:	bl	1228c <__snprintf_chk@plt+0x1648>
   12464:	ldr	r1, [pc, #204]	; 12538 <__snprintf_chk@plt+0x18f4>
   12468:	mov	r4, r0
   1246c:	mov	r2, r0
   12470:	mov	r0, #1
   12474:	bl	10bd8 <__printf_chk@plt>
   12478:	mov	r0, r4
   1247c:	bl	10af4 <free@plt>
   12480:	cmp	r5, #0
   12484:	popeq	{r4, r5, r6, pc}
   12488:	ldr	r4, [pc, #144]	; 12520 <__snprintf_chk@plt+0x18dc>
   1248c:	ldr	r2, [r4, #152]	; 0x98
   12490:	cmp	r2, #0
   12494:	beq	124a4 <__snprintf_chk@plt+0x1860>
   12498:	ldr	r1, [pc, #156]	; 1253c <__snprintf_chk@plt+0x18f8>
   1249c:	mov	r0, #1
   124a0:	bl	10bd8 <__printf_chk@plt>
   124a4:	ldr	r2, [r4, #92]	; 0x5c
   124a8:	cmp	r2, #0
   124ac:	beq	124bc <__snprintf_chk@plt+0x1878>
   124b0:	ldr	r1, [pc, #136]	; 12540 <__snprintf_chk@plt+0x18fc>
   124b4:	mov	r0, #1
   124b8:	bl	10bd8 <__printf_chk@plt>
   124bc:	ldr	r2, [r4, #104]	; 0x68
   124c0:	cmp	r2, #0
   124c4:	beq	124d4 <__snprintf_chk@plt+0x1890>
   124c8:	ldr	r1, [pc, #116]	; 12544 <__snprintf_chk@plt+0x1900>
   124cc:	mov	r0, #1
   124d0:	bl	10bd8 <__printf_chk@plt>
   124d4:	ldr	r2, [r4, #116]	; 0x74
   124d8:	cmp	r2, #0
   124dc:	beq	124ec <__snprintf_chk@plt+0x18a8>
   124e0:	ldr	r1, [pc, #96]	; 12548 <__snprintf_chk@plt+0x1904>
   124e4:	mov	r0, #1
   124e8:	bl	10bd8 <__printf_chk@plt>
   124ec:	ldr	r2, [r4, #128]	; 0x80
   124f0:	cmp	r2, #0
   124f4:	beq	12504 <__snprintf_chk@plt+0x18c0>
   124f8:	ldr	r1, [pc, #76]	; 1254c <__snprintf_chk@plt+0x1908>
   124fc:	mov	r0, #1
   12500:	bl	10bd8 <__printf_chk@plt>
   12504:	ldr	r2, [r4, #140]	; 0x8c
   12508:	cmp	r2, #0
   1250c:	popeq	{r4, r5, r6, pc}
   12510:	ldr	r1, [pc, #56]	; 12550 <__snprintf_chk@plt+0x190c>
   12514:	mov	r0, #1
   12518:	pop	{r4, r5, r6, lr}
   1251c:	b	10bd8 <__printf_chk@plt>
   12520:	andeq	r4, r2, r4, lsr #1
   12524:			; <UNDEFINED> instruction: 0x000139bc
   12528:	andeq	r3, r1, ip, asr #19
   1252c:	ldrdeq	r3, [r1], -ip
   12530:	andeq	r3, r1, ip, ror #19
   12534:	andeq	r4, r2, r4, asr r1
   12538:	strdeq	r3, [r1], -ip
   1253c:	andeq	r3, r1, ip, lsl #20
   12540:	andeq	r3, r1, ip, lsl sl
   12544:	andeq	r3, r1, ip, lsr #20
   12548:	andeq	r3, r1, ip, lsr sl
   1254c:	andeq	r3, r1, ip, asr #20
   12550:	andeq	r3, r1, ip, asr sl
   12554:	push	{r4, r5, r6, r7, r8, lr}
   12558:	mov	r7, r0
   1255c:	bl	11f9c <__snprintf_chk@plt+0x1358>
   12560:	subs	r6, r0, #0
   12564:	moveq	r5, r6
   12568:	beq	12708 <__snprintf_chk@plt+0x1ac4>
   1256c:	ldr	r3, [pc, #476]	; 12750 <__snprintf_chk@plt+0x1b0c>
   12570:	ldr	r4, [pc, #476]	; 12754 <__snprintf_chk@plt+0x1b10>
   12574:	mov	r2, #0
   12578:	ldr	r1, [r3]
   1257c:	add	r3, r4, #44	; 0x2c
   12580:	bl	10aac <XkbCFParse@plt>
   12584:	mov	r5, r0
   12588:	mov	r0, r6
   1258c:	bl	10bf0 <fclose@plt>
   12590:	cmp	r5, #0
   12594:	beq	12710 <__snprintf_chk@plt+0x1acc>
   12598:	ldr	r1, [r4, #80]	; 0x50
   1259c:	cmp	r1, #0
   125a0:	beq	125b8 <__snprintf_chk@plt+0x1974>
   125a4:	mov	r2, #3
   125a8:	ldr	r0, [pc, #424]	; 12758 <__snprintf_chk@plt+0x1b14>
   125ac:	bl	112ac <__snprintf_chk@plt+0x668>
   125b0:	mov	r3, #0
   125b4:	str	r3, [r4, #80]	; 0x50
   125b8:	ldr	r1, [r4, #84]	; 0x54
   125bc:	cmp	r1, #0
   125c0:	beq	125d8 <__snprintf_chk@plt+0x1994>
   125c4:	mov	r2, #3
   125c8:	ldr	r0, [pc, #396]	; 1275c <__snprintf_chk@plt+0x1b18>
   125cc:	bl	112ac <__snprintf_chk@plt+0x668>
   125d0:	mov	r3, #0
   125d4:	str	r3, [r4, #84]	; 0x54
   125d8:	ldr	r1, [r4, #88]	; 0x58
   125dc:	cmp	r1, #0
   125e0:	beq	125f8 <__snprintf_chk@plt+0x19b4>
   125e4:	mov	r2, #3
   125e8:	ldr	r0, [pc, #368]	; 12760 <__snprintf_chk@plt+0x1b1c>
   125ec:	bl	112ac <__snprintf_chk@plt+0x668>
   125f0:	mov	r3, #0
   125f4:	str	r3, [r4, #88]	; 0x58
   125f8:	ldr	r1, [r4, #92]	; 0x5c
   125fc:	cmp	r1, #0
   12600:	beq	12618 <__snprintf_chk@plt+0x19d4>
   12604:	mov	r2, #3
   12608:	ldr	r0, [pc, #340]	; 12764 <__snprintf_chk@plt+0x1b20>
   1260c:	bl	112ac <__snprintf_chk@plt+0x668>
   12610:	mov	r3, #0
   12614:	str	r3, [r4, #92]	; 0x5c
   12618:	ldr	r0, [r4, #96]	; 0x60
   1261c:	cmp	r0, #0
   12620:	beq	12634 <__snprintf_chk@plt+0x19f0>
   12624:	ldr	r1, [pc, #316]	; 12768 <__snprintf_chk@plt+0x1b24>
   12628:	bl	12028 <__snprintf_chk@plt+0x13e4>
   1262c:	mov	r3, #0
   12630:	str	r3, [r4, #96]	; 0x60
   12634:	ldr	r1, [r4, #100]	; 0x64
   12638:	cmp	r1, #0
   1263c:	beq	12654 <__snprintf_chk@plt+0x1a10>
   12640:	mov	r2, #3
   12644:	ldr	r0, [pc, #288]	; 1276c <__snprintf_chk@plt+0x1b28>
   12648:	bl	112ac <__snprintf_chk@plt+0x668>
   1264c:	mov	r3, #0
   12650:	str	r3, [r4, #100]	; 0x64
   12654:	ldr	r1, [r4, #104]	; 0x68
   12658:	cmp	r1, #0
   1265c:	beq	12674 <__snprintf_chk@plt+0x1a30>
   12660:	mov	r2, #3
   12664:	ldr	r0, [pc, #260]	; 12770 <__snprintf_chk@plt+0x1b2c>
   12668:	bl	112ac <__snprintf_chk@plt+0x668>
   1266c:	mov	r3, #0
   12670:	str	r3, [r4, #104]	; 0x68
   12674:	ldr	r1, [r4, #108]	; 0x6c
   12678:	cmp	r1, #0
   1267c:	beq	12694 <__snprintf_chk@plt+0x1a50>
   12680:	mov	r2, #3
   12684:	ldr	r0, [pc, #232]	; 12774 <__snprintf_chk@plt+0x1b30>
   12688:	bl	112ac <__snprintf_chk@plt+0x668>
   1268c:	mov	r3, #0
   12690:	str	r3, [r4, #108]	; 0x6c
   12694:	ldr	r1, [r4, #116]	; 0x74
   12698:	cmp	r1, #0
   1269c:	beq	126b4 <__snprintf_chk@plt+0x1a70>
   126a0:	mov	r2, #3
   126a4:	ldr	r0, [pc, #204]	; 12778 <__snprintf_chk@plt+0x1b34>
   126a8:	bl	112ac <__snprintf_chk@plt+0x668>
   126ac:	mov	r3, #0
   126b0:	str	r3, [r4, #116]	; 0x74
   126b4:	ldr	r1, [r4, #120]	; 0x78
   126b8:	cmp	r1, #0
   126bc:	beq	126d4 <__snprintf_chk@plt+0x1a90>
   126c0:	mov	r2, #3
   126c4:	ldr	r0, [pc, #176]	; 1277c <__snprintf_chk@plt+0x1b38>
   126c8:	bl	112ac <__snprintf_chk@plt+0x668>
   126cc:	mov	r3, #0
   126d0:	str	r3, [r4, #120]	; 0x78
   126d4:	ldr	r1, [r4, #124]	; 0x7c
   126d8:	cmp	r1, #0
   126dc:	beq	126f4 <__snprintf_chk@plt+0x1ab0>
   126e0:	mov	r2, #3
   126e4:	ldr	r0, [pc, #148]	; 12780 <__snprintf_chk@plt+0x1b3c>
   126e8:	bl	112ac <__snprintf_chk@plt+0x668>
   126ec:	mov	r3, #0
   126f0:	str	r3, [r4, #124]	; 0x7c
   126f4:	ldr	r3, [pc, #136]	; 12784 <__snprintf_chk@plt+0x1b40>
   126f8:	ldr	r3, [r3]
   126fc:	cmp	r3, #5
   12700:	movle	r5, #1
   12704:	bgt	12730 <__snprintf_chk@plt+0x1aec>
   12708:	mov	r0, r5
   1270c:	pop	{r4, r5, r6, r7, r8, pc}
   12710:	ldr	r1, [pc, #112]	; 12788 <__snprintf_chk@plt+0x1b44>
   12714:	mov	r3, r7
   12718:	ldr	r2, [pc, #108]	; 1278c <__snprintf_chk@plt+0x1b48>
   1271c:	ldr	r0, [r1]
   12720:	mov	r1, #1
   12724:	bl	10be4 <__fprintf_chk@plt>
   12728:	mov	r0, r5
   1272c:	pop	{r4, r5, r6, r7, r8, pc}
   12730:	ldr	r0, [pc, #88]	; 12790 <__snprintf_chk@plt+0x1b4c>
   12734:	bl	10b78 <puts@plt>
   12738:	mov	r1, #1
   1273c:	mov	r0, r1
   12740:	mov	r5, #1
   12744:	bl	123d4 <__snprintf_chk@plt+0x1790>
   12748:	mov	r0, r5
   1274c:	pop	{r4, r5, r6, r7, r8, pc}
   12750:	andeq	r4, r2, ip, asr #2
   12754:	andeq	r4, r2, r4, asr r1
   12758:	andeq	r4, r2, r8, lsr #1
   1275c:	ldrdeq	r4, [r2], -r8
   12760:	andeq	r4, r2, r4, ror #1
   12764:	strdeq	r4, [r2], -r0
   12768:	andeq	r4, r2, r0, ror #2
   1276c:	andeq	r4, r2, r8, lsr r1
   12770:	strdeq	r4, [r2], -ip
   12774:	andeq	r4, r2, ip, lsr #2
   12778:	andeq	r4, r2, r0, lsr #2
   1277c:	andeq	r4, r2, r8, lsl #2
   12780:	andeq	r4, r2, r4, lsl r1
   12784:	andeq	r4, r2, r4, lsr #1
   12788:	andeq	r4, r2, r8, asr #2
   1278c:	andeq	r3, r1, ip, ror #20
   12790:	muleq	r1, r4, sl
   12794:	push	{r4, r5, r6, r7, lr}
   12798:	mov	r6, r1
   1279c:	ldr	r4, [pc, #116]	; 12818 <__snprintf_chk@plt+0x1bd4>
   127a0:	sub	sp, sp, #12
   127a4:	mov	r5, r0
   127a8:	ldr	r1, [r4]
   127ac:	mov	r7, r2
   127b0:	cmp	r1, #7
   127b4:	bgt	127fc <__snprintf_chk@plt+0x1bb8>
   127b8:	mov	r0, r5
   127bc:	mov	r2, r7
   127c0:	mov	r1, r6
   127c4:	bl	10b0c <XkbRF_Load@plt>
   127c8:	subs	r5, r0, #0
   127cc:	beq	127dc <__snprintf_chk@plt+0x1b98>
   127d0:	ldr	r3, [r4]
   127d4:	cmp	r3, #7
   127d8:	bgt	127e8 <__snprintf_chk@plt+0x1ba4>
   127dc:	mov	r0, r5
   127e0:	add	sp, sp, #12
   127e4:	pop	{r4, r5, r6, r7, pc}
   127e8:	ldr	r0, [pc, #44]	; 1281c <__snprintf_chk@plt+0x1bd8>
   127ec:	bl	10b78 <puts@plt>
   127f0:	mov	r0, r5
   127f4:	add	sp, sp, #12
   127f8:	pop	{r4, r5, r6, r7, pc}
   127fc:	mov	r2, r0
   12800:	ldr	r1, [pc, #24]	; 12820 <__snprintf_chk@plt+0x1bdc>
   12804:	mov	r0, #1
   12808:	str	r3, [sp, #4]
   1280c:	bl	10bd8 <__printf_chk@plt>
   12810:	ldr	r3, [sp, #4]
   12814:	b	127b8 <__snprintf_chk@plt+0x1b74>
   12818:	andeq	r4, r2, r4, lsr #1
   1281c:	andeq	r3, r1, ip, asr #21
   12820:	andeq	r3, r1, r8, lsr #21
   12824:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12828:	sub	sp, sp, #4096	; 0x1000
   1282c:	ldr	r6, [pc, #760]	; 12b2c <__snprintf_chk@plt+0x1ee8>
   12830:	ldr	r3, [pc, #760]	; 12b30 <__snprintf_chk@plt+0x1eec>
   12834:	sub	sp, sp, #52	; 0x34
   12838:	ldr	r2, [r6, #60]	; 0x3c
   1283c:	ldr	r4, [pc, #752]	; 12b34 <__snprintf_chk@plt+0x1ef0>
   12840:	cmp	r2, #0
   12844:	add	r2, sp, #4096	; 0x1000
   12848:	ldr	r3, [r3]
   1284c:	add	r2, r2, #44	; 0x2c
   12850:	ldr	r1, [r6, #84]	; 0x54
   12854:	str	r3, [r2]
   12858:	ldr	r3, [r6, #72]	; 0x48
   1285c:	ldr	r2, [r4, #12]
   12860:	bne	1286c <__snprintf_chk@plt+0x1c28>
   12864:	cmp	r3, #0
   12868:	beq	1293c <__snprintf_chk@plt+0x1cf8>
   1286c:	cmp	r3, r1
   12870:	bls	1294c <__snprintf_chk@plt+0x1d08>
   12874:	mov	r3, #0
   12878:	mov	r0, r3
   1287c:	str	r3, [r6, #80]	; 0x50
   12880:	ldr	r1, [r6, #56]	; 0x38
   12884:	ldr	r3, [r6, #68]	; 0x44
   12888:	cmp	r2, #0
   1288c:	str	r0, [r4, #276]	; 0x114
   12890:	str	r1, [r4, #268]	; 0x10c
   12894:	str	r3, [r4, #272]	; 0x110
   12898:	beq	128ac <__snprintf_chk@plt+0x1c68>
   1289c:	ldr	r1, [pc, #660]	; 12b38 <__snprintf_chk@plt+0x1ef4>
   128a0:	ldr	r0, [r4, #280]	; 0x118
   128a4:	bl	1228c <__snprintf_chk@plt+0x1648>
   128a8:	str	r0, [r4, #280]	; 0x118
   128ac:	ldr	r3, [r6, #12]
   128b0:	cmp	r3, #0
   128b4:	beq	12ae0 <__snprintf_chk@plt+0x1e9c>
   128b8:	ldr	r9, [r6, #8]
   128bc:	ldrb	r3, [r9]
   128c0:	cmp	r3, #47	; 0x2f
   128c4:	beq	12ae8 <__snprintf_chk@plt+0x1ea4>
   128c8:	ldr	r3, [r4, #8]
   128cc:	cmp	r3, #0
   128d0:	ble	12ac0 <__snprintf_chk@plt+0x1e7c>
   128d4:	ldr	fp, [pc, #608]	; 12b3c <__snprintf_chk@plt+0x1ef8>
   128d8:	ldr	sl, [pc, #608]	; 12b40 <__snprintf_chk@plt+0x1efc>
   128dc:	mov	r5, #0
   128e0:	add	r8, sp, #48	; 0x30
   128e4:	lsl	r7, r5, #2
   128e8:	ldr	r2, [r4]
   128ec:	str	r9, [sp, #8]
   128f0:	mov	r3, #4096	; 0x1000
   128f4:	ldr	r2, [r2, r7]
   128f8:	mov	r1, r3
   128fc:	str	r2, [sp, #4]
   12900:	str	fp, [sp]
   12904:	mov	r2, #1
   12908:	add	r0, sp, #44	; 0x2c
   1290c:	bl	10c44 <__snprintf_chk@plt>
   12910:	add	r5, r5, #1
   12914:	cmp	r0, sl
   12918:	ble	12954 <__snprintf_chk@plt+0x1d10>
   1291c:	ldr	r3, [r6]
   12920:	cmp	r3, #0
   12924:	bgt	12a9c <__snprintf_chk@plt+0x1e58>
   12928:	ldr	r3, [r4, #8]
   1292c:	cmp	r5, r3
   12930:	bge	12ac0 <__snprintf_chk@plt+0x1e7c>
   12934:	add	r7, r7, #4
   12938:	b	128e8 <__snprintf_chk@plt+0x1ca4>
   1293c:	cmp	r1, #0
   12940:	bne	1294c <__snprintf_chk@plt+0x1d08>
   12944:	cmp	r2, #0
   12948:	beq	12b0c <__snprintf_chk@plt+0x1ec8>
   1294c:	ldr	r0, [r6, #80]	; 0x50
   12950:	b	12880 <__snprintf_chk@plt+0x1c3c>
   12954:	mov	r3, #1
   12958:	mov	r2, r3
   1295c:	ldr	r1, [r6, #44]	; 0x2c
   12960:	add	r0, sp, #44	; 0x2c
   12964:	bl	12794 <__snprintf_chk@plt+0x1b50>
   12968:	ldr	r3, [r4, #8]
   1296c:	cmp	r3, r5
   12970:	ble	12afc <__snprintf_chk@plt+0x1eb8>
   12974:	cmp	r0, #0
   12978:	beq	128e4 <__snprintf_chk@plt+0x1ca0>
   1297c:	ldr	r1, [pc, #448]	; 12b44 <__snprintf_chk@plt+0x1f00>
   12980:	sub	r2, r8, #28
   12984:	bl	10c14 <XkbRF_GetComponents@plt>
   12988:	ldr	r1, [r8, #-24]	; 0xffffffe8
   1298c:	cmp	r1, #0
   12990:	beq	129a8 <__snprintf_chk@plt+0x1d64>
   12994:	mov	r2, #2
   12998:	ldr	r0, [pc, #424]	; 12b48 <__snprintf_chk@plt+0x1f04>
   1299c:	bl	112ac <__snprintf_chk@plt+0x668>
   129a0:	mov	r3, #0
   129a4:	str	r3, [r8, #-24]	; 0xffffffe8
   129a8:	ldr	r1, [r8, #-12]
   129ac:	cmp	r1, #0
   129b0:	beq	129c8 <__snprintf_chk@plt+0x1d84>
   129b4:	mov	r2, #2
   129b8:	ldr	r0, [pc, #396]	; 12b4c <__snprintf_chk@plt+0x1f08>
   129bc:	bl	112ac <__snprintf_chk@plt+0x668>
   129c0:	mov	r3, #0
   129c4:	str	r3, [r8, #-12]
   129c8:	ldr	r1, [r8, #-20]	; 0xffffffec
   129cc:	cmp	r1, #0
   129d0:	beq	129e8 <__snprintf_chk@plt+0x1da4>
   129d4:	mov	r2, #2
   129d8:	ldr	r0, [pc, #368]	; 12b50 <__snprintf_chk@plt+0x1f0c>
   129dc:	bl	112ac <__snprintf_chk@plt+0x668>
   129e0:	mov	r3, #0
   129e4:	str	r3, [r8, #-20]	; 0xffffffec
   129e8:	ldr	r1, [r8, #-16]
   129ec:	cmp	r1, #0
   129f0:	beq	12a08 <__snprintf_chk@plt+0x1dc4>
   129f4:	mov	r2, #2
   129f8:	ldr	r0, [pc, #340]	; 12b54 <__snprintf_chk@plt+0x1f10>
   129fc:	bl	112ac <__snprintf_chk@plt+0x668>
   12a00:	mov	r3, #0
   12a04:	str	r3, [r8, #-16]
   12a08:	ldr	r1, [r8, #-8]
   12a0c:	cmp	r1, #0
   12a10:	beq	12a28 <__snprintf_chk@plt+0x1de4>
   12a14:	mov	r2, #2
   12a18:	ldr	r0, [pc, #312]	; 12b58 <__snprintf_chk@plt+0x1f14>
   12a1c:	bl	112ac <__snprintf_chk@plt+0x668>
   12a20:	mov	r3, #0
   12a24:	str	r3, [r8, #-8]
   12a28:	ldr	r1, [r8, #-28]	; 0xffffffe4
   12a2c:	cmp	r1, #0
   12a30:	beq	12a48 <__snprintf_chk@plt+0x1e04>
   12a34:	mov	r2, #2
   12a38:	ldr	r0, [pc, #284]	; 12b5c <__snprintf_chk@plt+0x1f18>
   12a3c:	bl	112ac <__snprintf_chk@plt+0x668>
   12a40:	mov	r3, #0
   12a44:	str	r3, [r8, #-28]	; 0xffffffe4
   12a48:	ldr	r3, [r6]
   12a4c:	cmp	r3, #6
   12a50:	ble	12a70 <__snprintf_chk@plt+0x1e2c>
   12a54:	ldr	r1, [pc, #260]	; 12b60 <__snprintf_chk@plt+0x1f1c>
   12a58:	mov	r2, r9
   12a5c:	mov	r0, #1
   12a60:	bl	10bd8 <__printf_chk@plt>
   12a64:	mov	r1, #0
   12a68:	mov	r0, #1
   12a6c:	bl	123d4 <__snprintf_chk@plt+0x1790>
   12a70:	mov	r0, #1
   12a74:	add	r3, sp, #4096	; 0x1000
   12a78:	add	r3, r3, #44	; 0x2c
   12a7c:	ldr	r2, [r3]
   12a80:	ldr	r3, [pc, #168]	; 12b30 <__snprintf_chk@plt+0x1eec>
   12a84:	ldr	r3, [r3]
   12a88:	cmp	r2, r3
   12a8c:	bne	12b28 <__snprintf_chk@plt+0x1ee4>
   12a90:	add	sp, sp, #4096	; 0x1000
   12a94:	add	sp, sp, #52	; 0x34
   12a98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a9c:	ldr	r2, [r4]
   12aa0:	mov	r3, r9
   12aa4:	ldr	r1, [pc, #184]	; 12b64 <__snprintf_chk@plt+0x1f20>
   12aa8:	ldr	r2, [r2, r7]
   12aac:	mov	r0, #1
   12ab0:	bl	10bd8 <__printf_chk@plt>
   12ab4:	ldr	r3, [r4, #8]
   12ab8:	cmp	r3, r5
   12abc:	bgt	12934 <__snprintf_chk@plt+0x1cf0>
   12ac0:	ldr	r1, [pc, #160]	; 12b68 <__snprintf_chk@plt+0x1f24>
   12ac4:	mov	r3, r9
   12ac8:	ldr	r2, [pc, #156]	; 12b6c <__snprintf_chk@plt+0x1f28>
   12acc:	ldr	r0, [r1]
   12ad0:	mov	r1, #1
   12ad4:	bl	10be4 <__fprintf_chk@plt>
   12ad8:	mov	r0, #0
   12adc:	b	12a74 <__snprintf_chk@plt+0x1e30>
   12ae0:	ldr	r9, [pc, #136]	; 12b70 <__snprintf_chk@plt+0x1f2c>
   12ae4:	b	128c8 <__snprintf_chk@plt+0x1c84>
   12ae8:	mov	r3, #1
   12aec:	mov	r2, r3
   12af0:	ldr	r1, [r6, #44]	; 0x2c
   12af4:	mov	r0, r9
   12af8:	bl	12794 <__snprintf_chk@plt+0x1b50>
   12afc:	cmp	r0, #0
   12b00:	beq	12ac0 <__snprintf_chk@plt+0x1e7c>
   12b04:	add	r8, sp, #48	; 0x30
   12b08:	b	1297c <__snprintf_chk@plt+0x1d38>
   12b0c:	ldr	r3, [r6]
   12b10:	cmp	r3, #6
   12b14:	ble	12a70 <__snprintf_chk@plt+0x1e2c>
   12b18:	ldr	r0, [pc, #84]	; 12b74 <__snprintf_chk@plt+0x1f30>
   12b1c:	bl	10b78 <puts@plt>
   12b20:	mov	r0, #1
   12b24:	b	12a74 <__snprintf_chk@plt+0x1e30>
   12b28:	bl	10b24 <__stack_chk_fail@plt>
   12b2c:	andeq	r4, r2, r4, lsr #1
   12b30:	strdeq	r3, [r2], -r8
   12b34:	andeq	r4, r2, r4, asr r1
   12b38:	andeq	r4, r2, r0, ror #2
   12b3c:	ldrdeq	r3, [r1], -r8
   12b40:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   12b44:	andeq	r4, r2, r0, ror #4
   12b48:	strdeq	r4, [r2], -ip
   12b4c:	andeq	r4, r2, r0, lsr #2
   12b50:	andeq	r4, r2, r8, lsl #2
   12b54:	andeq	r4, r2, r4, lsl r1
   12b58:	andeq	r4, r2, ip, lsr #2
   12b5c:	andeq	r4, r2, r8, lsr r1
   12b60:	andeq	r3, r1, ip, lsr #22
   12b64:	andeq	r3, r1, r4, ror #21
   12b68:	andeq	r4, r2, r8, asr #2
   12b6c:	andeq	r3, r1, ip, lsl #22
   12b70:	andeq	r3, r1, r8, lsr r9
   12b74:	andeq	r3, r1, r4, asr #22
   12b78:	push	{r4, lr}
   12b7c:	ldr	r4, [pc, #136]	; 12c0c <__snprintf_chk@plt+0x1fc8>
   12b80:	ldr	r0, [pc, #136]	; 12c10 <__snprintf_chk@plt+0x1fcc>
   12b84:	bl	10b78 <puts@plt>
   12b88:	ldr	r2, [r4, #92]	; 0x5c
   12b8c:	cmp	r2, #0
   12b90:	beq	12ba0 <__snprintf_chk@plt+0x1f5c>
   12b94:	ldr	r1, [pc, #120]	; 12c14 <__snprintf_chk@plt+0x1fd0>
   12b98:	mov	r0, #1
   12b9c:	bl	10bd8 <__printf_chk@plt>
   12ba0:	ldr	r2, [r4, #104]	; 0x68
   12ba4:	cmp	r2, #0
   12ba8:	beq	12bb8 <__snprintf_chk@plt+0x1f74>
   12bac:	ldr	r1, [pc, #100]	; 12c18 <__snprintf_chk@plt+0x1fd4>
   12bb0:	mov	r0, #1
   12bb4:	bl	10bd8 <__printf_chk@plt>
   12bb8:	ldr	r2, [r4, #116]	; 0x74
   12bbc:	cmp	r2, #0
   12bc0:	beq	12bd0 <__snprintf_chk@plt+0x1f8c>
   12bc4:	ldr	r1, [pc, #80]	; 12c1c <__snprintf_chk@plt+0x1fd8>
   12bc8:	mov	r0, #1
   12bcc:	bl	10bd8 <__printf_chk@plt>
   12bd0:	ldr	r2, [r4, #128]	; 0x80
   12bd4:	cmp	r2, #0
   12bd8:	beq	12be8 <__snprintf_chk@plt+0x1fa4>
   12bdc:	ldr	r1, [pc, #60]	; 12c20 <__snprintf_chk@plt+0x1fdc>
   12be0:	mov	r0, #1
   12be4:	bl	10bd8 <__printf_chk@plt>
   12be8:	ldr	r2, [r4, #140]	; 0x8c
   12bec:	cmp	r2, #0
   12bf0:	beq	12c00 <__snprintf_chk@plt+0x1fbc>
   12bf4:	ldr	r1, [pc, #40]	; 12c24 <__snprintf_chk@plt+0x1fe0>
   12bf8:	mov	r0, #1
   12bfc:	bl	10bd8 <__printf_chk@plt>
   12c00:	ldr	r0, [pc, #32]	; 12c28 <__snprintf_chk@plt+0x1fe4>
   12c04:	pop	{r4, lr}
   12c08:	b	10b78 <puts@plt>
   12c0c:	andeq	r4, r2, r4, lsr #1
   12c10:	andeq	r3, r1, r8, ror fp
   12c14:	andeq	r3, r1, r8, lsl #23
   12c18:	andeq	r3, r1, ip, lsr #23
   12c1c:	ldrdeq	r3, [r1], -r0
   12c20:	strdeq	r3, [r1], -r4
   12c24:	andeq	r3, r1, r8, lsl ip
   12c28:	andeq	r3, r1, ip, lsr ip
   12c2c:	push	{r4, r5, r6, r7, r8, lr}
   12c30:	sub	sp, sp, #40	; 0x28
   12c34:	ldr	r4, [pc, #544]	; 12e5c <__snprintf_chk@plt+0x2218>
   12c38:	ldr	r5, [pc, #544]	; 12e60 <__snprintf_chk@plt+0x221c>
   12c3c:	ldr	r0, [r4, #104]	; 0x68
   12c40:	ldr	r3, [r5]
   12c44:	cmp	r0, #0
   12c48:	str	r3, [sp, #36]	; 0x24
   12c4c:	beq	12c60 <__snprintf_chk@plt+0x201c>
   12c50:	ldr	r1, [pc, #524]	; 12e64 <__snprintf_chk@plt+0x2220>
   12c54:	bl	10e30 <__snprintf_chk@plt+0x1ec>
   12c58:	cmp	r0, #0
   12c5c:	beq	12d3c <__snprintf_chk@plt+0x20f8>
   12c60:	ldr	r0, [r4, #116]	; 0x74
   12c64:	cmp	r0, #0
   12c68:	beq	12c7c <__snprintf_chk@plt+0x2038>
   12c6c:	ldr	r1, [pc, #500]	; 12e68 <__snprintf_chk@plt+0x2224>
   12c70:	bl	10e30 <__snprintf_chk@plt+0x1ec>
   12c74:	cmp	r0, #0
   12c78:	beq	12d3c <__snprintf_chk@plt+0x20f8>
   12c7c:	ldr	r0, [r4, #128]	; 0x80
   12c80:	cmp	r0, #0
   12c84:	beq	12c98 <__snprintf_chk@plt+0x2054>
   12c88:	ldr	r1, [pc, #476]	; 12e6c <__snprintf_chk@plt+0x2228>
   12c8c:	bl	10e30 <__snprintf_chk@plt+0x1ec>
   12c90:	cmp	r0, #0
   12c94:	beq	12d3c <__snprintf_chk@plt+0x20f8>
   12c98:	ldr	r0, [r4, #92]	; 0x5c
   12c9c:	cmp	r0, #0
   12ca0:	beq	12cb4 <__snprintf_chk@plt+0x2070>
   12ca4:	ldr	r1, [pc, #452]	; 12e70 <__snprintf_chk@plt+0x222c>
   12ca8:	bl	10e30 <__snprintf_chk@plt+0x1ec>
   12cac:	cmp	r0, #0
   12cb0:	beq	12d3c <__snprintf_chk@plt+0x20f8>
   12cb4:	ldr	r0, [r4, #140]	; 0x8c
   12cb8:	cmp	r0, #0
   12cbc:	beq	12cd0 <__snprintf_chk@plt+0x208c>
   12cc0:	ldr	r1, [pc, #428]	; 12e74 <__snprintf_chk@plt+0x2230>
   12cc4:	bl	10e30 <__snprintf_chk@plt+0x1ec>
   12cc8:	cmp	r0, #0
   12ccc:	beq	12d3c <__snprintf_chk@plt+0x20f8>
   12cd0:	ldr	r0, [r4, #152]	; 0x98
   12cd4:	cmp	r0, #0
   12cd8:	beq	12cec <__snprintf_chk@plt+0x20a8>
   12cdc:	ldr	r1, [pc, #404]	; 12e78 <__snprintf_chk@plt+0x2234>
   12ce0:	bl	10e30 <__snprintf_chk@plt+0x1ec>
   12ce4:	cmp	r0, #0
   12ce8:	beq	12d3c <__snprintf_chk@plt+0x20f8>
   12cec:	ldr	r3, [r4]
   12cf0:	cmp	r3, #5
   12cf4:	bgt	12e14 <__snprintf_chk@plt+0x21d0>
   12cf8:	ldr	r7, [pc, #380]	; 12e7c <__snprintf_chk@plt+0x2238>
   12cfc:	ldr	r0, [r7, #40]	; 0x28
   12d00:	ldr	r3, [r7, #28]
   12d04:	cmp	r0, #0
   12d08:	beq	12e04 <__snprintf_chk@plt+0x21c0>
   12d0c:	cmp	r3, #0
   12d10:	beq	12d5c <__snprintf_chk@plt+0x2118>
   12d14:	bl	12b78 <__snprintf_chk@plt+0x1f34>
   12d18:	ldr	r3, [r7, #32]
   12d1c:	cmp	r3, #0
   12d20:	moveq	r6, #1
   12d24:	beq	12d40 <__snprintf_chk@plt+0x20fc>
   12d28:	mov	r1, #0
   12d2c:	mov	r0, #1
   12d30:	bl	123d4 <__snprintf_chk@plt+0x1790>
   12d34:	mov	r6, #1
   12d38:	b	12d40 <__snprintf_chk@plt+0x20fc>
   12d3c:	mov	r6, #0
   12d40:	ldr	r2, [sp, #36]	; 0x24
   12d44:	ldr	r3, [r5]
   12d48:	mov	r0, r6
   12d4c:	cmp	r2, r3
   12d50:	bne	12e58 <__snprintf_chk@plt+0x2214>
   12d54:	add	sp, sp, #40	; 0x28
   12d58:	pop	{r4, r5, r6, r7, r8, pc}
   12d5c:	ldr	r6, [r7, #32]
   12d60:	cmp	r6, #0
   12d64:	bne	12d28 <__snprintf_chk@plt+0x20e4>
   12d68:	ldr	r2, [r4, #152]	; 0x98
   12d6c:	ldr	ip, [r4, #92]	; 0x5c
   12d70:	ldr	r3, [r4, #116]	; 0x74
   12d74:	str	r2, [sp, #12]
   12d78:	ldr	r2, [r4, #128]	; 0x80
   12d7c:	ldr	lr, [r4, #104]	; 0x68
   12d80:	str	ip, [sp, #16]
   12d84:	str	r3, [sp, #24]
   12d88:	ldr	ip, [r4, #140]	; 0x8c
   12d8c:	mov	r3, #191	; 0xbf
   12d90:	mov	r8, #1
   12d94:	str	r3, [sp]
   12d98:	str	r2, [sp, #28]
   12d9c:	ldr	r1, [r4, #160]	; 0xa0
   12da0:	str	r8, [sp, #4]
   12da4:	mov	r3, #255	; 0xff
   12da8:	add	r2, sp, #12
   12dac:	str	lr, [sp, #20]
   12db0:	str	ip, [sp, #32]
   12db4:	bl	10b00 <XkbGetKeyboardByName@plt>
   12db8:	cmp	r0, #0
   12dbc:	beq	12e3c <__snprintf_chk@plt+0x21f8>
   12dc0:	ldr	r1, [r4, #8]
   12dc4:	cmp	r1, #0
   12dc8:	beq	12e00 <__snprintf_chk@plt+0x21bc>
   12dcc:	ldr	r3, [r7, #268]	; 0x10c
   12dd0:	cmp	r3, #0
   12dd4:	beq	12e2c <__snprintf_chk@plt+0x21e8>
   12dd8:	ldr	r2, [pc, #160]	; 12e80 <__snprintf_chk@plt+0x223c>
   12ddc:	ldr	r0, [r7, #40]	; 0x28
   12de0:	bl	10adc <XkbRF_SetNamesProp@plt>
   12de4:	cmp	r0, #0
   12de8:	bne	12e00 <__snprintf_chk@plt+0x21bc>
   12dec:	ldr	r3, [r4]
   12df0:	cmp	r3, #0
   12df4:	ble	12e00 <__snprintf_chk@plt+0x21bc>
   12df8:	ldr	r0, [pc, #132]	; 12e84 <__snprintf_chk@plt+0x2240>
   12dfc:	bl	10b78 <puts@plt>
   12e00:	ldr	r3, [r7, #28]
   12e04:	cmp	r3, #0
   12e08:	bne	12d14 <__snprintf_chk@plt+0x20d0>
   12e0c:	ldr	r3, [r7, #32]
   12e10:	b	12d1c <__snprintf_chk@plt+0x20d8>
   12e14:	ldr	r0, [pc, #108]	; 12e88 <__snprintf_chk@plt+0x2244>
   12e18:	bl	10b78 <puts@plt>
   12e1c:	mov	r1, #1
   12e20:	mov	r0, #0
   12e24:	bl	123d4 <__snprintf_chk@plt+0x1790>
   12e28:	b	12cf8 <__snprintf_chk@plt+0x20b4>
   12e2c:	ldr	r3, [r7, #272]	; 0x110
   12e30:	cmp	r3, #0
   12e34:	bne	12dd8 <__snprintf_chk@plt+0x2194>
   12e38:	b	12e00 <__snprintf_chk@plt+0x21bc>
   12e3c:	ldr	r3, [pc, #72]	; 12e8c <__snprintf_chk@plt+0x2248>
   12e40:	mov	r1, r8
   12e44:	mov	r2, #39	; 0x27
   12e48:	ldr	r3, [r3]
   12e4c:	ldr	r0, [pc, #60]	; 12e90 <__snprintf_chk@plt+0x224c>
   12e50:	bl	10b48 <fwrite@plt>
   12e54:	b	12d40 <__snprintf_chk@plt+0x20fc>
   12e58:	bl	10b24 <__stack_chk_fail@plt>
   12e5c:	andeq	r4, r2, r4, lsr #1
   12e60:	strdeq	r3, [r2], -r8
   12e64:	andeq	r3, r1, r0, asr #24
   12e68:	andeq	r3, r1, r8, asr #24
   12e6c:	andeq	r3, r1, r0, asr ip
   12e70:	andeq	r3, r1, r8, asr ip
   12e74:	andeq	r3, r1, r4, ror #24
   12e78:	andeq	r3, r1, r0, ror ip
   12e7c:	andeq	r4, r2, r4, asr r1
   12e80:	andeq	r4, r2, r0, ror #4
   12e84:	ldrdeq	r3, [r1], -r8
   12e88:	andeq	r3, r1, r8, ror ip
   12e8c:	andeq	r4, r2, r8, asr #2
   12e90:			; <UNDEFINED> instruction: 0x00013cb0
   12e94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e98:	mov	r7, r0
   12e9c:	ldr	r6, [pc, #72]	; 12eec <__snprintf_chk@plt+0x22a8>
   12ea0:	ldr	r5, [pc, #72]	; 12ef0 <__snprintf_chk@plt+0x22ac>
   12ea4:	add	r6, pc, r6
   12ea8:	add	r5, pc, r5
   12eac:	sub	r6, r6, r5
   12eb0:	mov	r8, r1
   12eb4:	mov	r9, r2
   12eb8:	bl	10a8c <_init@@Base>
   12ebc:	asrs	r6, r6, #2
   12ec0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ec4:	mov	r4, #0
   12ec8:	add	r4, r4, #1
   12ecc:	ldr	r3, [r5], #4
   12ed0:	mov	r2, r9
   12ed4:	mov	r1, r8
   12ed8:	mov	r0, r7
   12edc:	blx	r3
   12ee0:	cmp	r6, r4
   12ee4:	bne	12ec8 <__snprintf_chk@plt+0x2284>
   12ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12eec:	andeq	r1, r1, r8, asr #32
   12ef0:	andeq	r1, r1, r0, asr #32
   12ef4:	bx	lr

Disassembly of section .fini:

00012ef8 <_fini@@Base>:
   12ef8:	push	{r3, lr}
   12efc:	pop	{r3, pc}
