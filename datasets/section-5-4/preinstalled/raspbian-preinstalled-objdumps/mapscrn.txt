
raspbian-preinstalled/mapscrn:     file format elf32-littlearm


Disassembly of section .init:

00010acc <.init>:
   10acc:	push	{r3, lr}
   10ad0:	bl	10f10 <pclose@plt+0x1f0>
   10ad4:	pop	{r3, pc}

Disassembly of section .plt:

00010ad8 <strstr@plt-0x14>:
   10ad8:	push	{lr}		; (str lr, [sp, #-4]!)
   10adc:	ldr	lr, [pc, #4]	; 10ae8 <strstr@plt-0x4>
   10ae0:	add	lr, pc, lr
   10ae4:	ldr	pc, [lr, #8]!
   10ae8:	andeq	r2, r1, r8, lsl r5

00010aec <strstr@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1304]!	; 0x518

00010af8 <strcmp@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1296]!	; 0x510

00010b04 <fopen@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1288]!	; 0x508

00010b10 <free@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1280]!	; 0x500

00010b1c <fgets@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b28 <strndup@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b34 <dcgettext@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b40 <strdup@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b4c <__stack_chk_fail@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #73728	; 0x12000
   10b54:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b58 <textdomain@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #73728	; 0x12000
   10b60:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b64 <perror@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #73728	; 0x12000
   10b6c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b70 <__xstat@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #73728	; 0x12000
   10b78:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b7c <fwrite@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #73728	; 0x12000
   10b84:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b88 <ioctl@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #73728	; 0x12000
   10b90:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b94 <strcpy@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #73728	; 0x12000
   10b9c:	ldr	pc, [ip, #1192]!	; 0x4a8

00010ba0 <__strcpy_chk@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #73728	; 0x12000
   10ba8:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bac <fread@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #73728	; 0x12000
   10bb4:	ldr	pc, [ip, #1176]!	; 0x498

00010bb8 <opendir@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #73728	; 0x12000
   10bc0:	ldr	pc, [ip, #1168]!	; 0x490

00010bc4 <malloc@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #73728	; 0x12000
   10bcc:	ldr	pc, [ip, #1160]!	; 0x488

00010bd0 <__libc_start_main@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #73728	; 0x12000
   10bd8:	ldr	pc, [ip, #1152]!	; 0x480

00010bdc <strerror@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #73728	; 0x12000
   10be4:	ldr	pc, [ip, #1144]!	; 0x478

00010be8 <__vfprintf_chk@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #73728	; 0x12000
   10bf0:	ldr	pc, [ip, #1136]!	; 0x470

00010bf4 <seekdir@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #73728	; 0x12000
   10bfc:	ldr	pc, [ip, #1128]!	; 0x468

00010c00 <__gmon_start__@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #73728	; 0x12000
   10c08:	ldr	pc, [ip, #1120]!	; 0x460

00010c0c <open@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #73728	; 0x12000
   10c14:	ldr	pc, [ip, #1112]!	; 0x458

00010c18 <exit@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #73728	; 0x12000
   10c20:	ldr	pc, [ip, #1104]!	; 0x450

00010c24 <strlen@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #73728	; 0x12000
   10c2c:	ldr	pc, [ip, #1096]!	; 0x448

00010c30 <strchr@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #73728	; 0x12000
   10c38:	ldr	pc, [ip, #1088]!	; 0x440

00010c3c <__errno_location@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #73728	; 0x12000
   10c44:	ldr	pc, [ip, #1080]!	; 0x438

00010c48 <__sprintf_chk@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #1072]!	; 0x430

00010c54 <__isoc99_sscanf@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #1064]!	; 0x428

00010c60 <__printf_chk@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #1056]!	; 0x420

00010c6c <__fprintf_chk@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #1048]!	; 0x418

00010c78 <access@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #1040]!	; 0x410

00010c84 <fclose@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #1032]!	; 0x408

00010c90 <strtok@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #1024]!	; 0x400

00010c9c <setlocale@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #1016]!	; 0x3f8

00010ca8 <popen@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #1008]!	; 0x3f0

00010cb4 <readdir@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #1000]!	; 0x3e8

00010cc0 <strrchr@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #992]!	; 0x3e0

00010ccc <bindtextdomain@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #984]!	; 0x3d8

00010cd8 <isatty@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #976]!	; 0x3d0

00010ce4 <strncmp@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #968]!	; 0x3c8

00010cf0 <abort@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #960]!	; 0x3c0

00010cfc <close@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #952]!	; 0x3b8

00010d08 <closedir@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #944]!	; 0x3b0

00010d14 <strspn@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #936]!	; 0x3a8

00010d20 <pclose@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #928]!	; 0x3a0

Disassembly of section .text:

00010d2c <.text>:
   10d2c:	push	{r4, r5, r6, r7, r8, lr}
   10d30:	mov	r4, r0
   10d34:	ldr	r6, [r1]
   10d38:	mov	r5, r1
   10d3c:	mov	r0, r6
   10d40:	mov	r1, #47	; 0x2f
   10d44:	bl	10cc0 <strrchr@plt>
   10d48:	ldr	r7, [pc, #336]	; 10ea0 <pclose@plt+0x180>
   10d4c:	ldr	r1, [pc, #336]	; 10ea4 <pclose@plt+0x184>
   10d50:	cmp	r0, #0
   10d54:	addne	r6, r0, #1
   10d58:	mov	r0, #6
   10d5c:	str	r6, [r7]
   10d60:	bl	10c9c <setlocale@plt>
   10d64:	ldr	r1, [pc, #316]	; 10ea8 <pclose@plt+0x188>
   10d68:	ldr	r0, [pc, #316]	; 10eac <pclose@plt+0x18c>
   10d6c:	bl	10ccc <bindtextdomain@plt>
   10d70:	ldr	r0, [pc, #308]	; 10eac <pclose@plt+0x18c>
   10d74:	bl	10b58 <textdomain@plt>
   10d78:	cmp	r4, #2
   10d7c:	beq	10e40 <pclose@plt+0x120>
   10d80:	cmp	r4, #1
   10d84:	ble	10dac <pclose@plt+0x8c>
   10d88:	ldr	r0, [r5, #4]
   10d8c:	ldr	r1, [pc, #284]	; 10eb0 <pclose@plt+0x190>
   10d90:	bl	10af8 <strcmp@plt>
   10d94:	cmp	r0, #0
   10d98:	subeq	r4, r4, #1
   10d9c:	ldreq	r3, [pc, #272]	; 10eb4 <pclose@plt+0x194>
   10da0:	addeq	r5, r5, #4
   10da4:	moveq	r2, #1
   10da8:	streq	r2, [r3]
   10dac:	mov	r0, #0
   10db0:	bl	117d8 <pclose@plt+0xab8>
   10db4:	subs	r6, r0, #0
   10db8:	blt	10e7c <pclose@plt+0x15c>
   10dbc:	cmp	r4, #2
   10dc0:	ble	10e24 <pclose@plt+0x104>
   10dc4:	ldr	r1, [pc, #236]	; 10eb8 <pclose@plt+0x198>
   10dc8:	ldr	r0, [r5, #4]
   10dcc:	bl	10af8 <strcmp@plt>
   10dd0:	subs	r8, r0, #0
   10dd4:	beq	10e0c <pclose@plt+0xec>
   10dd8:	ldr	r3, [pc, #220]	; 10ebc <pclose@plt+0x19c>
   10ddc:	mov	r2, #5
   10de0:	ldr	r1, [pc, #216]	; 10ec0 <pclose@plt+0x1a0>
   10de4:	mov	r0, #0
   10de8:	ldr	r4, [r3]
   10dec:	bl	10b34 <dcgettext@plt>
   10df0:	ldr	r3, [r7]
   10df4:	mov	r1, #1
   10df8:	mov	r2, r0
   10dfc:	mov	r0, r4
   10e00:	bl	10c6c <__fprintf_chk@plt>
   10e04:	mov	r0, #1
   10e08:	bl	10c18 <exit@plt>
   10e0c:	sub	r4, r4, #2
   10e10:	ldr	r1, [r5, #8]!
   10e14:	mov	r0, r6
   10e18:	bl	11588 <pclose@plt+0x868>
   10e1c:	cmp	r4, #1
   10e20:	beq	10e38 <pclose@plt+0x118>
   10e24:	cmp	r4, #2
   10e28:	bne	10dd8 <pclose@plt+0xb8>
   10e2c:	ldr	r1, [r5, #4]
   10e30:	mov	r0, r6
   10e34:	bl	11188 <pclose@plt+0x468>
   10e38:	mov	r0, #0
   10e3c:	bl	10c18 <exit@plt>
   10e40:	ldr	r1, [pc, #124]	; 10ec4 <pclose@plt+0x1a4>
   10e44:	ldr	r0, [r5, #4]
   10e48:	bl	10af8 <strcmp@plt>
   10e4c:	subs	r6, r0, #0
   10e50:	bne	10d88 <pclose@plt+0x68>
   10e54:	mov	r2, #5
   10e58:	ldr	r1, [pc, #104]	; 10ec8 <pclose@plt+0x1a8>
   10e5c:	bl	10b34 <dcgettext@plt>
   10e60:	ldr	r2, [r7]
   10e64:	ldr	r3, [pc, #96]	; 10ecc <pclose@plt+0x1ac>
   10e68:	mov	r1, r0
   10e6c:	mov	r0, #1
   10e70:	bl	10c60 <__printf_chk@plt>
   10e74:	mov	r0, r6
   10e78:	bl	10c18 <exit@plt>
   10e7c:	mov	r2, #5
   10e80:	ldr	r1, [pc, #72]	; 10ed0 <pclose@plt+0x1b0>
   10e84:	mov	r0, #0
   10e88:	bl	10b34 <dcgettext@plt>
   10e8c:	mov	r1, #0
   10e90:	mov	r2, r0
   10e94:	mov	r0, #1
   10e98:	bl	1199c <pclose@plt+0xc7c>
   10e9c:	b	10dbc <pclose@plt+0x9c>
   10ea0:	andeq	r3, r2, r8, lsl #2
   10ea4:	andeq	r2, r1, r4, lsl sp
   10ea8:	andeq	r2, r1, r0, ror #21
   10eac:	strdeq	r2, [r1], -r4
   10eb0:	andeq	r2, r1, r4, lsl fp
   10eb4:	andeq	r3, r2, r0, lsl #2
   10eb8:	andeq	r2, r1, r0, asr fp
   10ebc:	strdeq	r3, [r2], -r8
   10ec0:	andeq	r2, r1, r4, asr fp
   10ec4:	strdeq	r2, [r1], -r8
   10ec8:	strdeq	r2, [r1], -ip
   10ecc:	andeq	r2, r1, r8, lsl #22
   10ed0:	andeq	r2, r1, r8, lsl fp
   10ed4:	mov	fp, #0
   10ed8:	mov	lr, #0
   10edc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ee0:	mov	r2, sp
   10ee4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ee8:	push	{r0}		; (str r0, [sp, #-4]!)
   10eec:	ldr	ip, [pc, #16]	; 10f04 <pclose@plt+0x1e4>
   10ef0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ef4:	ldr	r0, [pc, #12]	; 10f08 <pclose@plt+0x1e8>
   10ef8:	ldr	r3, [pc, #12]	; 10f0c <pclose@plt+0x1ec>
   10efc:	bl	10bd0 <__libc_start_main@plt>
   10f00:	bl	10cf0 <abort@plt>
   10f04:	andeq	r2, r1, r4, ror #17
   10f08:	andeq	r0, r1, ip, lsr #26
   10f0c:	andeq	r2, r1, r4, lsl #17
   10f10:	ldr	r3, [pc, #20]	; 10f2c <pclose@plt+0x20c>
   10f14:	ldr	r2, [pc, #20]	; 10f30 <pclose@plt+0x210>
   10f18:	add	r3, pc, r3
   10f1c:	ldr	r2, [r3, r2]
   10f20:	cmp	r2, #0
   10f24:	bxeq	lr
   10f28:	b	10c00 <__gmon_start__@plt>
   10f2c:	andeq	r2, r1, r0, ror #1
   10f30:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10f34:	ldr	r0, [pc, #24]	; 10f54 <pclose@plt+0x234>
   10f38:	ldr	r3, [pc, #24]	; 10f58 <pclose@plt+0x238>
   10f3c:	cmp	r3, r0
   10f40:	bxeq	lr
   10f44:	ldr	r3, [pc, #16]	; 10f5c <pclose@plt+0x23c>
   10f48:	cmp	r3, #0
   10f4c:	bxeq	lr
   10f50:	bx	r3
   10f54:	strdeq	r3, [r2], -r4
   10f58:	strdeq	r3, [r2], -r4
   10f5c:	andeq	r0, r0, r0
   10f60:	ldr	r0, [pc, #36]	; 10f8c <pclose@plt+0x26c>
   10f64:	ldr	r1, [pc, #36]	; 10f90 <pclose@plt+0x270>
   10f68:	sub	r1, r1, r0
   10f6c:	asr	r1, r1, #2
   10f70:	add	r1, r1, r1, lsr #31
   10f74:	asrs	r1, r1, #1
   10f78:	bxeq	lr
   10f7c:	ldr	r3, [pc, #16]	; 10f94 <pclose@plt+0x274>
   10f80:	cmp	r3, #0
   10f84:	bxeq	lr
   10f88:	bx	r3
   10f8c:	strdeq	r3, [r2], -r4
   10f90:	strdeq	r3, [r2], -r4
   10f94:	andeq	r0, r0, r0
   10f98:	push	{r4, lr}
   10f9c:	ldr	r4, [pc, #24]	; 10fbc <pclose@plt+0x29c>
   10fa0:	ldrb	r3, [r4]
   10fa4:	cmp	r3, #0
   10fa8:	popne	{r4, pc}
   10fac:	bl	10f34 <pclose@plt+0x214>
   10fb0:	mov	r3, #1
   10fb4:	strb	r3, [r4]
   10fb8:	pop	{r4, pc}
   10fbc:	strdeq	r3, [r2], -ip
   10fc0:	b	10f60 <pclose@plt+0x240>
   10fc4:	push	{r4, r5, r6, r7, lr}
   10fc8:	sub	sp, sp, #20
   10fcc:	ldr	r6, [pc, #400]	; 11164 <pclose@plt+0x444>
   10fd0:	mov	r2, #2
   10fd4:	ldr	r1, [pc, #396]	; 11168 <pclose@plt+0x448>
   10fd8:	ldr	r3, [r6]
   10fdc:	mov	r4, r0
   10fe0:	str	r3, [sp, #12]
   10fe4:	bl	10ce4 <strncmp@plt>
   10fe8:	cmp	r0, #0
   10fec:	bne	11014 <pclose@plt+0x2f4>
   10ff0:	add	r5, r4, #2
   10ff4:	ldr	r1, [pc, #368]	; 1116c <pclose@plt+0x44c>
   10ff8:	mov	r0, r5
   10ffc:	bl	10d14 <strspn@plt>
   11000:	mov	r7, r0
   11004:	mov	r0, r5
   11008:	bl	10c24 <strlen@plt>
   1100c:	cmp	r7, r0
   11010:	beq	1111c <pclose@plt+0x3fc>
   11014:	mov	r0, r4
   11018:	bl	10c24 <strlen@plt>
   1101c:	ldrb	r7, [r4]
   11020:	cmp	r7, #48	; 0x30
   11024:	mov	r5, r0
   11028:	beq	110d8 <pclose@plt+0x3b8>
   1102c:	ldr	r1, [pc, #316]	; 11170 <pclose@plt+0x450>
   11030:	mov	r0, r4
   11034:	bl	10d14 <strspn@plt>
   11038:	cmp	r0, r5
   1103c:	beq	11148 <pclose@plt+0x428>
   11040:	mov	r2, #2
   11044:	ldr	r1, [pc, #296]	; 11174 <pclose@plt+0x454>
   11048:	mov	r0, r4
   1104c:	bl	10ce4 <strncmp@plt>
   11050:	cmp	r0, #0
   11054:	cmpeq	r5, #6
   11058:	beq	11104 <pclose@plt+0x3e4>
   1105c:	cmp	r5, #3
   11060:	beq	110c8 <pclose@plt+0x3a8>
   11064:	cmp	r7, #39	; 0x27
   11068:	bne	110d0 <pclose@plt+0x3b0>
   1106c:	add	r4, r4, #1
   11070:	add	r2, sp, #4
   11074:	mov	r1, #0
   11078:	add	r0, sp, #8
   1107c:	str	r4, [sp, #8]
   11080:	bl	11a3c <pclose@plt+0xd1c>
   11084:	ldr	r3, [sp, #4]
   11088:	cmp	r3, #0
   1108c:	str	r0, [sp]
   11090:	bne	110d0 <pclose@plt+0x3b0>
   11094:	ldr	r3, [sp, #8]
   11098:	ldrb	r2, [r3]
   1109c:	cmp	r2, #39	; 0x27
   110a0:	bne	110d0 <pclose@plt+0x3b0>
   110a4:	ldrb	r3, [r3, #1]
   110a8:	cmp	r3, #0
   110ac:	bne	110d0 <pclose@plt+0x3b0>
   110b0:	ldr	r2, [sp, #12]
   110b4:	ldr	r3, [r6]
   110b8:	cmp	r2, r3
   110bc:	bne	11160 <pclose@plt+0x440>
   110c0:	add	sp, sp, #20
   110c4:	pop	{r4, r5, r6, r7, pc}
   110c8:	cmp	r7, #39	; 0x27
   110cc:	beq	11134 <pclose@plt+0x414>
   110d0:	mvn	r0, #0
   110d4:	b	110b0 <pclose@plt+0x390>
   110d8:	ldr	r1, [pc, #152]	; 11178 <pclose@plt+0x458>
   110dc:	mov	r0, r4
   110e0:	bl	10d14 <strspn@plt>
   110e4:	cmp	r0, r5
   110e8:	bne	1102c <pclose@plt+0x30c>
   110ec:	mov	r0, r4
   110f0:	mov	r2, sp
   110f4:	ldr	r1, [pc, #128]	; 1117c <pclose@plt+0x45c>
   110f8:	bl	10c54 <__isoc99_sscanf@plt>
   110fc:	ldr	r0, [sp]
   11100:	b	110b0 <pclose@plt+0x390>
   11104:	add	r5, r4, #2
   11108:	mov	r0, r5
   1110c:	ldr	r1, [pc, #88]	; 1116c <pclose@plt+0x44c>
   11110:	bl	10d14 <strspn@plt>
   11114:	cmp	r0, #4
   11118:	bne	11064 <pclose@plt+0x344>
   1111c:	mov	r0, r5
   11120:	mov	r2, sp
   11124:	ldr	r1, [pc, #84]	; 11180 <pclose@plt+0x460>
   11128:	bl	10c54 <__isoc99_sscanf@plt>
   1112c:	ldr	r0, [sp]
   11130:	b	110b0 <pclose@plt+0x390>
   11134:	ldrb	r3, [r4, #2]
   11138:	cmp	r3, #39	; 0x27
   1113c:	ldrbeq	r0, [r4, #1]
   11140:	bne	1106c <pclose@plt+0x34c>
   11144:	b	110b0 <pclose@plt+0x390>
   11148:	mov	r0, r4
   1114c:	mov	r2, sp
   11150:	ldr	r1, [pc, #44]	; 11184 <pclose@plt+0x464>
   11154:	bl	10c54 <__isoc99_sscanf@plt>
   11158:	ldr	r0, [sp]
   1115c:	b	110b0 <pclose@plt+0x390>
   11160:	bl	10b4c <__stack_chk_fail@plt>
   11164:	andeq	r2, r2, r8, lsl #30
   11168:	andeq	r2, r1, r4, lsl r9
   1116c:	andeq	r2, r1, r8, lsl r9
   11170:	andeq	r2, r1, r4, asr #18
   11174:	andeq	r2, r1, r4, asr r9
   11178:	andeq	r2, r1, r4, lsr r9
   1117c:	andeq	r2, r1, r0, asr #18
   11180:	andeq	r2, r1, r0, lsr r9
   11184:	andeq	r2, r1, r0, asr r9
   11188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1118c:	sub	sp, sp, #5248	; 0x1480
   11190:	sub	sp, sp, #4
   11194:	ldr	r6, [pc, #948]	; 11550 <pclose@plt+0x830>
   11198:	add	r3, sp, #4672	; 0x1240
   1119c:	add	r3, r3, #60	; 0x3c
   111a0:	add	ip, sp, #5184	; 0x1440
   111a4:	mov	r9, r0
   111a8:	mov	r4, r1
   111ac:	ldr	r0, [r6]
   111b0:	sub	r1, r3, #1
   111b4:	add	ip, ip, #60	; 0x3c
   111b8:	add	r2, sp, #114	; 0x72
   111bc:	mov	r3, #61440	; 0xf000
   111c0:	str	r0, [ip]
   111c4:	add	r0, r3, #1
   111c8:	strb	r3, [r1, #1]!
   111cc:	strh	r3, [r2, #2]!
   111d0:	uxth	r3, r0
   111d4:	cmp	r3, #61696	; 0xf100
   111d8:	bne	111c4 <pclose@plt+0x4a4>
   111dc:	cmp	r4, #0
   111e0:	beq	11384 <pclose@plt+0x664>
   111e4:	ldr	r2, [pc, #872]	; 11554 <pclose@plt+0x834>
   111e8:	add	r3, sp, #628	; 0x274
   111ec:	add	r1, r2, #20
   111f0:	mov	r0, r4
   111f4:	bl	124e0 <pclose@plt+0x17c0>
   111f8:	subs	r7, r0, #0
   111fc:	bne	114b0 <pclose@plt+0x790>
   11200:	add	r5, sp, #636	; 0x27c
   11204:	mov	r1, r5
   11208:	add	r2, sp, #24
   1120c:	mov	r0, #3
   11210:	bl	10b70 <__xstat@plt>
   11214:	subs	r4, r0, #0
   11218:	bne	11478 <pclose@plt+0x758>
   1121c:	ldr	r2, [pc, #820]	; 11558 <pclose@plt+0x838>
   11220:	ldr	r3, [sp, #68]	; 0x44
   11224:	cmp	r3, #256	; 0x100
   11228:	ldr	r2, [r2]
   1122c:	beq	11338 <pclose@plt+0x618>
   11230:	cmp	r3, #512	; 0x200
   11234:	beq	113fc <pclose@plt+0x6dc>
   11238:	cmp	r2, #0
   1123c:	beq	1125c <pclose@plt+0x53c>
   11240:	mov	r2, #5
   11244:	ldr	r1, [pc, #784]	; 1155c <pclose@plt+0x83c>
   11248:	bl	10b34 <dcgettext@plt>
   1124c:	mov	r2, r5
   11250:	mov	r1, r0
   11254:	mov	r0, #1
   11258:	bl	10c60 <__printf_chk@plt>
   1125c:	mov	sl, #0
   11260:	ldr	r7, [sp, #628]	; 0x274
   11264:	ldr	fp, [pc, #756]	; 11560 <pclose@plt+0x840>
   11268:	ldr	r8, [pc, #756]	; 11564 <pclose@plt+0x844>
   1126c:	mov	r5, sl
   11270:	str	sl, [sp, #16]
   11274:	add	r0, sp, #4928	; 0x1340
   11278:	mov	r2, r7
   1127c:	mov	r1, #255	; 0xff
   11280:	add	r0, r0, #60	; 0x3c
   11284:	bl	10b1c <fgets@plt>
   11288:	cmp	r0, #0
   1128c:	beq	113c0 <pclose@plt+0x6a0>
   11290:	cmp	r5, #0
   11294:	add	r4, r4, #1
   11298:	bne	112b4 <pclose@plt+0x594>
   1129c:	add	r0, sp, #4928	; 0x1340
   112a0:	mov	r1, fp
   112a4:	add	r0, r0, #60	; 0x3c
   112a8:	bl	10aec <strstr@plt>
   112ac:	adds	r5, r0, #0
   112b0:	movne	r5, #1
   112b4:	add	r0, sp, #4928	; 0x1340
   112b8:	mov	r1, r8
   112bc:	add	r0, r0, #60	; 0x3c
   112c0:	bl	10c90 <strtok@plt>
   112c4:	subs	r3, r0, #0
   112c8:	beq	11274 <pclose@plt+0x554>
   112cc:	ldrb	r2, [r3]
   112d0:	str	r3, [sp, #12]
   112d4:	cmp	r2, #35	; 0x23
   112d8:	beq	11274 <pclose@plt+0x554>
   112dc:	ldr	r1, [pc, #644]	; 11568 <pclose@plt+0x848>
   112e0:	mov	r0, #0
   112e4:	bl	10c90 <strtok@plt>
   112e8:	subs	r2, r0, #0
   112ec:	str	r2, [sp, #20]
   112f0:	beq	11274 <pclose@plt+0x554>
   112f4:	ldr	r3, [sp, #12]
   112f8:	mov	r0, r3
   112fc:	bl	10fc4 <pclose@plt+0x2a4>
   11300:	ldr	r2, [sp, #20]
   11304:	str	r0, [sp, #12]
   11308:	mov	r0, r2
   1130c:	bl	10fc4 <pclose@plt+0x2a4>
   11310:	ldr	r3, [sp, #12]
   11314:	cmp	r3, #255	; 0xff
   11318:	cmpls	r0, #65536	; 0x10000
   1131c:	bcc	11430 <pclose@plt+0x710>
   11320:	ldr	r3, [sp, #16]
   11324:	cmp	r3, #0
   11328:	mvn	r3, #0
   1132c:	moveq	sl, r4
   11330:	str	r3, [sp, #16]
   11334:	b	11274 <pclose@plt+0x554>
   11338:	cmp	r2, #0
   1133c:	beq	1135c <pclose@plt+0x63c>
   11340:	mov	r2, #5
   11344:	ldr	r1, [pc, #544]	; 1156c <pclose@plt+0x84c>
   11348:	bl	10b34 <dcgettext@plt>
   1134c:	mov	r2, r5
   11350:	mov	r1, r0
   11354:	mov	r0, #1
   11358:	bl	10c60 <__printf_chk@plt>
   1135c:	add	r0, sp, #4672	; 0x1240
   11360:	ldr	r3, [sp, #628]	; 0x274
   11364:	mov	r2, #1
   11368:	mov	r1, #256	; 0x100
   1136c:	add	r0, r0, #60	; 0x3c
   11370:	bl	10bac <fread@plt>
   11374:	cmp	r0, #1
   11378:	bne	114e8 <pclose@plt+0x7c8>
   1137c:	add	r0, sp, #628	; 0x274
   11380:	bl	124a4 <pclose@plt+0x1784>
   11384:	add	r1, sp, #4672	; 0x1240
   11388:	add	r1, r1, #60	; 0x3c
   1138c:	mov	r0, r9
   11390:	bl	11b50 <pclose@plt+0xe30>
   11394:	cmp	r0, #0
   11398:	bne	113f4 <pclose@plt+0x6d4>
   1139c:	add	r3, sp, #5184	; 0x1440
   113a0:	add	r3, r3, #60	; 0x3c
   113a4:	ldr	r2, [r3]
   113a8:	ldr	r3, [r6]
   113ac:	cmp	r2, r3
   113b0:	bne	114e4 <pclose@plt+0x7c4>
   113b4:	add	sp, sp, #5248	; 0x1480
   113b8:	add	sp, sp, #4
   113bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113c0:	ldr	r3, [sp, #16]
   113c4:	cmp	r3, #0
   113c8:	bne	1151c <pclose@plt+0x7fc>
   113cc:	add	r0, sp, #628	; 0x274
   113d0:	bl	124a4 <pclose@plt+0x1784>
   113d4:	cmp	r5, #0
   113d8:	beq	11384 <pclose@plt+0x664>
   113dc:	add	r4, sp, #116	; 0x74
   113e0:	mov	r1, r4
   113e4:	mov	r0, r9
   113e8:	bl	11bb0 <pclose@plt+0xe90>
   113ec:	cmp	r0, #0
   113f0:	beq	1139c <pclose@plt+0x67c>
   113f4:	mov	r0, #1
   113f8:	bl	10c18 <exit@plt>
   113fc:	cmp	r2, #0
   11400:	bne	11458 <pclose@plt+0x738>
   11404:	add	r4, sp, #116	; 0x74
   11408:	ldr	r3, [sp, #628]	; 0x274
   1140c:	mov	r0, r4
   11410:	mov	r2, #1
   11414:	mov	r1, #512	; 0x200
   11418:	bl	10bac <fread@plt>
   1141c:	cmp	r0, #1
   11420:	bne	114e8 <pclose@plt+0x7c8>
   11424:	add	r0, sp, #628	; 0x274
   11428:	bl	124a4 <pclose@plt+0x1784>
   1142c:	b	113e0 <pclose@plt+0x6c0>
   11430:	add	r2, sp, #5248	; 0x1480
   11434:	add	r2, r2, r3, lsl #1
   11438:	sub	r2, r2, #5120	; 0x1400
   1143c:	cmp	r0, #255	; 0xff
   11440:	strh	r0, [r2, #-12]
   11444:	movgt	r5, #1
   11448:	addle	r2, sp, #5248	; 0x1480
   1144c:	addle	r3, r2, r3
   11450:	strble	r0, [r3, #-516]	; 0xfffffdfc
   11454:	b	11274 <pclose@plt+0x554>
   11458:	mov	r2, #5
   1145c:	ldr	r1, [pc, #268]	; 11570 <pclose@plt+0x850>
   11460:	bl	10b34 <dcgettext@plt>
   11464:	mov	r2, r5
   11468:	mov	r1, r0
   1146c:	mov	r0, #1
   11470:	bl	10c60 <__printf_chk@plt>
   11474:	b	11404 <pclose@plt+0x6e4>
   11478:	mov	r0, r5
   1147c:	bl	10b64 <perror@plt>
   11480:	ldr	r3, [pc, #236]	; 11574 <pclose@plt+0x854>
   11484:	mov	r2, #5
   11488:	ldr	r1, [pc, #232]	; 11578 <pclose@plt+0x858>
   1148c:	mov	r0, r7
   11490:	ldr	r4, [r3]
   11494:	bl	10b34 <dcgettext@plt>
   11498:	mov	r1, #1
   1149c:	mov	r2, r0
   114a0:	mov	r0, r4
   114a4:	bl	10c6c <__fprintf_chk@plt>
   114a8:	mov	r0, #1
   114ac:	bl	10c18 <exit@plt>
   114b0:	ldr	r3, [pc, #188]	; 11574 <pclose@plt+0x854>
   114b4:	mov	r2, #5
   114b8:	ldr	r1, [pc, #188]	; 1157c <pclose@plt+0x85c>
   114bc:	mov	r0, #0
   114c0:	ldr	r5, [r3]
   114c4:	bl	10b34 <dcgettext@plt>
   114c8:	mov	r3, r4
   114cc:	mov	r1, #1
   114d0:	mov	r2, r0
   114d4:	mov	r0, r5
   114d8:	bl	10c6c <__fprintf_chk@plt>
   114dc:	mov	r0, #1
   114e0:	bl	10c18 <exit@plt>
   114e4:	bl	10b4c <__stack_chk_fail@plt>
   114e8:	ldr	r3, [pc, #132]	; 11574 <pclose@plt+0x854>
   114ec:	mov	r2, #5
   114f0:	ldr	r1, [pc, #136]	; 11580 <pclose@plt+0x860>
   114f4:	mov	r0, #0
   114f8:	ldr	r4, [r3]
   114fc:	bl	10b34 <dcgettext@plt>
   11500:	add	r3, sp, #636	; 0x27c
   11504:	mov	r1, #1
   11508:	mov	r2, r0
   1150c:	mov	r0, r4
   11510:	bl	10c6c <__fprintf_chk@plt>
   11514:	mov	r0, #1
   11518:	bl	10c18 <exit@plt>
   1151c:	ldr	r3, [pc, #80]	; 11574 <pclose@plt+0x854>
   11520:	mov	r2, #5
   11524:	ldr	r1, [pc, #88]	; 11584 <pclose@plt+0x864>
   11528:	ldr	r4, [r3]
   1152c:	bl	10b34 <dcgettext@plt>
   11530:	str	sl, [sp]
   11534:	add	r3, sp, #636	; 0x27c
   11538:	mov	r1, #1
   1153c:	mov	r2, r0
   11540:	mov	r0, r4
   11544:	bl	10c6c <__fprintf_chk@plt>
   11548:	mov	r0, #1
   1154c:	bl	10c18 <exit@plt>
   11550:	andeq	r2, r2, r8, lsl #30
   11554:	strdeq	r2, [r1], -r4
   11558:	andeq	r3, r2, r0, lsl #2
   1155c:	andeq	r2, r1, r0, lsr #20
   11560:	andeq	r2, r1, r4, asr r9
   11564:	andeq	r2, r1, ip, asr #20
   11568:	andeq	r2, r1, r0, asr sl
   1156c:	muleq	r1, r4, r9
   11570:	strdeq	r2, [r1], -r0
   11574:	strdeq	r3, [r2], -r8
   11578:	andeq	r2, r1, ip, ror r9
   1157c:	andeq	r2, r1, r8, asr r9
   11580:	andeq	r2, r1, ip, asr #19
   11584:	andeq	r2, r1, r8, asr sl
   11588:	push	{r4, r5, r6, r7, r8, lr}
   1158c:	sub	sp, sp, #776	; 0x308
   11590:	ldr	r5, [pc, #352]	; 116f8 <pclose@plt+0x9d8>
   11594:	mov	r7, r1
   11598:	mov	r6, r0
   1159c:	ldr	r3, [r5]
   115a0:	mov	r0, r1
   115a4:	ldr	r1, [pc, #336]	; 116fc <pclose@plt+0x9dc>
   115a8:	str	r3, [sp, #772]	; 0x304
   115ac:	bl	10b04 <fopen@plt>
   115b0:	subs	r4, r0, #0
   115b4:	beq	116e4 <pclose@plt+0x9c4>
   115b8:	add	r1, sp, #516	; 0x204
   115bc:	mov	r0, r6
   115c0:	bl	11b20 <pclose@plt+0xe00>
   115c4:	add	r8, sp, #4
   115c8:	mov	r1, r8
   115cc:	cmp	r0, #0
   115d0:	mov	r0, r6
   115d4:	beq	11650 <pclose@plt+0x930>
   115d8:	bl	11b80 <pclose@plt+0xe60>
   115dc:	cmp	r0, #0
   115e0:	bne	116b4 <pclose@plt+0x994>
   115e4:	mov	r0, r8
   115e8:	mov	r3, r4
   115ec:	mov	r2, #1
   115f0:	mov	r1, #512	; 0x200
   115f4:	bl	10b7c <fwrite@plt>
   115f8:	cmp	r0, #1
   115fc:	bne	116a4 <pclose@plt+0x984>
   11600:	mov	r0, r4
   11604:	bl	10c84 <fclose@plt>
   11608:	ldr	r3, [pc, #240]	; 11700 <pclose@plt+0x9e0>
   1160c:	ldr	r3, [r3]
   11610:	cmp	r3, #0
   11614:	beq	11638 <pclose@plt+0x918>
   11618:	mov	r2, #5
   1161c:	ldr	r1, [pc, #224]	; 11704 <pclose@plt+0x9e4>
   11620:	mov	r0, #0
   11624:	bl	10b34 <dcgettext@plt>
   11628:	mov	r2, r7
   1162c:	mov	r1, r0
   11630:	mov	r0, #1
   11634:	bl	10c60 <__printf_chk@plt>
   11638:	ldr	r2, [sp, #772]	; 0x304
   1163c:	ldr	r3, [r5]
   11640:	cmp	r2, r3
   11644:	bne	116f4 <pclose@plt+0x9d4>
   11648:	add	sp, sp, #776	; 0x308
   1164c:	pop	{r4, r5, r6, r7, r8, pc}
   11650:	bl	11b80 <pclose@plt+0xe60>
   11654:	cmp	r0, #0
   11658:	bne	11688 <pclose@plt+0x968>
   1165c:	add	r1, sp, #512	; 0x200
   11660:	sub	r2, r8, #2
   11664:	add	r1, r1, #2
   11668:	b	11674 <pclose@plt+0x954>
   1166c:	cmp	r2, r1
   11670:	beq	11688 <pclose@plt+0x968>
   11674:	ldrh	r3, [r2, #2]!
   11678:	bic	r3, r3, #255	; 0xff
   1167c:	cmp	r3, #61440	; 0xf000
   11680:	beq	1166c <pclose@plt+0x94c>
   11684:	b	115e4 <pclose@plt+0x8c4>
   11688:	add	r0, sp, #516	; 0x204
   1168c:	mov	r3, r4
   11690:	mov	r2, #1
   11694:	mov	r1, #256	; 0x100
   11698:	bl	10b7c <fwrite@plt>
   1169c:	cmp	r0, #1
   116a0:	beq	11600 <pclose@plt+0x8e0>
   116a4:	ldr	r3, [pc, #92]	; 11708 <pclose@plt+0x9e8>
   116a8:	mov	r2, #5
   116ac:	ldr	r1, [pc, #88]	; 1170c <pclose@plt+0x9ec>
   116b0:	b	116c0 <pclose@plt+0x9a0>
   116b4:	ldr	r3, [pc, #76]	; 11708 <pclose@plt+0x9e8>
   116b8:	ldr	r1, [pc, #80]	; 11710 <pclose@plt+0x9f0>
   116bc:	mov	r2, #5
   116c0:	mov	r0, #0
   116c4:	ldr	r4, [r3]
   116c8:	bl	10b34 <dcgettext@plt>
   116cc:	mov	r1, #1
   116d0:	mov	r2, r0
   116d4:	mov	r0, r4
   116d8:	bl	10c6c <__fprintf_chk@plt>
   116dc:	mov	r0, #1
   116e0:	bl	10c18 <exit@plt>
   116e4:	mov	r0, r7
   116e8:	bl	10b64 <perror@plt>
   116ec:	mov	r0, #1
   116f0:	bl	10c18 <exit@plt>
   116f4:	bl	10b4c <__stack_chk_fail@plt>
   116f8:	andeq	r2, r2, r8, lsl #30
   116fc:	andeq	r2, r1, r8, lsl #21
   11700:	andeq	r3, r2, r0, lsl #2
   11704:	andeq	r2, r1, r4, asr #21
   11708:	strdeq	r3, [r2], -r8
   1170c:	andeq	r2, r1, r8, lsr #21
   11710:	andeq	r2, r1, ip, lsl #21
   11714:	push	{r4, lr}
   11718:	mov	r1, #2
   1171c:	mov	r4, r0
   11720:	bl	10c0c <open@plt>
   11724:	cmp	r0, #0
   11728:	popge	{r4, pc}
   1172c:	mov	r1, #1
   11730:	mov	r0, r4
   11734:	bl	10c0c <open@plt>
   11738:	cmp	r0, #0
   1173c:	popge	{r4, pc}
   11740:	mov	r0, r4
   11744:	mov	r1, #0
   11748:	bl	10c0c <open@plt>
   1174c:	orr	r0, r0, r0, asr #31
   11750:	pop	{r4, pc}
   11754:	push	{r4, r5, lr}
   11758:	sub	sp, sp, #12
   1175c:	ldr	r4, [pc, #108]	; 117d0 <pclose@plt+0xab0>
   11760:	mov	r3, #0
   11764:	strb	r3, [sp, #3]
   11768:	ldr	r3, [r4]
   1176c:	mov	r5, r0
   11770:	str	r3, [sp, #4]
   11774:	bl	10cd8 <isatty@plt>
   11778:	cmp	r0, #0
   1177c:	bne	1179c <pclose@plt+0xa7c>
   11780:	mov	r0, #0
   11784:	ldr	r2, [sp, #4]
   11788:	ldr	r3, [r4]
   1178c:	cmp	r2, r3
   11790:	bne	117cc <pclose@plt+0xaac>
   11794:	add	sp, sp, #12
   11798:	pop	{r4, r5, pc}
   1179c:	mov	r0, r5
   117a0:	add	r2, sp, #3
   117a4:	ldr	r1, [pc, #40]	; 117d4 <pclose@plt+0xab4>
   117a8:	bl	10b88 <ioctl@plt>
   117ac:	cmp	r0, #0
   117b0:	bne	11780 <pclose@plt+0xa60>
   117b4:	ldrb	r0, [sp, #3]
   117b8:	sub	r0, r0, #1
   117bc:	cmp	r0, #1
   117c0:	movhi	r0, #0
   117c4:	movls	r0, #1
   117c8:	b	11784 <pclose@plt+0xa64>
   117cc:	bl	10b4c <__stack_chk_fail@plt>
   117d0:	andeq	r2, r2, r8, lsl #30
   117d4:	andeq	r4, r0, r3, lsr fp
   117d8:	push	{r4, r5, r6, lr}
   117dc:	subs	r5, r0, #0
   117e0:	beq	11804 <pclose@plt+0xae4>
   117e4:	bl	11714 <pclose@plt+0x9f4>
   117e8:	subs	r4, r0, #0
   117ec:	blt	1189c <pclose@plt+0xb7c>
   117f0:	bl	11754 <pclose@plt+0xa34>
   117f4:	cmp	r0, #0
   117f8:	beq	11894 <pclose@plt+0xb74>
   117fc:	mov	r0, r4
   11800:	pop	{r4, r5, r6, pc}
   11804:	ldr	r5, [pc, #196]	; 118d0 <pclose@plt+0xbb0>
   11808:	ldr	r0, [pc, #196]	; 118d4 <pclose@plt+0xbb4>
   1180c:	b	1181c <pclose@plt+0xafc>
   11810:	ldr	r0, [r5], #4
   11814:	cmp	r0, #0
   11818:	beq	11848 <pclose@plt+0xb28>
   1181c:	bl	11714 <pclose@plt+0x9f4>
   11820:	subs	r4, r0, #0
   11824:	blt	11810 <pclose@plt+0xaf0>
   11828:	bl	11754 <pclose@plt+0xa34>
   1182c:	cmp	r0, #0
   11830:	bne	117fc <pclose@plt+0xadc>
   11834:	mov	r0, r4
   11838:	bl	10cfc <close@plt>
   1183c:	ldr	r0, [r5], #4
   11840:	cmp	r0, #0
   11844:	bne	1181c <pclose@plt+0xafc>
   11848:	mov	r4, r0
   1184c:	mov	r0, r4
   11850:	bl	11754 <pclose@plt+0xa34>
   11854:	cmp	r0, #0
   11858:	bne	117fc <pclose@plt+0xadc>
   1185c:	add	r4, r4, #1
   11860:	cmp	r4, #3
   11864:	bne	1184c <pclose@plt+0xb2c>
   11868:	ldr	r3, [pc, #104]	; 118d8 <pclose@plt+0xbb8>
   1186c:	mov	r2, #5
   11870:	ldr	r1, [pc, #100]	; 118dc <pclose@plt+0xbbc>
   11874:	ldr	r4, [r3]
   11878:	bl	10b34 <dcgettext@plt>
   1187c:	mov	r1, #1
   11880:	mov	r2, r0
   11884:	mov	r0, r4
   11888:	bl	10c6c <__fprintf_chk@plt>
   1188c:	mov	r0, #1
   11890:	bl	10c18 <exit@plt>
   11894:	mov	r0, r4
   11898:	bl	10cfc <close@plt>
   1189c:	ldr	r3, [pc, #52]	; 118d8 <pclose@plt+0xbb8>
   118a0:	mov	r2, #5
   118a4:	ldr	r1, [pc, #52]	; 118e0 <pclose@plt+0xbc0>
   118a8:	mov	r0, #0
   118ac:	ldr	r4, [r3]
   118b0:	bl	10b34 <dcgettext@plt>
   118b4:	mov	r3, r5
   118b8:	mov	r1, #1
   118bc:	mov	r2, r0
   118c0:	mov	r0, r4
   118c4:	bl	10c6c <__fprintf_chk@plt>
   118c8:	mov	r0, #1
   118cc:	bl	10c18 <exit@plt>
   118d0:	andeq	r2, r1, r0, asr #23
   118d4:	ldrdeq	r2, [r1], -r8
   118d8:	strdeq	r3, [r2], -r8
   118dc:	strdeq	r2, [r1], -ip
   118e0:	andeq	r2, r1, r8, ror #23
   118e4:	push	{r1, r2, r3}
   118e8:	push	{r4, r5, r6, r7, lr}
   118ec:	sub	sp, sp, #8
   118f0:	ldr	r5, [pc, #144]	; 11988 <pclose@plt+0xc68>
   118f4:	ldr	r4, [pc, #144]	; 1198c <pclose@plt+0xc6c>
   118f8:	ldr	r3, [pc, #144]	; 11990 <pclose@plt+0xc70>
   118fc:	ldr	r1, [r5]
   11900:	ldr	r7, [sp, #28]
   11904:	add	ip, sp, #32
   11908:	mov	r6, r0
   1190c:	ldr	r3, [r3]
   11910:	ldr	r2, [pc, #124]	; 11994 <pclose@plt+0xc74>
   11914:	str	r1, [sp, #4]
   11918:	ldr	r0, [r4]
   1191c:	mov	r1, #1
   11920:	str	ip, [sp]
   11924:	bl	10c6c <__fprintf_chk@plt>
   11928:	mov	r2, r7
   1192c:	ldr	r0, [r4]
   11930:	ldr	r3, [sp]
   11934:	mov	r1, #1
   11938:	bl	10be8 <__vfprintf_chk@plt>
   1193c:	cmp	r6, #0
   11940:	ble	11964 <pclose@plt+0xc44>
   11944:	mov	r0, r6
   11948:	ldr	r4, [r4]
   1194c:	bl	10bdc <strerror@plt>
   11950:	ldr	r2, [pc, #64]	; 11998 <pclose@plt+0xc78>
   11954:	mov	r1, #1
   11958:	mov	r3, r0
   1195c:	mov	r0, r4
   11960:	bl	10c6c <__fprintf_chk@plt>
   11964:	ldr	r2, [sp, #4]
   11968:	ldr	r3, [r5]
   1196c:	cmp	r2, r3
   11970:	bne	11984 <pclose@plt+0xc64>
   11974:	add	sp, sp, #8
   11978:	pop	{r4, r5, r6, r7, lr}
   1197c:	add	sp, sp, #12
   11980:	bx	lr
   11984:	bl	10b4c <__stack_chk_fail@plt>
   11988:	andeq	r2, r2, r8, lsl #30
   1198c:	strdeq	r3, [r2], -r8
   11990:	andeq	r3, r2, r8, lsl #2
   11994:	andeq	r2, r1, r8, ror ip
   11998:	andeq	r2, r1, r0, lsl #25
   1199c:	push	{r2, r3}
   119a0:	mov	r5, r1
   119a4:	ldr	r2, [pc, #124]	; 11a28 <pclose@plt+0xd08>
   119a8:	push	{r7, lr}
   119ac:	sub	sp, sp, #8
   119b0:	ldr	r4, [pc, #116]	; 11a2c <pclose@plt+0xd0c>
   119b4:	ldr	r3, [pc, #116]	; 11a30 <pclose@plt+0xd10>
   119b8:	ldr	lr, [r2]
   119bc:	ldr	r7, [sp, #16]
   119c0:	add	ip, sp, #20
   119c4:	ldr	r3, [r3]
   119c8:	ldr	r2, [pc, #100]	; 11a34 <pclose@plt+0xd14>
   119cc:	mov	r1, #1
   119d0:	mov	r6, r0
   119d4:	ldr	r0, [r4]
   119d8:	str	lr, [sp, #4]
   119dc:	str	ip, [sp]
   119e0:	bl	10c6c <__fprintf_chk@plt>
   119e4:	mov	r2, r7
   119e8:	ldr	r0, [r4]
   119ec:	ldr	r3, [sp]
   119f0:	mov	r1, #1
   119f4:	bl	10be8 <__vfprintf_chk@plt>
   119f8:	cmp	r5, #0
   119fc:	ble	11a20 <pclose@plt+0xd00>
   11a00:	mov	r0, r5
   11a04:	ldr	r4, [r4]
   11a08:	bl	10bdc <strerror@plt>
   11a0c:	ldr	r2, [pc, #36]	; 11a38 <pclose@plt+0xd18>
   11a10:	mov	r1, #1
   11a14:	mov	r3, r0
   11a18:	mov	r0, r4
   11a1c:	bl	10c6c <__fprintf_chk@plt>
   11a20:	mov	r0, r6
   11a24:	bl	10c18 <exit@plt>
   11a28:	andeq	r2, r2, r8, lsl #30
   11a2c:	strdeq	r3, [r2], -r8
   11a30:	andeq	r3, r2, r8, lsl #2
   11a34:	andeq	r2, r1, r8, ror ip
   11a38:	andeq	r2, r1, r0, lsl #25
   11a3c:	push	{r4, r5, r6, lr}
   11a40:	ldr	r5, [r0]
   11a44:	add	r6, r5, #1
   11a48:	ldrb	ip, [r5]
   11a4c:	tst	ip, #128	; 0x80
   11a50:	beq	11aec <pclose@plt+0xdcc>
   11a54:	mov	r3, #128	; 0x80
   11a58:	mov	lr, #0
   11a5c:	b	11a64 <pclose@plt+0xd44>
   11a60:	mov	lr, r4
   11a64:	asr	r3, r3, #1
   11a68:	tst	r3, ip
   11a6c:	add	r4, lr, #1
   11a70:	bne	11a60 <pclose@plt+0xd40>
   11a74:	cmp	r1, #0
   11a78:	cmpne	r1, r4
   11a7c:	blt	11af8 <pclose@plt+0xdd8>
   11a80:	cmp	r4, #1
   11a84:	beq	11b0c <pclose@plt+0xdec>
   11a88:	sub	r3, r3, #1
   11a8c:	cmp	lr, #0
   11a90:	and	r3, r3, ip
   11a94:	beq	11ad8 <pclose@plt+0xdb8>
   11a98:	ldrb	r1, [r5, #1]
   11a9c:	add	r5, r5, #2
   11aa0:	and	ip, r1, #192	; 0xc0
   11aa4:	cmp	ip, #128	; 0x80
   11aa8:	bne	11b0c <pclose@plt+0xdec>
   11aac:	sub	lr, lr, #1
   11ab0:	add	r6, r5, lr
   11ab4:	b	11ac8 <pclose@plt+0xda8>
   11ab8:	ldrb	r1, [r5], #1
   11abc:	and	ip, r1, #192	; 0xc0
   11ac0:	cmp	ip, #128	; 0x80
   11ac4:	bne	11b0c <pclose@plt+0xdec>
   11ac8:	and	r1, r1, #63	; 0x3f
   11acc:	cmp	r6, r5
   11ad0:	orr	r3, r1, r3, lsl #6
   11ad4:	bne	11ab8 <pclose@plt+0xd98>
   11ad8:	mov	r1, #0
   11adc:	str	r6, [r0]
   11ae0:	str	r1, [r2]
   11ae4:	mov	r0, r3
   11ae8:	pop	{r4, r5, r6, pc}
   11aec:	cmp	r1, #0
   11af0:	movge	r3, ip
   11af4:	bge	11ad8 <pclose@plt+0xdb8>
   11af8:	mvn	r3, #1
   11afc:	str	r3, [r2]
   11b00:	mov	r3, #0
   11b04:	mov	r0, r3
   11b08:	pop	{r4, r5, r6, pc}
   11b0c:	mvn	r3, #0
   11b10:	str	r3, [r2]
   11b14:	mov	r3, #0
   11b18:	mov	r0, r3
   11b1c:	pop	{r4, r5, r6, pc}
   11b20:	push	{r4, lr}
   11b24:	mov	r2, r1
   11b28:	ldr	r1, [pc, #24]	; 11b48 <pclose@plt+0xe28>
   11b2c:	bl	10b88 <ioctl@plt>
   11b30:	cmp	r0, #0
   11b34:	popeq	{r4, pc}
   11b38:	ldr	r0, [pc, #12]	; 11b4c <pclose@plt+0xe2c>
   11b3c:	bl	10b64 <perror@plt>
   11b40:	mvn	r0, #0
   11b44:	pop	{r4, pc}
   11b48:	andeq	r4, r0, r0, asr #22
   11b4c:	andeq	r2, r1, r8, lsl #25
   11b50:	push	{r4, lr}
   11b54:	mov	r2, r1
   11b58:	ldr	r1, [pc, #24]	; 11b78 <pclose@plt+0xe58>
   11b5c:	bl	10b88 <ioctl@plt>
   11b60:	cmp	r0, #0
   11b64:	popeq	{r4, pc}
   11b68:	ldr	r0, [pc, #12]	; 11b7c <pclose@plt+0xe5c>
   11b6c:	bl	10b64 <perror@plt>
   11b70:	mvn	r0, #0
   11b74:	pop	{r4, pc}
   11b78:	andeq	r4, r0, r1, asr #22
   11b7c:	muleq	r1, r4, ip
   11b80:	push	{r4, lr}
   11b84:	mov	r2, r1
   11b88:	ldr	r1, [pc, #24]	; 11ba8 <pclose@plt+0xe88>
   11b8c:	bl	10b88 <ioctl@plt>
   11b90:	cmp	r0, #0
   11b94:	popeq	{r4, pc}
   11b98:	ldr	r0, [pc, #12]	; 11bac <pclose@plt+0xe8c>
   11b9c:	bl	10b64 <perror@plt>
   11ba0:	mvn	r0, #0
   11ba4:	pop	{r4, pc}
   11ba8:	andeq	r4, r0, r9, ror #22
   11bac:	andeq	r2, r1, r0, lsr #25
   11bb0:	push	{r4, lr}
   11bb4:	mov	r2, r1
   11bb8:	ldr	r1, [pc, #24]	; 11bd8 <pclose@plt+0xeb8>
   11bbc:	bl	10b88 <ioctl@plt>
   11bc0:	cmp	r0, #0
   11bc4:	popeq	{r4, pc}
   11bc8:	ldr	r0, [pc, #12]	; 11bdc <pclose@plt+0xebc>
   11bcc:	bl	10b64 <perror@plt>
   11bd0:	mvn	r0, #0
   11bd4:	pop	{r4, pc}
   11bd8:	andeq	r4, r0, sl, ror #22
   11bdc:			; <UNDEFINED> instruction: 0x00012cb0
   11be0:	push	{r4, r5, r6, r7, r8, lr}
   11be4:	sub	sp, sp, #24
   11be8:	ldr	r5, [pc, #308]	; 11d24 <pclose@plt+0x1004>
   11bec:	add	r4, sp, #12
   11bf0:	mov	r3, #0
   11bf4:	ldr	ip, [r5]
   11bf8:	mov	r6, r1
   11bfc:	mov	r2, r4
   11c00:	ldr	r1, [pc, #288]	; 11d28 <pclose@plt+0x1008>
   11c04:	str	ip, [sp, #20]
   11c08:	strh	r3, [sp, #12]
   11c0c:	str	r3, [sp, #16]
   11c10:	mov	r8, r0
   11c14:	bl	10b88 <ioctl@plt>
   11c18:	cmp	r0, #0
   11c1c:	beq	11ca4 <pclose@plt+0xf84>
   11c20:	bl	10c3c <__errno_location@plt>
   11c24:	ldr	r3, [r0]
   11c28:	cmp	r3, #12
   11c2c:	bne	11ccc <pclose@plt+0xfac>
   11c30:	ldrh	r7, [sp, #12]
   11c34:	cmp	r7, #0
   11c38:	beq	11ccc <pclose@plt+0xfac>
   11c3c:	lsl	r0, r7, #2
   11c40:	bl	10bc4 <malloc@plt>
   11c44:	cmp	r0, #0
   11c48:	str	r0, [sp, #16]
   11c4c:	beq	11cec <pclose@plt+0xfcc>
   11c50:	mov	r0, r8
   11c54:	mov	r2, r4
   11c58:	ldr	r1, [pc, #200]	; 11d28 <pclose@plt+0x1008>
   11c5c:	bl	10b88 <ioctl@plt>
   11c60:	cmp	r0, #0
   11c64:	bne	11cdc <pclose@plt+0xfbc>
   11c68:	ldrh	r3, [sp, #12]
   11c6c:	cmp	r3, r7
   11c70:	beq	11ca4 <pclose@plt+0xf84>
   11c74:	ldr	r3, [pc, #176]	; 11d2c <pclose@plt+0x100c>
   11c78:	mov	r2, #5
   11c7c:	ldr	r1, [pc, #172]	; 11d30 <pclose@plt+0x1010>
   11c80:	ldr	r8, [r3]
   11c84:	bl	10b34 <dcgettext@plt>
   11c88:	ldrh	r2, [sp, #12]
   11c8c:	mov	r3, r7
   11c90:	mov	r1, #1
   11c94:	str	r2, [sp]
   11c98:	mov	r2, r0
   11c9c:	mov	r0, r8
   11ca0:	bl	10c6c <__fprintf_chk@plt>
   11ca4:	ldm	r4, {r0, r1}
   11ca8:	mov	ip, #0
   11cac:	stm	r6, {r0, r1}
   11cb0:	ldr	r2, [sp, #20]
   11cb4:	ldr	r3, [r5]
   11cb8:	mov	r0, ip
   11cbc:	cmp	r2, r3
   11cc0:	bne	11d20 <pclose@plt+0x1000>
   11cc4:	add	sp, sp, #24
   11cc8:	pop	{r4, r5, r6, r7, r8, pc}
   11ccc:	ldr	r0, [pc, #96]	; 11d34 <pclose@plt+0x1014>
   11cd0:	bl	10b64 <perror@plt>
   11cd4:	mvn	ip, #0
   11cd8:	b	11cb0 <pclose@plt+0xf90>
   11cdc:	ldr	r0, [pc, #84]	; 11d38 <pclose@plt+0x1018>
   11ce0:	bl	10b64 <perror@plt>
   11ce4:	mvn	ip, #0
   11ce8:	b	11cb0 <pclose@plt+0xf90>
   11cec:	ldr	r3, [pc, #56]	; 11d2c <pclose@plt+0x100c>
   11cf0:	mov	r2, #5
   11cf4:	ldr	r1, [pc, #64]	; 11d3c <pclose@plt+0x101c>
   11cf8:	ldr	r4, [r3]
   11cfc:	bl	10b34 <dcgettext@plt>
   11d00:	ldr	r3, [pc, #56]	; 11d40 <pclose@plt+0x1020>
   11d04:	mov	r1, #1
   11d08:	ldr	r3, [r3]
   11d0c:	mov	r2, r0
   11d10:	mov	r0, r4
   11d14:	bl	10c6c <__fprintf_chk@plt>
   11d18:	mvn	ip, #0
   11d1c:	b	11cb0 <pclose@plt+0xf90>
   11d20:	bl	10b4c <__stack_chk_fail@plt>
   11d24:	andeq	r2, r2, r8, lsl #30
   11d28:	andeq	r4, r0, r6, ror #22
   11d2c:	strdeq	r3, [r2], -r8
   11d30:	strdeq	r2, [r1], -r0
   11d34:	andeq	r2, r1, r0, asr #25
   11d38:	andeq	r2, r1, r4, ror #25
   11d3c:	ldrdeq	r2, [r1], -r0
   11d40:	andeq	r3, r2, r8, lsl #2
   11d44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d48:	sub	sp, sp, #16
   11d4c:	ldr	r9, [pc, #220]	; 11e30 <pclose@plt+0x1110>
   11d50:	cmp	r1, #0
   11d54:	mov	r4, r0
   11d58:	ldr	r3, [r9]
   11d5c:	mov	r5, r2
   11d60:	str	r3, [sp, #12]
   11d64:	beq	11e1c <pclose@plt+0x10fc>
   11d68:	ldrh	r3, [r1, #4]
   11d6c:	ldr	r0, [r1]
   11d70:	add	r6, sp, #4
   11d74:	str	r0, [sp, #4]
   11d78:	strh	r3, [r6, #4]
   11d7c:	ldr	r7, [pc, #176]	; 11e34 <pclose@plt+0x1114>
   11d80:	ldr	r8, [pc, #176]	; 11e38 <pclose@plt+0x1118>
   11d84:	b	11dcc <pclose@plt+0x10ac>
   11d88:	cmp	r5, #0
   11d8c:	beq	11df0 <pclose@plt+0x10d0>
   11d90:	mov	r2, r5
   11d94:	mov	r1, r8
   11d98:	mov	r0, r4
   11d9c:	bl	10b88 <ioctl@plt>
   11da0:	cmp	r0, #0
   11da4:	beq	11df0 <pclose@plt+0x10d0>
   11da8:	bl	10c3c <__errno_location@plt>
   11dac:	ldr	r3, [r0]
   11db0:	cmp	r3, #12
   11db4:	bne	11e0c <pclose@plt+0x10ec>
   11db8:	ldrh	r3, [sp, #8]
   11dbc:	cmp	r3, #99	; 0x63
   11dc0:	bhi	11e0c <pclose@plt+0x10ec>
   11dc4:	add	r3, r3, #1
   11dc8:	strh	r3, [sp, #8]
   11dcc:	mov	r2, r6
   11dd0:	mov	r1, r7
   11dd4:	mov	r0, r4
   11dd8:	bl	10b88 <ioctl@plt>
   11ddc:	subs	sl, r0, #0
   11de0:	beq	11d88 <pclose@plt+0x1068>
   11de4:	ldr	r0, [pc, #80]	; 11e3c <pclose@plt+0x111c>
   11de8:	bl	10b64 <perror@plt>
   11dec:	mvn	sl, #0
   11df0:	ldr	r2, [sp, #12]
   11df4:	ldr	r3, [r9]
   11df8:	mov	r0, sl
   11dfc:	cmp	r2, r3
   11e00:	bne	11e2c <pclose@plt+0x110c>
   11e04:	add	sp, sp, #16
   11e08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e0c:	ldr	r0, [pc, #44]	; 11e40 <pclose@plt+0x1120>
   11e10:	bl	10b64 <perror@plt>
   11e14:	mvn	sl, #0
   11e18:	b	11df0 <pclose@plt+0x10d0>
   11e1c:	str	r1, [sp, #4]
   11e20:	strh	r1, [sp, #8]
   11e24:	add	r6, sp, #4
   11e28:	b	11d7c <pclose@plt+0x105c>
   11e2c:	bl	10b4c <__stack_chk_fail@plt>
   11e30:	andeq	r2, r2, r8, lsl #30
   11e34:	andeq	r4, r0, r8, ror #22
   11e38:	andeq	r4, r0, r7, ror #22
   11e3c:	andeq	r2, r1, r8, lsl sp
   11e40:	andeq	r2, r1, r8, lsr #26
   11e44:	push	{r4, r5, r6, r7, r8, lr}
   11e48:	sub	sp, sp, #8
   11e4c:	add	r6, r1, #8
   11e50:	mov	r5, r1
   11e54:	mov	r8, r0
   11e58:	bl	10c24 <strlen@plt>
   11e5c:	mov	r4, r0
   11e60:	mov	r0, r6
   11e64:	bl	10c24 <strlen@plt>
   11e68:	add	r0, r4, r0
   11e6c:	add	r0, r0, #2
   11e70:	bl	10bc4 <malloc@plt>
   11e74:	subs	r7, r0, #0
   11e78:	beq	11ed4 <pclose@plt+0x11b4>
   11e7c:	ldr	r3, [pc, #88]	; 11edc <pclose@plt+0x11bc>
   11e80:	mvn	r2, #0
   11e84:	add	r3, pc, r3
   11e88:	mov	r1, #1
   11e8c:	str	r6, [sp, #4]
   11e90:	str	r8, [sp]
   11e94:	bl	10c48 <__sprintf_chk@plt>
   11e98:	ldr	r1, [pc, #64]	; 11ee0 <pclose@plt+0x11c0>
   11e9c:	mov	r0, r7
   11ea0:	add	r1, pc, r1
   11ea4:	bl	10ca8 <popen@plt>
   11ea8:	mov	r3, #1
   11eac:	str	r3, [r5, #4]
   11eb0:	mov	r4, r0
   11eb4:	str	r0, [r5]
   11eb8:	mov	r0, r7
   11ebc:	bl	10b10 <free@plt>
   11ec0:	clz	r0, r4
   11ec4:	lsr	r0, r0, #5
   11ec8:	rsb	r0, r0, #0
   11ecc:	add	sp, sp, #8
   11ed0:	pop	{r4, r5, r6, r7, r8, pc}
   11ed4:	mvn	r0, #0
   11ed8:	b	11ecc <pclose@plt+0x11ac>
   11edc:	andeq	r0, r0, r8, lsr #29
   11ee0:	muleq	r0, r4, lr
   11ee4:	ldr	r3, [pc, #268]	; 11ff8 <pclose@plt+0x12d8>
   11ee8:	ldr	r2, [pc, #268]	; 11ffc <pclose@plt+0x12dc>
   11eec:	add	r3, pc, r3
   11ef0:	push	{r4, r5, r6, r7, r8, r9, lr}
   11ef4:	add	r7, r0, #8
   11ef8:	ldr	r9, [r3, r2]
   11efc:	sub	sp, sp, #100	; 0x64
   11f00:	mov	r8, r0
   11f04:	ldr	ip, [r9]
   11f08:	mov	r1, r7
   11f0c:	mov	r2, sp
   11f10:	mov	r0, #3
   11f14:	str	ip, [sp, #92]	; 0x5c
   11f18:	bl	10b70 <__xstat@plt>
   11f1c:	cmn	r0, #1
   11f20:	beq	11fec <pclose@plt+0x12cc>
   11f24:	ldr	r3, [sp, #16]
   11f28:	and	r3, r3, #61440	; 0xf000
   11f2c:	cmp	r3, #32768	; 0x8000
   11f30:	bne	11fec <pclose@plt+0x12cc>
   11f34:	mov	r1, #4
   11f38:	mov	r0, r7
   11f3c:	bl	10c78 <access@plt>
   11f40:	cmn	r0, #1
   11f44:	beq	11fec <pclose@plt+0x12cc>
   11f48:	mov	r1, #46	; 0x2e
   11f4c:	mov	r0, r7
   11f50:	bl	10cc0 <strrchr@plt>
   11f54:	subs	r6, r0, #0
   11f58:	beq	11fac <pclose@plt+0x128c>
   11f5c:	ldr	r4, [pc, #156]	; 12000 <pclose@plt+0x12e0>
   11f60:	add	r4, pc, r4
   11f64:	ldr	r5, [r4, #4]
   11f68:	cmp	r5, #0
   11f6c:	beq	11fac <pclose@plt+0x128c>
   11f70:	add	r4, r4, #8
   11f74:	b	11f88 <pclose@plt+0x1268>
   11f78:	add	r4, r4, #8
   11f7c:	ldr	r5, [r4, #-4]
   11f80:	cmp	r5, #0
   11f84:	beq	11fac <pclose@plt+0x128c>
   11f88:	ldr	r1, [r4, #-8]
   11f8c:	mov	r0, r6
   11f90:	bl	10af8 <strcmp@plt>
   11f94:	cmp	r0, #0
   11f98:	bne	11f78 <pclose@plt+0x1258>
   11f9c:	mov	r1, r8
   11fa0:	mov	r0, r5
   11fa4:	bl	11e44 <pclose@plt+0x1124>
   11fa8:	b	11fd4 <pclose@plt+0x12b4>
   11fac:	ldr	r1, [pc, #80]	; 12004 <pclose@plt+0x12e4>
   11fb0:	mov	r0, r7
   11fb4:	add	r1, pc, r1
   11fb8:	bl	10b04 <fopen@plt>
   11fbc:	clz	r3, r0
   11fc0:	lsr	r3, r3, #5
   11fc4:	mov	r2, r0
   11fc8:	rsb	r0, r3, #0
   11fcc:	mov	r3, #0
   11fd0:	strd	r2, [r8]
   11fd4:	ldr	r2, [sp, #92]	; 0x5c
   11fd8:	ldr	r3, [r9]
   11fdc:	cmp	r2, r3
   11fe0:	bne	11ff4 <pclose@plt+0x12d4>
   11fe4:	add	sp, sp, #100	; 0x64
   11fe8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11fec:	mvn	r0, #0
   11ff0:	b	11fd4 <pclose@plt+0x12b4>
   11ff4:	bl	10b4c <__stack_chk_fail@plt>
   11ff8:	andeq	r1, r1, ip, lsl #2
   11ffc:	andeq	r0, r0, ip, asr #1
   12000:	andeq	r1, r1, r4, ror r1
   12004:	andeq	r0, r0, r0, lsl #27
   12008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1200c:	sub	sp, sp, #156	; 0x9c
   12010:	ldr	ip, [pc, #1132]	; 12484 <pclose@plt+0x1764>
   12014:	ldr	lr, [pc, #1132]	; 12488 <pclose@plt+0x1768>
   12018:	ldr	r5, [sp, #192]	; 0xc0
   1201c:	add	ip, pc, ip
   12020:	str	r1, [sp, #20]
   12024:	str	r5, [sp, #36]	; 0x24
   12028:	mov	r6, r1
   1202c:	mov	r1, ip
   12030:	ldr	ip, [ip, lr]
   12034:	mov	r4, r0
   12038:	mov	lr, ip
   1203c:	str	ip, [sp, #40]	; 0x28
   12040:	ldr	lr, [lr]
   12044:	mov	ip, #0
   12048:	str	r0, [sp, #28]
   1204c:	str	ip, [r5, #4]
   12050:	str	ip, [r5]
   12054:	mov	r0, r6
   12058:	mov	fp, r2
   1205c:	str	r3, [sp, #48]	; 0x30
   12060:	str	lr, [sp, #148]	; 0x94
   12064:	bl	10bb8 <opendir@plt>
   12068:	subs	r7, r0, #0
   1206c:	beq	12460 <pclose@plt+0x1740>
   12070:	mov	r0, r6
   12074:	bl	10c24 <strlen@plt>
   12078:	mov	r1, #47	; 0x2f
   1207c:	str	r0, [sp, #12]
   12080:	mov	r0, r4
   12084:	bl	10c30 <strchr@plt>
   12088:	subs	r9, r0, #0
   1208c:	beq	123c0 <pclose@plt+0x16a0>
   12090:	sub	r1, r9, r4
   12094:	mov	r0, r4
   12098:	bl	10b28 <strndup@plt>
   1209c:	subs	r3, r0, #0
   120a0:	str	r3, [sp, #16]
   120a4:	beq	1246c <pclose@plt+0x174c>
   120a8:	ldr	r3, [pc, #988]	; 1248c <pclose@plt+0x176c>
   120ac:	mov	r5, #0
   120b0:	add	r3, pc, r3
   120b4:	str	r3, [sp, #44]	; 0x2c
   120b8:	ldr	r3, [pc, #976]	; 12490 <pclose@plt+0x1770>
   120bc:	add	r3, pc, r3
   120c0:	str	r3, [sp, #52]	; 0x34
   120c4:	mvn	r3, #0
   120c8:	str	r3, [sp, #32]
   120cc:	mov	r0, r7
   120d0:	bl	10cb4 <readdir@plt>
   120d4:	subs	r6, r0, #0
   120d8:	beq	122d8 <pclose@plt+0x15b8>
   120dc:	add	r4, r6, #11
   120e0:	mov	r0, r4
   120e4:	bl	10c24 <strlen@plt>
   120e8:	cmp	r0, #2
   120ec:	mov	r8, r0
   120f0:	bhi	12124 <pclose@plt+0x1404>
   120f4:	ldr	r1, [pc, #920]	; 12494 <pclose@plt+0x1774>
   120f8:	mov	r0, r4
   120fc:	add	r1, pc, r1
   12100:	bl	10af8 <strcmp@plt>
   12104:	cmp	r0, #0
   12108:	beq	120cc <pclose@plt+0x13ac>
   1210c:	ldr	r1, [pc, #900]	; 12498 <pclose@plt+0x1778>
   12110:	mov	r0, r4
   12114:	add	r1, pc, r1
   12118:	bl	10af8 <strcmp@plt>
   1211c:	cmp	r0, #0
   12120:	beq	120cc <pclose@plt+0x13ac>
   12124:	ldr	r3, [sp, #12]
   12128:	add	sl, r3, #2
   1212c:	add	sl, sl, r8
   12130:	cmp	sl, #4096	; 0x1000
   12134:	bhi	120cc <pclose@plt+0x13ac>
   12138:	adds	r8, fp, #0
   1213c:	movne	r8, #1
   12140:	cmp	r9, #0
   12144:	beq	12360 <pclose@plt+0x1640>
   12148:	ldr	r1, [sp, #16]
   1214c:	mov	r0, r4
   12150:	bl	10af8 <strcmp@plt>
   12154:	cmp	r0, #0
   12158:	bne	12304 <pclose@plt+0x15e4>
   1215c:	mov	r3, #1
   12160:	str	r3, [sp, #24]
   12164:	mov	r0, sl
   12168:	bl	10bc4 <malloc@plt>
   1216c:	subs	sl, r0, #0
   12170:	beq	12324 <pclose@plt+0x1604>
   12174:	ldr	r3, [sp, #20]
   12178:	mvn	r2, #0
   1217c:	str	r3, [sp]
   12180:	ldr	r3, [pc, #788]	; 1249c <pclose@plt+0x177c>
   12184:	mov	r1, #1
   12188:	add	r3, pc, r3
   1218c:	str	r4, [sp, #4]
   12190:	bl	10c48 <__sprintf_chk@plt>
   12194:	add	r2, sp, #56	; 0x38
   12198:	mov	r1, sl
   1219c:	mov	r0, #3
   121a0:	bl	10b70 <__xstat@plt>
   121a4:	cmp	r0, #0
   121a8:	bne	121bc <pclose@plt+0x149c>
   121ac:	ldr	r3, [sp, #72]	; 0x48
   121b0:	and	r3, r3, #61440	; 0xf000
   121b4:	cmp	r3, #16384	; 0x4000
   121b8:	beq	12374 <pclose@plt+0x1654>
   121bc:	mov	r0, sl
   121c0:	bl	10b10 <free@plt>
   121c4:	and	r3, r5, #1
   121c8:	cmp	r9, #0
   121cc:	movne	r3, #1
   121d0:	cmp	r3, #0
   121d4:	bne	120cc <pclose@plt+0x13ac>
   121d8:	ldrb	r3, [r6, #11]
   121dc:	ldr	r1, [sp, #28]
   121e0:	mov	r6, r4
   121e4:	cmp	r3, #0
   121e8:	ldrb	r2, [r1]
   121ec:	bne	12204 <pclose@plt+0x14e4>
   121f0:	b	1220c <pclose@plt+0x14ec>
   121f4:	ldrb	r3, [r6, #1]!
   121f8:	ldrb	r2, [r1, #1]!
   121fc:	cmp	r3, #0
   12200:	beq	1220c <pclose@plt+0x14ec>
   12204:	cmp	r3, r2
   12208:	beq	121f4 <pclose@plt+0x14d4>
   1220c:	cmp	r2, #0
   12210:	bne	120cc <pclose@plt+0x13ac>
   12214:	ldr	r3, [sp, #36]	; 0x24
   12218:	ldr	r2, [sp, #20]
   1221c:	add	r3, r3, #8
   12220:	str	r4, [sp, #4]
   12224:	str	r2, [sp]
   12228:	mov	r4, r3
   1222c:	mov	r0, r3
   12230:	mvn	r2, #0
   12234:	ldr	r3, [sp, #44]	; 0x2c
   12238:	mov	r1, #1
   1223c:	bl	10c48 <__sprintf_chk@plt>
   12240:	mov	r1, r4
   12244:	add	r2, sp, #56	; 0x38
   12248:	mov	r0, #3
   1224c:	bl	10b70 <__xstat@plt>
   12250:	cmp	r0, #0
   12254:	bne	120cc <pclose@plt+0x13ac>
   12258:	ldr	r3, [sp, #72]	; 0x48
   1225c:	and	r3, r3, #61440	; 0xf000
   12260:	cmp	r3, #32768	; 0x8000
   12264:	bne	120cc <pclose@plt+0x13ac>
   12268:	ldr	r5, [sp, #48]	; 0x30
   1226c:	ldr	r4, [r5]
   12270:	cmp	r4, #0
   12274:	beq	122d0 <pclose@plt+0x15b0>
   12278:	ldr	r3, [pc, #544]	; 124a0 <pclose@plt+0x1780>
   1227c:	str	r9, [sp, #24]
   12280:	add	r3, pc, r3
   12284:	ldr	r8, [r3, #4]
   12288:	mov	r1, r4
   1228c:	mov	r0, r6
   12290:	bl	10af8 <strcmp@plt>
   12294:	cmp	r0, #0
   12298:	beq	12450 <pclose@plt+0x1730>
   1229c:	mov	r0, r4
   122a0:	bl	10c24 <strlen@plt>
   122a4:	mov	r1, r4
   122a8:	mov	r2, r0
   122ac:	mov	r9, r0
   122b0:	mov	r0, r6
   122b4:	bl	10ce4 <strncmp@plt>
   122b8:	cmp	r0, #0
   122bc:	beq	123c8 <pclose@plt+0x16a8>
   122c0:	ldr	r4, [r5, #4]!
   122c4:	cmp	r4, #0
   122c8:	bne	12288 <pclose@plt+0x1568>
   122cc:	ldr	r9, [sp, #24]
   122d0:	mov	r5, #0
   122d4:	b	120cc <pclose@plt+0x13ac>
   122d8:	eor	r5, r5, #1
   122dc:	cmp	fp, #0
   122e0:	movle	r5, #0
   122e4:	andgt	r5, r5, #1
   122e8:	cmp	r5, #0
   122ec:	beq	12324 <pclose@plt+0x1604>
   122f0:	mov	r1, r6
   122f4:	mov	r0, r7
   122f8:	bl	10bf4 <seekdir@plt>
   122fc:	mov	r5, #1
   12300:	b	120cc <pclose@plt+0x13ac>
   12304:	ands	r8, r8, r5
   12308:	beq	120cc <pclose@plt+0x13ac>
   1230c:	mov	r3, #0
   12310:	mov	r0, sl
   12314:	str	r3, [sp, #24]
   12318:	bl	10bc4 <malloc@plt>
   1231c:	subs	sl, r0, #0
   12320:	bne	12174 <pclose@plt+0x1454>
   12324:	ldr	r3, [sp, #16]
   12328:	cmp	r3, #0
   1232c:	beq	12338 <pclose@plt+0x1618>
   12330:	mov	r0, r3
   12334:	bl	10b10 <free@plt>
   12338:	mov	r0, r7
   1233c:	bl	10d08 <closedir@plt>
   12340:	ldr	r3, [sp, #40]	; 0x28
   12344:	ldr	r2, [sp, #148]	; 0x94
   12348:	ldr	r0, [sp, #32]
   1234c:	ldr	r3, [r3]
   12350:	cmp	r2, r3
   12354:	bne	12480 <pclose@plt+0x1760>
   12358:	add	sp, sp, #156	; 0x9c
   1235c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12360:	and	r3, r5, #1
   12364:	ands	r8, r8, r3
   12368:	strne	r9, [sp, #24]
   1236c:	beq	121c8 <pclose@plt+0x14a8>
   12370:	b	12164 <pclose@plt+0x1444>
   12374:	ldr	r3, [sp, #24]
   12378:	cmp	r3, #0
   1237c:	bne	1241c <pclose@plt+0x16fc>
   12380:	cmp	r8, #0
   12384:	beq	121bc <pclose@plt+0x149c>
   12388:	ldr	r3, [sp, #36]	; 0x24
   1238c:	sub	r2, fp, #1
   12390:	str	r3, [sp]
   12394:	mov	r1, sl
   12398:	ldr	r3, [sp, #48]	; 0x30
   1239c:	ldr	r0, [sp, #28]
   123a0:	bl	12008 <pclose@plt+0x12e8>
   123a4:	str	r0, [sp, #32]
   123a8:	ldr	r3, [sp, #32]
   123ac:	cmp	r3, #0
   123b0:	bne	121bc <pclose@plt+0x149c>
   123b4:	mov	r0, sl
   123b8:	bl	10b10 <free@plt>
   123bc:	b	12324 <pclose@plt+0x1604>
   123c0:	str	r9, [sp, #16]
   123c4:	b	120a8 <pclose@plt+0x1388>
   123c8:	cmp	r8, #0
   123cc:	beq	122c0 <pclose@plt+0x15a0>
   123d0:	ldr	r3, [sp, #52]	; 0x34
   123d4:	add	r4, r6, r9
   123d8:	mov	sl, r8
   123dc:	add	r9, r3, #8
   123e0:	b	123f4 <pclose@plt+0x16d4>
   123e4:	add	r9, r9, #8
   123e8:	ldr	sl, [r9, #-4]
   123ec:	cmp	sl, #0
   123f0:	beq	122c0 <pclose@plt+0x15a0>
   123f4:	ldr	r1, [r9, #-8]
   123f8:	mov	r0, r4
   123fc:	bl	10af8 <strcmp@plt>
   12400:	cmp	r0, #0
   12404:	bne	123e4 <pclose@plt+0x16c4>
   12408:	ldr	r1, [sp, #36]	; 0x24
   1240c:	mov	r0, sl
   12410:	bl	11e44 <pclose@plt+0x1124>
   12414:	str	r0, [sp, #32]
   12418:	b	12324 <pclose@plt+0x1604>
   1241c:	ldr	r3, [sp, #36]	; 0x24
   12420:	mov	r2, r0
   12424:	str	r3, [sp]
   12428:	mov	r1, sl
   1242c:	ldr	r3, [sp, #48]	; 0x30
   12430:	add	r0, r9, #1
   12434:	bl	12008 <pclose@plt+0x12e8>
   12438:	cmp	r0, #0
   1243c:	moveq	r8, #0
   12440:	cmp	r8, #0
   12444:	str	r0, [sp, #32]
   12448:	beq	123a8 <pclose@plt+0x1688>
   1244c:	b	12388 <pclose@plt+0x1668>
   12450:	ldr	r0, [sp, #36]	; 0x24
   12454:	bl	11ee4 <pclose@plt+0x11c4>
   12458:	str	r0, [sp, #32]
   1245c:	b	12324 <pclose@plt+0x1604>
   12460:	mvn	r3, #0
   12464:	str	r3, [sp, #32]
   12468:	b	12340 <pclose@plt+0x1620>
   1246c:	mov	r0, r7
   12470:	bl	10d08 <closedir@plt>
   12474:	mvn	r3, #0
   12478:	str	r3, [sp, #32]
   1247c:	b	12340 <pclose@plt+0x1620>
   12480:	bl	10b4c <__stack_chk_fail@plt>
   12484:	ldrdeq	r0, [r1], -ip
   12488:	andeq	r0, r0, ip, asr #1
   1248c:	muleq	r0, r0, ip
   12490:	andeq	r1, r1, r8, lsl r0
   12494:	andeq	r0, r0, ip, lsr ip
   12498:	andeq	r0, r0, r8, lsr #24
   1249c:			; <UNDEFINED> instruction: 0x00000bb8
   124a0:	andeq	r0, r1, r4, asr lr
   124a4:	push	{r4, lr}
   124a8:	subs	r4, r0, #0
   124ac:	popeq	{r4, pc}
   124b0:	ldr	r0, [r4]
   124b4:	cmp	r0, #0
   124b8:	popeq	{r4, pc}
   124bc:	ldr	r3, [r4, #4]
   124c0:	cmp	r3, #0
   124c4:	bne	124d8 <pclose@plt+0x17b8>
   124c8:	bl	10c84 <fclose@plt>
   124cc:	mov	r3, #0
   124d0:	str	r3, [r4]
   124d4:	pop	{r4, pc}
   124d8:	bl	10d20 <pclose@plt>
   124dc:	b	124cc <pclose@plt+0x17ac>
   124e0:	ldr	ip, [pc, #812]	; 12814 <pclose@plt+0x1af4>
   124e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124e8:	add	ip, pc, ip
   124ec:	ldr	lr, [pc, #804]	; 12818 <pclose@plt+0x1af8>
   124f0:	mov	r7, r0
   124f4:	sub	sp, sp, #140	; 0x8c
   124f8:	ldr	r0, [ip, lr]
   124fc:	mov	r8, r3
   12500:	mov	r4, #0
   12504:	mov	r3, ip
   12508:	add	r5, r8, #8
   1250c:	ldr	ip, [r0]
   12510:	str	r0, [sp, #16]
   12514:	str	r1, [sp, #20]
   12518:	str	r4, [r8]
   1251c:	mov	r1, r7
   12520:	str	r4, [r8, #4]
   12524:	mov	r0, r5
   12528:	str	r2, [sp, #24]
   1252c:	str	ip, [sp, #132]	; 0x84
   12530:	bl	10b94 <strcpy@plt>
   12534:	mov	r0, r8
   12538:	bl	11ee4 <pclose@plt+0x11c4>
   1253c:	cmp	r0, r4
   12540:	beq	1263c <pclose@plt+0x191c>
   12544:	ldrb	r3, [r7]
   12548:	cmp	r3, #47	; 0x2f
   1254c:	beq	126b4 <pclose@plt+0x1994>
   12550:	ldr	r3, [sp, #20]
   12554:	ldr	r6, [r3]
   12558:	cmp	r6, #0
   1255c:	beq	12608 <pclose@plt+0x18e8>
   12560:	ldr	r4, [pc, #692]	; 1281c <pclose@plt+0x1afc>
   12564:	ldr	r5, [sp, #20]
   12568:	ldr	sl, [sp, #24]
   1256c:	add	r4, pc, r4
   12570:	mov	r0, r6
   12574:	bl	10c24 <strlen@plt>
   12578:	cmp	r0, #0
   1257c:	mov	r1, r0
   12580:	beq	126ac <pclose@plt+0x198c>
   12584:	sub	r2, r0, #1
   12588:	add	r3, r6, r2
   1258c:	ldrb	r2, [r6, r2]
   12590:	cmp	r2, #42	; 0x2a
   12594:	bne	12660 <pclose@plt+0x1940>
   12598:	mov	r9, #0
   1259c:	b	125b0 <pclose@plt+0x1890>
   125a0:	ldrb	r2, [r3, #-1]!
   125a4:	mov	r1, r0
   125a8:	cmp	r2, #42	; 0x2a
   125ac:	bne	1266c <pclose@plt+0x194c>
   125b0:	subs	r0, r0, #1
   125b4:	add	r9, r9, #1
   125b8:	bne	125a0 <pclose@plt+0x1880>
   125bc:	mov	r0, r4
   125c0:	bl	10b40 <strdup@plt>
   125c4:	mov	r6, r0
   125c8:	cmp	r6, #0
   125cc:	beq	12608 <pclose@plt+0x18e8>
   125d0:	mov	r2, r9
   125d4:	mov	r3, sl
   125d8:	mov	r1, r6
   125dc:	str	r8, [sp]
   125e0:	mov	r0, r7
   125e4:	bl	12008 <pclose@plt+0x12e8>
   125e8:	mov	r9, r0
   125ec:	mov	r0, r6
   125f0:	bl	10b10 <free@plt>
   125f4:	cmp	r9, #0
   125f8:	beq	1263c <pclose@plt+0x191c>
   125fc:	ldr	r6, [r5, #4]!
   12600:	cmp	r6, #0
   12604:	bne	12570 <pclose@plt+0x1850>
   12608:	mov	r4, #1
   1260c:	b	12640 <pclose@plt+0x1920>
   12610:	mov	r1, #4
   12614:	mov	r0, r5
   12618:	bl	10c78 <access@plt>
   1261c:	cmp	r0, #0
   12620:	bne	127c8 <pclose@plt+0x1aa8>
   12624:	ldr	r8, [sp, #36]	; 0x24
   12628:	ldr	r0, [r4, #4]
   1262c:	mov	r1, r8
   12630:	bl	11e44 <pclose@plt+0x1124>
   12634:	cmp	r0, #0
   12638:	bne	12550 <pclose@plt+0x1830>
   1263c:	mov	r4, #0
   12640:	ldr	r3, [sp, #16]
   12644:	ldr	r2, [sp, #132]	; 0x84
   12648:	mov	r0, r4
   1264c:	ldr	r3, [r3]
   12650:	cmp	r2, r3
   12654:	bne	12810 <pclose@plt+0x1af0>
   12658:	add	sp, sp, #140	; 0x8c
   1265c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12660:	add	r3, r6, r0
   12664:	mov	r9, #0
   12668:	ldrb	r2, [r3, #-1]
   1266c:	cmp	r2, #47	; 0x2f
   12670:	subeq	r0, r0, #1
   12674:	addeq	r3, r6, r0
   12678:	beq	12684 <pclose@plt+0x1964>
   1267c:	b	1269c <pclose@plt+0x197c>
   12680:	sub	r0, r0, #1
   12684:	cmp	r0, #0
   12688:	beq	125bc <pclose@plt+0x189c>
   1268c:	ldrb	r2, [r3, #-1]!
   12690:	mov	r1, r0
   12694:	cmp	r2, #47	; 0x2f
   12698:	beq	12680 <pclose@plt+0x1960>
   1269c:	mov	r0, r6
   126a0:	bl	10b28 <strndup@plt>
   126a4:	mov	r6, r0
   126a8:	b	125c8 <pclose@plt+0x18a8>
   126ac:	mov	r9, r0
   126b0:	b	125bc <pclose@plt+0x189c>
   126b4:	str	r4, [r8, #4]
   126b8:	mov	r0, r7
   126bc:	bl	10c24 <strlen@plt>
   126c0:	ldr	r9, [sp, #24]
   126c4:	ldr	r4, [r9]
   126c8:	cmp	r4, #0
   126cc:	beq	12550 <pclose@plt+0x1830>
   126d0:	ldr	r3, [pc, #328]	; 12820 <pclose@plt+0x1b00>
   126d4:	ldr	sl, [pc, #328]	; 12824 <pclose@plt+0x1b04>
   126d8:	add	r3, pc, r3
   126dc:	add	sl, pc, sl
   126e0:	str	r3, [sp, #32]
   126e4:	add	r3, r0, #1
   126e8:	str	r3, [sp, #28]
   126ec:	str	r8, [sp, #36]	; 0x24
   126f0:	mov	r0, r4
   126f4:	bl	10c24 <strlen@plt>
   126f8:	ldr	r3, [sp, #28]
   126fc:	add	r6, r3, r0
   12700:	cmp	r6, #4096	; 0x1000
   12704:	bhi	127d8 <pclose@plt+0x1ab8>
   12708:	str	r4, [sp, #4]
   1270c:	ldr	r3, [sp, #32]
   12710:	mvn	r2, #0
   12714:	mov	r1, #1
   12718:	str	r7, [sp]
   1271c:	mov	r0, r5
   12720:	add	r8, sp, #40	; 0x28
   12724:	bl	10c48 <__sprintf_chk@plt>
   12728:	mov	r2, r8
   1272c:	mov	r1, r5
   12730:	mov	r0, #3
   12734:	bl	10b70 <__xstat@plt>
   12738:	subs	r4, r0, #0
   1273c:	bne	12750 <pclose@plt+0x1a30>
   12740:	ldr	r3, [sp, #56]	; 0x38
   12744:	and	r3, r3, #61440	; 0xf000
   12748:	cmp	r3, #32768	; 0x8000
   1274c:	beq	127ec <pclose@plt+0x1acc>
   12750:	ldr	r4, [pc, #208]	; 12828 <pclose@plt+0x1b08>
   12754:	add	r4, pc, r4
   12758:	ldr	r3, [r4, #4]
   1275c:	cmp	r3, #0
   12760:	beq	127d8 <pclose@plt+0x1ab8>
   12764:	ldr	fp, [r4]
   12768:	mov	r0, fp
   1276c:	bl	10c24 <strlen@plt>
   12770:	add	r0, r6, r0
   12774:	cmp	r0, #4096	; 0x1000
   12778:	bhi	127c8 <pclose@plt+0x1aa8>
   1277c:	ldr	r3, [r9]
   12780:	mvn	r2, #0
   12784:	str	r3, [sp, #4]
   12788:	mov	r1, #1
   1278c:	mov	r3, sl
   12790:	str	fp, [sp, #8]
   12794:	str	r7, [sp]
   12798:	mov	r0, r5
   1279c:	bl	10c48 <__sprintf_chk@plt>
   127a0:	mov	r2, r8
   127a4:	mov	r1, r5
   127a8:	mov	r0, #3
   127ac:	bl	10b70 <__xstat@plt>
   127b0:	cmp	r0, #0
   127b4:	bne	127c8 <pclose@plt+0x1aa8>
   127b8:	ldr	r3, [sp, #56]	; 0x38
   127bc:	and	r3, r3, #61440	; 0xf000
   127c0:	cmp	r3, #32768	; 0x8000
   127c4:	beq	12610 <pclose@plt+0x18f0>
   127c8:	add	r4, r4, #8
   127cc:	ldr	r3, [r4, #4]
   127d0:	cmp	r3, #0
   127d4:	bne	12764 <pclose@plt+0x1a44>
   127d8:	ldr	r4, [r9, #4]!
   127dc:	cmp	r4, #0
   127e0:	bne	126f0 <pclose@plt+0x19d0>
   127e4:	ldr	r8, [sp, #36]	; 0x24
   127e8:	b	12550 <pclose@plt+0x1830>
   127ec:	ldr	r1, [pc, #56]	; 1282c <pclose@plt+0x1b0c>
   127f0:	mov	r0, r5
   127f4:	add	r1, pc, r1
   127f8:	bl	10b04 <fopen@plt>
   127fc:	ldr	r3, [sp, #36]	; 0x24
   12800:	cmp	r0, #0
   12804:	str	r0, [r3]
   12808:	beq	12750 <pclose@plt+0x1a30>
   1280c:	b	12640 <pclose@plt+0x1920>
   12810:	bl	10b4c <__stack_chk_fail@plt>
   12814:	andeq	r0, r1, r0, lsl fp
   12818:	andeq	r0, r0, ip, asr #1
   1281c:	andeq	r0, r0, ip, asr #15
   12820:	andeq	r0, r0, r0, ror r6
   12824:	andeq	r0, r0, r4, ror r6
   12828:	andeq	r0, r1, r0, lsl #19
   1282c:	andeq	r0, r0, r0, asr #10
   12830:	push	{r4, r5, r6, lr}
   12834:	mov	r5, r0
   12838:	ldr	r0, [pc, #64]	; 12880 <pclose@plt+0x1b60>
   1283c:	bl	10bc4 <malloc@plt>
   12840:	subs	r4, r0, #0
   12844:	beq	12868 <pclose@plt+0x1b48>
   12848:	mov	r1, r5
   1284c:	mov	r2, #4096	; 0x1000
   12850:	add	r0, r4, #8
   12854:	bl	10ba0 <__strcpy_chk@plt>
   12858:	mov	r0, r4
   1285c:	bl	11ee4 <pclose@plt+0x11c4>
   12860:	cmp	r0, #0
   12864:	blt	12870 <pclose@plt+0x1b50>
   12868:	mov	r0, r4
   1286c:	pop	{r4, r5, r6, pc}
   12870:	mov	r0, r4
   12874:	bl	10b10 <free@plt>
   12878:	mov	r4, #0
   1287c:	b	12868 <pclose@plt+0x1b48>
   12880:	andeq	r1, r0, r8
   12884:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12888:	mov	r7, r0
   1288c:	ldr	r6, [pc, #72]	; 128dc <pclose@plt+0x1bbc>
   12890:	ldr	r5, [pc, #72]	; 128e0 <pclose@plt+0x1bc0>
   12894:	add	r6, pc, r6
   12898:	add	r5, pc, r5
   1289c:	sub	r6, r6, r5
   128a0:	mov	r8, r1
   128a4:	mov	r9, r2
   128a8:	bl	10acc <strstr@plt-0x20>
   128ac:	asrs	r6, r6, #2
   128b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   128b4:	mov	r4, #0
   128b8:	add	r4, r4, #1
   128bc:	ldr	r3, [r5], #4
   128c0:	mov	r2, r9
   128c4:	mov	r1, r8
   128c8:	mov	r0, r7
   128cc:	blx	r3
   128d0:	cmp	r6, r4
   128d4:	bne	128b8 <pclose@plt+0x1b98>
   128d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128dc:	andeq	r0, r1, r8, ror #12
   128e0:	andeq	r0, r1, r0, ror #12
   128e4:	bx	lr

Disassembly of section .fini:

000128e8 <.fini>:
   128e8:	push	{r3, lr}
   128ec:	pop	{r3, pc}
