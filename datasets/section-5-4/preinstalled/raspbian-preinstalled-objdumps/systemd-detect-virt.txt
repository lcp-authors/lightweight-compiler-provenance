
raspbian-preinstalled/systemd-detect-virt:     file format elf32-littlearm


Disassembly of section .init:

00000a30 <.init>:
 a30:	push	{r3, lr}
 a34:	bl	1364 <log_oom_internal@plt+0x7a0>
 a38:	pop	{r3, pc}

Disassembly of section .plt:

00000a3c <running_in_chroot@plt-0x14>:
 a3c:	push	{lr}		; (str lr, [sp, #-4]!)
 a40:	ldr	lr, [pc, #4]	; a4c <running_in_chroot@plt-0x4>
 a44:	add	lr, pc, lr
 a48:	ldr	pc, [lr, #8]!
 a4c:	strdeq	r1, [r1], -r4

00000a50 <running_in_chroot@plt>:
 a50:	add	ip, pc, #0, 12
 a54:	add	ip, ip, #69632	; 0x11000
 a58:	ldr	pc, [ip, #1268]!	; 0x4f4

00000a5c <version@plt>:
 a5c:	add	ip, pc, #0, 12
 a60:	add	ip, ip, #69632	; 0x11000
 a64:	ldr	pc, [ip, #1260]!	; 0x4ec

00000a68 <free@plt>:
 a68:	add	ip, pc, #0, 12
 a6c:	add	ip, ip, #69632	; 0x11000
 a70:	ldr	pc, [ip, #1252]!	; 0x4e4

00000a74 <log_open@plt>:
 a74:	add	ip, pc, #0, 12
 a78:	add	ip, ip, #69632	; 0x11000
 a7c:	ldr	pc, [ip, #1244]!	; 0x4dc

00000a80 <log_assert_failed_unreachable_realm@plt>:
 a80:	add	ip, pc, #0, 12
 a84:	add	ip, ip, #69632	; 0x11000
 a88:	ldr	pc, [ip, #1236]!	; 0x4d4

00000a8c <detect_vm@plt>:
 a8c:	add	ip, pc, #0, 12
 a90:	add	ip, ip, #69632	; 0x11000
 a94:	ldr	pc, [ip, #1228]!	; 0x4cc

00000a98 <ask_password_agent_close@plt>:
 a98:	add	ip, pc, #0, 12
 a9c:	add	ip, ip, #69632	; 0x11000
 aa0:	ldr	pc, [ip, #1220]!	; 0x4c4

00000aa4 <polkit_agent_close@plt>:
 aa4:	add	ip, pc, #0, 12
 aa8:	add	ip, ip, #69632	; 0x11000
 aac:	ldr	pc, [ip, #1212]!	; 0x4bc

00000ab0 <mac_selinux_finish@plt>:
 ab0:	add	ip, pc, #0, 12
 ab4:	add	ip, ip, #69632	; 0x11000
 ab8:	ldr	pc, [ip, #1204]!	; 0x4b4

00000abc <running_in_userns@plt>:
 abc:	add	ip, pc, #0, 12
 ac0:	add	ip, ip, #69632	; 0x11000
 ac4:	ldr	pc, [ip, #1196]!	; 0x4ac

00000ac8 <puts@plt>:
 ac8:	add	ip, pc, #0, 12
 acc:	add	ip, ip, #69632	; 0x11000
 ad0:	ldr	pc, [ip, #1188]!	; 0x4a4

00000ad4 <log_get_max_level_realm@plt>:
 ad4:	add	ip, pc, #0, 12
 ad8:	add	ip, ip, #69632	; 0x11000
 adc:	ldr	pc, [ip, #1180]!	; 0x49c

00000ae0 <abort@plt>:
 ae0:	add	ip, pc, #0, 12
 ae4:	add	ip, ip, #69632	; 0x11000
 ae8:	ldr	pc, [ip, #1172]!	; 0x494

00000aec <__overflow@plt>:
 aec:	add	ip, pc, #0, 12
 af0:	add	ip, ip, #69632	; 0x11000
 af4:	ldr	pc, [ip, #1164]!	; 0x48c

00000af8 <__stack_chk_fail@plt>:
 af8:	add	ip, pc, #0, 12
 afc:	add	ip, ip, #69632	; 0x11000
 b00:	ldr	pc, [ip, #1156]!	; 0x484

00000b04 <terminal_urlify_man@plt>:
 b04:	add	ip, pc, #0, 12
 b08:	add	ip, ip, #69632	; 0x11000
 b0c:	ldr	pc, [ip, #1148]!	; 0x47c

00000b10 <getopt_long@plt>:
 b10:	add	ip, pc, #0, 12
 b14:	add	ip, ip, #69632	; 0x11000
 b18:	ldr	pc, [ip, #1140]!	; 0x474

00000b1c <pager_close@plt>:
 b1c:	add	ip, pc, #0, 12
 b20:	add	ip, ip, #69632	; 0x11000
 b24:	ldr	pc, [ip, #1132]!	; 0x46c

00000b28 <flockfile@plt>:
 b28:	add	ip, pc, #0, 12
 b2c:	add	ip, ip, #69632	; 0x11000
 b30:	ldr	pc, [ip, #1124]!	; 0x464

00000b34 <detect_virtualization@plt>:
 b34:	add	ip, pc, #0, 12
 b38:	add	ip, ip, #69632	; 0x11000
 b3c:	ldr	pc, [ip, #1116]!	; 0x45c

00000b40 <detect_container@plt>:
 b40:	add	ip, pc, #0, 12
 b44:	add	ip, ip, #69632	; 0x11000
 b48:	ldr	pc, [ip, #1108]!	; 0x454

00000b4c <log_parse_environment_realm@plt>:
 b4c:	add	ip, pc, #0, 12
 b50:	add	ip, ip, #69632	; 0x11000
 b54:	ldr	pc, [ip, #1100]!	; 0x44c

00000b58 <virtualization_to_string@plt>:
 b58:	add	ip, pc, #0, 12
 b5c:	add	ip, ip, #69632	; 0x11000
 b60:	ldr	pc, [ip, #1092]!	; 0x444

00000b64 <fputs_unlocked@plt>:
 b64:	add	ip, pc, #0, 12
 b68:	add	ip, ip, #69632	; 0x11000
 b6c:	ldr	pc, [ip, #1084]!	; 0x43c

00000b70 <log_assert_failed_realm@plt>:
 b70:	add	ip, pc, #0, 12
 b74:	add	ip, ip, #69632	; 0x11000
 b78:	ldr	pc, [ip, #1076]!	; 0x434

00000b7c <log_internal_realm@plt>:
 b7c:	add	ip, pc, #0, 12
 b80:	add	ip, ip, #69632	; 0x11000
 b84:	ldr	pc, [ip, #1068]!	; 0x42c

00000b88 <funlockfile@plt>:
 b88:	add	ip, pc, #0, 12
 b8c:	add	ip, ip, #69632	; 0x11000
 b90:	ldr	pc, [ip, #1060]!	; 0x424

00000b94 <__libc_start_main@plt>:
 b94:	add	ip, pc, #0, 12
 b98:	add	ip, ip, #69632	; 0x11000
 b9c:	ldr	pc, [ip, #1052]!	; 0x41c

00000ba0 <__gmon_start__@plt>:
 ba0:	add	ip, pc, #0, 12
 ba4:	add	ip, ip, #69632	; 0x11000
 ba8:	ldr	pc, [ip, #1044]!	; 0x414

00000bac <__cxa_finalize@plt>:
 bac:	add	ip, pc, #0, 12
 bb0:	add	ip, ip, #69632	; 0x11000
 bb4:	ldr	pc, [ip, #1036]!	; 0x40c

00000bb8 <__printf_chk@plt>:
 bb8:	add	ip, pc, #0, 12
 bbc:	add	ip, ip, #69632	; 0x11000
 bc0:	ldr	pc, [ip, #1028]!	; 0x404

00000bc4 <log_oom_internal@plt>:
 bc4:	add	ip, pc, #0, 12
 bc8:	add	ip, ip, #69632	; 0x11000
 bcc:	ldr	pc, [ip, #1020]!	; 0x3fc

Disassembly of section .text:

00000bd0 <.text>:
     bd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     bd4:	sub	sp, sp, #28
     bd8:	ldr	r6, [pc, #1640]	; 1248 <log_oom_internal@plt+0x684>
     bdc:	ldr	r3, [pc, #1640]	; 124c <log_oom_internal@plt+0x688>
     be0:	add	r6, pc, r6
     be4:	mov	r5, r0
     be8:	ldr	r8, [r6, r3]
     bec:	mov	r0, #0
     bf0:	mov	r7, r1
     bf4:	ldr	r3, [r8]
     bf8:	str	r3, [sp, #20]
     bfc:	bl	b4c <log_parse_environment_realm@plt>
     c00:	bl	a74 <log_open@plt>
     c04:	cmp	r5, #0
     c08:	blt	fec <log_oom_internal@plt+0x428>
     c0c:	cmp	r7, #0
     c10:	beq	1014 <log_oom_internal@plt+0x450>
     c14:	ldr	sl, [pc, #1588]	; 1250 <log_oom_internal@plt+0x68c>
     c18:	ldr	r9, [pc, #1588]	; 1254 <log_oom_internal@plt+0x690>
     c1c:	ldr	fp, [pc, #1588]	; 1258 <log_oom_internal@plt+0x694>
     c20:	add	sl, pc, sl
     c24:	add	r9, pc, r9
     c28:	add	fp, pc, fp
     c2c:	mov	r4, #0
     c30:	str	r4, [sp]
     c34:	mov	r3, sl
     c38:	mov	r2, r9
     c3c:	mov	r1, r7
     c40:	mov	r0, r5
     c44:	bl	b10 <getopt_long@plt>
     c48:	cmp	r0, #0
     c4c:	blt	107c <log_oom_internal@plt+0x4b8>
     c50:	cmp	r0, #114	; 0x72
     c54:	beq	e70 <log_oom_internal@plt+0x2ac>
     c58:	bgt	c8c <log_oom_internal@plt+0xc8>
     c5c:	cmp	r0, #99	; 0x63
     c60:	beq	e7c <log_oom_internal@plt+0x2b8>
     c64:	ble	e14 <log_oom_internal@plt+0x250>
     c68:	cmp	r0, #104	; 0x68
     c6c:	beq	d24 <log_oom_internal@plt+0x160>
     c70:	cmp	r0, #113	; 0x71
     c74:	bne	11fc <log_oom_internal@plt+0x638>
     c78:	ldr	r3, [pc, #1500]	; 125c <log_oom_internal@plt+0x698>
     c7c:	mov	r2, #1
     c80:	add	r3, pc, r3
     c84:	strb	r2, [r3]
     c88:	b	c2c <log_oom_internal@plt+0x68>
     c8c:	cmp	r0, #256	; 0x100
     c90:	beq	e90 <log_oom_internal@plt+0x2cc>
     c94:	ble	df8 <log_oom_internal@plt+0x234>
     c98:	ldr	r3, [pc, #1472]	; 1260 <log_oom_internal@plt+0x69c>
     c9c:	cmp	r0, r3
     ca0:	beq	de4 <log_oom_internal@plt+0x220>
     ca4:	add	r3, r3, #1
     ca8:	cmp	r0, r3
     cac:	bne	11fc <log_oom_internal@plt+0x638>
     cb0:	ldr	r3, [pc, #1452]	; 1264 <log_oom_internal@plt+0x6a0>
     cb4:	mov	r9, #10
     cb8:	ldr	r5, [r6, r3]
     cbc:	ldr	r0, [r5]
     cc0:	bl	b28 <flockfile@plt>
     cc4:	ldr	r7, [r5]
     cc8:	b	ce8 <log_oom_internal@plt+0x124>
     ccc:	add	r2, r3, #1
     cd0:	str	r2, [r0, #20]
     cd4:	strb	r9, [r3]
     cd8:	ldr	r7, [r5]
     cdc:	add	r4, r4, #1
     ce0:	cmp	r4, #21
     ce4:	beq	e60 <log_oom_internal@plt+0x29c>
     ce8:	mov	r0, r4
     cec:	bl	b58 <virtualization_to_string@plt>
     cf0:	cmp	r0, #0
     cf4:	beq	cdc <log_oom_internal@plt+0x118>
     cf8:	mov	r1, r7
     cfc:	bl	b64 <fputs_unlocked@plt>
     d00:	ldr	r0, [r5]
     d04:	ldr	r3, [r0, #20]
     d08:	ldr	r2, [r0, #24]
     d0c:	cmp	r3, r2
     d10:	bcc	ccc <log_oom_internal@plt+0x108>
     d14:	mov	r1, #10
     d18:	bl	aec <__overflow@plt>
     d1c:	ldr	r7, [r5]
     d20:	b	cdc <log_oom_internal@plt+0x118>
     d24:	add	r2, sp, #24
     d28:	ldr	r1, [pc, #1336]	; 1268 <log_oom_internal@plt+0x6a4>
     d2c:	ldr	r0, [pc, #1336]	; 126c <log_oom_internal@plt+0x6a8>
     d30:	add	r1, pc, r1
     d34:	str	r4, [r2, #-8]!
     d38:	add	r0, pc, r0
     d3c:	bl	b04 <terminal_urlify_man@plt>
     d40:	cmp	r0, #0
     d44:	blt	104c <log_oom_internal@plt+0x488>
     d48:	ldr	r2, [pc, #1312]	; 1270 <log_oom_internal@plt+0x6ac>
     d4c:	ldr	r1, [pc, #1312]	; 1274 <log_oom_internal@plt+0x6b0>
     d50:	ldr	r3, [sp, #16]
     d54:	ldr	r2, [r6, r2]
     d58:	add	r1, pc, r1
     d5c:	mov	r0, #1
     d60:	ldr	r2, [r2]
     d64:	bl	bb8 <__printf_chk@plt>
     d68:	ldr	r0, [sp, #16]
     d6c:	bl	a68 <free@plt>
     d70:	ldr	r3, [pc, #1280]	; 1278 <log_oom_internal@plt+0x6b4>
     d74:	ldr	r5, [r6, r3]
     d78:	cmp	r5, #0
     d7c:	beq	e4c <log_oom_internal@plt+0x288>
     d80:	ldr	r3, [pc, #1268]	; 127c <log_oom_internal@plt+0x6b8>
     d84:	add	r5, r5, #3
     d88:	bic	r5, r5, #3
     d8c:	ldr	r6, [r6, r3]
     d90:	cmp	r5, r6
     d94:	bcs	e4c <log_oom_internal@plt+0x288>
     d98:	ldm	r5, {r0, r3}
     d9c:	add	r5, r5, #8
     da0:	blx	r3
     da4:	cmp	r5, r6
     da8:	bcc	d98 <log_oom_internal@plt+0x1d4>
     dac:	bl	a98 <ask_password_agent_close@plt>
     db0:	bl	aa4 <polkit_agent_close@plt>
     db4:	bl	ab0 <mac_selinux_finish@plt>
     db8:	bl	b1c <pager_close@plt>
     dbc:	cmp	r4, #0
     dc0:	bge	dc8 <log_oom_internal@plt+0x204>
     dc4:	mov	r4, #1
     dc8:	ldr	r2, [sp, #20]
     dcc:	ldr	r3, [r8]
     dd0:	mov	r0, r4
     dd4:	cmp	r2, r3
     dd8:	bne	1224 <log_oom_internal@plt+0x660>
     ddc:	add	sp, sp, #28
     de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     de4:	ldr	r3, [pc, #1172]	; 1280 <log_oom_internal@plt+0x6bc>
     de8:	mov	r2, #4
     dec:	add	r3, pc, r3
     df0:	str	r2, [r3, #4]
     df4:	b	c2c <log_oom_internal@plt+0x68>
     df8:	cmp	r0, #118	; 0x76
     dfc:	bne	11fc <log_oom_internal@plt+0x638>
     e00:	ldr	r3, [pc, #1148]	; 1284 <log_oom_internal@plt+0x6c0>
     e04:	mov	r2, #1
     e08:	add	r3, pc, r3
     e0c:	str	r2, [r3, #4]
     e10:	b	c2c <log_oom_internal@plt+0x68>
     e14:	cmp	r0, #63	; 0x3f
     e18:	mvneq	r4, #21
     e1c:	bne	11fc <log_oom_internal@plt+0x638>
     e20:	ldr	r3, [pc, #1104]	; 1278 <log_oom_internal@plt+0x6b4>
     e24:	ldr	r5, [r6, r3]
     e28:	cmp	r5, #0
     e2c:	beq	dac <log_oom_internal@plt+0x1e8>
     e30:	ldr	r3, [pc, #1092]	; 127c <log_oom_internal@plt+0x6b8>
     e34:	add	r5, r5, #3
     e38:	bic	r5, r5, #3
     e3c:	ldr	r6, [r6, r3]
     e40:	cmp	r5, r6
     e44:	bcc	d98 <log_oom_internal@plt+0x1d4>
     e48:	b	dac <log_oom_internal@plt+0x1e8>
     e4c:	bl	a98 <ask_password_agent_close@plt>
     e50:	bl	aa4 <polkit_agent_close@plt>
     e54:	bl	ab0 <mac_selinux_finish@plt>
     e58:	bl	b1c <pager_close@plt>
     e5c:	b	dc8 <log_oom_internal@plt+0x204>
     e60:	mov	r0, r7
     e64:	bl	b88 <funlockfile@plt>
     e68:	mov	r4, #0
     e6c:	b	d70 <log_oom_internal@plt+0x1ac>
     e70:	mov	r3, #3
     e74:	str	r3, [fp, #4]
     e78:	b	c2c <log_oom_internal@plt+0x68>
     e7c:	ldr	r3, [pc, #1028]	; 1288 <log_oom_internal@plt+0x6c4>
     e80:	mov	r2, #2
     e84:	add	r3, pc, r3
     e88:	str	r2, [r3, #4]
     e8c:	b	c2c <log_oom_internal@plt+0x68>
     e90:	bl	a5c <version@plt>
     e94:	mov	r4, r0
     e98:	cmp	r4, #0
     e9c:	ble	e20 <log_oom_internal@plt+0x25c>
     ea0:	ldr	r3, [pc, #996]	; 128c <log_oom_internal@plt+0x6c8>
     ea4:	add	r3, pc, r3
     ea8:	ldr	r3, [r3, #4]
     eac:	sub	r3, r3, #1
     eb0:	cmp	r3, #3
     eb4:	addls	pc, pc, r3, lsl #2
     eb8:	b	f94 <log_oom_internal@plt+0x3d0>
     ebc:	b	f3c <log_oom_internal@plt+0x378>
     ec0:	b	f10 <log_oom_internal@plt+0x34c>
     ec4:	b	ee4 <log_oom_internal@plt+0x320>
     ec8:	b	ecc <log_oom_internal@plt+0x308>
     ecc:	bl	abc <running_in_userns@plt>
     ed0:	subs	r4, r0, #0
     ed4:	blt	10ec <log_oom_internal@plt+0x528>
     ed8:	moveq	r4, #1
     edc:	movne	r4, #0
     ee0:	b	d70 <log_oom_internal@plt+0x1ac>
     ee4:	bl	a50 <running_in_chroot@plt>
     ee8:	subs	r4, r0, #0
     eec:	bge	ed8 <log_oom_internal@plt+0x314>
     ef0:	mov	r0, #0
     ef4:	bl	ad4 <log_get_max_level_realm@plt>
     ef8:	cmp	r0, #2
     efc:	bgt	1184 <log_oom_internal@plt+0x5c0>
     f00:	rsb	r4, r4, #0
     f04:	uxtb	r4, r4
     f08:	rsb	r4, r4, #0
     f0c:	b	e20 <log_oom_internal@plt+0x25c>
     f10:	bl	b40 <detect_container@plt>
     f14:	subs	r4, r0, #0
     f18:	blt	1138 <log_oom_internal@plt+0x574>
     f1c:	ldr	r3, [pc, #876]	; 1290 <log_oom_internal@plt+0x6cc>
     f20:	add	r3, pc, r3
     f24:	ldrb	r3, [r3]
     f28:	cmp	r3, #0
     f2c:	beq	103c <log_oom_internal@plt+0x478>
     f30:	clz	r4, r4
     f34:	lsr	r4, r4, #5
     f38:	b	d70 <log_oom_internal@plt+0x1ac>
     f3c:	bl	a8c <detect_vm@plt>
     f40:	subs	r4, r0, #0
     f44:	bge	f1c <log_oom_internal@plt+0x358>
     f48:	mov	r0, #0
     f4c:	bl	ad4 <log_get_max_level_realm@plt>
     f50:	cmp	r0, #2
     f54:	ble	f00 <log_oom_internal@plt+0x33c>
     f58:	ldr	r2, [pc, #820]	; 1294 <log_oom_internal@plt+0x6d0>
     f5c:	ldr	r3, [pc, #820]	; 1298 <log_oom_internal@plt+0x6d4>
     f60:	add	r2, pc, r2
     f64:	str	r2, [sp, #4]
     f68:	add	r3, pc, r3
     f6c:	ldr	r2, [pc, #808]	; 129c <log_oom_internal@plt+0x6d8>
     f70:	add	r3, r3, #32
     f74:	mov	r1, r4
     f78:	str	r3, [sp]
     f7c:	add	r2, pc, r2
     f80:	mov	r3, #142	; 0x8e
     f84:	mov	r0, #3
     f88:	bl	b7c <log_internal_realm@plt>
     f8c:	mov	r4, r0
     f90:	b	e20 <log_oom_internal@plt+0x25c>
     f94:	bl	b34 <detect_virtualization@plt>
     f98:	subs	r4, r0, #0
     f9c:	bge	f1c <log_oom_internal@plt+0x358>
     fa0:	mov	r0, #0
     fa4:	bl	ad4 <log_get_max_level_realm@plt>
     fa8:	cmp	r0, #2
     fac:	ble	f00 <log_oom_internal@plt+0x33c>
     fb0:	ldr	r2, [pc, #744]	; 12a0 <log_oom_internal@plt+0x6dc>
     fb4:	ldr	r3, [pc, #744]	; 12a4 <log_oom_internal@plt+0x6e0>
     fb8:	add	r2, pc, r2
     fbc:	str	r2, [sp, #4]
     fc0:	add	r3, pc, r3
     fc4:	ldr	r2, [pc, #732]	; 12a8 <log_oom_internal@plt+0x6e4>
     fc8:	add	r3, r3, #32
     fcc:	mov	r1, r4
     fd0:	str	r3, [sp]
     fd4:	add	r2, pc, r2
     fd8:	mov	r3, #167	; 0xa7
     fdc:	mov	r0, #3
     fe0:	bl	b7c <log_internal_realm@plt>
     fe4:	mov	r4, r0
     fe8:	b	e20 <log_oom_internal@plt+0x25c>
     fec:	ldr	r2, [pc, #696]	; 12ac <log_oom_internal@plt+0x6e8>
     ff0:	ldr	r1, [pc, #696]	; 12b0 <log_oom_internal@plt+0x6ec>
     ff4:	add	r2, pc, r2
     ff8:	str	r2, [sp]
     ffc:	ldr	r2, [pc, #688]	; 12b4 <log_oom_internal@plt+0x6f0>
    1000:	mov	r3, #72	; 0x48
    1004:	add	r2, pc, r2
    1008:	add	r1, pc, r1
    100c:	mov	r0, #0
    1010:	bl	b70 <log_assert_failed_realm@plt>
    1014:	ldr	r3, [pc, #668]	; 12b8 <log_oom_internal@plt+0x6f4>
    1018:	ldr	r2, [pc, #668]	; 12bc <log_oom_internal@plt+0x6f8>
    101c:	ldr	r1, [pc, #668]	; 12c0 <log_oom_internal@plt+0x6fc>
    1020:	add	r3, pc, r3
    1024:	str	r3, [sp]
    1028:	mov	r0, r7
    102c:	mov	r3, #73	; 0x49
    1030:	add	r2, pc, r2
    1034:	add	r1, pc, r1
    1038:	bl	b70 <log_assert_failed_realm@plt>
    103c:	mov	r0, r4
    1040:	bl	b58 <virtualization_to_string@plt>
    1044:	bl	ac8 <puts@plt>
    1048:	b	f30 <log_oom_internal@plt+0x36c>
    104c:	ldr	r3, [pc, #624]	; 12c4 <log_oom_internal@plt+0x700>
    1050:	ldr	r1, [pc, #624]	; 12c8 <log_oom_internal@plt+0x704>
    1054:	add	r3, pc, r3
    1058:	mov	r0, r4
    105c:	add	r3, r3, #12
    1060:	mov	r2, #30
    1064:	add	r1, pc, r1
    1068:	bl	bc4 <log_oom_internal@plt>
    106c:	mov	r4, r0
    1070:	ldr	r0, [sp, #16]
    1074:	bl	a68 <free@plt>
    1078:	b	e98 <log_oom_internal@plt+0x2d4>
    107c:	ldr	r3, [pc, #584]	; 12cc <log_oom_internal@plt+0x708>
    1080:	ldr	r3, [r6, r3]
    1084:	ldr	r3, [r3]
    1088:	cmp	r5, r3
    108c:	ble	ea0 <log_oom_internal@plt+0x2dc>
    1090:	mov	r0, r4
    1094:	bl	ad4 <log_get_max_level_realm@plt>
    1098:	cmp	r0, #2
    109c:	ble	11c0 <log_oom_internal@plt+0x5fc>
    10a0:	ldr	r1, [pc, #456]	; 1270 <log_oom_internal@plt+0x6ac>
    10a4:	ldr	r3, [pc, #548]	; 12d0 <log_oom_internal@plt+0x70c>
    10a8:	ldr	r2, [pc, #548]	; 12d4 <log_oom_internal@plt+0x710>
    10ac:	ldr	r1, [r6, r1]
    10b0:	add	r3, pc, r3
    10b4:	add	r2, pc, r2
    10b8:	add	r3, r3, #20
    10bc:	str	r3, [sp]
    10c0:	ldr	r1, [r1]
    10c4:	str	r2, [sp, #4]
    10c8:	ldr	r2, [pc, #520]	; 12d8 <log_oom_internal@plt+0x714>
    10cc:	str	r1, [sp, #8]
    10d0:	mov	r3, #119	; 0x77
    10d4:	add	r2, pc, r2
    10d8:	mov	r1, #1073741846	; 0x40000016
    10dc:	mov	r0, #3
    10e0:	bl	b7c <log_internal_realm@plt>
    10e4:	mov	r4, r0
    10e8:	b	e98 <log_oom_internal@plt+0x2d4>
    10ec:	mov	r0, #0
    10f0:	bl	ad4 <log_get_max_level_realm@plt>
    10f4:	cmp	r0, #2
    10f8:	ble	f00 <log_oom_internal@plt+0x33c>
    10fc:	ldr	r2, [pc, #472]	; 12dc <log_oom_internal@plt+0x718>
    1100:	ldr	r3, [pc, #472]	; 12e0 <log_oom_internal@plt+0x71c>
    1104:	add	r2, pc, r2
    1108:	str	r2, [sp, #4]
    110c:	add	r3, pc, r3
    1110:	ldr	r2, [pc, #460]	; 12e4 <log_oom_internal@plt+0x720>
    1114:	add	r3, r3, #32
    1118:	mov	r1, r4
    111c:	str	r3, [sp]
    1120:	add	r2, pc, r2
    1124:	mov	r3, #160	; 0xa0
    1128:	mov	r0, #3
    112c:	bl	b7c <log_internal_realm@plt>
    1130:	mov	r4, r0
    1134:	b	e20 <log_oom_internal@plt+0x25c>
    1138:	mov	r0, #0
    113c:	bl	ad4 <log_get_max_level_realm@plt>
    1140:	cmp	r0, #2
    1144:	ble	f00 <log_oom_internal@plt+0x33c>
    1148:	ldr	r2, [pc, #408]	; 12e8 <log_oom_internal@plt+0x724>
    114c:	ldr	r3, [pc, #408]	; 12ec <log_oom_internal@plt+0x728>
    1150:	add	r2, pc, r2
    1154:	str	r2, [sp, #4]
    1158:	add	r3, pc, r3
    115c:	ldr	r2, [pc, #396]	; 12f0 <log_oom_internal@plt+0x72c>
    1160:	add	r3, r3, #32
    1164:	mov	r1, r4
    1168:	str	r3, [sp]
    116c:	add	r2, pc, r2
    1170:	mov	r3, #148	; 0x94
    1174:	mov	r0, #3
    1178:	bl	b7c <log_internal_realm@plt>
    117c:	mov	r4, r0
    1180:	b	e20 <log_oom_internal@plt+0x25c>
    1184:	ldr	r2, [pc, #360]	; 12f4 <log_oom_internal@plt+0x730>
    1188:	ldr	r3, [pc, #360]	; 12f8 <log_oom_internal@plt+0x734>
    118c:	add	r2, pc, r2
    1190:	str	r2, [sp, #4]
    1194:	add	r3, pc, r3
    1198:	ldr	r2, [pc, #348]	; 12fc <log_oom_internal@plt+0x738>
    119c:	add	r3, r3, #32
    11a0:	mov	r1, r4
    11a4:	str	r3, [sp]
    11a8:	add	r2, pc, r2
    11ac:	mov	r3, #154	; 0x9a
    11b0:	mov	r0, #3
    11b4:	bl	b7c <log_internal_realm@plt>
    11b8:	mov	r4, r0
    11bc:	b	e20 <log_oom_internal@plt+0x25c>
    11c0:	ldr	r3, [pc, #176]	; 1278 <log_oom_internal@plt+0x6b4>
    11c4:	ldr	r3, [r6, r3]
    11c8:	cmp	r3, #0
    11cc:	beq	1230 <log_oom_internal@plt+0x66c>
    11d0:	ldr	r2, [pc, #164]	; 127c <log_oom_internal@plt+0x6b8>
    11d4:	add	r3, r3, #3
    11d8:	bic	r5, r3, #3
    11dc:	ldr	r6, [r6, r2]
    11e0:	cmp	r5, r6
    11e4:	bcc	1228 <log_oom_internal@plt+0x664>
    11e8:	bl	a98 <ask_password_agent_close@plt>
    11ec:	bl	aa4 <polkit_agent_close@plt>
    11f0:	bl	ab0 <mac_selinux_finish@plt>
    11f4:	bl	b1c <pager_close@plt>
    11f8:	b	dc4 <log_oom_internal@plt+0x200>
    11fc:	ldr	r2, [pc, #252]	; 1300 <log_oom_internal@plt+0x73c>
    1200:	ldr	r1, [pc, #252]	; 1304 <log_oom_internal@plt+0x740>
    1204:	add	r2, pc, r2
    1208:	str	r2, [sp]
    120c:	ldr	r2, [pc, #244]	; 1308 <log_oom_internal@plt+0x744>
    1210:	mov	r3, #113	; 0x71
    1214:	add	r2, pc, r2
    1218:	add	r1, pc, r1
    121c:	mov	r0, #0
    1220:	bl	a80 <log_assert_failed_unreachable_realm@plt>
    1224:	bl	af8 <__stack_chk_fail@plt>
    1228:	mvn	r4, #21
    122c:	b	d98 <log_oom_internal@plt+0x1d4>
    1230:	bl	a98 <ask_password_agent_close@plt>
    1234:	mov	r4, #1
    1238:	bl	aa4 <polkit_agent_close@plt>
    123c:	bl	ab0 <mac_selinux_finish@plt>
    1240:	bl	b1c <pager_close@plt>
    1244:	b	dc8 <log_oom_internal@plt+0x204>
    1248:	andeq	r1, r1, r8, asr r3
    124c:	andeq	r0, r0, ip, lsl #1
    1250:	andeq	r1, r1, r8, ror r1
    1254:			; <UNDEFINED> instruction: 0x00000bb4
    1258:	ldrdeq	r1, [r1], -r8
    125c:	andeq	r1, r1, r0, lsl #7
    1260:	andeq	r0, r0, r1, lsl #2
    1264:	andeq	r0, r0, r4, lsr #1
    1268:	andeq	r0, r0, r8, lsl r8
    126c:	andeq	r0, r0, r4, lsl r8
    1270:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    1274:	andeq	r0, r0, r8, lsl #16
    1278:	muleq	r0, r8, r0
    127c:	muleq	r0, ip, r0
    1280:	andeq	r1, r1, r4, lsl r2
    1284:	strdeq	r1, [r1], -r8
    1288:	andeq	r1, r1, ip, ror r1
    128c:	andeq	r1, r1, ip, asr r1
    1290:	andeq	r1, r1, r0, ror #1
    1294:	muleq	r0, r8, r8
    1298:	andeq	r0, r0, r4, lsl #11
    129c:	muleq	r0, r4, r5
    12a0:	ldrdeq	r0, [r0], -r8
    12a4:	andeq	r0, r0, ip, lsr #10
    12a8:	andeq	r0, r0, ip, lsr r5
    12ac:	strdeq	r0, [r0], -r8
    12b0:	andeq	r0, r0, ip, lsr #10
    12b4:	andeq	r0, r0, ip, lsl #10
    12b8:	andeq	r0, r0, ip, asr #9
    12bc:	andeq	r0, r0, r0, ror #9
    12c0:	andeq	r0, r0, ip, lsl #10
    12c4:	muleq	r0, r8, r4
    12c8:	andeq	r0, r0, ip, lsr #9
    12cc:	muleq	r0, r0, r0
    12d0:	andeq	r0, r0, ip, lsr r4
    12d4:	andeq	r0, r0, ip, lsr #14
    12d8:	andeq	r0, r0, ip, lsr r4
    12dc:	andeq	r0, r0, r4, ror #14
    12e0:	andeq	r0, r0, r0, ror #7
    12e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    12e8:	andeq	r0, r0, r4, asr #13
    12ec:	muleq	r0, r4, r3
    12f0:	andeq	r0, r0, r4, lsr #7
    12f4:	andeq	r0, r0, ip, lsr #13
    12f8:	andeq	r0, r0, r8, asr r3
    12fc:	andeq	r0, r0, r8, ror #6
    1300:	andeq	r0, r0, r8, ror #5
    1304:	andeq	r0, r0, ip, lsr #11
    1308:	strdeq	r0, [r0], -ip
    130c:	mov	fp, #0
    1310:	mov	lr, #0
    1314:	pop	{r1}		; (ldr r1, [sp], #4)
    1318:	mov	r2, sp
    131c:	push	{r2}		; (str r2, [sp, #-4]!)
    1320:	push	{r0}		; (str r0, [sp, #-4]!)
    1324:	ldr	sl, [pc, #40]	; 1354 <log_oom_internal@plt+0x790>
    1328:	add	r3, pc, #36	; 0x24
    132c:	add	sl, sl, r3
    1330:	ldr	ip, [pc, #32]	; 1358 <log_oom_internal@plt+0x794>
    1334:	ldr	ip, [sl, ip]
    1338:	push	{ip}		; (str ip, [sp, #-4]!)
    133c:	ldr	r3, [pc, #24]	; 135c <log_oom_internal@plt+0x798>
    1340:	ldr	r3, [sl, r3]
    1344:	ldr	r0, [pc, #20]	; 1360 <log_oom_internal@plt+0x79c>
    1348:	ldr	r0, [sl, r0]
    134c:	bl	b94 <__libc_start_main@plt>
    1350:	bl	ae0 <abort@plt>
    1354:	andeq	r0, r1, ip, ror #23
    1358:	andeq	r0, r0, ip, lsr #1
    135c:	andeq	r0, r0, r0, lsr #1
    1360:	muleq	r0, r4, r0
    1364:	ldr	r3, [pc, #20]	; 1380 <log_oom_internal@plt+0x7bc>
    1368:	ldr	r2, [pc, #20]	; 1384 <log_oom_internal@plt+0x7c0>
    136c:	add	r3, pc, r3
    1370:	ldr	r2, [r3, r2]
    1374:	cmp	r2, #0
    1378:	bxeq	lr
    137c:	b	ba0 <__gmon_start__@plt>
    1380:	andeq	r0, r1, ip, asr #23
    1384:	strheq	r0, [r0], -r4
    1388:	ldr	r0, [pc, #44]	; 13bc <log_oom_internal@plt+0x7f8>
    138c:	ldr	r3, [pc, #44]	; 13c0 <log_oom_internal@plt+0x7fc>
    1390:	add	r0, pc, r0
    1394:	add	r3, pc, r3
    1398:	cmp	r3, r0
    139c:	ldr	r3, [pc, #32]	; 13c4 <log_oom_internal@plt+0x800>
    13a0:	add	r3, pc, r3
    13a4:	bxeq	lr
    13a8:	ldr	r2, [pc, #24]	; 13c8 <log_oom_internal@plt+0x804>
    13ac:	ldr	r3, [r3, r2]
    13b0:	cmp	r3, #0
    13b4:	bxeq	lr
    13b8:	bx	r3
    13bc:	andeq	r0, r1, ip, ror #24
    13c0:	andeq	r0, r1, r8, ror #24
    13c4:	muleq	r1, r8, fp
    13c8:	andeq	r0, r0, r8, lsr #1
    13cc:	ldr	r0, [pc, #56]	; 140c <log_oom_internal@plt+0x848>
    13d0:	ldr	r3, [pc, #56]	; 1410 <log_oom_internal@plt+0x84c>
    13d4:	add	r0, pc, r0
    13d8:	add	r3, pc, r3
    13dc:	sub	r1, r3, r0
    13e0:	ldr	r3, [pc, #44]	; 1414 <log_oom_internal@plt+0x850>
    13e4:	asr	r1, r1, #2
    13e8:	add	r3, pc, r3
    13ec:	add	r1, r1, r1, lsr #31
    13f0:	asrs	r1, r1, #1
    13f4:	bxeq	lr
    13f8:	ldr	r2, [pc, #24]	; 1418 <log_oom_internal@plt+0x854>
    13fc:	ldr	r3, [r3, r2]
    1400:	cmp	r3, #0
    1404:	bxeq	lr
    1408:	bx	r3
    140c:	andeq	r0, r1, r8, lsr #24
    1410:	andeq	r0, r1, r4, lsr #24
    1414:	andeq	r0, r1, r0, asr fp
    1418:	strheq	r0, [r0], -r8
    141c:	ldr	r3, [pc, #76]	; 1470 <log_oom_internal@plt+0x8ac>
    1420:	ldr	r2, [pc, #76]	; 1474 <log_oom_internal@plt+0x8b0>
    1424:	add	r3, pc, r3
    1428:	add	r2, pc, r2
    142c:	ldrb	r3, [r3]
    1430:	cmp	r3, #0
    1434:	bxne	lr
    1438:	ldr	r3, [pc, #56]	; 1478 <log_oom_internal@plt+0x8b4>
    143c:	push	{r4, lr}
    1440:	ldr	r3, [r2, r3]
    1444:	cmp	r3, #0
    1448:	beq	1458 <log_oom_internal@plt+0x894>
    144c:	ldr	r3, [pc, #40]	; 147c <log_oom_internal@plt+0x8b8>
    1450:	ldr	r0, [pc, r3]
    1454:	bl	bac <__cxa_finalize@plt>
    1458:	bl	1388 <log_oom_internal@plt+0x7c4>
    145c:	ldr	r3, [pc, #28]	; 1480 <log_oom_internal@plt+0x8bc>
    1460:	mov	r2, #1
    1464:	add	r3, pc, r3
    1468:	strb	r2, [r3]
    146c:	pop	{r4, pc}
    1470:	ldrdeq	r0, [r1], -r8
    1474:	andeq	r0, r1, r0, lsl fp
    1478:	strheq	r0, [r0], -ip
    147c:	andeq	r0, r1, r8, lsr #23
    1480:	muleq	r1, r8, fp
    1484:	b	13cc <log_oom_internal@plt+0x808>
    1488:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    148c:	mov	r7, r0
    1490:	ldr	r6, [pc, #72]	; 14e0 <log_oom_internal@plt+0x91c>
    1494:	ldr	r5, [pc, #72]	; 14e4 <log_oom_internal@plt+0x920>
    1498:	add	r6, pc, r6
    149c:	add	r5, pc, r5
    14a0:	sub	r6, r6, r5
    14a4:	mov	r8, r1
    14a8:	mov	r9, r2
    14ac:	bl	a30 <running_in_chroot@plt-0x20>
    14b0:	asrs	r6, r6, #2
    14b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
    14b8:	mov	r4, #0
    14bc:	add	r4, r4, #1
    14c0:	ldr	r3, [r5], #4
    14c4:	mov	r2, r9
    14c8:	mov	r1, r8
    14cc:	mov	r0, r7
    14d0:	blx	r3
    14d4:	cmp	r6, r4
    14d8:	bne	14bc <log_oom_internal@plt+0x8f8>
    14dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    14e0:	strdeq	r0, [r1], -ip
    14e4:	strdeq	r0, [r1], -r4
    14e8:	bx	lr

Disassembly of section .fini:

000014ec <.fini>:
    14ec:	push	{r3, lr}
    14f0:	pop	{r3, pc}
