
raspbian-preinstalled/xdriinfo:     file format elf32-littlearm


Disassembly of section .init:

00010710 <_init@@Base>:
   10710:	push	{r3, lr}
   10714:	bl	10cd4 <strcmp@plt+0x4fc>
   10718:	pop	{r3, pc}

Disassembly of section .plt:

0001071c <abort@plt-0x14>:
   1071c:	push	{lr}		; (str lr, [sp, #-4]!)
   10720:	ldr	lr, [pc, #4]	; 1072c <_init@@Base+0x1c>
   10724:	add	lr, pc, lr
   10728:	ldr	pc, [lr, #8]!
   1072c:	ldrdeq	r1, [r1], -r4

00010730 <abort@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2260]!	; 0x8d4

0001073c <__libc_start_main@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2252]!	; 0x8cc

00010748 <__gmon_start__@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2244]!	; 0x8c4

00010754 <__isoc99_sscanf@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2236]!	; 0x8bc

00010760 <glXGetProcAddressARB@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2228]!	; 0x8b4

0001076c <__printf_chk@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2220]!	; 0x8ac

00010778 <putchar@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2212]!	; 0x8a4

00010784 <XOpenDisplay@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2204]!	; 0x89c

00010790 <isatty@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2196]!	; 0x894

0001079c <fwrite@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2188]!	; 0x88c

000107a8 <glXGetClientString@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2180]!	; 0x884

000107b4 <__stack_chk_fail@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2172]!	; 0x87c

000107c0 <__fprintf_chk@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2164]!	; 0x874

000107cc <puts@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2156]!	; 0x86c

000107d8 <strcmp@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2148]!	; 0x864

Disassembly of section .text:

000107e4 <.text>:
   107e4:	ldr	r2, [pc, #1088]	; 10c2c <strcmp@plt+0x454>
   107e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107ec:	sub	sp, sp, #28
   107f0:	ldr	r2, [r2]
   107f4:	mov	r3, #0
   107f8:	mov	r6, r0
   107fc:	ldr	r0, [pc, #1068]	; 10c30 <strcmp@plt+0x458>
   10800:	str	r3, [sp, #12]
   10804:	str	r3, [sp, #16]
   10808:	mov	r7, r1
   1080c:	str	r2, [sp, #20]
   10810:	bl	10760 <glXGetProcAddressARB@plt>
   10814:	ldr	sl, [pc, #1048]	; 10c34 <strcmp@plt+0x45c>
   10818:	str	r0, [sl]
   1081c:	ldr	r0, [pc, #1044]	; 10c38 <strcmp@plt+0x460>
   10820:	bl	10760 <glXGetProcAddressARB@plt>
   10824:	ldr	r3, [sl]
   10828:	cmp	r3, #0
   1082c:	clz	r8, r0
   10830:	lsr	r8, r8, #5
   10834:	moveq	r8, #1
   10838:	cmp	r8, #0
   1083c:	str	r0, [sl, #4]
   10840:	bne	109a4 <strcmp@plt+0x1cc>
   10844:	cmp	r6, #1
   10848:	movgt	fp, #1
   1084c:	ldrgt	r9, [pc, #1000]	; 10c3c <strcmp@plt+0x464>
   10850:	bgt	108c0 <strcmp@plt+0xe8>
   10854:	b	10bb4 <strcmp@plt+0x3dc>
   10858:	ldr	r1, [pc, #992]	; 10c40 <strcmp@plt+0x468>
   1085c:	mov	r0, r5
   10860:	bl	107d8 <strcmp@plt>
   10864:	cmp	r0, #0
   10868:	beq	1092c <strcmp@plt+0x154>
   1086c:	ldr	r1, [pc, #976]	; 10c44 <strcmp@plt+0x46c>
   10870:	mov	r0, r5
   10874:	bl	107d8 <strcmp@plt>
   10878:	cmp	r0, #0
   1087c:	beq	10998 <strcmp@plt+0x1c0>
   10880:	ldr	r1, [pc, #960]	; 10c48 <strcmp@plt+0x470>
   10884:	mov	r0, r5
   10888:	bl	107d8 <strcmp@plt>
   1088c:	cmp	r0, #0
   10890:	bne	10b94 <strcmp@plt+0x3bc>
   10894:	add	r3, sp, #12
   10898:	mov	r8, #3
   1089c:	add	fp, fp, #1
   108a0:	cmp	r6, fp
   108a4:	beq	108ec <strcmp@plt+0x114>
   108a8:	add	r4, r7, r4
   108ac:	add	fp, fp, #1
   108b0:	ldr	r2, [r4, #4]
   108b4:	cmp	r6, fp
   108b8:	str	r2, [r3]
   108bc:	ble	1093c <strcmp@plt+0x164>
   108c0:	ldr	r5, [r7, fp, lsl #2]
   108c4:	mov	r1, r9
   108c8:	mov	r0, r5
   108cc:	bl	107d8 <strcmp@plt>
   108d0:	lsl	r4, fp, #2
   108d4:	cmp	r0, #0
   108d8:	bne	10858 <strcmp@plt+0x80>
   108dc:	add	fp, fp, #1
   108e0:	cmp	r6, fp
   108e4:	add	r3, sp, #16
   108e8:	bne	108a8 <strcmp@plt+0xd0>
   108ec:	sub	r6, r6, #-1073741823	; 0xc0000001
   108f0:	ldr	r4, [pc, #852]	; 10c4c <strcmp@plt+0x474>
   108f4:	ldr	r2, [r7, r6, lsl #2]
   108f8:	ldr	r3, [r7]
   108fc:	str	r2, [sp]
   10900:	ldr	r2, [pc, #840]	; 10c50 <strcmp@plt+0x478>
   10904:	ldr	r0, [r4]
   10908:	mov	r1, #1
   1090c:	bl	107c0 <__fprintf_chk@plt>
   10910:	ldr	r3, [r4]
   10914:	ldr	r2, [pc, #824]	; 10c54 <strcmp@plt+0x47c>
   10918:	mov	r1, #1
   1091c:	ldr	r0, [pc, #820]	; 10c58 <strcmp@plt+0x480>
   10920:	bl	1079c <fwrite@plt>
   10924:	mov	r4, #1
   10928:	b	109c0 <strcmp@plt+0x1e8>
   1092c:	add	fp, fp, #1
   10930:	cmp	r6, fp
   10934:	mov	r8, #1
   10938:	bgt	108c0 <strcmp@plt+0xe8>
   1093c:	sub	r3, r8, #2
   10940:	cmp	r3, #1
   10944:	bls	10ac4 <strcmp@plt+0x2ec>
   10948:	ldr	r0, [sp, #16]
   1094c:	bl	10784 <XOpenDisplay@plt>
   10950:	subs	r5, r0, #0
   10954:	ldrne	r6, [r5, #136]	; 0x88
   10958:	beq	10a3c <strcmp@plt+0x264>
   1095c:	mov	r1, #3
   10960:	mov	r0, r5
   10964:	bl	107a8 <glXGetClientString@plt>
   10968:	cmp	r8, #2
   1096c:	beq	10b5c <strcmp@plt+0x384>
   10970:	cmp	r8, #3
   10974:	beq	10a5c <strcmp@plt+0x284>
   10978:	cmp	r8, #1
   1097c:	moveq	r2, r6
   10980:	ldreq	r1, [pc, #724]	; 10c5c <strcmp@plt+0x484>
   10984:	beq	10a9c <strcmp@plt+0x2c4>
   10988:	ldr	r8, [pc, #720]	; 10c60 <strcmp@plt+0x488>
   1098c:	ldr	r7, [pc, #720]	; 10c64 <strcmp@plt+0x48c>
   10990:	mov	r4, #0
   10994:	b	109f0 <strcmp@plt+0x218>
   10998:	add	r3, sp, #12
   1099c:	mov	r8, #2
   109a0:	b	1089c <strcmp@plt+0xc4>
   109a4:	ldr	r3, [pc, #672]	; 10c4c <strcmp@plt+0x474>
   109a8:	mov	r2, #18
   109ac:	mov	r1, #1
   109b0:	ldr	r3, [r3]
   109b4:	ldr	r0, [pc, #684]	; 10c68 <strcmp@plt+0x490>
   109b8:	bl	1079c <fwrite@plt>
   109bc:	mov	r4, #1
   109c0:	ldr	r3, [pc, #612]	; 10c2c <strcmp@plt+0x454>
   109c4:	ldr	r2, [sp, #20]
   109c8:	mov	r0, r4
   109cc:	ldr	r3, [r3]
   109d0:	cmp	r2, r3
   109d4:	bne	10c28 <strcmp@plt+0x450>
   109d8:	add	sp, sp, #28
   109dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109e0:	mov	r1, r7
   109e4:	mov	r0, #1
   109e8:	bl	1076c <__printf_chk@plt>
   109ec:	add	r4, r4, #1
   109f0:	cmp	r4, r6
   109f4:	bge	10abc <strcmp@plt+0x2e4>
   109f8:	ldr	r3, [sl]
   109fc:	mov	r1, r4
   10a00:	mov	r0, r5
   10a04:	blx	r3
   10a08:	mov	r2, r4
   10a0c:	subs	r3, r0, #0
   10a10:	bne	109e0 <strcmp@plt+0x208>
   10a14:	mov	r1, r8
   10a18:	mov	r0, #1
   10a1c:	bl	1076c <__printf_chk@plt>
   10a20:	b	109ec <strcmp@plt+0x214>
   10a24:	ldr	r0, [sp, #16]
   10a28:	bl	10784 <XOpenDisplay@plt>
   10a2c:	subs	r5, r0, #0
   10a30:	movne	r8, #3
   10a34:	ldrne	r6, [r5, #136]	; 0x88
   10a38:	bne	10b34 <strcmp@plt+0x35c>
   10a3c:	ldr	r3, [pc, #520]	; 10c4c <strcmp@plt+0x474>
   10a40:	mov	r2, #29
   10a44:	mov	r1, #1
   10a48:	ldr	r3, [r3]
   10a4c:	ldr	r0, [pc, #536]	; 10c6c <strcmp@plt+0x494>
   10a50:	bl	1079c <fwrite@plt>
   10a54:	mov	r4, #1
   10a58:	b	109c0 <strcmp@plt+0x1e8>
   10a5c:	ldr	r1, [sp, #8]
   10a60:	cmn	r1, #1
   10a64:	ldreq	r4, [sp, #12]
   10a68:	beq	10a7c <strcmp@plt+0x2a4>
   10a6c:	mov	r0, r5
   10a70:	ldr	r3, [sl]
   10a74:	blx	r3
   10a78:	mov	r4, r0
   10a7c:	cmp	r4, #0
   10a80:	beq	10b74 <strcmp@plt+0x39c>
   10a84:	ldr	r3, [sl, #4]
   10a88:	mov	r0, r4
   10a8c:	blx	r3
   10a90:	subs	r2, r0, #0
   10a94:	beq	10bec <strcmp@plt+0x414>
   10a98:	ldr	r1, [pc, #464]	; 10c70 <strcmp@plt+0x498>
   10a9c:	mov	r0, #1
   10aa0:	bl	1076c <__printf_chk@plt>
   10aa4:	mov	r0, #1
   10aa8:	bl	10790 <isatty@plt>
   10aac:	cmp	r0, #0
   10ab0:	beq	10abc <strcmp@plt+0x2e4>
   10ab4:	mov	r0, #10
   10ab8:	bl	10778 <putchar@plt>
   10abc:	mov	r4, #0
   10ac0:	b	109c0 <strcmp@plt+0x1e8>
   10ac4:	ldr	r5, [sp, #12]
   10ac8:	add	r2, sp, #8
   10acc:	mov	r0, r5
   10ad0:	ldr	r1, [pc, #412]	; 10c74 <strcmp@plt+0x49c>
   10ad4:	bl	10754 <__isoc99_sscanf@plt>
   10ad8:	cmp	r0, #1
   10adc:	mov	r4, r0
   10ae0:	beq	10b14 <strcmp@plt+0x33c>
   10ae4:	mvn	r3, #0
   10ae8:	cmp	r8, #2
   10aec:	str	r3, [sp, #8]
   10af0:	bne	10a24 <strcmp@plt+0x24c>
   10af4:	ldr	r1, [pc, #336]	; 10c4c <strcmp@plt+0x474>
   10af8:	mov	r3, r5
   10afc:	ldr	r2, [pc, #372]	; 10c78 <strcmp@plt+0x4a0>
   10b00:	ldr	r0, [r1]
   10b04:	mov	r1, #1
   10b08:	bl	107c0 <__fprintf_chk@plt>
   10b0c:	mov	r4, #1
   10b10:	b	109c0 <strcmp@plt+0x1e8>
   10b14:	ldr	r3, [sp, #8]
   10b18:	cmp	r3, #0
   10b1c:	blt	10c0c <strcmp@plt+0x434>
   10b20:	ldr	r0, [sp, #16]
   10b24:	bl	10784 <XOpenDisplay@plt>
   10b28:	subs	r5, r0, #0
   10b2c:	ldrne	r6, [r5, #136]	; 0x88
   10b30:	beq	10a3c <strcmp@plt+0x264>
   10b34:	ldr	r3, [sp, #8]
   10b38:	cmp	r3, r6
   10b3c:	blt	1095c <strcmp@plt+0x184>
   10b40:	ldr	r1, [pc, #260]	; 10c4c <strcmp@plt+0x474>
   10b44:	ldr	r2, [pc, #304]	; 10c7c <strcmp@plt+0x4a4>
   10b48:	mov	r4, #1
   10b4c:	ldr	r0, [r1]
   10b50:	mov	r1, #1
   10b54:	bl	107c0 <__fprintf_chk@plt>
   10b58:	b	109c0 <strcmp@plt+0x1e8>
   10b5c:	ldr	r3, [sl]
   10b60:	mov	r0, r5
   10b64:	ldr	r1, [sp, #8]
   10b68:	blx	r3
   10b6c:	subs	r2, r0, #0
   10b70:	bne	10a98 <strcmp@plt+0x2c0>
   10b74:	ldr	r1, [pc, #208]	; 10c4c <strcmp@plt+0x474>
   10b78:	ldr	r3, [sp, #8]
   10b7c:	ldr	r2, [pc, #252]	; 10c80 <strcmp@plt+0x4a8>
   10b80:	ldr	r0, [r1]
   10b84:	mov	r1, #1
   10b88:	bl	107c0 <__fprintf_chk@plt>
   10b8c:	mov	r4, #1
   10b90:	b	109c0 <strcmp@plt+0x1e8>
   10b94:	ldr	r1, [pc, #232]	; 10c84 <strcmp@plt+0x4ac>
   10b98:	mov	r0, r5
   10b9c:	bl	107d8 <strcmp@plt>
   10ba0:	subs	r4, r0, #0
   10ba4:	bne	10bd4 <strcmp@plt+0x3fc>
   10ba8:	ldr	r0, [pc, #216]	; 10c88 <strcmp@plt+0x4b0>
   10bac:	bl	107cc <puts@plt>
   10bb0:	b	109c0 <strcmp@plt+0x1e8>
   10bb4:	ldr	r0, [sp, #16]
   10bb8:	bl	10784 <XOpenDisplay@plt>
   10bbc:	subs	r5, r0, #0
   10bc0:	beq	10a3c <strcmp@plt+0x264>
   10bc4:	mov	r1, #3
   10bc8:	ldr	r6, [r5, #136]	; 0x88
   10bcc:	bl	107a8 <glXGetClientString@plt>
   10bd0:	b	10988 <strcmp@plt+0x1b0>
   10bd4:	ldr	r4, [pc, #112]	; 10c4c <strcmp@plt+0x474>
   10bd8:	str	r5, [sp]
   10bdc:	ldr	r2, [pc, #168]	; 10c8c <strcmp@plt+0x4b4>
   10be0:	ldr	r3, [r7]
   10be4:	ldr	r0, [r4]
   10be8:	b	10908 <strcmp@plt+0x130>
   10bec:	ldr	r1, [pc, #88]	; 10c4c <strcmp@plt+0x474>
   10bf0:	mov	r3, r4
   10bf4:	ldr	r2, [pc, #148]	; 10c90 <strcmp@plt+0x4b8>
   10bf8:	ldr	r0, [r1]
   10bfc:	mov	r1, #1
   10c00:	bl	107c0 <__fprintf_chk@plt>
   10c04:	mov	r4, #1
   10c08:	b	109c0 <strcmp@plt+0x1e8>
   10c0c:	ldr	r1, [pc, #56]	; 10c4c <strcmp@plt+0x474>
   10c10:	mov	r3, r5
   10c14:	ldr	r2, [pc, #120]	; 10c94 <strcmp@plt+0x4bc>
   10c18:	ldr	r0, [r1]
   10c1c:	mov	r1, r4
   10c20:	bl	107c0 <__fprintf_chk@plt>
   10c24:	b	109c0 <strcmp@plt+0x1e8>
   10c28:	bl	107b4 <__stack_chk_fail@plt>
   10c2c:	strdeq	r1, [r2], -r8
   10c30:	andeq	r0, r1, r4, ror pc
   10c34:	andeq	r2, r2, r0, rrx
   10c38:	andeq	r0, r1, r8, lsl #31
   10c3c:			; <UNDEFINED> instruction: 0x00010fb0
   10c40:			; <UNDEFINED> instruction: 0x00010fbc
   10c44:	andeq	r0, r1, r8, asr #31
   10c48:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10c4c:	andeq	r2, r2, r8, asr r0
   10c50:	andeq	r1, r1, r4, lsl r0
   10c54:	andeq	r0, r0, r5, asr r1
   10c58:	andeq	r0, r1, ip, lsl lr
   10c5c:	strheq	r1, [r1], -ip
   10c60:	andeq	r1, r1, r8, asr #2
   10c64:	andeq	r1, r1, r8, lsr r1
   10c68:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   10c6c:	andeq	r1, r1, r8, ror r0
   10c70:	strdeq	r1, [r1], -r0
   10c74:	andeq	r1, r1, r4, lsr r0
   10c78:	andeq	r1, r1, r8, lsr r0
   10c7c:	muleq	r1, r8, r0
   10c80:	andeq	r1, r1, r0, asr #1
   10c84:	ldrdeq	r0, [r1], -r8
   10c88:	andeq	r0, r1, r4, ror #31
   10c8c:	strdeq	r0, [r1], -r4
   10c90:	strdeq	r1, [r1], -r4
   10c94:	andeq	r1, r1, r8, asr r0
   10c98:	mov	fp, #0
   10c9c:	mov	lr, #0
   10ca0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ca4:	mov	r2, sp
   10ca8:	push	{r2}		; (str r2, [sp, #-4]!)
   10cac:	push	{r0}		; (str r0, [sp, #-4]!)
   10cb0:	ldr	ip, [pc, #16]	; 10cc8 <strcmp@plt+0x4f0>
   10cb4:	push	{ip}		; (str ip, [sp, #-4]!)
   10cb8:	ldr	r0, [pc, #12]	; 10ccc <strcmp@plt+0x4f4>
   10cbc:	ldr	r3, [pc, #12]	; 10cd0 <strcmp@plt+0x4f8>
   10cc0:	bl	1073c <__libc_start_main@plt>
   10cc4:	bl	10730 <abort@plt>
   10cc8:	andeq	r0, r1, ip, lsl #28
   10ccc:	andeq	r0, r1, r4, ror #15
   10cd0:	andeq	r0, r1, ip, lsr #27
   10cd4:	ldr	r3, [pc, #20]	; 10cf0 <strcmp@plt+0x518>
   10cd8:	ldr	r2, [pc, #20]	; 10cf4 <strcmp@plt+0x51c>
   10cdc:	add	r3, pc, r3
   10ce0:	ldr	r2, [r3, r2]
   10ce4:	cmp	r2, #0
   10ce8:	bxeq	lr
   10cec:	b	10748 <__gmon_start__@plt>
   10cf0:	andeq	r1, r1, ip, lsl r3
   10cf4:	andeq	r0, r0, r8, asr #32
   10cf8:	ldr	r0, [pc, #24]	; 10d18 <strcmp@plt+0x540>
   10cfc:	ldr	r3, [pc, #24]	; 10d1c <strcmp@plt+0x544>
   10d00:	cmp	r3, r0
   10d04:	bxeq	lr
   10d08:	ldr	r3, [pc, #16]	; 10d20 <strcmp@plt+0x548>
   10d0c:	cmp	r3, #0
   10d10:	bxeq	lr
   10d14:	bx	r3
   10d18:	andeq	r2, r2, r4, asr r0
   10d1c:	andeq	r2, r2, r4, asr r0
   10d20:	andeq	r0, r0, r0
   10d24:	ldr	r0, [pc, #36]	; 10d50 <strcmp@plt+0x578>
   10d28:	ldr	r1, [pc, #36]	; 10d54 <strcmp@plt+0x57c>
   10d2c:	sub	r1, r1, r0
   10d30:	asr	r1, r1, #2
   10d34:	add	r1, r1, r1, lsr #31
   10d38:	asrs	r1, r1, #1
   10d3c:	bxeq	lr
   10d40:	ldr	r3, [pc, #16]	; 10d58 <strcmp@plt+0x580>
   10d44:	cmp	r3, #0
   10d48:	bxeq	lr
   10d4c:	bx	r3
   10d50:	andeq	r2, r2, r4, asr r0
   10d54:	andeq	r2, r2, r4, asr r0
   10d58:	andeq	r0, r0, r0
   10d5c:	push	{r4, lr}
   10d60:	ldr	r4, [pc, #24]	; 10d80 <strcmp@plt+0x5a8>
   10d64:	ldrb	r3, [r4]
   10d68:	cmp	r3, #0
   10d6c:	popne	{r4, pc}
   10d70:	bl	10cf8 <strcmp@plt+0x520>
   10d74:	mov	r3, #1
   10d78:	strb	r3, [r4]
   10d7c:	pop	{r4, pc}
   10d80:	andeq	r2, r2, ip, asr r0
   10d84:	b	10d24 <strcmp@plt+0x54c>
   10d88:	ldr	r3, [pc, #16]	; 10da0 <strcmp@plt+0x5c8>
   10d8c:	ldr	r2, [pc, #16]	; 10da4 <strcmp@plt+0x5cc>
   10d90:	mov	r1, #1
   10d94:	ldr	r3, [r3]
   10d98:	ldr	r0, [pc, #8]	; 10da8 <strcmp@plt+0x5d0>
   10d9c:	b	1079c <fwrite@plt>
   10da0:	andeq	r2, r2, r8, asr r0
   10da4:	andeq	r0, r0, r5, asr r1
   10da8:	andeq	r0, r1, ip, lsl lr
   10dac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10db0:	mov	r7, r0
   10db4:	ldr	r6, [pc, #72]	; 10e04 <strcmp@plt+0x62c>
   10db8:	ldr	r5, [pc, #72]	; 10e08 <strcmp@plt+0x630>
   10dbc:	add	r6, pc, r6
   10dc0:	add	r5, pc, r5
   10dc4:	sub	r6, r6, r5
   10dc8:	mov	r8, r1
   10dcc:	mov	r9, r2
   10dd0:	bl	10710 <_init@@Base>
   10dd4:	asrs	r6, r6, #2
   10dd8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ddc:	mov	r4, #0
   10de0:	add	r4, r4, #1
   10de4:	ldr	r3, [r5], #4
   10de8:	mov	r2, r9
   10dec:	mov	r1, r8
   10df0:	mov	r0, r7
   10df4:	blx	r3
   10df8:	cmp	r6, r4
   10dfc:	bne	10de0 <strcmp@plt+0x608>
   10e00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e04:	andeq	r1, r1, r0, lsr r1
   10e08:	andeq	r1, r1, r8, lsr #2
   10e0c:	bx	lr

Disassembly of section .fini:

00010e10 <_fini@@Base>:
   10e10:	push	{r3, lr}
   10e14:	pop	{r3, pc}
