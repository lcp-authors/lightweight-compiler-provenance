
raspbian-preinstalled/hostname:     file format elf32-littlearm


Disassembly of section .init:

00010a60 <.init>:
   10a60:	push	{r3, lr}
   10a64:	bl	11058 <abort@plt+0x3e0>
   10a68:	pop	{r3, pc}

Disassembly of section .plt:

00010a6c <calloc@plt-0x14>:
   10a6c:	push	{lr}		; (str lr, [sp, #-4]!)
   10a70:	ldr	lr, [pc, #4]	; 10a7c <calloc@plt-0x4>
   10a74:	add	lr, pc, lr
   10a78:	ldr	pc, [lr, #8]!
   10a7c:	andeq	r2, r1, r8, asr #9

00010a80 <calloc@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #73728	; 0x12000
   10a88:	ldr	pc, [ip, #1224]!	; 0x4c8

00010a8c <strcmp@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #73728	; 0x12000
   10a94:	ldr	pc, [ip, #1216]!	; 0x4c0

00010a98 <hstrerror@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #73728	; 0x12000
   10aa0:	ldr	pc, [ip, #1208]!	; 0x4b8

00010aa4 <fopen@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #73728	; 0x12000
   10aac:	ldr	pc, [ip, #1200]!	; 0x4b0

00010ab0 <getifaddrs@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #73728	; 0x12000
   10ab8:	ldr	pc, [ip, #1192]!	; 0x4a8

00010abc <strchrnul@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #73728	; 0x12000
   10ac4:	ldr	pc, [ip, #1184]!	; 0x4a0

00010ac8 <free@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #73728	; 0x12000
   10ad0:	ldr	pc, [ip, #1176]!	; 0x498

00010ad4 <gai_strerror@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #73728	; 0x12000
   10adc:	ldr	pc, [ip, #1168]!	; 0x490

00010ae0 <fgets@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #73728	; 0x12000
   10ae8:	ldr	pc, [ip, #1160]!	; 0x488

00010aec <freeifaddrs@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #73728	; 0x12000
   10af4:	ldr	pc, [ip, #1152]!	; 0x480

00010af8 <getdomainname@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #73728	; 0x12000
   10b00:	ldr	pc, [ip, #1144]!	; 0x478

00010b04 <strdup@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #73728	; 0x12000
   10b0c:	ldr	pc, [ip, #1136]!	; 0x470

00010b10 <__stack_chk_fail@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #73728	; 0x12000
   10b18:	ldr	pc, [ip, #1128]!	; 0x468

00010b1c <rindex@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #73728	; 0x12000
   10b24:	ldr	pc, [ip, #1120]!	; 0x460

00010b28 <realloc@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #73728	; 0x12000
   10b30:	ldr	pc, [ip, #1112]!	; 0x458

00010b34 <err@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #73728	; 0x12000
   10b3c:	ldr	pc, [ip, #1104]!	; 0x450

00010b40 <fwrite@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #73728	; 0x12000
   10b48:	ldr	pc, [ip, #1096]!	; 0x448

00010b4c <gethostname@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #73728	; 0x12000
   10b54:	ldr	pc, [ip, #1088]!	; 0x440

00010b58 <puts@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #73728	; 0x12000
   10b60:	ldr	pc, [ip, #1080]!	; 0x438

00010b64 <malloc@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #73728	; 0x12000
   10b6c:	ldr	pc, [ip, #1072]!	; 0x430

00010b70 <__libc_start_main@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #73728	; 0x12000
   10b78:	ldr	pc, [ip, #1064]!	; 0x428

00010b7c <strerror@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #73728	; 0x12000
   10b84:	ldr	pc, [ip, #1056]!	; 0x420

00010b88 <__fxstat@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #73728	; 0x12000
   10b90:	ldr	pc, [ip, #1048]!	; 0x418

00010b94 <__h_errno_location@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #73728	; 0x12000
   10b9c:	ldr	pc, [ip, #1040]!	; 0x410

00010ba0 <sethostname@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #73728	; 0x12000
   10ba8:	ldr	pc, [ip, #1032]!	; 0x408

00010bac <__gmon_start__@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #73728	; 0x12000
   10bb4:	ldr	pc, [ip, #1024]!	; 0x400

00010bb8 <getopt_long@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #73728	; 0x12000
   10bc0:	ldr	pc, [ip, #1016]!	; 0x3f8

00010bc4 <__ctype_b_loc@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #73728	; 0x12000
   10bcc:	ldr	pc, [ip, #1008]!	; 0x3f0

00010bd0 <exit@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #73728	; 0x12000
   10bd8:	ldr	pc, [ip, #1000]!	; 0x3e8

00010bdc <strlen@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #73728	; 0x12000
   10be4:	ldr	pc, [ip, #992]!	; 0x3e0

00010be8 <strchr@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #73728	; 0x12000
   10bf0:	ldr	pc, [ip, #984]!	; 0x3d8

00010bf4 <__errno_location@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #73728	; 0x12000
   10bfc:	ldr	pc, [ip, #976]!	; 0x3d0

00010c00 <putchar@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #73728	; 0x12000
   10c08:	ldr	pc, [ip, #968]!	; 0x3c8

00010c0c <__printf_chk@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #73728	; 0x12000
   10c14:	ldr	pc, [ip, #960]!	; 0x3c0

00010c18 <fileno@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #73728	; 0x12000
   10c20:	ldr	pc, [ip, #952]!	; 0x3b8

00010c24 <memchr@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #73728	; 0x12000
   10c2c:	ldr	pc, [ip, #944]!	; 0x3b0

00010c30 <fclose@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #73728	; 0x12000
   10c38:	ldr	pc, [ip, #936]!	; 0x3a8

00010c3c <setdomainname@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #73728	; 0x12000
   10c44:	ldr	pc, [ip, #928]!	; 0x3a0

00010c48 <errx@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #920]!	; 0x398

00010c54 <getnameinfo@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #912]!	; 0x390

00010c60 <getaddrinfo@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #904]!	; 0x388

00010c6c <gethostbyname@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #896]!	; 0x380

00010c78 <abort@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00010c84 <.text>:
   10c84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c88:	mov	r4, r1
   10c8c:	ldr	r6, [r1]
   10c90:	sub	sp, sp, #12
   10c94:	mov	r1, #47	; 0x2f
   10c98:	mov	r5, r0
   10c9c:	mov	r0, r6
   10ca0:	bl	10b1c <rindex@plt>
   10ca4:	ldr	r3, [pc, #820]	; 10fe0 <abort@plt+0x368>
   10ca8:	ldr	r1, [pc, #820]	; 10fe4 <abort@plt+0x36c>
   10cac:	cmp	r0, #0
   10cb0:	addne	r6, r0, #1
   10cb4:	mov	r0, r6
   10cb8:	str	r6, [r3]
   10cbc:	bl	10a8c <strcmp@plt>
   10cc0:	cmp	r0, #0
   10cc4:	moveq	r8, #1
   10cc8:	beq	10ce4 <abort@plt+0x6c>
   10ccc:	ldr	r1, [pc, #788]	; 10fe8 <abort@plt+0x370>
   10cd0:	mov	r0, r6
   10cd4:	bl	10a8c <strcmp@plt>
   10cd8:	cmp	r0, #0
   10cdc:	moveq	r8, #6
   10ce0:	bne	10e84 <abort@plt+0x20c>
   10ce4:	mov	r9, #0
   10ce8:	ldr	r7, [pc, #764]	; 10fec <abort@plt+0x374>
   10cec:	ldr	r6, [pc, #764]	; 10ff0 <abort@plt+0x378>
   10cf0:	ldr	fp, [pc, #764]	; 10ff4 <abort@plt+0x37c>
   10cf4:	mov	sl, r9
   10cf8:	mov	r3, #0
   10cfc:	str	r3, [sp]
   10d00:	mov	r2, r6
   10d04:	mov	r3, r7
   10d08:	mov	r1, r4
   10d0c:	mov	r0, r5
   10d10:	bl	10bb8 <getopt_long@plt>
   10d14:	cmn	r0, #1
   10d18:	beq	10eb8 <abort@plt+0x240>
   10d1c:	sub	r0, r0, #63	; 0x3f
   10d20:	cmp	r0, #58	; 0x3a
   10d24:	ldrls	pc, [pc, r0, lsl #2]
   10d28:	b	10fbc <abort@plt+0x344>
   10d2c:	andeq	r0, r1, r8, asr #31
   10d30:			; <UNDEFINED> instruction: 0x00010fbc
   10d34:	andeq	r0, r1, ip, ror lr
   10d38:			; <UNDEFINED> instruction: 0x00010fbc
   10d3c:			; <UNDEFINED> instruction: 0x00010fbc
   10d40:			; <UNDEFINED> instruction: 0x00010fbc
   10d44:			; <UNDEFINED> instruction: 0x00010fbc
   10d48:	andeq	r0, r1, r4, ror lr
   10d4c:			; <UNDEFINED> instruction: 0x00010fbc
   10d50:			; <UNDEFINED> instruction: 0x00010fbc
   10d54:	andeq	r0, r1, ip, ror #28
   10d58:			; <UNDEFINED> instruction: 0x00010fbc
   10d5c:			; <UNDEFINED> instruction: 0x00010fbc
   10d60:			; <UNDEFINED> instruction: 0x00010fbc
   10d64:			; <UNDEFINED> instruction: 0x00010fbc
   10d68:			; <UNDEFINED> instruction: 0x00010fbc
   10d6c:			; <UNDEFINED> instruction: 0x00010fbc
   10d70:			; <UNDEFINED> instruction: 0x00010fbc
   10d74:			; <UNDEFINED> instruction: 0x00010fbc
   10d78:			; <UNDEFINED> instruction: 0x00010fbc
   10d7c:			; <UNDEFINED> instruction: 0x00010fbc
   10d80:			; <UNDEFINED> instruction: 0x00010fbc
   10d84:			; <UNDEFINED> instruction: 0x00010fbc
   10d88:	andeq	r0, r1, r0, asr lr
   10d8c:			; <UNDEFINED> instruction: 0x00010fbc
   10d90:			; <UNDEFINED> instruction: 0x00010fbc
   10d94:			; <UNDEFINED> instruction: 0x00010fbc
   10d98:			; <UNDEFINED> instruction: 0x00010fbc
   10d9c:			; <UNDEFINED> instruction: 0x00010fbc
   10da0:			; <UNDEFINED> instruction: 0x00010fbc
   10da4:			; <UNDEFINED> instruction: 0x00010fbc
   10da8:			; <UNDEFINED> instruction: 0x00010fbc
   10dac:			; <UNDEFINED> instruction: 0x00010fbc
   10db0:			; <UNDEFINED> instruction: 0x00010fbc
   10db4:	andeq	r0, r1, r8, asr #28
   10db8:	andeq	r0, r1, r0, asr #28
   10dbc:			; <UNDEFINED> instruction: 0x00010fbc
   10dc0:	andeq	r0, r1, r8, lsr lr
   10dc4:			; <UNDEFINED> instruction: 0x00010fbc
   10dc8:	andeq	r0, r1, r0, lsr lr
   10dcc:			; <UNDEFINED> instruction: 0x00010fbc
   10dd0:	andeq	r0, r1, r8, asr #31
   10dd4:	andeq	r0, r1, r8, lsr #28
   10dd8:			; <UNDEFINED> instruction: 0x00010fbc
   10ddc:			; <UNDEFINED> instruction: 0x00010fbc
   10de0:			; <UNDEFINED> instruction: 0x00010fbc
   10de4:			; <UNDEFINED> instruction: 0x00010fbc
   10de8:			; <UNDEFINED> instruction: 0x00010fbc
   10dec:			; <UNDEFINED> instruction: 0x00010fbc
   10df0:			; <UNDEFINED> instruction: 0x00010fbc
   10df4:			; <UNDEFINED> instruction: 0x00010fbc
   10df8:			; <UNDEFINED> instruction: 0x00010fbc
   10dfc:	andeq	r0, r1, r0, lsr #28
   10e00:			; <UNDEFINED> instruction: 0x00010fbc
   10e04:			; <UNDEFINED> instruction: 0x00010fbc
   10e08:			; <UNDEFINED> instruction: 0x00010fbc
   10e0c:			; <UNDEFINED> instruction: 0x00010fbc
   10e10:			; <UNDEFINED> instruction: 0x00010fbc
   10e14:	andeq	r0, r1, r8, lsl lr
   10e18:	mov	r8, #7
   10e1c:	b	10cf8 <abort@plt+0x80>
   10e20:	mov	r8, #3
   10e24:	b	10cf8 <abort@plt+0x80>
   10e28:	mov	r8, #5
   10e2c:	b	10cf8 <abort@plt+0x80>
   10e30:	mov	r8, #2
   10e34:	b	10cf8 <abort@plt+0x80>
   10e38:	mov	r8, #1
   10e3c:	b	10cf8 <abort@plt+0x80>
   10e40:	mov	r9, #1
   10e44:	b	10cf8 <abort@plt+0x80>
   10e48:	mov	r8, #4
   10e4c:	b	10cf8 <abort@plt+0x80>
   10e50:	ldr	r2, [pc, #416]	; 10ff8 <abort@plt+0x380>
   10e54:	ldr	r1, [pc, #416]	; 10ffc <abort@plt+0x384>
   10e58:	mov	r0, #1
   10e5c:	bl	10c0c <__printf_chk@plt>
   10e60:	mov	r0, #0
   10e64:	add	sp, sp, #12
   10e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e6c:	mov	r8, #9
   10e70:	b	10cf8 <abort@plt+0x80>
   10e74:	ldr	sl, [fp]
   10e78:	b	10cf8 <abort@plt+0x80>
   10e7c:	mov	r8, #8
   10e80:	b	10cf8 <abort@plt+0x80>
   10e84:	ldr	r1, [pc, #372]	; 11000 <abort@plt+0x388>
   10e88:	mov	r0, r6
   10e8c:	bl	10a8c <strcmp@plt>
   10e90:	cmp	r0, #0
   10e94:	moveq	r8, #7
   10e98:	beq	10ce4 <abort@plt+0x6c>
   10e9c:	mov	r0, r6
   10ea0:	ldr	r1, [pc, #348]	; 11004 <abort@plt+0x38c>
   10ea4:	bl	10a8c <strcmp@plt>
   10ea8:	cmp	r0, #0
   10eac:	movne	r8, #0
   10eb0:	moveq	r8, #7
   10eb4:	b	10ce4 <abort@plt+0x6c>
   10eb8:	cmp	sl, #0
   10ebc:	beq	10f44 <abort@plt+0x2cc>
   10ec0:	mov	r0, sl
   10ec4:	mov	r1, r9
   10ec8:	bl	118c8 <abort@plt+0xc50>
   10ecc:	cmp	r9, #0
   10ed0:	mov	r6, r0
   10ed4:	beq	10f90 <abort@plt+0x318>
   10ed8:	cmp	r0, #0
   10edc:	beq	10eec <abort@plt+0x274>
   10ee0:	ldrb	r3, [r0]
   10ee4:	cmp	r3, #0
   10ee8:	bne	10f30 <abort@plt+0x2b8>
   10eec:	mov	r0, r6
   10ef0:	bl	10ac8 <free@plt>
   10ef4:	bl	1121c <abort@plt+0x5a4>
   10ef8:	ldrb	r3, [r0]
   10efc:	mov	r6, r0
   10f00:	cmp	r3, #0
   10f04:	beq	10f18 <abort@plt+0x2a0>
   10f08:	ldr	r1, [pc, #248]	; 11008 <abort@plt+0x390>
   10f0c:	bl	10a8c <strcmp@plt>
   10f10:	cmp	r0, #0
   10f14:	bne	10f30 <abort@plt+0x2b8>
   10f18:	ldr	r3, [pc, #236]	; 1100c <abort@plt+0x394>
   10f1c:	ldm	r3!, {r0, r1}
   10f20:	ldrh	r3, [r3]
   10f24:	str	r0, [r6]
   10f28:	str	r1, [r6, #4]
   10f2c:	strh	r3, [r6, #8]
   10f30:	ldr	r3, [pc, #216]	; 11010 <abort@plt+0x398>
   10f34:	ldr	r3, [r3]
   10f38:	cmp	r3, r5
   10f3c:	bge	10f78 <abort@plt+0x300>
   10f40:	b	10fbc <abort@plt+0x344>
   10f44:	ldr	r7, [pc, #196]	; 11010 <abort@plt+0x398>
   10f48:	ldr	r3, [r7]
   10f4c:	cmp	r5, r3
   10f50:	ble	10fa8 <abort@plt+0x330>
   10f54:	ldr	r0, [r4, r3, lsl #2]
   10f58:	bl	10b04 <strdup@plt>
   10f5c:	subs	r6, r0, #0
   10f60:	beq	10fd4 <abort@plt+0x35c>
   10f64:	ldr	r3, [r7]
   10f68:	add	r3, r3, #1
   10f6c:	cmp	r3, r5
   10f70:	str	r3, [r7]
   10f74:	blt	10fbc <abort@plt+0x344>
   10f78:	mov	r0, r8
   10f7c:	mov	r1, r6
   10f80:	bl	113cc <abort@plt+0x754>
   10f84:	mov	r0, r6
   10f88:	bl	10ac8 <free@plt>
   10f8c:	b	10e60 <abort@plt+0x1e8>
   10f90:	ldr	r7, [pc, #120]	; 11010 <abort@plt+0x398>
   10f94:	ldr	r3, [r7]
   10f98:	cmp	r3, r5
   10f9c:	blt	10fb4 <abort@plt+0x33c>
   10fa0:	cmp	r0, #0
   10fa4:	bne	10f78 <abort@plt+0x300>
   10fa8:	mov	r0, r8
   10fac:	bl	11534 <abort@plt+0x8bc>
   10fb0:	b	10e60 <abort@plt+0x1e8>
   10fb4:	cmp	r0, #0
   10fb8:	beq	10f54 <abort@plt+0x2dc>
   10fbc:	ldr	r3, [pc, #80]	; 11014 <abort@plt+0x39c>
   10fc0:	ldr	r0, [r3]
   10fc4:	bl	112c8 <abort@plt+0x650>
   10fc8:	ldr	r3, [pc, #72]	; 11018 <abort@plt+0x3a0>
   10fcc:	ldr	r0, [r3]
   10fd0:	bl	112c8 <abort@plt+0x650>
   10fd4:	mov	r1, r6
   10fd8:	mov	r0, #1
   10fdc:	bl	10b34 <err@plt>
   10fe0:	andeq	r3, r2, r4, lsr #8
   10fe4:			; <UNDEFINED> instruction: 0x000121b4
   10fe8:	andeq	r2, r1, r4, asr #3
   10fec:	andeq	r1, r1, r0, lsr sl
   10ff0:	andeq	r2, r1, r8, lsl #4
   10ff4:	andeq	r3, r2, r8, lsl r0
   10ff8:	strdeq	r2, [r1], -r0
   10ffc:	strdeq	r2, [r1], -r8
   11000:	ldrdeq	r2, [r1], -r0
   11004:	andeq	r2, r1, r0, ror #3
   11008:	andeq	r1, r1, r0, lsr #22
   1100c:	andeq	r2, r1, r8, lsl r2
   11010:	andeq	r3, r2, r8
   11014:	andeq	r3, r2, r0, lsl r0
   11018:	andeq	r3, r2, r4, lsl r0
   1101c:	mov	fp, #0
   11020:	mov	lr, #0
   11024:	pop	{r1}		; (ldr r1, [sp], #4)
   11028:	mov	r2, sp
   1102c:	push	{r2}		; (str r2, [sp, #-4]!)
   11030:	push	{r0}		; (str r0, [sp, #-4]!)
   11034:	ldr	ip, [pc, #16]	; 1104c <abort@plt+0x3d4>
   11038:	push	{ip}		; (str ip, [sp, #-4]!)
   1103c:	ldr	r0, [pc, #12]	; 11050 <abort@plt+0x3d8>
   11040:	ldr	r3, [pc, #12]	; 11054 <abort@plt+0x3dc>
   11044:	bl	10b70 <__libc_start_main@plt>
   11048:	bl	10c78 <abort@plt>
   1104c:	andeq	r1, r1, r0, lsr #20
   11050:	andeq	r0, r1, r4, lsl #25
   11054:	andeq	r1, r1, r0, asr #19
   11058:	ldr	r3, [pc, #20]	; 11074 <abort@plt+0x3fc>
   1105c:	ldr	r2, [pc, #20]	; 11078 <abort@plt+0x400>
   11060:	add	r3, pc, r3
   11064:	ldr	r2, [r3, r2]
   11068:	cmp	r2, #0
   1106c:	bxeq	lr
   11070:	b	10bac <__gmon_start__@plt>
   11074:	ldrdeq	r1, [r1], -ip
   11078:	strheq	r0, [r0], -r8
   1107c:	ldr	r0, [pc, #24]	; 1109c <abort@plt+0x424>
   11080:	ldr	r3, [pc, #24]	; 110a0 <abort@plt+0x428>
   11084:	cmp	r3, r0
   11088:	bxeq	lr
   1108c:	ldr	r3, [pc, #16]	; 110a4 <abort@plt+0x42c>
   11090:	cmp	r3, #0
   11094:	bxeq	lr
   11098:	bx	r3
   1109c:	andeq	r3, r2, r8
   110a0:	andeq	r3, r2, r8
   110a4:	andeq	r0, r0, r0
   110a8:	ldr	r0, [pc, #36]	; 110d4 <abort@plt+0x45c>
   110ac:	ldr	r1, [pc, #36]	; 110d8 <abort@plt+0x460>
   110b0:	sub	r1, r1, r0
   110b4:	asr	r1, r1, #2
   110b8:	add	r1, r1, r1, lsr #31
   110bc:	asrs	r1, r1, #1
   110c0:	bxeq	lr
   110c4:	ldr	r3, [pc, #16]	; 110dc <abort@plt+0x464>
   110c8:	cmp	r3, #0
   110cc:	bxeq	lr
   110d0:	bx	r3
   110d4:	andeq	r3, r2, r8
   110d8:	andeq	r3, r2, r8
   110dc:	andeq	r0, r0, r0
   110e0:	push	{r4, lr}
   110e4:	ldr	r4, [pc, #24]	; 11104 <abort@plt+0x48c>
   110e8:	ldrb	r3, [r4]
   110ec:	cmp	r3, #0
   110f0:	popne	{r4, pc}
   110f4:	bl	1107c <abort@plt+0x404>
   110f8:	mov	r3, #1
   110fc:	strb	r3, [r4]
   11100:	pop	{r4, pc}
   11104:	andeq	r3, r2, ip, lsl r0
   11108:	b	110a8 <abort@plt+0x430>
   1110c:	push	{r4, lr}
   11110:	ldr	r1, [pc, #68]	; 1115c <abort@plt+0x4e4>
   11114:	ldr	r0, [pc, #68]	; 11160 <abort@plt+0x4e8>
   11118:	bl	10af8 <getdomainname@plt>
   1111c:	cmp	r0, #0
   11120:	bne	11140 <abort@plt+0x4c8>
   11124:	ldr	r1, [pc, #56]	; 11164 <abort@plt+0x4ec>
   11128:	ldr	r0, [pc, #48]	; 11160 <abort@plt+0x4e8>
   1112c:	bl	10a8c <strcmp@plt>
   11130:	cmp	r0, #0
   11134:	beq	11140 <abort@plt+0x4c8>
   11138:	ldr	r0, [pc, #32]	; 11160 <abort@plt+0x4e8>
   1113c:	pop	{r4, pc}
   11140:	ldr	r3, [pc, #32]	; 11168 <abort@plt+0x4f0>
   11144:	ldr	r1, [pc, #32]	; 1116c <abort@plt+0x4f4>
   11148:	mov	r0, #1
   1114c:	ldr	r2, [r3]
   11150:	bl	10c0c <__printf_chk@plt>
   11154:	mov	r0, #1
   11158:	bl	10bd0 <exit@plt>
   1115c:	andeq	r0, r0, r1, lsl #8
   11160:	andeq	r3, r2, r0, lsr #32
   11164:	andeq	r1, r1, r0, lsr #22
   11168:	andeq	r3, r2, r4, lsr #8
   1116c:	andeq	r1, r1, r8, lsr #22
   11170:	push	{r4, r5, r6, r7, r8, lr}
   11174:	bl	10bf4 <__errno_location@plt>
   11178:	mov	r5, #0
   1117c:	mov	r4, r5
   11180:	mov	r8, r5
   11184:	mov	r6, r0
   11188:	b	111dc <abort@plt+0x564>
   1118c:	lsl	r5, r5, #1
   11190:	mov	r0, r4
   11194:	mov	r1, r5
   11198:	bl	10b28 <realloc@plt>
   1119c:	subs	r4, r0, #0
   111a0:	beq	11210 <abort@plt+0x598>
   111a4:	mov	r1, r5
   111a8:	mov	r0, r4
   111ac:	bl	10af8 <getdomainname@plt>
   111b0:	subs	r7, r0, #0
   111b4:	bne	111d0 <abort@plt+0x558>
   111b8:	mov	r2, r5
   111bc:	mov	r1, r7
   111c0:	mov	r0, r4
   111c4:	bl	10c24 <memchr@plt>
   111c8:	cmp	r0, #0
   111cc:	beq	111dc <abort@plt+0x564>
   111d0:	ldr	r3, [r6]
   111d4:	cmp	r3, #36	; 0x24
   111d8:	bne	11200 <abort@plt+0x588>
   111dc:	cmp	r4, #0
   111e0:	str	r8, [r6]
   111e4:	bne	1118c <abort@plt+0x514>
   111e8:	mov	r0, #128	; 0x80
   111ec:	bl	10b64 <malloc@plt>
   111f0:	subs	r4, r0, #0
   111f4:	beq	11210 <abort@plt+0x598>
   111f8:	mov	r5, #128	; 0x80
   111fc:	b	111a4 <abort@plt+0x52c>
   11200:	cmp	r7, #0
   11204:	bne	11210 <abort@plt+0x598>
   11208:	mov	r0, r4
   1120c:	pop	{r4, r5, r6, r7, r8, pc}
   11210:	mov	r1, #0
   11214:	mov	r0, #1
   11218:	bl	10b34 <err@plt>
   1121c:	push	{r4, r5, r6, r7, r8, lr}
   11220:	bl	10bf4 <__errno_location@plt>
   11224:	mov	r5, #0
   11228:	mov	r4, r5
   1122c:	mov	r8, r5
   11230:	mov	r6, r0
   11234:	b	11288 <abort@plt+0x610>
   11238:	lsl	r5, r5, #1
   1123c:	mov	r0, r4
   11240:	mov	r1, r5
   11244:	bl	10b28 <realloc@plt>
   11248:	subs	r4, r0, #0
   1124c:	beq	112bc <abort@plt+0x644>
   11250:	mov	r1, r5
   11254:	mov	r0, r4
   11258:	bl	10b4c <gethostname@plt>
   1125c:	subs	r7, r0, #0
   11260:	bne	1127c <abort@plt+0x604>
   11264:	mov	r2, r5
   11268:	mov	r1, r7
   1126c:	mov	r0, r4
   11270:	bl	10c24 <memchr@plt>
   11274:	cmp	r0, #0
   11278:	beq	11288 <abort@plt+0x610>
   1127c:	ldr	r3, [r6]
   11280:	cmp	r3, #36	; 0x24
   11284:	bne	112ac <abort@plt+0x634>
   11288:	cmp	r4, #0
   1128c:	str	r8, [r6]
   11290:	bne	11238 <abort@plt+0x5c0>
   11294:	mov	r0, #128	; 0x80
   11298:	bl	10b64 <malloc@plt>
   1129c:	subs	r4, r0, #0
   112a0:	beq	112bc <abort@plt+0x644>
   112a4:	mov	r5, #128	; 0x80
   112a8:	b	11250 <abort@plt+0x5d8>
   112ac:	cmp	r7, #0
   112b0:	bne	112bc <abort@plt+0x644>
   112b4:	mov	r0, r4
   112b8:	pop	{r4, r5, r6, r7, r8, pc}
   112bc:	mov	r1, #0
   112c0:	mov	r0, #1
   112c4:	bl	10b34 <err@plt>
   112c8:	mov	r3, r0
   112cc:	push	{r4, lr}
   112d0:	mov	r2, #1488	; 0x5d0
   112d4:	mov	r1, #1
   112d8:	ldr	r0, [pc, #8]	; 112e8 <abort@plt+0x670>
   112dc:	bl	10b40 <fwrite@plt>
   112e0:	mvn	r0, #0
   112e4:	bl	10bd0 <exit@plt>
   112e8:	andeq	r1, r1, r8, asr #22
   112ec:	push	{r4, r5, r6, lr}
   112f0:	mov	r4, r0
   112f4:	bl	10bdc <strlen@plt>
   112f8:	subs	r5, r0, #0
   112fc:	beq	113c4 <abort@plt+0x74c>
   11300:	bl	10bc4 <__ctype_b_loc@plt>
   11304:	ldrb	r1, [r4]
   11308:	lsl	r3, r1, #1
   1130c:	ldr	lr, [r0]
   11310:	ldrh	r3, [lr, r3]
   11314:	and	r3, r3, #8
   11318:	uxth	r0, r3
   1131c:	cmp	r0, #0
   11320:	popeq	{r4, r5, r6, pc}
   11324:	add	r2, r4, r5
   11328:	ldrb	r2, [r2, #-1]
   1132c:	lsl	r2, r2, #1
   11330:	ldrh	r0, [lr, r2]
   11334:	ands	r0, r0, #8
   11338:	popeq	{r4, r5, r6, pc}
   1133c:	mov	r2, r4
   11340:	rsb	r0, r4, #1
   11344:	b	1137c <abort@plt+0x704>
   11348:	cmp	r1, #45	; 0x2d
   1134c:	beq	113ac <abort@plt+0x734>
   11350:	cmp	r1, #46	; 0x2e
   11354:	bne	113c4 <abort@plt+0x74c>
   11358:	ldrb	r3, [r2, #-1]
   1135c:	cmp	r3, #46	; 0x2e
   11360:	beq	113c4 <abort@plt+0x74c>
   11364:	cmp	r5, ip
   11368:	ble	113a4 <abort@plt+0x72c>
   1136c:	ldrb	r1, [r2, #1]!
   11370:	lsl	ip, r1, #1
   11374:	ldrh	r3, [lr, ip]
   11378:	and	r3, r3, #8
   1137c:	uxth	r3, r3
   11380:	cmp	r3, #0
   11384:	add	ip, r0, r2
   11388:	beq	11348 <abort@plt+0x6d0>
   1138c:	cmp	r1, #45	; 0x2d
   11390:	beq	113ac <abort@plt+0x734>
   11394:	cmp	r1, #46	; 0x2e
   11398:	beq	11358 <abort@plt+0x6e0>
   1139c:	cmp	r5, ip
   113a0:	bgt	1136c <abort@plt+0x6f4>
   113a4:	mov	r0, #1
   113a8:	pop	{r4, r5, r6, pc}
   113ac:	ldrb	r3, [r2, #-1]
   113b0:	cmp	r3, #46	; 0x2e
   113b4:	beq	113c4 <abort@plt+0x74c>
   113b8:	ldrb	r3, [r2, #1]
   113bc:	cmp	r3, #46	; 0x2e
   113c0:	bne	11364 <abort@plt+0x6ec>
   113c4:	mov	r0, #0
   113c8:	pop	{r4, r5, r6, pc}
   113cc:	cmp	r0, #0
   113d0:	push	{r4, r5, r6, lr}
   113d4:	mov	r4, r1
   113d8:	beq	11428 <abort@plt+0x7b0>
   113dc:	sub	r0, r0, #6
   113e0:	cmp	r0, #1
   113e4:	bhi	11500 <abort@plt+0x888>
   113e8:	mov	r0, r1
   113ec:	bl	10bdc <strlen@plt>
   113f0:	mov	r1, r0
   113f4:	mov	r0, r4
   113f8:	bl	10c3c <setdomainname@plt>
   113fc:	cmp	r0, #0
   11400:	popeq	{r4, r5, r6, pc}
   11404:	bl	10bf4 <__errno_location@plt>
   11408:	ldr	r0, [r0]
   1140c:	cmp	r0, #1
   11410:	beq	1150c <abort@plt+0x894>
   11414:	cmp	r0, #22
   11418:	popne	{r4, r5, r6, pc}
   1141c:	ldr	r1, [pc, #252]	; 11520 <abort@plt+0x8a8>
   11420:	mov	r0, #1
   11424:	bl	10c48 <errx@plt>
   11428:	bl	10bc4 <__ctype_b_loc@plt>
   1142c:	ldr	r5, [r0]
   11430:	b	11438 <abort@plt+0x7c0>
   11434:	mov	r4, r2
   11438:	mov	r2, r4
   1143c:	ldrb	r3, [r2], #1
   11440:	lsl	r3, r3, #1
   11444:	ldrh	r3, [r5, r3]
   11448:	tst	r3, #8192	; 0x2000
   1144c:	bne	11434 <abort@plt+0x7bc>
   11450:	mov	r0, r4
   11454:	bl	10bdc <strlen@plt>
   11458:	subs	r3, r0, #1
   1145c:	bcc	114a4 <abort@plt+0x82c>
   11460:	ldrb	r2, [r4, r3]
   11464:	add	r3, r4, r3
   11468:	lsl	r2, r2, #1
   1146c:	ldrh	r2, [r5, r2]
   11470:	tst	r2, #8192	; 0x2000
   11474:	addeq	r1, r4, r0
   11478:	beq	114a8 <abort@plt+0x830>
   1147c:	mvn	r0, r4
   11480:	b	1149c <abort@plt+0x824>
   11484:	add	r1, r0, r3
   11488:	ldrb	r2, [r3, #-1]!
   1148c:	lsl	r2, r2, #1
   11490:	ldrh	r2, [r5, r2]
   11494:	tst	r2, #8192	; 0x2000
   11498:	beq	114f4 <abort@plt+0x87c>
   1149c:	cmp	r4, r3
   114a0:	bne	11484 <abort@plt+0x80c>
   114a4:	mov	r1, r4
   114a8:	mov	r3, #0
   114ac:	strb	r3, [r1]
   114b0:	mov	r0, r4
   114b4:	bl	112ec <abort@plt+0x674>
   114b8:	cmp	r0, #0
   114bc:	beq	11514 <abort@plt+0x89c>
   114c0:	mov	r0, r4
   114c4:	bl	10bdc <strlen@plt>
   114c8:	mov	r1, r0
   114cc:	mov	r0, r4
   114d0:	bl	10ba0 <sethostname@plt>
   114d4:	cmp	r0, #0
   114d8:	popeq	{r4, r5, r6, pc}
   114dc:	bl	10bf4 <__errno_location@plt>
   114e0:	ldr	r0, [r0]
   114e4:	cmp	r0, #1
   114e8:	bne	11414 <abort@plt+0x79c>
   114ec:	ldr	r1, [pc, #48]	; 11524 <abort@plt+0x8ac>
   114f0:	bl	10c48 <errx@plt>
   114f4:	add	r1, r1, #1
   114f8:	add	r1, r4, r1
   114fc:	b	114a8 <abort@plt+0x830>
   11500:	ldr	r3, [pc, #32]	; 11528 <abort@plt+0x8b0>
   11504:	ldr	r0, [r3]
   11508:	bl	112c8 <abort@plt+0x650>
   1150c:	ldr	r1, [pc, #24]	; 1152c <abort@plt+0x8b4>
   11510:	bl	10c48 <errx@plt>
   11514:	ldr	r1, [pc, #20]	; 11530 <abort@plt+0x8b8>
   11518:	mov	r0, #1
   1151c:	bl	10c48 <errx@plt>
   11520:	andeq	r2, r1, ip, ror #2
   11524:	andeq	r2, r1, r0, asr #2
   11528:	andeq	r3, r2, r0, lsl r0
   1152c:	andeq	r2, r1, ip, ror r1
   11530:	andeq	r2, r1, ip, lsl r1
   11534:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11538:	sub	sp, sp, #312	; 0x138
   1153c:	ldr	r6, [pc, #880]	; 118b4 <abort@plt+0xc3c>
   11540:	mov	r5, r0
   11544:	ldr	r3, [r6]
   11548:	str	r3, [sp, #308]	; 0x134
   1154c:	cmp	r0, #9
   11550:	ldrls	pc, [pc, r0, lsl #2]
   11554:	b	116bc <abort@plt+0xa44>
   11558:	andeq	r1, r1, ip, asr r6
   1155c:			; <UNDEFINED> instruction: 0x000116bc
   11560:			; <UNDEFINED> instruction: 0x000116bc
   11564:	andeq	r1, r1, ip, ror r6
   11568:			; <UNDEFINED> instruction: 0x000116bc
   1156c:			; <UNDEFINED> instruction: 0x000116bc
   11570:	andeq	r1, r1, r4, lsr #13
   11574:			; <UNDEFINED> instruction: 0x000116b0
   11578:	andeq	r1, r1, r0, lsl #11
   1157c:	andeq	r1, r1, r0, lsl #11
   11580:	cmp	r0, #9
   11584:	add	r0, sp, #20
   11588:	moveq	r7, #1
   1158c:	movne	r7, #8
   11590:	bl	10ab0 <getifaddrs@plt>
   11594:	cmp	r0, #0
   11598:	bne	1187c <abort@plt+0xc04>
   1159c:	ldr	r4, [sp, #20]
   115a0:	cmp	r4, #0
   115a4:	beq	11748 <abort@plt+0xad0>
   115a8:	ldr	sl, [pc, #776]	; 118b8 <abort@plt+0xc40>
   115ac:	ldr	r9, [pc, #776]	; 118bc <abort@plt+0xc44>
   115b0:	ldr	r8, [pc, #776]	; 118c0 <abort@plt+0xc48>
   115b4:	b	1161c <abort@plt+0x9a4>
   115b8:	cmp	r3, #10
   115bc:	bne	115dc <abort@plt+0x964>
   115c0:	ldr	r3, [r0, #8]
   115c4:	and	r3, r3, r9
   115c8:	cmp	r3, r8
   115cc:	beq	11610 <abort@plt+0x998>
   115d0:	ldrb	r3, [r0, #8]
   115d4:	cmp	r3, #255	; 0xff
   115d8:	beq	1175c <abort@plt+0xae4>
   115dc:	mov	r1, #28
   115e0:	mov	r3, #0
   115e4:	str	r3, [sp, #4]
   115e8:	str	r3, [sp]
   115ec:	str	r7, [sp, #8]
   115f0:	mov	r3, #255	; 0xff
   115f4:	add	r2, sp, #52	; 0x34
   115f8:	bl	10c54 <getnameinfo@plt>
   115fc:	subs	r3, r0, #0
   11600:	beq	1172c <abort@plt+0xab4>
   11604:	cmp	r5, #8
   11608:	cmnne	r3, #2
   1160c:	bne	11864 <abort@plt+0xbec>
   11610:	ldr	r4, [r4]
   11614:	cmp	r4, #0
   11618:	beq	11748 <abort@plt+0xad0>
   1161c:	ldr	r0, [r4, #12]
   11620:	cmp	r0, #0
   11624:	beq	11610 <abort@plt+0x998>
   11628:	ldr	r3, [r4, #8]
   1162c:	tst	r3, #8
   11630:	bne	11610 <abort@plt+0x998>
   11634:	tst	r3, #1
   11638:	beq	11610 <abort@plt+0x998>
   1163c:	ldrh	r3, [r0]
   11640:	bic	r2, r3, #8
   11644:	cmp	r2, #2
   11648:	bne	11610 <abort@plt+0x998>
   1164c:	cmp	r3, #2
   11650:	bne	115b8 <abort@plt+0x940>
   11654:	mov	r1, #16
   11658:	b	115e0 <abort@plt+0x968>
   1165c:	bl	1121c <abort@plt+0x5a4>
   11660:	bl	10b58 <puts@plt>
   11664:	ldr	r2, [sp, #308]	; 0x134
   11668:	ldr	r3, [r6]
   1166c:	cmp	r2, r3
   11670:	bne	11878 <abort@plt+0xc00>
   11674:	add	sp, sp, #312	; 0x138
   11678:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1167c:	bl	1121c <abort@plt+0x5a4>
   11680:	mov	r1, #46	; 0x2e
   11684:	mov	r4, r0
   11688:	bl	10abc <strchrnul@plt>
   1168c:	mov	r2, #0
   11690:	mov	r3, r0
   11694:	mov	r0, r4
   11698:	strb	r2, [r3]
   1169c:	bl	10b58 <puts@plt>
   116a0:	b	11664 <abort@plt+0x9ec>
   116a4:	bl	11170 <abort@plt+0x4f8>
   116a8:	bl	10b58 <puts@plt>
   116ac:	b	11664 <abort@plt+0x9ec>
   116b0:	bl	1110c <abort@plt+0x494>
   116b4:	bl	10b58 <puts@plt>
   116b8:	b	11664 <abort@plt+0x9ec>
   116bc:	mov	r4, #0
   116c0:	mov	r3, #2
   116c4:	str	r3, [sp, #28]
   116c8:	str	r3, [sp, #20]
   116cc:	str	r4, [sp, #32]
   116d0:	str	r4, [sp, #24]
   116d4:	str	r4, [sp, #36]	; 0x24
   116d8:	str	r4, [sp, #40]	; 0x28
   116dc:	str	r4, [sp, #44]	; 0x2c
   116e0:	str	r4, [sp, #48]	; 0x30
   116e4:	bl	1121c <abort@plt+0x5a4>
   116e8:	mov	r1, r4
   116ec:	add	r2, sp, #20
   116f0:	add	r3, sp, #16
   116f4:	bl	10c60 <getaddrinfo@plt>
   116f8:	cmp	r0, r4
   116fc:	bne	11864 <abort@plt+0xbec>
   11700:	ldr	r4, [sp, #16]
   11704:	sub	r5, r5, #1
   11708:	ldr	r0, [r4, #24]
   1170c:	cmp	r5, #4
   11710:	ldrls	pc, [pc, r5, lsl #2]
   11714:	b	11664 <abort@plt+0x9ec>
   11718:	andeq	r1, r1, r8, asr #16
   1171c:	andeq	r1, r1, r0, asr #16
   11720:	andeq	r1, r1, r4, ror #12
   11724:	ldrdeq	r1, [r1], -ip
   11728:	andeq	r1, r1, r0, ror r7
   1172c:	add	r2, sp, #52	; 0x34
   11730:	mov	r1, sl
   11734:	mov	r0, #1
   11738:	bl	10c0c <__printf_chk@plt>
   1173c:	ldr	r4, [r4]
   11740:	cmp	r4, #0
   11744:	bne	1161c <abort@plt+0x9a4>
   11748:	mov	r0, #10
   1174c:	bl	10c00 <putchar@plt>
   11750:	ldr	r0, [sp, #20]
   11754:	bl	10aec <freeifaddrs@plt>
   11758:	b	11664 <abort@plt+0x9ec>
   1175c:	ldrb	r3, [r0, #9]
   11760:	and	r3, r3, #15
   11764:	cmp	r3, #2
   11768:	bne	115dc <abort@plt+0x964>
   1176c:	b	11610 <abort@plt+0x998>
   11770:	ldr	r7, [pc, #332]	; 118c4 <abort@plt+0xc4c>
   11774:	mov	r8, #1
   11778:	mov	r5, #0
   1177c:	ldr	r1, [r4, #16]
   11780:	ldr	r0, [r4, #20]
   11784:	mov	r3, #46	; 0x2e
   11788:	stmib	sp, {r5, r8}
   1178c:	str	r5, [sp]
   11790:	add	r2, sp, #52	; 0x34
   11794:	bl	10c54 <getnameinfo@plt>
   11798:	cmp	r0, #0
   1179c:	bne	11864 <abort@plt+0xbec>
   117a0:	ldr	r3, [sp, #16]
   117a4:	cmp	r3, r4
   117a8:	beq	117b4 <abort@plt+0xb3c>
   117ac:	mov	r0, #32
   117b0:	bl	10c00 <putchar@plt>
   117b4:	add	r2, sp, #52	; 0x34
   117b8:	mov	r1, r7
   117bc:	mov	r0, #1
   117c0:	bl	10c0c <__printf_chk@plt>
   117c4:	ldr	r4, [r4, #28]
   117c8:	cmp	r4, #0
   117cc:	bne	1177c <abort@plt+0xb04>
   117d0:	mov	r0, #10
   117d4:	bl	10c00 <putchar@plt>
   117d8:	b	11664 <abort@plt+0x9ec>
   117dc:	bl	1121c <abort@plt+0x5a4>
   117e0:	bl	10c6c <gethostbyname@plt>
   117e4:	subs	r5, r0, #0
   117e8:	beq	11898 <abort@plt+0xc20>
   117ec:	ldr	r3, [r5, #4]
   117f0:	ldr	r2, [r3]
   117f4:	cmp	r2, #0
   117f8:	movne	r4, #4
   117fc:	ldrne	r8, [pc, #192]	; 118c4 <abort@plt+0xc4c>
   11800:	bne	1181c <abort@plt+0xba4>
   11804:	b	117d0 <abort@plt+0xb58>
   11808:	mov	r0, #32
   1180c:	bl	10c00 <putchar@plt>
   11810:	ldr	r3, [r5, #4]
   11814:	ldr	r2, [r3, r4]
   11818:	mov	r4, r7
   1181c:	mov	r1, r8
   11820:	mov	r0, #1
   11824:	bl	10c0c <__printf_chk@plt>
   11828:	ldr	r3, [r5, #4]
   1182c:	add	r7, r4, #4
   11830:	ldr	r3, [r3, r4]
   11834:	cmp	r3, #0
   11838:	bne	11808 <abort@plt+0xb90>
   1183c:	b	117d0 <abort@plt+0xb58>
   11840:	bl	10b58 <puts@plt>
   11844:	b	11664 <abort@plt+0x9ec>
   11848:	mov	r1, #46	; 0x2e
   1184c:	bl	10be8 <strchr@plt>
   11850:	cmp	r0, #0
   11854:	beq	11664 <abort@plt+0x9ec>
   11858:	add	r0, r0, #1
   1185c:	bl	10b58 <puts@plt>
   11860:	b	11664 <abort@plt+0x9ec>
   11864:	bl	10ad4 <gai_strerror@plt>
   11868:	ldr	r1, [pc, #84]	; 118c4 <abort@plt+0xc4c>
   1186c:	mov	r2, r0
   11870:	mov	r0, #1
   11874:	bl	10c48 <errx@plt>
   11878:	bl	10b10 <__stack_chk_fail@plt>
   1187c:	bl	10bf4 <__errno_location@plt>
   11880:	ldr	r0, [r0]
   11884:	bl	10b7c <strerror@plt>
   11888:	ldr	r1, [pc, #52]	; 118c4 <abort@plt+0xc4c>
   1188c:	mov	r2, r0
   11890:	mov	r0, #1
   11894:	bl	10c48 <errx@plt>
   11898:	bl	10b94 <__h_errno_location@plt>
   1189c:	ldr	r0, [r0]
   118a0:	bl	10a98 <hstrerror@plt>
   118a4:	ldr	r1, [pc, #24]	; 118c4 <abort@plt+0xc4c>
   118a8:	mov	r2, r0
   118ac:	mov	r0, #1
   118b0:	bl	10c48 <errx@plt>
   118b4:	andeq	r2, r2, r0, asr #28
   118b8:	andeq	r2, r1, ip, lsr #3
   118bc:	strdeq	ip, [r0], -pc	; <UNPREDICTABLE>
   118c0:	strdeq	r8, [r0], -lr
   118c4:	andeq	r2, r1, r8, lsr #3
   118c8:	push	{r4, r5, r6, r7, lr}
   118cc:	sub	sp, sp, #100	; 0x64
   118d0:	ldr	r6, [pc, #224]	; 119b8 <abort@plt+0xd40>
   118d4:	mov	r4, r1
   118d8:	ldr	r1, [pc, #220]	; 119bc <abort@plt+0xd44>
   118dc:	ldr	r3, [r6]
   118e0:	str	r3, [sp, #92]	; 0x5c
   118e4:	bl	10aa4 <fopen@plt>
   118e8:	subs	r7, r0, #0
   118ec:	beq	1199c <abort@plt+0xd24>
   118f0:	bl	10c18 <fileno@plt>
   118f4:	mov	r2, sp
   118f8:	mov	r1, r0
   118fc:	mov	r0, #3
   11900:	bl	10b88 <__fxstat@plt>
   11904:	cmn	r0, #1
   11908:	beq	119a8 <abort@plt+0xd30>
   1190c:	ldr	r4, [sp, #44]	; 0x2c
   11910:	mov	r1, #1
   11914:	add	r4, r4, r1
   11918:	mov	r0, r4
   1191c:	bl	10a80 <calloc@plt>
   11920:	subs	r5, r0, #0
   11924:	beq	119a8 <abort@plt+0xd30>
   11928:	mov	r1, r4
   1192c:	mov	r2, r7
   11930:	mov	r0, r5
   11934:	bl	10ae0 <fgets@plt>
   11938:	cmp	r0, #0
   1193c:	beq	1196c <abort@plt+0xcf4>
   11940:	ldrb	r3, [r5]
   11944:	cmp	r3, #35	; 0x23
   11948:	cmpne	r3, #10
   1194c:	moveq	r4, #1
   11950:	movne	r4, #0
   11954:	beq	11990 <abort@plt+0xd18>
   11958:	mov	r1, #10
   1195c:	mov	r0, r5
   11960:	bl	10be8 <strchr@plt>
   11964:	cmp	r0, #0
   11968:	strbne	r4, [r0]
   1196c:	mov	r0, r7
   11970:	bl	10c30 <fclose@plt>
   11974:	ldr	r2, [sp, #92]	; 0x5c
   11978:	ldr	r3, [r6]
   1197c:	mov	r0, r5
   11980:	cmp	r2, r3
   11984:	bne	119b4 <abort@plt+0xd3c>
   11988:	add	sp, sp, #100	; 0x64
   1198c:	pop	{r4, r5, r6, r7, pc}
   11990:	ldr	r4, [sp, #44]	; 0x2c
   11994:	add	r4, r4, #1
   11998:	b	11928 <abort@plt+0xcb0>
   1199c:	cmp	r4, #0
   119a0:	movne	r5, r7
   119a4:	bne	11974 <abort@plt+0xcfc>
   119a8:	mov	r1, #0
   119ac:	mov	r0, #1
   119b0:	bl	10b34 <err@plt>
   119b4:	bl	10b10 <__stack_chk_fail@plt>
   119b8:	andeq	r2, r2, r0, asr #28
   119bc:			; <UNDEFINED> instruction: 0x000121b0
   119c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119c4:	mov	r7, r0
   119c8:	ldr	r6, [pc, #72]	; 11a18 <abort@plt+0xda0>
   119cc:	ldr	r5, [pc, #72]	; 11a1c <abort@plt+0xda4>
   119d0:	add	r6, pc, r6
   119d4:	add	r5, pc, r5
   119d8:	sub	r6, r6, r5
   119dc:	mov	r8, r1
   119e0:	mov	r9, r2
   119e4:	bl	10a60 <calloc@plt-0x20>
   119e8:	asrs	r6, r6, #2
   119ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   119f0:	mov	r4, #0
   119f4:	add	r4, r4, #1
   119f8:	ldr	r3, [r5], #4
   119fc:	mov	r2, r9
   11a00:	mov	r1, r8
   11a04:	mov	r0, r7
   11a08:	blx	r3
   11a0c:	cmp	r6, r4
   11a10:	bne	119f4 <abort@plt+0xd7c>
   11a14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a18:	andeq	r1, r1, r4, ror #8
   11a1c:	andeq	r1, r1, ip, asr r4
   11a20:	bx	lr

Disassembly of section .fini:

00011a24 <.fini>:
   11a24:	push	{r3, lr}
   11a28:	pop	{r3, pc}
