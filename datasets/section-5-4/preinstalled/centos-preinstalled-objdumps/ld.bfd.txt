
centos-preinstalled/ld.bfd:     file format elf32-littlearm


Disassembly of section .init:

000133ec <_init@@Base>:
   133ec:	push	{r3, lr}
   133f0:	bl	151c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1338>
   133f4:	pop	{r3, pc}

Disassembly of section .plt:

000133f8 <strstr@plt-0x14>:
   133f8:	push	{lr}		; (str lr, [sp, #-4]!)
   133fc:	ldr	lr, [pc, #4]	; 13408 <_init@@Base+0x1c>
   13400:	add	lr, pc, lr
   13404:	ldr	pc, [lr, #8]!
   13408:	strdeq	fp, [r8], -r8

0001340c <strstr@plt>:
   1340c:	add	ip, pc, #0, 12
   13410:	add	ip, ip, #569344	; 0x8b000
   13414:	ldr	pc, [ip, #3064]!	; 0xbf8

00013418 <bfd_get_reloc_code_name@plt>:
   13418:	add	ip, pc, #0, 12
   1341c:	add	ip, ip, #569344	; 0x8b000
   13420:	ldr	pc, [ip, #3056]!	; 0xbf0

00013424 <bfd_search_for_target@plt>:
   13424:	add	ip, pc, #0, 12
   13428:	add	ip, ip, #569344	; 0x8b000
   1342c:	ldr	pc, [ip, #3048]!	; 0xbe8

00013430 <bfd_emul_get_commonpagesize@plt>:
   13430:	add	ip, pc, #0, 12
   13434:	add	ip, ip, #569344	; 0x8b000
   13438:	ldr	pc, [ip, #3040]!	; 0xbe0

0001343c <raise@plt>:
   1343c:	add	ip, pc, #0, 12
   13440:	add	ip, ip, #569344	; 0x8b000
   13444:	ldr	pc, [ip, #3032]!	; 0xbd8

00013448 <elf32_arm_fix_exidx_coverage@plt>:
   13448:	add	ip, pc, #0, 12
   1344c:	add	ip, ip, #569344	; 0x8b000
   13450:	ldr	pc, [ip, #3024]!	; 0xbd0

00013454 <bfd_get_section_by_name_if@plt>:
   13454:	add	ip, pc, #0, 12
   13458:	add	ip, ip, #569344	; 0x8b000
   1345c:	ldr	pc, [ip, #3016]!	; 0xbc8

00013460 <cplus_demangle_name_to_style@plt>:
   13460:	add	ip, pc, #0, 12
   13464:	add	ip, ip, #569344	; 0x8b000
   13468:	ldr	pc, [ip, #3008]!	; 0xbc0

0001346c <htab_hash_string@plt>:
   1346c:	add	ip, pc, #0, 12
   13470:	add	ip, ip, #569344	; 0x8b000
   13474:	ldr	pc, [ip, #3000]!	; 0xbb8

00013478 <bfd_scan_vma@plt>:
   13478:	add	ip, pc, #0, 12
   1347c:	add	ip, ip, #569344	; 0x8b000
   13480:	ldr	pc, [ip, #2992]!	; 0xbb0

00013484 <register_ld_plugin_object_p@plt>:
   13484:	add	ip, pc, #0, 12
   13488:	add	ip, ip, #569344	; 0x8b000
   1348c:	ldr	pc, [ip, #2984]!	; 0xba8

00013490 <strcmp@plt>:
   13490:	add	ip, pc, #0, 12
   13494:	add	ip, ip, #569344	; 0x8b000
   13498:	ldr	pc, [ip, #2976]!	; 0xba0

0001349c <strtol@plt>:
   1349c:	add	ip, pc, #0, 12
   134a0:	add	ip, ip, #569344	; 0x8b000
   134a4:	ldr	pc, [ip, #2968]!	; 0xb98

000134a8 <elf32_arm_setup_section_lists@plt>:
   134a8:	add	ip, pc, #0, 12
   134ac:	add	ip, ip, #569344	; 0x8b000
   134b0:	ldr	pc, [ip, #2960]!	; 0xb90

000134b4 <bfd_make_writable@plt>:
   134b4:	add	ip, pc, #0, 12
   134b8:	add	ip, ip, #569344	; 0x8b000
   134bc:	ldr	pc, [ip, #2952]!	; 0xb88

000134c0 <bfd_elf32_arm_set_vfp11_fix@plt>:
   134c0:	add	ip, pc, #0, 12
   134c4:	add	ip, ip, #569344	; 0x8b000
   134c8:	ldr	pc, [ip, #2944]!	; 0xb80

000134cc <bfd_elf_record_link_assignment@plt>:
   134cc:	add	ip, pc, #0, 12
   134d0:	add	ip, ip, #569344	; 0x8b000
   134d4:	ldr	pc, [ip, #2936]!	; 0xb78

000134d8 <bfd_make_section_with_flags@plt>:
   134d8:	add	ip, pc, #0, 12
   134dc:	add	ip, ip, #569344	; 0x8b000
   134e0:	ldr	pc, [ip, #2928]!	; 0xb70

000134e4 <read@plt>:
   134e4:	add	ip, pc, #0, 12
   134e8:	add	ip, ip, #569344	; 0x8b000
   134ec:	ldr	pc, [ip, #2920]!	; 0xb68

000134f0 <fflush@plt>:
   134f0:	add	ip, pc, #0, 12
   134f4:	add	ip, ip, #569344	; 0x8b000
   134f8:	ldr	pc, [ip, #2912]!	; 0xb60

000134fc <bfd_make_readable@plt>:
   134fc:	add	ip, pc, #0, 12
   13500:	add	ip, ip, #569344	; 0x8b000
   13504:	ldr	pc, [ip, #2904]!	; 0xb58

00013508 <bfd_wrapped_link_hash_lookup@plt>:
   13508:	add	ip, pc, #0, 12
   1350c:	add	ip, ip, #569344	; 0x8b000
   13510:	ldr	pc, [ip, #2896]!	; 0xb50

00013514 <bfd_generic_link_read_symbols@plt>:
   13514:	add	ip, pc, #0, 12
   13518:	add	ip, ip, #569344	; 0x8b000
   1351c:	ldr	pc, [ip, #2888]!	; 0xb48

00013520 <bfd_arch_mach_octets_per_byte@plt>:
   13520:	add	ip, pc, #0, 12
   13524:	add	ip, ip, #569344	; 0x8b000
   13528:	ldr	pc, [ip, #2880]!	; 0xb40

0001352c <bfd_elf_get_runpath_list@plt>:
   1352c:	add	ip, pc, #0, 12
   13530:	add	ip, ip, #569344	; 0x8b000
   13534:	ldr	pc, [ip, #2872]!	; 0xb38

00013538 <memmove@plt>:
   13538:	add	ip, pc, #0, 12
   1353c:	add	ip, ip, #569344	; 0x8b000
   13540:	ldr	pc, [ip, #2864]!	; 0xb30

00013544 <bfd_hash_traverse@plt>:
   13544:	add	ip, pc, #0, 12
   13548:	add	ip, ip, #569344	; 0x8b000
   1354c:	ldr	pc, [ip, #2856]!	; 0xb28

00013550 <bfd_set_default_target@plt>:
   13550:	add	ip, pc, #0, 12
   13554:	add	ip, ip, #569344	; 0x8b000
   13558:	ldr	pc, [ip, #2848]!	; 0xb20

0001355c <bfd_elf32_arm_stm32l4xx_fix_veneer_locations@plt>:
   1355c:	add	ip, pc, #0, 12
   13560:	add	ip, ip, #569344	; 0x8b000
   13564:	ldr	pc, [ip, #2840]!	; 0xb18

00013568 <bfd_emul_get_maxpagesize@plt>:
   13568:	add	ip, pc, #0, 12
   1356c:	add	ip, ip, #569344	; 0x8b000
   13570:	ldr	pc, [ip, #2832]!	; 0xb10

00013574 <free@plt>:
   13574:	add	ip, pc, #0, 12
   13578:	add	ip, ip, #569344	; 0x8b000
   1357c:	ldr	pc, [ip, #2824]!	; 0xb08

00013580 <fgets@plt>:
   13580:	add	ip, pc, #0, 12
   13584:	add	ip, ip, #569344	; 0x8b000
   13588:	ldr	pc, [ip, #2816]!	; 0xb00

0001358c <bfd_make_section_anyway_with_flags@plt>:
   1358c:	add	ip, pc, #0, 12
   13590:	add	ip, ip, #569344	; 0x8b000
   13594:	ldr	pc, [ip, #2808]!	; 0xaf8

00013598 <ferror@plt>:
   13598:	add	ip, pc, #0, 12
   1359c:	add	ip, ip, #569344	; 0x8b000
   135a0:	ldr	pc, [ip, #2800]!	; 0xaf0

000135a4 <filename_cmp@plt>:
   135a4:	add	ip, pc, #0, 12
   135a8:	add	ip, ip, #569344	; 0x8b000
   135ac:	ldr	pc, [ip, #2792]!	; 0xae8

000135b0 <bfd_stat@plt>:
   135b0:	add	ip, pc, #0, 12
   135b4:	add	ip, ip, #569344	; 0x8b000
   135b8:	ldr	pc, [ip, #2784]!	; 0xae0

000135bc <cplus_demangle_set_style@plt>:
   135bc:	add	ip, pc, #0, 12
   135c0:	add	ip, ip, #569344	; 0x8b000
   135c4:	ldr	pc, [ip, #2776]!	; 0xad8

000135c8 <memcpy@plt>:
   135c8:	add	ip, pc, #0, 12
   135cc:	add	ip, ip, #569344	; 0x8b000
   135d0:	ldr	pc, [ip, #2768]!	; 0xad0

000135d4 <_bfd_abort@plt>:
   135d4:	add	ip, pc, #0, 12
   135d8:	add	ip, ip, #569344	; 0x8b000
   135dc:	ldr	pc, [ip, #2760]!	; 0xac8

000135e0 <mmap64@plt>:
   135e0:	add	ip, pc, #0, 12
   135e4:	add	ip, ip, #569344	; 0x8b000
   135e8:	ldr	pc, [ip, #2752]!	; 0xac0

000135ec <_bfd_elf_tls_setup@plt>:
   135ec:	add	ip, pc, #0, 12
   135f0:	add	ip, ip, #569344	; 0x8b000
   135f4:	ldr	pc, [ip, #2744]!	; 0xab8

000135f8 <bfd_openr@plt>:
   135f8:	add	ip, pc, #0, 12
   135fc:	add	ip, ip, #569344	; 0x8b000
   13600:	ldr	pc, [ip, #2736]!	; 0xab0

00013604 <bfd_elf32_arm_set_cortex_a8_fix@plt>:
   13604:	add	ip, pc, #0, 12
   13608:	add	ip, ip, #569344	; 0x8b000
   1360c:	ldr	pc, [ip, #2728]!	; 0xaa8

00013610 <lrealpath@plt>:
   13610:	add	ip, pc, #0, 12
   13614:	add	ip, ip, #569344	; 0x8b000
   13618:	ldr	pc, [ip, #2720]!	; 0xaa0

0001361c <bfd_hash_newfunc@plt>:
   1361c:	add	ip, pc, #0, 12
   13620:	add	ip, ip, #569344	; 0x8b000
   13624:	ldr	pc, [ip, #2712]!	; 0xa98

00013628 <_IO_getc@plt>:
   13628:	add	ip, pc, #0, 12
   1362c:	add	ip, ip, #569344	; 0x8b000
   13630:	ldr	pc, [ip, #2704]!	; 0xa90

00013634 <bfd_elf32_arm_allocate_interworking_sections@plt>:
   13634:	add	ip, pc, #0, 12
   13638:	add	ip, ip, #569344	; 0x8b000
   1363c:	ldr	pc, [ip, #2696]!	; 0xa88

00013640 <ftell@plt>:
   13640:	add	ip, pc, #0, 12
   13644:	add	ip, ip, #569344	; 0x8b000
   13648:	ldr	pc, [ip, #2688]!	; 0xa80

0001364c <memcmp@plt>:
   1364c:	add	ip, pc, #0, 12
   13650:	add	ip, ip, #569344	; 0x8b000
   13654:	ldr	pc, [ip, #2680]!	; 0xa78

00013658 <_obstack_newchunk@plt>:
   13658:	add	ip, pc, #0, 12
   1365c:	add	ip, ip, #569344	; 0x8b000
   13660:	ldr	pc, [ip, #2672]!	; 0xa70

00013664 <stpcpy@plt>:
   13664:	add	ip, pc, #0, 12
   13668:	add	ip, ip, #569344	; 0x8b000
   1366c:	ldr	pc, [ip, #2664]!	; 0xa68

00013670 <bfd_alloc@plt>:
   13670:	add	ip, pc, #0, 12
   13674:	add	ip, ip, #569344	; 0x8b000
   13678:	ldr	pc, [ip, #2656]!	; 0xa60

0001367c <bfd_get_section_contents@plt>:
   1367c:	add	ip, pc, #0, 12
   13680:	add	ip, ip, #569344	; 0x8b000
   13684:	ldr	pc, [ip, #2648]!	; 0xa58

00013688 <dcgettext@plt>:
   13688:	add	ip, pc, #0, 12
   1368c:	add	ip, ip, #569344	; 0x8b000
   13690:	ldr	pc, [ip, #2640]!	; 0xa50

00013694 <__stack_chk_fail@plt>:
   13694:	add	ip, pc, #0, 12
   13698:	add	ip, ip, #569344	; 0x8b000
   1369c:	ldr	pc, [ip, #2632]!	; 0xa48

000136a0 <bfd_get_reloc_size@plt>:
   136a0:	add	ip, pc, #0, 12
   136a4:	add	ip, ip, #569344	; 0x8b000
   136a8:	ldr	pc, [ip, #2624]!	; 0xa40

000136ac <_bfd_elf_map_sections_to_segments@plt>:
   136ac:	add	ip, pc, #0, 12
   136b0:	add	ip, ip, #569344	; 0x8b000
   136b4:	ldr	pc, [ip, #2616]!	; 0xa38

000136b8 <rewind@plt>:
   136b8:	add	ip, pc, #0, 12
   136bc:	add	ip, ip, #569344	; 0x8b000
   136c0:	ldr	pc, [ip, #2608]!	; 0xa30

000136c4 <dlclose@plt>:
   136c4:	add	ip, pc, #0, 12
   136c8:	add	ip, ip, #569344	; 0x8b000
   136cc:	ldr	pc, [ip, #2600]!	; 0xa28

000136d0 <bfd_reloc_type_lookup@plt>:
   136d0:	add	ip, pc, #0, 12
   136d4:	add	ip, ip, #569344	; 0x8b000
   136d8:	ldr	pc, [ip, #2592]!	; 0xa20

000136dc <_obstack_begin@plt>:
   136dc:	add	ip, pc, #0, 12
   136e0:	add	ip, ip, #569344	; 0x8b000
   136e4:	ldr	pc, [ip, #2584]!	; 0xa18

000136e8 <bfd_getb64@plt>:
   136e8:	add	ip, pc, #0, 12
   136ec:	add	ip, ip, #569344	; 0x8b000
   136f0:	ldr	pc, [ip, #2576]!	; 0xa10

000136f4 <bfd_elf_get_dt_soname@plt>:
   136f4:	add	ip, pc, #0, 12
   136f8:	add	ip, ip, #569344	; 0x8b000
   136fc:	ldr	pc, [ip, #2568]!	; 0xa08

00013700 <realloc@plt>:
   13700:	add	ip, pc, #0, 12
   13704:	add	ip, ip, #569344	; 0x8b000
   13708:	ldr	pc, [ip, #2560]!	; 0xa00

0001370c <bfd_elf_get_dyn_lib_class@plt>:
   1370c:	add	ip, pc, #0, 12
   13710:	add	ip, ip, #569344	; 0x8b000
   13714:	ldr	pc, [ip, #2552]!	; 0x9f8

00013718 <dlerror@plt>:
   13718:	add	ip, pc, #0, 12
   1371c:	add	ip, ip, #569344	; 0x8b000
   13720:	ldr	pc, [ip, #2544]!	; 0x9f0

00013724 <xrealloc@plt>:
   13724:	add	ip, pc, #0, 12
   13728:	add	ip, ip, #569344	; 0x8b000
   1372c:	ldr	pc, [ip, #2536]!	; 0x9e8

00013730 <bfd_hash_table_free@plt>:
   13730:	add	ip, pc, #0, 12
   13734:	add	ip, ip, #569344	; 0x8b000
   13738:	ldr	pc, [ip, #2528]!	; 0x9e0

0001373c <textdomain@plt>:
   1373c:	add	ip, pc, #0, 12
   13740:	add	ip, ip, #569344	; 0x8b000
   13744:	ldr	pc, [ip, #2520]!	; 0x9d8

00013748 <strcasecmp@plt>:
   13748:	add	ip, pc, #0, 12
   1374c:	add	ip, ip, #569344	; 0x8b000
   13750:	ldr	pc, [ip, #2512]!	; 0x9d0

00013754 <__rawmemchr@plt>:
   13754:	add	ip, pc, #0, 12
   13758:	add	ip, ip, #569344	; 0x8b000
   1375c:	ldr	pc, [ip, #2504]!	; 0x9c8

00013760 <concat@plt>:
   13760:	add	ip, pc, #0, 12
   13764:	add	ip, ip, #569344	; 0x8b000
   13768:	ldr	pc, [ip, #2496]!	; 0x9c0

0001376c <filename_ncmp@plt>:
   1376c:	add	ip, pc, #0, 12
   13770:	add	ip, ip, #569344	; 0x8b000
   13774:	ldr	pc, [ip, #2488]!	; 0x9b8

00013778 <bfd_target_list@plt>:
   13778:	add	ip, pc, #0, 12
   1377c:	add	ip, ip, #569344	; 0x8b000
   13780:	ldr	pc, [ip, #2480]!	; 0x9b0

00013784 <bfd_get_error@plt>:
   13784:	add	ip, pc, #0, 12
   13788:	add	ip, ip, #569344	; 0x8b000
   1378c:	ldr	pc, [ip, #2472]!	; 0x9a8

00013790 <bfd_arch_get_compatible@plt>:
   13790:	add	ip, pc, #0, 12
   13794:	add	ip, ip, #569344	; 0x8b000
   13798:	ldr	pc, [ip, #2464]!	; 0x9a0

0001379c <_IO_putc@plt>:
   1379c:	add	ip, pc, #0, 12
   137a0:	add	ip, ip, #569344	; 0x8b000
   137a4:	ldr	pc, [ip, #2456]!	; 0x998

000137a8 <fwrite@plt>:
   137a8:	add	ip, pc, #0, 12
   137ac:	add	ip, ip, #569344	; 0x8b000
   137b0:	ldr	pc, [ip, #2448]!	; 0x990

000137b4 <xmalloc@plt>:
   137b4:	add	ip, pc, #0, 12
   137b8:	add	ip, ip, #569344	; 0x8b000
   137bc:	ldr	pc, [ip, #2440]!	; 0x988

000137c0 <bfd_set_error@plt>:
   137c0:	add	ip, pc, #0, 12
   137c4:	add	ip, ip, #569344	; 0x8b000
   137c8:	ldr	pc, [ip, #2432]!	; 0x980

000137cc <xmalloc_set_program_name@plt>:
   137cc:	add	ip, pc, #0, 12
   137d0:	add	ip, ip, #569344	; 0x8b000
   137d4:	ldr	pc, [ip, #2424]!	; 0x978

000137d8 <lseek64@plt>:
   137d8:	add	ip, pc, #0, 12
   137dc:	add	ip, ip, #569344	; 0x8b000
   137e0:	ldr	pc, [ip, #2416]!	; 0x970

000137e4 <xstrdup@plt>:
   137e4:	add	ip, pc, #0, 12
   137e8:	add	ip, ip, #569344	; 0x8b000
   137ec:	ldr	pc, [ip, #2408]!	; 0x968

000137f0 <bfd_get_gp_size@plt>:
   137f0:	add	ip, pc, #0, 12
   137f4:	add	ip, ip, #569344	; 0x8b000
   137f8:	ldr	pc, [ip, #2400]!	; 0x960

000137fc <bfd_elf32_arm_use_long_plt@plt>:
   137fc:	add	ip, pc, #0, 12
   13800:	add	ip, ip, #569344	; 0x8b000
   13804:	ldr	pc, [ip, #2392]!	; 0x958

00013808 <bfd_elf32_arm_keep_private_stub_output_sections@plt>:
   13808:	add	ip, pc, #0, 12
   1380c:	add	ip, ip, #569344	; 0x8b000
   13810:	ldr	pc, [ip, #2384]!	; 0x950

00013814 <strcpy@plt>:
   13814:	add	ip, pc, #0, 12
   13818:	add	ip, ip, #569344	; 0x8b000
   1381c:	ldr	pc, [ip, #2376]!	; 0x948

00013820 <dlopen@plt>:
   13820:	add	ip, pc, #0, 12
   13824:	add	ip, ip, #569344	; 0x8b000
   13828:	ldr	pc, [ip, #2368]!	; 0x940

0001382c <fread@plt>:
   1382c:	add	ip, pc, #0, 12
   13830:	add	ip, ip, #569344	; 0x8b000
   13834:	ldr	pc, [ip, #2360]!	; 0x938

00013838 <bfd_elf32_arm_vfp11_fix_veneer_locations@plt>:
   13838:	add	ip, pc, #0, 12
   1383c:	add	ip, ip, #569344	; 0x8b000
   13840:	ldr	pc, [ip, #2352]!	; 0x930

00013844 <bfd_get_section_by_name@plt>:
   13844:	add	ip, pc, #0, 12
   13848:	add	ip, ip, #569344	; 0x8b000
   1384c:	ldr	pc, [ip, #2344]!	; 0x928

00013850 <bfd_elf_get_needed_list@plt>:
   13850:	add	ip, pc, #0, 12
   13854:	add	ip, ip, #569344	; 0x8b000
   13858:	ldr	pc, [ip, #2336]!	; 0x920

0001385c <bfd_elf_discard_info@plt>:
   1385c:	add	ip, pc, #0, 12
   13860:	add	ip, ip, #569344	; 0x8b000
   13864:	ldr	pc, [ip, #2328]!	; 0x918

00013868 <bfd_create@plt>:
   13868:	add	ip, pc, #0, 12
   1386c:	add	ip, ip, #569344	; 0x8b000
   13870:	ldr	pc, [ip, #2320]!	; 0x910

00013874 <bfd_link_add_undef@plt>:
   13874:	add	ip, pc, #0, 12
   13878:	add	ip, ip, #569344	; 0x8b000
   1387c:	ldr	pc, [ip, #2312]!	; 0x908

00013880 <bfd_link_hash_lookup@plt>:
   13880:	add	ip, pc, #0, 12
   13884:	add	ip, ip, #569344	; 0x8b000
   13888:	ldr	pc, [ip, #2304]!	; 0x900

0001388c <bfd_elf32_arm_get_bfd_for_interworking@plt>:
   1388c:	add	ip, pc, #0, 12
   13890:	add	ip, ip, #569344	; 0x8b000
   13894:	ldr	pc, [ip, #2296]!	; 0x8f8

00013898 <bfd_init@plt>:
   13898:	add	ip, pc, #0, 12
   1389c:	add	ip, ip, #569344	; 0x8b000
   138a0:	ldr	pc, [ip, #2288]!	; 0x8f0

000138a4 <fnmatch@plt>:
   138a4:	add	ip, pc, #0, 12
   138a8:	add	ip, ip, #569344	; 0x8b000
   138ac:	ldr	pc, [ip, #2280]!	; 0x8e8

000138b0 <bfd_hash_table_init_n@plt>:
   138b0:	add	ip, pc, #0, 12
   138b4:	add	ip, ip, #569344	; 0x8b000
   138b8:	ldr	pc, [ip, #2272]!	; 0x8e0

000138bc <lbasename@plt>:
   138bc:	add	ip, pc, #0, 12
   138c0:	add	ip, ip, #569344	; 0x8b000
   138c4:	ldr	pc, [ip, #2264]!	; 0x8d8

000138c8 <open64@plt>:
   138c8:	add	ip, pc, #0, 12
   138cc:	add	ip, ip, #569344	; 0x8b000
   138d0:	ldr	pc, [ip, #2256]!	; 0x8d0

000138d4 <bfd_printable_name@plt>:
   138d4:	add	ip, pc, #0, 12
   138d8:	add	ip, ip, #569344	; 0x8b000
   138dc:	ldr	pc, [ip, #2248]!	; 0x8c8

000138e0 <bfd_get_arch_info@plt>:
   138e0:	add	ip, pc, #0, 12
   138e4:	add	ip, ip, #569344	; 0x8b000
   138e8:	ldr	pc, [ip, #2240]!	; 0x8c0

000138ec <bfd_set_error_handler@plt>:
   138ec:	add	ip, pc, #0, 12
   138f0:	add	ip, ip, #569344	; 0x8b000
   138f4:	ldr	pc, [ip, #2232]!	; 0x8b8

000138f8 <getenv@plt>:
   138f8:	add	ip, pc, #0, 12
   138fc:	add	ip, ip, #569344	; 0x8b000
   13900:	ldr	pc, [ip, #2224]!	; 0x8b0

00013904 <bfd_emul_set_commonpagesize@plt>:
   13904:	add	ip, pc, #0, 12
   13908:	add	ip, ip, #569344	; 0x8b000
   1390c:	ldr	pc, [ip, #2216]!	; 0x8a8

00013910 <__gnu_Unwind_Find_exidx@plt>:
   13910:	add	ip, pc, #0, 12
   13914:	add	ip, ip, #569344	; 0x8b000
   13918:	ldr	pc, [ip, #2208]!	; 0x8a0

0001391c <puts@plt>:
   1391c:	add	ip, pc, #0, 12
   13920:	add	ip, ip, #569344	; 0x8b000
   13924:	ldr	pc, [ip, #2200]!	; 0x898

00013928 <bfd_hash_allocate@plt>:
   13928:	add	ip, pc, #0, 12
   1392c:	add	ip, ip, #569344	; 0x8b000
   13930:	ldr	pc, [ip, #2192]!	; 0x890

00013934 <bfd_elf32_arm_set_stm32l4xx_fix@plt>:
   13934:	add	ip, pc, #0, 12
   13938:	add	ip, ip, #569344	; 0x8b000
   1393c:	ldr	pc, [ip, #2184]!	; 0x888

00013940 <bfd_set_symtab@plt>:
   13940:	add	ip, pc, #0, 12
   13944:	add	ip, ip, #569344	; 0x8b000
   13948:	ldr	pc, [ip, #2176]!	; 0x880

0001394c <malloc@plt>:
   1394c:	add	ip, pc, #0, 12
   13950:	add	ip, ip, #569344	; 0x8b000
   13954:	ldr	pc, [ip, #2168]!	; 0x878

00013958 <__cxa_begin_cleanup@plt>:
   13958:	add	ip, pc, #0, 12
   1395c:	add	ip, ip, #569344	; 0x8b000
   13960:	ldr	pc, [ip, #2160]!	; 0x870

00013964 <__libc_start_main@plt>:
   13964:	add	ip, pc, #0, 12
   13968:	add	ip, ip, #569344	; 0x8b000
   1396c:	ldr	pc, [ip, #2152]!	; 0x868

00013970 <htab_find_slot@plt>:
   13970:	add	ip, pc, #0, 12
   13974:	add	ip, ip, #569344	; 0x8b000
   13978:	ldr	pc, [ip, #2144]!	; 0x860

0001397c <bfd_elf32_arm_vfp11_erratum_scan@plt>:
   1397c:	add	ip, pc, #0, 12
   13980:	add	ip, ip, #569344	; 0x8b000
   13984:	ldr	pc, [ip, #2136]!	; 0x858

00013988 <bfd_elf32_arm_process_before_allocation@plt>:
   13988:	add	ip, pc, #0, 12
   1398c:	add	ip, ip, #569344	; 0x8b000
   13990:	ldr	pc, [ip, #2128]!	; 0x850

00013994 <__gmon_start__@plt>:
   13994:	add	ip, pc, #0, 12
   13998:	add	ip, ip, #569344	; 0x8b000
   1399c:	ldr	pc, [ip, #2120]!	; 0x848

000139a0 <bfd_set_format@plt>:
   139a0:	add	ip, pc, #0, 12
   139a4:	add	ip, ip, #569344	; 0x8b000
   139a8:	ldr	pc, [ip, #2112]!	; 0x840

000139ac <getopt_long@plt>:
   139ac:	add	ip, pc, #0, 12
   139b0:	add	ip, ip, #569344	; 0x8b000
   139b4:	ldr	pc, [ip, #2104]!	; 0x838

000139b8 <bfd_octets_per_byte@plt>:
   139b8:	add	ip, pc, #0, 12
   139bc:	add	ip, ip, #569344	; 0x8b000
   139c0:	ldr	pc, [ip, #2096]!	; 0x830

000139c4 <bfd_bwrite@plt>:
   139c4:	add	ip, pc, #0, 12
   139c8:	add	ip, ip, #569344	; 0x8b000
   139cc:	ldr	pc, [ip, #2088]!	; 0x828

000139d0 <exit@plt>:
   139d0:	add	ip, pc, #0, 12
   139d4:	add	ip, ip, #569344	; 0x8b000
   139d8:	ldr	pc, [ip, #2080]!	; 0x820

000139dc <feof@plt>:
   139dc:	add	ip, pc, #0, 12
   139e0:	add	ip, ip, #569344	; 0x8b000
   139e4:	ldr	pc, [ip, #2072]!	; 0x818

000139e8 <__cxa_type_match@plt>:
   139e8:	add	ip, pc, #0, 12
   139ec:	add	ip, ip, #569344	; 0x8b000
   139f0:	ldr	pc, [ip, #2064]!	; 0x810

000139f4 <bfd_hash_lookup@plt>:
   139f4:	add	ip, pc, #0, 12
   139f8:	add	ip, ip, #569344	; 0x8b000
   139fc:	ldr	pc, [ip, #2056]!	; 0x808

00013a00 <bfd_record_phdr@plt>:
   13a00:	add	ip, pc, #0, 12
   13a04:	add	ip, ip, #569344	; 0x8b000
   13a08:	ldr	pc, [ip, #2048]!	; 0x800

00013a0c <bfd_elf_get_bfd_needed_list@plt>:
   13a0c:	add	ip, pc, #0, 12
   13a10:	add	ip, ip, #569344	; 0x8b000
   13a14:	ldr	pc, [ip, #2040]!	; 0x7f8

00013a18 <strtoul@plt>:
   13a18:	add	ip, pc, #0, 12
   13a1c:	add	ip, ip, #569344	; 0x8b000
   13a20:	ldr	pc, [ip, #2032]!	; 0x7f0

00013a24 <strlen@plt>:
   13a24:	add	ip, pc, #0, 12
   13a28:	add	ip, ip, #569344	; 0x8b000
   13a2c:	ldr	pc, [ip, #2024]!	; 0x7e8

00013a30 <bfd_close_all_done@plt>:
   13a30:	add	ip, pc, #0, 12
   13a34:	add	ip, ip, #569344	; 0x8b000
   13a38:	ldr	pc, [ip, #2016]!	; 0x7e0

00013a3c <bfd_elf_set_dyn_lib_class@plt>:
   13a3c:	add	ip, pc, #0, 12
   13a40:	add	ip, ip, #569344	; 0x8b000
   13a44:	ldr	pc, [ip, #2008]!	; 0x7d8

00013a48 <strchr@plt>:
   13a48:	add	ip, pc, #0, 12
   13a4c:	add	ip, ip, #569344	; 0x8b000
   13a50:	ldr	pc, [ip, #2000]!	; 0x7d0

00013a54 <bfd_hide_sym_by_version@plt>:
   13a54:	add	ip, pc, #0, 12
   13a58:	add	ip, ip, #569344	; 0x8b000
   13a5c:	ldr	pc, [ip, #1992]!	; 0x7c8

00013a60 <bfd_get_arch@plt>:
   13a60:	add	ip, pc, #0, 12
   13a64:	add	ip, ip, #569344	; 0x8b000
   13a68:	ldr	pc, [ip, #1984]!	; 0x7c0

00013a6c <bfd_putl32@plt>:
   13a6c:	add	ip, pc, #0, 12
   13a70:	add	ip, ip, #569344	; 0x8b000
   13a74:	ldr	pc, [ip, #1976]!	; 0x7b8

00013a78 <getpagesize@plt>:
   13a78:	add	ip, pc, #0, 12
   13a7c:	add	ip, ip, #569344	; 0x8b000
   13a80:	ldr	pc, [ip, #1968]!	; 0x7b0

00013a84 <bfd_getb16@plt>:
   13a84:	add	ip, pc, #0, 12
   13a88:	add	ip, ip, #569344	; 0x8b000
   13a8c:	ldr	pc, [ip, #1960]!	; 0x7a8

00013a90 <bfd_elf32_arm_init_maps@plt>:
   13a90:	add	ip, pc, #0, 12
   13a94:	add	ip, ip, #569344	; 0x8b000
   13a98:	ldr	pc, [ip, #1952]!	; 0x7a0

00013a9c <bfd_get_next_section_by_name@plt>:
   13a9c:	add	ip, pc, #0, 12
   13aa0:	add	ip, ip, #569344	; 0x8b000
   13aa4:	ldr	pc, [ip, #1944]!	; 0x798

00013aa8 <bfd_elf_parse_eh_frame_entries@plt>:
   13aa8:	add	ip, pc, #0, 12
   13aac:	add	ip, ip, #569344	; 0x8b000
   13ab0:	ldr	pc, [ip, #1936]!	; 0x790

00013ab4 <__errno_location@plt>:
   13ab4:	add	ip, pc, #0, 12
   13ab8:	add	ip, ip, #569344	; 0x8b000
   13abc:	ldr	pc, [ip, #1928]!	; 0x788

00013ac0 <unlink_if_ordinary@plt>:
   13ac0:	add	ip, pc, #0, 12
   13ac4:	add	ip, ip, #569344	; 0x8b000
   13ac8:	ldr	pc, [ip, #1920]!	; 0x780

00013acc <__sprintf_chk@plt>:
   13acc:	add	ip, pc, #0, 12
   13ad0:	add	ip, ip, #569344	; 0x8b000
   13ad4:	ldr	pc, [ip, #1912]!	; 0x778

00013ad8 <bfd_elf_size_dynamic_sections@plt>:
   13ad8:	add	ip, pc, #0, 12
   13adc:	add	ip, ip, #569344	; 0x8b000
   13ae0:	ldr	pc, [ip, #1904]!	; 0x770

00013ae4 <__strdup@plt>:
   13ae4:	add	ip, pc, #0, 12
   13ae8:	add	ip, ip, #569344	; 0x8b000
   13aec:	ldr	pc, [ip, #1896]!	; 0x768

00013af0 <memset@plt>:
   13af0:	add	ip, pc, #0, 12
   13af4:	add	ip, ip, #569344	; 0x8b000
   13af8:	ldr	pc, [ip, #1888]!	; 0x760

00013afc <putchar@plt>:
   13afc:	add	ip, pc, #0, 12
   13b00:	add	ip, ip, #569344	; 0x8b000
   13b04:	ldr	pc, [ip, #1880]!	; 0x758

00013b08 <bfd_get_unique_section_name@plt>:
   13b08:	add	ip, pc, #0, 12
   13b0c:	add	ip, ip, #569344	; 0x8b000
   13b10:	ldr	pc, [ip, #1872]!	; 0x750

00013b14 <_obstack_free@plt>:
   13b14:	add	ip, pc, #0, 12
   13b18:	add	ip, ip, #569344	; 0x8b000
   13b1c:	ldr	pc, [ip, #1864]!	; 0x748

00013b20 <bfd_elf32_arm_add_glue_sections_to_bfd@plt>:
   13b20:	add	ip, pc, #0, 12
   13b24:	add	ip, ip, #569344	; 0x8b000
   13b28:	ldr	pc, [ip, #1856]!	; 0x740

00013b2c <bfd_get_mach@plt>:
   13b2c:	add	ip, pc, #0, 12
   13b30:	add	ip, ip, #569344	; 0x8b000
   13b34:	ldr	pc, [ip, #1848]!	; 0x738

00013b38 <__printf_chk@plt>:
   13b38:	add	ip, pc, #0, 12
   13b3c:	add	ip, ip, #569344	; 0x8b000
   13b40:	ldr	pc, [ip, #1840]!	; 0x730

00013b44 <fileno@plt>:
   13b44:	add	ip, pc, #0, 12
   13b48:	add	ip, ip, #569344	; 0x8b000
   13b4c:	ldr	pc, [ip, #1832]!	; 0x728

00013b50 <bfd_link_hash_traverse@plt>:
   13b50:	add	ip, pc, #0, 12
   13b54:	add	ip, ip, #569344	; 0x8b000
   13b58:	ldr	pc, [ip, #1824]!	; 0x720

00013b5c <objalloc_free_block@plt>:
   13b5c:	add	ip, pc, #0, 12
   13b60:	add	ip, ip, #569344	; 0x8b000
   13b64:	ldr	pc, [ip, #1816]!	; 0x718

00013b68 <getopt_long_only@plt>:
   13b68:	add	ip, pc, #0, 12
   13b6c:	add	ip, ip, #569344	; 0x8b000
   13b70:	ldr	pc, [ip, #1808]!	; 0x710

00013b74 <__fprintf_chk@plt>:
   13b74:	add	ip, pc, #0, 12
   13b78:	add	ip, ip, #569344	; 0x8b000
   13b7c:	ldr	pc, [ip, #1800]!	; 0x708

00013b80 <fclose@plt>:
   13b80:	add	ip, pc, #0, 12
   13b84:	add	ip, ip, #569344	; 0x8b000
   13b88:	ldr	pc, [ip, #1792]!	; 0x700

00013b8c <bfd_set_gp_size@plt>:
   13b8c:	add	ip, pc, #0, 12
   13b90:	add	ip, ip, #569344	; 0x8b000
   13b94:	ldr	pc, [ip, #1784]!	; 0x6f8

00013b98 <bfd_openw@plt>:
   13b98:	add	ip, pc, #0, 12
   13b9c:	add	ip, ip, #569344	; 0x8b000
   13ba0:	ldr	pc, [ip, #1776]!	; 0x6f0

00013ba4 <bfd_make_section_anyway@plt>:
   13ba4:	add	ip, pc, #0, 12
   13ba8:	add	ip, ip, #569344	; 0x8b000
   13bac:	ldr	pc, [ip, #1768]!	; 0x6e8

00013bb0 <bfd_putl64@plt>:
   13bb0:	add	ip, pc, #0, 12
   13bb4:	add	ip, ip, #569344	; 0x8b000
   13bb8:	ldr	pc, [ip, #1760]!	; 0x6e0

00013bbc <bfd_set_error_program_name@plt>:
   13bbc:	add	ip, pc, #0, 12
   13bc0:	add	ip, ip, #569344	; 0x8b000
   13bc4:	ldr	pc, [ip, #1752]!	; 0x6d8

00013bc8 <munmap@plt>:
   13bc8:	add	ip, pc, #0, 12
   13bcc:	add	ip, ip, #569344	; 0x8b000
   13bd0:	ldr	pc, [ip, #1744]!	; 0x6d0

00013bd4 <glob64@plt>:
   13bd4:	add	ip, pc, #0, 12
   13bd8:	add	ip, ip, #569344	; 0x8b000
   13bdc:	ldr	pc, [ip, #1736]!	; 0x6c8

00013be0 <make_relative_prefix@plt>:
   13be0:	add	ip, pc, #0, 12
   13be4:	add	ip, ip, #569344	; 0x8b000
   13be8:	ldr	pc, [ip, #1728]!	; 0x6c0

00013bec <bfd_demangle@plt>:
   13bec:	add	ip, pc, #0, 12
   13bf0:	add	ip, ip, #569344	; 0x8b000
   13bf4:	ldr	pc, [ip, #1720]!	; 0x6b8

00013bf8 <setlocale@plt>:
   13bf8:	add	ip, pc, #0, 12
   13bfc:	add	ip, ip, #569344	; 0x8b000
   13c00:	ldr	pc, [ip, #1712]!	; 0x6b0

00013c04 <bfd_scan_arch@plt>:
   13c04:	add	ip, pc, #0, 12
   13c08:	add	ip, ip, #569344	; 0x8b000
   13c0c:	ldr	pc, [ip, #1704]!	; 0x6a8

00013c10 <bfd_cache_close_all@plt>:
   13c10:	add	ip, pc, #0, 12
   13c14:	add	ip, ip, #569344	; 0x8b000
   13c18:	ldr	pc, [ip, #1696]!	; 0x6a0

00013c1c <strrchr@plt>:
   13c1c:	add	ip, pc, #0, 12
   13c20:	add	ip, ip, #569344	; 0x8b000
   13c24:	ldr	pc, [ip, #1688]!	; 0x698

00013c28 <fputc@plt>:
   13c28:	add	ip, pc, #0, 12
   13c2c:	add	ip, ip, #569344	; 0x8b000
   13c30:	ldr	pc, [ip, #1680]!	; 0x690

00013c34 <globfree64@plt>:
   13c34:	add	ip, pc, #0, 12
   13c38:	add	ip, ip, #569344	; 0x8b000
   13c3c:	ldr	pc, [ip, #1672]!	; 0x688

00013c40 <xexit@plt>:
   13c40:	add	ip, pc, #0, 12
   13c44:	add	ip, ip, #569344	; 0x8b000
   13c48:	ldr	pc, [ip, #1664]!	; 0x680

00013c4c <bfd_close@plt>:
   13c4c:	add	ip, pc, #0, 12
   13c50:	add	ip, ip, #569344	; 0x8b000
   13c54:	ldr	pc, [ip, #1656]!	; 0x678

00013c58 <bfd_plugin_target_p@plt>:
   13c58:	add	ip, pc, #0, 12
   13c5c:	add	ip, ip, #569344	; 0x8b000
   13c60:	ldr	pc, [ip, #1648]!	; 0x670

00013c64 <elf32_arm_build_stubs@plt>:
   13c64:	add	ip, pc, #0, 12
   13c68:	add	ip, ip, #569344	; 0x8b000
   13c6c:	ldr	pc, [ip, #1640]!	; 0x668

00013c70 <bfd_getb32@plt>:
   13c70:	add	ip, pc, #0, 12
   13c74:	add	ip, ip, #569344	; 0x8b000
   13c78:	ldr	pc, [ip, #1632]!	; 0x660

00013c7c <bfd_check_format_matches@plt>:
   13c7c:	add	ip, pc, #0, 12
   13c80:	add	ip, ip, #569344	; 0x8b000
   13c84:	ldr	pc, [ip, #1624]!	; 0x658

00013c88 <bfd_putl16@plt>:
   13c88:	add	ip, pc, #0, 12
   13c8c:	add	ip, ip, #569344	; 0x8b000
   13c90:	ldr	pc, [ip, #1616]!	; 0x650

00013c94 <bfd_elf_size_dynsym_hash_dynstr@plt>:
   13c94:	add	ip, pc, #0, 12
   13c98:	add	ip, ip, #569344	; 0x8b000
   13c9c:	ldr	pc, [ip, #1608]!	; 0x648

00013ca0 <bfd_emul_set_maxpagesize@plt>:
   13ca0:	add	ip, pc, #0, 12
   13ca4:	add	ip, ip, #569344	; 0x8b000
   13ca8:	ldr	pc, [ip, #1600]!	; 0x640

00013cac <bfd_elf_set_dt_needed_name@plt>:
   13cac:	add	ip, pc, #0, 12
   13cb0:	add	ip, ip, #569344	; 0x8b000
   13cb4:	ldr	pc, [ip, #1592]!	; 0x638

00013cb8 <fopen64@plt>:
   13cb8:	add	ip, pc, #0, 12
   13cbc:	add	ip, ip, #569344	; 0x8b000
   13cc0:	ldr	pc, [ip, #1584]!	; 0x630

00013cc4 <bfd_errmsg@plt>:
   13cc4:	add	ip, pc, #0, 12
   13cc8:	add	ip, ip, #569344	; 0x8b000
   13ccc:	ldr	pc, [ip, #1576]!	; 0x628

00013cd0 <qsort@plt>:
   13cd0:	add	ip, pc, #0, 12
   13cd4:	add	ip, ip, #569344	; 0x8b000
   13cd8:	ldr	pc, [ip, #1568]!	; 0x620

00013cdc <bfd_canonicalize_reloc@plt>:
   13cdc:	add	ip, pc, #0, 12
   13ce0:	add	ip, ip, #569344	; 0x8b000
   13ce4:	ldr	pc, [ip, #1560]!	; 0x618

00013ce8 <bfd_elf32_arm_set_target_relocs@plt>:
   13ce8:	add	ip, pc, #0, 12
   13cec:	add	ip, ip, #569344	; 0x8b000
   13cf0:	ldr	pc, [ip, #1552]!	; 0x610

00013cf4 <htab_find@plt>:
   13cf4:	add	ip, pc, #0, 12
   13cf8:	add	ip, ip, #569344	; 0x8b000
   13cfc:	ldr	pc, [ip, #1544]!	; 0x608

00013d00 <bfd_elf32_arm_set_byteswap_code@plt>:
   13d00:	add	ip, pc, #0, 12
   13d04:	add	ip, ip, #569344	; 0x8b000
   13d08:	ldr	pc, [ip, #1536]!	; 0x600

00013d0c <bfd_set_assert_handler@plt>:
   13d0c:	add	ip, pc, #0, 12
   13d10:	add	ip, ip, #569344	; 0x8b000
   13d14:	ldr	pc, [ip, #1528]!	; 0x5f8

00013d18 <getrusage@plt>:
   13d18:	add	ip, pc, #0, 12
   13d1c:	add	ip, ip, #569344	; 0x8b000
   13d20:	ldr	pc, [ip, #1520]!	; 0x5f0

00013d24 <sbrk@plt>:
   13d24:	add	ip, pc, #0, 12
   13d28:	add	ip, ip, #569344	; 0x8b000
   13d2c:	ldr	pc, [ip, #1512]!	; 0x5e8

00013d30 <htab_create@plt>:
   13d30:	add	ip, pc, #0, 12
   13d34:	add	ip, ip, #569344	; 0x8b000
   13d38:	ldr	pc, [ip, #1504]!	; 0x5e0

00013d3c <bindtextdomain@plt>:
   13d3c:	add	ip, pc, #0, 12
   13d40:	add	ip, ip, #569344	; 0x8b000
   13d44:	ldr	pc, [ip, #1496]!	; 0x5d8

00013d48 <bfd_check_format@plt>:
   13d48:	add	ip, pc, #0, 12
   13d4c:	add	ip, ip, #569344	; 0x8b000
   13d50:	ldr	pc, [ip, #1488]!	; 0x5d0

00013d54 <bfd_openr_next_archived_file@plt>:
   13d54:	add	ip, pc, #0, 12
   13d58:	add	ip, ip, #569344	; 0x8b000
   13d5c:	ldr	pc, [ip, #1480]!	; 0x5c8

00013d60 <bfd_hash_table_init@plt>:
   13d60:	add	ip, pc, #0, 12
   13d64:	add	ip, ip, #569344	; 0x8b000
   13d68:	ldr	pc, [ip, #1472]!	; 0x5c0

00013d6c <bfd_get_reloc_upper_bound@plt>:
   13d6c:	add	ip, pc, #0, 12
   13d70:	add	ip, ip, #569344	; 0x8b000
   13d74:	ldr	pc, [ip, #1464]!	; 0x5b8

00013d78 <bfd_map_over_sections@plt>:
   13d78:	add	ip, pc, #0, 12
   13d7c:	add	ip, ip, #569344	; 0x8b000
   13d80:	ldr	pc, [ip, #1456]!	; 0x5b0

00013d84 <bfd_new_link_order@plt>:
   13d84:	add	ip, pc, #0, 12
   13d88:	add	ip, ip, #569344	; 0x8b000
   13d8c:	ldr	pc, [ip, #1448]!	; 0x5a8

00013d90 <bfd_set_start_address@plt>:
   13d90:	add	ip, pc, #0, 12
   13d94:	add	ip, ip, #569344	; 0x8b000
   13d98:	ldr	pc, [ip, #1440]!	; 0x5a0

00013d9c <bfd_section_already_linked_table_init@plt>:
   13d9c:	add	ip, pc, #0, 12
   13da0:	add	ip, ip, #569344	; 0x8b000
   13da4:	ldr	pc, [ip, #1432]!	; 0x598

00013da8 <_bfd_fix_excluded_sec_syms@plt>:
   13da8:	add	ip, pc, #0, 12
   13dac:	add	ip, ip, #569344	; 0x8b000
   13db0:	ldr	pc, [ip, #1424]!	; 0x590

00013db4 <bfd_link_check_relocs@plt>:
   13db4:	add	ip, pc, #0, 12
   13db8:	add	ip, ip, #569344	; 0x8b000
   13dbc:	ldr	pc, [ip, #1416]!	; 0x588

00013dc0 <fseek@plt>:
   13dc0:	add	ip, pc, #0, 12
   13dc4:	add	ip, ip, #569344	; 0x8b000
   13dc8:	ldr	pc, [ip, #1408]!	; 0x580

00013dcc <elf32_arm_size_stubs@plt>:
   13dcc:	add	ip, pc, #0, 12
   13dd0:	add	ip, ip, #569344	; 0x8b000
   13dd4:	ldr	pc, [ip, #1400]!	; 0x578

00013dd8 <bfd_section_already_linked_table_free@plt>:
   13dd8:	add	ip, pc, #0, 12
   13ddc:	add	ip, ip, #569344	; 0x8b000
   13de0:	ldr	pc, [ip, #1392]!	; 0x570

00013de4 <__xstat64@plt>:
   13de4:	add	ip, pc, #0, 12
   13de8:	add	ip, ip, #569344	; 0x8b000
   13dec:	ldr	pc, [ip, #1384]!	; 0x568

00013df0 <isatty@plt>:
   13df0:	add	ip, pc, #0, 12
   13df4:	add	ip, ip, #569344	; 0x8b000
   13df8:	ldr	pc, [ip, #1376]!	; 0x560

00013dfc <fputs@plt>:
   13dfc:	add	ip, pc, #0, 12
   13e00:	add	ip, ip, #569344	; 0x8b000
   13e04:	ldr	pc, [ip, #1368]!	; 0x558

00013e08 <strncmp@plt>:
   13e08:	add	ip, pc, #0, 12
   13e0c:	add	ip, ip, #569344	; 0x8b000
   13e10:	ldr	pc, [ip, #1360]!	; 0x550

00013e14 <abort@plt>:
   13e14:	add	ip, pc, #0, 12
   13e18:	add	ip, ip, #569344	; 0x8b000
   13e1c:	ldr	pc, [ip, #1352]!	; 0x548

00013e20 <elf32_arm_next_input_section@plt>:
   13e20:	add	ip, pc, #0, 12
   13e24:	add	ip, ip, #569344	; 0x8b000
   13e28:	ldr	pc, [ip, #1344]!	; 0x540

00013e2c <close@plt>:
   13e2c:	add	ip, pc, #0, 12
   13e30:	add	ip, ip, #569344	; 0x8b000
   13e34:	ldr	pc, [ip, #1336]!	; 0x538

00013e38 <xcalloc@plt>:
   13e38:	add	ip, pc, #0, 12
   13e3c:	add	ip, ip, #569344	; 0x8b000
   13e40:	ldr	pc, [ip, #1328]!	; 0x530

00013e44 <_bfd_elf_match_sections_by_type@plt>:
   13e44:	add	ip, pc, #0, 12
   13e48:	add	ip, ip, #569344	; 0x8b000
   13e4c:	ldr	pc, [ip, #1320]!	; 0x528

00013e50 <dlsym@plt>:
   13e50:	add	ip, pc, #0, 12
   13e54:	add	ip, ip, #569344	; 0x8b000
   13e58:	ldr	pc, [ip, #1312]!	; 0x520

00013e5c <bfd_set_arch_info@plt>:
   13e5c:	add	ip, pc, #0, 12
   13e60:	add	ip, ip, #569344	; 0x8b000
   13e64:	ldr	pc, [ip, #1304]!	; 0x518

00013e68 <_bfd_elf_link_hash_hide_symbol@plt>:
   13e68:	add	ip, pc, #0, 12
   13e6c:	add	ip, ip, #569344	; 0x8b000
   13e70:	ldr	pc, [ip, #1296]!	; 0x510

00013e74 <bfd_hash_set_default_size@plt>:
   13e74:	add	ip, pc, #0, 12
   13e78:	add	ip, ip, #569344	; 0x8b000
   13e7c:	ldr	pc, [ip, #1288]!	; 0x508

00013e80 <bfd_seek@plt>:
   13e80:	add	ip, pc, #0, 12
   13e84:	add	ip, ip, #569344	; 0x8b000
   13e88:	ldr	pc, [ip, #1280]!	; 0x500

00013e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt>:
   13e8c:	add	ip, pc, #0, 12
   13e90:	add	ip, ip, #569344	; 0x8b000
   13e94:	ldr	pc, [ip, #1272]!	; 0x4f8

Disassembly of section .text:

00013e98 <.text>:
   13e98:	movw	r3, #64972	; 0xfdcc
   13e9c:	movw	r2, #992	; 0x3e0
   13ea0:	movt	r3, #9
   13ea4:	movt	r2, #10
   13ea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   13eac:	movw	r1, #40508	; 0x9e3c
   13eb0:	ldm	r3, {r0, ip}
   13eb4:	sub	sp, sp, #8
   13eb8:	ldr	r9, [r3, #8]
   13ebc:	movw	sl, #32324	; 0x7e44
   13ec0:	ldr	r8, [r3, #12]
   13ec4:	movw	fp, #48692	; 0xbe34
   13ec8:	ldr	r7, [r2]
   13ecc:	movt	sl, #4
   13ed0:	movt	r1, #4
   13ed4:	movt	fp, #4
   13ed8:	movw	r6, #1774	; 0x6ee
   13edc:	str	ip, [sp, #4]
   13ee0:	ldr	r3, [sp, #4]
   13ee4:	mov	r2, r7
   13ee8:	cmp	r7, r3
   13eec:	bcs	13f70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4>
   13ef0:	ldrb	r3, [r7], #1
   13ef4:	cmp	r3, #0
   13ef8:	ldrbne	ip, [sl, r3, lsl #2]
   13efc:	add	r3, sl, r0, lsl #1
   13f00:	add	r3, r3, #1024	; 0x400
   13f04:	moveq	ip, #1
   13f08:	ldrsh	r3, [r3]
   13f0c:	cmp	r3, #0
   13f10:	movne	r8, r2
   13f14:	movne	r9, r0
   13f18:	add	r2, r1, r0, lsl #1
   13f1c:	add	r5, r1, ip, lsl #2
   13f20:	add	r3, r2, #340	; 0x154
   13f24:	sub	r2, r2, #3600	; 0xe10
   13f28:	sub	r2, r2, #8
   13f2c:	ldrsh	r4, [r3]
   13f30:	add	r4, r4, ip
   13f34:	lsl	r4, r4, #1
   13f38:	add	r3, r1, r4
   13f3c:	add	r3, r3, #3952	; 0xf70
   13f40:	add	r3, r3, #4
   13f44:	ldrsh	r3, [r3]
   13f48:	cmp	r3, r0
   13f4c:	beq	13f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd4>
   13f50:	ldrsh	r0, [r2]
   13f54:	cmp	r0, r6
   13f58:	ldrbgt	ip, [r5, #8]
   13f5c:	b	13f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c>
   13f60:	add	r4, fp, r4
   13f64:	add	r4, r4, #1648	; 0x670
   13f68:	ldrsh	r0, [r4, #4]
   13f6c:	b	13ee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x54>
   13f70:	movw	ip, #64972	; 0xfdcc
   13f74:	movt	ip, #9
   13f78:	str	r9, [ip, #8]
   13f7c:	str	r8, [ip, #12]
   13f80:	add	sp, sp, #8
   13f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   13f88:	bx	lr
   13f8c:	movw	r3, #172	; 0xac
   13f90:	movt	r3, #10
   13f94:	movw	ip, #63248	; 0xf710
   13f98:	movt	ip, #9
   13f9c:	ldr	r3, [r3]
   13fa0:	ldr	r2, [ip]
   13fa4:	push	{r4, r5, r6, lr}
   13fa8:	cmp	r3, #0
   13fac:	sub	sp, sp, #24
   13fb0:	mov	r6, r0
   13fb4:	mov	r4, r1
   13fb8:	mov	r5, ip
   13fbc:	str	r2, [sp, #20]
   13fc0:	beq	13ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x168>
   13fc4:	mov	r0, #12
   13fc8:	bl	137c0 <bfd_set_error@plt>
   13fcc:	movw	r3, #64972	; 0xfdcc
   13fd0:	movt	r3, #9
   13fd4:	movw	r0, #56288	; 0xdbe0
   13fd8:	movt	r0, #4
   13fdc:	ldr	r2, [r3, #36]	; 0x24
   13fe0:	cmp	r2, #0
   13fe4:	subne	r2, r2, #1
   13fe8:	add	r3, r3, r2, lsl #2
   13fec:	ldr	r1, [r3, #40]	; 0x28
   13ff0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   13ff4:	ldrb	r2, [r4]
   13ff8:	movw	lr, #63264	; 0xf720
   13ffc:	movt	lr, #9
   14000:	lsl	r3, r2, #1
   14004:	ldrh	r3, [lr, r3]
   14008:	tst	r3, #16
   1400c:	bne	14030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4>
   14010:	add	r0, sp, #12
   14014:	str	r2, [sp]
   14018:	movw	r3, #56320	; 0xdc00
   1401c:	mov	r1, #1
   14020:	movt	r3, #4
   14024:	mov	r2, #5
   14028:	mov	r4, r0
   1402c:	bl	13acc <__sprintf_chk@plt>
   14030:	mov	r2, r4
   14034:	mov	r3, r6
   14038:	movw	r0, #56328	; 0xdc08
   1403c:	mov	r1, #0
   14040:	movt	r0, #4
   14044:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   14048:	ldr	r2, [sp, #20]
   1404c:	ldr	r3, [r5]
   14050:	cmp	r2, r3
   14054:	beq	1405c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d0>
   14058:	bl	13694 <__stack_chk_fail@plt>
   1405c:	add	sp, sp, #24
   14060:	pop	{r4, r5, r6, pc}
   14064:	movw	r1, #63776	; 0xf920
   14068:	movt	r1, #9
   1406c:	push	{r3, lr}
   14070:	movw	r2, #22156	; 0x568c
   14074:	mov	r3, r0
   14078:	movt	r2, #5
   1407c:	ldr	r0, [r1]
   14080:	mov	r1, #1
   14084:	bl	13b74 <__fprintf_chk@plt>
   14088:	mov	r0, #2
   1408c:	bl	139d0 <exit@plt>
   14090:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14094:	movw	r3, #64972	; 0xfdcc
   14098:	movt	r3, #9
   1409c:	movw	r2, #992	; 0x3e0
   140a0:	movt	r2, #10
   140a4:	ldr	r8, [r3, #20]
   140a8:	mov	r4, r3
   140ac:	ldr	r5, [r3, #16]
   140b0:	mov	r6, r2
   140b4:	ldr	r0, [r3, #24]
   140b8:	ldr	r7, [r3, #4]
   140bc:	ldr	r3, [r5, r8, lsl #2]
   140c0:	add	r0, r0, #1
   140c4:	ldr	ip, [r2]
   140c8:	ldr	r1, [r3, #4]
   140cc:	add	r2, r1, r0
   140d0:	cmp	r7, r2
   140d4:	bls	140e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x258>
   140d8:	movw	r0, #56468	; 0xdc94
   140dc:	movt	r0, #4
   140e0:	bl	14064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8>
   140e4:	ldr	r3, [r3, #40]	; 0x28
   140e8:	rsb	r7, ip, r7
   140ec:	cmp	r3, #0
   140f0:	bne	14104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x278>
   140f4:	cmp	r7, #1
   140f8:	moveq	r0, #1
   140fc:	movne	r0, #2
   14100:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14104:	sub	r7, r7, #1
   14108:	mov	r3, #0
   1410c:	cmp	r3, r7
   14110:	ldrblt	r2, [ip, r3]
   14114:	strblt	r2, [r1, r3]
   14118:	addlt	r3, r3, #1
   1411c:	blt	1410c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280>
   14120:	ldr	r3, [r5, r8, lsl #2]
   14124:	ldr	r2, [r3, #44]	; 0x2c
   14128:	cmp	r2, #2
   1412c:	moveq	r2, #0
   14130:	streq	r2, [r4, #24]
   14134:	streq	r2, [r3, #16]
   14138:	beq	14268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3dc>
   1413c:	ldr	r2, [r3, #12]
   14140:	sub	r2, r2, #1
   14144:	rsb	r2, r7, r2
   14148:	cmp	r2, #0
   1414c:	bne	141cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x340>
   14150:	ldr	r0, [r4, #20]
   14154:	ldr	r1, [r4, #16]
   14158:	ldr	r3, [r4, #4]
   1415c:	ldr	r5, [r1, r0, lsl #2]
   14160:	ldr	r1, [r5, #20]
   14164:	ldr	r0, [r5, #4]
   14168:	cmp	r1, #0
   1416c:	streq	r2, [r5, #4]
   14170:	rsb	r8, r0, r3
   14174:	beq	1419c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x310>
   14178:	ldr	r3, [r5, #12]
   1417c:	lsls	r2, r3, #1
   14180:	strne	r2, [r5, #12]
   14184:	addeq	r3, r3, r3, lsr #3
   14188:	streq	r3, [r5, #12]
   1418c:	ldr	r1, [r5, #12]
   14190:	add	r1, r1, #2
   14194:	bl	13700 <realloc@plt>
   14198:	str	r0, [r5, #4]
   1419c:	ldr	r3, [r5, #4]
   141a0:	cmp	r3, #0
   141a4:	bne	141b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x328>
   141a8:	movw	r0, #56524	; 0xdccc
   141ac:	movt	r0, #4
   141b0:	bl	14064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8>
   141b4:	ldr	r1, [r4, #20]
   141b8:	add	r3, r3, r8
   141bc:	ldr	r2, [r4, #16]
   141c0:	str	r3, [r4, #4]
   141c4:	ldr	r3, [r2, r1, lsl #2]
   141c8:	b	1413c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0>
   141cc:	ldr	r1, [r4, #16]
   141d0:	cmp	r2, #8192	; 0x2000
   141d4:	movcc	r9, r2
   141d8:	movcs	r9, #8192	; 0x2000
   141dc:	ldr	r3, [r4, #20]
   141e0:	cmp	r1, #0
   141e4:	ldr	r3, [r1, r3, lsl #2]
   141e8:	moveq	r1, #0
   141ec:	movne	r1, r3
   141f0:	ldr	r0, [r3, #4]
   141f4:	ldr	r5, [r1]
   141f8:	add	r0, r0, r7
   141fc:	cmp	r5, #0
   14200:	beq	14254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c8>
   14204:	ldr	r3, [r4, #28]
   14208:	movw	r8, #64972	; 0xfdcc
   1420c:	movt	r8, #9
   14210:	cmp	r3, #0
   14214:	beq	14250 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c4>
   14218:	mov	r1, #1
   1421c:	mov	r2, r9
   14220:	bl	1382c <fread@plt>
   14224:	cmp	r0, r9
   14228:	mov	r5, r0
   1422c:	bge	14254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c8>
   14230:	ldr	r0, [r8, #28]
   14234:	bl	13598 <ferror@plt>
   14238:	cmp	r0, #0
   1423c:	beq	14254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c8>
   14240:	movw	r0, #56568	; 0xdcf8
   14244:	movt	r0, #4
   14248:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1424c:	b	14254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3c8>
   14250:	mov	r5, r3
   14254:	ldr	r2, [r4, #20]
   14258:	ldr	r3, [r4, #16]
   1425c:	str	r5, [r4, #24]
   14260:	ldr	r3, [r3, r2, lsl #2]
   14264:	str	r5, [r3, #16]
   14268:	ldr	r2, [r4, #24]
   1426c:	movw	r3, #64972	; 0xfdcc
   14270:	movt	r3, #9
   14274:	cmp	r2, #0
   14278:	movne	fp, #0
   1427c:	bne	142b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x424>
   14280:	cmp	r7, #0
   14284:	bne	14298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x40c>
   14288:	ldr	r0, [r3, #28]
   1428c:	mov	fp, #1
   14290:	bl	18108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x427c>
   14294:	b	142b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x424>
   14298:	ldr	r1, [r3, #20]
   1429c:	mov	r2, #2
   142a0:	ldr	r3, [r3, #16]
   142a4:	mov	fp, r2
   142a8:	ldr	r3, [r3, r1, lsl #2]
   142ac:	str	r2, [r3, #44]	; 0x2c
   142b0:	ldr	r8, [r4, #20]
   142b4:	ldr	r5, [r4, #16]
   142b8:	ldr	r1, [r4, #24]
   142bc:	ldr	sl, [r5, r8, lsl #2]
   142c0:	add	r9, r7, r1
   142c4:	ldr	r3, [sl, #12]
   142c8:	cmp	r9, r3
   142cc:	bls	142fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x470>
   142d0:	add	r1, r9, r1, lsr #1
   142d4:	ldr	r0, [sl, #4]
   142d8:	bl	13700 <realloc@plt>
   142dc:	str	r0, [sl, #4]
   142e0:	ldr	r3, [r5, r8, lsl #2]
   142e4:	ldr	r3, [r3, #4]
   142e8:	cmp	r3, #0
   142ec:	bne	142fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x470>
   142f0:	movw	r0, #56604	; 0xdd1c
   142f4:	movt	r0, #4
   142f8:	bl	14064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8>
   142fc:	ldr	r2, [r5, r8, lsl #2]
   14300:	mov	r3, #0
   14304:	str	r9, [r4, #24]
   14308:	mov	r0, fp
   1430c:	ldr	r2, [r2, #4]
   14310:	strb	r3, [r2, r9]
   14314:	ldr	r2, [r5, r8, lsl #2]
   14318:	ldr	r2, [r2, #4]
   1431c:	add	r9, r2, r9
   14320:	strb	r3, [r9, #1]
   14324:	ldr	r3, [r5, r8, lsl #2]
   14328:	ldr	r3, [r3, #4]
   1432c:	str	r3, [r6]
   14330:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14334:	push	{r4, r5, r6, r7, r8, lr}
   14338:	movw	r4, #64972	; 0xfdcc
   1433c:	movt	r4, #9
   14340:	ldrb	r3, [r4, #32]
   14344:	mov	r5, r4
   14348:	ldr	r6, [r4, #4]
   1434c:	cmp	r3, #0
   14350:	strb	r3, [r6]
   14354:	bne	143c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x53c>
   14358:	ldr	r0, [r4, #20]
   1435c:	ldr	r1, [r4, #16]
   14360:	ldr	r2, [r4, #24]
   14364:	ldr	r1, [r1, r0, lsl #2]
   14368:	ldr	r1, [r1, #4]
   1436c:	add	r2, r1, r2
   14370:	cmp	r6, r2
   14374:	bcc	143c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x53c>
   14378:	movw	r7, #992	; 0x3e0
   1437c:	movt	r7, #10
   14380:	add	r3, r6, #1
   14384:	str	r3, [r4, #4]
   14388:	ldr	r8, [r7]
   1438c:	bl	14090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x204>
   14390:	cmp	r0, #1
   14394:	beq	143ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x560>
   14398:	cmp	r0, #2
   1439c:	beq	143b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x52c>
   143a0:	cmp	r0, #0
   143a4:	ldreq	r3, [r7]
   143a8:	rsbeq	r6, r8, r6
   143ac:	addeq	r6, r3, r6
   143b0:	streq	r6, [r4, #4]
   143b4:	b	143c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x53c>
   143b8:	ldr	r0, [r4, #28]
   143bc:	bl	18108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x427c>
   143c0:	mvn	r0, #0
   143c4:	pop	{r4, r5, r6, r7, r8, pc}
   143c8:	ldr	r2, [r5, #4]
   143cc:	mov	r1, #0
   143d0:	mov	r3, r2
   143d4:	ldrb	r0, [r2]
   143d8:	strb	r1, [r3], #1
   143dc:	ldrb	r2, [r2, #1]
   143e0:	str	r3, [r5, #4]
   143e4:	strb	r2, [r5, #32]
   143e8:	pop	{r4, r5, r6, r7, r8, pc}
   143ec:	mvn	r0, #0
   143f0:	pop	{r4, r5, r6, r7, r8, pc}
   143f4:	push	{r4, lr}
   143f8:	movw	r4, #62396	; 0xf3bc
   143fc:	movt	r4, #9
   14400:	bl	14334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4a8>
   14404:	cmp	r0, #42	; 0x2a
   14408:	cmnne	r0, #1
   1440c:	beq	14428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x59c>
   14410:	cmp	r0, #10
   14414:	bne	14400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x574>
   14418:	ldr	r3, [r4]
   1441c:	add	r3, r3, #1
   14420:	str	r3, [r4]
   14424:	b	14400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x574>
   14428:	cmp	r0, #42	; 0x2a
   1442c:	bne	14444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5b8>
   14430:	bl	14334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4a8>
   14434:	cmp	r0, #42	; 0x2a
   14438:	beq	14430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5a4>
   1443c:	cmp	r0, #47	; 0x2f
   14440:	popeq	{r4, pc}
   14444:	cmp	r0, #10
   14448:	beq	14418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x58c>
   1444c:	cmn	r0, #1
   14450:	bne	14400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x574>
   14454:	movw	r0, #56652	; 0xdd4c
   14458:	movt	r0, #4
   1445c:	pop	{r4, lr}
   14460:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   14464:	push	{r4, r5, lr}
   14468:	mov	r4, r0
   1446c:	ldr	r3, [r0, #12]
   14470:	sub	sp, sp, #12
   14474:	cmp	r3, #3
   14478:	beq	14484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f8>
   1447c:	mov	r0, #0
   14480:	b	14540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6b4>
   14484:	ldr	r2, [r0]
   14488:	movw	r3, #259	; 0x103
   1448c:	cmp	r2, r3
   14490:	bne	1447c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f0>
   14494:	mov	r2, #0
   14498:	movw	r0, #124	; 0x7c
   1449c:	mov	r3, r2
   144a0:	movt	r0, #10
   144a4:	ldr	r1, [r4, #16]
   144a8:	bl	139f4 <bfd_hash_lookup@plt>
   144ac:	cmp	r0, #0
   144b0:	beq	1447c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f0>
   144b4:	ldrb	r3, [r0, #16]
   144b8:	tst	r3, #2
   144bc:	beq	1447c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f0>
   144c0:	movw	r2, #65520	; 0xfff0
   144c4:	movt	r2, #9
   144c8:	ubfx	r3, r3, #2, #1
   144cc:	ldr	r2, [r2]
   144d0:	and	r2, r2, #1
   144d4:	cmp	r3, r2
   144d8:	bne	1447c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f0>
   144dc:	movw	r1, #1088	; 0x440
   144e0:	movt	r1, #10
   144e4:	mov	r5, #0
   144e8:	mov	r2, #1
   144ec:	ldr	r0, [r1, #52]	; 0x34
   144f0:	mov	r3, r5
   144f4:	str	r5, [sp]
   144f8:	str	r2, [sp, #4]
   144fc:	ldr	r2, [r4, #16]
   14500:	bl	13508 <bfd_wrapped_link_hash_lookup@plt>
   14504:	cmp	r0, #0
   14508:	beq	14540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6b4>
   1450c:	ldrb	r3, [r0, #12]
   14510:	cmp	r3, #3
   14514:	bne	1447c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5f0>
   14518:	ldr	r2, [r0, #20]
   1451c:	ldr	r3, [pc, #36]	; 14548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6bc>
   14520:	cmp	r2, r3
   14524:	movne	r0, r5
   14528:	bne	14540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6b4>
   1452c:	ldr	r2, [r0, #24]
   14530:	ldr	r3, [r0, #28]
   14534:	orrs	r3, r2, r3
   14538:	movne	r0, #0
   1453c:	moveq	r0, #1
   14540:	add	sp, sp, #12
   14544:	pop	{r4, r5, pc}
   14548:			; <UNDEFINED> instruction: 0x0009fab8
   1454c:	movw	r3, #63248	; 0xf710
   14550:	movt	r3, #9
   14554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14558:	sub	sp, sp, #52	; 0x34
   1455c:	ldr	r3, [r3]
   14560:	movw	ip, #1460	; 0x5b4
   14564:	str	r1, [sp, #32]
   14568:	movt	ip, #10
   1456c:	str	r0, [sp, #36]	; 0x24
   14570:	movw	r6, #96	; 0x60
   14574:	str	ip, [sp, #12]
   14578:	movt	r6, #10
   1457c:	str	r3, [sp, #44]	; 0x2c
   14580:	bl	3f670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b7e4>
   14584:	str	r0, [sp, #24]
   14588:	mov	r0, #0
   1458c:	bl	13d24 <sbrk@plt>
   14590:	movw	r1, #21440	; 0x53c0
   14594:	movt	r1, #5
   14598:	str	r0, [sp, #28]
   1459c:	mov	r0, #5
   145a0:	bl	13bf8 <setlocale@plt>
   145a4:	movw	r1, #21440	; 0x53c0
   145a8:	mov	r0, #0
   145ac:	movt	r1, #5
   145b0:	bl	13bf8 <setlocale@plt>
   145b4:	movw	r0, #16772	; 0x4184
   145b8:	movw	r1, #16776	; 0x4188
   145bc:	movt	r0, #5
   145c0:	movt	r1, #5
   145c4:	bl	13d3c <bindtextdomain@plt>
   145c8:	movw	r0, #16772	; 0x4184
   145cc:	movt	r0, #5
   145d0:	bl	1373c <textdomain@plt>
   145d4:	ldr	r3, [sp, #32]
   145d8:	ldr	ip, [sp, #12]
   145dc:	ldr	r3, [r3]
   145e0:	mov	r0, r3
   145e4:	str	r3, [ip]
   145e8:	bl	137cc <xmalloc_set_program_name@plt>
   145ec:	add	r1, sp, #32
   145f0:	add	r0, sp, #36	; 0x24
   145f4:	bl	3f36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4e0>
   145f8:	bl	13898 <bfd_init@plt>
   145fc:	ldr	ip, [sp, #12]
   14600:	ldr	r0, [ip]
   14604:	bl	13bbc <bfd_set_error_program_name@plt>
   14608:	movw	r0, #41880	; 0xa398
   1460c:	movt	r0, #2
   14610:	bl	13d0c <bfd_set_assert_handler@plt>
   14614:	str	r0, [r6]
   14618:	movw	r0, #43252	; 0xa8f4
   1461c:	movt	r0, #2
   14620:	bl	3f734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b8a8>
   14624:	ldr	r8, [sp, #36]	; 0x24
   14628:	ldr	r5, [sp, #32]
   1462c:	cmp	r8, #1
   14630:	ble	14670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e4>
   14634:	mov	r4, #1
   14638:	b	14648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7bc>
   1463c:	add	r4, r4, #1
   14640:	cmp	r4, r8
   14644:	beq	14670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e4>
   14648:	ldr	r7, [r5, #4]!
   1464c:	movw	r1, #16796	; 0x419c
   14650:	mov	r2, #10
   14654:	movt	r1, #5
   14658:	mov	r0, r7
   1465c:	bl	13e08 <strncmp@plt>
   14660:	cmp	r0, #0
   14664:	bne	1463c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7b0>
   14668:	add	r0, r7, #10
   1466c:	b	14678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7ec>
   14670:	movw	r0, #11128	; 0x2b78
   14674:	movt	r0, #5
   14678:	movw	r3, #1240	; 0x4d8
   1467c:	movt	r3, #10
   14680:	str	r0, [r3]
   14684:	ldrb	r3, [r0]
   14688:	cmp	r3, #0
   1468c:	bne	14b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcd8>
   14690:	movw	r3, #1472	; 0x5c0
   14694:	movt	r3, #10
   14698:	ldr	r0, [r3]
   1469c:	cmp	r0, #0
   146a0:	beq	14f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1104>
   146a4:	bl	13a24 <strlen@plt>
   146a8:	movw	r3, #1080	; 0x438
   146ac:	movt	r3, #10
   146b0:	str	r0, [r3]
   146b4:	movw	r0, #16808	; 0x41a8
   146b8:	movt	r0, #5
   146bc:	bl	13550 <bfd_set_default_target@plt>
   146c0:	cmp	r0, #0
   146c4:	bne	146ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x860>
   146c8:	mov	r2, #5
   146cc:	movw	r1, #16840	; 0x41c8
   146d0:	movt	r1, #5
   146d4:	bl	13688 <dcgettext@plt>
   146d8:	movw	r1, #16808	; 0x41a8
   146dc:	movt	r1, #5
   146e0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   146e4:	mov	r0, #1
   146e8:	bl	13c40 <xexit@plt>
   146ec:	movw	r5, #1336	; 0x538
   146f0:	movw	r4, #1088	; 0x440
   146f4:	movt	r5, #10
   146f8:	movt	r4, #10
   146fc:	movw	ip, #1244	; 0x4dc
   14700:	movt	ip, #10
   14704:	movw	r0, #16888	; 0x41f8
   14708:	movt	r0, #5
   1470c:	mov	fp, #1
   14710:	mvn	r7, #0
   14714:	mvn	r2, #0
   14718:	mvn	r3, #0
   1471c:	mov	r8, #58	; 0x3a
   14720:	strd	r2, [r5, #88]	; 0x58
   14724:	strb	r7, [ip, #28]
   14728:	str	ip, [sp, #16]
   1472c:	strb	r8, [r5, #72]	; 0x48
   14730:	str	r7, [r5, #84]	; 0x54
   14734:	str	r7, [r4, #24]
   14738:	str	fp, [ip, #20]
   1473c:	str	fp, [ip, #24]
   14740:	str	fp, [r5, #12]
   14744:	str	fp, [r5, #4]
   14748:	str	fp, [r5]
   1474c:	str	fp, [r5, #48]	; 0x30
   14750:	bl	138f8 <getenv@plt>
   14754:	ldr	r2, [pc, #2600]	; 15184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f8>
   14758:	add	ip, r4, #56	; 0x38
   1475c:	ldrb	r1, [r4, #5]
   14760:	movw	r3, #1076	; 0x434
   14764:	str	ip, [r4, #60]	; 0x3c
   14768:	movt	r3, #10
   1476c:	ldrb	ip, [r4, #1]
   14770:	orr	r1, r1, #2
   14774:	str	r2, [r4, #28]
   14778:	movw	lr, #16908	; 0x420c
   1477c:	strb	r1, [r4, #5]
   14780:	movt	lr, #5
   14784:	ldrb	r1, [r4, #4]
   14788:	movw	r2, #16916	; 0x4214
   1478c:	str	lr, [r4, #76]	; 0x4c
   14790:	movt	r2, #5
   14794:	ldrb	lr, [r4, #3]
   14798:	orr	r1, r1, #8
   1479c:	str	r2, [r4, #80]	; 0x50
   147a0:	orr	ip, ip, #2
   147a4:	strb	r8, [r4, #9]
   147a8:	str	r7, [r4, #92]	; 0x5c
   147ac:	str	r7, [r4, #96]	; 0x60
   147b0:	str	r7, [r4, #100]	; 0x64
   147b4:	strb	r1, [r4, #4]
   147b8:	mov	r1, #5
   147bc:	strb	ip, [r4, #1]
   147c0:	orr	ip, lr, #129	; 0x81
   147c4:	str	r1, [r4, #108]	; 0x6c
   147c8:	strb	ip, [r4, #3]
   147cc:	str	fp, [r4, #84]	; 0x54
   147d0:	rsbs	r2, r0, #1
   147d4:	movw	r0, #21440	; 0x53c0
   147d8:	movt	r0, #5
   147dc:	movcc	r2, #0
   147e0:	str	r2, [r3]
   147e4:	bl	310a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d21c>
   147e8:	movw	r0, #16924	; 0x421c
   147ec:	movt	r0, #5
   147f0:	ldr	r7, [sp, #36]	; 0x24
   147f4:	ldr	r8, [sp, #32]
   147f8:	bl	138f8 <getenv@plt>
   147fc:	movw	r3, #16752	; 0x4170
   14800:	movt	r3, #5
   14804:	cmp	r0, #0
   14808:	moveq	r0, r3
   1480c:	cmp	r7, fp
   14810:	str	r0, [sp, #20]
   14814:	ble	149a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb14>
   14818:	mov	r9, fp
   1481c:	b	14848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9bc>
   14820:	sub	r3, r7, #1
   14824:	cmp	r3, r9
   14828:	ble	14b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc0>
   1482c:	add	sl, r8, sl
   14830:	add	r9, r9, #1
   14834:	ldr	sl, [sl, #4]
   14838:	str	sl, [sp, #20]
   1483c:	add	r9, r9, #1
   14840:	cmp	r7, r9
   14844:	ble	149a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb14>
   14848:	ldr	fp, [r8, r9, lsl #2]
   1484c:	mov	r2, #2
   14850:	movw	r1, #16936	; 0x4228
   14854:	movt	r1, #5
   14858:	lsl	sl, r9, r2
   1485c:	mov	r0, fp
   14860:	bl	13e08 <strncmp@plt>
   14864:	cmp	r0, #0
   14868:	bne	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   1486c:	ldrb	r2, [fp, #2]
   14870:	cmp	r2, #0
   14874:	beq	14820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x994>
   14878:	movw	r1, #16972	; 0x424c
   1487c:	mov	r0, fp
   14880:	movt	r1, #5
   14884:	bl	13490 <strcmp@plt>
   14888:	cmp	r0, #0
   1488c:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   14890:	movw	r1, #16980	; 0x4254
   14894:	mov	r0, fp
   14898:	movt	r1, #5
   1489c:	bl	13490 <strcmp@plt>
   148a0:	cmp	r0, #0
   148a4:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   148a8:	movw	r1, #16988	; 0x425c
   148ac:	mov	r0, fp
   148b0:	movt	r1, #5
   148b4:	bl	13490 <strcmp@plt>
   148b8:	cmp	r0, #0
   148bc:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   148c0:	movw	r1, #16996	; 0x4264
   148c4:	mov	r0, fp
   148c8:	movt	r1, #5
   148cc:	bl	13490 <strcmp@plt>
   148d0:	cmp	r0, #0
   148d4:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   148d8:	movw	r1, #17004	; 0x426c
   148dc:	mov	r0, fp
   148e0:	movt	r1, #5
   148e4:	bl	13490 <strcmp@plt>
   148e8:	cmp	r0, #0
   148ec:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   148f0:	movw	r1, #17012	; 0x4274
   148f4:	mov	r0, fp
   148f8:	movt	r1, #5
   148fc:	bl	13490 <strcmp@plt>
   14900:	cmp	r0, #0
   14904:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   14908:	movw	r1, #17020	; 0x427c
   1490c:	mov	r0, fp
   14910:	movt	r1, #5
   14914:	bl	13490 <strcmp@plt>
   14918:	cmp	r0, #0
   1491c:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   14920:	movw	r1, #17032	; 0x4288
   14924:	mov	r0, fp
   14928:	movt	r1, #5
   1492c:	bl	13490 <strcmp@plt>
   14930:	cmp	r0, #0
   14934:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   14938:	movw	r1, #17044	; 0x4294
   1493c:	mov	r0, fp
   14940:	movt	r1, #5
   14944:	bl	13490 <strcmp@plt>
   14948:	cmp	r0, #0
   1494c:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   14950:	movw	r1, #17052	; 0x429c
   14954:	mov	r0, fp
   14958:	movt	r1, #5
   1495c:	bl	13490 <strcmp@plt>
   14960:	cmp	r0, #0
   14964:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   14968:	movw	r1, #17064	; 0x42a8
   1496c:	mov	r0, fp
   14970:	movt	r1, #5
   14974:	bl	13490 <strcmp@plt>
   14978:	cmp	r0, #0
   1497c:	beq	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   14980:	mov	r0, fp
   14984:	movw	r1, #17076	; 0x42b4
   14988:	movt	r1, #5
   1498c:	bl	13490 <strcmp@plt>
   14990:	cmp	r0, #0
   14994:	addne	fp, fp, #2
   14998:	strne	fp, [sp, #20]
   1499c:	b	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   149a0:	ldr	r0, [sp, #20]
   149a4:	movw	r7, #1456	; 0x5b0
   149a8:	bl	2f390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b504>
   149ac:	ldr	r1, [sp, #32]
   149b0:	ldr	r0, [sp, #36]	; 0x24
   149b4:	movt	r7, #10
   149b8:	bl	2f15c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b2d0>
   149bc:	movw	r8, #65428	; 0xff94
   149c0:	movt	r8, #9
   149c4:	str	r0, [r7]
   149c8:	bl	13568 <bfd_emul_get_maxpagesize@plt>
   149cc:	strd	r0, [r5, #104]	; 0x68
   149d0:	ldr	r0, [r7]
   149d4:	bl	13430 <bfd_emul_get_commonpagesize@plt>
   149d8:	strd	r0, [r5, #112]	; 0x70
   149dc:	bl	22688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe7fc>
   149e0:	bl	2ee54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1afc8>
   149e4:	bl	2ef0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b080>
   149e8:	ldr	r0, [sp, #36]	; 0x24
   149ec:	ldr	r1, [sp, #32]
   149f0:	mov	r3, #0
   149f4:	str	r3, [r8]
   149f8:	bl	1a6ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6860>
   149fc:	ldr	r0, [r5, #96]	; 0x60
   14a00:	cmp	r0, #0
   14a04:	bne	14cf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6c>
   14a08:	bl	33340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f4b4>
   14a0c:	movw	fp, #96	; 0x60
   14a10:	bl	2efb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b128>
   14a14:	ldr	r3, [r6, #8]
   14a18:	movt	fp, #10
   14a1c:	cmp	r3, #0
   14a20:	beq	14f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1094>
   14a24:	movw	r3, #1464	; 0x5b8
   14a28:	movt	r3, #10
   14a2c:	ldr	r3, [r3]
   14a30:	cmp	r3, #0
   14a34:	beq	14af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc68>
   14a38:	ldr	r0, [r6, #8]
   14a3c:	cmp	r0, #0
   14a40:	movwne	r1, #17108	; 0x42d4
   14a44:	movne	r2, #5
   14a48:	movweq	r1, #17140	; 0x42f4
   14a4c:	moveq	r2, #5
   14a50:	movne	r0, #0
   14a54:	movtne	r1, #5
   14a58:	movteq	r1, #5
   14a5c:	bl	13688 <dcgettext@plt>
   14a60:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   14a64:	movw	r0, #17172	; 0x4314
   14a68:	movt	r0, #5
   14a6c:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   14a70:	ldr	r2, [r6, #8]
   14a74:	movw	r3, #96	; 0x60
   14a78:	movt	r3, #10
   14a7c:	cmp	r2, #0
   14a80:	beq	15094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1208>
   14a84:	movw	r0, #8193	; 0x2001
   14a88:	str	r3, [sp, #8]
   14a8c:	bl	137b4 <xmalloc@plt>
   14a90:	ldr	r3, [sp, #8]
   14a94:	mov	fp, #0
   14a98:	mov	r7, r0
   14a9c:	ldr	r0, [r3, #8]
   14aa0:	bl	136b8 <rewind@plt>
   14aa4:	b	14ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc28>
   14aa8:	mov	r0, r7
   14aac:	strb	fp, [r7, r2]
   14ab0:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   14ab4:	mov	r2, #8192	; 0x2000
   14ab8:	ldr	r3, [r6, #8]
   14abc:	mov	r0, r7
   14ac0:	mov	r1, #1
   14ac4:	bl	1382c <fread@plt>
   14ac8:	movw	r3, #96	; 0x60
   14acc:	movt	r3, #10
   14ad0:	subs	r2, r0, #0
   14ad4:	bne	14aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc1c>
   14ad8:	ldr	r0, [r3, #8]
   14adc:	bl	136b8 <rewind@plt>
   14ae0:	mov	r0, r7
   14ae4:	bl	13574 <free@plt>
   14ae8:	movw	r0, #17172	; 0x4314
   14aec:	movt	r0, #5
   14af0:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   14af4:	ldr	ip, [sp, #16]
   14af8:	ldr	r3, [ip, #36]	; 0x24
   14afc:	cmp	r3, #0
   14b00:	bne	14ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe54>
   14b04:	bl	25578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116ec>
   14b08:	ldr	r3, [sp, #36]	; 0x24
   14b0c:	cmp	r3, #2
   14b10:	beq	14d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe74>
   14b14:	ldr	r3, [r8]
   14b18:	cmp	r3, #0
   14b1c:	bne	14b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd00>
   14b20:	movw	r3, #1072	; 0x430
   14b24:	movt	r3, #10
   14b28:	ldr	r3, [r3]
   14b2c:	cmp	r3, #0
   14b30:	bne	14b44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb8>
   14b34:	ldr	ip, [sp, #16]
   14b38:	ldr	r0, [ip, #36]	; 0x24
   14b3c:	cmp	r0, #0
   14b40:	beq	14b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcec>
   14b44:	mov	r0, #0
   14b48:	bl	13c40 <xexit@plt>
   14b4c:	mov	r2, #5
   14b50:	movw	r1, #16940	; 0x422c
   14b54:	movt	r1, #5
   14b58:	bl	13688 <dcgettext@plt>
   14b5c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   14b60:	b	1483c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b0>
   14b64:	bl	13610 <lrealpath@plt>
   14b68:	movw	r3, #1472	; 0x5c0
   14b6c:	movt	r3, #10
   14b70:	str	r0, [r3]
   14b74:	b	14698 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x80c>
   14b78:	movw	r1, #17228	; 0x434c
   14b7c:	mov	r2, #5
   14b80:	movt	r1, #5
   14b84:	bl	13688 <dcgettext@plt>
   14b88:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   14b8c:	movw	r7, #1476	; 0x5c4
   14b90:	movt	r7, #10
   14b94:	ldr	r3, [r7]
   14b98:	cmp	r3, #0
   14b9c:	bne	14ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106c>
   14ba0:	bl	2eef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b064>
   14ba4:	ldr	r0, [r5, #76]	; 0x4c
   14ba8:	movw	r3, #1336	; 0x538
   14bac:	movt	r3, #10
   14bb0:	cmp	r0, #0
   14bb4:	beq	14be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd54>
   14bb8:	ldrb	r2, [r0]
   14bbc:	cmp	r2, #45	; 0x2d
   14bc0:	bne	14d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe8c>
   14bc4:	ldrb	r2, [r0, #1]
   14bc8:	cmp	r2, #0
   14bcc:	bne	14d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe8c>
   14bd0:	movw	r2, #64592	; 0xfc50
   14bd4:	movt	r2, #9
   14bd8:	ldr	r2, [r2]
   14bdc:	str	r2, [r3, #80]	; 0x50
   14be0:	bl	27634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x137a8>
   14be4:	movw	r3, #1088	; 0x440
   14be8:	movt	r3, #10
   14bec:	ldrb	r2, [r4]
   14bf0:	ldr	r3, [r3, #52]	; 0x34
   14bf4:	and	r2, r2, #3
   14bf8:	cmp	r2, #2
   14bfc:	ldr	r2, [r3, #40]	; 0x28
   14c00:	ubfxeq	r1, r2, #5, #20
   14c04:	orrne	r2, r2, #64	; 0x40
   14c08:	biceq	r1, r1, #-67108862	; 0xfc000002
   14c0c:	bfieq	r2, r1, #5, #20
   14c10:	str	r2, [r3, #40]	; 0x28
   14c14:	ldr	r2, [r4, #12]
   14c18:	movw	r3, #1088	; 0x440
   14c1c:	movt	r3, #10
   14c20:	tst	r2, #1
   14c24:	beq	14c48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdbc>
   14c28:	ldr	r3, [r3, #52]	; 0x34
   14c2c:	cmp	r2, #5
   14c30:	ldr	r2, [r3, #40]	; 0x28
   14c34:	ubfx	r1, r2, #5, #20
   14c38:	orrne	r1, r1, #16384	; 0x4000
   14c3c:	orreq	r1, r1, #147456	; 0x24000
   14c40:	bfi	r2, r1, #5, #20
   14c44:	str	r2, [r3, #40]	; 0x28
   14c48:	bl	2be70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17fe4>
   14c4c:	ldr	r3, [r5, #80]	; 0x50
   14c50:	cmp	r3, #0
   14c54:	beq	14c5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd0>
   14c58:	bl	22eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf020>
   14c5c:	ldr	ip, [sp, #16]
   14c60:	ldr	r3, [ip, #16]
   14c64:	cmp	r3, #0
   14c68:	beq	14c84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf8>
   14c6c:	ldr	r0, [r5, #80]	; 0x50
   14c70:	cmp	r0, #0
   14c74:	movweq	r3, #64592	; 0xfc50
   14c78:	movteq	r3, #9
   14c7c:	ldreq	r0, [r3]
   14c80:	bl	31bfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd70>
   14c84:	movw	r3, #1004	; 0x3ec
   14c88:	movt	r3, #10
   14c8c:	ldr	r3, [r3]
   14c90:	cmp	r3, #0
   14c94:	beq	14c9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe10>
   14c98:	bl	31fac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e120>
   14c9c:	ldr	ip, [sp, #16]
   14ca0:	ldr	r3, [ip, #40]	; 0x28
   14ca4:	cmp	r3, #0
   14ca8:	bne	14f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108c>
   14cac:	bl	2eeac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b020>
   14cb0:	bl	2107c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1f0>
   14cb4:	ldr	r3, [r5, #4]
   14cb8:	cmp	r3, #0
   14cbc:	bne	14d64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed8>
   14cc0:	ldr	r0, [r6, #12]
   14cc4:	cmp	r0, #0
   14cc8:	bne	14d64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed8>
   14ccc:	ldr	r3, [r7]
   14cd0:	cmp	r3, #0
   14cd4:	bne	150c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1238>
   14cd8:	mov	r0, #1
   14cdc:	bl	13c40 <xexit@plt>
   14ce0:	bl	237fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf970>
   14ce4:	mov	r1, r0
   14ce8:	movw	r0, #22156	; 0x568c
   14cec:	movt	r0, #5
   14cf0:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   14cf4:	b	14b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc78>
   14cf8:	bl	13e74 <bfd_hash_set_default_size@plt>
   14cfc:	b	14a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7c>
   14d00:	movw	r3, #1072	; 0x430
   14d04:	movt	r3, #10
   14d08:	ldr	r3, [r3]
   14d0c:	cmp	r3, #0
   14d10:	beq	14b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc88>
   14d14:	b	14b44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb8>
   14d18:	movw	r1, #5056	; 0x13c0
   14d1c:	movt	r1, #5
   14d20:	bl	13cb8 <fopen64@plt>
   14d24:	movw	r8, #1336	; 0x538
   14d28:	movt	r8, #10
   14d2c:	cmp	r0, #0
   14d30:	mov	fp, r0
   14d34:	str	r0, [r5, #80]	; 0x50
   14d38:	bne	14be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd54>
   14d3c:	mov	r0, #1
   14d40:	bl	137c0 <bfd_set_error@plt>
   14d44:	mov	r0, fp
   14d48:	mov	r2, #5
   14d4c:	movw	r1, #17268	; 0x4374
   14d50:	movt	r1, #5
   14d54:	bl	13688 <dcgettext@plt>
   14d58:	ldr	r1, [r8, #76]	; 0x4c
   14d5c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   14d60:	b	14be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd54>
   14d64:	ldr	r0, [r4, #52]	; 0x34
   14d68:	movw	r6, #1088	; 0x440
   14d6c:	bl	13c4c <bfd_close@plt>
   14d70:	movt	r6, #10
   14d74:	cmp	r0, #0
   14d78:	beq	14fa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1118>
   14d7c:	ldrb	r3, [r4]
   14d80:	and	r3, r3, #3
   14d84:	cmp	r3, #2
   14d88:	movweq	r7, #62432	; 0xf3e0
   14d8c:	movteq	r7, #9
   14d90:	beq	14ee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1054>
   14d94:	ldr	ip, [sp, #16]
   14d98:	movw	r7, #62432	; 0xf3e0
   14d9c:	movt	r7, #9
   14da0:	ldr	r3, [ip, #12]
   14da4:	cmp	r3, #0
   14da8:	beq	14ee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1054>
   14dac:	ldr	r4, [r7]
   14db0:	mov	r0, r4
   14db4:	bl	13a24 <strlen@plt>
   14db8:	cmp	r0, #3
   14dbc:	mov	r6, r0
   14dc0:	ble	14dfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf70>
   14dc4:	sub	r3, r0, #4
   14dc8:	movw	r1, #17388	; 0x43ec
   14dcc:	add	r4, r4, r3
   14dd0:	movt	r1, #5
   14dd4:	mov	r0, r4
   14dd8:	bl	13748 <strcasecmp@plt>
   14ddc:	cmp	r0, #0
   14de0:	beq	14ee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1054>
   14de4:	mov	r0, r4
   14de8:	movw	r1, #17396	; 0x43f4
   14dec:	movt	r1, #5
   14df0:	bl	13748 <strcasecmp@plt>
   14df4:	cmp	r0, #0
   14df8:	beq	14ee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1054>
   14dfc:	mov	r0, #4096	; 0x1000
   14e00:	movw	fp, #62432	; 0xf3e0
   14e04:	bl	137b4 <xmalloc@plt>
   14e08:	movt	fp, #9
   14e0c:	mov	r4, r0
   14e10:	add	r0, r6, #5
   14e14:	bl	137b4 <xmalloc@plt>
   14e18:	ldr	r6, [r7]
   14e1c:	mov	r1, r6
   14e20:	mov	sl, r0
   14e24:	bl	13664 <stpcpy@plt>
   14e28:	movw	r3, #17388	; 0x43ec
   14e2c:	movt	r3, #5
   14e30:	movw	r1, #8320	; 0x2080
   14e34:	movt	r1, #7
   14e38:	mov	r2, r0
   14e3c:	ldr	r0, [r3]
   14e40:	ldrb	r3, [r3, #4]
   14e44:	str	r0, [r2]
   14e48:	mov	r0, r6
   14e4c:	strb	r3, [r2, #4]
   14e50:	bl	13cb8 <fopen64@plt>
   14e54:	movw	r1, #5056	; 0x13c0
   14e58:	movt	r1, #5
   14e5c:	mov	r6, r0
   14e60:	mov	r0, sl
   14e64:	bl	13cb8 <fopen64@plt>
   14e68:	cmp	r6, #0
   14e6c:	mov	r8, r0
   14e70:	beq	15164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d8>
   14e74:	cmp	r8, #0
   14e78:	bne	14e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1010>
   14e7c:	b	15144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b8>
   14e80:	mov	r0, r4
   14e84:	mov	r1, #1
   14e88:	mov	r2, r9
   14e8c:	mov	r3, r8
   14e90:	bl	137a8 <fwrite@plt>
   14e94:	cmp	r0, r9
   14e98:	bne	150a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1218>
   14e9c:	mov	r0, r4
   14ea0:	mov	r1, #1
   14ea4:	mov	r2, #4096	; 0x1000
   14ea8:	mov	r3, r6
   14eac:	bl	1382c <fread@plt>
   14eb0:	subs	r9, r0, #0
   14eb4:	bgt	14e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff4>
   14eb8:	mov	r0, r6
   14ebc:	bl	13b80 <fclose@plt>
   14ec0:	mov	r0, r8
   14ec4:	bl	13b80 <fclose@plt>
   14ec8:	cmn	r0, #1
   14ecc:	beq	15124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1298>
   14ed0:	mov	r0, sl
   14ed4:	bl	13574 <free@plt>
   14ed8:	mov	r0, r4
   14edc:	bl	13574 <free@plt>
   14ee0:	ldr	r3, [r5, #52]	; 0x34
   14ee4:	cmp	r3, #0
   14ee8:	bne	14fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1134>
   14eec:	mov	r0, #0
   14ef0:	str	r0, [r7]
   14ef4:	bl	13c40 <xexit@plt>
   14ef8:	mov	r2, #5
   14efc:	movw	r1, #17252	; 0x4364
   14f00:	mov	r0, #0
   14f04:	movt	r1, #5
   14f08:	bl	13688 <dcgettext@plt>
   14f0c:	ldr	r1, [sp, #20]
   14f10:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   14f14:	b	14ba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd14>
   14f18:	bl	29578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x156ec>
   14f1c:	b	14cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe20>
   14f20:	ldr	ip, [sp, #16]
   14f24:	movw	r7, #996	; 0x3e4
   14f28:	movt	r7, #10
   14f2c:	ldr	r0, [ip, #84]	; 0x54
   14f30:	cmp	r0, #0
   14f34:	beq	14f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c8>
   14f38:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   14f3c:	mov	r3, #1
   14f40:	str	r3, [r7]
   14f44:	bl	15468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc>
   14f48:	ldr	r3, [fp, #8]
   14f4c:	cmp	r3, #0
   14f50:	bne	14a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb98>
   14f54:	add	r0, sp, #40	; 0x28
   14f58:	bl	2effc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b170>
   14f5c:	ldr	r2, [sp, #40]	; 0x28
   14f60:	cmp	r2, #0
   14f64:	mov	r3, r0
   14f68:	beq	150e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x125c>
   14f6c:	bl	310a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d214>
   14f70:	movw	fp, #65276	; 0xfefc
   14f74:	movt	fp, #9
   14f78:	mov	r3, #1
   14f7c:	str	r3, [r7]
   14f80:	bl	15468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc>
   14f84:	mov	r3, #0
   14f88:	str	r3, [fp]
   14f8c:	b	14a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb98>
   14f90:	movw	r3, #1080	; 0x438
   14f94:	movt	r3, #10
   14f98:	mvn	r2, #0
   14f9c:	str	r2, [r3]
   14fa0:	b	146b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x828>
   14fa4:	mov	r2, #5
   14fa8:	movw	r1, #17356	; 0x43cc
   14fac:	movt	r1, #5
   14fb0:	bl	13688 <dcgettext@plt>
   14fb4:	ldr	r1, [r6, #52]	; 0x34
   14fb8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   14fbc:	b	14d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef0>
   14fc0:	mov	r0, #0
   14fc4:	movw	r4, #63776	; 0xf920
   14fc8:	bl	13d24 <sbrk@plt>
   14fcc:	movt	r4, #9
   14fd0:	mov	r6, r0
   14fd4:	bl	3f670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b7e4>
   14fd8:	ldr	ip, [sp, #24]
   14fdc:	movw	r3, #64592	; 0xfc50
   14fe0:	movt	r3, #9
   14fe4:	rsb	r5, ip, r0
   14fe8:	ldr	r0, [r3]
   14fec:	bl	134f0 <fflush@plt>
   14ff0:	mov	r2, #5
   14ff4:	movw	r1, #17568	; 0x44a0
   14ff8:	mov	r0, #0
   14ffc:	movt	r1, #5
   15000:	ldr	r8, [r4]
   15004:	bl	13688 <dcgettext@plt>
   15008:	movw	r1, #16960	; 0x4240
   1500c:	movt	r1, #15
   15010:	mov	sl, r0
   15014:	mov	r0, r5
   15018:	bl	3f828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b99c>
   1501c:	movw	r1, #16960	; 0x4240
   15020:	movt	r1, #15
   15024:	str	r0, [sp]
   15028:	mov	r0, r5
   1502c:	bl	3fa48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bbbc>
   15030:	ldr	ip, [sp, #12]
   15034:	mov	r2, sl
   15038:	mov	r0, r8
   1503c:	ldr	r3, [ip]
   15040:	str	r1, [sp, #4]
   15044:	mov	r1, #1
   15048:	bl	13b74 <__fprintf_chk@plt>
   1504c:	mov	r2, #5
   15050:	movw	r1, #17604	; 0x44c4
   15054:	mov	r0, #0
   15058:	movt	r1, #5
   1505c:	ldr	r5, [r4]
   15060:	bl	13688 <dcgettext@plt>
   15064:	ldr	ip, [sp, #28]
   15068:	mov	r1, #1
   1506c:	rsb	r6, ip, r6
   15070:	ldr	ip, [sp, #12]
   15074:	str	r6, [sp]
   15078:	ldr	r3, [ip]
   1507c:	mov	r2, r0
   15080:	mov	r0, r5
   15084:	bl	13b74 <__fprintf_chk@plt>
   15088:	ldr	r0, [r4]
   1508c:	bl	134f0 <fflush@plt>
   15090:	b	14eec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1060>
   15094:	add	r0, sp, #40	; 0x28
   15098:	bl	2effc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b170>
   1509c:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   150a0:	b	14ae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc5c>
   150a4:	mov	r2, #5
   150a8:	movw	r1, #17504	; 0x4460
   150ac:	mov	r0, #0
   150b0:	movt	r1, #5
   150b4:	bl	13688 <dcgettext@plt>
   150b8:	mov	r1, sl
   150bc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   150c0:	b	14e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1010>
   150c4:	mov	r2, #5
   150c8:	movw	r1, #17304	; 0x4398
   150cc:	movt	r1, #5
   150d0:	bl	13688 <dcgettext@plt>
   150d4:	movw	r3, #62432	; 0xf3e0
   150d8:	movt	r3, #9
   150dc:	ldr	r1, [r3]
   150e0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   150e4:	b	14cd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4c>
   150e8:	movw	fp, #65276	; 0xfefc
   150ec:	movt	fp, #9
   150f0:	mov	r0, r2
   150f4:	movw	r1, #17084	; 0x42bc
   150f8:	mov	r2, #5
   150fc:	movt	r1, #5
   15100:	str	r3, [fp]
   15104:	str	r3, [sp, #8]
   15108:	bl	13688 <dcgettext@plt>
   1510c:	ldr	r3, [sp, #8]
   15110:	mov	r2, #1
   15114:	mov	r1, r0
   15118:	mov	r0, r3
   1511c:	bl	1a2c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6434>
   15120:	b	14f78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ec>
   15124:	mov	r2, #5
   15128:	movw	r1, #17536	; 0x4480
   1512c:	mov	r0, #0
   15130:	movt	r1, #5
   15134:	bl	13688 <dcgettext@plt>
   15138:	mov	r1, sl
   1513c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   15140:	b	14ed0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1044>
   15144:	mov	r0, r8
   15148:	mov	r2, #5
   1514c:	movw	r1, #17452	; 0x442c
   15150:	movt	r1, #5
   15154:	bl	13688 <dcgettext@plt>
   15158:	mov	r1, sl
   1515c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   15160:	b	14e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1010>
   15164:	mov	r0, r6
   15168:	mov	r2, #5
   1516c:	movw	r1, #17404	; 0x43fc
   15170:	movt	r1, #5
   15174:	bl	13688 <dcgettext@plt>
   15178:	ldr	r1, [fp]
   1517c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   15180:	b	14e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfe8>
   15184:	andeq	pc, r9, r8, ror #7
   15188:	mov	fp, #0
   1518c:	mov	lr, #0
   15190:	pop	{r1}		; (ldr r1, [sp], #4)
   15194:	mov	r2, sp
   15198:	push	{r2}		; (str r2, [sp, #-4]!)
   1519c:	push	{r0}		; (str r0, [sp, #-4]!)
   151a0:	ldr	ip, [pc, #16]	; 151b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x132c>
   151a4:	push	{ip}		; (str ip, [sp, #-4]!)
   151a8:	ldr	r0, [pc, #12]	; 151bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1330>
   151ac:	ldr	r3, [pc, #12]	; 151c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1334>
   151b0:	bl	13964 <__libc_start_main@plt>
   151b4:	bl	13e14 <abort@plt>
   151b8:	andeq	r2, r4, r0, lsr #2
   151bc:	andeq	r4, r1, ip, asr #10
   151c0:	strheq	r2, [r4], -ip
   151c4:	ldr	r3, [pc, #20]	; 151e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1354>
   151c8:	ldr	r2, [pc, #20]	; 151e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1358>
   151cc:	add	r3, pc, r3
   151d0:	ldr	r2, [r3, r2]
   151d4:	cmp	r2, #0
   151d8:	bxeq	lr
   151dc:	b	13994 <__gmon_start__@plt>
   151e0:	andeq	r9, r8, ip, lsr #28
   151e4:	andeq	r0, r0, r4, lsr #7
   151e8:	push	{r3, lr}
   151ec:	movw	r0, #63240	; 0xf708
   151f0:	ldr	r3, [pc, #36]	; 1521c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1390>
   151f4:	movt	r0, #9
   151f8:	rsb	r3, r0, r3
   151fc:	cmp	r3, #6
   15200:	popls	{r3, pc}
   15204:	movw	r3, #0
   15208:	movt	r3, #0
   1520c:	cmp	r3, #0
   15210:	popeq	{r3, pc}
   15214:	blx	r3
   15218:	pop	{r3, pc}
   1521c:	andeq	pc, r9, fp, lsl #14
   15220:	push	{r3, lr}
   15224:	movw	r0, #63240	; 0xf708
   15228:	movw	r3, #63240	; 0xf708
   1522c:	movt	r0, #9
   15230:	movt	r3, #9
   15234:	rsb	r3, r0, r3
   15238:	asr	r3, r3, #2
   1523c:	add	r3, r3, r3, lsr #31
   15240:	asrs	r1, r3, #1
   15244:	popeq	{r3, pc}
   15248:	movw	r2, #0
   1524c:	movt	r2, #0
   15250:	cmp	r2, #0
   15254:	popeq	{r3, pc}
   15258:	blx	r2
   1525c:	pop	{r3, pc}
   15260:	push	{r4, lr}
   15264:	movw	r4, #64868	; 0xfd64
   15268:	movt	r4, #9
   1526c:	ldrb	r3, [r4]
   15270:	cmp	r3, #0
   15274:	popne	{r4, pc}
   15278:	bl	151e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135c>
   1527c:	mov	r3, #1
   15280:	strb	r3, [r4]
   15284:	pop	{r4, pc}
   15288:	movw	r0, #61180	; 0xeefc
   1528c:	movt	r0, #9
   15290:	push	{r3, lr}
   15294:	ldr	r3, [r0]
   15298:	cmp	r3, #0
   1529c:	beq	152b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1428>
   152a0:	movw	r3, #0
   152a4:	movt	r3, #0
   152a8:	cmp	r3, #0
   152ac:	beq	152b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1428>
   152b0:	blx	r3
   152b4:	pop	{r3, lr}
   152b8:	b	15220 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1394>
   152bc:	push	{r4, r5, r6, lr}
   152c0:	movw	r5, #63776	; 0xf920
   152c4:	movt	r5, #9
   152c8:	mov	r4, r0
   152cc:	mov	r6, r1
   152d0:	movw	r0, #28568	; 0x6f98
   152d4:	ldr	r3, [r5]
   152d8:	mov	r1, #1
   152dc:	movt	r0, #4
   152e0:	mov	r2, #9
   152e4:	bl	137a8 <fwrite@plt>
   152e8:	cmp	r4, r6
   152ec:	bhi	15310 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1484>
   152f0:	ldrsh	r3, [r4], #2
   152f4:	movw	r2, #28580	; 0x6fa4
   152f8:	ldr	r0, [r5]
   152fc:	movt	r2, #4
   15300:	mov	r1, #1
   15304:	bl	13b74 <__fprintf_chk@plt>
   15308:	cmp	r6, r4
   1530c:	bcs	152f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1464>
   15310:	ldr	r1, [r5]
   15314:	mov	r0, #10
   15318:	pop	{r4, r5, r6, lr}
   1531c:	b	13c28 <fputc@plt>
   15320:	cmp	r1, #154	; 0x9a
   15324:	movw	ip, #8500	; 0x2134
   15328:	movt	ip, #4
   1532c:	mov	r3, r1
   15330:	push	{r4, lr}
   15334:	movwle	r2, #28584	; 0x6fa8
   15338:	mov	r4, r0
   1533c:	movle	r1, #1
   15340:	movwgt	r2, #28596	; 0x6fb4
   15344:	movgt	r1, #1
   15348:	ldrle	r3, [ip, r3, lsl #2]
   1534c:	movtle	r2, #4
   15350:	ldrgt	r3, [ip, r3, lsl #2]
   15354:	movtgt	r2, #4
   15358:	bl	13b74 <__fprintf_chk@plt>
   1535c:	mov	r1, r4
   15360:	mov	r0, #41	; 0x29
   15364:	pop	{r4, lr}
   15368:	b	13c28 <fputc@plt>
   1536c:	movw	r2, #964	; 0x3c4
   15370:	movt	r2, #10
   15374:	cmp	r0, #0
   15378:	ldr	r2, [r2]
   1537c:	push	{r3, r4, r5, lr}
   15380:	movw	r3, #28608	; 0x6fc0
   15384:	movt	r3, #4
   15388:	movne	r3, r0
   1538c:	cmp	r2, #0
   15390:	mov	r5, r1
   15394:	popeq	{r3, r4, r5, pc}
   15398:	movw	r4, #63776	; 0xf920
   1539c:	movt	r4, #9
   153a0:	mov	r1, #1
   153a4:	movw	r2, #28620	; 0x6fcc
   153a8:	ldr	r0, [r4]
   153ac:	movt	r2, #4
   153b0:	bl	13b74 <__fprintf_chk@plt>
   153b4:	mov	r1, r5
   153b8:	ldr	r0, [r4]
   153bc:	bl	15320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1494>
   153c0:	ldr	r1, [r4]
   153c4:	mov	r0, #10
   153c8:	pop	{r3, r4, r5, lr}
   153cc:	b	13c28 <fputc@plt>
   153d0:	movw	r3, #172	; 0xac
   153d4:	movt	r3, #10
   153d8:	push	{r4, r5, r6, lr}
   153dc:	mov	r4, r0
   153e0:	ldr	r3, [r3]
   153e4:	cmp	r3, #0
   153e8:	bne	1543c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b0>
   153ec:	movw	r3, #64872	; 0xfd68
   153f0:	movt	r3, #9
   153f4:	ldr	r1, [r3]
   153f8:	sub	r1, r1, #1
   153fc:	cmp	r1, #18
   15400:	bls	1541c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1590>
   15404:	mov	r2, r4
   15408:	movw	r0, #28708	; 0x7024
   1540c:	mov	r1, #0
   15410:	movt	r0, #4
   15414:	pop	{r4, r5, r6, lr}
   15418:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1541c:	add	r3, r3, r1, lsl #2
   15420:	mov	r2, r4
   15424:	movw	r0, #28688	; 0x7010
   15428:	mov	r1, #0
   1542c:	ldr	r3, [r3, #4]
   15430:	movt	r0, #4
   15434:	pop	{r4, r5, r6, lr}
   15438:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1543c:	mov	r2, #5
   15440:	movw	r1, #28624	; 0x6fd0
   15444:	mov	r0, #0
   15448:	movt	r1, #4
   1544c:	bl	13688 <dcgettext@plt>
   15450:	mov	r5, r0
   15454:	bl	1a5b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x672c>
   15458:	mov	r1, r0
   1545c:	mov	r0, r5
   15460:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   15464:	b	153ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1560>
   15468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1546c:	movw	r6, #964	; 0x3c4
   15470:	movt	r6, #10
   15474:	movw	r5, #63248	; 0xf710
   15478:	movt	r5, #9
   1547c:	sub	sp, sp, #3712	; 0xe80
   15480:	ldr	r2, [r6]
   15484:	sub	sp, sp, #12
   15488:	ldr	r3, [r5]
   1548c:	cmp	r2, #0
   15490:	str	r5, [sp, #48]	; 0x30
   15494:	str	r3, [sp, #3716]	; 0xe84
   15498:	bne	162c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2438>
   1549c:	movw	ip, #960	; 0x3c0
   154a0:	movt	ip, #10
   154a4:	add	r5, sp, #112	; 0x70
   154a8:	str	r5, [sp, #16]
   154ac:	movw	r5, #968	; 0x3c8
   154b0:	movt	r5, #10
   154b4:	str	r5, [sp, #36]	; 0x24
   154b8:	mov	r3, #0
   154bc:	str	ip, [sp, #52]	; 0x34
   154c0:	add	r4, sp, #112	; 0x70
   154c4:	str	r3, [ip]
   154c8:	movw	r9, #8500	; 0x2134
   154cc:	ldr	ip, [sp, #36]	; 0x24
   154d0:	movt	r9, #4
   154d4:	mov	fp, r4
   154d8:	mov	r5, r3
   154dc:	mov	sl, r9
   154e0:	add	r8, sp, #512	; 0x200
   154e4:	str	r3, [sp, #32]
   154e8:	str	r3, [sp, #64]	; 0x40
   154ec:	mvn	r3, #1
   154f0:	str	r8, [sp, #60]	; 0x3c
   154f4:	str	r3, [ip]
   154f8:	movw	ip, #63776	; 0xf920
   154fc:	str	r5, [sp, #24]
   15500:	movt	ip, #9
   15504:	str	ip, [sp, #44]	; 0x2c
   15508:	mov	ip, #200	; 0xc8
   1550c:	str	ip, [sp, #28]
   15510:	ldr	ip, [sp, #28]
   15514:	ldr	r5, [sp, #24]
   15518:	sub	r3, ip, #-2147483647	; 0x80000001
   1551c:	lsl	r3, r3, #1
   15520:	strh	r5, [r4]
   15524:	add	r2, fp, r3
   15528:	cmp	r4, r2
   1552c:	bcc	155f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1768>
   15530:	rsb	r8, fp, r4
   15534:	movw	r2, #9999	; 0x270f
   15538:	cmp	ip, r2
   1553c:	asr	r8, r8, #1
   15540:	add	r8, r8, #1
   15544:	bhi	17c68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ddc>
   15548:	add	r2, r2, #1
   1554c:	add	r3, r3, #2
   15550:	cmp	r3, r2
   15554:	movcs	r3, r2
   15558:	str	r3, [sp, #28]
   1555c:	add	r0, r3, r3, lsl #3
   15560:	lsl	r0, r0, #1
   15564:	add	r0, r0, #15
   15568:	bl	1394c <malloc@plt>
   1556c:	subs	r5, r0, #0
   15570:	beq	17c68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ddc>
   15574:	ldr	ip, [sp, #28]
   15578:	lsl	r4, r8, #1
   1557c:	lsl	r8, r8, #4
   15580:	mov	r1, fp
   15584:	mov	r2, r4
   15588:	lsl	r9, ip, #1
   1558c:	bl	135c8 <memcpy@plt>
   15590:	add	r7, r9, #15
   15594:	ldr	r1, [sp, #60]	; 0x3c
   15598:	bic	r7, r7, #15
   1559c:	mov	r2, r8
   155a0:	add	r7, r5, r7
   155a4:	mov	r0, r7
   155a8:	bl	135c8 <memcpy@plt>
   155ac:	ldr	ip, [sp, #16]
   155b0:	cmp	fp, ip
   155b4:	beq	155c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1734>
   155b8:	mov	r0, fp
   155bc:	bl	13574 <free@plt>
   155c0:	ldr	r3, [r6]
   155c4:	sub	r4, r4, #2
   155c8:	sub	r8, r8, #16
   155cc:	add	r4, r5, r4
   155d0:	cmp	r3, #0
   155d4:	add	r8, r7, r8
   155d8:	bne	1614c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c0>
   155dc:	sub	r9, r9, #2
   155e0:	add	r9, r5, r9
   155e4:	cmp	r4, r9
   155e8:	bcs	17cbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3e30>
   155ec:	mov	fp, r5
   155f0:	str	r7, [sp, #60]	; 0x3c
   155f4:	ldr	r3, [r6]
   155f8:	cmp	r3, #0
   155fc:	bne	16054 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c8>
   15600:	ldr	ip, [sp, #24]
   15604:	lsl	r5, ip, #1
   15608:	add	r3, sl, r5
   1560c:	add	r3, r3, #1136	; 0x470
   15610:	ldrsh	r7, [r3, #12]
   15614:	cmn	r7, #664	; 0x298
   15618:	beq	15688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17fc>
   1561c:	ldr	ip, [sp, #36]	; 0x24
   15620:	ldr	r0, [ip]
   15624:	cmn	r0, #2
   15628:	beq	160a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x221c>
   1562c:	cmp	r0, #0
   15630:	ble	160c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x223c>
   15634:	movw	r3, #386	; 0x182
   15638:	cmp	r0, r3
   1563c:	addls	r0, sl, r0
   15640:	ldr	r3, [r6]
   15644:	movhi	ip, #2
   15648:	strhi	ip, [sp, #32]
   1564c:	ldrbls	r0, [r0, #2768]	; 0xad0
   15650:	strls	r0, [sp, #32]
   15654:	cmp	r3, #0
   15658:	bne	16108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227c>
   1565c:	ldr	ip, [sp, #32]
   15660:	movw	r3, #1973	; 0x7b5
   15664:	add	r7, r7, ip
   15668:	cmp	r7, r3
   1566c:	bhi	15688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17fc>
   15670:	lsl	r7, r7, #1
   15674:	add	r3, sl, r7
   15678:	add	r3, r3, #3152	; 0xc50
   1567c:	ldrsh	r9, [r3, #4]
   15680:	cmp	r9, ip
   15684:	beq	15e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f80>
   15688:	movw	ip, #16684	; 0x412c
   1568c:	movt	ip, #4
   15690:	add	r3, ip, r5
   15694:	str	ip, [sp, #24]
   15698:	add	r3, r3, #2864	; 0xb30
   1569c:	ldrh	r7, [r3, #4]
   156a0:	cmp	r7, #0
   156a4:	beq	15e3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0>
   156a8:	movw	r5, #24868	; 0x6124
   156ac:	movt	r5, #4
   156b0:	add	r2, r5, r7
   156b4:	ldr	r3, [r6]
   156b8:	add	ip, sp, #80	; 0x50
   156bc:	str	r5, [sp, #40]	; 0x28
   156c0:	ldrb	r2, [r2, #-3696]	; 0xfffff190
   156c4:	cmp	r3, #0
   156c8:	str	ip, [sp, #20]
   156cc:	rsb	r3, r2, #1
   156d0:	str	r2, [sp, #56]	; 0x38
   156d4:	add	r3, r8, r3, lsl #4
   156d8:	ldm	r3, {r0, r1, r2, r3}
   156dc:	stm	ip, {r0, r1, r2, r3}
   156e0:	bne	1616c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e0>
   156e4:	lsl	r5, r7, #1
   156e8:	str	r5, [sp, #68]	; 0x44
   156ec:	sub	r7, r7, #8
   156f0:	movw	r3, #362	; 0x16a
   156f4:	cmp	r7, r3
   156f8:	ldrls	pc, [pc, r7, lsl #2]
   156fc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   15700:	ldrdeq	r7, [r1], -r4
   15704:			; <UNDEFINED> instruction: 0x000175bc
   15708:	andeq	r6, r1, r4, asr #30
   1570c:	andeq	r6, r1, r4, lsr #30
   15710:	andeq	r5, r1, ip, asr sp
   15714:	andeq	r5, r1, ip, asr sp
   15718:	andeq	r5, r1, ip, asr sp
   1571c:	andeq	r5, r1, ip, asr sp
   15720:	andeq	r6, r1, r4, lsl #30
   15724:	andeq	r6, r1, ip, ror #29
   15728:	andeq	r5, r1, ip, asr sp
   1572c:	andeq	r5, r1, ip, asr sp
   15730:	ldrdeq	r6, [r1], -ip
   15734:	andeq	r6, r1, ip, asr #29
   15738:			; <UNDEFINED> instruction: 0x00016ebc
   1573c:			; <UNDEFINED> instruction: 0x00016eb0
   15740:	andeq	r6, r1, r0, lsr #29
   15744:	andeq	r7, r1, r8, lsr r6
   15748:	andeq	r7, r1, r8, lsr #12
   1574c:	andeq	r7, r1, r8, lsl r6
   15750:	andeq	r7, r1, r8, lsl #12
   15754:	strdeq	r7, [r1], -r8
   15758:	andeq	r7, r1, r8, ror #11
   1575c:	andeq	r5, r1, ip, asr sp
   15760:	andeq	r5, r1, ip, asr sp
   15764:	ldrdeq	r7, [r1], -ip
   15768:	andeq	r7, r1, r0, lsl r1
   1576c:	strdeq	r7, [r1], -ip
   15770:	strdeq	r7, [r1], -r0
   15774:	andeq	r7, r1, r4, ror #1
   15778:	andeq	r5, r1, ip, asr sp
   1577c:	andeq	r5, r1, ip, asr sp
   15780:	ldrdeq	r7, [r1], -r4
   15784:	andeq	r7, r1, ip, asr #1
   15788:	strheq	r7, [r1], -ip
   1578c:	andeq	r5, r1, ip, asr sp
   15790:	andeq	r7, r1, r8, lsr #32
   15794:	andeq	r7, r1, ip, lsl r0
   15798:	andeq	r5, r1, ip, asr sp
   1579c:	andeq	r7, r1, r0, lsl r0
   157a0:	andeq	r7, r1, r4
   157a4:	strdeq	r6, [r1], -r8
   157a8:	andeq	r6, r1, ip, ror #31
   157ac:	andeq	r6, r1, r0, ror #31
   157b0:	andeq	r5, r1, ip, asr sp
   157b4:	andeq	r5, r1, ip, asr sp
   157b8:	ldrdeq	r6, [r1], -r8
   157bc:	ldrdeq	r6, [r1], -r0
   157c0:	andeq	r6, r1, r0, asr #31
   157c4:			; <UNDEFINED> instruction: 0x00016fb0
   157c8:	andeq	r6, r1, r0, lsr #31
   157cc:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   157d0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   157d4:	andeq	r5, r1, ip, asr sp
   157d8:	andeq	r5, r1, ip, asr sp
   157dc:	andeq	r5, r1, ip, asr sp
   157e0:	andeq	r5, r1, ip, asr sp
   157e4:	andeq	r5, r1, ip, asr sp
   157e8:	andeq	r5, r1, ip, asr sp
   157ec:	andeq	r5, r1, ip, asr sp
   157f0:	andeq	r5, r1, ip, asr sp
   157f4:	andeq	r5, r1, ip, asr sp
   157f8:	andeq	r5, r1, ip, asr sp
   157fc:	andeq	r5, r1, ip, asr sp
   15800:	andeq	r5, r1, ip, asr sp
   15804:	andeq	r6, r1, r4, lsl #31
   15808:	andeq	r6, r1, r4, ror pc
   1580c:	andeq	r7, r1, ip, lsr #1
   15810:	muleq	r1, r4, r0
   15814:	andeq	r7, r1, ip, ror r0
   15818:	andeq	r7, r1, ip, rrx
   1581c:	andeq	r7, r1, r8, asr r0
   15820:	andeq	r7, r1, r4, asr #32
   15824:	andeq	r5, r1, ip, asr sp
   15828:	andeq	r7, r1, ip, lsr r0
   1582c:	andeq	r7, r1, r4, lsr r0
   15830:	andeq	r6, r1, r8, ror #30
   15834:	ldrdeq	r6, [r1], -r8
   15838:	ldrdeq	r6, [r1], -r0
   1583c:	andeq	r6, r1, r4, asr #15
   15840:			; <UNDEFINED> instruction: 0x000167b8
   15844:	andeq	r5, r1, ip, asr sp
   15848:	andeq	r6, r1, r8, lsr #15
   1584c:	muleq	r1, r8, r7
   15850:	andeq	r6, r1, r8, lsl #15
   15854:	andeq	r6, r1, ip, ror r7
   15858:	andeq	r6, r1, r4, ror r7
   1585c:	andeq	r6, r1, ip, ror #14
   15860:	andeq	r6, r1, r8, asr r7
   15864:	andeq	r6, r1, r4, asr #14
   15868:	andeq	r6, r1, r0, lsr r7
   1586c:	andeq	r6, r1, ip, lsl r7
   15870:	andeq	r6, r1, r8, lsl #14
   15874:	strdeq	r6, [r1], -r4
   15878:			; <UNDEFINED> instruction: 0x000166bc
   1587c:	andeq	r6, r1, r0, lsr #13
   15880:	andeq	r6, r1, r8, ror #12
   15884:	andeq	r6, r1, ip, asr #12
   15888:	andeq	r6, r1, r4, lsl r6
   1588c:	strdeq	r6, [r1], -r8
   15890:	andeq	r5, r1, ip, asr sp
   15894:	andeq	r5, r1, ip, asr sp
   15898:	andeq	r5, r1, ip, asr sp
   1589c:	andeq	r5, r1, ip, asr sp
   158a0:	andeq	r6, r1, r8, ror #11
   158a4:	andeq	r5, r1, ip, asr sp
   158a8:	andeq	r6, r1, r0, ror #11
   158ac:	andeq	r6, r1, r8, asr #11
   158b0:			; <UNDEFINED> instruction: 0x000165bc
   158b4:	andeq	r6, r1, ip, lsr #11
   158b8:	muleq	r1, ip, r5
   158bc:	andeq	r6, r1, r0, lsl #11
   158c0:	andeq	r6, r1, r0, ror #10
   158c4:	andeq	r6, r1, r0, asr #10
   158c8:	andeq	r6, r1, r0, lsr #10
   158cc:	andeq	r6, r1, r0, lsl #10
   158d0:	andeq	r6, r1, r0, ror #9
   158d4:	andeq	r6, r1, r0, asr #9
   158d8:	andeq	r6, r1, r0, lsr #9
   158dc:	andeq	r6, r1, r0, lsl #9
   158e0:	andeq	r6, r1, ip, asr r4
   158e4:	andeq	r6, r1, ip, lsr r4
   158e8:	strdeq	r6, [r1], -ip
   158ec:			; <UNDEFINED> instruction: 0x000163b8
   158f0:	andeq	r7, r1, r4, lsl #7
   158f4:	andeq	r7, r1, r4, ror #6
   158f8:	andeq	r7, r1, r4, asr #6
   158fc:	andeq	r7, r1, ip, lsl r3
   15900:	strdeq	r7, [r1], -r4
   15904:	andeq	r7, r1, r0, asr #5
   15908:	andeq	r7, r1, ip, lsl #5
   1590c:	andeq	r7, r1, r0, ror r2
   15910:	andeq	r7, r1, ip, lsr r2
   15914:	andeq	r7, r1, r0, lsr #4
   15918:	strdeq	r7, [r1], -ip
   1591c:	andeq	r5, r1, ip, asr sp
   15920:	andeq	r7, r1, r8, ror #3
   15924:	ldrdeq	r7, [r1], -r4
   15928:	andeq	r5, r1, ip, asr sp
   1592c:	andeq	r7, r1, r8, asr #3
   15930:	andeq	r5, r1, ip, asr sp
   15934:			; <UNDEFINED> instruction: 0x000171bc
   15938:	muleq	r1, r8, r1
   1593c:	andeq	r5, r1, ip, asr sp
   15940:	andeq	r7, r1, r8, lsl #3
   15944:	andeq	r7, r1, ip, ror r1
   15948:	andeq	r7, r1, r4, ror r1
   1594c:	andeq	r7, r1, ip, asr r1
   15950:	andeq	r7, r1, ip, asr #2
   15954:	andeq	r7, r1, r4, asr #2
   15958:	andeq	r5, r1, ip, asr sp
   1595c:	andeq	r5, r1, ip, asr sp
   15960:	andeq	r5, r1, ip, asr sp
   15964:	andeq	r5, r1, ip, asr sp
   15968:	andeq	r7, r1, r4, lsr #2
   1596c:	strdeq	r7, [r1], -r8
   15970:	andeq	r7, r1, ip, asr r9
   15974:	andeq	r7, r1, ip, lsr r9
   15978:	andeq	r7, r1, ip, lsl r9
   1597c:	andeq	r7, r1, r0, lsl #18
   15980:	strdeq	r7, [r1], -r4
   15984:	andeq	r7, r1, r8, ror #17
   15988:	ldrdeq	r7, [r1], -ip
   1598c:	ldrdeq	r7, [r1], -r0
   15990:	andeq	r7, r1, ip, ror #23
   15994:	andeq	r7, r1, r0, ror #23
   15998:	ldrdeq	r7, [r1], -r4
   1599c:	andeq	r7, r1, r8, asr #23
   159a0:			; <UNDEFINED> instruction: 0x00017bbc
   159a4:			; <UNDEFINED> instruction: 0x00017bb0
   159a8:	andeq	r5, r1, ip, asr sp
   159ac:	andeq	r5, r1, ip, asr sp
   159b0:	muleq	r1, r8, fp
   159b4:	andeq	r7, r1, ip, asr fp
   159b8:	andeq	r7, r1, r4, asr #22
   159bc:	andeq	r7, r1, ip, lsr #22
   159c0:	andeq	r7, r1, r4, lsl fp
   159c4:	andeq	r5, r1, ip, asr sp
   159c8:	andeq	r5, r1, ip, asr sp
   159cc:	andeq	r5, r1, ip, asr sp
   159d0:	andeq	r5, r1, ip, asr sp
   159d4:	andeq	r5, r1, ip, asr sp
   159d8:	andeq	r5, r1, ip, asr sp
   159dc:	andeq	r5, r1, ip, asr sp
   159e0:	strdeq	r7, [r1], -r8
   159e4:	andeq	r5, r1, ip, asr sp
   159e8:	andeq	r7, r1, r8, ror #21
   159ec:	andeq	r7, r1, r0, ror #21
   159f0:	andeq	r7, r1, r0, asr #21
   159f4:	andeq	r7, r1, r8, lsr #21
   159f8:	andeq	r5, r1, ip, asr sp
   159fc:	andeq	r5, r1, ip, asr sp
   15a00:	andeq	r5, r1, ip, asr sp
   15a04:	andeq	r5, r1, ip, asr sp
   15a08:	andeq	r7, r1, r4, ror #20
   15a0c:	andeq	r7, r1, r8, asr #20
   15a10:	andeq	r7, r1, ip, lsr sl
   15a14:	andeq	r5, r1, ip, asr sp
   15a18:	andeq	r7, r1, r0, lsr sl
   15a1c:	andeq	r7, r1, r4, lsr #20
   15a20:	andeq	r7, r1, r8, lsl sl
   15a24:	andeq	r5, r1, ip, asr sp
   15a28:	andeq	r7, r1, ip, lsl #20
   15a2c:	andeq	r5, r1, ip, asr sp
   15a30:	andeq	r7, r1, r0, lsl #20
   15a34:	strdeq	r7, [r1], -r4
   15a38:	andeq	r7, r1, r8, ror #19
   15a3c:	andeq	r7, r1, r8, asr #19
   15a40:	andeq	r7, r1, r8, lsr #19
   15a44:	andeq	r7, r1, r0, lsr #19
   15a48:	muleq	r1, r0, r9
   15a4c:	andeq	r7, r1, ip, ror r9
   15a50:	muleq	r1, r4, lr
   15a54:	andeq	r6, r1, r0, lsl #29
   15a58:	andeq	r6, r1, ip, ror #28
   15a5c:	andeq	r6, r1, r0, ror #28
   15a60:	andeq	r6, r1, ip, asr #28
   15a64:	andeq	r6, r1, r4, lsr lr
   15a68:	andeq	r6, r1, ip, lsl lr
   15a6c:	andeq	r6, r1, r4, lsl #28
   15a70:	andeq	r6, r1, ip, ror #27
   15a74:	ldrdeq	r6, [r1], -r4
   15a78:			; <UNDEFINED> instruction: 0x00016dbc
   15a7c:	andeq	r6, r1, r4, lsr #27
   15a80:	andeq	r6, r1, ip, lsl #27
   15a84:	andeq	r6, r1, r4, ror sp
   15a88:	andeq	r6, r1, ip, asr sp
   15a8c:	andeq	r6, r1, r4, asr #26
   15a90:	andeq	r6, r1, ip, lsr #26
   15a94:	andeq	r6, r1, r4, lsl sp
   15a98:	strdeq	r6, [r1], -ip
   15a9c:	andeq	r6, r1, r4, ror #25
   15aa0:	andeq	r6, r1, ip, asr #25
   15aa4:			; <UNDEFINED> instruction: 0x00016cb0
   15aa8:	muleq	r1, r8, ip
   15aac:	andeq	r6, r1, r0, lsl #25
   15ab0:	andeq	r6, r1, ip, ror #24
   15ab4:	andeq	r6, r1, r8, asr ip
   15ab8:	andeq	r6, r1, r4, asr #24
   15abc:	andeq	r6, r1, r0, lsr ip
   15ac0:	andeq	r6, r1, ip, lsl ip
   15ac4:	andeq	r6, r1, r8, lsl #24
   15ac8:	strdeq	r6, [r1], -r4
   15acc:	andeq	r6, r1, r0, ror #23
   15ad0:	andeq	r6, r1, ip, asr #23
   15ad4:			; <UNDEFINED> instruction: 0x00016bb8
   15ad8:	andeq	r6, r1, r0, lsr #23
   15adc:	andeq	r6, r1, r8, lsl #23
   15ae0:	andeq	r6, r1, r0, ror fp
   15ae4:	andeq	r6, r1, ip, asr fp
   15ae8:	andeq	r6, r1, r4, lsr fp
   15aec:	andeq	r6, r1, r0, lsr #22
   15af0:	andeq	r6, r1, ip, lsl #22
   15af4:	strdeq	r6, [r1], -r4
   15af8:	ldrdeq	r6, [r1], -ip
   15afc:	andeq	r6, r1, r8, asr #21
   15b00:			; <UNDEFINED> instruction: 0x00016ab4
   15b04:	andeq	r6, r1, r0, lsr #21
   15b08:	andeq	r6, r1, ip, lsl #21
   15b0c:	andeq	r6, r1, r0, lsl #21
   15b10:	andeq	r6, r1, r4, ror sl
   15b14:	andeq	r6, r1, r8, ror #20
   15b18:	andeq	r6, r1, ip, asr sl
   15b1c:	andeq	r6, r1, r0, asr sl
   15b20:	andeq	r6, r1, r4, asr #20
   15b24:	andeq	r6, r1, r8, lsr sl
   15b28:	andeq	r6, r1, ip, lsr #20
   15b2c:	andeq	r6, r1, r0, lsr #20
   15b30:	andeq	r6, r1, r4, lsl sl
   15b34:	andeq	r6, r1, r8, lsl #20
   15b38:	strdeq	r6, [r1], -ip
   15b3c:	strdeq	r6, [r1], -r0
   15b40:	andeq	r6, r1, r4, ror #19
   15b44:	ldrdeq	r6, [r1], -ip
   15b48:	ldrdeq	r6, [r1], -r0
   15b4c:	muleq	r1, r0, r9
   15b50:	andeq	r6, r1, r4, lsl #19
   15b54:	andeq	r6, r1, r8, ror #18
   15b58:	andeq	r5, r1, ip, asr sp
   15b5c:	andeq	r6, r1, r8, lsr r9
   15b60:	andeq	r6, r1, ip, lsr #18
   15b64:	andeq	r6, r1, ip, lsl r9
   15b68:	andeq	r6, r1, r0, lsl r9
   15b6c:	andeq	r6, r1, r4, ror #17
   15b70:	andeq	r5, r1, ip, asr sp
   15b74:	ldrdeq	r6, [r1], -ip
   15b78:			; <UNDEFINED> instruction: 0x000168bc
   15b7c:	andeq	r5, r1, ip, asr sp
   15b80:	andeq	r6, r1, ip, lsr #17
   15b84:	andeq	r6, r1, r4, lsr #17
   15b88:	muleq	r1, r0, r8
   15b8c:	andeq	r6, r1, ip, ror r8
   15b90:	andeq	r6, r1, r8, ror #16
   15b94:	andeq	r6, r1, r4, asr r8
   15b98:	andeq	r6, r1, r0, asr #16
   15b9c:	andeq	r5, r1, ip, asr sp
   15ba0:	andeq	r6, r1, ip, lsr #16
   15ba4:	andeq	r6, r1, r8, lsl r8
   15ba8:	andeq	r6, r1, ip, lsl #16
   15bac:	andeq	r6, r1, r0, lsl #16
   15bb0:	strdeq	r6, [r1], -r4
   15bb4:	andeq	r6, r1, r8, ror #15
   15bb8:			; <UNDEFINED> instruction: 0x000175b0
   15bbc:	andeq	r7, r1, r4, lsr #11
   15bc0:	andeq	r7, r1, r4, lsl #11
   15bc4:	andeq	r7, r1, r4, ror #10
   15bc8:	andeq	r7, r1, r8, asr r5
   15bcc:	andeq	r7, r1, r8, asr #10
   15bd0:	andeq	r7, r1, ip, lsr r5
   15bd4:	andeq	r7, r1, r4, lsl r5
   15bd8:	andeq	r5, r1, ip, asr sp
   15bdc:	andeq	r7, r1, r4, lsl #10
   15be0:	strdeq	r7, [r1], -r8
   15be4:	andeq	r7, r1, r4, ror #9
   15be8:	andeq	r5, r1, ip, asr sp
   15bec:	andeq	r5, r1, ip, asr sp
   15bf0:	andeq	r5, r1, ip, asr sp
   15bf4:	andeq	r5, r1, ip, asr sp
   15bf8:	ldrdeq	r7, [r1], -ip
   15bfc:	ldrdeq	r7, [r1], -r4
   15c00:	andeq	r7, r1, ip, lsr #9
   15c04:	andeq	r7, r1, r0, asr #8
   15c08:	andeq	r7, r1, r8, lsr #8
   15c0c:	andeq	r5, r1, ip, lsr #25
   15c10:	andeq	r7, r1, r0, lsl r4
   15c14:	andeq	r7, r1, r4, lsl #8
   15c18:	strdeq	r7, [r1], -r8
   15c1c:	ldrdeq	r7, [r1], -r4
   15c20:			; <UNDEFINED> instruction: 0x000173b8
   15c24:	andeq	r5, r1, ip, asr sp
   15c28:	andeq	r5, r1, ip, asr sp
   15c2c:	andeq	r5, r1, ip, asr sp
   15c30:	andeq	r7, r1, ip, lsr #7
   15c34:	andeq	r7, r1, r4, lsl #15
   15c38:	andeq	r7, r1, r8, ror #14
   15c3c:	andeq	r7, r1, r0, ror #14
   15c40:	andeq	r7, r1, r8, asr r7
   15c44:	andeq	r5, r1, ip, asr sp
   15c48:	andeq	r5, r1, ip, asr sp
   15c4c:	andeq	r7, r1, r4, asr #14
   15c50:	andeq	r7, r1, r0, lsr r7
   15c54:	andeq	r7, r1, ip, lsl r7
   15c58:	andeq	r7, r1, r8, lsl #14
   15c5c:	strdeq	r7, [r1], -r4
   15c60:	andeq	r7, r1, r0, ror #13
   15c64:	andeq	r7, r1, ip, asr #13
   15c68:			; <UNDEFINED> instruction: 0x000176b8
   15c6c:	andeq	r7, r1, r4, lsr #13
   15c70:	muleq	r1, r0, r6
   15c74:	andeq	r7, r1, ip, ror #12
   15c78:	andeq	r7, r1, r8, asr #12
   15c7c:	andeq	r7, r1, ip, lsr #17
   15c80:	andeq	r7, r1, r8, lsl #17
   15c84:	andeq	r7, r1, ip, ror #16
   15c88:	andeq	r7, r1, r0, lsr r8
   15c8c:	andeq	r7, r1, r4, lsl r8
   15c90:	strdeq	r7, [r1], -r8
   15c94:	ldrdeq	r7, [r1], -r0
   15c98:	andeq	r7, r1, r8, lsr #15
   15c9c:	andeq	r7, r1, r8, lsl ip
   15ca0:	andeq	r7, r1, r0, asr #24
   15ca4:	andeq	r6, r1, r0, asr #18
   15ca8:	andeq	r7, r1, r0, lsl #21
   15cac:	ldm	r8, {r0, r1, r2, r3}
   15cb0:	ldr	r5, [sp, #20]
   15cb4:	stm	r5, {r0, r1, r2, r3}
   15cb8:	movw	r1, #29096	; 0x71a8
   15cbc:	ldr	r5, [r8, #-32]	; 0xffffffe0
   15cc0:	movt	r1, #4
   15cc4:	mov	r0, r5
   15cc8:	bl	13490 <strcmp@plt>
   15ccc:	cmp	r0, #0
   15cd0:	bne	15ce8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e5c>
   15cd4:	ldr	r3, [r8, #-16]
   15cd8:	cmp	r3, #0
   15cdc:	moveq	r3, #1
   15ce0:	streq	r3, [sp, #80]	; 0x50
   15ce4:	beq	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   15ce8:	movw	r1, #29104	; 0x71b0
   15cec:	mov	r0, r5
   15cf0:	movt	r1, #4
   15cf4:	bl	13490 <strcmp@plt>
   15cf8:	cmp	r0, #0
   15cfc:	bne	15d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e88>
   15d00:	ldr	r3, [r8, #-16]
   15d04:	cmp	r3, #0
   15d08:	moveq	r3, #1
   15d0c:	streq	r3, [sp, #84]	; 0x54
   15d10:	beq	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   15d14:	mov	r0, r5
   15d18:	movw	r1, #29112	; 0x71b8
   15d1c:	movt	r1, #4
   15d20:	bl	13490 <strcmp@plt>
   15d24:	cmp	r0, #0
   15d28:	bne	15d3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb0>
   15d2c:	ldr	r3, [r8, #-16]
   15d30:	cmp	r3, #0
   15d34:	strne	r3, [sp, #92]	; 0x5c
   15d38:	bne	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   15d3c:	mov	r2, #5
   15d40:	movw	r1, #29120	; 0x71c0
   15d44:	mov	r0, #0
   15d48:	movt	r1, #4
   15d4c:	bl	13688 <dcgettext@plt>
   15d50:	mov	r1, #0
   15d54:	ldr	r2, [r8, #-32]	; 0xffffffe0
   15d58:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   15d5c:	ldr	r3, [r6]
   15d60:	movw	r5, #964	; 0x3c4
   15d64:	movt	r5, #10
   15d68:	cmp	r3, #0
   15d6c:	bne	16244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b8>
   15d70:	ldr	ip, [sp, #40]	; 0x28
   15d74:	ldr	r5, [sp, #68]	; 0x44
   15d78:	add	r3, ip, r5
   15d7c:	ldr	ip, [sp, #56]	; 0x38
   15d80:	add	r3, r3, #804	; 0x324
   15d84:	sxth	r2, ip
   15d88:	ldrh	r7, [r3]
   15d8c:	sub	r8, r8, r2, lsl #4
   15d90:	sub	r4, r4, r2, lsl #1
   15d94:	ldr	r5, [sp, #20]
   15d98:	sub	ip, r7, #155	; 0x9b
   15d9c:	add	r8, r8, #16
   15da0:	lsl	ip, ip, #1
   15da4:	ldm	r5, {r0, r1, r2, r3}
   15da8:	ldr	r5, [sp, #40]	; 0x28
   15dac:	add	r7, r5, ip
   15db0:	ldrsh	r5, [r4]
   15db4:	add	r7, r7, #1552	; 0x610
   15db8:	stm	r8, {r0, r1, r2, r3}
   15dbc:	movw	r3, #1973	; 0x7b5
   15dc0:	ldrsh	r7, [r7]
   15dc4:	add	r7, r7, r5
   15dc8:	cmp	r7, r3
   15dcc:	bhi	15dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f60>
   15dd0:	lsl	r7, r7, #1
   15dd4:	add	r3, sl, r7
   15dd8:	add	r3, r3, #3152	; 0xc50
   15ddc:	add	r3, r3, #4
   15de0:	ldrsh	r3, [r3]
   15de4:	cmp	r3, r5
   15de8:	beq	16370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24e4>
   15dec:	ldr	r5, [sp, #40]	; 0x28
   15df0:	add	ip, r5, ip
   15df4:	add	ip, ip, #1808	; 0x710
   15df8:	add	ip, ip, #8
   15dfc:	ldrsh	ip, [ip]
   15e00:	str	ip, [sp, #24]
   15e04:	add	r4, r4, #2
   15e08:	b	15510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1684>
   15e0c:	movw	ip, #16684	; 0x412c
   15e10:	movt	ip, #4
   15e14:	add	r3, ip, r7
   15e18:	str	ip, [sp, #24]
   15e1c:	sub	r3, r3, #1072	; 0x430
   15e20:	ldrsh	r7, [r3, #-8]
   15e24:	cmp	r7, #0
   15e28:	bgt	1630c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2480>
   15e2c:	cmn	r7, #344	; 0x158
   15e30:	cmpne	r7, #0
   15e34:	rsbne	r7, r7, #0
   15e38:	bne	156a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181c>
   15e3c:	ldr	ip, [sp, #64]	; 0x40
   15e40:	cmp	ip, #0
   15e44:	beq	16224 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2398>
   15e48:	ldr	ip, [sp, #64]	; 0x40
   15e4c:	cmp	ip, #3
   15e50:	beq	16074 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e8>
   15e54:	mov	r9, r4
   15e58:	movw	r7, #24868	; 0x6124
   15e5c:	mov	r2, r5
   15e60:	movt	r7, #4
   15e64:	ldr	r4, [sp, #24]
   15e68:	b	15e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe8>
   15e6c:	lsl	r2, r9, #1
   15e70:	mov	r9, r5
   15e74:	add	r3, sl, r2
   15e78:	mov	r1, r9
   15e7c:	add	r3, r3, #1136	; 0x470
   15e80:	add	r3, r3, #12
   15e84:	ldrsh	r3, [r3]
   15e88:	cmn	r3, #664	; 0x298
   15e8c:	beq	15eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x202c>
   15e90:	add	r3, r3, #1
   15e94:	movw	r0, #1973	; 0x7b5
   15e98:	cmp	r3, r0
   15e9c:	bhi	15eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x202c>
   15ea0:	lsl	r3, r3, #1
   15ea4:	add	r0, sl, r3
   15ea8:	add	r0, r0, #3152	; 0xc50
   15eac:	ldrsh	ip, [r0, #4]
   15eb0:	cmp	ip, #1
   15eb4:	beq	15f00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2074>
   15eb8:	cmp	fp, r9
   15ebc:	beq	15fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2134>
   15ec0:	add	r2, r7, r2
   15ec4:	movw	r0, #29244	; 0x723c
   15ec8:	add	r2, r2, #2080	; 0x820
   15ecc:	movt	r0, #4
   15ed0:	sub	r5, r9, #2
   15ed4:	sub	r8, r8, #16
   15ed8:	ldrh	r1, [r2]
   15edc:	bl	1536c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e0>
   15ee0:	ldr	r3, [r6]
   15ee4:	ldrsh	r9, [r9, #-2]
   15ee8:	cmp	r3, #0
   15eec:	beq	15e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe0>
   15ef0:	mov	r0, fp
   15ef4:	mov	r1, r5
   15ef8:	bl	152bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1430>
   15efc:	b	15e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe0>
   15f00:	add	r3, r4, r3
   15f04:	sub	r3, r3, #1072	; 0x430
   15f08:	sub	r3, r3, #8
   15f0c:	ldrsh	r3, [r3]
   15f10:	cmp	r3, #0
   15f14:	ble	15eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x202c>
   15f18:	cmp	r3, #17
   15f1c:	mov	r4, r9
   15f20:	mov	r9, r3
   15f24:	beq	17cc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3e3c>
   15f28:	movw	r3, #976	; 0x3d0
   15f2c:	movt	r3, #10
   15f30:	ldr	r7, [r6]
   15f34:	add	r5, r8, #16
   15f38:	ldm	r3, {r0, r1, r2, r3}
   15f3c:	cmp	r7, #0
   15f40:	mov	r8, r5
   15f44:	streq	r9, [sp, #24]
   15f48:	stm	r5, {r0, r1, r2, r3}
   15f4c:	moveq	r5, #3
   15f50:	streq	r5, [sp, #64]	; 0x40
   15f54:	beq	15e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f78>
   15f58:	ldr	r5, [sp, #44]	; 0x2c
   15f5c:	mov	r1, ip
   15f60:	movw	r2, #28620	; 0x6fcc
   15f64:	movw	r3, #28852	; 0x70b4
   15f68:	movt	r2, #4
   15f6c:	movt	r3, #4
   15f70:	ldr	r0, [r5]
   15f74:	movw	ip, #24868	; 0x6124
   15f78:	movt	ip, #4
   15f7c:	str	ip, [sp, #40]	; 0x28
   15f80:	bl	13b74 <__fprintf_chk@plt>
   15f84:	ldr	r5, [sp, #40]	; 0x28
   15f88:	ldr	ip, [sp, #44]	; 0x2c
   15f8c:	add	r3, r5, r9, lsl #1
   15f90:	str	r9, [sp, #24]
   15f94:	add	r3, r3, #2080	; 0x820
   15f98:	mov	r5, #3
   15f9c:	ldr	r0, [ip]
   15fa0:	ldrh	r1, [r3]
   15fa4:	str	r5, [sp, #64]	; 0x40
   15fa8:	bl	15320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1494>
   15fac:	ldr	ip, [sp, #44]	; 0x2c
   15fb0:	mov	r0, #10
   15fb4:	ldr	r1, [ip]
   15fb8:	bl	13c28 <fputc@plt>
   15fbc:	b	15e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f78>
   15fc0:	mov	r4, r1
   15fc4:	mov	r5, #1
   15fc8:	ldr	ip, [sp, #36]	; 0x24
   15fcc:	ldr	r3, [ip]
   15fd0:	cmp	r3, #0
   15fd4:	cmnne	r3, #2
   15fd8:	bne	162f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x246c>
   15fdc:	ldr	r3, [r6]
   15fe0:	cmp	r3, #0
   15fe4:	bne	162e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x245c>
   15fe8:	cmp	fp, r4
   15fec:	movwne	r6, #24868	; 0x6124
   15ff0:	movtne	r6, #4
   15ff4:	beq	1601c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2190>
   15ff8:	ldrsh	r3, [r4], #-2
   15ffc:	movw	r0, #29312	; 0x7280
   16000:	movt	r0, #4
   16004:	add	r3, r6, r3, lsl #1
   16008:	add	r3, r3, #2080	; 0x820
   1600c:	ldrh	r1, [r3]
   16010:	bl	1536c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e0>
   16014:	cmp	fp, r4
   16018:	bne	15ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x216c>
   1601c:	ldr	ip, [sp, #16]
   16020:	cmp	fp, ip
   16024:	beq	16030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a4>
   16028:	mov	r0, fp
   1602c:	bl	13574 <free@plt>
   16030:	mov	r0, r5
   16034:	ldr	r5, [sp, #48]	; 0x30
   16038:	ldr	r2, [sp, #3716]	; 0xe84
   1603c:	ldr	r3, [r5]
   16040:	cmp	r2, r3
   16044:	bne	17cd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3e44>
   16048:	add	sp, sp, #3712	; 0xe80
   1604c:	add	sp, sp, #12
   16050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16054:	ldr	r5, [sp, #44]	; 0x2c
   16058:	movw	r2, #28772	; 0x7064
   1605c:	mov	r1, #1
   16060:	movt	r2, #4
   16064:	ldr	r3, [sp, #24]
   16068:	ldr	r0, [r5]
   1606c:	bl	13b74 <__fprintf_chk@plt>
   16070:	b	15600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1774>
   16074:	ldr	ip, [sp, #36]	; 0x24
   16078:	movw	r7, #968	; 0x3c8
   1607c:	movt	r7, #10
   16080:	ldr	r3, [ip]
   16084:	cmp	r3, #0
   16088:	ble	1638c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2500>
   1608c:	movw	r0, #29224	; 0x7228
   16090:	ldr	r1, [sp, #32]
   16094:	movt	r0, #4
   16098:	bl	1536c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e0>
   1609c:	mvn	r3, #1
   160a0:	str	r3, [r7]
   160a4:	b	15e54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc8>
   160a8:	ldr	r3, [r6]
   160ac:	cmp	r3, #0
   160b0:	bne	16398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x250c>
   160b4:	bl	18190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4304>
   160b8:	ldr	ip, [sp, #36]	; 0x24
   160bc:	cmp	r0, #0
   160c0:	str	r0, [ip]
   160c4:	bgt	15634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17a8>
   160c8:	ldr	r3, [r6]
   160cc:	mov	ip, #0
   160d0:	ldr	r0, [sp, #36]	; 0x24
   160d4:	cmp	r3, ip
   160d8:	streq	r3, [sp, #32]
   160dc:	str	ip, [r0]
   160e0:	beq	1565c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17d0>
   160e4:	ldr	lr, [sp, #44]	; 0x2c
   160e8:	movw	r0, #28812	; 0x708c
   160ec:	mov	r1, #1
   160f0:	mov	r2, #21
   160f4:	movt	r0, #4
   160f8:	str	ip, [sp, #32]
   160fc:	ldr	r3, [lr]
   16100:	bl	137a8 <fwrite@plt>
   16104:	b	1565c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17d0>
   16108:	ldr	ip, [sp, #44]	; 0x2c
   1610c:	mov	r1, #1
   16110:	movw	r2, #28620	; 0x6fcc
   16114:	movw	r3, #28836	; 0x70a4
   16118:	movt	r2, #4
   1611c:	movt	r3, #4
   16120:	ldr	r0, [ip]
   16124:	bl	13b74 <__fprintf_chk@plt>
   16128:	ldr	ip, [sp, #44]	; 0x2c
   1612c:	ldr	r1, [sp, #32]
   16130:	ldr	r0, [ip]
   16134:	bl	15320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1494>
   16138:	ldr	ip, [sp, #44]	; 0x2c
   1613c:	mov	r0, #10
   16140:	ldr	r1, [ip]
   16144:	bl	13c28 <fputc@plt>
   16148:	b	1565c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17d0>
   1614c:	ldr	ip, [sp, #44]	; 0x2c
   16150:	movw	r2, #28740	; 0x7044
   16154:	mov	r1, #1
   16158:	movt	r2, #4
   1615c:	ldr	r3, [sp, #28]
   16160:	ldr	r0, [ip]
   16164:	bl	13b74 <__fprintf_chk@plt>
   16168:	b	155dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1750>
   1616c:	ldr	r5, [sp, #44]	; 0x2c
   16170:	lsl	ip, r7, #1
   16174:	ldr	lr, [sp, #40]	; 0x28
   16178:	movw	r2, #28864	; 0x70c0
   1617c:	str	ip, [sp, #68]	; 0x44
   16180:	movt	r2, #4
   16184:	ldr	r0, [r5]
   16188:	add	r5, lr, ip
   1618c:	sub	ip, r5, #3312	; 0xcf0
   16190:	mov	r1, #1
   16194:	sub	ip, ip, #8
   16198:	sub	r3, r7, #1
   1619c:	ldrh	ip, [ip]
   161a0:	str	ip, [sp]
   161a4:	bl	13b74 <__fprintf_chk@plt>
   161a8:	ldr	ip, [sp, #56]	; 0x38
   161ac:	cmp	ip, #0
   161b0:	beq	156ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1860>
   161b4:	ldrh	r5, [r5, #24]
   161b8:	mov	r9, #0
   161bc:	ldr	r3, [pc, #4080]	; 171b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3328>
   161c0:	sub	r5, r5, #1
   161c4:	str	r7, [sp, #72]	; 0x48
   161c8:	ldr	r7, [sp, #44]	; 0x2c
   161cc:	add	r5, r3, r5, lsl #1
   161d0:	str	r4, [sp, #76]	; 0x4c
   161d4:	mov	r4, r9
   161d8:	mov	r9, ip
   161dc:	add	r4, r4, #1
   161e0:	mov	r1, #1
   161e4:	movw	r2, #28904	; 0x70e8
   161e8:	ldr	r0, [r7]
   161ec:	movt	r2, #4
   161f0:	mov	r3, r4
   161f4:	bl	13b74 <__fprintf_chk@plt>
   161f8:	ldr	r0, [r7]
   161fc:	ldrsh	r1, [r5, #2]!
   16200:	bl	15320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1494>
   16204:	mov	r0, #10
   16208:	ldr	r1, [r7]
   1620c:	bl	13c28 <fputc@plt>
   16210:	cmp	r9, r4
   16214:	bne	161dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2350>
   16218:	ldr	r7, [sp, #72]	; 0x48
   1621c:	ldr	r4, [sp, #76]	; 0x4c
   16220:	b	156ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1860>
   16224:	ldr	ip, [sp, #52]	; 0x34
   16228:	movw	r0, #29208	; 0x7218
   1622c:	movt	r0, #4
   16230:	ldr	r3, [ip]
   16234:	add	r3, r3, #1
   16238:	str	r3, [ip]
   1623c:	bl	153d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1544>
   16240:	b	15e54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc8>
   16244:	ldr	ip, [sp, #44]	; 0x2c
   16248:	mov	r1, #1
   1624c:	movw	r2, #28620	; 0x6fcc
   16250:	movw	r3, #29200	; 0x7210
   16254:	movt	r2, #4
   16258:	movt	r3, #4
   1625c:	ldr	r0, [ip]
   16260:	bl	13b74 <__fprintf_chk@plt>
   16264:	ldr	ip, [sp, #40]	; 0x28
   16268:	ldr	lr, [sp, #68]	; 0x44
   1626c:	add	r3, ip, lr
   16270:	ldr	ip, [sp, #44]	; 0x2c
   16274:	add	r3, r3, #804	; 0x324
   16278:	ldrh	r7, [r3]
   1627c:	ldr	r0, [ip]
   16280:	mov	r1, r7
   16284:	bl	15320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1494>
   16288:	ldr	ip, [sp, #44]	; 0x2c
   1628c:	mov	r0, #10
   16290:	ldr	r1, [ip]
   16294:	bl	13c28 <fputc@plt>
   16298:	ldr	r3, [r5]
   1629c:	ldr	r5, [sp, #56]	; 0x38
   162a0:	cmp	r3, #0
   162a4:	sxth	r2, r5
   162a8:	sub	r8, r8, r2, lsl #4
   162ac:	sub	r4, r4, r2, lsl #1
   162b0:	beq	15d94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f08>
   162b4:	mov	r0, fp
   162b8:	mov	r1, r4
   162bc:	bl	152bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1430>
   162c0:	b	15d94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f08>
   162c4:	movw	r3, #63776	; 0xf920
   162c8:	movt	r3, #9
   162cc:	movw	r0, #28724	; 0x7034
   162d0:	mov	r1, #1
   162d4:	ldr	r3, [r3]
   162d8:	mov	r2, #15
   162dc:	movt	r0, #4
   162e0:	bl	137a8 <fwrite@plt>
   162e4:	b	1549c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1610>
   162e8:	mov	r0, fp
   162ec:	mov	r1, r4
   162f0:	bl	152bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1430>
   162f4:	b	15fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215c>
   162f8:	ldr	r1, [sp, #32]
   162fc:	movw	r0, #29280	; 0x7260
   16300:	movt	r0, #4
   16304:	bl	1536c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e0>
   16308:	b	15fdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2150>
   1630c:	cmp	r7, #17
   16310:	beq	17cc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3e3c>
   16314:	ldr	r5, [sp, #64]	; 0x40
   16318:	ldr	r3, [r6]
   1631c:	cmp	r5, #0
   16320:	subne	r5, r5, #1
   16324:	strne	r5, [sp, #64]	; 0x40
   16328:	cmp	r3, #0
   1632c:	bne	17c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3df0>
   16330:	ldr	ip, [sp, #36]	; 0x24
   16334:	movw	r3, #968	; 0x3c8
   16338:	movt	r3, #10
   1633c:	str	r9, [sp, #32]
   16340:	str	r7, [sp, #24]
   16344:	ldr	r2, [ip]
   16348:	add	ip, r8, #16
   1634c:	cmp	r2, #0
   16350:	mov	r8, ip
   16354:	mvnne	r2, #1
   16358:	strne	r2, [r3]
   1635c:	movw	r3, #976	; 0x3d0
   16360:	movt	r3, #10
   16364:	ldm	r3, {r0, r1, r2, r3}
   16368:	stm	ip, {r0, r1, r2, r3}
   1636c:	b	15e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f78>
   16370:	ldr	ip, [sp, #24]
   16374:	add	r3, ip, r7
   16378:	sub	r3, r3, #1072	; 0x430
   1637c:	sub	r3, r3, #8
   16380:	ldrsh	r3, [r3]
   16384:	str	r3, [sp, #24]
   16388:	b	15e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f78>
   1638c:	bne	15e54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc8>
   16390:	mov	r5, #1
   16394:	b	15fdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2150>
   16398:	ldr	ip, [sp, #44]	; 0x2c
   1639c:	movw	r0, #28792	; 0x7078
   163a0:	mov	r1, #1
   163a4:	mov	r2, #17
   163a8:	movt	r0, #4
   163ac:	ldr	r3, [ip]
   163b0:	bl	137a8 <fwrite@plt>
   163b4:	b	160b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2228>
   163b8:	mov	r0, #16
   163bc:	bl	137b4 <xmalloc@plt>
   163c0:	ldr	r3, [r8]
   163c4:	ldrb	r2, [r3]
   163c8:	cmp	r2, #33	; 0x21
   163cc:	addeq	r3, r3, #1
   163d0:	strne	r3, [r0, #4]
   163d4:	movne	r3, #0
   163d8:	streq	r3, [r0, #4]
   163dc:	moveq	r3, #1
   163e0:	str	r3, [r0]
   163e4:	mov	r3, #0
   163e8:	str	r3, [r0, #8]
   163ec:	ldr	r3, [r8, #-32]	; 0xffffffe0
   163f0:	str	r0, [sp, #80]	; 0x50
   163f4:	str	r3, [r0, #12]
   163f8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   163fc:	mov	r0, #16
   16400:	bl	137b4 <xmalloc@plt>
   16404:	ldr	r3, [r8]
   16408:	ldrb	r2, [r3]
   1640c:	cmp	r2, #33	; 0x21
   16410:	addeq	r3, r3, #1
   16414:	strne	r3, [r0, #4]
   16418:	movne	r3, #0
   1641c:	streq	r3, [r0, #4]
   16420:	moveq	r3, #1
   16424:	str	r3, [r0]
   16428:	mov	r3, #0
   1642c:	str	r0, [sp, #80]	; 0x50
   16430:	str	r3, [r0, #8]
   16434:	str	r3, [r0, #12]
   16438:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1643c:	ldr	r2, [r8, #-16]
   16440:	mov	r3, #6
   16444:	str	r3, [sp, #88]	; 0x58
   16448:	mov	r3, #0
   1644c:	str	r3, [sp, #84]	; 0x54
   16450:	str	r2, [sp, #80]	; 0x50
   16454:	str	r3, [sp, #92]	; 0x5c
   16458:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1645c:	ldr	r3, [r8, #-16]
   16460:	mov	r2, #1
   16464:	str	r2, [sp, #88]	; 0x58
   16468:	mov	r2, #0
   1646c:	str	r3, [sp, #80]	; 0x50
   16470:	ldr	r3, [r8, #-48]	; 0xffffffd0
   16474:	str	r2, [sp, #92]	; 0x5c
   16478:	str	r3, [sp, #84]	; 0x54
   1647c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16480:	ldr	r2, [r8, #-32]	; 0xffffffe0
   16484:	mov	r3, #2
   16488:	str	r3, [sp, #88]	; 0x58
   1648c:	mov	r3, #0
   16490:	str	r3, [sp, #84]	; 0x54
   16494:	str	r2, [sp, #80]	; 0x50
   16498:	str	r3, [sp, #92]	; 0x5c
   1649c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   164a0:	ldr	r2, [r8, #-32]	; 0xffffffe0
   164a4:	mov	r3, #4
   164a8:	str	r3, [sp, #88]	; 0x58
   164ac:	mov	r3, #0
   164b0:	str	r3, [sp, #84]	; 0x54
   164b4:	str	r2, [sp, #80]	; 0x50
   164b8:	str	r3, [sp, #92]	; 0x5c
   164bc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   164c0:	ldr	r2, [r8, #-32]	; 0xffffffe0
   164c4:	mov	r3, #1
   164c8:	str	r3, [sp, #88]	; 0x58
   164cc:	mov	r3, #0
   164d0:	str	r3, [sp, #84]	; 0x54
   164d4:	str	r2, [sp, #80]	; 0x50
   164d8:	str	r3, [sp, #92]	; 0x5c
   164dc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   164e0:	ldr	r2, [r8, #-32]	; 0xffffffe0
   164e4:	mov	r3, #3
   164e8:	str	r3, [sp, #88]	; 0x58
   164ec:	mov	r3, #0
   164f0:	str	r3, [sp, #84]	; 0x54
   164f4:	str	r2, [sp, #80]	; 0x50
   164f8:	str	r3, [sp, #92]	; 0x5c
   164fc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16500:	ldr	r2, [r8, #-16]
   16504:	mov	r3, #5
   16508:	str	r3, [sp, #88]	; 0x58
   1650c:	mov	r3, #0
   16510:	str	r3, [sp, #84]	; 0x54
   16514:	str	r2, [sp, #80]	; 0x50
   16518:	str	r3, [sp, #92]	; 0x5c
   1651c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16520:	ldr	r2, [r8, #-16]
   16524:	mov	r3, #2
   16528:	str	r3, [sp, #88]	; 0x58
   1652c:	mov	r3, #0
   16530:	str	r3, [sp, #84]	; 0x54
   16534:	str	r2, [sp, #80]	; 0x50
   16538:	str	r3, [sp, #92]	; 0x5c
   1653c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16540:	ldr	r2, [r8, #-16]
   16544:	mov	r3, #1
   16548:	str	r3, [sp, #88]	; 0x58
   1654c:	mov	r3, #0
   16550:	str	r3, [sp, #84]	; 0x54
   16554:	str	r2, [sp, #80]	; 0x50
   16558:	str	r3, [sp, #92]	; 0x5c
   1655c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16560:	ldr	r2, [r8]
   16564:	mov	r3, #0
   16568:	str	r3, [sp, #88]	; 0x58
   1656c:	str	r2, [sp, #80]	; 0x50
   16570:	ldr	r2, [r8, #-32]	; 0xffffffe0
   16574:	str	r3, [sp, #92]	; 0x5c
   16578:	str	r2, [sp, #84]	; 0x54
   1657c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16580:	ldr	r2, [r8]
   16584:	mov	r3, #0
   16588:	str	r3, [sp, #88]	; 0x58
   1658c:	str	r3, [sp, #84]	; 0x54
   16590:	str	r2, [sp, #80]	; 0x50
   16594:	str	r3, [sp, #92]	; 0x5c
   16598:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1659c:	movw	r3, #28996	; 0x7144
   165a0:	movt	r3, #4
   165a4:	str	r3, [sp, #80]	; 0x50
   165a8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   165ac:	movw	r3, #12032	; 0x2f00
   165b0:	movt	r3, #5
   165b4:	str	r3, [sp, #80]	; 0x50
   165b8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   165bc:	ldr	r3, [r8]
   165c0:	str	r3, [sp, #80]	; 0x50
   165c4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   165c8:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   165cc:	ldr	r1, [r8, #-16]
   165d0:	ldr	r0, [r8, #-48]	; 0xffffffd0
   165d4:	bl	2e7d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a944>
   165d8:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   165dc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   165e0:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   165e4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   165e8:	ldr	r0, [r8, #-16]
   165ec:	mov	r1, #0
   165f0:	bl	26164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122d8>
   165f4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   165f8:	movw	r3, #1032	; 0x408
   165fc:	movt	r3, #10
   16600:	ldrb	r1, [r8, #-32]	; 0xffffffe0
   16604:	ldrb	r2, [r3]
   16608:	bfi	r2, r1, #7, #1
   1660c:	strb	r2, [r3]
   16610:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16614:	movw	r3, #1032	; 0x408
   16618:	movt	r3, #10
   1661c:	add	ip, sp, #3712	; 0xe80
   16620:	movw	r1, #61896	; 0xf1c8
   16624:	ldrb	r2, [r3]
   16628:	movt	r1, #65535	; 0xffff
   1662c:	add	ip, ip, #8
   16630:	orr	r0, r2, #128	; 0x80
   16634:	ubfx	r2, r2, #7, #1
   16638:	strb	r0, [r3]
   1663c:	mov	r3, #0
   16640:	uxtb	r2, r2
   16644:	strd	r2, [ip, r1]
   16648:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1664c:	movw	r3, #1032	; 0x408
   16650:	movt	r3, #10
   16654:	ldrb	r1, [r8, #-32]	; 0xffffffe0
   16658:	ldrb	r2, [r3]
   1665c:	bfi	r2, r1, #7, #1
   16660:	strb	r2, [r3]
   16664:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16668:	movw	r3, #1032	; 0x408
   1666c:	movt	r3, #10
   16670:	add	r5, sp, #3712	; 0xe80
   16674:	movw	r1, #61896	; 0xf1c8
   16678:	ldrb	r2, [r3]
   1667c:	movt	r1, #65535	; 0xffff
   16680:	add	r5, r5, #8
   16684:	orr	r0, r2, #128	; 0x80
   16688:	ubfx	r2, r2, #7, #1
   1668c:	strb	r0, [r3]
   16690:	mov	r3, #0
   16694:	uxtb	r2, r2
   16698:	strd	r2, [r5, r1]
   1669c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   166a0:	movw	r3, #1032	; 0x408
   166a4:	movt	r3, #10
   166a8:	ldrb	r1, [r8, #-32]	; 0xffffffe0
   166ac:	ldrb	r2, [r3]
   166b0:	bfi	r2, r1, #7, #1
   166b4:	strb	r2, [r3]
   166b8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   166bc:	movw	r3, #1032	; 0x408
   166c0:	movt	r3, #10
   166c4:	movw	r1, #61896	; 0xf1c8
   166c8:	movt	r1, #65535	; 0xffff
   166cc:	ldrb	r2, [r3]
   166d0:	orr	r0, r2, #128	; 0x80
   166d4:	strb	r0, [r3]
   166d8:	add	r0, sp, #3712	; 0xe80
   166dc:	ubfx	r2, r2, #7, #1
   166e0:	add	r0, r0, #8
   166e4:	mov	r3, #0
   166e8:	uxtb	r2, r2
   166ec:	strd	r2, [r0, r1]
   166f0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   166f4:	mov	r1, #0
   166f8:	ldr	r0, [r8]
   166fc:	mov	r2, r1
   16700:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   16704:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16708:	mov	r1, #0
   1670c:	ldr	r0, [r8]
   16710:	mov	r2, r1
   16714:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   16718:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1671c:	mov	r1, #0
   16720:	ldr	r0, [r8]
   16724:	mov	r2, r1
   16728:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   1672c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16730:	ldr	r0, [r8]
   16734:	mov	r1, #4
   16738:	mov	r2, #0
   1673c:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   16740:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16744:	ldr	r0, [r8]
   16748:	mov	r1, #4
   1674c:	mov	r2, #0
   16750:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   16754:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16758:	ldr	r0, [r8]
   1675c:	mov	r1, #4
   16760:	mov	r2, #0
   16764:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   16768:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1676c:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   16770:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16774:	bl	1a408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x657c>
   16778:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1677c:	ldr	r0, [r8, #-16]
   16780:	bl	29478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x155ec>
   16784:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16788:	ldr	r0, [r8, #-48]	; 0xffffffd0
   1678c:	ldr	r1, [r8, #-16]
   16790:	bl	22408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe57c>
   16794:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16798:	ldr	r0, [r8]
   1679c:	mov	r1, #1
   167a0:	bl	26a90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c04>
   167a4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   167a8:	ldr	r0, [r8]
   167ac:	mov	r1, #0
   167b0:	bl	26a90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c04>
   167b4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   167b8:	ldr	r0, [r8, #-16]
   167bc:	bl	26c9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e10>
   167c0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   167c4:	ldr	r0, [r8, #-16]
   167c8:	bl	26c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12dc4>
   167cc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   167d0:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   167d4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   167d8:	bl	1a3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6544>
   167dc:	ldr	r0, [r8]
   167e0:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   167e4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   167e8:	ldr	r3, [r8, #-112]	; 0xffffff90
   167ec:	str	r3, [sp, #80]	; 0x50
   167f0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   167f4:	ldr	r3, [r8, #-48]	; 0xffffffd0
   167f8:	str	r3, [sp, #80]	; 0x50
   167fc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16800:	mov	r3, #0
   16804:	str	r3, [sp, #80]	; 0x50
   16808:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1680c:	ldr	r3, [r8, #-32]	; 0xffffffe0
   16810:	str	r3, [sp, #80]	; 0x50
   16814:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16818:	movw	r3, #64872	; 0xfd68
   1681c:	movt	r3, #9
   16820:	mov	r2, #0
   16824:	str	r2, [r3, #92]	; 0x5c
   16828:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1682c:	movw	r3, #64872	; 0xfd68
   16830:	movt	r3, #9
   16834:	mov	r2, #0
   16838:	str	r2, [r3, #92]	; 0x5c
   1683c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16840:	movw	r3, #64872	; 0xfd68
   16844:	movt	r3, #9
   16848:	mov	r2, #3
   1684c:	str	r2, [r3, #92]	; 0x5c
   16850:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16854:	movw	r3, #64872	; 0xfd68
   16858:	movt	r3, #9
   1685c:	mov	r2, #3
   16860:	str	r2, [r3, #92]	; 0x5c
   16864:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16868:	movw	r3, #64872	; 0xfd68
   1686c:	movt	r3, #9
   16870:	mov	r2, #3
   16874:	str	r2, [r3, #92]	; 0x5c
   16878:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1687c:	movw	r3, #64872	; 0xfd68
   16880:	movt	r3, #9
   16884:	mov	r2, #3
   16888:	str	r2, [r3, #92]	; 0x5c
   1688c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16890:	movw	r3, #64872	; 0xfd68
   16894:	movt	r3, #9
   16898:	mov	r2, #2
   1689c:	str	r2, [r3, #92]	; 0x5c
   168a0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   168a4:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   168a8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   168ac:	bl	1a3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6544>
   168b0:	ldr	r0, [r8]
   168b4:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   168b8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   168bc:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   168c0:	ldr	r1, [r8]
   168c4:	mov	r2, #0
   168c8:	movw	r0, #7988	; 0x1f34
   168cc:	movt	r0, #7
   168d0:	bl	2e6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a85c>
   168d4:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   168d8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   168dc:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   168e0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   168e4:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   168e8:	ldr	ip, [r8, #-16]
   168ec:	ldr	r0, [r8, #-176]	; 0xffffff50
   168f0:	ldr	r1, [r8, #-192]	; 0xffffff40
   168f4:	ldr	r2, [r8]
   168f8:	ldr	r3, [r8, #-48]	; 0xffffffd0
   168fc:	str	ip, [sp]
   16900:	ldr	ip, [r8, #-32]	; 0xffffffe0
   16904:	str	ip, [sp, #4]
   16908:	bl	26f34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x130a8>
   1690c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16910:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   16914:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   16918:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1691c:	ldr	r0, [r8, #-80]	; 0xffffffb0
   16920:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16924:	bl	26cbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e30>
   16928:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1692c:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   16930:	bl	1a3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6544>
   16934:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16938:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   1693c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16940:	movw	r3, #64872	; 0xfd68
   16944:	movt	r3, #9
   16948:	mov	r0, #0
   1694c:	movw	r1, #29192	; 0x7208
   16950:	ldr	r2, [r3, #96]	; 0x60
   16954:	movt	r1, #4
   16958:	mov	r3, r0
   1695c:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   16960:	str	r0, [sp, #80]	; 0x50
   16964:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16968:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   1696c:	ldr	r0, [r8]
   16970:	ldr	r1, [r8, #-48]	; 0xffffffd0
   16974:	ldr	r2, [r8, #-16]
   16978:	ldr	r3, [r8, #-32]	; 0xffffffe0
   1697c:	bl	263f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12564>
   16980:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16984:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   16988:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   1698c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16990:	ldr	ip, [r8, #-48]	; 0xffffffd0
   16994:	movw	r2, #64872	; 0xfd68
   16998:	ldr	r0, [r8, #-144]	; 0xffffff70
   1699c:	movt	r2, #9
   169a0:	ldr	r1, [r8, #-112]	; 0xffffff90
   169a4:	ldr	r3, [r8, #-80]	; 0xffffffb0
   169a8:	str	ip, [sp]
   169ac:	ldr	ip, [r8, #-96]	; 0xffffffa0
   169b0:	ldr	r2, [r2, #92]	; 0x5c
   169b4:	str	ip, [sp, #4]
   169b8:	ldr	ip, [r8, #-16]
   169bc:	str	ip, [sp, #8]
   169c0:	ldr	ip, [r8, #-64]	; 0xffffffc0
   169c4:	str	ip, [sp, #12]
   169c8:	bl	2541c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11590>
   169cc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   169d0:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   169d4:	bl	1a3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6544>
   169d8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   169dc:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   169e0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   169e4:	mov	r3, #0
   169e8:	str	r3, [sp, #80]	; 0x50
   169ec:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   169f0:	movw	r3, #381	; 0x17d
   169f4:	str	r3, [sp, #80]	; 0x50
   169f8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   169fc:	mov	r3, #380	; 0x17c
   16a00:	str	r3, [sp, #80]	; 0x50
   16a04:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a08:	movw	r3, #379	; 0x17b
   16a0c:	str	r3, [sp, #80]	; 0x50
   16a10:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a14:	mov	r3, #0
   16a18:	str	r3, [sp, #80]	; 0x50
   16a1c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a20:	ldr	r3, [r8, #-16]
   16a24:	str	r3, [sp, #80]	; 0x50
   16a28:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a2c:	mov	r3, #0
   16a30:	str	r3, [sp, #80]	; 0x50
   16a34:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a38:	movw	r3, #383	; 0x17f
   16a3c:	str	r3, [sp, #80]	; 0x50
   16a40:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a44:	mov	r3, #0
   16a48:	str	r3, [sp, #80]	; 0x50
   16a4c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a50:	ldr	r3, [r8, #-16]
   16a54:	str	r3, [sp, #80]	; 0x50
   16a58:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a5c:	mov	r3, #0
   16a60:	str	r3, [sp, #80]	; 0x50
   16a64:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a68:	ldr	r3, [r8, #-16]
   16a6c:	str	r3, [sp, #80]	; 0x50
   16a70:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a74:	mov	r3, #0
   16a78:	str	r3, [sp, #80]	; 0x50
   16a7c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a80:	ldr	r3, [r8]
   16a84:	str	r3, [sp, #80]	; 0x50
   16a88:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16a8c:	movw	r0, #358	; 0x166
   16a90:	ldr	r1, [r8, #-16]
   16a94:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   16a98:	str	r0, [sp, #80]	; 0x50
   16a9c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16aa0:	movw	r0, #335	; 0x14f
   16aa4:	ldr	r1, [r8, #-16]
   16aa8:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16aac:	str	r0, [sp, #80]	; 0x50
   16ab0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16ab4:	movw	r0, #333	; 0x14d
   16ab8:	ldr	r1, [r8, #-16]
   16abc:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16ac0:	str	r0, [sp, #80]	; 0x50
   16ac4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16ac8:	ldr	r0, [r8, #-48]	; 0xffffffd0
   16acc:	ldr	r1, [r8, #-16]
   16ad0:	bl	2e7d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a944>
   16ad4:	str	r0, [sp, #80]	; 0x50
   16ad8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16adc:	movw	r0, #325	; 0x145
   16ae0:	ldr	r1, [r8, #-48]	; 0xffffffd0
   16ae4:	ldr	r2, [r8, #-16]
   16ae8:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16aec:	str	r0, [sp, #80]	; 0x50
   16af0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16af4:	mov	r0, #324	; 0x144
   16af8:	ldr	r1, [r8, #-48]	; 0xffffffd0
   16afc:	ldr	r2, [r8, #-16]
   16b00:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16b04:	str	r0, [sp, #80]	; 0x50
   16b08:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16b0c:	movw	r0, #259	; 0x103
   16b10:	ldr	r1, [r8]
   16b14:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16b18:	str	r0, [sp, #80]	; 0x50
   16b1c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16b20:	movw	r0, #279	; 0x117
   16b24:	ldr	r1, [r8, #-16]
   16b28:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   16b2c:	str	r0, [sp, #80]	; 0x50
   16b30:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16b34:	ldr	r1, [r8, #-48]	; 0xffffffd0
   16b38:	movw	r0, #259	; 0x103
   16b3c:	ldr	r5, [r8, #-16]
   16b40:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16b44:	mov	r1, r5
   16b48:	mov	r2, r0
   16b4c:	mov	r0, #304	; 0x130
   16b50:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16b54:	str	r0, [sp, #80]	; 0x50
   16b58:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16b5c:	movw	r0, #294	; 0x126
   16b60:	ldr	r1, [r8, #-16]
   16b64:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   16b68:	str	r0, [sp, #80]	; 0x50
   16b6c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16b70:	movw	r0, #293	; 0x125
   16b74:	ldr	r1, [r8, #-16]
   16b78:	ldr	r2, [r8, #-48]	; 0xffffffd0
   16b7c:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16b80:	str	r0, [sp, #80]	; 0x50
   16b84:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16b88:	mov	r0, #292	; 0x124
   16b8c:	ldr	r1, [r8, #-48]	; 0xffffffd0
   16b90:	ldr	r2, [r8, #-16]
   16b94:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16b98:	str	r0, [sp, #80]	; 0x50
   16b9c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16ba0:	movw	r0, #279	; 0x117
   16ba4:	ldr	r1, [r8, #-48]	; 0xffffffd0
   16ba8:	ldr	r2, [r8, #-16]
   16bac:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16bb0:	str	r0, [sp, #80]	; 0x50
   16bb4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16bb8:	movw	r0, #279	; 0x117
   16bbc:	ldr	r1, [r8, #-16]
   16bc0:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   16bc4:	str	r0, [sp, #80]	; 0x50
   16bc8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16bcc:	movw	r0, #351	; 0x15f
   16bd0:	ldr	r1, [r8, #-16]
   16bd4:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   16bd8:	str	r0, [sp, #80]	; 0x50
   16bdc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16be0:	movw	r0, #385	; 0x181
   16be4:	ldr	r1, [r8, #-16]
   16be8:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16bec:	str	r0, [sp, #80]	; 0x50
   16bf0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16bf4:	movw	r0, #323	; 0x143
   16bf8:	ldr	r1, [r8, #-16]
   16bfc:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16c00:	str	r0, [sp, #80]	; 0x50
   16c04:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16c08:	movw	r0, #322	; 0x142
   16c0c:	ldr	r1, [r8, #-16]
   16c10:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16c14:	str	r0, [sp, #80]	; 0x50
   16c18:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16c1c:	mov	r0, #320	; 0x140
   16c20:	ldr	r1, [r8, #-16]
   16c24:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16c28:	str	r0, [sp, #80]	; 0x50
   16c2c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16c30:	movw	r0, #321	; 0x141
   16c34:	ldr	r1, [r8, #-16]
   16c38:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16c3c:	str	r0, [sp, #80]	; 0x50
   16c40:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16c44:	movw	r0, #299	; 0x12b
   16c48:	mov	r1, #0
   16c4c:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16c50:	str	r0, [sp, #80]	; 0x50
   16c54:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16c58:	ldrd	r0, [r8]
   16c5c:	ldr	r2, [r8, #8]
   16c60:	bl	2e25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a3d0>
   16c64:	str	r0, [sp, #80]	; 0x50
   16c68:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16c6c:	movw	r0, #314	; 0x13a
   16c70:	ldr	r1, [r8, #-16]
   16c74:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   16c78:	str	r0, [sp, #80]	; 0x50
   16c7c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16c80:	movw	r0, #269	; 0x10d
   16c84:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16c88:	ldr	r2, [r8]
   16c8c:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16c90:	str	r0, [sp, #80]	; 0x50
   16c94:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16c98:	movw	r0, #270	; 0x10e
   16c9c:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16ca0:	ldr	r2, [r8]
   16ca4:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16ca8:	str	r0, [sp, #80]	; 0x50
   16cac:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16cb0:	mov	r0, #63	; 0x3f
   16cb4:	ldr	r1, [r8, #-64]	; 0xffffffc0
   16cb8:	ldr	r2, [r8, #-32]	; 0xffffffe0
   16cbc:	ldr	r3, [r8]
   16cc0:	bl	2e444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a5b8>
   16cc4:	str	r0, [sp, #80]	; 0x50
   16cc8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16ccc:	mov	r0, #124	; 0x7c
   16cd0:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16cd4:	ldr	r2, [r8]
   16cd8:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16cdc:	str	r0, [sp, #80]	; 0x50
   16ce0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16ce4:	mov	r0, #94	; 0x5e
   16ce8:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16cec:	ldr	r2, [r8]
   16cf0:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16cf4:	str	r0, [sp, #80]	; 0x50
   16cf8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16cfc:	mov	r0, #38	; 0x26
   16d00:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16d04:	ldr	r2, [r8]
   16d08:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16d0c:	str	r0, [sp, #80]	; 0x50
   16d10:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16d14:	mov	r0, #62	; 0x3e
   16d18:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16d1c:	ldr	r2, [r8]
   16d20:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16d24:	str	r0, [sp, #80]	; 0x50
   16d28:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16d2c:	mov	r0, #60	; 0x3c
   16d30:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16d34:	ldr	r2, [r8]
   16d38:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16d3c:	str	r0, [sp, #80]	; 0x50
   16d40:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16d44:	movw	r0, #273	; 0x111
   16d48:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16d4c:	ldr	r2, [r8]
   16d50:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16d54:	str	r0, [sp, #80]	; 0x50
   16d58:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16d5c:	movw	r0, #274	; 0x112
   16d60:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16d64:	ldr	r2, [r8]
   16d68:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16d6c:	str	r0, [sp, #80]	; 0x50
   16d70:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16d74:	movw	r0, #271	; 0x10f
   16d78:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16d7c:	ldr	r2, [r8]
   16d80:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16d84:	str	r0, [sp, #80]	; 0x50
   16d88:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16d8c:	mov	r0, #272	; 0x110
   16d90:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16d94:	ldr	r2, [r8]
   16d98:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16d9c:	str	r0, [sp, #80]	; 0x50
   16da0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16da4:	movw	r0, #275	; 0x113
   16da8:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16dac:	ldr	r2, [r8]
   16db0:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16db4:	str	r0, [sp, #80]	; 0x50
   16db8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16dbc:	mov	r0, #276	; 0x114
   16dc0:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16dc4:	ldr	r2, [r8]
   16dc8:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16dcc:	str	r0, [sp, #80]	; 0x50
   16dd0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16dd4:	mov	r0, #45	; 0x2d
   16dd8:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16ddc:	ldr	r2, [r8]
   16de0:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16de4:	str	r0, [sp, #80]	; 0x50
   16de8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16dec:	mov	r0, #43	; 0x2b
   16df0:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16df4:	ldr	r2, [r8]
   16df8:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16dfc:	str	r0, [sp, #80]	; 0x50
   16e00:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16e04:	mov	r0, #37	; 0x25
   16e08:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16e0c:	ldr	r2, [r8]
   16e10:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16e14:	str	r0, [sp, #80]	; 0x50
   16e18:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16e1c:	mov	r0, #47	; 0x2f
   16e20:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16e24:	ldr	r2, [r8]
   16e28:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16e2c:	str	r0, [sp, #80]	; 0x50
   16e30:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16e34:	mov	r0, #42	; 0x2a
   16e38:	ldr	r1, [r8, #-32]	; 0xffffffe0
   16e3c:	ldr	r2, [r8]
   16e40:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   16e44:	str	r0, [sp, #80]	; 0x50
   16e48:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16e4c:	mov	r0, #126	; 0x7e
   16e50:	ldr	r1, [r8]
   16e54:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   16e58:	str	r0, [sp, #80]	; 0x50
   16e5c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16e60:	ldr	r3, [r8]
   16e64:	str	r3, [sp, #80]	; 0x50
   16e68:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16e6c:	mov	r0, #33	; 0x21
   16e70:	ldr	r1, [r8]
   16e74:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   16e78:	str	r0, [sp, #80]	; 0x50
   16e7c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16e80:	ldr	r0, [r8, #-48]	; 0xffffffd0
   16e84:	ldr	r1, [r8, #-16]
   16e88:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   16e8c:	str	r0, [sp, #80]	; 0x50
   16e90:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16e94:	ldr	r3, [r8, #-16]
   16e98:	str	r3, [sp, #80]	; 0x50
   16e9c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16ea0:	ldr	r0, [r8, #-32]	; 0xffffffe0
   16ea4:	ldr	r1, [r8]
   16ea8:	bl	296cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15840>
   16eac:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16eb0:	ldr	r0, [r8]
   16eb4:	bl	29b2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ca0>
   16eb8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16ebc:	ldr	r0, [r8, #-16]
   16ec0:	ldr	r1, [r8]
   16ec4:	bl	29be4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d58>
   16ec8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16ecc:	ldr	r0, [r8, #-32]	; 0xffffffe0
   16ed0:	ldr	r1, [r8]
   16ed4:	bl	29be4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d58>
   16ed8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16edc:	ldr	r0, [r8, #-32]	; 0xffffffe0
   16ee0:	ldr	r1, [r8]
   16ee4:	bl	29be4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d58>
   16ee8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16eec:	movw	r3, #1336	; 0x538
   16ef0:	movt	r3, #10
   16ef4:	movw	r2, #28992	; 0x7140
   16ef8:	movt	r2, #4
   16efc:	str	r2, [r3, #76]	; 0x4c
   16f00:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16f04:	mov	r2, #5
   16f08:	movw	r1, #28936	; 0x7108
   16f0c:	mov	r0, #0
   16f10:	movt	r1, #4
   16f14:	bl	13688 <dcgettext@plt>
   16f18:	ldr	r1, [r8]
   16f1c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   16f20:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16f24:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   16f28:	bl	29740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x158b4>
   16f2c:	movw	r3, #64872	; 0xfd68
   16f30:	movt	r3, #9
   16f34:	ldr	r2, [r3]
   16f38:	sub	r2, r2, #1
   16f3c:	str	r2, [r3]
   16f40:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16f44:	movw	r5, #64872	; 0xfd68
   16f48:	movt	r5, #9
   16f4c:	bl	1a440 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x65b4>
   16f50:	ldr	r7, [r5]
   16f54:	cmp	r7, #19
   16f58:	ble	17cd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3e48>
   16f5c:	add	r7, r7, #1
   16f60:	str	r7, [r5]
   16f64:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16f68:	ldr	r0, [r8, #-16]
   16f6c:	bl	261f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12364>
   16f70:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16f74:	ldr	r0, [r8, #-16]
   16f78:	mov	r1, #0
   16f7c:	bl	305e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c75c>
   16f80:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16f84:	ldr	r0, [r8, #-16]
   16f88:	bl	261b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12328>
   16f8c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16f90:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   16f94:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16f98:	bl	1a558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x66cc>
   16f9c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16fa0:	ldr	r0, [r8]
   16fa4:	mov	r1, #0
   16fa8:	bl	23bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd60>
   16fac:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16fb0:	ldr	r0, [r8]
   16fb4:	mov	r1, #0
   16fb8:	bl	23bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd60>
   16fbc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16fc0:	ldr	r0, [r8]
   16fc4:	mov	r1, #0
   16fc8:	bl	23bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd60>
   16fcc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16fd0:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   16fd4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16fd8:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   16fdc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16fe0:	mov	r3, #0
   16fe4:	str	r3, [sp, #80]	; 0x50
   16fe8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16fec:	ldr	r0, [r8]
   16ff0:	bl	296fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15870>
   16ff4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   16ff8:	ldr	r0, [r8]
   16ffc:	bl	296fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15870>
   17000:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17004:	ldr	r0, [r8]
   17008:	bl	29a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ba8>
   1700c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17010:	ldr	r0, [r8]
   17014:	bl	29a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ba8>
   17018:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1701c:	ldr	r0, [r8]
   17020:	bl	29a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15bc4>
   17024:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17028:	ldr	r0, [r8]
   1702c:	bl	29a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15bc4>
   17030:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17034:	bl	26b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12cb4>
   17038:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1703c:	bl	26af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c64>
   17040:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17044:	movw	r3, #1244	; 0x4dc
   17048:	movt	r3, #10
   1704c:	mov	r2, #1
   17050:	str	r2, [r3, #4]
   17054:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17058:	movw	r3, #1244	; 0x4dc
   1705c:	movt	r3, #10
   17060:	mov	r2, #1
   17064:	str	r2, [r3]
   17068:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1706c:	ldr	r0, [r8, #-16]
   17070:	mov	r1, #0
   17074:	bl	31118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d28c>
   17078:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1707c:	ldr	r0, [r8, #-80]	; 0xffffffb0
   17080:	mov	r3, #1
   17084:	ldr	r1, [r8, #-48]	; 0xffffffd0
   17088:	ldr	r2, [r8, #-16]
   1708c:	bl	26a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ba4>
   17090:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17094:	mov	r1, #0
   17098:	ldr	r0, [r8, #-16]
   1709c:	mov	r2, r1
   170a0:	mov	r3, #1
   170a4:	bl	26a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ba4>
   170a8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   170ac:	ldr	r0, [r8, #-16]
   170b0:	mov	r1, #1
   170b4:	bl	253e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1155c>
   170b8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   170bc:	ldr	r0, [r8]
   170c0:	mov	r1, #0
   170c4:	bl	26164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122d8>
   170c8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   170cc:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   170d0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   170d4:	bl	1a3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6544>
   170d8:	ldr	r0, [r8]
   170dc:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   170e0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   170e4:	ldr	r0, [r8]
   170e8:	bl	29c54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc8>
   170ec:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   170f0:	ldr	r0, [r8]
   170f4:	bl	29730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x158a4>
   170f8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   170fc:	ldr	r0, [r8, #-32]	; 0xffffffe0
   17100:	mov	r1, #0
   17104:	ldr	r2, [r8]
   17108:	bl	29a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15bf8>
   1710c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17110:	ldr	r0, [r8, #-32]	; 0xffffffe0
   17114:	mov	r2, #0
   17118:	ldr	r1, [r8]
   1711c:	bl	29a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15bf8>
   17120:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17124:	ldr	r2, [r8]
   17128:	add	ip, sp, #3712	; 0xe80
   1712c:	movw	r1, #61896	; 0xf1c8
   17130:	add	ip, ip, #8
   17134:	movt	r1, #65535	; 0xffff
   17138:	asr	r3, r2, #31
   1713c:	strd	r2, [ip, r1]
   17140:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17144:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   17148:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1714c:	bl	1a3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6544>
   17150:	ldr	r0, [r8]
   17154:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   17158:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1715c:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   17160:	ldr	r1, [r8, #-32]	; 0xffffffe0
   17164:	ldr	r0, [r8, #-64]	; 0xffffffc0
   17168:	bl	2e7d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a944>
   1716c:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   17170:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17174:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   17178:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1717c:	ldr	r0, [r8, #-16]
   17180:	bl	26224 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12398>
   17184:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17188:	ldr	r0, [r8, #-48]	; 0xffffffd0
   1718c:	ldr	r1, [r8, #-16]
   17190:	bl	26260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123d4>
   17194:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17198:	movw	r3, #1068	; 0x42c
   1719c:	movt	r3, #10
   171a0:	mov	r0, #15
   171a4:	mov	r2, #1
   171a8:	str	r2, [r3]
   171ac:	bl	26354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x124c8>
   171b0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   171b4:	andeq	r5, r4, r8, lsl r7
   171b8:	andeq	r6, r4, r4, lsr #8
   171bc:	mov	r0, #15
   171c0:	bl	26354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x124c8>
   171c4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   171c8:	mov	r0, #6
   171cc:	bl	26354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x124c8>
   171d0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   171d4:	movw	r3, #64872	; 0xfd68
   171d8:	movt	r3, #9
   171dc:	mov	r2, #0
   171e0:	str	r2, [r3, #84]	; 0x54
   171e4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   171e8:	movw	r3, #64872	; 0xfd68
   171ec:	movt	r3, #9
   171f0:	mov	r2, #1
   171f4:	str	r2, [r3, #84]	; 0x54
   171f8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   171fc:	ldr	r2, [r8, #-64]	; 0xffffffc0
   17200:	movw	r3, #64872	; 0xfd68
   17204:	movt	r3, #9
   17208:	sub	r0, r8, #48	; 0x30
   1720c:	ldr	r1, [r8, #-16]
   17210:	str	r2, [r8, #-36]	; 0xffffffdc
   17214:	ldr	r2, [r3, #84]	; 0x54
   17218:	bl	25bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d60>
   1721c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17220:	movw	r3, #64872	; 0xfd68
   17224:	movt	r3, #9
   17228:	sub	r0, r8, #48	; 0x30
   1722c:	ldr	r1, [r8, #-16]
   17230:	ldr	r2, [r3, #84]	; 0x54
   17234:	bl	25bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d60>
   17238:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1723c:	mov	r2, #0
   17240:	str	r2, [sp, #96]	; 0x60
   17244:	str	r2, [sp, #100]	; 0x64
   17248:	movw	r3, #64872	; 0xfd68
   1724c:	str	r2, [sp, #104]	; 0x68
   17250:	movt	r3, #9
   17254:	ldr	r1, [r8, #-48]	; 0xffffffd0
   17258:	add	r0, sp, #96	; 0x60
   1725c:	ldr	r2, [r3, #84]	; 0x54
   17260:	str	r1, [sp, #108]	; 0x6c
   17264:	ldr	r1, [r8, #-16]
   17268:	bl	25bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d60>
   1726c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17270:	movw	r3, #64872	; 0xfd68
   17274:	movt	r3, #9
   17278:	mov	r0, #0
   1727c:	ldr	r1, [r8, #-16]
   17280:	ldr	r2, [r3, #84]	; 0x54
   17284:	bl	25bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d60>
   17288:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1728c:	ldr	r2, [r8]
   17290:	mov	r1, #0
   17294:	movw	r3, #64872	; 0xfd68
   17298:	str	r1, [sp, #100]	; 0x64
   1729c:	str	r1, [sp, #104]	; 0x68
   172a0:	movt	r3, #9
   172a4:	str	r2, [sp, #96]	; 0x60
   172a8:	add	r0, sp, #96	; 0x60
   172ac:	ldr	ip, [r8, #-16]
   172b0:	ldr	r2, [r3, #84]	; 0x54
   172b4:	str	ip, [sp, #108]	; 0x6c
   172b8:	bl	25bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d60>
   172bc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   172c0:	ldr	r1, [r8]
   172c4:	movw	r2, #64872	; 0xfd68
   172c8:	movt	r2, #9
   172cc:	mov	r3, #0
   172d0:	add	r0, sp, #96	; 0x60
   172d4:	str	r3, [sp, #100]	; 0x64
   172d8:	str	r1, [sp, #96]	; 0x60
   172dc:	mov	r1, r3
   172e0:	ldr	r2, [r2, #84]	; 0x54
   172e4:	str	r3, [sp, #104]	; 0x68
   172e8:	str	r3, [sp, #108]	; 0x6c
   172ec:	bl	25bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d60>
   172f0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   172f4:	mov	r0, #20
   172f8:	bl	137b4 <xmalloc@plt>
   172fc:	mov	r3, #0
   17300:	mov	ip, r0
   17304:	mov	r5, r0
   17308:	str	r3, [ip], #4
   1730c:	ldm	r8, {r0, r1, r2, r3}
   17310:	str	r5, [sp, #80]	; 0x50
   17314:	stm	ip, {r0, r1, r2, r3}
   17318:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1731c:	mov	r0, #20
   17320:	bl	137b4 <xmalloc@plt>
   17324:	ldr	r3, [r8, #-32]	; 0xffffffe0
   17328:	mov	ip, r0
   1732c:	mov	r5, r0
   17330:	str	r3, [ip], #4
   17334:	ldm	r8, {r0, r1, r2, r3}
   17338:	str	r5, [sp, #80]	; 0x50
   1733c:	stm	ip, {r0, r1, r2, r3}
   17340:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17344:	mov	r0, #8
   17348:	bl	137b4 <xmalloc@plt>
   1734c:	ldr	r3, [r8]
   17350:	mov	r2, #0
   17354:	str	r3, [r0]
   17358:	str	r2, [r0, #4]
   1735c:	str	r0, [sp, #80]	; 0x50
   17360:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17364:	mov	r0, #8
   17368:	bl	137b4 <xmalloc@plt>
   1736c:	ldr	r3, [r8]
   17370:	str	r3, [r0]
   17374:	ldr	r3, [r8, #-16]
   17378:	str	r0, [sp, #80]	; 0x50
   1737c:	str	r3, [r0, #4]
   17380:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17384:	mov	r0, #16
   17388:	bl	137b4 <xmalloc@plt>
   1738c:	ldr	r2, [r8, #-16]
   17390:	mov	r3, #0
   17394:	str	r2, [r0, #8]
   17398:	str	r3, [r0]
   1739c:	str	r3, [r0, #12]
   173a0:	str	r3, [r0, #4]
   173a4:	str	r0, [sp, #80]	; 0x50
   173a8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   173ac:	ldr	r0, [r8, #-16]
   173b0:	bl	29390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15504>
   173b4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   173b8:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   173bc:	movw	r3, #64872	; 0xfd68
   173c0:	movt	r3, #9
   173c4:	ldr	r2, [r3]
   173c8:	sub	r2, r2, #1
   173cc:	str	r2, [r3]
   173d0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   173d4:	movw	r5, #64872	; 0xfd68
   173d8:	movt	r5, #9
   173dc:	bl	1a4b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6624>
   173e0:	ldr	r7, [r5]
   173e4:	cmp	r7, #19
   173e8:	ble	17cf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3e68>
   173ec:	add	r7, r7, #1
   173f0:	str	r7, [r5]
   173f4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   173f8:	ldr	r3, [r8, #-16]
   173fc:	str	r3, [sp, #80]	; 0x50
   17400:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17404:	mov	r3, #0
   17408:	str	r3, [sp, #80]	; 0x50
   1740c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17410:	ldm	r8, {r0, r1, r2, r3}
   17414:	ldr	ip, [sp, #20]
   17418:	stm	ip, {r0, r1, r2, r3}
   1741c:	ldr	r3, [r8, #-32]	; 0xffffffe0
   17420:	str	r3, [sp, #88]	; 0x58
   17424:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17428:	mov	r3, #0
   1742c:	str	r3, [sp, #80]	; 0x50
   17430:	str	r3, [sp, #84]	; 0x54
   17434:	str	r3, [sp, #88]	; 0x58
   17438:	str	r3, [sp, #92]	; 0x5c
   1743c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17440:	ldr	r3, [r8]
   17444:	str	r3, [sp, #80]	; 0x50
   17448:	ldr	r3, [r8]
   1744c:	ldr	r2, [r3, #12]
   17450:	cmp	r2, #3
   17454:	bne	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17458:	ldr	r1, [r3]
   1745c:	add	r2, r2, #256	; 0x100
   17460:	cmp	r1, r2
   17464:	bne	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17468:	ldr	r5, [r3, #16]
   1746c:	mov	r7, #0
   17470:	ldr	r9, [pc, #-704]	; 171b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x332c>
   17474:	b	17484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x35f8>
   17478:	add	r7, r7, #1
   1747c:	cmp	r7, #8
   17480:	beq	17d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ea8>
   17484:	mov	r0, r5
   17488:	ldr	r1, [r9, #4]!
   1748c:	bl	13490 <strcmp@plt>
   17490:	cmp	r0, #0
   17494:	bne	17478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x35ec>
   17498:	mov	r1, r0
   1749c:	mov	r0, r7
   174a0:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   174a4:	str	r0, [sp, #80]	; 0x50
   174a8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   174ac:	ldr	ip, [r8, #-24]	; 0xffffffe8
   174b0:	ldr	r0, [r8, #-80]	; 0xffffffb0
   174b4:	ldr	r1, [r8, #-48]	; 0xffffffd0
   174b8:	ldr	r2, [r8, #-32]	; 0xffffffe0
   174bc:	ldr	r3, [r8, #-28]	; 0xffffffe4
   174c0:	str	ip, [sp]
   174c4:	ldr	ip, [r8, #-20]	; 0xffffffec
   174c8:	str	ip, [sp, #4]
   174cc:	bl	26b44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12cb8>
   174d0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   174d4:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   174d8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   174dc:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   174e0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   174e4:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   174e8:	ldr	r0, [r8]
   174ec:	ldr	r1, [r8, #-16]
   174f0:	bl	26dc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f38>
   174f4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   174f8:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   174fc:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   17500:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17504:	bl	1a3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6544>
   17508:	ldr	r0, [r8]
   1750c:	bl	26d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e88>
   17510:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17514:	mov	r0, #12
   17518:	bl	137b4 <xmalloc@plt>
   1751c:	ldr	r3, [r8]
   17520:	mov	r2, #0
   17524:	str	r3, [r0, #4]
   17528:	str	r2, [r0, #8]
   1752c:	ldr	r3, [r8, #-32]	; 0xffffffe0
   17530:	str	r3, [r0]
   17534:	str	r0, [sp, #80]	; 0x50
   17538:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1753c:	mov	r3, #0
   17540:	str	r3, [sp, #80]	; 0x50
   17544:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17548:	movw	r3, #29012	; 0x7154
   1754c:	movt	r3, #4
   17550:	str	r3, [sp, #80]	; 0x50
   17554:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17558:	ldr	r3, [r8]
   1755c:	str	r3, [sp, #80]	; 0x50
   17560:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17564:	add	ip, sp, #3712	; 0xe80
   17568:	movw	r1, #61896	; 0xf1c8
   1756c:	add	ip, ip, #8
   17570:	movt	r1, #65535	; 0xffff
   17574:	mov	r2, #1
   17578:	mov	r3, #0
   1757c:	strd	r2, [ip, r1]
   17580:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17584:	add	r5, sp, #3712	; 0xe80
   17588:	movw	r1, #61896	; 0xf1c8
   1758c:	add	r5, r5, #8
   17590:	movt	r1, #65535	; 0xffff
   17594:	mov	r2, #0
   17598:	mov	r3, #0
   1759c:	strd	r2, [r5, r1]
   175a0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   175a4:	mov	r3, #0
   175a8:	str	r3, [sp, #80]	; 0x50
   175ac:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   175b0:	ldr	r3, [r8, #-16]
   175b4:	str	r3, [sp, #80]	; 0x50
   175b8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   175bc:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   175c0:	ldr	r1, [r8]
   175c4:	ldr	r0, [r8, #-32]	; 0xffffffe0
   175c8:	bl	2e734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8a8>
   175cc:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   175d0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   175d4:	bl	1a4e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x665c>
   175d8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   175dc:	ldr	r0, [r8]
   175e0:	bl	29b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c98>
   175e4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   175e8:	ldr	r0, [r8, #-32]	; 0xffffffe0
   175ec:	ldr	r1, [r8]
   175f0:	bl	29c24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d98>
   175f4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   175f8:	ldr	r0, [r8, #-32]	; 0xffffffe0
   175fc:	ldr	r1, [r8]
   17600:	bl	29c24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d98>
   17604:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17608:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1760c:	ldr	r1, [r8]
   17610:	bl	29bf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d6c>
   17614:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17618:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1761c:	ldr	r1, [r8]
   17620:	bl	29bf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d6c>
   17624:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17628:	ldr	r0, [r8, #-32]	; 0xffffffe0
   1762c:	ldr	r1, [r8]
   17630:	bl	296cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15840>
   17634:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17638:	ldr	r0, [r8, #-16]
   1763c:	ldr	r1, [r8]
   17640:	bl	296cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15840>
   17644:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17648:	movw	r3, #64872	; 0xfd68
   1764c:	movt	r3, #9
   17650:	mov	r0, #0
   17654:	ldr	r1, [r8]
   17658:	ldr	r2, [r3, #96]	; 0x60
   1765c:	mov	r3, #1
   17660:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   17664:	str	r0, [sp, #80]	; 0x50
   17668:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1766c:	movw	r3, #64872	; 0xfd68
   17670:	movt	r3, #9
   17674:	mov	r0, #0
   17678:	ldr	r1, [r8]
   1767c:	ldr	r2, [r3, #96]	; 0x60
   17680:	mov	r3, r0
   17684:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   17688:	str	r0, [sp, #80]	; 0x50
   1768c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17690:	ldr	r0, [r8, #-80]	; 0xffffffb0
   17694:	ldr	r1, [r8, #-16]
   17698:	bl	27280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133f4>
   1769c:	str	r0, [sp, #80]	; 0x50
   176a0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   176a4:	mov	r0, #0
   176a8:	ldr	r1, [r8, #-16]
   176ac:	bl	27280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133f4>
   176b0:	str	r0, [sp, #80]	; 0x50
   176b4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   176b8:	ldr	r0, [r8, #-16]
   176bc:	mov	r1, #0
   176c0:	bl	27280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133f4>
   176c4:	str	r0, [sp, #80]	; 0x50
   176c8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   176cc:	ldr	r0, [r8, #-16]
   176d0:	mov	r1, #0
   176d4:	bl	27280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133f4>
   176d8:	str	r0, [sp, #80]	; 0x50
   176dc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   176e0:	mov	r0, #0
   176e4:	mov	r1, r0
   176e8:	bl	27280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133f4>
   176ec:	str	r0, [sp, #80]	; 0x50
   176f0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   176f4:	ldr	r0, [r8, #-16]
   176f8:	ldr	r1, [r8]
   176fc:	bl	292a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15414>
   17700:	str	r0, [sp, #80]	; 0x50
   17704:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17708:	mov	r0, #0
   1770c:	ldr	r1, [r8]
   17710:	bl	292a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15414>
   17714:	str	r0, [sp, #80]	; 0x50
   17718:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1771c:	ldr	r0, [r8, #-80]	; 0xffffffb0
   17720:	ldr	r1, [r8, #-48]	; 0xffffffd0
   17724:	ldr	r2, [r8, #-16]
   17728:	bl	272b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1342c>
   1772c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17730:	ldr	r0, [r8, #-64]	; 0xffffffc0
   17734:	mov	r2, #0
   17738:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1773c:	bl	272b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1342c>
   17740:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17744:	mov	r0, #0
   17748:	ldr	r1, [r8, #-32]	; 0xffffffe0
   1774c:	mov	r2, r0
   17750:	bl	272b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1342c>
   17754:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17758:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   1775c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17760:	bl	1a478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x65ec>
   17764:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17768:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   1776c:	movw	r3, #64872	; 0xfd68
   17770:	movt	r3, #9
   17774:	ldr	r2, [r3]
   17778:	sub	r2, r2, #1
   1777c:	str	r2, [r3]
   17780:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17784:	movw	r5, #64872	; 0xfd68
   17788:	movt	r5, #9
   1778c:	bl	1a4b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6624>
   17790:	ldr	r7, [r5]
   17794:	cmp	r7, #19
   17798:	ble	17d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3e88>
   1779c:	add	r7, r7, #1
   177a0:	str	r7, [r5]
   177a4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   177a8:	movw	r3, #64872	; 0xfd68
   177ac:	movt	r3, #9
   177b0:	movw	r1, #29176	; 0x71f8
   177b4:	ldr	r0, [r8, #-32]	; 0xffffffe0
   177b8:	ldr	r2, [r3, #96]	; 0x60
   177bc:	movt	r1, #4
   177c0:	mov	r3, #0
   177c4:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   177c8:	str	r0, [sp, #80]	; 0x50
   177cc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   177d0:	movw	r3, #64872	; 0xfd68
   177d4:	movt	r3, #9
   177d8:	mov	r0, #0
   177dc:	movw	r1, #29176	; 0x71f8
   177e0:	ldr	r2, [r3, #96]	; 0x60
   177e4:	movt	r1, #4
   177e8:	mov	r3, r0
   177ec:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   177f0:	str	r0, [sp, #80]	; 0x50
   177f4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   177f8:	ldr	r2, [r8, #-32]	; 0xffffffe0
   177fc:	movw	r3, #64872	; 0xfd68
   17800:	movt	r3, #9
   17804:	str	r2, [sp, #80]	; 0x50
   17808:	ldr	r2, [r8, #-48]	; 0xffffffd0
   1780c:	str	r2, [r3, #96]	; 0x60
   17810:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17814:	movw	r3, #64872	; 0xfd68
   17818:	movt	r3, #9
   1781c:	ldr	r2, [r3, #96]	; 0x60
   17820:	str	r2, [sp, #80]	; 0x50
   17824:	ldr	r2, [r8, #-16]
   17828:	str	r2, [r3, #96]	; 0x60
   1782c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17830:	ldr	r1, [r8, #-32]	; 0xffffffe0
   17834:	mov	r2, r1
   17838:	b	17840 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x39b4>
   1783c:	mov	r2, r3
   17840:	ldr	r3, [r2]
   17844:	cmp	r3, #0
   17848:	bne	1783c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x39b0>
   1784c:	ldr	r0, [r8, #-128]	; 0xffffff80
   17850:	movw	r3, #64872	; 0xfd68
   17854:	movt	r3, #9
   17858:	str	r0, [r2]
   1785c:	str	r1, [sp, #80]	; 0x50
   17860:	ldr	r2, [r8, #-48]	; 0xffffffd0
   17864:	str	r2, [r3, #96]	; 0x60
   17868:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1786c:	movw	r3, #64872	; 0xfd68
   17870:	movt	r3, #9
   17874:	ldr	r2, [r3, #96]	; 0x60
   17878:	str	r2, [sp, #80]	; 0x50
   1787c:	ldr	r2, [r8, #-16]
   17880:	str	r2, [r3, #96]	; 0x60
   17884:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17888:	movw	r2, #64872	; 0xfd68
   1788c:	movt	r2, #9
   17890:	ldr	r0, [r8, #-32]	; 0xffffffe0
   17894:	mov	r3, #1
   17898:	ldr	r2, [r2, #96]	; 0x60
   1789c:	ldr	r1, [r8]
   178a0:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   178a4:	str	r0, [sp, #80]	; 0x50
   178a8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   178ac:	movw	r2, #64872	; 0xfd68
   178b0:	movt	r2, #9
   178b4:	ldr	r0, [r8, #-32]	; 0xffffffe0
   178b8:	mov	r3, #0
   178bc:	ldr	r2, [r2, #96]	; 0x60
   178c0:	ldr	r1, [r8]
   178c4:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   178c8:	str	r0, [sp, #80]	; 0x50
   178cc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   178d0:	mov	r3, #45	; 0x2d
   178d4:	str	r3, [sp, #80]	; 0x50
   178d8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   178dc:	mov	r3, #43	; 0x2b
   178e0:	str	r3, [sp, #80]	; 0x50
   178e4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   178e8:	mov	r3, #0
   178ec:	str	r3, [sp, #80]	; 0x50
   178f0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   178f4:	ldr	r3, [r8]
   178f8:	str	r3, [sp, #80]	; 0x50
   178fc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17900:	movw	r2, #29000	; 0x7148
   17904:	ldr	r0, [r8]
   17908:	movt	r2, #4
   1790c:	mov	r1, #0
   17910:	bl	2ec64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1add8>
   17914:	str	r0, [sp, #80]	; 0x50
   17918:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1791c:	ldr	r2, [r8]
   17920:	add	r0, sp, #3712	; 0xe80
   17924:	movw	r1, #61896	; 0xf1c8
   17928:	add	r0, r0, #8
   1792c:	movt	r1, #65535	; 0xffff
   17930:	asr	r3, r2, #31
   17934:	strd	r2, [r0, r1]
   17938:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1793c:	ldr	r2, [r8]
   17940:	add	ip, sp, #3712	; 0xe80
   17944:	movw	r1, #61896	; 0xf1c8
   17948:	add	ip, ip, #8
   1794c:	movt	r1, #65535	; 0xffff
   17950:	asr	r3, r2, #31
   17954:	strd	r2, [ip, r1]
   17958:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1795c:	ldr	r2, [r8]
   17960:	add	r5, sp, #3712	; 0xe80
   17964:	movw	r1, #61896	; 0xf1c8
   17968:	add	r5, r5, #8
   1796c:	movt	r1, #65535	; 0xffff
   17970:	asr	r3, r2, #31
   17974:	strd	r2, [r5, r1]
   17978:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   1797c:	mov	r0, #45	; 0x2d
   17980:	ldr	r1, [r8]
   17984:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   17988:	str	r0, [sp, #80]	; 0x50
   1798c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17990:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   17994:	ldr	r3, [r8]
   17998:	str	r3, [sp, #80]	; 0x50
   1799c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   179a0:	bl	1a520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6694>
   179a4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   179a8:	mov	r0, #8
   179ac:	bl	137b4 <xmalloc@plt>
   179b0:	ldr	r3, [r8, #-32]	; 0xffffffe0
   179b4:	str	r3, [r0, #4]
   179b8:	ldr	r3, [r8]
   179bc:	str	r3, [r0]
   179c0:	str	r0, [sp, #80]	; 0x50
   179c4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   179c8:	mov	r0, #8
   179cc:	bl	137b4 <xmalloc@plt>
   179d0:	ldr	r3, [r8, #-16]
   179d4:	str	r3, [r0, #4]
   179d8:	ldr	r3, [r8]
   179dc:	str	r3, [r0]
   179e0:	str	r0, [sp, #80]	; 0x50
   179e4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   179e8:	mov	r3, #0
   179ec:	str	r3, [sp, #80]	; 0x50
   179f0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   179f4:	mov	r0, #0
   179f8:	bl	263e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12554>
   179fc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17a00:	mov	r0, #1
   17a04:	bl	263e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12554>
   17a08:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17a0c:	ldr	r0, [r8]
   17a10:	bl	2eed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b048>
   17a14:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17a18:	ldr	r0, [r8]
   17a1c:	bl	2eeb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b02c>
   17a20:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17a24:	ldr	r0, [r8]
   17a28:	bl	2eeb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b02c>
   17a2c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17a30:	mov	r0, #0
   17a34:	bl	2eeb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b02c>
   17a38:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17a3c:	ldr	r0, [r8, #-16]
   17a40:	bl	2638c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12500>
   17a44:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17a48:	movw	r3, #64872	; 0xfd68
   17a4c:	movt	r3, #9
   17a50:	ldr	r1, [r8]
   17a54:	mov	r2, #1
   17a58:	ldr	r0, [r3, #88]	; 0x58
   17a5c:	bl	2411c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10290>
   17a60:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17a64:	movw	r3, #64872	; 0xfd68
   17a68:	movt	r3, #9
   17a6c:	ldr	r1, [r8]
   17a70:	mov	r2, #0
   17a74:	ldr	r0, [r3, #88]	; 0x58
   17a78:	bl	2411c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10290>
   17a7c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17a80:	movw	r3, #64872	; 0xfd68
   17a84:	movt	r3, #9
   17a88:	movw	r1, #29192	; 0x7208
   17a8c:	ldr	r0, [r8, #-32]	; 0xffffffe0
   17a90:	ldr	r2, [r3, #96]	; 0x60
   17a94:	movt	r1, #4
   17a98:	mov	r3, #0
   17a9c:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   17aa0:	str	r0, [sp, #80]	; 0x50
   17aa4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17aa8:	movw	r3, #64872	; 0xfd68
   17aac:	movt	r3, #9
   17ab0:	ldr	r2, [r8]
   17ab4:	ldr	r3, [r3, #88]	; 0x58
   17ab8:	str	r2, [r3, #32]
   17abc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17ac0:	movw	r3, #64872	; 0xfd68
   17ac4:	movt	r3, #9
   17ac8:	ldr	r0, [r8]
   17acc:	ldr	r1, [r3, #88]	; 0x58
   17ad0:	ldrd	r2, [r1, #16]
   17ad4:	str	r0, [r1, #12]
   17ad8:	strd	r2, [r1, #40]	; 0x28
   17adc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17ae0:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   17ae4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17ae8:	bl	1a3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6544>
   17aec:	ldr	r0, [r8]
   17af0:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   17af4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17af8:	ldr	r0, [r8]
   17afc:	mov	r1, #1
   17b00:	bl	21088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1fc>
   17b04:	movw	r3, #64872	; 0xfd68
   17b08:	movt	r3, #9
   17b0c:	str	r0, [r3, #88]	; 0x58
   17b10:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17b14:	mov	r2, #1
   17b18:	ldr	r1, [r8, #-16]
   17b1c:	ldr	r0, [r8, #-48]	; 0xffffffd0
   17b20:	bl	2e784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8f8>
   17b24:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   17b28:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17b2c:	mov	r2, #0
   17b30:	ldr	r1, [r8, #-16]
   17b34:	ldr	r0, [r8, #-48]	; 0xffffffd0
   17b38:	bl	2e784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8f8>
   17b3c:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   17b40:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17b44:	mov	r2, #1
   17b48:	ldr	r1, [r8, #-16]
   17b4c:	ldr	r0, [r8, #-48]	; 0xffffffd0
   17b50:	bl	2e6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a85c>
   17b54:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   17b58:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17b5c:	ldr	r5, [r8, #-32]	; 0xffffffe0
   17b60:	movw	r0, #259	; 0x103
   17b64:	ldr	r7, [r8, #-16]
   17b68:	mov	r1, r5
   17b6c:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   17b70:	ldr	r2, [r8]
   17b74:	mov	r1, r0
   17b78:	mov	r0, r7
   17b7c:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   17b80:	mov	r2, #0
   17b84:	mov	r1, r0
   17b88:	mov	r0, r5
   17b8c:	bl	2e6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a85c>
   17b90:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   17b94:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17b98:	mov	r2, #0
   17b9c:	ldr	r1, [r8]
   17ba0:	ldr	r0, [r8, #-32]	; 0xffffffe0
   17ba4:	bl	2e6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a85c>
   17ba8:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   17bac:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17bb0:	mov	r3, #124	; 0x7c
   17bb4:	str	r3, [sp, #80]	; 0x50
   17bb8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17bbc:	mov	r3, #38	; 0x26
   17bc0:	str	r3, [sp, #80]	; 0x50
   17bc4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17bc8:	movw	r3, #275	; 0x113
   17bcc:	str	r3, [sp, #80]	; 0x50
   17bd0:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17bd4:	mov	r3, #276	; 0x114
   17bd8:	str	r3, [sp, #80]	; 0x50
   17bdc:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17be0:	mov	r3, #47	; 0x2f
   17be4:	str	r3, [sp, #80]	; 0x50
   17be8:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17bec:	mov	r3, #42	; 0x2a
   17bf0:	str	r3, [sp, #80]	; 0x50
   17bf4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17bf8:	ldr	r2, [r8]
   17bfc:	add	r0, sp, #3712	; 0xe80
   17c00:	movw	r1, #61896	; 0xf1c8
   17c04:	add	r0, r0, #8
   17c08:	movt	r1, #65535	; 0xffff
   17c0c:	asr	r3, r2, #31
   17c10:	strd	r2, [r0, r1]
   17c14:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17c18:	movw	r3, #64872	; 0xfd68
   17c1c:	movt	r3, #9
   17c20:	mov	r0, #0
   17c24:	movw	r1, #29184	; 0x7200
   17c28:	ldr	r2, [r3, #96]	; 0x60
   17c2c:	movt	r1, #4
   17c30:	mov	r3, r0
   17c34:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   17c38:	str	r0, [sp, #80]	; 0x50
   17c3c:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17c40:	movw	r3, #64872	; 0xfd68
   17c44:	movt	r3, #9
   17c48:	movw	r1, #29184	; 0x7200
   17c4c:	ldr	r0, [r8, #-32]	; 0xffffffe0
   17c50:	ldr	r2, [r3, #96]	; 0x60
   17c54:	movt	r1, #4
   17c58:	mov	r3, #0
   17c5c:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   17c60:	str	r0, [sp, #80]	; 0x50
   17c64:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17c68:	movw	r0, #29260	; 0x724c
   17c6c:	movt	r0, #4
   17c70:	bl	153d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1544>
   17c74:	mov	r5, #2
   17c78:	b	15fc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213c>
   17c7c:	ldr	ip, [sp, #44]	; 0x2c
   17c80:	mov	r1, #1
   17c84:	movw	r2, #28620	; 0x6fcc
   17c88:	movw	r3, #28852	; 0x70b4
   17c8c:	movt	r2, #4
   17c90:	movt	r3, #4
   17c94:	ldr	r0, [ip]
   17c98:	bl	13b74 <__fprintf_chk@plt>
   17c9c:	ldr	r5, [sp, #44]	; 0x2c
   17ca0:	mov	r1, r9
   17ca4:	ldr	r0, [r5]
   17ca8:	bl	15320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1494>
   17cac:	ldr	r1, [r5]
   17cb0:	mov	r0, #10
   17cb4:	bl	13c28 <fputc@plt>
   17cb8:	b	16330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a4>
   17cbc:	mov	fp, r5
   17cc0:	mov	r5, #1
   17cc4:	b	15fc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213c>
   17cc8:	mov	r5, #0
   17ccc:	b	15fc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213c>
   17cd0:	bl	13694 <__stack_chk_fail@plt>
   17cd4:	movw	r1, #28916	; 0x70f4
   17cd8:	mov	r0, #0
   17cdc:	movt	r1, #4
   17ce0:	mov	r2, #5
   17ce4:	bl	13688 <dcgettext@plt>
   17ce8:	add	r3, r5, r7, lsl #2
   17cec:	str	r0, [r3, #4]
   17cf0:	b	16f5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x30d0>
   17cf4:	movw	r1, #8892	; 0x22bc
   17cf8:	mov	r0, #0
   17cfc:	movt	r1, #5
   17d00:	mov	r2, #5
   17d04:	bl	13688 <dcgettext@plt>
   17d08:	add	r3, r5, r7, lsl #2
   17d0c:	str	r0, [r3, #4]
   17d10:	b	173ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3560>
   17d14:	movw	r1, #29160	; 0x71e8
   17d18:	mov	r0, #0
   17d1c:	movt	r1, #4
   17d20:	mov	r2, #5
   17d24:	bl	13688 <dcgettext@plt>
   17d28:	add	r3, r5, r7, lsl #2
   17d2c:	str	r0, [r3, #4]
   17d30:	b	1779c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3910>
   17d34:	movw	r1, #29332	; 0x7294
   17d38:	mov	r0, r5
   17d3c:	movt	r1, #4
   17d40:	bl	13490 <strcmp@plt>
   17d44:	cmp	r0, #0
   17d48:	beq	17db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f24>
   17d4c:	movw	r1, #29024	; 0x7160
   17d50:	mov	r0, r5
   17d54:	movt	r1, #4
   17d58:	bl	13490 <strcmp@plt>
   17d5c:	cmp	r0, #0
   17d60:	bne	17d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3ef0>
   17d64:	movw	r0, #58705	; 0xe551
   17d68:	mov	r1, #0
   17d6c:	movt	r0, #25716	; 0x6474
   17d70:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   17d74:	str	r0, [sp, #80]	; 0x50
   17d78:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17d7c:	mov	r2, #5
   17d80:	movw	r1, #29040	; 0x7170
   17d84:	mov	r0, #0
   17d88:	movt	r1, #4
   17d8c:	bl	13688 <dcgettext@plt>
   17d90:	mov	r2, r5
   17d94:	mov	r1, #0
   17d98:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   17d9c:	mov	r0, #0
   17da0:	mov	r1, #0
   17da4:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   17da8:	str	r0, [sp, #80]	; 0x50
   17dac:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17db0:	movw	r0, #58704	; 0xe550
   17db4:	mov	r1, #0
   17db8:	movt	r0, #25716	; 0x6474
   17dbc:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   17dc0:	str	r0, [sp, #80]	; 0x50
   17dc4:	b	15d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed0>
   17dc8:	movw	r3, #64972	; 0xfdcc
   17dcc:	movt	r3, #9
   17dd0:	push	{r4}		; (str r4, [sp, #-4]!)
   17dd4:	movw	r1, #992	; 0x3e0
   17dd8:	ldr	ip, [r3, #20]
   17ddc:	movt	r1, #10
   17de0:	ldr	r0, [r3, #16]
   17de4:	ldr	r4, [r0, ip, lsl #2]
   17de8:	ldr	r2, [r4, #8]
   17dec:	ldr	r4, [r4, #16]
   17df0:	str	r2, [r1]
   17df4:	ldr	r1, [r0, ip, lsl #2]
   17df8:	str	r2, [r3, #4]
   17dfc:	str	r4, [r3, #24]
   17e00:	ldr	r1, [r1]
   17e04:	str	r1, [r3, #28]
   17e08:	ldrb	r2, [r2]
   17e0c:	strb	r2, [r3, #32]
   17e10:	pop	{r4}		; (ldr r4, [sp], #4)
   17e14:	bx	lr
   17e18:	push	{r4, r5, r6, lr}
   17e1c:	movw	r4, #64972	; 0xfdcc
   17e20:	movt	r4, #9
   17e24:	ldr	r5, [r4, #16]
   17e28:	cmp	r5, #0
   17e2c:	beq	17e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4010>
   17e30:	ldr	r3, [r4, #80]	; 0x50
   17e34:	ldr	r2, [r4, #20]
   17e38:	sub	r1, r3, #1
   17e3c:	cmp	r1, r2
   17e40:	pophi	{r4, r5, r6, pc}
   17e44:	add	r6, r3, #8
   17e48:	mov	r0, r5
   17e4c:	lsl	r5, r6, #2
   17e50:	mov	r1, r5
   17e54:	bl	13700 <realloc@plt>
   17e58:	cmp	r0, #0
   17e5c:	str	r0, [r4, #16]
   17e60:	beq	17ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4034>
   17e64:	sub	r5, r5, #32
   17e68:	mov	r2, #0
   17e6c:	add	r1, r0, r5
   17e70:	str	r6, [r4, #80]	; 0x50
   17e74:	add	r3, r1, #8
   17e78:	str	r2, [r0, r5]
   17e7c:	str	r2, [r1, #4]
   17e80:	str	r2, [r3], #4
   17e84:	str	r2, [r3], #4
   17e88:	str	r2, [r3], #4
   17e8c:	str	r2, [r3], #4
   17e90:	str	r2, [r3], #4
   17e94:	str	r2, [r3]
   17e98:	pop	{r4, r5, r6, pc}
   17e9c:	mov	r0, #4
   17ea0:	bl	1394c <malloc@plt>
   17ea4:	cmp	r0, #0
   17ea8:	str	r0, [r4, #16]
   17eac:	strne	r5, [r0]
   17eb0:	movne	r3, #1
   17eb4:	strne	r5, [r4, #20]
   17eb8:	strne	r3, [r4, #80]	; 0x50
   17ebc:	popne	{r4, r5, r6, pc}
   17ec0:	movw	r0, #56372	; 0xdc34
   17ec4:	movt	r0, #4
   17ec8:	bl	14064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8>
   17ecc:	mov	r0, #1
   17ed0:	bx	lr
   17ed4:	push	{r3, r4, r5, lr}
   17ed8:	movw	r4, #64972	; 0xfdcc
   17edc:	movt	r4, #9
   17ee0:	mov	r5, r0
   17ee4:	bl	17e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f8c>
   17ee8:	ldr	r3, [r4, #16]
   17eec:	cmp	r3, #0
   17ef0:	beq	17f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x40b8>
   17ef4:	ldr	r2, [r4, #20]
   17ef8:	ldr	r1, [r3, r2, lsl #2]
   17efc:	add	r0, r3, r2, lsl #2
   17f00:	cmp	r1, r5
   17f04:	popeq	{r3, r4, r5, pc}
   17f08:	cmp	r1, #0
   17f0c:	beq	17f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x40a4>
   17f10:	ldr	r1, [r4, #4]
   17f14:	ldrb	lr, [r4, #32]
   17f18:	ldr	ip, [r4, #24]
   17f1c:	strb	lr, [r1]
   17f20:	ldr	lr, [r3, r2, lsl #2]
   17f24:	str	r1, [lr, #8]
   17f28:	ldr	r3, [r3, r2, lsl #2]
   17f2c:	str	ip, [r3, #16]
   17f30:	str	r5, [r0]
   17f34:	bl	17dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f3c>
   17f38:	mov	r3, #1
   17f3c:	str	r3, [r4, #84]	; 0x54
   17f40:	pop	{r3, r4, r5, pc}
   17f44:	cmp	r5, #0
   17f48:	popeq	{r3, r4, r5, pc}
   17f4c:	ldr	r0, [r4, #20]
   17f50:	lsl	r0, r0, #2
   17f54:	b	17f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x40a4>
   17f58:	push	{r4, lr}
   17f5c:	subs	r4, r0, #0
   17f60:	popeq	{r4, pc}
   17f64:	movw	r3, #64972	; 0xfdcc
   17f68:	movt	r3, #9
   17f6c:	ldr	r2, [r3, #16]
   17f70:	cmp	r2, #0
   17f74:	beq	17f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4100>
   17f78:	ldr	r3, [r3, #20]
   17f7c:	ldr	r1, [r2, r3, lsl #2]
   17f80:	cmp	r4, r1
   17f84:	moveq	r1, #0
   17f88:	streq	r1, [r2, r3, lsl #2]
   17f8c:	ldr	r3, [r4, #20]
   17f90:	cmp	r3, #0
   17f94:	bne	17fa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4118>
   17f98:	mov	r0, r4
   17f9c:	pop	{r4, lr}
   17fa0:	b	13574 <free@plt>
   17fa4:	ldr	r0, [r4, #4]
   17fa8:	bl	13574 <free@plt>
   17fac:	mov	r0, r4
   17fb0:	pop	{r4, lr}
   17fb4:	b	13574 <free@plt>
   17fb8:	cmp	r0, #0
   17fbc:	push	{r4}		; (str r4, [sp, #-4]!)
   17fc0:	beq	18014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4188>
   17fc4:	ldr	r1, [r0, #4]
   17fc8:	mov	r3, #0
   17fcc:	movw	r2, #64972	; 0xfdcc
   17fd0:	str	r3, [r0, #16]
   17fd4:	movt	r2, #9
   17fd8:	mov	r4, #1
   17fdc:	strb	r3, [r1]
   17fe0:	ldr	ip, [r0, #4]
   17fe4:	ldr	r1, [r2, #16]
   17fe8:	strb	r3, [ip, #1]
   17fec:	cmp	r1, r3
   17ff0:	ldr	ip, [r0, #4]
   17ff4:	str	r3, [r0, #44]	; 0x2c
   17ff8:	str	r4, [r0, #28]
   17ffc:	str	ip, [r0, #8]
   18000:	beq	18014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4188>
   18004:	ldr	r3, [r2, #20]
   18008:	ldr	r3, [r1, r3, lsl #2]
   1800c:	cmp	r0, r3
   18010:	beq	1801c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4190>
   18014:	pop	{r4}		; (ldr r4, [sp], #4)
   18018:	bx	lr
   1801c:	pop	{r4}		; (ldr r4, [sp], #4)
   18020:	b	17dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f3c>
   18024:	push	{r3, r4, r5, r6, r7, lr}
   18028:	mov	r4, r0
   1802c:	mov	r5, r1
   18030:	bl	13ab4 <__errno_location@plt>
   18034:	mov	r6, r0
   18038:	mov	r0, r4
   1803c:	ldr	r7, [r6]
   18040:	bl	17fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x412c>
   18044:	movw	r3, #64972	; 0xfdcc
   18048:	movt	r3, #9
   1804c:	mov	r2, #1
   18050:	str	r2, [r4, #40]	; 0x28
   18054:	ldr	r2, [r3, #16]
   18058:	str	r5, [r4]
   1805c:	cmp	r2, #0
   18060:	beq	18074 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x41e8>
   18064:	ldr	r3, [r3, #20]
   18068:	ldr	r3, [r2, r3, lsl #2]
   1806c:	cmp	r4, r3
   18070:	beq	18084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x41f8>
   18074:	mov	r2, #1
   18078:	mov	r3, #0
   1807c:	str	r2, [r4, #32]
   18080:	str	r3, [r4, #36]	; 0x24
   18084:	subs	r0, r5, #0
   18088:	beq	180a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4214>
   1808c:	bl	13b44 <fileno@plt>
   18090:	bl	13df0 <isatty@plt>
   18094:	cmp	r0, #0
   18098:	movle	r0, #0
   1809c:	movgt	r0, #1
   180a0:	str	r0, [r4, #24]
   180a4:	str	r7, [r6]
   180a8:	pop	{r3, r4, r5, r6, r7, pc}
   180ac:	push	{r4, r5, r6, lr}
   180b0:	mov	r6, r0
   180b4:	mov	r0, #48	; 0x30
   180b8:	mov	r5, r1
   180bc:	bl	1394c <malloc@plt>
   180c0:	subs	r4, r0, #0
   180c4:	beq	180fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4270>
   180c8:	str	r5, [r4, #12]
   180cc:	add	r0, r5, #2
   180d0:	bl	1394c <malloc@plt>
   180d4:	cmp	r0, #0
   180d8:	str	r0, [r4, #4]
   180dc:	beq	180fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4270>
   180e0:	mov	r3, #1
   180e4:	mov	r0, r4
   180e8:	mov	r1, r6
   180ec:	str	r3, [r4, #20]
   180f0:	bl	18024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4198>
   180f4:	mov	r0, r4
   180f8:	pop	{r4, r5, r6, pc}
   180fc:	movw	r0, #56424	; 0xdc68
   18100:	movt	r0, #4
   18104:	bl	14064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8>
   18108:	push	{r3, r4, r5, r6, r7, lr}
   1810c:	movw	r4, #64972	; 0xfdcc
   18110:	movt	r4, #9
   18114:	mov	r5, r0
   18118:	ldr	r3, [r4, #16]
   1811c:	cmp	r3, #0
   18120:	beq	18148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x42bc>
   18124:	ldr	r2, [r4, #20]
   18128:	ldr	r3, [r3, r2, lsl #2]
   1812c:	cmp	r3, #0
   18130:	beq	18148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x42bc>
   18134:	mov	r0, r3
   18138:	mov	r1, r5
   1813c:	bl	18024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4198>
   18140:	pop	{r3, r4, r5, r6, r7, lr}
   18144:	b	17dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f3c>
   18148:	bl	17e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f8c>
   1814c:	ldr	r0, [r4, #28]
   18150:	mov	r1, #16384	; 0x4000
   18154:	ldr	r7, [r4, #20]
   18158:	ldr	r6, [r4, #16]
   1815c:	bl	180ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4220>
   18160:	ldr	r3, [r4, #16]
   18164:	movw	r2, #64972	; 0xfdcc
   18168:	movt	r2, #9
   1816c:	cmp	r3, #0
   18170:	str	r0, [r6, r7, lsl #2]
   18174:	beq	18134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x42a8>
   18178:	ldr	r2, [r2, #20]
   1817c:	mov	r1, r5
   18180:	ldr	r0, [r3, r2, lsl #2]
   18184:	bl	18024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4198>
   18188:	pop	{r3, r4, r5, r6, r7, lr}
   1818c:	b	17dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f3c>
   18190:	movw	r3, #996	; 0x3e4
   18194:	movt	r3, #10
   18198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1819c:	sub	sp, sp, #44	; 0x2c
   181a0:	ldr	r2, [r3]
   181a4:	cmp	r2, #0
   181a8:	beq	181d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x434c>
   181ac:	sub	r2, r2, #1
   181b0:	mov	r1, #0
   181b4:	str	r1, [r3]
   181b8:	cmp	r2, #4
   181bc:	ldrls	pc, [pc, r2, lsl #2]
   181c0:	b	187a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4918>
   181c4:	andeq	r8, r1, r4, lsl #15
   181c8:	andeq	r8, r1, r4, ror r7
   181cc:	muleq	r1, ip, r7
   181d0:	andeq	r8, r1, ip, lsl #15
   181d4:	muleq	r1, r4, r7
   181d8:	movw	ip, #64972	; 0xfdcc
   181dc:	movt	ip, #9
   181e0:	str	ip, [sp, #12]
   181e4:	ldr	r3, [ip, #88]	; 0x58
   181e8:	cmp	r3, #0
   181ec:	beq	186e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x485c>
   181f0:	movw	r8, #40508	; 0x9e3c
   181f4:	movt	r8, #4
   181f8:	movw	sl, #32324	; 0x7e44
   181fc:	movt	sl, #4
   18200:	mov	r9, r8
   18204:	movw	ip, #992	; 0x3e0
   18208:	movt	ip, #10
   1820c:	str	ip, [sp, #20]
   18210:	movw	ip, #48692	; 0xbe34
   18214:	movt	ip, #4
   18218:	str	ip, [sp, #16]
   1821c:	movw	ip, #1000	; 0x3e8
   18220:	movt	ip, #10
   18224:	str	ip, [sp, #28]
   18228:	movw	ip, #64972	; 0xfdcc
   1822c:	movt	ip, #9
   18230:	str	ip, [sp, #32]
   18234:	movw	ip, #62396	; 0xf3bc
   18238:	movt	ip, #9
   1823c:	str	ip, [sp, #36]	; 0x24
   18240:	movw	r5, #1774	; 0x6ee
   18244:	ldr	r0, [sp, #12]
   18248:	ldr	ip, [sp, #12]
   1824c:	ldr	r0, [r0, #4]
   18250:	ldrb	r3, [ip, #32]
   18254:	str	r0, [sp, #24]
   18258:	ldr	r6, [sp, #24]
   1825c:	ldr	r0, [ip]
   18260:	strb	r3, [r6]
   18264:	lsl	r1, r0, #1
   18268:	ldr	ip, [sp, #12]
   1826c:	add	r2, r8, r1
   18270:	add	r2, r2, #340	; 0x154
   18274:	ldr	fp, [ip, #8]
   18278:	ldr	r7, [ip, #12]
   1827c:	ldrh	ip, [r2]
   18280:	add	r2, sl, r1
   18284:	ldrb	r4, [sl, r3, lsl #2]
   18288:	add	r2, r2, #1024	; 0x400
   1828c:	ldrsh	r3, [r2]
   18290:	cmp	r3, #0
   18294:	movne	r7, r6
   18298:	movne	fp, r0
   1829c:	b	182c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x443c>
   182a0:	add	r3, r9, r1
   182a4:	sub	r3, r3, #3600	; 0xe10
   182a8:	ldrsh	r0, [r3, #-8]
   182ac:	cmp	r0, r5
   182b0:	lsl	r1, r0, #1
   182b4:	addgt	r4, r9, r4, lsl #2
   182b8:	add	r3, r8, r1
   182bc:	add	r3, r3, #340	; 0x154
   182c0:	ldrbgt	r4, [r4, #8]
   182c4:	ldrh	ip, [r3]
   182c8:	sxtah	ip, r4, ip
   182cc:	movw	r2, #40508	; 0x9e3c
   182d0:	movt	r2, #4
   182d4:	lsl	ip, ip, #1
   182d8:	add	r3, r8, ip
   182dc:	add	r3, r3, #3952	; 0xf70
   182e0:	add	r3, r3, #4
   182e4:	ldrsh	r3, [r3]
   182e8:	cmp	r3, r0
   182ec:	bne	182a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4414>
   182f0:	ldr	r0, [sp, #16]
   182f4:	add	r4, r6, #1
   182f8:	add	ip, r0, ip
   182fc:	add	ip, ip, #1648	; 0x670
   18300:	ldrsh	r0, [ip, #4]
   18304:	lsl	r1, r0, #1
   18308:	add	r2, r2, r1
   1830c:	add	r2, r2, #340	; 0x154
   18310:	ldrh	ip, [r2]
   18314:	movw	r2, #2857	; 0xb29
   18318:	sxth	r3, ip
   1831c:	cmp	r3, r2
   18320:	ldrbne	r3, [r6, #1]
   18324:	movne	r6, r4
   18328:	bne	18280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x43f4>
   1832c:	ldr	ip, [sp, #12]
   18330:	add	r3, sl, r1
   18334:	add	r3, r3, #1024	; 0x400
   18338:	ldr	r6, [sp, #24]
   1833c:	str	r7, [ip, #12]
   18340:	ldrh	r3, [r3]
   18344:	ldr	r7, [sp, #20]
   18348:	str	fp, [ip, #8]
   1834c:	mov	fp, ip
   18350:	sxth	r3, r3
   18354:	ldr	ip, [sp, #28]
   18358:	cmp	r3, #0
   1835c:	str	r6, [r7]
   18360:	mov	r0, #0
   18364:	ldreq	r3, [fp, #8]
   18368:	ldreq	r4, [fp, #12]
   1836c:	addeq	r3, sl, r3, lsl #1
   18370:	rsb	r2, r6, r4
   18374:	addeq	r3, r3, #1024	; 0x400
   18378:	str	r2, [ip]
   1837c:	ldrb	r2, [r4]
   18380:	ldrsheq	r3, [r3]
   18384:	str	r4, [fp, #4]
   18388:	strb	r0, [r4]
   1838c:	strb	r2, [fp, #32]
   18390:	cmp	r3, #210	; 0xd2
   18394:	ldrls	pc, [pc, r3, lsl #2]
   18398:	b	19b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5cec>
   1839c:			; <UNDEFINED> instruction: 0x000194b8
   183a0:	strdeq	r9, [r1], -r8
   183a4:	andeq	r9, r1, r8, lsl #9
   183a8:	andeq	r9, r1, r0, lsr #9
   183ac:	andeq	r9, r1, r8, ror #8
   183b0:	andeq	r9, r1, r0, asr r4
   183b4:	andeq	r9, r1, ip, lsl r4
   183b8:	andeq	r9, r1, r8, asr #7
   183bc:	andeq	r9, r1, r8, lsl #21
   183c0:	andeq	r9, r1, r0, ror sl
   183c4:	andeq	r9, r1, r8, asr sl
   183c8:	andeq	r9, r1, r0, asr #20
   183cc:	andeq	r9, r1, r8, lsr #20
   183d0:	andeq	r9, r1, r0, lsl sl
   183d4:	strdeq	r9, [r1], -r8
   183d8:	andeq	r9, r1, r0, ror #19
   183dc:	andeq	r9, r1, r8, asr #19
   183e0:			; <UNDEFINED> instruction: 0x000199b0
   183e4:	muleq	r1, r8, r9
   183e8:	andeq	r9, r1, r0, lsl #19
   183ec:	andeq	r9, r1, r8, ror #18
   183f0:	andeq	r9, r1, r0, asr r9
   183f4:	andeq	r9, r1, r8, lsr r9
   183f8:	andeq	r9, r1, r0, lsr #18
   183fc:	andeq	r9, r1, r8, lsl #18
   18400:	strdeq	r9, [r1], -r0
   18404:	ldrdeq	r9, [r1], -r8
   18408:	andeq	r9, r1, r0, asr #17
   1840c:	andeq	r9, r1, r8, lsr #17
   18410:	muleq	r1, r0, r8
   18414:	andeq	r9, r1, r8, ror r8
   18418:	andeq	r9, r1, r0, ror #16
   1841c:	andeq	r9, r1, r8, asr #16
   18420:	andeq	r9, r1, r0, lsr r8
   18424:	andeq	r9, r1, r8, lsl r8
   18428:	andeq	r9, r1, r0, lsl #16
   1842c:	andeq	r9, r1, r8, ror #15
   18430:	andeq	r9, r1, r4, lsr #26
   18434:	andeq	r9, r1, ip, lsl #26
   18438:	strdeq	r9, [r1], -r4
   1843c:	ldrdeq	r9, [r1], -ip
   18440:	andeq	r9, r1, r4, asr #25
   18444:	andeq	r9, r1, ip, lsr #25
   18448:	muleq	r1, r4, ip
   1844c:	andeq	r9, r1, ip, ror ip
   18450:	andeq	r9, r1, r4, ror #24
   18454:	andeq	r9, r1, ip, asr #24
   18458:	andeq	r9, r1, r4, lsr ip
   1845c:	andeq	r9, r1, ip, lsl ip
   18460:	andeq	r9, r1, r4, lsl #24
   18464:	andeq	r9, r1, ip, ror #23
   18468:	ldrdeq	r9, [r1], -r4
   1846c:			; <UNDEFINED> instruction: 0x00019bbc
   18470:	andeq	r9, r1, r4, ror #27
   18474:	andeq	r9, r1, ip, asr #27
   18478:			; <UNDEFINED> instruction: 0x00019db4
   1847c:	muleq	r1, ip, sp
   18480:	andeq	r9, r1, r4, lsl #27
   18484:	andeq	r9, r1, ip, ror #26
   18488:	andeq	r9, r1, r4, asr sp
   1848c:	andeq	r9, r1, ip, lsr sp
   18490:	andeq	r9, r1, r4, asr #28
   18494:	andeq	r9, r1, ip, lsr #28
   18498:	andeq	r9, r1, r4, lsl lr
   1849c:	strdeq	r9, [r1], -ip
   184a0:	andeq	r9, r1, r4, ror lr
   184a4:	andeq	r9, r1, ip, asr lr
   184a8:	andeq	r9, r1, ip, lsl #29
   184ac:	ldrdeq	r9, [r1], -r0
   184b0:	andeq	r9, r1, r8, lsl #10
   184b4:	strdeq	r9, [r1], -r0
   184b8:	ldrdeq	r9, [r1], -r8
   184bc:	andeq	r8, r1, ip, ror #27
   184c0:	ldrdeq	r8, [r1], -r4
   184c4:			; <UNDEFINED> instruction: 0x00018dbc
   184c8:	andeq	r8, r1, r4, lsr #27
   184cc:	andeq	r8, r1, ip, lsl #27
   184d0:	andeq	r8, r1, r4, ror sp
   184d4:	andeq	r8, r1, ip, asr sp
   184d8:	andeq	r8, r1, r4, asr #26
   184dc:	andeq	r8, r1, ip, lsr #26
   184e0:	andeq	r8, r1, r4, lsl sp
   184e4:	strdeq	r8, [r1], -ip
   184e8:	andeq	r8, r1, r4, ror #25
   184ec:	andeq	r8, r1, ip, asr #25
   184f0:			; <UNDEFINED> instruction: 0x00018cb4
   184f4:	muleq	r1, ip, ip
   184f8:	andeq	r8, r1, r4, lsl #25
   184fc:	andeq	r8, r1, ip, ror #24
   18500:	andeq	r8, r1, r4, asr ip
   18504:	andeq	r8, r1, ip, lsr ip
   18508:	andeq	r8, r1, r4, lsr #24
   1850c:	andeq	r8, r1, ip, lsl #24
   18510:	strdeq	r8, [r1], -r4
   18514:	ldrdeq	r8, [r1], -ip
   18518:	andeq	r8, r1, r4, asr #23
   1851c:	andeq	r8, r1, ip, lsr #23
   18520:	muleq	r1, r4, fp
   18524:	andeq	r8, r1, ip, ror fp
   18528:	andeq	r8, r1, r4, ror #22
   1852c:	andeq	r8, r1, ip, asr #22
   18530:	andeq	r8, r1, r4, lsr fp
   18534:	andeq	r8, r1, ip, lsl fp
   18538:	andeq	r8, r1, r4, lsl #22
   1853c:	andeq	r8, r1, ip, ror #21
   18540:	ldrdeq	r8, [r1], -r4
   18544:			; <UNDEFINED> instruction: 0x00018abc
   18548:	andeq	r8, r1, r4, lsr #21
   1854c:	andeq	r8, r1, ip, lsl #21
   18550:	andeq	r8, r1, r4, ror sl
   18554:	andeq	r8, r1, ip, asr sl
   18558:	andeq	r8, r1, r4, asr #20
   1855c:	andeq	r8, r1, ip, lsr #20
   18560:	andeq	r8, r1, r4, lsl sl
   18564:	strdeq	r8, [r1], -ip
   18568:	andeq	r8, r1, r4, ror #19
   1856c:	andeq	r8, r1, ip, asr #19
   18570:			; <UNDEFINED> instruction: 0x000189b4
   18574:	muleq	r1, ip, r9
   18578:	andeq	r8, r1, r4, lsl #19
   1857c:	andeq	r8, r1, ip, ror #18
   18580:	andeq	r8, r1, r4, asr r9
   18584:	andeq	r8, r1, ip, lsr r9
   18588:	andeq	r8, r1, r4, lsr #18
   1858c:	andeq	r8, r1, ip, lsl #18
   18590:	strdeq	r8, [r1], -r4
   18594:	ldrdeq	r8, [r1], -ip
   18598:	andeq	r8, r1, r4, asr #17
   1859c:	andeq	r8, r1, ip, lsr #17
   185a0:	muleq	r1, r4, r8
   185a4:	andeq	r8, r1, ip, ror r8
   185a8:	andeq	r8, r1, r4, ror #16
   185ac:	andeq	r8, r1, ip, asr #16
   185b0:	andeq	r8, r1, r4, lsr r8
   185b4:	ldrdeq	r8, [r1], -ip
   185b8:	strdeq	r8, [r1], -r0
   185bc:	andeq	r8, r1, r4, asr #4
   185c0:	andeq	r8, r1, r4, asr #4
   185c4:	ldrdeq	r9, [r1], -r4
   185c8:	strheq	r9, [r1], -ip
   185cc:	andeq	r9, r1, r4, lsr #1
   185d0:	andeq	r9, r1, ip, lsl #1
   185d4:	andeq	r9, r1, r4, ror r0
   185d8:	andeq	r9, r1, ip, asr r0
   185dc:	andeq	r9, r1, r4, asr #32
   185e0:	andeq	r9, r1, ip, lsr #32
   185e4:	andeq	r9, r1, r4, lsl r0
   185e8:	strdeq	r8, [r1], -ip
   185ec:	andeq	r8, r1, r4, ror #31
   185f0:	andeq	r8, r1, ip, asr #31
   185f4:			; <UNDEFINED> instruction: 0x00018fb4
   185f8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   185fc:	andeq	r8, r1, r4, lsl #31
   18600:	andeq	r8, r1, ip, ror #30
   18604:	andeq	r8, r1, r4, asr pc
   18608:	andeq	r8, r1, ip, lsr pc
   1860c:	andeq	r8, r1, r4, lsr #30
   18610:	andeq	r8, r1, ip, lsl #30
   18614:	strdeq	r8, [r1], -r4
   18618:	ldrdeq	r8, [r1], -ip
   1861c:	andeq	r8, r1, r4, asr #29
   18620:	andeq	r8, r1, ip, lsr #29
   18624:	muleq	r1, r4, lr
   18628:	andeq	r8, r1, ip, ror lr
   1862c:	andeq	r8, r1, r4, ror #28
   18630:	andeq	r8, r1, ip, asr #28
   18634:	andeq	r8, r1, r4, lsr lr
   18638:	andeq	r8, r1, ip, lsl lr
   1863c:	andeq	r8, r1, r4, lsl #28
   18640:	andeq	r9, r1, r8, lsl #11
   18644:	andeq	r9, r1, r0, ror r5
   18648:	andeq	r9, r1, r8, asr r5
   1864c:	andeq	r9, r1, r0, asr #10
   18650:	andeq	r9, r1, r0, lsr #10
   18654:	andeq	r9, r1, r8, asr r6
   18658:	andeq	r9, r1, r8, lsr r6
   1865c:	andeq	r9, r1, r4, lsl r6
   18660:	strdeq	r9, [r1], -r4
   18664:	andeq	r9, r1, r8, lsl r3
   18668:	muleq	r1, r4, r2
   1866c:	andeq	r9, r1, r4, lsr r2
   18670:	ldrdeq	r8, [r1], -ip
   18674:	andeq	r8, r1, r4, asr #4
   18678:	andeq	r9, r1, r8, ror #2
   1867c:	andeq	r9, r1, r0, asr r1
   18680:			; <UNDEFINED> instruction: 0x000193b0
   18684:	muleq	r1, r8, r3
   18688:	andeq	r9, r1, r8, ror r3
   1868c:	andeq	r9, r1, r8, asr r3
   18690:	andeq	r9, r1, ip, lsr r3
   18694:	ldrdeq	r9, [r1], -r0
   18698:	andeq	r9, r1, r0, asr #11
   1869c:	andeq	r9, r1, r0, lsr #11
   186a0:	andeq	r9, r1, r4, asr #22
   186a4:	ldrdeq	r8, [r1], -ip
   186a8:	andeq	r8, r1, r4, asr #4
   186ac:	andeq	r8, r1, r4, asr #4
   186b0:	andeq	r8, r1, ip, lsl r8
   186b4:	andeq	r9, r1, ip, lsl r2
   186b8:	andeq	r9, r1, r0, lsl #22
   186bc:	andeq	r9, r1, r8, ror r1
   186c0:	andeq	r9, r1, ip, ror #1
   186c4:	andeq	r9, r1, ip, ror #1
   186c8:	andeq	r9, r1, ip, ror #1
   186cc:	andeq	r9, r1, ip, ror #1
   186d0:	andeq	r9, r1, ip, ror #1
   186d4:	andeq	r9, r1, ip, ror #1
   186d8:	andeq	r9, r1, ip, ror #1
   186dc:	andeq	r9, r1, ip, ror #1
   186e0:	andeq	r9, r1, ip, ror #1
   186e4:	andeq	r9, r1, ip, ror #1
   186e8:	ldr	r2, [ip]
   186ec:	mov	r3, #1
   186f0:	str	r3, [ip, #88]	; 0x58
   186f4:	cmp	r2, #0
   186f8:	streq	r3, [ip]
   186fc:	ldr	ip, [sp, #12]
   18700:	movw	r3, #64972	; 0xfdcc
   18704:	movt	r3, #9
   18708:	ldr	r2, [ip, #28]
   1870c:	ldr	ip, [sp, #12]
   18710:	cmp	r2, #0
   18714:	movweq	r2, #63780	; 0xf924
   18718:	movteq	r2, #9
   1871c:	ldreq	r2, [r2]
   18720:	streq	r2, [r3, #28]
   18724:	movw	r3, #64972	; 0xfdcc
   18728:	ldr	r2, [ip, #92]	; 0x5c
   1872c:	movt	r3, #9
   18730:	ldr	ip, [sp, #12]
   18734:	cmp	r2, #0
   18738:	movweq	r2, #64592	; 0xfc50
   1873c:	movteq	r2, #9
   18740:	ldreq	r2, [r2]
   18744:	streq	r2, [r3, #92]	; 0x5c
   18748:	movw	r3, #64972	; 0xfdcc
   1874c:	ldr	r2, [ip, #16]
   18750:	movt	r3, #9
   18754:	cmp	r2, #0
   18758:	beq	187b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x492c>
   1875c:	ldr	r3, [r3, #20]
   18760:	ldr	r3, [r2, r3, lsl #2]
   18764:	cmp	r3, #0
   18768:	beq	187b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x492c>
   1876c:	bl	17dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f3c>
   18770:	b	181f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4364>
   18774:	movw	r3, #367	; 0x16f
   18778:	mov	r0, r3
   1877c:	add	sp, sp, #44	; 0x2c
   18780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18784:	movw	r3, #366	; 0x16e
   18788:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1878c:	movw	r3, #386	; 0x182
   18790:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18794:	mov	r3, #368	; 0x170
   18798:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1879c:	movw	r3, #377	; 0x179
   187a0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   187a4:	movw	r0, #56676	; 0xdd64
   187a8:	mov	r1, #135	; 0x87
   187ac:	movt	r0, #4
   187b0:	ldr	r2, [pc, #4068]	; 1979c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5910>
   187b4:	bl	303e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c558>
   187b8:	bl	17e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f8c>
   187bc:	ldr	ip, [sp, #12]
   187c0:	mov	r1, #16384	; 0x4000
   187c4:	ldr	r0, [ip, #28]
   187c8:	ldr	r5, [ip, #20]
   187cc:	ldr	r4, [ip, #16]
   187d0:	bl	180ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4220>
   187d4:	str	r0, [r4, r5, lsl #2]
   187d8:	b	1876c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48e0>
   187dc:	ldr	ip, [sp, #36]	; 0x24
   187e0:	ldr	r3, [ip]
   187e4:	add	r3, r3, #1
   187e8:	str	r3, [ip]
   187ec:	b	18240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x43b4>
   187f0:	movw	r2, #62396	; 0xf3bc
   187f4:	movt	r2, #9
   187f8:	movw	r1, #976	; 0x3d0
   187fc:	movt	r1, #10
   18800:	ldr	ip, [r2]
   18804:	movw	r0, #353	; 0x161
   18808:	mov	r3, r0
   1880c:	str	r0, [r1]
   18810:	add	r1, ip, #1
   18814:	str	r1, [r2]
   18818:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1881c:	ldr	ip, [sp, #20]
   18820:	movw	r0, #56684	; 0xdd6c
   18824:	movt	r0, #4
   18828:	ldr	r1, [ip]
   1882c:	bl	13f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x100>
   18830:	b	18240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x43b4>
   18834:	movw	r2, #976	; 0x3d0
   18838:	movt	r2, #10
   1883c:	movw	r1, #385	; 0x181
   18840:	mov	r3, r1
   18844:	str	r1, [r2]
   18848:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1884c:	movw	r2, #976	; 0x3d0
   18850:	movt	r2, #10
   18854:	mov	r1, #384	; 0x180
   18858:	mov	r3, r1
   1885c:	str	r1, [r2]
   18860:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18864:	movw	r2, #976	; 0x3d0
   18868:	movt	r2, #10
   1886c:	movw	r1, #378	; 0x17a
   18870:	mov	r3, r1
   18874:	str	r1, [r2]
   18878:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1887c:	movw	r2, #976	; 0x3d0
   18880:	movt	r2, #10
   18884:	movw	r1, #346	; 0x15a
   18888:	mov	r3, r1
   1888c:	str	r1, [r2]
   18890:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18894:	movw	r2, #976	; 0x3d0
   18898:	movt	r2, #10
   1889c:	movw	r1, #345	; 0x159
   188a0:	mov	r3, r1
   188a4:	str	r1, [r2]
   188a8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   188ac:	movw	r2, #976	; 0x3d0
   188b0:	movt	r2, #10
   188b4:	mov	r1, #344	; 0x158
   188b8:	mov	r3, r1
   188bc:	str	r1, [r2]
   188c0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   188c4:	movw	r2, #976	; 0x3d0
   188c8:	movt	r2, #10
   188cc:	movw	r1, #343	; 0x157
   188d0:	mov	r3, r1
   188d4:	str	r1, [r2]
   188d8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   188dc:	movw	r2, #976	; 0x3d0
   188e0:	movt	r2, #10
   188e4:	movw	r1, #383	; 0x17f
   188e8:	mov	r3, r1
   188ec:	str	r1, [r2]
   188f0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   188f4:	movw	r2, #976	; 0x3d0
   188f8:	movt	r2, #10
   188fc:	movw	r1, #342	; 0x156
   18900:	mov	r3, r1
   18904:	str	r1, [r2]
   18908:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1890c:	movw	r2, #976	; 0x3d0
   18910:	movt	r2, #10
   18914:	mov	r1, #288	; 0x120
   18918:	mov	r3, r1
   1891c:	str	r1, [r2]
   18920:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18924:	movw	r2, #976	; 0x3d0
   18928:	movt	r2, #10
   1892c:	movw	r1, #305	; 0x131
   18930:	mov	r3, r1
   18934:	str	r1, [r2]
   18938:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1893c:	movw	r2, #976	; 0x3d0
   18940:	movt	r2, #10
   18944:	movw	r1, #382	; 0x17e
   18948:	mov	r3, r1
   1894c:	str	r1, [r2]
   18950:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18954:	movw	r2, #976	; 0x3d0
   18958:	movt	r2, #10
   1895c:	movw	r1, #335	; 0x14f
   18960:	mov	r3, r1
   18964:	str	r1, [r2]
   18968:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1896c:	movw	r2, #976	; 0x3d0
   18970:	movt	r2, #10
   18974:	movw	r1, #335	; 0x14f
   18978:	mov	r3, r1
   1897c:	str	r1, [r2]
   18980:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18984:	movw	r2, #976	; 0x3d0
   18988:	movt	r2, #10
   1898c:	movw	r1, #333	; 0x14d
   18990:	mov	r3, r1
   18994:	str	r1, [r2]
   18998:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1899c:	movw	r2, #976	; 0x3d0
   189a0:	movt	r2, #10
   189a4:	movw	r1, #333	; 0x14d
   189a8:	mov	r3, r1
   189ac:	str	r1, [r2]
   189b0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   189b4:	movw	r2, #976	; 0x3d0
   189b8:	movt	r2, #10
   189bc:	movw	r1, #381	; 0x17d
   189c0:	mov	r3, r1
   189c4:	str	r1, [r2]
   189c8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   189cc:	movw	r2, #976	; 0x3d0
   189d0:	movt	r2, #10
   189d4:	mov	r1, #380	; 0x17c
   189d8:	mov	r3, r1
   189dc:	str	r1, [r2]
   189e0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   189e4:	movw	r2, #976	; 0x3d0
   189e8:	movt	r2, #10
   189ec:	movw	r1, #379	; 0x17b
   189f0:	mov	r3, r1
   189f4:	str	r1, [r2]
   189f8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   189fc:	movw	r2, #976	; 0x3d0
   18a00:	movt	r2, #10
   18a04:	movw	r1, #313	; 0x139
   18a08:	mov	r3, r1
   18a0c:	str	r1, [r2]
   18a10:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18a14:	movw	r2, #976	; 0x3d0
   18a18:	movt	r2, #10
   18a1c:	mov	r1, #312	; 0x138
   18a20:	mov	r3, r1
   18a24:	str	r1, [r2]
   18a28:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18a2c:	movw	r2, #976	; 0x3d0
   18a30:	movt	r2, #10
   18a34:	movw	r1, #311	; 0x137
   18a38:	mov	r3, r1
   18a3c:	str	r1, [r2]
   18a40:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18a44:	movw	r2, #976	; 0x3d0
   18a48:	movt	r2, #10
   18a4c:	movw	r1, #310	; 0x136
   18a50:	mov	r3, r1
   18a54:	str	r1, [r2]
   18a58:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18a5c:	movw	r2, #976	; 0x3d0
   18a60:	movt	r2, #10
   18a64:	movw	r1, #309	; 0x135
   18a68:	mov	r3, r1
   18a6c:	str	r1, [r2]
   18a70:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18a74:	movw	r2, #976	; 0x3d0
   18a78:	movt	r2, #10
   18a7c:	movw	r1, #297	; 0x129
   18a80:	mov	r3, r1
   18a84:	str	r1, [r2]
   18a88:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18a8c:	movw	r2, #976	; 0x3d0
   18a90:	movt	r2, #10
   18a94:	movw	r1, #298	; 0x12a
   18a98:	mov	r3, r1
   18a9c:	str	r1, [r2]
   18aa0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18aa4:	movw	r2, #976	; 0x3d0
   18aa8:	movt	r2, #10
   18aac:	movw	r1, #295	; 0x127
   18ab0:	mov	r3, r1
   18ab4:	str	r1, [r2]
   18ab8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18abc:	movw	r2, #976	; 0x3d0
   18ac0:	movt	r2, #10
   18ac4:	mov	r1, #296	; 0x128
   18ac8:	mov	r3, r1
   18acc:	str	r1, [r2]
   18ad0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18ad4:	movw	r2, #976	; 0x3d0
   18ad8:	movt	r2, #10
   18adc:	movw	r1, #295	; 0x127
   18ae0:	mov	r3, r1
   18ae4:	str	r1, [r2]
   18ae8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18aec:	movw	r2, #976	; 0x3d0
   18af0:	movt	r2, #10
   18af4:	movw	r1, #313	; 0x139
   18af8:	mov	r3, r1
   18afc:	str	r1, [r2]
   18b00:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18b04:	movw	r2, #976	; 0x3d0
   18b08:	movt	r2, #10
   18b0c:	mov	r1, #332	; 0x14c
   18b10:	mov	r3, r1
   18b14:	str	r1, [r2]
   18b18:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18b1c:	movw	r2, #976	; 0x3d0
   18b20:	movt	r2, #10
   18b24:	movw	r1, #331	; 0x14b
   18b28:	mov	r3, r1
   18b2c:	str	r1, [r2]
   18b30:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18b34:	movw	r2, #976	; 0x3d0
   18b38:	movt	r2, #10
   18b3c:	movw	r1, #330	; 0x14a
   18b40:	mov	r3, r1
   18b44:	str	r1, [r2]
   18b48:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18b4c:	movw	r2, #976	; 0x3d0
   18b50:	movt	r2, #10
   18b54:	movw	r1, #286	; 0x11e
   18b58:	mov	r3, r1
   18b5c:	str	r1, [r2]
   18b60:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18b64:	movw	r2, #976	; 0x3d0
   18b68:	movt	r2, #10
   18b6c:	movw	r1, #285	; 0x11d
   18b70:	mov	r3, r1
   18b74:	str	r1, [r2]
   18b78:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18b7c:	movw	r2, #976	; 0x3d0
   18b80:	movt	r2, #10
   18b84:	mov	r1, #284	; 0x11c
   18b88:	mov	r3, r1
   18b8c:	str	r1, [r2]
   18b90:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18b94:	movw	r2, #976	; 0x3d0
   18b98:	movt	r2, #10
   18b9c:	movw	r1, #283	; 0x11b
   18ba0:	mov	r3, r1
   18ba4:	str	r1, [r2]
   18ba8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18bac:	movw	r2, #976	; 0x3d0
   18bb0:	movt	r2, #10
   18bb4:	movw	r1, #282	; 0x11a
   18bb8:	mov	r3, r1
   18bbc:	str	r1, [r2]
   18bc0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18bc4:	movw	r2, #976	; 0x3d0
   18bc8:	movt	r2, #10
   18bcc:	movw	r1, #329	; 0x149
   18bd0:	mov	r3, r1
   18bd4:	str	r1, [r2]
   18bd8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18bdc:	movw	r2, #976	; 0x3d0
   18be0:	movt	r2, #10
   18be4:	mov	r1, #328	; 0x148
   18be8:	mov	r3, r1
   18bec:	str	r1, [r2]
   18bf0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18bf4:	movw	r2, #976	; 0x3d0
   18bf8:	movt	r2, #10
   18bfc:	movw	r1, #327	; 0x147
   18c00:	mov	r3, r1
   18c04:	str	r1, [r2]
   18c08:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18c0c:	movw	r2, #976	; 0x3d0
   18c10:	movt	r2, #10
   18c14:	movw	r1, #302	; 0x12e
   18c18:	mov	r3, r1
   18c1c:	str	r1, [r2]
   18c20:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18c24:	movw	r2, #976	; 0x3d0
   18c28:	movt	r2, #10
   18c2c:	mov	r1, #300	; 0x12c
   18c30:	mov	r3, r1
   18c34:	str	r1, [r2]
   18c38:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18c3c:	movw	r2, #976	; 0x3d0
   18c40:	movt	r2, #10
   18c44:	movw	r1, #326	; 0x146
   18c48:	mov	r3, r1
   18c4c:	str	r1, [r2]
   18c50:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18c54:	movw	r2, #976	; 0x3d0
   18c58:	movt	r2, #10
   18c5c:	movw	r1, #334	; 0x14e
   18c60:	mov	r3, r1
   18c64:	str	r1, [r2]
   18c68:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18c6c:	movw	r2, #976	; 0x3d0
   18c70:	movt	r2, #10
   18c74:	movw	r1, #291	; 0x123
   18c78:	mov	r3, r1
   18c7c:	str	r1, [r2]
   18c80:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18c84:	movw	r2, #976	; 0x3d0
   18c88:	movt	r2, #10
   18c8c:	movw	r1, #290	; 0x122
   18c90:	mov	r3, r1
   18c94:	str	r1, [r2]
   18c98:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18c9c:	movw	r2, #976	; 0x3d0
   18ca0:	movt	r2, #10
   18ca4:	movw	r1, #289	; 0x121
   18ca8:	mov	r3, r1
   18cac:	str	r1, [r2]
   18cb0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18cb4:	movw	r2, #976	; 0x3d0
   18cb8:	movt	r2, #10
   18cbc:	movw	r1, #287	; 0x11f
   18cc0:	mov	r3, r1
   18cc4:	str	r1, [r2]
   18cc8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18ccc:	movw	r2, #976	; 0x3d0
   18cd0:	movt	r2, #10
   18cd4:	movw	r1, #303	; 0x12f
   18cd8:	mov	r3, r1
   18cdc:	str	r1, [r2]
   18ce0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18ce4:	movw	r2, #976	; 0x3d0
   18ce8:	movt	r2, #10
   18cec:	movw	r1, #301	; 0x12d
   18cf0:	mov	r3, r1
   18cf4:	str	r1, [r2]
   18cf8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18cfc:	movw	r2, #976	; 0x3d0
   18d00:	movt	r2, #10
   18d04:	mov	r1, #340	; 0x154
   18d08:	mov	r3, r1
   18d0c:	str	r1, [r2]
   18d10:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18d14:	movw	r2, #976	; 0x3d0
   18d18:	movt	r2, #10
   18d1c:	mov	r1, #336	; 0x150
   18d20:	mov	r3, r1
   18d24:	str	r1, [r2]
   18d28:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18d2c:	movw	r2, #976	; 0x3d0
   18d30:	movt	r2, #10
   18d34:	movw	r1, #314	; 0x13a
   18d38:	mov	r3, r1
   18d3c:	str	r1, [r2]
   18d40:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18d44:	movw	r2, #976	; 0x3d0
   18d48:	movt	r2, #10
   18d4c:	movw	r1, #347	; 0x15b
   18d50:	mov	r3, r1
   18d54:	str	r1, [r2]
   18d58:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18d5c:	movw	r2, #976	; 0x3d0
   18d60:	movt	r2, #10
   18d64:	movw	r1, #338	; 0x152
   18d68:	mov	r3, r1
   18d6c:	str	r1, [r2]
   18d70:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18d74:	movw	r2, #976	; 0x3d0
   18d78:	movt	r2, #10
   18d7c:	movw	r1, #337	; 0x151
   18d80:	mov	r3, r1
   18d84:	str	r1, [r2]
   18d88:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18d8c:	movw	r2, #976	; 0x3d0
   18d90:	movt	r2, #10
   18d94:	movw	r1, #339	; 0x153
   18d98:	mov	r3, r1
   18d9c:	str	r1, [r2]
   18da0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18da4:	movw	r2, #976	; 0x3d0
   18da8:	movt	r2, #10
   18dac:	mov	r1, #316	; 0x13c
   18db0:	mov	r3, r1
   18db4:	str	r1, [r2]
   18db8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18dbc:	movw	r2, #976	; 0x3d0
   18dc0:	movt	r2, #10
   18dc4:	movw	r1, #315	; 0x13b
   18dc8:	mov	r3, r1
   18dcc:	str	r1, [r2]
   18dd0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18dd4:	movw	r2, #976	; 0x3d0
   18dd8:	movt	r2, #10
   18ddc:	mov	r1, #320	; 0x140
   18de0:	mov	r3, r1
   18de4:	str	r1, [r2]
   18de8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18dec:	movw	r2, #976	; 0x3d0
   18df0:	movt	r2, #10
   18df4:	movw	r1, #317	; 0x13d
   18df8:	mov	r3, r1
   18dfc:	str	r1, [r2]
   18e00:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18e04:	movw	r2, #976	; 0x3d0
   18e08:	movt	r2, #10
   18e0c:	movw	r1, #370	; 0x172
   18e10:	mov	r3, r1
   18e14:	str	r1, [r2]
   18e18:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18e1c:	movw	r2, #976	; 0x3d0
   18e20:	movt	r2, #10
   18e24:	movw	r1, #369	; 0x171
   18e28:	mov	r3, r1
   18e2c:	str	r1, [r2]
   18e30:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18e34:	movw	r2, #976	; 0x3d0
   18e38:	movt	r2, #10
   18e3c:	movw	r1, #359	; 0x167
   18e40:	mov	r3, r1
   18e44:	str	r1, [r2]
   18e48:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18e4c:	movw	r2, #976	; 0x3d0
   18e50:	movt	r2, #10
   18e54:	mov	r1, #356	; 0x164
   18e58:	mov	r3, r1
   18e5c:	str	r1, [r2]
   18e60:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18e64:	movw	r2, #976	; 0x3d0
   18e68:	movt	r2, #10
   18e6c:	movw	r1, #355	; 0x163
   18e70:	mov	r3, r1
   18e74:	str	r1, [r2]
   18e78:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18e7c:	movw	r2, #976	; 0x3d0
   18e80:	movt	r2, #10
   18e84:	mov	r1, #360	; 0x168
   18e88:	mov	r3, r1
   18e8c:	str	r1, [r2]
   18e90:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18e94:	movw	r2, #976	; 0x3d0
   18e98:	movt	r2, #10
   18e9c:	mov	r1, #352	; 0x160
   18ea0:	mov	r3, r1
   18ea4:	str	r1, [r2]
   18ea8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18eac:	movw	r2, #976	; 0x3d0
   18eb0:	movt	r2, #10
   18eb4:	mov	r1, #364	; 0x16c
   18eb8:	mov	r3, r1
   18ebc:	str	r1, [r2]
   18ec0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18ec4:	movw	r2, #976	; 0x3d0
   18ec8:	movt	r2, #10
   18ecc:	movw	r1, #363	; 0x16b
   18ed0:	mov	r3, r1
   18ed4:	str	r1, [r2]
   18ed8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18edc:	movw	r2, #976	; 0x3d0
   18ee0:	movt	r2, #10
   18ee4:	movw	r1, #362	; 0x16a
   18ee8:	mov	r3, r1
   18eec:	str	r1, [r2]
   18ef0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18ef4:	movw	r2, #976	; 0x3d0
   18ef8:	movt	r2, #10
   18efc:	mov	r1, #348	; 0x15c
   18f00:	mov	r3, r1
   18f04:	str	r1, [r2]
   18f08:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18f0c:	movw	r2, #976	; 0x3d0
   18f10:	movt	r2, #10
   18f14:	movw	r1, #279	; 0x117
   18f18:	mov	r3, r1
   18f1c:	str	r1, [r2]
   18f20:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18f24:	movw	r2, #976	; 0x3d0
   18f28:	movt	r2, #10
   18f2c:	movw	r1, #341	; 0x155
   18f30:	mov	r3, r1
   18f34:	str	r1, [r2]
   18f38:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18f3c:	movw	r2, #976	; 0x3d0
   18f40:	movt	r2, #10
   18f44:	movw	r1, #354	; 0x162
   18f48:	mov	r3, r1
   18f4c:	str	r1, [r2]
   18f50:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18f54:	movw	r2, #976	; 0x3d0
   18f58:	movt	r2, #10
   18f5c:	movw	r1, #351	; 0x15f
   18f60:	mov	r3, r1
   18f64:	str	r1, [r2]
   18f68:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18f6c:	movw	r2, #976	; 0x3d0
   18f70:	movt	r2, #10
   18f74:	movw	r1, #350	; 0x15e
   18f78:	mov	r3, r1
   18f7c:	str	r1, [r2]
   18f80:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18f84:	movw	r2, #976	; 0x3d0
   18f88:	movt	r2, #10
   18f8c:	movw	r1, #349	; 0x15d
   18f90:	mov	r3, r1
   18f94:	str	r1, [r2]
   18f98:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18f9c:	movw	r2, #976	; 0x3d0
   18fa0:	movt	r2, #10
   18fa4:	movw	r1, #371	; 0x173
   18fa8:	mov	r3, r1
   18fac:	str	r1, [r2]
   18fb0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18fb4:	movw	r2, #976	; 0x3d0
   18fb8:	movt	r2, #10
   18fbc:	movw	r1, #369	; 0x171
   18fc0:	mov	r3, r1
   18fc4:	str	r1, [r2]
   18fc8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18fcc:	movw	r2, #976	; 0x3d0
   18fd0:	movt	r2, #10
   18fd4:	movw	r1, #359	; 0x167
   18fd8:	mov	r3, r1
   18fdc:	str	r1, [r2]
   18fe0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18fe4:	movw	r2, #976	; 0x3d0
   18fe8:	movt	r2, #10
   18fec:	mov	r1, #356	; 0x164
   18ff0:	mov	r3, r1
   18ff4:	str	r1, [r2]
   18ff8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   18ffc:	movw	r2, #976	; 0x3d0
   19000:	movt	r2, #10
   19004:	movw	r1, #355	; 0x163
   19008:	mov	r3, r1
   1900c:	str	r1, [r2]
   19010:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19014:	movw	r2, #976	; 0x3d0
   19018:	movt	r2, #10
   1901c:	mov	r1, #360	; 0x168
   19020:	mov	r3, r1
   19024:	str	r1, [r2]
   19028:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1902c:	movw	r2, #976	; 0x3d0
   19030:	movt	r2, #10
   19034:	mov	r1, #352	; 0x160
   19038:	mov	r3, r1
   1903c:	str	r1, [r2]
   19040:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19044:	movw	r2, #976	; 0x3d0
   19048:	movt	r2, #10
   1904c:	mov	r1, #364	; 0x16c
   19050:	mov	r3, r1
   19054:	str	r1, [r2]
   19058:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1905c:	movw	r2, #976	; 0x3d0
   19060:	movt	r2, #10
   19064:	movw	r1, #363	; 0x16b
   19068:	mov	r3, r1
   1906c:	str	r1, [r2]
   19070:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19074:	movw	r2, #976	; 0x3d0
   19078:	movt	r2, #10
   1907c:	movw	r1, #362	; 0x16a
   19080:	mov	r3, r1
   19084:	str	r1, [r2]
   19088:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1908c:	movw	r2, #976	; 0x3d0
   19090:	movt	r2, #10
   19094:	mov	r1, #348	; 0x15c
   19098:	mov	r3, r1
   1909c:	str	r1, [r2]
   190a0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   190a4:	movw	r2, #976	; 0x3d0
   190a8:	movt	r2, #10
   190ac:	movw	r1, #279	; 0x117
   190b0:	mov	r3, r1
   190b4:	str	r1, [r2]
   190b8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   190bc:	movw	r2, #976	; 0x3d0
   190c0:	movt	r2, #10
   190c4:	movw	r1, #341	; 0x155
   190c8:	mov	r3, r1
   190cc:	str	r1, [r2]
   190d0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   190d4:	movw	r2, #976	; 0x3d0
   190d8:	movt	r2, #10
   190dc:	movw	r1, #354	; 0x162
   190e0:	mov	r3, r1
   190e4:	str	r1, [r2]
   190e8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   190ec:	ldr	ip, [sp, #12]
   190f0:	movw	r4, #64972	; 0xfdcc
   190f4:	movt	r4, #9
   190f8:	ldr	r3, [ip, #36]	; 0x24
   190fc:	sub	r3, r3, #1
   19100:	str	r3, [ip, #36]	; 0x24
   19104:	cmp	r3, #0
   19108:	beq	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1910c:	add	r3, r4, r3, lsl #2
   19110:	ldr	r0, [r3, #100]	; 0x64
   19114:	bl	17ed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4048>
   19118:	ldr	r3, [r4, #36]	; 0x24
   1911c:	movw	r2, #1032	; 0x408
   19120:	movt	r2, #10
   19124:	movw	r1, #62396	; 0xf3bc
   19128:	movt	r1, #9
   1912c:	add	r4, r4, r3, lsl #2
   19130:	ldrb	r0, [r2]
   19134:	movw	r3, #278	; 0x116
   19138:	ldr	r5, [r4, #140]	; 0x8c
   1913c:	ldr	ip, [r4, #180]	; 0xb4
   19140:	str	r5, [r1]
   19144:	bfi	r0, ip, #3, #1
   19148:	strb	r0, [r2]
   1914c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19150:	movw	r2, #976	; 0x3d0
   19154:	movt	r2, #10
   19158:	movw	r1, #374	; 0x176
   1915c:	mov	r3, r1
   19160:	str	r1, [r2]
   19164:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19168:	ldr	ip, [sp, #20]
   1916c:	ldr	r3, [ip]
   19170:	ldrb	r3, [r3]
   19174:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19178:	ldrb	r3, [fp, #32]
   1917c:	ldr	r0, [fp, #20]
   19180:	ldr	r2, [fp, #16]
   19184:	ldr	r1, [r7]
   19188:	strb	r3, [r4]
   1918c:	ldr	r3, [r2, r0, lsl #2]
   19190:	rsb	r1, r1, r4
   19194:	sub	r1, r1, #1
   19198:	ldr	ip, [r3, #44]	; 0x2c
   1919c:	cmp	ip, #0
   191a0:	ldr	ip, [sp, #32]
   191a4:	beq	197a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5918>
   191a8:	ldr	r0, [ip, #24]
   191ac:	ldr	ip, [r3, #4]
   191b0:	movw	r2, #64972	; 0xfdcc
   191b4:	ldr	r3, [fp, #4]
   191b8:	movt	r2, #9
   191bc:	add	r0, ip, r0
   191c0:	cmp	r3, r0
   191c4:	bls	196d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x584c>
   191c8:	str	r1, [sp, #8]
   191cc:	str	r2, [sp, #4]
   191d0:	bl	14090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x204>
   191d4:	ldr	r1, [sp, #8]
   191d8:	ldr	r2, [sp, #4]
   191dc:	cmp	r0, #1
   191e0:	beq	196ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5820>
   191e4:	cmp	r0, #2
   191e8:	beq	19678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x57ec>
   191ec:	cmp	r0, #0
   191f0:	bne	18240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x43b4>
   191f4:	ldr	ip, [sp, #20]
   191f8:	ldr	r3, [ip]
   191fc:	add	r6, r3, r1
   19200:	str	r6, [r2, #4]
   19204:	bl	13e98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc>
   19208:	ldr	r1, [sp, #20]
   1920c:	ldr	r1, [r1]
   19210:	str	r1, [sp, #24]
   19214:	ldrb	r3, [r6]
   19218:	b	18264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x43d8>
   1921c:	ldr	ip, [sp, #20]
   19220:	movw	r0, #56696	; 0xdd78
   19224:	movt	r0, #4
   19228:	ldr	r1, [ip]
   1922c:	bl	13f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x100>
   19230:	b	18240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x43b4>
   19234:	ldr	ip, [sp, #20]
   19238:	mov	r5, #0
   1923c:	ldr	r0, [ip]
   19240:	add	r0, r0, #1
   19244:	bl	137e4 <xstrdup@plt>
   19248:	movw	r3, #976	; 0x3d0
   1924c:	movt	r3, #10
   19250:	mov	r6, r0
   19254:	str	r0, [r3]
   19258:	bl	13a24 <strlen@plt>
   1925c:	ldr	ip, [sp, #28]
   19260:	mov	r3, #0
   19264:	ldr	r1, [ip]
   19268:	sub	r1, r1, #2
   1926c:	mov	r4, r1
   19270:	mov	r2, r0
   19274:	cmp	r3, r5
   19278:	cmpeq	r2, r4
   1927c:	movw	r3, #259	; 0x103
   19280:	movhi	r2, r1
   19284:	add	r2, r6, r2
   19288:	mov	r1, #0
   1928c:	strb	r1, [r2]
   19290:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19294:	ldr	ip, [sp, #20]
   19298:	str	r6, [sp, #24]
   1929c:	ldr	r0, [ip]
   192a0:	ldrb	r3, [r0]
   192a4:	cmp	r3, #47	; 0x2f
   192a8:	bne	19300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5474>
   192ac:	ldrb	r3, [r0, #1]
   192b0:	cmp	r3, #42	; 0x2a
   192b4:	bne	19300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5474>
   192b8:	ldr	ip, [sp, #12]
   192bc:	add	r3, r6, #2
   192c0:	movw	r1, #992	; 0x3e0
   192c4:	movt	r1, #10
   192c8:	ldrb	r2, [ip, #32]
   192cc:	str	r3, [ip, #4]
   192d0:	rsb	r3, r6, r3
   192d4:	ldr	ip, [sp, #28]
   192d8:	strb	r2, [r4]
   192dc:	mov	r2, #0
   192e0:	str	r6, [r1]
   192e4:	str	r3, [ip]
   192e8:	ldr	ip, [sp, #12]
   192ec:	ldrb	r3, [r6, #2]
   192f0:	strb	r2, [r6, #2]
   192f4:	strb	r3, [ip, #32]
   192f8:	bl	143f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x568>
   192fc:	b	18240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x43b4>
   19300:	bl	137e4 <xstrdup@plt>
   19304:	movw	r2, #976	; 0x3d0
   19308:	movt	r2, #10
   1930c:	movw	r3, #259	; 0x103
   19310:	str	r0, [r2]
   19314:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19318:	ldr	ip, [sp, #20]
   1931c:	ldr	r0, [ip]
   19320:	add	r0, r0, #2
   19324:	bl	137e4 <xstrdup@plt>
   19328:	movw	r2, #976	; 0x3d0
   1932c:	movt	r2, #10
   19330:	mov	r3, #260	; 0x104
   19334:	str	r0, [r2]
   19338:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1933c:	ldr	ip, [sp, #20]
   19340:	mov	r2, #17
   19344:	ldr	r3, [ip]
   19348:	ldr	ip, [sp, #12]
   1934c:	ldrb	r3, [r3]
   19350:	str	r2, [ip]
   19354:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19358:	ldr	ip, [sp, #20]
   1935c:	ldr	r0, [ip]
   19360:	bl	137e4 <xstrdup@plt>
   19364:	movw	r2, #976	; 0x3d0
   19368:	movt	r2, #10
   1936c:	mov	r3, #372	; 0x174
   19370:	str	r0, [r2]
   19374:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19378:	ldr	ip, [sp, #20]
   1937c:	ldr	r0, [ip]
   19380:	bl	137e4 <xstrdup@plt>
   19384:	movw	r2, #976	; 0x3d0
   19388:	movt	r2, #10
   1938c:	movw	r3, #373	; 0x175
   19390:	str	r0, [r2]
   19394:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19398:	movw	r2, #976	; 0x3d0
   1939c:	movt	r2, #10
   193a0:	movw	r1, #370	; 0x172
   193a4:	mov	r3, r1
   193a8:	str	r1, [r2]
   193ac:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   193b0:	movw	r2, #976	; 0x3d0
   193b4:	movt	r2, #10
   193b8:	movw	r1, #375	; 0x177
   193bc:	mov	r3, r1
   193c0:	str	r1, [r2]
   193c4:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   193c8:	ldr	ip, [sp, #20]
   193cc:	mov	r1, #0
   193d0:	ldr	r0, [ip]
   193d4:	ldr	ip, [sp, #28]
   193d8:	ldr	r3, [ip]
   193dc:	add	r3, r0, r3
   193e0:	ldrb	r3, [r3, #-1]
   193e4:	sub	r3, r3, #66	; 0x42
   193e8:	uxtb	r3, r3
   193ec:	cmp	r3, #54	; 0x36
   193f0:	ldrls	r2, [pc, #936]	; 197a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5914>
   193f4:	movhi	r2, #10
   193f8:	ldrsbls	r2, [r3, r2]
   193fc:	bl	13478 <bfd_scan_vma@plt>
   19400:	movw	r2, #976	; 0x3d0
   19404:	movt	r2, #10
   19408:	mov	ip, #0
   1940c:	movw	r3, #258	; 0x102
   19410:	str	ip, [r2, #8]
   19414:	strd	r0, [r2]
   19418:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   1941c:	ldr	ip, [sp, #20]
   19420:	mov	r2, #16
   19424:	mov	r1, #0
   19428:	ldr	r0, [ip]
   1942c:	add	r0, r0, #1
   19430:	bl	13478 <bfd_scan_vma@plt>
   19434:	movw	r2, #976	; 0x3d0
   19438:	movt	r2, #10
   1943c:	mov	ip, #0
   19440:	movw	r3, #258	; 0x102
   19444:	str	ip, [r2, #8]
   19448:	strd	r0, [r2]
   1944c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19450:	movw	r2, #976	; 0x3d0
   19454:	movt	r2, #10
   19458:	mov	r1, #61	; 0x3d
   1945c:	mov	r3, r1
   19460:	str	r1, [r2]
   19464:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19468:	ldr	ip, [sp, #20]
   1946c:	ldr	r0, [ip]
   19470:	bl	137e4 <xstrdup@plt>
   19474:	movw	r2, #976	; 0x3d0
   19478:	movt	r2, #10
   1947c:	movw	r3, #259	; 0x103
   19480:	str	r0, [r2]
   19484:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19488:	movw	r2, #976	; 0x3d0
   1948c:	movt	r2, #10
   19490:	mov	r1, #45	; 0x2d
   19494:	mov	r3, r1
   19498:	str	r1, [r2]
   1949c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   194a0:	movw	r2, #976	; 0x3d0
   194a4:	movt	r2, #10
   194a8:	mov	r1, #43	; 0x2b
   194ac:	mov	r3, r1
   194b0:	str	r1, [r2]
   194b4:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   194b8:	ldr	r3, [fp, #8]
   194bc:	ldrb	r2, [fp, #32]
   194c0:	add	r3, sl, r3, lsl #1
   194c4:	add	r3, r3, #1024	; 0x400
   194c8:	strb	r2, [r4]
   194cc:	ldr	r4, [fp, #12]
   194d0:	ldrh	r3, [r3]
   194d4:	b	18350 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x44c4>
   194d8:	movw	r2, #976	; 0x3d0
   194dc:	movt	r2, #10
   194e0:	mov	r1, #304	; 0x130
   194e4:	mov	r3, r1
   194e8:	str	r1, [r2]
   194ec:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   194f0:	movw	r2, #976	; 0x3d0
   194f4:	movt	r2, #10
   194f8:	movw	r1, #299	; 0x12b
   194fc:	mov	r3, r1
   19500:	str	r1, [r2]
   19504:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19508:	movw	r2, #976	; 0x3d0
   1950c:	movt	r2, #10
   19510:	movw	r1, #299	; 0x12b
   19514:	mov	r3, r1
   19518:	str	r1, [r2]
   1951c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19520:	ldr	ip, [sp, #20]
   19524:	ldr	r0, [ip]
   19528:	bl	137e4 <xstrdup@plt>
   1952c:	movw	r2, #976	; 0x3d0
   19530:	movt	r2, #10
   19534:	movw	r3, #259	; 0x103
   19538:	str	r0, [r2]
   1953c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19540:	movw	r2, #976	; 0x3d0
   19544:	movt	r2, #10
   19548:	movw	r1, #351	; 0x15f
   1954c:	mov	r3, r1
   19550:	str	r1, [r2]
   19554:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19558:	movw	r2, #976	; 0x3d0
   1955c:	movt	r2, #10
   19560:	movw	r1, #350	; 0x15e
   19564:	mov	r3, r1
   19568:	str	r1, [r2]
   1956c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19570:	movw	r2, #976	; 0x3d0
   19574:	movt	r2, #10
   19578:	movw	r1, #349	; 0x15d
   1957c:	mov	r3, r1
   19580:	str	r1, [r2]
   19584:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19588:	movw	r2, #976	; 0x3d0
   1958c:	movt	r2, #10
   19590:	movw	r1, #371	; 0x173
   19594:	mov	r3, r1
   19598:	str	r1, [r2]
   1959c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   195a0:	ldr	ip, [sp, #20]
   195a4:	ldr	r3, [ip]
   195a8:	ldr	ip, [sp, #12]
   195ac:	ldrb	r3, [r3]
   195b0:	ldr	r2, [ip, #96]	; 0x60
   195b4:	add	r2, r2, #1
   195b8:	str	r2, [ip, #96]	; 0x60
   195bc:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   195c0:	ldr	ip, [sp, #20]
   195c4:	ldr	r3, [ip]
   195c8:	ldrb	r3, [r3]
   195cc:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   195d0:	ldr	ip, [sp, #20]
   195d4:	mov	r1, #19
   195d8:	mov	r2, #0
   195dc:	ldr	r3, [ip]
   195e0:	ldr	ip, [sp, #12]
   195e4:	ldrb	r3, [r3]
   195e8:	str	r1, [ip]
   195ec:	str	r2, [ip, #96]	; 0x60
   195f0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   195f4:	ldr	ip, [sp, #20]
   195f8:	ldr	r0, [ip]
   195fc:	bl	137e4 <xstrdup@plt>
   19600:	movw	r2, #976	; 0x3d0
   19604:	movt	r2, #10
   19608:	movw	r3, #259	; 0x103
   1960c:	str	r0, [r2]
   19610:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19614:	ldr	ip, [sp, #20]
   19618:	ldr	r0, [ip]
   1961c:	add	r0, r0, #2
   19620:	bl	137e4 <xstrdup@plt>
   19624:	movw	r2, #976	; 0x3d0
   19628:	movt	r2, #10
   1962c:	mov	r3, #260	; 0x104
   19630:	str	r0, [r2]
   19634:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19638:	ldr	ip, [sp, #20]
   1963c:	ldr	r0, [ip]
   19640:	bl	137e4 <xstrdup@plt>
   19644:	movw	r2, #976	; 0x3d0
   19648:	movt	r2, #10
   1964c:	movw	r3, #259	; 0x103
   19650:	str	r0, [r2]
   19654:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19658:	ldr	ip, [sp, #20]
   1965c:	ldr	r0, [ip]
   19660:	bl	137e4 <xstrdup@plt>
   19664:	movw	r2, #976	; 0x3d0
   19668:	movt	r2, #10
   1966c:	movw	r3, #259	; 0x103
   19670:	str	r0, [r2]
   19674:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19678:	ldr	r0, [r2, #20]
   1967c:	ldr	r1, [r2, #16]
   19680:	ldr	r3, [r2, #24]
   19684:	ldr	r1, [r1, r0, lsl #2]
   19688:	ldr	r4, [r1, #4]
   1968c:	add	r4, r4, r3
   19690:	str	r4, [r2, #4]
   19694:	bl	13e98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc>
   19698:	ldr	r6, [r7]
   1969c:	add	r0, sl, r0, lsl #1
   196a0:	add	r3, r0, #1024	; 0x400
   196a4:	ldrh	r3, [r3]
   196a8:	b	18350 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x44c4>
   196ac:	ldr	ip, [sp, #32]
   196b0:	mov	r0, #0
   196b4:	ldr	r2, [r7]
   196b8:	ldr	r3, [ip]
   196bc:	str	r0, [ip, #84]	; 0x54
   196c0:	sub	r3, r3, #1
   196c4:	str	r2, [ip, #4]
   196c8:	add	r3, r3, r3, lsr #31
   196cc:	asr	r3, r3, #1
   196d0:	add	r3, r3, #201	; 0xc9
   196d4:	b	18390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4504>
   196d8:	ldr	r4, [r7]
   196dc:	add	r4, r4, r1
   196e0:	str	r4, [r2, #4]
   196e4:	str	r2, [sp, #4]
   196e8:	bl	13e98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc>
   196ec:	ldr	r2, [sp, #4]
   196f0:	lsl	r1, r0, #1
   196f4:	add	r3, sl, r1
   196f8:	add	r3, r3, #1024	; 0x400
   196fc:	ldrh	r3, [r3]
   19700:	cmp	r3, #0
   19704:	strne	r0, [r2, #8]
   19708:	strne	r4, [r2, #12]
   1970c:	add	r2, r8, r1
   19710:	add	r2, r2, #340	; 0x154
   19714:	ldrsh	r2, [r2]
   19718:	add	ip, r8, r2, lsl #1
   1971c:	add	ip, ip, #3952	; 0xf70
   19720:	add	ip, ip, #6
   19724:	ldrsh	ip, [ip]
   19728:	cmp	ip, r0
   1972c:	beq	19764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x58d8>
   19730:	add	r2, r8, r1
   19734:	sub	r2, r2, #3600	; 0xe10
   19738:	ldrsh	ip, [r2, #-8]
   1973c:	lsl	r1, ip, #1
   19740:	add	r2, r8, r1
   19744:	add	r2, r2, #340	; 0x154
   19748:	ldrsh	r2, [r2]
   1974c:	add	r0, r8, r2, lsl #1
   19750:	add	r0, r0, #3952	; 0xf70
   19754:	add	r0, r0, #6
   19758:	ldrsh	r0, [r0]
   1975c:	cmp	ip, r0
   19760:	bne	19730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x58a4>
   19764:	ldr	ip, [sp, #16]
   19768:	add	r2, ip, r2, lsl #1
   1976c:	add	r2, r2, #1648	; 0x670
   19770:	ldrsh	r0, [r2, #6]
   19774:	cmp	r0, r5
   19778:	beq	19ea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6018>
   1977c:	cmp	r0, #0
   19780:	ldr	r6, [r7]
   19784:	beq	18350 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x44c4>
   19788:	ldr	ip, [sp, #12]
   1978c:	str	r6, [sp, #24]
   19790:	add	r6, r4, #1
   19794:	str	r6, [ip, #4]
   19798:	b	19214 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5388>
   1979c:	andeq	sp, r4, r0, lsr #23
   197a0:	andeq	sp, r4, r8, lsr #23
   197a4:	ldr	lr, [ip, #28]
   197a8:	ldr	ip, [r3, #16]
   197ac:	str	lr, [r3]
   197b0:	ldr	r3, [sp, #32]
   197b4:	ldr	r2, [r2, r0, lsl #2]
   197b8:	mov	r0, ip
   197bc:	str	ip, [r3, #24]
   197c0:	mov	ip, #1
   197c4:	mov	r3, r2
   197c8:	str	ip, [r2, #44]	; 0x2c
   197cc:	b	191ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5320>
   197d0:	movw	r2, #976	; 0x3d0
   197d4:	movt	r2, #10
   197d8:	movw	r1, #319	; 0x13f
   197dc:	mov	r3, r1
   197e0:	str	r1, [r2]
   197e4:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   197e8:	movw	r2, #976	; 0x3d0
   197ec:	movt	r2, #10
   197f0:	mov	r1, #45	; 0x2d
   197f4:	mov	r3, r1
   197f8:	str	r1, [r2]
   197fc:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19800:	movw	r2, #976	; 0x3d0
   19804:	movt	r2, #10
   19808:	mov	r1, #43	; 0x2b
   1980c:	mov	r3, r1
   19810:	str	r1, [r2]
   19814:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19818:	movw	r2, #976	; 0x3d0
   1981c:	movt	r2, #10
   19820:	mov	r1, #42	; 0x2a
   19824:	mov	r3, r1
   19828:	str	r1, [r2]
   1982c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19830:	movw	r2, #976	; 0x3d0
   19834:	movt	r2, #10
   19838:	mov	r1, #63	; 0x3f
   1983c:	mov	r3, r1
   19840:	str	r1, [r2]
   19844:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19848:	movw	r2, #976	; 0x3d0
   1984c:	movt	r2, #10
   19850:	mov	r1, #33	; 0x21
   19854:	mov	r3, r1
   19858:	str	r1, [r2]
   1985c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19860:	movw	r2, #976	; 0x3d0
   19864:	movt	r2, #10
   19868:	mov	r1, #126	; 0x7e
   1986c:	mov	r3, r1
   19870:	str	r1, [r2]
   19874:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19878:	movw	r2, #976	; 0x3d0
   1987c:	movt	r2, #10
   19880:	mov	r1, #124	; 0x7c
   19884:	mov	r3, r1
   19888:	str	r1, [r2]
   1988c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19890:	movw	r2, #976	; 0x3d0
   19894:	movt	r2, #10
   19898:	mov	r1, #38	; 0x26
   1989c:	mov	r3, r1
   198a0:	str	r1, [r2]
   198a4:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   198a8:	movw	r2, #976	; 0x3d0
   198ac:	movt	r2, #10
   198b0:	mov	r1, #44	; 0x2c
   198b4:	mov	r3, r1
   198b8:	str	r1, [r2]
   198bc:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   198c0:	movw	r2, #976	; 0x3d0
   198c4:	movt	r2, #10
   198c8:	mov	r1, #62	; 0x3e
   198cc:	mov	r3, r1
   198d0:	str	r1, [r2]
   198d4:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   198d8:	movw	r2, #976	; 0x3d0
   198dc:	movt	r2, #10
   198e0:	movw	r1, #270	; 0x10e
   198e4:	mov	r3, r1
   198e8:	str	r1, [r2]
   198ec:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   198f0:	movw	r2, #976	; 0x3d0
   198f4:	movt	r2, #10
   198f8:	movw	r1, #261	; 0x105
   198fc:	mov	r3, r1
   19900:	str	r1, [r2]
   19904:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19908:	movw	r2, #976	; 0x3d0
   1990c:	movt	r2, #10
   19910:	movw	r1, #262	; 0x106
   19914:	mov	r3, r1
   19918:	str	r1, [r2]
   1991c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19920:	movw	r2, #976	; 0x3d0
   19924:	movt	r2, #10
   19928:	movw	r1, #265	; 0x109
   1992c:	mov	r3, r1
   19930:	str	r1, [r2]
   19934:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19938:	movw	r2, #976	; 0x3d0
   1993c:	movt	r2, #10
   19940:	movw	r1, #266	; 0x10a
   19944:	mov	r3, r1
   19948:	str	r1, [r2]
   1994c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19950:	movw	r2, #976	; 0x3d0
   19954:	movt	r2, #10
   19958:	movw	r1, #267	; 0x10b
   1995c:	mov	r3, r1
   19960:	str	r1, [r2]
   19964:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19968:	movw	r2, #976	; 0x3d0
   1996c:	movt	r2, #10
   19970:	mov	r1, #268	; 0x10c
   19974:	mov	r3, r1
   19978:	str	r1, [r2]
   1997c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19980:	movw	r2, #976	; 0x3d0
   19984:	movt	r2, #10
   19988:	movw	r1, #275	; 0x113
   1998c:	mov	r3, r1
   19990:	str	r1, [r2]
   19994:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19998:	movw	r2, #976	; 0x3d0
   1999c:	movt	r2, #10
   199a0:	mov	r1, #276	; 0x114
   199a4:	mov	r3, r1
   199a8:	str	r1, [r2]
   199ac:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   199b0:	movw	r2, #976	; 0x3d0
   199b4:	movt	r2, #10
   199b8:	movw	r1, #274	; 0x112
   199bc:	mov	r3, r1
   199c0:	str	r1, [r2]
   199c4:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   199c8:	movw	r2, #976	; 0x3d0
   199cc:	movt	r2, #10
   199d0:	movw	r1, #273	; 0x111
   199d4:	mov	r3, r1
   199d8:	str	r1, [r2]
   199dc:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   199e0:	movw	r2, #976	; 0x3d0
   199e4:	movt	r2, #10
   199e8:	movw	r1, #271	; 0x10f
   199ec:	mov	r3, r1
   199f0:	str	r1, [r2]
   199f4:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   199f8:	movw	r2, #976	; 0x3d0
   199fc:	movt	r2, #10
   19a00:	mov	r1, #272	; 0x110
   19a04:	mov	r3, r1
   19a08:	str	r1, [r2]
   19a0c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19a10:	movw	r2, #976	; 0x3d0
   19a14:	movt	r2, #10
   19a18:	movw	r1, #269	; 0x10d
   19a1c:	mov	r3, r1
   19a20:	str	r1, [r2]
   19a24:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19a28:	movw	r2, #976	; 0x3d0
   19a2c:	movt	r2, #10
   19a30:	movw	r1, #263	; 0x107
   19a34:	mov	r3, r1
   19a38:	str	r1, [r2]
   19a3c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19a40:	movw	r2, #976	; 0x3d0
   19a44:	movt	r2, #10
   19a48:	mov	r1, #264	; 0x108
   19a4c:	mov	r3, r1
   19a50:	str	r1, [r2]
   19a54:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19a58:	movw	r2, #976	; 0x3d0
   19a5c:	movt	r2, #10
   19a60:	mov	r1, #91	; 0x5b
   19a64:	mov	r3, r1
   19a68:	str	r1, [r2]
   19a6c:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19a70:	movw	r2, #976	; 0x3d0
   19a74:	movt	r2, #10
   19a78:	mov	r1, #93	; 0x5d
   19a7c:	mov	r3, r1
   19a80:	str	r1, [r2]
   19a84:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19a88:	ldr	ip, [sp, #20]
   19a8c:	mov	r1, #0
   19a90:	movw	r4, #976	; 0x3d0
   19a94:	movt	r4, #10
   19a98:	ldr	r0, [ip]
   19a9c:	ldrb	r3, [r0]
   19aa0:	cmp	r3, #36	; 0x24
   19aa4:	addeq	r0, r0, #1
   19aa8:	moveq	r2, #16
   19aac:	movne	r2, #0
   19ab0:	bl	13478 <bfd_scan_vma@plt>
   19ab4:	ldr	ip, [sp, #20]
   19ab8:	ldr	r3, [ip]
   19abc:	ldr	ip, [sp, #28]
   19ac0:	ldr	r2, [ip]
   19ac4:	mov	ip, #0
   19ac8:	add	r2, r3, r2
   19acc:	str	r0, [r4]
   19ad0:	stmib	r4, {r1, ip}
   19ad4:	ldrb	r2, [r2, #-1]
   19ad8:	and	r2, r2, #223	; 0xdf
   19adc:	cmp	r2, #77	; 0x4d
   19ae0:	bne	19b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5c98>
   19ae4:	lsl	r1, r1, #20
   19ae8:	lsl	r3, r0, #20
   19aec:	orr	r1, r1, r0, lsr #12
   19af0:	str	r3, [r4]
   19af4:	str	r1, [r4, #4]
   19af8:	movw	r3, #258	; 0x102
   19afc:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19b00:	ldr	ip, [sp, #20]
   19b04:	mov	r2, #1
   19b08:	ldr	r0, [ip]
   19b0c:	ldr	ip, [sp, #28]
   19b10:	ldr	r1, [ip]
   19b14:	ldr	ip, [sp, #12]
   19b18:	ldr	r3, [ip, #92]	; 0x5c
   19b1c:	bl	137a8 <fwrite@plt>
   19b20:	b	18240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x43b4>
   19b24:	cmp	r2, #75	; 0x4b
   19b28:	bne	19b84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5cf8>
   19b2c:	lsl	r3, r1, #10
   19b30:	lsl	r2, r0, #10
   19b34:	orr	r3, r3, r0, lsr #22
   19b38:	stm	r4, {r2, r3}
   19b3c:	movw	r3, #258	; 0x102
   19b40:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19b44:	ldr	ip, [sp, #12]
   19b48:	movw	r3, #64972	; 0xfdcc
   19b4c:	movt	r3, #9
   19b50:	ldr	r2, [ip, #96]	; 0x60
   19b54:	sub	r2, r2, #1
   19b58:	str	r2, [ip, #96]	; 0x60
   19b5c:	ldr	ip, [sp, #20]
   19b60:	cmp	r2, #0
   19b64:	movlt	r2, #17
   19b68:	strlt	r2, [r3]
   19b6c:	ldr	r3, [ip]
   19b70:	ldrb	r3, [r3]
   19b74:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19b78:	movw	r0, #56712	; 0xdd88
   19b7c:	movt	r0, #4
   19b80:	bl	14064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8>
   19b84:	ldrb	r2, [r3]
   19b88:	cmp	r2, #48	; 0x30
   19b8c:	movwne	r3, #258	; 0x102
   19b90:	bne	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19b94:	ldrb	r2, [r3, #1]
   19b98:	and	r2, r2, #223	; 0xdf
   19b9c:	cmp	r2, #88	; 0x58
   19ba0:	movwne	r3, #258	; 0x102
   19ba4:	bne	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19ba8:	add	r0, r3, #2
   19bac:	bl	137e4 <xstrdup@plt>
   19bb0:	movw	r3, #258	; 0x102
   19bb4:	str	r0, [r4, #8]
   19bb8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19bbc:	movw	r2, #976	; 0x3d0
   19bc0:	movt	r2, #10
   19bc4:	mov	r1, #280	; 0x118
   19bc8:	mov	r3, r1
   19bcc:	str	r1, [r2]
   19bd0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19bd4:	movw	r2, #976	; 0x3d0
   19bd8:	movt	r2, #10
   19bdc:	mov	r1, #376	; 0x178
   19be0:	mov	r3, r1
   19be4:	str	r1, [r2]
   19be8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19bec:	movw	r2, #976	; 0x3d0
   19bf0:	movt	r2, #10
   19bf4:	movw	r1, #333	; 0x14d
   19bf8:	mov	r3, r1
   19bfc:	str	r1, [r2]
   19c00:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19c04:	movw	r2, #976	; 0x3d0
   19c08:	movt	r2, #10
   19c0c:	mov	r1, #308	; 0x134
   19c10:	mov	r3, r1
   19c14:	str	r1, [r2]
   19c18:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19c1c:	movw	r2, #976	; 0x3d0
   19c20:	movt	r2, #10
   19c24:	movw	r1, #307	; 0x133
   19c28:	mov	r3, r1
   19c2c:	str	r1, [r2]
   19c30:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19c34:	movw	r2, #976	; 0x3d0
   19c38:	movt	r2, #10
   19c3c:	movw	r1, #306	; 0x132
   19c40:	mov	r3, r1
   19c44:	str	r1, [r2]
   19c48:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19c4c:	movw	r2, #976	; 0x3d0
   19c50:	movt	r2, #10
   19c54:	mov	r1, #59	; 0x3b
   19c58:	mov	r3, r1
   19c5c:	str	r1, [r2]
   19c60:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19c64:	movw	r2, #976	; 0x3d0
   19c68:	movt	r2, #10
   19c6c:	mov	r1, #58	; 0x3a
   19c70:	mov	r3, r1
   19c74:	str	r1, [r2]
   19c78:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19c7c:	movw	r2, #976	; 0x3d0
   19c80:	movt	r2, #10
   19c84:	mov	r1, #40	; 0x28
   19c88:	mov	r3, r1
   19c8c:	str	r1, [r2]
   19c90:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19c94:	movw	r2, #976	; 0x3d0
   19c98:	movt	r2, #10
   19c9c:	mov	r1, #41	; 0x29
   19ca0:	mov	r3, r1
   19ca4:	str	r1, [r2]
   19ca8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19cac:	movw	r2, #976	; 0x3d0
   19cb0:	movt	r2, #10
   19cb4:	mov	r1, #123	; 0x7b
   19cb8:	mov	r3, r1
   19cbc:	str	r1, [r2]
   19cc0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19cc4:	movw	r2, #976	; 0x3d0
   19cc8:	movt	r2, #10
   19ccc:	mov	r1, #125	; 0x7d
   19cd0:	mov	r3, r1
   19cd4:	str	r1, [r2]
   19cd8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19cdc:	movw	r2, #976	; 0x3d0
   19ce0:	movt	r2, #10
   19ce4:	mov	r1, #61	; 0x3d
   19ce8:	mov	r3, r1
   19cec:	str	r1, [r2]
   19cf0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19cf4:	movw	r2, #976	; 0x3d0
   19cf8:	movt	r2, #10
   19cfc:	mov	r1, #60	; 0x3c
   19d00:	mov	r3, r1
   19d04:	str	r1, [r2]
   19d08:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19d0c:	movw	r2, #976	; 0x3d0
   19d10:	movt	r2, #10
   19d14:	mov	r1, #37	; 0x25
   19d18:	mov	r3, r1
   19d1c:	str	r1, [r2]
   19d20:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19d24:	movw	r2, #976	; 0x3d0
   19d28:	movt	r2, #10
   19d2c:	mov	r1, #47	; 0x2f
   19d30:	mov	r3, r1
   19d34:	str	r1, [r2]
   19d38:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19d3c:	movw	r2, #976	; 0x3d0
   19d40:	movt	r2, #10
   19d44:	movw	r1, #323	; 0x143
   19d48:	mov	r3, r1
   19d4c:	str	r1, [r2]
   19d50:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19d54:	movw	r2, #976	; 0x3d0
   19d58:	movt	r2, #10
   19d5c:	movw	r1, #322	; 0x142
   19d60:	mov	r3, r1
   19d64:	str	r1, [r2]
   19d68:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19d6c:	movw	r2, #976	; 0x3d0
   19d70:	movt	r2, #10
   19d74:	movw	r1, #294	; 0x126
   19d78:	mov	r3, r1
   19d7c:	str	r1, [r2]
   19d80:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19d84:	movw	r2, #976	; 0x3d0
   19d88:	movt	r2, #10
   19d8c:	movw	r1, #293	; 0x125
   19d90:	mov	r3, r1
   19d94:	str	r1, [r2]
   19d98:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19d9c:	movw	r2, #976	; 0x3d0
   19da0:	movt	r2, #10
   19da4:	mov	r1, #292	; 0x124
   19da8:	mov	r3, r1
   19dac:	str	r1, [r2]
   19db0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19db4:	movw	r2, #976	; 0x3d0
   19db8:	movt	r2, #10
   19dbc:	movw	r1, #279	; 0x117
   19dc0:	mov	r3, r1
   19dc4:	str	r1, [r2]
   19dc8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19dcc:	movw	r2, #976	; 0x3d0
   19dd0:	movt	r2, #10
   19dd4:	movw	r1, #335	; 0x14f
   19dd8:	mov	r3, r1
   19ddc:	str	r1, [r2]
   19de0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19de4:	movw	r2, #976	; 0x3d0
   19de8:	movt	r2, #10
   19dec:	movw	r1, #281	; 0x119
   19df0:	mov	r3, r1
   19df4:	str	r1, [r2]
   19df8:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19dfc:	movw	r2, #976	; 0x3d0
   19e00:	movt	r2, #10
   19e04:	movw	r1, #358	; 0x166
   19e08:	mov	r3, r1
   19e0c:	str	r1, [r2]
   19e10:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19e14:	movw	r2, #976	; 0x3d0
   19e18:	movt	r2, #10
   19e1c:	movw	r1, #325	; 0x145
   19e20:	mov	r3, r1
   19e24:	str	r1, [r2]
   19e28:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19e2c:	movw	r2, #976	; 0x3d0
   19e30:	movt	r2, #10
   19e34:	mov	r1, #324	; 0x144
   19e38:	mov	r3, r1
   19e3c:	str	r1, [r2]
   19e40:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19e44:	movw	r2, #976	; 0x3d0
   19e48:	movt	r2, #10
   19e4c:	movw	r1, #321	; 0x141
   19e50:	mov	r3, r1
   19e54:	str	r1, [r2]
   19e58:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19e5c:	movw	r2, #976	; 0x3d0
   19e60:	movt	r2, #10
   19e64:	movw	r1, #318	; 0x13e
   19e68:	mov	r3, r1
   19e6c:	str	r1, [r2]
   19e70:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19e74:	movw	r2, #976	; 0x3d0
   19e78:	movt	r2, #10
   19e7c:	movw	r1, #357	; 0x165
   19e80:	mov	r3, r1
   19e84:	str	r1, [r2]
   19e88:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19e8c:	movw	r2, #976	; 0x3d0
   19e90:	movt	r2, #10
   19e94:	movw	r1, #370	; 0x172
   19e98:	mov	r3, r1
   19e9c:	str	r1, [r2]
   19ea0:	b	18778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x48ec>
   19ea4:	ldr	r6, [r7]
   19ea8:	b	18350 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x44c4>
   19eac:	push	{r4, r5, r6, lr}
   19eb0:	subs	r5, r0, #0
   19eb4:	popeq	{r4, r5, r6, pc}
   19eb8:	movw	r4, #64972	; 0xfdcc
   19ebc:	movt	r4, #9
   19ec0:	bl	17e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f8c>
   19ec4:	ldr	r3, [r4, #16]
   19ec8:	cmp	r3, #0
   19ecc:	beq	19f2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x60a0>
   19ed0:	ldr	r2, [r4, #20]
   19ed4:	ldr	r0, [r3, r2, lsl #2]
   19ed8:	lsl	ip, r2, #2
   19edc:	add	r1, r3, ip
   19ee0:	cmp	r0, #0
   19ee4:	beq	19f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x608c>
   19ee8:	ldr	r0, [r4, #4]
   19eec:	add	r1, ip, #4
   19ef0:	ldrb	lr, [r4, #32]
   19ef4:	add	r1, r3, r1
   19ef8:	ldr	ip, [r4, #24]
   19efc:	add	r6, r2, #1
   19f00:	str	r6, [r4, #20]
   19f04:	strb	lr, [r0]
   19f08:	ldr	lr, [r3, r2, lsl #2]
   19f0c:	str	r0, [lr, #8]
   19f10:	ldr	r3, [r3, r2, lsl #2]
   19f14:	str	ip, [r3, #16]
   19f18:	str	r5, [r1]
   19f1c:	bl	17dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f3c>
   19f20:	mov	r3, #1
   19f24:	str	r3, [r4, #84]	; 0x54
   19f28:	pop	{r4, r5, r6, pc}
   19f2c:	ldr	r1, [r4, #20]
   19f30:	lsl	r1, r1, #2
   19f34:	b	19f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x608c>
   19f38:	push	{r3, r4, r5, r6, r7, lr}
   19f3c:	movw	r4, #64972	; 0xfdcc
   19f40:	movt	r4, #9
   19f44:	ldr	r6, [r4, #16]
   19f48:	cmp	r6, #0
   19f4c:	popeq	{r3, r4, r5, r6, r7, pc}
   19f50:	ldr	r5, [r4, #20]
   19f54:	ldr	r0, [r6, r5, lsl #2]
   19f58:	add	r7, r6, r5, lsl #2
   19f5c:	cmp	r0, #0
   19f60:	popeq	{r3, r4, r5, r6, r7, pc}
   19f64:	bl	17f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x40cc>
   19f68:	cmp	r5, #0
   19f6c:	mov	r3, #0
   19f70:	str	r3, [r6, r5, lsl #2]
   19f74:	popeq	{r3, r4, r5, r6, r7, pc}
   19f78:	ldr	r3, [r7, #-4]
   19f7c:	sub	r5, r5, #1
   19f80:	str	r5, [r4, #20]
   19f84:	cmp	r3, #0
   19f88:	popeq	{r3, r4, r5, r6, r7, pc}
   19f8c:	bl	17dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x3f3c>
   19f90:	mov	r3, #1
   19f94:	str	r3, [r4, #84]	; 0x54
   19f98:	pop	{r3, r4, r5, r6, r7, pc}
   19f9c:	cmp	r1, #1
   19fa0:	push	{r3, r4, r5, r6, r7, lr}
   19fa4:	mov	r6, r0
   19fa8:	bls	1a01c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6190>
   19fac:	sub	r7, r1, #2
   19fb0:	ldrb	r4, [r0, r7]
   19fb4:	cmp	r4, #0
   19fb8:	bne	1a01c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6190>
   19fbc:	add	r1, r0, r1
   19fc0:	ldrb	r5, [r1, #-1]
   19fc4:	cmp	r5, #0
   19fc8:	bne	1a014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6188>
   19fcc:	mov	r0, #48	; 0x30
   19fd0:	bl	1394c <malloc@plt>
   19fd4:	subs	r4, r0, #0
   19fd8:	beq	1a024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6198>
   19fdc:	mov	r3, #1
   19fe0:	str	r7, [r4, #12]
   19fe4:	str	r6, [r4, #4]
   19fe8:	str	r6, [r4, #8]
   19fec:	str	r5, [r4, #20]
   19ff0:	str	r5, [r4]
   19ff4:	str	r7, [r4, #16]
   19ff8:	str	r5, [r4, #24]
   19ffc:	str	r5, [r4, #40]	; 0x28
   1a000:	str	r5, [r4, #44]	; 0x2c
   1a004:	str	r3, [r4, #28]
   1a008:	bl	17ed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4048>
   1a00c:	mov	r0, r4
   1a010:	pop	{r3, r4, r5, r6, r7, pc}
   1a014:	mov	r0, r4
   1a018:	pop	{r3, r4, r5, r6, r7, pc}
   1a01c:	mov	r0, #0
   1a020:	pop	{r3, r4, r5, r6, r7, pc}
   1a024:	movw	r0, #56764	; 0xddbc
   1a028:	movt	r0, #4
   1a02c:	bl	14064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8>
   1a030:	push	{r4, r5, r6, lr}
   1a034:	add	r6, r1, #2
   1a038:	mov	r5, r0
   1a03c:	mov	r4, r1
   1a040:	mov	r0, r6
   1a044:	bl	1394c <malloc@plt>
   1a048:	subs	ip, r0, #0
   1a04c:	beq	1a0a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6214>
   1a050:	cmp	r4, #0
   1a054:	movne	r3, #0
   1a058:	beq	1a070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x61e4>
   1a05c:	ldrb	r2, [r5, r3]
   1a060:	strb	r2, [ip, r3]
   1a064:	add	r3, r3, #1
   1a068:	cmp	r3, r4
   1a06c:	bne	1a05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x61d0>
   1a070:	add	r2, ip, r4
   1a074:	mov	r3, #0
   1a078:	mov	r1, r6
   1a07c:	mov	r0, ip
   1a080:	strb	r3, [r2, #1]
   1a084:	mov	r5, #1
   1a088:	strb	r3, [ip, r4]
   1a08c:	bl	19f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6110>
   1a090:	subs	r3, r0, #0
   1a094:	beq	1a0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6220>
   1a098:	str	r5, [r3, #20]
   1a09c:	pop	{r4, r5, r6, pc}
   1a0a0:	movw	r0, #56808	; 0xdde8
   1a0a4:	movt	r0, #4
   1a0a8:	bl	14064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8>
   1a0ac:	movw	r0, #56852	; 0xde14
   1a0b0:	movt	r0, #4
   1a0b4:	bl	14064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8>
   1a0b8:	push	{r4, lr}
   1a0bc:	mov	r4, r0
   1a0c0:	bl	13a24 <strlen@plt>
   1a0c4:	mov	r1, r0
   1a0c8:	mov	r0, r4
   1a0cc:	pop	{r4, lr}
   1a0d0:	b	1a030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x61a4>
   1a0d4:	movw	r3, #62396	; 0xf3bc
   1a0d8:	movt	r3, #9
   1a0dc:	ldr	r0, [r3, #4]
   1a0e0:	bx	lr
   1a0e4:	movw	r3, #64972	; 0xfdcc
   1a0e8:	movt	r3, #9
   1a0ec:	ldr	r0, [r3, #28]
   1a0f0:	bx	lr
   1a0f4:	movw	r3, #64972	; 0xfdcc
   1a0f8:	movt	r3, #9
   1a0fc:	ldr	r0, [r3, #92]	; 0x5c
   1a100:	bx	lr
   1a104:	movw	r3, #1000	; 0x3e8
   1a108:	movt	r3, #10
   1a10c:	ldr	r0, [r3]
   1a110:	bx	lr
   1a114:	movw	r3, #992	; 0x3e0
   1a118:	movt	r3, #10
   1a11c:	ldr	r0, [r3]
   1a120:	bx	lr
   1a124:	movw	r3, #62396	; 0xf3bc
   1a128:	movt	r3, #9
   1a12c:	str	r0, [r3, #4]
   1a130:	bx	lr
   1a134:	movw	r3, #64972	; 0xfdcc
   1a138:	movt	r3, #9
   1a13c:	str	r0, [r3, #28]
   1a140:	bx	lr
   1a144:	movw	r3, #64972	; 0xfdcc
   1a148:	movt	r3, #9
   1a14c:	str	r0, [r3, #92]	; 0x5c
   1a150:	bx	lr
   1a154:	movw	r3, #64972	; 0xfdcc
   1a158:	movt	r3, #9
   1a15c:	ldr	r0, [r3, #220]	; 0xdc
   1a160:	bx	lr
   1a164:	movw	r3, #64972	; 0xfdcc
   1a168:	movt	r3, #9
   1a16c:	str	r0, [r3, #220]	; 0xdc
   1a170:	bx	lr
   1a174:	push	{r3, r4, r5, r6, r7, lr}
   1a178:	movw	r5, #64972	; 0xfdcc
   1a17c:	movt	r5, #9
   1a180:	ldr	r4, [r5, #16]
   1a184:	cmp	r4, #0
   1a188:	beq	1a1c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6338>
   1a18c:	ldr	r6, [r5, #20]
   1a190:	ldr	r0, [r4, r6, lsl #2]
   1a194:	add	r6, r4, r6, lsl #2
   1a198:	cmp	r0, #0
   1a19c:	beq	1a1c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6338>
   1a1a0:	mov	r7, #0
   1a1a4:	bl	17f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x40cc>
   1a1a8:	str	r7, [r6]
   1a1ac:	bl	19f38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x60ac>
   1a1b0:	ldr	r3, [r5, #20]
   1a1b4:	ldr	r0, [r4, r3, lsl #2]
   1a1b8:	add	r6, r4, r3, lsl #2
   1a1bc:	cmp	r0, #0
   1a1c0:	bne	1a1a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6318>
   1a1c4:	mov	r0, r4
   1a1c8:	bl	13574 <free@plt>
   1a1cc:	mov	r3, #0
   1a1d0:	mov	r0, r3
   1a1d4:	str	r3, [r5, #16]
   1a1d8:	str	r3, [r5, #20]
   1a1dc:	str	r3, [r5, #80]	; 0x50
   1a1e0:	str	r3, [r5, #4]
   1a1e4:	str	r3, [r5, #88]	; 0x58
   1a1e8:	str	r3, [r5]
   1a1ec:	str	r3, [r5, #28]
   1a1f0:	str	r3, [r5, #92]	; 0x5c
   1a1f4:	pop	{r3, r4, r5, r6, r7, pc}
   1a1f8:	b	1394c <malloc@plt>
   1a1fc:	b	13700 <realloc@plt>
   1a200:	b	13574 <free@plt>
   1a204:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a208:	movw	r4, #64972	; 0xfdcc
   1a20c:	movt	r4, #9
   1a210:	mov	r5, r0
   1a214:	mov	r9, r1
   1a218:	mov	r8, r2
   1a21c:	ldr	r6, [r4, #36]	; 0x24
   1a220:	cmp	r6, #9
   1a224:	bhi	1a2ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6420>
   1a228:	ldr	r7, [r4, #16]
   1a22c:	movw	r3, #1032	; 0x408
   1a230:	movt	r3, #10
   1a234:	lsl	r0, r6, #2
   1a238:	add	lr, r4, r0
   1a23c:	cmp	r7, #0
   1a240:	ldrb	r2, [r3]
   1a244:	movw	r1, #64972	; 0xfdcc
   1a248:	movt	r1, #9
   1a24c:	movw	ip, #62396	; 0xf3bc
   1a250:	movt	ip, #9
   1a254:	ubfx	r2, r2, #3, #1
   1a258:	str	r2, [lr, #180]	; 0xb4
   1a25c:	add	r6, r6, #1
   1a260:	ldrne	r2, [r1, #20]
   1a264:	mov	r1, #16384	; 0x4000
   1a268:	ldr	sl, [ip]
   1a26c:	str	r9, [lr, #40]	; 0x28
   1a270:	ldrne	r7, [r7, r2, lsl #2]
   1a274:	add	r2, r4, r0
   1a278:	str	sl, [lr, #140]	; 0x8c
   1a27c:	mov	r0, r5
   1a280:	ldrb	lr, [r3]
   1a284:	str	r7, [r2, #100]	; 0x64
   1a288:	mov	r2, #1
   1a28c:	bfi	lr, r8, #3, #1
   1a290:	str	r5, [r4, #28]
   1a294:	str	r6, [r4, #36]	; 0x24
   1a298:	strb	lr, [r3]
   1a29c:	str	r2, [ip]
   1a2a0:	bl	180ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4220>
   1a2a4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a2a8:	b	17ed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4048>
   1a2ac:	movw	r0, #56884	; 0xde34
   1a2b0:	movt	r0, #4
   1a2b4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1a2b8:	ldr	r6, [r4, #36]	; 0x24
   1a2bc:	b	1a228 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x639c>
   1a2c0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a2c4:	movw	r4, #64972	; 0xfdcc
   1a2c8:	movt	r4, #9
   1a2cc:	mov	r3, #0
   1a2d0:	mov	r8, r0
   1a2d4:	mov	r7, r1
   1a2d8:	ldr	lr, [r4, #36]	; 0x24
   1a2dc:	mov	r9, r2
   1a2e0:	str	r3, [r4, #88]	; 0x58
   1a2e4:	cmp	lr, #9
   1a2e8:	bhi	1a3bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6530>
   1a2ec:	movw	r3, #62396	; 0xf3bc
   1a2f0:	movt	r3, #9
   1a2f4:	ldr	r6, [r4, #16]
   1a2f8:	lsl	r0, lr, #2
   1a2fc:	ldr	r2, [r3]
   1a300:	add	r5, r4, r0
   1a304:	cmp	r6, #0
   1a308:	movw	ip, #64972	; 0xfdcc
   1a30c:	movt	ip, #9
   1a310:	add	lr, lr, #1
   1a314:	str	r2, [r5, #140]	; 0x8c
   1a318:	ldrne	r2, [ip, #20]
   1a31c:	str	lr, [r4, #36]	; 0x24
   1a320:	str	r7, [r5, #40]	; 0x28
   1a324:	mov	r5, #0
   1a328:	ldrne	r6, [r6, r2, lsl #2]
   1a32c:	add	r2, r4, r0
   1a330:	mov	r0, r8
   1a334:	str	r9, [r3]
   1a338:	str	r6, [r2, #100]	; 0x64
   1a33c:	bl	13a24 <strlen@plt>
   1a340:	mov	r7, r0
   1a344:	mov	r0, #48	; 0x30
   1a348:	bl	1394c <malloc@plt>
   1a34c:	mov	r4, r0
   1a350:	add	r0, r7, #3
   1a354:	str	r7, [r4, #12]
   1a358:	str	r5, [r4]
   1a35c:	bl	1394c <malloc@plt>
   1a360:	mov	r1, r8
   1a364:	mov	r2, #10
   1a368:	mov	r6, r0
   1a36c:	str	r0, [r4, #4]
   1a370:	strb	r2, [r0], #1
   1a374:	bl	13814 <strcpy@plt>
   1a378:	ldr	r1, [r4, #4]
   1a37c:	add	r2, r6, r7
   1a380:	add	r7, r7, #1
   1a384:	mov	r3, #1
   1a388:	str	r5, [r4, #24]
   1a38c:	str	r5, [r4, #40]	; 0x28
   1a390:	add	r1, r1, #1
   1a394:	str	r5, [r4, #44]	; 0x2c
   1a398:	mov	r0, r4
   1a39c:	str	r1, [r4, #8]
   1a3a0:	strb	r5, [r6, r7]
   1a3a4:	str	r7, [r4, #16]
   1a3a8:	strb	r5, [r2, #2]
   1a3ac:	str	r3, [r4, #20]
   1a3b0:	str	r3, [r4, #28]
   1a3b4:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a3b8:	b	17ed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4048>
   1a3bc:	movw	r0, #56916	; 0xde54
   1a3c0:	movt	r0, #4
   1a3c4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1a3c8:	ldr	lr, [r4, #36]	; 0x24
   1a3cc:	b	1a2ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6460>
   1a3d0:	movw	r3, #62396	; 0xf3bc
   1a3d4:	movw	r2, #64972	; 0xfdcc
   1a3d8:	movt	r3, #9
   1a3dc:	movt	r2, #9
   1a3e0:	push	{r4}		; (str r4, [sp, #-4]!)
   1a3e4:	mov	r4, #3
   1a3e8:	ldr	r1, [r3, #8]
   1a3ec:	ldr	r0, [r2]
   1a3f0:	add	ip, r1, #4
   1a3f4:	str	r4, [r2]
   1a3f8:	str	ip, [r3, #8]
   1a3fc:	str	r0, [r1]
   1a400:	pop	{r4}		; (ldr r4, [sp], #4)
   1a404:	bx	lr
   1a408:	movw	r3, #62396	; 0xf3bc
   1a40c:	movw	r2, #64972	; 0xfdcc
   1a410:	movt	r3, #9
   1a414:	movt	r2, #9
   1a418:	push	{r4}		; (str r4, [sp, #-4]!)
   1a41c:	mov	r4, #5
   1a420:	ldr	r1, [r3, #8]
   1a424:	ldr	r0, [r2]
   1a428:	add	ip, r1, #4
   1a42c:	str	r4, [r2]
   1a430:	str	ip, [r3, #8]
   1a434:	str	r0, [r1]
   1a438:	pop	{r4}		; (ldr r4, [sp], #4)
   1a43c:	bx	lr
   1a440:	movw	r3, #62396	; 0xf3bc
   1a444:	movw	r2, #64972	; 0xfdcc
   1a448:	movt	r3, #9
   1a44c:	movt	r2, #9
   1a450:	push	{r4}		; (str r4, [sp, #-4]!)
   1a454:	mov	r4, #13
   1a458:	ldr	r1, [r3, #8]
   1a45c:	ldr	r0, [r2]
   1a460:	add	ip, r1, #4
   1a464:	str	r4, [r2]
   1a468:	str	ip, [r3, #8]
   1a46c:	str	r0, [r1]
   1a470:	pop	{r4}		; (ldr r4, [sp], #4)
   1a474:	bx	lr
   1a478:	movw	r3, #62396	; 0xf3bc
   1a47c:	movw	r2, #64972	; 0xfdcc
   1a480:	movt	r3, #9
   1a484:	movt	r2, #9
   1a488:	push	{r4}		; (str r4, [sp, #-4]!)
   1a48c:	mov	r4, #15
   1a490:	ldr	r1, [r3, #8]
   1a494:	ldr	r0, [r2]
   1a498:	add	ip, r1, #4
   1a49c:	str	r4, [r2]
   1a4a0:	str	ip, [r3, #8]
   1a4a4:	str	r0, [r1]
   1a4a8:	pop	{r4}		; (ldr r4, [sp], #4)
   1a4ac:	bx	lr
   1a4b0:	movw	r3, #62396	; 0xf3bc
   1a4b4:	movw	r2, #64972	; 0xfdcc
   1a4b8:	movt	r3, #9
   1a4bc:	movt	r2, #9
   1a4c0:	push	{r4}		; (str r4, [sp, #-4]!)
   1a4c4:	mov	r4, #17
   1a4c8:	ldr	r1, [r3, #8]
   1a4cc:	ldr	r0, [r2]
   1a4d0:	add	ip, r1, #4
   1a4d4:	str	r4, [r2]
   1a4d8:	str	ip, [r3, #8]
   1a4dc:	str	r0, [r1]
   1a4e0:	pop	{r4}		; (ldr r4, [sp], #4)
   1a4e4:	bx	lr
   1a4e8:	movw	r3, #62396	; 0xf3bc
   1a4ec:	movw	r2, #64972	; 0xfdcc
   1a4f0:	movt	r3, #9
   1a4f4:	movt	r2, #9
   1a4f8:	push	{r4}		; (str r4, [sp, #-4]!)
   1a4fc:	mov	r4, #11
   1a500:	ldr	r1, [r3, #8]
   1a504:	ldr	r0, [r2]
   1a508:	add	ip, r1, #4
   1a50c:	str	r4, [r2]
   1a510:	str	ip, [r3, #8]
   1a514:	str	r0, [r1]
   1a518:	pop	{r4}		; (ldr r4, [sp], #4)
   1a51c:	bx	lr
   1a520:	movw	r3, #62396	; 0xf3bc
   1a524:	movw	r2, #64972	; 0xfdcc
   1a528:	movt	r3, #9
   1a52c:	movt	r2, #9
   1a530:	push	{r4}		; (str r4, [sp, #-4]!)
   1a534:	mov	r4, #7
   1a538:	ldr	r1, [r3, #8]
   1a53c:	ldr	r0, [r2]
   1a540:	add	ip, r1, #4
   1a544:	str	r4, [r2]
   1a548:	str	ip, [r3, #8]
   1a54c:	str	r0, [r1]
   1a550:	pop	{r4}		; (ldr r4, [sp], #4)
   1a554:	bx	lr
   1a558:	movw	r3, #62396	; 0xf3bc
   1a55c:	movw	r2, #64972	; 0xfdcc
   1a560:	movt	r3, #9
   1a564:	movt	r2, #9
   1a568:	push	{r4}		; (str r4, [sp, #-4]!)
   1a56c:	mov	r4, #9
   1a570:	ldr	r1, [r3, #8]
   1a574:	ldr	r0, [r2]
   1a578:	add	ip, r1, #4
   1a57c:	str	r4, [r2]
   1a580:	str	ip, [r3, #8]
   1a584:	str	r0, [r1]
   1a588:	pop	{r4}		; (ldr r4, [sp], #4)
   1a58c:	bx	lr
   1a590:	movw	r3, #62396	; 0xf3bc
   1a594:	movt	r3, #9
   1a598:	movw	r2, #64972	; 0xfdcc
   1a59c:	movt	r2, #9
   1a5a0:	ldr	r1, [r3, #8]
   1a5a4:	sub	r0, r1, #4
   1a5a8:	str	r0, [r3, #8]
   1a5ac:	ldr	r3, [r1, #-4]
   1a5b0:	str	r3, [r2]
   1a5b4:	bx	lr
   1a5b8:	movw	r3, #64972	; 0xfdcc
   1a5bc:	movt	r3, #9
   1a5c0:	ldr	r2, [r3, #36]	; 0x24
   1a5c4:	cmp	r2, #0
   1a5c8:	subne	r2, r2, #1
   1a5cc:	add	r3, r3, r2, lsl #2
   1a5d0:	ldr	r0, [r3, #40]	; 0x28
   1a5d4:	bx	lr
   1a5d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a5dc:	movw	r9, #63248	; 0xf710
   1a5e0:	movt	r9, #9
   1a5e4:	sub	sp, sp, #8
   1a5e8:	mov	r6, r1
   1a5ec:	mov	sl, r0
   1a5f0:	ldr	r3, [r9]
   1a5f4:	mov	r0, r1
   1a5f8:	mov	r2, #16
   1a5fc:	mov	r1, sp
   1a600:	str	r3, [sp, #4]
   1a604:	bl	13478 <bfd_scan_vma@plt>
   1a608:	ldr	r3, [sp]
   1a60c:	ldrb	r3, [r3]
   1a610:	cmp	r3, #0
   1a614:	mov	r4, r0
   1a618:	mov	r5, r1
   1a61c:	bne	1a6c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x683c>
   1a620:	movw	r8, #1608	; 0x648
   1a624:	movt	r8, #10
   1a628:	add	r7, sl, #1
   1a62c:	ldr	r6, [r8]
   1a630:	cmp	r6, #0
   1a634:	bne	1a648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x67bc>
   1a638:	b	1a66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x67e0>
   1a63c:	ldr	r6, [r6]
   1a640:	cmp	r6, #0
   1a644:	beq	1a66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x67e0>
   1a648:	ldr	r0, [r6, #4]
   1a64c:	mov	r1, r7
   1a650:	bl	13490 <strcmp@plt>
   1a654:	cmp	r0, #0
   1a658:	bne	1a63c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x67b0>
   1a65c:	strd	r4, [r6, #8]
   1a660:	mov	r0, r4
   1a664:	mov	r1, r5
   1a668:	b	1a69c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6810>
   1a66c:	mov	r0, #24
   1a670:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   1a674:	ldr	r2, [r8]
   1a678:	mov	r1, r5
   1a67c:	mov	r3, #0
   1a680:	mov	r6, r0
   1a684:	mov	r0, r4
   1a688:	str	r2, [r6]
   1a68c:	str	r7, [r6, #4]
   1a690:	strd	r4, [r6, #8]
   1a694:	str	r3, [r6, #16]
   1a698:	str	r6, [r8]
   1a69c:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   1a6a0:	mov	r2, r6
   1a6a4:	mov	r1, r0
   1a6a8:	mov	r0, sl
   1a6ac:	bl	26118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1228c>
   1a6b0:	ldr	r2, [sp, #4]
   1a6b4:	ldr	r3, [r9]
   1a6b8:	cmp	r2, r3
   1a6bc:	bne	1a6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x685c>
   1a6c0:	add	sp, sp, #8
   1a6c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a6c8:	mov	r2, #5
   1a6cc:	movw	r1, #62356	; 0xf394
   1a6d0:	mov	r0, #0
   1a6d4:	movt	r1, #4
   1a6d8:	bl	13688 <dcgettext@plt>
   1a6dc:	mov	r1, r6
   1a6e0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1a6e4:	b	1a620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6794>
   1a6e8:	bl	13694 <__stack_chk_fail@plt>
   1a6ec:	movw	ip, #63248	; 0xf710
   1a6f0:	movt	ip, #9
   1a6f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6f8:	sub	sp, sp, #212	; 0xd4
   1a6fc:	ldr	r3, [ip]
   1a700:	mov	fp, r0
   1a704:	movw	r0, #509	; 0x1fd
   1a708:	str	ip, [sp, #32]
   1a70c:	mov	sl, r1
   1a710:	mov	r7, #0
   1a714:	str	r3, [sp, #204]	; 0xcc
   1a718:	bl	137b4 <xmalloc@plt>
   1a71c:	mov	r4, r7
   1a720:	mov	r5, #1
   1a724:	mov	r8, #58	; 0x3a
   1a728:	str	r0, [sp, #80]	; 0x50
   1a72c:	mov	r0, #2720	; 0xaa0
   1a730:	bl	137b4 <xmalloc@plt>
   1a734:	str	r0, [sp, #84]	; 0x54
   1a738:	mov	r0, #2720	; 0xaa0
   1a73c:	bl	1394c <malloc@plt>
   1a740:	ldr	ip, [pc, #4080]	; 1b738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x78ac>
   1a744:	ldr	r3, [sp, #80]	; 0x50
   1a748:	mov	r2, #45	; 0x2d
   1a74c:	add	r6, ip, #5376	; 0x1500
   1a750:	add	r6, r6, #32
   1a754:	str	r0, [sp, #88]	; 0x58
   1a758:	strb	r2, [r3]
   1a75c:	b	1a7a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6918>
   1a760:	ldr	r3, [ip, #-16]
   1a764:	cmp	r3, #0
   1a768:	beq	1a798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x690c>
   1a76c:	ldr	r3, [ip, #12]
   1a770:	cmp	r3, #3
   1a774:	ldmdb	ip, {r0, r1, r2, r3}
   1a778:	ldreq	lr, [sp, #88]	; 0x58
   1a77c:	ldrne	lr, [sp, #84]	; 0x54
   1a780:	addeq	lr, lr, r7, lsl #4
   1a784:	addeq	r7, r7, #1
   1a788:	addne	lr, lr, r4, lsl #4
   1a78c:	addne	r4, r4, #1
   1a790:	stmeq	lr, {r0, r1, r2, r3}
   1a794:	stmne	lr, {r0, r1, r2, r3}
   1a798:	add	ip, ip, #32
   1a79c:	cmp	ip, r6
   1a7a0:	beq	1a7f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6968>
   1a7a4:	ldrb	r3, [ip]
   1a7a8:	cmp	r3, #0
   1a7ac:	beq	1a760 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x68d4>
   1a7b0:	ldr	r1, [sp, #80]	; 0x50
   1a7b4:	add	r2, r5, #1
   1a7b8:	strb	r3, [r1, r5]
   1a7bc:	ldr	r3, [ip, #-12]
   1a7c0:	sub	r1, r3, #1
   1a7c4:	cmp	r1, #1
   1a7c8:	movhi	r5, r2
   1a7cc:	bhi	1a760 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x68d4>
   1a7d0:	ldr	r1, [sp, #80]	; 0x50
   1a7d4:	cmp	r3, #2
   1a7d8:	add	r3, r5, #2
   1a7dc:	addeq	r5, r5, #3
   1a7e0:	strb	r8, [r1, r2]
   1a7e4:	movne	r5, r3
   1a7e8:	ldreq	r2, [sp, #80]	; 0x50
   1a7ec:	strbeq	r8, [r2, r3]
   1a7f0:	b	1a760 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x68d4>
   1a7f4:	ldr	r3, [sp, #80]	; 0x50
   1a7f8:	mov	ip, #0
   1a7fc:	mov	r0, r5
   1a800:	add	lr, sp, #88	; 0x58
   1a804:	mov	r2, r4
   1a808:	add	r1, sp, #80	; 0x50
   1a80c:	strb	ip, [r3, r5]
   1a810:	add	r3, sp, #84	; 0x54
   1a814:	ldr	r6, [sp, #84]	; 0x54
   1a818:	ldr	r5, [sp, #88]	; 0x58
   1a81c:	str	ip, [r6, r4, lsl #4]
   1a820:	str	ip, [r5, r7, lsl #4]
   1a824:	stm	sp, {r7, lr}
   1a828:	bl	2f070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b1e4>
   1a82c:	cmp	fp, #1
   1a830:	bls	1a934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6aa8>
   1a834:	ldr	r2, [sl, #4]
   1a838:	movw	r4, #62408	; 0xf3c8
   1a83c:	movw	lr, #63264	; 0xf720
   1a840:	movt	r4, #4
   1a844:	movt	lr, #9
   1a848:	add	r5, sl, #4
   1a84c:	ldrb	r0, [r2]
   1a850:	mov	r3, sl
   1a854:	mov	r1, #2
   1a858:	b	1a86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x69e0>
   1a85c:	ldr	r2, [r3, #8]
   1a860:	ldrb	r0, [r2]
   1a864:	add	r1, r1, #1
   1a868:	add	r3, r3, #4
   1a86c:	cmp	r0, #45	; 0x2d
   1a870:	bne	1a8b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a24>
   1a874:	ldrb	r0, [r2, #1]
   1a878:	cmp	r0, #71	; 0x47
   1a87c:	bne	1a8b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a24>
   1a880:	ldrb	r2, [r2, #2]
   1a884:	cmp	r2, #0
   1a888:	bne	1a8b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a24>
   1a88c:	cmp	fp, r1
   1a890:	bls	1a8ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a20>
   1a894:	ldr	r2, [r3, #8]
   1a898:	ldrb	r0, [r2]
   1a89c:	lsl	ip, r0, #1
   1a8a0:	ldrh	ip, [lr, ip]
   1a8a4:	tst	ip, #4
   1a8a8:	bne	1a864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x69d8>
   1a8ac:	str	r4, [r3, #4]
   1a8b0:	cmp	fp, r1
   1a8b4:	bhi	1a85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x69d0>
   1a8b8:	mov	r4, #1
   1a8bc:	b	1a8cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a40>
   1a8c0:	add	r4, r4, #1
   1a8c4:	cmp	r4, fp
   1a8c8:	beq	1a934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6aa8>
   1a8cc:	ldr	r0, [r5], #4
   1a8d0:	ldrb	r3, [r0]
   1a8d4:	cmp	r3, #45	; 0x2d
   1a8d8:	bne	1a8c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a34>
   1a8dc:	ldrb	r3, [r0, #1]
   1a8e0:	cmp	r3, #108	; 0x6c
   1a8e4:	bne	1a8c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a34>
   1a8e8:	ldrb	r3, [r0, #2]
   1a8ec:	cmp	r3, #0
   1a8f0:	beq	1a8c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a34>
   1a8f4:	bl	13a24 <strlen@plt>
   1a8f8:	add	r4, r4, #1
   1a8fc:	add	r0, r0, #20
   1a900:	bl	137b4 <xmalloc@plt>
   1a904:	ldr	ip, [r5, #-4]
   1a908:	movw	r3, #62420	; 0xf3d4
   1a90c:	mov	r1, #1
   1a910:	add	ip, ip, #2
   1a914:	movt	r3, #4
   1a918:	mvn	r2, #0
   1a91c:	str	ip, [sp]
   1a920:	mov	r6, r0
   1a924:	bl	13acc <__sprintf_chk@plt>
   1a928:	cmp	r4, fp
   1a92c:	str	r6, [r5, #-4]
   1a930:	bne	1a8cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6a40>
   1a934:	movw	r4, #63256	; 0xf718
   1a938:	movw	r9, #64856	; 0xfd58
   1a93c:	movt	r4, #9
   1a940:	movt	r9, #9
   1a944:	add	r8, sp, #92	; 0x5c
   1a948:	mvn	r7, #0
   1a94c:	mov	ip, #0
   1a950:	str	ip, [sp, #36]	; 0x24
   1a954:	str	ip, [sp, #40]	; 0x28
   1a958:	mov	ip, #3
   1a95c:	str	ip, [sp, #44]	; 0x2c
   1a960:	movw	ip, #64864	; 0xfd60
   1a964:	movt	ip, #9
   1a968:	str	ip, [sp, #28]
   1a96c:	ldr	r3, [r4]
   1a970:	cmp	r3, r7
   1a974:	beq	1a998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6b0c>
   1a978:	mov	r0, fp
   1a97c:	mov	r1, sl
   1a980:	bl	2f0d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b24c>
   1a984:	cmp	r0, #0
   1a988:	bne	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1a98c:	movw	lr, #63256	; 0xf718
   1a990:	movt	lr, #9
   1a994:	ldr	r7, [lr]
   1a998:	str	r8, [sp]
   1a99c:	mov	ip, #0
   1a9a0:	ldr	r2, [sp, #80]	; 0x50
   1a9a4:	mov	r0, fp
   1a9a8:	ldr	r3, [sp, #84]	; 0x54
   1a9ac:	mov	r1, sl
   1a9b0:	str	ip, [r9]
   1a9b4:	bl	13b68 <getopt_long_only@plt>
   1a9b8:	cmp	r0, #63	; 0x3f
   1a9bc:	mov	r5, r0
   1a9c0:	beq	1ae10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6f84>
   1a9c4:	mov	r0, r5
   1a9c8:	bl	2f0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b220>
   1a9cc:	cmp	r0, #0
   1a9d0:	bne	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1a9d4:	cmn	r5, #1
   1a9d8:	beq	1aee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7054>
   1a9dc:	sub	r5, r5, #1
   1a9e0:	movw	r3, #263	; 0x107
   1a9e4:	cmp	r5, r3
   1a9e8:	ldrls	pc, [pc, r5, lsl #2]
   1a9ec:	b	1aeb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7024>
   1a9f0:	andeq	sl, r1, r8, asr #29
   1a9f4:			; <UNDEFINED> instruction: 0x0001aeb0
   1a9f8:			; <UNDEFINED> instruction: 0x0001aeb0
   1a9fc:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa00:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa04:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa08:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa0c:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa10:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa14:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa18:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa1c:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa20:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa24:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa28:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa2c:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa30:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa34:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa38:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa3c:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa40:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa44:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa48:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa4c:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa50:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa54:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa58:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa5c:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa60:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa64:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa68:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa6c:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa70:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa74:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa78:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa7c:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa80:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa84:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa88:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa8c:	andeq	ip, r1, ip, lsl r8
   1aa90:	andeq	ip, r1, r8, lsl #15
   1aa94:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa98:			; <UNDEFINED> instruction: 0x0001aeb0
   1aa9c:			; <UNDEFINED> instruction: 0x0001aeb0
   1aaa0:			; <UNDEFINED> instruction: 0x0001aeb0
   1aaa4:			; <UNDEFINED> instruction: 0x0001aeb0
   1aaa8:			; <UNDEFINED> instruction: 0x0001aeb0
   1aaac:			; <UNDEFINED> instruction: 0x0001aeb0
   1aab0:			; <UNDEFINED> instruction: 0x0001aeb0
   1aab4:			; <UNDEFINED> instruction: 0x0001aeb0
   1aab8:			; <UNDEFINED> instruction: 0x0001aeb0
   1aabc:			; <UNDEFINED> instruction: 0x0001aeb0
   1aac0:			; <UNDEFINED> instruction: 0x0001aeb0
   1aac4:			; <UNDEFINED> instruction: 0x0001aeb0
   1aac8:			; <UNDEFINED> instruction: 0x0001aeb0
   1aacc:			; <UNDEFINED> instruction: 0x0001aeb0
   1aad0:			; <UNDEFINED> instruction: 0x0001aeb0
   1aad4:			; <UNDEFINED> instruction: 0x0001aeb0
   1aad8:			; <UNDEFINED> instruction: 0x0001aeb0
   1aadc:			; <UNDEFINED> instruction: 0x0001aeb0
   1aae0:			; <UNDEFINED> instruction: 0x0001aeb0
   1aae4:			; <UNDEFINED> instruction: 0x0001aeb0
   1aae8:	andeq	sl, r1, r8, lsr lr
   1aaec:			; <UNDEFINED> instruction: 0x0001aeb0
   1aaf0:	andeq	ip, r1, r0, lsr r5
   1aaf4:			; <UNDEFINED> instruction: 0x0001aeb0
   1aaf8:			; <UNDEFINED> instruction: 0x0001aeb0
   1aafc:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab00:	andeq	ip, r1, ip, asr r8
   1ab04:	andeq	ip, r1, r4, asr r3
   1ab08:	andeq	ip, r1, ip, ror #6
   1ab0c:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab10:	andeq	ip, r1, ip, asr r4
   1ab14:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab18:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab1c:	andeq	ip, r1, r4, ror r8
   1ab20:	andeq	ip, r1, r8, lsr #15
   1ab24:	andeq	ip, r1, r8, lsl #17
   1ab28:	andeq	ip, r1, r0, lsl #14
   1ab2c:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab30:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab34:	andeq	ip, r1, r4, lsr r7
   1ab38:	andeq	ip, r1, r4, lsl r1
   1ab3c:	andeq	ip, r1, r0, lsr r1
   1ab40:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab44:	andeq	ip, r1, r4, ror r1
   1ab48:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab4c:	muleq	r1, r0, r1
   1ab50:	andeq	ip, r1, ip, lsr #3
   1ab54:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab58:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab5c:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab60:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab64:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab68:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab6c:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab70:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1ab74:	andeq	ip, r1, r4, lsr r2
   1ab78:	andeq	ip, r1, ip, ror #4
   1ab7c:	andeq	ip, r1, r4, asr #4
   1ab80:	andeq	ip, r1, r8, asr r2
   1ab84:	muleq	r1, r0, r2
   1ab88:	andeq	sl, r1, ip, ror #18
   1ab8c:	andeq	ip, r1, r0, asr #7
   1ab90:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1ab94:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab98:			; <UNDEFINED> instruction: 0x0001aeb0
   1ab9c:	andeq	ip, r1, r8, lsr #6
   1aba0:	andeq	sl, r1, ip, ror #18
   1aba4:			; <UNDEFINED> instruction: 0x0001bdb4
   1aba8:	ldrdeq	fp, [r1], -ip
   1abac:			; <UNDEFINED> instruction: 0x0001aeb0
   1abb0:	muleq	r1, r8, sl
   1abb4:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1abb8:			; <UNDEFINED> instruction: 0x0001bab0
   1abbc:	andeq	fp, r1, r8, asr #21
   1abc0:	ldrdeq	fp, [r1], -ip
   1abc4:	strdeq	fp, [r1], -r0
   1abc8:			; <UNDEFINED> instruction: 0x0001aeb0
   1abcc:	andeq	fp, r1, ip, lsl #22
   1abd0:	andeq	fp, r1, r4, lsr #22
   1abd4:			; <UNDEFINED> instruction: 0x0001aeb0
   1abd8:			; <UNDEFINED> instruction: 0x0001aeb0
   1abdc:			; <UNDEFINED> instruction: 0x0001aeb0
   1abe0:			; <UNDEFINED> instruction: 0x0001aeb0
   1abe4:			; <UNDEFINED> instruction: 0x0001aeb0
   1abe8:			; <UNDEFINED> instruction: 0x0001aeb0
   1abec:			; <UNDEFINED> instruction: 0x0001aeb0
   1abf0:			; <UNDEFINED> instruction: 0x0001aeb0
   1abf4:			; <UNDEFINED> instruction: 0x0001aeb0
   1abf8:			; <UNDEFINED> instruction: 0x0001aeb0
   1abfc:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac00:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac04:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac08:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac0c:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac10:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac14:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac18:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac1c:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac20:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac24:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac28:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac2c:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac30:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac34:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac38:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac3c:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac40:			; <UNDEFINED> instruction: 0x0001aeb0
   1ac44:	andeq	fp, r1, r4, lsr fp
   1ac48:	andeq	fp, r1, r0, asr #23
   1ac4c:	ldrdeq	fp, [r1], -r8
   1ac50:	andeq	fp, r1, r0, lsl #24
   1ac54:	andeq	fp, r1, r4, asr ip
   1ac58:	andeq	ip, r1, ip, asr r4
   1ac5c:	andeq	fp, r1, r8, lsr #25
   1ac60:	andeq	sl, r1, ip, ror #18
   1ac64:	strdeq	fp, [r1], -r0
   1ac68:	andeq	fp, r1, r4, lsl #26
   1ac6c:	andeq	fp, r1, r0, asr #28
   1ac70:	andeq	ip, r1, ip, asr r8
   1ac74:	andeq	fp, r1, r4, asr lr
   1ac78:	andeq	fp, r1, ip, ror #28
   1ac7c:	andeq	sl, r1, ip, ror #18
   1ac80:	andeq	ip, r1, r0, lsr #32
   1ac84:	andeq	ip, r1, r8, lsr r0
   1ac88:	andeq	ip, r1, ip, asr #32
   1ac8c:	andeq	ip, r1, r4, rrx
   1ac90:	andeq	ip, r1, r8, ror r0
   1ac94:	andeq	ip, r1, ip, lsl #1
   1ac98:	andeq	ip, r1, r0, lsr #1
   1ac9c:	strheq	ip, [r1], -r8
   1aca0:	ldrdeq	ip, [r1], -r0
   1aca4:	andeq	ip, r1, ip, ror #1
   1aca8:	andeq	ip, r1, r0, lsl #2
   1acac:	ldrdeq	fp, [r1], -r0
   1acb0:	andeq	fp, r1, r0, ror #1
   1acb4:	andeq	fp, r1, r4, lsl r2
   1acb8:	muleq	r1, r4, r2
   1acbc:	andeq	ip, r1, r0, asr #7
   1acc0:	andeq	fp, r1, r8, lsl #6
   1acc4:	andeq	fp, r1, ip, asr r3
   1acc8:	muleq	r1, r0, r3
   1accc:	andeq	fp, r1, r0, asr #9
   1acd0:	andeq	fp, r1, ip, lsr #9
   1acd4:	ldrdeq	fp, [r1], -r4
   1acd8:	andeq	fp, r1, r4, lsr #7
   1acdc:			; <UNDEFINED> instruction: 0x0001b3bc
   1ace0:	ldrdeq	fp, [r1], -r4
   1ace4:	andeq	fp, r1, ip, ror #7
   1ace8:	andeq	fp, r1, r4, lsl #8
   1acec:	andeq	fp, r1, ip, lsl r4
   1acf0:	andeq	fp, r1, r4, lsr r4
   1acf4:	andeq	fp, r1, ip, asr #8
   1acf8:	andeq	fp, r1, ip, ror #9
   1acfc:	andeq	fp, r1, ip, lsl #11
   1ad00:	muleq	r1, ip, r5
   1ad04:	ldrdeq	fp, [r1], -r0
   1ad08:	andeq	fp, r1, r8, ror #11
   1ad0c:	andeq	fp, r1, r4, asr r6
   1ad10:	andeq	fp, r1, ip, lsl #13
   1ad14:	andeq	fp, r1, r4, asr #13
   1ad18:	andeq	fp, r1, r8, ror #13
   1ad1c:	strdeq	fp, [r1], -ip
   1ad20:	andeq	fp, r1, r0, lsl r7
   1ad24:	andeq	fp, r1, r4, lsr #14
   1ad28:	andeq	fp, r1, r4, asr #14
   1ad2c:	andeq	fp, r1, r8, asr r7
   1ad30:	andeq	fp, r1, ip, ror #14
   1ad34:	andeq	fp, r1, r0, lsl #15
   1ad38:	andeq	fp, r1, ip, lsr #15
   1ad3c:	andeq	fp, r1, r4, ror r8
   1ad40:	andeq	fp, r1, r4, asr #16
   1ad44:	andeq	fp, r1, ip, asr r8
   1ad48:	strdeq	fp, [r1], -r0
   1ad4c:	andeq	fp, r1, r8, lsl #16
   1ad50:	andeq	fp, r1, r0, lsr #16
   1ad54:	andeq	fp, r1, r0, lsr r8
   1ad58:	ldrdeq	fp, [r1], -r8
   1ad5c:	andeq	fp, r1, ip, lsr #18
   1ad60:	strdeq	fp, [r1], -ip
   1ad64:	andeq	fp, r1, r4, lsl r9
   1ad68:	andeq	fp, r1, ip, lsl #17
   1ad6c:			; <UNDEFINED> instruction: 0x0001b8b8
   1ad70:	andeq	fp, r1, ip, asr #17
   1ad74:	andeq	fp, r1, r0, ror #17
   1ad78:	andeq	fp, r1, r4, asr #18
   1ad7c:	andeq	fp, r1, ip, asr r9
   1ad80:	andeq	fp, r1, r4, ror r9
   1ad84:	andeq	fp, r1, r8, ror #20
   1ad88:	andeq	fp, r1, r0, lsl #21
   1ad8c:	andeq	fp, r1, r4, lsr #28
   1ad90:	strdeq	fp, [r1], -r0
   1ad94:	andeq	fp, r1, ip, lsl #28
   1ad98:	andeq	fp, r1, r8, lsl sp
   1ad9c:	andeq	fp, r1, r0, lsr sp
   1ada0:	andeq	fp, r1, r8, asr #26
   1ada4:	andeq	fp, r1, r0, ror #26
   1ada8:	andeq	fp, r1, ip, ror sp
   1adac:	andeq	fp, r1, r0, lsr #27
   1adb0:	andeq	ip, r1, r0, asr #15
   1adb4:	ldrdeq	ip, [r1], -r4
   1adb8:	andeq	ip, r1, ip, ror #15
   1adbc:	andeq	ip, r1, r4, lsl #16
   1adc0:	andeq	ip, r1, r8, lsl #9
   1adc4:	muleq	r1, ip, r4
   1adc8:			; <UNDEFINED> instruction: 0x0001c4b0
   1adcc:	strdeq	ip, [r1], -r0
   1add0:	andeq	ip, r1, r4, lsr r6
   1add4:	andeq	ip, r1, r4, lsl #13
   1add8:	ldrdeq	ip, [r1], -r0
   1addc:	andeq	ip, r1, r8, ror #13
   1ade0:	andeq	ip, r1, r0, asr #10
   1ade4:	andeq	ip, r1, r0, ror r5
   1ade8:	andeq	ip, r1, r0, lsl #11
   1adec:			; <UNDEFINED> instruction: 0x0001c5b0
   1adf0:	andeq	ip, r1, r8, asr #11
   1adf4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1adf8:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1adfc:	andeq	ip, r1, r4, lsl r6
   1ae00:	andeq	ip, r1, r0, lsr r8
   1ae04:	andeq	ip, r1, r0, asr #6
   1ae08:	andeq	ip, r1, r8, lsl r3
   1ae0c:	andeq	fp, r1, r0, asr #25
   1ae10:	str	r8, [sp]
   1ae14:	movw	r2, #28992	; 0x7140
   1ae18:	ldr	r3, [sp, #88]	; 0x58
   1ae1c:	movt	r2, #4
   1ae20:	mov	r0, fp
   1ae24:	mov	r1, sl
   1ae28:	str	r7, [r4]
   1ae2c:	bl	139ac <getopt_long@plt>
   1ae30:	mov	r5, r0
   1ae34:	b	1a9c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6b38>
   1ae38:	lsl	r3, r7, #2
   1ae3c:	ldr	r5, [pc, #2296]	; 1b73c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x78b0>
   1ae40:	str	r3, [sp, #56]	; 0x38
   1ae44:	add	r6, sl, r3
   1ae48:	ldr	r2, [pc, #2288]	; 1b740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x78b4>
   1ae4c:	b	1ae5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fd0>
   1ae50:	sub	r5, r5, #32
   1ae54:	cmp	r5, r2
   1ae58:	beq	1d23c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x93b0>
   1ae5c:	ldr	r3, [r5, #-24]	; 0xffffffe8
   1ae60:	cmp	r3, #1
   1ae64:	bne	1ae50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fc4>
   1ae68:	ldr	r1, [r5, #-28]	; 0xffffffe4
   1ae6c:	cmp	r1, #0
   1ae70:	beq	1ae50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fc4>
   1ae74:	ldr	r3, [r5]
   1ae78:	ldr	r0, [r6]
   1ae7c:	str	r2, [sp, #24]
   1ae80:	add	r0, r0, r3
   1ae84:	bl	13490 <strcmp@plt>
   1ae88:	ldr	r2, [sp, #24]
   1ae8c:	cmp	r0, #0
   1ae90:	bne	1ae50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6fc4>
   1ae94:	movw	r1, #62436	; 0xf3e4
   1ae98:	mov	r2, #5
   1ae9c:	movt	r1, #4
   1aea0:	bl	13688 <dcgettext@plt>
   1aea4:	ldr	ip, [sp, #56]	; 0x38
   1aea8:	ldr	r1, [sl, ip]
   1aeac:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1aeb0:	movw	r1, #62464	; 0xf400
   1aeb4:	mov	r2, #5
   1aeb8:	movt	r1, #4
   1aebc:	mov	r0, #0
   1aec0:	bl	13688 <dcgettext@plt>
   1aec4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1aec8:	ldr	ip, [sp, #28]
   1aecc:	mov	r1, #5
   1aed0:	mov	r2, #0
   1aed4:	ldr	r0, [ip]
   1aed8:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   1aedc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1aee0:	movw	r5, #1244	; 0x4dc
   1aee4:	movt	r5, #10
   1aee8:	ldr	r6, [sp, #36]	; 0x24
   1aeec:	ldr	r3, [r5, #60]	; 0x3c
   1aef0:	cmp	r3, #0
   1aef4:	beq	1af04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7078>
   1aef8:	ldrb	r4, [r3]
   1aefc:	cmp	r4, #0
   1af00:	beq	1d184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x92f8>
   1af04:	ldr	ip, [sp, #40]	; 0x28
   1af08:	cmp	ip, #0
   1af0c:	ldrne	r4, [sp, #40]	; 0x28
   1af10:	beq	1af20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7094>
   1af14:	bl	26b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12cb4>
   1af18:	subs	r4, r4, #1
   1af1c:	bne	1af14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7088>
   1af20:	ldr	ip, [sp, #36]	; 0x24
   1af24:	cmp	ip, #0
   1af28:	beq	1af80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x70f4>
   1af2c:	mov	r7, #0
   1af30:	ldr	r8, [sp, #36]	; 0x24
   1af34:	b	1af44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x70b8>
   1af38:	cmp	r4, #0
   1af3c:	beq	1af78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x70ec>
   1af40:	add	r8, r4, #1
   1af44:	mov	r0, r8
   1af48:	mov	r1, #58	; 0x3a
   1af4c:	bl	13a48 <strchr@plt>
   1af50:	subs	r4, r0, #0
   1af54:	strbne	r7, [r4]
   1af58:	ldrb	r3, [r8]
   1af5c:	cmp	r3, #0
   1af60:	beq	1af38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x70ac>
   1af64:	mov	r0, r8
   1af68:	mov	r1, #1
   1af6c:	bl	305e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c75c>
   1af70:	cmp	r4, #0
   1af74:	bne	1af40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x70b4>
   1af78:	mov	r0, r6
   1af7c:	bl	13574 <free@plt>
   1af80:	movw	r4, #1088	; 0x440
   1af84:	movt	r4, #10
   1af88:	ldrb	r3, [r4, #2]
   1af8c:	tst	r3, #24
   1af90:	ldreq	ip, [sp, #44]	; 0x2c
   1af94:	bfieq	r3, ip, #3, #2
   1af98:	strbeq	r3, [r4, #2]
   1af9c:	ldrb	r2, [r4, #2]
   1afa0:	movw	r3, #1088	; 0x440
   1afa4:	movt	r3, #10
   1afa8:	tst	r2, #96	; 0x60
   1afac:	ldreq	ip, [sp, #44]	; 0x2c
   1afb0:	bfieq	r2, ip, #5, #2
   1afb4:	strbeq	r2, [r3, #2]
   1afb8:	ldrb	r3, [r4]
   1afbc:	and	r3, r3, #3
   1afc0:	cmp	r3, #2
   1afc4:	beq	1d168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x92dc>
   1afc8:	ldr	r1, [r5, #48]	; 0x30
   1afcc:	movw	r2, #1244	; 0x4dc
   1afd0:	movt	r2, #10
   1afd4:	cmp	r1, #1
   1afd8:	beq	1d144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x92b8>
   1afdc:	cmp	r1, #2
   1afe0:	bne	1b0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x722c>
   1afe4:	tst	r3, #1
   1afe8:	movne	r1, #1
   1afec:	strne	r1, [r2, #52]	; 0x34
   1aff0:	beq	1b0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x722c>
   1aff4:	ldrb	r2, [r4, #1]
   1aff8:	orr	r2, r2, #4
   1affc:	strb	r2, [r4, #1]
   1b000:	ldrb	r2, [r4, #5]
   1b004:	orr	r2, r2, #4
   1b008:	strb	r2, [r4, #5]
   1b00c:	cmp	r3, #3
   1b010:	beq	1b05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x71d0>
   1b014:	ldr	r3, [r5, #72]	; 0x48
   1b018:	cmp	r3, #0
   1b01c:	beq	1b038 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x71ac>
   1b020:	movw	r1, #1372	; 0x55c
   1b024:	mov	r2, #5
   1b028:	movt	r1, #5
   1b02c:	mov	r0, #0
   1b030:	bl	13688 <dcgettext@plt>
   1b034:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1b038:	ldr	r3, [r5, #76]	; 0x4c
   1b03c:	cmp	r3, #0
   1b040:	beq	1b05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x71d0>
   1b044:	movw	r1, #1416	; 0x588
   1b048:	mov	r2, #5
   1b04c:	movt	r1, #5
   1b050:	mov	r0, #0
   1b054:	bl	13688 <dcgettext@plt>
   1b058:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1b05c:	ldrh	r0, [r4]
   1b060:	movw	r2, #6147	; 0x1803
   1b064:	movw	r1, #6146	; 0x1802
   1b068:	movw	r3, #1088	; 0x440
   1b06c:	and	r2, r0, r2
   1b070:	movt	r3, #10
   1b074:	cmp	r2, r1
   1b078:	bne	1b09c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7210>
   1b07c:	ldrb	r2, [r3, #1]
   1b080:	mov	r1, #1
   1b084:	bfi	r2, r1, #3, #2
   1b088:	strb	r2, [r3, #1]
   1b08c:	uxtb	r2, r2
   1b090:	tst	r2, #96	; 0x60
   1b094:	orreq	r2, r2, #96	; 0x60
   1b098:	strbeq	r2, [r3, #1]
   1b09c:	ldr	ip, [sp, #32]
   1b0a0:	ldr	r2, [sp, #204]	; 0xcc
   1b0a4:	ldr	r3, [ip]
   1b0a8:	cmp	r2, r3
   1b0ac:	bne	1d624 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9798>
   1b0b0:	add	sp, sp, #212	; 0xd4
   1b0b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0b8:	ldr	r2, [r5, #52]	; 0x34
   1b0bc:	cmp	r2, #1
   1b0c0:	beq	1aff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7168>
   1b0c4:	cmp	r2, #2
   1b0c8:	beq	1b000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7174>
   1b0cc:	b	1b00c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7180>
   1b0d0:	ldr	ip, [sp, #28]
   1b0d4:	ldr	r0, [ip]
   1b0d8:	bl	2b6cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17840>
   1b0dc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b0e0:	movw	ip, #64864	; 0xfd60
   1b0e4:	movt	ip, #9
   1b0e8:	str	ip, [sp, #56]	; 0x38
   1b0ec:	movw	r6, #1244	; 0x4dc
   1b0f0:	movt	r6, #10
   1b0f4:	ldr	r5, [r6, #64]	; 0x40
   1b0f8:	cmp	r5, #0
   1b0fc:	beq	1d5bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9730>
   1b100:	mov	r0, r5
   1b104:	movw	r3, #1336	; 0x538
   1b108:	str	r3, [sp, #68]	; 0x44
   1b10c:	bl	13a24 <strlen@plt>
   1b110:	ldr	lr, [sp, #56]	; 0x38
   1b114:	ldr	r3, [sp, #68]	; 0x44
   1b118:	ldr	ip, [lr]
   1b11c:	movt	r3, #10
   1b120:	str	r3, [sp, #68]	; 0x44
   1b124:	str	ip, [sp, #24]
   1b128:	str	r0, [sp, #76]	; 0x4c
   1b12c:	mov	r0, ip
   1b130:	bl	13a24 <strlen@plt>
   1b134:	ldr	lr, [sp, #68]	; 0x44
   1b138:	ldr	ip, [sp, #24]
   1b13c:	str	r7, [sp, #48]	; 0x30
   1b140:	ldrb	r3, [lr, #72]	; 0x48
   1b144:	str	fp, [sp, #60]	; 0x3c
   1b148:	str	r4, [sp, #64]	; 0x40
   1b14c:	mov	r4, r5
   1b150:	mov	fp, r3
   1b154:	mov	r5, ip
   1b158:	str	r0, [sp, #72]	; 0x48
   1b15c:	mov	r7, r0
   1b160:	b	1b16c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x72e0>
   1b164:	adds	r4, r0, #1
   1b168:	beq	1b1ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7320>
   1b16c:	mov	r0, r5
   1b170:	mov	r1, r4
   1b174:	mov	r2, r7
   1b178:	bl	13e08 <strncmp@plt>
   1b17c:	cmp	r0, #0
   1b180:	bne	1b198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x730c>
   1b184:	ldrb	r2, [r4, r7]
   1b188:	cmp	r2, #0
   1b18c:	beq	1d1a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9314>
   1b190:	cmp	r2, fp
   1b194:	beq	1d1a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9314>
   1b198:	mov	r0, r4
   1b19c:	mov	r1, fp
   1b1a0:	bl	13a48 <strchr@plt>
   1b1a4:	cmp	r0, #0
   1b1a8:	bne	1b164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x72d8>
   1b1ac:	ldr	r7, [sp, #48]	; 0x30
   1b1b0:	ldr	fp, [sp, #60]	; 0x3c
   1b1b4:	ldr	r4, [sp, #64]	; 0x40
   1b1b8:	ldr	r3, [sp, #76]	; 0x4c
   1b1bc:	ldr	ip, [sp, #72]	; 0x48
   1b1c0:	add	r0, r3, ip
   1b1c4:	add	r0, r0, #2
   1b1c8:	bl	137b4 <xmalloc@plt>
   1b1cc:	ldr	r3, [sp, #68]	; 0x44
   1b1d0:	ldr	ip, [sp, #56]	; 0x38
   1b1d4:	ldrb	r1, [r3, #72]	; 0x48
   1b1d8:	movw	r3, #580	; 0x244
   1b1dc:	ldr	r2, [ip]
   1b1e0:	movt	r3, #5
   1b1e4:	ldr	ip, [r6, #64]	; 0x40
   1b1e8:	str	r1, [sp, #4]
   1b1ec:	mov	r1, #1
   1b1f0:	str	r2, [sp, #8]
   1b1f4:	mvn	r2, #0
   1b1f8:	str	ip, [sp]
   1b1fc:	mov	r5, r0
   1b200:	bl	13acc <__sprintf_chk@plt>
   1b204:	ldr	r0, [r6, #64]	; 0x40
   1b208:	bl	13574 <free@plt>
   1b20c:	str	r5, [r6, #64]	; 0x40
   1b210:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b214:	movw	r5, #1244	; 0x4dc
   1b218:	movt	r5, #10
   1b21c:	ldr	r0, [r5, #68]	; 0x44
   1b220:	cmp	r0, #0
   1b224:	beq	1d58c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9700>
   1b228:	bl	13a24 <strlen@plt>
   1b22c:	ldr	ip, [sp, #28]
   1b230:	mov	r6, r0
   1b234:	ldr	r0, [ip]
   1b238:	bl	13a24 <strlen@plt>
   1b23c:	add	r0, r6, r0
   1b240:	add	r0, r0, #2
   1b244:	bl	137b4 <xmalloc@plt>
   1b248:	ldr	lr, [sp, #28]
   1b24c:	movw	r2, #1336	; 0x538
   1b250:	movt	r2, #10
   1b254:	ldr	r1, [r5, #68]	; 0x44
   1b258:	movw	r3, #580	; 0x244
   1b25c:	ldrb	r2, [r2, #72]	; 0x48
   1b260:	movt	r3, #5
   1b264:	ldr	ip, [lr]
   1b268:	str	r1, [sp]
   1b26c:	mov	r1, #1
   1b270:	str	r2, [sp, #4]
   1b274:	mvn	r2, #0
   1b278:	str	ip, [sp, #8]
   1b27c:	mov	r6, r0
   1b280:	bl	13acc <__sprintf_chk@plt>
   1b284:	ldr	r0, [r5, #68]	; 0x44
   1b288:	bl	13574 <free@plt>
   1b28c:	str	r6, [r5, #68]	; 0x44
   1b290:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b294:	movw	r3, #1336	; 0x538
   1b298:	movt	r3, #10
   1b29c:	ldr	r0, [r3, #8]
   1b2a0:	cmp	r0, #0
   1b2a4:	beq	1d3ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9560>
   1b2a8:	movw	r5, #1088	; 0x440
   1b2ac:	movt	r5, #10
   1b2b0:	ldrb	r3, [r5]
   1b2b4:	and	r3, r3, #3
   1b2b8:	cmp	r3, #2
   1b2bc:	beq	1d5d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9744>
   1b2c0:	ldrb	r2, [r5, #2]
   1b2c4:	movw	r3, #1088	; 0x440
   1b2c8:	ldrb	r1, [r5]
   1b2cc:	movt	r3, #10
   1b2d0:	tst	r2, #24
   1b2d4:	orr	r1, r1, #3
   1b2d8:	strb	r1, [r5]
   1b2dc:	moveq	r1, #1
   1b2e0:	bfieq	r2, r1, #3, #2
   1b2e4:	strbeq	r2, [r3, #2]
   1b2e8:	movw	r3, #1088	; 0x440
   1b2ec:	ldrb	r2, [r5, #2]
   1b2f0:	movt	r3, #10
   1b2f4:	tst	r2, #96	; 0x60
   1b2f8:	moveq	r1, #1
   1b2fc:	bfieq	r2, r1, #5, #2
   1b300:	strbeq	r2, [r3, #2]
   1b304:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b308:	ldr	ip, [sp, #28]
   1b30c:	ldr	r5, [ip]
   1b310:	cmp	r5, #0
   1b314:	beq	1d1bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9330>
   1b318:	movw	r1, #800	; 0x320
   1b31c:	mov	r0, r5
   1b320:	movt	r1, #5
   1b324:	bl	13490 <strcmp@plt>
   1b328:	cmp	r0, #0
   1b32c:	beq	1d1bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9330>
   1b330:	mov	r0, r5
   1b334:	movw	r1, #812	; 0x32c
   1b338:	movt	r1, #5
   1b33c:	bl	13490 <strcmp@plt>
   1b340:	cmp	r0, #0
   1b344:	bne	1d568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96dc>
   1b348:	movw	r3, #1336	; 0x538
   1b34c:	movt	r3, #10
   1b350:	mov	r2, #1
   1b354:	str	r2, [r3, #44]	; 0x2c
   1b358:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b35c:	ldr	ip, [sp, #28]
   1b360:	movw	r1, #2708	; 0xa94
   1b364:	movt	r1, #5
   1b368:	ldr	r5, [ip]
   1b36c:	mov	r0, r5
   1b370:	bl	13490 <strcmp@plt>
   1b374:	cmp	r0, #0
   1b378:	bne	1d210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9384>
   1b37c:	movw	r3, #1468	; 0x5bc
   1b380:	movt	r3, #10
   1b384:	mov	r2, #1
   1b388:	str	r2, [r3]
   1b38c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b390:	movw	r3, #1336	; 0x538
   1b394:	movt	r3, #10
   1b398:	mov	r2, #1
   1b39c:	str	r2, [r3, #52]	; 0x34
   1b3a0:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b3a4:	ldr	ip, [sp, #28]
   1b3a8:	movw	r0, #1028	; 0x404
   1b3ac:	movt	r0, #5
   1b3b0:	ldr	r1, [ip]
   1b3b4:	bl	1a5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x674c>
   1b3b8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b3bc:	ldr	ip, [sp, #28]
   1b3c0:	movw	r0, #1036	; 0x40c
   1b3c4:	movt	r0, #5
   1b3c8:	ldr	r1, [ip]
   1b3cc:	bl	1a5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x674c>
   1b3d0:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b3d4:	ldr	ip, [sp, #28]
   1b3d8:	movw	r0, #1044	; 0x414
   1b3dc:	movt	r0, #5
   1b3e0:	ldr	r1, [ip]
   1b3e4:	bl	1a5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x674c>
   1b3e8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b3ec:	ldr	ip, [sp, #28]
   1b3f0:	movw	r0, #1052	; 0x41c
   1b3f4:	movt	r0, #5
   1b3f8:	ldr	r1, [ip]
   1b3fc:	bl	1a5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x674c>
   1b400:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b404:	ldr	ip, [sp, #28]
   1b408:	movw	r0, #1068	; 0x42c
   1b40c:	movt	r0, #5
   1b410:	ldr	r1, [ip]
   1b414:	bl	1a5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x674c>
   1b418:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b41c:	ldr	ip, [sp, #28]
   1b420:	movw	r0, #1084	; 0x43c
   1b424:	movt	r0, #5
   1b428:	ldr	r1, [ip]
   1b42c:	bl	1a5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x674c>
   1b430:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b434:	movw	r5, #1088	; 0x440
   1b438:	movt	r5, #10
   1b43c:	ldrb	r3, [r5, #4]
   1b440:	orr	r3, r3, #4
   1b444:	strb	r3, [r5, #4]
   1b448:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b44c:	movw	r5, #1088	; 0x440
   1b450:	movt	r5, #10
   1b454:	ldrb	r3, [r5]
   1b458:	movw	r6, #1088	; 0x440
   1b45c:	movt	r6, #10
   1b460:	tst	r3, #1
   1b464:	bne	1d1d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9344>
   1b468:	movw	r2, #1032	; 0x408
   1b46c:	movt	r2, #10
   1b470:	ldrb	r0, [r5]
   1b474:	movw	r3, #1336	; 0x538
   1b478:	ldrb	ip, [r2]
   1b47c:	movt	r3, #10
   1b480:	mov	r1, #0
   1b484:	bfi	ip, r1, #5, #1
   1b488:	str	r1, [r3]
   1b48c:	strb	ip, [r2]
   1b490:	mov	r2, #2
   1b494:	str	r1, [r3, #48]	; 0x30
   1b498:	bfi	r0, r2, #0, #2
   1b49c:	mov	r2, #1
   1b4a0:	strb	r0, [r5]
   1b4a4:	str	r2, [r3, #12]
   1b4a8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b4ac:	movw	r6, #1244	; 0x4dc
   1b4b0:	movt	r6, #10
   1b4b4:	mov	r3, #2
   1b4b8:	str	r3, [r6, #48]	; 0x30
   1b4bc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b4c0:	movw	r6, #1244	; 0x4dc
   1b4c4:	movt	r6, #10
   1b4c8:	mov	r3, #1
   1b4cc:	str	r3, [r6, #48]	; 0x30
   1b4d0:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b4d4:	movw	r5, #1088	; 0x440
   1b4d8:	movt	r5, #10
   1b4dc:	ldrb	r3, [r5, #4]
   1b4e0:	orr	r3, r3, #128	; 0x80
   1b4e4:	strb	r3, [r5, #4]
   1b4e8:	b	1b454 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x75c8>
   1b4ec:	mov	r0, #1
   1b4f0:	bl	2f570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6e4>
   1b4f4:	ldr	ip, [sp, #28]
   1b4f8:	movw	r3, #1072	; 0x430
   1b4fc:	movt	r3, #10
   1b500:	mov	r1, #1
   1b504:	movw	r2, #1464	; 0x5b8
   1b508:	ldr	r0, [ip]
   1b50c:	movt	r2, #10
   1b510:	str	r1, [r3]
   1b514:	movw	r3, #62436	; 0xf3e4
   1b518:	cmp	r0, #0
   1b51c:	movt	r3, #9
   1b520:	str	r1, [r2]
   1b524:	mvn	r2, #1
   1b528:	str	r2, [r3]
   1b52c:	beq	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b530:	add	r1, sp, #96	; 0x60
   1b534:	mov	r2, #0
   1b538:	bl	13a18 <strtoul@plt>
   1b53c:	ldr	r3, [sp, #96]	; 0x60
   1b540:	ldrb	r3, [r3]
   1b544:	cmp	r3, #0
   1b548:	mov	r5, r0
   1b54c:	beq	1b570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x76e4>
   1b550:	movw	r1, #62704	; 0xf4f0
   1b554:	mov	r0, #0
   1b558:	movt	r1, #4
   1b55c:	mov	r2, #5
   1b560:	bl	13688 <dcgettext@plt>
   1b564:	ldr	ip, [sp, #28]
   1b568:	ldr	r1, [ip]
   1b56c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1b570:	cmp	r5, #1
   1b574:	movw	r3, #1624	; 0x658
   1b578:	movt	r3, #10
   1b57c:	movle	r5, #0
   1b580:	movgt	r5, #1
   1b584:	str	r5, [r3]
   1b588:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b58c:	mov	r0, #2
   1b590:	bl	2f570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6e4>
   1b594:	mov	r0, #0
   1b598:	bl	13c40 <xexit@plt>
   1b59c:	ldr	ip, [sp, #28]
   1b5a0:	movw	r5, #104	; 0x68
   1b5a4:	movt	r5, #10
   1b5a8:	ldr	r0, [ip]
   1b5ac:	ldr	r6, [r5]
   1b5b0:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   1b5b4:	movw	r3, #996	; 0x3e4
   1b5b8:	movt	r3, #10
   1b5bc:	mov	r2, #3
   1b5c0:	str	r6, [r5]
   1b5c4:	str	r2, [r3]
   1b5c8:	bl	15468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc>
   1b5cc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b5d0:	ldr	ip, [sp, #28]
   1b5d4:	movw	r6, #1244	; 0x4dc
   1b5d8:	movt	r6, #10
   1b5dc:	ldr	r3, [ip]
   1b5e0:	str	r3, [r6, #80]	; 0x50
   1b5e4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b5e8:	movw	r5, #104	; 0x68
   1b5ec:	movt	r5, #10
   1b5f0:	ldr	ip, [sp, #28]
   1b5f4:	movw	r6, #1244	; 0x4dc
   1b5f8:	ldr	r2, [r5]
   1b5fc:	movt	r6, #10
   1b600:	ldr	r0, [ip]
   1b604:	str	r2, [sp, #24]
   1b608:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   1b60c:	ldr	r2, [sp, #24]
   1b610:	movw	r3, #996	; 0x3e4
   1b614:	movt	r3, #10
   1b618:	str	r2, [r5]
   1b61c:	mov	r2, #4
   1b620:	str	r2, [r3]
   1b624:	bl	15468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc>
   1b628:	ldr	r3, [r6, #52]	; 0x34
   1b62c:	ldr	r2, [r6, #48]	; 0x30
   1b630:	cmp	r3, #1
   1b634:	movne	r3, #2
   1b638:	strne	r3, [r6, #52]	; 0x34
   1b63c:	cmp	r2, #1
   1b640:	movw	r3, #1244	; 0x4dc
   1b644:	movt	r3, #10
   1b648:	moveq	r2, #0
   1b64c:	streq	r2, [r3, #48]	; 0x30
   1b650:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b654:	movw	r6, #1244	; 0x4dc
   1b658:	movt	r6, #10
   1b65c:	bl	29438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x155ac>
   1b660:	ldr	r3, [r6, #52]	; 0x34
   1b664:	ldr	r2, [r6, #48]	; 0x30
   1b668:	cmp	r3, #1
   1b66c:	movne	r3, #2
   1b670:	strne	r3, [r6, #52]	; 0x34
   1b674:	cmp	r2, #1
   1b678:	movw	r3, #1244	; 0x4dc
   1b67c:	movt	r3, #10
   1b680:	moveq	r2, #0
   1b684:	streq	r2, [r3, #48]	; 0x30
   1b688:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b68c:	movw	r6, #1244	; 0x4dc
   1b690:	movt	r6, #10
   1b694:	bl	293f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1556c>
   1b698:	ldr	r3, [r6, #52]	; 0x34
   1b69c:	ldr	r2, [r6, #48]	; 0x30
   1b6a0:	cmp	r3, #1
   1b6a4:	movne	r3, #2
   1b6a8:	strne	r3, [r6, #52]	; 0x34
   1b6ac:	cmp	r2, #1
   1b6b0:	movw	r3, #1244	; 0x4dc
   1b6b4:	movt	r3, #10
   1b6b8:	moveq	r2, #0
   1b6bc:	streq	r2, [r3, #48]	; 0x30
   1b6c0:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b6c4:	movw	r3, #1244	; 0x4dc
   1b6c8:	movt	r3, #10
   1b6cc:	mov	r1, #1
   1b6d0:	ldr	r2, [r3, #48]	; 0x30
   1b6d4:	str	r1, [r3, #52]	; 0x34
   1b6d8:	cmp	r2, r1
   1b6dc:	moveq	r2, #0
   1b6e0:	streq	r2, [r3, #48]	; 0x30
   1b6e4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b6e8:	movw	r3, #1336	; 0x538
   1b6ec:	movt	r3, #10
   1b6f0:	mov	r2, #1
   1b6f4:	str	r2, [r3, #20]
   1b6f8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b6fc:	movw	r3, #1336	; 0x538
   1b700:	movt	r3, #10
   1b704:	mov	r2, #1
   1b708:	str	r2, [r3, #16]
   1b70c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b710:	movw	r3, #1336	; 0x538
   1b714:	movt	r3, #10
   1b718:	mov	r2, #1
   1b71c:	str	r2, [r3, #40]	; 0x28
   1b720:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b724:	movw	r3, #1336	; 0x538
   1b728:	movt	r3, #10
   1b72c:	mov	r2, #0
   1b730:	str	r2, [r3, #40]	; 0x28
   1b734:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b738:	andeq	sp, r4, r4, lsl #29
   1b73c:	muleq	r4, r0, r3
   1b740:	andeq	sp, r4, r0, ror lr
   1b744:	movw	r3, #1336	; 0x538
   1b748:	movt	r3, #10
   1b74c:	mov	r2, #1
   1b750:	str	r2, [r3, #32]
   1b754:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b758:	movw	r3, #1336	; 0x538
   1b75c:	movt	r3, #10
   1b760:	mov	r2, #1
   1b764:	str	r2, [r3, #24]
   1b768:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b76c:	movw	r3, #1336	; 0x538
   1b770:	movt	r3, #10
   1b774:	mov	r2, #1
   1b778:	str	r2, [r3, #36]	; 0x24
   1b77c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b780:	ldr	ip, [sp, #28]
   1b784:	ldr	r0, [ip]
   1b788:	cmp	r0, #0
   1b78c:	beq	1d404 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9578>
   1b790:	mov	r1, #0
   1b794:	mov	r2, r1
   1b798:	bl	13a18 <strtoul@plt>
   1b79c:	movw	r3, #1336	; 0x538
   1b7a0:	movt	r3, #10
   1b7a4:	str	r0, [r3, #84]	; 0x54
   1b7a8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b7ac:	ldr	ip, [sp, #28]
   1b7b0:	ldr	r0, [ip]
   1b7b4:	cmp	r0, #0
   1b7b8:	beq	1d430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95a4>
   1b7bc:	mov	r1, #0
   1b7c0:	mov	r2, r1
   1b7c4:	bl	13478 <bfd_scan_vma@plt>
   1b7c8:	movw	r3, #1336	; 0x538
   1b7cc:	movt	r3, #10
   1b7d0:	strd	r0, [r3, #88]	; 0x58
   1b7d4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b7d8:	movw	r5, #1088	; 0x440
   1b7dc:	movt	r5, #10
   1b7e0:	ldrb	r3, [r5]
   1b7e4:	orr	r3, r3, #64	; 0x40
   1b7e8:	strb	r3, [r5]
   1b7ec:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b7f0:	movw	r3, #1032	; 0x408
   1b7f4:	movt	r3, #10
   1b7f8:	ldrb	r2, [r3]
   1b7fc:	orr	r2, r2, #128	; 0x80
   1b800:	strb	r2, [r3]
   1b804:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b808:	movw	r3, #1032	; 0x408
   1b80c:	movt	r3, #10
   1b810:	ldrb	r2, [r3]
   1b814:	bfc	r2, #7, #1
   1b818:	strb	r2, [r3]
   1b81c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b820:	ldr	ip, [sp, #28]
   1b824:	ldr	r0, [ip]
   1b828:	bl	2b638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x177ac>
   1b82c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b830:	movw	r6, #1244	; 0x4dc
   1b834:	movt	r6, #10
   1b838:	mov	r3, #1
   1b83c:	str	r3, [r6, #12]
   1b840:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b844:	movw	r3, #1032	; 0x408
   1b848:	movt	r3, #10
   1b84c:	ldrb	r2, [r3]
   1b850:	orr	r2, r2, #64	; 0x40
   1b854:	strb	r2, [r3]
   1b858:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b85c:	movw	r3, #1032	; 0x408
   1b860:	movt	r3, #10
   1b864:	ldrb	r2, [r3]
   1b868:	bfc	r2, #6, #1
   1b86c:	strb	r2, [r3]
   1b870:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b874:	movw	r3, #1032	; 0x408
   1b878:	movt	r3, #10
   1b87c:	ldrb	r2, [r3, #1]
   1b880:	orr	r2, r2, #1
   1b884:	strb	r2, [r3, #1]
   1b888:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b88c:	ldr	ip, [sp, #28]
   1b890:	mov	r1, #0
   1b894:	mov	r2, r1
   1b898:	ldr	r0, [ip]
   1b89c:	bl	13a18 <strtoul@plt>
   1b8a0:	subs	r2, r0, #0
   1b8a4:	beq	1d418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x958c>
   1b8a8:	movw	r3, #1336	; 0x538
   1b8ac:	movt	r3, #10
   1b8b0:	str	r2, [r3, #96]	; 0x60
   1b8b4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b8b8:	movw	r6, #1244	; 0x4dc
   1b8bc:	movt	r6, #10
   1b8c0:	mov	r3, #1
   1b8c4:	strb	r3, [r6, #28]
   1b8c8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b8cc:	movw	r6, #1244	; 0x4dc
   1b8d0:	movt	r6, #10
   1b8d4:	mov	r3, #0
   1b8d8:	strb	r3, [r6, #28]
   1b8dc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b8e0:	movw	r5, #1088	; 0x440
   1b8e4:	movt	r5, #10
   1b8e8:	ldr	ip, [sp, #44]	; 0x2c
   1b8ec:	ldrb	r3, [r5, #2]
   1b8f0:	bfi	r3, ip, #3, #2
   1b8f4:	strb	r3, [r5, #2]
   1b8f8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b8fc:	movw	r5, #1088	; 0x440
   1b900:	movt	r5, #10
   1b904:	ldrb	r3, [r5, #5]
   1b908:	orr	r3, r3, #64	; 0x40
   1b90c:	strb	r3, [r5, #5]
   1b910:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b914:	movw	r5, #1088	; 0x440
   1b918:	movt	r5, #10
   1b91c:	ldrb	r3, [r5, #5]
   1b920:	bfc	r3, #6, #1
   1b924:	strb	r3, [r5, #5]
   1b928:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b92c:	movw	r5, #1088	; 0x440
   1b930:	movt	r5, #10
   1b934:	ldrb	r3, [r5]
   1b938:	bfc	r3, #6, #1
   1b93c:	strb	r3, [r5]
   1b940:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b944:	ldr	ip, [sp, #28]
   1b948:	movw	r5, #1088	; 0x440
   1b94c:	movt	r5, #10
   1b950:	ldr	r3, [ip]
   1b954:	str	r3, [r5, #76]	; 0x4c
   1b958:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b95c:	ldr	ip, [sp, #28]
   1b960:	movw	r5, #1088	; 0x440
   1b964:	movt	r5, #10
   1b968:	ldr	r3, [ip]
   1b96c:	str	r3, [r5, #80]	; 0x50
   1b970:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1b974:	ldr	ip, [sp, #28]
   1b978:	mov	r1, #61	; 0x3d
   1b97c:	movw	r5, #64864	; 0xfd60
   1b980:	movt	r5, #9
   1b984:	ldr	r3, [ip]
   1b988:	mov	r0, r3
   1b98c:	str	r3, [sp, #20]
   1b990:	bl	13a48 <strchr@plt>
   1b994:	ldr	r3, [sp, #20]
   1b998:	subs	r6, r0, #0
   1b99c:	beq	1d5a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9714>
   1b9a0:	ldrb	r2, [r3]
   1b9a4:	add	r5, r6, #1
   1b9a8:	cmp	r2, #0
   1b9ac:	beq	1b9bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7b30>
   1b9b0:	ldrb	r2, [r6, #1]
   1b9b4:	cmp	r2, #0
   1b9b8:	bne	1b9dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7b50>
   1b9bc:	mov	r2, #5
   1b9c0:	movw	r1, #972	; 0x3cc
   1b9c4:	mov	r0, #0
   1b9c8:	movt	r1, #5
   1b9cc:	bl	13688 <dcgettext@plt>
   1b9d0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1b9d4:	ldr	ip, [sp, #28]
   1b9d8:	ldr	r3, [ip]
   1b9dc:	rsb	r6, r3, r5
   1b9e0:	mov	r0, r6
   1b9e4:	bl	137b4 <xmalloc@plt>
   1b9e8:	ldr	ip, [sp, #28]
   1b9ec:	sub	r2, r6, #1
   1b9f0:	ldr	r1, [ip]
   1b9f4:	str	r0, [sp, #56]	; 0x38
   1b9f8:	bl	135c8 <memcpy@plt>
   1b9fc:	ldr	ip, [sp, #56]	; 0x38
   1ba00:	mov	lr, #0
   1ba04:	mov	r0, r5
   1ba08:	add	r1, sp, #96	; 0x60
   1ba0c:	add	r3, ip, r6
   1ba10:	mov	r2, #16
   1ba14:	strb	lr, [r3, #-1]
   1ba18:	bl	13478 <bfd_scan_vma@plt>
   1ba1c:	ldr	r3, [sp, #96]	; 0x60
   1ba20:	ldrb	r3, [r3]
   1ba24:	cmp	r3, #0
   1ba28:	strd	r0, [sp, #48]	; 0x30
   1ba2c:	beq	1ba4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7bc0>
   1ba30:	mov	r0, #0
   1ba34:	movw	r1, #62356	; 0xf394
   1ba38:	mov	r2, #5
   1ba3c:	movt	r1, #4
   1ba40:	bl	13688 <dcgettext@plt>
   1ba44:	mov	r1, r5
   1ba48:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1ba4c:	ldrd	r0, [sp, #48]	; 0x30
   1ba50:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   1ba54:	mov	r2, #0
   1ba58:	mov	r1, r0
   1ba5c:	ldr	r0, [sp, #56]	; 0x38
   1ba60:	bl	26118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1228c>
   1ba64:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1ba68:	ldr	ip, [sp, #28]
   1ba6c:	ldr	r0, [ip]
   1ba70:	cmp	r0, #0
   1ba74:	beq	1d364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x94d8>
   1ba78:	bl	2932c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x154a0>
   1ba7c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1ba80:	movw	r3, #64592	; 0xfc50
   1ba84:	movt	r3, #9
   1ba88:	ldr	r0, [r3]
   1ba8c:	bl	2f45c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5d0>
   1ba90:	mov	r0, #0
   1ba94:	bl	139d0 <exit@plt>
   1ba98:	movw	r5, #1088	; 0x440
   1ba9c:	movt	r5, #10
   1baa0:	ldrb	r3, [r5, #3]
   1baa4:	orr	r3, r3, #2
   1baa8:	strb	r3, [r5, #3]
   1baac:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bab0:	movw	r5, #1088	; 0x440
   1bab4:	movt	r5, #10
   1bab8:	ldrb	r3, [r5, #1]
   1babc:	orr	r3, r3, #24
   1bac0:	strb	r3, [r5, #1]
   1bac4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bac8:	movw	r3, #1476	; 0x5c4
   1bacc:	movt	r3, #10
   1bad0:	mov	r2, #1
   1bad4:	str	r2, [r3]
   1bad8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1badc:	ldr	ip, [sp, #28]
   1bae0:	mov	r1, #1
   1bae4:	ldr	r0, [ip]
   1bae8:	bl	23bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd60>
   1baec:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1baf0:	mov	r0, #0
   1baf4:	bl	2f570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6e4>
   1baf8:	movw	r3, #1072	; 0x430
   1bafc:	movt	r3, #10
   1bb00:	mov	r2, #1
   1bb04:	str	r2, [r3]
   1bb08:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bb0c:	movw	r5, #1088	; 0x440
   1bb10:	movt	r5, #10
   1bb14:	ldrb	r3, [r5, #1]
   1bb18:	orr	r3, r3, #96	; 0x60
   1bb1c:	strb	r3, [r5, #1]
   1bb20:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bb24:	ldr	ip, [sp, #28]
   1bb28:	ldr	r0, [ip]
   1bb2c:	bl	2b35c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174d0>
   1bb30:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bb34:	ldr	ip, [sp, #28]
   1bb38:	movw	r1, #62560	; 0xf460
   1bb3c:	movt	r1, #4
   1bb40:	ldr	r5, [ip]
   1bb44:	mov	r0, r5
   1bb48:	bl	13490 <strcmp@plt>
   1bb4c:	cmp	r0, #0
   1bb50:	beq	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bb54:	movw	r1, #62572	; 0xf46c
   1bb58:	mov	r0, r5
   1bb5c:	movt	r1, #4
   1bb60:	bl	13490 <strcmp@plt>
   1bb64:	cmp	r0, #0
   1bb68:	beq	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bb6c:	movw	r1, #62588	; 0xf47c
   1bb70:	mov	r0, r5
   1bb74:	movt	r1, #4
   1bb78:	bl	13490 <strcmp@plt>
   1bb7c:	cmp	r0, #0
   1bb80:	beq	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bb84:	mov	r0, r5
   1bb88:	movw	r1, #62600	; 0xf488
   1bb8c:	movt	r1, #4
   1bb90:	bl	13490 <strcmp@plt>
   1bb94:	cmp	r0, #0
   1bb98:	beq	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bb9c:	mov	r2, #5
   1bba0:	movw	r1, #62612	; 0xf494
   1bba4:	mov	r0, #0
   1bba8:	movt	r1, #4
   1bbac:	bl	13688 <dcgettext@plt>
   1bbb0:	ldr	ip, [sp, #28]
   1bbb4:	ldr	r1, [ip]
   1bbb8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1bbbc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bbc0:	movw	r3, #1032	; 0x408
   1bbc4:	movt	r3, #10
   1bbc8:	ldrb	r2, [r3]
   1bbcc:	orr	r2, r2, #32
   1bbd0:	strb	r2, [r3]
   1bbd4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bbd8:	movw	r5, #1088	; 0x440
   1bbdc:	movt	r5, #10
   1bbe0:	movw	r6, #1244	; 0x4dc
   1bbe4:	movt	r6, #10
   1bbe8:	ldrb	r3, [r5]
   1bbec:	mov	r2, #1
   1bbf0:	str	r2, [r6, #16]
   1bbf4:	orr	r3, r3, #128	; 0x80
   1bbf8:	strb	r3, [r5]
   1bbfc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bc00:	ldr	ip, [sp, #28]
   1bc04:	movw	r3, #65280	; 0xff00
   1bc08:	movt	r3, #9
   1bc0c:	movw	r5, #65276	; 0xfefc
   1bc10:	movt	r5, #9
   1bc14:	movw	r1, #62652	; 0xf4bc
   1bc18:	ldr	r2, [r3]
   1bc1c:	movt	r1, #4
   1bc20:	ldr	r0, [ip]
   1bc24:	add	r2, r2, #1
   1bc28:	str	r2, [r3]
   1bc2c:	str	r0, [r5]
   1bc30:	bl	1a2c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6434>
   1bc34:	movw	r3, #996	; 0x3e4
   1bc38:	movt	r3, #10
   1bc3c:	mov	r2, #5
   1bc40:	str	r2, [r3]
   1bc44:	bl	15468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc>
   1bc48:	mov	r3, #0
   1bc4c:	str	r3, [r5]
   1bc50:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bc54:	ldr	ip, [sp, #28]
   1bc58:	movw	r3, #1076	; 0x434
   1bc5c:	movt	r3, #10
   1bc60:	mov	r2, #1
   1bc64:	ldr	r0, [ip]
   1bc68:	str	r2, [r3]
   1bc6c:	cmp	r0, #0
   1bc70:	beq	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bc74:	bl	13460 <cplus_demangle_name_to_style@plt>
   1bc78:	subs	r5, r0, #0
   1bc7c:	bne	1bc9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7e10>
   1bc80:	movw	r1, #62664	; 0xf4c8
   1bc84:	mov	r2, #5
   1bc88:	movt	r1, #4
   1bc8c:	bl	13688 <dcgettext@plt>
   1bc90:	ldr	ip, [sp, #28]
   1bc94:	ldr	r1, [ip]
   1bc98:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1bc9c:	mov	r0, r5
   1bca0:	bl	135bc <cplus_demangle_set_style@plt>
   1bca4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bca8:	movw	r5, #1088	; 0x440
   1bcac:	movt	r5, #10
   1bcb0:	ldrb	r3, [r5, #6]
   1bcb4:	orr	r3, r3, #8
   1bcb8:	strb	r3, [r5, #6]
   1bcbc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bcc0:	ldr	ip, [sp, #28]
   1bcc4:	movw	r1, #1244	; 0x4dc
   1bcc8:	movt	r1, #5
   1bccc:	ldr	r5, [ip]
   1bcd0:	mov	r0, r5
   1bcd4:	bl	13748 <strcasecmp@plt>
   1bcd8:	cmp	r0, #0
   1bcdc:	bne	1d320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9494>
   1bce0:	movw	r3, #1336	; 0x538
   1bce4:	movt	r3, #10
   1bce8:	str	r0, [r3, #28]
   1bcec:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bcf0:	movw	r6, #1244	; 0x4dc
   1bcf4:	movt	r6, #10
   1bcf8:	mov	r3, #1
   1bcfc:	str	r3, [r6, #44]	; 0x2c
   1bd00:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bd04:	movw	r6, #1244	; 0x4dc
   1bd08:	movt	r6, #10
   1bd0c:	mov	r3, #2
   1bd10:	str	r3, [r6, #44]	; 0x2c
   1bd14:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bd18:	movw	r5, #1088	; 0x440
   1bd1c:	movt	r5, #10
   1bd20:	ldrb	r3, [r5, #5]
   1bd24:	bfc	r3, #1, #1
   1bd28:	strb	r3, [r5, #5]
   1bd2c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bd30:	movw	r5, #1088	; 0x440
   1bd34:	movt	r5, #10
   1bd38:	ldrb	r3, [r5]
   1bd3c:	orr	r3, r3, #32
   1bd40:	strb	r3, [r5]
   1bd44:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bd48:	movw	r5, #1088	; 0x440
   1bd4c:	movt	r5, #10
   1bd50:	ldrb	r3, [r5, #4]
   1bd54:	orr	r3, r3, #16
   1bd58:	strb	r3, [r5, #4]
   1bd5c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bd60:	movw	r5, #1088	; 0x440
   1bd64:	movt	r5, #10
   1bd68:	mov	r2, #1
   1bd6c:	ldrb	r3, [r5, #1]
   1bd70:	bfi	r3, r2, #5, #2
   1bd74:	strb	r3, [r5, #1]
   1bd78:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bd7c:	ldr	ip, [sp, #28]
   1bd80:	mov	r1, #0
   1bd84:	mov	r2, r1
   1bd88:	movw	r5, #1088	; 0x440
   1bd8c:	movt	r5, #10
   1bd90:	ldr	r0, [ip]
   1bd94:	bl	13a18 <strtoul@plt>
   1bd98:	str	r0, [r5, #108]	; 0x6c
   1bd9c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bda0:	movw	r6, #1244	; 0x4dc
   1bda4:	movt	r6, #10
   1bda8:	mov	r3, #1
   1bdac:	str	r3, [r6, #4]
   1bdb0:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bdb4:	movw	r3, #1032	; 0x408
   1bdb8:	movt	r3, #10
   1bdbc:	movw	r2, #1336	; 0x538
   1bdc0:	movt	r2, #10
   1bdc4:	ldrb	r1, [r3]
   1bdc8:	mov	r0, #0
   1bdcc:	str	r0, [r2]
   1bdd0:	bfi	r1, r0, #5, #1
   1bdd4:	strb	r1, [r3]
   1bdd8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bddc:	ldr	ip, [sp, #28]
   1bde0:	mov	r1, #0
   1bde4:	ldr	r0, [ip]
   1bde8:	bl	253e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1155c>
   1bdec:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1bdf0:	movw	r5, #1088	; 0x440
   1bdf4:	movt	r5, #10
   1bdf8:	ldr	ip, [sp, #44]	; 0x2c
   1bdfc:	ldrb	r3, [r5, #2]
   1be00:	bfi	r3, ip, #5, #2
   1be04:	strb	r3, [r5, #2]
   1be08:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1be0c:	movw	r5, #1088	; 0x440
   1be10:	movt	r5, #10
   1be14:	ldrb	r3, [r5, #5]
   1be18:	orr	r3, r3, #1
   1be1c:	strb	r3, [r5, #5]
   1be20:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1be24:	movw	r5, #1088	; 0x440
   1be28:	movt	r5, #10
   1be2c:	mov	r2, #1
   1be30:	ldrb	r3, [r5, #2]
   1be34:	bfi	r3, r2, #5, #2
   1be38:	strb	r3, [r5, #2]
   1be3c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1be40:	movw	r6, #1244	; 0x4dc
   1be44:	movt	r6, #10
   1be48:	mov	r3, #1
   1be4c:	str	r3, [r6, #8]
   1be50:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1be54:	movw	r5, #1088	; 0x440
   1be58:	movt	r5, #10
   1be5c:	ldrb	r3, [r5]
   1be60:	bfc	r3, #4, #1
   1be64:	strb	r3, [r5]
   1be68:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1be6c:	mov	r2, #5
   1be70:	movw	r1, #62732	; 0xf50c
   1be74:	mov	r0, #0
   1be78:	movt	r1, #4
   1be7c:	movw	ip, #1460	; 0x5b4
   1be80:	movt	ip, #10
   1be84:	str	ip, [sp, #48]	; 0x30
   1be88:	bl	13688 <dcgettext@plt>
   1be8c:	ldr	ip, [sp, #48]	; 0x30
   1be90:	movw	sl, #64592	; 0xfc50
   1be94:	movw	r9, #21440	; 0x53c0
   1be98:	movt	sl, #9
   1be9c:	movt	r9, #5
   1bea0:	ldr	r2, [ip]
   1bea4:	movw	ip, #56948	; 0xde74
   1bea8:	str	ip, [sp, #32]
   1beac:	mov	r1, r0
   1beb0:	mov	r0, #1
   1beb4:	bl	13b38 <__printf_chk@plt>
   1beb8:	ldr	ip, [sp, #32]
   1bebc:	mov	r2, #5
   1bec0:	movw	r1, #62764	; 0xf52c
   1bec4:	mov	r0, #0
   1bec8:	movt	r1, #4
   1becc:	movt	ip, #4
   1bed0:	str	ip, [sp, #32]
   1bed4:	bl	13688 <dcgettext@plt>
   1bed8:	mov	r1, r0
   1bedc:	mov	r0, #1
   1bee0:	bl	13b38 <__printf_chk@plt>
   1bee4:	movw	ip, #62388	; 0xf3b4
   1bee8:	movt	ip, #4
   1beec:	str	ip, [sp, #28]
   1bef0:	movw	ip, #28992	; 0x7140
   1bef4:	movt	ip, #4
   1bef8:	str	ip, [sp, #56]	; 0x38
   1befc:	mov	ip, #0
   1bf00:	str	ip, [sp, #36]	; 0x24
   1bf04:	ldr	ip, [sp, #32]
   1bf08:	ldr	ip, [ip, #24]
   1bf0c:	cmp	ip, #0
   1bf10:	str	ip, [sp, #40]	; 0x28
   1bf14:	beq	1c9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b5c>
   1bf18:	movw	r1, #10820	; 0x2a44
   1bf1c:	mov	r0, #1
   1bf20:	movt	r1, #5
   1bf24:	ldr	r5, [sp, #32]
   1bf28:	mov	r8, #0
   1bf2c:	bl	13b38 <__printf_chk@plt>
   1bf30:	mov	r4, #2
   1bf34:	ldr	r6, [sp, #36]	; 0x24
   1bf38:	b	1bfe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8154>
   1bf3c:	movw	r1, #1492	; 0x5d4
   1bf40:	movw	r2, #62388	; 0xf3b4
   1bf44:	movt	r1, #5
   1bf48:	movt	r2, #4
   1bf4c:	mov	r0, #1
   1bf50:	bl	13b38 <__printf_chk@plt>
   1bf54:	mov	r3, #4
   1bf58:	ldr	r7, [r5, #20]
   1bf5c:	add	r4, r4, r3
   1bf60:	cmp	r7, #0
   1bf64:	moveq	r8, #1
   1bf68:	beq	1bfc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8138>
   1bf6c:	ldr	r3, [r5, #4]
   1bf70:	cmp	r3, #2
   1bf74:	beq	1bf84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x80f8>
   1bf78:	mov	r0, #32
   1bf7c:	add	r4, r4, #1
   1bf80:	bl	13afc <putchar@plt>
   1bf84:	mov	r1, r7
   1bf88:	mov	r2, #5
   1bf8c:	mov	r0, #0
   1bf90:	mov	r8, #1
   1bf94:	bl	13688 <dcgettext@plt>
   1bf98:	movw	r1, #14204	; 0x377c
   1bf9c:	movt	r1, #5
   1bfa0:	mov	r2, r0
   1bfa4:	mov	r0, r8
   1bfa8:	bl	13b38 <__printf_chk@plt>
   1bfac:	mov	r1, r7
   1bfb0:	mov	r2, #5
   1bfb4:	mov	r0, #0
   1bfb8:	bl	13688 <dcgettext@plt>
   1bfbc:	bl	13a24 <strlen@plt>
   1bfc0:	add	r4, r4, r0
   1bfc4:	add	r6, r6, #1
   1bfc8:	cmp	r6, #168	; 0xa8
   1bfcc:	bhi	1c8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8a28>
   1bfd0:	add	r5, r5, #32
   1bfd4:	ldr	r3, [r5, #24]
   1bfd8:	cmp	r3, #0
   1bfdc:	bne	1c8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8a28>
   1bfe0:	ldrb	r3, [r5, #16]
   1bfe4:	cmp	r3, #0
   1bfe8:	beq	1bfc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8138>
   1bfec:	ldr	r2, [r5, #28]
   1bff0:	cmp	r2, #4
   1bff4:	beq	1bfc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8138>
   1bff8:	cmp	r8, #0
   1bffc:	bne	1bf3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x80b0>
   1c000:	movw	r1, #1492	; 0x5d4
   1c004:	movw	r2, #21440	; 0x53c0
   1c008:	movt	r1, #5
   1c00c:	movt	r2, #5
   1c010:	mov	r0, #1
   1c014:	bl	13b38 <__printf_chk@plt>
   1c018:	mov	r3, #2
   1c01c:	b	1bf58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x80cc>
   1c020:	ldr	ip, [sp, #28]
   1c024:	movw	r3, #1336	; 0x538
   1c028:	movt	r3, #10
   1c02c:	ldr	r2, [ip]
   1c030:	str	r2, [r3, #76]	; 0x4c
   1c034:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c038:	movw	r3, #1076	; 0x434
   1c03c:	movt	r3, #10
   1c040:	mov	r2, #0
   1c044:	str	r2, [r3]
   1c048:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c04c:	movw	r5, #1088	; 0x440
   1c050:	movt	r5, #10
   1c054:	ldrb	r3, [r5, #3]
   1c058:	bfc	r3, #0, #1
   1c05c:	strb	r3, [r5, #3]
   1c060:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c064:	movw	r6, #1244	; 0x4dc
   1c068:	movt	r6, #10
   1c06c:	mov	r3, #0
   1c070:	str	r3, [r6, #20]
   1c074:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c078:	movw	r6, #1244	; 0x4dc
   1c07c:	movt	r6, #10
   1c080:	mov	r3, #0
   1c084:	str	r3, [r6, #24]
   1c088:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c08c:	movw	r3, #108	; 0x6c
   1c090:	movt	r3, #10
   1c094:	mov	r2, #1
   1c098:	str	r2, [r3]
   1c09c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c0a0:	movw	r3, #1032	; 0x408
   1c0a4:	movt	r3, #10
   1c0a8:	ldrb	r2, [r3]
   1c0ac:	bfc	r2, #5, #1
   1c0b0:	strb	r2, [r3]
   1c0b4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c0b8:	movw	r3, #1032	; 0x408
   1c0bc:	movt	r3, #10
   1c0c0:	ldrb	r2, [r3, #1]
   1c0c4:	bfc	r2, #0, #1
   1c0c8:	strb	r2, [r3, #1]
   1c0cc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c0d0:	ldr	ip, [sp, #28]
   1c0d4:	mov	r1, #0
   1c0d8:	mov	r2, r1
   1c0dc:	mov	r3, r1
   1c0e0:	ldr	r0, [ip]
   1c0e4:	bl	26a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ba4>
   1c0e8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c0ec:	movw	r5, #1088	; 0x440
   1c0f0:	movt	r5, #10
   1c0f4:	mov	r3, #0
   1c0f8:	str	r3, [r5, #24]
   1c0fc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c100:	movw	r5, #1088	; 0x440
   1c104:	movt	r5, #10
   1c108:	mov	r3, #2
   1c10c:	str	r3, [r5, #24]
   1c110:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c114:	movw	r5, #1088	; 0x440
   1c118:	movt	r5, #10
   1c11c:	mov	r2, #1
   1c120:	ldrb	r3, [r5, #1]
   1c124:	bfi	r3, r2, #3, #2
   1c128:	strb	r3, [r5, #1]
   1c12c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c130:	movw	r3, #104	; 0x68
   1c134:	movt	r3, #10
   1c138:	ldr	ip, [sp, #28]
   1c13c:	movw	r5, #120	; 0x78
   1c140:	ldr	r3, [r3]
   1c144:	movt	r5, #10
   1c148:	ldr	r0, [ip]
   1c14c:	str	r3, [r5]
   1c150:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   1c154:	movw	r3, #996	; 0x3e4
   1c158:	movt	r3, #10
   1c15c:	mov	r2, #1
   1c160:	str	r2, [r3]
   1c164:	bl	15468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc>
   1c168:	mov	r3, #0
   1c16c:	str	r3, [r5]
   1c170:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c174:	mov	r0, #1
   1c178:	bl	2f570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6e4>
   1c17c:	movw	r3, #1072	; 0x430
   1c180:	movt	r3, #10
   1c184:	mov	r2, #1
   1c188:	str	r2, [r3]
   1c18c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c190:	movw	r5, #1088	; 0x440
   1c194:	movt	r5, #10
   1c198:	mov	r2, #2
   1c19c:	ldrb	r3, [r5, #1]
   1c1a0:	bfi	r3, r2, #5, #2
   1c1a4:	strb	r3, [r5, #1]
   1c1a8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c1ac:	ldr	ip, [sp, #28]
   1c1b0:	movw	r1, #1100	; 0x44c
   1c1b4:	mov	r2, #2
   1c1b8:	movt	r1, #5
   1c1bc:	ldr	r5, [ip]
   1c1c0:	mov	r0, r5
   1c1c4:	bl	13e08 <strncmp@plt>
   1c1c8:	cmp	r0, #0
   1c1cc:	addeq	r5, r5, #2
   1c1d0:	ldreq	ip, [sp, #28]
   1c1d4:	streq	r5, [ip]
   1c1d8:	ldr	ip, [sp, #36]	; 0x24
   1c1dc:	cmp	ip, #0
   1c1e0:	beq	1c1ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8360>
   1c1e4:	mov	r0, ip
   1c1e8:	bl	13574 <free@plt>
   1c1ec:	mov	r0, r5
   1c1f0:	bl	137e4 <xstrdup@plt>
   1c1f4:	str	r0, [sp, #36]	; 0x24
   1c1f8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c1fc:	ldr	ip, [sp, #28]
   1c200:	movw	r1, #12720	; 0x31b0
   1c204:	movt	r1, #5
   1c208:	ldr	r5, [ip]
   1c20c:	mov	r0, r5
   1c210:	bl	13490 <strcmp@plt>
   1c214:	cmp	r0, #0
   1c218:	bne	1d2b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9428>
   1c21c:	movw	r3, #1032	; 0x408
   1c220:	movt	r3, #10
   1c224:	ldrb	r2, [r3]
   1c228:	bfi	r2, r0, #5, #1
   1c22c:	strb	r2, [r3]
   1c230:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c234:	ldr	ip, [sp, #28]
   1c238:	ldr	r0, [ip]
   1c23c:	bl	261b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12328>
   1c240:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c244:	movw	r6, #1244	; 0x4dc
   1c248:	movt	r6, #10
   1c24c:	mov	r3, #1
   1c250:	str	r3, [r6]
   1c254:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c258:	ldr	ip, [sp, #28]
   1c25c:	mov	r1, #1
   1c260:	ldr	r0, [ip]
   1c264:	bl	26164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122d8>
   1c268:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c26c:	ldr	ip, [sp, #28]
   1c270:	ldr	r0, [ip]
   1c274:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   1c278:	movw	r3, #996	; 0x3e4
   1c27c:	movt	r3, #10
   1c280:	mov	r2, #2
   1c284:	str	r2, [r3]
   1c288:	bl	15468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc>
   1c28c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c290:	movw	r6, #1244	; 0x4dc
   1c294:	movt	r6, #10
   1c298:	ldr	r5, [r6, #76]	; 0x4c
   1c29c:	cmp	r5, #0
   1c2a0:	beq	1d608 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x977c>
   1c2a4:	ldr	r3, [r5]
   1c2a8:	cmp	r3, #0
   1c2ac:	moveq	ip, #4
   1c2b0:	moveq	r1, #8
   1c2b4:	beq	1c2e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8454>
   1c2b8:	mov	r2, r5
   1c2bc:	mov	r3, #0
   1c2c0:	ldr	r1, [r2, #4]!
   1c2c4:	add	r3, r3, #1
   1c2c8:	cmp	r1, #0
   1c2cc:	bne	1c2c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8434>
   1c2d0:	add	r3, r3, #2
   1c2d4:	lsl	r1, r3, #2
   1c2d8:	sub	r3, r1, #8
   1c2dc:	sub	ip, r1, #4
   1c2e0:	mov	r0, r5
   1c2e4:	str	r3, [sp, #20]
   1c2e8:	str	ip, [sp, #24]
   1c2ec:	bl	13724 <xrealloc@plt>
   1c2f0:	ldr	lr, [sp, #28]
   1c2f4:	mov	r2, #0
   1c2f8:	ldr	r3, [sp, #20]
   1c2fc:	ldr	ip, [sp, #24]
   1c300:	ldr	r1, [lr]
   1c304:	str	r0, [r6, #76]	; 0x4c
   1c308:	str	r1, [r0, r3]
   1c30c:	ldr	r3, [r6, #76]	; 0x4c
   1c310:	str	r2, [r3, ip]
   1c314:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c318:	ldr	ip, [sp, #28]
   1c31c:	ldr	r0, [ip]
   1c320:	bl	23c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfdcc>
   1c324:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c328:	ldr	ip, [sp, #28]
   1c32c:	mov	r1, #0
   1c330:	mov	r2, r1
   1c334:	ldr	r0, [ip]
   1c338:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   1c33c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c340:	movw	r6, #1244	; 0x4dc
   1c344:	movt	r6, #10
   1c348:	mov	r3, #1
   1c34c:	str	r3, [r6, #40]	; 0x28
   1c350:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c354:	ldr	ip, [sp, #28]
   1c358:	movw	r6, #1244	; 0x4dc
   1c35c:	movt	r6, #10
   1c360:	ldr	r3, [ip]
   1c364:	str	r3, [r6, #72]	; 0x48
   1c368:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c36c:	ldr	ip, [sp, #28]
   1c370:	mov	r2, #0
   1c374:	add	r1, sp, #96	; 0x60
   1c378:	ldr	r0, [ip]
   1c37c:	bl	13a18 <strtoul@plt>
   1c380:	ldr	r2, [sp, #96]	; 0x60
   1c384:	movw	r3, #62500	; 0xf424
   1c388:	movt	r3, #9
   1c38c:	str	r0, [r3]
   1c390:	ldrb	r3, [r2]
   1c394:	cmp	r3, #0
   1c398:	beq	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c39c:	mov	r2, #5
   1c3a0:	movw	r1, #62704	; 0xf4f0
   1c3a4:	mov	r0, #0
   1c3a8:	movt	r1, #4
   1c3ac:	bl	13688 <dcgettext@plt>
   1c3b0:	ldr	ip, [sp, #28]
   1c3b4:	ldr	r1, [ip]
   1c3b8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1c3bc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c3c0:	ldr	ip, [sp, #28]
   1c3c4:	movw	r6, #1244	; 0x4dc
   1c3c8:	movt	r6, #10
   1c3cc:	ldr	r3, [ip]
   1c3d0:	ldrb	r0, [r3]
   1c3d4:	cmp	r0, #0
   1c3d8:	bne	1c3f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8568>
   1c3dc:	ldr	r2, [r6, #60]	; 0x3c
   1c3e0:	cmp	r2, #0
   1c3e4:	beq	1c3f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8568>
   1c3e8:	ldrb	r2, [r2]
   1c3ec:	cmp	r2, #0
   1c3f0:	bne	1d524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9698>
   1c3f4:	str	r3, [r6, #60]	; 0x3c
   1c3f8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c3fc:	ldr	r3, [r4]
   1c400:	cmp	r7, r3
   1c404:	beq	1d4f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x966c>
   1c408:	movw	r5, #1088	; 0x440
   1c40c:	movt	r5, #10
   1c410:	ldrb	r3, [r5]
   1c414:	tst	r3, #1
   1c418:	bne	1d394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9508>
   1c41c:	movw	r1, #1032	; 0x408
   1c420:	movt	r1, #10
   1c424:	ldrb	r0, [r5]
   1c428:	movw	r3, #1336	; 0x538
   1c42c:	ldrb	ip, [r1]
   1c430:	movt	r3, #10
   1c434:	mov	r2, #0
   1c438:	bfi	ip, r2, #5, #1
   1c43c:	str	r2, [r3, #12]
   1c440:	strb	ip, [r1]
   1c444:	mov	r1, #2
   1c448:	str	r2, [r3]
   1c44c:	bfi	r0, r1, #0, #2
   1c450:	str	r2, [r3, #48]	; 0x30
   1c454:	strb	r0, [r5]
   1c458:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c45c:	ldr	ip, [sp, #28]
   1c460:	movw	r5, #1088	; 0x440
   1c464:	movt	r5, #10
   1c468:	movw	r6, #1244	; 0x4dc
   1c46c:	movt	r6, #10
   1c470:	ldr	r2, [ip]
   1c474:	ldrb	r3, [r5, #6]
   1c478:	str	r2, [r6, #56]	; 0x38
   1c47c:	bfc	r3, #3, #1
   1c480:	strb	r3, [r5, #6]
   1c484:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c488:	movw	r6, #1244	; 0x4dc
   1c48c:	movt	r6, #10
   1c490:	mov	r3, #1
   1c494:	str	r3, [r6, #32]
   1c498:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c49c:	movw	r6, #1244	; 0x4dc
   1c4a0:	movt	r6, #10
   1c4a4:	mov	r3, #0
   1c4a8:	str	r3, [r6, #32]
   1c4ac:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c4b0:	movw	r3, #1336	; 0x538
   1c4b4:	movt	r3, #10
   1c4b8:	ldr	r0, [r3, #8]
   1c4bc:	cmp	r0, #0
   1c4c0:	beq	1d3d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9548>
   1c4c4:	movw	r5, #1088	; 0x440
   1c4c8:	movt	r5, #10
   1c4cc:	ldrb	r3, [r5]
   1c4d0:	and	r3, r3, #3
   1c4d4:	cmp	r3, #2
   1c4d8:	beq	1d5ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9760>
   1c4dc:	ldrb	r3, [r5]
   1c4e0:	mov	r2, #1
   1c4e4:	bfi	r3, r2, #0, #2
   1c4e8:	strb	r3, [r5]
   1c4ec:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c4f0:	ldr	ip, [sp, #28]
   1c4f4:	movw	r1, #380	; 0x17c
   1c4f8:	movt	r1, #5
   1c4fc:	ldr	r5, [ip]
   1c500:	mov	r0, r5
   1c504:	bl	13490 <strcmp@plt>
   1c508:	cmp	r0, #0
   1c50c:	bne	1d260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x93d4>
   1c510:	movw	r5, #1088	; 0x440
   1c514:	movt	r5, #10
   1c518:	mov	r2, #1
   1c51c:	ldrb	r3, [r5, #2]
   1c520:	bfi	r3, r2, #3, #2
   1c524:	bfi	r3, r2, #5, #2
   1c528:	strb	r3, [r5, #2]
   1c52c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c530:	ldr	ip, [sp, #28]
   1c534:	ldr	r0, [ip]
   1c538:	bl	310a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d21c>
   1c53c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c540:	movw	r3, #1336	; 0x538
   1c544:	movt	r3, #10
   1c548:	movw	r5, #1088	; 0x440
   1c54c:	movt	r5, #10
   1c550:	ldr	r1, [r3, #96]	; 0x60
   1c554:	ldrb	r2, [r5, #4]
   1c558:	cmp	r1, #0
   1c55c:	orr	r2, r2, #2
   1c560:	strb	r2, [r5, #4]
   1c564:	movweq	r2, #1021	; 0x3fd
   1c568:	streq	r2, [r3, #96]	; 0x60
   1c56c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c570:	ldr	ip, [sp, #28]
   1c574:	ldr	r0, [ip]
   1c578:	bl	331f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f36c>
   1c57c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c580:	ldr	ip, [sp, #28]
   1c584:	ldr	r0, [ip]
   1c588:	bl	3328c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f400>
   1c58c:	cmp	r0, #0
   1c590:	beq	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c594:	mov	r2, #5
   1c598:	movw	r1, #472	; 0x1d8
   1c59c:	mov	r0, #0
   1c5a0:	movt	r1, #5
   1c5a4:	bl	13688 <dcgettext@plt>
   1c5a8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1c5ac:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c5b0:	ldr	ip, [sp, #28]
   1c5b4:	movw	r6, #1244	; 0x4dc
   1c5b8:	movt	r6, #10
   1c5bc:	ldr	r3, [ip]
   1c5c0:	str	r3, [r6, #84]	; 0x54
   1c5c4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c5c8:	movw	r6, #1244	; 0x4dc
   1c5cc:	movt	r6, #10
   1c5d0:	mov	r3, #1
   1c5d4:	str	r3, [r6, #36]	; 0x24
   1c5d8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c5dc:	movw	r3, #1240	; 0x4d8
   1c5e0:	movt	r3, #10
   1c5e4:	ldr	r0, [r3]
   1c5e8:	ldrb	r3, [r0]
   1c5ec:	cmp	r3, #0
   1c5f0:	beq	1b594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7708>
   1c5f4:	bl	1391c <puts@plt>
   1c5f8:	b	1b594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7708>
   1c5fc:	ldr	ip, [sp, #28]
   1c600:	movw	r0, #1088	; 0x440
   1c604:	movt	r0, #10
   1c608:	ldr	r1, [ip]
   1c60c:	bl	2b3f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17564>
   1c610:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c614:	movw	r5, #1032	; 0x408
   1c618:	movt	r5, #10
   1c61c:	mov	r1, #8
   1c620:	mov	r0, r5
   1c624:	mov	r2, r1
   1c628:	bl	3f7e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b954>
   1c62c:	str	r0, [r5, #4]
   1c630:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c634:	movw	r5, #1088	; 0x440
   1c638:	movt	r5, #10
   1c63c:	ldrb	r3, [r5, #2]
   1c640:	ubfx	r2, r3, #3, #2
   1c644:	cmp	r2, #3
   1c648:	moveq	r2, #2
   1c64c:	bfieq	r3, r2, #3, #2
   1c650:	strbeq	r3, [r5, #2]
   1c654:	movw	r3, #1088	; 0x440
   1c658:	ldrb	r2, [r5, #2]
   1c65c:	movt	r3, #10
   1c660:	ubfx	r1, r2, #5, #2
   1c664:	cmp	r1, #3
   1c668:	movne	ip, #2
   1c66c:	strne	ip, [sp, #44]	; 0x2c
   1c670:	moveq	r1, #2
   1c674:	bfieq	r2, r1, #5, #2
   1c678:	streq	r1, [sp, #44]	; 0x2c
   1c67c:	strbeq	r2, [r3, #2]
   1c680:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c684:	movw	r5, #1088	; 0x440
   1c688:	movt	r5, #10
   1c68c:	ldrb	r3, [r5, #2]
   1c690:	ubfx	r2, r3, #3, #2
   1c694:	cmp	r2, #2
   1c698:	orreq	r3, r3, #24
   1c69c:	strbeq	r3, [r5, #2]
   1c6a0:	ldrb	r2, [r5, #2]
   1c6a4:	movw	r3, #1088	; 0x440
   1c6a8:	movt	r3, #10
   1c6ac:	ubfx	r1, r2, #5, #2
   1c6b0:	cmp	r1, #2
   1c6b4:	movne	ip, #3
   1c6b8:	strne	ip, [sp, #44]	; 0x2c
   1c6bc:	orreq	r2, r2, #96	; 0x60
   1c6c0:	moveq	ip, #3
   1c6c4:	strbeq	r2, [r3, #2]
   1c6c8:	streq	ip, [sp, #44]	; 0x2c
   1c6cc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c6d0:	movw	r5, #1088	; 0x440
   1c6d4:	movt	r5, #10
   1c6d8:	ldrb	r3, [r5, #3]
   1c6dc:	orr	r3, r3, #32
   1c6e0:	strb	r3, [r5, #3]
   1c6e4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c6e8:	movw	r5, #1088	; 0x440
   1c6ec:	movt	r5, #10
   1c6f0:	ldrb	r3, [r5, #5]
   1c6f4:	orr	r3, r3, #128	; 0x80
   1c6f8:	strb	r3, [r5, #5]
   1c6fc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c700:	ldr	ip, [sp, #28]
   1c704:	mov	r1, #0
   1c708:	mov	r2, r1
   1c70c:	movw	r5, #1088	; 0x440
   1c710:	movt	r5, #10
   1c714:	ldr	r0, [ip]
   1c718:	bl	13a18 <strtoul@plt>
   1c71c:	ldrb	r3, [r5, #5]
   1c720:	adds	r0, r0, #0
   1c724:	movne	r0, #1
   1c728:	bfi	r3, r0, #5, #1
   1c72c:	strb	r3, [r5, #5]
   1c730:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c734:	ldr	ip, [sp, #28]
   1c738:	mov	r0, #3
   1c73c:	add	r2, sp, #96	; 0x60
   1c740:	ldr	r1, [ip]
   1c744:	movw	ip, #64864	; 0xfd60
   1c748:	str	ip, [sp, #56]	; 0x38
   1c74c:	bl	13de4 <__xstat64@plt>
   1c750:	ldr	ip, [sp, #56]	; 0x38
   1c754:	movt	ip, #9
   1c758:	str	ip, [sp, #56]	; 0x38
   1c75c:	cmp	r0, #0
   1c760:	blt	1b0ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7260>
   1c764:	ldr	r3, [sp, #112]	; 0x70
   1c768:	and	r3, r3, #61440	; 0xf000
   1c76c:	cmp	r3, #16384	; 0x4000
   1c770:	beq	1b0ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7260>
   1c774:	ldr	r0, [ip]
   1c778:	mov	r1, #1
   1c77c:	mov	r2, #0
   1c780:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   1c784:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c788:	ldr	ip, [sp, #40]	; 0x28
   1c78c:	cmp	ip, #0
   1c790:	beq	1d378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x94ec>
   1c794:	bl	26b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12cb4>
   1c798:	ldr	ip, [sp, #40]	; 0x28
   1c79c:	sub	ip, ip, #1
   1c7a0:	str	ip, [sp, #40]	; 0x28
   1c7a4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c7a8:	movw	r3, #1336	; 0x538
   1c7ac:	movt	r3, #10
   1c7b0:	movw	r2, #28992	; 0x7140
   1c7b4:	movt	r2, #4
   1c7b8:	str	r2, [r3, #76]	; 0x4c
   1c7bc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c7c0:	movw	r3, #1336	; 0x538
   1c7c4:	movt	r3, #10
   1c7c8:	mov	r2, #1
   1c7cc:	str	r2, [r3, #60]	; 0x3c
   1c7d0:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c7d4:	movw	r3, #1336	; 0x538
   1c7d8:	movt	r3, #10
   1c7dc:	mov	r2, #1
   1c7e0:	str	r2, [r3, #48]	; 0x30
   1c7e4:	str	r2, [r3]
   1c7e8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c7ec:	movw	r5, #1088	; 0x440
   1c7f0:	movt	r5, #10
   1c7f4:	ldrb	r3, [r5, #1]
   1c7f8:	orr	r3, r3, #2
   1c7fc:	strb	r3, [r5, #1]
   1c800:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c804:	movw	r5, #1088	; 0x440
   1c808:	movt	r5, #10
   1c80c:	ldrb	r3, [r5, #1]
   1c810:	bfc	r3, #1, #1
   1c814:	strb	r3, [r5, #1]
   1c818:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c81c:	bl	26af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12c64>
   1c820:	ldr	ip, [sp, #40]	; 0x28
   1c824:	add	ip, ip, #1
   1c828:	str	ip, [sp, #40]	; 0x28
   1c82c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c830:	movw	r2, #1032	; 0x408
   1c834:	movt	r2, #10
   1c838:	ldr	r3, [r2, #4]
   1c83c:	cmp	r3, #0
   1c840:	beq	1d4dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9650>
   1c844:	ldr	r0, [r3]
   1c848:	ldr	r1, [r3, #4]
   1c84c:	stmia	r2!, {r0, r1}
   1c850:	mov	r0, r3
   1c854:	bl	13574 <free@plt>
   1c858:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c85c:	movw	r5, #1088	; 0x440
   1c860:	movt	r5, #10
   1c864:	ldrb	r3, [r5]
   1c868:	orr	r3, r3, #16
   1c86c:	strb	r3, [r5]
   1c870:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c874:	ldr	ip, [sp, #28]
   1c878:	mov	r1, #1
   1c87c:	ldr	r0, [ip]
   1c880:	bl	305e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c75c>
   1c884:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c888:	movw	r3, #1032	; 0x408
   1c88c:	movt	r3, #10
   1c890:	movw	r2, #1336	; 0x538
   1c894:	movt	r2, #10
   1c898:	ldrb	r0, [r3]
   1c89c:	mov	r1, #0
   1c8a0:	str	r1, [r2, #48]	; 0x30
   1c8a4:	bfi	r0, r1, #5, #1
   1c8a8:	str	r1, [r2]
   1c8ac:	strb	r0, [r3]
   1c8b0:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1c8b4:	str	sl, [sp, #44]	; 0x2c
   1c8b8:	ldr	r5, [sp, #32]
   1c8bc:	ldr	r7, [sp, #36]	; 0x24
   1c8c0:	ldr	sl, [sp, #56]	; 0x38
   1c8c4:	b	1c8d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8a4c>
   1c8c8:	add	r5, r5, #32
   1c8cc:	ldr	r3, [r5, #24]
   1c8d0:	cmp	r3, #0
   1c8d4:	bne	1c9b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b24>
   1c8d8:	ldr	r6, [r5]
   1c8dc:	cmp	r6, #0
   1c8e0:	beq	1c9a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b18>
   1c8e4:	ldr	fp, [r5, #28]
   1c8e8:	cmp	fp, #4
   1c8ec:	beq	1c9a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b18>
   1c8f0:	sub	fp, fp, #2
   1c8f4:	ldr	r2, [sp, #28]
   1c8f8:	cmp	fp, #1
   1c8fc:	str	r6, [sp]
   1c900:	movw	r1, #62776	; 0xf538
   1c904:	mov	r0, #1
   1c908:	movhi	fp, #0
   1c90c:	movls	fp, #1
   1c910:	cmp	fp, #0
   1c914:	movt	r1, #4
   1c918:	moveq	r3, r9
   1c91c:	movne	r3, sl
   1c920:	cmp	r8, #0
   1c924:	moveq	r2, r9
   1c928:	bl	13b38 <__printf_chk@plt>
   1c92c:	mov	r0, r6
   1c930:	bl	13a24 <strlen@plt>
   1c934:	cmp	r8, #0
   1c938:	ldr	r6, [r5, #20]
   1c93c:	moveq	r8, #1
   1c940:	movne	r8, #3
   1c944:	add	fp, fp, r8
   1c948:	cmp	r6, #0
   1c94c:	moveq	r8, #1
   1c950:	add	r0, r0, r4
   1c954:	add	fp, r0, fp
   1c958:	moveq	r4, fp
   1c95c:	beq	1c9a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b18>
   1c960:	mov	r1, r6
   1c964:	mov	r2, #5
   1c968:	mov	r0, #0
   1c96c:	mov	r8, #1
   1c970:	bl	13688 <dcgettext@plt>
   1c974:	movw	r1, #62784	; 0xf540
   1c978:	movt	r1, #4
   1c97c:	mov	r2, r0
   1c980:	mov	r0, r8
   1c984:	bl	13b38 <__printf_chk@plt>
   1c988:	mov	r1, r6
   1c98c:	mov	r2, #5
   1c990:	mov	r0, #0
   1c994:	bl	13688 <dcgettext@plt>
   1c998:	bl	13a24 <strlen@plt>
   1c99c:	add	ip, fp, r8
   1c9a0:	add	r4, ip, r0
   1c9a4:	add	r7, r7, #1
   1c9a8:	cmp	r7, #169	; 0xa9
   1c9ac:	bne	1c8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8a3c>
   1c9b0:	cmp	r4, #29
   1c9b4:	ldr	sl, [sp, #44]	; 0x2c
   1c9b8:	bgt	1d134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x92a8>
   1c9bc:	add	r4, r4, #1
   1c9c0:	mov	r0, #32
   1c9c4:	ldr	r1, [sl]
   1c9c8:	bl	1379c <_IO_putc@plt>
   1c9cc:	cmp	r4, #30
   1c9d0:	bne	1c9bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b30>
   1c9d4:	ldr	r1, [sp, #40]	; 0x28
   1c9d8:	mov	r2, #5
   1c9dc:	mov	r0, #0
   1c9e0:	bl	13688 <dcgettext@plt>
   1c9e4:	bl	1391c <puts@plt>
   1c9e8:	ldr	ip, [sp, #36]	; 0x24
   1c9ec:	add	ip, ip, #1
   1c9f0:	str	ip, [sp, #36]	; 0x24
   1c9f4:	ldr	ip, [sp, #32]
   1c9f8:	add	ip, ip, #32
   1c9fc:	str	ip, [sp, #32]
   1ca00:	ldr	ip, [sp, #36]	; 0x24
   1ca04:	cmp	ip, #169	; 0xa9
   1ca08:	bne	1bf04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8078>
   1ca0c:	mov	r2, #5
   1ca10:	movw	r1, #62788	; 0xf544
   1ca14:	mov	r0, #0
   1ca18:	movt	r1, #4
   1ca1c:	bl	13688 <dcgettext@plt>
   1ca20:	mov	r4, #23
   1ca24:	mov	r1, r0
   1ca28:	mov	r0, #1
   1ca2c:	bl	13b38 <__printf_chk@plt>
   1ca30:	mov	r0, #32
   1ca34:	ldr	r1, [sl]
   1ca38:	bl	1379c <_IO_putc@plt>
   1ca3c:	subs	r4, r4, #1
   1ca40:	bne	1ca30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8ba4>
   1ca44:	mov	r2, #5
   1ca48:	mov	r0, r4
   1ca4c:	movw	r1, #62796	; 0xf54c
   1ca50:	movt	r1, #4
   1ca54:	bl	13688 <dcgettext@plt>
   1ca58:	mov	r1, r0
   1ca5c:	mov	r0, #1
   1ca60:	bl	13b38 <__printf_chk@plt>
   1ca64:	mov	r0, r4
   1ca68:	mov	r2, #5
   1ca6c:	movw	r1, #62820	; 0xf564
   1ca70:	movt	r1, #4
   1ca74:	bl	13688 <dcgettext@plt>
   1ca78:	ldr	ip, [sp, #48]	; 0x30
   1ca7c:	ldr	r2, [ip]
   1ca80:	mov	r1, r0
   1ca84:	mov	r0, #1
   1ca88:	bl	13b38 <__printf_chk@plt>
   1ca8c:	bl	13778 <bfd_target_list@plt>
   1ca90:	ldr	r2, [r0]
   1ca94:	mov	r5, r0
   1ca98:	cmp	r2, #0
   1ca9c:	movne	r4, r0
   1caa0:	beq	1cac0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c34>
   1caa4:	movw	r1, #62784	; 0xf540
   1caa8:	mov	r0, #1
   1caac:	movt	r1, #4
   1cab0:	bl	13b38 <__printf_chk@plt>
   1cab4:	ldr	r2, [r4, #4]!
   1cab8:	cmp	r2, #0
   1cabc:	bne	1caa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8c18>
   1cac0:	mov	r0, r5
   1cac4:	bl	13574 <free@plt>
   1cac8:	mov	r0, #10
   1cacc:	bl	13afc <putchar@plt>
   1cad0:	mov	r2, #5
   1cad4:	movw	r1, #62844	; 0xf57c
   1cad8:	mov	r0, #0
   1cadc:	movt	r1, #4
   1cae0:	bl	13688 <dcgettext@plt>
   1cae4:	ldr	ip, [sp, #48]	; 0x30
   1cae8:	ldr	r2, [ip]
   1caec:	mov	r1, r0
   1caf0:	mov	r0, #1
   1caf4:	bl	13b38 <__printf_chk@plt>
   1caf8:	ldr	r0, [sl]
   1cafc:	bl	2f340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b4b4>
   1cb00:	mov	r0, #10
   1cb04:	bl	13afc <putchar@plt>
   1cb08:	mov	r2, #5
   1cb0c:	movw	r1, #62872	; 0xf598
   1cb10:	mov	r0, #0
   1cb14:	movt	r1, #4
   1cb18:	bl	13688 <dcgettext@plt>
   1cb1c:	ldr	ip, [sp, #48]	; 0x30
   1cb20:	ldr	r2, [ip]
   1cb24:	mov	r1, r0
   1cb28:	mov	r0, #1
   1cb2c:	bl	13b38 <__printf_chk@plt>
   1cb30:	mov	r2, #5
   1cb34:	movw	r1, #62908	; 0xf5bc
   1cb38:	mov	r0, #0
   1cb3c:	movt	r1, #4
   1cb40:	ldr	r4, [sl]
   1cb44:	bl	13688 <dcgettext@plt>
   1cb48:	mov	r1, r0
   1cb4c:	mov	r0, #1
   1cb50:	bl	13b38 <__printf_chk@plt>
   1cb54:	mov	r2, #5
   1cb58:	movw	r1, #62928	; 0xf5d0
   1cb5c:	mov	r0, #0
   1cb60:	movt	r1, #4
   1cb64:	bl	13688 <dcgettext@plt>
   1cb68:	mov	r1, #1
   1cb6c:	mov	r2, r0
   1cb70:	mov	r0, r4
   1cb74:	bl	13b74 <__fprintf_chk@plt>
   1cb78:	mov	r2, #5
   1cb7c:	movw	r1, #62984	; 0xf608
   1cb80:	mov	r0, #0
   1cb84:	movt	r1, #4
   1cb88:	bl	13688 <dcgettext@plt>
   1cb8c:	mov	r1, #1
   1cb90:	mov	r2, r0
   1cb94:	mov	r0, r4
   1cb98:	bl	13b74 <__fprintf_chk@plt>
   1cb9c:	mov	r2, #5
   1cba0:	movw	r1, #63116	; 0xf68c
   1cba4:	mov	r0, #0
   1cba8:	movt	r1, #4
   1cbac:	bl	13688 <dcgettext@plt>
   1cbb0:	mov	r1, #1
   1cbb4:	mov	r2, r0
   1cbb8:	mov	r0, r4
   1cbbc:	bl	13b74 <__fprintf_chk@plt>
   1cbc0:	mov	r2, #5
   1cbc4:	movw	r1, #63164	; 0xf6bc
   1cbc8:	mov	r0, #0
   1cbcc:	movt	r1, #4
   1cbd0:	bl	13688 <dcgettext@plt>
   1cbd4:	mov	r1, #1
   1cbd8:	mov	r2, r0
   1cbdc:	mov	r0, r4
   1cbe0:	bl	13b74 <__fprintf_chk@plt>
   1cbe4:	mov	r2, #5
   1cbe8:	movw	r1, #63224	; 0xf6f8
   1cbec:	mov	r0, #0
   1cbf0:	movt	r1, #4
   1cbf4:	bl	13688 <dcgettext@plt>
   1cbf8:	mov	r1, #1
   1cbfc:	mov	r2, r0
   1cc00:	mov	r0, r4
   1cc04:	bl	13b74 <__fprintf_chk@plt>
   1cc08:	mov	r2, #5
   1cc0c:	movw	r1, #63288	; 0xf738
   1cc10:	mov	r0, #0
   1cc14:	movt	r1, #4
   1cc18:	bl	13688 <dcgettext@plt>
   1cc1c:	mov	r1, #1
   1cc20:	mov	r2, r0
   1cc24:	mov	r0, r4
   1cc28:	bl	13b74 <__fprintf_chk@plt>
   1cc2c:	mov	r2, #5
   1cc30:	movw	r1, #63364	; 0xf784
   1cc34:	mov	r0, #0
   1cc38:	movt	r1, #4
   1cc3c:	bl	13688 <dcgettext@plt>
   1cc40:	mov	r1, #1
   1cc44:	mov	r2, r0
   1cc48:	mov	r0, r4
   1cc4c:	bl	13b74 <__fprintf_chk@plt>
   1cc50:	mov	r2, #5
   1cc54:	movw	r1, #63424	; 0xf7c0
   1cc58:	mov	r0, #0
   1cc5c:	movt	r1, #4
   1cc60:	bl	13688 <dcgettext@plt>
   1cc64:	mov	r1, #1
   1cc68:	mov	r2, r0
   1cc6c:	mov	r0, r4
   1cc70:	bl	13b74 <__fprintf_chk@plt>
   1cc74:	mov	r2, #5
   1cc78:	movw	r1, #63504	; 0xf810
   1cc7c:	mov	r0, #0
   1cc80:	movt	r1, #4
   1cc84:	bl	13688 <dcgettext@plt>
   1cc88:	mov	r1, #1
   1cc8c:	mov	r2, r0
   1cc90:	mov	r0, r4
   1cc94:	bl	13b74 <__fprintf_chk@plt>
   1cc98:	mov	r2, #5
   1cc9c:	movw	r1, #63588	; 0xf864
   1cca0:	mov	r0, #0
   1cca4:	movt	r1, #4
   1cca8:	bl	13688 <dcgettext@plt>
   1ccac:	mov	r1, #1
   1ccb0:	mov	r2, r0
   1ccb4:	mov	r0, r4
   1ccb8:	bl	13b74 <__fprintf_chk@plt>
   1ccbc:	mov	r2, #5
   1ccc0:	movw	r1, #63664	; 0xf8b0
   1ccc4:	mov	r0, #0
   1ccc8:	movt	r1, #4
   1cccc:	bl	13688 <dcgettext@plt>
   1ccd0:	mov	r1, #1
   1ccd4:	mov	r2, r0
   1ccd8:	mov	r0, r4
   1ccdc:	bl	13b74 <__fprintf_chk@plt>
   1cce0:	mov	r2, #5
   1cce4:	movw	r1, #63736	; 0xf8f8
   1cce8:	mov	r0, #0
   1ccec:	movt	r1, #4
   1ccf0:	bl	13688 <dcgettext@plt>
   1ccf4:	mov	r1, #1
   1ccf8:	mov	r2, r0
   1ccfc:	mov	r0, r4
   1cd00:	bl	13b74 <__fprintf_chk@plt>
   1cd04:	mov	r2, #5
   1cd08:	movw	r1, #63808	; 0xf940
   1cd0c:	mov	r0, #0
   1cd10:	movt	r1, #4
   1cd14:	bl	13688 <dcgettext@plt>
   1cd18:	mov	r1, #1
   1cd1c:	mov	r2, r0
   1cd20:	mov	r0, r4
   1cd24:	bl	13b74 <__fprintf_chk@plt>
   1cd28:	mov	r2, #5
   1cd2c:	movw	r1, #63864	; 0xf978
   1cd30:	mov	r0, #0
   1cd34:	movt	r1, #4
   1cd38:	bl	13688 <dcgettext@plt>
   1cd3c:	mov	r1, #1
   1cd40:	mov	r2, r0
   1cd44:	mov	r0, r4
   1cd48:	bl	13b74 <__fprintf_chk@plt>
   1cd4c:	mov	r2, #5
   1cd50:	movw	r1, #63920	; 0xf9b0
   1cd54:	mov	r0, #0
   1cd58:	movt	r1, #4
   1cd5c:	bl	13688 <dcgettext@plt>
   1cd60:	mov	r1, #1
   1cd64:	mov	r2, r0
   1cd68:	mov	r0, r4
   1cd6c:	bl	13b74 <__fprintf_chk@plt>
   1cd70:	mov	r2, #5
   1cd74:	movw	r1, #63980	; 0xf9ec
   1cd78:	mov	r0, #0
   1cd7c:	movt	r1, #4
   1cd80:	bl	13688 <dcgettext@plt>
   1cd84:	mov	r1, #1
   1cd88:	mov	r2, r0
   1cd8c:	mov	r0, r4
   1cd90:	bl	13b74 <__fprintf_chk@plt>
   1cd94:	mov	r2, #5
   1cd98:	movw	r1, #64044	; 0xfa2c
   1cd9c:	mov	r0, #0
   1cda0:	movt	r1, #4
   1cda4:	bl	13688 <dcgettext@plt>
   1cda8:	mov	r1, #1
   1cdac:	mov	r2, r0
   1cdb0:	mov	r0, r4
   1cdb4:	bl	13b74 <__fprintf_chk@plt>
   1cdb8:	mov	r2, #5
   1cdbc:	movw	r1, #64112	; 0xfa70
   1cdc0:	mov	r0, #0
   1cdc4:	movt	r1, #4
   1cdc8:	bl	13688 <dcgettext@plt>
   1cdcc:	mov	r1, #1
   1cdd0:	mov	r2, r0
   1cdd4:	mov	r0, r4
   1cdd8:	bl	13b74 <__fprintf_chk@plt>
   1cddc:	mov	r2, #5
   1cde0:	movw	r1, #64208	; 0xfad0
   1cde4:	mov	r0, #0
   1cde8:	movt	r1, #4
   1cdec:	bl	13688 <dcgettext@plt>
   1cdf0:	mov	r1, #1
   1cdf4:	mov	r2, r0
   1cdf8:	mov	r0, r4
   1cdfc:	bl	13b74 <__fprintf_chk@plt>
   1ce00:	mov	r2, #5
   1ce04:	movw	r1, #64288	; 0xfb20
   1ce08:	mov	r0, #0
   1ce0c:	movt	r1, #4
   1ce10:	bl	13688 <dcgettext@plt>
   1ce14:	mov	r1, #1
   1ce18:	mov	r2, r0
   1ce1c:	mov	r0, r4
   1ce20:	bl	13b74 <__fprintf_chk@plt>
   1ce24:	mov	r2, #5
   1ce28:	movw	r1, #64364	; 0xfb6c
   1ce2c:	mov	r0, #0
   1ce30:	movt	r1, #4
   1ce34:	bl	13688 <dcgettext@plt>
   1ce38:	mov	r1, #1
   1ce3c:	mov	r2, r0
   1ce40:	mov	r0, r4
   1ce44:	bl	13b74 <__fprintf_chk@plt>
   1ce48:	mov	r2, #5
   1ce4c:	movw	r1, #64468	; 0xfbd4
   1ce50:	mov	r0, #0
   1ce54:	movt	r1, #4
   1ce58:	bl	13688 <dcgettext@plt>
   1ce5c:	mov	r1, #1
   1ce60:	mov	r2, r0
   1ce64:	mov	r0, r4
   1ce68:	bl	13b74 <__fprintf_chk@plt>
   1ce6c:	mov	r2, #5
   1ce70:	movw	r1, #64544	; 0xfc20
   1ce74:	mov	r0, #0
   1ce78:	movt	r1, #4
   1ce7c:	bl	13688 <dcgettext@plt>
   1ce80:	mov	r1, #1
   1ce84:	mov	r2, r0
   1ce88:	mov	r0, r4
   1ce8c:	bl	13b74 <__fprintf_chk@plt>
   1ce90:	mov	r2, #5
   1ce94:	movw	r1, #64624	; 0xfc70
   1ce98:	mov	r0, #0
   1ce9c:	movt	r1, #4
   1cea0:	bl	13688 <dcgettext@plt>
   1cea4:	mov	r1, #1
   1cea8:	mov	r2, r0
   1ceac:	mov	r0, r4
   1ceb0:	bl	13b74 <__fprintf_chk@plt>
   1ceb4:	mov	r2, #5
   1ceb8:	movw	r1, #64700	; 0xfcbc
   1cebc:	mov	r0, #0
   1cec0:	movt	r1, #4
   1cec4:	bl	13688 <dcgettext@plt>
   1cec8:	mov	r1, #1
   1cecc:	mov	r2, r0
   1ced0:	mov	r0, r4
   1ced4:	bl	13b74 <__fprintf_chk@plt>
   1ced8:	mov	r2, #5
   1cedc:	movw	r1, #64772	; 0xfd04
   1cee0:	mov	r0, #0
   1cee4:	movt	r1, #4
   1cee8:	bl	13688 <dcgettext@plt>
   1ceec:	mov	r1, #1
   1cef0:	mov	r2, r0
   1cef4:	mov	r0, r4
   1cef8:	bl	13b74 <__fprintf_chk@plt>
   1cefc:	mov	r2, #5
   1cf00:	movw	r1, #64828	; 0xfd3c
   1cf04:	mov	r0, #0
   1cf08:	movt	r1, #4
   1cf0c:	bl	13688 <dcgettext@plt>
   1cf10:	mov	r1, #1
   1cf14:	mov	r2, r0
   1cf18:	mov	r0, r4
   1cf1c:	bl	13b74 <__fprintf_chk@plt>
   1cf20:	mov	r2, #5
   1cf24:	movw	r1, #64904	; 0xfd88
   1cf28:	mov	r0, #0
   1cf2c:	movt	r1, #4
   1cf30:	bl	13688 <dcgettext@plt>
   1cf34:	mov	r1, #1
   1cf38:	mov	r2, r0
   1cf3c:	mov	r0, r4
   1cf40:	bl	13b74 <__fprintf_chk@plt>
   1cf44:	mov	r2, #5
   1cf48:	movw	r1, #64972	; 0xfdcc
   1cf4c:	mov	r0, #0
   1cf50:	movt	r1, #4
   1cf54:	bl	13688 <dcgettext@plt>
   1cf58:	mov	r1, #1
   1cf5c:	mov	r2, r0
   1cf60:	mov	r0, r4
   1cf64:	bl	13b74 <__fprintf_chk@plt>
   1cf68:	mov	r2, #5
   1cf6c:	movw	r1, #65036	; 0xfe0c
   1cf70:	mov	r0, #0
   1cf74:	movt	r1, #4
   1cf78:	bl	13688 <dcgettext@plt>
   1cf7c:	mov	r1, #1
   1cf80:	mov	r2, r0
   1cf84:	mov	r0, r4
   1cf88:	bl	13b74 <__fprintf_chk@plt>
   1cf8c:	mov	r2, #5
   1cf90:	movw	r1, #65100	; 0xfe4c
   1cf94:	mov	r0, #0
   1cf98:	movt	r1, #4
   1cf9c:	bl	13688 <dcgettext@plt>
   1cfa0:	mov	r1, #1
   1cfa4:	mov	r2, r0
   1cfa8:	mov	r0, r4
   1cfac:	bl	13b74 <__fprintf_chk@plt>
   1cfb0:	mov	r2, #5
   1cfb4:	movw	r1, #65168	; 0xfe90
   1cfb8:	mov	r0, #0
   1cfbc:	movt	r1, #4
   1cfc0:	bl	13688 <dcgettext@plt>
   1cfc4:	mov	r1, #1
   1cfc8:	mov	r2, r0
   1cfcc:	mov	r0, r4
   1cfd0:	bl	13b74 <__fprintf_chk@plt>
   1cfd4:	mov	r2, #5
   1cfd8:	movw	r1, #65268	; 0xfef4
   1cfdc:	mov	r0, #0
   1cfe0:	movt	r1, #4
   1cfe4:	bl	13688 <dcgettext@plt>
   1cfe8:	mov	r1, #1
   1cfec:	mov	r2, r0
   1cff0:	mov	r0, r4
   1cff4:	bl	13b74 <__fprintf_chk@plt>
   1cff8:	mov	r2, #5
   1cffc:	movw	r1, #65340	; 0xff3c
   1d000:	mov	r0, #0
   1d004:	movt	r1, #4
   1d008:	bl	13688 <dcgettext@plt>
   1d00c:	mov	r1, #1
   1d010:	mov	r2, r0
   1d014:	mov	r0, r4
   1d018:	bl	13b74 <__fprintf_chk@plt>
   1d01c:	mov	r2, #5
   1d020:	movw	r1, #65408	; 0xff80
   1d024:	mov	r0, #0
   1d028:	movt	r1, #4
   1d02c:	bl	13688 <dcgettext@plt>
   1d030:	mov	r1, #1
   1d034:	mov	r2, r0
   1d038:	mov	r0, r4
   1d03c:	bl	13b74 <__fprintf_chk@plt>
   1d040:	mov	r2, #5
   1d044:	movw	r1, #65484	; 0xffcc
   1d048:	mov	r0, #0
   1d04c:	movt	r1, #4
   1d050:	bl	13688 <dcgettext@plt>
   1d054:	mov	r1, #1
   1d058:	mov	r2, r0
   1d05c:	mov	r0, r4
   1d060:	bl	13b74 <__fprintf_chk@plt>
   1d064:	mov	r2, #5
   1d068:	movw	r1, #24
   1d06c:	mov	r0, #0
   1d070:	movt	r1, #5
   1d074:	bl	13688 <dcgettext@plt>
   1d078:	mov	r1, #1
   1d07c:	mov	r2, r0
   1d080:	mov	r0, r4
   1d084:	bl	13b74 <__fprintf_chk@plt>
   1d088:	mov	r2, #5
   1d08c:	movw	r1, #84	; 0x54
   1d090:	mov	r0, #0
   1d094:	movt	r1, #5
   1d098:	bl	13688 <dcgettext@plt>
   1d09c:	mov	r1, #1
   1d0a0:	mov	r2, r0
   1d0a4:	mov	r0, r4
   1d0a8:	bl	13b74 <__fprintf_chk@plt>
   1d0ac:	mov	r2, #5
   1d0b0:	movw	r1, #160	; 0xa0
   1d0b4:	mov	r0, #0
   1d0b8:	movt	r1, #5
   1d0bc:	bl	13688 <dcgettext@plt>
   1d0c0:	mov	r1, #1
   1d0c4:	mov	r2, r0
   1d0c8:	mov	r0, r4
   1d0cc:	bl	13b74 <__fprintf_chk@plt>
   1d0d0:	mov	r2, #5
   1d0d4:	movw	r1, #240	; 0xf0
   1d0d8:	mov	r0, #0
   1d0dc:	movt	r1, #5
   1d0e0:	bl	13688 <dcgettext@plt>
   1d0e4:	mov	r1, #1
   1d0e8:	mov	r2, r0
   1d0ec:	mov	r0, r4
   1d0f0:	bl	13b74 <__fprintf_chk@plt>
   1d0f4:	ldr	r0, [sl]
   1d0f8:	bl	2f45c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5d0>
   1d0fc:	mov	r0, #10
   1d100:	bl	13afc <putchar@plt>
   1d104:	mov	r2, #5
   1d108:	movw	r1, #320	; 0x140
   1d10c:	mov	r0, #0
   1d110:	movt	r1, #5
   1d114:	bl	13688 <dcgettext@plt>
   1d118:	movw	r2, #340	; 0x154
   1d11c:	movt	r2, #5
   1d120:	mov	r1, r0
   1d124:	mov	r0, #1
   1d128:	bl	13b38 <__printf_chk@plt>
   1d12c:	mov	r0, #0
   1d130:	bl	13c40 <xexit@plt>
   1d134:	mov	r0, #10
   1d138:	mov	r4, #0
   1d13c:	bl	13afc <putchar@plt>
   1d140:	b	1c9bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8b30>
   1d144:	tst	r3, #1
   1d148:	beq	1b0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x722c>
   1d14c:	ldrb	r0, [r4]
   1d150:	mov	r1, #0
   1d154:	str	r1, [r4, #144]	; 0x90
   1d158:	orr	r0, r0, #4
   1d15c:	str	r1, [r2, #52]	; 0x34
   1d160:	strb	r0, [r4]
   1d164:	b	1b00c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7180>
   1d168:	ldrsb	r1, [r5, #28]
   1d16c:	movw	r2, #1244	; 0x4dc
   1d170:	movt	r2, #10
   1d174:	cmp	r1, #0
   1d178:	movlt	r1, #0
   1d17c:	strblt	r1, [r2, #28]
   1d180:	b	1afc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x713c>
   1d184:	mov	r2, #5
   1d188:	movw	r1, #1324	; 0x52c
   1d18c:	movt	r1, #5
   1d190:	bl	13688 <dcgettext@plt>
   1d194:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d198:	str	r4, [r5, #60]	; 0x3c
   1d19c:	b	1af04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7078>
   1d1a0:	mov	r5, r4
   1d1a4:	cmp	r5, #0
   1d1a8:	ldr	r7, [sp, #48]	; 0x30
   1d1ac:	ldr	fp, [sp, #60]	; 0x3c
   1d1b0:	ldr	r4, [sp, #64]	; 0x40
   1d1b4:	bne	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d1b8:	b	1b1b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x732c>
   1d1bc:	movw	r3, #1336	; 0x538
   1d1c0:	movt	r3, #10
   1d1c4:	mov	r2, #2
   1d1c8:	str	r2, [r3, #44]	; 0x2c
   1d1cc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d1d0:	mov	r2, #5
   1d1d4:	movw	r1, #536	; 0x218
   1d1d8:	mov	r0, #0
   1d1dc:	movt	r1, #5
   1d1e0:	bl	13688 <dcgettext@plt>
   1d1e4:	ldrb	r1, [r6]
   1d1e8:	movw	r2, #62400	; 0xf3c0
   1d1ec:	movw	r3, #62392	; 0xf3b8
   1d1f0:	and	r1, r1, #3
   1d1f4:	movt	r2, #4
   1d1f8:	cmp	r1, #3
   1d1fc:	movt	r3, #4
   1d200:	movne	r1, r2
   1d204:	moveq	r1, r3
   1d208:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d20c:	b	1b468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x75dc>
   1d210:	mov	r0, r5
   1d214:	movw	r1, #12932	; 0x3284
   1d218:	movt	r1, #5
   1d21c:	bl	13490 <strcmp@plt>
   1d220:	cmp	r0, #0
   1d224:	bne	1d47c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95f0>
   1d228:	movw	r3, #1468	; 0x5bc
   1d22c:	movt	r3, #10
   1d230:	mov	r2, #2
   1d234:	str	r2, [r3]
   1d238:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d23c:	mov	r2, #5
   1d240:	movw	r1, #1460	; 0x5b4
   1d244:	mov	r0, #0
   1d248:	movt	r1, #5
   1d24c:	bl	13688 <dcgettext@plt>
   1d250:	ldr	r3, [sp, #56]	; 0x38
   1d254:	ldr	r1, [sl, r3]
   1d258:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d25c:	b	1aeb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7024>
   1d260:	movw	r1, #392	; 0x188
   1d264:	mov	r0, r5
   1d268:	movt	r1, #5
   1d26c:	bl	13490 <strcmp@plt>
   1d270:	cmp	r0, #0
   1d274:	beq	1d45c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95d0>
   1d278:	movw	r1, #404	; 0x194
   1d27c:	mov	r0, r5
   1d280:	movt	r1, #5
   1d284:	bl	13490 <strcmp@plt>
   1d288:	cmp	r0, #0
   1d28c:	bne	1d4a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9614>
   1d290:	movw	r5, #1088	; 0x440
   1d294:	movt	r5, #10
   1d298:	ldr	ip, [sp, #44]	; 0x2c
   1d29c:	mov	r2, #1
   1d2a0:	ldrb	r3, [r5, #2]
   1d2a4:	bfi	r3, r2, #3, #2
   1d2a8:	bfi	r3, ip, #5, #2
   1d2ac:	strb	r3, [r5, #2]
   1d2b0:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d2b4:	movw	r1, #4640	; 0x1220
   1d2b8:	mov	r0, r5
   1d2bc:	movt	r1, #5
   1d2c0:	bl	13490 <strcmp@plt>
   1d2c4:	cmp	r0, #0
   1d2c8:	beq	1d308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x947c>
   1d2cc:	mov	r0, r5
   1d2d0:	movw	r1, #62516	; 0xf434
   1d2d4:	movt	r1, #4
   1d2d8:	bl	13490 <strcmp@plt>
   1d2dc:	cmp	r0, #0
   1d2e0:	beq	1d308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x947c>
   1d2e4:	mov	r2, #5
   1d2e8:	movw	r1, #62524	; 0xf43c
   1d2ec:	mov	r0, #0
   1d2f0:	movt	r1, #4
   1d2f4:	bl	13688 <dcgettext@plt>
   1d2f8:	ldr	ip, [sp, #28]
   1d2fc:	ldr	r1, [ip]
   1d300:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d304:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d308:	movw	r3, #1032	; 0x408
   1d30c:	movt	r3, #10
   1d310:	ldrb	r2, [r3]
   1d314:	orr	r2, r2, #32
   1d318:	strb	r2, [r3]
   1d31c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d320:	movw	r1, #1252	; 0x4e4
   1d324:	mov	r0, r5
   1d328:	movt	r1, #5
   1d32c:	bl	13748 <strcasecmp@plt>
   1d330:	cmp	r0, #0
   1d334:	beq	1d448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x95bc>
   1d338:	movw	r1, #29432	; 0x72f8
   1d33c:	mov	r0, r5
   1d340:	movt	r1, #4
   1d344:	bl	13748 <strcasecmp@plt>
   1d348:	cmp	r0, #0
   1d34c:	bne	1d53c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x96b0>
   1d350:	movw	r3, #1336	; 0x538
   1d354:	movt	r3, #10
   1d358:	mov	r2, #3
   1d35c:	str	r2, [r3, #28]
   1d360:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d364:	movw	r3, #1336	; 0x538
   1d368:	movt	r3, #10
   1d36c:	mov	r2, #1
   1d370:	str	r2, [r3, #56]	; 0x38
   1d374:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d378:	mov	r0, ip
   1d37c:	mov	r2, #5
   1d380:	movw	r1, #1104	; 0x450
   1d384:	movt	r1, #5
   1d388:	bl	13688 <dcgettext@plt>
   1d38c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d390:	b	1c794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8908>
   1d394:	mov	r2, #5
   1d398:	movw	r1, #536	; 0x218
   1d39c:	mov	r0, #0
   1d3a0:	movt	r1, #5
   1d3a4:	bl	13688 <dcgettext@plt>
   1d3a8:	ldrb	r1, [r5]
   1d3ac:	movw	r2, #62400	; 0xf3c0
   1d3b0:	movw	r3, #62392	; 0xf3b8
   1d3b4:	and	r1, r1, #3
   1d3b8:	movt	r2, #4
   1d3bc:	cmp	r1, #3
   1d3c0:	movt	r3, #4
   1d3c4:	movne	r1, r2
   1d3c8:	moveq	r1, r3
   1d3cc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d3d0:	b	1c41c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8590>
   1d3d4:	mov	r2, #5
   1d3d8:	movw	r1, #712	; 0x2c8
   1d3dc:	movt	r1, #5
   1d3e0:	bl	13688 <dcgettext@plt>
   1d3e4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d3e8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d3ec:	mov	r2, #5
   1d3f0:	movw	r1, #636	; 0x27c
   1d3f4:	movt	r1, #5
   1d3f8:	bl	13688 <dcgettext@plt>
   1d3fc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d400:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d404:	movw	r3, #1336	; 0x538
   1d408:	movt	r3, #10
   1d40c:	mov	r2, #32768	; 0x8000
   1d410:	str	r2, [r3, #84]	; 0x54
   1d414:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d418:	mov	r2, #5
   1d41c:	movw	r1, #1160	; 0x488
   1d420:	movt	r1, #5
   1d424:	bl	13688 <dcgettext@plt>
   1d428:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d42c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d430:	movw	r1, #1336	; 0x538
   1d434:	movt	r1, #10
   1d438:	mov	r2, #1
   1d43c:	mov	r3, #0
   1d440:	strd	r2, [r1, #88]	; 0x58
   1d444:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d448:	movw	r3, #1336	; 0x538
   1d44c:	movt	r3, #10
   1d450:	mov	r2, #2
   1d454:	str	r2, [r3, #28]
   1d458:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d45c:	movw	r5, #1088	; 0x440
   1d460:	movt	r5, #10
   1d464:	ldr	r2, [sp, #44]	; 0x2c
   1d468:	ldrb	r3, [r5, #2]
   1d46c:	bfi	r3, r2, #3, #2
   1d470:	bfi	r3, r2, #5, #2
   1d474:	strb	r3, [r5, #2]
   1d478:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d47c:	mov	r2, #5
   1d480:	movw	r1, #876	; 0x36c
   1d484:	mov	r0, #0
   1d488:	movt	r1, #5
   1d48c:	bl	13688 <dcgettext@plt>
   1d490:	ldr	ip, [sp, #28]
   1d494:	ldr	r1, [ip]
   1d498:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d49c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d4a0:	mov	r0, r5
   1d4a4:	movw	r1, #8520	; 0x2148
   1d4a8:	movt	r1, #5
   1d4ac:	bl	13490 <strcmp@plt>
   1d4b0:	cmp	r0, #0
   1d4b4:	bne	1d644 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x97b8>
   1d4b8:	movw	r5, #1088	; 0x440
   1d4bc:	movt	r5, #10
   1d4c0:	ldr	ip, [sp, #44]	; 0x2c
   1d4c4:	mov	r2, #1
   1d4c8:	ldrb	r3, [r5, #2]
   1d4cc:	bfi	r3, ip, #3, #2
   1d4d0:	bfi	r3, r2, #5, #2
   1d4d4:	strb	r3, [r5, #2]
   1d4d8:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d4dc:	mov	r0, r3
   1d4e0:	mov	r2, #5
   1d4e4:	movw	r1, #1204	; 0x4b4
   1d4e8:	movt	r1, #5
   1d4ec:	bl	13688 <dcgettext@plt>
   1d4f0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d4f4:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d4f8:	mov	r2, #5
   1d4fc:	movw	r1, #504	; 0x1f8
   1d500:	mov	r0, #0
   1d504:	movt	r1, #5
   1d508:	bl	13688 <dcgettext@plt>
   1d50c:	movw	lr, #63256	; 0xf718
   1d510:	movt	lr, #9
   1d514:	ldr	r3, [lr]
   1d518:	ldr	r1, [sl, r3, lsl #2]
   1d51c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d520:	b	1c408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x857c>
   1d524:	mov	r2, #5
   1d528:	movw	r1, #740	; 0x2e4
   1d52c:	movt	r1, #5
   1d530:	bl	13688 <dcgettext@plt>
   1d534:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d538:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d53c:	mov	r0, r5
   1d540:	movw	r1, #1260	; 0x4ec
   1d544:	movt	r1, #5
   1d548:	bl	13748 <strcasecmp@plt>
   1d54c:	cmp	r0, #0
   1d550:	bne	1d628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x979c>
   1d554:	movw	r3, #1336	; 0x538
   1d558:	movt	r3, #10
   1d55c:	mov	r2, #1
   1d560:	str	r2, [r3, #28]
   1d564:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d568:	mov	r2, #5
   1d56c:	movw	r1, #824	; 0x338
   1d570:	mov	r0, #0
   1d574:	movt	r1, #5
   1d578:	bl	13688 <dcgettext@plt>
   1d57c:	ldr	ip, [sp, #28]
   1d580:	ldr	r1, [ip]
   1d584:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d588:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d58c:	ldr	ip, [sp, #28]
   1d590:	ldr	r0, [ip]
   1d594:	bl	137e4 <xstrdup@plt>
   1d598:	str	r0, [r5, #68]	; 0x44
   1d59c:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d5a0:	mov	r2, #5
   1d5a4:	movw	r1, #920	; 0x398
   1d5a8:	movt	r1, #5
   1d5ac:	bl	13688 <dcgettext@plt>
   1d5b0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d5b4:	ldr	r3, [r5]
   1d5b8:	b	1b9a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7b14>
   1d5bc:	ldr	ip, [sp, #56]	; 0x38
   1d5c0:	ldr	r0, [ip]
   1d5c4:	bl	137e4 <xstrdup@plt>
   1d5c8:	str	r0, [r6, #64]	; 0x40
   1d5cc:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d5d0:	mov	r2, #5
   1d5d4:	movw	r1, #588	; 0x24c
   1d5d8:	mov	r0, #0
   1d5dc:	movt	r1, #5
   1d5e0:	bl	13688 <dcgettext@plt>
   1d5e4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d5e8:	b	1b2c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x7434>
   1d5ec:	mov	r2, #5
   1d5f0:	movw	r1, #668	; 0x29c
   1d5f4:	mov	r0, #0
   1d5f8:	movt	r1, #5
   1d5fc:	bl	13688 <dcgettext@plt>
   1d600:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d604:	b	1c4dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x8650>
   1d608:	mov	r0, #8
   1d60c:	bl	137b4 <xmalloc@plt>
   1d610:	ldr	ip, [sp, #28]
   1d614:	ldr	r3, [ip]
   1d618:	str	r0, [r6, #76]	; 0x4c
   1d61c:	stm	r0, {r3, r5}
   1d620:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d624:	bl	13694 <__stack_chk_fail@plt>
   1d628:	mov	r2, #5
   1d62c:	movw	r1, #1268	; 0x4f4
   1d630:	mov	r0, #0
   1d634:	movt	r1, #5
   1d638:	bl	13688 <dcgettext@plt>
   1d63c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d640:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d644:	mov	r2, #5
   1d648:	movw	r1, #428	; 0x1ac
   1d64c:	mov	r0, #0
   1d650:	movt	r1, #5
   1d654:	bl	13688 <dcgettext@plt>
   1d658:	ldr	ip, [sp, #28]
   1d65c:	ldr	r1, [ip]
   1d660:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1d664:	b	1a96c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6ae0>
   1d668:	ldr	r0, [r2]
   1d66c:	cmp	r0, #0
   1d670:	streq	r1, [r2]
   1d674:	movne	r0, #1
   1d678:	strne	r0, [r2, #4]
   1d67c:	bx	lr
   1d680:	movw	r2, #1048	; 0x418
   1d684:	movt	r2, #10
   1d688:	ldr	r3, [r0]
   1d68c:	mov	r1, r0
   1d690:	ldr	r2, [r2]
   1d694:	push	{r4}		; (str r4, [sp, #-4]!)
   1d698:	subs	r2, r2, r0
   1d69c:	rsbs	r0, r2, #0
   1d6a0:	adcs	r0, r0, r2
   1d6a4:	cmp	r3, #0
   1d6a8:	beq	1d740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98b4>
   1d6ac:	mov	ip, #0
   1d6b0:	ldr	r2, [r3, #4]
   1d6b4:	cmp	r2, #15
   1d6b8:	ldrls	pc, [pc, r2, lsl #2]
   1d6bc:	b	1d740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98b4>
   1d6c0:	andeq	sp, r1, r4, ror #14
   1d6c4:	andeq	sp, r1, r0, lsl #14
   1d6c8:	andeq	sp, r1, r0, lsr r7
   1d6cc:	andeq	sp, r1, r0, lsr r7
   1d6d0:	andeq	sp, r1, ip, asr #14
   1d6d4:	andeq	sp, r1, ip, asr #14
   1d6d8:	andeq	sp, r1, ip, asr #14
   1d6dc:	andeq	sp, r1, ip, asr #14
   1d6e0:	andeq	sp, r1, ip, asr #14
   1d6e4:	andeq	sp, r1, ip, asr #14
   1d6e8:	andeq	sp, r1, r0, lsr r7
   1d6ec:	andeq	sp, r1, r0, lsr r7
   1d6f0:	andeq	sp, r1, ip, asr #14
   1d6f4:	andeq	sp, r1, r0, lsr r7
   1d6f8:	andeq	sp, r1, r0, lsr r7
   1d6fc:	andeq	sp, r1, ip, asr #14
   1d700:	cmp	ip, #0
   1d704:	movne	r0, #0
   1d708:	bne	1d730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98a4>
   1d70c:	ldr	r2, [r3, #8]
   1d710:	ldr	r4, [r2, #12]
   1d714:	cmp	r4, #8
   1d718:	beq	1d72c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98a0>
   1d71c:	ldr	r2, [r2, #16]
   1d720:	ldrb	r4, [r2]
   1d724:	cmp	r4, #46	; 0x2e
   1d728:	beq	1d7a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9918>
   1d72c:	mov	r0, ip
   1d730:	mov	r1, r3
   1d734:	ldr	r3, [r3]
   1d738:	cmp	r3, #0
   1d73c:	bne	1d6b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9824>
   1d740:	mov	r0, r1
   1d744:	pop	{r4}		; (ldr r4, [sp], #4)
   1d748:	bx	lr
   1d74c:	mov	r1, r3
   1d750:	ldr	r3, [r3]
   1d754:	mov	ip, #0
   1d758:	cmp	r3, #0
   1d75c:	bne	1d6b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9824>
   1d760:	b	1d740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98b4>
   1d764:	cmp	ip, #0
   1d768:	beq	1d740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98b4>
   1d76c:	ldr	r3, [r3, #28]
   1d770:	cmp	r3, #0
   1d774:	beq	1d79c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9910>
   1d778:	ldr	r2, [r3, #192]	; 0xc0
   1d77c:	cmp	r2, #0
   1d780:	beq	1d79c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9910>
   1d784:	ldr	r3, [r3, #20]
   1d788:	pop	{r4}		; (ldr r4, [sp], #4)
   1d78c:	tst	r3, #1
   1d790:	movne	r1, ip
   1d794:	mov	r0, r1
   1d798:	bx	lr
   1d79c:	mov	r1, ip
   1d7a0:	b	1d740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98b4>
   1d7a4:	ldrb	r2, [r2, #1]
   1d7a8:	cmp	r2, #0
   1d7ac:	bne	1d72c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98a0>
   1d7b0:	cmp	r0, #0
   1d7b4:	moveq	ip, r1
   1d7b8:	beq	1d730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98a4>
   1d7bc:	b	1d72c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x98a0>
   1d7c0:	ldr	r3, [r0]
   1d7c4:	ldr	r2, [r1]
   1d7c8:	ldrd	r0, [r3, #24]
   1d7cc:	ldrd	r2, [r2, #24]
   1d7d0:	cmp	r1, r3
   1d7d4:	cmpeq	r0, r2
   1d7d8:	bcc	1d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x995c>
   1d7dc:	movls	r0, #0
   1d7e0:	movhi	r0, #1
   1d7e4:	bx	lr
   1d7e8:	mvn	r0, #0
   1d7ec:	bx	lr
   1d7f0:	push	{r4}		; (str r4, [sp, #-4]!)
   1d7f4:	ldr	ip, [r0]
   1d7f8:	ldr	r4, [r1]
   1d7fc:	ldrd	r0, [ip, #40]	; 0x28
   1d800:	ldrd	r2, [r4, #40]	; 0x28
   1d804:	cmp	r1, r3
   1d808:	cmpeq	r0, r2
   1d80c:	bcc	1d838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99ac>
   1d810:	movhi	r0, #1
   1d814:	bhi	1d830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99a4>
   1d818:	ldr	r2, [ip, #4]
   1d81c:	ldr	r3, [r4, #4]
   1d820:	cmp	r2, r3
   1d824:	bcc	1d838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99ac>
   1d828:	movls	r0, #0
   1d82c:	movhi	r0, #1
   1d830:	pop	{r4}		; (ldr r4, [sp], #4)
   1d834:	bx	lr
   1d838:	mvn	r0, #0
   1d83c:	b	1d830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99a4>
   1d840:	push	{r4}		; (str r4, [sp, #-4]!)
   1d844:	ldr	ip, [r0]
   1d848:	ldr	r4, [r1]
   1d84c:	ldrd	r0, [ip, #32]
   1d850:	ldrd	r2, [r4, #32]
   1d854:	cmp	r1, r3
   1d858:	cmpeq	r0, r2
   1d85c:	bcc	1d888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99fc>
   1d860:	movhi	r0, #1
   1d864:	bhi	1d880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99f4>
   1d868:	ldr	r2, [ip, #4]
   1d86c:	ldr	r3, [r4, #4]
   1d870:	cmp	r2, r3
   1d874:	bcc	1d888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99fc>
   1d878:	movls	r0, #0
   1d87c:	movhi	r0, #1
   1d880:	pop	{r4}		; (ldr r4, [sp], #4)
   1d884:	bx	lr
   1d888:	mvn	r0, #0
   1d88c:	b	1d880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x99f4>
   1d890:	push	{r0, r1, r2, r3}
   1d894:	add	sp, sp, #16
   1d898:	bx	lr
   1d89c:	ldr	r3, [r0, #20]
   1d8a0:	cmp	r3, #0
   1d8a4:	ldrne	r3, [r2, #20]
   1d8a8:	orrne	r3, r3, #2097152	; 0x200000
   1d8ac:	strne	r3, [r2, #20]
   1d8b0:	bx	lr
   1d8b4:	push	{r3, r4, r5, lr}
   1d8b8:	mov	r5, r0
   1d8bc:	ldr	r2, [r1]
   1d8c0:	mov	r4, r1
   1d8c4:	ldr	r3, [r0]
   1d8c8:	cmp	r2, r3
   1d8cc:	beq	1d8e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a54>
   1d8d0:	movw	r0, #10132	; 0x2794
   1d8d4:	movw	r1, #6761	; 0x1a69
   1d8d8:	movt	r0, #5
   1d8dc:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   1d8e0:	ldr	r3, [r4, #4]
   1d8e4:	mov	r2, #0
   1d8e8:	ldr	r0, [r5, #4]
   1d8ec:	ldr	r1, [r3]
   1d8f0:	str	r0, [r4, #4]
   1d8f4:	str	r1, [r4]
   1d8f8:	str	r3, [r5, #4]
   1d8fc:	str	r2, [r3]
   1d900:	pop	{r3, r4, r5, pc}
   1d904:	cmp	r0, #0
   1d908:	push	{r4, r5, lr}
   1d90c:	mov	r4, r1
   1d910:	sub	sp, sp, #12
   1d914:	beq	1d9a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b18>
   1d918:	mov	r1, r4
   1d91c:	bl	1361c <bfd_hash_newfunc@plt>
   1d920:	subs	r4, r0, #0
   1d924:	beq	1d9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b34>
   1d928:	add	r5, r4, #16
   1d92c:	mov	r1, #0
   1d930:	mov	r2, #88	; 0x58
   1d934:	mov	r0, r5
   1d938:	bl	13af0 <memset@plt>
   1d93c:	movw	r3, #62408	; 0xf3c8
   1d940:	movt	r3, #9
   1d944:	mvn	r1, #0
   1d948:	add	r0, r4, #24
   1d94c:	str	r1, [r4, #80]	; 0x50
   1d950:	ldr	r2, [r3]
   1d954:	mov	ip, #1
   1d958:	str	r0, [r4, #28]
   1d95c:	movw	r3, #1048	; 0x418
   1d960:	str	r1, [r4, #84]	; 0x54
   1d964:	movt	r3, #10
   1d968:	str	ip, [r4, #76]	; 0x4c
   1d96c:	mov	r0, r4
   1d970:	ldr	r1, [r2, #4]
   1d974:	add	r4, r4, #32
   1d978:	str	r5, [r1]
   1d97c:	str	r5, [r2, #4]
   1d980:	ldr	r1, [r3]
   1d984:	ldr	r2, [r3, #4]
   1d988:	cmp	r1, #0
   1d98c:	subne	r1, r2, #16
   1d990:	strne	r1, [r4, #4]
   1d994:	str	r5, [r2]
   1d998:	str	r4, [r3, #4]
   1d99c:	add	sp, sp, #12
   1d9a0:	pop	{r4, r5, pc}
   1d9a4:	mov	r0, r1
   1d9a8:	mov	r1, #104	; 0x68
   1d9ac:	str	r2, [sp, #4]
   1d9b0:	bl	13928 <bfd_hash_allocate@plt>
   1d9b4:	ldr	r2, [sp, #4]
   1d9b8:	cmp	r0, #0
   1d9bc:	bne	1d918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a8c>
   1d9c0:	mov	r0, #0
   1d9c4:	add	sp, sp, #12
   1d9c8:	pop	{r4, r5, pc}
   1d9cc:	push	{r3, lr}
   1d9d0:	ldr	r0, [r0]
   1d9d4:	bl	13490 <strcmp@plt>
   1d9d8:	rsbs	r0, r0, #1
   1d9dc:	movcc	r0, #0
   1d9e0:	pop	{r3, pc}
   1d9e4:	push	{r3, lr}
   1d9e8:	ldr	r0, [r0, #4]
   1d9ec:	ldr	r1, [r1, #4]
   1d9f0:	bl	13490 <strcmp@plt>
   1d9f4:	rsbs	r0, r0, #1
   1d9f8:	movcc	r0, #0
   1d9fc:	pop	{r3, pc}
   1da00:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1da04:	movw	r5, #1468	; 0x5bc
   1da08:	movt	r5, #10
   1da0c:	mov	r4, r0
   1da10:	ldr	r3, [r5]
   1da14:	cmp	r3, #0
   1da18:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1da1c:	cmp	r3, #2
   1da20:	bhi	1db34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ca8>
   1da24:	cmp	r0, #0
   1da28:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1da2c:	movw	r6, #1060	; 0x424
   1da30:	movt	r6, #10
   1da34:	mov	r8, #3
   1da38:	mov	r7, #4
   1da3c:	ldr	r3, [r4, #4]
   1da40:	cmp	r3, #15
   1da44:	ldrls	pc, [pc, r3, lsl #2]
   1da48:	b	1dac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c3c>
   1da4c:	andeq	sp, r1, ip, lsl #21
   1da50:	andeq	sp, r1, r8, asr #21
   1da54:	andeq	sp, r1, r8, asr #21
   1da58:	andeq	sp, r1, r8, asr #21
   1da5c:	ldrdeq	sp, [r1], -r8
   1da60:	andeq	sp, r1, r8, asr #21
   1da64:	andeq	sp, r1, r8, asr #21
   1da68:	andeq	sp, r1, r8, asr #21
   1da6c:	andeq	sp, r1, r8, asr #21
   1da70:	andeq	sp, r1, r8, asr #21
   1da74:	andeq	sp, r1, r8, asr #21
   1da78:	andeq	sp, r1, r8, asr #21
   1da7c:	andeq	sp, r1, r8, asr #21
   1da80:	andeq	sp, r1, r0, asr #21
   1da84:	andeq	sp, r1, r8, asr #21
   1da88:	andeq	sp, r1, r8, lsr #22
   1da8c:	ldr	r9, [r4, #24]
   1da90:	movw	r1, #10144	; 0x27a0
   1da94:	movt	r1, #5
   1da98:	mov	r0, r9
   1da9c:	bl	13490 <strcmp@plt>
   1daa0:	cmp	r0, #0
   1daa4:	beq	1dac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c3c>
   1daa8:	mov	r0, r9
   1daac:	movw	r1, #10152	; 0x27a8
   1dab0:	movt	r1, #5
   1dab4:	bl	13490 <strcmp@plt>
   1dab8:	cmp	r0, #0
   1dabc:	beq	1dac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c3c>
   1dac0:	ldr	r0, [r4, #8]
   1dac4:	bl	1da00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b74>
   1dac8:	ldr	r4, [r4]
   1dacc:	cmp	r4, #0
   1dad0:	bne	1da3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9bb0>
   1dad4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1dad8:	ldr	r3, [r4, #16]
   1dadc:	cmp	r3, #0
   1dae0:	beq	1dac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c3c>
   1dae4:	ldr	r1, [r5]
   1dae8:	b	1db10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c84>
   1daec:	strcc	r1, [r3, #12]
   1daf0:	bcc	1db04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c78>
   1daf4:	cmp	r2, #2
   1daf8:	bne	1db04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c78>
   1dafc:	cmp	r1, #1
   1db00:	streq	r7, [r3, #12]
   1db04:	ldr	r3, [r3]
   1db08:	cmp	r3, #0
   1db0c:	beq	1dac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c3c>
   1db10:	ldr	r2, [r3, #12]
   1db14:	cmp	r2, #1
   1db18:	bne	1daec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c60>
   1db1c:	cmp	r1, #2
   1db20:	streq	r8, [r3, #12]
   1db24:	b	1db04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c78>
   1db28:	ldr	r0, [r6]
   1db2c:	bl	1da00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b74>
   1db30:	b	1dac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9c3c>
   1db34:	movw	r0, #10132	; 0x2794
   1db38:	movw	r1, #3524	; 0xdc4
   1db3c:	movt	r0, #5
   1db40:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   1db44:	b	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   1db48:	tst	r0, #1
   1db4c:	push	{r4, lr}
   1db50:	mov	r4, r0
   1db54:	bne	1dbc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d34>
   1db58:	tst	r4, #16
   1db5c:	bne	1dbb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d24>
   1db60:	tst	r4, #8
   1db64:	bne	1dba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d14>
   1db68:	tst	r4, #32
   1db6c:	bne	1db88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cfc>
   1db70:	tst	r4, #2
   1db74:	popeq	{r4, pc}
   1db78:	movw	r0, #29188	; 0x7204
   1db7c:	movt	r0, #4
   1db80:	pop	{r4, lr}
   1db84:	b	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1db88:	movw	r0, #5056	; 0x13c0
   1db8c:	movt	r0, #5
   1db90:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1db94:	tst	r4, #2
   1db98:	popeq	{r4, pc}
   1db9c:	b	1db78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cec>
   1dba0:	movw	r0, #8320	; 0x2080
   1dba4:	movt	r0, #7
   1dba8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1dbac:	b	1db68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cdc>
   1dbb0:	movw	r0, #10664	; 0x29a8
   1dbb4:	movt	r0, #5
   1dbb8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1dbbc:	b	1db60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cd4>
   1dbc0:	movw	r0, #31472	; 0x7af0
   1dbc4:	movt	r0, #4
   1dbc8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1dbcc:	b	1db58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9ccc>
   1dbd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dbd4:	subs	r9, r0, #0
   1dbd8:	sub	sp, sp, #52	; 0x34
   1dbdc:	mov	r8, r1
   1dbe0:	mov	fp, r2
   1dbe4:	ldr	sl, [sp, #96]	; 0x60
   1dbe8:	beq	1dd44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb8>
   1dbec:	movw	r6, #65288	; 0xff08
   1dbf0:	movw	r7, #1480	; 0x5c8
   1dbf4:	movt	r6, #9
   1dbf8:	movt	r7, #10
   1dbfc:	movw	r3, #1028	; 0x404
   1dc00:	strd	r4, [sp, #16]
   1dc04:	movt	r3, #10
   1dc08:	str	r3, [sp, #36]	; 0x24
   1dc0c:	ldr	r3, [r9, #4]
   1dc10:	cmp	r3, #15
   1dc14:	ldrls	pc, [pc, r3, lsl #2]
   1dc18:	b	1dfe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa154>
   1dc1c:	andeq	sp, r1, ip, asr ip
   1dc20:	andeq	sp, r1, ip, lsl #28
   1dc24:	andeq	sp, r1, r8, lsr sp
   1dc28:	andeq	sp, r1, r8, lsr sp
   1dc2c:	andeq	sp, r1, r4, lsl #28
   1dc30:	andeq	sp, r1, r0, asr sp
   1dc34:	andeq	sp, r1, r8, lsr sp
   1dc38:	andeq	sp, r1, ip, asr #31
   1dc3c:	andeq	sp, r1, r0, ror #30
   1dc40:	andeq	sp, r1, ip, lsl #30
   1dc44:	andeq	sp, r1, r8, lsr sp
   1dc48:	andeq	sp, r1, r8, lsr sp
   1dc4c:	andeq	sp, r1, ip, lsr #29
   1dc50:	andeq	sp, r1, r0, asr #27
   1dc54:	andeq	sp, r1, r8, lsr sp
   1dc58:	strdeq	sp, [r1], -r0
   1dc5c:	ldr	r2, [r9, #28]
   1dc60:	ldr	r1, [sl]
   1dc64:	ldrb	r3, [r9, #84]	; 0x54
   1dc68:	cmp	r2, #0
   1dc6c:	bfi	r3, r1, #5, #1
   1dc70:	strb	r3, [r9, #84]	; 0x54
   1dc74:	beq	1dd38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eac>
   1dc78:	uxtb	r3, r3
   1dc7c:	ubfx	r3, r3, #3, #1
   1dc80:	cmp	r3, #0
   1dc84:	bne	1dd38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eac>
   1dc88:	ldrd	r4, [r2, #32]
   1dc8c:	ldr	r1, [r2, #20]
   1dc90:	ldr	r0, [r9, #8]
   1dc94:	tst	r1, #1
   1dc98:	ldr	r2, [r9, #40]	; 0x28
   1dc9c:	mov	r1, r9
   1dca0:	strd	r4, [sp]
   1dca4:	str	sl, [sp, #8]
   1dca8:	strne	r3, [r6, #4]
   1dcac:	strne	r9, [r6]
   1dcb0:	strd	r4, [sp, #88]	; 0x58
   1dcb4:	bl	1dbd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d44>
   1dcb8:	ldr	r2, [r9, #28]
   1dcbc:	movw	r3, #1026	; 0x402
   1dcc0:	ldr	r1, [r2, #20]
   1dcc4:	and	r3, r1, r3
   1dcc8:	cmp	r3, #1024	; 0x400
   1dccc:	beq	1e09c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa210>
   1dcd0:	ldr	r3, [r2, #48]	; 0x30
   1dcd4:	ldr	r1, [r6, #8]
   1dcd8:	ldr	r0, [r2, #52]	; 0x34
   1dcdc:	lsr	r3, r3, r1
   1dce0:	str	r3, [sp, #40]	; 0x28
   1dce4:	ldr	r5, [sp, #40]	; 0x28
   1dce8:	rsb	r3, r1, #32
   1dcec:	orr	r3, r5, r0, lsl r3
   1dcf0:	str	r3, [sp, #40]	; 0x28
   1dcf4:	ldr	r2, [sp, #40]	; 0x28
   1dcf8:	sub	r3, r1, #32
   1dcfc:	orr	r3, r2, r0, lsr r3
   1dd00:	lsr	r0, r0, r1
   1dd04:	str	r3, [sp, #40]	; 0x28
   1dd08:	str	r0, [sp, #44]	; 0x2c
   1dd0c:	ldrd	r2, [sp, #88]	; 0x58
   1dd10:	ldrd	r4, [sp, #40]	; 0x28
   1dd14:	adds	r2, r2, r4
   1dd18:	adc	r3, r3, r5
   1dd1c:	strd	r2, [sp, #88]	; 0x58
   1dd20:	ldr	r0, [r9, #52]	; 0x34
   1dd24:	cmp	r0, #0
   1dd28:	beq	1dd38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eac>
   1dd2c:	ldr	r1, [pc, #928]	; 1e0d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa248>
   1dd30:	add	r2, sp, #88	; 0x58
   1dd34:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   1dd38:	ldr	r9, [r9]
   1dd3c:	cmp	r9, #0
   1dd40:	bne	1dc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d80>
   1dd44:	ldrd	r0, [sp, #88]	; 0x58
   1dd48:	add	sp, sp, #52	; 0x34
   1dd4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dd50:	ldr	r2, [r9, #8]
   1dd54:	ldr	r3, [r2, #20]
   1dd58:	tst	r3, #32768	; 0x8000
   1dd5c:	bne	1dd38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eac>
   1dd60:	ldr	r3, [r2, #48]	; 0x30
   1dd64:	ldr	r1, [r6, #8]
   1dd68:	ldr	r0, [r2, #52]	; 0x34
   1dd6c:	lsr	r3, r3, r1
   1dd70:	str	r3, [sp, #24]
   1dd74:	ldr	r5, [sp, #24]
   1dd78:	rsb	r3, r1, #32
   1dd7c:	orr	r3, r5, r0, lsl r3
   1dd80:	str	r3, [sp, #24]
   1dd84:	ldr	r2, [sp, #24]
   1dd88:	sub	r3, r1, #32
   1dd8c:	orr	r3, r2, r0, lsr r3
   1dd90:	lsr	r0, r0, r1
   1dd94:	str	r3, [sp, #24]
   1dd98:	str	r0, [sp, #28]
   1dd9c:	ldrd	r2, [sp, #88]	; 0x58
   1dda0:	ldrd	r4, [sp, #24]
   1dda4:	adds	r2, r2, r4
   1dda8:	adc	r3, r3, r5
   1ddac:	strd	r2, [sp, #88]	; 0x58
   1ddb0:	ldr	r9, [r9]
   1ddb4:	cmp	r9, #0
   1ddb8:	bne	1dc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d80>
   1ddbc:	b	1dd44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb8>
   1ddc0:	ldr	r0, [r9, #8]
   1ddc4:	mov	r1, r8
   1ddc8:	ldrd	r4, [sp, #88]	; 0x58
   1ddcc:	mov	r2, fp
   1ddd0:	str	sl, [sp, #8]
   1ddd4:	strd	r4, [sp]
   1ddd8:	bl	1dbd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d44>
   1dddc:	strd	r0, [sp, #88]	; 0x58
   1dde0:	ldr	r9, [r9]
   1dde4:	cmp	r9, #0
   1dde8:	bne	1dc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d80>
   1ddec:	b	1dd44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb8>
   1ddf0:	movw	r3, #1060	; 0x424
   1ddf4:	movt	r3, #10
   1ddf8:	mov	r1, r8
   1ddfc:	ldr	r0, [r3]
   1de00:	b	1ddc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f3c>
   1de04:	ldr	r0, [r9, #24]
   1de08:	b	1ddc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9f38>
   1de0c:	ldr	r0, [r9, #8]
   1de10:	str	r9, [r6, #12]
   1de14:	ldr	r3, [r0, #12]
   1de18:	cmp	r3, #8
   1de1c:	beq	1de90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa004>
   1de20:	ldr	r5, [sp, #36]	; 0x24
   1de24:	ldr	r1, [r0, #16]
   1de28:	ldr	r3, [r5]
   1de2c:	ldrb	r2, [r1]
   1de30:	cmp	r8, r3
   1de34:	beq	1e0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa22c>
   1de38:	cmp	r2, #95	; 0x5f
   1de3c:	bne	1de5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9fd0>
   1de40:	ldrd	r4, [sp, #16]
   1de44:	add	r3, r1, #1
   1de48:	mov	r1, r3
   1de4c:	ldrb	r2, [r3], #1
   1de50:	cmp	r2, #95	; 0x5f
   1de54:	beq	1de48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9fbc>
   1de58:	strd	r4, [sp, #16]
   1de5c:	cmp	r2, #101	; 0x65
   1de60:	bne	1de90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa004>
   1de64:	ldrb	r3, [r1, #1]
   1de68:	cmp	r3, #110	; 0x6e
   1de6c:	bne	1de90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa004>
   1de70:	ldrb	r3, [r1, #2]
   1de74:	cmp	r3, #100	; 0x64
   1de78:	bne	1de90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa004>
   1de7c:	ldrb	r3, [r1, #3]
   1de80:	cmp	r3, #0
   1de84:	moveq	r3, #1
   1de88:	streq	r3, [sl]
   1de8c:	ldreq	r0, [r9, #8]
   1de90:	ldr	r1, [r8, #28]
   1de94:	add	r2, sp, #88	; 0x58
   1de98:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   1de9c:	ldr	r9, [r9]
   1dea0:	cmp	r9, #0
   1dea4:	bne	1dc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d80>
   1dea8:	b	1dd44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb8>
   1deac:	ldr	r3, [r9, #16]
   1deb0:	ldr	r1, [r6, #8]
   1deb4:	ldr	r0, [r9, #20]
   1deb8:	lsr	r3, r3, r1
   1debc:	str	r3, [sp, #16]
   1dec0:	ldr	r2, [sp, #16]
   1dec4:	rsb	r3, r1, #32
   1dec8:	sub	ip, r1, #32
   1decc:	orr	r3, r2, r0, lsl r3
   1ded0:	str	r3, [sp, #16]
   1ded4:	ldr	r4, [sp, #16]
   1ded8:	ldrd	r2, [sp, #88]	; 0x58
   1dedc:	orr	ip, r4, r0, lsr ip
   1dee0:	lsr	r0, r0, r1
   1dee4:	str	ip, [sp, #16]
   1dee8:	str	r0, [sp, #20]
   1deec:	ldrd	r4, [sp, #16]
   1def0:	adds	r2, r2, r4
   1def4:	adc	r3, r3, r5
   1def8:	strd	r2, [sp, #88]	; 0x58
   1defc:	ldr	r9, [r9]
   1df00:	cmp	r9, #0
   1df04:	bne	1dc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d80>
   1df08:	b	1dd44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb8>
   1df0c:	ldr	r0, [r9, #24]
   1df10:	add	r2, sp, #88	; 0x58
   1df14:	ldr	r1, [pc, #440]	; 1e0d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa248>
   1df18:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   1df1c:	ldr	r0, [r7, #32]
   1df20:	cmp	r0, #0
   1df24:	beq	1e054 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa1c8>
   1df28:	ldrd	r2, [r7, #16]
   1df2c:	strd	r2, [r9, #32]
   1df30:	ldr	r0, [r9, #12]
   1df34:	bl	136a0 <bfd_get_reloc_size@plt>
   1df38:	ldr	r1, [r6, #8]
   1df3c:	ldrd	r2, [sp, #88]	; 0x58
   1df40:	lsr	r0, r0, r1
   1df44:	adds	r2, r2, r0
   1df48:	adc	r3, r3, #0
   1df4c:	strd	r2, [sp, #88]	; 0x58
   1df50:	ldr	r9, [r9]
   1df54:	cmp	r9, #0
   1df58:	bne	1dc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d80>
   1df5c:	b	1dd44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb8>
   1df60:	ldr	r0, [r9, #12]
   1df64:	add	r2, sp, #88	; 0x58
   1df68:	ldr	r1, [pc, #356]	; 1e0d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa248>
   1df6c:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   1df70:	ldr	r0, [r7, #32]
   1df74:	cmp	r0, #0
   1df78:	beq	1e06c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa1e0>
   1df7c:	ldrd	r0, [r7, #16]
   1df80:	strd	r0, [r9, #16]
   1df84:	ldr	r3, [r7, #28]
   1df88:	cmp	r3, #0
   1df8c:	beq	1dfa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa114>
   1df90:	ldrd	r2, [r3, #32]
   1df94:	adds	r2, r2, r0
   1df98:	adc	r3, r3, r1
   1df9c:	strd	r2, [r9, #16]
   1dfa0:	ldr	r3, [r9, #8]
   1dfa4:	sub	r3, r3, #280	; 0x118
   1dfa8:	sub	r3, r3, #2
   1dfac:	cmp	r3, #4
   1dfb0:	ldrls	pc, [pc, r3, lsl #2]
   1dfb4:	b	1e084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa1f8>
   1dfb8:	andeq	lr, r1, ip, lsr r0
   1dfbc:	andeq	lr, r1, ip, lsr r0
   1dfc0:	andeq	lr, r1, r0
   1dfc4:	andeq	lr, r1, ip, asr #32
   1dfc8:	andeq	lr, r1, r4, asr #32
   1dfcc:	ldr	fp, [r9, #8]
   1dfd0:	ldr	r9, [r9]
   1dfd4:	cmp	r9, #0
   1dfd8:	bne	1dc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d80>
   1dfdc:	b	1dd44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb8>
   1dfe0:	movw	r0, #10132	; 0x2794
   1dfe4:	movw	r1, #5751	; 0x1677
   1dfe8:	movt	r0, #5
   1dfec:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   1dff0:	ldr	r9, [r9]
   1dff4:	cmp	r9, #0
   1dff8:	bne	1dc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d80>
   1dffc:	b	1dd44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb8>
   1e000:	mov	r2, #4
   1e004:	ldr	r3, [r6, #8]
   1e008:	mov	r1, #1
   1e00c:	lsl	r1, r1, r3
   1e010:	cmp	r2, r1
   1e014:	movcs	r1, r2
   1e018:	lsr	r1, r1, r3
   1e01c:	ldrd	r2, [sp, #88]	; 0x58
   1e020:	adds	r2, r2, r1
   1e024:	adc	r3, r3, #0
   1e028:	strd	r2, [sp, #88]	; 0x58
   1e02c:	ldr	r9, [r9]
   1e030:	cmp	r9, #0
   1e034:	bne	1dc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d80>
   1e038:	b	1dd44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9eb8>
   1e03c:	mov	r2, #8
   1e040:	b	1e004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa178>
   1e044:	mov	r2, #1
   1e048:	b	1e004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa178>
   1e04c:	mov	r2, #2
   1e050:	b	1e004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa178>
   1e054:	mov	r2, #5
   1e058:	movw	r1, #10192	; 0x27d0
   1e05c:	movt	r1, #5
   1e060:	bl	13688 <dcgettext@plt>
   1e064:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1e068:	b	1df30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa0a4>
   1e06c:	mov	r2, #5
   1e070:	movw	r1, #10160	; 0x27b0
   1e074:	movt	r1, #5
   1e078:	bl	13688 <dcgettext@plt>
   1e07c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1e080:	b	1dfa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa114>
   1e084:	movw	r0, #10132	; 0x2794
   1e088:	movw	r2, #9996	; 0x270c
   1e08c:	movt	r0, #5
   1e090:	movt	r2, #5
   1e094:	movw	r1, #5669	; 0x1625
   1e098:	bl	135d4 <_bfd_abort@plt>
   1e09c:	movw	r3, #1088	; 0x440
   1e0a0:	movt	r3, #10
   1e0a4:	ldrb	r3, [r3]
   1e0a8:	and	r3, r3, #3
   1e0ac:	cmp	r3, #2
   1e0b0:	bne	1dd20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e94>
   1e0b4:	b	1dcd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9e44>
   1e0b8:	cmp	r2, #46	; 0x2e
   1e0bc:	bne	1de38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9fac>
   1e0c0:	ldrb	r3, [r1, #1]
   1e0c4:	cmp	r3, #0
   1e0c8:	moveq	r3, #1
   1e0cc:	streq	r3, [r6, #4]
   1e0d0:	b	1de90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa004>
   1e0d4:			; <UNDEFINED> instruction: 0x0009fab8
   1e0d8:	push	{r4, r5, lr}
   1e0dc:	movw	r4, #1088	; 0x440
   1e0e0:	sub	sp, sp, #12
   1e0e4:	movt	r4, #10
   1e0e8:	mov	r1, r0
   1e0ec:	mov	r2, #1
   1e0f0:	ldr	r0, [r4, #32]
   1e0f4:	mov	r3, #0
   1e0f8:	str	r2, [sp]
   1e0fc:	bl	13880 <bfd_link_hash_lookup@plt>
   1e100:	subs	r5, r0, #0
   1e104:	beq	1e13c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2b0>
   1e108:	ldrb	r3, [r5, #12]
   1e10c:	cmp	r3, #0
   1e110:	beq	1e11c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa290>
   1e114:	add	sp, sp, #12
   1e118:	pop	{r4, r5, pc}
   1e11c:	str	r3, [r5, #20]
   1e120:	mov	r1, r5
   1e124:	mov	r3, #1
   1e128:	ldr	r0, [r4, #32]
   1e12c:	strb	r3, [r5, #12]
   1e130:	add	sp, sp, #12
   1e134:	pop	{r4, r5, lr}
   1e138:	b	13874 <bfd_link_add_undef@plt>
   1e13c:	mov	r2, #5
   1e140:	movw	r1, #10224	; 0x27f0
   1e144:	movt	r1, #5
   1e148:	bl	13688 <dcgettext@plt>
   1e14c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1e150:	b	1e108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa27c>
   1e154:	push	{r3, r4, r5, lr}
   1e158:	mov	r5, r1
   1e15c:	bl	1340c <strstr@plt>
   1e160:	subs	r4, r0, #0
   1e164:	popeq	{r3, r4, r5, pc}
   1e168:	mov	r0, r5
   1e16c:	bl	13a24 <strlen@plt>
   1e170:	ldrb	r3, [r4, r0]
   1e174:	add	r2, r4, r0
   1e178:	cmp	r3, #0
   1e17c:	beq	1e190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa304>
   1e180:	strb	r3, [r4], #1
   1e184:	ldrb	r3, [r2, #1]!
   1e188:	cmp	r3, #0
   1e18c:	bne	1e180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2f4>
   1e190:	mov	r3, #0
   1e194:	strb	r3, [r4]
   1e198:	pop	{r3, r4, r5, pc}
   1e19c:	push	{r3, r4, r5, r6, r7, lr}
   1e1a0:	mov	r7, r1
   1e1a4:	mov	r4, r0
   1e1a8:	bl	13a24 <strlen@plt>
   1e1ac:	add	r0, r0, #1
   1e1b0:	bl	137b4 <xmalloc@plt>
   1e1b4:	mov	r6, r0
   1e1b8:	mov	r0, r7
   1e1bc:	bl	13a24 <strlen@plt>
   1e1c0:	add	r0, r0, #1
   1e1c4:	bl	137b4 <xmalloc@plt>
   1e1c8:	ldrb	r3, [r4]
   1e1cc:	cmp	r3, #0
   1e1d0:	mov	r5, r0
   1e1d4:	beq	1e2e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa45c>
   1e1d8:	movw	r2, #64600	; 0xfc58
   1e1dc:	movt	r2, #9
   1e1e0:	mov	lr, r4
   1e1e4:	mov	ip, r6
   1e1e8:	ldrb	r4, [r2, r3]
   1e1ec:	ldrb	r3, [lr, #1]!
   1e1f0:	cmp	r3, #0
   1e1f4:	strb	r4, [ip], #1
   1e1f8:	bne	1e1e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa35c>
   1e1fc:	ldrb	r3, [r7]
   1e200:	mov	r2, #0
   1e204:	strb	r2, [ip]
   1e208:	cmp	r3, r2
   1e20c:	beq	1e2e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa454>
   1e210:	movw	r2, #64600	; 0xfc58
   1e214:	movt	r2, #9
   1e218:	mov	r1, r7
   1e21c:	mov	ip, r5
   1e220:	ldrb	r0, [r2, r3]
   1e224:	ldrb	r3, [r1, #1]!
   1e228:	cmp	r3, #0
   1e22c:	strb	r0, [ip], #1
   1e230:	bne	1e220 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa394>
   1e234:	mov	r0, r6
   1e238:	movw	r1, #10264	; 0x2818
   1e23c:	mov	r4, #0
   1e240:	movt	r1, #5
   1e244:	strb	r4, [ip]
   1e248:	bl	1e154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2c8>
   1e24c:	mov	r0, r6
   1e250:	movw	r1, #10268	; 0x281c
   1e254:	movt	r1, #5
   1e258:	bl	1e154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2c8>
   1e25c:	mov	r0, r5
   1e260:	movw	r1, #10264	; 0x2818
   1e264:	movt	r1, #5
   1e268:	bl	1e154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2c8>
   1e26c:	mov	r0, r5
   1e270:	movw	r1, #10268	; 0x281c
   1e274:	movt	r1, #5
   1e278:	bl	1e154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa2c8>
   1e27c:	ldrb	r2, [r6]
   1e280:	ldrb	r3, [r5]
   1e284:	cmp	r3, r2
   1e288:	bne	1e2bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa430>
   1e28c:	cmp	r3, r4
   1e290:	movne	r1, r6
   1e294:	movne	r2, r5
   1e298:	bne	1e2a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa41c>
   1e29c:	b	1e2f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa464>
   1e2a0:	cmp	r3, #0
   1e2a4:	beq	1e2d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa448>
   1e2a8:	ldrb	r3, [r1, #1]!
   1e2ac:	add	r4, r4, #1
   1e2b0:	ldrb	r0, [r2, #1]!
   1e2b4:	cmp	r3, r0
   1e2b8:	beq	1e2a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa414>
   1e2bc:	mov	r0, r6
   1e2c0:	bl	13574 <free@plt>
   1e2c4:	mov	r0, r5
   1e2c8:	bl	13574 <free@plt>
   1e2cc:	mov	r0, r4
   1e2d0:	pop	{r3, r4, r5, r6, r7, pc}
   1e2d4:	add	r4, r4, r4, lsl #2
   1e2d8:	lsl	r4, r4, #1
   1e2dc:	b	1e2bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa430>
   1e2e0:	mov	ip, r5
   1e2e4:	b	1e234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa3a8>
   1e2e8:	mov	ip, r6
   1e2ec:	b	1e1fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa370>
   1e2f0:	mov	r4, r3
   1e2f4:	b	1e2bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa430>
   1e2f8:	ldr	ip, [r0]
   1e2fc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e300:	cmp	ip, #0
   1e304:	mov	r7, r0
   1e308:	beq	1e344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4b8>
   1e30c:	ldr	r1, [r0, #12]
   1e310:	mov	r3, ip
   1e314:	mov	r0, #0
   1e318:	ldrb	r2, [r3, #8]
   1e31c:	ldr	r3, [r3]
   1e320:	tst	r2, #1
   1e324:	ubfx	r2, r2, #3, #3
   1e328:	addne	r0, r0, #1
   1e32c:	cmp	r3, #0
   1e330:	orr	r1, r1, r2
   1e334:	bne	1e318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa48c>
   1e338:	cmp	r0, #0
   1e33c:	str	r1, [r7, #12]
   1e340:	bne	1e34c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4c0>
   1e344:	str	ip, [r7, #8]
   1e348:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e34c:	lsl	r0, r0, #1
   1e350:	movw	r1, #58432	; 0xe440
   1e354:	movw	r2, #55780	; 0xd9e4
   1e358:	movt	r1, #1
   1e35c:	movt	r2, #1
   1e360:	mov	fp, r7
   1e364:	bl	13d30 <htab_create@plt>
   1e368:	ldr	r6, [r7]
   1e36c:	add	sl, r7, #8
   1e370:	cmp	r6, #0
   1e374:	str	r0, [r7, #4]
   1e378:	bne	1e394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa508>
   1e37c:	b	1e410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa584>
   1e380:	str	r6, [sl]
   1e384:	mov	sl, r6
   1e388:	cmp	r9, #0
   1e38c:	beq	1e410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa584>
   1e390:	mov	r6, r9
   1e394:	ldrb	r3, [r6, #8]
   1e398:	ldr	r9, [r6]
   1e39c:	tst	r3, #1
   1e3a0:	beq	1e380 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4f4>
   1e3a4:	ldr	r0, [r7, #4]
   1e3a8:	mov	r1, r6
   1e3ac:	mov	r2, #1
   1e3b0:	bl	13970 <htab_find_slot@plt>
   1e3b4:	ldr	r5, [r0]
   1e3b8:	cmp	r5, #0
   1e3bc:	beq	1e430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa5a4>
   1e3c0:	ldrb	r8, [r6, #8]
   1e3c4:	ubfx	r8, r8, #3, #3
   1e3c8:	b	1e3f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa564>
   1e3cc:	ldr	r4, [r5]
   1e3d0:	cmp	r4, #0
   1e3d4:	beq	1e424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa598>
   1e3d8:	ldr	r0, [r4, #4]
   1e3dc:	ldr	r1, [r6, #4]
   1e3e0:	bl	13490 <strcmp@plt>
   1e3e4:	cmp	r0, #0
   1e3e8:	bne	1e424 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa598>
   1e3ec:	mov	r5, r4
   1e3f0:	ldrb	r3, [r5, #8]
   1e3f4:	ubfx	r3, r3, #3, #3
   1e3f8:	cmp	r3, r8
   1e3fc:	bne	1e3cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa540>
   1e400:	mov	r0, r6
   1e404:	bl	13574 <free@plt>
   1e408:	cmp	r9, #0
   1e40c:	bne	1e390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa504>
   1e410:	mov	r3, #0
   1e414:	str	r3, [sl]
   1e418:	ldr	r3, [r7, #8]
   1e41c:	str	r3, [fp]
   1e420:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e424:	str	r4, [r6]
   1e428:	str	r6, [r5]
   1e42c:	b	1e388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4fc>
   1e430:	str	r6, [r0]
   1e434:	str	r6, [fp]
   1e438:	mov	fp, r6
   1e43c:	b	1e388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa4fc>
   1e440:	ldr	r0, [r0, #4]
   1e444:	b	1346c <htab_hash_string@plt>
   1e448:	movw	r3, #1088	; 0x440
   1e44c:	movt	r3, #10
   1e450:	ldrb	r1, [r3, #9]
   1e454:	cmp	r1, #0
   1e458:	beq	1e460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa5d4>
   1e45c:	b	13a48 <strchr@plt>
   1e460:	mov	r0, r1
   1e464:	bx	lr
   1e468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e46c:	movw	r9, #63248	; 0xf710
   1e470:	movt	r9, #9
   1e474:	sub	sp, sp, #20
   1e478:	movw	r3, #63240	; 0xf708
   1e47c:	movw	r4, #1088	; 0x440
   1e480:	ldr	ip, [r9]
   1e484:	movt	r3, #9
   1e488:	movt	r4, #10
   1e48c:	mov	r7, r2
   1e490:	mov	sl, r0
   1e494:	mvn	r0, #0
   1e498:	ldr	r5, [r3]
   1e49c:	mov	fp, r1
   1e4a0:	str	ip, [sp, #12]
   1e4a4:	bl	135bc <cplus_demangle_set_style@plt>
   1e4a8:	mov	r1, r7
   1e4ac:	mov	r2, #0
   1e4b0:	ldr	r0, [r4, #52]	; 0x34
   1e4b4:	bl	13bec <bfd_demangle@plt>
   1e4b8:	cmp	r0, #0
   1e4bc:	movne	r6, r0
   1e4c0:	mov	r0, r5
   1e4c4:	moveq	r6, r7
   1e4c8:	bl	135bc <cplus_demangle_set_style@plt>
   1e4cc:	ldr	r3, [sl, #12]
   1e4d0:	tst	r3, #2
   1e4d4:	bne	1e61c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa790>
   1e4d8:	mov	r5, r7
   1e4dc:	tst	r3, #4
   1e4e0:	bne	1e600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa774>
   1e4e4:	mov	r8, r7
   1e4e8:	ldr	r0, [sl, #4]
   1e4ec:	cmp	r0, #0
   1e4f0:	beq	1e524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa698>
   1e4f4:	cmp	fp, #0
   1e4f8:	beq	1e63c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa7b0>
   1e4fc:	ldrb	r3, [fp, #8]
   1e500:	tst	r3, #1
   1e504:	beq	1e5ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa760>
   1e508:	ubfx	r3, r3, #3, #3
   1e50c:	cmp	r3, #1
   1e510:	beq	1e740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8b4>
   1e514:	cmp	r3, #2
   1e518:	beq	1e69c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa810>
   1e51c:	cmp	r3, #0
   1e520:	beq	1e63c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa7b0>
   1e524:	cmp	fp, #0
   1e528:	beq	1e538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa6ac>
   1e52c:	ldrb	r3, [fp, #8]
   1e530:	tst	r3, #1
   1e534:	beq	1e5ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa760>
   1e538:	ldr	r4, [sl, #8]
   1e53c:	b	1e574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa6e8>
   1e540:	ldrb	r3, [r4, #8]
   1e544:	ubfx	r3, r3, #3, #3
   1e548:	cmp	r3, #4
   1e54c:	moveq	r1, r8
   1e550:	beq	1e560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa6d4>
   1e554:	cmp	r3, #2
   1e558:	movne	r1, r6
   1e55c:	moveq	r1, r5
   1e560:	mov	r2, #0
   1e564:	bl	138a4 <fnmatch@plt>
   1e568:	cmp	r0, #0
   1e56c:	beq	1e5a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa714>
   1e570:	ldr	r4, [r4]
   1e574:	cmp	r4, #0
   1e578:	beq	1e5f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa76c>
   1e57c:	ldr	r0, [r4, #4]
   1e580:	cmp	r0, #0
   1e584:	beq	1e570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa6e4>
   1e588:	ldrb	r3, [r0]
   1e58c:	cmp	r3, #42	; 0x2a
   1e590:	bne	1e540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa6b4>
   1e594:	ldrb	r3, [r0, #1]
   1e598:	cmp	r3, #0
   1e59c:	bne	1e540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa6b4>
   1e5a0:	cmp	r6, r7
   1e5a4:	beq	1e5b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa724>
   1e5a8:	mov	r0, r6
   1e5ac:	bl	13574 <free@plt>
   1e5b0:	cmp	r5, r7
   1e5b4:	beq	1e5c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa734>
   1e5b8:	mov	r0, r5
   1e5bc:	bl	13574 <free@plt>
   1e5c0:	cmp	r8, r7
   1e5c4:	beq	1e5d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa744>
   1e5c8:	mov	r0, r8
   1e5cc:	bl	13574 <free@plt>
   1e5d0:	ldr	r2, [sp, #12]
   1e5d4:	mov	r0, r4
   1e5d8:	ldr	r3, [r9]
   1e5dc:	cmp	r2, r3
   1e5e0:	bne	1e748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8bc>
   1e5e4:	add	sp, sp, #20
   1e5e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e5ec:	ldr	r4, [fp]
   1e5f0:	cmp	r4, #0
   1e5f4:	bne	1e57c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa6f0>
   1e5f8:	mov	r4, #0
   1e5fc:	b	1e5a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa714>
   1e600:	ldr	r0, [r4, #52]	; 0x34
   1e604:	mov	r1, r7
   1e608:	mov	r2, #4
   1e60c:	bl	13bec <bfd_demangle@plt>
   1e610:	subs	r8, r0, #0
   1e614:	bne	1e4e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa65c>
   1e618:	b	1e4e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa658>
   1e61c:	ldr	r0, [r4, #52]	; 0x34
   1e620:	mov	r1, r7
   1e624:	mov	r2, #3
   1e628:	bl	13bec <bfd_demangle@plt>
   1e62c:	ldr	r3, [sl, #12]
   1e630:	subs	r5, r0, #0
   1e634:	bne	1e4dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa650>
   1e638:	b	1e4d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa64c>
   1e63c:	ldr	r3, [sl, #12]
   1e640:	tst	r3, #1
   1e644:	bne	1e6f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa86c>
   1e648:	tst	r3, #2
   1e64c:	beq	1e6a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa814>
   1e650:	ldr	r0, [sl, #4]
   1e654:	mov	r1, sp
   1e658:	str	r5, [sp, #4]
   1e65c:	bl	13cf4 <htab_find@plt>
   1e660:	subs	r4, r0, #0
   1e664:	bne	1e688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa7fc>
   1e668:	b	1e69c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa810>
   1e66c:	ldrb	r3, [r4, #8]
   1e670:	ubfx	r3, r3, #3, #3
   1e674:	cmp	r3, #2
   1e678:	beq	1e5a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa714>
   1e67c:	ldr	r4, [r4]
   1e680:	cmp	r4, #0
   1e684:	beq	1e69c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa810>
   1e688:	ldr	r0, [r4, #4]
   1e68c:	mov	r1, r5
   1e690:	bl	13490 <strcmp@plt>
   1e694:	cmp	r0, #0
   1e698:	beq	1e66c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa7e0>
   1e69c:	ldr	r3, [sl, #12]
   1e6a0:	tst	r3, #4
   1e6a4:	beq	1e524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa698>
   1e6a8:	ldr	r0, [sl, #4]
   1e6ac:	mov	r1, sp
   1e6b0:	str	r8, [sp, #4]
   1e6b4:	bl	13cf4 <htab_find@plt>
   1e6b8:	subs	r4, r0, #0
   1e6bc:	bne	1e6e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa854>
   1e6c0:	b	1e524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa698>
   1e6c4:	ldrb	r3, [r4, #8]
   1e6c8:	ubfx	r3, r3, #3, #3
   1e6cc:	cmp	r3, #4
   1e6d0:	beq	1e5a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa714>
   1e6d4:	ldr	r4, [r4]
   1e6d8:	cmp	r4, #0
   1e6dc:	beq	1e524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa698>
   1e6e0:	ldr	r0, [r4, #4]
   1e6e4:	mov	r1, r8
   1e6e8:	bl	13490 <strcmp@plt>
   1e6ec:	cmp	r0, #0
   1e6f0:	beq	1e6c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa838>
   1e6f4:	b	1e524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa698>
   1e6f8:	mov	r1, sp
   1e6fc:	str	r6, [sp, #4]
   1e700:	bl	13cf4 <htab_find@plt>
   1e704:	subs	r4, r0, #0
   1e708:	bne	1e72c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8a0>
   1e70c:	b	1e740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8b4>
   1e710:	ldrb	r3, [r4, #8]
   1e714:	ubfx	r3, r3, #3, #3
   1e718:	cmp	r3, #1
   1e71c:	beq	1e5a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa714>
   1e720:	ldr	r4, [r4]
   1e724:	cmp	r4, #0
   1e728:	beq	1e740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8b4>
   1e72c:	ldr	r0, [r4, #4]
   1e730:	mov	r1, r6
   1e734:	bl	13490 <strcmp@plt>
   1e738:	cmp	r0, #0
   1e73c:	beq	1e710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa884>
   1e740:	ldr	r3, [sl, #12]
   1e744:	b	1e648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa7bc>
   1e748:	bl	13694 <__stack_chk_fail@plt>
   1e74c:	ldrb	r2, [r0]
   1e750:	ldrb	r3, [r1]
   1e754:	cmp	r2, r3
   1e758:	beq	1e764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8d8>
   1e75c:	mov	r0, #0
   1e760:	bx	lr
   1e764:	ldrb	r2, [r0, #1]
   1e768:	ldrb	r3, [r1, #1]
   1e76c:	cmp	r2, r3
   1e770:	bne	1e75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8d0>
   1e774:	ldrb	r2, [r0, #2]
   1e778:	ldrb	r3, [r1, #2]
   1e77c:	cmp	r2, r3
   1e780:	bne	1e75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8d0>
   1e784:	ldrb	r2, [r0, #3]
   1e788:	ldrb	r3, [r1, #3]
   1e78c:	cmp	r2, r3
   1e790:	addeq	r1, r1, #4
   1e794:	addeq	r0, r0, #3
   1e798:	bne	1e75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8d0>
   1e79c:	b	1e7ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa920>
   1e7a0:	ldrb	r2, [r1], #1
   1e7a4:	cmp	r2, r3
   1e7a8:	bne	1e75c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8d0>
   1e7ac:	ldrb	r3, [r0, #1]!
   1e7b0:	cmp	r3, #42	; 0x2a
   1e7b4:	bne	1e7a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa914>
   1e7b8:	mov	r0, #1
   1e7bc:	bx	lr
   1e7c0:	ldrb	r2, [r2, #36]	; 0x24
   1e7c4:	push	{r3, lr}
   1e7c8:	tst	r2, #16
   1e7cc:	bne	1e7f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa968>
   1e7d0:	ldr	r2, [r0, #40]	; 0x28
   1e7d4:	tst	r2, #2048	; 0x800
   1e7d8:	popne	{r3, pc}
   1e7dc:	ldr	r3, [r0, #4]
   1e7e0:	movw	r2, #1088	; 0x440
   1e7e4:	movt	r2, #10
   1e7e8:	ldr	r3, [r3, #404]	; 0x194
   1e7ec:	blx	r3
   1e7f0:	pop	{r3, pc}
   1e7f4:	ldr	r3, [r0, #4]
   1e7f8:	mov	r0, r1
   1e7fc:	movw	r1, #1088	; 0x440
   1e800:	movt	r1, #10
   1e804:	ldr	r3, [r3, #364]	; 0x16c
   1e808:	blx	r3
   1e80c:	pop	{r3, pc}
   1e810:	ldr	r1, [r2, #88]	; 0x58
   1e814:	cmp	r1, #0
   1e818:	bxeq	lr
   1e81c:	movw	r3, #1088	; 0x440
   1e820:	movt	r3, #10
   1e824:	ldr	r0, [r1, #180]	; 0xb4
   1e828:	ldr	r3, [r3, #52]	; 0x34
   1e82c:	cmp	r0, r3
   1e830:	bxne	lr
   1e834:	ldr	r3, [r1, #20]
   1e838:	tst	r3, #32768	; 0x8000
   1e83c:	bxne	lr
   1e840:	ldr	r3, [r2, #20]
   1e844:	tst	r3, #1
   1e848:	bxeq	lr
   1e84c:	movw	r1, #1026	; 0x402
   1e850:	and	r1, r3, r1
   1e854:	cmp	r1, #1024	; 0x400
   1e858:	bxeq	lr
   1e85c:	ldrd	r2, [r2, #48]	; 0x30
   1e860:	orrs	r1, r2, r3
   1e864:	ldrne	r2, [sp, #4]
   1e868:	movne	r3, #1
   1e86c:	strne	r3, [r2]
   1e870:	bx	lr
   1e874:	mvn	r2, #-1073741824	; 0xc0000000
   1e878:	mov	r3, #0
   1e87c:	and	r2, r2, r0
   1e880:	and	r3, r3, r1
   1e884:	orrs	ip, r2, r3
   1e888:	beq	1e8f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaa68>
   1e88c:	movw	r2, #65535	; 0xffff
   1e890:	movt	r2, #15
   1e894:	mov	r3, #0
   1e898:	and	r2, r2, r0
   1e89c:	and	r3, r3, r1
   1e8a0:	orrs	ip, r2, r3
   1e8a4:	beq	1e910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaa84>
   1e8a8:	movw	r2, #1023	; 0x3ff
   1e8ac:	mov	r3, #0
   1e8b0:	and	r2, r2, r0
   1e8b4:	and	r3, r3, r1
   1e8b8:	orrs	ip, r2, r3
   1e8bc:	beq	1e8d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaa4c>
   1e8c0:	mov	r2, r0
   1e8c4:	mov	r3, r1
   1e8c8:	mov	r0, #1
   1e8cc:	movw	r1, #10312	; 0x2848
   1e8d0:	movt	r1, #5
   1e8d4:	b	13b38 <__printf_chk@plt>
   1e8d8:	lsr	r2, r0, #10
   1e8dc:	lsr	r3, r1, #10
   1e8e0:	orr	r2, r2, r1, lsl #22
   1e8e4:	mov	r0, #1
   1e8e8:	movw	r1, #10300	; 0x283c
   1e8ec:	movt	r1, #5
   1e8f0:	b	13b38 <__printf_chk@plt>
   1e8f4:	lsr	r2, r0, #30
   1e8f8:	lsr	r3, r1, #30
   1e8fc:	orr	r2, r2, r1, lsl #2
   1e900:	mov	r0, #1
   1e904:	movw	r1, #10276	; 0x2824
   1e908:	movt	r1, #5
   1e90c:	b	13b38 <__printf_chk@plt>
   1e910:	lsr	r2, r0, #20
   1e914:	lsr	r3, r1, #20
   1e918:	orr	r2, r2, r1, lsl #12
   1e91c:	mov	r0, #1
   1e920:	movw	r1, #10288	; 0x2830
   1e924:	movt	r1, #5
   1e928:	b	13b38 <__printf_chk@plt>
   1e92c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e930:	sub	sp, sp, #36	; 0x24
   1e934:	ldrd	r4, [r1, #40]	; 0x28
   1e938:	mov	sl, r1
   1e93c:	ldrd	r6, [r1, #16]
   1e940:	mov	fp, r0
   1e944:	ldrd	r0, [sp, #72]	; 0x48
   1e948:	cmp	r5, r7
   1e94c:	cmpeq	r4, r6
   1e950:	ldrd	r8, [sl, #24]
   1e954:	strd	r0, [sp, #16]
   1e958:	bcc	1e978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaaec>
   1e95c:	mov	r0, r4
   1e960:	mov	r1, r5
   1e964:	subs	r0, r0, r6
   1e968:	sbc	r1, r1, r7
   1e96c:	cmp	r1, r9
   1e970:	cmpeq	r0, r8
   1e974:	bls	1e9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab3c>
   1e978:	adds	r8, r8, r6
   1e97c:	adc	r9, r9, r7
   1e980:	cmp	r5, r9
   1e984:	cmpeq	r4, r8
   1e988:	beq	1ea14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab88>
   1e98c:	cmp	r2, #0
   1e990:	beq	1e9d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab44>
   1e994:	mov	r2, #5
   1e998:	movw	r1, #10324	; 0x2854
   1e99c:	mov	r0, #0
   1e9a0:	movt	r1, #5
   1e9a4:	bl	13688 <dcgettext@plt>
   1e9a8:	ldr	r1, [fp]
   1e9ac:	ldrd	r2, [sl, #40]	; 0x28
   1e9b0:	ldr	ip, [sl]
   1e9b4:	ldr	lr, [r1, #180]	; 0xb4
   1e9b8:	str	lr, [sp]
   1e9bc:	ldr	r1, [r1]
   1e9c0:	stmib	sp, {r1, ip}
   1e9c4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1e9c8:	add	sp, sp, #36	; 0x24
   1e9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e9d0:	ldr	r1, [sl, #60]	; 0x3c
   1e9d4:	cmp	r1, #0
   1e9d8:	bne	1e9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab3c>
   1e9dc:	mov	r0, r2
   1e9e0:	movw	r1, #10392	; 0x2898
   1e9e4:	mov	r2, #1
   1e9e8:	movt	r1, #5
   1e9ec:	str	r2, [sl, #60]	; 0x3c
   1e9f0:	mov	r2, #5
   1e9f4:	bl	13688 <dcgettext@plt>
   1e9f8:	ldr	r2, [fp]
   1e9fc:	ldr	r3, [sl]
   1ea00:	ldr	r1, [r2, #180]	; 0xb4
   1ea04:	ldr	r2, [r2]
   1ea08:	add	sp, sp, #36	; 0x24
   1ea0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea10:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1ea14:	ldrd	r0, [sp, #16]
   1ea18:	orrs	r1, r0, r1
   1ea1c:	beq	1e98c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab00>
   1ea20:	b	1e9c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab3c>
   1ea24:	push	{r4, r5, r6, r8, r9, lr}
   1ea28:	mov	r6, r0
   1ea2c:	mov	r4, #16
   1ea30:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1ea34:	subs	r4, r4, #1
   1ea38:	bne	1ea30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaba4>
   1ea3c:	ldr	r3, [r6, #20]
   1ea40:	movw	r0, #10444	; 0x28cc
   1ea44:	ldrd	r4, [r6, #24]
   1ea48:	movt	r0, #5
   1ea4c:	ldr	r2, [r3, #88]	; 0x58
   1ea50:	ldrd	r8, [r3, #80]	; 0x50
   1ea54:	ldrd	r2, [r2, #32]
   1ea58:	adds	r4, r4, r8
   1ea5c:	adc	r5, r5, r9
   1ea60:	adds	r2, r2, r4
   1ea64:	adc	r3, r3, r5
   1ea68:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1ea6c:	ldr	r1, [r6, #4]
   1ea70:	movw	r0, #10452	; 0x28d4
   1ea74:	movt	r0, #5
   1ea78:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1ea7c:	pop	{r4, r5, r6, r8, r9, pc}
   1ea80:	ldrb	r2, [r0, #12]
   1ea84:	push	{r3, lr}
   1ea88:	sub	r2, r2, #3
   1ea8c:	cmp	r2, #1
   1ea90:	bls	1ea9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac10>
   1ea94:	mov	r0, #1
   1ea98:	pop	{r3, pc}
   1ea9c:	ldr	r3, [r0, #20]
   1eaa0:	cmp	r1, r3
   1eaa4:	bne	1ea94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac08>
   1eaa8:	bl	1ea24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab98>
   1eaac:	b	1ea94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac08>
   1eab0:	push	{r3, lr}
   1eab4:	movw	r2, #1612	; 0x64c
   1eab8:	movw	r3, #1616	; 0x650
   1eabc:	movt	r2, #10
   1eac0:	movt	r3, #10
   1eac4:	ldr	r0, [r2]
   1eac8:	ldr	r1, [r3]
   1eacc:	bl	13520 <bfd_arch_mach_octets_per_byte@plt>
   1ead0:	movw	r1, #65288	; 0xff08
   1ead4:	movt	r1, #9
   1ead8:	mov	r3, #0
   1eadc:	str	r3, [r1, #8]
   1eae0:	cmp	r0, #1
   1eae4:	bls	1eb10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac84>
   1eae8:	tst	r0, #1
   1eaec:	moveq	r3, #1
   1eaf0:	beq	1eafc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac70>
   1eaf4:	b	1eb18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac8c>
   1eaf8:	mov	r3, r2
   1eafc:	lsr	r0, r0, #1
   1eb00:	add	r2, r3, #1
   1eb04:	tst	r0, #1
   1eb08:	beq	1eaf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac6c>
   1eb0c:	str	r3, [r1, #8]
   1eb10:	cmp	r0, #1
   1eb14:	beq	1eb2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaca0>
   1eb18:	movw	r0, #10132	; 0x2794
   1eb1c:	mov	r1, #3232	; 0xca0
   1eb20:	movt	r0, #5
   1eb24:	pop	{r3, lr}
   1eb28:	b	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   1eb2c:	pop	{r3, pc}
   1eb30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eb34:	mov	sl, r0
   1eb38:	sub	sp, sp, #28
   1eb3c:	mov	r7, r1
   1eb40:	ldrd	r4, [r0, #48]	; 0x30
   1eb44:	bl	1eab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac24>
   1eb48:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1eb4c:	ldr	r1, [sl]
   1eb50:	movw	r0, #14204	; 0x377c
   1eb54:	movt	r0, #5
   1eb58:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1eb5c:	ldr	r0, [sl]
   1eb60:	bl	13a24 <strlen@plt>
   1eb64:	add	r6, r0, #1
   1eb68:	cmp	r6, #14
   1eb6c:	bgt	1ec50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xadc4>
   1eb70:	add	r6, r6, #1
   1eb74:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1eb78:	cmp	r6, #15
   1eb7c:	ble	1eb70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xace4>
   1eb80:	ldr	r0, [sl, #88]	; 0x58
   1eb84:	cmp	r0, #0
   1eb88:	beq	1eba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad18>
   1eb8c:	movw	r3, #1088	; 0x440
   1eb90:	movt	r3, #10
   1eb94:	ldr	r2, [r0, #180]	; 0xb4
   1eb98:	ldr	r3, [r3, #52]	; 0x34
   1eb9c:	cmp	r2, r3
   1eba0:	beq	1eccc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae40>
   1eba4:	movw	r6, #65288	; 0xff08
   1eba8:	movt	r6, #9
   1ebac:	cmp	r7, #0
   1ebb0:	ldrd	r8, [r6, #16]
   1ebb4:	moveq	r4, #0
   1ebb8:	moveq	r5, #0
   1ebbc:	strd	r4, [sp]
   1ebc0:	movw	r0, #10472	; 0x28e8
   1ebc4:	ldr	r1, [sl, #180]	; 0xb4
   1ebc8:	movt	r0, #5
   1ebcc:	mov	r2, r8
   1ebd0:	mov	r3, r9
   1ebd4:	str	r1, [sp, #8]
   1ebd8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1ebdc:	ldrd	r6, [sl, #56]	; 0x38
   1ebe0:	cmp	r7, r5
   1ebe4:	cmpeq	r6, r4
   1ebe8:	beq	1ebf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad68>
   1ebec:	orrs	r3, r6, r7
   1ebf0:	bne	1ec20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad94>
   1ebf4:	ldr	r2, [sl, #88]	; 0x58
   1ebf8:	cmp	r2, #0
   1ebfc:	beq	1ec18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad8c>
   1ec00:	movw	r3, #1088	; 0x440
   1ec04:	movt	r3, #10
   1ec08:	ldr	r1, [r2, #180]	; 0xb4
   1ec0c:	ldr	r2, [r3, #52]	; 0x34
   1ec10:	cmp	r1, r2
   1ec14:	beq	1ec5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xadd0>
   1ec18:	add	sp, sp, #28
   1ec1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ec20:	mov	r6, #35	; 0x23
   1ec24:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1ec28:	subs	r6, r6, #1
   1ec2c:	bne	1ec24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad98>
   1ec30:	mov	r0, r6
   1ec34:	mov	r2, #5
   1ec38:	movw	r1, #10484	; 0x28f4
   1ec3c:	movt	r1, #5
   1ec40:	bl	13688 <dcgettext@plt>
   1ec44:	ldrd	r2, [sl, #56]	; 0x38
   1ec48:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1ec4c:	b	1ebf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad68>
   1ec50:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   1ec54:	mov	r6, #0
   1ec58:	b	1eb70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xace4>
   1ec5c:	ldrb	r2, [r3, #4]
   1ec60:	ubfx	r2, r2, #1, #1
   1ec64:	cmp	r2, #0
   1ec68:	beq	1ece0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae54>
   1ec6c:	ldr	r0, [r3, #32]
   1ec70:	mov	r2, sl
   1ec74:	movw	r1, #60032	; 0xea80
   1ec78:	movt	r1, #1
   1ec7c:	bl	13b50 <bfd_link_hash_traverse@plt>
   1ec80:	movw	r6, #65288	; 0xff08
   1ec84:	movt	r6, #9
   1ec88:	ldr	ip, [r6, #8]
   1ec8c:	ldrd	r0, [r6, #16]
   1ec90:	movw	r6, #65288	; 0xff08
   1ec94:	lsr	r2, r4, ip
   1ec98:	rsb	r7, ip, #32
   1ec9c:	orr	r2, r2, r5, lsl r7
   1eca0:	sub	r4, ip, #32
   1eca4:	orr	r2, r2, r5, lsr r4
   1eca8:	movt	r6, #9
   1ecac:	adds	r2, r2, r8
   1ecb0:	lsr	r3, r5, ip
   1ecb4:	adc	r3, r3, r9
   1ecb8:	cmp	r3, r1
   1ecbc:	cmpeq	r2, r0
   1ecc0:	strdhi	r2, [r6, #16]
   1ecc4:	add	sp, sp, #28
   1ecc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eccc:	ldrd	r2, [sl, #80]	; 0x50
   1ecd0:	ldrd	r8, [r0, #32]
   1ecd4:	adds	r8, r8, r2
   1ecd8:	adc	r9, r9, r3
   1ecdc:	b	1ebbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xad30>
   1ece0:	ldr	fp, [sl, #136]	; 0x88
   1ece4:	cmp	fp, #0
   1ece8:	movweq	r6, #65288	; 0xff08
   1ecec:	movteq	r6, #9
   1ecf0:	beq	1ec88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xadfc>
   1ecf4:	ldr	r3, [fp, #4]
   1ecf8:	movw	r6, #65288	; 0xff08
   1ecfc:	movt	r6, #9
   1ed00:	ldr	r1, [fp, #8]
   1ed04:	str	r2, [r3]
   1ed08:	ldr	r3, [r6, #40]	; 0x28
   1ed0c:	lsl	r2, r1, #2
   1ed10:	ldr	r0, [r6, #36]	; 0x24
   1ed14:	rsb	ip, r0, r3
   1ed18:	cmp	r2, ip
   1ed1c:	bhi	1ee48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafbc>
   1ed20:	ldr	r7, [r6, #32]
   1ed24:	add	r0, r0, r2
   1ed28:	movw	r2, #65288	; 0xff08
   1ed2c:	movt	r2, #9
   1ed30:	cmp	r0, r7
   1ed34:	str	r0, [r6, #36]	; 0x24
   1ed38:	ldr	lr, [r6, #28]
   1ed3c:	ldrbeq	ip, [r2, #64]	; 0x40
   1ed40:	orreq	ip, ip, #2
   1ed44:	strbeq	ip, [r2, #64]	; 0x40
   1ed48:	movw	ip, #65288	; 0xff08
   1ed4c:	ldr	r2, [r6, #48]	; 0x30
   1ed50:	movt	ip, #9
   1ed54:	add	r0, r0, r2
   1ed58:	bic	r2, r0, r2
   1ed5c:	rsb	r0, lr, r3
   1ed60:	rsb	lr, lr, r2
   1ed64:	str	r2, [r6, #36]	; 0x24
   1ed68:	cmp	lr, r0
   1ed6c:	strhi	r3, [ip, #36]	; 0x24
   1ed70:	movhi	r2, r3
   1ed74:	ldr	r3, [fp]
   1ed78:	str	r2, [r6, #32]
   1ed7c:	cmp	r3, #0
   1ed80:	subne	r2, r7, #4
   1ed84:	beq	1ed9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf10>
   1ed88:	ldr	r0, [r3]
   1ed8c:	str	r0, [r2, #4]!
   1ed90:	ldr	r3, [r3, #4]
   1ed94:	cmp	r3, #0
   1ed98:	bne	1ed88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaefc>
   1ed9c:	mov	r2, #4
   1eda0:	movw	r3, #55232	; 0xd7c0
   1eda4:	mov	r0, r7
   1eda8:	movt	r3, #1
   1edac:	bl	13cd0 <qsort@plt>
   1edb0:	ldr	ip, [fp, #8]
   1edb4:	cmp	ip, #0
   1edb8:	subne	r2, r7, #4
   1edbc:	movne	r3, #0
   1edc0:	bne	1edd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf44>
   1edc4:	b	1ee10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf84>
   1edc8:	cmp	r3, ip
   1edcc:	bcs	1ee10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf84>
   1edd0:	ldr	r0, [r2, #4]!
   1edd4:	add	r3, r3, #1
   1edd8:	ldrb	r1, [r0, #12]
   1eddc:	sub	r1, r1, #3
   1ede0:	cmp	r1, #1
   1ede4:	bhi	1edc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf3c>
   1ede8:	ldr	r1, [r0, #20]
   1edec:	cmp	sl, r1
   1edf0:	bne	1edc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf3c>
   1edf4:	str	r2, [sp, #16]
   1edf8:	str	r3, [sp, #20]
   1edfc:	bl	1ea24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xab98>
   1ee00:	ldr	ip, [fp, #8]
   1ee04:	ldr	r3, [sp, #20]
   1ee08:	ldr	r2, [sp, #16]
   1ee0c:	b	1edc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaf3c>
   1ee10:	ldr	r2, [r6, #28]
   1ee14:	movw	r3, #65288	; 0xff08
   1ee18:	movt	r3, #9
   1ee1c:	cmp	r7, r2
   1ee20:	bls	1ee38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafac>
   1ee24:	ldr	r2, [r3, #40]	; 0x28
   1ee28:	cmp	r7, r2
   1ee2c:	strcc	r7, [r3, #32]
   1ee30:	strcc	r7, [r3, #36]	; 0x24
   1ee34:	bcc	1ec88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xadfc>
   1ee38:	mov	r1, r7
   1ee3c:	ldr	r0, [pc, #40]	; 1ee6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafe0>
   1ee40:	bl	13b14 <_obstack_free@plt>
   1ee44:	b	1ec88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xadfc>
   1ee48:	mov	r1, r2
   1ee4c:	add	r0, r6, #24
   1ee50:	str	r2, [sp, #16]
   1ee54:	bl	13658 <_obstack_newchunk@plt>
   1ee58:	ldr	r0, [r6, #36]	; 0x24
   1ee5c:	ldr	r3, [r6, #40]	; 0x28
   1ee60:	ldr	r1, [fp, #8]
   1ee64:	ldr	r2, [sp, #16]
   1ee68:	b	1ed20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xae94>
   1ee6c:	andeq	pc, r9, r0, lsr #30
   1ee70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ee74:	mov	sl, r0
   1ee78:	ldr	r3, [r0, #4]
   1ee7c:	sub	sp, sp, #28
   1ee80:	mov	r7, r1
   1ee84:	cmp	r3, #15
   1ee88:	ldrls	pc, [pc, r3, lsl #2]
   1ee8c:	b	1f6a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb818>
   1ee90:	andeq	lr, r1, r0, lsr pc
   1ee94:	andeq	pc, r1, r0, asr #32
   1ee98:	andeq	pc, r1, r4, ror #9
   1ee9c:	andeq	pc, r1, r0, lsr #3
   1eea0:	andeq	pc, r1, r8, asr #10
   1eea4:	andeq	pc, r1, r0, lsr #10
   1eea8:	andeq	pc, r1, r4, lsr r5	; <UNPREDICTABLE>
   1eeac:	andeq	pc, r1, r8, lsr r1	; <UNPREDICTABLE>
   1eeb0:	andeq	pc, r1, r8, lsl #9
   1eeb4:	muleq	r1, r8, r3
   1eeb8:	andeq	pc, r1, r0, ror #8
   1eebc:	ldrdeq	pc, [r1], -r0
   1eec0:	andeq	pc, r1, ip, lsl #4
   1eec4:	andeq	pc, r1, r0, lsl #6
   1eec8:	andeq	pc, r1, r4, ror #6
   1eecc:	ldrdeq	lr, [r1], -r0
   1eed0:	movw	r4, #1060	; 0x424
   1eed4:	movt	r4, #10
   1eed8:	ldr	r3, [r4]
   1eedc:	cmp	r3, #0
   1eee0:	beq	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1eee4:	movw	r3, #1068	; 0x42c
   1eee8:	movt	r3, #10
   1eeec:	ldr	r3, [r3]
   1eef0:	cmp	r3, #0
   1eef4:	movwne	r0, #10528	; 0x2920
   1eef8:	movweq	r0, #10552	; 0x2938
   1eefc:	movtne	r0, #5
   1ef00:	movteq	r0, #5
   1ef04:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1ef08:	ldr	r4, [r4]
   1ef0c:	cmp	r4, #0
   1ef10:	beq	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1ef14:	mov	r0, r4
   1ef18:	mov	r1, r7
   1ef1c:	bl	1ee70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafe4>
   1ef20:	ldr	r4, [r4]
   1ef24:	cmp	r4, #0
   1ef28:	bne	1ef14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb088>
   1ef2c:	b	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1ef30:	movw	r3, #1028	; 0x404
   1ef34:	movt	r3, #10
   1ef38:	ldr	r4, [r0, #28]
   1ef3c:	ldr	r3, [r3]
   1ef40:	cmp	r0, r3
   1ef44:	beq	1f018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb18c>
   1ef48:	movw	r0, #10736	; 0x29f0
   1ef4c:	ldr	r1, [sl, #24]
   1ef50:	movt	r0, #5
   1ef54:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1ef58:	cmp	r4, #0
   1ef5c:	beq	1f014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb188>
   1ef60:	ldrd	r2, [r4, #32]
   1ef64:	movw	fp, #65288	; 0xff08
   1ef68:	movt	fp, #9
   1ef6c:	ldr	r0, [sl, #24]
   1ef70:	strd	r2, [fp, #16]
   1ef74:	bl	13a24 <strlen@plt>
   1ef78:	cmp	r0, #14
   1ef7c:	mov	r5, r0
   1ef80:	bgt	1f88c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba00>
   1ef84:	add	r5, r5, #1
   1ef88:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1ef8c:	cmp	r5, #15
   1ef90:	ble	1ef84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb0f8>
   1ef94:	ldr	r1, [r4, #48]	; 0x30
   1ef98:	movw	r0, #10740	; 0x29f4
   1ef9c:	ldr	ip, [fp, #8]
   1efa0:	movt	r0, #5
   1efa4:	ldr	lr, [r4, #52]	; 0x34
   1efa8:	rsb	r6, ip, #32
   1efac:	lsr	r1, r1, ip
   1efb0:	sub	r5, ip, #32
   1efb4:	ldrd	r2, [r4, #32]
   1efb8:	orr	r1, r1, lr, lsl r6
   1efbc:	lsr	ip, lr, ip
   1efc0:	orr	r1, r1, lr, lsr r5
   1efc4:	stm	sp, {r1, ip}
   1efc8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1efcc:	ldrd	r0, [r4, #32]
   1efd0:	ldrd	r2, [r4, #40]	; 0x28
   1efd4:	cmp	r1, r3
   1efd8:	cmpeq	r0, r2
   1efdc:	beq	1effc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb170>
   1efe0:	mov	r2, #5
   1efe4:	movw	r1, #10748	; 0x29fc
   1efe8:	mov	r0, #0
   1efec:	movt	r1, #5
   1eff0:	bl	13688 <dcgettext@plt>
   1eff4:	ldrd	r2, [r4, #40]	; 0x28
   1eff8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1effc:	ldr	r0, [sl, #52]	; 0x34
   1f000:	cmp	r0, #0
   1f004:	beq	1f014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb188>
   1f008:	ldr	r1, [pc, #2332]	; 1f92c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbaa0>
   1f00c:	ldr	r2, [pc, #2332]	; 1f930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbaa4>
   1f010:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   1f014:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   1f018:	ldr	r4, [sl, #8]
   1f01c:	cmp	r4, #0
   1f020:	beq	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1f024:	mov	r0, r4
   1f028:	mov	r1, sl
   1f02c:	bl	1ee70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafe4>
   1f030:	ldr	r4, [r4]
   1f034:	cmp	r4, #0
   1f038:	bne	1f024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb198>
   1f03c:	b	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1f040:	mov	r4, #16
   1f044:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1f048:	subs	r4, r4, #1
   1f04c:	bne	1f044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1b8>
   1f050:	ldr	r3, [sl, #8]
   1f054:	ldr	r2, [r3, #12]
   1f058:	cmp	r2, #8
   1f05c:	beq	1f710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb884>
   1f060:	ldr	r1, [r3, #16]
   1f064:	movw	r6, #1480	; 0x5c8
   1f068:	movt	r6, #10
   1f06c:	ldrb	r0, [r1]
   1f070:	cmp	r0, #46	; 0x2e
   1f074:	beq	1f878 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9ec>
   1f078:	mov	r8, #0
   1f07c:	str	r1, [r6, #12]
   1f080:	ldr	r0, [r3, #20]
   1f084:	ldr	r1, [r7, #28]
   1f088:	ldr	r3, [pc, #2204]	; 1f92c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbaa0>
   1f08c:	cmp	r1, #0
   1f090:	moveq	r1, r3
   1f094:	cmp	r2, #5
   1f098:	beq	1f840 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9b4>
   1f09c:	ldr	r2, [pc, #2188]	; 1f930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbaa4>
   1f0a0:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   1f0a4:	ldr	r2, [r6, #32]
   1f0a8:	movw	r3, #1480	; 0x5c8
   1f0ac:	movt	r3, #10
   1f0b0:	cmp	r2, #0
   1f0b4:	beq	1f848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb9bc>
   1f0b8:	ldr	r2, [sl, #8]
   1f0bc:	ldr	r1, [r2, #12]
   1f0c0:	cmp	r1, #8
   1f0c4:	beq	1f0dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb250>
   1f0c8:	cmp	r8, #0
   1f0cc:	bne	1f0dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb250>
   1f0d0:	ldr	r3, [r3, #12]
   1f0d4:	cmp	r3, #0
   1f0d8:	beq	1f8bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba30>
   1f0dc:	ldr	r3, [r6, #28]
   1f0e0:	ldrd	r4, [r6, #16]
   1f0e4:	cmp	r3, #0
   1f0e8:	beq	1f0f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb26c>
   1f0ec:	ldrd	r0, [r3, #32]
   1f0f0:	adds	r4, r4, r0
   1f0f4:	adc	r5, r5, r1
   1f0f8:	movw	r0, #10768	; 0x2a10
   1f0fc:	mov	r2, r4
   1f100:	mov	r3, r5
   1f104:	movt	r0, #5
   1f108:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f10c:	cmp	r8, #0
   1f110:	movwne	r3, #65288	; 0xff08
   1f114:	movtne	r3, #9
   1f118:	strdne	r4, [r3, #16]
   1f11c:	movw	r0, #10824	; 0x2a48
   1f120:	movt	r0, #5
   1f124:	mov	r3, #0
   1f128:	str	r3, [r6, #12]
   1f12c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f130:	ldr	r0, [sl, #8]
   1f134:	b	1f1c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb334>
   1f138:	movw	r6, #1336	; 0x538
   1f13c:	movt	r6, #10
   1f140:	movw	r0, #10652	; 0x299c
   1f144:	mov	r1, #1
   1f148:	ldr	r3, [r6, #80]	; 0x50
   1f14c:	movt	r0, #5
   1f150:	mov	r2, #13
   1f154:	bl	137a8 <fwrite@plt>
   1f158:	ldr	r3, [sl, #8]
   1f15c:	add	r5, r3, #4
   1f160:	ldr	r4, [r3]
   1f164:	cmp	r4, #0
   1f168:	beq	1f18c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb300>
   1f16c:	movw	r2, #10668	; 0x29ac
   1f170:	ldr	r0, [r6, #80]	; 0x50
   1f174:	movt	r2, #5
   1f178:	mov	r1, #1
   1f17c:	ldrb	r3, [r5], #1
   1f180:	bl	13b74 <__fprintf_chk@plt>
   1f184:	subs	r4, r4, #1
   1f188:	bne	1f16c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb2e0>
   1f18c:	ldr	r1, [r6, #80]	; 0x50
   1f190:	mov	r0, #10
   1f194:	add	sp, sp, #28
   1f198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f19c:	b	13c28 <fputc@plt>
   1f1a0:	mov	r2, #5
   1f1a4:	movw	r1, #10596	; 0x2964
   1f1a8:	mov	r0, #0
   1f1ac:	movt	r1, #5
   1f1b0:	bl	13688 <dcgettext@plt>
   1f1b4:	ldr	r1, [sl, #8]
   1f1b8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f1bc:	ldr	r0, [sl, #12]
   1f1c0:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   1f1c4:	add	sp, sp, #28
   1f1c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f1cc:	b	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   1f1d0:	ldr	r1, [r0, #8]
   1f1d4:	movw	r0, #10856	; 0x2a68
   1f1d8:	movt	r0, #5
   1f1dc:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f1e0:	movw	r3, #1044	; 0x414
   1f1e4:	movt	r3, #10
   1f1e8:	ldr	r1, [r3]
   1f1ec:	cmp	r1, #0
   1f1f0:	beq	1f200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb374>
   1f1f4:	movw	r0, #62784	; 0xf540
   1f1f8:	movt	r0, #4
   1f1fc:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f200:	movw	r0, #22264	; 0x56f8
   1f204:	movt	r0, #5
   1f208:	b	1f53c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb6b0>
   1f20c:	bl	1eab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac24>
   1f210:	movw	r0, #10716	; 0x29dc
   1f214:	movt	r0, #5
   1f218:	mov	r4, #9
   1f21c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f220:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1f224:	subs	r4, r4, #1
   1f228:	bne	1f220 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb394>
   1f22c:	ldr	r3, [sl, #24]
   1f230:	ldrd	r4, [sl, #8]
   1f234:	cmp	r3, #0
   1f238:	beq	1f248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb3bc>
   1f23c:	ldrd	r2, [r3, #32]
   1f240:	adds	r4, r4, r2
   1f244:	adc	r5, r5, r3
   1f248:	movw	fp, #65288	; 0xff08
   1f24c:	movt	fp, #9
   1f250:	ldr	r1, [sl, #16]
   1f254:	movw	r0, #10724	; 0x29e4
   1f258:	ldr	ip, [fp, #8]
   1f25c:	movt	r0, #5
   1f260:	ldr	lr, [sl, #20]
   1f264:	mov	r2, r4
   1f268:	rsb	r7, ip, #32
   1f26c:	lsr	r1, r1, ip
   1f270:	sub	r6, ip, #32
   1f274:	mov	r3, r5
   1f278:	orr	r1, r1, lr, lsl r7
   1f27c:	lsr	ip, lr, ip
   1f280:	orr	r1, r1, lr, lsr r6
   1f284:	stm	sp, {r1, ip}
   1f288:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f28c:	ldr	r8, [sl, #28]
   1f290:	ldr	r7, [r8]
   1f294:	cmp	r7, #0
   1f298:	beq	1f2c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb43c>
   1f29c:	movw	r6, #1336	; 0x538
   1f2a0:	add	r8, r8, #4
   1f2a4:	movt	r6, #10
   1f2a8:	movw	r2, #10668	; 0x29ac
   1f2ac:	ldr	r0, [r6, #80]	; 0x50
   1f2b0:	movt	r2, #5
   1f2b4:	mov	r1, #1
   1f2b8:	ldrb	r3, [r8], #1
   1f2bc:	bl	13b74 <__fprintf_chk@plt>
   1f2c0:	subs	r7, r7, #1
   1f2c4:	bne	1f2a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb41c>
   1f2c8:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   1f2cc:	ldr	ip, [sl, #16]
   1f2d0:	ldr	r1, [fp, #8]
   1f2d4:	ldr	r0, [sl, #20]
   1f2d8:	lsr	r2, ip, r1
   1f2dc:	rsb	ip, r1, #32
   1f2e0:	orr	r2, r2, r0, lsl ip
   1f2e4:	sub	ip, r1, #32
   1f2e8:	orr	r2, r2, r0, lsr ip
   1f2ec:	lsr	r3, r0, r1
   1f2f0:	adds	r2, r2, r4
   1f2f4:	adc	r3, r3, r5
   1f2f8:	strd	r2, [fp, #16]
   1f2fc:	b	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1f300:	movw	r6, #1336	; 0x538
   1f304:	movt	r6, #10
   1f308:	movw	r0, #10880	; 0x2a80
   1f30c:	mov	r1, #1
   1f310:	ldr	r3, [r6, #80]	; 0x50
   1f314:	movt	r0, #5
   1f318:	mov	r2, #12
   1f31c:	bl	137a8 <fwrite@plt>
   1f320:	ldr	r4, [sl, #8]
   1f324:	cmp	r4, #0
   1f328:	beq	1f344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb4b8>
   1f32c:	mov	r0, r4
   1f330:	mov	r1, r7
   1f334:	bl	1ee70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafe4>
   1f338:	ldr	r4, [r4]
   1f33c:	cmp	r4, #0
   1f340:	bne	1f32c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb4a0>
   1f344:	ldr	r3, [r6, #80]	; 0x50
   1f348:	movw	r0, #10896	; 0x2a90
   1f34c:	mov	r1, #1
   1f350:	movt	r0, #5
   1f354:	mov	r2, #10
   1f358:	add	sp, sp, #28
   1f35c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f360:	b	137a8 <fwrite@plt>
   1f364:	ldr	r0, [r0, #12]
   1f368:	movw	r3, #29744	; 0x7430
   1f36c:	movt	r3, #4
   1f370:	movw	r1, #29736	; 0x7428
   1f374:	cmp	r0, #0
   1f378:	movt	r1, #4
   1f37c:	ldr	r2, [sl, #8]
   1f380:	movw	r0, #10908	; 0x2a9c
   1f384:	movne	r1, r3
   1f388:	movt	r0, #5
   1f38c:	add	sp, sp, #28
   1f390:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f394:	b	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f398:	bl	1eab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac24>
   1f39c:	mov	r4, #16
   1f3a0:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1f3a4:	subs	r4, r4, #1
   1f3a8:	bne	1f3a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb514>
   1f3ac:	ldr	r3, [sl, #40]	; 0x28
   1f3b0:	ldrd	r4, [sl, #48]	; 0x30
   1f3b4:	cmp	r3, #0
   1f3b8:	beq	1f3c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb53c>
   1f3bc:	ldrd	r2, [r3, #32]
   1f3c0:	adds	r4, r4, r2
   1f3c4:	adc	r5, r5, r3
   1f3c8:	ldr	r0, [sl, #12]
   1f3cc:	movw	fp, #65288	; 0xff08
   1f3d0:	bl	136a0 <bfd_get_reloc_size@plt>
   1f3d4:	movt	fp, #9
   1f3d8:	mov	r2, #0
   1f3dc:	ldr	r3, [fp, #8]
   1f3e0:	str	r2, [sp, #4]
   1f3e4:	mov	r2, r4
   1f3e8:	mov	r6, r0
   1f3ec:	movw	r0, #10692	; 0x29c4
   1f3f0:	lsr	r3, r6, r3
   1f3f4:	str	r3, [sp]
   1f3f8:	ldr	r1, [sl, #12]
   1f3fc:	movt	r0, #5
   1f400:	mov	r3, r5
   1f404:	ldr	r1, [r1, #32]
   1f408:	str	r1, [sp, #8]
   1f40c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f410:	ldr	r1, [sl, #20]
   1f414:	cmp	r1, #0
   1f418:	ldreq	r3, [sl, #16]
   1f41c:	movwne	r0, #10712	; 0x29d8
   1f420:	movweq	r0, #10712	; 0x29d8
   1f424:	ldreq	r1, [r3]
   1f428:	movtne	r0, #5
   1f42c:	movteq	r0, #5
   1f430:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f434:	ldr	r0, [sl, #24]
   1f438:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   1f43c:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   1f440:	ldr	r1, [fp, #8]
   1f444:	mov	r3, #0
   1f448:	lsr	r2, r6, r1
   1f44c:	adds	r2, r2, r4
   1f450:	adc	r3, r3, r5
   1f454:	strd	r2, [fp, #16]
   1f458:	add	sp, sp, #28
   1f45c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f460:	movw	r1, #1336	; 0x538
   1f464:	movt	r1, #10
   1f468:	ldr	r3, [r0, #8]
   1f46c:	movw	r2, #10844	; 0x2a5c
   1f470:	ldr	r0, [r1, #80]	; 0x50
   1f474:	movt	r2, #5
   1f478:	mov	r1, #1
   1f47c:	add	sp, sp, #28
   1f480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f484:	b	13b74 <__fprintf_chk@plt>
   1f488:	bl	1eab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac24>
   1f48c:	mov	r4, #16
   1f490:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1f494:	subs	r4, r4, #1
   1f498:	bne	1f490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb604>
   1f49c:	ldr	r3, [sl, #24]
   1f4a0:	ldrd	r8, [sl, #32]
   1f4a4:	cmp	r3, #0
   1f4a8:	beq	1f4b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb62c>
   1f4ac:	ldrd	r2, [r3, #32]
   1f4b0:	adds	r8, r8, r2
   1f4b4:	adc	r9, r9, r3
   1f4b8:	ldr	r3, [sl, #8]
   1f4bc:	sub	r3, r3, #280	; 0x118
   1f4c0:	sub	r3, r3, #2
   1f4c4:	cmp	r3, #4
   1f4c8:	ldrls	pc, [pc, r3, lsl #2]
   1f4cc:	b	1f898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba0c>
   1f4d0:	andeq	pc, r1, r8, lsl r8	; <UNPREDICTABLE>
   1f4d4:	andeq	pc, r1, r4, lsl #16
   1f4d8:	strdeq	pc, [r1], -r0
   1f4dc:	andeq	pc, r1, r4, lsr #14
   1f4e0:	andeq	pc, r1, ip, lsr #16
   1f4e4:	ldr	r3, [r0, #8]
   1f4e8:	cmp	r3, #0
   1f4ec:	beq	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1f4f0:	ldr	r2, [r0, #16]
   1f4f4:	cmp	r2, #0
   1f4f8:	beq	1f508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb67c>
   1f4fc:	ldr	r2, [r2, #40]	; 0x28
   1f500:	tst	r2, #131072	; 0x20000
   1f504:	bne	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1f508:	movw	r1, #1336	; 0x538
   1f50c:	movt	r1, #10
   1f510:	movw	r2, #10868	; 0x2a74
   1f514:	movt	r2, #5
   1f518:	ldr	r0, [r1, #80]	; 0x50
   1f51c:	b	1f478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5ec>
   1f520:	ldr	r0, [r0, #8]
   1f524:	mov	r1, #0
   1f528:	add	sp, sp, #28
   1f52c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f530:	b	1eb30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaca4>
   1f534:	movw	r0, #10628	; 0x2984
   1f538:	movt	r0, #5
   1f53c:	add	sp, sp, #28
   1f540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f544:	b	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f548:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1f54c:	ldr	r3, [sl, #12]
   1f550:	cmp	r3, #0
   1f554:	bne	1f6f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb864>
   1f558:	ldr	r1, [sl, #8]
   1f55c:	cmp	r1, #0
   1f560:	beq	1f8ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba20>
   1f564:	movw	r0, #14204	; 0x377c
   1f568:	movt	r0, #5
   1f56c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f570:	ldr	r3, [sl, #12]
   1f574:	cmp	r3, #0
   1f578:	bne	1f700 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb874>
   1f57c:	movw	r0, #10572	; 0x294c
   1f580:	movt	r0, #5
   1f584:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f588:	ldr	r5, [sl, #16]
   1f58c:	cmp	r5, #0
   1f590:	beq	1f63c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7b0>
   1f594:	ldr	r3, [r5, #12]
   1f598:	cmp	r3, #0
   1f59c:	bne	1f674 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7e8>
   1f5a0:	ldr	r3, [r5, #8]
   1f5a4:	cmp	r3, #0
   1f5a8:	beq	1f5f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb768>
   1f5ac:	ldr	r1, [r3]
   1f5b0:	movw	r0, #10576	; 0x2950
   1f5b4:	movt	r0, #5
   1f5b8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f5bc:	ldr	r3, [r5, #8]
   1f5c0:	ldr	r4, [r3, #4]
   1f5c4:	cmp	r4, #0
   1f5c8:	beq	1f5e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb75c>
   1f5cc:	ldr	r1, [r4]
   1f5d0:	movw	r0, #62784	; 0xf540
   1f5d4:	movt	r0, #4
   1f5d8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f5dc:	ldr	r4, [r4, #4]
   1f5e0:	cmp	r4, #0
   1f5e4:	bne	1f5cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb740>
   1f5e8:	movw	r0, #10592	; 0x2960
   1f5ec:	movt	r0, #5
   1f5f0:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f5f4:	ldr	r1, [r5, #4]
   1f5f8:	cmp	r1, #0
   1f5fc:	beq	1f694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb808>
   1f600:	movw	r0, #14204	; 0x377c
   1f604:	movt	r0, #5
   1f608:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f60c:	ldr	r3, [r5, #12]
   1f610:	cmp	r3, #0
   1f614:	bne	1f684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7f8>
   1f618:	ldr	r3, [r5]
   1f61c:	cmp	r3, #0
   1f620:	beq	1f63c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7b0>
   1f624:	movw	r0, #19740	; 0x4d1c
   1f628:	movt	r0, #5
   1f62c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f630:	ldr	r5, [r5]
   1f634:	cmp	r5, #0
   1f638:	bne	1f594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb708>
   1f63c:	movw	r0, #56804	; 0xdde4
   1f640:	movt	r0, #4
   1f644:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f648:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   1f64c:	ldr	r4, [sl, #24]
   1f650:	cmp	r4, #0
   1f654:	beq	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1f658:	mov	r0, r4
   1f65c:	mov	r1, r7
   1f660:	bl	1ee70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafe4>
   1f664:	ldr	r4, [r4]
   1f668:	cmp	r4, #0
   1f66c:	bne	1f658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb7cc>
   1f670:	b	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1f674:	movw	r0, #10568	; 0x2948
   1f678:	movt	r0, #5
   1f67c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f680:	b	1f5a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb714>
   1f684:	movw	r0, #56804	; 0xdde4
   1f688:	movt	r0, #4
   1f68c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f690:	b	1f618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb78c>
   1f694:	movw	r0, #12032	; 0x2f00
   1f698:	movt	r0, #5
   1f69c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f6a0:	b	1f60c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb780>
   1f6a4:	movw	r3, #1336	; 0x538
   1f6a8:	movt	r3, #10
   1f6ac:	mov	r2, #5
   1f6b0:	movw	r1, #10512	; 0x2910
   1f6b4:	mov	r0, #0
   1f6b8:	movt	r1, #5
   1f6bc:	ldr	r4, [r3, #80]	; 0x50
   1f6c0:	bl	13688 <dcgettext@plt>
   1f6c4:	ldr	r3, [sl, #4]
   1f6c8:	mov	r1, #1
   1f6cc:	mov	r2, r0
   1f6d0:	mov	r0, r4
   1f6d4:	bl	13b74 <__fprintf_chk@plt>
   1f6d8:	movw	r0, #10132	; 0x2794
   1f6dc:	movw	r1, #4491	; 0x118b
   1f6e0:	movt	r0, #5
   1f6e4:	add	sp, sp, #28
   1f6e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f6ec:	b	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   1f6f0:	movw	r0, #10568	; 0x2948
   1f6f4:	movt	r0, #5
   1f6f8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f6fc:	b	1f558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb6cc>
   1f700:	movw	r0, #56804	; 0xdde4
   1f704:	movt	r0, #4
   1f708:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f70c:	b	1f57c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb6f0>
   1f710:	movw	r6, #1480	; 0x5c8
   1f714:	ldr	r0, [r3, #16]
   1f718:	mov	r8, r4
   1f71c:	movt	r6, #10
   1f720:	b	1f084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1f8>
   1f724:	movw	r0, #29696	; 0x7400
   1f728:	movt	r0, #4
   1f72c:	mov	r1, #2
   1f730:	mov	r3, #0
   1f734:	movw	fp, #65288	; 0xff08
   1f738:	movt	fp, #9
   1f73c:	mov	r4, r1
   1f740:	mov	r2, #1
   1f744:	ldr	r1, [fp, #8]
   1f748:	mov	r5, r3
   1f74c:	mov	r3, #0
   1f750:	str	r0, [sp, #8]
   1f754:	lsl	r2, r2, r1
   1f758:	movw	r0, #10676	; 0x29b4
   1f75c:	cmp	r5, r3
   1f760:	cmpeq	r4, r2
   1f764:	movt	r0, #5
   1f768:	movcc	r4, r2
   1f76c:	movcc	r5, r3
   1f770:	rsb	r2, r1, #32
   1f774:	lsr	r3, r4, r1
   1f778:	orr	r3, r3, r5, lsl r2
   1f77c:	sub	r2, r1, #32
   1f780:	orr	r3, r3, r5, lsr r2
   1f784:	lsr	r1, r5, r1
   1f788:	str	r3, [sp]
   1f78c:	mov	r2, r8
   1f790:	str	r1, [sp, #4]
   1f794:	mov	r3, r9
   1f798:	ldrd	r6, [sl, #16]
   1f79c:	strd	r6, [sp, #16]
   1f7a0:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f7a4:	ldr	r3, [sl, #12]
   1f7a8:	ldr	r3, [r3, #12]
   1f7ac:	cmp	r3, #7
   1f7b0:	beq	1f7c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb934>
   1f7b4:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1f7b8:	ldr	r0, [sl, #12]
   1f7bc:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   1f7c0:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   1f7c4:	ldr	r1, [fp, #8]
   1f7c8:	rsb	r0, r1, #32
   1f7cc:	lsr	r2, r4, r1
   1f7d0:	orr	r2, r2, r5, lsl r0
   1f7d4:	sub	r0, r1, #32
   1f7d8:	orr	r2, r2, r5, lsr r0
   1f7dc:	lsr	r3, r5, r1
   1f7e0:	adds	r2, r2, r8
   1f7e4:	adc	r3, r3, r9
   1f7e8:	strd	r2, [fp, #16]
   1f7ec:	b	1f458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb5cc>
   1f7f0:	movw	r0, #29688	; 0x73f8
   1f7f4:	mov	r1, #4
   1f7f8:	movt	r0, #4
   1f7fc:	mov	r3, #0
   1f800:	b	1f734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb8a8>
   1f804:	movw	r0, #29680	; 0x73f0
   1f808:	mov	r1, #8
   1f80c:	movt	r0, #4
   1f810:	mov	r3, #0
   1f814:	b	1f734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb8a8>
   1f818:	movw	r0, #29672	; 0x73e8
   1f81c:	mov	r1, #8
   1f820:	movt	r0, #4
   1f824:	mov	r3, #0
   1f828:	b	1f734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb8a8>
   1f82c:	movw	r0, #29704	; 0x7408
   1f830:	mov	r1, #1
   1f834:	movt	r0, #4
   1f838:	mov	r3, #0
   1f83c:	b	1f734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb8a8>
   1f840:	mov	r3, #0
   1f844:	str	r3, [r6, #32]
   1f848:	ldr	r3, [sl, #8]
   1f84c:	ldr	r3, [r3, #12]
   1f850:	cmp	r3, #5
   1f854:	movweq	r0, #10800	; 0x2a30
   1f858:	movwne	r0, #10812	; 0x2a3c
   1f85c:	movteq	r0, #5
   1f860:	movtne	r0, #5
   1f864:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f868:	movw	r0, #10832	; 0x2a50
   1f86c:	movt	r0, #5
   1f870:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f874:	b	1f11c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb290>
   1f878:	ldrb	r0, [r1, #1]
   1f87c:	cmp	r0, #0
   1f880:	bne	1f078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1ec>
   1f884:	mov	r8, #1
   1f888:	b	1f080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb1f4>
   1f88c:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   1f890:	mov	r5, #0
   1f894:	b	1ef84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb0f8>
   1f898:	movw	r0, #10132	; 0x2794
   1f89c:	movw	r1, #4293	; 0x10c5
   1f8a0:	movt	r0, #5
   1f8a4:	ldr	r2, [pc, #136]	; 1f934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbaa8>
   1f8a8:	bl	135d4 <_bfd_abort@plt>
   1f8ac:	movw	r0, #12032	; 0x2f00
   1f8b0:	movt	r0, #5
   1f8b4:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f8b8:	b	1f570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb6e4>
   1f8bc:	movw	r3, #1088	; 0x440
   1f8c0:	movt	r3, #10
   1f8c4:	ldr	r1, [r2, #16]
   1f8c8:	mov	ip, #1
   1f8cc:	ldr	r0, [r3, #32]
   1f8d0:	mov	r2, r8
   1f8d4:	mov	r3, r8
   1f8d8:	str	ip, [sp]
   1f8dc:	bl	13880 <bfd_link_hash_lookup@plt>
   1f8e0:	subs	r2, r0, #0
   1f8e4:	beq	1f91c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xba90>
   1f8e8:	ldr	r3, [r2, #20]
   1f8ec:	movw	r0, #10776	; 0x2a18
   1f8f0:	ldrd	r8, [r2, #24]
   1f8f4:	movt	r0, #5
   1f8f8:	ldr	r1, [r3, #88]	; 0x58
   1f8fc:	ldrd	r2, [r3, #80]	; 0x50
   1f900:	ldrd	r4, [r1, #32]
   1f904:	adds	r4, r4, r8
   1f908:	adc	r5, r5, r9
   1f90c:	adds	r2, r2, r4
   1f910:	adc	r3, r3, r5
   1f914:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f918:	b	1f11c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb290>
   1f91c:	movw	r0, #10784	; 0x2a20
   1f920:	movt	r0, #5
   1f924:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1f928:	b	1f11c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xb290>
   1f92c:			; <UNDEFINED> instruction: 0x0009fab8
   1f930:	andeq	pc, r9, r8, lsl pc	; <UNPREDICTABLE>
   1f934:	andeq	r2, r5, r4, lsr #14
   1f938:	push	{r3, r4, r5, r6, r7, lr}
   1f93c:	movw	r3, #1244	; 0x4dc
   1f940:	movt	r3, #10
   1f944:	mov	r4, r0
   1f948:	mov	r5, r1
   1f94c:	ldr	r3, [r3, #44]	; 0x2c
   1f950:	cmp	r3, #1
   1f954:	beq	1fa34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbba8>
   1f958:	cmp	r3, #2
   1f95c:	beq	1fa20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb94>
   1f960:	ldr	r2, [r4, #4]
   1f964:	ldr	r3, [r5, #4]
   1f968:	cmp	r2, r3
   1f96c:	beq	1f978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbaec>
   1f970:	mov	r0, #0
   1f974:	pop	{r3, r4, r5, r6, r7, pc}
   1f978:	ldr	r6, [r4]
   1f97c:	movw	r1, #10924	; 0x2aac
   1f980:	movt	r1, #5
   1f984:	mov	r0, r6
   1f988:	bl	13490 <strcmp@plt>
   1f98c:	cmp	r0, #0
   1f990:	beq	1f970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbae4>
   1f994:	movw	r1, #10936	; 0x2ab8
   1f998:	mov	r0, r6
   1f99c:	movt	r1, #5
   1f9a0:	bl	13490 <strcmp@plt>
   1f9a4:	cmp	r0, #0
   1f9a8:	beq	1f970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbae4>
   1f9ac:	movw	r1, #10948	; 0x2ac4
   1f9b0:	mov	r0, r6
   1f9b4:	movt	r1, #5
   1f9b8:	bl	13490 <strcmp@plt>
   1f9bc:	cmp	r0, #0
   1f9c0:	beq	1f970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbae4>
   1f9c4:	movw	r1, #10964	; 0x2ad4
   1f9c8:	mov	r0, r6
   1f9cc:	movt	r1, #5
   1f9d0:	bl	13490 <strcmp@plt>
   1f9d4:	cmp	r0, #0
   1f9d8:	beq	1f970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbae4>
   1f9dc:	movw	r7, #65288	; 0xff08
   1f9e0:	movt	r7, #9
   1f9e4:	ldr	r3, [r7, #68]	; 0x44
   1f9e8:	cmp	r3, #0
   1f9ec:	beq	1fa18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbb8c>
   1f9f0:	mov	r0, r6
   1f9f4:	ldr	r1, [r5]
   1f9f8:	bl	1e19c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa310>
   1f9fc:	ldr	r3, [r7, #68]	; 0x44
   1fa00:	ldr	r1, [r5]
   1fa04:	mov	r6, r0
   1fa08:	ldr	r0, [r3]
   1fa0c:	bl	1e19c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa310>
   1fa10:	cmp	r6, r0
   1fa14:	ble	1f970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbae4>
   1fa18:	str	r4, [r7, #68]	; 0x44
   1fa1c:	b	1f970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbae4>
   1fa20:	ldr	r3, [r0, #8]
   1fa24:	cmp	r3, #1
   1fa28:	beq	1f960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbad4>
   1fa2c:	mov	r0, #0
   1fa30:	pop	{r3, r4, r5, r6, r7, pc}
   1fa34:	ldr	r3, [r0, #8]
   1fa38:	cmp	r3, #0
   1fa3c:	bne	1f970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbae4>
   1fa40:	ldr	r2, [r4, #4]
   1fa44:	ldr	r3, [r5, #4]
   1fa48:	cmp	r2, r3
   1fa4c:	bne	1f970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbae4>
   1fa50:	b	1f978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbaec>
   1fa54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fa58:	movw	r7, #63248	; 0xf710
   1fa5c:	movt	r7, #9
   1fa60:	ldrb	r3, [r0, #12]
   1fa64:	sub	sp, sp, #68	; 0x44
   1fa68:	mov	r6, r0
   1fa6c:	ldr	r2, [r7]
   1fa70:	cmp	r3, #5
   1fa74:	str	r2, [sp, #60]	; 0x3c
   1fa78:	beq	1fa98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc0c>
   1fa7c:	ldr	r2, [sp, #60]	; 0x3c
   1fa80:	mov	r0, #1
   1fa84:	ldr	r3, [r7]
   1fa88:	cmp	r2, r3
   1fa8c:	bne	1fca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe18>
   1fa90:	add	sp, sp, #68	; 0x44
   1fa94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fa98:	movw	r9, #1336	; 0x538
   1fa9c:	movt	r9, #10
   1faa0:	ldr	r3, [r0, #20]
   1faa4:	ldr	r2, [r9, #44]	; 0x2c
   1faa8:	ldrd	r4, [r0, #24]
   1faac:	cmp	r2, #2
   1fab0:	ldr	r0, [r3]
   1fab4:	beq	1fc78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbdec>
   1fab8:	cmp	r2, #1
   1fabc:	bne	1facc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc40>
   1fac0:	ldr	r2, [r1]
   1fac4:	cmp	r0, r2
   1fac8:	bhi	1fa7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbf0>
   1facc:	movw	sl, #1088	; 0x440
   1fad0:	movt	sl, #10
   1fad4:	ldr	r8, [r3, #4]
   1fad8:	mov	r2, r6
   1fadc:	ldr	r0, [sl, #52]	; 0x34
   1fae0:	mov	r1, sl
   1fae4:	ldr	r3, [r0, #4]
   1fae8:	ldr	r3, [r3, #408]	; 0x198
   1faec:	blx	r3
   1faf0:	cmp	r0, #0
   1faf4:	beq	1fc14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd88>
   1faf8:	ldr	r3, [r9, #80]	; 0x50
   1fafc:	cmp	r3, #0
   1fb00:	beq	1fa7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbf0>
   1fb04:	movw	r9, #65288	; 0xff08
   1fb08:	movt	r9, #9
   1fb0c:	ldr	fp, [r9, #72]	; 0x48
   1fb10:	cmp	fp, #0
   1fb14:	beq	1fc30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbda4>
   1fb18:	ldr	r0, [sl, #52]	; 0x34
   1fb1c:	mov	r2, #3
   1fb20:	ldr	r1, [r6, #4]
   1fb24:	bl	13bec <bfd_demangle@plt>
   1fb28:	subs	r9, r0, #0
   1fb2c:	movw	r0, #14204	; 0x377c
   1fb30:	beq	1fc88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbdfc>
   1fb34:	mov	r1, r9
   1fb38:	movt	r0, #5
   1fb3c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1fb40:	mov	r0, r9
   1fb44:	bl	13a24 <strlen@plt>
   1fb48:	mov	r6, r0
   1fb4c:	mov	r0, r9
   1fb50:	bl	13574 <free@plt>
   1fb54:	cmp	r6, #18
   1fb58:	bgt	1fc6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbde0>
   1fb5c:	add	r6, r6, #1
   1fb60:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1fb64:	cmp	r6, #19
   1fb68:	ble	1fb5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcd0>
   1fb6c:	movw	r0, #11104	; 0x2b60
   1fb70:	movt	r0, #5
   1fb74:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1fb78:	mvn	r2, #0
   1fb7c:	mov	r3, #0
   1fb80:	cmp	r5, r3
   1fb84:	cmpeq	r4, r2
   1fb88:	add	r6, sp, #8
   1fb8c:	bls	1fbf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd68>
   1fb90:	movw	r3, #11112	; 0x2b68
   1fb94:	strd	r4, [sp]
   1fb98:	mov	r1, #1
   1fb9c:	mov	r0, r6
   1fba0:	movt	r3, #5
   1fba4:	mov	r2, #50	; 0x32
   1fba8:	bl	13acc <__sprintf_chk@plt>
   1fbac:	mov	r1, r6
   1fbb0:	movw	r0, #14204	; 0x377c
   1fbb4:	movt	r0, #5
   1fbb8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1fbbc:	mov	r0, r6
   1fbc0:	bl	13a24 <strlen@plt>
   1fbc4:	cmp	r0, #15
   1fbc8:	mov	r4, r0
   1fbcc:	bgt	1fbe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd54>
   1fbd0:	add	r4, r4, #1
   1fbd4:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   1fbd8:	cmp	r4, #16
   1fbdc:	bne	1fbd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd44>
   1fbe0:	ldr	r1, [r8, #180]	; 0xb4
   1fbe4:	movw	r0, #10480	; 0x28f0
   1fbe8:	movt	r0, #5
   1fbec:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1fbf0:	b	1fa7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbf0>
   1fbf4:	str	r4, [sp]
   1fbf8:	movw	r3, #11108	; 0x2b64
   1fbfc:	mov	r1, #1
   1fc00:	mov	r0, r6
   1fc04:	movt	r3, #5
   1fc08:	mov	r2, #50	; 0x32
   1fc0c:	bl	13acc <__sprintf_chk@plt>
   1fc10:	b	1fbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbd20>
   1fc14:	mov	r2, #5
   1fc18:	movw	r1, #10980	; 0x2ae4
   1fc1c:	movt	r1, #5
   1fc20:	bl	13688 <dcgettext@plt>
   1fc24:	ldr	r1, [r6, #4]
   1fc28:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   1fc2c:	b	1faf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc6c>
   1fc30:	mov	r2, #5
   1fc34:	movw	r1, #11028	; 0x2b14
   1fc38:	mov	r0, fp
   1fc3c:	movt	r1, #5
   1fc40:	bl	13688 <dcgettext@plt>
   1fc44:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1fc48:	mov	r2, #5
   1fc4c:	mov	r0, fp
   1fc50:	movw	r1, #11056	; 0x2b30
   1fc54:	movt	r1, #5
   1fc58:	bl	13688 <dcgettext@plt>
   1fc5c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1fc60:	mov	r3, #1
   1fc64:	str	r3, [r9, #72]	; 0x48
   1fc68:	b	1fb18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc8c>
   1fc6c:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   1fc70:	mov	r6, #0
   1fc74:	b	1fb5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcd0>
   1fc78:	ldr	r2, [r1]
   1fc7c:	cmp	r0, r2
   1fc80:	bcs	1facc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbc40>
   1fc84:	b	1fa7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbbf0>
   1fc88:	ldr	r1, [r6, #4]
   1fc8c:	movt	r0, #5
   1fc90:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   1fc94:	ldr	r0, [r6, #4]
   1fc98:	bl	13a24 <strlen@plt>
   1fc9c:	mov	r6, r0
   1fca0:	b	1fb54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbcc8>
   1fca4:	bl	13694 <__stack_chk_fail@plt>
   1fca8:	ldrb	r3, [r0]
   1fcac:	cmp	r3, #0
   1fcb0:	beq	1fcf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe6c>
   1fcb4:	cmp	r3, #63	; 0x3f
   1fcb8:	beq	1fcfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe70>
   1fcbc:	cmp	r3, #42	; 0x2a
   1fcc0:	beq	1fcfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe70>
   1fcc4:	cmp	r3, #91	; 0x5b
   1fcc8:	beq	1fcfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe70>
   1fccc:	mov	r2, r0
   1fcd0:	b	1fcec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe60>
   1fcd4:	cmp	r3, #63	; 0x3f
   1fcd8:	beq	1fcfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe70>
   1fcdc:	cmp	r3, #42	; 0x2a
   1fce0:	beq	1fcfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe70>
   1fce4:	cmp	r3, #91	; 0x5b
   1fce8:	beq	1fcfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe70>
   1fcec:	ldrb	r3, [r2, #1]!
   1fcf0:	cmp	r3, #0
   1fcf4:	bne	1fcd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe48>
   1fcf8:	b	13490 <strcmp@plt>
   1fcfc:	mov	r2, #0
   1fd00:	b	138a4 <fnmatch@plt>
   1fd04:	push	{r4, r5, r6, lr}
   1fd08:	mov	r5, r0
   1fd0c:	ldrb	r0, [r1, #1]
   1fd10:	mov	r4, r1
   1fd14:	mov	r6, r3
   1fd18:	cmp	r0, #0
   1fd1c:	bne	1fd90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf04>
   1fd20:	subs	r2, r4, r5
   1fd24:	ldr	r3, [r6]
   1fd28:	rsbs	r1, r2, #0
   1fd2c:	adcs	r1, r1, r2
   1fd30:	cmp	r3, #0
   1fd34:	moveq	r2, r3
   1fd38:	beq	1fd48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbebc>
   1fd3c:	ldr	r2, [r3, #148]	; 0x94
   1fd40:	adds	r2, r2, #0
   1fd44:	movne	r2, #1
   1fd48:	eor	r2, r2, r1
   1fd4c:	tst	r2, #255	; 0xff
   1fd50:	beq	1fda4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf18>
   1fd54:	cmp	r4, r5
   1fd58:	beq	1fdac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf20>
   1fd5c:	ldr	r2, [r3, #148]	; 0x94
   1fd60:	mov	r0, r5
   1fd64:	mov	r3, #0
   1fd68:	ldr	r1, [r2]
   1fd6c:	strb	r3, [r4]
   1fd70:	bl	1fca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe1c>
   1fd74:	movw	r3, #1088	; 0x440
   1fd78:	movt	r3, #10
   1fd7c:	ldrb	r3, [r3, #9]
   1fd80:	strb	r3, [r4]
   1fd84:	rsbs	r0, r0, #1
   1fd88:	movcc	r0, #0
   1fd8c:	pop	{r4, r5, r6, pc}
   1fd90:	mov	r1, r2
   1fd94:	add	r0, r4, #1
   1fd98:	bl	1fca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe1c>
   1fd9c:	cmp	r0, #0
   1fda0:	beq	1fd20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe94>
   1fda4:	mov	r0, #0
   1fda8:	pop	{r4, r5, r6, pc}
   1fdac:	mov	r0, #1
   1fdb0:	pop	{r4, r5, r6, pc}
   1fdb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fdb8:	mov	r8, r3
   1fdbc:	ldr	r4, [r3, #8]
   1fdc0:	sub	sp, sp, #8
   1fdc4:	mov	r9, r0
   1fdc8:	mov	r6, r1
   1fdcc:	cmp	r4, #0
   1fdd0:	mov	sl, r2
   1fdd4:	addne	r7, r1, #16
   1fdd8:	bne	1fdfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf70>
   1fddc:	b	1fe60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbfd4>
   1fde0:	ldr	r2, [r6, #8]
   1fde4:	bl	1fd04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe78>
   1fde8:	cmp	r0, #0
   1fdec:	bne	1fe58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbfcc>
   1fdf0:	ldr	r4, [r4, #4]
   1fdf4:	cmp	r4, #0
   1fdf8:	beq	1fe60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbfd4>
   1fdfc:	ldr	r5, [r4]
   1fe00:	mov	r0, r5
   1fe04:	bl	1e448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa5bc>
   1fe08:	mov	r3, r7
   1fe0c:	subs	r1, r0, #0
   1fe10:	mov	r0, r5
   1fe14:	bne	1fde0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf54>
   1fe18:	mov	r0, r5
   1fe1c:	ldr	r1, [r6, #8]
   1fe20:	bl	1fca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe1c>
   1fe24:	cmp	r0, #0
   1fe28:	beq	1fe58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbfcc>
   1fe2c:	ldr	r3, [r6, #16]
   1fe30:	cmp	r3, #0
   1fe34:	beq	1fdf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf64>
   1fe38:	ldr	r3, [r3, #148]	; 0x94
   1fe3c:	cmp	r3, #0
   1fe40:	beq	1fdf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf64>
   1fe44:	ldr	r1, [r3]
   1fe48:	ldr	r0, [r4]
   1fe4c:	bl	1fca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe1c>
   1fe50:	cmp	r0, #0
   1fe54:	bne	1fdf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf64>
   1fe58:	add	sp, sp, #8
   1fe5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fe60:	ldr	r0, [sp, #44]	; 0x2c
   1fe64:	mov	r1, r8
   1fe68:	ldr	r3, [r9, #56]	; 0x38
   1fe6c:	mov	r2, sl
   1fe70:	str	r6, [sp]
   1fe74:	str	r0, [sp, #4]
   1fe78:	mov	r0, r9
   1fe7c:	ldr	ip, [sp, #40]	; 0x28
   1fe80:	blx	ip
   1fe84:	add	sp, sp, #8
   1fe88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fe8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1fe90:	mov	r7, r1
   1fe94:	ldr	r1, [r1, #16]
   1fe98:	sub	sp, sp, #12
   1fe9c:	mov	r6, r0
   1fea0:	mov	r9, r2
   1fea4:	mov	r8, r3
   1fea8:	ldr	r5, [r0, #36]	; 0x24
   1feac:	ldr	r4, [r1, #100]	; 0x64
   1feb0:	cmp	r4, #0
   1feb4:	bne	1fec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc03c>
   1feb8:	b	1ff04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc078>
   1febc:	ldr	r4, [r4, #12]
   1fec0:	cmp	r4, #0
   1fec4:	beq	1ff04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc078>
   1fec8:	ldr	r0, [r5, #4]
   1fecc:	ldr	r1, [r4]
   1fed0:	bl	1e74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8c0>
   1fed4:	cmp	r0, #0
   1fed8:	beq	1febc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc030>
   1fedc:	mov	r2, r4
   1fee0:	str	r9, [sp]
   1fee4:	mov	r0, r6
   1fee8:	str	r8, [sp, #4]
   1feec:	mov	r1, r7
   1fef0:	mov	r3, r5
   1fef4:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   1fef8:	ldr	r4, [r4, #12]
   1fefc:	cmp	r4, #0
   1ff00:	bne	1fec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc03c>
   1ff04:	add	sp, sp, #12
   1ff08:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ff0c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ff10:	mov	r7, r1
   1ff14:	ldr	r1, [r1, #16]
   1ff18:	sub	sp, sp, #12
   1ff1c:	mov	r6, r0
   1ff20:	mov	r9, r2
   1ff24:	mov	r8, r3
   1ff28:	ldr	r5, [r1, #100]	; 0x64
   1ff2c:	cmp	r5, #0
   1ff30:	beq	1ffa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc114>
   1ff34:	ldr	r4, [r6, #16]
   1ff38:	cmp	r4, #0
   1ff3c:	bne	1ff60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc0d4>
   1ff40:	b	1ffa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc11c>
   1ff44:	ldr	r1, [r5]
   1ff48:	bl	1fca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe1c>
   1ff4c:	cmp	r0, #0
   1ff50:	beq	1ff6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc0e0>
   1ff54:	ldr	r4, [r4]
   1ff58:	cmp	r4, #0
   1ff5c:	beq	1ff94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc108>
   1ff60:	ldr	r0, [r4, #4]
   1ff64:	cmp	r0, #0
   1ff68:	bne	1ff44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc0b8>
   1ff6c:	mov	r3, r4
   1ff70:	str	r9, [sp]
   1ff74:	mov	r0, r6
   1ff78:	str	r8, [sp, #4]
   1ff7c:	mov	r1, r7
   1ff80:	mov	r2, r5
   1ff84:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   1ff88:	ldr	r4, [r4]
   1ff8c:	cmp	r4, #0
   1ff90:	bne	1ff60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc0d4>
   1ff94:	ldr	r5, [r5, #12]
   1ff98:	cmp	r5, #0
   1ff9c:	bne	1ff34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc0a8>
   1ffa0:	add	sp, sp, #12
   1ffa4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1ffa8:	ldr	r3, [r6, #56]	; 0x38
   1ffac:	mov	r2, r5
   1ffb0:	mov	r1, r4
   1ffb4:	str	r7, [sp]
   1ffb8:	mov	r0, r6
   1ffbc:	str	r8, [sp, #4]
   1ffc0:	blx	r9
   1ffc4:	ldr	r5, [r5, #12]
   1ffc8:	cmp	r5, #0
   1ffcc:	bne	1ff34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc0a8>
   1ffd0:	b	1ffa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc114>
   1ffd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ffd8:	movw	lr, #63248	; 0xf710
   1ffdc:	sub	sp, sp, #52	; 0x34
   1ffe0:	movt	lr, #9
   1ffe4:	mov	r4, r0
   1ffe8:	mov	r5, r1
   1ffec:	ldr	ip, [lr]
   1fff0:	mov	sl, r3
   1fff4:	str	lr, [sp, #16]
   1fff8:	add	r3, sp, #36	; 0x24
   1fffc:	ldr	lr, [r4, #40]	; 0x28
   20000:	ldr	r1, [r0, #36]	; 0x24
   20004:	str	r2, [sp, #12]
   20008:	movw	r2, #54888	; 0xd668
   2000c:	str	lr, [sp, #28]
   20010:	movt	r2, #1
   20014:	ldr	lr, [r4, #48]	; 0x30
   20018:	str	r1, [sp, #24]
   2001c:	ldr	r0, [r5, #16]
   20020:	ldr	r1, [r1, #4]
   20024:	str	ip, [sp, #44]	; 0x2c
   20028:	mov	ip, #0
   2002c:	ldr	r6, [r4, #44]	; 0x2c
   20030:	str	ip, [sp, #36]	; 0x24
   20034:	str	ip, [sp, #40]	; 0x28
   20038:	str	lr, [sp, #20]
   2003c:	bl	13454 <bfd_get_section_by_name_if@plt>
   20040:	ldr	ip, [sp, #40]	; 0x28
   20044:	ldr	r7, [sp, #36]	; 0x24
   20048:	cmp	ip, #0
   2004c:	bne	20128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   20050:	ldr	r2, [sp, #28]
   20054:	add	r3, sp, #36	; 0x24
   20058:	ldr	r0, [r5, #16]
   2005c:	ldr	r1, [r2, #4]
   20060:	movw	r2, #54888	; 0xd668
   20064:	movt	r2, #1
   20068:	str	ip, [sp, #36]	; 0x24
   2006c:	str	ip, [sp, #40]	; 0x28
   20070:	bl	13454 <bfd_get_section_by_name_if@plt>
   20074:	ldr	r3, [sp, #40]	; 0x28
   20078:	ldr	r8, [sp, #36]	; 0x24
   2007c:	cmp	r3, #0
   20080:	bne	20128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc29c>
   20084:	ldr	r3, [r5, #16]
   20088:	ldr	fp, [r3, #100]	; 0x64
   2008c:	cmp	fp, #0
   20090:	bne	200c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc238>
   20094:	b	2013c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc2b0>
   20098:	ldr	r1, [sp, #12]
   2009c:	mov	r0, r4
   200a0:	str	sl, [sp, #4]
   200a4:	mov	r2, fp
   200a8:	mov	r3, r6
   200ac:	str	r1, [sp]
   200b0:	mov	r1, r5
   200b4:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   200b8:	ldr	fp, [fp, #12]
   200bc:	cmp	fp, #0
   200c0:	beq	2013c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc2b0>
   200c4:	cmp	fp, r7
   200c8:	beq	2017c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc2f0>
   200cc:	cmp	fp, r8
   200d0:	beq	20158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc2cc>
   200d4:	ldr	r9, [fp]
   200d8:	ldr	r0, [r6, #4]
   200dc:	mov	r1, r9
   200e0:	bl	1e74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8c0>
   200e4:	cmp	r0, #0
   200e8:	bne	20098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc20c>
   200ec:	ldr	r2, [sp, #20]
   200f0:	mov	r1, r9
   200f4:	ldr	r0, [r2, #4]
   200f8:	bl	1e74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8c0>
   200fc:	cmp	r0, #0
   20100:	beq	200b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc22c>
   20104:	ldr	r3, [sp, #12]
   20108:	mov	r0, r4
   2010c:	str	sl, [sp, #4]
   20110:	mov	r1, r5
   20114:	mov	r2, fp
   20118:	str	r3, [sp]
   2011c:	ldr	r3, [sp, #20]
   20120:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   20124:	b	200b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc22c>
   20128:	mov	r0, r4
   2012c:	mov	r1, r5
   20130:	ldr	r2, [sp, #12]
   20134:	mov	r3, sl
   20138:	bl	1ff0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc080>
   2013c:	ldr	r1, [sp, #16]
   20140:	ldr	r2, [sp, #44]	; 0x2c
   20144:	ldr	r3, [r1]
   20148:	cmp	r2, r3
   2014c:	bne	201a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc314>
   20150:	add	sp, sp, #52	; 0x34
   20154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20158:	ldr	lr, [sp, #12]
   2015c:	mov	r0, r4
   20160:	str	sl, [sp, #4]
   20164:	mov	r1, r5
   20168:	mov	r2, fp
   2016c:	ldr	r3, [sp, #28]
   20170:	str	lr, [sp]
   20174:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   20178:	b	200b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc22c>
   2017c:	ldr	r3, [sp, #12]
   20180:	mov	r0, r4
   20184:	str	sl, [sp, #4]
   20188:	mov	r1, r5
   2018c:	mov	r2, fp
   20190:	str	r3, [sp]
   20194:	ldr	r3, [sp, #24]
   20198:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   2019c:	b	200b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc22c>
   201a0:	bl	13694 <__stack_chk_fail@plt>
   201a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   201a8:	movw	lr, #63248	; 0xf710
   201ac:	sub	sp, sp, #44	; 0x2c
   201b0:	movt	lr, #9
   201b4:	mov	r5, r0
   201b8:	mov	r7, r1
   201bc:	ldr	r1, [r0, #36]	; 0x24
   201c0:	mov	r8, r2
   201c4:	ldr	ip, [lr]
   201c8:	mov	r9, r3
   201cc:	str	lr, [sp, #16]
   201d0:	add	r3, sp, #28
   201d4:	ldr	lr, [r5, #44]	; 0x2c
   201d8:	movw	r2, #54888	; 0xd668
   201dc:	str	r1, [sp, #20]
   201e0:	movt	r2, #1
   201e4:	ldr	r1, [r1, #4]
   201e8:	ldr	r0, [r7, #16]
   201ec:	str	ip, [sp, #36]	; 0x24
   201f0:	mov	ip, #0
   201f4:	ldr	r4, [r5, #40]	; 0x28
   201f8:	str	lr, [sp, #12]
   201fc:	str	ip, [sp, #28]
   20200:	str	ip, [sp, #32]
   20204:	bl	13454 <bfd_get_section_by_name_if@plt>
   20208:	ldr	r3, [sp, #32]
   2020c:	ldr	r6, [sp, #28]
   20210:	cmp	r3, #0
   20214:	bne	202f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc464>
   20218:	ldr	r3, [r7, #16]
   2021c:	ldr	fp, [r3, #100]	; 0x64
   20220:	cmp	fp, #0
   20224:	bne	20254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc3c8>
   20228:	b	202b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc428>
   2022c:	str	r8, [sp]
   20230:	mov	r0, r5
   20234:	str	r9, [sp, #4]
   20238:	mov	r1, r7
   2023c:	mov	r2, fp
   20240:	mov	r3, r4
   20244:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   20248:	ldr	fp, [fp, #12]
   2024c:	cmp	fp, #0
   20250:	beq	202b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc428>
   20254:	cmp	fp, r6
   20258:	beq	202d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc444>
   2025c:	ldr	sl, [fp]
   20260:	ldr	r0, [r4, #4]
   20264:	mov	r1, sl
   20268:	bl	1e74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8c0>
   2026c:	cmp	r0, #0
   20270:	bne	2022c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc3a0>
   20274:	ldr	r3, [sp, #12]
   20278:	mov	r1, sl
   2027c:	ldr	r0, [r3, #4]
   20280:	bl	1e74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8c0>
   20284:	cmp	r0, #0
   20288:	beq	20248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc3bc>
   2028c:	mov	r2, fp
   20290:	str	r8, [sp]
   20294:	mov	r0, r5
   20298:	str	r9, [sp, #4]
   2029c:	mov	r1, r7
   202a0:	ldr	r3, [sp, #12]
   202a4:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   202a8:	ldr	fp, [fp, #12]
   202ac:	cmp	fp, #0
   202b0:	bne	20254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc3c8>
   202b4:	ldr	r1, [sp, #16]
   202b8:	ldr	r2, [sp, #36]	; 0x24
   202bc:	ldr	r3, [r1]
   202c0:	cmp	r2, r3
   202c4:	bne	20308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc47c>
   202c8:	add	sp, sp, #44	; 0x2c
   202cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   202d0:	str	r8, [sp]
   202d4:	mov	r0, r5
   202d8:	str	r9, [sp, #4]
   202dc:	mov	r1, r7
   202e0:	mov	r2, fp
   202e4:	ldr	r3, [sp, #20]
   202e8:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   202ec:	b	20248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc3bc>
   202f0:	mov	r0, r5
   202f4:	mov	r1, r7
   202f8:	mov	r2, r8
   202fc:	mov	r3, r9
   20300:	bl	1ff0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc080>
   20304:	b	202b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc428>
   20308:	bl	13694 <__stack_chk_fail@plt>
   2030c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20310:	movw	r8, #63248	; 0xf710
   20314:	movt	r8, #9
   20318:	mov	r7, r1
   2031c:	ldr	r1, [r0, #36]	; 0x24
   20320:	sub	sp, sp, #36	; 0x24
   20324:	ldr	ip, [r8]
   20328:	mov	r6, r0
   2032c:	mov	r9, r2
   20330:	ldr	r0, [r7, #16]
   20334:	str	r1, [sp, #12]
   20338:	mov	sl, r3
   2033c:	ldr	r1, [r1, #4]
   20340:	add	r3, sp, #20
   20344:	movw	r2, #54888	; 0xd668
   20348:	movt	r2, #1
   2034c:	str	ip, [sp, #28]
   20350:	mov	ip, #0
   20354:	ldr	r4, [r6, #40]	; 0x28
   20358:	str	ip, [sp, #20]
   2035c:	str	ip, [sp, #24]
   20360:	bl	13454 <bfd_get_section_by_name_if@plt>
   20364:	ldr	r3, [sp, #24]
   20368:	ldr	r5, [sp, #20]
   2036c:	cmp	r3, #0
   20370:	bne	20410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc584>
   20374:	ldr	r3, [r7, #16]
   20378:	ldr	fp, [r3, #100]	; 0x64
   2037c:	cmp	fp, #0
   20380:	bne	20394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc508>
   20384:	b	203d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc54c>
   20388:	ldr	fp, [fp, #12]
   2038c:	cmp	fp, #0
   20390:	beq	203d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc54c>
   20394:	cmp	fp, r5
   20398:	beq	203f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc564>
   2039c:	ldr	r0, [r4, #4]
   203a0:	ldr	r1, [fp]
   203a4:	bl	1e74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa8c0>
   203a8:	cmp	r0, #0
   203ac:	beq	20388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc4fc>
   203b0:	mov	r2, fp
   203b4:	str	r9, [sp]
   203b8:	mov	r0, r6
   203bc:	str	sl, [sp, #4]
   203c0:	mov	r1, r7
   203c4:	mov	r3, r4
   203c8:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   203cc:	ldr	fp, [fp, #12]
   203d0:	cmp	fp, #0
   203d4:	bne	20394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc508>
   203d8:	ldr	r2, [sp, #28]
   203dc:	ldr	r3, [r8]
   203e0:	cmp	r2, r3
   203e4:	bne	20428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc59c>
   203e8:	add	sp, sp, #36	; 0x24
   203ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   203f0:	str	r9, [sp]
   203f4:	mov	r0, r6
   203f8:	str	sl, [sp, #4]
   203fc:	mov	r1, r7
   20400:	mov	r2, fp
   20404:	ldr	r3, [sp, #12]
   20408:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   2040c:	b	20388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc4fc>
   20410:	mov	r0, r6
   20414:	mov	r1, r7
   20418:	mov	r2, r9
   2041c:	mov	r3, sl
   20420:	bl	1ff0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc080>
   20424:	b	203d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc54c>
   20428:	bl	13694 <__stack_chk_fail@plt>
   2042c:	push	{r4, r5, r6, r7, r8, r9, lr}
   20430:	movw	r4, #63248	; 0xf710
   20434:	movt	r4, #9
   20438:	ldr	r7, [r0, #36]	; 0x24
   2043c:	sub	sp, sp, #28
   20440:	mov	r6, r0
   20444:	ldr	lr, [r4]
   20448:	mov	r5, r1
   2044c:	ldr	r0, [r1, #16]
   20450:	mov	r9, r2
   20454:	ldr	r1, [r7, #4]
   20458:	mov	r8, r3
   2045c:	movw	r2, #54888	; 0xd668
   20460:	add	r3, sp, #12
   20464:	movt	r2, #1
   20468:	mov	ip, #0
   2046c:	str	lr, [sp, #20]
   20470:	str	ip, [sp, #12]
   20474:	str	ip, [sp, #16]
   20478:	bl	13454 <bfd_get_section_by_name_if@plt>
   2047c:	ldr	r3, [sp, #16]
   20480:	ldr	r2, [sp, #12]
   20484:	cmp	r3, #0
   20488:	bne	204c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc638>
   2048c:	cmp	r2, #0
   20490:	beq	204ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc620>
   20494:	str	r9, [sp]
   20498:	mov	r0, r6
   2049c:	str	r8, [sp, #4]
   204a0:	mov	r1, r5
   204a4:	mov	r3, r7
   204a8:	bl	1fdb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbf28>
   204ac:	ldr	r2, [sp, #20]
   204b0:	ldr	r3, [r4]
   204b4:	cmp	r2, r3
   204b8:	bne	204dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc650>
   204bc:	add	sp, sp, #28
   204c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   204c4:	mov	r0, r6
   204c8:	mov	r1, r5
   204cc:	mov	r2, r9
   204d0:	mov	r3, r8
   204d4:	bl	1ff0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc080>
   204d8:	b	204ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc620>
   204dc:	bl	13694 <__stack_chk_fail@plt>
   204e0:	push	{r3, r4, r5, lr}
   204e4:	movw	r3, #1088	; 0x440
   204e8:	movt	r3, #10
   204ec:	mov	r4, r0
   204f0:	mov	r5, r1
   204f4:	ldrb	r3, [r3]
   204f8:	and	r3, r3, #3
   204fc:	cmp	r3, #2
   20500:	beq	20550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc6c4>
   20504:	movw	r3, #65288	; 0xff08
   20508:	movt	r3, #9
   2050c:	ldr	r5, [r4]
   20510:	ldr	r4, [r3, #76]	; 0x4c
   20514:	cmp	r4, #0
   20518:	bne	2052c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc6a0>
   2051c:	b	20548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc6bc>
   20520:	ldr	r4, [r4]
   20524:	cmp	r4, #0
   20528:	beq	20548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc6bc>
   2052c:	ldr	r0, [r4, #4]
   20530:	mov	r1, r5
   20534:	bl	1fca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe1c>
   20538:	cmp	r0, #0
   2053c:	bne	20520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc694>
   20540:	mov	r0, #1
   20544:	pop	{r3, r4, r5, pc}
   20548:	mov	r0, #0
   2054c:	pop	{r3, r4, r5, pc}
   20550:	ldr	r0, [r0, #180]	; 0xb4
   20554:	cmp	r0, #0
   20558:	beq	20504 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc678>
   2055c:	ldr	r3, [r0, #4]
   20560:	mov	r1, r4
   20564:	ldr	r3, [r3, #396]	; 0x18c
   20568:	blx	r3
   2056c:	cmp	r0, #0
   20570:	beq	20504 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc678>
   20574:	cmp	r5, #0
   20578:	beq	20540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc6b4>
   2057c:	ldr	r0, [r5, #24]
   20580:	movw	r1, #11120	; 0x2b70
   20584:	movt	r1, #5
   20588:	bl	13490 <strcmp@plt>
   2058c:	adds	r0, r0, #0
   20590:	movne	r0, #1
   20594:	pop	{r3, r4, r5, pc}
   20598:	push	{r3, r4, r5, lr}
   2059c:	mov	r0, r2
   205a0:	ldr	r5, [sp, #20]
   205a4:	mov	r4, r2
   205a8:	mov	r1, r5
   205ac:	bl	204e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc654>
   205b0:	cmp	r0, #0
   205b4:	popne	{r3, r4, r5, pc}
   205b8:	ldr	r3, [r4, #88]	; 0x58
   205bc:	cmp	r3, #0
   205c0:	popne	{r3, r4, r5, pc}
   205c4:	ldr	r3, [r4, #20]
   205c8:	ands	r3, r3, #8
   205cc:	ldrbeq	r2, [r5, #84]	; 0x54
   205d0:	bfieq	r2, r3, #2, #1
   205d4:	strbeq	r2, [r5, #84]	; 0x54
   205d8:	pop	{r3, r4, r5, pc}
   205dc:	push	{r4, r5, lr}
   205e0:	movw	r4, #63248	; 0xf710
   205e4:	movt	r4, #9
   205e8:	sub	sp, sp, #12
   205ec:	movw	r1, #11132	; 0x2b7c
   205f0:	mov	r2, #12
   205f4:	ldr	r3, [r4]
   205f8:	movt	r1, #5
   205fc:	mov	r5, r0
   20600:	str	r3, [sp, #4]
   20604:	bl	13e08 <strncmp@plt>
   20608:	cmp	r0, #0
   2060c:	beq	2062c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc7a0>
   20610:	movw	r1, #11148	; 0x2b8c
   20614:	mov	r0, r5
   20618:	movt	r1, #5
   2061c:	mov	r2, #12
   20620:	bl	13e08 <strncmp@plt>
   20624:	cmp	r0, #0
   20628:	bne	20664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc7d8>
   2062c:	add	r0, r5, #12
   20630:	mov	r1, sp
   20634:	mov	r2, #10
   20638:	bl	13a18 <strtoul@plt>
   2063c:	ldr	r3, [sp]
   20640:	ldrb	r3, [r3]
   20644:	cmp	r3, #0
   20648:	movne	r0, #0
   2064c:	ldr	r2, [sp, #4]
   20650:	ldr	r3, [r4]
   20654:	cmp	r2, r3
   20658:	bne	206cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc840>
   2065c:	add	sp, sp, #12
   20660:	pop	{r4, r5, pc}
   20664:	movw	r1, #11164	; 0x2b9c
   20668:	mov	r0, r5
   2066c:	movt	r1, #5
   20670:	mov	r2, #7
   20674:	bl	13e08 <strncmp@plt>
   20678:	cmp	r0, #0
   2067c:	beq	2069c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc810>
   20680:	movw	r1, #11172	; 0x2ba4
   20684:	mov	r0, r5
   20688:	movt	r1, #5
   2068c:	mov	r2, #7
   20690:	bl	13e08 <strncmp@plt>
   20694:	cmp	r0, #0
   20698:	bne	206c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc838>
   2069c:	add	r0, r5, #7
   206a0:	mov	r1, sp
   206a4:	mov	r2, #10
   206a8:	bl	13a18 <strtoul@plt>
   206ac:	ldr	r3, [sp]
   206b0:	ldrb	r3, [r3]
   206b4:	cmp	r3, #0
   206b8:	rsbeq	r0, r0, #65280	; 0xff00
   206bc:	addeq	r0, r0, #255	; 0xff
   206c0:	beq	2064c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc7c0>
   206c4:	mov	r0, #0
   206c8:	b	2064c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc7c0>
   206cc:	bl	13694 <__stack_chk_fail@plt>
   206d0:	push	{r4, r5, lr}
   206d4:	sub	sp, sp, #12
   206d8:	sub	r0, r0, #1
   206dc:	mov	r4, r3
   206e0:	ldr	r5, [sp, #24]
   206e4:	cmp	r0, #5
   206e8:	ldrls	pc, [pc, r0, lsl #2]
   206ec:	b	20790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc904>
   206f0:	andeq	r0, r2, r8, lsr r7
   206f4:	andeq	r0, r2, r8, ror #14
   206f8:	andeq	r0, r2, ip, asr #14
   206fc:	andeq	r0, r2, ip, ror r7
   20700:	muleq	r2, r0, r7
   20704:	andeq	r0, r2, r8, lsl #14
   20708:	ldr	r0, [r1]
   2070c:	str	r1, [sp, #4]
   20710:	bl	205dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc750>
   20714:	mov	r5, r0
   20718:	ldr	r0, [r4]
   2071c:	bl	205dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc750>
   20720:	ldr	r1, [sp, #4]
   20724:	cmp	r5, #0
   20728:	cmpne	r0, #0
   2072c:	beq	20738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc8ac>
   20730:	subs	r0, r5, r0
   20734:	bne	20774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc8e8>
   20738:	ldr	r0, [r1]
   2073c:	ldr	r1, [r4]
   20740:	add	sp, sp, #12
   20744:	pop	{r4, r5, lr}
   20748:	b	13490 <strcmp@plt>
   2074c:	ldr	r0, [r1]
   20750:	ldr	r1, [r3]
   20754:	str	r2, [sp, #4]
   20758:	bl	13490 <strcmp@plt>
   2075c:	ldr	r2, [sp, #4]
   20760:	cmp	r0, #0
   20764:	bne	20774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc8e8>
   20768:	ldr	r0, [r5]
   2076c:	ldr	r3, [r2]
   20770:	rsb	r0, r3, r0
   20774:	add	sp, sp, #12
   20778:	pop	{r4, r5, pc}
   2077c:	ldr	r0, [r5]
   20780:	ldr	r3, [r2]
   20784:	subs	r0, r0, r3
   20788:	bne	20774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc8e8>
   2078c:	b	20738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc8ac>
   20790:	movw	r0, #10132	; 0x2794
   20794:	movw	r1, #425	; 0x1a9
   20798:	movt	r0, #5
   2079c:	ldr	r2, [pc]	; 207a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc918>
   207a0:	bl	135d4 <_bfd_abort@plt>
   207a4:	andeq	r2, r5, ip, lsr r7
   207a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   207ac:	sub	sp, sp, #12
   207b0:	mov	r7, r0
   207b4:	mov	r6, r1
   207b8:	mov	r0, r2
   207bc:	ldr	r1, [sp, #44]	; 0x2c
   207c0:	mov	r5, r2
   207c4:	bl	204e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc654>
   207c8:	subs	r9, r0, #0
   207cc:	beq	207d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc94c>
   207d0:	add	sp, sp, #12
   207d4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   207d8:	mov	r0, #12
   207dc:	add	r4, r7, #52	; 0x34
   207e0:	bl	137b4 <xmalloc@plt>
   207e4:	ldr	r3, [r7, #12]
   207e8:	cmp	r3, #0
   207ec:	mov	r8, r0
   207f0:	str	r9, [r0, #4]
   207f4:	str	r9, [r0, #8]
   207f8:	str	r5, [r0]
   207fc:	bne	20844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9b8>
   20800:	cmp	r6, #0
   20804:	beq	20814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc988>
   20808:	ldr	r3, [r6, #12]
   2080c:	cmp	r3, #0
   20810:	bne	20844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9b8>
   20814:	ldr	r2, [r7, #52]	; 0x34
   20818:	cmp	r2, #0
   2081c:	bne	20828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc99c>
   20820:	b	20838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9ac>
   20824:	mov	r2, r3
   20828:	ldr	r3, [r2, #8]
   2082c:	cmp	r3, #0
   20830:	bne	20824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc998>
   20834:	add	r4, r2, #8
   20838:	str	r8, [r4]
   2083c:	add	sp, sp, #12
   20840:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20844:	add	r7, r5, #92	; 0x5c
   20848:	b	20870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9e4>
   2084c:	ldr	r3, [r3]
   20850:	ldr	r0, [r6, #12]
   20854:	add	ip, r3, #92	; 0x5c
   20858:	str	ip, [sp]
   2085c:	bl	206d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc844>
   20860:	ldr	r4, [r4]
   20864:	cmp	r0, #0
   20868:	addlt	r4, r4, #4
   2086c:	addge	r4, r4, #8
   20870:	ldr	r3, [r4]
   20874:	mov	r1, r5
   20878:	mov	r2, r7
   2087c:	cmp	r3, #0
   20880:	bne	2084c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9c0>
   20884:	str	r8, [r4]
   20888:	b	2083c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc9b0>
   2088c:	push	{r4, r5, r6, r7, r8, lr}
   20890:	mov	r6, r0
   20894:	ldr	r0, [r1, #16]
   20898:	mov	r5, r1
   2089c:	mov	r7, r2
   208a0:	mov	r8, r3
   208a4:	cmp	r0, #0
   208a8:	beq	208bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca30>
   208ac:	mov	r1, #2
   208b0:	bl	13d48 <bfd_check_format@plt>
   208b4:	cmp	r0, #0
   208b8:	bne	208e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca58>
   208bc:	ldrb	r3, [r5, #36]	; 0x24
   208c0:	tst	r3, #16
   208c4:	popne	{r4, r5, r6, r7, r8, pc}
   208c8:	mov	r1, r5
   208cc:	mov	r2, r7
   208d0:	mov	r3, r8
   208d4:	ldr	ip, [r6, #32]
   208d8:	mov	r0, r6
   208dc:	blx	ip
   208e0:	pop	{r4, r5, r6, r7, r8, pc}
   208e4:	ldr	r0, [r5, #16]
   208e8:	mov	r1, #0
   208ec:	bl	13d54 <bfd_openr_next_archived_file@plt>
   208f0:	subs	r4, r0, #0
   208f4:	popeq	{r4, r5, r6, r7, r8, pc}
   208f8:	ldr	ip, [r4, #172]	; 0xac
   208fc:	cmp	ip, #0
   20900:	bne	20924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca98>
   20904:	mov	r1, r4
   20908:	ldr	r0, [r5, #16]
   2090c:	bl	13d54 <bfd_openr_next_archived_file@plt>
   20910:	subs	r4, r0, #0
   20914:	beq	2094c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac0>
   20918:	ldr	ip, [r4, #172]	; 0xac
   2091c:	cmp	ip, #0
   20920:	beq	20904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca78>
   20924:	ldrb	r1, [ip, #36]	; 0x24
   20928:	tst	r1, #16
   2092c:	bne	20904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca78>
   20930:	mov	r1, ip
   20934:	mov	r0, r6
   20938:	ldr	ip, [r6, #32]
   2093c:	mov	r2, r7
   20940:	mov	r3, r8
   20944:	blx	ip
   20948:	b	20904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca78>
   2094c:	pop	{r4, r5, r6, r7, r8, pc}
   20950:	push	{r4, r5, r6, lr}
   20954:	movw	r4, #65288	; 0xff08
   20958:	movt	r4, #9
   2095c:	mov	r5, r0
   20960:	ldr	r2, [r4, #96]	; 0x60
   20964:	ldr	r3, [r4, #92]	; 0x5c
   20968:	rsb	r1, r3, r2
   2096c:	cmp	r0, r1
   20970:	bhi	209cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb40>
   20974:	ldr	r0, [r4, #88]	; 0x58
   20978:	add	r3, r3, r5
   2097c:	movw	ip, #65288	; 0xff08
   20980:	movt	ip, #9
   20984:	cmp	r3, r0
   20988:	ldr	r6, [r4, #104]	; 0x68
   2098c:	ldrbeq	r1, [ip, #120]	; 0x78
   20990:	add	r3, r3, r6
   20994:	bic	r3, r3, r6
   20998:	str	r3, [r4, #92]	; 0x5c
   2099c:	orreq	r1, r1, #2
   209a0:	strbeq	r1, [ip, #120]	; 0x78
   209a4:	movw	ip, #65288	; 0xff08
   209a8:	ldr	r1, [r4, #84]	; 0x54
   209ac:	movt	ip, #9
   209b0:	rsb	r5, r1, r2
   209b4:	rsb	r1, r1, r3
   209b8:	cmp	r1, r5
   209bc:	strhi	r2, [ip, #92]	; 0x5c
   209c0:	movhi	r3, r2
   209c4:	str	r3, [r4, #88]	; 0x58
   209c8:	pop	{r4, r5, r6, pc}
   209cc:	add	r0, r4, #80	; 0x50
   209d0:	mov	r1, r5
   209d4:	bl	13658 <_obstack_newchunk@plt>
   209d8:	ldr	r3, [r4, #92]	; 0x5c
   209dc:	ldr	r2, [r4, #96]	; 0x60
   209e0:	b	20974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcae8>
   209e4:	push	{r3, r4, r5, r6, r7, lr}
   209e8:	mov	r5, r0
   209ec:	ldrb	r3, [r0, #12]
   209f0:	sub	r3, r3, #3
   209f4:	cmp	r3, #1
   209f8:	bls	20a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb78>
   209fc:	mov	r0, #1
   20a00:	pop	{r3, r4, r5, r6, r7, pc}
   20a04:	ldr	r1, [r0, #20]
   20a08:	movw	r3, #1088	; 0x440
   20a0c:	movt	r3, #10
   20a10:	ldr	r2, [r1, #180]	; 0xb4
   20a14:	ldr	r3, [r3, #52]	; 0x34
   20a18:	cmp	r2, r3
   20a1c:	beq	209fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb70>
   20a20:	cmp	r2, #0
   20a24:	beq	209fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcb70>
   20a28:	ldr	r6, [r1, #136]	; 0x88
   20a2c:	cmp	r6, #0
   20a30:	beq	20aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc60>
   20a34:	ldr	r3, [r6, #4]
   20a38:	cmp	r3, #0
   20a3c:	streq	r6, [r6, #4]
   20a40:	movw	r4, #65288	; 0xff08
   20a44:	movt	r4, #9
   20a48:	ldr	r1, [r4, #40]	; 0x28
   20a4c:	ldr	r2, [r4, #36]	; 0x24
   20a50:	rsb	r3, r2, r1
   20a54:	cmp	r3, #7
   20a58:	bls	20ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc48>
   20a5c:	ldr	r3, [r4, #32]
   20a60:	add	r2, r2, #8
   20a64:	movw	r0, #65288	; 0xff08
   20a68:	movt	r0, #9
   20a6c:	cmp	r2, r3
   20a70:	ldr	r7, [r4, #48]	; 0x30
   20a74:	ldrbeq	ip, [r0, #64]	; 0x40
   20a78:	add	r2, r2, r7
   20a7c:	bic	r2, r2, r7
   20a80:	str	r2, [r4, #36]	; 0x24
   20a84:	orreq	ip, ip, #2
   20a88:	strbeq	ip, [r0, #64]	; 0x40
   20a8c:	movw	r0, #65288	; 0xff08
   20a90:	ldr	ip, [r4, #28]
   20a94:	movt	r0, #9
   20a98:	rsb	r7, ip, r1
   20a9c:	rsb	ip, ip, r2
   20aa0:	cmp	ip, r7
   20aa4:	strhi	r1, [r0, #36]	; 0x24
   20aa8:	ldr	r0, [r6, #4]
   20aac:	ldr	ip, [r6, #8]
   20ab0:	movhi	r2, r1
   20ab4:	add	r1, r3, #4
   20ab8:	str	r2, [r4, #32]
   20abc:	str	r5, [r3]
   20ac0:	add	r2, ip, #1
   20ac4:	str	r3, [r0]
   20ac8:	mov	r0, #1
   20acc:	stmib	r6, {r1, r2}
   20ad0:	pop	{r3, r4, r5, r6, r7, pc}
   20ad4:	mov	r1, #8
   20ad8:	add	r0, r4, #24
   20adc:	bl	13658 <_obstack_newchunk@plt>
   20ae0:	ldr	r2, [r4, #36]	; 0x24
   20ae4:	ldr	r1, [r4, #40]	; 0x28
   20ae8:	b	20a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcbd0>
   20aec:	mov	r0, #12
   20af0:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   20af4:	ldr	r2, [r5, #20]
   20af8:	mov	r3, #0
   20afc:	mov	r6, r0
   20b00:	str	r0, [r2, #136]	; 0x88
   20b04:	str	r0, [r6, #4]
   20b08:	str	r3, [r0, #8]
   20b0c:	b	20a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcbb4>
   20b10:	ldr	ip, [pc, #276]	; 20c2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcda0>
   20b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b18:	cmp	r0, ip
   20b1c:	sub	sp, sp, #12
   20b20:	mov	r4, r0
   20b24:	mov	r5, r1
   20b28:	mov	fp, r3
   20b2c:	ldr	sl, [sp, #48]	; 0x30
   20b30:	beq	20b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xccbc>
   20b34:	cmp	r0, #0
   20b38:	beq	20b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xccbc>
   20b3c:	ldr	r3, [r0, #4]
   20b40:	cmp	r3, #12
   20b44:	beq	20c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcd90>
   20b48:	ldr	r0, [r4]
   20b4c:	cmp	r0, #0
   20b50:	beq	20b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xccd4>
   20b54:	ldr	r3, [r0, #4]
   20b58:	cmp	r3, #12
   20b5c:	beq	20c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcd80>
   20b60:	mov	r0, #32
   20b64:	str	r2, [sp, #4]
   20b68:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   20b6c:	ldr	ip, [r4]
   20b70:	ldr	r1, [pc, #184]	; 20c30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcda4>
   20b74:	cmp	r5, #0
   20b78:	mov	r3, #12
   20b7c:	moveq	r5, r1
   20b80:	str	ip, [r0]
   20b84:	str	r0, [r4]
   20b88:	str	sl, [r0, #24]
   20b8c:	str	r3, [r0, #4]
   20b90:	str	r5, [r0, #28]
   20b94:	ldr	r2, [sp, #4]
   20b98:	movw	r3, #65288	; 0xff08
   20b9c:	movt	r3, #9
   20ba0:	ldrd	r6, [sl, #32]
   20ba4:	ldr	r1, [r3, #8]
   20ba8:	ldrd	r8, [sp, #56]	; 0x38
   20bac:	rsb	r3, r1, #32
   20bb0:	lsr	r4, r2, r1
   20bb4:	str	r2, [r0, #16]
   20bb8:	subs	r8, r8, r6
   20bbc:	sbc	r9, r9, r7
   20bc0:	sub	r2, r1, #32
   20bc4:	strd	r8, [r0, #8]
   20bc8:	orr	r4, r4, fp, lsl r3
   20bcc:	ldrd	r8, [sp, #56]	; 0x38
   20bd0:	orr	r4, r4, fp, lsr r2
   20bd4:	lsr	r5, fp, r1
   20bd8:	adds	r4, r4, r8
   20bdc:	str	fp, [r0, #20]
   20be0:	adc	r5, r5, r9
   20be4:	subs	r4, r4, r6
   20be8:	sbc	r5, r5, r7
   20bec:	lsl	r0, r5, r1
   20bf0:	lsl	r1, r4, r1
   20bf4:	orr	r0, r0, r4, lsl r2
   20bf8:	str	r1, [sl, #48]	; 0x30
   20bfc:	orr	r0, r0, r4, lsr r3
   20c00:	str	r0, [sl, #52]	; 0x34
   20c04:	add	sp, sp, #12
   20c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20c0c:	ldr	r3, [r0, #24]
   20c10:	cmp	r3, sl
   20c14:	bne	20b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xccd4>
   20c18:	b	20b98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcd0c>
   20c1c:	ldr	r3, [r0, #24]
   20c20:	cmp	r3, sl
   20c24:	bne	20b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xccbc>
   20c28:	b	20b98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcd0c>
   20c2c:	andeq	pc, r9, ip, lsl #31
   20c30:	andeq	pc, r9, r4, lsl #31
   20c34:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   20c38:	movw	ip, #65288	; 0xff08
   20c3c:	subs	r8, r3, #0
   20c40:	movt	ip, #9
   20c44:	mov	r7, r2
   20c48:	mov	r6, r0
   20c4c:	mov	r2, #1
   20c50:	mov	r5, r1
   20c54:	str	r2, [ip, #140]	; 0x8c
   20c58:	beq	20d10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xce84>
   20c5c:	movw	r3, #62408	; 0xf3c8
   20c60:	movt	r3, #9
   20c64:	mov	r0, #44	; 0x2c
   20c68:	ldr	r8, [r3]
   20c6c:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   20c70:	mov	r3, #2
   20c74:	mov	r2, #0
   20c78:	stm	r0, {r2, r3}
   20c7c:	mov	r4, r0
   20c80:	ldr	r3, [r8, #4]
   20c84:	str	r0, [r3]
   20c88:	str	r0, [r8, #4]
   20c8c:	mov	r1, #0
   20c90:	mov	r2, #28
   20c94:	add	r0, r4, #16
   20c98:	bl	13af0 <memset@plt>
   20c9c:	movw	r3, #1032	; 0x408
   20ca0:	movt	r3, #10
   20ca4:	ldrb	r2, [r4, #36]	; 0x24
   20ca8:	ldrb	r1, [r4, #37]	; 0x25
   20cac:	ldrb	ip, [r3]
   20cb0:	ldrb	r8, [r3, #1]
   20cb4:	ubfx	r9, ip, #5, #1
   20cb8:	ubfx	r0, ip, #6, #1
   20cbc:	bfi	r2, r9, #5, #1
   20cc0:	bfi	r1, r8, #0, #1
   20cc4:	bfi	r2, r0, #6, #1
   20cc8:	strb	r1, [r4, #37]	; 0x25
   20ccc:	ldrb	r1, [r3]
   20cd0:	lsr	ip, ip, #7
   20cd4:	mov	r3, r2
   20cd8:	bfi	r3, ip, #7, #1
   20cdc:	ubfx	r2, r1, #3, #1
   20ce0:	str	r7, [r4, #32]
   20ce4:	bfi	r3, r2, #3, #1
   20ce8:	strb	r3, [r4, #36]	; 0x24
   20cec:	cmp	r5, #5
   20cf0:	ldrls	pc, [pc, r5, lsl #2]
   20cf4:	b	20e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf84>
   20cf8:	andeq	r0, r2, r0, ror #26
   20cfc:	andeq	r0, r2, r4, lsr #27
   20d00:	andeq	r0, r2, r8, asr #27
   20d04:	andeq	r0, r2, r0, ror #27
   20d08:	andeq	r0, r2, ip, ror #27
   20d0c:	andeq	r0, r2, ip, lsr #26
   20d10:	mov	r0, #44	; 0x2c
   20d14:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   20d18:	mov	r3, #2
   20d1c:	mov	r4, r0
   20d20:	str	r8, [r0]
   20d24:	str	r3, [r0, #4]
   20d28:	b	20c8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xce00>
   20d2c:	ldrb	r3, [r4, #37]	; 0x25
   20d30:	str	r6, [r4, #8]
   20d34:	orr	r3, r3, #4
   20d38:	str	r6, [r4, #12]
   20d3c:	strb	r3, [r4, #37]	; 0x25
   20d40:	movw	r3, #1020	; 0x3fc
   20d44:	movt	r3, #10
   20d48:	add	r2, r4, #28
   20d4c:	mov	r0, r4
   20d50:	ldr	r1, [r3, #4]
   20d54:	str	r4, [r1]
   20d58:	str	r2, [r3, #4]
   20d5c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   20d60:	ldrb	r3, [r6]
   20d64:	cmp	r3, #58	; 0x3a
   20d68:	beq	20e24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcf98>
   20d6c:	str	r6, [r4, #8]
   20d70:	mov	r2, #0
   20d74:	mov	r1, r6
   20d78:	movw	r0, #11180	; 0x2bac
   20d7c:	movt	r0, #5
   20d80:	bl	13760 <concat@plt>
   20d84:	ldrb	r2, [r4, #36]	; 0x24
   20d88:	ldrb	r3, [r4, #37]	; 0x25
   20d8c:	orr	r2, r2, #5
   20d90:	strb	r2, [r4, #36]	; 0x24
   20d94:	orr	r3, r3, #4
   20d98:	strb	r3, [r4, #37]	; 0x25
   20d9c:	str	r0, [r4, #12]
   20da0:	b	20d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xceb4>
   20da4:	ldrb	r2, [r4, #37]	; 0x25
   20da8:	ldrb	r3, [r4, #36]	; 0x24
   20dac:	orr	r2, r2, #4
   20db0:	str	r6, [r4, #8]
   20db4:	orr	r3, r3, #16
   20db8:	str	r6, [r4, #12]
   20dbc:	strb	r2, [r4, #37]	; 0x25
   20dc0:	strb	r3, [r4, #36]	; 0x24
   20dc4:	b	20d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xceb4>
   20dc8:	ldrb	r3, [r4, #36]	; 0x24
   20dcc:	str	r6, [r4, #8]
   20dd0:	orr	r3, r3, #4
   20dd4:	str	r6, [r4, #12]
   20dd8:	strb	r3, [r4, #36]	; 0x24
   20ddc:	b	20d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xceb4>
   20de0:	str	r6, [r4, #8]
   20de4:	str	r6, [r4, #12]
   20de8:	b	20d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xceb4>
   20dec:	ldrb	r2, [r4, #37]	; 0x25
   20df0:	ldrb	r3, [r4, #36]	; 0x24
   20df4:	orr	r2, r2, #4
   20df8:	str	r6, [r4, #8]
   20dfc:	orr	r3, r3, #4
   20e00:	str	r6, [r4, #12]
   20e04:	strb	r2, [r4, #37]	; 0x25
   20e08:	strb	r3, [r4, #36]	; 0x24
   20e0c:	b	20d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xceb4>
   20e10:	movw	r0, #10132	; 0x2794
   20e14:	movw	r1, #1112	; 0x458
   20e18:	movt	r0, #5
   20e1c:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   20e20:	b	20d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xceb4>
   20e24:	ldrb	r3, [r6, #1]
   20e28:	cmp	r3, #0
   20e2c:	beq	20d6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcee0>
   20e30:	ldrb	r3, [r4, #36]	; 0x24
   20e34:	add	r2, r6, #1
   20e38:	str	r2, [r4, #8]
   20e3c:	orr	r3, r3, #2
   20e40:	strb	r3, [r4, #36]	; 0x24
   20e44:	b	20d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcee4>
   20e48:	push	{r4, r5, r6, lr}
   20e4c:	subs	r4, r1, #0
   20e50:	mov	r5, r0
   20e54:	popeq	{r4, r5, r6, pc}
   20e58:	movw	r6, #1060	; 0x424
   20e5c:	movt	r6, #10
   20e60:	mov	r0, r4
   20e64:	blx	r5
   20e68:	ldr	r3, [r4, #4]
   20e6c:	cmp	r3, #15
   20e70:	ldrls	pc, [pc, r3, lsl #2]
   20e74:	b	20f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd094>
   20e78:			; <UNDEFINED> instruction: 0x00020eb8
   20e7c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20e80:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20e84:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20e88:	andeq	r0, r2, r4, lsl #30
   20e8c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20e90:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20e94:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20e98:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20e9c:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ea0:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ea4:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20ea8:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20eac:	strdeq	r0, [r2], -ip
   20eb0:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20eb4:	andeq	r0, r2, r0, ror #29
   20eb8:	ldr	r3, [r4, #72]	; 0x48
   20ebc:	mov	r0, r5
   20ec0:	cmn	r3, #1
   20ec4:	beq	20ed0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd044>
   20ec8:	ldr	r1, [r4, #8]
   20ecc:	bl	20e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcfbc>
   20ed0:	ldr	r4, [r4]
   20ed4:	cmp	r4, #0
   20ed8:	bne	20e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcfd4>
   20edc:	pop	{r4, r5, r6, pc}
   20ee0:	mov	r0, r5
   20ee4:	ldr	r1, [r6]
   20ee8:	bl	20e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcfbc>
   20eec:	ldr	r4, [r4]
   20ef0:	cmp	r4, #0
   20ef4:	bne	20e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcfd4>
   20ef8:	b	20edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd050>
   20efc:	mov	r0, r5
   20f00:	b	20ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd03c>
   20f04:	ldr	r1, [r4, #24]
   20f08:	mov	r0, r5
   20f0c:	bl	20e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcfbc>
   20f10:	ldr	r4, [r4]
   20f14:	cmp	r4, #0
   20f18:	bne	20e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcfd4>
   20f1c:	b	20edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd050>
   20f20:	movw	r0, #10132	; 0x2794
   20f24:	movw	r1, #978	; 0x3d2
   20f28:	movt	r0, #5
   20f2c:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   20f30:	ldr	r4, [r4]
   20f34:	cmp	r4, #0
   20f38:	bne	20e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcfd4>
   20f3c:	b	20edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd050>
   20f40:	movw	r3, #65288	; 0xff08
   20f44:	movt	r3, #9
   20f48:	ldr	r1, [r3, #132]	; 0x84
   20f4c:	b	20e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcfbc>
   20f50:	mov	r3, #0
   20f54:	str	r0, [r0, #4]
   20f58:	str	r3, [r0]
   20f5c:	bx	lr
   20f60:	push	{r3, lr}
   20f64:	movw	r3, #62408	; 0xf3c8
   20f68:	movt	r3, #9
   20f6c:	ldr	r1, [pc, #52]	; 20fa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd11c>
   20f70:	ldr	r2, [r3, #4]
   20f74:	cmp	r2, r1
   20f78:	bcs	20f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd108>
   20f7c:	ldr	r1, [r3]
   20f80:	add	ip, r2, #4
   20f84:	str	ip, [r3, #4]
   20f88:	str	r1, [r2]
   20f8c:	str	r0, [r3]
   20f90:	pop	{r3, pc}
   20f94:	movw	r0, #10132	; 0x2794
   20f98:	movw	r1, #1003	; 0x3eb
   20f9c:	movt	r0, #5
   20fa0:	ldr	r2, [pc, #4]	; 20fac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd120>
   20fa4:	bl	135d4 <_bfd_abort@plt>
   20fa8:	andeq	pc, r9, r0, asr #31
   20fac:	andeq	r2, r5, ip, asr #14
   20fb0:	push	{r3, lr}
   20fb4:	movw	r3, #62408	; 0xf3c8
   20fb8:	movt	r3, #9
   20fbc:	ldr	r1, [pc, #44]	; 20ff0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd164>
   20fc0:	ldr	r2, [r3, #4]
   20fc4:	cmp	r2, r1
   20fc8:	bls	20fdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd150>
   20fcc:	ldr	r1, [r2, #-4]
   20fd0:	sub	r2, r2, #4
   20fd4:	stm	r3, {r1, r2}
   20fd8:	pop	{r3, pc}
   20fdc:	movw	r0, #10132	; 0x2794
   20fe0:	mov	r1, #1012	; 0x3f4
   20fe4:	movt	r0, #5
   20fe8:	ldr	r2, [pc, #4]	; 20ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd168>
   20fec:	bl	135d4 <_bfd_abort@plt>
   20ff0:	muleq	r9, r8, pc	; <UNPREDICTABLE>
   20ff4:	andeq	r2, r5, ip, asr r7
   20ff8:	cmp	r0, #0
   20ffc:	push	{r4, r5, r6, lr}
   21000:	mov	r5, r1
   21004:	mov	r4, r2
   21008:	beq	21018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd18c>
   2100c:	ldrb	r3, [r0]
   21010:	cmp	r3, #61	; 0x3d
   21014:	beq	2102c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1a0>
   21018:	mov	r1, r5
   2101c:	mov	r2, r4
   21020:	mov	r3, #1
   21024:	pop	{r4, r5, r6, lr}
   21028:	b	20c34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcda8>
   2102c:	movw	r3, #1240	; 0x4d8
   21030:	movt	r3, #10
   21034:	movw	r6, #1032	; 0x408
   21038:	movt	r6, #10
   2103c:	add	r1, r0, #1
   21040:	mov	r2, #0
   21044:	ldr	r0, [r3]
   21048:	bl	13760 <concat@plt>
   2104c:	ldrb	ip, [r6]
   21050:	mov	r2, r4
   21054:	mov	r1, r5
   21058:	mov	r3, #1
   2105c:	ubfx	r4, ip, #3, #1
   21060:	bfc	ip, #3, #1
   21064:	strb	ip, [r6]
   21068:	bl	20c34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcda8>
   2106c:	ldrb	r3, [r6]
   21070:	bfi	r3, r4, #3, #1
   21074:	strb	r3, [r6]
   21078:	pop	{r4, r5, r6, pc}
   2107c:	ldr	r0, [pc]	; 21084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1f8>
   21080:	b	13730 <bfd_hash_table_free@plt>
   21084:	andeq	pc, r9, r0, asr #31
   21088:	push	{r4, r5, r6, r7, r8, lr}
   2108c:	subs	r5, r0, #0
   21090:	mov	r8, r1
   21094:	beq	211c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd334>
   21098:	movw	r3, #65288	; 0xff08
   2109c:	movt	r3, #9
   210a0:	ldr	r7, [r3, #212]	; 0xd4
   210a4:	cmp	r7, #0
   210a8:	beq	210dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd250>
   210ac:	mov	r4, r7
   210b0:	ldr	r0, [r4]
   210b4:	mov	r1, r5
   210b8:	bl	13490 <strcmp@plt>
   210bc:	subs	r6, r0, #0
   210c0:	beq	21194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd308>
   210c4:	ldr	r4, [r4, #4]
   210c8:	cmp	r4, #0
   210cc:	bne	210b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd224>
   210d0:	ldr	r7, [r7, #8]
   210d4:	cmp	r7, #0
   210d8:	bne	210ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd220>
   210dc:	cmp	r8, #0
   210e0:	bne	2111c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd290>
   210e4:	movw	r1, #29012	; 0x7154
   210e8:	mov	r0, r5
   210ec:	movt	r1, #4
   210f0:	bl	13490 <strcmp@plt>
   210f4:	cmp	r0, #0
   210f8:	beq	2111c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd290>
   210fc:	mov	r2, #5
   21100:	movw	r1, #11240	; 0x2be8
   21104:	mov	r0, r8
   21108:	movt	r1, #5
   2110c:	bl	13688 <dcgettext@plt>
   21110:	mov	r1, r8
   21114:	mov	r2, r5
   21118:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2111c:	mov	r0, #64	; 0x40
   21120:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   21124:	mov	r4, r0
   21128:	mov	r0, r5
   2112c:	bl	137e4 <xstrdup@plt>
   21130:	movw	ip, #62408	; 0xf3c8
   21134:	movt	ip, #9
   21138:	mov	r1, #0
   2113c:	mvn	r2, #0
   21140:	mvn	r3, #0
   21144:	ldr	r5, [ip, #8]
   21148:	add	r6, r4, #8
   2114c:	strd	r2, [r4, #24]
   21150:	mov	r7, r4
   21154:	mov	r2, #0
   21158:	mov	r3, #0
   2115c:	str	r1, [r4, #4]
   21160:	str	r1, [r4, #8]
   21164:	str	r1, [r4, #12]
   21168:	str	r1, [r4, #32]
   2116c:	str	r1, [r4, #48]	; 0x30
   21170:	str	r1, [r4, #52]	; 0x34
   21174:	str	r1, [r4, #56]	; 0x38
   21178:	str	r1, [r4, #60]	; 0x3c
   2117c:	strd	r2, [r4, #16]
   21180:	strd	r2, [r4, #40]	; 0x28
   21184:	str	r6, [ip, #8]
   21188:	str	r0, [r4]
   2118c:	str	r4, [r5]
   21190:	b	211b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd32c>
   21194:	cmp	r8, #0
   21198:	beq	211b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd32c>
   2119c:	mov	r2, #5
   211a0:	movw	r1, #11184	; 0x2bb0
   211a4:	movt	r1, #5
   211a8:	bl	13688 <dcgettext@plt>
   211ac:	mov	r1, r6
   211b0:	mov	r2, r5
   211b4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   211b8:	mov	r0, r7
   211bc:	pop	{r4, r5, r6, r7, r8, pc}
   211c0:	mov	r7, r5
   211c4:	b	211b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd32c>
   211c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   211cc:	movw	r4, #63248	; 0xf710
   211d0:	movt	r4, #9
   211d4:	ldr	fp, [r0]
   211d8:	sub	sp, sp, #164	; 0xa4
   211dc:	mov	sl, r0
   211e0:	ldr	r3, [r4]
   211e4:	cmp	fp, #0
   211e8:	str	r4, [sp, #72]	; 0x48
   211ec:	mov	r6, r1
   211f0:	str	r2, [sp, #48]	; 0x30
   211f4:	ldr	r7, [sp, #208]	; 0xd0
   211f8:	str	r3, [sp, #156]	; 0x9c
   211fc:	beq	213c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd538>
   21200:	movw	r8, #1480	; 0x5c8
   21204:	movw	r9, #1028	; 0x404
   21208:	movt	r8, #10
   2120c:	movt	r9, #10
   21210:	str	r8, [sp, #36]	; 0x24
   21214:	movw	ip, #1088	; 0x440
   21218:	movw	r8, #65288	; 0xff08
   2121c:	movt	ip, #10
   21220:	movt	r8, #9
   21224:	str	r9, [sp, #76]	; 0x4c
   21228:	str	ip, [sp, #52]	; 0x34
   2122c:	str	r7, [sp, #20]
   21230:	str	r8, [sp, #16]
   21234:	ldr	r3, [fp, #4]
   21238:	cmp	r3, #15
   2123c:	ldrls	pc, [pc, r3, lsl #2]
   21240:	b	21af4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc68>
   21244:	andeq	r1, r2, r8, ror #13
   21248:	andeq	r1, r2, r4, lsl #5
   2124c:			; <UNDEFINED> instruction: 0x000213b4
   21250:			; <UNDEFINED> instruction: 0x000213b4
   21254:	andeq	r1, r2, r4, lsl #13
   21258:	andeq	r1, r2, r8, ror #9
   2125c:	ldrdeq	r1, [r2], -r4
   21260:			; <UNDEFINED> instruction: 0x000214bc
   21264:	andeq	r1, r2, r0, ror #8
   21268:	andeq	r1, r2, r4, ror #7
   2126c:			; <UNDEFINED> instruction: 0x000213b4
   21270:			; <UNDEFINED> instruction: 0x000213b4
   21274:	andeq	r1, r2, r8, asr #21
   21278:			; <UNDEFINED> instruction: 0x000216b8
   2127c:			; <UNDEFINED> instruction: 0x000213b4
   21280:	andeq	r1, r2, r4, asr #13
   21284:	ldrd	r4, [sp, #200]	; 0xc8
   21288:	add	r2, sp, #160	; 0xa0
   2128c:	ldr	r7, [sp, #36]	; 0x24
   21290:	mov	r3, #0
   21294:	ldr	r1, [r6, #28]
   21298:	strd	r4, [r2, #-16]!
   2129c:	movw	r4, #1480	; 0x5c8
   212a0:	ldr	r5, [fp, #8]
   212a4:	movt	r4, #10
   212a8:	str	r3, [r7, #112]	; 0x70
   212ac:	mov	r0, r5
   212b0:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   212b4:	ldr	r3, [r7, #112]	; 0x70
   212b8:	cmp	r3, #1
   212bc:	beq	21bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd64>
   212c0:	cmp	r3, #2
   212c4:	beq	21c34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdda8>
   212c8:	ldr	r8, [sp, #36]	; 0x24
   212cc:	mov	r3, #0
   212d0:	str	r3, [r8, #112]	; 0x70
   212d4:	ldr	r3, [r5, #12]
   212d8:	bic	r3, r3, #2
   212dc:	cmp	r3, #4
   212e0:	bne	21300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd474>
   212e4:	ldr	r3, [r5, #16]
   212e8:	ldrb	r2, [r3]
   212ec:	cmp	r2, #46	; 0x2e
   212f0:	beq	21d4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdec0>
   212f4:	ldrb	r3, [r6, #84]	; 0x54
   212f8:	orr	r3, r3, #16
   212fc:	strb	r3, [r6, #84]	; 0x54
   21300:	ldrb	r1, [r6, #84]	; 0x54
   21304:	ubfx	r1, r1, #3, #1
   21308:	cmp	r1, #0
   2130c:	bne	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   21310:	ldr	r9, [sp, #76]	; 0x4c
   21314:	ldr	r3, [r9]
   21318:	cmp	r6, r3
   2131c:	beq	22108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe27c>
   21320:	ldrd	r2, [sp, #144]	; 0x90
   21324:	ldrd	r4, [sp, #200]	; 0xc8
   21328:	cmp	r3, r5
   2132c:	cmpeq	r2, r4
   21330:	beq	213ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd520>
   21334:	ldr	ip, [sp, #16]
   21338:	subs	r2, r2, r4
   2133c:	sbc	r3, r3, r5
   21340:	ldr	r1, [ip, #8]
   21344:	ldr	ip, [r6, #28]
   21348:	sub	r0, r1, #32
   2134c:	lsl	r3, r3, r1
   21350:	orr	r3, r3, r2, lsl r0
   21354:	rsb	r0, r1, #32
   21358:	orr	r3, r3, r2, lsr r0
   2135c:	str	ip, [sp]
   21360:	lsl	r2, r2, r1
   21364:	mov	r0, fp
   21368:	strd	r4, [sp, #8]
   2136c:	ldr	r1, [sp, #48]	; 0x30
   21370:	bl	20b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc84>
   21374:	ldr	r3, [r6, #80]	; 0x50
   21378:	ldr	fp, [fp]
   2137c:	cmp	r3, #3
   21380:	beq	213a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd518>
   21384:	cmp	r3, #2
   21388:	bne	21d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xded0>
   2138c:	ldr	r4, [sp, #52]	; 0x34
   21390:	ldr	r3, [r4, #52]	; 0x34
   21394:	ldr	r3, [r3, #4]
   21398:	ldr	r3, [r3, #4]
   2139c:	cmp	r3, #5
   213a0:	beq	21d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xded0>
   213a4:	ldr	r2, [sp, #144]	; 0x90
   213a8:	ldr	r3, [sp, #148]	; 0x94
   213ac:	str	r2, [sp, #200]	; 0xc8
   213b0:	str	r3, [sp, #204]	; 0xcc
   213b4:	mov	sl, fp
   213b8:	ldr	fp, [fp]
   213bc:	cmp	fp, #0
   213c0:	bne	21234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd3a8>
   213c4:	ldr	r5, [sp, #72]	; 0x48
   213c8:	ldr	r2, [sp, #156]	; 0x9c
   213cc:	ldrd	r0, [sp, #200]	; 0xc8
   213d0:	ldr	r3, [r5]
   213d4:	cmp	r2, r3
   213d8:	bne	22354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4c8>
   213dc:	add	sp, sp, #164	; 0xa4
   213e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   213e4:	ldr	r1, [r6, #28]
   213e8:	mov	sl, fp
   213ec:	ldrd	r2, [sp, #200]	; 0xc8
   213f0:	ldr	r0, [fp, #12]
   213f4:	ldrd	r4, [r1, #32]
   213f8:	subs	r2, r2, r4
   213fc:	sbc	r3, r3, r5
   21400:	strd	r2, [fp, #48]	; 0x30
   21404:	ldr	r3, [r6, #28]
   21408:	str	r3, [fp, #40]	; 0x28
   2140c:	bl	136a0 <bfd_get_reloc_size@plt>
   21410:	ldr	r9, [sp, #16]
   21414:	ldr	ip, [r6, #28]
   21418:	ldrd	r2, [sp, #200]	; 0xc8
   2141c:	ldr	r1, [r9, #8]
   21420:	ldrd	r8, [ip, #32]
   21424:	sub	r7, r1, #32
   21428:	rsb	r4, r1, #32
   2142c:	asr	r0, r0, r1
   21430:	adds	r2, r2, r0
   21434:	adc	r3, r3, r0, asr #31
   21438:	strd	r2, [sp, #200]	; 0xc8
   2143c:	subs	r2, r2, r8
   21440:	sbc	r3, r3, r9
   21444:	lsl	r3, r3, r1
   21448:	lsl	r1, r2, r1
   2144c:	orr	r3, r3, r2, lsl r7
   21450:	str	r1, [ip, #48]	; 0x30
   21454:	orr	r3, r3, r2, lsr r4
   21458:	str	r3, [ip, #52]	; 0x34
   2145c:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   21460:	ldr	r3, [r6, #28]
   21464:	add	r2, sp, #196	; 0xc4
   21468:	ldr	r0, [fp, #12]
   2146c:	ldrd	r8, [r2, #4]!
   21470:	ldrd	r4, [r3, #32]
   21474:	ldr	r1, [pc, #3804]	; 22358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4cc>
   21478:	subs	r8, r8, r4
   2147c:	sbc	r9, r9, r5
   21480:	strd	r8, [fp, #32]
   21484:	ldr	r3, [r6, #28]
   21488:	str	r3, [fp, #24]
   2148c:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   21490:	ldr	r3, [fp, #8]
   21494:	sub	r3, r3, #280	; 0x118
   21498:	sub	r3, r3, #2
   2149c:	cmp	r3, #4
   214a0:	ldrls	pc, [pc, r3, lsl #2]
   214a4:	b	21c60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xddd4>
   214a8:	andeq	r1, r2, r4, lsr #23
   214ac:	andeq	r1, r2, r4, lsr #23
   214b0:	andeq	r1, r2, ip, lsr fp
   214b4:			; <UNDEFINED> instruction: 0x00021bb4
   214b8:	andeq	r1, r2, ip, lsr #23
   214bc:	ldr	r3, [r6, #28]
   214c0:	mov	sl, fp
   214c4:	ldr	r5, [fp, #8]
   214c8:	str	r3, [fp, #16]
   214cc:	str	r5, [sp, #48]	; 0x30
   214d0:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   214d4:	ldr	r3, [r6, #28]
   214d8:	mov	sl, fp
   214dc:	ldr	r8, [sp, #52]	; 0x34
   214e0:	str	r3, [r8, #64]	; 0x40
   214e4:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   214e8:	ldr	r9, [sp, #20]
   214ec:	ldr	r1, [fp, #8]
   214f0:	cmp	r9, #0
   214f4:	beq	21530 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd6a4>
   214f8:	ldr	r0, [r1, #180]	; 0xb4
   214fc:	movw	r2, #1088	; 0x440
   21500:	add	r3, sp, #144	; 0x90
   21504:	movt	r2, #10
   21508:	ldr	ip, [r0, #4]
   2150c:	ldr	ip, [ip, #352]	; 0x160
   21510:	blx	ip
   21514:	cmp	r0, #0
   21518:	beq	21c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd90>
   2151c:	ldr	r3, [sp, #144]	; 0x90
   21520:	cmp	r3, #0
   21524:	ldrne	ip, [sp, #20]
   21528:	movne	r3, #1
   2152c:	strne	r3, [ip]
   21530:	ldr	r3, [sl]
   21534:	ldrd	r8, [sp, #200]	; 0xc8
   21538:	ldr	r5, [r6, #28]
   2153c:	ldr	r4, [r3, #8]
   21540:	ldrh	r3, [r4, #24]
   21544:	ubfx	r3, r3, #7, #3
   21548:	cmp	r3, #4
   2154c:	beq	21c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdde8>
   21550:	ldr	r3, [r4, #20]
   21554:	tst	r3, #32768	; 0x8000
   21558:	bne	21bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd30>
   2155c:	ldr	r1, [r6, #64]	; 0x40
   21560:	mov	r0, #1
   21564:	cmn	r1, #1
   21568:	strne	r1, [r4, #92]	; 0x5c
   2156c:	ldreq	r1, [r4, #92]	; 0x5c
   21570:	ldr	r3, [r5, #92]	; 0x5c
   21574:	cmp	r3, r1
   21578:	strcc	r1, [r5, #92]	; 0x5c
   2157c:	ldrcc	r1, [r4, #92]	; 0x5c
   21580:	subs	r2, r8, #1
   21584:	sub	r3, r1, #32
   21588:	rsb	ip, r1, #32
   2158c:	lsl	r3, r0, r3
   21590:	str	r3, [sp, #60]	; 0x3c
   21594:	ldr	r7, [sp, #60]	; 0x3c
   21598:	sbc	r3, r9, #0
   2159c:	orr	ip, r7, r0, lsr ip
   215a0:	lsl	r0, r0, r1
   215a4:	str	ip, [sp, #60]	; 0x3c
   215a8:	str	r0, [sp, #56]	; 0x38
   215ac:	ldrd	r0, [sp, #56]	; 0x38
   215b0:	adds	r0, r0, r2
   215b4:	adc	r1, r1, r3
   215b8:	strd	r0, [sp, #40]	; 0x28
   215bc:	ldrd	r0, [sp, #56]	; 0x38
   215c0:	ldrd	r2, [sp, #40]	; 0x28
   215c4:	rsbs	r0, r0, #0
   215c8:	rsc	r1, r1, #0
   215cc:	and	r2, r2, r0
   215d0:	and	r3, r3, r1
   215d4:	strd	r2, [sp, #40]	; 0x28
   215d8:	subs	r2, r2, r8
   215dc:	sbc	r3, r3, r9
   215e0:	strd	r2, [sp, #104]	; 0x68
   215e4:	orrs	r3, r2, r3
   215e8:	bne	21d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde74>
   215ec:	movw	r2, #65288	; 0xff08
   215f0:	movt	r2, #9
   215f4:	ldr	r3, [r4, #48]	; 0x30
   215f8:	ldr	ip, [r2, #8]
   215fc:	ldr	sl, [r4, #52]	; 0x34
   21600:	lsr	r3, r3, ip
   21604:	str	r3, [sp, #64]	; 0x40
   21608:	ldrd	r2, [r5, #32]
   2160c:	rsb	r7, ip, #32
   21610:	sub	r0, ip, #32
   21614:	str	r0, [sp, #104]	; 0x68
   21618:	strd	r2, [sp, #40]	; 0x28
   2161c:	ldr	r3, [sp, #64]	; 0x40
   21620:	orr	r3, r3, sl, lsl r7
   21624:	orr	r0, r3, sl, lsr r0
   21628:	lsr	sl, sl, ip
   2162c:	str	r0, [sp, #64]	; 0x40
   21630:	str	sl, [sp, #68]	; 0x44
   21634:	ldrd	r2, [sp, #64]	; 0x40
   21638:	ldrd	r0, [sp, #40]	; 0x28
   2163c:	subs	r0, r8, r0
   21640:	sbc	r1, r9, r1
   21644:	adds	r8, r8, r2
   21648:	adc	r9, r9, r3
   2164c:	ldrd	r2, [sp, #40]	; 0x28
   21650:	strd	r0, [r4, #80]	; 0x50
   21654:	subs	r2, r8, r2
   21658:	sbc	r3, r9, r3
   2165c:	ldr	r4, [sp, #104]	; 0x68
   21660:	lsl	r3, r3, ip
   21664:	lsl	ip, r2, ip
   21668:	orr	r3, r3, r2, lsl r4
   2166c:	str	ip, [r5, #48]	; 0x30
   21670:	orr	r3, r3, r2, lsr r7
   21674:	str	r3, [r5, #52]	; 0x34
   21678:	strd	r8, [sp, #200]	; 0xc8
   2167c:	mov	sl, fp
   21680:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   21684:	ldrd	r2, [sp, #200]	; 0xc8
   21688:	add	r0, fp, #24
   2168c:	ldr	r5, [sp, #20]
   21690:	mov	r1, r6
   21694:	ldr	r7, [sp, #212]	; 0xd4
   21698:	str	r5, [sp, #8]
   2169c:	str	r7, [sp, #12]
   216a0:	strd	r2, [sp]
   216a4:	mov	sl, fp
   216a8:	ldr	r2, [sp, #48]	; 0x30
   216ac:	bl	211c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd33c>
   216b0:	strd	r0, [sp, #200]	; 0xc8
   216b4:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   216b8:	ldrd	r2, [sp, #200]	; 0xc8
   216bc:	add	r0, fp, #8
   216c0:	b	2168c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd800>
   216c4:	ldr	r5, [sp, #20]
   216c8:	movw	r0, #1060	; 0x424
   216cc:	ldr	r7, [sp, #212]	; 0xd4
   216d0:	movt	r0, #10
   216d4:	ldrd	r2, [sp, #200]	; 0xc8
   216d8:	mov	r1, r6
   216dc:	str	r5, [sp, #8]
   216e0:	str	r7, [sp, #12]
   216e4:	b	216a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd814>
   216e8:	ldr	r3, [fp, #72]	; 0x48
   216ec:	cmn	r3, #1
   216f0:	beq	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   216f4:	ldr	r0, [fp, #44]	; 0x2c
   216f8:	cmp	r0, #0
   216fc:	beq	21e00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf74>
   21700:	ldrb	r3, [fp, #84]	; 0x54
   21704:	add	r2, sp, #200	; 0xc8
   21708:	ldr	r1, [pc, #3144]	; 22358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4cc>
   2170c:	bfc	r3, #0, #1
   21710:	strb	r3, [fp, #84]	; 0x54
   21714:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   21718:	ldr	r5, [sp, #36]	; 0x24
   2171c:	ldr	r0, [r5, #32]
   21720:	cmp	r0, #0
   21724:	beq	21b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc80>
   21728:	ldr	r1, [r5, #28]
   2172c:	ldrd	r2, [r5, #16]
   21730:	cmp	r1, #0
   21734:	strd	r2, [sp, #200]	; 0xc8
   21738:	beq	2174c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8c0>
   2173c:	ldrd	r0, [r1, #32]
   21740:	adds	r2, r2, r0
   21744:	adc	r3, r3, r1
   21748:	strd	r2, [sp, #200]	; 0xc8
   2174c:	ldr	r1, [fp, #28]
   21750:	cmp	r1, #0
   21754:	mov	r7, r1
   21758:	beq	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   2175c:	ldr	r8, [sp, #52]	; 0x34
   21760:	ldr	r3, [r8, #52]	; 0x34
   21764:	ldr	r3, [r3, #4]
   21768:	ldr	r3, [r3, #4]
   2176c:	sub	r3, r3, #2
   21770:	cmp	r3, #1
   21774:	bls	21c8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde00>
   21778:	ldr	ip, [pc, #3032]	; 22358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4cc>
   2177c:	ldrd	r8, [sp, #200]	; 0xc8
   21780:	cmp	r7, ip
   21784:	beq	21e44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdfb8>
   21788:	ldr	r3, [fp, #44]	; 0x2c
   2178c:	cmp	r3, #0
   21790:	ldrne	sl, [fp, #68]	; 0x44
   21794:	beq	21e68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdfdc>
   21798:	cmp	sl, #0
   2179c:	ble	21dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf60>
   217a0:	mov	r1, #1
   217a4:	sub	r3, sl, #32
   217a8:	lsl	r3, r1, r3
   217ac:	str	r3, [sp, #84]	; 0x54
   217b0:	ldr	lr, [sp, #84]	; 0x54
   217b4:	rsb	r0, sl, #32
   217b8:	subs	r2, r8, #1
   217bc:	orr	r0, lr, r1, lsr r0
   217c0:	lsl	r1, r1, sl
   217c4:	str	r0, [sp, #84]	; 0x54
   217c8:	sbc	r3, r9, #0
   217cc:	str	r1, [sp, #80]	; 0x50
   217d0:	ldrd	r4, [sp, #80]	; 0x50
   217d4:	adds	r2, r2, r4
   217d8:	adc	r3, r3, r5
   217dc:	rsbs	r4, r4, #0
   217e0:	rsc	r5, r5, #0
   217e4:	and	r4, r4, r2
   217e8:	and	r5, r5, r3
   217ec:	subs	r8, r4, r8
   217f0:	sbc	r9, r5, r9
   217f4:	orrs	ip, r8, r9
   217f8:	beq	21844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd9b8>
   217fc:	movw	r3, #1336	; 0x538
   21800:	movt	r3, #10
   21804:	ldr	r3, [r3, #36]	; 0x24
   21808:	cmp	r3, #0
   2180c:	beq	21dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf20>
   21810:	ldr	ip, [sp, #36]	; 0x24
   21814:	ldr	r3, [ip]
   21818:	cmp	r3, #1
   2181c:	beq	21844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd9b8>
   21820:	mov	r2, #5
   21824:	movw	r1, #11560	; 0x2d28
   21828:	mov	r0, #0
   2182c:	movt	r1, #5
   21830:	bl	13688 <dcgettext@plt>
   21834:	ldr	r1, [fp, #24]
   21838:	mov	r2, r8
   2183c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   21840:	ldr	r7, [fp, #28]
   21844:	ldrb	r1, [r7, #24]
   21848:	mov	r2, #0
   2184c:	mov	r3, #0
   21850:	strd	r4, [r7, #40]	; 0x28
   21854:	orr	r1, r1, #1
   21858:	strd	r4, [r7, #32]
   2185c:	strd	r2, [r7, #80]	; 0x50
   21860:	strb	r1, [r7, #24]
   21864:	ldr	r2, [fp, #40]	; 0x28
   21868:	add	r0, fp, #8
   2186c:	strd	r4, [sp]
   21870:	mov	r1, fp
   21874:	ldr	r4, [sp, #20]
   21878:	ldr	r5, [sp, #212]	; 0xd4
   2187c:	ldr	r7, [pc, #2772]	; 22358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4cc>
   21880:	str	r4, [sp, #8]
   21884:	str	r5, [sp, #12]
   21888:	bl	211c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd33c>
   2188c:	ldr	ip, [fp, #28]
   21890:	ldrb	r3, [fp, #84]	; 0x54
   21894:	cmp	ip, r7
   21898:	orr	r3, r3, #1
   2189c:	strb	r3, [fp, #84]	; 0x54
   218a0:	beq	21bd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd44>
   218a4:	uxtb	r3, r3
   218a8:	tst	r3, #8
   218ac:	bne	21bd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdd44>
   218b0:	ldr	r5, [sp, #16]
   218b4:	ldr	r3, [ip, #48]	; 0x30
   218b8:	ldr	r0, [ip, #52]	; 0x34
   218bc:	ldr	r4, [r5, #8]
   218c0:	ldr	r1, [fp, #60]	; 0x3c
   218c4:	lsr	r3, r3, r4
   218c8:	rsb	r5, r4, #32
   218cc:	sub	r7, r4, #32
   218d0:	orr	r2, r3, r0, lsl r5
   218d4:	orr	r3, r2, r0, lsr r7
   218d8:	str	r3, [sp, #88]	; 0x58
   218dc:	ldrd	r2, [ip, #32]
   218e0:	lsr	r0, r0, r4
   218e4:	str	r0, [sp, #92]	; 0x5c
   218e8:	subs	r2, r2, #1
   218ec:	sbc	r3, r3, #0
   218f0:	strd	r2, [sp, #40]	; 0x28
   218f4:	mov	r2, r1
   218f8:	ldrd	r0, [sp, #40]	; 0x28
   218fc:	mov	r3, #0
   21900:	adds	r0, r0, r2
   21904:	adc	r1, r1, r3
   21908:	strd	r0, [sp, #104]	; 0x68
   2190c:	rsbs	r0, r2, #0
   21910:	rsc	r1, r3, #0
   21914:	ldrd	r2, [sp, #88]	; 0x58
   21918:	strd	r0, [sp, #40]	; 0x28
   2191c:	ldrd	r0, [sp, #104]	; 0x68
   21920:	adds	r0, r0, r2
   21924:	adc	r1, r1, r3
   21928:	ldrd	r2, [ip, #32]
   2192c:	strd	r2, [sp, #200]	; 0xc8
   21930:	ldrd	r2, [sp, #40]	; 0x28
   21934:	and	r2, r2, r0
   21938:	and	r3, r3, r1
   2193c:	ldrd	r0, [ip, #32]
   21940:	subs	r2, r2, r0
   21944:	sbc	r3, r3, r1
   21948:	lsl	r3, r3, r4
   2194c:	lsl	r4, r2, r4
   21950:	orr	r3, r3, r2, lsl r7
   21954:	str	r4, [ip, #48]	; 0x30
   21958:	orr	r3, r3, r2, lsr r5
   2195c:	str	r3, [ip, #52]	; 0x34
   21960:	ldr	r7, [fp, #32]
   21964:	cmp	r7, #0
   21968:	beq	220f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe264>
   2196c:	ldr	r0, [fp, #48]	; 0x30
   21970:	cmp	r0, #0
   21974:	beq	21dbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf30>
   21978:	movw	r2, #11616	; 0x2d60
   2197c:	mov	r1, #0
   21980:	movt	r2, #5
   21984:	bl	2ed9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af10>
   21988:	ldr	ip, [fp, #28]
   2198c:	strd	r0, [ip, #40]	; 0x28
   21990:	ldr	r8, [pc, #2496]	; 22358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4cc>
   21994:	ldrb	r3, [fp, #84]	; 0x54
   21998:	cmp	ip, r8
   2199c:	orr	r3, r3, #2
   219a0:	strb	r3, [fp, #84]	; 0x54
   219a4:	beq	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   219a8:	uxtb	r3, r3
   219ac:	tst	r3, #8
   219b0:	bne	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   219b4:	ldr	r3, [ip, #20]
   219b8:	movw	r2, #1026	; 0x402
   219bc:	tst	r3, #1
   219c0:	and	r2, r3, r2
   219c4:	bne	21d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdef4>
   219c8:	cmp	r2, #1024	; 0x400
   219cc:	beq	2206c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe1e0>
   219d0:	ldr	r4, [ip, #48]	; 0x30
   219d4:	ldr	r0, [ip, #52]	; 0x34
   219d8:	ldrd	r2, [sp, #200]	; 0xc8
   219dc:	ldr	r9, [sp, #16]
   219e0:	ldr	r1, [r9, #8]
   219e4:	lsr	r4, r4, r1
   219e8:	rsb	ip, r1, #32
   219ec:	orr	ip, r4, r0, lsl ip
   219f0:	str	ip, [sp, #96]	; 0x60
   219f4:	ldr	r4, [sp, #96]	; 0x60
   219f8:	sub	ip, r1, #32
   219fc:	orr	ip, r4, r0, lsr ip
   21a00:	lsr	r0, r0, r1
   21a04:	str	ip, [sp, #96]	; 0x60
   21a08:	str	r0, [sp, #100]	; 0x64
   21a0c:	ldrd	r8, [sp, #96]	; 0x60
   21a10:	ldr	r0, [fp, #52]	; 0x34
   21a14:	adds	r2, r2, r8
   21a18:	adc	r3, r3, r9
   21a1c:	cmp	r0, #0
   21a20:	strd	r2, [sp, #200]	; 0xc8
   21a24:	beq	21a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdba8>
   21a28:	ldr	r1, [pc, #2344]	; 22358 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4cc>
   21a2c:	add	r2, sp, #200	; 0xc8
   21a30:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   21a34:	ldr	r1, [fp, #32]
   21a38:	cmp	r1, #0
   21a3c:	beq	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   21a40:	ldr	r3, [fp, #28]
   21a44:	ldr	r2, [r3, #20]
   21a48:	tst	r2, #3
   21a4c:	beq	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   21a50:	ldr	r9, [sp, #212]	; 0xd4
   21a54:	ldrd	r4, [sp, #200]	; 0xc8
   21a58:	cmp	r9, #0
   21a5c:	strd	r4, [r1, #40]	; 0x28
   21a60:	bne	22130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe2a4>
   21a64:	ldr	ip, [fp, #36]	; 0x24
   21a68:	cmp	ip, #0
   21a6c:	beq	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   21a70:	ldr	r3, [fp, #32]
   21a74:	cmp	ip, r3
   21a78:	beq	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   21a7c:	ldr	r3, [fp, #28]
   21a80:	ldr	r2, [r3, #20]
   21a84:	tst	r2, #2
   21a88:	beq	220c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe238>
   21a8c:	ldrd	r2, [r3, #40]	; 0x28
   21a90:	ldrd	r0, [sp, #96]	; 0x60
   21a94:	ldr	r4, [sp, #212]	; 0xd4
   21a98:	adds	r0, r0, r2
   21a9c:	adc	r1, r1, r3
   21aa0:	cmp	r4, #0
   21aa4:	strd	r0, [ip, #40]	; 0x28
   21aa8:	beq	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   21aac:	strd	r2, [sp]
   21ab0:	mov	r1, ip
   21ab4:	add	r0, fp, #28
   21ab8:	mov	r2, #0
   21abc:	bl	1e92c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaaa0>
   21ac0:	mov	sl, fp
   21ac4:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   21ac8:	mov	r2, #0
   21acc:	mov	r3, #0
   21ad0:	strd	r2, [fp, #16]
   21ad4:	mov	sl, fp
   21ad8:	ldr	r1, [r6, #28]
   21adc:	ldrd	r2, [sp, #200]	; 0xc8
   21ae0:	ldrd	r0, [r1, #32]
   21ae4:	subs	r2, r2, r0
   21ae8:	sbc	r3, r3, r1
   21aec:	strd	r2, [fp, #8]
   21af0:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   21af4:	movw	r0, #10132	; 0x2794
   21af8:	movw	r1, #5441	; 0x1541
   21afc:	movt	r0, #5
   21b00:	mov	sl, fp
   21b04:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   21b08:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   21b0c:	ldr	r7, [sp, #36]	; 0x24
   21b10:	ldr	r3, [r7]
   21b14:	cmp	r3, #1
   21b18:	beq	2174c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8c0>
   21b1c:	mov	r2, #5
   21b20:	movw	r1, #11292	; 0x2c1c
   21b24:	movt	r1, #5
   21b28:	bl	13688 <dcgettext@plt>
   21b2c:	ldr	r1, [fp, #44]	; 0x2c
   21b30:	ldr	r2, [fp, #24]
   21b34:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   21b38:	b	2174c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8c0>
   21b3c:	mov	r3, #4
   21b40:	ldr	r5, [sp, #16]
   21b44:	mov	r4, #1
   21b48:	ldrd	r8, [sp, #200]	; 0xc8
   21b4c:	mov	sl, fp
   21b50:	ldr	r0, [r6, #28]
   21b54:	ldr	r1, [r5, #8]
   21b58:	lsl	r2, r4, r1
   21b5c:	sub	ip, r1, #32
   21b60:	cmp	r3, r2
   21b64:	movcc	r3, r2
   21b68:	lsr	r4, r3, r1
   21b6c:	adds	r2, r8, r4
   21b70:	rsb	r4, r1, #32
   21b74:	adc	r3, r9, #0
   21b78:	ldrd	r8, [r0, #32]
   21b7c:	strd	r2, [sp, #200]	; 0xc8
   21b80:	subs	r2, r2, r8
   21b84:	sbc	r3, r3, r9
   21b88:	lsl	r3, r3, r1
   21b8c:	lsl	r1, r2, r1
   21b90:	orr	r3, r3, r2, lsl ip
   21b94:	str	r1, [r0, #48]	; 0x30
   21b98:	orr	r3, r3, r2, lsr r4
   21b9c:	str	r3, [r0, #52]	; 0x34
   21ba0:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   21ba4:	mov	r3, #8
   21ba8:	b	21b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdcb4>
   21bac:	mov	r3, #1
   21bb0:	b	21b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdcb4>
   21bb4:	mov	r3, #2
   21bb8:	b	21b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdcb4>
   21bbc:	ldrd	r2, [r5, #32]
   21bc0:	subs	r2, r8, r2
   21bc4:	sbc	r3, r9, r3
   21bc8:	strd	r2, [r4, #80]	; 0x50
   21bcc:	b	21678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd7ec>
   21bd0:	ldrd	r2, [ip, #48]	; 0x30
   21bd4:	orrs	ip, r2, r3
   21bd8:	beq	21960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdad4>
   21bdc:	movw	r0, #10132	; 0x2794
   21be0:	movw	r1, #5081	; 0x13d9
   21be4:	movt	r0, #5
   21be8:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   21bec:	b	21960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdad4>
   21bf0:	ldr	r3, [r4, #116]	; 0x74
   21bf4:	cmp	r3, #0
   21bf8:	streq	fp, [r4, #116]	; 0x74
   21bfc:	beq	212c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd43c>
   21c00:	cmp	fp, r3
   21c04:	beq	212c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd43c>
   21c08:	movw	r0, #10132	; 0x2794
   21c0c:	movw	r1, #5354	; 0x14ea
   21c10:	movt	r0, #5
   21c14:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   21c18:	b	212c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd43c>
   21c1c:	mov	r2, #5
   21c20:	movw	r1, #11676	; 0x2d9c
   21c24:	movt	r1, #5
   21c28:	bl	13688 <dcgettext@plt>
   21c2c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   21c30:	b	2151c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd690>
   21c34:	ldr	r3, [r4, #120]	; 0x78
   21c38:	cmp	r3, #0
   21c3c:	streq	fp, [r4, #120]	; 0x78
   21c40:	beq	212c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd43c>
   21c44:	cmp	fp, r3
   21c48:	beq	212c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd43c>
   21c4c:	movw	r0, #10132	; 0x2794
   21c50:	movw	r1, #5363	; 0x14f3
   21c54:	movt	r0, #5
   21c58:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   21c5c:	b	212c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd43c>
   21c60:	movw	r0, #10132	; 0x2794
   21c64:	movw	r1, #5254	; 0x1486
   21c68:	movt	r0, #5
   21c6c:	ldr	r2, [pc, #1768]	; 2235c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4d0>
   21c70:	bl	135d4 <_bfd_abort@plt>
   21c74:	ldrd	r0, [r5, #32]
   21c78:	ldrd	r2, [r4, #32]
   21c7c:	subs	r2, r2, r0
   21c80:	sbc	r3, r3, r1
   21c84:	strd	r2, [r4, #80]	; 0x50
   21c88:	b	21678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd7ec>
   21c8c:	ldr	r3, [r1, #20]
   21c90:	tst	r3, #67108864	; 0x4000000
   21c94:	beq	21778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8ec>
   21c98:	ldr	r3, [fp, #8]
   21c9c:	cmp	r3, #0
   21ca0:	beq	21cb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde24>
   21ca4:	ldr	r2, [r3]
   21ca8:	cmp	r2, #0
   21cac:	beq	22244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3b8>
   21cb0:	mov	r2, #5
   21cb4:	movw	r1, #11368	; 0x2c68
   21cb8:	mov	r0, #0
   21cbc:	movt	r1, #5
   21cc0:	bl	13688 <dcgettext@plt>
   21cc4:	ldr	r1, [fp, #24]
   21cc8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   21ccc:	ldr	r3, [fp, #8]
   21cd0:	ldr	r1, [fp, #28]
   21cd4:	ldr	r0, [r3, #8]
   21cd8:	mov	sl, fp
   21cdc:	ldrb	ip, [r1, #24]
   21ce0:	ldrd	r2, [r0, #32]
   21ce4:	orr	ip, ip, #1
   21ce8:	ldrd	r4, [r0, #48]	; 0x30
   21cec:	strb	ip, [r1, #24]
   21cf0:	strd	r2, [r1, #40]	; 0x28
   21cf4:	strd	r2, [r1, #32]
   21cf8:	strd	r4, [r1, #48]	; 0x30
   21cfc:	b	213b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd52c>
   21d00:	ldr	r7, [sp, #16]
   21d04:	mov	r0, sl
   21d08:	ldr	r1, [sp, #48]	; 0x30
   21d0c:	ldr	ip, [r7, #8]
   21d10:	strd	r8, [sp, #8]
   21d14:	ldr	r8, [sp, #108]	; 0x6c
   21d18:	sub	lr, ip, #32
   21d1c:	ldr	r9, [sp, #104]	; 0x68
   21d20:	str	r5, [sp]
   21d24:	lsl	r3, r8, ip
   21d28:	orr	r3, r3, r9, lsl lr
   21d2c:	rsb	lr, ip, #32
   21d30:	lsl	r2, r9, ip
   21d34:	orr	r3, r3, r9, lsr lr
   21d38:	bl	20b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcc84>
   21d3c:	movw	r2, #65288	; 0xff08
   21d40:	ldrd	r8, [sp, #40]	; 0x28
   21d44:	movt	r2, #9
   21d48:	b	215f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd768>
   21d4c:	ldrb	r3, [r3, #1]
   21d50:	cmp	r3, #0
   21d54:	beq	21300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd474>
   21d58:	b	212f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd468>
   21d5c:	ldr	r1, [r6, #28]
   21d60:	ldr	r2, [sp, #144]	; 0x90
   21d64:	ldr	r3, [sp, #148]	; 0x94
   21d68:	ldr	r0, [r1, #20]
   21d6c:	str	r2, [sp, #200]	; 0xc8
   21d70:	orr	r0, r0, #1
   21d74:	str	r3, [sp, #204]	; 0xcc
   21d78:	str	r0, [r1, #20]
   21d7c:	b	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   21d80:	cmp	r2, #1024	; 0x400
   21d84:	beq	2206c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe1e0>
   21d88:	ldrd	r4, [ip, #48]	; 0x30
   21d8c:	orrs	r9, r4, r5
   21d90:	beq	22094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe208>
   21d94:	ldrd	r2, [sp, #200]	; 0xc8
   21d98:	ldr	r1, [fp, #36]	; 0x24
   21d9c:	cmp	r1, #0
   21da0:	beq	222dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe450>
   21da4:	mov	r0, r5
   21da8:	b	219dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb50>
   21dac:	ldr	r3, [fp, #44]	; 0x2c
   21db0:	cmp	r3, #0
   21db4:	bne	21810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd984>
   21db8:	b	21844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd9b8>
   21dbc:	ldr	r0, [fp, #36]	; 0x24
   21dc0:	cmp	r0, #0
   21dc4:	beq	22148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe2bc>
   21dc8:	ldrb	r1, [fp, #84]	; 0x54
   21dcc:	ldrd	r2, [r0, #40]	; 0x28
   21dd0:	tst	r1, #64	; 0x40
   21dd4:	beq	22000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe174>
   21dd8:	adds	r2, r2, r8
   21ddc:	adc	r3, r3, r9
   21de0:	ldr	ip, [fp, #28]
   21de4:	strd	r2, [ip, #40]	; 0x28
   21de8:	b	21990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb04>
   21dec:	mov	r4, r8
   21df0:	mov	r5, r9
   21df4:	mov	r8, #0
   21df8:	mov	r9, #0
   21dfc:	b	21844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd9b8>
   21e00:	ldr	r4, [sp, #52]	; 0x34
   21e04:	ldrb	r3, [r4]
   21e08:	and	r3, r3, #3
   21e0c:	cmp	r3, #2
   21e10:	bne	2174c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8c0>
   21e14:	ldr	r3, [r4, #52]	; 0x34
   21e18:	ldr	r3, [r3, #4]
   21e1c:	ldr	r3, [r3, #4]
   21e20:	cmp	r3, #2
   21e24:	bne	2174c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8c0>
   21e28:	mov	r0, #0
   21e2c:	mov	r1, #0
   21e30:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   21e34:	cmp	r0, #0
   21e38:	str	r0, [fp, #44]	; 0x2c
   21e3c:	beq	2174c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd8c0>
   21e40:	b	21700 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd874>
   21e44:	ldrd	r2, [ip, #32]
   21e48:	orrs	lr, r2, r3
   21e4c:	bne	2221c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe390>
   21e50:	mov	r4, r8
   21e54:	mov	r5, r9
   21e58:	mov	r8, r2
   21e5c:	mov	r9, r3
   21e60:	mov	sl, #0
   21e64:	b	21864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd9d8>
   21e68:	ldr	r4, [fp, #32]
   21e6c:	ldr	r5, [r7, #20]
   21e70:	cmp	r4, #0
   21e74:	beq	21ea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe018>
   21e78:	tst	r5, #3
   21e7c:	beq	21f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe080>
   21e80:	ldr	r0, [r4]
   21e84:	ldrb	r3, [r0]
   21e88:	cmp	r3, #42	; 0x2a
   21e8c:	bne	21f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe080>
   21e90:	movw	r1, #29012	; 0x7154
   21e94:	movt	r1, #4
   21e98:	bl	13490 <strcmp@plt>
   21e9c:	cmp	r0, #0
   21ea0:	bne	21f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe080>
   21ea4:	ldr	r8, [sp, #16]
   21ea8:	and	r3, r5, #25
   21eac:	cmp	r3, #1
   21eb0:	orreq	r5, r5, #32
   21eb4:	ldr	r4, [r8, #212]	; 0xd4
   21eb8:	cmp	r4, #0
   21ebc:	beq	21ef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe064>
   21ec0:	ldr	r9, [sp, #20]
   21ec4:	ldr	r3, [r4, #52]	; 0x34
   21ec8:	tst	r5, r3
   21ecc:	beq	21edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe050>
   21ed0:	ldr	r3, [r4, #56]	; 0x38
   21ed4:	tst	r5, r3
   21ed8:	beq	22348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4bc>
   21edc:	ldr	r4, [r4, #8]
   21ee0:	cmp	r4, #0
   21ee4:	bne	21ec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe038>
   21ee8:	str	r9, [sp, #20]
   21eec:	str	r8, [sp, #16]
   21ef0:	movw	r0, #29012	; 0x7154
   21ef4:	mov	r1, #0
   21ef8:	movt	r0, #4
   21efc:	bl	21088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1fc>
   21f00:	ldr	r7, [fp, #28]
   21f04:	mov	r4, r0
   21f08:	str	r4, [fp, #32]
   21f0c:	ldrb	r3, [fp, #84]	; 0x54
   21f10:	tst	r3, #8
   21f14:	bne	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   21f18:	ldr	r3, [r7, #20]
   21f1c:	tst	r3, #1
   21f20:	beq	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   21f24:	movw	r2, #1026	; 0x402
   21f28:	and	r2, r3, r2
   21f2c:	cmp	r2, #1024	; 0x400
   21f30:	beq	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   21f34:	ldr	r9, [sp, #52]	; 0x34
   21f38:	ldrb	r3, [r9]
   21f3c:	and	r3, r3, #3
   21f40:	cmp	r3, #2
   21f44:	beq	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   21f48:	ldr	ip, [sp, #212]	; 0xd4
   21f4c:	cmp	ip, #0
   21f50:	beq	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   21f54:	movw	r1, #29012	; 0x7154
   21f58:	ldr	r0, [r4]
   21f5c:	movt	r1, #4
   21f60:	bl	13490 <strcmp@plt>
   21f64:	cmp	r0, #0
   21f68:	bne	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   21f6c:	ldr	r8, [sp, #16]
   21f70:	ldr	r5, [r8, #212]	; 0xd4
   21f74:	cmp	r5, #0
   21f78:	beq	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   21f7c:	movw	r1, #29012	; 0x7154
   21f80:	ldr	r0, [r5]
   21f84:	movt	r1, #4
   21f88:	bl	13490 <strcmp@plt>
   21f8c:	cmp	r0, #0
   21f90:	bne	21fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe114>
   21f94:	ldr	r3, [r5, #8]
   21f98:	cmp	r3, #0
   21f9c:	beq	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   21fa0:	ldr	r9, [sp, #36]	; 0x24
   21fa4:	ldr	r3, [r9]
   21fa8:	cmp	r3, #1
   21fac:	beq	21ff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe168>
   21fb0:	movw	r3, #1244	; 0x4dc
   21fb4:	movt	r3, #10
   21fb8:	ldrsb	r0, [r3, #28]
   21fbc:	cmp	r0, #0
   21fc0:	movwne	r1, #11424	; 0x2ca0
   21fc4:	movweq	r1, #11492	; 0x2ce4
   21fc8:	movtne	r1, #5
   21fcc:	movteq	r1, #5
   21fd0:	movne	r0, #0
   21fd4:	movne	r2, #5
   21fd8:	moveq	r2, #5
   21fdc:	bl	13688 <dcgettext@plt>
   21fe0:	ldr	r3, [fp, #28]
   21fe4:	ldr	r1, [r3]
   21fe8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   21fec:	ldr	r4, [fp, #32]
   21ff0:	ldr	r7, [fp, #28]
   21ff4:	ldrd	r8, [r4, #40]	; 0x28
   21ff8:	ldr	sl, [r7, #92]	; 0x5c
   21ffc:	b	21798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd90c>
   22000:	ldr	r1, [fp, #32]
   22004:	cmp	r0, r1
   22008:	ldrne	sl, [fp, #68]	; 0x44
   2200c:	cmp	sl, #0
   22010:	ble	21de0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf54>
   22014:	mov	r1, #1
   22018:	sub	r0, sl, #32
   2201c:	lsl	r0, r1, r0
   22020:	str	r0, [sp, #116]	; 0x74
   22024:	ldr	r5, [sp, #116]	; 0x74
   22028:	rsb	r0, sl, #32
   2202c:	subs	r2, r2, #1
   22030:	orr	r0, r5, r1, lsr r0
   22034:	lsl	r1, r1, sl
   22038:	str	r0, [sp, #116]	; 0x74
   2203c:	sbc	r3, r3, #0
   22040:	str	r1, [sp, #112]	; 0x70
   22044:	ldrd	r8, [sp, #112]	; 0x70
   22048:	adds	r2, r2, r8
   2204c:	adc	r3, r3, r9
   22050:	mov	r4, r8
   22054:	mov	r5, r9
   22058:	rsbs	r4, r4, #0
   2205c:	rsc	r5, r5, #0
   22060:	and	r2, r2, r4
   22064:	and	r3, r3, r5
   22068:	b	21de0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf54>
   2206c:	ldr	r4, [sp, #52]	; 0x34
   22070:	ldrb	r3, [r4]
   22074:	and	r3, r3, #3
   22078:	cmp	r3, #2
   2207c:	beq	219d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb44>
   22080:	mov	r8, #0
   22084:	mov	r9, #0
   22088:	ldrd	r2, [sp, #200]	; 0xc8
   2208c:	strd	r8, [sp, #96]	; 0x60
   22090:	b	21a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb80>
   22094:	ldr	r3, [r7, #48]	; 0x30
   22098:	cmp	r3, #0
   2209c:	beq	220d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe248>
   220a0:	ldr	r3, [r3, #28]
   220a4:	ldrd	r0, [sp, #200]	; 0xc8
   220a8:	ldrd	r2, [r3, #32]
   220ac:	cmp	r3, r1
   220b0:	cmpeq	r2, r0
   220b4:	mov	r2, r0
   220b8:	mov	r3, r1
   220bc:	bhi	21da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf18>
   220c0:	b	21d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf0c>
   220c4:	ldrb	r2, [fp, #84]	; 0x54
   220c8:	tst	r2, #64	; 0x40
   220cc:	beq	213b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd528>
   220d0:	b	21a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdc00>
   220d4:	ldrd	r0, [ip, #32]
   220d8:	ldrd	r2, [ip, #40]	; 0x28
   220dc:	cmp	r1, r3
   220e0:	cmpeq	r0, r2
   220e4:	bne	21d94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf08>
   220e8:	ldrd	r2, [sp, #200]	; 0xc8
   220ec:	b	21da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf18>
   220f0:	mov	r1, r7
   220f4:	movw	r0, #29012	; 0x7154
   220f8:	movt	r0, #4
   220fc:	bl	21088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1fc>
   22100:	mov	r7, r0
   22104:	b	2196c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdae0>
   22108:	movw	r0, #29012	; 0x7154
   2210c:	movt	r0, #4
   22110:	bl	21088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1fc>
   22114:	ldr	ip, [sp, #144]	; 0x90
   22118:	ldr	r1, [sp, #148]	; 0x94
   2211c:	mov	r2, ip
   22120:	mov	r3, r1
   22124:	str	ip, [r0, #40]	; 0x28
   22128:	str	r1, [r0, #44]	; 0x2c
   2212c:	b	213ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd520>
   22130:	ldrd	r4, [r3, #32]
   22134:	add	r0, fp, #28
   22138:	ldr	r2, [fp, #44]	; 0x2c
   2213c:	strd	r4, [sp]
   22140:	bl	1e92c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaaa0>
   22144:	b	21a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdbd8>
   22148:	ldr	r3, [r7, #48]	; 0x30
   2214c:	ldr	ip, [fp, #28]
   22150:	cmp	r3, #0
   22154:	beq	21990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb04>
   22158:	ldr	r2, [ip, #20]
   2215c:	tst	r2, #1
   22160:	beq	21990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb04>
   22164:	ldr	r8, [r3, #28]
   22168:	ldrd	r2, [sp, #200]	; 0xc8
   2216c:	ldrd	r4, [r8, #32]
   22170:	strd	r2, [sp, #104]	; 0x68
   22174:	cmp	r5, r3
   22178:	cmpeq	r4, r2
   2217c:	strd	r4, [sp, #40]	; 0x28
   22180:	bls	22254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3c8>
   22184:	ldrd	r2, [ip, #48]	; 0x30
   22188:	strd	r2, [sp, #24]
   2218c:	orrs	r3, r2, r3
   22190:	beq	22254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3c8>
   22194:	ldr	r4, [sp, #16]
   22198:	ldr	r5, [sp, #24]
   2219c:	ldr	r9, [sp, #28]
   221a0:	ldr	r3, [r4, #8]
   221a4:	lsr	r5, r5, r3
   221a8:	rsb	r2, r3, #32
   221ac:	orr	r2, r5, r9, lsl r2
   221b0:	str	r2, [sp, #128]	; 0x80
   221b4:	ldr	r4, [sp, #128]	; 0x80
   221b8:	sub	r2, r3, #32
   221bc:	lsr	r3, r9, r3
   221c0:	str	r3, [sp, #132]	; 0x84
   221c4:	orr	r2, r4, r9, lsr r2
   221c8:	str	r2, [sp, #128]	; 0x80
   221cc:	ldrd	r4, [sp, #104]	; 0x68
   221d0:	ldrd	r2, [sp, #128]	; 0x80
   221d4:	adds	r2, r2, r4
   221d8:	adc	r3, r3, r5
   221dc:	ldrd	r4, [sp, #40]	; 0x28
   221e0:	cmp	r5, r3
   221e4:	cmpeq	r4, r2
   221e8:	bcc	22254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3c8>
   221ec:	ldrd	r2, [r8, #40]	; 0x28
   221f0:	cmp	r5, r3
   221f4:	cmpeq	r4, r2
   221f8:	beq	21990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb04>
   221fc:	mov	r2, #5
   22200:	movw	r1, #11628	; 0x2d6c
   22204:	movt	r1, #5
   22208:	bl	13688 <dcgettext@plt>
   2220c:	ldr	r1, [fp, #24]
   22210:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   22214:	ldr	ip, [fp, #28]
   22218:	b	21990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb04>
   2221c:	movw	r0, #10132	; 0x2794
   22220:	movw	r1, #4990	; 0x137e
   22224:	movt	r0, #5
   22228:	mov	r4, r8
   2222c:	mov	r5, r9
   22230:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   22234:	mov	sl, #0
   22238:	mov	r8, #0
   2223c:	mov	r9, #0
   22240:	b	21864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd9d8>
   22244:	ldr	r2, [r3, #4]
   22248:	cmp	r2, #5
   2224c:	bne	21cb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde24>
   22250:	b	21cd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xde48>
   22254:	ldr	r3, [fp, #80]	; 0x50
   22258:	cmp	r3, #1
   2225c:	beq	222f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe468>
   22260:	ldrd	r0, [r8, #40]	; 0x28
   22264:	ldrd	r8, [sp, #104]	; 0x68
   22268:	ldrd	r2, [sp, #40]	; 0x28
   2226c:	adds	r0, r0, r8
   22270:	adc	r1, r1, r9
   22274:	subs	r0, r0, r2
   22278:	sbc	r1, r1, r3
   2227c:	cmp	sl, #0
   22280:	ble	222d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe448>
   22284:	mov	r3, #1
   22288:	sub	r2, sl, #32
   2228c:	lsl	r2, r3, r2
   22290:	str	r2, [sp, #124]	; 0x7c
   22294:	ldr	r5, [sp, #124]	; 0x7c
   22298:	rsb	r2, sl, #32
   2229c:	orr	r2, r5, r3, lsr r2
   222a0:	lsl	r3, r3, sl
   222a4:	str	r2, [sp, #124]	; 0x7c
   222a8:	str	r3, [sp, #120]	; 0x78
   222ac:	ldrd	r2, [sp, #120]	; 0x78
   222b0:	ldrd	r4, [sp, #120]	; 0x78
   222b4:	subs	r2, r2, #1
   222b8:	sbc	r3, r3, #0
   222bc:	rsbs	r4, r4, #0
   222c0:	rsc	r5, r5, #0
   222c4:	adds	r0, r0, r2
   222c8:	adc	r1, r1, r3
   222cc:	and	r0, r0, r4
   222d0:	and	r1, r1, r5
   222d4:	strd	r0, [ip, #40]	; 0x28
   222d8:	b	21990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdb04>
   222dc:	ldr	ip, [sp, #52]	; 0x34
   222e0:	ldrb	r1, [ip]
   222e4:	and	r1, r1, #3
   222e8:	cmp	r1, #2
   222ec:	strne	fp, [r7, #48]	; 0x30
   222f0:	b	21da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xdf18>
   222f4:	ldr	r9, [sp, #16]
   222f8:	ldr	r3, [r8, #48]	; 0x30
   222fc:	ldr	r1, [r8, #52]	; 0x34
   22300:	ldr	r5, [r9, #8]
   22304:	lsr	r3, r3, r5
   22308:	str	r3, [sp, #136]	; 0x88
   2230c:	ldr	r2, [sp, #136]	; 0x88
   22310:	rsb	r3, r5, #32
   22314:	sub	r0, r5, #32
   22318:	orr	r3, r2, r1, lsl r3
   2231c:	str	r3, [sp, #136]	; 0x88
   22320:	ldr	r4, [sp, #136]	; 0x88
   22324:	ldrd	r2, [r8, #40]	; 0x28
   22328:	orr	r0, r4, r1, lsr r0
   2232c:	lsr	r1, r1, r5
   22330:	str	r0, [sp, #136]	; 0x88
   22334:	str	r1, [sp, #140]	; 0x8c
   22338:	ldrd	r0, [sp, #136]	; 0x88
   2233c:	adds	r0, r0, r2
   22340:	adc	r1, r1, r3
   22344:	b	2227c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe3f0>
   22348:	str	r9, [sp, #20]
   2234c:	str	r8, [sp, #16]
   22350:	b	21f08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe07c>
   22354:	bl	13694 <__stack_chk_fail@plt>
   22358:			; <UNDEFINED> instruction: 0x0009fab8
   2235c:	andeq	r2, r5, ip, ror #14
   22360:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   22364:	adds	r4, r3, #0
   22368:	mov	sl, r1
   2236c:	mov	r8, r0
   22370:	mov	r1, #0
   22374:	mov	r0, r3
   22378:	movne	r4, #1
   2237c:	ldr	r9, [sp, #36]	; 0x24
   22380:	mov	r5, r2
   22384:	ldr	r7, [sp, #32]
   22388:	bl	21088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1fc>
   2238c:	cmp	r9, #0
   22390:	movne	r9, #0
   22394:	andeq	r9, r4, #1
   22398:	cmp	r9, #0
   2239c:	mov	r6, r0
   223a0:	str	r0, [sl]
   223a4:	beq	223c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe538>
   223a8:	movw	r1, #29012	; 0x7154
   223ac:	mov	r0, r5
   223b0:	movt	r1, #4
   223b4:	bl	13490 <strcmp@plt>
   223b8:	cmp	r0, #0
   223bc:	streq	r6, [r8]
   223c0:	beq	223d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe548>
   223c4:	mov	r0, r5
   223c8:	mov	r1, #0
   223cc:	bl	21088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1fc>
   223d0:	str	r0, [r8]
   223d4:	cmp	r7, #0
   223d8:	moveq	r4, #0
   223dc:	andne	r4, r4, #1
   223e0:	cmp	r4, #0
   223e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   223e8:	movw	r1, #11708	; 0x2dbc
   223ec:	mov	r0, #0
   223f0:	movt	r1, #5
   223f4:	mov	r2, #5
   223f8:	bl	13688 <dcgettext@plt>
   223fc:	mov	r1, #0
   22400:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   22404:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   22408:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2240c:	mov	r9, r1
   22410:	mov	r7, r0
   22414:	movw	r1, #29012	; 0x7154
   22418:	mov	r0, r9
   2241c:	movt	r1, #4
   22420:	bl	13490 <strcmp@plt>
   22424:	cmp	r0, #0
   22428:	beq	224f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe664>
   2242c:	movw	r1, #29012	; 0x7154
   22430:	mov	r0, r7
   22434:	movt	r1, #4
   22438:	bl	13490 <strcmp@plt>
   2243c:	cmp	r0, #0
   22440:	beq	224f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe664>
   22444:	movw	r3, #65288	; 0xff08
   22448:	movt	r3, #9
   2244c:	ldr	r8, [r3, #212]	; 0xd4
   22450:	cmp	r8, #0
   22454:	beq	22528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe69c>
   22458:	mov	r6, #0
   2245c:	mov	r4, r8
   22460:	b	22470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe5e4>
   22464:	ldr	r4, [r4, #4]
   22468:	cmp	r4, #0
   2246c:	beq	224b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe62c>
   22470:	cmp	r6, #0
   22474:	ldr	r5, [r4]
   22478:	beq	22510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe684>
   2247c:	mov	r0, r5
   22480:	mov	r1, r7
   22484:	bl	13490 <strcmp@plt>
   22488:	subs	r5, r0, #0
   2248c:	bne	22464 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe5d8>
   22490:	mov	r2, #5
   22494:	movw	r1, #11820	; 0x2e2c
   22498:	movt	r1, #5
   2249c:	bl	13688 <dcgettext@plt>
   224a0:	mov	r1, r5
   224a4:	mov	r2, r7
   224a8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   224ac:	ldr	r4, [r4, #4]
   224b0:	cmp	r4, #0
   224b4:	bne	22470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe5e4>
   224b8:	ldr	r8, [r8, #8]
   224bc:	cmp	r8, #0
   224c0:	bne	2245c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe5d0>
   224c4:	cmp	r6, #0
   224c8:	beq	22528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe69c>
   224cc:	mov	r0, #8
   224d0:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   224d4:	mov	r4, r0
   224d8:	mov	r0, r7
   224dc:	bl	137e4 <xstrdup@plt>
   224e0:	ldr	r3, [r6, #4]
   224e4:	stm	r4, {r0, r3}
   224e8:	str	r4, [r6, #4]
   224ec:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   224f0:	mov	r2, #5
   224f4:	movw	r1, #11768	; 0x2df8
   224f8:	mov	r0, #0
   224fc:	movt	r1, #5
   22500:	bl	13688 <dcgettext@plt>
   22504:	mov	r1, #0
   22508:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2250c:	b	22444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe5b8>
   22510:	mov	r1, r9
   22514:	mov	r0, r5
   22518:	bl	13490 <strcmp@plt>
   2251c:	cmp	r0, #0
   22520:	moveq	r6, r8
   22524:	b	2247c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe5f0>
   22528:	mov	r2, #5
   2252c:	movw	r1, #11880	; 0x2e68
   22530:	mov	r0, #0
   22534:	movt	r1, #5
   22538:	bl	13688 <dcgettext@plt>
   2253c:	mov	r2, r9
   22540:	mov	r1, #0
   22544:	mov	r3, r7
   22548:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2254c:	mov	r6, #0
   22550:	b	224cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe640>
   22554:	ldr	r0, [r0, #136]	; 0x88
   22558:	bx	lr
   2255c:	push	{r4, r5, r6, r7, r8, lr}
   22560:	mov	r8, r0
   22564:	mov	r5, r1
   22568:	ldr	r0, [pc, #276]	; 22684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe7f8>
   2256c:	mov	r1, r8
   22570:	mov	r3, #0
   22574:	mov	r7, r2
   22578:	bl	139f4 <bfd_hash_lookup@plt>
   2257c:	subs	r4, r0, #0
   22580:	beq	22630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe7a4>
   22584:	ldr	r6, [r4, #40]	; 0x28
   22588:	cmp	r6, #0
   2258c:	beq	22658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe7cc>
   22590:	adds	r3, r7, #0
   22594:	movw	r2, #381	; 0x17d
   22598:	movne	r3, #1
   2259c:	cmp	r5, r2
   225a0:	movne	r3, #0
   225a4:	cmp	r3, #0
   225a8:	beq	2260c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe780>
   225ac:	mov	r0, #0
   225b0:	ldr	r1, [pc, #204]	; 22684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe7f8>
   225b4:	mov	r2, r6
   225b8:	bl	1d904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a78>
   225bc:	subs	r7, r0, #0
   225c0:	beq	22664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe7d8>
   225c4:	ldm	r4, {r0, r1, r2}
   225c8:	stm	r7, {r0, r1, r2}
   225cc:	str	r7, [r4]
   225d0:	str	r6, [r7, #40]	; 0x28
   225d4:	add	r0, r7, #16
   225d8:	str	r5, [r7, #88]	; 0x58
   225dc:	pop	{r4, r5, r6, r7, r8, pc}
   225e0:	cmp	r5, #0
   225e4:	bne	225f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe764>
   225e8:	cmp	r3, #0
   225ec:	bge	22618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe78c>
   225f0:	ldr	r3, [r4]
   225f4:	cmp	r3, #0
   225f8:	beq	22620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe794>
   225fc:	ldr	ip, [r3, #40]	; 0x28
   22600:	cmp	r6, ip
   22604:	bne	22620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe794>
   22608:	mov	r4, r3
   2260c:	ldr	r3, [r4, #88]	; 0x58
   22610:	cmp	r3, r5
   22614:	bne	225e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe754>
   22618:	add	r0, r4, #16
   2261c:	pop	{r4, r5, r6, r7, r8, pc}
   22620:	cmp	r7, #0
   22624:	bne	225ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe720>
   22628:	mov	r0, r7
   2262c:	pop	{r4, r5, r6, r7, r8, pc}
   22630:	cmp	r7, #0
   22634:	beq	22628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe79c>
   22638:	mov	r2, #5
   2263c:	movw	r1, #11948	; 0x2eac
   22640:	movt	r1, #5
   22644:	bl	13688 <dcgettext@plt>
   22648:	mov	r1, r8
   2264c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   22650:	mov	r0, r4
   22654:	pop	{r4, r5, r6, r7, r8, pc}
   22658:	mov	r7, r4
   2265c:	mov	r6, r8
   22660:	b	225d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe744>
   22664:	mov	r2, #5
   22668:	movw	r1, #11948	; 0x2eac
   2266c:	movt	r1, #5
   22670:	bl	13688 <dcgettext@plt>
   22674:	mov	r1, r6
   22678:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2267c:	mov	r0, r7
   22680:	pop	{r4, r5, r6, r7, r8, pc}
   22684:	andeq	pc, r9, r0, asr #31
   22688:	push	{r4, r5, lr}
   2268c:	sub	sp, sp, #12
   22690:	mov	r1, #1000	; 0x3e8
   22694:	movw	r2, #13684	; 0x3574
   22698:	movw	r3, #14260	; 0x37b4
   2269c:	movt	r2, #1
   226a0:	movt	r3, #1
   226a4:	str	r2, [sp]
   226a8:	ldr	r0, [pc, #224]	; 22790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe904>
   226ac:	mov	r2, #0
   226b0:	bl	136dc <_obstack_begin@plt>
   226b4:	ldr	ip, [pc, #216]	; 22794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe908>
   226b8:	movw	r4, #62408	; 0xf3c8
   226bc:	movt	r4, #9
   226c0:	add	r0, ip, #52	; 0x34
   226c4:	movw	r1, #55556	; 0xd904
   226c8:	mov	r2, #104	; 0x68
   226cc:	movt	r1, #1
   226d0:	mov	r3, #61	; 0x3d
   226d4:	str	ip, [r4]
   226d8:	bl	138b0 <bfd_hash_table_init_n@plt>
   226dc:	cmp	r0, #0
   226e0:	bne	226f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe86c>
   226e4:	movw	r1, #11988	; 0x2ed4
   226e8:	mov	r2, #5
   226ec:	movt	r1, #5
   226f0:	bl	13688 <dcgettext@plt>
   226f4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   226f8:	ldr	r2, [r4]
   226fc:	movw	r5, #65288	; 0xff08
   22700:	movt	r5, #9
   22704:	mov	r4, #0
   22708:	movw	ip, #1020	; 0x3fc
   2270c:	movw	r3, #1048	; 0x418
   22710:	movt	ip, #10
   22714:	movt	r3, #10
   22718:	str	r4, [r2]
   2271c:	mov	lr, r5
   22720:	str	r2, [r2, #4]
   22724:	mov	r0, r4
   22728:	mov	r2, r4
   2272c:	mov	r1, #2
   22730:	str	r4, [lr, #216]!	; 0xd8
   22734:	str	r4, [r3]
   22738:	str	lr, [r5, #220]	; 0xdc
   2273c:	str	r4, [ip]
   22740:	str	ip, [ip, #4]
   22744:	str	r3, [r3, #4]
   22748:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   2274c:	mov	r1, r4
   22750:	mov	r2, #1
   22754:	str	r0, [r5, #224]	; 0xe0
   22758:	movw	r0, #12028	; 0x2efc
   2275c:	movt	r0, #5
   22760:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   22764:	ldr	r1, [pc, #44]	; 22798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe90c>
   22768:	movw	r3, #1016	; 0x3f8
   2276c:	movw	r2, #1028	; 0x404
   22770:	movt	r3, #10
   22774:	movt	r2, #10
   22778:	str	r4, [r5, #228]!	; 0xe4
   2277c:	str	r5, [r3]
   22780:	str	r0, [r2]
   22784:	str	r1, [r0, #28]
   22788:	add	sp, sp, #12
   2278c:	pop	{r4, r5, pc}
   22790:	andeq	pc, r9, r8, asr pc	; <UNPREDICTABLE>
   22794:	andeq	pc, r9, ip, lsl #31
   22798:			; <UNDEFINED> instruction: 0x0009fab8
   2279c:	push	{r4, lr}
   227a0:	mov	r4, r0
   227a4:	ldr	r3, [r4, #12]
   227a8:	cmp	r3, #8
   227ac:	ldrls	pc, [pc, r3, lsl #2]
   227b0:	b	22854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9c8>
   227b4:	andeq	r2, r2, r0, ror #15
   227b8:	strdeq	r2, [r2], -r0
   227bc:	ldrdeq	r2, [r2], -r8
   227c0:	andeq	r2, r2, r8, lsl #16
   227c4:	andeq	r2, r2, r8, ror #15
   227c8:	andeq	r2, r2, r8, ror #15
   227cc:	andeq	r2, r2, r4, asr r8
   227d0:	andeq	r2, r2, r4, asr r8
   227d4:	ldrdeq	r2, [r2], -r8
   227d8:	ldr	r4, [r4, #16]
   227dc:	b	227a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe918>
   227e0:	ldr	r0, [r4, #16]
   227e4:	bl	2279c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe910>
   227e8:	ldr	r4, [r4, #20]
   227ec:	b	227a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe918>
   227f0:	ldr	r0, [r4, #16]
   227f4:	bl	2279c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe910>
   227f8:	ldr	r0, [r4, #20]
   227fc:	bl	2279c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe910>
   22800:	ldr	r4, [r4, #24]
   22804:	b	227a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe918>
   22808:	ldr	r3, [r4]
   2280c:	sub	r3, r3, #320	; 0x140
   22810:	cmp	r3, #3
   22814:	pophi	{r4, pc}
   22818:	mov	r2, #1
   2281c:	lsl	r3, r2, r3
   22820:	tst	r3, #13
   22824:	popeq	{r4, pc}
   22828:	mov	r1, #0
   2282c:	ldr	r0, [r4, #16]
   22830:	mov	r2, r1
   22834:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   22838:	subs	r3, r0, #0
   2283c:	popeq	{r4, pc}
   22840:	ldr	r1, [r3, #28]
   22844:	cmp	r1, #0
   22848:	popne	{r4, pc}
   2284c:	pop	{r4, lr}
   22850:	b	22858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9cc>
   22854:	pop	{r4, pc}
   22858:	push	{r4, r5, r6, lr}
   2285c:	mov	r4, r0
   22860:	mov	r5, r1
   22864:	ldr	r0, [r0, #24]
   22868:	movw	r1, #11120	; 0x2b70
   2286c:	movt	r1, #5
   22870:	bl	13490 <strcmp@plt>
   22874:	cmp	r0, #0
   22878:	beq	22900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea74>
   2287c:	ldr	r0, [r4, #72]	; 0x48
   22880:	movw	r3, #381	; 0x17d
   22884:	cmp	r0, r3
   22888:	beq	228f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea6c>
   2288c:	movw	r3, #1088	; 0x440
   22890:	movt	r3, #10
   22894:	ldr	r1, [r4, #24]
   22898:	ldr	r0, [r3, #52]	; 0x34
   2289c:	bl	13844 <bfd_get_section_by_name@plt>
   228a0:	mov	ip, r0
   228a4:	str	r0, [r4, #28]
   228a8:	cmp	ip, #0
   228ac:	beq	22920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea94>
   228b0:	ldr	r0, [r4, #44]	; 0x2c
   228b4:	mov	r2, #0
   228b8:	mov	r3, #0
   228bc:	str	ip, [ip, #88]	; 0x58
   228c0:	cmp	r0, #0
   228c4:	str	r4, [ip, #136]	; 0x88
   228c8:	strd	r2, [ip, #80]	; 0x50
   228cc:	beq	228d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea48>
   228d0:	bl	2279c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe910>
   228d4:	ldr	r0, [r4, #48]	; 0x30
   228d8:	cmp	r0, #0
   228dc:	beq	228e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea58>
   228e0:	bl	2279c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe910>
   228e4:	ldr	r3, [r4, #68]	; 0x44
   228e8:	cmn	r3, #1
   228ec:	ldrne	r2, [r4, #28]
   228f0:	strne	r3, [r2, #92]	; 0x5c
   228f4:	pop	{r4, r5, r6, pc}
   228f8:	ldr	ip, [r4, #28]
   228fc:	b	228a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea1c>
   22900:	mov	r2, #5
   22904:	movw	r1, #12036	; 0x2f04
   22908:	movt	r1, #5
   2290c:	bl	13688 <dcgettext@plt>
   22910:	movw	r1, #11120	; 0x2b70
   22914:	movt	r1, #5
   22918:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2291c:	b	2287c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9f0>
   22920:	movw	r6, #1088	; 0x440
   22924:	movt	r6, #10
   22928:	mov	r2, r5
   2292c:	ldr	r1, [r4, #24]
   22930:	ldr	r0, [r6, #52]	; 0x34
   22934:	bl	1358c <bfd_make_section_anyway_with_flags@plt>
   22938:	cmp	r0, #0
   2293c:	mov	ip, r0
   22940:	str	r0, [r4, #28]
   22944:	bne	228b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea24>
   22948:	mov	r2, #5
   2294c:	movw	r1, #12072	; 0x2f28
   22950:	movt	r1, #5
   22954:	bl	13688 <dcgettext@plt>
   22958:	ldr	r3, [r6, #52]	; 0x34
   2295c:	ldr	r2, [r4, #24]
   22960:	ldr	r3, [r3, #4]
   22964:	ldr	r1, [r3]
   22968:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2296c:	ldr	ip, [r4, #28]
   22970:	b	228b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xea24>
   22974:	push	{r4, r5, r6, lr}
   22978:	mov	r5, r1
   2297c:	ldr	r6, [r0, #24]
   22980:	sub	r4, r0, #16
   22984:	ldr	r3, [r0, #-12]
   22988:	cmp	r3, r6
   2298c:	beq	229a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb14>
   22990:	movw	r0, #10132	; 0x2794
   22994:	movw	r1, #1487	; 0x5cf
   22998:	movt	r0, #5
   2299c:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   229a0:	ldr	r4, [r4]
   229a4:	cmp	r4, #0
   229a8:	beq	229dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb50>
   229ac:	ldr	r3, [r4, #40]	; 0x28
   229b0:	cmp	r3, r6
   229b4:	bne	229e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb58>
   229b8:	ldr	r3, [r4, #88]	; 0x58
   229bc:	cmp	r3, r5
   229c0:	beq	229d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb48>
   229c4:	cmp	r5, #0
   229c8:	bne	229a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb14>
   229cc:	cmp	r3, #0
   229d0:	blt	229a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb14>
   229d4:	add	r0, r4, #16
   229d8:	pop	{r4, r5, r6, pc}
   229dc:	mov	r0, r4
   229e0:	pop	{r4, r5, r6, pc}
   229e4:	mov	r0, #0
   229e8:	pop	{r4, r5, r6, pc}
   229ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   229f0:	sub	sp, sp, #36	; 0x24
   229f4:	mov	ip, #1
   229f8:	movt	ip, #64	; 0x40
   229fc:	str	ip, [sp, #16]
   22a00:	movw	sl, #1088	; 0x440
   22a04:	ldr	ip, [sp, #16]
   22a08:	movt	sl, #10
   22a0c:	mov	r9, r1
   22a10:	mov	r6, r0
   22a14:	mov	r7, r3
   22a18:	and	ip, r1, ip
   22a1c:	str	r2, [sp, #8]
   22a20:	str	ip, [sp, #16]
   22a24:	and	ip, r1, #17
   22a28:	str	ip, [sp, #28]
   22a2c:	movw	ip, #1025	; 0x401
   22a30:	and	ip, r1, ip
   22a34:	str	ip, [sp, #12]
   22a38:	movw	ip, #257	; 0x101
   22a3c:	and	ip, r1, ip
   22a40:	str	ip, [sp, #24]
   22a44:	movw	ip, #1048	; 0x418
   22a48:	movt	ip, #10
   22a4c:	str	ip, [sp, #4]
   22a50:	mov	ip, #1
   22a54:	movt	ip, #64	; 0x40
   22a58:	str	ip, [sp, #20]
   22a5c:	ldr	ip, [sp, #4]
   22a60:	ldr	r3, [ip]
   22a64:	ldr	r4, [r3, #16]
   22a68:	cmp	r4, #0
   22a6c:	beq	22e2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefa0>
   22a70:	mov	r5, r4
   22a74:	mov	fp, #0
   22a78:	ldr	r2, [r5, #28]
   22a7c:	mov	r3, r6
   22a80:	ldr	r8, [r5, #76]	; 0x4c
   22a84:	cmp	r2, #0
   22a88:	mov	r1, r2
   22a8c:	beq	22ab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec24>
   22a90:	cmp	r7, #0
   22a94:	ldr	r8, [r2, #20]
   22a98:	beq	22ab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec24>
   22a9c:	ldr	r0, [sl, #52]	; 0x34
   22aa0:	ldr	r2, [r6, #180]	; 0xb4
   22aa4:	blx	r7
   22aa8:	cmp	r0, #0
   22aac:	beq	22ac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec3c>
   22ab0:	eor	r8, r8, r9
   22ab4:	movw	r2, #1307	; 0x51b
   22ab8:	movt	r2, #64	; 0x40
   22abc:	and	r2, r8, r2
   22ac0:	cmp	r2, #0
   22ac4:	moveq	fp, r5
   22ac8:	ldr	r5, [r5, #16]
   22acc:	cmp	r5, #0
   22ad0:	bne	22a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xebec>
   22ad4:	cmp	fp, #0
   22ad8:	mov	r5, fp
   22adc:	bne	22e44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefb8>
   22ae0:	ldr	ip, [sp, #28]
   22ae4:	cmp	ip, #17
   22ae8:	beq	22bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed24>
   22aec:	and	r3, r9, #9
   22af0:	cmp	r3, #9
   22af4:	beq	22c10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed84>
   22af8:	ldr	ip, [sp, #12]
   22afc:	movw	r3, #1025	; 0x401
   22b00:	cmp	ip, r3
   22b04:	beq	22c98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee0c>
   22b08:	ldr	ip, [sp, #16]
   22b0c:	ldr	r1, [sp, #20]
   22b10:	cmp	ip, r1
   22b14:	beq	22d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeeb4>
   22b18:	ldr	ip, [sp, #24]
   22b1c:	movw	r3, #257	; 0x101
   22b20:	cmp	ip, r3
   22b24:	beq	22dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef34>
   22b28:	ands	r3, r9, #1
   22b2c:	beq	22e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefd4>
   22b30:	cmp	r4, #0
   22b34:	movne	r5, #0
   22b38:	beq	22e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefac>
   22b3c:	ldr	r2, [r4, #28]
   22b40:	mov	r3, r6
   22b44:	ldr	r8, [r4, #76]	; 0x4c
   22b48:	cmp	r2, #0
   22b4c:	mov	r1, r2
   22b50:	beq	22b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xece8>
   22b54:	cmp	r7, #0
   22b58:	ldr	r8, [r2, #20]
   22b5c:	beq	22b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xece8>
   22b60:	ldr	r0, [sl, #52]	; 0x34
   22b64:	ldr	r2, [r6, #180]	; 0xb4
   22b68:	blx	r7
   22b6c:	cmp	r0, #0
   22b70:	beq	22b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xecf4>
   22b74:	eor	r8, r8, r9
   22b78:	tst	r8, #1
   22b7c:	moveq	r5, r4
   22b80:	ldr	r4, [r4, #16]
   22b84:	cmp	r4, #0
   22b88:	bne	22b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xecb0>
   22b8c:	adds	r3, r5, #0
   22b90:	movne	r3, #1
   22b94:	cmp	r7, #0
   22b98:	movne	r7, r3
   22b9c:	orreq	r7, r3, #1
   22ba0:	ands	r7, r7, #255	; 0xff
   22ba4:	bne	22ea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf018>
   22ba8:	str	r7, [sp, #8]
   22bac:	b	22a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xebd0>
   22bb0:	ldr	r2, [r4, #28]
   22bb4:	mov	r3, r6
   22bb8:	ldr	r8, [r4, #76]	; 0x4c
   22bbc:	cmp	r2, #0
   22bc0:	mov	r1, r2
   22bc4:	beq	22be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed5c>
   22bc8:	cmp	r7, #0
   22bcc:	ldr	r8, [r2, #20]
   22bd0:	beq	22be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed5c>
   22bd4:	ldr	r0, [sl, #52]	; 0x34
   22bd8:	ldr	r2, [r6, #180]	; 0xb4
   22bdc:	blx	r7
   22be0:	cmp	r0, #0
   22be4:	beq	22c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed74>
   22be8:	eor	r8, r8, r9
   22bec:	movw	r2, #1299	; 0x513
   22bf0:	movt	r2, #64	; 0x40
   22bf4:	and	r2, r8, r2
   22bf8:	cmp	r2, #0
   22bfc:	moveq	r5, r4
   22c00:	ldr	r4, [r4, #16]
   22c04:	cmp	r4, #0
   22c08:	bne	22bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed24>
   22c0c:	b	22b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed00>
   22c10:	cmp	r4, #0
   22c14:	beq	22e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefac>
   22c18:	mov	r5, #0
   22c1c:	ldr	r2, [r4, #28]
   22c20:	mov	r3, r6
   22c24:	ldr	r8, [r4, #76]	; 0x4c
   22c28:	cmp	r2, #0
   22c2c:	mov	r1, r2
   22c30:	beq	22c54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedc8>
   22c34:	cmp	r7, #0
   22c38:	ldr	r8, [r2, #20]
   22c3c:	beq	22c54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedc8>
   22c40:	ldr	r0, [sl, #52]	; 0x34
   22c44:	ldr	r2, [r6, #180]	; 0xb4
   22c48:	blx	r7
   22c4c:	cmp	r0, #0
   22c50:	beq	22c88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedfc>
   22c54:	eor	r1, r8, r9
   22c58:	movw	r2, #267	; 0x10b
   22c5c:	movt	r2, #64	; 0x40
   22c60:	movw	r3, #267	; 0x10b
   22c64:	and	r2, r1, r2
   22c68:	and	r3, r1, r3
   22c6c:	cmp	r2, #0
   22c70:	moveq	r5, r4
   22c74:	beq	22c88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedfc>
   22c78:	cmp	r3, #0
   22c7c:	bne	22c88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xedfc>
   22c80:	tst	r8, #4194304	; 0x400000
   22c84:	moveq	r5, r4
   22c88:	ldr	r4, [r4, #16]
   22c8c:	cmp	r4, #0
   22c90:	bne	22c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed90>
   22c94:	b	22b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed00>
   22c98:	cmp	r4, #0
   22c9c:	mov	fp, r4
   22ca0:	beq	22d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee9c>
   22ca4:	orr	r6, r9, #256	; 0x100
   22ca8:	mov	r5, #0
   22cac:	and	r9, r9, #2
   22cb0:	orr	r6, r6, #2
   22cb4:	mov	fp, r5
   22cb8:	b	22ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee54>
   22cbc:	tst	r1, #2
   22cc0:	mov	r5, #1
   22cc4:	bne	22d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeea8>
   22cc8:	cmp	r9, #0
   22ccc:	bne	22d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee9c>
   22cd0:	mov	fp, r4
   22cd4:	ldr	r4, [r4, #16]
   22cd8:	cmp	r4, #0
   22cdc:	beq	22d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee9c>
   22ce0:	ldr	r0, [r4, #28]
   22ce4:	movw	r3, #1025	; 0x401
   22ce8:	ldr	r1, [r4, #76]	; 0x4c
   22cec:	movw	r2, #259	; 0x103
   22cf0:	cmp	r0, #0
   22cf4:	ldrne	r1, [r0, #20]
   22cf8:	eor	r0, r1, r6
   22cfc:	and	r3, r0, r3
   22d00:	and	r2, r0, r2
   22d04:	cmp	r3, #0
   22d08:	beq	22cbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee30>
   22d0c:	cmp	r5, #0
   22d10:	bne	22d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee9c>
   22d14:	cmp	r2, #0
   22d18:	moveq	fp, r4
   22d1c:	ldr	r4, [r4, #16]
   22d20:	cmp	r4, #0
   22d24:	bne	22ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee54>
   22d28:	mov	r0, fp
   22d2c:	add	sp, sp, #36	; 0x24
   22d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d34:	mov	fp, r4
   22d38:	mov	r5, #1
   22d3c:	b	22cd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee48>
   22d40:	cmp	r4, #0
   22d44:	beq	22e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefac>
   22d48:	and	r8, r9, #256	; 0x100
   22d4c:	mov	r5, #0
   22d50:	ldr	r2, [r4, #28]
   22d54:	mov	r3, r6
   22d58:	ldr	fp, [r4, #76]	; 0x4c
   22d5c:	cmp	r2, #0
   22d60:	mov	r1, r2
   22d64:	beq	22d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeefc>
   22d68:	cmp	r7, #0
   22d6c:	ldr	fp, [r2, #20]
   22d70:	beq	22d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeefc>
   22d74:	ldr	r0, [sl, #52]	; 0x34
   22d78:	ldr	r2, [r6, #180]	; 0xb4
   22d7c:	blx	r7
   22d80:	cmp	r0, #0
   22d84:	beq	22db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef24>
   22d88:	eor	r2, fp, r9
   22d8c:	movw	r3, #1283	; 0x503
   22d90:	and	r3, r2, r3
   22d94:	cmp	r3, #0
   22d98:	moveq	r5, r4
   22d9c:	beq	22db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef24>
   22da0:	tst	fp, #4194304	; 0x400000
   22da4:	beq	22db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef24>
   22da8:	cmp	r8, #0
   22dac:	moveq	r5, r4
   22db0:	ldr	r4, [r4, #16]
   22db4:	cmp	r4, #0
   22db8:	bne	22d50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeec4>
   22dbc:	b	22b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed00>
   22dc0:	cmp	r4, #0
   22dc4:	beq	22e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefac>
   22dc8:	mov	r5, #0
   22dcc:	ldr	r2, [r4, #28]
   22dd0:	mov	r3, r6
   22dd4:	ldr	r8, [r4, #76]	; 0x4c
   22dd8:	cmp	r2, #0
   22ddc:	mov	r1, r2
   22de0:	beq	22e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef78>
   22de4:	cmp	r7, #0
   22de8:	ldr	r8, [r2, #20]
   22dec:	beq	22e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef78>
   22df0:	ldr	r0, [sl, #52]	; 0x34
   22df4:	ldr	r2, [r6, #180]	; 0xb4
   22df8:	blx	r7
   22dfc:	cmp	r0, #0
   22e00:	beq	22e1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef90>
   22e04:	eor	r8, r8, r9
   22e08:	movw	r2, #1283	; 0x503
   22e0c:	movt	r2, #64	; 0x40
   22e10:	and	r2, r8, r2
   22e14:	cmp	r2, #0
   22e18:	moveq	r5, r4
   22e1c:	ldr	r4, [r4, #16]
   22e20:	cmp	r4, #0
   22e24:	bne	22dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xef40>
   22e28:	b	22b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed00>
   22e2c:	ldr	ip, [sp, #28]
   22e30:	cmp	ip, #17
   22e34:	bne	22aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xec60>
   22e38:	mov	r5, r4
   22e3c:	mov	r3, r4
   22e40:	b	22b94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xed08>
   22e44:	ldr	ip, [sp, #8]
   22e48:	cmp	ip, #0
   22e4c:	beq	22d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee9c>
   22e50:	mov	r0, fp
   22e54:	str	fp, [ip]
   22e58:	add	sp, sp, #36	; 0x24
   22e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e60:	cmp	r4, #0
   22e64:	mov	fp, r4
   22e68:	movne	fp, r3
   22e6c:	beq	22d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee9c>
   22e70:	ldr	r2, [r4, #28]
   22e74:	ldr	r3, [r4, #76]	; 0x4c
   22e78:	cmp	r2, #0
   22e7c:	ldrne	r3, [r2, #20]
   22e80:	eor	r3, r3, r9
   22e84:	tst	r3, #8192	; 0x2000
   22e88:	moveq	fp, r4
   22e8c:	ldr	r4, [r4, #16]
   22e90:	cmp	r4, #0
   22e94:	bne	22e70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xefe4>
   22e98:	mov	r0, fp
   22e9c:	add	sp, sp, #36	; 0x24
   22ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22ea4:	mov	fp, r5
   22ea8:	b	22d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xee9c>
   22eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22eb0:	movw	r8, #65288	; 0xff08
   22eb4:	movt	r8, #9
   22eb8:	movw	r9, #63248	; 0xf710
   22ebc:	movt	r9, #9
   22ec0:	sub	sp, sp, #124	; 0x7c
   22ec4:	ldr	r5, [r8, #216]	; 0xd8
   22ec8:	movw	r7, #1336	; 0x538
   22ecc:	ldr	r3, [r9]
   22ed0:	movw	r6, #1088	; 0x440
   22ed4:	cmp	r5, #0
   22ed8:	movt	r7, #10
   22edc:	movt	r6, #10
   22ee0:	str	r3, [sp, #116]	; 0x74
   22ee4:	movne	sl, #0
   22ee8:	beq	22fa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf114>
   22eec:	ldr	r3, [r5, #16]
   22ef0:	ldr	r2, [r3, #40]	; 0x28
   22ef4:	ubfx	r2, r2, #5, #20
   22ef8:	tst	r2, #4160	; 0x1040
   22efc:	bne	22f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf108>
   22f00:	ldrb	r2, [r5, #36]	; 0x24
   22f04:	tst	r2, #16
   22f08:	bne	22f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf108>
   22f0c:	ldr	r4, [r3, #100]	; 0x64
   22f10:	cmp	r4, #0
   22f14:	bne	22f34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0a8>
   22f18:	b	22f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf108>
   22f1c:	mov	r0, r4
   22f20:	mov	r1, #1
   22f24:	bl	1eb30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xaca4>
   22f28:	ldr	r4, [r4, #12]
   22f2c:	cmp	r4, #0
   22f30:	beq	22f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf108>
   22f34:	ldr	r3, [r4, #88]	; 0x58
   22f38:	cmp	r3, #0
   22f3c:	beq	22f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf0c4>
   22f40:	ldr	r2, [r3, #180]	; 0xb4
   22f44:	ldr	r3, [r6, #52]	; 0x34
   22f48:	cmp	r2, r3
   22f4c:	beq	22f28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf09c>
   22f50:	ldr	r3, [r4, #20]
   22f54:	tst	r3, #3145728	; 0x300000
   22f58:	bne	22f28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf09c>
   22f5c:	cmp	sl, #0
   22f60:	bne	22f1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf090>
   22f64:	mov	r0, sl
   22f68:	mov	r2, #5
   22f6c:	movw	r1, #12220	; 0x2fbc
   22f70:	movt	r1, #5
   22f74:	ldr	fp, [r7, #80]	; 0x50
   22f78:	bl	13688 <dcgettext@plt>
   22f7c:	mov	sl, #1
   22f80:	mov	r1, sl
   22f84:	mov	r2, r0
   22f88:	mov	r0, fp
   22f8c:	bl	13b74 <__fprintf_chk@plt>
   22f90:	b	22f1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf090>
   22f94:	ldr	r5, [r5, #24]
   22f98:	cmp	r5, #0
   22f9c:	bne	22eec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf060>
   22fa0:	mov	r2, #5
   22fa4:	movw	r1, #12136	; 0x2f68
   22fa8:	mov	r0, #0
   22fac:	movt	r1, #5
   22fb0:	bl	13688 <dcgettext@plt>
   22fb4:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   22fb8:	mov	r2, #5
   22fbc:	movw	r1, #12160	; 0x2f80
   22fc0:	mov	r0, #0
   22fc4:	movt	r1, #5
   22fc8:	ldr	r4, [r7, #80]	; 0x50
   22fcc:	bl	13688 <dcgettext@plt>
   22fd0:	mov	r2, #5
   22fd4:	movw	r1, #12168	; 0x2f88
   22fd8:	movt	r1, #5
   22fdc:	mov	r5, r0
   22fe0:	mov	r0, #0
   22fe4:	bl	13688 <dcgettext@plt>
   22fe8:	mov	r2, #5
   22fec:	movw	r1, #12176	; 0x2f90
   22ff0:	movt	r1, #5
   22ff4:	mov	fp, r0
   22ff8:	mov	r0, #0
   22ffc:	bl	13688 <dcgettext@plt>
   23000:	mov	r2, #5
   23004:	movw	r1, #12184	; 0x2f98
   23008:	movt	r1, #5
   2300c:	mov	sl, r0
   23010:	mov	r0, #0
   23014:	bl	13688 <dcgettext@plt>
   23018:	str	sl, [sp, #4]
   2301c:	str	fp, [sp]
   23020:	mov	r3, r5
   23024:	movw	r2, #12196	; 0x2fa4
   23028:	mov	r1, #1
   2302c:	movt	r2, #5
   23030:	str	r0, [sp, #8]
   23034:	mov	r0, r4
   23038:	bl	13b74 <__fprintf_chk@plt>
   2303c:	ldr	sl, [r8, #212]	; 0xd4
   23040:	cmp	sl, #0
   23044:	beq	2310c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf280>
   23048:	mov	r1, #1
   2304c:	ldr	r3, [sl]
   23050:	movw	r2, #12280	; 0x2ff8
   23054:	ldr	r0, [r7, #80]	; 0x50
   23058:	movt	r2, #5
   2305c:	bl	13b74 <__fprintf_chk@plt>
   23060:	ldrd	r4, [sl, #16]
   23064:	mov	r2, #100	; 0x64
   23068:	mov	r1, #1
   2306c:	movw	r3, #11112	; 0x2b68
   23070:	add	r0, sp, #16
   23074:	movt	r3, #5
   23078:	strd	r4, [sp]
   2307c:	bl	13acc <__sprintf_chk@plt>
   23080:	add	r1, sp, #16
   23084:	movw	r0, #12288	; 0x3000
   23088:	movt	r0, #5
   2308c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   23090:	add	r0, sp, #16
   23094:	bl	13a24 <strlen@plt>
   23098:	cmp	r0, #15
   2309c:	mov	r4, r0
   230a0:	bgt	230b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf228>
   230a4:	add	r4, r4, #1
   230a8:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   230ac:	cmp	r4, #16
   230b0:	bne	230a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf218>
   230b4:	ldrd	r2, [sl, #24]
   230b8:	movw	r0, #10768	; 0x2a10
   230bc:	movt	r0, #5
   230c0:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   230c4:	ldr	r3, [sl, #52]	; 0x34
   230c8:	cmp	r3, #0
   230cc:	beq	230dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf250>
   230d0:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   230d4:	ldr	r0, [sl, #52]	; 0x34
   230d8:	bl	1db48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cbc>
   230dc:	ldr	r3, [sl, #56]	; 0x38
   230e0:	cmp	r3, #0
   230e4:	beq	230fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf270>
   230e8:	movw	r0, #12296	; 0x3008
   230ec:	movt	r0, #5
   230f0:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   230f4:	ldr	r0, [sl, #56]	; 0x38
   230f8:	bl	1db48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9cbc>
   230fc:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   23100:	ldr	sl, [sl, #8]
   23104:	cmp	sl, #0
   23108:	bne	23048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf1bc>
   2310c:	mov	r2, #5
   23110:	movw	r1, #12248	; 0x2fd8
   23114:	mov	r0, #0
   23118:	movt	r1, #5
   2311c:	ldr	r5, [r7, #80]	; 0x50
   23120:	bl	13688 <dcgettext@plt>
   23124:	mov	r1, #1
   23128:	movw	r4, #1088	; 0x440
   2312c:	movt	r4, #10
   23130:	mov	r2, r0
   23134:	mov	r0, r5
   23138:	bl	13b74 <__fprintf_chk@plt>
   2313c:	ldrb	r5, [r6, #4]
   23140:	ubfx	r5, r5, #1, #1
   23144:	cmp	r5, #0
   23148:	bne	23184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf2f8>
   2314c:	mov	r1, #1000	; 0x3e8
   23150:	movw	r2, #13684	; 0x3574
   23154:	movw	r3, #14260	; 0x37b4
   23158:	movt	r2, #1
   2315c:	movt	r3, #1
   23160:	str	r2, [sp]
   23164:	ldr	r0, [pc, #132]	; 231f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf364>
   23168:	mov	r2, r5
   2316c:	bl	136dc <_obstack_begin@plt>
   23170:	movw	r1, #2532	; 0x9e4
   23174:	ldr	r0, [r4, #32]
   23178:	mov	r2, r5
   2317c:	movt	r1, #2
   23180:	bl	13b50 <bfd_link_hash_traverse@plt>
   23184:	ldr	r4, [r8, #132]	; 0x84
   23188:	movw	r3, #1028	; 0x404
   2318c:	ldr	r2, [r8, #232]	; 0xe8
   23190:	movt	r3, #10
   23194:	cmp	r4, #0
   23198:	add	r2, r2, #1
   2319c:	ldr	r5, [r3]
   231a0:	str	r2, [r8, #232]	; 0xe8
   231a4:	beq	231c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf334>
   231a8:	mov	r0, r4
   231ac:	mov	r1, r5
   231b0:	bl	1ee70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafe4>
   231b4:	ldr	r4, [r4]
   231b8:	cmp	r4, #0
   231bc:	bne	231a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf31c>
   231c0:	ldr	r2, [r7, #80]	; 0x50
   231c4:	movw	r1, #1088	; 0x440
   231c8:	ldr	r0, [r6, #52]	; 0x34
   231cc:	movt	r1, #10
   231d0:	bl	2f54c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6c0>
   231d4:	ldr	r2, [sp, #116]	; 0x74
   231d8:	ldr	r3, [r9]
   231dc:	cmp	r2, r3
   231e0:	bne	231ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf360>
   231e4:	add	sp, sp, #124	; 0x7c
   231e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231ec:	bl	13694 <__stack_chk_fail@plt>
   231f0:	andeq	pc, r9, r0, lsr #30
   231f4:	push	{r4, r5, r6, r7, r8, r9, lr}
   231f8:	mov	r5, r1
   231fc:	sub	sp, sp, #12
   23200:	mov	r9, r0
   23204:	movw	r1, #11120	; 0x2b70
   23208:	ldr	r0, [r3, #24]
   2320c:	movt	r1, #5
   23210:	mov	r8, r2
   23214:	mov	r6, r3
   23218:	bl	13490 <strcmp@plt>
   2321c:	movw	r4, #1088	; 0x440
   23220:	movt	r4, #10
   23224:	ldr	r7, [r5, #20]
   23228:	ldrb	r3, [r4, #1]
   2322c:	ldr	r1, [r4, #52]	; 0x34
   23230:	cmp	r0, #0
   23234:	ubfxne	r2, r7, #15, #1
   23238:	moveq	r2, #1
   2323c:	tst	r3, #8
   23240:	beq	2324c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf3c0>
   23244:	tst	r7, #8192	; 0x2000
   23248:	bne	23294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf408>
   2324c:	cmp	r2, #0
   23250:	bne	23294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf408>
   23254:	cmp	r8, #0
   23258:	beq	23280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf3f4>
   2325c:	ldr	r3, [r1, #4]
   23260:	movw	r0, #1088	; 0x440
   23264:	mov	r1, r8
   23268:	mov	r2, r5
   2326c:	movt	r0, #10
   23270:	ldr	r3, [r3, #388]	; 0x184
   23274:	blx	r3
   23278:	cmp	r0, #0
   2327c:	beq	2328c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf400>
   23280:	ldr	r3, [r5, #88]	; 0x58
   23284:	cmp	r3, #0
   23288:	beq	232a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf41c>
   2328c:	add	sp, sp, #12
   23290:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23294:	ldr	r3, [r5, #88]	; 0x58
   23298:	cmp	r3, #0
   2329c:	ldreq	r3, [pc, #432]	; 23454 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf5c8>
   232a0:	streq	r3, [r5, #88]	; 0x58
   232a4:	b	2328c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf400>
   232a8:	ldrb	r3, [r4]
   232ac:	and	r3, r3, #3
   232b0:	cmp	r3, #2
   232b4:	ldr	r3, [r6, #80]	; 0x50
   232b8:	bicne	r7, r7, #917504	; 0xe0000
   232bc:	biceq	r7, r7, #512	; 0x200
   232c0:	bicne	r7, r7, #516	; 0x204
   232c4:	cmp	r3, #2
   232c8:	beq	233fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf570>
   232cc:	cmp	r3, #3
   232d0:	biceq	r7, r7, #1
   232d4:	ldr	r1, [r6, #28]
   232d8:	cmp	r1, #0
   232dc:	beq	23440 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf5b4>
   232e0:	ldrb	ip, [r1, #24]
   232e4:	mvn	r3, r7
   232e8:	ldr	r2, [r1, #20]
   232ec:	and	r3, r3, #8
   232f0:	tst	ip, #4
   232f4:	mvn	r3, r3
   232f8:	and	r3, r3, r2
   232fc:	str	r3, [r1, #20]
   23300:	bne	233bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf530>
   23304:	ldr	r2, [r4, #52]	; 0x34
   23308:	orr	r3, r3, r7
   2330c:	ldr	r0, [r5, #180]	; 0xb4
   23310:	orr	ip, ip, #4
   23314:	str	r3, [r1, #20]
   23318:	mov	r3, r1
   2331c:	ldr	lr, [r2, #4]
   23320:	strb	ip, [r1, #24]
   23324:	mov	r1, r5
   23328:	str	r4, [sp]
   2332c:	ldr	ip, [lr, #176]	; 0xb0
   23330:	blx	ip
   23334:	tst	r7, #8388608	; 0x800000
   23338:	ldrne	r2, [r5, #152]	; 0x98
   2333c:	ldrne	r3, [r6, #28]
   23340:	strne	r2, [r3, #152]	; 0x98
   23344:	tst	r7, #268435456	; 0x10000000
   23348:	bne	23420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf594>
   2334c:	ldr	r3, [r6, #28]
   23350:	ldr	r2, [r5, #92]	; 0x5c
   23354:	ldr	r1, [r3, #92]	; 0x5c
   23358:	cmp	r2, r1
   2335c:	strhi	r2, [r3, #92]	; 0x5c
   23360:	movw	r2, #65288	; 0xff08
   23364:	movt	r2, #9
   23368:	str	r3, [r5, #88]	; 0x58
   2336c:	ldr	r2, [r2, #236]	; 0xec
   23370:	cmp	r2, #0
   23374:	bne	23394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf508>
   23378:	ldr	r1, [r3, #196]	; 0xc4
   2337c:	str	r5, [r3, #196]	; 0xc4
   23380:	cmp	r1, #0
   23384:	str	r2, [r5, #192]	; 0xc0
   23388:	str	r1, [r5, #196]	; 0xc4
   2338c:	strne	r5, [r1, #192]	; 0xc0
   23390:	streq	r5, [r3, #192]	; 0xc0
   23394:	mov	r0, #12
   23398:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2339c:	mov	r3, #5
   233a0:	mov	r2, #0
   233a4:	stm	r0, {r2, r3}
   233a8:	ldr	r3, [r9, #4]
   233ac:	str	r0, [r3]
   233b0:	str	r0, [r9, #4]
   233b4:	str	r5, [r0, #8]
   233b8:	b	2328c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf400>
   233bc:	bic	r2, r7, #8
   233c0:	eor	r0, r3, r2
   233c4:	tst	r0, #25165824	; 0x1800000
   233c8:	bne	233e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf558>
   233cc:	tst	r7, #8388608	; 0x800000
   233d0:	beq	23438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf5ac>
   233d4:	ldr	ip, [r1, #152]	; 0x98
   233d8:	ldr	r0, [r5, #152]	; 0x98
   233dc:	cmp	ip, r0
   233e0:	beq	23438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf5ac>
   233e4:	bic	r7, r7, #25165824	; 0x1800000
   233e8:	bic	r3, r3, #25165824	; 0x1800000
   233ec:	bic	r7, r7, #8
   233f0:	orr	r3, r7, r3
   233f4:	str	r3, [r1, #20]
   233f8:	b	23344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf4b8>
   233fc:	ldr	r3, [r4, #52]	; 0x34
   23400:	ldr	r3, [r3, #4]
   23404:	ldr	r3, [r3, #4]
   23408:	cmp	r3, #5
   2340c:	biceq	r7, r7, #256	; 0x100
   23410:	bicne	r7, r7, #3
   23414:	biceq	r7, r7, #2
   23418:	orr	r7, r7, #512	; 0x200
   2341c:	b	232d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf448>
   23420:	ldr	r0, [r5, #180]	; 0xb4
   23424:	bl	13a60 <bfd_get_arch@plt>
   23428:	cmp	r0, #45	; 0x2d
   2342c:	moveq	r3, #128	; 0x80
   23430:	streq	r3, [r6, #60]	; 0x3c
   23434:	b	2334c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf4c0>
   23438:	mov	r7, r2
   2343c:	b	233f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf564>
   23440:	mov	r1, r7
   23444:	mov	r0, r6
   23448:	bl	22858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9cc>
   2344c:	ldr	r1, [r6, #28]
   23450:	b	232e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf454>
   23454:			; <UNDEFINED> instruction: 0x0009fab8
   23458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2345c:	sub	sp, sp, #52	; 0x34
   23460:	movw	r7, #63248	; 0xf710
   23464:	movt	r7, #9
   23468:	ldr	ip, [sp, #92]	; 0x5c
   2346c:	mov	fp, r0
   23470:	str	r2, [sp, #8]
   23474:	mov	r6, r1
   23478:	ldr	r2, [r7]
   2347c:	ldr	r0, [sp, #8]
   23480:	mov	r1, ip
   23484:	str	ip, [sp, #12]
   23488:	str	r3, [sp, #16]
   2348c:	str	r2, [sp, #44]	; 0x2c
   23490:	ldr	sl, [sp, #88]	; 0x58
   23494:	bl	204e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc654>
   23498:	cmp	r0, #0
   2349c:	beq	234b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf62c>
   234a0:	ldr	r2, [sp, #44]	; 0x2c
   234a4:	ldr	r3, [r7]
   234a8:	cmp	r2, r3
   234ac:	bne	236b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf82c>
   234b0:	add	sp, sp, #52	; 0x34
   234b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   234b8:	ldr	r3, [fp, #12]
   234bc:	add	r5, fp, #24
   234c0:	cmp	r3, #0
   234c4:	beq	2368c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf800>
   234c8:	ldr	r4, [fp, #24]
   234cc:	cmp	r4, #0
   234d0:	beq	23674 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7e8>
   234d4:	ldr	ip, [sp, #8]
   234d8:	str	r5, [sp, #24]
   234dc:	add	ip, ip, #92	; 0x5c
   234e0:	str	r7, [sp, #28]
   234e4:	str	ip, [sp, #20]
   234e8:	b	234f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf66c>
   234ec:	ldr	r4, [r4]
   234f0:	cmp	r4, #0
   234f4:	beq	2366c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7e0>
   234f8:	ldr	r3, [r4, #4]
   234fc:	cmp	r3, #5
   23500:	bne	234ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf660>
   23504:	ldr	r3, [fp, #12]
   23508:	cmp	r3, #0
   2350c:	beq	2359c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf710>
   23510:	ldr	r3, [sl, #16]
   23514:	cmp	r3, #0
   23518:	beq	23660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7d4>
   2351c:	ldr	r3, [r3, #148]	; 0x94
   23520:	cmp	r3, #0
   23524:	beq	23660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7d4>
   23528:	ldr	r7, [r3]
   2352c:	mov	r9, #1
   23530:	ldr	r3, [r4, #8]
   23534:	mov	r0, r7
   23538:	ldr	r3, [r3, #180]	; 0xb4
   2353c:	ldr	r8, [r3, #148]	; 0x94
   23540:	cmp	r8, #0
   23544:	ldrne	r5, [r8]
   23548:	movne	r8, #1
   2354c:	ldreq	r5, [r3]
   23550:	mov	r1, r5
   23554:	bl	135a4 <filename_cmp@plt>
   23558:	cmp	r0, #0
   2355c:	bgt	234ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf660>
   23560:	bne	235d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf74c>
   23564:	orrs	r3, r8, r9
   23568:	beq	2359c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf710>
   2356c:	cmp	r9, #0
   23570:	ldrne	r7, [sl, #8]
   23574:	cmp	r8, #0
   23578:	ldrne	r3, [r4, #8]
   2357c:	mov	r0, r7
   23580:	ldrne	r3, [r3, #180]	; 0xb4
   23584:	ldrne	r5, [r3]
   23588:	mov	r1, r5
   2358c:	bl	135a4 <filename_cmp@plt>
   23590:	cmp	r0, #0
   23594:	bgt	234ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf660>
   23598:	bne	235d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf74c>
   2359c:	cmp	r6, #0
   235a0:	beq	234ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf660>
   235a4:	ldr	r0, [r6, #12]
   235a8:	cmp	r0, #0
   235ac:	beq	234ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf660>
   235b0:	cmp	r0, #5
   235b4:	beq	234ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf660>
   235b8:	ldr	r3, [r4, #8]
   235bc:	ldr	r1, [sp, #8]
   235c0:	add	lr, r3, #92	; 0x5c
   235c4:	ldr	r2, [sp, #20]
   235c8:	str	lr, [sp]
   235cc:	bl	206d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc844>
   235d0:	cmp	r0, #0
   235d4:	bge	234ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf660>
   235d8:	add	lr, sp, #48	; 0x30
   235dc:	ldr	r3, [sp, #12]
   235e0:	mov	r0, #0
   235e4:	ldr	r1, [sp, #8]
   235e8:	str	r0, [lr, #-12]!
   235ec:	mov	r0, lr
   235f0:	ldr	r2, [sp, #16]
   235f4:	ldr	r5, [sp, #24]
   235f8:	ldr	r7, [sp, #28]
   235fc:	str	lr, [sp, #40]	; 0x28
   23600:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   23604:	ldr	r3, [sp, #36]	; 0x24
   23608:	cmp	r3, #0
   2360c:	beq	234a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf614>
   23610:	ldr	r3, [r3]
   23614:	cmp	r3, #0
   23618:	beq	2362c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7a0>
   2361c:	movw	r0, #10132	; 0x2794
   23620:	movw	r1, #2601	; 0xa29
   23624:	movt	r0, #5
   23628:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2362c:	ldr	r3, [fp, #24]
   23630:	cmp	r4, r3
   23634:	beq	23650 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7c4>
   23638:	cmp	r3, #0
   2363c:	beq	236a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf818>
   23640:	ldr	r5, [r5]
   23644:	ldr	r3, [r5]
   23648:	cmp	r3, r4
   2364c:	bne	23638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7ac>
   23650:	ldr	r2, [sp, #36]	; 0x24
   23654:	str	r3, [r2]
   23658:	str	r2, [r5]
   2365c:	b	234a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf614>
   23660:	ldr	r7, [sl, #8]
   23664:	mov	r9, #0
   23668:	b	23530 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf6a4>
   2366c:	ldr	r5, [sp, #24]
   23670:	ldr	r7, [sp, #28]
   23674:	mov	r0, r5
   23678:	ldr	r1, [sp, #8]
   2367c:	ldr	r2, [sp, #16]
   23680:	ldr	r3, [sp, #12]
   23684:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   23688:	b	234a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf614>
   2368c:	cmp	r6, #0
   23690:	beq	23674 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7e8>
   23694:	ldr	r3, [r6, #12]
   23698:	cmp	r3, #0
   2369c:	bne	234c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf63c>
   236a0:	b	23674 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7e8>
   236a4:	movw	r0, #10132	; 0x2794
   236a8:	movw	r1, #2606	; 0xa2e
   236ac:	movt	r0, #5
   236b0:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   236b4:	b	23640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf7b4>
   236b8:	bl	13694 <__stack_chk_fail@plt>
   236bc:	push	{r4, r5, r6, lr}
   236c0:	mov	r4, r1
   236c4:	ldr	r1, [r1, #4]
   236c8:	mov	r6, r0
   236cc:	mov	r5, r2
   236d0:	cmp	r1, #0
   236d4:	beq	236dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf850>
   236d8:	bl	236bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf830>
   236dc:	ldr	r1, [r4]
   236e0:	add	r0, r6, #24
   236e4:	mov	r2, #0
   236e8:	mov	r3, r5
   236ec:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   236f0:	ldr	r1, [r4, #8]
   236f4:	cmp	r1, #0
   236f8:	beq	23708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf87c>
   236fc:	mov	r0, r6
   23700:	mov	r2, r5
   23704:	bl	236bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf830>
   23708:	mov	r0, r4
   2370c:	pop	{r4, r5, r6, lr}
   23710:	b	13574 <free@plt>
   23714:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23718:	mov	r5, r0
   2371c:	ldrb	r3, [r0]
   23720:	cmp	r3, #0
   23724:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23728:	movw	r7, #65288	; 0xff08
   2372c:	movt	r7, #9
   23730:	mov	r8, #0
   23734:	cmp	r3, #0
   23738:	beq	23778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8ec>
   2373c:	cmp	r3, #44	; 0x2c
   23740:	beq	237ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf960>
   23744:	cmp	r3, #58	; 0x3a
   23748:	beq	237ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf960>
   2374c:	add	r2, r5, #1
   23750:	b	23764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8d8>
   23754:	cmp	r3, #44	; 0x2c
   23758:	beq	237e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf954>
   2375c:	cmp	r3, #58	; 0x3a
   23760:	beq	237e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf954>
   23764:	mov	r4, r2
   23768:	add	r2, r2, #1
   2376c:	ldrb	r3, [r4]
   23770:	cmp	r3, #0
   23774:	bne	23754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8c8>
   23778:	mov	r0, r5
   2377c:	bl	13a24 <strlen@plt>
   23780:	add	r4, r5, r0
   23784:	rsb	r9, r5, r4
   23788:	add	sl, r9, #1
   2378c:	mov	r0, #8
   23790:	bl	137b4 <xmalloc@plt>
   23794:	ldr	r3, [r7, #240]	; 0xf0
   23798:	mov	r6, r0
   2379c:	mov	r0, sl
   237a0:	str	r3, [r6, #4]
   237a4:	bl	137b4 <xmalloc@plt>
   237a8:	mov	r1, r5
   237ac:	mov	r2, r9
   237b0:	str	r0, [r6]
   237b4:	bl	135c8 <memcpy@plt>
   237b8:	str	r6, [r7, #240]	; 0xf0
   237bc:	strb	r8, [r0, r9]
   237c0:	ldrb	r3, [r4]
   237c4:	cmp	r3, #0
   237c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   237cc:	ldrb	r3, [r4, #1]
   237d0:	add	r5, r4, #1
   237d4:	cmp	r3, #0
   237d8:	bne	23734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf8a8>
   237dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   237e0:	rsb	r9, r5, r4
   237e4:	add	sl, r9, #1
   237e8:	b	2378c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf900>
   237ec:	mov	r4, r5
   237f0:	mov	r9, #0
   237f4:	mov	sl, #1
   237f8:	b	2378c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf900>
   237fc:	push	{r3, r4, r5, lr}
   23800:	movw	r3, #1044	; 0x414
   23804:	movt	r3, #10
   23808:	ldr	r0, [r3]
   2380c:	cmp	r0, #0
   23810:	popne	{r3, r4, r5, pc}
   23814:	movw	r3, #65288	; 0xff08
   23818:	movw	r5, #1456	; 0x5b0
   2381c:	movt	r3, #9
   23820:	movt	r5, #10
   23824:	ldr	r0, [r3, #244]	; 0xf4
   23828:	ldr	r2, [r5]
   2382c:	cmp	r0, r2
   23830:	beq	2383c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9b0>
   23834:	cmp	r0, #0
   23838:	popne	{r3, r4, r5, pc}
   2383c:	ldr	r4, [r3, #216]	; 0xd8
   23840:	cmp	r4, #0
   23844:	bne	23858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9cc>
   23848:	b	238b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa28>
   2384c:	ldr	r4, [r4, #24]
   23850:	cmp	r4, #0
   23854:	beq	238ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa20>
   23858:	ldr	r3, [r4, #4]
   2385c:	cmp	r3, #2
   23860:	bne	2384c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9c0>
   23864:	ldrb	r3, [r4, #37]	; 0x25
   23868:	tst	r3, #4
   2386c:	beq	2384c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9c0>
   23870:	mov	r0, r4
   23874:	bl	30f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d084>
   23878:	ldr	r0, [r4, #16]
   2387c:	mov	r1, #1
   23880:	cmp	r0, #0
   23884:	beq	2384c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9c0>
   23888:	bl	13d48 <bfd_check_format@plt>
   2388c:	cmp	r0, #0
   23890:	beq	2384c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9c0>
   23894:	ldr	r3, [r4, #16]
   23898:	ldr	r3, [r3, #4]
   2389c:	ldr	r0, [r3]
   238a0:	cmp	r0, #0
   238a4:	beq	2384c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf9c0>
   238a8:	pop	{r3, r4, r5, pc}
   238ac:	ldr	r0, [r5]
   238b0:	pop	{r3, r4, r5, pc}
   238b4:	mov	r0, r2
   238b8:	pop	{r3, r4, r5, pc}
   238bc:	push	{r4, r5, r6, r7, r8, lr}
   238c0:	mov	r5, r0
   238c4:	ldr	r3, [r0, #4]
   238c8:	cmp	r3, #10
   238cc:	beq	23a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfbf8>
   238d0:	cmp	r3, #11
   238d4:	popne	{r4, r5, r6, r7, r8, pc}
   238d8:	movw	r4, #1088	; 0x440
   238dc:	movt	r4, #10
   238e0:	ldr	r3, [r4, #52]	; 0x34
   238e4:	cmp	r3, #0
   238e8:	beq	238fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfa70>
   238ec:	movw	r0, #10132	; 0x2794
   238f0:	movw	r1, #3194	; 0xc7a
   238f4:	movt	r0, #5
   238f8:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   238fc:	ldr	r8, [r5, #8]
   23900:	bl	237fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf970>
   23904:	movw	r6, #1244	; 0x4dc
   23908:	movt	r6, #10
   2390c:	movw	r5, #1044	; 0x414
   23910:	movt	r5, #10
   23914:	ldr	r3, [r6, #44]	; 0x2c
   23918:	cmp	r3, #0
   2391c:	mov	r1, r0
   23920:	str	r0, [r5]
   23924:	bne	23ad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc44>
   23928:	movw	r6, #65288	; 0xff08
   2392c:	movt	r6, #9
   23930:	mov	r0, r8
   23934:	bl	13b98 <bfd_openw@plt>
   23938:	cmp	r0, #0
   2393c:	mov	r7, r0
   23940:	str	r0, [r4, #52]	; 0x34
   23944:	beq	23b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcf4>
   23948:	mov	r3, #1
   2394c:	mov	r0, r7
   23950:	mov	r1, r3
   23954:	str	r3, [r6, #248]	; 0xf8
   23958:	bl	139a0 <bfd_set_format@plt>
   2395c:	cmp	r0, #0
   23960:	beq	23ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc28>
   23964:	ldr	r0, [r4, #52]	; 0x34
   23968:	movw	r2, #1612	; 0x64c
   2396c:	movw	r3, #1616	; 0x650
   23970:	movt	r2, #10
   23974:	movt	r3, #10
   23978:	ldr	ip, [r0, #4]
   2397c:	ldr	r1, [r2]
   23980:	ldr	r2, [r3]
   23984:	ldr	r3, [ip, #336]	; 0x150
   23988:	blx	r3
   2398c:	cmp	r0, #0
   23990:	beq	23a98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc0c>
   23994:	ldr	r0, [r4, #52]	; 0x34
   23998:	ldr	r3, [r0, #4]
   2399c:	ldr	r3, [r3, #356]	; 0x164
   239a0:	blx	r3
   239a4:	cmp	r0, #0
   239a8:	str	r0, [r4, #32]
   239ac:	beq	23b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcdc>
   239b0:	movw	r3, #62500	; 0xf424
   239b4:	movt	r3, #9
   239b8:	ldr	r0, [r4, #52]	; 0x34
   239bc:	movw	r5, #1088	; 0x440
   239c0:	ldr	r1, [r3]
   239c4:	movt	r5, #10
   239c8:	bl	13b8c <bfd_set_gp_size@plt>
   239cc:	bl	2ef7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0f0>
   239d0:	movw	r2, #1336	; 0x538
   239d4:	movt	r2, #10
   239d8:	ldr	r3, [r2]
   239dc:	cmp	r3, #0
   239e0:	beq	23a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb84>
   239e4:	ldrb	r3, [r5]
   239e8:	and	r3, r3, #3
   239ec:	cmp	r3, #2
   239f0:	beq	23a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb84>
   239f4:	ldr	r3, [r5, #52]	; 0x34
   239f8:	ldr	r0, [r3, #40]	; 0x28
   239fc:	ubfx	r1, r0, #5, #20
   23a00:	orr	r1, r1, #256	; 0x100
   23a04:	bfi	r0, r1, #5, #20
   23a08:	str	r0, [r3, #40]	; 0x28
   23a0c:	b	23a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfba4>
   23a10:	ldr	r3, [r4, #52]	; 0x34
   23a14:	movw	r1, #65279	; 0xfeff
   23a18:	movt	r1, #15
   23a1c:	ldr	r0, [r3, #40]	; 0x28
   23a20:	ubfx	ip, r0, #5, #20
   23a24:	and	r1, ip, r1
   23a28:	bfi	r0, r1, #5, #20
   23a2c:	str	r0, [r3, #40]	; 0x28
   23a30:	ldr	r2, [r2, #48]	; 0x30
   23a34:	cmp	r2, #0
   23a38:	orrne	r2, r1, #128	; 0x80
   23a3c:	movweq	r2, #65407	; 0xff7f
   23a40:	ldrne	r0, [r3, #40]	; 0x28
   23a44:	movteq	r2, #15
   23a48:	ldreq	r0, [r3, #40]	; 0x28
   23a4c:	andeq	r2, r1, r2
   23a50:	bfi	r0, r2, #5, #20
   23a54:	str	r0, [r3, #40]	; 0x28
   23a58:	mov	r1, r0
   23a5c:	ldrb	r0, [r4, #4]
   23a60:	tst	r0, #4
   23a64:	orrne	r2, r2, #1024	; 0x400
   23a68:	movweq	r0, #64511	; 0xfbff
   23a6c:	movteq	r0, #15
   23a70:	andeq	r0, r2, r0
   23a74:	bfine	r1, r2, #5, #20
   23a78:	bfieq	r1, r0, #5, #20
   23a7c:	str	r1, [r3, #40]	; 0x28
   23a80:	pop	{r4, r5, r6, r7, r8, pc}
   23a84:	ldr	r2, [r0, #8]
   23a88:	movw	r3, #65288	; 0xff08
   23a8c:	movt	r3, #9
   23a90:	str	r2, [r3, #244]	; 0xf4
   23a94:	pop	{r4, r5, r6, r7, r8, pc}
   23a98:	mov	r2, #5
   23a9c:	movw	r1, #12484	; 0x30c4
   23aa0:	movt	r1, #5
   23aa4:	bl	13688 <dcgettext@plt>
   23aa8:	mov	r1, r8
   23aac:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   23ab0:	b	23994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb08>
   23ab4:	mov	r2, #5
   23ab8:	movw	r1, #12444	; 0x309c
   23abc:	movt	r1, #5
   23ac0:	bl	13688 <dcgettext@plt>
   23ac4:	mov	r1, r8
   23ac8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   23acc:	b	23964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfad8>
   23ad0:	movw	r0, #55756	; 0xd9cc
   23ad4:	movt	r0, #1
   23ad8:	bl	13424 <bfd_search_for_target@plt>
   23adc:	subs	r1, r0, #0
   23ae0:	beq	23b58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfccc>
   23ae4:	ldr	r3, [r6, #44]	; 0x2c
   23ae8:	ldr	r2, [r1, #8]
   23aec:	subs	r3, r3, #1
   23af0:	movne	r3, #1
   23af4:	cmp	r2, r3
   23af8:	beq	23b58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfccc>
   23afc:	ldr	r2, [r1, #432]	; 0x1b0
   23b00:	cmp	r2, #0
   23b04:	beq	23b14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfc88>
   23b08:	ldr	r0, [r2, #8]
   23b0c:	cmp	r0, r3
   23b10:	beq	23b44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfcb8>
   23b14:	movw	r6, #65288	; 0xff08
   23b18:	movt	r6, #9
   23b1c:	movw	r0, #63800	; 0xf938
   23b20:	movt	r0, #1
   23b24:	bl	13424 <bfd_search_for_target@plt>
   23b28:	ldr	r0, [r6, #68]	; 0x44
   23b2c:	cmp	r0, #0
   23b30:	beq	23bd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd44>
   23b34:	ldr	r3, [r0]
   23b38:	mov	r1, r3
   23b3c:	str	r3, [r5]
   23b40:	b	23930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaa4>
   23b44:	ldr	r1, [r2]
   23b48:	movw	r6, #65288	; 0xff08
   23b4c:	movt	r6, #9
   23b50:	str	r1, [r5]
   23b54:	b	23930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaa4>
   23b58:	movw	r6, #65288	; 0xff08
   23b5c:	ldr	r1, [r5]
   23b60:	movt	r6, #9
   23b64:	b	23930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaa4>
   23b68:	mov	r2, #5
   23b6c:	movw	r1, #11988	; 0x2ed4
   23b70:	movt	r1, #5
   23b74:	bl	13688 <dcgettext@plt>
   23b78:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   23b7c:	b	239b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfb24>
   23b80:	bl	13784 <bfd_get_error@plt>
   23b84:	cmp	r0, #2
   23b88:	beq	23bb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd24>
   23b8c:	mov	r2, #5
   23b90:	movw	r1, #12404	; 0x3074
   23b94:	mov	r0, #0
   23b98:	movt	r1, #5
   23b9c:	bl	13688 <dcgettext@plt>
   23ba0:	mov	r1, r8
   23ba4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   23ba8:	ldr	r7, [r4, #52]	; 0x34
   23bac:	b	23948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfabc>
   23bb0:	mov	r0, r7
   23bb4:	mov	r2, #5
   23bb8:	movw	r1, #12376	; 0x3058
   23bbc:	movt	r1, #5
   23bc0:	bl	13688 <dcgettext@plt>
   23bc4:	ldr	r1, [r5]
   23bc8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   23bcc:	b	23b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd00>
   23bd0:	mov	r2, #5
   23bd4:	movw	r1, #12300	; 0x300c
   23bd8:	movt	r1, #5
   23bdc:	bl	13688 <dcgettext@plt>
   23be0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   23be4:	ldr	r1, [r5]
   23be8:	b	23930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfaa4>
   23bec:	push	{r3, r4, r5, lr}
   23bf0:	movw	r3, #1008	; 0x3f0
   23bf4:	movt	r3, #10
   23bf8:	mov	r5, r0
   23bfc:	mov	r0, #8
   23c00:	ldr	r2, [r3]
   23c04:	orrs	r2, r1, r2
   23c08:	moveq	r2, #0
   23c0c:	movne	r2, #1
   23c10:	str	r2, [r3]
   23c14:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   23c18:	movw	r3, #65288	; 0xff08
   23c1c:	movt	r3, #9
   23c20:	ldr	r2, [r3, #252]	; 0xfc
   23c24:	mov	r4, r0
   23c28:	mov	r0, r5
   23c2c:	str	r2, [r4]
   23c30:	str	r4, [r3, #252]	; 0xfc
   23c34:	bl	137e4 <xstrdup@plt>
   23c38:	movw	r3, #1088	; 0x440
   23c3c:	movt	r3, #10
   23c40:	ldr	r3, [r3, #52]	; 0x34
   23c44:	cmp	r3, #0
   23c48:	str	r0, [r4, #4]
   23c4c:	popeq	{r3, r4, r5, pc}
   23c50:	pop	{r3, r4, r5, lr}
   23c54:	b	1e0d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa24c>
   23c58:	push	{r4, r5, r6, lr}
   23c5c:	mov	r1, #1
   23c60:	mov	r6, r0
   23c64:	bl	23bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd60>
   23c68:	mov	r0, #8
   23c6c:	movw	r4, #65288	; 0xff08
   23c70:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   23c74:	movt	r4, #9
   23c78:	ldr	r3, [r4, #260]	; 0x104
   23c7c:	mov	r5, r0
   23c80:	mov	r0, r6
   23c84:	str	r3, [r5, #4]
   23c88:	bl	13ae4 <__strdup@plt>
   23c8c:	str	r5, [r4, #260]	; 0x104
   23c90:	str	r0, [r5]
   23c94:	pop	{r4, r5, r6, pc}
   23c98:	movw	r0, #65288	; 0xff08
   23c9c:	movt	r0, #9
   23ca0:	ldr	r1, [r0, #236]	; 0xec
   23ca4:	cmp	r1, #0
   23ca8:	bxne	lr
   23cac:	movw	r3, #1048	; 0x418
   23cb0:	movt	r3, #10
   23cb4:	ldr	r3, [r3]
   23cb8:	cmp	r3, #0
   23cbc:	beq	23ce8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfe5c>
   23cc0:	ldr	r2, [r3, #72]	; 0x48
   23cc4:	cmp	r2, #0
   23cc8:	blt	23cdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfe50>
   23ccc:	ldr	r2, [r3, #28]
   23cd0:	cmp	r2, #0
   23cd4:	strne	r1, [r2, #192]	; 0xc0
   23cd8:	strne	r1, [r2, #196]	; 0xc4
   23cdc:	ldr	r3, [r3, #16]
   23ce0:	cmp	r3, #0
   23ce4:	bne	23cc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfe34>
   23ce8:	mov	r3, #1
   23cec:	str	r3, [r0, #236]	; 0xec
   23cf0:	bx	lr
   23cf4:	movw	r3, #63776	; 0xf920
   23cf8:	movt	r3, #9
   23cfc:	push	{r4, r5, r6, r7, r8, lr}
   23d00:	cmp	r1, #0
   23d04:	ldr	r3, [r3]
   23d08:	movw	r7, #1336	; 0x538
   23d0c:	movt	r7, #10
   23d10:	mov	r4, r0
   23d14:	ldr	r8, [r7, #80]	; 0x50
   23d18:	str	r3, [r7, #80]	; 0x50
   23d1c:	blt	23d68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfedc>
   23d20:	cmp	r0, #0
   23d24:	beq	23d60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfed4>
   23d28:	subs	r5, r1, #1
   23d2c:	movwcs	r6, #1028	; 0x404
   23d30:	movtcs	r6, #10
   23d34:	bcs	23d44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfeb8>
   23d38:	b	23d60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfed4>
   23d3c:	cmn	r5, #1
   23d40:	beq	23d60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfed4>
   23d44:	mov	r0, r4
   23d48:	ldr	r1, [r6]
   23d4c:	bl	1ee70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafe4>
   23d50:	ldr	r4, [r4]
   23d54:	sub	r5, r5, #1
   23d58:	cmp	r4, #0
   23d5c:	bne	23d3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfeb0>
   23d60:	str	r8, [r7, #80]	; 0x50
   23d64:	pop	{r4, r5, r6, r7, r8, pc}
   23d68:	movw	r3, #1028	; 0x404
   23d6c:	cmp	r0, #0
   23d70:	movt	r3, #10
   23d74:	ldr	r5, [r3]
   23d78:	beq	23d60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfed4>
   23d7c:	mov	r0, r4
   23d80:	mov	r1, r5
   23d84:	bl	1ee70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xafe4>
   23d88:	ldr	r4, [r4]
   23d8c:	cmp	r4, #0
   23d90:	bne	23d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfef0>
   23d94:	str	r8, [r7, #80]	; 0x50
   23d98:	pop	{r4, r5, r6, r7, r8, pc}
   23d9c:	push	{r3, r4, r5, lr}
   23da0:	mov	r4, r3
   23da4:	ldr	r1, [sp, #16]
   23da8:	cmp	r1, #0
   23dac:	bne	23e30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffa4>
   23db0:	cmp	r3, #0
   23db4:	cmpne	r2, #0
   23db8:	beq	23e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff9c>
   23dbc:	movw	r3, #1336	; 0x538
   23dc0:	movt	r3, #10
   23dc4:	ldr	r3, [r3, #68]	; 0x44
   23dc8:	cmp	r3, #0
   23dcc:	beq	23de4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff58>
   23dd0:	ldr	r1, [r4, #20]
   23dd4:	ldr	r3, [r2, #20]
   23dd8:	eor	r3, r1, r3
   23ddc:	tst	r3, #16
   23de0:	bne	23e30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffa4>
   23de4:	mov	r1, #0
   23de8:	ldr	r0, [r2]
   23dec:	mov	r2, r1
   23df0:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   23df4:	mov	r1, #0
   23df8:	mov	r2, r1
   23dfc:	mov	r5, r0
   23e00:	ldr	r0, [r4]
   23e04:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   23e08:	cmp	r5, #0
   23e0c:	cmpne	r0, #0
   23e10:	beq	23e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xff9c>
   23e14:	ldr	r2, [r5, #32]
   23e18:	ldr	r3, [r0, #32]
   23e1c:	subs	r0, r2, r3
   23e20:	movne	r0, #1
   23e24:	pop	{r3, r4, r5, pc}
   23e28:	mov	r0, #0
   23e2c:	pop	{r3, r4, r5, pc}
   23e30:	mov	r0, #1
   23e34:	pop	{r3, r4, r5, pc}
   23e38:	movw	r2, #1028	; 0x404
   23e3c:	movt	r2, #10
   23e40:	movw	r3, #65288	; 0xff08
   23e44:	movt	r3, #9
   23e48:	push	{r4, r5, lr}
   23e4c:	sub	sp, sp, #20
   23e50:	ldr	lr, [r2]
   23e54:	mov	r4, #0
   23e58:	ldr	ip, [r3, #232]	; 0xe8
   23e5c:	mov	r5, #0
   23e60:	str	r0, [sp, #8]
   23e64:	mov	r2, #0
   23e68:	str	r1, [sp, #12]
   23e6c:	add	ip, ip, #1
   23e70:	strd	r4, [sp]
   23e74:	add	r0, r3, #132	; 0x84
   23e78:	mov	r1, lr
   23e7c:	str	ip, [r3, #232]	; 0xe8
   23e80:	bl	211c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd33c>
   23e84:	add	sp, sp, #20
   23e88:	pop	{r4, r5, pc}
   23e8c:	movw	r3, #65288	; 0xff08
   23e90:	movt	r3, #9
   23e94:	push	{r4, r5, r6, r7, r8, lr}
   23e98:	movw	r6, #63248	; 0xf710
   23e9c:	movt	r6, #9
   23ea0:	sub	sp, sp, #24
   23ea4:	ldr	r4, [r3, #132]	; 0x84
   23ea8:	add	lr, sp, #24
   23eac:	ldr	r8, [r3, #232]	; 0xe8
   23eb0:	movw	r1, #1028	; 0x404
   23eb4:	ldr	r7, [r6]
   23eb8:	movt	r1, #10
   23ebc:	movw	r2, #1480	; 0x5c8
   23ec0:	movt	r2, #10
   23ec4:	mov	ip, #0
   23ec8:	ldr	r1, [r1]
   23ecc:	str	r0, [r2]
   23ed0:	mov	r5, #0
   23ed4:	str	ip, [lr, #-8]!
   23ed8:	mov	r0, r4
   23edc:	str	lr, [sp, #8]
   23ee0:	mov	r2, ip
   23ee4:	add	lr, r8, #1
   23ee8:	mov	r4, #0
   23eec:	strd	r4, [sp]
   23ef0:	str	lr, [r3, #232]	; 0xe8
   23ef4:	str	ip, [r3]
   23ef8:	str	ip, [r3, #4]
   23efc:	str	r7, [sp, #20]
   23f00:	bl	1dbd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9d44>
   23f04:	ldr	r2, [sp, #20]
   23f08:	ldr	r3, [r6]
   23f0c:	cmp	r2, r3
   23f10:	bne	23f1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10090>
   23f14:	add	sp, sp, #24
   23f18:	pop	{r4, r5, r6, r7, r8, pc}
   23f1c:	bl	13694 <__stack_chk_fail@plt>
   23f20:	movw	r3, #65288	; 0xff08
   23f24:	movt	r3, #9
   23f28:	push	{r4}		; (str r4, [sp, #-4]!)
   23f2c:	ldr	r0, [r3]
   23f30:	cmp	r0, #0
   23f34:	beq	23f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x100b8>
   23f38:	ldr	r2, [r3, #4]
   23f3c:	cmp	r2, #0
   23f40:	beq	24050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101c4>
   23f44:	ldr	r3, [r3, #12]
   23f48:	cmp	r3, #0
   23f4c:	bne	23f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x100d4>
   23f50:	b	23f6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x100e0>
   23f54:	ldr	r3, [r3]
   23f58:	cmp	r3, #0
   23f5c:	beq	23f6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x100e0>
   23f60:	ldr	r2, [r3, #4]
   23f64:	cmp	r2, #0
   23f68:	bne	23f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x100c8>
   23f6c:	cmp	r3, #0
   23f70:	movweq	ip, #1088	; 0x440
   23f74:	movteq	ip, #10
   23f78:	beq	2410c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10280>
   23f7c:	ldrb	r2, [r3, #84]	; 0x54
   23f80:	tst	r2, #32
   23f84:	bne	23fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10160>
   23f88:	movw	ip, #1088	; 0x440
   23f8c:	movt	ip, #10
   23f90:	ldr	r4, [ip, #52]	; 0x34
   23f94:	b	23fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10130>
   23f98:	ldr	r1, [r1, #16]
   23f9c:	cmp	r2, r1
   23fa0:	beq	23fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10160>
   23fa4:	ldr	r3, [r3, #16]
   23fa8:	cmp	r3, #0
   23fac:	beq	2410c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10280>
   23fb0:	ldrb	r2, [r3, #84]	; 0x54
   23fb4:	tst	r2, #32
   23fb8:	bne	23fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10160>
   23fbc:	ldr	r2, [r3, #28]
   23fc0:	cmp	r2, #0
   23fc4:	beq	23fa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10118>
   23fc8:	ldr	r1, [r2, #20]
   23fcc:	tst	r1, #32768	; 0x8000
   23fd0:	bne	23fa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10118>
   23fd4:	ldr	r1, [r2, #12]
   23fd8:	cmp	r1, #0
   23fdc:	bne	23f98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1010c>
   23fe0:	ldr	r1, [r4, #104]	; 0x68
   23fe4:	cmp	r2, r1
   23fe8:	bne	23fa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10118>
   23fec:	cmp	r0, #0
   23ff0:	beq	24000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10174>
   23ff4:	ldrb	r2, [r3, #84]	; 0x54
   23ff8:	tst	r2, #32
   23ffc:	bne	24050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101c4>
   24000:	ldr	r0, [r3, #28]
   24004:	cmp	r0, #0
   24008:	beq	24044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101b8>
   2400c:	ldr	r2, [r0, #20]
   24010:	movw	r3, #1025	; 0x401
   24014:	and	r3, r2, r3
   24018:	cmp	r3, #1
   2401c:	bne	24034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101a8>
   24020:	b	24048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101bc>
   24024:	ldr	r2, [r0, #20]
   24028:	and	r3, r2, r3
   2402c:	cmp	r3, #1
   24030:	beq	24048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101bc>
   24034:	ldr	r0, [r0, #16]
   24038:	movw	r3, #1025	; 0x401
   2403c:	cmp	r0, #0
   24040:	bne	24024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10198>
   24044:	ldr	r0, [pc, #204]	; 24118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1028c>
   24048:	pop	{r4}		; (ldr r4, [sp], #4)
   2404c:	bx	lr
   24050:	ldr	r0, [r0, #28]
   24054:	movw	ip, #1088	; 0x440
   24058:	movt	ip, #10
   2405c:	cmp	r0, #0
   24060:	ldrne	r1, [ip, #52]	; 0x34
   24064:	bne	24078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101ec>
   24068:	b	240f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1026c>
   2406c:	ldr	r0, [r0, #16]
   24070:	cmp	r0, #0
   24074:	beq	240f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1026c>
   24078:	ldr	r2, [r0, #20]
   2407c:	movw	r3, #33793	; 0x8401
   24080:	and	r3, r2, r3
   24084:	cmp	r3, #1
   24088:	bne	2406c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101e0>
   2408c:	ldr	r3, [r0, #12]
   24090:	cmp	r3, #0
   24094:	beq	240e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10254>
   24098:	ldr	r3, [r3, #16]
   2409c:	cmp	r3, r0
   240a0:	bne	2406c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101e0>
   240a4:	ldr	r2, [r0, #20]
   240a8:	movw	r3, #1025	; 0x401
   240ac:	and	r3, r2, r3
   240b0:	cmp	r3, #1
   240b4:	bne	240cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10240>
   240b8:	b	24048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101bc>
   240bc:	ldr	r2, [r0, #20]
   240c0:	and	r3, r2, r3
   240c4:	cmp	r3, #1
   240c8:	beq	24048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101bc>
   240cc:	ldr	r0, [r0, #12]
   240d0:	movw	r3, #1025	; 0x401
   240d4:	cmp	r0, #0
   240d8:	bne	240bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10230>
   240dc:	b	24044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101b8>
   240e0:	ldr	r3, [r1, #104]	; 0x68
   240e4:	cmp	r3, r0
   240e8:	beq	240a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10218>
   240ec:	ldr	r0, [r0, #16]
   240f0:	cmp	r0, #0
   240f4:	bne	24078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101ec>
   240f8:	ldr	r3, [ip, #52]	; 0x34
   240fc:	ldr	r0, [r3, #100]	; 0x64
   24100:	cmp	r0, #0
   24104:	bne	240a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10218>
   24108:	b	24044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x101b8>
   2410c:	ldr	r3, [ip, #52]	; 0x34
   24110:	ldr	r0, [r3, #104]	; 0x68
   24114:	b	24004 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10178>
   24118:			; <UNDEFINED> instruction: 0x0009fab8
   2411c:	push	{r3, r4, r5, r6, r7, lr}
   24120:	subs	r6, r2, #0
   24124:	ldrb	r3, [r1]
   24128:	addeq	r5, r0, #52	; 0x34
   2412c:	addne	r5, r0, #56	; 0x38
   24130:	mov	r7, r0
   24134:	cmp	r3, #0
   24138:	popeq	{r3, r4, r5, r6, r7, pc}
   2413c:	add	r4, r1, #1
   24140:	sub	r3, r3, #33	; 0x21
   24144:	cmp	r3, #87	; 0x57
   24148:	ldrls	pc, [pc, r3, lsl #2]
   2414c:	b	24324 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10498>
   24150:	andeq	r4, r2, ip, lsl #6
   24154:	andeq	r4, r2, r4, lsr #6
   24158:	andeq	r4, r2, r4, lsr #6
   2415c:	andeq	r4, r2, r4, lsr #6
   24160:	andeq	r4, r2, r4, lsr #6
   24164:	andeq	r4, r2, r4, lsr #6
   24168:	andeq	r4, r2, r4, lsr #6
   2416c:	andeq	r4, r2, r4, lsr #6
   24170:	andeq	r4, r2, r4, lsr #6
   24174:	andeq	r4, r2, r4, lsr #6
   24178:	andeq	r4, r2, r4, lsr #6
   2417c:	andeq	r4, r2, r4, lsr #6
   24180:	andeq	r4, r2, r4, lsr #6
   24184:	andeq	r4, r2, r4, lsr #6
   24188:	andeq	r4, r2, r4, lsr #6
   2418c:	andeq	r4, r2, r4, lsr #6
   24190:	andeq	r4, r2, r4, lsr #6
   24194:	andeq	r4, r2, r4, lsr #6
   24198:	andeq	r4, r2, r4, lsr #6
   2419c:	andeq	r4, r2, r4, lsr #6
   241a0:	andeq	r4, r2, r4, lsr #6
   241a4:	andeq	r4, r2, r4, lsr #6
   241a8:	andeq	r4, r2, r4, lsr #6
   241ac:	andeq	r4, r2, r4, lsr #6
   241b0:	andeq	r4, r2, r4, lsr #6
   241b4:	andeq	r4, r2, r4, lsr #6
   241b8:	andeq	r4, r2, r4, lsr #6
   241bc:	andeq	r4, r2, r4, lsr #6
   241c0:	andeq	r4, r2, r4, lsr #6
   241c4:	andeq	r4, r2, r4, lsr #6
   241c8:	andeq	r4, r2, r4, lsr #6
   241cc:	andeq	r4, r2, r4, lsr #6
   241d0:	strdeq	r4, [r2], -ip
   241d4:	andeq	r4, r2, r4, lsr #6
   241d8:	andeq	r4, r2, r4, lsr #6
   241dc:	andeq	r4, r2, r4, lsr #6
   241e0:	andeq	r4, r2, r4, lsr #6
   241e4:	andeq	r4, r2, r4, lsr #6
   241e8:	andeq	r4, r2, r4, lsr #6
   241ec:	andeq	r4, r2, r4, lsr #6
   241f0:	andeq	r4, r2, ip, ror #5
   241f4:	andeq	r4, r2, r4, lsr #6
   241f8:	andeq	r4, r2, r4, lsr #6
   241fc:	andeq	r4, r2, ip, ror #5
   24200:	andeq	r4, r2, r4, lsr #6
   24204:	andeq	r4, r2, r4, lsr #6
   24208:	andeq	r4, r2, r4, lsr #6
   2420c:	andeq	r4, r2, r4, lsr #6
   24210:	andeq	r4, r2, r4, lsr #6
   24214:	ldrdeq	r4, [r2], -ip
   24218:	andeq	r4, r2, r4, lsr #6
   2421c:	andeq	r4, r2, r4, lsr #6
   24220:	andeq	r4, r2, r4, lsr #6
   24224:	andeq	r4, r2, r4, lsr #6
   24228:	andeq	r4, r2, ip, asr #5
   2422c:			; <UNDEFINED> instruction: 0x000242b0
   24230:	andeq	r4, r2, r4, lsr #6
   24234:	andeq	r4, r2, r4, lsr #6
   24238:	andeq	r4, r2, r4, lsr #6
   2423c:	andeq	r4, r2, r4, lsr #6
   24240:	andeq	r4, r2, r4, lsr #6
   24244:	andeq	r4, r2, r4, lsr #6
   24248:	andeq	r4, r2, r4, lsr #6
   2424c:	andeq	r4, r2, r4, lsr #6
   24250:	strdeq	r4, [r2], -ip
   24254:	andeq	r4, r2, r4, lsr #6
   24258:	andeq	r4, r2, r4, lsr #6
   2425c:	andeq	r4, r2, r4, lsr #6
   24260:	andeq	r4, r2, r4, lsr #6
   24264:	andeq	r4, r2, r4, lsr #6
   24268:	andeq	r4, r2, r4, lsr #6
   2426c:	andeq	r4, r2, r4, lsr #6
   24270:	andeq	r4, r2, ip, ror #5
   24274:	andeq	r4, r2, r4, lsr #6
   24278:	andeq	r4, r2, r4, lsr #6
   2427c:	andeq	r4, r2, ip, ror #5
   24280:	andeq	r4, r2, r4, lsr #6
   24284:	andeq	r4, r2, r4, lsr #6
   24288:	andeq	r4, r2, r4, lsr #6
   2428c:	andeq	r4, r2, r4, lsr #6
   24290:	andeq	r4, r2, r4, lsr #6
   24294:	ldrdeq	r4, [r2], -ip
   24298:	andeq	r4, r2, r4, lsr #6
   2429c:	andeq	r4, r2, r4, lsr #6
   242a0:	andeq	r4, r2, r4, lsr #6
   242a4:	andeq	r4, r2, r4, lsr #6
   242a8:	andeq	r4, r2, ip, asr #5
   242ac:			; <UNDEFINED> instruction: 0x000242b0
   242b0:	ldr	r3, [r5]
   242b4:	orr	r3, r3, #16
   242b8:	str	r3, [r5]
   242bc:	ldrb	r3, [r4], #1
   242c0:	cmp	r3, #0
   242c4:	bne	24140 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x102b4>
   242c8:	pop	{r3, r4, r5, r6, r7, pc}
   242cc:	ldr	r3, [r5]
   242d0:	orr	r3, r3, #32
   242d4:	str	r3, [r5]
   242d8:	b	242bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10430>
   242dc:	ldr	r3, [r5]
   242e0:	orr	r3, r3, #8
   242e4:	str	r3, [r5]
   242e8:	b	242bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10430>
   242ec:	ldr	r3, [r5]
   242f0:	orr	r3, r3, #2
   242f4:	str	r3, [r5]
   242f8:	b	242bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10430>
   242fc:	ldr	r3, [r5]
   24300:	orr	r3, r3, #1
   24304:	str	r3, [r5]
   24308:	b	242bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10430>
   2430c:	cmp	r6, #0
   24310:	addeq	r5, r7, #56	; 0x38
   24314:	addne	r5, r7, #52	; 0x34
   24318:	moveq	r6, #1
   2431c:	movne	r6, #0
   24320:	b	242bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10430>
   24324:	mov	r2, #5
   24328:	movw	r1, #12524	; 0x30ec
   2432c:	mov	r0, #0
   24330:	movt	r1, #5
   24334:	bl	13688 <dcgettext@plt>
   24338:	ldrb	r1, [r4, #-1]
   2433c:	mov	r2, r1
   24340:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   24344:	b	242bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10430>
   24348:	push	{r3, r4, r5, lr}
   2434c:	movw	r3, #1020	; 0x3fc
   24350:	movt	r3, #10
   24354:	mov	r5, r0
   24358:	ldr	r4, [r3]
   2435c:	cmp	r4, #0
   24360:	popeq	{r3, r4, r5, pc}
   24364:	mov	r0, r4
   24368:	blx	r5
   2436c:	ldr	r4, [r4, #28]
   24370:	cmp	r4, #0
   24374:	bne	24364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104d8>
   24378:	pop	{r3, r4, r5, pc}
   2437c:	push	{r3, r4, r5, lr}
   24380:	movw	r3, #65288	; 0xff08
   24384:	movt	r3, #9
   24388:	mov	r5, r0
   2438c:	ldr	r4, [r3, #216]	; 0xd8
   24390:	cmp	r4, #0
   24394:	popeq	{r3, r4, r5, pc}
   24398:	mov	r0, r4
   2439c:	blx	r5
   243a0:	ldr	r4, [r4, #24]
   243a4:	cmp	r4, #0
   243a8:	bne	24398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1050c>
   243ac:	pop	{r3, r4, r5, pc}
   243b0:	push	{r3, r4, r5, lr}
   243b4:	movw	r3, #65288	; 0xff08
   243b8:	movt	r3, #9
   243bc:	add	r1, r0, #24
   243c0:	mov	r4, r0
   243c4:	ldr	r2, [r3, #220]	; 0xdc
   243c8:	str	r0, [r2]
   243cc:	ldr	r2, [r0, #16]
   243d0:	str	r1, [r3, #220]	; 0xdc
   243d4:	ldr	r3, [r2, #164]	; 0xa4
   243d8:	cmp	r3, #0
   243dc:	beq	243f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10568>
   243e0:	movw	r0, #10132	; 0x2794
   243e4:	movw	r1, #6366	; 0x18de
   243e8:	movt	r0, #5
   243ec:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   243f0:	ldr	r2, [r4, #16]
   243f4:	movw	r5, #1088	; 0x440
   243f8:	movt	r5, #10
   243fc:	ldr	r3, [r5, #52]	; 0x34
   24400:	cmp	r3, r2
   24404:	beq	24448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x105bc>
   24408:	ldr	r1, [r5, #60]	; 0x3c
   2440c:	movw	r3, #62500	; 0xf424
   24410:	movt	r3, #9
   24414:	str	r2, [r1]
   24418:	ldr	r0, [r4, #16]
   2441c:	ldr	r1, [r3]
   24420:	add	r3, r0, #164	; 0xa4
   24424:	str	r3, [r5, #60]	; 0x3c
   24428:	str	r4, [r0, #172]	; 0xac
   2442c:	bl	13b8c <bfd_set_gp_size@plt>
   24430:	movw	r1, #59328	; 0xe7c0
   24434:	ldr	r0, [r4, #16]
   24438:	mov	r2, r4
   2443c:	movt	r1, #1
   24440:	pop	{r3, r4, r5, lr}
   24444:	b	13d78 <bfd_map_over_sections@plt>
   24448:	movw	r0, #10132	; 0x2794
   2444c:	movw	r1, #6367	; 0x18df
   24450:	movt	r0, #5
   24454:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   24458:	ldr	r2, [r4, #16]
   2445c:	b	24408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1057c>
   24460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24464:	movw	r4, #63248	; 0xf710
   24468:	movt	r4, #9
   2446c:	ldrb	r3, [r0, #37]	; 0x25
   24470:	sub	sp, sp, #20
   24474:	mov	r5, r0
   24478:	ldr	r2, [r4]
   2447c:	tst	r3, #2
   24480:	mov	r6, r1
   24484:	str	r2, [sp, #12]
   24488:	beq	244a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1061c>
   2448c:	mov	r0, #1
   24490:	ldr	r2, [sp, #12]
   24494:	ldr	r3, [r4]
   24498:	cmp	r2, r3
   2449c:	bne	2491c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a90>
   244a0:	add	sp, sp, #20
   244a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   244a8:	bl	30f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d084>
   244ac:	ldrb	r3, [r5, #37]	; 0x25
   244b0:	tst	r3, #8
   244b4:	bne	2448c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10600>
   244b8:	ldr	r0, [r5, #16]
   244bc:	mov	r1, #2
   244c0:	bl	13d48 <bfd_check_format@plt>
   244c4:	cmp	r0, #0
   244c8:	bne	244e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10658>
   244cc:	ldr	r0, [r5, #16]
   244d0:	mov	r1, #1
   244d4:	mov	r2, sp
   244d8:	bl	13c7c <bfd_check_format_matches@plt>
   244dc:	cmp	r0, #0
   244e0:	beq	24754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108c8>
   244e4:	mov	r0, r5
   244e8:	bl	2f130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b2a4>
   244ec:	cmp	r0, #0
   244f0:	bne	2448c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10600>
   244f4:	ldr	r7, [r5, #16]
   244f8:	ldrb	r3, [r7, #40]	; 0x28
   244fc:	mov	r0, r7
   24500:	and	r3, r3, #7
   24504:	cmp	r3, #1
   24508:	beq	24698 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1080c>
   2450c:	cmp	r3, #2
   24510:	bne	246e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10854>
   24514:	movw	r3, #65288	; 0xff08
   24518:	movt	r3, #9
   2451c:	ldr	r6, [r3, #240]	; 0xf0
   24520:	cmp	r6, #0
   24524:	bne	24538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106ac>
   24528:	b	245d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1074c>
   2452c:	ldr	r6, [r6, #4]
   24530:	cmp	r6, #0
   24534:	beq	24880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109f4>
   24538:	ldr	r0, [r6]
   2453c:	bl	13a24 <strlen@plt>
   24540:	mov	r8, r0
   24544:	ldr	r0, [r7]
   24548:	bl	138bc <lbasename@plt>
   2454c:	mov	r9, r0
   24550:	ldr	r0, [r6]
   24554:	ldrb	r2, [r0]
   24558:	cmp	r2, #65	; 0x41
   2455c:	bne	24584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106f8>
   24560:	ldrb	r2, [r0, #1]
   24564:	cmp	r2, #76	; 0x4c
   24568:	bne	24584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106f8>
   2456c:	ldrb	r2, [r0, #2]
   24570:	cmp	r2, #76	; 0x4c
   24574:	bne	24584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106f8>
   24578:	ldrb	r2, [r0, #3]
   2457c:	cmp	r2, #0
   24580:	beq	245c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1073c>
   24584:	mov	r1, r9
   24588:	mov	r2, r8
   2458c:	bl	1376c <filename_ncmp@plt>
   24590:	cmp	r0, #0
   24594:	bne	2452c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106a0>
   24598:	ldrb	r3, [r9, r8]
   2459c:	cmp	r3, #0
   245a0:	beq	245c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1073c>
   245a4:	cmp	r3, #46	; 0x2e
   245a8:	bne	2452c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106a0>
   245ac:	add	r8, r9, r8
   245b0:	ldrb	r3, [r8, #1]
   245b4:	cmp	r3, #97	; 0x61
   245b8:	bne	2452c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106a0>
   245bc:	ldrb	r3, [r8, #2]
   245c0:	cmp	r3, #0
   245c4:	bne	2452c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x106a0>
   245c8:	ldrb	r3, [r7, #43]	; 0x2b
   245cc:	orr	r3, r3, #32
   245d0:	strb	r3, [r7, #43]	; 0x2b
   245d4:	ldr	r7, [r5, #16]
   245d8:	ldrb	r3, [r5, #37]	; 0x25
   245dc:	tst	r3, #1
   245e0:	moveq	r0, r7
   245e4:	beq	246e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10854>
   245e8:	movw	r9, #1088	; 0x440
   245ec:	mov	r8, #1
   245f0:	movt	r9, #10
   245f4:	mov	r6, #0
   245f8:	b	24650 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x107c4>
   245fc:	ldr	r2, [r9, #28]
   24600:	add	r3, sp, #16
   24604:	movw	r0, #1088	; 0x440
   24608:	mov	r1, r6
   2460c:	str	r6, [r3, #-12]!
   24610:	movt	r0, #10
   24614:	ldr	ip, [r2]
   24618:	movw	r2, #12712	; 0x31a8
   2461c:	movt	r2, #5
   24620:	blx	ip
   24624:	cmp	r0, #0
   24628:	beq	24920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a94>
   2462c:	ldr	r0, [sp, #4]
   24630:	movw	r1, #1088	; 0x440
   24634:	movt	r1, #10
   24638:	ldr	r3, [r0, #4]
   2463c:	ldr	r3, [r3, #360]	; 0x168
   24640:	blx	r3
   24644:	subs	r3, r0, #0
   24648:	beq	24734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x108a8>
   2464c:	ldr	r7, [r5, #16]
   24650:	mov	r1, r6
   24654:	mov	r0, r7
   24658:	bl	13d54 <bfd_openr_next_archived_file@plt>
   2465c:	subs	r6, r0, #0
   24660:	beq	2486c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109e0>
   24664:	mov	r1, #1
   24668:	bl	13d48 <bfd_check_format@plt>
   2466c:	subs	r3, r0, #0
   24670:	bne	245fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10770>
   24674:	mov	r2, #5
   24678:	movw	r1, #12664	; 0x3178
   2467c:	movt	r1, #5
   24680:	mov	r8, r3
   24684:	bl	13688 <dcgettext@plt>
   24688:	ldr	r1, [r5, #16]
   2468c:	mov	r2, r6
   24690:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   24694:	b	245fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10770>
   24698:	ldrb	r3, [r5, #37]	; 0x25
   2469c:	tst	r3, #16
   246a0:	beq	24888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x109fc>
   246a4:	movw	r3, #1476	; 0x5c4
   246a8:	movt	r3, #10
   246ac:	ldr	r3, [r3]
   246b0:	cmp	r3, #0
   246b4:	bne	246cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10840>
   246b8:	movw	r3, #1464	; 0x5b8
   246bc:	movt	r3, #10
   246c0:	ldr	r3, [r3]
   246c4:	cmp	r3, #0
   246c8:	beq	246dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10850>
   246cc:	movw	r0, #12660	; 0x3174
   246d0:	mov	r1, r5
   246d4:	movt	r0, #5
   246d8:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   246dc:	ldr	r0, [r5, #16]
   246e0:	ldr	r3, [r0, #4]
   246e4:	movw	r1, #1088	; 0x440
   246e8:	movt	r1, #10
   246ec:	ldr	r3, [r3, #360]	; 0x168
   246f0:	blx	r3
   246f4:	cmp	r0, #0
   246f8:	beq	24710 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10884>
   246fc:	ldrb	r3, [r5, #37]	; 0x25
   24700:	mov	r0, #1
   24704:	orr	r3, r3, #2
   24708:	strb	r3, [r5, #37]	; 0x25
   2470c:	b	24490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10604>
   24710:	mov	r2, #5
   24714:	movw	r1, #12728	; 0x31b8
   24718:	movt	r1, #5
   2471c:	bl	13688 <dcgettext@plt>
   24720:	ldr	r1, [r5, #16]
   24724:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   24728:	ldrb	r0, [r5, #37]	; 0x25
   2472c:	ubfx	r0, r0, #1, #1
   24730:	b	24490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10604>
   24734:	mov	r2, #5
   24738:	movw	r1, #12728	; 0x31b8
   2473c:	movt	r1, #5
   24740:	mov	r8, r3
   24744:	bl	13688 <dcgettext@plt>
   24748:	mov	r1, r6
   2474c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   24750:	b	2464c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x107c0>
   24754:	bl	13784 <bfd_get_error@plt>
   24758:	mov	r7, r0
   2475c:	mov	r0, r5
   24760:	bl	2f104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b278>
   24764:	subs	r8, r0, #0
   24768:	bne	2448c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10600>
   2476c:	cmp	r7, #13
   24770:	beq	248b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a24>
   24774:	rsbs	r3, r6, #1
   24778:	movcc	r3, #0
   2477c:	cmp	r7, #12
   24780:	moveq	r7, r3
   24784:	orrne	r7, r3, #1
   24788:	cmp	r7, #0
   2478c:	bne	24894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a08>
   24790:	movw	r7, #1032	; 0x408
   24794:	movt	r7, #10
   24798:	ldr	r0, [r5, #16]
   2479c:	add	r8, sp, #4
   247a0:	bl	13c4c <bfd_close@plt>
   247a4:	ldm	r7, {r0, r1}
   247a8:	mov	sl, #0
   247ac:	str	sl, [r5, #16]
   247b0:	ldrb	fp, [r7, #1]
   247b4:	movw	r9, #172	; 0xac
   247b8:	stm	r8, {r0, r1}
   247bc:	movt	r9, #10
   247c0:	ldr	r0, [r5, #8]
   247c4:	ubfx	fp, fp, #3, #1
   247c8:	bl	31098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d20c>
   247cc:	mov	r0, r6
   247d0:	bl	20f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0d4>
   247d4:	ldrb	r2, [r5, #36]	; 0x24
   247d8:	ldrb	r1, [r7]
   247dc:	movw	r3, #996	; 0x3e4
   247e0:	ubfx	ip, r2, #6, #1
   247e4:	ldrb	lr, [r5, #37]	; 0x25
   247e8:	lsr	r6, r2, #7
   247ec:	ldrb	r0, [r7, #1]
   247f0:	movt	r3, #10
   247f4:	bfi	r1, r6, #7, #1
   247f8:	bfi	r1, ip, #6, #1
   247fc:	ubfx	r2, r2, #5, #1
   24800:	bfi	r0, lr, #0, #1
   24804:	bfi	r1, r2, #5, #1
   24808:	strb	r0, [r7, #1]
   2480c:	mov	r0, #1
   24810:	strb	r1, [r7]
   24814:	movw	r6, #65000	; 0xfde8
   24818:	str	r0, [r3]
   2481c:	movt	r6, #9
   24820:	str	r0, [r9]
   24824:	bl	15468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc>
   24828:	ldrb	r2, [r7, #1]
   2482c:	ldrb	r3, [sp, #5]
   24830:	ubfx	r2, r2, #3, #1
   24834:	str	sl, [r9]
   24838:	orr	fp, fp, r2
   2483c:	bfi	r3, fp, #3, #1
   24840:	strb	r3, [sp, #5]
   24844:	ldm	r8, {r0, r1}
   24848:	stm	r7, {r0, r1}
   2484c:	bl	20fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd124>
   24850:	ldr	r0, [r6]
   24854:	bl	13b80 <fclose@plt>
   24858:	str	sl, [r6]
   2485c:	ldrb	r3, [r5, #37]	; 0x25
   24860:	orr	r3, r3, #2
   24864:	strb	r3, [r5, #37]	; 0x25
   24868:	b	2448c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10600>
   2486c:	ldrb	r3, [r5, #37]	; 0x25
   24870:	mov	r0, r8
   24874:	bfi	r3, r8, #1, #1
   24878:	strb	r3, [r5, #37]	; 0x25
   2487c:	b	24490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10604>
   24880:	ldr	r7, [r5, #16]
   24884:	b	245d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1074c>
   24888:	mov	r0, r5
   2488c:	bl	243b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10524>
   24890:	b	246a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10818>
   24894:	mov	r2, #5
   24898:	movw	r1, #12628	; 0x3154
   2489c:	movt	r1, #5
   248a0:	bl	13688 <dcgettext@plt>
   248a4:	ldr	r1, [r5, #16]
   248a8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   248ac:	b	24790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10904>
   248b0:	mov	r2, #5
   248b4:	movw	r1, #12568	; 0x3118
   248b8:	movt	r1, #5
   248bc:	bl	13688 <dcgettext@plt>
   248c0:	ldr	r1, [r5, #16]
   248c4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   248c8:	mov	r2, #5
   248cc:	mov	r0, r8
   248d0:	movw	r1, #12600	; 0x3138
   248d4:	movt	r1, #5
   248d8:	bl	13688 <dcgettext@plt>
   248dc:	ldr	r1, [r5, #16]
   248e0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   248e4:	ldr	r7, [sp]
   248e8:	ldr	r1, [r7]
   248ec:	cmp	r1, #0
   248f0:	beq	2490c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a80>
   248f4:	movw	r0, #62784	; 0xf540
   248f8:	movt	r0, #4
   248fc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   24900:	ldr	r1, [r7, #4]!
   24904:	cmp	r1, #0
   24908:	bne	248f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10a68>
   2490c:	movw	r0, #12624	; 0x3150
   24910:	movt	r0, #5
   24914:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   24918:	b	24790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10904>
   2491c:	bl	13694 <__stack_chk_fail@plt>
   24920:	movw	r0, #10132	; 0x2794
   24924:	movw	r1, #2859	; 0xb2b
   24928:	movt	r0, #5
   2492c:	ldr	r2, [pc]	; 24934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10aa8>
   24930:	bl	135d4 <_bfd_abort@plt>
   24934:	andeq	r2, r5, r4, lsl #15
   24938:	push	{r3, r4, r5, lr}
   2493c:	movw	r3, #1020	; 0x3fc
   24940:	movt	r3, #10
   24944:	mov	r5, r0
   24948:	ldr	r4, [r3]
   2494c:	cmp	r4, #0
   24950:	beq	2497c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10af0>
   24954:	ldr	r0, [r4, #12]
   24958:	mov	r1, r5
   2495c:	cmp	r0, #0
   24960:	beq	24970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ae4>
   24964:	bl	135a4 <filename_cmp@plt>
   24968:	cmp	r0, #0
   2496c:	beq	2499c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b10>
   24970:	ldr	r4, [r4, #28]
   24974:	cmp	r4, #0
   24978:	bne	24954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ac8>
   2497c:	movw	r3, #1456	; 0x5b0
   24980:	movt	r3, #10
   24984:	mov	r0, r5
   24988:	mov	r1, #4
   2498c:	ldr	r2, [r3]
   24990:	mov	r3, #0
   24994:	bl	20c34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcda8>
   24998:	mov	r4, r0
   2499c:	ldrb	r3, [r4, #37]	; 0x25
   249a0:	mov	r0, r4
   249a4:	and	r3, r3, #6
   249a8:	cmp	r3, #4
   249ac:	beq	249b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b28>
   249b0:	pop	{r3, r4, r5, pc}
   249b4:	mov	r1, #0
   249b8:	bl	24460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x105d4>
   249bc:	cmp	r0, #0
   249c0:	movne	r0, r4
   249c4:	moveq	r0, #0
   249c8:	pop	{r3, r4, r5, pc}
   249cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   249d0:	mov	r6, r0
   249d4:	ldr	r5, [r0, #8]
   249d8:	mov	r8, r1
   249dc:	mov	r9, r2
   249e0:	cmp	r5, #0
   249e4:	beq	24a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10bd0>
   249e8:	mov	r0, r5
   249ec:	bl	1e448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa5bc>
   249f0:	subs	r7, r0, #0
   249f4:	beq	24a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c08>
   249f8:	movw	r3, #65288	; 0xff08
   249fc:	movt	r3, #9
   24a00:	ldr	r4, [r3, #216]	; 0xd8
   24a04:	cmp	r4, #0
   24a08:	bne	24a1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b90>
   24a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24a10:	ldr	r4, [r4, #24]
   24a14:	cmp	r4, #0
   24a18:	beq	24a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10bcc>
   24a1c:	mov	r0, r5
   24a20:	mov	r1, r7
   24a24:	ldr	r2, [r4, #8]
   24a28:	add	r3, r4, #16
   24a2c:	bl	1fd04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xbe78>
   24a30:	cmp	r0, #0
   24a34:	beq	24a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b84>
   24a38:	mov	r1, r4
   24a3c:	mov	r0, r6
   24a40:	mov	r2, r8
   24a44:	mov	r3, r9
   24a48:	bl	2088c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca00>
   24a4c:	ldr	r4, [r4, #24]
   24a50:	cmp	r4, #0
   24a54:	bne	24a1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b90>
   24a58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24a5c:	movw	r3, #65288	; 0xff08
   24a60:	movt	r3, #9
   24a64:	ldr	r4, [r3, #216]	; 0xd8
   24a68:	cmp	r4, #0
   24a6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   24a70:	mov	r1, r4
   24a74:	mov	r0, r6
   24a78:	mov	r2, r8
   24a7c:	mov	r3, r9
   24a80:	bl	2088c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca00>
   24a84:	ldr	r4, [r4, #24]
   24a88:	cmp	r4, #0
   24a8c:	bne	24a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10be4>
   24a90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24a94:	ldrb	r3, [r5]
   24a98:	cmp	r3, #0
   24a9c:	beq	24ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c58>
   24aa0:	cmp	r3, #63	; 0x3f
   24aa4:	beq	24b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c7c>
   24aa8:	cmp	r3, #42	; 0x2a
   24aac:	beq	24b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c7c>
   24ab0:	cmp	r3, #91	; 0x5b
   24ab4:	movne	r2, r5
   24ab8:	bne	24ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c4c>
   24abc:	b	24b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c7c>
   24ac0:	cmp	r3, #63	; 0x3f
   24ac4:	beq	24b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c7c>
   24ac8:	cmp	r3, #42	; 0x2a
   24acc:	beq	24b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c7c>
   24ad0:	cmp	r3, #91	; 0x5b
   24ad4:	beq	24b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c7c>
   24ad8:	ldrb	r3, [r2, #1]!
   24adc:	cmp	r3, #0
   24ae0:	bne	24ac0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c34>
   24ae4:	mov	r0, r5
   24ae8:	bl	24938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10aac>
   24aec:	subs	r1, r0, #0
   24af0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   24af4:	mov	r0, r6
   24af8:	mov	r2, r8
   24afc:	mov	r3, r9
   24b00:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   24b04:	b	2088c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca00>
   24b08:	movw	r3, #65288	; 0xff08
   24b0c:	movt	r3, #9
   24b10:	ldr	r4, [r3, #216]	; 0xd8
   24b14:	cmp	r4, #0
   24b18:	bne	24b40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10cb4>
   24b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24b20:	mov	r0, r6
   24b24:	mov	r1, r4
   24b28:	mov	r2, r8
   24b2c:	mov	r3, r9
   24b30:	bl	2088c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xca00>
   24b34:	ldr	r4, [r4, #24]
   24b38:	cmp	r4, #0
   24b3c:	beq	24b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10cd0>
   24b40:	mov	r0, r5
   24b44:	ldr	r1, [r4, #8]
   24b48:	mov	r2, #0
   24b4c:	bl	138a4 <fnmatch@plt>
   24b50:	cmp	r0, #0
   24b54:	bne	24b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ca8>
   24b58:	b	24b20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10c94>
   24b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24b60:	push	{r3, r4, r5, lr}
   24b64:	subs	r4, r0, #0
   24b68:	popeq	{r3, r4, r5, pc}
   24b6c:	movw	r5, #1060	; 0x424
   24b70:	movt	r5, #10
   24b74:	ldr	r3, [r4, #4]
   24b78:	cmp	r3, #15
   24b7c:	ldrls	pc, [pc, r3, lsl #2]
   24b80:	b	24bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d40>
   24b84:	andeq	r4, r2, r4, asr #23
   24b88:	andeq	r4, r2, ip, asr #23
   24b8c:	andeq	r4, r2, ip, asr #23
   24b90:	andeq	r4, r2, ip, asr #23
   24b94:	andeq	r4, r2, r8, ror #23
   24b98:	andeq	r4, r2, ip, asr #23
   24b9c:	andeq	r4, r2, ip, asr #23
   24ba0:	andeq	r4, r2, ip, asr #23
   24ba4:	andeq	r4, r2, ip, asr #23
   24ba8:	andeq	r4, r2, ip, asr #23
   24bac:	andeq	r4, r2, ip, asr #23
   24bb0:	andeq	r4, r2, ip, asr #23
   24bb4:	andeq	r4, r2, ip, asr #23
   24bb8:	andeq	r4, r2, r4, asr #23
   24bbc:	andeq	r4, r2, ip, asr #23
   24bc0:	ldrdeq	r4, [r2], -ip
   24bc4:	ldr	r0, [r4, #8]
   24bc8:	bl	24b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10cd4>
   24bcc:	ldr	r4, [r4]
   24bd0:	cmp	r4, #0
   24bd4:	bne	24b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ce8>
   24bd8:	pop	{r3, r4, r5, pc}
   24bdc:	ldr	r0, [r5]
   24be0:	bl	24b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10cd4>
   24be4:	b	24bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d40>
   24be8:	movw	r1, #55452	; 0xd89c
   24bec:	mov	r0, r4
   24bf0:	movt	r1, #1
   24bf4:	mov	r2, #0
   24bf8:	bl	249cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b40>
   24bfc:	b	24bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d40>
   24c00:	push	{r4, r5, r6, lr}
   24c04:	subs	r4, r0, #0
   24c08:	mov	r5, r1
   24c0c:	popeq	{r4, r5, r6, pc}
   24c10:	movw	r6, #1060	; 0x424
   24c14:	movt	r6, #10
   24c18:	b	24c38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10dac>
   24c1c:	cmp	r3, #15
   24c20:	beq	24c90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e04>
   24c24:	cmp	r3, #4
   24c28:	beq	24c6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10de0>
   24c2c:	ldr	r4, [r4]
   24c30:	cmp	r4, #0
   24c34:	beq	24c68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ddc>
   24c38:	ldr	r3, [r4, #4]
   24c3c:	cmp	r3, #13
   24c40:	bne	24c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d90>
   24c44:	ldr	r0, [r4, #8]
   24c48:	mov	r1, r5
   24c4c:	bl	24c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d74>
   24c50:	ldrb	r3, [r5, #84]	; 0x54
   24c54:	tst	r3, #4
   24c58:	popeq	{r4, r5, r6, pc}
   24c5c:	ldr	r4, [r4]
   24c60:	cmp	r4, #0
   24c64:	bne	24c38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10dac>
   24c68:	pop	{r4, r5, r6, pc}
   24c6c:	movw	r1, #1432	; 0x598
   24c70:	mov	r0, r4
   24c74:	movt	r1, #2
   24c78:	mov	r2, r5
   24c7c:	bl	249cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b40>
   24c80:	ldrb	r3, [r5, #84]	; 0x54
   24c84:	tst	r3, #4
   24c88:	bne	24c2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10da0>
   24c8c:	pop	{r4, r5, r6, pc}
   24c90:	ldr	r0, [r6]
   24c94:	mov	r1, r5
   24c98:	bl	24c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d74>
   24c9c:	ldrb	r3, [r5, #84]	; 0x54
   24ca0:	tst	r3, #4
   24ca4:	bne	24c2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10da0>
   24ca8:	pop	{r4, r5, r6, pc}
   24cac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24cb0:	subs	r4, r0, #0
   24cb4:	mov	r7, r1
   24cb8:	mov	r6, r2
   24cbc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   24cc0:	movw	sl, #1088	; 0x440
   24cc4:	movw	r9, #1060	; 0x424
   24cc8:	movw	r8, #65288	; 0xff08
   24ccc:	movt	sl, #10
   24cd0:	movt	r9, #10
   24cd4:	movt	r8, #9
   24cd8:	ldr	r3, [r4, #4]
   24cdc:	cmp	r3, #15
   24ce0:	ldrls	pc, [pc, r3, lsl #2]
   24ce4:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24ce8:	andeq	r4, r2, r0, lsl #29
   24cec:	andeq	r4, r2, r4, ror #29
   24cf0:	andeq	r4, r2, r0, ror #28
   24cf4:	andeq	r4, r2, ip, lsl lr
   24cf8:	andeq	r4, r2, r0, lsr #27
   24cfc:	andeq	r4, r2, r8, lsr sp
   24d00:	andeq	r4, r2, r0, ror #28
   24d04:	andeq	r4, r2, r0, ror #28
   24d08:	andeq	r4, r2, r0, asr sp
   24d0c:	andeq	r4, r2, r0, ror #28
   24d10:	andeq	r4, r2, r8, asr #26
   24d14:	andeq	r4, r2, r8, lsr sp
   24d18:	andeq	r4, r2, r0, ror #28
   24d1c:	andeq	r4, r2, ip, lsl #27
   24d20:	andeq	r4, r2, r8, lsr sp
   24d24:	andeq	r4, r2, r8, lsr #26
   24d28:	ldr	r0, [r9]
   24d2c:	mov	r1, r7
   24d30:	mov	r2, r6
   24d34:	bl	24cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e20>
   24d38:	ldr	r4, [r4]
   24d3c:	cmp	r4, #0
   24d40:	bne	24cd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e4c>
   24d44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24d48:	ldr	r7, [r4, #8]
   24d4c:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24d50:	ldr	r0, [r4, #12]
   24d54:	bl	2279c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe910>
   24d58:	ldr	r3, [r6, #80]	; 0x50
   24d5c:	cmp	r3, #2
   24d60:	beq	24f04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11078>
   24d64:	cmp	r3, #3
   24d68:	movw	r1, #259	; 0x103
   24d6c:	moveq	r1, #256	; 0x100
   24d70:	ldr	r3, [r6, #28]
   24d74:	cmp	r3, #0
   24d78:	beq	24e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10fe8>
   24d7c:	ldr	r2, [r3, #20]
   24d80:	orr	r1, r2, r1
   24d84:	str	r1, [r3, #20]
   24d88:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24d8c:	ldr	r0, [r4, #8]
   24d90:	mov	r1, r7
   24d94:	mov	r2, r6
   24d98:	bl	24cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e20>
   24d9c:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24da0:	ldr	r3, [r4, #36]	; 0x24
   24da4:	cmp	r3, #0
   24da8:	beq	24db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f2c>
   24dac:	ldr	r3, [r3, #12]
   24db0:	cmp	r3, #1
   24db4:	beq	24f38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110ac>
   24db8:	movw	r1, #13400	; 0x3458
   24dbc:	mov	r0, r4
   24dc0:	movt	r1, #2
   24dc4:	mov	r2, r6
   24dc8:	bl	249cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b40>
   24dcc:	ldr	r3, [r8, #264]	; 0x108
   24dd0:	cmp	r3, #0
   24dd4:	bne	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24dd8:	ldr	r5, [r4, #16]
   24ddc:	cmp	r5, #0
   24de0:	bne	24df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f68>
   24de4:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24de8:	ldr	r5, [r5]
   24dec:	cmp	r5, #0
   24df0:	beq	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24df4:	ldr	r0, [r5, #4]
   24df8:	movw	r1, #12760	; 0x31d8
   24dfc:	movt	r1, #5
   24e00:	cmp	r0, #0
   24e04:	beq	24de8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f5c>
   24e08:	bl	13490 <strcmp@plt>
   24e0c:	cmp	r0, #0
   24e10:	bne	24de8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f5c>
   24e14:	str	r6, [r8, #264]	; 0x108
   24e18:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24e1c:	ldr	r3, [r4, #16]
   24e20:	cmp	r3, #0
   24e24:	beq	24e34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10fa8>
   24e28:	ldr	r3, [r3, #16]
   24e2c:	cmp	r3, #0
   24e30:	bne	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24e34:	mov	r1, #0
   24e38:	mov	r2, #1
   24e3c:	ldr	r0, [r4, #8]
   24e40:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   24e44:	ldr	r2, [r4, #12]
   24e48:	ldr	r1, [r0, #28]
   24e4c:	str	r2, [r0, #44]	; 0x2c
   24e50:	cmp	r1, #0
   24e54:	bne	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24e58:	bl	22858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9cc>
   24e5c:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24e60:	cmp	r6, #0
   24e64:	beq	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24e68:	ldr	r1, [r6, #28]
   24e6c:	cmp	r1, #0
   24e70:	bne	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24e74:	mov	r0, r6
   24e78:	bl	22858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9cc>
   24e7c:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24e80:	ldr	r3, [r4, #72]	; 0x48
   24e84:	cmp	r3, #0
   24e88:	beq	24f24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11098>
   24e8c:	sub	r3, r3, #376	; 0x178
   24e90:	sub	r3, r3, #3
   24e94:	cmp	r3, #1
   24e98:	bhi	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24e9c:	ldrb	r3, [r4, #84]	; 0x54
   24ea0:	mov	r1, r4
   24ea4:	ldr	r0, [r4, #8]
   24ea8:	orr	r3, r3, #4
   24eac:	strb	r3, [r4, #84]	; 0x54
   24eb0:	bl	24c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10d74>
   24eb4:	ldr	r1, [r4, #72]	; 0x48
   24eb8:	movw	r3, #379	; 0x17b
   24ebc:	ldrb	r2, [r4, #84]	; 0x54
   24ec0:	subs	r1, r1, r3
   24ec4:	rsbs	r3, r1, #0
   24ec8:	ubfx	r2, r2, #2, #1
   24ecc:	adcs	r3, r3, r1
   24ed0:	cmp	r2, r3
   24ed4:	beq	24f24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11098>
   24ed8:	mvn	r3, #0
   24edc:	str	r3, [r4, #72]	; 0x48
   24ee0:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24ee4:	cmp	r6, #0
   24ee8:	beq	24ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1106c>
   24eec:	ldr	r1, [r6, #28]
   24ef0:	cmp	r1, #0
   24ef4:	beq	24f78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110ec>
   24ef8:	ldr	r0, [r4, #8]
   24efc:	bl	2279c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe910>
   24f00:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24f04:	ldr	r2, [sl, #52]	; 0x34
   24f08:	movw	r3, #513	; 0x201
   24f0c:	ldr	r2, [r2, #4]
   24f10:	ldr	r1, [r2, #4]
   24f14:	cmp	r1, #5
   24f18:	moveq	r1, r3
   24f1c:	movne	r1, #768	; 0x300
   24f20:	b	24d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10ee4>
   24f24:	ldr	r0, [r4, #8]
   24f28:	mov	r1, r7
   24f2c:	mov	r2, r4
   24f30:	bl	24cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e20>
   24f34:	b	24d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10eac>
   24f38:	ldr	r5, [r4, #12]
   24f3c:	cmp	r5, #0
   24f40:	bne	24db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f2c>
   24f44:	movw	r1, #1960	; 0x7a8
   24f48:	mov	r0, r4
   24f4c:	movt	r1, #2
   24f50:	mov	r2, r6
   24f54:	bl	249cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b40>
   24f58:	ldr	r1, [r4, #52]	; 0x34
   24f5c:	cmp	r1, #0
   24f60:	beq	24dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f40>
   24f64:	mov	r0, r4
   24f68:	mov	r2, r6
   24f6c:	bl	236bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf830>
   24f70:	str	r5, [r4, #52]	; 0x34
   24f74:	b	24dcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10f40>
   24f78:	mov	r0, r6
   24f7c:	bl	22858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe9cc>
   24f80:	b	24ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1106c>
   24f84:	push	{r3, r4, r5, r6, r7, lr}
   24f88:	mov	r6, r1
   24f8c:	ldr	r3, [r1]
   24f90:	mov	r4, r0
   24f94:	cmp	r3, #0
   24f98:	popne	{r3, r4, r5, r6, r7, pc}
   24f9c:	cmp	r0, #0
   24fa0:	popeq	{r3, r4, r5, r6, r7, pc}
   24fa4:	movw	r5, #1480	; 0x5c8
   24fa8:	movt	r5, #10
   24fac:	ldr	r3, [r5, #120]	; 0x78
   24fb0:	cmp	r0, r3
   24fb4:	popeq	{r3, r4, r5, r6, r7, pc}
   24fb8:	movw	r7, #1060	; 0x424
   24fbc:	movt	r7, #10
   24fc0:	ldr	r3, [r4, #4]
   24fc4:	cmp	r3, #15
   24fc8:	ldrls	pc, [pc, r3, lsl #2]
   24fcc:	b	2501c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11190>
   24fd0:	andeq	r5, r2, r0, lsl r0
   24fd4:	andeq	r5, r2, ip, lsl r0
   24fd8:	andeq	r5, r2, ip, lsl r0
   24fdc:	andeq	r5, r2, ip, lsl r0
   24fe0:	andeq	r5, r2, r4, asr r0
   24fe4:	andeq	r5, r2, ip, lsl r0
   24fe8:	andeq	r5, r2, ip, lsl r0
   24fec:	andeq	r5, r2, ip, lsl r0
   24ff0:	andeq	r5, r2, ip, lsl r0
   24ff4:	andeq	r5, r2, ip, lsl r0
   24ff8:	andeq	r5, r2, ip, lsl r0
   24ffc:	andeq	r5, r2, ip, lsl r0
   25000:	andeq	r5, r2, ip, lsl r0
   25004:	andeq	r5, r2, r0, lsl r0
   25008:	andeq	r5, r2, ip, lsl r0
   2500c:	andeq	r5, r2, r8, lsr r0
   25010:	ldr	r0, [r4, #8]
   25014:	mov	r1, r6
   25018:	bl	24f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110f8>
   2501c:	ldr	r4, [r4]
   25020:	cmp	r4, #0
   25024:	beq	25050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111c4>
   25028:	ldr	r3, [r5, #120]	; 0x78
   2502c:	cmp	r3, r4
   25030:	bne	24fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11134>
   25034:	pop	{r3, r4, r5, r6, r7, pc}
   25038:	ldr	r0, [r7]
   2503c:	mov	r1, r6
   25040:	bl	24f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110f8>
   25044:	ldr	r4, [r4]
   25048:	cmp	r4, #0
   2504c:	bne	25028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1119c>
   25050:	pop	{r3, r4, r5, r6, r7, pc}
   25054:	movw	r1, #59408	; 0xe810
   25058:	mov	r0, r4
   2505c:	movt	r1, #1
   25060:	mov	r2, r6
   25064:	bl	249cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10b40>
   25068:	b	2501c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11190>
   2506c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25070:	movw	r7, #63248	; 0xf710
   25074:	movt	r7, #9
   25078:	sub	sp, sp, #28
   2507c:	subs	fp, r0, #0
   25080:	mov	r6, r1
   25084:	ldr	r2, [r7]
   25088:	str	r2, [sp, #20]
   2508c:	beq	25130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x112a4>
   25090:	movw	r8, #65288	; 0xff08
   25094:	movw	r9, #1048	; 0x418
   25098:	movw	r4, #1088	; 0x440
   2509c:	movt	r8, #9
   250a0:	movt	r9, #10
   250a4:	movt	r4, #10
   250a8:	movw	r3, #62408	; 0xf3c8
   250ac:	movt	r3, #9
   250b0:	str	r3, [sp]
   250b4:	movw	r3, #1336	; 0x538
   250b8:	movt	r3, #10
   250bc:	str	r3, [sp, #4]
   250c0:	ldr	r2, [fp, #4]
   250c4:	cmp	r2, #15
   250c8:	ldrls	pc, [pc, r2, lsl #2]
   250cc:	b	25124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11298>
   250d0:	andeq	r5, r2, r0, asr #3
   250d4:	andeq	r5, r2, r8, lsr #3
   250d8:	andeq	r5, r2, r4, asr r2
   250dc:	andeq	r5, r2, r4, lsr #2
   250e0:	ldrdeq	r5, [r2], -r0
   250e4:	andeq	r5, r2, r4, lsr #2
   250e8:	andeq	r5, r2, r4, lsr #2
   250ec:	andeq	r5, r2, r4, lsr #2
   250f0:	andeq	r5, r2, r4, lsr #2
   250f4:	andeq	r5, r2, r4, lsr #2
   250f8:	muleq	r2, ip, r1
   250fc:	andeq	r5, r2, r4, lsr #2
   25100:	andeq	r5, r2, r4, lsr #2
   25104:	andeq	r5, r2, r8, ror #2
   25108:	andeq	r5, r2, r4, lsr #2
   2510c:	andeq	r5, r2, r0, lsl r1
   25110:	movw	r2, #1060	; 0x424
   25114:	movt	r2, #10
   25118:	mov	r1, r6
   2511c:	ldr	r0, [r2]
   25120:	bl	2506c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111e0>
   25124:	ldr	fp, [fp]
   25128:	cmp	fp, #0
   2512c:	bne	250c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11234>
   25130:	movw	r3, #1032	; 0x408
   25134:	movt	r3, #10
   25138:	ldrb	r3, [r3, #1]
   2513c:	tst	r3, #8
   25140:	beq	25150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x112c4>
   25144:	movw	r0, #12832	; 0x3220
   25148:	movt	r0, #5
   2514c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   25150:	ldr	r2, [sp, #20]
   25154:	ldr	r3, [r7]
   25158:	cmp	r2, r3
   2515c:	bne	253e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11558>
   25160:	add	sp, sp, #28
   25164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25168:	ldr	r2, [r4, #32]
   2516c:	orr	r5, r6, #1
   25170:	ldr	sl, [r2, #32]
   25174:	b	2517c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x112f0>
   25178:	mov	sl, r2
   2517c:	ldr	r0, [fp, #8]
   25180:	mov	r1, r5
   25184:	bl	2506c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111e0>
   25188:	ldr	r2, [r4, #32]
   2518c:	ldr	r2, [r2, #32]
   25190:	cmp	r2, sl
   25194:	bne	25178 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x112ec>
   25198:	b	25124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11298>
   2519c:	ldr	r2, [fp, #8]
   251a0:	str	r2, [r8, #244]	; 0xf4
   251a4:	b	25124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11298>
   251a8:	ldr	r0, [fp, #8]
   251ac:	ldr	r2, [r0, #24]
   251b0:	cmp	r2, #0
   251b4:	beq	25124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11298>
   251b8:	bl	2e330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4a4>
   251bc:	b	25124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11298>
   251c0:	ldr	r0, [fp, #8]
   251c4:	mov	r1, r6
   251c8:	bl	2506c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111e0>
   251cc:	b	25124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11298>
   251d0:	tst	r6, #2
   251d4:	bne	25244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   251d8:	ldr	r5, [fp, #8]
   251dc:	cmp	r5, #0
   251e0:	beq	25244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   251e4:	ldrb	r2, [r5]
   251e8:	cmp	r2, #0
   251ec:	beq	25234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113a8>
   251f0:	cmp	r2, #63	; 0x3f
   251f4:	beq	25244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   251f8:	cmp	r2, #42	; 0x2a
   251fc:	beq	25244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   25200:	cmp	r2, #91	; 0x5b
   25204:	beq	25244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   25208:	mov	r1, r5
   2520c:	b	25228 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1139c>
   25210:	cmp	r2, #63	; 0x3f
   25214:	beq	25244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   25218:	cmp	r2, #42	; 0x2a
   2521c:	beq	25244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   25220:	cmp	r2, #91	; 0x5b
   25224:	beq	25244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   25228:	ldrb	r2, [r1, #1]!
   2522c:	cmp	r2, #0
   25230:	bne	25210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11384>
   25234:	mov	r0, r5
   25238:	bl	1e448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa5bc>
   2523c:	cmp	r0, #0
   25240:	beq	253cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11540>
   25244:	ldr	r0, [fp, #24]
   25248:	mov	r1, r6
   2524c:	bl	2506c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111e0>
   25250:	b	25124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11298>
   25254:	ldrb	r2, [fp, #37]	; 0x25
   25258:	tst	r2, #4
   2525c:	movweq	r5, #65288	; 0xff08
   25260:	movteq	r5, #9
   25264:	beq	25300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11474>
   25268:	ldr	r1, [r8, #244]	; 0xf4
   2526c:	cmp	r6, #0
   25270:	movw	r5, #65288	; 0xff08
   25274:	movt	r5, #9
   25278:	str	r1, [fp, #32]
   2527c:	bne	25314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11488>
   25280:	add	r2, sp, #24
   25284:	mov	r1, #0
   25288:	mov	r0, fp
   2528c:	ldr	sl, [r9, #4]
   25290:	str	r1, [r2, #-12]!
   25294:	mov	r1, r2
   25298:	str	r2, [sp, #16]
   2529c:	bl	24460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x105d4>
   252a0:	ldr	r2, [sp, #12]
   252a4:	cmp	r0, #0
   252a8:	ldreq	r3, [sp, #4]
   252ac:	streq	r0, [r3, #4]
   252b0:	cmp	r2, #0
   252b4:	beq	25300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11474>
   252b8:	ldr	r2, [r9, #4]
   252bc:	cmp	r2, sl
   252c0:	beq	25394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11508>
   252c4:	mov	r2, #5
   252c8:	movw	r1, #12768	; 0x31e0
   252cc:	mov	r0, #0
   252d0:	movt	r1, #5
   252d4:	bl	13688 <dcgettext@plt>
   252d8:	ldr	r1, [fp, #8]
   252dc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   252e0:	ldr	r3, [sp]
   252e4:	ldr	r1, [sp, #12]
   252e8:	ldr	r2, [r3]
   252ec:	ldr	r2, [r2, #4]
   252f0:	str	r1, [r2]
   252f4:	ldr	r1, [sp, #16]
   252f8:	ldr	r2, [r3]
   252fc:	str	r1, [r2, #4]
   25300:	ldr	r2, [r5, #268]	; 0x10c
   25304:	cmp	fp, r2
   25308:	moveq	r2, #0
   2530c:	streq	r2, [r8, #268]	; 0x10c
   25310:	b	25124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11298>
   25314:	tst	r6, #2
   25318:	bne	253bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11530>
   2531c:	tst	r2, #2
   25320:	beq	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   25324:	ldr	r1, [fp, #16]
   25328:	cmp	r1, #0
   2532c:	beq	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   25330:	ldrb	r0, [r1, #40]	; 0x28
   25334:	and	r0, r0, #7
   25338:	cmp	r0, #2
   2533c:	beq	253d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1154c>
   25340:	cmp	r0, #1
   25344:	bne	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   25348:	ldr	r2, [r1, #40]	; 0x28
   2534c:	tst	r2, #2048	; 0x800
   25350:	beq	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   25354:	ldrb	r2, [fp, #36]	; 0x24
   25358:	lsrs	r2, r2, #7
   2535c:	beq	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   25360:	ldr	r2, [r1, #4]
   25364:	ldr	r2, [r2, #4]
   25368:	cmp	r2, #5
   2536c:	bne	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   25370:	ldr	r2, [r1, #168]	; 0xa8
   25374:	ldr	r2, [r2, #2492]	; 0x9bc
   25378:	tst	r2, #1
   2537c:	beq	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   25380:	ldrb	r2, [fp, #37]	; 0x25
   25384:	and	r2, r2, #253	; 0xfd
   25388:	orr	r2, r2, #16
   2538c:	strb	r2, [fp, #37]	; 0x25
   25390:	b	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   25394:	ldr	r2, [sp, #16]
   25398:	ldr	r1, [fp]
   2539c:	str	r1, [r2]
   253a0:	ldr	r2, [sp, #12]
   253a4:	str	r2, [fp]
   253a8:	ldr	r2, [r5, #268]	; 0x10c
   253ac:	cmp	fp, r2
   253b0:	moveq	r2, #0
   253b4:	streq	r2, [r8, #268]	; 0x10c
   253b8:	b	25124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11298>
   253bc:	ldr	r1, [r5, #268]	; 0x10c
   253c0:	cmp	r1, #0
   253c4:	bne	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   253c8:	b	2531c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11490>
   253cc:	mov	r0, r5
   253d0:	bl	24938 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10aac>
   253d4:	b	25244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113b8>
   253d8:	tst	r2, #1
   253dc:	bne	25280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x113f4>
   253e0:	b	25380 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x114f4>
   253e4:	bl	13694 <__stack_chk_fail@plt>
   253e8:	movw	r3, #65288	; 0xff08
   253ec:	movt	r3, #9
   253f0:	ldr	r2, [r3, #272]	; 0x110
   253f4:	cmp	r2, #0
   253f8:	beq	25404 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11578>
   253fc:	cmp	r1, #0
   25400:	bxne	lr
   25404:	movw	r2, #62432	; 0xf3e0
   25408:	movt	r2, #9
   2540c:	mov	r1, #1
   25410:	str	r1, [r3, #272]	; 0x110
   25414:	str	r0, [r2]
   25418:	bx	lr
   2541c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   25420:	mov	r6, r2
   25424:	mov	sl, r1
   25428:	mov	r2, #1
   2542c:	ldr	r1, [sp, #40]	; 0x28
   25430:	mov	r7, r3
   25434:	ldr	r9, [sp, #44]	; 0x2c
   25438:	ldr	r8, [sp, #32]
   2543c:	ldr	r5, [sp, #36]	; 0x24
   25440:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   25444:	movw	ip, #65288	; 0xff08
   25448:	movt	ip, #9
   2544c:	ldr	r3, [r0, #44]	; 0x2c
   25450:	mov	r4, r0
   25454:	str	r6, [r0, #80]	; 0x50
   25458:	cmp	r3, #0
   2545c:	streq	sl, [r0, #44]	; 0x2c
   25460:	cmp	r6, #2
   25464:	str	r0, [ip]
   25468:	add	r0, r0, #8
   2546c:	movne	r3, #0
   25470:	moveq	r3, #512	; 0x200
   25474:	str	r3, [r0, #68]	; 0x44
   25478:	mov	r3, #1
   2547c:	str	r3, [r4, #60]	; 0x3c
   25480:	bl	20f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0d4>
   25484:	movw	r2, #383	; 0x17f
   25488:	subs	r3, r9, r2
   2548c:	rsbs	r2, r3, #0
   25490:	adcs	r2, r2, r3
   25494:	ldrb	r3, [r4, #84]	; 0x54
   25498:	cmp	r2, #0
   2549c:	bfi	r3, r2, #6, #1
   254a0:	strb	r3, [r4, #84]	; 0x54
   254a4:	beq	254cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11640>
   254a8:	cmp	r7, #0
   254ac:	beq	254cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11640>
   254b0:	movw	r1, #12836	; 0x3224
   254b4:	mov	r0, #0
   254b8:	movt	r1, #5
   254bc:	mov	r2, #5
   254c0:	bl	13688 <dcgettext@plt>
   254c4:	mov	r1, #0
   254c8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   254cc:	mvn	r1, #0
   254d0:	mov	r0, r8
   254d4:	movw	r2, #12900	; 0x3264
   254d8:	movt	r2, #5
   254dc:	bl	2ec44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb8>
   254e0:	cmp	r0, #0
   254e4:	mvnlt	r1, #0
   254e8:	blt	25510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11684>
   254ec:	mov	r1, #0
   254f0:	mov	r2, #1
   254f4:	b	25504 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11678>
   254f8:	add	r1, r1, #1
   254fc:	cmp	r1, #32
   25500:	beq	25570 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116e4>
   25504:	cmp	r2, r0
   25508:	lsl	r2, r2, #1
   2550c:	bcc	254f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1166c>
   25510:	str	r1, [r4, #64]	; 0x40
   25514:	mov	r0, r7
   25518:	movw	r2, #12924	; 0x327c
   2551c:	mvn	r1, #0
   25520:	movt	r2, #5
   25524:	bl	2ec44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb8>
   25528:	cmp	r0, #0
   2552c:	mvnlt	r2, #0
   25530:	blt	25558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116cc>
   25534:	mov	r2, #0
   25538:	mov	r3, #1
   2553c:	b	2554c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116c0>
   25540:	add	r2, r2, #1
   25544:	cmp	r2, #32
   25548:	beq	25568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116dc>
   2554c:	cmp	r3, r0
   25550:	lsl	r3, r3, #1
   25554:	bcc	25540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116b4>
   25558:	str	r2, [r4, #68]	; 0x44
   2555c:	mov	r0, r4
   25560:	str	r5, [r4, #48]	; 0x30
   25564:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25568:	mov	r2, #0
   2556c:	b	25558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x116cc>
   25570:	mov	r1, #0
   25574:	b	25510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11684>
   25578:	movw	r3, #62408	; 0xf3c8
   2557c:	movt	r3, #9
   25580:	push	{r4, lr}
   25584:	mov	r0, #12
   25588:	ldr	r4, [r3]
   2558c:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   25590:	mov	r3, #11
   25594:	mov	r2, #0
   25598:	str	r3, [r0, #4]
   2559c:	movw	r3, #62432	; 0xf3e0
   255a0:	str	r2, [r0]
   255a4:	movt	r3, #9
   255a8:	ldr	r2, [r4, #4]
   255ac:	str	r0, [r2]
   255b0:	ldr	r3, [r3]
   255b4:	str	r0, [r4, #4]
   255b8:	str	r3, [r0, #8]
   255bc:	pop	{r4, pc}
   255c0:	movw	r3, #65288	; 0xff08
   255c4:	movt	r3, #9
   255c8:	ldr	r1, [r3, #212]	; 0xd4
   255cc:	cmp	r1, #0
   255d0:	movne	r0, #0
   255d4:	beq	255f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11764>
   255d8:	ldrd	r2, [r1, #16]
   255dc:	str	r0, [r1, #48]	; 0x30
   255e0:	strd	r2, [r1, #40]	; 0x28
   255e4:	ldr	r1, [r1, #8]
   255e8:	cmp	r1, #0
   255ec:	bne	255d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1174c>
   255f0:	movw	r3, #1048	; 0x418
   255f4:	movt	r3, #10
   255f8:	ldr	r3, [r3]
   255fc:	cmp	r3, #0
   25600:	beq	25620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11794>
   25604:	ldrb	r2, [r3, #84]	; 0x54
   25608:	and	r2, r2, #254	; 0xfe
   2560c:	bfc	r2, #1, #1
   25610:	strb	r2, [r3, #84]	; 0x54
   25614:	ldr	r3, [r3, #16]
   25618:	cmp	r3, #0
   2561c:	bne	25604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11778>
   25620:	movw	r3, #1088	; 0x440
   25624:	movt	r3, #10
   25628:	ldr	r3, [r3, #52]	; 0x34
   2562c:	ldr	ip, [r3, #100]	; 0x64
   25630:	cmp	ip, #0
   25634:	bxeq	lr
   25638:	mov	r0, #0
   2563c:	mov	r1, #0
   25640:	ldrd	r2, [ip, #48]	; 0x30
   25644:	strd	r0, [ip, #48]	; 0x30
   25648:	strd	r2, [ip, #56]	; 0x38
   2564c:	ldr	ip, [ip, #12]
   25650:	cmp	ip, #0
   25654:	bne	25640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117b4>
   25658:	bx	lr
   2565c:	movw	r3, #1480	; 0x5c8
   25660:	movt	r3, #10
   25664:	push	{r4, r5, r6, lr}
   25668:	ldr	r2, [r3]
   2566c:	cmp	r2, #1
   25670:	beq	25694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11808>
   25674:	mov	r2, #0
   25678:	mov	ip, #1
   2567c:	mov	r0, r2
   25680:	mov	r1, r2
   25684:	str	r2, [r3, #56]	; 0x38
   25688:	str	ip, [r3]
   2568c:	bl	23e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffac>
   25690:	bl	255c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11734>
   25694:	movw	r3, #1048	; 0x418
   25698:	movt	r3, #10
   2569c:	ldr	r1, [r3]
   256a0:	cmp	r1, #0
   256a4:	popeq	{r4, r5, r6, pc}
   256a8:	movw	r3, #1088	; 0x440
   256ac:	movt	r3, #10
   256b0:	ldrb	ip, [r3, #3]
   256b4:	ldr	r6, [r3, #52]	; 0x34
   256b8:	ubfx	ip, ip, #1, #1
   256bc:	ldr	r3, [r1, #72]	; 0x48
   256c0:	cmp	r3, #0
   256c4:	blt	25704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11878>
   256c8:	ldr	r0, [r1, #28]
   256cc:	cmp	r0, #0
   256d0:	beq	25704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11878>
   256d4:	ldrd	r2, [r0, #56]	; 0x38
   256d8:	orrs	r4, r2, r3
   256dc:	bne	25704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11878>
   256e0:	ldr	r5, [r0, #20]
   256e4:	tst	r5, #2097152	; 0x200000
   256e8:	bne	25704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11878>
   256ec:	ldr	r4, [r0, #12]
   256f0:	cmp	r4, #0
   256f4:	beq	25714 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11888>
   256f8:	ldr	r3, [r4, #16]
   256fc:	cmp	r3, r0
   25700:	beq	25720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11894>
   25704:	ldr	r1, [r1, #16]
   25708:	cmp	r1, #0
   2570c:	bne	256bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11830>
   25710:	pop	{r4, r5, r6, pc}
   25714:	ldr	r3, [r6, #104]	; 0x68
   25718:	cmp	r3, r0
   2571c:	bne	25704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11878>
   25720:	ldr	r3, [r0, #192]	; 0xc0
   25724:	cmp	r3, #0
   25728:	beq	25754 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x118c8>
   2572c:	ldr	r2, [r3, #20]
   25730:	tst	r2, #32768	; 0x8000
   25734:	bne	25748 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x118bc>
   25738:	tst	r2, #1048576	; 0x100000
   2573c:	bne	25704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11878>
   25740:	cmp	ip, #0
   25744:	bne	25704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11878>
   25748:	ldr	r3, [r3, #192]	; 0xc0
   2574c:	cmp	r3, #0
   25750:	bne	2572c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x118a0>
   25754:	ldrb	r3, [r1, #84]	; 0x54
   25758:	tst	r3, #16
   2575c:	orreq	r3, r3, #8
   25760:	strbeq	r3, [r1, #84]	; 0x54
   25764:	ldr	r3, [r0, #16]
   25768:	orr	r5, r5, #32768	; 0x8000
   2576c:	str	r5, [r0, #20]
   25770:	cmp	r3, #0
   25774:	streq	r4, [r6, #100]	; 0x64
   25778:	strne	r4, [r3, #12]
   2577c:	cmp	r4, #0
   25780:	strne	r3, [r4, #16]
   25784:	streq	r3, [r6, #104]	; 0x68
   25788:	ldr	r3, [r6, #108]	; 0x6c
   2578c:	sub	r3, r3, #1
   25790:	str	r3, [r6, #108]	; 0x6c
   25794:	b	25704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11878>
   25798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2579c:	movw	r9, #1480	; 0x5c8
   257a0:	movt	r9, #10
   257a4:	sub	sp, sp, #84	; 0x54
   257a8:	mov	r3, #0
   257ac:	mov	r2, #2
   257b0:	str	r3, [r9, #56]	; 0x38
   257b4:	mov	r8, r0
   257b8:	str	r2, [r9]
   257bc:	mov	sl, r1
   257c0:	bl	23e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffac>
   257c4:	ldr	r3, [r9, #56]	; 0x38
   257c8:	cmp	r3, #3
   257cc:	beq	257e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11954>
   257d0:	mov	r3, #6
   257d4:	str	r3, [r9, #56]	; 0x38
   257d8:	add	sp, sp, #84	; 0x54
   257dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   257e0:	movw	r4, #1088	; 0x440
   257e4:	movt	r4, #10
   257e8:	ldrb	r3, [r4, #3]
   257ec:	tst	r3, #4
   257f0:	beq	259f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b64>
   257f4:	ldrd	r6, [r9, #80]	; 0x50
   257f8:	orrs	r0, r6, r7
   257fc:	beq	259f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b64>
   25800:	ldrd	r0, [r9, #96]	; 0x60
   25804:	ldrd	r2, [r9, #96]	; 0x60
   25808:	adds	r0, r0, r6
   2580c:	ldr	ip, [r4, #52]	; 0x34
   25810:	adc	r1, r1, r7
   25814:	rsbs	r2, r2, #0
   25818:	rsc	r3, r3, #0
   2581c:	strd	r2, [sp, #16]
   25820:	subs	r2, r0, #1
   25824:	sbc	r3, r1, #0
   25828:	ldrd	r0, [r9, #72]	; 0x48
   2582c:	ldr	ip, [ip, #104]	; 0x68
   25830:	strd	r0, [sp]
   25834:	ldrd	r0, [sp, #16]
   25838:	and	r0, r0, r2
   2583c:	and	r1, r1, r3
   25840:	ldrd	r2, [sp]
   25844:	strd	r0, [sp, #40]	; 0x28
   25848:	subs	r0, r0, r2
   2584c:	sbc	r1, r1, r3
   25850:	cmp	ip, #0
   25854:	strd	r0, [sp, #16]
   25858:	ldrdeq	r6, [r9, #64]	; 0x40
   2585c:	beq	25980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11af4>
   25860:	movw	r3, #65288	; 0xff08
   25864:	movt	r3, #9
   25868:	strd	r6, [sp, #24]
   2586c:	mov	lr, #1
   25870:	ldr	r5, [r3, #8]
   25874:	ldrd	r6, [r9, #64]	; 0x40
   25878:	ldrd	r0, [sp, #24]
   2587c:	ldrd	r2, [sp]
   25880:	str	r5, [sp, #12]
   25884:	subs	r0, r0, r2
   25888:	sbc	r1, r1, r3
   2588c:	str	r8, [sp, #56]	; 0x38
   25890:	strd	r0, [sp, #24]
   25894:	rsb	r3, r5, #32
   25898:	sub	r0, r5, #32
   2589c:	str	r3, [sp, #48]	; 0x30
   258a0:	str	r0, [sp, #52]	; 0x34
   258a4:	str	sl, [sp, #60]	; 0x3c
   258a8:	str	r4, [sp, #64]	; 0x40
   258ac:	str	r9, [sp, #68]	; 0x44
   258b0:	ldr	r1, [ip, #20]
   258b4:	tst	r1, #1
   258b8:	beq	25964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ad8>
   258bc:	ldrd	r2, [ip, #32]
   258c0:	cmp	r3, r7
   258c4:	cmpeq	r2, r6
   258c8:	bcc	25964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ad8>
   258cc:	ldrd	r4, [sp, #24]
   258d0:	movw	r0, #1026	; 0x402
   258d4:	and	r0, r1, r0
   258d8:	cmp	r3, r5
   258dc:	cmpeq	r2, r4
   258e0:	bcs	25964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ad8>
   258e4:	cmp	r0, #1024	; 0x400
   258e8:	strdeq	r2, [sp, #32]
   258ec:	beq	25920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11a94>
   258f0:	ldr	r0, [ip, #48]	; 0x30
   258f4:	ldr	r5, [sp, #12]
   258f8:	ldr	r1, [ip, #52]	; 0x34
   258fc:	lsr	sl, r0, r5
   25900:	ldr	r0, [sp, #48]	; 0x30
   25904:	ldr	r4, [sp, #52]	; 0x34
   25908:	orr	sl, sl, r1, lsl r0
   2590c:	lsr	fp, r1, r5
   25910:	orr	sl, sl, r1, lsr r4
   25914:	adds	r0, sl, r2
   25918:	adc	r1, fp, r3
   2591c:	strd	r0, [sp, #32]
   25920:	ldrd	r0, [sp, #16]
   25924:	ldrd	r4, [sp, #32]
   25928:	adds	r0, r0, r2
   2592c:	adc	r1, r1, r3
   25930:	ldr	r3, [ip, #92]	; 0x5c
   25934:	subs	r0, r0, r4
   25938:	sbc	r1, r1, r5
   2593c:	sub	r4, r3, #32
   25940:	rsb	r2, r3, #32
   25944:	lsl	r9, lr, r4
   25948:	lsl	r8, lr, r3
   2594c:	orr	r9, r9, lr, lsr r2
   25950:	rsbs	r2, r8, #0
   25954:	rsc	r3, r9, #0
   25958:	and	r4, r0, r2
   2595c:	and	r5, r1, r3
   25960:	strd	r4, [sp, #16]
   25964:	ldr	ip, [ip, #16]
   25968:	cmp	ip, #0
   2596c:	bne	258b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11a24>
   25970:	ldr	r8, [sp, #56]	; 0x38
   25974:	ldr	sl, [sp, #60]	; 0x3c
   25978:	ldr	r4, [sp, #64]	; 0x40
   2597c:	ldr	r9, [sp, #68]	; 0x44
   25980:	ldrd	r2, [sp, #16]
   25984:	movw	r5, #1480	; 0x5c8
   25988:	movt	r5, #10
   2598c:	cmp	r3, r7
   25990:	cmpeq	r2, r6
   25994:	mov	r3, #4
   25998:	str	r3, [r9, #56]	; 0x38
   2599c:	bcc	25acc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c40>
   259a0:	ldrd	r2, [sp, #16]
   259a4:	movw	r5, #1480	; 0x5c8
   259a8:	movt	r5, #10
   259ac:	strd	r2, [r9, #64]	; 0x40
   259b0:	bl	255c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11734>
   259b4:	mov	r0, r8
   259b8:	mov	r1, sl
   259bc:	bl	23e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffac>
   259c0:	ldrd	r2, [r9, #80]	; 0x50
   259c4:	ldrd	r0, [sp, #40]	; 0x28
   259c8:	cmp	r1, r3
   259cc:	cmpeq	r0, r2
   259d0:	movcs	r0, r2
   259d4:	movcs	r1, r3
   259d8:	bcc	25aac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c20>
   259dc:	ldrd	r2, [r9, #64]	; 0x40
   259e0:	str	r0, [r4, #136]	; 0x88
   259e4:	str	r1, [r4, #140]	; 0x8c
   259e8:	strd	r2, [r4, #128]	; 0x80
   259ec:	b	257d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1194c>
   259f0:	ldrd	r4, [r9, #96]	; 0x60
   259f4:	movw	ip, #1480	; 0x5c8
   259f8:	ldrd	r2, [r9, #64]	; 0x40
   259fc:	movt	ip, #10
   25a00:	ldrd	r6, [r9, #88]	; 0x58
   25a04:	strd	r4, [sp, #16]
   25a08:	strd	r2, [sp, #24]
   25a0c:	rsbs	r2, r2, #0
   25a10:	rsc	r3, r3, #0
   25a14:	subs	r4, r4, #1
   25a18:	sbc	r5, r5, #0
   25a1c:	and	r2, r2, r4
   25a20:	and	r3, r3, r5
   25a24:	and	r4, r4, r6
   25a28:	orrs	r0, r2, r3
   25a2c:	and	r5, r5, r7
   25a30:	moveq	r1, #0
   25a34:	movne	r1, #1
   25a38:	orrs	r0, r4, r5
   25a3c:	moveq	r1, #0
   25a40:	andne	r1, r1, #1
   25a44:	cmp	r1, #0
   25a48:	beq	257d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11944>
   25a4c:	ldrd	r0, [sp, #24]
   25a50:	eor	r6, r6, r0
   25a54:	eor	r7, r7, r1
   25a58:	ldrd	r0, [sp, #16]
   25a5c:	rsbs	r0, r0, #0
   25a60:	rsc	r1, r1, #0
   25a64:	and	r6, r6, r0
   25a68:	and	r7, r7, r1
   25a6c:	orrs	r1, r6, r7
   25a70:	beq	257d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11944>
   25a74:	adds	r2, r2, r4
   25a78:	adc	r3, r3, r5
   25a7c:	ldrd	r4, [sp, #16]
   25a80:	cmp	r5, r3
   25a84:	cmpeq	r4, r2
   25a88:	bcc	257d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11944>
   25a8c:	mov	r3, #5
   25a90:	str	r3, [ip, #56]	; 0x38
   25a94:	bl	255c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11734>
   25a98:	mov	r0, r8
   25a9c:	mov	r1, sl
   25aa0:	add	sp, sp, #84	; 0x54
   25aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25aa8:	b	23e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffac>
   25aac:	strd	r6, [r5, #64]	; 0x40
   25ab0:	bl	255c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11734>
   25ab4:	mov	r0, r8
   25ab8:	mov	r1, sl
   25abc:	bl	23e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xffac>
   25ac0:	ldr	r0, [r5, #80]	; 0x50
   25ac4:	ldr	r1, [r5, #84]	; 0x54
   25ac8:	b	259dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b50>
   25acc:	movw	r0, #10132	; 0x2794
   25ad0:	movw	r1, #5548	; 0x15ac
   25ad4:	movt	r0, #5
   25ad8:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   25adc:	ldrd	r6, [r5, #64]	; 0x40
   25ae0:	b	259a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11b14>
   25ae4:	push	{r4, r5, r6, r7, r8, lr}
   25ae8:	movw	r4, #1088	; 0x440
   25aec:	movt	r4, #10
   25af0:	movw	r8, #63248	; 0xf710
   25af4:	movt	r8, #9
   25af8:	sub	sp, sp, #8
   25afc:	ldr	r3, [r4, #24]
   25b00:	ldr	r2, [r8]
   25b04:	cmp	r3, #1
   25b08:	str	r2, [sp, #4]
   25b0c:	bls	25b30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ca4>
   25b10:	cmp	r0, #0
   25b14:	bne	25ba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d14>
   25b18:	ldr	r2, [sp, #4]
   25b1c:	ldr	r3, [r8]
   25b20:	cmp	r2, r3
   25b24:	bne	25bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d30>
   25b28:	add	sp, sp, #8
   25b2c:	pop	{r4, r5, r6, r7, r8, pc}
   25b30:	ldr	r7, [r4, #84]	; 0x54
   25b34:	mov	r5, #0
   25b38:	str	r5, [r4, #84]	; 0x54
   25b3c:	cmp	r7, r5
   25b40:	movne	r6, r4
   25b44:	beq	25ba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d14>
   25b48:	mvn	r3, #0
   25b4c:	b	25b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11cc8>
   25b50:	ldr	r3, [r6, #88]	; 0x58
   25b54:	mov	r0, #3
   25b58:	add	r3, r3, #1
   25b5c:	str	r3, [r4, #88]	; 0x58
   25b60:	bl	23e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   25b64:	bl	255c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11734>
   25b68:	mov	r0, sp
   25b6c:	mov	r1, #0
   25b70:	str	r5, [sp]
   25b74:	bl	25798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1190c>
   25b78:	ldr	r2, [sp]
   25b7c:	movw	r3, #1088	; 0x440
   25b80:	movt	r3, #10
   25b84:	cmp	r2, #0
   25b88:	bne	25b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11cc4>
   25b8c:	ldr	r2, [r3, #84]	; 0x54
   25b90:	subs	r7, r7, #1
   25b94:	add	r2, r2, #1
   25b98:	str	r2, [r3, #84]	; 0x54
   25b9c:	bne	25b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11cbc>
   25ba0:	mov	r0, #3
   25ba4:	bl	23e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   25ba8:	bl	255c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11734>
   25bac:	mov	r0, #0
   25bb0:	mov	r1, #1
   25bb4:	bl	25798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1190c>
   25bb8:	b	25b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c8c>
   25bbc:	bl	13694 <__stack_chk_fail@plt>
   25bc0:	push	{r4, lr}
   25bc4:	subs	r4, r0, #0
   25bc8:	popeq	{r4, pc}
   25bcc:	mov	r0, #8
   25bd0:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   25bd4:	movw	r3, #1088	; 0x440
   25bd8:	movt	r3, #10
   25bdc:	ldr	r2, [r3, #68]	; 0x44
   25be0:	stm	r0, {r2, r4}
   25be4:	str	r0, [r3, #68]	; 0x44
   25be8:	pop	{r4, pc}
   25bec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25bf0:	subs	r4, r1, #0
   25bf4:	sub	sp, sp, #12
   25bf8:	mov	r6, r0
   25bfc:	mov	r8, r2
   25c00:	beq	25c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11dc4>
   25c04:	movw	r7, #65288	; 0xff08
   25c08:	mov	r5, #0
   25c0c:	movt	r7, #9
   25c10:	mov	r9, #1
   25c14:	b	25c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d90>
   25c18:	mov	r4, r3
   25c1c:	ldr	r0, [r4, #4]
   25c20:	movw	r1, #12760	; 0x31d8
   25c24:	movt	r1, #5
   25c28:	cmp	r0, #0
   25c2c:	beq	25c3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11db0>
   25c30:	bl	13490 <strcmp@plt>
   25c34:	cmp	r0, #0
   25c38:	streq	r9, [r7, #276]	; 0x114
   25c3c:	ldr	r3, [r4]
   25c40:	str	r5, [r4]
   25c44:	mov	r5, r4
   25c48:	cmp	r3, #0
   25c4c:	bne	25c18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d8c>
   25c50:	cmp	r6, #0
   25c54:	beq	25f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120f4>
   25c58:	ldr	r2, [r6]
   25c5c:	cmp	r2, #0
   25c60:	beq	25c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11df0>
   25c64:	ldrb	r3, [r2]
   25c68:	cmp	r3, #42	; 0x2a
   25c6c:	bne	25dbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f30>
   25c70:	ldrb	r3, [r2, #1]
   25c74:	cmp	r3, #0
   25c78:	streq	r3, [r6]
   25c7c:	movw	r3, #62408	; 0xf3c8
   25c80:	movt	r3, #9
   25c84:	mov	r0, #60	; 0x3c
   25c88:	ldr	r5, [r3]
   25c8c:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   25c90:	mov	r2, #0
   25c94:	mov	r3, #4
   25c98:	stm	r0, {r2, r3}
   25c9c:	mov	r7, r0
   25ca0:	ldr	r3, [r5, #4]
   25ca4:	ldr	r1, [r6, #8]
   25ca8:	str	r0, [r3]
   25cac:	subs	r3, r1, #1
   25cb0:	rsbs	r1, r3, #0
   25cb4:	str	r0, [r5, #4]
   25cb8:	adcs	r1, r1, r3
   25cbc:	ldr	r2, [r6]
   25cc0:	ldr	r3, [r6, #12]
   25cc4:	str	r1, [r0, #12]
   25cc8:	str	r2, [r0, #8]
   25ccc:	str	r3, [r0, #56]	; 0x38
   25cd0:	cmp	r4, #0
   25cd4:	mov	r1, r7
   25cd8:	mov	r3, #0
   25cdc:	str	r4, [r7, #16]
   25ce0:	str	r8, [r7, #20]
   25ce4:	movw	r2, #65292	; 0xff0c
   25ce8:	str	r3, [r1, #24]!
   25cec:	movt	r2, #1
   25cf0:	str	r1, [r7, #28]
   25cf4:	str	r3, [r7, #36]	; 0x24
   25cf8:	str	r3, [r7, #40]	; 0x28
   25cfc:	str	r3, [r7, #44]	; 0x2c
   25d00:	str	r3, [r7, #48]	; 0x30
   25d04:	str	r3, [r7, #52]	; 0x34
   25d08:	str	r2, [r7, #32]
   25d0c:	beq	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25d10:	ldr	r8, [r4, #4]
   25d14:	cmp	r8, r3
   25d18:	beq	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25d1c:	mov	r9, r3
   25d20:	mov	r6, r4
   25d24:	mov	ip, r8
   25d28:	mov	r5, #1
   25d2c:	ldrb	r1, [ip]
   25d30:	cmp	r1, #0
   25d34:	beq	25d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ef0>
   25d38:	cmp	r1, #63	; 0x3f
   25d3c:	beq	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25d40:	cmp	r1, #42	; 0x2a
   25d44:	beq	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25d48:	cmp	r1, #91	; 0x5b
   25d4c:	beq	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25d50:	mov	r2, ip
   25d54:	b	25d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ee4>
   25d58:	cmp	r3, #63	; 0x3f
   25d5c:	beq	25dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f4c>
   25d60:	cmp	r3, #42	; 0x2a
   25d64:	beq	25dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f4c>
   25d68:	cmp	r3, #91	; 0x5b
   25d6c:	beq	25dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f4c>
   25d70:	ldrb	r3, [r2, #1]!
   25d74:	cmp	r3, #0
   25d78:	bne	25d58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ecc>
   25d7c:	ldr	r6, [r6]
   25d80:	cmp	r6, #0
   25d84:	beq	25e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11fbc>
   25d88:	ldr	ip, [r6, #4]
   25d8c:	add	r5, r5, #1
   25d90:	cmp	ip, #0
   25d94:	bne	25d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11ea0>
   25d98:	add	sp, sp, #12
   25d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25da0:	cmp	r3, #63	; 0x3f
   25da4:	beq	25c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11df0>
   25da8:	cmp	r3, #42	; 0x2a
   25dac:	beq	25c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11df0>
   25db0:	cmp	r3, #91	; 0x5b
   25db4:	beq	25c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11df0>
   25db8:	ldrb	r3, [r2, #1]!
   25dbc:	cmp	r3, #0
   25dc0:	bne	25da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f14>
   25dc4:	movw	r3, #65288	; 0xff08
   25dc8:	movt	r3, #9
   25dcc:	mov	r2, #1
   25dd0:	str	r2, [r3, #140]	; 0x8c
   25dd4:	b	25c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11df0>
   25dd8:	cmp	r1, #91	; 0x5b
   25ddc:	beq	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25de0:	mov	r2, ip
   25de4:	mov	r0, #0
   25de8:	b	25e00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f74>
   25dec:	cmp	r3, #63	; 0x3f
   25df0:	beq	25e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f8c>
   25df4:	cmp	r3, #91	; 0x5b
   25df8:	beq	25e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f8c>
   25dfc:	mov	r0, r1
   25e00:	ldrb	r3, [r2, #1]!
   25e04:	add	r1, r0, #1
   25e08:	cmp	r3, #0
   25e0c:	beq	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25e10:	cmp	r3, #42	; 0x2a
   25e14:	bne	25dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f60>
   25e18:	cmp	r1, #3
   25e1c:	bls	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25e20:	cmp	r3, #42	; 0x2a
   25e24:	bne	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25e28:	add	r0, ip, r0
   25e2c:	ldrb	r3, [r0, #2]
   25e30:	cmp	r3, #0
   25e34:	bne	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25e38:	ldr	r6, [r6]
   25e3c:	add	r9, r9, #1
   25e40:	cmp	r6, #0
   25e44:	bne	25d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11efc>
   25e48:	cmp	r5, #4
   25e4c:	strle	r9, [sp, #4]
   25e50:	movle	r3, r4
   25e54:	bgt	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25e58:	ldr	r9, [r3]
   25e5c:	cmp	r9, #0
   25e60:	beq	25fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12140>
   25e64:	ldr	fp, [r3, #4]
   25e68:	mov	sl, r9
   25e6c:	ldrb	r6, [fp]
   25e70:	cmp	r6, #0
   25e74:	ldr	r1, [sl, #4]
   25e78:	beq	25fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12134>
   25e7c:	cmp	r6, #63	; 0x3f
   25e80:	beq	25f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120d8>
   25e84:	cmp	r6, #42	; 0x2a
   25e88:	beq	25f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120d8>
   25e8c:	cmp	r6, #91	; 0x5b
   25e90:	beq	25f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120d8>
   25e94:	mov	r3, fp
   25e98:	mov	r0, #0
   25e9c:	b	25eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1202c>
   25ea0:	cmp	ip, #63	; 0x3f
   25ea4:	beq	25ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1203c>
   25ea8:	cmp	ip, #42	; 0x2a
   25eac:	beq	25ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1203c>
   25eb0:	cmp	ip, #91	; 0x5b
   25eb4:	beq	25ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1203c>
   25eb8:	ldrb	ip, [r3, #1]!
   25ebc:	add	r0, r0, #1
   25ec0:	cmp	ip, #0
   25ec4:	bne	25ea0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12014>
   25ec8:	ldrb	r3, [r1]
   25ecc:	cmp	r3, #0
   25ed0:	beq	25f78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120ec>
   25ed4:	cmp	r3, #63	; 0x3f
   25ed8:	beq	25f5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120d0>
   25edc:	cmp	r3, #42	; 0x2a
   25ee0:	beq	25f5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120d0>
   25ee4:	cmp	r3, #91	; 0x5b
   25ee8:	movne	lr, r1
   25eec:	movne	r2, #0
   25ef0:	bne	25f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12084>
   25ef4:	b	25f5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x120d0>
   25ef8:	cmp	r3, #63	; 0x3f
   25efc:	beq	25f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12094>
   25f00:	cmp	r3, #42	; 0x2a
   25f04:	beq	25f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12094>
   25f08:	cmp	r3, #91	; 0x5b
   25f0c:	beq	25f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12094>
   25f10:	ldrb	r3, [lr, #1]!
   25f14:	add	r2, r2, #1
   25f18:	cmp	r3, #0
   25f1c:	bne	25ef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1206c>
   25f20:	cmp	ip, #0
   25f24:	addeq	r0, r0, #1
   25f28:	cmp	r3, #0
   25f2c:	addeq	r2, r2, #1
   25f30:	cmp	r2, r0
   25f34:	movcs	r2, r0
   25f38:	mov	r0, fp
   25f3c:	bl	1364c <memcmp@plt>
   25f40:	cmp	r0, #0
   25f44:	beq	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   25f48:	ldr	sl, [sl]
   25f4c:	cmp	sl, #0
   25f50:	bne	25e70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11fe4>
   25f54:	mov	r3, r9
   25f58:	b	25e58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11fcc>
   25f5c:	mov	r2, #0
   25f60:	b	25f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12094>
   25f64:	ldrb	r3, [r1]
   25f68:	mov	ip, r6
   25f6c:	mov	r0, #0
   25f70:	cmp	r3, #0
   25f74:	bne	25ed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12048>
   25f78:	mov	r2, r3
   25f7c:	b	25f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12094>
   25f80:	movw	r3, #62408	; 0xf3c8
   25f84:	movt	r3, #9
   25f88:	mov	r0, #60	; 0x3c
   25f8c:	ldr	r5, [r3]
   25f90:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   25f94:	mov	r3, #4
   25f98:	str	r6, [r0]
   25f9c:	mov	r7, r0
   25fa0:	str	r3, [r0, #4]
   25fa4:	ldr	r3, [r5, #4]
   25fa8:	str	r0, [r3]
   25fac:	str	r0, [r5, #4]
   25fb0:	str	r6, [r0, #8]
   25fb4:	str	r6, [r0, #12]
   25fb8:	str	r6, [r0, #56]	; 0x38
   25fbc:	b	25cd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11e44>
   25fc0:	mov	ip, r6
   25fc4:	mov	r0, r6
   25fc8:	b	25ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1203c>
   25fcc:	ldr	r9, [sp, #4]
   25fd0:	movw	r3, #513	; 0x201
   25fd4:	add	r5, r9, r5, lsl #8
   25fd8:	cmp	r5, r3
   25fdc:	beq	260e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1225c>
   25fe0:	ble	2606c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121e0>
   25fe4:	movw	r3, #770	; 0x302
   25fe8:	cmp	r5, r3
   25fec:	beq	260f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1226c>
   25ff0:	add	r3, r3, #256	; 0x100
   25ff4:	cmp	r5, r3
   25ff8:	movweq	r3, #65492	; 0xffd4
   25ffc:	movteq	r3, #1
   26000:	streq	r3, [r7, #32]
   26004:	bne	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   26008:	mov	r2, r8
   2600c:	mov	r0, r4
   26010:	mov	r1, #0
   26014:	ldrb	r3, [r2]
   26018:	cmp	r3, #0
   2601c:	bne	26040 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121b4>
   26020:	b	2605c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121d0>
   26024:	cmp	r3, #42	; 0x2a
   26028:	beq	26048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121bc>
   2602c:	cmp	r3, #91	; 0x5b
   26030:	beq	26048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121bc>
   26034:	ldrb	r3, [r2, #1]!
   26038:	cmp	r3, #0
   2603c:	beq	2605c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121d0>
   26040:	cmp	r3, #63	; 0x3f
   26044:	bne	26024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12198>
   26048:	ldr	r0, [r0]
   2604c:	cmp	r0, #0
   26050:	beq	26090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12204>
   26054:	ldr	r2, [r0, #4]
   26058:	b	26014 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12188>
   2605c:	add	r3, r7, r1, lsl #2
   26060:	add	r1, r1, #1
   26064:	str	r0, [r3, #36]	; 0x24
   26068:	b	26048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x121bc>
   2606c:	cmp	r5, #256	; 0x100
   26070:	beq	26108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1227c>
   26074:	movw	r3, #257	; 0x101
   26078:	cmp	r5, r3
   2607c:	movweq	r3, #65164	; 0xfe8c
   26080:	movteq	r3, #1
   26084:	streq	r3, [r7, #32]
   26088:	beq	26008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1217c>
   2608c:	b	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   26090:	mov	r2, r8
   26094:	ldrb	r3, [r2]
   26098:	cmp	r3, #0
   2609c:	bne	260c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12234>
   260a0:	b	260d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12248>
   260a4:	cmp	r3, #42	; 0x2a
   260a8:	beq	260c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1223c>
   260ac:	cmp	r3, #91	; 0x5b
   260b0:	beq	260c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1223c>
   260b4:	ldrb	r3, [r2, #1]!
   260b8:	cmp	r3, #0
   260bc:	beq	260d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12248>
   260c0:	cmp	r3, #63	; 0x3f
   260c4:	bne	260a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12218>
   260c8:	add	r3, r7, r1, lsl #2
   260cc:	add	r1, r1, #1
   260d0:	str	r4, [r3, #36]	; 0x24
   260d4:	ldr	r4, [r4]
   260d8:	cmp	r4, #0
   260dc:	beq	25d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11f0c>
   260e0:	ldr	r2, [r4, #4]
   260e4:	b	26094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12208>
   260e8:	movw	r3, #780	; 0x30c
   260ec:	movt	r3, #2
   260f0:	str	r3, [r7, #32]
   260f4:	b	26008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1217c>
   260f8:	movw	r3, #420	; 0x1a4
   260fc:	movt	r3, #2
   26100:	str	r3, [r7, #32]
   26104:	b	26008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1217c>
   26108:	movw	r3, #1068	; 0x42c
   2610c:	movt	r3, #2
   26110:	str	r3, [r7, #32]
   26114:	b	26008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1217c>
   26118:	push	{r3, r4, r5, r6, r7, lr}
   2611c:	movw	r3, #62408	; 0xf3c8
   26120:	movt	r3, #9
   26124:	mov	r5, r0
   26128:	mov	r0, #20
   2612c:	mov	r6, r1
   26130:	ldr	r4, [r3]
   26134:	mov	r7, r2
   26138:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2613c:	mov	r2, #3
   26140:	mov	r1, #0
   26144:	stm	r0, {r1, r2}
   26148:	ldr	r2, [r4, #4]
   2614c:	str	r0, [r2]
   26150:	str	r0, [r4, #4]
   26154:	str	r5, [r0, #8]
   26158:	str	r6, [r0, #12]
   2615c:	str	r7, [r0, #16]
   26160:	pop	{r3, r4, r5, r6, r7, pc}
   26164:	movw	r3, #65288	; 0xff08
   26168:	movt	r3, #9
   2616c:	ldr	r2, [r3, #256]	; 0x100
   26170:	cmp	r2, #0
   26174:	movw	r2, #1012	; 0x3f4
   26178:	movt	r2, #10
   2617c:	beq	26188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122fc>
   26180:	cmp	r1, #0
   26184:	beq	26194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12308>
   26188:	str	r0, [r3, #256]	; 0x100
   2618c:	str	r1, [r2]
   26190:	bx	lr
   26194:	ldr	ip, [r2]
   26198:	cmp	ip, #0
   2619c:	beq	26188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x122fc>
   261a0:	bx	lr
   261a4:	movw	r3, #62408	; 0xf3c8
   261a8:	movt	r3, #9
   261ac:	str	r0, [r3, #12]
   261b0:	bx	lr
   261b4:	push	{r3, r4, r5, lr}
   261b8:	movw	r3, #62408	; 0xf3c8
   261bc:	movt	r3, #9
   261c0:	mov	r5, r0
   261c4:	mov	r0, #12
   261c8:	ldr	r4, [r3]
   261cc:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   261d0:	mov	r2, #10
   261d4:	mov	r1, #0
   261d8:	stm	r0, {r1, r2}
   261dc:	ldr	r2, [r4, #4]
   261e0:	str	r0, [r2]
   261e4:	str	r0, [r4, #4]
   261e8:	str	r5, [r0, #8]
   261ec:	pop	{r3, r4, r5, pc}
   261f0:	ldrb	r3, [r0]
   261f4:	cmp	r3, #0
   261f8:	bxeq	lr
   261fc:	movw	r1, #65288	; 0xff08
   26200:	movt	r1, #9
   26204:	ldr	r2, [r1, #280]	; 0x118
   26208:	cmp	r3, #70	; 0x46
   2620c:	ldrb	r3, [r0, #1]!
   26210:	moveq	r2, #1
   26214:	cmp	r3, #0
   26218:	bne	26208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1237c>
   2621c:	str	r2, [r1, #280]	; 0x118
   26220:	bx	lr
   26224:	push	{r3, r4, r5, lr}
   26228:	movw	r3, #62408	; 0xf3c8
   2622c:	movt	r3, #9
   26230:	mov	r5, r0
   26234:	mov	r0, #20
   26238:	ldr	r4, [r3]
   2623c:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   26240:	mov	r2, #7
   26244:	mov	r1, #0
   26248:	stm	r0, {r1, r2}
   2624c:	ldr	r2, [r4, #4]
   26250:	str	r0, [r2]
   26254:	str	r0, [r4, #4]
   26258:	str	r5, [r0, #8]
   2625c:	pop	{r3, r4, r5, pc}
   26260:	movw	r3, #62408	; 0xf3c8
   26264:	movt	r3, #9
   26268:	push	{r4, r5, r6, lr}
   2626c:	mov	r5, r0
   26270:	mov	r0, #40	; 0x28
   26274:	ldr	r4, [r3]
   26278:	mov	r6, r1
   2627c:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   26280:	mov	r2, #8
   26284:	mov	r1, #0
   26288:	stm	r0, {r1, r2}
   2628c:	ldr	r2, [r4, #4]
   26290:	str	r0, [r2]
   26294:	str	r0, [r4, #4]
   26298:	str	r6, [r0, #12]
   2629c:	str	r5, [r0, #8]
   262a0:	pop	{r4, r5, r6, pc}
   262a4:	movw	ip, #62408	; 0xf3c8
   262a8:	movt	ip, #9
   262ac:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   262b0:	mov	r8, r0
   262b4:	mov	r0, #56	; 0x38
   262b8:	ldr	r6, [ip]
   262bc:	mov	fp, r3
   262c0:	mov	r9, r1
   262c4:	mov	sl, r2
   262c8:	ldr	r7, [sp, #40]	; 0x28
   262cc:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   262d0:	mov	r3, #9
   262d4:	mov	ip, #0
   262d8:	mov	r4, #0
   262dc:	mov	r5, #0
   262e0:	str	r3, [r0, #4]
   262e4:	str	ip, [r0]
   262e8:	ldr	r3, [r6, #4]
   262ec:	str	r0, [r3]
   262f0:	str	r0, [r6, #4]
   262f4:	str	r8, [r0, #8]
   262f8:	str	r9, [r0, #12]
   262fc:	str	sl, [r0, #16]
   26300:	str	fp, [r0, #20]
   26304:	str	r7, [r0, #24]
   26308:	str	ip, [r0, #40]	; 0x28
   2630c:	strd	r4, [r0, #32]
   26310:	strd	r4, [r0, #48]	; 0x30
   26314:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26318:	push	{r3, r4, r5, lr}
   2631c:	movw	r3, #62408	; 0xf3c8
   26320:	movt	r3, #9
   26324:	mov	r5, r0
   26328:	mov	r0, #12
   2632c:	ldr	r4, [r3]
   26330:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   26334:	mov	r1, #0
   26338:	mov	r2, #1
   2633c:	stm	r0, {r1, r2}
   26340:	ldr	r2, [r4, #4]
   26344:	str	r0, [r2]
   26348:	str	r0, [r4, #4]
   2634c:	str	r5, [r0, #8]
   26350:	pop	{r3, r4, r5, pc}
   26354:	push	{r3, r4, r5, lr}
   26358:	movw	r3, #62408	; 0xf3c8
   2635c:	movt	r3, #9
   26360:	mov	r5, r0
   26364:	mov	r0, #8
   26368:	ldr	r4, [r3]
   2636c:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   26370:	mov	r2, #0
   26374:	str	r5, [r0, #4]
   26378:	str	r2, [r0]
   2637c:	ldr	r2, [r4, #4]
   26380:	str	r0, [r2]
   26384:	str	r0, [r4, #4]
   26388:	pop	{r3, r4, r5, pc}
   2638c:	push	{r3, r4, r5, lr}
   26390:	movw	r4, #65288	; 0xff08
   26394:	movt	r4, #9
   26398:	mov	r5, r0
   2639c:	ldr	r3, [r4, #224]	; 0xe0
   263a0:	ldr	r2, [r3, #8]
   263a4:	cmp	r2, #0
   263a8:	beq	263c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1253c>
   263ac:	mov	r2, #5
   263b0:	movw	r1, #12944	; 0x3290
   263b4:	mov	r0, #0
   263b8:	movt	r1, #5
   263bc:	bl	13688 <dcgettext@plt>
   263c0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   263c4:	ldr	r3, [r4, #224]	; 0xe0
   263c8:	ldrb	r2, [r3, #37]	; 0x25
   263cc:	str	r5, [r3, #8]
   263d0:	orr	r2, r2, #4
   263d4:	str	r5, [r3, #12]
   263d8:	strb	r2, [r3, #37]	; 0x25
   263dc:	pop	{r3, r4, r5, pc}
   263e0:	movw	r3, #65288	; 0xff08
   263e4:	movt	r3, #9
   263e8:	str	r0, [r3, #284]	; 0x11c
   263ec:	bx	lr
   263f0:	push	{r4, r5, r6, lr}
   263f4:	movw	r4, #65288	; 0xff08
   263f8:	movt	r4, #9
   263fc:	sub	sp, sp, #8
   26400:	mov	r6, r0
   26404:	mov	r5, r2
   26408:	ldr	ip, [r4]
   2640c:	mov	r2, r1
   26410:	add	r0, ip, #32
   26414:	add	r1, ip, #36	; 0x24
   26418:	ldr	lr, [ip, #48]	; 0x30
   2641c:	adds	lr, lr, #0
   26420:	movne	lr, #1
   26424:	str	lr, [sp]
   26428:	ldr	ip, [ip, #44]	; 0x2c
   2642c:	adds	ip, ip, #0
   26430:	movne	ip, #1
   26434:	str	ip, [sp, #4]
   26438:	bl	22360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4d4>
   2643c:	ldr	r3, [r4]
   26440:	ldr	r2, [r3, #36]	; 0x24
   26444:	cmp	r2, #0
   26448:	beq	26460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x125d4>
   2644c:	str	r6, [r3, #40]	; 0x28
   26450:	str	r5, [r3, #56]	; 0x38
   26454:	add	sp, sp, #8
   26458:	pop	{r4, r5, r6, lr}
   2645c:	b	20fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd124>
   26460:	ldr	r2, [r3, #48]	; 0x30
   26464:	cmp	r2, #0
   26468:	bne	2644c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x125c0>
   2646c:	ldr	r2, [r3, #44]	; 0x2c
   26470:	cmp	r2, #0
   26474:	bne	2644c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x125c0>
   26478:	ldr	r2, [r3, #20]
   2647c:	ldr	r0, [r3, #32]
   26480:	ldr	r1, [r2, #32]
   26484:	cmp	r0, r1
   26488:	ldreq	r2, [r2, #36]	; 0x24
   2648c:	streq	r2, [r3, #36]	; 0x24
   26490:	b	2644c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x125c0>
   26494:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26498:	movw	ip, #63248	; 0xf710
   2649c:	sub	sp, sp, #60	; 0x3c
   264a0:	movt	ip, #9
   264a4:	cmp	r3, #0
   264a8:	mov	r4, r0
   264ac:	str	r3, [sp, #20]
   264b0:	mov	r7, r2
   264b4:	ldr	r3, [ip]
   264b8:	str	ip, [sp, #16]
   264bc:	str	r1, [sp, #28]
   264c0:	ldr	r8, [sp, #96]	; 0x60
   264c4:	ldr	r9, [sp, #100]	; 0x64
   264c8:	str	r3, [sp, #52]	; 0x34
   264cc:	ldr	r6, [sp, #104]	; 0x68
   264d0:	beq	264ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12660>
   264d4:	add	r3, sp, #56	; 0x38
   264d8:	mov	r2, #0
   264dc:	str	r2, [r3, #-12]!
   264e0:	mov	r0, r3
   264e4:	str	r3, [sp, #48]	; 0x30
   264e8:	bl	20f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0d4>
   264ec:	movw	sl, #1088	; 0x440
   264f0:	movt	sl, #10
   264f4:	ldrb	r3, [sl]
   264f8:	and	r3, r3, #3
   264fc:	cmp	r3, #2
   26500:	beq	26800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12974>
   26504:	ldr	r3, [r4, #20]
   26508:	tst	r3, #3
   2650c:	beq	26800 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12974>
   26510:	mov	r5, #0
   26514:	movw	ip, #1048	; 0x418
   26518:	movt	ip, #10
   2651c:	str	r7, [sp, #8]
   26520:	str	r5, [sp]
   26524:	mov	r3, r5
   26528:	str	r5, [sp, #4]
   2652c:	mov	r1, r9
   26530:	str	r5, [sp, #12]
   26534:	mov	r2, r5
   26538:	ldr	r0, [sp, #28]
   2653c:	str	ip, [sp, #24]
   26540:	ldr	fp, [ip, #4]
   26544:	bl	2541c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11590>
   26548:	movw	r3, #1336	; 0x538
   2654c:	movt	r3, #10
   26550:	ldr	r3, [r3, #12]
   26554:	cmp	r3, r5
   26558:	moveq	r5, r3
   2655c:	moveq	r7, r5
   26560:	mov	r9, r0
   26564:	beq	26578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x126ec>
   26568:	ldr	r3, [fp]
   2656c:	cmp	r0, r3
   26570:	movne	r7, r5
   26574:	beq	2684c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129c0>
   26578:	cmp	r6, #0
   2657c:	mov	r1, r4
   26580:	addeq	r6, r9, #8
   26584:	mov	r2, #0
   26588:	mov	r3, r9
   2658c:	mov	r0, r6
   26590:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   26594:	ldr	ip, [sp, #20]
   26598:	cmp	ip, #0
   2659c:	beq	265ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12720>
   265a0:	ldr	r3, [r4, #20]
   265a4:	tst	r3, #3
   265a8:	bne	26814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12988>
   265ac:	mov	r0, #0
   265b0:	movw	r1, #29012	; 0x7154
   265b4:	mov	r2, r0
   265b8:	mov	r3, r0
   265bc:	movt	r1, #4
   265c0:	bl	263f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12564>
   265c4:	cmp	r5, #0
   265c8:	beq	266a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1281c>
   265cc:	ldr	ip, [sp, #28]
   265d0:	add	r6, sp, #56	; 0x38
   265d4:	rsb	r0, ip, r7
   265d8:	add	r0, r0, #9
   265dc:	bl	137b4 <xmalloc@plt>
   265e0:	ldr	r2, [sl, #52]	; 0x34
   265e4:	mov	r1, #1
   265e8:	movw	r3, #12976	; 0x32b0
   265ec:	movt	r3, #5
   265f0:	mov	r7, r0
   265f4:	ldr	r0, [r2, #4]
   265f8:	mvn	r2, #0
   265fc:	ldrb	ip, [r0, #24]
   26600:	ldr	r0, [sp, #28]
   26604:	str	r0, [sp]
   26608:	cmp	ip, #0
   2660c:	moveq	r0, r7
   26610:	addne	r0, r7, #1
   26614:	strb	ip, [r7]
   26618:	bl	13acc <__sprintf_chk@plt>
   2661c:	movw	r1, #7988	; 0x1f34
   26620:	movw	r0, #259	; 0x103
   26624:	movt	r1, #7
   26628:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   2662c:	mov	r2, #0
   26630:	mov	r1, r0
   26634:	mov	r0, r7
   26638:	bl	2e784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8f8>
   2663c:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   26640:	ldr	r1, [r9, #28]
   26644:	ldrd	r2, [r1, #32]
   26648:	strd	r2, [r6, #-24]!	; 0xffffffe8
   2664c:	mov	r2, r6
   26650:	mov	r7, r0
   26654:	ldr	r0, [r5, #8]
   26658:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   2665c:	movw	r3, #65288	; 0xff08
   26660:	movt	r3, #9
   26664:	ldr	ip, [r4, #48]	; 0x30
   26668:	ldr	r1, [r4, #52]	; 0x34
   2666c:	mov	r2, r6
   26670:	ldr	r3, [r3, #8]
   26674:	ldr	r0, [r7, #8]
   26678:	lsr	r4, ip, r3
   2667c:	rsb	ip, r3, #32
   26680:	orr	r4, r4, r1, lsl ip
   26684:	ldrd	r6, [sp, #32]
   26688:	sub	ip, r3, #32
   2668c:	lsr	r5, r1, r3
   26690:	orr	r4, r4, r1, lsr ip
   26694:	ldr	r1, [r9, #28]
   26698:	adds	r4, r4, r6
   2669c:	adc	r5, r5, r7
   266a0:	strd	r4, [sp, #32]
   266a4:	bl	2e304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a478>
   266a8:	ldr	ip, [sp, #20]
   266ac:	cmp	ip, #0
   266b0:	beq	267e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12954>
   266b4:	bl	20fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd124>
   266b8:	ldr	r3, [r9, #28]
   266bc:	cmp	r3, #0
   266c0:	beq	267e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12954>
   266c4:	ldr	r2, [r8, #12]
   266c8:	cmp	r2, #0
   266cc:	beq	26910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a84>
   266d0:	ldr	r2, [r2]
   266d4:	cmp	r2, #0
   266d8:	beq	26948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12abc>
   266dc:	cmp	r3, r2
   266e0:	beq	26738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128ac>
   266e4:	ldr	r1, [r2, #16]
   266e8:	cmp	r3, r1
   266ec:	beq	26738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128ac>
   266f0:	ldr	r0, [r3, #16]
   266f4:	ldr	ip, [r3, #12]
   266f8:	cmp	r0, #0
   266fc:	ldreq	r4, [sl, #52]	; 0x34
   26700:	strne	ip, [r0, #12]
   26704:	streq	ip, [r4, #100]	; 0x64
   26708:	cmp	ip, #0
   2670c:	strne	r0, [ip, #16]
   26710:	ldreq	ip, [sl, #52]	; 0x34
   26714:	ldrne	r1, [r2, #16]
   26718:	streq	r0, [ip, #104]	; 0x68
   2671c:	cmp	r1, #0
   26720:	str	r2, [r3, #12]
   26724:	str	r1, [r3, #16]
   26728:	str	r3, [r2, #16]
   2672c:	ldreq	r2, [sl, #52]	; 0x34
   26730:	strne	r3, [r1, #12]
   26734:	streq	r3, [r2, #100]	; 0x64
   26738:	ldr	r2, [sp, #44]	; 0x2c
   2673c:	add	r3, r3, #12
   26740:	str	r3, [r8, #12]
   26744:	cmp	r2, #0
   26748:	beq	267e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12954>
   2674c:	ldr	r3, [r8, #16]
   26750:	cmp	r3, #0
   26754:	beq	269e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b58>
   26758:	ldr	r2, [r3]
   2675c:	ldr	r3, [sp, #48]	; 0x30
   26760:	str	r2, [r3]
   26764:	ldr	r2, [sp, #44]	; 0x2c
   26768:	ldr	r3, [r8, #16]
   2676c:	str	r2, [r3]
   26770:	movw	r3, #62408	; 0xf3c8
   26774:	movt	r3, #9
   26778:	ldr	r2, [sp, #44]	; 0x2c
   2677c:	ldr	r3, [r3]
   26780:	ldr	r1, [r3, #4]
   26784:	ldr	r1, [r1]
   26788:	cmp	r1, r2
   2678c:	ldreq	r2, [sp, #48]	; 0x30
   26790:	streq	r2, [r3, #4]
   26794:	mov	r2, #0
   26798:	ldr	r3, [sp, #48]	; 0x30
   2679c:	str	r3, [r8, #16]
   267a0:	ldr	r3, [fp]
   267a4:	str	r2, [fp]
   267a8:	ldr	r2, [r8, #20]
   267ac:	sub	r1, r2, #16
   267b0:	str	r1, [r3, #20]
   267b4:	ldr	r1, [r2]
   267b8:	cmp	r1, #0
   267bc:	str	r1, [r3, #16]
   267c0:	strne	r3, [r1, #20]
   267c4:	str	r3, [r2]
   267c8:	add	r3, r3, #16
   267cc:	str	r3, [r8, #20]
   267d0:	ldr	r3, [fp]
   267d4:	cmp	r3, #0
   267d8:	ldreq	ip, [sp, #24]
   267dc:	streq	fp, [ip, #4]
   267e0:	ldr	ip, [sp, #16]
   267e4:	mov	r0, r9
   267e8:	ldr	r2, [sp, #52]	; 0x34
   267ec:	ldr	r3, [ip]
   267f0:	cmp	r2, r3
   267f4:	bne	26a1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b90>
   267f8:	add	sp, sp, #60	; 0x3c
   267fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26800:	mov	r0, #0
   26804:	mov	r1, #0
   26808:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   2680c:	mov	r9, r0
   26810:	b	26510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12684>
   26814:	ldr	r3, [ip, #32]
   26818:	mov	r0, #0
   2681c:	ldr	ip, [sp, #20]
   26820:	cmp	r3, #0
   26824:	ldrne	r1, [r3]
   26828:	movweq	r1, #29012	; 0x7154
   2682c:	ldr	r3, [ip, #36]	; 0x24
   26830:	movteq	r1, #4
   26834:	ldr	ip, [sp, #20]
   26838:	cmp	r3, #0
   2683c:	ldr	r2, [ip, #56]	; 0x38
   26840:	ldrne	r3, [r3]
   26844:	bl	263f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12564>
   26848:	b	265c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12738>
   2684c:	ldr	ip, [sp, #28]
   26850:	ldrb	r2, [ip]
   26854:	cmp	r2, r5
   26858:	beq	26a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b84>
   2685c:	movw	r0, #63264	; 0xf720
   26860:	movt	r0, #9
   26864:	mov	r3, ip
   26868:	lsl	r1, r2, #1
   2686c:	mov	r7, r3
   26870:	ldrh	r5, [r0, r1]
   26874:	ands	r5, r5, #140	; 0x8c
   26878:	bne	26884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129f8>
   2687c:	cmp	r2, #95	; 0x5f
   26880:	bne	26578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x126ec>
   26884:	ldrb	r2, [r3, #1]
   26888:	add	r3, r3, #1
   2688c:	cmp	r2, #0
   26890:	bne	26868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x129dc>
   26894:	ldr	ip, [sp, #28]
   26898:	mov	r7, r3
   2689c:	rsb	r0, ip, r3
   268a0:	add	r0, r0, #10
   268a4:	bl	137b4 <xmalloc@plt>
   268a8:	mvn	r2, #0
   268ac:	mov	r1, #1
   268b0:	movw	r3, #12988	; 0x32bc
   268b4:	movt	r3, #5
   268b8:	mov	r5, r0
   268bc:	ldr	r0, [sl, #52]	; 0x34
   268c0:	ldr	r0, [r0, #4]
   268c4:	ldrb	ip, [r0, #24]
   268c8:	ldr	r0, [sp, #28]
   268cc:	str	r0, [sp]
   268d0:	cmp	ip, #0
   268d4:	moveq	r0, r5
   268d8:	addne	r0, r5, #1
   268dc:	strb	ip, [r5]
   268e0:	bl	13acc <__sprintf_chk@plt>
   268e4:	movw	r1, #7988	; 0x1f34
   268e8:	movw	r0, #259	; 0x103
   268ec:	movt	r1, #7
   268f0:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   268f4:	mov	r2, #0
   268f8:	mov	r1, r0
   268fc:	mov	r0, r5
   26900:	bl	2e784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8f8>
   26904:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   26908:	mov	r5, r0
   2690c:	b	26578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x126ec>
   26910:	ldr	ip, [sp, #24]
   26914:	ldr	r2, [ip]
   26918:	ldr	ip, [sp, #20]
   2691c:	cmp	r2, ip
   26920:	beq	269d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b48>
   26924:	ldr	ip, [sp, #20]
   26928:	ldr	r2, [ip, #28]
   2692c:	cmp	r2, #0
   26930:	beq	26998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b0c>
   26934:	cmp	r2, r3
   26938:	beq	269d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b48>
   2693c:	add	r2, r2, #12
   26940:	str	r2, [r8, #12]
   26944:	b	266d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12844>
   26948:	ldr	r2, [r3, #16]
   2694c:	ldr	r1, [r3, #12]
   26950:	cmp	r2, #0
   26954:	ldreq	r0, [sl, #52]	; 0x34
   26958:	ldrne	r0, [sl, #52]	; 0x34
   2695c:	strne	r1, [r2, #12]
   26960:	streq	r1, [r0, #100]	; 0x64
   26964:	cmp	r1, #0
   26968:	strne	r2, [r1, #16]
   2696c:	ldrne	r1, [r0, #104]	; 0x68
   26970:	moveq	r1, r2
   26974:	streq	r2, [r0, #104]	; 0x68
   26978:	mov	r2, #0
   2697c:	cmp	r1, #0
   26980:	str	r2, [r3, #12]
   26984:	str	r1, [r3, #16]
   26988:	strne	r3, [r1, #12]
   2698c:	streq	r3, [r0, #100]	; 0x64
   26990:	str	r3, [r0, #104]	; 0x68
   26994:	b	26738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128ac>
   26998:	ldr	r1, [ip, #20]
   2699c:	cmp	r1, #0
   269a0:	beq	269d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b48>
   269a4:	ldr	r2, [r1, #72]	; 0x48
   269a8:	cmp	r2, #0
   269ac:	blt	269c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b3c>
   269b0:	ldr	r2, [r1, #28]
   269b4:	cmp	r2, #0
   269b8:	beq	269c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b3c>
   269bc:	ldr	r0, [r2, #180]	; 0xb4
   269c0:	cmp	r0, #0
   269c4:	bne	26934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12aa8>
   269c8:	ldr	r1, [r1, #20]
   269cc:	cmp	r1, #0
   269d0:	bne	269a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12b18>
   269d4:	ldr	r2, [sl, #52]	; 0x34
   269d8:	add	r2, r2, #100	; 0x64
   269dc:	str	r2, [r8, #12]
   269e0:	b	266d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12844>
   269e4:	ldr	r0, [sp, #20]
   269e8:	bl	1d680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x97f4>
   269ec:	ldr	r2, [sp, #48]	; 0x30
   269f0:	ldr	ip, [sp, #20]
   269f4:	add	r3, ip, #16
   269f8:	ldr	r1, [r0]
   269fc:	str	r1, [r2]
   26a00:	ldr	r2, [sp, #44]	; 0x2c
   26a04:	str	r2, [r0]
   26a08:	str	r3, [r8, #20]
   26a0c:	b	26770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x128e4>
   26a10:	ldr	r7, [sp, #28]
   26a14:	mov	r0, #10
   26a18:	b	268a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12a18>
   26a1c:	bl	13694 <__stack_chk_fail@plt>
   26a20:	ldr	r3, [r0, #4]
   26a24:	str	r1, [r3]
   26a28:	str	r2, [r0, #4]
   26a2c:	bx	lr
   26a30:	movw	ip, #1044	; 0x414
   26a34:	movt	ip, #10
   26a38:	push	{r4}		; (str r4, [sp, #-4]!)
   26a3c:	ldr	r4, [ip]
   26a40:	cmp	r4, #0
   26a44:	beq	26a50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bc4>
   26a48:	cmp	r3, #0
   26a4c:	bne	26a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12be4>
   26a50:	movw	r3, #1244	; 0x4dc
   26a54:	movt	r3, #10
   26a58:	ldr	r3, [r3, #44]	; 0x2c
   26a5c:	cmp	r3, #1
   26a60:	beq	26a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bec>
   26a64:	cmp	r3, #2
   26a68:	beq	26a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12bf8>
   26a6c:	str	r0, [ip]
   26a70:	pop	{r4}		; (ldr r4, [sp], #4)
   26a74:	bx	lr
   26a78:	cmp	r1, #0
   26a7c:	movne	r0, r1
   26a80:	b	26a6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12be0>
   26a84:	cmp	r2, #0
   26a88:	movne	r0, r2
   26a8c:	b	26a6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12be0>
   26a90:	movw	r3, #62408	; 0xf3c8
   26a94:	movt	r3, #9
   26a98:	push	{r4, r5, r6, lr}
   26a9c:	mov	r5, r0
   26aa0:	mov	r0, #16
   26aa4:	ldr	r4, [r3]
   26aa8:	mov	r6, r1
   26aac:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   26ab0:	mov	r1, #14
   26ab4:	mov	r2, #0
   26ab8:	movw	ip, #120	; 0x78
   26abc:	movt	ip, #10
   26ac0:	str	r2, [r0]
   26ac4:	movw	r2, #104	; 0x68
   26ac8:	str	r1, [r0, #4]
   26acc:	movt	r2, #10
   26ad0:	ldr	r1, [r4, #4]
   26ad4:	str	r0, [r1]
   26ad8:	ldr	r1, [ip]
   26adc:	str	r0, [r4, #4]
   26ae0:	str	r5, [r0, #8]
   26ae4:	str	r6, [r0, #12]
   26ae8:	str	r1, [r2]
   26aec:	pop	{r4, r5, r6, pc}
   26af0:	movw	r3, #62408	; 0xf3c8
   26af4:	movt	r3, #9
   26af8:	push	{r4, lr}
   26afc:	mov	r0, #16
   26b00:	ldr	r4, [r3]
   26b04:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   26b08:	mov	r2, #13
   26b0c:	mov	r1, #0
   26b10:	str	r2, [r0, #4]
   26b14:	mov	r3, r0
   26b18:	str	r1, [r0]
   26b1c:	mov	r2, r0
   26b20:	ldr	r0, [r4, #4]
   26b24:	str	r3, [r0]
   26b28:	str	r3, [r4, #4]
   26b2c:	str	r1, [r2, #8]!
   26b30:	mov	r0, r2
   26b34:	str	r2, [r3, #12]
   26b38:	pop	{r4, lr}
   26b3c:	b	20f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0d4>
   26b40:	b	20fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd124>
   26b44:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26b48:	mov	sl, r0
   26b4c:	mov	r0, #28
   26b50:	mov	fp, r1
   26b54:	mov	r6, r2
   26b58:	mov	r7, r3
   26b5c:	ldr	r9, [sp, #40]	; 0x28
   26b60:	mov	r4, #0
   26b64:	ldr	r8, [sp, #44]	; 0x2c
   26b68:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   26b6c:	mov	r1, r4
   26b70:	movw	r2, #13000	; 0x32c8
   26b74:	movt	r2, #5
   26b78:	mov	r5, r0
   26b7c:	str	sl, [r0, #4]
   26b80:	mov	r0, fp
   26b84:	str	r4, [r5]
   26b88:	bl	2ec44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb8>
   26b8c:	str	r6, [r5, #12]
   26b90:	str	r7, [r5, #16]
   26b94:	str	r9, [r5, #20]
   26b98:	str	r8, [r5, #24]
   26b9c:	cmp	r0, #1
   26ba0:	str	r0, [r5, #8]
   26ba4:	movne	r2, r4
   26ba8:	beq	26c40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12db4>
   26bac:	movw	r4, #1040	; 0x410
   26bb0:	movt	r4, #10
   26bb4:	ldr	r3, [r4]
   26bb8:	cmp	r3, #0
   26bbc:	bne	26bd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d48>
   26bc0:	b	26c38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12dac>
   26bc4:	ldr	r4, [r4]
   26bc8:	ldr	r3, [r4]
   26bcc:	cmp	r3, #0
   26bd0:	beq	26c38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12dac>
   26bd4:	cmp	r2, #0
   26bd8:	beq	26bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d38>
   26bdc:	ldr	ip, [r3, #8]
   26be0:	mov	r2, #1
   26be4:	cmp	ip, r2
   26be8:	bne	26bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d38>
   26bec:	ldr	r1, [r3, #12]
   26bf0:	mov	r2, ip
   26bf4:	cmp	r1, #0
   26bf8:	bne	26bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d38>
   26bfc:	ldr	r6, [r3, #16]
   26c00:	cmp	r6, #0
   26c04:	bne	26bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d38>
   26c08:	mov	r2, #5
   26c0c:	movw	r1, #13020	; 0x32dc
   26c10:	mov	r0, r6
   26c14:	movt	r1, #5
   26c18:	bl	13688 <dcgettext@plt>
   26c1c:	mov	r1, r6
   26c20:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   26c24:	ldr	r4, [r4]
   26c28:	mov	r2, r6
   26c2c:	ldr	r3, [r4]
   26c30:	cmp	r3, #0
   26c34:	bne	26bd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d48>
   26c38:	str	r5, [r4]
   26c3c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26c40:	orrs	r7, r6, r7
   26c44:	moveq	r2, #0
   26c48:	movne	r2, #1
   26c4c:	b	26bac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12d20>
   26c50:	push	{r3, r4, r5, lr}
   26c54:	mov	r4, r0
   26c58:	mov	r0, #12
   26c5c:	bl	137b4 <xmalloc@plt>
   26c60:	movw	r1, #1004	; 0x3ec
   26c64:	movt	r1, #10
   26c68:	movw	r3, #1088	; 0x440
   26c6c:	movt	r3, #10
   26c70:	mov	ip, #0
   26c74:	ldr	r5, [r1]
   26c78:	mov	r2, r0
   26c7c:	ldrb	r0, [r3]
   26c80:	str	r4, [r2, #4]
   26c84:	orr	r0, r0, #128	; 0x80
   26c88:	str	r5, [r2]
   26c8c:	str	r2, [r1]
   26c90:	str	ip, [r2, #8]
   26c94:	strb	r0, [r3]
   26c98:	pop	{r3, r4, r5, pc}
   26c9c:	push	{r3, lr}
   26ca0:	bl	26c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12dc4>
   26ca4:	movw	r3, #1004	; 0x3ec
   26ca8:	movt	r3, #10
   26cac:	mov	r2, #1
   26cb0:	ldr	r3, [r3]
   26cb4:	str	r2, [r3, #8]
   26cb8:	pop	{r3, pc}
   26cbc:	push	{r4, r5, r6, lr}
   26cc0:	movw	r4, #65288	; 0xff08
   26cc4:	movt	r4, #9
   26cc8:	mov	r6, r0
   26ccc:	mov	r5, r1
   26cd0:	ldr	r3, [r4, #288]	; 0x120
   26cd4:	cmp	r3, #0
   26cd8:	beq	26cf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e6c>
   26cdc:	movw	r0, #10132	; 0x2794
   26ce0:	movw	r1, #7564	; 0x1d8c
   26ce4:	movt	r0, #5
   26ce8:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   26cec:	str	r6, [r4, #288]	; 0x120
   26cf0:	str	r5, [r4, #292]	; 0x124
   26cf4:	pop	{r4, r5, r6, pc}
   26cf8:	ldr	r3, [r4, #292]	; 0x124
   26cfc:	cmp	r3, #0
   26d00:	bne	26cdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e50>
   26d04:	ldr	r3, [r4, #296]	; 0x128
   26d08:	cmp	r3, #0
   26d0c:	bne	26cdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e50>
   26d10:	b	26cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12e60>
   26d14:	push	{r4, r5, r6, lr}
   26d18:	movw	r4, #65288	; 0xff08
   26d1c:	movt	r4, #9
   26d20:	sub	sp, sp, #16
   26d24:	mov	ip, #0
   26d28:	mov	r2, #1
   26d2c:	ldr	lr, [r4, #292]	; 0x124
   26d30:	mov	r3, ip
   26d34:	ldr	r1, [r4, #288]	; 0x120
   26d38:	mov	r6, r0
   26d3c:	str	ip, [sp, #4]
   26d40:	str	ip, [sp, #8]
   26d44:	str	lr, [sp]
   26d48:	str	ip, [sp, #12]
   26d4c:	bl	2541c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11590>
   26d50:	ldr	r3, [r4, #300]	; 0x12c
   26d54:	cmp	r3, #0
   26d58:	beq	26db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f24>
   26d5c:	mov	r0, #8
   26d60:	movw	r5, #65288	; 0xff08
   26d64:	bl	137b4 <xmalloc@plt>
   26d68:	ldr	r2, [r4, #300]	; 0x12c
   26d6c:	ldr	ip, [r4]
   26d70:	mov	r1, r6
   26d74:	movt	r5, #9
   26d78:	mov	r3, r0
   26d7c:	mov	r0, #320	; 0x140
   26d80:	stm	r3, {r2, ip}
   26d84:	str	r3, [r4, #300]	; 0x12c
   26d88:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   26d8c:	ldr	r1, [r4, #296]	; 0x128
   26d90:	cmp	r1, #0
   26d94:	beq	26da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f18>
   26d98:	mov	r2, r0
   26d9c:	mov	r0, #324	; 0x144
   26da0:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   26da4:	str	r0, [r5, #296]	; 0x128
   26da8:	add	sp, sp, #16
   26dac:	pop	{r4, r5, r6, pc}
   26db0:	movw	r0, #322	; 0x142
   26db4:	mov	r1, r6
   26db8:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   26dbc:	str	r0, [r4, #288]	; 0x120
   26dc0:	b	26d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ed0>
   26dc4:	movw	ip, #65288	; 0xff08
   26dc8:	movt	ip, #9
   26dcc:	push	{r4, r5, r6, r7, r8, lr}
   26dd0:	mov	r2, r1
   26dd4:	ldr	ip, [ip]
   26dd8:	mov	r3, #0
   26ddc:	sub	sp, sp, #8
   26de0:	movw	r1, #29012	; 0x7154
   26de4:	movt	r1, #4
   26de8:	ldr	r6, [ip, #24]
   26dec:	bl	263f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12564>
   26df0:	mov	r0, r6
   26df4:	bl	13a24 <strlen@plt>
   26df8:	add	r0, r0, #1
   26dfc:	bl	137b4 <xmalloc@plt>
   26e00:	ldrb	r3, [r6]
   26e04:	cmp	r3, #0
   26e08:	mov	r5, r0
   26e0c:	beq	26f2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x130a0>
   26e10:	movw	r4, #63264	; 0xf720
   26e14:	mov	r2, r6
   26e18:	movt	r4, #9
   26e1c:	mov	ip, r0
   26e20:	b	26e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12fac>
   26e24:	cmp	r3, #95	; 0x5f
   26e28:	beq	26e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12fbc>
   26e2c:	ldrb	r3, [r2, #1]!
   26e30:	cmp	r3, #0
   26e34:	beq	26e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12fd0>
   26e38:	lsl	lr, r3, #1
   26e3c:	ldrh	lr, [r4, lr]
   26e40:	tst	lr, #140	; 0x8c
   26e44:	beq	26e24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12f98>
   26e48:	strb	r3, [ip]
   26e4c:	add	ip, ip, #1
   26e50:	ldrb	r3, [r2, #1]!
   26e54:	cmp	r3, #0
   26e58:	bne	26e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12fac>
   26e5c:	mov	r4, #0
   26e60:	mov	r0, r5
   26e64:	strb	r4, [ip]
   26e68:	bl	13a24 <strlen@plt>
   26e6c:	add	r0, r0, #14
   26e70:	bl	137b4 <xmalloc@plt>
   26e74:	mvn	r2, #0
   26e78:	str	r5, [sp]
   26e7c:	mov	r1, #1
   26e80:	movw	r3, #13104	; 0x3330
   26e84:	movt	r3, #5
   26e88:	mov	r7, r0
   26e8c:	bl	13acc <__sprintf_chk@plt>
   26e90:	mov	r1, r6
   26e94:	movw	r0, #323	; 0x143
   26e98:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   26e9c:	mov	r2, r4
   26ea0:	mov	r1, r0
   26ea4:	mov	r0, r7
   26ea8:	bl	2e784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8f8>
   26eac:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   26eb0:	mov	r0, r5
   26eb4:	bl	13a24 <strlen@plt>
   26eb8:	add	r0, r0, #13
   26ebc:	bl	137b4 <xmalloc@plt>
   26ec0:	mvn	r2, #0
   26ec4:	str	r5, [sp]
   26ec8:	mov	r1, #1
   26ecc:	movw	r3, #13120	; 0x3340
   26ed0:	movt	r3, #5
   26ed4:	mov	r7, r0
   26ed8:	bl	13acc <__sprintf_chk@plt>
   26edc:	mov	r1, r6
   26ee0:	movw	r0, #323	; 0x143
   26ee4:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   26ee8:	mov	r1, r6
   26eec:	mov	r8, r0
   26ef0:	mov	r0, #320	; 0x140
   26ef4:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   26ef8:	mov	r1, r8
   26efc:	mov	r2, r0
   26f00:	mov	r0, #43	; 0x2b
   26f04:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   26f08:	mov	r2, r4
   26f0c:	mov	r1, r0
   26f10:	mov	r0, r7
   26f14:	bl	2e784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a8f8>
   26f18:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   26f1c:	mov	r0, r5
   26f20:	add	sp, sp, #8
   26f24:	pop	{r4, r5, r6, r7, r8, lr}
   26f28:	b	13574 <free@plt>
   26f2c:	mov	ip, r0
   26f30:	b	26e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12fd0>
   26f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26f38:	sub	sp, sp, #36	; 0x24
   26f3c:	movw	r9, #63248	; 0xf710
   26f40:	movt	r9, #9
   26f44:	ldr	lr, [sp, #76]	; 0x4c
   26f48:	mov	r6, r1
   26f4c:	ldr	ip, [r9]
   26f50:	adds	r1, r0, #0
   26f54:	movw	r7, #65288	; 0xff08
   26f58:	movt	r7, #9
   26f5c:	movne	r1, #1
   26f60:	str	r0, [sp, #12]
   26f64:	str	r1, [sp]
   26f68:	mov	r8, #0
   26f6c:	mov	r4, r2
   26f70:	add	r0, sp, #20
   26f74:	mov	r2, r3
   26f78:	str	r8, [sp, #4]
   26f7c:	mov	r3, lr
   26f80:	add	r1, sp, #24
   26f84:	str	ip, [sp, #28]
   26f88:	ldr	r5, [sp, #72]	; 0x48
   26f8c:	bl	22360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe4d4>
   26f90:	ldr	r3, [r7, #300]	; 0x12c
   26f94:	cmp	r3, r8
   26f98:	beq	2709c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13210>
   26f9c:	ldr	r3, [r3, #4]
   26fa0:	mov	r0, #43	; 0x2b
   26fa4:	ldr	r1, [r7, #288]	; 0x120
   26fa8:	ldr	r2, [r7, #296]	; 0x128
   26fac:	ldrb	ip, [r3, #84]	; 0x54
   26fb0:	orr	ip, ip, #16
   26fb4:	strb	ip, [r3, #84]	; 0x54
   26fb8:	str	r3, [sp, #8]
   26fbc:	bl	2e368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4dc>
   26fc0:	mov	r2, r8
   26fc4:	mov	r1, r0
   26fc8:	movw	r0, #7988	; 0x1f34
   26fcc:	movt	r0, #7
   26fd0:	bl	2e6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a85c>
   26fd4:	ldr	fp, [r7, #300]	; 0x12c
   26fd8:	ldr	r3, [sp, #8]
   26fdc:	cmp	fp, r8
   26fe0:	str	r0, [r3, #52]	; 0x34
   26fe4:	bne	27000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13174>
   26fe8:	b	2709c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13210>
   26fec:	mov	r0, fp
   26ff0:	bl	13574 <free@plt>
   26ff4:	cmp	sl, #0
   26ff8:	beq	2708c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13200>
   26ffc:	mov	fp, sl
   27000:	cmp	r4, #0
   27004:	ldr	r3, [fp, #4]
   27008:	beq	27018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1318c>
   2700c:	ldr	r2, [r3, #40]	; 0x28
   27010:	cmp	r2, #0
   27014:	streq	r4, [r3, #40]	; 0x28
   27018:	ldr	r2, [fp]
   2701c:	ldr	r1, [sp, #24]
   27020:	cmp	r2, #0
   27024:	ldr	r0, [sp, #20]
   27028:	streq	r2, [r3, #80]	; 0x50
   2702c:	str	r1, [r3, #36]	; 0x24
   27030:	ldreq	r1, [sp, #12]
   27034:	str	r0, [r3, #32]
   27038:	streq	r1, [r3, #48]	; 0x30
   2703c:	cmp	r5, #0
   27040:	beq	27050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x131c4>
   27044:	ldr	r1, [r3, #56]	; 0x38
   27048:	cmp	r1, #0
   2704c:	streq	r5, [r3, #56]	; 0x38
   27050:	cmp	r6, #0
   27054:	moveq	sl, r2
   27058:	beq	26fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13160>
   2705c:	mov	r0, #8
   27060:	bl	137b4 <xmalloc@plt>
   27064:	ldr	r2, [fp, #4]
   27068:	ldr	sl, [fp]
   2706c:	ldr	r2, [r2, #24]
   27070:	str	r8, [r0]
   27074:	mov	r8, r0
   27078:	str	r2, [r0, #4]
   2707c:	mov	r0, fp
   27080:	bl	13574 <free@plt>
   27084:	cmp	sl, #0
   27088:	bne	26ffc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13170>
   2708c:	cmp	r8, #0
   27090:	beq	2709c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13210>
   27094:	mov	r0, r8
   27098:	bl	26c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12dc4>
   2709c:	ldr	r1, [sp, #28]
   270a0:	mov	r3, #0
   270a4:	ldr	r2, [r9]
   270a8:	str	r3, [r7, #288]	; 0x120
   270ac:	cmp	r1, r2
   270b0:	str	r3, [r7, #300]	; 0x12c
   270b4:	str	r3, [r7, #296]	; 0x128
   270b8:	bne	270c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13238>
   270bc:	add	sp, sp, #36	; 0x24
   270c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   270c4:	bl	13694 <__stack_chk_fail@plt>
   270c8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   270cc:	mov	r5, r0
   270d0:	mov	r0, #12
   270d4:	mov	r4, r3
   270d8:	mov	r9, r1
   270dc:	mov	r8, r2
   270e0:	bl	137b4 <xmalloc@plt>
   270e4:	cmp	r4, #0
   270e8:	ldrb	r3, [r0, #8]
   270ec:	mov	r7, r0
   270f0:	str	r5, [r0]
   270f4:	and	r3, r3, #249	; 0xf9
   270f8:	orr	r3, r3, #1
   270fc:	strb	r3, [r0, #8]
   27100:	movne	r3, r9
   27104:	beq	271e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13354>
   27108:	cmp	r3, #0
   2710c:	str	r3, [r7, #4]
   27110:	streq	r9, [r7, #4]
   27114:	ldrbeq	r2, [r7, #8]
   27118:	bfieq	r2, r3, #0, #1
   2711c:	strbeq	r2, [r7, #8]
   27120:	cmp	r8, #0
   27124:	beq	271a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1331c>
   27128:	movw	r1, #13136	; 0x3350
   2712c:	mov	r0, r8
   27130:	movt	r1, #5
   27134:	bl	13748 <strcasecmp@plt>
   27138:	cmp	r0, #0
   2713c:	beq	271a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1331c>
   27140:	movw	r1, #13140	; 0x3354
   27144:	mov	r0, r8
   27148:	movt	r1, #5
   2714c:	bl	13748 <strcasecmp@plt>
   27150:	cmp	r0, #0
   27154:	beq	271c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13338>
   27158:	movw	r1, #13144	; 0x3358
   2715c:	mov	r0, r8
   27160:	movt	r1, #5
   27164:	bl	13748 <strcasecmp@plt>
   27168:	cmp	r0, #0
   2716c:	bne	2718c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13300>
   27170:	ldrb	r3, [r7, #8]
   27174:	mov	r2, #4
   27178:	mov	r0, r7
   2717c:	bfi	r3, r2, #3, #3
   27180:	strb	r3, [r7, #8]
   27184:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   27188:	b	2f51c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b690>
   2718c:	movw	r1, #13152	; 0x3360
   27190:	mov	r0, #0
   27194:	movt	r1, #5
   27198:	mov	r2, #5
   2719c:	bl	13688 <dcgettext@plt>
   271a0:	mov	r1, r8
   271a4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   271a8:	ldrb	r3, [r7, #8]
   271ac:	mov	r2, #1
   271b0:	mov	r0, r7
   271b4:	bfi	r3, r2, #3, #3
   271b8:	strb	r3, [r7, #8]
   271bc:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   271c0:	b	2f51c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b690>
   271c4:	ldrb	r3, [r7, #8]
   271c8:	mov	r2, #2
   271cc:	mov	r0, r7
   271d0:	bfi	r3, r2, #3, #3
   271d4:	strb	r3, [r7, #8]
   271d8:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   271dc:	b	2f51c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b690>
   271e0:	mov	r0, r9
   271e4:	bl	13a24 <strlen@plt>
   271e8:	add	r0, r0, #1
   271ec:	bl	137b4 <xmalloc@plt>
   271f0:	ldrb	ip, [r9]
   271f4:	cmp	ip, #0
   271f8:	beq	27274 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133e8>
   271fc:	add	r5, r9, #1
   27200:	mov	r3, r4
   27204:	mov	r6, r0
   27208:	cmp	r4, #0
   2720c:	mov	r4, #0
   27210:	strbne	ip, [r6, #-1]
   27214:	movne	r3, #1
   27218:	bne	27248 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133bc>
   2721c:	cmp	ip, #42	; 0x2a
   27220:	cmpne	ip, #63	; 0x3f
   27224:	beq	27268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133dc>
   27228:	cmp	ip, #91	; 0x5b
   2722c:	beq	27268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133dc>
   27230:	strb	ip, [r6]
   27234:	add	r6, r6, #1
   27238:	ldrb	r4, [r5, #-1]
   2723c:	subs	r2, r4, #92	; 0x5c
   27240:	rsbs	r4, r2, #0
   27244:	adcs	r4, r4, r2
   27248:	ldrb	ip, [r5], #1
   2724c:	cmp	ip, #0
   27250:	bne	27208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1337c>
   27254:	cmp	r3, #0
   27258:	beq	27274 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x133e8>
   2725c:	strb	ip, [r6]
   27260:	mov	r3, r0
   27264:	b	27108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1327c>
   27268:	bl	13574 <free@plt>
   2726c:	mov	r3, #0
   27270:	b	27108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1327c>
   27274:	bl	13574 <free@plt>
   27278:	mov	r3, r9
   2727c:	b	27108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1327c>
   27280:	push	{r3, r4, r5, lr}
   27284:	mov	r5, r0
   27288:	mov	r4, r1
   2728c:	mov	r0, #1
   27290:	mov	r1, #60	; 0x3c
   27294:	bl	13e38 <xcalloc@plt>
   27298:	mvn	r1, #0
   2729c:	movw	r2, #58472	; 0xe468
   272a0:	movt	r2, #1
   272a4:	str	r5, [r0, #12]
   272a8:	str	r4, [r0, #28]
   272ac:	str	r2, [r0, #56]	; 0x38
   272b0:	str	r1, [r0, #48]	; 0x30
   272b4:	pop	{r3, r4, r5, pc}
   272b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   272bc:	movw	r5, #1088	; 0x440
   272c0:	movt	r5, #10
   272c4:	cmp	r0, #0
   272c8:	movw	r6, #21440	; 0x53c0
   272cc:	movt	r6, #5
   272d0:	ldr	r4, [r5, #148]	; 0x94
   272d4:	movne	r6, r0
   272d8:	mov	r7, r1
   272dc:	mov	r8, r2
   272e0:	cmp	r4, #0
   272e4:	beq	2736c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x134e0>
   272e8:	ldrb	r3, [r6]
   272ec:	cmp	r3, #0
   272f0:	beq	27304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13478>
   272f4:	ldr	r0, [r4, #4]
   272f8:	ldrb	r3, [r0]
   272fc:	cmp	r3, #0
   27300:	bne	27350 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x134c4>
   27304:	mov	r2, #5
   27308:	movw	r1, #13204	; 0x3394
   2730c:	mov	r0, #0
   27310:	movt	r1, #5
   27314:	bl	13688 <dcgettext@plt>
   27318:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2731c:	mov	r0, r7
   27320:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   27324:	b	13574 <free@plt>
   27328:	mov	r2, #5
   2732c:	movw	r1, #13276	; 0x33dc
   27330:	movt	r1, #5
   27334:	bl	13688 <dcgettext@plt>
   27338:	mov	r1, r6
   2733c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   27340:	ldr	r4, [r4]
   27344:	cmp	r4, #0
   27348:	beq	2736c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x134e0>
   2734c:	ldr	r0, [r4, #4]
   27350:	mov	r1, r6
   27354:	bl	13490 <strcmp@plt>
   27358:	cmp	r0, #0
   2735c:	beq	27328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1349c>
   27360:	ldr	r4, [r4]
   27364:	cmp	r4, #0
   27368:	bne	2734c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x134c0>
   2736c:	add	r0, r7, #12
   27370:	bl	1e2f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa46c>
   27374:	add	r0, r7, #28
   27378:	bl	1e2f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa46c>
   2737c:	ldr	r9, [r7, #12]
   27380:	cmp	r9, #0
   27384:	beq	27408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1357c>
   27388:	ldr	sl, [r5, #148]	; 0x94
   2738c:	cmp	sl, #0
   27390:	beq	273fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13570>
   27394:	ldr	r0, [sl, #32]
   27398:	ldrb	r3, [r9, #8]
   2739c:	cmp	r0, #0
   273a0:	beq	275dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13750>
   273a4:	tst	r3, #1
   273a8:	bne	2750c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13680>
   273ac:	ldr	r4, [sl, #36]	; 0x24
   273b0:	cmp	r4, #0
   273b4:	beq	273f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13564>
   273b8:	ldr	r0, [r9, #4]
   273bc:	ldr	r1, [r4, #4]
   273c0:	bl	13490 <strcmp@plt>
   273c4:	cmp	r0, #0
   273c8:	bne	273e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13558>
   273cc:	ldrb	r2, [r9, #8]
   273d0:	ldrb	r3, [r4, #8]
   273d4:	ubfx	r2, r2, #3, #3
   273d8:	ubfx	r3, r3, #3, #3
   273dc:	cmp	r2, r3
   273e0:	beq	274d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13648>
   273e4:	ldr	r4, [r4]
   273e8:	cmp	r4, #0
   273ec:	bne	273b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1352c>
   273f0:	ldr	sl, [sl]
   273f4:	cmp	sl, #0
   273f8:	bne	27394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13508>
   273fc:	ldr	r9, [r9]
   27400:	cmp	r9, #0
   27404:	bne	27388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x134fc>
   27408:	ldr	r9, [r7, #28]
   2740c:	cmp	r9, #0
   27410:	beq	27494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13608>
   27414:	ldr	sl, [r5, #148]	; 0x94
   27418:	cmp	sl, #0
   2741c:	beq	27488 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135fc>
   27420:	ldr	r0, [sl, #16]
   27424:	ldrb	r3, [r9, #8]
   27428:	cmp	r0, #0
   2742c:	beq	275f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13768>
   27430:	tst	r3, #1
   27434:	bne	27574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x136e8>
   27438:	ldr	r4, [sl, #20]
   2743c:	cmp	r4, #0
   27440:	beq	2747c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135f0>
   27444:	ldr	r0, [r9, #4]
   27448:	ldr	r1, [r4, #4]
   2744c:	bl	13490 <strcmp@plt>
   27450:	cmp	r0, #0
   27454:	bne	27470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135e4>
   27458:	ldrb	r2, [r9, #8]
   2745c:	ldrb	r3, [r4, #8]
   27460:	ubfx	r2, r2, #3, #3
   27464:	ubfx	r3, r3, #3, #3
   27468:	cmp	r2, r3
   2746c:	beq	274f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13664>
   27470:	ldr	r4, [r4]
   27474:	cmp	r4, #0
   27478:	bne	27444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135b8>
   2747c:	ldr	sl, [sl]
   27480:	cmp	sl, #0
   27484:	bne	27420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13594>
   27488:	ldr	r9, [r9]
   2748c:	cmp	r9, #0
   27490:	bne	27414 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13588>
   27494:	str	r8, [r7, #44]	; 0x2c
   27498:	str	r6, [r7, #4]
   2749c:	ldrb	r3, [r6]
   274a0:	cmp	r3, #0
   274a4:	bne	2760c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13780>
   274a8:	str	r3, [r7, #8]
   274ac:	ldr	r2, [r5, #148]	; 0x94
   274b0:	cmp	r2, #0
   274b4:	bne	274c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13634>
   274b8:	b	27628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1379c>
   274bc:	mov	r2, r3
   274c0:	ldr	r3, [r2]
   274c4:	cmp	r3, #0
   274c8:	bne	274bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13630>
   274cc:	str	r7, [r2]
   274d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   274d4:	mov	r2, #5
   274d8:	movw	r1, #13312	; 0x3400
   274dc:	movt	r1, #5
   274e0:	bl	13688 <dcgettext@plt>
   274e4:	ldr	r1, [r9, #4]
   274e8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   274ec:	b	273e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13558>
   274f0:	mov	r2, #5
   274f4:	movw	r1, #13312	; 0x3400
   274f8:	movt	r1, #5
   274fc:	bl	13688 <dcgettext@plt>
   27500:	ldr	r1, [r9, #4]
   27504:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   27508:	b	27470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135e4>
   2750c:	mov	r1, r9
   27510:	bl	13cf4 <htab_find@plt>
   27514:	subs	r4, r0, #0
   27518:	bne	2752c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x136a0>
   2751c:	b	273f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13564>
   27520:	ldr	r4, [r4]
   27524:	cmp	r4, #0
   27528:	beq	273f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13564>
   2752c:	ldr	r0, [r9, #4]
   27530:	ldr	r1, [r4, #4]
   27534:	bl	13490 <strcmp@plt>
   27538:	cmp	r0, #0
   2753c:	bne	273f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13564>
   27540:	ldrb	r2, [r9, #8]
   27544:	ldrb	r3, [r4, #8]
   27548:	ubfx	r2, r2, #3, #3
   2754c:	ubfx	r3, r3, #3, #3
   27550:	cmp	r2, r3
   27554:	bne	27520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13694>
   27558:	mov	r2, #5
   2755c:	movw	r1, #13312	; 0x3400
   27560:	movt	r1, #5
   27564:	bl	13688 <dcgettext@plt>
   27568:	ldr	r1, [r9, #4]
   2756c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   27570:	b	27520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13694>
   27574:	mov	r1, r9
   27578:	bl	13cf4 <htab_find@plt>
   2757c:	subs	r4, r0, #0
   27580:	bne	27594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13708>
   27584:	b	2747c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135f0>
   27588:	ldr	r4, [r4]
   2758c:	cmp	r4, #0
   27590:	beq	2747c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135f0>
   27594:	ldr	r0, [r9, #4]
   27598:	ldr	r1, [r4, #4]
   2759c:	bl	13490 <strcmp@plt>
   275a0:	cmp	r0, #0
   275a4:	bne	2747c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135f0>
   275a8:	ldrb	r2, [r9, #8]
   275ac:	ldrb	r3, [r4, #8]
   275b0:	ubfx	r2, r2, #3, #3
   275b4:	ubfx	r3, r3, #3, #3
   275b8:	cmp	r2, r3
   275bc:	bne	27588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x136fc>
   275c0:	mov	r2, #5
   275c4:	movw	r1, #13312	; 0x3400
   275c8:	movt	r1, #5
   275cc:	bl	13688 <dcgettext@plt>
   275d0:	ldr	r1, [r9, #4]
   275d4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   275d8:	b	27588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x136fc>
   275dc:	tst	r3, #1
   275e0:	beq	273ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13520>
   275e4:	ldr	sl, [sl]
   275e8:	cmp	sl, #0
   275ec:	bne	27394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13508>
   275f0:	b	273fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13570>
   275f4:	tst	r3, #1
   275f8:	beq	27438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135ac>
   275fc:	ldr	sl, [sl]
   27600:	cmp	sl, #0
   27604:	bne	27420 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13594>
   27608:	b	27488 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x135fc>
   2760c:	movw	r3, #65288	; 0xff08
   27610:	movt	r3, #9
   27614:	ldr	r2, [r3, #304]	; 0x130
   27618:	add	r2, r2, #1
   2761c:	str	r2, [r3, #304]	; 0x130
   27620:	str	r2, [r7, #8]
   27624:	b	274ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13620>
   27628:	ldr	r2, [pc]	; 27630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x137a4>
   2762c:	b	274cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13640>
   27630:	ldrdeq	r0, [sl], -r4
   27634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27638:	movw	r4, #1088	; 0x440
   2763c:	movt	r4, #10
   27640:	movw	r5, #63248	; 0xf710
   27644:	movt	r5, #9
   27648:	sub	sp, sp, #228	; 0xe4
   2764c:	ldr	r0, [r4, #144]	; 0x90
   27650:	ldr	r3, [r5]
   27654:	cmp	r0, #0
   27658:	str	r4, [sp, #32]
   2765c:	str	r5, [sp, #92]	; 0x5c
   27660:	str	r3, [sp, #220]	; 0xdc
   27664:	beq	2766c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x137e0>
   27668:	bl	1e2f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa46c>
   2766c:	movw	r4, #1456	; 0x5b0
   27670:	movt	r4, #10
   27674:	movw	r6, #65288	; 0xff08
   27678:	movt	r6, #9
   2767c:	ldr	r3, [r4]
   27680:	movw	r0, #14524	; 0x38bc
   27684:	ldr	r1, [r6, #132]	; 0x84
   27688:	movt	r0, #2
   2768c:	str	r6, [sp, #36]	; 0x24
   27690:	str	r3, [r6, #244]	; 0xf4
   27694:	bl	20e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcfbc>
   27698:	bl	1eab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xac24>
   2769c:	bl	2efd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b14c>
   276a0:	ldr	r5, [r6, #252]	; 0xfc
   276a4:	cmp	r5, #0
   276a8:	beq	276c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13834>
   276ac:	ldr	r0, [r5, #4]
   276b0:	bl	1e0d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa24c>
   276b4:	ldr	r5, [r5]
   276b8:	cmp	r5, #0
   276bc:	bne	276ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13820>
   276c0:	bl	13d9c <bfd_section_already_linked_table_init@plt>
   276c4:	cmp	r0, #0
   276c8:	beq	28dd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f48>
   276cc:	ldr	r7, [sp, #36]	; 0x24
   276d0:	mov	r1, #0
   276d4:	ldr	r3, [r4]
   276d8:	ldr	r0, [r7, #132]	; 0x84
   276dc:	str	r3, [r7, #244]	; 0xf4
   276e0:	bl	2506c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111e0>
   276e4:	ldr	sl, [sp, #32]
   276e8:	ldrb	r3, [sl, #1]
   276ec:	tst	r3, #1
   276f0:	bne	28c3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14db0>
   276f4:	ldr	r7, [sp, #32]
   276f8:	ldr	r3, [r7, #68]	; 0x44
   276fc:	cmp	r3, #0
   27700:	beq	27714 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13888>
   27704:	movw	r0, #10132	; 0x2794
   27708:	movw	r1, #6893	; 0x1aed
   2770c:	movt	r0, #5
   27710:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   27714:	ldr	sl, [sp, #36]	; 0x24
   27718:	movw	r3, #65288	; 0xff08
   2771c:	ldr	ip, [sp, #32]
   27720:	movt	r3, #9
   27724:	movw	r2, #1088	; 0x440
   27728:	movt	r2, #10
   2772c:	ldr	r1, [sl, #256]	; 0x100
   27730:	cmp	r1, #0
   27734:	add	r1, r3, #252	; 0xfc
   27738:	str	r1, [ip, #68]	; 0x44
   2773c:	beq	29218 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1538c>
   27740:	ldr	r4, [sp, #32]
   27744:	movw	r8, #1336	; 0x538
   27748:	movt	r8, #10
   2774c:	ldr	r0, [r4, #76]	; 0x4c
   27750:	bl	25bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d34>
   27754:	ldr	r0, [r4, #80]	; 0x50
   27758:	bl	25bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d34>
   2775c:	bl	2ef28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b09c>
   27760:	ldr	r3, [r8, #80]	; 0x50
   27764:	cmp	r3, #0
   27768:	beq	27830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139a4>
   2776c:	ldr	r5, [sp, #36]	; 0x24
   27770:	movw	r4, #65288	; 0xff08
   27774:	movt	r4, #9
   27778:	ldr	r3, [r5, #228]	; 0xe4
   2777c:	cmp	r3, #0
   27780:	beq	27830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139a4>
   27784:	mov	r2, #5
   27788:	movw	r1, #13460	; 0x3494
   2778c:	mov	r0, #0
   27790:	movt	r1, #5
   27794:	bl	13688 <dcgettext@plt>
   27798:	mov	r1, #1
   2779c:	mov	r2, #100	; 0x64
   277a0:	mov	r3, r0
   277a4:	add	r0, sp, #120	; 0x78
   277a8:	bl	13acc <__sprintf_chk@plt>
   277ac:	add	r1, sp, #120	; 0x78
   277b0:	movw	r0, #14204	; 0x377c
   277b4:	movt	r0, #5
   277b8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   277bc:	ldr	r4, [r4, #228]	; 0xe4
   277c0:	cmp	r4, #0
   277c4:	beq	27830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139a4>
   277c8:	ldr	r1, [r4, #4]
   277cc:	movw	r0, #14204	; 0x377c
   277d0:	movt	r0, #5
   277d4:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   277d8:	ldr	r0, [r4, #4]
   277dc:	bl	13a24 <strlen@plt>
   277e0:	cmp	r0, #28
   277e4:	mov	r5, r0
   277e8:	bhi	27b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c8c>
   277ec:	add	r5, r5, #1
   277f0:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   277f4:	cmp	r5, #29
   277f8:	bls	277ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13960>
   277fc:	ldr	r1, [r4, #8]
   27800:	cmp	r1, #0
   27804:	beq	27814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13988>
   27808:	movw	r0, #13528	; 0x34d8
   2780c:	movt	r0, #5
   27810:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   27814:	ldr	r1, [r4, #12]
   27818:	movw	r0, #13532	; 0x34dc
   2781c:	movt	r0, #5
   27820:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   27824:	ldr	r4, [r4]
   27828:	cmp	r4, #0
   2782c:	bne	277c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1393c>
   27830:	bl	13dd8 <bfd_section_already_linked_table_free@plt>
   27834:	ldr	r6, [sp, #36]	; 0x24
   27838:	ldr	r4, [r6, #216]	; 0xd8
   2783c:	cmp	r4, #0
   27840:	beq	29168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x152dc>
   27844:	movw	ip, #1244	; 0x4dc
   27848:	movt	ip, #10
   2784c:	movw	r7, #1088	; 0x440
   27850:	str	ip, [sp, #64]	; 0x40
   27854:	movt	r7, #10
   27858:	ldr	r6, [sp, #32]
   2785c:	mov	sl, ip
   27860:	b	27870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139e4>
   27864:	ldr	r4, [r4, #24]
   27868:	cmp	r4, #0
   2786c:	beq	27940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13ab4>
   27870:	ldrb	r3, [r4, #37]	; 0x25
   27874:	tst	r3, #32
   27878:	bne	27864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139d8>
   2787c:	ldr	r5, [r4, #16]
   27880:	ldr	r1, [r6, #52]	; 0x34
   27884:	ldr	r2, [sl, #32]
   27888:	mov	r0, r5
   2788c:	bl	13790 <bfd_arch_get_compatible@plt>
   27890:	ldrb	r3, [r6]
   27894:	and	r3, r3, #3
   27898:	cmp	r3, #2
   2789c:	mov	r9, r0
   278a0:	beq	278b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13a24>
   278a4:	ldrb	r3, [r7, #3]
   278a8:	tst	r3, #2
   278ac:	beq	278e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13a54>
   278b0:	cmp	r9, #0
   278b4:	beq	278d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13a48>
   278b8:	ldr	r3, [r6, #52]	; 0x34
   278bc:	ldr	r2, [r5, #4]
   278c0:	ldr	r3, [r3, #4]
   278c4:	ldr	r2, [r2, #4]
   278c8:	ldr	r3, [r3, #4]
   278cc:	cmp	r2, r3
   278d0:	beq	278e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13a5c>
   278d4:	ldr	r3, [r5, #40]	; 0x28
   278d8:	tst	r3, #32
   278dc:	bne	28924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a98>
   278e0:	cmp	r9, #0
   278e4:	beq	288d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a48>
   278e8:	ldr	r3, [r5, #108]	; 0x6c
   278ec:	cmp	r3, #0
   278f0:	beq	27864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139d8>
   278f4:	ldr	r3, [sl, #20]
   278f8:	cmp	r3, #0
   278fc:	movne	r9, #0
   27900:	beq	2895c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ad0>
   27904:	ldr	r1, [r6, #52]	; 0x34
   27908:	mov	r0, r5
   2790c:	ldr	r3, [r1, #4]
   27910:	ldr	r3, [r3, #172]	; 0xac
   27914:	blx	r3
   27918:	cmp	r0, #0
   2791c:	bne	287d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14948>
   27920:	ldr	r3, [sl, #20]
   27924:	cmp	r3, #0
   27928:	bne	287bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14930>
   2792c:	mov	r0, r9
   27930:	bl	138ec <bfd_set_error_handler@plt>
   27934:	ldr	r4, [r4, #24]
   27938:	cmp	r4, #0
   2793c:	bne	27870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139e4>
   27940:	ldr	sl, [sp, #64]	; 0x40
   27944:	ldr	r3, [sl, #80]	; 0x50
   27948:	cmp	r3, #0
   2794c:	beq	27a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13be4>
   27950:	ldr	r4, [sp, #36]	; 0x24
   27954:	ldr	r6, [r4, #216]	; 0xd8
   27958:	cmp	r6, #0
   2795c:	beq	291c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15334>
   27960:	mov	r4, #0
   27964:	movw	r1, #13772	; 0x35cc
   27968:	ldr	r0, [r6, #16]
   2796c:	movt	r1, #5
   27970:	bl	13844 <bfd_get_section_by_name@plt>
   27974:	subs	r9, r0, #0
   27978:	beq	27a04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b78>
   2797c:	ldr	r7, [r9, #48]	; 0x30
   27980:	mov	fp, #0
   27984:	ldr	sl, [r9, #52]	; 0x34
   27988:	mov	r0, r7
   2798c:	bl	137b4 <xmalloc@plt>
   27990:	mov	r1, r9
   27994:	mov	r5, r0
   27998:	ldr	r0, [r6, #16]
   2799c:	mov	r2, r5
   279a0:	str	sl, [sp, #12]
   279a4:	str	r7, [sp, #8]
   279a8:	mov	sl, #0
   279ac:	strd	sl, [sp]
   279b0:	bl	1367c <bfd_get_section_contents@plt>
   279b4:	cmp	r0, #0
   279b8:	beq	27f00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14074>
   279bc:	add	r7, r5, r7
   279c0:	cmp	r5, r7
   279c4:	bcs	279f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b6c>
   279c8:	mov	r2, #0
   279cc:	mov	r1, r5
   279d0:	mov	r0, r4
   279d4:	mov	r3, r2
   279d8:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   279dc:	mov	r1, #0
   279e0:	mov	r4, r0
   279e4:	mov	r0, r5
   279e8:	bl	13754 <__rawmemchr@plt>
   279ec:	add	r5, r0, #1
   279f0:	cmp	r5, r7
   279f4:	bcc	279c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b3c>
   279f8:	ldr	r3, [r9, #20]
   279fc:	orr	r3, r3, #2129920	; 0x208000
   27a00:	str	r3, [r9, #20]
   27a04:	ldr	r6, [r6, #24]
   27a08:	cmp	r6, #0
   27a0c:	bne	27964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13ad8>
   27a10:	mov	r0, #0
   27a14:	movw	r1, #12032	; 0x2f00
   27a18:	mov	r2, r0
   27a1c:	mov	r3, r0
   27a20:	movt	r1, #5
   27a24:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   27a28:	ldr	ip, [sp, #64]	; 0x40
   27a2c:	mov	r1, #60	; 0x3c
   27a30:	ldr	r6, [ip, #80]	; 0x50
   27a34:	mov	r5, r0
   27a38:	mov	r0, #1
   27a3c:	bl	13e38 <xcalloc@plt>
   27a40:	movw	ip, #58472	; 0xe468
   27a44:	mvn	lr, #0
   27a48:	movt	ip, #1
   27a4c:	mov	r2, #0
   27a50:	mov	r3, r0
   27a54:	mov	r1, r0
   27a58:	str	r5, [r3, #28]
   27a5c:	mov	r0, r6
   27a60:	str	r4, [r3, #12]
   27a64:	str	lr, [r3, #48]	; 0x30
   27a68:	str	ip, [r3, #56]	; 0x38
   27a6c:	bl	272b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1342c>
   27a70:	bl	29ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1603c>
   27a74:	mov	r0, #1
   27a78:	bl	23e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   27a7c:	ldr	r4, [sp, #36]	; 0x24
   27a80:	ldr	r5, [r4, #212]	; 0xd4
   27a84:	cmp	r5, #0
   27a88:	beq	29178 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x152ec>
   27a8c:	movw	sl, #1480	; 0x5c8
   27a90:	movt	sl, #10
   27a94:	str	sl, [sp, #88]	; 0x58
   27a98:	mov	r4, sl
   27a9c:	mov	r6, sl
   27aa0:	b	27ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c54>
   27aa4:	ldrd	r2, [r4, #16]
   27aa8:	strd	r2, [r5, #16]
   27aac:	strd	r2, [r5, #40]	; 0x28
   27ab0:	ldr	r0, [r5, #32]
   27ab4:	cmp	r0, #0
   27ab8:	beq	27ad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c48>
   27abc:	bl	2e330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4a4>
   27ac0:	ldr	r0, [r6, #32]
   27ac4:	cmp	r0, #0
   27ac8:	beq	27b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c98>
   27acc:	ldrd	r2, [r4, #16]
   27ad0:	strd	r2, [r5, #24]
   27ad4:	ldr	r5, [r5, #8]
   27ad8:	cmp	r5, #0
   27adc:	beq	27b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13cbc>
   27ae0:	ldr	r0, [r5, #12]
   27ae4:	cmp	r0, #0
   27ae8:	beq	27ab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c24>
   27aec:	bl	2e330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4a4>
   27af0:	ldr	r0, [r6, #32]
   27af4:	cmp	r0, #0
   27af8:	bne	27aa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c18>
   27afc:	mov	r2, #5
   27b00:	movw	r1, #13832	; 0x3608
   27b04:	movt	r1, #5
   27b08:	bl	13688 <dcgettext@plt>
   27b0c:	ldr	r1, [r5]
   27b10:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   27b14:	b	27ab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c24>
   27b18:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   27b1c:	mov	r5, #0
   27b20:	b	277ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13960>
   27b24:	mov	r2, #5
   27b28:	movw	r1, #13876	; 0x3634
   27b2c:	movt	r1, #5
   27b30:	bl	13688 <dcgettext@plt>
   27b34:	ldr	r1, [r5]
   27b38:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   27b3c:	ldr	r5, [r5, #8]
   27b40:	cmp	r5, #0
   27b44:	bne	27ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13c54>
   27b48:	ldr	r6, [sp, #64]	; 0x40
   27b4c:	mov	r1, #0
   27b50:	ldr	r7, [sp, #88]	; 0x58
   27b54:	movw	r3, #1244	; 0x4dc
   27b58:	movt	r3, #10
   27b5c:	ldr	r2, [r6, #4]
   27b60:	str	r1, [r7]
   27b64:	cmp	r2, r1
   27b68:	bne	27bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d64>
   27b6c:	ldr	ip, [sp, #32]
   27b70:	ldrb	r2, [ip]
   27b74:	and	r2, r2, #3
   27b78:	cmp	r2, #2
   27b7c:	beq	28864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x149d8>
   27b80:	ldr	r2, [r8, #44]	; 0x2c
   27b84:	cmp	r2, #0
   27b88:	beq	28eb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15028>
   27b8c:	cmp	r2, #2
   27b90:	add	r4, sp, #224	; 0xe0
   27b94:	beq	290f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15268>
   27b98:	ldr	r5, [sp, #32]
   27b9c:	mov	r3, #0
   27ba0:	str	r3, [r4, #-112]!	; 0xffffff90
   27ba4:	movw	r1, #64084	; 0xfa54
   27ba8:	ldr	r0, [r5, #32]
   27bac:	movt	r1, #1
   27bb0:	mov	r2, r4
   27bb4:	bl	13b50 <bfd_link_hash_traverse@plt>
   27bb8:	ldr	r1, [sp, #112]	; 0x70
   27bbc:	movw	r3, #1088	; 0x440
   27bc0:	movt	r3, #10
   27bc4:	add	r1, r1, #1
   27bc8:	str	r1, [sp, #112]	; 0x70
   27bcc:	cmp	r1, #4
   27bd0:	bls	27ba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d18>
   27bd4:	ldr	r0, [r3, #32]
   27bd8:	movw	r1, #64084	; 0xfa54
   27bdc:	mov	r2, r4
   27be0:	movt	r1, #1
   27be4:	mvn	r3, #0
   27be8:	str	r3, [sp, #112]	; 0x70
   27bec:	bl	13b50 <bfd_link_hash_traverse@plt>
   27bf0:	ldr	r5, [sp, #36]	; 0x24
   27bf4:	movw	r4, #65288	; 0xff08
   27bf8:	movt	r4, #9
   27bfc:	ldr	r0, [r5, #132]	; 0x84
   27c00:	bl	24b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10cd4>
   27c04:	ldr	r6, [sp, #32]
   27c08:	ldrb	r3, [r6]
   27c0c:	and	r3, r3, #3
   27c10:	cmp	r3, #2
   27c14:	beq	28880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x149f4>
   27c18:	ldr	r7, [sp, #32]
   27c1c:	movw	r1, #1088	; 0x440
   27c20:	movt	r1, #10
   27c24:	ldrb	r3, [r7]
   27c28:	tst	r3, #64	; 0x40
   27c2c:	beq	27c40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13db4>
   27c30:	ldr	r0, [r1, #52]	; 0x34
   27c34:	ldr	r3, [r0, #4]
   27c38:	ldr	r3, [r3, #384]	; 0x180
   27c3c:	blx	r3
   27c40:	ldr	sl, [sp, #32]
   27c44:	movw	r3, #1088	; 0x440
   27c48:	movt	r3, #10
   27c4c:	ldrb	r2, [sl, #6]
   27c50:	tst	r2, #2
   27c54:	beq	27c88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13dfc>
   27c58:	ldr	r4, [r3, #56]	; 0x38
   27c5c:	cmp	r4, #0
   27c60:	beq	27c88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13dfc>
   27c64:	mov	r0, r4
   27c68:	movw	r1, #1088	; 0x440
   27c6c:	movt	r1, #10
   27c70:	bl	13db4 <bfd_link_check_relocs@plt>
   27c74:	ldr	r4, [r4, #164]	; 0xa4
   27c78:	cmp	r0, #0
   27c7c:	streq	r0, [r8, #4]
   27c80:	cmp	r4, #0
   27c84:	bne	27c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13dd8>
   27c88:	ldr	ip, [sp, #36]	; 0x24
   27c8c:	movw	r4, #1048	; 0x418
   27c90:	movt	r4, #10
   27c94:	ldr	r0, [ip, #132]	; 0x84
   27c98:	bl	1da00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9b74>
   27c9c:	ldr	r5, [sp, #36]	; 0x24
   27ca0:	mov	r1, #0
   27ca4:	str	r4, [sp, #40]	; 0x28
   27ca8:	mov	r2, r1
   27cac:	mov	r6, r1
   27cb0:	ldr	r3, [r5, #232]	; 0xe8
   27cb4:	mov	r4, r1
   27cb8:	ldr	r0, [r5, #132]	; 0x84
   27cbc:	add	r3, r3, #1
   27cc0:	str	r3, [r5, #232]	; 0xe8
   27cc4:	bl	24cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10e20>
   27cc8:	ldr	sl, [sp, #40]	; 0x28
   27ccc:	ldr	r7, [sl]
   27cd0:	ldr	r5, [r7]
   27cd4:	cmp	r5, #0
   27cd8:	mov	r9, r5
   27cdc:	beq	27f3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140b0>
   27ce0:	ldr	r3, [r5, #4]
   27ce4:	cmp	r3, #0
   27ce8:	bne	27d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13ed0>
   27cec:	cmp	r6, #0
   27cf0:	beq	27d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e88>
   27cf4:	ldr	r3, [r6, #16]
   27cf8:	cmp	r5, r3
   27cfc:	beq	27d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e88>
   27d00:	movw	r0, #10132	; 0x2794
   27d04:	movw	r1, #3738	; 0xe9a
   27d08:	movt	r0, #5
   27d0c:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   27d10:	ldr	r5, [r7]
   27d14:	cmp	r4, #0
   27d18:	ldr	r2, [r9, #72]	; 0x48
   27d1c:	movw	r3, #65534	; 0xfffe
   27d20:	movt	r3, #65535	; 0xffff
   27d24:	moveq	r7, r5
   27d28:	movne	r7, r5
   27d2c:	ldr	r5, [r7]
   27d30:	moveq	r4, r9
   27d34:	movne	r6, r9
   27d38:	moveq	r6, r4
   27d3c:	cmp	r5, #0
   27d40:	rsb	r3, r2, r3
   27d44:	str	r3, [r9, #72]	; 0x48
   27d48:	mov	r9, r5
   27d4c:	beq	27f3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140b0>
   27d50:	ldr	r3, [r5, #4]
   27d54:	cmp	r3, #0
   27d58:	beq	27cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e60>
   27d5c:	cmp	r3, #14
   27d60:	movne	r7, r5
   27d64:	bne	27cd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e44>
   27d68:	mov	r1, #0
   27d6c:	ldr	r0, [r5, #8]
   27d70:	mov	r2, r1
   27d74:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   27d78:	cmp	r0, #0
   27d7c:	beq	28488 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x145fc>
   27d80:	ldr	r3, [r5, #12]
   27d84:	cmp	r3, #0
   27d88:	bne	2847c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x145f0>
   27d8c:	cmp	r6, #0
   27d90:	beq	27ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14030>
   27d94:	ldr	r3, [r4, #20]
   27d98:	ldr	r2, [r6, #16]
   27d9c:	str	r2, [r3, #16]
   27da0:	ldr	r2, [r6, #16]
   27da4:	cmp	r2, #0
   27da8:	addeq	r3, r3, #16
   27dac:	strne	r3, [r2, #20]
   27db0:	ldreq	fp, [sp, #40]	; 0x28
   27db4:	streq	r3, [fp, #4]
   27db8:	ldr	r3, [r0, #16]
   27dbc:	str	r3, [r6, #16]
   27dc0:	ldr	r3, [r0, #16]
   27dc4:	cmp	r3, #0
   27dc8:	addeq	r3, r6, #16
   27dcc:	strne	r6, [r3, #20]
   27dd0:	ldreq	ip, [sp, #40]	; 0x28
   27dd4:	str	r0, [r4, #20]
   27dd8:	str	r4, [r0, #16]
   27ddc:	streq	r3, [ip, #4]
   27de0:	mov	ip, #0
   27de4:	mov	lr, ip
   27de8:	b	27df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13f6c>
   27dec:	ldr	r4, [r4, #16]
   27df0:	cmp	r4, #0
   27df4:	beq	27e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13fac>
   27df8:	ldr	r2, [r4, #28]
   27dfc:	movw	r3, #65534	; 0xfffe
   27e00:	ldr	r1, [r4, #72]	; 0x48
   27e04:	movt	r3, #65535	; 0xffff
   27e08:	cmp	r2, #0
   27e0c:	rsb	r3, r1, r3
   27e10:	str	r3, [r4, #72]	; 0x48
   27e14:	beq	27e30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13fa4>
   27e18:	ldr	r3, [r2, #180]	; 0xb4
   27e1c:	cmp	r3, #0
   27e20:	beq	27e30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13fa4>
   27e24:	cmp	lr, #0
   27e28:	mov	ip, r2
   27e2c:	moveq	lr, r2
   27e30:	cmp	r6, r4
   27e34:	bne	27dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13f60>
   27e38:	cmp	ip, #0
   27e3c:	moveq	r4, ip
   27e40:	beq	27ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14030>
   27e44:	ldr	r3, [r0, #28]
   27e48:	cmp	r3, #0
   27e4c:	beq	290b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15228>
   27e50:	cmp	r3, ip
   27e54:	moveq	r4, #0
   27e58:	beq	27ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14030>
   27e5c:	ldr	r2, [lr, #16]
   27e60:	ldr	r1, [ip, #12]
   27e64:	cmp	r2, #0
   27e68:	ldreq	r5, [sp, #32]
   27e6c:	strne	r1, [r2, #12]
   27e70:	ldrne	r1, [ip, #12]
   27e74:	ldreq	r4, [r5, #52]	; 0x34
   27e78:	streq	r1, [r4, #100]	; 0x64
   27e7c:	cmp	r1, #0
   27e80:	strne	r2, [r1, #16]
   27e84:	mov	r4, #0
   27e88:	ldreq	r6, [sp, #32]
   27e8c:	ldreq	r1, [r6, #52]	; 0x34
   27e90:	streq	r2, [r1, #104]	; 0x68
   27e94:	ldr	r2, [r3, #12]
   27e98:	str	r2, [ip, #12]
   27e9c:	ldr	r2, [r3, #12]
   27ea0:	cmp	r2, #0
   27ea4:	strne	ip, [r2, #16]
   27ea8:	ldreq	sl, [sp, #32]
   27eac:	ldreq	r2, [sl, #52]	; 0x34
   27eb0:	streq	ip, [r2, #104]	; 0x68
   27eb4:	str	r3, [lr, #16]
   27eb8:	str	lr, [r3, #12]
   27ebc:	bl	1d680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x97f4>
   27ec0:	ldr	r2, [r7]
   27ec4:	ldr	fp, [sp, #40]	; 0x28
   27ec8:	mov	r6, #0
   27ecc:	ldr	r5, [sp, #40]	; 0x28
   27ed0:	ldr	r1, [r2]
   27ed4:	ldr	r3, [fp]
   27ed8:	ldr	r2, [r3]
   27edc:	str	r1, [r3]
   27ee0:	ldr	r3, [r0]
   27ee4:	cmp	r3, #0
   27ee8:	str	r3, [r7]
   27eec:	ldreq	ip, [sp, #36]	; 0x24
   27ef0:	streq	r7, [ip, #136]	; 0x88
   27ef4:	str	r2, [r0]
   27ef8:	ldr	r7, [r5]
   27efc:	b	27cd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13e44>
   27f00:	mov	r2, #5
   27f04:	movw	r1, #13784	; 0x35d8
   27f08:	movt	r1, #5
   27f0c:	bl	13688 <dcgettext@plt>
   27f10:	mov	r1, r9
   27f14:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   27f18:	b	279bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b30>
   27f1c:	ldr	r2, [r4, #72]	; 0x48
   27f20:	cmp	r6, r4
   27f24:	movw	r3, #65534	; 0xfffe
   27f28:	movt	r3, #65535	; 0xffff
   27f2c:	rsb	r3, r2, r3
   27f30:	str	r3, [r4, #72]	; 0x48
   27f34:	beq	27f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140b8>
   27f38:	ldr	r4, [r4, #16]
   27f3c:	cmp	r4, #0
   27f40:	bne	27f1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14090>
   27f44:	ldr	r6, [sp, #36]	; 0x24
   27f48:	ldr	r5, [r6, #216]	; 0xd8
   27f4c:	cmp	r5, #0
   27f50:	beq	27fc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14138>
   27f54:	ldr	r6, [sp, #32]
   27f58:	movw	r9, #65288	; 0xff08
   27f5c:	movt	r9, #9
   27f60:	ldr	r3, [r5, #16]
   27f64:	ldr	r4, [r3, #100]	; 0x64
   27f68:	cmp	r4, #0
   27f6c:	bne	27f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140f4>
   27f70:	b	27fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1412c>
   27f74:	ldr	r4, [r4, #12]
   27f78:	cmp	r4, #0
   27f7c:	beq	27fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1412c>
   27f80:	ldr	r3, [r4, #88]	; 0x58
   27f84:	cmp	r3, #0
   27f88:	bne	27f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140e8>
   27f8c:	ldrb	r3, [r5, #36]	; 0x24
   27f90:	tst	r3, #16
   27f94:	bne	284fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14670>
   27f98:	ldr	r3, [r4, #20]
   27f9c:	ands	sl, r3, #32768	; 0x8000
   27fa0:	beq	284a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1461c>
   27fa4:	ldr	r3, [pc, #4000]	; 28f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x150c0>
   27fa8:	str	r3, [r4, #88]	; 0x58
   27fac:	ldr	r4, [r4, #12]
   27fb0:	cmp	r4, #0
   27fb4:	bne	27f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140f4>
   27fb8:	ldr	r5, [r5, #24]
   27fbc:	cmp	r5, #0
   27fc0:	bne	27f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140d4>
   27fc4:	ldr	r7, [sp, #32]
   27fc8:	movw	r4, #1088	; 0x440
   27fcc:	movt	r4, #10
   27fd0:	ldrb	r3, [r7]
   27fd4:	and	r3, r3, #3
   27fd8:	cmp	r3, #2
   27fdc:	beq	28024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14198>
   27fe0:	ldr	r0, [r4, #52]	; 0x34
   27fe4:	mov	r1, r4
   27fe8:	ldr	r3, [r0, #4]
   27fec:	ldr	r3, [r3, #392]	; 0x188
   27ff0:	blx	r3
   27ff4:	ldr	r0, [r4, #52]	; 0x34
   27ff8:	movw	r1, #1044	; 0x414
   27ffc:	movt	r1, #5
   28000:	bl	13844 <bfd_get_section_by_name@plt>
   28004:	cmp	r0, #0
   28008:	beq	28024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14198>
   2800c:	ldr	r3, [r8, #48]	; 0x30
   28010:	cmp	r3, #0
   28014:	ldr	r3, [r0, #20]
   28018:	orrne	r3, r3, #8
   2801c:	biceq	r3, r3, #8
   28020:	str	r3, [r0, #20]
   28024:	bl	2ef60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0d4>
   28028:	mov	r0, #40	; 0x28
   2802c:	bl	137b4 <xmalloc@plt>
   28030:	movw	r3, #1040	; 0x410
   28034:	movt	r3, #10
   28038:	ldr	r5, [r3]
   2803c:	cmp	r5, #0
   28040:	mov	r7, r0
   28044:	beq	281c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14338>
   28048:	movw	r6, #14064	; 0x36f0
   2804c:	mov	r9, #0
   28050:	movt	r6, #5
   28054:	mov	r8, #1
   28058:	str	r6, [sp, #56]	; 0x38
   2805c:	mov	r6, #10
   28060:	movw	r4, #14052	; 0x36e4
   28064:	movt	r4, #5
   28068:	str	r4, [sp, #48]	; 0x30
   2806c:	ldr	sl, [sp, #40]	; 0x28
   28070:	ldr	fp, [sl]
   28074:	cmp	fp, #0
   28078:	beq	287b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14928>
   2807c:	mov	r4, #0
   28080:	ldr	r3, [fp, #72]	; 0x48
   28084:	cmp	r3, #0
   28088:	blt	28108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1427c>
   2808c:	ldr	r3, [fp, #56]	; 0x38
   28090:	cmp	r3, #0
   28094:	beq	283f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14564>
   28098:	ldr	r2, [fp, #28]
   2809c:	mov	r9, r3
   280a0:	cmp	r2, #0
   280a4:	beq	28108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1427c>
   280a8:	cmp	r3, #0
   280ac:	beq	28108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1427c>
   280b0:	mov	sl, r9
   280b4:	b	280d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14248>
   280b8:	ldr	r3, [fp, #28]
   280bc:	str	r3, [r7, r4, lsl #2]
   280c0:	add	r4, r4, #1
   280c4:	str	r8, [sl, #8]
   280c8:	ldr	sl, [sl]
   280cc:	cmp	sl, #0
   280d0:	beq	28108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1427c>
   280d4:	ldr	r0, [sl, #4]
   280d8:	ldr	r1, [r5, #4]
   280dc:	bl	13490 <strcmp@plt>
   280e0:	cmp	r0, #0
   280e4:	bne	280c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1423c>
   280e8:	cmp	r6, r4
   280ec:	bhi	280b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1422c>
   280f0:	lsl	r6, r6, #1
   280f4:	mov	r0, r7
   280f8:	lsl	r1, r6, #2
   280fc:	bl	13724 <xrealloc@plt>
   28100:	mov	r7, r0
   28104:	b	280b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1422c>
   28108:	ldr	fp, [fp, #16]
   2810c:	cmp	fp, #0
   28110:	bne	28080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x141f4>
   28114:	ldr	r0, [r5, #24]
   28118:	cmp	r0, #0
   2811c:	moveq	sl, r0
   28120:	beq	2813c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x142b0>
   28124:	ldr	fp, [sp, #48]	; 0x30
   28128:	mov	r2, #0
   2812c:	mov	r3, #0
   28130:	str	fp, [sp]
   28134:	bl	2eba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad1c>
   28138:	mov	sl, r0
   2813c:	ldr	lr, [r5, #20]
   28140:	cmp	lr, #0
   28144:	beq	2851c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14690>
   28148:	ldr	ip, [sp, #56]	; 0x38
   2814c:	mov	r0, lr
   28150:	mov	r2, #0
   28154:	mov	r3, #0
   28158:	str	ip, [sp]
   2815c:	bl	2eba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad1c>
   28160:	ldr	lr, [r5, #20]
   28164:	ldr	ip, [r5, #8]
   28168:	adds	lr, lr, #0
   2816c:	ldr	r2, [r5, #24]
   28170:	mov	r3, sl
   28174:	strd	r0, [sp, #8]
   28178:	movne	lr, #1
   2817c:	mov	r1, ip
   28180:	str	lr, [sp]
   28184:	ldr	sl, [sp, #32]
   28188:	adds	r2, r2, #0
   2818c:	ldr	ip, [r5, #12]
   28190:	movne	r2, #1
   28194:	ldr	r0, [sl, #52]	; 0x34
   28198:	str	ip, [sp, #16]
   2819c:	ldr	ip, [r5, #16]
   281a0:	str	r4, [sp, #24]
   281a4:	str	r7, [sp, #28]
   281a8:	str	ip, [sp, #20]
   281ac:	bl	13a00 <bfd_record_phdr@plt>
   281b0:	cmp	r0, #0
   281b4:	beq	28528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1469c>
   281b8:	ldr	r5, [r5]
   281bc:	cmp	r5, #0
   281c0:	bne	2806c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x141e0>
   281c4:	mov	r0, r7
   281c8:	bl	13574 <free@plt>
   281cc:	ldr	fp, [sp, #40]	; 0x28
   281d0:	ldr	r4, [fp]
   281d4:	cmp	r4, #0
   281d8:	beq	2826c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143e0>
   281dc:	ldr	r3, [r4, #72]	; 0x48
   281e0:	cmp	r3, #0
   281e4:	blt	28260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143d4>
   281e8:	ldr	r3, [r4, #28]
   281ec:	cmp	r3, #0
   281f0:	beq	28260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143d4>
   281f4:	ldr	r5, [r4, #56]	; 0x38
   281f8:	cmp	r5, #0
   281fc:	bne	28210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14384>
   28200:	b	28260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143d4>
   28204:	ldr	r5, [r5]
   28208:	cmp	r5, #0
   2820c:	beq	28260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x143d4>
   28210:	ldr	r6, [r5, #8]
   28214:	cmp	r6, #0
   28218:	bne	28204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14378>
   2821c:	movw	r1, #14120	; 0x3728
   28220:	ldr	r0, [r5, #4]
   28224:	movt	r1, #5
   28228:	bl	13490 <strcmp@plt>
   2822c:	cmp	r0, #0
   28230:	beq	28204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14378>
   28234:	mov	r2, #5
   28238:	mov	r0, r6
   2823c:	movw	r1, #14128	; 0x3730
   28240:	movt	r1, #5
   28244:	bl	13688 <dcgettext@plt>
   28248:	ldr	r2, [r5, #4]
   2824c:	ldr	r1, [r4, #24]
   28250:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28254:	ldr	r5, [r5]
   28258:	cmp	r5, #0
   2825c:	bne	28210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14384>
   28260:	ldr	r4, [r4, #16]
   28264:	cmp	r4, #0
   28268:	bne	281dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14350>
   2826c:	ldr	ip, [sp, #32]
   28270:	movw	r4, #1088	; 0x440
   28274:	movt	r4, #10
   28278:	ldrb	r3, [ip, #3]
   2827c:	tst	r3, #4
   28280:	beq	282c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14434>
   28284:	ldrb	r3, [r4]
   28288:	and	r3, r3, #3
   2828c:	cmp	r3, #2
   28290:	beq	282c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14434>
   28294:	ldr	r5, [sp, #88]	; 0x58
   28298:	add	r1, sp, #224	; 0xe0
   2829c:	mov	r3, #0
   282a0:	str	r3, [r1, #-112]!	; 0xffffff90
   282a4:	ldr	r0, [r5, #116]	; 0x74
   282a8:	bl	24f84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x110f8>
   282ac:	ldr	r2, [sp, #112]	; 0x70
   282b0:	cmp	r2, #0
   282b4:	ldrbeq	r3, [r4, #3]
   282b8:	bfieq	r3, r2, #2, #1
   282bc:	strbeq	r3, [r4, #3]
   282c0:	ldr	r6, [sp, #32]
   282c4:	mov	r0, #0
   282c8:	movw	r4, #1088	; 0x440
   282cc:	movt	r4, #10
   282d0:	ldr	r1, [r6, #24]
   282d4:	cmp	r1, #1
   282d8:	movls	r1, #0
   282dc:	movhi	r1, #1
   282e0:	bl	25798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1190c>
   282e4:	bl	2ef44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b0b8>
   282e8:	ldrb	r3, [r6]
   282ec:	and	r3, r3, #3
   282f0:	cmp	r3, #2
   282f4:	beq	285f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14768>
   282f8:	ldr	r3, [r4, #52]	; 0x34
   282fc:	ldr	r5, [r3, #100]	; 0x64
   28300:	cmp	r5, #0
   28304:	beq	285f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14768>
   28308:	ldr	r8, [pc, #3132]	; 28f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x150c0>
   2830c:	mov	r6, #1
   28310:	ldr	r7, [sp, #32]
   28314:	ldr	r9, [sp, #36]	; 0x24
   28318:	b	28378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x144ec>
   2831c:	mov	r1, #1
   28320:	mvn	r2, #0
   28324:	str	sl, [sp]
   28328:	movw	r3, #14196	; 0x3774
   2832c:	mov	r0, r4
   28330:	movt	r3, #5
   28334:	bl	13acc <__sprintf_chk@plt>
   28338:	mov	r2, #0
   2833c:	ldr	r0, [r7, #32]
   28340:	mov	r3, r2
   28344:	str	r6, [sp]
   28348:	mov	r1, r4
   2834c:	bl	13880 <bfd_link_hash_lookup@plt>
   28350:	cmp	r0, #0
   28354:	beq	28364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x144d8>
   28358:	ldrb	r3, [r0, #12]
   2835c:	cmp	r3, #1
   28360:	beq	28540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x146b4>
   28364:	mov	r0, r4
   28368:	bl	13574 <free@plt>
   2836c:	ldr	r5, [r5, #12]
   28370:	cmp	r5, #0
   28374:	beq	285f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14768>
   28378:	ldr	sl, [r5]
   2837c:	mov	r0, sl
   28380:	bl	13a24 <strlen@plt>
   28384:	add	r0, r0, #10
   28388:	bl	137b4 <xmalloc@plt>
   2838c:	mov	r1, #1
   28390:	mvn	r2, #0
   28394:	str	sl, [sp]
   28398:	movw	r3, #14184	; 0x3768
   2839c:	movt	r3, #5
   283a0:	mov	r4, r0
   283a4:	bl	13acc <__sprintf_chk@plt>
   283a8:	mov	r2, #0
   283ac:	ldr	r0, [r7, #32]
   283b0:	mov	r1, r4
   283b4:	str	r6, [sp]
   283b8:	mov	r3, r2
   283bc:	bl	13880 <bfd_link_hash_lookup@plt>
   283c0:	cmp	r0, #0
   283c4:	beq	2831c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14490>
   283c8:	ldrb	r3, [r0, #12]
   283cc:	cmp	r3, #1
   283d0:	bne	2831c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14490>
   283d4:	mov	r1, #3
   283d8:	mov	r2, #0
   283dc:	mov	r3, #0
   283e0:	str	r5, [r0, #20]
   283e4:	strb	r1, [r0, #12]
   283e8:	strd	r2, [r0, #24]
   283ec:	b	2831c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14490>
   283f0:	ldr	r3, [fp, #80]	; 0x50
   283f4:	cmp	r3, #2
   283f8:	beq	28108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1427c>
   283fc:	ldr	r3, [fp, #28]
   28400:	cmp	r3, #0
   28404:	beq	28108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1427c>
   28408:	ldr	r3, [r3, #20]
   2840c:	tst	r3, #1
   28410:	beq	28108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1427c>
   28414:	ldr	r3, [r5, #8]
   28418:	cmp	r3, #3
   2841c:	beq	28108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1427c>
   28420:	cmp	r9, #0
   28424:	moveq	sl, fp
   28428:	bne	280b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14224>
   2842c:	ldr	sl, [sl, #16]
   28430:	cmp	sl, #0
   28434:	beq	28450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x145c4>
   28438:	ldr	r9, [sl, #56]	; 0x38
   2843c:	cmp	r9, #0
   28440:	bne	280b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14224>
   28444:	ldr	sl, [sl, #16]
   28448:	cmp	sl, #0
   2844c:	bne	28438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x145ac>
   28450:	mov	r2, #5
   28454:	movw	r1, #14720	; 0x3980
   28458:	mov	r0, sl
   2845c:	movt	r1, #5
   28460:	bl	13688 <dcgettext@plt>
   28464:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28468:	mov	r3, sl
   2846c:	b	28098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1420c>
   28470:	ldr	r3, [r0, #72]	; 0x48
   28474:	cmp	r3, #0
   28478:	bge	27d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13f00>
   2847c:	ldr	r0, [r0, #20]
   28480:	cmp	r0, #0
   28484:	bne	28470 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x145e4>
   28488:	mov	r2, #5
   2848c:	movw	r1, #14688	; 0x3960
   28490:	mov	r0, #0
   28494:	movt	r1, #5
   28498:	bl	13688 <dcgettext@plt>
   2849c:	ldr	r1, [r5, #8]
   284a0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   284a4:	b	27f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140b8>
   284a8:	ldr	r7, [r4]
   284ac:	movw	r1, #12760	; 0x31d8
   284b0:	movt	r1, #5
   284b4:	mov	r0, r7
   284b8:	bl	13490 <strcmp@plt>
   284bc:	cmp	r0, #0
   284c0:	bne	2857c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x146f0>
   284c4:	ldrb	r3, [r6]
   284c8:	and	r3, r3, #3
   284cc:	cmp	r3, #2
   284d0:	beq	285e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14754>
   284d4:	ldr	ip, [sp, #36]	; 0x24
   284d8:	ldr	r1, [ip, #264]	; 0x108
   284dc:	cmp	r1, #0
   284e0:	movne	r3, r1
   284e4:	beq	28e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14fbc>
   284e8:	add	r0, r3, #8
   284ec:	mov	r1, r4
   284f0:	mov	r2, #0
   284f4:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   284f8:	b	27f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140e8>
   284fc:	ldr	r3, [r5, #16]
   28500:	movw	r1, #1088	; 0x440
   28504:	mov	r0, r4
   28508:	movt	r1, #10
   2850c:	ldr	r3, [r3, #4]
   28510:	ldr	r3, [r3, #364]	; 0x16c
   28514:	blx	r3
   28518:	b	27f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140e8>
   2851c:	mov	r0, #0
   28520:	mov	r1, #0
   28524:	b	28164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x142d8>
   28528:	mov	r2, #5
   2852c:	movw	r1, #14084	; 0x3704
   28530:	movt	r1, #5
   28534:	bl	13688 <dcgettext@plt>
   28538:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2853c:	b	281b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1432c>
   28540:	ldr	r3, [r5, #48]	; 0x30
   28544:	mov	ip, #3
   28548:	ldr	r1, [r5, #52]	; 0x34
   2854c:	ldr	r2, [r9, #8]
   28550:	str	r8, [r0, #20]
   28554:	rsb	lr, r2, #32
   28558:	lsr	r3, r3, r2
   2855c:	orr	r3, r3, r1, lsl lr
   28560:	sub	lr, r2, #32
   28564:	orr	r3, r3, r1, lsr lr
   28568:	lsr	r2, r1, r2
   2856c:	str	r3, [r0, #24]
   28570:	str	r2, [r0, #28]
   28574:	strb	ip, [r0, #12]
   28578:	b	28364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x144d8>
   2857c:	ldr	r2, [r8, #28]
   28580:	cmp	r2, #1
   28584:	beq	28e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ff0>
   28588:	cmp	r2, #3
   2858c:	beq	28e64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14fd8>
   28590:	ldr	r1, [r8, #56]	; 0x38
   28594:	cmp	r1, #0
   28598:	movwne	fp, #381	; 0x17d
   2859c:	beq	28c24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d98>
   285a0:	mov	r0, r4
   285a4:	mov	r1, r7
   285a8:	mov	r2, fp
   285ac:	bl	2f044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b1b8>
   285b0:	subs	sl, r0, #0
   285b4:	beq	29188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x152fc>
   285b8:	ldr	r3, [r8, #28]
   285bc:	cmp	r3, #2
   285c0:	bne	27f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140e8>
   285c4:	ldr	r3, [sl, #24]
   285c8:	movw	r0, #13976	; 0x3698
   285cc:	mov	r1, r4
   285d0:	movt	r0, #5
   285d4:	ldr	r2, [r4, #180]	; 0xb4
   285d8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   285dc:	b	27f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140e8>
   285e0:	ldr	sl, [sp, #64]	; 0x40
   285e4:	ldr	r3, [sl]
   285e8:	cmp	r3, #0
   285ec:	beq	27f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140e8>
   285f0:	b	284d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14648>
   285f4:	mov	r0, #4
   285f8:	bl	23e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10000>
   285fc:	bl	2ef98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b10c>
   28600:	bl	2ee94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b008>
   28604:	ldr	r7, [sp, #64]	; 0x40
   28608:	ldrsb	r3, [r7, #28]
   2860c:	cmp	r3, #0
   28610:	bne	28970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ae4>
   28614:	ldr	ip, [sp, #36]	; 0x24
   28618:	ldr	r4, [ip, #260]	; 0x104
   2861c:	cmp	r4, #0
   28620:	movne	r5, #1
   28624:	ldrne	r6, [sp, #32]
   28628:	beq	28684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147f8>
   2862c:	mov	r2, #0
   28630:	ldr	r0, [r6, #32]
   28634:	ldr	r1, [r4]
   28638:	mov	r3, r2
   2863c:	str	r5, [sp]
   28640:	bl	13880 <bfd_link_hash_lookup@plt>
   28644:	cmp	r0, #0
   28648:	beq	2865c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147d0>
   2864c:	ldrb	r3, [r0, #12]
   28650:	sub	r3, r3, #3
   28654:	cmp	r3, #1
   28658:	bls	28678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147ec>
   2865c:	movw	r1, #14380	; 0x382c
   28660:	mov	r0, #0
   28664:	movt	r1, #5
   28668:	mov	r2, #5
   2866c:	bl	13688 <dcgettext@plt>
   28670:	ldr	r1, [r4]
   28674:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28678:	ldr	r4, [r4, #4]
   2867c:	cmp	r4, #0
   28680:	bne	2862c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x147a0>
   28684:	ldr	r4, [sp, #32]
   28688:	ldrb	r3, [r4]
   2868c:	and	r2, r3, #67	; 0x43
   28690:	cmp	r2, #2
   28694:	beq	287e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14958>
   28698:	and	r3, r3, #3
   2869c:	cmp	r3, #3
   286a0:	movne	r5, #1
   286a4:	beq	287e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14958>
   286a8:	cmp	r2, #66	; 0x42
   286ac:	beq	287f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1496c>
   286b0:	ldr	r6, [sp, #36]	; 0x24
   286b4:	movw	r3, #65288	; 0xff08
   286b8:	movt	r3, #9
   286bc:	ldr	r1, [r6, #256]	; 0x100
   286c0:	cmp	r1, #0
   286c4:	beq	29098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1520c>
   286c8:	ldr	r7, [sp, #32]
   286cc:	mov	r2, #0
   286d0:	mov	ip, #1
   286d4:	mov	r3, r2
   286d8:	movw	r6, #1088	; 0x440
   286dc:	movt	r6, #10
   286e0:	ldr	r0, [r7, #32]
   286e4:	str	ip, [sp]
   286e8:	bl	13880 <bfd_link_hash_lookup@plt>
   286ec:	cmp	r0, #0
   286f0:	beq	28704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14878>
   286f4:	ldrb	r3, [r0, #12]
   286f8:	sub	r3, r3, #3
   286fc:	cmp	r3, #1
   28700:	bls	28dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f60>
   28704:	ldr	ip, [sp, #36]	; 0x24
   28708:	mov	r2, #0
   2870c:	add	r1, sp, #112	; 0x70
   28710:	movw	r4, #65288	; 0xff08
   28714:	movt	r4, #9
   28718:	ldr	r0, [ip, #256]	; 0x100
   2871c:	bl	13478 <bfd_scan_vma@plt>
   28720:	mov	r3, r1
   28724:	ldr	r1, [sp, #112]	; 0x70
   28728:	mov	r2, r0
   2872c:	ldrb	r1, [r1]
   28730:	cmp	r1, #0
   28734:	beq	28838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x149ac>
   28738:	ldr	r6, [sp, #32]
   2873c:	movw	r3, #62408	; 0xf3c8
   28740:	movt	r3, #9
   28744:	ldr	r0, [r6, #52]	; 0x34
   28748:	ldr	r1, [r3, #16]
   2874c:	bl	13844 <bfd_get_section_by_name@plt>
   28750:	subs	r6, r0, #0
   28754:	beq	291f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15368>
   28758:	cmp	r5, #0
   2875c:	beq	28780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x148f4>
   28760:	mov	r2, #5
   28764:	movw	r1, #14556	; 0x38dc
   28768:	mov	r0, #0
   2876c:	movt	r1, #5
   28770:	bl	13688 <dcgettext@plt>
   28774:	ldr	r1, [r4, #256]	; 0x100
   28778:	ldrd	r2, [r6, #32]
   2877c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28780:	ldr	r7, [sp, #32]
   28784:	ldrd	r2, [r6, #32]
   28788:	ldr	r0, [r7, #52]	; 0x34
   2878c:	bl	13d90 <bfd_set_start_address@plt>
   28790:	cmp	r0, #0
   28794:	beq	2884c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x149c0>
   28798:	ldr	fp, [sp, #92]	; 0x5c
   2879c:	ldr	r2, [sp, #220]	; 0xdc
   287a0:	ldr	r3, [fp]
   287a4:	cmp	r2, r3
   287a8:	bne	2929c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15410>
   287ac:	add	sp, sp, #228	; 0xe4
   287b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   287b4:	mov	r4, fp
   287b8:	b	28114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14288>
   287bc:	movw	r1, #13716	; 0x3594
   287c0:	mov	r2, #5
   287c4:	movt	r1, #5
   287c8:	bl	13688 <dcgettext@plt>
   287cc:	mov	r1, r5
   287d0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   287d4:	ldr	r3, [sl, #20]
   287d8:	cmp	r3, #0
   287dc:	bne	27864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139d8>
   287e0:	b	2792c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13aa0>
   287e4:	movw	r3, #1012	; 0x3f4
   287e8:	cmp	r2, #66	; 0x42
   287ec:	movt	r3, #10
   287f0:	ldr	r5, [r3]
   287f4:	bne	286b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14824>
   287f8:	movw	r3, #1012	; 0x3f4
   287fc:	movt	r3, #10
   28800:	ldr	r3, [r3]
   28804:	cmp	r3, #0
   28808:	bne	286b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14824>
   2880c:	movw	r3, #1008	; 0x3f0
   28810:	movt	r3, #10
   28814:	ldr	r0, [r3]
   28818:	cmp	r0, #0
   2881c:	bne	286b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14824>
   28820:	mov	r2, #5
   28824:	movw	r1, #14420	; 0x3854
   28828:	movt	r1, #5
   2882c:	bl	13688 <dcgettext@plt>
   28830:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28834:	b	286b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14824>
   28838:	ldr	r4, [sp, #32]
   2883c:	ldr	r0, [r4, #52]	; 0x34
   28840:	bl	13d90 <bfd_set_start_address@plt>
   28844:	cmp	r0, #0
   28848:	bne	28798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1490c>
   2884c:	mov	r2, #5
   28850:	movw	r1, #14524	; 0x38bc
   28854:	movt	r1, #5
   28858:	bl	13688 <dcgettext@plt>
   2885c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28860:	b	28798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1490c>
   28864:	ldr	r3, [r3]
   28868:	cmp	r3, #0
   2886c:	beq	27bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d64>
   28870:	ldr	r2, [r8, #44]	; 0x2c
   28874:	cmp	r2, #0
   28878:	bne	27b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d00>
   2887c:	b	28eb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15028>
   28880:	ldr	r1, [r4, #216]	; 0xd8
   28884:	cmp	r1, #0
   28888:	beq	27c18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d8c>
   2888c:	ldrb	r3, [r1, #37]	; 0x25
   28890:	tst	r3, #32
   28894:	bne	288c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a38>
   28898:	ldr	r3, [r1, #16]
   2889c:	ldr	r3, [r3, #100]	; 0x64
   288a0:	cmp	r3, #0
   288a4:	beq	288c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a38>
   288a8:	ldr	r2, [r3, #20]
   288ac:	tst	r2, #8192	; 0x2000
   288b0:	biceq	r2, r2, #32768	; 0x8000
   288b4:	streq	r2, [r3, #20]
   288b8:	ldr	r3, [r3, #12]
   288bc:	cmp	r3, #0
   288c0:	bne	288a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a1c>
   288c4:	ldr	r1, [r1, #24]
   288c8:	cmp	r1, #0
   288cc:	bne	2888c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14a00>
   288d0:	b	27c18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d8c>
   288d4:	ldr	r3, [sl, #20]
   288d8:	cmp	r3, #0
   288dc:	beq	27864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139d8>
   288e0:	mov	r2, #5
   288e4:	mov	r0, r9
   288e8:	movw	r1, #13640	; 0x3548
   288ec:	movt	r1, #5
   288f0:	bl	13688 <dcgettext@plt>
   288f4:	mov	fp, r0
   288f8:	mov	r0, r5
   288fc:	bl	138d4 <bfd_printable_name@plt>
   28900:	mov	r9, r0
   28904:	ldr	r0, [r6, #52]	; 0x34
   28908:	bl	138d4 <bfd_printable_name@plt>
   2890c:	mov	r1, r9
   28910:	mov	r2, r5
   28914:	mov	r3, r0
   28918:	mov	r0, fp
   2891c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28920:	b	27864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x139d8>
   28924:	mov	r2, #5
   28928:	movw	r1, #13540	; 0x34e4
   2892c:	mov	r0, #0
   28930:	movt	r1, #5
   28934:	bl	13688 <dcgettext@plt>
   28938:	ldr	ip, [r6, #52]	; 0x34
   2893c:	ldr	r1, [r5, #4]
   28940:	mov	r2, r5
   28944:	ldr	r3, [ip, #4]
   28948:	ldr	r1, [r1]
   2894c:	ldr	r3, [r3]
   28950:	str	ip, [sp]
   28954:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28958:	b	278e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13a54>
   2895c:	movw	r0, #55440	; 0xd890
   28960:	movt	r0, #1
   28964:	bl	138ec <bfd_set_error_handler@plt>
   28968:	mov	r9, r0
   2896c:	b	27904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13a78>
   28970:	ldr	sl, [sp, #32]
   28974:	movw	r4, #1088	; 0x440
   28978:	movt	r4, #10
   2897c:	ldr	r3, [sl, #52]	; 0x34
   28980:	ldr	r0, [r3, #108]	; 0x6c
   28984:	cmp	r0, #1
   28988:	bls	28614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14788>
   2898c:	lsl	r0, r0, #3
   28990:	bl	137b4 <xmalloc@plt>
   28994:	ldr	r3, [r4, #52]	; 0x34
   28998:	ldr	r4, [r3, #100]	; 0x64
   2899c:	cmp	r4, #0
   289a0:	movne	r8, #0
   289a4:	movne	r1, r8
   289a8:	mov	r9, r0
   289ac:	beq	2915c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x152d0>
   289b0:	ldr	r3, [r4, #20]
   289b4:	tst	r3, #1
   289b8:	beq	289e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b58>
   289bc:	movw	r2, #1026	; 0x402
   289c0:	and	r2, r3, r2
   289c4:	cmp	r2, #1024	; 0x400
   289c8:	beq	289e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b58>
   289cc:	ldrd	r2, [r4, #48]	; 0x30
   289d0:	orrs	fp, r2, r3
   289d4:	strne	r4, [r9, r8, lsl #3]
   289d8:	addne	r3, r9, r8, lsl #3
   289dc:	addne	r8, r8, #1
   289e0:	strne	r1, [r3, #4]
   289e4:	ldr	r4, [r4, #12]
   289e8:	cmp	r4, #0
   289ec:	bne	289b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14b24>
   289f0:	cmp	r8, #1
   289f4:	bls	2915c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x152d0>
   289f8:	movw	r3, #55280	; 0xd7f0
   289fc:	mov	r0, r9
   28a00:	movt	r3, #1
   28a04:	mov	r1, r8
   28a08:	mov	r2, #8
   28a0c:	mov	r6, #0
   28a10:	mov	r7, #0
   28a14:	mov	r5, r4
   28a18:	strd	r6, [sp, #40]	; 0x28
   28a1c:	bl	13cd0 <qsort@plt>
   28a20:	strd	r6, [sp, #48]	; 0x30
   28a24:	str	r4, [sp, #64]	; 0x40
   28a28:	b	28a4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bc0>
   28a2c:	ldrd	r2, [sp, #56]	; 0x38
   28a30:	strd	r6, [sp, #40]	; 0x28
   28a34:	str	sl, [sp, #64]	; 0x40
   28a38:	strd	r2, [sp, #48]	; 0x30
   28a3c:	add	r4, r4, #1
   28a40:	add	r5, r5, #8
   28a44:	cmp	r4, r8
   28a48:	beq	28b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14cd0>
   28a4c:	ldr	sl, [r9, r5]
   28a50:	ldr	r3, [sl, #20]
   28a54:	tst	r3, #2
   28a58:	beq	28a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bb0>
   28a5c:	ldr	r7, [sp, #36]	; 0x24
   28a60:	ldr	r3, [sl, #48]	; 0x30
   28a64:	ldr	r0, [sl, #52]	; 0x34
   28a68:	ldr	r1, [r7, #8]
   28a6c:	ldrd	r6, [sl, #40]	; 0x28
   28a70:	lsr	r3, r3, r1
   28a74:	str	r3, [sp, #72]	; 0x48
   28a78:	ldr	fp, [sp, #72]	; 0x48
   28a7c:	rsb	r2, r1, #32
   28a80:	sub	r3, r1, #32
   28a84:	ldr	ip, [sp, #64]	; 0x40
   28a88:	orr	r2, fp, r0, lsl r2
   28a8c:	orr	r3, r2, r0, lsr r3
   28a90:	lsr	r0, r0, r1
   28a94:	str	r3, [sp, #72]	; 0x48
   28a98:	subs	r2, r6, #1
   28a9c:	str	r0, [sp, #76]	; 0x4c
   28aa0:	sbc	r3, r7, #0
   28aa4:	ldrd	r0, [sp, #72]	; 0x48
   28aa8:	adds	r0, r0, r2
   28aac:	adc	r1, r1, r3
   28ab0:	cmp	ip, #0
   28ab4:	strd	r0, [sp, #56]	; 0x38
   28ab8:	beq	29148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x152bc>
   28abc:	ldrd	r0, [sp, #48]	; 0x30
   28ac0:	ldrd	r2, [sp, #40]	; 0x28
   28ac4:	cmp	r1, r3
   28ac8:	cmpeq	r0, r2
   28acc:	movcs	r3, #0
   28ad0:	movcc	r3, #1
   28ad4:	cmp	r7, r1
   28ad8:	cmpeq	r6, r0
   28adc:	orrls	r3, r3, #1
   28ae0:	cmp	r3, #0
   28ae4:	beq	28a2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ba0>
   28ae8:	mov	r2, #5
   28aec:	movw	r1, #14208	; 0x3780
   28af0:	mov	r0, #0
   28af4:	movt	r1, #5
   28af8:	bl	13688 <dcgettext@plt>
   28afc:	ldrd	r2, [sp, #56]	; 0x38
   28b00:	ldr	fp, [sp, #64]	; 0x40
   28b04:	add	r4, r4, #1
   28b08:	ldr	r1, [sl]
   28b0c:	strd	r2, [sp]
   28b10:	mov	r3, r7
   28b14:	ldr	ip, [fp]
   28b18:	mov	r2, r6
   28b1c:	str	sl, [sp, #64]	; 0x40
   28b20:	ldrd	sl, [sp, #40]	; 0x28
   28b24:	strd	r6, [sp, #40]	; 0x28
   28b28:	ldrd	r6, [sp, #56]	; 0x38
   28b2c:	strd	sl, [sp, #16]
   28b30:	ldrd	sl, [sp, #48]	; 0x30
   28b34:	str	ip, [sp, #8]
   28b38:	strd	r6, [sp, #48]	; 0x30
   28b3c:	mov	r7, #1
   28b40:	strd	sl, [sp, #24]
   28b44:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28b48:	add	r3, r9, r5
   28b4c:	cmp	r4, r8
   28b50:	add	r5, r5, #8
   28b54:	str	r7, [r3, #4]
   28b58:	bne	28a4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bc0>
   28b5c:	mov	r0, r9
   28b60:	mov	r1, r8
   28b64:	movw	r3, #55360	; 0xd840
   28b68:	mov	r2, #8
   28b6c:	movt	r3, #1
   28b70:	mov	r4, r9
   28b74:	bl	13cd0 <qsort@plt>
   28b78:	ldr	ip, [r9]
   28b7c:	mov	lr, #1
   28b80:	ldrd	r6, [ip, #32]
   28b84:	mov	r0, r6
   28b88:	mov	r1, r7
   28b8c:	b	28ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d1c>
   28b90:	add	lr, lr, #1
   28b94:	add	r4, r4, #8
   28b98:	cmp	lr, r8
   28b9c:	beq	28efc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15070>
   28ba0:	mov	r0, r2
   28ba4:	mov	r1, r3
   28ba8:	ldr	r3, [r4, #8]
   28bac:	ldrd	r2, [r3, #32]
   28bb0:	cmp	r3, r1
   28bb4:	cmpeq	r2, r0
   28bb8:	bne	28b90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d04>
   28bbc:	mov	r0, r9
   28bc0:	bl	13574 <free@plt>
   28bc4:	ldr	r5, [sp, #36]	; 0x24
   28bc8:	ldr	r4, [r5, #212]	; 0xd4
   28bcc:	cmp	r4, #0
   28bd0:	bne	28be4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d58>
   28bd4:	b	28614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14788>
   28bd8:	ldr	r4, [r4, #8]
   28bdc:	cmp	r4, #0
   28be0:	beq	28614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14788>
   28be4:	ldr	r3, [r4, #60]	; 0x3c
   28be8:	cmp	r3, #0
   28bec:	beq	28bd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d4c>
   28bf0:	mov	r2, #5
   28bf4:	movw	r1, #14336	; 0x3800
   28bf8:	mov	r0, #0
   28bfc:	movt	r1, #5
   28c00:	bl	13688 <dcgettext@plt>
   28c04:	ldr	r1, [r4, #16]
   28c08:	ldr	r3, [r4, #24]
   28c0c:	ldr	r2, [r4, #40]	; 0x28
   28c10:	add	r3, r1, r3
   28c14:	ldr	r1, [r4]
   28c18:	rsb	r2, r3, r2
   28c1c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28c20:	b	28bd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d4c>
   28c24:	mov	r0, r4
   28c28:	movw	fp, #381	; 0x17d
   28c2c:	bl	204e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xc654>
   28c30:	cmp	r0, #0
   28c34:	moveq	fp, #0
   28c38:	b	285a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14714>
   28c3c:	movw	r6, #62408	; 0xf3c8
   28c40:	movt	r6, #9
   28c44:	ldr	r9, [pc, #772]	; 28f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x150c4>
   28c48:	add	sl, sp, #96	; 0x60
   28c4c:	ldr	r3, [r6]
   28c50:	add	r8, sp, #104	; 0x68
   28c54:	movw	r5, #1020	; 0x3fc
   28c58:	movt	r5, #10
   28c5c:	add	r4, sp, #112	; 0x70
   28c60:	ldm	r3, {r0, r1}
   28c64:	stm	sl, {r0, r1}
   28c68:	ldm	r9, {r0, r1}
   28c6c:	stm	r8, {r0, r1}
   28c70:	ldm	r5, {r0, r1}
   28c74:	stm	r4, {r0, r1}
   28c78:	bl	33788 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8fc>
   28c7c:	cmp	r0, #0
   28c80:	bne	291c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1533c>
   28c84:	ldr	r2, [sp, #100]	; 0x64
   28c88:	mov	r1, #0
   28c8c:	movw	r7, #65288	; 0xff08
   28c90:	movw	fp, #1020	; 0x3fc
   28c94:	movt	r7, #9
   28c98:	movt	fp, #10
   28c9c:	ldr	r0, [r2]
   28ca0:	bl	2506c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111e0>
   28ca4:	mov	r1, sl
   28ca8:	ldr	r0, [r6]
   28cac:	bl	1d8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a28>
   28cb0:	mov	r1, r8
   28cb4:	add	r0, r7, #216	; 0xd8
   28cb8:	bl	1d8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a28>
   28cbc:	mov	r1, r4
   28cc0:	mov	r0, fp
   28cc4:	bl	1d8b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x9a28>
   28cc8:	ldr	r2, [sp, #96]	; 0x60
   28ccc:	cmp	r2, #0
   28cd0:	beq	276f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13868>
   28cd4:	ldr	r3, [r7, #216]	; 0xd8
   28cd8:	ldr	r2, [fp]
   28cdc:	cmp	r3, #0
   28ce0:	bne	28d0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e80>
   28ce4:	b	29064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151d8>
   28ce8:	ldr	r1, [r3, #16]
   28cec:	cmp	r1, #0
   28cf0:	beq	28d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e74>
   28cf4:	ldr	r1, [r1, #148]	; 0x94
   28cf8:	cmp	r1, #0
   28cfc:	moveq	r2, r3
   28d00:	ldr	r3, [r3, #24]
   28d04:	cmp	r3, #0
   28d08:	beq	29064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151d8>
   28d0c:	ldrb	r1, [r3, #37]	; 0x25
   28d10:	tst	r1, #32
   28d14:	beq	28ce8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14e5c>
   28d18:	ldrb	r1, [r3, #37]	; 0x25
   28d1c:	tst	r1, #64	; 0x40
   28d20:	bne	29064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x151d8>
   28d24:	ldr	sl, [sp, #36]	; 0x24
   28d28:	str	r3, [sl, #268]	; 0x10c
   28d2c:	ldr	r0, [r3]
   28d30:	ldr	r1, [sp, #100]	; 0x64
   28d34:	ldr	r2, [r6]
   28d38:	str	r0, [r1]
   28d3c:	ldr	r1, [sp, #96]	; 0x60
   28d40:	str	r1, [r3]
   28d44:	ldr	r1, [r2, #4]
   28d48:	cmp	r3, r1
   28d4c:	ldreq	r1, [sp, #100]	; 0x64
   28d50:	streq	r1, [r2, #4]
   28d54:	mov	r1, r3
   28d58:	ldr	r0, [sp, #116]	; 0x74
   28d5c:	movw	r2, #1020	; 0x3fc
   28d60:	ldr	ip, [r3, #28]
   28d64:	movt	r2, #10
   28d68:	str	ip, [r0]
   28d6c:	ldr	ip, [sp, #112]	; 0x70
   28d70:	ldr	r0, [r5, #4]
   28d74:	str	ip, [r1, #28]!
   28d78:	cmp	r0, r1
   28d7c:	ldreq	r1, [sp, #116]	; 0x74
   28d80:	streq	r1, [r2, #4]
   28d84:	ldr	r2, [r3, #8]
   28d88:	cmp	r2, #0
   28d8c:	beq	29234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x153a8>
   28d90:	ldr	r0, [r3, #24]
   28d94:	mov	r2, r3
   28d98:	ldr	r1, [sp, #108]	; 0x6c
   28d9c:	movw	r3, #65288	; 0xff08
   28da0:	ldr	r4, [sp, #36]	; 0x24
   28da4:	movt	r3, #9
   28da8:	str	r0, [r1]
   28dac:	ldr	r0, [sp, #104]	; 0x68
   28db0:	ldr	r1, [r4, #220]	; 0xdc
   28db4:	str	r0, [r2, #24]!
   28db8:	cmp	r1, r2
   28dbc:	beq	29260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x153d4>
   28dc0:	ldr	r6, [sp, #36]	; 0x24
   28dc4:	mov	r1, #2
   28dc8:	ldr	r0, [r6, #132]	; 0x84
   28dcc:	bl	2506c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x111e0>
   28dd0:	b	276f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13868>
   28dd4:	mov	r2, #5
   28dd8:	movw	r1, #13368	; 0x3438
   28ddc:	movt	r1, #5
   28de0:	bl	13688 <dcgettext@plt>
   28de4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28de8:	b	276cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13840>
   28dec:	ldr	r3, [r0, #20]
   28df0:	ldr	r2, [r3, #88]	; 0x58
   28df4:	cmp	r2, #0
   28df8:	beq	28704 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14878>
   28dfc:	ldrd	r4, [r2, #32]
   28e00:	ldrd	r0, [r0, #24]
   28e04:	ldrd	r2, [r3, #80]	; 0x50
   28e08:	adds	r4, r4, r0
   28e0c:	ldr	r0, [r6, #52]	; 0x34
   28e10:	adc	r5, r5, r1
   28e14:	adds	r2, r2, r4
   28e18:	adc	r3, r3, r5
   28e1c:	bl	13d90 <bfd_set_start_address@plt>
   28e20:	cmp	r0, #0
   28e24:	bne	28798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1490c>
   28e28:	mov	r2, #5
   28e2c:	movw	r1, #14488	; 0x3898
   28e30:	movt	r1, #5
   28e34:	bl	13688 <dcgettext@plt>
   28e38:	ldr	sl, [sp, #36]	; 0x24
   28e3c:	ldr	r1, [sl, #256]	; 0x100
   28e40:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28e44:	b	28798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1490c>
   28e48:	movw	r0, #1028	; 0x404
   28e4c:	mov	r2, #1
   28e50:	movt	r0, #5
   28e54:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   28e58:	mov	r3, r0
   28e5c:	str	r0, [r9, #264]	; 0x108
   28e60:	b	284e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1465c>
   28e64:	movw	r0, #13920	; 0x3660
   28e68:	mov	r1, r4
   28e6c:	movt	r0, #5
   28e70:	ldr	r2, [r4, #180]	; 0xb4
   28e74:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   28e78:	b	28590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14704>
   28e7c:	mov	r1, sl
   28e80:	movw	r0, #11120	; 0x2b70
   28e84:	movt	r0, #5
   28e88:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   28e8c:	ldr	r3, [r0, #44]	; 0x2c
   28e90:	mov	r7, r0
   28e94:	cmp	r3, #0
   28e98:	beq	28ecc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15040>
   28e9c:	add	r0, r7, #8
   28ea0:	mov	r3, r7
   28ea4:	mov	r1, r4
   28ea8:	mov	r2, #0
   28eac:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   28eb0:	b	27f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x140e8>
   28eb4:	ldr	r4, [sp, #32]
   28eb8:	movw	r1, #64084	; 0xfa54
   28ebc:	movt	r1, #1
   28ec0:	ldr	r0, [r4, #32]
   28ec4:	bl	13b50 <bfd_link_hash_traverse@plt>
   28ec8:	b	27bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d64>
   28ecc:	ldrb	r3, [r6]
   28ed0:	and	r3, r3, #3
   28ed4:	cmp	r3, #2
   28ed8:	beq	28ee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1505c>
   28edc:	ldr	r3, [r4, #20]
   28ee0:	tst	r3, #3
   28ee4:	bne	28e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15010>
   28ee8:	mov	r0, #0
   28eec:	mov	r1, #0
   28ef0:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   28ef4:	str	r0, [r7, #44]	; 0x2c
   28ef8:	b	28e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15010>
   28efc:	ldr	r4, [sp, #36]	; 0x24
   28f00:	mov	sl, #0
   28f04:	ldr	lr, [ip, #48]	; 0x30
   28f08:	ldr	r0, [ip, #52]	; 0x34
   28f0c:	ldr	r1, [r4, #8]
   28f10:	subs	r4, r6, #1
   28f14:	sbc	r5, r7, #0
   28f18:	str	sl, [sp, #56]	; 0x38
   28f1c:	lsr	r2, lr, r1
   28f20:	rsb	lr, r1, #32
   28f24:	orr	r2, r2, r0, lsl lr
   28f28:	sub	lr, r1, #32
   28f2c:	orr	r2, r2, r0, lsr lr
   28f30:	lsr	r3, r0, r1
   28f34:	adds	sl, r4, r2
   28f38:	str	r9, [sp, #40]	; 0x28
   28f3c:	adc	fp, r5, r3
   28f40:	strd	sl, [sp, #48]	; 0x30
   28f44:	mov	fp, ip
   28f48:	b	29008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1517c>
   28f4c:			; <UNDEFINED> instruction: 0x0009fab8
   28f50:	andeq	pc, r9, r0, ror #31
   28f54:	ldr	ip, [sp, #40]	; 0x28
   28f58:	ldr	r4, [sp, #36]	; 0x24
   28f5c:	ldr	sl, [ip, #8]
   28f60:	ldr	r1, [r4, #8]
   28f64:	ldr	r5, [ip, #12]
   28f68:	ldr	lr, [sl, #48]	; 0x30
   28f6c:	rsb	r2, r1, #32
   28f70:	ldr	ip, [sl, #52]	; 0x34
   28f74:	sub	r3, r1, #32
   28f78:	str	r5, [sp, #88]	; 0x58
   28f7c:	lsr	lr, lr, r1
   28f80:	ldrd	r4, [sl, #32]
   28f84:	orr	r2, lr, ip, lsl r2
   28f88:	orr	r3, r2, ip, lsr r3
   28f8c:	lsr	ip, ip, r1
   28f90:	str	r3, [sp, #80]	; 0x50
   28f94:	subs	r2, r4, #1
   28f98:	str	ip, [sp, #84]	; 0x54
   28f9c:	sbc	r3, r5, #0
   28fa0:	ldrd	r0, [sp, #80]	; 0x50
   28fa4:	adds	r0, r0, r2
   28fa8:	adc	r1, r1, r3
   28fac:	strd	r0, [sp, #64]	; 0x40
   28fb0:	ldr	r1, [sp, #88]	; 0x58
   28fb4:	cmp	r1, #0
   28fb8:	bne	28fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1515c>
   28fbc:	ldrd	r2, [sp, #48]	; 0x30
   28fc0:	cmp	r7, r3
   28fc4:	cmpeq	r6, r2
   28fc8:	movls	r1, #0
   28fcc:	movhi	r1, #1
   28fd0:	cmp	r3, r5
   28fd4:	cmpeq	r2, r4
   28fd8:	movcc	r3, r1
   28fdc:	orrcs	r3, r1, #1
   28fe0:	cmp	r3, #0
   28fe4:	bne	29020 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15194>
   28fe8:	ldr	r7, [sp, #40]	; 0x28
   28fec:	mov	fp, sl
   28ff0:	add	r7, r7, #8
   28ff4:	str	r7, [sp, #40]	; 0x28
   28ff8:	ldrd	r6, [sp, #64]	; 0x40
   28ffc:	strd	r6, [sp, #48]	; 0x30
   29000:	mov	r6, r4
   29004:	mov	r7, r5
   29008:	ldr	sl, [sp, #56]	; 0x38
   2900c:	add	sl, sl, #1
   29010:	str	sl, [sp, #56]	; 0x38
   29014:	cmp	sl, r8
   29018:	bne	28f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x150c8>
   2901c:	b	28bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14d30>
   29020:	ldr	r0, [sp, #88]	; 0x58
   29024:	mov	r2, #5
   29028:	movw	r1, #14272	; 0x37c0
   2902c:	movt	r1, #5
   29030:	bl	13688 <dcgettext@plt>
   29034:	ldrd	r2, [sp, #64]	; 0x40
   29038:	ldr	r1, [sl]
   2903c:	strd	r2, [sp]
   29040:	mov	r2, r4
   29044:	ldr	ip, [fp]
   29048:	mov	r3, r5
   2904c:	strd	r6, [sp, #16]
   29050:	ldrd	r6, [sp, #48]	; 0x30
   29054:	str	ip, [sp, #8]
   29058:	strd	r6, [sp, #24]
   2905c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   29060:	b	28fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1515c>
   29064:	ldr	ip, [sp, #36]	; 0x24
   29068:	cmp	r2, #0
   2906c:	movw	r4, #65288	; 0xff08
   29070:	movt	r4, #9
   29074:	movne	r3, r2
   29078:	str	r2, [ip, #268]	; 0x10c
   2907c:	bne	28d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ea0>
   29080:	movw	r0, #10132	; 0x2794
   29084:	movw	r1, #6870	; 0x1ad6
   29088:	movt	r0, #5
   2908c:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   29090:	ldr	r3, [r4, #268]	; 0x10c
   29094:	b	28d2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14ea0>
   29098:	movw	r2, #62408	; 0xf3c8
   2909c:	movt	r2, #9
   290a0:	mov	r5, #0
   290a4:	ldr	r2, [r2, #12]
   290a8:	mov	r1, r2
   290ac:	str	r2, [r3, #256]	; 0x100
   290b0:	b	286c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1483c>
   290b4:	ldr	r4, [r0, #20]
   290b8:	cmp	r4, #0
   290bc:	beq	27ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14030>
   290c0:	ldr	r3, [r4, #72]	; 0x48
   290c4:	cmp	r3, #0
   290c8:	blt	290e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15258>
   290cc:	ldr	r3, [r4, #28]
   290d0:	cmp	r3, #0
   290d4:	beq	290e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15258>
   290d8:	ldr	r2, [r3, #180]	; 0xb4
   290dc:	cmp	r2, #0
   290e0:	bne	27e50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13fc4>
   290e4:	ldr	r4, [r4, #20]
   290e8:	cmp	r4, #0
   290ec:	bne	290c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15234>
   290f0:	b	27ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14030>
   290f4:	ldr	r5, [sp, #32]
   290f8:	mov	r3, #4
   290fc:	str	r3, [r4, #-112]!	; 0xffffff90
   29100:	movw	r1, #64084	; 0xfa54
   29104:	ldr	r0, [r5, #32]
   29108:	movt	r1, #1
   2910c:	mov	r2, r4
   29110:	bl	13b50 <bfd_link_hash_traverse@plt>
   29114:	ldr	r1, [sp, #112]	; 0x70
   29118:	movw	r3, #1088	; 0x440
   2911c:	movt	r3, #10
   29120:	sub	r1, r1, #1
   29124:	str	r1, [sp, #112]	; 0x70
   29128:	cmp	r1, #0
   2912c:	bne	29100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15274>
   29130:	ldr	r0, [r3, #32]
   29134:	mov	r2, r4
   29138:	movw	r1, #64084	; 0xfa54
   2913c:	movt	r1, #1
   29140:	bl	13b50 <bfd_link_hash_traverse@plt>
   29144:	b	27bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13d64>
   29148:	ldrd	r0, [sp, #56]	; 0x38
   2914c:	strd	r6, [sp, #40]	; 0x28
   29150:	str	sl, [sp, #64]	; 0x40
   29154:	strd	r0, [sp, #48]	; 0x30
   29158:	b	28a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14bb0>
   2915c:	mov	r0, r9
   29160:	bl	13574 <free@plt>
   29164:	b	28614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14788>
   29168:	movw	r7, #1244	; 0x4dc
   2916c:	movt	r7, #10
   29170:	str	r7, [sp, #64]	; 0x40
   29174:	b	27940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13ab4>
   29178:	movw	r5, #1480	; 0x5c8
   2917c:	movt	r5, #10
   29180:	str	r5, [sp, #88]	; 0x58
   29184:	b	27b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13cbc>
   29188:	mov	r0, r7
   2918c:	mov	r1, fp
   29190:	mov	r2, #1
   29194:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   29198:	ldr	r3, [r0, #44]	; 0x2c
   2919c:	mov	sl, r0
   291a0:	cmp	r3, #0
   291a4:	beq	2926c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x153e0>
   291a8:	add	r0, sl, #8
   291ac:	mov	r1, r4
   291b0:	mov	r2, #0
   291b4:	mov	r3, sl
   291b8:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   291bc:	b	285b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1472c>
   291c0:	mov	r4, r6
   291c4:	b	27a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x13b84>
   291c8:	mov	r2, #5
   291cc:	movw	r1, #13404	; 0x345c
   291d0:	mov	r0, #0
   291d4:	movt	r1, #5
   291d8:	bl	13688 <dcgettext@plt>
   291dc:	mov	fp, r0
   291e0:	bl	32df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef64>
   291e4:	mov	r1, r0
   291e8:	mov	r0, fp
   291ec:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   291f0:	b	28c84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14df8>
   291f4:	cmp	r5, #0
   291f8:	beq	28798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1490c>
   291fc:	mov	r2, #5
   29200:	movw	r1, #14616	; 0x3918
   29204:	movt	r1, #5
   29208:	bl	13688 <dcgettext@plt>
   2920c:	ldr	r1, [r4, #256]	; 0x100
   29210:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   29214:	b	28798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1490c>
   29218:	ldr	r1, [r3, #252]	; 0xfc
   2921c:	movw	r3, #62408	; 0xf3c8
   29220:	movt	r3, #9
   29224:	ldr	r0, [r3, #12]
   29228:	str	r1, [r2, #68]	; 0x44
   2922c:	bl	25bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d34>
   29230:	b	27740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x138b4>
   29234:	ldr	r5, [sp, #36]	; 0x24
   29238:	movw	r3, #65288	; 0xff08
   2923c:	ldr	r2, [sp, #108]	; 0x6c
   29240:	movt	r3, #9
   29244:	ldr	r1, [r5, #216]	; 0xd8
   29248:	str	r1, [r2]
   2924c:	ldr	r1, [r5, #220]	; 0xdc
   29250:	ldr	r2, [sp, #104]	; 0x68
   29254:	cmp	r1, r9
   29258:	str	r2, [r5, #216]	; 0xd8
   2925c:	bne	28dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f34>
   29260:	ldr	r2, [sp, #108]	; 0x6c
   29264:	str	r2, [r3, #220]	; 0xdc
   29268:	b	28dc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x14f34>
   2926c:	ldrb	r3, [r6]
   29270:	and	r3, r3, #3
   29274:	cmp	r3, #2
   29278:	beq	29288 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x153fc>
   2927c:	ldr	r3, [r4, #20]
   29280:	tst	r3, #3
   29284:	bne	291a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1531c>
   29288:	mov	r0, #0
   2928c:	mov	r1, #0
   29290:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   29294:	str	r0, [sl, #44]	; 0x2c
   29298:	b	291a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1531c>
   2929c:	bl	13694 <__stack_chk_fail@plt>
   292a0:	push	{r4, r5, r6, lr}
   292a4:	mov	r4, r0
   292a8:	mov	r0, #8
   292ac:	mov	r5, r1
   292b0:	bl	137b4 <xmalloc@plt>
   292b4:	movw	r3, #1088	; 0x440
   292b8:	movt	r3, #10
   292bc:	str	r4, [r0]
   292c0:	mov	r6, r0
   292c4:	ldr	r4, [r3, #148]	; 0x94
   292c8:	cmp	r4, #0
   292cc:	bne	292e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15454>
   292d0:	b	29300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15474>
   292d4:	ldr	r4, [r4]
   292d8:	cmp	r4, #0
   292dc:	beq	29300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15474>
   292e0:	ldr	r0, [r4, #4]
   292e4:	mov	r1, r5
   292e8:	bl	13490 <strcmp@plt>
   292ec:	cmp	r0, #0
   292f0:	bne	292d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15448>
   292f4:	str	r4, [r6, #4]
   292f8:	mov	r0, r6
   292fc:	pop	{r4, r5, r6, pc}
   29300:	mov	r2, #5
   29304:	movw	r1, #14760	; 0x39a8
   29308:	mov	r0, #0
   2930c:	movt	r1, #5
   29310:	bl	13688 <dcgettext@plt>
   29314:	mov	r1, r5
   29318:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2931c:	mov	r3, #0
   29320:	mov	r0, r6
   29324:	str	r3, [r6, #4]
   29328:	pop	{r4, r5, r6, pc}
   2932c:	push	{r4, r5, r6, lr}
   29330:	movw	r6, #65288	; 0xff08
   29334:	movt	r6, #9
   29338:	mov	r5, r0
   2933c:	ldr	r4, [r6, #76]	; 0x4c
   29340:	cmp	r4, #0
   29344:	beq	29368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x154dc>
   29348:	ldr	r0, [r4, #4]
   2934c:	mov	r1, r5
   29350:	bl	13490 <strcmp@plt>
   29354:	cmp	r0, #0
   29358:	popeq	{r4, r5, r6, pc}
   2935c:	ldr	r4, [r4]
   29360:	cmp	r4, #0
   29364:	bne	29348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x154bc>
   29368:	mov	r0, #8
   2936c:	bl	137b4 <xmalloc@plt>
   29370:	mov	r4, r0
   29374:	mov	r0, r5
   29378:	bl	137e4 <xstrdup@plt>
   2937c:	ldr	r3, [r6, #76]	; 0x4c
   29380:	str	r4, [r6, #76]	; 0x4c
   29384:	str	r3, [r4]
   29388:	str	r0, [r4, #4]
   2938c:	pop	{r4, r5, r6, pc}
   29390:	push	{r3, r4, r5, lr}
   29394:	movw	r4, #1088	; 0x440
   29398:	movt	r4, #10
   2939c:	mov	r5, r0
   293a0:	ldr	r1, [r4, #144]	; 0x90
   293a4:	cmp	r1, #0
   293a8:	beq	293d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15548>
   293ac:	mov	r2, r0
   293b0:	b	293b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1552c>
   293b4:	mov	r2, r3
   293b8:	ldr	r3, [r2]
   293bc:	cmp	r3, #0
   293c0:	bne	293b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15528>
   293c4:	ldr	r3, [r1]
   293c8:	str	r3, [r2]
   293cc:	str	r5, [r1]
   293d0:	pop	{r3, r4, r5, pc}
   293d4:	mov	r0, #1
   293d8:	mov	r1, #20
   293dc:	bl	13e38 <xcalloc@plt>
   293e0:	movw	r3, #58472	; 0xe468
   293e4:	movt	r3, #1
   293e8:	str	r5, [r0]
   293ec:	str	r0, [r4, #144]	; 0x90
   293f0:	str	r3, [r0, #16]
   293f4:	pop	{r3, r4, r5, pc}
   293f8:	push	{r4, lr}
   293fc:	movw	r4, #13140	; 0x3354
   29400:	movt	r4, #5
   29404:	mov	r0, #0
   29408:	mov	r3, r0
   2940c:	movw	r1, #14808	; 0x39d8
   29410:	mov	r2, r4
   29414:	movt	r1, #5
   29418:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   2941c:	mov	r2, r4
   29420:	movw	r1, #14828	; 0x39ec
   29424:	mov	r3, #0
   29428:	movt	r1, #5
   2942c:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   29430:	pop	{r4, lr}
   29434:	b	29390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15504>
   29438:	push	{r4, lr}
   2943c:	movw	r4, #13140	; 0x3354
   29440:	movt	r4, #5
   29444:	mov	r0, #0
   29448:	mov	r3, r0
   2944c:	movw	r1, #14844	; 0x39fc
   29450:	mov	r2, r4
   29454:	movt	r1, #5
   29458:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   2945c:	mov	r2, r4
   29460:	movw	r1, #14860	; 0x3a0c
   29464:	mov	r3, #0
   29468:	movt	r1, #5
   2946c:	bl	270c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1323c>
   29470:	pop	{r4, lr}
   29474:	b	29390 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15504>
   29478:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2947c:	mov	r9, r0
   29480:	ldrb	r4, [r0]
   29484:	cmp	r4, #0
   29488:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   2948c:	movw	r8, #63264	; 0xf720
   29490:	movw	r7, #1336	; 0x538
   29494:	movt	r8, #9
   29498:	movt	r7, #10
   2949c:	mov	r6, #0
   294a0:	mov	r5, r9
   294a4:	b	294ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15620>
   294a8:	ldrb	r4, [r5, #1]!
   294ac:	cmp	r4, #44	; 0x2c
   294b0:	movw	r3, #63264	; 0xf720
   294b4:	lsl	r2, r4, #1
   294b8:	movt	r3, #9
   294bc:	beq	294a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1561c>
   294c0:	ldrh	r2, [r8, r2]
   294c4:	tst	r2, #64	; 0x40
   294c8:	bne	294a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1561c>
   294cc:	cmp	r4, #0
   294d0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   294d4:	ldrb	r4, [r5, #1]
   294d8:	add	r9, r5, #1
   294dc:	cmp	r4, #0
   294e0:	cmpne	r4, #44	; 0x2c
   294e4:	beq	29524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15698>
   294e8:	lsl	r2, r4, #1
   294ec:	ldrh	r3, [r3, r2]
   294f0:	tst	r3, #64	; 0x40
   294f4:	bne	29524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15698>
   294f8:	add	r3, r5, #2
   294fc:	b	2950c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15680>
   29500:	ldrh	r2, [r8, r2]
   29504:	tst	r2, #64	; 0x40
   29508:	bne	29524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15698>
   2950c:	mov	r9, r3
   29510:	ldrb	r4, [r3], #1
   29514:	cmp	r4, #44	; 0x2c
   29518:	cmpne	r4, #0
   2951c:	lsl	r2, r4, #1
   29520:	bne	29500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15674>
   29524:	strb	r6, [r9]
   29528:	movw	r1, #14880	; 0x3a20
   2952c:	mov	r0, r5
   29530:	movt	r1, #5
   29534:	bl	13748 <strcasecmp@plt>
   29538:	cmp	r0, #0
   2953c:	bne	29558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x156cc>
   29540:	mov	r3, #1
   29544:	str	r3, [r7, #64]	; 0x40
   29548:	cmp	r4, #0
   2954c:	strb	r4, [r9]
   29550:	bne	294a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15614>
   29554:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   29558:	mov	r2, #5
   2955c:	movw	r1, #14892	; 0x3a2c
   29560:	mov	r0, #0
   29564:	movt	r1, #5
   29568:	bl	13688 <dcgettext@plt>
   2956c:	mov	r1, r5
   29570:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   29574:	b	29548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x156bc>
   29578:	push	{r4, r5, r6, r7, r8, lr}
   2957c:	vpush	{d8-d9}
   29580:	movw	r1, #14920	; 0x3a48
   29584:	mov	r0, #1
   29588:	movt	r1, #5
   2958c:	bl	13b38 <__printf_chk@plt>
   29590:	movw	r3, #65288	; 0xff08
   29594:	movt	r3, #9
   29598:	ldr	r8, [r3, #212]	; 0xd4
   2959c:	ldr	r3, [r8, #8]
   295a0:	cmp	r3, #0
   295a4:	beq	2962c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157a0>
   295a8:	vldr	d9, [pc, #136]	; 29638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157ac>
   295ac:	ldrd	r4, [r8, #40]	; 0x28
   295b0:	movw	r1, #14980	; 0x3a84
   295b4:	ldrd	r6, [r8, #16]
   295b8:	movt	r1, #5
   295bc:	ldr	r2, [r8]
   295c0:	mov	r0, #1
   295c4:	subs	r4, r4, r6
   295c8:	sbc	r5, r5, r7
   295cc:	bl	13b38 <__printf_chk@plt>
   295d0:	mov	r0, r4
   295d4:	mov	r1, r5
   295d8:	bl	1e874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa9e8>
   295dc:	ldrd	r0, [r8, #24]
   295e0:	bl	1e874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xa9e8>
   295e4:	mov	r0, r4
   295e8:	mov	r1, r5
   295ec:	bl	3fdac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bf20>
   295f0:	vmov	d7, r0, r1
   295f4:	ldrd	r0, [r8, #24]
   295f8:	vmul.f64	d8, d7, d9
   295fc:	bl	3fdac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bf20>
   29600:	vmov	d7, r0, r1
   29604:	movw	r1, #14988	; 0x3a8c
   29608:	mov	r0, #1
   2960c:	movt	r1, #5
   29610:	vdiv.f64	d8, d8, d7
   29614:	vmov	r2, r3, d8
   29618:	bl	13b38 <__printf_chk@plt>
   2961c:	ldr	r8, [r8, #8]
   29620:	ldr	r3, [r8, #8]
   29624:	cmp	r3, #0
   29628:	bne	295ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15720>
   2962c:	vpop	{d8-d9}
   29630:	pop	{r4, r5, r6, r7, r8, pc}
   29634:	nop	{0}
   29638:	andeq	r0, r0, r0
   2963c:	subsmi	r0, r9, r0
   29640:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29644:	mov	r5, r0
   29648:	mov	r6, r1
   2964c:	mov	sl, r2
   29650:	mov	r9, r3
   29654:	ldr	r4, [r0]
   29658:	ldr	r8, [sp, #32]
   2965c:	ldr	r7, [sp, #36]	; 0x24
   29660:	b	29680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157f4>
   29664:	ldr	r1, [r4, #4]
   29668:	bl	13490 <strcmp@plt>
   2966c:	cmp	r0, #0
   29670:	ldreq	r4, [r4]
   29674:	movne	r5, r4
   29678:	ldrne	r4, [r4]
   2967c:	streq	r4, [r5]
   29680:	cmp	r4, #0
   29684:	mov	r0, r6
   29688:	bne	29664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157d8>
   2968c:	mov	r0, #28
   29690:	bl	137b4 <xmalloc@plt>
   29694:	str	r0, [r5]
   29698:	str	r6, [r0, #4]
   2969c:	ldr	r3, [r5]
   296a0:	str	sl, [r3, #12]
   296a4:	ldr	r3, [r5]
   296a8:	str	r4, [r3]
   296ac:	ldr	r2, [r5]
   296b0:	str	r9, [r2, #8]
   296b4:	ldr	r3, [r5]
   296b8:	str	r4, [r2, #24]
   296bc:	str	r8, [r3, #16]
   296c0:	ldr	r3, [r5]
   296c4:	str	r7, [r3, #20]
   296c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   296cc:	push	{lr}		; (str lr, [sp, #-4]!)
   296d0:	sub	sp, sp, #12
   296d4:	mov	r3, #0
   296d8:	mov	r2, r1
   296dc:	str	r3, [sp]
   296e0:	mov	r1, r0
   296e4:	str	r3, [sp, #4]
   296e8:	movw	r0, #60	; 0x3c
   296ec:	movt	r0, #10
   296f0:	bl	29640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157b4>
   296f4:	add	sp, sp, #12
   296f8:	pop	{pc}		; (ldr pc, [sp], #4)
   296fc:	push	{lr}		; (str lr, [sp, #-4]!)
   29700:	sub	sp, sp, #12
   29704:	mov	ip, #0
   29708:	mov	r1, r0
   2970c:	mov	r2, ip
   29710:	str	ip, [sp]
   29714:	mov	r3, ip
   29718:	str	ip, [sp, #4]
   2971c:	ldr	r0, [pc, #8]	; 2972c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x158a0>
   29720:	bl	29640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157b4>
   29724:	add	sp, sp, #12
   29728:	pop	{pc}		; (ldr pc, [sp], #4)
   2972c:	andeq	r0, sl, r0, asr #32
   29730:	movw	r3, #60	; 0x3c
   29734:	movt	r3, #10
   29738:	str	r0, [r3, #8]
   2973c:	bx	lr
   29740:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29744:	movw	r6, #60	; 0x3c
   29748:	movt	r6, #10
   2974c:	sub	sp, sp, #16
   29750:	ldr	r3, [r6, #12]
   29754:	cmp	r3, #0
   29758:	bne	299bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b30>
   2975c:	ldr	r8, [r6]
   29760:	ldr	r7, [r6, #16]
   29764:	cmp	r8, #0
   29768:	beq	297f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15964>
   2976c:	cmp	r7, #0
   29770:	mov	r9, #0
   29774:	streq	r8, [r6, #16]
   29778:	moveq	r7, r8
   2977c:	b	29794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15908>
   29780:	ldr	r3, [r8, #12]
   29784:	ldr	r8, [r8]
   29788:	cmp	r8, #0
   2978c:	str	r3, [r4, #12]
   29790:	beq	297f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15964>
   29794:	cmp	r7, #0
   29798:	ldr	r5, [r8, #4]
   2979c:	movne	r4, r7
   297a0:	beq	297c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15938>
   297a4:	mov	r0, r5
   297a8:	ldr	r1, [r4, #4]
   297ac:	bl	13490 <strcmp@plt>
   297b0:	cmp	r0, #0
   297b4:	beq	29780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x158f4>
   297b8:	ldr	r4, [r4]
   297bc:	cmp	r4, #0
   297c0:	bne	297a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15918>
   297c4:	ldr	r2, [r8, #12]
   297c8:	mov	r1, r5
   297cc:	str	r9, [sp]
   297d0:	mov	r3, #0
   297d4:	str	r9, [sp, #4]
   297d8:	ldr	r0, [pc, #592]	; 29a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ba4>
   297dc:	bl	29640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157b4>
   297e0:	ldr	r8, [r8]
   297e4:	ldr	r7, [r6, #16]
   297e8:	cmp	r8, #0
   297ec:	bne	29794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15908>
   297f0:	ldr	r9, [r6, #4]
   297f4:	movw	r3, #60	; 0x3c
   297f8:	movt	r3, #10
   297fc:	cmp	r9, #0
   29800:	beq	299f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b6c>
   29804:	cmp	r7, #0
   29808:	mov	r8, #1
   2980c:	streq	r9, [r3, #16]
   29810:	moveq	r7, r9
   29814:	ldr	r5, [r9, #4]
   29818:	mov	r4, r7
   2981c:	ldr	r0, [r4, #4]
   29820:	mov	r1, r5
   29824:	bl	13490 <strcmp@plt>
   29828:	cmp	r0, #0
   2982c:	streq	r8, [r4, #24]
   29830:	ldr	r4, [r4]
   29834:	cmp	r4, #0
   29838:	bne	2981c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15990>
   2983c:	ldr	r9, [r9]
   29840:	cmp	r9, #0
   29844:	bne	29814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15988>
   29848:	mov	r8, #0
   2984c:	ldr	r4, [r6, #20]
   29850:	cmp	r4, #0
   29854:	beq	299e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b54>
   29858:	ldr	r5, [r7, #4]
   2985c:	mov	r9, #0
   29860:	ldr	r0, [r4, #4]
   29864:	mov	r1, r5
   29868:	bl	13490 <strcmp@plt>
   2986c:	cmp	r0, #0
   29870:	ldreq	r9, [r4, #16]
   29874:	ldr	r4, [r4]
   29878:	cmp	r4, #0
   2987c:	bne	29860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x159d4>
   29880:	ldr	r4, [r6, #24]
   29884:	cmp	r4, #0
   29888:	beq	299f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b64>
   2988c:	ldr	r5, [r7, #4]
   29890:	mov	sl, #0
   29894:	ldr	r0, [r4, #4]
   29898:	mov	r1, r5
   2989c:	bl	13490 <strcmp@plt>
   298a0:	cmp	r0, #0
   298a4:	ldreq	sl, [r4, #20]
   298a8:	ldr	r4, [r4]
   298ac:	cmp	r4, #0
   298b0:	bne	29894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a08>
   298b4:	ldr	r1, [r6, #8]
   298b8:	cmp	r1, #0
   298bc:	beq	299c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b38>
   298c0:	ldr	r2, [r7, #24]
   298c4:	mov	r3, r9
   298c8:	ldr	r0, [r7, #4]
   298cc:	cmp	r2, #0
   298d0:	str	sl, [sp]
   298d4:	str	r8, [sp, #4]
   298d8:	moveq	r2, #2
   298dc:	movne	r2, #0
   298e0:	str	r8, [sp, #8]
   298e4:	str	r8, [sp, #12]
   298e8:	bl	2541c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11590>
   298ec:	mov	r0, #20
   298f0:	str	r8, [r6, #8]
   298f4:	bl	137b4 <xmalloc@plt>
   298f8:	ldr	ip, [r7, #4]
   298fc:	mov	r3, r0
   29900:	mov	r0, #0
   29904:	mov	r1, r3
   29908:	mov	r2, r0
   2990c:	str	r8, [r3]
   29910:	str	r8, [r3, #8]
   29914:	str	ip, [r3, #4]
   29918:	str	r8, [r3, #12]
   2991c:	str	r8, [r3, #16]
   29920:	bl	25bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d60>
   29924:	ldr	r4, [r6, #28]
   29928:	cmp	r4, #0
   2992c:	bne	29940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ab4>
   29930:	b	29990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b04>
   29934:	ldr	r4, [r4]
   29938:	cmp	r4, #0
   2993c:	beq	29990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b04>
   29940:	ldr	r0, [r4, #8]
   29944:	ldr	r1, [r7, #4]
   29948:	bl	13490 <strcmp@plt>
   2994c:	subs	r5, r0, #0
   29950:	bne	29934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15aa8>
   29954:	mov	r0, #20
   29958:	bl	137b4 <xmalloc@plt>
   2995c:	ldr	ip, [r4, #4]
   29960:	mov	r2, r5
   29964:	mov	r3, r0
   29968:	mov	r0, r5
   2996c:	mov	r1, r3
   29970:	stm	r3, {r5, ip}
   29974:	str	r5, [r3, #8]
   29978:	str	r5, [r3, #12]
   2997c:	str	r5, [r3, #16]
   29980:	bl	25bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11d60>
   29984:	ldr	r4, [r4]
   29988:	cmp	r4, #0
   2998c:	bne	29940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ab4>
   29990:	mov	r0, #0
   29994:	movw	r1, #29012	; 0x7154
   29998:	mov	r2, r0
   2999c:	mov	r3, r0
   299a0:	movt	r1, #4
   299a4:	bl	263f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12564>
   299a8:	ldr	r7, [r7]
   299ac:	cmp	r7, #0
   299b0:	bne	2984c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x159c0>
   299b4:	mov	r3, #1
   299b8:	str	r3, [r6, #12]
   299bc:	add	sp, sp, #16
   299c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   299c4:	ldr	r1, [r7, #12]
   299c8:	cmp	r1, #0
   299cc:	movne	r0, r1
   299d0:	beq	29a1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b90>
   299d4:	str	r0, [r6, #8]
   299d8:	mov	r1, r0
   299dc:	b	298c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a34>
   299e0:	mov	r9, r4
   299e4:	ldr	r4, [r6, #24]
   299e8:	cmp	r4, #0
   299ec:	bne	2988c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a00>
   299f0:	mov	sl, r4
   299f4:	b	298b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15a28>
   299f8:	cmp	r7, #0
   299fc:	movne	r3, r7
   29a00:	movne	r2, #1
   29a04:	beq	299b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b28>
   29a08:	str	r2, [r3, #24]
   29a0c:	ldr	r3, [r3]
   29a10:	cmp	r3, #0
   29a14:	bne	29a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b7c>
   29a18:	b	29848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x159bc>
   29a1c:	movw	r1, #7988	; 0x1f34
   29a20:	movw	r0, #259	; 0x103
   29a24:	movt	r1, #7
   29a28:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   29a2c:	b	299d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15b48>
   29a30:	andeq	r0, sl, ip, asr #32
   29a34:	mov	ip, #0
   29a38:	movw	r3, #60	; 0x3c
   29a3c:	movt	r3, #10
   29a40:	mov	r2, ip
   29a44:	mov	r1, #5
   29a48:	str	ip, [r3, #8]
   29a4c:	b	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   29a50:	push	{lr}		; (str lr, [sp, #-4]!)
   29a54:	sub	sp, sp, #12
   29a58:	mov	ip, #0
   29a5c:	mov	r1, r0
   29a60:	mov	r2, ip
   29a64:	str	ip, [sp]
   29a68:	mov	r3, ip
   29a6c:	str	ip, [sp, #4]
   29a70:	ldr	r0, [pc, #8]	; 29a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15bf4>
   29a74:	bl	29640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157b4>
   29a78:	add	sp, sp, #12
   29a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   29a80:	andeq	r0, sl, ip, asr #32
   29a84:	push	{r4, r5, lr}
   29a88:	movw	r4, #63248	; 0xf710
   29a8c:	movt	r4, #9
   29a90:	sub	sp, sp, #36	; 0x24
   29a94:	cmp	r1, #0
   29a98:	mov	r5, r0
   29a9c:	ldr	ip, [r4]
   29aa0:	str	ip, [sp, #28]
   29aa4:	beq	29ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c4c>
   29aa8:	mov	r2, #0
   29aac:	mov	r3, r5
   29ab0:	str	r2, [sp]
   29ab4:	str	r2, [sp, #4]
   29ab8:	ldr	r0, [pc, #96]	; 29b20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c94>
   29abc:	bl	29640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157b4>
   29ac0:	ldr	r2, [sp, #28]
   29ac4:	ldr	r3, [r4]
   29ac8:	cmp	r2, r3
   29acc:	bne	29b1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c90>
   29ad0:	add	sp, sp, #36	; 0x24
   29ad4:	pop	{r4, r5, pc}
   29ad8:	mov	r1, #1
   29adc:	str	r2, [sp]
   29ae0:	movw	r3, #15016	; 0x3aa8
   29ae4:	mov	r2, #20
   29ae8:	movt	r3, #5
   29aec:	add	r0, sp, #8
   29af0:	bl	13acc <__sprintf_chk@plt>
   29af4:	add	r0, sp, #8
   29af8:	bl	137e4 <xstrdup@plt>
   29afc:	subs	r1, r0, #0
   29b00:	bne	29aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15c1c>
   29b04:	movw	r0, #15020	; 0x3aac
   29b08:	movw	r2, #15004	; 0x3a9c
   29b0c:	movt	r0, #5
   29b10:	movt	r2, #5
   29b14:	movw	r1, #270	; 0x10e
   29b18:	bl	303e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c558>
   29b1c:	bl	13694 <__stack_chk_fail@plt>
   29b20:	andeq	r0, sl, r8, asr r0
   29b24:	mov	r1, #1
   29b28:	b	253e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1155c>
   29b2c:	push	{r4, lr}
   29b30:	mov	r4, r0
   29b34:	ldrb	r3, [r0]
   29b38:	cmp	r3, #83	; 0x53
   29b3c:	bne	29b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15cc0>
   29b40:	ldrb	r1, [r0, #1]
   29b44:	cmp	r1, #0
   29b48:	beq	29bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d28>
   29b4c:	movw	r1, #15036	; 0x3abc
   29b50:	mov	r0, r4
   29b54:	movt	r1, #5
   29b58:	bl	13490 <strcmp@plt>
   29b5c:	subs	r1, r0, #0
   29b60:	beq	29bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d40>
   29b64:	movw	r1, #15052	; 0x3acc
   29b68:	mov	r0, r4
   29b6c:	movt	r1, #5
   29b70:	bl	13490 <strcmp@plt>
   29b74:	subs	r1, r0, #0
   29b78:	beq	29b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d10>
   29b7c:	movw	r1, #15072	; 0x3ae0
   29b80:	mov	r0, #0
   29b84:	movt	r1, #5
   29b88:	mov	r2, #5
   29b8c:	bl	13688 <dcgettext@plt>
   29b90:	mov	r1, r4
   29b94:	pop	{r4, lr}
   29b98:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   29b9c:	movw	r0, #15060	; 0x3ad4
   29ba0:	mov	r2, r1
   29ba4:	movt	r0, #5
   29ba8:	mov	r3, #1
   29bac:	pop	{r4, lr}
   29bb0:	b	26a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ba4>
   29bb4:	movw	r0, #15028	; 0x3ab4
   29bb8:	mov	r2, r1
   29bbc:	movt	r0, #5
   29bc0:	mov	r3, #1
   29bc4:	pop	{r4, lr}
   29bc8:	b	26a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ba4>
   29bcc:	movw	r0, #15044	; 0x3ac4
   29bd0:	mov	r2, r1
   29bd4:	movt	r0, #5
   29bd8:	mov	r3, #1
   29bdc:	pop	{r4, lr}
   29be0:	b	26a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12ba4>
   29be4:	push	{r3, lr}
   29be8:	mov	r2, #0
   29bec:	bl	2e6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a85c>
   29bf0:	pop	{r3, lr}
   29bf4:	b	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   29bf8:	push	{lr}		; (str lr, [sp, #-4]!)
   29bfc:	sub	sp, sp, #12
   29c00:	mov	r3, #0
   29c04:	mov	r2, r3
   29c08:	stm	sp, {r1, r3}
   29c0c:	mov	r1, r0
   29c10:	ldr	r0, [pc, #8]	; 29c20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15d94>
   29c14:	bl	29640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157b4>
   29c18:	add	sp, sp, #12
   29c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   29c20:	andeq	r0, sl, r0, asr r0
   29c24:	push	{lr}		; (str lr, [sp, #-4]!)
   29c28:	sub	sp, sp, #12
   29c2c:	mov	r3, #0
   29c30:	str	r1, [sp, #4]
   29c34:	mov	r2, r3
   29c38:	mov	r1, r0
   29c3c:	str	r3, [sp]
   29c40:	ldr	r0, [pc, #8]	; 29c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dc4>
   29c44:	bl	29640 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x157b4>
   29c48:	add	sp, sp, #12
   29c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   29c50:	andeq	r0, sl, r4, asr r0
   29c54:	movw	r3, #62428	; 0xf3dc
   29c58:	movt	r3, #9
   29c5c:	str	r0, [r3]
   29c60:	bx	lr
   29c64:	push	{r4, lr}
   29c68:	mov	r4, r0
   29c6c:	ldrb	r3, [r0]
   29c70:	cmp	r3, #95	; 0x5f
   29c74:	bne	29c90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e04>
   29c78:	add	r3, r0, #1
   29c7c:	mov	r4, r3
   29c80:	add	r3, r3, #1
   29c84:	ldrb	r2, [r4]
   29c88:	cmp	r2, #95	; 0x5f
   29c8c:	beq	29c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15df0>
   29c90:	movw	r1, #15104	; 0x3b00
   29c94:	mov	r0, r4
   29c98:	movt	r1, #5
   29c9c:	mov	r2, #7
   29ca0:	bl	13e08 <strncmp@plt>
   29ca4:	cmp	r0, #0
   29ca8:	bne	29d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e74>
   29cac:	ldrb	r2, [r4, #7]
   29cb0:	ldrb	r3, [r4, #9]
   29cb4:	cmp	r2, r3
   29cb8:	bne	29d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e74>
   29cbc:	ldrb	r1, [r4, #8]
   29cc0:	cmp	r1, #68	; 0x44
   29cc4:	cmpne	r1, #73	; 0x49
   29cc8:	moveq	r1, #0
   29ccc:	movne	r1, #1
   29cd0:	bne	29d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e74>
   29cd4:	ldrb	r2, [r4, #10]
   29cd8:	movw	r3, #63264	; 0xf720
   29cdc:	movt	r3, #9
   29ce0:	lsl	r2, r2, #1
   29ce4:	ldrh	r3, [r3, r2]
   29ce8:	tst	r3, #4
   29cec:	beq	29d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15e74>
   29cf0:	add	r0, r4, #10
   29cf4:	mov	r2, #10
   29cf8:	pop	{r4, lr}
   29cfc:	b	1349c <strtol@plt>
   29d00:	mvn	r0, #0
   29d04:	pop	{r4, pc}
   29d08:	ldr	r2, [r0]
   29d0c:	push	{r3, r4, r5, r6, r7, lr}
   29d10:	mov	r6, r1
   29d14:	ldr	r1, [r1]
   29d18:	mov	r5, r0
   29d1c:	ldr	r0, [r2, #4]
   29d20:	movw	r3, #21440	; 0x53c0
   29d24:	movt	r3, #5
   29d28:	ldr	r4, [r1, #4]
   29d2c:	cmp	r0, #0
   29d30:	moveq	r0, r3
   29d34:	cmp	r4, #0
   29d38:	moveq	r4, r3
   29d3c:	bl	29c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dd8>
   29d40:	mov	r7, r0
   29d44:	mov	r0, r4
   29d48:	bl	29c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15dd8>
   29d4c:	cmp	r7, r0
   29d50:	blt	29d6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ee0>
   29d54:	bgt	29d74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ee8>
   29d58:	cmp	r5, r6
   29d5c:	bcc	29d74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ee8>
   29d60:	movls	r0, #0
   29d64:	movhi	r0, #1
   29d68:	pop	{r3, r4, r5, r6, r7, pc}
   29d6c:	mov	r0, #1
   29d70:	pop	{r3, r4, r5, r6, r7, pc}
   29d74:	mvn	r0, #0
   29d78:	pop	{r3, r4, r5, r6, r7, pc}
   29d7c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29d80:	movw	r8, #1056	; 0x420
   29d84:	movt	r8, #10
   29d88:	mov	r7, r0
   29d8c:	mov	fp, r1
   29d90:	mov	sl, r2
   29d94:	ldr	r6, [r8]
   29d98:	mov	r9, r3
   29d9c:	ldrd	r4, [sp, #40]	; 0x28
   29da0:	cmp	r6, #0
   29da4:	beq	29dd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f44>
   29da8:	ldr	r3, [r6, #4]
   29dac:	cmp	r3, r0
   29db0:	bne	29dc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f38>
   29db4:	b	29e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fbc>
   29db8:	ldr	ip, [r6, #4]
   29dbc:	cmp	ip, r7
   29dc0:	beq	29e48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fbc>
   29dc4:	ldr	r6, [r6]
   29dc8:	cmp	r6, #0
   29dcc:	bne	29db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f2c>
   29dd0:	mov	r0, #20
   29dd4:	bl	137b4 <xmalloc@plt>
   29dd8:	ldr	r2, [r8]
   29ddc:	mov	r3, #0
   29de0:	mov	r6, r0
   29de4:	str	r3, [r0, #12]
   29de8:	stm	r0, {r2, r7, fp}
   29dec:	str	r3, [r0, #16]
   29df0:	str	r0, [r8]
   29df4:	mov	r0, #24
   29df8:	bl	137b4 <xmalloc@plt>
   29dfc:	mov	r3, #0
   29e00:	str	sl, [r0, #4]
   29e04:	str	r9, [r0, #8]
   29e08:	str	r3, [r0]
   29e0c:	ldr	r2, [r6, #16]
   29e10:	strd	r4, [r0, #16]
   29e14:	cmp	r2, r3
   29e18:	addeq	r2, r6, #16
   29e1c:	bne	29e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f9c>
   29e20:	b	29e34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15fa8>
   29e24:	mov	r2, r3
   29e28:	ldr	r3, [r2]
   29e2c:	cmp	r3, #0
   29e30:	bne	29e24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f98>
   29e34:	ldr	r3, [r6, #12]
   29e38:	str	r0, [r2]
   29e3c:	add	r3, r3, #1
   29e40:	str	r3, [r6, #12]
   29e44:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29e48:	ldr	r3, [r6, #8]
   29e4c:	cmp	r3, fp
   29e50:	bne	29ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1601c>
   29e54:	ldr	r3, [r6, #16]
   29e58:	cmp	r3, #0
   29e5c:	beq	29df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f68>
   29e60:	ldr	r2, [r9, #180]	; 0xb4
   29e64:	cmp	r2, #0
   29e68:	beq	29df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f68>
   29e6c:	ldr	r3, [r3, #8]
   29e70:	ldr	r3, [r3, #180]	; 0xb4
   29e74:	cmp	r3, #0
   29e78:	beq	29df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f68>
   29e7c:	ldr	r2, [r2, #4]
   29e80:	ldr	r3, [r3, #4]
   29e84:	ldr	r0, [r2]
   29e88:	ldr	r1, [r3]
   29e8c:	bl	13490 <strcmp@plt>
   29e90:	cmp	r0, #0
   29e94:	beq	29df4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15f68>
   29e98:	movw	r1, #15152	; 0x3b30
   29e9c:	mov	r0, #0
   29ea0:	movt	r1, #5
   29ea4:	b	29eb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16028>
   29ea8:	movw	r1, #15112	; 0x3b08
   29eac:	movt	r1, #5
   29eb0:	mov	r0, #0
   29eb4:	mov	r2, #5
   29eb8:	bl	13688 <dcgettext@plt>
   29ebc:	ldr	r1, [r7, #4]
   29ec0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29ec4:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   29ec8:	movw	r3, #92	; 0x5c
   29ecc:	movt	r3, #10
   29ed0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29ed4:	sub	sp, sp, #36	; 0x24
   29ed8:	ldr	r6, [r3]
   29edc:	cmp	r6, #0
   29ee0:	bne	2a36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x164e0>
   29ee4:	movw	r2, #1068	; 0x42c
   29ee8:	movt	r2, #10
   29eec:	mov	r1, #1
   29ef0:	str	r1, [r3]
   29ef4:	ldr	r3, [r2]
   29ef8:	movw	r7, #1056	; 0x420
   29efc:	movt	r7, #10
   29f00:	cmp	r3, #0
   29f04:	beq	29fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16140>
   29f08:	ldr	r8, [r7]
   29f0c:	cmp	r8, #0
   29f10:	beq	29fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16140>
   29f14:	ldr	r3, [r8, #16]
   29f18:	cmp	r3, #0
   29f1c:	beq	29fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16134>
   29f20:	mov	r4, #0
   29f24:	b	29f2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160a0>
   29f28:	mov	r4, r5
   29f2c:	ldr	r3, [r3]
   29f30:	add	r5, r4, #1
   29f34:	cmp	r3, #0
   29f38:	bne	29f28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1609c>
   29f3c:	lsl	r0, r5, #2
   29f40:	bl	137b4 <xmalloc@plt>
   29f44:	ldr	r3, [r8, #16]
   29f48:	cmp	r3, #0
   29f4c:	mov	r9, r0
   29f50:	subne	r2, r0, #4
   29f54:	beq	29f68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160dc>
   29f58:	str	r3, [r2, #4]!
   29f5c:	ldr	r3, [r3]
   29f60:	cmp	r3, #0
   29f64:	bne	29f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x160cc>
   29f68:	mov	r0, r9
   29f6c:	mov	r1, r5
   29f70:	movw	r3, #40200	; 0x9d08
   29f74:	mov	r2, #4
   29f78:	movt	r3, #2
   29f7c:	bl	13cd0 <qsort@plt>
   29f80:	ldr	r3, [r9]
   29f84:	cmp	r4, #0
   29f88:	lslne	r4, r4, #2
   29f8c:	str	r3, [r8, #16]
   29f90:	addne	r0, r9, r4
   29f94:	movne	r3, r9
   29f98:	beq	29fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16124>
   29f9c:	ldr	r2, [r3]
   29fa0:	ldr	r1, [r3, #4]!
   29fa4:	cmp	r3, r0
   29fa8:	str	r1, [r2]
   29fac:	bne	29f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16110>
   29fb0:	ldr	r3, [r9, r4]
   29fb4:	mov	r0, r9
   29fb8:	str	r6, [r3]
   29fbc:	bl	13574 <free@plt>
   29fc0:	ldr	r8, [r8]
   29fc4:	cmp	r8, #0
   29fc8:	bne	29f14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16088>
   29fcc:	movw	r0, #1060	; 0x424
   29fd0:	movt	r0, #10
   29fd4:	bl	20f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0c4>
   29fd8:	movw	r0, #1060	; 0x424
   29fdc:	movt	r0, #10
   29fe0:	bl	20f60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0d4>
   29fe4:	ldr	r5, [r7]
   29fe8:	cmp	r5, #0
   29fec:	beq	2a1d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16348>
   29ff0:	ldr	r9, [pc, #924]	; 2a394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16508>
   29ff4:	movw	r7, #1088	; 0x440
   29ff8:	movw	r8, #1336	; 0x538
   29ffc:	movt	r7, #10
   2a000:	movt	r8, #10
   2a004:	mov	r6, #0
   2a008:	ldr	r3, [r5, #4]
   2a00c:	ldrb	r3, [r3, #12]
   2a010:	sub	r3, r3, #3
   2a014:	cmp	r3, #1
   2a018:	bls	2a1c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1633c>
   2a01c:	ldr	r0, [r7, #52]	; 0x34
   2a020:	movw	r4, #1088	; 0x440
   2a024:	ldr	r1, [r5, #8]
   2a028:	movt	r4, #10
   2a02c:	bl	136d0 <bfd_reloc_type_lookup@plt>
   2a030:	subs	sl, r0, #0
   2a034:	str	sl, [sp, #28]
   2a038:	beq	2a2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16458>
   2a03c:	ldr	r0, [sp, #28]
   2a040:	bl	136a0 <bfd_get_reloc_size@plt>
   2a044:	sub	r3, r0, #1
   2a048:	mov	r4, r0
   2a04c:	cmp	r3, #7
   2a050:	ldrls	pc, [pc, r3, lsl #2]
   2a054:	b	2a218 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1638c>
   2a058:	andeq	sl, r2, r0, ror #3
   2a05c:	andeq	sl, r2, r8, ror r0
   2a060:	andeq	sl, r2, r8, lsl r2
   2a064:	andeq	sl, r2, ip, lsl #4
   2a068:	andeq	sl, r2, r8, lsl r2
   2a06c:	andeq	sl, r2, r8, lsl r2
   2a070:	andeq	sl, r2, r8, lsl r2
   2a074:	andeq	sl, r2, ip, ror #3
   2a078:	movw	fp, #285	; 0x11d
   2a07c:	str	fp, [sp, #12]
   2a080:	asr	r1, r4, #31
   2a084:	mov	r0, r4
   2a088:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   2a08c:	mov	r1, r0
   2a090:	movw	r0, #279	; 0x117
   2a094:	bl	2e52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a6a0>
   2a098:	mov	r2, #0
   2a09c:	mov	r1, r0
   2a0a0:	movw	r0, #7988	; 0x1f34
   2a0a4:	movt	r0, #7
   2a0a8:	bl	2e6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a85c>
   2a0ac:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   2a0b0:	ldr	r3, [r5, #4]
   2a0b4:	movw	r1, #7988	; 0x1f34
   2a0b8:	movw	r0, #259	; 0x103
   2a0bc:	movt	r1, #7
   2a0c0:	ldr	r4, [r3, #4]
   2a0c4:	bl	2e604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a778>
   2a0c8:	mov	r2, #0
   2a0cc:	mov	r1, r0
   2a0d0:	mov	r0, r4
   2a0d4:	bl	2e6e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a85c>
   2a0d8:	bl	26318 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1248c>
   2a0dc:	mov	r1, #0
   2a0e0:	ldr	r0, [r5, #12]
   2a0e4:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   2a0e8:	mov	r1, r0
   2a0ec:	ldr	r0, [sp, #12]
   2a0f0:	bl	26260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123d4>
   2a0f4:	ldr	r4, [r5, #16]
   2a0f8:	cmp	r4, #0
   2a0fc:	beq	2a1b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16324>
   2a100:	ldr	r3, [r8, #80]	; 0x50
   2a104:	cmp	r3, #0
   2a108:	beq	2a168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x162dc>
   2a10c:	cmp	r6, #0
   2a110:	beq	2a2a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16414>
   2a114:	ldr	r3, [r5, #4]
   2a118:	movw	r0, #14204	; 0x377c
   2a11c:	movt	r0, #5
   2a120:	ldr	r1, [r3, #4]
   2a124:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2a128:	ldr	r3, [r5, #4]
   2a12c:	ldr	r0, [r3, #4]
   2a130:	bl	13a24 <strlen@plt>
   2a134:	cmp	r0, #18
   2a138:	mov	fp, r0
   2a13c:	bgt	2a294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16408>
   2a140:	add	fp, fp, #1
   2a144:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   2a148:	cmp	fp, #19
   2a14c:	ble	2a140 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x162b4>
   2a150:	ldr	r1, [r4, #4]
   2a154:	cmp	r1, #0
   2a158:	beq	2a2c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16434>
   2a15c:	movw	r0, #15328	; 0x3be0
   2a160:	movt	r0, #5
   2a164:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2a168:	ldr	r2, [r4, #8]
   2a16c:	cmp	r2, r9
   2a170:	ldrne	r3, [r2, #20]
   2a174:	orrne	r3, r3, #2097152	; 0x200000
   2a178:	strne	r3, [r2, #20]
   2a17c:	ldrb	r3, [r7]
   2a180:	and	r3, r3, #3
   2a184:	cmp	r3, #2
   2a188:	beq	2a258 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x163cc>
   2a18c:	mov	r0, r2
   2a190:	ldrd	r2, [r4, #16]
   2a194:	bl	2e2b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a424>
   2a198:	mov	r1, r0
   2a19c:	ldr	r0, [sp, #12]
   2a1a0:	bl	26260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123d4>
   2a1a4:	ldr	r4, [r4]
   2a1a8:	cmp	r4, #0
   2a1ac:	bne	2a100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16274>
   2a1b0:	mov	r1, #0
   2a1b4:	mov	r0, #0
   2a1b8:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   2a1bc:	mov	r1, r0
   2a1c0:	ldr	r0, [sp, #12]
   2a1c4:	bl	26260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x123d4>
   2a1c8:	ldr	r5, [r5]
   2a1cc:	cmp	r5, #0
   2a1d0:	bne	2a008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1617c>
   2a1d4:	add	sp, sp, #36	; 0x24
   2a1d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a1dc:	b	20fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd124>
   2a1e0:	movw	fp, #286	; 0x11e
   2a1e4:	str	fp, [sp, #12]
   2a1e8:	b	2a080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x161f4>
   2a1ec:	ldr	fp, [sp, #28]
   2a1f0:	movw	r3, #283	; 0x11b
   2a1f4:	movw	r2, #282	; 0x11a
   2a1f8:	ldr	sl, [fp, #24]
   2a1fc:	cmp	sl, #2
   2a200:	moveq	r2, r3
   2a204:	str	r2, [sp, #12]
   2a208:	b	2a080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x161f4>
   2a20c:	mov	sl, #284	; 0x11c
   2a210:	str	sl, [sp, #12]
   2a214:	b	2a080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x161f4>
   2a218:	mov	r2, #5
   2a21c:	movw	r1, #15256	; 0x3b98
   2a220:	mov	r0, #0
   2a224:	movt	r1, #5
   2a228:	bl	13688 <dcgettext@plt>
   2a22c:	mov	sl, r0
   2a230:	ldr	r0, [sp, #28]
   2a234:	bl	136a0 <bfd_get_reloc_size@plt>
   2a238:	ldr	r3, [r5, #4]
   2a23c:	ldr	r2, [r3, #4]
   2a240:	mov	r1, r0
   2a244:	mov	r0, sl
   2a248:	mov	sl, #284	; 0x11c
   2a24c:	str	sl, [sp, #12]
   2a250:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2a254:	b	2a080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x161f4>
   2a258:	ldr	ip, [r5, #8]
   2a25c:	ldr	r3, [r4, #4]
   2a260:	ldrd	r0, [r4, #16]
   2a264:	str	r2, [sp, #24]
   2a268:	str	r3, [sp, #16]
   2a26c:	str	ip, [sp, #20]
   2a270:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   2a274:	ldr	ip, [sp, #20]
   2a278:	ldr	r2, [sp, #24]
   2a27c:	ldr	r1, [sp, #28]
   2a280:	ldr	r3, [sp, #16]
   2a284:	str	r0, [sp]
   2a288:	mov	r0, ip
   2a28c:	bl	262a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12418>
   2a290:	b	2a1a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16318>
   2a294:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   2a298:	mov	fp, #0
   2a29c:	b	2a140 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x162b4>
   2a2a0:	mov	r0, r6
   2a2a4:	mov	r2, #5
   2a2a8:	movw	r1, #15296	; 0x3bc0
   2a2ac:	movt	r1, #5
   2a2b0:	bl	13688 <dcgettext@plt>
   2a2b4:	mov	r6, #1
   2a2b8:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2a2bc:	b	2a114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16288>
   2a2c0:	ldr	ip, [r4, #8]
   2a2c4:	movw	r0, #15332	; 0x3be4
   2a2c8:	ldrd	sl, [r4, #16]
   2a2cc:	movt	r0, #5
   2a2d0:	ldr	r1, [ip, #180]	; 0xb4
   2a2d4:	mov	r2, ip
   2a2d8:	strd	sl, [sp]
   2a2dc:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2a2e0:	b	2a168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x162dc>
   2a2e4:	ldrb	r3, [r4]
   2a2e8:	and	r3, r3, #3
   2a2ec:	cmp	r3, #2
   2a2f0:	beq	2a374 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x164e8>
   2a2f4:	ldr	r3, [r5, #16]
   2a2f8:	ldr	r3, [r3, #8]
   2a2fc:	ldr	r0, [r3, #180]	; 0xb4
   2a300:	cmp	r0, #0
   2a304:	beq	2a31c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16490>
   2a308:	ldr	r1, [r5, #8]
   2a30c:	bl	136d0 <bfd_reloc_type_lookup@plt>
   2a310:	cmp	r0, #0
   2a314:	str	r0, [sp, #28]
   2a318:	bne	2a03c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x161b0>
   2a31c:	movw	r1, #15208	; 0x3b68
   2a320:	mov	r0, #0
   2a324:	movt	r1, #5
   2a328:	mov	r2, #5
   2a32c:	bl	13688 <dcgettext@plt>
   2a330:	ldr	r3, [r5, #16]
   2a334:	ldr	r3, [r3, #8]
   2a338:	ldr	r3, [r3, #180]	; 0xb4
   2a33c:	mov	sl, r0
   2a340:	ldr	r0, [r5, #8]
   2a344:	ldr	r3, [r3, #4]
   2a348:	ldr	r4, [r3]
   2a34c:	bl	13418 <bfd_get_reloc_code_name@plt>
   2a350:	ldr	r3, [r5, #4]
   2a354:	mov	r1, r4
   2a358:	ldr	r3, [r3, #4]
   2a35c:	mov	r2, r0
   2a360:	mov	r0, sl
   2a364:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2a368:	b	2a1c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1633c>
   2a36c:	add	sp, sp, #36	; 0x24
   2a370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a374:	movw	r1, #15208	; 0x3b68
   2a378:	mov	r2, #5
   2a37c:	movt	r1, #5
   2a380:	bl	13688 <dcgettext@plt>
   2a384:	ldr	r3, [r4, #52]	; 0x34
   2a388:	mov	sl, r0
   2a38c:	ldr	r0, [r5, #8]
   2a390:	b	2a344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x164b8>
   2a394:			; <UNDEFINED> instruction: 0x0009fab8
   2a398:	movw	ip, #96	; 0x60
   2a39c:	movt	ip, #10
   2a3a0:	push	{r3, lr}
   2a3a4:	ldr	ip, [ip]
   2a3a8:	blx	ip
   2a3ac:	movw	r3, #1336	; 0x538
   2a3b0:	movt	r3, #10
   2a3b4:	mov	r2, #0
   2a3b8:	str	r2, [r3, #4]
   2a3bc:	pop	{r3, pc}
   2a3c0:	push	{r4, r5, r6, r7, r8, lr}
   2a3c4:	sub	sp, sp, #16
   2a3c8:	mov	r8, r3
   2a3cc:	mov	r7, r1
   2a3d0:	ldrd	r4, [sp, #40]	; 0x28
   2a3d4:	mov	r6, r2
   2a3d8:	movw	r1, #15372	; 0x3c0c
   2a3dc:	mov	r2, #5
   2a3e0:	movt	r1, #5
   2a3e4:	mov	r0, #0
   2a3e8:	bl	13688 <dcgettext@plt>
   2a3ec:	str	r7, [sp, #8]
   2a3f0:	strd	r4, [sp]
   2a3f4:	mov	r1, r6
   2a3f8:	mov	r2, r8
   2a3fc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2a400:	add	sp, sp, #16
   2a404:	pop	{r4, r5, r6, r7, r8, pc}
   2a408:	push	{r4, r5, r6, r7, r8, lr}
   2a40c:	sub	sp, sp, #16
   2a410:	mov	r8, r3
   2a414:	mov	r7, r1
   2a418:	ldrd	r4, [sp, #40]	; 0x28
   2a41c:	mov	r6, r2
   2a420:	movw	r1, #15436	; 0x3c4c
   2a424:	mov	r2, #5
   2a428:	movt	r1, #5
   2a42c:	mov	r0, #0
   2a430:	bl	13688 <dcgettext@plt>
   2a434:	str	r7, [sp, #8]
   2a438:	strd	r4, [sp]
   2a43c:	mov	r1, r6
   2a440:	mov	r2, r8
   2a444:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2a448:	add	sp, sp, #16
   2a44c:	pop	{r4, r5, r6, r7, r8, pc}
   2a450:	push	{r4, r5, r6, r7, r8, lr}
   2a454:	cmp	r1, #0
   2a458:	sub	sp, sp, #8
   2a45c:	mov	r5, r3
   2a460:	ldr	r6, [sp, #32]
   2a464:	ldr	r7, [sp, #40]	; 0x28
   2a468:	ldr	r8, [sp, #44]	; 0x2c
   2a46c:	beq	2a50c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16680>
   2a470:	ldr	r0, [r0, #40]	; 0x28
   2a474:	ldr	r4, [r1, #4]
   2a478:	cmp	r0, #0
   2a47c:	beq	2a4c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16634>
   2a480:	mov	r2, #0
   2a484:	mov	r1, r4
   2a488:	mov	r3, r2
   2a48c:	bl	139f4 <bfd_hash_lookup@plt>
   2a490:	cmp	r0, #0
   2a494:	beq	2a4c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16634>
   2a498:	ldr	r3, [pc, #168]	; 2a548 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x166bc>
   2a49c:	mov	r2, r4
   2a4a0:	cmp	r6, r3
   2a4a4:	movweq	r0, #15468	; 0x3c6c
   2a4a8:	movwne	r0, #15492	; 0x3c84
   2a4ac:	moveq	r1, r5
   2a4b0:	movteq	r0, #5
   2a4b4:	movne	r1, r5
   2a4b8:	movtne	r0, #5
   2a4bc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2a4c0:	movw	ip, #1244	; 0x4dc
   2a4c4:	movt	ip, #10
   2a4c8:	ldr	r3, [ip, #16]
   2a4cc:	cmp	r3, #0
   2a4d0:	bne	2a4e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1665c>
   2a4d4:	movw	r3, #1004	; 0x3ec
   2a4d8:	movt	r3, #10
   2a4dc:	ldr	r3, [r3]
   2a4e0:	cmp	r3, #0
   2a4e4:	beq	2a500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16674>
   2a4e8:	str	r7, [sp]
   2a4ec:	mov	r0, r4
   2a4f0:	str	r8, [sp, #4]
   2a4f4:	mov	r1, r5
   2a4f8:	mov	r2, r6
   2a4fc:	bl	317d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d944>
   2a500:	mov	r0, #1
   2a504:	add	sp, sp, #8
   2a508:	pop	{r4, r5, r6, r7, r8, pc}
   2a50c:	movw	r3, #1244	; 0x4dc
   2a510:	movt	r3, #10
   2a514:	ldr	r3, [r3, #16]
   2a518:	cmp	r3, #0
   2a51c:	bne	2a534 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x166a8>
   2a520:	movw	r3, #1004	; 0x3ec
   2a524:	movt	r3, #10
   2a528:	ldr	r3, [r3]
   2a52c:	cmp	r3, #0
   2a530:	beq	2a500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16674>
   2a534:	mov	r0, r5
   2a538:	mov	r1, r7
   2a53c:	add	sp, sp, #8
   2a540:	pop	{r4, r5, r6, r7, r8, lr}
   2a544:	b	31920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da94>
   2a548:	strdeq	pc, [r9], -r0
   2a54c:	push	{r4, r5, r6, r7, lr}
   2a550:	movw	r4, #63248	; 0xf710
   2a554:	movt	r4, #9
   2a558:	sub	sp, sp, #28
   2a55c:	mov	r7, r0
   2a560:	mov	r0, r2
   2a564:	ldr	r3, [r4]
   2a568:	mov	r5, r2
   2a56c:	mov	r6, r1
   2a570:	str	r3, [sp, #20]
   2a574:	bl	13514 <bfd_generic_link_read_symbols@plt>
   2a578:	cmp	r0, #0
   2a57c:	bne	2a598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1670c>
   2a580:	movw	r1, #15516	; 0x3c9c
   2a584:	mov	r2, #5
   2a588:	movt	r1, #5
   2a58c:	bl	13688 <dcgettext@plt>
   2a590:	mov	r1, r5
   2a594:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2a598:	ldr	ip, [r5, #128]	; 0x80
   2a59c:	mov	r0, r5
   2a5a0:	add	r2, sp, #4
   2a5a4:	movw	r1, #44492	; 0xadcc
   2a5a8:	movt	r1, #2
   2a5ac:	mov	r3, #0
   2a5b0:	str	r7, [sp, #8]
   2a5b4:	str	r3, [sp, #4]
   2a5b8:	str	r6, [sp, #12]
   2a5bc:	str	ip, [sp, #16]
   2a5c0:	bl	13d78 <bfd_map_over_sections@plt>
   2a5c4:	ldr	r2, [sp, #20]
   2a5c8:	ldr	r3, [r4]
   2a5cc:	ldr	r0, [sp, #4]
   2a5d0:	cmp	r2, r3
   2a5d4:	bne	2a5e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16754>
   2a5d8:	add	sp, sp, #28
   2a5dc:	pop	{r4, r5, r6, r7, pc}
   2a5e0:	bl	13694 <__stack_chk_fail@plt>
   2a5e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a5e8:	movw	r5, #63248	; 0xf710
   2a5ec:	movt	r5, #9
   2a5f0:	sub	sp, sp, #160	; 0xa0
   2a5f4:	mov	r6, r1
   2a5f8:	mov	r8, r0
   2a5fc:	ldr	ip, [r5]
   2a600:	mov	r1, #44	; 0x2c
   2a604:	mov	r0, #1
   2a608:	mov	r7, r2
   2a60c:	mov	r9, r3
   2a610:	movw	sl, #1088	; 0x440
   2a614:	str	ip, [sp, #156]	; 0x9c
   2a618:	bl	13e38 <xcalloc@plt>
   2a61c:	ldr	r3, [r6]
   2a620:	add	ip, sp, #12
   2a624:	movt	sl, #10
   2a628:	ldrb	sl, [sl, #1]
   2a62c:	tst	sl, #1
   2a630:	mov	lr, r0
   2a634:	str	r6, [r0, #16]
   2a638:	mov	r4, r0
   2a63c:	str	r3, [r0, #8]
   2a640:	str	r3, [r0, #12]
   2a644:	ldm	lr!, {r0, r1, r2, r3}
   2a648:	stmia	ip!, {r0, r1, r2, r3}
   2a64c:	ldm	lr!, {r0, r1, r2, r3}
   2a650:	stmia	ip!, {r0, r1, r2, r3}
   2a654:	ldm	lr, {r0, r1, r2}
   2a658:	stm	ip, {r0, r1, r2}
   2a65c:	beq	2a674 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167e8>
   2a660:	mov	r0, r4
   2a664:	bl	33740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8b4>
   2a668:	ldrb	r3, [r4, #37]	; 0x25
   2a66c:	tst	r3, #32
   2a670:	bne	2a810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16984>
   2a674:	mov	r0, r4
   2a678:	bl	243b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10524>
   2a67c:	movw	r3, #1336	; 0x538
   2a680:	movt	r3, #10
   2a684:	ldr	r3, [r3, #80]	; 0x50
   2a688:	cmp	r3, #0
   2a68c:	beq	2a7b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1692c>
   2a690:	mov	r2, #0
   2a694:	ldr	r0, [r8, #32]
   2a698:	mov	ip, #1
   2a69c:	mov	r3, r2
   2a6a0:	mov	r1, r7
   2a6a4:	str	ip, [sp]
   2a6a8:	bl	13880 <bfd_link_hash_lookup@plt>
   2a6ac:	subs	r8, r0, #0
   2a6b0:	moveq	r9, r8
   2a6b4:	beq	2a6e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16858>
   2a6b8:	ldrb	r3, [r8, #12]
   2a6bc:	sub	r3, r3, #1
   2a6c0:	cmp	r3, #4
   2a6c4:	ldrls	pc, [pc, r3, lsl #2]
   2a6c8:	b	2a8ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a60>
   2a6cc:	andeq	sl, r2, r0, ror #13
   2a6d0:	andeq	sl, r2, r0, ror #13
   2a6d4:	andeq	sl, r2, r0, ror r8
   2a6d8:	andeq	sl, r2, r0, ror r8
   2a6dc:	andeq	sl, r2, ip, ror r8
   2a6e0:	ldr	r9, [r8, #20]
   2a6e4:	movw	r4, #96	; 0x60
   2a6e8:	movt	r4, #10
   2a6ec:	ldr	r0, [r4, #4]
   2a6f0:	cmp	r0, #0
   2a6f4:	bne	2a734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x168a8>
   2a6f8:	mov	r2, #5
   2a6fc:	movw	r1, #15588	; 0x3ce4
   2a700:	movt	r1, #5
   2a704:	bl	13688 <dcgettext@plt>
   2a708:	mov	r1, #1
   2a70c:	mov	r2, #100	; 0x64
   2a710:	mov	r3, r0
   2a714:	add	r0, sp, #56	; 0x38
   2a718:	bl	13acc <__sprintf_chk@plt>
   2a71c:	add	r1, sp, #56	; 0x38
   2a720:	movw	r0, #14204	; 0x377c
   2a724:	movt	r0, #5
   2a728:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2a72c:	mov	r3, #1
   2a730:	str	r3, [r4, #4]
   2a734:	ldr	r3, [r6, #148]	; 0x94
   2a738:	cmp	r3, #0
   2a73c:	beq	2a74c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x168c0>
   2a740:	ldrb	r2, [r3, #44]	; 0x2c
   2a744:	tst	r2, #1
   2a748:	beq	2a88c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a00>
   2a74c:	ldr	r1, [r6]
   2a750:	movw	r0, #14204	; 0x377c
   2a754:	movt	r0, #5
   2a758:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2a75c:	ldr	r0, [r6]
   2a760:	bl	13a24 <strlen@plt>
   2a764:	mov	r4, r0
   2a768:	cmp	r4, #28
   2a76c:	bgt	2a8c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a3c>
   2a770:	add	r4, r4, #1
   2a774:	bl	303bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c530>
   2a778:	cmp	r4, #29
   2a77c:	ble	2a770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x168e4>
   2a780:	cmp	r9, #0
   2a784:	beq	2a798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1690c>
   2a788:	movw	r0, #13528	; 0x34d8
   2a78c:	mov	r1, r9
   2a790:	movt	r0, #5
   2a794:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2a798:	cmp	r8, #0
   2a79c:	movwne	r0, #13532	; 0x34dc
   2a7a0:	movweq	r0, #15660	; 0x3d2c
   2a7a4:	ldrne	r1, [r8, #4]
   2a7a8:	movtne	r0, #5
   2a7ac:	moveq	r1, r7
   2a7b0:	movteq	r0, #5
   2a7b4:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2a7b8:	movw	r3, #1476	; 0x5c4
   2a7bc:	movt	r3, #10
   2a7c0:	ldr	r3, [r3]
   2a7c4:	cmp	r3, #0
   2a7c8:	bne	2a7e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16958>
   2a7cc:	movw	r3, #1464	; 0x5b8
   2a7d0:	movt	r3, #10
   2a7d4:	ldr	r3, [r3]
   2a7d8:	cmp	r3, #0
   2a7dc:	moveq	r0, #1
   2a7e0:	beq	2a7f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1696c>
   2a7e4:	add	r1, sp, #12
   2a7e8:	movw	r0, #12660	; 0x3174
   2a7ec:	movt	r0, #5
   2a7f0:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   2a7f4:	mov	r0, #1
   2a7f8:	ldr	r2, [sp, #156]	; 0x9c
   2a7fc:	ldr	r3, [r5]
   2a800:	cmp	r2, r3
   2a804:	bne	2a8e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a5c>
   2a808:	add	sp, sp, #160	; 0xa0
   2a80c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a810:	movw	r2, #356	; 0x164
   2a814:	movt	r2, #10
   2a818:	ldr	r2, [r2]
   2a81c:	cmp	r2, #0
   2a820:	beq	2a8d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16a48>
   2a824:	movw	r3, #1476	; 0x5c4
   2a828:	movt	r3, #10
   2a82c:	ldr	r3, [r3]
   2a830:	cmp	r3, #0
   2a834:	bne	2a84c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x169c0>
   2a838:	movw	r3, #1464	; 0x5b8
   2a83c:	movt	r3, #10
   2a840:	ldr	r3, [r3]
   2a844:	cmp	r3, #0
   2a848:	beq	2a85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x169d0>
   2a84c:	movw	r0, #15552	; 0x3cc0
   2a850:	add	r1, sp, #12
   2a854:	movt	r0, #5
   2a858:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   2a85c:	ldrb	r3, [r4, #37]	; 0x25
   2a860:	mov	r0, #0
   2a864:	bfc	r3, #5, #1
   2a868:	strb	r3, [r4, #37]	; 0x25
   2a86c:	b	2a7f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1696c>
   2a870:	ldr	r3, [r8, #20]
   2a874:	ldr	r9, [r3, #180]	; 0xb4
   2a878:	b	2a6e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16858>
   2a87c:	ldr	r3, [r8, #20]
   2a880:	ldr	r3, [r3, #4]
   2a884:	ldr	r9, [r3, #180]	; 0xb4
   2a888:	b	2a6e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16858>
   2a88c:	ldr	r1, [r3]
   2a890:	movw	r0, #15652	; 0x3d24
   2a894:	ldr	r2, [r6]
   2a898:	movt	r0, #5
   2a89c:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2a8a0:	ldr	r3, [r6, #148]	; 0x94
   2a8a4:	ldr	r0, [r3]
   2a8a8:	bl	13a24 <strlen@plt>
   2a8ac:	mov	r4, r0
   2a8b0:	ldr	r0, [r6]
   2a8b4:	bl	13a24 <strlen@plt>
   2a8b8:	add	r0, r4, r0
   2a8bc:	add	r4, r0, #2
   2a8c0:	cmp	r4, #28
   2a8c4:	ble	2a770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x168e4>
   2a8c8:	bl	303d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c544>
   2a8cc:	mov	r4, #0
   2a8d0:	b	2a770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x168e4>
   2a8d4:	ldr	r2, [r4, #16]
   2a8d8:	orr	r3, r3, #64	; 0x40
   2a8dc:	strb	r3, [r4, #37]	; 0x25
   2a8e0:	str	r2, [r9]
   2a8e4:	b	2a674 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x167e8>
   2a8e8:	bl	13694 <__stack_chk_fail@plt>
   2a8ec:	mov	r9, #0
   2a8f0:	b	2a6e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16858>
   2a8f4:	push	{r3, lr}
   2a8f8:	bl	13c10 <bfd_cache_close_all@plt>
   2a8fc:	bl	337f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f964>
   2a900:	movw	r3, #62432	; 0xf3e0
   2a904:	movt	r3, #9
   2a908:	ldr	r0, [r3]
   2a90c:	cmp	r0, #0
   2a910:	popeq	{r3, pc}
   2a914:	movw	r3, #0
   2a918:	movt	r3, #10
   2a91c:	ldr	r3, [r3]
   2a920:	cmp	r3, #0
   2a924:	popeq	{r3, pc}
   2a928:	pop	{r3, lr}
   2a92c:	b	13ac0 <unlink_if_ordinary@plt>
   2a930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a934:	movw	sl, #62432	; 0xf3e0
   2a938:	movt	sl, #9
   2a93c:	mov	r8, r1
   2a940:	sub	sp, sp, #20
   2a944:	mov	fp, r2
   2a948:	ldr	r1, [sl, #4]
   2a94c:	mov	r9, r3
   2a950:	str	r0, [sp, #12]
   2a954:	cmn	r1, #1
   2a958:	ldrd	r6, [sp, #56]	; 0x38
   2a95c:	ldr	r1, [sp, #64]	; 0x40
   2a960:	ldr	r2, [sp, #68]	; 0x44
   2a964:	ldrd	r4, [sp, #72]	; 0x48
   2a968:	beq	2a9f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b68>
   2a96c:	strd	r4, [sp]
   2a970:	movw	r0, #15668	; 0x3d34
   2a974:	movt	r0, #5
   2a978:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2a97c:	ldr	r0, [sl, #4]
   2a980:	cmp	r0, #0
   2a984:	blt	2a994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b08>
   2a988:	sub	r3, r0, #1
   2a98c:	str	r3, [sl, #4]
   2a990:	beq	2aa94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c08>
   2a994:	cmp	r8, #0
   2a998:	bne	2a9c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b38>
   2a99c:	mov	r0, r8
   2a9a0:	mov	r2, #5
   2a9a4:	movw	r1, #15896	; 0x3e18
   2a9a8:	movt	r1, #5
   2a9ac:	bl	13688 <dcgettext@plt>
   2a9b0:	mov	r1, r9
   2a9b4:	mov	r2, fp
   2a9b8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2a9bc:	b	2aa38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bac>
   2a9c0:	ldr	r8, [r8, #20]
   2a9c4:	ldrb	r2, [r8, #12]
   2a9c8:	sub	r3, r2, #6
   2a9cc:	cmp	r3, #1
   2a9d0:	bls	2a9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16b34>
   2a9d4:	sub	r2, r2, #1
   2a9d8:	cmp	r2, #3
   2a9dc:	ldrls	pc, [pc, r2, lsl #2]
   2a9e0:	b	2aaa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c1c>
   2a9e4:	andeq	sl, r2, r4, asr sl
   2a9e8:	andeq	sl, r2, r4, asr sl
   2a9ec:	strdeq	sl, [r2], -ip
   2a9f0:	strdeq	sl, [r2], -ip
   2a9f4:	add	sp, sp, #20
   2a9f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a9fc:	mov	r2, #5
   2aa00:	movw	r1, #15800	; 0x3db8
   2aa04:	mov	r0, #0
   2aa08:	movt	r1, #5
   2aa0c:	bl	13688 <dcgettext@plt>
   2aa10:	ldr	r1, [pc, #168]	; 2aac0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c34>
   2aa14:	ldr	r3, [r8, #20]
   2aa18:	ldr	r2, [r8, #4]
   2aa1c:	cmp	r3, r1
   2aa20:	ldreq	ip, [sp, #12]
   2aa24:	ldrne	r1, [r3, #180]	; 0xb4
   2aa28:	ldreq	r1, [ip, #52]	; 0x34
   2aa2c:	str	r1, [sp]
   2aa30:	mov	r1, r9
   2aa34:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2aa38:	orrs	r3, r6, r7
   2aa3c:	bne	2aa7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bf0>
   2aa40:	movw	r0, #15324	; 0x3bdc
   2aa44:	movt	r0, #5
   2aa48:	add	sp, sp, #20
   2aa4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aa50:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2aa54:	mov	r2, #5
   2aa58:	movw	r1, #15736	; 0x3d78
   2aa5c:	mov	r0, #0
   2aa60:	movt	r1, #5
   2aa64:	bl	13688 <dcgettext@plt>
   2aa68:	mov	r1, r9
   2aa6c:	ldr	r2, [r8, #4]
   2aa70:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2aa74:	orrs	r3, r6, r7
   2aa78:	beq	2aa40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bb4>
   2aa7c:	mov	r2, r6
   2aa80:	mov	r3, r7
   2aa84:	movw	r0, #15944	; 0x3e48
   2aa88:	movt	r0, #5
   2aa8c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2aa90:	b	2aa40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bb4>
   2aa94:	movw	r1, #15676	; 0x3d3c
   2aa98:	mov	r2, #5
   2aa9c:	movt	r1, #5
   2aaa0:	bl	13688 <dcgettext@plt>
   2aaa4:	b	2aa48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16bbc>
   2aaa8:	movw	r0, #15884	; 0x3e0c
   2aaac:	movw	r2, #15336	; 0x3be8
   2aab0:	movt	r0, #5
   2aab4:	movt	r2, #5
   2aab8:	mov	r1, #1408	; 0x580
   2aabc:	bl	303e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c558>
   2aac0:			; <UNDEFINED> instruction: 0x0009fab8
   2aac4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2aac8:	mov	r7, r2
   2aacc:	ldrb	ip, [r0, #5]
   2aad0:	sub	sp, sp, #16
   2aad4:	mov	r6, r3
   2aad8:	ands	ip, ip, #1
   2aadc:	bne	2abb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d28>
   2aae0:	ldrb	r3, [r1, #12]
   2aae4:	cmp	r3, #3
   2aae8:	beq	2abbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d30>
   2aaec:	cmp	r3, #6
   2aaf0:	bne	2abec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d60>
   2aaf4:	ldr	r8, [pc, #364]	; 2ac68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ddc>
   2aaf8:	mov	r4, #0
   2aafc:	mov	r5, #0
   2ab00:	mov	r9, ip
   2ab04:	ldr	r2, [r8, #88]	; 0x58
   2ab08:	cmp	r2, #0
   2ab0c:	beq	2ab1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c90>
   2ab10:	ldr	r3, [pc, #340]	; 2ac6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16de0>
   2ab14:	cmp	r2, r3
   2ab18:	beq	2abb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d28>
   2ab1c:	ldr	r2, [r6, #88]	; 0x58
   2ab20:	cmp	r2, #0
   2ab24:	beq	2ab3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16cb0>
   2ab28:	ldr	r3, [pc, #316]	; 2ac6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16de0>
   2ab2c:	cmp	r6, r3
   2ab30:	beq	2ab3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16cb0>
   2ab34:	cmp	r2, r3
   2ab38:	beq	2abb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d28>
   2ab3c:	cmp	r7, #0
   2ab40:	ldr	sl, [r1, #4]
   2ab44:	beq	2ac24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d98>
   2ab48:	mov	r2, #5
   2ab4c:	movw	r1, #15948	; 0x3e4c
   2ab50:	mov	r0, #0
   2ab54:	movt	r1, #5
   2ab58:	bl	13688 <dcgettext@plt>
   2ab5c:	ldrd	r2, [sp, #48]	; 0x30
   2ab60:	str	sl, [sp, #8]
   2ab64:	mov	r1, r7
   2ab68:	strd	r2, [sp]
   2ab6c:	mov	r2, r6
   2ab70:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2ab74:	cmp	r9, #0
   2ab78:	beq	2aba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d14>
   2ab7c:	mov	r2, #5
   2ab80:	movw	r1, #15984	; 0x3e70
   2ab84:	mov	r0, #0
   2ab88:	movt	r1, #5
   2ab8c:	bl	13688 <dcgettext@plt>
   2ab90:	strd	r4, [sp]
   2ab94:	mov	r1, r9
   2ab98:	mov	r2, r8
   2ab9c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2aba0:	movw	r4, #1088	; 0x440
   2aba4:	movt	r4, #10
   2aba8:	ldr	r0, [r4, #24]
   2abac:	cmp	r0, #0
   2abb0:	beq	2ac00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d74>
   2abb4:	add	sp, sp, #16
   2abb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2abbc:	ldr	r8, [r1, #20]
   2abc0:	ldr	r3, [pc, #164]	; 2ac6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16de0>
   2abc4:	ldrd	r4, [r1, #24]
   2abc8:	cmp	r8, r3
   2abcc:	ldr	r9, [r8, #180]	; 0xb4
   2abd0:	bne	2ab04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16c78>
   2abd4:	cmp	r6, r8
   2abd8:	beq	2ac50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16dc4>
   2abdc:	ldr	r2, [r6, #88]	; 0x58
   2abe0:	cmp	r2, #0
   2abe4:	bne	2ab34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ca8>
   2abe8:	b	2ab3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16cb0>
   2abec:	movw	r0, #15884	; 0x3e0c
   2abf0:	movw	r1, #938	; 0x3aa
   2abf4:	movt	r0, #5
   2abf8:	ldr	r2, [pc, #112]	; 2ac70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16de4>
   2abfc:	bl	303e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c558>
   2ac00:	mov	r2, #5
   2ac04:	movw	r1, #16008	; 0x3e88
   2ac08:	movt	r1, #5
   2ac0c:	bl	13688 <dcgettext@plt>
   2ac10:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2ac14:	mov	r3, #2
   2ac18:	str	r3, [r4, #24]
   2ac1c:	add	sp, sp, #16
   2ac20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ac24:	mov	r0, r7
   2ac28:	mov	r2, #5
   2ac2c:	movw	r1, #15948	; 0x3e4c
   2ac30:	movt	r1, #5
   2ac34:	bl	13688 <dcgettext@plt>
   2ac38:	strd	r4, [sp]
   2ac3c:	str	sl, [sp, #8]
   2ac40:	mov	r1, r9
   2ac44:	mov	r2, r8
   2ac48:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2ac4c:	b	2aba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d14>
   2ac50:	ldrd	r2, [sp, #48]	; 0x30
   2ac54:	cmp	r3, r5
   2ac58:	cmpeq	r2, r4
   2ac5c:	movne	r8, r6
   2ac60:	bne	2ab3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16cb0>
   2ac64:	b	2abb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16d28>
   2ac68:	andeq	pc, r9, r0, lsl #23
   2ac6c:			; <UNDEFINED> instruction: 0x0009fab8
   2ac70:	strdeq	r3, [r5], -r8
   2ac74:	movw	ip, #1336	; 0x538
   2ac78:	movt	ip, #10
   2ac7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ac80:	mov	r6, r1
   2ac84:	ldr	r1, [ip, #32]
   2ac88:	mov	sl, r0
   2ac8c:	mov	r8, r2
   2ac90:	mov	r7, r3
   2ac94:	cmp	r1, #0
   2ac98:	ldr	r9, [sp, #32]
   2ac9c:	ldrd	r4, [sp, #40]	; 0x28
   2aca0:	bne	2acbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16e30>
   2aca4:	movw	r1, #16080	; 0x3ed0
   2aca8:	mov	r0, r6
   2acac:	movt	r1, #5
   2acb0:	bl	13490 <strcmp@plt>
   2acb4:	cmp	r0, #0
   2acb8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2acbc:	cmp	r9, #0
   2acc0:	beq	2acfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16e70>
   2acc4:	mov	r2, #5
   2acc8:	movw	r1, #21796	; 0x5524
   2accc:	mov	r0, #0
   2acd0:	movt	r1, #5
   2acd4:	bl	13688 <dcgettext@plt>
   2acd8:	strd	r4, [sp, #32]
   2acdc:	str	r6, [sp, #44]	; 0x2c
   2ace0:	mov	r1, r7
   2ace4:	mov	r2, r9
   2ace8:	str	r0, [sp, #40]	; 0x28
   2acec:	movw	r0, #16108	; 0x3eec
   2acf0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2acf4:	movt	r0, #5
   2acf8:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2acfc:	cmp	r7, #0
   2ad00:	beq	2ada0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16f14>
   2ad04:	cmp	r8, #0
   2ad08:	movweq	r1, #21796	; 0x5524
   2ad0c:	moveq	r0, r8
   2ad10:	moveq	r2, #5
   2ad14:	movteq	r1, #5
   2ad18:	beq	2ad7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ef0>
   2ad1c:	mov	r0, r6
   2ad20:	mov	r1, r8
   2ad24:	mov	r2, r7
   2ad28:	bl	2a54c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x166c0>
   2ad2c:	cmp	r0, #0
   2ad30:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ad34:	ldr	r4, [sl, #56]	; 0x38
   2ad38:	cmp	r4, #0
   2ad3c:	beq	2ad6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ee0>
   2ad40:	cmp	r7, r4
   2ad44:	mov	r2, r4
   2ad48:	mov	r0, r6
   2ad4c:	mov	r1, r8
   2ad50:	beq	2ad60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ed4>
   2ad54:	bl	2a54c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x166c0>
   2ad58:	cmp	r0, #0
   2ad5c:	bne	2ad9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16f10>
   2ad60:	ldr	r4, [r4, #164]	; 0xa4
   2ad64:	cmp	r4, #0
   2ad68:	bne	2ad40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16eb4>
   2ad6c:	movw	r1, #21796	; 0x5524
   2ad70:	movt	r1, #5
   2ad74:	mov	r0, #0
   2ad78:	mov	r2, #5
   2ad7c:	bl	13688 <dcgettext@plt>
   2ad80:	mov	r1, r7
   2ad84:	mov	r3, r6
   2ad88:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ad8c:	mov	r2, r0
   2ad90:	movw	r0, #16132	; 0x3f04
   2ad94:	movt	r0, #5
   2ad98:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2ad9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ada0:	mov	r0, r7
   2ada4:	mov	r2, #5
   2ada8:	movw	r1, #21796	; 0x5524
   2adac:	movt	r1, #5
   2adb0:	bl	13688 <dcgettext@plt>
   2adb4:	mov	r2, r6
   2adb8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2adbc:	mov	r1, r0
   2adc0:	movw	r0, #16120	; 0x3ef8
   2adc4:	movt	r0, #5
   2adc8:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2adcc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2add0:	mov	r6, r2
   2add4:	ldr	r4, [r2]
   2add8:	sub	sp, sp, #16
   2addc:	mov	r7, r0
   2ade0:	mov	r8, r1
   2ade4:	cmp	r4, #0
   2ade8:	beq	2adf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16f68>
   2adec:	add	sp, sp, #16
   2adf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2adf4:	bl	13d6c <bfd_get_reloc_upper_bound@plt>
   2adf8:	subs	r5, r0, #0
   2adfc:	blt	2ae9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17010>
   2ae00:	beq	2adec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16f60>
   2ae04:	mov	r0, r5
   2ae08:	bl	137b4 <xmalloc@plt>
   2ae0c:	mov	r1, r8
   2ae10:	ldr	r3, [r6, #12]
   2ae14:	mov	r9, r0
   2ae18:	mov	r0, r7
   2ae1c:	mov	r2, r9
   2ae20:	bl	13cdc <bfd_canonicalize_reloc@plt>
   2ae24:	subs	sl, r0, #0
   2ae28:	blt	2af00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17074>
   2ae2c:	add	sl, r9, sl, lsl #2
   2ae30:	cmp	r9, sl
   2ae34:	bcs	2ae8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17000>
   2ae38:	ldr	r4, [r9]
   2ae3c:	cmp	r4, #0
   2ae40:	beq	2ae8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17000>
   2ae44:	add	r5, r9, #4
   2ae48:	b	2ae58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fcc>
   2ae4c:	ldr	r4, [r5], #4
   2ae50:	cmp	r4, #0
   2ae54:	beq	2ae8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17000>
   2ae58:	ldr	r3, [r4]
   2ae5c:	cmp	r3, #0
   2ae60:	beq	2ae84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ff8>
   2ae64:	ldr	r3, [r3]
   2ae68:	cmp	r3, #0
   2ae6c:	beq	2ae84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16ff8>
   2ae70:	ldr	r0, [r3, #4]
   2ae74:	ldr	r1, [r6, #8]
   2ae78:	bl	13490 <strcmp@plt>
   2ae7c:	cmp	r0, #0
   2ae80:	beq	2aebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17030>
   2ae84:	cmp	sl, r5
   2ae88:	bhi	2ae4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fc0>
   2ae8c:	mov	r0, r9
   2ae90:	add	sp, sp, #16
   2ae94:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ae98:	b	13574 <free@plt>
   2ae9c:	mov	r0, r4
   2aea0:	mov	r2, #5
   2aea4:	movw	r1, #16144	; 0x3f10
   2aea8:	movt	r1, #5
   2aeac:	bl	13688 <dcgettext@plt>
   2aeb0:	mov	r1, r7
   2aeb4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2aeb8:	b	2ae04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16f78>
   2aebc:	mov	r2, #5
   2aec0:	movw	r1, #21796	; 0x5524
   2aec4:	movt	r1, #5
   2aec8:	ldrd	r4, [r4, #8]
   2aecc:	bl	13688 <dcgettext@plt>
   2aed0:	mov	r1, r7
   2aed4:	mov	r2, r8
   2aed8:	strd	r4, [sp]
   2aedc:	str	r0, [sp, #8]
   2aee0:	movw	r0, #16108	; 0x3eec
   2aee4:	ldr	r3, [r6, #4]
   2aee8:	movt	r0, #5
   2aeec:	str	r3, [sp, #12]
   2aef0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2aef4:	mov	r3, #1
   2aef8:	str	r3, [r6]
   2aefc:	b	2ae8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17000>
   2af00:	mov	r2, #5
   2af04:	movw	r1, #16144	; 0x3f10
   2af08:	mov	r0, #0
   2af0c:	movt	r1, #5
   2af10:	bl	13688 <dcgettext@plt>
   2af14:	mov	r1, r7
   2af18:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2af1c:	b	2ae2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x16fa0>
   2af20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2af24:	movw	r5, #1336	; 0x538
   2af28:	movt	r5, #10
   2af2c:	movw	r4, #63248	; 0xf710
   2af30:	movt	r4, #9
   2af34:	sub	sp, sp, #32
   2af38:	ldr	ip, [r5, #16]
   2af3c:	mov	r7, r0
   2af40:	ldr	r6, [r4]
   2af44:	mov	sl, r1
   2af48:	cmp	ip, #0
   2af4c:	mov	r8, r2
   2af50:	mov	r9, r3
   2af54:	str	r6, [sp, #28]
   2af58:	ldr	r6, [sp, #64]	; 0x40
   2af5c:	bne	2af84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x170f8>
   2af60:	ldr	ip, [r5, #12]
   2af64:	cmp	ip, #0
   2af68:	bne	2afac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17120>
   2af6c:	ldr	r2, [sp, #28]
   2af70:	ldr	r3, [r4]
   2af74:	cmp	r2, r3
   2af78:	bne	2b0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1722c>
   2af7c:	add	sp, sp, #32
   2af80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2af84:	mov	r2, #5
   2af88:	movw	r1, #16180	; 0x3f34
   2af8c:	mov	r0, #0
   2af90:	movt	r1, #5
   2af94:	bl	13688 <dcgettext@plt>
   2af98:	mov	r1, r8
   2af9c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2afa0:	ldr	ip, [r5, #12]
   2afa4:	cmp	ip, #0
   2afa8:	beq	2af6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x170e0>
   2afac:	ldr	r0, [r7, #52]	; 0x34
   2afb0:	movw	r1, #550	; 0x226
   2afb4:	bl	136d0 <bfd_reloc_type_lookup@plt>
   2afb8:	cmp	r0, #0
   2afbc:	beq	2b060 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x171d4>
   2afc0:	ldr	r3, [r9, #4]
   2afc4:	ldrb	r3, [r3, #24]
   2afc8:	cmp	r3, #0
   2afcc:	addeq	lr, sp, #12
   2afd0:	strbne	r3, [sp, #12]
   2afd4:	addne	lr, sp, #12
   2afd8:	addne	r3, sp, #13
   2afdc:	moveq	r3, lr
   2afe0:	cmp	sl, #0
   2afe4:	movwne	ip, #16280	; 0x3f98
   2afe8:	movweq	ip, #16296	; 0x3fa8
   2afec:	movtne	ip, #5
   2aff0:	movteq	ip, #5
   2aff4:	ldm	ip!, {r0, r1, r2}
   2aff8:	ldrh	ip, [ip]
   2affc:	str	r0, [r3]
   2b000:	str	r1, [r3, #4]
   2b004:	mov	r1, lr
   2b008:	str	r2, [r3, #8]
   2b00c:	strh	ip, [r3, #12]
   2b010:	mov	r3, #1
   2b014:	ldr	r0, [r7, #32]
   2b018:	mov	r2, r3
   2b01c:	str	r3, [sp]
   2b020:	bl	13880 <bfd_link_hash_lookup@plt>
   2b024:	subs	r5, r0, #0
   2b028:	beq	2b0a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17214>
   2b02c:	ldrb	r3, [r5, #12]
   2b030:	mov	r0, r5
   2b034:	movw	r1, #550	; 0x226
   2b038:	cmp	r3, #0
   2b03c:	streq	r9, [r5, #20]
   2b040:	moveq	r3, #1
   2b044:	strbeq	r3, [r5, #12]
   2b048:	ldrd	r2, [sp, #72]	; 0x48
   2b04c:	strd	r2, [sp]
   2b050:	mov	r2, r8
   2b054:	mov	r3, r6
   2b058:	bl	29d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ef0>
   2b05c:	b	2af6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x170e0>
   2b060:	ldrb	r3, [r7]
   2b064:	and	r3, r3, #3
   2b068:	cmp	r3, #2
   2b06c:	beq	2b084 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x171f8>
   2b070:	mov	r0, r9
   2b074:	movw	r1, #550	; 0x226
   2b078:	bl	136d0 <bfd_reloc_type_lookup@plt>
   2b07c:	cmp	r0, #0
   2b080:	bne	2afc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17134>
   2b084:	mov	r2, #5
   2b088:	movw	r1, #16224	; 0x3f60
   2b08c:	mov	r0, #0
   2b090:	movt	r1, #5
   2b094:	bl	13688 <dcgettext@plt>
   2b098:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b09c:	b	2afc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17134>
   2b0a0:	mov	r2, #5
   2b0a4:	movw	r1, #10224	; 0x27f0
   2b0a8:	movt	r1, #5
   2b0ac:	bl	13688 <dcgettext@plt>
   2b0b0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b0b4:	b	2b02c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x171a0>
   2b0b8:	bl	13694 <__stack_chk_fail@plt>
   2b0bc:	push	{r4, r5, r6, r7, lr}
   2b0c0:	movw	r4, #1336	; 0x538
   2b0c4:	movt	r4, #10
   2b0c8:	sub	sp, sp, #12
   2b0cc:	mov	r5, r1
   2b0d0:	mov	r6, r2
   2b0d4:	ldr	r0, [r4, #16]
   2b0d8:	mov	r7, r3
   2b0dc:	cmp	r0, #0
   2b0e0:	bne	2b128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1729c>
   2b0e4:	ldr	r0, [r4, #12]
   2b0e8:	cmp	r0, #0
   2b0ec:	beq	2b120 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17294>
   2b0f0:	ldrd	r2, [sp, #40]	; 0x28
   2b0f4:	mov	r1, r6
   2b0f8:	mov	r0, r5
   2b0fc:	strd	r2, [sp]
   2b100:	mov	r2, #0
   2b104:	ldr	r3, [sp, #32]
   2b108:	bl	29d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x15ef0>
   2b10c:	ldrb	r3, [r5, #12]
   2b110:	cmp	r3, #0
   2b114:	streq	r7, [r5, #20]
   2b118:	moveq	r3, #1
   2b11c:	strbeq	r3, [r5, #12]
   2b120:	add	sp, sp, #12
   2b124:	pop	{r4, r5, r6, r7, pc}
   2b128:	mov	r2, #5
   2b12c:	movw	r1, #16180	; 0x3f34
   2b130:	mov	r0, #0
   2b134:	movt	r1, #5
   2b138:	bl	13688 <dcgettext@plt>
   2b13c:	ldr	r1, [r5, #4]
   2b140:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b144:	b	2b0e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17258>
   2b148:	movw	r0, #1336	; 0x538
   2b14c:	movt	r0, #10
   2b150:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b154:	mov	r8, r2
   2b158:	ldr	r2, [r0, #20]
   2b15c:	ldrd	r4, [sp, #32]
   2b160:	cmp	r2, #0
   2b164:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b168:	ldrb	r0, [r1, #12]
   2b16c:	ldr	r9, [r1, #4]
   2b170:	cmp	r0, #5
   2b174:	beq	2b24c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x173c0>
   2b178:	sub	r2, r0, #3
   2b17c:	cmp	r2, #1
   2b180:	movhi	sl, #0
   2b184:	bls	2b2cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17440>
   2b188:	sub	r1, r3, #3
   2b18c:	cmp	r3, #6
   2b190:	cmpne	r1, #1
   2b194:	bhi	2b1e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17354>
   2b198:	movw	r0, #15884	; 0x3e0c
   2b19c:	movw	r1, #1028	; 0x404
   2b1a0:	movt	r0, #5
   2b1a4:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2b1a8:	mov	r2, #5
   2b1ac:	movw	r1, #16312	; 0x3fb8
   2b1b0:	mov	r0, #0
   2b1b4:	movt	r1, #5
   2b1b8:	bl	13688 <dcgettext@plt>
   2b1bc:	mov	r1, r8
   2b1c0:	mov	r2, r9
   2b1c4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b1c8:	cmp	sl, #0
   2b1cc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b1d0:	movw	r1, #16364	; 0x3fec
   2b1d4:	mov	r0, #0
   2b1d8:	movt	r1, #5
   2b1dc:	b	2b238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x173ac>
   2b1e0:	cmp	r0, #6
   2b1e4:	cmpne	r2, #1
   2b1e8:	bhi	2b2c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17434>
   2b1ec:	cmp	r3, #5
   2b1f0:	beq	2b204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17378>
   2b1f4:	movw	r0, #15884	; 0x3e0c
   2b1f8:	movw	r1, #1038	; 0x40e
   2b1fc:	movt	r0, #5
   2b200:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2b204:	mov	r2, #5
   2b208:	movw	r1, #16396	; 0x400c
   2b20c:	mov	r0, #0
   2b210:	movt	r1, #5
   2b214:	bl	13688 <dcgettext@plt>
   2b218:	mov	r1, r8
   2b21c:	mov	r2, r9
   2b220:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b224:	cmp	sl, #0
   2b228:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b22c:	movw	r1, #16452	; 0x4044
   2b230:	movt	r1, #5
   2b234:	mov	r0, #0
   2b238:	mov	r2, #5
   2b23c:	bl	13688 <dcgettext@plt>
   2b240:	mov	r1, sl
   2b244:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b248:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b24c:	ldr	r2, [r1, #20]
   2b250:	sub	ip, r3, #3
   2b254:	cmp	r3, #6
   2b258:	cmpne	ip, #1
   2b25c:	ldrd	r6, [r1, #24]
   2b260:	ldr	r2, [r2, #4]
   2b264:	ldr	sl, [r2, #180]	; 0xb4
   2b268:	bls	2b1a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1731c>
   2b26c:	cmp	r0, #5
   2b270:	cmpeq	r3, #5
   2b274:	bne	2b348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174bc>
   2b278:	cmp	r5, r7
   2b27c:	cmpeq	r4, r6
   2b280:	bcc	2b310 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17484>
   2b284:	bls	2b2d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1744c>
   2b288:	mov	r2, #5
   2b28c:	movw	r1, #16576	; 0x40c0
   2b290:	mov	r0, #0
   2b294:	movt	r1, #5
   2b298:	bl	13688 <dcgettext@plt>
   2b29c:	mov	r1, r8
   2b2a0:	mov	r2, r9
   2b2a4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b2a8:	cmp	sl, #0
   2b2ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b2b0:	movw	r1, #16632	; 0x40f8
   2b2b4:	mov	r0, #0
   2b2b8:	movt	r1, #5
   2b2bc:	b	2b238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x173ac>
   2b2c0:	mov	r6, #0
   2b2c4:	mov	r7, #0
   2b2c8:	b	2b26c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x173e0>
   2b2cc:	ldr	r1, [r1, #20]
   2b2d0:	ldr	sl, [r1, #180]	; 0xb4
   2b2d4:	b	2b188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x172fc>
   2b2d8:	mov	r2, #5
   2b2dc:	movw	r1, #16672	; 0x4120
   2b2e0:	mov	r0, #0
   2b2e4:	movt	r1, #5
   2b2e8:	bl	13688 <dcgettext@plt>
   2b2ec:	mov	r1, r8
   2b2f0:	mov	r2, r9
   2b2f4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b2f8:	cmp	sl, #0
   2b2fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b300:	movw	r1, #16712	; 0x4148
   2b304:	mov	r0, #0
   2b308:	movt	r1, #5
   2b30c:	b	2b238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x173ac>
   2b310:	mov	r2, #5
   2b314:	movw	r1, #16480	; 0x4060
   2b318:	mov	r0, #0
   2b31c:	movt	r1, #5
   2b320:	bl	13688 <dcgettext@plt>
   2b324:	mov	r1, r8
   2b328:	mov	r2, r9
   2b32c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b330:	cmp	sl, #0
   2b334:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b338:	movw	r1, #16540	; 0x409c
   2b33c:	mov	r0, #0
   2b340:	movt	r1, #5
   2b344:	b	2b238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x173ac>
   2b348:	movw	r0, #15884	; 0x3e0c
   2b34c:	movw	r1, #1046	; 0x416
   2b350:	movt	r0, #5
   2b354:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2b358:	b	2b278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x173ec>
   2b35c:	push	{r3, r4, r5, lr}
   2b360:	movw	r4, #1088	; 0x440
   2b364:	movt	r4, #10
   2b368:	mov	r5, r0
   2b36c:	ldr	r0, [r4, #40]	; 0x28
   2b370:	cmp	r0, #0
   2b374:	beq	2b3a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1751c>
   2b378:	mov	r2, #1
   2b37c:	mov	r1, r5
   2b380:	mov	r3, r2
   2b384:	bl	139f4 <bfd_hash_lookup@plt>
   2b388:	cmp	r0, #0
   2b38c:	popne	{r3, r4, r5, pc}
   2b390:	movw	r1, #17664	; 0x4500
   2b394:	mov	r2, #5
   2b398:	movt	r1, #5
   2b39c:	bl	13688 <dcgettext@plt>
   2b3a0:	pop	{r3, r4, r5, lr}
   2b3a4:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b3a8:	mov	r0, #28
   2b3ac:	bl	137b4 <xmalloc@plt>
   2b3b0:	movw	r1, #13852	; 0x361c
   2b3b4:	mov	r2, #12
   2b3b8:	movt	r1, #1
   2b3bc:	mov	r3, #61	; 0x3d
   2b3c0:	str	r0, [r4, #40]	; 0x28
   2b3c4:	bl	138b0 <bfd_hash_table_init_n@plt>
   2b3c8:	cmp	r0, #0
   2b3cc:	beq	2b3d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1754c>
   2b3d0:	ldr	r0, [r4, #40]	; 0x28
   2b3d4:	b	2b378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x174ec>
   2b3d8:	mov	r2, #5
   2b3dc:	movw	r1, #17624	; 0x44d8
   2b3e0:	movt	r1, #5
   2b3e4:	bl	13688 <dcgettext@plt>
   2b3e8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b3ec:	b	2b3d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17544>
   2b3f0:	push	{r3, r4, r5, lr}
   2b3f4:	mov	r4, r0
   2b3f8:	ldr	r0, [r0, #48]	; 0x30
   2b3fc:	mov	r5, r1
   2b400:	cmp	r0, #0
   2b404:	beq	2b438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175ac>
   2b408:	mov	r2, #1
   2b40c:	mov	r1, r5
   2b410:	mov	r3, r2
   2b414:	bl	139f4 <bfd_hash_lookup@plt>
   2b418:	cmp	r0, #0
   2b41c:	popne	{r3, r4, r5, pc}
   2b420:	movw	r1, #17664	; 0x4500
   2b424:	mov	r2, #5
   2b428:	movt	r1, #5
   2b42c:	bl	13688 <dcgettext@plt>
   2b430:	pop	{r3, r4, r5, lr}
   2b434:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b438:	mov	r0, #28
   2b43c:	bl	137b4 <xmalloc@plt>
   2b440:	movw	r1, #13852	; 0x361c
   2b444:	mov	r2, #12
   2b448:	movt	r1, #1
   2b44c:	mov	r3, #61	; 0x3d
   2b450:	str	r0, [r4, #48]	; 0x30
   2b454:	bl	138b0 <bfd_hash_table_init_n@plt>
   2b458:	cmp	r0, #0
   2b45c:	beq	2b468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175dc>
   2b460:	ldr	r0, [r4, #48]	; 0x30
   2b464:	b	2b408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1757c>
   2b468:	mov	r2, #5
   2b46c:	movw	r1, #17624	; 0x44d8
   2b470:	movt	r1, #5
   2b474:	bl	13688 <dcgettext@plt>
   2b478:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b47c:	b	2b460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x175d4>
   2b480:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b484:	mov	r6, r0
   2b488:	ldr	r0, [r0, #48]	; 0x30
   2b48c:	mov	sl, r2
   2b490:	mov	r8, r3
   2b494:	mov	r7, r1
   2b498:	cmp	r0, #0
   2b49c:	ldrd	r4, [sp, #40]	; 0x28
   2b4a0:	ldr	r9, [sp, #48]	; 0x30
   2b4a4:	beq	2b4bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17630>
   2b4a8:	mov	r2, #0
   2b4ac:	mov	r3, r2
   2b4b0:	bl	139f4 <bfd_hash_lookup@plt>
   2b4b4:	cmp	r0, #0
   2b4b8:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b4bc:	movw	r3, #1336	; 0x538
   2b4c0:	movt	r3, #10
   2b4c4:	ldr	r3, [r3, #24]
   2b4c8:	cmp	r3, #0
   2b4cc:	bne	2b598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1770c>
   2b4d0:	movw	r6, #96	; 0x60
   2b4d4:	movt	r6, #10
   2b4d8:	ldr	fp, [r6, #16]
   2b4dc:	cmp	fp, #0
   2b4e0:	beq	2b5e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1775c>
   2b4e4:	mov	r0, r7
   2b4e8:	mov	r1, fp
   2b4ec:	bl	13490 <strcmp@plt>
   2b4f0:	cmp	r0, #0
   2b4f4:	beq	2b568 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x176dc>
   2b4f8:	mov	r0, fp
   2b4fc:	mov	r3, #0
   2b500:	str	r3, [r6, #20]
   2b504:	bl	13574 <free@plt>
   2b508:	mov	r0, r7
   2b50c:	bl	137e4 <xstrdup@plt>
   2b510:	ldr	r2, [r6, #20]
   2b514:	str	r0, [r6, #16]
   2b518:	cmp	r8, #0
   2b51c:	beq	2b5a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1771c>
   2b520:	cmp	r2, #4
   2b524:	bhi	2b578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x176ec>
   2b528:	cmp	r9, #0
   2b52c:	movwne	r1, #17700	; 0x4524
   2b530:	movweq	r1, #17736	; 0x4548
   2b534:	movtne	r1, #5
   2b538:	movteq	r1, #5
   2b53c:	movne	r0, #0
   2b540:	movne	r2, #5
   2b544:	moveq	r0, r9
   2b548:	moveq	r2, #5
   2b54c:	bl	13688 <dcgettext@plt>
   2b550:	strd	r4, [sp, #40]	; 0x28
   2b554:	str	r7, [sp, #48]	; 0x30
   2b558:	mov	r1, sl
   2b55c:	mov	r2, r8
   2b560:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b564:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b568:	ldr	r2, [r6, #20]
   2b56c:	add	r2, r2, #1
   2b570:	str	r2, [r6, #20]
   2b574:	b	2b518 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1768c>
   2b578:	cmp	r2, #5
   2b57c:	beq	2b5f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17764>
   2b580:	cmp	r9, #0
   2b584:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b588:	movw	r0, #17884	; 0x45dc
   2b58c:	movt	r0, #5
   2b590:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b594:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b598:	mov	r0, r6
   2b59c:	mov	r1, r7
   2b5a0:	bl	2b3f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17564>
   2b5a4:	b	2b4d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17644>
   2b5a8:	cmp	r2, #4
   2b5ac:	bls	2b610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17784>
   2b5b0:	cmp	r2, #5
   2b5b4:	bne	2b580 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x176f4>
   2b5b8:	cmp	r9, #0
   2b5bc:	movwne	r1, #17968	; 0x4630
   2b5c0:	movweq	r1, #18016	; 0x4660
   2b5c4:	movtne	r1, #5
   2b5c8:	movteq	r1, #5
   2b5cc:	movne	r0, r8
   2b5d0:	moveq	r0, r9
   2b5d4:	bl	13688 <dcgettext@plt>
   2b5d8:	mov	r1, sl
   2b5dc:	mov	r2, r7
   2b5e0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b5e4:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b5e8:	str	fp, [r6, #20]
   2b5ec:	b	2b508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1767c>
   2b5f0:	cmp	r9, #0
   2b5f4:	movwne	r1, #17780	; 0x4574
   2b5f8:	movweq	r1, #17828	; 0x45a4
   2b5fc:	movne	r0, #0
   2b600:	movtne	r1, #5
   2b604:	moveq	r0, r9
   2b608:	movteq	r1, #5
   2b60c:	b	2b54c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x176c0>
   2b610:	cmp	r9, #0
   2b614:	movwne	r1, #17888	; 0x45e0
   2b618:	movweq	r1, #17924	; 0x4604
   2b61c:	movne	r0, r8
   2b620:	movne	r2, #5
   2b624:	movtne	r1, #5
   2b628:	moveq	r0, r9
   2b62c:	moveq	r2, #5
   2b630:	movteq	r1, #5
   2b634:	b	2b5d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17748>
   2b638:	push	{r3, r4, r5, lr}
   2b63c:	movw	r4, #1088	; 0x440
   2b640:	movt	r4, #10
   2b644:	mov	r5, r0
   2b648:	ldr	r0, [r4, #44]	; 0x2c
   2b64c:	cmp	r0, #0
   2b650:	beq	2b684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x177f8>
   2b654:	mov	r2, #1
   2b658:	mov	r1, r5
   2b65c:	mov	r3, r2
   2b660:	bl	139f4 <bfd_hash_lookup@plt>
   2b664:	cmp	r0, #0
   2b668:	popne	{r3, r4, r5, pc}
   2b66c:	movw	r1, #17664	; 0x4500
   2b670:	mov	r2, #5
   2b674:	movt	r1, #5
   2b678:	bl	13688 <dcgettext@plt>
   2b67c:	pop	{r3, r4, r5, lr}
   2b680:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b684:	mov	r0, #28
   2b688:	bl	137b4 <xmalloc@plt>
   2b68c:	movw	r1, #13852	; 0x361c
   2b690:	mov	r2, #12
   2b694:	movt	r1, #1
   2b698:	mov	r3, #61	; 0x3d
   2b69c:	str	r0, [r4, #44]	; 0x2c
   2b6a0:	bl	138b0 <bfd_hash_table_init_n@plt>
   2b6a4:	cmp	r0, #0
   2b6a8:	beq	2b6b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17828>
   2b6ac:	ldr	r0, [r4, #44]	; 0x2c
   2b6b0:	b	2b654 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x177c8>
   2b6b4:	mov	r2, #5
   2b6b8:	movw	r1, #17624	; 0x44d8
   2b6bc:	movt	r1, #5
   2b6c0:	bl	13688 <dcgettext@plt>
   2b6c4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b6c8:	b	2b6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17820>
   2b6cc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b6d0:	movw	r7, #1088	; 0x440
   2b6d4:	movt	r7, #10
   2b6d8:	mov	r4, r0
   2b6dc:	ldrb	r3, [r7, #1]
   2b6e0:	ubfx	r3, r3, #3, #2
   2b6e4:	cmp	r3, #2
   2b6e8:	beq	2b888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179fc>
   2b6ec:	movw	r1, #8320	; 0x2080
   2b6f0:	mov	r0, r4
   2b6f4:	movt	r1, #7
   2b6f8:	bl	13cb8 <fopen64@plt>
   2b6fc:	subs	r6, r0, #0
   2b700:	beq	2b8a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17a18>
   2b704:	mov	r0, #28
   2b708:	bl	137b4 <xmalloc@plt>
   2b70c:	movw	r1, #13852	; 0x361c
   2b710:	mov	r2, #12
   2b714:	movt	r1, #1
   2b718:	str	r0, [r7, #36]	; 0x24
   2b71c:	bl	13d60 <bfd_hash_table_init@plt>
   2b720:	cmp	r0, #0
   2b724:	beq	2b870 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179e4>
   2b728:	mov	r0, #100	; 0x64
   2b72c:	movw	r5, #63264	; 0xf720
   2b730:	bl	137b4 <xmalloc@plt>
   2b734:	movt	r5, #9
   2b738:	mov	r9, #100	; 0x64
   2b73c:	mov	sl, #0
   2b740:	mov	r8, r0
   2b744:	mov	r0, r6
   2b748:	bl	13628 <_IO_getc@plt>
   2b74c:	mov	r4, r0
   2b750:	cmn	r4, #1
   2b754:	beq	2b794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17908>
   2b758:	uxtb	r3, r4
   2b75c:	lsl	r3, r3, #1
   2b760:	ldrh	r3, [r5, r3]
   2b764:	tst	r3, #64	; 0x40
   2b768:	beq	2b7c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17938>
   2b76c:	mov	r0, r6
   2b770:	bl	13628 <_IO_getc@plt>
   2b774:	uxtb	r3, r0
   2b778:	mov	r4, r0
   2b77c:	lsl	r3, r3, #1
   2b780:	ldrh	r3, [r5, r3]
   2b784:	tst	r3, #64	; 0x40
   2b788:	bne	2b76c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x178e0>
   2b78c:	cmn	r0, #1
   2b790:	bne	2b7c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17938>
   2b794:	ldrb	r3, [r7, #1]
   2b798:	tst	r3, #24
   2b79c:	bne	2b854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x179c8>
   2b7a0:	mov	r0, r8
   2b7a4:	bl	13574 <free@plt>
   2b7a8:	ldrb	r3, [r7, #1]
   2b7ac:	mov	r0, r6
   2b7b0:	mov	r2, #2
   2b7b4:	bfi	r3, r2, #3, #2
   2b7b8:	strb	r3, [r7, #1]
   2b7bc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b7c0:	b	13b80 <fclose@plt>
   2b7c4:	mov	fp, #0
   2b7c8:	b	2b7f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17968>
   2b7cc:	mov	r0, r6
   2b7d0:	bl	13628 <_IO_getc@plt>
   2b7d4:	uxtb	r3, r0
   2b7d8:	mov	r4, r0
   2b7dc:	lsl	r3, r3, #1
   2b7e0:	ldrh	r3, [r5, r3]
   2b7e4:	tst	r3, #64	; 0x40
   2b7e8:	bne	2b81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17990>
   2b7ec:	cmn	r0, #1
   2b7f0:	beq	2b81c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17990>
   2b7f4:	strb	r4, [r8, fp]
   2b7f8:	add	fp, fp, #1
   2b7fc:	cmp	fp, r9
   2b800:	bcc	2b7cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17940>
   2b804:	lsl	r9, r9, #1
   2b808:	mov	r0, r8
   2b80c:	mov	r1, r9
   2b810:	bl	13724 <xrealloc@plt>
   2b814:	mov	r8, r0
   2b818:	b	2b7cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17940>
   2b81c:	mov	r2, #1
   2b820:	strb	sl, [r8, fp]
   2b824:	mov	r3, r2
   2b828:	ldr	r0, [r7, #36]	; 0x24
   2b82c:	mov	r1, r8
   2b830:	bl	139f4 <bfd_hash_lookup@plt>
   2b834:	cmp	r0, #0
   2b838:	bne	2b750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x178c4>
   2b83c:	mov	r2, #5
   2b840:	movw	r1, #18132	; 0x46d4
   2b844:	movt	r1, #5
   2b848:	bl	13688 <dcgettext@plt>
   2b84c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b850:	b	2b750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x178c4>
   2b854:	mov	r2, #5
   2b858:	movw	r1, #18180	; 0x4704
   2b85c:	mov	r0, #0
   2b860:	movt	r1, #5
   2b864:	bl	13688 <dcgettext@plt>
   2b868:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b86c:	b	2b7a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17914>
   2b870:	mov	r2, #5
   2b874:	movw	r1, #17624	; 0x44d8
   2b878:	movt	r1, #5
   2b87c:	bl	13688 <dcgettext@plt>
   2b880:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b884:	b	2b728 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1789c>
   2b888:	mov	r2, #5
   2b88c:	movw	r1, #18072	; 0x4698
   2b890:	mov	r0, #0
   2b894:	movt	r1, #5
   2b898:	bl	13688 <dcgettext@plt>
   2b89c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b8a0:	b	2b6ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17860>
   2b8a4:	mov	r0, #1
   2b8a8:	bl	137c0 <bfd_set_error@plt>
   2b8ac:	mov	r1, r4
   2b8b0:	movw	r0, #18116	; 0x46c4
   2b8b4:	movt	r0, #5
   2b8b8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b8bc:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2b8c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b8c4:	movw	r4, #63248	; 0xf710
   2b8c8:	movt	r4, #9
   2b8cc:	ldr	r3, [r0, #4]
   2b8d0:	sub	sp, sp, #16
   2b8d4:	mov	r5, r0
   2b8d8:	ldr	r2, [r4]
   2b8dc:	sub	r3, r3, #5
   2b8e0:	str	r2, [sp, #12]
   2b8e4:	cmp	r3, #7
   2b8e8:	ldrls	pc, [pc, r3, lsl #2]
   2b8ec:	b	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2b8f0:	andeq	fp, r2, r0, ror #20
   2b8f4:	andeq	fp, r2, r0, asr #19
   2b8f8:	andeq	fp, r2, r0, asr #19
   2b8fc:	andeq	fp, r2, r8, lsr #22
   2b900:	andeq	fp, r2, r0, lsl r9
   2b904:	andeq	fp, r2, r0, asr #19
   2b908:	andeq	fp, r2, r0, asr #19
   2b90c:	ldrdeq	fp, [r2], -r8
   2b910:	ldr	r6, [r0, #40]	; 0x28
   2b914:	movw	r7, #1088	; 0x440
   2b918:	movt	r7, #10
   2b91c:	ldr	r2, [r6, #180]	; 0xb4
   2b920:	ldr	r3, [r7, #52]	; 0x34
   2b924:	cmp	r2, r3
   2b928:	beq	2b93c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ab0>
   2b92c:	movw	r0, #18260	; 0x4754
   2b930:	mov	r1, #197	; 0xc5
   2b934:	movt	r0, #5
   2b938:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2b93c:	ldr	r2, [r6, #20]
   2b940:	tst	r2, #256	; 0x100
   2b944:	bne	2b95c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ad0>
   2b948:	movw	r3, #1026	; 0x402
   2b94c:	and	r3, r2, r3
   2b950:	movw	r2, #1026	; 0x402
   2b954:	cmp	r3, r2
   2b958:	bne	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2b95c:	mov	r1, r6
   2b960:	ldr	r0, [r7, #52]	; 0x34
   2b964:	bl	13d84 <bfd_new_link_order@plt>
   2b968:	subs	r6, r0, #0
   2b96c:	beq	2be24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f98>
   2b970:	ldrd	r2, [r5, #48]	; 0x30
   2b974:	ldr	r0, [r5, #12]
   2b978:	strd	r2, [r6, #8]
   2b97c:	bl	136a0 <bfd_get_reloc_size@plt>
   2b980:	mov	r3, #0
   2b984:	str	r3, [r6, #20]
   2b988:	str	r0, [r6, #16]
   2b98c:	mov	r0, #16
   2b990:	bl	137b4 <xmalloc@plt>
   2b994:	str	r0, [r6, #24]
   2b998:	ldr	r1, [r5, #20]
   2b99c:	ldrd	r2, [r5, #32]
   2b9a0:	ldr	ip, [r5, #8]
   2b9a4:	cmp	r1, #0
   2b9a8:	strd	r2, [r0, #8]
   2b9ac:	movne	r3, #4
   2b9b0:	str	ip, [r0]
   2b9b4:	strne	r3, [r6, #4]
   2b9b8:	beq	2bdd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f48>
   2b9bc:	str	r1, [r0, #4]
   2b9c0:	ldr	r2, [sp, #12]
   2b9c4:	ldr	r3, [r4]
   2b9c8:	cmp	r2, r3
   2b9cc:	bne	2be6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17fe0>
   2b9d0:	add	sp, sp, #16
   2b9d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b9d8:	ldr	r6, [r0, #24]
   2b9dc:	movw	r7, #1088	; 0x440
   2b9e0:	movt	r7, #10
   2b9e4:	ldr	r2, [r6, #180]	; 0xb4
   2b9e8:	ldr	r3, [r7, #52]	; 0x34
   2b9ec:	cmp	r2, r3
   2b9f0:	beq	2ba04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b78>
   2b9f4:	movw	r0, #18260	; 0x4754
   2b9f8:	movw	r1, #287	; 0x11f
   2b9fc:	movt	r0, #5
   2ba00:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2ba04:	ldr	r2, [r6, #20]
   2ba08:	tst	r2, #256	; 0x100
   2ba0c:	bne	2ba24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b98>
   2ba10:	movw	r3, #1026	; 0x402
   2ba14:	and	r3, r2, r3
   2ba18:	movw	r2, #1026	; 0x402
   2ba1c:	cmp	r3, r2
   2ba20:	bne	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2ba24:	ldr	r0, [r7, #52]	; 0x34
   2ba28:	mov	r1, r6
   2ba2c:	bl	13d84 <bfd_new_link_order@plt>
   2ba30:	mov	r3, #2
   2ba34:	str	r3, [r0, #4]
   2ba38:	ldrd	r2, [r5, #16]
   2ba3c:	strd	r2, [r0, #16]
   2ba40:	ldrd	r2, [r5, #8]
   2ba44:	strd	r2, [r0, #8]
   2ba48:	ldr	r3, [r5, #28]
   2ba4c:	add	r2, r3, #4
   2ba50:	str	r2, [r0, #28]
   2ba54:	ldr	r3, [r3]
   2ba58:	str	r3, [r0, #24]
   2ba5c:	b	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2ba60:	ldr	r5, [r0, #8]
   2ba64:	ldrh	r3, [r5, #24]
   2ba68:	ubfx	r3, r3, #7, #3
   2ba6c:	cmp	r3, #4
   2ba70:	beq	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2ba74:	ldr	r3, [r5, #20]
   2ba78:	tst	r3, #32768	; 0x8000
   2ba7c:	bne	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2ba80:	ldr	r6, [r5, #88]	; 0x58
   2ba84:	movw	r7, #1088	; 0x440
   2ba88:	movt	r7, #10
   2ba8c:	ldr	r2, [r6, #180]	; 0xb4
   2ba90:	ldr	r3, [r7, #52]	; 0x34
   2ba94:	cmp	r2, r3
   2ba98:	beq	2baac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17c20>
   2ba9c:	movw	r0, #18260	; 0x4754
   2baa0:	mov	r1, #248	; 0xf8
   2baa4:	movt	r0, #5
   2baa8:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2baac:	ldr	r2, [r6, #20]
   2bab0:	tst	r2, #256	; 0x100
   2bab4:	bne	2bacc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17c40>
   2bab8:	movw	r3, #1026	; 0x402
   2babc:	and	r3, r2, r3
   2bac0:	movw	r2, #1026	; 0x402
   2bac4:	cmp	r3, r2
   2bac8:	bne	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2bacc:	ldr	r0, [r7, #52]	; 0x34
   2bad0:	mov	r1, r6
   2bad4:	bl	13d84 <bfd_new_link_order@plt>
   2bad8:	ldr	r3, [r5, #20]
   2badc:	and	r3, r3, #8704	; 0x2200
   2bae0:	cmp	r3, #512	; 0x200
   2bae4:	mov	r8, r0
   2bae8:	beq	2bd6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ee0>
   2baec:	str	r5, [r0, #24]
   2baf0:	mov	r2, #1
   2baf4:	ldr	r3, [r5, #88]	; 0x58
   2baf8:	str	r2, [r0, #4]
   2bafc:	cmp	r3, r6
   2bb00:	beq	2bb14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17c88>
   2bb04:	movw	r0, #18260	; 0x4754
   2bb08:	movw	r1, #271	; 0x10f
   2bb0c:	movt	r0, #5
   2bb10:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2bb14:	ldrd	r6, [r5, #48]	; 0x30
   2bb18:	ldrd	r2, [r5, #80]	; 0x50
   2bb1c:	strd	r6, [r8, #16]
   2bb20:	strd	r2, [r8, #8]
   2bb24:	b	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2bb28:	ldr	r8, [r0, #24]
   2bb2c:	movw	r7, #1088	; 0x440
   2bb30:	movt	r7, #10
   2bb34:	ldr	r2, [r8, #180]	; 0xb4
   2bb38:	ldr	r3, [r7, #52]	; 0x34
   2bb3c:	cmp	r2, r3
   2bb40:	beq	2bb54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17cc8>
   2bb44:	movw	r0, #18260	; 0x4754
   2bb48:	mov	r1, #51	; 0x33
   2bb4c:	movt	r0, #5
   2bb50:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2bb54:	ldr	r2, [r8, #20]
   2bb58:	tst	r2, #256	; 0x100
   2bb5c:	bne	2bb74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ce8>
   2bb60:	movw	r3, #1026	; 0x402
   2bb64:	and	r3, r2, r3
   2bb68:	movw	r2, #1026	; 0x402
   2bb6c:	cmp	r3, r2
   2bb70:	bne	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2bb74:	ldr	r0, [r7, #52]	; 0x34
   2bb78:	mov	r1, r8
   2bb7c:	bl	13d84 <bfd_new_link_order@plt>
   2bb80:	subs	r6, r0, #0
   2bb84:	beq	2be3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17fb0>
   2bb88:	mov	r3, #2
   2bb8c:	str	r3, [r6, #4]
   2bb90:	ldrd	r2, [r5, #32]
   2bb94:	mov	r0, #8
   2bb98:	strd	r2, [r6, #8]
   2bb9c:	bl	137b4 <xmalloc@plt>
   2bba0:	str	r0, [r6, #28]
   2bba4:	ldr	r3, [r7, #52]	; 0x34
   2bba8:	ldr	r9, [r5, #16]
   2bbac:	ldr	sl, [r5, #20]
   2bbb0:	ldr	r3, [r3, #4]
   2bbb4:	ldr	r3, [r3, #8]
   2bbb8:	cmp	r3, #1
   2bbbc:	bls	2bc70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17de4>
   2bbc0:	movw	r3, #1244	; 0x4dc
   2bbc4:	movt	r3, #10
   2bbc8:	ldr	r3, [r3, #44]	; 0x2c
   2bbcc:	cmp	r3, #1
   2bbd0:	beq	2bc70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17de4>
   2bbd4:	cmp	r3, #2
   2bbd8:	beq	2bc24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17d98>
   2bbdc:	cmp	r3, #0
   2bbe0:	bne	2bc70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17de4>
   2bbe4:	movw	r3, #65504	; 0xffe0
   2bbe8:	movt	r3, #9
   2bbec:	ldr	r3, [r3]
   2bbf0:	cmp	r3, #0
   2bbf4:	bne	2bc08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17d7c>
   2bbf8:	b	2bc70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17de4>
   2bbfc:	ldr	r3, [r3, #24]
   2bc00:	cmp	r3, #0
   2bc04:	beq	2bc70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17de4>
   2bc08:	ldr	r2, [r3, #16]
   2bc0c:	cmp	r2, #0
   2bc10:	beq	2bbfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17d70>
   2bc14:	ldr	r3, [r2, #4]
   2bc18:	ldr	r3, [r3, #8]
   2bc1c:	cmp	r3, #1
   2bc20:	bne	2bc70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17de4>
   2bc24:	ldr	r3, [r5, #8]
   2bc28:	sub	r3, r3, #280	; 0x118
   2bc2c:	sub	r3, r3, #2
   2bc30:	cmp	r3, #4
   2bc34:	ldrls	pc, [pc, r3, lsl #2]
   2bc38:	b	2be54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17fc8>
   2bc3c:			; <UNDEFINED> instruction: 0x0002bdb0
   2bc40:			; <UNDEFINED> instruction: 0x0002bdb0
   2bc44:	andeq	fp, r2, r0, asr ip
   2bc48:	andeq	fp, r2, ip, lsl #27
   2bc4c:	andeq	fp, r2, r0, ror ip
   2bc50:	mov	r0, r9
   2bc54:	mov	r1, sl
   2bc58:	add	r2, sp, #4
   2bc5c:	bl	13a6c <bfd_putl32@plt>
   2bc60:	add	r0, sp, #4
   2bc64:	bl	13c70 <bfd_getb32@plt>
   2bc68:	mov	r9, r0
   2bc6c:	mov	sl, r1
   2bc70:	ldr	r2, [r8, #180]	; 0xb4
   2bc74:	ldr	r3, [r7, #52]	; 0x34
   2bc78:	cmp	r2, r3
   2bc7c:	beq	2bc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e04>
   2bc80:	movw	r0, #18260	; 0x4754
   2bc84:	mov	r1, #139	; 0x8b
   2bc88:	movt	r0, #5
   2bc8c:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2bc90:	ldr	r3, [r5, #8]
   2bc94:	sub	r3, r3, #280	; 0x118
   2bc98:	sub	r3, r3, #2
   2bc9c:	cmp	r3, #4
   2bca0:	ldrls	pc, [pc, r3, lsl #2]
   2bca4:	b	2be0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17f80>
   2bca8:	andeq	fp, r2, ip, lsr sp
   2bcac:	andeq	fp, r2, ip, lsr sp
   2bcb0:	andeq	fp, r2, ip, lsl #26
   2bcb4:	ldrdeq	fp, [r2], -ip
   2bcb8:			; <UNDEFINED> instruction: 0x0002bcbc
   2bcbc:	ldr	r0, [r6, #28]
   2bcc0:	mov	r1, #1
   2bcc4:	mov	r2, #1
   2bcc8:	mov	r3, #0
   2bccc:	strb	r9, [r0]
   2bcd0:	strd	r2, [r6, #16]
   2bcd4:	str	r1, [r6, #24]
   2bcd8:	b	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2bcdc:	ldr	r3, [r7, #52]	; 0x34
   2bce0:	mov	r1, sl
   2bce4:	ldr	r2, [r6, #28]
   2bce8:	mov	r0, r9
   2bcec:	ldr	r3, [r3, #4]
   2bcf0:	ldr	r3, [r3, #60]	; 0x3c
   2bcf4:	blx	r3
   2bcf8:	mov	r2, #2
   2bcfc:	mov	r3, #0
   2bd00:	mov	r1, #2
   2bd04:	strd	r2, [r6, #16]
   2bd08:	b	2bcd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e48>
   2bd0c:	ldr	r3, [r7, #52]	; 0x34
   2bd10:	mov	r1, sl
   2bd14:	ldr	r2, [r6, #28]
   2bd18:	mov	r0, r9
   2bd1c:	ldr	r3, [r3, #4]
   2bd20:	ldr	r3, [r3, #48]	; 0x30
   2bd24:	blx	r3
   2bd28:	mov	r2, #4
   2bd2c:	mov	r3, #0
   2bd30:	mov	r1, #4
   2bd34:	strd	r2, [r6, #16]
   2bd38:	b	2bcd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e48>
   2bd3c:	ldr	r3, [r7, #52]	; 0x34
   2bd40:	mov	r1, sl
   2bd44:	ldr	r2, [r6, #28]
   2bd48:	mov	r0, r9
   2bd4c:	ldr	r3, [r3, #4]
   2bd50:	ldr	r3, [r3, #36]	; 0x24
   2bd54:	blx	r3
   2bd58:	mov	r2, #8
   2bd5c:	mov	r3, #0
   2bd60:	mov	r1, #8
   2bd64:	strd	r2, [r6, #16]
   2bd68:	b	2bcd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17e48>
   2bd6c:	movw	r3, #21440	; 0x53c0
   2bd70:	mov	r2, #2
   2bd74:	movt	r3, #5
   2bd78:	str	r2, [r0, #4]
   2bd7c:	str	r3, [r0, #28]
   2bd80:	mov	r3, #1
   2bd84:	str	r3, [r0, #24]
   2bd88:	b	2bb14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17c88>
   2bd8c:	mov	r0, r9
   2bd90:	mov	r1, sl
   2bd94:	add	r2, sp, #4
   2bd98:	bl	13c88 <bfd_putl16@plt>
   2bd9c:	add	r0, sp, #4
   2bda0:	bl	13a84 <bfd_getb16@plt>
   2bda4:	mov	r9, r0
   2bda8:	mov	sl, r1
   2bdac:	b	2bc70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17de4>
   2bdb0:	mov	r0, r9
   2bdb4:	mov	r1, sl
   2bdb8:	add	r2, sp, #4
   2bdbc:	bl	13bb0 <bfd_putl64@plt>
   2bdc0:	add	r0, sp, #4
   2bdc4:	bl	136e8 <bfd_getb64@plt>
   2bdc8:	mov	r9, r0
   2bdcc:	mov	sl, r1
   2bdd0:	b	2bc70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17de4>
   2bdd4:	ldr	r1, [r5, #16]
   2bdd8:	mov	r5, #3
   2bddc:	ldr	ip, [r7, #52]	; 0x34
   2bde0:	str	r5, [r6, #4]
   2bde4:	ldr	r5, [r1, #180]	; 0xb4
   2bde8:	cmp	r5, ip
   2bdec:	beq	2b9bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b30>
   2bdf0:	ldr	ip, [r1, #88]	; 0x58
   2bdf4:	str	ip, [r0, #4]
   2bdf8:	ldrd	r6, [r1, #80]	; 0x50
   2bdfc:	adds	r2, r2, r6
   2be00:	adc	r3, r3, r7
   2be04:	strd	r2, [r0, #8]
   2be08:	b	2b9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17b34>
   2be0c:	movw	r0, #18260	; 0x4754
   2be10:	movw	r2, #18240	; 0x4740
   2be14:	movt	r0, #5
   2be18:	movt	r2, #5
   2be1c:	mov	r1, #182	; 0xb6
   2be20:	bl	303e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c558>
   2be24:	mov	r2, #5
   2be28:	movw	r1, #18272	; 0x4760
   2be2c:	movt	r1, #5
   2be30:	bl	13688 <dcgettext@plt>
   2be34:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2be38:	b	2b970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17ae4>
   2be3c:	mov	r2, #5
   2be40:	movw	r1, #18272	; 0x4760
   2be44:	movt	r1, #5
   2be48:	bl	13688 <dcgettext@plt>
   2be4c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2be50:	b	2bb88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x17cfc>
   2be54:	movw	r0, #18260	; 0x4754
   2be58:	movw	r2, #18240	; 0x4740
   2be5c:	movt	r0, #5
   2be60:	movt	r2, #5
   2be64:	mov	r1, #134	; 0x86
   2be68:	bl	303e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c558>
   2be6c:	bl	13694 <__stack_chk_fail@plt>
   2be70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2be74:	movw	r4, #63248	; 0xf710
   2be78:	movt	r4, #9
   2be7c:	sub	sp, sp, #100	; 0x64
   2be80:	mov	r0, #0
   2be84:	movw	r5, #1336	; 0x538
   2be88:	ldr	r3, [r4]
   2be8c:	movt	r5, #10
   2be90:	str	r4, [sp, #84]	; 0x54
   2be94:	str	r5, [sp, #64]	; 0x40
   2be98:	str	r3, [sp, #92]	; 0x5c
   2be9c:	bl	137c0 <bfd_set_error@plt>
   2bea0:	bl	23c98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfe0c>
   2bea4:	movw	r0, #47296	; 0xb8c0
   2bea8:	movt	r0, #2
   2beac:	bl	20f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0b4>
   2beb0:	ldr	r3, [r5, #84]	; 0x54
   2beb4:	cmn	r3, #1
   2beb8:	beq	2c474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185e8>
   2bebc:	movw	ip, #1088	; 0x440
   2bec0:	movt	ip, #10
   2bec4:	str	ip, [sp, #44]	; 0x2c
   2bec8:	ldr	r4, [ip, #52]	; 0x34
   2becc:	ldr	r5, [r4, #108]	; 0x6c
   2bed0:	ldr	ip, [r4, #100]	; 0x64
   2bed4:	str	r4, [sp, #48]	; 0x30
   2bed8:	cmp	r5, #0
   2bedc:	cmpne	ip, #0
   2bee0:	str	r5, [sp, #72]	; 0x48
   2bee4:	str	ip, [sp, #52]	; 0x34
   2bee8:	beq	2c340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184b4>
   2beec:	movw	r4, #1336	; 0x538
   2bef0:	movw	r9, #63264	; 0xf720
   2bef4:	movt	r4, #10
   2bef8:	movt	r9, #9
   2befc:	str	r4, [sp, #76]	; 0x4c
   2bf00:	str	r9, [sp, #80]	; 0x50
   2bf04:	ldr	r5, [sp, #52]	; 0x34
   2bf08:	ldr	r1, [sp, #52]	; 0x34
   2bf0c:	ldr	r6, [r5, #192]	; 0xc0
   2bf10:	mov	r5, #0
   2bf14:	ldrd	r0, [r1, #32]
   2bf18:	cmp	r6, r5
   2bf1c:	str	r5, [sp, #88]	; 0x58
   2bf20:	strd	r0, [sp, #56]	; 0x38
   2bf24:	beq	2c300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18474>
   2bf28:	mov	r0, #0
   2bf2c:	mov	r1, #0
   2bf30:	mov	r4, r5
   2bf34:	strd	r0, [sp, #32]
   2bf38:	ldr	r7, [sp, #52]	; 0x34
   2bf3c:	mov	fp, r5
   2bf40:	ldr	sl, [sp, #80]	; 0x50
   2bf44:	b	2bfb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18128>
   2bf48:	bl	13a24 <strlen@plt>
   2bf4c:	sub	r0, r0, #3
   2bf50:	add	r2, r8, r0
   2bf54:	ldrb	r3, [r8, r0]
   2bf58:	cmp	r3, #115	; 0x73
   2bf5c:	bne	2c080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181f4>
   2bf60:	ldrb	r3, [r2, #1]
   2bf64:	cmp	r3, #116	; 0x74
   2bf68:	bne	2c080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181f4>
   2bf6c:	ldrb	r3, [r2, #2]
   2bf70:	cmp	r3, #114	; 0x72
   2bf74:	bne	2c080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181f4>
   2bf78:	ldrb	r3, [r2, #3]
   2bf7c:	cmp	r3, #0
   2bf80:	bne	2c080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181f4>
   2bf84:	ldr	ip, [sp, #40]	; 0x28
   2bf88:	ldrd	r2, [sp, #32]
   2bf8c:	ldrd	r0, [sp, #24]
   2bf90:	add	r5, ip, r5
   2bf94:	adds	r0, r0, r2
   2bf98:	adc	r1, r1, r3
   2bf9c:	strd	r0, [sp, #32]
   2bfa0:	ldr	r3, [r6]
   2bfa4:	cmp	r3, #0
   2bfa8:	beq	2c300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18474>
   2bfac:	mov	fp, r6
   2bfb0:	mov	r6, r3
   2bfb4:	ldr	r9, [r6, #4]
   2bfb8:	ldr	ip, [sp, #44]	; 0x2c
   2bfbc:	cmp	r9, #1
   2bfc0:	beq	2c380 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184f4>
   2bfc4:	ldrb	r3, [ip]
   2bfc8:	and	r3, r3, #3
   2bfcc:	cmp	r3, #2
   2bfd0:	beq	2c3e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18558>
   2bfd4:	mov	r9, #0
   2bfd8:	mov	r0, #0
   2bfdc:	mov	r1, #0
   2bfe0:	str	r9, [sp, #40]	; 0x28
   2bfe4:	strd	r0, [sp, #24]
   2bfe8:	cmp	fp, #0
   2bfec:	beq	2c3c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18534>
   2bff0:	ldr	ip, [sp, #64]	; 0x40
   2bff4:	add	r4, r9, r4
   2bff8:	ldr	r3, [ip, #84]	; 0x54
   2bffc:	cmp	r4, r3
   2c000:	bcs	2c048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181bc>
   2c004:	ldr	lr, [sp, #40]	; 0x28
   2c008:	add	ip, lr, r5
   2c00c:	cmp	r3, ip
   2c010:	bls	2c048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x181bc>
   2c014:	ldr	r1, [sp, #76]	; 0x4c
   2c018:	ldrd	r2, [sp, #32]
   2c01c:	ldrd	r0, [r1, #88]	; 0x58
   2c020:	strd	r0, [sp, #8]
   2c024:	ldrd	r0, [sp, #24]
   2c028:	adds	r0, r0, r2
   2c02c:	adc	r1, r1, r3
   2c030:	ldrd	r2, [sp, #8]
   2c034:	cmp	r1, r3
   2c038:	cmpeq	r0, r2
   2c03c:	strdcc	r0, [sp, #32]
   2c040:	movcc	r5, ip
   2c044:	bcc	2bfa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18114>
   2c048:	ldr	r8, [r7]
   2c04c:	movw	r1, #18308	; 0x4784
   2c050:	mov	r2, #5
   2c054:	movt	r1, #5
   2c058:	mov	r0, r8
   2c05c:	bl	13e08 <strncmp@plt>
   2c060:	cmp	r0, #0
   2c064:	mov	r0, r8
   2c068:	beq	2bf48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x180bc>
   2c06c:	movw	r1, #18316	; 0x478c
   2c070:	movt	r1, #5
   2c074:	bl	13490 <strcmp@plt>
   2c078:	cmp	r0, #0
   2c07c:	beq	2bf84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x180f8>
   2c080:	ldr	r5, [sp, #52]	; 0x34
   2c084:	ldr	r4, [r5]
   2c088:	mov	r0, r4
   2c08c:	bl	13a24 <strlen@plt>
   2c090:	add	r2, r0, #1
   2c094:	mov	r8, r0
   2c098:	str	r2, [sp, #20]
   2c09c:	mov	r0, r2
   2c0a0:	bl	137b4 <xmalloc@plt>
   2c0a4:	mov	r1, r4
   2c0a8:	ldr	r2, [sp, #20]
   2c0ac:	mov	r5, r0
   2c0b0:	bl	135c8 <memcpy@plt>
   2c0b4:	cmp	r8, #0
   2c0b8:	beq	2c0fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18270>
   2c0bc:	sub	r3, r8, #1
   2c0c0:	ldrb	r2, [r5, r3]
   2c0c4:	lsl	r2, r2, #1
   2c0c8:	ldrh	r2, [sl, r2]
   2c0cc:	tst	r2, #4
   2c0d0:	bne	2c0f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18268>
   2c0d4:	b	2c40c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18580>
   2c0d8:	sub	r2, r3, #1
   2c0dc:	ldrb	r1, [r5, r2]
   2c0e0:	lsl	r1, r1, #1
   2c0e4:	ldrh	r1, [sl, r1]
   2c0e8:	tst	r1, #4
   2c0ec:	beq	2c410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18584>
   2c0f0:	mov	r3, r2
   2c0f4:	cmp	r3, #0
   2c0f8:	bne	2c0d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1824c>
   2c0fc:	ldr	ip, [sp, #48]	; 0x30
   2c100:	ldr	r3, [ip, #4]
   2c104:	ldr	r3, [r3, #4]
   2c108:	cmp	r3, #2
   2c10c:	cmpne	r3, #4
   2c110:	bne	2c160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x182d4>
   2c114:	mov	r0, r5
   2c118:	bl	13a24 <strlen@plt>
   2c11c:	cmp	r0, #5
   2c120:	bls	2c160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x182d4>
   2c124:	movw	r1, #18308	; 0x4784
   2c128:	mov	r0, r4
   2c12c:	movt	r1, #5
   2c130:	mov	r2, #5
   2c134:	bl	13e08 <strncmp@plt>
   2c138:	cmp	r0, #0
   2c13c:	beq	2c450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185c4>
   2c140:	movw	r1, #18332	; 0x479c
   2c144:	mov	r0, r4
   2c148:	movt	r1, #5
   2c14c:	bl	13490 <strcmp@plt>
   2c150:	cmp	r0, #0
   2c154:	movne	r3, #0
   2c158:	strbne	r3, [r5, #5]
   2c15c:	beq	2c450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185c4>
   2c160:	ldr	r0, [sp, #48]	; 0x30
   2c164:	mov	r1, r5
   2c168:	add	r2, sp, #88	; 0x58
   2c16c:	bl	13b08 <bfd_get_unique_section_name@plt>
   2c170:	subs	r4, r0, #0
   2c174:	beq	2c430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185a4>
   2c178:	ldr	r0, [sp, #48]	; 0x30
   2c17c:	mov	r1, r4
   2c180:	bl	13ba4 <bfd_make_section_anyway@plt>
   2c184:	subs	r8, r0, #0
   2c188:	beq	2c430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185a4>
   2c18c:	ldr	ip, [sp, #44]	; 0x2c
   2c190:	mov	r2, #1
   2c194:	mov	r1, r4
   2c198:	mov	lr, #0
   2c19c:	mov	r3, r2
   2c1a0:	ldr	r0, [ip, #32]
   2c1a4:	str	lr, [sp]
   2c1a8:	bl	13880 <bfd_link_hash_lookup@plt>
   2c1ac:	subs	r4, r0, #0
   2c1b0:	beq	2c430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x185a4>
   2c1b4:	mov	r0, r5
   2c1b8:	bl	13574 <free@plt>
   2c1bc:	str	r8, [r4, #20]
   2c1c0:	mov	r0, #0
   2c1c4:	mov	r1, #0
   2c1c8:	strd	r0, [r4, #24]
   2c1cc:	mov	r1, #3
   2c1d0:	ldrd	r2, [r7, #32]
   2c1d4:	ldr	r0, [sp, #48]	; 0x30
   2c1d8:	ldr	lr, [r7, #20]
   2c1dc:	ldr	ip, [r7, #92]	; 0x5c
   2c1e0:	strb	r1, [r4, #12]
   2c1e4:	mov	r1, r7
   2c1e8:	ldrd	r4, [r7, #40]	; 0x28
   2c1ec:	strd	r2, [r8, #32]
   2c1f0:	mov	r2, #0
   2c1f4:	ldr	r3, [r0, #4]
   2c1f8:	str	lr, [r8, #20]
   2c1fc:	ldrb	lr, [r7, #24]
   2c200:	ldr	r3, [r3, #180]	; 0xb4
   2c204:	strd	r4, [r8, #40]	; 0x28
   2c208:	ldrb	r4, [r8, #24]
   2c20c:	str	r3, [sp, #68]	; 0x44
   2c210:	mov	r3, #0
   2c214:	strd	r2, [r8, #48]	; 0x30
   2c218:	mov	r2, r0
   2c21c:	strb	r4, [sp, #32]
   2c220:	mov	r3, r8
   2c224:	ldrd	r4, [r7, #80]	; 0x50
   2c228:	str	r8, [r8, #88]	; 0x58
   2c22c:	str	ip, [r8, #92]	; 0x5c
   2c230:	strd	r4, [r8, #80]	; 0x50
   2c234:	ldrb	r5, [sp, #32]
   2c238:	ldr	r4, [sp, #68]	; 0x44
   2c23c:	bfi	r5, lr, #0, #1
   2c240:	mov	lr, #0
   2c244:	strb	r5, [r8, #24]
   2c248:	str	lr, [r8, #100]	; 0x64
   2c24c:	str	lr, [r8, #104]	; 0x68
   2c250:	blx	r4
   2c254:	ldr	r2, [r7, #196]	; 0xc4
   2c258:	mov	r3, #0
   2c25c:	ldrd	r0, [r7, #48]	; 0x30
   2c260:	mov	ip, r6
   2c264:	str	r6, [r8, #192]	; 0xc0
   2c268:	str	r2, [r8, #196]	; 0xc4
   2c26c:	str	fp, [r7, #196]	; 0xc4
   2c270:	ldrd	r4, [r6, #8]
   2c274:	str	r3, [fp]
   2c278:	ldrd	r2, [sp, #56]	; 0x38
   2c27c:	strd	r4, [sp, #32]
   2c280:	adds	r2, r2, r4
   2c284:	adc	r3, r3, r5
   2c288:	subs	r0, r0, r4
   2c28c:	sbc	r1, r1, r5
   2c290:	strd	r2, [sp, #56]	; 0x38
   2c294:	strd	r0, [r8, #48]	; 0x30
   2c298:	strd	r4, [r7, #48]	; 0x30
   2c29c:	strd	r2, [r8, #32]
   2c2a0:	strd	r2, [r8, #40]	; 0x28
   2c2a4:	mov	r2, r4
   2c2a8:	mov	r3, r5
   2c2ac:	b	2c2b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18428>
   2c2b0:	ldrd	r2, [ip, #8]
   2c2b4:	ldr	r1, [ip, #4]
   2c2b8:	subs	r2, r2, r4
   2c2bc:	sbc	r3, r3, r5
   2c2c0:	strd	r2, [ip, #8]
   2c2c4:	cmp	r1, #1
   2c2c8:	ldreq	r1, [ip, #24]
   2c2cc:	ldr	ip, [ip]
   2c2d0:	streq	r8, [r1, #88]	; 0x58
   2c2d4:	strdeq	r2, [r1, #80]	; 0x50
   2c2d8:	cmp	ip, #0
   2c2dc:	bne	2c2b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18424>
   2c2e0:	ldr	r3, [r6]
   2c2e4:	mov	r7, r8
   2c2e8:	ldrd	r4, [sp, #24]
   2c2ec:	cmp	r3, #0
   2c2f0:	strd	r4, [sp, #32]
   2c2f4:	mov	r4, r9
   2c2f8:	ldr	r5, [sp, #40]	; 0x28
   2c2fc:	bne	2bfac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18120>
   2c300:	ldr	r5, [sp, #52]	; 0x34
   2c304:	ldr	r4, [sp, #72]	; 0x48
   2c308:	ldr	r5, [r5, #12]
   2c30c:	subs	r4, r4, #1
   2c310:	str	r4, [sp, #72]	; 0x48
   2c314:	moveq	r3, #0
   2c318:	movne	r3, #1
   2c31c:	cmp	r5, #0
   2c320:	moveq	r3, #0
   2c324:	andne	r3, r3, #1
   2c328:	cmp	r3, #0
   2c32c:	str	r5, [sp, #52]	; 0x34
   2c330:	bne	2bf04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18078>
   2c334:	ldr	r5, [sp, #44]	; 0x2c
   2c338:	ldr	r5, [r5, #52]	; 0x34
   2c33c:	str	r5, [sp, #48]	; 0x30
   2c340:	ldr	ip, [sp, #48]	; 0x30
   2c344:	movw	r1, #1088	; 0x440
   2c348:	movt	r1, #10
   2c34c:	ldr	r3, [ip, #4]
   2c350:	mov	r0, ip
   2c354:	ldr	r3, [r3, #372]	; 0x174
   2c358:	blx	r3
   2c35c:	subs	r4, r0, #0
   2c360:	beq	2c4a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18614>
   2c364:	ldr	ip, [sp, #84]	; 0x54
   2c368:	ldr	r2, [sp, #92]	; 0x5c
   2c36c:	ldr	r3, [ip]
   2c370:	cmp	r2, r3
   2c374:	bne	2c4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1863c>
   2c378:	add	sp, sp, #100	; 0x64
   2c37c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c380:	ldrb	r2, [ip, #1]
   2c384:	ldr	r3, [r6, #24]
   2c388:	tst	r2, #8
   2c38c:	ldreq	ip, [r3, #148]	; 0x94
   2c390:	movne	ip, #0
   2c394:	ldrd	r0, [r3, #48]	; 0x30
   2c398:	str	ip, [sp, #40]	; 0x28
   2c39c:	ldr	ip, [sp, #44]	; 0x2c
   2c3a0:	strd	r0, [sp, #24]
   2c3a4:	ldrb	r2, [ip]
   2c3a8:	and	r2, r2, #3
   2c3ac:	cmp	r2, #2
   2c3b0:	ldreq	r9, [r3, #104]	; 0x68
   2c3b4:	movne	r9, #0
   2c3b8:	cmp	fp, #0
   2c3bc:	bne	2bff0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18164>
   2c3c0:	ldrd	r2, [sp, #32]
   2c3c4:	add	r4, r9, r4
   2c3c8:	ldrd	r0, [sp, #24]
   2c3cc:	ldr	ip, [sp, #40]	; 0x28
   2c3d0:	adds	r0, r0, r2
   2c3d4:	adc	r1, r1, r3
   2c3d8:	add	r5, ip, r5
   2c3dc:	strd	r0, [sp, #32]
   2c3e0:	b	2bfa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18114>
   2c3e4:	sub	r9, r9, #3
   2c3e8:	mov	r0, #0
   2c3ec:	cmp	r9, #1
   2c3f0:	mov	r1, #0
   2c3f4:	mov	ip, #0
   2c3f8:	strd	r0, [sp, #24]
   2c3fc:	movhi	r9, #0
   2c400:	movls	r9, #1
   2c404:	str	ip, [sp, #40]	; 0x28
   2c408:	b	2bfe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1815c>
   2c40c:	mov	r3, r8
   2c410:	cmp	r3, #1
   2c414:	bls	2c0fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18270>
   2c418:	sub	r3, r3, #1
   2c41c:	ldrb	r2, [r5, r3]
   2c420:	cmp	r2, #46	; 0x2e
   2c424:	moveq	r2, #0
   2c428:	strbeq	r2, [r5, r3]
   2c42c:	b	2c0fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18270>
   2c430:	mov	r2, #5
   2c434:	movw	r1, #18396	; 0x47dc
   2c438:	mov	r0, #0
   2c43c:	movt	r1, #5
   2c440:	bl	13688 <dcgettext@plt>
   2c444:	mov	r8, #0
   2c448:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2c44c:	b	2c254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183c8>
   2c450:	mov	r2, #5
   2c454:	movw	r1, #18348	; 0x47ac
   2c458:	mov	r0, #0
   2c45c:	movt	r1, #5
   2c460:	bl	13688 <dcgettext@plt>
   2c464:	mov	r1, r4
   2c468:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2c46c:	mov	r8, #0
   2c470:	b	2c254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x183c8>
   2c474:	ldrd	r2, [r5, #88]	; 0x58
   2c478:	mvn	r0, #0
   2c47c:	mvn	r1, #0
   2c480:	cmp	r3, r1
   2c484:	cmpeq	r2, r0
   2c488:	bne	2bebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18030>
   2c48c:	movw	r3, #1088	; 0x440
   2c490:	movt	r3, #10
   2c494:	ldr	r3, [r3, #52]	; 0x34
   2c498:	str	r3, [sp, #48]	; 0x30
   2c49c:	b	2c340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184b4>
   2c4a0:	bl	13784 <bfd_get_error@plt>
   2c4a4:	cmp	r0, #0
   2c4a8:	beq	2c4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18640>
   2c4ac:	mov	r2, #5
   2c4b0:	mov	r0, r4
   2c4b4:	movw	r1, #18428	; 0x47fc
   2c4b8:	movt	r1, #5
   2c4bc:	bl	13688 <dcgettext@plt>
   2c4c0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2c4c4:	b	2c364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x184d8>
   2c4c8:	bl	13694 <__stack_chk_fail@plt>
   2c4cc:	mov	r0, #1
   2c4d0:	bl	13c40 <xexit@plt>
   2c4d4:	push	{r4, r5, lr}
   2c4d8:	mov	r4, r0
   2c4dc:	ldr	r5, [pc, #124]	; 2c560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x186d4>
   2c4e0:	sub	sp, sp, #12
   2c4e4:	ldr	r3, [r0, #12]
   2c4e8:	cmp	r3, r5
   2c4ec:	beq	2c528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1869c>
   2c4f0:	movw	r3, #1088	; 0x440
   2c4f4:	movt	r3, #10
   2c4f8:	mov	r2, #0
   2c4fc:	ldr	r1, [r0, #4]
   2c500:	mov	ip, #1
   2c504:	ldr	r0, [r3, #32]
   2c508:	mov	r3, r2
   2c50c:	str	ip, [sp]
   2c510:	bl	13880 <bfd_link_hash_lookup@plt>
   2c514:	cmp	r0, #0
   2c518:	beq	2c528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1869c>
   2c51c:	ldrb	r3, [r0, #12]
   2c520:	cmp	r3, #3
   2c524:	beq	2c534 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x186a8>
   2c528:	mov	r0, #1
   2c52c:	add	sp, sp, #12
   2c530:	pop	{r4, r5, pc}
   2c534:	ldr	r3, [r0, #20]
   2c538:	cmp	r3, r5
   2c53c:	bne	2c528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1869c>
   2c540:	ldr	r1, [r4, #12]
   2c544:	ldrd	r2, [r0, #24]
   2c548:	ldrd	r4, [r1, #32]
   2c54c:	str	r1, [r0, #20]
   2c550:	subs	r2, r2, r4
   2c554:	sbc	r3, r3, r5
   2c558:	strd	r2, [r0, #24]
   2c55c:	b	2c528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1869c>
   2c560:			; <UNDEFINED> instruction: 0x0009fab8
   2c564:	push	{r3, r4, r5, lr}
   2c568:	subs	r4, r0, #0
   2c56c:	mov	r5, r2
   2c570:	beq	2c58c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18700>
   2c574:	ldrb	r3, [r4, #16]
   2c578:	mov	r0, r4
   2c57c:	and	r3, r3, #252	; 0xfc
   2c580:	bfc	r3, #2, #1
   2c584:	strb	r3, [r4, #16]
   2c588:	pop	{r3, r4, r5, pc}
   2c58c:	mov	r0, r1
   2c590:	mov	r1, #20
   2c594:	bl	13928 <bfd_hash_allocate@plt>
   2c598:	subs	r4, r0, #0
   2c59c:	bne	2c574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x186e8>
   2c5a0:	mov	r2, #5
   2c5a4:	movw	r1, #18868	; 0x49b4
   2c5a8:	movt	r1, #5
   2c5ac:	bl	13688 <dcgettext@plt>
   2c5b0:	mov	r1, r5
   2c5b4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2c5b8:	b	2c574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x186e8>
   2c5bc:	push	{r4, r5, lr}
   2c5c0:	movw	r4, #1088	; 0x440
   2c5c4:	movt	r4, #10
   2c5c8:	sub	sp, sp, #12
   2c5cc:	mov	r2, #0
   2c5d0:	ldr	r1, [r1]
   2c5d4:	ldr	ip, [r4, #32]
   2c5d8:	mov	r3, r2
   2c5dc:	mov	lr, #1
   2c5e0:	mov	r5, r0
   2c5e4:	str	lr, [sp]
   2c5e8:	mov	r0, ip
   2c5ec:	bl	13880 <bfd_link_hash_lookup@plt>
   2c5f0:	subs	r2, r0, #0
   2c5f4:	beq	2c60c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18780>
   2c5f8:	ldr	r0, [r4, #52]	; 0x34
   2c5fc:	mov	r1, r5
   2c600:	ldr	ip, [r0, #4]
   2c604:	ldr	r3, [ip, #368]	; 0x170
   2c608:	blx	r3
   2c60c:	add	sp, sp, #12
   2c610:	pop	{r4, r5, pc}
   2c614:	push	{r4, r5, r6, r7, r8, lr}
   2c618:	movw	r5, #18460	; 0x481c
   2c61c:	mov	r6, r0
   2c620:	movt	r5, #5
   2c624:	mov	r8, r1
   2c628:	mov	r4, #0
   2c62c:	b	2c63c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187b0>
   2c630:	add	r4, r4, #1
   2c634:	cmp	r4, #51	; 0x33
   2c638:	beq	2c648 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187bc>
   2c63c:	ldr	r2, [r5, r4, lsl #3]
   2c640:	cmp	r2, r6
   2c644:	bne	2c630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187a4>
   2c648:	cmp	r8, #0
   2c64c:	movw	r7, #1336	; 0x538
   2c650:	movt	r7, #10
   2c654:	bne	2c6cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18840>
   2c658:	cmp	r4, #51	; 0x33
   2c65c:	bne	2c6b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18824>
   2c660:	cmp	r6, #126	; 0x7e
   2c664:	ble	2c698 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1880c>
   2c668:	mov	r3, r6
   2c66c:	movw	r2, #18920	; 0x49e8
   2c670:	ldr	r0, [r7, #80]	; 0x50
   2c674:	movt	r2, #5
   2c678:	mov	r1, #1
   2c67c:	bl	13b74 <__fprintf_chk@plt>
   2c680:	cmp	r8, #0
   2c684:	popeq	{r4, r5, r6, r7, r8, pc}
   2c688:	ldr	r1, [r7, #80]	; 0x50
   2c68c:	mov	r0, #32
   2c690:	pop	{r4, r5, r6, r7, r8, lr}
   2c694:	b	13c28 <fputc@plt>
   2c698:	mov	r0, r6
   2c69c:	ldr	r1, [r7, #80]	; 0x50
   2c6a0:	bl	13c28 <fputc@plt>
   2c6a4:	cmp	r8, #0
   2c6a8:	popeq	{r4, r5, r6, r7, r8, pc}
   2c6ac:	b	2c688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187fc>
   2c6b0:	add	r4, r5, r4, lsl #3
   2c6b4:	ldr	r1, [r7, #80]	; 0x50
   2c6b8:	ldr	r0, [r4, #4]
   2c6bc:	bl	13dfc <fputs@plt>
   2c6c0:	cmp	r8, #0
   2c6c4:	popeq	{r4, r5, r6, r7, r8, pc}
   2c6c8:	b	2c688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187fc>
   2c6cc:	ldr	r1, [r7, #80]	; 0x50
   2c6d0:	mov	r0, #32
   2c6d4:	bl	13c28 <fputc@plt>
   2c6d8:	b	2c658 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x187cc>
   2c6dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c6e0:	subs	r6, r0, #0
   2c6e4:	sub	sp, sp, #20
   2c6e8:	movwne	r4, #1480	; 0x5c8
   2c6ec:	movtne	r4, #10
   2c6f0:	beq	2c8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18a1c>
   2c6f4:	ldr	r3, [r6, #12]
   2c6f8:	cmp	r3, #9
   2c6fc:	ldrls	pc, [pc, r3, lsl #2]
   2c700:	b	2cc9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e10>
   2c704:	andeq	ip, r2, r8, ror r7
   2c708:	andeq	ip, r2, r8, ror r8
   2c70c:	andeq	ip, r2, ip, ror fp
   2c710:	ldrdeq	ip, [r2], -r0
   2c714:			; <UNDEFINED> instruction: 0x0002c9b4
   2c718:			; <UNDEFINED> instruction: 0x0002c9b4
   2c71c:			; <UNDEFINED> instruction: 0x0002c9b4
   2c720:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2c724:	andeq	ip, r2, ip, lsr fp
   2c728:	andeq	ip, r2, ip, lsr #14
   2c72c:	movw	ip, #1480	; 0x5c8
   2c730:	movt	ip, #10
   2c734:	ldr	r3, [ip]
   2c738:	cmp	r3, #0
   2c73c:	beq	2c8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18a1c>
   2c740:	ldr	r1, [r6, #16]
   2c744:	mov	r0, #1
   2c748:	ldrd	r2, [r6, #24]
   2c74c:	mov	r5, #0
   2c750:	str	r0, [ip, #32]
   2c754:	ldr	r4, [r1, #88]	; 0x58
   2c758:	ldrd	r0, [r1, #80]	; 0x50
   2c75c:	str	r5, [ip, #24]
   2c760:	adds	r2, r2, r0
   2c764:	str	r4, [ip, #28]
   2c768:	adc	r3, r3, r1
   2c76c:	strd	r2, [ip, #16]
   2c770:	add	sp, sp, #20
   2c774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c778:	movw	r8, #1480	; 0x5c8
   2c77c:	movt	r8, #10
   2c780:	ldr	r0, [r6, #16]
   2c784:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2c788:	ldr	r9, [r8, #32]
   2c78c:	cmp	r9, #0
   2c790:	beq	2ce80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ff4>
   2c794:	ldr	r3, [r6]
   2c798:	cmp	r3, #304	; 0x130
   2c79c:	beq	2cf6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x190e0>
   2c7a0:	ldr	r0, [r6, #20]
   2c7a4:	ldrd	r4, [r8, #16]
   2c7a8:	ldr	r7, [r8, #28]
   2c7ac:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2c7b0:	ldr	r3, [r8, #32]
   2c7b4:	and	r9, r9, r3
   2c7b8:	str	r9, [r8, #32]
   2c7bc:	cmp	r9, #0
   2c7c0:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2c7c4:	ldr	r3, [r8, #28]
   2c7c8:	cmp	r7, r3
   2c7cc:	beq	2c814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18988>
   2c7d0:	cmp	r3, #0
   2c7d4:	beq	2dbc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d38>
   2c7d8:	cmp	r7, #0
   2c7dc:	beq	2c814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18988>
   2c7e0:	ldrd	sl, [r8, #16]
   2c7e4:	mov	r9, #0
   2c7e8:	ldrd	r2, [r3, #32]
   2c7ec:	ldrd	r0, [r7, #32]
   2c7f0:	adds	r2, r2, sl
   2c7f4:	ldr	ip, [pc, #4076]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2c7f8:	adc	r3, r3, fp
   2c7fc:	adds	r4, r4, r0
   2c800:	adc	r5, r5, r1
   2c804:	strd	r2, [r8, #16]
   2c808:	mov	r7, ip
   2c80c:	str	ip, [r8, #28]
   2c810:	str	r9, [r8, #8]
   2c814:	ldr	r3, [r6]
   2c818:	movw	r2, #270	; 0x10e
   2c81c:	cmp	r3, r2
   2c820:	beq	2dad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c48>
   2c824:	bgt	2cd18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e8c>
   2c828:	cmp	r3, #47	; 0x2f
   2c82c:	beq	2db48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19cbc>
   2c830:	bgt	2d0f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19268>
   2c834:	cmp	r3, #42	; 0x2a
   2c838:	beq	2db70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ce4>
   2c83c:	bgt	2d624 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19798>
   2c840:	cmp	r3, #37	; 0x25
   2c844:	beq	2daf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c68>
   2c848:	cmp	r3, #38	; 0x26
   2c84c:	bne	2dae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c5c>
   2c850:	ldr	r1, [r8, #28]
   2c854:	ldrd	r2, [r8, #16]
   2c858:	cmp	r7, r1
   2c85c:	and	r2, r2, r4
   2c860:	and	r3, r3, r5
   2c864:	strd	r2, [r8, #16]
   2c868:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2c86c:	mov	r3, #0
   2c870:	str	r3, [r8, #28]
   2c874:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2c878:	ldr	r0, [r6, #16]
   2c87c:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2c880:	ldr	r3, [r4, #32]
   2c884:	cmp	r3, #0
   2c888:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2c88c:	ldrd	r2, [r4, #16]
   2c890:	ldr	r1, [r6, #20]
   2c894:	ldr	r6, [r6, #24]
   2c898:	orrs	r9, r2, r3
   2c89c:	movne	r6, r1
   2c8a0:	cmp	r6, #0
   2c8a4:	bne	2c6f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18868>
   2c8a8:	ldr	r1, [pc, #3892]	; 2d7e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19958>
   2c8ac:	mov	r2, #0
   2c8b0:	str	r2, [r1]
   2c8b4:	str	r2, [r1, #4]
   2c8b8:	str	r2, [r1, #8]
   2c8bc:	str	r2, [r1, #12]
   2c8c0:	str	r2, [r1, #16]
   2c8c4:	str	r2, [r1, #20]
   2c8c8:	add	sp, sp, #20
   2c8cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c8d0:	ldr	r4, [pc, #3852]	; 2d7e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19958>
   2c8d4:	mov	r9, #0
   2c8d8:	movw	r2, #321	; 0x141
   2c8dc:	str	r9, [r4]
   2c8e0:	str	r9, [r4, #4]
   2c8e4:	str	r9, [r4, #8]
   2c8e8:	str	r9, [r4, #12]
   2c8ec:	str	r9, [r4, #16]
   2c8f0:	str	r9, [r4, #20]
   2c8f4:	ldr	r3, [r6]
   2c8f8:	cmp	r3, r2
   2c8fc:	ble	2ccb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e24>
   2c900:	movw	r2, #333	; 0x14d
   2c904:	cmp	r3, r2
   2c908:	beq	2d3b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1952c>
   2c90c:	bgt	2cd70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ee4>
   2c910:	movw	r2, #322	; 0x142
   2c914:	cmp	r3, r2
   2c918:	beq	2d194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19308>
   2c91c:	add	r2, r2, #1
   2c920:	cmp	r3, r2
   2c924:	bne	2ccdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e50>
   2c928:	ldr	r3, [r4, #-16]
   2c92c:	sub	r8, r4, #16
   2c930:	cmp	r3, #0
   2c934:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2c938:	mov	r1, r9
   2c93c:	ldr	r0, [r6, #16]
   2c940:	mov	r2, r9
   2c944:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   2c948:	subs	r3, r0, #0
   2c94c:	beq	2dcc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e38>
   2c950:	ldrb	r2, [r3, #84]	; 0x54
   2c954:	tst	r2, #2
   2c958:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2c95c:	ldr	r0, [r3, #48]	; 0x30
   2c960:	cmp	r0, #0
   2c964:	beq	2de20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19f94>
   2c968:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2c96c:	ldr	r3, [r8, #32]
   2c970:	cmp	r3, #0
   2c974:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2c978:	ldr	r3, [r8, #28]
   2c97c:	movw	ip, #1480	; 0x5c8
   2c980:	movt	ip, #10
   2c984:	cmp	r3, #0
   2c988:	beq	2c9a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b14>
   2c98c:	ldrd	r0, [r3, #32]
   2c990:	ldrd	r2, [ip, #16]
   2c994:	adds	r2, r2, r0
   2c998:	adc	r3, r3, r1
   2c99c:	strd	r2, [ip, #16]
   2c9a0:	ldr	r3, [pc, #3648]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2c9a4:	mov	r2, #0
   2c9a8:	str	r2, [r8, #8]
   2c9ac:	str	r3, [r8, #28]
   2c9b0:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2c9b4:	ldr	r1, [r6, #16]
   2c9b8:	ldrb	r2, [r1]
   2c9bc:	cmp	r2, #46	; 0x2e
   2c9c0:	beq	2ce90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19004>
   2c9c4:	cmp	r3, #5
   2c9c8:	movne	r4, #0
   2c9cc:	beq	2cf24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19098>
   2c9d0:	movw	r8, #1480	; 0x5c8
   2c9d4:	movt	r8, #10
   2c9d8:	ldr	r0, [r6, #20]
   2c9dc:	str	r1, [r8, #12]
   2c9e0:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2c9e4:	ldr	r2, [r8, #32]
   2c9e8:	ldr	r3, [r8]
   2c9ec:	cmp	r2, #0
   2c9f0:	beq	2cc54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18dc8>
   2c9f4:	cmp	r3, #4
   2c9f8:	beq	2ca08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b7c>
   2c9fc:	ldr	r2, [r8, #12]
   2ca00:	cmp	r2, #0
   2ca04:	beq	2cddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f50>
   2ca08:	cmp	r4, #0
   2ca0c:	beq	2d86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199e0>
   2ca10:	ldr	r2, [r8, #28]
   2ca14:	movw	r3, #1480	; 0x5c8
   2ca18:	movt	r3, #10
   2ca1c:	movw	r0, #124	; 0x7c
   2ca20:	cmp	r2, #0
   2ca24:	movt	r0, #10
   2ca28:	ldreq	r2, [r3, #52]	; 0x34
   2ca2c:	streq	r2, [r3, #28]
   2ca30:	mov	r2, #1
   2ca34:	ldr	r7, [r6, #16]
   2ca38:	mov	r3, #0
   2ca3c:	mov	r1, r7
   2ca40:	bl	139f4 <bfd_hash_lookup@plt>
   2ca44:	subs	r5, r0, #0
   2ca48:	beq	2d80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19980>
   2ca4c:	ldrb	r3, [r5, #16]
   2ca50:	tst	r3, #2
   2ca54:	bne	2ca6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18be0>
   2ca58:	ldrb	r2, [r4, #12]
   2ca5c:	sub	r2, r2, #3
   2ca60:	cmp	r2, #2
   2ca64:	orrls	r3, r3, #1
   2ca68:	strbls	r3, [r5, #16]
   2ca6c:	ldr	r1, [r8]
   2ca70:	movw	r3, #65520	; 0xfff0
   2ca74:	movt	r3, #9
   2ca78:	ldrb	r0, [r5, #16]
   2ca7c:	ldr	r2, [pc, #3428]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2ca80:	cmp	r1, #4
   2ca84:	ldr	r1, [r3]
   2ca88:	orr	r3, r0, #2
   2ca8c:	movw	r7, #1480	; 0x5c8
   2ca90:	movt	r7, #10
   2ca94:	bfi	r3, r1, #2, #1
   2ca98:	str	r2, [r5, #12]
   2ca9c:	strb	r3, [r5, #16]
   2caa0:	beq	2d054 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x191c8>
   2caa4:	ldr	ip, [r8, #28]
   2caa8:	ldrd	r2, [r8, #16]
   2caac:	mov	r0, #3
   2cab0:	ldrb	r1, [r4, #13]
   2cab4:	str	ip, [r4, #20]
   2cab8:	strd	r2, [r4, #24]
   2cabc:	bfc	r1, #1, #1
   2cac0:	strb	r0, [r4, #12]
   2cac4:	strb	r1, [r4, #13]
   2cac8:	ldr	r3, [r6, #12]
   2cacc:	ldr	r1, [r6, #20]
   2cad0:	cmp	r3, #5
   2cad4:	moveq	r3, #6
   2cad8:	streq	r3, [r6, #12]
   2cadc:	ldr	r3, [r1, #12]
   2cae0:	cmp	r3, #3
   2cae4:	beq	2d0e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19258>
   2cae8:	cmp	r3, #1
   2caec:	beq	2d07c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x191f0>
   2caf0:	mov	r3, #0
   2caf4:	str	r3, [r8, #12]
   2caf8:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cafc:	movw	r8, #1480	; 0x5c8
   2cb00:	movt	r8, #10
   2cb04:	ldr	r3, [pc, #3292]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2cb08:	ldr	r1, [r8, #52]	; 0x34
   2cb0c:	cmp	r1, r3
   2cb10:	beq	2d028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1919c>
   2cb14:	ldrd	r2, [r6, #16]
   2cb18:	mov	r0, #1
   2cb1c:	mov	r1, #0
   2cb20:	str	r0, [r8, #32]
   2cb24:	str	r1, [r8, #28]
   2cb28:	strd	r2, [r8, #16]
   2cb2c:	ldr	r3, [r6, #24]
   2cb30:	str	r3, [r8, #24]
   2cb34:	add	sp, sp, #20
   2cb38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cb3c:	ldr	r0, [r6, #16]
   2cb40:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2cb44:	movw	r3, #1480	; 0x5c8
   2cb48:	movt	r3, #10
   2cb4c:	ldr	r2, [r3]
   2cb50:	cmp	r2, #4
   2cb54:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cb58:	ldrd	r2, [r3, #16]
   2cb5c:	orrs	r0, r2, r3
   2cb60:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cb64:	ldr	r1, [r6, #20]
   2cb68:	movw	r0, #18932	; 0x49f4
   2cb6c:	movt	r0, #5
   2cb70:	add	sp, sp, #20
   2cb74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cb78:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2cb7c:	movw	r8, #1480	; 0x5c8
   2cb80:	movt	r8, #10
   2cb84:	ldr	r0, [r6, #16]
   2cb88:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2cb8c:	ldr	r3, [r8, #32]
   2cb90:	cmp	r3, #0
   2cb94:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cb98:	ldr	r3, [r6]
   2cb9c:	movw	r2, #279	; 0x117
   2cba0:	cmp	r3, r2
   2cba4:	beq	2d55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196d0>
   2cba8:	cmp	r3, #280	; 0x118
   2cbac:	blt	2ccf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e68>
   2cbb0:	movw	r2, #319	; 0x13f
   2cbb4:	cmp	r3, r2
   2cbb8:	beq	2d4dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19650>
   2cbbc:	cmp	r3, #320	; 0x140
   2cbc0:	blt	2d44c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x195c0>
   2cbc4:	movw	r2, #351	; 0x15f
   2cbc8:	cmp	r3, r2
   2cbcc:	beq	2d4b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1962c>
   2cbd0:	add	r2, r2, #7
   2cbd4:	cmp	r3, r2
   2cbd8:	bne	2cd0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e80>
   2cbdc:	ldrd	r2, [r8, #16]
   2cbe0:	mvn	r4, #0
   2cbe4:	mvn	r5, #0
   2cbe8:	mov	sl, #1
   2cbec:	mov	fp, #0
   2cbf0:	mov	ip, #0
   2cbf4:	b	2cc00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d74>
   2cbf8:	mov	r4, r0
   2cbfc:	mov	r5, r1
   2cc00:	adds	r0, r4, #1
   2cc04:	and	r6, r2, sl
   2cc08:	adc	r1, r5, #0
   2cc0c:	cmp	r3, #0
   2cc10:	cmpeq	r2, #1
   2cc14:	and	r7, r3, fp
   2cc18:	bls	2cc24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d98>
   2cc1c:	orrs	r9, r6, r7
   2cc20:	movne	ip, #1
   2cc24:	lsrs	r3, r3, #1
   2cc28:	rrx	r2, r2
   2cc2c:	orrs	r6, r2, r3
   2cc30:	bne	2cbf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18d6c>
   2cc34:	cmp	ip, #0
   2cc38:	beq	2cc44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18db8>
   2cc3c:	adds	r0, r4, #2
   2cc40:	adc	r1, r5, #0
   2cc44:	mov	r3, #0
   2cc48:	strd	r0, [r8, #16]
   2cc4c:	str	r3, [r8, #28]
   2cc50:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cc54:	cmp	r3, #1
   2cc58:	bls	2cde4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f58>
   2cc5c:	cmp	r3, #4
   2cc60:	bne	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2cc64:	movw	r3, #1088	; 0x440
   2cc68:	movt	r3, #10
   2cc6c:	ldr	r1, [r6, #16]
   2cc70:	mov	r4, #1
   2cc74:	ldr	r0, [r3, #32]
   2cc78:	mov	r3, r2
   2cc7c:	str	r4, [sp]
   2cc80:	bl	13880 <bfd_link_hash_lookup@plt>
   2cc84:	cmp	r0, #0
   2cc88:	beq	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2cc8c:	ldrb	r3, [r0, #12]
   2cc90:	cmp	r3, #0
   2cc94:	strbeq	r4, [r0, #12]
   2cc98:	b	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2cc9c:	movw	r0, #18944	; 0x4a00
   2cca0:	movw	r1, #1228	; 0x4cc
   2cca4:	movt	r0, #5
   2cca8:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2ccac:	b	2c8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18a1c>
   2ccb0:	cmp	r3, #320	; 0x140
   2ccb4:	bge	2ce00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18f74>
   2ccb8:	movw	r2, #299	; 0x12b
   2ccbc:	cmp	r3, r2
   2ccc0:	beq	2d264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193d8>
   2ccc4:	add	r2, r2, #15
   2ccc8:	cmp	r3, r2
   2cccc:	beq	2d1ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19360>
   2ccd0:	movw	r2, #259	; 0x103
   2ccd4:	cmp	r3, r2
   2ccd8:	beq	2d2c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19434>
   2ccdc:	movw	r0, #18944	; 0x4a00
   2cce0:	mov	r1, #892	; 0x37c
   2cce4:	movt	r0, #5
   2cce8:	add	sp, sp, #20
   2ccec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ccf0:	b	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2ccf4:	cmp	r3, #45	; 0x2d
   2ccf8:	beq	2d610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19784>
   2ccfc:	cmp	r3, #126	; 0x7e
   2cd00:	beq	2d5fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19770>
   2cd04:	cmp	r3, #33	; 0x21
   2cd08:	beq	2d5d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1974c>
   2cd0c:	movw	r0, #18944	; 0x4a00
   2cd10:	movw	r1, #414	; 0x19e
   2cd14:	b	2cce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e58>
   2cd18:	cmp	r3, #276	; 0x114
   2cd1c:	beq	2d964 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ad8>
   2cd20:	bgt	2d138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192ac>
   2cd24:	movw	r2, #273	; 0x111
   2cd28:	cmp	r3, r2
   2cd2c:	beq	2da68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bdc>
   2cd30:	bgt	2d798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1990c>
   2cd34:	movw	r2, #271	; 0x10f
   2cd38:	cmp	r3, r2
   2cd3c:	beq	2d93c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ab0>
   2cd40:	cmp	r3, #272	; 0x110
   2cd44:	bne	2dae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c5c>
   2cd48:	ldrd	r2, [r8, #16]
   2cd4c:	mov	r1, #0
   2cd50:	str	r1, [r8, #20]
   2cd54:	cmp	r5, r3
   2cd58:	cmpeq	r4, r2
   2cd5c:	str	r1, [r8, #28]
   2cd60:	movne	r3, #0
   2cd64:	moveq	r3, #1
   2cd68:	str	r3, [r8, #16]
   2cd6c:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cd70:	movw	r2, #335	; 0x14f
   2cd74:	cmp	r3, r2
   2cd78:	beq	2d40c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19580>
   2cd7c:	add	r2, r2, #50	; 0x32
   2cd80:	cmp	r3, r2
   2cd84:	bne	2ccdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e50>
   2cd88:	ldr	r5, [r6, #16]
   2cd8c:	movw	r1, #19612	; 0x4c9c
   2cd90:	movt	r1, #5
   2cd94:	mov	r0, r5
   2cd98:	bl	13490 <strcmp@plt>
   2cd9c:	cmp	r0, #0
   2cda0:	beq	2d7ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19960>
   2cda4:	mov	r0, r5
   2cda8:	movw	r1, #19624	; 0x4ca8
   2cdac:	movt	r1, #5
   2cdb0:	bl	13490 <strcmp@plt>
   2cdb4:	cmp	r0, #0
   2cdb8:	bne	2db9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d10>
   2cdbc:	movw	r3, #1336	; 0x538
   2cdc0:	movt	r3, #10
   2cdc4:	mov	r1, #1
   2cdc8:	sub	r4, r4, #16
   2cdcc:	ldrd	r2, [r3, #112]	; 0x70
   2cdd0:	str	r1, [r4, #32]
   2cdd4:	strd	r2, [r4, #16]
   2cdd8:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cddc:	cmp	r3, #1
   2cde0:	bhi	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2cde4:	ldr	r3, [r6, #12]
   2cde8:	cmp	r3, #4
   2cdec:	bne	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2cdf0:	ldr	r3, [r6, #24]
   2cdf4:	cmp	r3, #0
   2cdf8:	beq	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2cdfc:	b	2ca08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b7c>
   2ce00:	ldr	r3, [r4, #-16]
   2ce04:	cmp	r3, #0
   2ce08:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2ce0c:	ldr	r0, [r6, #16]
   2ce10:	mov	r1, r9
   2ce14:	mov	r2, r9
   2ce18:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   2ce1c:	subs	r3, r0, #0
   2ce20:	beq	2dd68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19edc>
   2ce24:	ldr	r3, [r3, #28]
   2ce28:	cmp	r3, #0
   2ce2c:	beq	2dd90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19f04>
   2ce30:	ldr	r2, [r6]
   2ce34:	cmp	r2, #320	; 0x140
   2ce38:	beq	2de40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19fb4>
   2ce3c:	ldr	r1, [r3, #92]	; 0x5c
   2ce40:	mov	r3, #1
   2ce44:	sub	r2, r1, #32
   2ce48:	rsb	r0, r1, #32
   2ce4c:	lsl	r2, r3, r2
   2ce50:	lsl	ip, r3, r1
   2ce54:	orr	r2, r2, r3, lsr r0
   2ce58:	movw	r3, #1480	; 0x5c8
   2ce5c:	movt	r3, #10
   2ce60:	mov	r1, #0
   2ce64:	mov	r0, #1
   2ce68:	str	ip, [r3, #16]
   2ce6c:	str	r2, [r3, #20]
   2ce70:	str	r0, [r3, #32]
   2ce74:	str	r1, [r3, #24]
   2ce78:	str	r1, [r3, #28]
   2ce7c:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2ce80:	ldr	r0, [r6, #20]
   2ce84:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2ce88:	str	r9, [r8, #32]
   2ce8c:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2ce90:	ldrb	r0, [r1, #1]
   2ce94:	cmp	r0, #0
   2ce98:	bne	2c9c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b38>
   2ce9c:	cmp	r3, #4
   2cea0:	beq	2cebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19030>
   2cea4:	movw	r1, #19056	; 0x4a70
   2cea8:	mov	r2, #5
   2ceac:	movt	r1, #5
   2ceb0:	bl	13688 <dcgettext@plt>
   2ceb4:	mov	r1, r6
   2ceb8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2cebc:	movw	r8, #1480	; 0x5c8
   2cec0:	movt	r8, #10
   2cec4:	ldr	r3, [r8]
   2cec8:	cmp	r3, #0
   2cecc:	beq	2c8a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18a1c>
   2ced0:	ldr	r0, [r6, #20]
   2ced4:	mov	r3, #1
   2ced8:	str	r3, [r8, #4]
   2cedc:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2cee0:	ldr	r3, [r8]
   2cee4:	mov	r2, #0
   2cee8:	ldr	r0, [r8, #32]
   2ceec:	cmp	r3, #1
   2cef0:	str	r2, [r8, #4]
   2cef4:	beq	2d8b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a24>
   2cef8:	cmp	r0, #0
   2cefc:	bne	2d6e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19858>
   2cf00:	ldr	r3, [r8]
   2cf04:	cmp	r3, #1
   2cf08:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cf0c:	movw	r1, #19112	; 0x4aa8
   2cf10:	movt	r1, #5
   2cf14:	mov	r2, #5
   2cf18:	bl	13688 <dcgettext@plt>
   2cf1c:	mov	r1, r6
   2cf20:	b	2cb70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ce4>
   2cf24:	movw	r3, #1088	; 0x440
   2cf28:	movt	r3, #10
   2cf2c:	mov	r2, #0
   2cf30:	mov	ip, #1
   2cf34:	ldr	r0, [r3, #32]
   2cf38:	mov	r3, r2
   2cf3c:	str	ip, [sp]
   2cf40:	bl	13880 <bfd_link_hash_lookup@plt>
   2cf44:	subs	r4, r0, #0
   2cf48:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cf4c:	ldrb	r3, [r4, #12]
   2cf50:	cmp	r3, #2
   2cf54:	bls	2cf64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x190d8>
   2cf58:	ldrb	r3, [r4, #13]
   2cf5c:	tst	r3, #2
   2cf60:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cf64:	ldr	r1, [r6, #16]
   2cf68:	b	2c9d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b44>
   2cf6c:	movw	r3, #1608	; 0x648
   2cf70:	movt	r3, #10
   2cf74:	ldr	r2, [r6, #20]
   2cf78:	ldr	r4, [r3]
   2cf7c:	cmp	r4, #0
   2cf80:	ldr	r5, [r2, #16]
   2cf84:	bne	2cf98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1910c>
   2cf88:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cf8c:	ldr	r4, [r4]
   2cf90:	cmp	r4, #0
   2cf94:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2cf98:	ldr	r0, [r4, #4]
   2cf9c:	mov	r1, r5
   2cfa0:	bl	13490 <strcmp@plt>
   2cfa4:	cmp	r0, #0
   2cfa8:	bne	2cf8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19100>
   2cfac:	ldr	r6, [r4, #16]
   2cfb0:	cmp	r6, #0
   2cfb4:	bne	2d4b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19624>
   2cfb8:	movw	r3, #1336	; 0x538
   2cfbc:	movt	r3, #10
   2cfc0:	ldr	r2, [r3]
   2cfc4:	cmp	r2, #0
   2cfc8:	beq	2d4b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19624>
   2cfcc:	ldr	r9, [r4, #8]
   2cfd0:	ldr	r7, [r4, #12]
   2cfd4:	ldrd	r2, [r3, #104]	; 0x68
   2cfd8:	mov	r0, r9
   2cfdc:	mov	r1, r7
   2cfe0:	bl	3fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bfdc>
   2cfe4:	orrs	ip, r2, r3
   2cfe8:	moveq	r2, r9
   2cfec:	moveq	r3, r7
   2cff0:	bne	2d494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19608>
   2cff4:	ldr	r5, [r8, #52]	; 0x34
   2cff8:	mov	ip, #1
   2cffc:	mov	r6, #0
   2d000:	str	ip, [r4, #16]
   2d004:	str	ip, [r8, #8]
   2d008:	ldrd	r0, [r5, #32]
   2d00c:	str	r5, [r8, #28]
   2d010:	subs	r2, r2, r0
   2d014:	sbc	r3, r3, r1
   2d018:	str	ip, [r8, #32]
   2d01c:	strd	r2, [r8, #16]
   2d020:	str	r6, [r8, #24]
   2d024:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d028:	movw	r3, #1336	; 0x538
   2d02c:	movt	r3, #10
   2d030:	ldr	r3, [r3, #64]	; 0x40
   2d034:	cmp	r3, #0
   2d038:	bne	2cb14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c88>
   2d03c:	ldrd	r2, [r6, #16]
   2d040:	mov	r0, #1
   2d044:	str	r1, [r8, #28]
   2d048:	str	r0, [r8, #32]
   2d04c:	strd	r2, [r8, #16]
   2d050:	b	2cb2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18ca0>
   2d054:	ldr	r3, [r7, #8]
   2d058:	cmp	r3, #0
   2d05c:	beq	2caa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c18>
   2d060:	ldr	ip, [r7, #28]
   2d064:	cmp	ip, r2
   2d068:	bne	2caa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c1c>
   2d06c:	bl	23f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10094>
   2d070:	ldr	ip, [r7, #28]
   2d074:	str	r0, [r5, #12]
   2d078:	b	2caa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c1c>
   2d07c:	ldr	r0, [r1, #16]
   2d080:	movw	r5, #1480	; 0x5c8
   2d084:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2d088:	ldr	r3, [r8, #32]
   2d08c:	movt	r5, #10
   2d090:	cmp	r3, #0
   2d094:	beq	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2d098:	ldrd	r2, [r5, #16]
   2d09c:	orrs	ip, r2, r3
   2d0a0:	beq	2d0d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19244>
   2d0a4:	ldr	r3, [r6, #20]
   2d0a8:	ldr	r1, [r3, #20]
   2d0ac:	ldr	r3, [r1, #12]
   2d0b0:	cmp	r3, #3
   2d0b4:	bne	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2d0b8:	mov	r0, r4
   2d0bc:	add	r1, r1, #16
   2d0c0:	bl	2c5bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18730>
   2d0c4:	ldrd	r2, [r5, #16]
   2d0c8:	orrs	r0, r2, r3
   2d0cc:	bne	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2d0d0:	ldr	r3, [r6, #20]
   2d0d4:	ldr	r1, [r3, #24]
   2d0d8:	ldr	r3, [r1, #12]
   2d0dc:	cmp	r3, #3
   2d0e0:	bne	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2d0e4:	mov	r0, r4
   2d0e8:	add	r1, r1, #16
   2d0ec:	bl	2c5bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18730>
   2d0f0:	b	2caf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18c64>
   2d0f4:	cmp	r3, #94	; 0x5e
   2d0f8:	beq	2d9c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b34>
   2d0fc:	bgt	2d654 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x197c8>
   2d100:	cmp	r3, #60	; 0x3c
   2d104:	beq	2d998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b0c>
   2d108:	cmp	r3, #62	; 0x3e
   2d10c:	bne	2dae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c5c>
   2d110:	ldrd	r2, [r8, #16]
   2d114:	mov	r1, #0
   2d118:	str	r1, [r8, #20]
   2d11c:	cmp	r5, r3
   2d120:	cmpeq	r4, r2
   2d124:	str	r1, [r8, #28]
   2d128:	movls	r3, #0
   2d12c:	movhi	r3, #1
   2d130:	str	r3, [r8, #16]
   2d134:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d138:	movw	r2, #293	; 0x125
   2d13c:	cmp	r3, r2
   2d140:	beq	2da00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b74>
   2d144:	bgt	2d6a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19818>
   2d148:	movw	r2, #279	; 0x117
   2d14c:	cmp	r3, r2
   2d150:	beq	2da90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c04>
   2d154:	cmp	r3, #292	; 0x124
   2d158:	bne	2dae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c5c>
   2d15c:	ldr	r1, [r8]
   2d160:	movw	r3, #1480	; 0x5c8
   2d164:	mov	r2, #1
   2d168:	movt	r3, #10
   2d16c:	cmp	r1, #0
   2d170:	str	r2, [r8, #112]	; 0x70
   2d174:	beq	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2d178:	ldr	r2, [r3, #52]	; 0x34
   2d17c:	ldr	r3, [pc, #1636]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2d180:	cmp	r2, r3
   2d184:	beq	2de80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ff4>
   2d188:	mov	r3, #0
   2d18c:	str	r3, [r8, #32]
   2d190:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d194:	ldr	r3, [r4, #-16]
   2d198:	sub	r5, r4, #16
   2d19c:	cmp	r3, #0
   2d1a0:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d1a4:	ldr	r0, [r6, #16]
   2d1a8:	mov	r1, r9
   2d1ac:	mov	r2, r9
   2d1b0:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   2d1b4:	subs	r3, r0, #0
   2d1b8:	beq	2dcc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e38>
   2d1bc:	ldrb	r2, [r3, #84]	; 0x54
   2d1c0:	tst	r2, #1
   2d1c4:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d1c8:	ldr	r1, [r3, #28]
   2d1cc:	mov	r0, #1
   2d1d0:	mov	r2, #0
   2d1d4:	mov	r3, #0
   2d1d8:	str	r9, [r5, #24]
   2d1dc:	str	r0, [r5, #32]
   2d1e0:	str	r1, [r5, #28]
   2d1e4:	strd	r2, [r5, #16]
   2d1e8:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d1ec:	ldr	r3, [r4, #-16]
   2d1f0:	cmp	r3, #0
   2d1f4:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d1f8:	movw	r1, #1088	; 0x440
   2d1fc:	movt	r1, #10
   2d200:	ldr	r2, [r6, #16]
   2d204:	mov	r4, #1
   2d208:	ldr	r0, [r1, #52]	; 0x34
   2d20c:	mov	r3, r9
   2d210:	str	r9, [sp]
   2d214:	str	r4, [sp, #4]
   2d218:	bl	13508 <bfd_wrapped_link_hash_lookup@plt>
   2d21c:	cmp	r0, #0
   2d220:	beq	2de74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19fe8>
   2d224:	ldrb	r3, [r0, #12]
   2d228:	sub	r3, r3, #3
   2d22c:	cmp	r3, #2
   2d230:	movhi	r2, r9
   2d234:	movhi	r9, r2
   2d238:	bls	2dc10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d84>
   2d23c:	movw	r3, #1480	; 0x5c8
   2d240:	movt	r3, #10
   2d244:	mov	r1, #0
   2d248:	mov	r0, #1
   2d24c:	str	r2, [r3, #16]
   2d250:	str	r9, [r3, #20]
   2d254:	str	r0, [r3, #32]
   2d258:	str	r1, [r3, #24]
   2d25c:	str	r1, [r3, #28]
   2d260:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d264:	ldr	r3, [r4, #-16]
   2d268:	cmp	r3, #0
   2d26c:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d270:	cmp	r3, #1
   2d274:	moveq	r0, #0
   2d278:	moveq	r1, #0
   2d27c:	beq	2d29c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19410>
   2d280:	movw	r1, #1088	; 0x440
   2d284:	movt	r1, #10
   2d288:	ldr	r0, [r1, #52]	; 0x34
   2d28c:	ldr	r3, [r0, #4]
   2d290:	ldr	r3, [r3, #344]	; 0x158
   2d294:	blx	r3
   2d298:	asr	r1, r0, #31
   2d29c:	movw	r3, #1480	; 0x5c8
   2d2a0:	movt	r3, #10
   2d2a4:	mov	r2, #0
   2d2a8:	mov	ip, #1
   2d2ac:	strd	r0, [r3, #16]
   2d2b0:	str	ip, [r3, #32]
   2d2b4:	str	r2, [r3, #24]
   2d2b8:	str	r2, [r3, #28]
   2d2bc:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d2c0:	sub	r8, r4, #16
   2d2c4:	ldr	r0, [r8, #12]
   2d2c8:	cmp	r0, #0
   2d2cc:	beq	2d2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19458>
   2d2d0:	ldr	r4, [r6, #16]
   2d2d4:	mov	r1, r4
   2d2d8:	bl	13490 <strcmp@plt>
   2d2dc:	subs	r3, r0, #0
   2d2e0:	beq	2d828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1999c>
   2d2e4:	ldr	r3, [r8]
   2d2e8:	movw	ip, #1480	; 0x5c8
   2d2ec:	movt	ip, #10
   2d2f0:	cmp	r3, #0
   2d2f4:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d2f8:	ldr	r2, [r6, #16]
   2d2fc:	ldrb	r3, [r2]
   2d300:	cmp	r3, #46	; 0x2e
   2d304:	bne	2d314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19488>
   2d308:	ldrb	r1, [r2, #1]
   2d30c:	cmp	r1, #0
   2d310:	beq	2dce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e54>
   2d314:	movw	r4, #1088	; 0x440
   2d318:	movt	r4, #10
   2d31c:	mov	r3, #1
   2d320:	mov	ip, #0
   2d324:	ldr	r0, [r4, #52]	; 0x34
   2d328:	mov	r1, r4
   2d32c:	str	r3, [sp, #4]
   2d330:	str	ip, [sp]
   2d334:	bl	13508 <bfd_wrapped_link_hash_lookup@plt>
   2d338:	subs	r3, r0, #0
   2d33c:	beq	2dfb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a124>
   2d340:	ldrb	r2, [r3, #12]
   2d344:	sub	r1, r2, #3
   2d348:	cmp	r1, #1
   2d34c:	bls	2dc68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19ddc>
   2d350:	ldr	r0, [r8]
   2d354:	movw	r1, #1480	; 0x5c8
   2d358:	movt	r1, #10
   2d35c:	cmp	r0, #4
   2d360:	beq	2dcb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e24>
   2d364:	cmp	r0, #1
   2d368:	beq	2d378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x194ec>
   2d36c:	ldr	r1, [r1, #4]
   2d370:	cmp	r1, #0
   2d374:	bne	2dcb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e24>
   2d378:	cmp	r2, #0
   2d37c:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d380:	ldr	r0, [r3, #16]
   2d384:	mov	r1, #1
   2d388:	str	r2, [r3, #20]
   2d38c:	cmp	r0, #0
   2d390:	strb	r1, [r3, #12]
   2d394:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d398:	ldr	r0, [r4, #32]
   2d39c:	ldr	r2, [r0, #32]
   2d3a0:	cmp	r3, r2
   2d3a4:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d3a8:	mov	r1, r3
   2d3ac:	add	sp, sp, #20
   2d3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d3b4:	b	13874 <bfd_link_add_undef@plt>
   2d3b8:	ldr	r3, [r4, #-16]
   2d3bc:	sub	r8, r4, #16
   2d3c0:	cmp	r3, #0
   2d3c4:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d3c8:	mov	r1, r9
   2d3cc:	ldr	r0, [r6, #16]
   2d3d0:	bl	21088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1fc>
   2d3d4:	subs	r1, r0, #0
   2d3d8:	beq	2de10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19f84>
   2d3dc:	ldr	r2, [r4, #36]	; 0x24
   2d3e0:	mov	r3, #1
   2d3e4:	ldrd	r4, [r1, #16]
   2d3e8:	str	r3, [r8, #8]
   2d3ec:	ldrd	r6, [r2, #32]
   2d3f0:	str	r2, [r8, #28]
   2d3f4:	subs	r4, r4, r6
   2d3f8:	sbc	r5, r5, r7
   2d3fc:	str	r9, [r8, #24]
   2d400:	strd	r4, [r8, #16]
   2d404:	str	r3, [r8, #32]
   2d408:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d40c:	ldr	r3, [r4, #-16]
   2d410:	sub	r7, r4, #16
   2d414:	cmp	r3, #0
   2d418:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d41c:	ldr	r0, [r6, #16]
   2d420:	mov	r1, r9
   2d424:	bl	21088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd1fc>
   2d428:	subs	r3, r0, #0
   2d42c:	beq	2de10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19f84>
   2d430:	ldrd	r4, [r3, #24]
   2d434:	mov	r3, #1
   2d438:	str	r9, [r7, #24]
   2d43c:	str	r9, [r7, #28]
   2d440:	strd	r4, [r7, #16]
   2d444:	str	r3, [r7, #32]
   2d448:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d44c:	movw	r2, #294	; 0x126
   2d450:	cmp	r3, r2
   2d454:	bne	2cd0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e80>
   2d458:	ldr	r3, [r8]
   2d45c:	cmp	r3, #0
   2d460:	beq	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2d464:	ldr	r3, [pc, #892]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2d468:	ldr	r2, [r8, #52]	; 0x34
   2d46c:	cmp	r2, r3
   2d470:	bne	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2d474:	ldr	r3, [r8, #56]	; 0x38
   2d478:	sub	r2, r3, #1
   2d47c:	cmp	r2, #1
   2d480:	bls	2df9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a110>
   2d484:	sub	r3, r3, #4
   2d488:	cmp	r3, #2
   2d48c:	bls	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d490:	b	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2d494:	mov	r0, r6
   2d498:	movw	r1, #18952	; 0x4a08
   2d49c:	mov	r2, #5
   2d4a0:	movt	r1, #5
   2d4a4:	bl	13688 <dcgettext@plt>
   2d4a8:	mov	r1, r5
   2d4ac:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2d4b0:	ldrd	r2, [r4, #8]
   2d4b4:	b	2cff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19168>
   2d4b8:	ldr	r3, [r8, #28]
   2d4bc:	cmp	r3, #0
   2d4c0:	beq	2c9a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b14>
   2d4c4:	ldrd	r0, [r3, #32]
   2d4c8:	ldrd	r2, [r8, #16]
   2d4cc:	adds	r2, r2, r0
   2d4d0:	adc	r3, r3, r1
   2d4d4:	strd	r2, [r8, #16]
   2d4d8:	b	2c9a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b14>
   2d4dc:	ldr	r3, [r8]
   2d4e0:	cmp	r3, #0
   2d4e4:	beq	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2d4e8:	ldr	r3, [r8, #28]
   2d4ec:	cmp	r3, #0
   2d4f0:	ldrdeq	r4, [r8, #16]
   2d4f4:	beq	2d508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1967c>
   2d4f8:	ldrd	r4, [r3, #32]
   2d4fc:	ldrd	r2, [r8, #16]
   2d500:	adds	r4, r4, r2
   2d504:	adc	r5, r5, r3
   2d508:	ldr	r1, [pc, #728]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2d50c:	cmp	r5, #0
   2d510:	cmpeq	r4, #1
   2d514:	mov	r0, #0
   2d518:	ldrd	r2, [r8, #40]	; 0x28
   2d51c:	str	r0, [r8, #8]
   2d520:	str	r1, [r8, #28]
   2d524:	bls	2d554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196c8>
   2d528:	subs	r0, r2, #1
   2d52c:	mov	r2, r4
   2d530:	sbc	r1, r3, #0
   2d534:	adds	r0, r0, r4
   2d538:	mov	r3, r5
   2d53c:	adc	r1, r1, r5
   2d540:	bl	3fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bfdc>
   2d544:	mul	ip, r0, r5
   2d548:	umull	r2, r3, r0, r4
   2d54c:	mla	r1, r1, r4, ip
   2d550:	add	r3, r1, r3
   2d554:	strd	r2, [r8, #16]
   2d558:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d55c:	ldr	r3, [r8]
   2d560:	cmp	r3, #0
   2d564:	beq	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2d568:	ldrd	r4, [r8, #16]
   2d56c:	ldrd	r2, [r8, #40]	; 0x28
   2d570:	cmp	r5, #0
   2d574:	cmpeq	r4, #1
   2d578:	bls	2d5a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1971c>
   2d57c:	adds	r0, r2, r4
   2d580:	mov	r2, r4
   2d584:	adc	r1, r3, r5
   2d588:	subs	r0, r0, #1
   2d58c:	mov	r3, r5
   2d590:	sbc	r1, r1, #0
   2d594:	bl	3fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bfdc>
   2d598:	mul	ip, r0, r5
   2d59c:	umull	r2, r3, r0, r4
   2d5a0:	mla	r1, r1, r4, ip
   2d5a4:	add	r3, r1, r3
   2d5a8:	ldr	ip, [r8, #52]	; 0x34
   2d5ac:	mov	r1, #1
   2d5b0:	str	r1, [r8, #8]
   2d5b4:	mov	r4, #0
   2d5b8:	str	r1, [r8, #32]
   2d5bc:	ldrd	r0, [ip, #32]
   2d5c0:	str	ip, [r8, #28]
   2d5c4:	subs	r2, r2, r0
   2d5c8:	sbc	r3, r3, r1
   2d5cc:	str	r4, [r8, #24]
   2d5d0:	strd	r2, [r8, #16]
   2d5d4:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d5d8:	ldr	r3, [r8, #20]
   2d5dc:	mov	r1, #0
   2d5e0:	ldr	r2, [r8, #16]
   2d5e4:	str	r1, [r8, #20]
   2d5e8:	orrs	r3, r2, r3
   2d5ec:	movne	r3, #0
   2d5f0:	moveq	r3, #1
   2d5f4:	str	r3, [r8, #16]
   2d5f8:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d5fc:	ldrd	r2, [r8, #16]
   2d600:	mvn	r2, r2
   2d604:	mvn	r3, r3
   2d608:	strd	r2, [r8, #16]
   2d60c:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d610:	ldrd	r2, [r8, #16]
   2d614:	rsbs	r2, r2, #0
   2d618:	rsc	r3, r3, #0
   2d61c:	strd	r2, [r8, #16]
   2d620:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d624:	cmp	r3, #43	; 0x2b
   2d628:	beq	2d9e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19b54>
   2d62c:	cmp	r3, #45	; 0x2d
   2d630:	bne	2dae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c5c>
   2d634:	ldrd	r2, [r8, #16]
   2d638:	ldr	r1, [r8, #28]
   2d63c:	subs	r2, r4, r2
   2d640:	sbc	r3, r5, r3
   2d644:	strd	r2, [r8, #16]
   2d648:	cmp	r7, r1
   2d64c:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d650:	b	2c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189e0>
   2d654:	cmp	r3, #124	; 0x7c
   2d658:	beq	2db28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c9c>
   2d65c:	movw	r2, #269	; 0x10d
   2d660:	cmp	r3, r2
   2d664:	bne	2dae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c5c>
   2d668:	orrs	r1, r4, r5
   2d66c:	movne	r3, #1
   2d670:	movne	r2, #0
   2d674:	bne	2d690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19804>
   2d678:	ldr	r3, [r8, #20]
   2d67c:	mov	r2, #0
   2d680:	ldr	r1, [r8, #16]
   2d684:	orrs	r3, r1, r3
   2d688:	moveq	r3, #0
   2d68c:	movne	r3, #1
   2d690:	str	r3, [r8, #16]
   2d694:	mov	r3, #0
   2d698:	str	r2, [r8, #20]
   2d69c:	str	r3, [r8, #28]
   2d6a0:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d6a4:	cmp	r3, #324	; 0x144
   2d6a8:	beq	2d8f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a6c>
   2d6ac:	movw	r2, #325	; 0x145
   2d6b0:	cmp	r3, r2
   2d6b4:	bne	2dae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c5c>
   2d6b8:	ldrd	r2, [r8, #16]
   2d6bc:	movw	r1, #1480	; 0x5c8
   2d6c0:	movt	r1, #10
   2d6c4:	cmp	r5, r3
   2d6c8:	cmpeq	r4, r2
   2d6cc:	bcs	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d6d0:	strd	r4, [r1, #16]
   2d6d4:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d6d8:	ldrd	r2, [r0, #16]
   2d6dc:	orrs	r1, r2, r3
   2d6e0:	bne	2d8e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a58>
   2d6e4:	ldr	r0, [r8, #48]	; 0x30
   2d6e8:	movw	r3, #1480	; 0x5c8
   2d6ec:	movt	r3, #10
   2d6f0:	cmp	r0, #0
   2d6f4:	movweq	r1, #19160	; 0x4ad8
   2d6f8:	moveq	r2, #5
   2d6fc:	movteq	r1, #5
   2d700:	beq	2cf18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1908c>
   2d704:	ldr	r2, [r3]
   2d708:	cmp	r2, #2
   2d70c:	bls	2d720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19894>
   2d710:	ldr	r2, [r3, #52]	; 0x34
   2d714:	ldr	r3, [pc, #204]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2d718:	cmp	r2, r3
   2d71c:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d720:	ldr	ip, [r8, #28]
   2d724:	movw	r1, #1480	; 0x5c8
   2d728:	movt	r1, #10
   2d72c:	ldrd	r2, [r8, #16]
   2d730:	cmp	ip, #0
   2d734:	movw	r7, #1480	; 0x5c8
   2d738:	movt	r7, #10
   2d73c:	ldreq	r1, [r1, #52]	; 0x34
   2d740:	ldrdne	r4, [ip, #32]
   2d744:	ldrdeq	r4, [r1, #32]
   2d748:	adds	r4, r4, r2
   2d74c:	adc	r5, r5, r3
   2d750:	ldrd	r2, [r8, #40]	; 0x28
   2d754:	cmp	r5, r3
   2d758:	cmpeq	r4, r2
   2d75c:	bcs	2dc04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d78>
   2d760:	ldr	r3, [pc, #128]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2d764:	ldr	r2, [r7, #52]	; 0x34
   2d768:	cmp	r2, r3
   2d76c:	beq	2dc04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d78>
   2d770:	mov	r2, #5
   2d774:	movw	r1, #19228	; 0x4b1c
   2d778:	mov	r0, #0
   2d77c:	movt	r1, #5
   2d780:	bl	13688 <dcgettext@plt>
   2d784:	ldrd	r2, [r7, #40]	; 0x28
   2d788:	mov	r1, r6
   2d78c:	strd	r4, [sp]
   2d790:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2d794:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d798:	movw	r2, #274	; 0x112
   2d79c:	cmp	r3, r2
   2d7a0:	beq	2d914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a88>
   2d7a4:	add	r2, r2, #1
   2d7a8:	cmp	r3, r2
   2d7ac:	bne	2dae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c5c>
   2d7b0:	ldr	r2, [r8, #16]
   2d7b4:	ldr	r0, [r8, #28]
   2d7b8:	rsb	r1, r2, #32
   2d7bc:	lsr	r3, r4, r2
   2d7c0:	cmp	r7, r0
   2d7c4:	orr	r3, r3, r5, lsl r1
   2d7c8:	sub	r1, r2, #32
   2d7cc:	lsr	r2, r5, r2
   2d7d0:	orr	r3, r3, r5, lsr r1
   2d7d4:	str	r2, [r8, #20]
   2d7d8:	str	r3, [r8, #16]
   2d7dc:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d7e0:	b	2c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189e0>
   2d7e4:	ldrdeq	r0, [sl], -r8
   2d7e8:			; <UNDEFINED> instruction: 0x0009fab8
   2d7ec:	movw	r3, #1336	; 0x538
   2d7f0:	movt	r3, #10
   2d7f4:	mov	r1, #1
   2d7f8:	sub	r4, r4, #16
   2d7fc:	ldrd	r2, [r3, #104]	; 0x68
   2d800:	str	r1, [r4, #32]
   2d804:	strd	r2, [r4, #16]
   2d808:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d80c:	mov	r2, #5
   2d810:	movw	r1, #19324	; 0x4b7c
   2d814:	movt	r1, #5
   2d818:	bl	13688 <dcgettext@plt>
   2d81c:	mov	r1, r7
   2d820:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2d824:	b	2ca4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18bc0>
   2d828:	movw	r1, #1088	; 0x440
   2d82c:	movt	r1, #10
   2d830:	str	r3, [sp]
   2d834:	mov	ip, #1
   2d838:	ldr	r0, [r1, #52]	; 0x34
   2d83c:	mov	r2, r4
   2d840:	str	ip, [sp, #4]
   2d844:	bl	13508 <bfd_wrapped_link_hash_lookup@plt>
   2d848:	cmp	r0, #0
   2d84c:	beq	2d860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199d4>
   2d850:	ldrb	r3, [r0, #12]
   2d854:	sub	r3, r3, #3
   2d858:	cmp	r3, #1
   2d85c:	bls	2ddbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19f30>
   2d860:	mov	r3, #0
   2d864:	str	r3, [r8, #12]
   2d868:	b	2d2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19458>
   2d86c:	movw	r3, #1088	; 0x440
   2d870:	movt	r3, #10
   2d874:	ldr	r1, [r6, #16]
   2d878:	mov	r2, #1
   2d87c:	ldr	r0, [r3, #32]
   2d880:	mov	r3, r4
   2d884:	str	r2, [sp]
   2d888:	bl	13880 <bfd_link_hash_lookup@plt>
   2d88c:	subs	r4, r0, #0
   2d890:	bne	2ca10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b84>
   2d894:	mov	r2, #5
   2d898:	movw	r1, #19292	; 0x4b5c
   2d89c:	movt	r1, #5
   2d8a0:	bl	13688 <dcgettext@plt>
   2d8a4:	ldr	r1, [r6, #16]
   2d8a8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2d8ac:	b	2ca10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18b84>
   2d8b0:	ldr	r1, [r8, #52]	; 0x34
   2d8b4:	ldr	r3, [pc, #-212]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2d8b8:	cmp	r1, r3
   2d8bc:	beq	2cef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1906c>
   2d8c0:	cmp	r0, #0
   2d8c4:	beq	2dbf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d68>
   2d8c8:	ldrd	r2, [r8, #16]
   2d8cc:	orrs	ip, r2, r3
   2d8d0:	bne	2dbf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d68>
   2d8d4:	ldr	r0, [r6, #20]
   2d8d8:	ldr	r3, [r0, #12]
   2d8dc:	cmp	r3, #7
   2d8e0:	beq	2d6d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1984c>
   2d8e4:	bl	14464 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d8>
   2d8e8:	cmp	r0, #0
   2d8ec:	beq	2dbd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d44>
   2d8f0:	ldr	r0, [r8, #32]
   2d8f4:	b	2cef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1906c>
   2d8f8:	ldrd	r2, [r8, #16]
   2d8fc:	movw	r1, #1480	; 0x5c8
   2d900:	movt	r1, #10
   2d904:	cmp	r5, r3
   2d908:	cmpeq	r4, r2
   2d90c:	bhi	2d6d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19844>
   2d910:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d914:	ldrd	r2, [r8, #16]
   2d918:	mov	r1, #0
   2d91c:	str	r1, [r8, #20]
   2d920:	cmp	r5, r3
   2d924:	cmpeq	r4, r2
   2d928:	str	r1, [r8, #28]
   2d92c:	movhi	r3, #0
   2d930:	movls	r3, #1
   2d934:	str	r3, [r8, #16]
   2d938:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d93c:	ldrd	r2, [r8, #16]
   2d940:	mov	r1, #0
   2d944:	str	r1, [r8, #20]
   2d948:	cmp	r5, r3
   2d94c:	cmpeq	r4, r2
   2d950:	str	r1, [r8, #28]
   2d954:	moveq	r3, #0
   2d958:	movne	r3, #1
   2d95c:	str	r3, [r8, #16]
   2d960:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d964:	ldr	r2, [r8, #16]
   2d968:	ldr	r0, [r8, #28]
   2d96c:	sub	r1, r2, #32
   2d970:	lsl	r3, r5, r2
   2d974:	cmp	r7, r0
   2d978:	orr	r3, r3, r4, lsl r1
   2d97c:	rsb	r1, r2, #32
   2d980:	lsl	r2, r4, r2
   2d984:	orr	r3, r3, r4, lsr r1
   2d988:	str	r2, [r8, #16]
   2d98c:	str	r3, [r8, #20]
   2d990:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d994:	b	2c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189e0>
   2d998:	ldrd	r2, [r8, #16]
   2d99c:	mov	r1, #0
   2d9a0:	str	r1, [r8, #20]
   2d9a4:	cmp	r5, r3
   2d9a8:	cmpeq	r4, r2
   2d9ac:	str	r1, [r8, #28]
   2d9b0:	movcs	r3, #0
   2d9b4:	movcc	r3, #1
   2d9b8:	str	r3, [r8, #16]
   2d9bc:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d9c0:	ldr	r1, [r8, #28]
   2d9c4:	ldrd	r2, [r8, #16]
   2d9c8:	cmp	r7, r1
   2d9cc:	eor	r2, r2, r4
   2d9d0:	eor	r3, r3, r5
   2d9d4:	strd	r2, [r8, #16]
   2d9d8:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d9dc:	b	2c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189e0>
   2d9e0:	ldrd	r2, [r8, #16]
   2d9e4:	ldr	r1, [r8, #28]
   2d9e8:	adds	r2, r2, r4
   2d9ec:	adc	r3, r3, r5
   2d9f0:	cmp	r1, r7
   2d9f4:	strd	r2, [r8, #16]
   2d9f8:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2d9fc:	b	2c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189e0>
   2da00:	ldr	r0, [r8]
   2da04:	movw	r1, #1480	; 0x5c8
   2da08:	ldrd	r2, [r8, #16]
   2da0c:	movt	r1, #10
   2da10:	cmp	r0, #0
   2da14:	mov	r0, #2
   2da18:	str	r0, [r8, #112]	; 0x70
   2da1c:	strd	r2, [r8, #72]	; 0x48
   2da20:	beq	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2da24:	ldr	r0, [pc, #-580]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2da28:	ldr	ip, [r1, #52]	; 0x34
   2da2c:	cmp	ip, r0
   2da30:	bne	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2da34:	ldr	ip, [r1, #56]	; 0x38
   2da38:	bic	r1, ip, #4
   2da3c:	cmp	r1, #1
   2da40:	beq	2e00c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a180>
   2da44:	cmp	ip, #4
   2da48:	beq	2e0cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a240>
   2da4c:	cmp	ip, #6
   2da50:	bne	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2da54:	strd	r4, [r8, #16]
   2da58:	cmp	ip, #1
   2da5c:	moveq	r3, #2
   2da60:	streq	r3, [r8, #56]	; 0x38
   2da64:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2da68:	ldrd	r2, [r8, #16]
   2da6c:	mov	r1, #0
   2da70:	str	r1, [r8, #20]
   2da74:	cmp	r5, r3
   2da78:	cmpeq	r4, r2
   2da7c:	str	r1, [r8, #28]
   2da80:	movcc	r3, #0
   2da84:	movcs	r3, #1
   2da88:	str	r3, [r8, #16]
   2da8c:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2da90:	ldrd	r6, [r8, #16]
   2da94:	cmp	r7, #0
   2da98:	cmpeq	r6, #1
   2da9c:	bls	2dacc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c40>
   2daa0:	subs	r0, r6, #1
   2daa4:	mov	r3, r7
   2daa8:	sbc	r1, r7, #0
   2daac:	adds	r0, r0, r4
   2dab0:	adc	r1, r1, r5
   2dab4:	mov	r2, r6
   2dab8:	bl	3fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bfdc>
   2dabc:	mul	r3, r0, r7
   2dac0:	umull	r4, r5, r0, r6
   2dac4:	mla	r1, r1, r6, r3
   2dac8:	add	r5, r1, r5
   2dacc:	strd	r4, [r8, #16]
   2dad0:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2dad4:	orrs	r0, r4, r5
   2dad8:	moveq	r3, #0
   2dadc:	moveq	r2, r3
   2dae0:	beq	2d690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19804>
   2dae4:	b	2d678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x197ec>
   2dae8:	movw	r0, #18944	; 0x4a00
   2daec:	mov	r1, #644	; 0x284
   2daf0:	b	2cce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18e58>
   2daf4:	ldrd	r2, [r8, #16]
   2daf8:	movw	r9, #1480	; 0x5c8
   2dafc:	movt	r9, #10
   2db00:	orrs	ip, r2, r3
   2db04:	beq	2dd10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19e84>
   2db08:	mov	r0, r4
   2db0c:	mov	r1, r5
   2db10:	bl	3fe20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bf94>
   2db14:	strd	r2, [r9, #16]
   2db18:	ldr	r3, [r8, #28]
   2db1c:	cmp	r7, r3
   2db20:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2db24:	b	2c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189e0>
   2db28:	ldr	r1, [r8, #28]
   2db2c:	ldrd	r2, [r8, #16]
   2db30:	cmp	r7, r1
   2db34:	orr	r2, r2, r4
   2db38:	orr	r3, r3, r5
   2db3c:	strd	r2, [r8, #16]
   2db40:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2db44:	b	2c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189e0>
   2db48:	ldrd	r2, [r8, #16]
   2db4c:	movw	r9, #1480	; 0x5c8
   2db50:	movt	r9, #10
   2db54:	orrs	r0, r2, r3
   2db58:	beq	2dd3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19eb0>
   2db5c:	mov	r0, r4
   2db60:	mov	r1, r5
   2db64:	bl	3fe20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bf94>
   2db68:	strd	r0, [r9, #16]
   2db6c:	b	2db18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c8c>
   2db70:	ldr	r2, [r8, #20]
   2db74:	ldr	r3, [r8, #16]
   2db78:	ldr	r1, [r8, #28]
   2db7c:	mul	r2, r4, r2
   2db80:	cmp	r7, r1
   2db84:	mla	r2, r3, r5, r2
   2db88:	umull	r4, r5, r3, r4
   2db8c:	add	r5, r2, r5
   2db90:	strd	r4, [r8, #16]
   2db94:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2db98:	b	2c86c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x189e0>
   2db9c:	movw	r1, #19640	; 0x4cb8
   2dba0:	movt	r1, #5
   2dba4:	mov	r0, r9
   2dba8:	mov	r2, #5
   2dbac:	bl	13688 <dcgettext@plt>
   2dbb0:	mov	r1, r6
   2dbb4:	ldr	r2, [r6, #16]
   2dbb8:	add	sp, sp, #20
   2dbbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dbc0:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2dbc4:	str	r7, [r8, #28]
   2dbc8:	mov	r7, r3
   2dbcc:	b	2c814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18988>
   2dbd0:	ldr	r3, [r6, #20]
   2dbd4:	ldr	r2, [r3, #12]
   2dbd8:	cmp	r2, #0
   2dbdc:	bne	2e130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a2a4>
   2dbe0:	ldr	r2, [r3]
   2dbe4:	cmp	r2, #43	; 0x2b
   2dbe8:	beq	2e0d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a248>
   2dbec:	ldr	r1, [r8, #52]	; 0x34
   2dbf0:	ldr	r0, [r8, #32]
   2dbf4:	ldr	r3, [r1, #20]
   2dbf8:	orr	r3, r3, #2097152	; 0x200000
   2dbfc:	str	r3, [r1, #20]
   2dc00:	b	2cef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1906c>
   2dc04:	strd	r4, [r8, #40]	; 0x28
   2dc08:	strd	r4, [r0]
   2dc0c:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2dc10:	ldr	r1, [r6, #16]
   2dc14:	movw	r0, #124	; 0x7c
   2dc18:	mov	r2, r9
   2dc1c:	movt	r0, #10
   2dc20:	mov	r3, r9
   2dc24:	bl	139f4 <bfd_hash_lookup@plt>
   2dc28:	cmp	r0, #0
   2dc2c:	beq	2dfcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a140>
   2dc30:	ldrb	r2, [r0, #16]
   2dc34:	ands	r1, r2, r4
   2dc38:	movne	r2, r4
   2dc3c:	bne	2d23c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193b0>
   2dc40:	movw	r3, #65520	; 0xfff0
   2dc44:	movt	r3, #9
   2dc48:	ubfx	r2, r2, #2, #1
   2dc4c:	mov	r9, r1
   2dc50:	ldr	r3, [r3]
   2dc54:	and	r3, r3, r4
   2dc58:	subs	r3, r2, r3
   2dc5c:	rsbs	r2, r3, #0
   2dc60:	adcs	r2, r2, r3
   2dc64:	b	2d23c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193b0>
   2dc68:	ldr	ip, [r3, #20]
   2dc6c:	ldr	r0, [ip, #88]	; 0x58
   2dc70:	cmp	r0, #0
   2dc74:	beq	2df70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a0e4>
   2dc78:	ldr	r2, [pc, #-1176]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2dc7c:	cmp	r0, r2
   2dc80:	beq	2df38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a0ac>
   2dc84:	ldrd	r2, [r3, #24]
   2dc88:	mov	r1, #0
   2dc8c:	ldrd	r4, [ip, #80]	; 0x50
   2dc90:	mov	ip, #1
   2dc94:	str	r0, [r8, #28]
   2dc98:	adds	r2, r2, r4
   2dc9c:	str	ip, [r8, #32]
   2dca0:	adc	r3, r3, r5
   2dca4:	str	r1, [r8, #24]
   2dca8:	strd	r2, [r8, #16]
   2dcac:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2dcb0:	movw	r1, #19436	; 0x4bec
   2dcb4:	mov	r0, #0
   2dcb8:	movt	r1, #5
   2dcbc:	mov	r2, #5
   2dcc0:	b	2dbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d20>
   2dcc4:	ldr	r3, [r4, #-16]
   2dcc8:	cmp	r3, #4
   2dccc:	movweq	r1, #19492	; 0x4c24
   2dcd0:	moveq	r2, #5
   2dcd4:	movteq	r1, #5
   2dcd8:	bne	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2dcdc:	b	2dbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d20>
   2dce0:	ldr	r5, [ip, #52]	; 0x34
   2dce4:	mov	r4, #1
   2dce8:	ldrd	r2, [ip, #40]	; 0x28
   2dcec:	str	r1, [ip, #24]
   2dcf0:	ldrd	r0, [r5, #32]
   2dcf4:	str	r5, [ip, #28]
   2dcf8:	subs	r2, r2, r0
   2dcfc:	sbc	r3, r3, r1
   2dd00:	str	r4, [ip, #8]
   2dd04:	strd	r2, [ip, #16]
   2dd08:	str	r4, [ip, #32]
   2dd0c:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2dd10:	ldr	r3, [r9]
   2dd14:	cmp	r3, #1
   2dd18:	beq	2db18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c8c>
   2dd1c:	mov	r2, #5
   2dd20:	movw	r1, #19020	; 0x4a4c
   2dd24:	mov	r0, #0
   2dd28:	movt	r1, #5
   2dd2c:	bl	13688 <dcgettext@plt>
   2dd30:	ldr	r1, [r6, #20]
   2dd34:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2dd38:	b	2db18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c8c>
   2dd3c:	ldr	r3, [r9]
   2dd40:	cmp	r3, #1
   2dd44:	beq	2db18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c8c>
   2dd48:	mov	r2, #5
   2dd4c:	movw	r1, #19040	; 0x4a60
   2dd50:	mov	r0, #0
   2dd54:	movt	r1, #5
   2dd58:	bl	13688 <dcgettext@plt>
   2dd5c:	ldr	r1, [r6, #20]
   2dd60:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2dd64:	b	2db18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19c8c>
   2dd68:	ldr	r3, [r4, #-16]
   2dd6c:	cmp	r3, #4
   2dd70:	bne	2dd90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19f04>
   2dd74:	mov	r2, #5
   2dd78:	movw	r1, #19492	; 0x4c24
   2dd7c:	movt	r1, #5
   2dd80:	bl	13688 <dcgettext@plt>
   2dd84:	mov	r1, r6
   2dd88:	ldr	r2, [r6, #16]
   2dd8c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2dd90:	movw	r1, #1480	; 0x5c8
   2dd94:	movt	r1, #10
   2dd98:	mov	r0, #1
   2dd9c:	mov	r2, #0
   2dda0:	mov	r3, #0
   2dda4:	str	r0, [r1, #32]
   2dda8:	strd	r2, [r1, #16]
   2ddac:	mov	r0, #0
   2ddb0:	str	r0, [r1, #24]
   2ddb4:	str	r0, [r1, #28]
   2ddb8:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2ddbc:	ldr	r2, [r0, #20]
   2ddc0:	ldr	r3, [pc, #-1504]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2ddc4:	cmp	r2, r3
   2ddc8:	bne	2d860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199d4>
   2ddcc:	mov	r2, #0
   2ddd0:	movw	r0, #124	; 0x7c
   2ddd4:	mov	r3, r2
   2ddd8:	movt	r0, #10
   2dddc:	ldr	r1, [r6, #16]
   2dde0:	bl	139f4 <bfd_hash_lookup@plt>
   2dde4:	cmp	r0, #0
   2dde8:	beq	2d860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199d4>
   2ddec:	movw	r3, #65520	; 0xfff0
   2ddf0:	movt	r3, #9
   2ddf4:	ldrb	r2, [r0, #16]
   2ddf8:	ldr	r3, [r3]
   2ddfc:	ubfx	r2, r2, #2, #1
   2de00:	and	r3, r3, #1
   2de04:	cmp	r2, r3
   2de08:	bne	2d860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x199d4>
   2de0c:	b	2d2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19458>
   2de10:	movw	r1, #19548	; 0x4c5c
   2de14:	mov	r2, #5
   2de18:	movt	r1, #5
   2de1c:	b	2dbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d20>
   2de20:	ldr	r3, [r3, #28]
   2de24:	mov	r1, #1
   2de28:	ldr	ip, [pc, #-1608]	; 2d7e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1995c>
   2de2c:	str	r0, [r8, #24]
   2de30:	ldrd	r2, [r3, #40]	; 0x28
   2de34:	str	ip, [r8, #28]
   2de38:	str	r1, [r8, #32]
   2de3c:	b	2d554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x196c8>
   2de40:	movw	r2, #1088	; 0x440
   2de44:	movt	r2, #10
   2de48:	ldrd	r4, [r3, #48]	; 0x30
   2de4c:	ldr	r0, [r2, #52]	; 0x34
   2de50:	bl	139b8 <bfd_octets_per_byte@plt>
   2de54:	mov	r3, r9
   2de58:	mov	r1, r5
   2de5c:	mov	r2, r0
   2de60:	mov	r0, r4
   2de64:	bl	3fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bfdc>
   2de68:	mov	ip, r0
   2de6c:	mov	r2, r1
   2de70:	b	2ce58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18fcc>
   2de74:	mov	r2, r0
   2de78:	mov	r9, r0
   2de7c:	b	2d23c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193b0>
   2de80:	cmp	r5, #0
   2de84:	cmpeq	r4, #1
   2de88:	ldrd	sl, [r8, #16]
   2de8c:	ldrd	r6, [r8, #40]	; 0x28
   2de90:	bls	2e000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a174>
   2de94:	subs	r0, r6, #1
   2de98:	mov	r2, r4
   2de9c:	sbc	r1, r7, #0
   2dea0:	adds	r0, r0, r4
   2dea4:	mov	r3, r5
   2dea8:	adc	r1, r1, r5
   2deac:	bl	3fe68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bfdc>
   2deb0:	mul	ip, r0, r5
   2deb4:	umull	r2, r3, r0, r4
   2deb8:	mla	r1, r1, r4, ip
   2debc:	add	r3, r1, r3
   2dec0:	ldr	r9, [r8, #56]	; 0x38
   2dec4:	movw	ip, #1480	; 0x5c8
   2dec8:	movt	ip, #10
   2decc:	strd	r2, [r8, #16]
   2ded0:	cmp	r9, #4
   2ded4:	ldrdeq	r2, [ip, #64]	; 0x40
   2ded8:	strdeq	r2, [ip, #16]
   2dedc:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2dee0:	cmp	r9, #5
   2dee4:	beq	2e090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a204>
   2dee8:	subs	r0, r4, #1
   2deec:	sbc	r1, r5, #0
   2def0:	and	r6, r6, r0
   2def4:	adds	r2, r2, r6
   2def8:	and	r7, r7, r1
   2defc:	adc	r3, r3, r7
   2df00:	cmp	r9, #6
   2df04:	strd	r2, [ip, #16]
   2df08:	beq	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2df0c:	cmp	r9, #0
   2df10:	bne	2d188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x192fc>
   2df14:	strd	r2, [ip, #64]	; 0x40
   2df18:	mov	r1, #1
   2df1c:	mov	r2, #0
   2df20:	mov	r3, #0
   2df24:	strd	sl, [ip, #96]	; 0x60
   2df28:	strd	r4, [ip, #104]	; 0x68
   2df2c:	str	r1, [ip, #56]	; 0x38
   2df30:	strd	r2, [ip, #80]	; 0x50
   2df34:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2df38:	ldr	r2, [r8, #52]	; 0x34
   2df3c:	cmp	r2, r0
   2df40:	beq	2dfd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a14c>
   2df44:	ldrd	r2, [r3, #24]
   2df48:	mov	r4, #1
   2df4c:	ldrd	r0, [ip, #80]	; 0x50
   2df50:	mov	ip, #0
   2df54:	str	r4, [r8, #32]
   2df58:	adds	r2, r2, r0
   2df5c:	str	ip, [r8, #24]
   2df60:	adc	r3, r3, r1
   2df64:	str	ip, [r8, #28]
   2df68:	strd	r2, [r8, #16]
   2df6c:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2df70:	ldr	r4, [r8]
   2df74:	movw	r1, #1480	; 0x5c8
   2df78:	movt	r1, #10
   2df7c:	cmp	r4, #1
   2df80:	bne	2dff0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a164>
   2df84:	ldrd	r2, [r3, #24]
   2df88:	str	r4, [r1, #32]
   2df8c:	str	r0, [r1, #24]
   2df90:	strd	r2, [r1, #16]
   2df94:	str	ip, [r1, #28]
   2df98:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2df9c:	ldrd	r2, [r8, #16]
   2dfa0:	mov	r1, #3
   2dfa4:	str	r1, [r8, #56]	; 0x38
   2dfa8:	strd	r2, [r8, #88]	; 0x58
   2dfac:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2dfb0:	mov	r2, #5
   2dfb4:	movw	r1, #10224	; 0x27f0
   2dfb8:	movt	r1, #5
   2dfbc:	bl	13688 <dcgettext@plt>
   2dfc0:	add	sp, sp, #20
   2dfc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dfc8:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2dfcc:	mov	r2, r4
   2dfd0:	mov	r9, r0
   2dfd4:	b	2d23c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x193b0>
   2dfd8:	movw	r2, #1336	; 0x538
   2dfdc:	movt	r2, #10
   2dfe0:	ldr	r2, [r2, #64]	; 0x40
   2dfe4:	cmp	r2, #0
   2dfe8:	beq	2dc84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19df8>
   2dfec:	b	2df44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a0b8>
   2dff0:	movw	r1, #19376	; 0x4bb0
   2dff4:	mov	r2, #5
   2dff8:	movt	r1, #5
   2dffc:	b	2dbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d20>
   2e000:	mov	r2, r6
   2e004:	mov	r3, r7
   2e008:	b	2dec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a034>
   2e00c:	subs	r1, ip, #4
   2e010:	rsbs	r6, r1, #0
   2e014:	adcs	r6, r6, r1
   2e018:	cmp	ip, #4
   2e01c:	cmpne	ip, #1
   2e020:	bne	2da54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bc8>
   2e024:	adds	r0, r4, r2
   2e028:	movw	r9, #1480	; 0x5c8
   2e02c:	adc	r1, r5, r3
   2e030:	cmp	r6, #0
   2e034:	strd	r0, [r8, #80]	; 0x50
   2e038:	movt	r9, #10
   2e03c:	beq	2da54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bc8>
   2e040:	ldrd	sl, [r9, #96]	; 0x60
   2e044:	subs	r6, sl, #1
   2e048:	sbc	r7, fp, #0
   2e04c:	and	r6, r6, r0
   2e050:	and	r7, r7, r1
   2e054:	orrs	r7, r6, r7
   2e058:	beq	2da54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bc8>
   2e05c:	adds	r0, r0, sl
   2e060:	adc	r1, r1, fp
   2e064:	rsbs	sl, sl, #0
   2e068:	rsc	fp, fp, #0
   2e06c:	subs	r0, r0, #1
   2e070:	sbc	r1, r1, #0
   2e074:	and	r0, r0, sl
   2e078:	and	r1, r1, fp
   2e07c:	strd	r0, [r9, #80]	; 0x50
   2e080:	subs	r2, r0, r2
   2e084:	sbc	r3, r1, r3
   2e088:	strd	r2, [r9, #16]
   2e08c:	b	2da58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19bcc>
   2e090:	cmp	r5, fp
   2e094:	cmpeq	r4, sl
   2e098:	bls	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2e09c:	adds	r6, r6, sl
   2e0a0:	adc	r7, r7, fp
   2e0a4:	subs	r4, r4, sl
   2e0a8:	sbc	r5, r5, fp
   2e0ac:	subs	r0, r6, #1
   2e0b0:	sbc	r1, r7, #0
   2e0b4:	and	r0, r0, r4
   2e0b8:	adds	r2, r2, r0
   2e0bc:	and	r1, r1, r5
   2e0c0:	adc	r3, r3, r1
   2e0c4:	strd	r2, [ip, #16]
   2e0c8:	b	2c770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x188e4>
   2e0cc:	mov	r6, #1
   2e0d0:	b	2e024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a198>
   2e0d4:	ldr	r2, [r3, #16]
   2e0d8:	ldr	r1, [r2, #12]
   2e0dc:	cmp	r1, #3
   2e0e0:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e0e4:	ldr	r0, [r2]
   2e0e8:	add	r1, r1, #256	; 0x100
   2e0ec:	cmp	r0, r1
   2e0f0:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e0f4:	ldr	r2, [r2, #16]
   2e0f8:	ldrb	r1, [r2]
   2e0fc:	cmp	r1, #46	; 0x2e
   2e100:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e104:	ldrb	r2, [r2, #1]
   2e108:	cmp	r2, #0
   2e10c:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e110:	ldr	r0, [r3, #20]
   2e114:	ldr	r3, [r0, #12]
   2e118:	cmp	r3, #7
   2e11c:	beq	2e1f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a36c>
   2e120:	bl	14464 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x5d8>
   2e124:	cmp	r0, #0
   2e128:	bne	2d8f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a64>
   2e12c:	ldr	r3, [r6, #20]
   2e130:	ldr	r2, [r3, #12]
   2e134:	cmp	r2, #2
   2e138:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e13c:	ldr	r1, [r3]
   2e140:	movw	r2, #279	; 0x117
   2e144:	cmp	r1, r2
   2e148:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e14c:	ldr	r1, [r3, #16]
   2e150:	ldr	r3, [r1, #12]
   2e154:	cmp	r3, #1
   2e158:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e15c:	ldr	r3, [r1, #16]
   2e160:	ldr	r2, [r3, #12]
   2e164:	cmp	r2, #0
   2e168:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e16c:	ldr	r0, [r3]
   2e170:	movw	r2, #271	; 0x10f
   2e174:	cmp	r0, r2
   2e178:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e17c:	ldr	r2, [r3, #16]
   2e180:	ldr	r0, [r2, #12]
   2e184:	cmp	r0, #3
   2e188:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e18c:	ldr	ip, [r2]
   2e190:	add	r0, r0, #256	; 0x100
   2e194:	cmp	ip, r0
   2e198:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e19c:	ldr	r2, [r2, #16]
   2e1a0:	ldrb	r0, [r2]
   2e1a4:	cmp	r0, #46	; 0x2e
   2e1a8:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e1ac:	ldrb	r2, [r2, #1]
   2e1b0:	cmp	r2, #0
   2e1b4:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e1b8:	ldr	r3, [r3, #20]
   2e1bc:	ldr	r2, [r3, #12]
   2e1c0:	cmp	r2, #7
   2e1c4:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e1c8:	ldrd	r2, [r3, #16]
   2e1cc:	orrs	r9, r2, r3
   2e1d0:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e1d4:	ldr	r3, [r1, #24]
   2e1d8:	ldr	r2, [r3, #12]
   2e1dc:	cmp	r2, #7
   2e1e0:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e1e4:	ldrd	r2, [r3, #16]
   2e1e8:	cmp	r3, #0
   2e1ec:	cmpeq	r2, #1
   2e1f0:	bne	2dbec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19d60>
   2e1f4:	b	2d8f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a64>
   2e1f8:	ldrd	r2, [r0, #16]
   2e1fc:	orrs	r7, r2, r3
   2e200:	bne	2e120 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a294>
   2e204:	b	2d8f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x19a64>
   2e208:	push	{r4, r5, r6, lr}
   2e20c:	mov	r4, r0
   2e210:	mov	r0, #32
   2e214:	mov	r5, r1
   2e218:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e21c:	movw	r3, #258	; 0x102
   2e220:	str	r3, [r0]
   2e224:	mov	r6, r0
   2e228:	bl	1a5b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x672c>
   2e22c:	movw	r3, #62396	; 0xf3bc
   2e230:	movt	r3, #9
   2e234:	mov	r1, #0
   2e238:	mov	r2, #7
   2e23c:	strd	r4, [r6, #16]
   2e240:	ldr	r3, [r3]
   2e244:	str	r1, [r6, #24]
   2e248:	str	r2, [r6, #12]
   2e24c:	str	r3, [r6, #4]
   2e250:	str	r0, [r6, #8]
   2e254:	mov	r0, r6
   2e258:	pop	{r4, r5, r6, pc}
   2e25c:	push	{r3, r4, r5, r6, r7, lr}
   2e260:	mov	r4, r0
   2e264:	mov	r0, #32
   2e268:	mov	r7, r2
   2e26c:	mov	r5, r1
   2e270:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e274:	movw	r3, #258	; 0x102
   2e278:	str	r3, [r0]
   2e27c:	mov	r6, r0
   2e280:	bl	1a5b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x672c>
   2e284:	movw	r3, #62396	; 0xf3bc
   2e288:	movt	r3, #9
   2e28c:	mov	r2, #7
   2e290:	strd	r4, [r6, #16]
   2e294:	ldr	r3, [r3]
   2e298:	str	r7, [r6, #24]
   2e29c:	str	r2, [r6, #12]
   2e2a0:	str	r3, [r6, #4]
   2e2a4:	str	r0, [r6, #8]
   2e2a8:	mov	r0, r6
   2e2ac:	pop	{r3, r4, r5, r6, r7, pc}
   2e2b0:	push	{r3, r4, r5, r6, r7, lr}
   2e2b4:	mov	r7, r0
   2e2b8:	mov	r0, #32
   2e2bc:	mov	r4, r2
   2e2c0:	mov	r5, r3
   2e2c4:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e2c8:	movw	r3, #365	; 0x16d
   2e2cc:	str	r3, [r0]
   2e2d0:	mov	r6, r0
   2e2d4:	bl	1a5b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x672c>
   2e2d8:	movw	r3, #62396	; 0xf3bc
   2e2dc:	movt	r3, #9
   2e2e0:	mov	r2, #9
   2e2e4:	str	r7, [r6, #16]
   2e2e8:	ldr	r3, [r3]
   2e2ec:	strd	r4, [r6, #24]
   2e2f0:	str	r2, [r6, #12]
   2e2f4:	str	r3, [r6, #4]
   2e2f8:	str	r0, [r6, #8]
   2e2fc:	mov	r0, r6
   2e300:	pop	{r3, r4, r5, r6, r7, pc}
   2e304:	push	{r4, r5}
   2e308:	movw	r3, #1480	; 0x5c8
   2e30c:	ldrd	r4, [r2]
   2e310:	movt	r3, #10
   2e314:	mov	ip, #0
   2e318:	str	r2, [r3, #48]	; 0x30
   2e31c:	strd	r4, [r3, #40]	; 0x28
   2e320:	pop	{r4, r5}
   2e324:	str	r1, [r3, #52]	; 0x34
   2e328:	str	ip, [r3, #8]
   2e32c:	b	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2e330:	push	{r4}		; (str r4, [sp, #-4]!)
   2e334:	movw	r1, #1480	; 0x5c8
   2e338:	ldr	r4, [pc, #36]	; 2e364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a4d8>
   2e33c:	movt	r1, #10
   2e340:	mov	ip, #0
   2e344:	mov	r2, #0
   2e348:	mov	r3, #0
   2e34c:	str	ip, [r1, #8]
   2e350:	str	r4, [r1, #52]	; 0x34
   2e354:	pop	{r4}		; (ldr r4, [sp], #4)
   2e358:	strd	r2, [r1, #40]	; 0x28
   2e35c:	str	ip, [r1, #48]	; 0x30
   2e360:	b	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2e364:			; <UNDEFINED> instruction: 0x0009fab8
   2e368:	push	{r4, r5, r6, r7, r8, r9, lr}
   2e36c:	movw	r7, #63248	; 0xf710
   2e370:	movt	r7, #9
   2e374:	sub	sp, sp, #44	; 0x2c
   2e378:	ldr	r8, [r1, #8]
   2e37c:	movw	r6, #1480	; 0x5c8
   2e380:	ldr	lr, [r1, #4]
   2e384:	movt	r6, #10
   2e388:	ldr	ip, [pc, #176]	; 2e440 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a5b4>
   2e38c:	mov	r3, #0
   2e390:	ldr	r9, [r7]
   2e394:	mov	r4, #0
   2e398:	str	r0, [sp]
   2e39c:	mov	r0, sp
   2e3a0:	str	r3, [r6, #8]
   2e3a4:	mov	r5, #0
   2e3a8:	str	r3, [r6, #48]	; 0x30
   2e3ac:	str	r3, [sp, #12]
   2e3b0:	str	r1, [sp, #16]
   2e3b4:	str	r2, [sp, #20]
   2e3b8:	str	r9, [sp, #36]	; 0x24
   2e3bc:	str	r8, [sp, #8]
   2e3c0:	str	lr, [sp, #4]
   2e3c4:	strd	r4, [r6, #40]	; 0x28
   2e3c8:	str	ip, [r6, #52]	; 0x34
   2e3cc:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2e3d0:	ldr	r3, [r6, #32]
   2e3d4:	cmp	r3, #0
   2e3d8:	bne	2e42c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a5a0>
   2e3dc:	mov	r0, #24
   2e3e0:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e3e4:	mov	ip, sp
   2e3e8:	mov	r4, r0
   2e3ec:	mov	r5, r0
   2e3f0:	ldm	ip!, {r0, r1, r2, r3}
   2e3f4:	str	r0, [r4]
   2e3f8:	str	r1, [r4, #4]
   2e3fc:	str	r2, [r4, #8]
   2e400:	str	r3, [r4, #12]
   2e404:	ldm	ip!, {r0, r1}
   2e408:	str	r0, [r4, #16]
   2e40c:	str	r1, [r4, #20]
   2e410:	ldr	r2, [sp, #36]	; 0x24
   2e414:	mov	r0, r5
   2e418:	ldr	r3, [r7]
   2e41c:	cmp	r2, r3
   2e420:	bne	2e43c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a5b0>
   2e424:	add	sp, sp, #44	; 0x2c
   2e428:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e42c:	ldrd	r0, [r6, #16]
   2e430:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   2e434:	mov	r5, r0
   2e438:	b	2e410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a584>
   2e43c:	bl	13694 <__stack_chk_fail@plt>
   2e440:			; <UNDEFINED> instruction: 0x0009fab8
   2e444:	push	{r4, r5, r6, r7, r8, r9, lr}
   2e448:	movw	r7, #63248	; 0xf710
   2e44c:	movt	r7, #9
   2e450:	sub	sp, sp, #44	; 0x2c
   2e454:	ldr	r8, [r1, #8]
   2e458:	movw	r6, #1480	; 0x5c8
   2e45c:	ldr	lr, [r1, #4]
   2e460:	movt	r6, #10
   2e464:	ldr	ip, [pc, #188]	; 2e528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a69c>
   2e468:	mov	r4, #0
   2e46c:	ldr	r9, [r7]
   2e470:	mov	r5, #0
   2e474:	str	r0, [sp]
   2e478:	mov	r0, sp
   2e47c:	str	r2, [sp, #20]
   2e480:	mov	r2, #0
   2e484:	str	r3, [sp, #24]
   2e488:	mov	r3, #1
   2e48c:	str	r1, [sp, #16]
   2e490:	str	r3, [sp, #12]
   2e494:	str	r9, [sp, #36]	; 0x24
   2e498:	str	r8, [sp, #8]
   2e49c:	str	lr, [sp, #4]
   2e4a0:	strd	r4, [r6, #40]	; 0x28
   2e4a4:	str	ip, [r6, #52]	; 0x34
   2e4a8:	str	r2, [r6, #8]
   2e4ac:	str	r2, [r6, #48]	; 0x30
   2e4b0:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2e4b4:	ldr	r3, [r6, #32]
   2e4b8:	cmp	r3, #0
   2e4bc:	bne	2e514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a688>
   2e4c0:	mov	r0, #28
   2e4c4:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e4c8:	mov	ip, sp
   2e4cc:	mov	r4, r0
   2e4d0:	mov	r5, r0
   2e4d4:	ldm	ip!, {r0, r1, r2, r3}
   2e4d8:	str	r0, [r4]
   2e4dc:	str	r1, [r4, #4]
   2e4e0:	str	r2, [r4, #8]
   2e4e4:	str	r3, [r4, #12]
   2e4e8:	ldm	ip!, {r0, r1, r2}
   2e4ec:	str	r0, [r4, #16]
   2e4f0:	str	r1, [r4, #20]
   2e4f4:	str	r2, [r4, #24]
   2e4f8:	ldr	r2, [sp, #36]	; 0x24
   2e4fc:	mov	r0, r5
   2e500:	ldr	r3, [r7]
   2e504:	cmp	r2, r3
   2e508:	bne	2e524 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a698>
   2e50c:	add	sp, sp, #44	; 0x2c
   2e510:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e514:	ldrd	r0, [r6, #16]
   2e518:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   2e51c:	mov	r5, r0
   2e520:	b	2e4f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a66c>
   2e524:	bl	13694 <__stack_chk_fail@plt>
   2e528:			; <UNDEFINED> instruction: 0x0009fab8
   2e52c:	push	{r4, r5, r6, r7, lr}
   2e530:	movw	r5, #63248	; 0xf710
   2e534:	movt	r5, #9
   2e538:	sub	sp, sp, #44	; 0x2c
   2e53c:	ldr	ip, [r1, #8]
   2e540:	movw	r4, #1480	; 0x5c8
   2e544:	ldr	r6, [r1, #4]
   2e548:	movt	r4, #10
   2e54c:	ldr	lr, [pc, #172]	; 2e600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a774>
   2e550:	mov	r3, #0
   2e554:	ldr	r7, [r5]
   2e558:	mov	r2, #0
   2e55c:	str	r0, [sp]
   2e560:	mov	r0, sp
   2e564:	str	r1, [sp, #16]
   2e568:	mov	r1, #0
   2e56c:	str	ip, [sp, #8]
   2e570:	mov	ip, #2
   2e574:	strd	r2, [r4, #40]	; 0x28
   2e578:	str	r7, [sp, #36]	; 0x24
   2e57c:	str	r6, [sp, #4]
   2e580:	str	lr, [r4, #52]	; 0x34
   2e584:	str	r1, [r4, #8]
   2e588:	str	r1, [r4, #48]	; 0x30
   2e58c:	str	ip, [sp, #12]
   2e590:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2e594:	ldr	r3, [r4, #32]
   2e598:	cmp	r3, #0
   2e59c:	bne	2e5ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a760>
   2e5a0:	mov	r0, #20
   2e5a4:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e5a8:	mov	ip, sp
   2e5ac:	mov	r4, r0
   2e5b0:	mov	r6, r0
   2e5b4:	ldm	ip!, {r0, r1, r2, r3}
   2e5b8:	str	r0, [r4]
   2e5bc:	str	r1, [r4, #4]
   2e5c0:	str	r2, [r4, #8]
   2e5c4:	str	r3, [r4, #12]
   2e5c8:	ldr	r0, [ip]
   2e5cc:	str	r0, [r4, #16]
   2e5d0:	ldr	r2, [sp, #36]	; 0x24
   2e5d4:	mov	r0, r6
   2e5d8:	ldr	r3, [r5]
   2e5dc:	cmp	r2, r3
   2e5e0:	bne	2e5fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a770>
   2e5e4:	add	sp, sp, #44	; 0x2c
   2e5e8:	pop	{r4, r5, r6, r7, pc}
   2e5ec:	ldrd	r0, [r4, #16]
   2e5f0:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   2e5f4:	mov	r6, r0
   2e5f8:	b	2e5d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a744>
   2e5fc:	bl	13694 <__stack_chk_fail@plt>
   2e600:			; <UNDEFINED> instruction: 0x0009fab8
   2e604:	push	{r4, r5, r6, r7, lr}
   2e608:	movw	r5, #63248	; 0xf710
   2e60c:	movt	r5, #9
   2e610:	sub	sp, sp, #44	; 0x2c
   2e614:	mov	r6, r1
   2e618:	movw	r4, #1480	; 0x5c8
   2e61c:	ldr	r3, [r5]
   2e620:	movt	r4, #10
   2e624:	str	r0, [sp]
   2e628:	str	r3, [sp, #36]	; 0x24
   2e62c:	bl	1a5b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x672c>
   2e630:	movw	ip, #62396	; 0xf3bc
   2e634:	movt	ip, #9
   2e638:	ldr	lr, [pc, #164]	; 2e6e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a858>
   2e63c:	mov	r3, #0
   2e640:	ldr	r7, [ip]
   2e644:	mov	r2, #0
   2e648:	mov	ip, #0
   2e64c:	mov	r1, #3
   2e650:	strd	r2, [r4, #40]	; 0x28
   2e654:	str	r6, [sp, #16]
   2e658:	str	r7, [sp, #4]
   2e65c:	str	lr, [r4, #52]	; 0x34
   2e660:	str	ip, [r4, #8]
   2e664:	str	ip, [r4, #48]	; 0x30
   2e668:	str	r1, [sp, #12]
   2e66c:	str	r0, [sp, #8]
   2e670:	mov	r0, sp
   2e674:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2e678:	ldr	r3, [r4, #32]
   2e67c:	cmp	r3, #0
   2e680:	bne	2e6d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a844>
   2e684:	mov	r0, #20
   2e688:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e68c:	mov	ip, sp
   2e690:	mov	r4, r0
   2e694:	mov	r6, r0
   2e698:	ldm	ip!, {r0, r1, r2, r3}
   2e69c:	str	r0, [r4]
   2e6a0:	str	r1, [r4, #4]
   2e6a4:	str	r2, [r4, #8]
   2e6a8:	str	r3, [r4, #12]
   2e6ac:	ldr	r0, [ip]
   2e6b0:	str	r0, [r4, #16]
   2e6b4:	ldr	r2, [sp, #36]	; 0x24
   2e6b8:	mov	r0, r6
   2e6bc:	ldr	r3, [r5]
   2e6c0:	cmp	r2, r3
   2e6c4:	bne	2e6e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a854>
   2e6c8:	add	sp, sp, #44	; 0x2c
   2e6cc:	pop	{r4, r5, r6, r7, pc}
   2e6d0:	ldrd	r0, [r4, #16]
   2e6d4:	bl	2e208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a37c>
   2e6d8:	mov	r6, r0
   2e6dc:	b	2e6b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a828>
   2e6e0:	bl	13694 <__stack_chk_fail@plt>
   2e6e4:			; <UNDEFINED> instruction: 0x0009fab8
   2e6e8:	push	{r4, r5, r6, r7, r8, lr}
   2e6ec:	mov	r5, r0
   2e6f0:	mov	r0, #32
   2e6f4:	mov	r4, r1
   2e6f8:	mov	r7, r2
   2e6fc:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e700:	ldr	r8, [r4, #8]
   2e704:	mov	r6, #61	; 0x3d
   2e708:	ldr	r2, [r4, #4]
   2e70c:	mov	ip, #4
   2e710:	mov	r1, #0
   2e714:	str	r5, [r0, #16]
   2e718:	stmib	r0, {r2, r8}
   2e71c:	str	r4, [r0, #20]
   2e720:	str	r7, [r0, #28]
   2e724:	str	r6, [r0]
   2e728:	str	ip, [r0, #12]
   2e72c:	str	r1, [r0, #24]
   2e730:	pop	{r4, r5, r6, r7, r8, pc}
   2e734:	push	{r3, r4, r5, r6, r7, lr}
   2e738:	mov	r5, r0
   2e73c:	mov	r0, #32
   2e740:	mov	r4, r1
   2e744:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e748:	ldr	r2, [r4, #8]
   2e74c:	ldr	r7, [r4, #4]
   2e750:	mov	r6, #61	; 0x3d
   2e754:	mov	ip, #4
   2e758:	mov	r1, #1
   2e75c:	str	r2, [r0, #8]
   2e760:	mov	r2, #0
   2e764:	str	r5, [r0, #16]
   2e768:	str	r7, [r0, #4]
   2e76c:	str	r4, [r0, #20]
   2e770:	str	r6, [r0]
   2e774:	str	ip, [r0, #12]
   2e778:	str	r1, [r0, #24]
   2e77c:	str	r2, [r0, #28]
   2e780:	pop	{r3, r4, r5, r6, r7, pc}
   2e784:	push	{r4, r5, r6, r7, r8, lr}
   2e788:	mov	r5, r0
   2e78c:	mov	r0, #32
   2e790:	mov	r4, r1
   2e794:	mov	r7, r2
   2e798:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e79c:	ldr	r8, [r4, #8]
   2e7a0:	mov	r6, #61	; 0x3d
   2e7a4:	ldr	r2, [r4, #4]
   2e7a8:	mov	ip, #5
   2e7ac:	mov	r1, #0
   2e7b0:	str	r5, [r0, #16]
   2e7b4:	stmib	r0, {r2, r8}
   2e7b8:	str	r4, [r0, #20]
   2e7bc:	str	r7, [r0, #28]
   2e7c0:	str	r6, [r0]
   2e7c4:	str	ip, [r0, #12]
   2e7c8:	str	r1, [r0, #24]
   2e7cc:	pop	{r4, r5, r6, r7, r8, pc}
   2e7d0:	push	{r3, r4, r5, r6, r7, lr}
   2e7d4:	mov	r4, r0
   2e7d8:	mov	r0, #24
   2e7dc:	mov	r7, r1
   2e7e0:	bl	20950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xcac4>
   2e7e4:	ldr	r6, [r4, #8]
   2e7e8:	ldr	r5, [r4, #4]
   2e7ec:	mov	ip, #33	; 0x21
   2e7f0:	mov	r2, #8
   2e7f4:	str	r7, [r0, #20]
   2e7f8:	stmib	r0, {r5, r6}
   2e7fc:	str	r4, [r0, #16]
   2e800:	str	ip, [r0]
   2e804:	str	r2, [r0, #12]
   2e808:	pop	{r3, r4, r5, r6, r7, pc}
   2e80c:	push	{r4, r5, r6, r7, r8, lr}
   2e810:	movw	r4, #1336	; 0x538
   2e814:	movt	r4, #10
   2e818:	movw	r6, #63776	; 0xf920
   2e81c:	movt	r6, #9
   2e820:	mov	r5, r0
   2e824:	mov	r7, r4
   2e828:	ldr	r3, [r4, #80]	; 0x50
   2e82c:	cmp	r3, #0
   2e830:	ldreq	r3, [r6]
   2e834:	streq	r3, [r7, #80]	; 0x50
   2e838:	cmp	r5, #0
   2e83c:	beq	2eb88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1acfc>
   2e840:	ldr	r3, [r5, #12]
   2e844:	cmp	r3, #9
   2e848:	ldrls	pc, [pc, r3, lsl #2]
   2e84c:	b	2eaf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac64>
   2e850:			; <UNDEFINED> instruction: 0x0002e8b0
   2e854:	andeq	lr, r2, r4, lsl #19
   2e858:			; <UNDEFINED> instruction: 0x0002e9b4
   2e85c:	strdeq	lr, [r2], -ip
   2e860:	andeq	lr, r2, r8, lsr sl
   2e864:	andeq	lr, r2, r8, asr sl
   2e868:	andeq	lr, r2, r8, asr sl
   2e86c:	andeq	lr, r2, r8, ror sl
   2e870:	andeq	lr, r2, ip, lsl #21
   2e874:	andeq	lr, r2, r8, ror r8
   2e878:	ldr	r3, [r5, #16]
   2e87c:	ldr	r1, [r3, #180]	; 0xb4
   2e880:	cmp	r1, #0
   2e884:	beq	2e898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aa0c>
   2e888:	movw	r0, #19716	; 0x4d04
   2e88c:	movt	r0, #5
   2e890:	bl	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2e894:	ldr	r3, [r5, #16]
   2e898:	ldr	r1, [r3]
   2e89c:	movw	r0, #19720	; 0x4d08
   2e8a0:	ldrd	r2, [r5, #24]
   2e8a4:	movt	r0, #5
   2e8a8:	pop	{r4, r5, r6, r7, r8, lr}
   2e8ac:	b	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2e8b0:	ldr	r0, [r5]
   2e8b4:	sub	r3, r0, #276	; 0x114
   2e8b8:	sub	r3, r3, #3
   2e8bc:	cmp	r3, #46	; 0x2e
   2e8c0:	ldrls	pc, [pc, r3, lsl #2]
   2e8c4:	b	2eac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac3c>
   2e8c8:	andeq	lr, r2, r4, asr #22
   2e8cc:	andeq	lr, r2, r8, asr #21
   2e8d0:	andeq	lr, r2, r8, asr #21
   2e8d4:	andeq	lr, r2, r8, asr #21
   2e8d8:	andeq	lr, r2, r8, asr #21
   2e8dc:	andeq	lr, r2, r8, asr #21
   2e8e0:	andeq	lr, r2, r8, asr #21
   2e8e4:	andeq	lr, r2, r8, asr #21
   2e8e8:	andeq	lr, r2, r8, asr #21
   2e8ec:	andeq	lr, r2, r8, asr #21
   2e8f0:	andeq	lr, r2, r8, asr #21
   2e8f4:	andeq	lr, r2, r8, asr #21
   2e8f8:	andeq	lr, r2, r8, asr #21
   2e8fc:	andeq	lr, r2, r4, asr #22
   2e900:	andeq	lr, r2, r4, asr #22
   2e904:	andeq	lr, r2, r8, asr #21
   2e908:	andeq	lr, r2, r8, asr #21
   2e90c:	andeq	lr, r2, r8, asr #21
   2e910:	andeq	lr, r2, r8, asr #21
   2e914:	andeq	lr, r2, r8, asr #21
   2e918:	andeq	lr, r2, r8, asr #21
   2e91c:	andeq	lr, r2, r8, asr #21
   2e920:	andeq	lr, r2, r8, asr #21
   2e924:	andeq	lr, r2, r8, asr #21
   2e928:	andeq	lr, r2, r8, asr #21
   2e92c:	andeq	lr, r2, r4, lsl #22
   2e930:	andeq	lr, r2, r8, asr #21
   2e934:	andeq	lr, r2, r8, asr #21
   2e938:	andeq	lr, r2, r8, asr #21
   2e93c:	andeq	lr, r2, r8, asr #21
   2e940:	andeq	lr, r2, r8, asr #21
   2e944:	andeq	lr, r2, r8, asr #21
   2e948:	andeq	lr, r2, r8, asr #21
   2e94c:	andeq	lr, r2, r8, asr #21
   2e950:	andeq	lr, r2, r8, asr #21
   2e954:	andeq	lr, r2, r8, asr #21
   2e958:	andeq	lr, r2, r8, asr #21
   2e95c:	andeq	lr, r2, r8, asr #21
   2e960:	andeq	lr, r2, r8, asr #21
   2e964:	andeq	lr, r2, r8, asr #21
   2e968:	andeq	lr, r2, r8, asr #21
   2e96c:	andeq	lr, r2, r8, asr #21
   2e970:	andeq	lr, r2, r8, asr #21
   2e974:	andeq	lr, r2, r8, asr #21
   2e978:	andeq	lr, r2, r8, asr #21
   2e97c:	andeq	lr, r2, r4, asr #22
   2e980:	andeq	lr, r2, r4, asr #22
   2e984:	ldr	r0, [r5, #16]
   2e988:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   2e98c:	ldr	r1, [r4, #80]	; 0x50
   2e990:	mov	r0, #63	; 0x3f
   2e994:	bl	13c28 <fputc@plt>
   2e998:	ldr	r0, [r5, #20]
   2e99c:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   2e9a0:	mov	r0, #58	; 0x3a
   2e9a4:	ldr	r1, [r4, #80]	; 0x50
   2e9a8:	bl	13c28 <fputc@plt>
   2e9ac:	ldr	r5, [r5, #24]
   2e9b0:	b	2e828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a99c>
   2e9b4:	ldr	r0, [r5]
   2e9b8:	mov	r1, #0
   2e9bc:	bl	2c614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18788>
   2e9c0:	ldr	r3, [r5, #16]
   2e9c4:	cmp	r3, #0
   2e9c8:	popeq	{r4, r5, r6, r7, r8, pc}
   2e9cc:	movw	r0, #28604	; 0x6fbc
   2e9d0:	movt	r0, #4
   2e9d4:	mov	r1, #1
   2e9d8:	mov	r2, #2
   2e9dc:	ldr	r3, [r4, #80]	; 0x50
   2e9e0:	bl	137a8 <fwrite@plt>
   2e9e4:	ldr	r0, [r5, #16]
   2e9e8:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   2e9ec:	ldr	r1, [r4, #80]	; 0x50
   2e9f0:	mov	r0, #41	; 0x29
   2e9f4:	pop	{r4, r5, r6, r7, r8, lr}
   2e9f8:	b	13c28 <fputc@plt>
   2e9fc:	ldr	r0, [r5]
   2ea00:	movw	r3, #259	; 0x103
   2ea04:	cmp	r0, r3
   2ea08:	beq	2eb98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad0c>
   2ea0c:	mov	r1, #0
   2ea10:	bl	2c614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18788>
   2ea14:	ldr	r3, [r5, #16]
   2ea18:	cmp	r3, #0
   2ea1c:	popeq	{r4, r5, r6, r7, r8, pc}
   2ea20:	ldr	r0, [r4, #80]	; 0x50
   2ea24:	movw	r2, #19772	; 0x4d3c
   2ea28:	mov	r1, #1
   2ea2c:	movt	r2, #5
   2ea30:	pop	{r4, r5, r6, r7, r8, lr}
   2ea34:	b	13b74 <__fprintf_chk@plt>
   2ea38:	ldr	r0, [r5, #16]
   2ea3c:	ldr	r1, [r4, #80]	; 0x50
   2ea40:	bl	13dfc <fputs@plt>
   2ea44:	ldr	r0, [r5]
   2ea48:	mov	r1, #1
   2ea4c:	bl	2c614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18788>
   2ea50:	ldr	r5, [r5, #20]
   2ea54:	b	2e828 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a99c>
   2ea58:	movw	r2, #19728	; 0x4d10
   2ea5c:	ldr	r0, [r4, #80]	; 0x50
   2ea60:	movt	r2, #5
   2ea64:	mov	r1, #1
   2ea68:	ldr	r3, [r5, #16]
   2ea6c:	bl	13b74 <__fprintf_chk@plt>
   2ea70:	ldr	r0, [r5, #20]
   2ea74:	b	2e9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ab5c>
   2ea78:	movw	r0, #19708	; 0x4cfc
   2ea7c:	ldrd	r2, [r5, #16]
   2ea80:	movt	r0, #5
   2ea84:	pop	{r4, r5, r6, r7, r8, lr}
   2ea88:	b	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2ea8c:	ldr	r3, [r4, #80]	; 0x50
   2ea90:	mov	r1, #1
   2ea94:	mov	r2, #8
   2ea98:	movw	r0, #19752	; 0x4d28
   2ea9c:	movt	r0, #5
   2eaa0:	bl	137a8 <fwrite@plt>
   2eaa4:	ldr	r0, [r5, #16]
   2eaa8:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   2eaac:	ldr	r0, [r4, #80]	; 0x50
   2eab0:	ldr	r3, [r5, #20]
   2eab4:	movw	r2, #19764	; 0x4d34
   2eab8:	mov	r1, #1
   2eabc:	movt	r2, #5
   2eac0:	pop	{r4, r5, r6, r7, r8, lr}
   2eac4:	b	13b74 <__fprintf_chk@plt>
   2eac8:	ldr	r1, [r4, #80]	; 0x50
   2eacc:	mov	r0, #40	; 0x28
   2ead0:	bl	13c28 <fputc@plt>
   2ead4:	ldr	r0, [r5, #16]
   2ead8:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   2eadc:	ldr	r0, [r5]
   2eae0:	mov	r1, #1
   2eae4:	bl	2c614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18788>
   2eae8:	ldr	r0, [r5, #20]
   2eaec:	b	2e9e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ab5c>
   2eaf0:	movw	r0, #18944	; 0x4a00
   2eaf4:	movw	r1, #1502	; 0x5de
   2eaf8:	movt	r0, #5
   2eafc:	pop	{r4, r5, r6, r7, r8, lr}
   2eb00:	b	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   2eb04:	mov	r0, #304	; 0x130
   2eb08:	mov	r1, #0
   2eb0c:	bl	2c614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18788>
   2eb10:	mov	r1, #1
   2eb14:	mov	r2, #3
   2eb18:	ldr	r3, [r4, #80]	; 0x50
   2eb1c:	movw	r0, #19744	; 0x4d20
   2eb20:	movt	r0, #5
   2eb24:	bl	137a8 <fwrite@plt>
   2eb28:	ldr	r0, [r5, #20]
   2eb2c:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   2eb30:	movw	r0, #19748	; 0x4d24
   2eb34:	mov	r1, #1
   2eb38:	movt	r0, #5
   2eb3c:	mov	r2, #3
   2eb40:	b	2e9dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ab50>
   2eb44:	mov	r1, #0
   2eb48:	bl	2c614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18788>
   2eb4c:	ldr	r1, [r4, #80]	; 0x50
   2eb50:	mov	r0, #32
   2eb54:	bl	13c28 <fputc@plt>
   2eb58:	ldr	r1, [r4, #80]	; 0x50
   2eb5c:	mov	r0, #40	; 0x28
   2eb60:	bl	13c28 <fputc@plt>
   2eb64:	ldr	r0, [r5, #16]
   2eb68:	bl	2e80c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1a980>
   2eb6c:	movw	r0, #62388	; 0xf3b4
   2eb70:	mov	r1, #1
   2eb74:	mov	r2, #2
   2eb78:	ldr	r3, [r4, #80]	; 0x50
   2eb7c:	movt	r0, #4
   2eb80:	bl	137a8 <fwrite@plt>
   2eb84:	b	2eae8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ac5c>
   2eb88:	movw	r0, #19696	; 0x4cf0
   2eb8c:	movt	r0, #5
   2eb90:	pop	{r4, r5, r6, r7, r8, lr}
   2eb94:	b	302e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c45c>
   2eb98:	ldr	r0, [r5, #16]
   2eb9c:	ldr	r1, [r4, #80]	; 0x50
   2eba0:	pop	{r4, r5, r6, r7, r8, lr}
   2eba4:	b	13dfc <fputs@plt>
   2eba8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2ebac:	subs	r9, r0, #0
   2ebb0:	mov	r7, r2
   2ebb4:	mov	r8, r3
   2ebb8:	beq	2ec28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad9c>
   2ebbc:	ldr	r3, [pc, #124]	; 2ec40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1adb4>
   2ebc0:	movw	r6, #1480	; 0x5c8
   2ebc4:	movt	r6, #10
   2ebc8:	mov	ip, #0
   2ebcc:	mov	r4, #0
   2ebd0:	mov	r5, #0
   2ebd4:	str	r3, [r6, #52]	; 0x34
   2ebd8:	strd	r4, [r6, #40]	; 0x28
   2ebdc:	str	ip, [r6, #8]
   2ebe0:	str	ip, [r6, #48]	; 0x30
   2ebe4:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2ebe8:	ldr	r0, [r6, #32]
   2ebec:	cmp	r0, #0
   2ebf0:	bne	2ec34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ada8>
   2ebf4:	ldr	r3, [sp, #32]
   2ebf8:	cmp	r3, #0
   2ebfc:	beq	2ec28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad9c>
   2ec00:	ldr	r3, [r6]
   2ec04:	cmp	r3, #1
   2ec08:	beq	2ec28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad9c>
   2ec0c:	mov	r2, #5
   2ec10:	movw	r1, #19780	; 0x4d44
   2ec14:	movt	r1, #5
   2ec18:	bl	13688 <dcgettext@plt>
   2ec1c:	mov	r1, r9
   2ec20:	ldr	r2, [sp, #32]
   2ec24:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2ec28:	mov	r0, r7
   2ec2c:	mov	r1, r8
   2ec30:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2ec34:	ldr	r0, [r6, #16]
   2ec38:	ldr	r1, [r6, #20]
   2ec3c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2ec40:			; <UNDEFINED> instruction: 0x0009fab8
   2ec44:	push	{lr}		; (str lr, [sp, #-4]!)
   2ec48:	sub	sp, sp, #12
   2ec4c:	asr	r3, r1, #31
   2ec50:	str	r2, [sp]
   2ec54:	mov	r2, r1
   2ec58:	bl	2eba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ad1c>
   2ec5c:	add	sp, sp, #12
   2ec60:	pop	{pc}		; (ldr pc, [sp], #4)
   2ec64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ec68:	subs	sl, r0, #0
   2ec6c:	mov	r9, r1
   2ec70:	mov	r8, r2
   2ec74:	beq	2ece0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae54>
   2ec78:	ldr	r3, [pc, #280]	; 2ed98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af0c>
   2ec7c:	movw	r6, #1480	; 0x5c8
   2ec80:	movt	r6, #10
   2ec84:	mov	r7, #0
   2ec88:	mov	r4, #0
   2ec8c:	mov	r5, #0
   2ec90:	str	r3, [r6, #52]	; 0x34
   2ec94:	strd	r4, [r6, #40]	; 0x28
   2ec98:	str	r7, [r6, #8]
   2ec9c:	str	r7, [r6, #48]	; 0x30
   2eca0:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2eca4:	ldr	r0, [r6, #32]
   2eca8:	cmp	r0, r7
   2ecac:	bne	2ece8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae5c>
   2ecb0:	cmp	r8, r7
   2ecb4:	beq	2ece0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae54>
   2ecb8:	ldr	r2, [r6]
   2ecbc:	cmp	r2, #1
   2ecc0:	beq	2ece0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae54>
   2ecc4:	mov	r2, #5
   2ecc8:	movw	r1, #19780	; 0x4d44
   2eccc:	movt	r1, #5
   2ecd0:	bl	13688 <dcgettext@plt>
   2ecd4:	mov	r1, sl
   2ecd8:	mov	r2, r8
   2ecdc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2ece0:	mov	r0, r9
   2ece4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ece8:	ldr	r0, [r6, #24]
   2ecec:	cmp	r0, #0
   2ecf0:	beq	2ed00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ae74>
   2ecf4:	bl	13a24 <strlen@plt>
   2ecf8:	subs	r4, r0, #0
   2ecfc:	bne	2ed38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aeac>
   2ed00:	mov	r0, #11
   2ed04:	bl	137b4 <xmalloc@plt>
   2ed08:	ldr	r2, [r6, #16]
   2ed0c:	mov	r1, #4
   2ed10:	lsr	ip, r2, #24
   2ed14:	mov	r3, r0
   2ed18:	str	r1, [r3]
   2ed1c:	lsr	r1, r2, #16
   2ed20:	strb	r2, [r3, #7]
   2ed24:	lsr	r2, r2, #8
   2ed28:	strb	ip, [r3, #4]
   2ed2c:	strb	r1, [r3, #5]
   2ed30:	strb	r2, [r3, #6]
   2ed34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ed38:	add	r8, r4, #1
   2ed3c:	lsr	r8, r8, #1
   2ed40:	add	r0, r8, #7
   2ed44:	bl	137b4 <xmalloc@plt>
   2ed48:	ldr	r6, [r6, #24]
   2ed4c:	mov	r2, r7
   2ed50:	mov	r5, r0
   2ed54:	str	r8, [r5], #4
   2ed58:	ldrb	ip, [r6], #1
   2ed5c:	sub	r4, r4, #1
   2ed60:	add	r7, r5, #1
   2ed64:	sub	r3, ip, #48	; 0x30
   2ed68:	sub	ip, ip, #55	; 0x37
   2ed6c:	cmp	r3, #9
   2ed70:	andhi	r3, ip, #15
   2ed74:	ands	r1, r4, #1
   2ed78:	add	r2, r3, r2, lsl #4
   2ed7c:	bne	2ed58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aecc>
   2ed80:	cmp	r4, #0
   2ed84:	strb	r2, [r5]
   2ed88:	mov	r5, r7
   2ed8c:	mov	r2, r1
   2ed90:	bne	2ed58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1aecc>
   2ed94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ed98:			; <UNDEFINED> instruction: 0x0009fab8
   2ed9c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2eda0:	subs	r9, r0, #0
   2eda4:	mov	r7, r1
   2eda8:	mov	r8, r2
   2edac:	beq	2ee3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1afb0>
   2edb0:	ldr	r2, [pc, #152]	; 2ee50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1afc4>
   2edb4:	movw	r6, #1480	; 0x5c8
   2edb8:	movt	r6, #10
   2edbc:	mov	r3, #0
   2edc0:	mov	r4, #0
   2edc4:	mov	r5, #0
   2edc8:	str	r2, [r6, #52]	; 0x34
   2edcc:	strd	r4, [r6, #40]	; 0x28
   2edd0:	str	r3, [r6, #8]
   2edd4:	str	r3, [r6, #48]	; 0x30
   2edd8:	bl	2c6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x18850>
   2eddc:	ldr	r0, [r6, #32]
   2ede0:	cmp	r0, #0
   2ede4:	beq	2ee0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1af80>
   2ede8:	ldr	r3, [r6, #28]
   2edec:	cmp	r3, #0
   2edf0:	beq	2ee48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1afbc>
   2edf4:	ldrd	r0, [r3, #32]
   2edf8:	ldrd	r2, [r6, #16]
   2edfc:	adds	r0, r0, r2
   2ee00:	adc	r1, r1, r3
   2ee04:	strd	r0, [r6, #16]
   2ee08:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2ee0c:	cmp	r8, #0
   2ee10:	beq	2ee3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1afb0>
   2ee14:	ldr	r3, [r6]
   2ee18:	cmp	r3, #1
   2ee1c:	beq	2ee3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1afb0>
   2ee20:	mov	r2, #5
   2ee24:	movw	r1, #19780	; 0x4d44
   2ee28:	movt	r1, #5
   2ee2c:	bl	13688 <dcgettext@plt>
   2ee30:	mov	r1, r9
   2ee34:	mov	r2, r8
   2ee38:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2ee3c:	mov	r0, r7
   2ee40:	asr	r1, r7, #31
   2ee44:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2ee48:	ldrd	r0, [r6, #16]
   2ee4c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2ee50:			; <UNDEFINED> instruction: 0x0009fab8
   2ee54:	push	{r3, lr}
   2ee58:	movw	r0, #124	; 0x7c
   2ee5c:	movw	r1, #50532	; 0xc564
   2ee60:	movt	r0, #10
   2ee64:	movt	r1, #2
   2ee68:	mov	r2, #20
   2ee6c:	mov	r3, #13
   2ee70:	bl	138b0 <bfd_hash_table_init_n@plt>
   2ee74:	cmp	r0, #0
   2ee78:	popne	{r3, pc}
   2ee7c:	movw	r1, #11988	; 0x2ed4
   2ee80:	mov	r2, #5
   2ee84:	movt	r1, #5
   2ee88:	bl	13688 <dcgettext@plt>
   2ee8c:	pop	{r3, lr}
   2ee90:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2ee94:	movw	r0, #124	; 0x7c
   2ee98:	movw	r1, #50388	; 0xc4d4
   2ee9c:	movt	r0, #10
   2eea0:	movt	r1, #2
   2eea4:	mov	r2, #0
   2eea8:	b	13544 <bfd_hash_traverse@plt>
   2eeac:	movw	r0, #124	; 0x7c
   2eeb0:	movt	r0, #10
   2eeb4:	b	13730 <bfd_hash_table_free@plt>
   2eeb8:	push	{r3, lr}
   2eebc:	movw	r3, #152	; 0x98
   2eec0:	movt	r3, #10
   2eec4:	ldr	r3, [r3]
   2eec8:	ldr	r3, [r3, #8]
   2eecc:	blx	r3
   2eed0:	pop	{r3, pc}
   2eed4:	push	{r3, lr}
   2eed8:	movw	r3, #152	; 0x98
   2eedc:	movt	r3, #10
   2eee0:	ldr	r3, [r3]
   2eee4:	ldr	r3, [r3, #4]
   2eee8:	blx	r3
   2eeec:	pop	{r3, pc}
   2eef0:	push	{r3, lr}
   2eef4:	movw	r3, #152	; 0x98
   2eef8:	movt	r3, #10
   2eefc:	ldr	r3, [r3]
   2ef00:	ldr	r3, [r3, #12]
   2ef04:	blx	r3
   2ef08:	pop	{r3, pc}
   2ef0c:	push	{r3, lr}
   2ef10:	movw	r3, #152	; 0x98
   2ef14:	movt	r3, #10
   2ef18:	ldr	r3, [r3]
   2ef1c:	ldr	r3, [r3]
   2ef20:	blx	r3
   2ef24:	pop	{r3, pc}
   2ef28:	push	{r3, lr}
   2ef2c:	movw	r3, #152	; 0x98
   2ef30:	movt	r3, #10
   2ef34:	ldr	r3, [r3]
   2ef38:	ldr	r3, [r3, #16]
   2ef3c:	blx	r3
   2ef40:	pop	{r3, pc}
   2ef44:	push	{r3, lr}
   2ef48:	movw	r3, #152	; 0x98
   2ef4c:	movt	r3, #10
   2ef50:	ldr	r3, [r3]
   2ef54:	ldr	r3, [r3, #20]
   2ef58:	blx	r3
   2ef5c:	pop	{r3, pc}
   2ef60:	push	{r3, lr}
   2ef64:	movw	r3, #152	; 0x98
   2ef68:	movt	r3, #10
   2ef6c:	ldr	r3, [r3]
   2ef70:	ldr	r3, [r3, #32]
   2ef74:	blx	r3
   2ef78:	pop	{r3, pc}
   2ef7c:	push	{r3, lr}
   2ef80:	movw	r3, #152	; 0x98
   2ef84:	movt	r3, #10
   2ef88:	ldr	r3, [r3]
   2ef8c:	ldr	r3, [r3, #24]
   2ef90:	blx	r3
   2ef94:	pop	{r3, pc}
   2ef98:	push	{r3, lr}
   2ef9c:	movw	r3, #152	; 0x98
   2efa0:	movt	r3, #10
   2efa4:	ldr	r3, [r3]
   2efa8:	ldr	r3, [r3, #48]	; 0x30
   2efac:	blx	r3
   2efb0:	pop	{r3, pc}
   2efb4:	push	{r3, lr}
   2efb8:	movw	r3, #152	; 0x98
   2efbc:	movt	r3, #10
   2efc0:	ldr	r3, [r3]
   2efc4:	ldr	r3, [r3, #64]	; 0x40
   2efc8:	cmp	r3, #0
   2efcc:	popeq	{r3, pc}
   2efd0:	blx	r3
   2efd4:	pop	{r3, pc}
   2efd8:	push	{r3, lr}
   2efdc:	movw	r3, #152	; 0x98
   2efe0:	movt	r3, #10
   2efe4:	ldr	r3, [r3]
   2efe8:	ldr	r3, [r3, #52]	; 0x34
   2efec:	cmp	r3, #0
   2eff0:	popeq	{r3, pc}
   2eff4:	blx	r3
   2eff8:	pop	{r3, pc}
   2effc:	push	{r3, lr}
   2f000:	movw	r3, #152	; 0x98
   2f004:	movt	r3, #10
   2f008:	ldr	r3, [r3]
   2f00c:	ldr	r3, [r3, #36]	; 0x24
   2f010:	blx	r3
   2f014:	pop	{r3, pc}
   2f018:	push	{r3, lr}
   2f01c:	movw	r3, #152	; 0x98
   2f020:	movt	r3, #10
   2f024:	ldr	r3, [r3]
   2f028:	ldr	r3, [r3, #56]	; 0x38
   2f02c:	cmp	r3, #0
   2f030:	beq	2f03c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b1b0>
   2f034:	blx	r3
   2f038:	pop	{r3, pc}
   2f03c:	mov	r0, r3
   2f040:	pop	{r3, pc}
   2f044:	push	{r3, lr}
   2f048:	movw	r3, #152	; 0x98
   2f04c:	movt	r3, #10
   2f050:	ldr	r3, [r3]
   2f054:	ldr	r3, [r3, #60]	; 0x3c
   2f058:	cmp	r3, #0
   2f05c:	beq	2f068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b1dc>
   2f060:	blx	r3
   2f064:	pop	{r3, pc}
   2f068:	mov	r0, r3
   2f06c:	pop	{r3, pc}
   2f070:	movw	ip, #152	; 0x98
   2f074:	movt	ip, #10
   2f078:	push	{r4, lr}
   2f07c:	sub	sp, sp, #8
   2f080:	ldr	ip, [ip]
   2f084:	ldr	ip, [ip, #72]	; 0x48
   2f088:	cmp	ip, #0
   2f08c:	beq	2f0a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b218>
   2f090:	ldr	r4, [sp, #16]
   2f094:	ldr	lr, [sp, #20]
   2f098:	str	r4, [sp]
   2f09c:	str	lr, [sp, #4]
   2f0a0:	blx	ip
   2f0a4:	add	sp, sp, #8
   2f0a8:	pop	{r4, pc}
   2f0ac:	push	{r3, lr}
   2f0b0:	movw	r3, #152	; 0x98
   2f0b4:	movt	r3, #10
   2f0b8:	ldr	r3, [r3]
   2f0bc:	ldr	r3, [r3, #76]	; 0x4c
   2f0c0:	cmp	r3, #0
   2f0c4:	beq	2f0d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b244>
   2f0c8:	blx	r3
   2f0cc:	pop	{r3, pc}
   2f0d0:	mov	r0, r3
   2f0d4:	pop	{r3, pc}
   2f0d8:	push	{r3, lr}
   2f0dc:	movw	r3, #152	; 0x98
   2f0e0:	movt	r3, #10
   2f0e4:	ldr	r3, [r3]
   2f0e8:	ldr	r3, [r3, #68]	; 0x44
   2f0ec:	cmp	r3, #0
   2f0f0:	beq	2f0fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b270>
   2f0f4:	blx	r3
   2f0f8:	pop	{r3, pc}
   2f0fc:	mov	r0, r3
   2f100:	pop	{r3, pc}
   2f104:	push	{r3, lr}
   2f108:	movw	r3, #152	; 0x98
   2f10c:	movt	r3, #10
   2f110:	ldr	r3, [r3]
   2f114:	ldr	r3, [r3, #80]	; 0x50
   2f118:	cmp	r3, #0
   2f11c:	beq	2f128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b29c>
   2f120:	blx	r3
   2f124:	pop	{r3, pc}
   2f128:	mov	r0, r3
   2f12c:	pop	{r3, pc}
   2f130:	push	{r3, lr}
   2f134:	movw	r3, #152	; 0x98
   2f138:	movt	r3, #10
   2f13c:	ldr	r3, [r3]
   2f140:	ldr	r3, [r3, #88]	; 0x58
   2f144:	cmp	r3, #0
   2f148:	beq	2f154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b2c8>
   2f14c:	blx	r3
   2f150:	pop	{r3, pc}
   2f154:	mov	r0, r3
   2f158:	pop	{r3, pc}
   2f15c:	push	{r3, lr}
   2f160:	movw	r3, #152	; 0x98
   2f164:	movt	r3, #10
   2f168:	ldr	r3, [r3]
   2f16c:	ldr	r3, [r3, #28]
   2f170:	blx	r3
   2f174:	pop	{r3, pc}
   2f178:	push	{r3, lr}
   2f17c:	movw	r0, #19908	; 0x4dc4
   2f180:	movt	r0, #5
   2f184:	bl	138f8 <getenv@plt>
   2f188:	cmp	r0, #0
   2f18c:	movweq	r3, #152	; 0x98
   2f190:	movteq	r3, #10
   2f194:	ldreq	r3, [r3]
   2f198:	ldreq	r0, [r3, #44]	; 0x2c
   2f19c:	pop	{r3, pc}
   2f1a0:	push	{r4, r5, r6, lr}
   2f1a4:	movw	r5, #4
   2f1a8:	movt	r5, #10
   2f1ac:	movw	r4, #63248	; 0xf710
   2f1b0:	movt	r4, #9
   2f1b4:	sub	sp, sp, #8
   2f1b8:	ldr	r0, [r5, #4]
   2f1bc:	ldr	r3, [r4]
   2f1c0:	cmp	r0, #0
   2f1c4:	str	r3, [sp, #4]
   2f1c8:	beq	2f214 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b388>
   2f1cc:	movw	r3, #1088	; 0x440
   2f1d0:	movt	r3, #10
   2f1d4:	movw	r6, #1012	; 0x3f4
   2f1d8:	movt	r6, #10
   2f1dc:	ldrb	r3, [r3]
   2f1e0:	and	r3, r3, #3
   2f1e4:	cmp	r3, #1
   2f1e8:	bls	2f22c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3a0>
   2f1ec:	ldr	r3, [r6]
   2f1f0:	cmp	r3, #0
   2f1f4:	beq	2f214 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b388>
   2f1f8:	mov	r1, sp
   2f1fc:	mov	r2, #0
   2f200:	bl	13478 <bfd_scan_vma@plt>
   2f204:	ldr	r3, [sp]
   2f208:	ldrb	r3, [r3]
   2f20c:	cmp	r3, #0
   2f210:	bne	2f244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b8>
   2f214:	ldr	r2, [sp, #4]
   2f218:	ldr	r3, [r4]
   2f21c:	cmp	r2, r3
   2f220:	bne	2f240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3b4>
   2f224:	add	sp, sp, #8
   2f228:	pop	{r4, r5, r6, pc}
   2f22c:	ldr	r1, [r6]
   2f230:	cmp	r1, #0
   2f234:	bne	2f1f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b36c>
   2f238:	bl	23bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xfd60>
   2f23c:	b	2f214 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b388>
   2f240:	bl	13694 <__stack_chk_fail@plt>
   2f244:	ldr	r0, [r5, #4]
   2f248:	ldr	r1, [r6]
   2f24c:	b	2f238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3ac>
   2f250:	bx	lr
   2f254:	mov	r0, #0
   2f258:	b	25ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c58>
   2f25c:	movw	r3, #1088	; 0x440
   2f260:	movt	r3, #10
   2f264:	ldrb	r3, [r3]
   2f268:	and	r3, r3, #3
   2f26c:	cmp	r3, #2
   2f270:	bxeq	lr
   2f274:	b	2565c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x117d0>
   2f278:	movw	r1, #1088	; 0x440
   2f27c:	movt	r1, #10
   2f280:	ldrb	r3, [r1]
   2f284:	and	r3, r3, #3
   2f288:	cmp	r3, #2
   2f28c:	bxeq	lr
   2f290:	ldr	r0, [r1, #52]	; 0x34
   2f294:	b	13da8 <_bfd_fix_excluded_sec_syms@plt>
   2f298:	movw	r1, #1088	; 0x440
   2f29c:	movt	r1, #10
   2f2a0:	movw	r2, #1612	; 0x64c
   2f2a4:	movw	r3, #1616	; 0x650
   2f2a8:	ldr	r0, [r1, #52]	; 0x34
   2f2ac:	movt	r2, #10
   2f2b0:	movt	r3, #10
   2f2b4:	push	{r4, r5, r6, lr}
   2f2b8:	movw	r5, #1044	; 0x414
   2f2bc:	ldr	ip, [r0, #4]
   2f2c0:	movt	r5, #10
   2f2c4:	movw	r4, #1336	; 0x538
   2f2c8:	movt	r4, #10
   2f2cc:	ldr	r1, [r2]
   2f2d0:	ldr	r2, [r3]
   2f2d4:	ldr	r3, [ip, #336]	; 0x150
   2f2d8:	blx	r3
   2f2dc:	ldr	r0, [r5]
   2f2e0:	ldrd	r2, [r4, #104]	; 0x68
   2f2e4:	bl	13ca0 <bfd_emul_set_maxpagesize@plt>
   2f2e8:	ldr	r0, [r5]
   2f2ec:	ldrd	r2, [r4, #112]	; 0x70
   2f2f0:	pop	{r4, r5, r6, lr}
   2f2f4:	b	13904 <bfd_emul_set_commonpagesize@plt>
   2f2f8:	push	{r3, lr}
   2f2fc:	movw	r1, #19920	; 0x4dd0
   2f300:	mov	r0, #0
   2f304:	movt	r1, #5
   2f308:	mov	r2, #5
   2f30c:	bl	13688 <dcgettext@plt>
   2f310:	mov	r1, #0
   2f314:	pop	{r3, lr}
   2f318:	b	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   2f31c:	push	{r3, lr}
   2f320:	movw	r1, #19940	; 0x4de4
   2f324:	mov	r0, #0
   2f328:	movt	r1, #5
   2f32c:	mov	r2, #5
   2f330:	bl	13688 <dcgettext@plt>
   2f334:	mov	r1, #0
   2f338:	pop	{r3, lr}
   2f33c:	b	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   2f340:	push	{r3, r4, r5, lr}
   2f344:	movw	r4, #62504	; 0xf428
   2f348:	movt	r4, #9
   2f34c:	mov	r5, r0
   2f350:	ldr	r3, [r4]
   2f354:	cmp	r3, #0
   2f358:	popeq	{r3, r4, r5, pc}
   2f35c:	sub	r4, r4, #4
   2f360:	b	2f368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b4dc>
   2f364:	bl	13c28 <fputc@plt>
   2f368:	ldr	r3, [r4, #4]!
   2f36c:	mov	r1, r5
   2f370:	ldr	r0, [r3, #40]	; 0x28
   2f374:	bl	13dfc <fputs@plt>
   2f378:	ldr	r3, [r4, #4]
   2f37c:	mov	r0, #32
   2f380:	mov	r1, r5
   2f384:	cmp	r3, #0
   2f388:	bne	2f364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b4d8>
   2f38c:	pop	{r3, r4, r5, pc}
   2f390:	push	{r4, r5, r6, lr}
   2f394:	mov	r6, r0
   2f398:	ldrb	r3, [r0]
   2f39c:	cmp	r3, #103	; 0x67
   2f3a0:	beq	2f440 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5b4>
   2f3a4:	movw	r5, #62504	; 0xf428
   2f3a8:	movt	r5, #9
   2f3ac:	ldr	r4, [r5]
   2f3b0:	cmp	r4, #0
   2f3b4:	bne	2f3c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b53c>
   2f3b8:	b	2f3ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b560>
   2f3bc:	ldr	r4, [r5, #4]!
   2f3c0:	cmp	r4, #0
   2f3c4:	beq	2f3ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b560>
   2f3c8:	mov	r0, r6
   2f3cc:	ldr	r1, [r4, #40]	; 0x28
   2f3d0:	bl	13490 <strcmp@plt>
   2f3d4:	cmp	r0, #0
   2f3d8:	bne	2f3bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b530>
   2f3dc:	movw	r3, #152	; 0x98
   2f3e0:	movt	r3, #10
   2f3e4:	str	r4, [r3]
   2f3e8:	pop	{r4, r5, r6, pc}
   2f3ec:	mov	r2, #5
   2f3f0:	movw	r1, #19956	; 0x4df4
   2f3f4:	mov	r0, #0
   2f3f8:	movt	r1, #5
   2f3fc:	bl	13688 <dcgettext@plt>
   2f400:	mov	r1, r6
   2f404:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2f408:	mov	r2, #5
   2f40c:	movw	r1, #19996	; 0x4e1c
   2f410:	mov	r0, #0
   2f414:	movt	r1, #5
   2f418:	bl	13688 <dcgettext@plt>
   2f41c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2f420:	movw	r3, #63776	; 0xf920
   2f424:	movt	r3, #9
   2f428:	ldr	r0, [r3]
   2f42c:	bl	2f340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b4b4>
   2f430:	movw	r0, #12624	; 0x3150
   2f434:	pop	{r4, r5, r6, lr}
   2f438:	movt	r0, #5
   2f43c:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   2f440:	ldrb	r3, [r0, #1]
   2f444:	cmp	r3, #108	; 0x6c
   2f448:	bne	2f3a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b518>
   2f44c:	ldrb	r3, [r0, #2]
   2f450:	cmp	r3, #100	; 0x64
   2f454:	addeq	r6, r0, #3
   2f458:	b	2f3a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b518>
   2f45c:	push	{r4, r5, r6, lr}
   2f460:	movw	r5, #62504	; 0xf428
   2f464:	movt	r5, #9
   2f468:	mov	r6, r0
   2f46c:	ldr	r4, [r5]
   2f470:	cmp	r4, #0
   2f474:	movne	ip, #0
   2f478:	beq	2f4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b63c>
   2f47c:	ldr	r3, [r4, #84]	; 0x54
   2f480:	movw	r2, #20056	; 0x4e58
   2f484:	mov	r1, #1
   2f488:	mov	r0, r6
   2f48c:	cmp	r3, #0
   2f490:	movt	r2, #5
   2f494:	beq	2f4b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b624>
   2f498:	ldr	r3, [r4, #40]	; 0x28
   2f49c:	bl	13b74 <__fprintf_chk@plt>
   2f4a0:	ldr	r3, [r4, #84]	; 0x54
   2f4a4:	mov	r0, r6
   2f4a8:	blx	r3
   2f4ac:	mov	ip, #1
   2f4b0:	ldr	r4, [r5, #4]!
   2f4b4:	cmp	r4, #0
   2f4b8:	bne	2f47c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b5f0>
   2f4bc:	cmp	ip, #0
   2f4c0:	beq	2f4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b63c>
   2f4c4:	pop	{r4, r5, r6, pc}
   2f4c8:	mov	r2, #5
   2f4cc:	movw	r1, #20020	; 0x4e34
   2f4d0:	mov	r0, #0
   2f4d4:	movt	r1, #5
   2f4d8:	bl	13688 <dcgettext@plt>
   2f4dc:	mov	r1, #1
   2f4e0:	mov	r2, r0
   2f4e4:	mov	r0, r6
   2f4e8:	pop	{r4, r5, r6, lr}
   2f4ec:	b	13b74 <__fprintf_chk@plt>
   2f4f0:	push	{r3, lr}
   2f4f4:	movw	r3, #152	; 0x98
   2f4f8:	movt	r3, #10
   2f4fc:	ldr	r3, [r3]
   2f500:	ldr	r3, [r3, #92]	; 0x5c
   2f504:	cmp	r3, #0
   2f508:	beq	2f514 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b688>
   2f50c:	blx	r3
   2f510:	pop	{r3, pc}
   2f514:	mov	r0, r3
   2f518:	pop	{r3, pc}
   2f51c:	push	{r3, lr}
   2f520:	movw	r3, #152	; 0x98
   2f524:	movt	r3, #10
   2f528:	mov	r2, r0
   2f52c:	ldr	r3, [r3]
   2f530:	ldr	r3, [r3, #96]	; 0x60
   2f534:	cmp	r3, #0
   2f538:	beq	2f544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b6b8>
   2f53c:	blx	r3
   2f540:	mov	r2, r0
   2f544:	mov	r0, r2
   2f548:	pop	{r3, pc}
   2f54c:	push	{r3, lr}
   2f550:	movw	r3, #152	; 0x98
   2f554:	movt	r3, #10
   2f558:	ldr	r3, [r3]
   2f55c:	ldr	r3, [r3, #100]	; 0x64
   2f560:	cmp	r3, #0
   2f564:	popeq	{r3, pc}
   2f568:	blx	r3
   2f56c:	pop	{r3, pc}
   2f570:	push	{r3, r4, r5, lr}
   2f574:	movw	r3, #64592	; 0xfc50
   2f578:	movt	r3, #9
   2f57c:	mov	r4, r0
   2f580:	mov	r2, #5
   2f584:	movw	r1, #20064	; 0x4e60
   2f588:	mov	r0, #0
   2f58c:	movt	r1, #5
   2f590:	ldr	r5, [r3]
   2f594:	bl	13688 <dcgettext@plt>
   2f598:	movw	r3, #20076	; 0x4e6c
   2f59c:	mov	r1, #1
   2f5a0:	movt	r3, #5
   2f5a4:	mov	r2, r0
   2f5a8:	mov	r0, r5
   2f5ac:	bl	13b74 <__fprintf_chk@plt>
   2f5b0:	tst	r4, #2
   2f5b4:	bne	2f618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b78c>
   2f5b8:	tst	r4, #1
   2f5bc:	popeq	{r3, r4, r5, pc}
   2f5c0:	mov	r2, #5
   2f5c4:	movw	r1, #20352	; 0x4f80
   2f5c8:	mov	r0, #0
   2f5cc:	movt	r1, #5
   2f5d0:	bl	13688 <dcgettext@plt>
   2f5d4:	movw	r4, #62504	; 0xf428
   2f5d8:	movt	r4, #9
   2f5dc:	mov	r1, r0
   2f5e0:	mov	r0, #1
   2f5e4:	bl	13b38 <__printf_chk@plt>
   2f5e8:	ldr	r3, [r4]
   2f5ec:	cmp	r3, #0
   2f5f0:	popeq	{r3, r4, r5, pc}
   2f5f4:	ldr	r2, [r3, #40]	; 0x28
   2f5f8:	movw	r1, #20380	; 0x4f9c
   2f5fc:	mov	r0, #1
   2f600:	movt	r1, #5
   2f604:	bl	13b38 <__printf_chk@plt>
   2f608:	ldr	r3, [r4, #4]!
   2f60c:	cmp	r3, #0
   2f610:	bne	2f5f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b768>
   2f614:	pop	{r3, r4, r5, pc}
   2f618:	mov	r2, #5
   2f61c:	movw	r1, #20104	; 0x4e88
   2f620:	mov	r0, #0
   2f624:	movt	r1, #5
   2f628:	bl	13688 <dcgettext@plt>
   2f62c:	mov	r1, r0
   2f630:	mov	r0, #1
   2f634:	bl	13b38 <__printf_chk@plt>
   2f638:	mov	r2, #5
   2f63c:	movw	r1, #20156	; 0x4ebc
   2f640:	mov	r0, #0
   2f644:	movt	r1, #5
   2f648:	bl	13688 <dcgettext@plt>
   2f64c:	mov	r1, r0
   2f650:	mov	r0, #1
   2f654:	bl	13b38 <__printf_chk@plt>
   2f658:	tst	r4, #1
   2f65c:	popeq	{r3, r4, r5, pc}
   2f660:	b	2f5c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b734>
   2f664:	push	{r1, r2, r3}
   2f668:	mov	r3, #0
   2f66c:	push	{r4, lr}
   2f670:	movw	r4, #63248	; 0xf710
   2f674:	movt	r4, #9
   2f678:	sub	sp, sp, #12
   2f67c:	add	ip, sp, #24
   2f680:	ldr	lr, [r4]
   2f684:	mov	r2, ip
   2f688:	ldr	r1, [sp, #20]
   2f68c:	str	ip, [sp]
   2f690:	str	lr, [sp, #4]
   2f694:	bl	2f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b830>
   2f698:	ldr	r2, [sp, #4]
   2f69c:	ldr	r3, [r4]
   2f6a0:	cmp	r2, r3
   2f6a4:	bne	2f6b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b82c>
   2f6a8:	add	sp, sp, #12
   2f6ac:	pop	{r4, lr}
   2f6b0:	add	sp, sp, #12
   2f6b4:	bx	lr
   2f6b8:	bl	13694 <__stack_chk_fail@plt>
   2f6bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f6c0:	sub	sp, sp, #188	; 0xbc
   2f6c4:	movw	fp, #63248	; 0xf710
   2f6c8:	movt	fp, #9
   2f6cc:	str	r3, [sp, #28]
   2f6d0:	mov	r7, r0
   2f6d4:	ldrb	r3, [r1]
   2f6d8:	mov	sl, r2
   2f6dc:	ldr	r0, [fp]
   2f6e0:	mov	r2, #0
   2f6e4:	cmp	r3, #0
   2f6e8:	str	r2, [sp, #24]
   2f6ec:	str	r0, [sp, #180]	; 0xb4
   2f6f0:	mov	r0, r1
   2f6f4:	beq	2f750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8c4>
   2f6f8:	cmp	r3, #37	; 0x25
   2f6fc:	beq	2f794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b908>
   2f700:	mov	r5, r0
   2f704:	b	2f70c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b880>
   2f708:	mov	r5, r4
   2f70c:	ldrb	r3, [r5, #1]
   2f710:	add	r4, r5, #1
   2f714:	cmp	r3, #0
   2f718:	cmpne	r3, #37	; 0x25
   2f71c:	bne	2f708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b87c>
   2f720:	cmp	r0, r4
   2f724:	beq	2f73c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b0>
   2f728:	mov	r3, r7
   2f72c:	mov	r1, #1
   2f730:	rsb	r2, r0, r4
   2f734:	bl	137a8 <fwrite@plt>
   2f738:	ldrb	r3, [r5, #1]
   2f73c:	cmp	r3, #37	; 0x25
   2f740:	beq	2f798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b90c>
   2f744:	cmp	r3, #0
   2f748:	mov	r0, r4
   2f74c:	bne	2f6f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b86c>
   2f750:	ldr	r0, [sp, #28]
   2f754:	cmp	r0, #0
   2f758:	beq	2f770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8e4>
   2f75c:	movw	r2, #1336	; 0x538
   2f760:	movt	r2, #10
   2f764:	ldr	r1, [r2, #40]	; 0x28
   2f768:	cmp	r1, #0
   2f76c:	strne	r3, [r2, #4]
   2f770:	ldr	r1, [sp, #24]
   2f774:	cmp	r1, #0
   2f778:	bne	301c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c334>
   2f77c:	ldr	r2, [sp, #180]	; 0xb4
   2f780:	ldr	r3, [fp]
   2f784:	cmp	r2, r3
   2f788:	bne	301bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c330>
   2f78c:	add	sp, sp, #188	; 0xbc
   2f790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f794:	mov	r4, r0
   2f798:	ldrb	r3, [r4, #1]
   2f79c:	add	r5, r4, #2
   2f7a0:	sub	r2, r3, #37	; 0x25
   2f7a4:	cmp	r2, #81	; 0x51
   2f7a8:	ldrls	pc, [pc, r2, lsl #2]
   2f7ac:	b	2f90c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba80>
   2f7b0:	andeq	pc, r2, r4, lsl #19
   2f7b4:	andeq	pc, r2, ip, lsl #18
   2f7b8:	andeq	pc, r2, ip, lsl #18
   2f7bc:	andeq	pc, r2, ip, lsl #18
   2f7c0:	andeq	pc, r2, ip, lsl #18
   2f7c4:	andeq	pc, r2, ip, lsl #18
   2f7c8:	andeq	pc, r2, ip, lsl #18
   2f7cc:	andeq	pc, r2, ip, lsl #18
   2f7d0:	andeq	pc, r2, ip, lsl #18
   2f7d4:	andeq	pc, r2, ip, lsl #18
   2f7d8:	andeq	pc, r2, ip, lsl #18
   2f7dc:	andeq	pc, r2, ip, lsl #18
   2f7e0:	andeq	pc, r2, ip, lsl #18
   2f7e4:	andeq	pc, r2, ip, lsl #18
   2f7e8:	andeq	pc, r2, ip, lsl #18
   2f7ec:	andeq	pc, r2, ip, lsl #18
   2f7f0:	andeq	pc, r2, ip, lsl #18
   2f7f4:	andeq	pc, r2, ip, lsl #18
   2f7f8:	andeq	pc, r2, ip, lsl #18
   2f7fc:	andeq	pc, r2, ip, lsl #18
   2f800:	andeq	pc, r2, ip, lsl #18
   2f804:	andeq	pc, r2, ip, lsl #18
   2f808:	andeq	pc, r2, ip, lsl #18
   2f80c:	andeq	pc, r2, ip, lsl #18
   2f810:	andeq	pc, r2, ip, lsl #18
   2f814:	andeq	pc, r2, ip, lsl #18
   2f818:	andeq	pc, r2, ip, lsl #18
   2f81c:	andeq	pc, r2, ip, lsl #18
   2f820:	muleq	r2, ip, r9
   2f824:	andeq	pc, r2, ip, lsr #20
   2f828:	andeq	pc, r2, ip, ror #20
   2f82c:	andeq	pc, r2, ip, ror #20
   2f830:	andeq	pc, r2, r0, asr #23
   2f834:			; <UNDEFINED> instruction: 0x0002fdbc
   2f838:	andeq	pc, r2, ip, ror #20
   2f83c:	andeq	pc, r2, ip, ror #20
   2f840:	ldrdeq	pc, [r2], -r0
   2f844:	andeq	pc, r2, ip, lsl #18
   2f848:	andeq	pc, r2, ip, lsl #18
   2f84c:	andeq	pc, r2, ip, lsl #18
   2f850:	andeq	pc, r2, ip, lsl #18
   2f854:	andeq	pc, r2, ip, lsl #18
   2f858:	andeq	pc, r2, ip, lsl #18
   2f85c:	ldrdeq	pc, [r2], -r0
   2f860:	andeq	pc, r2, ip, lsl #18
   2f864:	strdeq	pc, [r2], -r0
   2f868:	andeq	pc, r2, r4, lsr sp	; <UNPREDICTABLE>
   2f86c:	andeq	pc, r2, r0, ror sp	; <UNPREDICTABLE>
   2f870:	andeq	pc, r2, ip, lsl #18
   2f874:	ldrdeq	pc, [r2], -ip
   2f878:	andeq	pc, r2, r0, lsl ip	; <UNPREDICTABLE>
   2f87c:			; <UNDEFINED> instruction: 0x0002fcb4
   2f880:	andeq	pc, r2, ip, lsl #18
   2f884:	andeq	pc, r2, ip, lsl #18
   2f888:	andeq	pc, r2, ip, lsl #18
   2f88c:	andeq	pc, r2, ip, lsl #18
   2f890:	andeq	pc, r2, ip, lsl #18
   2f894:	andeq	pc, r2, ip, lsl #18
   2f898:	andeq	pc, r2, ip, lsl #18
   2f89c:	andeq	pc, r2, ip, lsl #18
   2f8a0:	andeq	pc, r2, ip, lsl #18
   2f8a4:	andeq	pc, r2, ip, lsl #18
   2f8a8:	andeq	pc, r2, ip, lsl #18
   2f8ac:			; <UNDEFINED> instruction: 0x0002feb4
   2f8b0:	andeq	pc, r2, ip, lsl #18
   2f8b4:	andeq	pc, r2, ip, lsl #18
   2f8b8:	andeq	pc, r2, ip, lsl #18
   2f8bc:	andeq	pc, r2, ip, lsl #18
   2f8c0:	andeq	pc, r2, ip, lsl #18
   2f8c4:	andeq	pc, r2, ip, lsl #18
   2f8c8:	andeq	pc, r2, ip, lsl #18
   2f8cc:	strdeq	pc, [r2], -r8
   2f8d0:	andeq	pc, r2, ip, lsl #18
   2f8d4:	andeq	pc, r2, ip, lsl #18
   2f8d8:	andeq	pc, r2, ip, lsl #18
   2f8dc:	andeq	pc, r2, r4, asr lr	; <UNPREDICTABLE>
   2f8e0:	andeq	pc, r2, ip, lsl #18
   2f8e4:	andeq	pc, r2, ip, lsl #18
   2f8e8:	andeq	pc, r2, r0, lsl #29
   2f8ec:	andeq	pc, r2, ip, lsl #18
   2f8f0:	andeq	pc, r2, r0, lsr #29
   2f8f4:	andeq	pc, r2, ip, lsr #18
   2f8f8:	ldrb	r2, [r4, #2]
   2f8fc:	cmp	r2, #100	; 0x64
   2f900:	beq	30100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c274>
   2f904:	cmp	r2, #117	; 0x75
   2f908:	beq	30060 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c1d4>
   2f90c:	movw	r2, #20536	; 0x5038
   2f910:	mov	r0, r7
   2f914:	movt	r2, #5
   2f918:	mov	r1, #1
   2f91c:	bl	13b74 <__fprintf_chk@plt>
   2f920:	ldrb	r3, [r4, #2]
   2f924:	mov	r4, r5
   2f928:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2f92c:	add	sl, sl, #7
   2f930:	mov	r2, #100	; 0x64
   2f934:	bic	sl, sl, #7
   2f938:	movw	r3, #11112	; 0x2b68
   2f93c:	add	r0, sp, #80	; 0x50
   2f940:	movt	r3, #5
   2f944:	ldrd	r8, [sl]
   2f948:	mov	r1, #1
   2f94c:	add	sl, sl, #8
   2f950:	strd	r8, [sp]
   2f954:	bl	13acc <__sprintf_chk@plt>
   2f958:	ldrb	r2, [sp, #80]	; 0x50
   2f95c:	cmp	r2, #48	; 0x30
   2f960:	bne	30114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c288>
   2f964:	add	r3, sp, #81	; 0x51
   2f968:	mov	r0, r3
   2f96c:	ldrb	r2, [r3], #1
   2f970:	cmp	r2, #48	; 0x30
   2f974:	beq	2f968 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1badc>
   2f978:	cmp	r2, #0
   2f97c:	subeq	r0, r0, #1
   2f980:	b	2fbc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd3c>
   2f984:	mov	r0, #37	; 0x25
   2f988:	mov	r1, r7
   2f98c:	bl	1379c <_IO_putc@plt>
   2f990:	ldrb	r3, [r4, #2]
   2f994:	mov	r4, r5
   2f998:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2f99c:	ldr	r6, [sl]
   2f9a0:	mov	r1, r7
   2f9a4:	add	sl, sl, #4
   2f9a8:	ldr	r8, [r6, #180]	; 0xb4
   2f9ac:	ldr	r0, [r6]
   2f9b0:	bl	13dfc <fputs@plt>
   2f9b4:	cmp	r8, #0
   2f9b8:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2f9bc:	ldr	r3, [r8, #4]
   2f9c0:	ldr	r3, [r3, #4]
   2f9c4:	cmp	r3, #5
   2f9c8:	beq	3008c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c200>
   2f9cc:	cmp	r3, #2
   2f9d0:	bne	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2f9d4:	ldr	r3, [r6, #180]	; 0xb4
   2f9d8:	ldr	r3, [r3, #4]
   2f9dc:	ldr	r3, [r3, #4]
   2f9e0:	cmp	r3, #2
   2f9e4:	bne	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2f9e8:	ldr	r3, [r6, #172]	; 0xac
   2f9ec:	cmp	r3, #0
   2f9f0:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2f9f4:	ldr	r3, [r3, #32]
   2f9f8:	cmp	r3, #0
   2f9fc:	ldrne	r3, [r3]
   2fa00:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2fa04:	cmp	r3, #0
   2fa08:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2fa0c:	movw	r2, #20408	; 0x4fb8
   2fa10:	mov	r0, r7
   2fa14:	movt	r2, #5
   2fa18:	mov	r1, #1
   2fa1c:	bl	13b74 <__fprintf_chk@plt>
   2fa20:	ldrb	r3, [r4, #2]
   2fa24:	mov	r4, r5
   2fa28:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fa2c:	ldr	r1, [sl]
   2fa30:	add	sl, sl, #4
   2fa34:	cmp	r1, #0
   2fa38:	beq	3011c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c290>
   2fa3c:	ldr	r3, [r1, #148]	; 0x94
   2fa40:	cmp	r3, #0
   2fa44:	beq	2fa54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bbc8>
   2fa48:	ldrb	r2, [r3, #44]	; 0x2c
   2fa4c:	tst	r2, #1
   2fa50:	beq	300b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c224>
   2fa54:	ldr	r0, [r1]
   2fa58:	mov	r1, r7
   2fa5c:	bl	13dfc <fputs@plt>
   2fa60:	ldrb	r3, [r4, #2]
   2fa64:	mov	r4, r5
   2fa68:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fa6c:	add	r3, sl, #15
   2fa70:	ldr	r8, [sl]
   2fa74:	bic	r3, r3, #7
   2fa78:	ldr	r9, [sl, #4]
   2fa7c:	cmp	r8, #0
   2fa80:	add	sl, r3, #8
   2fa84:	ldrd	r0, [r3]
   2fa88:	strd	r0, [sp, #32]
   2fa8c:	beq	2fec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c03c>
   2fa90:	mov	r0, r8
   2fa94:	bl	13514 <bfd_generic_link_read_symbols@plt>
   2fa98:	cmp	r0, #0
   2fa9c:	beq	300e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c258>
   2faa0:	ldr	r3, [r8, #4]
   2faa4:	add	r2, sp, #40	; 0x28
   2faa8:	ldr	lr, [r8, #128]	; 0x80
   2faac:	add	ip, sp, #44	; 0x2c
   2fab0:	ldrd	r0, [sp, #32]
   2fab4:	str	r2, [sp, #8]
   2fab8:	mov	r2, #0
   2fabc:	str	ip, [sp, #12]
   2fac0:	strd	r0, [sp]
   2fac4:	add	r0, sp, #48	; 0x30
   2fac8:	str	r2, [sp, #20]
   2facc:	mov	r1, lr
   2fad0:	str	r0, [sp, #16]
   2fad4:	mov	r2, r9
   2fad8:	mov	r0, r8
   2fadc:	ldr	r3, [r3, #296]	; 0x128
   2fae0:	blx	r3
   2fae4:	cmp	r0, #0
   2fae8:	beq	2fec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c03c>
   2faec:	ldr	r2, [sp, #44]	; 0x2c
   2faf0:	cmp	r2, #0
   2faf4:	beq	2ffb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c128>
   2faf8:	ldrb	r3, [r4, #1]
   2fafc:	cmp	r3, #67	; 0x43
   2fb00:	cmpne	r3, #72	; 0x48
   2fb04:	bne	2ffb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c128>
   2fb08:	movw	r6, #156	; 0x9c
   2fb0c:	movt	r6, #10
   2fb10:	ldr	r1, [r6]
   2fb14:	cmp	r1, #0
   2fb18:	beq	2fb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bcb0>
   2fb1c:	ldr	r0, [r6, #4]
   2fb20:	cmp	r0, #0
   2fb24:	beq	2fb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bcb0>
   2fb28:	ldr	r3, [r6, #8]
   2fb2c:	cmp	r3, #0
   2fb30:	beq	2fb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bcb0>
   2fb34:	cmp	r8, r1
   2fb38:	beq	30188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c2fc>
   2fb3c:	mov	r2, #5
   2fb40:	movw	r1, #20468	; 0x4ff4
   2fb44:	mov	r0, #0
   2fb48:	movt	r1, #5
   2fb4c:	bl	13688 <dcgettext@plt>
   2fb50:	mov	r2, r8
   2fb54:	ldr	r3, [sp, #44]	; 0x2c
   2fb58:	mov	r1, r0
   2fb5c:	mov	r0, r7
   2fb60:	bl	2f664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   2fb64:	ldr	r0, [r6, #4]
   2fb68:	str	r8, [r6]
   2fb6c:	cmp	r0, #0
   2fb70:	beq	2fb78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bcec>
   2fb74:	bl	13574 <free@plt>
   2fb78:	ldr	r0, [sp, #40]	; 0x28
   2fb7c:	mov	r3, #0
   2fb80:	movw	r8, #156	; 0x9c
   2fb84:	str	r3, [r6, #4]
   2fb88:	cmp	r0, r3
   2fb8c:	movt	r8, #10
   2fb90:	beq	2fb9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd10>
   2fb94:	bl	137e4 <xstrdup@plt>
   2fb98:	str	r0, [r8, #4]
   2fb9c:	ldr	r0, [r6, #8]
   2fba0:	cmp	r0, #0
   2fba4:	beq	2fbac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bd20>
   2fba8:	bl	13574 <free@plt>
   2fbac:	ldr	r0, [sp, #44]	; 0x2c
   2fbb0:	mov	r8, #0
   2fbb4:	bl	137e4 <xstrdup@plt>
   2fbb8:	str	r0, [r6, #8]
   2fbbc:	b	2ffcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c140>
   2fbc0:	bl	13784 <bfd_get_error@plt>
   2fbc4:	bl	13cc4 <bfd_errmsg@plt>
   2fbc8:	mov	r1, r7
   2fbcc:	bl	13dfc <fputs@plt>
   2fbd0:	ldrb	r3, [r4, #2]
   2fbd4:	mov	r4, r5
   2fbd8:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fbdc:	add	sl, sl, #7
   2fbe0:	movw	r2, #11112	; 0x2b68
   2fbe4:	bic	sl, sl, #7
   2fbe8:	movt	r2, #5
   2fbec:	mov	r0, r7
   2fbf0:	mov	r1, #1
   2fbf4:	ldrd	r8, [sl]
   2fbf8:	add	sl, sl, #8
   2fbfc:	strd	r8, [sp]
   2fc00:	bl	13b74 <__fprintf_chk@plt>
   2fc04:	ldrb	r3, [r4, #2]
   2fc08:	mov	r4, r5
   2fc0c:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fc10:	add	sl, sl, #7
   2fc14:	movw	r3, #11112	; 0x2b68
   2fc18:	bic	sl, sl, #7
   2fc1c:	movt	r3, #5
   2fc20:	add	r0, sp, #80	; 0x50
   2fc24:	mov	r1, #1
   2fc28:	ldrd	r8, [sl]
   2fc2c:	mov	r2, #100	; 0x64
   2fc30:	add	sl, sl, #8
   2fc34:	strd	r8, [sp]
   2fc38:	bl	13acc <__sprintf_chk@plt>
   2fc3c:	ldrb	r3, [sp, #80]	; 0x50
   2fc40:	cmp	r3, #48	; 0x30
   2fc44:	bne	30180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c2f4>
   2fc48:	add	r2, sp, #81	; 0x51
   2fc4c:	mov	r8, r2
   2fc50:	ldrb	r3, [r2], #1
   2fc54:	cmp	r3, #48	; 0x30
   2fc58:	beq	2fc4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bdc0>
   2fc5c:	cmp	r3, #0
   2fc60:	subeq	r8, r8, #1
   2fc64:	mov	r0, r8
   2fc68:	bl	13a24 <strlen@plt>
   2fc6c:	cmp	r0, #7
   2fc70:	mov	r6, r0
   2fc74:	bgt	2fc90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1be04>
   2fc78:	add	r6, r6, #1
   2fc7c:	mov	r0, #32
   2fc80:	mov	r1, r7
   2fc84:	bl	1379c <_IO_putc@plt>
   2fc88:	cmp	r6, #8
   2fc8c:	bne	2fc78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bdec>
   2fc90:	mov	r3, r8
   2fc94:	movw	r2, #20388	; 0x4fa4
   2fc98:	mov	r0, r7
   2fc9c:	movt	r2, #5
   2fca0:	mov	r1, #1
   2fca4:	bl	13b74 <__fprintf_chk@plt>
   2fca8:	ldrb	r3, [r4, #2]
   2fcac:	mov	r4, r5
   2fcb0:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fcb4:	movw	r3, #1336	; 0x538
   2fcb8:	movt	r3, #10
   2fcbc:	mov	r2, #0
   2fcc0:	str	r2, [r3, #4]
   2fcc4:	ldrb	r3, [r4, #2]
   2fcc8:	mov	r4, r5
   2fccc:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fcd0:	movw	r3, #1460	; 0x5b4
   2fcd4:	movt	r3, #10
   2fcd8:	mov	r1, r7
   2fcdc:	ldr	r0, [r3]
   2fce0:	bl	13dfc <fputs@plt>
   2fce4:	ldrb	r3, [r4, #2]
   2fce8:	mov	r4, r5
   2fcec:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fcf0:	ldr	r3, [sl]
   2fcf4:	movw	r1, #20448	; 0x4fe0
   2fcf8:	mov	r0, r7
   2fcfc:	movt	r1, #5
   2fd00:	add	sl, sl, #4
   2fd04:	ldr	r2, [r3]
   2fd08:	ldrd	r8, [r3, #16]
   2fd0c:	ldr	r2, [r2]
   2fd10:	ldr	r2, [r2, #4]
   2fd14:	strd	r8, [sp]
   2fd18:	ldr	r3, [r3, #24]
   2fd1c:	ldr	r3, [r3, #32]
   2fd20:	str	r3, [sp, #8]
   2fd24:	bl	2f664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   2fd28:	ldrb	r3, [r4, #2]
   2fd2c:	mov	r4, r5
   2fd30:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fd34:	ldr	r2, [sl]
   2fd38:	add	sl, sl, #4
   2fd3c:	cmp	r2, #0
   2fd40:	beq	3015c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c2d0>
   2fd44:	ldr	r3, [r2, #8]
   2fd48:	cmp	r3, #0
   2fd4c:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2fd50:	ldr	ip, [r2, #4]
   2fd54:	movw	r2, #20440	; 0x4fd8
   2fd58:	movt	r2, #5
   2fd5c:	mov	r0, r7
   2fd60:	mov	r1, #1
   2fd64:	str	ip, [sp]
   2fd68:	bl	13b74 <__fprintf_chk@plt>
   2fd6c:	b	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2fd70:	ldr	r6, [sl]
   2fd74:	add	sl, sl, #4
   2fd78:	cmp	r6, #0
   2fd7c:	beq	2fd8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf00>
   2fd80:	ldrb	r3, [r6]
   2fd84:	cmp	r3, #0
   2fd88:	bne	2ff4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c0c0>
   2fd8c:	mov	r2, #5
   2fd90:	movw	r1, #20396	; 0x4fac
   2fd94:	mov	r0, #0
   2fd98:	movt	r1, #5
   2fd9c:	bl	13688 <dcgettext@plt>
   2fda0:	mov	r1, #1
   2fda4:	mov	r2, r0
   2fda8:	mov	r0, r7
   2fdac:	bl	13b74 <__fprintf_chk@plt>
   2fdb0:	ldrb	r3, [r4, #2]
   2fdb4:	mov	r4, r5
   2fdb8:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fdbc:	ldrb	r3, [r4, #2]
   2fdc0:	mov	r0, #1
   2fdc4:	mov	r4, r5
   2fdc8:	str	r0, [sp, #24]
   2fdcc:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fdd0:	ldr	r6, [sl]
   2fdd4:	add	sl, sl, #4
   2fdd8:	ldr	r3, [r6, #16]
   2fddc:	ldr	r3, [r3, #148]	; 0x94
   2fde0:	cmp	r3, #0
   2fde4:	beq	2fdf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf68>
   2fde8:	ldrb	r2, [r3, #44]	; 0x2c
   2fdec:	tst	r2, #1
   2fdf0:	beq	300c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c23c>
   2fdf4:	ldr	r0, [r6, #12]
   2fdf8:	mov	r1, r7
   2fdfc:	bl	13dfc <fputs@plt>
   2fe00:	ldr	r3, [r6, #16]
   2fe04:	ldr	r3, [r3, #148]	; 0x94
   2fe08:	cmp	r3, #0
   2fe0c:	beq	2fe1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf90>
   2fe10:	ldrb	r3, [r3, #44]	; 0x2c
   2fe14:	tst	r3, #1
   2fe18:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2fe1c:	ldr	r0, [r6, #12]
   2fe20:	ldr	r1, [r6, #8]
   2fe24:	bl	135a4 <filename_cmp@plt>
   2fe28:	cmp	r0, #0
   2fe2c:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2fe30:	ldr	r3, [r6, #8]
   2fe34:	movw	r2, #19772	; 0x4d3c
   2fe38:	mov	r0, r7
   2fe3c:	movt	r2, #5
   2fe40:	mov	r1, #1
   2fe44:	bl	13b74 <__fprintf_chk@plt>
   2fe48:	ldrb	r3, [r4, #2]
   2fe4c:	mov	r4, r5
   2fe50:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fe54:	movw	r2, #20520	; 0x5028
   2fe58:	add	r6, sl, #4
   2fe5c:	movt	r2, #5
   2fe60:	mov	r0, r7
   2fe64:	ldr	r3, [sl]
   2fe68:	mov	r1, #1
   2fe6c:	bl	13b74 <__fprintf_chk@plt>
   2fe70:	mov	sl, r6
   2fe74:	ldrb	r3, [r4, #2]
   2fe78:	mov	r4, r5
   2fe7c:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fe80:	add	r3, sl, #4
   2fe84:	ldr	r0, [sl]
   2fe88:	mov	r1, r7
   2fe8c:	mov	sl, r3
   2fe90:	bl	13dfc <fputs@plt>
   2fe94:	ldrb	r3, [r4, #2]
   2fe98:	mov	r4, r5
   2fe9c:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2fea0:	movw	r2, #20524	; 0x502c
   2fea4:	add	r6, sl, #4
   2fea8:	mov	r0, r7
   2feac:	movt	r2, #5
   2feb0:	b	2fe64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bfd8>
   2feb4:	movw	r2, #15016	; 0x3aa8
   2feb8:	add	r6, sl, #4
   2febc:	mov	r0, r7
   2fec0:	movt	r2, #5
   2fec4:	b	2fe64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bfd8>
   2fec8:	mov	r2, r8
   2fecc:	movw	r1, #19716	; 0x4d04
   2fed0:	mov	r0, r7
   2fed4:	movt	r1, #5
   2fed8:	bl	2f664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   2fedc:	mov	r8, #1
   2fee0:	ldrd	r2, [sp, #32]
   2fee4:	movw	r1, #20508	; 0x501c
   2fee8:	mov	r0, r7
   2feec:	movt	r1, #5
   2fef0:	strd	r2, [sp]
   2fef4:	mov	r2, r9
   2fef8:	bl	2f664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   2fefc:	cmp	r8, #0
   2ff00:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2ff04:	movw	r6, #156	; 0x9c
   2ff08:	movt	r6, #10
   2ff0c:	mov	r8, #0
   2ff10:	ldr	r0, [r6, #4]
   2ff14:	str	r8, [r6]
   2ff18:	cmp	r0, r8
   2ff1c:	beq	2ff28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c09c>
   2ff20:	bl	13574 <free@plt>
   2ff24:	str	r8, [r6, #4]
   2ff28:	ldr	r0, [r6, #8]
   2ff2c:	movw	r6, #156	; 0x9c
   2ff30:	movt	r6, #10
   2ff34:	cmp	r0, #0
   2ff38:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2ff3c:	bl	13574 <free@plt>
   2ff40:	mov	r3, #0
   2ff44:	str	r3, [r6, #8]
   2ff48:	b	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   2ff4c:	movw	r3, #1076	; 0x434
   2ff50:	movt	r3, #10
   2ff54:	ldr	r3, [r3]
   2ff58:	cmp	r3, #0
   2ff5c:	beq	2ff9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c110>
   2ff60:	movw	r3, #1088	; 0x440
   2ff64:	movt	r3, #10
   2ff68:	mov	r1, r6
   2ff6c:	mov	r2, #3
   2ff70:	ldr	r0, [r3, #52]	; 0x34
   2ff74:	bl	13bec <bfd_demangle@plt>
   2ff78:	subs	r8, r0, #0
   2ff7c:	beq	2ff9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c110>
   2ff80:	mov	r1, r7
   2ff84:	bl	13dfc <fputs@plt>
   2ff88:	mov	r0, r8
   2ff8c:	bl	13574 <free@plt>
   2ff90:	ldrb	r3, [r4, #2]
   2ff94:	mov	r4, r5
   2ff98:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2ff9c:	mov	r0, r6
   2ffa0:	mov	r1, r7
   2ffa4:	bl	13dfc <fputs@plt>
   2ffa8:	ldrb	r3, [r4, #2]
   2ffac:	mov	r4, r5
   2ffb0:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   2ffb4:	mov	r2, r8
   2ffb8:	movw	r1, #19716	; 0x4d04
   2ffbc:	mov	r0, r7
   2ffc0:	movt	r1, #5
   2ffc4:	bl	2f664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   2ffc8:	mov	r8, #1
   2ffcc:	ldr	r3, [sp, #40]	; 0x28
   2ffd0:	cmp	r3, #0
   2ffd4:	beq	2ffec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c160>
   2ffd8:	movw	r2, #20492	; 0x500c
   2ffdc:	mov	r0, r7
   2ffe0:	movt	r2, #5
   2ffe4:	mov	r1, #1
   2ffe8:	bl	13b74 <__fprintf_chk@plt>
   2ffec:	ldrb	r3, [r4, #1]
   2fff0:	ldr	r2, [sp, #44]	; 0x2c
   2fff4:	subs	r6, r3, #72	; 0x48
   2fff8:	movne	r6, #1
   2fffc:	cmp	r2, #0
   30000:	beq	3000c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c180>
   30004:	cmp	r3, #71	; 0x47
   30008:	beq	30148 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c2bc>
   3000c:	ldr	r3, [sp, #40]	; 0x28
   30010:	cmp	r3, #0
   30014:	beq	2fee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c054>
   30018:	ldr	r3, [sp, #48]	; 0x30
   3001c:	cmp	r3, #0
   30020:	beq	2fee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c054>
   30024:	movw	r2, #21440	; 0x53c0
   30028:	cmp	r6, #0
   3002c:	movt	r2, #5
   30030:	movw	r1, #15672	; 0x3d38
   30034:	mov	r0, r7
   30038:	movt	r1, #5
   3003c:	movne	r1, r2
   30040:	movw	r2, #20500	; 0x5014
   30044:	str	r1, [sp]
   30048:	movt	r2, #5
   3004c:	mov	r1, #1
   30050:	bl	13b74 <__fprintf_chk@plt>
   30054:	cmp	r6, #0
   30058:	bne	2fefc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c070>
   3005c:	b	2fee0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c054>
   30060:	movw	r2, #20532	; 0x5034
   30064:	add	r5, sl, #4
   30068:	movt	r2, #5
   3006c:	mov	r0, r7
   30070:	ldr	r3, [sl]
   30074:	mov	r1, #1
   30078:	bl	13b74 <__fprintf_chk@plt>
   3007c:	mov	sl, r5
   30080:	ldrb	r3, [r4, #3]
   30084:	add	r4, r4, #3
   30088:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   3008c:	ldr	r3, [r6, #172]	; 0xac
   30090:	ldr	r2, [r3, #140]	; 0x8c
   30094:	cmp	r2, #0
   30098:	beq	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   3009c:	ldr	r2, [r6, #20]
   300a0:	tst	r2, #33554432	; 0x2000000
   300a4:	bne	2f920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ba94>
   300a8:	ldr	r3, [r3, #132]	; 0x84
   300ac:	b	2fa04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bb78>
   300b0:	movw	r2, #15652	; 0x3d24
   300b4:	ldr	r3, [r3]
   300b8:	ldr	ip, [r1]
   300bc:	movt	r2, #5
   300c0:	mov	r0, r7
   300c4:	b	2fd60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bed4>
   300c8:	ldr	r3, [r3]
   300cc:	movw	r2, #20432	; 0x4fd0
   300d0:	mov	r0, r7
   300d4:	movt	r2, #5
   300d8:	mov	r1, #1
   300dc:	bl	13b74 <__fprintf_chk@plt>
   300e0:	b	2fdf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bf68>
   300e4:	mov	r2, #5
   300e8:	movw	r1, #15516	; 0x3c9c
   300ec:	movt	r1, #5
   300f0:	bl	13688 <dcgettext@plt>
   300f4:	mov	r1, r8
   300f8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   300fc:	b	2faa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bc14>
   30100:	movw	r2, #20528	; 0x5030
   30104:	add	r5, sl, #4
   30108:	mov	r0, r7
   3010c:	movt	r2, #5
   30110:	b	30070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c1e4>
   30114:	add	r0, sp, #80	; 0x50
   30118:	b	2f978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1baec>
   3011c:	movw	r3, #1460	; 0x5b4
   30120:	movt	r3, #10
   30124:	movw	r2, #20416	; 0x4fc0
   30128:	mov	r0, r7
   3012c:	ldr	r3, [r3]
   30130:	movt	r2, #5
   30134:	mov	r1, #1
   30138:	bl	13b74 <__fprintf_chk@plt>
   3013c:	ldrb	r3, [r4, #2]
   30140:	mov	r4, r5
   30144:	b	2f744 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b8b8>
   30148:	movw	r1, #20496	; 0x5010
   3014c:	mov	r0, r7
   30150:	movt	r1, #5
   30154:	bl	2f664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   30158:	b	30054 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c1c8>
   3015c:	bl	1a5b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x672c>
   30160:	movw	r1, #62396	; 0xf3bc
   30164:	movt	r1, #9
   30168:	add	r2, sp, #48	; 0x30
   3016c:	ldr	r1, [r1]
   30170:	str	r1, [sp, #52]	; 0x34
   30174:	mov	r3, r0
   30178:	str	r0, [sp, #56]	; 0x38
   3017c:	b	2fd48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bebc>
   30180:	add	r8, sp, #80	; 0x50
   30184:	b	2fc5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bdd0>
   30188:	ldr	r1, [sp, #40]	; 0x28
   3018c:	cmp	r1, #0
   30190:	beq	301c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c33c>
   30194:	bl	135a4 <filename_cmp@plt>
   30198:	cmp	r0, #0
   3019c:	bne	2fb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bcb0>
   301a0:	ldr	r0, [r6, #8]
   301a4:	ldr	r1, [sp, #44]	; 0x2c
   301a8:	bl	13490 <strcmp@plt>
   301ac:	cmp	r0, #0
   301b0:	moveq	r8, r0
   301b4:	beq	2ffcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c140>
   301b8:	b	2fb3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1bcb0>
   301bc:	bl	13694 <__stack_chk_fail@plt>
   301c0:	mov	r0, #1
   301c4:	bl	13c40 <xexit@plt>
   301c8:	mov	r1, r2
   301cc:	mov	r0, r3
   301d0:	b	301a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c31c>
   301d4:	push	{r0, r1, r2, r3}
   301d8:	movw	r0, #64592	; 0xfc50
   301dc:	push	{r4, lr}
   301e0:	movw	r4, #63248	; 0xf710
   301e4:	movt	r4, #9
   301e8:	sub	sp, sp, #8
   301ec:	add	ip, sp, #20
   301f0:	movt	r0, #9
   301f4:	ldr	lr, [r4]
   301f8:	mov	r3, #0
   301fc:	mov	r2, ip
   30200:	ldr	r1, [sp, #16]
   30204:	ldr	r0, [r0]
   30208:	str	lr, [sp, #4]
   3020c:	str	ip, [sp]
   30210:	bl	2f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b830>
   30214:	ldr	r2, [sp, #4]
   30218:	ldr	r3, [r4]
   3021c:	cmp	r2, r3
   30220:	bne	30234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3a8>
   30224:	add	sp, sp, #8
   30228:	pop	{r4, lr}
   3022c:	add	sp, sp, #16
   30230:	bx	lr
   30234:	bl	13694 <__stack_chk_fail@plt>
   30238:	push	{r0, r1, r2, r3}
   3023c:	movw	r3, #64592	; 0xfc50
   30240:	push	{r4, r5, r6, lr}
   30244:	movw	r4, #63248	; 0xf710
   30248:	movt	r4, #9
   3024c:	sub	sp, sp, #8
   30250:	movt	r3, #9
   30254:	movw	r5, #63776	; 0xf920
   30258:	ldr	r2, [r4]
   3025c:	movt	r5, #9
   30260:	ldr	r0, [r3]
   30264:	ldr	r6, [sp, #24]
   30268:	str	r2, [sp, #4]
   3026c:	bl	134f0 <fflush@plt>
   30270:	add	ip, sp, #28
   30274:	mov	r3, #1
   30278:	ldr	r0, [r5]
   3027c:	mov	r1, r6
   30280:	mov	r2, ip
   30284:	str	ip, [sp]
   30288:	bl	2f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b830>
   3028c:	ldr	r0, [r5]
   30290:	bl	134f0 <fflush@plt>
   30294:	ldr	r2, [sp, #4]
   30298:	ldr	r3, [r4]
   3029c:	cmp	r2, r3
   302a0:	bne	302b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c428>
   302a4:	add	sp, sp, #8
   302a8:	pop	{r4, r5, r6, lr}
   302ac:	add	sp, sp, #16
   302b0:	bx	lr
   302b4:	bl	13694 <__stack_chk_fail@plt>
   302b8:	push	{r3, r4, r5, lr}
   302bc:	mov	r2, #5
   302c0:	mov	r4, r1
   302c4:	mov	r5, r0
   302c8:	movw	r1, #20544	; 0x5040
   302cc:	mov	r0, #0
   302d0:	movt	r1, #5
   302d4:	bl	13688 <dcgettext@plt>
   302d8:	mov	r1, r5
   302dc:	mov	r2, r4
   302e0:	pop	{r3, r4, r5, lr}
   302e4:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   302e8:	push	{r0, r1, r2, r3}
   302ec:	movw	r3, #1336	; 0x538
   302f0:	movt	r3, #10
   302f4:	push	{r4, r5, lr}
   302f8:	movw	r4, #63248	; 0xf710
   302fc:	movt	r4, #9
   30300:	ldr	r1, [r3, #80]	; 0x50
   30304:	sub	sp, sp, #12
   30308:	ldr	r2, [r4]
   3030c:	cmp	r1, #0
   30310:	ldr	r1, [sp, #24]
   30314:	str	r2, [sp, #4]
   30318:	beq	30340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4b4>
   3031c:	ldrb	r2, [r1]
   30320:	add	r0, sp, #28
   30324:	str	r0, [sp]
   30328:	cmp	r2, #37	; 0x25
   3032c:	beq	30360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4d4>
   30330:	ldr	r0, [r3, #80]	; 0x50
   30334:	mov	r3, #0
   30338:	ldr	r2, [sp]
   3033c:	bl	2f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b830>
   30340:	ldr	r2, [sp, #4]
   30344:	ldr	r3, [r4]
   30348:	cmp	r2, r3
   3034c:	bne	303b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c52c>
   30350:	add	sp, sp, #12
   30354:	pop	{r4, r5, lr}
   30358:	add	sp, sp, #16
   3035c:	bx	lr
   30360:	ldrb	r2, [r1, #1]
   30364:	cmp	r2, #33	; 0x21
   30368:	bne	30330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4a4>
   3036c:	ldrb	r5, [r1, #2]
   30370:	cmp	r5, #0
   30374:	bne	30330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4a4>
   30378:	mov	r0, #16
   3037c:	bl	137b4 <xmalloc@plt>
   30380:	ldr	r2, [sp]
   30384:	movw	r3, #1016	; 0x3f8
   30388:	movt	r3, #10
   3038c:	ldr	r1, [r3]
   30390:	str	r5, [r0]
   30394:	ldr	ip, [r2]
   30398:	str	ip, [r0, #4]
   3039c:	ldr	ip, [r2, #4]
   303a0:	str	ip, [r0, #8]
   303a4:	ldr	r2, [r2, #8]
   303a8:	str	r2, [r0, #12]
   303ac:	str	r0, [r1]
   303b0:	str	r0, [r3]
   303b4:	b	30340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c4b4>
   303b8:	bl	13694 <__stack_chk_fail@plt>
   303bc:	movw	r3, #1336	; 0x538
   303c0:	movt	r3, #10
   303c4:	mov	r0, #32
   303c8:	ldr	r1, [r3, #80]	; 0x50
   303cc:	b	13c28 <fputc@plt>
   303d0:	movw	r3, #1336	; 0x538
   303d4:	movt	r3, #10
   303d8:	mov	r0, #10
   303dc:	ldr	r1, [r3, #80]	; 0x50
   303e0:	b	13c28 <fputc@plt>
   303e4:	push	{r4, r5, r6, lr}
   303e8:	subs	r6, r2, #0
   303ec:	mov	r5, r0
   303f0:	mov	r4, r1
   303f4:	beq	3043c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c5b0>
   303f8:	mov	r2, #5
   303fc:	movw	r1, #20572	; 0x505c
   30400:	mov	r0, #0
   30404:	movt	r1, #5
   30408:	bl	13688 <dcgettext@plt>
   3040c:	mov	r1, r5
   30410:	mov	r2, r4
   30414:	mov	r3, r6
   30418:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3041c:	mov	r2, #5
   30420:	movw	r1, #20660	; 0x50b4
   30424:	mov	r0, #0
   30428:	movt	r1, #5
   3042c:	bl	13688 <dcgettext@plt>
   30430:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   30434:	mov	r0, #1
   30438:	bl	13c40 <xexit@plt>
   3043c:	mov	r0, r6
   30440:	mov	r2, #5
   30444:	movw	r1, #20620	; 0x508c
   30448:	movt	r1, #5
   3044c:	bl	13688 <dcgettext@plt>
   30450:	mov	r1, r5
   30454:	mov	r2, r4
   30458:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3045c:	b	3041c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c590>
   30460:	push	{r4, r5, r6, lr}
   30464:	movw	r4, #63248	; 0xf710
   30468:	movt	r4, #9
   3046c:	sub	sp, sp, #112	; 0x70
   30470:	mov	r2, #0
   30474:	movw	r1, #20692	; 0x50d4
   30478:	ldr	r3, [r4]
   3047c:	movt	r1, #5
   30480:	str	r3, [sp, #108]	; 0x6c
   30484:	bl	13760 <concat@plt>
   30488:	mov	r2, sp
   3048c:	mov	r5, r0
   30490:	mov	r0, #3
   30494:	mov	r1, r5
   30498:	bl	13de4 <__xstat64@plt>
   3049c:	cmp	r0, #0
   304a0:	movne	r6, #0
   304a4:	bne	304bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c630>
   304a8:	ldr	r6, [sp, #16]
   304ac:	and	r6, r6, #61440	; 0xf000
   304b0:	subs	r3, r6, #16384	; 0x4000
   304b4:	rsbs	r6, r3, #0
   304b8:	adcs	r6, r6, r3
   304bc:	mov	r0, r5
   304c0:	bl	13574 <free@plt>
   304c4:	ldr	r2, [sp, #108]	; 0x6c
   304c8:	ldr	r3, [r4]
   304cc:	mov	r0, r6
   304d0:	cmp	r2, r3
   304d4:	bne	304e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c654>
   304d8:	add	sp, sp, #112	; 0x70
   304dc:	pop	{r4, r5, r6, pc}
   304e0:	bl	13694 <__stack_chk_fail@plt>
   304e4:	push	{r4, r5, r6, r7, r8, lr}
   304e8:	mov	r7, r1
   304ec:	movw	r1, #8320	; 0x2080
   304f0:	movt	r1, #7
   304f4:	mov	r6, r0
   304f8:	bl	13cb8 <fopen64@plt>
   304fc:	subs	r4, r0, #0
   30500:	beq	305b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c72c>
   30504:	movw	r5, #1472	; 0x5c0
   30508:	movt	r5, #10
   3050c:	ldr	r3, [r5]
   30510:	cmp	r3, #0
   30514:	moveq	r0, r3
   30518:	beq	30550 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c6c4>
   3051c:	mov	r0, r6
   30520:	bl	13610 <lrealpath@plt>
   30524:	mov	r8, r0
   30528:	bl	13a24 <strlen@plt>
   3052c:	movw	r3, #1080	; 0x438
   30530:	movt	r3, #10
   30534:	ldr	r3, [r3]
   30538:	cmp	r0, r3
   3053c:	bgt	3058c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c700>
   30540:	mov	r5, #0
   30544:	mov	r0, r8
   30548:	bl	13574 <free@plt>
   3054c:	mov	r0, r5
   30550:	movw	r3, #1464	; 0x5b8
   30554:	movt	r3, #10
   30558:	str	r0, [r7]
   3055c:	ldr	r3, [r3]
   30560:	cmp	r3, #0
   30564:	beq	30584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c6f8>
   30568:	movw	r1, #20732	; 0x50fc
   3056c:	mov	r0, #0
   30570:	movt	r1, #5
   30574:	mov	r2, #5
   30578:	bl	13688 <dcgettext@plt>
   3057c:	mov	r1, r6
   30580:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   30584:	mov	r0, r4
   30588:	pop	{r4, r5, r6, r7, r8, pc}
   3058c:	ldrb	r2, [r8, r3]
   30590:	cmp	r2, #47	; 0x2f
   30594:	bne	30540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c6b4>
   30598:	mov	r2, #0
   3059c:	mov	r1, r8
   305a0:	strb	r2, [r8, r3]
   305a4:	ldr	r0, [r5]
   305a8:	bl	135a4 <filename_cmp@plt>
   305ac:	rsbs	r5, r0, #1
   305b0:	movcc	r5, #0
   305b4:	b	30544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c6b8>
   305b8:	movw	r3, #1464	; 0x5b8
   305bc:	movt	r3, #10
   305c0:	ldr	r3, [r3]
   305c4:	cmp	r3, #0
   305c8:	beq	30584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c6f8>
   305cc:	mov	r2, #5
   305d0:	movw	r1, #20704	; 0x50e0
   305d4:	movt	r1, #5
   305d8:	bl	13688 <dcgettext@plt>
   305dc:	mov	r1, r6
   305e0:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   305e4:	b	30584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c6f8>
   305e8:	push	{r4, r5, r6, lr}
   305ec:	subs	r6, r1, #0
   305f0:	mov	r5, r0
   305f4:	bne	3060c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c780>
   305f8:	movw	r3, #1336	; 0x538
   305fc:	movt	r3, #10
   30600:	ldr	r3, [r3, #60]	; 0x3c
   30604:	cmp	r3, #0
   30608:	popne	{r4, r5, r6, pc}
   3060c:	mov	r0, #12
   30610:	bl	137b4 <xmalloc@plt>
   30614:	movw	r3, #62516	; 0xf434
   30618:	movt	r3, #9
   3061c:	mov	r2, #0
   30620:	ldr	r1, [r3]
   30624:	str	r6, [r0, #8]
   30628:	mov	r4, r0
   3062c:	str	r2, [r0]
   30630:	str	r0, [r3]
   30634:	str	r0, [r1]
   30638:	ldrb	r3, [r5]
   3063c:	cmp	r3, #61	; 0x3d
   30640:	beq	30654 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c7c8>
   30644:	mov	r0, r5
   30648:	bl	137e4 <xstrdup@plt>
   3064c:	str	r0, [r4, #4]
   30650:	pop	{r4, r5, r6, pc}
   30654:	movw	r3, #1240	; 0x4d8
   30658:	movt	r3, #10
   3065c:	add	r1, r5, #1
   30660:	ldr	r0, [r3]
   30664:	bl	13760 <concat@plt>
   30668:	str	r0, [r4, #4]
   3066c:	pop	{r4, r5, r6, pc}
   30670:	push	{r4, r5, r6, r7, r8, r9, lr}
   30674:	movw	r8, #63248	; 0xf710
   30678:	movt	r8, #9
   3067c:	sub	sp, sp, #12
   30680:	subs	r6, r1, #0
   30684:	mov	r7, r0
   30688:	ldr	r3, [r8]
   3068c:	str	r3, [sp, #4]
   30690:	beq	307ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c920>
   30694:	movw	r4, #168	; 0xa8
   30698:	movt	r4, #10
   3069c:	ldr	r3, [r4]
   306a0:	cmp	r3, #0
   306a4:	beq	307c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c934>
   306a8:	movw	r9, #62516	; 0xf434
   306ac:	movt	r9, #9
   306b0:	mov	r2, r3
   306b4:	ldr	r3, [r9]
   306b8:	cmp	r6, #0
   306bc:	str	r2, [r3]
   306c0:	bne	30770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8e4>
   306c4:	movw	r2, #1620	; 0x654
   306c8:	movt	r2, #10
   306cc:	ldr	r4, [r2]
   306d0:	cmp	r4, #0
   306d4:	bne	306e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c85c>
   306d8:	b	3077c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8f0>
   306dc:	ldr	r4, [r4]
   306e0:	cmp	r4, #0
   306e4:	beq	30778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8ec>
   306e8:	mov	r2, r7
   306ec:	mov	r3, #0
   306f0:	movw	r1, #11128	; 0x2b78
   306f4:	ldr	r0, [r4, #4]
   306f8:	movt	r1, #5
   306fc:	bl	13760 <concat@plt>
   30700:	mov	r1, sp
   30704:	mov	r6, r0
   30708:	bl	304e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c658>
   3070c:	mov	r5, r0
   30710:	mov	r0, r6
   30714:	bl	13574 <free@plt>
   30718:	cmp	r5, #0
   3071c:	beq	306dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c850>
   30720:	ldr	r3, [r9]
   30724:	mov	r2, #0
   30728:	str	r2, [r3]
   3072c:	mov	r1, r7
   30730:	ldr	r2, [sp]
   30734:	mov	r0, r5
   30738:	bl	1a204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6378>
   3073c:	movw	r2, #62396	; 0xf3bc
   30740:	movw	r3, #104	; 0x68
   30744:	movt	r2, #9
   30748:	movt	r3, #10
   3074c:	mov	r1, #1
   30750:	str	r1, [r2]
   30754:	str	r5, [r3]
   30758:	ldr	r2, [sp, #4]
   3075c:	ldr	r3, [r8]
   30760:	cmp	r2, r3
   30764:	bne	3089c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca10>
   30768:	add	sp, sp, #12
   3076c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   30770:	ldr	r4, [r4]
   30774:	b	306d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c844>
   30778:	ldr	r3, [r9]
   3077c:	mov	r4, #0
   30780:	mov	r0, #1
   30784:	str	r4, [r3]
   30788:	bl	137c0 <bfd_set_error@plt>
   3078c:	mov	r0, r4
   30790:	mov	r2, #5
   30794:	movw	r1, #20780	; 0x512c
   30798:	movt	r1, #5
   3079c:	bl	13688 <dcgettext@plt>
   307a0:	mov	r1, r7
   307a4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   307a8:	b	30758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8cc>
   307ac:	mov	r1, sp
   307b0:	bl	304e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c658>
   307b4:	subs	r5, r0, #0
   307b8:	bne	3072c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c8a0>
   307bc:	b	30694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c808>
   307c0:	movw	r5, #1460	; 0x5b4
   307c4:	movt	r5, #10
   307c8:	movw	r1, #20756	; 0x5114
   307cc:	movw	r2, #20768	; 0x5120
   307d0:	ldr	r0, [r5]
   307d4:	movt	r1, #5
   307d8:	movt	r2, #5
   307dc:	bl	13be0 <make_relative_prefix@plt>
   307e0:	subs	r9, r0, #0
   307e4:	beq	30824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c998>
   307e8:	bl	30460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c5d4>
   307ec:	cmp	r0, #0
   307f0:	mov	r0, r9
   307f4:	beq	30820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c994>
   307f8:	movw	r9, #62516	; 0xf434
   307fc:	movt	r9, #9
   30800:	mov	r1, #1
   30804:	ldr	r5, [r9]
   30808:	str	r4, [r9]
   3080c:	bl	305e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c75c>
   30810:	ldr	r2, [r4]
   30814:	str	r5, [r9]
   30818:	mov	r3, r5
   3081c:	b	306b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c82c>
   30820:	bl	13574 <free@plt>
   30824:	movw	r1, #20756	; 0x5114
   30828:	movw	r2, #20768	; 0x5120
   3082c:	movt	r1, #5
   30830:	movt	r2, #5
   30834:	ldr	r0, [r5]
   30838:	bl	13be0 <make_relative_prefix@plt>
   3083c:	subs	r9, r0, #0
   30840:	beq	30858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c9cc>
   30844:	bl	30460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c5d4>
   30848:	cmp	r0, #0
   3084c:	mov	r0, r9
   30850:	bne	307f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c96c>
   30854:	bl	13574 <free@plt>
   30858:	movw	r1, #7988	; 0x1f34
   3085c:	movt	r1, #7
   30860:	ldr	r0, [r5]
   30864:	mov	r2, r1
   30868:	bl	13be0 <make_relative_prefix@plt>
   3086c:	subs	r5, r0, #0
   30870:	beq	30888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c9fc>
   30874:	bl	30460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c5d4>
   30878:	cmp	r0, #0
   3087c:	mov	r0, r5
   30880:	bne	307f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c96c>
   30884:	bl	13574 <free@plt>
   30888:	movw	r9, #62516	; 0xf434
   3088c:	movt	r9, #9
   30890:	ldr	r2, [r4]
   30894:	ldr	r3, [r9]
   30898:	b	306b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c82c>
   3089c:	bl	13694 <__stack_chk_fail@plt>
   308a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   308a4:	mov	r9, r1
   308a8:	sub	sp, sp, #20
   308ac:	ldr	r1, [r1, #32]
   308b0:	mov	r4, r0
   308b4:	bl	135f8 <bfd_openr@plt>
   308b8:	movw	r2, #1464	; 0x5b8
   308bc:	movt	r2, #10
   308c0:	ldr	r2, [r2]
   308c4:	cmp	r2, #0
   308c8:	mov	r5, r0
   308cc:	str	r0, [r9, #16]
   308d0:	beq	30904 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca78>
   308d4:	cmp	r0, #0
   308d8:	movweq	r1, #20828	; 0x515c
   308dc:	movwne	r1, #20856	; 0x5178
   308e0:	movteq	r1, #5
   308e4:	movtne	r1, #5
   308e8:	moveq	r2, #5
   308ec:	movne	r0, #0
   308f0:	movne	r2, #5
   308f4:	bl	13688 <dcgettext@plt>
   308f8:	mov	r1, r4
   308fc:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   30900:	ldr	r5, [r9, #16]
   30904:	cmp	r5, #0
   30908:	beq	30a98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cc0c>
   3090c:	ldrb	r2, [r5, #44]	; 0x2c
   30910:	ldr	r1, [r5, #40]	; 0x28
   30914:	orr	r2, r2, #8
   30918:	strb	r2, [r5, #44]	; 0x2c
   3091c:	orr	r1, r1, #1048576	; 0x100000
   30920:	str	r1, [r5, #40]	; 0x28
   30924:	ldrb	r2, [r9, #37]	; 0x25
   30928:	lsrs	r2, r2, #7
   3092c:	ldrbne	r2, [r5, #44]	; 0x2c
   30930:	orrne	r2, r2, #64	; 0x40
   30934:	strbne	r2, [r5, #44]	; 0x2c
   30938:	ldrb	r2, [r9, #36]	; 0x24
   3093c:	and	r2, r2, #36	; 0x24
   30940:	cmp	r2, #32
   30944:	beq	30a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cba4>
   30948:	mov	r0, r5
   3094c:	mov	r1, #2
   30950:	bl	13d48 <bfd_check_format@plt>
   30954:	cmp	r0, #0
   30958:	ldreq	r6, [r9, #16]
   3095c:	bne	30a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbf8>
   30960:	cmp	r6, #0
   30964:	beq	30a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cba4>
   30968:	mov	r0, r6
   3096c:	mov	r1, #1
   30970:	bl	13d48 <bfd_check_format@plt>
   30974:	cmp	r0, #0
   30978:	beq	30a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb98>
   3097c:	ldrb	r2, [r9, #36]	; 0x24
   30980:	ubfx	r5, r2, #5, #1
   30984:	cmp	r5, #0
   30988:	bne	3099c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb10>
   3098c:	ldr	r1, [r9, #16]
   30990:	ldr	r1, [r1, #40]	; 0x28
   30994:	tst	r1, #2048	; 0x800
   30998:	bne	30bf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd68>
   3099c:	tst	r2, #4
   309a0:	movw	r5, #1088	; 0x440
   309a4:	movteq	r5, #10
   309a8:	beq	30a38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbac>
   309ac:	movw	r7, #1244	; 0x4dc
   309b0:	movt	r5, #10
   309b4:	movt	r7, #10
   309b8:	mov	r0, r6
   309bc:	ldr	r1, [r5, #52]	; 0x34
   309c0:	ldr	r2, [r7, #32]
   309c4:	bl	13790 <bfd_arch_get_compatible@plt>
   309c8:	cmp	r0, #0
   309cc:	bne	30a38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbac>
   309d0:	ldr	r2, [r6, #4]
   309d4:	ldr	r2, [r2, #4]
   309d8:	cmp	r2, #4
   309dc:	beq	30c24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd98>
   309e0:	ldr	r2, [r7, #24]
   309e4:	cmp	r2, #0
   309e8:	beq	30a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb80>
   309ec:	mov	r2, #5
   309f0:	movw	r1, #20920	; 0x51b8
   309f4:	mov	r0, #0
   309f8:	movt	r1, #5
   309fc:	bl	13688 <dcgettext@plt>
   30a00:	mov	r1, r4
   30a04:	ldr	r2, [r9, #12]
   30a08:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   30a0c:	ldr	r0, [r9, #16]
   30a10:	bl	13c4c <bfd_close@plt>
   30a14:	mov	r2, #0
   30a18:	mov	r0, r2
   30a1c:	str	r2, [r9, #16]
   30a20:	b	30a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbd0>
   30a24:	ldr	r2, [r9, #16]
   30a28:	cmp	r2, r6
   30a2c:	beq	30acc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cc40>
   30a30:	movw	r5, #1088	; 0x440
   30a34:	movt	r5, #10
   30a38:	ldrb	r2, [r5, #1]
   30a3c:	tst	r2, #1
   30a40:	beq	30a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbcc>
   30a44:	movw	r2, #356	; 0x164
   30a48:	movt	r2, #10
   30a4c:	ldr	r2, [r2]
   30a50:	cmp	r2, #0
   30a54:	beq	30a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbd8>
   30a58:	mov	r0, #1
   30a5c:	add	sp, sp, #20
   30a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30a64:	ldr	r0, [r9, #16]
   30a68:	mov	r1, #1
   30a6c:	bl	13d48 <bfd_check_format@plt>
   30a70:	cmp	r0, #0
   30a74:	beq	30a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbcc>
   30a78:	mov	r0, r9
   30a7c:	bl	33740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8b4>
   30a80:	b	30a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbcc>
   30a84:	ldr	r0, [r9, #16]
   30a88:	mov	r1, #0
   30a8c:	bl	13d54 <bfd_openr_next_archived_file@plt>
   30a90:	mov	r6, r0
   30a94:	b	30960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cad4>
   30a98:	bl	13784 <bfd_get_error@plt>
   30a9c:	cmp	r0, #2
   30aa0:	movne	r0, r5
   30aa4:	bne	30a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbd0>
   30aa8:	mov	r2, #5
   30aac:	movw	r1, #20888	; 0x5198
   30ab0:	mov	r0, r5
   30ab4:	movt	r1, #5
   30ab8:	bl	13688 <dcgettext@plt>
   30abc:	ldr	r1, [r9, #32]
   30ac0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   30ac4:	mov	r0, r5
   30ac8:	b	30a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbd0>
   30acc:	ldrb	r2, [r9, #36]	; 0x24
   30ad0:	tst	r2, #4
   30ad4:	beq	30a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cba4>
   30ad8:	bl	13784 <bfd_get_error@plt>
   30adc:	cmp	r0, #12
   30ae0:	bne	30a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cba4>
   30ae4:	mov	r0, r9
   30ae8:	bl	2f104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b278>
   30aec:	subs	fp, r0, #0
   30af0:	bne	30a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cba4>
   30af4:	mov	r0, r4
   30af8:	mov	r1, fp
   30afc:	bl	30670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c7e4>
   30b00:	movw	r3, #168	; 0xa8
   30b04:	movw	r2, #996	; 0x3e4
   30b08:	movt	r3, #10
   30b0c:	movt	r2, #10
   30b10:	str	r3, [sp, #8]
   30b14:	mov	r1, #1
   30b18:	movw	r5, #976	; 0x3d0
   30b1c:	str	r1, [r3, #4]
   30b20:	movt	r5, #10
   30b24:	str	fp, [r2]
   30b28:	movw	r6, #366	; 0x16e
   30b2c:	bl	1a558 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x66cc>
   30b30:	movw	sl, #259	; 0x103
   30b34:	movw	r3, #1244	; 0x4dc
   30b38:	movt	r3, #10
   30b3c:	str	r3, [sp, #12]
   30b40:	b	30b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccec>
   30b44:	cmp	r6, sl
   30b48:	bge	30c60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cdd4>
   30b4c:	movw	r3, #258	; 0x102
   30b50:	cmp	r6, r3
   30b54:	bne	30b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccdc>
   30b58:	ldr	r0, [r5, #8]
   30b5c:	cmp	r0, #0
   30b60:	beq	30b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccdc>
   30b64:	bl	13574 <free@plt>
   30b68:	bl	18190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4304>
   30b6c:	mov	r6, r0
   30b70:	cmp	r6, #0
   30b74:	beq	30c6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cde0>
   30b78:	cmp	r6, #260	; 0x104
   30b7c:	ble	30b44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccb8>
   30b80:	cmp	r6, #300	; 0x12c
   30b84:	bne	30c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cdc4>
   30b88:	bl	18190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4304>
   30b8c:	cmp	r0, #40	; 0x28
   30b90:	mov	r6, r0
   30b94:	bne	30b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cce4>
   30b98:	bl	18190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4304>
   30b9c:	cmp	r0, sl
   30ba0:	mov	r6, r0
   30ba4:	bne	30b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cce4>
   30ba8:	ldr	r8, [r5]
   30bac:	bl	18190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4304>
   30bb0:	cmp	r0, #44	; 0x2c
   30bb4:	movne	r6, #0
   30bb8:	movne	r7, r6
   30bbc:	beq	30d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce88>
   30bc0:	cmp	r0, #41	; 0x29
   30bc4:	beq	30ccc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce40>
   30bc8:	mov	r0, r8
   30bcc:	bl	13574 <free@plt>
   30bd0:	cmp	r7, #0
   30bd4:	beq	30be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd54>
   30bd8:	mov	r0, r7
   30bdc:	bl	13574 <free@plt>
   30be0:	cmp	r6, #0
   30be4:	beq	30b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccdc>
   30be8:	mov	r0, r6
   30bec:	bl	13574 <free@plt>
   30bf0:	b	30b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccdc>
   30bf4:	mov	r2, #5
   30bf8:	movw	r1, #20972	; 0x51ec
   30bfc:	mov	r0, r5
   30c00:	movt	r1, #5
   30c04:	bl	13688 <dcgettext@plt>
   30c08:	mov	r1, r4
   30c0c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   30c10:	ldr	r0, [r9, #16]
   30c14:	bl	13c4c <bfd_close@plt>
   30c18:	str	r5, [r9, #16]
   30c1c:	mov	r0, r5
   30c20:	b	30a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbd0>
   30c24:	ldr	r2, [r5, #52]	; 0x34
   30c28:	ldr	r2, [r2, #4]
   30c2c:	ldr	r2, [r2, #4]
   30c30:	cmp	r2, #4
   30c34:	bne	309e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb54>
   30c38:	ldr	r0, [r9, #16]
   30c3c:	mov	r1, #2
   30c40:	bl	13d48 <bfd_check_format@plt>
   30c44:	cmp	r0, #0
   30c48:	beq	309e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb54>
   30c4c:	b	30a38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cbac>
   30c50:	blt	30b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccdc>
   30c54:	sub	r6, r6, #372	; 0x174
   30c58:	cmp	r6, #1
   30c5c:	bhi	30b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccdc>
   30c60:	ldr	r0, [r5]
   30c64:	bl	13574 <free@plt>
   30c68:	b	30b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ccdc>
   30c6c:	bl	1a590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x6704>
   30c70:	movw	r5, #65000	; 0xfde8
   30c74:	ldr	r3, [sp, #8]
   30c78:	movt	r5, #9
   30c7c:	ldr	r0, [r5]
   30c80:	str	r6, [r3, #4]
   30c84:	bl	13b80 <fclose@plt>
   30c88:	cmp	fp, #0
   30c8c:	str	r6, [r5]
   30c90:	beq	30a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cba4>
   30c94:	movw	r2, #1244	; 0x4dc
   30c98:	movt	r2, #10
   30c9c:	ldr	r2, [r2, #24]
   30ca0:	cmp	r2, #0
   30ca4:	beq	30a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb80>
   30ca8:	mov	r0, r6
   30cac:	mov	r2, #5
   30cb0:	movw	r1, #20920	; 0x51b8
   30cb4:	movt	r1, #5
   30cb8:	bl	13688 <dcgettext@plt>
   30cbc:	mov	r1, r4
   30cc0:	ldr	r2, [r9, #12]
   30cc4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   30cc8:	b	30a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cb80>
   30ccc:	ldr	r3, [sp, #12]
   30cd0:	ldr	r2, [r3, #44]	; 0x2c
   30cd4:	cmp	r2, #1
   30cd8:	beq	30d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ceac>
   30cdc:	cmp	r2, #2
   30ce0:	bne	30d30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cea4>
   30ce4:	cmp	r6, #0
   30ce8:	movne	r2, r6
   30cec:	moveq	r2, r8
   30cf0:	str	r2, [sp, #4]
   30cf4:	bl	237fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf970>
   30cf8:	ldr	r2, [sp, #4]
   30cfc:	mov	r1, r0
   30d00:	mov	r0, r2
   30d04:	bl	13490 <strcmp@plt>
   30d08:	cmp	r0, #0
   30d0c:	movne	fp, #1
   30d10:	b	30bc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd3c>
   30d14:	bl	18190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4304>
   30d18:	cmp	r0, sl
   30d1c:	mov	r6, r0
   30d20:	beq	30d48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cebc>
   30d24:	mov	r0, r8
   30d28:	bl	13574 <free@plt>
   30d2c:	b	30b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cce4>
   30d30:	mov	r2, r8
   30d34:	b	30cf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce64>
   30d38:	cmp	r7, #0
   30d3c:	movne	r2, r7
   30d40:	moveq	r2, r8
   30d44:	b	30cf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ce64>
   30d48:	ldr	r7, [r5]
   30d4c:	bl	18190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4304>
   30d50:	cmp	r0, #44	; 0x2c
   30d54:	mov	r6, r0
   30d58:	beq	30d70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cee4>
   30d5c:	mov	r0, r8
   30d60:	bl	13574 <free@plt>
   30d64:	mov	r0, r7
   30d68:	bl	13574 <free@plt>
   30d6c:	b	30b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cce4>
   30d70:	bl	18190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4304>
   30d74:	cmp	r0, sl
   30d78:	mov	r6, r0
   30d7c:	bne	30d5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ced0>
   30d80:	ldr	r6, [r5]
   30d84:	bl	18190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x4304>
   30d88:	b	30bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cd34>
   30d8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30d90:	mov	r5, r1
   30d94:	ldrb	r1, [r1, #36]	; 0x24
   30d98:	mov	r8, r2
   30d9c:	sub	sp, sp, #20
   30da0:	mov	r6, r0
   30da4:	ands	r2, r1, #1
   30da8:	mov	r9, r3
   30dac:	bne	30de8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf5c>
   30db0:	tst	r1, #8
   30db4:	ldr	r0, [r5, #8]
   30db8:	beq	30dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf3c>
   30dbc:	ldrb	r3, [r0]
   30dc0:	cmp	r3, #47	; 0x2f
   30dc4:	beq	30ed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d048>
   30dc8:	mov	r1, r5
   30dcc:	bl	308a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca14>
   30dd0:	cmp	r0, #0
   30dd4:	bne	30ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d030>
   30dd8:	ldr	r3, [r5, #8]
   30ddc:	ldrb	r3, [r3]
   30de0:	cmp	r3, #47	; 0x2f
   30de4:	beq	30ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d03c>
   30de8:	movw	r3, #1620	; 0x654
   30dec:	movt	r3, #10
   30df0:	ldr	r4, [r3]
   30df4:	cmp	r4, #0
   30df8:	movwne	r7, #1088	; 0x440
   30dfc:	movne	sl, #0
   30e00:	movtne	r7, #10
   30e04:	bne	30e44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cfb8>
   30e08:	b	30ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d03c>
   30e0c:	ldr	r0, [r4, #4]
   30e10:	ldr	r2, [r5, #8]
   30e14:	bl	13760 <concat@plt>
   30e18:	mov	fp, r0
   30e1c:	mov	r0, fp
   30e20:	mov	r1, r5
   30e24:	bl	308a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca14>
   30e28:	cmp	r0, #0
   30e2c:	mov	r0, fp
   30e30:	bne	30eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d02c>
   30e34:	bl	13574 <free@plt>
   30e38:	ldr	r4, [r4]
   30e3c:	cmp	r4, #0
   30e40:	beq	30ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d03c>
   30e44:	ldrb	ip, [r5, #36]	; 0x24
   30e48:	tst	ip, #32
   30e4c:	beq	30e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cff0>
   30e50:	ldrb	r3, [r7]
   30e54:	mov	r0, r6
   30e58:	mov	r1, r4
   30e5c:	mov	r2, r5
   30e60:	and	r3, r3, #3
   30e64:	cmp	r3, #2
   30e68:	beq	30e7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cff0>
   30e6c:	bl	2f018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b18c>
   30e70:	cmp	r0, #0
   30e74:	bne	30ebc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d030>
   30e78:	ldrb	ip, [r5, #36]	; 0x24
   30e7c:	and	ip, ip, #3
   30e80:	movw	r1, #11128	; 0x2b78
   30e84:	cmp	ip, #1
   30e88:	mov	r3, #0
   30e8c:	movt	r1, #5
   30e90:	bne	30e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf80>
   30e94:	ldr	r0, [r4, #4]
   30e98:	movw	r1, #11128	; 0x2b78
   30e9c:	ldr	r3, [r5, #8]
   30ea0:	movt	r1, #5
   30ea4:	mov	r2, r8
   30ea8:	stm	sp, {r6, r9, sl}
   30eac:	bl	13760 <concat@plt>
   30eb0:	mov	fp, r0
   30eb4:	b	30e1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf90>
   30eb8:	str	fp, [r5, #8]
   30ebc:	mov	r0, #1
   30ec0:	add	sp, sp, #20
   30ec4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30ec8:	mov	r0, #0
   30ecc:	add	sp, sp, #20
   30ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30ed4:	movw	r3, #1240	; 0x4d8
   30ed8:	movt	r3, #10
   30edc:	mov	r1, r0
   30ee0:	ldr	r0, [r3]
   30ee4:	bl	13760 <concat@plt>
   30ee8:	mov	r1, r5
   30eec:	mov	r4, r0
   30ef0:	bl	308a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca14>
   30ef4:	cmp	r0, #0
   30ef8:	strne	r4, [r5, #8]
   30efc:	movne	r0, #1
   30f00:	bne	30ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d034>
   30f04:	mov	r0, r4
   30f08:	bl	13574 <free@plt>
   30f0c:	b	30dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf4c>
   30f10:	push	{r3, r4, r5, lr}
   30f14:	mov	r5, r0
   30f18:	ldr	r3, [r0, #16]
   30f1c:	cmp	r3, #0
   30f20:	popne	{r3, r4, r5, pc}
   30f24:	ldrb	r2, [r0, #36]	; 0x24
   30f28:	tst	r2, #4
   30f2c:	beq	30f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d110>
   30f30:	movw	r3, #168	; 0xa8
   30f34:	movt	r3, #10
   30f38:	ldr	r4, [r3, #8]
   30f3c:	cmp	r4, #0
   30f40:	bne	30f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d0d8>
   30f44:	b	30fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d160>
   30f48:	ldr	r0, [r4]
   30f4c:	bl	2f4f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b664>
   30f50:	cmp	r0, #0
   30f54:	bne	30f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d100>
   30f58:	ldr	r4, [r4, #4]
   30f5c:	cmp	r4, #0
   30f60:	beq	30fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d15c>
   30f64:	mov	r1, r5
   30f68:	movw	r2, #21080	; 0x5258
   30f6c:	movw	r3, #21084	; 0x525c
   30f70:	movt	r2, #5
   30f74:	movt	r3, #5
   30f78:	ldr	r0, [r4]
   30f7c:	bl	30d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1cf00>
   30f80:	mov	r1, r5
   30f84:	cmp	r0, #0
   30f88:	beq	30f48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d0bc>
   30f8c:	ldrb	r3, [r5, #36]	; 0x24
   30f90:	bfc	r3, #2, #1
   30f94:	strb	r3, [r5, #36]	; 0x24
   30f98:	pop	{r3, r4, r5, pc}
   30f9c:	ldr	r0, [r0, #8]
   30fa0:	mov	r1, r5
   30fa4:	bl	308a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca14>
   30fa8:	subs	r4, r0, #0
   30fac:	popne	{r3, r4, r5, pc}
   30fb0:	ldr	r0, [r5, #8]
   30fb4:	ldr	r1, [r5, #12]
   30fb8:	bl	135a4 <filename_cmp@plt>
   30fbc:	cmp	r0, #0
   30fc0:	beq	3107c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d1f0>
   30fc4:	mov	r0, r4
   30fc8:	mov	r2, #5
   30fcc:	movw	r1, #21024	; 0x5220
   30fd0:	movt	r1, #5
   30fd4:	bl	13688 <dcgettext@plt>
   30fd8:	ldr	r1, [r5, #8]
   30fdc:	ldr	r2, [r5, #12]
   30fe0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   30fe4:	b	31034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d1a8>
   30fe8:	ldrb	r2, [r5, #36]	; 0x24
   30fec:	tst	r2, #8
   30ff0:	beq	31018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d18c>
   30ff4:	movw	r4, #1240	; 0x4d8
   30ff8:	movt	r4, #10
   30ffc:	ldr	r3, [r4]
   31000:	cmp	r3, #0
   31004:	beq	31018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d18c>
   31008:	ldr	r3, [r5, #12]
   3100c:	ldrb	r3, [r3]
   31010:	cmp	r3, #47	; 0x2f
   31014:	beq	31058 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d1cc>
   31018:	movw	r1, #21120	; 0x5280
   3101c:	mov	r0, #0
   31020:	movt	r1, #5
   31024:	mov	r2, #5
   31028:	bl	13688 <dcgettext@plt>
   3102c:	ldr	r1, [r5, #12]
   31030:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31034:	ldrb	r2, [r5, #37]	; 0x25
   31038:	movw	r3, #1032	; 0x408
   3103c:	movt	r3, #10
   31040:	orr	r2, r2, #8
   31044:	strb	r2, [r5, #37]	; 0x25
   31048:	ldrb	r2, [r3, #1]
   3104c:	orr	r2, r2, #8
   31050:	strb	r2, [r3, #1]
   31054:	pop	{r3, r4, r5, pc}
   31058:	mov	r2, #5
   3105c:	movw	r1, #21088	; 0x5260
   31060:	mov	r0, #0
   31064:	movt	r1, #5
   31068:	bl	13688 <dcgettext@plt>
   3106c:	ldr	r2, [r4]
   31070:	ldr	r1, [r5, #12]
   31074:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31078:	b	31034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d1a8>
   3107c:	mov	r2, #5
   31080:	movw	r1, #21056	; 0x5240
   31084:	movt	r1, #5
   31088:	bl	13688 <dcgettext@plt>
   3108c:	ldr	r1, [r5, #12]
   31090:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31094:	b	31034 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d1a8>
   31098:	mov	r1, #0
   3109c:	b	30670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c7e4>
   310a0:	mov	r1, #1
   310a4:	b	30670 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c7e4>
   310a8:	push	{r3, r5, r6, lr}
   310ac:	mov	r6, r0
   310b0:	bl	137e4 <xstrdup@plt>
   310b4:	mov	r5, r0
   310b8:	mov	r0, #8
   310bc:	bl	137b4 <xmalloc@plt>
   310c0:	ldrb	r3, [r5]
   310c4:	movw	ip, #62516	; 0xf434
   310c8:	movt	ip, #9
   310cc:	cmp	r3, #0
   310d0:	mov	r2, #0
   310d4:	str	r6, [ip, #4]
   310d8:	movwne	r1, #64600	; 0xfc58
   310dc:	str	r2, [r0, #4]
   310e0:	movtne	r1, #9
   310e4:	str	r5, [r0]
   310e8:	subne	r2, r5, #1
   310ec:	beq	31104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d278>
   310f0:	ldrb	r3, [r1, r3]
   310f4:	strb	r3, [r2, #1]!
   310f8:	ldrb	r3, [r2, #1]
   310fc:	cmp	r3, #0
   31100:	bne	310f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d264>
   31104:	ldr	r3, [ip, #8]
   31108:	add	r2, r0, #4
   3110c:	str	r2, [ip, #8]
   31110:	str	r0, [r3]
   31114:	pop	{r3, r5, r6, pc}
   31118:	push	{r3, r4, r5, lr}
   3111c:	mov	r4, r1
   31120:	mov	r5, r0
   31124:	bl	13c04 <bfd_scan_arch@plt>
   31128:	subs	r3, r0, #0
   3112c:	beq	31164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d2d8>
   31130:	ldr	r4, [r3, #12]
   31134:	movw	r1, #1612	; 0x64c
   31138:	ldr	ip, [r3, #16]
   3113c:	movt	r1, #10
   31140:	ldr	r0, [r3, #24]
   31144:	movw	r2, #1616	; 0x650
   31148:	movw	r3, #62516	; 0xf434
   3114c:	movt	r2, #10
   31150:	movt	r3, #9
   31154:	str	r4, [r1]
   31158:	str	ip, [r2]
   3115c:	str	r0, [r3, #4]
   31160:	pop	{r3, r4, r5, pc}
   31164:	cmp	r4, #0
   31168:	beq	3117c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d2f0>
   3116c:	movw	r3, #1612	; 0x64c
   31170:	movt	r3, #10
   31174:	str	r4, [r3]
   31178:	pop	{r3, r4, r5, pc}
   3117c:	movw	r1, #21140	; 0x5294
   31180:	mov	r2, #5
   31184:	movt	r1, #5
   31188:	bl	13688 <dcgettext@plt>
   3118c:	mov	r1, r5
   31190:	pop	{r3, r4, r5, lr}
   31194:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31198:	cmp	r0, #0
   3119c:	push	{r4, lr}
   311a0:	mov	r4, r1
   311a4:	sub	sp, sp, #8
   311a8:	beq	311e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d358>
   311ac:	mov	r1, r4
   311b0:	bl	1361c <bfd_hash_newfunc@plt>
   311b4:	cmp	r0, #0
   311b8:	beq	311dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d350>
   311bc:	movw	r3, #180	; 0xb4
   311c0:	movt	r3, #10
   311c4:	mov	r2, #0
   311c8:	str	r2, [r0, #12]
   311cc:	ldr	r1, [r3]
   311d0:	str	r2, [r0, #16]
   311d4:	add	r2, r1, #1
   311d8:	str	r2, [r3]
   311dc:	add	sp, sp, #8
   311e0:	pop	{r4, pc}
   311e4:	mov	r0, r1
   311e8:	mov	r1, #20
   311ec:	str	r2, [sp, #4]
   311f0:	bl	13928 <bfd_hash_allocate@plt>
   311f4:	ldr	r2, [sp, #4]
   311f8:	cmp	r0, #0
   311fc:	beq	311dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d350>
   31200:	b	311ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d320>
   31204:	push	{r3, r4, r5, lr}
   31208:	mov	r4, r0
   3120c:	ldr	r3, [r0, #12]
   31210:	mov	r5, r1
   31214:	cmp	r3, #0
   31218:	beq	3122c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d3a0>
   3121c:	movw	r0, #21180	; 0x52bc
   31220:	movw	r1, #331	; 0x14b
   31224:	movt	r0, #5
   31228:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   3122c:	movw	r3, #1088	; 0x440
   31230:	movt	r3, #10
   31234:	ldr	r1, [r4, #4]
   31238:	mov	r2, #3
   3123c:	ldr	r0, [r3, #52]	; 0x34
   31240:	bl	13bec <bfd_demangle@plt>
   31244:	cmp	r0, #0
   31248:	str	r0, [r4, #12]
   3124c:	mov	r0, #1
   31250:	ldreq	r3, [r4, #4]
   31254:	streq	r3, [r4, #12]
   31258:	ldr	r3, [r5]
   3125c:	str	r4, [r3]
   31260:	ldr	r3, [r5]
   31264:	add	r3, r3, #4
   31268:	str	r3, [r5]
   3126c:	pop	{r3, r4, r5, pc}
   31270:	push	{r4, r5, r6, r7, r8, r9, lr}
   31274:	movw	r4, #63248	; 0xf710
   31278:	movt	r4, #9
   3127c:	mov	r5, r3
   31280:	sub	sp, sp, #28
   31284:	mov	r9, r0
   31288:	ldr	r3, [r4]
   3128c:	mov	r0, r5
   31290:	mov	r8, r1
   31294:	mov	r7, r2
   31298:	ldr	r6, [sp, #56]	; 0x38
   3129c:	str	r3, [sp, #20]
   312a0:	bl	13514 <bfd_generic_link_read_symbols@plt>
   312a4:	cmp	r0, #0
   312a8:	bne	312c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d438>
   312ac:	movw	r1, #15516	; 0x3c9c
   312b0:	mov	r2, #5
   312b4:	movt	r1, #5
   312b8:	bl	13688 <dcgettext@plt>
   312bc:	mov	r1, r5
   312c0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   312c4:	ldr	r3, [r5, #128]	; 0x80
   312c8:	mov	r2, sp
   312cc:	mov	r0, r5
   312d0:	movw	r1, #5444	; 0x1544
   312d4:	movt	r1, #3
   312d8:	str	r9, [sp]
   312dc:	str	r3, [sp, #12]
   312e0:	str	r8, [sp, #16]
   312e4:	str	r7, [sp, #4]
   312e8:	str	r6, [sp, #8]
   312ec:	bl	13d78 <bfd_map_over_sections@plt>
   312f0:	ldr	r2, [sp, #20]
   312f4:	ldr	r3, [r4]
   312f8:	cmp	r2, r3
   312fc:	bne	31308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d47c>
   31300:	add	sp, sp, #28
   31304:	pop	{r4, r5, r6, r7, r8, r9, pc}
   31308:	bl	13694 <__stack_chk_fail@plt>
   3130c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31310:	sub	sp, sp, #12
   31314:	ldr	r7, [r0, #16]
   31318:	cmp	r7, #0
   3131c:	beq	31408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d57c>
   31320:	mov	r0, r7
   31324:	bl	13514 <bfd_generic_link_read_symbols@plt>
   31328:	cmp	r0, #0
   3132c:	beq	31410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d584>
   31330:	ldr	r9, [r7, #128]	; 0x80
   31334:	ldr	r6, [r9]
   31338:	cmp	r6, #0
   3133c:	beq	31408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d57c>
   31340:	movw	sl, #1004	; 0x3ec
   31344:	movt	sl, #10
   31348:	ldr	r3, [r6, #16]
   3134c:	movw	r8, #28674	; 0x7002
   31350:	and	r8, r3, r8
   31354:	cmp	r8, #0
   31358:	bne	313fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d570>
   3135c:	movw	r2, #257	; 0x101
   31360:	and	r2, r3, r2
   31364:	cmp	r2, #0
   31368:	beq	313fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d570>
   3136c:	ldr	r2, [r6, #20]
   31370:	ldr	r2, [r2, #88]	; 0x58
   31374:	cmp	r2, #0
   31378:	beq	313fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d570>
   3137c:	tst	r3, #256	; 0x100
   31380:	ldr	fp, [sl]
   31384:	ldr	r5, [r2]
   31388:	ldreq	r8, [r6, #4]
   3138c:	cmp	fp, #0
   31390:	beq	313fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d570>
   31394:	ldr	r4, [fp, #4]
   31398:	cmp	r4, #0
   3139c:	bne	313bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d530>
   313a0:	b	313f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d564>
   313a4:	ldr	r2, [fp, #8]
   313a8:	cmp	r2, #0
   313ac:	bne	313f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d564>
   313b0:	ldr	r4, [r4]
   313b4:	cmp	r4, #0
   313b8:	beq	313f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d564>
   313bc:	mov	r1, r5
   313c0:	ldr	r0, [r4, #4]
   313c4:	bl	13490 <strcmp@plt>
   313c8:	subs	r1, r0, #0
   313cc:	bne	313a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d518>
   313d0:	ldr	r2, [r6, #20]
   313d4:	mov	r0, r8
   313d8:	str	fp, [sp]
   313dc:	mov	r3, r7
   313e0:	bl	31270 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d3e4>
   313e4:	ldr	r2, [fp, #8]
   313e8:	cmp	r2, #0
   313ec:	beq	313b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d524>
   313f0:	ldr	fp, [fp]
   313f4:	cmp	fp, #0
   313f8:	bne	31394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d508>
   313fc:	ldr	r6, [r9, #4]!
   31400:	cmp	r6, #0
   31404:	bne	31348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d4bc>
   31408:	add	sp, sp, #12
   3140c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31410:	mov	r2, #5
   31414:	movw	r1, #15516	; 0x3c9c
   31418:	movt	r1, #5
   3141c:	bl	13688 <dcgettext@plt>
   31420:	mov	r1, r7
   31424:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31428:	b	31330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d4a4>
   3142c:	push	{r4, r5, r6, r7, r8, r9, lr}
   31430:	movw	r3, #1088	; 0x440
   31434:	sub	sp, sp, #12
   31438:	movt	r3, #10
   3143c:	mov	r9, r0
   31440:	mov	r2, #0
   31444:	ldr	r0, [r3, #32]
   31448:	mov	ip, #1
   3144c:	ldr	r1, [r9, #4]
   31450:	mov	r3, r2
   31454:	str	ip, [sp]
   31458:	bl	13880 <bfd_link_hash_lookup@plt>
   3145c:	subs	r5, r0, #0
   31460:	beq	31528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d69c>
   31464:	ldrb	r3, [r5, #12]
   31468:	sub	r3, r3, #3
   3146c:	cmp	r3, #1
   31470:	bls	31480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d5f4>
   31474:	mov	r0, #1
   31478:	add	sp, sp, #12
   3147c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   31480:	ldr	r3, [r5, #20]
   31484:	ldr	r2, [r3, #88]	; 0x58
   31488:	cmp	r2, #0
   3148c:	beq	31474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d5e8>
   31490:	movw	r3, #1004	; 0x3ec
   31494:	movt	r3, #10
   31498:	ldr	r8, [r2]
   3149c:	ldr	r6, [r3]
   314a0:	cmp	r6, #0
   314a4:	beq	31474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d5e8>
   314a8:	ldr	r7, [r6, #4]
   314ac:	cmp	r7, #0
   314b0:	beq	31510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d684>
   314b4:	ldr	r0, [r7, #4]
   314b8:	mov	r1, r8
   314bc:	bl	13490 <strcmp@plt>
   314c0:	cmp	r0, #0
   314c4:	bne	314f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d66c>
   314c8:	ldr	r4, [r9, #16]
   314cc:	cmp	r4, #0
   314d0:	beq	314f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d66c>
   314d4:	ldr	r3, [r4, #4]
   314d8:	mov	r1, #1
   314dc:	ldr	r0, [r5, #4]
   314e0:	ldr	r2, [r5, #20]
   314e4:	str	r6, [sp]
   314e8:	bl	31270 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d3e4>
   314ec:	ldr	r4, [r4]
   314f0:	cmp	r4, #0
   314f4:	bne	314d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d648>
   314f8:	ldr	r3, [r6, #8]
   314fc:	cmp	r3, #0
   31500:	bne	31510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d684>
   31504:	ldr	r7, [r7]
   31508:	cmp	r7, #0
   3150c:	bne	314b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d628>
   31510:	ldr	r6, [r6]
   31514:	cmp	r6, #0
   31518:	bne	314a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d61c>
   3151c:	mov	r0, #1
   31520:	add	sp, sp, #12
   31524:	pop	{r4, r5, r6, r7, r8, r9, pc}
   31528:	mov	r2, #5
   3152c:	movw	r1, #21192	; 0x52c8
   31530:	movt	r1, #5
   31534:	bl	13688 <dcgettext@plt>
   31538:	ldr	r1, [r9, #4]
   3153c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31540:	b	31474 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d5e8>
   31544:	ldr	r3, [r2, #4]
   31548:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3154c:	mov	r6, r2
   31550:	ldr	r3, [r3, #88]	; 0x58
   31554:	sub	sp, sp, #44	; 0x2c
   31558:	ldr	r2, [r1, #88]	; 0x58
   3155c:	mov	r7, r1
   31560:	mov	r9, r0
   31564:	ldr	r8, [r3]
   31568:	ldr	r4, [r2]
   3156c:	mov	r1, r8
   31570:	mov	r0, r4
   31574:	bl	13490 <strcmp@plt>
   31578:	cmp	r0, #0
   3157c:	beq	315dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d750>
   31580:	ldr	r3, [r6, #8]
   31584:	ldr	r5, [r3, #4]
   31588:	cmp	r5, #0
   3158c:	bne	315a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d714>
   31590:	b	315dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d750>
   31594:	ldr	r5, [r5]
   31598:	cmp	r5, #0
   3159c:	beq	315dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d750>
   315a0:	mov	r0, r4
   315a4:	ldr	r1, [r5, #4]
   315a8:	bl	13490 <strcmp@plt>
   315ac:	cmp	r0, #0
   315b0:	bne	31594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d708>
   315b4:	ldr	r3, [r6]
   315b8:	mov	fp, r0
   315bc:	mov	r1, r7
   315c0:	mov	r0, r9
   315c4:	ldr	sl, [r6, #16]
   315c8:	str	r3, [sp, #28]
   315cc:	bl	13d6c <bfd_get_reloc_upper_bound@plt>
   315d0:	subs	r5, r0, #0
   315d4:	blt	315e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d758>
   315d8:	bne	31600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d774>
   315dc:	add	sp, sp, #44	; 0x2c
   315e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   315e4:	mov	r0, fp
   315e8:	movw	r1, #16144	; 0x3f10
   315ec:	mov	r2, #5
   315f0:	movt	r1, #5
   315f4:	bl	13688 <dcgettext@plt>
   315f8:	mov	r1, r9
   315fc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31600:	mov	r0, r5
   31604:	bl	137b4 <xmalloc@plt>
   31608:	mov	r1, r7
   3160c:	ldr	r3, [r6, #12]
   31610:	str	r0, [sp, #24]
   31614:	mov	r0, r9
   31618:	ldr	r2, [sp, #24]
   3161c:	bl	13cdc <bfd_canonicalize_reloc@plt>
   31620:	subs	r5, r0, #0
   31624:	blt	31778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8ec>
   31628:	ldr	r1, [sp, #24]
   3162c:	add	ip, r1, r5, lsl #2
   31630:	cmp	r1, ip
   31634:	bcs	3175c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8d0>
   31638:	ldr	r3, [sp, #24]
   3163c:	ldr	r5, [r3]
   31640:	cmp	r5, #0
   31644:	beq	3175c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8d0>
   31648:	add	fp, r3, #4
   3164c:	mov	r3, r7
   31650:	str	r4, [sp, #32]
   31654:	mov	r7, sl
   31658:	str	r8, [sp, #36]	; 0x24
   3165c:	mov	sl, r3
   31660:	ldr	r4, [sp, #28]
   31664:	mov	r8, ip
   31668:	b	316a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d818>
   3166c:	ldr	r0, [r2, #16]
   31670:	movw	r1, #257	; 0x101
   31674:	and	r1, r0, r1
   31678:	cmp	r1, #0
   3167c:	beq	31690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d804>
   31680:	ldr	r0, [r2, #20]
   31684:	ldr	r1, [r6, #4]
   31688:	cmp	r0, r1
   3168c:	beq	316ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d860>
   31690:	cmp	r8, fp
   31694:	bls	3175c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8d0>
   31698:	ldr	r5, [fp], #4
   3169c:	cmp	r5, #0
   316a0:	beq	3175c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8d0>
   316a4:	ldr	r2, [r5]
   316a8:	cmp	r2, #0
   316ac:	beq	31690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d804>
   316b0:	ldr	r2, [r2]
   316b4:	cmp	r2, #0
   316b8:	beq	31690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d804>
   316bc:	cmp	r7, #0
   316c0:	beq	3166c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d7e0>
   316c4:	ldr	r1, [r2, #20]
   316c8:	ldr	r3, [pc, #200]	; 31798 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d90c>
   316cc:	cmp	r1, r3
   316d0:	beq	316ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d860>
   316d4:	ldr	r1, [r1, #20]
   316d8:	tst	r1, #4096	; 0x1000
   316dc:	bne	316ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d860>
   316e0:	ldr	r1, [r2, #16]
   316e4:	tst	r1, #130	; 0x82
   316e8:	beq	31690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d804>
   316ec:	cmp	r4, #0
   316f0:	beq	3176c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d8e0>
   316f4:	ldr	r0, [r2, #4]
   316f8:	mov	r1, r4
   316fc:	bl	13490 <strcmp@plt>
   31700:	rsbs	r0, r0, #1
   31704:	movcc	r0, #0
   31708:	cmp	r0, #0
   3170c:	beq	31690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d804>
   31710:	mov	r2, #5
   31714:	movw	r1, #21240	; 0x52f8
   31718:	mov	r0, #0
   3171c:	movt	r1, #5
   31720:	bl	13688 <dcgettext@plt>
   31724:	ldrd	r2, [r5, #8]
   31728:	ldr	r1, [sp, #32]
   3172c:	strd	r2, [sp]
   31730:	mov	r2, sl
   31734:	str	r1, [sp, #8]
   31738:	mov	r1, r9
   3173c:	ldr	lr, [r5]
   31740:	ldr	r3, [sp, #36]	; 0x24
   31744:	ldr	lr, [lr]
   31748:	ldr	lr, [lr, #4]
   3174c:	str	r3, [sp, #16]
   31750:	str	lr, [sp, #12]
   31754:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31758:	b	31690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d804>
   3175c:	ldr	r0, [sp, #24]
   31760:	add	sp, sp, #44	; 0x2c
   31764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31768:	b	13574 <free@plt>
   3176c:	ldr	r0, [r2, #16]
   31770:	ubfx	r0, r0, #8, #1
   31774:	b	31708 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d87c>
   31778:	mov	r2, #5
   3177c:	movw	r1, #16144	; 0x3f10
   31780:	mov	r0, #0
   31784:	movt	r1, #5
   31788:	bl	13688 <dcgettext@plt>
   3178c:	mov	r1, r9
   31790:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31794:	b	31628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d79c>
   31798:	strdeq	pc, [r9], -r0
   3179c:	movw	r3, #1076	; 0x434
   317a0:	movt	r3, #10
   317a4:	ldr	r2, [r0]
   317a8:	ldr	r3, [r3]
   317ac:	cmp	r3, #0
   317b0:	ldr	r3, [r1]
   317b4:	bne	317c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d938>
   317b8:	ldr	r0, [r2, #4]
   317bc:	ldr	r1, [r3, #4]
   317c0:	b	13490 <strcmp@plt>
   317c4:	ldr	r0, [r2, #12]
   317c8:	ldr	r1, [r3, #12]
   317cc:	b	13490 <strcmp@plt>
   317d0:	push	{r3, r4, r5, r6, r7, lr}
   317d4:	movw	r4, #180	; 0xb4
   317d8:	movt	r4, #10
   317dc:	mov	r7, r0
   317e0:	mov	r5, r1
   317e4:	mov	r6, r2
   317e8:	ldr	r3, [r4, #4]
   317ec:	cmp	r3, #0
   317f0:	beq	31898 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da0c>
   317f4:	mov	r1, r7
   317f8:	ldr	r0, [pc, #280]	; 31918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da8c>
   317fc:	mov	r2, #1
   31800:	mov	r3, #0
   31804:	bl	139f4 <bfd_hash_lookup@plt>
   31808:	subs	r7, r0, #0
   3180c:	beq	318e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da5c>
   31810:	ldr	r4, [r7, #16]
   31814:	cmp	r4, #0
   31818:	bne	3182c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d9a0>
   3181c:	b	31860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d9d4>
   31820:	ldr	r4, [r4]
   31824:	cmp	r4, #0
   31828:	beq	31860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d9d4>
   3182c:	ldr	r3, [r4, #4]
   31830:	cmp	r3, r5
   31834:	bne	31820 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d994>
   31838:	ldr	r3, [pc, #220]	; 3191c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da90>
   3183c:	cmp	r6, r3
   31840:	beq	318c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da34>
   31844:	ldr	r3, [r6, #20]
   31848:	tst	r3, #4096	; 0x1000
   3184c:	ldrb	r3, [r4, #8]
   31850:	orrne	r3, r3, #2
   31854:	orreq	r3, r3, #1
   31858:	strb	r3, [r4, #8]
   3185c:	pop	{r3, r4, r5, r6, r7, pc}
   31860:	ldr	r0, [pc, #176]	; 31918 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da8c>
   31864:	mov	r1, #12
   31868:	bl	13928 <bfd_hash_allocate@plt>
   3186c:	subs	r4, r0, #0
   31870:	beq	31900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da74>
   31874:	ldr	r2, [r7, #16]
   31878:	ldrb	r3, [r4, #8]
   3187c:	and	r3, r3, #252	; 0xfc
   31880:	str	r2, [r4]
   31884:	bfc	r3, #2, #1
   31888:	str	r4, [r7, #16]
   3188c:	str	r5, [r4, #4]
   31890:	strb	r3, [r4, #8]
   31894:	b	31838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d9ac>
   31898:	movw	r1, #4504	; 0x1198
   3189c:	add	r0, r4, #8
   318a0:	movt	r1, #3
   318a4:	mov	r2, #20
   318a8:	bl	13d60 <bfd_hash_table_init@plt>
   318ac:	cmp	r0, #0
   318b0:	beq	318d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da44>
   318b4:	mov	r3, #1
   318b8:	str	r3, [r4, #4]
   318bc:	b	317f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d968>
   318c0:	ldrb	r3, [r4, #8]
   318c4:	orr	r3, r3, #4
   318c8:	strb	r3, [r4, #8]
   318cc:	pop	{r3, r4, r5, r6, r7, pc}
   318d0:	mov	r2, #5
   318d4:	movw	r1, #21296	; 0x5330
   318d8:	movt	r1, #5
   318dc:	bl	13688 <dcgettext@plt>
   318e0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   318e4:	b	318b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1da28>
   318e8:	mov	r2, #5
   318ec:	movw	r1, #21348	; 0x5364
   318f0:	movt	r1, #5
   318f4:	bl	13688 <dcgettext@plt>
   318f8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   318fc:	b	31810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d984>
   31900:	mov	r2, #5
   31904:	movw	r1, #21384	; 0x5388
   31908:	movt	r1, #5
   3190c:	bl	13688 <dcgettext@plt>
   31910:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31914:	b	31874 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d9e8>
   31918:	strheq	r0, [sl], -ip
   3191c:	strdeq	pc, [r9], -r0
   31920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31924:	movw	r6, #180	; 0xb4
   31928:	movt	r6, #10
   3192c:	mov	r4, r1
   31930:	ldr	r3, [r6, #4]
   31934:	cmp	r3, #0
   31938:	beq	319b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db2c>
   3193c:	cmp	r1, #0
   31940:	bne	319c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db34>
   31944:	ldr	r0, [r6, #20]
   31948:	cmp	r0, #0
   3194c:	beq	31bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd50>
   31950:	ldr	r5, [r6, #8]
   31954:	lsl	r0, r0, #2
   31958:	ldr	r3, [r6, #36]	; 0x24
   3195c:	ldr	r2, [r6, #40]	; 0x28
   31960:	add	r7, r5, r0
   31964:	ldr	r4, [r6, #28]
   31968:	mov	lr, r3
   3196c:	mov	r1, r2
   31970:	ldr	ip, [r5], #4
   31974:	cmp	ip, #0
   31978:	beq	31ad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc44>
   3197c:	add	lr, r3, r4
   31980:	ldr	r3, [ip, #16]
   31984:	cmp	r3, #0
   31988:	beq	319a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db14>
   3198c:	ldr	r3, [r3]
   31990:	add	r1, r2, #12
   31994:	cmp	r3, #0
   31998:	mov	r2, r1
   3199c:	bne	3198c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db00>
   319a0:	ldr	ip, [ip]
   319a4:	add	r3, lr, r4
   319a8:	cmp	ip, #0
   319ac:	beq	31acc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc40>
   319b0:	mov	lr, r3
   319b4:	b	31980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1daf4>
   319b8:	mov	r0, #1
   319bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   319c0:	cmp	r1, #1
   319c4:	beq	319d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db4c>
   319c8:	cmp	r1, #2
   319cc:	beq	31ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc28>
   319d0:	mov	r0, #0
   319d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   319d8:	ldr	r8, [r6, #48]	; 0x30
   319dc:	cmp	r8, #0
   319e0:	beq	31be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd5c>
   319e4:	ldr	r3, [r6, #56]	; 0x38
   319e8:	mov	r1, r8
   319ec:	ldr	lr, [r6, #60]	; 0x3c
   319f0:	ldr	ip, [r6, #64]	; 0x40
   319f4:	ldr	r2, [r6, #44]	; 0x2c
   319f8:	mov	r0, r3
   319fc:	ldr	r4, [r6, #36]	; 0x24
   31a00:	add	r8, r8, r2
   31a04:	str	r3, [r6, #8]
   31a08:	str	lr, [r6, #20]
   31a0c:	add	r4, r8, r4
   31a10:	str	ip, [r6, #24]
   31a14:	bl	135c8 <memcpy@plt>
   31a18:	ldr	r2, [r6, #20]
   31a1c:	ldr	r3, [r6, #68]	; 0x44
   31a20:	cmp	r2, #0
   31a24:	str	r3, [r6]
   31a28:	movne	r7, #0
   31a2c:	beq	31aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc1c>
   31a30:	ldr	r3, [r6, #8]
   31a34:	ldr	r5, [r3, r7, lsl #2]
   31a38:	cmp	r5, #0
   31a3c:	beq	31a98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc0c>
   31a40:	mov	r1, r8
   31a44:	ldr	r2, [r6, #28]
   31a48:	mov	r0, r5
   31a4c:	bl	135c8 <memcpy@plt>
   31a50:	ldr	r3, [r5, #16]
   31a54:	ldr	r2, [r6, #28]
   31a58:	cmp	r3, #0
   31a5c:	add	r8, r8, r2
   31a60:	beq	31a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc00>
   31a64:	ldr	lr, [r4]
   31a68:	add	r4, r4, #12
   31a6c:	ldr	ip, [r4, #-8]
   31a70:	ldr	r2, [r4, #-4]
   31a74:	str	lr, [r3]
   31a78:	str	ip, [r3, #4]
   31a7c:	str	r2, [r3, #8]
   31a80:	ldr	r3, [r3]
   31a84:	cmp	r3, #0
   31a88:	bne	31a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dbd8>
   31a8c:	ldr	r5, [r5]
   31a90:	cmp	r5, #0
   31a94:	bne	31a40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dbb4>
   31a98:	ldr	r3, [r6, #20]
   31a9c:	add	r7, r7, #1
   31aa0:	cmp	r3, r7
   31aa4:	bhi	31a30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dba4>
   31aa8:	ldr	r0, [r6, #16]
   31aac:	ldr	r1, [r6, #52]	; 0x34
   31ab0:	bl	13b5c <objalloc_free_block@plt>
   31ab4:	ldr	r0, [r6, #48]	; 0x30
   31ab8:	bl	13574 <free@plt>
   31abc:	mov	r3, #0
   31ac0:	mov	r0, #1
   31ac4:	str	r3, [r6, #48]	; 0x30
   31ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31acc:	mov	r3, lr
   31ad0:	cmp	r5, r7
   31ad4:	bne	31970 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dae4>
   31ad8:	str	lr, [r6, #36]	; 0x24
   31adc:	str	r1, [r6, #40]	; 0x28
   31ae0:	add	r3, r3, r2
   31ae4:	str	r0, [r6, #44]	; 0x2c
   31ae8:	add	r0, r3, r0
   31aec:	movw	r8, #180	; 0xb4
   31af0:	bl	137b4 <xmalloc@plt>
   31af4:	movt	r8, #10
   31af8:	mov	r1, #1
   31afc:	str	r0, [r6, #48]	; 0x30
   31b00:	add	r0, r8, #8
   31b04:	bl	13928 <bfd_hash_allocate@plt>
   31b08:	cmp	r0, #0
   31b0c:	str	r0, [r6, #52]	; 0x34
   31b10:	beq	319d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db44>
   31b14:	ldr	sl, [r8, #48]	; 0x30
   31b18:	ldr	r2, [r8, #44]	; 0x2c
   31b1c:	ldr	r1, [r8, #8]
   31b20:	mov	r0, sl
   31b24:	add	sl, sl, r2
   31b28:	bl	135c8 <memcpy@plt>
   31b2c:	ldr	r2, [r8, #20]
   31b30:	ldr	r3, [r8, #8]
   31b34:	ldr	r0, [r8, #24]
   31b38:	cmp	r2, #0
   31b3c:	ldr	r1, [r8]
   31b40:	ldr	r4, [r8, #36]	; 0x24
   31b44:	str	r2, [r8, #60]	; 0x3c
   31b48:	add	r4, sl, r4
   31b4c:	str	r3, [r8, #56]	; 0x38
   31b50:	str	r0, [r8, #64]	; 0x40
   31b54:	str	r1, [r8, #68]	; 0x44
   31b58:	beq	319b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db2c>
   31b5c:	mov	r7, #0
   31b60:	ldr	r9, [r3, r7, lsl #2]
   31b64:	cmp	r9, #0
   31b68:	beq	31bc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd38>
   31b6c:	mov	r0, sl
   31b70:	ldr	r2, [r6, #28]
   31b74:	mov	r1, r9
   31b78:	bl	135c8 <memcpy@plt>
   31b7c:	ldr	r3, [r9, #16]
   31b80:	ldr	r2, [r6, #28]
   31b84:	cmp	r3, #0
   31b88:	add	sl, sl, r2
   31b8c:	beq	31bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd2c>
   31b90:	ldr	r5, [r3]
   31b94:	add	r4, r4, #12
   31b98:	ldr	ip, [r3, #4]
   31b9c:	ldr	r2, [r3, #8]
   31ba0:	str	r5, [r4, #-12]
   31ba4:	str	ip, [r4, #-8]
   31ba8:	str	r2, [r4, #-4]
   31bac:	ldr	r3, [r3]
   31bb0:	cmp	r3, #0
   31bb4:	bne	31b90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dd04>
   31bb8:	ldr	r9, [r9]
   31bbc:	cmp	r9, #0
   31bc0:	bne	31b6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dce0>
   31bc4:	ldr	r3, [r6, #20]
   31bc8:	add	r7, r7, #1
   31bcc:	cmp	r3, r7
   31bd0:	bls	319b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1db2c>
   31bd4:	ldr	r3, [r8, #8]
   31bd8:	b	31b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dcd4>
   31bdc:	ldr	r3, [r6, #36]	; 0x24
   31be0:	ldr	r2, [r6, #40]	; 0x28
   31be4:	b	31ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dc54>
   31be8:	add	r0, r6, #8
   31bec:	bl	13730 <bfd_hash_table_free@plt>
   31bf0:	str	r8, [r6, #4]
   31bf4:	mov	r0, r4
   31bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31bfc:	movw	ip, #63248	; 0xf710
   31c00:	movt	ip, #9
   31c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31c08:	sub	sp, sp, #28
   31c0c:	ldr	r3, [ip]
   31c10:	mov	r4, r0
   31c14:	mov	r2, #5
   31c18:	movw	r1, #21416	; 0x53a8
   31c1c:	mov	r0, #0
   31c20:	movt	r1, #5
   31c24:	str	ip, [sp, #12]
   31c28:	str	r3, [sp, #20]
   31c2c:	bl	13688 <dcgettext@plt>
   31c30:	mov	r1, #1
   31c34:	mov	r2, r0
   31c38:	mov	r0, r4
   31c3c:	bl	13b74 <__fprintf_chk@plt>
   31c40:	mov	r2, #5
   31c44:	movw	r1, #21444	; 0x53c4
   31c48:	mov	r0, #0
   31c4c:	movt	r1, #5
   31c50:	bl	13688 <dcgettext@plt>
   31c54:	mov	r1, r4
   31c58:	mov	r5, r0
   31c5c:	bl	13dfc <fputs@plt>
   31c60:	mov	r0, r5
   31c64:	bl	13a24 <strlen@plt>
   31c68:	cmp	r0, #49	; 0x31
   31c6c:	mov	r5, r0
   31c70:	bgt	31c8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de00>
   31c74:	add	r5, r5, #1
   31c78:	mov	r0, #32
   31c7c:	mov	r1, r4
   31c80:	bl	1379c <_IO_putc@plt>
   31c84:	cmp	r5, #50	; 0x32
   31c88:	bne	31c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dde8>
   31c8c:	mov	r2, #5
   31c90:	movw	r1, #21452	; 0x53cc
   31c94:	mov	r0, #0
   31c98:	movt	r1, #5
   31c9c:	bl	13688 <dcgettext@plt>
   31ca0:	movw	r5, #180	; 0xb4
   31ca4:	movt	r5, #10
   31ca8:	mov	r1, #1
   31cac:	mov	r2, r0
   31cb0:	mov	r0, r4
   31cb4:	bl	13b74 <__fprintf_chk@plt>
   31cb8:	ldr	r0, [r5, #4]
   31cbc:	cmp	r0, #0
   31cc0:	beq	31f70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e0e4>
   31cc4:	ldr	r0, [r5]
   31cc8:	lsl	r0, r0, #2
   31ccc:	bl	137b4 <xmalloc@plt>
   31cd0:	add	r2, sp, #24
   31cd4:	movw	r1, #4612	; 0x1204
   31cd8:	movt	r1, #3
   31cdc:	mov	r7, r0
   31ce0:	str	r0, [r2, #-8]!
   31ce4:	add	r0, r5, #8
   31ce8:	bl	13544 <bfd_hash_traverse@plt>
   31cec:	ldr	r1, [sp, #16]
   31cf0:	ldr	r3, [r5]
   31cf4:	rsb	r1, r7, r1
   31cf8:	asr	r1, r1, #2
   31cfc:	cmp	r1, r3
   31d00:	beq	31d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1de8c>
   31d04:	mov	r1, #392	; 0x188
   31d08:	movw	r0, #21180	; 0x52bc
   31d0c:	movt	r0, #5
   31d10:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   31d14:	ldr	r1, [r5]
   31d18:	movw	r3, #6044	; 0x179c
   31d1c:	mov	r0, r7
   31d20:	movt	r3, #3
   31d24:	mov	r2, #4
   31d28:	bl	13cd0 <qsort@plt>
   31d2c:	ldr	sl, [r5]
   31d30:	add	sl, r7, sl, lsl #2
   31d34:	cmp	r7, sl
   31d38:	bcs	31ee4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e058>
   31d3c:	movw	r8, #1088	; 0x440
   31d40:	movw	r9, #1076	; 0x434
   31d44:	movt	r8, #10
   31d48:	movt	r9, #10
   31d4c:	ldr	r6, [r7], #4
   31d50:	mov	r2, #0
   31d54:	mov	ip, #1
   31d58:	ldr	r0, [r8, #32]
   31d5c:	mov	r3, r2
   31d60:	ldr	r1, [r6, #4]
   31d64:	str	ip, [sp]
   31d68:	bl	13880 <bfd_link_hash_lookup@plt>
   31d6c:	cmp	r0, #0
   31d70:	beq	31f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e108>
   31d74:	ldrb	r3, [r0, #12]
   31d78:	cmp	r3, #3
   31d7c:	beq	31f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e08c>
   31d80:	ldr	r3, [r9]
   31d84:	movw	r2, #28620	; 0x6fcc
   31d88:	mov	r0, r4
   31d8c:	movt	r2, #4
   31d90:	cmp	r3, #0
   31d94:	mov	r1, #1
   31d98:	beq	31f00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e074>
   31d9c:	ldr	r3, [r6, #12]
   31da0:	bl	13b74 <__fprintf_chk@plt>
   31da4:	ldr	r0, [r6, #12]
   31da8:	bl	13a24 <strlen@plt>
   31dac:	add	fp, r0, #1
   31db0:	ldr	r5, [r6, #16]
   31db4:	cmp	r5, #0
   31db8:	beq	31ec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e038>
   31dbc:	ldrb	r2, [r5, #8]
   31dc0:	tst	r2, #1
   31dc4:	beq	31e00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1df74>
   31dc8:	cmp	fp, #49	; 0x31
   31dcc:	bgt	31de8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1df5c>
   31dd0:	add	fp, fp, #1
   31dd4:	mov	r0, #32
   31dd8:	mov	r1, r4
   31ddc:	bl	1379c <_IO_putc@plt>
   31de0:	cmp	fp, #50	; 0x32
   31de4:	bne	31dd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1df44>
   31de8:	movw	r1, #10480	; 0x28f0
   31dec:	mov	r0, r4
   31df0:	movt	r1, #5
   31df4:	ldr	r2, [r5, #4]
   31df8:	bl	2f664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   31dfc:	mov	fp, #0
   31e00:	ldr	r5, [r5]
   31e04:	cmp	r5, #0
   31e08:	bne	31dbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1df30>
   31e0c:	ldr	r5, [r6, #16]
   31e10:	cmp	r5, #0
   31e14:	beq	31ec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e038>
   31e18:	ldrb	r2, [r5, #8]
   31e1c:	tst	r2, #2
   31e20:	beq	31e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfd0>
   31e24:	cmp	fp, #49	; 0x31
   31e28:	bgt	31e44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfb8>
   31e2c:	add	fp, fp, #1
   31e30:	mov	r0, #32
   31e34:	mov	r1, r4
   31e38:	bl	1379c <_IO_putc@plt>
   31e3c:	cmp	fp, #50	; 0x32
   31e40:	bne	31e2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfa0>
   31e44:	movw	r1, #10480	; 0x28f0
   31e48:	mov	r0, r4
   31e4c:	movt	r1, #5
   31e50:	ldr	r2, [r5, #4]
   31e54:	bl	2f664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   31e58:	mov	fp, #0
   31e5c:	ldr	r5, [r5]
   31e60:	cmp	r5, #0
   31e64:	bne	31e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1df8c>
   31e68:	ldr	r5, [r6, #16]
   31e6c:	cmp	r5, #0
   31e70:	beq	31ec4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e038>
   31e74:	ldrb	r2, [r5, #8]
   31e78:	tst	r2, #3
   31e7c:	bne	31eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e02c>
   31e80:	cmp	fp, #49	; 0x31
   31e84:	bgt	31ea0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e014>
   31e88:	add	fp, fp, #1
   31e8c:	mov	r0, #32
   31e90:	mov	r1, r4
   31e94:	bl	1379c <_IO_putc@plt>
   31e98:	cmp	fp, #50	; 0x32
   31e9c:	bne	31e88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dffc>
   31ea0:	movw	r1, #10480	; 0x28f0
   31ea4:	mov	r0, r4
   31ea8:	movt	r1, #5
   31eac:	ldr	r2, [r5, #4]
   31eb0:	bl	2f664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b7d8>
   31eb4:	mov	fp, #0
   31eb8:	ldr	r5, [r5]
   31ebc:	cmp	r5, #0
   31ec0:	bne	31e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dfe8>
   31ec4:	cmp	fp, #0
   31ec8:	beq	31edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e050>
   31ecc:	movw	r0, #21180	; 0x52bc
   31ed0:	mov	r1, #488	; 0x1e8
   31ed4:	movt	r0, #5
   31ed8:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   31edc:	cmp	sl, r7
   31ee0:	bhi	31d4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1dec0>
   31ee4:	ldr	ip, [sp, #12]
   31ee8:	ldr	r2, [sp, #20]
   31eec:	ldr	r3, [ip]
   31ef0:	cmp	r2, r3
   31ef4:	bne	31fa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e11c>
   31ef8:	add	sp, sp, #28
   31efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31f00:	ldr	r3, [r6, #4]
   31f04:	bl	13b74 <__fprintf_chk@plt>
   31f08:	ldr	r0, [r6, #4]
   31f0c:	bl	13a24 <strlen@plt>
   31f10:	add	fp, r0, #1
   31f14:	b	31db0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1df24>
   31f18:	ldr	r3, [r0, #20]
   31f1c:	ldr	r2, [r3, #88]	; 0x58
   31f20:	cmp	r2, #0
   31f24:	beq	31edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e050>
   31f28:	ldr	r3, [r3, #180]	; 0xb4
   31f2c:	cmp	r3, #0
   31f30:	beq	31d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1def4>
   31f34:	ldr	r3, [r3, #40]	; 0x28
   31f38:	tst	r3, #2048	; 0x800
   31f3c:	beq	31d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1def4>
   31f40:	ldr	r3, [r6, #16]
   31f44:	cmp	r3, #0
   31f48:	bne	31f5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e0d0>
   31f4c:	b	31edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e050>
   31f50:	ldr	r3, [r3]
   31f54:	cmp	r3, #0
   31f58:	beq	31edc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e050>
   31f5c:	ldr	r2, [r3, #4]
   31f60:	ldr	r2, [r2, #40]	; 0x28
   31f64:	tst	r2, #2048	; 0x800
   31f68:	bne	31f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e0c4>
   31f6c:	b	31d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1def4>
   31f70:	mov	r2, #5
   31f74:	movw	r1, #21460	; 0x53d4
   31f78:	movt	r1, #5
   31f7c:	bl	13688 <dcgettext@plt>
   31f80:	mov	r1, #1
   31f84:	mov	r2, r0
   31f88:	mov	r0, r4
   31f8c:	bl	13b74 <__fprintf_chk@plt>
   31f90:	b	31ee4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e058>
   31f94:	movw	r0, #21192	; 0x52c8
   31f98:	ldr	r1, [r6, #4]
   31f9c:	movt	r0, #5
   31fa0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   31fa4:	b	31d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1def4>
   31fa8:	bl	13694 <__stack_chk_fail@plt>
   31fac:	movw	r0, #180	; 0xb4
   31fb0:	movt	r0, #10
   31fb4:	push	{r3, lr}
   31fb8:	ldr	r3, [r0, #4]
   31fbc:	cmp	r3, #0
   31fc0:	popeq	{r3, pc}
   31fc4:	add	r0, r0, #8
   31fc8:	movw	r1, #5164	; 0x142c
   31fcc:	mov	r2, #0
   31fd0:	movt	r1, #3
   31fd4:	bl	13544 <bfd_hash_traverse@plt>
   31fd8:	movw	r0, #4876	; 0x130c
   31fdc:	pop	{r3, lr}
   31fe0:	movt	r0, #3
   31fe4:	b	2437c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104f0>
   31fe8:	push	{r3, r4, r5, r6, r7, lr}
   31fec:	mov	r6, r0
   31ff0:	mov	r0, r1
   31ff4:	mov	r5, r1
   31ff8:	bl	13a24 <strlen@plt>
   31ffc:	mov	r3, #0
   32000:	add	r4, r0, #1
   32004:	mov	r0, r6
   32008:	mov	r2, r4
   3200c:	bl	13670 <bfd_alloc@plt>
   32010:	subs	r6, r0, #0
   32014:	beq	32030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e1a4>
   32018:	mov	r1, r5
   3201c:	mov	r2, r4
   32020:	mov	r0, r6
   32024:	bl	135c8 <memcpy@plt>
   32028:	mov	r0, r6
   3202c:	pop	{r3, r4, r5, r6, r7, pc}
   32030:	mov	r2, #5
   32034:	movw	r1, #21552	; 0x5430
   32038:	movt	r1, #5
   3203c:	bl	13688 <dcgettext@plt>
   32040:	mov	r7, r0
   32044:	bl	13784 <bfd_get_error@plt>
   32048:	mov	r1, r0
   3204c:	mov	r0, r7
   32050:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   32054:	b	32018 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e18c>
   32058:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3205c:	subs	r5, r1, #0
   32060:	sub	sp, sp, #24
   32064:	mov	sl, r0
   32068:	mov	r9, r2
   3206c:	mov	r6, r3
   32070:	ldr	r7, [sp, #56]	; 0x38
   32074:	ldr	r8, [sp, #72]	; 0x48
   32078:	beq	321d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e344>
   3207c:	ldrb	r3, [r5, #12]
   32080:	cmp	r3, #7
   32084:	ldreq	r3, [r5, #20]
   32088:	movne	r3, r5
   3208c:	cmp	r6, #0
   32090:	beq	320a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e214>
   32094:	ldr	r2, [r6, #40]	; 0x28
   32098:	tst	r2, #2097152	; 0x200000
   3209c:	bne	3211c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e290>
   320a0:	ldr	r2, [pc, #392]	; 32230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e3a4>
   320a4:	cmp	r7, r2
   320a8:	beq	32190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e304>
   320ac:	tst	r8, #8192	; 0x2000
   320b0:	bne	32190 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e304>
   320b4:	tst	r8, #6144	; 0x1800
   320b8:	bne	3211c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e290>
   320bc:	sub	r2, r2, #400	; 0x190
   320c0:	cmp	r7, r2
   320c4:	beq	321dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e350>
   320c8:	ldr	r2, [r7, #20]
   320cc:	tst	r2, #4096	; 0x1000
   320d0:	ldrbne	r2, [r3, #13]
   320d4:	orrne	r2, r2, #1
   320d8:	strbne	r2, [r3, #13]
   320dc:	ldrb	r2, [r3, #12]
   320e0:	sub	r1, r2, #3
   320e4:	cmp	r1, #1
   320e8:	bls	321fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e370>
   320ec:	cmp	r2, #5
   320f0:	bne	3211c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e290>
   320f4:	ldr	r2, [r3, #20]
   320f8:	ldr	r2, [r2, #4]
   320fc:	ldr	r2, [r2, #180]	; 0xb4
   32100:	cmp	r2, #0
   32104:	beq	3211c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e290>
   32108:	ldr	r1, [r2, #40]	; 0x28
   3210c:	tst	r1, #2097152	; 0x200000
   32110:	strne	r2, [r3, #20]
   32114:	movne	r2, #2
   32118:	strbne	r2, [r3, #12]
   3211c:	movw	r4, #256	; 0x100
   32120:	movt	r4, #10
   32124:	ldr	r2, [r4, #4]
   32128:	cmp	r2, #0
   3212c:	beq	32164 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2d8>
   32130:	ldrd	r2, [sp, #64]	; 0x40
   32134:	mov	r0, sl
   32138:	ldr	ip, [r4]
   3213c:	mov	r1, r5
   32140:	str	r7, [sp]
   32144:	strd	r2, [sp, #8]
   32148:	mov	r2, r9
   3214c:	str	r8, [sp, #16]
   32150:	mov	r3, r6
   32154:	ldr	ip, [ip, #40]	; 0x28
   32158:	blx	ip
   3215c:	add	sp, sp, #24
   32160:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32164:	ldr	r0, [sl, #40]	; 0x28
   32168:	cmp	r0, #0
   3216c:	beq	32184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2f8>
   32170:	mov	r3, r2
   32174:	ldr	r1, [r5, #4]
   32178:	bl	139f4 <bfd_hash_lookup@plt>
   3217c:	cmp	r0, #0
   32180:	bne	32130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2a4>
   32184:	mov	r0, #1
   32188:	add	sp, sp, #24
   3218c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32190:	ldrb	r2, [r3, #12]
   32194:	cmp	r2, #0
   32198:	bne	321b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e328>
   3219c:	ldrb	r3, [r9, #12]
   321a0:	cmp	r3, #0
   321a4:	ldrbeq	r3, [r9, #13]
   321a8:	orreq	r3, r3, #1
   321ac:	strbeq	r3, [r9, #13]
   321b0:	b	3211c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e290>
   321b4:	ldrb	r2, [r3, #13]
   321b8:	orr	r2, r2, #1
   321bc:	strb	r2, [r3, #13]
   321c0:	ldrb	r3, [r9, #13]
   321c4:	orr	r3, r3, #1
   321c8:	strb	r3, [r9, #13]
   321cc:	b	3211c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e290>
   321d0:	movw	r4, #256	; 0x100
   321d4:	movt	r4, #10
   321d8:	b	32130 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e2a4>
   321dc:	ldrb	r2, [r3, #12]
   321e0:	sub	r2, r2, #1
   321e4:	cmp	r2, #1
   321e8:	bls	32210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e384>
   321ec:	ldrb	r2, [r3, #13]
   321f0:	orr	r2, r2, #1
   321f4:	strb	r2, [r3, #13]
   321f8:	b	3211c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e290>
   321fc:	ldr	r2, [r3, #20]
   32200:	ldr	r2, [r2, #180]	; 0xb4
   32204:	cmp	r2, #0
   32208:	bne	32108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e27c>
   3220c:	b	3211c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e290>
   32210:	ldr	r2, [r3, #20]
   32214:	cmp	r2, #0
   32218:	beq	32228 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e39c>
   3221c:	ldr	r2, [r2, #40]	; 0x28
   32220:	tst	r2, #2097152	; 0x200000
   32224:	beq	321ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e360>
   32228:	str	r6, [r3, #20]
   3222c:	b	321ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e360>
   32230:	andeq	pc, r9, r0, lsl #23
   32234:	movw	r3, #256	; 0x100
   32238:	movt	r3, #10
   3223c:	push	{r4, lr}
   32240:	mov	r4, r0
   32244:	ldr	r3, [r3, #8]
   32248:	cmp	r3, #0
   3224c:	beq	32270 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e3e4>
   32250:	ldr	r0, [r4, #28]
   32254:	cmn	r0, #1
   32258:	beq	32268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e3dc>
   3225c:	bl	13e2c <close@plt>
   32260:	mvn	r3, #0
   32264:	str	r3, [r4, #28]
   32268:	mov	r0, #0
   3226c:	pop	{r4, pc}
   32270:	movw	r0, #21604	; 0x5464
   32274:	movw	r1, #599	; 0x257
   32278:	movt	r0, #5
   3227c:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   32280:	b	32250 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e3c4>
   32284:	push	{r3, r4, r5, r6, r7, lr}
   32288:	movw	r3, #256	; 0x100
   3228c:	movt	r3, #10
   32290:	mov	r7, r0
   32294:	mov	r6, r1
   32298:	ldr	r3, [r3, #8]
   3229c:	cmp	r3, #0
   322a0:	beq	322c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e43c>
   322a4:	ldr	r1, [r7, #24]
   322a8:	mov	r0, #0
   322ac:	ldrd	r4, [r7, #40]	; 0x28
   322b0:	ldrd	r2, [r7, #48]	; 0x30
   322b4:	str	r1, [r6]
   322b8:	strd	r4, [r6, #8]
   322bc:	strd	r2, [r6, #16]
   322c0:	str	r7, [r6, #24]
   322c4:	pop	{r3, r4, r5, r6, r7, pc}
   322c8:	movw	r0, #21604	; 0x5464
   322cc:	movw	r1, #502	; 0x1f6
   322d0:	movt	r0, #5
   322d4:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   322d8:	b	322a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e418>
   322dc:	push	{r3, r4, r5, lr}
   322e0:	movw	r4, #256	; 0x100
   322e4:	movt	r4, #10
   322e8:	mov	r5, r0
   322ec:	ldr	r3, [r4, #8]
   322f0:	cmp	r3, #0
   322f4:	beq	32304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e478>
   322f8:	str	r5, [r3, #28]
   322fc:	mov	r0, #0
   32300:	pop	{r3, r4, r5, pc}
   32304:	movw	r0, #21604	; 0x5464
   32308:	mov	r1, #464	; 0x1d0
   3230c:	movt	r0, #5
   32310:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   32314:	ldr	r3, [r4, #8]
   32318:	b	322f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e46c>
   3231c:	push	{r3, r4, r5, lr}
   32320:	movw	r4, #256	; 0x100
   32324:	movt	r4, #10
   32328:	mov	r5, r0
   3232c:	ldr	r3, [r4, #8]
   32330:	cmp	r3, #0
   32334:	beq	32344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e4b8>
   32338:	str	r5, [r3, #24]
   3233c:	mov	r0, #0
   32340:	pop	{r3, r4, r5, pc}
   32344:	movw	r0, #21604	; 0x5464
   32348:	movw	r1, #455	; 0x1c7
   3234c:	movt	r0, #5
   32350:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   32354:	ldr	r3, [r4, #8]
   32358:	b	32338 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e4ac>
   3235c:	push	{r3, r4, r5, lr}
   32360:	movw	r4, #256	; 0x100
   32364:	movt	r4, #10
   32368:	mov	r5, r0
   3236c:	ldr	r3, [r4, #8]
   32370:	cmp	r3, #0
   32374:	beq	32384 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e4f8>
   32378:	str	r5, [r3, #20]
   3237c:	mov	r0, #0
   32380:	pop	{r3, r4, r5, pc}
   32384:	movw	r0, #21604	; 0x5464
   32388:	movw	r1, #446	; 0x1be
   3238c:	movt	r0, #5
   32390:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   32394:	ldr	r3, [r4, #8]
   32398:	b	32378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e4ec>
   3239c:	movw	r3, #256	; 0x100
   323a0:	movt	r3, #10
   323a4:	push	{r4, lr}
   323a8:	mov	r4, r0
   323ac:	ldr	r3, [r3, #8]
   323b0:	cmp	r3, #0
   323b4:	beq	323d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e544>
   323b8:	mov	r0, r4
   323bc:	bl	137e4 <xstrdup@plt>
   323c0:	mov	r1, #0
   323c4:	bl	305e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c75c>
   323c8:	mov	r0, #0
   323cc:	pop	{r4, pc}
   323d0:	movw	r0, #21604	; 0x5464
   323d4:	movw	r1, #825	; 0x339
   323d8:	movt	r0, #5
   323dc:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   323e0:	b	323b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e52c>
   323e4:	movw	r3, #256	; 0x100
   323e8:	movt	r3, #10
   323ec:	push	{r4, lr}
   323f0:	mov	r4, r0
   323f4:	ldr	r3, [r3, #8]
   323f8:	cmp	r3, #0
   323fc:	beq	32430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e5a4>
   32400:	mov	r0, r4
   32404:	bl	137e4 <xstrdup@plt>
   32408:	mov	r1, #0
   3240c:	mov	r2, r1
   32410:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   32414:	subs	r3, r0, #0
   32418:	ldrbne	r2, [r3, #37]	; 0x25
   3241c:	movne	r0, #0
   32420:	moveq	r0, #3
   32424:	orrne	r2, r2, #128	; 0x80
   32428:	strbne	r2, [r3, #37]	; 0x25
   3242c:	pop	{r4, pc}
   32430:	movw	r0, #21604	; 0x5464
   32434:	movw	r1, #811	; 0x32b
   32438:	movt	r0, #5
   3243c:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   32440:	b	32400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e574>
   32444:	movw	r3, #256	; 0x100
   32448:	movt	r3, #10
   3244c:	push	{r4, lr}
   32450:	mov	r4, r0
   32454:	ldr	r3, [r3, #8]
   32458:	cmp	r3, #0
   3245c:	beq	32490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e604>
   32460:	mov	r0, r4
   32464:	bl	137e4 <xstrdup@plt>
   32468:	mov	r2, #0
   3246c:	mov	r1, #5
   32470:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   32474:	subs	r3, r0, #0
   32478:	ldrbne	r2, [r3, #37]	; 0x25
   3247c:	movne	r0, #0
   32480:	moveq	r0, #3
   32484:	orrne	r2, r2, #128	; 0x80
   32488:	strbne	r2, [r3, #37]	; 0x25
   3248c:	pop	{r4, pc}
   32490:	movw	r0, #21604	; 0x5464
   32494:	mov	r1, #796	; 0x31c
   32498:	movt	r0, #5
   3249c:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   324a0:	b	32460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e5d4>
   324a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   324a8:	movw	fp, #256	; 0x100
   324ac:	movt	fp, #10
   324b0:	ldr	r9, [r0, #48]	; 0x30
   324b4:	sub	sp, sp, #20
   324b8:	mov	r8, r0
   324bc:	ldr	r3, [fp, #8]
   324c0:	mov	sl, r1
   324c4:	ldrd	r4, [r0, #40]	; 0x28
   324c8:	cmp	r3, #0
   324cc:	ldr	r3, [r0, #52]	; 0x34
   324d0:	movne	r6, r9
   324d4:	movne	r7, r3
   324d8:	beq	325b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e72c>
   324dc:	mov	r2, r9
   324e0:	mov	r3, #0
   324e4:	cmp	r3, r7
   324e8:	cmpeq	r2, r6
   324ec:	beq	32510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e684>
   324f0:	mov	r2, #5
   324f4:	movw	r1, #21616	; 0x5470
   324f8:	mov	r0, #0
   324fc:	movt	r1, #5
   32500:	bl	13688 <dcgettext@plt>
   32504:	ldr	r1, [r8, #24]
   32508:	ldr	r2, [r8, #48]	; 0x30
   3250c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   32510:	ldr	r1, [r8, #8]
   32514:	cmp	r1, #0
   32518:	beq	32528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e69c>
   3251c:	ldr	r3, [r8, #12]
   32520:	cmp	r3, r9
   32524:	beq	3259c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e710>
   32528:	ldrd	r2, [fp, #16]
   3252c:	mov	r0, r4
   32530:	str	r9, [r8, #12]
   32534:	mov	r1, r5
   32538:	strd	r4, [r8, #16]
   3253c:	bl	3fe20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bf94>
   32540:	mov	r0, #0
   32544:	mov	r7, r3
   32548:	ldr	r3, [r8, #28]
   3254c:	mov	r6, r2
   32550:	add	r9, r9, r6
   32554:	subs	r4, r4, r6
   32558:	sbc	r5, r5, r7
   3255c:	mov	r2, #1
   32560:	str	r3, [sp]
   32564:	mov	r1, r9
   32568:	strd	r4, [sp, #8]
   3256c:	mov	r3, #2
   32570:	bl	135e0 <mmap64@plt>
   32574:	cmn	r0, #1
   32578:	beq	325d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e744>
   3257c:	add	r6, r0, r6
   32580:	mov	r3, #1
   32584:	str	r3, [r8, #32]
   32588:	mov	r0, #0
   3258c:	str	r6, [r8, #8]
   32590:	str	r6, [sl]
   32594:	add	sp, sp, #20
   32598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3259c:	ldrd	r2, [r8, #16]
   325a0:	cmp	r3, r5
   325a4:	cmpeq	r2, r4
   325a8:	streq	r1, [sl]
   325ac:	moveq	r0, #0
   325b0:	bne	32528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e69c>
   325b4:	b	32594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e708>
   325b8:	movw	r0, #21604	; 0x5464
   325bc:	mov	r1, #524	; 0x20c
   325c0:	movt	r0, #5
   325c4:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   325c8:	ldrd	r6, [r8, #48]	; 0x30
   325cc:	b	324dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e650>
   325d0:	ldr	r0, [r8, #28]
   325d4:	mov	r2, r4
   325d8:	mov	r3, r5
   325dc:	mov	r4, #0
   325e0:	str	r4, [r8, #32]
   325e4:	str	r4, [sp]
   325e8:	bl	137d8 <lseek64@plt>
   325ec:	cmp	r0, #0
   325f0:	sbcs	r3, r1, #0
   325f4:	bge	32600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e774>
   325f8:	mov	r0, #3
   325fc:	b	32594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e708>
   32600:	mov	r3, r4
   32604:	ldr	r0, [r8]
   32608:	mov	r2, r9
   3260c:	bl	13670 <bfd_alloc@plt>
   32610:	subs	r6, r0, #0
   32614:	beq	325f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e76c>
   32618:	mov	r4, r6
   3261c:	b	32630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e7a4>
   32620:	add	r4, r4, r0
   32624:	rsb	r9, r0, r9
   32628:	cmp	r9, #0
   3262c:	beq	32588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e6fc>
   32630:	ldr	r0, [r8, #28]
   32634:	mov	r1, r4
   32638:	mov	r2, r9
   3263c:	bl	134e4 <read@plt>
   32640:	cmp	r0, #0
   32644:	beq	32588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e6fc>
   32648:	bgt	32620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e794>
   3264c:	bl	13ab4 <__errno_location@plt>
   32650:	ldr	r3, [r0]
   32654:	cmp	r3, #4
   32658:	beq	32628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e79c>
   3265c:	b	325f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e76c>
   32660:	movw	r3, #256	; 0x100
   32664:	movt	r3, #10
   32668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3266c:	mov	r9, r1
   32670:	ldr	r3, [r3, #8]
   32674:	sub	sp, sp, #20
   32678:	mov	r5, r2
   3267c:	ldr	r6, [r0]
   32680:	cmp	r3, #0
   32684:	beq	32934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eaa8>
   32688:	lsl	r0, r9, #2
   3268c:	bl	137b4 <xmalloc@plt>
   32690:	cmp	r9, #0
   32694:	str	r0, [sp, #12]
   32698:	ble	32794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e908>
   3269c:	add	r5, r5, #16
   326a0:	sub	r8, r0, #4
   326a4:	mov	r7, #0
   326a8:	movw	r3, #63784	; 0xf928
   326ac:	movt	r3, #9
   326b0:	str	r3, [sp, #8]
   326b4:	ldr	r3, [r6, #4]
   326b8:	mov	r0, r6
   326bc:	ldr	r3, [r3, #268]	; 0x10c
   326c0:	blx	r3
   326c4:	str	r0, [r8, #4]!
   326c8:	mov	r4, r0
   326cc:	ldr	r2, [r5, #-12]
   326d0:	str	r6, [r0]
   326d4:	cmp	r2, #0
   326d8:	beq	328d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea44>
   326dc:	movw	r1, #21668	; 0x54a4
   326e0:	ldr	r0, [r5, #-16]
   326e4:	movt	r1, #5
   326e8:	mov	r3, #0
   326ec:	bl	13760 <concat@plt>
   326f0:	ldr	r1, [r5, #-8]
   326f4:	mov	r2, #0
   326f8:	mov	r3, #0
   326fc:	str	r0, [r4, #4]
   32700:	strd	r2, [r4, #8]
   32704:	cmp	r1, #4
   32708:	ldrls	pc, [pc, r1, lsl #2]
   3270c:	b	328f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea68>
   32710:			; <UNDEFINED> instruction: 0x000327b0
   32714:	andeq	r2, r3, r4, lsr #14
   32718:	andeq	r2, r3, ip, lsl #17
   3271c:	andeq	r2, r3, r8, ror r8
   32720:	andeq	r2, r3, r0, ror #15
   32724:	ldr	r1, [r5, #8]
   32728:	mov	sl, #130	; 0x82
   3272c:	cmp	r1, #0
   32730:	beq	327c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e934>
   32734:	mov	r2, #0
   32738:	movw	r0, #21672	; 0x54a8
   3273c:	movt	r0, #5
   32740:	bl	13760 <concat@plt>
   32744:	mov	r2, r0
   32748:	mov	r0, r6
   3274c:	mov	r1, r2
   32750:	str	r2, [sp, #4]
   32754:	bl	13844 <bfd_get_section_by_name@plt>
   32758:	ldr	r2, [sp, #4]
   3275c:	subs	fp, r0, #0
   32760:	beq	328d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea4c>
   32764:	mov	r0, r2
   32768:	bl	13574 <free@plt>
   3276c:	ldr	r2, [r6, #4]
   32770:	ldr	r2, [r2, #4]
   32774:	cmp	r2, #5
   32778:	str	sl, [r4, #16]
   3277c:	str	fp, [r4, #20]
   32780:	beq	32824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e998>
   32784:	add	r7, r7, #1
   32788:	add	r5, r5, #32
   3278c:	cmp	r7, r9
   32790:	bne	326b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e828>
   32794:	mov	r0, r6
   32798:	ldr	r1, [sp, #12]
   3279c:	mov	r2, r9
   327a0:	bl	13940 <bfd_set_symtab@plt>
   327a4:	mov	r0, #0
   327a8:	add	sp, sp, #20
   327ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   327b0:	ldr	r1, [r5, #8]
   327b4:	mov	sl, #2
   327b8:	cmp	r1, #0
   327bc:	bne	32734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8a8>
   327c0:	movw	r1, #1044	; 0x414
   327c4:	mov	r0, r6
   327c8:	movt	r1, #5
   327cc:	bl	13844 <bfd_get_section_by_name@plt>
   327d0:	mov	fp, r0
   327d4:	ldr	r2, [r6, #4]
   327d8:	ldr	r2, [r2, #4]
   327dc:	b	32774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8e8>
   327e0:	ldr	r1, [r6, #4]
   327e4:	ldrd	r2, [r5]
   327e8:	ldr	r1, [r1, #4]
   327ec:	strd	r2, [r4, #8]
   327f0:	ldr	r3, [sp, #8]
   327f4:	cmp	r1, #5
   327f8:	str	r3, [r4, #20]
   327fc:	movne	r3, #2
   32800:	strne	r3, [r4, #16]
   32804:	bne	32784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8f8>
   32808:	mov	r3, #0
   3280c:	mvn	r1, #13
   32810:	mov	r2, #1
   32814:	str	r1, [r4, #56]	; 0x38
   32818:	strd	r2, [r4, #32]
   3281c:	mov	r3, #2
   32820:	str	r3, [r4, #16]
   32824:	ldr	r3, [r4]
   32828:	ldr	r2, [r3, #4]
   3282c:	ldr	r2, [r2, #4]
   32830:	cmp	r2, #5
   32834:	beq	32900 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea74>
   32838:	mov	r2, #5
   3283c:	movw	r1, #21736	; 0x54e8
   32840:	mov	r0, #0
   32844:	movt	r1, #5
   32848:	bl	13688 <dcgettext@plt>
   3284c:	ldr	r1, [r4, #4]
   32850:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   32854:	mov	r4, #0
   32858:	ldr	r3, [r5, #-4]
   3285c:	cmp	r3, #3
   32860:	ldrls	pc, [pc, r3, lsl #2]
   32864:	b	32910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea84>
   32868:	andeq	r2, r3, r0, lsr #17
   3286c:	andeq	r2, r3, r8, asr #17
   32870:	andeq	r2, r3, r0, asr #17
   32874:			; <UNDEFINED> instruction: 0x000328b8
   32878:	ldr	r2, [r6, #4]
   3287c:	mov	sl, #128	; 0x80
   32880:	ldr	fp, [pc, #192]	; 32948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eabc>
   32884:	ldr	r2, [r2, #4]
   32888:	b	32774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8e8>
   3288c:	ldr	r2, [r6, #4]
   32890:	mov	sl, #0
   32894:	ldr	fp, [pc, #172]	; 32948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eabc>
   32898:	ldr	r2, [r2, #4]
   3289c:	b	32774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8e8>
   328a0:	mov	r3, #0
   328a4:	ldrb	r2, [r4, #53]	; 0x35
   328a8:	bic	r2, r2, #3
   328ac:	orr	r3, r3, r2
   328b0:	strb	r3, [r4, #53]	; 0x35
   328b4:	b	32784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e8f8>
   328b8:	mov	r3, #2
   328bc:	b	328a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea18>
   328c0:	mov	r3, #1
   328c4:	b	328a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea18>
   328c8:	mov	r3, #3
   328cc:	b	328a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea18>
   328d0:	ldr	r0, [r5, #-16]
   328d4:	b	326f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e864>
   328d8:	mov	r1, r2
   328dc:	mov	r0, r6
   328e0:	movw	r2, #33051	; 0x811b
   328e4:	movt	r2, #34	; 0x22
   328e8:	bl	1358c <bfd_make_section_anyway_with_flags@plt>
   328ec:	subs	fp, r0, #0
   328f0:	bne	327d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e948>
   328f4:	mov	r0, #3
   328f8:	add	sp, sp, #20
   328fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32900:	ldr	r3, [r3, #168]	; 0xa8
   32904:	cmp	r3, #0
   32908:	bne	32858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e9cc>
   3290c:	b	32838 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e9ac>
   32910:	mov	r2, #5
   32914:	movw	r1, #21692	; 0x54bc
   32918:	mov	r0, #0
   3291c:	movt	r1, #5
   32920:	bl	13688 <dcgettext@plt>
   32924:	ldr	r1, [r5, #-4]
   32928:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3292c:	mov	r3, #0
   32930:	b	328a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ea18>
   32934:	movw	r0, #21604	; 0x5464
   32938:	movw	r1, #478	; 0x1de
   3293c:	movt	r0, #5
   32940:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   32944:	b	32688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e7fc>
   32948:	strdeq	pc, [r9], -r0
   3294c:	push	{r1, r2, r3}
   32950:	push	{r4, r5, r6, lr}
   32954:	movw	r4, #63248	; 0xf710
   32958:	movt	r4, #9
   3295c:	subs	r5, r0, #0
   32960:	sub	sp, sp, #20
   32964:	ldr	r0, [r4]
   32968:	add	r2, sp, #40	; 0x28
   3296c:	ldr	r1, [sp, #36]	; 0x24
   32970:	str	r2, [sp, #8]
   32974:	str	r0, [sp, #12]
   32978:	beq	32a64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ebd8>
   3297c:	cmp	r5, #1
   32980:	beq	32a20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb94>
   32984:	cmp	r5, #3
   32988:	movw	r3, #21776	; 0x5510
   3298c:	movt	r3, #5
   32990:	mov	r2, r1
   32994:	movw	r0, #21784	; 0x5518
   32998:	movw	r1, #21808	; 0x5530
   3299c:	movt	r0, #5
   329a0:	movt	r1, #5
   329a4:	moveq	r0, r3
   329a8:	mov	r3, #0
   329ac:	str	r3, [sp]
   329b0:	movw	r3, #15324	; 0x3bdc
   329b4:	movt	r3, #5
   329b8:	movw	r5, #63776	; 0xf920
   329bc:	bl	13760 <concat@plt>
   329c0:	movw	r3, #64592	; 0xfc50
   329c4:	movt	r3, #9
   329c8:	movt	r5, #9
   329cc:	mov	r6, r0
   329d0:	ldr	r0, [r3]
   329d4:	bl	134f0 <fflush@plt>
   329d8:	ldr	r0, [r5]
   329dc:	mov	r1, r6
   329e0:	ldr	r2, [sp, #8]
   329e4:	mov	r3, #1
   329e8:	bl	2f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b830>
   329ec:	ldr	r0, [r5]
   329f0:	bl	134f0 <fflush@plt>
   329f4:	mov	r0, r6
   329f8:	bl	13574 <free@plt>
   329fc:	ldr	r2, [sp, #12]
   32a00:	mov	r0, #0
   32a04:	ldr	r3, [r4]
   32a08:	cmp	r2, r3
   32a0c:	bne	32a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ebfc>
   32a10:	add	sp, sp, #20
   32a14:	pop	{r4, r5, r6, lr}
   32a18:	add	sp, sp, #12
   32a1c:	bx	lr
   32a20:	mov	r3, #0
   32a24:	movw	r0, #21792	; 0x5520
   32a28:	movw	r2, #15324	; 0x3bdc
   32a2c:	movt	r0, #5
   32a30:	movt	r2, #5
   32a34:	bl	13760 <concat@plt>
   32a38:	movw	r2, #64592	; 0xfc50
   32a3c:	movt	r2, #9
   32a40:	mov	r3, r5
   32a44:	mov	r6, r0
   32a48:	mov	r1, r0
   32a4c:	ldr	r0, [r2]
   32a50:	ldr	r2, [sp, #8]
   32a54:	bl	2f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b830>
   32a58:	mov	r0, r6
   32a5c:	bl	13574 <free@plt>
   32a60:	b	329fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb70>
   32a64:	movw	r6, #64592	; 0xfc50
   32a68:	movt	r6, #9
   32a6c:	mov	r3, r5
   32a70:	ldr	r0, [r6]
   32a74:	bl	2f6bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b830>
   32a78:	ldr	r1, [r6]
   32a7c:	mov	r0, #10
   32a80:	bl	1379c <_IO_putc@plt>
   32a84:	b	329fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eb70>
   32a88:	bl	13694 <__stack_chk_fail@plt>
   32a8c:	movw	ip, #256	; 0x100
   32a90:	movt	ip, #10
   32a94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32a98:	mov	r9, r1
   32a9c:	ldr	r1, [ip, #8]
   32aa0:	sub	sp, sp, #28
   32aa4:	ldr	sl, [r0]
   32aa8:	cmp	r1, #0
   32aac:	str	ip, [sp, #12]
   32ab0:	str	r3, [sp, #16]
   32ab4:	beq	32dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef20>
   32ab8:	cmp	r9, #0
   32abc:	ble	32d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee9c>
   32ac0:	movw	fp, #1088	; 0x440
   32ac4:	movw	r8, #1624	; 0x658
   32ac8:	movt	fp, #10
   32acc:	mov	r6, #0
   32ad0:	add	r5, r2, #8
   32ad4:	movt	r8, #10
   32ad8:	mov	r4, r2
   32adc:	b	32b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ecb0>
   32ae0:	cmp	r2, r1
   32ae4:	beq	32d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee94>
   32ae8:	cmp	sl, r2
   32aec:	beq	32ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee18>
   32af0:	cmp	r2, #0
   32af4:	beq	32d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee94>
   32af8:	ldr	r3, [r2, #40]	; 0x28
   32afc:	ubfx	r3, r3, #5, #20
   32b00:	tst	r3, #65536	; 0x10000
   32b04:	movne	r7, #6
   32b08:	bne	32b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8c>
   32b0c:	tst	r3, #64	; 0x40
   32b10:	moveq	r7, #7
   32b14:	movne	r7, #8
   32b18:	ldr	r3, [r8]
   32b1c:	str	r7, [r4, #28]
   32b20:	cmp	r3, #0
   32b24:	bne	32bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed64>
   32b28:	add	r6, r6, #1
   32b2c:	add	r5, r5, #32
   32b30:	cmp	r6, r9
   32b34:	add	r4, r4, #32
   32b38:	beq	32d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee9c>
   32b3c:	ldr	r3, [r4, #8]
   32b40:	cmp	r3, #2
   32b44:	beq	32c24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed98>
   32b48:	mov	r2, #0
   32b4c:	ldr	r0, [fp, #32]
   32b50:	ldr	r1, [r5, #-8]
   32b54:	mov	ip, #1
   32b58:	mov	r3, r2
   32b5c:	str	ip, [sp]
   32b60:	bl	13880 <bfd_link_hash_lookup@plt>
   32b64:	mov	r7, r0
   32b68:	cmp	r7, #0
   32b6c:	beq	32c58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edcc>
   32b70:	ldrb	r2, [r7, #12]
   32b74:	sub	r1, r2, #1
   32b78:	cmp	r1, #1
   32b7c:	movls	r7, #1
   32b80:	bls	32b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8c>
   32b84:	sub	r1, r2, #3
   32b88:	cmp	r1, #2
   32b8c:	bhi	32c84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1edf8>
   32b90:	cmp	r2, #5
   32b94:	ldreq	r2, [r7, #20]
   32b98:	ldrne	r1, [r7, #20]
   32b9c:	ldreq	r1, [r2, #4]
   32ba0:	ldr	r2, [r4, #8]
   32ba4:	sub	r2, r2, #2
   32ba8:	cmp	r2, #2
   32bac:	ldr	r2, [r1, #180]	; 0xb4
   32bb0:	ldr	r1, [fp, #52]	; 0x34
   32bb4:	bls	32ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec54>
   32bb8:	cmp	r2, r1
   32bbc:	beq	32d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8c>
   32bc0:	cmp	sl, r2
   32bc4:	beq	32ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee18>
   32bc8:	cmp	r2, #0
   32bcc:	beq	32d18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee8c>
   32bd0:	ldr	r3, [r2, #40]	; 0x28
   32bd4:	tst	r3, #2097152	; 0x200000
   32bd8:	ldr	r3, [r8]
   32bdc:	movne	r7, #5
   32be0:	moveq	r7, #4
   32be4:	cmp	r3, #0
   32be8:	str	r7, [r4, #28]
   32bec:	beq	32b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec9c>
   32bf0:	mov	r2, #5
   32bf4:	movw	r1, #21876	; 0x5574
   32bf8:	mov	r0, #0
   32bfc:	movt	r1, #5
   32c00:	bl	13688 <dcgettext@plt>
   32c04:	ldr	lr, [r4, #12]
   32c08:	ldr	r2, [r5, #-8]
   32c0c:	mov	r1, sl
   32c10:	ldr	r3, [r4, #8]
   32c14:	str	r7, [sp, #4]
   32c18:	str	lr, [sp]
   32c1c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   32c20:	b	32b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec9c>
   32c24:	mov	ip, #0
   32c28:	ldr	r0, [fp, #52]	; 0x34
   32c2c:	ldr	r2, [r5, #-8]
   32c30:	mov	r3, #1
   32c34:	movw	r1, #1088	; 0x440
   32c38:	str	r3, [sp, #4]
   32c3c:	str	ip, [sp]
   32c40:	movt	r1, #10
   32c44:	mov	r3, ip
   32c48:	bl	13508 <bfd_wrapped_link_hash_lookup@plt>
   32c4c:	mov	r7, r0
   32c50:	cmp	r7, #0
   32c54:	bne	32b70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ece4>
   32c58:	ldr	r3, [r4, #8]
   32c5c:	cmp	r3, #4
   32c60:	bhi	32dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef3c>
   32c64:	mov	ip, #1
   32c68:	lsl	r3, ip, r3
   32c6c:	tst	r3, #19
   32c70:	bne	32d10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee84>
   32c74:	tst	r3, #12
   32c78:	beq	32dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef3c>
   32c7c:	mov	r7, ip
   32c80:	b	32b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8c>
   32c84:	ldr	ip, [sp, #12]
   32c88:	movw	r0, #21820	; 0x553c
   32c8c:	movt	r0, #5
   32c90:	ldr	r1, [ip, #8]
   32c94:	ldr	r1, [r1, #4]
   32c98:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   32c9c:	ldrb	r2, [r7, #12]
   32ca0:	b	32b90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ed04>
   32ca4:	ldrb	r2, [r7, #13]
   32ca8:	tst	r2, #1
   32cac:	movne	r7, #2
   32cb0:	bne	32b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8c>
   32cb4:	ldrb	r2, [fp]
   32cb8:	and	r1, r2, #3
   32cbc:	cmp	r1, #2
   32cc0:	beq	32d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eeac>
   32cc4:	tst	r2, #16
   32cc8:	bne	32d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eeb4>
   32ccc:	cmp	r1, #3
   32cd0:	beq	32d40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eeb4>
   32cd4:	movw	r2, #4
   32cd8:	movt	r2, #10
   32cdc:	str	r4, [sp, #20]
   32ce0:	mov	r4, r2
   32ce4:	ldr	r0, [r4, #4]
   32ce8:	cmp	r0, #0
   32cec:	beq	32d00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee74>
   32cf0:	ldr	r1, [r7, #4]
   32cf4:	bl	13490 <strcmp@plt>
   32cf8:	cmp	r0, #0
   32cfc:	beq	32d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eea8>
   32d00:	ldr	r4, [r4]
   32d04:	cmp	r4, #0
   32d08:	bne	32ce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee58>
   32d0c:	ldr	r4, [sp, #20]
   32d10:	mov	r7, #3
   32d14:	b	32b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8c>
   32d18:	mov	r7, #4
   32d1c:	b	32b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8c>
   32d20:	mov	r7, #7
   32d24:	b	32b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8c>
   32d28:	mov	r0, #0
   32d2c:	add	sp, sp, #28
   32d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32d34:	ldr	r4, [sp, #20]
   32d38:	ldr	r7, [sp, #16]
   32d3c:	b	32b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8c>
   32d40:	ldr	r0, [fp, #148]	; 0x94
   32d44:	ldr	r1, [r7, #4]
   32d48:	bl	13a54 <bfd_hide_sym_by_version@plt>
   32d4c:	cmp	r0, #0
   32d50:	bne	32d10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ee84>
   32d54:	movw	r3, #1088	; 0x440
   32d58:	movt	r3, #10
   32d5c:	ldr	r2, [r3, #52]	; 0x34
   32d60:	ldr	r2, [r2, #4]
   32d64:	ldr	r2, [r2, #4]
   32d68:	cmp	r2, #5
   32d6c:	beq	32d90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef04>
   32d70:	ldr	r3, [r4, #12]
   32d74:	cmp	r3, #1
   32d78:	movhi	r3, #0
   32d7c:	movls	r3, #1
   32d80:	cmp	r3, #0
   32d84:	bne	32d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eeac>
   32d88:	mov	r7, #3
   32d8c:	b	32b18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec8c>
   32d90:	ldrb	r3, [r7, #65]	; 0x41
   32d94:	and	r3, r3, #3
   32d98:	cmp	r3, #0
   32d9c:	cmpne	r3, #3
   32da0:	movne	r3, #0
   32da4:	moveq	r3, #1
   32da8:	b	32d80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1eef4>
   32dac:	movw	r0, #21604	; 0x5464
   32db0:	movw	r1, #662	; 0x296
   32db4:	movt	r0, #5
   32db8:	str	r2, [sp, #8]
   32dbc:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   32dc0:	ldr	r2, [sp, #8]
   32dc4:	b	32ab8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec2c>
   32dc8:	movw	r0, #21604	; 0x5464
   32dcc:	movw	r2, #21472	; 0x53e0
   32dd0:	movt	r0, #5
   32dd4:	movt	r2, #5
   32dd8:	mov	r1, #684	; 0x2ac
   32ddc:	bl	303e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c558>
   32de0:	mov	r3, #9
   32de4:	b	32a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec00>
   32de8:	mov	r3, #2
   32dec:	b	32a8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ec00>
   32df0:	movw	r3, #256	; 0x100
   32df4:	movt	r3, #10
   32df8:	ldr	r0, [r3, #24]
   32dfc:	cmp	r0, #0
   32e00:	bxne	lr
   32e04:	movw	r1, #21944	; 0x55b8
   32e08:	mov	r2, #5
   32e0c:	movt	r1, #5
   32e10:	b	13688 <dcgettext@plt>
   32e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32e18:	mov	r6, r0
   32e1c:	movw	r8, #63248	; 0xf710
   32e20:	ldr	r0, [r0, #40]	; 0x28
   32e24:	movt	r8, #9
   32e28:	sub	sp, sp, #68	; 0x44
   32e2c:	ubfx	r0, r0, #5, #20
   32e30:	ldr	r3, [r8]
   32e34:	ands	r0, r0, #65536	; 0x10000
   32e38:	str	r3, [sp, #60]	; 0x3c
   32e3c:	bne	3310c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f280>
   32e40:	ldrb	r3, [r6, #44]	; 0x2c
   32e44:	ubfx	r3, r3, #4, #2
   32e48:	cmp	r3, #0
   32e4c:	beq	32e74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1efe8>
   32e50:	cmp	r3, #1
   32e54:	ldreq	r3, [r6, #48]	; 0x30
   32e58:	ldreq	r0, [r3, #4]
   32e5c:	ldr	r2, [sp, #60]	; 0x3c
   32e60:	ldr	r3, [r8]
   32e64:	cmp	r2, r3
   32e68:	bne	331f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f368>
   32e6c:	add	sp, sp, #68	; 0x44
   32e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32e74:	ldr	r3, [r6, #148]	; 0x94
   32e78:	cmp	r3, #0
   32e7c:	beq	32e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f000>
   32e80:	ldrb	r2, [r3, #44]	; 0x2c
   32e84:	tst	r2, #1
   32e88:	beq	33088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f1fc>
   32e8c:	ldr	sl, [r6]
   32e90:	mov	r4, #0
   32e94:	mov	r0, sl
   32e98:	mov	r1, #0
   32e9c:	bl	138c8 <open64@plt>
   32ea0:	cmp	r0, #0
   32ea4:	str	r0, [sp, #12]
   32ea8:	blt	3310c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f280>
   32eac:	movw	r3, #64584	; 0xfc48
   32eb0:	movt	r3, #9
   32eb4:	ldr	r0, [r6, #4]
   32eb8:	mov	r2, #1
   32ebc:	ldr	r7, [r6]
   32ec0:	str	r2, [r3]
   32ec4:	bl	13c58 <bfd_plugin_target_p@plt>
   32ec8:	mov	r2, #0
   32ecc:	movw	r1, #21956	; 0x55c4
   32ed0:	movt	r1, #5
   32ed4:	mov	r5, r0
   32ed8:	mov	r0, r7
   32edc:	bl	13760 <concat@plt>
   32ee0:	cmp	r5, #0
   32ee4:	movwne	r3, #1088	; 0x440
   32ee8:	moveq	r1, r6
   32eec:	movtne	r3, #10
   32ef0:	ldrne	r1, [r3, #52]	; 0x34
   32ef4:	bl	13868 <bfd_create@plt>
   32ef8:	subs	r9, r0, #0
   32efc:	beq	330d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f24c>
   32f00:	ldr	r3, [r9, #40]	; 0x28
   32f04:	orr	r3, r3, #2228224	; 0x220000
   32f08:	str	r3, [r9, #40]	; 0x28
   32f0c:	bl	134b4 <bfd_make_writable@plt>
   32f10:	cmp	r0, #0
   32f14:	beq	330d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f24c>
   32f18:	cmp	r5, #0
   32f1c:	beq	33094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f208>
   32f20:	movw	r1, #1044	; 0x414
   32f24:	movw	r2, #33051	; 0x811b
   32f28:	movt	r1, #5
   32f2c:	movt	r2, #32
   32f30:	mov	r0, r9
   32f34:	bl	1358c <bfd_make_section_anyway_with_flags@plt>
   32f38:	cmp	r0, #0
   32f3c:	beq	330d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f24c>
   32f40:	mov	r0, r9
   32f44:	mov	r2, #56	; 0x38
   32f48:	mov	r3, #0
   32f4c:	bl	13670 <bfd_alloc@plt>
   32f50:	subs	r7, r0, #0
   32f54:	beq	331a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f31c>
   32f58:	cmp	r4, #0
   32f5c:	beq	33114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f288>
   32f60:	ldr	r1, [r6, #144]	; 0x90
   32f64:	ldrd	r2, [r6, #56]	; 0x38
   32f68:	ldrd	r4, [r1, #8]
   32f6c:	ldr	r1, [sp, #12]
   32f70:	mov	ip, #0
   32f74:	strd	r4, [sp, #40]	; 0x28
   32f78:	mov	r0, r9
   32f7c:	strd	r2, [sp, #32]
   32f80:	str	r7, [sp, #48]	; 0x30
   32f84:	strd	r2, [r7, #40]	; 0x28
   32f88:	mov	r2, #0
   32f8c:	strd	r4, [r7, #48]	; 0x30
   32f90:	mov	r3, #0
   32f94:	str	sl, [sp, #24]
   32f98:	movw	sl, #256	; 0x100
   32f9c:	str	r1, [sp, #28]
   32fa0:	movt	sl, #10
   32fa4:	str	r1, [r7, #28]
   32fa8:	str	ip, [r7, #8]
   32fac:	str	ip, [r7, #12]
   32fb0:	str	ip, [r7, #32]
   32fb4:	str	r9, [r7]
   32fb8:	strd	r2, [r7, #16]
   32fbc:	ldr	r1, [r6]
   32fc0:	str	ip, [sp, #8]
   32fc4:	bl	31fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e15c>
   32fc8:	ldr	fp, [sl, #28]
   32fcc:	ldr	ip, [sp, #8]
   32fd0:	cmp	fp, #0
   32fd4:	str	ip, [sp, #20]
   32fd8:	movne	r4, ip
   32fdc:	movne	r5, sl
   32fe0:	str	r0, [r7, #24]
   32fe4:	bne	32ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f16c>
   32fe8:	b	33030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f1a4>
   32fec:	ldr	r2, [sp, #20]
   32ff0:	cmp	r2, #0
   32ff4:	bne	33030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f1a4>
   32ff8:	ldr	r2, [fp, #20]
   32ffc:	cmp	r2, #0
   33000:	beq	33024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f198>
   33004:	add	r0, sp, #24
   33008:	add	r1, sp, #20
   3300c:	str	fp, [sl, #8]
   33010:	blx	r2
   33014:	str	r4, [sl, #8]
   33018:	cmp	r0, #0
   3301c:	ldrne	r2, [fp, #4]
   33020:	strne	r2, [r5, #24]
   33024:	ldr	fp, [fp]
   33028:	cmp	fp, #0
   3302c:	bne	32fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f160>
   33030:	ldr	r3, [sl, #24]
   33034:	cmp	r3, #0
   33038:	bne	3317c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f2f0>
   3303c:	ldr	r3, [r7, #28]
   33040:	cmn	r3, #1
   33044:	beq	33058 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f1cc>
   33048:	ldr	r0, [r6, #4]
   3304c:	bl	13c58 <bfd_plugin_target_p@plt>
   33050:	cmp	r0, #0
   33054:	beq	330f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f26c>
   33058:	ldr	r3, [sp, #20]
   3305c:	cmp	r3, #0
   33060:	beq	33150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f2c4>
   33064:	ldrb	r3, [r6, #44]	; 0x2c
   33068:	mov	r2, #1
   3306c:	str	r9, [r6, #48]	; 0x30
   33070:	mov	r0, r9
   33074:	bfi	r3, r2, #4, #2
   33078:	strb	r3, [r6, #44]	; 0x2c
   3307c:	bl	134fc <bfd_make_readable@plt>
   33080:	ldr	r0, [r9, #4]
   33084:	b	32e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1efd0>
   33088:	ldr	sl, [r3]
   3308c:	mov	r4, #1
   33090:	b	32e94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f008>
   33094:	mov	r0, r6
   33098:	bl	138e0 <bfd_get_arch_info@plt>
   3309c:	mov	r1, r0
   330a0:	mov	r0, r9
   330a4:	bl	13e5c <bfd_set_arch_info@plt>
   330a8:	mov	r0, r6
   330ac:	bl	137f0 <bfd_get_gp_size@plt>
   330b0:	mov	r1, r0
   330b4:	mov	r0, r9
   330b8:	bl	13b8c <bfd_set_gp_size@plt>
   330bc:	ldr	r3, [r9, #4]
   330c0:	mov	r0, r6
   330c4:	mov	r1, r9
   330c8:	ldr	r3, [r3, #168]	; 0xa8
   330cc:	blx	r3
   330d0:	cmp	r0, #0
   330d4:	bne	32f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f094>
   330d8:	mov	r2, #5
   330dc:	movw	r1, #21980	; 0x55dc
   330e0:	mov	r0, #0
   330e4:	movt	r1, #5
   330e8:	bl	13688 <dcgettext@plt>
   330ec:	mov	r9, #0
   330f0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   330f4:	b	32f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f0b4>
   330f8:	ldr	r0, [sp, #12]
   330fc:	bl	13e2c <close@plt>
   33100:	mvn	r3, #0
   33104:	str	r3, [r7, #28]
   33108:	b	33058 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f1cc>
   3310c:	mov	r0, #0
   33110:	b	32e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1efd0>
   33114:	mov	r2, #0
   33118:	mov	r3, #2
   3311c:	ldr	r0, [sp, #12]
   33120:	str	r3, [sp]
   33124:	mov	r3, #0
   33128:	bl	137d8 <lseek64@plt>
   3312c:	mov	r4, r0
   33130:	mov	r5, r1
   33134:	mov	r0, r9
   33138:	mov	r1, sl
   3313c:	bl	31fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1e15c>
   33140:	mov	r2, #0
   33144:	mov	r3, #0
   33148:	mov	sl, r0
   3314c:	b	32f6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f0e0>
   33150:	ldr	r3, [r7, #32]
   33154:	cmp	r3, #0
   33158:	bne	331d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f344>
   3315c:	ldrb	r3, [r6, #44]	; 0x2c
   33160:	mov	r2, #2
   33164:	mov	r0, r9
   33168:	bfi	r3, r2, #4, #2
   3316c:	strb	r3, [r6, #44]	; 0x2c
   33170:	bl	13a30 <bfd_close_all_done@plt>
   33174:	mov	r0, #0
   33178:	b	32e5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1efd0>
   3317c:	mov	r2, #5
   33180:	movw	r1, #22076	; 0x563c
   33184:	mov	r0, #0
   33188:	movt	r1, #5
   3318c:	bl	13688 <dcgettext@plt>
   33190:	mov	r4, r0
   33194:	bl	32df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef64>
   33198:	mov	r1, r0
   3319c:	mov	r0, r4
   331a0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   331a4:	b	3303c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f1b0>
   331a8:	mov	r2, #5
   331ac:	movw	r1, #22020	; 0x5604
   331b0:	movt	r1, #5
   331b4:	bl	13688 <dcgettext@plt>
   331b8:	mov	r5, r0
   331bc:	bl	13784 <bfd_get_error@plt>
   331c0:	mov	r1, r0
   331c4:	mov	r0, r5
   331c8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   331cc:	b	32f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f0cc>
   331d0:	ldrd	r0, [r7, #16]
   331d4:	ldrd	r2, [sl, #16]
   331d8:	bl	3fe20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bf94>
   331dc:	ldr	r5, [r7, #12]
   331e0:	ldr	r4, [r7, #8]
   331e4:	add	r1, r5, r2
   331e8:	rsb	r0, r2, r4
   331ec:	bl	13bc8 <munmap@plt>
   331f0:	b	3315c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f2d0>
   331f4:	bl	13694 <__stack_chk_fail@plt>
   331f8:	push	{r4, r5, r6, lr}
   331fc:	mov	r5, r0
   33200:	mov	r0, #36	; 0x24
   33204:	bl	137b4 <xmalloc@plt>
   33208:	mov	r1, #0
   3320c:	mov	r2, #36	; 0x24
   33210:	mov	r4, r0
   33214:	bl	13af0 <memset@plt>
   33218:	mov	r0, r5
   3321c:	mov	r1, #2
   33220:	str	r5, [r4, #4]
   33224:	bl	13820 <dlopen@plt>
   33228:	cmp	r0, #0
   3322c:	str	r0, [r4, #8]
   33230:	beq	33260 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f3d4>
   33234:	movw	r2, #62528	; 0xf440
   33238:	movt	r2, #9
   3323c:	movw	r3, #256	; 0x100
   33240:	movt	r3, #10
   33244:	ldr	r0, [r2]
   33248:	add	r1, r4, #12
   3324c:	str	r4, [r2]
   33250:	str	r4, [r3, #32]
   33254:	str	r4, [r0]
   33258:	str	r1, [r3, #36]	; 0x24
   3325c:	pop	{r4, r5, r6, pc}
   33260:	mov	r2, #5
   33264:	movw	r1, #22124	; 0x566c
   33268:	movt	r1, #5
   3326c:	bl	13688 <dcgettext@plt>
   33270:	mov	r6, r0
   33274:	bl	13718 <dlerror@plt>
   33278:	mov	r1, r5
   3327c:	mov	r2, r0
   33280:	mov	r0, r6
   33284:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   33288:	b	33234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f3a8>
   3328c:	push	{r3, r4, r5, lr}
   33290:	movw	r4, #256	; 0x100
   33294:	movt	r4, #10
   33298:	mov	r5, r0
   3329c:	ldr	r0, [r4, #32]
   332a0:	cmp	r0, #0
   332a4:	beq	33324 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f498>
   332a8:	ldrb	r3, [r5]
   332ac:	cmp	r3, #45	; 0x2d
   332b0:	beq	332f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f468>
   332b4:	mov	r0, #8
   332b8:	bl	137b4 <xmalloc@plt>
   332bc:	ldr	r2, [r4, #32]
   332c0:	mov	r1, #0
   332c4:	mov	ip, r1
   332c8:	mov	r3, r0
   332cc:	ldr	r0, [r4, #36]	; 0x24
   332d0:	str	r5, [r3, #4]
   332d4:	ldr	r5, [r2, #16]
   332d8:	str	r3, [r4, #36]	; 0x24
   332dc:	str	r1, [r3]
   332e0:	add	r1, r5, #1
   332e4:	str	r3, [r0]
   332e8:	str	r1, [r2, #16]
   332ec:	mov	r0, ip
   332f0:	pop	{r3, r4, r5, pc}
   332f4:	ldrb	r3, [r5, #1]
   332f8:	movw	r1, #22160	; 0x5690
   332fc:	mov	r2, #13
   33300:	movt	r1, #5
   33304:	cmp	r3, #45	; 0x2d
   33308:	addne	r0, r5, #1
   3330c:	addeq	r0, r5, #2
   33310:	bl	13e08 <strncmp@plt>
   33314:	subs	ip, r0, #0
   33318:	bne	332b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f428>
   3331c:	mov	r0, ip
   33320:	pop	{r3, r4, r5, pc}
   33324:	movw	r1, #21944	; 0x55b8
   33328:	mov	r2, #5
   3332c:	movt	r1, #5
   33330:	bl	13688 <dcgettext@plt>
   33334:	mvn	ip, #0
   33338:	str	r0, [r4, #24]
   3333c:	b	332ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f460>
   33340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33344:	movw	r6, #256	; 0x100
   33348:	movt	r6, #10
   3334c:	sub	sp, sp, #12
   33350:	ldr	r4, [r6, #28]
   33354:	cmp	r4, #0
   33358:	beq	3355c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f6d0>
   3335c:	mov	r3, #0
   33360:	ldr	r2, [r4, #16]
   33364:	ldr	r4, [r4]
   33368:	cmp	r3, r2
   3336c:	movcc	r3, r2
   33370:	cmp	r4, #0
   33374:	bne	33360 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f4d4>
   33378:	add	r0, r3, #18
   3337c:	movw	ip, #9116	; 0x239c
   33380:	movw	r2, #9188	; 0x23e4
   33384:	movt	ip, #3
   33388:	lsl	r0, r0, #3
   3338c:	movt	r2, #3
   33390:	stm	sp, {r2, ip}
   33394:	bl	137b4 <xmalloc@plt>
   33398:	ldr	r5, [pc, #920]	; 33738 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8ac>
   3339c:	movw	r7, #1088	; 0x440
   333a0:	ldm	sp, {r2, ip}
   333a4:	movw	fp, #9284	; 0x2444
   333a8:	movw	sl, #11744	; 0x2de0
   333ac:	movw	r8, #11752	; 0x2de8
   333b0:	movt	r7, #10
   333b4:	movt	fp, #3
   333b8:	movt	sl, #3
   333bc:	movt	r8, #3
   333c0:	mov	r9, r0
   333c4:	ldr	r1, [r5, #4]!
   333c8:	sub	r3, r1, #1
   333cc:	str	r1, [r9, r4]
   333d0:	cmp	r3, #24
   333d4:	ldrls	pc, [pc, r3, lsl #2]
   333d8:	b	336a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f818>
   333dc:	muleq	r3, r4, r6
   333e0:	andeq	r3, r3, r4, lsr #13
   333e4:	andeq	r3, r3, ip, asr r6
   333e8:	andeq	r3, r3, r4, lsr #13
   333ec:	andeq	r3, r3, r8, asr #12
   333f0:	andeq	r3, r3, r4, lsr r6
   333f4:	andeq	r3, r3, r0, lsr #12
   333f8:	andeq	r3, r3, ip, lsl #12
   333fc:	andeq	r3, r3, r0, lsl #12
   33400:	strdeq	r3, [r3], -r4
   33404:	andeq	r3, r3, r0, ror #11
   33408:	andeq	r3, r3, ip, asr #11
   3340c:			; <UNDEFINED> instruction: 0x000335b8
   33410:	andeq	r3, r3, ip, lsr #11
   33414:	muleq	r3, r4, r5
   33418:	andeq	r3, r3, r8, lsl #11
   3341c:	andeq	r3, r3, r8, ror r5
   33420:	andeq	r3, r3, r4, ror #10
   33424:	andeq	r3, r3, r4, lsr #13
   33428:	andeq	r3, r3, r4, lsr #13
   3342c:	andeq	r3, r3, r4, lsr #13
   33430:	andeq	r3, r3, r4, lsr #13
   33434:	andeq	r3, r3, r4, lsr #13
   33438:	andeq	r3, r3, r4, lsr #13
   3343c:	andeq	r3, r3, r0, asr #8
   33440:	add	r3, r9, r4
   33444:	str	sl, [r3, #4]
   33448:	add	r4, r4, #8
   3344c:	cmp	r4, #136	; 0x88
   33450:	bne	333c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f538>
   33454:	ldr	r5, [r6, #28]
   33458:	cmp	r5, #0
   3345c:	addne	r8, r9, #136	; 0x88
   33460:	movne	r4, #4
   33464:	beq	334e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f654>
   33468:	movw	r1, #22176	; 0x56a0
   3346c:	ldr	r0, [r5, #8]
   33470:	movt	r1, #5
   33474:	bl	13e50 <dlsym@plt>
   33478:	subs	sl, r0, #0
   3347c:	beq	336ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f860>
   33480:	ldr	r2, [r5, #12]
   33484:	cmp	r2, #0
   33488:	beq	336e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f858>
   3348c:	add	r3, r9, #144	; 0x90
   33490:	ldr	r1, [r2, #4]
   33494:	mov	ip, r3
   33498:	ldr	r2, [r2]
   3349c:	add	r3, r3, #8
   334a0:	str	r4, [r3, #-16]
   334a4:	cmp	r2, #0
   334a8:	str	r1, [r3, #-12]
   334ac:	bne	33490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f604>
   334b0:	mov	fp, #0
   334b4:	str	r5, [r6, #8]
   334b8:	mov	r0, r9
   334bc:	str	fp, [ip]
   334c0:	str	fp, [ip, #4]
   334c4:	blx	sl
   334c8:	str	fp, [r6, #8]
   334cc:	subs	sl, r0, #0
   334d0:	bne	336c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f834>
   334d4:	ldr	r5, [r5]
   334d8:	cmp	r5, #0
   334dc:	bne	33468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5dc>
   334e0:	ldr	r3, [r7, #28]
   334e4:	movw	r4, #8280	; 0x2058
   334e8:	ldr	ip, [pc, #588]	; 3373c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8b0>
   334ec:	movt	r4, #3
   334f0:	ldrb	r5, [r7]
   334f4:	mov	lr, r3
   334f8:	str	r3, [r6]
   334fc:	ldm	lr!, {r0, r1, r2, r3}
   33500:	lsr	r8, r5, #7
   33504:	str	r8, [r6, #4]
   33508:	orr	r5, r5, #128	; 0x80
   3350c:	stmia	ip!, {r0, r1, r2, r3}
   33510:	ldm	lr!, {r0, r1, r2, r3}
   33514:	stmia	ip!, {r0, r1, r2, r3}
   33518:	ldm	lr!, {r0, r1, r2, r3}
   3351c:	stmia	ip!, {r0, r1, r2, r3}
   33520:	sub	r3, ip, #48	; 0x30
   33524:	ldm	lr, {r0, r1, r2}
   33528:	stm	ip, {r0, r1, r2}
   3352c:	movw	r0, #11796	; 0x2e14
   33530:	ldrb	r2, [r7, #1]
   33534:	movt	r0, #3
   33538:	str	r3, [r7, #28]
   3353c:	strb	r5, [r7]
   33540:	orr	r3, r2, #1
   33544:	str	r4, [r6, #80]	; 0x50
   33548:	strb	r3, [r7, #1]
   3354c:	bl	13484 <register_ld_plugin_object_p@plt>
   33550:	bl	13a78 <getpagesize@plt>
   33554:	asr	r1, r0, #31
   33558:	strd	r0, [r6, #16]
   3355c:	add	sp, sp, #12
   33560:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33564:	add	r1, r9, r4
   33568:	movw	r3, #9380	; 0x24a4
   3356c:	movt	r3, #3
   33570:	str	r3, [r1, #4]
   33574:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   33578:	add	r3, r9, r4
   3357c:	mov	r1, #227	; 0xe3
   33580:	str	r1, [r3, #4]
   33584:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   33588:	add	r3, r9, r4
   3358c:	str	ip, [r3, #4]
   33590:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   33594:	movw	r3, #62432	; 0xf3e0
   33598:	movt	r3, #9
   3359c:	add	r1, r9, r4
   335a0:	ldr	r3, [r3]
   335a4:	str	r3, [r1, #4]
   335a8:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   335ac:	add	r3, r9, r4
   335b0:	str	r2, [r3, #4]
   335b4:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   335b8:	add	r1, r9, r4
   335bc:	movw	r3, #8756	; 0x2234
   335c0:	movt	r3, #3
   335c4:	str	r3, [r1, #4]
   335c8:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   335cc:	add	r1, r9, r4
   335d0:	movw	r3, #8836	; 0x2284
   335d4:	movt	r3, #3
   335d8:	str	r3, [r1, #4]
   335dc:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   335e0:	add	r1, r9, r4
   335e4:	movw	r3, #10572	; 0x294c
   335e8:	movt	r3, #3
   335ec:	str	r3, [r1, #4]
   335f0:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   335f4:	add	r3, r9, r4
   335f8:	str	fp, [r3, #4]
   335fc:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   33600:	add	r3, r9, r4
   33604:	str	r8, [r3, #4]
   33608:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   3360c:	add	r1, r9, r4
   33610:	movw	r3, #9824	; 0x2660
   33614:	movt	r3, #3
   33618:	str	r3, [r1, #4]
   3361c:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   33620:	add	r1, r9, r4
   33624:	movw	r3, #8924	; 0x22dc
   33628:	movt	r3, #3
   3362c:	str	r3, [r1, #4]
   33630:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   33634:	add	r1, r9, r4
   33638:	movw	r3, #8988	; 0x231c
   3363c:	movt	r3, #3
   33640:	str	r3, [r1, #4]
   33644:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   33648:	add	r1, r9, r4
   3364c:	movw	r3, #9052	; 0x235c
   33650:	movt	r3, #3
   33654:	str	r3, [r1, #4]
   33658:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   3365c:	ldrb	r3, [r7]
   33660:	and	r3, r3, #3
   33664:	cmp	r3, #2
   33668:	moveq	r3, #0
   3366c:	beq	33688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f7fc>
   33670:	cmp	r3, #0
   33674:	moveq	r3, #1
   33678:	beq	33688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f7fc>
   3367c:	cmp	r3, #1
   33680:	movne	r3, #2
   33684:	moveq	r3, #3
   33688:	add	r1, r9, r4
   3368c:	str	r3, [r1, #4]
   33690:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   33694:	add	r3, r9, r4
   33698:	mov	r1, #1
   3369c:	str	r1, [r3, #4]
   336a0:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   336a4:	movw	r0, #21604	; 0x5464
   336a8:	movw	r1, #943	; 0x3af
   336ac:	movt	r0, #5
   336b0:	stm	sp, {r2, ip}
   336b4:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   336b8:	ldm	sp, {r2, ip}
   336bc:	b	33448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5bc>
   336c0:	mov	r0, fp
   336c4:	mov	r2, #5
   336c8:	movw	r1, #22192	; 0x56b0
   336cc:	movt	r1, #5
   336d0:	bl	13688 <dcgettext@plt>
   336d4:	mov	r2, sl
   336d8:	ldr	r1, [r5, #4]
   336dc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   336e0:	b	334d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f648>
   336e4:	mov	ip, r8
   336e8:	b	334b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f624>
   336ec:	movw	r1, #22184	; 0x56a8
   336f0:	ldr	r0, [r5, #8]
   336f4:	movt	r1, #5
   336f8:	bl	13e50 <dlsym@plt>
   336fc:	subs	sl, r0, #0
   33700:	bne	33480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5f4>
   33704:	mov	r2, #5
   33708:	movw	r1, #22124	; 0x566c
   3370c:	movt	r1, #5
   33710:	bl	13688 <dcgettext@plt>
   33714:	ldr	fp, [r5, #4]
   33718:	str	r0, [sp, #4]
   3371c:	bl	13718 <dlerror@plt>
   33720:	ldr	r3, [sp, #4]
   33724:	mov	r1, fp
   33728:	mov	r2, r0
   3372c:	mov	r0, r3
   33730:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   33734:	b	33480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f5f4>
   33738:	andeq	r5, r5, r8, ror #7
   3373c:	andeq	r0, sl, r8, lsr #2
   33740:	push	{r3, r4, r5, lr}
   33744:	mov	r4, r0
   33748:	ldr	r0, [r0, #16]
   3374c:	bl	32e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ef88>
   33750:	cmp	r0, #0
   33754:	popeq	{r3, r4, r5, pc}
   33758:	ldr	r0, [r4, #16]
   3375c:	ldr	r3, [r0, #148]	; 0x94
   33760:	ldr	r5, [r0, #48]	; 0x30
   33764:	cmp	r3, #0
   33768:	beq	33780 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8f4>
   3376c:	ldrb	r3, [r4, #37]	; 0x25
   33770:	str	r5, [r4, #16]
   33774:	orr	r3, r3, #32
   33778:	strb	r3, [r4, #37]	; 0x25
   3377c:	pop	{r3, r4, r5, pc}
   33780:	bl	13c4c <bfd_close@plt>
   33784:	b	3376c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f8e0>
   33788:	push	{r3, r4, r5, r6, r7, lr}
   3378c:	movw	r5, #256	; 0x100
   33790:	movt	r5, #10
   33794:	mov	r3, #1
   33798:	ldr	r4, [r5, #28]
   3379c:	str	r3, [r5, #100]	; 0x64
   337a0:	cmp	r4, #0
   337a4:	movne	r7, r5
   337a8:	movne	r6, #0
   337ac:	beq	337e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f954>
   337b0:	ldr	r3, [r4, #24]
   337b4:	cmp	r3, #0
   337b8:	beq	337d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f948>
   337bc:	str	r4, [r5, #8]
   337c0:	blx	r3
   337c4:	str	r6, [r5, #8]
   337c8:	cmp	r0, #0
   337cc:	ldrne	r3, [r4, #4]
   337d0:	strne	r3, [r7, #24]
   337d4:	ldr	r4, [r4]
   337d8:	cmp	r4, #0
   337dc:	bne	337b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f924>
   337e0:	ldr	r0, [r5, #24]
   337e4:	subs	r0, r0, #0
   337e8:	mvnne	r0, #0
   337ec:	pop	{r3, r4, r5, r6, r7, pc}
   337f0:	push	{r4, r5, r6, r7, r8, lr}
   337f4:	movw	r6, #256	; 0x100
   337f8:	movt	r6, #10
   337fc:	ldr	r4, [r6, #28]
   33800:	cmp	r4, #0
   33804:	popeq	{r4, r5, r6, r7, r8, pc}
   33808:	mov	r7, #1
   3380c:	b	3381c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f990>
   33810:	ldr	r4, [r4]
   33814:	cmp	r4, #0
   33818:	beq	33860 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f9d4>
   3381c:	ldr	r3, [r4, #28]
   33820:	cmp	r3, #0
   33824:	beq	33810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f984>
   33828:	ldr	r5, [r4, #32]
   3382c:	cmp	r5, #0
   33830:	bne	33810 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f984>
   33834:	str	r7, [r4, #32]
   33838:	str	r4, [r6, #8]
   3383c:	blx	r3
   33840:	str	r5, [r6, #8]
   33844:	subs	r8, r0, #0
   33848:	bne	33864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f9d8>
   3384c:	ldr	r0, [r4, #8]
   33850:	bl	136c4 <dlclose@plt>
   33854:	ldr	r4, [r4]
   33858:	cmp	r4, #0
   3385c:	bne	3381c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f990>
   33860:	pop	{r4, r5, r6, r7, r8, pc}
   33864:	mov	r0, r5
   33868:	mov	r2, #5
   3386c:	movw	r1, #22220	; 0x56cc
   33870:	movt	r1, #5
   33874:	bl	13688 <dcgettext@plt>
   33878:	mov	r2, r8
   3387c:	ldr	r1, [r4, #4]
   33880:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   33884:	b	3384c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f9c0>
   33888:	push	{r3, lr}
   3388c:	lsl	r2, r0, #1
   33890:	movw	r3, #63264	; 0xf720
   33894:	movt	r3, #9
   33898:	ldrh	r3, [r3, r2]
   3389c:	tst	r3, #4
   338a0:	bne	338cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa40>
   338a4:	tst	r3, #128	; 0x80
   338a8:	bne	338c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa34>
   338ac:	tst	r3, #8
   338b0:	beq	338d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa4c>
   338b4:	sub	r0, r0, #87	; 0x57
   338b8:	uxtb	r0, r0
   338bc:	pop	{r3, pc}
   338c0:	sub	r0, r0, #55	; 0x37
   338c4:	uxtb	r0, r0
   338c8:	pop	{r3, pc}
   338cc:	sub	r0, r0, #48	; 0x30
   338d0:	uxtb	r0, r0
   338d4:	pop	{r3, pc}
   338d8:	bl	13e14 <abort@plt>
   338dc:	push	{r4, lr}
   338e0:	mov	r4, r0
   338e4:	ldrb	r3, [r0]
   338e8:	cmp	r3, #109	; 0x6d
   338ec:	bne	3391c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa90>
   338f0:	ldrb	r3, [r0, #1]
   338f4:	cmp	r3, #100	; 0x64
   338f8:	bne	3391c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa90>
   338fc:	ldrb	r3, [r0, #2]
   33900:	cmp	r3, #53	; 0x35
   33904:	bne	3391c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa90>
   33908:	ldrb	r3, [r0, #3]
   3390c:	cmp	r3, #0
   33910:	bne	3391c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa90>
   33914:	mov	r0, #1
   33918:	pop	{r4, pc}
   3391c:	movw	r1, #22268	; 0x56fc
   33920:	mov	r0, r4
   33924:	movt	r1, #5
   33928:	bl	13490 <strcmp@plt>
   3392c:	cmp	r0, #0
   33930:	beq	33914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa88>
   33934:	movw	r1, #22276	; 0x5704
   33938:	mov	r0, r4
   3393c:	movt	r1, #5
   33940:	bl	13490 <strcmp@plt>
   33944:	cmp	r0, #0
   33948:	beq	33914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fa88>
   3394c:	mov	r0, r4
   33950:	mov	r2, #2
   33954:	movw	r1, #11104	; 0x2b60
   33958:	movt	r1, #5
   3395c:	bl	13e08 <strncmp@plt>
   33960:	rsbs	r0, r0, #1
   33964:	movcc	r0, #0
   33968:	pop	{r4, pc}
   3396c:	push	{r3, r4, r5, lr}
   33970:	mov	r4, r0
   33974:	ldrb	r3, [r0]
   33978:	cmp	r3, #109	; 0x6d
   3397c:	beq	339a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb18>
   33980:	movw	r1, #22276	; 0x5704
   33984:	mov	r0, r4
   33988:	movt	r1, #5
   3398c:	bl	13490 <strcmp@plt>
   33990:	cmp	r0, #0
   33994:	bne	339cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb40>
   33998:	mov	r0, #16
   3399c:	mov	r1, #0
   339a0:	pop	{r3, r4, r5, pc}
   339a4:	ldrb	r3, [r0, #1]
   339a8:	cmp	r3, #100	; 0x64
   339ac:	bne	33980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1faf4>
   339b0:	ldrb	r3, [r0, #2]
   339b4:	cmp	r3, #53	; 0x35
   339b8:	bne	33980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1faf4>
   339bc:	ldrb	r3, [r0, #3]
   339c0:	cmp	r3, #0
   339c4:	beq	33998 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb0c>
   339c8:	b	33980 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1faf4>
   339cc:	movw	r1, #22268	; 0x56fc
   339d0:	mov	r0, r4
   339d4:	movt	r1, #5
   339d8:	bl	13490 <strcmp@plt>
   339dc:	cmp	r0, #0
   339e0:	bne	339f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fb64>
   339e4:	mov	r0, #20
   339e8:	mov	r1, #0
   339ec:	pop	{r3, r4, r5, pc}
   339f0:	movw	r1, #11104	; 0x2b60
   339f4:	mov	r0, r4
   339f8:	movt	r1, #5
   339fc:	mov	r2, #2
   33a00:	bl	13e08 <strncmp@plt>
   33a04:	cmp	r0, #0
   33a08:	bne	33a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fbec>
   33a0c:	movw	ip, #63264	; 0xf720
   33a10:	movt	ip, #9
   33a14:	ldrb	r1, [r4, #2]
   33a18:	mov	r2, #0
   33a1c:	add	r4, r4, #2
   33a20:	mov	r3, #0
   33a24:	mov	r5, ip
   33a28:	b	33a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fbcc>
   33a2c:	ldrb	r0, [r4, #1]
   33a30:	lsl	r0, r0, #1
   33a34:	ldrh	r0, [r5, r0]
   33a38:	tst	r0, #256	; 0x100
   33a3c:	beq	33a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fbdc>
   33a40:	adds	r2, r2, #1
   33a44:	add	r4, r4, #2
   33a48:	adc	r3, r3, #0
   33a4c:	ldrb	r1, [r4]
   33a50:	cmp	r1, #0
   33a54:	beq	33a84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fbf8>
   33a58:	lsl	r0, r1, #1
   33a5c:	ldrh	r0, [ip, r0]
   33a60:	tst	r0, #256	; 0x100
   33a64:	bne	33a2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fba0>
   33a68:	cmp	r1, #45	; 0x2d
   33a6c:	cmpne	r1, #58	; 0x3a
   33a70:	add	r4, r4, #1
   33a74:	beq	33a4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fbc0>
   33a78:	mov	r0, #0
   33a7c:	mov	r1, r0
   33a80:	pop	{r3, r4, r5, pc}
   33a84:	mov	r0, r2
   33a88:	mov	r1, r3
   33a8c:	pop	{r3, r4, r5, pc}
   33a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33a94:	movw	r6, #63248	; 0xf710
   33a98:	movt	r6, #9
   33a9c:	mov	r4, r1
   33aa0:	ldrb	r1, [r1]
   33aa4:	sub	sp, sp, #180	; 0xb4
   33aa8:	ldr	ip, [r6]
   33aac:	mov	r8, r0
   33ab0:	cmp	r1, #109	; 0x6d
   33ab4:	mov	r5, r2
   33ab8:	mov	r7, r3
   33abc:	str	ip, [sp, #172]	; 0xac
   33ac0:	bne	33ad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc44>
   33ac4:	ldrb	r3, [r4, #1]
   33ac8:	cmp	r3, #100	; 0x64
   33acc:	beq	33bd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd48>
   33ad0:	movw	r1, #22268	; 0x56fc
   33ad4:	mov	r0, r4
   33ad8:	movt	r1, #5
   33adc:	bl	13490 <strcmp@plt>
   33ae0:	cmp	r0, #0
   33ae4:	beq	33c24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd98>
   33ae8:	movw	r1, #22276	; 0x5704
   33aec:	mov	r0, r4
   33af0:	movt	r1, #5
   33af4:	bl	13490 <strcmp@plt>
   33af8:	subs	r5, r0, #0
   33afc:	beq	33c5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fdd0>
   33b00:	movw	r1, #11104	; 0x2b60
   33b04:	mov	r0, r4
   33b08:	movt	r1, #5
   33b0c:	mov	r2, #2
   33b10:	bl	13e08 <strncmp@plt>
   33b14:	subs	r8, r0, #0
   33b18:	bne	33ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe18>
   33b1c:	movw	r5, #63264	; 0xf720
   33b20:	movt	r5, #9
   33b24:	ldrb	r0, [r4, #2]
   33b28:	add	r4, r4, #2
   33b2c:	mov	r9, r5
   33b30:	b	33b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fcc4>
   33b34:	cmp	r0, #45	; 0x2d
   33b38:	cmpne	r0, #58	; 0x3a
   33b3c:	bne	33ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe18>
   33b40:	add	r4, r4, #1
   33b44:	ldrb	r0, [r4]
   33b48:	cmp	r0, #0
   33b4c:	beq	33bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd2c>
   33b50:	lsl	r2, r0, #1
   33b54:	ldrh	r2, [r5, r2]
   33b58:	tst	r2, #256	; 0x100
   33b5c:	beq	33b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fca8>
   33b60:	ldrb	r3, [r4, #1]
   33b64:	lsl	r3, r3, #1
   33b68:	ldrh	r3, [r9, r3]
   33b6c:	tst	r3, #256	; 0x100
   33b70:	beq	33b34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fca8>
   33b74:	add	r3, r4, #2
   33b78:	str	r3, [sp, #4]
   33b7c:	bl	33888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f9fc>
   33b80:	add	fp, r7, r8
   33b84:	lsl	r0, r0, #4
   33b88:	uxtb	sl, r0
   33b8c:	strb	sl, [r7, r8]
   33b90:	ldrb	r0, [r4, #1]
   33b94:	add	r8, r8, #1
   33b98:	bl	33888 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1f9fc>
   33b9c:	ldr	r3, [sp, #4]
   33ba0:	mov	r4, r3
   33ba4:	orr	r0, sl, r0
   33ba8:	strb	r0, [fp]
   33bac:	ldrb	r0, [r4]
   33bb0:	cmp	r0, #0
   33bb4:	bne	33b50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fcc4>
   33bb8:	mov	r0, #1
   33bbc:	ldr	r2, [sp, #172]	; 0xac
   33bc0:	ldr	r3, [r6]
   33bc4:	cmp	r2, r3
   33bc8:	bne	33ca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe1c>
   33bcc:	add	sp, sp, #180	; 0xb4
   33bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33bd4:	ldrb	r3, [r4, #2]
   33bd8:	cmp	r3, #53	; 0x35
   33bdc:	bne	33ad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc44>
   33be0:	ldrb	r3, [r4, #3]
   33be4:	cmp	r3, #0
   33be8:	bne	33ad0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc44>
   33bec:	add	r0, sp, #12
   33bf0:	bl	3c40c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28580>
   33bf4:	mov	r0, r8
   33bf8:	add	r2, sp, #12
   33bfc:	movw	r1, #53356	; 0xd06c
   33c00:	movt	r1, #3
   33c04:	blx	r5
   33c08:	cmp	r0, #0
   33c0c:	beq	33bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd30>
   33c10:	add	r0, sp, #12
   33c14:	mov	r1, r7
   33c18:	bl	3cf7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x290f0>
   33c1c:	mov	r0, #1
   33c20:	b	33bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd30>
   33c24:	add	r0, sp, #12
   33c28:	bl	3d348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x294bc>
   33c2c:	mov	r0, r8
   33c30:	add	r2, sp, #12
   33c34:	movw	r1, #60556	; 0xec8c
   33c38:	movt	r1, #3
   33c3c:	blx	r5
   33c40:	cmp	r0, #0
   33c44:	beq	33bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd30>
   33c48:	add	r0, sp, #12
   33c4c:	mov	r1, r7
   33c50:	bl	3ebc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad38>
   33c54:	mov	r0, #1
   33c58:	b	33bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd30>
   33c5c:	movw	r0, #22284	; 0x570c
   33c60:	mov	r1, r5
   33c64:	movt	r0, #5
   33c68:	bl	138c8 <open64@plt>
   33c6c:	subs	r4, r0, #0
   33c70:	movlt	r0, r5
   33c74:	blt	33bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd30>
   33c78:	mov	r1, r7
   33c7c:	ldr	r2, [sp, #216]	; 0xd8
   33c80:	bl	134e4 <read@plt>
   33c84:	mov	r5, r0
   33c88:	mov	r0, r4
   33c8c:	bl	13e2c <close@plt>
   33c90:	ldr	r3, [sp, #216]	; 0xd8
   33c94:	cmp	r3, r5
   33c98:	movgt	r0, #0
   33c9c:	movle	r0, #1
   33ca0:	b	33bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fd30>
   33ca4:	bl	13e14 <abort@plt>
   33ca8:	bl	13694 <__stack_chk_fail@plt>
   33cac:	movw	r3, #1088	; 0x440
   33cb0:	movt	r3, #10
   33cb4:	ldrb	r2, [r3]
   33cb8:	and	r2, r2, #3
   33cbc:	cmp	r2, #2
   33cc0:	movne	r2, #1
   33cc4:	strne	r2, [r3, #24]
   33cc8:	bx	lr
   33ccc:	ldr	r3, [r0]
   33cd0:	ldr	ip, [r1]
   33cd4:	push	{r4, r5, r6, r7}
   33cd8:	ldr	r1, [r3, #88]	; 0x58
   33cdc:	ldr	r2, [ip, #88]	; 0x58
   33ce0:	cmp	r1, #0
   33ce4:	cmpne	r2, #0
   33ce8:	moveq	r0, #0
   33cec:	beq	33d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe9c>
   33cf0:	ldrd	r6, [r3, #80]	; 0x50
   33cf4:	ldrd	r0, [r1, #32]
   33cf8:	ldrd	r4, [ip, #80]	; 0x50
   33cfc:	ldrd	r2, [r2, #32]
   33d00:	adds	r0, r0, r6
   33d04:	adc	r1, r1, r7
   33d08:	adds	r2, r2, r4
   33d0c:	adc	r3, r3, r5
   33d10:	cmp	r1, r3
   33d14:	cmpeq	r0, r2
   33d18:	movhi	r0, #1
   33d1c:	bhi	33d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fe9c>
   33d20:	movcs	r0, #0
   33d24:	mvncc	r0, #0
   33d28:	pop	{r4, r5, r6, r7}
   33d2c:	bx	lr
   33d30:	push	{r3, lr}
   33d34:	movw	r3, #360	; 0x168
   33d38:	movt	r3, #10
   33d3c:	ldr	r2, [r3]
   33d40:	cmp	r2, r0
   33d44:	popeq	{r3, pc}
   33d48:	ldr	r3, [r3, #4]
   33d4c:	blx	r3
   33d50:	pop	{r3, pc}
   33d54:	movw	r3, #1088	; 0x440
   33d58:	movt	r3, #10
   33d5c:	push	{r4, r5}
   33d60:	mov	r2, #0
   33d64:	str	r2, [r0]
   33d68:	ldrb	r1, [r3]
   33d6c:	and	r1, r1, #3
   33d70:	cmp	r1, #2
   33d74:	beq	33e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff88>
   33d78:	movw	r2, #1336	; 0x538
   33d7c:	movt	r2, #10
   33d80:	ldr	r0, [r2, #48]	; 0x30
   33d84:	cmp	r0, #0
   33d88:	movweq	r0, #34484	; 0x86b4
   33d8c:	movteq	r0, #5
   33d90:	beq	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33d94:	ldr	r2, [r2]
   33d98:	cmp	r2, #0
   33d9c:	movweq	r0, #43956	; 0xabb4
   33da0:	movteq	r0, #5
   33da4:	beq	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33da8:	cmp	r1, #1
   33dac:	ldrb	r2, [r3, #4]
   33db0:	beq	33e44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ffb8>
   33db4:	cmp	r1, #3
   33db8:	beq	33e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20010>
   33dbc:	tst	r2, #8
   33dc0:	movweq	r0, #60144	; 0xeaf0
   33dc4:	movteq	r0, #6
   33dc8:	beq	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33dcc:	ldrb	r2, [r3, #3]
   33dd0:	tst	r2, #4
   33dd4:	movweq	r0, #51048	; 0xc768
   33dd8:	movteq	r0, #6
   33ddc:	beq	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33de0:	ldrd	r4, [r3, #112]	; 0x70
   33de4:	mov	r2, #8
   33de8:	mov	r3, #0
   33dec:	movw	r0, #41936	; 0xa3d0
   33df0:	and	r2, r2, r4
   33df4:	and	r3, r3, r5
   33df8:	movw	r1, #51048	; 0xc768
   33dfc:	movt	r0, #6
   33e00:	orrs	ip, r2, r3
   33e04:	movt	r1, #6
   33e08:	moveq	r0, r1
   33e0c:	pop	{r4, r5}
   33e10:	bx	lr
   33e14:	movw	r1, #1336	; 0x538
   33e18:	movt	r1, #10
   33e1c:	movw	r2, #28672	; 0x7000
   33e20:	movw	r3, #22812	; 0x591c
   33e24:	ldr	r0, [r1, #12]
   33e28:	movt	r2, #5
   33e2c:	movt	r3, #5
   33e30:	cmp	r0, #0
   33e34:	pop	{r4, r5}
   33e38:	moveq	r0, r2
   33e3c:	movne	r0, r3
   33e40:	bx	lr
   33e44:	tst	r2, #8
   33e48:	movweq	r0, #6232	; 0x1858
   33e4c:	movteq	r0, #6
   33e50:	beq	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33e54:	ldrb	r2, [r3, #3]
   33e58:	tst	r2, #4
   33e5c:	movweq	r0, #62664	; 0xf4c8
   33e60:	movteq	r0, #5
   33e64:	beq	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33e68:	ldrd	r0, [r3, #112]	; 0x70
   33e6c:	mov	r2, #8
   33e70:	mov	r3, #0
   33e74:	movw	r4, #53544	; 0xd128
   33e78:	and	r2, r2, r0
   33e7c:	and	r3, r3, r1
   33e80:	movw	ip, #62664	; 0xf4c8
   33e84:	movt	r4, #5
   33e88:	orrs	r1, r2, r3
   33e8c:	movt	ip, #5
   33e90:	movne	r0, r4
   33e94:	moveq	r0, ip
   33e98:	b	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33e9c:	tst	r2, #8
   33ea0:	movweq	r0, #32916	; 0x8094
   33ea4:	movteq	r0, #6
   33ea8:	beq	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33eac:	ldrb	r2, [r3, #3]
   33eb0:	tst	r2, #4
   33eb4:	movweq	r0, #24372	; 0x5f34
   33eb8:	movteq	r0, #6
   33ebc:	beq	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33ec0:	ldrd	r0, [r3, #112]	; 0x70
   33ec4:	mov	r2, #8
   33ec8:	mov	r3, #0
   33ecc:	movw	r4, #15812	; 0x3dc4
   33ed0:	and	r2, r2, r0
   33ed4:	and	r3, r3, r1
   33ed8:	movw	ip, #24372	; 0x5f34
   33edc:	movt	r4, #6
   33ee0:	orrs	r1, r2, r3
   33ee4:	movt	ip, #6
   33ee8:	movne	r0, r4
   33eec:	moveq	r0, ip
   33ef0:	b	33e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ff80>
   33ef4:	push	{r3, r4, r5, lr}
   33ef8:	mov	r4, r0
   33efc:	ldrb	r3, [r0, #36]	; 0x24
   33f00:	tst	r3, #64	; 0x40
   33f04:	lsr	r5, r3, #7
   33f08:	orreq	r5, r5, #4
   33f0c:	tst	r3, #16
   33f10:	beq	33f24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20098>
   33f14:	ldr	r3, [r0, #16]
   33f18:	ldr	r3, [r3, #40]	; 0x28
   33f1c:	tst	r3, #2048	; 0x800
   33f20:	bne	33f54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x200c8>
   33f24:	cmp	r5, #0
   33f28:	beq	33f3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x200b0>
   33f2c:	ldr	r0, [r4, #16]
   33f30:	ldr	r3, [r0, #40]	; 0x28
   33f34:	tst	r3, #2048	; 0x800
   33f38:	bne	33f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x200b8>
   33f3c:	mov	r0, #0
   33f40:	pop	{r3, r4, r5, pc}
   33f44:	mov	r1, r5
   33f48:	bl	13a3c <bfd_elf_set_dyn_lib_class@plt>
   33f4c:	mov	r0, #0
   33f50:	pop	{r3, r4, r5, pc}
   33f54:	mov	r2, #5
   33f58:	movw	r1, #4196	; 0x1064
   33f5c:	mov	r0, #0
   33f60:	movt	r1, #7
   33f64:	bl	13688 <dcgettext@plt>
   33f68:	ldr	r1, [r4, #16]
   33f6c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   33f70:	b	33f24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20098>
   33f74:	push	{r4, lr}
   33f78:	mov	r2, #5
   33f7c:	mov	r4, r0
   33f80:	movw	r1, #4248	; 0x1098
   33f84:	mov	r0, #0
   33f88:	movt	r1, #7
   33f8c:	bl	13688 <dcgettext@plt>
   33f90:	mov	r1, #1
   33f94:	mov	r2, r0
   33f98:	mov	r0, r4
   33f9c:	bl	13b74 <__fprintf_chk@plt>
   33fa0:	mov	r2, #5
   33fa4:	movw	r1, #4324	; 0x10e4
   33fa8:	mov	r0, #0
   33fac:	movt	r1, #7
   33fb0:	bl	13688 <dcgettext@plt>
   33fb4:	mov	r1, #1
   33fb8:	mov	r2, r0
   33fbc:	mov	r0, r4
   33fc0:	bl	13b74 <__fprintf_chk@plt>
   33fc4:	mov	r2, #5
   33fc8:	movw	r1, #4380	; 0x111c
   33fcc:	mov	r0, #0
   33fd0:	movt	r1, #7
   33fd4:	bl	13688 <dcgettext@plt>
   33fd8:	mov	r1, #1
   33fdc:	mov	r2, r0
   33fe0:	mov	r0, r4
   33fe4:	bl	13b74 <__fprintf_chk@plt>
   33fe8:	mov	r2, #5
   33fec:	movw	r1, #4452	; 0x1164
   33ff0:	mov	r0, #0
   33ff4:	movt	r1, #7
   33ff8:	bl	13688 <dcgettext@plt>
   33ffc:	mov	r1, #1
   34000:	mov	r2, r0
   34004:	mov	r0, r4
   34008:	bl	13b74 <__fprintf_chk@plt>
   3400c:	mov	r2, #5
   34010:	movw	r1, #4524	; 0x11ac
   34014:	mov	r0, #0
   34018:	movt	r1, #7
   3401c:	bl	13688 <dcgettext@plt>
   34020:	mov	r1, #1
   34024:	mov	r2, r0
   34028:	mov	r0, r4
   3402c:	bl	13b74 <__fprintf_chk@plt>
   34030:	mov	r2, #5
   34034:	movw	r1, #4592	; 0x11f0
   34038:	mov	r0, #0
   3403c:	movt	r1, #7
   34040:	bl	13688 <dcgettext@plt>
   34044:	mov	r1, #1
   34048:	mov	r2, r0
   3404c:	mov	r0, r4
   34050:	bl	13b74 <__fprintf_chk@plt>
   34054:	mov	r2, #5
   34058:	movw	r1, #4664	; 0x1238
   3405c:	mov	r0, #0
   34060:	movt	r1, #7
   34064:	bl	13688 <dcgettext@plt>
   34068:	mov	r1, #1
   3406c:	mov	r2, r0
   34070:	mov	r0, r4
   34074:	bl	13b74 <__fprintf_chk@plt>
   34078:	mov	r2, #5
   3407c:	movw	r1, #4748	; 0x128c
   34080:	mov	r0, #0
   34084:	movt	r1, #7
   34088:	bl	13688 <dcgettext@plt>
   3408c:	mov	r1, #1
   34090:	mov	r2, r0
   34094:	mov	r0, r4
   34098:	bl	13b74 <__fprintf_chk@plt>
   3409c:	mov	r2, #5
   340a0:	movw	r1, #4812	; 0x12cc
   340a4:	mov	r0, #0
   340a8:	movt	r1, #7
   340ac:	bl	13688 <dcgettext@plt>
   340b0:	mov	r1, #1
   340b4:	mov	r2, r0
   340b8:	mov	r0, r4
   340bc:	bl	13b74 <__fprintf_chk@plt>
   340c0:	mov	r2, #5
   340c4:	movw	r1, #4884	; 0x1314
   340c8:	mov	r0, #0
   340cc:	movt	r1, #7
   340d0:	bl	13688 <dcgettext@plt>
   340d4:	mov	r1, #1
   340d8:	mov	r2, r0
   340dc:	mov	r0, r4
   340e0:	bl	13b74 <__fprintf_chk@plt>
   340e4:	mov	r2, #5
   340e8:	movw	r1, #4960	; 0x1360
   340ec:	mov	r0, #0
   340f0:	movt	r1, #7
   340f4:	bl	13688 <dcgettext@plt>
   340f8:	mov	r1, #1
   340fc:	mov	r2, r0
   34100:	mov	r0, r4
   34104:	bl	13b74 <__fprintf_chk@plt>
   34108:	mov	r2, #5
   3410c:	movw	r1, #5080	; 0x13d8
   34110:	mov	r0, #0
   34114:	movt	r1, #7
   34118:	bl	13688 <dcgettext@plt>
   3411c:	mov	r1, #1
   34120:	mov	r2, r0
   34124:	mov	r0, r4
   34128:	bl	13b74 <__fprintf_chk@plt>
   3412c:	mov	r2, #5
   34130:	movw	r1, #5200	; 0x1450
   34134:	mov	r0, #0
   34138:	movt	r1, #7
   3413c:	bl	13688 <dcgettext@plt>
   34140:	mov	r1, #1
   34144:	mov	r2, r0
   34148:	mov	r0, r4
   3414c:	bl	13b74 <__fprintf_chk@plt>
   34150:	mov	r2, #5
   34154:	movw	r1, #5272	; 0x1498
   34158:	mov	r0, #0
   3415c:	movt	r1, #7
   34160:	bl	13688 <dcgettext@plt>
   34164:	mov	r1, #1
   34168:	mov	r2, r0
   3416c:	mov	r0, r4
   34170:	bl	13b74 <__fprintf_chk@plt>
   34174:	mov	r2, #5
   34178:	movw	r1, #5400	; 0x1518
   3417c:	mov	r0, #0
   34180:	movt	r1, #7
   34184:	bl	13688 <dcgettext@plt>
   34188:	mov	r1, #1
   3418c:	mov	r2, r0
   34190:	mov	r0, r4
   34194:	bl	13b74 <__fprintf_chk@plt>
   34198:	mov	r2, #5
   3419c:	movw	r1, #5988	; 0x1764
   341a0:	mov	r0, #0
   341a4:	movt	r1, #7
   341a8:	bl	13688 <dcgettext@plt>
   341ac:	mov	r1, #1
   341b0:	mov	r2, r0
   341b4:	mov	r0, r4
   341b8:	bl	13b74 <__fprintf_chk@plt>
   341bc:	mov	r2, #5
   341c0:	movw	r1, #6072	; 0x17b8
   341c4:	mov	r0, #0
   341c8:	movt	r1, #7
   341cc:	bl	13688 <dcgettext@plt>
   341d0:	mov	r1, #1
   341d4:	mov	r2, r0
   341d8:	mov	r0, r4
   341dc:	bl	13b74 <__fprintf_chk@plt>
   341e0:	mov	r2, #5
   341e4:	movw	r1, #6136	; 0x17f8
   341e8:	mov	r0, #0
   341ec:	movt	r1, #7
   341f0:	bl	13688 <dcgettext@plt>
   341f4:	mov	r1, #1
   341f8:	mov	r2, r0
   341fc:	mov	r0, r4
   34200:	pop	{r4, lr}
   34204:	b	13b74 <__fprintf_chk@plt>
   34208:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3420c:	mov	r9, r0
   34210:	ldr	r4, [r0]
   34214:	sub	sp, sp, #16
   34218:	mov	r7, r1
   3421c:	cmp	r4, #0
   34220:	beq	342ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20460>
   34224:	mov	r0, r4
   34228:	movw	r8, #1336	; 0x538
   3422c:	bl	13a24 <strlen@plt>
   34230:	movt	r8, #10
   34234:	mov	sl, r0
   34238:	mov	r0, r7
   3423c:	bl	13a24 <strlen@plt>
   34240:	ldrb	r6, [r8, #72]	; 0x48
   34244:	mov	r5, r0
   34248:	b	34254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x203c8>
   3424c:	adds	r4, r0, #1
   34250:	beq	34294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20408>
   34254:	mov	r1, r4
   34258:	mov	r0, r7
   3425c:	mov	r2, r5
   34260:	bl	13e08 <strncmp@plt>
   34264:	mov	r1, r6
   34268:	cmp	r0, #0
   3426c:	mov	r0, r4
   34270:	bne	34288 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x203fc>
   34274:	ldrb	r3, [r4, r5]
   34278:	cmp	r3, #0
   3427c:	beq	342dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20450>
   34280:	cmp	r3, r6
   34284:	beq	342dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20450>
   34288:	bl	13a48 <strchr@plt>
   3428c:	cmp	r0, #0
   34290:	bne	3424c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x203c0>
   34294:	add	r0, sl, r5
   34298:	add	r0, r0, #2
   3429c:	bl	137b4 <xmalloc@plt>
   342a0:	ldr	ip, [r9]
   342a4:	ldrb	r2, [r8, #72]	; 0x48
   342a8:	mov	r1, #1
   342ac:	movw	r3, #580	; 0x244
   342b0:	str	r7, [sp, #8]
   342b4:	movt	r3, #5
   342b8:	str	ip, [sp]
   342bc:	str	r2, [sp, #4]
   342c0:	mvn	r2, #0
   342c4:	mov	r4, r0
   342c8:	bl	13acc <__sprintf_chk@plt>
   342cc:	ldr	r0, [r9]
   342d0:	bl	13574 <free@plt>
   342d4:	str	r4, [r9]
   342d8:	b	342e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20458>
   342dc:	cmp	r4, #0
   342e0:	beq	34294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20408>
   342e4:	add	sp, sp, #16
   342e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   342ec:	mov	r0, r1
   342f0:	bl	137e4 <xstrdup@plt>
   342f4:	str	r0, [r9]
   342f8:	b	342e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20458>
   342fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   34300:	movw	r8, #63248	; 0xf710
   34304:	movt	r8, #9
   34308:	sub	sp, sp, #8
   3430c:	movw	r2, #313	; 0x139
   34310:	cmp	r0, r2
   34314:	ldr	r3, [r8]
   34318:	str	r3, [sp, #4]
   3431c:	beq	34c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20de8>
   34320:	ble	343f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20564>
   34324:	cmp	r0, #400	; 0x190
   34328:	beq	34a08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b7c>
   3432c:	ble	34430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x205a4>
   34330:	cmp	r0, #404	; 0x194
   34334:	beq	34c8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e00>
   34338:	ble	344a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2061c>
   3433c:	movw	r3, #406	; 0x196
   34340:	cmp	r0, r3
   34344:	beq	34c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20d7c>
   34348:	blt	34b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20cf4>
   3434c:	add	r3, r3, #1
   34350:	cmp	r0, r3
   34354:	beq	346c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2083c>
   34358:	cmp	r0, #408	; 0x198
   3435c:	bne	34428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2059c>
   34360:	movw	r4, #64864	; 0xfd60
   34364:	movt	r4, #9
   34368:	movw	r1, #3900	; 0xf3c
   3436c:	movt	r1, #5
   34370:	ldr	r5, [r4]
   34374:	mov	r0, r5
   34378:	bl	13748 <strcasecmp@plt>
   3437c:	cmp	r0, #0
   34380:	beq	34d24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e98>
   34384:	movw	r1, #6216	; 0x1848
   34388:	mov	r0, r5
   3438c:	movt	r1, #7
   34390:	bl	13748 <strcasecmp@plt>
   34394:	cmp	r0, #0
   34398:	beq	343d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2054c>
   3439c:	movw	r1, #6224	; 0x1850
   343a0:	mov	r0, r5
   343a4:	movt	r1, #7
   343a8:	bl	13748 <strcasecmp@plt>
   343ac:	cmp	r0, #0
   343b0:	beq	34e28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f9c>
   343b4:	mov	r0, r5
   343b8:	movw	r1, #6236	; 0x185c
   343bc:	movt	r1, #7
   343c0:	bl	13748 <strcasecmp@plt>
   343c4:	cmp	r0, #0
   343c8:	movwne	r1, #6248	; 0x1868
   343cc:	movne	r0, #0
   343d0:	movtne	r1, #7
   343d4:	bne	34a9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c10>
   343d8:	movw	r3, #1088	; 0x440
   343dc:	movt	r3, #10
   343e0:	mov	r2, #5
   343e4:	mov	r1, #1
   343e8:	str	r2, [r3, #12]
   343ec:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   343f0:	movw	r3, #305	; 0x131
   343f4:	cmp	r0, r3
   343f8:	beq	34ca4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e18>
   343fc:	bgt	3446c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x205e0>
   34400:	movw	r3, #301	; 0x12d
   34404:	cmp	r0, r3
   34408:	beq	349e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b5c>
   3440c:	bgt	34618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2078c>
   34410:	cmp	r0, #112	; 0x70
   34414:	beq	34540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   34418:	cmp	r0, #122	; 0x7a
   3441c:	beq	346e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20858>
   34420:	cmp	r0, #80	; 0x50
   34424:	beq	34cdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e50>
   34428:	mov	r1, #0
   3442c:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34430:	movw	r3, #317	; 0x13d
   34434:	cmp	r0, r3
   34438:	beq	34a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b98>
   3443c:	bgt	3458c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20700>
   34440:	movw	r3, #315	; 0x13b
   34444:	cmp	r0, r3
   34448:	beq	34cc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e38>
   3444c:	cmp	r0, #316	; 0x13c
   34450:	bge	34644 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x207b8>
   34454:	movw	r3, #62536	; 0xf448
   34458:	movt	r3, #9
   3445c:	mov	r2, #1
   34460:	mov	r1, r2
   34464:	str	r2, [r3, #16]
   34468:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   3446c:	movw	r3, #309	; 0x135
   34470:	cmp	r0, r3
   34474:	beq	34ab0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c24>
   34478:	bgt	34560 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206d4>
   3447c:	movw	r3, #307	; 0x133
   34480:	cmp	r0, r3
   34484:	beq	34b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20cdc>
   34488:	cmp	r0, #308	; 0x134
   3448c:	bge	3465c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x207d0>
   34490:	movw	r3, #360	; 0x168
   34494:	movt	r3, #10
   34498:	mov	r2, #1
   3449c:	mov	r1, r2
   344a0:	str	r2, [r3, #32]
   344a4:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   344a8:	movw	r3, #402	; 0x192
   344ac:	cmp	r0, r3
   344b0:	beq	34b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c9c>
   344b4:	bgt	34a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20bb0>
   344b8:	movw	r3, #1088	; 0x440
   344bc:	movt	r3, #10
   344c0:	mov	r1, #1
   344c4:	ldrb	r2, [r3, #4]
   344c8:	orr	r2, r2, #32
   344cc:	strb	r2, [r3, #4]
   344d0:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   344d4:	add	r0, r5, #11
   344d8:	mov	r1, sp
   344dc:	mov	r2, r6
   344e0:	movw	r5, #1088	; 0x440
   344e4:	bl	13a18 <strtoul@plt>
   344e8:	ldr	r3, [sp]
   344ec:	movt	r5, #10
   344f0:	str	r6, [r5, #20]
   344f4:	str	r0, [r5, #16]
   344f8:	ldrb	r1, [r3]
   344fc:	cmp	r1, #0
   34500:	moveq	r2, r0
   34504:	moveq	r3, r1
   34508:	beq	34530 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206a4>
   3450c:	mov	r2, #5
   34510:	mov	r0, r6
   34514:	movw	r1, #6496	; 0x1960
   34518:	movt	r1, #7
   3451c:	bl	13688 <dcgettext@plt>
   34520:	ldr	r1, [r4]
   34524:	add	r1, r1, #11
   34528:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3452c:	ldrd	r2, [r5, #16]
   34530:	orrs	r1, r2, r3
   34534:	mvneq	r2, #0
   34538:	mvneq	r3, #0
   3453c:	strdeq	r2, [r5, #16]
   34540:	mov	r1, #1
   34544:	ldr	r2, [sp, #4]
   34548:	mov	r0, r1
   3454c:	ldr	r3, [r8]
   34550:	cmp	r2, r3
   34554:	bne	34f70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210e4>
   34558:	add	sp, sp, #8
   3455c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   34560:	movw	r3, #311	; 0x137
   34564:	cmp	r0, r3
   34568:	beq	34b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c84>
   3456c:	cmp	r0, #312	; 0x138
   34570:	bge	34a5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20bd0>
   34574:	movw	r3, #360	; 0x168
   34578:	movt	r3, #10
   3457c:	mov	r2, #1
   34580:	mov	r1, r2
   34584:	str	r2, [r3, #56]	; 0x38
   34588:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   3458c:	movw	r3, #319	; 0x13f
   34590:	cmp	r0, r3
   34594:	beq	34b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20cd0>
   34598:	blt	34ac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c3c>
   3459c:	cmp	r0, #320	; 0x140
   345a0:	bne	34428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2059c>
   345a4:	movw	r4, #64864	; 0xfd60
   345a8:	movt	r4, #9
   345ac:	ldr	r5, [r4]
   345b0:	cmp	r5, #0
   345b4:	beq	34da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f14>
   345b8:	movw	r1, #3900	; 0xf3c
   345bc:	mov	r0, r5
   345c0:	movt	r1, #5
   345c4:	bl	13490 <strcmp@plt>
   345c8:	cmp	r0, #0
   345cc:	beq	34d8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f00>
   345d0:	movw	r1, #62516	; 0xf434
   345d4:	mov	r0, r5
   345d8:	movt	r1, #4
   345dc:	bl	13490 <strcmp@plt>
   345e0:	cmp	r0, #0
   345e4:	beq	34da0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f14>
   345e8:	ldrb	r3, [r5]
   345ec:	cmp	r3, #97	; 0x61
   345f0:	beq	34dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f60>
   345f4:	mov	r2, #5
   345f8:	movw	r1, #6844	; 0x1abc
   345fc:	mov	r0, #0
   34600:	movt	r1, #7
   34604:	bl	13688 <dcgettext@plt>
   34608:	ldr	r1, [r4]
   3460c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   34610:	mov	r1, #1
   34614:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34618:	movw	r3, #303	; 0x12f
   3461c:	cmp	r0, r3
   34620:	beq	34af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c6c>
   34624:	cmp	r0, #304	; 0x130
   34628:	bge	34ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c54>
   3462c:	movw	r3, #360	; 0x168
   34630:	movt	r3, #10
   34634:	mov	r2, #1
   34638:	mov	r1, r2
   3463c:	str	r2, [r3, #24]
   34640:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34644:	movw	r3, #62536	; 0xf448
   34648:	movt	r3, #9
   3464c:	mov	r2, #0
   34650:	mov	r1, #1
   34654:	str	r2, [r3, #20]
   34658:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   3465c:	movw	r4, #64864	; 0xfd60
   34660:	movt	r4, #9
   34664:	movw	r1, #3900	; 0xf3c
   34668:	movt	r1, #5
   3466c:	ldr	r5, [r4]
   34670:	mov	r0, r5
   34674:	bl	13490 <strcmp@plt>
   34678:	cmp	r0, #0
   3467c:	beq	34cf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e6c>
   34680:	movw	r1, #6792	; 0x1a88
   34684:	mov	r0, r5
   34688:	movt	r1, #7
   3468c:	bl	13490 <strcmp@plt>
   34690:	cmp	r0, #0
   34694:	beq	34db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f2c>
   34698:	mov	r0, r5
   3469c:	movw	r1, #6800	; 0x1a90
   346a0:	movt	r1, #7
   346a4:	bl	13490 <strcmp@plt>
   346a8:	cmp	r0, #0
   346ac:	bne	34eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2102c>
   346b0:	movw	r3, #360	; 0x168
   346b4:	movt	r3, #10
   346b8:	mov	r2, #3
   346bc:	mov	r1, #1
   346c0:	str	r2, [r3, #40]	; 0x28
   346c4:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   346c8:	movw	r3, #64864	; 0xfd60
   346cc:	movt	r3, #9
   346d0:	ldr	r0, [pc, #2812]	; 351d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21348>
   346d4:	ldr	r1, [r3]
   346d8:	bl	34208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2037c>
   346dc:	mov	r1, #1
   346e0:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   346e4:	movw	r4, #64864	; 0xfd60
   346e8:	movt	r4, #9
   346ec:	movw	r1, #6352	; 0x18d0
   346f0:	movt	r1, #7
   346f4:	ldr	r5, [r4]
   346f8:	mov	r0, r5
   346fc:	bl	13490 <strcmp@plt>
   34700:	cmp	r0, #0
   34704:	beq	34d38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20eac>
   34708:	movw	r1, #6360	; 0x18d8
   3470c:	mov	r0, r5
   34710:	movt	r1, #7
   34714:	bl	13490 <strcmp@plt>
   34718:	cmp	r0, #0
   3471c:	beq	34dd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20f44>
   34720:	mov	r2, #14
   34724:	movw	r1, #6368	; 0x18e0
   34728:	mov	r0, r5
   3472c:	movt	r1, #7
   34730:	bl	13e08 <strncmp@plt>
   34734:	subs	r2, r0, #0
   34738:	beq	34e40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20fb4>
   3473c:	mov	r2, #17
   34740:	movw	r1, #6424	; 0x1918
   34744:	mov	r0, r5
   34748:	movt	r1, #7
   3474c:	bl	13e08 <strncmp@plt>
   34750:	subs	r2, r0, #0
   34754:	beq	34ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2103c>
   34758:	movw	r1, #6484	; 0x1954
   3475c:	mov	r0, r5
   34760:	movt	r1, #7
   34764:	mov	r2, #11
   34768:	bl	13e08 <strncmp@plt>
   3476c:	subs	r6, r0, #0
   34770:	beq	344d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20648>
   34774:	movw	r1, #6528	; 0x1980
   34778:	mov	r0, r5
   3477c:	movt	r1, #7
   34780:	bl	13490 <strcmp@plt>
   34784:	cmp	r0, #0
   34788:	beq	34f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210a4>
   3478c:	movw	r1, #6540	; 0x198c
   34790:	mov	r0, r5
   34794:	movt	r1, #7
   34798:	bl	13490 <strcmp@plt>
   3479c:	cmp	r0, #0
   347a0:	beq	34f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210c4>
   347a4:	movw	r1, #6552	; 0x1998
   347a8:	mov	r0, r5
   347ac:	movt	r1, #7
   347b0:	bl	13490 <strcmp@plt>
   347b4:	cmp	r0, #0
   347b8:	beq	34f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210e8>
   347bc:	movw	r1, #29176	; 0x71f8
   347c0:	mov	r0, r5
   347c4:	movt	r1, #4
   347c8:	bl	13490 <strcmp@plt>
   347cc:	cmp	r0, #0
   347d0:	beq	34f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21110>
   347d4:	movw	r1, #6564	; 0x19a4
   347d8:	mov	r0, r5
   347dc:	movt	r1, #7
   347e0:	bl	13490 <strcmp@plt>
   347e4:	cmp	r0, #0
   347e8:	beq	34fac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21120>
   347ec:	movw	r1, #6576	; 0x19b0
   347f0:	mov	r0, r5
   347f4:	movt	r1, #7
   347f8:	bl	13490 <strcmp@plt>
   347fc:	cmp	r0, #0
   34800:	beq	34fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21130>
   34804:	movw	r1, #6588	; 0x19bc
   34808:	mov	r0, r5
   3480c:	movt	r1, #7
   34810:	bl	13490 <strcmp@plt>
   34814:	cmp	r0, #0
   34818:	beq	34fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21140>
   3481c:	movw	r1, #6600	; 0x19c8
   34820:	mov	r0, r5
   34824:	movt	r1, #7
   34828:	bl	13490 <strcmp@plt>
   3482c:	cmp	r0, #0
   34830:	beq	3501c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21190>
   34834:	movw	r1, #6616	; 0x19d8
   34838:	mov	r0, r5
   3483c:	movt	r1, #7
   34840:	bl	13490 <strcmp@plt>
   34844:	cmp	r0, #0
   34848:	beq	35078 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211ec>
   3484c:	movw	r1, #6628	; 0x19e4
   34850:	mov	r0, r5
   34854:	movt	r1, #7
   34858:	bl	13490 <strcmp@plt>
   3485c:	cmp	r0, #0
   34860:	beq	35068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211dc>
   34864:	movw	r1, #6640	; 0x19f0
   34868:	mov	r0, r5
   3486c:	movt	r1, #7
   34870:	bl	13490 <strcmp@plt>
   34874:	cmp	r0, #0
   34878:	beq	35088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211fc>
   3487c:	ldrb	r3, [r5]
   34880:	cmp	r3, #110	; 0x6e
   34884:	bne	348ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a20>
   34888:	ldrb	r3, [r5, #1]
   3488c:	cmp	r3, #111	; 0x6f
   34890:	bne	348ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a20>
   34894:	ldrb	r3, [r5, #2]
   34898:	cmp	r3, #119	; 0x77
   3489c:	bne	348ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20a20>
   348a0:	ldrb	r3, [r5, #3]
   348a4:	cmp	r3, #0
   348a8:	beq	34fdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21150>
   348ac:	movw	r1, #6648	; 0x19f8
   348b0:	mov	r0, r5
   348b4:	movt	r1, #7
   348b8:	bl	13490 <strcmp@plt>
   348bc:	cmp	r0, #0
   348c0:	beq	35194 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21308>
   348c4:	movw	r1, #6656	; 0x1a00
   348c8:	mov	r0, r5
   348cc:	movt	r1, #7
   348d0:	bl	13490 <strcmp@plt>
   348d4:	cmp	r0, #0
   348d8:	beq	35154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x212c8>
   348dc:	movw	r1, #6664	; 0x1a08
   348e0:	mov	r0, r5
   348e4:	movt	r1, #7
   348e8:	bl	13490 <strcmp@plt>
   348ec:	cmp	r0, #0
   348f0:	beq	35138 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x212ac>
   348f4:	movw	r1, #6676	; 0x1a14
   348f8:	mov	r0, r5
   348fc:	movt	r1, #7
   34900:	bl	13490 <strcmp@plt>
   34904:	cmp	r0, #0
   34908:	beq	3511c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21290>
   3490c:	movw	r1, #6688	; 0x1a20
   34910:	mov	r0, r5
   34914:	movt	r1, #7
   34918:	bl	13490 <strcmp@plt>
   3491c:	cmp	r0, #0
   34920:	beq	35100 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21274>
   34924:	movw	r1, #6700	; 0x1a2c
   34928:	mov	r0, r5
   3492c:	movt	r1, #7
   34930:	bl	13490 <strcmp@plt>
   34934:	cmp	r0, #0
   34938:	beq	350e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21258>
   3493c:	movw	r1, #6708	; 0x1a34
   34940:	mov	r0, r5
   34944:	movt	r1, #7
   34948:	bl	13490 <strcmp@plt>
   3494c:	cmp	r0, #0
   34950:	beq	350c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2123c>
   34954:	movw	r1, #6716	; 0x1a3c
   34958:	mov	r0, r5
   3495c:	movt	r1, #7
   34960:	bl	13490 <strcmp@plt>
   34964:	cmp	r0, #0
   34968:	beq	350a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2121c>
   3496c:	movw	r1, #6724	; 0x1a44
   34970:	mov	r0, r5
   34974:	movt	r1, #7
   34978:	bl	13490 <strcmp@plt>
   3497c:	cmp	r0, #0
   34980:	beq	35048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211bc>
   34984:	movw	r1, #6736	; 0x1a50
   34988:	mov	r0, r5
   3498c:	movt	r1, #7
   34990:	bl	13490 <strcmp@plt>
   34994:	cmp	r0, #0
   34998:	beq	3502c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x211a0>
   3499c:	movw	r1, #6744	; 0x1a58
   349a0:	mov	r0, r5
   349a4:	movt	r1, #7
   349a8:	bl	13490 <strcmp@plt>
   349ac:	cmp	r0, #0
   349b0:	beq	349cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20b40>
   349b4:	mov	r0, r5
   349b8:	movw	r1, #6752	; 0x1a60
   349bc:	movt	r1, #7
   349c0:	bl	13490 <strcmp@plt>
   349c4:	cmp	r0, #0
   349c8:	bne	35098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2120c>
   349cc:	movw	r3, #1088	; 0x440
   349d0:	movt	r3, #10
   349d4:	mov	r1, #1
   349d8:	ldrb	r2, [r3, #3]
   349dc:	bfc	r2, #6, #1
   349e0:	strb	r2, [r3, #3]
   349e4:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   349e8:	movw	r2, #64864	; 0xfd60
   349ec:	movt	r2, #9
   349f0:	movw	r3, #360	; 0x168
   349f4:	movt	r3, #10
   349f8:	ldr	r2, [r2]
   349fc:	mov	r1, #1
   34a00:	str	r2, [r3, #20]
   34a04:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34a08:	movw	r3, #1088	; 0x440
   34a0c:	movt	r3, #10
   34a10:	mov	r1, #1
   34a14:	ldrb	r2, [r3, #4]
   34a18:	bfc	r2, #5, #1
   34a1c:	strb	r2, [r3, #4]
   34a20:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34a24:	movw	r3, #62536	; 0xf448
   34a28:	movt	r3, #9
   34a2c:	mov	r2, #1
   34a30:	mov	r1, r2
   34a34:	str	r2, [r3, #24]
   34a38:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34a3c:	movw	r3, #1088	; 0x440
   34a40:	movt	r3, #10
   34a44:	mov	r0, #1
   34a48:	ldrb	r2, [r3, #3]
   34a4c:	mov	r1, r0
   34a50:	bfi	r2, r0, #3, #2
   34a54:	strb	r2, [r3, #3]
   34a58:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34a5c:	movw	r4, #64864	; 0xfd60
   34a60:	movt	r4, #9
   34a64:	mov	r2, #0
   34a68:	mov	r1, sp
   34a6c:	ldr	r0, [r4]
   34a70:	bl	13478 <bfd_scan_vma@plt>
   34a74:	ldr	r2, [sp]
   34a78:	movw	r3, #62536	; 0xf448
   34a7c:	movt	r3, #9
   34a80:	ldrb	r2, [r2]
   34a84:	cmp	r2, #0
   34a88:	strd	r0, [r3, #8]
   34a8c:	beq	34540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   34a90:	movw	r1, #62704	; 0xf4f0
   34a94:	movt	r1, #4
   34a98:	mov	r0, #0
   34a9c:	mov	r2, #5
   34aa0:	bl	13688 <dcgettext@plt>
   34aa4:	ldr	r1, [r4]
   34aa8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   34aac:	b	34540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   34ab0:	movw	r3, #360	; 0x168
   34ab4:	movt	r3, #10
   34ab8:	mov	r2, #1
   34abc:	mov	r1, r2
   34ac0:	str	r2, [r3, #48]	; 0x30
   34ac4:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34ac8:	movw	r3, #62536	; 0xf448
   34acc:	movt	r3, #9
   34ad0:	mov	r2, #0
   34ad4:	mov	r1, #1
   34ad8:	str	r2, [r3, #24]
   34adc:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34ae0:	movw	r3, #360	; 0x168
   34ae4:	movt	r3, #10
   34ae8:	mov	r2, #0
   34aec:	mov	r1, #1
   34af0:	str	r2, [r3, #28]
   34af4:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34af8:	movw	r3, #360	; 0x168
   34afc:	movt	r3, #10
   34b00:	mov	r2, #1
   34b04:	mov	r1, r2
   34b08:	str	r2, [r3, #28]
   34b0c:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34b10:	movw	r3, #360	; 0x168
   34b14:	movt	r3, #10
   34b18:	mov	r2, #2
   34b1c:	mov	r1, #1
   34b20:	str	r2, [r3, #32]
   34b24:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34b28:	movw	r0, #1088	; 0x440
   34b2c:	movt	r0, #10
   34b30:	mov	r4, #4
   34b34:	mov	r5, #0
   34b38:	ldrd	r2, [r0, #120]	; 0x78
   34b3c:	mov	r1, #1
   34b40:	ldrb	ip, [r0, #2]
   34b44:	orr	r3, r3, r5
   34b48:	orr	r2, r2, r4
   34b4c:	strd	r2, [r0, #120]	; 0x78
   34b50:	orr	r3, ip, #120	; 0x78
   34b54:	strb	r3, [r0, #2]
   34b58:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34b5c:	bl	137fc <bfd_elf32_arm_use_long_plt@plt>
   34b60:	mov	r1, #1
   34b64:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34b68:	movw	r3, #360	; 0x168
   34b6c:	movt	r3, #10
   34b70:	mov	r2, #1
   34b74:	mov	r1, r2
   34b78:	str	r2, [r3, #36]	; 0x24
   34b7c:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34b80:	movw	r4, #64864	; 0xfd60
   34b84:	movt	r4, #9
   34b88:	movw	r5, #1088	; 0x440
   34b8c:	movt	r5, #10
   34b90:	ldr	r6, [r4]
   34b94:	movw	r1, #6304	; 0x18a0
   34b98:	ldrb	r2, [r5, #3]
   34b9c:	movt	r1, #7
   34ba0:	ldrb	r3, [r5, #4]
   34ba4:	mov	r0, r6
   34ba8:	bfc	r2, #7, #1
   34bac:	bfc	r3, #0, #1
   34bb0:	strb	r2, [r5, #3]
   34bb4:	strb	r3, [r5, #4]
   34bb8:	bl	13490 <strcmp@plt>
   34bbc:	cmp	r0, #0
   34bc0:	beq	34d10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20e84>
   34bc4:	ldrb	r3, [r6]
   34bc8:	cmp	r3, #103	; 0x67
   34bcc:	bne	34d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ec8>
   34bd0:	ldrb	r3, [r6, #1]
   34bd4:	cmp	r3, #110	; 0x6e
   34bd8:	bne	34d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ec8>
   34bdc:	ldrb	r3, [r6, #2]
   34be0:	cmp	r3, #117	; 0x75
   34be4:	bne	34d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ec8>
   34be8:	ldrb	r3, [r6, #3]
   34bec:	cmp	r3, #0
   34bf0:	bne	34d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ec8>
   34bf4:	ldrb	r3, [r5, #4]
   34bf8:	mov	r1, #1
   34bfc:	orr	r3, r3, r1
   34c00:	strb	r3, [r5, #4]
   34c04:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34c08:	movw	r4, #360	; 0x168
   34c0c:	movt	r4, #10
   34c10:	ldr	r0, [r4, #8]
   34c14:	cmp	r0, #0
   34c18:	beq	34c28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20d9c>
   34c1c:	bl	13574 <free@plt>
   34c20:	mov	r3, #0
   34c24:	str	r3, [r4, #8]
   34c28:	movw	r3, #64864	; 0xfd60
   34c2c:	movt	r3, #9
   34c30:	ldr	r5, [r3]
   34c34:	cmp	r5, #0
   34c38:	movweq	r5, #22268	; 0x56fc
   34c3c:	movteq	r5, #5
   34c40:	streq	r5, [r3]
   34c44:	beq	34c60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20dd4>
   34c48:	movw	r1, #3900	; 0xf3c
   34c4c:	mov	r0, r5
   34c50:	movt	r1, #5
   34c54:	bl	13490 <strcmp@plt>
   34c58:	cmp	r0, #0
   34c5c:	beq	34540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   34c60:	mov	r0, r5
   34c64:	bl	137e4 <xstrdup@plt>
   34c68:	mov	r1, #1
   34c6c:	str	r0, [r4, #8]
   34c70:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34c74:	movw	r3, #360	; 0x168
   34c78:	movt	r3, #10
   34c7c:	mov	r2, #1
   34c80:	mov	r1, r2
   34c84:	str	r2, [r3, #52]	; 0x34
   34c88:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34c8c:	movw	r3, #64864	; 0xfd60
   34c90:	movt	r3, #9
   34c94:	ldr	r0, [r3]
   34c98:	bl	23714 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf888>
   34c9c:	mov	r1, #1
   34ca0:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34ca4:	movw	r2, #64864	; 0xfd60
   34ca8:	movt	r2, #9
   34cac:	movw	r3, #62536	; 0xf448
   34cb0:	movt	r3, #9
   34cb4:	ldr	r2, [r2]
   34cb8:	mov	r1, #1
   34cbc:	str	r2, [r3]
   34cc0:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34cc4:	movw	r3, #62536	; 0xf448
   34cc8:	movt	r3, #9
   34ccc:	mov	r2, #0
   34cd0:	mov	r1, #1
   34cd4:	str	r2, [r3, #16]
   34cd8:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34cdc:	movw	r3, #64864	; 0xfd60
   34ce0:	movt	r3, #9
   34ce4:	ldr	r0, [pc, #1260]	; 351d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2134c>
   34ce8:	ldr	r1, [r3]
   34cec:	bl	34208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2037c>
   34cf0:	mov	r1, #1
   34cf4:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34cf8:	movw	r3, #360	; 0x168
   34cfc:	movt	r3, #10
   34d00:	mov	r2, #1
   34d04:	mov	r1, r2
   34d08:	str	r2, [r3, #40]	; 0x28
   34d0c:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34d10:	ldrb	r3, [r5, #3]
   34d14:	mov	r1, #1
   34d18:	orr	r3, r3, #128	; 0x80
   34d1c:	strb	r3, [r5, #3]
   34d20:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34d24:	movw	r3, #1088	; 0x440
   34d28:	movt	r3, #10
   34d2c:	mov	r1, #1
   34d30:	str	r0, [r3, #12]
   34d34:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34d38:	movw	r3, #1088	; 0x440
   34d3c:	movt	r3, #10
   34d40:	mov	r1, #1
   34d44:	ldrb	r2, [r3, #2]
   34d48:	orr	r2, r2, #24
   34d4c:	strb	r2, [r3, #2]
   34d50:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34d54:	mov	r0, r6
   34d58:	movw	r1, #6312	; 0x18a8
   34d5c:	movt	r1, #7
   34d60:	bl	13490 <strcmp@plt>
   34d64:	cmp	r0, #0
   34d68:	bne	34ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2101c>
   34d6c:	ldrb	r2, [r5, #3]
   34d70:	mov	r1, #1
   34d74:	ldrb	r3, [r5, #4]
   34d78:	orr	r2, r2, #128	; 0x80
   34d7c:	strb	r2, [r5, #3]
   34d80:	orr	r3, r3, r1
   34d84:	strb	r3, [r5, #4]
   34d88:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34d8c:	movw	r3, #360	; 0x168
   34d90:	movt	r3, #10
   34d94:	mov	r1, #1
   34d98:	str	r0, [r3, #44]	; 0x2c
   34d9c:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34da0:	movw	r3, #360	; 0x168
   34da4:	movt	r3, #10
   34da8:	mov	r2, #1
   34dac:	mov	r1, r2
   34db0:	str	r2, [r3, #44]	; 0x2c
   34db4:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34db8:	movw	r3, #360	; 0x168
   34dbc:	movt	r3, #10
   34dc0:	mov	r2, #2
   34dc4:	mov	r1, #1
   34dc8:	str	r2, [r3, #40]	; 0x28
   34dcc:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34dd0:	movw	r3, #1088	; 0x440
   34dd4:	movt	r3, #10
   34dd8:	mov	r1, #1
   34ddc:	ldrb	r2, [r3, #5]
   34de0:	orr	r2, r2, r1
   34de4:	strb	r2, [r3, #5]
   34de8:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34dec:	ldrb	r3, [r5, #1]
   34df0:	cmp	r3, #108	; 0x6c
   34df4:	bne	345f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20768>
   34df8:	ldrb	r3, [r5, #2]
   34dfc:	cmp	r3, #108	; 0x6c
   34e00:	bne	345f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20768>
   34e04:	ldrb	r3, [r5, #3]
   34e08:	cmp	r3, #0
   34e0c:	bne	345f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20768>
   34e10:	movw	r3, #360	; 0x168
   34e14:	movt	r3, #10
   34e18:	mov	r2, #2
   34e1c:	mov	r1, #1
   34e20:	str	r2, [r3, #44]	; 0x2c
   34e24:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34e28:	movw	r3, #1088	; 0x440
   34e2c:	movt	r3, #10
   34e30:	mov	r2, #3
   34e34:	mov	r1, #1
   34e38:	str	r2, [r3, #12]
   34e3c:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34e40:	mov	r1, sp
   34e44:	add	r0, r5, #14
   34e48:	bl	13a18 <strtoul@plt>
   34e4c:	ldr	r2, [sp]
   34e50:	movw	r3, #1336	; 0x538
   34e54:	movt	r3, #10
   34e58:	mov	r1, #0
   34e5c:	strd	r0, [r3, #104]	; 0x68
   34e60:	ldrb	r3, [r2]
   34e64:	cmp	r3, #0
   34e68:	bne	34e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20ff8>
   34e6c:	subs	r2, r0, #1
   34e70:	sbc	r3, r1, #0
   34e74:	and	r0, r0, r2
   34e78:	and	r1, r1, r3
   34e7c:	orrs	r3, r0, r1
   34e80:	beq	34540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   34e84:	mov	r2, #5
   34e88:	movw	r1, #6384	; 0x18f0
   34e8c:	mov	r0, #0
   34e90:	movt	r1, #7
   34e94:	bl	13688 <dcgettext@plt>
   34e98:	ldr	r1, [r4]
   34e9c:	add	r1, r1, #14
   34ea0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   34ea4:	b	34540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   34ea8:	movw	r1, #6320	; 0x18b0
   34eac:	mov	r0, #0
   34eb0:	movt	r1, #7
   34eb4:	b	34a9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c10>
   34eb8:	movw	r1, #6808	; 0x1a98
   34ebc:	mov	r0, #0
   34ec0:	movt	r1, #7
   34ec4:	b	34a9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c10>
   34ec8:	mov	r1, sp
   34ecc:	add	r0, r5, #17
   34ed0:	bl	13a18 <strtoul@plt>
   34ed4:	ldr	r2, [sp]
   34ed8:	movw	r3, #1336	; 0x538
   34edc:	movt	r3, #10
   34ee0:	mov	r1, #0
   34ee4:	strd	r0, [r3, #112]	; 0x70
   34ee8:	ldrb	r3, [r2]
   34eec:	cmp	r3, #0
   34ef0:	bne	34f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21080>
   34ef4:	subs	r2, r0, #1
   34ef8:	sbc	r3, r1, #0
   34efc:	and	r0, r0, r2
   34f00:	and	r1, r1, r3
   34f04:	orrs	r3, r0, r1
   34f08:	beq	34540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   34f0c:	mov	r2, #5
   34f10:	movw	r1, #6444	; 0x192c
   34f14:	mov	r0, #0
   34f18:	movt	r1, #7
   34f1c:	bl	13688 <dcgettext@plt>
   34f20:	ldr	r1, [r4]
   34f24:	add	r1, r1, #17
   34f28:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   34f2c:	b	34540 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b4>
   34f30:	movw	r3, #1088	; 0x440
   34f34:	movt	r3, #10
   34f38:	mov	r1, #1
   34f3c:	ldrb	r2, [r3, #5]
   34f40:	orr	r2, r2, #8
   34f44:	bfi	r2, r0, #4, #1
   34f48:	strb	r2, [r3, #5]
   34f4c:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34f50:	movw	r3, #1088	; 0x440
   34f54:	movt	r3, #10
   34f58:	mov	r1, #1
   34f5c:	ldrb	r2, [r3, #5]
   34f60:	orr	r2, r2, #16
   34f64:	bfi	r2, r0, #3, #1
   34f68:	strb	r2, [r3, #5]
   34f6c:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34f70:	bl	13694 <__stack_chk_fail@plt>
   34f74:	movw	r0, #1088	; 0x440
   34f78:	movt	r0, #10
   34f7c:	mov	r4, #16777216	; 0x1000000
   34f80:	ldrd	r2, [r0, #120]	; 0x78
   34f84:	mov	r5, #0
   34f88:	mov	r1, #1
   34f8c:	orr	r2, r2, r4
   34f90:	orr	r3, r3, r5
   34f94:	strd	r2, [r0, #120]	; 0x78
   34f98:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   34f9c:	movw	r0, #1088	; 0x440
   34fa0:	mov	r4, #2
   34fa4:	movt	r0, #10
   34fa8:	b	34f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210f4>
   34fac:	movw	r0, #1088	; 0x440
   34fb0:	mov	r4, #32
   34fb4:	movt	r0, #10
   34fb8:	b	34f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210f4>
   34fbc:	movw	r0, #1088	; 0x440
   34fc0:	mov	r4, #1024	; 0x400
   34fc4:	movt	r0, #10
   34fc8:	b	34f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210f4>
   34fcc:	movw	r0, #1088	; 0x440
   34fd0:	mov	r4, #16
   34fd4:	movt	r0, #10
   34fd8:	b	34f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210f4>
   34fdc:	movw	r0, #1088	; 0x440
   34fe0:	movt	r0, #10
   34fe4:	mov	sl, #8
   34fe8:	mov	fp, #0
   34fec:	ldrd	r4, [r0, #112]	; 0x70
   34ff0:	mov	r6, #1
   34ff4:	ldrd	r2, [r0, #120]	; 0x78
   34ff8:	mov	r7, #0
   34ffc:	orr	r4, r4, sl
   35000:	orr	r5, r5, fp
   35004:	orr	r2, r2, r6
   35008:	orr	r3, r3, r7
   3500c:	mov	r1, #1
   35010:	strd	r4, [r0, #112]	; 0x70
   35014:	strd	r2, [r0, #120]	; 0x78
   35018:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   3501c:	movw	r0, #1088	; 0x440
   35020:	mov	r4, #2048	; 0x800
   35024:	movt	r0, #10
   35028:	b	34f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210f4>
   3502c:	movw	r3, #1088	; 0x440
   35030:	movt	r3, #10
   35034:	mov	r1, #1
   35038:	ldrb	r2, [r3, #3]
   3503c:	orr	r2, r2, #64	; 0x40
   35040:	strb	r2, [r3, #3]
   35044:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   35048:	movw	r3, #1088	; 0x440
   3504c:	movt	r3, #10
   35050:	mov	r0, #2
   35054:	mov	r1, #1
   35058:	ldr	r2, [r3]
   3505c:	bfi	r2, r0, #15, #2
   35060:	str	r2, [r3]
   35064:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   35068:	movw	r0, #1088	; 0x440
   3506c:	mov	r4, #64	; 0x40
   35070:	movt	r0, #10
   35074:	b	34f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210f4>
   35078:	movw	r0, #1088	; 0x440
   3507c:	mov	r4, #8
   35080:	movt	r0, #10
   35084:	b	34f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210f4>
   35088:	movw	r0, #1088	; 0x440
   3508c:	mov	r4, #4096	; 0x1000
   35090:	movt	r0, #10
   35094:	b	34f80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x210f4>
   35098:	movw	r1, #6760	; 0x1a68
   3509c:	mov	r0, #0
   350a0:	movt	r1, #7
   350a4:	b	34a9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x20c10>
   350a8:	movw	r3, #1088	; 0x440
   350ac:	movt	r3, #10
   350b0:	mov	r0, #1
   350b4:	ldr	r2, [r3]
   350b8:	mov	r1, r0
   350bc:	bfi	r2, r0, #15, #2
   350c0:	str	r2, [r3]
   350c4:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   350c8:	movw	r3, #1088	; 0x440
   350cc:	movt	r3, #10
   350d0:	mov	r1, #1
   350d4:	ldrb	r2, [r3, #3]
   350d8:	bfi	r2, r0, #2, #1
   350dc:	strb	r2, [r3, #3]
   350e0:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   350e4:	movw	r3, #1088	; 0x440
   350e8:	movt	r3, #10
   350ec:	mov	r1, #1
   350f0:	ldrb	r2, [r3, #3]
   350f4:	orr	r2, r2, #4
   350f8:	strb	r2, [r3, #3]
   350fc:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   35100:	movw	r3, #1088	; 0x440
   35104:	movt	r3, #10
   35108:	mov	r1, #1
   3510c:	ldrb	r2, [r3]
   35110:	orr	r2, r2, #8
   35114:	strb	r2, [r3]
   35118:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   3511c:	movw	r3, #1088	; 0x440
   35120:	movt	r3, #10
   35124:	mov	r1, #1
   35128:	ldrb	r2, [r3, #4]
   3512c:	bfi	r2, r0, #3, #1
   35130:	strb	r2, [r3, #4]
   35134:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   35138:	movw	r3, #1088	; 0x440
   3513c:	movt	r3, #10
   35140:	mov	r1, #1
   35144:	ldrb	r2, [r3, #4]
   35148:	orr	r2, r2, #8
   3514c:	strb	r2, [r3, #4]
   35150:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   35154:	movw	r0, #1088	; 0x440
   35158:	movt	r0, #10
   3515c:	mov	r6, #1
   35160:	mov	r7, #0
   35164:	ldrd	r2, [r0, #112]	; 0x70
   35168:	mov	r4, #128	; 0x80
   3516c:	ldrd	sl, [r0, #120]	; 0x78
   35170:	mov	r5, #0
   35174:	orr	r2, r2, r6
   35178:	orr	r3, r3, r7
   3517c:	orr	r4, r4, sl
   35180:	orr	r5, r5, fp
   35184:	mov	r1, #1
   35188:	strd	r2, [r0, #112]	; 0x70
   3518c:	strd	r4, [r0, #120]	; 0x78
   35190:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   35194:	movw	r0, #1088	; 0x440
   35198:	movt	r0, #10
   3519c:	mvn	r6, #8
   351a0:	mvn	r7, #0
   351a4:	ldrd	r2, [r0, #112]	; 0x70
   351a8:	mvn	r4, #1
   351ac:	ldrd	sl, [r0, #120]	; 0x78
   351b0:	mvn	r5, #0
   351b4:	and	r2, r2, r6
   351b8:	and	r3, r3, r7
   351bc:	and	r4, r4, sl
   351c0:	and	r5, r5, fp
   351c4:	mov	r1, #1
   351c8:	strd	r2, [r0, #112]	; 0x70
   351cc:	strd	r4, [r0, #120]	; 0x78
   351d0:	b	34544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x206b8>
   351d4:	andeq	r0, sl, r4, ror r1
   351d8:	andeq	r0, sl, r8, ror r1
   351dc:	push	{r3, r4, r5, r6, r7, lr}
   351e0:	mov	r4, r0
   351e4:	mov	r6, r1
   351e8:	ldr	r0, [r1]
   351ec:	add	r1, r4, #6
   351f0:	mov	r5, r3
   351f4:	mov	r7, r2
   351f8:	bl	13724 <xrealloc@plt>
   351fc:	movw	ip, #6884	; 0x1ae4
   35200:	movt	ip, #7
   35204:	add	r7, r7, #32
   35208:	ldrh	r2, [ip, #4]
   3520c:	lsl	r7, r7, #4
   35210:	mov	r1, r7
   35214:	sub	r7, r7, #512	; 0x200
   35218:	mov	lr, r0
   3521c:	add	r3, r0, r4
   35220:	ldr	r0, [ip]
   35224:	str	lr, [r6]
   35228:	str	r0, [lr, r4]
   3522c:	strh	r2, [r3, #4]
   35230:	ldr	r0, [r5]
   35234:	bl	13724 <xrealloc@plt>
   35238:	movw	r1, #22300	; 0x571c
   3523c:	mov	r2, #512	; 0x200
   35240:	movt	r1, #5
   35244:	str	r0, [r5]
   35248:	add	r0, r0, r7
   3524c:	pop	{r3, r4, r5, r6, r7, lr}
   35250:	b	135c8 <memcpy@plt>
   35254:	push	{r3, r4, r5, lr}
   35258:	mov	r5, r0
   3525c:	ldr	r4, [r1]
   35260:	cmp	r4, #0
   35264:	beq	352d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21448>
   35268:	ldr	r3, [r4, #4]
   3526c:	cmp	r3, #15
   35270:	ldrls	pc, [pc, r3, lsl #2]
   35274:	b	352b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2142c>
   35278:	ldrdeq	r5, [r3], -ip
   3527c:	andeq	r5, r3, r8, asr #5
   35280:	andeq	r5, r3, r8, asr #5
   35284:	andeq	r5, r3, r8, asr #5
   35288:	andeq	r5, r3, r4, asr r3
   3528c:	andeq	r5, r3, r8, lsr #6
   35290:	andeq	r5, r3, r8, asr #5
   35294:	andeq	r5, r3, r8, asr #5
   35298:	andeq	r5, r3, r8, asr #5
   3529c:	andeq	r5, r3, r8, asr #5
   352a0:	andeq	r5, r3, r8, asr #5
   352a4:	andeq	r5, r3, r8, asr #5
   352a8:	andeq	r5, r3, r8, asr #5
   352ac:	andeq	r5, r3, r0, lsl r3
   352b0:			; <UNDEFINED> instruction: 0x000352b8
   352b4:	strdeq	r5, [r3], -r4
   352b8:	movw	r0, #6892	; 0x1aec
   352bc:	movw	r1, #275	; 0x113
   352c0:	movt	r0, #7
   352c4:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   352c8:	ldr	r4, [r4]
   352cc:	cmp	r4, #0
   352d0:	bne	35268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213dc>
   352d4:	mov	r0, #0
   352d8:	pop	{r3, r4, r5, pc}
   352dc:	mov	r0, r5
   352e0:	add	r1, r4, #8
   352e4:	bl	35254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213c8>
   352e8:	cmp	r0, #0
   352ec:	beq	352c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2143c>
   352f0:	pop	{r3, r4, r5, pc}
   352f4:	movw	r1, #1060	; 0x424
   352f8:	mov	r0, r5
   352fc:	movt	r1, #10
   35300:	bl	35254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213c8>
   35304:	cmp	r0, #0
   35308:	beq	352c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2143c>
   3530c:	pop	{r3, r4, r5, pc}
   35310:	mov	r0, r5
   35314:	add	r1, r4, #8
   35318:	bl	35254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213c8>
   3531c:	cmp	r0, #0
   35320:	beq	352c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2143c>
   35324:	pop	{r3, r4, r5, pc}
   35328:	ldr	r2, [r4, #8]
   3532c:	ldr	r3, [r5, #8]
   35330:	cmp	r2, r3
   35334:	bne	352c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2143c>
   35338:	ldr	r3, [r5, #4]
   3533c:	mov	r0, #1
   35340:	ldr	r2, [r4]
   35344:	str	r2, [r3]
   35348:	ldr	r3, [r5]
   3534c:	str	r3, [r4]
   35350:	pop	{r3, r4, r5, pc}
   35354:	mov	r0, r5
   35358:	add	r1, r4, #24
   3535c:	bl	35254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213c8>
   35360:	cmp	r0, #0
   35364:	beq	352c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2143c>
   35368:	pop	{r3, r4, r5, pc}
   3536c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35370:	movw	r5, #1088	; 0x440
   35374:	movt	r5, #10
   35378:	sub	sp, sp, #44	; 0x2c
   3537c:	movw	r1, #9116	; 0x239c
   35380:	movt	r1, #7
   35384:	ldr	r6, [r5, #52]	; 0x34
   35388:	ldr	r3, [r6, #4]
   3538c:	ldr	r0, [r3]
   35390:	bl	1340c <strstr@plt>
   35394:	cmp	r0, #0
   35398:	movweq	r0, #6916	; 0x1b04
   3539c:	movteq	r0, #7
   353a0:	beq	3548c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21600>
   353a4:	movw	ip, #62536	; 0xf448
   353a8:	movt	ip, #9
   353ac:	movw	r4, #360	; 0x168
   353b0:	movt	r4, #10
   353b4:	ldr	lr, [ip, #16]
   353b8:	mov	r0, r6
   353bc:	ldr	r3, [ip]
   353c0:	mov	r1, r5
   353c4:	ldr	r6, [r4, #52]	; 0x34
   353c8:	str	lr, [sp, #28]
   353cc:	ldr	fp, [r4, #32]
   353d0:	ldr	ip, [ip, #24]
   353d4:	ldr	lr, [r4, #56]	; 0x38
   353d8:	ldr	sl, [r4, #36]	; 0x24
   353dc:	ldr	r9, [r4, #40]	; 0x28
   353e0:	ldr	r8, [r4, #44]	; 0x2c
   353e4:	ldr	r7, [r4, #48]	; 0x30
   353e8:	str	lr, [sp, #24]
   353ec:	str	ip, [sp, #32]
   353f0:	ldr	r2, [r4, #28]
   353f4:	str	r6, [sp, #20]
   353f8:	str	fp, [sp]
   353fc:	str	sl, [sp, #4]
   35400:	str	r9, [sp, #8]
   35404:	str	r8, [sp, #12]
   35408:	str	r7, [sp, #16]
   3540c:	bl	13ce8 <bfd_elf32_arm_set_target_relocs@plt>
   35410:	mov	r1, #3
   35414:	mov	r2, #0
   35418:	movw	r0, #6992	; 0x1b50
   3541c:	movt	r0, #7
   35420:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   35424:	ldr	r1, [r5, #52]	; 0x34
   35428:	mov	r6, r0
   3542c:	movw	r0, #6992	; 0x1b50
   35430:	movt	r0, #7
   35434:	str	r6, [r4]
   35438:	bl	13868 <bfd_create@plt>
   3543c:	ldr	r3, [r4]
   35440:	str	r0, [r6, #16]
   35444:	ldr	r6, [r3, #16]
   35448:	cmp	r6, #0
   3544c:	beq	35484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x215f8>
   35450:	ldr	r3, [r6, #4]
   35454:	ldr	r0, [r5, #52]	; 0x34
   35458:	ldr	r7, [r3, #336]	; 0x150
   3545c:	bl	13a60 <bfd_get_arch@plt>
   35460:	mov	r8, r0
   35464:	ldr	r0, [r5, #52]	; 0x34
   35468:	bl	13b2c <bfd_get_mach@plt>
   3546c:	mov	r1, r8
   35470:	mov	r2, r0
   35474:	mov	r0, r6
   35478:	blx	r7
   3547c:	cmp	r0, #0
   35480:	bne	35498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2160c>
   35484:	movw	r0, #7008	; 0x1b60
   35488:	movt	r0, #7
   3548c:	add	sp, sp, #44	; 0x2c
   35490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35494:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35498:	ldr	r0, [r4]
   3549c:	ldr	r3, [r0, #16]
   354a0:	ldr	r2, [r3, #40]	; 0x28
   354a4:	orr	r2, r2, #131072	; 0x20000
   354a8:	str	r2, [r3, #40]	; 0x28
   354ac:	bl	243b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10524>
   354b0:	ldr	r3, [r4]
   354b4:	mov	r1, r5
   354b8:	ldr	r0, [r3, #16]
   354bc:	bl	13b20 <bfd_elf32_arm_add_glue_sections_to_bfd@plt>
   354c0:	ldr	r3, [r4]
   354c4:	mov	r1, r5
   354c8:	ldr	r0, [r3, #16]
   354cc:	add	sp, sp, #44	; 0x2c
   354d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   354d4:	b	1388c <bfd_elf32_arm_get_bfd_for_interworking@plt>
   354d8:	movw	r3, #65504	; 0xffe0
   354dc:	movt	r3, #9
   354e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   354e4:	sub	sp, sp, #8
   354e8:	ldr	r4, [r3]
   354ec:	cmp	r4, #0
   354f0:	beq	35520 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21694>
   354f4:	ldr	r0, [r4, #16]
   354f8:	movw	r1, #1088	; 0x440
   354fc:	movt	r1, #10
   35500:	bl	13838 <bfd_elf32_arm_vfp11_fix_veneer_locations@plt>
   35504:	ldr	r0, [r4, #16]
   35508:	movw	r1, #1088	; 0x440
   3550c:	movt	r1, #10
   35510:	bl	1355c <bfd_elf32_arm_stm32l4xx_fix_veneer_locations@plt>
   35514:	ldr	r4, [r4, #24]
   35518:	cmp	r4, #0
   3551c:	bne	354f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21668>
   35520:	movw	r4, #1088	; 0x440
   35524:	movt	r4, #10
   35528:	movw	r8, #360	; 0x168
   3552c:	movt	r8, #10
   35530:	ldrb	r3, [r4]
   35534:	and	r3, r3, #3
   35538:	cmp	r3, #2
   3553c:	beq	35564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x216d8>
   35540:	ldr	r3, [r8]
   35544:	ldr	r3, [r3, #16]
   35548:	ldr	r3, [r3, #100]	; 0x64
   3554c:	cmp	r3, #0
   35550:	beq	35564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x216d8>
   35554:	mov	r0, r4
   35558:	bl	13c64 <elf32_arm_build_stubs@plt>
   3555c:	cmp	r0, #0
   35560:	beq	35618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2178c>
   35564:	bl	2f278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3ec>
   35568:	ldr	r1, [r8, #20]
   3556c:	cmp	r1, #0
   35570:	beq	355c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2173c>
   35574:	mov	r2, #0
   35578:	ldr	r0, [r4, #32]
   3557c:	mov	ip, #1
   35580:	mov	r3, r2
   35584:	str	ip, [sp]
   35588:	bl	13880 <bfd_link_hash_lookup@plt>
   3558c:	cmp	r0, #0
   35590:	beq	355a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21718>
   35594:	ldrb	r3, [r0, #12]
   35598:	sub	r3, r3, #3
   3559c:	cmp	r3, #1
   355a0:	bls	35628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2179c>
   355a4:	mov	r2, #5
   355a8:	movw	r1, #7128	; 0x1bd8
   355ac:	mov	r0, #0
   355b0:	movt	r1, #7
   355b4:	bl	13688 <dcgettext@plt>
   355b8:	ldr	r1, [r8, #20]
   355bc:	add	sp, sp, #8
   355c0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   355c4:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   355c8:	movw	r5, #4
   355cc:	movt	r5, #10
   355d0:	ldr	r3, [r5, #4]
   355d4:	cmp	r3, #0
   355d8:	beq	35610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21784>
   355dc:	mov	r2, r1
   355e0:	ldr	r0, [r4, #32]
   355e4:	mov	r1, r3
   355e8:	mov	ip, #1
   355ec:	mov	r3, r2
   355f0:	str	ip, [sp]
   355f4:	bl	13880 <bfd_link_hash_lookup@plt>
   355f8:	cmp	r0, #0
   355fc:	beq	35610 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21784>
   35600:	ldrb	r3, [r0, #66]	; 0x42
   35604:	and	r3, r3, #3
   35608:	cmp	r3, #1
   3560c:	beq	35594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21708>
   35610:	add	sp, sp, #8
   35614:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   35618:	movw	r0, #7040	; 0x1b80
   3561c:	movt	r0, #7
   35620:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35624:	b	35564 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x216d8>
   35628:	ldr	r2, [r0, #20]
   3562c:	ldr	r3, [r2, #88]	; 0x58
   35630:	cmp	r3, #0
   35634:	beq	355a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21718>
   35638:	ldrd	r0, [r0, #24]
   3563c:	mov	r4, #1
   35640:	ldrd	sl, [r3, #32]
   35644:	mov	r5, #0
   35648:	ldrd	r6, [r2, #80]	; 0x50
   3564c:	movw	r3, #11112	; 0x2b68
   35650:	adds	sl, sl, r0
   35654:	movt	r3, #5
   35658:	adc	fp, fp, r1
   3565c:	adds	r6, r6, sl
   35660:	adc	r7, r7, fp
   35664:	orr	r4, r4, r6
   35668:	orr	r5, r5, r7
   3566c:	ldr	r0, [pc, #128]	; 356f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21868>
   35670:	strd	r4, [sp]
   35674:	mov	r1, #1
   35678:	mov	r2, #30
   3567c:	mov	lr, #48	; 0x30
   35680:	mov	ip, #120	; 0x78
   35684:	strb	lr, [r8, #60]	; 0x3c
   35688:	strb	ip, [r8, #61]	; 0x3d
   3568c:	bl	13acc <__sprintf_chk@plt>
   35690:	ldr	r4, [r8, #20]
   35694:	movw	r5, #4
   35698:	movt	r5, #10
   3569c:	cmp	r4, #0
   356a0:	beq	356e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21858>
   356a4:	ldr	r3, [r5, #4]
   356a8:	cmp	r3, #0
   356ac:	beq	356e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21858>
   356b0:	movw	r3, #1012	; 0x3f4
   356b4:	movt	r3, #10
   356b8:	ldr	r3, [r3]
   356bc:	cmp	r3, #0
   356c0:	beq	356e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21858>
   356c4:	mov	r2, #5
   356c8:	movw	r1, #7072	; 0x1ba0
   356cc:	mov	r0, #0
   356d0:	movt	r1, #7
   356d4:	bl	13688 <dcgettext@plt>
   356d8:	mov	r1, r4
   356dc:	ldr	r2, [r5, #4]
   356e0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   356e4:	ldr	r3, [pc, #12]	; 356f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2186c>
   356e8:	str	r3, [r5, #4]
   356ec:	add	sp, sp, #8
   356f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   356f4:	andeq	r0, sl, r6, lsr #3
   356f8:	andeq	r0, sl, r4, lsr #3
   356fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35700:	movw	r6, #63248	; 0xf710
   35704:	movt	r6, #9
   35708:	movw	r5, #1088	; 0x440
   3570c:	movw	r9, #360	; 0x168
   35710:	movt	r5, #10
   35714:	ldr	r3, [r6]
   35718:	movt	r9, #10
   3571c:	sub	sp, sp, #108	; 0x6c
   35720:	mov	r0, r5
   35724:	ldr	r1, [r9, #24]
   35728:	movw	sl, #65504	; 0xffe0
   3572c:	str	r3, [sp, #100]	; 0x64
   35730:	movt	sl, #9
   35734:	str	r6, [sp, #32]
   35738:	bl	13d00 <bfd_elf32_arm_set_byteswap_code@plt>
   3573c:	ldr	r0, [r5, #52]	; 0x34
   35740:	mov	r1, r5
   35744:	bl	134c0 <bfd_elf32_arm_set_vfp11_fix@plt>
   35748:	ldr	r0, [r5, #52]	; 0x34
   3574c:	mov	r1, r5
   35750:	bl	13934 <bfd_elf32_arm_set_stm32l4xx_fix@plt>
   35754:	ldr	r0, [r5, #52]	; 0x34
   35758:	mov	r1, r5
   3575c:	bl	13604 <bfd_elf32_arm_set_cortex_a8_fix@plt>
   35760:	mov	r0, r5
   35764:	bl	13808 <bfd_elf32_arm_keep_private_stub_output_sections@plt>
   35768:	ldr	r3, [r5, #32]
   3576c:	ldr	r2, [r3, #56]	; 0x38
   35770:	cmp	r2, #0
   35774:	beq	35a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21bdc>
   35778:	ldr	r4, [r3, #40]	; 0x28
   3577c:	cmp	r4, #1
   35780:	movne	r7, #0
   35784:	strne	r7, [sp, #36]	; 0x24
   35788:	beq	35b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c78>
   3578c:	movw	r7, #1244	; 0x4dc
   35790:	movt	r7, #10
   35794:	ldr	r2, [r7, #64]	; 0x40
   35798:	cmp	r2, #0
   3579c:	str	r2, [sp, #40]	; 0x28
   357a0:	beq	35b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cec>
   357a4:	ldr	r4, [r5, #56]	; 0x38
   357a8:	cmp	r4, #0
   357ac:	beq	35864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x219d8>
   357b0:	movw	r6, #1336	; 0x538
   357b4:	mov	r8, #0
   357b8:	movt	r6, #10
   357bc:	str	r7, [sp, #44]	; 0x2c
   357c0:	str	r5, [sp, #48]	; 0x30
   357c4:	b	357d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21948>
   357c8:	ldr	r4, [r4, #164]	; 0xa4
   357cc:	cmp	r4, #0
   357d0:	beq	3585c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x219d0>
   357d4:	ldr	r3, [r4, #4]
   357d8:	ldr	r3, [r3, #4]
   357dc:	cmp	r3, #5
   357e0:	bne	357c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2193c>
   357e4:	ldr	r3, [r4, #168]	; 0xa8
   357e8:	ldr	r0, [r3, #700]	; 0x2bc
   357ec:	cmp	r0, #0
   357f0:	beq	357c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2193c>
   357f4:	ldrb	r3, [r0]
   357f8:	cmp	r3, #0
   357fc:	beq	357c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2193c>
   35800:	bl	137e4 <xstrdup@plt>
   35804:	mov	fp, r0
   35808:	b	3581c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21990>
   3580c:	cmp	r7, #0
   35810:	beq	357c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2193c>
   35814:	adds	fp, r5, #1
   35818:	beq	357c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2193c>
   3581c:	ldrb	r1, [r6, #72]	; 0x48
   35820:	mov	r0, fp
   35824:	bl	13a48 <strchr@plt>
   35828:	subs	r5, r0, #0
   3582c:	strbne	r8, [r5]
   35830:	movne	r7, #1
   35834:	moveq	r7, r5
   35838:	cmp	fp, #0
   3583c:	beq	3580c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21980>
   35840:	ldrb	r3, [fp]
   35844:	cmp	r3, #0
   35848:	beq	3580c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21980>
   3584c:	mov	r1, fp
   35850:	ldr	r0, [pc, #940]	; 35c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d78>
   35854:	bl	34208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2037c>
   35858:	b	3580c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21980>
   3585c:	ldr	r7, [sp, #44]	; 0x2c
   35860:	ldr	r5, [sp, #48]	; 0x30
   35864:	ldr	r4, [r9, #12]
   35868:	add	ip, sp, #60	; 0x3c
   3586c:	ldr	lr, [r9, #16]
   35870:	ldr	r6, [r7, #76]	; 0x4c
   35874:	ldr	r0, [r5, #52]	; 0x34
   35878:	ldr	r1, [r7, #60]	; 0x3c
   3587c:	ldr	r3, [r7, #72]	; 0x48
   35880:	ldr	r2, [sp, #40]	; 0x28
   35884:	str	r5, [sp, #12]
   35888:	stm	sp, {r4, lr}
   3588c:	str	r6, [sp, #8]
   35890:	str	ip, [sp, #16]
   35894:	bl	13ad8 <bfd_elf_size_dynamic_sections@plt>
   35898:	cmp	r0, #0
   3589c:	beq	35a48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21bbc>
   358a0:	ldr	r0, [r7, #56]	; 0x38
   358a4:	cmp	r0, #0
   358a8:	beq	358d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a44>
   358ac:	ldr	r4, [sp, #60]	; 0x3c
   358b0:	cmp	r4, #0
   358b4:	beq	358d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a44>
   358b8:	str	r0, [r4, #140]	; 0x8c
   358bc:	bl	13a24 <strlen@plt>
   358c0:	mov	r3, #0
   358c4:	str	r3, [r4, #52]	; 0x34
   358c8:	add	r0, r0, #1
   358cc:	str	r0, [r4, #48]	; 0x30
   358d0:	ldr	r4, [sl]
   358d4:	cmp	r4, #0
   358d8:	movne	sl, #0
   358dc:	movne	fp, #0
   358e0:	movne	r9, #0
   358e4:	bne	358f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a6c>
   358e8:	b	359d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b4c>
   358ec:	ldr	r4, [r4, #24]
   358f0:	cmp	r4, #0
   358f4:	beq	359d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b4c>
   358f8:	ldrb	r3, [r4, #36]	; 0x24
   358fc:	tst	r3, #16
   35900:	bne	358ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a60>
   35904:	movw	r1, #7292	; 0x1c7c
   35908:	ldr	r0, [r4, #16]
   3590c:	movt	r1, #7
   35910:	bl	13844 <bfd_get_section_by_name@plt>
   35914:	subs	r8, r0, #0
   35918:	beq	358ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a60>
   3591c:	ldr	r7, [r8, #48]	; 0x30
   35920:	ldr	r3, [r8, #52]	; 0x34
   35924:	add	r0, r7, #1
   35928:	str	r3, [sp, #28]
   3592c:	bl	137b4 <xmalloc@plt>
   35930:	ldr	r3, [sp, #28]
   35934:	mov	r1, r8
   35938:	mov	r6, r0
   3593c:	ldr	r0, [r4, #16]
   35940:	mov	r2, r6
   35944:	str	r3, [sp, #12]
   35948:	str	r7, [sp, #8]
   3594c:	strd	sl, [sp]
   35950:	bl	1367c <bfd_get_section_contents@plt>
   35954:	cmp	r0, #0
   35958:	beq	35a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ba8>
   3595c:	strb	r9, [r6, r7]
   35960:	mov	r1, r6
   35964:	ldr	ip, [r5, #28]
   35968:	mov	r2, #0
   3596c:	ldr	r3, [r4, #16]
   35970:	movw	r0, #1088	; 0x440
   35974:	str	r9, [sp]
   35978:	movt	r0, #10
   3597c:	strd	sl, [sp, #8]
   35980:	ldr	ip, [ip, #20]
   35984:	blx	ip
   35988:	mov	r0, r6
   3598c:	bl	13574 <free@plt>
   35990:	ldr	r1, [r8, #88]	; 0x58
   35994:	cmp	r1, #0
   35998:	beq	359bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b30>
   3599c:	ldrd	r6, [r1, #56]	; 0x38
   359a0:	ldrd	r2, [r8, #48]	; 0x30
   359a4:	cmp	r7, r3
   359a8:	cmpeq	r6, r2
   359ac:	bcc	359bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b30>
   359b0:	subs	r2, r6, r2
   359b4:	sbc	r3, r7, r3
   359b8:	strd	r2, [r1, #56]	; 0x38
   359bc:	ldr	r4, [r4, #24]
   359c0:	ldr	r3, [r8, #20]
   359c4:	cmp	r4, #0
   359c8:	strd	sl, [r8, #48]	; 0x30
   359cc:	orr	r3, r3, #2129920	; 0x208000
   359d0:	str	r3, [r8, #20]
   359d4:	bne	358f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a6c>
   359d8:	bl	2f25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3d0>
   359dc:	ldr	r0, [r5, #52]	; 0x34
   359e0:	movw	r1, #1088	; 0x440
   359e4:	movt	r1, #10
   359e8:	bl	13c94 <bfd_elf_size_dynsym_hash_dynstr@plt>
   359ec:	cmp	r0, #0
   359f0:	beq	35a58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21bcc>
   359f4:	ldr	r6, [sp, #36]	; 0x24
   359f8:	cmp	r6, #0
   359fc:	beq	35a18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b8c>
   35a00:	add	r3, sp, #80	; 0x50
   35a04:	ldr	r7, [sp, #52]	; 0x34
   35a08:	add	ip, r6, #16
   35a0c:	ldm	r3, {r0, r1, r2, r3}
   35a10:	strb	r7, [r6, #12]
   35a14:	stm	ip, {r0, r1, r2, r3}
   35a18:	ldr	r6, [sp, #32]
   35a1c:	ldr	r2, [sp, #100]	; 0x64
   35a20:	ldr	r3, [r6]
   35a24:	cmp	r2, r3
   35a28:	bne	35c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d74>
   35a2c:	add	sp, sp, #108	; 0x6c
   35a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35a34:	movw	r0, #7308	; 0x1c8c
   35a38:	ldr	r1, [r4, #16]
   35a3c:	movt	r0, #7
   35a40:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35a44:	b	3595c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ad0>
   35a48:	movw	r0, #7244	; 0x1c4c
   35a4c:	movt	r0, #7
   35a50:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35a54:	b	358a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21a14>
   35a58:	movw	r0, #7244	; 0x1c4c
   35a5c:	movt	r0, #7
   35a60:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35a64:	b	359f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21b68>
   35a68:	ldr	r4, [sl]
   35a6c:	cmp	r4, #0
   35a70:	bne	35ac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c3c>
   35a74:	movw	r0, #1088	; 0x440
   35a78:	movt	r0, #10
   35a7c:	bl	13634 <bfd_elf32_arm_allocate_interworking_sections@plt>
   35a80:	ldr	r3, [r5, #32]
   35a84:	b	35778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x218ec>
   35a88:	movw	r1, #1088	; 0x440
   35a8c:	ldr	r0, [r4, #16]
   35a90:	movt	r1, #10
   35a94:	bl	13e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt>
   35a98:	cmp	r0, #0
   35a9c:	bne	35abc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c30>
   35aa0:	movw	r1, #7176	; 0x1c08
   35aa4:	mov	r0, #0
   35aa8:	movt	r1, #7
   35aac:	mov	r2, #5
   35ab0:	bl	13688 <dcgettext@plt>
   35ab4:	ldr	r1, [r4, #8]
   35ab8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35abc:	ldr	r4, [r4, #24]
   35ac0:	cmp	r4, #0
   35ac4:	beq	35a74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21be8>
   35ac8:	ldr	r0, [r4, #16]
   35acc:	bl	13a90 <bfd_elf32_arm_init_maps@plt>
   35ad0:	movw	r1, #1088	; 0x440
   35ad4:	ldr	r0, [r4, #16]
   35ad8:	movt	r1, #10
   35adc:	bl	13988 <bfd_elf32_arm_process_before_allocation@plt>
   35ae0:	cmp	r0, #0
   35ae4:	beq	35aa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c14>
   35ae8:	movw	r1, #1088	; 0x440
   35aec:	ldr	r0, [r4, #16]
   35af0:	movt	r1, #10
   35af4:	bl	1397c <bfd_elf32_arm_vfp11_erratum_scan@plt>
   35af8:	cmp	r0, #0
   35afc:	beq	35aa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21c14>
   35b00:	b	35a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21bfc>
   35b04:	movw	r6, #1088	; 0x440
   35b08:	movt	r6, #10
   35b0c:	ldr	r0, [r5, #52]	; 0x34
   35b10:	mov	r1, r6
   35b14:	bl	135ec <_bfd_elf_tls_setup@plt>
   35b18:	ldrb	r3, [r5]
   35b1c:	and	r3, r3, #3
   35b20:	cmp	r3, #2
   35b24:	beq	35b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cd4>
   35b28:	mov	r2, #0
   35b2c:	ldr	r0, [r6, #32]
   35b30:	mov	r3, r2
   35b34:	str	r4, [sp]
   35b38:	movw	r1, #7216	; 0x1c30
   35b3c:	movt	r1, #7
   35b40:	bl	13880 <bfd_link_hash_lookup@plt>
   35b44:	cmp	r0, #0
   35b48:	str	r0, [sp, #36]	; 0x24
   35b4c:	beq	35b60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cd4>
   35b50:	ldrb	r3, [r0, #12]
   35b54:	cmp	r3, #5
   35b58:	cmpne	r3, #2
   35b5c:	bls	35b8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d00>
   35b60:	mov	r7, #0
   35b64:	str	r7, [sp, #36]	; 0x24
   35b68:	movw	r0, #23792	; 0x5cf0
   35b6c:	movt	r0, #3
   35b70:	bl	20f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0b4>
   35b74:	b	3578c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21900>
   35b78:	movw	r0, #7232	; 0x1c40
   35b7c:	movt	r0, #7
   35b80:	bl	138f8 <getenv@plt>
   35b84:	str	r0, [sp, #40]	; 0x28
   35b88:	b	357a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21918>
   35b8c:	mov	r0, r6
   35b90:	mov	r2, r4
   35b94:	ldr	r1, [sp, #36]	; 0x24
   35b98:	mov	r4, #3
   35b9c:	bl	13e68 <_bfd_elf_link_hash_hide_symbol@plt>
   35ba0:	ldr	r6, [sp, #36]	; 0x24
   35ba4:	add	ip, sp, #64	; 0x40
   35ba8:	ldrb	r3, [r6, #65]	; 0x41
   35bac:	and	r2, r3, #3
   35bb0:	cmp	r2, #1
   35bb4:	bicne	r3, r3, #3
   35bb8:	orrne	r3, r3, #2
   35bbc:	strbne	r3, [r6, #65]	; 0x41
   35bc0:	ldr	lr, [sp, #36]	; 0x24
   35bc4:	ldr	r6, [pc, #60]	; 35c08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d7c>
   35bc8:	ldr	r7, [sp, #36]	; 0x24
   35bcc:	ldm	lr!, {r0, r1, r2, r3}
   35bd0:	stmia	ip!, {r0, r1, r2, r3}
   35bd4:	ldm	lr, {r0, r1, r2, r3}
   35bd8:	ldr	lr, [sp, #36]	; 0x24
   35bdc:	str	r6, [r7, #20]
   35be0:	mov	r6, #0
   35be4:	mov	r7, #0
   35be8:	strd	r6, [lr, #24]
   35bec:	ldrb	r6, [lr, #12]
   35bf0:	stm	ip, {r0, r1, r2, r3}
   35bf4:	str	r6, [sp, #52]	; 0x34
   35bf8:	strb	r4, [lr, #12]
   35bfc:	b	35b68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21cdc>
   35c00:	bl	13694 <__stack_chk_fail@plt>
   35c04:	andeq	r0, sl, r8, ror r1
   35c08:			; <UNDEFINED> instruction: 0x0009fab8
   35c0c:	push	{r4, r5, lr}
   35c10:	movw	r5, #1088	; 0x440
   35c14:	sub	sp, sp, #12
   35c18:	movt	r5, #10
   35c1c:	mov	r4, r0
   35c20:	ldr	r3, [r4, #12]
   35c24:	cmp	r3, #6
   35c28:	ldrls	pc, [pc, r3, lsl #2]
   35c2c:	b	35ce8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e5c>
   35c30:	ldrdeq	r5, [r3], -r8
   35c34:	andeq	r5, r3, r0, asr #25
   35c38:			; <UNDEFINED> instruction: 0x00035cb8
   35c3c:	andeq	r5, r3, r8, ror #25
   35c40:	muleq	r3, r4, ip
   35c44:	andeq	r5, r3, ip, asr #24
   35c48:	andeq	r5, r3, ip, asr #24
   35c4c:	ldr	r2, [r4, #16]
   35c50:	mov	r3, #1
   35c54:	ldrb	r1, [r2]
   35c58:	cmp	r1, #46	; 0x2e
   35c5c:	beq	35ca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e1c>
   35c60:	ldr	ip, [r4, #28]
   35c64:	movw	r1, #1088	; 0x440
   35c68:	ldr	r0, [r5, #52]	; 0x34
   35c6c:	movt	r1, #10
   35c70:	str	ip, [sp]
   35c74:	bl	134cc <bfd_elf_record_link_assignment@plt>
   35c78:	cmp	r0, #0
   35c7c:	bne	35ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e54>
   35c80:	movw	r0, #7364	; 0x1cc4
   35c84:	ldr	r1, [r4, #16]
   35c88:	movt	r0, #7
   35c8c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35c90:	b	35ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e54>
   35c94:	ldr	r2, [r4, #16]
   35c98:	mov	r3, #0
   35c9c:	ldrb	r1, [r2]
   35ca0:	cmp	r1, #46	; 0x2e
   35ca4:	bne	35c60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21dd4>
   35ca8:	ldrb	r1, [r2, #1]
   35cac:	cmp	r1, #0
   35cb0:	beq	35ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21e54>
   35cb4:	b	35c60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21dd4>
   35cb8:	ldr	r4, [r4, #16]
   35cbc:	b	35c20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d94>
   35cc0:	ldr	r0, [r4, #16]
   35cc4:	bl	35c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d80>
   35cc8:	ldr	r0, [r4, #20]
   35ccc:	bl	35c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d80>
   35cd0:	ldr	r4, [r4, #24]
   35cd4:	b	35c20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d94>
   35cd8:	ldr	r0, [r4, #16]
   35cdc:	bl	35c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d80>
   35ce0:	ldr	r4, [r4, #20]
   35ce4:	b	35c20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d94>
   35ce8:	add	sp, sp, #12
   35cec:	pop	{r4, r5, pc}
   35cf0:	ldr	r3, [r0, #4]
   35cf4:	cmp	r3, #1
   35cf8:	bxne	lr
   35cfc:	ldr	r0, [r0, #8]
   35d00:	b	35c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21d80>
   35d04:	movw	ip, #360	; 0x168
   35d08:	movt	ip, #10
   35d0c:	push	{r4, r5, r6, r7, r8, lr}
   35d10:	movw	r4, #63248	; 0xf710
   35d14:	movt	r4, #9
   35d18:	ldr	lr, [ip]
   35d1c:	sub	sp, sp, #16
   35d20:	mov	r7, r2
   35d24:	ldr	ip, [r4]
   35d28:	mov	r6, r1
   35d2c:	movw	r2, #16671	; 0x411f
   35d30:	mov	r1, r0
   35d34:	movt	r2, #32
   35d38:	ldr	r0, [lr, #16]
   35d3c:	mov	r8, r3
   35d40:	str	ip, [sp, #12]
   35d44:	bl	1358c <bfd_make_section_anyway_with_flags@plt>
   35d48:	subs	r5, r0, #0
   35d4c:	beq	35df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f64>
   35d50:	mov	r0, r6
   35d54:	str	r8, [r5, #92]	; 0x5c
   35d58:	bl	22554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6c8>
   35d5c:	str	r7, [sp, #8]
   35d60:	mov	r6, r0
   35d64:	mov	r0, sp
   35d68:	bl	20f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0c4>
   35d6c:	mov	r1, r5
   35d70:	mov	r0, sp
   35d74:	mov	r3, r6
   35d78:	mov	r2, #0
   35d7c:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   35d80:	ldr	r1, [sp]
   35d84:	cmp	r1, #0
   35d88:	beq	35df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f64>
   35d8c:	cmp	r7, #0
   35d90:	beq	35dc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f38>
   35d94:	mov	r0, sp
   35d98:	add	r1, r6, #8
   35d9c:	bl	35254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x213c8>
   35da0:	cmp	r0, #0
   35da4:	beq	35df0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f64>
   35da8:	mov	r0, r5
   35dac:	ldr	r2, [sp, #12]
   35db0:	ldr	r3, [r4]
   35db4:	cmp	r2, r3
   35db8:	bne	35e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f84>
   35dbc:	add	sp, sp, #16
   35dc0:	pop	{r4, r5, r6, r7, r8, pc}
   35dc4:	ldr	r2, [r6, #8]
   35dc8:	cmp	r2, #0
   35dcc:	bne	35dd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f4c>
   35dd0:	b	35e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f78>
   35dd4:	mov	r2, r3
   35dd8:	ldr	r3, [r2]
   35ddc:	cmp	r3, #0
   35de0:	bne	35dd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f48>
   35de4:	str	r1, [r2]
   35de8:	mov	r0, r5
   35dec:	b	35dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f20>
   35df0:	movw	r0, #7412	; 0x1cf4
   35df4:	movt	r0, #7
   35df8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35dfc:	mov	r0, #0
   35e00:	b	35dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f20>
   35e04:	str	r1, [r6, #8]
   35e08:	mov	r0, r5
   35e0c:	b	35dac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f20>
   35e10:	bl	13694 <__stack_chk_fail@plt>
   35e14:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   35e18:	movw	r7, #1088	; 0x440
   35e1c:	movt	r7, #10
   35e20:	movw	r8, #1040	; 0x410
   35e24:	movt	r8, #10
   35e28:	mov	r6, #10
   35e2c:	mov	r9, r7
   35e30:	bl	25ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c58>
   35e34:	ldr	r0, [r7, #52]	; 0x34
   35e38:	ldr	r3, [r0, #4]
   35e3c:	ldr	r3, [r3, #4]
   35e40:	cmp	r3, #5
   35e44:	popne	{r3, r4, r5, r6, r7, r8, r9, pc}
   35e48:	ldrb	r3, [r9]
   35e4c:	and	r3, r3, #3
   35e50:	cmp	r3, #2
   35e54:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   35e58:	ldr	r3, [r0, #168]	; 0xa8
   35e5c:	movw	r1, #1088	; 0x440
   35e60:	ldr	r2, [r8]
   35e64:	movt	r1, #10
   35e68:	ldr	r3, [r3, #2508]	; 0x9cc
   35e6c:	cmp	r2, #0
   35e70:	streq	r2, [r3]
   35e74:	ldrd	r4, [r3, #32]
   35e78:	bl	136ac <_bfd_elf_map_sections_to_segments@plt>
   35e7c:	cmp	r0, #0
   35e80:	beq	35eb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2202c>
   35e84:	ldr	r3, [r7, #52]	; 0x34
   35e88:	ldr	r3, [r3, #168]	; 0xa8
   35e8c:	ldr	r1, [r3, #2508]	; 0x9cc
   35e90:	ldrd	r2, [r1, #32]
   35e94:	cmp	r3, r5
   35e98:	cmpeq	r2, r4
   35e9c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   35ea0:	cmp	r6, #6
   35ea4:	ble	35ee4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22058>
   35ea8:	subs	r6, r6, #1
   35eac:	beq	35ec8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2203c>
   35eb0:	mov	r0, #1
   35eb4:	b	35e30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21fa4>
   35eb8:	movw	r0, #7452	; 0x1d1c
   35ebc:	movt	r0, #7
   35ec0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35ec4:	b	35e84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21ff8>
   35ec8:	mov	r0, r6
   35ecc:	movw	r1, #7496	; 0x1d48
   35ed0:	mov	r2, #5
   35ed4:	movt	r1, #7
   35ed8:	bl	13688 <dcgettext@plt>
   35edc:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   35ee0:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   35ee4:	cmp	r5, r3
   35ee8:	cmpeq	r4, r2
   35eec:	bcc	35ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2201c>
   35ef0:	strd	r4, [r1, #32]
   35ef4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   35ef8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35efc:	mov	r0, #40	; 0x28
   35f00:	sub	sp, sp, #20
   35f04:	bl	137b4 <xmalloc@plt>
   35f08:	movw	r3, #65504	; 0xffe0
   35f0c:	movt	r3, #9
   35f10:	ldr	r7, [r3]
   35f14:	cmp	r7, #0
   35f18:	mov	r9, r0
   35f1c:	beq	36150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222c4>
   35f20:	ldr	sl, [pc, #560]	; 36158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222cc>
   35f24:	mov	r4, #4
   35f28:	mov	r5, #0
   35f2c:	mov	r8, #0
   35f30:	mov	fp, #10
   35f34:	ldr	r3, [r7, #16]
   35f38:	ldr	r2, [r3, #40]	; 0x28
   35f3c:	ubfx	r2, r2, #5, #20
   35f40:	tst	r2, #66	; 0x42
   35f44:	bne	35fdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22150>
   35f48:	ldr	r6, [r3, #100]	; 0x64
   35f4c:	cmp	r6, #0
   35f50:	bne	35f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220d8>
   35f54:	b	35fdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22150>
   35f58:	ldr	r6, [r6, #12]
   35f5c:	cmp	r6, #0
   35f60:	beq	35fdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22150>
   35f64:	ldr	r1, [r6, #88]	; 0x58
   35f68:	cmp	r1, #0
   35f6c:	beq	35f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220cc>
   35f70:	ldr	r3, [r6, #172]	; 0xac
   35f74:	cmp	r3, #0
   35f78:	beq	35f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220cc>
   35f7c:	ldr	r2, [r3, #4]
   35f80:	cmp	r2, #1
   35f84:	bne	35f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220cc>
   35f88:	ldrd	r2, [r3, #8]
   35f8c:	and	r2, r2, r4
   35f90:	and	r3, r3, r5
   35f94:	orrs	r0, r2, r3
   35f98:	beq	35f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220cc>
   35f9c:	ldr	r3, [r6, #20]
   35fa0:	tst	r3, #32768	; 0x8000
   35fa4:	bne	35f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220cc>
   35fa8:	ldrh	r3, [r6, #24]
   35fac:	ubfx	r3, r3, #7, #3
   35fb0:	cmp	r3, #4
   35fb4:	beq	35f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220cc>
   35fb8:	cmp	r1, sl
   35fbc:	beq	35f58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220cc>
   35fc0:	cmp	r8, fp
   35fc4:	beq	36124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22298>
   35fc8:	str	r6, [r9, r8, lsl #2]
   35fcc:	add	r8, r8, #1
   35fd0:	ldr	r6, [r6, #12]
   35fd4:	cmp	r6, #0
   35fd8:	bne	35f64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220d8>
   35fdc:	ldr	r7, [r7, #24]
   35fe0:	cmp	r7, #0
   35fe4:	bne	35f34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x220a8>
   35fe8:	movw	r5, #62536	; 0xf448
   35fec:	movt	r5, #9
   35ff0:	mov	r0, r9
   35ff4:	mov	r1, r8
   35ff8:	mov	r2, #4
   35ffc:	movw	r3, #15564	; 0x3ccc
   36000:	movt	r3, #3
   36004:	movw	r4, #1088	; 0x440
   36008:	bl	13cd0 <qsort@plt>
   3600c:	ldr	r3, [r5, #20]
   36010:	mov	r1, r8
   36014:	movw	r2, #1088	; 0x440
   36018:	mov	r0, r9
   3601c:	movt	r2, #10
   36020:	bl	13448 <elf32_arm_fix_exidx_coverage@plt>
   36024:	movt	r4, #10
   36028:	cmp	r0, #0
   3602c:	mov	r0, r9
   36030:	movwne	r6, #360	; 0x168
   36034:	movtne	r6, #10
   36038:	movne	r3, #1
   3603c:	strne	r3, [r6, #92]	; 0x5c
   36040:	bl	13574 <free@plt>
   36044:	ldr	r0, [r4, #52]	; 0x34
   36048:	mov	r1, r4
   3604c:	bl	1385c <bfd_elf_discard_info@plt>
   36050:	cmp	r0, #0
   36054:	movwlt	r0, #7528	; 0x1d68
   36058:	movtlt	r0, #7
   3605c:	blt	36144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222b8>
   36060:	movw	r6, #360	; 0x168
   36064:	movt	r6, #10
   36068:	movne	r3, #1
   3606c:	movw	r8, #360	; 0x168
   36070:	strne	r3, [r6, #92]	; 0x5c
   36074:	movt	r8, #10
   36078:	ldr	r3, [r6]
   3607c:	cmp	r3, #0
   36080:	beq	36104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22278>
   36084:	ldrb	r3, [r4]
   36088:	movw	r7, #1088	; 0x440
   3608c:	movt	r7, #10
   36090:	and	r3, r3, #3
   36094:	cmp	r3, #2
   36098:	beq	36104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22278>
   3609c:	ldr	r0, [r7, #52]	; 0x34
   360a0:	mov	r1, r7
   360a4:	bl	134a8 <elf32_arm_setup_section_lists@plt>
   360a8:	cmp	r0, #0
   360ac:	beq	36104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22278>
   360b0:	blt	3613c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222b0>
   360b4:	movw	r0, #30224	; 0x7610
   360b8:	movt	r0, #3
   360bc:	bl	20f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0b4>
   360c0:	ldr	r3, [r8]
   360c4:	ldrd	r4, [r5, #8]
   360c8:	movw	r2, #23812	; 0x5d04
   360cc:	ldr	r0, [r7, #52]	; 0x34
   360d0:	movt	r2, #3
   360d4:	ldr	r1, [r3, #16]
   360d8:	movw	r3, #24924	; 0x615c
   360dc:	str	r2, [sp, #8]
   360e0:	movt	r3, #3
   360e4:	mov	r2, r7
   360e8:	str	r3, [sp, #12]
   360ec:	strd	r4, [sp]
   360f0:	bl	13dcc <elf32_arm_size_stubs@plt>
   360f4:	cmp	r0, #0
   360f8:	movweq	r0, #7624	; 0x1dc8
   360fc:	movteq	r0, #7
   36100:	beq	36144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x222b8>
   36104:	ldr	r0, [r6, #92]	; 0x5c
   36108:	cmn	r0, #1
   3610c:	beq	3611c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22290>
   36110:	add	sp, sp, #20
   36114:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36118:	b	35e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f88>
   3611c:	add	sp, sp, #20
   36120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36124:	mov	r0, r9
   36128:	lsl	r1, r8, #3
   3612c:	bl	13724 <xrealloc@plt>
   36130:	lsl	fp, r8, #1
   36134:	mov	r9, r0
   36138:	b	35fc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2213c>
   3613c:	movw	r0, #7560	; 0x1d88
   36140:	movt	r0, #7
   36144:	add	sp, sp, #20
   36148:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3614c:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   36150:	mov	r8, r7
   36154:	b	35fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2215c>
   36158:			; <UNDEFINED> instruction: 0x0009fab8
   3615c:	push	{r3, lr}
   36160:	mov	r0, #1
   36164:	bl	35e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x21f88>
   36168:	movw	r3, #360	; 0x168
   3616c:	movt	r3, #10
   36170:	mvn	r2, #0
   36174:	str	r2, [r3, #92]	; 0x5c
   36178:	pop	{r3, pc}
   3617c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36180:	mov	r8, r0
   36184:	ldr	r3, [r8, #168]	; 0xa8
   36188:	sub	sp, sp, #20
   3618c:	ldr	r0, [pc, #360]	; 362fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22470>
   36190:	ldr	r2, [r8, #4]
   36194:	ldr	r3, [r3, #2508]	; 0x9cc
   36198:	ldr	fp, [r2, #436]	; 0x1b4
   3619c:	ldr	r6, [r3, #24]
   361a0:	ldr	r3, [r3, #20]
   361a4:	ldr	r1, [r6, #88]	; 0x58
   361a8:	cmp	r1, r0
   361ac:	beq	362dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22450>
   361b0:	ldr	r7, [r1, #172]	; 0xac
   361b4:	ldr	r1, [r7, #68]	; 0x44
   361b8:	cmp	r1, #0
   361bc:	beq	362b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22424>
   361c0:	ldr	r9, [r6, #80]	; 0x50
   361c4:	add	r9, r1, r9
   361c8:	ldrd	r4, [r6, #48]	; 0x30
   361cc:	mov	r0, #4
   361d0:	ldr	ip, [r2, #84]	; 0x54
   361d4:	mov	r1, #0
   361d8:	subs	r4, r4, #16
   361dc:	str	r3, [sp, #12]
   361e0:	mov	r2, r9
   361e4:	sbc	r5, r5, #0
   361e8:	blx	ip
   361ec:	ldr	ip, [r8, #4]
   361f0:	mov	r0, r4
   361f4:	mov	r1, r5
   361f8:	add	r2, r9, #4
   361fc:	mov	sl, #0
   36200:	ldr	ip, [ip, #84]	; 0x54
   36204:	blx	ip
   36208:	ldr	ip, [r8, #4]
   3620c:	mov	r0, #3
   36210:	mov	r1, #0
   36214:	add	r2, r9, #8
   36218:	ldr	ip, [ip, #84]	; 0x54
   3621c:	blx	ip
   36220:	movw	r2, #7732	; 0x1e34
   36224:	movt	r2, #7
   36228:	ldr	r3, [sp, #12]
   3622c:	ldr	r0, [r2]
   36230:	mov	r1, r3
   36234:	add	r3, r9, #16
   36238:	str	r0, [r9, #12]
   3623c:	mov	r0, r8
   36240:	ldr	r2, [fp, #392]	; 0x188
   36244:	ldr	r2, [r2, #24]
   36248:	str	r4, [sp]
   3624c:	bl	33a90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc04>
   36250:	ldrd	r4, [r7, #24]
   36254:	ldrd	r2, [r6, #80]	; 0x50
   36258:	mov	r0, r8
   3625c:	ldrd	r6, [r6, #48]	; 0x30
   36260:	adds	r2, r2, r4
   36264:	str	sl, [sp]
   36268:	adc	r3, r3, r5
   3626c:	bl	13e80 <bfd_seek@plt>
   36270:	cmp	r0, sl
   36274:	movne	r0, sl
   36278:	beq	36284 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x223f8>
   3627c:	add	sp, sp, #20
   36280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36284:	str	r8, [sp]
   36288:	mov	r0, r9
   3628c:	mov	r2, r6
   36290:	mov	r3, r7
   36294:	bl	139c4 <bfd_bwrite@plt>
   36298:	cmp	r7, r1
   3629c:	cmpeq	r6, r0
   362a0:	movne	r0, #0
   362a4:	moveq	r0, #1
   362a8:	add	sp, sp, #20
   362ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   362b0:	ldr	r9, [r6, #140]	; 0x8c
   362b4:	cmp	r9, #0
   362b8:	bne	361c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2233c>
   362bc:	ldr	r0, [r6, #48]	; 0x30
   362c0:	str	r3, [sp, #12]
   362c4:	bl	137b4 <xmalloc@plt>
   362c8:	ldr	r2, [r8, #4]
   362cc:	ldr	r3, [sp, #12]
   362d0:	mov	r9, r0
   362d4:	str	r0, [r6, #140]	; 0x8c
   362d8:	b	361c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2233c>
   362dc:	mov	r2, #5
   362e0:	movw	r1, #7660	; 0x1dec
   362e4:	mov	r0, #0
   362e8:	movt	r1, #7
   362ec:	bl	13688 <dcgettext@plt>
   362f0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   362f4:	mov	r0, #1
   362f8:	b	3627c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x223f0>
   362fc:			; <UNDEFINED> instruction: 0x0009fab8
   36300:	push	{r4, r5, r6, r7, r8, lr}
   36304:	mov	r4, r0
   36308:	bl	13a24 <strlen@plt>
   3630c:	movw	r5, #1336	; 0x538
   36310:	movt	r5, #10
   36314:	mov	r6, #0
   36318:	sub	r2, r4, #1
   3631c:	ldrb	r1, [r5, #72]	; 0x48
   36320:	mov	r8, r0
   36324:	b	36330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x224a4>
   36328:	cmp	r3, r1
   3632c:	addeq	r6, r6, #1
   36330:	ldrb	r3, [r2, #1]!
   36334:	cmp	r3, #0
   36338:	bne	36328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2249c>
   3633c:	movw	r7, #1240	; 0x4d8
   36340:	movt	r7, #10
   36344:	ldr	r0, [r7]
   36348:	bl	13a24 <strlen@plt>
   3634c:	mla	r0, r6, r0, r0
   36350:	add	r0, r0, r8
   36354:	add	r0, r0, #1
   36358:	bl	137b4 <xmalloc@plt>
   3635c:	ldr	r6, [r7]
   36360:	mov	r1, r6
   36364:	mov	r8, r0
   36368:	bl	13664 <stpcpy@plt>
   3636c:	ldrb	r3, [r4], #1
   36370:	cmp	r3, #0
   36374:	beq	363a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2251c>
   36378:	ldrb	r2, [r5, #72]	; 0x48
   3637c:	cmp	r2, r3
   36380:	strbne	r3, [r0]
   36384:	addne	r0, r0, #1
   36388:	bne	3636c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x224e0>
   3638c:	strb	r2, [r0]
   36390:	mov	r1, r6
   36394:	add	r0, r0, #1
   36398:	bl	13664 <stpcpy@plt>
   3639c:	ldrb	r3, [r4], #1
   363a0:	cmp	r3, #0
   363a4:	bne	36378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x224ec>
   363a8:	strb	r3, [r0]
   363ac:	mov	r0, r8
   363b0:	pop	{r4, r5, r6, r7, r8, pc}
   363b4:	movw	r2, #63248	; 0xf710
   363b8:	movt	r2, #9
   363bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   363c0:	sub	sp, sp, #68	; 0x44
   363c4:	ldr	r3, [r2]
   363c8:	mov	r8, r0
   363cc:	str	r1, [sp, #8]
   363d0:	mov	r0, r1
   363d4:	movw	r1, #8320	; 0x2080
   363d8:	movt	r1, #7
   363dc:	str	r2, [sp, #20]
   363e0:	str	r3, [sp, #60]	; 0x3c
   363e4:	bl	13cb8 <fopen64@plt>
   363e8:	subs	r7, r0, #0
   363ec:	moveq	r0, r7
   363f0:	beq	36628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2279c>
   363f4:	mov	r0, #256	; 0x100
   363f8:	movw	r3, #1336	; 0x538
   363fc:	movt	r3, #10
   36400:	str	r3, [sp, #12]
   36404:	bl	137b4 <xmalloc@plt>
   36408:	mov	r6, #256	; 0x100
   3640c:	mov	r4, r0
   36410:	mov	r5, r4
   36414:	b	36458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x225cc>
   36418:	bl	13a24 <strlen@plt>
   3641c:	sub	r9, r9, #1
   36420:	cmp	r0, r9
   36424:	bne	36480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x225f4>
   36428:	add	r3, r4, r6
   3642c:	ldrb	r3, [r3, #-2]
   36430:	cmp	r3, #10
   36434:	beq	36480 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x225f4>
   36438:	lsl	r9, r6, #1
   3643c:	mov	r0, r4
   36440:	sub	r5, r6, #1
   36444:	mov	r1, r9
   36448:	mov	r6, r9
   3644c:	bl	13724 <xrealloc@plt>
   36450:	add	r5, r0, r5
   36454:	mov	r4, r0
   36458:	rsb	r9, r5, r4
   3645c:	mov	r0, r5
   36460:	add	r9, r9, r6
   36464:	mov	r2, r7
   36468:	mov	r1, r9
   3646c:	bl	13580 <fgets@plt>
   36470:	cmp	r0, #0
   36474:	bne	36418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2258c>
   36478:	cmp	r4, r5
   3647c:	beq	36614 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22788>
   36480:	mov	r1, #10
   36484:	mov	r0, r4
   36488:	bl	13a48 <strchr@plt>
   3648c:	cmp	r0, #0
   36490:	movne	r1, #0
   36494:	strbne	r1, [r0]
   36498:	mov	r0, r4
   3649c:	mov	r1, #35	; 0x23
   364a0:	bl	13a48 <strchr@plt>
   364a4:	cmp	r0, #0
   364a8:	movne	r2, #0
   364ac:	strbne	r2, [r0]
   364b0:	mov	r2, r4
   364b4:	mov	r9, r2
   364b8:	ldrb	r5, [r2], #1
   364bc:	cmp	r5, #32
   364c0:	beq	364b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22628>
   364c4:	cmp	r5, #9
   364c8:	beq	364b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22628>
   364cc:	sub	r3, r5, #11
   364d0:	cmp	r3, #2
   364d4:	bls	364b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22628>
   364d8:	cmp	r5, #0
   364dc:	beq	36604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22778>
   364e0:	movw	r1, #7736	; 0x1e38
   364e4:	mov	r0, r9
   364e8:	movt	r1, #7
   364ec:	mov	r2, #7
   364f0:	bl	13e08 <strncmp@plt>
   364f4:	cmp	r0, #0
   364f8:	bne	36510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22684>
   364fc:	ldrb	r3, [r9, #7]
   36500:	cmp	r3, #32
   36504:	cmpne	r3, #9
   36508:	addeq	fp, r9, #8
   3650c:	beq	36668 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227dc>
   36510:	tst	r5, #223	; 0xdf
   36514:	moveq	r3, #0
   36518:	movne	r3, #1
   3651c:	cmp	r5, #61	; 0x3d
   36520:	moveq	r5, #0
   36524:	andne	r5, r3, #1
   36528:	cmp	r5, #0
   3652c:	addne	r1, r9, #1
   36530:	bne	3654c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226c0>
   36534:	b	367ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22960>
   36538:	cmp	r2, #9
   3653c:	beq	36574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226e8>
   36540:	sub	r2, r2, #11
   36544:	cmp	r2, #2
   36548:	bls	36574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226e8>
   3654c:	mov	r3, r1
   36550:	ldrb	r2, [r1], #1
   36554:	tst	r2, #223	; 0xdf
   36558:	moveq	r0, #0
   3655c:	movne	r0, #1
   36560:	cmp	r2, #61	; 0x3d
   36564:	moveq	r0, #0
   36568:	andne	r0, r0, #1
   3656c:	cmp	r0, #0
   36570:	bne	36538 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226ac>
   36574:	cmp	r9, r3
   36578:	bne	3658c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22700>
   3657c:	b	367e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2295c>
   36580:	sub	r3, r3, #1
   36584:	cmp	r9, r3
   36588:	beq	3678c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22900>
   3658c:	ldrb	r2, [r3, #-1]
   36590:	cmp	r2, #47	; 0x2f
   36594:	beq	36580 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x226f4>
   36598:	rsb	r3, r9, r3
   3659c:	mov	r5, r3
   365a0:	ldr	sl, [r8]
   365a4:	cmp	sl, #0
   365a8:	beq	367a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22914>
   365ac:	ldr	r2, [r8, #4]
   365b0:	ldr	r1, [r8, #8]
   365b4:	add	r3, r2, #1
   365b8:	add	r0, r5, r3
   365bc:	cmp	r0, r1
   365c0:	bcs	367c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22934>
   365c4:	ldr	r1, [sp, #12]
   365c8:	str	r3, [r8, #4]
   365cc:	ldrb	r3, [r1, #72]	; 0x48
   365d0:	strb	r3, [sl, r2]
   365d4:	ldr	r3, [r8]
   365d8:	ldr	r0, [r8, #4]
   365dc:	mov	r2, r5
   365e0:	add	r0, r3, r0
   365e4:	mov	r1, r9
   365e8:	bl	135c8 <memcpy@plt>
   365ec:	ldr	r2, [r8, #4]
   365f0:	ldr	r3, [r8]
   365f4:	add	r5, r5, r2
   365f8:	mov	r2, #0
   365fc:	str	r5, [r8, #4]
   36600:	strb	r2, [r3, r5]
   36604:	mov	r0, r7
   36608:	bl	139dc <feof@plt>
   3660c:	cmp	r0, #0
   36610:	beq	36410 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22584>
   36614:	mov	r0, r4
   36618:	bl	13574 <free@plt>
   3661c:	mov	r0, r7
   36620:	bl	13b80 <fclose@plt>
   36624:	mov	r0, #1
   36628:	ldr	r1, [sp, #20]
   3662c:	ldr	r2, [sp, #60]	; 0x3c
   36630:	ldr	r3, [r1]
   36634:	cmp	r2, r3
   36638:	bne	367f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22968>
   3663c:	add	sp, sp, #68	; 0x44
   36640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36644:	mov	r3, #0
   36648:	strb	r3, [r9]
   3664c:	ldrb	r3, [fp]
   36650:	add	r9, r9, #1
   36654:	cmp	r3, #0
   36658:	bne	366b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22824>
   3665c:	cmp	r5, #0
   36660:	beq	36604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22778>
   36664:	mov	fp, r9
   36668:	ldrb	r3, [fp]
   3666c:	cmp	r3, #32
   36670:	cmpne	r3, #9
   36674:	beq	366a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2281c>
   36678:	cmp	r3, #0
   3667c:	beq	36604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22778>
   36680:	add	r3, fp, #1
   36684:	b	36690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22804>
   36688:	cmp	r5, #0
   3668c:	beq	36644 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227b8>
   36690:	mov	r9, r3
   36694:	ldrb	r5, [r3], #1
   36698:	cmp	r5, #9
   3669c:	cmpne	r5, #32
   366a0:	bne	36688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227fc>
   366a4:	b	36644 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227b8>
   366a8:	add	fp, fp, #1
   366ac:	b	36668 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227dc>
   366b0:	cmp	r3, #47	; 0x2f
   366b4:	moveq	sl, #0
   366b8:	beq	36724 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22898>
   366bc:	ldr	r0, [sp, #8]
   366c0:	mov	r1, #47	; 0x2f
   366c4:	bl	13c1c <strrchr@plt>
   366c8:	ldr	r1, [sp, #8]
   366cc:	mov	sl, r0
   366d0:	mov	r0, fp
   366d4:	rsb	sl, r1, sl
   366d8:	bl	13a24 <strlen@plt>
   366dc:	add	r2, sl, #1
   366e0:	str	r2, [sp, #16]
   366e4:	mov	r3, r0
   366e8:	add	r0, r0, #2
   366ec:	add	r0, r0, sl
   366f0:	str	r3, [sp, #4]
   366f4:	bl	137b4 <xmalloc@plt>
   366f8:	ldr	r2, [sp, #16]
   366fc:	ldr	r1, [sp, #8]
   36700:	mov	sl, r0
   36704:	bl	135c8 <memcpy@plt>
   36708:	ldr	r1, [sp, #16]
   3670c:	ldr	r3, [sp, #4]
   36710:	add	r0, sl, r1
   36714:	mov	r1, fp
   36718:	add	r2, r3, #1
   3671c:	mov	fp, sl
   36720:	bl	135c8 <memcpy@plt>
   36724:	mov	r1, #0
   36728:	mov	r0, fp
   3672c:	mov	r2, r1
   36730:	add	r3, sp, #24
   36734:	bl	13bd4 <glob64@plt>
   36738:	cmp	r0, #0
   3673c:	bne	36778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x228ec>
   36740:	ldr	r3, [sp, #24]
   36744:	cmp	r3, #0
   36748:	movne	fp, r0
   3674c:	beq	36770 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x228e4>
   36750:	ldr	r3, [sp, #28]
   36754:	mov	r0, r8
   36758:	ldr	r1, [r3, fp, lsl #2]
   3675c:	add	fp, fp, #1
   36760:	bl	363b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22528>
   36764:	ldr	r3, [sp, #24]
   36768:	cmp	fp, r3
   3676c:	bcc	36750 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x228c4>
   36770:	add	r0, sp, #24
   36774:	bl	13c34 <globfree64@plt>
   36778:	cmp	sl, #0
   3677c:	beq	3665c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227d0>
   36780:	mov	r0, sl
   36784:	bl	13574 <free@plt>
   36788:	b	3665c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x227d0>
   3678c:	ldr	sl, [r8]
   36790:	mov	r3, #0
   36794:	mov	r5, r3
   36798:	cmp	sl, #0
   3679c:	bne	365ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22720>
   367a0:	add	r0, r3, #256	; 0x100
   367a4:	add	r0, r0, #1
   367a8:	str	r0, [r8, #8]
   367ac:	bl	137b4 <xmalloc@plt>
   367b0:	mov	r3, r0
   367b4:	stm	r8, {r0, sl}
   367b8:	mov	r0, sl
   367bc:	b	365dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22750>
   367c0:	add	r1, r1, #256	; 0x100
   367c4:	mov	r0, sl
   367c8:	add	r1, r1, r5
   367cc:	str	r1, [r8, #8]
   367d0:	bl	13724 <xrealloc@plt>
   367d4:	ldr	r2, [r8, #4]
   367d8:	add	r3, r2, #1
   367dc:	mov	sl, r0
   367e0:	str	r0, [r8]
   367e4:	b	365c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22738>
   367e8:	mov	r5, #0
   367ec:	mov	r3, r5
   367f0:	b	365a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22714>
   367f4:	bl	13694 <__stack_chk_fail@plt>
   367f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   367fc:	movw	r6, #1088	; 0x440
   36800:	movt	r6, #10
   36804:	movw	r5, #63248	; 0xf710
   36808:	movt	r5, #9
   3680c:	ldr	r7, [r0, #4]
   36810:	ldr	r3, [r6, #52]	; 0x34
   36814:	sub	sp, sp, #8
   36818:	ldr	r2, [r5]
   3681c:	mov	r8, r0
   36820:	mov	r9, r1
   36824:	mov	r0, r7
   36828:	ldr	r3, [r3, #4]
   3682c:	str	r2, [sp, #4]
   36830:	ldr	r1, [r3]
   36834:	bl	135f8 <bfd_openr@plt>
   36838:	subs	r4, r0, #0
   3683c:	moveq	r0, r4
   36840:	beq	36890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a04>
   36844:	ldr	r3, [r4, #40]	; 0x28
   36848:	mov	r1, #1
   3684c:	orr	r3, r3, #1048576	; 0x100000
   36850:	str	r3, [r4, #40]	; 0x28
   36854:	bl	13d48 <bfd_check_format@plt>
   36858:	subs	sl, r0, #0
   3685c:	beq	36884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x229f8>
   36860:	ldr	r0, [r4, #40]	; 0x28
   36864:	ubfx	r0, r0, #5, #20
   36868:	ands	sl, r0, #64	; 0x40
   3686c:	beq	36884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x229f8>
   36870:	ldr	r3, [r6, #52]	; 0x34
   36874:	ldr	r2, [r4, #4]
   36878:	ldr	r3, [r3, #4]
   3687c:	cmp	r2, r3
   36880:	beq	368a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a1c>
   36884:	mov	r0, r4
   36888:	bl	13c4c <bfd_close@plt>
   3688c:	mov	r0, #0
   36890:	ldr	r2, [sp, #4]
   36894:	ldr	r3, [r5]
   36898:	cmp	r2, r3
   3689c:	bne	36a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bec>
   368a0:	add	sp, sp, #8
   368a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   368a8:	cmp	r9, #0
   368ac:	movwne	r9, #360	; 0x168
   368b0:	movtne	r9, #10
   368b4:	bne	36948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22abc>
   368b8:	mov	r0, r4
   368bc:	mov	r1, sp
   368c0:	bl	13a0c <bfd_elf_get_bfd_needed_list@plt>
   368c4:	cmp	r0, #0
   368c8:	beq	369f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b6c>
   368cc:	ldr	r3, [sp]
   368d0:	movw	r9, #360	; 0x168
   368d4:	movt	r9, #10
   368d8:	cmp	r3, #0
   368dc:	beq	36948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22abc>
   368e0:	movw	r0, #15664	; 0x3d30
   368e4:	movt	r0, #3
   368e8:	str	r3, [r9, #96]	; 0x60
   368ec:	mov	r2, #0
   368f0:	movw	r3, #32636	; 0x7f7c
   368f4:	str	r2, [r9, #100]	; 0x64
   368f8:	movt	r3, #3
   368fc:	str	r3, [r9, #4]
   36900:	bl	24348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104bc>
   36904:	ldr	r3, [r9, #100]	; 0x64
   36908:	cmp	r3, #0
   3690c:	bne	369e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b5c>
   36910:	ldr	r6, [sp]
   36914:	cmp	r6, #0
   36918:	bne	3692c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22aa0>
   3691c:	b	369e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b5c>
   36920:	ldr	r6, [r6]
   36924:	cmp	r6, #0
   36928:	beq	369e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b5c>
   3692c:	movw	r1, #7796	; 0x1e74
   36930:	ldr	r0, [r6, #8]
   36934:	movt	r1, #7
   36938:	mov	r2, #7
   3693c:	bl	13e08 <strncmp@plt>
   36940:	cmp	r0, #0
   36944:	bne	36920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a94>
   36948:	mov	r0, r4
   3694c:	ldr	r1, [pc, #296]	; 36a7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bf0>
   36950:	bl	135b0 <bfd_stat@plt>
   36954:	cmp	r0, #0
   36958:	bne	369b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b24>
   3695c:	ldr	r0, [r4]
   36960:	bl	138bc <lbasename@plt>
   36964:	movw	r3, #1464	; 0x5b8
   36968:	movt	r3, #10
   3696c:	ldr	r3, [r3]
   36970:	cmp	r3, #0
   36974:	mov	r6, r0
   36978:	bne	369c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b38>
   3697c:	movw	r0, #15664	; 0x3d30
   36980:	movt	r0, #3
   36984:	mov	r2, #0
   36988:	movw	r3, #27580	; 0x6bbc
   3698c:	str	r2, [r9, #208]	; 0xd0
   36990:	movt	r3, #3
   36994:	str	r3, [r9, #4]
   36998:	bl	24348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104bc>
   3699c:	ldr	r3, [r9, #208]	; 0xd0
   369a0:	cmp	r3, #0
   369a4:	beq	36a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b80>
   369a8:	mov	r0, #1
   369ac:	b	36890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a04>
   369b0:	movw	r0, #7804	; 0x1e7c
   369b4:	mov	r1, r4
   369b8:	movt	r0, #7
   369bc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   369c0:	b	3695c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ad0>
   369c4:	mov	r2, #5
   369c8:	movw	r1, #7836	; 0x1e9c
   369cc:	mov	r0, #0
   369d0:	movt	r1, #7
   369d4:	bl	13688 <dcgettext@plt>
   369d8:	mov	r1, r6
   369dc:	mov	r2, r7
   369e0:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   369e4:	b	3697c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22af0>
   369e8:	mov	r0, r4
   369ec:	bl	13c4c <bfd_close@plt>
   369f0:	mov	r0, #0
   369f4:	b	36890 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a04>
   369f8:	movw	r0, #7744	; 0x1e40
   369fc:	mov	r1, r4
   36a00:	movt	r0, #7
   36a04:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   36a08:	b	368cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22a40>
   36a0c:	mov	r0, r4
   36a10:	mov	r1, r6
   36a14:	bl	13cac <bfd_elf_set_dt_needed_name@plt>
   36a18:	ldr	r0, [r8]
   36a1c:	cmp	r0, #0
   36a20:	beq	36a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22be4>
   36a24:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   36a28:	tst	r0, #4
   36a2c:	beq	36a70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22be4>
   36a30:	mov	r1, #14
   36a34:	mov	r0, r4
   36a38:	bl	13a3c <bfd_elf_set_dyn_lib_class@plt>
   36a3c:	ldr	r3, [r4, #4]
   36a40:	movw	r1, #1088	; 0x440
   36a44:	mov	r0, r4
   36a48:	movt	r1, #10
   36a4c:	ldr	r3, [r3, #360]	; 0x168
   36a50:	blx	r3
   36a54:	cmp	r0, #0
   36a58:	bne	369a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b1c>
   36a5c:	mov	r1, r4
   36a60:	movw	r0, #12728	; 0x31b8
   36a64:	movt	r0, #5
   36a68:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   36a6c:	b	369a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22b1c>
   36a70:	mov	r1, #2
   36a74:	b	36a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ba8>
   36a78:	bl	13694 <__stack_chk_fail@plt>
   36a7c:	ldrdeq	r0, [sl], -r0	; <UNPREDICTABLE>
   36a80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36a84:	movw	r3, #63248	; 0xf710
   36a88:	ldr	r6, [r1, #4]
   36a8c:	movt	r3, #9
   36a90:	mov	fp, r0
   36a94:	mov	r8, r2
   36a98:	ldr	r2, [r3]
   36a9c:	sub	sp, sp, #28
   36aa0:	ldrb	r0, [r6]
   36aa4:	str	r3, [sp, #4]
   36aa8:	cmp	r0, #47	; 0x2f
   36aac:	str	r2, [sp, #20]
   36ab0:	beq	36ba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d1c>
   36ab4:	cmp	fp, #0
   36ab8:	beq	36b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22cf4>
   36abc:	ldrb	r2, [fp]
   36ac0:	cmp	r2, #0
   36ac4:	beq	36b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22cf4>
   36ac8:	ldr	r2, [r1]
   36acc:	mov	r0, r6
   36ad0:	str	r6, [sp, #16]
   36ad4:	movw	r7, #1336	; 0x538
   36ad8:	movt	r7, #10
   36adc:	str	r2, [sp, #12]
   36ae0:	bl	13a24 <strlen@plt>
   36ae4:	add	r9, r0, #2
   36ae8:	b	36b5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22cd0>
   36aec:	rsb	sl, fp, r4
   36af0:	add	r0, sl, r9
   36af4:	bl	137b4 <xmalloc@plt>
   36af8:	cmp	r4, fp
   36afc:	mov	r5, r0
   36b00:	moveq	r0, r0
   36b04:	beq	36b24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c98>
   36b08:	mov	r1, fp
   36b0c:	mov	r2, sl
   36b10:	bl	135c8 <memcpy@plt>
   36b14:	add	r0, sl, #1
   36b18:	add	r0, r5, r0
   36b1c:	mov	r1, #47	; 0x2f
   36b20:	strb	r1, [r5, sl]
   36b24:	mov	r1, r6
   36b28:	bl	13814 <strcpy@plt>
   36b2c:	add	r0, sp, #12
   36b30:	mov	r1, r8
   36b34:	str	r5, [sp, #16]
   36b38:	bl	367f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2296c>
   36b3c:	cmp	r0, #0
   36b40:	bne	36ba0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d14>
   36b44:	mov	r0, r5
   36b48:	bl	13574 <free@plt>
   36b4c:	ldrb	r3, [r4]
   36b50:	cmp	r3, #0
   36b54:	beq	36b80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22cf4>
   36b58:	add	fp, r4, #1
   36b5c:	mov	r0, fp
   36b60:	ldrb	r1, [r7, #72]	; 0x48
   36b64:	bl	13a48 <strchr@plt>
   36b68:	subs	r4, r0, #0
   36b6c:	bne	36aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c60>
   36b70:	mov	r0, fp
   36b74:	bl	13a24 <strlen@plt>
   36b78:	add	r4, fp, r0
   36b7c:	b	36aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22c60>
   36b80:	mov	r0, #0
   36b84:	ldr	r1, [sp, #4]
   36b88:	ldr	r2, [sp, #20]
   36b8c:	ldr	r3, [r1]
   36b90:	cmp	r2, r3
   36b94:	bne	36bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d2c>
   36b98:	add	sp, sp, #28
   36b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36ba0:	mov	r0, #1
   36ba4:	b	36b84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22cf8>
   36ba8:	mov	r0, r1
   36bac:	mov	r1, r8
   36bb0:	bl	367f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2296c>
   36bb4:	b	36b84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22cf8>
   36bb8:	bl	13694 <__stack_chk_fail@plt>
   36bbc:	push	{r4, r5, r6, r7, r8, r9, lr}
   36bc0:	movw	r7, #360	; 0x168
   36bc4:	movt	r7, #10
   36bc8:	movw	r6, #63248	; 0xf710
   36bcc:	movt	r6, #9
   36bd0:	sub	sp, sp, #116	; 0x74
   36bd4:	ldr	r3, [r7, #208]	; 0xd0
   36bd8:	mov	r8, r0
   36bdc:	ldr	r2, [r6]
   36be0:	cmp	r3, #0
   36be4:	str	r2, [sp, #108]	; 0x6c
   36be8:	beq	36c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d78>
   36bec:	ldr	r2, [sp, #108]	; 0x6c
   36bf0:	ldr	r3, [r6]
   36bf4:	cmp	r2, r3
   36bf8:	bne	36d08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e7c>
   36bfc:	add	sp, sp, #116	; 0x74
   36c00:	pop	{r4, r5, r6, r7, r8, r9, pc}
   36c04:	ldr	r0, [r0, #16]
   36c08:	cmp	r0, #0
   36c0c:	beq	36bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d60>
   36c10:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   36c14:	tst	r0, #1
   36c18:	bne	36bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d60>
   36c1c:	ldr	r0, [r8, #16]
   36c20:	mov	r1, sp
   36c24:	bl	135b0 <bfd_stat@plt>
   36c28:	cmp	r0, #0
   36c2c:	bne	36cd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e44>
   36c30:	ldrd	r4, [sp]
   36c34:	ldrd	r2, [r7, #104]	; 0x68
   36c38:	cmp	r5, r3
   36c3c:	cmpeq	r4, r2
   36c40:	beq	36ce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e58>
   36c44:	ldr	r3, [r7, #212]	; 0xd4
   36c48:	mov	r1, #47	; 0x2f
   36c4c:	ldr	r4, [r3, #8]
   36c50:	mov	r0, r4
   36c54:	bl	13a48 <strchr@plt>
   36c58:	cmp	r0, #0
   36c5c:	bne	36bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d60>
   36c60:	mov	r0, r4
   36c64:	movw	r1, #7880	; 0x1ec8
   36c68:	movt	r1, #7
   36c6c:	bl	1340c <strstr@plt>
   36c70:	subs	r3, r0, #0
   36c74:	beq	36bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d60>
   36c78:	ldr	r0, [r8, #16]
   36c7c:	add	r9, r3, #4
   36c80:	bl	136f4 <bfd_elf_get_dt_soname@plt>
   36c84:	subs	r5, r0, #0
   36c88:	beq	36d0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e80>
   36c8c:	ldr	r3, [r7, #212]	; 0xd4
   36c90:	mov	r0, r5
   36c94:	movw	r4, #360	; 0x168
   36c98:	movt	r4, #10
   36c9c:	ldr	r1, [r3, #8]
   36ca0:	rsb	r2, r1, r9
   36ca4:	bl	1376c <filename_ncmp@plt>
   36ca8:	cmp	r0, #0
   36cac:	bne	36bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d60>
   36cb0:	ldr	r2, [r4, #212]	; 0xd4
   36cb4:	mov	r3, r5
   36cb8:	movw	r0, #7888	; 0x1ed0
   36cbc:	movt	r0, #7
   36cc0:	ldr	r1, [r2, #8]
   36cc4:	ldr	r2, [r2, #4]
   36cc8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   36ccc:	b	36bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d60>
   36cd0:	ldr	r1, [r8, #16]
   36cd4:	movw	r0, #7852	; 0x1eac
   36cd8:	movt	r0, #7
   36cdc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   36ce0:	b	36bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d60>
   36ce4:	ldrd	r2, [sp, #96]	; 0x60
   36ce8:	ldrd	r4, [r7, #200]	; 0xc8
   36cec:	cmp	r3, r5
   36cf0:	cmpeq	r2, r4
   36cf4:	bne	36c44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22db8>
   36cf8:	orrs	r1, r2, r3
   36cfc:	strne	r8, [r7, #208]	; 0xd0
   36d00:	bne	36bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22d60>
   36d04:	b	36c44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22db8>
   36d08:	bl	13694 <__stack_chk_fail@plt>
   36d0c:	ldr	r0, [r8, #8]
   36d10:	bl	138bc <lbasename@plt>
   36d14:	mov	r5, r0
   36d18:	b	36c8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22e00>
   36d1c:	movw	ip, #1088	; 0x440
   36d20:	movt	ip, #10
   36d24:	ldrb	r3, [ip]
   36d28:	and	r3, r3, #3
   36d2c:	cmp	r3, #1
   36d30:	bne	36d4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ec0>
   36d34:	ldrd	r2, [ip, #120]	; 0x78
   36d38:	mov	r0, #134217728	; 0x8000000
   36d3c:	mov	r1, #0
   36d40:	orr	r2, r2, r0
   36d44:	orr	r3, r3, r1
   36d48:	strd	r2, [ip, #120]	; 0x78
   36d4c:	b	2f1a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b314>
   36d50:	push	{r4, lr}
   36d54:	mov	r1, #0
   36d58:	movw	r0, #9116	; 0x239c
   36d5c:	movt	r0, #7
   36d60:	bl	31118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d28c>
   36d64:	movw	r1, #1032	; 0x408
   36d68:	movw	r2, #1088	; 0x440
   36d6c:	movt	r1, #10
   36d70:	movt	r2, #10
   36d74:	movw	r3, #1336	; 0x538
   36d78:	ldrb	ip, [r1]
   36d7c:	movt	r3, #10
   36d80:	ldrb	r0, [r2, #3]
   36d84:	mov	r4, #1
   36d88:	orr	ip, ip, #32
   36d8c:	str	r4, [r3, #8]
   36d90:	strb	ip, [r1]
   36d94:	orr	r0, r0, #4
   36d98:	mov	r1, #0
   36d9c:	strb	r0, [r2, #3]
   36da0:	str	r1, [r3, #68]	; 0x44
   36da4:	pop	{r4, pc}
   36da8:	ldr	r3, [r0, #180]	; 0xb4
   36dac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36db0:	mov	r4, r0
   36db4:	ldr	r3, [r3, #4]
   36db8:	sub	sp, sp, #52	; 0x34
   36dbc:	movw	r5, #1088	; 0x440
   36dc0:	movt	r5, #10
   36dc4:	mov	r8, r1
   36dc8:	mov	r6, r2
   36dcc:	ldr	r7, [r3, #4]
   36dd0:	subs	r0, r7, #5
   36dd4:	rsbs	r7, r0, #0
   36dd8:	adcs	r7, r7, r0
   36ddc:	cmp	r7, #0
   36de0:	streq	r7, [sp, #16]
   36de4:	ldrne	r3, [r4, #172]	; 0xac
   36de8:	ldrne	r3, [r3, #4]
   36dec:	strne	r3, [sp, #16]
   36df0:	ldrb	r3, [r5]
   36df4:	and	r3, r3, #3
   36df8:	cmp	r3, #2
   36dfc:	beq	37050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x231c4>
   36e00:	ldrb	r3, [r5, #4]
   36e04:	ubfx	r3, r3, #3, #1
   36e08:	cmp	r3, #0
   36e0c:	bne	36f3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230b0>
   36e10:	str	r3, [sp, #20]
   36e14:	cmp	r6, #0
   36e18:	beq	36fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23140>
   36e1c:	movw	sl, #360	; 0x168
   36e20:	movt	sl, #10
   36e24:	ldr	r3, [sl, #216]	; 0xd8
   36e28:	cmp	r3, #0
   36e2c:	bne	36e80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22ff4>
   36e30:	ldr	fp, [pc, #1620]	; 3748c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23600>
   36e34:	add	r9, fp, #192	; 0xc0
   36e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36e3c:	mov	r1, #0
   36e40:	mov	r2, r1
   36e44:	cmp	r0, r1
   36e48:	beq	36e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22fe0>
   36e4c:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   36e50:	cmp	r0, #0
   36e54:	str	r0, [fp, #-16]
   36e58:	beq	36e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22fe0>
   36e5c:	ldr	r3, [r0, #76]	; 0x4c
   36e60:	cmp	r3, #0
   36e64:	ldreq	r3, [fp, #-20]	; 0xffffffec
   36e68:	streq	r3, [r0, #76]	; 0x4c
   36e6c:	cmp	fp, r9
   36e70:	add	fp, fp, #24
   36e74:	bcc	36e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22fac>
   36e78:	mov	r3, #1
   36e7c:	str	r3, [sl, #216]	; 0xd8
   36e80:	ldrb	r3, [r5]
   36e84:	and	r3, r3, #3
   36e88:	cmp	r3, #1
   36e8c:	bls	37160 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x232d4>
   36e90:	cmp	r3, #2
   36e94:	ldr	r5, [r4, #20]
   36e98:	beq	36f7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230f0>
   36e9c:	ldr	r0, [r4, #180]	; 0xb4
   36ea0:	mov	r9, r4
   36ea4:	b	36eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23020>
   36ea8:	ldr	r0, [r9, #180]	; 0xb4
   36eac:	mov	r1, r9
   36eb0:	bl	13a9c <bfd_get_next_section_by_name@plt>
   36eb4:	subs	r9, r0, #0
   36eb8:	beq	36f7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x230f0>
   36ebc:	ldr	r2, [r9, #88]	; 0x58
   36ec0:	cmp	r2, #0
   36ec4:	bne	36ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2301c>
   36ec8:	ldr	r3, [r9, #20]
   36ecc:	tst	r3, #32768	; 0x8000
   36ed0:	bne	36ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2301c>
   36ed4:	eor	r3, r5, r3
   36ed8:	ldr	r0, [r9, #180]	; 0xb4
   36edc:	tst	r3, #3
   36ee0:	bne	36eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23020>
   36ee4:	ldr	r3, [r0, #40]	; 0x28
   36ee8:	tst	r3, #2048	; 0x800
   36eec:	bne	36eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23020>
   36ef0:	ldr	r3, [r0, #172]	; 0xac
   36ef4:	cmp	r3, #0
   36ef8:	beq	36eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23020>
   36efc:	ldrb	r3, [r3, #36]	; 0x24
   36f00:	tst	r3, #16
   36f04:	bne	36eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23020>
   36f08:	mov	r1, r9
   36f0c:	ldr	r2, [r4, #180]	; 0xb4
   36f10:	mov	r3, r4
   36f14:	bl	13e44 <_bfd_elf_match_sections_by_type@plt>
   36f18:	cmp	r0, #0
   36f1c:	beq	36ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2301c>
   36f20:	ldr	r3, [r9, #20]
   36f24:	eor	r5, r5, #8
   36f28:	ldr	r0, [r9, #180]	; 0xb4
   36f2c:	eor	r3, r3, #8
   36f30:	orr	r5, r5, r3
   36f34:	eor	r5, r5, #8
   36f38:	b	36eac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23020>
   36f3c:	ldr	r3, [r4, #20]
   36f40:	ands	r3, r3, #1
   36f44:	beq	36e10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f84>
   36f48:	cmp	r7, #0
   36f4c:	beq	371ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23320>
   36f50:	ldr	r1, [sp, #16]
   36f54:	cmp	r1, #4
   36f58:	beq	37254 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x233c8>
   36f5c:	cmp	r1, #9
   36f60:	movw	r3, #7956	; 0x1f14
   36f64:	movt	r3, #7
   36f68:	movne	r2, #0
   36f6c:	moveq	r2, #1
   36f70:	str	r2, [sp, #20]
   36f74:	moveq	r8, r3
   36f78:	b	36e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f88>
   36f7c:	movw	r3, #8193	; 0x2001
   36f80:	and	r3, r5, r3
   36f84:	cmp	r3, #0
   36f88:	bne	3705c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x231d0>
   36f8c:	ldr	r7, [pc, #1276]	; 37490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23604>
   36f90:	ldr	r3, [r7, #8]
   36f94:	cmp	r3, #0
   36f98:	beq	37200 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23374>
   36f9c:	mov	ip, #0
   36fa0:	str	r7, [sp]
   36fa4:	mov	r0, r4
   36fa8:	mov	r1, r8
   36fac:	mov	r2, r6
   36fb0:	str	ip, [sp, #4]
   36fb4:	str	ip, [sp, #8]
   36fb8:	bl	26494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12608>
   36fbc:	mov	r9, r0
   36fc0:	mov	r0, r9
   36fc4:	add	sp, sp, #52	; 0x34
   36fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36fcc:	mov	r0, r8
   36fd0:	mov	r1, r6
   36fd4:	mov	r2, r6
   36fd8:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   36fdc:	subs	r9, r0, #0
   36fe0:	bne	36ffc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23170>
   36fe4:	b	36e1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f90>
   36fe8:	mov	r0, r9
   36fec:	mov	r1, #0
   36ff0:	bl	22974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeae8>
   36ff4:	subs	r9, r0, #0
   36ff8:	beq	37134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x232a8>
   36ffc:	ldr	r1, [r9, #28]
   37000:	cmp	r1, #0
   37004:	beq	37048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x231bc>
   37008:	ldr	r2, [r1, #20]
   3700c:	cmp	r2, #0
   37010:	beq	37114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23288>
   37014:	ldr	r3, [r4, #20]
   37018:	eor	r2, r2, r3
   3701c:	tst	r2, #3
   37020:	bne	36fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2315c>
   37024:	ldr	r0, [r5, #52]	; 0x34
   37028:	mov	r3, r4
   3702c:	ldr	r2, [r4, #180]	; 0xb4
   37030:	bl	13e44 <_bfd_elf_match_sections_by_type@plt>
   37034:	cmp	r0, #0
   37038:	bne	37114 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23288>
   3703c:	ldr	r3, [r9, #28]
   37040:	cmp	r3, #0
   37044:	bne	36fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2315c>
   37048:	mov	r6, r9
   3704c:	b	36fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2315c>
   37050:	mov	r2, #0
   37054:	str	r2, [sp, #20]
   37058:	b	36e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f88>
   3705c:	ands	r3, r5, #1
   37060:	moveq	r7, r3
   37064:	moveq	r3, r7
   37068:	beq	36f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23110>
   3706c:	ands	r9, r5, #2
   37070:	beq	370b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2322c>
   37074:	ldr	r1, [sp, #16]
   37078:	cmp	r1, #7
   3707c:	movne	r3, #0
   37080:	andeq	r3, r7, #1
   37084:	cmp	r3, #0
   37088:	bne	370b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23224>
   3708c:	cmp	r7, #0
   37090:	bne	370b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2322c>
   37094:	movw	r1, #7992	; 0x1f38
   37098:	mov	r0, r8
   3709c:	movt	r1, #7
   370a0:	mov	r2, #5
   370a4:	bl	13e08 <strncmp@plt>
   370a8:	cmp	r0, #0
   370ac:	bne	370b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2322c>
   370b0:	ldr	r7, [pc, #988]	; 37494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23608>
   370b4:	b	36f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23104>
   370b8:	movw	r3, #1282	; 0x502
   370bc:	and	r3, r5, r3
   370c0:	cmp	r3, #0
   370c4:	beq	371f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2336c>
   370c8:	tst	r5, #4194304	; 0x400000
   370cc:	bne	37268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x233dc>
   370d0:	tst	r5, #1024	; 0x400
   370d4:	bne	37270 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x233e4>
   370d8:	tst	r5, #8
   370dc:	beq	37400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23574>
   370e0:	cmp	r7, #0
   370e4:	bne	37430 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235a4>
   370e8:	movw	r1, #7968	; 0x1f20
   370ec:	mov	r0, r8
   370f0:	movt	r1, #7
   370f4:	mov	r2, #4
   370f8:	bl	13e08 <strncmp@plt>
   370fc:	cmp	r0, #0
   37100:	bne	37440 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235b4>
   37104:	cmp	r9, #0
   37108:	beq	37440 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235b4>
   3710c:	ldr	r7, [pc, #900]	; 37498 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2360c>
   37110:	b	36f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23104>
   37114:	add	r0, r9, #8
   37118:	mov	r1, r4
   3711c:	mov	r2, #0
   37120:	mov	r3, r9
   37124:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   37128:	mov	r0, r9
   3712c:	add	sp, sp, #52	; 0x34
   37130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37134:	cmp	r6, #0
   37138:	beq	37484 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235f8>
   3713c:	mov	r2, r9
   37140:	add	r0, r6, #8
   37144:	mov	r1, r4
   37148:	mov	r3, r6
   3714c:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   37150:	mov	r9, r6
   37154:	mov	r0, r9
   37158:	add	sp, sp, #52	; 0x34
   3715c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37160:	mov	r2, #13
   37164:	movw	r1, #7976	; 0x1f28
   37168:	ldr	r0, [r4]
   3716c:	movt	r1, #7
   37170:	bl	13e08 <strncmp@plt>
   37174:	subs	r2, r0, #0
   37178:	bne	371a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23318>
   3717c:	movw	r3, #62536	; 0xf448
   37180:	movt	r3, #9
   37184:	ldr	r9, [r3, #36]	; 0x24
   37188:	cmp	r9, #0
   3718c:	beq	371a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23318>
   37190:	mov	r1, r4
   37194:	add	r0, r9, #8
   37198:	mov	r3, r9
   3719c:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   371a0:	b	36fc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23134>
   371a4:	ldr	r5, [r4, #20]
   371a8:	b	36e9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23010>
   371ac:	movw	r1, #7968	; 0x1f20
   371b0:	mov	r0, r8
   371b4:	movt	r1, #7
   371b8:	mov	r2, #4
   371bc:	bl	13e08 <strncmp@plt>
   371c0:	cmp	r0, #0
   371c4:	strne	r7, [sp, #20]
   371c8:	bne	36e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f88>
   371cc:	ldrb	r8, [r8, #4]
   371d0:	movw	r2, #7956	; 0x1f14
   371d4:	movw	r3, #7944	; 0x1f08
   371d8:	movt	r2, #7
   371dc:	cmp	r8, #97	; 0x61
   371e0:	movt	r3, #7
   371e4:	mov	r1, #1
   371e8:	str	r1, [sp, #20]
   371ec:	movne	r8, r2
   371f0:	moveq	r8, r3
   371f4:	b	36e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f88>
   371f8:	ldr	r7, [pc, #668]	; 3749c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23610>
   371fc:	b	36f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23104>
   37200:	ldr	r0, [r7]
   37204:	cmp	r0, #0
   37208:	beq	37278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x233ec>
   3720c:	mov	r1, r3
   37210:	mov	r2, r3
   37214:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   37218:	mov	r3, r0
   3721c:	str	r0, [r7, #8]
   37220:	cmp	r3, #0
   37224:	bne	36f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23110>
   37228:	mov	r1, r5
   3722c:	movw	r3, #15940	; 0x3e44
   37230:	mov	r0, r4
   37234:	movt	r3, #1
   37238:	add	r2, r7, #8
   3723c:	bl	229ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb60>
   37240:	subs	r3, r0, #0
   37244:	movweq	r3, #1048	; 0x418
   37248:	movteq	r3, #10
   3724c:	ldreq	r3, [r3]
   37250:	b	36f9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23110>
   37254:	movw	r8, #7944	; 0x1f08
   37258:	mov	r3, #1
   3725c:	movt	r8, #7
   37260:	str	r3, [sp, #20]
   37264:	b	36e14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f88>
   37268:	ldr	r7, [pc, #560]	; 374a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23614>
   3726c:	b	36f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23104>
   37270:	ldr	r7, [pc, #556]	; 374a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23618>
   37274:	b	36f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23104>
   37278:	ldr	r2, [r4]
   3727c:	movw	r3, #1048	; 0x418
   37280:	movt	r3, #10
   37284:	ldrb	r2, [r2, #4]
   37288:	ldr	fp, [r3]
   3728c:	subs	r1, r2, #97	; 0x61
   37290:	rsbs	r2, r1, #0
   37294:	adcs	r2, r2, r1
   37298:	cmp	fp, #0
   3729c:	str	r2, [sp, #16]
   372a0:	beq	3747c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235f0>
   372a4:	str	r5, [sp, #28]
   372a8:	mov	r9, r0
   372ac:	str	r7, [sp, #32]
   372b0:	mov	sl, r0
   372b4:	str	r4, [sp, #36]	; 0x24
   372b8:	mov	r5, r0
   372bc:	str	r6, [sp, #44]	; 0x2c
   372c0:	mov	r7, r0
   372c4:	str	r0, [sp, #24]
   372c8:	mov	r4, r0
   372cc:	str	r8, [sp, #40]	; 0x28
   372d0:	mov	r6, fp
   372d4:	b	37384 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x234f8>
   372d8:	ldrb	r2, [fp, #4]
   372dc:	ldr	r3, [sp, #20]
   372e0:	subs	r2, r2, #97	; 0x61
   372e4:	rsbs	r8, r2, #0
   372e8:	adcs	r8, r8, r2
   372ec:	cmp	r3, #0
   372f0:	bne	37408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2357c>
   372f4:	add	r1, r8, #4
   372f8:	movw	r0, #8000	; 0x1f40
   372fc:	add	r1, fp, r1
   37300:	movt	r0, #7
   37304:	bl	13490 <strcmp@plt>
   37308:	cmp	r0, #0
   3730c:	beq	37408 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2357c>
   37310:	ldr	r3, [sp, #16]
   37314:	subs	r3, r3, r8
   37318:	rsbs	r2, r3, #0
   3731c:	adcs	r2, r2, r3
   37320:	cmp	r5, #0
   37324:	movne	r1, r2
   37328:	orreq	r1, r2, #1
   3732c:	cmp	sl, #0
   37330:	orreq	r2, r2, #1
   37334:	cmp	r1, #0
   37338:	movne	r5, r6
   3733c:	cmp	r2, #0
   37340:	beq	373b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23524>
   37344:	ldr	r2, [r6, #28]
   37348:	cmp	r2, #0
   3734c:	beq	37370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x234e4>
   37350:	ldr	r2, [r2, #20]
   37354:	ands	r1, r2, #1
   37358:	movne	sl, r6
   3735c:	cmp	r1, #0
   37360:	beq	37370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x234e4>
   37364:	tst	r2, #8
   37368:	mov	r4, r6
   3736c:	movne	r7, r6
   37370:	ldr	r2, [r6, #16]
   37374:	cmp	r2, #0
   37378:	beq	373c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2353c>
   3737c:	mov	r9, r6
   37380:	mov	r6, r2
   37384:	ldr	r2, [r6, #72]	; 0x48
   37388:	cmp	r2, #0
   3738c:	blt	373b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23524>
   37390:	ldr	fp, [r6, #24]
   37394:	movw	r1, #7968	; 0x1f20
   37398:	mov	r2, #4
   3739c:	movt	r1, #7
   373a0:	mov	r0, fp
   373a4:	bl	13e08 <strncmp@plt>
   373a8:	cmp	r0, #0
   373ac:	beq	372d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2344c>
   373b0:	ldr	r2, [r6, #28]
   373b4:	cmp	r2, #0
   373b8:	beq	37370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x234e4>
   373bc:	ldr	r2, [r2, #20]
   373c0:	and	r1, r2, #1
   373c4:	b	3735c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x234d0>
   373c8:	mov	fp, r6
   373cc:	str	r4, [sp, #24]
   373d0:	mov	r3, r7
   373d4:	mov	ip, r5
   373d8:	ldr	r7, [sp, #32]
   373dc:	ldr	r5, [sp, #28]
   373e0:	ldr	r4, [sp, #36]	; 0x24
   373e4:	ldr	r8, [sp, #40]	; 0x28
   373e8:	ldr	r6, [sp, #44]	; 0x2c
   373ec:	cmp	sl, #0
   373f0:	beq	37454 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x235c8>
   373f4:	mov	r3, sl
   373f8:	str	sl, [r7, #8]
   373fc:	b	37220 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23394>
   37400:	ldr	r7, [pc, #160]	; 374a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2361c>
   37404:	b	36f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23104>
   37408:	str	r4, [sp, #24]
   3740c:	mov	r3, r7
   37410:	mov	ip, r5
   37414:	ldr	r7, [sp, #32]
   37418:	ldr	r5, [sp, #28]
   3741c:	mov	fp, r9
   37420:	ldr	r4, [sp, #36]	; 0x24
   37424:	ldr	r8, [sp, #40]	; 0x28
   37428:	ldr	r6, [sp, #44]	; 0x2c
   3742c:	b	373ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23560>
   37430:	ldr	r2, [sp, #16]
   37434:	cmp	r2, #4
   37438:	cmpne	r2, #9
   3743c:	beq	37104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23278>
   37440:	ldr	r3, [pc, #100]	; 374ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23620>
   37444:	tst	r5, #16
   37448:	add	r7, r3, #24
   3744c:	movne	r7, r3
   37450:	b	36f90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23104>
   37454:	cmp	ip, #0
   37458:	movne	sl, ip
   3745c:	bne	373f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23568>
   37460:	cmp	r3, #0
   37464:	movne	sl, r3
   37468:	bne	373f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23568>
   3746c:	ldr	sl, [sp, #24]
   37470:	cmp	sl, #0
   37474:	moveq	sl, fp
   37478:	b	373f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23568>
   3747c:	mov	sl, fp
   37480:	b	373f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23568>
   37484:	movw	r6, #381	; 0x17d
   37488:	b	36e1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22f90>
   3748c:	andeq	pc, r9, ip, ror r4	; <UNPREDICTABLE>
   37490:	andeq	pc, r9, r4, lsr #10
   37494:	strdeq	pc, [r9], -r4
   37498:	ldrdeq	pc, [r9], -ip
   3749c:	andeq	pc, r9, r4, asr #9
   374a0:	andeq	pc, r9, ip, lsl #10
   374a4:	muleq	r9, r4, r4
   374a8:	andeq	pc, r9, ip, lsr #9
   374ac:	andeq	pc, r9, r4, ror #8
   374b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   374b4:	mov	r8, r0
   374b8:	ldrb	r5, [r2, #36]	; 0x24
   374bc:	sub	sp, sp, #20
   374c0:	mov	r4, r2
   374c4:	mov	r6, r1
   374c8:	ands	r0, r5, #1
   374cc:	beq	375a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2371c>
   374d0:	ldr	r0, [r1, #4]
   374d4:	ldr	r7, [r2, #8]
   374d8:	bl	13a24 <strlen@plt>
   374dc:	mov	r9, r0
   374e0:	mov	r0, r7
   374e4:	bl	13a24 <strlen@plt>
   374e8:	tst	r5, #2
   374ec:	add	r5, r0, r9
   374f0:	bne	375b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23724>
   374f4:	mov	r0, r8
   374f8:	add	r5, r5, #8
   374fc:	bl	13a24 <strlen@plt>
   37500:	add	r0, r5, r0
   37504:	bl	137b4 <xmalloc@plt>
   37508:	ldr	r2, [r6, #4]
   3750c:	movw	r3, #8016	; 0x1f50
   37510:	str	r7, [sp, #4]
   37514:	movt	r3, #7
   37518:	str	r8, [sp, #8]
   3751c:	str	r2, [sp]
   37520:	mov	r1, #1
   37524:	mvn	r2, #0
   37528:	mov	r5, r0
   3752c:	bl	13acc <__sprintf_chk@plt>
   37530:	mov	r0, r5
   37534:	mov	r1, r4
   37538:	bl	308a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca14>
   3753c:	subs	r6, r0, #0
   37540:	beq	375ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23760>
   37544:	str	r5, [r4, #8]
   37548:	mov	r1, #1
   3754c:	ldr	r0, [r4, #16]
   37550:	bl	13d48 <bfd_check_format@plt>
   37554:	cmp	r0, #0
   37558:	beq	375e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23754>
   3755c:	ldr	r3, [r4, #16]
   37560:	ldr	r3, [r3, #40]	; 0x28
   37564:	tst	r3, #2048	; 0x800
   37568:	beq	375e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23754>
   3756c:	ldrb	r3, [r4, #36]	; 0x24
   37570:	and	r2, r3, #5
   37574:	cmp	r2, #5
   37578:	beq	37590 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23704>
   3757c:	movw	r0, #6892	; 0x1aec
   37580:	movw	r1, #2072	; 0x818
   37584:	movt	r0, #7
   37588:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   3758c:	ldrb	r3, [r4, #36]	; 0x24
   37590:	tst	r3, #2
   37594:	beq	37600 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23774>
   37598:	ldr	r0, [r4, #16]
   3759c:	mov	r1, r7
   375a0:	bl	13cac <bfd_elf_set_dt_needed_name@plt>
   375a4:	mov	r0, #1
   375a8:	add	sp, sp, #20
   375ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   375b0:	add	r0, r5, #2
   375b4:	bl	137b4 <xmalloc@plt>
   375b8:	ldr	ip, [r6, #4]
   375bc:	movw	r3, #8008	; 0x1f48
   375c0:	str	r7, [sp, #4]
   375c4:	movt	r3, #7
   375c8:	mov	r1, #1
   375cc:	mvn	r2, #0
   375d0:	str	ip, [sp]
   375d4:	mov	r5, r0
   375d8:	bl	13acc <__sprintf_chk@plt>
   375dc:	b	37530 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x236a4>
   375e0:	mov	r0, #1
   375e4:	add	sp, sp, #20
   375e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   375ec:	mov	r0, r5
   375f0:	bl	13574 <free@plt>
   375f4:	mov	r0, r6
   375f8:	add	sp, sp, #20
   375fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   37600:	ldr	r0, [r4, #8]
   37604:	bl	138bc <lbasename@plt>
   37608:	mov	r7, r0
   3760c:	b	37598 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2370c>
   37610:	ldr	r3, [r0, #4]
   37614:	cmp	r3, #5
   37618:	bxne	lr
   3761c:	ldr	r1, [r0, #8]
   37620:	ldrh	r3, [r1, #24]
   37624:	ubfx	r3, r3, #7, #3
   37628:	cmp	r3, #4
   3762c:	bxeq	lr
   37630:	ldr	r3, [r1, #20]
   37634:	tst	r3, #32768	; 0x8000
   37638:	bxne	lr
   3763c:	ldr	r3, [r1, #88]	; 0x58
   37640:	cmp	r3, #0
   37644:	bxeq	lr
   37648:	movw	r0, #1088	; 0x440
   3764c:	movt	r0, #10
   37650:	ldr	r2, [r3, #180]	; 0xb4
   37654:	ldr	r3, [r0, #52]	; 0x34
   37658:	cmp	r2, r3
   3765c:	bxne	lr
   37660:	b	13e20 <elf32_arm_next_input_section@plt>
   37664:	push	{r4, r5, r6, lr}
   37668:	movw	r4, #360	; 0x168
   3766c:	movt	r4, #10
   37670:	mov	r5, r0
   37674:	ldr	r3, [r4, #208]	; 0xd0
   37678:	cmp	r3, #0
   3767c:	beq	37690 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23804>
   37680:	ldr	r0, [r3, #16]
   37684:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   37688:	tst	r0, #1
   3768c:	popeq	{r4, r5, r6, pc}
   37690:	ldr	r3, [r5, #8]
   37694:	cmp	r3, #0
   37698:	popeq	{r4, r5, r6, pc}
   3769c:	ldr	r0, [r5, #16]
   376a0:	cmp	r0, #0
   376a4:	popeq	{r4, r5, r6, pc}
   376a8:	ldr	r2, [r4, #208]	; 0xd0
   376ac:	cmp	r2, #0
   376b0:	beq	376c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23838>
   376b4:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   376b8:	tst	r0, #1
   376bc:	popne	{r4, r5, r6, pc}
   376c0:	ldr	r3, [r5, #8]
   376c4:	ldr	r2, [r4, #212]	; 0xd4
   376c8:	mov	r0, r3
   376cc:	movw	r6, #360	; 0x168
   376d0:	movt	r6, #10
   376d4:	ldr	r1, [r2, #8]
   376d8:	bl	135a4 <filename_cmp@plt>
   376dc:	cmp	r0, #0
   376e0:	beq	37740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x238b4>
   376e4:	ldrb	r3, [r5, #36]	; 0x24
   376e8:	tst	r3, #4
   376ec:	beq	3771c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23890>
   376f0:	ldr	r0, [r5, #8]
   376f4:	mov	r1, #47	; 0x2f
   376f8:	bl	13c1c <strrchr@plt>
   376fc:	cmp	r0, #0
   37700:	beq	3771c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23890>
   37704:	ldr	r3, [r6, #212]	; 0xd4
   37708:	add	r0, r0, #1
   3770c:	ldr	r1, [r3, #8]
   37710:	bl	135a4 <filename_cmp@plt>
   37714:	cmp	r0, #0
   37718:	beq	37740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x238b4>
   3771c:	ldr	r0, [r5, #16]
   37720:	bl	136f4 <bfd_elf_get_dt_soname@plt>
   37724:	cmp	r0, #0
   37728:	popeq	{r4, r5, r6, pc}
   3772c:	ldr	r3, [r4, #212]	; 0xd4
   37730:	ldr	r1, [r3, #8]
   37734:	bl	135a4 <filename_cmp@plt>
   37738:	cmp	r0, #0
   3773c:	popne	{r4, r5, r6, pc}
   37740:	str	r5, [r4, #208]	; 0xd0
   37744:	pop	{r4, r5, r6, pc}
   37748:	movw	ip, #63248	; 0xf710
   3774c:	movt	ip, #9
   37750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37754:	movw	r7, #1088	; 0x440
   37758:	ldr	r3, [ip]
   3775c:	sub	sp, sp, #76	; 0x4c
   37760:	movt	r7, #10
   37764:	str	ip, [sp, #8]
   37768:	str	r3, [sp, #68]	; 0x44
   3776c:	bl	2f250 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3c4>
   37770:	ldr	r3, [r7, #32]
   37774:	str	r3, [sp, #12]
   37778:	ldr	r3, [r3, #40]	; 0x28
   3777c:	cmp	r3, #1
   37780:	beq	377a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23914>
   37784:	ldr	ip, [sp, #8]
   37788:	ldr	r2, [sp, #68]	; 0x44
   3778c:	ldr	r3, [ip]
   37790:	cmp	r2, r3
   37794:	bne	37f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x240e8>
   37798:	add	sp, sp, #76	; 0x4c
   3779c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   377a0:	movw	r9, #360	; 0x168
   377a4:	movt	r9, #10
   377a8:	ldr	r0, [r9, #8]
   377ac:	cmp	r0, #0
   377b0:	beq	37864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x239d8>
   377b4:	ldr	r6, [r7, #56]	; 0x38
   377b8:	cmp	r6, #0
   377bc:	bne	377d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23944>
   377c0:	b	37bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d64>
   377c4:	ldr	r6, [r6, #164]	; 0xa4
   377c8:	cmp	r6, #0
   377cc:	beq	37bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d64>
   377d0:	ldr	r3, [r6, #4]
   377d4:	ldr	r3, [r3, #4]
   377d8:	cmp	r3, #5
   377dc:	bne	377c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23938>
   377e0:	ldr	r3, [r6, #108]	; 0x6c
   377e4:	cmp	r3, #0
   377e8:	beq	377c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23938>
   377ec:	bl	3396c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fae0>
   377f0:	orrs	r2, r0, r1
   377f4:	beq	37be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d54>
   377f8:	adds	r4, r0, #16
   377fc:	adc	r5, r1, #0
   37800:	orrs	ip, r4, r5
   37804:	beq	37be0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d54>
   37808:	mov	r0, r6
   3780c:	movw	r1, #8088	; 0x1f98
   37810:	movw	r2, #16427	; 0x402b
   37814:	movt	r1, #7
   37818:	movt	r2, #16
   3781c:	bl	134d8 <bfd_make_section_with_flags@plt>
   37820:	cmp	r0, #0
   37824:	beq	37f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x240a4>
   37828:	ldr	r3, [r7, #52]	; 0x34
   3782c:	mov	r2, #2
   37830:	str	r2, [r0, #92]	; 0x5c
   37834:	mov	ip, #7
   37838:	ldr	r1, [r0, #172]	; 0xac
   3783c:	movw	r2, #24956	; 0x617c
   37840:	ldr	r3, [r3, #168]	; 0xa8
   37844:	movt	r2, #3
   37848:	ldr	r6, [r9, #8]
   3784c:	ldr	r3, [r3, #2508]	; 0x9cc
   37850:	str	r0, [r3, #24]
   37854:	str	r2, [r3, #16]
   37858:	str	r6, [r3, #20]
   3785c:	str	ip, [r1, #4]
   37860:	strd	r4, [r0, #48]	; 0x30
   37864:	ldrb	r2, [r7]
   37868:	movw	r3, #1088	; 0x440
   3786c:	movt	r3, #10
   37870:	and	r2, r2, #3
   37874:	cmp	r2, #2
   37878:	beq	37cc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23e34>
   3787c:	ldrb	r8, [r3, #4]
   37880:	ubfx	r8, r8, #2, #1
   37884:	cmp	r8, #0
   37888:	beq	37b48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23cbc>
   3788c:	movw	r1, #1088	; 0x440
   37890:	ldr	r0, [r7, #52]	; 0x34
   37894:	movt	r1, #10
   37898:	bl	13850 <bfd_elf_get_needed_list@plt>
   3789c:	subs	fp, r0, #0
   378a0:	beq	37aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c60>
   378a4:	movw	r6, #30308	; 0x7664
   378a8:	movt	r6, #3
   378ac:	mov	r4, fp
   378b0:	movw	ip, #1464	; 0x5b8
   378b4:	movt	ip, #10
   378b8:	str	ip, [sp, #12]
   378bc:	movw	ip, #1244	; 0x4dc
   378c0:	movt	ip, #10
   378c4:	str	ip, [sp, #16]
   378c8:	ldr	r0, [r4, #4]
   378cc:	cmp	r0, #0
   378d0:	beq	378fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a70>
   378d4:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   378d8:	tst	r0, #1
   378dc:	bne	37ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c54>
   378e0:	ldr	r0, [r4, #4]
   378e4:	cmp	r0, #0
   378e8:	beq	378fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a70>
   378ec:	ldrb	r3, [r7, #2]
   378f0:	ubfx	r3, r3, #5, #2
   378f4:	cmp	r3, #1
   378f8:	beq	37b2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ca0>
   378fc:	cmp	fp, r4
   37900:	movne	r5, fp
   37904:	beq	37940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ab4>
   37908:	ldr	r0, [r5, #4]
   3790c:	cmp	r0, #0
   37910:	beq	37920 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a94>
   37914:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   37918:	tst	r0, #1
   3791c:	bne	37934 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23aa8>
   37920:	ldr	r0, [r5, #8]
   37924:	ldr	r1, [r4, #8]
   37928:	bl	13490 <strcmp@plt>
   3792c:	cmp	r0, #0
   37930:	beq	37ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c54>
   37934:	ldr	r5, [r5]
   37938:	cmp	r5, r4
   3793c:	bne	37908 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a7c>
   37940:	movw	r0, #15664	; 0x3d30
   37944:	movt	r0, #3
   37948:	mov	r3, #0
   3794c:	str	r4, [r9, #212]	; 0xd4
   37950:	str	r3, [r9, #208]	; 0xd0
   37954:	str	r6, [r9, #4]
   37958:	bl	24348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104bc>
   3795c:	ldr	r3, [r9, #208]	; 0xd0
   37960:	cmp	r3, #0
   37964:	beq	37978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23aec>
   37968:	ldr	r0, [r3, #16]
   3796c:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   37970:	tst	r0, #1
   37974:	beq	37ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c54>
   37978:	ldr	ip, [sp, #12]
   3797c:	ldr	r3, [r4, #4]
   37980:	ldr	r2, [r4, #8]
   37984:	ldr	r1, [ip]
   37988:	str	r3, [sp, #40]	; 0x28
   3798c:	cmp	r1, #0
   37990:	str	r3, [sp, #48]	; 0x30
   37994:	str	r2, [sp, #44]	; 0x2c
   37998:	bne	37f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24080>
   3799c:	ldr	r3, [r9, #208]	; 0xd0
   379a0:	cmp	r3, #0
   379a4:	beq	379c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b38>
   379a8:	ldr	r3, [r3, #8]
   379ac:	add	r0, sp, #48	; 0x30
   379b0:	mov	r1, #1
   379b4:	str	r3, [sp, #52]	; 0x34
   379b8:	bl	367f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2296c>
   379bc:	cmp	r0, #0
   379c0:	bne	37ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c54>
   379c4:	str	fp, [sp, #20]
   379c8:	mov	r8, #0
   379cc:	ldr	fp, [sp, #16]
   379d0:	movw	ip, #360	; 0x168
   379d4:	str	r6, [sp, #24]
   379d8:	movt	ip, #10
   379dc:	str	ip, [sp, #28]
   379e0:	movw	ip, #1240	; 0x4d8
   379e4:	movt	ip, #10
   379e8:	str	ip, [sp, #32]
   379ec:	ldr	r0, [fp, #68]	; 0x44
   379f0:	add	r1, sp, #40	; 0x28
   379f4:	mov	r2, r8
   379f8:	bl	36a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bf4>
   379fc:	cmp	r0, #0
   37a00:	bne	37ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c4c>
   37a04:	ldr	r0, [fp, #64]	; 0x40
   37a08:	add	r1, sp, #40	; 0x28
   37a0c:	mov	r2, r8
   37a10:	bl	36a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bf4>
   37a14:	cmp	r0, #0
   37a18:	bne	37ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c4c>
   37a1c:	ldr	r3, [fp, #68]	; 0x44
   37a20:	cmp	r3, #0
   37a24:	beq	37e64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23fd8>
   37a28:	movw	r0, #8420	; 0x20e4
   37a2c:	movt	r0, #7
   37a30:	bl	138f8 <getenv@plt>
   37a34:	add	r1, sp, #40	; 0x28
   37a38:	mov	r2, r8
   37a3c:	bl	36a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bf4>
   37a40:	cmp	r0, #0
   37a44:	bne	37ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c4c>
   37a48:	movw	r1, #1088	; 0x440
   37a4c:	ldr	r0, [r7, #52]	; 0x34
   37a50:	movt	r1, #10
   37a54:	bl	1352c <bfd_elf_get_runpath_list@plt>
   37a58:	subs	sl, r0, #0
   37a5c:	strne	r7, [sp, #36]	; 0x24
   37a60:	bne	37aac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c20>
   37a64:	b	37d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23e88>
   37a68:	ldr	r2, [sl, #4]
   37a6c:	ldr	r3, [r4, #4]
   37a70:	cmp	r2, r3
   37a74:	movne	r7, #1
   37a78:	movne	r5, #0
   37a7c:	beq	37e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23f8c>
   37a80:	ldr	r2, [sl, #8]
   37a84:	cmp	r2, r6
   37a88:	beq	37a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c08>
   37a8c:	mov	r0, r6
   37a90:	bl	13574 <free@plt>
   37a94:	ldr	sl, [sl]
   37a98:	cmp	sl, #0
   37a9c:	moveq	r3, #0
   37aa0:	andne	r3, r7, #1
   37aa4:	cmp	r3, #0
   37aa8:	beq	37acc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c40>
   37aac:	ldr	r6, [sl, #8]
   37ab0:	ldrb	r3, [r6]
   37ab4:	cmp	r3, #47	; 0x2f
   37ab8:	bne	37a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23bdc>
   37abc:	mov	r0, r6
   37ac0:	bl	36300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22474>
   37ac4:	mov	r6, r0
   37ac8:	b	37a68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23bdc>
   37acc:	cmp	r5, #0
   37ad0:	ldr	r7, [sp, #36]	; 0x24
   37ad4:	beq	37d14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23e88>
   37ad8:	ldr	fp, [sp, #20]
   37adc:	ldr	r6, [sp, #24]
   37ae0:	ldr	r4, [r4]
   37ae4:	cmp	r4, #0
   37ae8:	bne	378c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a3c>
   37aec:	ldrb	r3, [r7, #3]
   37af0:	ubfx	r3, r3, #3, #2
   37af4:	cmp	r3, #2
   37af8:	bne	37784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x238f8>
   37afc:	movw	r1, #1088	; 0x440
   37b00:	mov	r0, #0
   37b04:	movt	r1, #10
   37b08:	bl	13aa8 <bfd_elf_parse_eh_frame_entries@plt>
   37b0c:	cmp	r0, #0
   37b10:	bne	37784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x238f8>
   37b14:	mov	r2, #5
   37b18:	movw	r1, #8456	; 0x2108
   37b1c:	movt	r1, #7
   37b20:	bl	13688 <dcgettext@plt>
   37b24:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   37b28:	b	37784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x238f8>
   37b2c:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   37b30:	tst	r0, #4
   37b34:	beq	378fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a70>
   37b38:	ldr	r4, [r4]
   37b3c:	cmp	r4, #0
   37b40:	bne	378c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a3c>
   37b44:	b	37aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c60>
   37b48:	ldr	r6, [r3, #56]	; 0x38
   37b4c:	cmp	r6, #0
   37b50:	beq	3788c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a00>
   37b54:	ldr	r4, [pc, #1052]	; 37f78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x240ec>
   37b58:	mov	sl, r8
   37b5c:	str	r8, [sp, #16]
   37b60:	str	r9, [sp, #20]
   37b64:	ldr	fp, [r6, #100]	; 0x64
   37b68:	cmp	fp, #0
   37b6c:	beq	37c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d90>
   37b70:	mov	r5, #0
   37b74:	ldr	r3, [fp, #88]	; 0x58
   37b78:	ldr	r9, [fp]
   37b7c:	cmp	r3, r4
   37b80:	beq	37bc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d3c>
   37b84:	movw	r1, #8200	; 0x2008
   37b88:	mov	r0, r9
   37b8c:	movt	r1, #7
   37b90:	mov	r2, #15
   37b94:	bl	13e08 <strncmp@plt>
   37b98:	cmp	r0, #0
   37b9c:	beq	37c00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d74>
   37ba0:	mov	r0, r9
   37ba4:	movw	r1, #8216	; 0x2018
   37ba8:	movt	r1, #7
   37bac:	bl	13490 <strcmp@plt>
   37bb0:	cmp	r0, #0
   37bb4:	bne	37bc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d3c>
   37bb8:	ldrd	r2, [fp, #48]	; 0x30
   37bbc:	cmp	r3, #0
   37bc0:	cmpeq	r2, #9
   37bc4:	movcs	r5, #1
   37bc8:	ldr	fp, [fp, #12]
   37bcc:	cmp	fp, #0
   37bd0:	bne	37b74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ce8>
   37bd4:	cmp	r5, #0
   37bd8:	beq	37c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d90>
   37bdc:	b	37c04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d78>
   37be0:	movw	r0, #8032	; 0x1f60
   37be4:	movt	r0, #7
   37be8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   37bec:	ldr	r0, [r9, #8]
   37bf0:	bl	13574 <free@plt>
   37bf4:	mov	r3, #0
   37bf8:	str	r3, [r9, #8]
   37bfc:	b	37864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x239d8>
   37c00:	mov	r5, #2
   37c04:	cmp	r8, #0
   37c08:	beq	37c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23df4>
   37c0c:	cmp	r8, r5
   37c10:	bne	37e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23fac>
   37c14:	cmp	sl, #0
   37c18:	beq	37c8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23e00>
   37c1c:	cmp	r8, #2
   37c20:	ldr	r6, [r6, #164]	; 0xa4
   37c24:	ldrbeq	r3, [r7, #3]
   37c28:	bfieq	r3, r8, #3, #2
   37c2c:	strbeq	r3, [r7, #3]
   37c30:	cmp	r6, #0
   37c34:	bne	37b64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23cd8>
   37c38:	ldr	r9, [sp, #20]
   37c3c:	cmp	sl, #0
   37c40:	beq	37cf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23e6c>
   37c44:	ldr	r3, [sl, #4]
   37c48:	mov	r0, sl
   37c4c:	movw	r1, #8308	; 0x2074
   37c50:	movt	r1, #7
   37c54:	ldr	r3, [r3, #436]	; 0x1b4
   37c58:	ldr	r2, [r3, #40]	; 0x28
   37c5c:	orr	r2, r2, #8
   37c60:	bl	134d8 <bfd_make_section_with_flags@plt>
   37c64:	cmp	r0, #0
   37c68:	beq	37cf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23e6c>
   37c6c:	mov	r3, #2
   37c70:	str	r3, [r0, #92]	; 0x5c
   37c74:	ldr	r3, [sp, #12]
   37c78:	str	r0, [r3, #216]	; 0xd8
   37c7c:	b	3788c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a00>
   37c80:	cmp	sl, #0
   37c84:	mov	r8, r5
   37c88:	bne	37c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d90>
   37c8c:	cmp	r5, #2
   37c90:	beq	37ca0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23e14>
   37c94:	ldrb	r3, [r7, #3]
   37c98:	tst	r3, #24
   37c9c:	beq	37c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d90>
   37ca0:	ldr	r3, [r6, #4]
   37ca4:	mov	ip, #1
   37ca8:	str	ip, [sp, #16]
   37cac:	ldr	sl, [r3, #4]
   37cb0:	cmp	sl, #5
   37cb4:	moveq	sl, r6
   37cb8:	movne	sl, #0
   37cbc:	b	37c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d90>
   37cc0:	ldrb	r2, [r3, #5]
   37cc4:	eor	r1, r2, #16
   37cc8:	ubfx	r2, r2, #3, #1
   37ccc:	ubfx	r1, r1, #4, #1
   37cd0:	cmp	r2, r1
   37cd4:	bne	37784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x238f8>
   37cd8:	cmp	r2, #0
   37cdc:	ldr	r0, [r3, #56]	; 0x38
   37ce0:	movw	r1, #8184	; 0x1ff8
   37ce4:	movt	r1, #7
   37ce8:	moveq	r2, #8
   37cec:	movne	r2, #24
   37cf0:	bl	134d8 <bfd_make_section_with_flags@plt>
   37cf4:	b	37784 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x238f8>
   37cf8:	ldr	ip, [sp, #16]
   37cfc:	cmp	ip, #0
   37d00:	beq	3788c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a00>
   37d04:	movw	r0, #8324	; 0x2084
   37d08:	movt	r0, #7
   37d0c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   37d10:	b	3788c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23a00>
   37d14:	ldr	r3, [r9, #220]	; 0xdc
   37d18:	cmp	r3, #0
   37d1c:	beq	37e94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24008>
   37d20:	ldr	ip, [sp, #28]
   37d24:	ldr	r0, [ip, #224]	; 0xe0
   37d28:	cmp	r0, #0
   37d2c:	beq	37d54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ec8>
   37d30:	ldr	r3, [r4, #4]
   37d34:	add	r1, sp, #56	; 0x38
   37d38:	mov	r2, r8
   37d3c:	str	r3, [sp, #56]	; 0x38
   37d40:	ldr	r3, [r4, #8]
   37d44:	str	r3, [sp, #60]	; 0x3c
   37d48:	bl	36a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bf4>
   37d4c:	cmp	r0, #0
   37d50:	bne	37ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c4c>
   37d54:	ldr	r0, [r4, #8]
   37d58:	bl	13a24 <strlen@plt>
   37d5c:	movw	r3, #1620	; 0x654
   37d60:	movt	r3, #10
   37d64:	ldr	r6, [r3]
   37d68:	cmp	r6, #0
   37d6c:	beq	37dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23f60>
   37d70:	add	sl, r0, #2
   37d74:	b	37d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23ef8>
   37d78:	ldr	r6, [r6]
   37d7c:	cmp	r6, #0
   37d80:	beq	37dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23f60>
   37d84:	ldr	r3, [r6, #8]
   37d88:	cmp	r3, #0
   37d8c:	bne	37d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23eec>
   37d90:	ldr	r0, [r6, #4]
   37d94:	bl	13a24 <strlen@plt>
   37d98:	add	r0, sl, r0
   37d9c:	bl	137b4 <xmalloc@plt>
   37da0:	ldr	ip, [r6, #4]
   37da4:	mov	r1, #1
   37da8:	mvn	r2, #0
   37dac:	movw	r3, #8008	; 0x1f48
   37db0:	movt	r3, #7
   37db4:	str	ip, [sp]
   37db8:	ldr	ip, [r4, #8]
   37dbc:	str	ip, [sp, #4]
   37dc0:	mov	r5, r0
   37dc4:	bl	13acc <__sprintf_chk@plt>
   37dc8:	add	r0, sp, #48	; 0x30
   37dcc:	mov	r1, r8
   37dd0:	str	r5, [sp, #52]	; 0x34
   37dd4:	bl	367f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2296c>
   37dd8:	cmp	r0, #0
   37ddc:	bne	37ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c4c>
   37de0:	mov	r0, r5
   37de4:	bl	13574 <free@plt>
   37de8:	b	37d78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23eec>
   37dec:	add	r8, r8, #1
   37df0:	cmp	r8, #2
   37df4:	bne	379ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b60>
   37df8:	movw	r0, #8500	; 0x2134
   37dfc:	ldr	r1, [r4, #8]
   37e00:	movt	r0, #7
   37e04:	ldr	r2, [r4, #4]
   37e08:	ldr	fp, [sp, #20]
   37e0c:	ldr	r6, [sp, #24]
   37e10:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   37e14:	b	37ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c54>
   37e18:	mov	r0, r6
   37e1c:	add	r1, sp, #40	; 0x28
   37e20:	mov	r2, r8
   37e24:	bl	36a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bf4>
   37e28:	adds	r5, r0, #0
   37e2c:	movne	r5, #1
   37e30:	eor	r7, r5, #1
   37e34:	b	37a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23bf4>
   37e38:	mov	r2, #5
   37e3c:	movw	r1, #8228	; 0x2024
   37e40:	mov	r0, #0
   37e44:	movt	r1, #7
   37e48:	ldr	r9, [sp, #20]
   37e4c:	bl	13688 <dcgettext@plt>
   37e50:	cmp	r5, #1
   37e54:	movne	r1, sl
   37e58:	moveq	r1, r6
   37e5c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   37e60:	b	37c3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23db0>
   37e64:	ldr	r3, [fp, #64]	; 0x40
   37e68:	cmp	r3, #0
   37e6c:	bne	37a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b9c>
   37e70:	movw	r0, #7232	; 0x1c40
   37e74:	movt	r0, #7
   37e78:	bl	138f8 <getenv@plt>
   37e7c:	add	r1, sp, #40	; 0x28
   37e80:	mov	r2, r8
   37e84:	bl	36a80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22bf4>
   37e88:	cmp	r0, #0
   37e8c:	beq	37a28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b9c>
   37e90:	b	37ad8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23c4c>
   37e94:	ldr	ip, [sp, #32]
   37e98:	mov	r2, r3
   37e9c:	movw	r1, #8436	; 0x20f4
   37ea0:	movt	r1, #7
   37ea4:	str	r3, [sp, #56]	; 0x38
   37ea8:	ldr	r0, [ip]
   37eac:	str	r3, [sp, #64]	; 0x40
   37eb0:	str	r3, [sp, #60]	; 0x3c
   37eb4:	bl	13760 <concat@plt>
   37eb8:	mov	r5, r0
   37ebc:	add	r0, sp, #56	; 0x38
   37ec0:	mov	r1, r5
   37ec4:	bl	363b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22528>
   37ec8:	subs	sl, r0, #0
   37ecc:	beq	37f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x240b4>
   37ed0:	mov	r0, r5
   37ed4:	bl	13574 <free@plt>
   37ed8:	ldr	r0, [sp, #56]	; 0x38
   37edc:	cmp	r0, #0
   37ee0:	ldreq	r0, [r9, #224]	; 0xe0
   37ee4:	beq	37f00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24074>
   37ee8:	bl	36300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22474>
   37eec:	mov	r5, r0
   37ef0:	ldr	r0, [sp, #56]	; 0x38
   37ef4:	bl	13574 <free@plt>
   37ef8:	mov	r0, r5
   37efc:	str	r5, [r9, #224]	; 0xe0
   37f00:	mov	r3, #1
   37f04:	str	r3, [r9, #220]	; 0xdc
   37f08:	b	37d28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23e9c>
   37f0c:	mov	r2, #5
   37f10:	movw	r1, #8400	; 0x20d0
   37f14:	mov	r0, #0
   37f18:	movt	r1, #7
   37f1c:	bl	13688 <dcgettext@plt>
   37f20:	ldr	r1, [r4, #8]
   37f24:	ldr	r2, [r4, #4]
   37f28:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   37f2c:	b	3799c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23b10>
   37f30:	movw	r0, #8108	; 0x1fac
   37f34:	movt	r0, #7
   37f38:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   37f3c:	b	37bec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x23d60>
   37f40:	mov	r0, r5
   37f44:	bl	13574 <free@plt>
   37f48:	ldr	ip, [sp, #32]
   37f4c:	mov	r2, sl
   37f50:	movw	r1, #8440	; 0x20f8
   37f54:	movt	r1, #7
   37f58:	ldr	r0, [ip]
   37f5c:	bl	13760 <concat@plt>
   37f60:	mov	r5, r0
   37f64:	add	r0, sp, #56	; 0x38
   37f68:	mov	r1, r5
   37f6c:	bl	363b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x22528>
   37f70:	b	37ed0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24044>
   37f74:	bl	13694 <__stack_chk_fail@plt>
   37f78:			; <UNDEFINED> instruction: 0x0009fab8
   37f7c:	push	{r3, r4, r5, r6, r7, lr}
   37f80:	movw	r7, #360	; 0x168
   37f84:	movt	r7, #10
   37f88:	mov	r4, r0
   37f8c:	ldr	r3, [r7, #100]	; 0x64
   37f90:	cmp	r3, #0
   37f94:	popne	{r3, r4, r5, r6, r7, pc}
   37f98:	ldr	r0, [r0, #16]
   37f9c:	cmp	r0, #0
   37fa0:	popeq	{r3, r4, r5, r6, r7, pc}
   37fa4:	ldr	r2, [r0, #40]	; 0x28
   37fa8:	tst	r2, #2048	; 0x800
   37fac:	popeq	{r3, r4, r5, r6, r7, pc}
   37fb0:	bl	136f4 <bfd_elf_get_dt_soname@plt>
   37fb4:	subs	r6, r0, #0
   37fb8:	beq	38048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x241bc>
   37fbc:	ldr	r4, [r7, #96]	; 0x60
   37fc0:	cmp	r4, #0
   37fc4:	bne	37fd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2414c>
   37fc8:	pop	{r3, r4, r5, r6, r7, pc}
   37fcc:	ldr	r4, [r4]
   37fd0:	cmp	r4, #0
   37fd4:	beq	38044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x241b8>
   37fd8:	ldr	r1, [r4, #8]
   37fdc:	mov	r0, r6
   37fe0:	bl	135a4 <filename_cmp@plt>
   37fe4:	mov	r1, #47	; 0x2f
   37fe8:	cmp	r0, #0
   37fec:	beq	37fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24140>
   37ff0:	ldr	r5, [r4, #8]
   37ff4:	mov	r0, r5
   37ff8:	bl	13a48 <strchr@plt>
   37ffc:	cmp	r0, #0
   38000:	bne	37fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24140>
   38004:	movw	r1, #7880	; 0x1ec8
   38008:	mov	r0, r5
   3800c:	movt	r1, #7
   38010:	bl	1340c <strstr@plt>
   38014:	mov	r1, r5
   38018:	subs	r2, r0, #0
   3801c:	mov	r0, r6
   38020:	add	r2, r2, #4
   38024:	rsb	r2, r5, r2
   38028:	beq	37fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24140>
   3802c:	bl	1376c <filename_ncmp@plt>
   38030:	cmp	r0, #0
   38034:	bne	37fcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24140>
   38038:	mov	r3, #1
   3803c:	str	r3, [r7, #100]	; 0x64
   38040:	pop	{r3, r4, r5, r6, r7, pc}
   38044:	pop	{r3, r4, r5, r6, r7, pc}
   38048:	ldr	r3, [r4, #16]
   3804c:	ldr	r0, [r3]
   38050:	bl	138bc <lbasename@plt>
   38054:	mov	r6, r0
   38058:	b	37fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24130>
   3805c:	movw	r3, #1088	; 0x440
   38060:	movt	r3, #10
   38064:	ldrb	r2, [r3]
   38068:	and	r2, r2, #3
   3806c:	cmp	r2, #2
   38070:	movne	r2, #1
   38074:	strne	r2, [r3, #24]
   38078:	bx	lr
   3807c:	ldr	r3, [r0]
   38080:	ldr	ip, [r1]
   38084:	push	{r4, r5, r6, r7}
   38088:	ldr	r1, [r3, #88]	; 0x58
   3808c:	ldr	r2, [ip, #88]	; 0x58
   38090:	cmp	r1, #0
   38094:	cmpne	r2, #0
   38098:	moveq	r0, #0
   3809c:	beq	380d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2424c>
   380a0:	ldrd	r6, [r3, #80]	; 0x50
   380a4:	ldrd	r0, [r1, #32]
   380a8:	ldrd	r4, [ip, #80]	; 0x50
   380ac:	ldrd	r2, [r2, #32]
   380b0:	adds	r0, r0, r6
   380b4:	adc	r1, r1, r7
   380b8:	adds	r2, r2, r4
   380bc:	adc	r3, r3, r5
   380c0:	cmp	r1, r3
   380c4:	cmpeq	r0, r2
   380c8:	movhi	r0, #1
   380cc:	bhi	380d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2424c>
   380d0:	movcs	r0, #0
   380d4:	mvncc	r0, #0
   380d8:	pop	{r4, r5, r6, r7}
   380dc:	bx	lr
   380e0:	push	{r3, lr}
   380e4:	movw	r3, #592	; 0x250
   380e8:	movt	r3, #10
   380ec:	ldr	r2, [r3]
   380f0:	cmp	r2, r0
   380f4:	popeq	{r3, pc}
   380f8:	ldr	r3, [r3, #4]
   380fc:	blx	r3
   38100:	pop	{r3, pc}
   38104:	movw	r3, #1088	; 0x440
   38108:	movt	r3, #10
   3810c:	push	{r4, r5}
   38110:	mov	r2, #0
   38114:	str	r2, [r0]
   38118:	ldrb	r1, [r3]
   3811c:	and	r1, r1, #3
   38120:	cmp	r1, #2
   38124:	beq	381c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24338>
   38128:	movw	r2, #1336	; 0x538
   3812c:	movt	r2, #10
   38130:	ldr	r0, [r2, #48]	; 0x30
   38134:	cmp	r0, #0
   38138:	movweq	r0, #21308	; 0x533c
   3813c:	movteq	r0, #7
   38140:	beq	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   38144:	ldr	r2, [r2]
   38148:	cmp	r2, #0
   3814c:	movweq	r0, #30776	; 0x7838
   38150:	movteq	r0, #7
   38154:	beq	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   38158:	cmp	r1, #1
   3815c:	ldrb	r2, [r3, #4]
   38160:	beq	381f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24368>
   38164:	cmp	r1, #3
   38168:	beq	3824c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x243c0>
   3816c:	tst	r2, #8
   38170:	movweq	r0, #46940	; 0xb75c
   38174:	movteq	r0, #8
   38178:	beq	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   3817c:	ldrb	r2, [r3, #3]
   38180:	tst	r2, #4
   38184:	movweq	r0, #37848	; 0x93d8
   38188:	movteq	r0, #8
   3818c:	beq	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   38190:	ldrd	r4, [r3, #112]	; 0x70
   38194:	mov	r2, #8
   38198:	mov	r3, #0
   3819c:	movw	r0, #28740	; 0x7044
   381a0:	and	r2, r2, r4
   381a4:	and	r3, r3, r5
   381a8:	movw	r1, #37848	; 0x93d8
   381ac:	movt	r0, #8
   381b0:	orrs	ip, r2, r3
   381b4:	movt	r1, #8
   381b8:	moveq	r0, r1
   381bc:	pop	{r4, r5}
   381c0:	bx	lr
   381c4:	movw	r1, #1336	; 0x538
   381c8:	movt	r1, #10
   381cc:	movw	r2, #15496	; 0x3c88
   381d0:	movw	r3, #9640	; 0x25a8
   381d4:	ldr	r0, [r1, #12]
   381d8:	movt	r2, #7
   381dc:	movt	r3, #7
   381e0:	cmp	r0, #0
   381e4:	pop	{r4, r5}
   381e8:	moveq	r0, r2
   381ec:	movne	r0, r3
   381f0:	bx	lr
   381f4:	tst	r2, #8
   381f8:	movweq	r0, #58584	; 0xe4d8
   381fc:	movteq	r0, #7
   38200:	beq	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   38204:	ldrb	r2, [r3, #3]
   38208:	tst	r2, #4
   3820c:	movweq	r0, #49480	; 0xc148
   38210:	movteq	r0, #7
   38214:	beq	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   38218:	ldrd	r0, [r3, #112]	; 0x70
   3821c:	mov	r2, #8
   38220:	mov	r3, #0
   38224:	movw	r4, #40360	; 0x9da8
   38228:	and	r2, r2, r0
   3822c:	and	r3, r3, r1
   38230:	movw	ip, #49480	; 0xc148
   38234:	movt	r4, #7
   38238:	orrs	r1, r2, r3
   3823c:	movt	ip, #7
   38240:	movne	r0, r4
   38244:	moveq	r0, ip
   38248:	b	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   3824c:	tst	r2, #8
   38250:	movweq	r0, #19724	; 0x4d0c
   38254:	movteq	r0, #8
   38258:	beq	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   3825c:	ldrb	r2, [r3, #3]
   38260:	tst	r2, #4
   38264:	movweq	r0, #11184	; 0x2bb0
   38268:	movteq	r0, #8
   3826c:	beq	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   38270:	ldrd	r0, [r3, #112]	; 0x70
   38274:	mov	r2, #8
   38278:	mov	r3, #0
   3827c:	movw	r4, #2628	; 0xa44
   38280:	and	r2, r2, r0
   38284:	and	r3, r3, r1
   38288:	movw	ip, #11184	; 0x2bb0
   3828c:	movt	r4, #8
   38290:	orrs	r1, r2, r3
   38294:	movt	ip, #8
   38298:	movne	r0, r4
   3829c:	moveq	r0, ip
   382a0:	b	381bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24330>
   382a4:	push	{r3, r4, r5, lr}
   382a8:	mov	r4, r0
   382ac:	ldrb	r3, [r0, #36]	; 0x24
   382b0:	tst	r3, #64	; 0x40
   382b4:	lsr	r5, r3, #7
   382b8:	orreq	r5, r5, #4
   382bc:	tst	r3, #16
   382c0:	beq	382d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24448>
   382c4:	ldr	r3, [r0, #16]
   382c8:	ldr	r3, [r3, #40]	; 0x28
   382cc:	tst	r3, #2048	; 0x800
   382d0:	bne	38304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24478>
   382d4:	cmp	r5, #0
   382d8:	beq	382ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24460>
   382dc:	ldr	r0, [r4, #16]
   382e0:	ldr	r3, [r0, #40]	; 0x28
   382e4:	tst	r3, #2048	; 0x800
   382e8:	bne	382f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24468>
   382ec:	mov	r0, #0
   382f0:	pop	{r3, r4, r5, pc}
   382f4:	mov	r1, r5
   382f8:	bl	13a3c <bfd_elf_set_dyn_lib_class@plt>
   382fc:	mov	r0, #0
   38300:	pop	{r3, r4, r5, pc}
   38304:	mov	r2, #5
   38308:	movw	r1, #4196	; 0x1064
   3830c:	mov	r0, #0
   38310:	movt	r1, #7
   38314:	bl	13688 <dcgettext@plt>
   38318:	ldr	r1, [r4, #16]
   3831c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   38320:	b	382d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24448>
   38324:	push	{r4, lr}
   38328:	mov	r2, #5
   3832c:	mov	r4, r0
   38330:	movw	r1, #4248	; 0x1098
   38334:	mov	r0, #0
   38338:	movt	r1, #7
   3833c:	bl	13688 <dcgettext@plt>
   38340:	mov	r1, #1
   38344:	mov	r2, r0
   38348:	mov	r0, r4
   3834c:	bl	13b74 <__fprintf_chk@plt>
   38350:	mov	r2, #5
   38354:	movw	r1, #4324	; 0x10e4
   38358:	mov	r0, #0
   3835c:	movt	r1, #7
   38360:	bl	13688 <dcgettext@plt>
   38364:	mov	r1, #1
   38368:	mov	r2, r0
   3836c:	mov	r0, r4
   38370:	bl	13b74 <__fprintf_chk@plt>
   38374:	mov	r2, #5
   38378:	movw	r1, #4380	; 0x111c
   3837c:	mov	r0, #0
   38380:	movt	r1, #7
   38384:	bl	13688 <dcgettext@plt>
   38388:	mov	r1, #1
   3838c:	mov	r2, r0
   38390:	mov	r0, r4
   38394:	bl	13b74 <__fprintf_chk@plt>
   38398:	mov	r2, #5
   3839c:	movw	r1, #4452	; 0x1164
   383a0:	mov	r0, #0
   383a4:	movt	r1, #7
   383a8:	bl	13688 <dcgettext@plt>
   383ac:	mov	r1, #1
   383b0:	mov	r2, r0
   383b4:	mov	r0, r4
   383b8:	bl	13b74 <__fprintf_chk@plt>
   383bc:	mov	r2, #5
   383c0:	movw	r1, #4524	; 0x11ac
   383c4:	mov	r0, #0
   383c8:	movt	r1, #7
   383cc:	bl	13688 <dcgettext@plt>
   383d0:	mov	r1, #1
   383d4:	mov	r2, r0
   383d8:	mov	r0, r4
   383dc:	bl	13b74 <__fprintf_chk@plt>
   383e0:	mov	r2, #5
   383e4:	movw	r1, #4592	; 0x11f0
   383e8:	mov	r0, #0
   383ec:	movt	r1, #7
   383f0:	bl	13688 <dcgettext@plt>
   383f4:	mov	r1, #1
   383f8:	mov	r2, r0
   383fc:	mov	r0, r4
   38400:	bl	13b74 <__fprintf_chk@plt>
   38404:	mov	r2, #5
   38408:	movw	r1, #4664	; 0x1238
   3840c:	mov	r0, #0
   38410:	movt	r1, #7
   38414:	bl	13688 <dcgettext@plt>
   38418:	mov	r1, #1
   3841c:	mov	r2, r0
   38420:	mov	r0, r4
   38424:	bl	13b74 <__fprintf_chk@plt>
   38428:	mov	r2, #5
   3842c:	movw	r1, #4748	; 0x128c
   38430:	mov	r0, #0
   38434:	movt	r1, #7
   38438:	bl	13688 <dcgettext@plt>
   3843c:	mov	r1, #1
   38440:	mov	r2, r0
   38444:	mov	r0, r4
   38448:	bl	13b74 <__fprintf_chk@plt>
   3844c:	mov	r2, #5
   38450:	movw	r1, #4812	; 0x12cc
   38454:	mov	r0, #0
   38458:	movt	r1, #7
   3845c:	bl	13688 <dcgettext@plt>
   38460:	mov	r1, #1
   38464:	mov	r2, r0
   38468:	mov	r0, r4
   3846c:	bl	13b74 <__fprintf_chk@plt>
   38470:	mov	r2, #5
   38474:	movw	r1, #4884	; 0x1314
   38478:	mov	r0, #0
   3847c:	movt	r1, #7
   38480:	bl	13688 <dcgettext@plt>
   38484:	mov	r1, #1
   38488:	mov	r2, r0
   3848c:	mov	r0, r4
   38490:	bl	13b74 <__fprintf_chk@plt>
   38494:	mov	r2, #5
   38498:	movw	r1, #4960	; 0x1360
   3849c:	mov	r0, #0
   384a0:	movt	r1, #7
   384a4:	bl	13688 <dcgettext@plt>
   384a8:	mov	r1, #1
   384ac:	mov	r2, r0
   384b0:	mov	r0, r4
   384b4:	bl	13b74 <__fprintf_chk@plt>
   384b8:	mov	r2, #5
   384bc:	movw	r1, #5080	; 0x13d8
   384c0:	mov	r0, #0
   384c4:	movt	r1, #7
   384c8:	bl	13688 <dcgettext@plt>
   384cc:	mov	r1, #1
   384d0:	mov	r2, r0
   384d4:	mov	r0, r4
   384d8:	bl	13b74 <__fprintf_chk@plt>
   384dc:	mov	r2, #5
   384e0:	movw	r1, #5200	; 0x1450
   384e4:	mov	r0, #0
   384e8:	movt	r1, #7
   384ec:	bl	13688 <dcgettext@plt>
   384f0:	mov	r1, #1
   384f4:	mov	r2, r0
   384f8:	mov	r0, r4
   384fc:	bl	13b74 <__fprintf_chk@plt>
   38500:	mov	r2, #5
   38504:	movw	r1, #5272	; 0x1498
   38508:	mov	r0, #0
   3850c:	movt	r1, #7
   38510:	bl	13688 <dcgettext@plt>
   38514:	mov	r1, #1
   38518:	mov	r2, r0
   3851c:	mov	r0, r4
   38520:	bl	13b74 <__fprintf_chk@plt>
   38524:	mov	r2, #5
   38528:	movw	r1, #5400	; 0x1518
   3852c:	mov	r0, #0
   38530:	movt	r1, #7
   38534:	bl	13688 <dcgettext@plt>
   38538:	mov	r1, #1
   3853c:	mov	r2, r0
   38540:	mov	r0, r4
   38544:	bl	13b74 <__fprintf_chk@plt>
   38548:	mov	r2, #5
   3854c:	movw	r1, #5988	; 0x1764
   38550:	mov	r0, #0
   38554:	movt	r1, #7
   38558:	bl	13688 <dcgettext@plt>
   3855c:	mov	r1, #1
   38560:	mov	r2, r0
   38564:	mov	r0, r4
   38568:	bl	13b74 <__fprintf_chk@plt>
   3856c:	mov	r2, #5
   38570:	movw	r1, #6072	; 0x17b8
   38574:	mov	r0, #0
   38578:	movt	r1, #7
   3857c:	bl	13688 <dcgettext@plt>
   38580:	mov	r1, #1
   38584:	mov	r2, r0
   38588:	mov	r0, r4
   3858c:	bl	13b74 <__fprintf_chk@plt>
   38590:	mov	r2, #5
   38594:	movw	r1, #6136	; 0x17f8
   38598:	mov	r0, #0
   3859c:	movt	r1, #7
   385a0:	bl	13688 <dcgettext@plt>
   385a4:	mov	r1, #1
   385a8:	mov	r2, r0
   385ac:	mov	r0, r4
   385b0:	pop	{r4, lr}
   385b4:	b	13b74 <__fprintf_chk@plt>
   385b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   385bc:	mov	r9, r0
   385c0:	ldr	r4, [r0]
   385c4:	sub	sp, sp, #16
   385c8:	mov	r7, r1
   385cc:	cmp	r4, #0
   385d0:	beq	3869c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24810>
   385d4:	mov	r0, r4
   385d8:	movw	r8, #1336	; 0x538
   385dc:	bl	13a24 <strlen@plt>
   385e0:	movt	r8, #10
   385e4:	mov	sl, r0
   385e8:	mov	r0, r7
   385ec:	bl	13a24 <strlen@plt>
   385f0:	ldrb	r6, [r8, #72]	; 0x48
   385f4:	mov	r5, r0
   385f8:	b	38604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24778>
   385fc:	adds	r4, r0, #1
   38600:	beq	38644 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x247b8>
   38604:	mov	r1, r4
   38608:	mov	r0, r7
   3860c:	mov	r2, r5
   38610:	bl	13e08 <strncmp@plt>
   38614:	mov	r1, r6
   38618:	cmp	r0, #0
   3861c:	mov	r0, r4
   38620:	bne	38638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x247ac>
   38624:	ldrb	r3, [r4, r5]
   38628:	cmp	r3, #0
   3862c:	beq	3868c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24800>
   38630:	cmp	r3, r6
   38634:	beq	3868c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24800>
   38638:	bl	13a48 <strchr@plt>
   3863c:	cmp	r0, #0
   38640:	bne	385fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24770>
   38644:	add	r0, sl, r5
   38648:	add	r0, r0, #2
   3864c:	bl	137b4 <xmalloc@plt>
   38650:	ldr	ip, [r9]
   38654:	ldrb	r2, [r8, #72]	; 0x48
   38658:	mov	r1, #1
   3865c:	movw	r3, #580	; 0x244
   38660:	str	r7, [sp, #8]
   38664:	movt	r3, #5
   38668:	str	ip, [sp]
   3866c:	str	r2, [sp, #4]
   38670:	mvn	r2, #0
   38674:	mov	r4, r0
   38678:	bl	13acc <__sprintf_chk@plt>
   3867c:	ldr	r0, [r9]
   38680:	bl	13574 <free@plt>
   38684:	str	r4, [r9]
   38688:	b	38694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24808>
   3868c:	cmp	r4, #0
   38690:	beq	38644 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x247b8>
   38694:	add	sp, sp, #16
   38698:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3869c:	mov	r0, r1
   386a0:	bl	137e4 <xstrdup@plt>
   386a4:	str	r0, [r9]
   386a8:	b	38694 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24808>
   386ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   386b0:	movw	r8, #63248	; 0xf710
   386b4:	movt	r8, #9
   386b8:	sub	sp, sp, #8
   386bc:	movw	r2, #313	; 0x139
   386c0:	cmp	r0, r2
   386c4:	ldr	r3, [r8]
   386c8:	str	r3, [sp, #4]
   386cc:	beq	39024 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25198>
   386d0:	ble	387a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24914>
   386d4:	cmp	r0, #400	; 0x190
   386d8:	beq	38db8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24f2c>
   386dc:	ble	387e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24954>
   386e0:	cmp	r0, #404	; 0x194
   386e4:	beq	3903c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x251b0>
   386e8:	ble	38858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x249cc>
   386ec:	movw	r3, #406	; 0x196
   386f0:	cmp	r0, r3
   386f4:	beq	38fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2512c>
   386f8:	blt	38f30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x250a4>
   386fc:	add	r3, r3, #1
   38700:	cmp	r0, r3
   38704:	beq	38a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24bec>
   38708:	cmp	r0, #408	; 0x198
   3870c:	bne	387d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2494c>
   38710:	movw	r4, #64864	; 0xfd60
   38714:	movt	r4, #9
   38718:	movw	r1, #3900	; 0xf3c
   3871c:	movt	r1, #5
   38720:	ldr	r5, [r4]
   38724:	mov	r0, r5
   38728:	bl	13748 <strcasecmp@plt>
   3872c:	cmp	r0, #0
   38730:	beq	390d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25248>
   38734:	movw	r1, #6216	; 0x1848
   38738:	mov	r0, r5
   3873c:	movt	r1, #7
   38740:	bl	13748 <strcasecmp@plt>
   38744:	cmp	r0, #0
   38748:	beq	38788 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x248fc>
   3874c:	movw	r1, #6224	; 0x1850
   38750:	mov	r0, r5
   38754:	movt	r1, #7
   38758:	bl	13748 <strcasecmp@plt>
   3875c:	cmp	r0, #0
   38760:	beq	391d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2534c>
   38764:	mov	r0, r5
   38768:	movw	r1, #6236	; 0x185c
   3876c:	movt	r1, #7
   38770:	bl	13748 <strcasecmp@plt>
   38774:	cmp	r0, #0
   38778:	movwne	r1, #6248	; 0x1868
   3877c:	movne	r0, #0
   38780:	movtne	r1, #7
   38784:	bne	38e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24fc0>
   38788:	movw	r3, #1088	; 0x440
   3878c:	movt	r3, #10
   38790:	mov	r2, #5
   38794:	mov	r1, #1
   38798:	str	r2, [r3, #12]
   3879c:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   387a0:	movw	r3, #305	; 0x131
   387a4:	cmp	r0, r3
   387a8:	beq	39054 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x251c8>
   387ac:	bgt	3881c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24990>
   387b0:	movw	r3, #301	; 0x12d
   387b4:	cmp	r0, r3
   387b8:	beq	38d98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24f0c>
   387bc:	bgt	389c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b3c>
   387c0:	cmp	r0, #112	; 0x70
   387c4:	beq	388f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a64>
   387c8:	cmp	r0, #122	; 0x7a
   387cc:	beq	38a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24c08>
   387d0:	cmp	r0, #80	; 0x50
   387d4:	beq	3908c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25200>
   387d8:	mov	r1, #0
   387dc:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   387e0:	movw	r3, #317	; 0x13d
   387e4:	cmp	r0, r3
   387e8:	beq	38dd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24f48>
   387ec:	bgt	3893c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ab0>
   387f0:	movw	r3, #315	; 0x13b
   387f4:	cmp	r0, r3
   387f8:	beq	39074 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x251e8>
   387fc:	cmp	r0, #316	; 0x13c
   38800:	bge	389f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b68>
   38804:	movw	r3, #62888	; 0xf5a8
   38808:	movt	r3, #9
   3880c:	mov	r2, #1
   38810:	mov	r1, r2
   38814:	str	r2, [r3, #16]
   38818:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   3881c:	movw	r3, #309	; 0x135
   38820:	cmp	r0, r3
   38824:	beq	38e60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24fd4>
   38828:	bgt	38910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a84>
   3882c:	movw	r3, #307	; 0x133
   38830:	cmp	r0, r3
   38834:	beq	38f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2508c>
   38838:	cmp	r0, #308	; 0x134
   3883c:	bge	38a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b80>
   38840:	movw	r3, #592	; 0x250
   38844:	movt	r3, #10
   38848:	mov	r2, #1
   3884c:	mov	r1, r2
   38850:	str	r2, [r3, #32]
   38854:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38858:	movw	r3, #402	; 0x192
   3885c:	cmp	r0, r3
   38860:	beq	38ed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2504c>
   38864:	bgt	38dec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24f60>
   38868:	movw	r3, #1088	; 0x440
   3886c:	movt	r3, #10
   38870:	mov	r1, #1
   38874:	ldrb	r2, [r3, #4]
   38878:	orr	r2, r2, #32
   3887c:	strb	r2, [r3, #4]
   38880:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38884:	add	r0, r5, #11
   38888:	mov	r1, sp
   3888c:	mov	r2, r6
   38890:	movw	r5, #1088	; 0x440
   38894:	bl	13a18 <strtoul@plt>
   38898:	ldr	r3, [sp]
   3889c:	movt	r5, #10
   388a0:	str	r6, [r5, #20]
   388a4:	str	r0, [r5, #16]
   388a8:	ldrb	r1, [r3]
   388ac:	cmp	r1, #0
   388b0:	moveq	r2, r0
   388b4:	moveq	r3, r1
   388b8:	beq	388e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a54>
   388bc:	mov	r2, #5
   388c0:	mov	r0, r6
   388c4:	movw	r1, #6496	; 0x1960
   388c8:	movt	r1, #7
   388cc:	bl	13688 <dcgettext@plt>
   388d0:	ldr	r1, [r4]
   388d4:	add	r1, r1, #11
   388d8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   388dc:	ldrd	r2, [r5, #16]
   388e0:	orrs	r1, r2, r3
   388e4:	mvneq	r2, #0
   388e8:	mvneq	r3, #0
   388ec:	strdeq	r2, [r5, #16]
   388f0:	mov	r1, #1
   388f4:	ldr	r2, [sp, #4]
   388f8:	mov	r0, r1
   388fc:	ldr	r3, [r8]
   38900:	cmp	r2, r3
   38904:	bne	39320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25494>
   38908:	add	sp, sp, #8
   3890c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   38910:	movw	r3, #311	; 0x137
   38914:	cmp	r0, r3
   38918:	beq	38ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25034>
   3891c:	cmp	r0, #312	; 0x138
   38920:	bge	38e0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24f80>
   38924:	movw	r3, #592	; 0x250
   38928:	movt	r3, #10
   3892c:	mov	r2, #1
   38930:	mov	r1, r2
   38934:	str	r2, [r3, #56]	; 0x38
   38938:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   3893c:	movw	r3, #319	; 0x13f
   38940:	cmp	r0, r3
   38944:	beq	38f0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25080>
   38948:	blt	38e78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24fec>
   3894c:	cmp	r0, #320	; 0x140
   38950:	bne	387d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2494c>
   38954:	movw	r4, #64864	; 0xfd60
   38958:	movt	r4, #9
   3895c:	ldr	r5, [r4]
   38960:	cmp	r5, #0
   38964:	beq	39150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x252c4>
   38968:	movw	r1, #3900	; 0xf3c
   3896c:	mov	r0, r5
   38970:	movt	r1, #5
   38974:	bl	13490 <strcmp@plt>
   38978:	cmp	r0, #0
   3897c:	beq	3913c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x252b0>
   38980:	movw	r1, #62516	; 0xf434
   38984:	mov	r0, r5
   38988:	movt	r1, #4
   3898c:	bl	13490 <strcmp@plt>
   38990:	cmp	r0, #0
   38994:	beq	39150 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x252c4>
   38998:	ldrb	r3, [r5]
   3899c:	cmp	r3, #97	; 0x61
   389a0:	beq	3919c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25310>
   389a4:	mov	r2, #5
   389a8:	movw	r1, #6844	; 0x1abc
   389ac:	mov	r0, #0
   389b0:	movt	r1, #7
   389b4:	bl	13688 <dcgettext@plt>
   389b8:	ldr	r1, [r4]
   389bc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   389c0:	mov	r1, #1
   389c4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   389c8:	movw	r3, #303	; 0x12f
   389cc:	cmp	r0, r3
   389d0:	beq	38ea8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2501c>
   389d4:	cmp	r0, #304	; 0x130
   389d8:	bge	38e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25004>
   389dc:	movw	r3, #592	; 0x250
   389e0:	movt	r3, #10
   389e4:	mov	r2, #1
   389e8:	mov	r1, r2
   389ec:	str	r2, [r3, #24]
   389f0:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   389f4:	movw	r3, #62888	; 0xf5a8
   389f8:	movt	r3, #9
   389fc:	mov	r2, #0
   38a00:	mov	r1, #1
   38a04:	str	r2, [r3, #20]
   38a08:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38a0c:	movw	r4, #64864	; 0xfd60
   38a10:	movt	r4, #9
   38a14:	movw	r1, #3900	; 0xf3c
   38a18:	movt	r1, #5
   38a1c:	ldr	r5, [r4]
   38a20:	mov	r0, r5
   38a24:	bl	13490 <strcmp@plt>
   38a28:	cmp	r0, #0
   38a2c:	beq	390a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2521c>
   38a30:	movw	r1, #6792	; 0x1a88
   38a34:	mov	r0, r5
   38a38:	movt	r1, #7
   38a3c:	bl	13490 <strcmp@plt>
   38a40:	cmp	r0, #0
   38a44:	beq	39168 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x252dc>
   38a48:	mov	r0, r5
   38a4c:	movw	r1, #6800	; 0x1a90
   38a50:	movt	r1, #7
   38a54:	bl	13490 <strcmp@plt>
   38a58:	cmp	r0, #0
   38a5c:	bne	39268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253dc>
   38a60:	movw	r3, #592	; 0x250
   38a64:	movt	r3, #10
   38a68:	mov	r2, #3
   38a6c:	mov	r1, #1
   38a70:	str	r2, [r3, #40]	; 0x28
   38a74:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38a78:	movw	r3, #64864	; 0xfd60
   38a7c:	movt	r3, #9
   38a80:	ldr	r0, [pc, #2812]	; 39584 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x256f8>
   38a84:	ldr	r1, [r3]
   38a88:	bl	385b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2472c>
   38a8c:	mov	r1, #1
   38a90:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38a94:	movw	r4, #64864	; 0xfd60
   38a98:	movt	r4, #9
   38a9c:	movw	r1, #6352	; 0x18d0
   38aa0:	movt	r1, #7
   38aa4:	ldr	r5, [r4]
   38aa8:	mov	r0, r5
   38aac:	bl	13490 <strcmp@plt>
   38ab0:	cmp	r0, #0
   38ab4:	beq	390e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2525c>
   38ab8:	movw	r1, #6360	; 0x18d8
   38abc:	mov	r0, r5
   38ac0:	movt	r1, #7
   38ac4:	bl	13490 <strcmp@plt>
   38ac8:	cmp	r0, #0
   38acc:	beq	39180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x252f4>
   38ad0:	mov	r2, #14
   38ad4:	movw	r1, #6368	; 0x18e0
   38ad8:	mov	r0, r5
   38adc:	movt	r1, #7
   38ae0:	bl	13e08 <strncmp@plt>
   38ae4:	subs	r2, r0, #0
   38ae8:	beq	391f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25364>
   38aec:	mov	r2, #17
   38af0:	movw	r1, #6424	; 0x1918
   38af4:	mov	r0, r5
   38af8:	movt	r1, #7
   38afc:	bl	13e08 <strncmp@plt>
   38b00:	subs	r2, r0, #0
   38b04:	beq	39278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253ec>
   38b08:	movw	r1, #6484	; 0x1954
   38b0c:	mov	r0, r5
   38b10:	movt	r1, #7
   38b14:	mov	r2, #11
   38b18:	bl	13e08 <strncmp@plt>
   38b1c:	subs	r6, r0, #0
   38b20:	beq	38884 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x249f8>
   38b24:	movw	r1, #6528	; 0x1980
   38b28:	mov	r0, r5
   38b2c:	movt	r1, #7
   38b30:	bl	13490 <strcmp@plt>
   38b34:	cmp	r0, #0
   38b38:	beq	392e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25454>
   38b3c:	movw	r1, #6540	; 0x198c
   38b40:	mov	r0, r5
   38b44:	movt	r1, #7
   38b48:	bl	13490 <strcmp@plt>
   38b4c:	cmp	r0, #0
   38b50:	beq	39300 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25474>
   38b54:	movw	r1, #6552	; 0x1998
   38b58:	mov	r0, r5
   38b5c:	movt	r1, #7
   38b60:	bl	13490 <strcmp@plt>
   38b64:	cmp	r0, #0
   38b68:	beq	39324 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25498>
   38b6c:	movw	r1, #29176	; 0x71f8
   38b70:	mov	r0, r5
   38b74:	movt	r1, #4
   38b78:	bl	13490 <strcmp@plt>
   38b7c:	cmp	r0, #0
   38b80:	beq	3934c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254c0>
   38b84:	movw	r1, #6564	; 0x19a4
   38b88:	mov	r0, r5
   38b8c:	movt	r1, #7
   38b90:	bl	13490 <strcmp@plt>
   38b94:	cmp	r0, #0
   38b98:	beq	3935c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254d0>
   38b9c:	movw	r1, #6576	; 0x19b0
   38ba0:	mov	r0, r5
   38ba4:	movt	r1, #7
   38ba8:	bl	13490 <strcmp@plt>
   38bac:	cmp	r0, #0
   38bb0:	beq	3936c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254e0>
   38bb4:	movw	r1, #6588	; 0x19bc
   38bb8:	mov	r0, r5
   38bbc:	movt	r1, #7
   38bc0:	bl	13490 <strcmp@plt>
   38bc4:	cmp	r0, #0
   38bc8:	beq	3937c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254f0>
   38bcc:	movw	r1, #6600	; 0x19c8
   38bd0:	mov	r0, r5
   38bd4:	movt	r1, #7
   38bd8:	bl	13490 <strcmp@plt>
   38bdc:	cmp	r0, #0
   38be0:	beq	393cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25540>
   38be4:	movw	r1, #6616	; 0x19d8
   38be8:	mov	r0, r5
   38bec:	movt	r1, #7
   38bf0:	bl	13490 <strcmp@plt>
   38bf4:	cmp	r0, #0
   38bf8:	beq	39428 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2559c>
   38bfc:	movw	r1, #6628	; 0x19e4
   38c00:	mov	r0, r5
   38c04:	movt	r1, #7
   38c08:	bl	13490 <strcmp@plt>
   38c0c:	cmp	r0, #0
   38c10:	beq	39418 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2558c>
   38c14:	movw	r1, #6640	; 0x19f0
   38c18:	mov	r0, r5
   38c1c:	movt	r1, #7
   38c20:	bl	13490 <strcmp@plt>
   38c24:	cmp	r0, #0
   38c28:	beq	39438 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x255ac>
   38c2c:	ldrb	r3, [r5]
   38c30:	cmp	r3, #110	; 0x6e
   38c34:	bne	38c5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24dd0>
   38c38:	ldrb	r3, [r5, #1]
   38c3c:	cmp	r3, #111	; 0x6f
   38c40:	bne	38c5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24dd0>
   38c44:	ldrb	r3, [r5, #2]
   38c48:	cmp	r3, #119	; 0x77
   38c4c:	bne	38c5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24dd0>
   38c50:	ldrb	r3, [r5, #3]
   38c54:	cmp	r3, #0
   38c58:	beq	3938c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25500>
   38c5c:	movw	r1, #6648	; 0x19f8
   38c60:	mov	r0, r5
   38c64:	movt	r1, #7
   38c68:	bl	13490 <strcmp@plt>
   38c6c:	cmp	r0, #0
   38c70:	beq	39544 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x256b8>
   38c74:	movw	r1, #6656	; 0x1a00
   38c78:	mov	r0, r5
   38c7c:	movt	r1, #7
   38c80:	bl	13490 <strcmp@plt>
   38c84:	cmp	r0, #0
   38c88:	beq	39504 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25678>
   38c8c:	movw	r1, #6664	; 0x1a08
   38c90:	mov	r0, r5
   38c94:	movt	r1, #7
   38c98:	bl	13490 <strcmp@plt>
   38c9c:	cmp	r0, #0
   38ca0:	beq	394e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2565c>
   38ca4:	movw	r1, #6676	; 0x1a14
   38ca8:	mov	r0, r5
   38cac:	movt	r1, #7
   38cb0:	bl	13490 <strcmp@plt>
   38cb4:	cmp	r0, #0
   38cb8:	beq	394cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25640>
   38cbc:	movw	r1, #6688	; 0x1a20
   38cc0:	mov	r0, r5
   38cc4:	movt	r1, #7
   38cc8:	bl	13490 <strcmp@plt>
   38ccc:	cmp	r0, #0
   38cd0:	beq	394b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25624>
   38cd4:	movw	r1, #6700	; 0x1a2c
   38cd8:	mov	r0, r5
   38cdc:	movt	r1, #7
   38ce0:	bl	13490 <strcmp@plt>
   38ce4:	cmp	r0, #0
   38ce8:	beq	39494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25608>
   38cec:	movw	r1, #6708	; 0x1a34
   38cf0:	mov	r0, r5
   38cf4:	movt	r1, #7
   38cf8:	bl	13490 <strcmp@plt>
   38cfc:	cmp	r0, #0
   38d00:	beq	39478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x255ec>
   38d04:	movw	r1, #6716	; 0x1a3c
   38d08:	mov	r0, r5
   38d0c:	movt	r1, #7
   38d10:	bl	13490 <strcmp@plt>
   38d14:	cmp	r0, #0
   38d18:	beq	39458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x255cc>
   38d1c:	movw	r1, #6724	; 0x1a44
   38d20:	mov	r0, r5
   38d24:	movt	r1, #7
   38d28:	bl	13490 <strcmp@plt>
   38d2c:	cmp	r0, #0
   38d30:	beq	393f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2556c>
   38d34:	movw	r1, #6736	; 0x1a50
   38d38:	mov	r0, r5
   38d3c:	movt	r1, #7
   38d40:	bl	13490 <strcmp@plt>
   38d44:	cmp	r0, #0
   38d48:	beq	393dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25550>
   38d4c:	movw	r1, #6744	; 0x1a58
   38d50:	mov	r0, r5
   38d54:	movt	r1, #7
   38d58:	bl	13490 <strcmp@plt>
   38d5c:	cmp	r0, #0
   38d60:	beq	38d7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24ef0>
   38d64:	mov	r0, r5
   38d68:	movw	r1, #6752	; 0x1a60
   38d6c:	movt	r1, #7
   38d70:	bl	13490 <strcmp@plt>
   38d74:	cmp	r0, #0
   38d78:	bne	39448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x255bc>
   38d7c:	movw	r3, #1088	; 0x440
   38d80:	movt	r3, #10
   38d84:	mov	r1, #1
   38d88:	ldrb	r2, [r3, #3]
   38d8c:	bfc	r2, #6, #1
   38d90:	strb	r2, [r3, #3]
   38d94:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38d98:	movw	r2, #64864	; 0xfd60
   38d9c:	movt	r2, #9
   38da0:	movw	r3, #592	; 0x250
   38da4:	movt	r3, #10
   38da8:	ldr	r2, [r2]
   38dac:	mov	r1, #1
   38db0:	str	r2, [r3, #20]
   38db4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38db8:	movw	r3, #1088	; 0x440
   38dbc:	movt	r3, #10
   38dc0:	mov	r1, #1
   38dc4:	ldrb	r2, [r3, #4]
   38dc8:	bfc	r2, #5, #1
   38dcc:	strb	r2, [r3, #4]
   38dd0:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38dd4:	movw	r3, #62888	; 0xf5a8
   38dd8:	movt	r3, #9
   38ddc:	mov	r2, #1
   38de0:	mov	r1, r2
   38de4:	str	r2, [r3, #24]
   38de8:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38dec:	movw	r3, #1088	; 0x440
   38df0:	movt	r3, #10
   38df4:	mov	r0, #1
   38df8:	ldrb	r2, [r3, #3]
   38dfc:	mov	r1, r0
   38e00:	bfi	r2, r0, #3, #2
   38e04:	strb	r2, [r3, #3]
   38e08:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38e0c:	movw	r4, #64864	; 0xfd60
   38e10:	movt	r4, #9
   38e14:	mov	r2, #0
   38e18:	mov	r1, sp
   38e1c:	ldr	r0, [r4]
   38e20:	bl	13478 <bfd_scan_vma@plt>
   38e24:	ldr	r2, [sp]
   38e28:	movw	r3, #62888	; 0xf5a8
   38e2c:	movt	r3, #9
   38e30:	ldrb	r2, [r2]
   38e34:	cmp	r2, #0
   38e38:	strd	r0, [r3, #8]
   38e3c:	beq	388f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a64>
   38e40:	movw	r1, #62704	; 0xf4f0
   38e44:	movt	r1, #4
   38e48:	mov	r0, #0
   38e4c:	mov	r2, #5
   38e50:	bl	13688 <dcgettext@plt>
   38e54:	ldr	r1, [r4]
   38e58:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   38e5c:	b	388f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a64>
   38e60:	movw	r3, #592	; 0x250
   38e64:	movt	r3, #10
   38e68:	mov	r2, #1
   38e6c:	mov	r1, r2
   38e70:	str	r2, [r3, #48]	; 0x30
   38e74:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38e78:	movw	r3, #62888	; 0xf5a8
   38e7c:	movt	r3, #9
   38e80:	mov	r2, #0
   38e84:	mov	r1, #1
   38e88:	str	r2, [r3, #24]
   38e8c:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38e90:	movw	r3, #592	; 0x250
   38e94:	movt	r3, #10
   38e98:	mov	r2, #0
   38e9c:	mov	r1, #1
   38ea0:	str	r2, [r3, #28]
   38ea4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38ea8:	movw	r3, #592	; 0x250
   38eac:	movt	r3, #10
   38eb0:	mov	r2, #1
   38eb4:	mov	r1, r2
   38eb8:	str	r2, [r3, #28]
   38ebc:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38ec0:	movw	r3, #592	; 0x250
   38ec4:	movt	r3, #10
   38ec8:	mov	r2, #2
   38ecc:	mov	r1, #1
   38ed0:	str	r2, [r3, #32]
   38ed4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38ed8:	movw	r0, #1088	; 0x440
   38edc:	movt	r0, #10
   38ee0:	mov	r4, #4
   38ee4:	mov	r5, #0
   38ee8:	ldrd	r2, [r0, #120]	; 0x78
   38eec:	mov	r1, #1
   38ef0:	ldrb	ip, [r0, #2]
   38ef4:	orr	r3, r3, r5
   38ef8:	orr	r2, r2, r4
   38efc:	strd	r2, [r0, #120]	; 0x78
   38f00:	orr	r3, ip, #120	; 0x78
   38f04:	strb	r3, [r0, #2]
   38f08:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38f0c:	bl	137fc <bfd_elf32_arm_use_long_plt@plt>
   38f10:	mov	r1, #1
   38f14:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38f18:	movw	r3, #592	; 0x250
   38f1c:	movt	r3, #10
   38f20:	mov	r2, #1
   38f24:	mov	r1, r2
   38f28:	str	r2, [r3, #36]	; 0x24
   38f2c:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38f30:	movw	r4, #64864	; 0xfd60
   38f34:	movt	r4, #9
   38f38:	movw	r5, #1088	; 0x440
   38f3c:	movt	r5, #10
   38f40:	ldr	r6, [r4]
   38f44:	movw	r1, #6304	; 0x18a0
   38f48:	ldrb	r2, [r5, #3]
   38f4c:	movt	r1, #7
   38f50:	ldrb	r3, [r5, #4]
   38f54:	mov	r0, r6
   38f58:	bfc	r2, #7, #1
   38f5c:	bfc	r3, #0, #1
   38f60:	strb	r2, [r5, #3]
   38f64:	strb	r3, [r5, #4]
   38f68:	bl	13490 <strcmp@plt>
   38f6c:	cmp	r0, #0
   38f70:	beq	390c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25234>
   38f74:	ldrb	r3, [r6]
   38f78:	cmp	r3, #103	; 0x67
   38f7c:	bne	39104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25278>
   38f80:	ldrb	r3, [r6, #1]
   38f84:	cmp	r3, #110	; 0x6e
   38f88:	bne	39104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25278>
   38f8c:	ldrb	r3, [r6, #2]
   38f90:	cmp	r3, #117	; 0x75
   38f94:	bne	39104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25278>
   38f98:	ldrb	r3, [r6, #3]
   38f9c:	cmp	r3, #0
   38fa0:	bne	39104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25278>
   38fa4:	ldrb	r3, [r5, #4]
   38fa8:	mov	r1, #1
   38fac:	orr	r3, r3, r1
   38fb0:	strb	r3, [r5, #4]
   38fb4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   38fb8:	movw	r4, #592	; 0x250
   38fbc:	movt	r4, #10
   38fc0:	ldr	r0, [r4, #8]
   38fc4:	cmp	r0, #0
   38fc8:	beq	38fd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2514c>
   38fcc:	bl	13574 <free@plt>
   38fd0:	mov	r3, #0
   38fd4:	str	r3, [r4, #8]
   38fd8:	movw	r3, #64864	; 0xfd60
   38fdc:	movt	r3, #9
   38fe0:	ldr	r5, [r3]
   38fe4:	cmp	r5, #0
   38fe8:	movweq	r5, #22268	; 0x56fc
   38fec:	movteq	r5, #5
   38ff0:	streq	r5, [r3]
   38ff4:	beq	39010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25184>
   38ff8:	movw	r1, #3900	; 0xf3c
   38ffc:	mov	r0, r5
   39000:	movt	r1, #5
   39004:	bl	13490 <strcmp@plt>
   39008:	cmp	r0, #0
   3900c:	beq	388f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a64>
   39010:	mov	r0, r5
   39014:	bl	137e4 <xstrdup@plt>
   39018:	mov	r1, #1
   3901c:	str	r0, [r4, #8]
   39020:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39024:	movw	r3, #592	; 0x250
   39028:	movt	r3, #10
   3902c:	mov	r2, #1
   39030:	mov	r1, r2
   39034:	str	r2, [r3, #52]	; 0x34
   39038:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   3903c:	movw	r3, #64864	; 0xfd60
   39040:	movt	r3, #9
   39044:	ldr	r0, [r3]
   39048:	bl	23714 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf888>
   3904c:	mov	r1, #1
   39050:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39054:	movw	r2, #64864	; 0xfd60
   39058:	movt	r2, #9
   3905c:	movw	r3, #62888	; 0xf5a8
   39060:	movt	r3, #9
   39064:	ldr	r2, [r2]
   39068:	mov	r1, #1
   3906c:	str	r2, [r3]
   39070:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39074:	movw	r3, #62888	; 0xf5a8
   39078:	movt	r3, #9
   3907c:	mov	r2, #0
   39080:	mov	r1, #1
   39084:	str	r2, [r3, #16]
   39088:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   3908c:	movw	r3, #64864	; 0xfd60
   39090:	movt	r3, #9
   39094:	ldr	r0, [pc, #1260]	; 39588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x256fc>
   39098:	ldr	r1, [r3]
   3909c:	bl	385b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2472c>
   390a0:	mov	r1, #1
   390a4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   390a8:	movw	r3, #592	; 0x250
   390ac:	movt	r3, #10
   390b0:	mov	r2, #1
   390b4:	mov	r1, r2
   390b8:	str	r2, [r3, #40]	; 0x28
   390bc:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   390c0:	ldrb	r3, [r5, #3]
   390c4:	mov	r1, #1
   390c8:	orr	r3, r3, #128	; 0x80
   390cc:	strb	r3, [r5, #3]
   390d0:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   390d4:	movw	r3, #1088	; 0x440
   390d8:	movt	r3, #10
   390dc:	mov	r1, #1
   390e0:	str	r0, [r3, #12]
   390e4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   390e8:	movw	r3, #1088	; 0x440
   390ec:	movt	r3, #10
   390f0:	mov	r1, #1
   390f4:	ldrb	r2, [r3, #2]
   390f8:	orr	r2, r2, #24
   390fc:	strb	r2, [r3, #2]
   39100:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39104:	mov	r0, r6
   39108:	movw	r1, #6312	; 0x18a8
   3910c:	movt	r1, #7
   39110:	bl	13490 <strcmp@plt>
   39114:	cmp	r0, #0
   39118:	bne	39258 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253cc>
   3911c:	ldrb	r2, [r5, #3]
   39120:	mov	r1, #1
   39124:	ldrb	r3, [r5, #4]
   39128:	orr	r2, r2, #128	; 0x80
   3912c:	strb	r2, [r5, #3]
   39130:	orr	r3, r3, r1
   39134:	strb	r3, [r5, #4]
   39138:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   3913c:	movw	r3, #592	; 0x250
   39140:	movt	r3, #10
   39144:	mov	r1, #1
   39148:	str	r0, [r3, #44]	; 0x2c
   3914c:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39150:	movw	r3, #592	; 0x250
   39154:	movt	r3, #10
   39158:	mov	r2, #1
   3915c:	mov	r1, r2
   39160:	str	r2, [r3, #44]	; 0x2c
   39164:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39168:	movw	r3, #592	; 0x250
   3916c:	movt	r3, #10
   39170:	mov	r2, #2
   39174:	mov	r1, #1
   39178:	str	r2, [r3, #40]	; 0x28
   3917c:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39180:	movw	r3, #1088	; 0x440
   39184:	movt	r3, #10
   39188:	mov	r1, #1
   3918c:	ldrb	r2, [r3, #5]
   39190:	orr	r2, r2, r1
   39194:	strb	r2, [r3, #5]
   39198:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   3919c:	ldrb	r3, [r5, #1]
   391a0:	cmp	r3, #108	; 0x6c
   391a4:	bne	389a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b18>
   391a8:	ldrb	r3, [r5, #2]
   391ac:	cmp	r3, #108	; 0x6c
   391b0:	bne	389a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b18>
   391b4:	ldrb	r3, [r5, #3]
   391b8:	cmp	r3, #0
   391bc:	bne	389a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24b18>
   391c0:	movw	r3, #592	; 0x250
   391c4:	movt	r3, #10
   391c8:	mov	r2, #2
   391cc:	mov	r1, #1
   391d0:	str	r2, [r3, #44]	; 0x2c
   391d4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   391d8:	movw	r3, #1088	; 0x440
   391dc:	movt	r3, #10
   391e0:	mov	r2, #3
   391e4:	mov	r1, #1
   391e8:	str	r2, [r3, #12]
   391ec:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   391f0:	mov	r1, sp
   391f4:	add	r0, r5, #14
   391f8:	bl	13a18 <strtoul@plt>
   391fc:	ldr	r2, [sp]
   39200:	movw	r3, #1336	; 0x538
   39204:	movt	r3, #10
   39208:	mov	r1, #0
   3920c:	strd	r0, [r3, #104]	; 0x68
   39210:	ldrb	r3, [r2]
   39214:	cmp	r3, #0
   39218:	bne	39234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x253a8>
   3921c:	subs	r2, r0, #1
   39220:	sbc	r3, r1, #0
   39224:	and	r0, r0, r2
   39228:	and	r1, r1, r3
   3922c:	orrs	r3, r0, r1
   39230:	beq	388f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a64>
   39234:	mov	r2, #5
   39238:	movw	r1, #6384	; 0x18f0
   3923c:	mov	r0, #0
   39240:	movt	r1, #7
   39244:	bl	13688 <dcgettext@plt>
   39248:	ldr	r1, [r4]
   3924c:	add	r1, r1, #14
   39250:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   39254:	b	388f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a64>
   39258:	movw	r1, #6320	; 0x18b0
   3925c:	mov	r0, #0
   39260:	movt	r1, #7
   39264:	b	38e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24fc0>
   39268:	movw	r1, #6808	; 0x1a98
   3926c:	mov	r0, #0
   39270:	movt	r1, #7
   39274:	b	38e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24fc0>
   39278:	mov	r1, sp
   3927c:	add	r0, r5, #17
   39280:	bl	13a18 <strtoul@plt>
   39284:	ldr	r2, [sp]
   39288:	movw	r3, #1336	; 0x538
   3928c:	movt	r3, #10
   39290:	mov	r1, #0
   39294:	strd	r0, [r3, #112]	; 0x70
   39298:	ldrb	r3, [r2]
   3929c:	cmp	r3, #0
   392a0:	bne	392bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25430>
   392a4:	subs	r2, r0, #1
   392a8:	sbc	r3, r1, #0
   392ac:	and	r0, r0, r2
   392b0:	and	r1, r1, r3
   392b4:	orrs	r3, r0, r1
   392b8:	beq	388f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a64>
   392bc:	mov	r2, #5
   392c0:	movw	r1, #6444	; 0x192c
   392c4:	mov	r0, #0
   392c8:	movt	r1, #7
   392cc:	bl	13688 <dcgettext@plt>
   392d0:	ldr	r1, [r4]
   392d4:	add	r1, r1, #17
   392d8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   392dc:	b	388f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a64>
   392e0:	movw	r3, #1088	; 0x440
   392e4:	movt	r3, #10
   392e8:	mov	r1, #1
   392ec:	ldrb	r2, [r3, #5]
   392f0:	orr	r2, r2, #8
   392f4:	bfi	r2, r0, #4, #1
   392f8:	strb	r2, [r3, #5]
   392fc:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39300:	movw	r3, #1088	; 0x440
   39304:	movt	r3, #10
   39308:	mov	r1, #1
   3930c:	ldrb	r2, [r3, #5]
   39310:	orr	r2, r2, #16
   39314:	bfi	r2, r0, #3, #1
   39318:	strb	r2, [r3, #5]
   3931c:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39320:	bl	13694 <__stack_chk_fail@plt>
   39324:	movw	r0, #1088	; 0x440
   39328:	movt	r0, #10
   3932c:	mov	r4, #16777216	; 0x1000000
   39330:	ldrd	r2, [r0, #120]	; 0x78
   39334:	mov	r5, #0
   39338:	mov	r1, #1
   3933c:	orr	r2, r2, r4
   39340:	orr	r3, r3, r5
   39344:	strd	r2, [r0, #120]	; 0x78
   39348:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   3934c:	movw	r0, #1088	; 0x440
   39350:	mov	r4, #2
   39354:	movt	r0, #10
   39358:	b	39330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254a4>
   3935c:	movw	r0, #1088	; 0x440
   39360:	mov	r4, #32
   39364:	movt	r0, #10
   39368:	b	39330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254a4>
   3936c:	movw	r0, #1088	; 0x440
   39370:	mov	r4, #1024	; 0x400
   39374:	movt	r0, #10
   39378:	b	39330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254a4>
   3937c:	movw	r0, #1088	; 0x440
   39380:	mov	r4, #16
   39384:	movt	r0, #10
   39388:	b	39330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254a4>
   3938c:	movw	r0, #1088	; 0x440
   39390:	movt	r0, #10
   39394:	mov	sl, #8
   39398:	mov	fp, #0
   3939c:	ldrd	r4, [r0, #112]	; 0x70
   393a0:	mov	r6, #1
   393a4:	ldrd	r2, [r0, #120]	; 0x78
   393a8:	mov	r7, #0
   393ac:	orr	r4, r4, sl
   393b0:	orr	r5, r5, fp
   393b4:	orr	r2, r2, r6
   393b8:	orr	r3, r3, r7
   393bc:	mov	r1, #1
   393c0:	strd	r4, [r0, #112]	; 0x70
   393c4:	strd	r2, [r0, #120]	; 0x78
   393c8:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   393cc:	movw	r0, #1088	; 0x440
   393d0:	mov	r4, #2048	; 0x800
   393d4:	movt	r0, #10
   393d8:	b	39330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254a4>
   393dc:	movw	r3, #1088	; 0x440
   393e0:	movt	r3, #10
   393e4:	mov	r1, #1
   393e8:	ldrb	r2, [r3, #3]
   393ec:	orr	r2, r2, #64	; 0x40
   393f0:	strb	r2, [r3, #3]
   393f4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   393f8:	movw	r3, #1088	; 0x440
   393fc:	movt	r3, #10
   39400:	mov	r0, #2
   39404:	mov	r1, #1
   39408:	ldr	r2, [r3]
   3940c:	bfi	r2, r0, #15, #2
   39410:	str	r2, [r3]
   39414:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39418:	movw	r0, #1088	; 0x440
   3941c:	mov	r4, #64	; 0x40
   39420:	movt	r0, #10
   39424:	b	39330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254a4>
   39428:	movw	r0, #1088	; 0x440
   3942c:	mov	r4, #8
   39430:	movt	r0, #10
   39434:	b	39330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254a4>
   39438:	movw	r0, #1088	; 0x440
   3943c:	mov	r4, #4096	; 0x1000
   39440:	movt	r0, #10
   39444:	b	39330 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x254a4>
   39448:	movw	r1, #6760	; 0x1a68
   3944c:	mov	r0, #0
   39450:	movt	r1, #7
   39454:	b	38e4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24fc0>
   39458:	movw	r3, #1088	; 0x440
   3945c:	movt	r3, #10
   39460:	mov	r0, #1
   39464:	ldr	r2, [r3]
   39468:	mov	r1, r0
   3946c:	bfi	r2, r0, #15, #2
   39470:	str	r2, [r3]
   39474:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39478:	movw	r3, #1088	; 0x440
   3947c:	movt	r3, #10
   39480:	mov	r1, #1
   39484:	ldrb	r2, [r3, #3]
   39488:	bfi	r2, r0, #2, #1
   3948c:	strb	r2, [r3, #3]
   39490:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39494:	movw	r3, #1088	; 0x440
   39498:	movt	r3, #10
   3949c:	mov	r1, #1
   394a0:	ldrb	r2, [r3, #3]
   394a4:	orr	r2, r2, #4
   394a8:	strb	r2, [r3, #3]
   394ac:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   394b0:	movw	r3, #1088	; 0x440
   394b4:	movt	r3, #10
   394b8:	mov	r1, #1
   394bc:	ldrb	r2, [r3]
   394c0:	orr	r2, r2, #8
   394c4:	strb	r2, [r3]
   394c8:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   394cc:	movw	r3, #1088	; 0x440
   394d0:	movt	r3, #10
   394d4:	mov	r1, #1
   394d8:	ldrb	r2, [r3, #4]
   394dc:	bfi	r2, r0, #3, #1
   394e0:	strb	r2, [r3, #4]
   394e4:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   394e8:	movw	r3, #1088	; 0x440
   394ec:	movt	r3, #10
   394f0:	mov	r1, #1
   394f4:	ldrb	r2, [r3, #4]
   394f8:	orr	r2, r2, #8
   394fc:	strb	r2, [r3, #4]
   39500:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39504:	movw	r0, #1088	; 0x440
   39508:	movt	r0, #10
   3950c:	mov	r6, #1
   39510:	mov	r7, #0
   39514:	ldrd	r2, [r0, #112]	; 0x70
   39518:	mov	r4, #128	; 0x80
   3951c:	ldrd	sl, [r0, #120]	; 0x78
   39520:	mov	r5, #0
   39524:	orr	r2, r2, r6
   39528:	orr	r3, r3, r7
   3952c:	orr	r4, r4, sl
   39530:	orr	r5, r5, fp
   39534:	mov	r1, #1
   39538:	strd	r2, [r0, #112]	; 0x70
   3953c:	strd	r4, [r0, #120]	; 0x78
   39540:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39544:	movw	r0, #1088	; 0x440
   39548:	movt	r0, #10
   3954c:	mvn	r6, #8
   39550:	mvn	r7, #0
   39554:	ldrd	r2, [r0, #112]	; 0x70
   39558:	mvn	r4, #1
   3955c:	ldrd	sl, [r0, #120]	; 0x78
   39560:	mvn	r5, #0
   39564:	and	r2, r2, r6
   39568:	and	r3, r3, r7
   3956c:	and	r4, r4, sl
   39570:	and	r5, r5, fp
   39574:	mov	r1, #1
   39578:	strd	r2, [r0, #112]	; 0x70
   3957c:	strd	r4, [r0, #120]	; 0x78
   39580:	b	388f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x24a68>
   39584:	andeq	r0, sl, ip, asr r2
   39588:	andeq	r0, sl, r0, ror #4
   3958c:	push	{r3, r4, r5, r6, r7, lr}
   39590:	mov	r4, r0
   39594:	mov	r6, r1
   39598:	ldr	r0, [r1]
   3959c:	add	r1, r4, #6
   395a0:	mov	r5, r3
   395a4:	mov	r7, r2
   395a8:	bl	13724 <xrealloc@plt>
   395ac:	movw	ip, #6884	; 0x1ae4
   395b0:	movt	ip, #7
   395b4:	add	r7, r7, #32
   395b8:	ldrh	r2, [ip, #4]
   395bc:	lsl	r7, r7, #4
   395c0:	mov	r1, r7
   395c4:	sub	r7, r7, #512	; 0x200
   395c8:	mov	lr, r0
   395cc:	add	r3, r0, r4
   395d0:	ldr	r0, [ip]
   395d4:	str	lr, [r6]
   395d8:	str	r0, [lr, r4]
   395dc:	strh	r2, [r3, #4]
   395e0:	ldr	r0, [r5]
   395e4:	bl	13724 <xrealloc@plt>
   395e8:	movw	r1, #9128	; 0x23a8
   395ec:	mov	r2, #512	; 0x200
   395f0:	movt	r1, #7
   395f4:	str	r0, [r5]
   395f8:	add	r0, r0, r7
   395fc:	pop	{r3, r4, r5, r6, r7, lr}
   39600:	b	135c8 <memcpy@plt>
   39604:	push	{r3, r4, r5, lr}
   39608:	mov	r5, r0
   3960c:	ldr	r4, [r1]
   39610:	cmp	r4, #0
   39614:	beq	39684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257f8>
   39618:	ldr	r3, [r4, #4]
   3961c:	cmp	r3, #15
   39620:	ldrls	pc, [pc, r3, lsl #2]
   39624:	b	39668 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257dc>
   39628:	andeq	r9, r3, ip, lsl #13
   3962c:	andeq	r9, r3, r8, ror r6
   39630:	andeq	r9, r3, r8, ror r6
   39634:	andeq	r9, r3, r8, ror r6
   39638:	andeq	r9, r3, r4, lsl #14
   3963c:	ldrdeq	r9, [r3], -r8
   39640:	andeq	r9, r3, r8, ror r6
   39644:	andeq	r9, r3, r8, ror r6
   39648:	andeq	r9, r3, r8, ror r6
   3964c:	andeq	r9, r3, r8, ror r6
   39650:	andeq	r9, r3, r8, ror r6
   39654:	andeq	r9, r3, r8, ror r6
   39658:	andeq	r9, r3, r8, ror r6
   3965c:	andeq	r9, r3, r0, asr #13
   39660:	andeq	r9, r3, r8, ror #12
   39664:	andeq	r9, r3, r4, lsr #13
   39668:	movw	r0, #56524	; 0xdccc
   3966c:	movw	r1, #275	; 0x113
   39670:	movt	r0, #8
   39674:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   39678:	ldr	r4, [r4]
   3967c:	cmp	r4, #0
   39680:	bne	39618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2578c>
   39684:	mov	r0, #0
   39688:	pop	{r3, r4, r5, pc}
   3968c:	mov	r0, r5
   39690:	add	r1, r4, #8
   39694:	bl	39604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25778>
   39698:	cmp	r0, #0
   3969c:	beq	39678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257ec>
   396a0:	pop	{r3, r4, r5, pc}
   396a4:	movw	r1, #1060	; 0x424
   396a8:	mov	r0, r5
   396ac:	movt	r1, #10
   396b0:	bl	39604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25778>
   396b4:	cmp	r0, #0
   396b8:	beq	39678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257ec>
   396bc:	pop	{r3, r4, r5, pc}
   396c0:	mov	r0, r5
   396c4:	add	r1, r4, #8
   396c8:	bl	39604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25778>
   396cc:	cmp	r0, #0
   396d0:	beq	39678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257ec>
   396d4:	pop	{r3, r4, r5, pc}
   396d8:	ldr	r2, [r4, #8]
   396dc:	ldr	r3, [r5, #8]
   396e0:	cmp	r2, r3
   396e4:	bne	39678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257ec>
   396e8:	ldr	r3, [r5, #4]
   396ec:	mov	r0, #1
   396f0:	ldr	r2, [r4]
   396f4:	str	r2, [r3]
   396f8:	ldr	r3, [r5]
   396fc:	str	r3, [r4]
   39700:	pop	{r3, r4, r5, pc}
   39704:	mov	r0, r5
   39708:	add	r1, r4, #24
   3970c:	bl	39604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25778>
   39710:	cmp	r0, #0
   39714:	beq	39678 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x257ec>
   39718:	pop	{r3, r4, r5, pc}
   3971c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39720:	movw	r5, #1088	; 0x440
   39724:	movt	r5, #10
   39728:	sub	sp, sp, #44	; 0x2c
   3972c:	movw	r1, #9116	; 0x239c
   39730:	movt	r1, #7
   39734:	ldr	r6, [r5, #52]	; 0x34
   39738:	ldr	r3, [r6, #4]
   3973c:	ldr	r0, [r3]
   39740:	bl	1340c <strstr@plt>
   39744:	cmp	r0, #0
   39748:	movweq	r0, #6916	; 0x1b04
   3974c:	movteq	r0, #7
   39750:	beq	3983c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x259b0>
   39754:	movw	ip, #62888	; 0xf5a8
   39758:	movt	ip, #9
   3975c:	movw	r4, #592	; 0x250
   39760:	movt	r4, #10
   39764:	ldr	lr, [ip, #16]
   39768:	mov	r0, r6
   3976c:	ldr	r3, [ip]
   39770:	mov	r1, r5
   39774:	ldr	r6, [r4, #52]	; 0x34
   39778:	str	lr, [sp, #28]
   3977c:	ldr	fp, [r4, #32]
   39780:	ldr	ip, [ip, #24]
   39784:	ldr	lr, [r4, #56]	; 0x38
   39788:	ldr	sl, [r4, #36]	; 0x24
   3978c:	ldr	r9, [r4, #40]	; 0x28
   39790:	ldr	r8, [r4, #44]	; 0x2c
   39794:	ldr	r7, [r4, #48]	; 0x30
   39798:	str	lr, [sp, #24]
   3979c:	str	ip, [sp, #32]
   397a0:	ldr	r2, [r4, #28]
   397a4:	str	r6, [sp, #20]
   397a8:	str	fp, [sp]
   397ac:	str	sl, [sp, #4]
   397b0:	str	r9, [sp, #8]
   397b4:	str	r8, [sp, #12]
   397b8:	str	r7, [sp, #16]
   397bc:	bl	13ce8 <bfd_elf32_arm_set_target_relocs@plt>
   397c0:	mov	r1, #3
   397c4:	mov	r2, #0
   397c8:	movw	r0, #6992	; 0x1b50
   397cc:	movt	r0, #7
   397d0:	bl	20ff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd16c>
   397d4:	ldr	r1, [r5, #52]	; 0x34
   397d8:	mov	r6, r0
   397dc:	movw	r0, #6992	; 0x1b50
   397e0:	movt	r0, #7
   397e4:	str	r6, [r4]
   397e8:	bl	13868 <bfd_create@plt>
   397ec:	ldr	r3, [r4]
   397f0:	str	r0, [r6, #16]
   397f4:	ldr	r6, [r3, #16]
   397f8:	cmp	r6, #0
   397fc:	beq	39834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x259a8>
   39800:	ldr	r3, [r6, #4]
   39804:	ldr	r0, [r5, #52]	; 0x34
   39808:	ldr	r7, [r3, #336]	; 0x150
   3980c:	bl	13a60 <bfd_get_arch@plt>
   39810:	mov	r8, r0
   39814:	ldr	r0, [r5, #52]	; 0x34
   39818:	bl	13b2c <bfd_get_mach@plt>
   3981c:	mov	r1, r8
   39820:	mov	r2, r0
   39824:	mov	r0, r6
   39828:	blx	r7
   3982c:	cmp	r0, #0
   39830:	bne	39848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x259bc>
   39834:	movw	r0, #7008	; 0x1b60
   39838:	movt	r0, #7
   3983c:	add	sp, sp, #44	; 0x2c
   39840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39844:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   39848:	ldr	r0, [r4]
   3984c:	ldr	r3, [r0, #16]
   39850:	ldr	r2, [r3, #40]	; 0x28
   39854:	orr	r2, r2, #131072	; 0x20000
   39858:	str	r2, [r3, #40]	; 0x28
   3985c:	bl	243b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x10524>
   39860:	ldr	r3, [r4]
   39864:	mov	r1, r5
   39868:	ldr	r0, [r3, #16]
   3986c:	bl	13b20 <bfd_elf32_arm_add_glue_sections_to_bfd@plt>
   39870:	ldr	r3, [r4]
   39874:	mov	r1, r5
   39878:	ldr	r0, [r3, #16]
   3987c:	add	sp, sp, #44	; 0x2c
   39880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39884:	b	1388c <bfd_elf32_arm_get_bfd_for_interworking@plt>
   39888:	movw	r3, #65504	; 0xffe0
   3988c:	movt	r3, #9
   39890:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   39894:	sub	sp, sp, #8
   39898:	ldr	r4, [r3]
   3989c:	cmp	r4, #0
   398a0:	beq	398d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a44>
   398a4:	ldr	r0, [r4, #16]
   398a8:	movw	r1, #1088	; 0x440
   398ac:	movt	r1, #10
   398b0:	bl	13838 <bfd_elf32_arm_vfp11_fix_veneer_locations@plt>
   398b4:	ldr	r0, [r4, #16]
   398b8:	movw	r1, #1088	; 0x440
   398bc:	movt	r1, #10
   398c0:	bl	1355c <bfd_elf32_arm_stm32l4xx_fix_veneer_locations@plt>
   398c4:	ldr	r4, [r4, #24]
   398c8:	cmp	r4, #0
   398cc:	bne	398a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a18>
   398d0:	movw	r4, #1088	; 0x440
   398d4:	movt	r4, #10
   398d8:	movw	r8, #592	; 0x250
   398dc:	movt	r8, #10
   398e0:	ldrb	r3, [r4]
   398e4:	and	r3, r3, #3
   398e8:	cmp	r3, #2
   398ec:	beq	39914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a88>
   398f0:	ldr	r3, [r8]
   398f4:	ldr	r3, [r3, #16]
   398f8:	ldr	r3, [r3, #100]	; 0x64
   398fc:	cmp	r3, #0
   39900:	beq	39914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a88>
   39904:	mov	r0, r4
   39908:	bl	13c64 <elf32_arm_build_stubs@plt>
   3990c:	cmp	r0, #0
   39910:	beq	399c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b3c>
   39914:	bl	2f278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3ec>
   39918:	ldr	r1, [r8, #20]
   3991c:	cmp	r1, #0
   39920:	beq	39978 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25aec>
   39924:	mov	r2, #0
   39928:	ldr	r0, [r4, #32]
   3992c:	mov	ip, #1
   39930:	mov	r3, r2
   39934:	str	ip, [sp]
   39938:	bl	13880 <bfd_link_hash_lookup@plt>
   3993c:	cmp	r0, #0
   39940:	beq	39954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ac8>
   39944:	ldrb	r3, [r0, #12]
   39948:	sub	r3, r3, #3
   3994c:	cmp	r3, #1
   39950:	bls	399d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b4c>
   39954:	mov	r2, #5
   39958:	movw	r1, #7128	; 0x1bd8
   3995c:	mov	r0, #0
   39960:	movt	r1, #7
   39964:	bl	13688 <dcgettext@plt>
   39968:	ldr	r1, [r8, #20]
   3996c:	add	sp, sp, #8
   39970:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   39974:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   39978:	movw	r5, #4
   3997c:	movt	r5, #10
   39980:	ldr	r3, [r5, #4]
   39984:	cmp	r3, #0
   39988:	beq	399c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b34>
   3998c:	mov	r2, r1
   39990:	ldr	r0, [r4, #32]
   39994:	mov	r1, r3
   39998:	mov	ip, #1
   3999c:	mov	r3, r2
   399a0:	str	ip, [sp]
   399a4:	bl	13880 <bfd_link_hash_lookup@plt>
   399a8:	cmp	r0, #0
   399ac:	beq	399c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25b34>
   399b0:	ldrb	r3, [r0, #66]	; 0x42
   399b4:	and	r3, r3, #3
   399b8:	cmp	r3, #1
   399bc:	beq	39944 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ab8>
   399c0:	add	sp, sp, #8
   399c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   399c8:	movw	r0, #7040	; 0x1b80
   399cc:	movt	r0, #7
   399d0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   399d4:	b	39914 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25a88>
   399d8:	ldr	r2, [r0, #20]
   399dc:	ldr	r3, [r2, #88]	; 0x58
   399e0:	cmp	r3, #0
   399e4:	beq	39954 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ac8>
   399e8:	ldrd	r0, [r0, #24]
   399ec:	mov	r4, #1
   399f0:	ldrd	sl, [r3, #32]
   399f4:	mov	r5, #0
   399f8:	ldrd	r6, [r2, #80]	; 0x50
   399fc:	movw	r3, #11112	; 0x2b68
   39a00:	adds	sl, sl, r0
   39a04:	movt	r3, #5
   39a08:	adc	fp, fp, r1
   39a0c:	adds	r6, r6, sl
   39a10:	adc	r7, r7, fp
   39a14:	orr	r4, r4, r6
   39a18:	orr	r5, r5, r7
   39a1c:	ldr	r0, [pc, #128]	; 39aa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c18>
   39a20:	strd	r4, [sp]
   39a24:	mov	r1, #1
   39a28:	mov	r2, #30
   39a2c:	mov	lr, #48	; 0x30
   39a30:	mov	ip, #120	; 0x78
   39a34:	strb	lr, [r8, #60]	; 0x3c
   39a38:	strb	ip, [r8, #61]	; 0x3d
   39a3c:	bl	13acc <__sprintf_chk@plt>
   39a40:	ldr	r4, [r8, #20]
   39a44:	movw	r5, #4
   39a48:	movt	r5, #10
   39a4c:	cmp	r4, #0
   39a50:	beq	39a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c08>
   39a54:	ldr	r3, [r5, #4]
   39a58:	cmp	r3, #0
   39a5c:	beq	39a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c08>
   39a60:	movw	r3, #1012	; 0x3f4
   39a64:	movt	r3, #10
   39a68:	ldr	r3, [r3]
   39a6c:	cmp	r3, #0
   39a70:	beq	39a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c08>
   39a74:	mov	r2, #5
   39a78:	movw	r1, #7072	; 0x1ba0
   39a7c:	mov	r0, #0
   39a80:	movt	r1, #7
   39a84:	bl	13688 <dcgettext@plt>
   39a88:	mov	r1, r4
   39a8c:	ldr	r2, [r5, #4]
   39a90:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   39a94:	ldr	r3, [pc, #12]	; 39aa8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c1c>
   39a98:	str	r3, [r5, #4]
   39a9c:	add	sp, sp, #8
   39aa0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   39aa4:	andeq	r0, sl, lr, lsl #5
   39aa8:	andeq	r0, sl, ip, lsl #5
   39aac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39ab0:	movw	r6, #63248	; 0xf710
   39ab4:	movt	r6, #9
   39ab8:	movw	r5, #1088	; 0x440
   39abc:	movw	r9, #592	; 0x250
   39ac0:	movt	r5, #10
   39ac4:	ldr	r3, [r6]
   39ac8:	movt	r9, #10
   39acc:	sub	sp, sp, #108	; 0x6c
   39ad0:	mov	r0, r5
   39ad4:	ldr	r1, [r9, #24]
   39ad8:	movw	sl, #65504	; 0xffe0
   39adc:	str	r3, [sp, #100]	; 0x64
   39ae0:	movt	sl, #9
   39ae4:	str	r6, [sp, #32]
   39ae8:	bl	13d00 <bfd_elf32_arm_set_byteswap_code@plt>
   39aec:	ldr	r0, [r5, #52]	; 0x34
   39af0:	mov	r1, r5
   39af4:	bl	134c0 <bfd_elf32_arm_set_vfp11_fix@plt>
   39af8:	ldr	r0, [r5, #52]	; 0x34
   39afc:	mov	r1, r5
   39b00:	bl	13934 <bfd_elf32_arm_set_stm32l4xx_fix@plt>
   39b04:	ldr	r0, [r5, #52]	; 0x34
   39b08:	mov	r1, r5
   39b0c:	bl	13604 <bfd_elf32_arm_set_cortex_a8_fix@plt>
   39b10:	mov	r0, r5
   39b14:	bl	13808 <bfd_elf32_arm_keep_private_stub_output_sections@plt>
   39b18:	ldr	r3, [r5, #32]
   39b1c:	ldr	r2, [r3, #56]	; 0x38
   39b20:	cmp	r2, #0
   39b24:	beq	39e18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25f8c>
   39b28:	ldr	r4, [r3, #40]	; 0x28
   39b2c:	cmp	r4, #1
   39b30:	movne	r7, #0
   39b34:	strne	r7, [sp, #36]	; 0x24
   39b38:	beq	39eb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26028>
   39b3c:	movw	r7, #1244	; 0x4dc
   39b40:	movt	r7, #10
   39b44:	ldr	r2, [r7, #64]	; 0x40
   39b48:	cmp	r2, #0
   39b4c:	str	r2, [sp, #40]	; 0x28
   39b50:	beq	39f28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2609c>
   39b54:	ldr	r4, [r5, #56]	; 0x38
   39b58:	cmp	r4, #0
   39b5c:	beq	39c14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25d88>
   39b60:	movw	r6, #1336	; 0x538
   39b64:	mov	r8, #0
   39b68:	movt	r6, #10
   39b6c:	str	r7, [sp, #44]	; 0x2c
   39b70:	str	r5, [sp, #48]	; 0x30
   39b74:	b	39b84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25cf8>
   39b78:	ldr	r4, [r4, #164]	; 0xa4
   39b7c:	cmp	r4, #0
   39b80:	beq	39c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25d80>
   39b84:	ldr	r3, [r4, #4]
   39b88:	ldr	r3, [r3, #4]
   39b8c:	cmp	r3, #5
   39b90:	bne	39b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25cec>
   39b94:	ldr	r3, [r4, #168]	; 0xa8
   39b98:	ldr	r0, [r3, #700]	; 0x2bc
   39b9c:	cmp	r0, #0
   39ba0:	beq	39b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25cec>
   39ba4:	ldrb	r3, [r0]
   39ba8:	cmp	r3, #0
   39bac:	beq	39b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25cec>
   39bb0:	bl	137e4 <xstrdup@plt>
   39bb4:	mov	fp, r0
   39bb8:	b	39bcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25d40>
   39bbc:	cmp	r7, #0
   39bc0:	beq	39b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25cec>
   39bc4:	adds	fp, r5, #1
   39bc8:	beq	39b78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25cec>
   39bcc:	ldrb	r1, [r6, #72]	; 0x48
   39bd0:	mov	r0, fp
   39bd4:	bl	13a48 <strchr@plt>
   39bd8:	subs	r5, r0, #0
   39bdc:	strbne	r8, [r5]
   39be0:	movne	r7, #1
   39be4:	moveq	r7, r5
   39be8:	cmp	fp, #0
   39bec:	beq	39bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25d30>
   39bf0:	ldrb	r3, [fp]
   39bf4:	cmp	r3, #0
   39bf8:	beq	39bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25d30>
   39bfc:	mov	r1, fp
   39c00:	ldr	r0, [pc, #940]	; 39fb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26128>
   39c04:	bl	385b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2472c>
   39c08:	b	39bbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25d30>
   39c0c:	ldr	r7, [sp, #44]	; 0x2c
   39c10:	ldr	r5, [sp, #48]	; 0x30
   39c14:	ldr	r4, [r9, #12]
   39c18:	add	ip, sp, #60	; 0x3c
   39c1c:	ldr	lr, [r9, #16]
   39c20:	ldr	r6, [r7, #76]	; 0x4c
   39c24:	ldr	r0, [r5, #52]	; 0x34
   39c28:	ldr	r1, [r7, #60]	; 0x3c
   39c2c:	ldr	r3, [r7, #72]	; 0x48
   39c30:	ldr	r2, [sp, #40]	; 0x28
   39c34:	str	r5, [sp, #12]
   39c38:	stm	sp, {r4, lr}
   39c3c:	str	r6, [sp, #8]
   39c40:	str	ip, [sp, #16]
   39c44:	bl	13ad8 <bfd_elf_size_dynamic_sections@plt>
   39c48:	cmp	r0, #0
   39c4c:	beq	39df8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25f6c>
   39c50:	ldr	r0, [r7, #56]	; 0x38
   39c54:	cmp	r0, #0
   39c58:	beq	39c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25df4>
   39c5c:	ldr	r4, [sp, #60]	; 0x3c
   39c60:	cmp	r4, #0
   39c64:	beq	39c80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25df4>
   39c68:	str	r0, [r4, #140]	; 0x8c
   39c6c:	bl	13a24 <strlen@plt>
   39c70:	mov	r3, #0
   39c74:	str	r3, [r4, #52]	; 0x34
   39c78:	add	r0, r0, #1
   39c7c:	str	r0, [r4, #48]	; 0x30
   39c80:	ldr	r4, [sl]
   39c84:	cmp	r4, #0
   39c88:	movne	sl, #0
   39c8c:	movne	fp, #0
   39c90:	movne	r9, #0
   39c94:	bne	39ca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e1c>
   39c98:	b	39d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25efc>
   39c9c:	ldr	r4, [r4, #24]
   39ca0:	cmp	r4, #0
   39ca4:	beq	39d88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25efc>
   39ca8:	ldrb	r3, [r4, #36]	; 0x24
   39cac:	tst	r3, #16
   39cb0:	bne	39c9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e10>
   39cb4:	movw	r1, #7292	; 0x1c7c
   39cb8:	ldr	r0, [r4, #16]
   39cbc:	movt	r1, #7
   39cc0:	bl	13844 <bfd_get_section_by_name@plt>
   39cc4:	subs	r8, r0, #0
   39cc8:	beq	39c9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e10>
   39ccc:	ldr	r7, [r8, #48]	; 0x30
   39cd0:	ldr	r3, [r8, #52]	; 0x34
   39cd4:	add	r0, r7, #1
   39cd8:	str	r3, [sp, #28]
   39cdc:	bl	137b4 <xmalloc@plt>
   39ce0:	ldr	r3, [sp, #28]
   39ce4:	mov	r1, r8
   39ce8:	mov	r6, r0
   39cec:	ldr	r0, [r4, #16]
   39cf0:	mov	r2, r6
   39cf4:	str	r3, [sp, #12]
   39cf8:	str	r7, [sp, #8]
   39cfc:	strd	sl, [sp]
   39d00:	bl	1367c <bfd_get_section_contents@plt>
   39d04:	cmp	r0, #0
   39d08:	beq	39de4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25f58>
   39d0c:	strb	r9, [r6, r7]
   39d10:	mov	r1, r6
   39d14:	ldr	ip, [r5, #28]
   39d18:	mov	r2, #0
   39d1c:	ldr	r3, [r4, #16]
   39d20:	movw	r0, #1088	; 0x440
   39d24:	str	r9, [sp]
   39d28:	movt	r0, #10
   39d2c:	strd	sl, [sp, #8]
   39d30:	ldr	ip, [ip, #20]
   39d34:	blx	ip
   39d38:	mov	r0, r6
   39d3c:	bl	13574 <free@plt>
   39d40:	ldr	r1, [r8, #88]	; 0x58
   39d44:	cmp	r1, #0
   39d48:	beq	39d6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ee0>
   39d4c:	ldrd	r6, [r1, #56]	; 0x38
   39d50:	ldrd	r2, [r8, #48]	; 0x30
   39d54:	cmp	r7, r3
   39d58:	cmpeq	r6, r2
   39d5c:	bcc	39d6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25ee0>
   39d60:	subs	r2, r6, r2
   39d64:	sbc	r3, r7, r3
   39d68:	strd	r2, [r1, #56]	; 0x38
   39d6c:	ldr	r4, [r4, #24]
   39d70:	ldr	r3, [r8, #20]
   39d74:	cmp	r4, #0
   39d78:	strd	sl, [r8, #48]	; 0x30
   39d7c:	orr	r3, r3, #2129920	; 0x208000
   39d80:	str	r3, [r8, #20]
   39d84:	bne	39ca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e1c>
   39d88:	bl	2f25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3d0>
   39d8c:	ldr	r0, [r5, #52]	; 0x34
   39d90:	movw	r1, #1088	; 0x440
   39d94:	movt	r1, #10
   39d98:	bl	13c94 <bfd_elf_size_dynsym_hash_dynstr@plt>
   39d9c:	cmp	r0, #0
   39da0:	beq	39e08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25f7c>
   39da4:	ldr	r6, [sp, #36]	; 0x24
   39da8:	cmp	r6, #0
   39dac:	beq	39dc8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25f3c>
   39db0:	add	r3, sp, #80	; 0x50
   39db4:	ldr	r7, [sp, #52]	; 0x34
   39db8:	add	ip, r6, #16
   39dbc:	ldm	r3, {r0, r1, r2, r3}
   39dc0:	strb	r7, [r6, #12]
   39dc4:	stm	ip, {r0, r1, r2, r3}
   39dc8:	ldr	r6, [sp, #32]
   39dcc:	ldr	r2, [sp, #100]	; 0x64
   39dd0:	ldr	r3, [r6]
   39dd4:	cmp	r2, r3
   39dd8:	bne	39fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26124>
   39ddc:	add	sp, sp, #108	; 0x6c
   39de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39de4:	movw	r0, #7308	; 0x1c8c
   39de8:	ldr	r1, [r4, #16]
   39dec:	movt	r0, #7
   39df0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   39df4:	b	39d0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25e80>
   39df8:	movw	r0, #7244	; 0x1c4c
   39dfc:	movt	r0, #7
   39e00:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   39e04:	b	39c50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25dc4>
   39e08:	movw	r0, #7244	; 0x1c4c
   39e0c:	movt	r0, #7
   39e10:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   39e14:	b	39da4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25f18>
   39e18:	ldr	r4, [sl]
   39e1c:	cmp	r4, #0
   39e20:	bne	39e78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25fec>
   39e24:	movw	r0, #1088	; 0x440
   39e28:	movt	r0, #10
   39e2c:	bl	13634 <bfd_elf32_arm_allocate_interworking_sections@plt>
   39e30:	ldr	r3, [r5, #32]
   39e34:	b	39b28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25c9c>
   39e38:	movw	r1, #1088	; 0x440
   39e3c:	ldr	r0, [r4, #16]
   39e40:	movt	r1, #10
   39e44:	bl	13e8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt>
   39e48:	cmp	r0, #0
   39e4c:	bne	39e6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25fe0>
   39e50:	movw	r1, #7176	; 0x1c08
   39e54:	mov	r0, #0
   39e58:	movt	r1, #7
   39e5c:	mov	r2, #5
   39e60:	bl	13688 <dcgettext@plt>
   39e64:	ldr	r1, [r4, #8]
   39e68:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   39e6c:	ldr	r4, [r4, #24]
   39e70:	cmp	r4, #0
   39e74:	beq	39e24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25f98>
   39e78:	ldr	r0, [r4, #16]
   39e7c:	bl	13a90 <bfd_elf32_arm_init_maps@plt>
   39e80:	movw	r1, #1088	; 0x440
   39e84:	ldr	r0, [r4, #16]
   39e88:	movt	r1, #10
   39e8c:	bl	13988 <bfd_elf32_arm_process_before_allocation@plt>
   39e90:	cmp	r0, #0
   39e94:	beq	39e50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25fc4>
   39e98:	movw	r1, #1088	; 0x440
   39e9c:	ldr	r0, [r4, #16]
   39ea0:	movt	r1, #10
   39ea4:	bl	1397c <bfd_elf32_arm_vfp11_erratum_scan@plt>
   39ea8:	cmp	r0, #0
   39eac:	beq	39e50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25fc4>
   39eb0:	b	39e38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25fac>
   39eb4:	movw	r6, #1088	; 0x440
   39eb8:	movt	r6, #10
   39ebc:	ldr	r0, [r5, #52]	; 0x34
   39ec0:	mov	r1, r6
   39ec4:	bl	135ec <_bfd_elf_tls_setup@plt>
   39ec8:	ldrb	r3, [r5]
   39ecc:	and	r3, r3, #3
   39ed0:	cmp	r3, #2
   39ed4:	beq	39f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26084>
   39ed8:	mov	r2, #0
   39edc:	ldr	r0, [r6, #32]
   39ee0:	mov	r3, r2
   39ee4:	str	r4, [sp]
   39ee8:	movw	r1, #7216	; 0x1c30
   39eec:	movt	r1, #7
   39ef0:	bl	13880 <bfd_link_hash_lookup@plt>
   39ef4:	cmp	r0, #0
   39ef8:	str	r0, [sp, #36]	; 0x24
   39efc:	beq	39f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26084>
   39f00:	ldrb	r3, [r0, #12]
   39f04:	cmp	r3, #5
   39f08:	cmpne	r3, #2
   39f0c:	bls	39f3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x260b0>
   39f10:	mov	r7, #0
   39f14:	str	r7, [sp, #36]	; 0x24
   39f18:	movw	r0, #41120	; 0xa0a0
   39f1c:	movt	r0, #3
   39f20:	bl	20f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0b4>
   39f24:	b	39b3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25cb0>
   39f28:	movw	r0, #7232	; 0x1c40
   39f2c:	movt	r0, #7
   39f30:	bl	138f8 <getenv@plt>
   39f34:	str	r0, [sp, #40]	; 0x28
   39f38:	b	39b54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25cc8>
   39f3c:	mov	r0, r6
   39f40:	mov	r2, r4
   39f44:	ldr	r1, [sp, #36]	; 0x24
   39f48:	mov	r4, #3
   39f4c:	bl	13e68 <_bfd_elf_link_hash_hide_symbol@plt>
   39f50:	ldr	r6, [sp, #36]	; 0x24
   39f54:	add	ip, sp, #64	; 0x40
   39f58:	ldrb	r3, [r6, #65]	; 0x41
   39f5c:	and	r2, r3, #3
   39f60:	cmp	r2, #1
   39f64:	bicne	r3, r3, #3
   39f68:	orrne	r3, r3, #2
   39f6c:	strbne	r3, [r6, #65]	; 0x41
   39f70:	ldr	lr, [sp, #36]	; 0x24
   39f74:	ldr	r6, [pc, #60]	; 39fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2612c>
   39f78:	ldr	r7, [sp, #36]	; 0x24
   39f7c:	ldm	lr!, {r0, r1, r2, r3}
   39f80:	stmia	ip!, {r0, r1, r2, r3}
   39f84:	ldm	lr, {r0, r1, r2, r3}
   39f88:	ldr	lr, [sp, #36]	; 0x24
   39f8c:	str	r6, [r7, #20]
   39f90:	mov	r6, #0
   39f94:	mov	r7, #0
   39f98:	strd	r6, [lr, #24]
   39f9c:	ldrb	r6, [lr, #12]
   39fa0:	stm	ip, {r0, r1, r2, r3}
   39fa4:	str	r6, [sp, #52]	; 0x34
   39fa8:	strb	r4, [lr, #12]
   39fac:	b	39f18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2608c>
   39fb0:	bl	13694 <__stack_chk_fail@plt>
   39fb4:	andeq	r0, sl, r0, ror #4
   39fb8:			; <UNDEFINED> instruction: 0x0009fab8
   39fbc:	push	{r4, r5, lr}
   39fc0:	movw	r5, #1088	; 0x440
   39fc4:	sub	sp, sp, #12
   39fc8:	movt	r5, #10
   39fcc:	mov	r4, r0
   39fd0:	ldr	r3, [r4, #12]
   39fd4:	cmp	r3, #6
   39fd8:	ldrls	pc, [pc, r3, lsl #2]
   39fdc:	b	3a098 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2620c>
   39fe0:	andeq	sl, r3, r8, lsl #1
   39fe4:	andeq	sl, r3, r0, ror r0
   39fe8:	andeq	sl, r3, r8, rrx
   39fec:	muleq	r3, r8, r0
   39ff0:	andeq	sl, r3, r4, asr #32
   39ff4:	strdeq	r9, [r3], -ip
   39ff8:	strdeq	r9, [r3], -ip
   39ffc:	ldr	r2, [r4, #16]
   3a000:	mov	r3, #1
   3a004:	ldrb	r1, [r2]
   3a008:	cmp	r1, #46	; 0x2e
   3a00c:	beq	3a058 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x261cc>
   3a010:	ldr	ip, [r4, #28]
   3a014:	movw	r1, #1088	; 0x440
   3a018:	ldr	r0, [r5, #52]	; 0x34
   3a01c:	movt	r1, #10
   3a020:	str	ip, [sp]
   3a024:	bl	134cc <bfd_elf_record_link_assignment@plt>
   3a028:	cmp	r0, #0
   3a02c:	bne	3a090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26204>
   3a030:	movw	r0, #7364	; 0x1cc4
   3a034:	ldr	r1, [r4, #16]
   3a038:	movt	r0, #7
   3a03c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3a040:	b	3a090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26204>
   3a044:	ldr	r2, [r4, #16]
   3a048:	mov	r3, #0
   3a04c:	ldrb	r1, [r2]
   3a050:	cmp	r1, #46	; 0x2e
   3a054:	bne	3a010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26184>
   3a058:	ldrb	r1, [r2, #1]
   3a05c:	cmp	r1, #0
   3a060:	beq	3a090 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26204>
   3a064:	b	3a010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26184>
   3a068:	ldr	r4, [r4, #16]
   3a06c:	b	39fd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26144>
   3a070:	ldr	r0, [r4, #16]
   3a074:	bl	39fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26130>
   3a078:	ldr	r0, [r4, #20]
   3a07c:	bl	39fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26130>
   3a080:	ldr	r4, [r4, #24]
   3a084:	b	39fd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26144>
   3a088:	ldr	r0, [r4, #16]
   3a08c:	bl	39fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26130>
   3a090:	ldr	r4, [r4, #20]
   3a094:	b	39fd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26144>
   3a098:	add	sp, sp, #12
   3a09c:	pop	{r4, r5, pc}
   3a0a0:	ldr	r3, [r0, #4]
   3a0a4:	cmp	r3, #1
   3a0a8:	bxne	lr
   3a0ac:	ldr	r0, [r0, #8]
   3a0b0:	b	39fbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26130>
   3a0b4:	movw	ip, #592	; 0x250
   3a0b8:	movt	ip, #10
   3a0bc:	push	{r4, r5, r6, r7, r8, lr}
   3a0c0:	movw	r4, #63248	; 0xf710
   3a0c4:	movt	r4, #9
   3a0c8:	ldr	lr, [ip]
   3a0cc:	sub	sp, sp, #16
   3a0d0:	mov	r7, r2
   3a0d4:	ldr	ip, [r4]
   3a0d8:	mov	r6, r1
   3a0dc:	movw	r2, #16671	; 0x411f
   3a0e0:	mov	r1, r0
   3a0e4:	movt	r2, #32
   3a0e8:	ldr	r0, [lr, #16]
   3a0ec:	mov	r8, r3
   3a0f0:	str	ip, [sp, #12]
   3a0f4:	bl	1358c <bfd_make_section_anyway_with_flags@plt>
   3a0f8:	subs	r5, r0, #0
   3a0fc:	beq	3a1a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26314>
   3a100:	mov	r0, r6
   3a104:	str	r8, [r5, #92]	; 0x5c
   3a108:	bl	22554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6c8>
   3a10c:	str	r7, [sp, #8]
   3a110:	mov	r6, r0
   3a114:	mov	r0, sp
   3a118:	bl	20f50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0c4>
   3a11c:	mov	r1, r5
   3a120:	mov	r0, sp
   3a124:	mov	r3, r6
   3a128:	mov	r2, #0
   3a12c:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   3a130:	ldr	r1, [sp]
   3a134:	cmp	r1, #0
   3a138:	beq	3a1a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26314>
   3a13c:	cmp	r7, #0
   3a140:	beq	3a174 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262e8>
   3a144:	mov	r0, sp
   3a148:	add	r1, r6, #8
   3a14c:	bl	39604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x25778>
   3a150:	cmp	r0, #0
   3a154:	beq	3a1a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26314>
   3a158:	mov	r0, r5
   3a15c:	ldr	r2, [sp, #12]
   3a160:	ldr	r3, [r4]
   3a164:	cmp	r2, r3
   3a168:	bne	3a1c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26334>
   3a16c:	add	sp, sp, #16
   3a170:	pop	{r4, r5, r6, r7, r8, pc}
   3a174:	ldr	r2, [r6, #8]
   3a178:	cmp	r2, #0
   3a17c:	bne	3a188 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262fc>
   3a180:	b	3a1b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26328>
   3a184:	mov	r2, r3
   3a188:	ldr	r3, [r2]
   3a18c:	cmp	r3, #0
   3a190:	bne	3a184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262f8>
   3a194:	str	r1, [r2]
   3a198:	mov	r0, r5
   3a19c:	b	3a15c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262d0>
   3a1a0:	movw	r0, #7412	; 0x1cf4
   3a1a4:	movt	r0, #7
   3a1a8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3a1ac:	mov	r0, #0
   3a1b0:	b	3a15c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262d0>
   3a1b4:	str	r1, [r6, #8]
   3a1b8:	mov	r0, r5
   3a1bc:	b	3a15c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x262d0>
   3a1c0:	bl	13694 <__stack_chk_fail@plt>
   3a1c4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   3a1c8:	movw	r7, #1088	; 0x440
   3a1cc:	movt	r7, #10
   3a1d0:	movw	r8, #1040	; 0x410
   3a1d4:	movt	r8, #10
   3a1d8:	mov	r6, #10
   3a1dc:	mov	r9, r7
   3a1e0:	bl	25ae4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x11c58>
   3a1e4:	ldr	r0, [r7, #52]	; 0x34
   3a1e8:	ldr	r3, [r0, #4]
   3a1ec:	ldr	r3, [r3, #4]
   3a1f0:	cmp	r3, #5
   3a1f4:	popne	{r3, r4, r5, r6, r7, r8, r9, pc}
   3a1f8:	ldrb	r3, [r9]
   3a1fc:	and	r3, r3, #3
   3a200:	cmp	r3, #2
   3a204:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   3a208:	ldr	r3, [r0, #168]	; 0xa8
   3a20c:	movw	r1, #1088	; 0x440
   3a210:	ldr	r2, [r8]
   3a214:	movt	r1, #10
   3a218:	ldr	r3, [r3, #2508]	; 0x9cc
   3a21c:	cmp	r2, #0
   3a220:	streq	r2, [r3]
   3a224:	ldrd	r4, [r3, #32]
   3a228:	bl	136ac <_bfd_elf_map_sections_to_segments@plt>
   3a22c:	cmp	r0, #0
   3a230:	beq	3a268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x263dc>
   3a234:	ldr	r3, [r7, #52]	; 0x34
   3a238:	ldr	r3, [r3, #168]	; 0xa8
   3a23c:	ldr	r1, [r3, #2508]	; 0x9cc
   3a240:	ldrd	r2, [r1, #32]
   3a244:	cmp	r3, r5
   3a248:	cmpeq	r2, r4
   3a24c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   3a250:	cmp	r6, #6
   3a254:	ble	3a294 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26408>
   3a258:	subs	r6, r6, #1
   3a25c:	beq	3a278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x263ec>
   3a260:	mov	r0, #1
   3a264:	b	3a1e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26354>
   3a268:	movw	r0, #7452	; 0x1d1c
   3a26c:	movt	r0, #7
   3a270:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3a274:	b	3a234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x263a8>
   3a278:	mov	r0, r6
   3a27c:	movw	r1, #7496	; 0x1d48
   3a280:	mov	r2, #5
   3a284:	movt	r1, #7
   3a288:	bl	13688 <dcgettext@plt>
   3a28c:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   3a290:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3a294:	cmp	r5, r3
   3a298:	cmpeq	r4, r2
   3a29c:	bcc	3a258 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x263cc>
   3a2a0:	strd	r4, [r1, #32]
   3a2a4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3a2a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a2ac:	mov	r0, #40	; 0x28
   3a2b0:	sub	sp, sp, #20
   3a2b4:	bl	137b4 <xmalloc@plt>
   3a2b8:	movw	r3, #65504	; 0xffe0
   3a2bc:	movt	r3, #9
   3a2c0:	ldr	r7, [r3]
   3a2c4:	cmp	r7, #0
   3a2c8:	mov	r9, r0
   3a2cc:	beq	3a500 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26674>
   3a2d0:	ldr	sl, [pc, #560]	; 3a508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2667c>
   3a2d4:	mov	r4, #4
   3a2d8:	mov	r5, #0
   3a2dc:	mov	r8, #0
   3a2e0:	mov	fp, #10
   3a2e4:	ldr	r3, [r7, #16]
   3a2e8:	ldr	r2, [r3, #40]	; 0x28
   3a2ec:	ubfx	r2, r2, #5, #20
   3a2f0:	tst	r2, #66	; 0x42
   3a2f4:	bne	3a38c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26500>
   3a2f8:	ldr	r6, [r3, #100]	; 0x64
   3a2fc:	cmp	r6, #0
   3a300:	bne	3a314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26488>
   3a304:	b	3a38c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26500>
   3a308:	ldr	r6, [r6, #12]
   3a30c:	cmp	r6, #0
   3a310:	beq	3a38c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26500>
   3a314:	ldr	r1, [r6, #88]	; 0x58
   3a318:	cmp	r1, #0
   3a31c:	beq	3a308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2647c>
   3a320:	ldr	r3, [r6, #172]	; 0xac
   3a324:	cmp	r3, #0
   3a328:	beq	3a308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2647c>
   3a32c:	ldr	r2, [r3, #4]
   3a330:	cmp	r2, #1
   3a334:	bne	3a308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2647c>
   3a338:	ldrd	r2, [r3, #8]
   3a33c:	and	r2, r2, r4
   3a340:	and	r3, r3, r5
   3a344:	orrs	r0, r2, r3
   3a348:	beq	3a308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2647c>
   3a34c:	ldr	r3, [r6, #20]
   3a350:	tst	r3, #32768	; 0x8000
   3a354:	bne	3a308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2647c>
   3a358:	ldrh	r3, [r6, #24]
   3a35c:	ubfx	r3, r3, #7, #3
   3a360:	cmp	r3, #4
   3a364:	beq	3a308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2647c>
   3a368:	cmp	r1, sl
   3a36c:	beq	3a308 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2647c>
   3a370:	cmp	r8, fp
   3a374:	beq	3a4d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26648>
   3a378:	str	r6, [r9, r8, lsl #2]
   3a37c:	add	r8, r8, #1
   3a380:	ldr	r6, [r6, #12]
   3a384:	cmp	r6, #0
   3a388:	bne	3a314 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26488>
   3a38c:	ldr	r7, [r7, #24]
   3a390:	cmp	r7, #0
   3a394:	bne	3a2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26458>
   3a398:	movw	r5, #62888	; 0xf5a8
   3a39c:	movt	r5, #9
   3a3a0:	mov	r0, r9
   3a3a4:	mov	r1, r8
   3a3a8:	mov	r2, #4
   3a3ac:	movw	r3, #32892	; 0x807c
   3a3b0:	movt	r3, #3
   3a3b4:	movw	r4, #1088	; 0x440
   3a3b8:	bl	13cd0 <qsort@plt>
   3a3bc:	ldr	r3, [r5, #20]
   3a3c0:	mov	r1, r8
   3a3c4:	movw	r2, #1088	; 0x440
   3a3c8:	mov	r0, r9
   3a3cc:	movt	r2, #10
   3a3d0:	bl	13448 <elf32_arm_fix_exidx_coverage@plt>
   3a3d4:	movt	r4, #10
   3a3d8:	cmp	r0, #0
   3a3dc:	mov	r0, r9
   3a3e0:	movwne	r6, #592	; 0x250
   3a3e4:	movtne	r6, #10
   3a3e8:	movne	r3, #1
   3a3ec:	strne	r3, [r6, #92]	; 0x5c
   3a3f0:	bl	13574 <free@plt>
   3a3f4:	ldr	r0, [r4, #52]	; 0x34
   3a3f8:	mov	r1, r4
   3a3fc:	bl	1385c <bfd_elf_discard_info@plt>
   3a400:	cmp	r0, #0
   3a404:	movwlt	r0, #7528	; 0x1d68
   3a408:	movtlt	r0, #7
   3a40c:	blt	3a4f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26668>
   3a410:	movw	r6, #592	; 0x250
   3a414:	movt	r6, #10
   3a418:	movne	r3, #1
   3a41c:	movw	r8, #592	; 0x250
   3a420:	strne	r3, [r6, #92]	; 0x5c
   3a424:	movt	r8, #10
   3a428:	ldr	r3, [r6]
   3a42c:	cmp	r3, #0
   3a430:	beq	3a4b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26628>
   3a434:	ldrb	r3, [r4]
   3a438:	movw	r7, #1088	; 0x440
   3a43c:	movt	r7, #10
   3a440:	and	r3, r3, #3
   3a444:	cmp	r3, #2
   3a448:	beq	3a4b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26628>
   3a44c:	ldr	r0, [r7, #52]	; 0x34
   3a450:	mov	r1, r7
   3a454:	bl	134a8 <elf32_arm_setup_section_lists@plt>
   3a458:	cmp	r0, #0
   3a45c:	beq	3a4b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26628>
   3a460:	blt	3a4ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26660>
   3a464:	movw	r0, #47552	; 0xb9c0
   3a468:	movt	r0, #3
   3a46c:	bl	20f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xd0b4>
   3a470:	ldr	r3, [r8]
   3a474:	ldrd	r4, [r5, #8]
   3a478:	movw	r2, #41140	; 0xa0b4
   3a47c:	ldr	r0, [r7, #52]	; 0x34
   3a480:	movt	r2, #3
   3a484:	ldr	r1, [r3, #16]
   3a488:	movw	r3, #42252	; 0xa50c
   3a48c:	str	r2, [sp, #8]
   3a490:	movt	r3, #3
   3a494:	mov	r2, r7
   3a498:	str	r3, [sp, #12]
   3a49c:	strd	r4, [sp]
   3a4a0:	bl	13dcc <elf32_arm_size_stubs@plt>
   3a4a4:	cmp	r0, #0
   3a4a8:	movweq	r0, #7624	; 0x1dc8
   3a4ac:	movteq	r0, #7
   3a4b0:	beq	3a4f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26668>
   3a4b4:	ldr	r0, [r6, #92]	; 0x5c
   3a4b8:	cmn	r0, #1
   3a4bc:	beq	3a4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26640>
   3a4c0:	add	sp, sp, #20
   3a4c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a4c8:	b	3a1c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26338>
   3a4cc:	add	sp, sp, #20
   3a4d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a4d4:	mov	r0, r9
   3a4d8:	lsl	r1, r8, #3
   3a4dc:	bl	13724 <xrealloc@plt>
   3a4e0:	lsl	fp, r8, #1
   3a4e4:	mov	r9, r0
   3a4e8:	b	3a378 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x264ec>
   3a4ec:	movw	r0, #7560	; 0x1d88
   3a4f0:	movt	r0, #7
   3a4f4:	add	sp, sp, #20
   3a4f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a4fc:	b	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3a500:	mov	r8, r7
   3a504:	b	3a398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2650c>
   3a508:			; <UNDEFINED> instruction: 0x0009fab8
   3a50c:	push	{r3, lr}
   3a510:	mov	r0, #1
   3a514:	bl	3a1c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26338>
   3a518:	movw	r3, #592	; 0x250
   3a51c:	movt	r3, #10
   3a520:	mvn	r2, #0
   3a524:	str	r2, [r3, #92]	; 0x5c
   3a528:	pop	{r3, pc}
   3a52c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a530:	mov	r8, r0
   3a534:	ldr	r3, [r8, #168]	; 0xa8
   3a538:	sub	sp, sp, #20
   3a53c:	ldr	r0, [pc, #360]	; 3a6ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26820>
   3a540:	ldr	r2, [r8, #4]
   3a544:	ldr	r3, [r3, #2508]	; 0x9cc
   3a548:	ldr	fp, [r2, #436]	; 0x1b4
   3a54c:	ldr	r6, [r3, #24]
   3a550:	ldr	r3, [r3, #20]
   3a554:	ldr	r1, [r6, #88]	; 0x58
   3a558:	cmp	r1, r0
   3a55c:	beq	3a68c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26800>
   3a560:	ldr	r7, [r1, #172]	; 0xac
   3a564:	ldr	r1, [r7, #68]	; 0x44
   3a568:	cmp	r1, #0
   3a56c:	beq	3a660 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x267d4>
   3a570:	ldr	r9, [r6, #80]	; 0x50
   3a574:	add	r9, r1, r9
   3a578:	ldrd	r4, [r6, #48]	; 0x30
   3a57c:	mov	r0, #4
   3a580:	ldr	ip, [r2, #84]	; 0x54
   3a584:	mov	r1, #0
   3a588:	subs	r4, r4, #16
   3a58c:	str	r3, [sp, #12]
   3a590:	mov	r2, r9
   3a594:	sbc	r5, r5, #0
   3a598:	blx	ip
   3a59c:	ldr	ip, [r8, #4]
   3a5a0:	mov	r0, r4
   3a5a4:	mov	r1, r5
   3a5a8:	add	r2, r9, #4
   3a5ac:	mov	sl, #0
   3a5b0:	ldr	ip, [ip, #84]	; 0x54
   3a5b4:	blx	ip
   3a5b8:	ldr	ip, [r8, #4]
   3a5bc:	mov	r0, #3
   3a5c0:	mov	r1, #0
   3a5c4:	add	r2, r9, #8
   3a5c8:	ldr	ip, [ip, #84]	; 0x54
   3a5cc:	blx	ip
   3a5d0:	movw	r2, #7732	; 0x1e34
   3a5d4:	movt	r2, #7
   3a5d8:	ldr	r3, [sp, #12]
   3a5dc:	ldr	r0, [r2]
   3a5e0:	mov	r1, r3
   3a5e4:	add	r3, r9, #16
   3a5e8:	str	r0, [r9, #12]
   3a5ec:	mov	r0, r8
   3a5f0:	ldr	r2, [fp, #392]	; 0x188
   3a5f4:	ldr	r2, [r2, #24]
   3a5f8:	str	r4, [sp]
   3a5fc:	bl	33a90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fc04>
   3a600:	ldrd	r4, [r7, #24]
   3a604:	ldrd	r2, [r6, #80]	; 0x50
   3a608:	mov	r0, r8
   3a60c:	ldrd	r6, [r6, #48]	; 0x30
   3a610:	adds	r2, r2, r4
   3a614:	str	sl, [sp]
   3a618:	adc	r3, r3, r5
   3a61c:	bl	13e80 <bfd_seek@plt>
   3a620:	cmp	r0, sl
   3a624:	movne	r0, sl
   3a628:	beq	3a634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x267a8>
   3a62c:	add	sp, sp, #20
   3a630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a634:	str	r8, [sp]
   3a638:	mov	r0, r9
   3a63c:	mov	r2, r6
   3a640:	mov	r3, r7
   3a644:	bl	139c4 <bfd_bwrite@plt>
   3a648:	cmp	r7, r1
   3a64c:	cmpeq	r6, r0
   3a650:	movne	r0, #0
   3a654:	moveq	r0, #1
   3a658:	add	sp, sp, #20
   3a65c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a660:	ldr	r9, [r6, #140]	; 0x8c
   3a664:	cmp	r9, #0
   3a668:	bne	3a578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x266ec>
   3a66c:	ldr	r0, [r6, #48]	; 0x30
   3a670:	str	r3, [sp, #12]
   3a674:	bl	137b4 <xmalloc@plt>
   3a678:	ldr	r2, [r8, #4]
   3a67c:	ldr	r3, [sp, #12]
   3a680:	mov	r9, r0
   3a684:	str	r0, [r6, #140]	; 0x8c
   3a688:	b	3a578 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x266ec>
   3a68c:	mov	r2, #5
   3a690:	movw	r1, #7660	; 0x1dec
   3a694:	mov	r0, #0
   3a698:	movt	r1, #7
   3a69c:	bl	13688 <dcgettext@plt>
   3a6a0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3a6a4:	mov	r0, #1
   3a6a8:	b	3a62c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x267a0>
   3a6ac:			; <UNDEFINED> instruction: 0x0009fab8
   3a6b0:	push	{r4, r5, r6, r7, r8, lr}
   3a6b4:	mov	r4, r0
   3a6b8:	bl	13a24 <strlen@plt>
   3a6bc:	movw	r5, #1336	; 0x538
   3a6c0:	movt	r5, #10
   3a6c4:	mov	r6, #0
   3a6c8:	sub	r2, r4, #1
   3a6cc:	ldrb	r1, [r5, #72]	; 0x48
   3a6d0:	mov	r8, r0
   3a6d4:	b	3a6e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26854>
   3a6d8:	cmp	r3, r1
   3a6dc:	addeq	r6, r6, #1
   3a6e0:	ldrb	r3, [r2, #1]!
   3a6e4:	cmp	r3, #0
   3a6e8:	bne	3a6d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2684c>
   3a6ec:	movw	r7, #1240	; 0x4d8
   3a6f0:	movt	r7, #10
   3a6f4:	ldr	r0, [r7]
   3a6f8:	bl	13a24 <strlen@plt>
   3a6fc:	mla	r0, r6, r0, r0
   3a700:	add	r0, r0, r8
   3a704:	add	r0, r0, #1
   3a708:	bl	137b4 <xmalloc@plt>
   3a70c:	ldr	r6, [r7]
   3a710:	mov	r1, r6
   3a714:	mov	r8, r0
   3a718:	bl	13664 <stpcpy@plt>
   3a71c:	ldrb	r3, [r4], #1
   3a720:	cmp	r3, #0
   3a724:	beq	3a758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x268cc>
   3a728:	ldrb	r2, [r5, #72]	; 0x48
   3a72c:	cmp	r2, r3
   3a730:	strbne	r3, [r0]
   3a734:	addne	r0, r0, #1
   3a738:	bne	3a71c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26890>
   3a73c:	strb	r2, [r0]
   3a740:	mov	r1, r6
   3a744:	add	r0, r0, #1
   3a748:	bl	13664 <stpcpy@plt>
   3a74c:	ldrb	r3, [r4], #1
   3a750:	cmp	r3, #0
   3a754:	bne	3a728 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2689c>
   3a758:	strb	r3, [r0]
   3a75c:	mov	r0, r8
   3a760:	pop	{r4, r5, r6, r7, r8, pc}
   3a764:	movw	r2, #63248	; 0xf710
   3a768:	movt	r2, #9
   3a76c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a770:	sub	sp, sp, #68	; 0x44
   3a774:	ldr	r3, [r2]
   3a778:	mov	r8, r0
   3a77c:	str	r1, [sp, #8]
   3a780:	mov	r0, r1
   3a784:	movw	r1, #8320	; 0x2080
   3a788:	movt	r1, #7
   3a78c:	str	r2, [sp, #20]
   3a790:	str	r3, [sp, #60]	; 0x3c
   3a794:	bl	13cb8 <fopen64@plt>
   3a798:	subs	r7, r0, #0
   3a79c:	moveq	r0, r7
   3a7a0:	beq	3a9d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b4c>
   3a7a4:	mov	r0, #256	; 0x100
   3a7a8:	movw	r3, #1336	; 0x538
   3a7ac:	movt	r3, #10
   3a7b0:	str	r3, [sp, #12]
   3a7b4:	bl	137b4 <xmalloc@plt>
   3a7b8:	mov	r6, #256	; 0x100
   3a7bc:	mov	r4, r0
   3a7c0:	mov	r5, r4
   3a7c4:	b	3a808 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2697c>
   3a7c8:	bl	13a24 <strlen@plt>
   3a7cc:	sub	r9, r9, #1
   3a7d0:	cmp	r0, r9
   3a7d4:	bne	3a830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269a4>
   3a7d8:	add	r3, r4, r6
   3a7dc:	ldrb	r3, [r3, #-2]
   3a7e0:	cmp	r3, #10
   3a7e4:	beq	3a830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269a4>
   3a7e8:	lsl	r9, r6, #1
   3a7ec:	mov	r0, r4
   3a7f0:	sub	r5, r6, #1
   3a7f4:	mov	r1, r9
   3a7f8:	mov	r6, r9
   3a7fc:	bl	13724 <xrealloc@plt>
   3a800:	add	r5, r0, r5
   3a804:	mov	r4, r0
   3a808:	rsb	r9, r5, r4
   3a80c:	mov	r0, r5
   3a810:	add	r9, r9, r6
   3a814:	mov	r2, r7
   3a818:	mov	r1, r9
   3a81c:	bl	13580 <fgets@plt>
   3a820:	cmp	r0, #0
   3a824:	bne	3a7c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2693c>
   3a828:	cmp	r4, r5
   3a82c:	beq	3a9c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b38>
   3a830:	mov	r1, #10
   3a834:	mov	r0, r4
   3a838:	bl	13a48 <strchr@plt>
   3a83c:	cmp	r0, #0
   3a840:	movne	r1, #0
   3a844:	strbne	r1, [r0]
   3a848:	mov	r0, r4
   3a84c:	mov	r1, #35	; 0x23
   3a850:	bl	13a48 <strchr@plt>
   3a854:	cmp	r0, #0
   3a858:	movne	r2, #0
   3a85c:	strbne	r2, [r0]
   3a860:	mov	r2, r4
   3a864:	mov	r9, r2
   3a868:	ldrb	r5, [r2], #1
   3a86c:	cmp	r5, #32
   3a870:	beq	3a864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269d8>
   3a874:	cmp	r5, #9
   3a878:	beq	3a864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269d8>
   3a87c:	sub	r3, r5, #11
   3a880:	cmp	r3, #2
   3a884:	bls	3a864 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x269d8>
   3a888:	cmp	r5, #0
   3a88c:	beq	3a9b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b28>
   3a890:	movw	r1, #7736	; 0x1e38
   3a894:	mov	r0, r9
   3a898:	movt	r1, #7
   3a89c:	mov	r2, #7
   3a8a0:	bl	13e08 <strncmp@plt>
   3a8a4:	cmp	r0, #0
   3a8a8:	bne	3a8c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a34>
   3a8ac:	ldrb	r3, [r9, #7]
   3a8b0:	cmp	r3, #32
   3a8b4:	cmpne	r3, #9
   3a8b8:	addeq	fp, r9, #8
   3a8bc:	beq	3aa18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b8c>
   3a8c0:	tst	r5, #223	; 0xdf
   3a8c4:	moveq	r3, #0
   3a8c8:	movne	r3, #1
   3a8cc:	cmp	r5, #61	; 0x3d
   3a8d0:	moveq	r5, #0
   3a8d4:	andne	r5, r3, #1
   3a8d8:	cmp	r5, #0
   3a8dc:	addne	r1, r9, #1
   3a8e0:	bne	3a8fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a70>
   3a8e4:	b	3ab9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d10>
   3a8e8:	cmp	r2, #9
   3a8ec:	beq	3a924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a98>
   3a8f0:	sub	r2, r2, #11
   3a8f4:	cmp	r2, #2
   3a8f8:	bls	3a924 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a98>
   3a8fc:	mov	r3, r1
   3a900:	ldrb	r2, [r1], #1
   3a904:	tst	r2, #223	; 0xdf
   3a908:	moveq	r0, #0
   3a90c:	movne	r0, #1
   3a910:	cmp	r2, #61	; 0x3d
   3a914:	moveq	r0, #0
   3a918:	andne	r0, r0, #1
   3a91c:	cmp	r0, #0
   3a920:	bne	3a8e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26a5c>
   3a924:	cmp	r9, r3
   3a928:	bne	3a93c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ab0>
   3a92c:	b	3ab98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d0c>
   3a930:	sub	r3, r3, #1
   3a934:	cmp	r9, r3
   3a938:	beq	3ab3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26cb0>
   3a93c:	ldrb	r2, [r3, #-1]
   3a940:	cmp	r2, #47	; 0x2f
   3a944:	beq	3a930 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26aa4>
   3a948:	rsb	r3, r9, r3
   3a94c:	mov	r5, r3
   3a950:	ldr	sl, [r8]
   3a954:	cmp	sl, #0
   3a958:	beq	3ab50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26cc4>
   3a95c:	ldr	r2, [r8, #4]
   3a960:	ldr	r1, [r8, #8]
   3a964:	add	r3, r2, #1
   3a968:	add	r0, r5, r3
   3a96c:	cmp	r0, r1
   3a970:	bcs	3ab70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ce4>
   3a974:	ldr	r1, [sp, #12]
   3a978:	str	r3, [r8, #4]
   3a97c:	ldrb	r3, [r1, #72]	; 0x48
   3a980:	strb	r3, [sl, r2]
   3a984:	ldr	r3, [r8]
   3a988:	ldr	r0, [r8, #4]
   3a98c:	mov	r2, r5
   3a990:	add	r0, r3, r0
   3a994:	mov	r1, r9
   3a998:	bl	135c8 <memcpy@plt>
   3a99c:	ldr	r2, [r8, #4]
   3a9a0:	ldr	r3, [r8]
   3a9a4:	add	r5, r5, r2
   3a9a8:	mov	r2, #0
   3a9ac:	str	r5, [r8, #4]
   3a9b0:	strb	r2, [r3, r5]
   3a9b4:	mov	r0, r7
   3a9b8:	bl	139dc <feof@plt>
   3a9bc:	cmp	r0, #0
   3a9c0:	beq	3a7c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26934>
   3a9c4:	mov	r0, r4
   3a9c8:	bl	13574 <free@plt>
   3a9cc:	mov	r0, r7
   3a9d0:	bl	13b80 <fclose@plt>
   3a9d4:	mov	r0, #1
   3a9d8:	ldr	r1, [sp, #20]
   3a9dc:	ldr	r2, [sp, #60]	; 0x3c
   3a9e0:	ldr	r3, [r1]
   3a9e4:	cmp	r2, r3
   3a9e8:	bne	3aba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d18>
   3a9ec:	add	sp, sp, #68	; 0x44
   3a9f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a9f4:	mov	r3, #0
   3a9f8:	strb	r3, [r9]
   3a9fc:	ldrb	r3, [fp]
   3aa00:	add	r9, r9, #1
   3aa04:	cmp	r3, #0
   3aa08:	bne	3aa60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26bd4>
   3aa0c:	cmp	r5, #0
   3aa10:	beq	3a9b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b28>
   3aa14:	mov	fp, r9
   3aa18:	ldrb	r3, [fp]
   3aa1c:	cmp	r3, #32
   3aa20:	cmpne	r3, #9
   3aa24:	beq	3aa58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26bcc>
   3aa28:	cmp	r3, #0
   3aa2c:	beq	3a9b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b28>
   3aa30:	add	r3, fp, #1
   3aa34:	b	3aa40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26bb4>
   3aa38:	cmp	r5, #0
   3aa3c:	beq	3a9f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b68>
   3aa40:	mov	r9, r3
   3aa44:	ldrb	r5, [r3], #1
   3aa48:	cmp	r5, #9
   3aa4c:	cmpne	r5, #32
   3aa50:	bne	3aa38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26bac>
   3aa54:	b	3a9f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b68>
   3aa58:	add	fp, fp, #1
   3aa5c:	b	3aa18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b8c>
   3aa60:	cmp	r3, #47	; 0x2f
   3aa64:	moveq	sl, #0
   3aa68:	beq	3aad4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c48>
   3aa6c:	ldr	r0, [sp, #8]
   3aa70:	mov	r1, #47	; 0x2f
   3aa74:	bl	13c1c <strrchr@plt>
   3aa78:	ldr	r1, [sp, #8]
   3aa7c:	mov	sl, r0
   3aa80:	mov	r0, fp
   3aa84:	rsb	sl, r1, sl
   3aa88:	bl	13a24 <strlen@plt>
   3aa8c:	add	r2, sl, #1
   3aa90:	str	r2, [sp, #16]
   3aa94:	mov	r3, r0
   3aa98:	add	r0, r0, #2
   3aa9c:	add	r0, r0, sl
   3aaa0:	str	r3, [sp, #4]
   3aaa4:	bl	137b4 <xmalloc@plt>
   3aaa8:	ldr	r2, [sp, #16]
   3aaac:	ldr	r1, [sp, #8]
   3aab0:	mov	sl, r0
   3aab4:	bl	135c8 <memcpy@plt>
   3aab8:	ldr	r1, [sp, #16]
   3aabc:	ldr	r3, [sp, #4]
   3aac0:	add	r0, sl, r1
   3aac4:	mov	r1, fp
   3aac8:	add	r2, r3, #1
   3aacc:	mov	fp, sl
   3aad0:	bl	135c8 <memcpy@plt>
   3aad4:	mov	r1, #0
   3aad8:	mov	r0, fp
   3aadc:	mov	r2, r1
   3aae0:	add	r3, sp, #24
   3aae4:	bl	13bd4 <glob64@plt>
   3aae8:	cmp	r0, #0
   3aaec:	bne	3ab28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c9c>
   3aaf0:	ldr	r3, [sp, #24]
   3aaf4:	cmp	r3, #0
   3aaf8:	movne	fp, r0
   3aafc:	beq	3ab20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c94>
   3ab00:	ldr	r3, [sp, #28]
   3ab04:	mov	r0, r8
   3ab08:	ldr	r1, [r3, fp, lsl #2]
   3ab0c:	add	fp, fp, #1
   3ab10:	bl	3a764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x268d8>
   3ab14:	ldr	r3, [sp, #24]
   3ab18:	cmp	fp, r3
   3ab1c:	bcc	3ab00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26c74>
   3ab20:	add	r0, sp, #24
   3ab24:	bl	13c34 <globfree64@plt>
   3ab28:	cmp	sl, #0
   3ab2c:	beq	3aa0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b80>
   3ab30:	mov	r0, sl
   3ab34:	bl	13574 <free@plt>
   3ab38:	b	3aa0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b80>
   3ab3c:	ldr	sl, [r8]
   3ab40:	mov	r3, #0
   3ab44:	mov	r5, r3
   3ab48:	cmp	sl, #0
   3ab4c:	bne	3a95c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ad0>
   3ab50:	add	r0, r3, #256	; 0x100
   3ab54:	add	r0, r0, #1
   3ab58:	str	r0, [r8, #8]
   3ab5c:	bl	137b4 <xmalloc@plt>
   3ab60:	mov	r3, r0
   3ab64:	stm	r8, {r0, sl}
   3ab68:	mov	r0, sl
   3ab6c:	b	3a98c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26b00>
   3ab70:	add	r1, r1, #256	; 0x100
   3ab74:	mov	r0, sl
   3ab78:	add	r1, r1, r5
   3ab7c:	str	r1, [r8, #8]
   3ab80:	bl	13724 <xrealloc@plt>
   3ab84:	ldr	r2, [r8, #4]
   3ab88:	add	r3, r2, #1
   3ab8c:	mov	sl, r0
   3ab90:	str	r0, [r8]
   3ab94:	b	3a974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ae8>
   3ab98:	mov	r5, #0
   3ab9c:	mov	r3, r5
   3aba0:	b	3a950 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ac4>
   3aba4:	bl	13694 <__stack_chk_fail@plt>
   3aba8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3abac:	movw	r6, #1088	; 0x440
   3abb0:	movt	r6, #10
   3abb4:	movw	r5, #63248	; 0xf710
   3abb8:	movt	r5, #9
   3abbc:	ldr	r7, [r0, #4]
   3abc0:	ldr	r3, [r6, #52]	; 0x34
   3abc4:	sub	sp, sp, #8
   3abc8:	ldr	r2, [r5]
   3abcc:	mov	r8, r0
   3abd0:	mov	r9, r1
   3abd4:	mov	r0, r7
   3abd8:	ldr	r3, [r3, #4]
   3abdc:	str	r2, [sp, #4]
   3abe0:	ldr	r1, [r3]
   3abe4:	bl	135f8 <bfd_openr@plt>
   3abe8:	subs	r4, r0, #0
   3abec:	moveq	r0, r4
   3abf0:	beq	3ac40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26db4>
   3abf4:	ldr	r3, [r4, #40]	; 0x28
   3abf8:	mov	r1, #1
   3abfc:	orr	r3, r3, #1048576	; 0x100000
   3ac00:	str	r3, [r4, #40]	; 0x28
   3ac04:	bl	13d48 <bfd_check_format@plt>
   3ac08:	subs	sl, r0, #0
   3ac0c:	beq	3ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26da8>
   3ac10:	ldr	r0, [r4, #40]	; 0x28
   3ac14:	ubfx	r0, r0, #5, #20
   3ac18:	ands	sl, r0, #64	; 0x40
   3ac1c:	beq	3ac34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26da8>
   3ac20:	ldr	r3, [r6, #52]	; 0x34
   3ac24:	ldr	r2, [r4, #4]
   3ac28:	ldr	r3, [r3, #4]
   3ac2c:	cmp	r2, r3
   3ac30:	beq	3ac58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26dcc>
   3ac34:	mov	r0, r4
   3ac38:	bl	13c4c <bfd_close@plt>
   3ac3c:	mov	r0, #0
   3ac40:	ldr	r2, [sp, #4]
   3ac44:	ldr	r3, [r5]
   3ac48:	cmp	r2, r3
   3ac4c:	bne	3ae28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f9c>
   3ac50:	add	sp, sp, #8
   3ac54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3ac58:	cmp	r9, #0
   3ac5c:	movwne	r9, #592	; 0x250
   3ac60:	movtne	r9, #10
   3ac64:	bne	3acf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26e6c>
   3ac68:	mov	r0, r4
   3ac6c:	mov	r1, sp
   3ac70:	bl	13a0c <bfd_elf_get_bfd_needed_list@plt>
   3ac74:	cmp	r0, #0
   3ac78:	beq	3ada8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f1c>
   3ac7c:	ldr	r3, [sp]
   3ac80:	movw	r9, #592	; 0x250
   3ac84:	movt	r9, #10
   3ac88:	cmp	r3, #0
   3ac8c:	beq	3acf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26e6c>
   3ac90:	movw	r0, #32992	; 0x80e0
   3ac94:	movt	r0, #3
   3ac98:	str	r3, [r9, #96]	; 0x60
   3ac9c:	mov	r2, #0
   3aca0:	movw	r3, #49964	; 0xc32c
   3aca4:	str	r2, [r9, #100]	; 0x64
   3aca8:	movt	r3, #3
   3acac:	str	r3, [r9, #4]
   3acb0:	bl	24348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104bc>
   3acb4:	ldr	r3, [r9, #100]	; 0x64
   3acb8:	cmp	r3, #0
   3acbc:	bne	3ad98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f0c>
   3acc0:	ldr	r6, [sp]
   3acc4:	cmp	r6, #0
   3acc8:	bne	3acdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26e50>
   3accc:	b	3ad98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f0c>
   3acd0:	ldr	r6, [r6]
   3acd4:	cmp	r6, #0
   3acd8:	beq	3ad98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f0c>
   3acdc:	movw	r1, #7796	; 0x1e74
   3ace0:	ldr	r0, [r6, #8]
   3ace4:	movt	r1, #7
   3ace8:	mov	r2, #7
   3acec:	bl	13e08 <strncmp@plt>
   3acf0:	cmp	r0, #0
   3acf4:	bne	3acd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26e44>
   3acf8:	mov	r0, r4
   3acfc:	ldr	r1, [pc, #296]	; 3ae2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fa0>
   3ad00:	bl	135b0 <bfd_stat@plt>
   3ad04:	cmp	r0, #0
   3ad08:	bne	3ad60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ed4>
   3ad0c:	ldr	r0, [r4]
   3ad10:	bl	138bc <lbasename@plt>
   3ad14:	movw	r3, #1464	; 0x5b8
   3ad18:	movt	r3, #10
   3ad1c:	ldr	r3, [r3]
   3ad20:	cmp	r3, #0
   3ad24:	mov	r6, r0
   3ad28:	bne	3ad74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ee8>
   3ad2c:	movw	r0, #32992	; 0x80e0
   3ad30:	movt	r0, #3
   3ad34:	mov	r2, #0
   3ad38:	movw	r3, #44908	; 0xaf6c
   3ad3c:	str	r2, [r9, #208]	; 0xd0
   3ad40:	movt	r3, #3
   3ad44:	str	r3, [r9, #4]
   3ad48:	bl	24348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104bc>
   3ad4c:	ldr	r3, [r9, #208]	; 0xd0
   3ad50:	cmp	r3, #0
   3ad54:	beq	3adbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f30>
   3ad58:	mov	r0, #1
   3ad5c:	b	3ac40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26db4>
   3ad60:	movw	r0, #7804	; 0x1e7c
   3ad64:	mov	r1, r4
   3ad68:	movt	r0, #7
   3ad6c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3ad70:	b	3ad0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26e80>
   3ad74:	mov	r2, #5
   3ad78:	movw	r1, #7836	; 0x1e9c
   3ad7c:	mov	r0, #0
   3ad80:	movt	r1, #7
   3ad84:	bl	13688 <dcgettext@plt>
   3ad88:	mov	r1, r6
   3ad8c:	mov	r2, r7
   3ad90:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   3ad94:	b	3ad2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ea0>
   3ad98:	mov	r0, r4
   3ad9c:	bl	13c4c <bfd_close@plt>
   3ada0:	mov	r0, #0
   3ada4:	b	3ac40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26db4>
   3ada8:	movw	r0, #7744	; 0x1e40
   3adac:	mov	r1, r4
   3adb0:	movt	r0, #7
   3adb4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3adb8:	b	3ac7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26df0>
   3adbc:	mov	r0, r4
   3adc0:	mov	r1, r6
   3adc4:	bl	13cac <bfd_elf_set_dt_needed_name@plt>
   3adc8:	ldr	r0, [r8]
   3adcc:	cmp	r0, #0
   3add0:	beq	3ae20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f94>
   3add4:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   3add8:	tst	r0, #4
   3addc:	beq	3ae20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f94>
   3ade0:	mov	r1, #14
   3ade4:	mov	r0, r4
   3ade8:	bl	13a3c <bfd_elf_set_dyn_lib_class@plt>
   3adec:	ldr	r3, [r4, #4]
   3adf0:	movw	r1, #1088	; 0x440
   3adf4:	mov	r0, r4
   3adf8:	movt	r1, #10
   3adfc:	ldr	r3, [r3, #360]	; 0x168
   3ae00:	blx	r3
   3ae04:	cmp	r0, #0
   3ae08:	bne	3ad58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ecc>
   3ae0c:	mov	r1, r4
   3ae10:	movw	r0, #12728	; 0x31b8
   3ae14:	movt	r0, #5
   3ae18:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3ae1c:	b	3ad58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26ecc>
   3ae20:	mov	r1, #2
   3ae24:	b	3ade4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26f58>
   3ae28:	bl	13694 <__stack_chk_fail@plt>
   3ae2c:			; <UNDEFINED> instruction: 0x000a02b8
   3ae30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ae34:	movw	r3, #63248	; 0xf710
   3ae38:	ldr	r6, [r1, #4]
   3ae3c:	movt	r3, #9
   3ae40:	mov	fp, r0
   3ae44:	mov	r8, r2
   3ae48:	ldr	r2, [r3]
   3ae4c:	sub	sp, sp, #28
   3ae50:	ldrb	r0, [r6]
   3ae54:	str	r3, [sp, #4]
   3ae58:	cmp	r0, #47	; 0x2f
   3ae5c:	str	r2, [sp, #20]
   3ae60:	beq	3af58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270cc>
   3ae64:	cmp	fp, #0
   3ae68:	beq	3af30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270a4>
   3ae6c:	ldrb	r2, [fp]
   3ae70:	cmp	r2, #0
   3ae74:	beq	3af30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270a4>
   3ae78:	ldr	r2, [r1]
   3ae7c:	mov	r0, r6
   3ae80:	str	r6, [sp, #16]
   3ae84:	movw	r7, #1336	; 0x538
   3ae88:	movt	r7, #10
   3ae8c:	str	r2, [sp, #12]
   3ae90:	bl	13a24 <strlen@plt>
   3ae94:	add	r9, r0, #2
   3ae98:	b	3af0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27080>
   3ae9c:	rsb	sl, fp, r4
   3aea0:	add	r0, sl, r9
   3aea4:	bl	137b4 <xmalloc@plt>
   3aea8:	cmp	r4, fp
   3aeac:	mov	r5, r0
   3aeb0:	moveq	r0, r0
   3aeb4:	beq	3aed4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27048>
   3aeb8:	mov	r1, fp
   3aebc:	mov	r2, sl
   3aec0:	bl	135c8 <memcpy@plt>
   3aec4:	add	r0, sl, #1
   3aec8:	add	r0, r5, r0
   3aecc:	mov	r1, #47	; 0x2f
   3aed0:	strb	r1, [r5, sl]
   3aed4:	mov	r1, r6
   3aed8:	bl	13814 <strcpy@plt>
   3aedc:	add	r0, sp, #12
   3aee0:	mov	r1, r8
   3aee4:	str	r5, [sp, #16]
   3aee8:	bl	3aba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d1c>
   3aeec:	cmp	r0, #0
   3aef0:	bne	3af50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270c4>
   3aef4:	mov	r0, r5
   3aef8:	bl	13574 <free@plt>
   3aefc:	ldrb	r3, [r4]
   3af00:	cmp	r3, #0
   3af04:	beq	3af30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270a4>
   3af08:	add	fp, r4, #1
   3af0c:	mov	r0, fp
   3af10:	ldrb	r1, [r7, #72]	; 0x48
   3af14:	bl	13a48 <strchr@plt>
   3af18:	subs	r4, r0, #0
   3af1c:	bne	3ae9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27010>
   3af20:	mov	r0, fp
   3af24:	bl	13a24 <strlen@plt>
   3af28:	add	r4, fp, r0
   3af2c:	b	3ae9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27010>
   3af30:	mov	r0, #0
   3af34:	ldr	r1, [sp, #4]
   3af38:	ldr	r2, [sp, #20]
   3af3c:	ldr	r3, [r1]
   3af40:	cmp	r2, r3
   3af44:	bne	3af68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270dc>
   3af48:	add	sp, sp, #28
   3af4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3af50:	mov	r0, #1
   3af54:	b	3af34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270a8>
   3af58:	mov	r0, r1
   3af5c:	mov	r1, r8
   3af60:	bl	3aba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d1c>
   3af64:	b	3af34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x270a8>
   3af68:	bl	13694 <__stack_chk_fail@plt>
   3af6c:	push	{r4, r5, r6, r7, r8, r9, lr}
   3af70:	movw	r7, #592	; 0x250
   3af74:	movt	r7, #10
   3af78:	movw	r6, #63248	; 0xf710
   3af7c:	movt	r6, #9
   3af80:	sub	sp, sp, #116	; 0x74
   3af84:	ldr	r3, [r7, #208]	; 0xd0
   3af88:	mov	r8, r0
   3af8c:	ldr	r2, [r6]
   3af90:	cmp	r3, #0
   3af94:	str	r2, [sp, #108]	; 0x6c
   3af98:	beq	3afb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27128>
   3af9c:	ldr	r2, [sp, #108]	; 0x6c
   3afa0:	ldr	r3, [r6]
   3afa4:	cmp	r2, r3
   3afa8:	bne	3b0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2722c>
   3afac:	add	sp, sp, #116	; 0x74
   3afb0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3afb4:	ldr	r0, [r0, #16]
   3afb8:	cmp	r0, #0
   3afbc:	beq	3af9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27110>
   3afc0:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   3afc4:	tst	r0, #1
   3afc8:	bne	3af9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27110>
   3afcc:	ldr	r0, [r8, #16]
   3afd0:	mov	r1, sp
   3afd4:	bl	135b0 <bfd_stat@plt>
   3afd8:	cmp	r0, #0
   3afdc:	bne	3b080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x271f4>
   3afe0:	ldrd	r4, [sp]
   3afe4:	ldrd	r2, [r7, #104]	; 0x68
   3afe8:	cmp	r5, r3
   3afec:	cmpeq	r4, r2
   3aff0:	beq	3b094 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27208>
   3aff4:	ldr	r3, [r7, #212]	; 0xd4
   3aff8:	mov	r1, #47	; 0x2f
   3affc:	ldr	r4, [r3, #8]
   3b000:	mov	r0, r4
   3b004:	bl	13a48 <strchr@plt>
   3b008:	cmp	r0, #0
   3b00c:	bne	3af9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27110>
   3b010:	mov	r0, r4
   3b014:	movw	r1, #7880	; 0x1ec8
   3b018:	movt	r1, #7
   3b01c:	bl	1340c <strstr@plt>
   3b020:	subs	r3, r0, #0
   3b024:	beq	3af9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27110>
   3b028:	ldr	r0, [r8, #16]
   3b02c:	add	r9, r3, #4
   3b030:	bl	136f4 <bfd_elf_get_dt_soname@plt>
   3b034:	subs	r5, r0, #0
   3b038:	beq	3b0bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27230>
   3b03c:	ldr	r3, [r7, #212]	; 0xd4
   3b040:	mov	r0, r5
   3b044:	movw	r4, #592	; 0x250
   3b048:	movt	r4, #10
   3b04c:	ldr	r1, [r3, #8]
   3b050:	rsb	r2, r1, r9
   3b054:	bl	1376c <filename_ncmp@plt>
   3b058:	cmp	r0, #0
   3b05c:	bne	3af9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27110>
   3b060:	ldr	r2, [r4, #212]	; 0xd4
   3b064:	mov	r3, r5
   3b068:	movw	r0, #7888	; 0x1ed0
   3b06c:	movt	r0, #7
   3b070:	ldr	r1, [r2, #8]
   3b074:	ldr	r2, [r2, #4]
   3b078:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3b07c:	b	3af9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27110>
   3b080:	ldr	r1, [r8, #16]
   3b084:	movw	r0, #7852	; 0x1eac
   3b088:	movt	r0, #7
   3b08c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3b090:	b	3af9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27110>
   3b094:	ldrd	r2, [sp, #96]	; 0x60
   3b098:	ldrd	r4, [r7, #200]	; 0xc8
   3b09c:	cmp	r3, r5
   3b0a0:	cmpeq	r2, r4
   3b0a4:	bne	3aff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27168>
   3b0a8:	orrs	r1, r2, r3
   3b0ac:	strne	r8, [r7, #208]	; 0xd0
   3b0b0:	bne	3af9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27110>
   3b0b4:	b	3aff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27168>
   3b0b8:	bl	13694 <__stack_chk_fail@plt>
   3b0bc:	ldr	r0, [r8, #8]
   3b0c0:	bl	138bc <lbasename@plt>
   3b0c4:	mov	r5, r0
   3b0c8:	b	3b03c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x271b0>
   3b0cc:	movw	ip, #1088	; 0x440
   3b0d0:	movt	ip, #10
   3b0d4:	ldrb	r3, [ip]
   3b0d8:	and	r3, r3, #3
   3b0dc:	cmp	r3, #1
   3b0e0:	bne	3b0fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27270>
   3b0e4:	ldrd	r2, [ip, #120]	; 0x78
   3b0e8:	mov	r0, #134217728	; 0x8000000
   3b0ec:	mov	r1, #0
   3b0f0:	orr	r2, r2, r0
   3b0f4:	orr	r3, r3, r1
   3b0f8:	strd	r2, [ip, #120]	; 0x78
   3b0fc:	b	2f1a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b314>
   3b100:	push	{r4, lr}
   3b104:	mov	r1, #0
   3b108:	movw	r0, #9116	; 0x239c
   3b10c:	movt	r0, #7
   3b110:	bl	31118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1d28c>
   3b114:	movw	r1, #1032	; 0x408
   3b118:	movw	r2, #1088	; 0x440
   3b11c:	movt	r1, #10
   3b120:	movt	r2, #10
   3b124:	movw	r3, #1336	; 0x538
   3b128:	ldrb	ip, [r1]
   3b12c:	movt	r3, #10
   3b130:	ldrb	r0, [r2, #3]
   3b134:	mov	r4, #1
   3b138:	orr	ip, ip, #32
   3b13c:	str	r4, [r3, #8]
   3b140:	strb	ip, [r1]
   3b144:	orr	r0, r0, #4
   3b148:	mov	r1, #0
   3b14c:	strb	r0, [r2, #3]
   3b150:	str	r1, [r3, #68]	; 0x44
   3b154:	pop	{r4, pc}
   3b158:	ldr	r3, [r0, #180]	; 0xb4
   3b15c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b160:	mov	r4, r0
   3b164:	ldr	r3, [r3, #4]
   3b168:	sub	sp, sp, #52	; 0x34
   3b16c:	movw	r5, #1088	; 0x440
   3b170:	movt	r5, #10
   3b174:	mov	r8, r1
   3b178:	mov	r6, r2
   3b17c:	ldr	r7, [r3, #4]
   3b180:	subs	r0, r7, #5
   3b184:	rsbs	r7, r0, #0
   3b188:	adcs	r7, r7, r0
   3b18c:	cmp	r7, #0
   3b190:	streq	r7, [sp, #16]
   3b194:	ldrne	r3, [r4, #172]	; 0xac
   3b198:	ldrne	r3, [r3, #4]
   3b19c:	strne	r3, [sp, #16]
   3b1a0:	ldrb	r3, [r5]
   3b1a4:	and	r3, r3, #3
   3b1a8:	cmp	r3, #2
   3b1ac:	beq	3b400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27574>
   3b1b0:	ldrb	r3, [r5, #4]
   3b1b4:	ubfx	r3, r3, #3, #1
   3b1b8:	cmp	r3, #0
   3b1bc:	bne	3b2ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27460>
   3b1c0:	str	r3, [sp, #20]
   3b1c4:	cmp	r6, #0
   3b1c8:	beq	3b37c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274f0>
   3b1cc:	movw	sl, #592	; 0x250
   3b1d0:	movt	sl, #10
   3b1d4:	ldr	r3, [sl, #216]	; 0xd8
   3b1d8:	cmp	r3, #0
   3b1dc:	bne	3b230 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273a4>
   3b1e0:	ldr	fp, [pc, #1620]	; 3b83c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279b0>
   3b1e4:	add	r9, fp, #192	; 0xc0
   3b1e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3b1ec:	mov	r1, #0
   3b1f0:	mov	r2, r1
   3b1f4:	cmp	r0, r1
   3b1f8:	beq	3b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27390>
   3b1fc:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   3b200:	cmp	r0, #0
   3b204:	str	r0, [fp, #-16]
   3b208:	beq	3b21c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27390>
   3b20c:	ldr	r3, [r0, #76]	; 0x4c
   3b210:	cmp	r3, #0
   3b214:	ldreq	r3, [fp, #-20]	; 0xffffffec
   3b218:	streq	r3, [r0, #76]	; 0x4c
   3b21c:	cmp	fp, r9
   3b220:	add	fp, fp, #24
   3b224:	bcc	3b1e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2735c>
   3b228:	mov	r3, #1
   3b22c:	str	r3, [sl, #216]	; 0xd8
   3b230:	ldrb	r3, [r5]
   3b234:	and	r3, r3, #3
   3b238:	cmp	r3, #1
   3b23c:	bls	3b510 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27684>
   3b240:	cmp	r3, #2
   3b244:	ldr	r5, [r4, #20]
   3b248:	beq	3b32c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274a0>
   3b24c:	ldr	r0, [r4, #180]	; 0xb4
   3b250:	mov	r9, r4
   3b254:	b	3b25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273d0>
   3b258:	ldr	r0, [r9, #180]	; 0xb4
   3b25c:	mov	r1, r9
   3b260:	bl	13a9c <bfd_get_next_section_by_name@plt>
   3b264:	subs	r9, r0, #0
   3b268:	beq	3b32c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274a0>
   3b26c:	ldr	r2, [r9, #88]	; 0x58
   3b270:	cmp	r2, #0
   3b274:	bne	3b258 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273cc>
   3b278:	ldr	r3, [r9, #20]
   3b27c:	tst	r3, #32768	; 0x8000
   3b280:	bne	3b258 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273cc>
   3b284:	eor	r3, r5, r3
   3b288:	ldr	r0, [r9, #180]	; 0xb4
   3b28c:	tst	r3, #3
   3b290:	bne	3b25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273d0>
   3b294:	ldr	r3, [r0, #40]	; 0x28
   3b298:	tst	r3, #2048	; 0x800
   3b29c:	bne	3b25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273d0>
   3b2a0:	ldr	r3, [r0, #172]	; 0xac
   3b2a4:	cmp	r3, #0
   3b2a8:	beq	3b25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273d0>
   3b2ac:	ldrb	r3, [r3, #36]	; 0x24
   3b2b0:	tst	r3, #16
   3b2b4:	bne	3b25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273d0>
   3b2b8:	mov	r1, r9
   3b2bc:	ldr	r2, [r4, #180]	; 0xb4
   3b2c0:	mov	r3, r4
   3b2c4:	bl	13e44 <_bfd_elf_match_sections_by_type@plt>
   3b2c8:	cmp	r0, #0
   3b2cc:	beq	3b258 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273cc>
   3b2d0:	ldr	r3, [r9, #20]
   3b2d4:	eor	r5, r5, #8
   3b2d8:	ldr	r0, [r9, #180]	; 0xb4
   3b2dc:	eor	r3, r3, #8
   3b2e0:	orr	r5, r5, r3
   3b2e4:	eor	r5, r5, #8
   3b2e8:	b	3b25c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273d0>
   3b2ec:	ldr	r3, [r4, #20]
   3b2f0:	ands	r3, r3, #1
   3b2f4:	beq	3b1c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27334>
   3b2f8:	cmp	r7, #0
   3b2fc:	beq	3b55c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x276d0>
   3b300:	ldr	r1, [sp, #16]
   3b304:	cmp	r1, #4
   3b308:	beq	3b604 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27778>
   3b30c:	cmp	r1, #9
   3b310:	movw	r3, #7956	; 0x1f14
   3b314:	movt	r3, #7
   3b318:	movne	r2, #0
   3b31c:	moveq	r2, #1
   3b320:	str	r2, [sp, #20]
   3b324:	moveq	r8, r3
   3b328:	b	3b1c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27338>
   3b32c:	movw	r3, #8193	; 0x2001
   3b330:	and	r3, r5, r3
   3b334:	cmp	r3, #0
   3b338:	bne	3b40c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27580>
   3b33c:	ldr	r7, [pc, #1276]	; 3b840 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279b4>
   3b340:	ldr	r3, [r7, #8]
   3b344:	cmp	r3, #0
   3b348:	beq	3b5b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27724>
   3b34c:	mov	ip, #0
   3b350:	str	r7, [sp]
   3b354:	mov	r0, r4
   3b358:	mov	r1, r8
   3b35c:	mov	r2, r6
   3b360:	str	ip, [sp, #4]
   3b364:	str	ip, [sp, #8]
   3b368:	bl	26494 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x12608>
   3b36c:	mov	r9, r0
   3b370:	mov	r0, r9
   3b374:	add	sp, sp, #52	; 0x34
   3b378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b37c:	mov	r0, r8
   3b380:	mov	r1, r6
   3b384:	mov	r2, r6
   3b388:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   3b38c:	subs	r9, r0, #0
   3b390:	bne	3b3ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27520>
   3b394:	b	3b1cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27340>
   3b398:	mov	r0, r9
   3b39c:	mov	r1, #0
   3b3a0:	bl	22974 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeae8>
   3b3a4:	subs	r9, r0, #0
   3b3a8:	beq	3b4e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27658>
   3b3ac:	ldr	r1, [r9, #28]
   3b3b0:	cmp	r1, #0
   3b3b4:	beq	3b3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2756c>
   3b3b8:	ldr	r2, [r1, #20]
   3b3bc:	cmp	r2, #0
   3b3c0:	beq	3b4c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27638>
   3b3c4:	ldr	r3, [r4, #20]
   3b3c8:	eor	r2, r2, r3
   3b3cc:	tst	r2, #3
   3b3d0:	bne	3b398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2750c>
   3b3d4:	ldr	r0, [r5, #52]	; 0x34
   3b3d8:	mov	r3, r4
   3b3dc:	ldr	r2, [r4, #180]	; 0xb4
   3b3e0:	bl	13e44 <_bfd_elf_match_sections_by_type@plt>
   3b3e4:	cmp	r0, #0
   3b3e8:	bne	3b4c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27638>
   3b3ec:	ldr	r3, [r9, #28]
   3b3f0:	cmp	r3, #0
   3b3f4:	bne	3b398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2750c>
   3b3f8:	mov	r6, r9
   3b3fc:	b	3b398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2750c>
   3b400:	mov	r2, #0
   3b404:	str	r2, [sp, #20]
   3b408:	b	3b1c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27338>
   3b40c:	ands	r3, r5, #1
   3b410:	moveq	r7, r3
   3b414:	moveq	r3, r7
   3b418:	beq	3b34c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274c0>
   3b41c:	ands	r9, r5, #2
   3b420:	beq	3b468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x275dc>
   3b424:	ldr	r1, [sp, #16]
   3b428:	cmp	r1, #7
   3b42c:	movne	r3, #0
   3b430:	andeq	r3, r7, #1
   3b434:	cmp	r3, #0
   3b438:	bne	3b460 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x275d4>
   3b43c:	cmp	r7, #0
   3b440:	bne	3b468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x275dc>
   3b444:	movw	r1, #7992	; 0x1f38
   3b448:	mov	r0, r8
   3b44c:	movt	r1, #7
   3b450:	mov	r2, #5
   3b454:	bl	13e08 <strncmp@plt>
   3b458:	cmp	r0, #0
   3b45c:	bne	3b468 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x275dc>
   3b460:	ldr	r7, [pc, #988]	; 3b844 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279b8>
   3b464:	b	3b340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274b4>
   3b468:	movw	r3, #1282	; 0x502
   3b46c:	and	r3, r5, r3
   3b470:	cmp	r3, #0
   3b474:	beq	3b5a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2771c>
   3b478:	tst	r5, #4194304	; 0x400000
   3b47c:	bne	3b618 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2778c>
   3b480:	tst	r5, #1024	; 0x400
   3b484:	bne	3b620 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27794>
   3b488:	tst	r5, #8
   3b48c:	beq	3b7b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27924>
   3b490:	cmp	r7, #0
   3b494:	bne	3b7e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27954>
   3b498:	movw	r1, #7968	; 0x1f20
   3b49c:	mov	r0, r8
   3b4a0:	movt	r1, #7
   3b4a4:	mov	r2, #4
   3b4a8:	bl	13e08 <strncmp@plt>
   3b4ac:	cmp	r0, #0
   3b4b0:	bne	3b7f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27964>
   3b4b4:	cmp	r9, #0
   3b4b8:	beq	3b7f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27964>
   3b4bc:	ldr	r7, [pc, #900]	; 3b848 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279bc>
   3b4c0:	b	3b340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274b4>
   3b4c4:	add	r0, r9, #8
   3b4c8:	mov	r1, r4
   3b4cc:	mov	r2, #0
   3b4d0:	mov	r3, r9
   3b4d4:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   3b4d8:	mov	r0, r9
   3b4dc:	add	sp, sp, #52	; 0x34
   3b4e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b4e4:	cmp	r6, #0
   3b4e8:	beq	3b834 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279a8>
   3b4ec:	mov	r2, r9
   3b4f0:	add	r0, r6, #8
   3b4f4:	mov	r1, r4
   3b4f8:	mov	r3, r6
   3b4fc:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   3b500:	mov	r9, r6
   3b504:	mov	r0, r9
   3b508:	add	sp, sp, #52	; 0x34
   3b50c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b510:	mov	r2, #13
   3b514:	movw	r1, #7976	; 0x1f28
   3b518:	ldr	r0, [r4]
   3b51c:	movt	r1, #7
   3b520:	bl	13e08 <strncmp@plt>
   3b524:	subs	r2, r0, #0
   3b528:	bne	3b554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x276c8>
   3b52c:	movw	r3, #62888	; 0xf5a8
   3b530:	movt	r3, #9
   3b534:	ldr	r9, [r3, #36]	; 0x24
   3b538:	cmp	r9, #0
   3b53c:	beq	3b554 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x276c8>
   3b540:	mov	r1, r4
   3b544:	add	r0, r9, #8
   3b548:	mov	r3, r9
   3b54c:	bl	231f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xf368>
   3b550:	b	3b370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274e4>
   3b554:	ldr	r5, [r4, #20]
   3b558:	b	3b24c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x273c0>
   3b55c:	movw	r1, #7968	; 0x1f20
   3b560:	mov	r0, r8
   3b564:	movt	r1, #7
   3b568:	mov	r2, #4
   3b56c:	bl	13e08 <strncmp@plt>
   3b570:	cmp	r0, #0
   3b574:	strne	r7, [sp, #20]
   3b578:	bne	3b1c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27338>
   3b57c:	ldrb	r8, [r8, #4]
   3b580:	movw	r2, #7956	; 0x1f14
   3b584:	movw	r3, #7944	; 0x1f08
   3b588:	movt	r2, #7
   3b58c:	cmp	r8, #97	; 0x61
   3b590:	movt	r3, #7
   3b594:	mov	r1, #1
   3b598:	str	r1, [sp, #20]
   3b59c:	movne	r8, r2
   3b5a0:	moveq	r8, r3
   3b5a4:	b	3b1c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27338>
   3b5a8:	ldr	r7, [pc, #668]	; 3b84c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279c0>
   3b5ac:	b	3b340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274b4>
   3b5b0:	ldr	r0, [r7]
   3b5b4:	cmp	r0, #0
   3b5b8:	beq	3b628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2779c>
   3b5bc:	mov	r1, r3
   3b5c0:	mov	r2, r3
   3b5c4:	bl	2255c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xe6d0>
   3b5c8:	mov	r3, r0
   3b5cc:	str	r0, [r7, #8]
   3b5d0:	cmp	r3, #0
   3b5d4:	bne	3b34c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274c0>
   3b5d8:	mov	r1, r5
   3b5dc:	movw	r3, #15940	; 0x3e44
   3b5e0:	mov	r0, r4
   3b5e4:	movt	r3, #1
   3b5e8:	add	r2, r7, #8
   3b5ec:	bl	229ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0xeb60>
   3b5f0:	subs	r3, r0, #0
   3b5f4:	movweq	r3, #1048	; 0x418
   3b5f8:	movteq	r3, #10
   3b5fc:	ldreq	r3, [r3]
   3b600:	b	3b34c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274c0>
   3b604:	movw	r8, #7944	; 0x1f08
   3b608:	mov	r3, #1
   3b60c:	movt	r8, #7
   3b610:	str	r3, [sp, #20]
   3b614:	b	3b1c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27338>
   3b618:	ldr	r7, [pc, #560]	; 3b850 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279c4>
   3b61c:	b	3b340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274b4>
   3b620:	ldr	r7, [pc, #556]	; 3b854 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279c8>
   3b624:	b	3b340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274b4>
   3b628:	ldr	r2, [r4]
   3b62c:	movw	r3, #1048	; 0x418
   3b630:	movt	r3, #10
   3b634:	ldrb	r2, [r2, #4]
   3b638:	ldr	fp, [r3]
   3b63c:	subs	r1, r2, #97	; 0x61
   3b640:	rsbs	r2, r1, #0
   3b644:	adcs	r2, r2, r1
   3b648:	cmp	fp, #0
   3b64c:	str	r2, [sp, #16]
   3b650:	beq	3b82c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279a0>
   3b654:	str	r5, [sp, #28]
   3b658:	mov	r9, r0
   3b65c:	str	r7, [sp, #32]
   3b660:	mov	sl, r0
   3b664:	str	r4, [sp, #36]	; 0x24
   3b668:	mov	r5, r0
   3b66c:	str	r6, [sp, #44]	; 0x2c
   3b670:	mov	r7, r0
   3b674:	str	r0, [sp, #24]
   3b678:	mov	r4, r0
   3b67c:	str	r8, [sp, #40]	; 0x28
   3b680:	mov	r6, fp
   3b684:	b	3b734 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x278a8>
   3b688:	ldrb	r2, [fp, #4]
   3b68c:	ldr	r3, [sp, #20]
   3b690:	subs	r2, r2, #97	; 0x61
   3b694:	rsbs	r8, r2, #0
   3b698:	adcs	r8, r8, r2
   3b69c:	cmp	r3, #0
   3b6a0:	bne	3b7b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2792c>
   3b6a4:	add	r1, r8, #4
   3b6a8:	movw	r0, #8000	; 0x1f40
   3b6ac:	add	r1, fp, r1
   3b6b0:	movt	r0, #7
   3b6b4:	bl	13490 <strcmp@plt>
   3b6b8:	cmp	r0, #0
   3b6bc:	beq	3b7b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2792c>
   3b6c0:	ldr	r3, [sp, #16]
   3b6c4:	subs	r3, r3, r8
   3b6c8:	rsbs	r2, r3, #0
   3b6cc:	adcs	r2, r2, r3
   3b6d0:	cmp	r5, #0
   3b6d4:	movne	r1, r2
   3b6d8:	orreq	r1, r2, #1
   3b6dc:	cmp	sl, #0
   3b6e0:	orreq	r2, r2, #1
   3b6e4:	cmp	r1, #0
   3b6e8:	movne	r5, r6
   3b6ec:	cmp	r2, #0
   3b6f0:	beq	3b760 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x278d4>
   3b6f4:	ldr	r2, [r6, #28]
   3b6f8:	cmp	r2, #0
   3b6fc:	beq	3b720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27894>
   3b700:	ldr	r2, [r2, #20]
   3b704:	ands	r1, r2, #1
   3b708:	movne	sl, r6
   3b70c:	cmp	r1, #0
   3b710:	beq	3b720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27894>
   3b714:	tst	r2, #8
   3b718:	mov	r4, r6
   3b71c:	movne	r7, r6
   3b720:	ldr	r2, [r6, #16]
   3b724:	cmp	r2, #0
   3b728:	beq	3b778 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x278ec>
   3b72c:	mov	r9, r6
   3b730:	mov	r6, r2
   3b734:	ldr	r2, [r6, #72]	; 0x48
   3b738:	cmp	r2, #0
   3b73c:	blt	3b760 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x278d4>
   3b740:	ldr	fp, [r6, #24]
   3b744:	movw	r1, #7968	; 0x1f20
   3b748:	mov	r2, #4
   3b74c:	movt	r1, #7
   3b750:	mov	r0, fp
   3b754:	bl	13e08 <strncmp@plt>
   3b758:	cmp	r0, #0
   3b75c:	beq	3b688 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x277fc>
   3b760:	ldr	r2, [r6, #28]
   3b764:	cmp	r2, #0
   3b768:	beq	3b720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27894>
   3b76c:	ldr	r2, [r2, #20]
   3b770:	and	r1, r2, #1
   3b774:	b	3b70c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27880>
   3b778:	mov	fp, r6
   3b77c:	str	r4, [sp, #24]
   3b780:	mov	r3, r7
   3b784:	mov	ip, r5
   3b788:	ldr	r7, [sp, #32]
   3b78c:	ldr	r5, [sp, #28]
   3b790:	ldr	r4, [sp, #36]	; 0x24
   3b794:	ldr	r8, [sp, #40]	; 0x28
   3b798:	ldr	r6, [sp, #44]	; 0x2c
   3b79c:	cmp	sl, #0
   3b7a0:	beq	3b804 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27978>
   3b7a4:	mov	r3, sl
   3b7a8:	str	sl, [r7, #8]
   3b7ac:	b	3b5d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27744>
   3b7b0:	ldr	r7, [pc, #160]	; 3b858 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279cc>
   3b7b4:	b	3b340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274b4>
   3b7b8:	str	r4, [sp, #24]
   3b7bc:	mov	r3, r7
   3b7c0:	mov	ip, r5
   3b7c4:	ldr	r7, [sp, #32]
   3b7c8:	ldr	r5, [sp, #28]
   3b7cc:	mov	fp, r9
   3b7d0:	ldr	r4, [sp, #36]	; 0x24
   3b7d4:	ldr	r8, [sp, #40]	; 0x28
   3b7d8:	ldr	r6, [sp, #44]	; 0x2c
   3b7dc:	b	3b79c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27910>
   3b7e0:	ldr	r2, [sp, #16]
   3b7e4:	cmp	r2, #4
   3b7e8:	cmpne	r2, #9
   3b7ec:	beq	3b4b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27628>
   3b7f0:	ldr	r3, [pc, #100]	; 3b85c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x279d0>
   3b7f4:	tst	r5, #16
   3b7f8:	add	r7, r3, #24
   3b7fc:	movne	r7, r3
   3b800:	b	3b340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x274b4>
   3b804:	cmp	ip, #0
   3b808:	movne	sl, ip
   3b80c:	bne	3b7a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27918>
   3b810:	cmp	r3, #0
   3b814:	movne	sl, r3
   3b818:	bne	3b7a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27918>
   3b81c:	ldr	sl, [sp, #24]
   3b820:	cmp	sl, #0
   3b824:	moveq	sl, fp
   3b828:	b	3b7a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27918>
   3b82c:	mov	sl, fp
   3b830:	b	3b7a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27918>
   3b834:	movw	r6, #381	; 0x17d
   3b838:	b	3b1cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27340>
   3b83c:	ldrdeq	pc, [r9], -ip
   3b840:	andeq	pc, r9, r4, lsl #13
   3b844:	andeq	pc, r9, r4, asr r6	; <UNPREDICTABLE>
   3b848:	andeq	pc, r9, ip, lsr r6	; <UNPREDICTABLE>
   3b84c:	andeq	pc, r9, r4, lsr #12
   3b850:	andeq	pc, r9, ip, ror #12
   3b854:	strdeq	pc, [r9], -r4
   3b858:	andeq	pc, r9, ip, lsl #12
   3b85c:	andeq	pc, r9, r4, asr #11
   3b860:	push	{r4, r5, r6, r7, r8, r9, lr}
   3b864:	mov	r8, r0
   3b868:	ldrb	r5, [r2, #36]	; 0x24
   3b86c:	sub	sp, sp, #20
   3b870:	mov	r4, r2
   3b874:	mov	r6, r1
   3b878:	ands	r0, r5, #1
   3b87c:	beq	3b958 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27acc>
   3b880:	ldr	r0, [r1, #4]
   3b884:	ldr	r7, [r2, #8]
   3b888:	bl	13a24 <strlen@plt>
   3b88c:	mov	r9, r0
   3b890:	mov	r0, r7
   3b894:	bl	13a24 <strlen@plt>
   3b898:	tst	r5, #2
   3b89c:	add	r5, r0, r9
   3b8a0:	bne	3b960 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ad4>
   3b8a4:	mov	r0, r8
   3b8a8:	add	r5, r5, #8
   3b8ac:	bl	13a24 <strlen@plt>
   3b8b0:	add	r0, r5, r0
   3b8b4:	bl	137b4 <xmalloc@plt>
   3b8b8:	ldr	r2, [r6, #4]
   3b8bc:	movw	r3, #8016	; 0x1f50
   3b8c0:	str	r7, [sp, #4]
   3b8c4:	movt	r3, #7
   3b8c8:	str	r8, [sp, #8]
   3b8cc:	str	r2, [sp]
   3b8d0:	mov	r1, #1
   3b8d4:	mvn	r2, #0
   3b8d8:	mov	r5, r0
   3b8dc:	bl	13acc <__sprintf_chk@plt>
   3b8e0:	mov	r0, r5
   3b8e4:	mov	r1, r4
   3b8e8:	bl	308a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1ca14>
   3b8ec:	subs	r6, r0, #0
   3b8f0:	beq	3b99c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b10>
   3b8f4:	str	r5, [r4, #8]
   3b8f8:	mov	r1, #1
   3b8fc:	ldr	r0, [r4, #16]
   3b900:	bl	13d48 <bfd_check_format@plt>
   3b904:	cmp	r0, #0
   3b908:	beq	3b990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b04>
   3b90c:	ldr	r3, [r4, #16]
   3b910:	ldr	r3, [r3, #40]	; 0x28
   3b914:	tst	r3, #2048	; 0x800
   3b918:	beq	3b990 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b04>
   3b91c:	ldrb	r3, [r4, #36]	; 0x24
   3b920:	and	r2, r3, #5
   3b924:	cmp	r2, #5
   3b928:	beq	3b940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ab4>
   3b92c:	movw	r0, #56524	; 0xdccc
   3b930:	movw	r1, #2072	; 0x818
   3b934:	movt	r0, #8
   3b938:	bl	302b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c42c>
   3b93c:	ldrb	r3, [r4, #36]	; 0x24
   3b940:	tst	r3, #2
   3b944:	beq	3b9b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27b24>
   3b948:	ldr	r0, [r4, #16]
   3b94c:	mov	r1, r7
   3b950:	bl	13cac <bfd_elf_set_dt_needed_name@plt>
   3b954:	mov	r0, #1
   3b958:	add	sp, sp, #20
   3b95c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3b960:	add	r0, r5, #2
   3b964:	bl	137b4 <xmalloc@plt>
   3b968:	ldr	ip, [r6, #4]
   3b96c:	movw	r3, #8008	; 0x1f48
   3b970:	str	r7, [sp, #4]
   3b974:	movt	r3, #7
   3b978:	mov	r1, #1
   3b97c:	mvn	r2, #0
   3b980:	str	ip, [sp]
   3b984:	mov	r5, r0
   3b988:	bl	13acc <__sprintf_chk@plt>
   3b98c:	b	3b8e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27a54>
   3b990:	mov	r0, #1
   3b994:	add	sp, sp, #20
   3b998:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3b99c:	mov	r0, r5
   3b9a0:	bl	13574 <free@plt>
   3b9a4:	mov	r0, r6
   3b9a8:	add	sp, sp, #20
   3b9ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3b9b0:	ldr	r0, [r4, #8]
   3b9b4:	bl	138bc <lbasename@plt>
   3b9b8:	mov	r7, r0
   3b9bc:	b	3b948 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27abc>
   3b9c0:	ldr	r3, [r0, #4]
   3b9c4:	cmp	r3, #5
   3b9c8:	bxne	lr
   3b9cc:	ldr	r1, [r0, #8]
   3b9d0:	ldrh	r3, [r1, #24]
   3b9d4:	ubfx	r3, r3, #7, #3
   3b9d8:	cmp	r3, #4
   3b9dc:	bxeq	lr
   3b9e0:	ldr	r3, [r1, #20]
   3b9e4:	tst	r3, #32768	; 0x8000
   3b9e8:	bxne	lr
   3b9ec:	ldr	r3, [r1, #88]	; 0x58
   3b9f0:	cmp	r3, #0
   3b9f4:	bxeq	lr
   3b9f8:	movw	r0, #1088	; 0x440
   3b9fc:	movt	r0, #10
   3ba00:	ldr	r2, [r3, #180]	; 0xb4
   3ba04:	ldr	r3, [r0, #52]	; 0x34
   3ba08:	cmp	r2, r3
   3ba0c:	bxne	lr
   3ba10:	b	13e20 <elf32_arm_next_input_section@plt>
   3ba14:	push	{r4, r5, r6, lr}
   3ba18:	movw	r4, #592	; 0x250
   3ba1c:	movt	r4, #10
   3ba20:	mov	r5, r0
   3ba24:	ldr	r3, [r4, #208]	; 0xd0
   3ba28:	cmp	r3, #0
   3ba2c:	beq	3ba40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27bb4>
   3ba30:	ldr	r0, [r3, #16]
   3ba34:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   3ba38:	tst	r0, #1
   3ba3c:	popeq	{r4, r5, r6, pc}
   3ba40:	ldr	r3, [r5, #8]
   3ba44:	cmp	r3, #0
   3ba48:	popeq	{r4, r5, r6, pc}
   3ba4c:	ldr	r0, [r5, #16]
   3ba50:	cmp	r0, #0
   3ba54:	popeq	{r4, r5, r6, pc}
   3ba58:	ldr	r2, [r4, #208]	; 0xd0
   3ba5c:	cmp	r2, #0
   3ba60:	beq	3ba74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27be8>
   3ba64:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   3ba68:	tst	r0, #1
   3ba6c:	popne	{r4, r5, r6, pc}
   3ba70:	ldr	r3, [r5, #8]
   3ba74:	ldr	r2, [r4, #212]	; 0xd4
   3ba78:	mov	r0, r3
   3ba7c:	movw	r6, #592	; 0x250
   3ba80:	movt	r6, #10
   3ba84:	ldr	r1, [r2, #8]
   3ba88:	bl	135a4 <filename_cmp@plt>
   3ba8c:	cmp	r0, #0
   3ba90:	beq	3baf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27c64>
   3ba94:	ldrb	r3, [r5, #36]	; 0x24
   3ba98:	tst	r3, #4
   3ba9c:	beq	3bacc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27c40>
   3baa0:	ldr	r0, [r5, #8]
   3baa4:	mov	r1, #47	; 0x2f
   3baa8:	bl	13c1c <strrchr@plt>
   3baac:	cmp	r0, #0
   3bab0:	beq	3bacc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27c40>
   3bab4:	ldr	r3, [r6, #212]	; 0xd4
   3bab8:	add	r0, r0, #1
   3babc:	ldr	r1, [r3, #8]
   3bac0:	bl	135a4 <filename_cmp@plt>
   3bac4:	cmp	r0, #0
   3bac8:	beq	3baf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27c64>
   3bacc:	ldr	r0, [r5, #16]
   3bad0:	bl	136f4 <bfd_elf_get_dt_soname@plt>
   3bad4:	cmp	r0, #0
   3bad8:	popeq	{r4, r5, r6, pc}
   3badc:	ldr	r3, [r4, #212]	; 0xd4
   3bae0:	ldr	r1, [r3, #8]
   3bae4:	bl	135a4 <filename_cmp@plt>
   3bae8:	cmp	r0, #0
   3baec:	popne	{r4, r5, r6, pc}
   3baf0:	str	r5, [r4, #208]	; 0xd0
   3baf4:	pop	{r4, r5, r6, pc}
   3baf8:	movw	ip, #63248	; 0xf710
   3bafc:	movt	ip, #9
   3bb00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bb04:	movw	r7, #1088	; 0x440
   3bb08:	ldr	r3, [ip]
   3bb0c:	sub	sp, sp, #76	; 0x4c
   3bb10:	movt	r7, #10
   3bb14:	str	ip, [sp, #8]
   3bb18:	str	r3, [sp, #68]	; 0x44
   3bb1c:	bl	2f250 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1b3c4>
   3bb20:	ldr	r3, [r7, #32]
   3bb24:	str	r3, [sp, #12]
   3bb28:	ldr	r3, [r3, #40]	; 0x28
   3bb2c:	cmp	r3, #1
   3bb30:	beq	3bb50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27cc4>
   3bb34:	ldr	ip, [sp, #8]
   3bb38:	ldr	r2, [sp, #68]	; 0x44
   3bb3c:	ldr	r3, [ip]
   3bb40:	cmp	r2, r3
   3bb44:	bne	3c324 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28498>
   3bb48:	add	sp, sp, #76	; 0x4c
   3bb4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3bb50:	movw	r9, #592	; 0x250
   3bb54:	movt	r9, #10
   3bb58:	ldr	r0, [r9, #8]
   3bb5c:	cmp	r0, #0
   3bb60:	beq	3bc14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d88>
   3bb64:	ldr	r6, [r7, #56]	; 0x38
   3bb68:	cmp	r6, #0
   3bb6c:	bne	3bb80 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27cf4>
   3bb70:	b	3bfa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28114>
   3bb74:	ldr	r6, [r6, #164]	; 0xa4
   3bb78:	cmp	r6, #0
   3bb7c:	beq	3bfa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28114>
   3bb80:	ldr	r3, [r6, #4]
   3bb84:	ldr	r3, [r3, #4]
   3bb88:	cmp	r3, #5
   3bb8c:	bne	3bb74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ce8>
   3bb90:	ldr	r3, [r6, #108]	; 0x6c
   3bb94:	cmp	r3, #0
   3bb98:	beq	3bb74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ce8>
   3bb9c:	bl	3396c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1fae0>
   3bba0:	orrs	r2, r0, r1
   3bba4:	beq	3bf90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28104>
   3bba8:	adds	r4, r0, #16
   3bbac:	adc	r5, r1, #0
   3bbb0:	orrs	ip, r4, r5
   3bbb4:	beq	3bf90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28104>
   3bbb8:	mov	r0, r6
   3bbbc:	movw	r1, #8088	; 0x1f98
   3bbc0:	movw	r2, #16427	; 0x402b
   3bbc4:	movt	r1, #7
   3bbc8:	movt	r2, #16
   3bbcc:	bl	134d8 <bfd_make_section_with_flags@plt>
   3bbd0:	cmp	r0, #0
   3bbd4:	beq	3c2e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28454>
   3bbd8:	ldr	r3, [r7, #52]	; 0x34
   3bbdc:	mov	r2, #2
   3bbe0:	str	r2, [r0, #92]	; 0x5c
   3bbe4:	mov	ip, #7
   3bbe8:	ldr	r1, [r0, #172]	; 0xac
   3bbec:	movw	r2, #42284	; 0xa52c
   3bbf0:	ldr	r3, [r3, #168]	; 0xa8
   3bbf4:	movt	r2, #3
   3bbf8:	ldr	r6, [r9, #8]
   3bbfc:	ldr	r3, [r3, #2508]	; 0x9cc
   3bc00:	str	r0, [r3, #24]
   3bc04:	str	r2, [r3, #16]
   3bc08:	str	r6, [r3, #20]
   3bc0c:	str	ip, [r1, #4]
   3bc10:	strd	r4, [r0, #48]	; 0x30
   3bc14:	ldrb	r2, [r7]
   3bc18:	movw	r3, #1088	; 0x440
   3bc1c:	movt	r3, #10
   3bc20:	and	r2, r2, #3
   3bc24:	cmp	r2, #2
   3bc28:	beq	3c070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x281e4>
   3bc2c:	ldrb	r8, [r3, #4]
   3bc30:	ubfx	r8, r8, #2, #1
   3bc34:	cmp	r8, #0
   3bc38:	beq	3bef8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2806c>
   3bc3c:	movw	r1, #1088	; 0x440
   3bc40:	ldr	r0, [r7, #52]	; 0x34
   3bc44:	movt	r1, #10
   3bc48:	bl	13850 <bfd_elf_get_needed_list@plt>
   3bc4c:	subs	fp, r0, #0
   3bc50:	beq	3be9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28010>
   3bc54:	movw	r6, #47636	; 0xba14
   3bc58:	movt	r6, #3
   3bc5c:	mov	r4, fp
   3bc60:	movw	ip, #1464	; 0x5b8
   3bc64:	movt	ip, #10
   3bc68:	str	ip, [sp, #12]
   3bc6c:	movw	ip, #1244	; 0x4dc
   3bc70:	movt	ip, #10
   3bc74:	str	ip, [sp, #16]
   3bc78:	ldr	r0, [r4, #4]
   3bc7c:	cmp	r0, #0
   3bc80:	beq	3bcac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e20>
   3bc84:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   3bc88:	tst	r0, #1
   3bc8c:	bne	3be90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28004>
   3bc90:	ldr	r0, [r4, #4]
   3bc94:	cmp	r0, #0
   3bc98:	beq	3bcac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e20>
   3bc9c:	ldrb	r3, [r7, #2]
   3bca0:	ubfx	r3, r3, #5, #2
   3bca4:	cmp	r3, #1
   3bca8:	beq	3bedc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28050>
   3bcac:	cmp	fp, r4
   3bcb0:	movne	r5, fp
   3bcb4:	beq	3bcf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e64>
   3bcb8:	ldr	r0, [r5, #4]
   3bcbc:	cmp	r0, #0
   3bcc0:	beq	3bcd0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e44>
   3bcc4:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   3bcc8:	tst	r0, #1
   3bccc:	bne	3bce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e58>
   3bcd0:	ldr	r0, [r5, #8]
   3bcd4:	ldr	r1, [r4, #8]
   3bcd8:	bl	13490 <strcmp@plt>
   3bcdc:	cmp	r0, #0
   3bce0:	beq	3be90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28004>
   3bce4:	ldr	r5, [r5]
   3bce8:	cmp	r5, r4
   3bcec:	bne	3bcb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e2c>
   3bcf0:	movw	r0, #32992	; 0x80e0
   3bcf4:	movt	r0, #3
   3bcf8:	mov	r3, #0
   3bcfc:	str	r4, [r9, #212]	; 0xd4
   3bd00:	str	r3, [r9, #208]	; 0xd0
   3bd04:	str	r6, [r9, #4]
   3bd08:	bl	24348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x104bc>
   3bd0c:	ldr	r3, [r9, #208]	; 0xd0
   3bd10:	cmp	r3, #0
   3bd14:	beq	3bd28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e9c>
   3bd18:	ldr	r0, [r3, #16]
   3bd1c:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   3bd20:	tst	r0, #1
   3bd24:	beq	3be90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28004>
   3bd28:	ldr	ip, [sp, #12]
   3bd2c:	ldr	r3, [r4, #4]
   3bd30:	ldr	r2, [r4, #8]
   3bd34:	ldr	r1, [ip]
   3bd38:	str	r3, [sp, #40]	; 0x28
   3bd3c:	cmp	r1, #0
   3bd40:	str	r3, [sp, #48]	; 0x30
   3bd44:	str	r2, [sp, #44]	; 0x2c
   3bd48:	bne	3c2bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28430>
   3bd4c:	ldr	r3, [r9, #208]	; 0xd0
   3bd50:	cmp	r3, #0
   3bd54:	beq	3bd74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ee8>
   3bd58:	ldr	r3, [r3, #8]
   3bd5c:	add	r0, sp, #48	; 0x30
   3bd60:	mov	r1, #1
   3bd64:	str	r3, [sp, #52]	; 0x34
   3bd68:	bl	3aba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d1c>
   3bd6c:	cmp	r0, #0
   3bd70:	bne	3be90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28004>
   3bd74:	str	fp, [sp, #20]
   3bd78:	mov	r8, #0
   3bd7c:	ldr	fp, [sp, #16]
   3bd80:	movw	ip, #592	; 0x250
   3bd84:	str	r6, [sp, #24]
   3bd88:	movt	ip, #10
   3bd8c:	str	ip, [sp, #28]
   3bd90:	movw	ip, #1240	; 0x4d8
   3bd94:	movt	ip, #10
   3bd98:	str	ip, [sp, #32]
   3bd9c:	ldr	r0, [fp, #68]	; 0x44
   3bda0:	add	r1, sp, #40	; 0x28
   3bda4:	mov	r2, r8
   3bda8:	bl	3ae30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fa4>
   3bdac:	cmp	r0, #0
   3bdb0:	bne	3be88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ffc>
   3bdb4:	ldr	r0, [fp, #64]	; 0x40
   3bdb8:	add	r1, sp, #40	; 0x28
   3bdbc:	mov	r2, r8
   3bdc0:	bl	3ae30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fa4>
   3bdc4:	cmp	r0, #0
   3bdc8:	bne	3be88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ffc>
   3bdcc:	ldr	r3, [fp, #68]	; 0x44
   3bdd0:	cmp	r3, #0
   3bdd4:	beq	3c214 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28388>
   3bdd8:	movw	r0, #8420	; 0x20e4
   3bddc:	movt	r0, #7
   3bde0:	bl	138f8 <getenv@plt>
   3bde4:	add	r1, sp, #40	; 0x28
   3bde8:	mov	r2, r8
   3bdec:	bl	3ae30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fa4>
   3bdf0:	cmp	r0, #0
   3bdf4:	bne	3be88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ffc>
   3bdf8:	movw	r1, #1088	; 0x440
   3bdfc:	ldr	r0, [r7, #52]	; 0x34
   3be00:	movt	r1, #10
   3be04:	bl	1352c <bfd_elf_get_runpath_list@plt>
   3be08:	subs	sl, r0, #0
   3be0c:	strne	r7, [sp, #36]	; 0x24
   3be10:	bne	3be5c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27fd0>
   3be14:	b	3c0c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28238>
   3be18:	ldr	r2, [sl, #4]
   3be1c:	ldr	r3, [r4, #4]
   3be20:	cmp	r2, r3
   3be24:	movne	r7, #1
   3be28:	movne	r5, #0
   3be2c:	beq	3c1c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2833c>
   3be30:	ldr	r2, [sl, #8]
   3be34:	cmp	r2, r6
   3be38:	beq	3be44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27fb8>
   3be3c:	mov	r0, r6
   3be40:	bl	13574 <free@plt>
   3be44:	ldr	sl, [sl]
   3be48:	cmp	sl, #0
   3be4c:	moveq	r3, #0
   3be50:	andne	r3, r7, #1
   3be54:	cmp	r3, #0
   3be58:	beq	3be7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ff0>
   3be5c:	ldr	r6, [sl, #8]
   3be60:	ldrb	r3, [r6]
   3be64:	cmp	r3, #47	; 0x2f
   3be68:	bne	3be18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f8c>
   3be6c:	mov	r0, r6
   3be70:	bl	3a6b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26824>
   3be74:	mov	r6, r0
   3be78:	b	3be18 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f8c>
   3be7c:	cmp	r5, #0
   3be80:	ldr	r7, [sp, #36]	; 0x24
   3be84:	beq	3c0c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28238>
   3be88:	ldr	fp, [sp, #20]
   3be8c:	ldr	r6, [sp, #24]
   3be90:	ldr	r4, [r4]
   3be94:	cmp	r4, #0
   3be98:	bne	3bc78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dec>
   3be9c:	ldrb	r3, [r7, #3]
   3bea0:	ubfx	r3, r3, #3, #2
   3bea4:	cmp	r3, #2
   3bea8:	bne	3bb34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ca8>
   3beac:	movw	r1, #1088	; 0x440
   3beb0:	mov	r0, #0
   3beb4:	movt	r1, #10
   3beb8:	bl	13aa8 <bfd_elf_parse_eh_frame_entries@plt>
   3bebc:	cmp	r0, #0
   3bec0:	bne	3bb34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ca8>
   3bec4:	mov	r2, #5
   3bec8:	movw	r1, #8456	; 0x2108
   3becc:	movt	r1, #7
   3bed0:	bl	13688 <dcgettext@plt>
   3bed4:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3bed8:	b	3bb34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ca8>
   3bedc:	bl	1370c <bfd_elf_get_dyn_lib_class@plt>
   3bee0:	tst	r0, #4
   3bee4:	beq	3bcac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27e20>
   3bee8:	ldr	r4, [r4]
   3beec:	cmp	r4, #0
   3bef0:	bne	3bc78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27dec>
   3bef4:	b	3be9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28010>
   3bef8:	ldr	r6, [r3, #56]	; 0x38
   3befc:	cmp	r6, #0
   3bf00:	beq	3bc3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27db0>
   3bf04:	ldr	r4, [pc, #1052]	; 3c328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2849c>
   3bf08:	mov	sl, r8
   3bf0c:	str	r8, [sp, #16]
   3bf10:	str	r9, [sp, #20]
   3bf14:	ldr	fp, [r6, #100]	; 0x64
   3bf18:	cmp	fp, #0
   3bf1c:	beq	3bfcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28140>
   3bf20:	mov	r5, #0
   3bf24:	ldr	r3, [fp, #88]	; 0x58
   3bf28:	ldr	r9, [fp]
   3bf2c:	cmp	r3, r4
   3bf30:	beq	3bf78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280ec>
   3bf34:	movw	r1, #8200	; 0x2008
   3bf38:	mov	r0, r9
   3bf3c:	movt	r1, #7
   3bf40:	mov	r2, #15
   3bf44:	bl	13e08 <strncmp@plt>
   3bf48:	cmp	r0, #0
   3bf4c:	beq	3bfb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28124>
   3bf50:	mov	r0, r9
   3bf54:	movw	r1, #8216	; 0x2018
   3bf58:	movt	r1, #7
   3bf5c:	bl	13490 <strcmp@plt>
   3bf60:	cmp	r0, #0
   3bf64:	bne	3bf78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x280ec>
   3bf68:	ldrd	r2, [fp, #48]	; 0x30
   3bf6c:	cmp	r3, #0
   3bf70:	cmpeq	r2, #9
   3bf74:	movcs	r5, #1
   3bf78:	ldr	fp, [fp, #12]
   3bf7c:	cmp	fp, #0
   3bf80:	bne	3bf24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28098>
   3bf84:	cmp	r5, #0
   3bf88:	beq	3bfcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28140>
   3bf8c:	b	3bfb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28128>
   3bf90:	movw	r0, #8032	; 0x1f60
   3bf94:	movt	r0, #7
   3bf98:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3bf9c:	ldr	r0, [r9, #8]
   3bfa0:	bl	13574 <free@plt>
   3bfa4:	mov	r3, #0
   3bfa8:	str	r3, [r9, #8]
   3bfac:	b	3bc14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27d88>
   3bfb0:	mov	r5, #2
   3bfb4:	cmp	r8, #0
   3bfb8:	beq	3c030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x281a4>
   3bfbc:	cmp	r8, r5
   3bfc0:	bne	3c1e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2835c>
   3bfc4:	cmp	sl, #0
   3bfc8:	beq	3c03c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x281b0>
   3bfcc:	cmp	r8, #2
   3bfd0:	ldr	r6, [r6, #164]	; 0xa4
   3bfd4:	ldrbeq	r3, [r7, #3]
   3bfd8:	bfieq	r3, r8, #3, #2
   3bfdc:	strbeq	r3, [r7, #3]
   3bfe0:	cmp	r6, #0
   3bfe4:	bne	3bf14 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28088>
   3bfe8:	ldr	r9, [sp, #20]
   3bfec:	cmp	sl, #0
   3bff0:	beq	3c0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2821c>
   3bff4:	ldr	r3, [sl, #4]
   3bff8:	mov	r0, sl
   3bffc:	movw	r1, #8308	; 0x2074
   3c000:	movt	r1, #7
   3c004:	ldr	r3, [r3, #436]	; 0x1b4
   3c008:	ldr	r2, [r3, #40]	; 0x28
   3c00c:	orr	r2, r2, #8
   3c010:	bl	134d8 <bfd_make_section_with_flags@plt>
   3c014:	cmp	r0, #0
   3c018:	beq	3c0a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2821c>
   3c01c:	mov	r3, #2
   3c020:	str	r3, [r0, #92]	; 0x5c
   3c024:	ldr	r3, [sp, #12]
   3c028:	str	r0, [r3, #216]	; 0xd8
   3c02c:	b	3bc3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27db0>
   3c030:	cmp	sl, #0
   3c034:	mov	r8, r5
   3c038:	bne	3bfcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28140>
   3c03c:	cmp	r5, #2
   3c040:	beq	3c050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x281c4>
   3c044:	ldrb	r3, [r7, #3]
   3c048:	tst	r3, #24
   3c04c:	beq	3bfcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28140>
   3c050:	ldr	r3, [r6, #4]
   3c054:	mov	ip, #1
   3c058:	str	ip, [sp, #16]
   3c05c:	ldr	sl, [r3, #4]
   3c060:	cmp	sl, #5
   3c064:	moveq	sl, r6
   3c068:	movne	sl, #0
   3c06c:	b	3bfcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28140>
   3c070:	ldrb	r2, [r3, #5]
   3c074:	eor	r1, r2, #16
   3c078:	ubfx	r2, r2, #3, #1
   3c07c:	ubfx	r1, r1, #4, #1
   3c080:	cmp	r2, r1
   3c084:	bne	3bb34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ca8>
   3c088:	cmp	r2, #0
   3c08c:	ldr	r0, [r3, #56]	; 0x38
   3c090:	movw	r1, #8184	; 0x1ff8
   3c094:	movt	r1, #7
   3c098:	moveq	r2, #8
   3c09c:	movne	r2, #24
   3c0a0:	bl	134d8 <bfd_make_section_with_flags@plt>
   3c0a4:	b	3bb34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ca8>
   3c0a8:	ldr	ip, [sp, #16]
   3c0ac:	cmp	ip, #0
   3c0b0:	beq	3bc3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27db0>
   3c0b4:	movw	r0, #8324	; 0x2084
   3c0b8:	movt	r0, #7
   3c0bc:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3c0c0:	b	3bc3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27db0>
   3c0c4:	ldr	r3, [r9, #220]	; 0xdc
   3c0c8:	cmp	r3, #0
   3c0cc:	beq	3c244 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x283b8>
   3c0d0:	ldr	ip, [sp, #28]
   3c0d4:	ldr	r0, [ip, #224]	; 0xe0
   3c0d8:	cmp	r0, #0
   3c0dc:	beq	3c104 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28278>
   3c0e0:	ldr	r3, [r4, #4]
   3c0e4:	add	r1, sp, #56	; 0x38
   3c0e8:	mov	r2, r8
   3c0ec:	str	r3, [sp, #56]	; 0x38
   3c0f0:	ldr	r3, [r4, #8]
   3c0f4:	str	r3, [sp, #60]	; 0x3c
   3c0f8:	bl	3ae30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fa4>
   3c0fc:	cmp	r0, #0
   3c100:	bne	3be88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ffc>
   3c104:	ldr	r0, [r4, #8]
   3c108:	bl	13a24 <strlen@plt>
   3c10c:	movw	r3, #1620	; 0x654
   3c110:	movt	r3, #10
   3c114:	ldr	r6, [r3]
   3c118:	cmp	r6, #0
   3c11c:	beq	3c19c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28310>
   3c120:	add	sl, r0, #2
   3c124:	b	3c134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x282a8>
   3c128:	ldr	r6, [r6]
   3c12c:	cmp	r6, #0
   3c130:	beq	3c19c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28310>
   3c134:	ldr	r3, [r6, #8]
   3c138:	cmp	r3, #0
   3c13c:	bne	3c128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2829c>
   3c140:	ldr	r0, [r6, #4]
   3c144:	bl	13a24 <strlen@plt>
   3c148:	add	r0, sl, r0
   3c14c:	bl	137b4 <xmalloc@plt>
   3c150:	ldr	ip, [r6, #4]
   3c154:	mov	r1, #1
   3c158:	mvn	r2, #0
   3c15c:	movw	r3, #8008	; 0x1f48
   3c160:	movt	r3, #7
   3c164:	str	ip, [sp]
   3c168:	ldr	ip, [r4, #8]
   3c16c:	str	ip, [sp, #4]
   3c170:	mov	r5, r0
   3c174:	bl	13acc <__sprintf_chk@plt>
   3c178:	add	r0, sp, #48	; 0x30
   3c17c:	mov	r1, r8
   3c180:	str	r5, [sp, #52]	; 0x34
   3c184:	bl	3aba8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26d1c>
   3c188:	cmp	r0, #0
   3c18c:	bne	3be88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ffc>
   3c190:	mov	r0, r5
   3c194:	bl	13574 <free@plt>
   3c198:	b	3c128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2829c>
   3c19c:	add	r8, r8, #1
   3c1a0:	cmp	r8, #2
   3c1a4:	bne	3bd9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f10>
   3c1a8:	movw	r0, #8500	; 0x2134
   3c1ac:	ldr	r1, [r4, #8]
   3c1b0:	movt	r0, #7
   3c1b4:	ldr	r2, [r4, #4]
   3c1b8:	ldr	fp, [sp, #20]
   3c1bc:	ldr	r6, [sp, #24]
   3c1c0:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3c1c4:	b	3be90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28004>
   3c1c8:	mov	r0, r6
   3c1cc:	add	r1, sp, #40	; 0x28
   3c1d0:	mov	r2, r8
   3c1d4:	bl	3ae30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fa4>
   3c1d8:	adds	r5, r0, #0
   3c1dc:	movne	r5, #1
   3c1e0:	eor	r7, r5, #1
   3c1e4:	b	3be30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27fa4>
   3c1e8:	mov	r2, #5
   3c1ec:	movw	r1, #8228	; 0x2024
   3c1f0:	mov	r0, #0
   3c1f4:	movt	r1, #7
   3c1f8:	ldr	r9, [sp, #20]
   3c1fc:	bl	13688 <dcgettext@plt>
   3c200:	cmp	r5, #1
   3c204:	movne	r1, sl
   3c208:	moveq	r1, r6
   3c20c:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3c210:	b	3bfec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28160>
   3c214:	ldr	r3, [fp, #64]	; 0x40
   3c218:	cmp	r3, #0
   3c21c:	bne	3bdd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f4c>
   3c220:	movw	r0, #7232	; 0x1c40
   3c224:	movt	r0, #7
   3c228:	bl	138f8 <getenv@plt>
   3c22c:	add	r1, sp, #40	; 0x28
   3c230:	mov	r2, r8
   3c234:	bl	3ae30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26fa4>
   3c238:	cmp	r0, #0
   3c23c:	beq	3bdd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27f4c>
   3c240:	b	3be88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ffc>
   3c244:	ldr	ip, [sp, #32]
   3c248:	mov	r2, r3
   3c24c:	movw	r1, #8436	; 0x20f4
   3c250:	movt	r1, #7
   3c254:	str	r3, [sp, #56]	; 0x38
   3c258:	ldr	r0, [ip]
   3c25c:	str	r3, [sp, #64]	; 0x40
   3c260:	str	r3, [sp, #60]	; 0x3c
   3c264:	bl	13760 <concat@plt>
   3c268:	mov	r5, r0
   3c26c:	add	r0, sp, #56	; 0x38
   3c270:	mov	r1, r5
   3c274:	bl	3a764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x268d8>
   3c278:	subs	sl, r0, #0
   3c27c:	beq	3c2f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28464>
   3c280:	mov	r0, r5
   3c284:	bl	13574 <free@plt>
   3c288:	ldr	r0, [sp, #56]	; 0x38
   3c28c:	cmp	r0, #0
   3c290:	ldreq	r0, [r9, #224]	; 0xe0
   3c294:	beq	3c2b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28424>
   3c298:	bl	3a6b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x26824>
   3c29c:	mov	r5, r0
   3c2a0:	ldr	r0, [sp, #56]	; 0x38
   3c2a4:	bl	13574 <free@plt>
   3c2a8:	mov	r0, r5
   3c2ac:	str	r5, [r9, #224]	; 0xe0
   3c2b0:	mov	r3, #1
   3c2b4:	str	r3, [r9, #220]	; 0xdc
   3c2b8:	b	3c0d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2824c>
   3c2bc:	mov	r2, #5
   3c2c0:	movw	r1, #8400	; 0x20d0
   3c2c4:	mov	r0, #0
   3c2c8:	movt	r1, #7
   3c2cc:	bl	13688 <dcgettext@plt>
   3c2d0:	ldr	r1, [r4, #8]
   3c2d4:	ldr	r2, [r4, #4]
   3c2d8:	bl	301d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c348>
   3c2dc:	b	3bd4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x27ec0>
   3c2e0:	movw	r0, #8108	; 0x1fac
   3c2e4:	movt	r0, #7
   3c2e8:	bl	30238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x1c3ac>
   3c2ec:	b	3bf9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28110>
   3c2f0:	mov	r0, r5
   3c2f4:	bl	13574 <free@plt>
   3c2f8:	ldr	ip, [sp, #32]
   3c2fc:	mov	r2, sl
   3c300:	movw	r1, #8440	; 0x20f8
   3c304:	movt	r1, #7
   3c308:	ldr	r0, [ip]
   3c30c:	bl	13760 <concat@plt>
   3c310:	mov	r5, r0
   3c314:	add	r0, sp, #56	; 0x38
   3c318:	mov	r1, r5
   3c31c:	bl	3a764 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x268d8>
   3c320:	b	3c280 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x283f4>
   3c324:	bl	13694 <__stack_chk_fail@plt>
   3c328:			; <UNDEFINED> instruction: 0x0009fab8
   3c32c:	push	{r3, r4, r5, r6, r7, lr}
   3c330:	movw	r7, #592	; 0x250
   3c334:	movt	r7, #10
   3c338:	mov	r4, r0
   3c33c:	ldr	r3, [r7, #100]	; 0x64
   3c340:	cmp	r3, #0
   3c344:	popne	{r3, r4, r5, r6, r7, pc}
   3c348:	ldr	r0, [r0, #16]
   3c34c:	cmp	r0, #0
   3c350:	popeq	{r3, r4, r5, r6, r7, pc}
   3c354:	ldr	r2, [r0, #40]	; 0x28
   3c358:	tst	r2, #2048	; 0x800
   3c35c:	popeq	{r3, r4, r5, r6, r7, pc}
   3c360:	bl	136f4 <bfd_elf_get_dt_soname@plt>
   3c364:	subs	r6, r0, #0
   3c368:	beq	3c3f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2856c>
   3c36c:	ldr	r4, [r7, #96]	; 0x60
   3c370:	cmp	r4, #0
   3c374:	bne	3c388 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x284fc>
   3c378:	pop	{r3, r4, r5, r6, r7, pc}
   3c37c:	ldr	r4, [r4]
   3c380:	cmp	r4, #0
   3c384:	beq	3c3f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28568>
   3c388:	ldr	r1, [r4, #8]
   3c38c:	mov	r0, r6
   3c390:	bl	135a4 <filename_cmp@plt>
   3c394:	mov	r1, #47	; 0x2f
   3c398:	cmp	r0, #0
   3c39c:	beq	3c37c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x284f0>
   3c3a0:	ldr	r5, [r4, #8]
   3c3a4:	mov	r0, r5
   3c3a8:	bl	13a48 <strchr@plt>
   3c3ac:	cmp	r0, #0
   3c3b0:	bne	3c37c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x284f0>
   3c3b4:	movw	r1, #7880	; 0x1ec8
   3c3b8:	mov	r0, r5
   3c3bc:	movt	r1, #7
   3c3c0:	bl	1340c <strstr@plt>
   3c3c4:	mov	r1, r5
   3c3c8:	subs	r2, r0, #0
   3c3cc:	mov	r0, r6
   3c3d0:	add	r2, r2, #4
   3c3d4:	rsb	r2, r5, r2
   3c3d8:	beq	3c37c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x284f0>
   3c3dc:	bl	1376c <filename_ncmp@plt>
   3c3e0:	cmp	r0, #0
   3c3e4:	bne	3c37c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x284f0>
   3c3e8:	mov	r3, #1
   3c3ec:	str	r3, [r7, #100]	; 0x64
   3c3f0:	pop	{r3, r4, r5, r6, r7, pc}
   3c3f4:	pop	{r3, r4, r5, r6, r7, pc}
   3c3f8:	ldr	r3, [r4, #16]
   3c3fc:	ldr	r0, [r3]
   3c400:	bl	138bc <lbasename@plt>
   3c404:	mov	r6, r0
   3c408:	b	3c36c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x284e0>
   3c40c:	movw	r2, #8961	; 0x2301
   3c410:	movw	r3, #43913	; 0xab89
   3c414:	movt	r2, #26437	; 0x6745
   3c418:	movt	r3, #61389	; 0xefcd
   3c41c:	stm	r0, {r2, r3}
   3c420:	movw	r2, #56574	; 0xdcfe
   3c424:	movw	r3, #21622	; 0x5476
   3c428:	movt	r2, #39098	; 0x98ba
   3c42c:	movt	r3, #4146	; 0x1032
   3c430:	str	r2, [r0, #8]
   3c434:	str	r3, [r0, #12]
   3c438:	mov	r3, #0
   3c43c:	str	r3, [r0, #20]
   3c440:	str	r3, [r0, #16]
   3c444:	str	r3, [r0, #24]
   3c448:	bx	lr
   3c44c:	ldr	r3, [pc, #112]	; 3c4c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28638>
   3c450:	push	{r4, r5, r6, r7, lr}
   3c454:	add	r3, pc, r3
   3c458:	ldr	r5, [pc, #104]	; 3c4c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2863c>
   3c45c:	sub	sp, sp, #28
   3c460:	ldr	r6, [r0, #8]
   3c464:	mov	r4, r1
   3c468:	ldr	r2, [r0]
   3c46c:	add	ip, sp, #4
   3c470:	ldr	r7, [r0, #4]
   3c474:	ldr	r1, [r0, #12]
   3c478:	ldr	r5, [r3, r5]
   3c47c:	str	r6, [sp, #12]
   3c480:	stmib	sp, {r2, r7}
   3c484:	str	r1, [sp, #16]
   3c488:	ldm	ip!, {r0, r1, r2, r3}
   3c48c:	ldr	ip, [r5]
   3c490:	str	ip, [sp, #20]
   3c494:	str	r0, [r4]
   3c498:	mov	r0, r4
   3c49c:	ldr	r6, [sp, #20]
   3c4a0:	ldr	ip, [r5]
   3c4a4:	str	r1, [r4, #4]
   3c4a8:	cmp	r6, ip
   3c4ac:	str	r2, [r4, #8]
   3c4b0:	str	r3, [r4, #12]
   3c4b4:	bne	3c4c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28634>
   3c4b8:	add	sp, sp, #28
   3c4bc:	pop	{r4, r5, r6, r7, pc}
   3c4c0:	bl	13694 <__stack_chk_fail@plt>
   3c4c4:	andeq	r2, r6, r4, lsr #23
   3c4c8:	muleq	r0, r0, r3
   3c4cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   3c4d0:	sub	sp, sp, #72	; 0x48
   3c4d4:	ldr	r3, [r2, #16]
   3c4d8:	bic	ip, r1, #3
   3c4dc:	str	r2, [sp, #64]	; 0x40
   3c4e0:	add	ip, r0, ip
   3c4e4:	ldr	r2, [r2, #20]
   3c4e8:	add	r3, r1, r3
   3c4ec:	mov	r8, r0
   3c4f0:	str	ip, [sp, #68]	; 0x44
   3c4f4:	cmp	r1, r3
   3c4f8:	movls	r1, r2
   3c4fc:	addhi	r1, r2, #1
   3c500:	ldr	r2, [sp, #64]	; 0x40
   3c504:	cmp	r0, ip
   3c508:	str	r3, [r2, #16]
   3c50c:	ldr	r3, [r2]
   3c510:	ldr	r5, [r2, #12]
   3c514:	str	r1, [r2, #20]
   3c518:	str	r3, [sp, #60]	; 0x3c
   3c51c:	ldmib	r2, {r3, r4}
   3c520:	str	r5, [sp, #4]
   3c524:	str	r4, [sp]
   3c528:	bcs	3cf50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x290c4>
   3c52c:	ldr	r6, [r8]
   3c530:	movw	r2, #42104	; 0xa478
   3c534:	ldr	r9, [sp]
   3c538:	movt	r2, #55146	; 0xd76a
   3c53c:	ldr	r7, [sp, #4]
   3c540:	movw	r1, #46934	; 0xb756
   3c544:	str	r6, [sp, #8]
   3c548:	eor	r5, r9, r3
   3c54c:	ldr	sl, [sp, #60]	; 0x3c
   3c550:	eor	r6, r7, r9
   3c554:	ldr	ip, [sp, #8]
   3c558:	and	r6, r6, r3
   3c55c:	add	r2, sl, r2
   3c560:	eor	r6, r6, r7
   3c564:	add	r2, r2, ip
   3c568:	ldr	r0, [r8, #4]
   3c56c:	add	r6, r2, r6
   3c570:	movt	r1, #59591	; 0xe8c7
   3c574:	add	r1, r7, r1
   3c578:	ldr	r2, [r8, #8]
   3c57c:	add	r6, r3, r6, ror #25
   3c580:	add	r1, r1, r0
   3c584:	and	r5, r6, r5
   3c588:	str	r0, [sp, #12]
   3c58c:	eor	r5, r5, r9
   3c590:	eor	r0, r6, r3
   3c594:	add	r5, r1, r5
   3c598:	movw	r1, #28891	; 0x70db
   3c59c:	movt	r1, #9248	; 0x2420
   3c5a0:	ldr	r4, [r8, #12]
   3c5a4:	add	r5, r6, r5, ror #20
   3c5a8:	add	r1, r9, r1
   3c5ac:	and	r0, r5, r0
   3c5b0:	add	r1, r1, r2
   3c5b4:	eor	r0, r0, r3
   3c5b8:	str	r2, [sp, #16]
   3c5bc:	add	r0, r1, r0
   3c5c0:	eor	r7, r5, r6
   3c5c4:	movw	r2, #52974	; 0xceee
   3c5c8:	movt	r2, #49597	; 0xc1bd
   3c5cc:	add	r0, r5, r0, ror #15
   3c5d0:	add	r2, r3, r2
   3c5d4:	and	r7, r0, r7
   3c5d8:	add	r2, r2, r4
   3c5dc:	eor	r7, r7, r6
   3c5e0:	ldr	r9, [r8, #16]
   3c5e4:	add	r7, r2, r7
   3c5e8:	eor	r1, r0, r5
   3c5ec:	movw	r2, #4015	; 0xfaf
   3c5f0:	movt	r2, #62844	; 0xf57c
   3c5f4:	add	r7, r0, r7, ror #10
   3c5f8:	add	r2, r9, r2
   3c5fc:	and	r1, r7, r1
   3c600:	str	r4, [sp, #20]
   3c604:	add	r6, r2, r6
   3c608:	eor	r4, r1, r5
   3c60c:	add	r4, r6, r4
   3c610:	ldr	sl, [r8, #20]
   3c614:	eor	ip, r7, r0
   3c618:	movw	r1, #50730	; 0xc62a
   3c61c:	add	r4, r7, r4, ror #25
   3c620:	movt	r1, #18311	; 0x4787
   3c624:	add	r1, sl, r1
   3c628:	and	ip, r4, ip
   3c62c:	add	r5, r1, r5
   3c630:	eor	r2, ip, r0
   3c634:	add	r2, r5, r2
   3c638:	ldr	ip, [r8, #24]
   3c63c:	eor	r5, r4, r7
   3c640:	movw	r1, #17939	; 0x4613
   3c644:	add	r2, r4, r2, ror #20
   3c648:	movt	r1, #43056	; 0xa830
   3c64c:	add	r1, ip, r1
   3c650:	and	r5, r2, r5
   3c654:	str	ip, [sp, #32]
   3c658:	add	r0, r1, r0
   3c65c:	eor	ip, r5, r7
   3c660:	movw	r5, #38145	; 0x9501
   3c664:	add	ip, r0, ip
   3c668:	ldr	r0, [r8, #28]
   3c66c:	movt	r5, #64838	; 0xfd46
   3c670:	str	r9, [sp, #24]
   3c674:	add	ip, r2, ip, ror #15
   3c678:	ldr	r9, [r8, #40]	; 0x28
   3c67c:	str	r0, [sp, #36]	; 0x24
   3c680:	eor	r0, r2, r4
   3c684:	ldr	r1, [sp, #36]	; 0x24
   3c688:	and	r0, ip, r0
   3c68c:	str	sl, [sp, #28]
   3c690:	movw	fp, #23121	; 0x5a51
   3c694:	add	r5, r1, r5
   3c698:	eor	r1, r0, r4
   3c69c:	add	r7, r5, r7
   3c6a0:	ldr	r5, [r8, #32]
   3c6a4:	add	r1, r7, r1
   3c6a8:	movw	r0, #39128	; 0x98d8
   3c6ac:	movt	r0, #27008	; 0x6980
   3c6b0:	ldr	r7, [r8, #36]	; 0x24
   3c6b4:	str	r5, [sp, #40]	; 0x28
   3c6b8:	add	r1, ip, r1, ror #10
   3c6bc:	ldr	r6, [sp, #40]	; 0x28
   3c6c0:	eor	r5, ip, r2
   3c6c4:	and	r5, r1, r5
   3c6c8:	ldr	sl, [r8, #44]	; 0x2c
   3c6cc:	add	r0, r6, r0
   3c6d0:	eor	r6, r5, r2
   3c6d4:	add	r4, r0, r4
   3c6d8:	movw	r0, #63407	; 0xf7af
   3c6dc:	add	r6, r4, r6
   3c6e0:	movt	r0, #35652	; 0x8b44
   3c6e4:	eor	r4, r1, ip
   3c6e8:	add	r0, r7, r0
   3c6ec:	add	r6, r1, r6, ror #25
   3c6f0:	add	r2, r0, r2
   3c6f4:	and	r4, r6, r4
   3c6f8:	sub	r0, r9, #41984	; 0xa400
   3c6fc:	eor	r5, r4, ip
   3c700:	sub	r0, r0, #79	; 0x4f
   3c704:	add	r5, r2, r5
   3c708:	eor	r2, r6, r1
   3c70c:	add	ip, r0, ip
   3c710:	str	r7, [sp, #44]	; 0x2c
   3c714:	add	r5, r6, r5, ror #20
   3c718:	str	sl, [sp, #52]	; 0x34
   3c71c:	and	r2, r5, r2
   3c720:	str	r9, [sp, #48]	; 0x30
   3c724:	eor	r0, r2, r1
   3c728:	movw	r2, #55230	; 0xd7be
   3c72c:	add	r0, ip, r0
   3c730:	movt	r2, #35164	; 0x895c
   3c734:	eor	ip, r5, r6
   3c738:	add	r2, sl, r2
   3c73c:	add	r0, r5, r0, ror #15
   3c740:	add	r1, r2, r1
   3c744:	and	ip, r0, ip
   3c748:	movw	r2, #4386	; 0x1122
   3c74c:	eor	r7, ip, r6
   3c750:	ldr	ip, [r8, #48]	; 0x30
   3c754:	add	r7, r1, r7
   3c758:	eor	r1, r0, r5
   3c75c:	movt	r2, #27536	; 0x6b90
   3c760:	movt	fp, #9822	; 0x265e
   3c764:	add	r7, r0, r7, ror #10
   3c768:	add	r2, ip, r2
   3c76c:	and	r1, r7, r1
   3c770:	add	r6, r2, r6
   3c774:	eor	sl, r1, r5
   3c778:	ldr	r1, [r8, #52]	; 0x34
   3c77c:	add	sl, r6, sl
   3c780:	eor	r4, r7, r0
   3c784:	add	r8, r8, #64	; 0x40
   3c788:	str	r1, [sp, #56]	; 0x38
   3c78c:	add	sl, r7, sl, ror #25
   3c790:	ldr	r2, [sp, #56]	; 0x38
   3c794:	movw	r1, #29075	; 0x7193
   3c798:	movt	r1, #64920	; 0xfd98
   3c79c:	and	r4, sl, r4
   3c7a0:	add	r1, r2, r1
   3c7a4:	eor	r2, r4, r0
   3c7a8:	add	r1, r1, r5
   3c7ac:	ldr	r5, [r8, #-8]
   3c7b0:	add	r2, r1, r2
   3c7b4:	eor	r6, sl, r7
   3c7b8:	movw	r1, #17294	; 0x438e
   3c7bc:	movt	r1, #42617	; 0xa679
   3c7c0:	add	r2, sl, r2, ror #20
   3c7c4:	add	r1, r5, r1
   3c7c8:	and	r6, r2, r6
   3c7cc:	add	r1, r1, r0
   3c7d0:	eor	r4, r6, r7
   3c7d4:	ldr	r0, [r8, #-4]
   3c7d8:	add	r4, r1, r4
   3c7dc:	eor	r9, r2, sl
   3c7e0:	movw	r6, #2081	; 0x821
   3c7e4:	movt	r6, #18868	; 0x49b4
   3c7e8:	add	r4, r2, r4, ror #15
   3c7ec:	add	r6, r0, r6
   3c7f0:	and	r9, r4, r9
   3c7f4:	add	r7, r6, r7
   3c7f8:	eor	r1, r9, sl
   3c7fc:	movw	r6, #9570	; 0x2562
   3c800:	add	r1, r7, r1
   3c804:	ldr	r7, [sp, #12]
   3c808:	movt	r6, #63006	; 0xf61e
   3c80c:	ldr	r9, [sp, #32]
   3c810:	add	r1, r4, r1, ror #10
   3c814:	add	r6, r7, r6
   3c818:	add	sl, r6, sl
   3c81c:	eor	r6, r1, r4
   3c820:	and	r6, r6, r2
   3c824:	movw	r7, #45888	; 0xb340
   3c828:	eor	r6, r6, r4
   3c82c:	movt	r7, #49216	; 0xc040
   3c830:	add	sl, sl, r6
   3c834:	ldr	r6, [sp, #52]	; 0x34
   3c838:	add	r7, r9, r7
   3c83c:	ldr	r9, [sp, #8]
   3c840:	add	sl, r1, sl, ror #27
   3c844:	add	fp, r6, fp
   3c848:	eor	r6, sl, r1
   3c84c:	add	fp, fp, r4
   3c850:	and	r4, r6, r4
   3c854:	add	r2, r7, r2
   3c858:	eor	r4, r4, r1
   3c85c:	movw	r7, #51114	; 0xc7aa
   3c860:	add	r2, r2, r4
   3c864:	movt	r7, #59830	; 0xe9b6
   3c868:	add	r7, r9, r7
   3c86c:	ldr	r4, [sp, #68]	; 0x44
   3c870:	add	r2, sl, r2, ror #23
   3c874:	add	r7, r7, r1
   3c878:	eor	r9, r2, sl
   3c87c:	movw	r6, #4189	; 0x105d
   3c880:	and	r1, r9, r1
   3c884:	ldr	r9, [sp, #28]
   3c888:	eor	r1, r1, sl
   3c88c:	movt	r6, #54831	; 0xd62f
   3c890:	add	r6, r9, r6
   3c894:	add	r9, fp, r1
   3c898:	cmp	r4, r8
   3c89c:	ldr	r4, [sp, #48]	; 0x30
   3c8a0:	add	r9, r2, r9, ror #18
   3c8a4:	movw	r1, #5203	; 0x1453
   3c8a8:	movt	r1, #580	; 0x244
   3c8ac:	add	r6, r6, sl
   3c8b0:	add	r1, r4, r1
   3c8b4:	eor	r4, r9, r2
   3c8b8:	and	r4, r4, sl
   3c8bc:	movw	sl, #64456	; 0xfbc8
   3c8c0:	eor	r4, r4, r2
   3c8c4:	movt	sl, #59347	; 0xe7d3
   3c8c8:	add	r4, r7, r4
   3c8cc:	add	r1, r1, r2
   3c8d0:	movw	fp, #59009	; 0xe681
   3c8d4:	movt	fp, #55457	; 0xd8a1
   3c8d8:	add	r4, r9, r4, ror #12
   3c8dc:	add	fp, r0, fp
   3c8e0:	eor	r7, r4, r9
   3c8e4:	add	fp, fp, r9
   3c8e8:	and	r7, r7, r2
   3c8ec:	movw	r2, #52710	; 0xcde6
   3c8f0:	eor	r7, r7, r9
   3c8f4:	movt	r2, #8673	; 0x21e1
   3c8f8:	add	r7, r6, r7
   3c8fc:	ldr	r6, [sp, #24]
   3c900:	add	r7, r4, r7, ror #27
   3c904:	add	sl, r6, sl
   3c908:	eor	r6, r7, r4
   3c90c:	add	sl, sl, r4
   3c910:	and	r6, r6, r9
   3c914:	ldr	r9, [sp, #44]	; 0x2c
   3c918:	eor	r6, r6, r4
   3c91c:	add	r6, r1, r6
   3c920:	add	r2, r9, r2
   3c924:	add	r9, r2, r7
   3c928:	movw	r2, #2006	; 0x7d6
   3c92c:	add	r6, r7, r6, ror #23
   3c930:	movt	r2, #49975	; 0xc337
   3c934:	eor	r1, r6, r7
   3c938:	add	r2, r5, r2
   3c93c:	and	r1, r1, r4
   3c940:	add	r4, r2, r6
   3c944:	eor	r1, r1, r7
   3c948:	add	r1, fp, r1
   3c94c:	movw	fp, #3463	; 0xd87
   3c950:	movt	fp, #62677	; 0xf4d5
   3c954:	add	r1, r6, r1, ror #18
   3c958:	eor	r2, r1, r6
   3c95c:	and	r2, r2, r7
   3c960:	movw	r7, #5357	; 0x14ed
   3c964:	eor	r2, r2, r6
   3c968:	movt	r7, #17754	; 0x455a
   3c96c:	add	r2, sl, r2
   3c970:	ldr	sl, [sp, #20]
   3c974:	add	r2, r1, r2, ror #12
   3c978:	add	fp, sl, fp
   3c97c:	eor	sl, r2, r1
   3c980:	add	fp, fp, r1
   3c984:	and	sl, sl, r6
   3c988:	ldr	r6, [sp, #40]	; 0x28
   3c98c:	eor	sl, sl, r1
   3c990:	add	sl, r9, sl
   3c994:	add	r7, r6, r7
   3c998:	add	r7, r7, r2
   3c99c:	movw	r6, #59653	; 0xe905
   3c9a0:	add	sl, r2, sl, ror #27
   3c9a4:	movt	r6, #43491	; 0xa9e3
   3c9a8:	eor	r9, sl, r2
   3c9ac:	and	r9, r9, r1
   3c9b0:	ldr	r1, [sp, #56]	; 0x38
   3c9b4:	eor	r9, r9, r2
   3c9b8:	add	r9, r4, r9
   3c9bc:	add	r6, r1, r6
   3c9c0:	movw	r1, #41976	; 0xa3f8
   3c9c4:	movt	r1, #64751	; 0xfcef
   3c9c8:	add	r9, sl, r9, ror #23
   3c9cc:	add	r6, r6, sl
   3c9d0:	eor	r4, r9, sl
   3c9d4:	and	r4, r4, r2
   3c9d8:	ldr	r2, [sp, #16]
   3c9dc:	eor	r4, r4, sl
   3c9e0:	add	r4, fp, r4
   3c9e4:	add	r1, r2, r1
   3c9e8:	add	r1, r1, r9
   3c9ec:	movw	fp, #729	; 0x2d9
   3c9f0:	add	r4, r9, r4, ror #18
   3c9f4:	movt	fp, #26479	; 0x676f
   3c9f8:	eor	r2, r4, r9
   3c9fc:	and	sl, r2, sl
   3ca00:	eor	sl, sl, r9
   3ca04:	add	r7, r7, sl
   3ca08:	ldr	sl, [sp, #36]	; 0x24
   3ca0c:	add	r7, r4, r7, ror #12
   3ca10:	add	fp, sl, fp
   3ca14:	eor	r2, r7, r4
   3ca18:	movw	sl, #14658	; 0x3942
   3ca1c:	and	r9, r2, r9
   3ca20:	movw	r2, #19594	; 0x4c8a
   3ca24:	eor	r9, r9, r4
   3ca28:	movt	r2, #36138	; 0x8d2a
   3ca2c:	add	r6, r6, r9
   3ca30:	add	r2, ip, r2
   3ca34:	add	r9, r2, r7
   3ca38:	movt	sl, #65530	; 0xfffa
   3ca3c:	add	r6, r7, r6, ror #27
   3ca40:	add	fp, fp, r4
   3ca44:	eor	r2, r6, r7
   3ca48:	and	r2, r2, r4
   3ca4c:	movw	r4, #63105	; 0xf681
   3ca50:	eor	r2, r2, r7
   3ca54:	movt	r4, #34673	; 0x8771
   3ca58:	add	r2, r1, r2
   3ca5c:	ldr	r1, [sp, #28]
   3ca60:	add	r2, r6, r2, ror #23
   3ca64:	add	sl, r1, sl
   3ca68:	eor	r1, r2, r6
   3ca6c:	add	sl, sl, r6
   3ca70:	and	r1, r1, r7
   3ca74:	ldr	r7, [sp, #40]	; 0x28
   3ca78:	eor	r1, r1, r6
   3ca7c:	add	r1, fp, r1
   3ca80:	add	r4, r7, r4
   3ca84:	add	r7, r4, r2
   3ca88:	movw	fp, #53305	; 0xd039
   3ca8c:	add	r1, r2, r1, ror #18
   3ca90:	movt	fp, #55764	; 0xd9d4
   3ca94:	eor	r4, r1, r2
   3ca98:	and	r6, r4, r6
   3ca9c:	eor	r2, r6, r2
   3caa0:	movw	r6, #24866	; 0x6122
   3caa4:	add	r2, r9, r2
   3caa8:	ldr	r9, [sp, #52]	; 0x34
   3caac:	movt	r6, #28061	; 0x6d9d
   3cab0:	add	r2, r1, r2, ror #12
   3cab4:	add	r6, r9, r6
   3cab8:	eor	r4, r2, r4
   3cabc:	add	r6, r6, r1
   3cac0:	add	r4, sl, r4
   3cac4:	eor	r1, r2, r1
   3cac8:	movw	r9, #14348	; 0x380c
   3cacc:	movt	r9, #64997	; 0xfde5
   3cad0:	add	r4, r2, r4, ror #28
   3cad4:	add	r9, r5, r9
   3cad8:	eor	r1, r1, r4
   3cadc:	add	r9, r9, r2
   3cae0:	add	r1, r7, r1
   3cae4:	eor	r2, r4, r2
   3cae8:	ldr	r7, [sp, #12]
   3caec:	movw	sl, #59972	; 0xea44
   3caf0:	add	r1, r4, r1, ror #21
   3caf4:	movt	sl, #42174	; 0xa4be
   3caf8:	eor	r2, r2, r1
   3cafc:	add	sl, r7, sl
   3cb00:	add	r2, r6, r2
   3cb04:	add	sl, sl, r4
   3cb08:	eor	r4, r1, r4
   3cb0c:	ldr	r6, [sp, #24]
   3cb10:	add	r2, r1, r2, ror #16
   3cb14:	movw	r7, #53161	; 0xcfa9
   3cb18:	eor	r4, r4, r2
   3cb1c:	movt	r7, #19422	; 0x4bde
   3cb20:	add	r4, r9, r4
   3cb24:	add	r7, r6, r7
   3cb28:	add	r7, r7, r1
   3cb2c:	eor	r1, r2, r1
   3cb30:	add	r4, r2, r4, ror #9
   3cb34:	ldr	r9, [sp, #36]	; 0x24
   3cb38:	eor	r1, r1, r4
   3cb3c:	movw	r6, #19296	; 0x4b60
   3cb40:	add	r1, sl, r1
   3cb44:	movt	r6, #63163	; 0xf6bb
   3cb48:	add	r6, r9, r6
   3cb4c:	ldr	sl, [sp, #48]	; 0x30
   3cb50:	add	r1, r4, r1, ror #28
   3cb54:	add	r6, r6, r2
   3cb58:	eor	r2, r4, r2
   3cb5c:	movw	r9, #48240	; 0xbc70
   3cb60:	eor	r2, r2, r1
   3cb64:	movt	r9, #48831	; 0xbebf
   3cb68:	add	r2, r7, r2
   3cb6c:	add	r9, sl, r9
   3cb70:	add	r9, r9, r4
   3cb74:	eor	r4, r1, r4
   3cb78:	add	r2, r1, r2, ror #21
   3cb7c:	ldr	r7, [sp, #56]	; 0x38
   3cb80:	eor	r4, r4, r2
   3cb84:	movw	sl, #32454	; 0x7ec6
   3cb88:	add	r6, r6, r4
   3cb8c:	movt	sl, #10395	; 0x289b
   3cb90:	add	sl, r7, sl
   3cb94:	ldr	r4, [sp, #8]
   3cb98:	add	r6, r2, r6, ror #16
   3cb9c:	add	sl, sl, r1
   3cba0:	eor	r1, r2, r1
   3cba4:	movw	r7, #10234	; 0x27fa
   3cba8:	eor	r1, r1, r6
   3cbac:	movt	r7, #60065	; 0xeaa1
   3cbb0:	add	r1, r9, r1
   3cbb4:	add	r7, r4, r7
   3cbb8:	add	r7, r7, r2
   3cbbc:	eor	r2, r6, r2
   3cbc0:	add	r1, r6, r1, ror #9
   3cbc4:	ldr	r9, [sp, #20]
   3cbc8:	eor	r2, r2, r1
   3cbcc:	movw	r4, #12421	; 0x3085
   3cbd0:	add	r2, sl, r2
   3cbd4:	movt	r4, #54511	; 0xd4ef
   3cbd8:	add	r4, r9, r4
   3cbdc:	ldr	sl, [sp, #32]
   3cbe0:	add	r2, r1, r2, ror #28
   3cbe4:	add	r4, r4, r6
   3cbe8:	eor	r6, r1, r6
   3cbec:	movw	r9, #7429	; 0x1d05
   3cbf0:	eor	r6, r6, r2
   3cbf4:	movt	r9, #1160	; 0x488
   3cbf8:	add	r7, r7, r6
   3cbfc:	add	r9, sl, r9
   3cc00:	add	r9, r9, r1
   3cc04:	eor	r1, r2, r1
   3cc08:	add	r7, r2, r7, ror #21
   3cc0c:	ldr	r6, [sp, #44]	; 0x2c
   3cc10:	eor	r1, r1, r7
   3cc14:	movw	sl, #22117	; 0x5665
   3cc18:	add	r1, r4, r1
   3cc1c:	add	fp, r6, fp
   3cc20:	add	fp, fp, r2
   3cc24:	eor	r2, r7, r2
   3cc28:	add	r1, r7, r1, ror #16
   3cc2c:	movw	r6, #39397	; 0x99e5
   3cc30:	eor	r2, r2, r1
   3cc34:	movt	r6, #59099	; 0xe6db
   3cc38:	add	r2, r9, r2
   3cc3c:	add	r6, ip, r6
   3cc40:	add	r6, r6, r7
   3cc44:	eor	r7, r1, r7
   3cc48:	add	r2, r1, r2, ror #9
   3cc4c:	movw	r4, #31992	; 0x7cf8
   3cc50:	eor	r7, r7, r2
   3cc54:	movt	r4, #8098	; 0x1fa2
   3cc58:	add	fp, fp, r7
   3cc5c:	add	r4, r0, r4
   3cc60:	add	r4, r4, r1
   3cc64:	eor	r1, r2, r1
   3cc68:	add	fp, r2, fp, ror #28
   3cc6c:	ldr	r7, [sp, #16]
   3cc70:	eor	r1, r1, fp
   3cc74:	movt	sl, #50348	; 0xc4ac
   3cc78:	add	r1, r6, r1
   3cc7c:	add	sl, r7, sl
   3cc80:	add	sl, sl, r2
   3cc84:	eor	r2, fp, r2
   3cc88:	add	r1, fp, r1, ror #21
   3cc8c:	ldr	r9, [sp, #8]
   3cc90:	eor	r2, r2, r1
   3cc94:	movw	r7, #8772	; 0x2244
   3cc98:	add	r2, r4, r2
   3cc9c:	movt	r7, #62505	; 0xf429
   3cca0:	add	r7, r9, r7
   3cca4:	movw	r4, #9127	; 0x23a7
   3cca8:	add	r2, r1, r2, ror #16
   3ccac:	add	r7, r7, fp
   3ccb0:	eor	fp, r1, fp
   3ccb4:	movt	r4, #43924	; 0xab94
   3ccb8:	eor	fp, fp, r2
   3ccbc:	mvn	r9, r1
   3ccc0:	add	sl, sl, fp
   3ccc4:	add	r4, r5, r4
   3ccc8:	str	r7, [sp, #8]
   3cccc:	mvn	fp, r2
   3ccd0:	add	sl, r2, sl, ror #9
   3ccd4:	ldr	r7, [sp, #36]	; 0x24
   3ccd8:	orr	r9, sl, r9
   3ccdc:	add	r4, r4, r2
   3cce0:	eor	r9, r9, r2
   3cce4:	ldr	r2, [sp, #8]
   3cce8:	movw	r6, #65431	; 0xff97
   3ccec:	movt	r6, #17194	; 0x432a
   3ccf0:	add	r6, r7, r6
   3ccf4:	add	r7, r2, r9
   3ccf8:	ldr	r9, [sp, #28]
   3ccfc:	add	r1, r6, r1
   3cd00:	add	r7, sl, r7, ror #26
   3cd04:	movw	r6, #41017	; 0xa039
   3cd08:	movt	r6, #64659	; 0xfc93
   3cd0c:	orr	fp, r7, fp
   3cd10:	add	r6, r9, r6
   3cd14:	mvn	r5, sl
   3cd18:	add	r6, r6, sl
   3cd1c:	eor	sl, fp, sl
   3cd20:	add	r1, r1, sl
   3cd24:	movw	r2, #22979	; 0x59c3
   3cd28:	movt	r2, #25947	; 0x655b
   3cd2c:	mvn	r9, r7
   3cd30:	add	r1, r7, r1, ror #22
   3cd34:	add	r2, ip, r2
   3cd38:	orr	r5, r1, r5
   3cd3c:	add	r2, r2, r7
   3cd40:	eor	r7, r5, r7
   3cd44:	ldr	sl, [sp, #20]
   3cd48:	add	r4, r4, r7
   3cd4c:	movw	ip, #52370	; 0xcc92
   3cd50:	movt	ip, #36620	; 0x8f0c
   3cd54:	ldr	r5, [sp, #48]	; 0x30
   3cd58:	add	r4, r1, r4, ror #17
   3cd5c:	add	ip, sl, ip
   3cd60:	orr	r9, r4, r9
   3cd64:	mvn	sl, r1
   3cd68:	add	ip, ip, r1
   3cd6c:	eor	r1, r9, r1
   3cd70:	add	r6, r6, r1
   3cd74:	movw	fp, #62589	; 0xf47d
   3cd78:	movt	fp, #65519	; 0xffef
   3cd7c:	mvn	r7, r4
   3cd80:	add	r6, r4, r6, ror #11
   3cd84:	add	fp, r5, fp
   3cd88:	orr	sl, r6, sl
   3cd8c:	add	fp, fp, r4
   3cd90:	eor	r4, sl, r4
   3cd94:	ldr	r1, [sp, #12]
   3cd98:	add	r2, r2, r4
   3cd9c:	ldr	r4, [sp, #40]	; 0x28
   3cda0:	movw	r9, #24017	; 0x5dd1
   3cda4:	movw	r5, #32335	; 0x7e4f
   3cda8:	add	r2, r6, r2, ror #26
   3cdac:	movt	r9, #34180	; 0x8584
   3cdb0:	orr	r7, r2, r7
   3cdb4:	movt	r5, #28584	; 0x6fa8
   3cdb8:	eor	r7, r7, r6
   3cdbc:	add	r9, r1, r9
   3cdc0:	add	ip, ip, r7
   3cdc4:	mvn	r1, r6
   3cdc8:	add	r5, r4, r5
   3cdcc:	mvn	r4, r2
   3cdd0:	add	ip, r2, ip, ror #22
   3cdd4:	add	r5, r5, r2
   3cdd8:	orr	r1, ip, r1
   3cddc:	add	r9, r9, r6
   3cde0:	eor	r2, r1, r2
   3cde4:	mvn	r7, ip
   3cde8:	add	fp, fp, r2
   3cdec:	ldr	r2, [sp, #56]	; 0x38
   3cdf0:	movw	sl, #59104	; 0xe6e0
   3cdf4:	movw	r1, #4513	; 0x11a1
   3cdf8:	add	fp, ip, fp, ror #17
   3cdfc:	movt	sl, #65068	; 0xfe2c
   3ce00:	orr	r4, fp, r4
   3ce04:	movt	r1, #19976	; 0x4e08
   3ce08:	eor	r4, r4, ip
   3ce0c:	add	sl, r0, sl
   3ce10:	add	r9, r9, r4
   3ce14:	add	r1, r2, r1
   3ce18:	mvn	r2, fp
   3ce1c:	add	sl, sl, ip
   3ce20:	add	r9, fp, r9, ror #11
   3ce24:	ldr	r6, [sp, #32]
   3ce28:	orr	r7, r9, r7
   3ce2c:	ldr	r4, [sp, #24]
   3ce30:	eor	r7, r7, fp
   3ce34:	movw	r0, #17172	; 0x4314
   3ce38:	add	r5, r5, r7
   3ce3c:	ldr	r7, [sp, #52]	; 0x34
   3ce40:	movt	r0, #41729	; 0xa301
   3ce44:	movw	ip, #62005	; 0xf235
   3ce48:	add	r5, r9, r5, ror #26
   3ce4c:	movt	ip, #48442	; 0xbd3a
   3ce50:	orr	r2, r5, r2
   3ce54:	add	r0, r6, r0
   3ce58:	eor	r2, r2, r9
   3ce5c:	add	ip, r7, ip
   3ce60:	add	sl, sl, r2
   3ce64:	ldr	r7, [sp, #16]
   3ce68:	movw	r6, #32386	; 0x7e82
   3ce6c:	movt	r6, #63315	; 0xf753
   3ce70:	add	sl, r5, sl, ror #22
   3ce74:	add	r0, r0, fp
   3ce78:	add	r6, r4, r6
   3ce7c:	movw	fp, #53947	; 0xd2bb
   3ce80:	mvn	r4, r9
   3ce84:	movt	fp, #10967	; 0x2ad7
   3ce88:	orr	r4, sl, r4
   3ce8c:	add	r6, r6, r5
   3ce90:	add	fp, r7, fp
   3ce94:	mvn	r7, r5
   3ce98:	eor	r5, r4, r5
   3ce9c:	add	r1, r1, r9
   3cea0:	add	r5, r0, r5
   3cea4:	ldr	r2, [sp, #44]	; 0x2c
   3cea8:	movw	r9, #54161	; 0xd391
   3ceac:	movt	r9, #60294	; 0xeb86
   3ceb0:	add	r5, sl, r5, ror #17
   3ceb4:	add	r9, r2, r9
   3ceb8:	orr	r7, r5, r7
   3cebc:	mvn	r2, sl
   3cec0:	eor	r7, r7, sl
   3cec4:	mvn	r4, r5
   3cec8:	add	r7, r1, r7
   3cecc:	add	ip, ip, sl
   3ced0:	add	fp, fp, r5
   3ced4:	add	r7, r5, r7, ror #11
   3ced8:	orr	r2, r7, r2
   3cedc:	add	r9, r9, r7
   3cee0:	eor	r2, r2, r5
   3cee4:	mvn	sl, r7
   3cee8:	add	r2, r6, r2
   3ceec:	ldr	r5, [sp, #60]	; 0x3c
   3cef0:	ldr	r6, [sp, #4]
   3cef4:	add	r2, r7, r2, ror #26
   3cef8:	orr	r4, r2, r4
   3cefc:	add	r5, r5, r2
   3cf00:	eor	r7, r4, r7
   3cf04:	mvn	r0, r2
   3cf08:	add	ip, ip, r7
   3cf0c:	ldr	r7, [sp]
   3cf10:	str	r5, [sp, #60]	; 0x3c
   3cf14:	add	ip, r2, ip, ror #22
   3cf18:	orr	sl, ip, sl
   3cf1c:	add	r6, r6, ip
   3cf20:	eor	r2, sl, r2
   3cf24:	str	r6, [sp, #4]
   3cf28:	add	fp, fp, r2
   3cf2c:	add	fp, ip, fp, ror #17
   3cf30:	orr	r0, fp, r0
   3cf34:	add	r7, r7, fp
   3cf38:	eor	ip, r0, ip
   3cf3c:	str	r7, [sp]
   3cf40:	add	r9, r9, ip
   3cf44:	add	fp, fp, r9, ror #11
   3cf48:	add	r3, r3, fp
   3cf4c:	bhi	3c52c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x286a0>
   3cf50:	ldr	sl, [sp, #64]	; 0x40
   3cf54:	ldr	r9, [sp, #60]	; 0x3c
   3cf58:	ldr	ip, [sp]
   3cf5c:	ldr	r0, [sp, #4]
   3cf60:	str	r9, [sl]
   3cf64:	str	r3, [sl, #4]
   3cf68:	str	ip, [sl, #8]
   3cf6c:	str	r0, [sl, #12]
   3cf70:	add	sp, sp, #72	; 0x48
   3cf74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   3cf78:	bx	lr
   3cf7c:	ldr	r2, [pc, #220]	; 3d060 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x291d4>
   3cf80:	push	{r4, r5, r6, r7, r8, lr}
   3cf84:	mov	r4, r0
   3cf88:	ldr	r0, [pc, #212]	; 3d064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x291d8>
   3cf8c:	add	r2, pc, r2
   3cf90:	ldr	r5, [r4, #24]
   3cf94:	sub	sp, sp, #8
   3cf98:	ldr	r3, [r4, #16]
   3cf9c:	mov	r8, r1
   3cfa0:	ldr	r6, [r2, r0]
   3cfa4:	add	r0, r4, r5
   3cfa8:	add	r3, r5, r3
   3cfac:	str	r3, [r4, #16]
   3cfb0:	cmp	r5, r3
   3cfb4:	ldr	r1, [pc, #172]	; 3d068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x291dc>
   3cfb8:	ldr	r3, [r6]
   3cfbc:	add	r0, r0, #28
   3cfc0:	add	r1, pc, r1
   3cfc4:	str	r3, [sp, #4]
   3cfc8:	ldrhi	r3, [r4, #20]
   3cfcc:	addhi	r3, r3, #1
   3cfd0:	strhi	r3, [r4, #20]
   3cfd4:	cmp	r5, #55	; 0x37
   3cfd8:	rsbhi	r7, r5, #120	; 0x78
   3cfdc:	rsbls	r7, r5, #56	; 0x38
   3cfe0:	mov	r2, r7
   3cfe4:	bl	135c8 <memcpy@plt>
   3cfe8:	ldr	r2, [r4, #16]
   3cfec:	add	r3, sp, #8
   3cff0:	add	r1, r7, r5
   3cff4:	add	lr, r4, r1
   3cff8:	add	r1, r1, #8
   3cffc:	lsl	r2, r2, #3
   3d000:	str	r2, [sp]
   3d004:	ldr	r0, [r3, #-8]!
   3d008:	mov	ip, lr
   3d00c:	mov	r2, r4
   3d010:	str	r0, [lr, #28]
   3d014:	ldr	r0, [r4, #20]
   3d018:	ldr	lr, [r4, #16]
   3d01c:	lsl	r0, r0, #3
   3d020:	orr	r0, r0, lr, lsr #29
   3d024:	str	r0, [sp]
   3d028:	ldr	r0, [r3]
   3d02c:	str	r0, [ip, #32]
   3d030:	add	r0, r4, #28
   3d034:	bl	3c4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28640>
   3d038:	ldr	r2, [sp, #4]
   3d03c:	ldr	r3, [r6]
   3d040:	cmp	r2, r3
   3d044:	bne	3d05c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x291d0>
   3d048:	mov	r0, r4
   3d04c:	mov	r1, r8
   3d050:	add	sp, sp, #8
   3d054:	pop	{r4, r5, r6, r7, r8, lr}
   3d058:	b	3c44c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x285c0>
   3d05c:	bl	13694 <__stack_chk_fail@plt>
   3d060:	andeq	r2, r6, ip, rrx
   3d064:	muleq	r0, r0, r3
   3d068:	andeq	r0, r5, r0, asr #26
   3d06c:	ldr	r3, [r2, #24]
   3d070:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3d074:	cmp	r3, #0
   3d078:	mov	r8, r2
   3d07c:	mov	r9, r0
   3d080:	mov	r6, r1
   3d084:	bne	3d154 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x292c8>
   3d088:	cmp	r6, #64	; 0x40
   3d08c:	bls	3d144 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x292b8>
   3d090:	tst	r9, #3
   3d094:	beq	3d128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2929c>
   3d098:	add	r7, r8, #28
   3d09c:	mov	sl, r6
   3d0a0:	mov	r4, r9
   3d0a4:	add	ip, r4, #64	; 0x40
   3d0a8:	mov	r3, r7
   3d0ac:	ldr	r1, [r4]
   3d0b0:	add	r4, r4, #16
   3d0b4:	ldr	r2, [r4, #-12]
   3d0b8:	add	r3, r3, #16
   3d0bc:	ldr	r5, [r4, #-8]
   3d0c0:	ldr	lr, [r4, #-4]
   3d0c4:	cmp	r4, ip
   3d0c8:	str	r1, [r3, #-16]
   3d0cc:	str	r2, [r3, #-12]
   3d0d0:	str	r5, [r3, #-8]
   3d0d4:	str	lr, [r3, #-4]
   3d0d8:	bne	3d0ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29220>
   3d0dc:	sub	sl, sl, #64	; 0x40
   3d0e0:	mov	r0, r7
   3d0e4:	mov	r1, #64	; 0x40
   3d0e8:	mov	r2, r8
   3d0ec:	bl	3c4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28640>
   3d0f0:	cmp	sl, #64	; 0x40
   3d0f4:	bhi	3d0a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29218>
   3d0f8:	sub	r3, r6, #65	; 0x41
   3d0fc:	sub	r6, r6, #64	; 0x40
   3d100:	lsr	r3, r3, #6
   3d104:	add	r2, r3, #1
   3d108:	sub	r6, r6, r3, lsl #6
   3d10c:	add	r9, r9, r2, lsl #6
   3d110:	mov	r0, r7
   3d114:	mov	r1, r9
   3d118:	mov	r2, r6
   3d11c:	bl	135c8 <memcpy@plt>
   3d120:	str	r6, [r8, #24]
   3d124:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3d128:	bic	r3, r6, #63	; 0x3f
   3d12c:	mov	r0, r9
   3d130:	mov	r2, r8
   3d134:	and	r6, r6, #63	; 0x3f
   3d138:	mov	r1, r3
   3d13c:	add	r9, r9, r3
   3d140:	bl	3c4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28640>
   3d144:	cmp	r6, #0
   3d148:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3d14c:	add	r7, r8, #28
   3d150:	b	3d110 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29284>
   3d154:	rsb	r4, r3, #128	; 0x80
   3d158:	add	r0, r2, r3
   3d15c:	cmp	r1, r4
   3d160:	movcc	r4, r1
   3d164:	add	r0, r0, #28
   3d168:	add	r5, r4, r3
   3d16c:	mov	r1, r9
   3d170:	mov	r2, r4
   3d174:	bl	135c8 <memcpy@plt>
   3d178:	ldr	r3, [r8, #24]
   3d17c:	cmp	r5, #64	; 0x40
   3d180:	add	r3, r3, r4
   3d184:	str	r3, [r8, #24]
   3d188:	bhi	3d198 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2930c>
   3d18c:	add	r9, r9, r4
   3d190:	rsb	r6, r4, r6
   3d194:	b	3d088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x291fc>
   3d198:	bic	sl, r5, #63	; 0x3f
   3d19c:	add	r7, r8, #28
   3d1a0:	and	r5, r5, #63	; 0x3f
   3d1a4:	mov	r2, r8
   3d1a8:	mov	r0, r7
   3d1ac:	mov	r1, sl
   3d1b0:	bl	3c4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28640>
   3d1b4:	add	r1, r8, sl
   3d1b8:	add	r1, r1, #28
   3d1bc:	mov	r0, r7
   3d1c0:	mov	r2, r5
   3d1c4:	bl	135c8 <memcpy@plt>
   3d1c8:	str	r5, [r8, #24]
   3d1cc:	b	3d18c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29300>
   3d1d0:	ldr	r3, [pc, #100]	; 3d23c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x293b0>
   3d1d4:	ldr	ip, [pc, #100]	; 3d240 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x293b4>
   3d1d8:	add	r3, pc, r3
   3d1dc:	push	{r4, r5, r6, r7, r8, lr}
   3d1e0:	sub	sp, sp, #160	; 0xa0
   3d1e4:	ldr	r5, [r3, ip]
   3d1e8:	mov	r7, r0
   3d1ec:	mov	r8, r1
   3d1f0:	mov	r0, sp
   3d1f4:	mov	r6, r2
   3d1f8:	ldr	r3, [r5]
   3d1fc:	str	r3, [sp, #156]	; 0x9c
   3d200:	bl	3c40c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28580>
   3d204:	mov	r2, sp
   3d208:	mov	r0, r7
   3d20c:	mov	r1, r8
   3d210:	bl	3d06c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x291e0>
   3d214:	mov	r0, sp
   3d218:	mov	r1, r6
   3d21c:	bl	3cf7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x290f0>
   3d220:	ldr	r2, [sp, #156]	; 0x9c
   3d224:	ldr	r3, [r5]
   3d228:	cmp	r2, r3
   3d22c:	bne	3d238 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x293ac>
   3d230:	add	sp, sp, #160	; 0xa0
   3d234:	pop	{r4, r5, r6, r7, r8, pc}
   3d238:	bl	13694 <__stack_chk_fail@plt>
   3d23c:	andeq	r1, r6, r0, lsr #28
   3d240:	muleq	r0, r0, r3
   3d244:	ldr	r3, [pc, #244]	; 3d340 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x294b4>
   3d248:	ldr	r2, [pc, #244]	; 3d344 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x294b8>
   3d24c:	add	r3, pc, r3
   3d250:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3d254:	sub	sp, sp, #4288	; 0x10c0
   3d258:	ldr	r9, [r3, r2]
   3d25c:	sub	sp, sp, #40	; 0x28
   3d260:	add	r2, sp, #8192	; 0x2000
   3d264:	mov	r6, r0
   3d268:	mov	r0, sp
   3d26c:	mov	sl, r1
   3d270:	ldr	r3, [r9]
   3d274:	add	r5, sp, #156	; 0x9c
   3d278:	movw	r7, #4095	; 0xfff
   3d27c:	str	r3, [r2, #-3868]	; 0xfffff0e4
   3d280:	bl	3c40c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28580>
   3d284:	mov	r4, #0
   3d288:	mov	r3, r6
   3d28c:	add	r0, r5, r4
   3d290:	rsb	r2, r4, #4096	; 0x1000
   3d294:	mov	r1, #1
   3d298:	bl	1382c <fread@plt>
   3d29c:	add	r4, r4, r0
   3d2a0:	cmp	r4, r7
   3d2a4:	movhi	r3, #0
   3d2a8:	movls	r3, #1
   3d2ac:	cmp	r0, #0
   3d2b0:	moveq	r3, #0
   3d2b4:	cmp	r3, #0
   3d2b8:	bne	3d288 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x293fc>
   3d2bc:	cmp	r0, #0
   3d2c0:	beq	3d2d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2944c>
   3d2c4:	mov	r0, r5
   3d2c8:	mov	r1, #4096	; 0x1000
   3d2cc:	mov	r2, sp
   3d2d0:	bl	3c4cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x28640>
   3d2d4:	b	3d284 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x293f8>
   3d2d8:	mov	r0, r6
   3d2dc:	bl	13598 <ferror@plt>
   3d2e0:	subs	r6, r0, #0
   3d2e4:	bne	3d320 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29494>
   3d2e8:	cmp	r4, #0
   3d2ec:	bne	3d328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2949c>
   3d2f0:	mov	r0, sp
   3d2f4:	mov	r1, sl
   3d2f8:	bl	3cf7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x290f0>
   3d2fc:	add	r3, sp, #8192	; 0x2000
   3d300:	mov	r0, r6
   3d304:	ldr	r2, [r3, #-3868]	; 0xfffff0e4
   3d308:	ldr	r3, [r9]
   3d30c:	cmp	r2, r3
   3d310:	bne	3d33c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x294b0>
   3d314:	add	sp, sp, #4288	; 0x10c0
   3d318:	add	sp, sp, #40	; 0x28
   3d31c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3d320:	mov	r6, #1
   3d324:	b	3d2fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29470>
   3d328:	mov	r0, r5
   3d32c:	mov	r1, r4
   3d330:	mov	r2, sp
   3d334:	bl	3d06c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x291e0>
   3d338:	b	3d2f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29464>
   3d33c:	bl	13694 <__stack_chk_fail@plt>
   3d340:	andeq	r1, r6, ip, lsr #27
   3d344:	muleq	r0, r0, r3
   3d348:	movw	r2, #8961	; 0x2301
   3d34c:	movw	r3, #43913	; 0xab89
   3d350:	movt	r2, #26437	; 0x6745
   3d354:	movt	r3, #61389	; 0xefcd
   3d358:	stm	r0, {r2, r3}
   3d35c:	movw	r2, #56574	; 0xdcfe
   3d360:	movw	r3, #21622	; 0x5476
   3d364:	movt	r2, #39098	; 0x98ba
   3d368:	movt	r3, #4146	; 0x1032
   3d36c:	str	r2, [r0, #8]
   3d370:	str	r3, [r0, #12]
   3d374:	movw	r2, #57840	; 0xe1f0
   3d378:	mov	r3, #0
   3d37c:	movt	r2, #50130	; 0xc3d2
   3d380:	str	r3, [r0, #24]
   3d384:	str	r2, [r0, #16]
   3d388:	str	r3, [r0, #20]
   3d38c:	str	r3, [r0, #28]
   3d390:	bx	lr
   3d394:	ldr	r2, [r0]
   3d398:	mov	r3, r0
   3d39c:	mov	r0, r1
   3d3a0:	rev	r2, r2
   3d3a4:	str	r2, [r1]
   3d3a8:	ldr	r2, [r3, #4]
   3d3ac:	rev	r2, r2
   3d3b0:	str	r2, [r1, #4]
   3d3b4:	ldr	r2, [r3, #8]
   3d3b8:	rev	r2, r2
   3d3bc:	str	r2, [r1, #8]
   3d3c0:	ldr	r2, [r3, #12]
   3d3c4:	rev	r2, r2
   3d3c8:	str	r2, [r1, #12]
   3d3cc:	ldr	r3, [r3, #16]
   3d3d0:	rev	r3, r3
   3d3d4:	str	r3, [r1, #16]
   3d3d8:	bx	lr
   3d3dc:	ldr	ip, [pc, #164]	; 3d488 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x295fc>
   3d3e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d3e4:	sub	sp, sp, #180	; 0xb4
   3d3e8:	ldr	r4, [pc, #156]	; 3d48c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29600>
   3d3ec:	add	ip, pc, ip
   3d3f0:	str	r2, [sp, #76]	; 0x4c
   3d3f4:	bic	r6, r1, #3
   3d3f8:	ldr	r5, [r2, #24]
   3d3fc:	add	r6, r0, r6
   3d400:	ldr	r3, [r2, #20]
   3d404:	mov	r2, ip
   3d408:	str	r0, [sp, #84]	; 0x54
   3d40c:	ldr	r4, [ip, r4]
   3d410:	add	r3, r1, r3
   3d414:	ldr	r2, [sp, #76]	; 0x4c
   3d418:	cmp	r1, r3
   3d41c:	movls	r1, r5
   3d420:	addhi	r1, r5, #1
   3d424:	str	r6, [sp, #92]	; 0x5c
   3d428:	cmp	r0, r6
   3d42c:	str	r4, [sp, #100]	; 0x64
   3d430:	str	r1, [r2, #24]
   3d434:	ldr	r2, [r4]
   3d438:	ldr	r4, [sp, #76]	; 0x4c
   3d43c:	str	r2, [sp, #172]	; 0xac
   3d440:	ldr	r5, [r4]
   3d444:	ldr	r6, [r4, #4]
   3d448:	ldr	r7, [r4, #8]
   3d44c:	ldr	r8, [r4, #12]
   3d450:	ldr	r9, [r4, #16]
   3d454:	str	r3, [r4, #20]
   3d458:	str	r5, [sp, #68]	; 0x44
   3d45c:	str	r6, [sp, #80]	; 0x50
   3d460:	str	r7, [sp, #64]	; 0x40
   3d464:	str	r8, [sp, #72]	; 0x48
   3d468:	str	r9, [sp, #88]	; 0x58
   3d46c:	bcs	3eba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad18>
   3d470:	add	sl, sp, #108	; 0x6c
   3d474:	str	sl, [sp, #96]	; 0x60
   3d478:	ldr	r1, [sp, #84]	; 0x54
   3d47c:	add	r0, sp, #108	; 0x6c
   3d480:	mov	r3, #0
   3d484:	b	3d490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29604>
   3d488:	andeq	r1, r6, ip, lsl #24
   3d48c:	muleq	r0, r0, r3
   3d490:	ldr	r2, [r1, r3]
   3d494:	rev	r2, r2
   3d498:	str	r2, [r0, r3]
   3d49c:	add	r3, r3, #4
   3d4a0:	cmp	r3, #64	; 0x40
   3d4a4:	bne	3d490 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29604>
   3d4a8:	ldr	r0, [sp, #80]	; 0x50
   3d4ac:	movw	r4, #31129	; 0x7999
   3d4b0:	ldr	ip, [sp, #64]	; 0x40
   3d4b4:	movt	r4, #23170	; 0x5a82
   3d4b8:	ldr	r7, [sp, #108]	; 0x6c
   3d4bc:	movw	r5, #31129	; 0x7999
   3d4c0:	ldr	fp, [sp, #72]	; 0x48
   3d4c4:	ror	r1, r0, #2
   3d4c8:	ldr	r6, [sp, #68]	; 0x44
   3d4cc:	add	r4, r7, r4
   3d4d0:	ldr	r2, [sp, #88]	; 0x58
   3d4d4:	eor	r3, fp, ip
   3d4d8:	ldr	r8, [sp, #72]	; 0x48
   3d4dc:	and	r3, r3, r0
   3d4e0:	ldr	fp, [sp, #112]	; 0x70
   3d4e4:	eor	r0, r1, ip
   3d4e8:	add	r4, r4, r2
   3d4ec:	eor	r3, r3, r8
   3d4f0:	ror	r2, r6, #2
   3d4f4:	ldr	r9, [sp, #116]	; 0x74
   3d4f8:	add	r4, r4, r6, ror #27
   3d4fc:	and	r0, r0, r6
   3d500:	movt	r5, #23170	; 0x5a82
   3d504:	add	r4, r4, r3
   3d508:	eor	r0, r0, ip
   3d50c:	ldr	sl, [sp, #64]	; 0x40
   3d510:	eor	ip, r2, r1
   3d514:	add	r5, fp, r5
   3d518:	movw	r3, #31129	; 0x7999
   3d51c:	movt	r3, #23170	; 0x5a82
   3d520:	add	r5, r5, r8
   3d524:	and	ip, r4, ip
   3d528:	add	r3, r9, r3
   3d52c:	eor	ip, ip, r1
   3d530:	add	r5, r5, r0
   3d534:	add	r3, r3, sl
   3d538:	add	r5, r5, r4, ror #27
   3d53c:	add	r3, r3, ip
   3d540:	ror	r4, r4, #2
   3d544:	ldr	ip, [sp, #120]	; 0x78
   3d548:	eor	r6, r4, r2
   3d54c:	movw	r0, #31129	; 0x7999
   3d550:	movt	r0, #23170	; 0x5a82
   3d554:	and	r6, r6, r5
   3d558:	add	r0, ip, r0
   3d55c:	eor	r6, r6, r2
   3d560:	add	r1, r0, r1
   3d564:	ror	ip, r5, #2
   3d568:	add	r1, r1, r6
   3d56c:	ldr	r6, [sp, #124]	; 0x7c
   3d570:	add	r3, r3, r5, ror #27
   3d574:	movw	r0, #31129	; 0x7999
   3d578:	eor	r5, ip, r4
   3d57c:	movt	r0, #23170	; 0x5a82
   3d580:	add	r0, r6, r0
   3d584:	and	r5, r5, r3
   3d588:	add	r1, r1, r3, ror #27
   3d58c:	add	r2, r0, r2
   3d590:	ror	r3, r3, #2
   3d594:	ldr	r8, [sp, #128]	; 0x80
   3d598:	eor	r5, r5, r4
   3d59c:	movw	r0, #31129	; 0x7999
   3d5a0:	add	r5, r2, r5
   3d5a4:	movt	r0, #23170	; 0x5a82
   3d5a8:	eor	r2, r3, ip
   3d5ac:	add	r5, r5, r1, ror #27
   3d5b0:	ldr	r9, [sp, #132]	; 0x84
   3d5b4:	add	r0, r8, r0
   3d5b8:	and	r2, r2, r1
   3d5bc:	ror	r1, r1, #2
   3d5c0:	eor	r2, r2, ip
   3d5c4:	eor	r6, r1, r3
   3d5c8:	add	r0, r0, r4
   3d5cc:	movw	r4, #31129	; 0x7999
   3d5d0:	movt	r4, #23170	; 0x5a82
   3d5d4:	ldr	sl, [sp, #136]	; 0x88
   3d5d8:	add	r4, r9, r4
   3d5dc:	add	r0, r0, r2
   3d5e0:	and	r6, r6, r5
   3d5e4:	ror	r2, r5, #2
   3d5e8:	add	r0, r0, r5, ror #27
   3d5ec:	eor	r6, r6, r3
   3d5f0:	add	r5, r4, ip
   3d5f4:	eor	r4, r2, r1
   3d5f8:	movw	ip, #31129	; 0x7999
   3d5fc:	movt	ip, #23170	; 0x5a82
   3d600:	add	ip, sl, ip
   3d604:	add	r5, r5, r6
   3d608:	and	r4, r4, r0
   3d60c:	add	r5, r5, r0, ror #27
   3d610:	add	r3, ip, r3
   3d614:	ror	r0, r0, #2
   3d618:	ldr	r6, [sp, #140]	; 0x8c
   3d61c:	eor	r4, r4, r1
   3d620:	add	r4, r3, r4
   3d624:	movw	ip, #31129	; 0x7999
   3d628:	eor	r3, r0, r2
   3d62c:	movt	ip, #23170	; 0x5a82
   3d630:	add	r4, r4, r5, ror #27
   3d634:	add	ip, r6, ip
   3d638:	ldr	r8, [sp, #144]	; 0x90
   3d63c:	and	r3, r3, r5
   3d640:	ror	r5, r5, #2
   3d644:	add	r1, ip, r1
   3d648:	eor	r6, r5, r0
   3d64c:	eor	r3, r3, r2
   3d650:	movw	ip, #31129	; 0x7999
   3d654:	movt	ip, #23170	; 0x5a82
   3d658:	add	ip, r8, ip
   3d65c:	ldr	r9, [sp, #148]	; 0x94
   3d660:	add	r3, r1, r3
   3d664:	and	r6, r6, r4
   3d668:	ror	r1, r4, #2
   3d66c:	add	r3, r3, r4, ror #27
   3d670:	eor	r6, r6, r0
   3d674:	eor	r4, r1, r5
   3d678:	add	r2, ip, r2
   3d67c:	movw	ip, #31129	; 0x7999
   3d680:	movt	ip, #23170	; 0x5a82
   3d684:	add	r2, r2, r6
   3d688:	add	ip, r9, ip
   3d68c:	and	r4, r4, r3
   3d690:	add	r2, r2, r3, ror #27
   3d694:	eor	r4, r4, r5
   3d698:	ror	r3, r3, #2
   3d69c:	ldr	sl, [sp, #152]	; 0x98
   3d6a0:	add	ip, ip, r0
   3d6a4:	movw	r6, #31129	; 0x7999
   3d6a8:	add	ip, ip, r4
   3d6ac:	movt	r6, #23170	; 0x5a82
   3d6b0:	eor	r4, r3, r1
   3d6b4:	add	r6, sl, r6
   3d6b8:	and	r4, r4, r2
   3d6bc:	add	r5, r6, r5
   3d6c0:	eor	r4, r4, r1
   3d6c4:	add	ip, ip, r2, ror #27
   3d6c8:	add	r4, r5, r4
   3d6cc:	ror	r2, r2, #2
   3d6d0:	ldr	r5, [sp, #156]	; 0x9c
   3d6d4:	eor	r6, r2, r3
   3d6d8:	movw	r0, #31129	; 0x7999
   3d6dc:	movt	r0, #23170	; 0x5a82
   3d6e0:	add	r0, r5, r0
   3d6e4:	and	r6, r6, ip
   3d6e8:	ror	r5, ip, #2
   3d6ec:	add	r4, r4, ip, ror #27
   3d6f0:	eor	r6, r6, r3
   3d6f4:	add	ip, r0, r1
   3d6f8:	add	ip, ip, r6
   3d6fc:	ldr	r6, [sp, #160]	; 0xa0
   3d700:	eor	r0, r5, r2
   3d704:	movw	r1, #31129	; 0x7999
   3d708:	movt	r1, #23170	; 0x5a82
   3d70c:	ldr	r8, [sp, #116]	; 0x74
   3d710:	add	r1, r6, r1
   3d714:	and	r0, r0, r4
   3d718:	add	r1, r1, r3
   3d71c:	eor	r0, r0, r2
   3d720:	ldr	r9, [sp, #140]	; 0x8c
   3d724:	add	ip, ip, r4, ror #27
   3d728:	ldr	sl, [sp, #164]	; 0xa4
   3d72c:	ror	r4, r4, #2
   3d730:	eor	r3, r8, r7
   3d734:	add	r6, r1, r0
   3d738:	movw	r0, #31129	; 0x7999
   3d73c:	movt	r0, #23170	; 0x5a82
   3d740:	eor	r1, r4, r5
   3d744:	eor	r3, r3, r9
   3d748:	add	r0, sl, r0
   3d74c:	ldr	r9, [sp, #120]	; 0x78
   3d750:	ldr	sl, [sp, #168]	; 0xa8
   3d754:	and	r1, r1, ip
   3d758:	ldr	r7, [sp, #160]	; 0xa0
   3d75c:	movw	r8, #31129	; 0x7999
   3d760:	movt	r8, #23170	; 0x5a82
   3d764:	add	r6, r6, ip, ror #27
   3d768:	add	r0, r0, r2
   3d76c:	ror	ip, ip, #2
   3d770:	eor	r1, r1, r5
   3d774:	eor	fp, r9, fp
   3d778:	add	r8, sl, r8
   3d77c:	ldr	r9, [sp, #124]	; 0x7c
   3d780:	ldr	sl, [sp, #116]	; 0x74
   3d784:	eor	r2, ip, r4
   3d788:	eor	r3, r3, r7
   3d78c:	add	r1, r0, r1
   3d790:	ldr	r7, [sp, #144]	; 0x90
   3d794:	ror	r0, r6, #2
   3d798:	add	r1, r1, r6, ror #27
   3d79c:	and	r2, r2, r6
   3d7a0:	eor	r6, r9, sl
   3d7a4:	ldr	r9, [sp, #164]	; 0xa4
   3d7a8:	ror	r3, r3, #31
   3d7ac:	ldr	sl, [sp, #148]	; 0x94
   3d7b0:	eor	fp, fp, r7
   3d7b4:	movw	r7, #31129	; 0x7999
   3d7b8:	movt	r7, #23170	; 0x5a82
   3d7bc:	add	r8, r8, r5
   3d7c0:	add	r7, r3, r7
   3d7c4:	eor	r2, r2, r4
   3d7c8:	eor	fp, fp, r9
   3d7cc:	ldr	r9, [sp, #168]	; 0xa8
   3d7d0:	add	r4, r7, r4
   3d7d4:	add	r2, r8, r2
   3d7d8:	ldr	r7, [sp, #128]	; 0x80
   3d7dc:	eor	r6, r6, sl
   3d7e0:	ldr	r8, [sp, #120]	; 0x78
   3d7e4:	eor	r6, r6, r9
   3d7e8:	str	r6, [sp, #4]
   3d7ec:	eor	r5, r0, ip
   3d7f0:	ldr	r6, [sp, #152]	; 0x98
   3d7f4:	eor	sl, r7, r8
   3d7f8:	ldr	r7, [sp, #132]	; 0x84
   3d7fc:	and	r5, r5, r1
   3d800:	eor	sl, sl, r6
   3d804:	ldr	r6, [sp, #124]	; 0x7c
   3d808:	add	r2, r2, r1, ror #27
   3d80c:	eor	sl, sl, r3
   3d810:	ror	r1, r1, #2
   3d814:	str	sl, [sp, #8]
   3d818:	eor	r9, r7, r6
   3d81c:	ldr	sl, [sp, #156]	; 0x9c
   3d820:	ldr	r7, [sp, #4]
   3d824:	eor	r5, r5, ip
   3d828:	ror	fp, fp, #31
   3d82c:	add	r5, r4, r5
   3d830:	movw	r8, #31129	; 0x7999
   3d834:	eor	r4, r1, r0
   3d838:	movt	r8, #23170	; 0x5a82
   3d83c:	and	r4, r4, r2
   3d840:	add	r8, fp, r8
   3d844:	eor	r9, r9, sl
   3d848:	ldr	r6, [sp, #136]	; 0x88
   3d84c:	eor	r4, r4, r0
   3d850:	ldr	sl, [sp, #128]	; 0x80
   3d854:	ror	r7, r7, #31
   3d858:	add	r8, r8, ip
   3d85c:	str	r7, [sp, #12]
   3d860:	add	r5, r5, r2, ror #27
   3d864:	add	r8, r8, r4
   3d868:	ror	r2, r2, #2
   3d86c:	ldr	r4, [sp, #12]
   3d870:	eor	r6, r6, sl
   3d874:	str	r6, [sp, #16]
   3d878:	ldr	r6, [sp, #8]
   3d87c:	eor	r7, r2, r1
   3d880:	movw	ip, #31129	; 0x7999
   3d884:	movt	ip, #23170	; 0x5a82
   3d888:	add	ip, r4, ip
   3d88c:	and	r7, r7, r5
   3d890:	eor	r7, r7, r1
   3d894:	ror	r6, r6, #31
   3d898:	add	r0, ip, r0
   3d89c:	str	r6, [sp, #28]
   3d8a0:	eor	r9, r9, fp
   3d8a4:	ldr	ip, [sp, #160]	; 0xa0
   3d8a8:	str	r9, [sp, #4]
   3d8ac:	add	r0, r0, r7
   3d8b0:	ldr	r9, [sp, #16]
   3d8b4:	movw	sl, #31129	; 0x7999
   3d8b8:	ldr	r7, [sp, #28]
   3d8bc:	movt	sl, #23170	; 0x5a82
   3d8c0:	eor	r6, r9, ip
   3d8c4:	ldr	r9, [sp, #140]	; 0x8c
   3d8c8:	add	sl, r7, sl
   3d8cc:	ldr	r7, [sp, #132]	; 0x84
   3d8d0:	ror	r4, r5, #2
   3d8d4:	add	r5, r8, r5, ror #27
   3d8d8:	eor	ip, r9, r7
   3d8dc:	eor	r8, r4, r2
   3d8e0:	ldr	r9, [sp, #4]
   3d8e4:	and	r8, r8, r5
   3d8e8:	ldr	r7, [sp, #12]
   3d8ec:	eor	r8, r8, r2
   3d8f0:	add	r1, sl, r1
   3d8f4:	eor	r6, r6, r7
   3d8f8:	ror	r9, r9, #31
   3d8fc:	str	r6, [sp, #4]
   3d900:	add	r1, r1, r8
   3d904:	str	r9, [sp, #32]
   3d908:	add	r7, r0, r5, ror #27
   3d90c:	ldr	r9, [sp, #164]	; 0xa4
   3d910:	ror	r5, r5, #2
   3d914:	ldr	r6, [sp, #144]	; 0x90
   3d918:	movw	r0, #60321	; 0xeba1
   3d91c:	ldr	r8, [sp, #136]	; 0x88
   3d920:	eor	ip, ip, r9
   3d924:	ldr	sl, [sp, #32]
   3d928:	movt	r0, #28377	; 0x6ed9
   3d92c:	eor	r9, r6, r8
   3d930:	ldr	r6, [sp, #28]
   3d934:	add	r0, sl, r0
   3d938:	ldr	r8, [sp, #4]
   3d93c:	eor	sl, r5, r4
   3d940:	eor	ip, ip, r6
   3d944:	str	ip, [sp, #8]
   3d948:	eor	sl, sl, r7
   3d94c:	ldr	ip, [sp, #168]	; 0xa8
   3d950:	add	r2, r0, r2
   3d954:	add	r2, r2, sl
   3d958:	ldr	sl, [sp, #148]	; 0x94
   3d95c:	eor	r9, r9, ip
   3d960:	ldr	ip, [sp, #140]	; 0x8c
   3d964:	ror	r8, r8, #31
   3d968:	movw	r6, #60321	; 0xeba1
   3d96c:	movt	r6, #28377	; 0x6ed9
   3d970:	add	r1, r1, r7, ror #27
   3d974:	add	r6, r8, r6
   3d978:	ror	r7, r7, #2
   3d97c:	str	r8, [sp, #36]	; 0x24
   3d980:	eor	r8, sl, ip
   3d984:	ldr	sl, [sp, #8]
   3d988:	eor	r0, r7, r5
   3d98c:	add	r4, r6, r4
   3d990:	eor	r0, r0, r1
   3d994:	add	r0, r4, r0
   3d998:	eor	r8, r8, r3
   3d99c:	ror	sl, sl, #31
   3d9a0:	str	sl, [sp, #16]
   3d9a4:	ldr	ip, [sp, #32]
   3d9a8:	add	sl, r2, r1, ror #27
   3d9ac:	ldr	r4, [sp, #16]
   3d9b0:	movw	r2, #60321	; 0xeba1
   3d9b4:	movt	r2, #28377	; 0x6ed9
   3d9b8:	eor	r9, r9, ip
   3d9bc:	add	r2, r4, r2
   3d9c0:	str	r9, [sp, #4]
   3d9c4:	ldr	r4, [sp, #144]	; 0x90
   3d9c8:	ror	r1, r1, #2
   3d9cc:	ldr	r9, [sp, #152]	; 0x98
   3d9d0:	eor	r6, r1, r7
   3d9d4:	eor	r6, r6, sl
   3d9d8:	add	r5, r2, r5
   3d9dc:	eor	ip, r9, r4
   3d9e0:	ldr	r4, [sp, #4]
   3d9e4:	ldr	r9, [sp, #36]	; 0x24
   3d9e8:	add	r5, r5, r6
   3d9ec:	ldr	r6, [sp, #156]	; 0x9c
   3d9f0:	add	r0, r0, sl, ror #27
   3d9f4:	eor	r8, r8, r9
   3d9f8:	str	r8, [sp, #8]
   3d9fc:	ldr	r8, [sp, #148]	; 0x94
   3da00:	ror	r4, r4, #31
   3da04:	movw	r9, #60321	; 0xeba1
   3da08:	movt	r9, #28377	; 0x6ed9
   3da0c:	str	r4, [sp, #20]
   3da10:	add	r9, r4, r9
   3da14:	eor	r4, r6, r8
   3da18:	ldr	r8, [sp, #8]
   3da1c:	ldr	r6, [sp, #16]
   3da20:	ror	sl, sl, #2
   3da24:	eor	ip, ip, fp
   3da28:	eor	r2, sl, r1
   3da2c:	ror	r8, r8, #31
   3da30:	str	r8, [sp, #24]
   3da34:	eor	ip, ip, r6
   3da38:	str	ip, [sp, #4]
   3da3c:	ldr	ip, [sp, #24]
   3da40:	add	r7, r9, r7
   3da44:	eor	r2, r2, r0
   3da48:	movw	r8, #60321	; 0xeba1
   3da4c:	movt	r8, #28377	; 0x6ed9
   3da50:	add	r2, r7, r2
   3da54:	add	r8, ip, r8
   3da58:	ldr	r7, [sp, #160]	; 0xa0
   3da5c:	ldr	ip, [sp, #152]	; 0x98
   3da60:	add	r5, r5, r0, ror #27
   3da64:	ldr	r9, [sp, #12]
   3da68:	ror	r0, r0, #2
   3da6c:	eor	r6, r7, ip
   3da70:	ldr	ip, [sp, #20]
   3da74:	eor	r4, r4, r9
   3da78:	ldr	r7, [sp, #4]
   3da7c:	eor	r9, r0, sl
   3da80:	eor	r4, r4, ip
   3da84:	str	r4, [sp, #4]
   3da88:	eor	r9, r9, r5
   3da8c:	ldr	r4, [sp, #28]
   3da90:	add	r1, r8, r1
   3da94:	add	r1, r1, r9
   3da98:	ldr	r9, [sp, #164]	; 0xa4
   3da9c:	eor	r6, r6, r4
   3daa0:	ldr	r4, [sp, #156]	; 0x9c
   3daa4:	ror	r7, r7, #31
   3daa8:	str	r7, [sp, #44]	; 0x2c
   3daac:	ldr	r8, [sp, #44]	; 0x2c
   3dab0:	eor	ip, r9, r4
   3dab4:	ldr	r4, [sp, #4]
   3dab8:	add	r7, r2, r5, ror #27
   3dabc:	ror	r5, r5, #2
   3dac0:	movw	r2, #60321	; 0xeba1
   3dac4:	movt	r2, #28377	; 0x6ed9
   3dac8:	ldr	r9, [sp, #24]
   3dacc:	add	r2, r8, r2
   3dad0:	eor	r8, r5, r0
   3dad4:	add	sl, r2, sl
   3dad8:	ror	r4, r4, #31
   3dadc:	eor	r8, r8, r7
   3dae0:	str	r4, [sp, #48]	; 0x30
   3dae4:	eor	r6, r6, r9
   3dae8:	add	r8, sl, r8
   3daec:	ldr	r9, [sp, #32]
   3daf0:	add	r1, r1, r7, ror #27
   3daf4:	ldr	sl, [sp, #48]	; 0x30
   3daf8:	ror	r7, r7, #2
   3dafc:	movw	r4, #60321	; 0xeba1
   3db00:	movt	r4, #28377	; 0x6ed9
   3db04:	add	r4, sl, r4
   3db08:	eor	ip, ip, r9
   3db0c:	eor	r9, r7, r5
   3db10:	ldr	r2, [sp, #44]	; 0x2c
   3db14:	eor	r9, r9, r1
   3db18:	ror	r6, r6, #31
   3db1c:	add	r0, r4, r0
   3db20:	str	r6, [sp, #52]	; 0x34
   3db24:	ldr	r6, [sp, #168]	; 0xa8
   3db28:	add	r0, r0, r9
   3db2c:	ldr	sl, [sp, #160]	; 0xa0
   3db30:	eor	ip, ip, r2
   3db34:	ldr	r9, [sp, #52]	; 0x34
   3db38:	add	r8, r8, r1, ror #27
   3db3c:	eor	r2, r6, sl
   3db40:	ldr	r4, [sp, #36]	; 0x24
   3db44:	movw	r6, #60321	; 0xeba1
   3db48:	movt	r6, #28377	; 0x6ed9
   3db4c:	ror	r1, r1, #2
   3db50:	add	r6, r9, r6
   3db54:	ldr	r9, [sp, #48]	; 0x30
   3db58:	eor	sl, r1, r7
   3db5c:	eor	r2, r2, r4
   3db60:	ror	ip, ip, #31
   3db64:	ldr	r4, [sp, #164]	; 0xa4
   3db68:	eor	sl, sl, r8
   3db6c:	str	ip, [sp, #4]
   3db70:	eor	r2, r2, r9
   3db74:	add	r5, r6, r5
   3db78:	ldr	r9, [sp, #4]
   3db7c:	ldr	r6, [sp, #16]
   3db80:	add	r0, r0, r8, ror #27
   3db84:	eor	ip, r3, r4
   3db88:	ror	r8, r8, #2
   3db8c:	add	r5, r5, sl
   3db90:	movw	r4, #60321	; 0xeba1
   3db94:	ldr	sl, [sp, #52]	; 0x34
   3db98:	movt	r4, #28377	; 0x6ed9
   3db9c:	add	r4, r9, r4
   3dba0:	eor	ip, ip, r6
   3dba4:	eor	r9, r8, r1
   3dba8:	ldr	r6, [sp, #168]	; 0xa8
   3dbac:	eor	r9, r9, r0
   3dbb0:	eor	ip, ip, sl
   3dbb4:	ror	r2, r2, #31
   3dbb8:	ldr	sl, [sp, #20]
   3dbbc:	str	r2, [sp, #8]
   3dbc0:	add	r7, r4, r7
   3dbc4:	eor	r2, fp, r6
   3dbc8:	ldr	r4, [sp, #8]
   3dbcc:	add	r7, r7, r9
   3dbd0:	ldr	r9, [sp, #4]
   3dbd4:	eor	r2, r2, sl
   3dbd8:	movw	r6, #60321	; 0xeba1
   3dbdc:	movt	r6, #28377	; 0x6ed9
   3dbe0:	add	r5, r5, r0, ror #27
   3dbe4:	add	r6, r4, r6
   3dbe8:	ror	r0, r0, #2
   3dbec:	ror	ip, ip, #31
   3dbf0:	eor	r2, r2, r9
   3dbf4:	str	ip, [sp, #40]	; 0x28
   3dbf8:	eor	sl, r0, r8
   3dbfc:	ldr	ip, [sp, #12]
   3dc00:	add	r1, r6, r1
   3dc04:	ldr	r4, [sp, #24]
   3dc08:	add	r7, r7, r5, ror #27
   3dc0c:	ldr	r6, [sp, #40]	; 0x28
   3dc10:	eor	sl, sl, r5
   3dc14:	ldr	r9, [sp, #8]
   3dc18:	ror	r5, r5, #2
   3dc1c:	eor	r3, ip, r3
   3dc20:	ror	r2, r2, #31
   3dc24:	movw	ip, #60321	; 0xeba1
   3dc28:	str	r2, [sp, #56]	; 0x38
   3dc2c:	movt	ip, #28377	; 0x6ed9
   3dc30:	eor	r3, r3, r4
   3dc34:	add	ip, r6, ip
   3dc38:	eor	r4, r5, r0
   3dc3c:	ldr	r6, [sp, #56]	; 0x38
   3dc40:	add	r1, r1, sl
   3dc44:	ldr	sl, [sp, #28]
   3dc48:	add	r1, r1, r7, ror #27
   3dc4c:	eor	r3, r3, r9
   3dc50:	eor	r4, r4, r7
   3dc54:	movw	r2, #60321	; 0xeba1
   3dc58:	ror	r7, r7, #2
   3dc5c:	movt	r2, #28377	; 0x6ed9
   3dc60:	ldr	r9, [sp, #32]
   3dc64:	add	r2, r6, r2
   3dc68:	eor	fp, sl, fp
   3dc6c:	eor	r6, r7, r5
   3dc70:	ldr	sl, [sp, #12]
   3dc74:	add	r8, ip, r8
   3dc78:	eor	r6, r6, r1
   3dc7c:	ldr	ip, [sp, #44]	; 0x2c
   3dc80:	ror	r3, r3, #31
   3dc84:	add	r0, r2, r0
   3dc88:	str	r3, [sp, #60]	; 0x3c
   3dc8c:	ldr	r2, [sp, #48]	; 0x30
   3dc90:	eor	r3, r9, sl
   3dc94:	add	r4, r8, r4
   3dc98:	ldr	r9, [sp, #56]	; 0x38
   3dc9c:	ldr	r8, [sp, #40]	; 0x28
   3dca0:	add	r0, r0, r6
   3dca4:	ldr	r6, [sp, #60]	; 0x3c
   3dca8:	eor	fp, fp, ip
   3dcac:	eor	r3, r3, r2
   3dcb0:	movw	ip, #60321	; 0xeba1
   3dcb4:	movt	ip, #28377	; 0x6ed9
   3dcb8:	add	r4, r4, r1, ror #27
   3dcbc:	add	ip, r6, ip
   3dcc0:	ror	r1, r1, #2
   3dcc4:	ldr	r2, [sp, #36]	; 0x24
   3dcc8:	eor	fp, fp, r8
   3dccc:	ldr	r6, [sp, #28]
   3dcd0:	eor	r3, r3, r9
   3dcd4:	eor	r8, r1, r7
   3dcd8:	ldr	r9, [sp, #52]	; 0x34
   3dcdc:	ror	fp, fp, #31
   3dce0:	eor	sl, r2, r6
   3dce4:	eor	r8, r8, r4
   3dce8:	add	r5, ip, r5
   3dcec:	ror	r3, r3, #31
   3dcf0:	movw	r2, #60321	; 0xeba1
   3dcf4:	str	r3, [sp, #12]
   3dcf8:	movt	r2, #28377	; 0x6ed9
   3dcfc:	ldr	ip, [sp, #60]	; 0x3c
   3dd00:	add	r0, r0, r4, ror #27
   3dd04:	ldr	r3, [sp, #16]
   3dd08:	ror	r4, r4, #2
   3dd0c:	add	r2, fp, r2
   3dd10:	eor	sl, sl, r9
   3dd14:	add	r5, r5, r8
   3dd18:	ldr	r8, [sp, #32]
   3dd1c:	eor	r6, r4, r1
   3dd20:	eor	sl, sl, ip
   3dd24:	add	r7, r2, r7
   3dd28:	ldr	ip, [sp, #4]
   3dd2c:	ldr	r2, [sp, #12]
   3dd30:	add	r5, r5, r0, ror #27
   3dd34:	eor	r9, r3, r8
   3dd38:	eor	r6, r6, r0
   3dd3c:	movw	r3, #60321	; 0xeba1
   3dd40:	ror	r0, r0, #2
   3dd44:	movt	r3, #28377	; 0x6ed9
   3dd48:	eor	r9, r9, ip
   3dd4c:	add	r3, r2, r3
   3dd50:	eor	ip, r0, r4
   3dd54:	ldr	r8, [sp, #36]	; 0x24
   3dd58:	eor	ip, ip, r5
   3dd5c:	add	r7, r7, r6
   3dd60:	ror	sl, sl, #31
   3dd64:	ldr	r6, [sp, #20]
   3dd68:	add	r1, r3, r1
   3dd6c:	str	sl, [sp, #28]
   3dd70:	add	r1, r1, ip
   3dd74:	ldr	ip, [sp, #28]
   3dd78:	add	r7, r7, r5, ror #27
   3dd7c:	eor	r2, r6, r8
   3dd80:	ror	r5, r5, #2
   3dd84:	eor	r9, r9, fp
   3dd88:	movw	r6, #60321	; 0xeba1
   3dd8c:	movt	r6, #28377	; 0x6ed9
   3dd90:	ldr	sl, [sp, #8]
   3dd94:	add	r6, ip, r6
   3dd98:	eor	r8, r5, r0
   3dd9c:	ldr	r3, [sp, #12]
   3dda0:	eor	r8, r8, r7
   3dda4:	ror	r9, r9, #31
   3dda8:	add	r4, r6, r4
   3ddac:	str	r9, [sp, #32]
   3ddb0:	eor	r2, r2, sl
   3ddb4:	ldr	r9, [sp, #24]
   3ddb8:	add	r4, r4, r8
   3ddbc:	ldr	sl, [sp, #16]
   3ddc0:	add	r1, r1, r7, ror #27
   3ddc4:	ldr	r8, [sp, #32]
   3ddc8:	ror	r7, r7, #2
   3ddcc:	ldr	r6, [sp, #40]	; 0x28
   3ddd0:	eor	r2, r2, r3
   3ddd4:	movw	ip, #60321	; 0xeba1
   3ddd8:	movt	ip, #28377	; 0x6ed9
   3dddc:	eor	r3, r9, sl
   3dde0:	add	ip, r8, ip
   3dde4:	eor	sl, r7, r5
   3dde8:	ldr	r9, [sp, #28]
   3ddec:	eor	sl, sl, r1
   3ddf0:	eor	r3, r3, r6
   3ddf4:	ror	r2, r2, #31
   3ddf8:	ldr	r6, [sp, #20]
   3ddfc:	str	r2, [sp, #36]	; 0x24
   3de00:	add	r0, ip, r0
   3de04:	ldr	r2, [sp, #44]	; 0x2c
   3de08:	eor	r3, r3, r9
   3de0c:	ldr	r8, [sp, #56]	; 0x38
   3de10:	add	r0, r0, sl
   3de14:	ldr	sl, [sp, #36]	; 0x24
   3de18:	eor	r9, r2, r6
   3de1c:	ldr	ip, [sp, #32]
   3de20:	movw	r2, #60321	; 0xeba1
   3de24:	movt	r2, #28377	; 0x6ed9
   3de28:	eor	r9, r9, r8
   3de2c:	add	r2, sl, r2
   3de30:	ror	r3, r3, #31
   3de34:	str	r3, [sp, #16]
   3de38:	eor	r9, r9, ip
   3de3c:	ldr	sl, [sp, #24]
   3de40:	add	r5, r2, r5
   3de44:	ldr	ip, [sp, #16]
   3de48:	movw	r3, #60321	; 0xeba1
   3de4c:	ldr	r2, [sp, #48]	; 0x30
   3de50:	movt	r3, #28377	; 0x6ed9
   3de54:	add	r4, r4, r1, ror #27
   3de58:	add	r3, ip, r3
   3de5c:	ror	r1, r1, #2
   3de60:	eor	r8, r2, sl
   3de64:	ldr	r2, [sp, #60]	; 0x3c
   3de68:	eor	r6, r1, r7
   3de6c:	add	r7, r3, r7
   3de70:	ldr	r3, [sp, #36]	; 0x24
   3de74:	add	r0, r0, r4, ror #27
   3de78:	eor	r6, r6, r4
   3de7c:	ror	r9, r9, #31
   3de80:	ror	r4, r4, #2
   3de84:	str	r9, [sp, #20]
   3de88:	eor	r8, r8, r2
   3de8c:	eor	ip, r4, r1
   3de90:	ldr	r9, [sp, #52]	; 0x34
   3de94:	ldr	sl, [sp, #44]	; 0x2c
   3de98:	add	r5, r5, r6
   3de9c:	eor	r8, r8, r3
   3dea0:	ldr	r3, [sp, #20]
   3dea4:	add	r5, r5, r0, ror #27
   3dea8:	eor	ip, ip, r0
   3deac:	movw	r2, #60321	; 0xeba1
   3deb0:	ror	r0, r0, #2
   3deb4:	movt	r2, #28377	; 0x6ed9
   3deb8:	eor	r6, r9, sl
   3debc:	add	r2, r3, r2
   3dec0:	eor	r9, r0, r4
   3dec4:	add	ip, r7, ip
   3dec8:	ror	r8, r8, #31
   3decc:	str	r8, [sp, #24]
   3ded0:	add	r1, r2, r1
   3ded4:	ldr	r7, [sp, #16]
   3ded8:	eor	r2, r9, r5
   3dedc:	eor	r6, r6, fp
   3dee0:	add	r2, r1, r2
   3dee4:	eor	r6, r6, r7
   3dee8:	ldr	r1, [sp, #24]
   3deec:	ldr	r9, [sp, #4]
   3def0:	movw	r7, #48348	; 0xbcdc
   3def4:	ldr	sl, [sp, #48]	; 0x30
   3def8:	movt	r7, #36635	; 0x8f1b
   3defc:	add	r7, r1, r7
   3df00:	ror	r6, r6, #31
   3df04:	str	r6, [sp, #44]	; 0x2c
   3df08:	eor	r8, r9, sl
   3df0c:	ldr	r6, [sp, #12]
   3df10:	add	r4, r7, r4
   3df14:	ldr	r7, [sp, #20]
   3df18:	add	ip, ip, r5, ror #27
   3df1c:	eor	r8, r8, r6
   3df20:	ror	r5, r5, #2
   3df24:	ldr	sl, [sp, #8]
   3df28:	eor	r8, r8, r7
   3df2c:	ldr	r7, [sp, #52]	; 0x34
   3df30:	add	r2, r2, ip, ror #27
   3df34:	orr	r1, ip, r5
   3df38:	ror	r3, ip, #2
   3df3c:	eor	r6, sl, r7
   3df40:	and	ip, ip, r5
   3df44:	ldr	sl, [sp, #44]	; 0x2c
   3df48:	and	r1, r1, r0
   3df4c:	add	r4, r4, r2, ror #27
   3df50:	orr	r1, r1, ip
   3df54:	movw	r9, #48348	; 0xbcdc
   3df58:	ldr	ip, [sp, #28]
   3df5c:	movt	r9, #36635	; 0x8f1b
   3df60:	add	r1, r4, r1
   3df64:	orr	r7, r2, r3
   3df68:	add	r9, sl, r9
   3df6c:	ldr	r4, [sp, #24]
   3df70:	ror	r8, r8, #31
   3df74:	str	r8, [sp, #48]	; 0x30
   3df78:	and	r7, r7, r5
   3df7c:	eor	r6, r6, ip
   3df80:	add	r0, r9, r0
   3df84:	and	ip, r2, r3
   3df88:	ldr	r9, [sp, #48]	; 0x30
   3df8c:	ldr	r8, [sp, #4]
   3df90:	orr	ip, r7, ip
   3df94:	eor	r6, r6, r4
   3df98:	ldr	r7, [sp, #40]	; 0x28
   3df9c:	movw	r4, #48348	; 0xbcdc
   3dfa0:	movt	r4, #36635	; 0x8f1b
   3dfa4:	add	r4, r9, r4
   3dfa8:	ldr	sl, [sp, #32]
   3dfac:	add	r0, r0, ip
   3dfb0:	add	r5, r4, r5
   3dfb4:	eor	ip, r7, r8
   3dfb8:	ldr	r4, [sp, #44]	; 0x2c
   3dfbc:	ror	r2, r2, #2
   3dfc0:	eor	ip, ip, sl
   3dfc4:	orr	r8, r1, r2
   3dfc8:	ldr	sl, [sp, #56]	; 0x38
   3dfcc:	eor	ip, ip, r4
   3dfd0:	ldr	r4, [sp, #8]
   3dfd4:	add	r0, r0, r1, ror #27
   3dfd8:	ror	r7, r1, #2
   3dfdc:	and	r8, r8, r3
   3dfe0:	ror	r6, r6, #31
   3dfe4:	and	r1, r1, r2
   3dfe8:	str	r6, [sp, #4]
   3dfec:	eor	r9, sl, r4
   3dff0:	orr	r1, r8, r1
   3dff4:	ldr	sl, [sp, #36]	; 0x24
   3dff8:	add	r5, r5, r0, ror #27
   3dffc:	ldr	r8, [sp, #4]
   3e000:	orr	r4, r0, r7
   3e004:	ror	ip, ip, #31
   3e008:	movw	r6, #48348	; 0xbcdc
   3e00c:	str	ip, [sp, #8]
   3e010:	movt	r6, #36635	; 0x8f1b
   3e014:	ldr	ip, [sp, #48]	; 0x30
   3e018:	add	r1, r5, r1
   3e01c:	add	r6, r8, r6
   3e020:	and	r5, r0, r7
   3e024:	and	r4, r4, r2
   3e028:	eor	r9, r9, sl
   3e02c:	orr	r4, r4, r5
   3e030:	add	r3, r6, r3
   3e034:	eor	r9, r9, ip
   3e038:	ldr	r5, [sp, #40]	; 0x28
   3e03c:	ldr	r6, [sp, #8]
   3e040:	add	r3, r3, r4
   3e044:	ldr	r4, [sp, #60]	; 0x3c
   3e048:	ror	r9, r9, #31
   3e04c:	movw	r8, #48348	; 0xbcdc
   3e050:	str	r9, [sp, #40]	; 0x28
   3e054:	movt	r8, #36635	; 0x8f1b
   3e058:	ldr	r9, [sp, #16]
   3e05c:	ror	r0, r0, #2
   3e060:	eor	ip, r4, r5
   3e064:	add	r8, r6, r8
   3e068:	ldr	sl, [sp, #4]
   3e06c:	add	r3, r3, r1, ror #27
   3e070:	orr	r6, r1, r0
   3e074:	eor	ip, ip, r9
   3e078:	add	r2, r8, r2
   3e07c:	ldr	r8, [sp, #56]	; 0x38
   3e080:	ror	r4, r1, #2
   3e084:	and	r6, r6, r7
   3e088:	and	r1, r1, r0
   3e08c:	eor	ip, ip, sl
   3e090:	ldr	sl, [sp, #40]	; 0x28
   3e094:	eor	r5, fp, r8
   3e098:	orr	r1, r6, r1
   3e09c:	orr	r8, r3, r4
   3e0a0:	add	r2, r2, r3, ror #27
   3e0a4:	movw	r9, #48348	; 0xbcdc
   3e0a8:	movt	r9, #36635	; 0x8f1b
   3e0ac:	add	r2, r2, r1
   3e0b0:	add	r9, sl, r9
   3e0b4:	and	r8, r8, r0
   3e0b8:	and	r1, r3, r4
   3e0bc:	ldr	r6, [sp, #20]
   3e0c0:	orr	r1, r8, r1
   3e0c4:	add	r7, r9, r7
   3e0c8:	ror	ip, ip, #31
   3e0cc:	add	r7, r7, r1
   3e0d0:	str	ip, [sp, #52]	; 0x34
   3e0d4:	ldr	r8, [sp, #8]
   3e0d8:	eor	r5, r5, r6
   3e0dc:	add	r6, r7, r2, ror #27
   3e0e0:	ldr	r7, [sp, #52]	; 0x34
   3e0e4:	ror	r3, r3, #2
   3e0e8:	ldr	r9, [sp, #12]
   3e0ec:	ldr	ip, [sp, #60]	; 0x3c
   3e0f0:	eor	r5, r5, r8
   3e0f4:	movw	sl, #48348	; 0xbcdc
   3e0f8:	movt	sl, #36635	; 0x8f1b
   3e0fc:	add	sl, r7, sl
   3e100:	orr	r7, r2, r3
   3e104:	eor	r1, r9, ip
   3e108:	ldr	r8, [sp, #24]
   3e10c:	ror	ip, r2, #2
   3e110:	and	r7, r7, r4
   3e114:	ror	r5, r5, #31
   3e118:	and	r2, r2, r3
   3e11c:	str	r5, [sp, #56]	; 0x38
   3e120:	add	r0, sl, r0
   3e124:	ldr	r9, [sp, #40]	; 0x28
   3e128:	orr	r2, r7, r2
   3e12c:	ldr	r7, [sp, #56]	; 0x38
   3e130:	add	r0, r0, r6, ror #27
   3e134:	eor	r1, r1, r8
   3e138:	movw	r5, #48348	; 0xbcdc
   3e13c:	orr	r8, r6, ip
   3e140:	movt	r5, #36635	; 0x8f1b
   3e144:	add	r2, r0, r2
   3e148:	ldr	sl, [sp, #28]
   3e14c:	add	r5, r7, r5
   3e150:	and	r8, r8, r3
   3e154:	and	r0, r6, ip
   3e158:	eor	r1, r1, r9
   3e15c:	orr	r0, r8, r0
   3e160:	ldr	r9, [sp, #44]	; 0x2c
   3e164:	add	r4, r5, r4
   3e168:	eor	fp, sl, fp
   3e16c:	add	r4, r4, r0
   3e170:	ldr	sl, [sp, #52]	; 0x34
   3e174:	ror	r1, r1, #31
   3e178:	str	r1, [sp, #60]	; 0x3c
   3e17c:	add	r5, r4, r2, ror #27
   3e180:	eor	fp, fp, r9
   3e184:	ldr	r4, [sp, #60]	; 0x3c
   3e188:	ror	r6, r6, #2
   3e18c:	ldr	r0, [sp, #32]
   3e190:	eor	fp, fp, sl
   3e194:	ldr	r1, [sp, #12]
   3e198:	movw	r7, #48348	; 0xbcdc
   3e19c:	movt	r7, #36635	; 0x8f1b
   3e1a0:	ldr	r8, [sp, #48]	; 0x30
   3e1a4:	add	r7, r4, r7
   3e1a8:	orr	r4, r2, r6
   3e1ac:	eor	r9, r0, r1
   3e1b0:	and	r4, r4, ip
   3e1b4:	ror	r1, r2, #2
   3e1b8:	ldr	r0, [sp, #28]
   3e1bc:	ldr	sl, [sp, #56]	; 0x38
   3e1c0:	ror	fp, fp, #31
   3e1c4:	and	r2, r2, r6
   3e1c8:	str	fp, [sp, #12]
   3e1cc:	ldr	fp, [sp, #36]	; 0x24
   3e1d0:	orr	r2, r4, r2
   3e1d4:	eor	r9, r9, r8
   3e1d8:	ldr	r4, [sp, #12]
   3e1dc:	add	r3, r7, r3
   3e1e0:	eor	r9, r9, sl
   3e1e4:	add	r3, r3, r5, ror #27
   3e1e8:	eor	sl, fp, r0
   3e1ec:	movw	r8, #48348	; 0xbcdc
   3e1f0:	orr	r0, r5, r1
   3e1f4:	movt	r8, #36635	; 0x8f1b
   3e1f8:	add	r3, r3, r2
   3e1fc:	add	r8, r4, r8
   3e200:	and	r0, r0, r6
   3e204:	ldr	r7, [sp, #4]
   3e208:	and	r2, r5, r1
   3e20c:	orr	r2, r0, r2
   3e210:	add	ip, r8, ip
   3e214:	ror	r9, r9, #31
   3e218:	ldr	r8, [sp, #60]	; 0x3c
   3e21c:	str	r9, [sp, #28]
   3e220:	eor	sl, sl, r7
   3e224:	add	ip, ip, r2
   3e228:	ldr	r2, [sp, #28]
   3e22c:	ror	r5, r5, #2
   3e230:	ldr	r0, [sp, #32]
   3e234:	ldr	fp, [sp, #16]
   3e238:	eor	sl, sl, r8
   3e23c:	movw	r4, #48348	; 0xbcdc
   3e240:	movt	r4, #36635	; 0x8f1b
   3e244:	add	r4, r2, r4
   3e248:	orr	r7, r3, r5
   3e24c:	ldr	r8, [sp, #8]
   3e250:	add	ip, ip, r3, ror #27
   3e254:	eor	r9, fp, r0
   3e258:	and	r7, r7, r1
   3e25c:	ror	r0, r3, #2
   3e260:	ldr	fp, [sp, #20]
   3e264:	ror	sl, sl, #31
   3e268:	add	r6, r4, r6
   3e26c:	str	sl, [sp, #32]
   3e270:	and	r3, r3, r5
   3e274:	ldr	sl, [sp, #12]
   3e278:	orr	r3, r7, r3
   3e27c:	ldr	r4, [sp, #36]	; 0x24
   3e280:	eor	r9, r9, r8
   3e284:	ldr	r7, [sp, #32]
   3e288:	eor	r9, r9, sl
   3e28c:	eor	r2, fp, r4
   3e290:	add	r6, r6, ip, ror #27
   3e294:	orr	r4, ip, r0
   3e298:	movw	r8, #48348	; 0xbcdc
   3e29c:	movt	r8, #36635	; 0x8f1b
   3e2a0:	add	r6, r6, r3
   3e2a4:	add	r8, r7, r8
   3e2a8:	and	r4, r4, r5
   3e2ac:	ldr	sl, [sp, #40]	; 0x28
   3e2b0:	and	r3, ip, r0
   3e2b4:	orr	r3, r4, r3
   3e2b8:	add	r1, r8, r1
   3e2bc:	ror	r9, r9, #31
   3e2c0:	str	r9, [sp, #36]	; 0x24
   3e2c4:	ldr	r4, [sp, #24]
   3e2c8:	ror	ip, ip, #2
   3e2cc:	ldr	r7, [sp, #16]
   3e2d0:	eor	r2, r2, sl
   3e2d4:	ldr	r8, [sp, #36]	; 0x24
   3e2d8:	movw	r9, #48348	; 0xbcdc
   3e2dc:	ldr	sl, [sp, #52]	; 0x34
   3e2e0:	movt	r9, #36635	; 0x8f1b
   3e2e4:	add	r1, r1, r3
   3e2e8:	add	r9, r8, r9
   3e2ec:	eor	r3, r4, r7
   3e2f0:	orr	r4, r6, ip
   3e2f4:	add	r7, r1, r6, ror #27
   3e2f8:	ldr	fp, [sp, #28]
   3e2fc:	ror	r1, r6, #2
   3e300:	eor	r3, r3, sl
   3e304:	and	r6, r6, ip
   3e308:	ldr	sl, [sp, #20]
   3e30c:	add	r5, r9, r5
   3e310:	and	r4, r4, r0
   3e314:	ldr	r9, [sp, #44]	; 0x2c
   3e318:	orr	r4, r4, r6
   3e31c:	ldr	r6, [sp, #56]	; 0x38
   3e320:	add	r5, r5, r7, ror #27
   3e324:	eor	r8, r9, sl
   3e328:	eor	r2, r2, fp
   3e32c:	orr	r9, r7, r1
   3e330:	ldr	fp, [sp, #32]
   3e334:	and	r9, r9, ip
   3e338:	eor	r8, r8, r6
   3e33c:	add	r6, r5, r4
   3e340:	and	r4, r7, r1
   3e344:	orr	r5, r9, r4
   3e348:	ror	r2, r2, #31
   3e34c:	ldr	r9, [sp, #36]	; 0x24
   3e350:	eor	r3, r3, fp
   3e354:	str	r2, [sp, #16]
   3e358:	movw	r2, #48348	; 0xbcdc
   3e35c:	ldr	fp, [sp, #16]
   3e360:	eor	r8, r8, r9
   3e364:	movt	r2, #36635	; 0x8f1b
   3e368:	ldr	sl, [sp, #48]	; 0x30
   3e36c:	add	r2, fp, r2
   3e370:	ror	r3, r3, #31
   3e374:	ldr	fp, [sp, #24]
   3e378:	add	r2, r2, r0
   3e37c:	str	r3, [sp, #20]
   3e380:	ror	r8, r8, #31
   3e384:	ldr	r0, [sp, #20]
   3e388:	ror	r7, r7, #2
   3e38c:	str	r8, [sp, #24]
   3e390:	add	r5, r2, r5
   3e394:	ldr	r8, [sp, #60]	; 0x3c
   3e398:	eor	r2, sl, fp
   3e39c:	ldr	r9, [sp, #16]
   3e3a0:	movw	r3, #48348	; 0xbcdc
   3e3a4:	movt	r3, #36635	; 0x8f1b
   3e3a8:	add	r5, r5, r6, ror #27
   3e3ac:	ldr	fp, [sp, #44]	; 0x2c
   3e3b0:	add	r3, r0, r3
   3e3b4:	ldr	sl, [sp, #4]
   3e3b8:	orr	r0, r6, r7
   3e3bc:	eor	r2, r2, r8
   3e3c0:	ror	r4, r6, #2
   3e3c4:	and	r8, r0, r1
   3e3c8:	add	ip, r3, ip
   3e3cc:	and	r6, r6, r7
   3e3d0:	eor	r2, r2, r9
   3e3d4:	ldr	r9, [sp, #12]
   3e3d8:	eor	r3, sl, fp
   3e3dc:	add	ip, ip, r5, ror #27
   3e3e0:	orr	r6, r8, r6
   3e3e4:	orr	sl, r5, r4
   3e3e8:	ldr	r8, [sp, #24]
   3e3ec:	and	sl, sl, r7
   3e3f0:	eor	r3, r3, r9
   3e3f4:	movw	r0, #48348	; 0xbcdc
   3e3f8:	add	r9, ip, r6
   3e3fc:	movt	r0, #36635	; 0x8f1b
   3e400:	and	ip, r5, r4
   3e404:	add	r0, r8, r0
   3e408:	orr	ip, sl, ip
   3e40c:	ldr	sl, [sp, #20]
   3e410:	add	r1, r0, r1
   3e414:	ldr	fp, [sp, #8]
   3e418:	ror	r2, r2, #31
   3e41c:	ldr	r0, [sp, #48]	; 0x30
   3e420:	ror	r5, r5, #2
   3e424:	eor	r3, r3, sl
   3e428:	add	ip, r1, ip
   3e42c:	movw	sl, #48348	; 0xbcdc
   3e430:	movt	sl, #36635	; 0x8f1b
   3e434:	add	ip, ip, r9, ror #27
   3e438:	eor	r1, fp, r0
   3e43c:	add	sl, r2, sl
   3e440:	orr	r0, r9, r5
   3e444:	ldr	r8, [sp, #28]
   3e448:	ror	r6, r9, #2
   3e44c:	add	r7, sl, r7
   3e450:	and	r9, r9, r5
   3e454:	ldr	sl, [sp, #24]
   3e458:	and	r0, r0, r4
   3e45c:	add	r7, r7, ip, ror #27
   3e460:	eor	r1, r1, r8
   3e464:	orr	r0, r0, r9
   3e468:	orr	r9, ip, r6
   3e46c:	add	r0, r7, r0
   3e470:	eor	r1, r1, sl
   3e474:	and	r9, r9, r5
   3e478:	str	r1, [sp, #44]	; 0x2c
   3e47c:	and	r7, ip, r6
   3e480:	ror	r3, r3, #31
   3e484:	orr	r7, r9, r7
   3e488:	ldr	r9, [sp, #44]	; 0x2c
   3e48c:	ldr	r1, [sp, #40]	; 0x28
   3e490:	movw	fp, #48348	; 0xbcdc
   3e494:	ldr	sl, [sp, #4]
   3e498:	movt	fp, #36635	; 0x8f1b
   3e49c:	add	fp, r3, fp
   3e4a0:	ror	r9, r9, #31
   3e4a4:	eor	r8, r1, sl
   3e4a8:	add	r4, fp, r4
   3e4ac:	ldr	r1, [sp, #32]
   3e4b0:	ror	ip, ip, #2
   3e4b4:	str	r9, [sp, #4]
   3e4b8:	movw	r9, #48348	; 0xbcdc
   3e4bc:	ldr	sl, [sp, #52]	; 0x34
   3e4c0:	eor	r8, r8, r1
   3e4c4:	ldr	fp, [sp, #8]
   3e4c8:	eor	r8, r8, r2
   3e4cc:	movt	r9, #36635	; 0x8f1b
   3e4d0:	eor	r1, sl, fp
   3e4d4:	add	fp, r4, r7
   3e4d8:	ldr	r4, [sp, #36]	; 0x24
   3e4dc:	add	fp, fp, r0, ror #27
   3e4e0:	ldr	r7, [sp, #4]
   3e4e4:	ror	r8, r8, #31
   3e4e8:	eor	r1, r1, r4
   3e4ec:	str	r8, [sp, #8]
   3e4f0:	add	r9, r7, r9
   3e4f4:	orr	r7, r0, ip
   3e4f8:	ror	r4, r0, #2
   3e4fc:	eor	r1, r1, r3
   3e500:	ldr	r8, [sp, #56]	; 0x38
   3e504:	and	r0, r0, ip
   3e508:	str	r1, [sp, #44]	; 0x2c
   3e50c:	and	r7, r7, r6
   3e510:	ldr	r1, [sp, #40]	; 0x28
   3e514:	orr	r7, r7, r0
   3e518:	ldr	r0, [sp, #8]
   3e51c:	add	r9, r9, r5
   3e520:	eor	sl, r8, r1
   3e524:	ldr	r5, [sp, #16]
   3e528:	ldr	r1, [sp, #44]	; 0x2c
   3e52c:	movw	r8, #48348	; 0xbcdc
   3e530:	movt	r8, #36635	; 0x8f1b
   3e534:	eor	sl, sl, r5
   3e538:	add	r8, r0, r8
   3e53c:	ldr	r0, [sp, #4]
   3e540:	ror	r1, r1, #31
   3e544:	str	r1, [sp, #40]	; 0x28
   3e548:	eor	sl, sl, r0
   3e54c:	ldr	r1, [sp, #60]	; 0x3c
   3e550:	str	sl, [sp, #44]	; 0x2c
   3e554:	add	r9, r9, fp, ror #27
   3e558:	ldr	sl, [sp, #52]	; 0x34
   3e55c:	orr	r5, fp, r4
   3e560:	add	r6, r8, r6
   3e564:	ldr	r8, [sp, #20]
   3e568:	eor	r0, r1, sl
   3e56c:	ldr	sl, [sp, #44]	; 0x2c
   3e570:	add	r7, r9, r7
   3e574:	and	r1, fp, r4
   3e578:	ldr	r9, [sp, #40]	; 0x28
   3e57c:	and	r5, r5, ip
   3e580:	orr	r5, r5, r1
   3e584:	eor	r0, r0, r8
   3e588:	movw	r1, #49622	; 0xc1d6
   3e58c:	ldr	r8, [sp, #8]
   3e590:	movt	r1, #51810	; 0xca62
   3e594:	ror	sl, sl, #31
   3e598:	add	r1, r9, r1
   3e59c:	str	sl, [sp, #44]	; 0x2c
   3e5a0:	ldr	r9, [sp, #12]
   3e5a4:	eor	r0, r0, r8
   3e5a8:	ldr	sl, [sp, #56]	; 0x38
   3e5ac:	ror	fp, fp, #2
   3e5b0:	add	r5, r6, r5
   3e5b4:	ror	r0, r0, #31
   3e5b8:	eor	r8, r9, sl
   3e5bc:	ldr	r9, [sp, #24]
   3e5c0:	eor	r6, fp, r4
   3e5c4:	ldr	sl, [sp, #44]	; 0x2c
   3e5c8:	str	r0, [sp, #48]	; 0x30
   3e5cc:	add	r5, r5, r7, ror #27
   3e5d0:	ldr	r0, [sp, #40]	; 0x28
   3e5d4:	add	r1, r1, ip
   3e5d8:	eor	r6, r6, r7
   3e5dc:	eor	r8, r8, r9
   3e5e0:	ror	r7, r7, #2
   3e5e4:	movw	ip, #49622	; 0xc1d6
   3e5e8:	movt	ip, #51810	; 0xca62
   3e5ec:	add	r9, r1, r6
   3e5f0:	add	ip, sl, ip
   3e5f4:	eor	r6, r7, fp
   3e5f8:	ldr	r1, [sp, #28]
   3e5fc:	eor	r8, r8, r0
   3e600:	ldr	sl, [sp, #60]	; 0x3c
   3e604:	add	ip, ip, r4
   3e608:	eor	r6, r6, r5
   3e60c:	ror	r8, r8, #31
   3e610:	eor	r0, r1, sl
   3e614:	str	r8, [sp, #52]	; 0x34
   3e618:	add	r6, ip, r6
   3e61c:	ldr	r8, [sp, #44]	; 0x2c
   3e620:	ldr	ip, [sp, #48]	; 0x30
   3e624:	eor	r0, r0, r2
   3e628:	movw	r1, #49622	; 0xc1d6
   3e62c:	movt	r1, #51810	; 0xca62
   3e630:	add	r1, ip, r1
   3e634:	eor	r0, r0, r8
   3e638:	ldr	ip, [sp, #32]
   3e63c:	add	r9, r9, r5, ror #27
   3e640:	ldr	r8, [sp, #12]
   3e644:	ror	r5, r5, #2
   3e648:	add	r1, r1, fp
   3e64c:	ror	r0, r0, #31
   3e650:	eor	sl, ip, r8
   3e654:	ldr	fp, [sp, #52]	; 0x34
   3e658:	str	r0, [sp, #108]	; 0x6c
   3e65c:	eor	r4, r5, r7
   3e660:	ldr	r0, [sp, #48]	; 0x30
   3e664:	eor	sl, sl, r3
   3e668:	movw	ip, #49622	; 0xc1d6
   3e66c:	movt	ip, #51810	; 0xca62
   3e670:	add	r6, r6, r9, ror #27
   3e674:	eor	r4, r4, r9
   3e678:	add	ip, fp, ip
   3e67c:	ror	r9, r9, #2
   3e680:	eor	sl, sl, r0
   3e684:	ldr	fp, [sp, #36]	; 0x24
   3e688:	ldr	r0, [sp, #28]
   3e68c:	add	r8, r1, r4
   3e690:	eor	r1, r9, r5
   3e694:	add	r7, ip, r7
   3e698:	eor	r4, fp, r0
   3e69c:	eor	r1, r1, r6
   3e6a0:	ldr	fp, [sp, #4]
   3e6a4:	add	r7, r7, r1
   3e6a8:	ldr	r1, [sp, #52]	; 0x34
   3e6ac:	add	r8, r8, r6, ror #27
   3e6b0:	ldr	ip, [sp, #108]	; 0x6c
   3e6b4:	eor	r4, r4, fp
   3e6b8:	ror	r6, r6, #2
   3e6bc:	eor	r4, r4, r1
   3e6c0:	movw	r0, #49622	; 0xc1d6
   3e6c4:	str	r4, [sp, #12]
   3e6c8:	ldr	r1, [sp, #32]
   3e6cc:	movt	r0, #51810	; 0xca62
   3e6d0:	ldr	r4, [sp, #16]
   3e6d4:	add	r0, ip, r0
   3e6d8:	eor	ip, r6, r9
   3e6dc:	ror	fp, sl, #31
   3e6e0:	eor	ip, ip, r8
   3e6e4:	eor	sl, r4, r1
   3e6e8:	add	r5, r0, r5
   3e6ec:	ldr	r4, [sp, #8]
   3e6f0:	add	r5, r5, ip
   3e6f4:	ldr	ip, [sp, #12]
   3e6f8:	eor	sl, sl, r4
   3e6fc:	ldr	r4, [sp, #108]	; 0x6c
   3e700:	add	r7, r7, r8, ror #27
   3e704:	movw	r1, #49622	; 0xc1d6
   3e708:	ror	r8, r8, #2
   3e70c:	movt	r1, #51810	; 0xca62
   3e710:	add	r1, fp, r1
   3e714:	eor	r0, r8, r6
   3e718:	eor	sl, sl, r4
   3e71c:	ror	ip, ip, #31
   3e720:	str	sl, [sp, #12]
   3e724:	eor	r0, r0, r7
   3e728:	str	ip, [sp, #116]	; 0x74
   3e72c:	add	r9, r1, r9
   3e730:	ldr	sl, [sp, #20]
   3e734:	add	r9, r9, r0
   3e738:	ldr	ip, [sp, #36]	; 0x24
   3e73c:	add	r5, r5, r7, ror #27
   3e740:	ldr	r1, [sp, #40]	; 0x28
   3e744:	ror	r7, r7, #2
   3e748:	eor	r4, sl, ip
   3e74c:	ldr	r0, [sp, #12]
   3e750:	ldr	sl, [sp, #116]	; 0x74
   3e754:	movw	ip, #49622	; 0xc1d6
   3e758:	movt	ip, #51810	; 0xca62
   3e75c:	eor	r4, r4, r1
   3e760:	add	ip, sl, ip
   3e764:	eor	r1, r7, r8
   3e768:	eor	r4, r4, fp
   3e76c:	eor	r1, r1, r5
   3e770:	str	r4, [sp, #12]
   3e774:	ror	r0, r0, #31
   3e778:	ldr	r4, [sp, #24]
   3e77c:	add	ip, ip, r6
   3e780:	str	r0, [sp, #120]	; 0x78
   3e784:	add	r6, ip, r1
   3e788:	ldr	r0, [sp, #16]
   3e78c:	add	r9, r9, r5, ror #27
   3e790:	ldr	r1, [sp, #12]
   3e794:	ror	r5, r5, #2
   3e798:	eor	sl, r4, r0
   3e79c:	ldr	ip, [sp, #120]	; 0x78
   3e7a0:	ldr	r4, [sp, #44]	; 0x2c
   3e7a4:	movw	r0, #49622	; 0xc1d6
   3e7a8:	movt	r0, #51810	; 0xca62
   3e7ac:	ror	r1, r1, #31
   3e7b0:	eor	sl, sl, r4
   3e7b4:	str	r1, [sp, #124]	; 0x7c
   3e7b8:	ldr	r4, [sp, #116]	; 0x74
   3e7bc:	add	r0, ip, r0
   3e7c0:	ldr	r1, [sp, #20]
   3e7c4:	eor	ip, r5, r7
   3e7c8:	add	r0, r0, r8
   3e7cc:	ldr	r8, [sp, #48]	; 0x30
   3e7d0:	eor	ip, ip, r9
   3e7d4:	eor	sl, sl, r4
   3e7d8:	eor	r4, r2, r1
   3e7dc:	movw	r1, #49622	; 0xc1d6
   3e7e0:	eor	r4, r4, r8
   3e7e4:	add	r8, r0, ip
   3e7e8:	ldr	ip, [sp, #124]	; 0x7c
   3e7ec:	movt	r1, #51810	; 0xca62
   3e7f0:	ldr	r0, [sp, #120]	; 0x78
   3e7f4:	add	r6, r6, r9, ror #27
   3e7f8:	add	r1, ip, r1
   3e7fc:	ror	r9, r9, #2
   3e800:	eor	r4, r4, r0
   3e804:	ldr	r0, [sp, #24]
   3e808:	eor	ip, r9, r5
   3e80c:	add	r1, r1, r7
   3e810:	ldr	r7, [sp, #52]	; 0x34
   3e814:	eor	ip, ip, r6
   3e818:	ror	sl, sl, #31
   3e81c:	str	sl, [sp, #128]	; 0x80
   3e820:	eor	sl, r3, r0
   3e824:	movw	r0, #49622	; 0xc1d6
   3e828:	eor	sl, sl, r7
   3e82c:	add	r7, r1, ip
   3e830:	ldr	ip, [sp, #128]	; 0x80
   3e834:	movt	r0, #51810	; 0xca62
   3e838:	add	r8, r8, r6, ror #27
   3e83c:	ror	r4, r4, #31
   3e840:	ror	r6, r6, #2
   3e844:	str	r4, [sp, #132]	; 0x84
   3e848:	add	r0, ip, r0
   3e84c:	ldr	r4, [sp, #4]
   3e850:	ldr	r1, [sp, #124]	; 0x7c
   3e854:	eor	ip, r6, r9
   3e858:	add	r0, r0, r5
   3e85c:	ldr	r5, [sp, #108]	; 0x6c
   3e860:	eor	ip, ip, r8
   3e864:	eor	sl, sl, r1
   3e868:	eor	r1, r4, r2
   3e86c:	ldr	r2, [sp, #8]
   3e870:	eor	r1, r1, r5
   3e874:	add	r5, r0, ip
   3e878:	ldr	ip, [sp, #132]	; 0x84
   3e87c:	add	r7, r7, r8, ror #27
   3e880:	ldr	r0, [sp, #128]	; 0x80
   3e884:	ror	r8, r8, #2
   3e888:	movw	r4, #49622	; 0xc1d6
   3e88c:	movt	r4, #51810	; 0xca62
   3e890:	ror	sl, sl, #31
   3e894:	add	r4, ip, r4
   3e898:	eor	r1, r1, r0
   3e89c:	eor	ip, r8, r6
   3e8a0:	eor	r0, r2, r3
   3e8a4:	movw	r2, #49622	; 0xc1d6
   3e8a8:	movt	r2, #51810	; 0xca62
   3e8ac:	str	sl, [sp, #136]	; 0x88
   3e8b0:	add	r4, r4, r9
   3e8b4:	eor	ip, ip, r7
   3e8b8:	ldr	r9, [sp, #40]	; 0x28
   3e8bc:	add	r2, sl, r2
   3e8c0:	ldr	sl, [sp, #4]
   3e8c4:	add	r5, r5, r7, ror #27
   3e8c8:	add	ip, r4, ip
   3e8cc:	ror	r7, r7, #2
   3e8d0:	ldr	r4, [sp, #132]	; 0x84
   3e8d4:	ror	r1, r1, #31
   3e8d8:	str	r1, [sp, #140]	; 0x8c
   3e8dc:	eor	r3, r7, r8
   3e8e0:	eor	r1, r9, sl
   3e8e4:	add	r2, r2, r6
   3e8e8:	ldr	r9, [sp, #140]	; 0x8c
   3e8ec:	eor	r0, r0, fp
   3e8f0:	ldr	r6, [sp, #116]	; 0x74
   3e8f4:	eor	r3, r3, r5
   3e8f8:	ldr	sl, [sp, #136]	; 0x88
   3e8fc:	eor	r0, r0, r4
   3e900:	movw	r4, #49622	; 0xc1d6
   3e904:	movt	r4, #51810	; 0xca62
   3e908:	add	ip, ip, r5, ror #27
   3e90c:	eor	r1, r1, r6
   3e910:	ror	r5, r5, #2
   3e914:	add	r6, r2, r3
   3e918:	add	r4, r9, r4
   3e91c:	ldr	r2, [sp, #44]	; 0x2c
   3e920:	ldr	r9, [sp, #8]
   3e924:	eor	r3, r5, r7
   3e928:	eor	r1, r1, sl
   3e92c:	ldr	sl, [sp, #120]	; 0x78
   3e930:	eor	r3, r3, ip
   3e934:	ror	r0, r0, #31
   3e938:	add	r4, r4, r8
   3e93c:	str	r0, [sp, #144]	; 0x90
   3e940:	eor	r0, r2, r9
   3e944:	ldr	r8, [sp, #140]	; 0x8c
   3e948:	ldr	r9, [sp, #48]	; 0x30
   3e94c:	eor	r0, r0, sl
   3e950:	add	r4, r4, r3
   3e954:	ldr	sl, [sp, #40]	; 0x28
   3e958:	ldr	r3, [sp, #144]	; 0x90
   3e95c:	ror	r1, r1, #31
   3e960:	movw	r2, #49622	; 0xc1d6
   3e964:	str	r1, [sp, #148]	; 0x94
   3e968:	movt	r2, #51810	; 0xca62
   3e96c:	eor	r1, r9, sl
   3e970:	add	r2, r3, r2
   3e974:	ldr	r9, [sp, #148]	; 0x94
   3e978:	eor	r0, r0, r8
   3e97c:	ldr	r8, [sp, #124]	; 0x7c
   3e980:	add	r7, r2, r7
   3e984:	movw	r2, #49622	; 0xc1d6
   3e988:	movt	r2, #51810	; 0xca62
   3e98c:	ldr	sl, [sp, #144]	; 0x90
   3e990:	add	r2, r9, r2
   3e994:	eor	r1, r1, r8
   3e998:	ldr	r9, [sp, #44]	; 0x2c
   3e99c:	add	r6, r6, ip, ror #27
   3e9a0:	ldr	r8, [sp, #52]	; 0x34
   3e9a4:	ror	ip, ip, #2
   3e9a8:	eor	r1, r1, sl
   3e9ac:	eor	r3, ip, r5
   3e9b0:	eor	sl, r8, r9
   3e9b4:	ldr	r8, [sp, #128]	; 0x80
   3e9b8:	ldr	r9, [sp, #148]	; 0x94
   3e9bc:	add	r4, r4, r6, ror #27
   3e9c0:	eor	r3, r3, r6
   3e9c4:	eor	sl, sl, r8
   3e9c8:	ror	r6, r6, #2
   3e9cc:	eor	sl, sl, r9
   3e9d0:	ldr	r8, [sp, #48]	; 0x30
   3e9d4:	add	r7, r7, r3
   3e9d8:	str	sl, [sp, #4]
   3e9dc:	eor	r3, r6, ip
   3e9e0:	ldr	sl, [sp, #108]	; 0x6c
   3e9e4:	add	r7, r7, r4, ror #27
   3e9e8:	ror	r0, r0, #31
   3e9ec:	eor	r3, r3, r4
   3e9f0:	add	r5, r2, r5
   3e9f4:	ror	r4, r4, #2
   3e9f8:	movw	r2, #49622	; 0xc1d6
   3e9fc:	movt	r2, #51810	; 0xca62
   3ea00:	eor	r9, sl, r8
   3ea04:	add	r5, r5, r3
   3ea08:	ldr	sl, [sp, #132]	; 0x84
   3ea0c:	eor	r3, r4, r6
   3ea10:	add	r2, r0, r2
   3ea14:	eor	r3, r3, r7
   3ea18:	add	ip, r2, ip
   3ea1c:	eor	r9, r9, sl
   3ea20:	add	ip, ip, r3
   3ea24:	ldr	sl, [sp, #52]	; 0x34
   3ea28:	ldr	r3, [sp, #4]
   3ea2c:	add	r5, r5, r7, ror #27
   3ea30:	ror	r1, r1, #31
   3ea34:	ror	r7, r7, #2
   3ea38:	movw	r2, #49622	; 0xc1d6
   3ea3c:	movt	r2, #51810	; 0xca62
   3ea40:	eor	r8, fp, sl
   3ea44:	add	r2, r1, r2
   3ea48:	eor	sl, r7, r4
   3ea4c:	add	ip, ip, r5, ror #27
   3ea50:	ror	r3, r3, #31
   3ea54:	eor	r9, r9, r0
   3ea58:	str	r3, [sp, #160]	; 0xa0
   3ea5c:	add	r6, r2, r6
   3ea60:	str	r9, [sp, #4]
   3ea64:	eor	r3, sl, r5
   3ea68:	ldr	r9, [sp, #136]	; 0x88
   3ea6c:	ror	r5, r5, #2
   3ea70:	ldr	sl, [sp, #160]	; 0xa0
   3ea74:	add	r6, r6, r3
   3ea78:	movw	r2, #49622	; 0xc1d6
   3ea7c:	eor	r3, r5, r7
   3ea80:	movt	r2, #51810	; 0xca62
   3ea84:	eor	r3, r3, ip
   3ea88:	eor	r8, r8, r9
   3ea8c:	str	r3, [sp, #12]
   3ea90:	add	r2, sl, r2
   3ea94:	eor	r8, r8, r1
   3ea98:	add	sl, r2, r4
   3ea9c:	str	r8, [sp, #8]
   3eaa0:	ldr	r4, [sp, #12]
   3eaa4:	add	r6, r6, ip, ror #27
   3eaa8:	ldr	r8, [sp, #4]
   3eaac:	ror	ip, ip, #2
   3eab0:	add	sl, sl, r4
   3eab4:	str	sl, [sp, #4]
   3eab8:	movw	r2, #49622	; 0xc1d6
   3eabc:	eor	sl, ip, r5
   3eac0:	ror	r9, r8, #31
   3eac4:	str	sl, [sp, #40]	; 0x28
   3eac8:	movt	r2, #51810	; 0xca62
   3eacc:	ldr	sl, [sp, #4]
   3ead0:	add	r2, r9, r2
   3ead4:	ldr	r3, [sp, #8]
   3ead8:	add	r4, sl, r6, ror #27
   3eadc:	add	sl, r2, r7
   3eae0:	ldr	r2, [sp, #40]	; 0x28
   3eae4:	ror	r8, r3, #31
   3eae8:	movw	r3, #49622	; 0xc1d6
   3eaec:	eor	r7, r2, r6
   3eaf0:	ldr	r2, [sp, #84]	; 0x54
   3eaf4:	movt	r3, #51810	; 0xca62
   3eaf8:	ror	r6, r6, #2
   3eafc:	add	r2, r2, #64	; 0x40
   3eb00:	str	r2, [sp, #84]	; 0x54
   3eb04:	ldr	r2, [sp, #68]	; 0x44
   3eb08:	add	r3, r8, r3
   3eb0c:	add	sl, sl, r7
   3eb10:	eor	r7, r6, ip
   3eb14:	add	r3, r2, r3
   3eb18:	ldr	r2, [sp, #84]	; 0x54
   3eb1c:	str	r3, [sp, #8]
   3eb20:	eor	r7, r7, r4
   3eb24:	ldr	r3, [sp, #92]	; 0x5c
   3eb28:	str	r7, [sp, #12]
   3eb2c:	str	fp, [sp, #112]	; 0x70
   3eb30:	cmp	r3, r2
   3eb34:	ldr	r7, [sp, #8]
   3eb38:	add	r2, sl, r4, ror #27
   3eb3c:	ldr	fp, [sp, #64]	; 0x40
   3eb40:	ldr	sl, [sp, #12]
   3eb44:	add	r3, r7, r5
   3eb48:	add	fp, fp, r4, ror #2
   3eb4c:	ldr	r5, [sp, #80]	; 0x50
   3eb50:	ldr	r4, [sp, #88]	; 0x58
   3eb54:	add	r3, r3, sl
   3eb58:	ldr	r7, [sp, #72]	; 0x48
   3eb5c:	add	r5, r5, r2
   3eb60:	add	r4, r4, ip
   3eb64:	add	r3, r3, r2, ror #27
   3eb68:	add	r7, r7, r6
   3eb6c:	str	fp, [sp, #64]	; 0x40
   3eb70:	str	r4, [sp, #88]	; 0x58
   3eb74:	str	r5, [sp, #80]	; 0x50
   3eb78:	str	r7, [sp, #72]	; 0x48
   3eb7c:	str	r3, [sp, #68]	; 0x44
   3eb80:	str	r0, [sp, #152]	; 0x98
   3eb84:	str	r1, [sp, #156]	; 0x9c
   3eb88:	str	r9, [sp, #164]	; 0xa4
   3eb8c:	str	r8, [sp, #168]	; 0xa8
   3eb90:	ldr	r8, [sp, #76]	; 0x4c
   3eb94:	stm	r8, {r3, r5, fp}
   3eb98:	str	r7, [r8, #12]
   3eb9c:	str	r4, [r8, #16]
   3eba0:	bhi	3d478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x295ec>
   3eba4:	ldr	r9, [sp, #100]	; 0x64
   3eba8:	ldr	r2, [sp, #172]	; 0xac
   3ebac:	ldr	r3, [r9]
   3ebb0:	cmp	r2, r3
   3ebb4:	bne	3ebc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad34>
   3ebb8:	add	sp, sp, #180	; 0xb4
   3ebbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ebc0:	bl	13694 <__stack_chk_fail@plt>
   3ebc4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   3ebc8:	mov	r4, r0
   3ebcc:	ldr	r3, [r0, #28]
   3ebd0:	mov	r6, r1
   3ebd4:	ldr	r0, [r0, #20]
   3ebd8:	cmp	r3, #55	; 0x37
   3ebdc:	ldr	r9, [r4, #24]
   3ebe0:	add	r0, r3, r0
   3ebe4:	str	r0, [r4, #20]
   3ebe8:	movhi	r7, #128	; 0x80
   3ebec:	movls	r7, #64	; 0x40
   3ebf0:	movhi	r2, #120	; 0x78
   3ebf4:	movls	r2, #56	; 0x38
   3ebf8:	lsl	ip, r0, #3
   3ebfc:	movhi	r1, #31
   3ec00:	movls	r1, #15
   3ec04:	movhi	lr, #30
   3ec08:	movls	lr, #14
   3ec0c:	cmp	r3, r0
   3ec10:	addhi	r9, r9, #1
   3ec14:	and	r5, ip, #65280	; 0xff00
   3ec18:	lsl	r8, r0, #27
   3ec1c:	add	lr, lr, #8
   3ec20:	add	r1, r1, #8
   3ec24:	orr	r8, r8, ip, lsr #24
   3ec28:	lsr	r0, r0, #29
   3ec2c:	lsr	ip, ip, #8
   3ec30:	orr	r8, r8, r5, lsl #8
   3ec34:	orr	r0, r0, r9, lsl #3
   3ec38:	and	ip, ip, #65280	; 0xff00
   3ec3c:	strhi	r9, [r4, #24]
   3ec40:	orr	ip, r8, ip
   3ec44:	rev	r0, r0
   3ec48:	str	r0, [r4, lr, lsl #2]
   3ec4c:	add	r5, r4, #32
   3ec50:	str	ip, [r4, r1, lsl #2]
   3ec54:	rsb	r2, r3, r2
   3ec58:	ldr	r1, [pc, #40]	; 3ec88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2adfc>
   3ec5c:	add	r0, r5, r3
   3ec60:	add	r1, pc, r1
   3ec64:	bl	135c8 <memcpy@plt>
   3ec68:	mov	r0, r5
   3ec6c:	mov	r1, r7
   3ec70:	mov	r2, r4
   3ec74:	bl	3d3dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29550>
   3ec78:	mov	r0, r4
   3ec7c:	mov	r1, r6
   3ec80:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   3ec84:	b	3d394 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29508>
   3ec88:	andeq	pc, r4, r0, ror #1
   3ec8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3ec90:	mov	r7, r2
   3ec94:	ldr	r4, [r2, #28]
   3ec98:	mov	r9, r0
   3ec9c:	mov	r6, r1
   3eca0:	cmp	r4, #0
   3eca4:	bne	3ed8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af00>
   3eca8:	cmp	r6, #63	; 0x3f
   3ecac:	bls	3ed7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aef0>
   3ecb0:	tst	r9, #3
   3ecb4:	beq	3ed60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aed4>
   3ecb8:	cmp	r6, #64	; 0x40
   3ecbc:	add	r8, r7, #32
   3ecc0:	beq	3ed38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aeac>
   3ecc4:	mov	sl, r6
   3ecc8:	mov	r4, r9
   3eccc:	add	ip, r4, #64	; 0x40
   3ecd0:	mov	r3, r8
   3ecd4:	ldr	r1, [r4]
   3ecd8:	add	r4, r4, #16
   3ecdc:	ldr	r2, [r4, #-12]
   3ece0:	add	r3, r3, #16
   3ece4:	ldr	r5, [r4, #-8]
   3ece8:	ldr	lr, [r4, #-4]
   3ecec:	cmp	r4, ip
   3ecf0:	str	r1, [r3, #-16]
   3ecf4:	str	r2, [r3, #-12]
   3ecf8:	str	r5, [r3, #-8]
   3ecfc:	str	lr, [r3, #-4]
   3ed00:	bne	3ecd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ae48>
   3ed04:	sub	sl, sl, #64	; 0x40
   3ed08:	mov	r0, r8
   3ed0c:	mov	r1, #64	; 0x40
   3ed10:	mov	r2, r7
   3ed14:	bl	3d3dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29550>
   3ed18:	cmp	sl, #64	; 0x40
   3ed1c:	bhi	3eccc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ae40>
   3ed20:	sub	r3, r6, #65	; 0x41
   3ed24:	sub	r6, r6, #64	; 0x40
   3ed28:	lsr	r3, r3, #6
   3ed2c:	add	r2, r3, #1
   3ed30:	sub	r6, r6, r3, lsl #6
   3ed34:	add	r9, r9, r2, lsl #6
   3ed38:	ldr	r3, [r7, #28]
   3ed3c:	mov	r2, r6
   3ed40:	mov	r1, r9
   3ed44:	add	r6, r6, r3
   3ed48:	add	r0, r8, r3
   3ed4c:	bl	135c8 <memcpy@plt>
   3ed50:	cmp	r6, #63	; 0x3f
   3ed54:	bhi	3edcc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af40>
   3ed58:	str	r6, [r7, #28]
   3ed5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3ed60:	bic	r3, r6, #63	; 0x3f
   3ed64:	mov	r0, r9
   3ed68:	mov	r2, r7
   3ed6c:	and	r6, r6, #63	; 0x3f
   3ed70:	mov	r1, r3
   3ed74:	add	r9, r9, r3
   3ed78:	bl	3d3dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29550>
   3ed7c:	cmp	r6, #0
   3ed80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3ed84:	add	r8, r7, #32
   3ed88:	b	3ed38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2aeac>
   3ed8c:	rsb	r5, r4, #128	; 0x80
   3ed90:	add	r8, r2, #32
   3ed94:	cmp	r1, r5
   3ed98:	movcc	r5, r1
   3ed9c:	add	r0, r8, r4
   3eda0:	mov	r1, r9
   3eda4:	mov	r2, r5
   3eda8:	bl	135c8 <memcpy@plt>
   3edac:	ldr	r1, [r7, #28]
   3edb0:	add	r1, r5, r1
   3edb4:	str	r1, [r7, #28]
   3edb8:	cmp	r1, #64	; 0x40
   3edbc:	bhi	3edf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af6c>
   3edc0:	add	r9, r9, r5
   3edc4:	rsb	r6, r5, r6
   3edc8:	b	3eca8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ae1c>
   3edcc:	sub	r6, r6, #64	; 0x40
   3edd0:	mov	r0, r8
   3edd4:	mov	r1, #64	; 0x40
   3edd8:	mov	r2, r7
   3eddc:	bl	3d3dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29550>
   3ede0:	mov	r0, r8
   3ede4:	mov	r2, r6
   3ede8:	add	r1, r7, #96	; 0x60
   3edec:	bl	135c8 <memcpy@plt>
   3edf0:	str	r6, [r7, #28]
   3edf4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3edf8:	mov	r0, r8
   3edfc:	mov	r2, r7
   3ee00:	bic	r1, r1, #63	; 0x3f
   3ee04:	bl	3d3dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29550>
   3ee08:	ldr	r2, [r7, #28]
   3ee0c:	add	r1, r5, r4
   3ee10:	mov	r0, r8
   3ee14:	bic	r1, r1, #63	; 0x3f
   3ee18:	and	r2, r2, #63	; 0x3f
   3ee1c:	add	r1, r8, r1
   3ee20:	str	r2, [r7, #28]
   3ee24:	bl	135c8 <memcpy@plt>
   3ee28:	b	3edc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2af34>
   3ee2c:	ldr	r3, [pc, #104]	; 3ee9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b010>
   3ee30:	ldr	ip, [pc, #104]	; 3eea0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b014>
   3ee34:	add	r3, pc, r3
   3ee38:	push	{r4, r5, r6, r7, r8, lr}
   3ee3c:	sub	sp, sp, #168	; 0xa8
   3ee40:	ldr	r5, [r3, ip]
   3ee44:	add	r4, sp, #4
   3ee48:	mov	r7, r0
   3ee4c:	mov	r8, r1
   3ee50:	mov	r0, r4
   3ee54:	mov	r6, r2
   3ee58:	ldr	r3, [r5]
   3ee5c:	str	r3, [sp, #164]	; 0xa4
   3ee60:	bl	3d348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x294bc>
   3ee64:	mov	r2, r4
   3ee68:	mov	r0, r7
   3ee6c:	mov	r1, r8
   3ee70:	bl	3ec8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ae00>
   3ee74:	mov	r0, r4
   3ee78:	mov	r1, r6
   3ee7c:	bl	3ebc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad38>
   3ee80:	ldr	r2, [sp, #164]	; 0xa4
   3ee84:	ldr	r3, [r5]
   3ee88:	cmp	r2, r3
   3ee8c:	bne	3ee98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b00c>
   3ee90:	add	sp, sp, #168	; 0xa8
   3ee94:	pop	{r4, r5, r6, r7, r8, pc}
   3ee98:	bl	13694 <__stack_chk_fail@plt>
   3ee9c:	andeq	r0, r6, r4, asr #3
   3eea0:	muleq	r0, r0, r3
   3eea4:	ldr	r3, [pc, #240]	; 3ef9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b110>
   3eea8:	ldr	r2, [pc, #240]	; 3efa0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b114>
   3eeac:	add	r3, pc, r3
   3eeb0:	push	{r4, r5, r6, r7, r8, r9, lr}
   3eeb4:	sub	sp, sp, #4288	; 0x10c0
   3eeb8:	ldr	r8, [r3, r2]
   3eebc:	sub	sp, sp, #52	; 0x34
   3eec0:	add	r7, sp, #4
   3eec4:	add	r2, sp, #8192	; 0x2000
   3eec8:	mov	r5, r0
   3eecc:	mov	r9, r1
   3eed0:	ldr	r3, [r8]
   3eed4:	mov	r0, r7
   3eed8:	add	r6, sp, #164	; 0xa4
   3eedc:	mov	r4, #0
   3eee0:	str	r3, [r2, #-3860]	; 0xfffff0ec
   3eee4:	bl	3d348 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x294bc>
   3eee8:	add	r0, r6, r4
   3eeec:	rsb	r2, r4, #4096	; 0x1000
   3eef0:	mov	r1, #1
   3eef4:	mov	r3, r5
   3eef8:	bl	1382c <fread@plt>
   3eefc:	add	r4, r4, r0
   3ef00:	cmp	r4, #4096	; 0x1000
   3ef04:	beq	3ef58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0cc>
   3ef08:	cmp	r0, #0
   3ef0c:	mov	r0, r5
   3ef10:	beq	3ef70 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0e4>
   3ef14:	bl	139dc <feof@plt>
   3ef18:	cmp	r0, #0
   3ef1c:	beq	3eee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b05c>
   3ef20:	cmp	r4, #0
   3ef24:	bne	3ef84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0f8>
   3ef28:	mov	r0, r7
   3ef2c:	mov	r1, r9
   3ef30:	bl	3ebc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ad38>
   3ef34:	mov	r0, #0
   3ef38:	add	r3, sp, #8192	; 0x2000
   3ef3c:	ldr	r2, [r3, #-3860]	; 0xfffff0ec
   3ef40:	ldr	r3, [r8]
   3ef44:	cmp	r2, r3
   3ef48:	bne	3ef98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b10c>
   3ef4c:	add	sp, sp, #4288	; 0x10c0
   3ef50:	add	sp, sp, #52	; 0x34
   3ef54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3ef58:	mov	r1, r4
   3ef5c:	mov	r0, r6
   3ef60:	mov	r2, r7
   3ef64:	mov	r4, #0
   3ef68:	bl	3d3dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x29550>
   3ef6c:	b	3eee8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b05c>
   3ef70:	bl	13598 <ferror@plt>
   3ef74:	cmp	r0, #0
   3ef78:	beq	3ef20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b094>
   3ef7c:	mov	r0, #1
   3ef80:	b	3ef38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b0ac>
   3ef84:	mov	r0, r6
   3ef88:	mov	r1, r4
   3ef8c:	mov	r2, r7
   3ef90:	bl	3ec8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ae00>
   3ef94:	b	3ef28 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b09c>
   3ef98:	bl	13694 <__stack_chk_fail@plt>
   3ef9c:	andeq	r0, r6, ip, asr #2
   3efa0:	muleq	r0, r0, r3
   3efa4:	push	{r3, r4, r5, r6, r7, lr}
   3efa8:	subs	r4, r0, #0
   3efac:	beq	3f030 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b1a4>
   3efb0:	ldr	r3, [r4]
   3efb4:	cmp	r3, #0
   3efb8:	beq	3f020 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b194>
   3efbc:	mov	r2, r4
   3efc0:	mov	r3, #0
   3efc4:	ldr	r1, [r2, #4]!
   3efc8:	add	r3, r3, #1
   3efcc:	cmp	r1, #0
   3efd0:	bne	3efc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b138>
   3efd4:	add	r3, r3, #1
   3efd8:	lsl	r0, r3, #2
   3efdc:	bl	137b4 <xmalloc@plt>
   3efe0:	mov	r6, r0
   3efe4:	ldr	r0, [r4]
   3efe8:	cmp	r0, #0
   3efec:	beq	3f028 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b19c>
   3eff0:	rsb	r7, r4, #4
   3eff4:	mov	r5, #0
   3eff8:	bl	137e4 <xstrdup@plt>
   3effc:	str	r0, [r6, r5]
   3f000:	add	r5, r7, r4
   3f004:	ldr	r0, [r4, #4]!
   3f008:	cmp	r0, #0
   3f00c:	bne	3eff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b16c>
   3f010:	mov	r3, #0
   3f014:	mov	r0, r6
   3f018:	str	r3, [r6, r5]
   3f01c:	pop	{r3, r4, r5, r6, r7, pc}
   3f020:	mov	r0, #4
   3f024:	b	3efdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b150>
   3f028:	mov	r5, r0
   3f02c:	b	3f010 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b184>
   3f030:	mov	r0, r4
   3f034:	pop	{r3, r4, r5, r6, r7, pc}
   3f038:	push	{r3, r4, r5, lr}
   3f03c:	subs	r5, r0, #0
   3f040:	popeq	{r3, r4, r5, pc}
   3f044:	ldr	r0, [r5]
   3f048:	cmp	r0, #0
   3f04c:	movne	r4, r5
   3f050:	beq	3f064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b1d8>
   3f054:	bl	13574 <free@plt>
   3f058:	ldr	r0, [r4, #4]!
   3f05c:	cmp	r0, #0
   3f060:	bne	3f054 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b1c8>
   3f064:	mov	r0, r5
   3f068:	pop	{r3, r4, r5, lr}
   3f06c:	b	13574 <free@plt>
   3f070:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f074:	subs	r4, r0, #0
   3f078:	ldr	r5, [pc, #536]	; 3f298 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b40c>
   3f07c:	sub	sp, sp, #12
   3f080:	add	r5, pc, r5
   3f084:	beq	3f290 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b404>
   3f088:	bl	13a24 <strlen@plt>
   3f08c:	mov	r9, #0
   3f090:	mov	r7, r9
   3f094:	mov	r8, r9
   3f098:	mov	r6, r9
   3f09c:	mov	fp, r9
   3f0a0:	mov	sl, r9
   3f0a4:	add	r0, r0, #1
   3f0a8:	bl	137b4 <xmalloc@plt>
   3f0ac:	ldr	r3, [pc, #488]	; 3f29c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b410>
   3f0b0:	str	r0, [sp]
   3f0b4:	ldr	r5, [r5, r3]
   3f0b8:	ldrb	r3, [r4]
   3f0bc:	lsl	r3, r3, #1
   3f0c0:	ldrh	r3, [r5, r3]
   3f0c4:	tst	r3, #64	; 0x40
   3f0c8:	beq	3f0ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b260>
   3f0cc:	mov	r3, r4
   3f0d0:	ldrb	r2, [r3, #1]
   3f0d4:	add	r4, r3, #1
   3f0d8:	mov	r3, r4
   3f0dc:	lsl	r2, r2, #1
   3f0e0:	ldrh	r2, [r5, r2]
   3f0e4:	tst	r2, #64	; 0x40
   3f0e8:	bne	3f0d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b244>
   3f0ec:	cmp	r7, #0
   3f0f0:	beq	3f108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b27c>
   3f0f4:	sub	r3, r7, #1
   3f0f8:	cmp	r9, r3
   3f0fc:	addlt	r3, r8, r9, lsl #2
   3f100:	strlt	r3, [sp, #4]
   3f104:	blt	3f134 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b2a8>
   3f108:	cmp	r8, #0
   3f10c:	beq	3f27c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b3f0>
   3f110:	lsl	r7, r7, #1
   3f114:	mov	r0, r8
   3f118:	lsl	r1, r7, #2
   3f11c:	bl	13724 <xrealloc@plt>
   3f120:	mov	r8, r0
   3f124:	add	r3, r8, r9, lsl #2
   3f128:	str	r3, [sp, #4]
   3f12c:	mov	r3, #0
   3f130:	str	r3, [r8, r9, lsl #2]
   3f134:	ldrb	r3, [r4]
   3f138:	cmp	r3, #0
   3f13c:	beq	3f1f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b368>
   3f140:	mov	r2, r4
   3f144:	ldr	lr, [sp]
   3f148:	b	3f16c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b2e0>
   3f14c:	strb	r3, [lr]
   3f150:	add	lr, lr, #1
   3f154:	mov	r6, #0
   3f158:	ldrb	r3, [r2, #1]
   3f15c:	add	r2, r2, #1
   3f160:	cmp	r3, #0
   3f164:	mov	r4, r2
   3f168:	beq	3f1f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b36c>
   3f16c:	lsl	r1, r3, #1
   3f170:	mov	r4, r2
   3f174:	ldrh	r1, [r5, r1]
   3f178:	tst	r1, #64	; 0x40
   3f17c:	beq	3f18c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b300>
   3f180:	orr	r0, r6, fp
   3f184:	orrs	r0, r0, sl
   3f188:	beq	3f270 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b3e4>
   3f18c:	cmp	r6, #0
   3f190:	bne	3f14c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b2c0>
   3f194:	cmp	r3, #92	; 0x5c
   3f198:	moveq	r6, #1
   3f19c:	beq	3f158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b2cc>
   3f1a0:	cmp	sl, #0
   3f1a4:	beq	3f1c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b334>
   3f1a8:	cmp	r3, #39	; 0x27
   3f1ac:	moveq	sl, r6
   3f1b0:	beq	3f158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b2cc>
   3f1b4:	strb	r3, [lr]
   3f1b8:	add	lr, lr, #1
   3f1bc:	b	3f158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b2cc>
   3f1c0:	cmp	fp, #0
   3f1c4:	beq	3f1d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b34c>
   3f1c8:	cmp	r3, #34	; 0x22
   3f1cc:	moveq	fp, sl
   3f1d0:	bne	3f1b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b328>
   3f1d4:	b	3f158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b2cc>
   3f1d8:	cmp	r3, #39	; 0x27
   3f1dc:	moveq	sl, #1
   3f1e0:	beq	3f158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b2cc>
   3f1e4:	cmp	r3, #34	; 0x22
   3f1e8:	moveq	fp, #1
   3f1ec:	bne	3f1b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b328>
   3f1f0:	b	3f158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b2cc>
   3f1f4:	ldr	lr, [sp]
   3f1f8:	mov	r3, #0
   3f1fc:	ldr	r0, [sp]
   3f200:	strb	r3, [lr]
   3f204:	add	r9, r9, #1
   3f208:	bl	137e4 <xstrdup@plt>
   3f20c:	ldr	r3, [sp, #4]
   3f210:	str	r0, [r3]
   3f214:	mov	r3, #0
   3f218:	str	r3, [r8, r9, lsl #2]
   3f21c:	ldrb	r2, [r4]
   3f220:	lsl	r3, r2, #1
   3f224:	ldrh	r3, [r5, r3]
   3f228:	tst	r3, #64	; 0x40
   3f22c:	beq	3f250 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b3c4>
   3f230:	mov	r3, r4
   3f234:	ldrb	r2, [r3, #1]
   3f238:	add	r4, r3, #1
   3f23c:	mov	r3, r4
   3f240:	lsl	r1, r2, #1
   3f244:	ldrh	r1, [r5, r1]
   3f248:	tst	r1, #64	; 0x40
   3f24c:	bne	3f234 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b3a8>
   3f250:	cmp	r2, #0
   3f254:	bne	3f0b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b22c>
   3f258:	ldr	r0, [sp]
   3f25c:	mov	r9, r8
   3f260:	bl	13574 <free@plt>
   3f264:	mov	r0, r9
   3f268:	add	sp, sp, #12
   3f26c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f270:	mov	r6, r0
   3f274:	mov	sl, r0
   3f278:	b	3f1f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b36c>
   3f27c:	mov	r0, #32
   3f280:	mov	r7, #8
   3f284:	bl	137b4 <xmalloc@plt>
   3f288:	mov	r8, r0
   3f28c:	b	3f124 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b298>
   3f290:	mov	r9, r4
   3f294:	b	3f264 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b3d8>
   3f298:	andeq	pc, r5, r8, ror pc	; <UNPREDICTABLE>
   3f29c:	muleq	r0, r4, r3
   3f2a0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   3f2a4:	subs	r5, r1, #0
   3f2a8:	ldr	r8, [pc, #180]	; 3f364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4d8>
   3f2ac:	add	r8, pc, r8
   3f2b0:	beq	3f334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4a8>
   3f2b4:	ldr	r6, [r0]
   3f2b8:	cmp	r6, #0
   3f2bc:	movne	r9, r0
   3f2c0:	beq	3f35c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4d0>
   3f2c4:	ldrb	r4, [r6]
   3f2c8:	cmp	r4, #0
   3f2cc:	beq	3f33c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4b0>
   3f2d0:	ldr	r3, [pc, #144]	; 3f368 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4dc>
   3f2d4:	ldr	r7, [r8, r3]
   3f2d8:	b	3f304 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b478>
   3f2dc:	cmp	r4, #34	; 0x22
   3f2e0:	beq	3f328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b49c>
   3f2e4:	mov	r0, r4
   3f2e8:	mov	r1, r5
   3f2ec:	bl	13c28 <fputc@plt>
   3f2f0:	cmn	r0, #1
   3f2f4:	beq	3f334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4a8>
   3f2f8:	ldrb	r4, [r6, #1]!
   3f2fc:	cmp	r4, #0
   3f300:	beq	3f33c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4b0>
   3f304:	lsl	r3, r4, #1
   3f308:	mov	r1, r5
   3f30c:	mov	r0, #92	; 0x5c
   3f310:	ldrh	r3, [r7, r3]
   3f314:	tst	r3, #64	; 0x40
   3f318:	bne	3f328 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b49c>
   3f31c:	cmp	r4, #39	; 0x27
   3f320:	cmpne	r4, r0
   3f324:	bne	3f2dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b450>
   3f328:	bl	13c28 <fputc@plt>
   3f32c:	cmn	r0, #1
   3f330:	bne	3f2e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b458>
   3f334:	mov	r0, #1
   3f338:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3f33c:	mov	r0, #10
   3f340:	mov	r1, r5
   3f344:	bl	13c28 <fputc@plt>
   3f348:	cmn	r0, #1
   3f34c:	beq	3f334 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b4a8>
   3f350:	ldr	r6, [r9, #4]!
   3f354:	cmp	r6, #0
   3f358:	bne	3f2c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b438>
   3f35c:	mov	r0, #0
   3f360:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3f364:	andeq	pc, r5, ip, asr #26
   3f368:	muleq	r0, r4, r3
   3f36c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f370:	sub	sp, sp, #28
   3f374:	ldr	ip, [pc, #684]	; 3f628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b79c>
   3f378:	mov	r6, r1
   3f37c:	mov	sl, r0
   3f380:	mov	r5, #0
   3f384:	add	ip, pc, ip
   3f388:	str	ip, [sp, #12]
   3f38c:	ldr	ip, [pc, #664]	; 3f62c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b7a0>
   3f390:	mov	r8, #2000	; 0x7d0
   3f394:	ldr	r1, [r0]
   3f398:	add	ip, pc, ip
   3f39c:	mov	fp, ip
   3f3a0:	b	3f3a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b51c>
   3f3a4:	mov	r5, r4
   3f3a8:	add	r4, r5, #1
   3f3ac:	cmp	r4, r1
   3f3b0:	bge	3f5a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b718>
   3f3b4:	ldr	r3, [r6]
   3f3b8:	lsl	r7, r4, #2
   3f3bc:	ldr	r0, [r3, r4, lsl #2]
   3f3c0:	ldrb	r2, [r0]
   3f3c4:	cmp	r2, #64	; 0x40
   3f3c8:	bne	3f3a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b518>
   3f3cc:	subs	r8, r8, #1
   3f3d0:	beq	3f5fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b770>
   3f3d4:	add	r0, r0, #1
   3f3d8:	mov	r1, fp
   3f3dc:	bl	13cb8 <fopen64@plt>
   3f3e0:	subs	r9, r0, #0
   3f3e4:	beq	3f59c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b710>
   3f3e8:	mov	r1, #0
   3f3ec:	mov	r2, #2
   3f3f0:	bl	13dc0 <fseek@plt>
   3f3f4:	cmn	r0, #1
   3f3f8:	beq	3f594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b708>
   3f3fc:	mov	r0, r9
   3f400:	bl	13640 <ftell@plt>
   3f404:	cmn	r0, #1
   3f408:	mov	ip, r0
   3f40c:	beq	3f594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b708>
   3f410:	mov	r1, #0
   3f414:	mov	r0, r9
   3f418:	mov	r2, r1
   3f41c:	str	ip, [sp, #4]
   3f420:	bl	13dc0 <fseek@plt>
   3f424:	ldr	ip, [sp, #4]
   3f428:	cmn	r0, #1
   3f42c:	beq	3f594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b708>
   3f430:	add	r0, ip, #1
   3f434:	bl	137b4 <xmalloc@plt>
   3f438:	ldr	ip, [sp, #4]
   3f43c:	mov	r3, r9
   3f440:	mov	r1, #1
   3f444:	mov	r2, ip
   3f448:	str	r0, [sp, #16]
   3f44c:	bl	1382c <fread@plt>
   3f450:	ldr	ip, [sp, #4]
   3f454:	cmp	ip, r0
   3f458:	mov	r3, r0
   3f45c:	beq	3f478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b5ec>
   3f460:	mov	r0, r9
   3f464:	str	r3, [sp, #8]
   3f468:	bl	13598 <ferror@plt>
   3f46c:	ldr	r3, [sp, #8]
   3f470:	cmp	r0, #0
   3f474:	bne	3f594 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b708>
   3f478:	ldr	ip, [sp, #16]
   3f47c:	mov	r0, #0
   3f480:	strb	r0, [ip, r3]
   3f484:	ldrb	r3, [ip]
   3f488:	cmp	r3, #0
   3f48c:	beq	3f4d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b644>
   3f490:	ldr	r2, [pc, #408]	; 3f630 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b7a4>
   3f494:	lsl	r3, r3, #1
   3f498:	ldr	ip, [sp, #12]
   3f49c:	ldr	r1, [ip, r2]
   3f4a0:	ldrh	r3, [r1, r3]
   3f4a4:	tst	r3, #64	; 0x40
   3f4a8:	beq	3f5ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b720>
   3f4ac:	ldr	r2, [sp, #16]
   3f4b0:	b	3f4c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b638>
   3f4b4:	lsl	r3, r3, #1
   3f4b8:	ldrh	r3, [r1, r3]
   3f4bc:	tst	r3, #64	; 0x40
   3f4c0:	beq	3f5ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b720>
   3f4c4:	ldrb	r3, [r2, #1]!
   3f4c8:	cmp	r3, #0
   3f4cc:	bne	3f4b4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b628>
   3f4d0:	mov	r0, #4
   3f4d4:	mov	ip, #0
   3f4d8:	str	ip, [sp, #4]
   3f4dc:	bl	137b4 <xmalloc@plt>
   3f4e0:	ldr	ip, [sp, #4]
   3f4e4:	mov	r1, #0
   3f4e8:	str	r0, [sp, #20]
   3f4ec:	str	r1, [r0]
   3f4f0:	ldr	r0, [r6]
   3f4f4:	str	ip, [sp, #8]
   3f4f8:	bl	3efa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b118>
   3f4fc:	ldr	r3, [sp, #8]
   3f500:	ldr	ip, [sp, #4]
   3f504:	str	r0, [r6]
   3f508:	ldr	r1, [sl]
   3f50c:	str	ip, [sp, #4]
   3f510:	add	r1, r1, #1
   3f514:	str	r3, [sp, #8]
   3f518:	add	r1, r1, r3
   3f51c:	lsl	r1, r1, #2
   3f520:	bl	13724 <xrealloc@plt>
   3f524:	ldr	r3, [sp, #8]
   3f528:	ldr	r2, [sl]
   3f52c:	add	lr, r7, #4
   3f530:	rsb	r2, r4, r2
   3f534:	lsl	r2, r2, #2
   3f538:	mov	r1, r0
   3f53c:	add	r0, r3, r4
   3f540:	str	r1, [r6]
   3f544:	mov	r4, r5
   3f548:	add	r0, r1, r0, lsl #2
   3f54c:	add	r1, r1, lr
   3f550:	str	r3, [sp, #8]
   3f554:	bl	13538 <memmove@plt>
   3f558:	ldr	ip, [sp, #4]
   3f55c:	ldr	r0, [r6]
   3f560:	ldr	r1, [sp, #20]
   3f564:	mov	r2, ip
   3f568:	add	r0, r0, r7
   3f56c:	bl	135c8 <memcpy@plt>
   3f570:	ldr	r2, [sl]
   3f574:	ldr	r3, [sp, #8]
   3f578:	sub	r2, r2, #1
   3f57c:	ldr	r0, [sp, #20]
   3f580:	add	r3, r2, r3
   3f584:	str	r3, [sl]
   3f588:	bl	13574 <free@plt>
   3f58c:	ldr	r0, [sp, #16]
   3f590:	bl	13574 <free@plt>
   3f594:	mov	r0, r9
   3f598:	bl	13b80 <fclose@plt>
   3f59c:	ldr	r1, [sl]
   3f5a0:	b	3f3a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b518>
   3f5a4:	add	sp, sp, #28
   3f5a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f5ac:	ldr	r0, [sp, #16]
   3f5b0:	bl	3f070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b1e4>
   3f5b4:	ldr	ip, [r0]
   3f5b8:	str	r0, [sp, #20]
   3f5bc:	ldr	r0, [r6]
   3f5c0:	str	ip, [sp, #4]
   3f5c4:	bl	3efa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b118>
   3f5c8:	ldr	ip, [sp, #4]
   3f5cc:	cmp	ip, #0
   3f5d0:	moveq	r3, ip
   3f5d4:	str	r0, [r6]
   3f5d8:	beq	3f508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b67c>
   3f5dc:	ldr	r2, [sp, #20]
   3f5e0:	mov	r3, #0
   3f5e4:	ldr	r1, [r2, #4]!
   3f5e8:	add	r3, r3, #1
   3f5ec:	cmp	r1, #0
   3f5f0:	lsl	ip, r3, #2
   3f5f4:	bne	3f5e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b758>
   3f5f8:	b	3f508 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b67c>
   3f5fc:	ldr	ip, [sp, #12]
   3f600:	mov	r1, #1
   3f604:	ldr	r0, [pc, #40]	; 3f634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b7a8>
   3f608:	ldr	r2, [pc, #40]	; 3f638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b7ac>
   3f60c:	ldr	r3, [r3]
   3f610:	ldr	r0, [ip, r0]
   3f614:	add	r2, pc, r2
   3f618:	ldr	r0, [r0]
   3f61c:	bl	13b74 <__fprintf_chk@plt>
   3f620:	mov	r0, #1
   3f624:	bl	13c40 <xexit@plt>
   3f628:	andeq	pc, r5, r4, ror ip	; <UNPREDICTABLE>
   3f62c:	andeq	r2, r3, r0, ror #25
   3f630:	muleq	r0, r4, r3
   3f634:	muleq	r0, r8, r3
   3f638:	andeq	lr, r4, ip, ror #14
   3f63c:	subs	r3, r0, #0
   3f640:	beq	3f668 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b7dc>
   3f644:	ldr	r0, [r3]
   3f648:	cmp	r0, #0
   3f64c:	bxeq	lr
   3f650:	mov	r0, #0
   3f654:	ldr	r2, [r3, #4]!
   3f658:	add	r0, r0, #1
   3f65c:	cmp	r2, #0
   3f660:	bne	3f654 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b7c8>
   3f664:	bx	lr
   3f668:	mov	r0, r3
   3f66c:	bx	lr
   3f670:	ldr	r3, [pc, #100]	; 3f6dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b850>
   3f674:	mov	r0, #0
   3f678:	ldr	r2, [pc, #96]	; 3f6e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b854>
   3f67c:	add	r3, pc, r3
   3f680:	push	{r4, r5, r6, lr}
   3f684:	sub	sp, sp, #80	; 0x50
   3f688:	ldr	r4, [r3, r2]
   3f68c:	add	r1, sp, #4
   3f690:	ldr	r3, [r4]
   3f694:	str	r3, [sp, #76]	; 0x4c
   3f698:	bl	13d18 <getrusage@plt>
   3f69c:	ldr	r1, [sp, #4]
   3f6a0:	movw	r3, #16960	; 0x4240
   3f6a4:	ldr	r2, [sp, #8]
   3f6a8:	movt	r3, #15
   3f6ac:	ldr	r6, [sp, #12]
   3f6b0:	ldr	r5, [sp, #76]	; 0x4c
   3f6b4:	mla	r1, r3, r1, r2
   3f6b8:	ldr	ip, [r4]
   3f6bc:	ldr	r0, [sp, #16]
   3f6c0:	cmp	r5, ip
   3f6c4:	mla	r3, r3, r6, r1
   3f6c8:	add	r0, r3, r0
   3f6cc:	bne	3f6d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b84c>
   3f6d0:	add	sp, sp, #80	; 0x50
   3f6d4:	pop	{r4, r5, r6, pc}
   3f6d8:	bl	13694 <__stack_chk_fail@plt>
   3f6dc:	andeq	pc, r5, ip, ror r9	; <UNPREDICTABLE>
   3f6e0:	muleq	r0, r0, r3
   3f6e4:	ldr	r3, [pc, #68]	; 3f730 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b8a4>
   3f6e8:	push	{r4, r5, r6, lr}
   3f6ec:	ldr	r6, [pc, r3]
   3f6f0:	cmp	r6, #0
   3f6f4:	popeq	{r4, r5, r6, pc}
   3f6f8:	ldr	r5, [r6, #4]
   3f6fc:	subs	r4, r5, #1
   3f700:	addpl	r5, r5, #2
   3f704:	addpl	r5, r6, r5, lsl #2
   3f708:	bmi	3f720 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b894>
   3f70c:	sub	r4, r4, #1
   3f710:	ldr	r3, [r5, #-4]!
   3f714:	blx	r3
   3f718:	cmn	r4, #1
   3f71c:	bne	3f70c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b880>
   3f720:	ldr	r6, [r6]
   3f724:	cmp	r6, #0
   3f728:	bne	3f6f8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b86c>
   3f72c:	pop	{r4, r5, r6, pc}
   3f730:	andeq	r0, r6, r0, lsl r0
   3f734:	ldr	r3, [pc, #148]	; 3f7d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b944>
   3f738:	ldr	r2, [pc, #148]	; 3f7d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b948>
   3f73c:	add	r3, pc, r3
   3f740:	push	{r4, r5, r6, lr}
   3f744:	mov	r6, r0
   3f748:	ldr	r3, [r3, r2]
   3f74c:	ldr	r2, [r3]
   3f750:	cmp	r2, #0
   3f754:	beq	3f7b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b92c>
   3f758:	ldr	r5, [pc, #120]	; 3f7d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b94c>
   3f75c:	add	r5, pc, r5
   3f760:	ldr	r4, [r5]
   3f764:	ldr	r3, [r4, #4]
   3f768:	cmp	r3, #31
   3f76c:	addle	r2, r3, #1
   3f770:	bgt	3f788 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b8fc>
   3f774:	add	r3, r3, #2
   3f778:	str	r2, [r4, #4]
   3f77c:	mov	r0, #0
   3f780:	str	r6, [r4, r3, lsl #2]
   3f784:	pop	{r4, r5, r6, pc}
   3f788:	mov	r0, #136	; 0x88
   3f78c:	bl	1394c <malloc@plt>
   3f790:	cmp	r0, #0
   3f794:	beq	3f7c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b93c>
   3f798:	mov	r1, #0
   3f79c:	str	r4, [r0]
   3f7a0:	mov	r3, r1
   3f7a4:	mov	r4, r0
   3f7a8:	mov	r2, #1
   3f7ac:	str	r0, [r5]
   3f7b0:	str	r1, [r0, #4]
   3f7b4:	b	3f774 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b8e8>
   3f7b8:	ldr	r2, [pc, #28]	; 3f7dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b950>
   3f7bc:	add	r2, pc, r2
   3f7c0:	str	r2, [r3]
   3f7c4:	b	3f758 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b8cc>
   3f7c8:	mvn	r0, #0
   3f7cc:	pop	{r4, r5, r6, pc}
   3f7d0:			; <UNDEFINED> instruction: 0x0005f8bc
   3f7d4:	andeq	r0, r0, r8, lsr #7
   3f7d8:	andeq	pc, r5, r0, lsr #31
   3f7dc:			; <UNDEFINED> instruction: 0xffffff20
   3f7e0:	push	{r3, r4, r5, r6, r7, lr}
   3f7e4:	mov	r7, r0
   3f7e8:	mov	r0, r2
   3f7ec:	mov	r5, r2
   3f7f0:	mov	r4, r1
   3f7f4:	bl	137b4 <xmalloc@plt>
   3f7f8:	cmp	r5, r4
   3f7fc:	mov	r6, r0
   3f800:	bls	3f814 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b988>
   3f804:	rsb	r2, r4, r5
   3f808:	add	r0, r0, r4
   3f80c:	mov	r1, #0
   3f810:	bl	13af0 <memset@plt>
   3f814:	mov	r0, r6
   3f818:	mov	r1, r7
   3f81c:	mov	r2, r4
   3f820:	pop	{r3, r4, r5, r6, r7, lr}
   3f824:	b	135c8 <memcpy@plt>
   3f828:	cmp	r1, #0
   3f82c:	beq	3fa38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bbac>
   3f830:	eor	ip, r0, r1
   3f834:	rsbmi	r1, r1, #0
   3f838:	subs	r2, r1, #1
   3f83c:	beq	3fa04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bb78>
   3f840:	movs	r3, r0
   3f844:	rsbmi	r3, r0, #0
   3f848:	cmp	r3, r1
   3f84c:	bls	3fa10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bb84>
   3f850:	tst	r1, r2
   3f854:	beq	3fa20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bb94>
   3f858:	clz	r2, r3
   3f85c:	clz	r0, r1
   3f860:	sub	r2, r0, r2
   3f864:	rsbs	r2, r2, #31
   3f868:	addne	r2, r2, r2, lsl #1
   3f86c:	mov	r0, #0
   3f870:	addne	pc, pc, r2, lsl #2
   3f874:	nop	{0}
   3f878:	cmp	r3, r1, lsl #31
   3f87c:	adc	r0, r0, r0
   3f880:	subcs	r3, r3, r1, lsl #31
   3f884:	cmp	r3, r1, lsl #30
   3f888:	adc	r0, r0, r0
   3f88c:	subcs	r3, r3, r1, lsl #30
   3f890:	cmp	r3, r1, lsl #29
   3f894:	adc	r0, r0, r0
   3f898:	subcs	r3, r3, r1, lsl #29
   3f89c:	cmp	r3, r1, lsl #28
   3f8a0:	adc	r0, r0, r0
   3f8a4:	subcs	r3, r3, r1, lsl #28
   3f8a8:	cmp	r3, r1, lsl #27
   3f8ac:	adc	r0, r0, r0
   3f8b0:	subcs	r3, r3, r1, lsl #27
   3f8b4:	cmp	r3, r1, lsl #26
   3f8b8:	adc	r0, r0, r0
   3f8bc:	subcs	r3, r3, r1, lsl #26
   3f8c0:	cmp	r3, r1, lsl #25
   3f8c4:	adc	r0, r0, r0
   3f8c8:	subcs	r3, r3, r1, lsl #25
   3f8cc:	cmp	r3, r1, lsl #24
   3f8d0:	adc	r0, r0, r0
   3f8d4:	subcs	r3, r3, r1, lsl #24
   3f8d8:	cmp	r3, r1, lsl #23
   3f8dc:	adc	r0, r0, r0
   3f8e0:	subcs	r3, r3, r1, lsl #23
   3f8e4:	cmp	r3, r1, lsl #22
   3f8e8:	adc	r0, r0, r0
   3f8ec:	subcs	r3, r3, r1, lsl #22
   3f8f0:	cmp	r3, r1, lsl #21
   3f8f4:	adc	r0, r0, r0
   3f8f8:	subcs	r3, r3, r1, lsl #21
   3f8fc:	cmp	r3, r1, lsl #20
   3f900:	adc	r0, r0, r0
   3f904:	subcs	r3, r3, r1, lsl #20
   3f908:	cmp	r3, r1, lsl #19
   3f90c:	adc	r0, r0, r0
   3f910:	subcs	r3, r3, r1, lsl #19
   3f914:	cmp	r3, r1, lsl #18
   3f918:	adc	r0, r0, r0
   3f91c:	subcs	r3, r3, r1, lsl #18
   3f920:	cmp	r3, r1, lsl #17
   3f924:	adc	r0, r0, r0
   3f928:	subcs	r3, r3, r1, lsl #17
   3f92c:	cmp	r3, r1, lsl #16
   3f930:	adc	r0, r0, r0
   3f934:	subcs	r3, r3, r1, lsl #16
   3f938:	cmp	r3, r1, lsl #15
   3f93c:	adc	r0, r0, r0
   3f940:	subcs	r3, r3, r1, lsl #15
   3f944:	cmp	r3, r1, lsl #14
   3f948:	adc	r0, r0, r0
   3f94c:	subcs	r3, r3, r1, lsl #14
   3f950:	cmp	r3, r1, lsl #13
   3f954:	adc	r0, r0, r0
   3f958:	subcs	r3, r3, r1, lsl #13
   3f95c:	cmp	r3, r1, lsl #12
   3f960:	adc	r0, r0, r0
   3f964:	subcs	r3, r3, r1, lsl #12
   3f968:	cmp	r3, r1, lsl #11
   3f96c:	adc	r0, r0, r0
   3f970:	subcs	r3, r3, r1, lsl #11
   3f974:	cmp	r3, r1, lsl #10
   3f978:	adc	r0, r0, r0
   3f97c:	subcs	r3, r3, r1, lsl #10
   3f980:	cmp	r3, r1, lsl #9
   3f984:	adc	r0, r0, r0
   3f988:	subcs	r3, r3, r1, lsl #9
   3f98c:	cmp	r3, r1, lsl #8
   3f990:	adc	r0, r0, r0
   3f994:	subcs	r3, r3, r1, lsl #8
   3f998:	cmp	r3, r1, lsl #7
   3f99c:	adc	r0, r0, r0
   3f9a0:	subcs	r3, r3, r1, lsl #7
   3f9a4:	cmp	r3, r1, lsl #6
   3f9a8:	adc	r0, r0, r0
   3f9ac:	subcs	r3, r3, r1, lsl #6
   3f9b0:	cmp	r3, r1, lsl #5
   3f9b4:	adc	r0, r0, r0
   3f9b8:	subcs	r3, r3, r1, lsl #5
   3f9bc:	cmp	r3, r1, lsl #4
   3f9c0:	adc	r0, r0, r0
   3f9c4:	subcs	r3, r3, r1, lsl #4
   3f9c8:	cmp	r3, r1, lsl #3
   3f9cc:	adc	r0, r0, r0
   3f9d0:	subcs	r3, r3, r1, lsl #3
   3f9d4:	cmp	r3, r1, lsl #2
   3f9d8:	adc	r0, r0, r0
   3f9dc:	subcs	r3, r3, r1, lsl #2
   3f9e0:	cmp	r3, r1, lsl #1
   3f9e4:	adc	r0, r0, r0
   3f9e8:	subcs	r3, r3, r1, lsl #1
   3f9ec:	cmp	r3, r1
   3f9f0:	adc	r0, r0, r0
   3f9f4:	subcs	r3, r3, r1
   3f9f8:	cmp	ip, #0
   3f9fc:	rsbmi	r0, r0, #0
   3fa00:	bx	lr
   3fa04:	teq	ip, r0
   3fa08:	rsbmi	r0, r0, #0
   3fa0c:	bx	lr
   3fa10:	movcc	r0, #0
   3fa14:	asreq	r0, ip, #31
   3fa18:	orreq	r0, r0, #1
   3fa1c:	bx	lr
   3fa20:	clz	r2, r1
   3fa24:	rsb	r2, r2, #31
   3fa28:	cmp	ip, #0
   3fa2c:	lsr	r0, r3, r2
   3fa30:	rsbmi	r0, r0, #0
   3fa34:	bx	lr
   3fa38:	cmp	r0, #0
   3fa3c:	mvngt	r0, #-2147483648	; 0x80000000
   3fa40:	movlt	r0, #-2147483648	; 0x80000000
   3fa44:	b	3fea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c018>
   3fa48:	cmp	r1, #0
   3fa4c:	beq	3fa38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bbac>
   3fa50:	push	{r0, r1, lr}
   3fa54:	bl	3f830 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2b9a4>
   3fa58:	pop	{r1, r2, lr}
   3fa5c:	mul	r3, r2, r0
   3fa60:	sub	r1, r1, r3
   3fa64:	bx	lr
   3fa68:	eor	r1, r1, #-2147483648	; 0x80000000
   3fa6c:	b	3fa74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bbe8>
   3fa70:	eor	r3, r3, #-2147483648	; 0x80000000
   3fa74:	push	{r4, r5, lr}
   3fa78:	lsl	r4, r1, #1
   3fa7c:	lsl	r5, r3, #1
   3fa80:	teq	r4, r5
   3fa84:	teqeq	r0, r2
   3fa88:	orrsne	ip, r4, r0
   3fa8c:	orrsne	ip, r5, r2
   3fa90:	mvnsne	ip, r4, asr #21
   3fa94:	mvnsne	ip, r5, asr #21
   3fa98:	beq	3fc84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bdf8>
   3fa9c:	lsr	r4, r4, #21
   3faa0:	rsbs	r5, r4, r5, lsr #21
   3faa4:	rsblt	r5, r5, #0
   3faa8:	ble	3fac8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bc3c>
   3faac:	add	r4, r4, r5
   3fab0:	eor	r2, r0, r2
   3fab4:	eor	r3, r1, r3
   3fab8:	eor	r0, r2, r0
   3fabc:	eor	r1, r3, r1
   3fac0:	eor	r2, r0, r2
   3fac4:	eor	r3, r1, r3
   3fac8:	cmp	r5, #54	; 0x36
   3facc:	pophi	{r4, r5, pc}
   3fad0:	tst	r1, #-2147483648	; 0x80000000
   3fad4:	lsl	r1, r1, #12
   3fad8:	mov	ip, #1048576	; 0x100000
   3fadc:	orr	r1, ip, r1, lsr #12
   3fae0:	beq	3faec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bc60>
   3fae4:	rsbs	r0, r0, #0
   3fae8:	rsc	r1, r1, #0
   3faec:	tst	r3, #-2147483648	; 0x80000000
   3faf0:	lsl	r3, r3, #12
   3faf4:	orr	r3, ip, r3, lsr #12
   3faf8:	beq	3fb04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bc78>
   3fafc:	rsbs	r2, r2, #0
   3fb00:	rsc	r3, r3, #0
   3fb04:	teq	r4, r5
   3fb08:	beq	3fc6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bde0>
   3fb0c:	sub	r4, r4, #1
   3fb10:	rsbs	lr, r5, #32
   3fb14:	blt	3fb30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bca4>
   3fb18:	lsl	ip, r2, lr
   3fb1c:	adds	r0, r0, r2, lsr r5
   3fb20:	adc	r1, r1, #0
   3fb24:	adds	r0, r0, r3, lsl lr
   3fb28:	adcs	r1, r1, r3, asr r5
   3fb2c:	b	3fb4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bcc0>
   3fb30:	sub	r5, r5, #32
   3fb34:	add	lr, lr, #32
   3fb38:	cmp	r2, #1
   3fb3c:	lsl	ip, r3, lr
   3fb40:	orrcs	ip, ip, #2
   3fb44:	adds	r0, r0, r3, asr r5
   3fb48:	adcs	r1, r1, r3, asr #31
   3fb4c:	and	r5, r1, #-2147483648	; 0x80000000
   3fb50:	bpl	3fb60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bcd4>
   3fb54:	rsbs	ip, ip, #0
   3fb58:	rscs	r0, r0, #0
   3fb5c:	rsc	r1, r1, #0
   3fb60:	cmp	r1, #1048576	; 0x100000
   3fb64:	bcc	3fba4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bd18>
   3fb68:	cmp	r1, #2097152	; 0x200000
   3fb6c:	bcc	3fb8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bd00>
   3fb70:	lsrs	r1, r1, #1
   3fb74:	rrxs	r0, r0
   3fb78:	rrx	ip, ip
   3fb7c:	add	r4, r4, #1
   3fb80:	lsl	r2, r4, #21
   3fb84:	cmn	r2, #4194304	; 0x400000
   3fb88:	bcs	3fce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2be58>
   3fb8c:	cmp	ip, #-2147483648	; 0x80000000
   3fb90:	lsrseq	ip, r0, #1
   3fb94:	adcs	r0, r0, #0
   3fb98:	adc	r1, r1, r4, lsl #20
   3fb9c:	orr	r1, r1, r5
   3fba0:	pop	{r4, r5, pc}
   3fba4:	lsls	ip, ip, #1
   3fba8:	adcs	r0, r0, r0
   3fbac:	adc	r1, r1, r1
   3fbb0:	tst	r1, #1048576	; 0x100000
   3fbb4:	sub	r4, r4, #1
   3fbb8:	bne	3fb8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bd00>
   3fbbc:	teq	r1, #0
   3fbc0:	moveq	r1, r0
   3fbc4:	moveq	r0, #0
   3fbc8:	clz	r3, r1
   3fbcc:	addeq	r3, r3, #32
   3fbd0:	sub	r3, r3, #11
   3fbd4:	subs	r2, r3, #32
   3fbd8:	bge	3fbfc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bd70>
   3fbdc:	adds	r2, r2, #12
   3fbe0:	ble	3fbf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bd6c>
   3fbe4:	add	ip, r2, #20
   3fbe8:	rsb	r2, r2, #12
   3fbec:	lsl	r0, r1, ip
   3fbf0:	lsr	r1, r1, r2
   3fbf4:	b	3fc0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bd80>
   3fbf8:	add	r2, r2, #20
   3fbfc:	rsble	ip, r2, #32
   3fc00:	lsl	r1, r1, r2
   3fc04:	orrle	r1, r1, r0, lsr ip
   3fc08:	lslle	r0, r0, r2
   3fc0c:	subs	r4, r4, r3
   3fc10:	addge	r1, r1, r4, lsl #20
   3fc14:	orrge	r1, r1, r5
   3fc18:	popge	{r4, r5, pc}
   3fc1c:	mvn	r4, r4
   3fc20:	subs	r4, r4, #31
   3fc24:	bge	3fc60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bdd4>
   3fc28:	adds	r4, r4, #12
   3fc2c:	bgt	3fc48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bdbc>
   3fc30:	add	r4, r4, #20
   3fc34:	rsb	r2, r4, #32
   3fc38:	lsr	r0, r0, r4
   3fc3c:	orr	r0, r0, r1, lsl r2
   3fc40:	orr	r1, r5, r1, lsr r4
   3fc44:	pop	{r4, r5, pc}
   3fc48:	rsb	r4, r4, #12
   3fc4c:	rsb	r2, r4, #32
   3fc50:	lsr	r0, r0, r2
   3fc54:	orr	r0, r0, r1, lsl r4
   3fc58:	mov	r1, r5
   3fc5c:	pop	{r4, r5, pc}
   3fc60:	lsr	r0, r1, r4
   3fc64:	mov	r1, r5
   3fc68:	pop	{r4, r5, pc}
   3fc6c:	teq	r4, #0
   3fc70:	eor	r3, r3, #1048576	; 0x100000
   3fc74:	eoreq	r1, r1, #1048576	; 0x100000
   3fc78:	addeq	r4, r4, #1
   3fc7c:	subne	r5, r5, #1
   3fc80:	b	3fb0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bc80>
   3fc84:	mvns	ip, r4, asr #21
   3fc88:	mvnsne	ip, r5, asr #21
   3fc8c:	beq	3fcf4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2be68>
   3fc90:	teq	r4, r5
   3fc94:	teqeq	r0, r2
   3fc98:	beq	3fcac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2be20>
   3fc9c:	orrs	ip, r4, r0
   3fca0:	moveq	r1, r3
   3fca4:	moveq	r0, r2
   3fca8:	pop	{r4, r5, pc}
   3fcac:	teq	r1, r3
   3fcb0:	movne	r1, #0
   3fcb4:	movne	r0, #0
   3fcb8:	popne	{r4, r5, pc}
   3fcbc:	lsrs	ip, r4, #21
   3fcc0:	bne	3fcd4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2be48>
   3fcc4:	lsls	r0, r0, #1
   3fcc8:	adcs	r1, r1, r1
   3fccc:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3fcd0:	pop	{r4, r5, pc}
   3fcd4:	adds	r4, r4, #4194304	; 0x400000
   3fcd8:	addcc	r1, r1, #1048576	; 0x100000
   3fcdc:	popcc	{r4, r5, pc}
   3fce0:	and	r5, r1, #-2147483648	; 0x80000000
   3fce4:	orr	r1, r5, #2130706432	; 0x7f000000
   3fce8:	orr	r1, r1, #15728640	; 0xf00000
   3fcec:	mov	r0, #0
   3fcf0:	pop	{r4, r5, pc}
   3fcf4:	mvns	ip, r4, asr #21
   3fcf8:	movne	r1, r3
   3fcfc:	movne	r0, r2
   3fd00:	mvnseq	ip, r5, asr #21
   3fd04:	movne	r3, r1
   3fd08:	movne	r2, r0
   3fd0c:	orrs	r4, r0, r1, lsl #12
   3fd10:	orrseq	r5, r2, r3, lsl #12
   3fd14:	teqeq	r1, r3
   3fd18:	orrne	r1, r1, #524288	; 0x80000
   3fd1c:	pop	{r4, r5, pc}
   3fd20:	teq	r0, #0
   3fd24:	moveq	r1, #0
   3fd28:	bxeq	lr
   3fd2c:	push	{r4, r5, lr}
   3fd30:	mov	r4, #1024	; 0x400
   3fd34:	add	r4, r4, #50	; 0x32
   3fd38:	mov	r5, #0
   3fd3c:	mov	r1, #0
   3fd40:	b	3fbbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bd30>
   3fd44:	teq	r0, #0
   3fd48:	moveq	r1, #0
   3fd4c:	bxeq	lr
   3fd50:	push	{r4, r5, lr}
   3fd54:	mov	r4, #1024	; 0x400
   3fd58:	add	r4, r4, #50	; 0x32
   3fd5c:	ands	r5, r0, #-2147483648	; 0x80000000
   3fd60:	rsbmi	r0, r0, #0
   3fd64:	mov	r1, #0
   3fd68:	b	3fbbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bd30>
   3fd6c:	lsls	r2, r0, #1
   3fd70:	asr	r1, r2, #3
   3fd74:	rrx	r1, r1
   3fd78:	lsl	r0, r2, #28
   3fd7c:	andsne	r3, r2, #-16777216	; 0xff000000
   3fd80:	teqne	r3, #-16777216	; 0xff000000
   3fd84:	eorne	r1, r1, #939524096	; 0x38000000
   3fd88:	bxne	lr
   3fd8c:	teq	r2, #0
   3fd90:	teqne	r3, #-16777216	; 0xff000000
   3fd94:	bxeq	lr
   3fd98:	push	{r4, r5, lr}
   3fd9c:	mov	r4, #896	; 0x380
   3fda0:	and	r5, r1, #-2147483648	; 0x80000000
   3fda4:	bic	r1, r1, #-2147483648	; 0x80000000
   3fda8:	b	3fbbc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bd30>
   3fdac:	orrs	r2, r0, r1
   3fdb0:	bxeq	lr
   3fdb4:	push	{r4, r5, lr}
   3fdb8:	mov	r5, #0
   3fdbc:	b	3fddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bf50>
   3fdc0:	orrs	r2, r0, r1
   3fdc4:	bxeq	lr
   3fdc8:	push	{r4, r5, lr}
   3fdcc:	ands	r5, r1, #-2147483648	; 0x80000000
   3fdd0:	bpl	3fddc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bf50>
   3fdd4:	rsbs	r0, r0, #0
   3fdd8:	rsc	r1, r1, #0
   3fddc:	mov	r4, #1024	; 0x400
   3fde0:	add	r4, r4, #50	; 0x32
   3fde4:	lsrs	ip, r1, #22
   3fde8:	beq	3fb60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bcd4>
   3fdec:	mov	r2, #3
   3fdf0:	lsrs	ip, ip, #3
   3fdf4:	addne	r2, r2, #3
   3fdf8:	lsrs	ip, ip, #3
   3fdfc:	addne	r2, r2, #3
   3fe00:	add	r2, r2, ip, lsr #3
   3fe04:	rsb	r3, r2, #32
   3fe08:	lsl	ip, r0, r3
   3fe0c:	lsr	r0, r0, r2
   3fe10:	orr	r0, r0, r1, lsl r3
   3fe14:	lsr	r1, r1, r2
   3fe18:	add	r4, r4, r2
   3fe1c:	b	3fb60 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bcd4>
   3fe20:	cmp	r3, #0
   3fe24:	cmpeq	r2, #0
   3fe28:	bne	3fe4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bfc0>
   3fe2c:	cmp	r1, #0
   3fe30:	movlt	r1, #-2147483648	; 0x80000000
   3fe34:	movlt	r0, #0
   3fe38:	blt	3fe48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bfbc>
   3fe3c:	cmpeq	r0, #0
   3fe40:	mvnne	r1, #-2147483648	; 0x80000000
   3fe44:	mvnne	r0, #0
   3fe48:	b	3fea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c018>
   3fe4c:	sub	sp, sp, #8
   3fe50:	push	{sp, lr}
   3fe54:	bl	3feb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c028>
   3fe58:	ldr	lr, [sp, #4]
   3fe5c:	add	sp, sp, #8
   3fe60:	pop	{r2, r3}
   3fe64:	bx	lr
   3fe68:	cmp	r3, #0
   3fe6c:	cmpeq	r2, #0
   3fe70:	bne	3fe88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2bffc>
   3fe74:	cmp	r1, #0
   3fe78:	cmpeq	r0, #0
   3fe7c:	mvnne	r1, #0
   3fe80:	mvnne	r0, #0
   3fe84:	b	3fea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c018>
   3fe88:	sub	sp, sp, #8
   3fe8c:	push	{sp, lr}
   3fe90:	bl	3fef0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c064>
   3fe94:	ldr	lr, [sp, #4]
   3fe98:	add	sp, sp, #8
   3fe9c:	pop	{r2, r3}
   3fea0:	bx	lr
   3fea4:	push	{r1, lr}
   3fea8:	mov	r0, #8
   3feac:	bl	1343c <raise@plt>
   3feb0:	pop	{r1, pc}
   3feb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3feb8:	mov	r8, r2
   3febc:	mov	r6, r0
   3fec0:	mov	r7, r1
   3fec4:	mov	sl, r3
   3fec8:	ldr	r9, [sp, #32]
   3fecc:	bl	3ff2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c0a0>
   3fed0:	umull	r4, r5, r8, r0
   3fed4:	mul	r8, r8, r1
   3fed8:	mla	r2, r0, sl, r8
   3fedc:	add	r5, r2, r5
   3fee0:	subs	r4, r6, r4
   3fee4:	sbc	r5, r7, r5
   3fee8:	strd	r4, [r9]
   3feec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3fef0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   3fef4:	mov	r8, r2
   3fef8:	mov	r6, r0
   3fefc:	mov	r7, r1
   3ff00:	mov	r5, r3
   3ff04:	ldr	r9, [sp, #32]
   3ff08:	bl	403b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c52c>
   3ff0c:	mul	r3, r0, r5
   3ff10:	umull	r4, r5, r0, r8
   3ff14:	mla	r8, r8, r1, r3
   3ff18:	add	r5, r8, r5
   3ff1c:	subs	r4, r6, r4
   3ff20:	sbc	r5, r7, r5
   3ff24:	strd	r4, [r9]
   3ff28:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   3ff2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ff30:	rsbs	r4, r0, #0
   3ff34:	rsc	r5, r1, #0
   3ff38:	cmp	r1, #0
   3ff3c:	mvn	r6, #0
   3ff40:	sub	sp, sp, #12
   3ff44:	movge	r4, r0
   3ff48:	movge	r5, r1
   3ff4c:	movge	r6, #0
   3ff50:	cmp	r3, #0
   3ff54:	blt	4018c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c300>
   3ff58:	cmp	r3, #0
   3ff5c:	mov	sl, r4
   3ff60:	mov	ip, r5
   3ff64:	mov	r0, r2
   3ff68:	mov	r1, r3
   3ff6c:	mov	r8, r2
   3ff70:	mov	r7, r4
   3ff74:	mov	r9, r5
   3ff78:	bne	40070 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1e4>
   3ff7c:	cmp	r2, r5
   3ff80:	bls	400ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c220>
   3ff84:	clz	r3, r2
   3ff88:	cmp	r3, #0
   3ff8c:	rsbne	r2, r3, #32
   3ff90:	lslne	r8, r0, r3
   3ff94:	lsrne	r2, r4, r2
   3ff98:	lslne	r7, r4, r3
   3ff9c:	orrne	r9, r2, r5, lsl r3
   3ffa0:	lsr	r4, r8, #16
   3ffa4:	uxth	sl, r8
   3ffa8:	mov	r1, r4
   3ffac:	mov	r0, r9
   3ffb0:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   3ffb4:	mov	r1, r4
   3ffb8:	mov	fp, r0
   3ffbc:	mov	r0, r9
   3ffc0:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   3ffc4:	mul	r0, sl, fp
   3ffc8:	lsr	r2, r7, #16
   3ffcc:	orr	r1, r2, r1, lsl #16
   3ffd0:	cmp	r0, r1
   3ffd4:	bls	3fff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c16c>
   3ffd8:	adds	r1, r1, r8
   3ffdc:	sub	r3, fp, #1
   3ffe0:	bcs	3fff4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c168>
   3ffe4:	cmp	r0, r1
   3ffe8:	subhi	fp, fp, #2
   3ffec:	addhi	r1, r1, r8
   3fff0:	bhi	3fff8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c16c>
   3fff4:	mov	fp, r3
   3fff8:	rsb	r9, r0, r1
   3fffc:	mov	r1, r4
   40000:	uxth	r7, r7
   40004:	mov	r0, r9
   40008:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   4000c:	mov	r1, r4
   40010:	mov	r5, r0
   40014:	mov	r0, r9
   40018:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   4001c:	mul	sl, sl, r5
   40020:	orr	r1, r7, r1, lsl #16
   40024:	cmp	sl, r1
   40028:	bls	40048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1bc>
   4002c:	adds	r8, r1, r8
   40030:	sub	r3, r5, #1
   40034:	bcs	40044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1b8>
   40038:	cmp	sl, r8
   4003c:	subhi	r5, r5, #2
   40040:	bhi	40048 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1bc>
   40044:	mov	r5, r3
   40048:	orr	r3, r5, fp, lsl #16
   4004c:	mov	r4, #0
   40050:	cmp	r6, #0
   40054:	mov	r0, r3
   40058:	mov	r1, r4
   4005c:	beq	40068 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1dc>
   40060:	rsbs	r0, r0, #0
   40064:	rsc	r1, r1, #0
   40068:	add	sp, sp, #12
   4006c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40070:	cmp	r3, r5
   40074:	movhi	r4, #0
   40078:	movhi	r3, r4
   4007c:	bhi	40050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1c4>
   40080:	clz	r5, r1
   40084:	cmp	r5, #0
   40088:	bne	40278 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c3ec>
   4008c:	cmp	r1, ip
   40090:	cmpcs	r2, sl
   40094:	movhi	r4, #0
   40098:	movls	r4, #1
   4009c:	movls	r3, #1
   400a0:	movls	r4, r5
   400a4:	movhi	r3, r4
   400a8:	b	40050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1c4>
   400ac:	cmp	r2, #0
   400b0:	bne	400c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c238>
   400b4:	mov	r1, r2
   400b8:	mov	r0, #1
   400bc:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   400c0:	mov	r8, r0
   400c4:	clz	r3, r8
   400c8:	cmp	r3, #0
   400cc:	bne	4019c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c310>
   400d0:	rsb	r9, r8, r9
   400d4:	lsr	r5, r8, #16
   400d8:	uxth	sl, r8
   400dc:	mov	r4, #1
   400e0:	mov	r1, r5
   400e4:	mov	r0, r9
   400e8:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   400ec:	mov	r1, r5
   400f0:	mov	fp, r0
   400f4:	mov	r0, r9
   400f8:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   400fc:	mul	r0, sl, fp
   40100:	lsr	r2, r7, #16
   40104:	orr	r1, r2, r1, lsl #16
   40108:	cmp	r0, r1
   4010c:	bls	4012c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c2a0>
   40110:	adds	r1, r1, r8
   40114:	sub	r3, fp, #1
   40118:	bcs	40398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c50c>
   4011c:	cmp	r0, r1
   40120:	subhi	fp, fp, #2
   40124:	addhi	r1, r1, r8
   40128:	bls	40398 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c50c>
   4012c:	rsb	r2, r0, r1
   40130:	mov	r1, r5
   40134:	str	r2, [sp]
   40138:	uxth	r7, r7
   4013c:	mov	r0, r2
   40140:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40144:	ldr	r2, [sp]
   40148:	mov	r1, r5
   4014c:	mov	r9, r0
   40150:	mov	r0, r2
   40154:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40158:	mul	sl, sl, r9
   4015c:	orr	r1, r7, r1, lsl #16
   40160:	cmp	sl, r1
   40164:	bls	40184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c2f8>
   40168:	adds	r8, r1, r8
   4016c:	sub	r3, r9, #1
   40170:	bcs	40180 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c2f4>
   40174:	cmp	sl, r8
   40178:	subhi	r9, r9, #2
   4017c:	bhi	40184 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c2f8>
   40180:	mov	r9, r3
   40184:	orr	r3, r9, fp, lsl #16
   40188:	b	40050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1c4>
   4018c:	mvn	r6, r6
   40190:	rsbs	r2, r2, #0
   40194:	rsc	r3, r3, #0
   40198:	b	3ff58 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c0cc>
   4019c:	lsl	r8, r8, r3
   401a0:	rsb	fp, r3, #32
   401a4:	lsr	r4, r9, fp
   401a8:	lsr	fp, r7, fp
   401ac:	lsr	r5, r8, #16
   401b0:	orr	fp, fp, r9, lsl r3
   401b4:	mov	r0, r4
   401b8:	lsl	r7, r7, r3
   401bc:	mov	r1, r5
   401c0:	uxth	sl, r8
   401c4:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   401c8:	mov	r1, r5
   401cc:	mov	r3, r0
   401d0:	mov	r0, r4
   401d4:	str	r3, [sp]
   401d8:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   401dc:	ldr	r3, [sp]
   401e0:	lsr	r2, fp, #16
   401e4:	mul	r0, sl, r3
   401e8:	orr	r1, r2, r1, lsl #16
   401ec:	cmp	r0, r1
   401f0:	bls	40210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c384>
   401f4:	adds	r1, r1, r8
   401f8:	sub	r2, r3, #1
   401fc:	bcs	403b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c524>
   40200:	cmp	r0, r1
   40204:	subhi	r3, r3, #2
   40208:	addhi	r1, r1, r8
   4020c:	bls	403b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c524>
   40210:	rsb	r9, r0, r1
   40214:	mov	r1, r5
   40218:	str	r3, [sp]
   4021c:	uxth	fp, fp
   40220:	mov	r0, r9
   40224:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40228:	mov	r1, r5
   4022c:	mov	r4, r0
   40230:	mov	r0, r9
   40234:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40238:	mul	r9, sl, r4
   4023c:	ldr	r3, [sp]
   40240:	orr	r1, fp, r1, lsl #16
   40244:	cmp	r9, r1
   40248:	bls	4026c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c3e0>
   4024c:	adds	r1, r1, r8
   40250:	sub	r2, r4, #1
   40254:	bcs	40268 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c3dc>
   40258:	cmp	r9, r1
   4025c:	subhi	r4, r4, #2
   40260:	addhi	r1, r1, r8
   40264:	bhi	4026c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c3e0>
   40268:	mov	r4, r2
   4026c:	rsb	r9, r9, r1
   40270:	orr	r4, r4, r3, lsl #16
   40274:	b	400e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c254>
   40278:	rsb	sl, r5, #32
   4027c:	lsl	r3, r2, r5
   40280:	lsr	r0, r2, sl
   40284:	lsr	r2, ip, sl
   40288:	orr	r4, r0, r1, lsl r5
   4028c:	lsr	sl, r7, sl
   40290:	mov	r0, r2
   40294:	orr	sl, sl, ip, lsl r5
   40298:	lsr	r9, r4, #16
   4029c:	str	r3, [sp, #4]
   402a0:	str	r2, [sp]
   402a4:	uxth	fp, r4
   402a8:	mov	r1, r9
   402ac:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   402b0:	ldr	r2, [sp]
   402b4:	mov	r1, r9
   402b8:	mov	r8, r0
   402bc:	mov	r0, r2
   402c0:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   402c4:	mul	r0, fp, r8
   402c8:	lsr	r2, sl, #16
   402cc:	orr	r1, r2, r1, lsl #16
   402d0:	cmp	r0, r1
   402d4:	bls	402f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c468>
   402d8:	adds	r1, r1, r4
   402dc:	sub	r2, r8, #1
   402e0:	bcs	403a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c51c>
   402e4:	cmp	r0, r1
   402e8:	subhi	r8, r8, #2
   402ec:	addhi	r1, r1, r4
   402f0:	bls	403a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c51c>
   402f4:	rsb	ip, r0, r1
   402f8:	mov	r1, r9
   402fc:	str	ip, [sp]
   40300:	mov	r0, ip
   40304:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40308:	ldr	ip, [sp]
   4030c:	mov	r1, r9
   40310:	mov	r2, r0
   40314:	mov	r0, ip
   40318:	str	r2, [sp]
   4031c:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40320:	ldr	r2, [sp]
   40324:	uxth	ip, sl
   40328:	mul	fp, fp, r2
   4032c:	orr	ip, ip, r1, lsl #16
   40330:	cmp	fp, ip
   40334:	bls	40354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c4c8>
   40338:	adds	ip, ip, r4
   4033c:	sub	r1, r2, #1
   40340:	bcs	403a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c514>
   40344:	cmp	fp, ip
   40348:	subhi	r2, r2, #2
   4034c:	addhi	ip, ip, r4
   40350:	bls	403a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c514>
   40354:	ldr	r0, [sp, #4]
   40358:	orr	r1, r2, r8, lsl #16
   4035c:	rsb	fp, fp, ip
   40360:	umull	r2, r3, r1, r0
   40364:	cmp	fp, r3
   40368:	bcc	4038c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c500>
   4036c:	movne	r4, #0
   40370:	moveq	r4, #1
   40374:	cmp	r2, r7, lsl r5
   40378:	movls	r4, #0
   4037c:	andhi	r4, r4, #1
   40380:	cmp	r4, #0
   40384:	moveq	r3, r1
   40388:	beq	40050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1c4>
   4038c:	sub	r3, r1, #1
   40390:	mov	r4, #0
   40394:	b	40050 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c1c4>
   40398:	mov	fp, r3
   4039c:	b	4012c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c2a0>
   403a0:	mov	r2, r1
   403a4:	b	40354 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c4c8>
   403a8:	mov	r8, r2
   403ac:	b	402f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c468>
   403b0:	mov	r3, r2
   403b4:	b	40210 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c384>
   403b8:	cmp	r3, #0
   403bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   403c0:	mov	r6, r0
   403c4:	sub	sp, sp, #12
   403c8:	mov	r5, r1
   403cc:	mov	r7, r0
   403d0:	mov	r4, r2
   403d4:	mov	r8, r1
   403d8:	bne	404b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c62c>
   403dc:	cmp	r2, r1
   403e0:	bls	404f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c668>
   403e4:	clz	r3, r2
   403e8:	cmp	r3, #0
   403ec:	rsbne	r8, r3, #32
   403f0:	lslne	r4, r2, r3
   403f4:	lsrne	r8, r0, r8
   403f8:	lslne	r7, r0, r3
   403fc:	orrne	r8, r8, r1, lsl r3
   40400:	lsr	r5, r4, #16
   40404:	uxth	sl, r4
   40408:	mov	r1, r5
   4040c:	mov	r0, r8
   40410:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40414:	mov	r1, r5
   40418:	mov	r9, r0
   4041c:	mov	r0, r8
   40420:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40424:	mul	r0, sl, r9
   40428:	lsr	r3, r7, #16
   4042c:	orr	r1, r3, r1, lsl #16
   40430:	cmp	r0, r1
   40434:	bls	40458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c5cc>
   40438:	adds	r1, r1, r4
   4043c:	sub	r2, r9, #1
   40440:	bcs	40454 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c5c8>
   40444:	cmp	r0, r1
   40448:	subhi	r9, r9, #2
   4044c:	addhi	r1, r1, r4
   40450:	bhi	40458 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c5cc>
   40454:	mov	r9, r2
   40458:	rsb	r8, r0, r1
   4045c:	mov	r1, r5
   40460:	uxth	r7, r7
   40464:	mov	r0, r8
   40468:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   4046c:	mov	r1, r5
   40470:	mov	r6, r0
   40474:	mov	r0, r8
   40478:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   4047c:	mul	sl, sl, r6
   40480:	orr	r1, r7, r1, lsl #16
   40484:	cmp	sl, r1
   40488:	bls	404a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c618>
   4048c:	adds	r4, r1, r4
   40490:	sub	r3, r6, #1
   40494:	bcs	407a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c914>
   40498:	cmp	sl, r4
   4049c:	subhi	r6, r6, #2
   404a0:	bls	407a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c914>
   404a4:	orr	r0, r6, r9, lsl #16
   404a8:	mov	r6, #0
   404ac:	mov	r1, r6
   404b0:	add	sp, sp, #12
   404b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   404b8:	cmp	r3, r1
   404bc:	movhi	r6, #0
   404c0:	movhi	r0, r6
   404c4:	bhi	404ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c620>
   404c8:	clz	r7, r3
   404cc:	cmp	r7, #0
   404d0:	bne	405d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c744>
   404d4:	cmp	r3, r1
   404d8:	cmpcs	r2, r6
   404dc:	movhi	r6, #0
   404e0:	movls	r6, #1
   404e4:	movls	r0, #1
   404e8:	movls	r6, r7
   404ec:	movhi	r0, r6
   404f0:	b	404ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c620>
   404f4:	cmp	r2, #0
   404f8:	bne	4050c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c680>
   404fc:	mov	r1, r2
   40500:	mov	r0, #1
   40504:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40508:	mov	r4, r0
   4050c:	clz	r3, r4
   40510:	cmp	r3, #0
   40514:	bne	406cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c840>
   40518:	rsb	r5, r4, r5
   4051c:	lsr	r8, r4, #16
   40520:	uxth	sl, r4
   40524:	mov	r6, #1
   40528:	mov	r1, r8
   4052c:	mov	r0, r5
   40530:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40534:	mov	r1, r8
   40538:	mov	r9, r0
   4053c:	mov	r0, r5
   40540:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40544:	mul	r0, sl, r9
   40548:	lsr	r3, r7, #16
   4054c:	orr	r1, r3, r1, lsl #16
   40550:	cmp	r0, r1
   40554:	bls	40574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c6e8>
   40558:	adds	r1, r1, r4
   4055c:	sub	r2, r9, #1
   40560:	bcs	407a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c91c>
   40564:	cmp	r0, r1
   40568:	subhi	r9, r9, #2
   4056c:	addhi	r1, r1, r4
   40570:	bls	407a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c91c>
   40574:	rsb	fp, r0, r1
   40578:	mov	r1, r8
   4057c:	uxth	r7, r7
   40580:	mov	r0, fp
   40584:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40588:	mov	r1, r8
   4058c:	mov	r5, r0
   40590:	mov	r0, fp
   40594:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40598:	mul	sl, sl, r5
   4059c:	orr	r1, r7, r1, lsl #16
   405a0:	cmp	sl, r1
   405a4:	bls	405c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c734>
   405a8:	adds	r4, r1, r4
   405ac:	sub	r3, r5, #1
   405b0:	bcs	407b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c924>
   405b4:	cmp	sl, r4
   405b8:	subhi	r5, r5, #2
   405bc:	bls	407b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c924>
   405c0:	orr	r0, r5, r9, lsl #16
   405c4:	mov	r1, r6
   405c8:	add	sp, sp, #12
   405cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   405d0:	rsb	r1, r7, #32
   405d4:	lsl	r0, r2, r7
   405d8:	lsr	r2, r2, r1
   405dc:	lsr	fp, r5, r1
   405e0:	orr	r8, r2, r3, lsl r7
   405e4:	lsr	r1, r6, r1
   405e8:	str	r0, [sp, #4]
   405ec:	orr	r5, r1, r5, lsl r7
   405f0:	lsr	r9, r8, #16
   405f4:	mov	r0, fp
   405f8:	uxth	sl, r8
   405fc:	mov	r1, r9
   40600:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40604:	mov	r1, r9
   40608:	mov	r4, r0
   4060c:	mov	r0, fp
   40610:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40614:	mul	r0, sl, r4
   40618:	lsr	ip, r5, #16
   4061c:	orr	r1, ip, r1, lsl #16
   40620:	cmp	r0, r1
   40624:	bls	40638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c7ac>
   40628:	adds	r1, r1, r8
   4062c:	sub	r2, r4, #1
   40630:	bcc	407cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c940>
   40634:	mov	r4, r2
   40638:	rsb	ip, r0, r1
   4063c:	mov	r1, r9
   40640:	str	ip, [sp]
   40644:	uxth	r5, r5
   40648:	mov	r0, ip
   4064c:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40650:	ldr	ip, [sp]
   40654:	mov	r1, r9
   40658:	mov	fp, r0
   4065c:	mov	r0, ip
   40660:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40664:	mul	sl, sl, fp
   40668:	orr	r1, r5, r1, lsl #16
   4066c:	cmp	sl, r1
   40670:	bls	40684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c7f8>
   40674:	adds	r1, r1, r8
   40678:	sub	r2, fp, #1
   4067c:	bcc	407b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c92c>
   40680:	mov	fp, r2
   40684:	ldr	r3, [sp, #4]
   40688:	orr	r0, fp, r4, lsl #16
   4068c:	rsb	sl, sl, r1
   40690:	umull	r4, r5, r0, r3
   40694:	cmp	sl, r5
   40698:	bcc	406b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c82c>
   4069c:	movne	r3, #0
   406a0:	moveq	r3, #1
   406a4:	cmp	r4, r6, lsl r7
   406a8:	movls	r6, #0
   406ac:	andhi	r6, r3, #1
   406b0:	cmp	r6, #0
   406b4:	beq	404ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c620>
   406b8:	mov	r6, #0
   406bc:	sub	r0, r0, #1
   406c0:	mov	r1, r6
   406c4:	add	sp, sp, #12
   406c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   406cc:	lsl	r4, r4, r3
   406d0:	rsb	r9, r3, #32
   406d4:	lsr	r2, r5, r9
   406d8:	lsr	r9, r6, r9
   406dc:	lsr	r8, r4, #16
   406e0:	orr	r9, r9, r5, lsl r3
   406e4:	mov	r0, r2
   406e8:	lsl	r7, r6, r3
   406ec:	mov	r1, r8
   406f0:	str	r2, [sp]
   406f4:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   406f8:	ldr	r2, [sp]
   406fc:	mov	r1, r8
   40700:	uxth	sl, r4
   40704:	mov	fp, r0
   40708:	mov	r0, r2
   4070c:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40710:	mul	r0, sl, fp
   40714:	lsr	r3, r9, #16
   40718:	orr	r1, r3, r1, lsl #16
   4071c:	cmp	r0, r1
   40720:	bls	40740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c8b4>
   40724:	adds	r1, r1, r4
   40728:	sub	r3, fp, #1
   4072c:	bcs	407e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c954>
   40730:	cmp	r0, r1
   40734:	subhi	fp, fp, #2
   40738:	addhi	r1, r1, r4
   4073c:	bls	407e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c954>
   40740:	rsb	r5, r0, r1
   40744:	mov	r1, r8
   40748:	uxth	r9, r9
   4074c:	mov	r0, r5
   40750:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   40754:	mov	r1, r8
   40758:	mov	r6, r0
   4075c:	mov	r0, r5
   40760:	bl	409d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb48>
   40764:	mul	r5, sl, r6
   40768:	orr	r1, r9, r1, lsl #16
   4076c:	cmp	r5, r1
   40770:	bls	40794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c908>
   40774:	adds	r1, r1, r4
   40778:	sub	r3, r6, #1
   4077c:	bcs	40790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c904>
   40780:	cmp	r5, r1
   40784:	subhi	r6, r6, #2
   40788:	addhi	r1, r1, r4
   4078c:	bhi	40794 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c908>
   40790:	mov	r6, r3
   40794:	rsb	r5, r5, r1
   40798:	orr	r6, r6, fp, lsl #16
   4079c:	b	40528 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c69c>
   407a0:	mov	r6, r3
   407a4:	b	404a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c618>
   407a8:	mov	r9, r2
   407ac:	b	40574 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c6e8>
   407b0:	mov	r5, r3
   407b4:	b	405c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c734>
   407b8:	cmp	sl, r1
   407bc:	subhi	fp, fp, #2
   407c0:	addhi	r1, r1, r8
   407c4:	bhi	40684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c7f8>
   407c8:	b	40680 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c7f4>
   407cc:	cmp	r0, r1
   407d0:	subhi	r4, r4, #2
   407d4:	addhi	r1, r1, r8
   407d8:	bhi	40638 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c7ac>
   407dc:	b	40634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c7a8>
   407e0:	mov	fp, r3
   407e4:	b	40740 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c8b4>
   407e8:	subs	r2, r1, #1
   407ec:	bxeq	lr
   407f0:	bcc	409c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb3c>
   407f4:	cmp	r0, r1
   407f8:	bls	409ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb20>
   407fc:	tst	r1, r2
   40800:	beq	409b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb2c>
   40804:	clz	r3, r0
   40808:	clz	r2, r1
   4080c:	sub	r3, r2, r3
   40810:	rsbs	r3, r3, #31
   40814:	addne	r3, r3, r3, lsl #1
   40818:	mov	r2, #0
   4081c:	addne	pc, pc, r3, lsl #2
   40820:	nop	{0}
   40824:	cmp	r0, r1, lsl #31
   40828:	adc	r2, r2, r2
   4082c:	subcs	r0, r0, r1, lsl #31
   40830:	cmp	r0, r1, lsl #30
   40834:	adc	r2, r2, r2
   40838:	subcs	r0, r0, r1, lsl #30
   4083c:	cmp	r0, r1, lsl #29
   40840:	adc	r2, r2, r2
   40844:	subcs	r0, r0, r1, lsl #29
   40848:	cmp	r0, r1, lsl #28
   4084c:	adc	r2, r2, r2
   40850:	subcs	r0, r0, r1, lsl #28
   40854:	cmp	r0, r1, lsl #27
   40858:	adc	r2, r2, r2
   4085c:	subcs	r0, r0, r1, lsl #27
   40860:	cmp	r0, r1, lsl #26
   40864:	adc	r2, r2, r2
   40868:	subcs	r0, r0, r1, lsl #26
   4086c:	cmp	r0, r1, lsl #25
   40870:	adc	r2, r2, r2
   40874:	subcs	r0, r0, r1, lsl #25
   40878:	cmp	r0, r1, lsl #24
   4087c:	adc	r2, r2, r2
   40880:	subcs	r0, r0, r1, lsl #24
   40884:	cmp	r0, r1, lsl #23
   40888:	adc	r2, r2, r2
   4088c:	subcs	r0, r0, r1, lsl #23
   40890:	cmp	r0, r1, lsl #22
   40894:	adc	r2, r2, r2
   40898:	subcs	r0, r0, r1, lsl #22
   4089c:	cmp	r0, r1, lsl #21
   408a0:	adc	r2, r2, r2
   408a4:	subcs	r0, r0, r1, lsl #21
   408a8:	cmp	r0, r1, lsl #20
   408ac:	adc	r2, r2, r2
   408b0:	subcs	r0, r0, r1, lsl #20
   408b4:	cmp	r0, r1, lsl #19
   408b8:	adc	r2, r2, r2
   408bc:	subcs	r0, r0, r1, lsl #19
   408c0:	cmp	r0, r1, lsl #18
   408c4:	adc	r2, r2, r2
   408c8:	subcs	r0, r0, r1, lsl #18
   408cc:	cmp	r0, r1, lsl #17
   408d0:	adc	r2, r2, r2
   408d4:	subcs	r0, r0, r1, lsl #17
   408d8:	cmp	r0, r1, lsl #16
   408dc:	adc	r2, r2, r2
   408e0:	subcs	r0, r0, r1, lsl #16
   408e4:	cmp	r0, r1, lsl #15
   408e8:	adc	r2, r2, r2
   408ec:	subcs	r0, r0, r1, lsl #15
   408f0:	cmp	r0, r1, lsl #14
   408f4:	adc	r2, r2, r2
   408f8:	subcs	r0, r0, r1, lsl #14
   408fc:	cmp	r0, r1, lsl #13
   40900:	adc	r2, r2, r2
   40904:	subcs	r0, r0, r1, lsl #13
   40908:	cmp	r0, r1, lsl #12
   4090c:	adc	r2, r2, r2
   40910:	subcs	r0, r0, r1, lsl #12
   40914:	cmp	r0, r1, lsl #11
   40918:	adc	r2, r2, r2
   4091c:	subcs	r0, r0, r1, lsl #11
   40920:	cmp	r0, r1, lsl #10
   40924:	adc	r2, r2, r2
   40928:	subcs	r0, r0, r1, lsl #10
   4092c:	cmp	r0, r1, lsl #9
   40930:	adc	r2, r2, r2
   40934:	subcs	r0, r0, r1, lsl #9
   40938:	cmp	r0, r1, lsl #8
   4093c:	adc	r2, r2, r2
   40940:	subcs	r0, r0, r1, lsl #8
   40944:	cmp	r0, r1, lsl #7
   40948:	adc	r2, r2, r2
   4094c:	subcs	r0, r0, r1, lsl #7
   40950:	cmp	r0, r1, lsl #6
   40954:	adc	r2, r2, r2
   40958:	subcs	r0, r0, r1, lsl #6
   4095c:	cmp	r0, r1, lsl #5
   40960:	adc	r2, r2, r2
   40964:	subcs	r0, r0, r1, lsl #5
   40968:	cmp	r0, r1, lsl #4
   4096c:	adc	r2, r2, r2
   40970:	subcs	r0, r0, r1, lsl #4
   40974:	cmp	r0, r1, lsl #3
   40978:	adc	r2, r2, r2
   4097c:	subcs	r0, r0, r1, lsl #3
   40980:	cmp	r0, r1, lsl #2
   40984:	adc	r2, r2, r2
   40988:	subcs	r0, r0, r1, lsl #2
   4098c:	cmp	r0, r1, lsl #1
   40990:	adc	r2, r2, r2
   40994:	subcs	r0, r0, r1, lsl #1
   40998:	cmp	r0, r1
   4099c:	adc	r2, r2, r2
   409a0:	subcs	r0, r0, r1
   409a4:	mov	r0, r2
   409a8:	bx	lr
   409ac:	moveq	r0, #1
   409b0:	movne	r0, #0
   409b4:	bx	lr
   409b8:	clz	r2, r1
   409bc:	rsb	r2, r2, #31
   409c0:	lsr	r0, r0, r2
   409c4:	bx	lr
   409c8:	cmp	r0, #0
   409cc:	mvnne	r0, #0
   409d0:	b	3fea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c018>
   409d4:	cmp	r1, #0
   409d8:	beq	409c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb3c>
   409dc:	push	{r0, r1, lr}
   409e0:	bl	407e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2c95c>
   409e4:	pop	{r1, r2, lr}
   409e8:	mul	r3, r2, r0
   409ec:	sub	r1, r1, r3
   409f0:	bx	lr
   409f4:	ldr	r3, [r0]
   409f8:	tst	r3, #1073741824	; 0x40000000
   409fc:	orrne	r3, r3, #-2147483648	; 0x80000000
   40a00:	biceq	r3, r3, #-2147483648	; 0x80000000
   40a04:	add	r0, r0, r3
   40a08:	bx	lr
   40a0c:	cmp	r1, #0
   40a10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40a14:	mov	r6, r0
   40a18:	sub	sp, sp, #12
   40a1c:	mov	r9, r2
   40a20:	beq	40aa4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc18>
   40a24:	sub	r1, r1, #1
   40a28:	mov	r7, #0
   40a2c:	str	r1, [sp, #4]
   40a30:	mov	r8, r1
   40a34:	add	r4, r7, r8
   40a38:	add	r4, r4, r4, lsr #31
   40a3c:	asr	r4, r4, #1
   40a40:	lsl	r5, r4, #3
   40a44:	add	fp, r6, r5
   40a48:	mov	r0, fp
   40a4c:	bl	409f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb68>
   40a50:	ldr	r3, [sp, #4]
   40a54:	cmp	r3, r4
   40a58:	mov	sl, r0
   40a5c:	add	r0, r5, #8
   40a60:	add	r0, r6, r0
   40a64:	beq	40ab4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc28>
   40a68:	bl	409f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb68>
   40a6c:	cmp	sl, r9
   40a70:	sub	r0, r0, #1
   40a74:	bls	40a94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc08>
   40a78:	cmp	r4, r7
   40a7c:	sub	r8, r4, #1
   40a80:	bne	40a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cba8>
   40a84:	mov	fp, #0
   40a88:	mov	r0, fp
   40a8c:	add	sp, sp, #12
   40a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40a94:	cmp	r0, r9
   40a98:	add	r7, r4, #1
   40a9c:	bcc	40a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cba8>
   40aa0:	b	40a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cbfc>
   40aa4:	mov	fp, r1
   40aa8:	mov	r0, fp
   40aac:	add	sp, sp, #12
   40ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40ab4:	cmp	sl, r9
   40ab8:	bhi	40a78 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cbec>
   40abc:	b	40a88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cbfc>
   40ac0:	cmp	r0, #1
   40ac4:	beq	40af8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc6c>
   40ac8:	cmp	r0, #2
   40acc:	beq	40aec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc60>
   40ad0:	cmp	r0, #0
   40ad4:	beq	40ae0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc54>
   40ad8:	mov	r0, #0
   40adc:	bx	lr
   40ae0:	ldr	r0, [pc, #28]	; 40b04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc78>
   40ae4:	add	r0, pc, r0
   40ae8:	bx	lr
   40aec:	ldr	r0, [pc, #20]	; 40b08 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc7c>
   40af0:	add	r0, pc, r0
   40af4:	bx	lr
   40af8:	ldr	r0, [pc, #12]	; 40b0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc80>
   40afc:	add	r0, pc, r0
   40b00:	bx	lr
   40b04:	andeq	r0, r0, r0, lsl #23
   40b08:	andeq	r0, r0, r4, lsl #23
   40b0c:	andeq	r0, r0, r0, ror fp
   40b10:	ldr	r3, [pc, #276]	; 40c2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cda0>
   40b14:	ldr	r2, [pc, #276]	; 40c30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cda4>
   40b18:	add	r3, pc, r3
   40b1c:	push	{r4, r5, lr}
   40b20:	mov	r4, r0
   40b24:	ldr	r2, [r3, r2]
   40b28:	sub	sp, sp, #12
   40b2c:	sub	r5, r1, #2
   40b30:	cmp	r2, #0
   40b34:	beq	40c0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cd80>
   40b38:	mov	r0, r5
   40b3c:	add	r1, sp, #4
   40b40:	bl	13910 <__gnu_Unwind_Find_exidx@plt>
   40b44:	cmp	r0, #0
   40b48:	beq	40bd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cd4c>
   40b4c:	mov	r2, r5
   40b50:	ldr	r1, [sp, #4]
   40b54:	bl	40a0c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb80>
   40b58:	subs	r5, r0, #0
   40b5c:	beq	40bd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cd4c>
   40b60:	bl	409f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb68>
   40b64:	ldr	r3, [r5, #4]
   40b68:	cmp	r3, #1
   40b6c:	str	r0, [r4, #72]	; 0x48
   40b70:	beq	40bc0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cd34>
   40b74:	cmp	r3, #0
   40b78:	add	r0, r5, #4
   40b7c:	strlt	r0, [r4, #76]	; 0x4c
   40b80:	movlt	r3, #1
   40b84:	strlt	r3, [r4, #80]	; 0x50
   40b88:	blt	40b9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cd10>
   40b8c:	bl	409f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb68>
   40b90:	mov	r3, #0
   40b94:	str	r3, [r4, #80]	; 0x50
   40b98:	str	r0, [r4, #76]	; 0x4c
   40b9c:	ldr	r3, [r0]
   40ba0:	cmp	r3, #0
   40ba4:	blt	40bf0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cd64>
   40ba8:	bl	409f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb68>
   40bac:	mov	r3, #0
   40bb0:	str	r0, [r4, #16]
   40bb4:	mov	r0, r3
   40bb8:	add	sp, sp, #12
   40bbc:	pop	{r4, r5, pc}
   40bc0:	mov	r3, #5
   40bc4:	mov	r2, #0
   40bc8:	mov	r0, r3
   40bcc:	str	r2, [r4, #16]
   40bd0:	add	sp, sp, #12
   40bd4:	pop	{r4, r5, pc}
   40bd8:	mov	r3, #9
   40bdc:	mov	r2, #0
   40be0:	mov	r0, r3
   40be4:	str	r2, [r4, #16]
   40be8:	add	sp, sp, #12
   40bec:	pop	{r4, r5, pc}
   40bf0:	ubfx	r0, r3, #24, #4
   40bf4:	bl	40ac0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc34>
   40bf8:	cmp	r0, #0
   40bfc:	str	r0, [r4, #16]
   40c00:	moveq	r3, #9
   40c04:	movne	r3, #0
   40c08:	b	40bb4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cd28>
   40c0c:	ldr	r2, [pc, #32]	; 40c34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cda8>
   40c10:	ldr	r1, [pc, #32]	; 40c38 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cdac>
   40c14:	ldr	r2, [r3, r2]
   40c18:	ldr	r0, [r3, r1]
   40c1c:	rsb	r3, r0, r2
   40c20:	asr	r3, r3, #3
   40c24:	str	r3, [sp, #4]
   40c28:	b	40b4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ccc0>
   40c2c:	andeq	lr, r5, r0, ror #9
   40c30:	muleq	r0, ip, r3
   40c34:	andeq	r0, r0, r0, lsr #7
   40c38:	andeq	r0, r0, ip, lsr #7
   40c3c:	ldr	r3, [r0]
   40c40:	push	{r4, lr}
   40c44:	tst	r3, #1
   40c48:	mov	r4, r0
   40c4c:	bne	40c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cdd8>
   40c50:	tst	r3, #2
   40c54:	add	r0, r0, #72	; 0x48
   40c58:	beq	40c88 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cdfc>
   40c5c:	bl	41a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dba8>
   40c60:	ldr	r3, [r4]
   40c64:	tst	r3, #4
   40c68:	beq	40c98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce0c>
   40c6c:	tst	r3, #8
   40c70:	beq	40cac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce20>
   40c74:	tst	r3, #16
   40c78:	popne	{r4, pc}
   40c7c:	add	r0, r4, #464	; 0x1d0
   40c80:	pop	{r4, lr}
   40c84:	b	41adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dc50>
   40c88:	bl	41a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db98>
   40c8c:	ldr	r3, [r4]
   40c90:	tst	r3, #4
   40c94:	bne	40c6c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cde0>
   40c98:	add	r0, r4, #208	; 0xd0
   40c9c:	bl	41a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dbb8>
   40ca0:	ldr	r3, [r4]
   40ca4:	tst	r3, #8
   40ca8:	bne	40c74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cde8>
   40cac:	add	r0, r4, #336	; 0x150
   40cb0:	bl	41a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dbc8>
   40cb4:	ldr	r3, [r4]
   40cb8:	tst	r3, #16
   40cbc:	popne	{r4, pc}
   40cc0:	b	40c7c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cdf0>
   40cc4:	ldr	r3, [r0]
   40cc8:	cmp	r3, #0
   40ccc:	ldrne	r0, [r3, r0]
   40cd0:	moveq	r0, r3
   40cd4:	bx	lr
   40cd8:	mov	r0, #9
   40cdc:	bx	lr
   40ce0:	nop	{0}
   40ce4:	bx	lr
   40ce8:	push	{r4, r5, r6, lr}
   40cec:	mov	r4, r0
   40cf0:	mov	r5, r1
   40cf4:	b	40d1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce90>
   40cf8:	ldr	ip, [r5, #64]	; 0x40
   40cfc:	mov	r0, #1
   40d00:	ldr	r3, [r4, #16]
   40d04:	mov	r1, r4
   40d08:	mov	r2, r5
   40d0c:	str	ip, [r4, #20]
   40d10:	blx	r3
   40d14:	cmp	r0, #8
   40d18:	bne	40d34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cea8>
   40d1c:	mov	r0, r4
   40d20:	ldr	r1, [r5, #64]	; 0x40
   40d24:	bl	40b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc84>
   40d28:	subs	r6, r0, #0
   40d2c:	beq	40cf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce6c>
   40d30:	bl	13e14 <abort@plt>
   40d34:	cmp	r0, #7
   40d38:	bne	40d30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cea4>
   40d3c:	mov	r0, r6
   40d40:	ldr	r1, [r5, #64]	; 0x40
   40d44:	bl	40ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce54>
   40d48:	add	r0, r5, #4
   40d4c:	bl	41a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db84>
   40d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40d54:	add	r5, r1, #4
   40d58:	sub	sp, sp, #980	; 0x3d4
   40d5c:	mov	r4, r0
   40d60:	mov	ip, r2
   40d64:	add	r3, sp, #20
   40d68:	str	r3, [sp, #12]
   40d6c:	add	lr, sp, #20
   40d70:	ldm	r5!, {r0, r1, r2, r3}
   40d74:	cmp	ip, #0
   40d78:	ldr	r9, [r4, #12]
   40d7c:	mov	r8, #0
   40d80:	ldr	sl, [r4, #24]
   40d84:	movne	fp, #10
   40d88:	moveq	fp, #9
   40d8c:	add	r6, sp, #16
   40d90:	stmia	lr!, {r0, r1, r2, r3}
   40d94:	add	r7, sp, #496	; 0x1f0
   40d98:	ldm	r5!, {r0, r1, r2, r3}
   40d9c:	stmia	lr!, {r0, r1, r2, r3}
   40da0:	ldm	r5!, {r0, r1, r2, r3}
   40da4:	stmia	lr!, {r0, r1, r2, r3}
   40da8:	ldm	r5, {r0, r1, r2, r3}
   40dac:	stm	lr, {r0, r1, r2, r3}
   40db0:	mov	r0, r4
   40db4:	ldr	r1, [sp, #80]	; 0x50
   40db8:	str	r8, [sp, #16]
   40dbc:	bl	40b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc84>
   40dc0:	mov	r5, r0
   40dc4:	cmp	r5, #0
   40dc8:	beq	40e04 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cf78>
   40dcc:	ldr	r0, [sp, #72]	; 0x48
   40dd0:	mov	r2, r4
   40dd4:	str	r6, [sp]
   40dd8:	orr	r1, fp, #16
   40ddc:	str	sl, [sp, #4]
   40de0:	mov	r3, r4
   40de4:	str	r0, [sp, #84]	; 0x54
   40de8:	mov	r0, #1
   40dec:	blx	r9
   40df0:	cmp	r0, #0
   40df4:	bne	40e98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d00c>
   40df8:	mov	r0, r5
   40dfc:	add	sp, sp, #980	; 0x3d4
   40e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40e04:	ldr	r3, [sp, #80]	; 0x50
   40e08:	mov	r1, r6
   40e0c:	mov	r2, #480	; 0x1e0
   40e10:	mov	r0, r7
   40e14:	str	r3, [r4, #20]
   40e18:	bl	135c8 <memcpy@plt>
   40e1c:	ldr	r3, [r4, #16]
   40e20:	mov	r1, r4
   40e24:	mov	r2, r7
   40e28:	mov	r0, fp
   40e2c:	blx	r3
   40e30:	ldr	r3, [sp, #552]	; 0x228
   40e34:	mov	r1, fp
   40e38:	str	r6, [sp]
   40e3c:	str	sl, [sp, #4]
   40e40:	mov	r2, r4
   40e44:	str	r3, [sp, #84]	; 0x54
   40e48:	mov	r3, r4
   40e4c:	mov	r8, r0
   40e50:	mov	r0, #1
   40e54:	blx	r9
   40e58:	cmp	r0, #0
   40e5c:	bne	40e98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d00c>
   40e60:	mov	r0, r6
   40e64:	mov	r1, r7
   40e68:	mov	r2, #480	; 0x1e0
   40e6c:	bl	135c8 <memcpy@plt>
   40e70:	cmp	r8, #8
   40e74:	bne	40e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d004>
   40e78:	mov	r0, r4
   40e7c:	ldr	r1, [sp, #80]	; 0x50
   40e80:	bl	40b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc84>
   40e84:	mov	fp, #9
   40e88:	mov	r5, r0
   40e8c:	b	40dc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cf38>
   40e90:	cmp	r8, #7
   40e94:	beq	40ea4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d018>
   40e98:	mov	r0, #9
   40e9c:	add	sp, sp, #980	; 0x3d4
   40ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40ea4:	mov	r0, r5
   40ea8:	ldr	r1, [sp, #80]	; 0x50
   40eac:	bl	40ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce54>
   40eb0:	add	r0, sp, #20
   40eb4:	bl	41a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db84>
   40eb8:	ldr	r0, [r0, #68]	; 0x44
   40ebc:	bx	lr
   40ec0:	ldr	r3, [r1, #60]	; 0x3c
   40ec4:	push	{r4, r5, r6, r7, lr}
   40ec8:	add	lr, r1, #4
   40ecc:	str	r3, [r1, #64]	; 0x40
   40ed0:	mov	r7, r1
   40ed4:	mov	r4, r0
   40ed8:	sub	sp, sp, #484	; 0x1e4
   40edc:	ldm	lr!, {r0, r1, r2, r3}
   40ee0:	add	ip, sp, #4
   40ee4:	add	r6, sp, #480	; 0x1e0
   40ee8:	mvn	r5, #0
   40eec:	stmia	ip!, {r0, r1, r2, r3}
   40ef0:	ldm	lr!, {r0, r1, r2, r3}
   40ef4:	stmia	ip!, {r0, r1, r2, r3}
   40ef8:	ldm	lr!, {r0, r1, r2, r3}
   40efc:	stmia	ip!, {r0, r1, r2, r3}
   40f00:	ldm	lr, {r0, r1, r2, r3}
   40f04:	stm	ip, {r0, r1, r2, r3}
   40f08:	str	r5, [r6, #-480]!	; 0xfffffe20
   40f0c:	b	40f2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d0a0>
   40f10:	ldr	r3, [r4, #16]
   40f14:	mov	r1, r4
   40f18:	mov	r2, sp
   40f1c:	blx	r3
   40f20:	cmp	r0, #8
   40f24:	mov	r5, r0
   40f28:	bne	40f4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d0c0>
   40f2c:	mov	r0, r4
   40f30:	ldr	r1, [sp, #64]	; 0x40
   40f34:	bl	40b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc84>
   40f38:	cmp	r0, #0
   40f3c:	beq	40f10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d084>
   40f40:	mov	r0, #9
   40f44:	add	sp, sp, #484	; 0x1e4
   40f48:	pop	{r4, r5, r6, r7, pc}
   40f4c:	mov	r0, sp
   40f50:	bl	40c3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cdb0>
   40f54:	cmp	r5, #6
   40f58:	bne	40f40 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d0b4>
   40f5c:	mov	r0, r4
   40f60:	mov	r1, r7
   40f64:	bl	40ce8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce5c>
   40f68:	push	{r4}		; (str r4, [sp, #-4]!)
   40f6c:	ldr	r4, [r3, #60]	; 0x3c
   40f70:	str	r1, [r0, #12]
   40f74:	mov	r1, r3
   40f78:	str	r2, [r0, #24]
   40f7c:	mov	r2, #0
   40f80:	str	r4, [r3, #64]	; 0x40
   40f84:	pop	{r4}		; (ldr r4, [sp], #4)
   40f88:	b	40d50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cec4>
   40f8c:	push	{r4, r5, r6, lr}
   40f90:	mov	r4, r0
   40f94:	ldr	r6, [r0, #12]
   40f98:	mov	r5, r1
   40f9c:	ldr	r3, [r0, #20]
   40fa0:	cmp	r6, #0
   40fa4:	str	r3, [r1, #64]	; 0x40
   40fa8:	beq	40fb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d12c>
   40fac:	mov	r2, #1
   40fb0:	bl	40d50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cec4>
   40fb4:	bl	13e14 <abort@plt>
   40fb8:	ldr	r3, [r0, #16]
   40fbc:	mov	r1, r4
   40fc0:	mov	r0, #2
   40fc4:	mov	r2, r5
   40fc8:	blx	r3
   40fcc:	cmp	r0, #7
   40fd0:	beq	40fec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d160>
   40fd4:	cmp	r0, #8
   40fd8:	bne	40fe8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d15c>
   40fdc:	mov	r0, r4
   40fe0:	mov	r1, r5
   40fe4:	bl	40ce8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce5c>
   40fe8:	bl	13e14 <abort@plt>
   40fec:	mov	r0, r6
   40ff0:	ldr	r1, [r5, #64]	; 0x40
   40ff4:	bl	40ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce54>
   40ff8:	add	r0, r5, #4
   40ffc:	bl	41a10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db84>
   41000:	ldr	r2, [r0, #12]
   41004:	cmp	r2, #0
   41008:	beq	4101c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d190>
   4100c:	ldr	ip, [r1, #60]	; 0x3c
   41010:	mov	r2, #0
   41014:	str	ip, [r1, #64]	; 0x40
   41018:	b	40d50 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cec4>
   4101c:	b	40ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d034>
   41020:	bx	lr
   41024:	push	{r3, lr}
   41028:	ldr	r3, [r0, #8]
   4102c:	cmp	r3, #0
   41030:	popeq	{r3, pc}
   41034:	mov	r1, r0
   41038:	mov	r0, #1
   4103c:	blx	r3
   41040:	pop	{r3, pc}
   41044:	cmp	r1, #4
   41048:	addls	pc, pc, r1, lsl #2
   4104c:	b	41080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1f4>
   41050:	b	4106c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1e0>
   41054:	b	41064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1d8>
   41058:	b	41080 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1f4>
   4105c:	b	41064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1d8>
   41060:	b	41064 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1d8>
   41064:	mov	r0, #1
   41068:	bx	lr
   4106c:	cmp	r2, #15
   41070:	cmpls	r3, #0
   41074:	moveq	r3, #0
   41078:	movne	r3, #1
   4107c:	beq	41088 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1fc>
   41080:	mov	r0, #2
   41084:	bx	lr
   41088:	add	r2, r0, r2, lsl #2
   4108c:	mov	r0, r3
   41090:	ldr	r3, [r2, #4]
   41094:	ldr	r2, [sp]
   41098:	str	r3, [r2]
   4109c:	bx	lr
   410a0:	push	{lr}		; (str lr, [sp, #-4]!)
   410a4:	sub	sp, sp, #20
   410a8:	mov	r2, r1
   410ac:	mov	r1, #0
   410b0:	add	ip, sp, #12
   410b4:	mov	r3, r1
   410b8:	str	ip, [sp]
   410bc:	bl	41044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1b8>
   410c0:	ldr	r0, [sp, #12]
   410c4:	add	sp, sp, #20
   410c8:	pop	{pc}		; (ldr pc, [sp], #4)
   410cc:	cmp	r1, #4
   410d0:	addls	pc, pc, r1, lsl #2
   410d4:	b	41108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d27c>
   410d8:	b	410f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d268>
   410dc:	b	410ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d260>
   410e0:	b	41108 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d27c>
   410e4:	b	410ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d260>
   410e8:	b	410ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d260>
   410ec:	mov	r0, #1
   410f0:	bx	lr
   410f4:	cmp	r2, #15
   410f8:	cmpls	r3, #0
   410fc:	moveq	r3, #0
   41100:	movne	r3, #1
   41104:	beq	41110 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d284>
   41108:	mov	r0, #2
   4110c:	bx	lr
   41110:	ldr	ip, [sp]
   41114:	add	r2, r0, r2, lsl #2
   41118:	mov	r0, r3
   4111c:	ldr	r1, [ip]
   41120:	str	r1, [r2, #4]
   41124:	bx	lr
   41128:	push	{lr}		; (str lr, [sp, #-4]!)
   4112c:	sub	sp, sp, #20
   41130:	add	ip, sp, #16
   41134:	mov	lr, r1
   41138:	mov	r1, #0
   4113c:	str	r2, [ip, #-4]!
   41140:	mov	r3, r1
   41144:	str	ip, [sp]
   41148:	mov	r2, lr
   4114c:	bl	410cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d240>
   41150:	add	sp, sp, #20
   41154:	pop	{pc}		; (ldr pc, [sp], #4)
   41158:	ldr	r3, [r2, #60]	; 0x3c
   4115c:	push	{r4, r5, r6, r7, r8, lr}
   41160:	add	lr, r2, #4
   41164:	str	r3, [r2, #64]	; 0x40
   41168:	mov	r8, r0
   4116c:	mov	r7, r1
   41170:	sub	sp, sp, #568	; 0x238
   41174:	ldm	lr!, {r0, r1, r2, r3}
   41178:	add	ip, sp, #92	; 0x5c
   4117c:	mvn	r6, #0
   41180:	add	r4, sp, #88	; 0x58
   41184:	stmia	ip!, {r0, r1, r2, r3}
   41188:	ldm	lr!, {r0, r1, r2, r3}
   4118c:	stmia	ip!, {r0, r1, r2, r3}
   41190:	ldm	lr!, {r0, r1, r2, r3}
   41194:	stmia	ip!, {r0, r1, r2, r3}
   41198:	ldm	lr, {r0, r1, r2, r3}
   4119c:	stm	ip, {r0, r1, r2, r3}
   411a0:	str	r6, [sp, #88]	; 0x58
   411a4:	b	411e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d358>
   411a8:	bl	41128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d29c>
   411ac:	mov	r1, r7
   411b0:	mov	r0, r4
   411b4:	blx	r8
   411b8:	mov	r1, sp
   411bc:	mov	r2, r4
   411c0:	cmp	r0, #0
   411c4:	mov	r0, #8
   411c8:	bne	41204 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d378>
   411cc:	ldr	r3, [sp, #16]
   411d0:	blx	r3
   411d4:	cmp	r0, #9
   411d8:	cmpne	r0, #5
   411dc:	mov	r6, r0
   411e0:	beq	41208 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d37c>
   411e4:	ldr	r1, [sp, #152]	; 0x98
   411e8:	mov	r0, sp
   411ec:	bl	40b10 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cc84>
   411f0:	mov	r2, sp
   411f4:	mov	r1, #12
   411f8:	cmp	r0, #0
   411fc:	mov	r0, r4
   41200:	beq	411a8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d31c>
   41204:	mov	r6, #9
   41208:	mov	r0, r4
   4120c:	bl	40c3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cdb0>
   41210:	mov	r0, r6
   41214:	add	sp, sp, #568	; 0x238
   41218:	pop	{r4, r5, r6, r7, r8, pc}
   4121c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41220:	mov	r4, r1
   41224:	ldr	r1, [r1, #76]	; 0x4c
   41228:	mov	r8, r2
   4122c:	sub	sp, sp, #44	; 0x2c
   41230:	subs	r6, r3, #0
   41234:	ldr	ip, [pc, #1064]	; 41664 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7d8>
   41238:	add	r3, r1, #4
   4123c:	ldr	r2, [r1]
   41240:	and	r7, r0, #3
   41244:	add	ip, pc, ip
   41248:	str	r3, [sp, #32]
   4124c:	str	ip, [sp, #4]
   41250:	str	r2, [sp, #28]
   41254:	bne	41400 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d574>
   41258:	lsl	r2, r2, #8
   4125c:	strb	r6, [sp, #37]	; 0x25
   41260:	str	r2, [sp, #28]
   41264:	mov	r2, #3
   41268:	strb	r2, [sp, #36]	; 0x24
   4126c:	cmp	r7, #2
   41270:	ldr	r2, [r4, #80]	; 0x50
   41274:	ldreq	r3, [r4, #56]	; 0x38
   41278:	ands	r2, r2, #1
   4127c:	bne	413d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d548>
   41280:	eor	r0, r0, #8
   41284:	str	r2, [sp, #8]
   41288:	ubfx	r0, r0, #3, #1
   4128c:	str	r0, [sp, #12]
   41290:	ldr	r9, [r3]
   41294:	cmp	r9, #0
   41298:	beq	413dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d550>
   4129c:	cmp	r6, #2
   412a0:	mov	r0, r8
   412a4:	addeq	r5, r3, #8
   412a8:	addne	r5, r3, #4
   412ac:	ldreq	sl, [r3, #4]
   412b0:	mov	r1, #15
   412b4:	ldrhne	sl, [r3, #2]
   412b8:	ldrhne	r9, [r3]
   412bc:	ldr	r3, [r4, #72]	; 0x48
   412c0:	bic	fp, sl, #1
   412c4:	add	fp, fp, r3
   412c8:	bl	410a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d214>
   412cc:	cmp	fp, r0
   412d0:	movhi	r0, #0
   412d4:	bhi	412ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d460>
   412d8:	bic	r3, r9, #1
   412dc:	add	fp, fp, r3
   412e0:	cmp	r0, fp
   412e4:	movcs	r0, #0
   412e8:	movcc	r0, #1
   412ec:	and	sl, sl, #1
   412f0:	and	r9, r9, #1
   412f4:	orr	r9, r9, sl, lsl #1
   412f8:	cmp	r9, #1
   412fc:	beq	41478 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d5ec>
   41300:	bcc	4145c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d5d0>
   41304:	cmp	r9, #2
   41308:	bne	413f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d564>
   4130c:	ldr	r3, [r5]
   41310:	cmp	r7, #0
   41314:	bic	fp, r3, #-2147483648	; 0x80000000
   41318:	bne	4142c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d5a0>
   4131c:	cmp	r0, #0
   41320:	beq	41448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d5bc>
   41324:	ldr	r2, [sp, #12]
   41328:	cmp	fp, #0
   4132c:	orreq	r2, r2, #1
   41330:	cmp	r2, #0
   41334:	beq	41448 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d5bc>
   41338:	cmp	fp, #0
   4133c:	beq	413b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d524>
   41340:	add	r2, r4, #88	; 0x58
   41344:	add	ip, sp, #24
   41348:	mov	sl, r7
   4134c:	str	r7, [sp, #20]
   41350:	str	r6, [sp, #16]
   41354:	add	r9, r5, #4
   41358:	mov	r7, r2
   4135c:	mov	r6, ip
   41360:	b	41370 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d4e4>
   41364:	cmp	r3, fp
   41368:	mov	sl, r3
   4136c:	beq	413b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d524>
   41370:	mov	r0, r9
   41374:	str	r7, [sp, #24]
   41378:	bl	40cc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce38>
   4137c:	mov	r3, r6
   41380:	mov	r2, #0
   41384:	add	r9, r9, #4
   41388:	mov	r1, r0
   4138c:	mov	r0, r4
   41390:	bl	139e8 <__cxa_type_match@plt>
   41394:	add	r3, sl, #1
   41398:	cmp	r0, #0
   4139c:	beq	41364 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d4d8>
   413a0:	cmp	fp, sl
   413a4:	ldr	r7, [sp, #20]
   413a8:	ldr	r6, [sp, #16]
   413ac:	bne	41444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d5b8>
   413b0:	mov	r0, r8
   413b4:	mov	r1, #13
   413b8:	bl	410a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d214>
   413bc:	ldr	r2, [sp, #24]
   413c0:	str	r5, [r4, #40]	; 0x28
   413c4:	mov	r3, #6
   413c8:	str	r2, [r4, #36]	; 0x24
   413cc:	str	r0, [r4, #32]
   413d0:	b	413f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d568>
   413d4:	mov	ip, #0
   413d8:	str	ip, [sp, #8]
   413dc:	cmp	r6, #2
   413e0:	ble	414d4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d648>
   413e4:	bl	40cd8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce4c>
   413e8:	cmp	r0, #0
   413ec:	beq	414e8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d65c>
   413f0:	mov	r3, #9
   413f4:	mov	r0, r3
   413f8:	add	sp, sp, #44	; 0x2c
   413fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41400:	cmp	r6, #2
   41404:	bgt	4126c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d3e0>
   41408:	lsr	r1, r2, #16
   4140c:	strb	r1, [sp, #37]	; 0x25
   41410:	lsl	r2, r2, #16
   41414:	mov	ip, #2
   41418:	uxtb	r1, r1
   4141c:	str	r2, [sp, #28]
   41420:	strb	ip, [sp, #36]	; 0x24
   41424:	add	r3, r3, r1, lsl #2
   41428:	b	4126c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d3e0>
   4142c:	mov	r0, r8
   41430:	mov	r1, #13
   41434:	ldr	r9, [r4, #32]
   41438:	bl	410a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d214>
   4143c:	cmp	r9, r0
   41440:	beq	41588 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d6fc>
   41444:	ldr	r3, [r5]
   41448:	cmp	r3, #0
   4144c:	addlt	r5, r5, #4
   41450:	add	fp, fp, #1
   41454:	add	r3, r5, fp, lsl #2
   41458:	b	41290 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d404>
   4145c:	cmp	r7, #0
   41460:	moveq	r0, #0
   41464:	andne	r0, r0, #1
   41468:	cmp	r0, #0
   4146c:	bne	415ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d760>
   41470:	add	r3, r5, #4
   41474:	b	41290 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d404>
   41478:	cmp	r7, #0
   4147c:	bne	41534 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d6a8>
   41480:	cmp	r0, #0
   41484:	beq	414cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d640>
   41488:	ldm	r5, {r2, r3}
   4148c:	cmn	r3, #2
   41490:	lsr	r9, r2, #31
   41494:	beq	413f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d564>
   41498:	cmn	r3, #1
   4149c:	add	r3, r4, #88	; 0x58
   414a0:	str	r3, [sp, #24]
   414a4:	beq	415c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d73c>
   414a8:	add	r0, r5, #4
   414ac:	bl	40cc4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ce38>
   414b0:	mov	r2, r9
   414b4:	add	r3, sp, #24
   414b8:	mov	r1, r0
   414bc:	mov	r0, r4
   414c0:	bl	139e8 <__cxa_type_match@plt>
   414c4:	cmp	r0, #0
   414c8:	bne	41634 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7a8>
   414cc:	add	r3, r5, #8
   414d0:	b	41290 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d404>
   414d4:	mov	r0, r8
   414d8:	add	r1, sp, #28
   414dc:	bl	41c4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddc0>
   414e0:	cmp	r0, #0
   414e4:	bne	413f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d564>
   414e8:	ldr	ip, [sp, #8]
   414ec:	cmp	ip, #0
   414f0:	moveq	r3, #8
   414f4:	beq	413f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d568>
   414f8:	mov	r1, #15
   414fc:	mov	r0, r8
   41500:	bl	410a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d214>
   41504:	mov	r1, #14
   41508:	mov	r2, r0
   4150c:	mov	r0, r8
   41510:	bl	41128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d29c>
   41514:	ldr	r3, [pc, #332]	; 41668 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7dc>
   41518:	ldr	ip, [sp, #4]
   4151c:	mov	r0, r8
   41520:	mov	r1, #15
   41524:	ldr	r2, [ip, r3]
   41528:	bl	41128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d29c>
   4152c:	mov	r3, #7
   41530:	b	413f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d568>
   41534:	mov	r0, r8
   41538:	mov	r1, #13
   4153c:	ldr	r9, [r4, #32]
   41540:	bl	410a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d214>
   41544:	cmp	r9, r0
   41548:	bne	414cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d640>
   4154c:	ldr	r3, [r4, #40]	; 0x28
   41550:	cmp	r5, r3
   41554:	bne	414cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d640>
   41558:	mov	r0, r5
   4155c:	bl	409f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb68>
   41560:	mov	r1, #15
   41564:	mov	r2, r0
   41568:	mov	r0, r8
   4156c:	bl	41128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d29c>
   41570:	mov	r0, r8
   41574:	mov	r2, r4
   41578:	mov	r1, #0
   4157c:	bl	41128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d29c>
   41580:	mov	r3, #7
   41584:	b	413f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d568>
   41588:	ldr	r3, [r4, #40]	; 0x28
   4158c:	cmp	r5, r3
   41590:	bne	41444 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d5b8>
   41594:	mov	r2, #4
   41598:	mov	r3, #0
   4159c:	str	fp, [r4, #40]	; 0x28
   415a0:	str	r3, [r4, #44]	; 0x2c
   415a4:	add	r3, r5, r2
   415a8:	str	r2, [r4, #48]	; 0x30
   415ac:	str	r3, [r4, #52]	; 0x34
   415b0:	ldr	r3, [r5]
   415b4:	cmp	r3, #0
   415b8:	blt	41628 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d79c>
   415bc:	mov	ip, #1
   415c0:	str	ip, [sp, #8]
   415c4:	b	41450 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d5c4>
   415c8:	mov	r0, r8
   415cc:	mov	r1, #13
   415d0:	bl	410a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d214>
   415d4:	str	r0, [r4, #32]
   415d8:	ldr	r3, [sp, #24]
   415dc:	str	r3, [r4, #36]	; 0x24
   415e0:	str	r5, [r4, #40]	; 0x28
   415e4:	mov	r3, #6
   415e8:	b	413f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d568>
   415ec:	mov	r0, r5
   415f0:	add	r5, r5, #4
   415f4:	bl	409f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2cb68>
   415f8:	str	r5, [r4, #56]	; 0x38
   415fc:	mov	r6, r0
   41600:	mov	r0, r4
   41604:	bl	13958 <__cxa_begin_cleanup@plt>
   41608:	cmp	r0, #0
   4160c:	beq	413f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d564>
   41610:	mov	r0, r8
   41614:	mov	r2, r6
   41618:	mov	r1, #15
   4161c:	bl	41128 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d29c>
   41620:	mov	r3, #7
   41624:	b	413f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d568>
   41628:	add	r0, fp, #1
   4162c:	add	r0, r5, r0, lsl #2
   41630:	b	4155c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d6d0>
   41634:	mov	r9, r0
   41638:	mov	r1, #13
   4163c:	mov	r0, r8
   41640:	bl	410a0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d214>
   41644:	cmp	r9, #2
   41648:	str	r0, [r4, #32]
   4164c:	bne	415d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d74c>
   41650:	ldr	r2, [sp, #24]
   41654:	mov	r3, r4
   41658:	str	r2, [r3, #44]!	; 0x2c
   4165c:	str	r3, [r4, #36]	; 0x24
   41660:	b	415e0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d754>
   41664:			; <UNDEFINED> instruction: 0x0005ddb4
   41668:			; <UNDEFINED> instruction: 0x000003b0
   4166c:	mov	r3, #0
   41670:	b	4121c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d390>
   41674:	mov	r3, #1
   41678:	b	4121c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d390>
   4167c:	mov	r3, #2
   41680:	b	4121c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d390>
   41684:	push	{r4, r5, r6, r7, r8, lr}
   41688:	mov	r4, r0
   4168c:	sub	sp, sp, #272	; 0x110
   41690:	cmp	r1, #4
   41694:	addls	pc, pc, r1, lsl #2
   41698:	b	416b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d82c>
   4169c:	b	418ac <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2da20>
   416a0:	b	4172c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d8a0>
   416a4:	b	416b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d82c>
   416a8:	b	416b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d824>
   416ac:	b	416c4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d838>
   416b0:	cmp	r3, #3
   416b4:	beq	418f0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2da64>
   416b8:	mov	r0, #2
   416bc:	add	sp, sp, #272	; 0x110
   416c0:	pop	{r4, r5, r6, r7, r8, pc}
   416c4:	cmp	r2, #16
   416c8:	cmpls	r3, #0
   416cc:	bne	416b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d82c>
   416d0:	ldr	r3, [r0]
   416d4:	tst	r3, #16
   416d8:	bne	4196c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dae0>
   416dc:	add	r5, sp, #136	; 0x88
   416e0:	str	r2, [sp, #4]
   416e4:	mov	r0, r5
   416e8:	bl	41af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dc64>
   416ec:	ldr	r1, [r4, #56]	; 0x38
   416f0:	ldr	r2, [sp, #4]
   416f4:	mov	r3, #0
   416f8:	mov	r0, #1
   416fc:	ands	ip, r2, r0, lsl r3
   41700:	ldrne	ip, [r1]
   41704:	addne	r1, r1, #4
   41708:	strne	ip, [r5, r3, lsl #2]
   4170c:	add	r3, r3, #1
   41710:	cmp	r3, #4
   41714:	bne	416fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d870>
   41718:	mov	r0, r5
   4171c:	str	r1, [r4, #56]	; 0x38
   41720:	bl	41adc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dc50>
   41724:	mov	r0, #0
   41728:	b	416bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d830>
   4172c:	bic	r1, r3, #4
   41730:	cmp	r1, #1
   41734:	bne	416b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d82c>
   41738:	cmp	r3, #1
   4173c:	lsr	r5, r2, #16
   41740:	uxth	r6, r2
   41744:	add	r2, r6, r5
   41748:	movne	r1, #32
   4174c:	moveq	r1, #16
   41750:	cmp	r1, r2
   41754:	bcc	416b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d82c>
   41758:	subs	r0, r3, #1
   4175c:	rsbs	r7, r0, #0
   41760:	adcs	r7, r7, r0
   41764:	cmp	r5, #15
   41768:	movls	r1, #0
   4176c:	movhi	r1, #1
   41770:	tst	r7, r1
   41774:	bne	416b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d82c>
   41778:	cmp	r1, #0
   4177c:	movne	r8, r6
   41780:	bne	41790 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d904>
   41784:	cmp	r2, #16
   41788:	bls	41994 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db08>
   4178c:	sub	r8, r2, #16
   41790:	cmp	r8, #0
   41794:	cmpne	r3, #5
   41798:	bne	416b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d82c>
   4179c:	cmp	r5, #15
   417a0:	bhi	417d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d944>
   417a4:	ldr	r2, [r4]
   417a8:	tst	r2, #1
   417ac:	beq	417d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d944>
   417b0:	cmp	r3, #5
   417b4:	mov	r0, r4
   417b8:	bic	r3, r2, #1
   417bc:	str	r3, [r4]
   417c0:	beq	41a00 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db74>
   417c4:	bic	r2, r2, #3
   417c8:	str	r2, [r0], #72	; 0x48
   417cc:	bl	41a2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dba0>
   417d0:	cmp	r8, #0
   417d4:	beq	417e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d958>
   417d8:	ldr	r3, [r4]
   417dc:	tst	r3, #4
   417e0:	bne	419d8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db4c>
   417e4:	cmp	r7, #0
   417e8:	bne	419ec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db60>
   417ec:	cmp	r5, #15
   417f0:	bls	419bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db30>
   417f4:	cmp	r8, #0
   417f8:	bne	419c8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db3c>
   417fc:	ldr	ip, [r4, #56]	; 0x38
   41800:	cmp	r6, #0
   41804:	mov	r2, ip
   41808:	ble	4183c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d9b0>
   4180c:	add	r0, sp, #136	; 0x88
   41810:	lsl	r6, r6, #1
   41814:	add	r0, r0, r5, lsl #3
   41818:	sub	r1, r6, #1
   4181c:	rsb	r0, ip, r0
   41820:	sub	r3, ip, #4
   41824:	sub	r1, r1, #1
   41828:	ldr	r2, [r3, #4]!
   4182c:	cmn	r1, #1
   41830:	str	r2, [r0, r3]
   41834:	bne	41824 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d998>
   41838:	add	r2, ip, r6, lsl #2
   4183c:	cmp	r8, #0
   41840:	beq	41880 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d9f4>
   41844:	cmp	r5, #16
   41848:	movcs	r0, r5
   4184c:	movcc	r0, #16
   41850:	add	r6, sp, #272	; 0x110
   41854:	lsl	r1, r8, #1
   41858:	mov	ip, r2
   4185c:	add	r0, r6, r0, lsl #3
   41860:	sub	r3, r1, #1
   41864:	sub	r0, r0, #392	; 0x188
   41868:	sub	r3, r3, #1
   4186c:	ldr	r6, [ip], #4
   41870:	cmn	r3, #1
   41874:	str	r6, [r0], #4
   41878:	bne	41868 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d9dc>
   4187c:	add	r2, r2, r1, lsl #2
   41880:	cmp	r7, #0
   41884:	bne	4199c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db10>
   41888:	cmp	r5, #15
   4188c:	str	r2, [r4, #56]	; 0x38
   41890:	bls	419b0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db24>
   41894:	cmp	r8, #0
   41898:	beq	418a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2da18>
   4189c:	add	r0, sp, #8
   418a0:	bl	41a44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dbb8>
   418a4:	mov	r0, #0
   418a8:	b	416bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d830>
   418ac:	cmp	r3, #0
   418b0:	bne	416b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d82c>
   418b4:	ldr	r1, [r0, #56]	; 0x38
   418b8:	uxth	r5, r2
   418bc:	mov	ip, #1
   418c0:	ands	r0, r5, ip, lsl r3
   418c4:	add	r0, r4, r3, lsl #2
   418c8:	add	r3, r3, #1
   418cc:	ldrne	r6, [r1]
   418d0:	addne	r1, r1, #4
   418d4:	strne	r6, [r0, #4]
   418d8:	cmp	r3, #16
   418dc:	bne	418c0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2da34>
   418e0:	ands	r0, r2, #8192	; 0x2000
   418e4:	streq	r1, [r4, #56]	; 0x38
   418e8:	beq	416bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d830>
   418ec:	b	418a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2da18>
   418f0:	lsr	r6, r2, #16
   418f4:	uxth	r7, r2
   418f8:	add	r3, r7, r6
   418fc:	cmp	r3, #16
   41900:	bhi	416b8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d82c>
   41904:	ldr	r3, [r0]
   41908:	tst	r3, #8
   4190c:	bne	41984 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2daf8>
   41910:	add	r5, sp, #136	; 0x88
   41914:	lsl	r7, r7, #1
   41918:	mov	r0, r5
   4191c:	bl	41a98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dc0c>
   41920:	ldr	ip, [r4, #56]	; 0x38
   41924:	cmp	r7, #0
   41928:	add	r0, r5, r6, lsl #3
   4192c:	sub	r3, r7, #1
   41930:	mov	r2, ip
   41934:	beq	41958 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dacc>
   41938:	rsb	r0, ip, r0
   4193c:	sub	r2, ip, #4
   41940:	sub	r3, r3, #1
   41944:	ldr	r1, [r2, #4]!
   41948:	cmn	r3, #1
   4194c:	str	r1, [r0, r2]
   41950:	bne	41940 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dab4>
   41954:	add	r2, ip, r7, lsl #2
   41958:	mov	r0, r5
   4195c:	str	r2, [r4, #56]	; 0x38
   41960:	bl	41a54 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dbc8>
   41964:	mov	r0, #0
   41968:	b	416bc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d830>
   4196c:	bic	r3, r3, #16
   41970:	str	r3, [r0], #464	; 0x1d0
   41974:	str	r2, [sp, #4]
   41978:	bl	41af0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dc64>
   4197c:	ldr	r2, [sp, #4]
   41980:	b	416dc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d850>
   41984:	bic	r3, r3, #8
   41988:	str	r3, [r0], #336	; 0x150
   4198c:	bl	41a98 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dc0c>
   41990:	b	41910 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2da84>
   41994:	mov	r8, r1
   41998:	b	4179c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d910>
   4199c:	add	r2, r2, #4
   419a0:	add	r0, sp, #136	; 0x88
   419a4:	str	r2, [r4, #56]	; 0x38
   419a8:	bl	41a24 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db98>
   419ac:	b	418a4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2da18>
   419b0:	add	r0, sp, #136	; 0x88
   419b4:	bl	41a34 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dba8>
   419b8:	b	41894 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2da08>
   419bc:	add	r0, sp, #136	; 0x88
   419c0:	bl	41a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dbb0>
   419c4:	b	417f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d968>
   419c8:	add	r0, sp, #8
   419cc:	bl	41a4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dbc0>
   419d0:	rsb	r6, r5, #16
   419d4:	b	417fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d970>
   419d8:	mov	r0, r4
   419dc:	bic	r3, r3, #4
   419e0:	str	r3, [r0], #208	; 0xd0
   419e4:	bl	41a4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dbc0>
   419e8:	b	417e4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d958>
   419ec:	add	r0, sp, #136	; 0x88
   419f0:	bl	41a2c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dba0>
   419f4:	cmp	r8, #0
   419f8:	bne	419d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2db44>
   419fc:	b	417fc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d970>
   41a00:	orr	r3, r3, #2
   41a04:	str	r3, [r0], #72	; 0x48
   41a08:	bl	41a3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dbb0>
   41a0c:	b	417d0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d944>
   41a10:	add	r1, r0, #52	; 0x34
   41a14:	ldm	r1, {r3, r4, r5}
   41a18:	push	{r3, r4, r5}
   41a1c:	ldm	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
   41a20:	ldm	sp, {sp, lr, pc}
   41a24:	fldmiax	r0, {d0-d15}	;@ Deprecated
   41a28:	bx	lr
   41a2c:	fstmiax	r0, {d0-d15}	;@ Deprecated
   41a30:	bx	lr
   41a34:	vldmia	r0, {d0-d15}
   41a38:	bx	lr
   41a3c:	vstmia	r0, {d0-d15}
   41a40:	bx	lr
   41a44:	vldmia	r0, {d16-d31}
   41a48:	bx	lr
   41a4c:	vstmia	r0, {d16-d31}
   41a50:	bx	lr
   41a54:	ldfe	f0, [r0], #8
   41a58:	ldfe	f1, [r0], #8
   41a5c:	ldfe	f2, [r0], #8
   41a60:	ldfe	f3, [r0], #8
   41a64:	ldfe	f4, [r0], #8
   41a68:	ldfe	f5, [r0], #8
   41a6c:	ldfe	f6, [r0], #8
   41a70:	ldfe	f7, [r0], #8
   41a74:	ldfp	f0, [r0], #8
   41a78:	ldfp	f1, [r0], #8
   41a7c:	ldfp	f2, [r0], #8
   41a80:	ldfp	f3, [r0], #8
   41a84:	ldfp	f4, [r0], #8
   41a88:	ldfp	f5, [r0], #8
   41a8c:	ldfp	f6, [r0], #8
   41a90:	ldfp	f7, [r0], #8
   41a94:	bx	lr
   41a98:	stfe	f0, [r0], #8
   41a9c:	stfe	f1, [r0], #8
   41aa0:	stfe	f2, [r0], #8
   41aa4:	stfe	f3, [r0], #8
   41aa8:	stfe	f4, [r0], #8
   41aac:	stfe	f5, [r0], #8
   41ab0:	stfe	f6, [r0], #8
   41ab4:	stfe	f7, [r0], #8
   41ab8:	stfp	f0, [r0], #8
   41abc:	stfp	f1, [r0], #8
   41ac0:	stfp	f2, [r0], #8
   41ac4:	stfp	f3, [r0], #8
   41ac8:	stfp	f4, [r0], #8
   41acc:	stfp	f5, [r0], #8
   41ad0:	stfp	f6, [r0], #8
   41ad4:	stfp	f7, [r0], #8
   41ad8:	bx	lr
   41adc:	ldc2	1, cr8, [r0], #4
   41ae0:	ldc2	1, cr9, [r0], #4
   41ae4:	ldc2	1, cr10, [r0], #4
   41ae8:	ldc2	1, cr11, [r0], #4
   41aec:	bx	lr
   41af0:	stc2	1, cr8, [r0], #4
   41af4:	stc2	1, cr9, [r0], #4
   41af8:	stc2	1, cr10, [r0], #4
   41afc:	stc2	1, cr11, [r0], #4
   41b00:	bx	lr
   41b04:	push	{sp, lr, pc}
   41b08:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   41b0c:	mov	r3, #0
   41b10:	push	{r2, r3}
   41b14:	add	r1, sp, #4
   41b18:	bl	40ec0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d034>
   41b1c:	ldr	lr, [sp, #64]	; 0x40
   41b20:	add	sp, sp, #72	; 0x48
   41b24:	bx	lr
   41b28:	push	{sp, lr, pc}
   41b2c:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   41b30:	mov	r3, #0
   41b34:	push	{r2, r3}
   41b38:	add	r1, sp, #4
   41b3c:	bl	40f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d100>
   41b40:	ldr	lr, [sp, #64]	; 0x40
   41b44:	add	sp, sp, #72	; 0x48
   41b48:	bx	lr
   41b4c:	push	{sp, lr, pc}
   41b50:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   41b54:	mov	r3, #0
   41b58:	push	{r2, r3}
   41b5c:	add	r1, sp, #4
   41b60:	bl	41000 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d174>
   41b64:	ldr	lr, [sp, #64]	; 0x40
   41b68:	add	sp, sp, #72	; 0x48
   41b6c:	bx	lr
   41b70:	push	{sp, lr, pc}
   41b74:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   41b78:	mov	r3, #0
   41b7c:	push	{r2, r3}
   41b80:	add	r3, sp, #4
   41b84:	bl	40f68 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d0dc>
   41b88:	ldr	lr, [sp, #64]	; 0x40
   41b8c:	add	sp, sp, #72	; 0x48
   41b90:	bx	lr
   41b94:	push	{sp, lr, pc}
   41b98:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
   41b9c:	mov	r3, #0
   41ba0:	push	{r2, r3}
   41ba4:	add	r2, sp, #4
   41ba8:	bl	41158 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d2cc>
   41bac:	ldr	lr, [sp, #64]	; 0x40
   41bb0:	add	sp, sp, #72	; 0x48
   41bb4:	bx	lr
   41bb8:	ldrb	r2, [r0, #8]
   41bbc:	mov	r3, r0
   41bc0:	cmp	r2, #0
   41bc4:	bne	41bdc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd50>
   41bc8:	ldrb	r2, [r0, #9]
   41bcc:	cmp	r2, #0
   41bd0:	bne	41bf8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd6c>
   41bd4:	mov	r0, #176	; 0xb0
   41bd8:	bx	lr
   41bdc:	ldr	r0, [r0]
   41be0:	sub	r2, r2, #1
   41be4:	strb	r2, [r3, #8]
   41be8:	lsl	r2, r0, #8
   41bec:	lsr	r0, r0, #24
   41bf0:	str	r2, [r3]
   41bf4:	bx	lr
   41bf8:	ldr	r1, [r0, #4]
   41bfc:	sub	r2, r2, #1
   41c00:	strb	r2, [r0, #9]
   41c04:	mov	r2, #3
   41c08:	add	r0, r1, #4
   41c0c:	str	r0, [r3, #4]
   41c10:	ldr	r0, [r1]
   41c14:	strb	r2, [r3, #8]
   41c18:	b	41be8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd5c>
   41c1c:	push	{lr}		; (str lr, [sp, #-4]!)
   41c20:	sub	sp, sp, #20
   41c24:	mov	r1, #0
   41c28:	add	r2, sp, #12
   41c2c:	mov	r3, r1
   41c30:	str	r2, [sp]
   41c34:	mov	r2, #12
   41c38:	bl	41044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1b8>
   41c3c:	ldr	r0, [sp, #12]
   41c40:	add	sp, sp, #20
   41c44:	pop	{pc}		; (ldr pc, [sp], #4)
   41c48:	b	41c1c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd90>
   41c4c:	push	{r4, r5, r6, r7, r8, r9, lr}
   41c50:	sub	sp, sp, #20
   41c54:	add	r7, sp, #12
   41c58:	mov	r6, r0
   41c5c:	mov	r5, r1
   41c60:	mov	r8, #0
   41c64:	mov	r0, r5
   41c68:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   41c6c:	cmp	r0, #176	; 0xb0
   41c70:	mov	r4, r0
   41c74:	beq	41e90 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e004>
   41c78:	bic	r2, r0, #127	; 0x7f
   41c7c:	ands	r1, r2, #255	; 0xff
   41c80:	beq	41cec <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de60>
   41c84:	and	r2, r0, #240	; 0xf0
   41c88:	cmp	r2, #128	; 0x80
   41c8c:	beq	41de8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2df5c>
   41c90:	cmp	r2, #144	; 0x90
   41c94:	beq	41d3c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2deb0>
   41c98:	cmp	r2, #160	; 0xa0
   41c9c:	beq	41d64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ded8>
   41ca0:	cmp	r2, #176	; 0xb0
   41ca4:	beq	41d9c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2df10>
   41ca8:	cmp	r2, #192	; 0xc0
   41cac:	beq	41e30 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dfa4>
   41cb0:	and	r3, r0, #248	; 0xf8
   41cb4:	cmp	r3, #208	; 0xd0
   41cb8:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41cbc:	and	r4, r0, #7
   41cc0:	mov	r1, #1
   41cc4:	add	r2, r4, #1
   41cc8:	mov	r0, r6
   41ccc:	orr	r2, r2, #524288	; 0x80000
   41cd0:	mov	r3, #5
   41cd4:	bl	41684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7f8>
   41cd8:	cmp	r0, #0
   41cdc:	beq	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   41ce0:	mov	r0, #9
   41ce4:	add	sp, sp, #20
   41ce8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   41cec:	lsl	r9, r0, #2
   41cf0:	mov	r3, r1
   41cf4:	str	r7, [sp]
   41cf8:	mov	r0, r6
   41cfc:	mov	r2, #13
   41d00:	uxtb	r9, r9
   41d04:	bl	41044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1b8>
   41d08:	ldr	r3, [sp, #12]
   41d0c:	add	r9, r9, #4
   41d10:	tst	r4, #64	; 0x40
   41d14:	rsbne	r9, r9, r3
   41d18:	addeq	r9, r3, r9
   41d1c:	str	r9, [sp, #12]
   41d20:	mov	r1, #0
   41d24:	str	r7, [sp]
   41d28:	mov	r3, r1
   41d2c:	mov	r0, r6
   41d30:	mov	r2, #13
   41d34:	bl	410cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d240>
   41d38:	b	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   41d3c:	and	r3, r0, #13
   41d40:	cmp	r3, #13
   41d44:	beq	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41d48:	mov	r1, #0
   41d4c:	and	r2, r0, #15
   41d50:	str	r7, [sp]
   41d54:	mov	r3, r1
   41d58:	mov	r0, r6
   41d5c:	bl	41044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1b8>
   41d60:	b	41d20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de94>
   41d64:	mvn	r4, r0
   41d68:	mov	r2, #4080	; 0xff0
   41d6c:	and	r4, r4, #7
   41d70:	tst	r0, #8
   41d74:	asr	r2, r2, r4
   41d78:	mov	r1, #0
   41d7c:	and	r2, r2, #4080	; 0xff0
   41d80:	orrne	r2, r2, #16384	; 0x4000
   41d84:	mov	r3, r1
   41d88:	mov	r0, r6
   41d8c:	bl	41684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7f8>
   41d90:	cmp	r0, #0
   41d94:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41d98:	b	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   41d9c:	cmp	r0, #177	; 0xb1
   41da0:	beq	41ed8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e04c>
   41da4:	cmp	r0, #178	; 0xb2
   41da8:	beq	41ef4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e068>
   41dac:	cmp	r0, #179	; 0xb3
   41db0:	beq	41f74 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e0e8>
   41db4:	and	r3, r0, #252	; 0xfc
   41db8:	cmp	r3, #180	; 0xb4
   41dbc:	beq	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41dc0:	and	r2, r0, #7
   41dc4:	mov	r1, #1
   41dc8:	add	r2, r2, r1
   41dcc:	mov	r3, r1
   41dd0:	orr	r2, r2, #524288	; 0x80000
   41dd4:	mov	r0, r6
   41dd8:	bl	41684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7f8>
   41ddc:	cmp	r0, #0
   41de0:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41de4:	b	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   41de8:	mov	r0, r5
   41dec:	lsl	r4, r4, #8
   41df0:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   41df4:	orr	r0, r0, r4
   41df8:	cmp	r0, #32768	; 0x8000
   41dfc:	beq	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41e00:	lsl	r4, r0, #4
   41e04:	mov	r1, #0
   41e08:	movw	r2, #65520	; 0xfff0
   41e0c:	mov	r3, r1
   41e10:	and	r2, r4, r2
   41e14:	mov	r0, r6
   41e18:	bl	41684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7f8>
   41e1c:	cmp	r0, #0
   41e20:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41e24:	tst	r4, #32768	; 0x8000
   41e28:	movne	r8, #1
   41e2c:	b	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   41e30:	cmp	r0, #198	; 0xc6
   41e34:	beq	41f94 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e108>
   41e38:	cmp	r0, #199	; 0xc7
   41e3c:	beq	41fb0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e124>
   41e40:	and	r3, r0, #248	; 0xf8
   41e44:	cmp	r3, #192	; 0xc0
   41e48:	beq	41fe0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e154>
   41e4c:	cmp	r0, #200	; 0xc8
   41e50:	beq	42008 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e17c>
   41e54:	cmp	r0, #201	; 0xc9
   41e58:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41e5c:	mov	r0, r5
   41e60:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   41e64:	mov	r1, #1
   41e68:	and	r3, r0, #15
   41e6c:	and	r2, r0, #240	; 0xf0
   41e70:	add	r3, r3, #1
   41e74:	mov	r0, r6
   41e78:	orr	r2, r3, r2, lsl #12
   41e7c:	mov	r3, #5
   41e80:	bl	41684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7f8>
   41e84:	cmp	r0, #0
   41e88:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41e8c:	b	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   41e90:	cmp	r8, #0
   41e94:	movne	r0, #0
   41e98:	bne	41ce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de58>
   41e9c:	add	r4, sp, #12
   41ea0:	mov	r1, r8
   41ea4:	mov	r2, #14
   41ea8:	mov	r3, r8
   41eac:	mov	r0, r6
   41eb0:	str	r4, [sp]
   41eb4:	bl	41044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1b8>
   41eb8:	str	r4, [sp]
   41ebc:	mov	r0, r6
   41ec0:	mov	r1, r8
   41ec4:	mov	r2, #15
   41ec8:	mov	r3, r8
   41ecc:	bl	410cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d240>
   41ed0:	mov	r0, r8
   41ed4:	b	41ce4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de58>
   41ed8:	mov	r0, r5
   41edc:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   41ee0:	subs	r2, r0, #0
   41ee4:	beq	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41ee8:	ands	r1, r2, #240	; 0xf0
   41eec:	beq	41d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2def8>
   41ef0:	b	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41ef4:	mov	r1, #0
   41ef8:	mov	r2, #13
   41efc:	mov	r3, r1
   41f00:	str	r7, [sp]
   41f04:	mov	r0, r6
   41f08:	mov	r4, #2
   41f0c:	bl	41044 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d1b8>
   41f10:	mov	r0, r5
   41f14:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   41f18:	tst	r0, #128	; 0x80
   41f1c:	beq	41f44 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e0b8>
   41f20:	and	r2, r0, #127	; 0x7f
   41f24:	ldr	r3, [sp, #12]
   41f28:	mov	r0, r5
   41f2c:	add	r3, r3, r2, lsl r4
   41f30:	str	r3, [sp, #12]
   41f34:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   41f38:	add	r4, r4, #7
   41f3c:	tst	r0, #128	; 0x80
   41f40:	bne	41f20 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e094>
   41f44:	ldr	ip, [sp, #12]
   41f48:	and	lr, r0, #127	; 0x7f
   41f4c:	mov	r1, #0
   41f50:	str	r7, [sp]
   41f54:	add	ip, ip, #516	; 0x204
   41f58:	mov	r3, r1
   41f5c:	mov	r0, r6
   41f60:	mov	r2, #13
   41f64:	add	r4, ip, lr, lsl r4
   41f68:	str	r4, [sp, #12]
   41f6c:	bl	410cc <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d240>
   41f70:	b	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   41f74:	mov	r0, r5
   41f78:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   41f7c:	mov	r1, #1
   41f80:	and	r3, r0, #15
   41f84:	and	r2, r0, #240	; 0xf0
   41f88:	add	r3, r3, #1
   41f8c:	orr	r2, r3, r2, lsl #12
   41f90:	b	41d84 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2def8>
   41f94:	mov	r0, r5
   41f98:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   41f9c:	mov	r1, #3
   41fa0:	and	r3, r0, #15
   41fa4:	and	r2, r0, #240	; 0xf0
   41fa8:	add	r3, r3, #1
   41fac:	b	41f8c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e100>
   41fb0:	mov	r0, r5
   41fb4:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   41fb8:	subs	r2, r0, #0
   41fbc:	beq	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41fc0:	ands	r3, r2, #240	; 0xf0
   41fc4:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41fc8:	mov	r0, r6
   41fcc:	mov	r1, #4
   41fd0:	bl	41684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7f8>
   41fd4:	cmp	r0, #0
   41fd8:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   41fdc:	b	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   41fe0:	and	r2, r0, #15
   41fe4:	mov	r1, #3
   41fe8:	add	r2, r2, #1
   41fec:	mov	r3, r1
   41ff0:	orr	r2, r2, #655360	; 0xa0000
   41ff4:	mov	r0, r6
   41ff8:	bl	41684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7f8>
   41ffc:	cmp	r0, #0
   42000:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   42004:	b	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   42008:	mov	r0, r5
   4200c:	bl	41bb8 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2dd2c>
   42010:	mov	r1, #1
   42014:	and	r2, r0, #240	; 0xf0
   42018:	and	r3, r0, #15
   4201c:	add	r2, r2, #16
   42020:	add	r3, r3, #1
   42024:	mov	r0, r6
   42028:	orr	r2, r3, r2, lsl #12
   4202c:	mov	r3, #5
   42030:	bl	41684 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2d7f8>
   42034:	cmp	r0, #0
   42038:	bne	41ce0 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2de54>
   4203c:	b	41c64 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddd8>
   42040:	ldr	r3, [r0, #76]	; 0x4c
   42044:	mov	r0, r1
   42048:	push	{lr}		; (str lr, [sp, #-4]!)
   4204c:	sub	sp, sp, #20
   42050:	ldr	r2, [r3, #4]
   42054:	add	ip, r3, #8
   42058:	mov	lr, #3
   4205c:	strb	lr, [sp, #12]
   42060:	ldrb	r3, [r3, #7]
   42064:	add	r1, sp, #4
   42068:	lsl	r2, r2, #8
   4206c:	stmib	sp, {r2, ip}
   42070:	strb	r3, [sp, #13]
   42074:	bl	41c4c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddc0>
   42078:	add	sp, sp, #20
   4207c:	pop	{pc}		; (ldr pc, [sp], #4)
   42080:	push	{r3, lr}
   42084:	bl	41c48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddbc>
   42088:	ldr	r0, [r0, #72]	; 0x48
   4208c:	pop	{r3, pc}
   42090:	push	{r3, lr}
   42094:	bl	41c48 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2ddbc>
   42098:	ldr	r3, [r0, #76]	; 0x4c
   4209c:	ldrb	r2, [r3, #7]
   420a0:	add	r0, r3, r2, lsl #2
   420a4:	add	r0, r0, #8
   420a8:	pop	{r3, pc}
   420ac:	push	{r3, lr}
   420b0:	bl	13e14 <abort@plt>
   420b4:	push	{r3, lr}
   420b8:	bl	13e14 <abort@plt>
   420bc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   420c0:	mov	r7, r0
   420c4:	ldr	r6, [pc, #76]	; 42118 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e28c>
   420c8:	mov	r8, r1
   420cc:	ldr	r5, [pc, #72]	; 4211c <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e290>
   420d0:	mov	r9, r2
   420d4:	add	r6, pc, r6
   420d8:	bl	133ec <_init@@Base>
   420dc:	add	r5, pc, r5
   420e0:	rsb	r6, r5, r6
   420e4:	asrs	r6, r6, #2
   420e8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   420ec:	sub	r5, r5, #4
   420f0:	mov	r4, #0
   420f4:	add	r4, r4, #1
   420f8:	ldr	r3, [r5, #4]!
   420fc:	mov	r0, r7
   42100:	mov	r1, r8
   42104:	mov	r2, r9
   42108:	blx	r3
   4210c:	cmp	r4, r6
   42110:	bne	420f4 <bfd_elf32_arm_stm32l4xx_erratum_scan@plt+0x2e268>
   42114:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   42118:	andeq	ip, r5, ip, lsl lr
   4211c:	andeq	ip, r5, r0, lsl lr
   42120:	bx	lr

Disassembly of section .fini:

00042124 <_fini@@Base>:
   42124:	push	{r3, lr}
   42128:	pop	{r3, pc}
