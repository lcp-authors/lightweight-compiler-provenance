
centos-preinstalled/md5sum:     file format elf32-littlearm


Disassembly of section .init:

00011054 <.init>:
   11054:	push	{r3, lr}
   11058:	bl	1253c <dcngettext@plt+0x11ec>
   1105c:	pop	{r3, pc}

Disassembly of section .plt:

00011060 <fdopen@plt-0x14>:
   11060:	push	{lr}		; (str lr, [sp, #-4]!)
   11064:	ldr	lr, [pc, #4]	; 11070 <fdopen@plt-0x4>
   11068:	add	lr, pc, lr
   1106c:	ldr	pc, [lr, #8]!
   11070:	muleq	r1, r0, pc	; <UNPREDICTABLE>

00011074 <fdopen@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #94208	; 0x17000
   1107c:	ldr	pc, [ip, #3984]!	; 0xf90

00011080 <calloc@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #94208	; 0x17000
   11088:	ldr	pc, [ip, #3976]!	; 0xf88

0001108c <fputs_unlocked@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #94208	; 0x17000
   11094:	ldr	pc, [ip, #3968]!	; 0xf80

00011098 <raise@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #94208	; 0x17000
   110a0:	ldr	pc, [ip, #3960]!	; 0xf78

000110a4 <__getdelim@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #94208	; 0x17000
   110ac:	ldr	pc, [ip, #3952]!	; 0xf70

000110b0 <strcmp@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #94208	; 0x17000
   110b8:	ldr	pc, [ip, #3944]!	; 0xf68

000110bc <posix_fadvise64@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #94208	; 0x17000
   110c4:	ldr	pc, [ip, #3936]!	; 0xf60

000110c8 <fflush@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #94208	; 0x17000
   110d0:	ldr	pc, [ip, #3928]!	; 0xf58

000110d4 <free@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #94208	; 0x17000
   110dc:	ldr	pc, [ip, #3920]!	; 0xf50

000110e0 <_exit@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #94208	; 0x17000
   110e8:	ldr	pc, [ip, #3912]!	; 0xf48

000110ec <memcpy@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #94208	; 0x17000
   110f4:	ldr	pc, [ip, #3904]!	; 0xf40

000110f8 <mbsinit@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #94208	; 0x17000
   11100:	ldr	pc, [ip, #3896]!	; 0xf38

00011104 <fwrite_unlocked@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #94208	; 0x17000
   1110c:	ldr	pc, [ip, #3888]!	; 0xf30

00011110 <memcmp@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #94208	; 0x17000
   11118:	ldr	pc, [ip, #3880]!	; 0xf28

0001111c <dcgettext@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #94208	; 0x17000
   11124:	ldr	pc, [ip, #3872]!	; 0xf20

00011128 <__stack_chk_fail@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #94208	; 0x17000
   11130:	ldr	pc, [ip, #3864]!	; 0xf18

00011134 <realloc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #94208	; 0x17000
   1113c:	ldr	pc, [ip, #3856]!	; 0xf10

00011140 <textdomain@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #94208	; 0x17000
   11148:	ldr	pc, [ip, #3848]!	; 0xf08

0001114c <iswprint@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #94208	; 0x17000
   11154:	ldr	pc, [ip, #3840]!	; 0xf00

00011158 <fwrite@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #94208	; 0x17000
   11160:	ldr	pc, [ip, #3832]!	; 0xef8

00011164 <lseek64@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #94208	; 0x17000
   1116c:	ldr	pc, [ip, #3824]!	; 0xef0

00011170 <__ctype_get_mb_cur_max@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #94208	; 0x17000
   11178:	ldr	pc, [ip, #3816]!	; 0xee8

0001117c <strcpy@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #94208	; 0x17000
   11184:	ldr	pc, [ip, #3808]!	; 0xee0

00011188 <__fpending@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3800]!	; 0xed8

00011194 <mbrtowc@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3792]!	; 0xed0

000111a0 <error@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #94208	; 0x17000
   111a8:	ldr	pc, [ip, #3784]!	; 0xec8

000111ac <open64@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #94208	; 0x17000
   111b4:	ldr	pc, [ip, #3776]!	; 0xec0

000111b8 <getenv@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #94208	; 0x17000
   111c0:	ldr	pc, [ip, #3768]!	; 0xeb8

000111c4 <malloc@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #94208	; 0x17000
   111cc:	ldr	pc, [ip, #3760]!	; 0xeb0

000111d0 <__libc_start_main@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #94208	; 0x17000
   111d8:	ldr	pc, [ip, #3752]!	; 0xea8

000111dc <__freading@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #94208	; 0x17000
   111e4:	ldr	pc, [ip, #3744]!	; 0xea0

000111e8 <__ctype_tolower_loc@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #94208	; 0x17000
   111f0:	ldr	pc, [ip, #3736]!	; 0xe98

000111f4 <__gmon_start__@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #94208	; 0x17000
   111fc:	ldr	pc, [ip, #3728]!	; 0xe90

00011200 <getopt_long@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #94208	; 0x17000
   11208:	ldr	pc, [ip, #3720]!	; 0xe88

0001120c <__ctype_b_loc@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #94208	; 0x17000
   11214:	ldr	pc, [ip, #3712]!	; 0xe80

00011218 <exit@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #94208	; 0x17000
   11220:	ldr	pc, [ip, #3704]!	; 0xe78

00011224 <strlen@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3696]!	; 0xe70

00011230 <strchr@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3688]!	; 0xe68

0001123c <ungetc@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3680]!	; 0xe60

00011248 <fcntl@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3672]!	; 0xe58

00011254 <__errno_location@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3664]!	; 0xe50

00011260 <__cxa_atexit@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3656]!	; 0xe48

0001126c <setvbuf@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3648]!	; 0xe40

00011278 <memset@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3640]!	; 0xe38

00011284 <fscanf@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3632]!	; 0xe30

00011290 <__printf_chk@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3624]!	; 0xe28

0001129c <fileno@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3616]!	; 0xe20

000112a8 <__fprintf_chk@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3608]!	; 0xe18

000112b4 <fclose@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3600]!	; 0xe10

000112c0 <fseeko64@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3592]!	; 0xe08

000112cc <__uflow@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3584]!	; 0xe00

000112d8 <__overflow@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #94208	; 0x17000
   112e0:	ldr	pc, [ip, #3576]!	; 0xdf8

000112e4 <setlocale@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #94208	; 0x17000
   112ec:	ldr	pc, [ip, #3568]!	; 0xdf0

000112f0 <strrchr@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #94208	; 0x17000
   112f8:	ldr	pc, [ip, #3560]!	; 0xde8

000112fc <nl_langinfo@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #94208	; 0x17000
   11304:	ldr	pc, [ip, #3552]!	; 0xde0

00011308 <fopen64@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #94208	; 0x17000
   11310:	ldr	pc, [ip, #3544]!	; 0xdd8

00011314 <bindtextdomain@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #94208	; 0x17000
   1131c:	ldr	pc, [ip, #3536]!	; 0xdd0

00011320 <fread_unlocked@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #94208	; 0x17000
   11328:	ldr	pc, [ip, #3528]!	; 0xdc8

0001132c <strncmp@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #94208	; 0x17000
   11334:	ldr	pc, [ip, #3520]!	; 0xdc0

00011338 <abort@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #94208	; 0x17000
   11340:	ldr	pc, [ip, #3512]!	; 0xdb8

00011344 <close@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #94208	; 0x17000
   1134c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011350 <dcngettext@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #94208	; 0x17000
   11358:	ldr	pc, [ip, #3496]!	; 0xda8

Disassembly of section .text:

0001135c <close_stdout@@Base-0x18c0>:
   1135c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11360:	sub	sp, sp, #212	; 0xd4
   11364:	ldr	sl, [pc, #4072]	; 12354 <dcngettext@plt+0x1004>
   11368:	mov	r4, #0
   1136c:	ldr	r3, [pc, #4068]	; 12358 <dcngettext@plt+0x1008>
   11370:	mov	r6, r1
   11374:	add	sl, pc, sl
   11378:	str	r0, [sp, #24]
   1137c:	str	r4, [sp, #28]
   11380:	mvn	r5, #0
   11384:	str	r4, [sp, #44]	; 0x2c
   11388:	ldr	r3, [sl, r3]
   1138c:	ldr	r0, [r1]
   11390:	str	r5, [sp, #16]
   11394:	ldr	r3, [r3]
   11398:	ldr	r7, [pc, #4028]	; 1235c <dcngettext@plt+0x100c>
   1139c:	ldr	r5, [pc, #4028]	; 12360 <dcngettext@plt+0x1010>
   113a0:	str	r3, [sp, #204]	; 0xcc
   113a4:	bl	13e00 <close_stdout@@Base+0x11e4>
   113a8:	ldr	r1, [pc, #4020]	; 12364 <dcngettext@plt+0x1014>
   113ac:	mov	r0, #6
   113b0:	add	r7, pc, r7
   113b4:	ldr	r4, [pc, #4012]	; 12368 <dcngettext@plt+0x1018>
   113b8:	add	r1, pc, r1
   113bc:	ldr	r9, [pc, #4008]	; 1236c <dcngettext@plt+0x101c>
   113c0:	bl	112e4 <setlocale@plt>
   113c4:	ldr	r1, [pc, #4004]	; 12370 <dcngettext@plt+0x1020>
   113c8:	mov	r0, r7
   113cc:	ldr	r8, [pc, #4000]	; 12374 <dcngettext@plt+0x1024>
   113d0:	add	r1, pc, r1
   113d4:	add	r5, pc, r5
   113d8:	bl	11314 <bindtextdomain@plt>
   113dc:	mov	r0, r7
   113e0:	bl	11140 <textdomain@plt>
   113e4:	ldr	r3, [pc, #3980]	; 12378 <dcngettext@plt+0x1028>
   113e8:	ldr	r7, [pc, #3980]	; 1237c <dcngettext@plt+0x102c>
   113ec:	add	r4, pc, r4
   113f0:	add	r9, pc, r9
   113f4:	add	r8, pc, r8
   113f8:	add	r7, pc, r7
   113fc:	str	r7, [sp, #32]
   11400:	ldr	r0, [sl, r3]
   11404:	bl	17224 <close_stdout@@Base+0x4608>
   11408:	ldr	r0, [pc, #3952]	; 12380 <dcngettext@plt+0x1030>
   1140c:	mov	r1, #0
   11410:	mov	r2, #1
   11414:	mov	r3, r1
   11418:	ldr	r7, [pc, #3940]	; 12384 <dcngettext@plt+0x1034>
   1141c:	ldr	r0, [sl, r0]
   11420:	add	r7, pc, r7
   11424:	str	r0, [sp, #40]	; 0x28
   11428:	ldr	r0, [r0]
   1142c:	bl	1126c <setvbuf@plt>
   11430:	mov	fp, #0
   11434:	ldr	r0, [sp, #24]
   11438:	str	fp, [sp]
   1143c:	mov	r1, r6
   11440:	mov	r2, r5
   11444:	mov	r3, r4
   11448:	bl	11200 <getopt_long@plt>
   1144c:	cmn	r0, #1
   11450:	beq	115c0 <dcngettext@plt+0x270>
   11454:	cmp	r0, #116	; 0x74
   11458:	beq	115b8 <dcngettext@plt+0x268>
   1145c:	ble	11494 <dcngettext@plt+0x144>
   11460:	movw	r3, #257	; 0x101
   11464:	cmp	r0, r3
   11468:	beq	1159c <dcngettext@plt+0x24c>
   1146c:	bgt	114bc <dcngettext@plt+0x16c>
   11470:	cmp	r0, #119	; 0x77
   11474:	beq	11500 <dcngettext@plt+0x1b0>
   11478:	cmp	r0, #256	; 0x100
   1147c:	bne	11594 <dcngettext@plt+0x244>
   11480:	mov	r3, #1
   11484:	strb	fp, [r7, #2]
   11488:	strb	fp, [r7, #3]
   1148c:	strb	r3, [r7, #1]
   11490:	b	11430 <dcngettext@plt+0xe0>
   11494:	cmn	r0, #2
   11498:	beq	115b0 <dcngettext@plt+0x260>
   1149c:	ble	11514 <dcngettext@plt+0x1c4>
   114a0:	cmp	r0, #98	; 0x62
   114a4:	beq	114f4 <dcngettext@plt+0x1a4>
   114a8:	cmp	r0, #99	; 0x63
   114ac:	bne	11594 <dcngettext@plt+0x244>
   114b0:	mov	ip, #1
   114b4:	str	ip, [sp, #44]	; 0x2c
   114b8:	b	11430 <dcngettext@plt+0xe0>
   114bc:	movw	r3, #258	; 0x102
   114c0:	cmp	r0, r3
   114c4:	beq	114e4 <dcngettext@plt+0x194>
   114c8:	add	r3, r3, #1
   114cc:	cmp	r0, r3
   114d0:	bne	11594 <dcngettext@plt+0x244>
   114d4:	mov	ip, #1
   114d8:	str	ip, [sp, #28]
   114dc:	str	ip, [sp, #16]
   114e0:	b	11430 <dcngettext@plt+0xe0>
   114e4:	ldr	ip, [sp, #32]
   114e8:	mov	r3, #1
   114ec:	strb	r3, [ip, #4]
   114f0:	b	11430 <dcngettext@plt+0xe0>
   114f4:	mov	ip, #1
   114f8:	str	ip, [sp, #16]
   114fc:	b	11430 <dcngettext@plt+0xe0>
   11500:	mov	r3, #1
   11504:	strb	fp, [r8, #1]
   11508:	strb	fp, [r8, #3]
   1150c:	strb	r3, [r8, #2]
   11510:	b	11430 <dcngettext@plt+0xe0>
   11514:	cmn	r0, #3
   11518:	bne	11594 <dcngettext@plt+0x244>
   1151c:	ldr	r3, [pc, #3684]	; 12388 <dcngettext@plt+0x1038>
   11520:	ldr	r4, [sp, #40]	; 0x28
   11524:	ldr	r1, [pc, #3680]	; 1238c <dcngettext@plt+0x103c>
   11528:	ldr	r3, [sl, r3]
   1152c:	ldr	r2, [pc, #3676]	; 12390 <dcngettext@plt+0x1040>
   11530:	add	r1, pc, r1
   11534:	ldr	r0, [r4]
   11538:	ldr	r3, [r3]
   1153c:	add	r2, pc, r2
   11540:	ldr	ip, [pc, #3660]	; 12394 <dcngettext@plt+0x1044>
   11544:	stmib	sp, {r1, r2}
   11548:	ldr	r1, [pc, #3656]	; 12398 <dcngettext@plt+0x1048>
   1154c:	add	ip, pc, ip
   11550:	ldr	r2, [pc, #3652]	; 1239c <dcngettext@plt+0x104c>
   11554:	str	fp, [sp, #12]
   11558:	add	r1, pc, r1
   1155c:	str	ip, [sp]
   11560:	add	r2, pc, r2
   11564:	bl	15af8 <close_stdout@@Base+0x2edc>
   11568:	mov	r0, fp
   1156c:	bl	11218 <exit@plt>
   11570:	ldr	r1, [pc, #3624]	; 123a0 <dcngettext@plt+0x1050>
   11574:	mov	r2, #5
   11578:	mov	r0, fp
   1157c:	add	r1, pc, r1
   11580:	bl	1111c <dcgettext@plt>
   11584:	mov	r1, fp
   11588:	mov	r2, r0
   1158c:	mov	r0, fp
   11590:	bl	111a0 <error@plt>
   11594:	mov	r0, #1
   11598:	bl	12924 <dcngettext@plt+0x15d4>
   1159c:	mov	r3, #1
   115a0:	strb	fp, [r9, #1]
   115a4:	strb	fp, [r9, #2]
   115a8:	strb	r3, [r9, #3]
   115ac:	b	11430 <dcngettext@plt+0xe0>
   115b0:	mov	r0, fp
   115b4:	bl	12924 <dcngettext@plt+0x15d4>
   115b8:	str	fp, [sp, #16]
   115bc:	b	11430 <dcngettext@plt+0xe0>
   115c0:	ldr	r4, [sp, #28]
   115c4:	mov	r1, #34	; 0x22
   115c8:	ldr	r5, [sp, #16]
   115cc:	mov	r2, #32
   115d0:	ldr	r3, [pc, #3532]	; 123a4 <dcngettext@plt+0x1054>
   115d4:	cmp	r5, fp
   115d8:	movne	r4, #0
   115dc:	andeq	r4, r4, #1
   115e0:	add	r3, pc, r3
   115e4:	cmp	r4, fp
   115e8:	str	r1, [r3, #8]
   115ec:	str	r2, [r3, #12]
   115f0:	bne	11570 <dcngettext@plt+0x220>
   115f4:	ldr	r7, [sp, #44]	; 0x2c
   115f8:	ldr	ip, [sp, #28]
   115fc:	ands	r5, r7, ip
   11600:	bne	1168c <dcngettext@plt+0x33c>
   11604:	ldr	r2, [sp, #44]	; 0x2c
   11608:	ldr	r4, [sp, #16]
   1160c:	cmp	r4, #0
   11610:	movlt	r2, #0
   11614:	andge	r2, r2, #1
   11618:	cmp	r2, #0
   1161c:	bne	121e8 <dcngettext@plt+0xe98>
   11620:	ldrb	r2, [r3, #1]
   11624:	cmp	r2, #0
   11628:	beq	116b8 <dcngettext@plt+0x368>
   1162c:	ldr	r5, [sp, #44]	; 0x2c
   11630:	cmp	r5, #0
   11634:	beq	122ac <dcngettext@plt+0xf5c>
   11638:	ldrb	r3, [r3, #3]
   1163c:	cmp	r3, #0
   11640:	bne	116d0 <dcngettext@plt+0x380>
   11644:	ldr	r3, [pc, #3420]	; 123a8 <dcngettext@plt+0x1058>
   11648:	ldr	r4, [sp, #44]	; 0x2c
   1164c:	add	r3, pc, r3
   11650:	eor	r2, r4, #1
   11654:	ldrb	r3, [r3, #4]
   11658:	tst	r2, r3
   1165c:	beq	116d0 <dcngettext@plt+0x380>
   11660:	ldr	r1, [pc, #3396]	; 123ac <dcngettext@plt+0x105c>
   11664:	mov	r2, #5
   11668:	mov	r0, #0
   1166c:	add	r1, pc, r1
   11670:	bl	1111c <dcgettext@plt>
   11674:	mov	r2, r0
   11678:	mov	r0, #0
   1167c:	mov	r1, r0
   11680:	bl	111a0 <error@plt>
   11684:	mov	r0, #1
   11688:	bl	12924 <dcngettext@plt+0x15d4>
   1168c:	ldr	r1, [pc, #3356]	; 123b0 <dcngettext@plt+0x1060>
   11690:	mov	r2, #5
   11694:	mov	r0, r4
   11698:	add	r1, pc, r1
   1169c:	bl	1111c <dcgettext@plt>
   116a0:	mov	r1, r4
   116a4:	mov	r2, r0
   116a8:	mov	r0, r4
   116ac:	bl	111a0 <error@plt>
   116b0:	mov	r0, #1
   116b4:	bl	12924 <dcngettext@plt+0x15d4>
   116b8:	ldrb	r2, [r3, #2]
   116bc:	cmp	r2, #0
   116c0:	beq	120a4 <dcngettext@plt+0xd54>
   116c4:	ldr	r7, [sp, #44]	; 0x2c
   116c8:	cmp	r7, #0
   116cc:	beq	1231c <dcngettext@plt+0xfcc>
   116d0:	ldr	r5, [sp, #16]
   116d4:	ldr	r3, [pc, #3288]	; 123b4 <dcngettext@plt+0x1064>
   116d8:	cmn	r5, #1
   116dc:	ldr	ip, [sp, #24]
   116e0:	moveq	r5, #0
   116e4:	str	r5, [sp, #16]
   116e8:	ldr	r3, [sl, r3]
   116ec:	str	r3, [sp, #88]	; 0x58
   116f0:	ldr	r3, [r3]
   116f4:	cmp	r3, ip
   116f8:	beq	12304 <dcngettext@plt+0xfb4>
   116fc:	ldr	r4, [sp, #16]
   11700:	mov	r5, #1
   11704:	str	sl, [sp, #128]	; 0x80
   11708:	cmp	r4, #0
   1170c:	ldr	sl, [sp, #48]	; 0x30
   11710:	str	r5, [sp, #120]	; 0x78
   11714:	movne	r4, #42	; 0x2a
   11718:	moveq	r4, #32
   1171c:	uxtb	ip, r4
   11720:	str	r4, [sp, #144]	; 0x90
   11724:	ldr	r7, [pc, #3212]	; 123b8 <dcngettext@plt+0x1068>
   11728:	ldr	r4, [pc, #3212]	; 123bc <dcngettext@plt+0x106c>
   1172c:	ldr	r5, [pc, #3212]	; 123c0 <dcngettext@plt+0x1070>
   11730:	add	r7, pc, r7
   11734:	add	r4, pc, r4
   11738:	str	r7, [sp, #132]	; 0x84
   1173c:	add	r5, pc, r5
   11740:	str	ip, [sp, #148]	; 0x94
   11744:	str	r4, [sp, #136]	; 0x88
   11748:	str	r5, [sp, #140]	; 0x8c
   1174c:	str	r6, [sp, #124]	; 0x7c
   11750:	ldr	r6, [sp, #88]	; 0x58
   11754:	ldr	r7, [sp, #24]
   11758:	ldr	r3, [r6]
   1175c:	cmp	r7, r3
   11760:	ble	121c0 <dcngettext@plt+0xe70>
   11764:	ldr	r7, [sp, #124]	; 0x7c
   11768:	ldr	r6, [sp, #44]	; 0x2c
   1176c:	ldr	r3, [r7, r3, lsl #2]
   11770:	cmp	r6, #0
   11774:	str	r3, [sp, #68]	; 0x44
   11778:	beq	11b74 <dcngettext@plt+0x824>
   1177c:	ldrb	r3, [r3]
   11780:	cmp	r3, #45	; 0x2d
   11784:	bne	11f08 <dcngettext@plt+0xbb8>
   11788:	ldr	ip, [sp, #68]	; 0x44
   1178c:	ldrb	r0, [ip, #1]
   11790:	cmp	r0, #0
   11794:	bne	11f08 <dcngettext@plt+0xbb8>
   11798:	ldr	r3, [pc, #3108]	; 123c4 <dcngettext@plt+0x1074>
   1179c:	mov	r2, #5
   117a0:	ldr	r1, [pc, #3104]	; 123c8 <dcngettext@plt+0x1078>
   117a4:	mov	r4, #1
   117a8:	add	r3, pc, r3
   117ac:	add	r1, pc, r1
   117b0:	strb	r4, [r3]
   117b4:	bl	1111c <dcgettext@plt>
   117b8:	str	r4, [sp, #92]	; 0x5c
   117bc:	ldr	r3, [pc, #3080]	; 123cc <dcngettext@plt+0x107c>
   117c0:	ldr	r4, [sp, #128]	; 0x80
   117c4:	str	r0, [sp, #68]	; 0x44
   117c8:	ldr	r3, [r4, r3]
   117cc:	ldr	r9, [r3]
   117d0:	mov	r6, #0
   117d4:	mov	r7, #0
   117d8:	strd	r6, [sp, #80]	; 0x50
   117dc:	add	ip, sp, #160	; 0xa0
   117e0:	strd	r6, [sp, #112]	; 0x70
   117e4:	mov	r4, #1
   117e8:	strd	r6, [sp, #96]	; 0x60
   117ec:	mov	r5, #0
   117f0:	strd	r6, [sp, #32]
   117f4:	mov	r3, #0
   117f8:	strd	r6, [sp, #16]
   117fc:	add	r7, sp, #156	; 0x9c
   11800:	ldr	r6, [pc, #3016]	; 123d0 <dcngettext@plt+0x1080>
   11804:	str	r7, [sp, #48]	; 0x30
   11808:	add	r6, pc, r6
   1180c:	str	ip, [sp, #52]	; 0x34
   11810:	str	r6, [sp, #64]	; 0x40
   11814:	ldr	r7, [pc, #3000]	; 123d4 <dcngettext@plt+0x1084>
   11818:	ldr	ip, [pc, #3000]	; 123d8 <dcngettext@plt+0x1088>
   1181c:	ldr	r6, [pc, #3000]	; 123dc <dcngettext@plt+0x108c>
   11820:	add	r7, pc, r7
   11824:	add	ip, pc, ip
   11828:	str	r3, [sp, #156]	; 0x9c
   1182c:	add	r6, pc, r6
   11830:	str	r3, [sp, #160]	; 0xa0
   11834:	str	r7, [sp, #72]	; 0x48
   11838:	str	ip, [sp, #104]	; 0x68
   1183c:	str	r6, [sp, #108]	; 0x6c
   11840:	add	r0, sp, #156	; 0x9c
   11844:	add	r1, sp, #160	; 0xa0
   11848:	mov	r2, #10
   1184c:	mov	r3, r9
   11850:	bl	110a4 <__getdelim@plt>
   11854:	subs	fp, r0, #0
   11858:	ble	11d0c <dcngettext@plt+0x9bc>
   1185c:	ldr	r7, [sp, #156]	; 0x9c
   11860:	ldrb	r2, [r7]
   11864:	cmp	r2, #35	; 0x23
   11868:	beq	11a0c <dcngettext@plt+0x6bc>
   1186c:	add	r2, r7, fp
   11870:	ldrb	r2, [r2, #-1]
   11874:	cmp	r2, #10
   11878:	subeq	fp, fp, #1
   1187c:	moveq	r2, #0
   11880:	strbeq	r2, [r7, fp]
   11884:	ldreq	r7, [sp, #156]	; 0x9c
   11888:	ldrb	r2, [r7]
   1188c:	cmp	r2, #32
   11890:	cmpne	r2, #9
   11894:	movne	r6, #0
   11898:	moveq	r6, #1
   1189c:	bne	118bc <dcngettext@plt+0x56c>
   118a0:	mov	r1, r7
   118a4:	mov	r6, #0
   118a8:	ldrb	r2, [r1, #1]!
   118ac:	add	r6, r6, #1
   118b0:	cmp	r2, #32
   118b4:	cmpne	r2, #9
   118b8:	beq	118a8 <dcngettext@plt+0x558>
   118bc:	cmp	r2, #92	; 0x5c
   118c0:	ldr	r1, [sp, #64]	; 0x40
   118c4:	addeq	r6, r6, #1
   118c8:	mov	r2, #3
   118cc:	add	r8, r7, r6
   118d0:	moveq	ip, #1
   118d4:	movne	r3, #0
   118d8:	streq	ip, [sp, #56]	; 0x38
   118dc:	mov	r0, r8
   118e0:	strne	r3, [sp, #56]	; 0x38
   118e4:	bl	1132c <strncmp@plt>
   118e8:	cmp	r0, #0
   118ec:	bne	11910 <dcngettext@plt+0x5c0>
   118f0:	ldrb	r2, [r8, #3]
   118f4:	cmp	r2, #32
   118f8:	addeq	r6, r6, #1
   118fc:	add	r2, r6, #3
   11900:	ldrb	r1, [r7, r2]
   11904:	cmp	r1, #40	; 0x28
   11908:	beq	12048 <dcngettext@plt+0xcf8>
   1190c:	add	r8, r7, r6
   11910:	ldr	r2, [pc, #2760]	; 123e0 <dcngettext@plt+0x1090>
   11914:	rsb	r1, r6, fp
   11918:	ldrb	lr, [r8]
   1191c:	mov	r0, r8
   11920:	add	r2, pc, r2
   11924:	ldr	ip, [r2, #8]
   11928:	cmp	lr, #92	; 0x5c
   1192c:	addeq	ip, ip, #1
   11930:	cmp	r1, ip
   11934:	bcc	11a54 <dcngettext@plt+0x704>
   11938:	ldr	r2, [r2, #12]
   1193c:	add	r6, r6, r2
   11940:	ldrb	r2, [r7, r6]
   11944:	cmp	r2, #9
   11948:	cmpne	r2, #32
   1194c:	moveq	r2, #0
   11950:	movne	r2, #1
   11954:	bne	11a58 <dcngettext@plt+0x708>
   11958:	add	r1, r6, #1
   1195c:	strb	r2, [r7, r6]
   11960:	rsb	r2, r1, fp
   11964:	cmp	r2, #1
   11968:	beq	11b54 <dcngettext@plt+0x804>
   1196c:	ldrb	r2, [r7, r1]
   11970:	cmp	r2, #42	; 0x2a
   11974:	cmpne	r2, #32
   11978:	moveq	r2, #0
   1197c:	movne	r2, #1
   11980:	bne	11b54 <dcngettext@plt+0x804>
   11984:	ldr	r0, [pc, #2648]	; 123e4 <dcngettext@plt+0x1094>
   11988:	add	r0, pc, r0
   1198c:	ldr	ip, [r0]
   11990:	cmp	ip, #1
   11994:	strne	r2, [r0]
   11998:	addne	r1, r6, #2
   1199c:	ldr	r3, [sp, #56]	; 0x38
   119a0:	add	r7, r7, r1
   119a4:	str	r7, [sp, #76]	; 0x4c
   119a8:	cmp	r3, #0
   119ac:	moveq	sl, r8
   119b0:	bne	11ee4 <dcngettext@plt+0xb94>
   119b4:	ldr	r6, [sp, #92]	; 0x5c
   119b8:	cmp	r6, #0
   119bc:	beq	11a60 <dcngettext@plt+0x710>
   119c0:	ldr	r7, [sp, #76]	; 0x4c
   119c4:	ldrb	r3, [r7]
   119c8:	cmp	r3, #45	; 0x2d
   119cc:	bne	11a60 <dcngettext@plt+0x710>
   119d0:	ldrb	r3, [r7, #1]
   119d4:	cmp	r3, #0
   119d8:	bne	11a60 <dcngettext@plt+0x710>
   119dc:	ldr	ip, [sp, #72]	; 0x48
   119e0:	ldrd	r6, [sp, #16]
   119e4:	ldrb	r3, [ip, #2]
   119e8:	adds	r6, r6, #1
   119ec:	adc	r7, r7, #0
   119f0:	strd	r6, [sp, #16]
   119f4:	cmp	r3, #0
   119f8:	bne	11b20 <dcngettext@plt+0x7d0>
   119fc:	ldrd	r6, [sp, #32]
   11a00:	adds	r6, r6, #1
   11a04:	adc	r7, r7, #0
   11a08:	strd	r6, [sp, #32]
   11a0c:	ldr	r3, [r9]
   11a10:	ands	r6, r3, #48	; 0x30
   11a14:	bne	11d0c <dcngettext@plt+0x9bc>
   11a18:	adds	r4, r4, #1
   11a1c:	adc	r5, r5, #0
   11a20:	orrs	r7, r4, r5
   11a24:	bne	11840 <dcngettext@plt+0x4f0>
   11a28:	ldr	r1, [pc, #2488]	; 123e8 <dcngettext@plt+0x1098>
   11a2c:	mov	r0, r6
   11a30:	mov	r2, #5
   11a34:	add	r1, pc, r1
   11a38:	bl	1111c <dcgettext@plt>
   11a3c:	mov	r1, r6
   11a40:	ldr	r3, [sp, #68]	; 0x44
   11a44:	mov	r2, r0
   11a48:	mov	r0, #1
   11a4c:	bl	111a0 <error@plt>
   11a50:	b	11840 <dcngettext@plt+0x4f0>
   11a54:	mov	r0, sl
   11a58:	mov	sl, r0
   11a5c:	b	119dc <dcngettext@plt+0x68c>
   11a60:	ldr	r3, [pc, #2436]	; 123ec <dcngettext@plt+0x109c>
   11a64:	add	r3, pc, r3
   11a68:	ldr	r6, [r3, #12]
   11a6c:	cmp	r6, #0
   11a70:	beq	12214 <dcngettext@plt+0xec4>
   11a74:	bl	1120c <__ctype_b_loc@plt>
   11a78:	add	r1, sl, r6
   11a7c:	mov	r3, sl
   11a80:	ldr	r0, [r0]
   11a84:	ldrb	r2, [r3], #1
   11a88:	lsl	r2, r2, #1
   11a8c:	ldrh	r2, [r0, r2]
   11a90:	tst	r2, #4096	; 0x1000
   11a94:	beq	119dc <dcngettext@plt+0x68c>
   11a98:	cmp	r3, r1
   11a9c:	mov	r2, r3
   11aa0:	bne	11a84 <dcngettext@plt+0x734>
   11aa4:	ldrb	r8, [r2]
   11aa8:	cmp	r8, #0
   11aac:	bne	119dc <dcngettext@plt+0x68c>
   11ab0:	ldrd	r2, [sp, #96]	; 0x60
   11ab4:	add	r6, sp, #184	; 0xb8
   11ab8:	ldr	r0, [sp, #76]	; 0x4c
   11abc:	adds	r2, r2, #1
   11ac0:	mov	r1, r6
   11ac4:	adc	r3, r3, #0
   11ac8:	strd	r2, [sp, #96]	; 0x60
   11acc:	bl	127c4 <dcngettext@plt+0x1474>
   11ad0:	cmp	r0, #0
   11ad4:	bne	11f4c <dcngettext@plt+0xbfc>
   11ad8:	ldr	r3, [pc, #2320]	; 123f0 <dcngettext@plt+0x10a0>
   11adc:	ldrd	r6, [sp, #112]	; 0x70
   11ae0:	add	r3, pc, r3
   11ae4:	adds	r6, r6, #1
   11ae8:	ldrb	r3, [r3, #1]
   11aec:	adc	r7, r7, #0
   11af0:	strd	r6, [sp, #112]	; 0x70
   11af4:	cmp	r3, #0
   11af8:	bne	11a0c <dcngettext@plt+0x6bc>
   11afc:	ldr	r1, [pc, #2288]	; 123f4 <dcngettext@plt+0x10a4>
   11b00:	mov	r2, #5
   11b04:	add	r1, pc, r1
   11b08:	bl	1111c <dcgettext@plt>
   11b0c:	ldr	r2, [sp, #76]	; 0x4c
   11b10:	mov	r1, r0
   11b14:	mov	r0, #1
   11b18:	bl	11290 <__printf_chk@plt>
   11b1c:	b	11a0c <dcngettext@plt+0x6bc>
   11b20:	ldr	r1, [sp, #104]	; 0x68
   11b24:	mov	r2, #5
   11b28:	mov	r0, #0
   11b2c:	bl	1111c <dcgettext@plt>
   11b30:	ldr	r7, [sp, #108]	; 0x6c
   11b34:	strd	r4, [sp]
   11b38:	ldr	r3, [sp, #68]	; 0x44
   11b3c:	str	r7, [sp, #8]
   11b40:	mov	r2, r0
   11b44:	mov	r0, #0
   11b48:	mov	r1, r0
   11b4c:	bl	111a0 <error@plt>
   11b50:	b	119fc <dcngettext@plt+0x6ac>
   11b54:	ldr	r2, [pc, #2204]	; 123f8 <dcngettext@plt+0x10a8>
   11b58:	add	r2, pc, r2
   11b5c:	ldr	ip, [r2]
   11b60:	cmp	ip, #0
   11b64:	movne	r0, #1
   11b68:	strne	r0, [r2]
   11b6c:	bne	1199c <dcngettext@plt+0x64c>
   11b70:	b	11a58 <dcngettext@plt+0x708>
   11b74:	add	r4, sp, #164	; 0xa4
   11b78:	ldr	r0, [sp, #68]	; 0x44
   11b7c:	mov	r1, r4
   11b80:	bl	127c4 <dcngettext@plt+0x1474>
   11b84:	cmp	r0, #0
   11b88:	ldreq	r4, [sp, #44]	; 0x2c
   11b8c:	streq	r4, [sp, #120]	; 0x78
   11b90:	beq	11cf8 <dcngettext@plt+0x9a8>
   11b94:	ldr	r0, [sp, #68]	; 0x44
   11b98:	mov	r1, #92	; 0x5c
   11b9c:	bl	11230 <strchr@plt>
   11ba0:	cmp	r0, #0
   11ba4:	beq	12280 <dcngettext@plt+0xf30>
   11ba8:	ldr	r5, [sp, #28]
   11bac:	cmp	r5, #0
   11bb0:	beq	120f0 <dcngettext@plt+0xda0>
   11bb4:	ldr	ip, [sp, #40]	; 0x28
   11bb8:	ldr	r0, [ip]
   11bbc:	ldr	r3, [r0, #20]
   11bc0:	ldr	r2, [r0, #24]
   11bc4:	cmp	r3, r2
   11bc8:	bcs	12344 <dcngettext@plt+0xff4>
   11bcc:	mov	r5, #1
   11bd0:	add	r2, r3, r5
   11bd4:	str	r2, [r0, #20]
   11bd8:	mov	r2, #92	; 0x5c
   11bdc:	strb	r2, [r3]
   11be0:	ldr	r6, [sp, #40]	; 0x28
   11be4:	mov	r1, #1
   11be8:	ldr	r0, [pc, #2060]	; 123fc <dcngettext@plt+0x10ac>
   11bec:	mov	r2, #3
   11bf0:	ldr	r3, [r6]
   11bf4:	add	r0, pc, r0
   11bf8:	bl	11104 <fwrite_unlocked@plt>
   11bfc:	ldr	r0, [pc, #2044]	; 12400 <dcngettext@plt+0x10b0>
   11c00:	mov	r2, #2
   11c04:	ldr	r3, [r6]
   11c08:	mov	r1, #1
   11c0c:	add	r0, pc, r0
   11c10:	bl	11104 <fwrite_unlocked@plt>
   11c14:	ldr	r0, [sp, #68]	; 0x44
   11c18:	mov	r1, r5
   11c1c:	bl	126e0 <dcngettext@plt+0x1390>
   11c20:	ldr	r0, [pc, #2012]	; 12404 <dcngettext@plt+0x10b4>
   11c24:	mov	r1, #1
   11c28:	mov	r2, #4
   11c2c:	add	r0, pc, r0
   11c30:	ldr	r3, [r6]
   11c34:	bl	11104 <fwrite_unlocked@plt>
   11c38:	mov	r6, #0
   11c3c:	ldr	r7, [sp, #132]	; 0x84
   11c40:	ldr	r8, [sp, #136]	; 0x88
   11c44:	b	11c5c <dcngettext@plt+0x90c>
   11c48:	mov	r0, #1
   11c4c:	ldrb	r2, [r4, r6]
   11c50:	mov	r1, r8
   11c54:	add	r6, r6, r0
   11c58:	bl	11290 <__printf_chk@plt>
   11c5c:	ldr	r3, [r7, #12]
   11c60:	cmp	r6, r3, lsr #1
   11c64:	bcc	11c48 <dcngettext@plt+0x8f8>
   11c68:	ldr	ip, [sp, #28]
   11c6c:	cmp	ip, #0
   11c70:	bne	11cd0 <dcngettext@plt+0x980>
   11c74:	ldr	r4, [sp, #40]	; 0x28
   11c78:	ldr	r0, [r4]
   11c7c:	ldr	r2, [r0, #24]
   11c80:	ldr	r3, [r0, #20]
   11c84:	cmp	r3, r2
   11c88:	addcc	r2, r3, #1
   11c8c:	strcc	r2, [r0, #20]
   11c90:	movcc	r2, #32
   11c94:	strbcc	r2, [r3]
   11c98:	bcs	12484 <dcngettext@plt+0x1134>
   11c9c:	ldr	r6, [sp, #40]	; 0x28
   11ca0:	ldr	r0, [r6]
   11ca4:	ldr	r3, [r0, #20]
   11ca8:	ldr	r2, [r0, #24]
   11cac:	cmp	r3, r2
   11cb0:	addcc	r2, r3, #1
   11cb4:	strcc	r2, [r0, #20]
   11cb8:	ldrcc	r7, [sp, #148]	; 0x94
   11cbc:	strbcc	r7, [r3]
   11cc0:	bcs	12478 <dcngettext@plt+0x1128>
   11cc4:	ldr	r0, [sp, #68]	; 0x44
   11cc8:	mov	r1, r5
   11ccc:	bl	126e0 <dcngettext@plt+0x1390>
   11cd0:	ldr	ip, [sp, #40]	; 0x28
   11cd4:	ldr	r0, [ip]
   11cd8:	ldr	r2, [r0, #24]
   11cdc:	ldr	r3, [r0, #20]
   11ce0:	cmp	r3, r2
   11ce4:	addcc	r2, r3, #1
   11ce8:	strcc	r2, [r0, #20]
   11cec:	movcc	r2, #10
   11cf0:	strbcc	r2, [r3]
   11cf4:	bcs	124f4 <dcngettext@plt+0x11a4>
   11cf8:	ldr	r5, [sp, #88]	; 0x58
   11cfc:	ldr	r3, [r5]
   11d00:	add	r3, r3, #1
   11d04:	str	r3, [r5]
   11d08:	b	11750 <dcngettext@plt+0x400>
   11d0c:	ldr	r0, [sp, #156]	; 0x9c
   11d10:	bl	110d4 <free@plt>
   11d14:	ldr	r3, [r9]
   11d18:	tst	r3, #32
   11d1c:	bne	12190 <dcngettext@plt+0xe40>
   11d20:	ldr	r7, [sp, #92]	; 0x5c
   11d24:	cmp	r7, #0
   11d28:	beq	12120 <dcngettext@plt+0xdd0>
   11d2c:	ldrd	r4, [sp, #96]	; 0x60
   11d30:	orrs	r5, r4, r5
   11d34:	beq	12158 <dcngettext@plt+0xe08>
   11d38:	ldr	r3, [pc, #1736]	; 12408 <dcngettext@plt+0x10b8>
   11d3c:	add	r3, pc, r3
   11d40:	ldrb	r3, [r3, #1]
   11d44:	cmp	r3, #0
   11d48:	bne	12008 <dcngettext@plt+0xcb8>
   11d4c:	ldrd	r6, [sp, #16]
   11d50:	orrs	r7, r6, r7
   11d54:	beq	11dcc <dcngettext@plt+0xa7c>
   11d58:	ldrd	r4, [sp, #16]
   11d5c:	mov	r3, #0
   11d60:	mvn	r2, #0
   11d64:	cmp	r5, r3
   11d68:	cmpeq	r4, r2
   11d6c:	ldrls	r3, [sp, #16]
   11d70:	bls	11d94 <dcngettext@plt+0xa44>
   11d74:	mov	r0, r4
   11d78:	mov	r1, r5
   11d7c:	movw	r2, #16960	; 0x4240
   11d80:	mov	r3, #0
   11d84:	movt	r2, #15
   11d88:	bl	1683c <close_stdout@@Base+0x3c20>
   11d8c:	add	r2, r2, #999424	; 0xf4000
   11d90:	add	r3, r2, #576	; 0x240
   11d94:	mov	r2, #5
   11d98:	ldr	r1, [pc, #1644]	; 1240c <dcngettext@plt+0x10bc>
   11d9c:	str	r2, [sp]
   11da0:	mov	r0, #0
   11da4:	ldr	r2, [pc, #1636]	; 12410 <dcngettext@plt+0x10c0>
   11da8:	add	r1, pc, r1
   11dac:	add	r2, pc, r2
   11db0:	bl	11350 <dcngettext@plt>
   11db4:	ldrd	r6, [sp, #16]
   11db8:	strd	r6, [sp]
   11dbc:	mov	r2, r0
   11dc0:	mov	r0, #0
   11dc4:	mov	r1, r0
   11dc8:	bl	111a0 <error@plt>
   11dcc:	ldrd	r4, [sp, #112]	; 0x70
   11dd0:	orrs	r5, r4, r5
   11dd4:	beq	11e4c <dcngettext@plt+0xafc>
   11dd8:	ldrd	r6, [sp, #112]	; 0x70
   11ddc:	mov	r3, #0
   11de0:	mvn	r2, #0
   11de4:	cmp	r7, r3
   11de8:	cmpeq	r6, r2
   11dec:	ldrls	r3, [sp, #112]	; 0x70
   11df0:	bls	11e14 <dcngettext@plt+0xac4>
   11df4:	mov	r0, r6
   11df8:	mov	r1, r7
   11dfc:	movw	r2, #16960	; 0x4240
   11e00:	mov	r3, #0
   11e04:	movt	r2, #15
   11e08:	bl	1683c <close_stdout@@Base+0x3c20>
   11e0c:	add	r2, r2, #999424	; 0xf4000
   11e10:	add	r3, r2, #576	; 0x240
   11e14:	mov	r2, #5
   11e18:	ldr	r1, [pc, #1524]	; 12414 <dcngettext@plt+0x10c4>
   11e1c:	str	r2, [sp]
   11e20:	mov	r0, #0
   11e24:	ldr	r2, [pc, #1516]	; 12418 <dcngettext@plt+0x10c8>
   11e28:	add	r1, pc, r1
   11e2c:	add	r2, pc, r2
   11e30:	bl	11350 <dcngettext@plt>
   11e34:	ldrd	r4, [sp, #112]	; 0x70
   11e38:	strd	r4, [sp]
   11e3c:	mov	r2, r0
   11e40:	mov	r0, #0
   11e44:	mov	r1, r0
   11e48:	bl	111a0 <error@plt>
   11e4c:	ldrd	r6, [sp, #80]	; 0x50
   11e50:	orrs	r7, r6, r7
   11e54:	beq	12014 <dcngettext@plt+0xcc4>
   11e58:	ldrd	r6, [sp, #80]	; 0x50
   11e5c:	mov	r3, #0
   11e60:	mvn	r2, #0
   11e64:	cmp	r7, r3
   11e68:	cmpeq	r6, r2
   11e6c:	ldrls	r3, [sp, #80]	; 0x50
   11e70:	bls	11e94 <dcngettext@plt+0xb44>
   11e74:	mov	r0, r6
   11e78:	mov	r1, r7
   11e7c:	movw	r2, #16960	; 0x4240
   11e80:	mov	r3, #0
   11e84:	movt	r2, #15
   11e88:	bl	1683c <close_stdout@@Base+0x3c20>
   11e8c:	add	r2, r2, #999424	; 0xf4000
   11e90:	add	r3, r2, #576	; 0x240
   11e94:	mov	r2, #5
   11e98:	ldr	r1, [pc, #1404]	; 1241c <dcngettext@plt+0x10cc>
   11e9c:	str	r2, [sp]
   11ea0:	mov	r0, #0
   11ea4:	ldr	r2, [pc, #1396]	; 12420 <dcngettext@plt+0x10d0>
   11ea8:	add	r1, pc, r1
   11eac:	add	r2, pc, r2
   11eb0:	bl	11350 <dcngettext@plt>
   11eb4:	ldrd	r4, [sp, #80]	; 0x50
   11eb8:	strd	r4, [sp]
   11ebc:	mov	r2, r0
   11ec0:	mov	r0, #0
   11ec4:	mov	r1, r0
   11ec8:	bl	111a0 <error@plt>
   11ecc:	mov	r9, #0
   11ed0:	ldr	r6, [sp, #120]	; 0x78
   11ed4:	and	r9, r9, r6
   11ed8:	uxtb	r9, r9
   11edc:	str	r9, [sp, #120]	; 0x78
   11ee0:	b	11cf8 <dcngettext@plt+0x9a8>
   11ee4:	rsb	r1, r1, fp
   11ee8:	mov	r0, r7
   11eec:	bl	12634 <dcngettext@plt+0x12e4>
   11ef0:	mov	sl, r8
   11ef4:	adds	r0, r0, #0
   11ef8:	movne	r0, #1
   11efc:	cmp	r0, #0
   11f00:	bne	119b4 <dcngettext@plt+0x664>
   11f04:	b	119dc <dcngettext@plt+0x68c>
   11f08:	ldr	r1, [pc, #1300]	; 12424 <dcngettext@plt+0x10d4>
   11f0c:	ldr	r0, [sp, #68]	; 0x44
   11f10:	add	r1, pc, r1
   11f14:	bl	13d64 <close_stdout@@Base+0x1148>
   11f18:	subs	r9, r0, #0
   11f1c:	movne	r5, #0
   11f20:	strne	r5, [sp, #92]	; 0x5c
   11f24:	bne	117d0 <dcngettext@plt+0x480>
   11f28:	bl	11254 <__errno_location@plt>
   11f2c:	ldr	r2, [pc, #1268]	; 12428 <dcngettext@plt+0x10d8>
   11f30:	add	r2, pc, r2
   11f34:	mov	r3, r0
   11f38:	mov	r0, r9
   11f3c:	ldr	r1, [r3]
   11f40:	ldr	r3, [sp, #68]	; 0x44
   11f44:	bl	111a0 <error@plt>
   11f48:	b	11ed0 <dcngettext@plt+0xb80>
   11f4c:	ldr	r3, [pc, #1240]	; 1242c <dcngettext@plt+0x10dc>
   11f50:	add	fp, sl, #1
   11f54:	strd	r4, [sp, #56]	; 0x38
   11f58:	add	r3, pc, r3
   11f5c:	mov	r4, fp
   11f60:	mov	fp, r6
   11f64:	ldr	r6, [sp, #140]	; 0x8c
   11f68:	ldr	r7, [r3, #12]
   11f6c:	lsr	r7, r7, #1
   11f70:	b	11fb0 <dcngettext@plt+0xc60>
   11f74:	bl	111e8 <__ctype_tolower_loc@plt>
   11f78:	ldrb	lr, [r4, #-1]
   11f7c:	ldrb	r3, [fp, r8]
   11f80:	ldrb	ip, [r6, r3, lsr #4]
   11f84:	ldr	r2, [r0]
   11f88:	ldr	r0, [r2, lr, lsl #2]
   11f8c:	cmp	r0, ip
   11f90:	bne	12490 <dcngettext@plt+0x1140>
   11f94:	ldrb	r0, [r4], #2
   11f98:	and	r3, r3, #15
   11f9c:	ldrb	r3, [r6, r3]
   11fa0:	ldr	r2, [r2, r0, lsl #2]
   11fa4:	cmp	r2, r3
   11fa8:	bne	12490 <dcngettext@plt+0x1140>
   11fac:	add	r8, r8, #1
   11fb0:	cmp	r8, r7
   11fb4:	bne	11f74 <dcngettext@plt+0xc24>
   11fb8:	ldr	r3, [pc, #1136]	; 12430 <dcngettext@plt+0x10e0>
   11fbc:	ldrd	r4, [sp, #56]	; 0x38
   11fc0:	add	r3, pc, r3
   11fc4:	ldrb	r2, [r3, #1]
   11fc8:	cmp	r2, #0
   11fcc:	bne	11a0c <dcngettext@plt+0x6bc>
   11fd0:	ldrb	r0, [r3, #3]
   11fd4:	cmp	r0, #0
   11fd8:	bne	11a0c <dcngettext@plt+0x6bc>
   11fdc:	ldr	r1, [pc, #1104]	; 12434 <dcngettext@plt+0x10e4>
   11fe0:	mov	r2, #5
   11fe4:	add	r1, pc, r1
   11fe8:	bl	1111c <dcgettext@plt>
   11fec:	ldr	r1, [pc, #1092]	; 12438 <dcngettext@plt+0x10e8>
   11ff0:	ldr	r2, [sp, #76]	; 0x4c
   11ff4:	add	r1, pc, r1
   11ff8:	mov	r3, r0
   11ffc:	mov	r0, #1
   12000:	bl	11290 <__printf_chk@plt>
   12004:	b	11a0c <dcngettext@plt+0x6bc>
   12008:	ldrd	r6, [sp, #80]	; 0x50
   1200c:	orrs	r7, r6, r7
   12010:	bne	11ecc <dcngettext@plt+0xb7c>
   12014:	ldrd	r4, [sp, #112]	; 0x70
   12018:	orrs	r5, r4, r5
   1201c:	bne	11ecc <dcngettext@plt+0xb7c>
   12020:	ldr	r3, [pc, #1044]	; 1243c <dcngettext@plt+0x10ec>
   12024:	add	r3, pc, r3
   12028:	ldrb	r3, [r3, #4]
   1202c:	cmp	r3, #0
   12030:	beq	12040 <dcngettext@plt+0xcf0>
   12034:	ldrd	r4, [sp, #32]
   12038:	orrs	r5, r4, r5
   1203c:	bne	11ecc <dcngettext@plt+0xb7c>
   12040:	mov	r9, #1
   12044:	b	11ed0 <dcngettext@plt+0xb80>
   12048:	rsb	r3, r2, fp
   1204c:	cmp	r3, #1
   12050:	ldreq	r7, [sp, #76]	; 0x4c
   12054:	moveq	r0, #0
   12058:	beq	1209c <dcngettext@plt+0xd4c>
   1205c:	add	r6, r6, #4
   12060:	sub	r8, r3, #2
   12064:	add	r7, r7, r6
   12068:	b	12080 <dcngettext@plt+0xd30>
   1206c:	ldrb	r3, [r7, r8]
   12070:	add	r6, r7, r8
   12074:	cmp	r3, #41	; 0x29
   12078:	beq	12220 <dcngettext@plt+0xed0>
   1207c:	sub	r8, r8, #1
   12080:	cmp	r8, #0
   12084:	bne	1206c <dcngettext@plt+0xd1c>
   12088:	ldrb	r3, [r7]
   1208c:	cmp	r3, #41	; 0x29
   12090:	ldrne	r7, [sp, #76]	; 0x4c
   12094:	movne	r0, r8
   12098:	beq	1221c <dcngettext@plt+0xecc>
   1209c:	str	r7, [sp, #76]	; 0x4c
   120a0:	b	11efc <dcngettext@plt+0xbac>
   120a4:	ldrb	r3, [r3, #3]
   120a8:	cmp	r3, #0
   120ac:	beq	11644 <dcngettext@plt+0x2f4>
   120b0:	ldr	ip, [sp, #44]	; 0x2c
   120b4:	cmp	ip, #0
   120b8:	bne	116d0 <dcngettext@plt+0x380>
   120bc:	ldr	r1, [pc, #892]	; 12440 <dcngettext@plt+0x10f0>
   120c0:	mov	r0, ip
   120c4:	add	r1, pc, r1
   120c8:	mov	r2, #5
   120cc:	bl	1111c <dcgettext@plt>
   120d0:	mov	r2, r0
   120d4:	ldr	r0, [sp, #44]	; 0x2c
   120d8:	mov	r1, r0
   120dc:	bl	111a0 <error@plt>
   120e0:	mov	r0, #1
   120e4:	bl	12924 <dcngettext@plt+0x15d4>
   120e8:	cmp	r5, #0
   120ec:	beq	11c38 <dcngettext@plt+0x8e8>
   120f0:	ldr	r7, [sp, #40]	; 0x28
   120f4:	ldr	r0, [r7]
   120f8:	ldr	r3, [r0, #20]
   120fc:	ldr	r2, [r0, #24]
   12100:	cmp	r3, r2
   12104:	bcs	124e4 <dcngettext@plt+0x1194>
   12108:	mov	r5, #1
   1210c:	add	r2, r3, r5
   12110:	str	r2, [r0, #20]
   12114:	mov	r2, #92	; 0x5c
   12118:	strb	r2, [r3]
   1211c:	b	11c38 <dcngettext@plt+0x8e8>
   12120:	mov	r0, r9
   12124:	bl	15e74 <close_stdout@@Base+0x3258>
   12128:	cmp	r0, #0
   1212c:	beq	11d2c <dcngettext@plt+0x9dc>
   12130:	bl	11254 <__errno_location@plt>
   12134:	ldr	r2, [pc, #776]	; 12444 <dcngettext@plt+0x10f4>
   12138:	add	r2, pc, r2
   1213c:	mov	r3, r0
   12140:	ldr	r0, [sp, #92]	; 0x5c
   12144:	ldr	r1, [r3]
   12148:	ldr	r3, [sp, #68]	; 0x44
   1214c:	bl	111a0 <error@plt>
   12150:	ldr	r9, [sp, #92]	; 0x5c
   12154:	b	11ed0 <dcngettext@plt+0xb80>
   12158:	ldr	r1, [pc, #744]	; 12448 <dcngettext@plt+0x10f8>
   1215c:	mov	r2, #5
   12160:	mov	r0, #0
   12164:	add	r1, pc, r1
   12168:	bl	1111c <dcgettext@plt>
   1216c:	ldr	ip, [pc, #728]	; 1244c <dcngettext@plt+0x10fc>
   12170:	ldr	r3, [sp, #68]	; 0x44
   12174:	add	ip, pc, ip
   12178:	str	ip, [sp]
   1217c:	mov	r2, r0
   12180:	mov	r0, #0
   12184:	mov	r1, r0
   12188:	bl	111a0 <error@plt>
   1218c:	b	11ecc <dcngettext@plt+0xb7c>
   12190:	ldr	r1, [pc, #696]	; 12450 <dcngettext@plt+0x1100>
   12194:	mov	r2, #5
   12198:	mov	r0, #0
   1219c:	mov	r9, #0
   121a0:	add	r1, pc, r1
   121a4:	bl	1111c <dcgettext@plt>
   121a8:	ldr	r3, [sp, #68]	; 0x44
   121ac:	mov	r2, r0
   121b0:	mov	r0, #0
   121b4:	mov	r1, r0
   121b8:	bl	111a0 <error@plt>
   121bc:	b	11ed0 <dcngettext@plt+0xb80>
   121c0:	ldr	r3, [pc, #652]	; 12454 <dcngettext@plt+0x1104>
   121c4:	ldr	sl, [sp, #128]	; 0x80
   121c8:	add	r3, pc, r3
   121cc:	ldrb	r3, [r3]
   121d0:	cmp	r3, #0
   121d4:	bne	122bc <dcngettext@plt+0xf6c>
   121d8:	ldr	ip, [sp, #120]	; 0x78
   121dc:	rsbs	r0, ip, #1
   121e0:	movcc	r0, #0
   121e4:	bl	11218 <exit@plt>
   121e8:	ldr	r1, [pc, #616]	; 12458 <dcngettext@plt+0x1108>
   121ec:	mov	r2, #5
   121f0:	mov	r0, r5
   121f4:	add	r1, pc, r1
   121f8:	bl	1111c <dcgettext@plt>
   121fc:	mov	r1, r5
   12200:	mov	r2, r0
   12204:	mov	r0, r5
   12208:	bl	111a0 <error@plt>
   1220c:	mov	r0, #1
   12210:	bl	12924 <dcngettext@plt+0x15d4>
   12214:	mov	r2, sl
   12218:	b	11aa4 <dcngettext@plt+0x754>
   1221c:	mov	r6, r7
   12220:	ldr	ip, [sp, #56]	; 0x38
   12224:	cmp	ip, #0
   12228:	bne	1232c <dcngettext@plt+0xfdc>
   1222c:	mov	r3, #0
   12230:	add	r8, r8, #1
   12234:	strb	r3, [r6]
   12238:	b	12240 <dcngettext@plt+0xef0>
   1223c:	add	r8, r8, #1
   12240:	ldrb	r3, [r7, r8]
   12244:	cmp	r3, #32
   12248:	cmpne	r3, #9
   1224c:	movne	r0, #0
   12250:	moveq	r0, #1
   12254:	beq	1223c <dcngettext@plt+0xeec>
   12258:	cmp	r3, #61	; 0x3d
   1225c:	bne	1209c <dcngettext@plt+0xd4c>
   12260:	add	sl, r7, r8
   12264:	ldrb	r3, [sl, #1]
   12268:	add	sl, sl, #1
   1226c:	cmp	r3, #32
   12270:	cmpne	r3, #9
   12274:	beq	12264 <dcngettext@plt+0xf14>
   12278:	mov	r0, #1
   1227c:	b	1209c <dcngettext@plt+0xd4c>
   12280:	ldr	r0, [sp, #68]	; 0x44
   12284:	mov	r1, #10
   12288:	bl	11230 <strchr@plt>
   1228c:	ldr	r7, [sp, #28]
   12290:	adds	r5, r0, #0
   12294:	movne	r5, #1
   12298:	cmp	r7, #0
   1229c:	beq	120e8 <dcngettext@plt+0xd98>
   122a0:	cmp	r5, #0
   122a4:	beq	11be0 <dcngettext@plt+0x890>
   122a8:	b	11bb4 <dcngettext@plt+0x864>
   122ac:	ldr	r1, [pc, #424]	; 1245c <dcngettext@plt+0x110c>
   122b0:	mov	r0, r5
   122b4:	add	r1, pc, r1
   122b8:	b	120c8 <dcngettext@plt+0xd78>
   122bc:	ldr	r3, [pc, #264]	; 123cc <dcngettext@plt+0x107c>
   122c0:	ldr	r3, [sl, r3]
   122c4:	ldr	r0, [r3]
   122c8:	bl	15e74 <close_stdout@@Base+0x3258>
   122cc:	cmn	r0, #1
   122d0:	bne	121d8 <dcngettext@plt+0xe88>
   122d4:	bl	11254 <__errno_location@plt>
   122d8:	ldr	r1, [pc, #384]	; 12460 <dcngettext@plt+0x1110>
   122dc:	mov	r2, #5
   122e0:	add	r1, pc, r1
   122e4:	ldr	r4, [r0]
   122e8:	mov	r0, #0
   122ec:	bl	1111c <dcgettext@plt>
   122f0:	mov	r1, r4
   122f4:	mov	r2, r0
   122f8:	mov	r0, #1
   122fc:	bl	111a0 <error@plt>
   12300:	b	121d8 <dcngettext@plt+0xe88>
   12304:	ldr	r2, [pc, #344]	; 12464 <dcngettext@plt+0x1114>
   12308:	add	ip, ip, #1
   1230c:	str	ip, [sp, #24]
   12310:	add	r2, pc, r2
   12314:	str	r2, [r6, r3, lsl #2]
   12318:	b	116fc <dcngettext@plt+0x3ac>
   1231c:	ldr	r1, [pc, #324]	; 12468 <dcngettext@plt+0x1118>
   12320:	mov	r0, r7
   12324:	add	r1, pc, r1
   12328:	b	120c8 <dcngettext@plt+0xd78>
   1232c:	mov	r0, r7
   12330:	mov	r1, r8
   12334:	bl	12634 <dcngettext@plt+0x12e4>
   12338:	cmp	r0, #0
   1233c:	bne	1222c <dcngettext@plt+0xedc>
   12340:	b	1209c <dcngettext@plt+0xd4c>
   12344:	mov	r1, #92	; 0x5c
   12348:	mov	r5, #1
   1234c:	bl	112d8 <__overflow@plt>
   12350:	b	11be0 <dcngettext@plt+0x890>
   12354:	andeq	r7, r1, r4, lsl #25
   12358:	andeq	r0, r0, r8, lsl #2
   1235c:	andeq	r6, r0, r0, lsr #7
   12360:	andeq	r6, r0, ip, lsl #9
   12364:	andeq	r6, r0, r0, lsl #4
   12368:	andeq	r7, r1, r0, asr #20
   1236c:	muleq	r1, ip, sp
   12370:	andeq	r6, r0, r4, asr #8
   12374:	muleq	r1, r8, sp
   12378:	andeq	r0, r0, r8, lsl r1
   1237c:	muleq	r1, r4, sp
   12380:	andeq	r0, r0, r8, lsr #2
   12384:	andeq	r7, r1, ip, ror #26
   12388:	andeq	r0, r0, r0, lsl r1
   1238c:	andeq	r6, r0, r0, lsl r3
   12390:	andeq	r6, r0, r4, lsl r3
   12394:	andeq	r6, r0, r4, ror #5
   12398:	ldrdeq	r6, [r0], -r0
   1239c:	andeq	r6, r0, ip, ror #3
   123a0:	andeq	r6, r0, ip, ror #5
   123a4:	andeq	r7, r1, ip, lsr #23
   123a8:	andeq	r7, r1, r0, asr #22
   123ac:	andeq	r6, r0, r8, ror #6
   123b0:	strdeq	r6, [r0], -r4
   123b4:	andeq	r0, r0, ip, lsl #2
   123b8:	andeq	r7, r1, ip, asr sl
   123bc:	ldrdeq	r6, [r0], -r8
   123c0:	andeq	r5, r0, ip, lsl fp
   123c4:	andeq	r7, r1, r4, ror #19
   123c8:	andeq	r6, r0, ip, ror #4
   123cc:	andeq	r0, r0, r4, lsr #2
   123d0:	andeq	r5, r0, r4, lsl fp
   123d4:	andeq	r7, r1, ip, ror #18
   123d8:	andeq	r6, r0, r0, lsr #4
   123dc:	strdeq	r5, [r0], -r0
   123e0:	andeq	r7, r1, ip, ror #16
   123e4:			; <UNDEFINED> instruction: 0x000177b4
   123e8:	strdeq	r5, [r0], -r4
   123ec:	andeq	r7, r1, r8, lsr #14
   123f0:	andeq	r7, r1, ip, lsr #13
   123f4:	andeq	r5, r0, r0, ror pc
   123f8:	andeq	r7, r1, r4, ror #11
   123fc:	andeq	r5, r0, r8, lsr #14
   12400:	strdeq	r5, [r0], -r4
   12404:	ldrdeq	r5, [r0], -r8
   12408:	andeq	r7, r1, r0, asr r4
   1240c:	andeq	r5, r0, r0, asr #26
   12410:	andeq	r5, r0, r8, ror #26
   12414:	andeq	r5, r0, ip, lsl sp
   12418:	andeq	r5, r0, r4, asr #26
   1241c:	strdeq	r5, [r0], -r8
   12420:	andeq	r5, r0, r4, lsr #26
   12424:	andeq	r5, r0, r0, ror #6
   12428:	andeq	r5, r0, r8, asr #26
   1242c:	andeq	r7, r1, r4, lsr r2
   12430:	andeq	r7, r1, ip, asr #3
   12434:			; <UNDEFINED> instruction: 0x00005abc
   12438:	andeq	r5, r0, r4, lsr #21
   1243c:	andeq	r7, r1, r8, ror #2
   12440:	ldrdeq	r5, [r0], -r0
   12444:	andeq	r5, r0, r0, asr #22
   12448:	andeq	r5, r0, r0, asr r9
   1244c:	andeq	r5, r0, r8, lsr #3
   12450:	andeq	r5, r0, r4, lsl #18
   12454:	andeq	r6, r1, r4, asr #31
   12458:	ldrdeq	r5, [r0], -r4
   1245c:	andeq	r5, r0, r0, ror #12
   12460:	andeq	r5, r0, r8, lsr r7
   12464:	andeq	r5, r0, r4, lsl #14
   12468:	andeq	r5, r0, r0, lsr r6
   1246c:	strdeq	r6, [r1], -r4
   12470:	ldrdeq	r5, [r0], -r0
   12474:	andeq	r5, r0, r8, asr #11
   12478:	ldr	r1, [sp, #144]	; 0x90
   1247c:	bl	112d8 <__overflow@plt>
   12480:	b	11cc4 <dcngettext@plt+0x974>
   12484:	mov	r1, #32
   12488:	bl	112d8 <__overflow@plt>
   1248c:	b	11c9c <dcngettext@plt+0x94c>
   12490:	ldr	r3, [pc, #-44]	; 1246c <dcngettext@plt+0x111c>
   12494:	ldrd	r6, [sp, #80]	; 0x50
   12498:	add	r3, pc, r3
   1249c:	ldrd	r4, [sp, #56]	; 0x38
   124a0:	adds	r6, r6, #1
   124a4:	ldrb	r0, [r3, #1]
   124a8:	adc	r7, r7, #0
   124ac:	strd	r6, [sp, #80]	; 0x50
   124b0:	cmp	r0, #0
   124b4:	bne	11a0c <dcngettext@plt+0x6bc>
   124b8:	ldr	r1, [pc, #-80]	; 12470 <dcngettext@plt+0x1120>
   124bc:	mov	r2, #5
   124c0:	add	r1, pc, r1
   124c4:	bl	1111c <dcgettext@plt>
   124c8:	ldr	r1, [pc, #-92]	; 12474 <dcngettext@plt+0x1124>
   124cc:	ldr	r2, [sp, #76]	; 0x4c
   124d0:	add	r1, pc, r1
   124d4:	mov	r3, r0
   124d8:	mov	r0, #1
   124dc:	bl	11290 <__printf_chk@plt>
   124e0:	b	11a0c <dcngettext@plt+0x6bc>
   124e4:	mov	r1, #92	; 0x5c
   124e8:	mov	r5, #1
   124ec:	bl	112d8 <__overflow@plt>
   124f0:	b	11c38 <dcngettext@plt+0x8e8>
   124f4:	mov	r1, #10
   124f8:	bl	112d8 <__overflow@plt>
   124fc:	b	11cf8 <dcngettext@plt+0x9a8>
   12500:	mov	fp, #0
   12504:	mov	lr, #0
   12508:	pop	{r1}		; (ldr r1, [sp], #4)
   1250c:	mov	r2, sp
   12510:	push	{r2}		; (str r2, [sp, #-4]!)
   12514:	push	{r0}		; (str r0, [sp, #-4]!)
   12518:	ldr	ip, [pc, #16]	; 12530 <dcngettext@plt+0x11e0>
   1251c:	push	{ip}		; (str ip, [sp, #-4]!)
   12520:	ldr	r0, [pc, #12]	; 12534 <dcngettext@plt+0x11e4>
   12524:	ldr	r3, [pc, #12]	; 12538 <dcngettext@plt+0x11e8>
   12528:	bl	111d0 <__libc_start_main@plt>
   1252c:	bl	11338 <abort@plt>
   12530:	andeq	r7, r1, r0, lsr #4
   12534:	andeq	r1, r1, ip, asr r3
   12538:			; <UNDEFINED> instruction: 0x000171bc
   1253c:	ldr	r3, [pc, #20]	; 12558 <dcngettext@plt+0x1208>
   12540:	ldr	r2, [pc, #20]	; 1255c <dcngettext@plt+0x120c>
   12544:	add	r3, pc, r3
   12548:	ldr	r2, [r3, r2]
   1254c:	cmp	r2, #0
   12550:	bxeq	lr
   12554:	b	111f4 <__gmon_start__@plt>
   12558:			; <UNDEFINED> instruction: 0x00016ab4
   1255c:	andeq	r0, r0, ip, lsl r1
   12560:	push	{r3, lr}
   12564:	movw	r0, #37264	; 0x9190
   12568:	ldr	r3, [pc, #36]	; 12594 <dcngettext@plt+0x1244>
   1256c:	movt	r0, #2
   12570:	rsb	r3, r0, r3
   12574:	cmp	r3, #6
   12578:	popls	{r3, pc}
   1257c:	movw	r3, #0
   12580:	movt	r3, #0
   12584:	cmp	r3, #0
   12588:	popeq	{r3, pc}
   1258c:	blx	r3
   12590:	pop	{r3, pc}
   12594:	muleq	r2, r3, r1
   12598:	push	{r3, lr}
   1259c:	movw	r0, #37264	; 0x9190
   125a0:	movw	r3, #37264	; 0x9190
   125a4:	movt	r0, #2
   125a8:	movt	r3, #2
   125ac:	rsb	r3, r0, r3
   125b0:	asr	r3, r3, #2
   125b4:	add	r3, r3, r3, lsr #31
   125b8:	asrs	r1, r3, #1
   125bc:	popeq	{r3, pc}
   125c0:	movw	r2, #0
   125c4:	movt	r2, #0
   125c8:	cmp	r2, #0
   125cc:	popeq	{r3, pc}
   125d0:	blx	r2
   125d4:	pop	{r3, pc}
   125d8:	push	{r4, lr}
   125dc:	movw	r4, #37264	; 0x9190
   125e0:	movt	r4, #2
   125e4:	ldrb	r3, [r4]
   125e8:	cmp	r3, #0
   125ec:	popne	{r4, pc}
   125f0:	bl	12560 <dcngettext@plt+0x1210>
   125f4:	mov	r3, #1
   125f8:	strb	r3, [r4]
   125fc:	pop	{r4, pc}
   12600:	movw	r0, #36400	; 0x8e30
   12604:	movt	r0, #2
   12608:	push	{r3, lr}
   1260c:	ldr	r3, [r0]
   12610:	cmp	r3, #0
   12614:	beq	1262c <dcngettext@plt+0x12dc>
   12618:	movw	r3, #0
   1261c:	movt	r3, #0
   12620:	cmp	r3, #0
   12624:	beq	1262c <dcngettext@plt+0x12dc>
   12628:	blx	r3
   1262c:	pop	{r3, lr}
   12630:	b	12598 <dcngettext@plt+0x1248>
   12634:	cmp	r1, #0
   12638:	push	{r4, r5, r6}
   1263c:	beq	126b4 <dcngettext@plt+0x1364>
   12640:	add	ip, r0, #1
   12644:	sub	r5, r1, #1
   12648:	mov	r3, #0
   1264c:	mov	r6, #10
   12650:	ldrb	r2, [r0, r3]
   12654:	cmp	r2, #0
   12658:	beq	126bc <dcngettext@plt+0x136c>
   1265c:	cmp	r2, #92	; 0x5c
   12660:	mov	r4, ip
   12664:	bne	12690 <dcngettext@plt+0x1340>
   12668:	cmp	r5, r3
   1266c:	add	r3, r3, #1
   12670:	beq	126d4 <dcngettext@plt+0x1384>
   12674:	ldrb	r2, [r0, r3]
   12678:	cmp	r2, #92	; 0x5c
   1267c:	beq	126c8 <dcngettext@plt+0x1378>
   12680:	cmp	r2, #110	; 0x6e
   12684:	bne	126d4 <dcngettext@plt+0x1384>
   12688:	strb	r6, [ip, #-1]
   1268c:	b	12694 <dcngettext@plt+0x1344>
   12690:	strb	r2, [ip, #-1]
   12694:	add	r3, r3, #1
   12698:	add	ip, ip, #1
   1269c:	cmp	r1, r3
   126a0:	bhi	12650 <dcngettext@plt+0x1300>
   126a4:	add	r1, r0, r1
   126a8:	cmp	r4, r1
   126ac:	movcc	r3, #0
   126b0:	strbcc	r3, [r4]
   126b4:	pop	{r4, r5, r6}
   126b8:	bx	lr
   126bc:	mov	r0, r2
   126c0:	pop	{r4, r5, r6}
   126c4:	bx	lr
   126c8:	strb	r2, [ip, #-1]
   126cc:	mov	r4, ip
   126d0:	b	12694 <dcngettext@plt+0x1344>
   126d4:	mov	r0, #0
   126d8:	pop	{r4, r5, r6}
   126dc:	bx	lr
   126e0:	cmp	r1, #0
   126e4:	ldr	r2, [pc, #200]	; 127b4 <dcngettext@plt+0x1464>
   126e8:	push	{r3, r4, r5, r6, r7, lr}
   126ec:	add	r2, pc, r2
   126f0:	mov	r4, r0
   126f4:	beq	127a0 <dcngettext@plt+0x1450>
   126f8:	ldrb	r3, [r0]
   126fc:	cmp	r3, #0
   12700:	popeq	{r3, r4, r5, r6, r7, pc}
   12704:	ldr	r1, [pc, #172]	; 127b8 <dcngettext@plt+0x1468>
   12708:	ldr	r7, [pc, #172]	; 127bc <dcngettext@plt+0x146c>
   1270c:	ldr	r6, [pc, #172]	; 127c0 <dcngettext@plt+0x1470>
   12710:	add	r7, pc, r7
   12714:	ldr	r5, [r2, r1]
   12718:	add	r6, pc, r6
   1271c:	b	12734 <dcngettext@plt+0x13e4>
   12720:	ldr	r3, [r5]
   12724:	bl	11104 <fwrite_unlocked@plt>
   12728:	ldrb	r3, [r4, #1]!
   1272c:	cmp	r3, #0
   12730:	beq	1279c <dcngettext@plt+0x144c>
   12734:	cmp	r3, #10
   12738:	beq	1277c <dcngettext@plt+0x142c>
   1273c:	cmp	r3, #92	; 0x5c
   12740:	mov	r0, r6
   12744:	mov	r1, #1
   12748:	mov	r2, #2
   1274c:	beq	12720 <dcngettext@plt+0x13d0>
   12750:	ldr	r0, [r5]
   12754:	ldr	r1, [r0, #20]
   12758:	ldr	r2, [r0, #24]
   1275c:	add	ip, r1, #1
   12760:	cmp	r1, r2
   12764:	strcc	ip, [r0, #20]
   12768:	strbcc	r3, [r1]
   1276c:	bcc	12728 <dcngettext@plt+0x13d8>
   12770:	mov	r1, r3
   12774:	bl	112d8 <__overflow@plt>
   12778:	b	12728 <dcngettext@plt+0x13d8>
   1277c:	ldr	r3, [r5]
   12780:	mov	r0, r7
   12784:	mov	r1, #1
   12788:	mov	r2, #2
   1278c:	bl	11104 <fwrite_unlocked@plt>
   12790:	ldrb	r3, [r4, #1]!
   12794:	cmp	r3, #0
   12798:	bne	12734 <dcngettext@plt+0x13e4>
   1279c:	pop	{r3, r4, r5, r6, r7, pc}
   127a0:	ldr	r3, [pc, #16]	; 127b8 <dcngettext@plt+0x1468>
   127a4:	ldr	r3, [r2, r3]
   127a8:	ldr	r1, [r3]
   127ac:	pop	{r3, r4, r5, r6, r7, lr}
   127b0:	b	1108c <fputs_unlocked@plt>
   127b4:	andeq	r6, r1, ip, lsl #18
   127b8:	andeq	r0, r0, r8, lsr #2
   127bc:	andeq	r4, r0, r8, asr fp
   127c0:	andeq	r4, r0, r4, asr fp
   127c4:	push	{r3, r4, r5, r6, r7, lr}
   127c8:	mov	r5, r0
   127cc:	ldrb	r3, [r0]
   127d0:	mov	r7, r1
   127d4:	ldr	r6, [pc, #300]	; 12908 <dcngettext@plt+0x15b8>
   127d8:	cmp	r3, #45	; 0x2d
   127dc:	add	r6, pc, r6
   127e0:	beq	1284c <dcngettext@plt+0x14fc>
   127e4:	ldr	r1, [pc, #288]	; 1290c <dcngettext@plt+0x15bc>
   127e8:	mov	r0, r5
   127ec:	add	r1, pc, r1
   127f0:	bl	13d64 <close_stdout@@Base+0x1148>
   127f4:	subs	r4, r0, #0
   127f8:	beq	128e4 <dcngettext@plt+0x1594>
   127fc:	mov	r1, #2
   12800:	bl	13d28 <close_stdout@@Base+0x110c>
   12804:	mov	r1, r7
   12808:	mov	r0, r4
   1280c:	bl	13b7c <close_stdout@@Base+0xf60>
   12810:	subs	r7, r0, #0
   12814:	bne	1289c <dcngettext@plt+0x154c>
   12818:	mov	r0, r4
   1281c:	bl	15e74 <close_stdout@@Base+0x3258>
   12820:	cmp	r0, #0
   12824:	beq	12894 <dcngettext@plt+0x1544>
   12828:	bl	11254 <__errno_location@plt>
   1282c:	ldr	r2, [pc, #220]	; 12910 <dcngettext@plt+0x15c0>
   12830:	mov	r3, r5
   12834:	add	r2, pc, r2
   12838:	ldr	r1, [r0]
   1283c:	mov	r0, r7
   12840:	bl	111a0 <error@plt>
   12844:	mov	r0, r7
   12848:	pop	{r3, r4, r5, r6, r7, pc}
   1284c:	ldrb	r3, [r0, #1]
   12850:	cmp	r3, #0
   12854:	bne	127e4 <dcngettext@plt+0x1494>
   12858:	ldr	r2, [pc, #180]	; 12914 <dcngettext@plt+0x15c4>
   1285c:	mov	r0, #1
   12860:	ldr	r3, [pc, #176]	; 12918 <dcngettext@plt+0x15c8>
   12864:	mov	r1, #2
   12868:	add	r2, pc, r2
   1286c:	strb	r0, [r2]
   12870:	ldr	r6, [r6, r3]
   12874:	ldr	r4, [r6]
   12878:	mov	r0, r4
   1287c:	bl	13d28 <close_stdout@@Base+0x110c>
   12880:	mov	r0, r4
   12884:	mov	r1, r7
   12888:	bl	13b7c <close_stdout@@Base+0xf60>
   1288c:	cmp	r0, #0
   12890:	bne	128a4 <dcngettext@plt+0x1554>
   12894:	mov	r0, #1
   12898:	pop	{r3, r4, r5, r6, r7, pc}
   1289c:	ldr	r3, [pc, #116]	; 12918 <dcngettext@plt+0x15c8>
   128a0:	ldr	r6, [r6, r3]
   128a4:	bl	11254 <__errno_location@plt>
   128a8:	ldr	r2, [pc, #108]	; 1291c <dcngettext@plt+0x15cc>
   128ac:	mov	r3, r5
   128b0:	add	r2, pc, r2
   128b4:	ldr	r1, [r0]
   128b8:	mov	r0, #0
   128bc:	bl	111a0 <error@plt>
   128c0:	ldr	r3, [r6]
   128c4:	cmp	r4, r3
   128c8:	beq	128dc <dcngettext@plt+0x158c>
   128cc:	mov	r0, r4
   128d0:	bl	15e74 <close_stdout@@Base+0x3258>
   128d4:	mov	r0, #0
   128d8:	pop	{r3, r4, r5, r6, r7, pc}
   128dc:	mov	r0, #0
   128e0:	pop	{r3, r4, r5, r6, r7, pc}
   128e4:	bl	11254 <__errno_location@plt>
   128e8:	ldr	r2, [pc, #48]	; 12920 <dcngettext@plt+0x15d0>
   128ec:	mov	r3, r5
   128f0:	add	r2, pc, r2
   128f4:	ldr	r1, [r0]
   128f8:	mov	r0, r4
   128fc:	bl	111a0 <error@plt>
   12900:	mov	r0, r4
   12904:	pop	{r3, r4, r5, r6, r7, pc}
   12908:	andeq	r6, r1, ip, lsl r8
   1290c:	andeq	r4, r0, r4, lsl #21
   12910:	andeq	r5, r0, r4, asr #8
   12914:	andeq	r6, r1, r4, lsr #18
   12918:	andeq	r0, r0, r4, lsr #2
   1291c:	andeq	r5, r0, r8, asr #7
   12920:	andeq	r5, r0, r8, lsl #7
   12924:	push	{r4, r5, r6, r7, lr}
   12928:	subs	r4, r0, #0
   1292c:	ldr	r5, [pc, #612]	; 12b98 <dcngettext@plt+0x1848>
   12930:	sub	sp, sp, #12
   12934:	add	r5, pc, r5
   12938:	beq	12980 <dcngettext@plt+0x1630>
   1293c:	ldr	r3, [pc, #600]	; 12b9c <dcngettext@plt+0x184c>
   12940:	mov	r2, #5
   12944:	ldr	r1, [pc, #596]	; 12ba0 <dcngettext@plt+0x1850>
   12948:	mov	r0, #0
   1294c:	ldr	r3, [r5, r3]
   12950:	add	r1, pc, r1
   12954:	ldr	r6, [r3]
   12958:	bl	1111c <dcgettext@plt>
   1295c:	ldr	r3, [pc, #576]	; 12ba4 <dcngettext@plt+0x1854>
   12960:	mov	r1, #1
   12964:	ldr	r3, [r5, r3]
   12968:	ldr	r3, [r3]
   1296c:	mov	r2, r0
   12970:	mov	r0, r6
   12974:	bl	112a8 <__fprintf_chk@plt>
   12978:	mov	r0, r4
   1297c:	bl	11218 <exit@plt>
   12980:	ldr	r1, [pc, #544]	; 12ba8 <dcngettext@plt+0x1858>
   12984:	mov	r2, #5
   12988:	ldr	r7, [pc, #540]	; 12bac <dcngettext@plt+0x185c>
   1298c:	add	r1, pc, r1
   12990:	bl	1111c <dcgettext@plt>
   12994:	ldr	r3, [pc, #520]	; 12ba4 <dcngettext@plt+0x1854>
   12998:	add	r7, pc, r7
   1299c:	mov	r2, #128	; 0x80
   129a0:	ldr	r6, [r5, r3]
   129a4:	mov	r3, r7
   129a8:	str	r2, [sp]
   129ac:	ldr	r2, [r6]
   129b0:	mov	r1, r0
   129b4:	mov	r0, #1
   129b8:	bl	11290 <__printf_chk@plt>
   129bc:	ldr	r1, [pc, #492]	; 12bb0 <dcngettext@plt+0x1860>
   129c0:	mov	r2, #5
   129c4:	mov	r0, r4
   129c8:	add	r1, pc, r1
   129cc:	bl	1111c <dcgettext@plt>
   129d0:	ldr	r3, [pc, #476]	; 12bb4 <dcngettext@plt+0x1864>
   129d4:	ldr	r5, [r5, r3]
   129d8:	ldr	r1, [r5]
   129dc:	bl	1108c <fputs_unlocked@plt>
   129e0:	ldr	r1, [pc, #464]	; 12bb8 <dcngettext@plt+0x1868>
   129e4:	mov	r2, #5
   129e8:	mov	r0, r4
   129ec:	add	r1, pc, r1
   129f0:	bl	1111c <dcgettext@plt>
   129f4:	mov	r2, r7
   129f8:	mov	r1, r0
   129fc:	mov	r0, #1
   12a00:	bl	11290 <__printf_chk@plt>
   12a04:	ldr	r1, [pc, #432]	; 12bbc <dcngettext@plt+0x186c>
   12a08:	mov	r2, #5
   12a0c:	mov	r0, r4
   12a10:	add	r1, pc, r1
   12a14:	bl	1111c <dcgettext@plt>
   12a18:	ldr	r1, [r5]
   12a1c:	bl	1108c <fputs_unlocked@plt>
   12a20:	ldr	r1, [pc, #408]	; 12bc0 <dcngettext@plt+0x1870>
   12a24:	mov	r2, #5
   12a28:	mov	r0, r4
   12a2c:	add	r1, pc, r1
   12a30:	bl	1111c <dcgettext@plt>
   12a34:	ldr	r1, [r5]
   12a38:	bl	1108c <fputs_unlocked@plt>
   12a3c:	ldr	r1, [pc, #384]	; 12bc4 <dcngettext@plt+0x1874>
   12a40:	mov	r2, #5
   12a44:	mov	r0, r4
   12a48:	add	r1, pc, r1
   12a4c:	bl	1111c <dcgettext@plt>
   12a50:	ldr	r1, [r5]
   12a54:	bl	1108c <fputs_unlocked@plt>
   12a58:	ldr	r1, [pc, #360]	; 12bc8 <dcngettext@plt+0x1878>
   12a5c:	mov	r2, #5
   12a60:	mov	r0, r4
   12a64:	add	r1, pc, r1
   12a68:	bl	1111c <dcgettext@plt>
   12a6c:	ldr	r1, [r5]
   12a70:	bl	1108c <fputs_unlocked@plt>
   12a74:	ldr	r1, [pc, #336]	; 12bcc <dcngettext@plt+0x187c>
   12a78:	mov	r2, #5
   12a7c:	mov	r0, r4
   12a80:	add	r1, pc, r1
   12a84:	bl	1111c <dcgettext@plt>
   12a88:	ldr	r1, [r5]
   12a8c:	bl	1108c <fputs_unlocked@plt>
   12a90:	ldr	r1, [pc, #312]	; 12bd0 <dcngettext@plt+0x1880>
   12a94:	mov	r2, #5
   12a98:	mov	r0, r4
   12a9c:	add	r1, pc, r1
   12aa0:	bl	1111c <dcgettext@plt>
   12aa4:	ldr	r1, [r5]
   12aa8:	bl	1108c <fputs_unlocked@plt>
   12aac:	ldr	r1, [pc, #288]	; 12bd4 <dcngettext@plt+0x1884>
   12ab0:	mov	r2, #5
   12ab4:	mov	r0, r4
   12ab8:	add	r1, pc, r1
   12abc:	bl	1111c <dcgettext@plt>
   12ac0:	ldr	r2, [pc, #272]	; 12bd8 <dcngettext@plt+0x1888>
   12ac4:	add	r2, pc, r2
   12ac8:	mov	r1, r0
   12acc:	mov	r0, #1
   12ad0:	bl	11290 <__printf_chk@plt>
   12ad4:	ldr	r1, [pc, #256]	; 12bdc <dcngettext@plt+0x188c>
   12ad8:	mov	r2, #5
   12adc:	mov	r0, r4
   12ae0:	add	r1, pc, r1
   12ae4:	bl	1111c <dcgettext@plt>
   12ae8:	ldr	r2, [pc, #240]	; 12be0 <dcngettext@plt+0x1890>
   12aec:	ldr	r3, [pc, #240]	; 12be4 <dcngettext@plt+0x1894>
   12af0:	add	r2, pc, r2
   12af4:	add	r3, pc, r3
   12af8:	mov	r1, r0
   12afc:	mov	r0, #1
   12b00:	bl	11290 <__printf_chk@plt>
   12b04:	mov	r0, #5
   12b08:	mov	r1, r4
   12b0c:	bl	112e4 <setlocale@plt>
   12b10:	cmp	r0, #0
   12b14:	beq	12b30 <dcngettext@plt+0x17e0>
   12b18:	ldr	r1, [pc, #200]	; 12be8 <dcngettext@plt+0x1898>
   12b1c:	mov	r2, #3
   12b20:	add	r1, pc, r1
   12b24:	bl	1132c <strncmp@plt>
   12b28:	cmp	r0, #0
   12b2c:	bne	12b64 <dcngettext@plt+0x1814>
   12b30:	ldr	r1, [pc, #180]	; 12bec <dcngettext@plt+0x189c>
   12b34:	mov	r2, #5
   12b38:	mov	r0, #0
   12b3c:	add	r1, pc, r1
   12b40:	bl	1111c <dcgettext@plt>
   12b44:	mov	r5, r0
   12b48:	ldr	r0, [r6]
   12b4c:	bl	13c80 <close_stdout@@Base+0x1064>
   12b50:	mov	r1, r5
   12b54:	mov	r2, r0
   12b58:	mov	r0, #1
   12b5c:	bl	11290 <__printf_chk@plt>
   12b60:	b	12978 <dcngettext@plt+0x1628>
   12b64:	ldr	r1, [pc, #132]	; 12bf0 <dcngettext@plt+0x18a0>
   12b68:	mov	r2, #5
   12b6c:	mov	r0, r4
   12b70:	add	r1, pc, r1
   12b74:	bl	1111c <dcgettext@plt>
   12b78:	mov	r5, r0
   12b7c:	ldr	r0, [r6]
   12b80:	bl	13c80 <close_stdout@@Base+0x1064>
   12b84:	mov	r1, r5
   12b88:	mov	r2, r0
   12b8c:	mov	r0, #1
   12b90:	bl	11290 <__printf_chk@plt>
   12b94:	b	12b30 <dcngettext@plt+0x17e0>
   12b98:	andeq	r6, r1, r4, asr #13
   12b9c:	andeq	r0, r0, r4, lsl r1
   12ba0:	andeq	r4, r0, r4, lsr #18
   12ba4:	andeq	r0, r0, r4, lsr r1
   12ba8:	andeq	r4, r0, r0, lsl r9
   12bac:	andeq	r4, r0, r4, lsl #19
   12bb0:	andeq	r4, r0, r8, asr r9
   12bb4:	andeq	r0, r0, r8, lsr #2
   12bb8:	andeq	r4, r0, r0, ror #18
   12bbc:	andeq	r4, r0, r0, lsl #19
   12bc0:	muleq	r0, r8, r9
   12bc4:			; <UNDEFINED> instruction: 0x000049b0
   12bc8:	andeq	r4, r0, r8, ror #19
   12bcc:	andeq	r4, r0, ip, lsr fp
   12bd0:	andeq	r4, r0, r0, asr fp
   12bd4:	andeq	r4, r0, ip, ror #22
   12bd8:	andeq	r4, r0, r4, ror #24
   12bdc:	andeq	r4, r0, r4, asr ip
   12be0:	andeq	r4, r0, ip, asr ip
   12be4:	andeq	r4, r0, r8, ror #24
   12be8:	andeq	r4, r0, r4, ror #24
   12bec:	muleq	r0, r4, ip
   12bf0:	andeq	r4, r0, r8, lsl ip
   12bf4:	ldr	r3, [pc, #8]	; 12c04 <dcngettext@plt+0x18b4>
   12bf8:	add	r3, pc, r3
   12bfc:	str	r0, [r3]
   12c00:	bx	lr
   12c04:	andeq	r6, r1, r4, lsr #11
   12c08:	ldr	r3, [pc, #8]	; 12c18 <dcngettext@plt+0x18c8>
   12c0c:	add	r3, pc, r3
   12c10:	strb	r0, [r3, #4]
   12c14:	bx	lr
   12c18:	muleq	r1, r0, r5

00012c1c <close_stdout@@Base>:
   12c1c:	push	{r4, r5, r6, r7, lr}
   12c20:	sub	sp, sp, #12
   12c24:	ldr	r4, [pc, #228]	; 12d10 <close_stdout@@Base+0xf4>
   12c28:	ldr	r3, [pc, #228]	; 12d14 <close_stdout@@Base+0xf8>
   12c2c:	add	r4, pc, r4
   12c30:	ldr	r3, [r4, r3]
   12c34:	ldr	r0, [r3]
   12c38:	bl	16190 <close_stdout@@Base+0x3574>
   12c3c:	cmp	r0, #0
   12c40:	beq	12c68 <close_stdout@@Base+0x4c>
   12c44:	ldr	r3, [pc, #204]	; 12d18 <close_stdout@@Base+0xfc>
   12c48:	add	r3, pc, r3
   12c4c:	ldrb	r3, [r3, #4]
   12c50:	cmp	r3, #0
   12c54:	beq	12c88 <close_stdout@@Base+0x6c>
   12c58:	bl	11254 <__errno_location@plt>
   12c5c:	ldr	r3, [r0]
   12c60:	cmp	r3, #32
   12c64:	bne	12c88 <close_stdout@@Base+0x6c>
   12c68:	ldr	r3, [pc, #172]	; 12d1c <close_stdout@@Base+0x100>
   12c6c:	ldr	r3, [r4, r3]
   12c70:	ldr	r0, [r3]
   12c74:	bl	16190 <close_stdout@@Base+0x3574>
   12c78:	cmp	r0, #0
   12c7c:	bne	12cdc <close_stdout@@Base+0xc0>
   12c80:	add	sp, sp, #12
   12c84:	pop	{r4, r5, r6, r7, pc}
   12c88:	ldr	r1, [pc, #144]	; 12d20 <close_stdout@@Base+0x104>
   12c8c:	mov	r0, #0
   12c90:	mov	r2, #5
   12c94:	add	r1, pc, r1
   12c98:	bl	1111c <dcgettext@plt>
   12c9c:	ldr	r3, [pc, #128]	; 12d24 <close_stdout@@Base+0x108>
   12ca0:	ldr	r5, [pc, r3]
   12ca4:	cmp	r5, #0
   12ca8:	mov	r6, r0
   12cac:	beq	12cec <close_stdout@@Base+0xd0>
   12cb0:	bl	11254 <__errno_location@plt>
   12cb4:	ldr	r7, [r0]
   12cb8:	mov	r0, r5
   12cbc:	bl	154fc <close_stdout@@Base+0x28e0>
   12cc0:	ldr	r2, [pc, #96]	; 12d28 <close_stdout@@Base+0x10c>
   12cc4:	str	r6, [sp]
   12cc8:	mov	r1, r7
   12ccc:	add	r2, pc, r2
   12cd0:	mov	r3, r0
   12cd4:	mov	r0, #0
   12cd8:	bl	111a0 <error@plt>
   12cdc:	ldr	r3, [pc, #72]	; 12d2c <close_stdout@@Base+0x110>
   12ce0:	ldr	r3, [r4, r3]
   12ce4:	ldr	r0, [r3]
   12ce8:	bl	110e0 <_exit@plt>
   12cec:	bl	11254 <__errno_location@plt>
   12cf0:	ldr	r2, [pc, #56]	; 12d30 <close_stdout@@Base+0x114>
   12cf4:	add	r2, pc, r2
   12cf8:	mov	r3, r0
   12cfc:	mov	r0, r5
   12d00:	ldr	r1, [r3]
   12d04:	mov	r3, r6
   12d08:	bl	111a0 <error@plt>
   12d0c:	b	12cdc <close_stdout@@Base+0xc0>
   12d10:	andeq	r6, r1, ip, asr #7
   12d14:	andeq	r0, r0, r8, lsr #2
   12d18:	andeq	r6, r1, r4, asr r5
   12d1c:	andeq	r0, r0, r4, lsl r1
   12d20:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   12d24:	strdeq	r6, [r1], -ip
   12d28:	andeq	r4, r0, r8, lsr #31
   12d2c:	andeq	r0, r0, ip, lsr #2
   12d30:	andeq	r4, r0, r4, lsl #31
   12d34:	movw	r2, #8961	; 0x2301
   12d38:	movw	r3, #43913	; 0xab89
   12d3c:	movt	r2, #26437	; 0x6745
   12d40:	movt	r3, #61389	; 0xefcd
   12d44:	stm	r0, {r2, r3}
   12d48:	movw	r2, #56574	; 0xdcfe
   12d4c:	movw	r3, #21622	; 0x5476
   12d50:	movt	r2, #39098	; 0x98ba
   12d54:	movt	r3, #4146	; 0x1032
   12d58:	str	r2, [r0, #8]
   12d5c:	str	r3, [r0, #12]
   12d60:	mov	r3, #0
   12d64:	str	r3, [r0, #20]
   12d68:	str	r3, [r0, #16]
   12d6c:	str	r3, [r0, #24]
   12d70:	bx	lr
   12d74:	push	{r4, r5, r6, r7, lr}
   12d78:	sub	sp, sp, #28
   12d7c:	ldr	r5, [pc, #132]	; 12e08 <close_stdout@@Base+0x1ec>
   12d80:	mov	r3, r0
   12d84:	ldr	r6, [r0]
   12d88:	add	r0, sp, #24
   12d8c:	ldr	r7, [pc, #120]	; 12e0c <close_stdout@@Base+0x1f0>
   12d90:	add	r5, pc, r5
   12d94:	mov	r4, r0
   12d98:	mov	ip, r0
   12d9c:	mov	r2, r0
   12da0:	ldr	r5, [r5, r7]
   12da4:	str	r6, [r0, #-20]!	; 0xffffffec
   12da8:	ldr	r0, [r0]
   12dac:	ldr	r6, [r5]
   12db0:	str	r0, [r1]
   12db4:	ldr	r0, [r3, #4]
   12db8:	str	r6, [sp, #20]
   12dbc:	ldr	r6, [sp, #20]
   12dc0:	str	r0, [r4, #-16]!
   12dc4:	ldr	r0, [r4]
   12dc8:	str	r0, [r1, #4]
   12dcc:	ldr	r0, [r3, #8]
   12dd0:	str	r0, [ip, #-12]!
   12dd4:	ldr	r0, [ip]
   12dd8:	str	r0, [r1, #8]
   12ddc:	ldr	r3, [r3, #12]
   12de0:	str	r3, [r2, #-8]!
   12de4:	ldr	r0, [r2]
   12de8:	str	r0, [r1, #12]
   12dec:	mov	r0, r1
   12df0:	ldr	r3, [r5]
   12df4:	cmp	r6, r3
   12df8:	bne	12e04 <close_stdout@@Base+0x1e8>
   12dfc:	add	sp, sp, #28
   12e00:	pop	{r4, r5, r6, r7, pc}
   12e04:	bl	11128 <__stack_chk_fail@plt>
   12e08:	andeq	r6, r1, r8, ror #4
   12e0c:	andeq	r0, r0, r8, lsl #2
   12e10:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   12e14:	sub	sp, sp, #72	; 0x48
   12e18:	ldr	r3, [r2, #16]
   12e1c:	bic	ip, r1, #3
   12e20:	str	r2, [sp, #64]	; 0x40
   12e24:	add	ip, r0, ip
   12e28:	ldr	r2, [r2, #20]
   12e2c:	add	r3, r1, r3
   12e30:	mov	r8, r0
   12e34:	str	ip, [sp, #68]	; 0x44
   12e38:	cmp	r1, r3
   12e3c:	movls	r1, r2
   12e40:	addhi	r1, r2, #1
   12e44:	ldr	r2, [sp, #64]	; 0x40
   12e48:	cmp	r0, ip
   12e4c:	str	r3, [r2, #16]
   12e50:	ldr	r3, [r2]
   12e54:	ldr	r5, [r2, #12]
   12e58:	str	r1, [r2, #20]
   12e5c:	str	r3, [sp, #60]	; 0x3c
   12e60:	ldmib	r2, {r3, r4}
   12e64:	str	r5, [sp, #4]
   12e68:	str	r4, [sp]
   12e6c:	bcs	13894 <close_stdout@@Base+0xc78>
   12e70:	ldr	r6, [r8]
   12e74:	movw	r2, #42104	; 0xa478
   12e78:	ldr	r9, [sp]
   12e7c:	movt	r2, #55146	; 0xd76a
   12e80:	ldr	r7, [sp, #4]
   12e84:	movw	r1, #46934	; 0xb756
   12e88:	str	r6, [sp, #8]
   12e8c:	eor	r5, r9, r3
   12e90:	ldr	sl, [sp, #60]	; 0x3c
   12e94:	eor	r6, r7, r9
   12e98:	ldr	ip, [sp, #8]
   12e9c:	and	r6, r6, r3
   12ea0:	add	r2, sl, r2
   12ea4:	eor	r6, r6, r7
   12ea8:	add	r2, r2, ip
   12eac:	ldr	r0, [r8, #4]
   12eb0:	add	r6, r2, r6
   12eb4:	movt	r1, #59591	; 0xe8c7
   12eb8:	add	r1, r7, r1
   12ebc:	ldr	r2, [r8, #8]
   12ec0:	add	r6, r3, r6, ror #25
   12ec4:	add	r1, r1, r0
   12ec8:	and	r5, r6, r5
   12ecc:	str	r0, [sp, #12]
   12ed0:	eor	r5, r5, r9
   12ed4:	eor	r0, r6, r3
   12ed8:	add	r5, r1, r5
   12edc:	movw	r1, #28891	; 0x70db
   12ee0:	movt	r1, #9248	; 0x2420
   12ee4:	ldr	r4, [r8, #12]
   12ee8:	add	r5, r6, r5, ror #20
   12eec:	add	r1, r9, r1
   12ef0:	and	r0, r5, r0
   12ef4:	add	r1, r1, r2
   12ef8:	eor	r0, r0, r3
   12efc:	str	r2, [sp, #16]
   12f00:	add	r0, r1, r0
   12f04:	eor	r7, r5, r6
   12f08:	movw	r2, #52974	; 0xceee
   12f0c:	movt	r2, #49597	; 0xc1bd
   12f10:	add	r0, r5, r0, ror #15
   12f14:	add	r2, r3, r2
   12f18:	and	r7, r0, r7
   12f1c:	add	r2, r2, r4
   12f20:	eor	r7, r7, r6
   12f24:	ldr	r9, [r8, #16]
   12f28:	add	r7, r2, r7
   12f2c:	eor	r1, r0, r5
   12f30:	movw	r2, #4015	; 0xfaf
   12f34:	movt	r2, #62844	; 0xf57c
   12f38:	add	r7, r0, r7, ror #10
   12f3c:	add	r2, r9, r2
   12f40:	and	r1, r7, r1
   12f44:	str	r4, [sp, #20]
   12f48:	add	r6, r2, r6
   12f4c:	eor	r4, r1, r5
   12f50:	add	r4, r6, r4
   12f54:	ldr	sl, [r8, #20]
   12f58:	eor	ip, r7, r0
   12f5c:	movw	r1, #50730	; 0xc62a
   12f60:	add	r4, r7, r4, ror #25
   12f64:	movt	r1, #18311	; 0x4787
   12f68:	add	r1, sl, r1
   12f6c:	and	ip, r4, ip
   12f70:	add	r5, r1, r5
   12f74:	eor	r2, ip, r0
   12f78:	add	r2, r5, r2
   12f7c:	ldr	ip, [r8, #24]
   12f80:	eor	r5, r4, r7
   12f84:	movw	r1, #17939	; 0x4613
   12f88:	add	r2, r4, r2, ror #20
   12f8c:	movt	r1, #43056	; 0xa830
   12f90:	add	r1, ip, r1
   12f94:	and	r5, r2, r5
   12f98:	str	ip, [sp, #32]
   12f9c:	add	r0, r1, r0
   12fa0:	eor	ip, r5, r7
   12fa4:	movw	r5, #38145	; 0x9501
   12fa8:	add	ip, r0, ip
   12fac:	ldr	r0, [r8, #28]
   12fb0:	movt	r5, #64838	; 0xfd46
   12fb4:	str	r9, [sp, #24]
   12fb8:	add	ip, r2, ip, ror #15
   12fbc:	ldr	r9, [r8, #40]	; 0x28
   12fc0:	str	r0, [sp, #36]	; 0x24
   12fc4:	eor	r0, r2, r4
   12fc8:	ldr	r1, [sp, #36]	; 0x24
   12fcc:	and	r0, ip, r0
   12fd0:	str	sl, [sp, #28]
   12fd4:	movw	fp, #23121	; 0x5a51
   12fd8:	add	r5, r1, r5
   12fdc:	eor	r1, r0, r4
   12fe0:	add	r7, r5, r7
   12fe4:	ldr	r5, [r8, #32]
   12fe8:	add	r1, r7, r1
   12fec:	movw	r0, #39128	; 0x98d8
   12ff0:	movt	r0, #27008	; 0x6980
   12ff4:	ldr	r7, [r8, #36]	; 0x24
   12ff8:	str	r5, [sp, #40]	; 0x28
   12ffc:	add	r1, ip, r1, ror #10
   13000:	ldr	r6, [sp, #40]	; 0x28
   13004:	eor	r5, ip, r2
   13008:	and	r5, r1, r5
   1300c:	ldr	sl, [r8, #44]	; 0x2c
   13010:	add	r0, r6, r0
   13014:	eor	r6, r5, r2
   13018:	add	r4, r0, r4
   1301c:	movw	r0, #63407	; 0xf7af
   13020:	add	r6, r4, r6
   13024:	movt	r0, #35652	; 0x8b44
   13028:	eor	r4, r1, ip
   1302c:	add	r0, r7, r0
   13030:	add	r6, r1, r6, ror #25
   13034:	add	r2, r0, r2
   13038:	and	r4, r6, r4
   1303c:	sub	r0, r9, #41984	; 0xa400
   13040:	eor	r5, r4, ip
   13044:	sub	r0, r0, #79	; 0x4f
   13048:	add	r5, r2, r5
   1304c:	eor	r2, r6, r1
   13050:	add	ip, r0, ip
   13054:	str	r7, [sp, #44]	; 0x2c
   13058:	add	r5, r6, r5, ror #20
   1305c:	str	sl, [sp, #52]	; 0x34
   13060:	and	r2, r5, r2
   13064:	str	r9, [sp, #48]	; 0x30
   13068:	eor	r0, r2, r1
   1306c:	movw	r2, #55230	; 0xd7be
   13070:	add	r0, ip, r0
   13074:	movt	r2, #35164	; 0x895c
   13078:	eor	ip, r5, r6
   1307c:	add	r2, sl, r2
   13080:	add	r0, r5, r0, ror #15
   13084:	add	r1, r2, r1
   13088:	and	ip, r0, ip
   1308c:	movw	r2, #4386	; 0x1122
   13090:	eor	r7, ip, r6
   13094:	ldr	ip, [r8, #48]	; 0x30
   13098:	add	r7, r1, r7
   1309c:	eor	r1, r0, r5
   130a0:	movt	r2, #27536	; 0x6b90
   130a4:	movt	fp, #9822	; 0x265e
   130a8:	add	r7, r0, r7, ror #10
   130ac:	add	r2, ip, r2
   130b0:	and	r1, r7, r1
   130b4:	add	r6, r2, r6
   130b8:	eor	sl, r1, r5
   130bc:	ldr	r1, [r8, #52]	; 0x34
   130c0:	add	sl, r6, sl
   130c4:	eor	r4, r7, r0
   130c8:	add	r8, r8, #64	; 0x40
   130cc:	str	r1, [sp, #56]	; 0x38
   130d0:	add	sl, r7, sl, ror #25
   130d4:	ldr	r2, [sp, #56]	; 0x38
   130d8:	movw	r1, #29075	; 0x7193
   130dc:	movt	r1, #64920	; 0xfd98
   130e0:	and	r4, sl, r4
   130e4:	add	r1, r2, r1
   130e8:	eor	r2, r4, r0
   130ec:	add	r1, r1, r5
   130f0:	ldr	r5, [r8, #-8]
   130f4:	add	r2, r1, r2
   130f8:	eor	r6, sl, r7
   130fc:	movw	r1, #17294	; 0x438e
   13100:	movt	r1, #42617	; 0xa679
   13104:	add	r2, sl, r2, ror #20
   13108:	add	r1, r5, r1
   1310c:	and	r6, r2, r6
   13110:	add	r1, r1, r0
   13114:	eor	r4, r6, r7
   13118:	ldr	r0, [r8, #-4]
   1311c:	add	r4, r1, r4
   13120:	eor	r9, r2, sl
   13124:	movw	r6, #2081	; 0x821
   13128:	movt	r6, #18868	; 0x49b4
   1312c:	add	r4, r2, r4, ror #15
   13130:	add	r6, r0, r6
   13134:	and	r9, r4, r9
   13138:	add	r7, r6, r7
   1313c:	eor	r1, r9, sl
   13140:	movw	r6, #9570	; 0x2562
   13144:	add	r1, r7, r1
   13148:	ldr	r7, [sp, #12]
   1314c:	movt	r6, #63006	; 0xf61e
   13150:	ldr	r9, [sp, #32]
   13154:	add	r1, r4, r1, ror #10
   13158:	add	r6, r7, r6
   1315c:	add	sl, r6, sl
   13160:	eor	r6, r1, r4
   13164:	and	r6, r6, r2
   13168:	movw	r7, #45888	; 0xb340
   1316c:	eor	r6, r6, r4
   13170:	movt	r7, #49216	; 0xc040
   13174:	add	sl, sl, r6
   13178:	ldr	r6, [sp, #52]	; 0x34
   1317c:	add	r7, r9, r7
   13180:	ldr	r9, [sp, #8]
   13184:	add	sl, r1, sl, ror #27
   13188:	add	fp, r6, fp
   1318c:	eor	r6, sl, r1
   13190:	add	fp, fp, r4
   13194:	and	r4, r6, r4
   13198:	add	r2, r7, r2
   1319c:	eor	r4, r4, r1
   131a0:	movw	r7, #51114	; 0xc7aa
   131a4:	add	r2, r2, r4
   131a8:	movt	r7, #59830	; 0xe9b6
   131ac:	add	r7, r9, r7
   131b0:	ldr	r4, [sp, #68]	; 0x44
   131b4:	add	r2, sl, r2, ror #23
   131b8:	add	r7, r7, r1
   131bc:	eor	r9, r2, sl
   131c0:	movw	r6, #4189	; 0x105d
   131c4:	and	r1, r9, r1
   131c8:	ldr	r9, [sp, #28]
   131cc:	eor	r1, r1, sl
   131d0:	movt	r6, #54831	; 0xd62f
   131d4:	add	r6, r9, r6
   131d8:	add	r9, fp, r1
   131dc:	cmp	r4, r8
   131e0:	ldr	r4, [sp, #48]	; 0x30
   131e4:	add	r9, r2, r9, ror #18
   131e8:	movw	r1, #5203	; 0x1453
   131ec:	movt	r1, #580	; 0x244
   131f0:	add	r6, r6, sl
   131f4:	add	r1, r4, r1
   131f8:	eor	r4, r9, r2
   131fc:	and	r4, r4, sl
   13200:	movw	sl, #64456	; 0xfbc8
   13204:	eor	r4, r4, r2
   13208:	movt	sl, #59347	; 0xe7d3
   1320c:	add	r4, r7, r4
   13210:	add	r1, r1, r2
   13214:	movw	fp, #59009	; 0xe681
   13218:	movt	fp, #55457	; 0xd8a1
   1321c:	add	r4, r9, r4, ror #12
   13220:	add	fp, r0, fp
   13224:	eor	r7, r4, r9
   13228:	add	fp, fp, r9
   1322c:	and	r7, r7, r2
   13230:	movw	r2, #52710	; 0xcde6
   13234:	eor	r7, r7, r9
   13238:	movt	r2, #8673	; 0x21e1
   1323c:	add	r7, r6, r7
   13240:	ldr	r6, [sp, #24]
   13244:	add	r7, r4, r7, ror #27
   13248:	add	sl, r6, sl
   1324c:	eor	r6, r7, r4
   13250:	add	sl, sl, r4
   13254:	and	r6, r6, r9
   13258:	ldr	r9, [sp, #44]	; 0x2c
   1325c:	eor	r6, r6, r4
   13260:	add	r6, r1, r6
   13264:	add	r2, r9, r2
   13268:	add	r9, r2, r7
   1326c:	movw	r2, #2006	; 0x7d6
   13270:	add	r6, r7, r6, ror #23
   13274:	movt	r2, #49975	; 0xc337
   13278:	eor	r1, r6, r7
   1327c:	add	r2, r5, r2
   13280:	and	r1, r1, r4
   13284:	add	r4, r2, r6
   13288:	eor	r1, r1, r7
   1328c:	add	r1, fp, r1
   13290:	movw	fp, #3463	; 0xd87
   13294:	movt	fp, #62677	; 0xf4d5
   13298:	add	r1, r6, r1, ror #18
   1329c:	eor	r2, r1, r6
   132a0:	and	r2, r2, r7
   132a4:	movw	r7, #5357	; 0x14ed
   132a8:	eor	r2, r2, r6
   132ac:	movt	r7, #17754	; 0x455a
   132b0:	add	r2, sl, r2
   132b4:	ldr	sl, [sp, #20]
   132b8:	add	r2, r1, r2, ror #12
   132bc:	add	fp, sl, fp
   132c0:	eor	sl, r2, r1
   132c4:	add	fp, fp, r1
   132c8:	and	sl, sl, r6
   132cc:	ldr	r6, [sp, #40]	; 0x28
   132d0:	eor	sl, sl, r1
   132d4:	add	sl, r9, sl
   132d8:	add	r7, r6, r7
   132dc:	add	r7, r7, r2
   132e0:	movw	r6, #59653	; 0xe905
   132e4:	add	sl, r2, sl, ror #27
   132e8:	movt	r6, #43491	; 0xa9e3
   132ec:	eor	r9, sl, r2
   132f0:	and	r9, r9, r1
   132f4:	ldr	r1, [sp, #56]	; 0x38
   132f8:	eor	r9, r9, r2
   132fc:	add	r9, r4, r9
   13300:	add	r6, r1, r6
   13304:	movw	r1, #41976	; 0xa3f8
   13308:	movt	r1, #64751	; 0xfcef
   1330c:	add	r9, sl, r9, ror #23
   13310:	add	r6, r6, sl
   13314:	eor	r4, r9, sl
   13318:	and	r4, r4, r2
   1331c:	ldr	r2, [sp, #16]
   13320:	eor	r4, r4, sl
   13324:	add	r4, fp, r4
   13328:	add	r1, r2, r1
   1332c:	add	r1, r1, r9
   13330:	movw	fp, #729	; 0x2d9
   13334:	add	r4, r9, r4, ror #18
   13338:	movt	fp, #26479	; 0x676f
   1333c:	eor	r2, r4, r9
   13340:	and	sl, r2, sl
   13344:	eor	sl, sl, r9
   13348:	add	r7, r7, sl
   1334c:	ldr	sl, [sp, #36]	; 0x24
   13350:	add	r7, r4, r7, ror #12
   13354:	add	fp, sl, fp
   13358:	eor	r2, r7, r4
   1335c:	movw	sl, #14658	; 0x3942
   13360:	and	r9, r2, r9
   13364:	movw	r2, #19594	; 0x4c8a
   13368:	eor	r9, r9, r4
   1336c:	movt	r2, #36138	; 0x8d2a
   13370:	add	r6, r6, r9
   13374:	add	r2, ip, r2
   13378:	add	r9, r2, r7
   1337c:	movt	sl, #65530	; 0xfffa
   13380:	add	r6, r7, r6, ror #27
   13384:	add	fp, fp, r4
   13388:	eor	r2, r6, r7
   1338c:	and	r2, r2, r4
   13390:	movw	r4, #63105	; 0xf681
   13394:	eor	r2, r2, r7
   13398:	movt	r4, #34673	; 0x8771
   1339c:	add	r2, r1, r2
   133a0:	ldr	r1, [sp, #28]
   133a4:	add	r2, r6, r2, ror #23
   133a8:	add	sl, r1, sl
   133ac:	eor	r1, r2, r6
   133b0:	add	sl, sl, r6
   133b4:	and	r1, r1, r7
   133b8:	ldr	r7, [sp, #40]	; 0x28
   133bc:	eor	r1, r1, r6
   133c0:	add	r1, fp, r1
   133c4:	add	r4, r7, r4
   133c8:	add	r7, r4, r2
   133cc:	movw	fp, #53305	; 0xd039
   133d0:	add	r1, r2, r1, ror #18
   133d4:	movt	fp, #55764	; 0xd9d4
   133d8:	eor	r4, r1, r2
   133dc:	and	r6, r4, r6
   133e0:	eor	r2, r6, r2
   133e4:	movw	r6, #24866	; 0x6122
   133e8:	add	r2, r9, r2
   133ec:	ldr	r9, [sp, #52]	; 0x34
   133f0:	movt	r6, #28061	; 0x6d9d
   133f4:	add	r2, r1, r2, ror #12
   133f8:	add	r6, r9, r6
   133fc:	eor	r4, r2, r4
   13400:	add	r6, r6, r1
   13404:	add	r4, sl, r4
   13408:	eor	r1, r2, r1
   1340c:	movw	r9, #14348	; 0x380c
   13410:	movt	r9, #64997	; 0xfde5
   13414:	add	r4, r2, r4, ror #28
   13418:	add	r9, r5, r9
   1341c:	eor	r1, r1, r4
   13420:	add	r9, r9, r2
   13424:	add	r1, r7, r1
   13428:	eor	r2, r4, r2
   1342c:	ldr	r7, [sp, #12]
   13430:	movw	sl, #59972	; 0xea44
   13434:	add	r1, r4, r1, ror #21
   13438:	movt	sl, #42174	; 0xa4be
   1343c:	eor	r2, r2, r1
   13440:	add	sl, r7, sl
   13444:	add	r2, r6, r2
   13448:	add	sl, sl, r4
   1344c:	eor	r4, r1, r4
   13450:	ldr	r6, [sp, #24]
   13454:	add	r2, r1, r2, ror #16
   13458:	movw	r7, #53161	; 0xcfa9
   1345c:	eor	r4, r4, r2
   13460:	movt	r7, #19422	; 0x4bde
   13464:	add	r4, r9, r4
   13468:	add	r7, r6, r7
   1346c:	add	r7, r7, r1
   13470:	eor	r1, r2, r1
   13474:	add	r4, r2, r4, ror #9
   13478:	ldr	r9, [sp, #36]	; 0x24
   1347c:	eor	r1, r1, r4
   13480:	movw	r6, #19296	; 0x4b60
   13484:	add	r1, sl, r1
   13488:	movt	r6, #63163	; 0xf6bb
   1348c:	add	r6, r9, r6
   13490:	ldr	sl, [sp, #48]	; 0x30
   13494:	add	r1, r4, r1, ror #28
   13498:	add	r6, r6, r2
   1349c:	eor	r2, r4, r2
   134a0:	movw	r9, #48240	; 0xbc70
   134a4:	eor	r2, r2, r1
   134a8:	movt	r9, #48831	; 0xbebf
   134ac:	add	r2, r7, r2
   134b0:	add	r9, sl, r9
   134b4:	add	r9, r9, r4
   134b8:	eor	r4, r1, r4
   134bc:	add	r2, r1, r2, ror #21
   134c0:	ldr	r7, [sp, #56]	; 0x38
   134c4:	eor	r4, r4, r2
   134c8:	movw	sl, #32454	; 0x7ec6
   134cc:	add	r6, r6, r4
   134d0:	movt	sl, #10395	; 0x289b
   134d4:	add	sl, r7, sl
   134d8:	ldr	r4, [sp, #8]
   134dc:	add	r6, r2, r6, ror #16
   134e0:	add	sl, sl, r1
   134e4:	eor	r1, r2, r1
   134e8:	movw	r7, #10234	; 0x27fa
   134ec:	eor	r1, r1, r6
   134f0:	movt	r7, #60065	; 0xeaa1
   134f4:	add	r1, r9, r1
   134f8:	add	r7, r4, r7
   134fc:	add	r7, r7, r2
   13500:	eor	r2, r6, r2
   13504:	add	r1, r6, r1, ror #9
   13508:	ldr	r9, [sp, #20]
   1350c:	eor	r2, r2, r1
   13510:	movw	r4, #12421	; 0x3085
   13514:	add	r2, sl, r2
   13518:	movt	r4, #54511	; 0xd4ef
   1351c:	add	r4, r9, r4
   13520:	ldr	sl, [sp, #32]
   13524:	add	r2, r1, r2, ror #28
   13528:	add	r4, r4, r6
   1352c:	eor	r6, r1, r6
   13530:	movw	r9, #7429	; 0x1d05
   13534:	eor	r6, r6, r2
   13538:	movt	r9, #1160	; 0x488
   1353c:	add	r7, r7, r6
   13540:	add	r9, sl, r9
   13544:	add	r9, r9, r1
   13548:	eor	r1, r2, r1
   1354c:	add	r7, r2, r7, ror #21
   13550:	ldr	r6, [sp, #44]	; 0x2c
   13554:	eor	r1, r1, r7
   13558:	movw	sl, #22117	; 0x5665
   1355c:	add	r1, r4, r1
   13560:	add	fp, r6, fp
   13564:	add	fp, fp, r2
   13568:	eor	r2, r7, r2
   1356c:	add	r1, r7, r1, ror #16
   13570:	movw	r6, #39397	; 0x99e5
   13574:	eor	r2, r2, r1
   13578:	movt	r6, #59099	; 0xe6db
   1357c:	add	r2, r9, r2
   13580:	add	r6, ip, r6
   13584:	add	r6, r6, r7
   13588:	eor	r7, r1, r7
   1358c:	add	r2, r1, r2, ror #9
   13590:	movw	r4, #31992	; 0x7cf8
   13594:	eor	r7, r7, r2
   13598:	movt	r4, #8098	; 0x1fa2
   1359c:	add	fp, fp, r7
   135a0:	add	r4, r0, r4
   135a4:	add	r4, r4, r1
   135a8:	eor	r1, r2, r1
   135ac:	add	fp, r2, fp, ror #28
   135b0:	ldr	r7, [sp, #16]
   135b4:	eor	r1, r1, fp
   135b8:	movt	sl, #50348	; 0xc4ac
   135bc:	add	r1, r6, r1
   135c0:	add	sl, r7, sl
   135c4:	add	sl, sl, r2
   135c8:	eor	r2, fp, r2
   135cc:	add	r1, fp, r1, ror #21
   135d0:	ldr	r9, [sp, #8]
   135d4:	eor	r2, r2, r1
   135d8:	movw	r7, #8772	; 0x2244
   135dc:	add	r2, r4, r2
   135e0:	movt	r7, #62505	; 0xf429
   135e4:	add	r7, r9, r7
   135e8:	movw	r4, #9127	; 0x23a7
   135ec:	add	r2, r1, r2, ror #16
   135f0:	add	r7, r7, fp
   135f4:	eor	fp, r1, fp
   135f8:	movt	r4, #43924	; 0xab94
   135fc:	eor	fp, fp, r2
   13600:	mvn	r9, r1
   13604:	add	sl, sl, fp
   13608:	add	r4, r5, r4
   1360c:	str	r7, [sp, #8]
   13610:	mvn	fp, r2
   13614:	add	sl, r2, sl, ror #9
   13618:	ldr	r7, [sp, #36]	; 0x24
   1361c:	orr	r9, sl, r9
   13620:	add	r4, r4, r2
   13624:	eor	r9, r9, r2
   13628:	ldr	r2, [sp, #8]
   1362c:	movw	r6, #65431	; 0xff97
   13630:	movt	r6, #17194	; 0x432a
   13634:	add	r6, r7, r6
   13638:	add	r7, r2, r9
   1363c:	ldr	r9, [sp, #28]
   13640:	add	r1, r6, r1
   13644:	add	r7, sl, r7, ror #26
   13648:	movw	r6, #41017	; 0xa039
   1364c:	movt	r6, #64659	; 0xfc93
   13650:	orr	fp, r7, fp
   13654:	add	r6, r9, r6
   13658:	mvn	r5, sl
   1365c:	add	r6, r6, sl
   13660:	eor	sl, fp, sl
   13664:	add	r1, r1, sl
   13668:	movw	r2, #22979	; 0x59c3
   1366c:	movt	r2, #25947	; 0x655b
   13670:	mvn	r9, r7
   13674:	add	r1, r7, r1, ror #22
   13678:	add	r2, ip, r2
   1367c:	orr	r5, r1, r5
   13680:	add	r2, r2, r7
   13684:	eor	r7, r5, r7
   13688:	ldr	sl, [sp, #20]
   1368c:	add	r4, r4, r7
   13690:	movw	ip, #52370	; 0xcc92
   13694:	movt	ip, #36620	; 0x8f0c
   13698:	ldr	r5, [sp, #48]	; 0x30
   1369c:	add	r4, r1, r4, ror #17
   136a0:	add	ip, sl, ip
   136a4:	orr	r9, r4, r9
   136a8:	mvn	sl, r1
   136ac:	add	ip, ip, r1
   136b0:	eor	r1, r9, r1
   136b4:	add	r6, r6, r1
   136b8:	movw	fp, #62589	; 0xf47d
   136bc:	movt	fp, #65519	; 0xffef
   136c0:	mvn	r7, r4
   136c4:	add	r6, r4, r6, ror #11
   136c8:	add	fp, r5, fp
   136cc:	orr	sl, r6, sl
   136d0:	add	fp, fp, r4
   136d4:	eor	r4, sl, r4
   136d8:	ldr	r1, [sp, #12]
   136dc:	add	r2, r2, r4
   136e0:	ldr	r4, [sp, #40]	; 0x28
   136e4:	movw	r9, #24017	; 0x5dd1
   136e8:	movw	r5, #32335	; 0x7e4f
   136ec:	add	r2, r6, r2, ror #26
   136f0:	movt	r9, #34180	; 0x8584
   136f4:	orr	r7, r2, r7
   136f8:	movt	r5, #28584	; 0x6fa8
   136fc:	eor	r7, r7, r6
   13700:	add	r9, r1, r9
   13704:	add	ip, ip, r7
   13708:	mvn	r1, r6
   1370c:	add	r5, r4, r5
   13710:	mvn	r4, r2
   13714:	add	ip, r2, ip, ror #22
   13718:	add	r5, r5, r2
   1371c:	orr	r1, ip, r1
   13720:	add	r9, r9, r6
   13724:	eor	r2, r1, r2
   13728:	mvn	r7, ip
   1372c:	add	fp, fp, r2
   13730:	ldr	r2, [sp, #56]	; 0x38
   13734:	movw	sl, #59104	; 0xe6e0
   13738:	movw	r1, #4513	; 0x11a1
   1373c:	add	fp, ip, fp, ror #17
   13740:	movt	sl, #65068	; 0xfe2c
   13744:	orr	r4, fp, r4
   13748:	movt	r1, #19976	; 0x4e08
   1374c:	eor	r4, r4, ip
   13750:	add	sl, r0, sl
   13754:	add	r9, r9, r4
   13758:	add	r1, r2, r1
   1375c:	mvn	r2, fp
   13760:	add	sl, sl, ip
   13764:	add	r9, fp, r9, ror #11
   13768:	ldr	r6, [sp, #32]
   1376c:	orr	r7, r9, r7
   13770:	ldr	r4, [sp, #24]
   13774:	eor	r7, r7, fp
   13778:	movw	r0, #17172	; 0x4314
   1377c:	add	r5, r5, r7
   13780:	ldr	r7, [sp, #52]	; 0x34
   13784:	movt	r0, #41729	; 0xa301
   13788:	movw	ip, #62005	; 0xf235
   1378c:	add	r5, r9, r5, ror #26
   13790:	movt	ip, #48442	; 0xbd3a
   13794:	orr	r2, r5, r2
   13798:	add	r0, r6, r0
   1379c:	eor	r2, r2, r9
   137a0:	add	ip, r7, ip
   137a4:	add	sl, sl, r2
   137a8:	ldr	r7, [sp, #16]
   137ac:	movw	r6, #32386	; 0x7e82
   137b0:	movt	r6, #63315	; 0xf753
   137b4:	add	sl, r5, sl, ror #22
   137b8:	add	r0, r0, fp
   137bc:	add	r6, r4, r6
   137c0:	movw	fp, #53947	; 0xd2bb
   137c4:	mvn	r4, r9
   137c8:	movt	fp, #10967	; 0x2ad7
   137cc:	orr	r4, sl, r4
   137d0:	add	r6, r6, r5
   137d4:	add	fp, r7, fp
   137d8:	mvn	r7, r5
   137dc:	eor	r5, r4, r5
   137e0:	add	r1, r1, r9
   137e4:	add	r5, r0, r5
   137e8:	ldr	r2, [sp, #44]	; 0x2c
   137ec:	movw	r9, #54161	; 0xd391
   137f0:	movt	r9, #60294	; 0xeb86
   137f4:	add	r5, sl, r5, ror #17
   137f8:	add	r9, r2, r9
   137fc:	orr	r7, r5, r7
   13800:	mvn	r2, sl
   13804:	eor	r7, r7, sl
   13808:	mvn	r4, r5
   1380c:	add	r7, r1, r7
   13810:	add	ip, ip, sl
   13814:	add	fp, fp, r5
   13818:	add	r7, r5, r7, ror #11
   1381c:	orr	r2, r7, r2
   13820:	add	r9, r9, r7
   13824:	eor	r2, r2, r5
   13828:	mvn	sl, r7
   1382c:	add	r2, r6, r2
   13830:	ldr	r5, [sp, #60]	; 0x3c
   13834:	ldr	r6, [sp, #4]
   13838:	add	r2, r7, r2, ror #26
   1383c:	orr	r4, r2, r4
   13840:	add	r5, r5, r2
   13844:	eor	r7, r4, r7
   13848:	mvn	r0, r2
   1384c:	add	ip, ip, r7
   13850:	ldr	r7, [sp]
   13854:	str	r5, [sp, #60]	; 0x3c
   13858:	add	ip, r2, ip, ror #22
   1385c:	orr	sl, ip, sl
   13860:	add	r6, r6, ip
   13864:	eor	r2, sl, r2
   13868:	str	r6, [sp, #4]
   1386c:	add	fp, fp, r2
   13870:	add	fp, ip, fp, ror #17
   13874:	orr	r0, fp, r0
   13878:	add	r7, r7, fp
   1387c:	eor	ip, r0, ip
   13880:	str	r7, [sp]
   13884:	add	r9, r9, ip
   13888:	add	fp, fp, r9, ror #11
   1388c:	add	r3, r3, fp
   13890:	bhi	12e70 <close_stdout@@Base+0x254>
   13894:	ldr	sl, [sp, #64]	; 0x40
   13898:	ldr	r9, [sp, #60]	; 0x3c
   1389c:	ldr	ip, [sp]
   138a0:	ldr	r0, [sp, #4]
   138a4:	str	r9, [sl]
   138a8:	str	r3, [sl, #4]
   138ac:	str	ip, [sl, #8]
   138b0:	str	r0, [sl, #12]
   138b4:	add	sp, sp, #72	; 0x48
   138b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   138bc:	bx	lr
   138c0:	push	{r4, r5, r6, r7, r8, lr}
   138c4:	mov	r4, r0
   138c8:	ldr	r3, [r0, #24]
   138cc:	mov	r6, r1
   138d0:	ldr	ip, [r0, #16]
   138d4:	add	r5, r4, #28
   138d8:	cmp	r3, #55	; 0x37
   138dc:	add	ip, r3, ip
   138e0:	str	ip, [r0, #16]
   138e4:	ldr	lr, [r4, #20]
   138e8:	movhi	r7, #128	; 0x80
   138ec:	movls	r7, #64	; 0x40
   138f0:	movhi	r2, #120	; 0x78
   138f4:	movls	r2, #56	; 0x38
   138f8:	movhi	r1, #31
   138fc:	movls	r1, #15
   13900:	movhi	r0, #30
   13904:	movls	r0, #14
   13908:	cmp	r3, ip
   1390c:	addhi	lr, lr, #1
   13910:	add	r0, r4, r0, lsl #2
   13914:	add	r1, r4, r1, lsl #2
   13918:	lsr	r8, ip, #29
   1391c:	strhi	lr, [r4, #20]
   13920:	lsl	ip, ip, #3
   13924:	orr	lr, r8, lr, lsl #3
   13928:	str	ip, [r0, #28]
   1392c:	str	lr, [r1, #28]
   13930:	rsb	r2, r3, r2
   13934:	ldr	r1, [pc, #40]	; 13964 <close_stdout@@Base+0xd48>
   13938:	add	r0, r5, r3
   1393c:	add	r1, pc, r1
   13940:	bl	110ec <memcpy@plt>
   13944:	mov	r0, r5
   13948:	mov	r1, r7
   1394c:	mov	r2, r4
   13950:	bl	12e10 <close_stdout@@Base+0x1f4>
   13954:	mov	r0, r4
   13958:	mov	r1, r6
   1395c:	pop	{r4, r5, r6, r7, r8, lr}
   13960:	b	12d74 <close_stdout@@Base+0x158>
   13964:	andeq	r4, r0, r0, asr #6
   13968:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1396c:	mov	r7, r2
   13970:	ldr	r4, [r2, #24]
   13974:	mov	r9, r0
   13978:	mov	r6, r1
   1397c:	cmp	r4, #0
   13980:	bne	13a68 <close_stdout@@Base+0xe4c>
   13984:	cmp	r6, #63	; 0x3f
   13988:	bls	13a58 <close_stdout@@Base+0xe3c>
   1398c:	tst	r9, #3
   13990:	beq	13a3c <close_stdout@@Base+0xe20>
   13994:	cmp	r6, #64	; 0x40
   13998:	add	r8, r7, #28
   1399c:	beq	13a14 <close_stdout@@Base+0xdf8>
   139a0:	mov	sl, r6
   139a4:	mov	r4, r9
   139a8:	add	ip, r4, #64	; 0x40
   139ac:	mov	r3, r8
   139b0:	ldr	r1, [r4]
   139b4:	add	r4, r4, #16
   139b8:	ldr	r2, [r4, #-12]
   139bc:	add	r3, r3, #16
   139c0:	ldr	r5, [r4, #-8]
   139c4:	ldr	lr, [r4, #-4]
   139c8:	cmp	r4, ip
   139cc:	str	r1, [r3, #-16]
   139d0:	str	r2, [r3, #-12]
   139d4:	str	r5, [r3, #-8]
   139d8:	str	lr, [r3, #-4]
   139dc:	bne	139b0 <close_stdout@@Base+0xd94>
   139e0:	sub	sl, sl, #64	; 0x40
   139e4:	mov	r0, r8
   139e8:	mov	r1, #64	; 0x40
   139ec:	mov	r2, r7
   139f0:	bl	12e10 <close_stdout@@Base+0x1f4>
   139f4:	cmp	sl, #64	; 0x40
   139f8:	bhi	139a8 <close_stdout@@Base+0xd8c>
   139fc:	sub	r3, r6, #65	; 0x41
   13a00:	sub	r6, r6, #64	; 0x40
   13a04:	lsr	r3, r3, #6
   13a08:	add	r2, r3, #1
   13a0c:	sub	r6, r6, r3, lsl #6
   13a10:	add	r9, r9, r2, lsl #6
   13a14:	ldr	r3, [r7, #24]
   13a18:	mov	r2, r6
   13a1c:	mov	r1, r9
   13a20:	add	r6, r6, r3
   13a24:	add	r0, r8, r3
   13a28:	bl	110ec <memcpy@plt>
   13a2c:	cmp	r6, #63	; 0x3f
   13a30:	bhi	13aa8 <close_stdout@@Base+0xe8c>
   13a34:	str	r6, [r7, #24]
   13a38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a3c:	bic	r3, r6, #63	; 0x3f
   13a40:	mov	r0, r9
   13a44:	mov	r2, r7
   13a48:	and	r6, r6, #63	; 0x3f
   13a4c:	mov	r1, r3
   13a50:	add	r9, r9, r3
   13a54:	bl	12e10 <close_stdout@@Base+0x1f4>
   13a58:	cmp	r6, #0
   13a5c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13a60:	add	r8, r7, #28
   13a64:	b	13a14 <close_stdout@@Base+0xdf8>
   13a68:	rsb	r5, r4, #128	; 0x80
   13a6c:	add	r8, r2, #28
   13a70:	cmp	r1, r5
   13a74:	movcc	r5, r1
   13a78:	add	r0, r8, r4
   13a7c:	mov	r1, r9
   13a80:	mov	r2, r5
   13a84:	bl	110ec <memcpy@plt>
   13a88:	ldr	r1, [r7, #24]
   13a8c:	add	r1, r5, r1
   13a90:	str	r1, [r7, #24]
   13a94:	cmp	r1, #64	; 0x40
   13a98:	bhi	13ad4 <close_stdout@@Base+0xeb8>
   13a9c:	add	r9, r9, r5
   13aa0:	rsb	r6, r5, r6
   13aa4:	b	13984 <close_stdout@@Base+0xd68>
   13aa8:	sub	r6, r6, #64	; 0x40
   13aac:	mov	r0, r8
   13ab0:	mov	r1, #64	; 0x40
   13ab4:	mov	r2, r7
   13ab8:	bl	12e10 <close_stdout@@Base+0x1f4>
   13abc:	mov	r0, r8
   13ac0:	mov	r2, r6
   13ac4:	add	r1, r7, #92	; 0x5c
   13ac8:	bl	110ec <memcpy@plt>
   13acc:	str	r6, [r7, #24]
   13ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ad4:	mov	r0, r8
   13ad8:	mov	r2, r7
   13adc:	bic	r1, r1, #63	; 0x3f
   13ae0:	bl	12e10 <close_stdout@@Base+0x1f4>
   13ae4:	ldr	r2, [r7, #24]
   13ae8:	add	r1, r5, r4
   13aec:	mov	r0, r8
   13af0:	bic	r1, r1, #63	; 0x3f
   13af4:	and	r2, r2, #63	; 0x3f
   13af8:	add	r1, r8, r1
   13afc:	str	r2, [r7, #24]
   13b00:	bl	110ec <memcpy@plt>
   13b04:	b	13a9c <close_stdout@@Base+0xe80>
   13b08:	ldr	r3, [pc, #100]	; 13b74 <close_stdout@@Base+0xf58>
   13b0c:	ldr	ip, [pc, #100]	; 13b78 <close_stdout@@Base+0xf5c>
   13b10:	add	r3, pc, r3
   13b14:	push	{r4, r5, r6, r7, r8, lr}
   13b18:	sub	sp, sp, #160	; 0xa0
   13b1c:	ldr	r5, [r3, ip]
   13b20:	mov	r7, r0
   13b24:	mov	r8, r1
   13b28:	mov	r0, sp
   13b2c:	mov	r6, r2
   13b30:	ldr	r3, [r5]
   13b34:	str	r3, [sp, #156]	; 0x9c
   13b38:	bl	12d34 <close_stdout@@Base+0x118>
   13b3c:	mov	r2, sp
   13b40:	mov	r0, r7
   13b44:	mov	r1, r8
   13b48:	bl	13968 <close_stdout@@Base+0xd4c>
   13b4c:	mov	r0, sp
   13b50:	mov	r1, r6
   13b54:	bl	138c0 <close_stdout@@Base+0xca4>
   13b58:	ldr	r2, [sp, #156]	; 0x9c
   13b5c:	ldr	r3, [r5]
   13b60:	cmp	r2, r3
   13b64:	bne	13b70 <close_stdout@@Base+0xf54>
   13b68:	add	sp, sp, #160	; 0xa0
   13b6c:	pop	{r4, r5, r6, r7, r8, pc}
   13b70:	bl	11128 <__stack_chk_fail@plt>
   13b74:	andeq	r5, r1, r8, ror #9
   13b78:	andeq	r0, r0, r8, lsl #2
   13b7c:	ldr	r3, [pc, #244]	; 13c78 <close_stdout@@Base+0x105c>
   13b80:	ldr	r2, [pc, #244]	; 13c7c <close_stdout@@Base+0x1060>
   13b84:	add	r3, pc, r3
   13b88:	push	{r4, r5, r6, r7, r8, r9, lr}
   13b8c:	sub	sp, sp, #164	; 0xa4
   13b90:	ldr	r8, [r3, r2]
   13b94:	mov	r5, r0
   13b98:	movw	r0, #32840	; 0x8048
   13b9c:	mov	r9, r1
   13ba0:	ldr	r3, [r8]
   13ba4:	str	r3, [sp, #156]	; 0x9c
   13ba8:	bl	111c4 <malloc@plt>
   13bac:	subs	r6, r0, #0
   13bb0:	moveq	r0, #1
   13bb4:	beq	13c18 <close_stdout@@Base+0xffc>
   13bb8:	mov	r0, sp
   13bbc:	mov	r4, #0
   13bc0:	bl	12d34 <close_stdout@@Base+0x118>
   13bc4:	add	r0, r6, r4
   13bc8:	rsb	r2, r4, #32768	; 0x8000
   13bcc:	mov	r1, #1
   13bd0:	mov	r3, r5
   13bd4:	bl	11320 <fread_unlocked@plt>
   13bd8:	add	r4, r4, r0
   13bdc:	cmp	r4, #32768	; 0x8000
   13be0:	beq	13c30 <close_stdout@@Base+0x1014>
   13be4:	cmp	r0, #0
   13be8:	ldr	r3, [r5]
   13bec:	beq	13c5c <close_stdout@@Base+0x1040>
   13bf0:	tst	r3, #16
   13bf4:	beq	13bc4 <close_stdout@@Base+0xfa8>
   13bf8:	cmp	r4, #0
   13bfc:	bne	13c48 <close_stdout@@Base+0x102c>
   13c00:	mov	r1, r9
   13c04:	mov	r0, sp
   13c08:	bl	138c0 <close_stdout@@Base+0xca4>
   13c0c:	mov	r0, r6
   13c10:	bl	110d4 <free@plt>
   13c14:	mov	r0, #0
   13c18:	ldr	r2, [sp, #156]	; 0x9c
   13c1c:	ldr	r3, [r8]
   13c20:	cmp	r2, r3
   13c24:	bne	13c74 <close_stdout@@Base+0x1058>
   13c28:	add	sp, sp, #164	; 0xa4
   13c2c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13c30:	mov	r1, r4
   13c34:	mov	r0, r6
   13c38:	mov	r2, sp
   13c3c:	mov	r4, #0
   13c40:	bl	12e10 <close_stdout@@Base+0x1f4>
   13c44:	b	13bc4 <close_stdout@@Base+0xfa8>
   13c48:	mov	r1, r4
   13c4c:	mov	r0, r6
   13c50:	mov	r2, sp
   13c54:	bl	13968 <close_stdout@@Base+0xd4c>
   13c58:	b	13c00 <close_stdout@@Base+0xfe4>
   13c5c:	tst	r3, #32
   13c60:	beq	13bf8 <close_stdout@@Base+0xfdc>
   13c64:	mov	r0, r6
   13c68:	bl	110d4 <free@plt>
   13c6c:	mov	r0, #1
   13c70:	b	13c18 <close_stdout@@Base+0xffc>
   13c74:	bl	11128 <__stack_chk_fail@plt>
   13c78:	andeq	r5, r1, r4, ror r4
   13c7c:	andeq	r0, r0, r8, lsl #2
   13c80:	ldrb	r3, [r0]
   13c84:	cmp	r3, #47	; 0x2f
   13c88:	bne	13ca4 <close_stdout@@Base+0x1088>
   13c8c:	add	r2, r0, #1
   13c90:	mov	r0, r2
   13c94:	add	r2, r2, #1
   13c98:	ldrb	r3, [r0]
   13c9c:	cmp	r3, #47	; 0x2f
   13ca0:	beq	13c90 <close_stdout@@Base+0x1074>
   13ca4:	cmp	r3, #0
   13ca8:	bxeq	lr
   13cac:	mov	r2, r0
   13cb0:	mov	r1, #0
   13cb4:	cmp	r3, #47	; 0x2f
   13cb8:	moveq	r1, #1
   13cbc:	beq	13ccc <close_stdout@@Base+0x10b0>
   13cc0:	cmp	r1, #0
   13cc4:	movne	r0, r2
   13cc8:	movne	r1, #0
   13ccc:	ldrb	r3, [r2, #1]!
   13cd0:	cmp	r3, #0
   13cd4:	bne	13cb4 <close_stdout@@Base+0x1098>
   13cd8:	bx	lr
   13cdc:	push	{r4, lr}
   13ce0:	mov	r4, r0
   13ce4:	bl	11224 <strlen@plt>
   13ce8:	cmp	r0, #1
   13cec:	popls	{r4, pc}
   13cf0:	sub	r3, r0, #1
   13cf4:	ldrb	r2, [r4, r3]
   13cf8:	cmp	r2, #47	; 0x2f
   13cfc:	popne	{r4, pc}
   13d00:	mov	r0, r3
   13d04:	cmp	r0, #1
   13d08:	sub	r3, r3, #1
   13d0c:	beq	13d20 <close_stdout@@Base+0x1104>
   13d10:	ldrb	r2, [r4, r3]
   13d14:	cmp	r2, #47	; 0x2f
   13d18:	popne	{r4, pc}
   13d1c:	b	13d00 <close_stdout@@Base+0x10e4>
   13d20:	pop	{r4, pc}
   13d24:	b	110bc <posix_fadvise64@plt>
   13d28:	cmp	r0, #0
   13d2c:	push	{r4, r5, r6, lr}
   13d30:	mov	r6, r1
   13d34:	sub	sp, sp, #16
   13d38:	beq	13d5c <close_stdout@@Base+0x1140>
   13d3c:	mov	r4, #0
   13d40:	mov	r5, #0
   13d44:	bl	1129c <fileno@plt>
   13d48:	str	r6, [sp, #8]
   13d4c:	mov	r2, r4
   13d50:	mov	r3, r5
   13d54:	strd	r4, [sp]
   13d58:	bl	13d24 <close_stdout@@Base+0x1108>
   13d5c:	add	sp, sp, #16
   13d60:	pop	{r4, r5, r6, pc}
   13d64:	push	{r4, r5, r6, lr}
   13d68:	mov	r5, r1
   13d6c:	bl	11308 <fopen64@plt>
   13d70:	subs	r4, r0, #0
   13d74:	beq	13d84 <close_stdout@@Base+0x1168>
   13d78:	bl	1129c <fileno@plt>
   13d7c:	cmp	r0, #2
   13d80:	bls	13d8c <close_stdout@@Base+0x1170>
   13d84:	mov	r0, r4
   13d88:	pop	{r4, r5, r6, pc}
   13d8c:	bl	1565c <close_stdout@@Base+0x2a40>
   13d90:	subs	r6, r0, #0
   13d94:	blt	13dc0 <close_stdout@@Base+0x11a4>
   13d98:	mov	r0, r4
   13d9c:	bl	15e74 <close_stdout@@Base+0x3258>
   13da0:	cmp	r0, #0
   13da4:	bne	13de0 <close_stdout@@Base+0x11c4>
   13da8:	mov	r1, r5
   13dac:	mov	r0, r6
   13db0:	bl	11074 <fdopen@plt>
   13db4:	cmp	r0, #0
   13db8:	beq	13de0 <close_stdout@@Base+0x11c4>
   13dbc:	pop	{r4, r5, r6, pc}
   13dc0:	bl	11254 <__errno_location@plt>
   13dc4:	ldr	r6, [r0]
   13dc8:	mov	r5, r0
   13dcc:	mov	r0, r4
   13dd0:	bl	15e74 <close_stdout@@Base+0x3258>
   13dd4:	mov	r0, #0
   13dd8:	str	r6, [r5]
   13ddc:	pop	{r4, r5, r6, pc}
   13de0:	bl	11254 <__errno_location@plt>
   13de4:	ldr	r5, [r0]
   13de8:	mov	r4, r0
   13dec:	mov	r0, r6
   13df0:	bl	11344 <close@plt>
   13df4:	mov	r0, #0
   13df8:	str	r5, [r4]
   13dfc:	pop	{r4, r5, r6, pc}
   13e00:	push	{r3, r4, r5, r6, r7, lr}
   13e04:	subs	r4, r0, #0
   13e08:	ldr	r5, [pc, #172]	; 13ebc <close_stdout@@Base+0x12a0>
   13e0c:	add	r5, pc, r5
   13e10:	beq	13e98 <close_stdout@@Base+0x127c>
   13e14:	mov	r1, #47	; 0x2f
   13e18:	bl	112f0 <strrchr@plt>
   13e1c:	subs	r6, r0, #0
   13e20:	beq	13e7c <close_stdout@@Base+0x1260>
   13e24:	add	r7, r6, #1
   13e28:	rsb	r3, r4, r7
   13e2c:	cmp	r3, #6
   13e30:	ble	13e7c <close_stdout@@Base+0x1260>
   13e34:	ldr	r1, [pc, #132]	; 13ec0 <close_stdout@@Base+0x12a4>
   13e38:	sub	r0, r6, #6
   13e3c:	mov	r2, #7
   13e40:	add	r1, pc, r1
   13e44:	bl	1132c <strncmp@plt>
   13e48:	cmp	r0, #0
   13e4c:	bne	13e7c <close_stdout@@Base+0x1260>
   13e50:	ldr	r1, [pc, #108]	; 13ec4 <close_stdout@@Base+0x12a8>
   13e54:	mov	r0, r7
   13e58:	mov	r2, #3
   13e5c:	add	r1, pc, r1
   13e60:	bl	1132c <strncmp@plt>
   13e64:	cmp	r0, #0
   13e68:	movne	r4, r7
   13e6c:	ldreq	r3, [pc, #84]	; 13ec8 <close_stdout@@Base+0x12ac>
   13e70:	addeq	r4, r6, #4
   13e74:	ldreq	r3, [r5, r3]
   13e78:	streq	r4, [r3]
   13e7c:	ldr	r2, [pc, #72]	; 13ecc <close_stdout@@Base+0x12b0>
   13e80:	ldr	r3, [pc, #72]	; 13ed0 <close_stdout@@Base+0x12b4>
   13e84:	ldr	r2, [r5, r2]
   13e88:	str	r4, [r2]
   13e8c:	ldr	r3, [r5, r3]
   13e90:	str	r4, [r3]
   13e94:	pop	{r3, r4, r5, r6, r7, pc}
   13e98:	ldr	r3, [pc, #52]	; 13ed4 <close_stdout@@Base+0x12b8>
   13e9c:	mov	r1, #1
   13ea0:	ldr	r0, [pc, #48]	; 13ed8 <close_stdout@@Base+0x12bc>
   13ea4:	mov	r2, #55	; 0x37
   13ea8:	ldr	r3, [r5, r3]
   13eac:	add	r0, pc, r0
   13eb0:	ldr	r3, [r3]
   13eb4:	bl	11158 <fwrite@plt>
   13eb8:	bl	11338 <abort@plt>
   13ebc:	andeq	r5, r1, ip, ror #3
   13ec0:			; <UNDEFINED> instruction: 0x00003eb4
   13ec4:	andeq	r3, r0, r0, lsr #29
   13ec8:	andeq	r0, r0, ip, lsr r1
   13ecc:	andeq	r0, r0, r4, lsr r1
   13ed0:	andeq	r0, r0, r0, lsr r1
   13ed4:	andeq	r0, r0, r4, lsl r1
   13ed8:	andeq	r3, r0, r0, lsl lr
   13edc:	push	{r3, lr}
   13ee0:	mov	r3, r0
   13ee4:	mov	r2, #0
   13ee8:	cmp	r1, #8
   13eec:	str	r2, [r3], #4
   13ef0:	add	r3, r3, #4
   13ef4:	str	r2, [r0, #4]
   13ef8:	str	r2, [r3], #4
   13efc:	str	r2, [r3], #4
   13f00:	str	r2, [r3], #4
   13f04:	str	r2, [r3], #4
   13f08:	str	r2, [r3], #4
   13f0c:	str	r2, [r3], #4
   13f10:	str	r2, [r3], #4
   13f14:	str	r2, [r3], #4
   13f18:	str	r2, [r3], #4
   13f1c:	str	r2, [r3]
   13f20:	beq	13f2c <close_stdout@@Base+0x1310>
   13f24:	str	r1, [r0]
   13f28:	pop	{r3, pc}
   13f2c:	bl	11338 <abort@plt>
   13f30:	push	{r4, r5, r6, lr}
   13f34:	mov	r4, r0
   13f38:	mov	r6, r1
   13f3c:	mov	r0, #0
   13f40:	mov	r1, r4
   13f44:	mov	r2, #5
   13f48:	bl	1111c <dcgettext@plt>
   13f4c:	cmp	r0, r4
   13f50:	mov	r5, r0
   13f54:	beq	13f5c <close_stdout@@Base+0x1340>
   13f58:	pop	{r4, r5, r6, pc}
   13f5c:	bl	16210 <close_stdout@@Base+0x35f4>
   13f60:	ldrb	r3, [r0]
   13f64:	bic	r3, r3, #32
   13f68:	cmp	r3, #85	; 0x55
   13f6c:	bne	13fe0 <close_stdout@@Base+0x13c4>
   13f70:	ldrb	r3, [r0, #1]
   13f74:	bic	r3, r3, #32
   13f78:	cmp	r3, #84	; 0x54
   13f7c:	bne	13fcc <close_stdout@@Base+0x13b0>
   13f80:	ldrb	r3, [r0, #2]
   13f84:	bic	r3, r3, #32
   13f88:	cmp	r3, #70	; 0x46
   13f8c:	bne	13fcc <close_stdout@@Base+0x13b0>
   13f90:	ldrb	r3, [r0, #3]
   13f94:	cmp	r3, #45	; 0x2d
   13f98:	bne	13fcc <close_stdout@@Base+0x13b0>
   13f9c:	ldrb	r3, [r0, #4]
   13fa0:	cmp	r3, #56	; 0x38
   13fa4:	bne	13fcc <close_stdout@@Base+0x13b0>
   13fa8:	ldrb	r3, [r0, #5]
   13fac:	cmp	r3, #0
   13fb0:	bne	13fcc <close_stdout@@Base+0x13b0>
   13fb4:	ldrb	r3, [r5]
   13fb8:	cmp	r3, #96	; 0x60
   13fbc:	beq	14058 <close_stdout@@Base+0x143c>
   13fc0:	ldr	r0, [pc, #180]	; 1407c <close_stdout@@Base+0x1460>
   13fc4:	add	r0, pc, r0
   13fc8:	pop	{r4, r5, r6, pc}
   13fcc:	cmp	r6, #7
   13fd0:	beq	14064 <close_stdout@@Base+0x1448>
   13fd4:	ldr	r0, [pc, #164]	; 14080 <close_stdout@@Base+0x1464>
   13fd8:	add	r0, pc, r0
   13fdc:	pop	{r4, r5, r6, pc}
   13fe0:	cmp	r3, #71	; 0x47
   13fe4:	bne	13fcc <close_stdout@@Base+0x13b0>
   13fe8:	ldrb	r3, [r0, #1]
   13fec:	bic	r3, r3, #32
   13ff0:	cmp	r3, #66	; 0x42
   13ff4:	bne	13fcc <close_stdout@@Base+0x13b0>
   13ff8:	ldrb	r3, [r0, #2]
   13ffc:	cmp	r3, #49	; 0x31
   14000:	bne	13fcc <close_stdout@@Base+0x13b0>
   14004:	ldrb	r3, [r0, #3]
   14008:	cmp	r3, #56	; 0x38
   1400c:	bne	13fcc <close_stdout@@Base+0x13b0>
   14010:	ldrb	r3, [r0, #4]
   14014:	cmp	r3, #48	; 0x30
   14018:	bne	13fcc <close_stdout@@Base+0x13b0>
   1401c:	ldrb	r3, [r0, #5]
   14020:	cmp	r3, #51	; 0x33
   14024:	bne	13fcc <close_stdout@@Base+0x13b0>
   14028:	ldrb	r3, [r0, #6]
   1402c:	cmp	r3, #48	; 0x30
   14030:	bne	13fcc <close_stdout@@Base+0x13b0>
   14034:	ldrb	r3, [r0, #7]
   14038:	cmp	r3, #0
   1403c:	bne	13fcc <close_stdout@@Base+0x13b0>
   14040:	ldrb	r3, [r5]
   14044:	cmp	r3, #96	; 0x60
   14048:	beq	14070 <close_stdout@@Base+0x1454>
   1404c:	ldr	r0, [pc, #48]	; 14084 <close_stdout@@Base+0x1468>
   14050:	add	r0, pc, r0
   14054:	pop	{r4, r5, r6, pc}
   14058:	ldr	r0, [pc, #40]	; 14088 <close_stdout@@Base+0x146c>
   1405c:	add	r0, pc, r0
   14060:	pop	{r4, r5, r6, pc}
   14064:	ldr	r0, [pc, #32]	; 1408c <close_stdout@@Base+0x1470>
   14068:	add	r0, pc, r0
   1406c:	pop	{r4, r5, r6, pc}
   14070:	ldr	r0, [pc, #24]	; 14090 <close_stdout@@Base+0x1474>
   14074:	add	r0, pc, r0
   14078:	pop	{r4, r5, r6, pc}
   1407c:	andeq	r3, r0, ip, asr sp
   14080:	andeq	r3, r0, r0, asr sp
   14084:	ldrdeq	r3, [r0], -r4
   14088:	ldrdeq	r3, [r0], -r8
   1408c:	andeq	r3, r0, r4, asr #25
   14090:			; <UNDEFINED> instruction: 0x00003cbc
   14094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14098:	sub	sp, sp, #124	; 0x7c
   1409c:	ldr	ip, [pc, #3304]	; 14d8c <close_stdout@@Base+0x2170>
   140a0:	mov	sl, r1
   140a4:	str	r0, [sp, #40]	; 0x28
   140a8:	mov	r8, r3
   140ac:	ldr	r0, [pc, #3292]	; 14d90 <close_stdout@@Base+0x2174>
   140b0:	add	ip, pc, ip
   140b4:	str	r2, [sp, #32]
   140b8:	ldr	r1, [sp, #164]	; 0xa4
   140bc:	mov	r3, ip
   140c0:	ldr	r0, [ip, r0]
   140c4:	ldr	r2, [sp, #172]	; 0xac
   140c8:	ubfx	r1, r1, #1, #1
   140cc:	str	r1, [sp, #36]	; 0x24
   140d0:	str	r0, [sp, #56]	; 0x38
   140d4:	ldr	r0, [sp, #168]	; 0xa8
   140d8:	ldr	r1, [sp, #176]	; 0xb0
   140dc:	str	r2, [sp, #72]	; 0x48
   140e0:	str	r0, [sp, #48]	; 0x30
   140e4:	ldr	r0, [sp, #56]	; 0x38
   140e8:	str	r1, [sp, #68]	; 0x44
   140ec:	ldr	r3, [r0]
   140f0:	str	r3, [sp, #116]	; 0x74
   140f4:	bl	11170 <__ctype_get_mb_cur_max@plt>
   140f8:	ldr	r2, [sp, #160]	; 0xa0
   140fc:	str	r0, [sp, #64]	; 0x40
   14100:	cmp	r2, #8
   14104:	addls	pc, pc, r2, lsl #2
   14108:	b	14c68 <close_stdout@@Base+0x204c>
   1410c:	b	14130 <close_stdout@@Base+0x1514>
   14110:	b	14980 <close_stdout@@Base+0x1d64>
   14114:	b	149b0 <close_stdout@@Base+0x1d94>
   14118:	b	14860 <close_stdout@@Base+0x1c44>
   1411c:	b	148a0 <close_stdout@@Base+0x1c84>
   14120:	b	148cc <close_stdout@@Base+0x1cb0>
   14124:	b	148ec <close_stdout@@Base+0x1cd0>
   14128:	b	148ec <close_stdout@@Base+0x1cd0>
   1412c:	b	148ec <close_stdout@@Base+0x1cd0>
   14130:	mov	r2, #0
   14134:	str	r2, [sp, #36]	; 0x24
   14138:	mov	r9, r2
   1413c:	str	r2, [sp, #24]
   14140:	str	r2, [sp, #28]
   14144:	str	r2, [sp, #52]	; 0x34
   14148:	ldr	r0, [sp, #36]	; 0x24
   1414c:	mov	fp, #0
   14150:	ldr	r1, [sp, #24]
   14154:	eor	r2, r0, #1
   14158:	eor	r3, r1, #1
   1415c:	and	r3, r2, r3
   14160:	and	r2, r1, r0
   14164:	str	r3, [sp, #44]	; 0x2c
   14168:	str	r2, [sp, #76]	; 0x4c
   1416c:	cmn	r8, #1
   14170:	beq	144f0 <close_stdout@@Base+0x18d4>
   14174:	subs	r3, fp, r8
   14178:	movne	r3, #1
   1417c:	cmp	r3, #0
   14180:	beq	14508 <close_stdout@@Base+0x18ec>
   14184:	ldr	r3, [sp, #28]
   14188:	ldr	r0, [sp, #24]
   1418c:	adds	r7, r3, #0
   14190:	movne	r7, #1
   14194:	ands	r6, r7, r0
   14198:	bne	149f4 <close_stdout@@Base+0x1dd8>
   1419c:	ldr	r1, [sp, #32]
   141a0:	add	r5, r1, fp
   141a4:	ldrb	r4, [r5]
   141a8:	cmp	r4, #126	; 0x7e
   141ac:	addls	pc, pc, r4, lsl #2
   141b0:	b	14774 <close_stdout@@Base+0x1b58>
   141b4:	b	14680 <close_stdout@@Base+0x1a64>
   141b8:	b	14774 <close_stdout@@Base+0x1b58>
   141bc:	b	14774 <close_stdout@@Base+0x1b58>
   141c0:	b	14774 <close_stdout@@Base+0x1b58>
   141c4:	b	14774 <close_stdout@@Base+0x1b58>
   141c8:	b	14774 <close_stdout@@Base+0x1b58>
   141cc:	b	14774 <close_stdout@@Base+0x1b58>
   141d0:	b	14668 <close_stdout@@Base+0x1a4c>
   141d4:	b	14650 <close_stdout@@Base+0x1a34>
   141d8:	b	14678 <close_stdout@@Base+0x1a5c>
   141dc:	b	14670 <close_stdout@@Base+0x1a54>
   141e0:	b	14660 <close_stdout@@Base+0x1a44>
   141e4:	b	14658 <close_stdout@@Base+0x1a3c>
   141e8:	b	1461c <close_stdout@@Base+0x1a00>
   141ec:	b	14774 <close_stdout@@Base+0x1b58>
   141f0:	b	14774 <close_stdout@@Base+0x1b58>
   141f4:	b	14774 <close_stdout@@Base+0x1b58>
   141f8:	b	14774 <close_stdout@@Base+0x1b58>
   141fc:	b	14774 <close_stdout@@Base+0x1b58>
   14200:	b	14774 <close_stdout@@Base+0x1b58>
   14204:	b	14774 <close_stdout@@Base+0x1b58>
   14208:	b	14774 <close_stdout@@Base+0x1b58>
   1420c:	b	14774 <close_stdout@@Base+0x1b58>
   14210:	b	14774 <close_stdout@@Base+0x1b58>
   14214:	b	14774 <close_stdout@@Base+0x1b58>
   14218:	b	14774 <close_stdout@@Base+0x1b58>
   1421c:	b	14774 <close_stdout@@Base+0x1b58>
   14220:	b	14774 <close_stdout@@Base+0x1b58>
   14224:	b	14774 <close_stdout@@Base+0x1b58>
   14228:	b	14774 <close_stdout@@Base+0x1b58>
   1422c:	b	14774 <close_stdout@@Base+0x1b58>
   14230:	b	14774 <close_stdout@@Base+0x1b58>
   14234:	b	145a8 <close_stdout@@Base+0x198c>
   14238:	b	145a8 <close_stdout@@Base+0x198c>
   1423c:	b	145a8 <close_stdout@@Base+0x198c>
   14240:	b	145a0 <close_stdout@@Base+0x1984>
   14244:	b	145a8 <close_stdout@@Base+0x198c>
   14248:	b	1447c <close_stdout@@Base+0x1860>
   1424c:	b	145a8 <close_stdout@@Base+0x198c>
   14250:	b	1471c <close_stdout@@Base+0x1b00>
   14254:	b	145a8 <close_stdout@@Base+0x198c>
   14258:	b	145a8 <close_stdout@@Base+0x198c>
   1425c:	b	145a8 <close_stdout@@Base+0x198c>
   14260:	b	1447c <close_stdout@@Base+0x1860>
   14264:	b	1447c <close_stdout@@Base+0x1860>
   14268:	b	1447c <close_stdout@@Base+0x1860>
   1426c:	b	1447c <close_stdout@@Base+0x1860>
   14270:	b	1447c <close_stdout@@Base+0x1860>
   14274:	b	1447c <close_stdout@@Base+0x1860>
   14278:	b	1447c <close_stdout@@Base+0x1860>
   1427c:	b	1447c <close_stdout@@Base+0x1860>
   14280:	b	1447c <close_stdout@@Base+0x1860>
   14284:	b	1447c <close_stdout@@Base+0x1860>
   14288:	b	1447c <close_stdout@@Base+0x1860>
   1428c:	b	1447c <close_stdout@@Base+0x1860>
   14290:	b	1447c <close_stdout@@Base+0x1860>
   14294:	b	1447c <close_stdout@@Base+0x1860>
   14298:	b	1447c <close_stdout@@Base+0x1860>
   1429c:	b	1447c <close_stdout@@Base+0x1860>
   142a0:	b	145a8 <close_stdout@@Base+0x198c>
   142a4:	b	145a8 <close_stdout@@Base+0x198c>
   142a8:	b	145a8 <close_stdout@@Base+0x198c>
   142ac:	b	145a8 <close_stdout@@Base+0x198c>
   142b0:	b	143b0 <close_stdout@@Base+0x1794>
   142b4:	b	14774 <close_stdout@@Base+0x1b58>
   142b8:	b	1447c <close_stdout@@Base+0x1860>
   142bc:	b	1447c <close_stdout@@Base+0x1860>
   142c0:	b	1447c <close_stdout@@Base+0x1860>
   142c4:	b	1447c <close_stdout@@Base+0x1860>
   142c8:	b	1447c <close_stdout@@Base+0x1860>
   142cc:	b	1447c <close_stdout@@Base+0x1860>
   142d0:	b	1447c <close_stdout@@Base+0x1860>
   142d4:	b	1447c <close_stdout@@Base+0x1860>
   142d8:	b	1447c <close_stdout@@Base+0x1860>
   142dc:	b	1447c <close_stdout@@Base+0x1860>
   142e0:	b	1447c <close_stdout@@Base+0x1860>
   142e4:	b	1447c <close_stdout@@Base+0x1860>
   142e8:	b	1447c <close_stdout@@Base+0x1860>
   142ec:	b	1447c <close_stdout@@Base+0x1860>
   142f0:	b	1447c <close_stdout@@Base+0x1860>
   142f4:	b	1447c <close_stdout@@Base+0x1860>
   142f8:	b	1447c <close_stdout@@Base+0x1860>
   142fc:	b	1447c <close_stdout@@Base+0x1860>
   14300:	b	1447c <close_stdout@@Base+0x1860>
   14304:	b	1447c <close_stdout@@Base+0x1860>
   14308:	b	1447c <close_stdout@@Base+0x1860>
   1430c:	b	1447c <close_stdout@@Base+0x1860>
   14310:	b	1447c <close_stdout@@Base+0x1860>
   14314:	b	1447c <close_stdout@@Base+0x1860>
   14318:	b	1447c <close_stdout@@Base+0x1860>
   1431c:	b	1447c <close_stdout@@Base+0x1860>
   14320:	b	145a8 <close_stdout@@Base+0x198c>
   14324:	b	14700 <close_stdout@@Base+0x1ae4>
   14328:	b	1447c <close_stdout@@Base+0x1860>
   1432c:	b	145a8 <close_stdout@@Base+0x198c>
   14330:	b	1447c <close_stdout@@Base+0x1860>
   14334:	b	145a8 <close_stdout@@Base+0x198c>
   14338:	b	1447c <close_stdout@@Base+0x1860>
   1433c:	b	1447c <close_stdout@@Base+0x1860>
   14340:	b	1447c <close_stdout@@Base+0x1860>
   14344:	b	1447c <close_stdout@@Base+0x1860>
   14348:	b	1447c <close_stdout@@Base+0x1860>
   1434c:	b	1447c <close_stdout@@Base+0x1860>
   14350:	b	1447c <close_stdout@@Base+0x1860>
   14354:	b	1447c <close_stdout@@Base+0x1860>
   14358:	b	1447c <close_stdout@@Base+0x1860>
   1435c:	b	1447c <close_stdout@@Base+0x1860>
   14360:	b	1447c <close_stdout@@Base+0x1860>
   14364:	b	1447c <close_stdout@@Base+0x1860>
   14368:	b	1447c <close_stdout@@Base+0x1860>
   1436c:	b	1447c <close_stdout@@Base+0x1860>
   14370:	b	1447c <close_stdout@@Base+0x1860>
   14374:	b	1447c <close_stdout@@Base+0x1860>
   14378:	b	1447c <close_stdout@@Base+0x1860>
   1437c:	b	1447c <close_stdout@@Base+0x1860>
   14380:	b	1447c <close_stdout@@Base+0x1860>
   14384:	b	1447c <close_stdout@@Base+0x1860>
   14388:	b	1447c <close_stdout@@Base+0x1860>
   1438c:	b	1447c <close_stdout@@Base+0x1860>
   14390:	b	1447c <close_stdout@@Base+0x1860>
   14394:	b	1447c <close_stdout@@Base+0x1860>
   14398:	b	1447c <close_stdout@@Base+0x1860>
   1439c:	b	1447c <close_stdout@@Base+0x1860>
   143a0:	b	14588 <close_stdout@@Base+0x196c>
   143a4:	b	145a8 <close_stdout@@Base+0x198c>
   143a8:	b	14588 <close_stdout@@Base+0x196c>
   143ac:	b	145a0 <close_stdout@@Base+0x1984>
   143b0:	ldr	r3, [sp, #160]	; 0xa0
   143b4:	cmp	r3, #2
   143b8:	beq	14c44 <close_stdout@@Base+0x2028>
   143bc:	cmp	r3, #3
   143c0:	bne	1447c <close_stdout@@Base+0x1860>
   143c4:	ldr	r1, [sp, #164]	; 0xa4
   143c8:	tst	r1, #4
   143cc:	beq	1447c <close_stdout@@Base+0x1860>
   143d0:	add	r3, fp, #2
   143d4:	cmp	r8, r3
   143d8:	bls	1447c <close_stdout@@Base+0x1860>
   143dc:	ldrb	r2, [r5, #1]
   143e0:	mov	r1, #1
   143e4:	cmp	r2, #63	; 0x3f
   143e8:	bne	1447c <close_stdout@@Base+0x1860>
   143ec:	ldr	r0, [sp, #32]
   143f0:	ldrb	ip, [r0, r3]
   143f4:	sub	r0, ip, #33	; 0x21
   143f8:	uxtb	r0, r0
   143fc:	cmp	r0, #29
   14400:	bhi	1447c <close_stdout@@Base+0x1860>
   14404:	lsl	r1, r1, r0
   14408:	movw	r0, #20929	; 0x51c1
   1440c:	movt	r0, #14336	; 0x3800
   14410:	and	r0, r1, r0
   14414:	cmp	r0, #0
   14418:	beq	1447c <close_stdout@@Base+0x1860>
   1441c:	ldr	r1, [sp, #36]	; 0x24
   14420:	cmp	r1, #0
   14424:	bne	145c4 <close_stdout@@Base+0x19a8>
   14428:	cmp	r9, sl
   1442c:	mov	r4, ip
   14430:	mov	fp, r3
   14434:	ldrcc	r0, [sp, #40]	; 0x28
   14438:	strbcc	r2, [r0, r9]
   1443c:	add	r2, r9, #1
   14440:	cmp	sl, r2
   14444:	ldrhi	r0, [sp, #40]	; 0x28
   14448:	movhi	r1, #34	; 0x22
   1444c:	strbhi	r1, [r0, r2]
   14450:	add	r2, r9, #2
   14454:	cmp	sl, r2
   14458:	ldrhi	r0, [sp, #40]	; 0x28
   1445c:	movhi	r1, #34	; 0x22
   14460:	strbhi	r1, [r0, r2]
   14464:	add	r2, r9, #3
   14468:	cmp	sl, r2
   1446c:	add	r9, r9, #4
   14470:	ldrhi	r0, [sp, #40]	; 0x28
   14474:	movhi	r1, #63	; 0x3f
   14478:	strbhi	r1, [r0, r2]
   1447c:	ldr	r0, [sp, #44]	; 0x2c
   14480:	cmp	r0, #0
   14484:	bne	144ac <close_stdout@@Base+0x1890>
   14488:	ldr	r1, [sp, #48]	; 0x30
   1448c:	cmp	r1, #0
   14490:	beq	144ac <close_stdout@@Base+0x1890>
   14494:	ubfx	r2, r4, #5, #8
   14498:	and	r3, r4, #31
   1449c:	ldr	r2, [r1, r2, lsl #2]
   144a0:	lsr	r3, r2, r3
   144a4:	tst	r3, #1
   144a8:	bne	144b4 <close_stdout@@Base+0x1898>
   144ac:	cmp	r6, #0
   144b0:	beq	144d4 <close_stdout@@Base+0x18b8>
   144b4:	ldr	r2, [sp, #36]	; 0x24
   144b8:	cmp	r2, #0
   144bc:	bne	145c4 <close_stdout@@Base+0x19a8>
   144c0:	cmp	r9, sl
   144c4:	ldrcc	r0, [sp, #40]	; 0x28
   144c8:	movcc	r3, #92	; 0x5c
   144cc:	strbcc	r3, [r0, r9]
   144d0:	add	r9, r9, #1
   144d4:	add	fp, fp, #1
   144d8:	cmp	r9, sl
   144dc:	ldrcc	r1, [sp, #40]	; 0x28
   144e0:	strbcc	r4, [r1, r9]
   144e4:	cmn	r8, #1
   144e8:	add	r9, r9, #1
   144ec:	bne	14174 <close_stdout@@Base+0x1558>
   144f0:	ldr	r2, [sp, #32]
   144f4:	ldrb	r3, [r2, fp]
   144f8:	adds	r3, r3, #0
   144fc:	movne	r3, #1
   14500:	cmp	r3, #0
   14504:	bne	14184 <close_stdout@@Base+0x1568>
   14508:	ldr	r3, [sp, #160]	; 0xa0
   1450c:	cmp	r9, #0
   14510:	cmpeq	r3, #2
   14514:	bne	14524 <close_stdout@@Base+0x1908>
   14518:	ldr	r0, [sp, #36]	; 0x24
   1451c:	cmp	r0, #0
   14520:	bne	145c4 <close_stdout@@Base+0x19a8>
   14524:	ldr	r1, [sp, #36]	; 0x24
   14528:	ldr	r2, [sp, #52]	; 0x34
   1452c:	eor	r3, r1, #1
   14530:	cmp	r2, #0
   14534:	moveq	r3, #0
   14538:	andne	r3, r3, #1
   1453c:	cmp	r3, #0
   14540:	beq	1456c <close_stdout@@Base+0x1950>
   14544:	ldrb	r3, [r2]
   14548:	cmp	r3, #0
   1454c:	beq	1456c <close_stdout@@Base+0x1950>
   14550:	ldr	r1, [sp, #40]	; 0x28
   14554:	cmp	sl, r9
   14558:	strbhi	r3, [r1, r9]
   1455c:	ldrb	r3, [r2, #1]!
   14560:	add	r9, r9, #1
   14564:	cmp	r3, #0
   14568:	bne	14554 <close_stdout@@Base+0x1938>
   1456c:	cmp	r9, sl
   14570:	movcs	r0, r9
   14574:	ldrcc	r1, [sp, #40]	; 0x28
   14578:	movcc	r3, #0
   1457c:	movcc	r0, r9
   14580:	strbcc	r3, [r1, r9]
   14584:	b	14600 <close_stdout@@Base+0x19e4>
   14588:	cmn	r8, #1
   1458c:	beq	14c54 <close_stdout@@Base+0x2038>
   14590:	subs	r3, r8, #1
   14594:	movne	r3, #1
   14598:	cmp	r3, #0
   1459c:	bne	1447c <close_stdout@@Base+0x1860>
   145a0:	cmp	fp, #0
   145a4:	bne	1447c <close_stdout@@Base+0x1860>
   145a8:	ldr	r3, [sp, #36]	; 0x24
   145ac:	ldr	r0, [sp, #160]	; 0xa0
   145b0:	cmp	r0, #2
   145b4:	movne	r3, #0
   145b8:	andeq	r3, r3, #1
   145bc:	cmp	r3, #0
   145c0:	beq	1447c <close_stdout@@Base+0x1860>
   145c4:	ldr	r2, [sp, #164]	; 0xa4
   145c8:	mov	ip, #0
   145cc:	ldr	r0, [sp, #160]	; 0xa0
   145d0:	bic	r3, r2, #2
   145d4:	ldr	r1, [sp, #72]	; 0x48
   145d8:	ldr	r2, [sp, #68]	; 0x44
   145dc:	stm	sp, {r0, r3}
   145e0:	mov	r3, r8
   145e4:	str	r1, [sp, #12]
   145e8:	mov	r1, sl
   145ec:	str	r2, [sp, #16]
   145f0:	ldr	r0, [sp, #40]	; 0x28
   145f4:	ldr	r2, [sp, #32]
   145f8:	str	ip, [sp, #8]
   145fc:	bl	14094 <close_stdout@@Base+0x1478>
   14600:	ldr	r1, [sp, #56]	; 0x38
   14604:	ldr	r2, [sp, #116]	; 0x74
   14608:	ldr	r3, [r1]
   1460c:	cmp	r2, r3
   14610:	bne	14d44 <close_stdout@@Base+0x2128>
   14614:	add	sp, sp, #124	; 0x7c
   14618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1461c:	mov	r3, #114	; 0x72
   14620:	ldr	r2, [sp, #36]	; 0x24
   14624:	ldr	r0, [sp, #160]	; 0xa0
   14628:	cmp	r0, #2
   1462c:	movne	r2, #0
   14630:	andeq	r2, r2, #1
   14634:	cmp	r2, #0
   14638:	bne	145c4 <close_stdout@@Base+0x19a8>
   1463c:	ldr	r1, [sp, #24]
   14640:	cmp	r1, #0
   14644:	beq	1447c <close_stdout@@Base+0x1860>
   14648:	mov	r4, r3
   1464c:	b	144b4 <close_stdout@@Base+0x1898>
   14650:	mov	r3, #98	; 0x62
   14654:	b	1463c <close_stdout@@Base+0x1a20>
   14658:	mov	r3, #102	; 0x66
   1465c:	b	1463c <close_stdout@@Base+0x1a20>
   14660:	mov	r3, #118	; 0x76
   14664:	b	1463c <close_stdout@@Base+0x1a20>
   14668:	mov	r3, #97	; 0x61
   1466c:	b	1463c <close_stdout@@Base+0x1a20>
   14670:	mov	r3, #110	; 0x6e
   14674:	b	14620 <close_stdout@@Base+0x1a04>
   14678:	mov	r3, #116	; 0x74
   1467c:	b	14620 <close_stdout@@Base+0x1a04>
   14680:	ldr	r2, [sp, #24]
   14684:	cmp	r2, #0
   14688:	beq	14c30 <close_stdout@@Base+0x2014>
   1468c:	ldr	r3, [sp, #36]	; 0x24
   14690:	cmp	r3, #0
   14694:	bne	145c4 <close_stdout@@Base+0x19a8>
   14698:	cmp	r9, sl
   1469c:	add	r2, r9, #1
   146a0:	ldrcc	r0, [sp, #40]	; 0x28
   146a4:	movcc	r3, #92	; 0x5c
   146a8:	strbcc	r3, [r0, r9]
   146ac:	add	r3, fp, #1
   146b0:	cmp	r8, r3
   146b4:	bls	146f4 <close_stdout@@Base+0x1ad8>
   146b8:	ldr	r1, [sp, #32]
   146bc:	ldrb	r3, [r1, r3]
   146c0:	sub	r3, r3, #48	; 0x30
   146c4:	cmp	r3, #9
   146c8:	bhi	146f4 <close_stdout@@Base+0x1ad8>
   146cc:	cmp	sl, r2
   146d0:	ldrhi	r0, [sp, #40]	; 0x28
   146d4:	movhi	r3, #48	; 0x30
   146d8:	strbhi	r3, [r0, r2]
   146dc:	add	r3, r9, #2
   146e0:	cmp	sl, r3
   146e4:	ldrhi	r1, [sp, #40]	; 0x28
   146e8:	movhi	r2, #48	; 0x30
   146ec:	strbhi	r2, [r1, r3]
   146f0:	add	r2, r9, #3
   146f4:	mov	r9, r2
   146f8:	mov	r4, #48	; 0x30
   146fc:	b	14488 <close_stdout@@Base+0x186c>
   14700:	ldr	r1, [sp, #76]	; 0x4c
   14704:	cmp	r1, #0
   14708:	beq	14714 <close_stdout@@Base+0x1af8>
   1470c:	cmp	r7, #0
   14710:	bne	144d4 <close_stdout@@Base+0x18b8>
   14714:	mov	r3, r4
   14718:	b	14620 <close_stdout@@Base+0x1a04>
   1471c:	ldr	r1, [sp, #160]	; 0xa0
   14720:	cmp	r1, #2
   14724:	bne	1447c <close_stdout@@Base+0x1860>
   14728:	ldr	r2, [sp, #36]	; 0x24
   1472c:	cmp	r2, #0
   14730:	bne	145c4 <close_stdout@@Base+0x19a8>
   14734:	cmp	r9, sl
   14738:	ldrcc	r0, [sp, #40]	; 0x28
   1473c:	movcc	r3, #39	; 0x27
   14740:	strbcc	r3, [r0, r9]
   14744:	add	r3, r9, #1
   14748:	cmp	sl, r3
   1474c:	ldrhi	r1, [sp, #40]	; 0x28
   14750:	movhi	r2, #92	; 0x5c
   14754:	strbhi	r2, [r1, r3]
   14758:	add	r3, r9, #2
   1475c:	cmp	sl, r3
   14760:	add	r9, r9, #3
   14764:	ldrhi	r0, [sp, #40]	; 0x28
   14768:	movhi	r2, #39	; 0x27
   1476c:	strbhi	r2, [r0, r3]
   14770:	b	1447c <close_stdout@@Base+0x1860>
   14774:	ldr	r1, [sp, #64]	; 0x40
   14778:	cmp	r1, #1
   1477c:	bne	14a74 <close_stdout@@Base+0x1e58>
   14780:	bl	1120c <__ctype_b_loc@plt>
   14784:	ldr	r2, [sp, #64]	; 0x40
   14788:	sxth	r3, r4
   1478c:	str	r2, [sp, #60]	; 0x3c
   14790:	lsl	r3, r3, #1
   14794:	ldr	r2, [r0]
   14798:	ldrh	r2, [r2, r3]
   1479c:	eor	r2, r2, #16384	; 0x4000
   147a0:	ubfx	r2, r2, #14, #1
   147a4:	ldr	r1, [sp, #24]
   147a8:	ands	r2, r2, r1
   147ac:	beq	1447c <close_stdout@@Base+0x1860>
   147b0:	ldr	r3, [sp, #60]	; 0x3c
   147b4:	mov	r0, #92	; 0x5c
   147b8:	ldr	r7, [sp, #36]	; 0x24
   147bc:	add	r1, r3, fp
   147c0:	str	r8, [sp, #60]	; 0x3c
   147c4:	ldr	r3, [sp, #40]	; 0x28
   147c8:	b	1482c <close_stdout@@Base+0x1c10>
   147cc:	cmp	r7, #0
   147d0:	bne	14c6c <close_stdout@@Base+0x2050>
   147d4:	add	ip, r9, #1
   147d8:	cmp	r9, sl
   147dc:	strbcc	r0, [r3, r9]
   147e0:	cmp	sl, ip
   147e4:	lsrhi	r8, r4, #6
   147e8:	addhi	r8, r8, #48	; 0x30
   147ec:	strbhi	r8, [r3, ip]
   147f0:	add	ip, r9, #2
   147f4:	add	r9, r9, #3
   147f8:	cmp	sl, ip
   147fc:	ubfxhi	r8, r4, #3, #3
   14800:	and	r4, r4, #7
   14804:	add	r4, r4, #48	; 0x30
   14808:	addhi	r8, r8, #48	; 0x30
   1480c:	strbhi	r8, [r3, ip]
   14810:	add	fp, fp, #1
   14814:	cmp	r1, fp
   14818:	bls	14858 <close_stdout@@Base+0x1c3c>
   1481c:	cmp	r9, sl
   14820:	strbcc	r4, [r3, r9]
   14824:	ldrb	r4, [r5, #1]!
   14828:	add	r9, r9, #1
   1482c:	cmp	r2, #0
   14830:	bne	147cc <close_stdout@@Base+0x1bb0>
   14834:	cmp	r6, #0
   14838:	beq	14810 <close_stdout@@Base+0x1bf4>
   1483c:	add	fp, fp, #1
   14840:	cmp	r9, sl
   14844:	strbcc	r0, [r3, r9]
   14848:	cmp	r1, fp
   1484c:	add	r9, r9, #1
   14850:	mov	r6, #0
   14854:	bhi	1481c <close_stdout@@Base+0x1c00>
   14858:	ldr	r8, [sp, #60]	; 0x3c
   1485c:	b	144d8 <close_stdout@@Base+0x18bc>
   14860:	ldr	r3, [sp, #36]	; 0x24
   14864:	cmp	r3, #0
   14868:	bne	14d6c <close_stdout@@Base+0x2150>
   1486c:	cmp	sl, #0
   14870:	beq	14c84 <close_stdout@@Base+0x2068>
   14874:	ldr	r1, [sp, #40]	; 0x28
   14878:	mov	r0, #1
   1487c:	ldr	r2, [pc, #1296]	; 14d94 <close_stdout@@Base+0x2178>
   14880:	mov	r3, #34	; 0x22
   14884:	str	r0, [sp, #24]
   14888:	mov	r9, r0
   1488c:	add	r2, pc, r2
   14890:	str	r0, [sp, #28]
   14894:	strb	r3, [r1]
   14898:	str	r2, [sp, #52]	; 0x34
   1489c:	b	14148 <close_stdout@@Base+0x152c>
   148a0:	ldr	r3, [pc, #1264]	; 14d98 <close_stdout@@Base+0x217c>
   148a4:	mov	r2, #1
   148a8:	mov	r0, #3
   148ac:	str	r2, [sp, #36]	; 0x24
   148b0:	add	r3, pc, r3
   148b4:	str	r2, [sp, #24]
   148b8:	str	r3, [sp, #52]	; 0x34
   148bc:	mov	r9, #0
   148c0:	str	r2, [sp, #28]
   148c4:	str	r0, [sp, #160]	; 0xa0
   148c8:	b	14148 <close_stdout@@Base+0x152c>
   148cc:	mov	r0, #0
   148d0:	mov	r1, #1
   148d4:	str	r0, [sp, #36]	; 0x24
   148d8:	mov	r9, r0
   148dc:	str	r1, [sp, #24]
   148e0:	str	r0, [sp, #28]
   148e4:	str	r0, [sp, #52]	; 0x34
   148e8:	b	14148 <close_stdout@@Base+0x152c>
   148ec:	ldr	r3, [sp, #160]	; 0xa0
   148f0:	cmp	r3, #8
   148f4:	beq	14920 <close_stdout@@Base+0x1d04>
   148f8:	ldr	r0, [pc, #1180]	; 14d9c <close_stdout@@Base+0x2180>
   148fc:	mov	r1, r3
   14900:	add	r0, pc, r0
   14904:	bl	13f30 <close_stdout@@Base+0x1314>
   14908:	ldr	r1, [sp, #160]	; 0xa0
   1490c:	str	r0, [sp, #72]	; 0x48
   14910:	ldr	r0, [pc, #1160]	; 14da0 <close_stdout@@Base+0x2184>
   14914:	add	r0, pc, r0
   14918:	bl	13f30 <close_stdout@@Base+0x1314>
   1491c:	str	r0, [sp, #68]	; 0x44
   14920:	ldr	r0, [sp, #36]	; 0x24
   14924:	cmp	r0, #0
   14928:	movne	r9, #0
   1492c:	bne	14964 <close_stdout@@Base+0x1d48>
   14930:	ldr	r1, [sp, #72]	; 0x48
   14934:	ldrb	r3, [r1]
   14938:	cmp	r3, #0
   1493c:	beq	14d3c <close_stdout@@Base+0x2120>
   14940:	mov	r2, r1
   14944:	ldr	r1, [sp, #40]	; 0x28
   14948:	mov	r9, r0
   1494c:	cmp	r9, sl
   14950:	strbcc	r3, [r1, r9]
   14954:	ldrb	r3, [r2, #1]!
   14958:	add	r9, r9, #1
   1495c:	cmp	r3, #0
   14960:	bne	1494c <close_stdout@@Base+0x1d30>
   14964:	ldr	r0, [sp, #68]	; 0x44
   14968:	str	r0, [sp, #52]	; 0x34
   1496c:	bl	11224 <strlen@plt>
   14970:	mov	r2, #1
   14974:	str	r2, [sp, #24]
   14978:	str	r0, [sp, #28]
   1497c:	b	14148 <close_stdout@@Base+0x152c>
   14980:	ldr	r3, [pc, #1052]	; 14da4 <close_stdout@@Base+0x2188>
   14984:	mov	r2, #0
   14988:	mov	r1, #1
   1498c:	mov	r0, #2
   14990:	add	r3, pc, r3
   14994:	str	r1, [sp, #36]	; 0x24
   14998:	str	r2, [sp, #24]
   1499c:	mov	r9, r2
   149a0:	str	r1, [sp, #28]
   149a4:	str	r3, [sp, #52]	; 0x34
   149a8:	str	r0, [sp, #160]	; 0xa0
   149ac:	b	14148 <close_stdout@@Base+0x152c>
   149b0:	ldr	r3, [sp, #36]	; 0x24
   149b4:	cmp	r3, #0
   149b8:	bne	14d48 <close_stdout@@Base+0x212c>
   149bc:	cmp	sl, #0
   149c0:	beq	14ca4 <close_stdout@@Base+0x2088>
   149c4:	ldr	r1, [sp, #40]	; 0x28
   149c8:	mov	r3, #39	; 0x27
   149cc:	ldr	r2, [sp, #36]	; 0x24
   149d0:	mov	r0, #1
   149d4:	mov	r9, r0
   149d8:	str	r0, [sp, #28]
   149dc:	strb	r3, [r1]
   149e0:	ldr	r3, [pc, #960]	; 14da8 <close_stdout@@Base+0x218c>
   149e4:	str	r2, [sp, #24]
   149e8:	add	r3, pc, r3
   149ec:	str	r3, [sp, #52]	; 0x34
   149f0:	b	14148 <close_stdout@@Base+0x152c>
   149f4:	ldr	r2, [sp, #28]
   149f8:	cmp	r2, #1
   149fc:	add	r4, fp, r2
   14a00:	movls	r3, #0
   14a04:	movhi	r3, #1
   14a08:	cmn	r8, #1
   14a0c:	movne	r3, #0
   14a10:	cmp	r3, #0
   14a14:	beq	14a24 <close_stdout@@Base+0x1e08>
   14a18:	ldr	r0, [sp, #32]
   14a1c:	bl	11224 <strlen@plt>
   14a20:	mov	r8, r0
   14a24:	cmp	r8, r4
   14a28:	ldrcc	r3, [sp, #32]
   14a2c:	movcc	r6, #0
   14a30:	addcc	r5, r3, fp
   14a34:	bcc	141a4 <close_stdout@@Base+0x1588>
   14a38:	ldr	r0, [sp, #32]
   14a3c:	ldr	r1, [sp, #52]	; 0x34
   14a40:	add	r5, r0, fp
   14a44:	ldr	r2, [sp, #28]
   14a48:	mov	r0, r5
   14a4c:	bl	11110 <memcmp@plt>
   14a50:	cmp	r0, #0
   14a54:	bne	14a6c <close_stdout@@Base+0x1e50>
   14a58:	ldr	r1, [sp, #36]	; 0x24
   14a5c:	cmp	r1, #0
   14a60:	bne	145c4 <close_stdout@@Base+0x19a8>
   14a64:	mov	r6, #1
   14a68:	b	141a4 <close_stdout@@Base+0x1588>
   14a6c:	mov	r6, #0
   14a70:	b	141a4 <close_stdout@@Base+0x1588>
   14a74:	add	r7, sp, #108	; 0x6c
   14a78:	cmn	r8, #1
   14a7c:	mov	r3, #0
   14a80:	str	r3, [sp, #108]	; 0x6c
   14a84:	str	r3, [r7, #4]
   14a88:	beq	14c74 <close_stdout@@Base+0x2058>
   14a8c:	mov	r1, #0
   14a90:	ldr	r0, [sp, #32]
   14a94:	mov	ip, #1
   14a98:	str	r9, [sp, #88]	; 0x58
   14a9c:	str	r6, [sp, #96]	; 0x60
   14aa0:	mov	r9, r1
   14aa4:	str	r5, [sp, #100]	; 0x64
   14aa8:	mov	r6, ip
   14aac:	mov	r5, r7
   14ab0:	add	r3, sp, #104	; 0x68
   14ab4:	sub	r0, r0, #1
   14ab8:	str	r3, [sp, #80]	; 0x50
   14abc:	str	r0, [sp, #84]	; 0x54
   14ac0:	str	r1, [sp, #60]	; 0x3c
   14ac4:	str	r4, [sp, #92]	; 0x5c
   14ac8:	ldr	r2, [sp, #32]
   14acc:	add	r7, r9, fp
   14ad0:	add	r0, sp, #104	; 0x68
   14ad4:	mov	r3, r5
   14ad8:	add	r4, r2, r7
   14adc:	rsb	r2, r7, r8
   14ae0:	mov	r1, r4
   14ae4:	bl	11194 <mbrtowc@plt>
   14ae8:	subs	r2, r0, #0
   14aec:	beq	14bf8 <close_stdout@@Base+0x1fdc>
   14af0:	cmn	r2, #1
   14af4:	beq	14d20 <close_stdout@@Base+0x2104>
   14af8:	cmn	r2, #2
   14afc:	beq	14cc4 <close_stdout@@Base+0x20a8>
   14b00:	ldr	r3, [sp, #36]	; 0x24
   14b04:	ldr	r0, [sp, #160]	; 0xa0
   14b08:	cmp	r0, #2
   14b0c:	movne	r3, #0
   14b10:	andeq	r3, r3, #1
   14b14:	cmp	r3, #0
   14b18:	beq	14bd4 <close_stdout@@Base+0x1fb8>
   14b1c:	cmp	r2, #1
   14b20:	beq	14bd4 <close_stdout@@Base+0x1fb8>
   14b24:	ldr	r1, [sp, #84]	; 0x54
   14b28:	add	r3, r1, r2
   14b2c:	add	r7, r3, r7
   14b30:	ldrb	r3, [r4, #1]!
   14b34:	sub	r3, r3, #91	; 0x5b
   14b38:	cmp	r3, #33	; 0x21
   14b3c:	addls	pc, pc, r3, lsl #2
   14b40:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b44:	b	145c4 <close_stdout@@Base+0x19a8>
   14b48:	b	145c4 <close_stdout@@Base+0x19a8>
   14b4c:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b50:	b	145c4 <close_stdout@@Base+0x19a8>
   14b54:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b58:	b	145c4 <close_stdout@@Base+0x19a8>
   14b5c:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b60:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b64:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b68:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b6c:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b70:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b74:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b78:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b7c:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b80:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b84:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b88:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b8c:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b90:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b94:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b98:	b	14bcc <close_stdout@@Base+0x1fb0>
   14b9c:	b	14bcc <close_stdout@@Base+0x1fb0>
   14ba0:	b	14bcc <close_stdout@@Base+0x1fb0>
   14ba4:	b	14bcc <close_stdout@@Base+0x1fb0>
   14ba8:	b	14bcc <close_stdout@@Base+0x1fb0>
   14bac:	b	14bcc <close_stdout@@Base+0x1fb0>
   14bb0:	b	14bcc <close_stdout@@Base+0x1fb0>
   14bb4:	b	14bcc <close_stdout@@Base+0x1fb0>
   14bb8:	b	14bcc <close_stdout@@Base+0x1fb0>
   14bbc:	b	14bcc <close_stdout@@Base+0x1fb0>
   14bc0:	b	14bcc <close_stdout@@Base+0x1fb0>
   14bc4:	b	14bcc <close_stdout@@Base+0x1fb0>
   14bc8:	b	145c4 <close_stdout@@Base+0x19a8>
   14bcc:	cmp	r4, r7
   14bd0:	bne	14b30 <close_stdout@@Base+0x1f14>
   14bd4:	ldr	r0, [sp, #104]	; 0x68
   14bd8:	add	r9, r9, r2
   14bdc:	bl	1114c <iswprint@plt>
   14be0:	cmp	r0, #0
   14be4:	mov	r0, r5
   14be8:	moveq	r6, #0
   14bec:	bl	110f8 <mbsinit@plt>
   14bf0:	cmp	r0, #0
   14bf4:	beq	14ac8 <close_stdout@@Base+0x1eac>
   14bf8:	mov	ip, r6
   14bfc:	eor	r2, ip, #1
   14c00:	str	r9, [sp, #60]	; 0x3c
   14c04:	ldr	r4, [sp, #92]	; 0x5c
   14c08:	uxtb	r2, r2
   14c0c:	ldr	r9, [sp, #88]	; 0x58
   14c10:	ldr	r6, [sp, #96]	; 0x60
   14c14:	ldr	r5, [sp, #100]	; 0x64
   14c18:	ldr	r3, [sp, #60]	; 0x3c
   14c1c:	cmp	r3, #1
   14c20:	bls	147a4 <close_stdout@@Base+0x1b88>
   14c24:	ldr	r0, [sp, #24]
   14c28:	and	r2, r2, r0
   14c2c:	b	147b0 <close_stdout@@Base+0x1b94>
   14c30:	ldr	r2, [sp, #164]	; 0xa4
   14c34:	tst	r2, #1
   14c38:	addne	fp, fp, #1
   14c3c:	bne	1416c <close_stdout@@Base+0x1550>
   14c40:	b	1447c <close_stdout@@Base+0x1860>
   14c44:	ldr	r0, [sp, #36]	; 0x24
   14c48:	cmp	r0, #0
   14c4c:	beq	1447c <close_stdout@@Base+0x1860>
   14c50:	b	145c4 <close_stdout@@Base+0x19a8>
   14c54:	ldr	r2, [sp, #32]
   14c58:	ldrb	r3, [r2, #1]
   14c5c:	adds	r3, r3, #0
   14c60:	movne	r3, #1
   14c64:	b	14598 <close_stdout@@Base+0x197c>
   14c68:	bl	11338 <abort@plt>
   14c6c:	ldr	r8, [sp, #60]	; 0x3c
   14c70:	b	145c4 <close_stdout@@Base+0x19a8>
   14c74:	ldr	r0, [sp, #32]
   14c78:	bl	11224 <strlen@plt>
   14c7c:	mov	r8, r0
   14c80:	b	14a8c <close_stdout@@Base+0x1e70>
   14c84:	ldr	r2, [pc, #288]	; 14dac <close_stdout@@Base+0x2190>
   14c88:	mov	r1, #1
   14c8c:	mov	r9, r1
   14c90:	str	r1, [sp, #24]
   14c94:	add	r2, pc, r2
   14c98:	str	r1, [sp, #28]
   14c9c:	str	r2, [sp, #52]	; 0x34
   14ca0:	b	14148 <close_stdout@@Base+0x152c>
   14ca4:	ldr	r2, [pc, #260]	; 14db0 <close_stdout@@Base+0x2194>
   14ca8:	mov	r3, #1
   14cac:	mov	r9, r3
   14cb0:	str	r3, [sp, #28]
   14cb4:	add	r2, pc, r2
   14cb8:	str	sl, [sp, #24]
   14cbc:	str	r2, [sp, #52]	; 0x34
   14cc0:	b	14148 <close_stdout@@Base+0x152c>
   14cc4:	cmp	r8, r7
   14cc8:	str	r9, [sp, #60]	; 0x3c
   14ccc:	mov	ip, r4
   14cd0:	ldr	r6, [sp, #96]	; 0x60
   14cd4:	ldr	r9, [sp, #88]	; 0x58
   14cd8:	ldr	r4, [sp, #92]	; 0x5c
   14cdc:	ldr	r5, [sp, #100]	; 0x64
   14ce0:	bls	14d18 <close_stdout@@Base+0x20fc>
   14ce4:	ldrb	r3, [ip]
   14ce8:	cmp	r3, #0
   14cec:	beq	14d18 <close_stdout@@Base+0x20fc>
   14cf0:	ldr	r3, [sp, #60]	; 0x3c
   14cf4:	b	14d04 <close_stdout@@Base+0x20e8>
   14cf8:	ldrb	r2, [r5, r3]
   14cfc:	cmp	r2, #0
   14d00:	beq	14d14 <close_stdout@@Base+0x20f8>
   14d04:	add	r3, r3, #1
   14d08:	add	r2, fp, r3
   14d0c:	cmp	r8, r2
   14d10:	bhi	14cf8 <close_stdout@@Base+0x20dc>
   14d14:	str	r3, [sp, #60]	; 0x3c
   14d18:	mov	r2, #1
   14d1c:	b	14c18 <close_stdout@@Base+0x1ffc>
   14d20:	str	r9, [sp, #60]	; 0x3c
   14d24:	mov	r2, #1
   14d28:	ldr	r4, [sp, #92]	; 0x5c
   14d2c:	ldr	r6, [sp, #96]	; 0x60
   14d30:	ldr	r9, [sp, #88]	; 0x58
   14d34:	ldr	r5, [sp, #100]	; 0x64
   14d38:	b	14c18 <close_stdout@@Base+0x1ffc>
   14d3c:	ldr	r9, [sp, #36]	; 0x24
   14d40:	b	14964 <close_stdout@@Base+0x1d48>
   14d44:	bl	11128 <__stack_chk_fail@plt>
   14d48:	ldr	r1, [pc, #100]	; 14db4 <close_stdout@@Base+0x2198>
   14d4c:	mov	r3, #0
   14d50:	mov	r0, #1
   14d54:	str	r3, [sp, #24]
   14d58:	add	r1, pc, r1
   14d5c:	str	r0, [sp, #28]
   14d60:	mov	r9, r3
   14d64:	str	r1, [sp, #52]	; 0x34
   14d68:	b	14148 <close_stdout@@Base+0x152c>
   14d6c:	ldr	r0, [pc, #68]	; 14db8 <close_stdout@@Base+0x219c>
   14d70:	mov	r3, #1
   14d74:	mov	r9, #0
   14d78:	str	r3, [sp, #24]
   14d7c:	add	r0, pc, r0
   14d80:	str	r3, [sp, #28]
   14d84:	str	r0, [sp, #52]	; 0x34
   14d88:	b	14148 <close_stdout@@Base+0x152c>
   14d8c:	andeq	r4, r1, r8, asr #30
   14d90:	andeq	r0, r0, r8, lsl #2
   14d94:	andeq	r3, r0, r0, lsr #9
   14d98:	andeq	r3, r0, ip, ror r4
   14d9c:	andeq	r3, r0, r8, lsr r4
   14da0:	andeq	r3, r0, r4, lsl r4
   14da4:	muleq	r0, r8, r3
   14da8:	andeq	r3, r0, r0, asr #6
   14dac:	muleq	r0, r8, r0
   14db0:	andeq	r3, r0, r4, ror r0
   14db4:	ldrdeq	r2, [r0], -r0
   14db8:			; <UNDEFINED> instruction: 0x00002fb0
   14dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dc0:	sub	sp, sp, #44	; 0x2c
   14dc4:	mov	r6, r0
   14dc8:	mov	r9, r1
   14dcc:	mov	sl, r2
   14dd0:	mov	r4, r3
   14dd4:	bl	11254 <__errno_location@plt>
   14dd8:	ldr	fp, [pc, #412]	; 14f7c <close_stdout@@Base+0x2360>
   14ddc:	cmp	r6, #0
   14de0:	add	fp, pc, fp
   14de4:	ldr	r5, [fp]
   14de8:	ldr	r1, [r0]
   14dec:	mov	r8, r0
   14df0:	str	r1, [sp, #36]	; 0x24
   14df4:	blt	14f74 <close_stdout@@Base+0x2358>
   14df8:	ldr	r3, [pc, #384]	; 14f80 <close_stdout@@Base+0x2364>
   14dfc:	add	r3, pc, r3
   14e00:	ldr	r3, [r3]
   14e04:	cmp	r6, r3
   14e08:	bcc	14e5c <close_stdout@@Base+0x2240>
   14e0c:	add	r7, r6, #1
   14e10:	cmn	r7, #-536870911	; 0xe0000001
   14e14:	bhi	14f78 <close_stdout@@Base+0x235c>
   14e18:	add	r3, fp, #4
   14e1c:	cmp	r5, r3
   14e20:	beq	14f4c <close_stdout@@Base+0x2330>
   14e24:	mov	r0, r5
   14e28:	lsl	r1, r7, #3
   14e2c:	bl	15c60 <close_stdout@@Base+0x3044>
   14e30:	mov	r5, r0
   14e34:	str	r0, [fp]
   14e38:	ldr	fp, [pc, #324]	; 14f84 <close_stdout@@Base+0x2368>
   14e3c:	mov	r1, #0
   14e40:	add	fp, pc, fp
   14e44:	ldr	r0, [fp]
   14e48:	rsb	r2, r0, r7
   14e4c:	add	r0, r5, r0, lsl #3
   14e50:	lsl	r2, r2, #3
   14e54:	bl	11278 <memset@plt>
   14e58:	str	r7, [fp]
   14e5c:	add	r2, r4, #8
   14e60:	str	r2, [sp, #32]
   14e64:	ldr	r1, [r4]
   14e68:	add	fp, r5, r6, lsl #3
   14e6c:	ldr	lr, [sp, #32]
   14e70:	mov	r2, r9
   14e74:	ldr	r3, [r4, #4]
   14e78:	ldr	ip, [r5, r6, lsl #3]
   14e7c:	ldr	r7, [fp, #4]
   14e80:	orr	r3, r3, #1
   14e84:	str	r1, [sp]
   14e88:	str	r3, [sp, #4]
   14e8c:	mov	r1, ip
   14e90:	str	lr, [sp, #8]
   14e94:	mov	r0, r7
   14e98:	ldr	lr, [r4, #40]	; 0x28
   14e9c:	str	r3, [sp, #28]
   14ea0:	mov	r3, sl
   14ea4:	str	lr, [sp, #12]
   14ea8:	ldr	lr, [r4, #44]	; 0x2c
   14eac:	str	ip, [sp, #24]
   14eb0:	str	lr, [sp, #16]
   14eb4:	bl	14094 <close_stdout@@Base+0x1478>
   14eb8:	ldr	ip, [sp, #24]
   14ebc:	cmp	ip, r0
   14ec0:	bhi	14f38 <close_stdout@@Base+0x231c>
   14ec4:	ldr	r3, [pc, #188]	; 14f88 <close_stdout@@Base+0x236c>
   14ec8:	add	r1, r0, #1
   14ecc:	str	r1, [r5, r6, lsl #3]
   14ed0:	add	r3, pc, r3
   14ed4:	cmp	r7, r3
   14ed8:	beq	14eec <close_stdout@@Base+0x22d0>
   14edc:	mov	r0, r7
   14ee0:	str	r1, [sp, #24]
   14ee4:	bl	110d4 <free@plt>
   14ee8:	ldr	r1, [sp, #24]
   14eec:	mov	r0, r1
   14ef0:	str	r1, [sp, #24]
   14ef4:	bl	15c08 <close_stdout@@Base+0x2fec>
   14ef8:	ldr	r3, [sp, #28]
   14efc:	ldr	lr, [sp, #32]
   14f00:	mov	r2, r9
   14f04:	str	r0, [fp, #4]
   14f08:	mov	r7, r0
   14f0c:	ldr	ip, [r4]
   14f10:	str	r3, [sp, #4]
   14f14:	mov	r3, sl
   14f18:	str	lr, [sp, #8]
   14f1c:	str	ip, [sp]
   14f20:	ldr	ip, [r4, #40]	; 0x28
   14f24:	ldr	r1, [sp, #24]
   14f28:	str	ip, [sp, #12]
   14f2c:	ldr	ip, [r4, #44]	; 0x2c
   14f30:	str	ip, [sp, #16]
   14f34:	bl	14094 <close_stdout@@Base+0x1478>
   14f38:	ldr	r1, [sp, #36]	; 0x24
   14f3c:	mov	r0, r7
   14f40:	str	r1, [r8]
   14f44:	add	sp, sp, #44	; 0x2c
   14f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f4c:	lsl	r1, r7, #3
   14f50:	mov	r0, #0
   14f54:	str	r3, [sp, #24]
   14f58:	bl	15c60 <close_stdout@@Base+0x3044>
   14f5c:	ldr	r3, [sp, #24]
   14f60:	mov	r5, r0
   14f64:	ldm	r3, {r0, r1}
   14f68:	str	r5, [fp]
   14f6c:	stm	r5, {r0, r1}
   14f70:	b	14e38 <close_stdout@@Base+0x221c>
   14f74:	bl	11338 <abort@plt>
   14f78:	bl	15e1c <close_stdout@@Base+0x3200>
   14f7c:	muleq	r1, ip, r3
   14f80:	andeq	r4, r1, ip, asr #6
   14f84:	andeq	r4, r1, r8, lsl #6
   14f88:	ldrdeq	r4, [r1], -r8
   14f8c:	push	{r4, r5, r6, lr}
   14f90:	mov	r5, r0
   14f94:	bl	11254 <__errno_location@plt>
   14f98:	cmp	r5, #0
   14f9c:	mov	r1, #48	; 0x30
   14fa0:	mov	r4, r0
   14fa4:	ldr	r0, [pc, #24]	; 14fc4 <close_stdout@@Base+0x23a8>
   14fa8:	ldr	r6, [r4]
   14fac:	add	r0, pc, r0
   14fb0:	add	r0, r0, #256	; 0x100
   14fb4:	movne	r0, r5
   14fb8:	bl	15ddc <close_stdout@@Base+0x31c0>
   14fbc:	str	r6, [r4]
   14fc0:	pop	{r4, r5, r6, pc}
   14fc4:	strdeq	r4, [r1], -ip
   14fc8:	cmp	r0, #0
   14fcc:	beq	14fd8 <close_stdout@@Base+0x23bc>
   14fd0:	ldr	r0, [r0]
   14fd4:	bx	lr
   14fd8:	ldr	r0, [pc, #12]	; 14fec <close_stdout@@Base+0x23d0>
   14fdc:	add	r0, pc, r0
   14fe0:	add	r0, r0, #256	; 0x100
   14fe4:	ldr	r0, [r0]
   14fe8:	bx	lr
   14fec:	andeq	r4, r1, ip, asr #3
   14ff0:	cmp	r0, #0
   14ff4:	beq	15000 <close_stdout@@Base+0x23e4>
   14ff8:	str	r1, [r0]
   14ffc:	bx	lr
   15000:	ldr	r0, [pc, #12]	; 15014 <close_stdout@@Base+0x23f8>
   15004:	add	r0, pc, r0
   15008:	add	r0, r0, #256	; 0x100
   1500c:	str	r1, [r0]
   15010:	bx	lr
   15014:	andeq	r4, r1, r4, lsr #3
   15018:	cmp	r0, #0
   1501c:	movne	r3, r0
   15020:	beq	15050 <close_stdout@@Base+0x2434>
   15024:	lsr	ip, r1, #5
   15028:	and	r1, r1, #31
   1502c:	add	r3, r3, ip, lsl #2
   15030:	ldr	ip, [r3, #8]
   15034:	lsr	r0, ip, r1
   15038:	eor	r2, r0, r2
   1503c:	and	r0, r0, #1
   15040:	and	r2, r2, #1
   15044:	eor	ip, ip, r2, lsl r1
   15048:	str	ip, [r3, #8]
   1504c:	bx	lr
   15050:	ldr	r3, [pc, #8]	; 15060 <close_stdout@@Base+0x2444>
   15054:	add	r3, pc, r3
   15058:	add	r3, r3, #256	; 0x100
   1505c:	b	15024 <close_stdout@@Base+0x2408>
   15060:	andeq	r4, r1, r4, asr r1
   15064:	subs	r3, r0, #0
   15068:	beq	15078 <close_stdout@@Base+0x245c>
   1506c:	ldr	r0, [r3, #4]
   15070:	str	r1, [r3, #4]
   15074:	bx	lr
   15078:	ldr	r3, [pc, #8]	; 15088 <close_stdout@@Base+0x246c>
   1507c:	add	r3, pc, r3
   15080:	add	r3, r3, #256	; 0x100
   15084:	b	1506c <close_stdout@@Base+0x2450>
   15088:	andeq	r4, r1, ip, lsr #2
   1508c:	cmp	r0, #0
   15090:	push	{r3, lr}
   15094:	beq	150b8 <close_stdout@@Base+0x249c>
   15098:	cmp	r2, #0
   1509c:	cmpne	r1, #0
   150a0:	mov	r3, #8
   150a4:	strne	r1, [r0, #40]	; 0x28
   150a8:	str	r3, [r0]
   150ac:	strne	r2, [r0, #44]	; 0x2c
   150b0:	popne	{r3, pc}
   150b4:	bl	11338 <abort@plt>
   150b8:	ldr	r0, [pc, #8]	; 150c8 <close_stdout@@Base+0x24ac>
   150bc:	add	r0, pc, r0
   150c0:	add	r0, r0, #256	; 0x100
   150c4:	b	15098 <close_stdout@@Base+0x247c>
   150c8:	andeq	r4, r1, ip, ror #1
   150cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   150d0:	sub	sp, sp, #24
   150d4:	mov	r7, r0
   150d8:	mov	sl, r1
   150dc:	ldr	r4, [sp, #56]	; 0x38
   150e0:	mov	r9, r2
   150e4:	mov	r8, r3
   150e8:	cmp	r4, #0
   150ec:	beq	15140 <close_stdout@@Base+0x2524>
   150f0:	bl	11254 <__errno_location@plt>
   150f4:	ldr	r3, [r4]
   150f8:	add	lr, r4, #8
   150fc:	mov	r1, sl
   15100:	mov	r2, r9
   15104:	ldr	r6, [r0]
   15108:	mov	r5, r0
   1510c:	str	r3, [sp]
   15110:	mov	r0, r7
   15114:	ldr	ip, [r4, #4]
   15118:	mov	r3, r8
   1511c:	stmib	sp, {ip, lr}
   15120:	ldr	ip, [r4, #40]	; 0x28
   15124:	str	ip, [sp, #12]
   15128:	ldr	ip, [r4, #44]	; 0x2c
   1512c:	str	ip, [sp, #16]
   15130:	bl	14094 <close_stdout@@Base+0x1478>
   15134:	str	r6, [r5]
   15138:	add	sp, sp, #24
   1513c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15140:	ldr	r4, [pc, #8]	; 15150 <close_stdout@@Base+0x2534>
   15144:	add	r4, pc, r4
   15148:	add	r4, r4, #256	; 0x100
   1514c:	b	150f0 <close_stdout@@Base+0x24d4>
   15150:	andeq	r4, r1, r4, rrx
   15154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15158:	subs	r4, r3, #0
   1515c:	sub	sp, sp, #36	; 0x24
   15160:	mov	r7, r0
   15164:	mov	r6, r1
   15168:	mov	r5, r2
   1516c:	beq	15228 <close_stdout@@Base+0x260c>
   15170:	bl	11254 <__errno_location@plt>
   15174:	ldr	r3, [r4]
   15178:	ldr	sl, [r4, #4]
   1517c:	add	r9, r4, #8
   15180:	mov	r8, r0
   15184:	mov	r0, #0
   15188:	ldr	r2, [r8]
   1518c:	cmp	r5, r0
   15190:	orreq	sl, sl, #1
   15194:	str	r9, [sp, #8]
   15198:	mov	r1, r0
   1519c:	stm	sp, {r3, sl}
   151a0:	mov	r3, r6
   151a4:	ldr	ip, [r4, #40]	; 0x28
   151a8:	str	r2, [sp, #28]
   151ac:	mov	r2, r7
   151b0:	str	ip, [sp, #12]
   151b4:	ldr	ip, [r4, #44]	; 0x2c
   151b8:	str	ip, [sp, #16]
   151bc:	bl	14094 <close_stdout@@Base+0x1478>
   151c0:	add	r1, r0, #1
   151c4:	mov	fp, r0
   151c8:	str	r1, [sp, #24]
   151cc:	mov	r0, r1
   151d0:	bl	15c08 <close_stdout@@Base+0x2fec>
   151d4:	ldr	lr, [r4]
   151d8:	str	sl, [sp, #4]
   151dc:	mov	r3, r6
   151e0:	str	r9, [sp, #8]
   151e4:	mov	r2, r7
   151e8:	str	lr, [sp]
   151ec:	ldr	lr, [r4, #40]	; 0x28
   151f0:	ldr	r1, [sp, #24]
   151f4:	str	lr, [sp, #12]
   151f8:	ldr	lr, [r4, #44]	; 0x2c
   151fc:	str	lr, [sp, #16]
   15200:	str	r0, [sp, #24]
   15204:	bl	14094 <close_stdout@@Base+0x1478>
   15208:	ldr	r3, [sp, #28]
   1520c:	cmp	r5, #0
   15210:	str	r3, [r8]
   15214:	ldr	ip, [sp, #24]
   15218:	strne	fp, [r5]
   1521c:	mov	r0, ip
   15220:	add	sp, sp, #36	; 0x24
   15224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15228:	ldr	r4, [pc, #8]	; 15238 <close_stdout@@Base+0x261c>
   1522c:	add	r4, pc, r4
   15230:	add	r4, r4, #256	; 0x100
   15234:	b	15170 <close_stdout@@Base+0x2554>
   15238:	andeq	r3, r1, ip, ror pc
   1523c:	mov	r3, r2
   15240:	mov	r2, #0
   15244:	b	15154 <close_stdout@@Base+0x2538>
   15248:	ldr	r2, [pc, #152]	; 152e8 <close_stdout@@Base+0x26cc>
   1524c:	push	{r3, r4, r5, r6, r7, lr}
   15250:	add	r2, pc, r2
   15254:	ldr	r3, [pc, #144]	; 152ec <close_stdout@@Base+0x26d0>
   15258:	ldr	r6, [r2]
   1525c:	add	r3, pc, r3
   15260:	cmp	r6, #1
   15264:	ldr	r7, [r3]
   15268:	movhi	r4, #1
   1526c:	movhi	r5, r7
   15270:	bls	1528c <close_stdout@@Base+0x2670>
   15274:	ldr	r0, [r5, #12]
   15278:	add	r4, r4, #1
   1527c:	bl	110d4 <free@plt>
   15280:	cmp	r4, r6
   15284:	add	r5, r5, #8
   15288:	bne	15274 <close_stdout@@Base+0x2658>
   1528c:	ldr	r4, [pc, #92]	; 152f0 <close_stdout@@Base+0x26d4>
   15290:	ldr	r0, [r7, #4]
   15294:	add	r4, pc, r4
   15298:	cmp	r0, r4
   1529c:	beq	152b4 <close_stdout@@Base+0x2698>
   152a0:	bl	110d4 <free@plt>
   152a4:	ldr	r3, [pc, #72]	; 152f4 <close_stdout@@Base+0x26d8>
   152a8:	mov	r2, #256	; 0x100
   152ac:	add	r3, pc, r3
   152b0:	stmib	r3, {r2, r4}
   152b4:	ldr	r4, [pc, #60]	; 152f8 <close_stdout@@Base+0x26dc>
   152b8:	add	r4, pc, r4
   152bc:	add	r5, r4, #4
   152c0:	cmp	r7, r5
   152c4:	beq	152d4 <close_stdout@@Base+0x26b8>
   152c8:	mov	r0, r7
   152cc:	bl	110d4 <free@plt>
   152d0:	str	r5, [r4]
   152d4:	ldr	r3, [pc, #32]	; 152fc <close_stdout@@Base+0x26e0>
   152d8:	mov	r2, #1
   152dc:	add	r3, pc, r3
   152e0:	str	r2, [r3]
   152e4:	pop	{r3, r4, r5, r6, r7, pc}
   152e8:	strdeq	r3, [r1], -r8
   152ec:	andeq	r3, r1, r0, lsr #30
   152f0:	andeq	r3, r1, r4, lsl pc
   152f4:	ldrdeq	r3, [r1], -r0
   152f8:	andeq	r3, r1, r4, asr #29
   152fc:	andeq	r3, r1, ip, ror #28
   15300:	ldr	r3, [pc, #12]	; 15314 <close_stdout@@Base+0x26f8>
   15304:	mvn	r2, #0
   15308:	add	r3, pc, r3
   1530c:	add	r3, r3, #256	; 0x100
   15310:	b	14dbc <close_stdout@@Base+0x21a0>
   15314:	andeq	r3, r1, r0, lsr #29
   15318:	ldr	r3, [pc, #8]	; 15328 <close_stdout@@Base+0x270c>
   1531c:	add	r3, pc, r3
   15320:	add	r3, r3, #256	; 0x100
   15324:	b	14dbc <close_stdout@@Base+0x21a0>
   15328:	andeq	r3, r1, ip, lsl #29
   1532c:	mov	r1, r0
   15330:	mov	r0, #0
   15334:	b	15300 <close_stdout@@Base+0x26e4>
   15338:	mov	r2, r1
   1533c:	mov	r1, r0
   15340:	mov	r0, #0
   15344:	b	15318 <close_stdout@@Base+0x26fc>
   15348:	ldr	r3, [pc, #92]	; 153ac <close_stdout@@Base+0x2790>
   1534c:	ldr	ip, [pc, #92]	; 153b0 <close_stdout@@Base+0x2794>
   15350:	add	r3, pc, r3
   15354:	push	{r4, r5, r6, r7, lr}
   15358:	sub	sp, sp, #60	; 0x3c
   1535c:	ldr	r4, [r3, ip]
   15360:	add	r5, sp, #4
   15364:	mov	r7, r2
   15368:	mov	r6, r0
   1536c:	mov	r0, r5
   15370:	ldr	r3, [r4]
   15374:	str	r3, [sp, #52]	; 0x34
   15378:	bl	13edc <close_stdout@@Base+0x12c0>
   1537c:	mov	r3, r5
   15380:	mvn	r2, #0
   15384:	mov	r0, r6
   15388:	mov	r1, r7
   1538c:	bl	14dbc <close_stdout@@Base+0x21a0>
   15390:	ldr	r2, [sp, #52]	; 0x34
   15394:	ldr	r3, [r4]
   15398:	cmp	r2, r3
   1539c:	bne	153a8 <close_stdout@@Base+0x278c>
   153a0:	add	sp, sp, #60	; 0x3c
   153a4:	pop	{r4, r5, r6, r7, pc}
   153a8:	bl	11128 <__stack_chk_fail@plt>
   153ac:	andeq	r3, r1, r8, lsr #25
   153b0:	andeq	r0, r0, r8, lsl #2
   153b4:	ldr	ip, [pc, #96]	; 1541c <close_stdout@@Base+0x2800>
   153b8:	push	{r4, r5, r6, r7, r8, lr}
   153bc:	add	ip, pc, ip
   153c0:	ldr	lr, [pc, #88]	; 15420 <close_stdout@@Base+0x2804>
   153c4:	sub	sp, sp, #56	; 0x38
   153c8:	mov	r8, r3
   153cc:	add	r5, sp, #4
   153d0:	mov	r7, r2
   153d4:	mov	r6, r0
   153d8:	ldr	r4, [ip, lr]
   153dc:	mov	r0, r5
   153e0:	ldr	r3, [r4]
   153e4:	str	r3, [sp, #52]	; 0x34
   153e8:	bl	13edc <close_stdout@@Base+0x12c0>
   153ec:	mov	r2, r8
   153f0:	mov	r3, r5
   153f4:	mov	r0, r6
   153f8:	mov	r1, r7
   153fc:	bl	14dbc <close_stdout@@Base+0x21a0>
   15400:	ldr	r2, [sp, #52]	; 0x34
   15404:	ldr	r3, [r4]
   15408:	cmp	r2, r3
   1540c:	bne	15418 <close_stdout@@Base+0x27fc>
   15410:	add	sp, sp, #56	; 0x38
   15414:	pop	{r4, r5, r6, r7, r8, pc}
   15418:	bl	11128 <__stack_chk_fail@plt>
   1541c:	andeq	r3, r1, ip, lsr ip
   15420:	andeq	r0, r0, r8, lsl #2
   15424:	mov	r2, r1
   15428:	mov	r1, r0
   1542c:	mov	r0, #0
   15430:	b	15348 <close_stdout@@Base+0x272c>
   15434:	mov	ip, r1
   15438:	mov	r3, r2
   1543c:	mov	r1, r0
   15440:	mov	r2, ip
   15444:	mov	r0, #0
   15448:	b	153b4 <close_stdout@@Base+0x2798>
   1544c:	push	{r4, r5, r6, r7, r8, lr}
   15450:	mov	r5, r2
   15454:	ldr	lr, [pc, #136]	; 154e4 <close_stdout@@Base+0x28c8>
   15458:	mov	r7, r0
   1545c:	mov	r6, r1
   15460:	ldr	r4, [pc, #128]	; 154e8 <close_stdout@@Base+0x28cc>
   15464:	add	lr, pc, lr
   15468:	sub	sp, sp, #56	; 0x38
   1546c:	add	lr, lr, #256	; 0x100
   15470:	ldr	r8, [pc, #116]	; 154ec <close_stdout@@Base+0x28d0>
   15474:	add	r4, pc, r4
   15478:	add	ip, sp, #4
   1547c:	ldm	lr!, {r0, r1, r2, r3}
   15480:	ldr	r4, [r4, r8]
   15484:	stmia	ip!, {r0, r1, r2, r3}
   15488:	ldm	lr!, {r0, r1, r2, r3}
   1548c:	ldr	r8, [r4]
   15490:	stmia	ip!, {r0, r1, r2, r3}
   15494:	ldm	lr, {r0, r1, r2, r3}
   15498:	str	r8, [sp, #52]	; 0x34
   1549c:	stm	ip, {r0, r1, r2, r3}
   154a0:	mov	r1, r5
   154a4:	add	r5, sp, #4
   154a8:	mov	r2, #1
   154ac:	mov	r0, r5
   154b0:	bl	15018 <close_stdout@@Base+0x23fc>
   154b4:	mov	r2, r6
   154b8:	mov	r3, r5
   154bc:	mov	r1, r7
   154c0:	mov	r0, #0
   154c4:	bl	14dbc <close_stdout@@Base+0x21a0>
   154c8:	ldr	r2, [sp, #52]	; 0x34
   154cc:	ldr	r3, [r4]
   154d0:	cmp	r2, r3
   154d4:	bne	154e0 <close_stdout@@Base+0x28c4>
   154d8:	add	sp, sp, #56	; 0x38
   154dc:	pop	{r4, r5, r6, r7, r8, pc}
   154e0:	bl	11128 <__stack_chk_fail@plt>
   154e4:	andeq	r3, r1, r4, asr #26
   154e8:	andeq	r3, r1, r4, lsl #23
   154ec:	andeq	r0, r0, r8, lsl #2
   154f0:	mov	r2, r1
   154f4:	mvn	r1, #0
   154f8:	b	1544c <close_stdout@@Base+0x2830>
   154fc:	mov	r1, #58	; 0x3a
   15500:	b	154f0 <close_stdout@@Base+0x28d4>
   15504:	mov	r2, #58	; 0x3a
   15508:	b	1544c <close_stdout@@Base+0x2830>
   1550c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15510:	mov	r5, r2
   15514:	ldr	lr, [pc, #144]	; 155ac <close_stdout@@Base+0x2990>
   15518:	mov	r8, r0
   1551c:	mov	r9, r1
   15520:	mov	r7, r3
   15524:	add	lr, pc, lr
   15528:	ldr	r4, [pc, #128]	; 155b0 <close_stdout@@Base+0x2994>
   1552c:	add	lr, lr, #256	; 0x100
   15530:	sub	sp, sp, #56	; 0x38
   15534:	ldr	sl, [pc, #120]	; 155b4 <close_stdout@@Base+0x2998>
   15538:	add	r4, pc, r4
   1553c:	ldm	lr!, {r0, r1, r2, r3}
   15540:	add	ip, sp, #4
   15544:	ldr	r4, [r4, sl]
   15548:	ldr	r6, [sp, #88]	; 0x58
   1554c:	stmia	ip!, {r0, r1, r2, r3}
   15550:	ldm	lr!, {r0, r1, r2, r3}
   15554:	ldr	sl, [r4]
   15558:	stmia	ip!, {r0, r1, r2, r3}
   1555c:	ldm	lr, {r0, r1, r2, r3}
   15560:	str	sl, [sp, #52]	; 0x34
   15564:	stm	ip, {r0, r1, r2, r3}
   15568:	mov	r2, r5
   1556c:	add	r5, sp, #4
   15570:	mov	r1, r9
   15574:	mov	r0, r5
   15578:	bl	1508c <close_stdout@@Base+0x2470>
   1557c:	mov	r2, r6
   15580:	mov	r3, r5
   15584:	mov	r0, r8
   15588:	mov	r1, r7
   1558c:	bl	14dbc <close_stdout@@Base+0x21a0>
   15590:	ldr	r2, [sp, #52]	; 0x34
   15594:	ldr	r3, [r4]
   15598:	cmp	r2, r3
   1559c:	bne	155a8 <close_stdout@@Base+0x298c>
   155a0:	add	sp, sp, #56	; 0x38
   155a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155a8:	bl	11128 <__stack_chk_fail@plt>
   155ac:	andeq	r3, r1, r4, lsl #25
   155b0:	andeq	r3, r1, r0, asr #21
   155b4:	andeq	r0, r0, r8, lsl #2
   155b8:	push	{lr}		; (str lr, [sp, #-4]!)
   155bc:	sub	sp, sp, #12
   155c0:	mvn	ip, #0
   155c4:	str	ip, [sp]
   155c8:	bl	1550c <close_stdout@@Base+0x28f0>
   155cc:	add	sp, sp, #12
   155d0:	pop	{pc}		; (ldr pc, [sp], #4)
   155d4:	mov	ip, r1
   155d8:	mov	r3, r2
   155dc:	mov	r1, r0
   155e0:	mov	r2, ip
   155e4:	mov	r0, #0
   155e8:	b	155b8 <close_stdout@@Base+0x299c>
   155ec:	push	{lr}		; (str lr, [sp, #-4]!)
   155f0:	sub	sp, sp, #12
   155f4:	mov	lr, r1
   155f8:	mov	ip, r2
   155fc:	mov	r1, r0
   15600:	str	r3, [sp]
   15604:	mov	r2, lr
   15608:	mov	r3, ip
   1560c:	mov	r0, #0
   15610:	bl	1550c <close_stdout@@Base+0x28f0>
   15614:	add	sp, sp, #12
   15618:	pop	{pc}		; (ldr pc, [sp], #4)
   1561c:	ldr	r3, [pc, #12]	; 15630 <close_stdout@@Base+0x2a14>
   15620:	ldr	ip, [pc, #12]	; 15634 <close_stdout@@Base+0x2a18>
   15624:	add	r3, pc, r3
   15628:	ldr	r3, [r3, ip]
   1562c:	b	14dbc <close_stdout@@Base+0x21a0>
   15630:	ldrdeq	r3, [r1], -r4
   15634:	andeq	r0, r0, r4, lsl #2
   15638:	mov	r2, r1
   1563c:	mov	r1, r0
   15640:	mov	r0, #0
   15644:	b	1561c <close_stdout@@Base+0x2a00>
   15648:	mvn	r2, #0
   1564c:	b	1561c <close_stdout@@Base+0x2a00>
   15650:	mov	r1, r0
   15654:	mov	r0, #0
   15658:	b	15648 <close_stdout@@Base+0x2a2c>
   1565c:	mov	r1, #0
   15660:	mov	r2, #3
   15664:	b	15f14 <close_stdout@@Base+0x32f8>
   15668:	push	{r4, r5, r6, r7, lr}
   1566c:	cmp	r1, #0
   15670:	sub	sp, sp, #36	; 0x24
   15674:	ldr	r7, [pc, #896]	; 159fc <close_stdout@@Base+0x2de0>
   15678:	mov	ip, r3
   1567c:	mov	r5, r0
   15680:	add	r7, pc, r7
   15684:	ldr	r4, [sp, #56]	; 0x38
   15688:	ldr	r6, [sp, #60]	; 0x3c
   1568c:	beq	159d0 <close_stdout@@Base+0x2db4>
   15690:	str	r2, [sp]
   15694:	mov	r3, r1
   15698:	ldr	r2, [pc, #864]	; 15a00 <close_stdout@@Base+0x2de4>
   1569c:	mov	r1, #1
   156a0:	str	ip, [sp, #4]
   156a4:	add	r2, pc, r2
   156a8:	bl	112a8 <__fprintf_chk@plt>
   156ac:	ldr	r1, [pc, #848]	; 15a04 <close_stdout@@Base+0x2de8>
   156b0:	mov	r2, #5
   156b4:	mov	r0, #0
   156b8:	add	r1, pc, r1
   156bc:	bl	1111c <dcgettext@plt>
   156c0:	ldr	r2, [pc, #832]	; 15a08 <close_stdout@@Base+0x2dec>
   156c4:	movw	ip, #2013	; 0x7dd
   156c8:	mov	r1, #1
   156cc:	ldr	r2, [r7, r2]
   156d0:	str	ip, [sp]
   156d4:	mov	r3, r0
   156d8:	mov	r0, r5
   156dc:	bl	112a8 <__fprintf_chk@plt>
   156e0:	ldr	r1, [pc, #804]	; 15a0c <close_stdout@@Base+0x2df0>
   156e4:	mov	r0, #0
   156e8:	mov	r2, #5
   156ec:	add	r1, pc, r1
   156f0:	bl	1111c <dcgettext@plt>
   156f4:	mov	r1, r5
   156f8:	bl	1108c <fputs_unlocked@plt>
   156fc:	cmp	r6, #9
   15700:	addls	pc, pc, r6, lsl #2
   15704:	b	159ec <close_stdout@@Base+0x2dd0>
   15708:	b	1579c <close_stdout@@Base+0x2b80>
   1570c:	b	157a0 <close_stdout@@Base+0x2b84>
   15710:	b	157d0 <close_stdout@@Base+0x2bb4>
   15714:	b	15804 <close_stdout@@Base+0x2be8>
   15718:	b	15840 <close_stdout@@Base+0x2c24>
   1571c:	b	15880 <close_stdout@@Base+0x2c64>
   15720:	b	158c8 <close_stdout@@Base+0x2cac>
   15724:	b	15918 <close_stdout@@Base+0x2cfc>
   15728:	b	15970 <close_stdout@@Base+0x2d54>
   1572c:	b	15730 <close_stdout@@Base+0x2b14>
   15730:	ldr	r1, [pc, #728]	; 15a10 <close_stdout@@Base+0x2df4>
   15734:	mov	r0, #0
   15738:	add	r1, pc, r1
   1573c:	mov	r2, #5
   15740:	bl	1111c <dcgettext@plt>
   15744:	ldm	r4, {r3, ip}
   15748:	mov	r1, #1
   1574c:	str	ip, [sp]
   15750:	ldr	ip, [r4, #8]
   15754:	str	ip, [sp, #4]
   15758:	ldr	ip, [r4, #12]
   1575c:	str	ip, [sp, #8]
   15760:	ldr	ip, [r4, #16]
   15764:	str	ip, [sp, #12]
   15768:	ldr	ip, [r4, #20]
   1576c:	str	ip, [sp, #16]
   15770:	ldr	ip, [r4, #24]
   15774:	str	ip, [sp, #20]
   15778:	ldr	ip, [r4, #28]
   1577c:	str	ip, [sp, #24]
   15780:	ldr	ip, [r4, #32]
   15784:	str	ip, [sp, #28]
   15788:	mov	r2, r0
   1578c:	mov	r0, r5
   15790:	bl	112a8 <__fprintf_chk@plt>
   15794:	add	sp, sp, #36	; 0x24
   15798:	pop	{r4, r5, r6, r7, pc}
   1579c:	bl	11338 <abort@plt>
   157a0:	ldr	r1, [pc, #620]	; 15a14 <close_stdout@@Base+0x2df8>
   157a4:	mov	r2, #5
   157a8:	mov	r0, #0
   157ac:	add	r1, pc, r1
   157b0:	bl	1111c <dcgettext@plt>
   157b4:	ldr	r3, [r4]
   157b8:	mov	r1, #1
   157bc:	mov	r2, r0
   157c0:	mov	r0, r5
   157c4:	add	sp, sp, #36	; 0x24
   157c8:	pop	{r4, r5, r6, r7, lr}
   157cc:	b	112a8 <__fprintf_chk@plt>
   157d0:	ldr	r1, [pc, #576]	; 15a18 <close_stdout@@Base+0x2dfc>
   157d4:	mov	r2, #5
   157d8:	mov	r0, #0
   157dc:	add	r1, pc, r1
   157e0:	bl	1111c <dcgettext@plt>
   157e4:	ldm	r4, {r3, ip}
   157e8:	mov	r1, #1
   157ec:	str	ip, [sp, #56]	; 0x38
   157f0:	mov	r2, r0
   157f4:	mov	r0, r5
   157f8:	add	sp, sp, #36	; 0x24
   157fc:	pop	{r4, r5, r6, r7, lr}
   15800:	b	112a8 <__fprintf_chk@plt>
   15804:	ldr	r1, [pc, #528]	; 15a1c <close_stdout@@Base+0x2e00>
   15808:	mov	r2, #5
   1580c:	mov	r0, #0
   15810:	add	r1, pc, r1
   15814:	bl	1111c <dcgettext@plt>
   15818:	ldm	r4, {r3, ip}
   1581c:	mov	r1, #1
   15820:	str	ip, [sp, #56]	; 0x38
   15824:	ldr	ip, [r4, #8]
   15828:	str	ip, [sp, #60]	; 0x3c
   1582c:	mov	r2, r0
   15830:	mov	r0, r5
   15834:	add	sp, sp, #36	; 0x24
   15838:	pop	{r4, r5, r6, r7, lr}
   1583c:	b	112a8 <__fprintf_chk@plt>
   15840:	ldr	r1, [pc, #472]	; 15a20 <close_stdout@@Base+0x2e04>
   15844:	mov	r2, #5
   15848:	mov	r0, #0
   1584c:	add	r1, pc, r1
   15850:	bl	1111c <dcgettext@plt>
   15854:	ldm	r4, {r3, ip}
   15858:	mov	r1, #1
   1585c:	str	ip, [sp]
   15860:	ldr	ip, [r4, #8]
   15864:	str	ip, [sp, #4]
   15868:	ldr	ip, [r4, #12]
   1586c:	str	ip, [sp, #8]
   15870:	mov	r2, r0
   15874:	mov	r0, r5
   15878:	bl	112a8 <__fprintf_chk@plt>
   1587c:	b	15794 <close_stdout@@Base+0x2b78>
   15880:	ldr	r1, [pc, #412]	; 15a24 <close_stdout@@Base+0x2e08>
   15884:	mov	r2, #5
   15888:	mov	r0, #0
   1588c:	add	r1, pc, r1
   15890:	bl	1111c <dcgettext@plt>
   15894:	ldm	r4, {r3, ip}
   15898:	mov	r1, #1
   1589c:	str	ip, [sp]
   158a0:	ldr	ip, [r4, #8]
   158a4:	str	ip, [sp, #4]
   158a8:	ldr	ip, [r4, #12]
   158ac:	str	ip, [sp, #8]
   158b0:	ldr	ip, [r4, #16]
   158b4:	str	ip, [sp, #12]
   158b8:	mov	r2, r0
   158bc:	mov	r0, r5
   158c0:	bl	112a8 <__fprintf_chk@plt>
   158c4:	b	15794 <close_stdout@@Base+0x2b78>
   158c8:	ldr	r1, [pc, #344]	; 15a28 <close_stdout@@Base+0x2e0c>
   158cc:	mov	r2, #5
   158d0:	mov	r0, #0
   158d4:	add	r1, pc, r1
   158d8:	bl	1111c <dcgettext@plt>
   158dc:	ldm	r4, {r3, ip}
   158e0:	mov	r1, #1
   158e4:	str	ip, [sp]
   158e8:	ldr	ip, [r4, #8]
   158ec:	str	ip, [sp, #4]
   158f0:	ldr	ip, [r4, #12]
   158f4:	str	ip, [sp, #8]
   158f8:	ldr	ip, [r4, #16]
   158fc:	str	ip, [sp, #12]
   15900:	ldr	ip, [r4, #20]
   15904:	str	ip, [sp, #16]
   15908:	mov	r2, r0
   1590c:	mov	r0, r5
   15910:	bl	112a8 <__fprintf_chk@plt>
   15914:	b	15794 <close_stdout@@Base+0x2b78>
   15918:	ldr	r1, [pc, #268]	; 15a2c <close_stdout@@Base+0x2e10>
   1591c:	mov	r2, #5
   15920:	mov	r0, #0
   15924:	add	r1, pc, r1
   15928:	bl	1111c <dcgettext@plt>
   1592c:	ldm	r4, {r3, ip}
   15930:	mov	r1, #1
   15934:	str	ip, [sp]
   15938:	ldr	ip, [r4, #8]
   1593c:	str	ip, [sp, #4]
   15940:	ldr	ip, [r4, #12]
   15944:	str	ip, [sp, #8]
   15948:	ldr	ip, [r4, #16]
   1594c:	str	ip, [sp, #12]
   15950:	ldr	ip, [r4, #20]
   15954:	str	ip, [sp, #16]
   15958:	ldr	ip, [r4, #24]
   1595c:	str	ip, [sp, #20]
   15960:	mov	r2, r0
   15964:	mov	r0, r5
   15968:	bl	112a8 <__fprintf_chk@plt>
   1596c:	b	15794 <close_stdout@@Base+0x2b78>
   15970:	ldr	r1, [pc, #184]	; 15a30 <close_stdout@@Base+0x2e14>
   15974:	mov	r2, #5
   15978:	mov	r0, #0
   1597c:	add	r1, pc, r1
   15980:	bl	1111c <dcgettext@plt>
   15984:	ldm	r4, {r3, ip}
   15988:	mov	r1, #1
   1598c:	str	ip, [sp]
   15990:	ldr	ip, [r4, #8]
   15994:	str	ip, [sp, #4]
   15998:	ldr	ip, [r4, #12]
   1599c:	str	ip, [sp, #8]
   159a0:	ldr	ip, [r4, #16]
   159a4:	str	ip, [sp, #12]
   159a8:	ldr	ip, [r4, #20]
   159ac:	str	ip, [sp, #16]
   159b0:	ldr	ip, [r4, #24]
   159b4:	str	ip, [sp, #20]
   159b8:	ldr	ip, [r4, #28]
   159bc:	str	ip, [sp, #24]
   159c0:	mov	r2, r0
   159c4:	mov	r0, r5
   159c8:	bl	112a8 <__fprintf_chk@plt>
   159cc:	b	15794 <close_stdout@@Base+0x2b78>
   159d0:	str	r3, [sp]
   159d4:	mov	r3, r2
   159d8:	ldr	r2, [pc, #84]	; 15a34 <close_stdout@@Base+0x2e18>
   159dc:	mov	r1, #1
   159e0:	add	r2, pc, r2
   159e4:	bl	112a8 <__fprintf_chk@plt>
   159e8:	b	156ac <close_stdout@@Base+0x2a90>
   159ec:	ldr	r1, [pc, #68]	; 15a38 <close_stdout@@Base+0x2e1c>
   159f0:	mov	r0, #0
   159f4:	add	r1, pc, r1
   159f8:	b	1573c <close_stdout@@Base+0x2b20>
   159fc:	andeq	r3, r1, r8, ror r9
   15a00:	ldrdeq	r2, [r0], -ip
   15a04:	ldrdeq	r2, [r0], -ip
   15a08:	andeq	r0, r0, r8, lsr r1
   15a0c:	andeq	r2, r0, ip, lsr #13
   15a10:	andeq	r2, r0, r8, lsr r8
   15a14:			; <UNDEFINED> instruction: 0x000026b8
   15a18:	muleq	r0, r8, r6
   15a1c:	andeq	r2, r0, ip, ror r6
   15a20:	andeq	r2, r0, ip, asr r6
   15a24:	andeq	r2, r0, ip, lsr r6
   15a28:	andeq	r2, r0, r8, lsl r6
   15a2c:	strdeq	r2, [r0], -r0
   15a30:	andeq	r2, r0, r4, asr #11
   15a34:	andeq	r2, r0, ip, lsr #7
   15a38:			; <UNDEFINED> instruction: 0x000025b0
   15a3c:	push	{r4, r5, lr}
   15a40:	sub	sp, sp, #12
   15a44:	ldr	r5, [sp, #24]
   15a48:	ldr	ip, [r5]
   15a4c:	cmp	ip, #0
   15a50:	beq	15a6c <close_stdout@@Base+0x2e50>
   15a54:	mov	lr, r5
   15a58:	mov	ip, #0
   15a5c:	ldr	r4, [lr, #4]!
   15a60:	add	ip, ip, #1
   15a64:	cmp	r4, #0
   15a68:	bne	15a5c <close_stdout@@Base+0x2e40>
   15a6c:	stm	sp, {r5, ip}
   15a70:	bl	15668 <close_stdout@@Base+0x2a4c>
   15a74:	add	sp, sp, #12
   15a78:	pop	{r4, r5, pc}
   15a7c:	push	{r4, r5, r6, r7, lr}
   15a80:	sub	sp, sp, #60	; 0x3c
   15a84:	ldr	r4, [pc, #100]	; 15af0 <close_stdout@@Base+0x2ed4>
   15a88:	mov	ip, #0
   15a8c:	ldr	r5, [pc, #96]	; 15af4 <close_stdout@@Base+0x2ed8>
   15a90:	mov	lr, ip
   15a94:	add	r4, pc, r4
   15a98:	ldr	r6, [sp, #80]	; 0x50
   15a9c:	ldr	r7, [r4, r5]
   15aa0:	add	r5, sp, #12
   15aa4:	ldr	r4, [r7]
   15aa8:	str	r4, [sp, #52]	; 0x34
   15aac:	ldr	r4, [r6, ip]
   15ab0:	cmp	r4, #0
   15ab4:	str	r4, [r5, ip]
   15ab8:	beq	15acc <close_stdout@@Base+0x2eb0>
   15abc:	add	lr, lr, #1
   15ac0:	add	ip, ip, #4
   15ac4:	cmp	lr, #10
   15ac8:	bne	15aac <close_stdout@@Base+0x2e90>
   15acc:	stm	sp, {r5, lr}
   15ad0:	bl	15668 <close_stdout@@Base+0x2a4c>
   15ad4:	ldr	r2, [sp, #52]	; 0x34
   15ad8:	ldr	r3, [r7]
   15adc:	cmp	r2, r3
   15ae0:	bne	15aec <close_stdout@@Base+0x2ed0>
   15ae4:	add	sp, sp, #60	; 0x3c
   15ae8:	pop	{r4, r5, r6, r7, pc}
   15aec:	bl	11128 <__stack_chk_fail@plt>
   15af0:	andeq	r3, r1, r4, ror #10
   15af4:	andeq	r0, r0, r8, lsl #2
   15af8:	push	{r3}		; (str r3, [sp, #-4]!)
   15afc:	push	{r4, lr}
   15b00:	sub	sp, sp, #20
   15b04:	ldr	lr, [pc, #72]	; 15b54 <close_stdout@@Base+0x2f38>
   15b08:	add	ip, sp, #32
   15b0c:	ldr	r4, [pc, #68]	; 15b58 <close_stdout@@Base+0x2f3c>
   15b10:	add	lr, pc, lr
   15b14:	ldr	r3, [sp, #28]
   15b18:	ldr	r4, [lr, r4]
   15b1c:	str	ip, [sp]
   15b20:	str	ip, [sp, #8]
   15b24:	ldr	ip, [r4]
   15b28:	str	ip, [sp, #12]
   15b2c:	bl	15a7c <close_stdout@@Base+0x2e60>
   15b30:	ldr	r2, [sp, #12]
   15b34:	ldr	r3, [r4]
   15b38:	cmp	r2, r3
   15b3c:	bne	15b50 <close_stdout@@Base+0x2f34>
   15b40:	add	sp, sp, #20
   15b44:	pop	{r4, lr}
   15b48:	add	sp, sp, #4
   15b4c:	bx	lr
   15b50:	bl	11128 <__stack_chk_fail@plt>
   15b54:	andeq	r3, r1, r8, ror #9
   15b58:	andeq	r0, r0, r8, lsl #2
   15b5c:	ldr	r1, [pc, #132]	; 15be8 <close_stdout@@Base+0x2fcc>
   15b60:	mov	r2, #5
   15b64:	push	{r4, lr}
   15b68:	add	r1, pc, r1
   15b6c:	mov	r0, #0
   15b70:	ldr	r4, [pc, #116]	; 15bec <close_stdout@@Base+0x2fd0>
   15b74:	bl	1111c <dcgettext@plt>
   15b78:	ldr	r2, [pc, #112]	; 15bf0 <close_stdout@@Base+0x2fd4>
   15b7c:	add	r4, pc, r4
   15b80:	add	r2, pc, r2
   15b84:	mov	r1, r0
   15b88:	mov	r0, #1
   15b8c:	bl	11290 <__printf_chk@plt>
   15b90:	ldr	r1, [pc, #92]	; 15bf4 <close_stdout@@Base+0x2fd8>
   15b94:	mov	r2, #5
   15b98:	mov	r0, #0
   15b9c:	add	r1, pc, r1
   15ba0:	bl	1111c <dcgettext@plt>
   15ba4:	ldr	r2, [pc, #76]	; 15bf8 <close_stdout@@Base+0x2fdc>
   15ba8:	ldr	r3, [pc, #76]	; 15bfc <close_stdout@@Base+0x2fe0>
   15bac:	add	r2, pc, r2
   15bb0:	add	r3, pc, r3
   15bb4:	mov	r1, r0
   15bb8:	mov	r0, #1
   15bbc:	bl	11290 <__printf_chk@plt>
   15bc0:	ldr	r1, [pc, #56]	; 15c00 <close_stdout@@Base+0x2fe4>
   15bc4:	mov	r0, #0
   15bc8:	mov	r2, #5
   15bcc:	add	r1, pc, r1
   15bd0:	bl	1111c <dcgettext@plt>
   15bd4:	ldr	r3, [pc, #40]	; 15c04 <close_stdout@@Base+0x2fe8>
   15bd8:	ldr	r3, [r4, r3]
   15bdc:	pop	{r4, lr}
   15be0:	ldr	r1, [r3]
   15be4:	b	1108c <fputs_unlocked@plt>
   15be8:	andeq	r2, r0, r8, ror r4
   15bec:	andeq	r3, r1, ip, ror r4
   15bf0:	andeq	r2, r0, r8, ror r4
   15bf4:	andeq	r2, r0, r4, ror r4
   15bf8:	andeq	r1, r0, r0, lsr #23
   15bfc:	andeq	r1, r0, ip, lsr #23
   15c00:	andeq	r2, r0, r8, asr r4
   15c04:	andeq	r0, r0, r8, lsr #2
   15c08:	push	{r4, lr}
   15c0c:	mov	r4, r0
   15c10:	bl	111c4 <malloc@plt>
   15c14:	rsbs	r3, r0, #1
   15c18:	movcc	r3, #0
   15c1c:	cmp	r4, #0
   15c20:	moveq	r3, #0
   15c24:	cmp	r3, #0
   15c28:	popeq	{r4, pc}
   15c2c:	bl	15e1c <close_stdout@@Base+0x3200>
   15c30:	push	{r3, r4, r5, lr}
   15c34:	mov	r4, r0
   15c38:	mvn	r0, #0
   15c3c:	mov	r5, r1
   15c40:	bl	16630 <close_stdout@@Base+0x3a14>
   15c44:	cmp	r0, r4
   15c48:	bcc	15c58 <close_stdout@@Base+0x303c>
   15c4c:	mul	r0, r4, r5
   15c50:	pop	{r3, r4, r5, lr}
   15c54:	b	15c08 <close_stdout@@Base+0x2fec>
   15c58:	bl	15e1c <close_stdout@@Base+0x3200>
   15c5c:	b	15c08 <close_stdout@@Base+0x2fec>
   15c60:	rsbs	r3, r1, #1
   15c64:	push	{r4, lr}
   15c68:	movcc	r3, #0
   15c6c:	cmp	r0, #0
   15c70:	mov	r4, r1
   15c74:	moveq	r3, #0
   15c78:	cmp	r3, #0
   15c7c:	bne	15ca0 <close_stdout@@Base+0x3084>
   15c80:	bl	11134 <realloc@plt>
   15c84:	rsbs	r3, r0, #1
   15c88:	movcc	r3, #0
   15c8c:	cmp	r4, #0
   15c90:	moveq	r3, #0
   15c94:	cmp	r3, #0
   15c98:	popeq	{r4, pc}
   15c9c:	bl	15e1c <close_stdout@@Base+0x3200>
   15ca0:	bl	110d4 <free@plt>
   15ca4:	mov	r0, #0
   15ca8:	pop	{r4, pc}
   15cac:	push	{r4, r5, r6, lr}
   15cb0:	mov	r5, r1
   15cb4:	mov	r6, r0
   15cb8:	mov	r1, r2
   15cbc:	mvn	r0, #0
   15cc0:	mov	r4, r2
   15cc4:	bl	16630 <close_stdout@@Base+0x3a14>
   15cc8:	cmp	r0, r5
   15ccc:	bcc	15ce0 <close_stdout@@Base+0x30c4>
   15cd0:	mov	r0, r6
   15cd4:	mul	r1, r5, r4
   15cd8:	pop	{r4, r5, r6, lr}
   15cdc:	b	15c60 <close_stdout@@Base+0x3044>
   15ce0:	bl	15e1c <close_stdout@@Base+0x3200>
   15ce4:	push	{r3, r4, r5, r6, r7, lr}
   15ce8:	subs	r7, r0, #0
   15cec:	mov	r5, r1
   15cf0:	mov	r6, r2
   15cf4:	ldr	r4, [r1]
   15cf8:	beq	15d30 <close_stdout@@Base+0x3114>
   15cfc:	movw	r0, #43690	; 0xaaaa
   15d00:	mov	r1, r2
   15d04:	bfi	r0, r0, #16, #16
   15d08:	bl	16630 <close_stdout@@Base+0x3a14>
   15d0c:	cmp	r4, r0
   15d10:	addcc	r3, r4, #1
   15d14:	addcc	r4, r4, r3, lsr #1
   15d18:	bcs	15d54 <close_stdout@@Base+0x3138>
   15d1c:	str	r4, [r5]
   15d20:	mov	r0, r7
   15d24:	mul	r1, r6, r4
   15d28:	pop	{r3, r4, r5, r6, r7, lr}
   15d2c:	b	15c60 <close_stdout@@Base+0x3044>
   15d30:	cmp	r4, #0
   15d34:	bne	15d1c <close_stdout@@Base+0x3100>
   15d38:	mov	r0, #64	; 0x40
   15d3c:	mov	r1, r2
   15d40:	bl	16630 <close_stdout@@Base+0x3a14>
   15d44:	cmp	r0, #0
   15d48:	movne	r4, r0
   15d4c:	addeq	r4, r0, #1
   15d50:	b	15d1c <close_stdout@@Base+0x3100>
   15d54:	bl	15e1c <close_stdout@@Base+0x3200>
   15d58:	cmp	r0, #0
   15d5c:	push	{r3, lr}
   15d60:	ldr	r3, [r1]
   15d64:	beq	15d90 <close_stdout@@Base+0x3174>
   15d68:	movw	r2, #43689	; 0xaaa9
   15d6c:	movt	r2, #43690	; 0xaaaa
   15d70:	cmp	r3, r2
   15d74:	addls	r2, r3, #1
   15d78:	addls	r3, r3, r2, lsr #1
   15d7c:	bhi	15da8 <close_stdout@@Base+0x318c>
   15d80:	str	r3, [r1]
   15d84:	mov	r1, r3
   15d88:	pop	{r3, lr}
   15d8c:	b	15c60 <close_stdout@@Base+0x3044>
   15d90:	cmp	r3, #0
   15d94:	moveq	r3, #64	; 0x40
   15d98:	str	r3, [r1]
   15d9c:	mov	r1, r3
   15da0:	pop	{r3, lr}
   15da4:	b	15c60 <close_stdout@@Base+0x3044>
   15da8:	bl	15e1c <close_stdout@@Base+0x3200>
   15dac:	push	{r4, lr}
   15db0:	mov	r4, r0
   15db4:	bl	15c08 <close_stdout@@Base+0x2fec>
   15db8:	mov	r2, r4
   15dbc:	mov	r1, #0
   15dc0:	pop	{r4, lr}
   15dc4:	b	11278 <memset@plt>
   15dc8:	push	{r3, lr}
   15dcc:	bl	11080 <calloc@plt>
   15dd0:	cmp	r0, #0
   15dd4:	popne	{r3, pc}
   15dd8:	bl	15e1c <close_stdout@@Base+0x3200>
   15ddc:	push	{r3, r4, r5, lr}
   15de0:	mov	r4, r1
   15de4:	mov	r5, r0
   15de8:	mov	r0, r1
   15dec:	bl	15c08 <close_stdout@@Base+0x2fec>
   15df0:	mov	r1, r5
   15df4:	mov	r2, r4
   15df8:	pop	{r3, r4, r5, lr}
   15dfc:	b	110ec <memcpy@plt>
   15e00:	push	{r4, lr}
   15e04:	mov	r4, r0
   15e08:	bl	11224 <strlen@plt>
   15e0c:	add	r1, r0, #1
   15e10:	mov	r0, r4
   15e14:	pop	{r4, lr}
   15e18:	b	15ddc <close_stdout@@Base+0x31c0>
   15e1c:	ldr	r3, [pc, #64]	; 15e64 <close_stdout@@Base+0x3248>
   15e20:	mov	r2, #5
   15e24:	ldr	ip, [pc, #60]	; 15e68 <close_stdout@@Base+0x324c>
   15e28:	mov	r0, #0
   15e2c:	add	r3, pc, r3
   15e30:	ldr	r1, [pc, #52]	; 15e6c <close_stdout@@Base+0x3250>
   15e34:	push	{r4, lr}
   15e38:	add	r1, pc, r1
   15e3c:	ldr	r3, [r3, ip]
   15e40:	ldr	r4, [r3]
   15e44:	bl	1111c <dcgettext@plt>
   15e48:	ldr	r2, [pc, #32]	; 15e70 <close_stdout@@Base+0x3254>
   15e4c:	mov	r1, #0
   15e50:	add	r2, pc, r2
   15e54:	mov	r3, r0
   15e58:	mov	r0, r4
   15e5c:	bl	111a0 <error@plt>
   15e60:	bl	11338 <abort@plt>
   15e64:	andeq	r3, r1, ip, asr #3
   15e68:	andeq	r0, r0, ip, lsr #2
   15e6c:	andeq	r2, r0, ip, asr r2
   15e70:	andeq	r1, r0, r8, lsr #28
   15e74:	push	{r4, r5, r6, lr}
   15e78:	sub	sp, sp, #8
   15e7c:	mov	r4, r0
   15e80:	bl	1129c <fileno@plt>
   15e84:	cmp	r0, #0
   15e88:	mov	r0, r4
   15e8c:	blt	15f08 <close_stdout@@Base+0x32ec>
   15e90:	bl	111dc <__freading@plt>
   15e94:	cmp	r0, #0
   15e98:	bne	15ed4 <close_stdout@@Base+0x32b8>
   15e9c:	mov	r0, r4
   15ea0:	bl	16088 <close_stdout@@Base+0x346c>
   15ea4:	cmp	r0, #0
   15ea8:	beq	15f04 <close_stdout@@Base+0x32e8>
   15eac:	bl	11254 <__errno_location@plt>
   15eb0:	ldr	r6, [r0]
   15eb4:	mov	r5, r0
   15eb8:	mov	r0, r4
   15ebc:	bl	112b4 <fclose@plt>
   15ec0:	cmp	r6, #0
   15ec4:	mvnne	r0, #0
   15ec8:	strne	r6, [r5]
   15ecc:	add	sp, sp, #8
   15ed0:	pop	{r4, r5, r6, pc}
   15ed4:	mov	r0, r4
   15ed8:	bl	1129c <fileno@plt>
   15edc:	mov	r1, #1
   15ee0:	mov	r2, #0
   15ee4:	mov	r3, #0
   15ee8:	str	r1, [sp]
   15eec:	bl	11164 <lseek64@plt>
   15ef0:	mvn	r2, #0
   15ef4:	mvn	r3, #0
   15ef8:	cmp	r1, r3
   15efc:	cmpeq	r0, r2
   15f00:	bne	15e9c <close_stdout@@Base+0x3280>
   15f04:	mov	r0, r4
   15f08:	add	sp, sp, #8
   15f0c:	pop	{r4, r5, r6, lr}
   15f10:	b	112b4 <fclose@plt>
   15f14:	push	{r1, r2, r3}
   15f18:	movw	ip, #1030	; 0x406
   15f1c:	ldr	r3, [pc, #336]	; 16074 <close_stdout@@Base+0x3458>
   15f20:	push	{r4, r5, r6, r7, r8, lr}
   15f24:	add	r3, pc, r3
   15f28:	ldr	lr, [pc, #328]	; 16078 <close_stdout@@Base+0x345c>
   15f2c:	sub	sp, sp, #12
   15f30:	add	r2, sp, #40	; 0x28
   15f34:	mov	r6, r0
   15f38:	ldr	r1, [sp, #36]	; 0x24
   15f3c:	ldr	r4, [r3, lr]
   15f40:	cmp	r1, ip
   15f44:	str	r2, [sp]
   15f48:	ldr	r3, [r4]
   15f4c:	str	r3, [sp, #4]
   15f50:	bne	15fd4 <close_stdout@@Base+0x33b8>
   15f54:	ldr	r8, [pc, #288]	; 1607c <close_stdout@@Base+0x3460>
   15f58:	add	r3, sp, #44	; 0x2c
   15f5c:	str	r3, [sp]
   15f60:	add	r8, pc, r8
   15f64:	ldr	r7, [sp, #40]	; 0x28
   15f68:	ldr	r3, [r8]
   15f6c:	mov	r2, r7
   15f70:	cmp	r3, #0
   15f74:	blt	16060 <close_stdout@@Base+0x3444>
   15f78:	bl	11248 <fcntl@plt>
   15f7c:	subs	r5, r0, #0
   15f80:	blt	15fe4 <close_stdout@@Base+0x33c8>
   15f84:	ldr	r3, [pc, #244]	; 16080 <close_stdout@@Base+0x3464>
   15f88:	mov	r2, #1
   15f8c:	add	r3, pc, r3
   15f90:	str	r2, [r3]
   15f94:	cmp	r5, #0
   15f98:	blt	15fb0 <close_stdout@@Base+0x3394>
   15f9c:	ldr	r3, [pc, #224]	; 16084 <close_stdout@@Base+0x3468>
   15fa0:	add	r3, pc, r3
   15fa4:	ldr	r3, [r3]
   15fa8:	cmn	r3, #1
   15fac:	beq	16014 <close_stdout@@Base+0x33f8>
   15fb0:	ldr	r2, [sp, #4]
   15fb4:	mov	r0, r5
   15fb8:	ldr	r3, [r4]
   15fbc:	cmp	r2, r3
   15fc0:	bne	16070 <close_stdout@@Base+0x3454>
   15fc4:	add	sp, sp, #12
   15fc8:	pop	{r4, r5, r6, r7, r8, lr}
   15fcc:	add	sp, sp, #12
   15fd0:	bx	lr
   15fd4:	ldr	r2, [sp, #40]	; 0x28
   15fd8:	bl	11248 <fcntl@plt>
   15fdc:	mov	r5, r0
   15fe0:	b	15fb0 <close_stdout@@Base+0x3394>
   15fe4:	bl	11254 <__errno_location@plt>
   15fe8:	ldr	r3, [r0]
   15fec:	cmp	r3, #22
   15ff0:	bne	15f84 <close_stdout@@Base+0x3368>
   15ff4:	mov	r0, r6
   15ff8:	mov	r2, r7
   15ffc:	mov	r1, #0
   16000:	bl	15f14 <close_stdout@@Base+0x32f8>
   16004:	subs	r5, r0, #0
   16008:	blt	15fb0 <close_stdout@@Base+0x3394>
   1600c:	mvn	r3, #0
   16010:	str	r3, [r8]
   16014:	mov	r0, r5
   16018:	mov	r1, #1
   1601c:	bl	11248 <fcntl@plt>
   16020:	subs	r2, r0, #0
   16024:	blt	16040 <close_stdout@@Base+0x3424>
   16028:	orr	r2, r2, #1
   1602c:	mov	r0, r5
   16030:	mov	r1, #2
   16034:	bl	11248 <fcntl@plt>
   16038:	cmn	r0, #1
   1603c:	bne	15fb0 <close_stdout@@Base+0x3394>
   16040:	bl	11254 <__errno_location@plt>
   16044:	ldr	r7, [r0]
   16048:	mov	r6, r0
   1604c:	mov	r0, r5
   16050:	mvn	r5, #0
   16054:	bl	11344 <close@plt>
   16058:	str	r7, [r6]
   1605c:	b	15fb0 <close_stdout@@Base+0x3394>
   16060:	mov	r1, #0
   16064:	bl	15f14 <close_stdout@@Base+0x32f8>
   16068:	mov	r5, r0
   1606c:	b	15f94 <close_stdout@@Base+0x3378>
   16070:	bl	11128 <__stack_chk_fail@plt>
   16074:	ldrdeq	r3, [r1], -r4
   16078:	andeq	r0, r0, r8, lsl #2
   1607c:	andeq	r3, r1, r8, ror r3
   16080:	andeq	r3, r1, ip, asr #6
   16084:	andeq	r3, r1, r8, lsr r3
   16088:	push	{r4, lr}
   1608c:	subs	r4, r0, #0
   16090:	sub	sp, sp, #8
   16094:	beq	160a4 <close_stdout@@Base+0x3488>
   16098:	bl	111dc <__freading@plt>
   1609c:	cmp	r0, #0
   160a0:	bne	160b4 <close_stdout@@Base+0x3498>
   160a4:	mov	r0, r4
   160a8:	add	sp, sp, #8
   160ac:	pop	{r4, lr}
   160b0:	b	110c8 <fflush@plt>
   160b4:	ldr	r3, [r4]
   160b8:	tst	r3, #256	; 0x100
   160bc:	beq	160a4 <close_stdout@@Base+0x3488>
   160c0:	mov	r3, #1
   160c4:	mov	r0, r4
   160c8:	str	r3, [sp]
   160cc:	mov	r2, #0
   160d0:	mov	r3, #0
   160d4:	bl	160e8 <close_stdout@@Base+0x34cc>
   160d8:	mov	r0, r4
   160dc:	add	sp, sp, #8
   160e0:	pop	{r4, lr}
   160e4:	b	110c8 <fflush@plt>
   160e8:	push	{r4, r5, r6, r7, lr}
   160ec:	sub	sp, sp, #20
   160f0:	ldmib	r0, {r1, ip}
   160f4:	mov	r6, r0
   160f8:	ldr	r4, [sp, #40]	; 0x28
   160fc:	cmp	ip, r1
   16100:	beq	16118 <close_stdout@@Base+0x34fc>
   16104:	str	r4, [sp, #40]	; 0x28
   16108:	mov	r0, r6
   1610c:	add	sp, sp, #20
   16110:	pop	{r4, r5, r6, r7, lr}
   16114:	b	112c0 <fseeko64@plt>
   16118:	ldr	ip, [r0, #20]
   1611c:	ldr	r1, [r0, #16]
   16120:	cmp	ip, r1
   16124:	bne	16104 <close_stdout@@Base+0x34e8>
   16128:	ldr	r7, [r0, #36]	; 0x24
   1612c:	cmp	r7, #0
   16130:	bne	16104 <close_stdout@@Base+0x34e8>
   16134:	str	r2, [sp, #12]
   16138:	mvn	r5, #0
   1613c:	str	r3, [sp, #8]
   16140:	bl	1129c <fileno@plt>
   16144:	str	r4, [sp]
   16148:	mvn	r4, #0
   1614c:	ldr	r2, [sp, #12]
   16150:	ldr	r3, [sp, #8]
   16154:	bl	11164 <lseek64@plt>
   16158:	mov	r2, r0
   1615c:	mov	r3, r1
   16160:	cmp	r3, r5
   16164:	cmpeq	r2, r4
   16168:	beq	16188 <close_stdout@@Base+0x356c>
   1616c:	ldr	r1, [r6]
   16170:	mov	r0, r7
   16174:	strd	r2, [r6, #80]	; 0x50
   16178:	bic	r3, r1, #16
   1617c:	str	r3, [r6]
   16180:	add	sp, sp, #20
   16184:	pop	{r4, r5, r6, r7, pc}
   16188:	mvn	r0, #0
   1618c:	b	16180 <close_stdout@@Base+0x3564>
   16190:	push	{r4, r5, r6, lr}
   16194:	mov	r4, r0
   16198:	bl	11188 <__fpending@plt>
   1619c:	mov	r6, r0
   161a0:	mov	r0, r4
   161a4:	ldr	r4, [r4]
   161a8:	bl	15e74 <close_stdout@@Base+0x3258>
   161ac:	and	r4, r4, #32
   161b0:	adds	r5, r0, #0
   161b4:	movne	r5, #1
   161b8:	cmp	r4, #0
   161bc:	bne	161dc <close_stdout@@Base+0x35c0>
   161c0:	cmp	r5, #0
   161c4:	beq	161d4 <close_stdout@@Base+0x35b8>
   161c8:	cmp	r6, #0
   161cc:	beq	161f8 <close_stdout@@Base+0x35dc>
   161d0:	mvn	r4, #0
   161d4:	mov	r0, r4
   161d8:	pop	{r4, r5, r6, pc}
   161dc:	cmp	r5, #0
   161e0:	bne	161d0 <close_stdout@@Base+0x35b4>
   161e4:	bl	11254 <__errno_location@plt>
   161e8:	mvn	r4, #0
   161ec:	str	r5, [r0]
   161f0:	mov	r0, r4
   161f4:	pop	{r4, r5, r6, pc}
   161f8:	bl	11254 <__errno_location@plt>
   161fc:	ldr	r4, [r0]
   16200:	subs	r4, r4, #9
   16204:	mvnne	r4, #0
   16208:	mov	r0, r4
   1620c:	pop	{r4, r5, r6, pc}
   16210:	ldr	r3, [pc, #984]	; 165f0 <close_stdout@@Base+0x39d4>
   16214:	mov	r0, #14
   16218:	ldr	r2, [pc, #980]	; 165f4 <close_stdout@@Base+0x39d8>
   1621c:	add	r3, pc, r3
   16220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16224:	sub	sp, sp, #132	; 0x84
   16228:	ldr	r6, [r3, r2]
   1622c:	ldr	r3, [r6]
   16230:	str	r3, [sp, #124]	; 0x7c
   16234:	bl	112fc <nl_langinfo@plt>
   16238:	subs	r5, r0, #0
   1623c:	beq	162f0 <close_stdout@@Base+0x36d4>
   16240:	ldr	r3, [pc, #944]	; 165f8 <close_stdout@@Base+0x39dc>
   16244:	ldr	r4, [pc, r3]
   16248:	cmp	r4, #0
   1624c:	beq	162fc <close_stdout@@Base+0x36e0>
   16250:	ldrb	r7, [r4]
   16254:	cmp	r7, #0
   16258:	bne	1628c <close_stdout@@Base+0x3670>
   1625c:	b	162c4 <close_stdout@@Base+0x36a8>
   16260:	mov	r0, r4
   16264:	bl	11224 <strlen@plt>
   16268:	add	r0, r0, #1
   1626c:	add	r7, r4, r0
   16270:	mov	r0, r7
   16274:	bl	11224 <strlen@plt>
   16278:	add	r0, r0, #1
   1627c:	add	r4, r7, r0
   16280:	ldrb	r7, [r7, r0]
   16284:	cmp	r7, #0
   16288:	beq	162c4 <close_stdout@@Base+0x36a8>
   1628c:	mov	r0, r5
   16290:	mov	r1, r4
   16294:	bl	110b0 <strcmp@plt>
   16298:	cmp	r0, #0
   1629c:	beq	162b4 <close_stdout@@Base+0x3698>
   162a0:	cmp	r7, #42	; 0x2a
   162a4:	bne	16260 <close_stdout@@Base+0x3644>
   162a8:	ldrb	r3, [r4, #1]
   162ac:	cmp	r3, #0
   162b0:	bne	16260 <close_stdout@@Base+0x3644>
   162b4:	mov	r0, r4
   162b8:	bl	11224 <strlen@plt>
   162bc:	add	r0, r0, #1
   162c0:	add	r5, r4, r0
   162c4:	ldrb	r3, [r5]
   162c8:	cmp	r3, #0
   162cc:	ldreq	r5, [pc, #808]	; 165fc <close_stdout@@Base+0x39e0>
   162d0:	addeq	r5, pc, r5
   162d4:	ldr	r2, [sp, #124]	; 0x7c
   162d8:	mov	r0, r5
   162dc:	ldr	r3, [r6]
   162e0:	cmp	r2, r3
   162e4:	bne	165c4 <close_stdout@@Base+0x39a8>
   162e8:	add	sp, sp, #132	; 0x84
   162ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162f0:	ldr	r5, [pc, #776]	; 16600 <close_stdout@@Base+0x39e4>
   162f4:	add	r5, pc, r5
   162f8:	b	16240 <close_stdout@@Base+0x3624>
   162fc:	ldr	r0, [pc, #768]	; 16604 <close_stdout@@Base+0x39e8>
   16300:	add	r0, pc, r0
   16304:	bl	111b8 <getenv@plt>
   16308:	subs	r8, r0, #0
   1630c:	beq	1659c <close_stdout@@Base+0x3980>
   16310:	ldrb	r3, [r8]
   16314:	cmp	r3, #0
   16318:	beq	16530 <close_stdout@@Base+0x3914>
   1631c:	bl	11224 <strlen@plt>
   16320:	subs	sl, r0, #0
   16324:	subne	r3, sl, #1
   16328:	bne	16540 <close_stdout@@Base+0x3924>
   1632c:	mov	r9, #0
   16330:	mov	fp, r9
   16334:	add	r9, sl, r9
   16338:	add	r0, r9, #14
   1633c:	bl	111c4 <malloc@plt>
   16340:	subs	r7, r0, #0
   16344:	beq	16590 <close_stdout@@Base+0x3974>
   16348:	mov	r1, r8
   1634c:	mov	r2, sl
   16350:	bl	110ec <memcpy@plt>
   16354:	cmp	fp, #0
   16358:	add	ip, r7, r9
   1635c:	movne	r3, #47	; 0x2f
   16360:	strbne	r3, [r7, sl]
   16364:	ldr	r3, [pc, #668]	; 16608 <close_stdout@@Base+0x39ec>
   16368:	add	r3, pc, r3
   1636c:	ldm	r3!, {r0, r1, r2}
   16370:	ldrh	r3, [r3]
   16374:	str	r0, [r7, r9]
   16378:	mov	r0, r7
   1637c:	str	r1, [ip, #4]
   16380:	mov	r1, #32768	; 0x8000
   16384:	strh	r3, [ip, #12]
   16388:	str	r2, [ip, #8]
   1638c:	bl	111ac <open64@plt>
   16390:	subs	r8, r0, #0
   16394:	blt	16558 <close_stdout@@Base+0x393c>
   16398:	ldr	r1, [pc, #620]	; 1660c <close_stdout@@Base+0x39f0>
   1639c:	add	r1, pc, r1
   163a0:	bl	11074 <fdopen@plt>
   163a4:	subs	fp, r0, #0
   163a8:	beq	165b0 <close_stdout@@Base+0x3994>
   163ac:	ldr	r0, [pc, #604]	; 16610 <close_stdout@@Base+0x39f4>
   163b0:	add	sl, sp, #20
   163b4:	add	r9, sp, #72	; 0x48
   163b8:	mov	r8, #0
   163bc:	add	r0, pc, r0
   163c0:	str	r0, [sp, #12]
   163c4:	ldr	r3, [fp, #4]
   163c8:	ldr	r2, [fp, #8]
   163cc:	cmp	r3, r2
   163d0:	bcs	164bc <close_stdout@@Base+0x38a0>
   163d4:	add	r2, r3, #1
   163d8:	str	r2, [fp, #4]
   163dc:	ldrb	r0, [r3]
   163e0:	cmp	r0, #32
   163e4:	beq	163c4 <close_stdout@@Base+0x37a8>
   163e8:	sub	r3, r0, #9
   163ec:	cmp	r3, #1
   163f0:	bls	163c4 <close_stdout@@Base+0x37a8>
   163f4:	cmp	r0, #35	; 0x23
   163f8:	beq	164d0 <close_stdout@@Base+0x38b4>
   163fc:	mov	r1, fp
   16400:	bl	1123c <ungetc@plt>
   16404:	mov	r0, fp
   16408:	ldr	r1, [sp, #12]
   1640c:	mov	r2, sl
   16410:	mov	r3, r9
   16414:	bl	11284 <fscanf@plt>
   16418:	cmp	r0, #1
   1641c:	ble	16500 <close_stdout@@Base+0x38e4>
   16420:	mov	r0, sl
   16424:	bl	11224 <strlen@plt>
   16428:	str	r0, [sp, #8]
   1642c:	mov	r0, r9
   16430:	bl	11224 <strlen@plt>
   16434:	cmp	r8, #0
   16438:	mov	r2, r0
   1643c:	bne	16564 <close_stdout@@Base+0x3948>
   16440:	ldr	r3, [sp, #8]
   16444:	str	r2, [sp]
   16448:	add	r8, r0, r3
   1644c:	add	r0, r8, #3
   16450:	add	r8, r8, #2
   16454:	bl	111c4 <malloc@plt>
   16458:	ldr	r2, [sp]
   1645c:	mov	r3, r0
   16460:	cmp	r3, #0
   16464:	beq	165c8 <close_stdout@@Base+0x39ac>
   16468:	ldr	r0, [sp, #8]
   1646c:	movw	r1, #65534	; 0xfffe
   16470:	movt	r1, #65535	; 0xffff
   16474:	rsb	r2, r2, r8
   16478:	rsb	r1, r0, r1
   1647c:	stm	sp, {r2, r3}
   16480:	add	r0, r1, r2
   16484:	mov	r1, sl
   16488:	add	r0, r3, r0
   1648c:	mov	r4, r3
   16490:	bl	1117c <strcpy@plt>
   16494:	ldr	r2, [sp]
   16498:	ldr	r3, [sp, #4]
   1649c:	mov	r1, r9
   164a0:	sub	r0, r2, #1
   164a4:	add	r0, r3, r0
   164a8:	bl	1117c <strcpy@plt>
   164ac:	ldr	r3, [fp, #4]
   164b0:	ldr	r2, [fp, #8]
   164b4:	cmp	r3, r2
   164b8:	bcc	163d4 <close_stdout@@Base+0x37b8>
   164bc:	mov	r0, fp
   164c0:	bl	112cc <__uflow@plt>
   164c4:	cmn	r0, #1
   164c8:	beq	16500 <close_stdout@@Base+0x38e4>
   164cc:	b	163e0 <close_stdout@@Base+0x37c4>
   164d0:	ldr	r3, [fp, #4]
   164d4:	ldr	r2, [fp, #8]
   164d8:	cmp	r3, r2
   164dc:	bcs	165e4 <close_stdout@@Base+0x39c8>
   164e0:	add	r2, r3, #1
   164e4:	str	r2, [fp, #4]
   164e8:	ldrb	r0, [r3]
   164ec:	cmp	r0, #10
   164f0:	cmnne	r0, #1
   164f4:	bne	164d0 <close_stdout@@Base+0x38b4>
   164f8:	cmn	r0, #1
   164fc:	bne	163c4 <close_stdout@@Base+0x37a8>
   16500:	mov	r0, fp
   16504:	bl	15e74 <close_stdout@@Base+0x3258>
   16508:	cmp	r8, #0
   1650c:	beq	16558 <close_stdout@@Base+0x393c>
   16510:	mov	r3, #0
   16514:	strb	r3, [r4, r8]
   16518:	mov	r0, r7
   1651c:	bl	110d4 <free@plt>
   16520:	ldr	r3, [pc, #236]	; 16614 <close_stdout@@Base+0x39f8>
   16524:	add	r3, pc, r3
   16528:	str	r4, [r3]
   1652c:	b	16250 <close_stdout@@Base+0x3634>
   16530:	ldr	r8, [pc, #224]	; 16618 <close_stdout@@Base+0x39fc>
   16534:	mov	r3, #7
   16538:	mov	sl, #8
   1653c:	add	r8, pc, r8
   16540:	ldrb	r3, [r8, r3]
   16544:	cmp	r3, #47	; 0x2f
   16548:	movne	r9, #1
   1654c:	movne	fp, r9
   16550:	bne	16334 <close_stdout@@Base+0x3718>
   16554:	b	1632c <close_stdout@@Base+0x3710>
   16558:	ldr	r4, [pc, #188]	; 1661c <close_stdout@@Base+0x3a00>
   1655c:	add	r4, pc, r4
   16560:	b	16518 <close_stdout@@Base+0x38fc>
   16564:	ldr	r0, [sp, #8]
   16568:	str	r2, [sp]
   1656c:	add	r3, r0, r2
   16570:	mov	r0, r4
   16574:	add	r8, r3, r8
   16578:	add	r1, r8, #3
   1657c:	add	r8, r8, #2
   16580:	bl	11134 <realloc@plt>
   16584:	ldr	r2, [sp]
   16588:	mov	r3, r0
   1658c:	b	16460 <close_stdout@@Base+0x3844>
   16590:	ldr	r4, [pc, #136]	; 16620 <close_stdout@@Base+0x3a04>
   16594:	add	r4, pc, r4
   16598:	b	16520 <close_stdout@@Base+0x3904>
   1659c:	ldr	r8, [pc, #128]	; 16624 <close_stdout@@Base+0x3a08>
   165a0:	mov	r3, #7
   165a4:	mov	sl, #8
   165a8:	add	r8, pc, r8
   165ac:	b	16540 <close_stdout@@Base+0x3924>
   165b0:	ldr	r4, [pc, #112]	; 16628 <close_stdout@@Base+0x3a0c>
   165b4:	mov	r0, r8
   165b8:	add	r4, pc, r4
   165bc:	bl	11344 <close@plt>
   165c0:	b	16518 <close_stdout@@Base+0x38fc>
   165c4:	bl	11128 <__stack_chk_fail@plt>
   165c8:	mov	r0, r4
   165cc:	ldr	r4, [pc, #88]	; 1662c <close_stdout@@Base+0x3a10>
   165d0:	bl	110d4 <free@plt>
   165d4:	mov	r0, fp
   165d8:	add	r4, pc, r4
   165dc:	bl	15e74 <close_stdout@@Base+0x3258>
   165e0:	b	16518 <close_stdout@@Base+0x38fc>
   165e4:	mov	r0, fp
   165e8:	bl	112cc <__uflow@plt>
   165ec:	b	164ec <close_stdout@@Base+0x38d0>
   165f0:	ldrdeq	r2, [r1], -ip
   165f4:	andeq	r0, r0, r8, lsl #2
   165f8:	muleq	r1, r8, r0
   165fc:	andeq	r1, r0, r4, ror #27
   16600:	andeq	r1, r0, r4, asr #5
   16604:			; <UNDEFINED> instruction: 0x00001dbc
   16608:	andeq	r1, r0, r4, ror #26
   1660c:	ldrdeq	r0, [r0], -r4
   16610:	andeq	r1, r0, r0, lsr #26
   16614:			; <UNDEFINED> instruction: 0x00012db8
   16618:	andeq	r1, r0, ip, ror #22
   1661c:	andeq	r1, r0, ip, asr r0
   16620:	andeq	r1, r0, r4, lsr #32
   16624:	andeq	r1, r0, r0, lsl #22
   16628:	andeq	r1, r0, r0
   1662c:	andeq	r0, r0, r0, ror #31
   16630:	subs	r2, r1, #1
   16634:	bxeq	lr
   16638:	bcc	16810 <close_stdout@@Base+0x3bf4>
   1663c:	cmp	r0, r1
   16640:	bls	167f4 <close_stdout@@Base+0x3bd8>
   16644:	tst	r1, r2
   16648:	beq	16800 <close_stdout@@Base+0x3be4>
   1664c:	clz	r3, r0
   16650:	clz	r2, r1
   16654:	sub	r3, r2, r3
   16658:	rsbs	r3, r3, #31
   1665c:	addne	r3, r3, r3, lsl #1
   16660:	mov	r2, #0
   16664:	addne	pc, pc, r3, lsl #2
   16668:	nop	{0}
   1666c:	cmp	r0, r1, lsl #31
   16670:	adc	r2, r2, r2
   16674:	subcs	r0, r0, r1, lsl #31
   16678:	cmp	r0, r1, lsl #30
   1667c:	adc	r2, r2, r2
   16680:	subcs	r0, r0, r1, lsl #30
   16684:	cmp	r0, r1, lsl #29
   16688:	adc	r2, r2, r2
   1668c:	subcs	r0, r0, r1, lsl #29
   16690:	cmp	r0, r1, lsl #28
   16694:	adc	r2, r2, r2
   16698:	subcs	r0, r0, r1, lsl #28
   1669c:	cmp	r0, r1, lsl #27
   166a0:	adc	r2, r2, r2
   166a4:	subcs	r0, r0, r1, lsl #27
   166a8:	cmp	r0, r1, lsl #26
   166ac:	adc	r2, r2, r2
   166b0:	subcs	r0, r0, r1, lsl #26
   166b4:	cmp	r0, r1, lsl #25
   166b8:	adc	r2, r2, r2
   166bc:	subcs	r0, r0, r1, lsl #25
   166c0:	cmp	r0, r1, lsl #24
   166c4:	adc	r2, r2, r2
   166c8:	subcs	r0, r0, r1, lsl #24
   166cc:	cmp	r0, r1, lsl #23
   166d0:	adc	r2, r2, r2
   166d4:	subcs	r0, r0, r1, lsl #23
   166d8:	cmp	r0, r1, lsl #22
   166dc:	adc	r2, r2, r2
   166e0:	subcs	r0, r0, r1, lsl #22
   166e4:	cmp	r0, r1, lsl #21
   166e8:	adc	r2, r2, r2
   166ec:	subcs	r0, r0, r1, lsl #21
   166f0:	cmp	r0, r1, lsl #20
   166f4:	adc	r2, r2, r2
   166f8:	subcs	r0, r0, r1, lsl #20
   166fc:	cmp	r0, r1, lsl #19
   16700:	adc	r2, r2, r2
   16704:	subcs	r0, r0, r1, lsl #19
   16708:	cmp	r0, r1, lsl #18
   1670c:	adc	r2, r2, r2
   16710:	subcs	r0, r0, r1, lsl #18
   16714:	cmp	r0, r1, lsl #17
   16718:	adc	r2, r2, r2
   1671c:	subcs	r0, r0, r1, lsl #17
   16720:	cmp	r0, r1, lsl #16
   16724:	adc	r2, r2, r2
   16728:	subcs	r0, r0, r1, lsl #16
   1672c:	cmp	r0, r1, lsl #15
   16730:	adc	r2, r2, r2
   16734:	subcs	r0, r0, r1, lsl #15
   16738:	cmp	r0, r1, lsl #14
   1673c:	adc	r2, r2, r2
   16740:	subcs	r0, r0, r1, lsl #14
   16744:	cmp	r0, r1, lsl #13
   16748:	adc	r2, r2, r2
   1674c:	subcs	r0, r0, r1, lsl #13
   16750:	cmp	r0, r1, lsl #12
   16754:	adc	r2, r2, r2
   16758:	subcs	r0, r0, r1, lsl #12
   1675c:	cmp	r0, r1, lsl #11
   16760:	adc	r2, r2, r2
   16764:	subcs	r0, r0, r1, lsl #11
   16768:	cmp	r0, r1, lsl #10
   1676c:	adc	r2, r2, r2
   16770:	subcs	r0, r0, r1, lsl #10
   16774:	cmp	r0, r1, lsl #9
   16778:	adc	r2, r2, r2
   1677c:	subcs	r0, r0, r1, lsl #9
   16780:	cmp	r0, r1, lsl #8
   16784:	adc	r2, r2, r2
   16788:	subcs	r0, r0, r1, lsl #8
   1678c:	cmp	r0, r1, lsl #7
   16790:	adc	r2, r2, r2
   16794:	subcs	r0, r0, r1, lsl #7
   16798:	cmp	r0, r1, lsl #6
   1679c:	adc	r2, r2, r2
   167a0:	subcs	r0, r0, r1, lsl #6
   167a4:	cmp	r0, r1, lsl #5
   167a8:	adc	r2, r2, r2
   167ac:	subcs	r0, r0, r1, lsl #5
   167b0:	cmp	r0, r1, lsl #4
   167b4:	adc	r2, r2, r2
   167b8:	subcs	r0, r0, r1, lsl #4
   167bc:	cmp	r0, r1, lsl #3
   167c0:	adc	r2, r2, r2
   167c4:	subcs	r0, r0, r1, lsl #3
   167c8:	cmp	r0, r1, lsl #2
   167cc:	adc	r2, r2, r2
   167d0:	subcs	r0, r0, r1, lsl #2
   167d4:	cmp	r0, r1, lsl #1
   167d8:	adc	r2, r2, r2
   167dc:	subcs	r0, r0, r1, lsl #1
   167e0:	cmp	r0, r1
   167e4:	adc	r2, r2, r2
   167e8:	subcs	r0, r0, r1
   167ec:	mov	r0, r2
   167f0:	bx	lr
   167f4:	moveq	r0, #1
   167f8:	movne	r0, #0
   167fc:	bx	lr
   16800:	clz	r2, r1
   16804:	rsb	r2, r2, #31
   16808:	lsr	r0, r0, r2
   1680c:	bx	lr
   16810:	cmp	r0, #0
   16814:	mvnne	r0, #0
   16818:	b	16878 <close_stdout@@Base+0x3c5c>
   1681c:	cmp	r1, #0
   16820:	beq	16810 <close_stdout@@Base+0x3bf4>
   16824:	push	{r0, r1, lr}
   16828:	bl	16630 <close_stdout@@Base+0x3a14>
   1682c:	pop	{r1, r2, lr}
   16830:	mul	r3, r2, r0
   16834:	sub	r1, r1, r3
   16838:	bx	lr
   1683c:	cmp	r3, #0
   16840:	cmpeq	r2, #0
   16844:	bne	1685c <close_stdout@@Base+0x3c40>
   16848:	cmp	r1, #0
   1684c:	cmpeq	r0, #0
   16850:	mvnne	r1, #0
   16854:	mvnne	r0, #0
   16858:	b	16878 <close_stdout@@Base+0x3c5c>
   1685c:	sub	sp, sp, #8
   16860:	push	{sp, lr}
   16864:	bl	168c4 <close_stdout@@Base+0x3ca8>
   16868:	ldr	lr, [sp, #4]
   1686c:	add	sp, sp, #8
   16870:	pop	{r2, r3}
   16874:	bx	lr
   16878:	push	{r1, lr}
   1687c:	mov	r0, #8
   16880:	bl	11098 <raise@plt>
   16884:	pop	{r1, pc}
   16888:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1688c:	mov	r8, r2
   16890:	mov	r6, r0
   16894:	mov	r7, r1
   16898:	mov	sl, r3
   1689c:	ldr	r9, [sp, #32]
   168a0:	bl	16900 <close_stdout@@Base+0x3ce4>
   168a4:	umull	r4, r5, r8, r0
   168a8:	mul	r8, r8, r1
   168ac:	mla	r2, r0, sl, r8
   168b0:	add	r5, r2, r5
   168b4:	subs	r4, r6, r4
   168b8:	sbc	r5, r7, r5
   168bc:	strd	r4, [r9]
   168c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   168c4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   168c8:	mov	r8, r2
   168cc:	mov	r6, r0
   168d0:	mov	r7, r1
   168d4:	mov	r5, r3
   168d8:	ldr	r9, [sp, #32]
   168dc:	bl	16d8c <close_stdout@@Base+0x4170>
   168e0:	mul	r3, r0, r5
   168e4:	umull	r4, r5, r0, r8
   168e8:	mla	r8, r8, r1, r3
   168ec:	add	r5, r8, r5
   168f0:	subs	r4, r6, r4
   168f4:	sbc	r5, r7, r5
   168f8:	strd	r4, [r9]
   168fc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16900:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16904:	rsbs	r4, r0, #0
   16908:	rsc	r5, r1, #0
   1690c:	cmp	r1, #0
   16910:	mvn	r6, #0
   16914:	sub	sp, sp, #12
   16918:	movge	r4, r0
   1691c:	movge	r5, r1
   16920:	movge	r6, #0
   16924:	cmp	r3, #0
   16928:	blt	16b60 <close_stdout@@Base+0x3f44>
   1692c:	cmp	r3, #0
   16930:	mov	sl, r4
   16934:	mov	ip, r5
   16938:	mov	r0, r2
   1693c:	mov	r1, r3
   16940:	mov	r8, r2
   16944:	mov	r7, r4
   16948:	mov	r9, r5
   1694c:	bne	16a44 <close_stdout@@Base+0x3e28>
   16950:	cmp	r2, r5
   16954:	bls	16a80 <close_stdout@@Base+0x3e64>
   16958:	clz	r3, r2
   1695c:	cmp	r3, #0
   16960:	rsbne	r2, r3, #32
   16964:	lslne	r8, r0, r3
   16968:	lsrne	r2, r4, r2
   1696c:	lslne	r7, r4, r3
   16970:	orrne	r9, r2, r5, lsl r3
   16974:	lsr	r4, r8, #16
   16978:	uxth	sl, r8
   1697c:	mov	r1, r4
   16980:	mov	r0, r9
   16984:	bl	16630 <close_stdout@@Base+0x3a14>
   16988:	mov	r1, r4
   1698c:	mov	fp, r0
   16990:	mov	r0, r9
   16994:	bl	1681c <close_stdout@@Base+0x3c00>
   16998:	mul	r0, sl, fp
   1699c:	lsr	r2, r7, #16
   169a0:	orr	r1, r2, r1, lsl #16
   169a4:	cmp	r0, r1
   169a8:	bls	169cc <close_stdout@@Base+0x3db0>
   169ac:	adds	r1, r1, r8
   169b0:	sub	r3, fp, #1
   169b4:	bcs	169c8 <close_stdout@@Base+0x3dac>
   169b8:	cmp	r0, r1
   169bc:	subhi	fp, fp, #2
   169c0:	addhi	r1, r1, r8
   169c4:	bhi	169cc <close_stdout@@Base+0x3db0>
   169c8:	mov	fp, r3
   169cc:	rsb	r9, r0, r1
   169d0:	mov	r1, r4
   169d4:	uxth	r7, r7
   169d8:	mov	r0, r9
   169dc:	bl	16630 <close_stdout@@Base+0x3a14>
   169e0:	mov	r1, r4
   169e4:	mov	r5, r0
   169e8:	mov	r0, r9
   169ec:	bl	1681c <close_stdout@@Base+0x3c00>
   169f0:	mul	sl, sl, r5
   169f4:	orr	r1, r7, r1, lsl #16
   169f8:	cmp	sl, r1
   169fc:	bls	16a1c <close_stdout@@Base+0x3e00>
   16a00:	adds	r8, r1, r8
   16a04:	sub	r3, r5, #1
   16a08:	bcs	16a18 <close_stdout@@Base+0x3dfc>
   16a0c:	cmp	sl, r8
   16a10:	subhi	r5, r5, #2
   16a14:	bhi	16a1c <close_stdout@@Base+0x3e00>
   16a18:	mov	r5, r3
   16a1c:	orr	r3, r5, fp, lsl #16
   16a20:	mov	r4, #0
   16a24:	cmp	r6, #0
   16a28:	mov	r0, r3
   16a2c:	mov	r1, r4
   16a30:	beq	16a3c <close_stdout@@Base+0x3e20>
   16a34:	rsbs	r0, r0, #0
   16a38:	rsc	r1, r1, #0
   16a3c:	add	sp, sp, #12
   16a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a44:	cmp	r3, r5
   16a48:	movhi	r4, #0
   16a4c:	movhi	r3, r4
   16a50:	bhi	16a24 <close_stdout@@Base+0x3e08>
   16a54:	clz	r5, r1
   16a58:	cmp	r5, #0
   16a5c:	bne	16c4c <close_stdout@@Base+0x4030>
   16a60:	cmp	r1, ip
   16a64:	cmpcs	r2, sl
   16a68:	movhi	r4, #0
   16a6c:	movls	r4, #1
   16a70:	movls	r3, #1
   16a74:	movls	r4, r5
   16a78:	movhi	r3, r4
   16a7c:	b	16a24 <close_stdout@@Base+0x3e08>
   16a80:	cmp	r2, #0
   16a84:	bne	16a98 <close_stdout@@Base+0x3e7c>
   16a88:	mov	r1, r2
   16a8c:	mov	r0, #1
   16a90:	bl	16630 <close_stdout@@Base+0x3a14>
   16a94:	mov	r8, r0
   16a98:	clz	r3, r8
   16a9c:	cmp	r3, #0
   16aa0:	bne	16b70 <close_stdout@@Base+0x3f54>
   16aa4:	rsb	r9, r8, r9
   16aa8:	lsr	r5, r8, #16
   16aac:	uxth	sl, r8
   16ab0:	mov	r4, #1
   16ab4:	mov	r1, r5
   16ab8:	mov	r0, r9
   16abc:	bl	16630 <close_stdout@@Base+0x3a14>
   16ac0:	mov	r1, r5
   16ac4:	mov	fp, r0
   16ac8:	mov	r0, r9
   16acc:	bl	1681c <close_stdout@@Base+0x3c00>
   16ad0:	mul	r0, sl, fp
   16ad4:	lsr	r2, r7, #16
   16ad8:	orr	r1, r2, r1, lsl #16
   16adc:	cmp	r0, r1
   16ae0:	bls	16b00 <close_stdout@@Base+0x3ee4>
   16ae4:	adds	r1, r1, r8
   16ae8:	sub	r3, fp, #1
   16aec:	bcs	16d6c <close_stdout@@Base+0x4150>
   16af0:	cmp	r0, r1
   16af4:	subhi	fp, fp, #2
   16af8:	addhi	r1, r1, r8
   16afc:	bls	16d6c <close_stdout@@Base+0x4150>
   16b00:	rsb	r2, r0, r1
   16b04:	mov	r1, r5
   16b08:	str	r2, [sp]
   16b0c:	uxth	r7, r7
   16b10:	mov	r0, r2
   16b14:	bl	16630 <close_stdout@@Base+0x3a14>
   16b18:	ldr	r2, [sp]
   16b1c:	mov	r1, r5
   16b20:	mov	r9, r0
   16b24:	mov	r0, r2
   16b28:	bl	1681c <close_stdout@@Base+0x3c00>
   16b2c:	mul	sl, sl, r9
   16b30:	orr	r1, r7, r1, lsl #16
   16b34:	cmp	sl, r1
   16b38:	bls	16b58 <close_stdout@@Base+0x3f3c>
   16b3c:	adds	r8, r1, r8
   16b40:	sub	r3, r9, #1
   16b44:	bcs	16b54 <close_stdout@@Base+0x3f38>
   16b48:	cmp	sl, r8
   16b4c:	subhi	r9, r9, #2
   16b50:	bhi	16b58 <close_stdout@@Base+0x3f3c>
   16b54:	mov	r9, r3
   16b58:	orr	r3, r9, fp, lsl #16
   16b5c:	b	16a24 <close_stdout@@Base+0x3e08>
   16b60:	mvn	r6, r6
   16b64:	rsbs	r2, r2, #0
   16b68:	rsc	r3, r3, #0
   16b6c:	b	1692c <close_stdout@@Base+0x3d10>
   16b70:	lsl	r8, r8, r3
   16b74:	rsb	fp, r3, #32
   16b78:	lsr	r4, r9, fp
   16b7c:	lsr	fp, r7, fp
   16b80:	lsr	r5, r8, #16
   16b84:	orr	fp, fp, r9, lsl r3
   16b88:	mov	r0, r4
   16b8c:	lsl	r7, r7, r3
   16b90:	mov	r1, r5
   16b94:	uxth	sl, r8
   16b98:	bl	16630 <close_stdout@@Base+0x3a14>
   16b9c:	mov	r1, r5
   16ba0:	mov	r3, r0
   16ba4:	mov	r0, r4
   16ba8:	str	r3, [sp]
   16bac:	bl	1681c <close_stdout@@Base+0x3c00>
   16bb0:	ldr	r3, [sp]
   16bb4:	lsr	r2, fp, #16
   16bb8:	mul	r0, sl, r3
   16bbc:	orr	r1, r2, r1, lsl #16
   16bc0:	cmp	r0, r1
   16bc4:	bls	16be4 <close_stdout@@Base+0x3fc8>
   16bc8:	adds	r1, r1, r8
   16bcc:	sub	r2, r3, #1
   16bd0:	bcs	16d84 <close_stdout@@Base+0x4168>
   16bd4:	cmp	r0, r1
   16bd8:	subhi	r3, r3, #2
   16bdc:	addhi	r1, r1, r8
   16be0:	bls	16d84 <close_stdout@@Base+0x4168>
   16be4:	rsb	r9, r0, r1
   16be8:	mov	r1, r5
   16bec:	str	r3, [sp]
   16bf0:	uxth	fp, fp
   16bf4:	mov	r0, r9
   16bf8:	bl	16630 <close_stdout@@Base+0x3a14>
   16bfc:	mov	r1, r5
   16c00:	mov	r4, r0
   16c04:	mov	r0, r9
   16c08:	bl	1681c <close_stdout@@Base+0x3c00>
   16c0c:	mul	r9, sl, r4
   16c10:	ldr	r3, [sp]
   16c14:	orr	r1, fp, r1, lsl #16
   16c18:	cmp	r9, r1
   16c1c:	bls	16c40 <close_stdout@@Base+0x4024>
   16c20:	adds	r1, r1, r8
   16c24:	sub	r2, r4, #1
   16c28:	bcs	16c3c <close_stdout@@Base+0x4020>
   16c2c:	cmp	r9, r1
   16c30:	subhi	r4, r4, #2
   16c34:	addhi	r1, r1, r8
   16c38:	bhi	16c40 <close_stdout@@Base+0x4024>
   16c3c:	mov	r4, r2
   16c40:	rsb	r9, r9, r1
   16c44:	orr	r4, r4, r3, lsl #16
   16c48:	b	16ab4 <close_stdout@@Base+0x3e98>
   16c4c:	rsb	sl, r5, #32
   16c50:	lsl	r3, r2, r5
   16c54:	lsr	r0, r2, sl
   16c58:	lsr	r2, ip, sl
   16c5c:	orr	r4, r0, r1, lsl r5
   16c60:	lsr	sl, r7, sl
   16c64:	mov	r0, r2
   16c68:	orr	sl, sl, ip, lsl r5
   16c6c:	lsr	r9, r4, #16
   16c70:	str	r3, [sp, #4]
   16c74:	str	r2, [sp]
   16c78:	uxth	fp, r4
   16c7c:	mov	r1, r9
   16c80:	bl	16630 <close_stdout@@Base+0x3a14>
   16c84:	ldr	r2, [sp]
   16c88:	mov	r1, r9
   16c8c:	mov	r8, r0
   16c90:	mov	r0, r2
   16c94:	bl	1681c <close_stdout@@Base+0x3c00>
   16c98:	mul	r0, fp, r8
   16c9c:	lsr	r2, sl, #16
   16ca0:	orr	r1, r2, r1, lsl #16
   16ca4:	cmp	r0, r1
   16ca8:	bls	16cc8 <close_stdout@@Base+0x40ac>
   16cac:	adds	r1, r1, r4
   16cb0:	sub	r2, r8, #1
   16cb4:	bcs	16d7c <close_stdout@@Base+0x4160>
   16cb8:	cmp	r0, r1
   16cbc:	subhi	r8, r8, #2
   16cc0:	addhi	r1, r1, r4
   16cc4:	bls	16d7c <close_stdout@@Base+0x4160>
   16cc8:	rsb	ip, r0, r1
   16ccc:	mov	r1, r9
   16cd0:	str	ip, [sp]
   16cd4:	mov	r0, ip
   16cd8:	bl	16630 <close_stdout@@Base+0x3a14>
   16cdc:	ldr	ip, [sp]
   16ce0:	mov	r1, r9
   16ce4:	mov	r2, r0
   16ce8:	mov	r0, ip
   16cec:	str	r2, [sp]
   16cf0:	bl	1681c <close_stdout@@Base+0x3c00>
   16cf4:	ldr	r2, [sp]
   16cf8:	uxth	ip, sl
   16cfc:	mul	fp, fp, r2
   16d00:	orr	ip, ip, r1, lsl #16
   16d04:	cmp	fp, ip
   16d08:	bls	16d28 <close_stdout@@Base+0x410c>
   16d0c:	adds	ip, ip, r4
   16d10:	sub	r1, r2, #1
   16d14:	bcs	16d74 <close_stdout@@Base+0x4158>
   16d18:	cmp	fp, ip
   16d1c:	subhi	r2, r2, #2
   16d20:	addhi	ip, ip, r4
   16d24:	bls	16d74 <close_stdout@@Base+0x4158>
   16d28:	ldr	r0, [sp, #4]
   16d2c:	orr	r1, r2, r8, lsl #16
   16d30:	rsb	fp, fp, ip
   16d34:	umull	r2, r3, r1, r0
   16d38:	cmp	fp, r3
   16d3c:	bcc	16d60 <close_stdout@@Base+0x4144>
   16d40:	movne	r4, #0
   16d44:	moveq	r4, #1
   16d48:	cmp	r2, r7, lsl r5
   16d4c:	movls	r4, #0
   16d50:	andhi	r4, r4, #1
   16d54:	cmp	r4, #0
   16d58:	moveq	r3, r1
   16d5c:	beq	16a24 <close_stdout@@Base+0x3e08>
   16d60:	sub	r3, r1, #1
   16d64:	mov	r4, #0
   16d68:	b	16a24 <close_stdout@@Base+0x3e08>
   16d6c:	mov	fp, r3
   16d70:	b	16b00 <close_stdout@@Base+0x3ee4>
   16d74:	mov	r2, r1
   16d78:	b	16d28 <close_stdout@@Base+0x410c>
   16d7c:	mov	r8, r2
   16d80:	b	16cc8 <close_stdout@@Base+0x40ac>
   16d84:	mov	r3, r2
   16d88:	b	16be4 <close_stdout@@Base+0x3fc8>
   16d8c:	cmp	r3, #0
   16d90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d94:	mov	r6, r0
   16d98:	sub	sp, sp, #12
   16d9c:	mov	r5, r1
   16da0:	mov	r7, r0
   16da4:	mov	r4, r2
   16da8:	mov	r8, r1
   16dac:	bne	16e8c <close_stdout@@Base+0x4270>
   16db0:	cmp	r2, r1
   16db4:	bls	16ec8 <close_stdout@@Base+0x42ac>
   16db8:	clz	r3, r2
   16dbc:	cmp	r3, #0
   16dc0:	rsbne	r8, r3, #32
   16dc4:	lslne	r4, r2, r3
   16dc8:	lsrne	r8, r0, r8
   16dcc:	lslne	r7, r0, r3
   16dd0:	orrne	r8, r8, r1, lsl r3
   16dd4:	lsr	r5, r4, #16
   16dd8:	uxth	sl, r4
   16ddc:	mov	r1, r5
   16de0:	mov	r0, r8
   16de4:	bl	16630 <close_stdout@@Base+0x3a14>
   16de8:	mov	r1, r5
   16dec:	mov	r9, r0
   16df0:	mov	r0, r8
   16df4:	bl	1681c <close_stdout@@Base+0x3c00>
   16df8:	mul	r0, sl, r9
   16dfc:	lsr	r3, r7, #16
   16e00:	orr	r1, r3, r1, lsl #16
   16e04:	cmp	r0, r1
   16e08:	bls	16e2c <close_stdout@@Base+0x4210>
   16e0c:	adds	r1, r1, r4
   16e10:	sub	r2, r9, #1
   16e14:	bcs	16e28 <close_stdout@@Base+0x420c>
   16e18:	cmp	r0, r1
   16e1c:	subhi	r9, r9, #2
   16e20:	addhi	r1, r1, r4
   16e24:	bhi	16e2c <close_stdout@@Base+0x4210>
   16e28:	mov	r9, r2
   16e2c:	rsb	r8, r0, r1
   16e30:	mov	r1, r5
   16e34:	uxth	r7, r7
   16e38:	mov	r0, r8
   16e3c:	bl	16630 <close_stdout@@Base+0x3a14>
   16e40:	mov	r1, r5
   16e44:	mov	r6, r0
   16e48:	mov	r0, r8
   16e4c:	bl	1681c <close_stdout@@Base+0x3c00>
   16e50:	mul	sl, sl, r6
   16e54:	orr	r1, r7, r1, lsl #16
   16e58:	cmp	sl, r1
   16e5c:	bls	16e78 <close_stdout@@Base+0x425c>
   16e60:	adds	r4, r1, r4
   16e64:	sub	r3, r6, #1
   16e68:	bcs	17174 <close_stdout@@Base+0x4558>
   16e6c:	cmp	sl, r4
   16e70:	subhi	r6, r6, #2
   16e74:	bls	17174 <close_stdout@@Base+0x4558>
   16e78:	orr	r0, r6, r9, lsl #16
   16e7c:	mov	r6, #0
   16e80:	mov	r1, r6
   16e84:	add	sp, sp, #12
   16e88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e8c:	cmp	r3, r1
   16e90:	movhi	r6, #0
   16e94:	movhi	r0, r6
   16e98:	bhi	16e80 <close_stdout@@Base+0x4264>
   16e9c:	clz	r7, r3
   16ea0:	cmp	r7, #0
   16ea4:	bne	16fa4 <close_stdout@@Base+0x4388>
   16ea8:	cmp	r3, r1
   16eac:	cmpcs	r2, r6
   16eb0:	movhi	r6, #0
   16eb4:	movls	r6, #1
   16eb8:	movls	r0, #1
   16ebc:	movls	r6, r7
   16ec0:	movhi	r0, r6
   16ec4:	b	16e80 <close_stdout@@Base+0x4264>
   16ec8:	cmp	r2, #0
   16ecc:	bne	16ee0 <close_stdout@@Base+0x42c4>
   16ed0:	mov	r1, r2
   16ed4:	mov	r0, #1
   16ed8:	bl	16630 <close_stdout@@Base+0x3a14>
   16edc:	mov	r4, r0
   16ee0:	clz	r3, r4
   16ee4:	cmp	r3, #0
   16ee8:	bne	170a0 <close_stdout@@Base+0x4484>
   16eec:	rsb	r5, r4, r5
   16ef0:	lsr	r8, r4, #16
   16ef4:	uxth	sl, r4
   16ef8:	mov	r6, #1
   16efc:	mov	r1, r8
   16f00:	mov	r0, r5
   16f04:	bl	16630 <close_stdout@@Base+0x3a14>
   16f08:	mov	r1, r8
   16f0c:	mov	r9, r0
   16f10:	mov	r0, r5
   16f14:	bl	1681c <close_stdout@@Base+0x3c00>
   16f18:	mul	r0, sl, r9
   16f1c:	lsr	r3, r7, #16
   16f20:	orr	r1, r3, r1, lsl #16
   16f24:	cmp	r0, r1
   16f28:	bls	16f48 <close_stdout@@Base+0x432c>
   16f2c:	adds	r1, r1, r4
   16f30:	sub	r2, r9, #1
   16f34:	bcs	1717c <close_stdout@@Base+0x4560>
   16f38:	cmp	r0, r1
   16f3c:	subhi	r9, r9, #2
   16f40:	addhi	r1, r1, r4
   16f44:	bls	1717c <close_stdout@@Base+0x4560>
   16f48:	rsb	fp, r0, r1
   16f4c:	mov	r1, r8
   16f50:	uxth	r7, r7
   16f54:	mov	r0, fp
   16f58:	bl	16630 <close_stdout@@Base+0x3a14>
   16f5c:	mov	r1, r8
   16f60:	mov	r5, r0
   16f64:	mov	r0, fp
   16f68:	bl	1681c <close_stdout@@Base+0x3c00>
   16f6c:	mul	sl, sl, r5
   16f70:	orr	r1, r7, r1, lsl #16
   16f74:	cmp	sl, r1
   16f78:	bls	16f94 <close_stdout@@Base+0x4378>
   16f7c:	adds	r4, r1, r4
   16f80:	sub	r3, r5, #1
   16f84:	bcs	17184 <close_stdout@@Base+0x4568>
   16f88:	cmp	sl, r4
   16f8c:	subhi	r5, r5, #2
   16f90:	bls	17184 <close_stdout@@Base+0x4568>
   16f94:	orr	r0, r5, r9, lsl #16
   16f98:	mov	r1, r6
   16f9c:	add	sp, sp, #12
   16fa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fa4:	rsb	r1, r7, #32
   16fa8:	lsl	r0, r2, r7
   16fac:	lsr	r2, r2, r1
   16fb0:	lsr	fp, r5, r1
   16fb4:	orr	r8, r2, r3, lsl r7
   16fb8:	lsr	r1, r6, r1
   16fbc:	str	r0, [sp, #4]
   16fc0:	orr	r5, r1, r5, lsl r7
   16fc4:	lsr	r9, r8, #16
   16fc8:	mov	r0, fp
   16fcc:	uxth	sl, r8
   16fd0:	mov	r1, r9
   16fd4:	bl	16630 <close_stdout@@Base+0x3a14>
   16fd8:	mov	r1, r9
   16fdc:	mov	r4, r0
   16fe0:	mov	r0, fp
   16fe4:	bl	1681c <close_stdout@@Base+0x3c00>
   16fe8:	mul	r0, sl, r4
   16fec:	lsr	ip, r5, #16
   16ff0:	orr	r1, ip, r1, lsl #16
   16ff4:	cmp	r0, r1
   16ff8:	bls	1700c <close_stdout@@Base+0x43f0>
   16ffc:	adds	r1, r1, r8
   17000:	sub	r2, r4, #1
   17004:	bcc	171a0 <close_stdout@@Base+0x4584>
   17008:	mov	r4, r2
   1700c:	rsb	ip, r0, r1
   17010:	mov	r1, r9
   17014:	str	ip, [sp]
   17018:	uxth	r5, r5
   1701c:	mov	r0, ip
   17020:	bl	16630 <close_stdout@@Base+0x3a14>
   17024:	ldr	ip, [sp]
   17028:	mov	r1, r9
   1702c:	mov	fp, r0
   17030:	mov	r0, ip
   17034:	bl	1681c <close_stdout@@Base+0x3c00>
   17038:	mul	sl, sl, fp
   1703c:	orr	r1, r5, r1, lsl #16
   17040:	cmp	sl, r1
   17044:	bls	17058 <close_stdout@@Base+0x443c>
   17048:	adds	r1, r1, r8
   1704c:	sub	r2, fp, #1
   17050:	bcc	1718c <close_stdout@@Base+0x4570>
   17054:	mov	fp, r2
   17058:	ldr	r3, [sp, #4]
   1705c:	orr	r0, fp, r4, lsl #16
   17060:	rsb	sl, sl, r1
   17064:	umull	r4, r5, r0, r3
   17068:	cmp	sl, r5
   1706c:	bcc	1708c <close_stdout@@Base+0x4470>
   17070:	movne	r3, #0
   17074:	moveq	r3, #1
   17078:	cmp	r4, r6, lsl r7
   1707c:	movls	r6, #0
   17080:	andhi	r6, r3, #1
   17084:	cmp	r6, #0
   17088:	beq	16e80 <close_stdout@@Base+0x4264>
   1708c:	mov	r6, #0
   17090:	sub	r0, r0, #1
   17094:	mov	r1, r6
   17098:	add	sp, sp, #12
   1709c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   170a0:	lsl	r4, r4, r3
   170a4:	rsb	r9, r3, #32
   170a8:	lsr	r2, r5, r9
   170ac:	lsr	r9, r6, r9
   170b0:	lsr	r8, r4, #16
   170b4:	orr	r9, r9, r5, lsl r3
   170b8:	mov	r0, r2
   170bc:	lsl	r7, r6, r3
   170c0:	mov	r1, r8
   170c4:	str	r2, [sp]
   170c8:	bl	16630 <close_stdout@@Base+0x3a14>
   170cc:	ldr	r2, [sp]
   170d0:	mov	r1, r8
   170d4:	uxth	sl, r4
   170d8:	mov	fp, r0
   170dc:	mov	r0, r2
   170e0:	bl	1681c <close_stdout@@Base+0x3c00>
   170e4:	mul	r0, sl, fp
   170e8:	lsr	r3, r9, #16
   170ec:	orr	r1, r3, r1, lsl #16
   170f0:	cmp	r0, r1
   170f4:	bls	17114 <close_stdout@@Base+0x44f8>
   170f8:	adds	r1, r1, r4
   170fc:	sub	r3, fp, #1
   17100:	bcs	171b4 <close_stdout@@Base+0x4598>
   17104:	cmp	r0, r1
   17108:	subhi	fp, fp, #2
   1710c:	addhi	r1, r1, r4
   17110:	bls	171b4 <close_stdout@@Base+0x4598>
   17114:	rsb	r5, r0, r1
   17118:	mov	r1, r8
   1711c:	uxth	r9, r9
   17120:	mov	r0, r5
   17124:	bl	16630 <close_stdout@@Base+0x3a14>
   17128:	mov	r1, r8
   1712c:	mov	r6, r0
   17130:	mov	r0, r5
   17134:	bl	1681c <close_stdout@@Base+0x3c00>
   17138:	mul	r5, sl, r6
   1713c:	orr	r1, r9, r1, lsl #16
   17140:	cmp	r5, r1
   17144:	bls	17168 <close_stdout@@Base+0x454c>
   17148:	adds	r1, r1, r4
   1714c:	sub	r3, r6, #1
   17150:	bcs	17164 <close_stdout@@Base+0x4548>
   17154:	cmp	r5, r1
   17158:	subhi	r6, r6, #2
   1715c:	addhi	r1, r1, r4
   17160:	bhi	17168 <close_stdout@@Base+0x454c>
   17164:	mov	r6, r3
   17168:	rsb	r5, r5, r1
   1716c:	orr	r6, r6, fp, lsl #16
   17170:	b	16efc <close_stdout@@Base+0x42e0>
   17174:	mov	r6, r3
   17178:	b	16e78 <close_stdout@@Base+0x425c>
   1717c:	mov	r9, r2
   17180:	b	16f48 <close_stdout@@Base+0x432c>
   17184:	mov	r5, r3
   17188:	b	16f94 <close_stdout@@Base+0x4378>
   1718c:	cmp	sl, r1
   17190:	subhi	fp, fp, #2
   17194:	addhi	r1, r1, r8
   17198:	bhi	17058 <close_stdout@@Base+0x443c>
   1719c:	b	17054 <close_stdout@@Base+0x4438>
   171a0:	cmp	r0, r1
   171a4:	subhi	r4, r4, #2
   171a8:	addhi	r1, r1, r8
   171ac:	bhi	1700c <close_stdout@@Base+0x43f0>
   171b0:	b	17008 <close_stdout@@Base+0x43ec>
   171b4:	mov	fp, r3
   171b8:	b	17114 <close_stdout@@Base+0x44f8>
   171bc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   171c0:	mov	r7, r0
   171c4:	ldr	r6, [pc, #76]	; 17218 <close_stdout@@Base+0x45fc>
   171c8:	mov	r8, r1
   171cc:	ldr	r5, [pc, #72]	; 1721c <close_stdout@@Base+0x4600>
   171d0:	mov	r9, r2
   171d4:	add	r6, pc, r6
   171d8:	bl	11054 <fdopen@plt-0x20>
   171dc:	add	r5, pc, r5
   171e0:	rsb	r6, r5, r6
   171e4:	asrs	r6, r6, #2
   171e8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   171ec:	sub	r5, r5, #4
   171f0:	mov	r4, #0
   171f4:	add	r4, r4, #1
   171f8:	ldr	r3, [r5, #4]!
   171fc:	mov	r0, r7
   17200:	mov	r1, r8
   17204:	mov	r2, r9
   17208:	blx	r3
   1720c:	cmp	r4, r6
   17210:	bne	171f4 <close_stdout@@Base+0x45d8>
   17214:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   17218:	andeq	r1, r1, r0, asr ip
   1721c:	andeq	r1, r1, r4, asr #24
   17220:	bx	lr
   17224:	ldr	r3, [pc, #28]	; 17248 <close_stdout@@Base+0x462c>
   17228:	mov	r1, #0
   1722c:	ldr	r2, [pc, #24]	; 1724c <close_stdout@@Base+0x4630>
   17230:	add	r3, pc, r3
   17234:	ldr	r3, [r3, r2]
   17238:	cmp	r3, #0
   1723c:	ldrne	r2, [r3]
   17240:	moveq	r2, r3
   17244:	b	11260 <__cxa_atexit@plt>
   17248:	andeq	r1, r1, r8, asr #27
   1724c:	andeq	r0, r0, r0, lsr #2

Disassembly of section .fini:

00017250 <.fini>:
   17250:	push	{r3, lr}
   17254:	pop	{r3, pc}
