
centos-preinstalled/mkimage:     file format elf32-littlearm


Disassembly of section .init:

000120e0 <_init@@Base>:
   120e0:	push	{r3, lr}
   120e4:	bl	135fc <__printf_chk@plt+0xdd0>
   120e8:	pop	{r3, pc}

Disassembly of section .plt:

000120ec <ERR_error_string@plt-0x14>:
   120ec:	push	{lr}		; (str lr, [sp, #-4]!)
   120f0:	ldr	lr, [pc, #4]	; 120fc <_init@@Base+0x1c>
   120f4:	add	lr, pc, lr
   120f8:	ldr	pc, [lr, #8]!
   120fc:	andeq	lr, r3, r4, lsl #30

00012100 <ERR_error_string@plt>:
   12100:	add	ip, pc, #0, 12
   12104:	add	ip, ip, #253952	; 0x3e000
   12108:	ldr	pc, [ip, #3844]!	; 0xf04

0001210c <fscanf@plt>:
   1210c:	add	ip, pc, #0, 12
   12110:	add	ip, ip, #253952	; 0x3e000
   12114:	ldr	pc, [ip, #3836]!	; 0xefc

00012118 <EVP_DigestInit@plt>:
   12118:	add	ip, pc, #0, 12
   1211c:	add	ip, ip, #253952	; 0x3e000
   12120:	ldr	pc, [ip, #3828]!	; 0xef4

00012124 <ftruncate@plt>:
   12124:	add	ip, pc, #0, 12
   12128:	add	ip, ip, #253952	; 0x3e000
   1212c:	ldr	pc, [ip, #3820]!	; 0xeec

00012130 <ENGINE_load_private_key@plt>:
   12130:	add	ip, pc, #0, 12
   12134:	add	ip, ip, #253952	; 0x3e000
   12138:	ldr	pc, [ip, #3812]!	; 0xee4

0001213c <popen@plt>:
   1213c:	add	ip, pc, #0, 12
   12140:	add	ip, ip, #253952	; 0x3e000
   12144:	ldr	pc, [ip, #3804]!	; 0xedc

00012148 <EVP_PKEY_free@plt>:
   12148:	add	ip, pc, #0, 12
   1214c:	add	ip, ip, #253952	; 0x3e000
   12150:	ldr	pc, [ip, #3796]!	; 0xed4

00012154 <PEM_read_X509@plt>:
   12154:	add	ip, pc, #0, 12
   12158:	add	ip, ip, #253952	; 0x3e000
   1215c:	ldr	pc, [ip, #3788]!	; 0xecc

00012160 <EVP_CipherInit@plt>:
   12160:	add	ip, pc, #0, 12
   12164:	add	ip, ip, #253952	; 0x3e000
   12168:	ldr	pc, [ip, #3780]!	; 0xec4

0001216c <OPENSSL_add_all_algorithms_noconf@plt>:
   1216c:	add	ip, pc, #0, 12
   12170:	add	ip, ip, #253952	; 0x3e000
   12174:	ldr	pc, [ip, #3772]!	; 0xebc

00012178 <strcasecmp@plt>:
   12178:	add	ip, pc, #0, 12
   1217c:	add	ip, ip, #253952	; 0x3e000
   12180:	ldr	pc, [ip, #3764]!	; 0xeb4

00012184 <strnlen@plt>:
   12184:	add	ip, pc, #0, 12
   12188:	add	ip, ip, #253952	; 0x3e000
   1218c:	ldr	pc, [ip, #3756]!	; 0xeac

00012190 <EVP_CipherUpdate@plt>:
   12190:	add	ip, pc, #0, 12
   12194:	add	ip, ip, #253952	; 0x3e000
   12198:	ldr	pc, [ip, #3748]!	; 0xea4

0001219c <ENGINE_finish@plt>:
   1219c:	add	ip, pc, #0, 12
   121a0:	add	ip, ip, #253952	; 0x3e000
   121a4:	ldr	pc, [ip, #3740]!	; 0xe9c

000121a8 <ENGINE_load_public_key@plt>:
   121a8:	add	ip, pc, #0, 12
   121ac:	add	ip, ip, #253952	; 0x3e000
   121b0:	ldr	pc, [ip, #3732]!	; 0xe94

000121b4 <strtol@plt>:
   121b4:	add	ip, pc, #0, 12
   121b8:	add	ip, ip, #253952	; 0x3e000
   121bc:	ldr	pc, [ip, #3724]!	; 0xe8c

000121c0 <free@plt>:
   121c0:	add	ip, pc, #0, 12
   121c4:	add	ip, ip, #253952	; 0x3e000
   121c8:	ldr	pc, [ip, #3716]!	; 0xe84

000121cc <__getdelim@plt>:
   121cc:	add	ip, pc, #0, 12
   121d0:	add	ip, ip, #253952	; 0x3e000
   121d4:	ldr	pc, [ip, #3708]!	; 0xe7c

000121d8 <SSL_load_error_strings@plt>:
   121d8:	add	ip, pc, #0, 12
   121dc:	add	ip, ip, #253952	; 0x3e000
   121e0:	ldr	pc, [ip, #3700]!	; 0xe74

000121e4 <EVP_aes_128_cbc@plt>:
   121e4:	add	ip, pc, #0, 12
   121e8:	add	ip, ip, #253952	; 0x3e000
   121ec:	ldr	pc, [ip, #3692]!	; 0xe6c

000121f0 <fseek@plt>:
   121f0:	add	ip, pc, #0, 12
   121f4:	add	ip, ip, #253952	; 0x3e000
   121f8:	ldr	pc, [ip, #3684]!	; 0xe64

000121fc <BN_dup@plt>:
   121fc:	add	ip, pc, #0, 12
   12200:	add	ip, ip, #253952	; 0x3e000
   12204:	ldr	pc, [ip, #3676]!	; 0xe5c

00012208 <ENGINE_get_id@plt>:
   12208:	add	ip, pc, #0, 12
   1220c:	add	ip, ip, #253952	; 0x3e000
   12210:	ldr	pc, [ip, #3668]!	; 0xe54

00012214 <qsort@plt>:
   12214:	add	ip, pc, #0, 12
   12218:	add	ip, ip, #253952	; 0x3e000
   1221c:	ldr	pc, [ip, #3660]!	; 0xe4c

00012220 <strncmp@plt>:
   12220:	add	ip, pc, #0, 12
   12224:	add	ip, ip, #253952	; 0x3e000
   12228:	ldr	pc, [ip, #3652]!	; 0xe44

0001222c <__open_2@plt>:
   1222c:	add	ip, pc, #0, 12
   12230:	add	ip, ip, #253952	; 0x3e000
   12234:	ldr	pc, [ip, #3644]!	; 0xe3c

00012238 <EVP_PKEY_CTX_ctrl@plt>:
   12238:	add	ip, pc, #0, 12
   1223c:	add	ip, ip, #253952	; 0x3e000
   12240:	ldr	pc, [ip, #3636]!	; 0xe34

00012244 <ENGINE_free@plt>:
   12244:	add	ip, pc, #0, 12
   12248:	add	ip, ip, #253952	; 0x3e000
   1224c:	ldr	pc, [ip, #3628]!	; 0xe2c

00012250 <fgetc@plt>:
   12250:	add	ip, pc, #0, 12
   12254:	add	ip, ip, #253952	; 0x3e000
   12258:	ldr	pc, [ip, #3620]!	; 0xe24

0001225c <EVP_PKEY_CTX_new@plt>:
   1225c:	add	ip, pc, #0, 12
   12260:	add	ip, ip, #253952	; 0x3e000
   12264:	ldr	pc, [ip, #3612]!	; 0xe1c

00012268 <EVP_PKEY_size@plt>:
   12268:	add	ip, pc, #0, 12
   1226c:	add	ip, ip, #253952	; 0x3e000
   12270:	ldr	pc, [ip, #3604]!	; 0xe14

00012274 <ERR_remove_thread_state@plt>:
   12274:	add	ip, pc, #0, 12
   12278:	add	ip, ip, #253952	; 0x3e000
   1227c:	ldr	pc, [ip, #3596]!	; 0xe0c

00012280 <OpenSSL_add_all_digests@plt>:
   12280:	add	ip, pc, #0, 12
   12284:	add	ip, ip, #253952	; 0x3e000
   12288:	ldr	pc, [ip, #3588]!	; 0xe04

0001228c <PEM_read_RSAPrivateKey@plt>:
   1228c:	add	ip, pc, #0, 12
   12290:	add	ip, ip, #253952	; 0x3e000
   12294:	ldr	pc, [ip, #3580]!	; 0xdfc

00012298 <exit@plt>:
   12298:	add	ip, pc, #0, 12
   1229c:	add	ip, ip, #253952	; 0x3e000
   122a0:	ldr	pc, [ip, #3572]!	; 0xdf4

000122a4 <strerror@plt>:
   122a4:	add	ip, pc, #0, 12
   122a8:	add	ip, ip, #253952	; 0x3e000
   122ac:	ldr	pc, [ip, #3564]!	; 0xdec

000122b0 <EVP_sha1@plt>:
   122b0:	add	ip, pc, #0, 12
   122b4:	add	ip, ip, #253952	; 0x3e000
   122b8:	ldr	pc, [ip, #3556]!	; 0xde4

000122bc <EVP_DigestSignFinal@plt>:
   122bc:	add	ip, pc, #0, 12
   122c0:	add	ip, ip, #253952	; 0x3e000
   122c4:	ldr	pc, [ip, #3548]!	; 0xddc

000122c8 <__strtok_r@plt>:
   122c8:	add	ip, pc, #0, 12
   122cc:	add	ip, ip, #253952	; 0x3e000
   122d0:	ldr	pc, [ip, #3540]!	; 0xdd4

000122d4 <__vsnprintf_chk@plt>:
   122d4:	add	ip, pc, #0, 12
   122d8:	add	ip, ip, #253952	; 0x3e000
   122dc:	ldr	pc, [ip, #3532]!	; 0xdcc

000122e0 <ENGINE_init@plt>:
   122e0:	add	ip, pc, #0, 12
   122e4:	add	ip, ip, #253952	; 0x3e000
   122e8:	ldr	pc, [ip, #3524]!	; 0xdc4

000122ec <BN_free@plt>:
   122ec:	add	ip, pc, #0, 12
   122f0:	add	ip, ip, #253952	; 0x3e000
   122f4:	ldr	pc, [ip, #3516]!	; 0xdbc

000122f8 <ENGINE_cleanup@plt>:
   122f8:	add	ip, pc, #0, 12
   122fc:	add	ip, ip, #253952	; 0x3e000
   12300:	ldr	pc, [ip, #3508]!	; 0xdb4

00012304 <feof@plt>:
   12304:	add	ip, pc, #0, 12
   12308:	add	ip, ip, #253952	; 0x3e000
   1230c:	ldr	pc, [ip, #3500]!	; 0xdac

00012310 <puts@plt>:
   12310:	add	ip, pc, #0, 12
   12314:	add	ip, ip, #253952	; 0x3e000
   12318:	ldr	pc, [ip, #3492]!	; 0xda4

0001231c <strtok@plt>:
   1231c:	add	ip, pc, #0, 12
   12320:	add	ip, ip, #253952	; 0x3e000
   12324:	ldr	pc, [ip, #3484]!	; 0xd9c

00012328 <perror@plt>:
   12328:	add	ip, pc, #0, 12
   1232c:	add	ip, ip, #253952	; 0x3e000
   12330:	ldr	pc, [ip, #3476]!	; 0xd94

00012334 <strtoll@plt>:
   12334:	add	ip, pc, #0, 12
   12338:	add	ip, ip, #253952	; 0x3e000
   1233c:	ldr	pc, [ip, #3468]!	; 0xd8c

00012340 <EVP_PKEY_get1_RSA@plt>:
   12340:	add	ip, pc, #0, 12
   12344:	add	ip, ip, #253952	; 0x3e000
   12348:	ldr	pc, [ip, #3460]!	; 0xd84

0001234c <EVP_sha256@plt>:
   1234c:	add	ip, pc, #0, 12
   12350:	add	ip, ip, #253952	; 0x3e000
   12354:	ldr	pc, [ip, #3452]!	; 0xd7c

00012358 <__fprintf_chk@plt>:
   12358:	add	ip, pc, #0, 12
   1235c:	add	ip, ip, #253952	; 0x3e000
   12360:	ldr	pc, [ip, #3444]!	; 0xd74

00012364 <CRYPTO_malloc@plt>:
   12364:	add	ip, pc, #0, 12
   12368:	add	ip, ip, #253952	; 0x3e000
   1236c:	ldr	pc, [ip, #3436]!	; 0xd6c

00012370 <strtoul@plt>:
   12370:	add	ip, pc, #0, 12
   12374:	add	ip, ip, #253952	; 0x3e000
   12378:	ldr	pc, [ip, #3428]!	; 0xd64

0001237c <putchar@plt>:
   1237c:	add	ip, pc, #0, 12
   12380:	add	ip, ip, #253952	; 0x3e000
   12384:	ldr	pc, [ip, #3420]!	; 0xd5c

00012388 <memset@plt>:
   12388:	add	ip, pc, #0, 12
   1238c:	add	ip, ip, #253952	; 0x3e000
   12390:	ldr	pc, [ip, #3412]!	; 0xd54

00012394 <EVP_MD_CTX_create@plt>:
   12394:	add	ip, pc, #0, 12
   12398:	add	ip, ip, #253952	; 0x3e000
   1239c:	ldr	pc, [ip, #3404]!	; 0xd4c

000123a0 <snprintf@plt>:
   123a0:	add	ip, pc, #0, 12
   123a4:	add	ip, ip, #253952	; 0x3e000
   123a8:	ldr	pc, [ip, #3396]!	; 0xd44

000123ac <__strdup@plt>:
   123ac:	add	ip, pc, #0, 12
   123b0:	add	ip, ip, #253952	; 0x3e000
   123b4:	ldr	pc, [ip, #3388]!	; 0xd3c

000123b8 <close@plt>:
   123b8:	add	ip, pc, #0, 12
   123bc:	add	ip, ip, #253952	; 0x3e000
   123c0:	ldr	pc, [ip, #3380]!	; 0xd34

000123c4 <gmtime@plt>:
   123c4:	add	ip, pc, #0, 12
   123c8:	add	ip, ip, #253952	; 0x3e000
   123cc:	ldr	pc, [ip, #3372]!	; 0xd2c

000123d0 <fopen@plt>:
   123d0:	add	ip, pc, #0, 12
   123d4:	add	ip, ip, #253952	; 0x3e000
   123d8:	ldr	pc, [ip, #3364]!	; 0xd24

000123dc <ENGINE_set_default_RSA@plt>:
   123dc:	add	ip, pc, #0, 12
   123e0:	add	ip, ip, #253952	; 0x3e000
   123e4:	ldr	pc, [ip, #3356]!	; 0xd1c

000123e8 <read@plt>:
   123e8:	add	ip, pc, #0, 12
   123ec:	add	ip, ip, #253952	; 0x3e000
   123f0:	ldr	pc, [ip, #3348]!	; 0xd14

000123f4 <BN_sub@plt>:
   123f4:	add	ip, pc, #0, 12
   123f8:	add	ip, ip, #253952	; 0x3e000
   123fc:	ldr	pc, [ip, #3340]!	; 0xd0c

00012400 <abort@plt>:
   12400:	add	ip, pc, #0, 12
   12404:	add	ip, ip, #253952	; 0x3e000
   12408:	ldr	pc, [ip, #3332]!	; 0xd04

0001240c <ENGINE_by_id@plt>:
   1240c:	add	ip, pc, #0, 12
   12410:	add	ip, ip, #253952	; 0x3e000
   12414:	ldr	pc, [ip, #3324]!	; 0xcfc

00012418 <BN_div@plt>:
   12418:	add	ip, pc, #0, 12
   1241c:	add	ip, ip, #253952	; 0x3e000
   12420:	ldr	pc, [ip, #3316]!	; 0xcf4

00012424 <memmove@plt>:
   12424:	add	ip, pc, #0, 12
   12428:	add	ip, ip, #253952	; 0x3e000
   1242c:	ldr	pc, [ip, #3308]!	; 0xcec

00012430 <ctime@plt>:
   12430:	add	ip, pc, #0, 12
   12434:	add	ip, ip, #253952	; 0x3e000
   12438:	ldr	pc, [ip, #3300]!	; 0xce4

0001243c <BN_CTX_new@plt>:
   1243c:	add	ip, pc, #0, 12
   12440:	add	ip, ip, #253952	; 0x3e000
   12444:	ldr	pc, [ip, #3292]!	; 0xcdc

00012448 <unlink@plt>:
   12448:	add	ip, pc, #0, 12
   1244c:	add	ip, ip, #253952	; 0x3e000
   12450:	ldr	pc, [ip, #3284]!	; 0xcd4

00012454 <CRYPTO_cleanup_all_ex_data@plt>:
   12454:	add	ip, pc, #0, 12
   12458:	add	ip, ip, #253952	; 0x3e000
   1245c:	ldr	pc, [ip, #3276]!	; 0xccc

00012460 <gmtime_r@plt>:
   12460:	add	ip, pc, #0, 12
   12464:	add	ip, ip, #253952	; 0x3e000
   12468:	ldr	pc, [ip, #3268]!	; 0xcc4

0001246c <system@plt>:
   1246c:	add	ip, pc, #0, 12
   12470:	add	ip, ip, #253952	; 0x3e000
   12474:	ldr	pc, [ip, #3260]!	; 0xcbc

00012478 <realloc@plt>:
   12478:	add	ip, pc, #0, 12
   1247c:	add	ip, ip, #253952	; 0x3e000
   12480:	ldr	pc, [ip, #3252]!	; 0xcb4

00012484 <strcpy@plt>:
   12484:	add	ip, pc, #0, 12
   12488:	add	ip, ip, #253952	; 0x3e000
   1248c:	ldr	pc, [ip, #3244]!	; 0xcac

00012490 <mmap@plt>:
   12490:	add	ip, pc, #0, 12
   12494:	add	ip, ip, #253952	; 0x3e000
   12498:	ldr	pc, [ip, #3236]!	; 0xca4

0001249c <EVP_CIPHER_CTX_cleanup@plt>:
   1249c:	add	ip, pc, #0, 12
   124a0:	add	ip, ip, #253952	; 0x3e000
   124a4:	ldr	pc, [ip, #3228]!	; 0xc9c

000124a8 <__strncat_chk@plt>:
   124a8:	add	ip, pc, #0, 12
   124ac:	add	ip, ip, #253952	; 0x3e000
   124b0:	ldr	pc, [ip, #3220]!	; 0xc94

000124b4 <getopt@plt>:
   124b4:	add	ip, pc, #0, 12
   124b8:	add	ip, ip, #253952	; 0x3e000
   124bc:	ldr	pc, [ip, #3212]!	; 0xc8c

000124c0 <BN_mod_inverse@plt>:
   124c0:	add	ip, pc, #0, 12
   124c4:	add	ip, ip, #253952	; 0x3e000
   124c8:	ldr	pc, [ip, #3204]!	; 0xc84

000124cc <BN_exp@plt>:
   124cc:	add	ip, pc, #0, 12
   124d0:	add	ip, ip, #253952	; 0x3e000
   124d4:	ldr	pc, [ip, #3196]!	; 0xc7c

000124d8 <open@plt>:
   124d8:	add	ip, pc, #0, 12
   124dc:	add	ip, ip, #253952	; 0x3e000
   124e0:	ldr	pc, [ip, #3188]!	; 0xc74

000124e4 <RSA_free@plt>:
   124e4:	add	ip, pc, #0, 12
   124e8:	add	ip, ip, #253952	; 0x3e000
   124ec:	ldr	pc, [ip, #3180]!	; 0xc6c

000124f0 <rewind@plt>:
   124f0:	add	ip, pc, #0, 12
   124f4:	add	ip, ip, #253952	; 0x3e000
   124f8:	ldr	pc, [ip, #3172]!	; 0xc64

000124fc <ERR_free_strings@plt>:
   124fc:	add	ip, pc, #0, 12
   12500:	add	ip, ip, #253952	; 0x3e000
   12504:	ldr	pc, [ip, #3164]!	; 0xc5c

00012508 <fread@plt>:
   12508:	add	ip, pc, #0, 12
   1250c:	add	ip, ip, #253952	; 0x3e000
   12510:	ldr	pc, [ip, #3156]!	; 0xc54

00012514 <EVP_PKEY_new@plt>:
   12514:	add	ip, pc, #0, 12
   12518:	add	ip, ip, #253952	; 0x3e000
   1251c:	ldr	pc, [ip, #3148]!	; 0xc4c

00012520 <EVP_MD_CTX_destroy@plt>:
   12520:	add	ip, pc, #0, 12
   12524:	add	ip, ip, #253952	; 0x3e000
   12528:	ldr	pc, [ip, #3140]!	; 0xc44

0001252c <fileno@plt>:
   1252c:	add	ip, pc, #0, 12
   12530:	add	ip, ip, #253952	; 0x3e000
   12534:	ldr	pc, [ip, #3132]!	; 0xc3c

00012538 <__stack_chk_fail@plt>:
   12538:	add	ip, pc, #0, 12
   1253c:	add	ip, ip, #253952	; 0x3e000
   12540:	ldr	pc, [ip, #3124]!	; 0xc34

00012544 <SSL_library_init@plt>:
   12544:	add	ip, pc, #0, 12
   12548:	add	ip, ip, #253952	; 0x3e000
   1254c:	ldr	pc, [ip, #3116]!	; 0xc2c

00012550 <BN_set_word@plt>:
   12550:	add	ip, pc, #0, 12
   12554:	add	ip, ip, #253952	; 0x3e000
   12558:	ldr	pc, [ip, #3108]!	; 0xc24

0001255c <CRYPTO_free@plt>:
   1255c:	add	ip, pc, #0, 12
   12560:	add	ip, ip, #253952	; 0x3e000
   12564:	ldr	pc, [ip, #3100]!	; 0xc1c

00012568 <EVP_MD_CTX_cleanup@plt>:
   12568:	add	ip, pc, #0, 12
   1256c:	add	ip, ip, #253952	; 0x3e000
   12570:	ldr	pc, [ip, #3092]!	; 0xc14

00012574 <ERR_get_error@plt>:
   12574:	add	ip, pc, #0, 12
   12578:	add	ip, ip, #253952	; 0x3e000
   1257c:	ldr	pc, [ip, #3084]!	; 0xc0c

00012580 <pclose@plt>:
   12580:	add	ip, pc, #0, 12
   12584:	add	ip, ip, #253952	; 0x3e000
   12588:	ldr	pc, [ip, #3076]!	; 0xc04

0001258c <BN_get_word@plt>:
   1258c:	add	ip, pc, #0, 12
   12590:	add	ip, ip, #253952	; 0x3e000
   12594:	ldr	pc, [ip, #3068]!	; 0xbfc

00012598 <lseek@plt>:
   12598:	add	ip, pc, #0, 12
   1259c:	add	ip, ip, #253952	; 0x3e000
   125a0:	ldr	pc, [ip, #3060]!	; 0xbf4

000125a4 <raise@plt>:
   125a4:	add	ip, pc, #0, 12
   125a8:	add	ip, ip, #253952	; 0x3e000
   125ac:	ldr	pc, [ip, #3052]!	; 0xbec

000125b0 <X509_free@plt>:
   125b0:	add	ip, pc, #0, 12
   125b4:	add	ip, ip, #253952	; 0x3e000
   125b8:	ldr	pc, [ip, #3044]!	; 0xbe4

000125bc <strtoull@plt>:
   125bc:	add	ip, pc, #0, 12
   125c0:	add	ip, ip, #253952	; 0x3e000
   125c4:	ldr	pc, [ip, #3036]!	; 0xbdc

000125c8 <calloc@plt>:
   125c8:	add	ip, pc, #0, 12
   125cc:	add	ip, ip, #253952	; 0x3e000
   125d0:	ldr	pc, [ip, #3028]!	; 0xbd4

000125d4 <fdatasync@plt>:
   125d4:	add	ip, pc, #0, 12
   125d8:	add	ip, ip, #253952	; 0x3e000
   125dc:	ldr	pc, [ip, #3020]!	; 0xbcc

000125e0 <ftell@plt>:
   125e0:	add	ip, pc, #0, 12
   125e4:	add	ip, ip, #253952	; 0x3e000
   125e8:	ldr	pc, [ip, #3012]!	; 0xbc4

000125ec <__vfprintf_chk@plt>:
   125ec:	add	ip, pc, #0, 12
   125f0:	add	ip, ip, #253952	; 0x3e000
   125f4:	ldr	pc, [ip, #3004]!	; 0xbbc

000125f8 <EVP_DigestFinal@plt>:
   125f8:	add	ip, pc, #0, 12
   125fc:	add	ip, ip, #253952	; 0x3e000
   12600:	ldr	pc, [ip, #2996]!	; 0xbb4

00012604 <fgets@plt>:
   12604:	add	ip, pc, #0, 12
   12608:	add	ip, ip, #253952	; 0x3e000
   1260c:	ldr	pc, [ip, #2988]!	; 0xbac

00012610 <__fxstat@plt>:
   12610:	add	ip, pc, #0, 12
   12614:	add	ip, ip, #253952	; 0x3e000
   12618:	ldr	pc, [ip, #2980]!	; 0xba4

0001261c <EVP_PKEY_set1_RSA@plt>:
   1261c:	add	ip, pc, #0, 12
   12620:	add	ip, ip, #253952	; 0x3e000
   12624:	ldr	pc, [ip, #2972]!	; 0xb9c

00012628 <fputc@plt>:
   12628:	add	ip, pc, #0, 12
   1262c:	add	ip, ip, #253952	; 0x3e000
   12630:	ldr	pc, [ip, #2964]!	; 0xb94

00012634 <fwrite@plt>:
   12634:	add	ip, pc, #0, 12
   12638:	add	ip, ip, #253952	; 0x3e000
   1263c:	ldr	pc, [ip, #2956]!	; 0xb8c

00012640 <BN_num_bits@plt>:
   12640:	add	ip, pc, #0, 12
   12644:	add	ip, ip, #253952	; 0x3e000
   12648:	ldr	pc, [ip, #2948]!	; 0xb84

0001264c <EVP_CIPHER_CTX_new@plt>:
   1264c:	add	ip, pc, #0, 12
   12650:	add	ip, ip, #253952	; 0x3e000
   12654:	ldr	pc, [ip, #2940]!	; 0xb7c

00012658 <memcpy@plt>:
   12658:	add	ip, pc, #0, 12
   1265c:	add	ip, ip, #253952	; 0x3e000
   12660:	ldr	pc, [ip, #2932]!	; 0xb74

00012664 <malloc@plt>:
   12664:	add	ip, pc, #0, 12
   12668:	add	ip, ip, #253952	; 0x3e000
   1266c:	ldr	pc, [ip, #2924]!	; 0xb6c

00012670 <EVP_CIPHER_CTX_set_padding@plt>:
   12670:	add	ip, pc, #0, 12
   12674:	add	ip, ip, #253952	; 0x3e000
   12678:	ldr	pc, [ip, #2916]!	; 0xb64

0001267c <strlen@plt>:
   1267c:	add	ip, pc, #0, 12
   12680:	add	ip, ip, #253952	; 0x3e000
   12684:	ldr	pc, [ip, #2908]!	; 0xb5c

00012688 <__snprintf_chk@plt>:
   12688:	add	ip, pc, #0, 12
   1268c:	add	ip, ip, #253952	; 0x3e000
   12690:	ldr	pc, [ip, #2900]!	; 0xb54

00012694 <getcwd@plt>:
   12694:	add	ip, pc, #0, 12
   12698:	add	ip, ip, #253952	; 0x3e000
   1269c:	ldr	pc, [ip, #2892]!	; 0xb4c

000126a0 <munmap@plt>:
   126a0:	add	ip, pc, #0, 12
   126a4:	add	ip, ip, #253952	; 0x3e000
   126a8:	ldr	pc, [ip, #2884]!	; 0xb44

000126ac <__memset_chk@plt>:
   126ac:	add	ip, pc, #0, 12
   126b0:	add	ip, ip, #253952	; 0x3e000
   126b4:	ldr	pc, [ip, #2876]!	; 0xb3c

000126b8 <fclose@plt>:
   126b8:	add	ip, pc, #0, 12
   126bc:	add	ip, ip, #253952	; 0x3e000
   126c0:	ldr	pc, [ip, #2868]!	; 0xb34

000126c4 <write@plt>:
   126c4:	add	ip, pc, #0, 12
   126c8:	add	ip, ip, #253952	; 0x3e000
   126cc:	ldr	pc, [ip, #2860]!	; 0xb2c

000126d0 <EVP_DigestSignInit@plt>:
   126d0:	add	ip, pc, #0, 12
   126d4:	add	ip, ip, #253952	; 0x3e000
   126d8:	ldr	pc, [ip, #2852]!	; 0xb24

000126dc <__xstat@plt>:
   126dc:	add	ip, pc, #0, 12
   126e0:	add	ip, ip, #253952	; 0x3e000
   126e4:	ldr	pc, [ip, #2844]!	; 0xb1c

000126e8 <BN_mul@plt>:
   126e8:	add	ip, pc, #0, 12
   126ec:	add	ip, ip, #253952	; 0x3e000
   126f0:	ldr	pc, [ip, #2836]!	; 0xb14

000126f4 <ENGINE_load_builtin_engines@plt>:
   126f4:	add	ip, pc, #0, 12
   126f8:	add	ip, ip, #253952	; 0x3e000
   126fc:	ldr	pc, [ip, #2828]!	; 0xb0c

00012700 <BN_rshift@plt>:
   12700:	add	ip, pc, #0, 12
   12704:	add	ip, ip, #253952	; 0x3e000
   12708:	ldr	pc, [ip, #2820]!	; 0xb04

0001270c <EVP_DigestUpdate@plt>:
   1270c:	add	ip, pc, #0, 12
   12710:	add	ip, ip, #253952	; 0x3e000
   12714:	ldr	pc, [ip, #2812]!	; 0xafc

00012718 <strcmp@plt>:
   12718:	add	ip, pc, #0, 12
   1271c:	add	ip, ip, #253952	; 0x3e000
   12720:	ldr	pc, [ip, #2804]!	; 0xaf4

00012724 <BN_mask_bits@plt>:
   12724:	add	ip, pc, #0, 12
   12728:	add	ip, ip, #253952	; 0x3e000
   1272c:	ldr	pc, [ip, #2796]!	; 0xaec

00012730 <time@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #253952	; 0x3e000
   12738:	ldr	pc, [ip, #2788]!	; 0xae4

0001273c <EVP_MD_CTX_init@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #253952	; 0x3e000
   12744:	ldr	pc, [ip, #2780]!	; 0xadc

00012748 <__errno_location@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #253952	; 0x3e000
   12750:	ldr	pc, [ip, #2772]!	; 0xad4

00012754 <memchr@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #253952	; 0x3e000
   1275c:	ldr	pc, [ip, #2764]!	; 0xacc

00012760 <sscanf@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #253952	; 0x3e000
   12768:	ldr	pc, [ip, #2756]!	; 0xac4

0001276c <X509_get_pubkey@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #253952	; 0x3e000
   12774:	ldr	pc, [ip, #2748]!	; 0xabc

00012778 <strncpy@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #253952	; 0x3e000
   12780:	ldr	pc, [ip, #2740]!	; 0xab4

00012784 <memcmp@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #253952	; 0x3e000
   1278c:	ldr	pc, [ip, #2732]!	; 0xaac

00012790 <OpenSSL_add_all_ciphers@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #253952	; 0x3e000
   12798:	ldr	pc, [ip, #2724]!	; 0xaa4

0001279c <__sprintf_chk@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #253952	; 0x3e000
   127a4:	ldr	pc, [ip, #2716]!	; 0xa9c

000127a8 <strrchr@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #253952	; 0x3e000
   127b0:	ldr	pc, [ip, #2708]!	; 0xa94

000127b4 <BN_copy@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #253952	; 0x3e000
   127bc:	ldr	pc, [ip, #2700]!	; 0xa8c

000127c0 <mktime@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #253952	; 0x3e000
   127c8:	ldr	pc, [ip, #2692]!	; 0xa84

000127cc <fputs@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #253952	; 0x3e000
   127d4:	ldr	pc, [ip, #2684]!	; 0xa7c

000127d8 <getenv@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #253952	; 0x3e000
   127e0:	ldr	pc, [ip, #2676]!	; 0xa74

000127e4 <__libc_start_main@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #253952	; 0x3e000
   127ec:	ldr	pc, [ip, #2668]!	; 0xa6c

000127f0 <EVP_cleanup@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #253952	; 0x3e000
   127f8:	ldr	pc, [ip, #2660]!	; 0xa64

000127fc <__gmon_start__@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #253952	; 0x3e000
   12804:	ldr	pc, [ip, #2652]!	; 0xa5c

00012808 <rename@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #253952	; 0x3e000
   12810:	ldr	pc, [ip, #2644]!	; 0xa54

00012814 <BN_new@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #253952	; 0x3e000
   1281c:	ldr	pc, [ip, #2636]!	; 0xa4c

00012820 <strchr@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #253952	; 0x3e000
   12828:	ldr	pc, [ip, #2628]!	; 0xa44

0001282c <__printf_chk@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #253952	; 0x3e000
   12834:	ldr	pc, [ip, #2620]!	; 0xa3c

Disassembly of section .text:

00012838 <crc32@@Base-0x7b24>:
   12838:	movw	r1, #7868	; 0x1ebc
   1283c:	movt	r1, #5
   12840:	mov	r3, r0
   12844:	movw	r2, #41520	; 0xa230
   12848:	ldr	r0, [r1]
   1284c:	movt	r2, #3
   12850:	push	{r4, lr}
   12854:	mov	r1, #1
   12858:	bl	12358 <__fprintf_chk@plt>
   1285c:	mov	r0, #1
   12860:	bl	12298 <exit@plt>
   12864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12868:	movw	r9, #3824	; 0xef0
   1286c:	movt	r9, #5
   12870:	mov	r6, r1
   12874:	ldr	r2, [r6]
   12878:	mov	r3, #0
   1287c:	ldr	r1, [r9]
   12880:	sub	sp, sp, #156	; 0x9c
   12884:	movw	r4, #7608	; 0x1db8
   12888:	movw	r5, #62292	; 0xf354
   1288c:	movt	r4, #5
   12890:	movw	r8, #7864	; 0x1eb8
   12894:	movw	sl, #62228	; 0xf314
   12898:	movt	r5, #3
   1289c:	movt	r8, #5
   128a0:	movt	sl, #3
   128a4:	mov	fp, r3
   128a8:	mov	r7, r0
   128ac:	str	r1, [sp, #148]	; 0x94
   128b0:	str	r3, [sp, #8]
   128b4:	str	r2, [r4, #80]	; 0x50
   128b8:	str	r3, [r4, #56]	; 0x38
   128bc:	str	r3, [r4, #60]	; 0x3c
   128c0:	mov	r2, r5
   128c4:	mov	r1, r6
   128c8:	mov	r0, r7
   128cc:	bl	124b4 <getopt@plt>
   128d0:	cmn	r0, #1
   128d4:	beq	12cc8 <__printf_chk@plt+0x49c>
   128d8:	sub	r0, r0, #65	; 0x41
   128dc:	cmp	r0, #55	; 0x37
   128e0:	ldrls	pc, [pc, r0, lsl #2]
   128e4:	b	13194 <__printf_chk@plt+0x968>
   128e8:	andeq	r2, r1, ip, lsr sl
   128ec:	muleq	r1, r4, r1
   128f0:	andeq	r2, r1, r4, lsl sl
   128f4:	andeq	r2, r1, r8, lsl #20
   128f8:	strdeq	r2, [r1], -ip
   128fc:	andeq	r2, r1, r8, ror #19
   12900:	muleq	r1, r4, r1
   12904:	muleq	r1, r4, r1
   12908:	muleq	r1, r4, r1
   1290c:	muleq	r1, r4, r1
   12910:			; <UNDEFINED> instruction: 0x00012cbc
   12914:	muleq	r1, r4, r1
   12918:	muleq	r1, r4, r1
   1291c:			; <UNDEFINED> instruction: 0x00012cb0
   12920:	andeq	r2, r1, r8, lsl #25
   12924:	muleq	r1, r4, r1
   12928:	muleq	r1, r4, r1
   1292c:	andeq	r2, r1, ip, ror ip
   12930:	muleq	r1, r4, r1
   12934:	andeq	r2, r1, r4, lsr ip
   12938:	muleq	r1, r4, r1
   1293c:	andeq	r2, r1, r4, lsl ip
   12940:	muleq	r1, r4, r1
   12944:	muleq	r1, r4, r1
   12948:	muleq	r1, r4, r1
   1294c:	muleq	r1, r4, r1
   12950:	muleq	r1, r4, r1
   12954:	muleq	r1, r4, r1
   12958:	muleq	r1, r4, r1
   1295c:	muleq	r1, r4, r1
   12960:	muleq	r1, r4, r1
   12964:	muleq	r1, r4, r1
   12968:	andeq	r2, r1, r0, asr #23
   1296c:	andeq	r2, r1, ip, ror fp
   12970:	andeq	r2, r1, r0, ror fp
   12974:	andeq	r2, r1, ip, asr fp
   12978:	andeq	r2, r1, ip, lsr #22
   1297c:	andeq	r2, r1, r8, asr #19
   12980:	muleq	r1, r4, r1
   12984:	muleq	r1, r4, r1
   12988:	andeq	r2, r1, r0, lsr #22
   1298c:	muleq	r1, r4, r1
   12990:	andeq	r2, r1, r4, lsl fp
   12994:	andeq	r2, r1, r8, lsl #22
   12998:	muleq	r1, r4, r1
   1299c:	strdeq	r2, [r1], -ip
   129a0:	muleq	r1, r4, r1
   129a4:	andeq	r2, r1, r8, lsr #21
   129a8:	muleq	r1, ip, sl
   129ac:	muleq	r1, r0, sl
   129b0:	andeq	r2, r1, r4, lsl #21
   129b4:	muleq	r1, r4, r1
   129b8:	muleq	r1, r4, r1
   129bc:	andeq	r2, r1, r4, ror sl
   129c0:	muleq	r1, r4, r1
   129c4:	andeq	r2, r1, r4, ror #20
   129c8:	ldr	fp, [r8]
   129cc:	movw	r1, #62164	; 0xf2d4
   129d0:	movt	r1, #3
   129d4:	mov	r0, fp
   129d8:	bl	12718 <strcmp@plt>
   129dc:	clz	r0, r0
   129e0:	lsr	r0, r0, #5
   129e4:	strb	r0, [r4, #112]	; 0x70
   129e8:	mov	r3, #8
   129ec:	str	r3, [r4, #44]	; 0x2c
   129f0:	mov	r3, #1
   129f4:	str	r3, [r4, #8]
   129f8:	b	128c0 <__printf_chk@plt+0x94>
   129fc:	mov	r3, #1
   12a00:	strb	r3, [r4, #132]	; 0x84
   12a04:	b	128c0 <__printf_chk@plt+0x94>
   12a08:	ldr	r3, [r8]
   12a0c:	str	r3, [r4, #52]	; 0x34
   12a10:	b	128c0 <__printf_chk@plt+0x94>
   12a14:	ldr	r0, [r8]
   12a18:	bl	1b26c <crc32@@Base+0xf10>
   12a1c:	cmp	r0, #0
   12a20:	str	r0, [r4, #48]	; 0x30
   12a24:	bge	128c0 <__printf_chk@plt+0x94>
   12a28:	mov	r0, #1
   12a2c:	bl	369d0 <crc32@@Base+0x1c674>
   12a30:	movw	r0, #62108	; 0xf29c
   12a34:	movt	r0, #3
   12a38:	bl	368f4 <crc32@@Base+0x1c598>
   12a3c:	ldr	r0, [r8]
   12a40:	bl	1b23c <crc32@@Base+0xee0>
   12a44:	cmp	r0, #0
   12a48:	str	r0, [r4, #40]	; 0x28
   12a4c:	bge	128c0 <__printf_chk@plt+0x94>
   12a50:	mov	r0, #0
   12a54:	bl	369d0 <crc32@@Base+0x1c674>
   12a58:	movw	r0, #62044	; 0xf25c
   12a5c:	movt	r0, #3
   12a60:	bl	368f4 <crc32@@Base+0x1c598>
   12a64:	ldr	r3, [r4, #28]
   12a68:	add	r3, r3, #1
   12a6c:	str	r3, [r4, #28]
   12a70:	b	128c0 <__printf_chk@plt+0x94>
   12a74:	ldr	r3, [r4, #24]
   12a78:	add	r3, r3, #1
   12a7c:	str	r3, [r4, #24]
   12a80:	b	128c0 <__printf_chk@plt+0x94>
   12a84:	mov	r3, #1
   12a88:	str	r3, [r4, #32]
   12a8c:	b	128c0 <__printf_chk@plt+0x94>
   12a90:	mov	r3, #1
   12a94:	str	r3, [r4, #100]	; 0x64
   12a98:	b	128c0 <__printf_chk@plt+0x94>
   12a9c:	mov	r3, #1
   12aa0:	strb	r3, [r4, #133]	; 0x85
   12aa4:	b	128c0 <__printf_chk@plt+0x94>
   12aa8:	mov	r2, #16
   12aac:	add	r1, sp, #56	; 0x38
   12ab0:	ldr	r0, [r8]
   12ab4:	bl	125bc <strtoull@plt>
   12ab8:	ldr	r3, [sp, #56]	; 0x38
   12abc:	str	r0, [r4, #136]	; 0x88
   12ac0:	ldrb	r3, [r3]
   12ac4:	cmp	r3, #0
   12ac8:	beq	128c0 <__printf_chk@plt+0x94>
   12acc:	ldr	ip, [r8]
   12ad0:	movw	r0, #7868	; 0x1ebc
   12ad4:	movt	r0, #5
   12ad8:	ldr	r3, [r4, #80]	; 0x50
   12adc:	movw	r2, #62200	; 0xf2f8
   12ae0:	mov	r1, #1
   12ae4:	str	ip, [sp]
   12ae8:	movt	r2, #3
   12aec:	ldr	r0, [r0]
   12af0:	bl	12358 <__fprintf_chk@plt>
   12af4:	mov	r0, #1
   12af8:	bl	12298 <exit@plt>
   12afc:	ldr	r3, [r8]
   12b00:	str	r3, [r4, #64]	; 0x40
   12b04:	b	128c0 <__printf_chk@plt+0x94>
   12b08:	mov	r3, #1
   12b0c:	str	r3, [r4, #16]
   12b10:	b	128c0 <__printf_chk@plt+0x94>
   12b14:	ldr	r3, [r8]
   12b18:	str	r3, [r4, #88]	; 0x58
   12b1c:	b	128c0 <__printf_chk@plt+0x94>
   12b20:	ldr	r3, [r8]
   12b24:	str	r3, [r4, #120]	; 0x78
   12b28:	b	128c0 <__printf_chk@plt+0x94>
   12b2c:	mov	r2, #16
   12b30:	add	r1, sp, #56	; 0x38
   12b34:	ldr	r0, [r8]
   12b38:	bl	125bc <strtoull@plt>
   12b3c:	ldr	r3, [sp, #56]	; 0x38
   12b40:	str	r0, [r4, #60]	; 0x3c
   12b44:	ldrb	r3, [r3]
   12b48:	cmp	r3, #0
   12b4c:	bne	1353c <__printf_chk@plt+0xd10>
   12b50:	mov	r3, #1
   12b54:	str	r3, [r4, #4]
   12b58:	b	128c0 <__printf_chk@plt+0x94>
   12b5c:	ldr	r3, [r8]
   12b60:	mov	r2, #1
   12b64:	str	r2, [r4]
   12b68:	str	r3, [r4, #72]	; 0x48
   12b6c:	b	128c0 <__printf_chk@plt+0x94>
   12b70:	ldr	r3, [r8]
   12b74:	str	r3, [r4, #96]	; 0x60
   12b78:	b	128c0 <__printf_chk@plt+0x94>
   12b7c:	ldr	r3, [r8]
   12b80:	mov	r1, #12
   12b84:	mov	r0, #1
   12b88:	str	r3, [sp, #12]
   12b8c:	bl	125c8 <calloc@plt>
   12b90:	ldr	r3, [sp, #12]
   12b94:	cmp	r0, #0
   12b98:	beq	13310 <__printf_chk@plt+0xae4>
   12b9c:	ldr	r2, [r4, #128]	; 0x80
   12ba0:	mov	r1, #8
   12ba4:	str	r3, [r0, #8]
   12ba8:	cmp	r2, #0
   12bac:	str	r1, [r0, #4]
   12bb0:	streq	r0, [r4, #124]	; 0x7c
   12bb4:	strne	r0, [r2]
   12bb8:	str	r0, [r4, #128]	; 0x80
   12bbc:	b	128c0 <__printf_chk@plt+0x94>
   12bc0:	mov	r2, #16
   12bc4:	add	r1, sp, #56	; 0x38
   12bc8:	ldr	r0, [r8]
   12bcc:	bl	125bc <strtoull@plt>
   12bd0:	ldr	r3, [sp, #56]	; 0x38
   12bd4:	str	r0, [r4, #56]	; 0x38
   12bd8:	ldrb	r3, [r3]
   12bdc:	cmp	r3, #0
   12be0:	beq	128c0 <__printf_chk@plt+0x94>
   12be4:	ldr	ip, [r8]
   12be8:	movw	r0, #7868	; 0x1ebc
   12bec:	movt	r0, #5
   12bf0:	ldr	r3, [r4, #80]	; 0x50
   12bf4:	movw	r2, #62012	; 0xf23c
   12bf8:	mov	r1, #1
   12bfc:	str	ip, [sp]
   12c00:	movt	r2, #3
   12c04:	ldr	r0, [r0]
   12c08:	bl	12358 <__fprintf_chk@plt>
   12c0c:	mov	r0, #1
   12c10:	bl	12298 <exit@plt>
   12c14:	movw	r2, #31864	; 0x7c78
   12c18:	movw	r1, #62256	; 0xf330
   12c1c:	movt	r2, #3
   12c20:	movt	r1, #3
   12c24:	mov	r0, #1
   12c28:	bl	1282c <__printf_chk@plt>
   12c2c:	mov	r0, #0
   12c30:	bl	12298 <exit@plt>
   12c34:	ldr	r3, [r8]
   12c38:	mov	r1, sl
   12c3c:	mov	r0, r3
   12c40:	str	r3, [sp, #8]
   12c44:	bl	12718 <strcmp@plt>
   12c48:	ldr	r3, [sp, #8]
   12c4c:	subs	r2, r0, #0
   12c50:	beq	13298 <__printf_chk@plt+0xa6c>
   12c54:	mov	r0, r3
   12c58:	bl	1b254 <crc32@@Base+0xef8>
   12c5c:	subs	r3, r0, #0
   12c60:	str	r3, [sp, #8]
   12c64:	bge	128c0 <__printf_chk@plt+0x94>
   12c68:	mov	r0, #3
   12c6c:	bl	369d0 <crc32@@Base+0x1c674>
   12c70:	movw	r0, #62236	; 0xf31c
   12c74:	movt	r0, #3
   12c78:	bl	368f4 <crc32@@Base+0x1c598>
   12c7c:	ldr	r3, [r8]
   12c80:	str	r3, [r4, #68]	; 0x44
   12c84:	b	128c0 <__printf_chk@plt+0x94>
   12c88:	ldr	r0, [r8]
   12c8c:	bl	1b224 <crc32@@Base+0xec8>
   12c90:	cmp	r0, #0
   12c94:	str	r0, [r4, #36]	; 0x24
   12c98:	bge	128c0 <__printf_chk@plt+0x94>
   12c9c:	mov	r0, #2
   12ca0:	bl	369d0 <crc32@@Base+0x1c674>
   12ca4:	movw	r0, #62172	; 0xf2dc
   12ca8:	movt	r0, #3
   12cac:	bl	368f4 <crc32@@Base+0x1c598>
   12cb0:	ldr	r3, [r8]
   12cb4:	str	r3, [r4, #140]	; 0x8c
   12cb8:	b	128c0 <__printf_chk@plt+0x94>
   12cbc:	ldr	r3, [r8]
   12cc0:	str	r3, [r4, #92]	; 0x5c
   12cc4:	b	128c0 <__printf_chk@plt+0x94>
   12cc8:	movw	r3, #7856	; 0x1eb0
   12ccc:	movt	r3, #5
   12cd0:	ldr	r3, [r3]
   12cd4:	cmp	r7, r3
   12cd8:	ldrgt	r3, [r6, r3, lsl #2]
   12cdc:	strgt	r3, [r4, #76]	; 0x4c
   12ce0:	ldr	r3, [r4, #44]	; 0x2c
   12ce4:	cmp	r3, #8
   12ce8:	beq	13024 <__printf_chk@plt+0x7f8>
   12cec:	ldr	r3, [sp, #8]
   12cf0:	cmp	r3, #0
   12cf4:	bne	12f84 <__printf_chk@plt+0x758>
   12cf8:	ldr	r3, [r4, #76]	; 0x4c
   12cfc:	cmp	r3, #0
   12d00:	beq	1356c <__printf_chk@plt+0xd40>
   12d04:	ldr	r0, [r4, #44]	; 0x2c
   12d08:	bl	1b284 <crc32@@Base+0xf28>
   12d0c:	subs	r6, r0, #0
   12d10:	beq	13578 <__printf_chk@plt+0xd4c>
   12d14:	ldr	r3, [r6, #12]
   12d18:	cmp	r3, #0
   12d1c:	beq	12d34 <__printf_chk@plt+0x508>
   12d20:	movw	r0, #7608	; 0x1db8
   12d24:	movt	r0, #5
   12d28:	blx	r3
   12d2c:	cmp	r0, #0
   12d30:	bne	135b4 <__printf_chk@plt+0xd88>
   12d34:	ldr	r3, [r4, #4]
   12d38:	cmp	r3, #0
   12d3c:	bne	12d5c <__printf_chk@plt+0x530>
   12d40:	ldr	r2, [r4, #28]
   12d44:	ldr	r3, [r4, #56]	; 0x38
   12d48:	cmp	r2, #0
   12d4c:	ldrne	r2, [r6, #4]
   12d50:	str	r3, [r4, #60]	; 0x3c
   12d54:	addne	r3, r2, r3
   12d58:	strne	r3, [r4, #60]	; 0x3c
   12d5c:	ldr	r3, [r4, #8]
   12d60:	cmp	r3, #0
   12d64:	bne	12f34 <__printf_chk@plt+0x708>
   12d68:	ldr	r3, [r4, #16]
   12d6c:	cmp	r3, #0
   12d70:	beq	12f6c <__printf_chk@plt+0x740>
   12d74:	mov	r1, #0
   12d78:	ldr	r0, [r4, #76]	; 0x4c
   12d7c:	bl	124d8 <open@plt>
   12d80:	mov	r5, r0
   12d84:	cmp	r5, #0
   12d88:	blt	13464 <__printf_chk@plt+0xc38>
   12d8c:	ldr	r3, [r4, #16]
   12d90:	cmp	r3, #0
   12d94:	bne	12f98 <__printf_chk@plt+0x76c>
   12d98:	ldr	r7, [r4, #8]
   12d9c:	cmp	r7, #0
   12da0:	bne	12f98 <__printf_chk@plt+0x76c>
   12da4:	ldr	r3, [r4, #44]	; 0x2c
   12da8:	bic	r3, r3, #2
   12dac:	cmp	r3, #4
   12db0:	bne	131f0 <__printf_chk@plt+0x9c4>
   12db4:	ldr	r3, [r6, #40]	; 0x28
   12db8:	cmp	r3, #0
   12dbc:	beq	13358 <__printf_chk@plt+0xb2c>
   12dc0:	movw	r0, #7608	; 0x1db8
   12dc4:	mov	r1, r6
   12dc8:	movt	r0, #5
   12dcc:	blx	r3
   12dd0:	mov	r7, r0
   12dd4:	ldr	r2, [r6, #4]
   12dd8:	mov	r0, r5
   12ddc:	ldr	r1, [r6, #8]
   12de0:	bl	126c4 <write@plt>
   12de4:	ldr	r3, [r6, #4]
   12de8:	cmp	r0, r3
   12dec:	bne	12eec <__printf_chk@plt+0x6c0>
   12df0:	ldr	r3, [r4, #32]
   12df4:	cmp	r3, #0
   12df8:	bne	13068 <__printf_chk@plt+0x83c>
   12dfc:	ldr	r2, [r4, #44]	; 0x2c
   12e00:	bic	r1, r2, #2
   12e04:	cmp	r1, #4
   12e08:	beq	13118 <__printf_chk@plt+0x8ec>
   12e0c:	cmp	r2, #15
   12e10:	beq	132b0 <__printf_chk@plt+0xa84>
   12e14:	cmp	r2, #28
   12e18:	beq	132c4 <__printf_chk@plt+0xa98>
   12e1c:	cmp	r2, #38	; 0x26
   12e20:	beq	1333c <__printf_chk@plt+0xb10>
   12e24:	cmp	r2, #37	; 0x25
   12e28:	beq	132f4 <__printf_chk@plt+0xac8>
   12e2c:	mov	r2, r7
   12e30:	ldr	r1, [r4, #72]	; 0x48
   12e34:	mov	r0, r5
   12e38:	bl	36b38 <crc32@@Base+0x1c7dc>
   12e3c:	ldr	r3, [r4, #44]	; 0x2c
   12e40:	cmp	r3, #32
   12e44:	bne	13068 <__printf_chk@plt+0x83c>
   12e48:	ldr	r3, [r4, #104]	; 0x68
   12e4c:	mov	r1, #209	; 0xd1
   12e50:	ldr	r2, [r4, #56]	; 0x38
   12e54:	movt	r1, #16416	; 0x4020
   12e58:	add	r7, r3, #4080	; 0xff0
   12e5c:	str	r1, [sp, #24]
   12e60:	add	r7, r7, #15
   12e64:	ldr	r1, [r6, #4]
   12e68:	bic	r7, r7, #4080	; 0xff0
   12e6c:	str	r2, [sp, #28]
   12e70:	bic	r7, r7, #15
   12e74:	add	r8, sp, #152	; 0x98
   12e78:	add	r2, r2, r7
   12e7c:	sub	r2, r2, r1
   12e80:	str	r3, [r8, #-132]!	; 0xffffff7c
   12e84:	str	r2, [sp, #44]	; 0x2c
   12e88:	add	r2, r2, #32
   12e8c:	str	r2, [sp, #48]	; 0x30
   12e90:	mov	r2, #0
   12e94:	str	r2, [sp, #32]
   12e98:	str	r2, [sp, #36]	; 0x24
   12e9c:	str	r2, [sp, #40]	; 0x28
   12ea0:	str	r2, [sp, #52]	; 0x34
   12ea4:	b	12ecc <__printf_chk@plt+0x6a0>
   12ea8:	mov	r2, #1
   12eac:	mov	r1, r8
   12eb0:	mov	r0, r5
   12eb4:	bl	126c4 <write@plt>
   12eb8:	cmp	r0, #1
   12ebc:	bne	12eec <__printf_chk@plt+0x6c0>
   12ec0:	ldr	r3, [sp, #20]
   12ec4:	add	r3, r3, #1
   12ec8:	str	r3, [sp, #20]
   12ecc:	cmp	r3, r7
   12ed0:	bcc	12ea8 <__printf_chk@plt+0x67c>
   12ed4:	mov	r2, #32
   12ed8:	add	r1, sp, #24
   12edc:	mov	r0, r5
   12ee0:	bl	126c4 <write@plt>
   12ee4:	cmp	r0, #32
   12ee8:	beq	13068 <__printf_chk@plt+0x83c>
   12eec:	movw	r2, #7868	; 0x1ebc
   12ef0:	movt	r2, #5
   12ef4:	ldr	r6, [r4, #80]	; 0x50
   12ef8:	ldr	r5, [r2]
   12efc:	bl	12748 <__errno_location@plt>
   12f00:	ldr	r4, [r4, #76]	; 0x4c
   12f04:	ldr	r0, [r0]
   12f08:	bl	122a4 <strerror@plt>
   12f0c:	movw	r2, #61984	; 0xf220
   12f10:	movt	r2, #3
   12f14:	mov	r3, r6
   12f18:	mov	r1, #1
   12f1c:	str	r4, [sp]
   12f20:	str	r0, [sp, #4]
   12f24:	mov	r0, r5
   12f28:	bl	12358 <__fprintf_chk@plt>
   12f2c:	mov	r0, #1
   12f30:	bl	12298 <exit@plt>
   12f34:	ldr	r3, [r6, #36]	; 0x24
   12f38:	cmp	r3, #0
   12f3c:	beq	12d74 <__printf_chk@plt+0x548>
   12f40:	movw	r0, #7608	; 0x1db8
   12f44:	movt	r0, #5
   12f48:	blx	r3
   12f4c:	cmp	r0, #0
   12f50:	bne	12f30 <__printf_chk@plt+0x704>
   12f54:	ldr	r3, [r4, #16]
   12f58:	cmp	r3, #0
   12f5c:	bne	12d74 <__printf_chk@plt+0x548>
   12f60:	ldr	r3, [r4, #8]
   12f64:	cmp	r3, #0
   12f68:	bne	12d74 <__printf_chk@plt+0x548>
   12f6c:	movw	r2, #438	; 0x1b6
   12f70:	movw	r1, #578	; 0x242
   12f74:	ldr	r0, [r4, #76]	; 0x4c
   12f78:	bl	124d8 <open@plt>
   12f7c:	mov	r5, r0
   12f80:	b	12d84 <__printf_chk@plt+0x558>
   12f84:	cmp	r3, #6
   12f88:	beq	131d8 <__printf_chk@plt+0x9ac>
   12f8c:	ldr	r3, [sp, #8]
   12f90:	str	r3, [r4, #44]	; 0x2c
   12f94:	b	12cf8 <__printf_chk@plt+0x4cc>
   12f98:	mov	r1, r5
   12f9c:	mov	r0, #3
   12fa0:	add	r2, sp, #56	; 0x38
   12fa4:	bl	12610 <__fxstat@plt>
   12fa8:	cmp	r0, #0
   12fac:	blt	134b0 <__printf_chk@plt+0xc84>
   12fb0:	ldr	r1, [sp, #100]	; 0x64
   12fb4:	ldr	r3, [r6, #4]
   12fb8:	cmp	r1, r3
   12fbc:	bcc	13480 <__printf_chk@plt+0xc54>
   12fc0:	mov	r3, #1
   12fc4:	mov	r0, #0
   12fc8:	str	r5, [sp]
   12fcc:	mov	r2, r3
   12fd0:	str	r0, [sp, #4]
   12fd4:	bl	12490 <mmap@plt>
   12fd8:	cmn	r0, #1
   12fdc:	mov	r7, r0
   12fe0:	beq	131a0 <__printf_chk@plt+0x974>
   12fe4:	ldr	r3, [r4, #8]
   12fe8:	mov	r2, r6
   12fec:	add	r1, sp, #56	; 0x38
   12ff0:	cmp	r3, #0
   12ff4:	movw	r3, #7608	; 0x1db8
   12ff8:	movt	r3, #5
   12ffc:	beq	1305c <__printf_chk@plt+0x830>
   13000:	bl	1b3b8 <crc32@@Base+0x105c>
   13004:	mov	r4, r0
   13008:	ldr	r1, [sp, #100]	; 0x64
   1300c:	mov	r0, r7
   13010:	bl	126a0 <munmap@plt>
   13014:	mov	r0, r5
   13018:	bl	123b8 <close@plt>
   1301c:	mov	r0, r4
   13020:	bl	12298 <exit@plt>
   13024:	ldr	r2, [sp, #8]
   13028:	ldrb	r3, [r4, #112]	; 0x70
   1302c:	cmp	r2, #0
   13030:	moveq	r2, #2
   13034:	cmp	r3, #0
   13038:	str	r2, [r4, #116]	; 0x74
   1303c:	streq	fp, [r4, #72]	; 0x48
   13040:	beq	12cf8 <__printf_chk@plt+0x4cc>
   13044:	ldr	r3, [r4, #72]	; 0x48
   13048:	cmp	r3, #0
   1304c:	bne	12cf8 <__printf_chk@plt+0x4cc>
   13050:	movw	r0, #62340	; 0xf384
   13054:	movt	r0, #3
   13058:	bl	368f4 <crc32@@Base+0x1c598>
   1305c:	bl	1b2e8 <crc32@@Base+0xf8c>
   13060:	mov	r4, r0
   13064:	b	13008 <__printf_chk@plt+0x7dc>
   13068:	mov	r0, r5
   1306c:	bl	125d4 <fdatasync@plt>
   13070:	mov	r1, r5
   13074:	add	r2, sp, #56	; 0x38
   13078:	mov	r0, #3
   1307c:	bl	12610 <__fxstat@plt>
   13080:	cmp	r0, #0
   13084:	blt	134b0 <__printf_chk@plt+0xc84>
   13088:	ldr	r8, [sp, #100]	; 0x64
   1308c:	mov	r3, #0
   13090:	str	r5, [sp]
   13094:	mov	r0, r3
   13098:	str	r3, [sp, #4]
   1309c:	mov	r2, #3
   130a0:	mov	r3, #1
   130a4:	mov	r1, r8
   130a8:	str	r8, [r4, #104]	; 0x68
   130ac:	bl	12490 <mmap@plt>
   130b0:	cmn	r0, #1
   130b4:	mov	r7, r0
   130b8:	beq	13504 <__printf_chk@plt+0xcd8>
   130bc:	ldr	r9, [r6, #24]
   130c0:	cmp	r9, #0
   130c4:	beq	134cc <__printf_chk@plt+0xca0>
   130c8:	add	r1, sp, #56	; 0x38
   130cc:	movw	r3, #7608	; 0x1db8
   130d0:	mov	r2, r5
   130d4:	movt	r3, #5
   130d8:	blx	r9
   130dc:	ldr	r3, [r6, #20]
   130e0:	cmp	r3, #0
   130e4:	beq	1336c <__printf_chk@plt+0xb40>
   130e8:	mov	r0, r7
   130ec:	blx	r3
   130f0:	mov	r1, r8
   130f4:	mov	r0, r7
   130f8:	bl	126a0 <munmap@plt>
   130fc:	mov	r0, r5
   13100:	bl	125d4 <fdatasync@plt>
   13104:	mov	r0, r5
   13108:	bl	123b8 <close@plt>
   1310c:	cmp	r0, #0
   13110:	beq	12f30 <__printf_chk@plt+0x704>
   13114:	b	12eec <__printf_chk@plt+0x6c0>
   13118:	ldr	r7, [r4, #72]	; 0x48
   1311c:	mov	r8, r3
   13120:	mov	sl, #58	; 0x3a
   13124:	cmp	r7, #0
   13128:	beq	13238 <__printf_chk@plt+0xa0c>
   1312c:	mov	r1, #58	; 0x3a
   13130:	mov	r0, r7
   13134:	bl	12820 <strchr@plt>
   13138:	add	r2, sp, #56	; 0x38
   1313c:	mov	r1, r7
   13140:	subs	r9, r0, #0
   13144:	mov	r0, #3
   13148:	strbne	r8, [r9]
   1314c:	bl	126dc <__xstat@plt>
   13150:	cmp	r0, #0
   13154:	blt	133ac <__printf_chk@plt+0xb80>
   13158:	ldr	r3, [sp, #100]	; 0x64
   1315c:	add	r7, sp, #152	; 0x98
   13160:	mov	r2, #4
   13164:	mov	r0, r5
   13168:	rev	r3, r3
   1316c:	str	r3, [r7, #-128]!	; 0xffffff80
   13170:	mov	r1, r7
   13174:	bl	126c4 <write@plt>
   13178:	cmp	r0, #4
   1317c:	bne	12eec <__printf_chk@plt+0x6c0>
   13180:	cmp	r9, #0
   13184:	beq	1323c <__printf_chk@plt+0xa10>
   13188:	mov	r7, r9
   1318c:	strb	sl, [r7], #1
   13190:	b	13124 <__printf_chk@plt+0x8f8>
   13194:	movw	r0, #62276	; 0xf344
   13198:	movt	r0, #3
   1319c:	bl	368f4 <crc32@@Base+0x1c598>
   131a0:	movw	r2, #7868	; 0x1ebc
   131a4:	movt	r2, #5
   131a8:	ldr	r6, [r4, #80]	; 0x50
   131ac:	ldr	r5, [r2]
   131b0:	bl	12748 <__errno_location@plt>
   131b4:	ldr	r4, [r4, #76]	; 0x4c
   131b8:	ldr	r0, [r0]
   131bc:	bl	122a4 <strerror@plt>
   131c0:	movw	r2, #31484	; 0x7afc
   131c4:	str	r4, [sp]
   131c8:	mov	r3, r6
   131cc:	mov	r1, #1
   131d0:	movt	r2, #3
   131d4:	b	12f20 <__printf_chk@plt+0x6f4>
   131d8:	ldr	r3, [r4, #72]	; 0x48
   131dc:	cmp	r3, #0
   131e0:	bne	12f8c <__printf_chk@plt+0x760>
   131e4:	movw	r0, #62380	; 0xf3ac
   131e8:	movt	r0, #3
   131ec:	bl	368f4 <crc32@@Base+0x1c598>
   131f0:	mov	r1, r7
   131f4:	ldr	r0, [r4, #72]	; 0x48
   131f8:	bl	124d8 <open@plt>
   131fc:	subs	r8, r0, #0
   13200:	blt	13428 <__printf_chk@plt+0xbfc>
   13204:	add	r2, sp, #56	; 0x38
   13208:	mov	r1, r8
   1320c:	mov	r0, #3
   13210:	bl	12610 <__fxstat@plt>
   13214:	cmp	r0, #0
   13218:	blt	133f0 <__printf_chk@plt+0xbc4>
   1321c:	ldr	r2, [r6, #4]
   13220:	mov	r0, r8
   13224:	ldr	r3, [sp, #100]	; 0x64
   13228:	add	r3, r3, r2
   1322c:	str	r3, [r4, #104]	; 0x68
   13230:	bl	123b8 <close@plt>
   13234:	b	12db4 <__printf_chk@plt+0x588>
   13238:	add	r7, sp, #24
   1323c:	mov	r1, r7
   13240:	mov	r2, #4
   13244:	mov	r0, r5
   13248:	mov	r8, #0
   1324c:	str	r8, [sp, #24]
   13250:	bl	126c4 <write@plt>
   13254:	cmp	r0, #4
   13258:	ldreq	r7, [r4, #72]	; 0x48
   1325c:	moveq	r9, #58	; 0x3a
   13260:	bne	12eec <__printf_chk@plt+0x6c0>
   13264:	mov	r1, #58	; 0x3a
   13268:	mov	r0, r7
   1326c:	bl	12820 <strchr@plt>
   13270:	cmp	r0, #0
   13274:	beq	13398 <__printf_chk@plt+0xb6c>
   13278:	strb	r8, [r0]
   1327c:	mov	r1, r7
   13280:	mov	r2, #1
   13284:	mov	r7, r0
   13288:	mov	r0, r5
   1328c:	bl	36b38 <crc32@@Base+0x1c7dc>
   13290:	strb	r9, [r7], #1
   13294:	b	13264 <__printf_chk@plt+0xa38>
   13298:	mov	r0, #3
   1329c:	str	r2, [sp, #8]
   132a0:	bl	369d0 <crc32@@Base+0x1c674>
   132a4:	ldr	r2, [sp, #8]
   132a8:	mov	r0, r2
   132ac:	bl	12298 <exit@plt>
   132b0:	movw	r1, #7608	; 0x1db8
   132b4:	mov	r0, r5
   132b8:	movt	r1, #5
   132bc:	bl	25c50 <crc32@@Base+0xb8f4>
   132c0:	b	12e3c <__printf_chk@plt+0x610>
   132c4:	movw	r1, #7608	; 0x1db8
   132c8:	mov	r0, r5
   132cc:	movt	r1, #5
   132d0:	bl	2dadc <crc32@@Base+0x13780>
   132d4:	cmp	r0, #0
   132d8:	beq	12e3c <__printf_chk@plt+0x610>
   132dc:	ldr	r2, [sp, #148]	; 0x94
   132e0:	ldr	r3, [r9]
   132e4:	cmp	r2, r3
   132e8:	bne	13460 <__printf_chk@plt+0xc34>
   132ec:	add	sp, sp, #156	; 0x9c
   132f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132f4:	movw	r1, #7608	; 0x1db8
   132f8:	mov	r0, r5
   132fc:	movt	r1, #5
   13300:	bl	1fcf0 <crc32@@Base+0x5994>
   13304:	cmp	r0, #0
   13308:	beq	12e3c <__printf_chk@plt+0x610>
   1330c:	b	132dc <__printf_chk@plt+0xab0>
   13310:	movw	r1, #7868	; 0x1ebc
   13314:	movt	r1, #5
   13318:	str	r3, [sp]
   1331c:	movw	r2, #62068	; 0xf274
   13320:	ldr	r0, [r1]
   13324:	movt	r2, #3
   13328:	ldr	r3, [r4, #80]	; 0x50
   1332c:	mov	r1, #1
   13330:	bl	12358 <__fprintf_chk@plt>
   13334:	mov	r0, #1
   13338:	bl	12298 <exit@plt>
   1333c:	movw	r1, #7608	; 0x1db8
   13340:	mov	r0, r5
   13344:	movt	r1, #5
   13348:	bl	1e358 <crc32@@Base+0x3ffc>
   1334c:	cmp	r0, #0
   13350:	beq	12e3c <__printf_chk@plt+0x610>
   13354:	b	132dc <__printf_chk@plt+0xab0>
   13358:	mov	r1, r3
   1335c:	ldr	r2, [r6, #4]
   13360:	ldr	r0, [r6, #8]
   13364:	bl	12388 <memset@plt>
   13368:	b	12dd4 <__printf_chk@plt+0x5a8>
   1336c:	ldr	r1, [r6]
   13370:	movw	r0, #7868	; 0x1ebc
   13374:	movt	r0, #5
   13378:	ldr	r3, [r4, #80]	; 0x50
   1337c:	movw	r2, #62604	; 0xf48c
   13380:	movt	r2, #3
   13384:	str	r1, [sp]
   13388:	mov	r1, #1
   1338c:	ldr	r0, [r0]
   13390:	bl	12358 <__fprintf_chk@plt>
   13394:	b	130f0 <__printf_chk@plt+0x8c4>
   13398:	mov	r2, r0
   1339c:	mov	r1, r7
   133a0:	mov	r0, r5
   133a4:	bl	36b38 <crc32@@Base+0x1c7dc>
   133a8:	b	12e3c <__printf_chk@plt+0x610>
   133ac:	movw	r2, #7868	; 0x1ebc
   133b0:	movt	r2, #5
   133b4:	ldr	r5, [r4, #80]	; 0x50
   133b8:	ldr	r4, [r2]
   133bc:	bl	12748 <__errno_location@plt>
   133c0:	ldr	r0, [r0]
   133c4:	bl	122a4 <strerror@plt>
   133c8:	movw	r2, #29904	; 0x74d0
   133cc:	movt	r2, #3
   133d0:	mov	r3, r5
   133d4:	mov	r1, #1
   133d8:	str	r7, [sp]
   133dc:	str	r0, [sp, #4]
   133e0:	mov	r0, r4
   133e4:	bl	12358 <__fprintf_chk@plt>
   133e8:	mov	r0, #1
   133ec:	bl	12298 <exit@plt>
   133f0:	movw	r2, #7868	; 0x1ebc
   133f4:	movt	r2, #5
   133f8:	ldr	r6, [r4, #80]	; 0x50
   133fc:	ldr	r5, [r2]
   13400:	bl	12748 <__errno_location@plt>
   13404:	ldr	r4, [r4, #72]	; 0x48
   13408:	ldr	r0, [r0]
   1340c:	bl	122a4 <strerror@plt>
   13410:	movw	r2, #29904	; 0x74d0
   13414:	str	r4, [sp]
   13418:	mov	r3, r6
   1341c:	mov	r1, #1
   13420:	movt	r2, #3
   13424:	b	12f20 <__printf_chk@plt+0x6f4>
   13428:	movw	r2, #7868	; 0x1ebc
   1342c:	movt	r2, #5
   13430:	ldr	r6, [r4, #80]	; 0x50
   13434:	ldr	r5, [r2]
   13438:	bl	12748 <__errno_location@plt>
   1343c:	ldr	r4, [r4, #72]	; 0x48
   13440:	ldr	r0, [r0]
   13444:	bl	122a4 <strerror@plt>
   13448:	movw	r2, #29880	; 0x74b8
   1344c:	str	r4, [sp]
   13450:	mov	r3, r6
   13454:	mov	r1, #1
   13458:	movt	r2, #3
   1345c:	b	12f20 <__printf_chk@plt+0x6f4>
   13460:	bl	12538 <__stack_chk_fail@plt>
   13464:	movw	r2, #7868	; 0x1ebc
   13468:	movt	r2, #5
   1346c:	ldr	r6, [r4, #80]	; 0x50
   13470:	ldr	r5, [r2]
   13474:	bl	12748 <__errno_location@plt>
   13478:	ldr	r4, [r4, #76]	; 0x4c
   1347c:	b	13440 <__printf_chk@plt+0xc14>
   13480:	ldr	ip, [r4, #76]	; 0x4c
   13484:	movw	r0, #7868	; 0x1ebc
   13488:	movt	r0, #5
   1348c:	ldr	r3, [r4, #80]	; 0x50
   13490:	movw	r2, #62504	; 0xf428
   13494:	mov	r1, #1
   13498:	ldr	r0, [r0]
   1349c:	movt	r2, #3
   134a0:	str	ip, [sp]
   134a4:	bl	12358 <__fprintf_chk@plt>
   134a8:	mov	r0, #1
   134ac:	bl	12298 <exit@plt>
   134b0:	movw	r2, #7868	; 0x1ebc
   134b4:	movt	r2, #5
   134b8:	ldr	r6, [r4, #80]	; 0x50
   134bc:	ldr	r5, [r2]
   134c0:	bl	12748 <__errno_location@plt>
   134c4:	ldr	r4, [r4, #76]	; 0x4c
   134c8:	b	13408 <__printf_chk@plt+0xbdc>
   134cc:	movw	r2, #7868	; 0x1ebc
   134d0:	movt	r2, #5
   134d4:	ldr	r5, [r4, #80]	; 0x50
   134d8:	ldr	r4, [r2]
   134dc:	bl	12748 <__errno_location@plt>
   134e0:	ldr	r6, [r6]
   134e4:	ldr	r0, [r0]
   134e8:	bl	122a4 <strerror@plt>
   134ec:	movw	r2, #62568	; 0xf468
   134f0:	str	r6, [sp]
   134f4:	mov	r3, r5
   134f8:	mov	r1, #1
   134fc:	movt	r2, #3
   13500:	b	133dc <__printf_chk@plt+0xbb0>
   13504:	movw	r2, #7868	; 0x1ebc
   13508:	movt	r2, #5
   1350c:	ldr	r6, [r4, #80]	; 0x50
   13510:	ldr	r5, [r2]
   13514:	bl	12748 <__errno_location@plt>
   13518:	ldr	r4, [r4, #76]	; 0x4c
   1351c:	ldr	r0, [r0]
   13520:	bl	122a4 <strerror@plt>
   13524:	movw	r2, #62544	; 0xf450
   13528:	str	r4, [sp]
   1352c:	mov	r3, r6
   13530:	mov	r1, #1
   13534:	movt	r2, #3
   13538:	b	12f20 <__printf_chk@plt+0x6f4>
   1353c:	ldr	ip, [r8]
   13540:	movw	r0, #7868	; 0x1ebc
   13544:	movt	r0, #5
   13548:	ldr	r3, [r4, #80]	; 0x50
   1354c:	movw	r2, #62136	; 0xf2b8
   13550:	mov	r1, #1
   13554:	str	ip, [sp]
   13558:	movt	r2, #3
   1355c:	ldr	r0, [r0]
   13560:	bl	12358 <__fprintf_chk@plt>
   13564:	mov	r0, #1
   13568:	bl	12298 <exit@plt>
   1356c:	movw	r0, #62420	; 0xf3d4
   13570:	movt	r0, #3
   13574:	bl	368f4 <crc32@@Base+0x1c598>
   13578:	movw	r3, #7868	; 0x1ebc
   1357c:	movt	r3, #5
   13580:	ldrb	r0, [r4, #44]	; 0x2c
   13584:	ldr	r5, [r3]
   13588:	ldr	r4, [r4, #80]	; 0x50
   1358c:	bl	1afe0 <crc32@@Base+0xc84>
   13590:	movw	r2, #62444	; 0xf3ec
   13594:	mov	r1, #1
   13598:	movt	r2, #3
   1359c:	mov	r3, r4
   135a0:	str	r0, [sp]
   135a4:	mov	r0, r5
   135a8:	bl	12358 <__fprintf_chk@plt>
   135ac:	mov	r0, #1
   135b0:	bl	12298 <exit@plt>
   135b4:	movw	r0, #62472	; 0xf408
   135b8:	movt	r0, #3
   135bc:	bl	368f4 <crc32@@Base+0x1c598>
   135c0:	mov	fp, #0
   135c4:	mov	lr, #0
   135c8:	pop	{r1}		; (ldr r1, [sp], #4)
   135cc:	mov	r2, sp
   135d0:	push	{r2}		; (str r2, [sp, #-4]!)
   135d4:	push	{r0}		; (str r0, [sp, #-4]!)
   135d8:	ldr	ip, [pc, #16]	; 135f0 <__printf_chk@plt+0xdc4>
   135dc:	push	{ip}		; (str ip, [sp, #-4]!)
   135e0:	ldr	r0, [pc, #12]	; 135f4 <__printf_chk@plt+0xdc8>
   135e4:	ldr	r3, [pc, #12]	; 135f8 <__printf_chk@plt+0xdcc>
   135e8:	bl	127e4 <__libc_start_main@plt>
   135ec:	bl	12400 <abort@plt>
   135f0:	strdeq	r7, [r3], -ip
   135f4:	andeq	r2, r1, r4, ror #16
   135f8:	muleq	r3, r8, r2
   135fc:	ldr	r3, [pc, #20]	; 13618 <__printf_chk@plt+0xdec>
   13600:	ldr	r2, [pc, #20]	; 1361c <__printf_chk@plt+0xdf0>
   13604:	add	r3, pc, r3
   13608:	ldr	r2, [r3, r2]
   1360c:	cmp	r2, #0
   13610:	bxeq	lr
   13614:	b	127fc <__gmon_start__@plt>
   13618:	strdeq	sp, [r3], -r4
   1361c:	andeq	r0, r0, r4, ror r2
   13620:	movw	r0, #7752	; 0x1e48
   13624:	movt	r0, #5
   13628:	movw	r3, #7752	; 0x1e48
   1362c:	movt	r3, #5
   13630:	cmp	r3, r0
   13634:	bxeq	lr
   13638:	movw	r3, #0
   1363c:	movt	r3, #0
   13640:	cmp	r3, #0
   13644:	bxeq	lr
   13648:	bx	r3
   1364c:	movw	r0, #7752	; 0x1e48
   13650:	movt	r0, #5
   13654:	movw	r1, #7752	; 0x1e48
   13658:	movt	r1, #5
   1365c:	sub	r1, r1, r0
   13660:	asr	r1, r1, #2
   13664:	add	r1, r1, r1, lsr #31
   13668:	asrs	r1, r1, #1
   1366c:	bxeq	lr
   13670:	movw	r3, #0
   13674:	movt	r3, #0
   13678:	cmp	r3, #0
   1367c:	bxeq	lr
   13680:	bx	r3
   13684:	push	{r4, lr}
   13688:	movw	r4, #7876	; 0x1ec4
   1368c:	movt	r4, #5
   13690:	ldrb	r3, [r4]
   13694:	cmp	r3, #0
   13698:	popne	{r4, pc}
   1369c:	bl	13620 <__printf_chk@plt+0xdf4>
   136a0:	mov	r3, #1
   136a4:	strb	r3, [r4]
   136a8:	pop	{r4, pc}
   136ac:	b	1364c <__printf_chk@plt+0xe20>
   136b0:	subs	r0, r0, #13
   136b4:	movne	r0, #1
   136b8:	bx	lr
   136bc:	ldr	r2, [r0]
   136c0:	movw	r3, #18772	; 0x4954
   136c4:	movt	r3, #16720	; 0x4150
   136c8:	cmp	r2, r3
   136cc:	movweq	r3, #7880	; 0x1ec8
   136d0:	movteq	r3, #5
   136d4:	moveq	r0, #0
   136d8:	mvnne	r0, #10
   136dc:	streq	r1, [r3]
   136e0:	bx	lr
   136e4:	bx	lr
   136e8:	cmp	r0, #0
   136ec:	beq	13770 <__printf_chk@plt+0xf44>
   136f0:	ldr	r3, [r0, #64]	; 0x40
   136f4:	ldrb	r3, [r3]
   136f8:	cmp	r3, #0
   136fc:	beq	13744 <__printf_chk@plt+0xf18>
   13700:	ldr	r3, [r0]
   13704:	ldr	r2, [r0, #8]
   13708:	cmp	r3, #0
   1370c:	beq	1372c <__printf_chk@plt+0xf00>
   13710:	cmp	r2, #0
   13714:	bne	13724 <__printf_chk@plt+0xef8>
   13718:	ldr	r3, [r0, #16]
   1371c:	cmp	r3, #0
   13720:	beq	13734 <__printf_chk@plt+0xf08>
   13724:	mov	r0, #1
   13728:	bx	lr
   1372c:	cmp	r2, #0
   13730:	bne	13718 <__printf_chk@plt+0xeec>
   13734:	ldr	r0, [r0, #28]
   13738:	adds	r0, r0, #0
   1373c:	movne	r0, #1
   13740:	bx	lr
   13744:	movw	r1, #7868	; 0x1ebc
   13748:	movt	r1, #5
   1374c:	ldr	r3, [r0, #80]	; 0x50
   13750:	movw	r2, #29752	; 0x7438
   13754:	push	{r4, lr}
   13758:	movt	r2, #3
   1375c:	ldr	r0, [r1]
   13760:	mov	r1, #1
   13764:	bl	12358 <__fprintf_chk@plt>
   13768:	mvn	r0, #0
   1376c:	pop	{r4, pc}
   13770:	mvn	r0, #0
   13774:	bx	lr
   13778:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1377c:	movw	r3, #3824	; 0xef0
   13780:	sub	sp, sp, #212	; 0xd4
   13784:	movt	r3, #5
   13788:	mov	r4, #0
   1378c:	str	r0, [sp, #40]	; 0x28
   13790:	str	r3, [sp, #48]	; 0x30
   13794:	ldr	r0, [r0, #64]	; 0x40
   13798:	ldr	r3, [r3]
   1379c:	str	r1, [sp, #44]	; 0x2c
   137a0:	movw	r1, #53956	; 0xd2c4
   137a4:	movt	r1, #3
   137a8:	str	r0, [sp, #52]	; 0x34
   137ac:	str	r3, [sp, #204]	; 0xcc
   137b0:	str	r4, [sp, #56]	; 0x38
   137b4:	bl	123d0 <fopen@plt>
   137b8:	subs	r3, r0, #0
   137bc:	str	r3, [sp, #28]
   137c0:	beq	13ce8 <__printf_chk@plt+0x14bc>
   137c4:	ldr	r3, [sp, #40]	; 0x28
   137c8:	mov	r1, r4
   137cc:	ldr	r6, [r3, #72]	; 0x48
   137d0:	ldr	r3, [sp, #44]	; 0x2c
   137d4:	mov	r0, r6
   137d8:	str	r4, [r3, #4]
   137dc:	bl	124d8 <open@plt>
   137e0:	subs	r5, r0, #0
   137e4:	blt	13cb0 <__printf_chk@plt+0x1484>
   137e8:	mov	r1, r5
   137ec:	mov	r0, #3
   137f0:	add	r2, sp, #72	; 0x48
   137f4:	bl	12610 <__fxstat@plt>
   137f8:	cmp	r0, #0
   137fc:	blt	13c68 <__printf_chk@plt+0x143c>
   13800:	ldr	r0, [sp, #116]	; 0x74
   13804:	movw	r3, #7880	; 0x1ec8
   13808:	movt	r3, #5
   1380c:	add	r0, r0, #3
   13810:	bic	r0, r0, #3
   13814:	add	r0, r0, #4096	; 0x1000
   13818:	str	r0, [r3]
   1381c:	bl	12664 <malloc@plt>
   13820:	subs	r6, r0, #0
   13824:	beq	13c24 <__printf_chk@plt+0x13f8>
   13828:	mov	r0, r5
   1382c:	str	r4, [sp, #24]
   13830:	bl	123b8 <close@plt>
   13834:	add	r3, r6, #4
   13838:	str	r3, [sp, #32]
   1383c:	movw	fp, #29456	; 0x7310
   13840:	ldr	r3, [sp, #44]	; 0x2c
   13844:	movt	fp, #3
   13848:	str	r6, [r3, #8]
   1384c:	movw	r3, #18772	; 0x4954
   13850:	movt	r3, #16720	; 0x4150
   13854:	str	r3, [r6]
   13858:	movw	r3, #22797	; 0x590d
   1385c:	movt	r3, #22611	; 0x5853
   13860:	str	r3, [sp, #36]	; 0x24
   13864:	ldr	r3, [sp, #28]
   13868:	mov	r2, #10
   1386c:	add	r1, sp, #68	; 0x44
   13870:	add	r0, sp, #56	; 0x38
   13874:	bl	121cc <__getdelim@plt>
   13878:	cmp	r0, #0
   1387c:	ble	139ec <__printf_chk@plt+0x11c0>
   13880:	movw	r1, #29960	; 0x7508
   13884:	add	r2, sp, #60	; 0x3c
   13888:	movt	r1, #3
   1388c:	ldr	r0, [sp, #56]	; 0x38
   13890:	bl	122c8 <__strtok_r@plt>
   13894:	ldr	r3, [sp, #24]
   13898:	add	r3, r3, #1
   1389c:	str	r3, [sp, #24]
   138a0:	subs	r3, r0, #0
   138a4:	beq	13864 <__printf_chk@plt+0x1038>
   138a8:	movw	r1, #29964	; 0x750c
   138ac:	add	r2, sp, #64	; 0x40
   138b0:	movt	r1, #3
   138b4:	str	r3, [sp, #56]	; 0x38
   138b8:	bl	122c8 <__strtok_r@plt>
   138bc:	subs	r4, r0, #0
   138c0:	beq	13864 <__printf_chk@plt+0x1038>
   138c4:	ldrb	r3, [r4]
   138c8:	cmp	r3, #35	; 0x23
   138cc:	beq	13864 <__printf_chk@plt+0x1038>
   138d0:	movw	r1, #29968	; 0x7510
   138d4:	movw	r0, #4732	; 0x127c
   138d8:	movt	r1, #3
   138dc:	movt	r0, #5
   138e0:	mov	r2, r4
   138e4:	bl	1b1d8 <crc32@@Base+0xe7c>
   138e8:	subs	r9, r0, #0
   138ec:	blt	13b20 <__printf_chk@plt+0x12f4>
   138f0:	add	r7, sp, #164	; 0xa4
   138f4:	mov	r3, #0
   138f8:	movw	r6, #29964	; 0x750c
   138fc:	movt	r6, #3
   13900:	mov	r5, r3
   13904:	mov	sl, r3
   13908:	mov	r8, r7
   1390c:	str	r3, [sp, #56]	; 0x38
   13910:	str	r7, [sp, #20]
   13914:	add	r2, sp, #64	; 0x40
   13918:	mov	r1, r6
   1391c:	mov	r0, #0
   13920:	bl	122c8 <__strtok_r@plt>
   13924:	subs	r4, r0, #0
   13928:	beq	13988 <__printf_chk@plt+0x115c>
   1392c:	ldrb	r3, [r4]
   13930:	cmp	r3, #35	; 0x23
   13934:	beq	13988 <__printf_chk@plt+0x115c>
   13938:	bl	12748 <__errno_location@plt>
   1393c:	mov	r2, #16
   13940:	add	r1, sp, #72	; 0x48
   13944:	mov	r7, r0
   13948:	str	sl, [r0]
   1394c:	mov	r0, r4
   13950:	bl	12370 <strtoul@plt>
   13954:	ldr	r3, [r7]
   13958:	cmp	r3, #0
   1395c:	bne	13ae8 <__printf_chk@plt+0x12bc>
   13960:	ldr	r2, [sp, #72]	; 0x48
   13964:	cmp	r4, r2
   13968:	beq	13aec <__printf_chk@plt+0x12c0>
   1396c:	ldr	r2, [fp, r9, lsl #3]
   13970:	add	r5, r5, #1
   13974:	str	r0, [r8], #4
   13978:	cmp	r2, r5
   1397c:	bcc	13b54 <__printf_chk@plt+0x1328>
   13980:	str	r3, [sp, #56]	; 0x38
   13984:	b	13914 <__printf_chk@plt+0x10e8>
   13988:	cmp	r9, #0
   1398c:	ldr	r7, [sp, #20]
   13990:	beq	13864 <__printf_chk@plt+0x1038>
   13994:	add	r9, fp, r9, lsl #3
   13998:	ldr	r2, [sp, #36]	; 0x24
   1399c:	ldr	r3, [r9, #4]
   139a0:	cmp	r3, r2
   139a4:	ldr	r2, [sp, #32]
   139a8:	ldreq	r1, [sp, #32]
   139ac:	str	r3, [r2]
   139b0:	addne	r3, r2, #4
   139b4:	ldreq	r2, [r9, #152]	; 0x98
   139b8:	addeq	r3, r1, #8
   139bc:	addeq	r2, r2, r5, lsl #16
   139c0:	streq	r2, [r1, #4]
   139c4:	cmp	r5, #0
   139c8:	streq	r3, [sp, #32]
   139cc:	beq	13864 <__printf_chk@plt+0x1038>
   139d0:	add	r5, r3, r5, lsl #2
   139d4:	ldr	r2, [r7], #4
   139d8:	str	r2, [r3], #4
   139dc:	cmp	r5, r3
   139e0:	bne	139d4 <__printf_chk@plt+0x11a8>
   139e4:	str	r5, [sp, #32]
   139e8:	b	13864 <__printf_chk@plt+0x1038>
   139ec:	ldr	r0, [sp, #28]
   139f0:	bl	126b8 <fclose@plt>
   139f4:	ldr	r3, [sp, #40]	; 0x28
   139f8:	mov	r1, #0
   139fc:	ldr	r4, [r3, #72]	; 0x48
   13a00:	mov	r0, r4
   13a04:	bl	124d8 <open@plt>
   13a08:	subs	r7, r0, #0
   13a0c:	blt	13ba0 <__printf_chk@plt+0x1374>
   13a10:	add	r2, sp, #72	; 0x48
   13a14:	mov	r1, r7
   13a18:	mov	r0, #3
   13a1c:	bl	12610 <__fxstat@plt>
   13a20:	cmp	r0, #0
   13a24:	blt	13bec <__printf_chk@plt+0x13c0>
   13a28:	mov	r6, #0
   13a2c:	mov	r3, #1
   13a30:	mov	r2, r3
   13a34:	ldr	r1, [sp, #116]	; 0x74
   13a38:	str	r7, [sp]
   13a3c:	mov	r0, r6
   13a40:	str	r6, [sp, #4]
   13a44:	bl	12490 <mmap@plt>
   13a48:	ldr	r9, [sp, #40]	; 0x28
   13a4c:	ldr	r5, [sp, #116]	; 0x74
   13a50:	movw	r3, #22785	; 0x5901
   13a54:	movt	r3, #22611	; 0x5853
   13a58:	ldr	r2, [r9, #60]	; 0x3c
   13a5c:	mov	r4, r0
   13a60:	ldr	r0, [sp, #32]
   13a64:	mov	r1, r4
   13a68:	add	r8, r0, #12
   13a6c:	str	r3, [r0]
   13a70:	stmib	r0, {r2, r5}
   13a74:	mov	r2, r5
   13a78:	mov	r0, r8
   13a7c:	bl	12658 <memcpy@plt>
   13a80:	mov	r1, r5
   13a84:	mov	r0, r4
   13a88:	add	r4, r5, #3
   13a8c:	bl	126a0 <munmap@plt>
   13a90:	mov	r0, r7
   13a94:	bl	123b8 <close@plt>
   13a98:	ldr	r3, [sp, #48]	; 0x30
   13a9c:	ldr	r5, [sp, #44]	; 0x2c
   13aa0:	bic	r4, r4, #3
   13aa4:	ldr	r0, [sp, #204]	; 0xcc
   13aa8:	add	r2, r8, r4
   13aac:	ldr	r1, [r3]
   13ab0:	add	r3, r2, #8
   13ab4:	ldr	ip, [r9, #60]	; 0x3c
   13ab8:	cmp	r0, r1
   13abc:	ldr	lr, [r5, #8]
   13ac0:	movw	r1, #22790	; 0x5906
   13ac4:	mov	r0, r6
   13ac8:	sub	r3, r3, lr
   13acc:	movt	r1, #22611	; 0x5853
   13ad0:	str	r3, [r5, #4]
   13ad4:	str	r1, [r8, r4]
   13ad8:	str	ip, [r2, #4]
   13adc:	bne	13be8 <__printf_chk@plt+0x13bc>
   13ae0:	add	sp, sp, #212	; 0xd4
   13ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ae8:	mov	r2, r4
   13aec:	movw	r1, #7868	; 0x1ebc
   13af0:	movt	r1, #5
   13af4:	str	r2, [sp, #4]
   13af8:	movw	r2, #30028	; 0x754c
   13afc:	ldr	r0, [r1]
   13b00:	movt	r2, #3
   13b04:	ldr	r1, [sp, #24]
   13b08:	ldr	r3, [sp, #52]	; 0x34
   13b0c:	str	r1, [sp]
   13b10:	mov	r1, #1
   13b14:	bl	12358 <__fprintf_chk@plt>
   13b18:	mov	r0, #1
   13b1c:	bl	12298 <exit@plt>
   13b20:	ldr	r1, [sp, #24]
   13b24:	movw	r2, #7868	; 0x1ebc
   13b28:	movt	r2, #5
   13b2c:	str	r4, [sp, #4]
   13b30:	ldr	r3, [sp, #52]	; 0x34
   13b34:	ldr	r0, [r2]
   13b38:	movw	r2, #29988	; 0x7524
   13b3c:	str	r1, [sp]
   13b40:	movt	r2, #3
   13b44:	mov	r1, #1
   13b48:	bl	12358 <__fprintf_chk@plt>
   13b4c:	mov	r0, #1
   13b50:	bl	12298 <exit@plt>
   13b54:	movw	r3, #4732	; 0x127c
   13b58:	movt	r3, #5
   13b5c:	mov	r2, #12
   13b60:	str	r4, [sp, #4]
   13b64:	mla	r9, r2, r9, r3
   13b68:	ldr	r3, [sp, #24]
   13b6c:	movw	r1, #7868	; 0x1ebc
   13b70:	movt	r1, #5
   13b74:	movw	r2, #30068	; 0x7574
   13b78:	movt	r2, #3
   13b7c:	str	r3, [sp]
   13b80:	ldr	r3, [sp, #52]	; 0x34
   13b84:	ldr	ip, [r9, #4]
   13b88:	ldr	r0, [r1]
   13b8c:	mov	r1, #1
   13b90:	str	ip, [sp, #8]
   13b94:	bl	12358 <__fprintf_chk@plt>
   13b98:	mov	r0, #1
   13b9c:	bl	12298 <exit@plt>
   13ba0:	ldr	r3, [sp, #40]	; 0x28
   13ba4:	movw	r2, #7868	; 0x1ebc
   13ba8:	movt	r2, #5
   13bac:	ldr	r6, [r3, #80]	; 0x50
   13bb0:	ldr	r5, [r2]
   13bb4:	bl	12748 <__errno_location@plt>
   13bb8:	ldr	r0, [r0]
   13bbc:	bl	122a4 <strerror@plt>
   13bc0:	movw	r2, #29880	; 0x74b8
   13bc4:	movt	r2, #3
   13bc8:	mov	r3, r6
   13bcc:	mov	r1, #1
   13bd0:	str	r4, [sp]
   13bd4:	str	r0, [sp, #4]
   13bd8:	mov	r0, r5
   13bdc:	bl	12358 <__fprintf_chk@plt>
   13be0:	mov	r0, #1
   13be4:	bl	12298 <exit@plt>
   13be8:	bl	12538 <__stack_chk_fail@plt>
   13bec:	ldr	r3, [sp, #40]	; 0x28
   13bf0:	movw	r2, #7868	; 0x1ebc
   13bf4:	movt	r2, #5
   13bf8:	ldr	r6, [r3, #80]	; 0x50
   13bfc:	ldr	r5, [r2]
   13c00:	bl	12748 <__errno_location@plt>
   13c04:	ldr	r0, [r0]
   13c08:	bl	122a4 <strerror@plt>
   13c0c:	movw	r2, #29904	; 0x74d0
   13c10:	mov	r3, r6
   13c14:	str	r4, [sp]
   13c18:	mov	r1, #1
   13c1c:	movt	r2, #3
   13c20:	b	13bd4 <__printf_chk@plt+0x13a8>
   13c24:	ldr	r3, [sp, #40]	; 0x28
   13c28:	movw	r2, #7868	; 0x1ebc
   13c2c:	movt	r2, #5
   13c30:	ldr	r5, [r3, #80]	; 0x50
   13c34:	ldr	r4, [r2]
   13c38:	bl	12748 <__errno_location@plt>
   13c3c:	ldr	r0, [r0]
   13c40:	bl	122a4 <strerror@plt>
   13c44:	mov	r3, r5
   13c48:	movw	r2, #29928	; 0x74e8
   13c4c:	mov	r1, #1
   13c50:	movt	r2, #3
   13c54:	str	r0, [sp]
   13c58:	mov	r0, r4
   13c5c:	bl	12358 <__fprintf_chk@plt>
   13c60:	mov	r0, #1
   13c64:	bl	12298 <exit@plt>
   13c68:	ldr	r3, [sp, #40]	; 0x28
   13c6c:	movw	r2, #7868	; 0x1ebc
   13c70:	movt	r2, #5
   13c74:	ldr	r5, [r3, #80]	; 0x50
   13c78:	ldr	r4, [r2]
   13c7c:	bl	12748 <__errno_location@plt>
   13c80:	ldr	r0, [r0]
   13c84:	bl	122a4 <strerror@plt>
   13c88:	movw	r2, #29904	; 0x74d0
   13c8c:	movt	r2, #3
   13c90:	mov	r3, r5
   13c94:	mov	r1, #1
   13c98:	str	r6, [sp]
   13c9c:	str	r0, [sp, #4]
   13ca0:	mov	r0, r4
   13ca4:	bl	12358 <__fprintf_chk@plt>
   13ca8:	mov	r0, #1
   13cac:	bl	12298 <exit@plt>
   13cb0:	ldr	r3, [sp, #40]	; 0x28
   13cb4:	movw	r2, #7868	; 0x1ebc
   13cb8:	movt	r2, #5
   13cbc:	ldr	r5, [r3, #80]	; 0x50
   13cc0:	ldr	r4, [r2]
   13cc4:	bl	12748 <__errno_location@plt>
   13cc8:	ldr	r0, [r0]
   13ccc:	bl	122a4 <strerror@plt>
   13cd0:	movw	r2, #29880	; 0x74b8
   13cd4:	mov	r3, r5
   13cd8:	str	r6, [sp]
   13cdc:	mov	r1, #1
   13ce0:	movt	r2, #3
   13ce4:	b	13c9c <__printf_chk@plt+0x1470>
   13ce8:	movw	r1, #7868	; 0x1ebc
   13cec:	movt	r1, #5
   13cf0:	ldr	r3, [sp, #52]	; 0x34
   13cf4:	movw	r2, #29836	; 0x748c
   13cf8:	ldr	r0, [r1]
   13cfc:	movt	r2, #3
   13d00:	mov	r1, #1
   13d04:	bl	12358 <__fprintf_chk@plt>
   13d08:	mov	r0, #1
   13d0c:	bl	12298 <exit@plt>
   13d10:	ldr	r2, [r0]
   13d14:	movw	r3, #18772	; 0x4954
   13d18:	movt	r3, #16720	; 0x4150
   13d1c:	cmp	r2, r3
   13d20:	beq	13d44 <__printf_chk@plt+0x1518>
   13d24:	movw	r3, #7868	; 0x1ebc
   13d28:	movt	r3, #5
   13d2c:	movw	r0, #30124	; 0x75ac
   13d30:	mov	r2, #36	; 0x24
   13d34:	ldr	r3, [r3]
   13d38:	movt	r0, #3
   13d3c:	mov	r1, #1
   13d40:	b	12634 <fwrite@plt>
   13d44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d48:	movw	sl, #7872	; 0x1ec0
   13d4c:	sub	sp, sp, #28
   13d50:	movt	sl, #5
   13d54:	ldr	r9, [pc, #432]	; 13f0c <__printf_chk@plt+0x16e0>
   13d58:	mov	r6, r0
   13d5c:	str	r0, [sp, #20]
   13d60:	mov	r2, #40	; 0x28
   13d64:	ldr	r3, [sl]
   13d68:	mov	r1, #1
   13d6c:	movw	r0, #30164	; 0x75d4
   13d70:	movw	fp, #22790	; 0x5906
   13d74:	movt	r0, #3
   13d78:	movw	r7, #22797	; 0x590d
   13d7c:	movt	fp, #22611	; 0x5853
   13d80:	movt	r7, #22611	; 0x5853
   13d84:	bl	12634 <fwrite@plt>
   13d88:	ldr	r3, [r6], #4
   13d8c:	ldr	r0, [sl]
   13d90:	movw	r2, #30208	; 0x7600
   13d94:	mov	r1, #1
   13d98:	movt	r2, #3
   13d9c:	bl	12358 <__fprintf_chk@plt>
   13da0:	movw	r3, #22785	; 0x5901
   13da4:	movt	r3, #22611	; 0x5853
   13da8:	str	r3, [sp, #16]
   13dac:	ldr	r5, [r6]
   13db0:	cmp	r5, fp
   13db4:	beq	13f04 <__printf_chk@plt+0x16d8>
   13db8:	ldr	r3, [sp, #16]
   13dbc:	cmp	r5, r3
   13dc0:	beq	13ec8 <__printf_chk@plt+0x169c>
   13dc4:	movw	r8, #29456	; 0x7310
   13dc8:	movt	r8, #3
   13dcc:	mov	r2, #0
   13dd0:	mov	r3, r8
   13dd4:	mov	r4, r2
   13dd8:	b	13dec <__printf_chk@plt+0x15c0>
   13ddc:	add	r4, r4, #1
   13de0:	cmp	r4, #19
   13de4:	beq	13ea0 <__printf_chk@plt+0x1674>
   13de8:	ldr	r2, [r3, #4]
   13dec:	cmp	r5, r2
   13df0:	add	r3, r3, #8
   13df4:	bne	13ddc <__printf_chk@plt+0x15b0>
   13df8:	cmp	r5, r7
   13dfc:	bne	13e10 <__printf_chk@plt+0x15e4>
   13e00:	ldrh	r2, [r6, #4]
   13e04:	ldr	r1, [r9, r4, lsl #3]
   13e08:	cmp	r1, r2
   13e0c:	bne	13ddc <__printf_chk@plt+0x15b0>
   13e10:	ldr	r3, [sl]
   13e14:	mov	r2, r4
   13e18:	mov	r1, #0
   13e1c:	movw	r0, #4732	; 0x127c
   13e20:	movt	r0, #5
   13e24:	str	r3, [sp, #12]
   13e28:	bl	1af08 <crc32@@Base+0xbac>
   13e2c:	movw	r2, #30304	; 0x7660
   13e30:	mov	r1, #1
   13e34:	movt	r2, #3
   13e38:	mov	r3, r0
   13e3c:	ldr	r0, [sp, #12]
   13e40:	bl	12358 <__fprintf_chk@plt>
   13e44:	ldr	r3, [r8, r4, lsl #3]
   13e48:	movw	r2, #7880	; 0x1ec8
   13e4c:	movt	r2, #5
   13e50:	add	r3, r3, #1
   13e54:	cmp	r5, r7
   13e58:	movne	r5, r3
   13e5c:	addeq	r5, r3, #1
   13e60:	ldr	r3, [r2]
   13e64:	ldr	r2, [sp, #20]
   13e68:	add	r6, r6, r5, lsl #2
   13e6c:	sub	r2, r6, r2
   13e70:	cmp	r2, r3
   13e74:	bls	13dac <__printf_chk@plt+0x1580>
   13e78:	movw	r3, #7868	; 0x1ebc
   13e7c:	movt	r3, #5
   13e80:	movw	r0, #30264	; 0x7638
   13e84:	mov	r2, #37	; 0x25
   13e88:	ldr	r3, [r3]
   13e8c:	movt	r0, #3
   13e90:	mov	r1, #1
   13e94:	add	sp, sp, #28
   13e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e9c:	b	12634 <fwrite@plt>
   13ea0:	movw	r3, #7868	; 0x1ebc
   13ea4:	movt	r3, #5
   13ea8:	movw	r0, #30324	; 0x7674
   13eac:	mov	r2, #30
   13eb0:	ldr	r3, [r3]
   13eb4:	movt	r0, #3
   13eb8:	mov	r1, #1
   13ebc:	add	sp, sp, #28
   13ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ec4:	b	12634 <fwrite@plt>
   13ec8:	ldr	ip, [r6, #8]
   13ecc:	movw	r2, #30228	; 0x7614
   13ed0:	ldr	r3, [r6, #4]
   13ed4:	movt	r2, #3
   13ed8:	ldr	r0, [sl]
   13edc:	mov	r1, #1
   13ee0:	str	ip, [sp]
   13ee4:	add	r6, r6, #12
   13ee8:	bl	12358 <__fprintf_chk@plt>
   13eec:	ldr	r3, [r6, #-4]
   13ef0:	bic	r3, r3, #3
   13ef4:	add	r6, r6, r3
   13ef8:	ldr	r5, [r6]
   13efc:	cmp	r5, fp
   13f00:	bne	13db8 <__printf_chk@plt+0x158c>
   13f04:	add	sp, sp, #28
   13f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f0c:	andeq	r7, r3, r8, lsr #7
   13f10:	subs	r0, r0, #18
   13f14:	movne	r0, #1
   13f18:	bx	lr
   13f1c:	push	{r4, lr}
   13f20:	sub	r2, r0, #4
   13f24:	add	ip, r0, #204	; 0xcc
   13f28:	b	13f34 <__printf_chk@plt+0x1708>
   13f2c:	cmp	r2, ip
   13f30:	beq	13fa4 <__printf_chk@plt+0x1778>
   13f34:	ldr	r3, [r2, #4]!
   13f38:	lsr	r3, r3, #28
   13f3c:	cmp	r3, #12
   13f40:	beq	13f2c <__printf_chk@plt+0x1700>
   13f44:	mov	ip, #61440	; 0xf000
   13f48:	mov	r2, #0
   13f4c:	mov	lr, ip
   13f50:	movt	ip, #65535	; 0xffff
   13f54:	movt	lr, #58783	; 0xe59f
   13f58:	cmp	r2, #5
   13f5c:	beq	13f84 <__printf_chk@plt+0x1758>
   13f60:	ldr	r3, [r0, r2, lsl #2]
   13f64:	and	r4, r3, #-16777216	; 0xff000000
   13f68:	and	r3, r3, ip
   13f6c:	cmp	r4, #-369098752	; 0xea000000
   13f70:	beq	13f8c <__printf_chk@plt+0x1760>
   13f74:	cmp	r3, lr
   13f78:	beq	13f8c <__printf_chk@plt+0x1760>
   13f7c:	mov	r0, #1
   13f80:	pop	{r4, pc}
   13f84:	add	r2, r2, #1
   13f88:	b	13f58 <__printf_chk@plt+0x172c>
   13f8c:	cmp	r2, #6
   13f90:	bne	13f84 <__printf_chk@plt+0x1758>
   13f94:	ldr	r0, [r0, #20]
   13f98:	subs	r0, r0, r1
   13f9c:	movne	r0, #1
   13fa0:	pop	{r4, pc}
   13fa4:	add	r0, r0, #208	; 0xd0
   13fa8:	sub	r1, r1, #208	; 0xd0
   13fac:	b	13f44 <__printf_chk@plt+0x1718>
   13fb0:	ldr	ip, [r1, #44]	; 0x2c
   13fb4:	sub	r2, r0, #4
   13fb8:	add	r1, r0, #204	; 0xcc
   13fbc:	b	13fc8 <__printf_chk@plt+0x179c>
   13fc0:	cmp	r2, r1
   13fc4:	beq	13fe4 <__printf_chk@plt+0x17b8>
   13fc8:	ldr	r3, [r2, #4]!
   13fcc:	lsr	r3, r3, #28
   13fd0:	cmp	r3, #12
   13fd4:	beq	13fc0 <__printf_chk@plt+0x1794>
   13fd8:	mov	r3, #20
   13fdc:	str	ip, [r0, r3]
   13fe0:	bx	lr
   13fe4:	mov	r3, #228	; 0xe4
   13fe8:	sub	ip, ip, #208	; 0xd0
   13fec:	str	ip, [r0, r3]
   13ff0:	bx	lr
   13ff4:	push	{r4, r5, r6, lr}
   13ff8:	sub	r3, r0, #4
   13ffc:	mov	r5, r0
   14000:	add	r2, r0, #204	; 0xcc
   14004:	b	14010 <__printf_chk@plt+0x17e4>
   14008:	cmp	r2, r3
   1400c:	beq	14048 <__printf_chk@plt+0x181c>
   14010:	ldr	r4, [r3, #4]!
   14014:	lsr	r4, r4, #28
   14018:	cmp	r4, #12
   1401c:	beq	14008 <__printf_chk@plt+0x17dc>
   14020:	movw	r0, #31052	; 0x794c
   14024:	movt	r0, #3
   14028:	bl	12310 <puts@plt>
   1402c:	mov	r3, #20
   14030:	ldr	r2, [r5, r3]
   14034:	movw	r1, #30936	; 0x78d8
   14038:	mov	r0, #1
   1403c:	movt	r1, #3
   14040:	pop	{r4, r5, r6, lr}
   14044:	b	1282c <__printf_chk@plt>
   14048:	movw	r0, #30964	; 0x78f4
   1404c:	movt	r0, #3
   14050:	bl	12310 <puts@plt>
   14054:	ldr	r6, [r5]
   14058:	movw	r0, #31016	; 0x7928
   1405c:	movt	r0, #3
   14060:	bl	12310 <puts@plt>
   14064:	movw	r0, #30912	; 0x78c0
   14068:	movt	r0, #3
   1406c:	bl	12310 <puts@plt>
   14070:	ubfx	r2, r6, #18, #9
   14074:	movw	r1, #31032	; 0x7938
   14078:	mov	r0, #1
   1407c:	movt	r1, #3
   14080:	bl	1282c <__printf_chk@plt>
   14084:	tst	r6, #196608	; 0x30000
   14088:	movw	r1, #30808	; 0x7858
   1408c:	mov	r0, #1
   14090:	movne	r2, #1024	; 0x400
   14094:	moveq	r2, #512	; 0x200
   14098:	movt	r1, #3
   1409c:	bl	1282c <__printf_chk@plt>
   140a0:	ubfx	r3, r6, #13, #3
   140a4:	cmp	r3, #2
   140a8:	subhi	r2, r3, #3
   140ac:	lslhi	r2, r4, r2
   140b0:	bls	1411c <__printf_chk@plt+0x18f0>
   140b4:	movw	r1, #30828	; 0x786c
   140b8:	mov	r0, #1
   140bc:	movt	r1, #3
   140c0:	bl	1282c <__printf_chk@plt>
   140c4:	ubfx	r2, r6, #4, #9
   140c8:	mov	r0, #1
   140cc:	movw	r1, #30848	; 0x7880
   140d0:	movt	r1, #3
   140d4:	mov	r4, r0
   140d8:	bl	1282c <__printf_chk@plt>
   140dc:	ubfx	r2, r6, #1, #2
   140e0:	lsl	r2, r4, r2
   140e4:	mov	r0, r4
   140e8:	movw	r1, #30868	; 0x7894
   140ec:	movt	r1, #3
   140f0:	bl	1282c <__printf_chk@plt>
   140f4:	and	r2, r6, r4
   140f8:	mov	r0, r4
   140fc:	movw	r1, #30892	; 0x78ac
   14100:	movt	r1, #3
   14104:	bl	1282c <__printf_chk@plt>
   14108:	movw	r0, #30912	; 0x78c0
   1410c:	movt	r0, #3
   14110:	bl	12310 <puts@plt>
   14114:	mov	r3, #228	; 0xe4
   14118:	b	14030 <__printf_chk@plt+0x1804>
   1411c:	mov	r2, #2
   14120:	lsl	r2, r2, r3
   14124:	b	140b4 <__printf_chk@plt+0x1888>
   14128:	ldr	r3, [r0, #64]	; 0x40
   1412c:	ldrb	r0, [r3]
   14130:	cmp	r0, #0
   14134:	bxeq	lr
   14138:	movw	ip, #7884	; 0x1ecc
   1413c:	movt	ip, #5
   14140:	mov	r2, #0
   14144:	movt	r2, #2044	; 0x7fc
   14148:	ldr	r3, [ip, #16]
   1414c:	ldr	r0, [ip, #20]
   14150:	cmp	r3, #512	; 0x200
   14154:	push	{r4, lr}
   14158:	and	r2, r2, r0, lsl #18
   1415c:	beq	14194 <__printf_chk@plt+0x1968>
   14160:	cmp	r3, #1024	; 0x400
   14164:	orreq	r0, r2, #-1073741824	; 0xc0000000
   14168:	orreq	r0, r0, #65536	; 0x10000
   1416c:	beq	14198 <__printf_chk@plt+0x196c>
   14170:	movw	r1, #7868	; 0x1ebc
   14174:	movt	r1, #5
   14178:	movw	r2, #31108	; 0x7984
   1417c:	movt	r2, #3
   14180:	ldr	r0, [r1]
   14184:	mov	r1, #1
   14188:	bl	12358 <__fprintf_chk@plt>
   1418c:	mov	r0, #1
   14190:	pop	{r4, pc}
   14194:	orr	r0, r2, #-1073741824	; 0xc0000000
   14198:	ldr	r3, [ip, #12]
   1419c:	sub	r2, r3, #2
   141a0:	cmp	r2, #22
   141a4:	ldrls	pc, [pc, r2, lsl #2]
   141a8:	b	142d4 <__printf_chk@plt+0x1aa8>
   141ac:	andeq	r4, r1, ip, lsl #4
   141b0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141b4:	andeq	r4, r1, r8, lsr #5
   141b8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141bc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141c0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141c4:	andeq	r4, r1, r0, lsr #5
   141c8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141cc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141d0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141d4:	andeq	r4, r1, r8, lsl #4
   141d8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141dc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141e0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141e4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141e8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141ec:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141f0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141f4:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141f8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   141fc:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14200:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14204:	muleq	r1, r8, r2
   14208:	orr	r0, r0, #24576	; 0x6000
   1420c:	ldr	lr, [ip, #8]
   14210:	movw	r2, #8176	; 0x1ff0
   14214:	ldr	r3, [ip, #4]
   14218:	and	r2, r2, lr, lsl #4
   1421c:	sub	lr, r3, #1
   14220:	orr	r2, r2, r0
   14224:	cmp	lr, #7
   14228:	ldrls	pc, [pc, lr, lsl #2]
   1422c:	b	142b0 <__printf_chk@plt+0x1a84>
   14230:	andeq	r4, r1, r4, asr r2
   14234:	muleq	r1, r0, r2
   14238:			; <UNDEFINED> instruction: 0x000142b0
   1423c:	andeq	r4, r1, r0, asr r2
   14240:			; <UNDEFINED> instruction: 0x000142b0
   14244:			; <UNDEFINED> instruction: 0x000142b0
   14248:			; <UNDEFINED> instruction: 0x000142b0
   1424c:	andeq	r4, r1, r8, lsl #5
   14250:	orr	r2, r2, #4
   14254:	ldr	r3, [ip]
   14258:	cmp	r3, #0
   1425c:	ldr	r3, [pc, #148]	; 142f8 <__printf_chk@plt+0x1acc>
   14260:	orrne	r2, r2, #1
   14264:	add	r0, r3, #208	; 0xd0
   14268:	str	r2, [r3, #4]!
   1426c:	cmp	r3, r0
   14270:	bne	14268 <__printf_chk@plt+0x1a3c>
   14274:	ldr	r3, [pc, #128]	; 142fc <__printf_chk@plt+0x1ad0>
   14278:	mov	r2, #208	; 0xd0
   1427c:	mov	r0, #0
   14280:	strd	r2, [r1, #4]
   14284:	pop	{r4, pc}
   14288:	orr	r2, r2, #6
   1428c:	b	14254 <__printf_chk@plt+0x1a28>
   14290:	orr	r2, r2, #2
   14294:	b	14254 <__printf_chk@plt+0x1a28>
   14298:	orr	r0, r0, #32768	; 0x8000
   1429c:	b	1420c <__printf_chk@plt+0x19e0>
   142a0:	orr	r0, r0, #16384	; 0x4000
   142a4:	b	1420c <__printf_chk@plt+0x19e0>
   142a8:	orr	r0, r0, #8192	; 0x2000
   142ac:	b	1420c <__printf_chk@plt+0x19e0>
   142b0:	movw	r1, #7868	; 0x1ebc
   142b4:	movt	r1, #5
   142b8:	movw	r2, #31224	; 0x79f8
   142bc:	movt	r2, #3
   142c0:	ldr	r0, [r1]
   142c4:	mov	r1, #1
   142c8:	bl	12358 <__fprintf_chk@plt>
   142cc:	mov	r0, #1
   142d0:	pop	{r4, pc}
   142d4:	movw	r1, #7868	; 0x1ebc
   142d8:	movt	r1, #5
   142dc:	movw	r2, #31168	; 0x79c0
   142e0:	movt	r2, #3
   142e4:	ldr	r0, [r1]
   142e8:	mov	r1, #1
   142ec:	bl	12358 <__fprintf_chk@plt>
   142f0:	mov	r0, #1
   142f4:	pop	{r4, pc}
   142f8:	andeq	r1, r5, r0, ror #29
   142fc:	andeq	r1, r5, r4, ror #29
   14300:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14304:	mov	r7, r0
   14308:	ldr	r0, [r0, #64]	; 0x40
   1430c:	ldrb	r3, [r0]
   14310:	cmp	r3, #0
   14314:	bne	14360 <__printf_chk@plt+0x1b34>
   14318:	ldr	r3, [r7, #4]
   1431c:	cmp	r3, #0
   14320:	bne	14358 <__printf_chk@plt+0x1b2c>
   14324:	ldr	r3, [r7, #8]
   14328:	cmp	r3, #0
   1432c:	bne	14358 <__printf_chk@plt+0x1b2c>
   14330:	ldr	r3, [r7, #28]
   14334:	cmp	r3, #0
   14338:	bne	14358 <__printf_chk@plt+0x1b2c>
   1433c:	ldr	r3, [r7]
   14340:	ldr	r0, [r7, #16]
   14344:	cmp	r3, #0
   14348:	beq	144c0 <__printf_chk@plt+0x1c94>
   1434c:	adds	r0, r0, #0
   14350:	movne	r0, #1
   14354:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14358:	mov	r0, #1
   1435c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14360:	movw	r1, #31300	; 0x7a44
   14364:	movt	r1, #3
   14368:	bl	1231c <strtok@plt>
   1436c:	subs	r6, r0, #0
   14370:	beq	14318 <__printf_chk@plt+0x1aec>
   14374:	movw	r8, #31288	; 0x7a38
   14378:	movw	r9, #30784	; 0x7840
   1437c:	movt	r8, #3
   14380:	movt	r9, #3
   14384:	mov	r2, #8
   14388:	mov	r5, r8
   1438c:	mov	r4, #0
   14390:	mov	r1, r5
   14394:	mov	r0, r6
   14398:	bl	12220 <strncmp@plt>
   1439c:	cmp	r0, #0
   143a0:	bne	14464 <__printf_chk@plt+0x1c38>
   143a4:	mov	r1, #61	; 0x3d
   143a8:	mov	r0, r6
   143ac:	bl	12820 <strchr@plt>
   143b0:	cmp	r0, #0
   143b4:	beq	14484 <__printf_chk@plt+0x1c58>
   143b8:	sub	r4, r4, #1
   143bc:	add	r0, r0, #1
   143c0:	mov	r2, #10
   143c4:	mov	r1, #0
   143c8:	cmp	r4, #4
   143cc:	ldrls	pc, [pc, r4, lsl #2]
   143d0:	b	14428 <__printf_chk@plt+0x1bfc>
   143d4:	andeq	r4, r1, r4, lsl r4
   143d8:	andeq	r4, r1, r8, ror #7
   143dc:	andeq	r4, r1, r0, asr r4
   143e0:	andeq	r4, r1, ip, lsr r4
   143e4:	andeq	r4, r1, ip, lsr #9
   143e8:	bl	121b4 <strtol@plt>
   143ec:	movw	r3, #7884	; 0x1ecc
   143f0:	movt	r3, #5
   143f4:	str	r0, [r3, #8]
   143f8:	movw	r1, #31300	; 0x7a44
   143fc:	mov	r0, #0
   14400:	movt	r1, #3
   14404:	bl	1231c <strtok@plt>
   14408:	subs	r6, r0, #0
   1440c:	bne	14384 <__printf_chk@plt+0x1b58>
   14410:	b	14318 <__printf_chk@plt+0x1aec>
   14414:	bl	121b4 <strtol@plt>
   14418:	movw	r3, #7884	; 0x1ecc
   1441c:	movt	r3, #5
   14420:	str	r0, [r3, #4]
   14424:	b	143f8 <__printf_chk@plt+0x1bcc>
   14428:	bl	121b4 <strtol@plt>
   1442c:	movw	r3, #7884	; 0x1ecc
   14430:	movt	r3, #5
   14434:	str	r0, [r3]
   14438:	b	143f8 <__printf_chk@plt+0x1bcc>
   1443c:	bl	121b4 <strtol@plt>
   14440:	movw	r3, #7884	; 0x1ecc
   14444:	movt	r3, #5
   14448:	str	r0, [r3, #16]
   1444c:	b	143f8 <__printf_chk@plt+0x1bcc>
   14450:	bl	121b4 <strtol@plt>
   14454:	movw	r3, #7884	; 0x1ecc
   14458:	movt	r3, #5
   1445c:	str	r0, [r3, #12]
   14460:	b	143f8 <__printf_chk@plt+0x1bcc>
   14464:	add	r4, r4, #1
   14468:	cmp	r4, #6
   1446c:	beq	14484 <__printf_chk@plt+0x1c58>
   14470:	ldr	r5, [r9, r4, lsl #2]
   14474:	mov	r0, r5
   14478:	bl	1267c <strlen@plt>
   1447c:	mov	r2, r0
   14480:	b	14390 <__printf_chk@plt+0x1b64>
   14484:	movw	r1, #7868	; 0x1ebc
   14488:	movt	r1, #5
   1448c:	mov	r3, r6
   14490:	movw	r2, #31304	; 0x7a48
   14494:	ldr	r0, [r1]
   14498:	movt	r2, #3
   1449c:	mov	r1, #1
   144a0:	bl	12358 <__fprintf_chk@plt>
   144a4:	mov	r0, #1
   144a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144ac:	bl	121b4 <strtol@plt>
   144b0:	movw	r3, #7884	; 0x1ecc
   144b4:	movt	r3, #5
   144b8:	str	r0, [r3, #20]
   144bc:	b	143f8 <__printf_chk@plt+0x1bcc>
   144c0:	clz	r0, r0
   144c4:	lsr	r0, r0, #5
   144c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   144cc:	push	{r4, lr}
   144d0:	mov	r4, r0
   144d4:	bl	2e22c <crc32@@Base+0x13ed0>
   144d8:	cmp	r0, #0
   144dc:	beq	144e8 <__printf_chk@plt+0x1cbc>
   144e0:	mov	r0, #1
   144e4:	pop	{r4, pc}
   144e8:	mov	r0, r4
   144ec:	bl	18910 <__printf_chk@plt+0x60e4>
   144f0:	clz	r0, r0
   144f4:	lsr	r0, r0, #5
   144f8:	pop	{r4, pc}
   144fc:	subs	r0, r0, #8
   14500:	movne	r0, #1
   14504:	bx	lr
   14508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1450c:	sub	sp, sp, #12
   14510:	mov	r5, r1
   14514:	mov	r9, r0
   14518:	ldrb	r6, [sp, #56]	; 0x38
   1451c:	mov	r0, r1
   14520:	mov	sl, r2
   14524:	mov	fp, r3
   14528:	cmp	r6, #0
   1452c:	ldrb	r8, [sp, #52]	; 0x34
   14530:	moveq	r1, #2
   14534:	movne	r1, #0
   14538:	bl	1222c <__open_2@plt>
   1453c:	mov	r4, r0
   14540:	bl	12748 <__errno_location@plt>
   14544:	cmp	r4, #0
   14548:	mov	r7, r0
   1454c:	blt	1460c <__printf_chk@plt+0x1de0>
   14550:	ldr	r2, [sp, #48]	; 0x30
   14554:	mov	r1, r4
   14558:	mov	r0, #3
   1455c:	bl	12610 <__fxstat@plt>
   14560:	cmp	r0, #0
   14564:	blt	14688 <__printf_chk@plt+0x1e5c>
   14568:	ldr	r3, [sp, #48]	; 0x30
   1456c:	cmp	sl, #0
   14570:	ldr	r1, [r3, #44]	; 0x2c
   14574:	bne	14664 <__printf_chk@plt+0x1e38>
   14578:	cmp	r6, #0
   1457c:	mov	r3, #0
   14580:	mov	r0, r3
   14584:	str	r3, [r7]
   14588:	moveq	r2, #3
   1458c:	movne	r2, #1
   14590:	str	r3, [sp, #4]
   14594:	mov	r3, #1
   14598:	str	r4, [sp]
   1459c:	bl	12490 <mmap@plt>
   145a0:	ldr	r2, [r7]
   145a4:	cmn	r0, #1
   145a8:	mov	r6, r0
   145ac:	beq	145b8 <__printf_chk@plt+0x1d8c>
   145b0:	cmp	r2, #0
   145b4:	beq	146c0 <__printf_chk@plt+0x1e94>
   145b8:	movw	r3, #7868	; 0x1ebc
   145bc:	movt	r3, #5
   145c0:	mov	r0, r2
   145c4:	ldr	r6, [r3]
   145c8:	bl	122a4 <strerror@plt>
   145cc:	movw	r2, #31484	; 0x7afc
   145d0:	str	r5, [sp]
   145d4:	mov	r3, r9
   145d8:	movt	r2, #3
   145dc:	mov	r1, #1
   145e0:	str	r0, [sp, #4]
   145e4:	mov	r0, r6
   145e8:	bl	12358 <__fprintf_chk@plt>
   145ec:	mov	r0, r4
   145f0:	bl	123b8 <close@plt>
   145f4:	cmp	r8, #0
   145f8:	mvneq	r4, #0
   145fc:	bne	1464c <__printf_chk@plt+0x1e20>
   14600:	mov	r0, r4
   14604:	add	sp, sp, #12
   14608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1460c:	movw	r3, #7868	; 0x1ebc
   14610:	movt	r3, #5
   14614:	ldr	r0, [r0]
   14618:	ldr	r4, [r3]
   1461c:	bl	122a4 <strerror@plt>
   14620:	str	r5, [sp]
   14624:	mov	r3, r9
   14628:	movw	r2, #29880	; 0x74b8
   1462c:	mov	r1, #1
   14630:	movt	r2, #3
   14634:	str	r0, [sp, #4]
   14638:	mov	r0, r4
   1463c:	bl	12358 <__fprintf_chk@plt>
   14640:	cmp	r8, #0
   14644:	mvneq	r4, #0
   14648:	beq	14600 <__printf_chk@plt+0x1dd4>
   1464c:	mov	r0, r5
   14650:	mvn	r4, #0
   14654:	bl	12448 <unlink@plt>
   14658:	mov	r0, r4
   1465c:	add	sp, sp, #12
   14660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14664:	add	r1, sl, r1
   14668:	mov	r0, r4
   1466c:	str	r1, [r3, #44]	; 0x2c
   14670:	bl	12124 <ftruncate@plt>
   14674:	cmp	r0, #0
   14678:	bne	146dc <__printf_chk@plt+0x1eb0>
   1467c:	ldr	r3, [sp, #48]	; 0x30
   14680:	ldr	r1, [r3, #44]	; 0x2c
   14684:	b	14578 <__printf_chk@plt+0x1d4c>
   14688:	movw	r3, #7868	; 0x1ebc
   1468c:	movt	r3, #5
   14690:	ldr	r0, [r7]
   14694:	ldr	r6, [r3]
   14698:	bl	122a4 <strerror@plt>
   1469c:	str	r5, [sp]
   146a0:	mov	r3, r9
   146a4:	movw	r2, #29904	; 0x74d0
   146a8:	mov	r1, #1
   146ac:	movt	r2, #3
   146b0:	str	r0, [sp, #4]
   146b4:	mov	r0, r6
   146b8:	bl	12358 <__fprintf_chk@plt>
   146bc:	b	145ec <__printf_chk@plt+0x1dc0>
   146c0:	bl	2e22c <crc32@@Base+0x13ed0>
   146c4:	cmp	r0, #0
   146c8:	bne	14714 <__printf_chk@plt+0x1ee8>
   146cc:	cmp	sl, #0
   146d0:	bne	14738 <__printf_chk@plt+0x1f0c>
   146d4:	str	r6, [fp]
   146d8:	b	14600 <__printf_chk@plt+0x1dd4>
   146dc:	movw	r3, #7868	; 0x1ebc
   146e0:	movt	r3, #5
   146e4:	ldr	r0, [r7]
   146e8:	ldr	r6, [r3]
   146ec:	bl	122a4 <strerror@plt>
   146f0:	str	r5, [sp]
   146f4:	mov	r3, r9
   146f8:	movw	r2, #31456	; 0x7ae0
   146fc:	mov	r1, #1
   14700:	movt	r2, #3
   14704:	str	r0, [sp, #4]
   14708:	mov	r0, r6
   1470c:	bl	12358 <__fprintf_chk@plt>
   14710:	b	145ec <__printf_chk@plt+0x1dc0>
   14714:	movw	r1, #7868	; 0x1ebc
   14718:	movt	r1, #5
   1471c:	mov	r3, r9
   14720:	movw	r2, #31508	; 0x7b14
   14724:	ldr	r0, [r1]
   14728:	movt	r2, #3
   1472c:	mov	r1, #1
   14730:	bl	12358 <__fprintf_chk@plt>
   14734:	b	145ec <__printf_chk@plt+0x1dc0>
   14738:	ldr	r3, [sp, #48]	; 0x30
   1473c:	mov	r1, r6
   14740:	mov	r0, r6
   14744:	ldr	r2, [r3, #44]	; 0x2c
   14748:	bl	2ffa0 <crc32@@Base+0x15c44>
   1474c:	cmp	r0, #0
   14750:	beq	146d4 <__printf_chk@plt+0x1ea8>
   14754:	movw	r3, #7868	; 0x1ebc
   14758:	movt	r3, #5
   1475c:	ldr	r6, [r3]
   14760:	bl	303c0 <crc32@@Base+0x16064>
   14764:	mov	r3, r9
   14768:	movw	r2, #31532	; 0x7b2c
   1476c:	mov	r1, #1
   14770:	movt	r2, #3
   14774:	str	r0, [sp]
   14778:	mov	r0, r6
   1477c:	bl	12358 <__fprintf_chk@plt>
   14780:	b	145ec <__printf_chk@plt+0x1dc0>
   14784:	push	{r2, r3}
   14788:	mov	r3, #100	; 0x64
   1478c:	push	{r4, r5, r6, lr}
   14790:	sub	sp, sp, #120	; 0x78
   14794:	movw	r4, #3824	; 0xef0
   14798:	movt	r4, #5
   1479c:	ldr	r2, [sp, #136]	; 0x88
   147a0:	add	ip, sp, #140	; 0x8c
   147a4:	ldr	lr, [r4]
   147a8:	mov	r5, r0
   147ac:	str	ip, [sp, #4]
   147b0:	mov	r6, r1
   147b4:	str	r2, [sp]
   147b8:	mov	r1, r3
   147bc:	mov	r2, #1
   147c0:	add	r0, sp, #16
   147c4:	str	lr, [sp, #116]	; 0x74
   147c8:	str	ip, [sp, #12]
   147cc:	bl	122d4 <__vsnprintf_chk@plt>
   147d0:	add	r0, sp, #16
   147d4:	bl	1267c <strlen@plt>
   147d8:	add	r2, sp, #16
   147dc:	mov	r1, r6
   147e0:	add	r3, r0, #1
   147e4:	mov	r0, r5
   147e8:	bl	2f070 <crc32@@Base+0x14d14>
   147ec:	ldr	r2, [sp, #116]	; 0x74
   147f0:	ldr	r3, [r4]
   147f4:	cmp	r2, r3
   147f8:	bne	1480c <__printf_chk@plt+0x1fe0>
   147fc:	add	sp, sp, #120	; 0x78
   14800:	pop	{r4, r5, r6, lr}
   14804:	add	sp, sp, #8
   14808:	bx	lr
   1480c:	bl	12538 <__stack_chk_fail@plt>
   14810:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14814:	movw	r9, #3824	; 0xef0
   14818:	movt	r9, #5
   1481c:	sub	sp, sp, #24
   14820:	mov	r8, r1
   14824:	mov	r7, r0
   14828:	ldr	r3, [r9]
   1482c:	str	r3, [sp, #20]
   14830:	bl	18910 <__printf_chk@plt+0x60e4>
   14834:	cmp	r0, #0
   14838:	beq	14984 <__printf_chk@plt+0x2158>
   1483c:	movw	r1, #31600	; 0x7b70
   14840:	mov	r0, r7
   14844:	movt	r1, #3
   14848:	bl	31e60 <crc32@@Base+0x17b04>
   1484c:	subs	r4, r0, #0
   14850:	blt	14998 <__printf_chk@plt+0x216c>
   14854:	mov	r1, r4
   14858:	mov	r0, r7
   1485c:	bl	16ecc <__printf_chk@plt+0x46a0>
   14860:	ldr	r2, [r8, #20]
   14864:	cmp	r2, r0
   14868:	movlt	r0, #0
   1486c:	movge	r0, #1
   14870:	orrs	r5, r0, r2, lsr #31
   14874:	bne	1496c <__printf_chk@plt+0x2140>
   14878:	add	sl, sp, #24
   1487c:	mov	r1, r4
   14880:	mov	r0, r7
   14884:	str	r5, [sl, #-16]!
   14888:	mov	r2, sl
   1488c:	bl	2e588 <crc32@@Base+0x1422c>
   14890:	subs	r6, r0, #0
   14894:	bge	148cc <__printf_chk@plt+0x20a0>
   14898:	b	148d8 <__printf_chk@plt+0x20ac>
   1489c:	cmp	r4, #1
   148a0:	bne	148b4 <__printf_chk@plt+0x2088>
   148a4:	ldr	r3, [r8, #20]
   148a8:	cmp	r3, r5
   148ac:	beq	148f4 <__printf_chk@plt+0x20c8>
   148b0:	add	r5, r5, #1
   148b4:	mov	r1, r6
   148b8:	mov	r2, sl
   148bc:	mov	r0, r7
   148c0:	bl	2e588 <crc32@@Base+0x1422c>
   148c4:	subs	r6, r0, #0
   148c8:	blt	148d8 <__printf_chk@plt+0x20ac>
   148cc:	ldr	r4, [sp, #8]
   148d0:	cmp	r4, #0
   148d4:	bgt	1489c <__printf_chk@plt+0x2070>
   148d8:	mov	r0, #0
   148dc:	ldr	r2, [sp, #20]
   148e0:	ldr	r3, [r9]
   148e4:	cmp	r2, r3
   148e8:	bne	149c0 <__printf_chk@plt+0x2194>
   148ec:	add	sp, sp, #24
   148f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   148f4:	mov	r1, r6
   148f8:	mov	r2, #0
   148fc:	mov	r0, r7
   14900:	bl	31804 <crc32@@Base+0x174a8>
   14904:	mov	r3, r5
   14908:	movw	r2, #50548	; 0xc574
   1490c:	movw	r1, #31680	; 0x7bc0
   14910:	movt	r2, #3
   14914:	movt	r1, #3
   14918:	str	r0, [sp]
   1491c:	mov	r0, r4
   14920:	bl	1282c <__printf_chk@plt>
   14924:	mov	r1, r6
   14928:	mov	r0, r7
   1492c:	movw	r2, #50548	; 0xc574
   14930:	movt	r2, #3
   14934:	bl	17710 <__printf_chk@plt+0x4ee4>
   14938:	ldr	r4, [r8, #84]	; 0x54
   1493c:	add	r3, sp, #24
   14940:	mov	r1, r6
   14944:	mov	ip, #0
   14948:	add	r2, sp, #12
   1494c:	mov	r0, r7
   14950:	str	ip, [r3, #-8]!
   14954:	bl	174d8 <__printf_chk@plt+0x4cac>
   14958:	mov	r0, r4
   1495c:	ldr	r2, [sp, #16]
   14960:	ldr	r1, [sp, #12]
   14964:	bl	1b47c <crc32@@Base+0x1120>
   14968:	b	148dc <__printf_chk@plt+0x20b0>
   1496c:	movw	r1, #31652	; 0x7ba4
   14970:	mov	r0, #1
   14974:	movt	r1, #3
   14978:	bl	1282c <__printf_chk@plt>
   1497c:	mvn	r0, #0
   14980:	b	148dc <__printf_chk@plt+0x20b0>
   14984:	movw	r0, #31576	; 0x7b58
   14988:	movt	r0, #3
   1498c:	bl	12310 <puts@plt>
   14990:	mvn	r0, #0
   14994:	b	148dc <__printf_chk@plt+0x20b0>
   14998:	bl	303c0 <crc32@@Base+0x16064>
   1499c:	movw	r2, #31600	; 0x7b70
   149a0:	movw	r1, #31608	; 0x7b78
   149a4:	movt	r2, #3
   149a8:	movt	r1, #3
   149ac:	mov	r3, r0
   149b0:	mov	r0, #1
   149b4:	bl	1282c <__printf_chk@plt>
   149b8:	mvn	r0, #0
   149bc:	b	148dc <__printf_chk@plt+0x20b0>
   149c0:	bl	12538 <__stack_chk_fail@plt>
   149c4:	ldrb	r2, [r0, #112]	; 0x70
   149c8:	mov	r3, r0
   149cc:	cmp	r2, #0
   149d0:	bne	14a14 <__printf_chk@plt+0x21e8>
   149d4:	ldr	r2, [r0]
   149d8:	ldr	r0, [r0, #8]
   149dc:	cmp	r2, #0
   149e0:	beq	149fc <__printf_chk@plt+0x21d0>
   149e4:	cmp	r0, #0
   149e8:	bne	14a1c <__printf_chk@plt+0x21f0>
   149ec:	ldr	r0, [r3, #16]
   149f0:	adds	r0, r0, #0
   149f4:	movne	r0, #1
   149f8:	bx	lr
   149fc:	cmp	r0, #0
   14a00:	ldr	r3, [r3, #16]
   14a04:	bxeq	lr
   14a08:	adds	r0, r3, #0
   14a0c:	movne	r0, #1
   14a10:	bx	lr
   14a14:	mov	r0, #0
   14a18:	bx	lr
   14a1c:	mov	r0, #1
   14a20:	bx	lr
   14a24:	push	{r4, r5, r6, r7, r8, lr}
   14a28:	movw	r4, #3824	; 0xef0
   14a2c:	movt	r4, #5
   14a30:	sub	sp, sp, #112	; 0x70
   14a34:	mov	r8, r0
   14a38:	mov	r7, r1
   14a3c:	ldr	r3, [r4]
   14a40:	mov	r0, r2
   14a44:	mov	r1, #2
   14a48:	mov	r6, r2
   14a4c:	str	r3, [sp, #108]	; 0x6c
   14a50:	bl	124d8 <open@plt>
   14a54:	subs	r5, r0, #0
   14a58:	blt	14b60 <__printf_chk@plt+0x2334>
   14a5c:	add	r2, sp, #16
   14a60:	mov	r1, r5
   14a64:	mov	r0, #3
   14a68:	bl	12610 <__fxstat@plt>
   14a6c:	cmp	r0, #0
   14a70:	blt	14ad4 <__printf_chk@plt+0x22a8>
   14a74:	mov	r0, r7
   14a78:	movw	r1, #45044	; 0xaff4
   14a7c:	add	r3, sp, #12
   14a80:	movt	r1, #3
   14a84:	ldr	r2, [sp, #60]	; 0x3c
   14a88:	bl	2eea4 <crc32@@Base+0x14b48>
   14a8c:	subs	r7, r0, #0
   14a90:	bne	14b10 <__printf_chk@plt+0x22e4>
   14a94:	ldr	r2, [sp, #60]	; 0x3c
   14a98:	mov	r0, r5
   14a9c:	ldr	r1, [sp, #12]
   14aa0:	bl	123e8 <read@plt>
   14aa4:	ldr	r3, [sp, #60]	; 0x3c
   14aa8:	cmp	r0, r3
   14aac:	bne	14b20 <__printf_chk@plt+0x22f4>
   14ab0:	mov	r0, r5
   14ab4:	bl	123b8 <close@plt>
   14ab8:	ldr	r2, [sp, #108]	; 0x6c
   14abc:	mov	r0, r7
   14ac0:	ldr	r3, [r4]
   14ac4:	cmp	r2, r3
   14ac8:	bne	14ba4 <__printf_chk@plt+0x2378>
   14acc:	add	sp, sp, #112	; 0x70
   14ad0:	pop	{r4, r5, r6, r7, r8, pc}
   14ad4:	movw	r2, #7868	; 0x1ebc
   14ad8:	movt	r2, #5
   14adc:	ldr	r8, [r8]
   14ae0:	ldr	r7, [r2]
   14ae4:	bl	12748 <__errno_location@plt>
   14ae8:	ldr	r0, [r0]
   14aec:	bl	122a4 <strerror@plt>
   14af0:	movw	r2, #29904	; 0x74d0
   14af4:	mov	r3, r8
   14af8:	str	r6, [sp]
   14afc:	movt	r2, #3
   14b00:	mov	r1, #1
   14b04:	str	r0, [sp, #4]
   14b08:	mov	r0, r7
   14b0c:	bl	12358 <__fprintf_chk@plt>
   14b10:	mov	r0, r5
   14b14:	mvn	r7, #0
   14b18:	bl	123b8 <close@plt>
   14b1c:	b	14ab8 <__printf_chk@plt+0x228c>
   14b20:	movw	r2, #7868	; 0x1ebc
   14b24:	movt	r2, #5
   14b28:	ldr	r8, [r8]
   14b2c:	ldr	r7, [r2]
   14b30:	bl	12748 <__errno_location@plt>
   14b34:	ldr	r0, [r0]
   14b38:	bl	122a4 <strerror@plt>
   14b3c:	mov	r3, r8
   14b40:	str	r6, [sp]
   14b44:	movw	r2, #31484	; 0x7afc
   14b48:	mov	r1, #1
   14b4c:	movt	r2, #3
   14b50:	str	r0, [sp, #4]
   14b54:	mov	r0, r7
   14b58:	bl	12358 <__fprintf_chk@plt>
   14b5c:	b	14b10 <__printf_chk@plt+0x22e4>
   14b60:	movw	r2, #7868	; 0x1ebc
   14b64:	movt	r2, #5
   14b68:	ldr	r8, [r8]
   14b6c:	mvn	r7, #0
   14b70:	ldr	r5, [r2]
   14b74:	bl	12748 <__errno_location@plt>
   14b78:	ldr	r0, [r0]
   14b7c:	bl	122a4 <strerror@plt>
   14b80:	mov	r3, r8
   14b84:	str	r6, [sp]
   14b88:	movw	r2, #29880	; 0x74b8
   14b8c:	mov	r1, #1
   14b90:	movt	r2, #3
   14b94:	str	r0, [sp, #4]
   14b98:	mov	r0, r5
   14b9c:	bl	12358 <__fprintf_chk@plt>
   14ba0:	b	14ab8 <__printf_chk@plt+0x228c>
   14ba4:	bl	12538 <__stack_chk_fail@plt>
   14ba8:	push	{r4, r5, r6, r7, r8, lr}
   14bac:	mov	r6, r1
   14bb0:	mov	r7, r0
   14bb4:	mov	r1, #47	; 0x2f
   14bb8:	mov	r0, r6
   14bbc:	bl	127a8 <strrchr@plt>
   14bc0:	mov	r1, #46	; 0x2e
   14bc4:	cmp	r0, #0
   14bc8:	addne	r5, r0, #1
   14bcc:	mov	r0, r6
   14bd0:	moveq	r5, r6
   14bd4:	bl	127a8 <strrchr@plt>
   14bd8:	cmp	r0, #0
   14bdc:	beq	14c08 <__printf_chk@plt+0x23dc>
   14be0:	sub	r4, r0, r5
   14be4:	mov	r1, r5
   14be8:	cmp	r4, #99	; 0x63
   14bec:	mov	r0, r7
   14bf0:	movge	r4, #99	; 0x63
   14bf4:	mov	r2, r4
   14bf8:	bl	12658 <memcpy@plt>
   14bfc:	mov	r3, #0
   14c00:	strb	r3, [r7, r4]
   14c04:	pop	{r4, r5, r6, r7, r8, pc}
   14c08:	mov	r0, r6
   14c0c:	bl	1267c <strlen@plt>
   14c10:	add	r0, r6, r0
   14c14:	b	14be0 <__printf_chk@plt+0x23b4>
   14c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c1c:	movw	r3, #3824	; 0xef0
   14c20:	sub	sp, sp, #1020	; 0x3fc
   14c24:	movt	r3, #5
   14c28:	ldr	r5, [r0, #76]	; 0x4c
   14c2c:	mov	r4, r0
   14c30:	str	r3, [sp, #28]
   14c34:	ldr	r3, [r3]
   14c38:	mov	r0, r5
   14c3c:	str	r3, [sp, #1012]	; 0x3f4
   14c40:	bl	1267c <strlen@plt>
   14c44:	add	r0, r0, #5
   14c48:	cmp	r0, #256	; 0x100
   14c4c:	bhi	14da0 <__printf_chk@plt+0x2574>
   14c50:	str	r5, [sp]
   14c54:	movw	r2, #31776	; 0x7c20
   14c58:	movw	r3, #31768	; 0x7c18
   14c5c:	movt	r2, #3
   14c60:	movt	r3, #3
   14c64:	str	r2, [sp, #4]
   14c68:	add	r0, sp, #244	; 0xf4
   14c6c:	mov	r2, #256	; 0x100
   14c70:	mov	r1, #1
   14c74:	bl	1279c <__sprintf_chk@plt>
   14c78:	ldrb	r3, [r4, #112]	; 0x70
   14c7c:	cmp	r3, #0
   14c80:	bne	14dd0 <__printf_chk@plt+0x25a4>
   14c84:	ldr	r2, [r4, #72]	; 0x48
   14c88:	cmp	r2, #0
   14c8c:	beq	15174 <__printf_chk@plt+0x2948>
   14c90:	ldr	ip, [r4, #52]	; 0x34
   14c94:	add	r6, sp, #500	; 0x1f4
   14c98:	mov	r3, #512	; 0x200
   14c9c:	str	r2, [sp, #16]
   14ca0:	movw	r1, #32144	; 0x7d90
   14ca4:	add	r2, sp, #244	; 0xf4
   14ca8:	movt	r1, #3
   14cac:	str	r2, [sp, #12]
   14cb0:	str	r1, [sp, #4]
   14cb4:	movw	r2, #32148	; 0x7d94
   14cb8:	mov	r0, r6
   14cbc:	movt	r2, #3
   14cc0:	str	ip, [sp, #8]
   14cc4:	mov	r1, r3
   14cc8:	str	r2, [sp]
   14ccc:	mov	r2, #1
   14cd0:	bl	12688 <__snprintf_chk@plt>
   14cd4:	ldrb	r3, [sp, #500]	; 0x1f4
   14cd8:	cmp	r3, #0
   14cdc:	beq	14cf0 <__printf_chk@plt+0x24c4>
   14ce0:	mov	r0, r6
   14ce4:	bl	1246c <system@plt>
   14ce8:	cmn	r0, #1
   14cec:	beq	159cc <__printf_chk@plt+0x31a0>
   14cf0:	add	fp, sp, #64	; 0x40
   14cf4:	ldr	r0, [r4, #80]	; 0x50
   14cf8:	mov	r2, #0
   14cfc:	add	r1, sp, #152	; 0x98
   14d00:	mov	r3, fp
   14d04:	str	r1, [sp]
   14d08:	str	r2, [sp, #8]
   14d0c:	add	r1, sp, #244	; 0xf4
   14d10:	str	r2, [sp, #4]
   14d14:	bl	14508 <__printf_chk@plt+0x1cdc>
   14d18:	subs	r8, r0, #0
   14d1c:	blt	14d74 <__printf_chk@plt+0x2548>
   14d20:	ldr	r6, [sp, #196]	; 0xc4
   14d24:	ldr	r9, [sp, #64]	; 0x40
   14d28:	add	r6, r6, #16384	; 0x4000
   14d2c:	mov	r0, r6
   14d30:	ldr	r7, [r9, #4]
   14d34:	bl	12664 <malloc@plt>
   14d38:	subs	r5, r0, #0
   14d3c:	beq	14ed8 <__printf_chk@plt+0x26ac>
   14d40:	mov	r2, r6
   14d44:	mov	r0, r9
   14d48:	mov	r1, r5
   14d4c:	bl	2ffa0 <crc32@@Base+0x15c44>
   14d50:	cmp	r0, #0
   14d54:	beq	14f04 <__printf_chk@plt+0x26d8>
   14d58:	mov	r0, r8
   14d5c:	bl	123b8 <close@plt>
   14d60:	ldr	r1, [sp, #196]	; 0xc4
   14d64:	ldr	r0, [sp, #64]	; 0x40
   14d68:	bl	126a0 <munmap@plt>
   14d6c:	mov	r0, r5
   14d70:	bl	121c0 <free@plt>
   14d74:	add	r0, sp, #244	; 0xf4
   14d78:	mvn	r8, #0
   14d7c:	bl	12448 <unlink@plt>
   14d80:	ldr	r3, [sp, #28]
   14d84:	mov	r0, r8
   14d88:	ldr	r2, [sp, #1012]	; 0x3f4
   14d8c:	ldr	r3, [r3]
   14d90:	cmp	r2, r3
   14d94:	bne	15a0c <__printf_chk@plt+0x31e0>
   14d98:	add	sp, sp, #1020	; 0x3fc
   14d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14da0:	ldr	ip, [r4, #80]	; 0x50
   14da4:	movw	r2, #7868	; 0x1ebc
   14da8:	movt	r2, #5
   14dac:	mov	r1, #1
   14db0:	mov	r3, r5
   14db4:	mov	r8, r1
   14db8:	ldr	r0, [r2]
   14dbc:	movw	r2, #31712	; 0x7be0
   14dc0:	str	ip, [sp]
   14dc4:	movt	r2, #3
   14dc8:	bl	12358 <__fprintf_chk@plt>
   14dcc:	b	14d80 <__printf_chk@plt+0x2554>
   14dd0:	ldr	r1, [r4, #72]	; 0x48
   14dd4:	mov	r0, r4
   14dd8:	bl	1b54c <crc32@@Base+0x11f0>
   14ddc:	subs	r6, r0, #0
   14de0:	blt	14e3c <__printf_chk@plt+0x2610>
   14de4:	ldr	r1, [r4, #120]	; 0x78
   14de8:	cmp	r1, #0
   14dec:	beq	14e04 <__printf_chk@plt+0x25d8>
   14df0:	mov	r0, r4
   14df4:	bl	1b54c <crc32@@Base+0x11f0>
   14df8:	cmp	r0, #0
   14dfc:	addge	r6, r6, r0
   14e00:	blt	14e3c <__printf_chk@plt+0x2610>
   14e04:	ldr	r5, [r4, #124]	; 0x7c
   14e08:	cmp	r5, #0
   14e0c:	bne	14e28 <__printf_chk@plt+0x25fc>
   14e10:	b	14e64 <__printf_chk@plt+0x2638>
   14e14:	ldr	r5, [r5]
   14e18:	add	r0, r0, #300	; 0x12c
   14e1c:	add	r6, r6, r0
   14e20:	cmp	r5, #0
   14e24:	beq	14e64 <__printf_chk@plt+0x2638>
   14e28:	ldr	r1, [r5, #8]
   14e2c:	mov	r0, r4
   14e30:	bl	1b54c <crc32@@Base+0x11f0>
   14e34:	cmp	r0, #0
   14e38:	bge	14e14 <__printf_chk@plt+0x25e8>
   14e3c:	movw	r7, #7868	; 0x1ebc
   14e40:	movt	r7, #5
   14e44:	mov	r1, #1
   14e48:	ldr	r3, [r4, #80]	; 0x50
   14e4c:	movw	r2, #32116	; 0x7d74
   14e50:	ldr	r0, [r7]
   14e54:	movt	r2, #3
   14e58:	mov	r8, r1
   14e5c:	bl	12358 <__fprintf_chk@plt>
   14e60:	b	14d80 <__printf_chk@plt+0x2554>
   14e64:	add	r6, r6, #4096	; 0x1000
   14e68:	mov	r0, r6
   14e6c:	bl	12664 <malloc@plt>
   14e70:	subs	r5, r0, #0
   14e74:	beq	159a4 <__printf_chk@plt+0x3178>
   14e78:	mov	r1, r6
   14e7c:	bl	2eb10 <crc32@@Base+0x147b4>
   14e80:	subs	r7, r0, #0
   14e84:	beq	151ac <__printf_chk@plt+0x2980>
   14e88:	cmp	r7, #0
   14e8c:	blt	1593c <__printf_chk@plt+0x3110>
   14e90:	movw	r2, #438	; 0x1b6
   14e94:	movw	r1, #578	; 0x242
   14e98:	add	r0, sp, #244	; 0xf4
   14e9c:	bl	124d8 <open@plt>
   14ea0:	subs	r6, r0, #0
   14ea4:	blt	15960 <__printf_chk@plt+0x3134>
   14ea8:	mov	r2, r7
   14eac:	mov	r1, r5
   14eb0:	bl	126c4 <write@plt>
   14eb4:	cmp	r0, r7
   14eb8:	bne	158e0 <__printf_chk@plt+0x30b4>
   14ebc:	mov	r0, r6
   14ec0:	bl	123b8 <close@plt>
   14ec4:	mov	r0, r5
   14ec8:	bl	121c0 <free@plt>
   14ecc:	mov	r3, #0
   14ed0:	strb	r3, [sp, #500]	; 0x1f4
   14ed4:	b	14cf0 <__printf_chk@plt+0x24c4>
   14ed8:	movw	r2, #7868	; 0x1ebc
   14edc:	movt	r2, #5
   14ee0:	str	r6, [sp]
   14ee4:	movw	r3, #31560	; 0x7b48
   14ee8:	ldr	r0, [r2]
   14eec:	movt	r3, #3
   14ef0:	movw	r2, #32212	; 0x7dd4
   14ef4:	mov	r1, #1
   14ef8:	movt	r2, #3
   14efc:	bl	12358 <__fprintf_chk@plt>
   14f00:	b	14d58 <__printf_chk@plt+0x252c>
   14f04:	movw	r1, #31600	; 0x7b70
   14f08:	mov	r0, r5
   14f0c:	movt	r1, #3
   14f10:	bl	31e60 <crc32@@Base+0x17b04>
   14f14:	subs	r1, r0, #0
   14f18:	blt	14d58 <__printf_chk@plt+0x252c>
   14f1c:	mov	r0, r5
   14f20:	bl	2e678 <crc32@@Base+0x1431c>
   14f24:	subs	r6, r0, #0
   14f28:	blt	14fdc <__printf_chk@plt+0x27b0>
   14f2c:	lsr	r2, r7, #24
   14f30:	ubfx	r3, r7, #8, #8
   14f34:	orr	r2, r2, r7, lsl #24
   14f38:	ubfx	r7, r7, #16, #8
   14f3c:	orr	r3, r2, r3, lsl #16
   14f40:	movw	sl, #32256	; 0x7e00
   14f44:	orr	r7, r3, r7, lsl #8
   14f48:	movw	r9, #32268	; 0x7e0c
   14f4c:	add	r3, r7, #3
   14f50:	movt	sl, #3
   14f54:	bic	r3, r3, #3
   14f58:	movt	r9, #3
   14f5c:	str	r4, [sp, #32]
   14f60:	mov	r4, r3
   14f64:	mvn	r3, #0
   14f68:	mov	r2, sl
   14f6c:	mov	r1, r6
   14f70:	mov	r0, r5
   14f74:	bl	1a6a8 <crc32@@Base+0x34c>
   14f78:	mvn	r3, #0
   14f7c:	mov	r2, r9
   14f80:	mov	r1, r6
   14f84:	mov	r7, r0
   14f88:	mov	r0, r5
   14f8c:	bl	1a6a8 <crc32@@Base+0x34c>
   14f90:	cmn	r7, #1
   14f94:	cmnne	r0, #1
   14f98:	beq	14fc4 <__printf_chk@plt+0x2798>
   14f9c:	add	r3, r7, r4
   14fa0:	str	r0, [sp]
   14fa4:	add	r3, r5, r3
   14fa8:	movw	r2, #45044	; 0xaff4
   14fac:	mov	r1, r6
   14fb0:	movt	r2, #3
   14fb4:	mov	r0, r5
   14fb8:	bl	2fbb8 <crc32@@Base+0x1585c>
   14fbc:	cmp	r0, #0
   14fc0:	bne	14d58 <__printf_chk@plt+0x252c>
   14fc4:	mov	r1, r6
   14fc8:	mov	r0, r5
   14fcc:	bl	2e6d8 <crc32@@Base+0x1437c>
   14fd0:	subs	r6, r0, #0
   14fd4:	bge	14f64 <__printf_chk@plt+0x2738>
   14fd8:	ldr	r4, [sp, #32]
   14fdc:	mov	r0, r8
   14fe0:	bl	123b8 <close@plt>
   14fe4:	mov	r0, r5
   14fe8:	bl	3020c <crc32@@Base+0x15eb0>
   14fec:	movw	r2, #438	; 0x1b6
   14ff0:	movw	r1, #578	; 0x242
   14ff4:	add	r0, sp, #244	; 0xf4
   14ff8:	ldr	r7, [r5, #4]
   14ffc:	bl	124d8 <open@plt>
   15000:	subs	r8, r0, #0
   15004:	blt	15810 <__printf_chk@plt+0x2fe4>
   15008:	ubfx	r3, r7, #8, #8
   1500c:	lsr	r6, r7, #24
   15010:	orr	r6, r6, r7, lsl #24
   15014:	ubfx	r7, r7, #16, #8
   15018:	orr	r6, r6, r3, lsl #16
   1501c:	mov	r1, r5
   15020:	orr	r6, r6, r7, lsl #8
   15024:	mov	r2, r6
   15028:	bl	126c4 <write@plt>
   1502c:	cmp	r6, r0
   15030:	bne	14d58 <__printf_chk@plt+0x252c>
   15034:	mov	r0, r8
   15038:	mov	r6, #0
   1503c:	bl	123b8 <close@plt>
   15040:	ldr	r1, [sp, #196]	; 0xc4
   15044:	ldr	r0, [sp, #64]	; 0x40
   15048:	mov	r7, r6
   1504c:	bl	126a0 <munmap@plt>
   15050:	mov	r0, r5
   15054:	bl	121c0 <free@plt>
   15058:	b	15128 <__printf_chk@plt+0x28fc>
   1505c:	add	r3, sp, #152	; 0x98
   15060:	str	r7, [sp, #8]
   15064:	str	r3, [sp]
   15068:	mov	r2, r6
   1506c:	str	r7, [sp, #4]
   15070:	add	r3, sp, #56	; 0x38
   15074:	bl	14508 <__printf_chk@plt+0x1cdc>
   15078:	subs	r5, r0, #0
   1507c:	blt	15544 <__printf_chk@plt+0x2d18>
   15080:	ldr	sl, [sp, #196]	; 0xc4
   15084:	ldr	r0, [r4, #80]	; 0x50
   15088:	ldr	r3, [r4, #72]	; 0x48
   1508c:	cmp	r3, #0
   15090:	beq	150b8 <__printf_chk@plt+0x288c>
   15094:	ldr	r1, [sp, #128]	; 0x80
   15098:	bl	1b650 <crc32@@Base+0x12f4>
   1509c:	mov	r1, #0
   150a0:	mov	r2, r0
   150a4:	ldr	r0, [sp, #60]	; 0x3c
   150a8:	bl	180f0 <__printf_chk@plt+0x58c4>
   150ac:	subs	r8, r0, #0
   150b0:	bne	150e4 <__printf_chk@plt+0x28b8>
   150b4:	ldr	r0, [r4, #80]	; 0x50
   150b8:	ldr	r8, [r4, #88]	; 0x58
   150bc:	ldr	lr, [r4, #140]	; 0x8c
   150c0:	ldr	ip, [r4, #100]	; 0x64
   150c4:	ldr	r3, [r4, #96]	; 0x60
   150c8:	ldr	r2, [sp, #60]	; 0x3c
   150cc:	str	r0, [sp, #8]
   150d0:	mov	r0, r8
   150d4:	ldr	r1, [sp, #56]	; 0x38
   150d8:	stm	sp, {ip, lr}
   150dc:	bl	16a34 <__printf_chk@plt+0x4208>
   150e0:	mov	r8, r0
   150e4:	ldr	r0, [sp, #56]	; 0x38
   150e8:	cmp	r0, #0
   150ec:	beq	15100 <__printf_chk@plt+0x28d4>
   150f0:	mov	r1, sl
   150f4:	bl	126a0 <munmap@plt>
   150f8:	mov	r0, r5
   150fc:	bl	123b8 <close@plt>
   15100:	ldr	r1, [sp, #108]	; 0x6c
   15104:	ldr	r0, [sp, #60]	; 0x3c
   15108:	bl	126a0 <munmap@plt>
   1510c:	mov	r0, r9
   15110:	bl	123b8 <close@plt>
   15114:	cmn	r8, #28
   15118:	bne	15a10 <__printf_chk@plt+0x31e4>
   1511c:	add	r6, r6, #1024	; 0x400
   15120:	cmp	r6, #65536	; 0x10000
   15124:	beq	1555c <__printf_chk@plt+0x2d30>
   15128:	ldr	r0, [r4, #80]	; 0x50
   1512c:	mov	r1, #1
   15130:	add	r3, sp, #60	; 0x3c
   15134:	str	r1, [sp, #4]
   15138:	str	r7, [sp, #8]
   1513c:	mov	r2, r6
   15140:	add	r1, sp, #244	; 0xf4
   15144:	str	fp, [sp]
   15148:	str	r7, [sp, #56]	; 0x38
   1514c:	bl	14508 <__printf_chk@plt+0x1cdc>
   15150:	subs	r9, r0, #0
   15154:	blt	15584 <__printf_chk@plt+0x2d58>
   15158:	ldr	r1, [r4, #92]	; 0x5c
   1515c:	ldr	r0, [r4, #80]	; 0x50
   15160:	cmp	r1, #0
   15164:	bne	1505c <__printf_chk@plt+0x2830>
   15168:	mov	r5, r1
   1516c:	mov	sl, r1
   15170:	b	15088 <__printf_chk@plt+0x285c>
   15174:	ldr	r1, [r4, #76]	; 0x4c
   15178:	add	r6, sp, #500	; 0x1f4
   1517c:	mov	r3, #512	; 0x200
   15180:	add	r2, sp, #244	; 0xf4
   15184:	mov	r0, r6
   15188:	str	r2, [sp, #8]
   1518c:	str	r1, [sp, #4]
   15190:	movw	r2, #32168	; 0x7da8
   15194:	mov	r1, r3
   15198:	movt	r2, #3
   1519c:	str	r2, [sp]
   151a0:	mov	r2, #1
   151a4:	bl	12688 <__snprintf_chk@plt>
   151a8:	b	14cd4 <__printf_chk@plt+0x24a8>
   151ac:	mov	r0, r5
   151b0:	add	r7, sp, #1016	; 0x3f8
   151b4:	bl	2ed98 <crc32@@Base+0x14a3c>
   151b8:	movw	r1, #50548	; 0xc574
   151bc:	mov	r0, r5
   151c0:	movt	r1, #3
   151c4:	bl	2edb8 <crc32@@Base+0x14a5c>
   151c8:	ldrb	r0, [r4, #116]	; 0x74
   151cc:	bl	1afe0 <crc32@@Base+0xc84>
   151d0:	movw	r2, #31816	; 0x7c48
   151d4:	movw	r1, #31852	; 0x7c6c
   151d8:	movt	r2, #3
   151dc:	movt	r1, #3
   151e0:	add	r6, sp, #500	; 0x1f4
   151e4:	add	sl, r4, #80	; 0x50
   151e8:	mov	r3, r0
   151ec:	mov	r0, r5
   151f0:	bl	14784 <__printf_chk@plt+0x1f58>
   151f4:	movw	r3, #31864	; 0x7c78
   151f8:	movw	r2, #31872	; 0x7c80
   151fc:	movt	r3, #3
   15200:	movt	r2, #3
   15204:	movw	r1, #31892	; 0x7c94
   15208:	mov	r0, r5
   1520c:	movt	r1, #3
   15210:	bl	14784 <__printf_chk@plt+0x1f58>
   15214:	mov	r3, #16777216	; 0x1000000
   15218:	movw	r1, #31900	; 0x7c9c
   1521c:	str	r3, [r7, #-864]!	; 0xfffffca0
   15220:	movt	r1, #3
   15224:	mov	r2, r7
   15228:	mov	r3, #4
   1522c:	mov	r0, r5
   15230:	bl	2f070 <crc32@@Base+0x14d14>
   15234:	movw	r1, #31916	; 0x7cac
   15238:	mov	r0, r5
   1523c:	movt	r1, #3
   15240:	bl	2edb8 <crc32@@Base+0x14a5c>
   15244:	ldrb	r0, [r4, #116]	; 0x74
   15248:	bl	1b034 <crc32@@Base+0xcd8>
   1524c:	mov	r3, #100	; 0x64
   15250:	mov	r1, r3
   15254:	movw	r2, #31924	; 0x7cb4
   15258:	movt	r2, #3
   1525c:	str	r2, [sp, #36]	; 0x24
   15260:	str	r2, [sp]
   15264:	mov	r2, #1
   15268:	mov	r9, r0
   1526c:	str	r0, [sp, #4]
   15270:	mov	r0, r6
   15274:	bl	12688 <__snprintf_chk@plt>
   15278:	mov	r1, r6
   1527c:	mov	r0, r5
   15280:	bl	2edb8 <crc32@@Base+0x14a5c>
   15284:	ldr	r8, [r4, #64]	; 0x40
   15288:	str	sl, [sp, #32]
   1528c:	mov	r0, r8
   15290:	bl	1267c <strlen@plt>
   15294:	mov	r2, r8
   15298:	movw	r1, #31852	; 0x7c6c
   1529c:	movt	r1, #3
   152a0:	add	r3, r0, #1
   152a4:	mov	r0, r5
   152a8:	bl	2f070 <crc32@@Base+0x14d14>
   152ac:	mov	r0, r9
   152b0:	bl	1267c <strlen@plt>
   152b4:	mov	r2, r9
   152b8:	movw	r1, #44984	; 0xafb8
   152bc:	movt	r1, #3
   152c0:	add	r3, r0, #1
   152c4:	mov	r0, r5
   152c8:	bl	2f070 <crc32@@Base+0x14d14>
   152cc:	ldrb	r0, [r4, #40]	; 0x28
   152d0:	bl	1b184 <crc32@@Base+0xe28>
   152d4:	mov	r8, r0
   152d8:	ldrb	r0, [r4, #40]	; 0x28
   152dc:	bl	1b184 <crc32@@Base+0xe28>
   152e0:	bl	1267c <strlen@plt>
   152e4:	mov	r2, r8
   152e8:	movw	r1, #31932	; 0x7cbc
   152ec:	movt	r1, #3
   152f0:	add	r3, r0, #1
   152f4:	mov	r0, r5
   152f8:	bl	2f070 <crc32@@Base+0x14d14>
   152fc:	ldrb	r0, [r4, #36]	; 0x24
   15300:	bl	1b130 <crc32@@Base+0xdd4>
   15304:	mov	r8, r0
   15308:	ldrb	r0, [r4, #36]	; 0x24
   1530c:	bl	1b130 <crc32@@Base+0xdd4>
   15310:	bl	1267c <strlen@plt>
   15314:	mov	r2, r8
   15318:	movw	r1, #40504	; 0x9e38
   1531c:	movt	r1, #3
   15320:	add	r3, r0, #1
   15324:	mov	r0, r5
   15328:	bl	2f070 <crc32@@Base+0x14d14>
   1532c:	ldrb	r0, [r4, #48]	; 0x30
   15330:	bl	1b0dc <crc32@@Base+0xd80>
   15334:	mov	r8, r0
   15338:	ldrb	r0, [r4, #48]	; 0x30
   1533c:	bl	1b0dc <crc32@@Base+0xd80>
   15340:	bl	1267c <strlen@plt>
   15344:	mov	r2, r8
   15348:	movw	r1, #31940	; 0x7cc4
   1534c:	movt	r1, #3
   15350:	add	r3, r0, #1
   15354:	mov	r0, r5
   15358:	bl	2f070 <crc32@@Base+0x14d14>
   1535c:	ldr	r1, [r4, #56]	; 0x38
   15360:	mov	r2, r7
   15364:	ubfx	ip, r1, #8, #8
   15368:	ubfx	r3, r1, #16, #8
   1536c:	lsr	r0, r1, #24
   15370:	orr	r0, r0, r1, lsl #24
   15374:	movw	r1, #31952	; 0x7cd0
   15378:	orr	r0, r0, ip, lsl #16
   1537c:	movt	r1, #3
   15380:	orr	r0, r0, r3, lsl #8
   15384:	mov	r3, #4
   15388:	str	r0, [sp, #152]	; 0x98
   1538c:	mov	r0, r5
   15390:	bl	2f070 <crc32@@Base+0x14d14>
   15394:	ldr	r3, [r4, #60]	; 0x3c
   15398:	mov	r2, r7
   1539c:	movw	r1, #31960	; 0x7cd8
   153a0:	ubfx	lr, r3, #8, #8
   153a4:	ubfx	r0, r3, #16, #8
   153a8:	lsr	ip, r3, #24
   153ac:	movt	r1, #3
   153b0:	orr	ip, ip, r3, lsl #24
   153b4:	mov	r3, #4
   153b8:	orr	ip, ip, lr, lsl #16
   153bc:	orr	ip, ip, r0, lsl #8
   153c0:	mov	r0, r5
   153c4:	str	ip, [sp, #152]	; 0x98
   153c8:	bl	2f070 <crc32@@Base+0x14d14>
   153cc:	mov	r0, sl
   153d0:	ldr	r2, [r4, #72]	; 0x48
   153d4:	mov	r1, r5
   153d8:	bl	14a24 <__printf_chk@plt+0x21f8>
   153dc:	subs	r7, r0, #0
   153e0:	bne	14e88 <__printf_chk@plt+0x265c>
   153e4:	mov	r0, r5
   153e8:	bl	2ee44 <crc32@@Base+0x14ae8>
   153ec:	ldr	r8, [r4, #124]	; 0x7c
   153f0:	cmp	r8, #0
   153f4:	beq	15590 <__printf_chk@plt+0x2d64>
   153f8:	movw	r3, #31968	; 0x7ce0
   153fc:	movw	r2, #31972	; 0x7ce4
   15400:	movt	r3, #3
   15404:	movt	r2, #3
   15408:	str	r3, [sp, #40]	; 0x28
   1540c:	mov	fp, r7
   15410:	movw	r3, #31852	; 0x7c6c
   15414:	str	r2, [sp, #44]	; 0x2c
   15418:	movt	r3, #3
   1541c:	str	r7, [sp, #52]	; 0x34
   15420:	str	r3, [sp, #48]	; 0x30
   15424:	b	15434 <__printf_chk@plt+0x2c08>
   15428:	ldr	r8, [r8]
   1542c:	cmp	r8, #0
   15430:	beq	1558c <__printf_chk@plt+0x2d60>
   15434:	ldr	r3, [r8, #4]
   15438:	cmp	r3, #8
   1543c:	bne	15428 <__printf_chk@plt+0x2bfc>
   15440:	ldr	r2, [sp, #40]	; 0x28
   15444:	mov	r3, #100	; 0x64
   15448:	ldr	r0, [sp, #44]	; 0x2c
   1544c:	mov	r1, r3
   15450:	add	fp, fp, #1
   15454:	str	fp, [sp, #8]
   15458:	str	r2, [sp, #4]
   1545c:	mov	r2, #1
   15460:	str	r0, [sp]
   15464:	mov	r0, r6
   15468:	bl	12688 <__snprintf_chk@plt>
   1546c:	mov	r1, r6
   15470:	mov	r0, r5
   15474:	bl	2edb8 <crc32@@Base+0x14a5c>
   15478:	ldr	r1, [r8, #8]
   1547c:	mov	r0, r6
   15480:	bl	14ba8 <__printf_chk@plt+0x237c>
   15484:	mov	r0, r6
   15488:	bl	1267c <strlen@plt>
   1548c:	mov	r2, r6
   15490:	ldr	r1, [sp, #48]	; 0x30
   15494:	add	r3, r0, #1
   15498:	mov	r0, r5
   1549c:	bl	2f070 <crc32@@Base+0x14d14>
   154a0:	ldr	r2, [r8, #8]
   154a4:	mov	r1, r5
   154a8:	ldr	r0, [sp, #32]
   154ac:	bl	14a24 <__printf_chk@plt+0x21f8>
   154b0:	subs	sl, r0, #0
   154b4:	bne	15934 <__printf_chk@plt+0x3108>
   154b8:	mov	r0, r9
   154bc:	bl	1267c <strlen@plt>
   154c0:	mov	r2, r9
   154c4:	movw	r1, #44984	; 0xafb8
   154c8:	movt	r1, #3
   154cc:	add	r3, r0, #1
   154d0:	mov	r0, r5
   154d4:	bl	2f070 <crc32@@Base+0x14d14>
   154d8:	ldrb	r0, [r4, #40]	; 0x28
   154dc:	bl	1b184 <crc32@@Base+0xe28>
   154e0:	mov	r7, r0
   154e4:	ldrb	r0, [r4, #40]	; 0x28
   154e8:	bl	1b184 <crc32@@Base+0xe28>
   154ec:	bl	1267c <strlen@plt>
   154f0:	mov	r2, r7
   154f4:	movw	r1, #31932	; 0x7cbc
   154f8:	movt	r1, #3
   154fc:	add	r3, r0, #1
   15500:	mov	r0, r5
   15504:	bl	2f070 <crc32@@Base+0x14d14>
   15508:	mov	r0, sl
   1550c:	bl	1b0dc <crc32@@Base+0xd80>
   15510:	mov	r7, r0
   15514:	mov	r0, sl
   15518:	bl	1b0dc <crc32@@Base+0xd80>
   1551c:	bl	1267c <strlen@plt>
   15520:	mov	r2, r7
   15524:	movw	r1, #31940	; 0x7cc4
   15528:	movt	r1, #3
   1552c:	add	r3, r0, #1
   15530:	mov	r0, r5
   15534:	bl	2f070 <crc32@@Base+0x14d14>
   15538:	mov	r0, r5
   1553c:	bl	2ee44 <crc32@@Base+0x14ae8>
   15540:	b	15428 <__printf_chk@plt+0x2bfc>
   15544:	ldr	r1, [sp, #108]	; 0x6c
   15548:	mvn	r8, #4
   1554c:	ldr	r0, [sp, #60]	; 0x3c
   15550:	bl	126a0 <munmap@plt>
   15554:	mov	r0, r9
   15558:	bl	123b8 <close@plt>
   1555c:	movw	r1, #7868	; 0x1ebc
   15560:	movt	r1, #5
   15564:	ldr	r3, [r4, #80]	; 0x50
   15568:	movw	r2, #32280	; 0x7e18
   1556c:	ldr	r0, [r1]
   15570:	movt	r2, #3
   15574:	str	r8, [sp]
   15578:	mov	r1, #1
   1557c:	bl	12358 <__fprintf_chk@plt>
   15580:	b	14d74 <__printf_chk@plt+0x2548>
   15584:	mvn	r8, #4
   15588:	b	1555c <__printf_chk@plt+0x2d30>
   1558c:	ldr	r7, [sp, #52]	; 0x34
   15590:	ldr	r3, [r4, #120]	; 0x78
   15594:	cmp	r3, #0
   15598:	beq	1561c <__printf_chk@plt+0x2df0>
   1559c:	movw	r1, #31980	; 0x7cec
   155a0:	mov	r0, r5
   155a4:	movt	r1, #3
   155a8:	bl	2edb8 <crc32@@Base+0x14a5c>
   155ac:	mov	r3, #8
   155b0:	movw	r2, #31992	; 0x7cf8
   155b4:	movw	r1, #44984	; 0xafb8
   155b8:	movt	r2, #3
   155bc:	movt	r1, #3
   155c0:	mov	r0, r5
   155c4:	bl	2f070 <crc32@@Base+0x14d14>
   155c8:	ldrb	r0, [r4, #36]	; 0x24
   155cc:	bl	1b130 <crc32@@Base+0xdd4>
   155d0:	mov	r8, r0
   155d4:	ldrb	r0, [r4, #36]	; 0x24
   155d8:	bl	1b130 <crc32@@Base+0xdd4>
   155dc:	bl	1267c <strlen@plt>
   155e0:	mov	r2, r8
   155e4:	movw	r1, #40504	; 0x9e38
   155e8:	movt	r1, #3
   155ec:	add	r3, r0, #1
   155f0:	mov	r0, r5
   155f4:	bl	2f070 <crc32@@Base+0x14d14>
   155f8:	ldr	r0, [sp, #32]
   155fc:	ldr	r2, [r4, #120]	; 0x78
   15600:	mov	r1, r5
   15604:	bl	14a24 <__printf_chk@plt+0x21f8>
   15608:	cmp	r0, #0
   1560c:	movne	r7, r0
   15610:	bne	14e88 <__printf_chk@plt+0x265c>
   15614:	mov	r0, r5
   15618:	bl	2ee44 <crc32@@Base+0x14ae8>
   1561c:	mov	r0, r5
   15620:	bl	2ee44 <crc32@@Base+0x14ae8>
   15624:	movw	r1, #32000	; 0x7d00
   15628:	mov	r0, r5
   1562c:	movt	r1, #3
   15630:	bl	2edb8 <crc32@@Base+0x14a5c>
   15634:	movw	r2, #32016	; 0x7d10
   15638:	movw	r1, #32024	; 0x7d18
   1563c:	movt	r2, #3
   15640:	movt	r1, #3
   15644:	mov	r3, #7
   15648:	mov	r0, r5
   1564c:	bl	2f070 <crc32@@Base+0x14d14>
   15650:	ldr	r8, [r4, #124]	; 0x7c
   15654:	cmp	r8, #0
   15658:	beq	15854 <__printf_chk@plt+0x3028>
   1565c:	movw	sl, #32032	; 0x7d20
   15660:	movw	fp, #31852	; 0x7c6c
   15664:	movw	r3, #32040	; 0x7d28
   15668:	movt	sl, #3
   1566c:	movt	r3, #3
   15670:	movt	fp, #3
   15674:	str	r3, [sp, #32]
   15678:	b	15688 <__printf_chk@plt+0x2e5c>
   1567c:	ldr	r8, [r8]
   15680:	cmp	r8, #0
   15684:	beq	157c8 <__printf_chk@plt+0x2f9c>
   15688:	ldr	r0, [r8, #4]
   1568c:	cmp	r0, #8
   15690:	bne	1567c <__printf_chk@plt+0x2e50>
   15694:	bl	1b034 <crc32@@Base+0xcd8>
   15698:	mov	r3, #100	; 0x64
   1569c:	mov	r1, r3
   156a0:	mov	r2, #1
   156a4:	add	r7, r7, #1
   156a8:	str	sl, [sp]
   156ac:	str	r7, [sp, #4]
   156b0:	mov	r0, r6
   156b4:	bl	12688 <__snprintf_chk@plt>
   156b8:	mov	r1, r6
   156bc:	mov	r0, r5
   156c0:	bl	2edb8 <crc32@@Base+0x14a5c>
   156c4:	ldr	r1, [r8, #8]
   156c8:	mov	r0, r6
   156cc:	bl	14ba8 <__printf_chk@plt+0x237c>
   156d0:	mov	r0, r6
   156d4:	bl	1267c <strlen@plt>
   156d8:	mov	r2, r6
   156dc:	mov	r1, fp
   156e0:	add	r3, r0, #1
   156e4:	mov	r0, r5
   156e8:	bl	2f070 <crc32@@Base+0x14d14>
   156ec:	ldrb	r0, [r4, #116]	; 0x74
   156f0:	bl	1b034 <crc32@@Base+0xcd8>
   156f4:	ldr	r2, [sp, #36]	; 0x24
   156f8:	mov	r3, #100	; 0x64
   156fc:	mov	r1, r3
   15700:	str	r2, [sp]
   15704:	mov	r2, #1
   15708:	mov	r9, r0
   1570c:	str	r0, [sp, #4]
   15710:	mov	r0, r6
   15714:	bl	12688 <__snprintf_chk@plt>
   15718:	mov	r0, r6
   1571c:	bl	1267c <strlen@plt>
   15720:	mov	r1, r9
   15724:	mov	r2, r6
   15728:	add	r3, r0, #1
   1572c:	mov	r0, r5
   15730:	bl	2f070 <crc32@@Base+0x14d14>
   15734:	mov	r0, r6
   15738:	bl	1267c <strlen@plt>
   1573c:	mov	r2, r6
   15740:	ldr	r1, [sp, #32]
   15744:	add	r3, r0, #1
   15748:	mov	r0, r5
   1574c:	bl	2f070 <crc32@@Base+0x14d14>
   15750:	ldr	r3, [r4, #120]	; 0x78
   15754:	cmp	r3, #0
   15758:	beq	15778 <__printf_chk@plt+0x2f4c>
   1575c:	movw	r2, #31980	; 0x7cec
   15760:	movw	r1, #31992	; 0x7cf8
   15764:	movt	r2, #3
   15768:	movt	r1, #3
   1576c:	mov	r3, #10
   15770:	mov	r0, r5
   15774:	bl	2f070 <crc32@@Base+0x14d14>
   15778:	mov	r3, #100	; 0x64
   1577c:	mov	r2, #1
   15780:	mov	r1, r3
   15784:	str	r7, [sp, #4]
   15788:	movw	r0, #32052	; 0x7d34
   1578c:	movt	r0, #3
   15790:	str	r0, [sp]
   15794:	mov	r0, r6
   15798:	bl	12688 <__snprintf_chk@plt>
   1579c:	mov	r0, r6
   157a0:	bl	1267c <strlen@plt>
   157a4:	mov	r2, r6
   157a8:	movw	r1, #31968	; 0x7ce0
   157ac:	movt	r1, #3
   157b0:	add	r3, r0, #1
   157b4:	mov	r0, r5
   157b8:	bl	2f070 <crc32@@Base+0x14d14>
   157bc:	mov	r0, r5
   157c0:	bl	2ee44 <crc32@@Base+0x14ae8>
   157c4:	b	1567c <__printf_chk@plt+0x2e50>
   157c8:	cmp	r7, #0
   157cc:	beq	15854 <__printf_chk@plt+0x3028>
   157d0:	mov	r0, r5
   157d4:	bl	2ee44 <crc32@@Base+0x14ae8>
   157d8:	mov	r0, r5
   157dc:	bl	2ee44 <crc32@@Base+0x14ae8>
   157e0:	mov	r0, r5
   157e4:	bl	2f0d4 <crc32@@Base+0x14d78>
   157e8:	subs	r7, r0, #0
   157ec:	bne	14e88 <__printf_chk@plt+0x265c>
   157f0:	ldr	r3, [r5, #4]
   157f4:	ubfx	r1, r3, #8, #8
   157f8:	ubfx	r2, r3, #16, #8
   157fc:	lsr	r7, r3, #24
   15800:	orr	r7, r7, r3, lsl #24
   15804:	orr	r7, r7, r1, lsl #16
   15808:	orr	r7, r7, r2, lsl #8
   1580c:	b	14e88 <__printf_chk@plt+0x265c>
   15810:	movw	r2, #7868	; 0x1ebc
   15814:	movt	r2, #5
   15818:	ldr	r6, [r4, #80]	; 0x50
   1581c:	ldr	r4, [r2]
   15820:	bl	12748 <__errno_location@plt>
   15824:	ldr	r0, [r0]
   15828:	bl	122a4 <strerror@plt>
   1582c:	add	r2, sp, #244	; 0xf4
   15830:	mov	r3, r6
   15834:	str	r2, [sp]
   15838:	mov	r1, #1
   1583c:	movw	r2, #29880	; 0x74b8
   15840:	movt	r2, #3
   15844:	str	r0, [sp, #4]
   15848:	mov	r0, r4
   1584c:	bl	12358 <__fprintf_chk@plt>
   15850:	b	14d60 <__printf_chk@plt+0x2534>
   15854:	movw	r1, #32016	; 0x7d10
   15858:	mov	r0, r5
   1585c:	movt	r1, #3
   15860:	bl	2edb8 <crc32@@Base+0x14a5c>
   15864:	ldrb	r0, [r4, #116]	; 0x74
   15868:	bl	1b034 <crc32@@Base+0xcd8>
   1586c:	ldr	r2, [sp, #36]	; 0x24
   15870:	mov	r3, #100	; 0x64
   15874:	mov	r1, r3
   15878:	str	r2, [sp]
   1587c:	mov	r2, #1
   15880:	mov	r7, r0
   15884:	str	r0, [sp, #4]
   15888:	mov	r0, r6
   1588c:	bl	12688 <__snprintf_chk@plt>
   15890:	mov	r0, r6
   15894:	bl	1267c <strlen@plt>
   15898:	mov	r1, r7
   1589c:	mov	r2, r6
   158a0:	add	r3, r0, #1
   158a4:	mov	r0, r5
   158a8:	bl	2f070 <crc32@@Base+0x14d14>
   158ac:	ldr	r3, [r4, #120]	; 0x78
   158b0:	cmp	r3, #0
   158b4:	beq	158d4 <__printf_chk@plt+0x30a8>
   158b8:	movw	r2, #31980	; 0x7cec
   158bc:	movw	r1, #31992	; 0x7cf8
   158c0:	movt	r2, #3
   158c4:	movt	r1, #3
   158c8:	mov	r3, #10
   158cc:	mov	r0, r5
   158d0:	bl	2f070 <crc32@@Base+0x14d14>
   158d4:	mov	r0, r5
   158d8:	bl	2ee44 <crc32@@Base+0x14ae8>
   158dc:	b	157d0 <__printf_chk@plt+0x2fa4>
   158e0:	bl	12748 <__errno_location@plt>
   158e4:	movw	r7, #7868	; 0x1ebc
   158e8:	movt	r7, #5
   158ec:	ldr	r9, [r4, #80]	; 0x50
   158f0:	ldr	r8, [r7]
   158f4:	ldr	r0, [r0]
   158f8:	bl	122a4 <strerror@plt>
   158fc:	add	r2, sp, #244	; 0xf4
   15900:	mov	r3, r9
   15904:	str	r2, [sp]
   15908:	mov	r1, #1
   1590c:	movw	r2, #32092	; 0x7d5c
   15910:	movt	r2, #3
   15914:	str	r0, [sp, #4]
   15918:	mov	r0, r8
   1591c:	bl	12358 <__fprintf_chk@plt>
   15920:	mov	r0, r6
   15924:	bl	123b8 <close@plt>
   15928:	mov	r0, r5
   1592c:	bl	121c0 <free@plt>
   15930:	b	14e44 <__printf_chk@plt+0x2618>
   15934:	mov	r7, sl
   15938:	b	14e88 <__printf_chk@plt+0x265c>
   1593c:	movw	r7, #7868	; 0x1ebc
   15940:	movt	r7, #5
   15944:	movw	r2, #32060	; 0x7d3c
   15948:	ldr	r3, [r4, #80]	; 0x50
   1594c:	ldr	r0, [r7]
   15950:	movt	r2, #3
   15954:	mov	r1, #1
   15958:	bl	12358 <__fprintf_chk@plt>
   1595c:	b	15928 <__printf_chk@plt+0x30fc>
   15960:	bl	12748 <__errno_location@plt>
   15964:	movw	r7, #7868	; 0x1ebc
   15968:	movt	r7, #5
   1596c:	ldr	r8, [r4, #80]	; 0x50
   15970:	ldr	r6, [r7]
   15974:	ldr	r0, [r0]
   15978:	bl	122a4 <strerror@plt>
   1597c:	add	r2, sp, #244	; 0xf4
   15980:	mov	r3, r8
   15984:	str	r2, [sp]
   15988:	mov	r1, #1
   1598c:	movw	r2, #29880	; 0x74b8
   15990:	movt	r2, #3
   15994:	str	r0, [sp, #4]
   15998:	mov	r0, r6
   1599c:	bl	12358 <__fprintf_chk@plt>
   159a0:	b	15928 <__printf_chk@plt+0x30fc>
   159a4:	movw	r7, #7868	; 0x1ebc
   159a8:	movt	r7, #5
   159ac:	ldr	r3, [r4, #80]	; 0x50
   159b0:	movw	r2, #31784	; 0x7c28
   159b4:	ldr	r0, [r7]
   159b8:	movt	r2, #3
   159bc:	str	r6, [sp]
   159c0:	mov	r1, #1
   159c4:	bl	12358 <__fprintf_chk@plt>
   159c8:	b	14e44 <__printf_chk@plt+0x2618>
   159cc:	movw	r2, #7868	; 0x1ebc
   159d0:	movt	r2, #5
   159d4:	ldr	r5, [r4, #80]	; 0x50
   159d8:	ldr	r4, [r2]
   159dc:	bl	12748 <__errno_location@plt>
   159e0:	ldr	r0, [r0]
   159e4:	bl	122a4 <strerror@plt>
   159e8:	mov	r3, r5
   159ec:	str	r6, [sp]
   159f0:	movw	r2, #32184	; 0x7db8
   159f4:	mov	r1, #1
   159f8:	movt	r2, #3
   159fc:	str	r0, [sp, #4]
   15a00:	mov	r0, r4
   15a04:	bl	12358 <__fprintf_chk@plt>
   15a08:	b	14d74 <__printf_chk@plt+0x2548>
   15a0c:	bl	12538 <__stack_chk_fail@plt>
   15a10:	cmp	r8, #0
   15a14:	bne	1555c <__printf_chk@plt+0x2d30>
   15a18:	ldrb	r3, [r4, #132]	; 0x84
   15a1c:	cmp	r3, #0
   15a20:	beq	15b64 <__printf_chk@plt+0x3338>
   15a24:	ldr	r0, [r4, #80]	; 0x50
   15a28:	add	r3, sp, #56	; 0x38
   15a2c:	add	ip, sp, #152	; 0x98
   15a30:	str	r8, [sp, #8]
   15a34:	mov	r2, r8
   15a38:	str	r8, [sp, #4]
   15a3c:	add	r1, sp, #244	; 0xf4
   15a40:	str	ip, [sp]
   15a44:	bl	14508 <__printf_chk@plt+0x1cdc>
   15a48:	subs	r3, r0, #0
   15a4c:	str	r3, [sp, #32]
   15a50:	blt	14d74 <__printf_chk@plt+0x2548>
   15a54:	ldr	r5, [sp, #56]	; 0x38
   15a58:	ldr	r2, [r5, #4]
   15a5c:	ubfx	r1, r2, #8, #8
   15a60:	ubfx	r0, r2, #16, #8
   15a64:	lsr	r3, r2, #24
   15a68:	orr	r3, r3, r2, lsl #24
   15a6c:	orr	r3, r3, r1, lsl #16
   15a70:	orr	r0, r3, r0, lsl #8
   15a74:	bl	12664 <malloc@plt>
   15a78:	subs	r9, r0, #0
   15a7c:	mov	r0, r5
   15a80:	beq	15d1c <__printf_chk@plt+0x34f0>
   15a84:	movw	r1, #31600	; 0x7b70
   15a88:	movt	r1, #3
   15a8c:	bl	31e60 <crc32@@Base+0x17b04>
   15a90:	subs	r1, r0, #0
   15a94:	bge	15bd8 <__printf_chk@plt+0x33ac>
   15a98:	ldr	r1, [sp, #196]	; 0xc4
   15a9c:	ldr	r0, [sp, #56]	; 0x38
   15aa0:	bl	126a0 <munmap@plt>
   15aa4:	mov	r0, r9
   15aa8:	bl	121c0 <free@plt>
   15aac:	ldr	r0, [sp, #32]
   15ab0:	bl	123b8 <close@plt>
   15ab4:	b	14d74 <__printf_chk@plt+0x2548>
   15ab8:	mov	r6, r8
   15abc:	ldr	r0, [sp, #56]	; 0x38
   15ac0:	bl	3020c <crc32@@Base+0x15eb0>
   15ac4:	ldr	r0, [sp, #56]	; 0x38
   15ac8:	ldr	r1, [sp, #196]	; 0xc4
   15acc:	ldr	r3, [r0, #4]
   15ad0:	ubfx	ip, r3, #8, #8
   15ad4:	ubfx	r2, r3, #16, #8
   15ad8:	lsr	r5, r3, #24
   15adc:	orr	r5, r5, r3, lsl #24
   15ae0:	orr	r5, r5, ip, lsl #16
   15ae4:	orr	r5, r5, r2, lsl #8
   15ae8:	bl	126a0 <munmap@plt>
   15aec:	add	r5, r5, #3
   15af0:	ldr	r0, [sp, #32]
   15af4:	bic	r5, r5, #3
   15af8:	mov	r1, r5
   15afc:	bl	12124 <ftruncate@plt>
   15b00:	cmp	r0, #0
   15b04:	bne	15aa4 <__printf_chk@plt+0x3278>
   15b08:	ldr	r3, [r4, #136]	; 0x88
   15b0c:	cmp	r3, #0
   15b10:	beq	15b20 <__printf_chk@plt+0x32f4>
   15b14:	cmp	r3, r5
   15b18:	bcc	15aa4 <__printf_chk@plt+0x3278>
   15b1c:	mov	r5, r3
   15b20:	mov	r1, r5
   15b24:	ldr	r5, [sp, #32]
   15b28:	mov	r2, #0
   15b2c:	mov	r0, r5
   15b30:	bl	12598 <lseek@plt>
   15b34:	cmp	r0, #0
   15b38:	blt	15aa4 <__printf_chk@plt+0x3278>
   15b3c:	mov	r2, r6
   15b40:	mov	r1, r9
   15b44:	mov	r0, r5
   15b48:	bl	126c4 <write@plt>
   15b4c:	cmp	r6, r0
   15b50:	bne	15aa4 <__printf_chk@plt+0x3278>
   15b54:	mov	r0, r9
   15b58:	bl	121c0 <free@plt>
   15b5c:	ldr	r0, [sp, #32]
   15b60:	bl	123b8 <close@plt>
   15b64:	ldr	r1, [r4, #76]	; 0x4c
   15b68:	add	r0, sp, #244	; 0xf4
   15b6c:	bl	12808 <rename@plt>
   15b70:	cmn	r0, #1
   15b74:	bne	14d80 <__printf_chk@plt+0x2554>
   15b78:	movw	r2, #7868	; 0x1ebc
   15b7c:	movt	r2, #5
   15b80:	ldr	r6, [r4, #80]	; 0x50
   15b84:	mov	r8, #1
   15b88:	ldr	r5, [r2]
   15b8c:	bl	12748 <__errno_location@plt>
   15b90:	ldr	r7, [r4, #76]	; 0x4c
   15b94:	ldr	r0, [r0]
   15b98:	bl	122a4 <strerror@plt>
   15b9c:	mov	r3, r6
   15ba0:	add	r2, sp, #244	; 0xf4
   15ba4:	mov	r1, r8
   15ba8:	str	r2, [sp]
   15bac:	movw	r2, #32336	; 0x7e50
   15bb0:	str	r7, [sp, #4]
   15bb4:	movt	r2, #3
   15bb8:	str	r0, [sp, #8]
   15bbc:	mov	r0, r5
   15bc0:	bl	12358 <__fprintf_chk@plt>
   15bc4:	add	r0, sp, #244	; 0xf4
   15bc8:	bl	12448 <unlink@plt>
   15bcc:	ldr	r0, [r4, #76]	; 0x4c
   15bd0:	bl	12448 <unlink@plt>
   15bd4:	b	14d80 <__printf_chk@plt+0x2554>
   15bd8:	ldr	r0, [sp, #56]	; 0x38
   15bdc:	bl	2e678 <crc32@@Base+0x1431c>
   15be0:	subs	r5, r0, #0
   15be4:	blt	15ab8 <__printf_chk@plt+0x328c>
   15be8:	movw	r7, #45044	; 0xaff4
   15bec:	movw	sl, #32268	; 0x7e0c
   15bf0:	movw	r3, #32256	; 0x7e00
   15bf4:	movt	r7, #3
   15bf8:	movt	r3, #3
   15bfc:	movt	sl, #3
   15c00:	str	r3, [sp, #36]	; 0x24
   15c04:	mov	r6, r8
   15c08:	b	15c94 <__printf_chk@plt+0x3468>
   15c0c:	add	ip, r6, r3
   15c10:	movw	r2, #32320	; 0x7e40
   15c14:	mov	r3, #4
   15c18:	movt	r2, #3
   15c1c:	str	r3, [sp]
   15c20:	mov	r1, r5
   15c24:	mov	r3, fp
   15c28:	rev	ip, ip
   15c2c:	str	ip, [sp, #64]	; 0x40
   15c30:	bl	2fbb8 <crc32@@Base+0x1585c>
   15c34:	ldr	r3, [sp, #60]	; 0x3c
   15c38:	mov	r1, #4
   15c3c:	str	r1, [sp]
   15c40:	ubfx	r2, r3, #8, #8
   15c44:	ubfx	r1, r3, #16, #8
   15c48:	lsr	ip, r3, #24
   15c4c:	ldr	r0, [sp, #56]	; 0x38
   15c50:	orr	ip, ip, r3, lsl #24
   15c54:	mov	r3, fp
   15c58:	orr	ip, ip, r2, lsl #16
   15c5c:	mov	r2, sl
   15c60:	orr	ip, ip, r1, lsl #8
   15c64:	mov	r1, r5
   15c68:	str	ip, [sp, #64]	; 0x40
   15c6c:	bl	2fbb8 <crc32@@Base+0x1585c>
   15c70:	ldr	r3, [sp, #60]	; 0x3c
   15c74:	add	r3, r3, #3
   15c78:	bic	r3, r3, #3
   15c7c:	add	r6, r6, r3
   15c80:	mov	r1, r5
   15c84:	ldr	r0, [sp, #56]	; 0x38
   15c88:	bl	2e6d8 <crc32@@Base+0x1437c>
   15c8c:	subs	r5, r0, #0
   15c90:	blt	15abc <__printf_chk@plt+0x3290>
   15c94:	mov	r1, r5
   15c98:	add	r3, sp, #60	; 0x3c
   15c9c:	mov	r2, r7
   15ca0:	ldr	r0, [sp, #56]	; 0x38
   15ca4:	bl	31b04 <crc32@@Base+0x177a8>
   15ca8:	subs	r1, r0, #0
   15cac:	beq	15c80 <__printf_chk@plt+0x3454>
   15cb0:	ldr	r2, [sp, #60]	; 0x3c
   15cb4:	add	r0, r9, r6
   15cb8:	bl	12658 <memcpy@plt>
   15cbc:	mov	r2, r7
   15cc0:	mov	r1, r5
   15cc4:	ldr	r0, [sp, #56]	; 0x38
   15cc8:	bl	2fd48 <crc32@@Base+0x159ec>
   15ccc:	cmp	r0, #0
   15cd0:	bne	15a98 <__printf_chk@plt+0x326c>
   15cd4:	ldr	r3, [r4, #136]	; 0x88
   15cd8:	ldr	r0, [sp, #56]	; 0x38
   15cdc:	cmp	r3, #0
   15ce0:	bne	15c0c <__printf_chk@plt+0x33e0>
   15ce4:	ubfx	r2, r6, #8, #8
   15ce8:	lsr	r3, r6, #24
   15cec:	orr	r3, r3, r6, lsl #24
   15cf0:	ubfx	r1, r6, #16, #8
   15cf4:	orr	ip, r3, r2, lsl #16
   15cf8:	mov	r3, #4
   15cfc:	orr	ip, ip, r1, lsl #8
   15d00:	str	r3, [sp]
   15d04:	ldr	r2, [sp, #36]	; 0x24
   15d08:	mov	r3, fp
   15d0c:	mov	r1, r5
   15d10:	str	ip, [sp, #64]	; 0x40
   15d14:	bl	2fbb8 <crc32@@Base+0x1585c>
   15d18:	b	15c34 <__printf_chk@plt+0x3408>
   15d1c:	ldr	r1, [sp, #196]	; 0xc4
   15d20:	bl	126a0 <munmap@plt>
   15d24:	b	15aac <__printf_chk@plt+0x3280>
   15d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d2c:	sub	sp, sp, #36	; 0x24
   15d30:	movw	r7, #3824	; 0xef0
   15d34:	movt	r7, #5
   15d38:	ldr	r5, [sp, #72]	; 0x48
   15d3c:	mov	r6, r2
   15d40:	ldr	ip, [r7]
   15d44:	mov	r4, r0
   15d48:	mov	sl, r1
   15d4c:	mov	r0, r2
   15d50:	mov	r1, r5
   15d54:	mov	r2, #0
   15d58:	str	r3, [sp, #20]
   15d5c:	str	ip, [sp, #28]
   15d60:	ldr	r9, [sp, #76]	; 0x4c
   15d64:	ldr	fp, [sp, #80]	; 0x50
   15d68:	bl	31804 <crc32@@Base+0x174a8>
   15d6c:	mov	r1, r5
   15d70:	add	r2, sp, #24
   15d74:	str	r0, [sp, #16]
   15d78:	mov	r0, r6
   15d7c:	bl	1800c <__printf_chk@plt+0x57e0>
   15d80:	subs	r8, r0, #0
   15d84:	bne	15e48 <__printf_chk@plt+0x361c>
   15d88:	mov	r3, r8
   15d8c:	mov	r1, r5
   15d90:	movw	r2, #32468	; 0x7ed4
   15d94:	mov	r0, r6
   15d98:	movt	r2, #3
   15d9c:	bl	31b04 <crc32@@Base+0x177a8>
   15da0:	mov	r2, #44	; 0x2c
   15da4:	mov	r1, r8
   15da8:	str	r0, [sp, #12]
   15dac:	add	r0, r4, #4
   15db0:	bl	12388 <memset@plt>
   15db4:	mov	r3, r8
   15db8:	mov	r1, r5
   15dbc:	str	sl, [r4]
   15dc0:	movw	r2, #32476	; 0x7edc
   15dc4:	mov	r0, r6
   15dc8:	movt	r2, #3
   15dcc:	bl	31b04 <crc32@@Base+0x177a8>
   15dd0:	str	r6, [r4, #8]
   15dd4:	str	r5, [r4, #12]
   15dd8:	str	r0, [r4, #4]
   15ddc:	ldr	r0, [sp, #24]
   15de0:	bl	123ac <__strdup@plt>
   15de4:	str	r0, [r4, #16]
   15de8:	ldr	r0, [sp, #24]
   15dec:	bl	19468 <__printf_chk@plt+0x6c3c>
   15df0:	str	r0, [r4, #20]
   15df4:	ldr	r0, [sp, #24]
   15df8:	bl	194d4 <__printf_chk@plt+0x6ca8>
   15dfc:	str	r0, [r4, #28]
   15e00:	ldr	r0, [sp, #12]
   15e04:	bl	196a0 <__printf_chk@plt+0x6e74>
   15e08:	ldr	r3, [r4, #20]
   15e0c:	str	r9, [r4, #40]	; 0x28
   15e10:	cmp	r3, #0
   15e14:	str	fp, [r4, #44]	; 0x2c
   15e18:	str	r0, [r4, #24]
   15e1c:	beq	15e64 <__printf_chk@plt+0x3638>
   15e20:	ldr	r3, [r4, #28]
   15e24:	cmp	r3, #0
   15e28:	beq	15e64 <__printf_chk@plt+0x3638>
   15e2c:	ldr	r2, [sp, #28]
   15e30:	mov	r0, r8
   15e34:	ldr	r3, [r7]
   15e38:	cmp	r2, r3
   15e3c:	bne	15e8c <__printf_chk@plt+0x3660>
   15e40:	add	sp, sp, #36	; 0x24
   15e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e48:	ldrd	r2, [sp, #16]
   15e4c:	movw	r1, #32400	; 0x7e90
   15e50:	mov	r0, #1
   15e54:	movt	r1, #3
   15e58:	mvn	r8, #0
   15e5c:	bl	1282c <__printf_chk@plt>
   15e60:	b	15e2c <__printf_chk@plt+0x3600>
   15e64:	ldr	r1, [sp, #20]
   15e68:	mov	r0, #1
   15e6c:	ldr	r2, [sp, #24]
   15e70:	mvn	r8, #0
   15e74:	ldr	r3, [sp, #16]
   15e78:	str	r1, [sp]
   15e7c:	movw	r1, #32492	; 0x7eec
   15e80:	movt	r1, #3
   15e84:	bl	1282c <__printf_chk@plt>
   15e88:	b	15e2c <__printf_chk@plt+0x3600>
   15e8c:	bl	12538 <__stack_chk_fail@plt>
   15e90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e94:	movw	r4, #3824	; 0xef0
   15e98:	movt	r4, #5
   15e9c:	sub	sp, sp, #28
   15ea0:	mov	r5, r0
   15ea4:	mov	r7, r1
   15ea8:	ldr	ip, [r4]
   15eac:	str	r3, [sp]
   15eb0:	mov	r3, r2
   15eb4:	movw	r2, #32576	; 0x7f40
   15eb8:	movt	r2, #3
   15ebc:	str	ip, [sp, #20]
   15ec0:	ldr	r6, [r0, #32]
   15ec4:	ldrd	r8, [sp, #64]	; 0x40
   15ec8:	ldr	sl, [sp, #76]	; 0x4c
   15ecc:	bl	2fbb8 <crc32@@Base+0x1585c>
   15ed0:	cmp	r0, #0
   15ed4:	beq	15ef0 <__printf_chk@plt+0x36c4>
   15ed8:	ldr	r2, [sp, #20]
   15edc:	ldr	r3, [r4]
   15ee0:	cmp	r2, r3
   15ee4:	bne	16030 <__printf_chk@plt+0x3804>
   15ee8:	add	sp, sp, #28
   15eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ef0:	mov	fp, #8
   15ef4:	movw	r3, #32584	; 0x7f48
   15ef8:	str	fp, [sp]
   15efc:	movt	r3, #3
   15f00:	movw	r2, #32592	; 0x7f50
   15f04:	mov	r1, r7
   15f08:	movt	r2, #3
   15f0c:	mov	r0, r5
   15f10:	bl	2fbb8 <crc32@@Base+0x1585c>
   15f14:	cmp	r0, #0
   15f18:	bne	15ed8 <__printf_chk@plt+0x36ac>
   15f1c:	str	fp, [sp]
   15f20:	movw	r3, #31864	; 0x7c78
   15f24:	movw	r2, #32604	; 0x7f5c
   15f28:	movt	r3, #3
   15f2c:	movt	r2, #3
   15f30:	mov	r1, r7
   15f34:	mov	r0, r5
   15f38:	bl	2fbb8 <crc32@@Base+0x1585c>
   15f3c:	cmp	r8, #0
   15f40:	clz	r3, r0
   15f44:	lsr	r3, r3, #5
   15f48:	moveq	r3, #0
   15f4c:	cmp	r3, #0
   15f50:	beq	15f7c <__printf_chk@plt+0x3750>
   15f54:	mov	r0, r8
   15f58:	bl	1267c <strlen@plt>
   15f5c:	movw	r2, #32620	; 0x7f6c
   15f60:	mov	r3, r8
   15f64:	mov	r1, r7
   15f68:	movt	r2, #3
   15f6c:	add	r0, r0, #1
   15f70:	str	r0, [sp]
   15f74:	mov	r0, r5
   15f78:	bl	2fbb8 <crc32@@Base+0x1585c>
   15f7c:	cmp	r0, #0
   15f80:	bne	15ed8 <__printf_chk@plt+0x36ac>
   15f84:	bl	12730 <time@plt>
   15f88:	mov	r1, r0
   15f8c:	mov	r0, sl
   15f90:	bl	1b650 <crc32@@Base+0x12f4>
   15f94:	mov	r1, r7
   15f98:	mov	r2, r0
   15f9c:	mov	r0, r5
   15fa0:	bl	180f0 <__printf_chk@plt+0x58c4>
   15fa4:	cmp	r9, #0
   15fa8:	clz	r3, r0
   15fac:	lsr	r3, r3, #5
   15fb0:	moveq	r3, #0
   15fb4:	cmp	r3, #0
   15fb8:	beq	15ed8 <__printf_chk@plt+0x36ac>
   15fbc:	ldr	r3, [sp, #72]	; 0x48
   15fc0:	ubfx	r2, r6, #8, #8
   15fc4:	lsr	ip, r6, #24
   15fc8:	mov	r1, r7
   15fcc:	orr	ip, ip, r6, lsl #24
   15fd0:	ubfx	r6, r6, #16, #8
   15fd4:	orr	ip, ip, r2, lsl #16
   15fd8:	str	r3, [sp]
   15fdc:	movw	r2, #32628	; 0x7f74
   15fe0:	mov	r3, r9
   15fe4:	movt	r2, #3
   15fe8:	mov	r0, r5
   15fec:	orr	r6, ip, r6, lsl #8
   15ff0:	bl	2fbb8 <crc32@@Base+0x1585c>
   15ff4:	rev	r6, r6
   15ff8:	mov	r3, #0
   15ffc:	str	r6, [sp, #16]
   16000:	str	r3, [sp, #12]
   16004:	cmp	r0, #0
   16008:	bne	15ed8 <__printf_chk@plt+0x36ac>
   1600c:	mov	r3, #8
   16010:	mov	r1, r7
   16014:	str	r3, [sp]
   16018:	mov	r0, r5
   1601c:	movw	r2, #32644	; 0x7f84
   16020:	add	r3, sp, #12
   16024:	movt	r2, #3
   16028:	bl	2fbb8 <crc32@@Base+0x1585c>
   1602c:	b	15ed8 <__printf_chk@plt+0x36ac>
   16030:	bl	12538 <__stack_chk_fail@plt>
   16034:	push	{r4, r5, r6, lr}
   16038:	mov	r4, r0
   1603c:	mov	r0, r1
   16040:	bl	123ac <__strdup@plt>
   16044:	ldr	r1, [r4]
   16048:	add	r1, r1, #1
   1604c:	lsl	r1, r1, #2
   16050:	mov	r5, r0
   16054:	ldr	r0, [r4, #4]
   16058:	bl	12478 <realloc@plt>
   1605c:	ldr	r2, [r4]
   16060:	add	r1, r2, #1
   16064:	str	r1, [r4]
   16068:	mov	r3, r0
   1606c:	mov	r0, #0
   16070:	str	r3, [r4, #4]
   16074:	str	r5, [r3, r2, lsl #2]
   16078:	pop	{r4, r5, r6, pc}
   1607c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16080:	sub	sp, sp, #1296	; 0x510
   16084:	sub	sp, sp, #12
   16088:	movw	fp, #3824	; 0xef0
   1608c:	movt	fp, #5
   16090:	mov	r4, r2
   16094:	str	r3, [sp, #56]	; 0x38
   16098:	movw	r3, #45044	; 0xaff4
   1609c:	movt	r3, #3
   160a0:	str	r3, [sp, #96]	; 0x60
   160a4:	ldr	r3, [sp, #1344]	; 0x540
   160a8:	mov	r2, #0
   160ac:	ldr	ip, [fp]
   160b0:	mov	r5, r0
   160b4:	mov	r6, r1
   160b8:	str	r1, [sp, #28]
   160bc:	str	r3, [sp, #60]	; 0x3c
   160c0:	movw	sl, #32660	; 0x7f94
   160c4:	ldr	r3, [sp, #1348]	; 0x544
   160c8:	movt	sl, #3
   160cc:	str	ip, [sp, #1300]	; 0x514
   160d0:	movw	r9, #32676	; 0x7fa4
   160d4:	movt	r9, #3
   160d8:	str	r3, [sp, #64]	; 0x40
   160dc:	ldr	r3, [sp, #1352]	; 0x548
   160e0:	str	r3, [sp, #68]	; 0x44
   160e4:	bl	31804 <crc32@@Base+0x174a8>
   160e8:	mov	r1, r4
   160ec:	mov	r2, #0
   160f0:	str	r0, [sp, #72]	; 0x48
   160f4:	mov	r0, r5
   160f8:	bl	31804 <crc32@@Base+0x174a8>
   160fc:	mov	r1, r6
   16100:	mov	r2, #0
   16104:	str	r0, [sp, #76]	; 0x4c
   16108:	mov	r0, r5
   1610c:	bl	31804 <crc32@@Base+0x174a8>
   16110:	mov	r1, r4
   16114:	mov	r2, #0
   16118:	mov	r6, r0
   1611c:	str	r0, [sp, #24]
   16120:	mov	r0, r5
   16124:	bl	31804 <crc32@@Base+0x174a8>
   16128:	mov	r3, #200	; 0xc8
   1612c:	mov	r1, r3
   16130:	mov	r2, #0
   16134:	str	r6, [sp, #8]
   16138:	str	r2, [sp, #88]	; 0x58
   1613c:	str	r2, [sp, #92]	; 0x5c
   16140:	mov	r2, #1
   16144:	str	sl, [sp, #4]
   16148:	str	r9, [sp]
   1614c:	str	r0, [sp, #32]
   16150:	add	r0, sp, #900	; 0x384
   16154:	bl	12688 <__snprintf_chk@plt>
   16158:	add	r0, sp, #88	; 0x58
   1615c:	movw	r1, #56912	; 0xde50
   16160:	movt	r1, #3
   16164:	bl	16034 <__printf_chk@plt+0x3808>
   16168:	cmp	r0, #0
   1616c:	bne	16368 <__printf_chk@plt+0x3b3c>
   16170:	add	r1, sp, #900	; 0x384
   16174:	add	r0, sp, #88	; 0x58
   16178:	bl	16034 <__printf_chk@plt+0x3808>
   1617c:	subs	r3, r0, #0
   16180:	str	r3, [sp, #36]	; 0x24
   16184:	bne	16368 <__printf_chk@plt+0x3b3c>
   16188:	mov	r1, r4
   1618c:	movw	r2, #32684	; 0x7fac
   16190:	add	r3, sp, #84	; 0x54
   16194:	movt	r2, #3
   16198:	mov	r0, r5
   1619c:	bl	31b04 <crc32@@Base+0x177a8>
   161a0:	subs	r7, r0, #0
   161a4:	bne	163dc <__printf_chk@plt+0x3bb0>
   161a8:	ldr	r2, [pc, #1132]	; 1661c <__printf_chk@plt+0x3df0>
   161ac:	mov	r3, #11
   161b0:	str	r3, [sp, #84]	; 0x54
   161b4:	mov	r3, #1
   161b8:	sub	r7, r2, #11
   161bc:	str	r3, [sp, #48]	; 0x30
   161c0:	str	r2, [sp, #40]	; 0x28
   161c4:	movw	r6, #32876	; 0x806c
   161c8:	movt	r6, #3
   161cc:	movw	r3, #32696	; 0x7fb8
   161d0:	movt	r3, #3
   161d4:	str	r3, [sp, #44]	; 0x2c
   161d8:	mov	r3, #0
   161dc:	str	r3, [sp, #52]	; 0x34
   161e0:	mov	r2, r7
   161e4:	ldr	r1, [sp, #28]
   161e8:	mov	r0, r5
   161ec:	bl	18cf0 <__printf_chk@plt+0x64c4>
   161f0:	subs	r4, r0, #0
   161f4:	bge	1626c <__printf_chk@plt+0x3a40>
   161f8:	ldr	r3, [sp, #32]
   161fc:	mov	r2, r7
   16200:	ldr	r1, [sp, #44]	; 0x2c
   16204:	mov	r0, #1
   16208:	str	r3, [sp]
   1620c:	ldr	r3, [sp, #24]
   16210:	bl	1282c <__printf_chk@plt>
   16214:	ldr	r3, [sp, #48]	; 0x30
   16218:	cmp	r3, #0
   1621c:	beq	16578 <__printf_chk@plt+0x3d4c>
   16220:	mov	r0, r7
   16224:	bl	1267c <strlen@plt>
   16228:	ldr	r3, [sp, #40]	; 0x28
   1622c:	add	r0, r0, #1
   16230:	add	r7, r7, r0
   16234:	cmp	r7, r3
   16238:	bcc	161e0 <__printf_chk@plt+0x39b4>
   1623c:	ldr	r3, [sp, #52]	; 0x34
   16240:	cmp	r3, #0
   16244:	bne	16404 <__printf_chk@plt+0x3bd8>
   16248:	ldr	r3, [sp, #32]
   1624c:	movw	r1, #32884	; 0x8074
   16250:	ldr	r2, [sp, #24]
   16254:	movt	r1, #3
   16258:	mov	r0, #1
   1625c:	mvn	ip, #41	; 0x29
   16260:	str	ip, [sp, #36]	; 0x24
   16264:	bl	1282c <__printf_chk@plt>
   16268:	b	16388 <__printf_chk@plt+0x3b5c>
   1626c:	add	r2, sp, #1088	; 0x440
   16270:	mov	r3, #200	; 0xc8
   16274:	add	r2, r2, #12
   16278:	mov	r1, r4
   1627c:	mov	r0, r5
   16280:	bl	31eb0 <crc32@@Base+0x17b54>
   16284:	cmp	r0, #0
   16288:	blt	163a8 <__printf_chk@plt+0x3b7c>
   1628c:	add	r1, sp, #1088	; 0x440
   16290:	add	r0, sp, #88	; 0x58
   16294:	add	r1, r1, #12
   16298:	bl	16034 <__printf_chk@plt+0x3808>
   1629c:	subs	r8, r0, #0
   162a0:	bne	16368 <__printf_chk@plt+0x3b3c>
   162a4:	ldr	r2, [sp, #24]
   162a8:	mov	r3, #200	; 0xc8
   162ac:	mov	r1, r3
   162b0:	str	sl, [sp, #4]
   162b4:	str	r9, [sp]
   162b8:	add	r0, sp, #900	; 0x384
   162bc:	str	r2, [sp, #8]
   162c0:	mov	r2, #1
   162c4:	bl	12688 <__snprintf_chk@plt>
   162c8:	mov	r1, r4
   162cc:	mov	r0, r5
   162d0:	bl	2e678 <crc32@@Base+0x1431c>
   162d4:	subs	r4, r0, #0
   162d8:	blt	16550 <__printf_chk@plt+0x3d24>
   162dc:	mov	r2, #0
   162e0:	mov	r1, r4
   162e4:	mov	r0, r5
   162e8:	bl	31804 <crc32@@Base+0x174a8>
   162ec:	mov	r2, #4
   162f0:	mov	r1, r6
   162f4:	bl	12220 <strncmp@plt>
   162f8:	cmp	r0, #0
   162fc:	bne	1633c <__printf_chk@plt+0x3b10>
   16300:	add	r2, sp, #1088	; 0x440
   16304:	mov	r3, #200	; 0xc8
   16308:	add	r2, r2, #12
   1630c:	mov	r1, r4
   16310:	mov	r0, r5
   16314:	bl	31eb0 <crc32@@Base+0x17b54>
   16318:	cmp	r0, #0
   1631c:	blt	163a8 <__printf_chk@plt+0x3b7c>
   16320:	add	r1, sp, #1088	; 0x440
   16324:	add	r0, sp, #88	; 0x58
   16328:	add	r1, r1, #12
   1632c:	bl	16034 <__printf_chk@plt+0x3808>
   16330:	cmp	r0, #0
   16334:	bne	16368 <__printf_chk@plt+0x3b3c>
   16338:	add	r8, r8, #1
   1633c:	mov	r1, r4
   16340:	mov	r0, r5
   16344:	bl	2e6d8 <crc32@@Base+0x1437c>
   16348:	subs	r4, r0, #0
   1634c:	bge	162dc <__printf_chk@plt+0x3ab0>
   16350:	cmp	r8, #0
   16354:	beq	16550 <__printf_chk@plt+0x3d24>
   16358:	ldr	r3, [sp, #52]	; 0x34
   1635c:	add	r3, r3, #1
   16360:	str	r3, [sp, #52]	; 0x34
   16364:	b	16220 <__printf_chk@plt+0x39f4>
   16368:	movw	r1, #32940	; 0x80ac
   1636c:	ldr	r3, [sp, #32]
   16370:	ldr	r2, [sp, #24]
   16374:	mov	r0, #1
   16378:	movt	r1, #3
   1637c:	mvn	ip, #11
   16380:	str	ip, [sp, #36]	; 0x24
   16384:	bl	1282c <__printf_chk@plt>
   16388:	ldr	r2, [sp, #1300]	; 0x514
   1638c:	ldr	r3, [fp]
   16390:	ldr	r0, [sp, #36]	; 0x24
   16394:	cmp	r2, r3
   16398:	bne	16618 <__printf_chk@plt+0x3dec>
   1639c:	add	sp, sp, #1296	; 0x510
   163a0:	add	sp, sp, #12
   163a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163a8:	mvn	r3, #1
   163ac:	str	r3, [sp, #36]	; 0x24
   163b0:	bl	303c0 <crc32@@Base+0x16064>
   163b4:	ldr	r3, [sp, #32]
   163b8:	mov	r2, r7
   163bc:	movw	r1, #32988	; 0x80dc
   163c0:	movt	r1, #3
   163c4:	str	r3, [sp]
   163c8:	ldr	r3, [sp, #24]
   163cc:	str	r0, [sp, #4]
   163d0:	mov	r0, #1
   163d4:	bl	1282c <__printf_chk@plt>
   163d8:	b	16388 <__printf_chk@plt+0x3b5c>
   163dc:	ldr	r3, [sp, #84]	; 0x54
   163e0:	cmp	r3, #0
   163e4:	beq	16404 <__printf_chk@plt+0x3bd8>
   163e8:	add	r3, r7, r3
   163ec:	str	r3, [sp, #40]	; 0x28
   163f0:	cmp	r7, r3
   163f4:	ldrcc	r3, [sp, #36]	; 0x24
   163f8:	strcc	r3, [sp, #48]	; 0x30
   163fc:	bcc	161c4 <__printf_chk@plt+0x3998>
   16400:	b	16248 <__printf_chk@plt+0x3a1c>
   16404:	mov	r0, #200	; 0xc8
   16408:	add	r3, sp, #104	; 0x68
   1640c:	str	r0, [sp, #16]
   16410:	add	r0, sp, #1088	; 0x440
   16414:	mov	r4, #1
   16418:	add	r0, r0, #12
   1641c:	ldr	r2, [sp, #88]	; 0x58
   16420:	add	r6, sp, #100	; 0x64
   16424:	str	r0, [sp, #12]
   16428:	sub	r3, r3, #8
   1642c:	mov	r0, #100	; 0x64
   16430:	ldr	r1, [sp, #92]	; 0x5c
   16434:	str	r0, [sp, #8]
   16438:	mov	r0, r5
   1643c:	str	r6, [sp, #4]
   16440:	str	r4, [sp, #20]
   16444:	str	r4, [sp]
   16448:	bl	32798 <crc32@@Base+0x1843c>
   1644c:	subs	r9, r0, #0
   16450:	blt	165ac <__printf_chk@plt+0x3d80>
   16454:	beq	16584 <__printf_chk@plt+0x3d58>
   16458:	mov	r1, r6
   1645c:	mov	r0, r5
   16460:	mov	r3, #0
   16464:	mov	r2, r9
   16468:	bl	196ac <__printf_chk@plt+0x6e80>
   1646c:	subs	sl, r0, #0
   16470:	beq	165f8 <__printf_chk@plt+0x3dcc>
   16474:	ldr	r4, [sp, #88]	; 0x58
   16478:	cmp	r4, #0
   1647c:	ble	16534 <__printf_chk@plt+0x3d08>
   16480:	ldr	r7, [sp, #92]	; 0x5c
   16484:	mov	r8, #0
   16488:	add	r4, r7, r4, lsl #2
   1648c:	mov	r6, r7
   16490:	mov	r5, r7
   16494:	ldr	r0, [r5], #4
   16498:	add	r8, r8, #1
   1649c:	bl	1267c <strlen@plt>
   164a0:	cmp	r4, r5
   164a4:	add	r8, r8, r0
   164a8:	bne	16494 <__printf_chk@plt+0x3c68>
   164ac:	mov	r0, r8
   164b0:	bl	12664 <malloc@plt>
   164b4:	subs	r8, r0, #0
   164b8:	beq	165d8 <__printf_chk@plt+0x3dac>
   164bc:	mov	r4, #0
   164c0:	ldr	r1, [r6]
   164c4:	add	r0, r8, r4
   164c8:	bl	12484 <strcpy@plt>
   164cc:	ldr	r0, [r6], #4
   164d0:	bl	1267c <strlen@plt>
   164d4:	add	r4, r4, #1
   164d8:	cmp	r5, r6
   164dc:	add	r4, r4, r0
   164e0:	bne	164c0 <__printf_chk@plt+0x3c94>
   164e4:	mov	r5, #0
   164e8:	b	164f0 <__printf_chk@plt+0x3cc4>
   164ec:	ldr	r7, [sp, #92]	; 0x5c
   164f0:	ldr	r0, [r7, r5, lsl #2]
   164f4:	add	r5, r5, #1
   164f8:	bl	121c0 <free@plt>
   164fc:	ldr	r3, [sp, #88]	; 0x58
   16500:	cmp	r5, r3
   16504:	blt	164ec <__printf_chk@plt+0x3cc0>
   16508:	ldr	r0, [sp, #92]	; 0x5c
   1650c:	bl	121c0 <free@plt>
   16510:	ldr	r3, [sp, #60]	; 0x3c
   16514:	str	r9, [r3]
   16518:	ldr	r3, [sp, #56]	; 0x38
   1651c:	str	sl, [r3]
   16520:	ldr	r3, [sp, #64]	; 0x40
   16524:	str	r8, [r3]
   16528:	ldr	r3, [sp, #68]	; 0x44
   1652c:	str	r4, [r3]
   16530:	b	16388 <__printf_chk@plt+0x3b5c>
   16534:	mov	r0, #0
   16538:	bl	12664 <malloc@plt>
   1653c:	subs	r8, r0, #0
   16540:	beq	165d8 <__printf_chk@plt+0x3dac>
   16544:	ldr	r0, [sp, #92]	; 0x5c
   16548:	mov	r4, #0
   1654c:	b	1650c <__printf_chk@plt+0x3ce0>
   16550:	ldr	r3, [sp, #32]
   16554:	movw	r1, #32752	; 0x7ff0
   16558:	str	r7, [sp]
   1655c:	mov	r0, #1
   16560:	ldr	r2, [sp, #24]
   16564:	movt	r1, #3
   16568:	bl	1282c <__printf_chk@plt>
   1656c:	mvn	r3, #41	; 0x29
   16570:	str	r3, [sp, #36]	; 0x24
   16574:	b	16388 <__printf_chk@plt+0x3b5c>
   16578:	mvn	r3, #1
   1657c:	str	r3, [sp, #36]	; 0x24
   16580:	b	16388 <__printf_chk@plt+0x3b5c>
   16584:	bl	303c0 <crc32@@Base+0x16064>
   16588:	ldrd	r2, [sp, #72]	; 0x48
   1658c:	movw	r1, #33096	; 0x8148
   16590:	movt	r1, #3
   16594:	mvn	ip, #21
   16598:	str	ip, [sp, #36]	; 0x24
   1659c:	str	r0, [sp]
   165a0:	mov	r0, r4
   165a4:	bl	1282c <__printf_chk@plt>
   165a8:	b	16388 <__printf_chk@plt+0x3b5c>
   165ac:	mov	r0, #0
   165b0:	mvn	r3, #4
   165b4:	str	r3, [sp, #36]	; 0x24
   165b8:	bl	303c0 <crc32@@Base+0x16064>
   165bc:	ldrd	r2, [sp, #72]	; 0x48
   165c0:	movw	r1, #33052	; 0x811c
   165c4:	movt	r1, #3
   165c8:	str	r0, [sp]
   165cc:	mov	r0, r4
   165d0:	bl	1282c <__printf_chk@plt>
   165d4:	b	16388 <__printf_chk@plt+0x3b5c>
   165d8:	ldrd	r2, [sp, #72]	; 0x48
   165dc:	movw	r1, #33192	; 0x81a8
   165e0:	mov	r0, #1
   165e4:	movt	r1, #3
   165e8:	mvn	ip, #11
   165ec:	str	ip, [sp, #36]	; 0x24
   165f0:	bl	1282c <__printf_chk@plt>
   165f4:	b	16388 <__printf_chk@plt+0x3b5c>
   165f8:	ldrd	r2, [sp, #72]	; 0x48
   165fc:	mov	r0, r4
   16600:	movw	r1, #33144	; 0x8178
   16604:	movt	r1, #3
   16608:	mvn	ip, #11
   1660c:	str	ip, [sp, #36]	; 0x24
   16610:	bl	1282c <__printf_chk@plt>
   16614:	b	16388 <__printf_chk@plt+0x3b5c>
   16618:	bl	12538 <__stack_chk_fail@plt>
   1661c:	andeq	r7, r3, pc, lsl #29
   16620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16624:	movw	ip, #3824	; 0xef0
   16628:	sub	sp, sp, #172	; 0xac
   1662c:	movt	ip, #5
   16630:	mov	r5, r2
   16634:	mov	r4, r3
   16638:	str	ip, [sp, #36]	; 0x24
   1663c:	mov	r7, r0
   16640:	ldr	ip, [ip]
   16644:	mov	r0, r2
   16648:	str	r1, [sp, #48]	; 0x30
   1664c:	add	r2, sp, #60	; 0x3c
   16650:	mov	r1, r3
   16654:	add	r3, sp, #64	; 0x40
   16658:	str	ip, [sp, #164]	; 0xa4
   1665c:	ldr	ip, [sp, #208]	; 0xd0
   16660:	str	ip, [sp, #40]	; 0x28
   16664:	ldr	ip, [sp, #216]	; 0xd8
   16668:	str	ip, [sp, #28]
   1666c:	ldr	ip, [sp, #220]	; 0xdc
   16670:	str	ip, [sp, #44]	; 0x2c
   16674:	bl	174d8 <__printf_chk@plt+0x4cac>
   16678:	subs	r3, r0, #0
   1667c:	str	r3, [sp, #20]
   16680:	bne	16a18 <__printf_chk@plt+0x41ec>
   16684:	mov	r1, r4
   16688:	ldr	r2, [sp, #20]
   1668c:	mov	r0, r5
   16690:	bl	31804 <crc32@@Base+0x174a8>
   16694:	mov	r1, r4
   16698:	str	r0, [sp, #24]
   1669c:	mov	r0, r5
   166a0:	bl	2e678 <crc32@@Base+0x1431c>
   166a4:	subs	r4, r0, #0
   166a8:	blt	16824 <__printf_chk@plt+0x3ff8>
   166ac:	ldr	r3, [sp, #212]	; 0xd4
   166b0:	movw	r6, #32876	; 0x806c
   166b4:	movw	r8, #33528	; 0x82f8
   166b8:	movt	r6, #3
   166bc:	cmp	r3, #0
   166c0:	movt	r8, #3
   166c4:	movw	r3, #39808	; 0x9b80
   166c8:	movt	r3, #3
   166cc:	moveq	r3, #0
   166d0:	str	r3, [sp, #32]
   166d4:	movw	r3, #32476	; 0x7edc
   166d8:	movt	r3, #3
   166dc:	str	r3, [sp, #52]	; 0x34
   166e0:	b	16718 <__printf_chk@plt+0x3eec>
   166e4:	cmp	r7, #0
   166e8:	beq	16704 <__printf_chk@plt+0x3ed8>
   166ec:	mov	r0, r9
   166f0:	mov	r2, #9
   166f4:	mov	r1, r8
   166f8:	bl	12220 <strncmp@plt>
   166fc:	cmp	r0, #0
   16700:	beq	16844 <__printf_chk@plt+0x4018>
   16704:	mov	r1, r4
   16708:	mov	r0, r5
   1670c:	bl	2e6d8 <crc32@@Base+0x1437c>
   16710:	subs	r4, r0, #0
   16714:	blt	16824 <__printf_chk@plt+0x3ff8>
   16718:	mov	r2, #0
   1671c:	mov	r1, r4
   16720:	mov	r0, r5
   16724:	bl	31804 <crc32@@Base+0x174a8>
   16728:	mov	r2, #4
   1672c:	mov	r1, r6
   16730:	mov	r9, r0
   16734:	bl	12220 <strncmp@plt>
   16738:	subs	r2, r0, #0
   1673c:	bne	166e4 <__printf_chk@plt+0x3eb8>
   16740:	mov	r1, r4
   16744:	mov	r0, r5
   16748:	ldr	r9, [sp, #60]	; 0x3c
   1674c:	ldr	sl, [sp, #64]	; 0x40
   16750:	bl	31804 <crc32@@Base+0x174a8>
   16754:	add	r2, sp, #84	; 0x54
   16758:	mov	r1, r4
   1675c:	mov	fp, r0
   16760:	mov	r0, r5
   16764:	bl	1800c <__printf_chk@plt+0x57e0>
   16768:	cmp	r0, #0
   1676c:	bne	169c8 <__printf_chk@plt+0x419c>
   16770:	mov	r1, sl
   16774:	add	ip, sp, #76	; 0x4c
   16778:	ldr	r2, [sp, #84]	; 0x54
   1677c:	mov	r0, r9
   16780:	add	r3, sp, #132	; 0x84
   16784:	str	ip, [sp]
   16788:	bl	18158 <__printf_chk@plt+0x592c>
   1678c:	subs	sl, r0, #0
   16790:	bne	169ec <__printf_chk@plt+0x41c0>
   16794:	ldr	ip, [sp, #76]	; 0x4c
   16798:	add	r3, sp, #132	; 0x84
   1679c:	movw	r2, #32576	; 0x7f40
   167a0:	mov	r1, r4
   167a4:	movt	r2, #3
   167a8:	mov	r0, r5
   167ac:	str	ip, [sp]
   167b0:	bl	2fbb8 <crc32@@Base+0x1585c>
   167b4:	cmp	r0, #0
   167b8:	beq	16704 <__printf_chk@plt+0x3ed8>
   167bc:	mov	r1, r4
   167c0:	mov	r9, r0
   167c4:	mov	r2, sl
   167c8:	mov	r0, r5
   167cc:	bl	31804 <crc32@@Base+0x174a8>
   167d0:	mov	r4, r0
   167d4:	mov	r0, r9
   167d8:	bl	303c0 <crc32@@Base+0x16064>
   167dc:	mov	r3, r4
   167e0:	movw	r2, #32576	; 0x7f40
   167e4:	movw	r1, #33420	; 0x828c
   167e8:	movt	r2, #3
   167ec:	movt	r1, #3
   167f0:	str	r0, [sp]
   167f4:	mov	r0, #1
   167f8:	bl	1282c <__printf_chk@plt>
   167fc:	cmn	r9, #3
   16800:	movw	r1, #33468	; 0x82bc
   16804:	ldr	r3, [sp, #24]
   16808:	mov	r2, fp
   1680c:	mov	r0, #1
   16810:	movt	r1, #3
   16814:	mvnne	ip, #4
   16818:	mvneq	ip, #27
   1681c:	str	ip, [sp, #20]
   16820:	bl	1282c <__printf_chk@plt>
   16824:	ldr	r3, [sp, #36]	; 0x24
   16828:	ldr	r2, [sp, #164]	; 0xa4
   1682c:	ldr	r0, [sp, #20]
   16830:	ldr	r3, [r3]
   16834:	cmp	r2, r3
   16838:	bne	16a30 <__printf_chk@plt+0x4204>
   1683c:	add	sp, sp, #172	; 0xac
   16840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16844:	ldr	r3, [sp, #28]
   16848:	mov	r2, r5
   1684c:	str	r4, [sp]
   16850:	add	r0, sp, #84	; 0x54
   16854:	mov	r1, r7
   16858:	ldr	sl, [sp, #60]	; 0x3c
   1685c:	str	r3, [sp, #8]
   16860:	ldr	r3, [sp, #32]
   16864:	ldr	r9, [sp, #64]	; 0x40
   16868:	str	r3, [sp, #4]
   1686c:	ldr	r3, [sp, #24]
   16870:	bl	15d28 <__printf_chk@plt+0x34fc>
   16874:	subs	r2, r0, #0
   16878:	bne	168e4 <__printf_chk@plt+0x40b8>
   1687c:	mov	r1, r4
   16880:	mov	r0, r5
   16884:	bl	31804 <crc32@@Base+0x174a8>
   16888:	add	r1, sp, #72	; 0x48
   1688c:	str	r9, [sp, #80]	; 0x50
   16890:	add	r3, sp, #68	; 0x44
   16894:	str	r1, [sp]
   16898:	mov	r2, #1
   1689c:	str	sl, [sp, #76]	; 0x4c
   168a0:	add	r1, sp, #76	; 0x4c
   168a4:	mov	fp, r0
   168a8:	ldr	r0, [sp, #112]	; 0x70
   168ac:	ldr	r9, [r0, #8]
   168b0:	add	r0, sp, #84	; 0x54
   168b4:	blx	r9
   168b8:	subs	r9, r0, #0
   168bc:	beq	168f0 <__printf_chk@plt+0x40c4>
   168c0:	str	r9, [sp]
   168c4:	mov	r2, fp
   168c8:	movw	r1, #33540	; 0x8304
   168cc:	ldr	r3, [sp, #24]
   168d0:	movt	r1, #3
   168d4:	mov	r0, #1
   168d8:	bl	1282c <__printf_chk@plt>
   168dc:	cmn	r9, #2
   168e0:	beq	16704 <__printf_chk@plt+0x3ed8>
   168e4:	mvn	r3, #0
   168e8:	str	r3, [sp, #20]
   168ec:	b	16824 <__printf_chk@plt+0x3ff8>
   168f0:	ldr	ip, [sp, #44]	; 0x2c
   168f4:	mov	r1, r4
   168f8:	str	r9, [sp, #8]
   168fc:	mov	r0, r5
   16900:	str	r9, [sp, #4]
   16904:	str	ip, [sp, #12]
   16908:	ldr	ip, [sp, #40]	; 0x28
   1690c:	ldr	r3, [sp, #72]	; 0x48
   16910:	ldr	r2, [sp, #68]	; 0x44
   16914:	str	ip, [sp]
   16918:	bl	15e90 <__printf_chk@plt+0x3664>
   1691c:	subs	r9, r0, #0
   16920:	beq	16960 <__printf_chk@plt+0x4134>
   16924:	cmn	r9, #3
   16928:	mvneq	r3, #27
   1692c:	streq	r3, [sp, #20]
   16930:	beq	16824 <__printf_chk@plt+0x3ff8>
   16934:	bl	303c0 <crc32@@Base+0x16064>
   16938:	ldr	r3, [sp, #24]
   1693c:	mov	r2, fp
   16940:	movw	r1, #33600	; 0x8340
   16944:	movt	r1, #3
   16948:	mvn	ip, #0
   1694c:	str	ip, [sp, #20]
   16950:	str	r0, [sp]
   16954:	mov	r0, #1
   16958:	bl	1282c <__printf_chk@plt>
   1695c:	b	16824 <__printf_chk@plt+0x3ff8>
   16960:	ldr	r0, [sp, #68]	; 0x44
   16964:	bl	121c0 <free@plt>
   16968:	mov	r1, r4
   1696c:	mov	r3, r9
   16970:	ldr	r2, [sp, #52]	; 0x34
   16974:	mov	r0, r5
   16978:	bl	31b04 <crc32@@Base+0x177a8>
   1697c:	ldr	r1, [sp, #48]	; 0x30
   16980:	cmp	r1, #0
   16984:	str	r0, [sp, #88]	; 0x58
   16988:	beq	16704 <__printf_chk@plt+0x3ed8>
   1698c:	ldr	r3, [sp, #112]	; 0x70
   16990:	add	r0, sp, #84	; 0x54
   16994:	ldr	r3, [r3, #12]
   16998:	blx	r3
   1699c:	cmp	r0, #0
   169a0:	beq	16704 <__printf_chk@plt+0x3ed8>
   169a4:	mov	ip, r0
   169a8:	ldr	r3, [sp, #24]
   169ac:	mov	r2, fp
   169b0:	movw	r1, #33672	; 0x8388
   169b4:	mov	r0, #1
   169b8:	movt	r1, #3
   169bc:	str	ip, [sp, #20]
   169c0:	bl	1282c <__printf_chk@plt>
   169c4:	b	16824 <__printf_chk@plt+0x3ff8>
   169c8:	ldr	r3, [sp, #24]
   169cc:	mov	r2, fp
   169d0:	movw	r1, #33280	; 0x8200
   169d4:	mov	r0, #1
   169d8:	movt	r1, #3
   169dc:	mvn	ip, #1
   169e0:	str	ip, [sp, #20]
   169e4:	bl	1282c <__printf_chk@plt>
   169e8:	b	16824 <__printf_chk@plt+0x3ff8>
   169ec:	ldr	r1, [sp, #24]
   169f0:	mov	r3, fp
   169f4:	ldr	r2, [sp, #84]	; 0x54
   169f8:	mov	r0, #1
   169fc:	mvn	ip, #92	; 0x5c
   16a00:	str	ip, [sp, #20]
   16a04:	str	r1, [sp]
   16a08:	movw	r1, #33348	; 0x8244
   16a0c:	movt	r1, #3
   16a10:	bl	1282c <__printf_chk@plt>
   16a14:	b	16824 <__printf_chk@plt+0x3ff8>
   16a18:	movw	r0, #33252	; 0x81e4
   16a1c:	movt	r0, #3
   16a20:	bl	12310 <puts@plt>
   16a24:	mvn	r3, #0
   16a28:	str	r3, [sp, #20]
   16a2c:	b	16824 <__printf_chk@plt+0x3ff8>
   16a30:	bl	12538 <__stack_chk_fail@plt>
   16a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a38:	movw	ip, #3824	; 0xef0
   16a3c:	sub	sp, sp, #132	; 0x84
   16a40:	movt	ip, #5
   16a44:	mov	r4, r2
   16a48:	mov	r8, r0
   16a4c:	ldr	r2, [ip]
   16a50:	mov	r0, r4
   16a54:	str	r3, [sp, #24]
   16a58:	ldr	r3, [sp, #176]	; 0xb0
   16a5c:	str	r1, [sp, #36]	; 0x24
   16a60:	movw	r1, #31600	; 0x7b70
   16a64:	movt	r1, #3
   16a68:	str	ip, [sp, #40]	; 0x28
   16a6c:	str	r2, [sp, #124]	; 0x7c
   16a70:	ldr	r5, [sp, #168]	; 0xa8
   16a74:	ldr	r9, [sp, #172]	; 0xac
   16a78:	str	r3, [sp, #28]
   16a7c:	bl	31e60 <crc32@@Base+0x17b04>
   16a80:	subs	r6, r0, #0
   16a84:	blt	16d24 <__printf_chk@plt+0x44f8>
   16a88:	mov	r1, r6
   16a8c:	mov	r0, r4
   16a90:	bl	2e678 <crc32@@Base+0x1431c>
   16a94:	subs	r7, r0, #0
   16a98:	blt	16b10 <__printf_chk@plt+0x42e4>
   16a9c:	ldr	sl, [sp, #36]	; 0x24
   16aa0:	ldr	fp, [sp, #24]
   16aa4:	ldr	r6, [sp, #28]
   16aa8:	b	16ac0 <__printf_chk@plt+0x4294>
   16aac:	mov	r1, r7
   16ab0:	mov	r0, r4
   16ab4:	bl	2e6d8 <crc32@@Base+0x1437c>
   16ab8:	subs	r7, r0, #0
   16abc:	blt	16b10 <__printf_chk@plt+0x42e4>
   16ac0:	str	r6, [sp, #12]
   16ac4:	mov	r3, r7
   16ac8:	str	r9, [sp, #8]
   16acc:	mov	r2, r4
   16ad0:	str	r5, [sp, #4]
   16ad4:	mov	r1, sl
   16ad8:	str	fp, [sp]
   16adc:	mov	r0, r8
   16ae0:	bl	16620 <__printf_chk@plt+0x3df4>
   16ae4:	cmp	r0, #0
   16ae8:	beq	16aac <__printf_chk@plt+0x4280>
   16aec:	mov	r6, r0
   16af0:	ldr	r3, [sp, #40]	; 0x28
   16af4:	mov	r0, r6
   16af8:	ldr	r2, [sp, #124]	; 0x7c
   16afc:	ldr	r3, [r3]
   16b00:	cmp	r2, r3
   16b04:	bne	16de4 <__printf_chk@plt+0x45b8>
   16b08:	add	sp, sp, #132	; 0x84
   16b0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b10:	cmp	r8, #0
   16b14:	beq	16d1c <__printf_chk@plt+0x44f0>
   16b18:	movw	r1, #32660	; 0x7f94
   16b1c:	mov	r0, r4
   16b20:	movt	r1, #3
   16b24:	bl	31e60 <crc32@@Base+0x17b04>
   16b28:	subs	r1, r0, #0
   16b2c:	blt	16dbc <__printf_chk@plt+0x4590>
   16b30:	mov	r0, r4
   16b34:	bl	2e678 <crc32@@Base+0x1431c>
   16b38:	subs	fp, r0, #0
   16b3c:	blt	16d1c <__printf_chk@plt+0x44f0>
   16b40:	cmp	r5, #0
   16b44:	movw	r7, #33528	; 0x82f8
   16b48:	movt	r7, #3
   16b4c:	movw	r3, #33748	; 0x83d4
   16b50:	movw	r2, #33756	; 0x83dc
   16b54:	movt	r3, #3
   16b58:	movt	r2, #3
   16b5c:	moveq	r3, #0
   16b60:	str	r2, [sp, #32]
   16b64:	str	r3, [sp, #16]
   16b68:	movw	r3, #32476	; 0x7edc
   16b6c:	str	r8, [sp, #20]
   16b70:	movt	r3, #3
   16b74:	str	r3, [sp, #44]	; 0x2c
   16b78:	mov	r2, #0
   16b7c:	mov	r1, fp
   16b80:	mov	r0, r4
   16b84:	bl	31804 <crc32@@Base+0x174a8>
   16b88:	mov	r1, fp
   16b8c:	mov	sl, r0
   16b90:	mov	r0, r4
   16b94:	bl	2e678 <crc32@@Base+0x1431c>
   16b98:	subs	r5, r0, #0
   16b9c:	bge	16bd4 <__printf_chk@plt+0x43a8>
   16ba0:	b	16d08 <__printf_chk@plt+0x44dc>
   16ba4:	mov	r2, r8
   16ba8:	mov	r3, sl
   16bac:	ldr	r1, [sp, #32]
   16bb0:	mov	r0, #1
   16bb4:	bl	1282c <__printf_chk@plt>
   16bb8:	cmn	r6, #2
   16bbc:	bne	16db4 <__printf_chk@plt+0x4588>
   16bc0:	mov	r1, r5
   16bc4:	mov	r0, r4
   16bc8:	bl	2e6d8 <crc32@@Base+0x1437c>
   16bcc:	subs	r5, r0, #0
   16bd0:	blt	16d08 <__printf_chk@plt+0x44dc>
   16bd4:	mov	r2, #0
   16bd8:	mov	r1, r5
   16bdc:	mov	r0, r4
   16be0:	bl	31804 <crc32@@Base+0x174a8>
   16be4:	mov	r2, #9
   16be8:	mov	r1, r7
   16bec:	bl	12220 <strncmp@plt>
   16bf0:	subs	r2, r0, #0
   16bf4:	bne	16bc0 <__printf_chk@plt+0x4394>
   16bf8:	mov	r1, r5
   16bfc:	mov	r0, r4
   16c00:	bl	31804 <crc32@@Base+0x174a8>
   16c04:	add	r2, sp, #60	; 0x3c
   16c08:	add	r3, sp, #56	; 0x38
   16c0c:	str	r2, [sp, #8]
   16c10:	str	r3, [sp, #4]
   16c14:	add	r2, sp, #64	; 0x40
   16c18:	add	r3, sp, #52	; 0x34
   16c1c:	str	r2, [sp]
   16c20:	mov	r1, fp
   16c24:	mov	r2, r5
   16c28:	mov	r8, r0
   16c2c:	mov	r0, r4
   16c30:	bl	1607c <__printf_chk@plt+0x3850>
   16c34:	cmp	r0, #0
   16c38:	bne	16db4 <__printf_chk@plt+0x4588>
   16c3c:	ldr	r3, [sp, #16]
   16c40:	add	r0, sp, #76	; 0x4c
   16c44:	str	r9, [sp, #8]
   16c48:	mov	r2, r4
   16c4c:	str	r5, [sp]
   16c50:	str	r3, [sp, #4]
   16c54:	mov	r3, sl
   16c58:	ldr	r1, [sp, #20]
   16c5c:	bl	15d28 <__printf_chk@plt+0x34fc>
   16c60:	cmp	r0, #0
   16c64:	bne	16db4 <__printf_chk@plt+0x4588>
   16c68:	ldr	ip, [sp, #104]	; 0x68
   16c6c:	add	lr, sp, #72	; 0x48
   16c70:	ldr	r2, [sp, #64]	; 0x40
   16c74:	add	r3, sp, #68	; 0x44
   16c78:	str	lr, [sp]
   16c7c:	add	r0, sp, #76	; 0x4c
   16c80:	ldr	r6, [ip, #8]
   16c84:	ldr	r1, [sp, #52]	; 0x34
   16c88:	blx	r6
   16c8c:	mov	r6, r0
   16c90:	ldr	r0, [sp, #52]	; 0x34
   16c94:	bl	121c0 <free@plt>
   16c98:	cmp	r6, #0
   16c9c:	bne	16ba4 <__printf_chk@plt+0x4378>
   16ca0:	ldr	r6, [sp, #28]
   16ca4:	mov	r1, r5
   16ca8:	ldr	lr, [sp, #60]	; 0x3c
   16cac:	mov	r0, r4
   16cb0:	ldr	ip, [sp, #56]	; 0x38
   16cb4:	str	r6, [sp, #12]
   16cb8:	ldr	r6, [sp, #24]
   16cbc:	ldr	r3, [sp, #72]	; 0x48
   16cc0:	ldr	r2, [sp, #68]	; 0x44
   16cc4:	stm	sp, {r6, ip, lr}
   16cc8:	bl	15e90 <__printf_chk@plt+0x3664>
   16ccc:	subs	r6, r0, #0
   16cd0:	beq	16d48 <__printf_chk@plt+0x451c>
   16cd4:	cmn	r6, #3
   16cd8:	mvneq	r6, #27
   16cdc:	beq	16af0 <__printf_chk@plt+0x42c4>
   16ce0:	bl	303c0 <crc32@@Base+0x16064>
   16ce4:	mov	r3, sl
   16ce8:	mov	r2, r8
   16cec:	movw	r1, #33600	; 0x8340
   16cf0:	movt	r1, #3
   16cf4:	mvn	r6, #0
   16cf8:	str	r0, [sp]
   16cfc:	mov	r0, #1
   16d00:	bl	1282c <__printf_chk@plt>
   16d04:	b	16af0 <__printf_chk@plt+0x42c4>
   16d08:	mov	r1, fp
   16d0c:	mov	r0, r4
   16d10:	bl	2e6d8 <crc32@@Base+0x1437c>
   16d14:	subs	fp, r0, #0
   16d18:	bge	16b78 <__printf_chk@plt+0x434c>
   16d1c:	mov	r6, #0
   16d20:	b	16af0 <__printf_chk@plt+0x42c4>
   16d24:	bl	303c0 <crc32@@Base+0x16064>
   16d28:	movw	r2, #31600	; 0x7b70
   16d2c:	movw	r1, #31608	; 0x7b78
   16d30:	movt	r2, #3
   16d34:	movt	r1, #3
   16d38:	mov	r3, r0
   16d3c:	mov	r0, #1
   16d40:	bl	1282c <__printf_chk@plt>
   16d44:	b	16af0 <__printf_chk@plt+0x42c4>
   16d48:	ldr	r0, [sp, #68]	; 0x44
   16d4c:	bl	121c0 <free@plt>
   16d50:	ldr	r0, [sp, #56]	; 0x38
   16d54:	bl	121c0 <free@plt>
   16d58:	mov	r1, r5
   16d5c:	mov	r3, r6
   16d60:	ldr	r2, [sp, #44]	; 0x2c
   16d64:	mov	r0, r4
   16d68:	bl	31b04 <crc32@@Base+0x177a8>
   16d6c:	ldr	r1, [sp, #36]	; 0x24
   16d70:	cmp	r1, #0
   16d74:	str	r0, [sp, #80]	; 0x50
   16d78:	beq	16bc0 <__printf_chk@plt+0x4394>
   16d7c:	ldr	r3, [sp, #104]	; 0x68
   16d80:	add	r0, sp, #76	; 0x4c
   16d84:	ldr	r3, [r3, #12]
   16d88:	blx	r3
   16d8c:	cmp	r0, #0
   16d90:	beq	16bc0 <__printf_chk@plt+0x4394>
   16d94:	mov	r6, r0
   16d98:	mov	r2, r8
   16d9c:	mov	r3, sl
   16da0:	movw	r1, #33812	; 0x8414
   16da4:	mov	r0, #1
   16da8:	movt	r1, #3
   16dac:	bl	1282c <__printf_chk@plt>
   16db0:	b	16af0 <__printf_chk@plt+0x42c4>
   16db4:	mvn	r6, #0
   16db8:	b	16af0 <__printf_chk@plt+0x42c4>
   16dbc:	bl	303c0 <crc32@@Base+0x16064>
   16dc0:	movw	r2, #32660	; 0x7f94
   16dc4:	movw	r1, #31608	; 0x7b78
   16dc8:	movt	r2, #3
   16dcc:	movt	r1, #3
   16dd0:	mvn	r6, #1
   16dd4:	mov	r3, r0
   16dd8:	mov	r0, #1
   16ddc:	bl	1282c <__printf_chk@plt>
   16de0:	b	16af0 <__printf_chk@plt+0x42c4>
   16de4:	bl	12538 <__stack_chk_fail@plt>
   16de8:	push	{r4, r5, r6, lr}
   16dec:	mov	r1, #0
   16df0:	mov	r4, r0
   16df4:	bl	18b90 <__printf_chk@plt+0x6364>
   16df8:	subs	r5, r0, #0
   16dfc:	beq	16e34 <__printf_chk@plt+0x4608>
   16e00:	movw	r1, #33896	; 0x8468
   16e04:	mov	r0, #1
   16e08:	movt	r1, #3
   16e0c:	bl	1282c <__printf_chk@plt>
   16e10:	mov	r1, r5
   16e14:	mov	r0, r4
   16e18:	bl	19fbc <__printf_chk@plt+0x7790>
   16e1c:	cmp	r0, #0
   16e20:	popne	{r4, r5, r6, pc}
   16e24:	mov	r1, r5
   16e28:	mov	r0, r4
   16e2c:	pop	{r4, r5, r6, lr}
   16e30:	b	1a0c8 <__printf_chk@plt+0x789c>
   16e34:	mvn	r0, #0
   16e38:	pop	{r4, r5, r6, pc}
   16e3c:	push	{r4, r5, r6, lr}
   16e40:	movw	r4, #3824	; 0xef0
   16e44:	movt	r4, #5
   16e48:	sub	sp, sp, #8
   16e4c:	mov	r5, r3
   16e50:	mov	r6, r2
   16e54:	ldr	ip, [r4]
   16e58:	mov	r3, sp
   16e5c:	str	ip, [sp, #4]
   16e60:	bl	31b04 <crc32@@Base+0x177a8>
   16e64:	cmp	r0, #0
   16e68:	beq	16ec0 <__printf_chk@plt+0x4694>
   16e6c:	ldr	r3, [sp]
   16e70:	cmp	r3, #4
   16e74:	bhi	16ea4 <__printf_chk@plt+0x4678>
   16e78:	asrs	r3, r3, #2
   16e7c:	ldrne	r3, [r0]
   16e80:	mov	r0, #0
   16e84:	revne	r3, r3
   16e88:	str	r3, [r5]
   16e8c:	ldr	r2, [sp, #4]
   16e90:	ldr	r3, [r4]
   16e94:	cmp	r2, r3
   16e98:	bne	16ec8 <__printf_chk@plt+0x469c>
   16e9c:	add	sp, sp, #8
   16ea0:	pop	{r4, r5, r6, pc}
   16ea4:	mov	r2, r6
   16ea8:	movw	r1, #34044	; 0x84fc
   16eac:	mov	r0, #1
   16eb0:	movt	r1, #3
   16eb4:	bl	1282c <__printf_chk@plt>
   16eb8:	mvn	r0, #0
   16ebc:	b	16e8c <__printf_chk@plt+0x4660>
   16ec0:	mvn	r0, #0
   16ec4:	b	16e8c <__printf_chk@plt+0x4660>
   16ec8:	bl	12538 <__stack_chk_fail@plt>
   16ecc:	push	{r4, r5, r6, r7, lr}
   16ed0:	movw	r7, #3824	; 0xef0
   16ed4:	movt	r7, #5
   16ed8:	sub	sp, sp, #12
   16edc:	add	r4, sp, #8
   16ee0:	mov	r5, #0
   16ee4:	ldr	r3, [r7]
   16ee8:	mov	r6, r0
   16eec:	str	r5, [r4, #-8]!
   16ef0:	mov	r2, r4
   16ef4:	str	r3, [sp, #4]
   16ef8:	bl	2e588 <crc32@@Base+0x1422c>
   16efc:	subs	r1, r0, #0
   16f00:	blt	16f3c <__printf_chk@plt+0x4710>
   16f04:	ldr	r3, [sp]
   16f08:	cmp	r3, r5
   16f0c:	bgt	16f20 <__printf_chk@plt+0x46f4>
   16f10:	b	16f3c <__printf_chk@plt+0x4710>
   16f14:	ldr	r3, [sp]
   16f18:	cmp	r3, #0
   16f1c:	ble	16f3c <__printf_chk@plt+0x4710>
   16f20:	cmp	r3, #1
   16f24:	mov	r2, r4
   16f28:	mov	r0, r6
   16f2c:	addeq	r5, r5, #1
   16f30:	bl	2e588 <crc32@@Base+0x1422c>
   16f34:	subs	r1, r0, #0
   16f38:	bge	16f14 <__printf_chk@plt+0x46e8>
   16f3c:	ldr	r2, [sp, #4]
   16f40:	mov	r0, r5
   16f44:	ldr	r3, [r7]
   16f48:	cmp	r2, r3
   16f4c:	bne	16f58 <__printf_chk@plt+0x472c>
   16f50:	add	sp, sp, #12
   16f54:	pop	{r4, r5, r6, r7, pc}
   16f58:	bl	12538 <__stack_chk_fail@plt>
   16f5c:	push	{r4, r5, lr}
   16f60:	movw	r4, #3824	; 0xef0
   16f64:	movt	r4, #5
   16f68:	sub	sp, sp, #12
   16f6c:	mov	r5, r2
   16f70:	movw	r2, #31852	; 0x7c6c
   16f74:	ldr	ip, [r4]
   16f78:	mov	r3, sp
   16f7c:	movt	r2, #3
   16f80:	str	ip, [sp, #4]
   16f84:	bl	31b04 <crc32@@Base+0x177a8>
   16f88:	ldr	r2, [sp, #4]
   16f8c:	str	r0, [r5]
   16f90:	ldr	r3, [r4]
   16f94:	cmp	r2, r3
   16f98:	bne	16fb0 <__printf_chk@plt+0x4784>
   16f9c:	clz	r0, r0
   16fa0:	lsr	r0, r0, #5
   16fa4:	rsb	r0, r0, #0
   16fa8:	add	sp, sp, #12
   16fac:	pop	{r4, r5, pc}
   16fb0:	bl	12538 <__stack_chk_fail@plt>
   16fb4:	push	{r4, r5, lr}
   16fb8:	movw	r4, #3824	; 0xef0
   16fbc:	movt	r4, #5
   16fc0:	sub	sp, sp, #12
   16fc4:	mov	r5, r2
   16fc8:	movw	r2, #34076	; 0x851c
   16fcc:	ldr	ip, [r4]
   16fd0:	mov	r3, sp
   16fd4:	movt	r2, #3
   16fd8:	str	ip, [sp, #4]
   16fdc:	bl	31b04 <crc32@@Base+0x177a8>
   16fe0:	cmp	r0, #0
   16fe4:	beq	17024 <__printf_chk@plt+0x47f8>
   16fe8:	ldr	r3, [sp]
   16fec:	cmp	r3, #4
   16ff0:	bne	1701c <__printf_chk@plt+0x47f0>
   16ff4:	ldr	r3, [r0]
   16ff8:	mov	r0, #0
   16ffc:	rev	r3, r3
   17000:	str	r3, [r5]
   17004:	ldr	r2, [sp, #4]
   17008:	ldr	r3, [r4]
   1700c:	cmp	r2, r3
   17010:	bne	1702c <__printf_chk@plt+0x4800>
   17014:	add	sp, sp, #12
   17018:	pop	{r4, r5, pc}
   1701c:	mvn	r0, #1
   17020:	b	17004 <__printf_chk@plt+0x47d8>
   17024:	mvn	r0, #0
   17028:	b	17004 <__printf_chk@plt+0x47d8>
   1702c:	bl	12538 <__stack_chk_fail@plt>
   17030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17034:	movw	r7, #3824	; 0xef0
   17038:	movt	r7, #5
   1703c:	sub	sp, sp, #20
   17040:	mov	r6, r1
   17044:	mov	r5, r0
   17048:	ldr	ip, [r7]
   1704c:	movw	r1, #34088	; 0x8528
   17050:	mov	r0, #1
   17054:	movt	r1, #3
   17058:	mov	sl, r2
   1705c:	mov	fp, r3
   17060:	str	ip, [sp, #12]
   17064:	bl	1282c <__printf_chk@plt>
   17068:	mov	r1, r6
   1706c:	mov	r0, r5
   17070:	add	r3, sp, #8
   17074:	movw	r2, #34108	; 0x853c
   17078:	movt	r2, #3
   1707c:	bl	31b04 <crc32@@Base+0x177a8>
   17080:	subs	r2, r0, #0
   17084:	beq	17218 <__printf_chk@plt+0x49ec>
   17088:	movw	r1, #59924	; 0xea14
   1708c:	mov	r0, #1
   17090:	movt	r1, #3
   17094:	bl	1282c <__printf_chk@plt>
   17098:	mov	r3, #0
   1709c:	mov	r1, r6
   170a0:	movw	r2, #32476	; 0x7edc
   170a4:	mov	r0, r5
   170a8:	movt	r2, #3
   170ac:	bl	31b04 <crc32@@Base+0x177a8>
   170b0:	movw	r2, #34116	; 0x8544
   170b4:	mov	r3, #0
   170b8:	movt	r2, #3
   170bc:	mov	r1, r6
   170c0:	mov	r9, r0
   170c4:	mov	r0, r5
   170c8:	bl	31b04 <crc32@@Base+0x177a8>
   170cc:	cmp	r9, #0
   170d0:	mov	r4, r0
   170d4:	beq	170ec <__printf_chk@plt+0x48c0>
   170d8:	movw	r1, #34148	; 0x8564
   170dc:	mov	r2, r9
   170e0:	movt	r1, #3
   170e4:	mov	r0, #1
   170e8:	bl	1282c <__printf_chk@plt>
   170ec:	cmp	r4, #0
   170f0:	beq	17104 <__printf_chk@plt+0x48d8>
   170f4:	movw	r1, #34152	; 0x8568
   170f8:	mov	r0, #1
   170fc:	movt	r1, #3
   17100:	bl	1282c <__printf_chk@plt>
   17104:	mov	r0, #10
   17108:	bl	1237c <putchar@plt>
   1710c:	movw	r2, #32468	; 0x7ed4
   17110:	mov	r3, #0
   17114:	movt	r2, #3
   17118:	mov	r1, r6
   1711c:	mov	r0, r5
   17120:	bl	31b04 <crc32@@Base+0x177a8>
   17124:	cmp	r0, #0
   17128:	beq	17148 <__printf_chk@plt+0x491c>
   1712c:	str	r0, [sp]
   17130:	movw	r1, #34164	; 0x8574
   17134:	mov	r3, fp
   17138:	movt	r1, #3
   1713c:	mov	r2, sl
   17140:	mov	r0, #1
   17144:	bl	1282c <__printf_chk@plt>
   17148:	movw	r2, #32576	; 0x7f40
   1714c:	add	r3, sp, #8
   17150:	movt	r2, #3
   17154:	mov	r1, r6
   17158:	mov	r0, r5
   1715c:	bl	31b04 <crc32@@Base+0x177a8>
   17160:	subs	r8, r0, #0
   17164:	beq	17228 <__printf_chk@plt+0x49fc>
   17168:	ldr	r4, [sp, #8]
   1716c:	mov	r3, fp
   17170:	movw	r1, #34184	; 0x8588
   17174:	mov	r2, sl
   17178:	movt	r1, #3
   1717c:	mov	r0, #1
   17180:	bl	1282c <__printf_chk@plt>
   17184:	cmp	r4, #0
   17188:	ble	171b8 <__printf_chk@plt+0x498c>
   1718c:	sub	r3, r4, #1
   17190:	movw	fp, #34216	; 0x85a8
   17194:	sub	r4, r8, #1
   17198:	movt	fp, #3
   1719c:	add	r8, r8, r3
   171a0:	ldrb	r2, [r4, #1]!
   171a4:	mov	r1, fp
   171a8:	mov	r0, #1
   171ac:	bl	1282c <__printf_chk@plt>
   171b0:	cmp	r8, r4
   171b4:	bne	171a0 <__printf_chk@plt+0x4974>
   171b8:	mov	r0, #10
   171bc:	bl	1237c <putchar@plt>
   171c0:	cmp	r9, #0
   171c4:	beq	17200 <__printf_chk@plt+0x49d4>
   171c8:	mov	r2, sl
   171cc:	movw	r1, #34224	; 0x85b0
   171d0:	mov	r0, #1
   171d4:	movt	r1, #3
   171d8:	bl	1282c <__printf_chk@plt>
   171dc:	add	r2, sp, #8
   171e0:	mov	r1, r6
   171e4:	mov	r0, r5
   171e8:	bl	16fb4 <__printf_chk@plt+0x4788>
   171ec:	cmp	r0, #0
   171f0:	beq	17250 <__printf_chk@plt+0x4a24>
   171f4:	movw	r0, #34204	; 0x859c
   171f8:	movt	r0, #3
   171fc:	bl	12310 <puts@plt>
   17200:	ldr	r2, [sp, #12]
   17204:	ldr	r3, [r7]
   17208:	cmp	r2, r3
   1720c:	bne	1725c <__printf_chk@plt+0x4a30>
   17210:	add	sp, sp, #20
   17214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17218:	movw	r0, #34128	; 0x8550
   1721c:	movt	r0, #3
   17220:	bl	12310 <puts@plt>
   17224:	b	17200 <__printf_chk@plt+0x49d4>
   17228:	mov	r3, fp
   1722c:	mov	r2, sl
   17230:	movw	r1, #34184	; 0x8588
   17234:	mov	r0, #1
   17238:	movt	r1, #3
   1723c:	bl	1282c <__printf_chk@plt>
   17240:	movw	r0, #34204	; 0x859c
   17244:	movt	r0, #3
   17248:	bl	12310 <puts@plt>
   1724c:	b	171c0 <__printf_chk@plt+0x4994>
   17250:	ldr	r0, [sp, #8]
   17254:	bl	1a9a0 <crc32@@Base+0x644>
   17258:	b	17200 <__printf_chk@plt+0x49d4>
   1725c:	bl	12538 <__stack_chk_fail@plt>
   17260:	push	{r4, r5, r6, r7, r8, lr}
   17264:	mov	r7, r2
   17268:	mov	r2, #0
   1726c:	mov	r6, r1
   17270:	mov	r5, r0
   17274:	bl	31804 <crc32@@Base+0x174a8>
   17278:	movw	r1, #32876	; 0x806c
   1727c:	mov	r2, #4
   17280:	movt	r1, #3
   17284:	mov	r4, r0
   17288:	bl	12220 <strncmp@plt>
   1728c:	cmp	r0, #0
   17290:	beq	172cc <__printf_chk@plt+0x4aa0>
   17294:	mov	r0, r4
   17298:	movw	r1, #33528	; 0x82f8
   1729c:	mov	r2, #9
   172a0:	movt	r1, #3
   172a4:	bl	12220 <strncmp@plt>
   172a8:	cmp	r0, #0
   172ac:	popne	{r4, r5, r6, r7, r8, pc}
   172b0:	mov	r2, r7
   172b4:	mov	r1, r6
   172b8:	mov	r0, r5
   172bc:	movw	r3, #34252	; 0x85cc
   172c0:	pop	{r4, r5, r6, r7, r8, lr}
   172c4:	movt	r3, #3
   172c8:	b	17030 <__printf_chk@plt+0x4804>
   172cc:	mov	r2, r7
   172d0:	mov	r1, r6
   172d4:	mov	r0, r5
   172d8:	movw	r3, #34244	; 0x85c4
   172dc:	pop	{r4, r5, r6, r7, r8, lr}
   172e0:	movt	r3, #3
   172e4:	b	17030 <__printf_chk@plt+0x4804>
   172e8:	push	{r4, r5, r6, lr}
   172ec:	mov	r5, r1
   172f0:	movw	r1, #31600	; 0x7b70
   172f4:	movt	r1, #3
   172f8:	mov	r4, r0
   172fc:	bl	31e60 <crc32@@Base+0x17b04>
   17300:	subs	r1, r0, #0
   17304:	poplt	{r4, r5, r6, pc}
   17308:	mov	r2, r5
   1730c:	mov	r0, r4
   17310:	pop	{r4, r5, r6, lr}
   17314:	b	317d4 <crc32@@Base+0x17478>
   17318:	push	{r4, r5, lr}
   1731c:	movw	r4, #3824	; 0xef0
   17320:	movt	r4, #5
   17324:	sub	sp, sp, #12
   17328:	mov	r5, r2
   1732c:	movw	r2, #40504	; 0x9e38
   17330:	ldr	ip, [r4]
   17334:	mov	r3, sp
   17338:	movt	r2, #3
   1733c:	str	ip, [sp, #4]
   17340:	bl	31b04 <crc32@@Base+0x177a8>
   17344:	cmp	r0, #0
   17348:	mvneq	r3, #0
   1734c:	strbeq	r3, [r5]
   17350:	beq	17360 <__printf_chk@plt+0x4b34>
   17354:	bl	1b224 <crc32@@Base+0xec8>
   17358:	mov	r3, #0
   1735c:	strb	r0, [r5]
   17360:	ldr	r2, [sp, #4]
   17364:	mov	r0, r3
   17368:	ldr	r3, [r4]
   1736c:	cmp	r2, r3
   17370:	bne	1737c <__printf_chk@plt+0x4b50>
   17374:	add	sp, sp, #12
   17378:	pop	{r4, r5, pc}
   1737c:	bl	12538 <__stack_chk_fail@plt>
   17380:	push	{r4, r5, lr}
   17384:	movw	r4, #3824	; 0xef0
   17388:	movt	r4, #5
   1738c:	sub	sp, sp, #12
   17390:	mov	r5, r2
   17394:	movw	r2, #31932	; 0x7cbc
   17398:	ldr	ip, [r4]
   1739c:	mov	r3, sp
   173a0:	movt	r2, #3
   173a4:	str	ip, [sp, #4]
   173a8:	bl	31b04 <crc32@@Base+0x177a8>
   173ac:	cmp	r0, #0
   173b0:	mvneq	r3, #0
   173b4:	strbeq	r3, [r5]
   173b8:	beq	173c8 <__printf_chk@plt+0x4b9c>
   173bc:	bl	1b23c <crc32@@Base+0xee0>
   173c0:	mov	r3, #0
   173c4:	strb	r0, [r5]
   173c8:	ldr	r2, [sp, #4]
   173cc:	mov	r0, r3
   173d0:	ldr	r3, [r4]
   173d4:	cmp	r2, r3
   173d8:	bne	173e4 <__printf_chk@plt+0x4bb8>
   173dc:	add	sp, sp, #12
   173e0:	pop	{r4, r5, pc}
   173e4:	bl	12538 <__stack_chk_fail@plt>
   173e8:	push	{r4, r5, lr}
   173ec:	movw	r4, #3824	; 0xef0
   173f0:	movt	r4, #5
   173f4:	sub	sp, sp, #12
   173f8:	mov	r5, r2
   173fc:	movw	r2, #44984	; 0xafb8
   17400:	ldr	ip, [r4]
   17404:	mov	r3, sp
   17408:	movt	r2, #3
   1740c:	str	ip, [sp, #4]
   17410:	bl	31b04 <crc32@@Base+0x177a8>
   17414:	cmp	r0, #0
   17418:	mvneq	r3, #0
   1741c:	strbeq	r3, [r5]
   17420:	beq	17430 <__printf_chk@plt+0x4c04>
   17424:	bl	1b254 <crc32@@Base+0xef8>
   17428:	mov	r3, #0
   1742c:	strb	r0, [r5]
   17430:	ldr	r2, [sp, #4]
   17434:	mov	r0, r3
   17438:	ldr	r3, [r4]
   1743c:	cmp	r2, r3
   17440:	bne	1744c <__printf_chk@plt+0x4c20>
   17444:	add	sp, sp, #12
   17448:	pop	{r4, r5, pc}
   1744c:	bl	12538 <__stack_chk_fail@plt>
   17450:	push	{r4, r5, lr}
   17454:	movw	r4, #3824	; 0xef0
   17458:	movt	r4, #5
   1745c:	sub	sp, sp, #12
   17460:	mov	r5, r2
   17464:	movw	r2, #31940	; 0x7cc4
   17468:	ldr	ip, [r4]
   1746c:	mov	r3, sp
   17470:	movt	r2, #3
   17474:	str	ip, [sp, #4]
   17478:	bl	31b04 <crc32@@Base+0x177a8>
   1747c:	cmp	r0, #0
   17480:	mvneq	r3, #0
   17484:	strbeq	r3, [r5]
   17488:	beq	17498 <__printf_chk@plt+0x4c6c>
   1748c:	bl	1b26c <crc32@@Base+0xf10>
   17490:	mov	r3, #0
   17494:	strb	r0, [r5]
   17498:	ldr	r2, [sp, #4]
   1749c:	mov	r0, r3
   174a0:	ldr	r3, [r4]
   174a4:	cmp	r2, r3
   174a8:	bne	174b4 <__printf_chk@plt+0x4c88>
   174ac:	add	sp, sp, #12
   174b0:	pop	{r4, r5, pc}
   174b4:	bl	12538 <__stack_chk_fail@plt>
   174b8:	mov	r3, r2
   174bc:	movw	r2, #31952	; 0x7cd0
   174c0:	movt	r2, #3
   174c4:	b	16e3c <__printf_chk@plt+0x4610>
   174c8:	mov	r3, r2
   174cc:	movw	r2, #31960	; 0x7cd8
   174d0:	movt	r2, #3
   174d4:	b	16e3c <__printf_chk@plt+0x4610>
   174d8:	push	{r4, r5, r6, lr}
   174dc:	movw	r4, #3824	; 0xef0
   174e0:	movt	r4, #5
   174e4:	sub	sp, sp, #8
   174e8:	mov	r6, r3
   174ec:	mov	r5, r2
   174f0:	ldr	ip, [r4]
   174f4:	mov	r3, sp
   174f8:	movw	r2, #45044	; 0xaff4
   174fc:	movt	r2, #3
   17500:	str	ip, [sp, #4]
   17504:	bl	31b04 <crc32@@Base+0x177a8>
   17508:	ldr	r2, [sp, #4]
   1750c:	cmp	r0, #0
   17510:	str	r0, [r5]
   17514:	streq	r0, [r6]
   17518:	ldrne	r3, [sp]
   1751c:	mvneq	r0, #0
   17520:	movne	r0, #0
   17524:	strne	r3, [r6]
   17528:	ldr	r3, [r4]
   1752c:	cmp	r2, r3
   17530:	bne	1753c <__printf_chk@plt+0x4d10>
   17534:	add	sp, sp, #8
   17538:	pop	{r4, r5, r6, pc}
   1753c:	bl	12538 <__stack_chk_fail@plt>
   17540:	mov	r3, #0
   17544:	push	{r4, lr}
   17548:	mov	r4, r2
   1754c:	movw	r2, #32256	; 0x7e00
   17550:	movt	r2, #3
   17554:	bl	31b04 <crc32@@Base+0x177a8>
   17558:	cmp	r0, #0
   1755c:	ldrne	r2, [r0]
   17560:	movne	r0, #0
   17564:	mvneq	r0, #1
   17568:	ubfxne	ip, r2, #8, #8
   1756c:	ubfxne	r1, r2, #16, #8
   17570:	lsrne	r3, r2, #24
   17574:	orrne	r3, r3, r2, lsl #24
   17578:	orrne	r3, r3, ip, lsl #16
   1757c:	orrne	r3, r3, r1, lsl #8
   17580:	strne	r3, [r4]
   17584:	pop	{r4, pc}
   17588:	mov	r3, #0
   1758c:	push	{r4, lr}
   17590:	mov	r4, r2
   17594:	movw	r2, #32320	; 0x7e40
   17598:	movt	r2, #3
   1759c:	bl	31b04 <crc32@@Base+0x177a8>
   175a0:	cmp	r0, #0
   175a4:	ldrne	r2, [r0]
   175a8:	movne	r0, #0
   175ac:	mvneq	r0, #1
   175b0:	ubfxne	ip, r2, #8, #8
   175b4:	ubfxne	r1, r2, #16, #8
   175b8:	lsrne	r3, r2, #24
   175bc:	orrne	r3, r3, r2, lsl #24
   175c0:	orrne	r3, r3, ip, lsl #16
   175c4:	orrne	r3, r3, r1, lsl #8
   175c8:	strne	r3, [r4]
   175cc:	pop	{r4, pc}
   175d0:	mov	r3, #0
   175d4:	push	{r4, lr}
   175d8:	mov	r4, r2
   175dc:	movw	r2, #32268	; 0x7e0c
   175e0:	movt	r2, #3
   175e4:	bl	31b04 <crc32@@Base+0x177a8>
   175e8:	cmp	r0, #0
   175ec:	ldrne	r2, [r0]
   175f0:	movne	r0, #0
   175f4:	mvneq	r0, #1
   175f8:	ubfxne	ip, r2, #8, #8
   175fc:	ubfxne	r1, r2, #16, #8
   17600:	lsrne	r3, r2, #24
   17604:	orrne	r3, r3, r2, lsl #24
   17608:	orrne	r3, r3, ip, lsl #16
   1760c:	orrne	r3, r3, r1, lsl #8
   17610:	strne	r3, [r4]
   17614:	pop	{r4, pc}
   17618:	push	{r4, r5, r6, r7, r8, lr}
   1761c:	movw	r5, #3824	; 0xef0
   17620:	movt	r5, #5
   17624:	sub	sp, sp, #16
   17628:	mov	r6, r2
   1762c:	add	r2, sp, #4
   17630:	ldr	ip, [r5]
   17634:	mov	r7, r3
   17638:	mov	r4, r0
   1763c:	mov	r8, r1
   17640:	str	ip, [sp, #12]
   17644:	bl	17588 <__printf_chk@plt+0x4d5c>
   17648:	cmp	r0, #0
   1764c:	beq	17698 <__printf_chk@plt+0x4e6c>
   17650:	add	r2, sp, #4
   17654:	mov	r1, r8
   17658:	mov	r0, r4
   1765c:	bl	17540 <__printf_chk@plt+0x4d14>
   17660:	cmp	r0, #0
   17664:	bne	176d0 <__printf_chk@plt+0x4ea4>
   17668:	ldr	r2, [r4, #4]
   1766c:	ldr	r1, [sp, #4]
   17670:	ubfx	ip, r2, #8, #8
   17674:	ubfx	r0, r2, #16, #8
   17678:	lsr	r3, r2, #24
   1767c:	orr	r3, r3, r2, lsl #24
   17680:	orr	r3, r3, ip, lsl #16
   17684:	orr	r3, r3, r0, lsl #8
   17688:	add	r3, r3, #3
   1768c:	bic	r3, r3, #3
   17690:	add	r3, r1, r3
   17694:	str	r3, [sp, #4]
   17698:	add	r2, sp, #8
   1769c:	mov	r0, r4
   176a0:	mov	r1, r8
   176a4:	bl	175d0 <__printf_chk@plt+0x4da4>
   176a8:	ldrd	r2, [sp, #4]
   176ac:	add	r4, r4, r2
   176b0:	str	r4, [r6]
   176b4:	str	r3, [r7]
   176b8:	ldr	r2, [sp, #12]
   176bc:	ldr	r3, [r5]
   176c0:	cmp	r2, r3
   176c4:	bne	1770c <__printf_chk@plt+0x4ee0>
   176c8:	add	sp, sp, #16
   176cc:	pop	{r4, r5, r6, r7, r8, pc}
   176d0:	mov	r1, r8
   176d4:	mov	r0, r4
   176d8:	movw	r2, #45044	; 0xaff4
   176dc:	add	r3, sp, #8
   176e0:	movt	r2, #3
   176e4:	bl	31b04 <crc32@@Base+0x177a8>
   176e8:	cmp	r0, #0
   176ec:	str	r0, [r6]
   176f0:	ldrne	r3, [sp, #8]
   176f4:	movne	r0, #0
   176f8:	strne	r3, [r7]
   176fc:	bne	176b8 <__printf_chk@plt+0x4e8c>
   17700:	str	r0, [r7]
   17704:	mvn	r0, #0
   17708:	b	176b8 <__printf_chk@plt+0x4e8c>
   1770c:	bl	12538 <__stack_chk_fail@plt>
   17710:	push	{r4, r5, r6, r7, r8, lr}
   17714:	movw	r7, #3824	; 0xef0
   17718:	movt	r7, #5
   1771c:	sub	sp, sp, #32
   17720:	mov	r6, r2
   17724:	add	r3, sp, #24
   17728:	ldr	ip, [r7]
   1772c:	movw	r2, #31852	; 0x7c6c
   17730:	movt	r2, #3
   17734:	mov	r5, r1
   17738:	mov	r4, r0
   1773c:	str	ip, [sp, #28]
   17740:	bl	31b04 <crc32@@Base+0x177a8>
   17744:	movw	r1, #34260	; 0x85d4
   17748:	mov	r2, r6
   1774c:	movt	r1, #3
   17750:	subs	r8, r0, #0
   17754:	mov	r0, #1
   17758:	beq	179ac <__printf_chk@plt+0x5180>
   1775c:	bl	1282c <__printf_chk@plt>
   17760:	mov	r0, r8
   17764:	bl	12310 <puts@plt>
   17768:	add	r2, sp, #24
   1776c:	mov	r1, #0
   17770:	mov	r0, r4
   17774:	bl	16fb4 <__printf_chk@plt+0x4788>
   17778:	mov	r2, r6
   1777c:	movw	r1, #34280	; 0x85e8
   17780:	movt	r1, #3
   17784:	mov	r8, r0
   17788:	mov	r0, #1
   1778c:	bl	1282c <__printf_chk@plt>
   17790:	cmp	r8, #0
   17794:	beq	179a0 <__printf_chk@plt+0x5174>
   17798:	movw	r0, #34204	; 0x859c
   1779c:	movt	r0, #3
   177a0:	bl	12310 <puts@plt>
   177a4:	add	r2, sp, #4
   177a8:	mov	r1, r5
   177ac:	mov	r0, r4
   177b0:	bl	173e8 <__printf_chk@plt+0x4bbc>
   177b4:	ldrb	r0, [sp, #4]
   177b8:	bl	1afe0 <crc32@@Base+0xc84>
   177bc:	mov	r2, r6
   177c0:	movw	r1, #34300	; 0x85fc
   177c4:	movt	r1, #3
   177c8:	mov	r3, r0
   177cc:	mov	r0, #1
   177d0:	bl	1282c <__printf_chk@plt>
   177d4:	add	r2, sp, #7
   177d8:	mov	r1, r5
   177dc:	mov	r0, r4
   177e0:	bl	17450 <__printf_chk@plt+0x4c24>
   177e4:	ldrb	r0, [sp, #7]
   177e8:	bl	1b088 <crc32@@Base+0xd2c>
   177ec:	mov	r2, r6
   177f0:	movw	r1, #34324	; 0x8614
   177f4:	movt	r1, #3
   177f8:	mov	r3, r0
   177fc:	mov	r0, #1
   17800:	bl	1282c <__printf_chk@plt>
   17804:	add	r3, sp, #8
   17808:	add	r2, sp, #20
   1780c:	mov	r1, r5
   17810:	mov	r0, r4
   17814:	bl	17618 <__printf_chk@plt+0x4dec>
   17818:	mov	r2, r6
   1781c:	movw	r1, #34348	; 0x862c
   17820:	movt	r1, #3
   17824:	mov	r8, r0
   17828:	mov	r0, #1
   1782c:	bl	1282c <__printf_chk@plt>
   17830:	cmp	r8, #0
   17834:	beq	179c0 <__printf_chk@plt+0x5194>
   17838:	movw	r0, #34204	; 0x859c
   1783c:	movt	r0, #3
   17840:	bl	12310 <puts@plt>
   17844:	ldrb	r3, [sp, #4]
   17848:	sub	r2, r3, #1
   1784c:	uxtb	r2, r2
   17850:	cmp	r2, #7
   17854:	bhi	1789c <__printf_chk@plt+0x5070>
   17858:	mov	r1, #151	; 0x97
   1785c:	mvn	r2, r1, lsr r2
   17860:	tst	r2, #1
   17864:	bne	1789c <__printf_chk@plt+0x5070>
   17868:	add	r2, sp, #5
   1786c:	mov	r1, r5
   17870:	mov	r0, r4
   17874:	bl	17380 <__printf_chk@plt+0x4b54>
   17878:	ldrb	r0, [sp, #5]
   1787c:	bl	1af8c <crc32@@Base+0xc30>
   17880:	mov	r2, r6
   17884:	movw	r1, #34368	; 0x8640
   17888:	movt	r1, #3
   1788c:	mov	r3, r0
   17890:	mov	r0, #1
   17894:	bl	1282c <__printf_chk@plt>
   17898:	ldrb	r3, [sp, #4]
   1789c:	sub	r2, r3, #2
   178a0:	cmp	r3, #5
   178a4:	cmpne	r2, #1
   178a8:	bls	17a64 <__printf_chk@plt+0x5238>
   178ac:	cmp	r3, #29
   178b0:	bhi	17918 <__printf_chk@plt+0x50ec>
   178b4:	mov	r2, #46	; 0x2e
   178b8:	movt	r2, #8192	; 0x2000
   178bc:	mvn	r2, r2, lsr r3
   178c0:	tst	r2, #1
   178c4:	bne	17910 <__printf_chk@plt+0x50e4>
   178c8:	add	r3, sp, #12
   178cc:	mov	r1, r5
   178d0:	movw	r2, #31952	; 0x7cd0
   178d4:	mov	r0, r4
   178d8:	movt	r2, #3
   178dc:	bl	16e3c <__printf_chk@plt+0x4610>
   178e0:	mov	r2, r6
   178e4:	movw	r1, #34416	; 0x8670
   178e8:	movt	r1, #3
   178ec:	mov	r8, r0
   178f0:	mov	r0, #1
   178f4:	bl	1282c <__printf_chk@plt>
   178f8:	cmp	r8, #0
   178fc:	beq	179cc <__printf_chk@plt+0x51a0>
   17900:	movw	r0, #34204	; 0x859c
   17904:	movt	r0, #3
   17908:	bl	12310 <puts@plt>
   1790c:	ldrb	r3, [sp, #4]
   17910:	cmp	r3, #8
   17914:	beq	179ec <__printf_chk@plt+0x51c0>
   17918:	sub	r3, r3, #1
   1791c:	cmp	r3, #2
   17920:	bls	17a1c <__printf_chk@plt+0x51f0>
   17924:	mov	r1, r5
   17928:	add	r2, sp, #24
   1792c:	mov	r0, r4
   17930:	mov	r3, #0
   17934:	str	r3, [sp, #24]
   17938:	bl	2e588 <crc32@@Base+0x1422c>
   1793c:	subs	r5, r0, #0
   17940:	bge	17960 <__printf_chk@plt+0x5134>
   17944:	b	17988 <__printf_chk@plt+0x515c>
   17948:	mov	r1, r5
   1794c:	add	r2, sp, #24
   17950:	mov	r0, r4
   17954:	bl	2e588 <crc32@@Base+0x1422c>
   17958:	subs	r5, r0, #0
   1795c:	blt	17988 <__printf_chk@plt+0x515c>
   17960:	ldr	r3, [sp, #24]
   17964:	cmp	r3, #0
   17968:	ble	17988 <__printf_chk@plt+0x515c>
   1796c:	cmp	r3, #1
   17970:	bne	17948 <__printf_chk@plt+0x511c>
   17974:	mov	r2, r6
   17978:	mov	r1, r5
   1797c:	mov	r0, r4
   17980:	bl	17260 <__printf_chk@plt+0x4a34>
   17984:	b	17948 <__printf_chk@plt+0x511c>
   17988:	ldr	r2, [sp, #28]
   1798c:	ldr	r3, [r7]
   17990:	cmp	r2, r3
   17994:	bne	17ad0 <__printf_chk@plt+0x52a4>
   17998:	add	sp, sp, #32
   1799c:	pop	{r4, r5, r6, r7, r8, pc}
   179a0:	ldr	r0, [sp, #24]
   179a4:	bl	1a9a0 <crc32@@Base+0x644>
   179a8:	b	177a4 <__printf_chk@plt+0x4f78>
   179ac:	bl	1282c <__printf_chk@plt>
   179b0:	movw	r0, #34204	; 0x859c
   179b4:	movt	r0, #3
   179b8:	bl	12310 <puts@plt>
   179bc:	b	17768 <__printf_chk@plt+0x4f3c>
   179c0:	ldr	r0, [sp, #8]
   179c4:	bl	1a944 <crc32@@Base+0x5e8>
   179c8:	b	17844 <__printf_chk@plt+0x5018>
   179cc:	movw	r1, #34436	; 0x8684
   179d0:	ldr	r2, [sp, #12]
   179d4:	movt	r1, #3
   179d8:	mov	r0, #1
   179dc:	bl	1282c <__printf_chk@plt>
   179e0:	ldrb	r3, [sp, #4]
   179e4:	cmp	r3, #8
   179e8:	bne	17918 <__printf_chk@plt+0x50ec>
   179ec:	movw	r2, #31952	; 0x7cd0
   179f0:	add	r3, sp, #12
   179f4:	movt	r2, #3
   179f8:	mov	r1, r5
   179fc:	mov	r0, r4
   17a00:	bl	16e3c <__printf_chk@plt+0x4610>
   17a04:	cmp	r0, #0
   17a08:	beq	17ab4 <__printf_chk@plt+0x5288>
   17a0c:	ldrb	r3, [sp, #4]
   17a10:	sub	r3, r3, #1
   17a14:	cmp	r3, #2
   17a18:	bhi	17924 <__printf_chk@plt+0x50f8>
   17a1c:	add	r3, sp, #16
   17a20:	mov	r1, r5
   17a24:	movw	r2, #31960	; 0x7cd8
   17a28:	mov	r0, r4
   17a2c:	movt	r2, #3
   17a30:	bl	16e3c <__printf_chk@plt+0x4610>
   17a34:	mov	r2, r6
   17a38:	movw	r1, #34476	; 0x86ac
   17a3c:	movt	r1, #3
   17a40:	mov	r8, r0
   17a44:	mov	r0, #1
   17a48:	bl	1282c <__printf_chk@plt>
   17a4c:	cmp	r8, #0
   17a50:	beq	17a9c <__printf_chk@plt+0x5270>
   17a54:	movw	r0, #34204	; 0x859c
   17a58:	movt	r0, #3
   17a5c:	bl	12310 <puts@plt>
   17a60:	b	17924 <__printf_chk@plt+0x50f8>
   17a64:	add	r2, sp, #6
   17a68:	mov	r1, r5
   17a6c:	mov	r0, r4
   17a70:	bl	17318 <__printf_chk@plt+0x4aec>
   17a74:	ldrb	r0, [sp, #6]
   17a78:	bl	1af38 <crc32@@Base+0xbdc>
   17a7c:	mov	r2, r6
   17a80:	movw	r1, #34392	; 0x8658
   17a84:	movt	r1, #3
   17a88:	mov	r3, r0
   17a8c:	mov	r0, #1
   17a90:	bl	1282c <__printf_chk@plt>
   17a94:	ldrb	r3, [sp, #4]
   17a98:	b	178ac <__printf_chk@plt+0x5080>
   17a9c:	movw	r1, #34436	; 0x8684
   17aa0:	ldr	r2, [sp, #16]
   17aa4:	movt	r1, #3
   17aa8:	mov	r0, #1
   17aac:	bl	1282c <__printf_chk@plt>
   17ab0:	b	17924 <__printf_chk@plt+0x50f8>
   17ab4:	movw	r1, #34448	; 0x8690
   17ab8:	ldr	r3, [sp, #12]
   17abc:	movt	r1, #3
   17ac0:	mov	r2, r6
   17ac4:	mov	r0, #1
   17ac8:	bl	1282c <__printf_chk@plt>
   17acc:	b	17a0c <__printf_chk@plt+0x51e0>
   17ad0:	bl	12538 <__stack_chk_fail@plt>
   17ad4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ad8:	movw	sl, #3824	; 0xef0
   17adc:	movt	sl, #5
   17ae0:	sub	sp, sp, #44	; 0x2c
   17ae4:	mov	r1, #0
   17ae8:	movw	r2, #31852	; 0x7c6c
   17aec:	ldr	ip, [sl]
   17af0:	movt	r2, #3
   17af4:	add	r3, sp, #32
   17af8:	mov	r4, r0
   17afc:	str	ip, [sp, #36]	; 0x24
   17b00:	bl	31b04 <crc32@@Base+0x177a8>
   17b04:	movw	r2, #50548	; 0xc574
   17b08:	movw	r1, #34496	; 0x86c0
   17b0c:	movt	r2, #3
   17b10:	movt	r1, #3
   17b14:	subs	r5, r0, #0
   17b18:	mov	r0, #1
   17b1c:	beq	17c7c <__printf_chk@plt+0x5450>
   17b20:	bl	1282c <__printf_chk@plt>
   17b24:	mov	r0, r5
   17b28:	bl	12310 <puts@plt>
   17b2c:	add	r2, sp, #28
   17b30:	mov	r1, #0
   17b34:	mov	r0, r4
   17b38:	bl	16fb4 <__printf_chk@plt+0x4788>
   17b3c:	movw	r2, #50548	; 0xc574
   17b40:	movw	r1, #34516	; 0x86d4
   17b44:	movt	r2, #3
   17b48:	movt	r1, #3
   17b4c:	mov	r5, r0
   17b50:	mov	r0, #1
   17b54:	bl	1282c <__printf_chk@plt>
   17b58:	cmp	r5, #0
   17b5c:	beq	17c70 <__printf_chk@plt+0x5444>
   17b60:	movw	r0, #34204	; 0x859c
   17b64:	movt	r0, #3
   17b68:	bl	12310 <puts@plt>
   17b6c:	movw	r1, #31600	; 0x7b70
   17b70:	mov	r0, r4
   17b74:	movt	r1, #3
   17b78:	bl	31e60 <crc32@@Base+0x17b04>
   17b7c:	subs	r1, r0, #0
   17b80:	blt	17fc0 <__printf_chk@plt+0x5794>
   17b84:	add	r7, sp, #40	; 0x28
   17b88:	mov	r8, #0
   17b8c:	mov	r0, r4
   17b90:	str	r8, [r7, #-16]!
   17b94:	mov	r2, r7
   17b98:	bl	2e588 <crc32@@Base+0x1422c>
   17b9c:	subs	r6, r0, #0
   17ba0:	blt	17c40 <__printf_chk@plt+0x5414>
   17ba4:	ldr	r5, [sp, #24]
   17ba8:	cmp	r5, r8
   17bac:	ble	17c40 <__printf_chk@plt+0x5414>
   17bb0:	movw	fp, #34536	; 0x86e8
   17bb4:	movt	fp, #3
   17bb8:	movw	r9, #50548	; 0xc574
   17bbc:	str	sl, [sp, #8]
   17bc0:	movt	r9, #3
   17bc4:	mov	sl, fp
   17bc8:	b	17bf0 <__printf_chk@plt+0x53c4>
   17bcc:	mov	r1, r6
   17bd0:	mov	r2, r7
   17bd4:	mov	r0, r4
   17bd8:	bl	2e588 <crc32@@Base+0x1422c>
   17bdc:	subs	r6, r0, #0
   17be0:	blt	17c3c <__printf_chk@plt+0x5410>
   17be4:	ldr	r5, [sp, #24]
   17be8:	cmp	r5, #0
   17bec:	ble	17c3c <__printf_chk@plt+0x5410>
   17bf0:	cmp	r5, #1
   17bf4:	bne	17bcc <__printf_chk@plt+0x53a0>
   17bf8:	mov	r1, r6
   17bfc:	mov	r2, #0
   17c00:	mov	r0, r4
   17c04:	add	fp, r8, #1
   17c08:	bl	31804 <crc32@@Base+0x174a8>
   17c0c:	mov	r3, r8
   17c10:	mov	r2, r9
   17c14:	mov	r1, sl
   17c18:	mov	r8, fp
   17c1c:	str	r0, [sp]
   17c20:	mov	r0, r5
   17c24:	bl	1282c <__printf_chk@plt>
   17c28:	mov	r2, r9
   17c2c:	mov	r1, r6
   17c30:	mov	r0, r4
   17c34:	bl	17710 <__printf_chk@plt+0x4ee4>
   17c38:	b	17bcc <__printf_chk@plt+0x53a0>
   17c3c:	ldr	sl, [sp, #8]
   17c40:	movw	r1, #32660	; 0x7f94
   17c44:	mov	r0, r4
   17c48:	movt	r1, #3
   17c4c:	bl	31e60 <crc32@@Base+0x17b04>
   17c50:	subs	r5, r0, #0
   17c54:	bge	17c90 <__printf_chk@plt+0x5464>
   17c58:	ldr	r2, [sp, #36]	; 0x24
   17c5c:	ldr	r3, [sl]
   17c60:	cmp	r2, r3
   17c64:	bne	18008 <__printf_chk@plt+0x57dc>
   17c68:	add	sp, sp, #44	; 0x2c
   17c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c70:	ldr	r0, [sp, #28]
   17c74:	bl	1a9a0 <crc32@@Base+0x644>
   17c78:	b	17b6c <__printf_chk@plt+0x5340>
   17c7c:	bl	1282c <__printf_chk@plt>
   17c80:	movw	r0, #34204	; 0x859c
   17c84:	movt	r0, #3
   17c88:	bl	12310 <puts@plt>
   17c8c:	b	17b2c <__printf_chk@plt+0x5300>
   17c90:	mov	r3, #0
   17c94:	mov	r1, r6
   17c98:	movw	r2, #32024	; 0x7d18
   17c9c:	mov	r0, r4
   17ca0:	movt	r2, #3
   17ca4:	bl	31b04 <crc32@@Base+0x177a8>
   17ca8:	subs	r3, r0, #0
   17cac:	beq	17cc8 <__printf_chk@plt+0x549c>
   17cb0:	movw	r2, #50548	; 0xc574
   17cb4:	movw	r1, #34556	; 0x86fc
   17cb8:	movt	r2, #3
   17cbc:	movt	r1, #3
   17cc0:	mov	r0, #1
   17cc4:	bl	1282c <__printf_chk@plt>
   17cc8:	mov	r1, r5
   17ccc:	mov	r2, r7
   17cd0:	mov	r0, r4
   17cd4:	mov	r9, #0
   17cd8:	str	r9, [sp, #24]
   17cdc:	bl	2e588 <crc32@@Base+0x1422c>
   17ce0:	subs	r5, r0, #0
   17ce4:	blt	17c58 <__printf_chk@plt+0x542c>
   17ce8:	ldr	r6, [sp, #24]
   17cec:	cmp	r6, r9
   17cf0:	ble	17c58 <__printf_chk@plt+0x542c>
   17cf4:	movw	r8, #50548	; 0xc574
   17cf8:	movw	r3, #34588	; 0x871c
   17cfc:	movt	r8, #3
   17d00:	movt	r3, #3
   17d04:	str	sl, [sp, #20]
   17d08:	str	r3, [sp, #12]
   17d0c:	movw	r3, #31852	; 0x7c6c
   17d10:	movt	r3, #3
   17d14:	str	r3, [sp, #16]
   17d18:	b	17d40 <__printf_chk@plt+0x5514>
   17d1c:	mov	r1, r5
   17d20:	mov	r2, r7
   17d24:	mov	r0, r4
   17d28:	bl	2e588 <crc32@@Base+0x1422c>
   17d2c:	subs	r5, r0, #0
   17d30:	blt	17fec <__printf_chk@plt+0x57c0>
   17d34:	ldr	r6, [sp, #24]
   17d38:	cmp	r6, #0
   17d3c:	ble	17fec <__printf_chk@plt+0x57c0>
   17d40:	cmp	r6, #1
   17d44:	bne	17d1c <__printf_chk@plt+0x54f0>
   17d48:	mov	r2, #0
   17d4c:	mov	r1, r5
   17d50:	mov	r0, r4
   17d54:	add	r3, r9, #1
   17d58:	str	r3, [sp, #8]
   17d5c:	bl	31804 <crc32@@Base+0x174a8>
   17d60:	mov	r3, r9
   17d64:	mov	r2, r8
   17d68:	ldr	r1, [sp, #12]
   17d6c:	str	r0, [sp]
   17d70:	mov	r0, r6
   17d74:	bl	1282c <__printf_chk@plt>
   17d78:	ldr	r2, [sp, #16]
   17d7c:	mov	r1, r5
   17d80:	add	r3, sp, #32
   17d84:	mov	r0, r4
   17d88:	bl	31b04 <crc32@@Base+0x177a8>
   17d8c:	movw	r1, #34260	; 0x85d4
   17d90:	mov	r2, r8
   17d94:	movt	r1, #3
   17d98:	subs	r9, r0, #0
   17d9c:	mov	r0, r6
   17da0:	beq	17ff4 <__printf_chk@plt+0x57c8>
   17da4:	bl	1282c <__printf_chk@plt>
   17da8:	mov	r0, r9
   17dac:	bl	12310 <puts@plt>
   17db0:	mov	r3, #0
   17db4:	mov	r1, r5
   17db8:	movw	r2, #34616	; 0x8738
   17dbc:	mov	r0, r4
   17dc0:	movt	r2, #3
   17dc4:	bl	31b04 <crc32@@Base+0x177a8>
   17dc8:	mov	r2, r8
   17dcc:	movw	r1, #34624	; 0x8740
   17dd0:	movt	r1, #3
   17dd4:	mov	r6, r0
   17dd8:	mov	r0, #1
   17ddc:	bl	1282c <__printf_chk@plt>
   17de0:	cmp	r6, #0
   17de4:	movweq	r0, #34204	; 0x859c
   17de8:	movne	r0, r6
   17dec:	movteq	r0, #3
   17df0:	bl	12310 <puts@plt>
   17df4:	mov	r3, #0
   17df8:	movw	r2, #31992	; 0x7cf8
   17dfc:	mov	r1, r5
   17e00:	movt	r2, #3
   17e04:	mov	r0, r4
   17e08:	bl	31b04 <crc32@@Base+0x177a8>
   17e0c:	subs	r3, r0, #0
   17e10:	beq	17e28 <__printf_chk@plt+0x55fc>
   17e14:	movw	r1, #34644	; 0x8754
   17e18:	mov	r2, r8
   17e1c:	movt	r1, #3
   17e20:	mov	r0, #1
   17e24:	bl	1282c <__printf_chk@plt>
   17e28:	mov	r3, #0
   17e2c:	movw	r2, #46180	; 0xb464
   17e30:	mov	r1, r5
   17e34:	movt	r2, #3
   17e38:	mov	r0, r4
   17e3c:	bl	31b04 <crc32@@Base+0x177a8>
   17e40:	subs	r3, r0, #0
   17e44:	beq	17e5c <__printf_chk@plt+0x5630>
   17e48:	movw	r1, #34668	; 0x876c
   17e4c:	mov	r2, r8
   17e50:	movt	r1, #3
   17e54:	mov	r0, #1
   17e58:	bl	1282c <__printf_chk@plt>
   17e5c:	movw	r9, #31968	; 0x7ce0
   17e60:	movw	fp, #34712	; 0x8798
   17e64:	movt	r9, #3
   17e68:	movt	fp, #3
   17e6c:	mov	r6, #0
   17e70:	b	17ea0 <__printf_chk@plt+0x5674>
   17e74:	cmp	r6, #0
   17e78:	mov	r0, #1
   17e7c:	add	r6, r6, #1
   17e80:	movweq	r1, #34692	; 0x8784
   17e84:	moveq	r2, r8
   17e88:	movteq	r1, #3
   17e8c:	movne	r2, r8
   17e90:	movne	r1, fp
   17e94:	bl	1282c <__printf_chk@plt>
   17e98:	mov	r0, sl
   17e9c:	bl	12310 <puts@plt>
   17ea0:	mov	r2, #0
   17ea4:	mov	r3, r6
   17ea8:	str	r2, [sp]
   17eac:	mov	r1, r5
   17eb0:	mov	r2, r9
   17eb4:	mov	r0, r4
   17eb8:	bl	3250c <crc32@@Base+0x181b0>
   17ebc:	subs	sl, r0, #0
   17ec0:	bne	17e74 <__printf_chk@plt+0x5648>
   17ec4:	mov	r3, sl
   17ec8:	movw	r2, #34732	; 0x87ac
   17ecc:	mov	r1, r5
   17ed0:	movt	r2, #3
   17ed4:	mov	r0, r4
   17ed8:	bl	31b04 <crc32@@Base+0x177a8>
   17edc:	subs	r3, r0, #0
   17ee0:	beq	17ef8 <__printf_chk@plt+0x56cc>
   17ee4:	movw	r1, #34740	; 0x87b4
   17ee8:	mov	r2, r8
   17eec:	movt	r1, #3
   17ef0:	mov	r0, #1
   17ef4:	bl	1282c <__printf_chk@plt>
   17ef8:	movw	r9, #32040	; 0x7d28
   17efc:	movw	fp, #34712	; 0x8798
   17f00:	movt	r9, #3
   17f04:	movt	fp, #3
   17f08:	mov	r6, #0
   17f0c:	b	17f3c <__printf_chk@plt+0x5710>
   17f10:	cmp	r6, #0
   17f14:	mov	r0, #1
   17f18:	add	r6, r6, #1
   17f1c:	movweq	r1, #34764	; 0x87cc
   17f20:	moveq	r2, r8
   17f24:	movteq	r1, #3
   17f28:	movne	r2, r8
   17f2c:	movne	r1, fp
   17f30:	bl	1282c <__printf_chk@plt>
   17f34:	mov	r0, sl
   17f38:	bl	12310 <puts@plt>
   17f3c:	mov	r2, #0
   17f40:	mov	r3, r6
   17f44:	str	r2, [sp]
   17f48:	mov	r1, r5
   17f4c:	mov	r2, r9
   17f50:	mov	r0, r4
   17f54:	bl	3250c <crc32@@Base+0x181b0>
   17f58:	subs	sl, r0, #0
   17f5c:	bne	17f10 <__printf_chk@plt+0x56e4>
   17f60:	add	r2, sp, #32
   17f64:	mov	r1, r5
   17f68:	mov	r0, r4
   17f6c:	str	sl, [sp, #32]
   17f70:	bl	2e588 <crc32@@Base+0x1422c>
   17f74:	subs	r6, r0, #0
   17f78:	bge	17f98 <__printf_chk@plt+0x576c>
   17f7c:	b	17fe4 <__printf_chk@plt+0x57b8>
   17f80:	mov	r1, r6
   17f84:	add	r2, sp, #32
   17f88:	mov	r0, r4
   17f8c:	bl	2e588 <crc32@@Base+0x1422c>
   17f90:	subs	r6, r0, #0
   17f94:	blt	17fe4 <__printf_chk@plt+0x57b8>
   17f98:	ldr	r3, [sp, #32]
   17f9c:	cmp	r3, #0
   17fa0:	ble	17fe4 <__printf_chk@plt+0x57b8>
   17fa4:	cmp	r3, #1
   17fa8:	bne	17f80 <__printf_chk@plt+0x5754>
   17fac:	mov	r2, r8
   17fb0:	mov	r1, r6
   17fb4:	mov	r0, r4
   17fb8:	bl	17260 <__printf_chk@plt+0x4a34>
   17fbc:	b	17f80 <__printf_chk@plt+0x5754>
   17fc0:	bl	303c0 <crc32@@Base+0x16064>
   17fc4:	movw	r2, #31600	; 0x7b70
   17fc8:	movw	r1, #31608	; 0x7b78
   17fcc:	movt	r2, #3
   17fd0:	movt	r1, #3
   17fd4:	mov	r3, r0
   17fd8:	mov	r0, #1
   17fdc:	bl	1282c <__printf_chk@plt>
   17fe0:	b	17c58 <__printf_chk@plt+0x542c>
   17fe4:	ldr	r9, [sp, #8]
   17fe8:	b	17d1c <__printf_chk@plt+0x54f0>
   17fec:	ldr	sl, [sp, #20]
   17ff0:	b	17c58 <__printf_chk@plt+0x542c>
   17ff4:	bl	1282c <__printf_chk@plt>
   17ff8:	movw	r0, #34204	; 0x859c
   17ffc:	movt	r0, #3
   18000:	bl	12310 <puts@plt>
   18004:	b	17db0 <__printf_chk@plt+0x5584>
   18008:	bl	12538 <__stack_chk_fail@plt>
   1800c:	push	{r4, r5, lr}
   18010:	movw	r4, #3824	; 0xef0
   18014:	movt	r4, #5
   18018:	sub	sp, sp, #12
   1801c:	mov	r5, r2
   18020:	movw	r2, #34108	; 0x853c
   18024:	ldr	ip, [r4]
   18028:	mov	r3, sp
   1802c:	movt	r2, #3
   18030:	str	ip, [sp, #4]
   18034:	bl	31b04 <crc32@@Base+0x177a8>
   18038:	ldr	r2, [sp, #4]
   1803c:	str	r0, [r5]
   18040:	ldr	r3, [r4]
   18044:	cmp	r2, r3
   18048:	bne	18060 <__printf_chk@plt+0x5834>
   1804c:	clz	r0, r0
   18050:	lsr	r0, r0, #5
   18054:	rsb	r0, r0, #0
   18058:	add	sp, sp, #12
   1805c:	pop	{r4, r5, pc}
   18060:	bl	12538 <__stack_chk_fail@plt>
   18064:	push	{r4, r5, r6, lr}
   18068:	movw	r4, #3824	; 0xef0
   1806c:	movt	r4, #5
   18070:	sub	sp, sp, #8
   18074:	mov	r6, r3
   18078:	mov	r5, r2
   1807c:	ldr	ip, [r4]
   18080:	mov	r3, sp
   18084:	movw	r2, #32576	; 0x7f40
   18088:	movt	r2, #3
   1808c:	str	ip, [sp, #4]
   18090:	bl	31b04 <crc32@@Base+0x177a8>
   18094:	ldr	r2, [sp, #4]
   18098:	cmp	r0, #0
   1809c:	str	r0, [r5]
   180a0:	streq	r0, [r6]
   180a4:	ldrne	r3, [sp]
   180a8:	mvneq	r0, #0
   180ac:	movne	r0, #0
   180b0:	strne	r3, [r6]
   180b4:	ldr	r3, [r4]
   180b8:	cmp	r2, r3
   180bc:	bne	180c8 <__printf_chk@plt+0x589c>
   180c0:	add	sp, sp, #8
   180c4:	pop	{r4, r5, r6, pc}
   180c8:	bl	12538 <__stack_chk_fail@plt>
   180cc:	ldr	r2, [r0, #4]
   180d0:	ubfx	ip, r2, #8, #8
   180d4:	ubfx	r1, r2, #16, #8
   180d8:	lsr	r3, r2, #24
   180dc:	orr	r3, r3, r2, lsl #24
   180e0:	orr	r3, r3, ip, lsl #16
   180e4:	orr	r3, r3, r1, lsl #8
   180e8:	add	r0, r0, r3
   180ec:	bx	lr
   180f0:	push	{r4, lr}
   180f4:	movw	r4, #3824	; 0xef0
   180f8:	movt	r4, #5
   180fc:	sub	sp, sp, #16
   18100:	add	r3, sp, #16
   18104:	rev	r2, r2
   18108:	ldr	ip, [r4]
   1810c:	str	r2, [r3, #-8]!
   18110:	mov	r2, #4
   18114:	str	r2, [sp]
   18118:	movw	r2, #34076	; 0x851c
   1811c:	movt	r2, #3
   18120:	str	ip, [sp, #12]
   18124:	bl	2fbb8 <crc32@@Base+0x1585c>
   18128:	cmp	r0, #0
   1812c:	beq	1813c <__printf_chk@plt+0x5910>
   18130:	cmn	r0, #3
   18134:	mvnne	r0, #0
   18138:	mvneq	r0, #27
   1813c:	ldr	r2, [sp, #12]
   18140:	ldr	r3, [r4]
   18144:	cmp	r2, r3
   18148:	bne	18154 <__printf_chk@plt+0x5928>
   1814c:	add	sp, sp, #16
   18150:	pop	{r4, pc}
   18154:	bl	12538 <__stack_chk_fail@plt>
   18158:	push	{r4, r5, r6, r7, r8, lr}
   1815c:	mov	r7, r1
   18160:	mov	r6, r0
   18164:	movw	r1, #34784	; 0x87e0
   18168:	mov	r0, r2
   1816c:	movt	r1, #3
   18170:	mov	r5, r2
   18174:	mov	r8, r3
   18178:	bl	12718 <strcmp@plt>
   1817c:	subs	r4, r0, #0
   18180:	beq	18240 <__printf_chk@plt+0x5a14>
   18184:	movw	r1, #34792	; 0x87e8
   18188:	mov	r0, r5
   1818c:	movt	r1, #3
   18190:	bl	12718 <strcmp@plt>
   18194:	subs	r4, r0, #0
   18198:	beq	1820c <__printf_chk@plt+0x59e0>
   1819c:	movw	r1, #34800	; 0x87f0
   181a0:	mov	r0, r5
   181a4:	movt	r1, #3
   181a8:	bl	12718 <strcmp@plt>
   181ac:	subs	r4, r0, #0
   181b0:	beq	1826c <__printf_chk@plt+0x5a40>
   181b4:	ldrb	r3, [r5]
   181b8:	cmp	r3, #109	; 0x6d
   181bc:	bne	18234 <__printf_chk@plt+0x5a08>
   181c0:	ldrb	r3, [r5, #1]
   181c4:	cmp	r3, #100	; 0x64
   181c8:	bne	18234 <__printf_chk@plt+0x5a08>
   181cc:	ldrb	r3, [r5, #2]
   181d0:	cmp	r3, #53	; 0x35
   181d4:	bne	18234 <__printf_chk@plt+0x5a08>
   181d8:	ldrb	r4, [r5, #3]
   181dc:	cmp	r4, #0
   181e0:	bne	18234 <__printf_chk@plt+0x5a08>
   181e4:	mov	r2, r8
   181e8:	mov	r0, r6
   181ec:	mov	r1, r7
   181f0:	mov	r3, #65536	; 0x10000
   181f4:	bl	22400 <crc32@@Base+0x80a4>
   181f8:	ldr	r2, [sp, #24]
   181fc:	mov	r3, #16
   18200:	mov	r0, r4
   18204:	str	r3, [r2]
   18208:	pop	{r4, r5, r6, r7, r8, pc}
   1820c:	mov	r2, r8
   18210:	mov	r0, r6
   18214:	mov	r1, r7
   18218:	mov	r3, #65536	; 0x10000
   1821c:	bl	288f8 <crc32@@Base+0xe59c>
   18220:	ldr	r2, [sp, #24]
   18224:	mov	r3, #20
   18228:	mov	r0, r4
   1822c:	str	r3, [r2]
   18230:	pop	{r4, r5, r6, r7, r8, pc}
   18234:	mvn	r4, #0
   18238:	mov	r0, r4
   1823c:	pop	{r4, r5, r6, r7, r8, pc}
   18240:	mov	r2, r7
   18244:	mov	r1, r6
   18248:	mov	r3, #65536	; 0x10000
   1824c:	bl	1a370 <crc32@@Base+0x14>
   18250:	ldr	r2, [sp, #24]
   18254:	mov	r3, #4
   18258:	rev	r0, r0
   1825c:	str	r0, [r8]
   18260:	str	r3, [r2]
   18264:	mov	r0, r4
   18268:	pop	{r4, r5, r6, r7, r8, pc}
   1826c:	mov	r2, r8
   18270:	mov	r0, r6
   18274:	mov	r1, r7
   18278:	mov	r3, #65536	; 0x10000
   1827c:	bl	2b140 <crc32@@Base+0x10de4>
   18280:	ldr	r2, [sp, #24]
   18284:	mov	r3, #32
   18288:	mov	r0, r4
   1828c:	str	r3, [r2]
   18290:	pop	{r4, r5, r6, r7, r8, pc}
   18294:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18298:	movw	r6, #3824	; 0xef0
   1829c:	movt	r6, #5
   182a0:	sub	sp, sp, #76	; 0x4c
   182a4:	mov	r5, r0
   182a8:	add	r4, sp, #72	; 0x48
   182ac:	ldr	r0, [r6]
   182b0:	mov	r9, r1
   182b4:	mov	fp, r2
   182b8:	mov	r8, r3
   182bc:	mov	r2, #1
   182c0:	movw	r3, #50548	; 0xc574
   182c4:	str	r2, [r4, #-44]!	; 0xffffffd4
   182c8:	movt	r3, #3
   182cc:	str	r0, [sp, #68]	; 0x44
   182d0:	str	r3, [sp, #24]
   182d4:	bl	19458 <__printf_chk@plt+0x6c2c>
   182d8:	str	r4, [sp, #4]
   182dc:	mov	r3, r8
   182e0:	mov	r2, fp
   182e4:	mov	r1, r9
   182e8:	str	r0, [sp]
   182ec:	mov	r0, r5
   182f0:	bl	19840 <__printf_chk@plt+0x7014>
   182f4:	cmp	r0, #0
   182f8:	beq	1836c <__printf_chk@plt+0x5b40>
   182fc:	movw	r2, #34808	; 0x87f8
   18300:	movt	r2, #3
   18304:	mov	r4, #0
   18308:	str	r2, [sp, #24]
   1830c:	mov	r7, r2
   18310:	mov	r1, r4
   18314:	mov	r2, #0
   18318:	mov	r0, r5
   1831c:	bl	31804 <crc32@@Base+0x174a8>
   18320:	mov	r1, r9
   18324:	mov	r2, #0
   18328:	mov	r4, r0
   1832c:	mov	r0, r5
   18330:	bl	31804 <crc32@@Base+0x174a8>
   18334:	mov	r3, r4
   18338:	mov	r2, r7
   1833c:	movw	r1, #35008	; 0x88c0
   18340:	movt	r1, #3
   18344:	str	r0, [sp]
   18348:	mov	r0, #1
   1834c:	bl	1282c <__printf_chk@plt>
   18350:	mov	r0, #0
   18354:	ldr	r2, [sp, #68]	; 0x44
   18358:	ldr	r3, [r6]
   1835c:	cmp	r2, r3
   18360:	bne	185b0 <__printf_chk@plt+0x5d84>
   18364:	add	sp, sp, #76	; 0x4c
   18368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1836c:	mov	r1, r9
   18370:	mov	r0, r5
   18374:	bl	2e678 <crc32@@Base+0x1431c>
   18378:	subs	r4, r0, #0
   1837c:	blt	18500 <__printf_chk@plt+0x5cd4>
   18380:	movw	r3, #33528	; 0x82f8
   18384:	movt	r3, #3
   18388:	str	r3, [sp, #12]
   1838c:	movw	r3, #35000	; 0x88b8
   18390:	movt	r3, #3
   18394:	movw	r7, #32876	; 0x806c
   18398:	str	r6, [sp, #20]
   1839c:	movt	r7, #3
   183a0:	str	r9, [sp, #16]
   183a4:	mov	r6, r3
   183a8:	b	183e4 <__printf_chk@plt+0x5bb8>
   183ac:	ldr	r3, [sp, #28]
   183b0:	cmp	r3, #0
   183b4:	beq	183d0 <__printf_chk@plt+0x5ba4>
   183b8:	mov	r0, r9
   183bc:	mov	r2, #9
   183c0:	ldr	r1, [sp, #12]
   183c4:	bl	12220 <strncmp@plt>
   183c8:	cmp	r0, #0
   183cc:	beq	184bc <__printf_chk@plt+0x5c90>
   183d0:	mov	r1, r4
   183d4:	mov	r0, r5
   183d8:	bl	2e6d8 <crc32@@Base+0x1437c>
   183dc:	subs	r4, r0, #0
   183e0:	blt	184f8 <__printf_chk@plt+0x5ccc>
   183e4:	mov	r2, #0
   183e8:	mov	r1, r4
   183ec:	mov	r0, r5
   183f0:	bl	31804 <crc32@@Base+0x174a8>
   183f4:	mov	r2, #4
   183f8:	mov	r1, r7
   183fc:	mov	r9, r0
   18400:	bl	12220 <strncmp@plt>
   18404:	subs	ip, r0, #0
   18408:	bne	183ac <__printf_chk@plt+0x5b80>
   1840c:	movw	r2, #34108	; 0x853c
   18410:	mov	r1, r4
   18414:	movt	r2, #3
   18418:	add	r3, sp, #32
   1841c:	mov	r0, r5
   18420:	str	ip, [sp, #24]
   18424:	bl	31b04 <crc32@@Base+0x177a8>
   18428:	subs	r9, r0, #0
   1842c:	beq	18578 <__printf_chk@plt+0x5d4c>
   18430:	mov	r2, r9
   18434:	movw	r1, #59924	; 0xea14
   18438:	mov	r0, #1
   1843c:	movt	r1, #3
   18440:	bl	1282c <__printf_chk@plt>
   18444:	add	r3, sp, #32
   18448:	movw	r2, #32576	; 0x7f40
   1844c:	mov	r1, r4
   18450:	movt	r2, #3
   18454:	mov	r0, r5
   18458:	bl	31b04 <crc32@@Base+0x177a8>
   1845c:	subs	sl, r0, #0
   18460:	beq	18594 <__printf_chk@plt+0x5d68>
   18464:	add	r3, sp, #32
   18468:	mov	r2, r9
   1846c:	str	r3, [sp]
   18470:	mov	r1, r8
   18474:	add	r3, sp, #36	; 0x24
   18478:	mov	r0, fp
   1847c:	ldr	r9, [sp, #32]
   18480:	bl	18158 <__printf_chk@plt+0x592c>
   18484:	cmp	r0, #0
   18488:	bne	18540 <__printf_chk@plt+0x5d14>
   1848c:	ldr	r3, [sp, #32]
   18490:	cmp	r9, r3
   18494:	bne	18524 <__printf_chk@plt+0x5cf8>
   18498:	mov	r2, r9
   1849c:	mov	r1, sl
   184a0:	add	r0, sp, #36	; 0x24
   184a4:	bl	12784 <memcmp@plt>
   184a8:	cmp	r0, #0
   184ac:	bne	1855c <__printf_chk@plt+0x5d30>
   184b0:	mov	r0, r6
   184b4:	bl	12310 <puts@plt>
   184b8:	b	183d0 <__printf_chk@plt+0x5ba4>
   184bc:	add	r3, sp, #24
   184c0:	mvn	r2, #0
   184c4:	str	r3, [sp, #4]
   184c8:	mov	r1, r4
   184cc:	str	r2, [sp]
   184d0:	mov	r3, r8
   184d4:	mov	r2, fp
   184d8:	mov	r0, r5
   184dc:	bl	19724 <__printf_chk@plt+0x6ef8>
   184e0:	cmp	r0, #0
   184e4:	beq	184b0 <__printf_chk@plt+0x5c84>
   184e8:	movw	r0, #35004	; 0x88bc
   184ec:	movt	r0, #3
   184f0:	bl	12310 <puts@plt>
   184f4:	b	183d0 <__printf_chk@plt+0x5ba4>
   184f8:	ldr	r9, [sp, #16]
   184fc:	ldr	r6, [sp, #20]
   18500:	cmn	r4, #8
   18504:	cmnne	r4, #11
   18508:	movne	r0, #1
   1850c:	bne	18354 <__printf_chk@plt+0x5b28>
   18510:	movw	r2, #34876	; 0x883c
   18514:	movt	r2, #3
   18518:	str	r2, [sp, #24]
   1851c:	mov	r7, r2
   18520:	b	18310 <__printf_chk@plt+0x5ae4>
   18524:	movw	r2, #34952	; 0x8888
   18528:	movt	r2, #3
   1852c:	ldr	r9, [sp, #16]
   18530:	ldr	r6, [sp, #20]
   18534:	mov	r7, r2
   18538:	str	r2, [sp, #24]
   1853c:	b	18310 <__printf_chk@plt+0x5ae4>
   18540:	movw	r2, #34972	; 0x889c
   18544:	movt	r2, #3
   18548:	ldr	r9, [sp, #16]
   1854c:	ldr	r6, [sp, #20]
   18550:	mov	r7, r2
   18554:	str	r2, [sp, #24]
   18558:	b	18310 <__printf_chk@plt+0x5ae4>
   1855c:	movw	r2, #34936	; 0x8878
   18560:	movt	r2, #3
   18564:	ldr	r9, [sp, #16]
   18568:	ldr	r6, [sp, #20]
   1856c:	mov	r7, r2
   18570:	str	r2, [sp, #24]
   18574:	b	18310 <__printf_chk@plt+0x5ae4>
   18578:	movw	r2, #34904	; 0x8858
   1857c:	movt	r2, #3
   18580:	ldr	r9, [sp, #16]
   18584:	ldr	r6, [sp, #20]
   18588:	mov	r7, r2
   1858c:	str	r2, [sp, #24]
   18590:	b	18310 <__printf_chk@plt+0x5ae4>
   18594:	movw	r2, #34844	; 0x881c
   18598:	movt	r2, #3
   1859c:	ldr	r9, [sp, #16]
   185a0:	ldr	r6, [sp, #20]
   185a4:	mov	r7, r2
   185a8:	str	r2, [sp, #24]
   185ac:	b	18310 <__printf_chk@plt+0x5ae4>
   185b0:	bl	12538 <__stack_chk_fail@plt>
   185b4:	push	{r4, r5, r6, r7, lr}
   185b8:	movw	r4, #3824	; 0xef0
   185bc:	movt	r4, #5
   185c0:	sub	sp, sp, #28
   185c4:	add	r3, sp, #16
   185c8:	add	r2, sp, #12
   185cc:	ldr	ip, [r4]
   185d0:	mov	r5, r0
   185d4:	mov	r6, r1
   185d8:	str	ip, [sp, #20]
   185dc:	bl	17618 <__printf_chk@plt+0x4dec>
   185e0:	cmp	r0, #0
   185e4:	bne	18610 <__printf_chk@plt+0x5de4>
   185e8:	mov	r1, r6
   185ec:	mov	r0, r5
   185f0:	ldrd	r2, [sp, #12]
   185f4:	bl	18294 <__printf_chk@plt+0x5a68>
   185f8:	ldr	r2, [sp, #20]
   185fc:	ldr	r3, [r4]
   18600:	cmp	r2, r3
   18604:	bne	1865c <__printf_chk@plt+0x5e30>
   18608:	add	sp, sp, #28
   1860c:	pop	{r4, r5, r6, r7, pc}
   18610:	mov	r2, #0
   18614:	mov	r0, r5
   18618:	mov	r1, r2
   1861c:	bl	31804 <crc32@@Base+0x174a8>
   18620:	mov	r1, r6
   18624:	mov	r2, #0
   18628:	mov	r7, r0
   1862c:	mov	r0, r5
   18630:	bl	31804 <crc32@@Base+0x174a8>
   18634:	mov	r3, r7
   18638:	movw	r2, #33252	; 0x81e4
   1863c:	movw	r1, #35060	; 0x88f4
   18640:	movt	r2, #3
   18644:	movt	r1, #3
   18648:	str	r0, [sp]
   1864c:	mov	r0, #1
   18650:	bl	1282c <__printf_chk@plt>
   18654:	mov	r0, #0
   18658:	b	185f8 <__printf_chk@plt+0x5dcc>
   1865c:	bl	12538 <__stack_chk_fail@plt>
   18660:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18664:	movw	r9, #3824	; 0xef0
   18668:	movt	r9, #5
   1866c:	sub	sp, sp, #8
   18670:	movw	r1, #31600	; 0x7b70
   18674:	movt	r1, #3
   18678:	ldr	r3, [r9]
   1867c:	mov	r6, r0
   18680:	str	r3, [sp, #4]
   18684:	bl	31e60 <crc32@@Base+0x17b04>
   18688:	subs	r4, r0, #0
   1868c:	blt	18770 <__printf_chk@plt+0x5f44>
   18690:	add	r8, sp, #8
   18694:	mov	r2, r6
   18698:	movw	r1, #35112	; 0x8928
   1869c:	mov	r0, #1
   186a0:	movt	r1, #3
   186a4:	mov	r7, #0
   186a8:	bl	1282c <__printf_chk@plt>
   186ac:	str	r7, [r8, #-8]!
   186b0:	mov	r1, r4
   186b4:	mov	r0, r6
   186b8:	mov	r2, r8
   186bc:	bl	2e588 <crc32@@Base+0x1422c>
   186c0:	subs	r5, r0, #0
   186c4:	blt	18754 <__printf_chk@plt+0x5f28>
   186c8:	ldr	r4, [sp]
   186cc:	cmp	r4, r7
   186d0:	ble	18754 <__printf_chk@plt+0x5f28>
   186d4:	movw	sl, #35164	; 0x895c
   186d8:	movt	sl, #3
   186dc:	b	18704 <__printf_chk@plt+0x5ed8>
   186e0:	mov	r1, r5
   186e4:	mov	r2, r8
   186e8:	mov	r0, r6
   186ec:	bl	2e588 <crc32@@Base+0x1422c>
   186f0:	subs	r5, r0, #0
   186f4:	blt	18754 <__printf_chk@plt+0x5f28>
   186f8:	ldr	r4, [sp]
   186fc:	cmp	r4, #0
   18700:	ble	18754 <__printf_chk@plt+0x5f28>
   18704:	cmp	r4, #1
   18708:	bne	186e0 <__printf_chk@plt+0x5eb4>
   1870c:	mov	r2, #0
   18710:	mov	r1, r5
   18714:	mov	r0, r6
   18718:	bl	31804 <crc32@@Base+0x174a8>
   1871c:	mov	r2, r7
   18720:	mov	r1, sl
   18724:	add	r7, r7, #1
   18728:	mov	r3, r0
   1872c:	mov	r0, r4
   18730:	bl	1282c <__printf_chk@plt>
   18734:	mov	r1, r5
   18738:	mov	r0, r6
   1873c:	bl	185b4 <__printf_chk@plt+0x5d88>
   18740:	cmp	r0, #0
   18744:	beq	18758 <__printf_chk@plt+0x5f2c>
   18748:	mov	r0, #10
   1874c:	bl	1237c <putchar@plt>
   18750:	b	186e0 <__printf_chk@plt+0x5eb4>
   18754:	mov	r0, #1
   18758:	ldr	r2, [sp, #4]
   1875c:	ldr	r3, [r9]
   18760:	cmp	r2, r3
   18764:	bne	18798 <__printf_chk@plt+0x5f6c>
   18768:	add	sp, sp, #8
   1876c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18770:	bl	303c0 <crc32@@Base+0x16064>
   18774:	movw	r2, #31600	; 0x7b70
   18778:	movw	r1, #31608	; 0x7b78
   1877c:	movt	r2, #3
   18780:	movt	r1, #3
   18784:	mov	r3, r0
   18788:	mov	r0, #1
   1878c:	bl	1282c <__printf_chk@plt>
   18790:	mov	r0, #0
   18794:	b	18758 <__printf_chk@plt+0x5f2c>
   18798:	bl	12538 <__stack_chk_fail@plt>
   1879c:	push	{r4, r5, lr}
   187a0:	movw	r4, #3824	; 0xef0
   187a4:	movt	r4, #5
   187a8:	sub	sp, sp, #12
   187ac:	mov	r5, r2
   187b0:	add	r2, sp, #3
   187b4:	ldr	r3, [r4]
   187b8:	str	r3, [sp, #4]
   187bc:	bl	17318 <__printf_chk@plt+0x4aec>
   187c0:	ldr	r2, [sp, #4]
   187c4:	ldr	r3, [r4]
   187c8:	cmp	r0, #0
   187cc:	ldrbeq	r0, [sp, #3]
   187d0:	movne	r0, #0
   187d4:	subeq	r0, r0, r5
   187d8:	clzeq	r0, r0
   187dc:	lsreq	r0, r0, #5
   187e0:	cmp	r2, r3
   187e4:	bne	187f0 <__printf_chk@plt+0x5fc4>
   187e8:	add	sp, sp, #12
   187ec:	pop	{r4, r5, pc}
   187f0:	bl	12538 <__stack_chk_fail@plt>
   187f4:	push	{r4, r5, lr}
   187f8:	movw	r4, #3824	; 0xef0
   187fc:	movt	r4, #5
   18800:	sub	sp, sp, #12
   18804:	mov	r5, r2
   18808:	add	r2, sp, #3
   1880c:	ldr	r3, [r4]
   18810:	str	r3, [sp, #4]
   18814:	bl	17380 <__printf_chk@plt+0x4b54>
   18818:	cmp	r0, #0
   1881c:	movne	r0, #0
   18820:	bne	18844 <__printf_chk@plt+0x6018>
   18824:	ldrb	r0, [sp, #3]
   18828:	cmp	r0, r5
   1882c:	moveq	r0, #1
   18830:	beq	18844 <__printf_chk@plt+0x6018>
   18834:	cmp	r5, #3
   18838:	cmpeq	r0, #24
   1883c:	moveq	r0, #1
   18840:	movne	r0, #0
   18844:	ldr	r2, [sp, #4]
   18848:	ldr	r3, [r4]
   1884c:	cmp	r2, r3
   18850:	bne	1885c <__printf_chk@plt+0x6030>
   18854:	add	sp, sp, #12
   18858:	pop	{r4, r5, pc}
   1885c:	bl	12538 <__stack_chk_fail@plt>
   18860:	push	{r4, r5, lr}
   18864:	movw	r4, #3824	; 0xef0
   18868:	movt	r4, #5
   1886c:	sub	sp, sp, #12
   18870:	mov	r5, r2
   18874:	add	r2, sp, #3
   18878:	ldr	r3, [r4]
   1887c:	str	r3, [sp, #4]
   18880:	bl	173e8 <__printf_chk@plt+0x4bbc>
   18884:	ldr	r2, [sp, #4]
   18888:	ldr	r3, [r4]
   1888c:	cmp	r0, #0
   18890:	ldrbeq	r0, [sp, #3]
   18894:	movne	r0, #0
   18898:	subeq	r0, r0, r5
   1889c:	clzeq	r0, r0
   188a0:	lsreq	r0, r0, #5
   188a4:	cmp	r2, r3
   188a8:	bne	188b4 <__printf_chk@plt+0x6088>
   188ac:	add	sp, sp, #12
   188b0:	pop	{r4, r5, pc}
   188b4:	bl	12538 <__stack_chk_fail@plt>
   188b8:	push	{r4, r5, lr}
   188bc:	movw	r4, #3824	; 0xef0
   188c0:	movt	r4, #5
   188c4:	sub	sp, sp, #12
   188c8:	mov	r5, r2
   188cc:	add	r2, sp, #3
   188d0:	ldr	r3, [r4]
   188d4:	str	r3, [sp, #4]
   188d8:	bl	17450 <__printf_chk@plt+0x4c24>
   188dc:	ldr	r2, [sp, #4]
   188e0:	ldr	r3, [r4]
   188e4:	cmp	r0, #0
   188e8:	ldrbeq	r0, [sp, #3]
   188ec:	movne	r0, #0
   188f0:	subeq	r0, r0, r5
   188f4:	clzeq	r0, r0
   188f8:	lsreq	r0, r0, #5
   188fc:	cmp	r2, r3
   18900:	bne	1890c <__printf_chk@plt+0x60e0>
   18904:	add	sp, sp, #12
   18908:	pop	{r4, r5, pc}
   1890c:	bl	12538 <__stack_chk_fail@plt>
   18910:	mov	r3, #0
   18914:	movw	r2, #31852	; 0x7c6c
   18918:	push	{r4, lr}
   1891c:	mov	r1, r3
   18920:	movt	r2, #3
   18924:	mov	r4, r0
   18928:	bl	31b04 <crc32@@Base+0x177a8>
   1892c:	cmp	r0, #0
   18930:	beq	18970 <__printf_chk@plt+0x6144>
   18934:	mov	r3, #0
   18938:	movw	r2, #34076	; 0x851c
   1893c:	mov	r1, r3
   18940:	movt	r2, #3
   18944:	mov	r0, r4
   18948:	bl	31b04 <crc32@@Base+0x177a8>
   1894c:	cmp	r0, #0
   18950:	beq	18970 <__printf_chk@plt+0x6144>
   18954:	mov	r0, r4
   18958:	movw	r1, #31600	; 0x7b70
   1895c:	movt	r1, #3
   18960:	bl	31e60 <crc32@@Base+0x17b04>
   18964:	mvn	r0, r0
   18968:	lsr	r0, r0, #31
   1896c:	pop	{r4, pc}
   18970:	mov	r0, #0
   18974:	pop	{r4, pc}
   18978:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1897c:	movw	sl, #3824	; 0xef0
   18980:	movt	sl, #5
   18984:	sub	sp, sp, #52	; 0x34
   18988:	mov	r5, r1
   1898c:	movw	r1, #32660	; 0x7f94
   18990:	ldr	r3, [sl]
   18994:	movt	r1, #3
   18998:	mov	r2, #0
   1899c:	mov	r7, r0
   189a0:	str	r2, [sp, #28]
   189a4:	str	r3, [sp, #44]	; 0x2c
   189a8:	bl	31e60 <crc32@@Base+0x17b04>
   189ac:	movw	r1, #31600	; 0x7b70
   189b0:	movt	r1, #3
   189b4:	mov	r4, r0
   189b8:	mov	r0, r7
   189bc:	bl	31e60 <crc32@@Base+0x17b04>
   189c0:	lsr	r8, r0, #31
   189c4:	str	r0, [sp, #8]
   189c8:	orrs	r8, r8, r4, lsr #31
   189cc:	bne	18b78 <__printf_chk@plt+0x634c>
   189d0:	add	r3, sp, #32
   189d4:	mov	r0, r5
   189d8:	movw	r2, #35196	; 0x897c
   189dc:	mov	r1, r8
   189e0:	movt	r2, #3
   189e4:	bl	31b04 <crc32@@Base+0x177a8>
   189e8:	subs	r3, r0, #0
   189ec:	str	r3, [sp, #20]
   189f0:	beq	18b78 <__printf_chk@plt+0x634c>
   189f4:	mov	r1, r4
   189f8:	mov	r0, r7
   189fc:	add	r2, sp, #28
   18a00:	bl	2e588 <crc32@@Base+0x1422c>
   18a04:	subs	r6, r0, #0
   18a08:	blt	18b78 <__printf_chk@plt+0x634c>
   18a0c:	ldr	r3, [sp, #28]
   18a10:	cmp	r3, #0
   18a14:	ble	18b78 <__printf_chk@plt+0x634c>
   18a18:	movw	r2, #31968	; 0x7ce0
   18a1c:	movw	r1, #45044	; 0xaff4
   18a20:	movt	r2, #3
   18a24:	movt	r1, #3
   18a28:	str	r2, [sp, #4]
   18a2c:	str	r1, [sp, #12]
   18a30:	str	r8, [sp]
   18a34:	str	sl, [sp, #16]
   18a38:	b	18a60 <__printf_chk@plt+0x6234>
   18a3c:	mov	r1, r6
   18a40:	add	r2, sp, #28
   18a44:	mov	r0, r7
   18a48:	bl	2e588 <crc32@@Base+0x1422c>
   18a4c:	subs	r6, r0, #0
   18a50:	blt	18b4c <__printf_chk@plt+0x6320>
   18a54:	ldr	r3, [sp, #28]
   18a58:	cmp	r3, #0
   18a5c:	ble	18b4c <__printf_chk@plt+0x6320>
   18a60:	cmp	r3, #1
   18a64:	bne	18a3c <__printf_chk@plt+0x6210>
   18a68:	ldr	r2, [sp, #4]
   18a6c:	add	r3, sp, #36	; 0x24
   18a70:	mov	r1, r6
   18a74:	mov	r0, r7
   18a78:	bl	31b04 <crc32@@Base+0x177a8>
   18a7c:	subs	r2, r0, #0
   18a80:	beq	18a3c <__printf_chk@plt+0x6210>
   18a84:	ldr	r1, [sp, #8]
   18a88:	mov	r0, r7
   18a8c:	bl	317d4 <crc32@@Base+0x17478>
   18a90:	subs	r1, r0, #0
   18a94:	blt	18a3c <__printf_chk@plt+0x6210>
   18a98:	add	r3, sp, #40	; 0x28
   18a9c:	ldr	r2, [sp, #12]
   18aa0:	mov	r0, r7
   18aa4:	bl	31b04 <crc32@@Base+0x177a8>
   18aa8:	subs	fp, r0, #0
   18aac:	beq	18a3c <__printf_chk@plt+0x6210>
   18ab0:	ldr	r3, [sp, #32]
   18ab4:	cmp	r3, #0
   18ab8:	str	r3, [sp, #36]	; 0x24
   18abc:	ble	18a3c <__printf_chk@plt+0x6210>
   18ac0:	ldr	r3, [sp]
   18ac4:	cmp	r8, #0
   18ac8:	clz	r9, r3
   18acc:	lsr	r9, r9, #5
   18ad0:	orrgt	r3, r9, #1
   18ad4:	movle	r3, r9
   18ad8:	cmp	r3, #0
   18adc:	beq	18b84 <__printf_chk@plt+0x6358>
   18ae0:	ldr	r5, [sp, #20]
   18ae4:	mov	sl, #0
   18ae8:	b	18b1c <__printf_chk@plt+0x62f0>
   18aec:	ldr	r0, [sp, #36]	; 0x24
   18af0:	add	r5, r5, r4
   18af4:	add	sl, sl, #1
   18af8:	sub	r0, r0, r4
   18afc:	str	r0, [sp, #36]	; 0x24
   18b00:	cmp	r0, #0
   18b04:	ble	18a3c <__printf_chk@plt+0x6210>
   18b08:	cmp	sl, r8
   18b0c:	movge	r3, r9
   18b10:	orrlt	r3, r9, #1
   18b14:	cmp	r3, #0
   18b18:	beq	18a3c <__printf_chk@plt+0x6210>
   18b1c:	mov	r0, r5
   18b20:	bl	1267c <strlen@plt>
   18b24:	mov	r2, r5
   18b28:	mov	r1, #0
   18b2c:	add	r4, r0, #1
   18b30:	mov	r0, fp
   18b34:	bl	325f8 <crc32@@Base+0x1829c>
   18b38:	cmp	r0, #0
   18b3c:	bne	18aec <__printf_chk@plt+0x62c0>
   18b40:	mov	r8, sl
   18b44:	str	r6, [sp]
   18b48:	b	18a3c <__printf_chk@plt+0x6210>
   18b4c:	ldr	r3, [sp]
   18b50:	ldr	sl, [sp, #16]
   18b54:	cmp	r3, #0
   18b58:	beq	18b78 <__printf_chk@plt+0x634c>
   18b5c:	ldr	r2, [sp, #44]	; 0x2c
   18b60:	ldr	r3, [sl]
   18b64:	ldr	r0, [sp]
   18b68:	cmp	r2, r3
   18b6c:	bne	18b8c <__printf_chk@plt+0x6360>
   18b70:	add	sp, sp, #52	; 0x34
   18b74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b78:	mvn	r3, #0
   18b7c:	str	r3, [sp]
   18b80:	b	18b5c <__printf_chk@plt+0x6330>
   18b84:	mov	r8, r3
   18b88:	b	18a3c <__printf_chk@plt+0x6210>
   18b8c:	bl	12538 <__stack_chk_fail@plt>
   18b90:	push	{r4, r5, r6, r7, r8, r9, lr}
   18b94:	movw	r4, #3824	; 0xef0
   18b98:	movt	r4, #5
   18b9c:	sub	sp, sp, #12
   18ba0:	mov	r5, r1
   18ba4:	movw	r1, #32660	; 0x7f94
   18ba8:	ldr	r3, [r4]
   18bac:	movt	r1, #3
   18bb0:	mov	r8, r0
   18bb4:	str	r3, [sp, #4]
   18bb8:	bl	31e60 <crc32@@Base+0x17b04>
   18bbc:	subs	r6, r0, #0
   18bc0:	blt	18c2c <__printf_chk@plt+0x6400>
   18bc4:	cmp	r5, #0
   18bc8:	beq	18c60 <__printf_chk@plt+0x6434>
   18bcc:	mov	r1, #35	; 0x23
   18bd0:	mov	r0, r5
   18bd4:	bl	12820 <strchr@plt>
   18bd8:	cmp	r0, #0
   18bdc:	beq	18c48 <__printf_chk@plt+0x641c>
   18be0:	sub	r0, r0, r5
   18be4:	str	r0, [sp]
   18be8:	add	r0, r0, #1
   18bec:	bl	12664 <malloc@plt>
   18bf0:	subs	r7, r0, #0
   18bf4:	beq	18c88 <__printf_chk@plt+0x645c>
   18bf8:	ldr	r9, [sp]
   18bfc:	mov	r1, r5
   18c00:	mov	r2, r9
   18c04:	bl	12658 <memcpy@plt>
   18c08:	mov	r1, r6
   18c0c:	mov	r3, #0
   18c10:	mov	r0, r8
   18c14:	mov	r2, r7
   18c18:	strb	r3, [r7, r9]
   18c1c:	bl	317d4 <crc32@@Base+0x17478>
   18c20:	mov	r6, r0
   18c24:	mov	r0, r7
   18c28:	bl	121c0 <free@plt>
   18c2c:	ldr	r2, [sp, #4]
   18c30:	mov	r0, r6
   18c34:	ldr	r3, [r4]
   18c38:	cmp	r2, r3
   18c3c:	bne	18c90 <__printf_chk@plt+0x6464>
   18c40:	add	sp, sp, #12
   18c44:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18c48:	mov	r1, r6
   18c4c:	mov	r2, r5
   18c50:	mov	r0, r8
   18c54:	bl	317d4 <crc32@@Base+0x17478>
   18c58:	mov	r6, r0
   18c5c:	b	18c2c <__printf_chk@plt+0x6400>
   18c60:	mov	r1, r6
   18c64:	movw	r2, #32024	; 0x7d18
   18c68:	mov	r3, sp
   18c6c:	movt	r2, #3
   18c70:	mov	r0, r8
   18c74:	bl	31b04 <crc32@@Base+0x177a8>
   18c78:	subs	r5, r0, #0
   18c7c:	ldreq	r6, [sp]
   18c80:	bne	18bcc <__printf_chk@plt+0x63a0>
   18c84:	b	18c2c <__printf_chk@plt+0x6400>
   18c88:	mvn	r6, #11
   18c8c:	b	18c2c <__printf_chk@plt+0x6400>
   18c90:	bl	12538 <__stack_chk_fail@plt>
   18c94:	b	323a8 <crc32@@Base+0x1804c>
   18c98:	push	{r4, r5, lr}
   18c9c:	movw	r4, #3824	; 0xef0
   18ca0:	sub	sp, sp, #20
   18ca4:	movt	r4, #5
   18ca8:	add	ip, sp, #8
   18cac:	mov	r5, r0
   18cb0:	str	ip, [sp]
   18cb4:	ldr	ip, [r4]
   18cb8:	str	ip, [sp, #12]
   18cbc:	bl	3250c <crc32@@Base+0x181b0>
   18cc0:	subs	r1, r0, #0
   18cc4:	ldreq	r0, [sp, #8]
   18cc8:	beq	18cd4 <__printf_chk@plt+0x64a8>
   18ccc:	mov	r0, r5
   18cd0:	bl	172e8 <__printf_chk@plt+0x4abc>
   18cd4:	ldr	r2, [sp, #12]
   18cd8:	ldr	r3, [r4]
   18cdc:	cmp	r2, r3
   18ce0:	bne	18cec <__printf_chk@plt+0x64c0>
   18ce4:	add	sp, sp, #20
   18ce8:	pop	{r4, r5, pc}
   18cec:	bl	12538 <__stack_chk_fail@plt>
   18cf0:	mov	r3, #0
   18cf4:	b	18c98 <__printf_chk@plt+0x646c>
   18cf8:	push	{r4, r5, r6, lr}
   18cfc:	mov	r5, r1
   18d00:	ldr	r1, [r0, #72]	; 0x48
   18d04:	mov	r0, r2
   18d08:	mov	r4, r2
   18d0c:	bl	18b90 <__printf_chk@plt+0x6364>
   18d10:	subs	r1, r0, #0
   18d14:	blt	18d34 <__printf_chk@plt+0x6508>
   18d18:	mov	r2, r5
   18d1c:	mov	r0, r4
   18d20:	mov	r3, #0
   18d24:	bl	18c98 <__printf_chk@plt+0x646c>
   18d28:	cmp	r0, #0
   18d2c:	mvnlt	r0, #1
   18d30:	pop	{r4, r5, r6, pc}
   18d34:	mvn	r0, #21
   18d38:	pop	{r4, r5, r6, pc}
   18d3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d40:	sub	sp, sp, #60	; 0x3c
   18d44:	mov	r9, r3
   18d48:	subs	ip, r2, #0
   18d4c:	ldr	r3, [sp, #112]	; 0x70
   18d50:	movw	r6, #3824	; 0xef0
   18d54:	str	ip, [sp, #8]
   18d58:	movt	r6, #5
   18d5c:	ldrne	r7, [ip]
   18d60:	mov	r4, r1
   18d64:	str	r3, [sp, #16]
   18d68:	mov	sl, r0
   18d6c:	ldr	r3, [sp, #116]	; 0x74
   18d70:	movw	r1, #35216	; 0x8990
   18d74:	ldreq	r7, [sp, #8]
   18d78:	cmp	r9, #0
   18d7c:	ldr	fp, [sp, #100]	; 0x64
   18d80:	movt	r1, #3
   18d84:	str	r3, [sp, #20]
   18d88:	mov	r0, #1
   18d8c:	ldrne	r3, [r9]
   18d90:	ldr	r2, [r6]
   18d94:	streq	r9, [sp, #12]
   18d98:	strne	r3, [sp, #12]
   18d9c:	sub	r3, fp, #1
   18da0:	cmp	r3, #28
   18da4:	str	r2, [sp, #52]	; 0x34
   18da8:	movwls	r2, #33928	; 0x8488
   18dac:	movtls	r2, #3
   18db0:	movwhi	r8, #35208	; 0x8988
   18db4:	movthi	r8, #3
   18db8:	ldrls	r8, [r2, r3, lsl #2]
   18dbc:	mov	r3, r4
   18dc0:	mov	r2, r8
   18dc4:	bl	1282c <__printf_chk@plt>
   18dc8:	mov	r0, r4
   18dcc:	bl	18910 <__printf_chk@plt+0x60e4>
   18dd0:	cmp	r0, #0
   18dd4:	beq	19294 <__printf_chk@plt+0x6a68>
   18dd8:	cmp	r7, #0
   18ddc:	beq	19028 <__printf_chk@plt+0x67fc>
   18de0:	mov	r1, r7
   18de4:	mov	r0, r4
   18de8:	bl	172e8 <__printf_chk@plt+0x4abc>
   18dec:	mov	r3, #0
   18df0:	str	r3, [sp, #24]
   18df4:	mov	r5, r0
   18df8:	cmp	r5, #0
   18dfc:	blt	19280 <__printf_chk@plt+0x6a54>
   18e00:	mov	r3, r8
   18e04:	mov	r2, r7
   18e08:	movw	r1, #35444	; 0x8a74
   18e0c:	mov	r0, #1
   18e10:	movt	r1, #3
   18e14:	bl	1282c <__printf_chk@plt>
   18e18:	ldr	sl, [sl, #124]	; 0x7c
   18e1c:	movw	r2, #34532	; 0x86e4
   18e20:	mov	r1, r5
   18e24:	movt	r2, #3
   18e28:	mov	r0, r4
   18e2c:	bl	17710 <__printf_chk@plt+0x4ee4>
   18e30:	cmp	sl, #0
   18e34:	bne	18fb8 <__printf_chk@plt+0x678c>
   18e38:	cmp	fp, #8
   18e3c:	add	sl, sp, #48	; 0x30
   18e40:	beq	18ff0 <__printf_chk@plt+0x67c4>
   18e44:	mov	r2, sl
   18e48:	mov	r1, r5
   18e4c:	mov	r0, r4
   18e50:	uxtb	r3, fp
   18e54:	str	r3, [sp, #28]
   18e58:	bl	173e8 <__printf_chk@plt+0x4bbc>
   18e5c:	cmp	r0, #0
   18e60:	beq	18f40 <__printf_chk@plt+0x6714>
   18e64:	mov	r2, sl
   18e68:	mov	r1, r5
   18e6c:	mov	r0, r4
   18e70:	bl	173e8 <__printf_chk@plt+0x4bbc>
   18e74:	cmp	r0, #0
   18e78:	beq	190d8 <__printf_chk@plt+0x68ac>
   18e7c:	cmp	fp, #2
   18e80:	beq	190e8 <__printf_chk@plt+0x68bc>
   18e84:	cmp	fp, #29
   18e88:	cmpne	fp, #8
   18e8c:	moveq	r3, #1
   18e90:	movne	r3, #0
   18e94:	bne	19118 <__printf_chk@plt+0x68ec>
   18e98:	cmp	fp, #22
   18e9c:	bne	192c4 <__printf_chk@plt+0x6a98>
   18ea0:	add	r3, sp, #44	; 0x2c
   18ea4:	add	r2, sp, #40	; 0x28
   18ea8:	mov	r1, r5
   18eac:	mov	r0, r4
   18eb0:	bl	17618 <__printf_chk@plt+0x4dec>
   18eb4:	cmp	r0, #0
   18eb8:	ldreq	r3, [sp, #44]	; 0x2c
   18ebc:	streq	r3, [sp, #32]
   18ec0:	bne	1931c <__printf_chk@plt+0x6af0>
   18ec4:	ldr	r3, [sp, #40]	; 0x28
   18ec8:	str	r3, [sp, #28]
   18ecc:	ldr	r3, [sp, #108]	; 0x6c
   18ed0:	cmp	r3, #0
   18ed4:	ldr	r3, [sp, #28]
   18ed8:	str	r3, [sp, #36]	; 0x24
   18edc:	bne	1919c <__printf_chk@plt+0x6970>
   18ee0:	ldr	r2, [sp, #16]
   18ee4:	ldr	r1, [sp, #36]	; 0x24
   18ee8:	ldr	r3, [sp, #8]
   18eec:	str	r1, [r2]
   18ef0:	cmp	r3, #0
   18ef4:	ldr	r2, [sp, #20]
   18ef8:	ldr	r1, [sp, #32]
   18efc:	str	r1, [r2]
   18f00:	strne	r7, [r3]
   18f04:	cmp	r9, #0
   18f08:	beq	18f24 <__printf_chk@plt+0x66f8>
   18f0c:	ldr	r2, [sp, #12]
   18f10:	ldr	r1, [sp, #24]
   18f14:	cmp	r2, #0
   18f18:	mov	r3, r2
   18f1c:	moveq	r3, r1
   18f20:	str	r3, [r9]
   18f24:	ldr	r2, [sp, #52]	; 0x34
   18f28:	mov	r0, r5
   18f2c:	ldr	r3, [r6]
   18f30:	cmp	r2, r3
   18f34:	bne	1934c <__printf_chk@plt+0x6b20>
   18f38:	add	sp, sp, #60	; 0x3c
   18f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f40:	ldrb	r3, [sp, #48]	; 0x30
   18f44:	uxtb	r2, fp
   18f48:	cmp	r2, r3
   18f4c:	bne	18e64 <__printf_chk@plt+0x6638>
   18f50:	cmp	fp, #29
   18f54:	cmpne	fp, #8
   18f58:	movne	r3, #1
   18f5c:	strne	r3, [sp, #32]
   18f60:	bne	1911c <__printf_chk@plt+0x68f0>
   18f64:	add	r3, sp, #44	; 0x2c
   18f68:	add	r2, sp, #40	; 0x28
   18f6c:	mov	r1, r5
   18f70:	mov	r0, r4
   18f74:	bl	17618 <__printf_chk@plt+0x4dec>
   18f78:	cmp	r0, #0
   18f7c:	bne	1931c <__printf_chk@plt+0x6af0>
   18f80:	ldr	r3, [sp, #44]	; 0x2c
   18f84:	cmp	fp, #8
   18f88:	ldr	r0, [sp, #40]	; 0x28
   18f8c:	str	r3, [sp, #32]
   18f90:	str	r0, [sp, #28]
   18f94:	bne	18ecc <__printf_chk@plt+0x66a0>
   18f98:	bl	2e22c <crc32@@Base+0x13ed0>
   18f9c:	cmp	r0, #0
   18fa0:	beq	18ec4 <__printf_chk@plt+0x6698>
   18fa4:	movw	r0, #35552	; 0x8ae0
   18fa8:	movt	r0, #3
   18fac:	bl	12310 <puts@plt>
   18fb0:	mvn	r5, #7
   18fb4:	b	18f24 <__printf_chk@plt+0x66f8>
   18fb8:	movw	r0, #35356	; 0x8a1c
   18fbc:	movt	r0, #3
   18fc0:	bl	12310 <puts@plt>
   18fc4:	mov	r1, r5
   18fc8:	mov	r0, r4
   18fcc:	bl	185b4 <__printf_chk@plt+0x5d88>
   18fd0:	cmp	r0, #0
   18fd4:	beq	192b0 <__printf_chk@plt+0x6a84>
   18fd8:	movw	r0, #35408	; 0x8a50
   18fdc:	movt	r0, #3
   18fe0:	bl	12310 <puts@plt>
   18fe4:	cmp	fp, #8
   18fe8:	add	sl, sp, #48	; 0x30
   18fec:	bne	18e44 <__printf_chk@plt+0x6618>
   18ff0:	mov	r1, r5
   18ff4:	mov	r0, r4
   18ff8:	mov	r2, sl
   18ffc:	bl	17450 <__printf_chk@plt+0x4c24>
   19000:	cmp	r0, #0
   19004:	bne	19014 <__printf_chk@plt+0x67e8>
   19008:	ldrb	r3, [sp, #48]	; 0x30
   1900c:	cmp	r3, #0
   19010:	beq	18e44 <__printf_chk@plt+0x6618>
   19014:	movw	r0, #35472	; 0x8a90
   19018:	movt	r0, #3
   1901c:	bl	12310 <puts@plt>
   19020:	mvn	r5, #92	; 0x5c
   19024:	b	18f24 <__printf_chk@plt+0x66f8>
   19028:	ldr	r1, [sp, #12]
   1902c:	mov	r0, r4
   19030:	bl	18b90 <__printf_chk@plt+0x6364>
   19034:	subs	r5, r0, #0
   19038:	blt	19338 <__printf_chk@plt+0x6b0c>
   1903c:	mov	r2, r7
   19040:	mov	r1, r5
   19044:	mov	r0, r4
   19048:	bl	31804 <crc32@@Base+0x174a8>
   1904c:	movw	r1, #35324	; 0x89fc
   19050:	movt	r1, #3
   19054:	mov	r2, r0
   19058:	str	r0, [sp, #24]
   1905c:	mov	r0, #1
   19060:	bl	1282c <__printf_chk@plt>
   19064:	cmp	fp, #2
   19068:	ldreq	r3, [sp, #24]
   1906c:	streq	r3, [sl, #72]	; 0x48
   19070:	ldr	r3, [sl, #124]	; 0x7c
   19074:	cmp	r3, #0
   19078:	beq	190a8 <__printf_chk@plt+0x687c>
   1907c:	movw	r0, #35356	; 0x8a1c
   19080:	movt	r0, #3
   19084:	bl	12310 <puts@plt>
   19088:	mov	r1, r5
   1908c:	mov	r0, r4
   19090:	bl	19fbc <__printf_chk@plt+0x7790>
   19094:	cmp	r0, #0
   19098:	bne	192b0 <__printf_chk@plt+0x6a84>
   1909c:	movw	r0, #35408	; 0x8a50
   190a0:	movt	r0, #3
   190a4:	bl	12310 <puts@plt>
   190a8:	mov	r1, r5
   190ac:	mov	r3, #0
   190b0:	mov	r2, r8
   190b4:	mov	r0, r4
   190b8:	bl	18c98 <__printf_chk@plt+0x646c>
   190bc:	mov	r2, #0
   190c0:	mov	r1, r0
   190c4:	mov	r5, r0
   190c8:	mov	r0, r4
   190cc:	bl	31804 <crc32@@Base+0x174a8>
   190d0:	mov	r7, r0
   190d4:	b	18df8 <__printf_chk@plt+0x65cc>
   190d8:	ldrb	r3, [sp, #48]	; 0x30
   190dc:	cmp	r3, #5
   190e0:	beq	18f50 <__printf_chk@plt+0x6724>
   190e4:	b	18e7c <__printf_chk@plt+0x6650>
   190e8:	mov	r2, sl
   190ec:	mov	r1, r5
   190f0:	mov	r0, r4
   190f4:	bl	173e8 <__printf_chk@plt+0x4bbc>
   190f8:	cmp	r0, #0
   190fc:	movne	r3, #0
   19100:	strne	r3, [sp, #32]
   19104:	bne	1911c <__printf_chk@plt+0x68f0>
   19108:	ldrb	r3, [sp, #48]	; 0x30
   1910c:	sub	r3, r3, #14
   19110:	clz	r3, r3
   19114:	lsr	r3, r3, #5
   19118:	str	r3, [sp, #32]
   1911c:	mov	r2, sl
   19120:	mov	r1, r5
   19124:	mov	r0, r4
   19128:	bl	17318 <__printf_chk@plt+0x4aec>
   1912c:	cmp	r0, #0
   19130:	bne	19140 <__printf_chk@plt+0x6914>
   19134:	ldrb	r3, [sp, #48]	; 0x30
   19138:	cmp	r3, #5
   1913c:	beq	19164 <__printf_chk@plt+0x6938>
   19140:	mov	r2, sl
   19144:	mov	r1, r5
   19148:	mov	r0, r4
   1914c:	bl	17318 <__printf_chk@plt+0x4aec>
   19150:	cmp	r0, #0
   19154:	bne	19174 <__printf_chk@plt+0x6948>
   19158:	ldrb	r3, [sp, #48]	; 0x30
   1915c:	cmp	r3, #17
   19160:	bne	19174 <__printf_chk@plt+0x6948>
   19164:	ldr	r3, [sp, #32]
   19168:	cmp	r3, #1
   1916c:	bne	18e98 <__printf_chk@plt+0x666c>
   19170:	b	18f64 <__printf_chk@plt+0x6738>
   19174:	mov	r2, sl
   19178:	mov	r1, r5
   1917c:	mov	r0, r4
   19180:	bl	17318 <__printf_chk@plt+0x4aec>
   19184:	cmp	r0, #0
   19188:	bne	18e98 <__printf_chk@plt+0x666c>
   1918c:	ldrb	r3, [sp, #48]	; 0x30
   19190:	cmp	r3, #24
   19194:	beq	19164 <__printf_chk@plt+0x6938>
   19198:	b	18e98 <__printf_chk@plt+0x666c>
   1919c:	mov	r3, sl
   191a0:	movw	r2, #31952	; 0x7cd0
   191a4:	mov	r1, r5
   191a8:	movt	r2, #3
   191ac:	mov	r0, r4
   191b0:	bl	16e3c <__printf_chk@plt+0x4610>
   191b4:	ldr	r3, [sp, #108]	; 0x6c
   191b8:	cmp	r0, #0
   191bc:	beq	191e4 <__printf_chk@plt+0x69b8>
   191c0:	cmp	r3, #3
   191c4:	bne	18ee0 <__printf_chk@plt+0x66b4>
   191c8:	mov	r2, r8
   191cc:	movw	r1, #35580	; 0x8afc
   191d0:	mov	r0, #1
   191d4:	movt	r1, #3
   191d8:	bl	1282c <__printf_chk@plt>
   191dc:	mvn	r5, #8
   191e0:	b	18f24 <__printf_chk@plt+0x66f8>
   191e4:	cmp	r3, #2
   191e8:	ldr	r2, [sp, #48]	; 0x30
   191ec:	beq	19274 <__printf_chk@plt+0x6a48>
   191f0:	ldr	lr, [r4, #4]
   191f4:	ldr	r3, [sp, #32]
   191f8:	ubfx	ip, lr, #8, #8
   191fc:	ubfx	r0, lr, #16, #8
   19200:	add	r1, r2, r3
   19204:	lsr	r3, lr, #24
   19208:	orr	r3, r3, lr, lsl #24
   1920c:	orr	r3, r3, ip, lsl #16
   19210:	orr	r3, r3, r0, lsl #8
   19214:	add	r3, r3, r4
   19218:	cmp	fp, #2
   1921c:	cmpne	r2, r3
   19220:	movcc	r3, #1
   19224:	movcs	r3, #0
   19228:	cmp	r4, r1
   1922c:	movcs	r4, #0
   19230:	andcc	r4, r3, #1
   19234:	cmp	r4, #0
   19238:	bne	19350 <__printf_chk@plt+0x6b24>
   1923c:	ldr	r3, [sp, #28]
   19240:	movw	r1, #35644	; 0x8b3c
   19244:	str	r2, [sp]
   19248:	movt	r1, #3
   1924c:	mov	r2, r8
   19250:	mov	r0, #1
   19254:	bl	1282c <__printf_chk@plt>
   19258:	ldr	r2, [sp, #32]
   1925c:	ldr	r1, [sp, #40]	; 0x28
   19260:	ldr	r0, [sp, #48]	; 0x30
   19264:	bl	12424 <memmove@plt>
   19268:	ldr	r3, [sp, #48]	; 0x30
   1926c:	str	r3, [sp, #36]	; 0x24
   19270:	b	18ee0 <__printf_chk@plt+0x66b4>
   19274:	cmp	r2, #0
   19278:	beq	18ee0 <__printf_chk@plt+0x66b4>
   1927c:	b	191f0 <__printf_chk@plt+0x69c4>
   19280:	movw	r0, #35412	; 0x8a54
   19284:	movt	r0, #3
   19288:	bl	12310 <puts@plt>
   1928c:	mvn	r5, #1
   19290:	b	18f24 <__printf_chk@plt+0x66f8>
   19294:	mov	r2, r8
   19298:	movw	r1, #35260	; 0x89bc
   1929c:	mov	r0, #1
   192a0:	movt	r1, #3
   192a4:	bl	1282c <__printf_chk@plt>
   192a8:	mvn	r5, #7
   192ac:	b	18f24 <__printf_chk@plt+0x66f8>
   192b0:	movw	r0, #35392	; 0x8a40
   192b4:	movt	r0, #3
   192b8:	bl	12310 <puts@plt>
   192bc:	mvn	r5, #12
   192c0:	b	18f24 <__printf_chk@plt+0x66f8>
   192c4:	mov	r2, sl
   192c8:	mov	r1, r5
   192cc:	mov	r0, r4
   192d0:	mvn	r5, #4
   192d4:	bl	17318 <__printf_chk@plt+0x4aec>
   192d8:	ldrb	r0, [sp, #48]	; 0x30
   192dc:	bl	1af38 <crc32@@Base+0xbdc>
   192e0:	ldr	r3, [sp, #96]	; 0x60
   192e4:	mov	r4, r0
   192e8:	uxtb	r0, r3
   192ec:	bl	1af8c <crc32@@Base+0xc30>
   192f0:	mov	r7, r0
   192f4:	ldr	r0, [sp, #28]
   192f8:	bl	1afe0 <crc32@@Base+0xc84>
   192fc:	mov	r3, r7
   19300:	mov	r2, r4
   19304:	movw	r1, #35496	; 0x8aa8
   19308:	movt	r1, #3
   1930c:	str	r0, [sp]
   19310:	mov	r0, #1
   19314:	bl	1282c <__printf_chk@plt>
   19318:	b	18f24 <__printf_chk@plt+0x66f8>
   1931c:	mov	r2, r8
   19320:	movw	r1, #35516	; 0x8abc
   19324:	mov	r0, #1
   19328:	movt	r1, #3
   1932c:	bl	1282c <__printf_chk@plt>
   19330:	mvn	r5, #1
   19334:	b	18f24 <__printf_chk@plt+0x66f8>
   19338:	movw	r0, #35288	; 0x89d8
   1933c:	movt	r0, #3
   19340:	bl	12310 <puts@plt>
   19344:	mvn	r5, #1
   19348:	b	18f24 <__printf_chk@plt+0x66f8>
   1934c:	bl	12538 <__stack_chk_fail@plt>
   19350:	mov	r2, r8
   19354:	movw	r1, #35620	; 0x8b24
   19358:	mov	r0, #1
   1935c:	movt	r1, #3
   19360:	bl	1282c <__printf_chk@plt>
   19364:	mvn	r5, #17
   19368:	b	18f24 <__printf_chk@plt+0x66f8>
   1936c:	push	{r4, r5, r6, r7, r8, lr}
   19370:	movw	r4, #3824	; 0xef0
   19374:	movt	r4, #5
   19378:	ldr	r6, [r0, #76]	; 0x4c
   1937c:	sub	sp, sp, #32
   19380:	mov	r7, r1
   19384:	ldr	r3, [r4]
   19388:	mov	r8, r2
   1938c:	movw	r1, #30720	; 0x7800
   19390:	mov	r2, r6
   19394:	movt	r1, #3
   19398:	mov	r5, r0
   1939c:	str	r3, [sp, #28]
   193a0:	bl	18cf8 <__printf_chk@plt+0x64cc>
   193a4:	cmp	r0, #0
   193a8:	blt	193e4 <__printf_chk@plt+0x6bb8>
   193ac:	mov	r3, #0
   193b0:	add	ip, sp, #24
   193b4:	str	r7, [sp]
   193b8:	mov	r1, r6
   193bc:	str	ip, [sp, #20]
   193c0:	mov	r6, #130	; 0x82
   193c4:	mov	r7, #3
   193c8:	mov	ip, #20
   193cc:	str	r8, [sp, #16]
   193d0:	mov	r0, r5
   193d4:	mov	r2, r3
   193d8:	strd	r6, [sp, #8]
   193dc:	str	ip, [sp, #4]
   193e0:	bl	18d3c <__printf_chk@plt+0x6510>
   193e4:	ldr	r2, [sp, #28]
   193e8:	ldr	r3, [r4]
   193ec:	cmp	r2, r3
   193f0:	bne	193fc <__printf_chk@plt+0x6bd0>
   193f4:	add	sp, sp, #32
   193f8:	pop	{r4, r5, r6, r7, r8, pc}
   193fc:	bl	12538 <__stack_chk_fail@plt>
   19400:	push	{r4, r5, r6, lr}
   19404:	movw	r4, #5092	; 0x13e4
   19408:	movt	r4, #5
   1940c:	mov	r1, r0
   19410:	mov	r5, r0
   19414:	ldr	r0, [r4]
   19418:	bl	12718 <strcmp@plt>
   1941c:	cmp	r0, #0
   19420:	beq	19440 <__printf_chk@plt+0x6c14>
   19424:	ldr	r0, [r4, #8]!
   19428:	mov	r1, r5
   1942c:	bl	12718 <strcmp@plt>
   19430:	cmp	r0, #0
   19434:	moveq	r0, r4
   19438:	movne	r0, #0
   1943c:	pop	{r4, r5, r6, pc}
   19440:	mov	r0, r4
   19444:	pop	{r4, r5, r6, pc}
   19448:	movw	r3, #51712	; 0xca00
   1944c:	movt	r3, #30
   19450:	str	r0, [r3]
   19454:	bx	lr
   19458:	movw	r3, #51712	; 0xca00
   1945c:	movt	r3, #30
   19460:	ldr	r0, [r3]
   19464:	bx	lr
   19468:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1946c:	mov	r9, r0
   19470:	ldr	r7, [pc, #88]	; 194d0 <__printf_chk@plt+0x6ca4>
   19474:	mov	r4, #0
   19478:	mov	sl, #24
   1947c:	mul	r8, sl, r4
   19480:	ldr	r5, [r7, r8]
   19484:	mov	r0, r5
   19488:	bl	1267c <strlen@plt>
   1948c:	mov	r1, r9
   19490:	mov	r2, r0
   19494:	mov	r6, r0
   19498:	mov	r0, r5
   1949c:	bl	12220 <strncmp@plt>
   194a0:	cmp	r0, #0
   194a4:	bne	194b4 <__printf_chk@plt+0x6c88>
   194a8:	ldrb	r3, [r9, r6]
   194ac:	cmp	r3, #44	; 0x2c
   194b0:	beq	194c8 <__printf_chk@plt+0x6c9c>
   194b4:	cmp	r4, #1
   194b8:	mov	r4, #1
   194bc:	bne	1947c <__printf_chk@plt+0x6c50>
   194c0:	mov	r0, #0
   194c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   194c8:	add	r0, r7, r8
   194cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   194d0:	strdeq	r1, [r5], -r4
   194d4:	push	{r4, r5, r6, lr}
   194d8:	mov	r1, #44	; 0x2c
   194dc:	bl	12820 <strchr@plt>
   194e0:	cmp	r0, #0
   194e4:	popeq	{r4, r5, r6, pc}
   194e8:	add	r5, r0, #1
   194ec:	movw	r4, #5092	; 0x13e4
   194f0:	movt	r4, #5
   194f4:	mov	r1, r5
   194f8:	ldr	r0, [r4, #64]	; 0x40
   194fc:	bl	12718 <strcmp@plt>
   19500:	cmp	r0, #0
   19504:	beq	19524 <__printf_chk@plt+0x6cf8>
   19508:	ldr	r0, [r4, #84]!	; 0x54
   1950c:	mov	r1, r5
   19510:	bl	12718 <strcmp@plt>
   19514:	cmp	r0, #0
   19518:	moveq	r0, r4
   1951c:	movne	r0, #0
   19520:	pop	{r4, r5, r6, pc}
   19524:	add	r0, r4, #64	; 0x40
   19528:	pop	{r4, r5, r6, pc}
   1952c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19530:	movw	r6, #3824	; 0xef0
   19534:	sub	sp, sp, #20
   19538:	movt	r6, #5
   1953c:	mov	sl, r3
   19540:	mov	r9, r1
   19544:	ldr	ip, [r6]
   19548:	mov	r1, r2
   1954c:	ldr	r3, [sp, #56]	; 0x38
   19550:	mov	r8, r2
   19554:	mov	r4, r0
   19558:	add	r2, sp, #8
   1955c:	mov	r0, r9
   19560:	str	ip, [sp, #12]
   19564:	str	r3, [sp, #4]
   19568:	bl	1800c <__printf_chk@plt+0x57e0>
   1956c:	subs	r7, r0, #0
   19570:	bne	1966c <__printf_chk@plt+0x6e40>
   19574:	mov	r3, r7
   19578:	mov	r1, r8
   1957c:	movw	r2, #32468	; 0x7ed4
   19580:	mov	r0, r9
   19584:	movt	r2, #3
   19588:	movw	r5, #35696	; 0x8b70
   1958c:	bl	31b04 <crc32@@Base+0x177a8>
   19590:	movt	r5, #3
   19594:	mov	r2, #48	; 0x30
   19598:	mov	r1, r7
   1959c:	cmp	r0, #0
   195a0:	movne	r5, r0
   195a4:	mov	r0, r4
   195a8:	bl	12388 <memset@plt>
   195ac:	mov	r3, r7
   195b0:	mov	r1, r8
   195b4:	movw	r2, #32476	; 0x7edc
   195b8:	mov	r0, r9
   195bc:	movt	r2, #3
   195c0:	bl	31b04 <crc32@@Base+0x177a8>
   195c4:	ldr	fp, [sp, #8]
   195c8:	str	r9, [r4, #8]
   195cc:	str	r8, [r4, #12]
   195d0:	str	fp, [r4, #16]
   195d4:	str	r0, [r4, #4]
   195d8:	str	r0, [sp]
   195dc:	mov	r0, fp
   195e0:	bl	19468 <__printf_chk@plt+0x6c3c>
   195e4:	str	r0, [r4, #20]
   195e8:	mov	r0, fp
   195ec:	bl	194d4 <__printf_chk@plt+0x6ca8>
   195f0:	str	r0, [r4, #28]
   195f4:	mov	r0, r5
   195f8:	bl	19400 <__printf_chk@plt+0x6bd4>
   195fc:	movw	r1, #51712	; 0xca00
   19600:	movt	r1, #30
   19604:	ldr	r3, [sp]
   19608:	mov	r2, fp
   1960c:	str	sl, [r4, #36]	; 0x24
   19610:	ldr	ip, [r1]
   19614:	movw	r1, #35736	; 0x8b98
   19618:	movt	r1, #3
   1961c:	str	ip, [r4, #32]
   19620:	str	r0, [r4, #24]
   19624:	mov	r0, #1
   19628:	bl	1282c <__printf_chk@plt>
   1962c:	ldr	r3, [r4, #20]
   19630:	cmp	r3, #0
   19634:	beq	19684 <__printf_chk@plt+0x6e58>
   19638:	ldr	r3, [r4, #28]
   1963c:	cmp	r3, #0
   19640:	beq	19684 <__printf_chk@plt+0x6e58>
   19644:	ldr	r3, [r4, #24]
   19648:	cmp	r3, #0
   1964c:	beq	19684 <__printf_chk@plt+0x6e58>
   19650:	ldr	r2, [sp, #12]
   19654:	mov	r0, r7
   19658:	ldr	r3, [r6]
   1965c:	cmp	r2, r3
   19660:	bne	1969c <__printf_chk@plt+0x6e70>
   19664:	add	sp, sp, #20
   19668:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1966c:	ldr	r2, [sp, #4]
   19670:	movw	r3, #34904	; 0x8858
   19674:	mvn	r7, #0
   19678:	movt	r3, #3
   1967c:	str	r3, [r2]
   19680:	b	19650 <__printf_chk@plt+0x6e24>
   19684:	ldr	r2, [sp, #4]
   19688:	movw	r3, #35708	; 0x8b7c
   1968c:	mvn	r7, #0
   19690:	movt	r3, #3
   19694:	str	r3, [r2]
   19698:	b	19650 <__printf_chk@plt+0x6e24>
   1969c:	bl	12538 <__stack_chk_fail@plt>
   196a0:	cmp	r0, #0
   196a4:	bxeq	lr
   196a8:	b	19400 <__printf_chk@plt+0x6bd4>
   196ac:	cmp	r3, #0
   196b0:	push	{r4, r5, lr}
   196b4:	mov	r5, r0
   196b8:	sub	sp, sp, #12
   196bc:	mov	r4, r1
   196c0:	beq	19704 <__printf_chk@plt+0x6ed8>
   196c4:	cmp	r2, #0
   196c8:	movgt	r0, #4
   196cc:	movgt	r1, #0
   196d0:	ble	196f8 <__printf_chk@plt+0x6ecc>
   196d4:	ldr	ip, [r4, r1, lsl #3]
   196d8:	ldr	lr, [r4, r0]
   196dc:	add	ip, r5, ip
   196e0:	str	ip, [r3, r1, lsl #3]
   196e4:	add	r1, r1, #1
   196e8:	cmp	r2, r1
   196ec:	str	lr, [r3, r0]
   196f0:	add	r0, r0, #8
   196f4:	bne	196d4 <__printf_chk@plt+0x6ea8>
   196f8:	mov	r0, r3
   196fc:	add	sp, sp, #12
   19700:	pop	{r4, r5, pc}
   19704:	mov	r1, r2
   19708:	mov	r0, #8
   1970c:	str	r2, [sp, #4]
   19710:	bl	125c8 <calloc@plt>
   19714:	ldr	r2, [sp, #4]
   19718:	subs	r3, r0, #0
   1971c:	bne	196c4 <__printf_chk@plt+0x6e98>
   19720:	b	196f8 <__printf_chk@plt+0x6ecc>
   19724:	push	{r4, r5, r6, r7, r8, r9, lr}
   19728:	mov	r6, r1
   1972c:	ldr	r1, [r0, #4]
   19730:	mov	r8, r2
   19734:	mov	r7, r3
   19738:	sub	sp, sp, #84	; 0x54
   1973c:	ubfx	r2, r1, #8, #8
   19740:	movw	r4, #3824	; 0xef0
   19744:	lsr	r3, r1, #24
   19748:	movt	r4, #5
   1974c:	orr	r3, r3, r1, lsl #24
   19750:	ubfx	r1, r1, #16, #8
   19754:	orr	r3, r3, r2, lsl #16
   19758:	ldr	r9, [sp, #116]	; 0x74
   1975c:	ldr	r2, [r4]
   19760:	orr	r3, r3, r1, lsl #8
   19764:	cmp	r3, #268435456	; 0x10000000
   19768:	mov	r3, #0
   1976c:	str	r3, [r9]
   19770:	str	r2, [sp, #76]	; 0x4c
   19774:	bls	197a0 <__printf_chk@plt+0x6f74>
   19778:	mvn	r0, #0
   1977c:	movw	r3, #35744	; 0x8ba0
   19780:	movt	r3, #3
   19784:	str	r3, [r9]
   19788:	ldr	r2, [sp, #76]	; 0x4c
   1978c:	ldr	r3, [r4]
   19790:	cmp	r2, r3
   19794:	bne	1983c <__printf_chk@plt+0x7010>
   19798:	add	sp, sp, #84	; 0x54
   1979c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   197a0:	mov	r5, r0
   197a4:	str	r9, [sp]
   197a8:	ldr	r3, [sp, #112]	; 0x70
   197ac:	mov	r2, r6
   197b0:	add	r0, sp, #28
   197b4:	mov	r1, r5
   197b8:	bl	1952c <__printf_chk@plt+0x6d00>
   197bc:	cmp	r0, #0
   197c0:	bne	19834 <__printf_chk@plt+0x7008>
   197c4:	add	r3, sp, #16
   197c8:	mov	r1, r6
   197cc:	mov	r0, r5
   197d0:	add	r2, sp, #12
   197d4:	bl	18064 <__printf_chk@plt+0x5838>
   197d8:	cmp	r0, #0
   197dc:	movwne	r3, #34844	; 0x881c
   197e0:	mvnne	r0, #0
   197e4:	movtne	r3, #3
   197e8:	strne	r3, [r9]
   197ec:	bne	19788 <__printf_chk@plt+0x6f5c>
   197f0:	ldr	lr, [sp, #16]
   197f4:	add	r0, sp, #28
   197f8:	ldr	ip, [sp, #56]	; 0x38
   197fc:	mov	r2, #1
   19800:	ldr	r3, [sp, #12]
   19804:	add	r1, sp, #20
   19808:	str	lr, [sp]
   1980c:	str	r8, [sp, #20]
   19810:	str	r7, [sp, #24]
   19814:	ldr	r5, [ip, #16]
   19818:	blx	r5
   1981c:	cmp	r0, #0
   19820:	movwne	r3, #35768	; 0x8bb8
   19824:	mvnne	r0, #0
   19828:	movtne	r3, #3
   1982c:	strne	r3, [r9]
   19830:	b	19788 <__printf_chk@plt+0x6f5c>
   19834:	mvn	r0, #0
   19838:	b	19788 <__printf_chk@plt+0x6f5c>
   1983c:	bl	12538 <__stack_chk_fail@plt>
   19840:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19844:	sub	sp, sp, #52	; 0x34
   19848:	movw	ip, #3824	; 0xef0
   1984c:	movt	ip, #5
   19850:	ldr	lr, [sp, #92]	; 0x5c
   19854:	mov	sl, r2
   19858:	ldr	r9, [sp, #88]	; 0x58
   1985c:	mov	r2, #1
   19860:	str	ip, [sp, #32]
   19864:	mov	r5, r0
   19868:	ldr	ip, [ip]
   1986c:	mov	fp, r3
   19870:	str	r1, [sp, #24]
   19874:	mov	r0, r9
   19878:	str	r2, [lr]
   1987c:	mov	r1, #0
   19880:	movw	r2, #33528	; 0x82f8
   19884:	movt	r2, #3
   19888:	str	lr, [sp, #36]	; 0x24
   1988c:	str	ip, [sp, #44]	; 0x2c
   19890:	bl	317d4 <crc32@@Base+0x17478>
   19894:	subs	r1, r0, #0
   19898:	blt	199d4 <__printf_chk@plt+0x71a8>
   1989c:	mov	r0, r9
   198a0:	bl	2e678 <crc32@@Base+0x1431c>
   198a4:	subs	r7, r0, #0
   198a8:	blt	199d4 <__printf_chk@plt+0x71a8>
   198ac:	movw	r3, #34116	; 0x8544
   198b0:	movw	r2, #39808	; 0x9b80
   198b4:	movt	r3, #3
   198b8:	movt	r2, #3
   198bc:	str	r3, [sp, #12]
   198c0:	movw	r3, #50548	; 0xc574
   198c4:	str	r2, [sp, #20]
   198c8:	movt	r3, #3
   198cc:	str	r3, [sp, #28]
   198d0:	mov	r3, #0
   198d4:	str	r3, [sp, #16]
   198d8:	mov	r3, #0
   198dc:	ldr	r2, [sp, #12]
   198e0:	mov	r1, r7
   198e4:	mov	r0, r9
   198e8:	bl	31b04 <crc32@@Base+0x177a8>
   198ec:	cmp	r0, #0
   198f0:	beq	19a0c <__printf_chk@plt+0x71e0>
   198f4:	ldr	r1, [sp, #20]
   198f8:	bl	12718 <strcmp@plt>
   198fc:	cmp	r0, #0
   19900:	bne	19a0c <__printf_chk@plt+0x71e0>
   19904:	ldr	r3, [sp, #28]
   19908:	mov	r0, r5
   1990c:	ldr	r1, [sp, #24]
   19910:	str	r3, [sp, #40]	; 0x28
   19914:	bl	2e678 <crc32@@Base+0x1431c>
   19918:	subs	r4, r0, #0
   1991c:	blt	1999c <__printf_chk@plt+0x7170>
   19920:	movw	r6, #33528	; 0x82f8
   19924:	movw	r8, #35004	; 0x88bc
   19928:	movt	r6, #3
   1992c:	movt	r8, #3
   19930:	mov	r2, #0
   19934:	mov	r1, r4
   19938:	mov	r0, r5
   1993c:	bl	31804 <crc32@@Base+0x174a8>
   19940:	mov	r2, #9
   19944:	mov	r1, r6
   19948:	bl	12220 <strncmp@plt>
   1994c:	cmp	r0, #0
   19950:	bne	19988 <__printf_chk@plt+0x715c>
   19954:	add	r3, sp, #40	; 0x28
   19958:	mvn	r2, #0
   1995c:	str	r3, [sp, #4]
   19960:	mov	r1, r4
   19964:	str	r2, [sp]
   19968:	mov	r3, fp
   1996c:	mov	r2, sl
   19970:	mov	r0, r5
   19974:	bl	19724 <__printf_chk@plt+0x6ef8>
   19978:	cmp	r0, #0
   1997c:	beq	199f4 <__printf_chk@plt+0x71c8>
   19980:	mov	r0, r8
   19984:	bl	12310 <puts@plt>
   19988:	mov	r1, r4
   1998c:	mov	r0, r5
   19990:	bl	2e6d8 <crc32@@Base+0x1437c>
   19994:	subs	r4, r0, #0
   19998:	bge	19930 <__printf_chk@plt+0x7104>
   1999c:	cmn	r4, #8
   199a0:	cmnne	r4, #11
   199a4:	beq	19a3c <__printf_chk@plt+0x7210>
   199a8:	mov	r1, r7
   199ac:	mov	r2, #0
   199b0:	mov	r0, r9
   199b4:	bl	31804 <crc32@@Base+0x174a8>
   199b8:	movw	r1, #35788	; 0x8bcc
   199bc:	movt	r1, #3
   199c0:	mov	r2, r0
   199c4:	mov	r0, #1
   199c8:	bl	1282c <__printf_chk@plt>
   199cc:	mvn	r0, #0
   199d0:	b	199d8 <__printf_chk@plt+0x71ac>
   199d4:	mov	r0, #0
   199d8:	ldr	r3, [sp, #32]
   199dc:	ldr	r2, [sp, #44]	; 0x2c
   199e0:	ldr	r3, [r3]
   199e4:	cmp	r2, r3
   199e8:	bne	19a8c <__printf_chk@plt+0x7260>
   199ec:	add	sp, sp, #52	; 0x34
   199f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   199f4:	ldr	r3, [sp, #16]
   199f8:	movw	r0, #35000	; 0x88b8
   199fc:	movt	r0, #3
   19a00:	add	r3, r3, #1
   19a04:	str	r3, [sp, #16]
   19a08:	bl	12310 <puts@plt>
   19a0c:	mov	r1, r7
   19a10:	mov	r0, r9
   19a14:	bl	2e6d8 <crc32@@Base+0x1437c>
   19a18:	subs	r7, r0, #0
   19a1c:	bge	198d8 <__printf_chk@plt+0x70ac>
   19a20:	ldr	r3, [sp, #16]
   19a24:	cmp	r3, #0
   19a28:	beq	199d4 <__printf_chk@plt+0x71a8>
   19a2c:	ldr	r3, [sp, #36]	; 0x24
   19a30:	mov	r0, #0
   19a34:	str	r0, [r3]
   19a38:	b	199d8 <__printf_chk@plt+0x71ac>
   19a3c:	mov	r1, r4
   19a40:	mov	r2, #0
   19a44:	mov	r0, r5
   19a48:	movw	r4, #34876	; 0x883c
   19a4c:	movt	r4, #3
   19a50:	str	r4, [sp, #40]	; 0x28
   19a54:	bl	31804 <crc32@@Base+0x174a8>
   19a58:	ldr	r1, [sp, #24]
   19a5c:	mov	r2, #0
   19a60:	mov	r6, r0
   19a64:	mov	r0, r5
   19a68:	bl	31804 <crc32@@Base+0x174a8>
   19a6c:	mov	r2, r4
   19a70:	mov	r3, r6
   19a74:	movw	r1, #35008	; 0x88c0
   19a78:	movt	r1, #3
   19a7c:	str	r0, [sp]
   19a80:	mov	r0, #1
   19a84:	bl	1282c <__printf_chk@plt>
   19a88:	b	199a8 <__printf_chk@plt+0x717c>
   19a8c:	bl	12538 <__stack_chk_fail@plt>
   19a90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a94:	mov	r6, r0
   19a98:	add	fp, sp, #32
   19a9c:	sub	sp, sp, #316	; 0x13c
   19aa0:	ldr	r0, [r0, #4]
   19aa4:	str	r1, [fp, #-312]	; 0xfffffec8
   19aa8:	movw	r7, #3824	; 0xef0
   19aac:	ubfx	r4, r0, #8, #8
   19ab0:	ubfx	lr, r0, #16, #8
   19ab4:	lsr	r1, r0, #24
   19ab8:	movt	r7, #5
   19abc:	orr	r1, r1, r0, lsl #24
   19ac0:	mov	r8, r3
   19ac4:	orr	r1, r1, r4, lsl #16
   19ac8:	ldr	ip, [r7]
   19acc:	orr	r1, r1, lr, lsl #8
   19ad0:	mov	r0, #0
   19ad4:	cmp	r1, #268435456	; 0x10000000
   19ad8:	str	r0, [r3]
   19adc:	movw	r1, #45044	; 0xaff4
   19ae0:	str	ip, [fp, #-40]	; 0xffffffd8
   19ae4:	movt	r1, #3
   19ae8:	str	r1, [fp, #-244]	; 0xffffff0c
   19aec:	bls	19b18 <__printf_chk@plt+0x72ec>
   19af0:	mvn	r0, #0
   19af4:	movw	r3, #35744	; 0x8ba0
   19af8:	movt	r3, #3
   19afc:	str	r3, [r8]
   19b00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19b04:	ldr	r3, [r7]
   19b08:	cmp	r2, r3
   19b0c:	bne	19dc8 <__printf_chk@plt+0x759c>
   19b10:	sub	sp, fp, #32
   19b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b18:	str	r3, [sp]
   19b1c:	sub	r0, fp, #292	; 0x124
   19b20:	ldr	r4, [fp, #-312]	; 0xfffffec8
   19b24:	mov	r3, r2
   19b28:	mov	r1, r6
   19b2c:	mov	r2, r4
   19b30:	bl	1952c <__printf_chk@plt+0x6d00>
   19b34:	cmp	r0, #0
   19b38:	bne	19dc0 <__printf_chk@plt+0x7594>
   19b3c:	sub	r3, fp, #300	; 0x12c
   19b40:	mov	r1, r4
   19b44:	sub	r2, fp, #304	; 0x130
   19b48:	mov	r0, r6
   19b4c:	bl	18064 <__printf_chk@plt+0x5838>
   19b50:	subs	r4, r0, #0
   19b54:	movwne	r3, #34844	; 0x881c
   19b58:	mvnne	r0, #0
   19b5c:	movtne	r3, #3
   19b60:	strne	r3, [r8]
   19b64:	bne	19b00 <__printf_chk@plt+0x72d4>
   19b68:	movw	r2, #32628	; 0x7f74
   19b6c:	sub	r3, fp, #296	; 0x128
   19b70:	movt	r2, #3
   19b74:	ldr	r1, [fp, #-312]	; 0xfffffec8
   19b78:	mov	r0, r6
   19b7c:	bl	31b04 <crc32@@Base+0x177a8>
   19b80:	subs	r9, r0, #0
   19b84:	beq	19dac <__printf_chk@plt+0x7580>
   19b88:	ldr	ip, [fp, #-296]	; 0xfffffed8
   19b8c:	add	r5, r9, ip
   19b90:	cmp	r9, r5
   19b94:	bcs	19dac <__printf_chk@plt+0x7580>
   19b98:	sub	r2, r9, #1
   19b9c:	sub	r0, r5, #1
   19ba0:	ldrb	r1, [r2, #1]!
   19ba4:	cmp	r1, #0
   19ba8:	addeq	r4, r4, #1
   19bac:	cmp	r0, r2
   19bb0:	bne	19ba0 <__printf_chk@plt+0x7374>
   19bb4:	cmp	r4, #0
   19bb8:	beq	19dac <__printf_chk@plt+0x7580>
   19bbc:	cmp	ip, #0
   19bc0:	ble	19be0 <__printf_chk@plt+0x73b4>
   19bc4:	ldrb	r2, [r5, #-1]
   19bc8:	cmp	r2, #0
   19bcc:	movwne	r3, #35864	; 0x8c18
   19bd0:	mvnne	r0, #0
   19bd4:	movtne	r3, #3
   19bd8:	strne	r3, [r8]
   19bdc:	bne	19b00 <__printf_chk@plt+0x72d4>
   19be0:	cmp	r4, #100	; 0x64
   19be4:	movwgt	r3, #35912	; 0x8c48
   19be8:	mvngt	r0, #0
   19bec:	movtgt	r3, #3
   19bf0:	strgt	r3, [r8]
   19bf4:	bgt	19b00 <__printf_chk@plt+0x72d4>
   19bf8:	lsl	r2, r4, #2
   19bfc:	str	sp, [fp, #-316]	; 0xfffffec4
   19c00:	add	r2, r2, #10
   19c04:	bic	r2, r2, #7
   19c08:	sub	sp, sp, r2
   19c0c:	add	sl, sp, #20
   19c10:	add	r3, sp, #24
   19c14:	str	r3, [fp, #-320]	; 0xfffffec0
   19c18:	str	r9, [sl, #4]!
   19c1c:	mov	r0, r9
   19c20:	bl	1267c <strlen@plt>
   19c24:	add	r0, r0, #1
   19c28:	add	r9, r9, r0
   19c2c:	cmp	r5, r9
   19c30:	bhi	19c18 <__printf_chk@plt+0x73ec>
   19c34:	rsb	r3, r4, r4, lsl #3
   19c38:	mov	r2, r4
   19c3c:	add	r4, r3, #19
   19c40:	ldr	r1, [fp, #-320]	; 0xfffffec0
   19c44:	lsl	r3, r3, #3
   19c48:	mov	lr, #200	; 0xc8
   19c4c:	add	r3, r3, #168	; 0xa8
   19c50:	sub	r0, fp, #240	; 0xf0
   19c54:	sub	sp, sp, r3
   19c58:	mov	ip, #1
   19c5c:	sub	r3, fp, #244	; 0xf4
   19c60:	add	r5, sp, #24
   19c64:	str	r0, [sp, #12]
   19c68:	mov	sl, #0
   19c6c:	str	r4, [sp, #8]
   19c70:	mov	r0, r6
   19c74:	str	lr, [sp, #16]
   19c78:	str	ip, [sp]
   19c7c:	str	r5, [sp, #4]
   19c80:	str	sl, [sp, #20]
   19c84:	bl	32798 <crc32@@Base+0x1843c>
   19c88:	subs	r3, r0, #0
   19c8c:	mov	r9, r3
   19c90:	blt	19cb0 <__printf_chk@plt+0x7484>
   19c94:	bne	19cc4 <__printf_chk@plt+0x7498>
   19c98:	mvn	r0, #0
   19c9c:	movw	r3, #35984	; 0x8c90
   19ca0:	movt	r3, #3
   19ca4:	str	r3, [r8]
   19ca8:	ldr	sp, [fp, #-316]	; 0xfffffec4
   19cac:	b	19b00 <__printf_chk@plt+0x72d4>
   19cb0:	movw	r3, #35952	; 0x8c70
   19cb4:	mvn	r0, #0
   19cb8:	movt	r3, #3
   19cbc:	str	r3, [r8]
   19cc0:	b	19ca8 <__printf_chk@plt+0x747c>
   19cc4:	cmp	r4, r3
   19cc8:	bgt	19ce0 <__printf_chk@plt+0x74b4>
   19ccc:	movw	r3, #36000	; 0x8ca0
   19cd0:	mvn	r0, #0
   19cd4:	movt	r3, #3
   19cd8:	str	r3, [r8]
   19cdc:	b	19ca8 <__printf_chk@plt+0x747c>
   19ce0:	mov	r3, sl
   19ce4:	ldr	r1, [fp, #-312]	; 0xfffffec8
   19ce8:	movw	r2, #32644	; 0x7f84
   19cec:	mov	r0, r6
   19cf0:	movt	r2, #3
   19cf4:	bl	31b04 <crc32@@Base+0x177a8>
   19cf8:	cmp	r0, #0
   19cfc:	beq	19d4c <__printf_chk@plt+0x7520>
   19d00:	ldr	r1, [r6, #12]
   19d04:	add	r2, r5, r9, lsl #3
   19d08:	ubfx	lr, r1, #8, #8
   19d0c:	ubfx	ip, r1, #16, #8
   19d10:	lsr	r3, r1, #24
   19d14:	orr	r3, r3, r1, lsl #24
   19d18:	orr	r3, r3, lr, lsl #16
   19d1c:	orr	r3, r3, ip, lsl #8
   19d20:	str	r3, [r5, r9, lsl #3]
   19d24:	ldr	r1, [r0, #4]
   19d28:	add	r3, r9, #1
   19d2c:	ubfx	ip, r1, #8, #8
   19d30:	mov	r9, r3
   19d34:	lsr	r3, r1, #24
   19d38:	ubfx	r0, r1, #16, #8
   19d3c:	orr	r3, r3, r1, lsl #24
   19d40:	orr	r3, r3, ip, lsl #16
   19d44:	orr	r3, r3, r0, lsl #8
   19d48:	str	r3, [r2, #4]
   19d4c:	lsl	r3, r9, #3
   19d50:	mov	r2, r9
   19d54:	add	r3, r3, #8
   19d58:	mov	r1, r5
   19d5c:	sub	sp, sp, r3
   19d60:	mov	r0, r6
   19d64:	add	r4, sp, #24
   19d68:	mov	r3, r4
   19d6c:	bl	196ac <__printf_chk@plt+0x6e80>
   19d70:	ldr	ip, [fp, #-264]	; 0xfffffef8
   19d74:	ldr	lr, [fp, #-300]	; 0xfffffed4
   19d78:	mov	r1, r4
   19d7c:	ldr	r3, [fp, #-304]	; 0xfffffed0
   19d80:	mov	r2, r9
   19d84:	sub	r0, fp, #292	; 0x124
   19d88:	str	lr, [sp]
   19d8c:	ldr	r4, [ip, #16]
   19d90:	blx	r4
   19d94:	cmp	r0, #0
   19d98:	movwne	r3, #35768	; 0x8bb8
   19d9c:	mvnne	r0, #0
   19da0:	movtne	r3, #3
   19da4:	strne	r3, [r8]
   19da8:	b	19ca8 <__printf_chk@plt+0x747c>
   19dac:	movw	r3, #35832	; 0x8bf8
   19db0:	mvn	r0, #0
   19db4:	movt	r3, #3
   19db8:	str	r3, [r8]
   19dbc:	b	19b00 <__printf_chk@plt+0x72d4>
   19dc0:	mvn	r0, #0
   19dc4:	b	19b00 <__printf_chk@plt+0x72d4>
   19dc8:	bl	12538 <__stack_chk_fail@plt>
   19dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19dd0:	movw	r3, #3824	; 0xef0
   19dd4:	sub	sp, sp, #36	; 0x24
   19dd8:	movt	r3, #5
   19ddc:	mov	r9, r2
   19de0:	mov	r5, r0
   19de4:	str	r3, [sp, #20]
   19de8:	mov	r0, r2
   19dec:	ldr	r3, [r3]
   19df0:	movw	r2, #33528	; 0x82f8
   19df4:	str	r1, [sp, #12]
   19df8:	movt	r2, #3
   19dfc:	mov	r1, #0
   19e00:	str	r3, [sp, #28]
   19e04:	bl	317d4 <crc32@@Base+0x17478>
   19e08:	subs	r1, r0, #0
   19e0c:	blt	19f48 <__printf_chk@plt+0x771c>
   19e10:	mov	r0, r9
   19e14:	bl	2e678 <crc32@@Base+0x1431c>
   19e18:	subs	r6, r0, #0
   19e1c:	blt	19f48 <__printf_chk@plt+0x771c>
   19e20:	movw	sl, #34116	; 0x8544
   19e24:	movw	fp, #33748	; 0x83d4
   19e28:	movt	sl, #3
   19e2c:	movt	fp, #3
   19e30:	movw	r3, #50548	; 0xc574
   19e34:	movt	r3, #3
   19e38:	str	r3, [sp, #16]
   19e3c:	mov	r3, #0
   19e40:	mov	r2, sl
   19e44:	mov	r1, r6
   19e48:	mov	r0, r9
   19e4c:	bl	31b04 <crc32@@Base+0x177a8>
   19e50:	cmp	r0, #0
   19e54:	beq	19f34 <__printf_chk@plt+0x7708>
   19e58:	mov	r1, fp
   19e5c:	bl	12718 <strcmp@plt>
   19e60:	cmp	r0, #0
   19e64:	bne	19f34 <__printf_chk@plt+0x7708>
   19e68:	ldr	r3, [sp, #16]
   19e6c:	mov	r0, r5
   19e70:	ldr	r1, [sp, #12]
   19e74:	str	r3, [sp, #24]
   19e78:	bl	2e678 <crc32@@Base+0x1431c>
   19e7c:	subs	r4, r0, #0
   19e80:	blt	19ef0 <__printf_chk@plt+0x76c4>
   19e84:	movw	r7, #33528	; 0x82f8
   19e88:	movw	r8, #35004	; 0x88bc
   19e8c:	movt	r7, #3
   19e90:	movt	r8, #3
   19e94:	mov	r2, #0
   19e98:	mov	r1, r4
   19e9c:	mov	r0, r5
   19ea0:	bl	31804 <crc32@@Base+0x174a8>
   19ea4:	mov	r2, #9
   19ea8:	mov	r1, r7
   19eac:	bl	12220 <strncmp@plt>
   19eb0:	cmp	r0, #0
   19eb4:	bne	19edc <__printf_chk@plt+0x76b0>
   19eb8:	add	r3, sp, #24
   19ebc:	mov	r2, r6
   19ec0:	mov	r1, r4
   19ec4:	mov	r0, r5
   19ec8:	bl	19a90 <__printf_chk@plt+0x7264>
   19ecc:	cmp	r0, #0
   19ed0:	beq	19f28 <__printf_chk@plt+0x76fc>
   19ed4:	mov	r0, r8
   19ed8:	bl	12310 <puts@plt>
   19edc:	mov	r1, r4
   19ee0:	mov	r0, r5
   19ee4:	bl	2e6d8 <crc32@@Base+0x1437c>
   19ee8:	subs	r4, r0, #0
   19eec:	bge	19e94 <__printf_chk@plt+0x7668>
   19ef0:	cmn	r4, #8
   19ef4:	cmnne	r4, #11
   19ef8:	beq	19f68 <__printf_chk@plt+0x773c>
   19efc:	mov	r1, r6
   19f00:	mov	r2, #0
   19f04:	mov	r0, r9
   19f08:	bl	31804 <crc32@@Base+0x174a8>
   19f0c:	movw	r1, #35788	; 0x8bcc
   19f10:	movt	r1, #3
   19f14:	mov	r2, r0
   19f18:	mov	r0, #1
   19f1c:	bl	1282c <__printf_chk@plt>
   19f20:	mvn	r0, #0
   19f24:	b	19f4c <__printf_chk@plt+0x7720>
   19f28:	movw	r0, #35000	; 0x88b8
   19f2c:	movt	r0, #3
   19f30:	bl	12310 <puts@plt>
   19f34:	mov	r1, r6
   19f38:	mov	r0, r9
   19f3c:	bl	2e6d8 <crc32@@Base+0x1437c>
   19f40:	subs	r6, r0, #0
   19f44:	bge	19e3c <__printf_chk@plt+0x7610>
   19f48:	mov	r0, #0
   19f4c:	ldr	r3, [sp, #20]
   19f50:	ldr	r2, [sp, #28]
   19f54:	ldr	r3, [r3]
   19f58:	cmp	r2, r3
   19f5c:	bne	19fb8 <__printf_chk@plt+0x778c>
   19f60:	add	sp, sp, #36	; 0x24
   19f64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19f68:	mov	r1, r4
   19f6c:	mov	r2, #0
   19f70:	mov	r0, r5
   19f74:	movw	r4, #34876	; 0x883c
   19f78:	movt	r4, #3
   19f7c:	str	r4, [sp, #24]
   19f80:	bl	31804 <crc32@@Base+0x174a8>
   19f84:	ldr	r1, [sp, #12]
   19f88:	mov	r2, #0
   19f8c:	mov	r7, r0
   19f90:	mov	r0, r5
   19f94:	bl	31804 <crc32@@Base+0x174a8>
   19f98:	mov	r2, r4
   19f9c:	mov	r3, r7
   19fa0:	movw	r1, #36024	; 0x8cb8
   19fa4:	movt	r1, #3
   19fa8:	str	r0, [sp]
   19fac:	mov	r0, #1
   19fb0:	bl	1282c <__printf_chk@plt>
   19fb4:	b	19efc <__printf_chk@plt+0x76d0>
   19fb8:	bl	12538 <__stack_chk_fail@plt>
   19fbc:	movw	r3, #51712	; 0xca00
   19fc0:	movt	r3, #30
   19fc4:	ldr	r2, [r3]
   19fc8:	b	19dcc <__printf_chk@plt+0x75a0>
   19fcc:	push	{r4, r5, r6, r7, r8, lr}
   19fd0:	mov	r6, r0
   19fd4:	ldr	r7, [sp, #40]	; 0x28
   19fd8:	uxtb	r0, r3
   19fdc:	mov	r4, r1
   19fe0:	mov	r8, r2
   19fe4:	ldr	r5, [sp, #32]
   19fe8:	str	r1, [r7]
   19fec:	bl	1afe0 <crc32@@Base+0xc84>
   19ff0:	cmp	r6, #0
   19ff4:	mov	r3, r0
   19ff8:	bne	1a094 <__printf_chk@plt+0x7868>
   19ffc:	cmp	r4, r8
   1a000:	beq	1a078 <__printf_chk@plt+0x784c>
   1a004:	movw	r2, #36240	; 0x8d90
   1a008:	movw	r1, #36248	; 0x8d98
   1a00c:	movt	r2, #3
   1a010:	movt	r1, #3
   1a014:	mov	r0, #1
   1a018:	bl	1282c <__printf_chk@plt>
   1a01c:	ldr	r3, [sp, #36]	; 0x24
   1a020:	cmp	r5, r3
   1a024:	bhi	1a050 <__printf_chk@plt+0x7824>
   1a028:	mov	r2, r5
   1a02c:	ldrd	r0, [sp, #24]
   1a030:	bl	12424 <memmove@plt>
   1a034:	add	r4, r4, r5
   1a038:	movw	r0, #35408	; 0x8a50
   1a03c:	str	r4, [r7]
   1a040:	movt	r0, #3
   1a044:	bl	12310 <puts@plt>
   1a048:	mov	r0, #0
   1a04c:	pop	{r4, r5, r6, r7, r8, pc}
   1a050:	mov	r0, r6
   1a054:	bl	1b088 <crc32@@Base+0xd2c>
   1a058:	movw	r0, #36164	; 0x8d44
   1a05c:	movt	r0, #3
   1a060:	bl	12310 <puts@plt>
   1a064:	movw	r0, #36212	; 0x8d74
   1a068:	movt	r0, #3
   1a06c:	bl	12310 <puts@plt>
   1a070:	mvn	r0, #0
   1a074:	pop	{r4, r5, r6, r7, r8, pc}
   1a078:	movw	r2, #36264	; 0x8da8
   1a07c:	movw	r1, #36248	; 0x8d98
   1a080:	movt	r2, #3
   1a084:	movt	r1, #3
   1a088:	mov	r0, #1
   1a08c:	bl	1282c <__printf_chk@plt>
   1a090:	b	1a034 <__printf_chk@plt+0x7808>
   1a094:	mov	r2, r0
   1a098:	movw	r1, #36100	; 0x8d04
   1a09c:	mov	r0, #1
   1a0a0:	movt	r1, #3
   1a0a4:	bl	1282c <__printf_chk@plt>
   1a0a8:	mov	r2, r6
   1a0ac:	movw	r1, #36128	; 0x8d20
   1a0b0:	mov	r0, #1
   1a0b4:	movt	r1, #3
   1a0b8:	bl	1282c <__printf_chk@plt>
   1a0bc:	mvn	r0, #2
   1a0c0:	pop	{r4, r5, r6, r7, r8, pc}
   1a0c4:	b	12424 <memmove@plt>
   1a0c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a0cc:	movw	r8, #3824	; 0xef0
   1a0d0:	movt	r8, #5
   1a0d4:	movw	r3, #36292	; 0x8dc4
   1a0d8:	sub	sp, sp, #204	; 0xcc
   1a0dc:	mov	r2, r3
   1a0e0:	ldr	r3, [r8]
   1a0e4:	mov	r4, #0
   1a0e8:	movw	r7, #36096	; 0x8d00
   1a0ec:	add	sl, sp, #56	; 0x38
   1a0f0:	movt	r7, #3
   1a0f4:	mov	r5, r0
   1a0f8:	mov	r6, r4
   1a0fc:	mov	r9, #2
   1a100:	movt	r2, #3
   1a104:	str	r3, [sp, #196]	; 0xc4
   1a108:	str	r2, [sp, #32]
   1a10c:	movw	r2, #36268	; 0x8dac
   1a110:	str	r8, [sp, #28]
   1a114:	movt	r2, #3
   1a118:	str	r2, [sp, #36]	; 0x24
   1a11c:	mov	fp, #0
   1a120:	mov	r2, #132	; 0x84
   1a124:	mov	r1, fp
   1a128:	add	r0, sp, #64	; 0x40
   1a12c:	str	fp, [sp, #48]	; 0x30
   1a130:	bl	12388 <memset@plt>
   1a134:	mvn	ip, #0
   1a138:	add	r1, sp, #52	; 0x34
   1a13c:	str	r9, [sp, #4]
   1a140:	mov	r2, fp
   1a144:	str	r1, [sp, #16]
   1a148:	add	r3, sp, #48	; 0x30
   1a14c:	str	ip, [sp, #8]
   1a150:	mov	r1, r5
   1a154:	str	fp, [sp, #12]
   1a158:	add	r0, sp, #64	; 0x40
   1a15c:	str	fp, [sp]
   1a160:	mov	ip, #1
   1a164:	str	sl, [sp, #20]
   1a168:	str	ip, [sp, #188]	; 0xbc
   1a16c:	bl	18d3c <__printf_chk@plt+0x6510>
   1a170:	subs	r9, r0, #0
   1a174:	blt	1a218 <__printf_chk@plt+0x79ec>
   1a178:	add	r2, sp, #46	; 0x2e
   1a17c:	mov	r1, r9
   1a180:	mov	r0, r5
   1a184:	bl	173e8 <__printf_chk@plt+0x4bbc>
   1a188:	cmp	r0, fp
   1a18c:	bne	1a254 <__printf_chk@plt+0x7a28>
   1a190:	mov	r1, r9
   1a194:	add	r2, sp, #47	; 0x2f
   1a198:	mov	r0, r5
   1a19c:	bl	17450 <__printf_chk@plt+0x4c24>
   1a1a0:	subs	r8, r0, #0
   1a1a4:	bne	1a26c <__printf_chk@plt+0x7a40>
   1a1a8:	ldr	r9, [sp, #56]	; 0x38
   1a1ac:	add	r0, r9, #262144	; 0x40000
   1a1b0:	lsl	r0, r0, #2
   1a1b4:	bl	12664 <malloc@plt>
   1a1b8:	ldr	ip, [sp, #52]	; 0x34
   1a1bc:	add	lr, sp, #60	; 0x3c
   1a1c0:	mov	r1, r8
   1a1c4:	ldrb	r3, [sp, #46]	; 0x2e
   1a1c8:	mov	r2, ip
   1a1cc:	str	r9, [sp, #8]
   1a1d0:	str	lr, [sp, #16]
   1a1d4:	mov	fp, r0
   1a1d8:	ldrb	r0, [sp, #47]	; 0x2f
   1a1dc:	stm	sp, {fp, ip}
   1a1e0:	mov	ip, #8388608	; 0x800000
   1a1e4:	str	ip, [sp, #12]
   1a1e8:	bl	19fcc <__printf_chk@plt+0x77a0>
   1a1ec:	mov	r9, r0
   1a1f0:	mov	r0, fp
   1a1f4:	bl	121c0 <free@plt>
   1a1f8:	cmp	r9, #0
   1a1fc:	cmnne	r9, #3
   1a200:	bne	1a218 <__printf_chk@plt+0x79ec>
   1a204:	add	r4, r4, #1
   1a208:	cmp	r4, #3
   1a20c:	beq	1a234 <__printf_chk@plt+0x7a08>
   1a210:	ldrb	r9, [r4, r7]
   1a214:	b	1a11c <__printf_chk@plt+0x78f0>
   1a218:	cmp	r6, #0
   1a21c:	bne	1a204 <__printf_chk@plt+0x79d8>
   1a220:	cmn	r9, #2
   1a224:	add	r4, r4, #1
   1a228:	movne	r6, r9
   1a22c:	cmp	r4, #3
   1a230:	bne	1a210 <__printf_chk@plt+0x79e4>
   1a234:	ldr	r8, [sp, #28]
   1a238:	mov	r0, r6
   1a23c:	ldr	r2, [sp, #196]	; 0xc4
   1a240:	ldr	r3, [r8]
   1a244:	cmp	r2, r3
   1a248:	bne	1a280 <__printf_chk@plt+0x7a54>
   1a24c:	add	sp, sp, #204	; 0xcc
   1a250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a254:	ldr	r0, [sp, #36]	; 0x24
   1a258:	bl	12310 <puts@plt>
   1a25c:	cmp	r6, fp
   1a260:	bne	1a204 <__printf_chk@plt+0x79d8>
   1a264:	mvn	r6, #21
   1a268:	b	1a204 <__printf_chk@plt+0x79d8>
   1a26c:	ldr	r0, [sp, #32]
   1a270:	bl	12310 <puts@plt>
   1a274:	cmp	r6, #0
   1a278:	beq	1a264 <__printf_chk@plt+0x7a38>
   1a27c:	b	1a204 <__printf_chk@plt+0x79d8>
   1a280:	bl	12538 <__stack_chk_fail@plt>
   1a284:	tst	r1, #3
   1a288:	beq	1a2c0 <__printf_chk@plt+0x7a94>
   1a28c:	cmp	r2, #0
   1a290:	bxeq	lr
   1a294:	movw	r3, #36324	; 0x8de4
   1a298:	movt	r3, #3
   1a29c:	ldrb	ip, [r1], #1
   1a2a0:	subs	r2, r2, #1
   1a2a4:	eor	ip, ip, r0
   1a2a8:	uxtb	ip, ip
   1a2ac:	ldr	ip, [r3, ip, lsl #2]
   1a2b0:	eor	r0, ip, r0, lsr #8
   1a2b4:	bxeq	lr
   1a2b8:	tst	r1, #3
   1a2bc:	bne	1a29c <__printf_chk@plt+0x7a70>
   1a2c0:	lsrs	ip, r2, #2
   1a2c4:	and	r2, r2, #3
   1a2c8:	push	{lr}		; (str lr, [sp, #-4]!)
   1a2cc:	sub	lr, r1, #4
   1a2d0:	beq	1a324 <__printf_chk@plt+0x7af8>
   1a2d4:	sub	ip, ip, #-1073741823	; 0xc0000001
   1a2d8:	movw	r3, #36324	; 0x8de4
   1a2dc:	movt	r3, #3
   1a2e0:	add	r1, r1, ip, lsl #2
   1a2e4:	ldr	ip, [lr, #4]!
   1a2e8:	eor	r0, r0, ip
   1a2ec:	cmp	lr, r1
   1a2f0:	uxtb	ip, r0
   1a2f4:	ldr	ip, [r3, ip, lsl #2]
   1a2f8:	eor	ip, ip, r0, lsr #8
   1a2fc:	uxtb	r0, ip
   1a300:	ldr	r0, [r3, r0, lsl #2]
   1a304:	eor	ip, r0, ip, lsr #8
   1a308:	uxtb	r0, ip
   1a30c:	ldr	r0, [r3, r0, lsl #2]
   1a310:	eor	r0, r0, ip, lsr #8
   1a314:	uxtb	ip, r0
   1a318:	ldr	ip, [r3, ip, lsl #2]
   1a31c:	eor	r0, ip, r0, lsr #8
   1a320:	bne	1a2e4 <__printf_chk@plt+0x7ab8>
   1a324:	cmp	r2, #0
   1a328:	popeq	{pc}		; (ldreq pc, [sp], #4)
   1a32c:	add	r1, lr, #3
   1a330:	movw	r3, #36324	; 0x8de4
   1a334:	add	lr, r1, r2
   1a338:	movt	r3, #3
   1a33c:	ldrb	r2, [r1, #1]!
   1a340:	eor	r2, r2, r0
   1a344:	cmp	r1, lr
   1a348:	uxtb	r2, r2
   1a34c:	ldr	ip, [r3, r2, lsl #2]
   1a350:	eor	r0, ip, r0, lsr #8
   1a354:	bne	1a33c <__printf_chk@plt+0x7b10>
   1a358:	pop	{pc}		; (ldr pc, [sp], #4)

0001a35c <crc32@@Base>:
   1a35c:	push	{r4, lr}
   1a360:	mvn	r0, r0
   1a364:	bl	1a284 <__printf_chk@plt+0x7a58>
   1a368:	mvn	r0, r0
   1a36c:	pop	{r4, pc}
   1a370:	push	{r4, lr}
   1a374:	mvn	r0, r0
   1a378:	bl	1a284 <__printf_chk@plt+0x7a58>
   1a37c:	mvn	r0, r0
   1a380:	pop	{r4, pc}
   1a384:	push	{r4, lr}
   1a388:	mov	r4, r2
   1a38c:	mov	r2, r1
   1a390:	mov	r1, r0
   1a394:	mvn	r0, #0
   1a398:	bl	1a284 <__printf_chk@plt+0x7a58>
   1a39c:	mvn	r0, r0
   1a3a0:	rev	r0, r0
   1a3a4:	str	r0, [r4]
   1a3a8:	pop	{r4, pc}
   1a3ac:	sub	r0, r0, #1
   1a3b0:	uxtb	r0, r0
   1a3b4:	cmp	r0, #31
   1a3b8:	movwls	r3, #8319	; 0x207f
   1a3bc:	movtls	r3, #32768	; 0x8000
   1a3c0:	mvnls	r0, r3, lsr r0
   1a3c4:	andls	r0, r0, #1
   1a3c8:	movhi	r0, #1
   1a3cc:	bx	lr
   1a3d0:	ldr	r2, [r0]
   1a3d4:	ldr	r3, [r0, #8]
   1a3d8:	cmp	r2, #0
   1a3dc:	beq	1a400 <crc32@@Base+0xa4>
   1a3e0:	cmp	r3, #0
   1a3e4:	movne	r3, #1
   1a3e8:	bne	1a3f8 <crc32@@Base+0x9c>
   1a3ec:	ldr	r3, [r0, #16]
   1a3f0:	adds	r3, r3, #0
   1a3f4:	movne	r3, #1
   1a3f8:	mov	r0, r3
   1a3fc:	bx	lr
   1a400:	cmp	r3, #0
   1a404:	ldr	r2, [r0, #16]
   1a408:	beq	1a3f8 <crc32@@Base+0x9c>
   1a40c:	adds	r3, r2, #0
   1a410:	movne	r3, #1
   1a414:	mov	r0, r3
   1a418:	bx	lr
   1a41c:	push	{r4, r5, r6, r7, r8, lr}
   1a420:	movw	r5, #3824	; 0xef0
   1a424:	movt	r5, #5
   1a428:	ldrb	r2, [r0, #30]
   1a42c:	sub	sp, sp, #24
   1a430:	mov	r4, r0
   1a434:	ldr	r3, [r5]
   1a438:	cmp	r2, #4
   1a43c:	mov	r6, r1
   1a440:	str	r3, [sp, #20]
   1a444:	beq	1a47c <crc32@@Base+0x120>
   1a448:	ldr	r2, [r0, #12]
   1a44c:	add	r1, r0, #64	; 0x40
   1a450:	str	r1, [sp, #12]
   1a454:	rev	r2, r2
   1a458:	str	r2, [sp, #16]
   1a45c:	ldr	r0, [r6, #84]	; 0x54
   1a460:	bl	1b47c <crc32@@Base+0x1120>
   1a464:	ldr	r2, [sp, #20]
   1a468:	ldr	r3, [r5]
   1a46c:	cmp	r2, r3
   1a470:	bne	1a4e4 <crc32@@Base+0x188>
   1a474:	add	sp, sp, #24
   1a478:	pop	{r4, r5, r6, r7, r8, pc}
   1a47c:	ldr	r7, [r1, #20]
   1a480:	bl	1a860 <crc32@@Base+0x504>
   1a484:	add	r2, sp, #12
   1a488:	add	r3, sp, #16
   1a48c:	mov	r1, r7
   1a490:	mov	r8, r0
   1a494:	mov	r0, r4
   1a498:	bl	1a890 <crc32@@Base+0x534>
   1a49c:	ldr	r2, [sp, #16]
   1a4a0:	cmp	r2, #0
   1a4a4:	cmpne	r7, r8
   1a4a8:	ldrcc	r1, [sp, #12]
   1a4ac:	bcc	1a45c <crc32@@Base+0x100>
   1a4b0:	ldr	ip, [r6, #76]	; 0x4c
   1a4b4:	movw	r1, #7868	; 0x1ebc
   1a4b8:	movt	r1, #5
   1a4bc:	ldr	r3, [r6, #80]	; 0x50
   1a4c0:	movw	r2, #37348	; 0x91e4
   1a4c4:	movt	r2, #3
   1a4c8:	ldr	r0, [r1]
   1a4cc:	mov	r1, #1
   1a4d0:	str	r7, [sp]
   1a4d4:	str	ip, [sp, #4]
   1a4d8:	bl	12358 <__fprintf_chk@plt>
   1a4dc:	mvn	r0, #0
   1a4e0:	b	1a464 <crc32@@Base+0x108>
   1a4e4:	bl	12538 <__stack_chk_fail@plt>
   1a4e8:	ldr	r2, [r1, #44]	; 0x2c
   1a4ec:	push	{r4, r5, r6, r7, r8, lr}
   1a4f0:	sub	r2, r2, #64	; 0x40
   1a4f4:	mov	r4, r0
   1a4f8:	mov	r7, r1
   1a4fc:	add	r1, r0, #64	; 0x40
   1a500:	mov	r0, #0
   1a504:	mov	r5, r3
   1a508:	bl	1a35c <crc32@@Base>
   1a50c:	ldr	r1, [r7, #64]	; 0x40
   1a510:	mov	r6, r0
   1a514:	ldr	r0, [r5, #80]	; 0x50
   1a518:	bl	1b650 <crc32@@Base+0x12f4>
   1a51c:	ldr	r3, [r5, #44]	; 0x2c
   1a520:	ldr	ip, [r5, #36]	; 0x24
   1a524:	rev	r6, r6
   1a528:	cmp	r3, #32
   1a52c:	ldr	r3, [r7, #44]	; 0x2c
   1a530:	ldr	r2, [r5, #60]	; 0x3c
   1a534:	addeq	r3, r3, #8064	; 0x1f80
   1a538:	subne	r3, r3, #64	; 0x40
   1a53c:	addeq	r3, r3, #32
   1a540:	cmp	ip, #26
   1a544:	ldr	r1, [r5, #56]	; 0x38
   1a548:	rev	r3, r3
   1a54c:	ldreq	r2, [r4, #80]	; 0x50
   1a550:	str	r3, [r4, #12]
   1a554:	movw	r3, #1319	; 0x527
   1a558:	subeq	r1, r2, #28
   1a55c:	str	r6, [r4, #24]
   1a560:	rev	r1, r1
   1a564:	rev	r2, r2
   1a568:	str	r1, [r4, #16]
   1a56c:	movt	r3, #22041	; 0x5619
   1a570:	str	r2, [r4, #20]
   1a574:	mov	r2, #32
   1a578:	str	r3, [r4]
   1a57c:	rev	r0, r0
   1a580:	str	r0, [r4, #8]
   1a584:	ldr	r3, [r5, #36]	; 0x24
   1a588:	add	r0, r4, r2
   1a58c:	strb	r3, [r4, #28]
   1a590:	ldr	r3, [r5, #40]	; 0x28
   1a594:	strb	r3, [r4, #29]
   1a598:	ldr	r3, [r5, #44]	; 0x2c
   1a59c:	strb	r3, [r4, #30]
   1a5a0:	ldr	r3, [r5, #48]	; 0x30
   1a5a4:	strb	r3, [r4, #31]
   1a5a8:	ldr	r1, [r5, #64]	; 0x40
   1a5ac:	bl	12778 <strncpy@plt>
   1a5b0:	mov	r2, #64	; 0x40
   1a5b4:	mov	r1, r4
   1a5b8:	mov	r0, #0
   1a5bc:	bl	1a35c <crc32@@Base>
   1a5c0:	rev	r0, r0
   1a5c4:	str	r0, [r4, #4]
   1a5c8:	pop	{r4, r5, r6, r7, r8, pc}
   1a5cc:	push	{r4, r5, r6, r7, r8, lr}
   1a5d0:	movw	r5, #3824	; 0xef0
   1a5d4:	movt	r5, #5
   1a5d8:	sub	sp, sp, #72	; 0x48
   1a5dc:	add	r6, r0, #64	; 0x40
   1a5e0:	add	lr, sp, #4
   1a5e4:	ldr	r3, [r5]
   1a5e8:	mov	r4, r0
   1a5ec:	mov	r8, r1
   1a5f0:	str	r3, [sp, #68]	; 0x44
   1a5f4:	ldr	r0, [r4]
   1a5f8:	add	r4, r4, #16
   1a5fc:	ldr	r1, [r4, #-12]
   1a600:	mov	ip, lr
   1a604:	ldr	r2, [r4, #-8]
   1a608:	add	lr, lr, #16
   1a60c:	ldr	r3, [r4, #-4]
   1a610:	cmp	r4, r6
   1a614:	stmia	ip!, {r0, r1, r2, r3}
   1a618:	bne	1a5f4 <crc32@@Base+0x298>
   1a61c:	ldr	r2, [sp, #4]
   1a620:	movw	r3, #1319	; 0x527
   1a624:	movt	r3, #22041	; 0x5619
   1a628:	cmp	r2, r3
   1a62c:	bne	1a694 <crc32@@Base+0x338>
   1a630:	mov	r7, #0
   1a634:	add	r1, sp, #4
   1a638:	mov	r0, r7
   1a63c:	mov	r2, #64	; 0x40
   1a640:	ldr	r6, [sp, #8]
   1a644:	str	r7, [sp, #8]
   1a648:	bl	1a35c <crc32@@Base>
   1a64c:	rev	r6, r6
   1a650:	cmp	r6, r0
   1a654:	bne	1a69c <crc32@@Base+0x340>
   1a658:	ldr	r3, [sp, #28]
   1a65c:	mov	r1, r4
   1a660:	sub	r2, r8, #64	; 0x40
   1a664:	mov	r0, r7
   1a668:	rev	r4, r3
   1a66c:	bl	1a35c <crc32@@Base>
   1a670:	cmp	r4, r0
   1a674:	moveq	r0, r7
   1a678:	mvnne	r0, #10
   1a67c:	ldr	r2, [sp, #68]	; 0x44
   1a680:	ldr	r3, [r5]
   1a684:	cmp	r2, r3
   1a688:	bne	1a6a4 <crc32@@Base+0x348>
   1a68c:	add	sp, sp, #72	; 0x48
   1a690:	pop	{r4, r5, r6, r7, r8, pc}
   1a694:	mvn	r0, #8
   1a698:	b	1a67c <crc32@@Base+0x320>
   1a69c:	mvn	r0, #6
   1a6a0:	b	1a67c <crc32@@Base+0x320>
   1a6a4:	bl	12538 <__stack_chk_fail@plt>
   1a6a8:	push	{r4, r5, lr}
   1a6ac:	movw	r4, #3824	; 0xef0
   1a6b0:	movt	r4, #5
   1a6b4:	sub	sp, sp, #12
   1a6b8:	mov	r5, r3
   1a6bc:	ldr	ip, [r4]
   1a6c0:	mov	r3, sp
   1a6c4:	str	ip, [sp, #4]
   1a6c8:	bl	31b04 <crc32@@Base+0x177a8>
   1a6cc:	cmp	r0, #0
   1a6d0:	beq	1a6fc <crc32@@Base+0x3a0>
   1a6d4:	ldr	r3, [sp]
   1a6d8:	cmp	r3, #3
   1a6dc:	bls	1a6fc <crc32@@Base+0x3a0>
   1a6e0:	ldr	r3, [r0]
   1a6e4:	ubfx	r1, r3, #8, #8
   1a6e8:	ubfx	r2, r3, #16, #8
   1a6ec:	lsr	r5, r3, #24
   1a6f0:	orr	r5, r5, r3, lsl #24
   1a6f4:	orr	r5, r5, r1, lsl #16
   1a6f8:	orr	r5, r5, r2, lsl #8
   1a6fc:	ldr	r2, [sp, #4]
   1a700:	mov	r0, r5
   1a704:	ldr	r3, [r4]
   1a708:	cmp	r2, r3
   1a70c:	bne	1a718 <crc32@@Base+0x3bc>
   1a710:	add	sp, sp, #12
   1a714:	pop	{r4, r5, pc}
   1a718:	bl	12538 <__stack_chk_fail@plt>
   1a71c:	push	{r4, r5, lr}
   1a720:	movw	r4, #3824	; 0xef0
   1a724:	movt	r4, #5
   1a728:	sub	sp, sp, #12
   1a72c:	mov	r5, r3
   1a730:	ldr	ip, [r4]
   1a734:	mov	r3, sp
   1a738:	str	ip, [sp, #4]
   1a73c:	bl	31b04 <crc32@@Base+0x177a8>
   1a740:	cmp	r0, #0
   1a744:	beq	1a770 <crc32@@Base+0x414>
   1a748:	ldr	r3, [sp]
   1a74c:	cmp	r3, #3
   1a750:	bls	1a770 <crc32@@Base+0x414>
   1a754:	ldr	r3, [r0]
   1a758:	ubfx	r1, r3, #8, #8
   1a75c:	ubfx	r2, r3, #16, #8
   1a760:	lsr	r5, r3, #24
   1a764:	orr	r5, r5, r3, lsl #24
   1a768:	orr	r5, r5, r1, lsl #16
   1a76c:	orr	r5, r5, r2, lsl #8
   1a770:	ldr	r2, [sp, #4]
   1a774:	mov	r0, r5
   1a778:	ldr	r3, [r4]
   1a77c:	cmp	r2, r3
   1a780:	bne	1a78c <crc32@@Base+0x430>
   1a784:	add	sp, sp, #12
   1a788:	pop	{r4, r5, pc}
   1a78c:	bl	12538 <__stack_chk_fail@plt>
   1a790:	push	{r4, r5, r6, r7, lr}
   1a794:	movw	r4, #3824	; 0xef0
   1a798:	movt	r4, #5
   1a79c:	sub	sp, sp, #76	; 0x4c
   1a7a0:	add	r7, r0, #64	; 0x40
   1a7a4:	add	r5, sp, #4
   1a7a8:	ldr	r3, [r4]
   1a7ac:	mov	r6, r0
   1a7b0:	mov	ip, r0
   1a7b4:	str	r3, [sp, #68]	; 0x44
   1a7b8:	ldr	r0, [ip]
   1a7bc:	add	ip, ip, #16
   1a7c0:	ldr	r1, [ip, #-12]
   1a7c4:	mov	lr, r5
   1a7c8:	ldr	r2, [ip, #-8]
   1a7cc:	add	r5, r5, #16
   1a7d0:	ldr	r3, [ip, #-4]
   1a7d4:	cmp	ip, r7
   1a7d8:	stmia	lr!, {r0, r1, r2, r3}
   1a7dc:	bne	1a7b8 <crc32@@Base+0x45c>
   1a7e0:	mov	r3, #0
   1a7e4:	add	r1, sp, #4
   1a7e8:	mov	r0, r3
   1a7ec:	mov	r2, #64	; 0x40
   1a7f0:	str	r3, [sp, #8]
   1a7f4:	bl	1a35c <crc32@@Base>
   1a7f8:	ldr	r3, [r6, #4]
   1a7fc:	ldr	r1, [sp, #68]	; 0x44
   1a800:	rev	r3, r3
   1a804:	ldr	r2, [r4]
   1a808:	cmp	r1, r2
   1a80c:	sub	r0, r0, r3
   1a810:	clz	r0, r0
   1a814:	lsr	r0, r0, #5
   1a818:	bne	1a824 <crc32@@Base+0x4c8>
   1a81c:	add	sp, sp, #76	; 0x4c
   1a820:	pop	{r4, r5, r6, r7, pc}
   1a824:	bl	12538 <__stack_chk_fail@plt>
   1a828:	ldr	r2, [r0, #12]
   1a82c:	add	r1, r0, #64	; 0x40
   1a830:	push	{r4, lr}
   1a834:	mov	r3, #65536	; 0x10000
   1a838:	mov	r4, r0
   1a83c:	rev	r2, r2
   1a840:	mov	r0, #0
   1a844:	bl	1a370 <crc32@@Base+0x14>
   1a848:	ldr	r3, [r4, #24]
   1a84c:	rev	r3, r3
   1a850:	sub	r0, r0, r3
   1a854:	clz	r0, r0
   1a858:	lsr	r0, r0, #5
   1a85c:	pop	{r4, pc}
   1a860:	ldr	r3, [r0, #64]	; 0x40
   1a864:	cmp	r3, #0
   1a868:	beq	1a888 <crc32@@Base+0x52c>
   1a86c:	add	r3, r0, #68	; 0x44
   1a870:	mov	r0, #0
   1a874:	ldr	r2, [r3], #4
   1a878:	add	r0, r0, #1
   1a87c:	cmp	r2, #0
   1a880:	bne	1a874 <crc32@@Base+0x518>
   1a884:	bx	lr
   1a888:	mov	r0, r3
   1a88c:	bx	lr
   1a890:	ldr	ip, [r0, #64]	; 0x40
   1a894:	cmp	ip, #0
   1a898:	beq	1a934 <crc32@@Base+0x5d8>
   1a89c:	push	{r4, r5, r6, r7, r8, lr}
   1a8a0:	add	r7, r0, #68	; 0x44
   1a8a4:	add	r8, r0, #64	; 0x40
   1a8a8:	mov	r4, #0
   1a8ac:	mov	r5, r7
   1a8b0:	b	1a8b8 <crc32@@Base+0x55c>
   1a8b4:	mov	r4, r6
   1a8b8:	ldr	lr, [r5], #4
   1a8bc:	add	r6, r4, #1
   1a8c0:	cmp	lr, #0
   1a8c4:	bne	1a8b4 <crc32@@Base+0x558>
   1a8c8:	cmp	r1, r6
   1a8cc:	bcs	1a924 <crc32@@Base+0x5c8>
   1a8d0:	ldr	r5, [r8, r1, lsl #2]
   1a8d4:	add	r4, r4, #2
   1a8d8:	cmp	r1, #0
   1a8dc:	lsl	r1, r1, #2
   1a8e0:	rev	r5, r5
   1a8e4:	add	r4, r8, r4, lsl #2
   1a8e8:	str	r5, [r3]
   1a8ec:	beq	1a91c <crc32@@Base+0x5c0>
   1a8f0:	add	r1, r1, #64	; 0x40
   1a8f4:	add	r0, r0, r1
   1a8f8:	b	1a900 <crc32@@Base+0x5a4>
   1a8fc:	ldr	ip, [r7], #4
   1a900:	rev	ip, ip
   1a904:	cmp	r7, r0
   1a908:	add	ip, ip, #3
   1a90c:	bic	ip, ip, #3
   1a910:	add	lr, lr, ip
   1a914:	bne	1a8fc <crc32@@Base+0x5a0>
   1a918:	add	r4, r4, lr
   1a91c:	str	r4, [r2]
   1a920:	pop	{r4, r5, r6, r7, r8, pc}
   1a924:	mov	r1, #0
   1a928:	str	r1, [r3]
   1a92c:	str	r1, [r2]
   1a930:	pop	{r4, r5, r6, r7, r8, pc}
   1a934:	mov	r1, #0
   1a938:	str	r1, [r3]
   1a93c:	str	r1, [r2]
   1a940:	bx	lr
   1a944:	mov	r2, r0
   1a948:	vldr	d5, [pc, #64]	; 1a990 <crc32@@Base+0x634>
   1a94c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a950:	sub	sp, sp, #28
   1a954:	vmov	s15, r2
   1a958:	movw	r1, #38644	; 0x96f4
   1a95c:	vldr	d6, [pc, #52]	; 1a998 <crc32@@Base+0x63c>
   1a960:	movt	r1, #3
   1a964:	str	r0, [sp, #20]
   1a968:	mov	r0, #1
   1a96c:	vcvt.f64.u32	d7, s15
   1a970:	vmul.f64	d6, d7, d6
   1a974:	vmul.f64	d7, d7, d5
   1a978:	vstr	d6, [sp, #8]
   1a97c:	vstr	d7, [sp]
   1a980:	bl	1282c <__printf_chk@plt>
   1a984:	add	sp, sp, #28
   1a988:	pop	{pc}		; (ldr pc, [sp], #4)
   1a98c:	nop	{0}
   1a990:	andeq	r0, r0, r0
   1a994:	svccc	0x00500000
   1a998:	andeq	r0, r0, r0
   1a99c:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   1a9a0:	push	{lr}		; (str lr, [sp, #-4]!)
   1a9a4:	sub	sp, sp, #12
   1a9a8:	add	r3, sp, #8
   1a9ac:	str	r0, [r3, #-4]!
   1a9b0:	mov	r0, r3
   1a9b4:	bl	12430 <ctime@plt>
   1a9b8:	movw	r1, #59924	; 0xea14
   1a9bc:	movt	r1, #3
   1a9c0:	mov	r2, r0
   1a9c4:	mov	r0, #1
   1a9c8:	bl	1282c <__printf_chk@plt>
   1a9cc:	add	sp, sp, #12
   1a9d0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a9d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a9d8:	movw	r5, #3824	; 0xef0
   1a9dc:	movt	r5, #5
   1a9e0:	sub	sp, sp, #24
   1a9e4:	mov	r4, r0
   1a9e8:	add	r3, r0, #32
   1a9ec:	ldr	ip, [r5]
   1a9f0:	movw	r2, #50548	; 0xc574
   1a9f4:	str	r3, [sp]
   1a9f8:	movt	r2, #3
   1a9fc:	mov	r3, #32
   1aa00:	movw	r1, #38812	; 0x979c
   1aa04:	mov	r0, #1
   1aa08:	movt	r1, #3
   1aa0c:	str	ip, [sp, #20]
   1aa10:	bl	1282c <__printf_chk@plt>
   1aa14:	movw	r2, #50548	; 0xc574
   1aa18:	movw	r1, #38836	; 0x97b4
   1aa1c:	movt	r2, #3
   1aa20:	movt	r1, #3
   1aa24:	mov	r0, #1
   1aa28:	bl	1282c <__printf_chk@plt>
   1aa2c:	ldr	r0, [r4, #8]
   1aa30:	rev	r0, r0
   1aa34:	bl	1a9a0 <crc32@@Base+0x644>
   1aa38:	movw	r2, #50548	; 0xc574
   1aa3c:	movw	r1, #38856	; 0x97c8
   1aa40:	movt	r2, #3
   1aa44:	movt	r1, #3
   1aa48:	mov	r0, #1
   1aa4c:	bl	1282c <__printf_chk@plt>
   1aa50:	ldrb	r0, [r4, #28]
   1aa54:	cmp	r0, #0
   1aa58:	beq	1ad78 <crc32@@Base+0xa1c>
   1aa5c:	movw	r1, #37408	; 0x9220
   1aa60:	mov	r3, #25
   1aa64:	movt	r1, #3
   1aa68:	b	1aa7c <crc32@@Base+0x720>
   1aa6c:	cmp	r3, r0
   1aa70:	beq	1ad20 <crc32@@Base+0x9c4>
   1aa74:	ldr	r3, [r2, #12]
   1aa78:	mov	r1, r2
   1aa7c:	cmp	r3, #0
   1aa80:	add	r2, r1, #12
   1aa84:	bge	1aa6c <crc32@@Base+0x710>
   1aa88:	movw	r3, #38676	; 0x9714
   1aa8c:	movt	r3, #3
   1aa90:	ldrb	ip, [r4, #29]
   1aa94:	cmp	ip, #0
   1aa98:	beq	1ad6c <crc32@@Base+0xa10>
   1aa9c:	mov	r2, #1
   1aaa0:	ldr	r0, [pc, #736]	; 1ad88 <crc32@@Base+0xa2c>
   1aaa4:	b	1aab8 <crc32@@Base+0x75c>
   1aaa8:	cmp	r2, ip
   1aaac:	beq	1ad28 <crc32@@Base+0x9cc>
   1aab0:	ldr	r2, [r1, #12]
   1aab4:	mov	r0, r1
   1aab8:	cmp	r2, #0
   1aabc:	add	r1, r0, #12
   1aac0:	bge	1aaa8 <crc32@@Base+0x74c>
   1aac4:	movw	r2, #38688	; 0x9720
   1aac8:	movt	r2, #3
   1aacc:	ldrb	lr, [r4, #30]
   1aad0:	cmp	lr, #13
   1aad4:	beq	1ad60 <crc32@@Base+0xa04>
   1aad8:	mov	r1, #7
   1aadc:	ldr	ip, [pc, #680]	; 1ad8c <crc32@@Base+0xa30>
   1aae0:	b	1aaf4 <crc32@@Base+0x798>
   1aae4:	cmp	lr, r1
   1aae8:	beq	1ad30 <crc32@@Base+0x9d4>
   1aaec:	ldr	r1, [r0, #12]
   1aaf0:	mov	ip, r0
   1aaf4:	cmp	r1, #0
   1aaf8:	add	r0, ip, #12
   1aafc:	bge	1aae4 <crc32@@Base+0x788>
   1ab00:	movw	r6, #38712	; 0x9738
   1ab04:	movt	r6, #3
   1ab08:	ldrb	lr, [r4, #31]
   1ab0c:	cmp	lr, #0
   1ab10:	beq	1ad54 <crc32@@Base+0x9f8>
   1ab14:	mov	r1, #2
   1ab18:	ldr	ip, [pc, #624]	; 1ad90 <crc32@@Base+0xa34>
   1ab1c:	b	1ab30 <crc32@@Base+0x7d4>
   1ab20:	cmp	lr, r1
   1ab24:	beq	1ad18 <crc32@@Base+0x9bc>
   1ab28:	ldr	r1, [r0, #12]
   1ab2c:	mov	ip, r0
   1ab30:	cmp	r1, #0
   1ab34:	add	r0, ip, #12
   1ab38:	bge	1ab20 <crc32@@Base+0x7c4>
   1ab3c:	movw	r1, #38728	; 0x9748
   1ab40:	movt	r1, #3
   1ab44:	str	r1, [sp, #4]
   1ab48:	mov	r0, #1
   1ab4c:	str	r6, [sp]
   1ab50:	movw	r1, #38876	; 0x97dc
   1ab54:	movt	r1, #3
   1ab58:	bl	1282c <__printf_chk@plt>
   1ab5c:	movw	r2, #50548	; 0xc574
   1ab60:	movw	r1, #38892	; 0x97ec
   1ab64:	movt	r2, #3
   1ab68:	movt	r1, #3
   1ab6c:	mov	r0, #1
   1ab70:	bl	1282c <__printf_chk@plt>
   1ab74:	ldr	r0, [r4, #12]
   1ab78:	rev	r0, r0
   1ab7c:	bl	1a944 <crc32@@Base+0x5e8>
   1ab80:	ldr	r3, [r4, #16]
   1ab84:	movw	r2, #50548	; 0xc574
   1ab88:	movw	r1, #38912	; 0x9800
   1ab8c:	rev	r3, r3
   1ab90:	movt	r2, #3
   1ab94:	movt	r1, #3
   1ab98:	mov	r0, #1
   1ab9c:	bl	1282c <__printf_chk@plt>
   1aba0:	ldr	r3, [r4, #20]
   1aba4:	movw	r2, #50548	; 0xc574
   1aba8:	movw	r1, #38936	; 0x9818
   1abac:	rev	r3, r3
   1abb0:	movt	r2, #3
   1abb4:	movt	r1, #3
   1abb8:	mov	r0, #1
   1abbc:	bl	1282c <__printf_chk@plt>
   1abc0:	ldrb	r3, [r4, #30]
   1abc4:	and	r2, r3, #253	; 0xfd
   1abc8:	cmp	r2, #4
   1abcc:	bne	1ace0 <crc32@@Base+0x984>
   1abd0:	ldr	r3, [r4, #64]	; 0x40
   1abd4:	cmp	r3, #0
   1abd8:	beq	1ad38 <crc32@@Base+0x9dc>
   1abdc:	add	r3, r4, #68	; 0x44
   1abe0:	mov	r7, #0
   1abe4:	ldr	r8, [r3], #4
   1abe8:	add	r7, r7, #1
   1abec:	cmp	r8, #0
   1abf0:	bne	1abe4 <crc32@@Base+0x888>
   1abf4:	movw	r2, #50548	; 0xc574
   1abf8:	movw	r1, #38960	; 0x9830
   1abfc:	movt	r2, #3
   1ac00:	movt	r1, #3
   1ac04:	mov	r0, #1
   1ac08:	mov	r6, r8
   1ac0c:	bl	1282c <__printf_chk@plt>
   1ac10:	mov	r1, r8
   1ac14:	add	r3, sp, #16
   1ac18:	add	r2, sp, #12
   1ac1c:	mov	r0, r4
   1ac20:	movw	r9, #38976	; 0x9840
   1ac24:	bl	1a890 <crc32@@Base+0x534>
   1ac28:	mov	r3, r8
   1ac2c:	movw	r2, #50548	; 0xc574
   1ac30:	movw	r1, #38976	; 0x9840
   1ac34:	movt	r2, #3
   1ac38:	movt	r1, #3
   1ac3c:	mov	r0, #1
   1ac40:	movw	r8, #50548	; 0xc574
   1ac44:	bl	1282c <__printf_chk@plt>
   1ac48:	ldr	r0, [sp, #16]
   1ac4c:	bl	1a944 <crc32@@Base+0x5e8>
   1ac50:	movw	sl, #38992	; 0x9850
   1ac54:	movt	r8, #3
   1ac58:	movt	r9, #3
   1ac5c:	movt	sl, #3
   1ac60:	add	r6, r6, #1
   1ac64:	cmp	r7, r6
   1ac68:	beq	1acc8 <crc32@@Base+0x96c>
   1ac6c:	add	r3, sp, #16
   1ac70:	add	r2, sp, #12
   1ac74:	mov	r1, r6
   1ac78:	mov	r0, r4
   1ac7c:	bl	1a890 <crc32@@Base+0x534>
   1ac80:	mov	r3, r6
   1ac84:	mov	r2, r8
   1ac88:	mov	r1, r9
   1ac8c:	mov	r0, #1
   1ac90:	bl	1282c <__printf_chk@plt>
   1ac94:	ldr	r0, [sp, #16]
   1ac98:	bl	1a944 <crc32@@Base+0x5e8>
   1ac9c:	ldrb	r3, [r4, #30]
   1aca0:	cmp	r3, #6
   1aca4:	bne	1ac60 <crc32@@Base+0x904>
   1aca8:	ldr	r3, [sp, #12]
   1acac:	mov	r2, r8
   1acb0:	mov	r1, sl
   1acb4:	mov	r0, #1
   1acb8:	add	r6, r6, #1
   1acbc:	bl	1282c <__printf_chk@plt>
   1acc0:	cmp	r7, r6
   1acc4:	bne	1ac6c <crc32@@Base+0x910>
   1acc8:	ldr	r2, [sp, #20]
   1accc:	ldr	r3, [r5]
   1acd0:	cmp	r2, r3
   1acd4:	bne	1ad84 <crc32@@Base+0xa28>
   1acd8:	add	sp, sp, #24
   1acdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ace0:	cmp	r3, #32
   1ace4:	bne	1acc8 <crc32@@Base+0x96c>
   1ace8:	ldr	r3, [r4, #12]
   1acec:	movw	r1, #39016	; 0x9868
   1acf0:	ldr	r2, [r4, #16]
   1acf4:	movt	r1, #3
   1acf8:	rev	r3, r3
   1acfc:	mov	r0, #1
   1ad00:	sub	r3, r3, #8064	; 0x1f80
   1ad04:	rev	r2, r2
   1ad08:	sub	r3, r3, #32
   1ad0c:	sub	r2, r2, #64	; 0x40
   1ad10:	bl	1282c <__printf_chk@plt>
   1ad14:	b	1acc8 <crc32@@Base+0x96c>
   1ad18:	ldr	r1, [ip, #20]
   1ad1c:	b	1ab44 <crc32@@Base+0x7e8>
   1ad20:	ldr	r3, [r1, #20]
   1ad24:	b	1aa90 <crc32@@Base+0x734>
   1ad28:	ldr	r2, [r0, #20]
   1ad2c:	b	1aacc <crc32@@Base+0x770>
   1ad30:	ldr	r6, [ip, #20]
   1ad34:	b	1ab08 <crc32@@Base+0x7ac>
   1ad38:	movw	r2, #50548	; 0xc574
   1ad3c:	movw	r1, #38960	; 0x9830
   1ad40:	movt	r2, #3
   1ad44:	movt	r1, #3
   1ad48:	mov	r0, #1
   1ad4c:	bl	1282c <__printf_chk@plt>
   1ad50:	b	1acc8 <crc32@@Base+0x96c>
   1ad54:	movw	r1, #38796	; 0x978c
   1ad58:	movt	r1, #3
   1ad5c:	b	1ab44 <crc32@@Base+0x7e8>
   1ad60:	movw	r6, #38776	; 0x9778
   1ad64:	movt	r6, #3
   1ad68:	b	1ab08 <crc32@@Base+0x7ac>
   1ad6c:	movw	r2, #38760	; 0x9768
   1ad70:	movt	r2, #3
   1ad74:	b	1aacc <crc32@@Base+0x770>
   1ad78:	movw	r3, #38748	; 0x975c
   1ad7c:	movt	r3, #3
   1ad80:	b	1aa90 <crc32@@Base+0x734>
   1ad84:	bl	12538 <__stack_chk_fail@plt>
   1ad88:	andeq	r9, r3, r8, asr r3
   1ad8c:	muleq	r3, ip, r4
   1ad90:	andeq	r9, r3, r0, ror r6
   1ad94:	ldr	r3, [r0]
   1ad98:	cmp	r3, #0
   1ad9c:	blt	1adc0 <crc32@@Base+0xa64>
   1ada0:	cmp	r1, r3
   1ada4:	bne	1adb4 <crc32@@Base+0xa58>
   1ada8:	bx	lr
   1adac:	cmp	r3, r1
   1adb0:	bxeq	lr
   1adb4:	ldr	r3, [r0, #12]!
   1adb8:	cmp	r3, #0
   1adbc:	bge	1adac <crc32@@Base+0xa50>
   1adc0:	mov	r0, #0
   1adc4:	bx	lr
   1adc8:	push	{r4, r5, r6, lr}
   1adcc:	movw	lr, #37408	; 0x9220
   1add0:	movt	lr, #3
   1add4:	mov	r3, #12
   1add8:	mla	r3, r3, r0, lr
   1addc:	ldr	r2, [r3, #1196]	; 0x4ac
   1ade0:	ldr	r3, [r2]
   1ade4:	cmp	r3, #0
   1ade8:	bge	1adfc <crc32@@Base+0xaa0>
   1adec:	b	1ae0c <crc32@@Base+0xab0>
   1adf0:	ldr	r3, [r2, #12]!
   1adf4:	cmp	r3, #0
   1adf8:	blt	1ae0c <crc32@@Base+0xab0>
   1adfc:	cmp	r1, r3
   1ae00:	bne	1adf0 <crc32@@Base+0xa94>
   1ae04:	ldr	r0, [r2, #8]
   1ae08:	pop	{r4, r5, r6, pc}
   1ae0c:	movw	r3, #39056	; 0x9890
   1ae10:	movt	r3, #3
   1ae14:	mov	ip, r0
   1ae18:	mov	r5, #12
   1ae1c:	ldm	r3, {r0, r1, r2}
   1ae20:	movw	r4, #8244	; 0x2034
   1ae24:	mla	ip, r5, ip, lr
   1ae28:	movt	r4, #5
   1ae2c:	mov	r3, #30
   1ae30:	stmia	r4!, {r0, r1}
   1ae34:	mov	r0, r4
   1ae38:	strb	r2, [r0], #-8
   1ae3c:	mov	r2, #21
   1ae40:	ldr	r1, [ip, #1188]	; 0x4a4
   1ae44:	bl	124a8 <__strncat_chk@plt>
   1ae48:	sub	r0, r4, #8
   1ae4c:	pop	{r4, r5, r6, pc}
   1ae50:	push	{r4, r5, r6, lr}
   1ae54:	movw	lr, #37408	; 0x9220
   1ae58:	movt	lr, #3
   1ae5c:	mov	r3, #12
   1ae60:	mla	r3, r3, r0, lr
   1ae64:	ldr	r2, [r3, #1196]	; 0x4ac
   1ae68:	ldr	r3, [r2]
   1ae6c:	cmp	r3, #0
   1ae70:	bge	1ae84 <crc32@@Base+0xb28>
   1ae74:	b	1ae94 <crc32@@Base+0xb38>
   1ae78:	ldr	r3, [r2, #12]!
   1ae7c:	cmp	r3, #0
   1ae80:	blt	1ae94 <crc32@@Base+0xb38>
   1ae84:	cmp	r1, r3
   1ae88:	bne	1ae78 <crc32@@Base+0xb1c>
   1ae8c:	ldr	r0, [r2, #4]
   1ae90:	pop	{r4, r5, r6, pc}
   1ae94:	movw	r3, #39056	; 0x9890
   1ae98:	movt	r3, #3
   1ae9c:	mov	ip, r0
   1aea0:	mov	r5, #12
   1aea4:	ldm	r3, {r0, r1, r2}
   1aea8:	movw	r4, #8244	; 0x2034
   1aeac:	mla	ip, r5, ip, lr
   1aeb0:	movt	r4, #5
   1aeb4:	mov	r3, #30
   1aeb8:	stmia	r4!, {r0, r1}
   1aebc:	mov	r0, r4
   1aec0:	strb	r2, [r0], #-8
   1aec4:	mov	r2, #21
   1aec8:	ldr	r1, [ip, #1188]	; 0x4a4
   1aecc:	bl	124a8 <__strncat_chk@plt>
   1aed0:	sub	r0, r4, #8
   1aed4:	pop	{r4, r5, r6, pc}
   1aed8:	movw	r2, #37408	; 0x9220
   1aedc:	movt	r2, #3
   1aee0:	mov	r3, #12
   1aee4:	mla	r0, r3, r0, r2
   1aee8:	ldr	r0, [r0, #1192]	; 0x4a8
   1aeec:	bx	lr
   1aef0:	movw	r2, #37408	; 0x9220
   1aef4:	movt	r2, #3
   1aef8:	mov	r3, #12
   1aefc:	mla	r0, r3, r0, r2
   1af00:	ldr	r0, [r0, #1188]	; 0x4a4
   1af04:	bx	lr
   1af08:	ldr	r3, [r0]
   1af0c:	cmp	r3, #0
   1af10:	bge	1af24 <crc32@@Base+0xbc8>
   1af14:	b	1af30 <crc32@@Base+0xbd4>
   1af18:	ldr	r3, [r0, #12]!
   1af1c:	cmp	r3, #0
   1af20:	blt	1af30 <crc32@@Base+0xbd4>
   1af24:	cmp	r2, r3
   1af28:	bne	1af18 <crc32@@Base+0xbbc>
   1af2c:	ldr	r1, [r0, #8]
   1af30:	mov	r0, r1
   1af34:	bx	lr
   1af38:	cmp	r0, #0
   1af3c:	beq	1af80 <crc32@@Base+0xc24>
   1af40:	movw	r1, #37408	; 0x9220
   1af44:	mov	r3, #25
   1af48:	movt	r1, #3
   1af4c:	b	1af60 <crc32@@Base+0xc04>
   1af50:	cmp	r0, r3
   1af54:	beq	1af78 <crc32@@Base+0xc1c>
   1af58:	ldr	r3, [r2, #12]
   1af5c:	mov	r1, r2
   1af60:	cmp	r3, #0
   1af64:	add	r2, r1, #12
   1af68:	bge	1af50 <crc32@@Base+0xbf4>
   1af6c:	movw	r0, #38676	; 0x9714
   1af70:	movt	r0, #3
   1af74:	bx	lr
   1af78:	ldr	r0, [r1, #20]
   1af7c:	bx	lr
   1af80:	movw	r0, #38748	; 0x975c
   1af84:	movt	r0, #3
   1af88:	bx	lr
   1af8c:	cmp	r0, #0
   1af90:	beq	1afd0 <crc32@@Base+0xc74>
   1af94:	mov	r3, #1
   1af98:	ldr	r1, [pc, #60]	; 1afdc <crc32@@Base+0xc80>
   1af9c:	b	1afb0 <crc32@@Base+0xc54>
   1afa0:	cmp	r0, r3
   1afa4:	beq	1afc8 <crc32@@Base+0xc6c>
   1afa8:	ldr	r3, [r2, #12]
   1afac:	mov	r1, r2
   1afb0:	cmp	r3, #0
   1afb4:	add	r2, r1, #12
   1afb8:	bge	1afa0 <crc32@@Base+0xc44>
   1afbc:	movw	r0, #38688	; 0x9720
   1afc0:	movt	r0, #3
   1afc4:	bx	lr
   1afc8:	ldr	r0, [r1, #20]
   1afcc:	bx	lr
   1afd0:	movw	r0, #38760	; 0x9768
   1afd4:	movt	r0, #3
   1afd8:	bx	lr
   1afdc:	andeq	r9, r3, r8, asr r3
   1afe0:	cmp	r0, #13
   1afe4:	beq	1b024 <crc32@@Base+0xcc8>
   1afe8:	mov	r3, #7
   1afec:	ldr	r1, [pc, #60]	; 1b030 <crc32@@Base+0xcd4>
   1aff0:	b	1b004 <crc32@@Base+0xca8>
   1aff4:	cmp	r0, r3
   1aff8:	beq	1b01c <crc32@@Base+0xcc0>
   1affc:	ldr	r3, [r2, #12]
   1b000:	mov	r1, r2
   1b004:	cmp	r3, #0
   1b008:	add	r2, r1, #12
   1b00c:	bge	1aff4 <crc32@@Base+0xc98>
   1b010:	movw	r0, #38712	; 0x9738
   1b014:	movt	r0, #3
   1b018:	bx	lr
   1b01c:	ldr	r0, [r1, #20]
   1b020:	bx	lr
   1b024:	movw	r0, #38776	; 0x9778
   1b028:	movt	r0, #3
   1b02c:	bx	lr
   1b030:	muleq	r3, ip, r4
   1b034:	cmp	r0, #13
   1b038:	beq	1b078 <crc32@@Base+0xd1c>
   1b03c:	mov	r3, #7
   1b040:	ldr	r1, [pc, #60]	; 1b084 <crc32@@Base+0xd28>
   1b044:	b	1b058 <crc32@@Base+0xcfc>
   1b048:	cmp	r0, r3
   1b04c:	beq	1b070 <crc32@@Base+0xd14>
   1b050:	ldr	r3, [r2, #12]
   1b054:	mov	r1, r2
   1b058:	cmp	r3, #0
   1b05c:	add	r2, r1, #12
   1b060:	bge	1b048 <crc32@@Base+0xcec>
   1b064:	movw	r0, #35208	; 0x8988
   1b068:	movt	r0, #3
   1b06c:	bx	lr
   1b070:	ldr	r0, [r1, #16]
   1b074:	bx	lr
   1b078:	movw	r0, #39068	; 0x989c
   1b07c:	movt	r0, #3
   1b080:	bx	lr
   1b084:	muleq	r3, ip, r4
   1b088:	cmp	r0, #0
   1b08c:	beq	1b0cc <crc32@@Base+0xd70>
   1b090:	mov	r3, #2
   1b094:	ldr	r1, [pc, #60]	; 1b0d8 <crc32@@Base+0xd7c>
   1b098:	b	1b0ac <crc32@@Base+0xd50>
   1b09c:	cmp	r0, r3
   1b0a0:	beq	1b0c4 <crc32@@Base+0xd68>
   1b0a4:	ldr	r3, [r2, #12]
   1b0a8:	mov	r1, r2
   1b0ac:	cmp	r3, #0
   1b0b0:	add	r2, r1, #12
   1b0b4:	bge	1b09c <crc32@@Base+0xd40>
   1b0b8:	movw	r0, #38728	; 0x9748
   1b0bc:	movt	r0, #3
   1b0c0:	bx	lr
   1b0c4:	ldr	r0, [r1, #20]
   1b0c8:	bx	lr
   1b0cc:	movw	r0, #38796	; 0x978c
   1b0d0:	movt	r0, #3
   1b0d4:	bx	lr
   1b0d8:	andeq	r9, r3, r0, ror r6
   1b0dc:	cmp	r0, #0
   1b0e0:	beq	1b120 <crc32@@Base+0xdc4>
   1b0e4:	mov	r3, #2
   1b0e8:	ldr	r1, [pc, #60]	; 1b12c <crc32@@Base+0xdd0>
   1b0ec:	b	1b100 <crc32@@Base+0xda4>
   1b0f0:	cmp	r0, r3
   1b0f4:	beq	1b118 <crc32@@Base+0xdbc>
   1b0f8:	ldr	r3, [r2, #12]
   1b0fc:	mov	r1, r2
   1b100:	cmp	r3, #0
   1b104:	add	r2, r1, #12
   1b108:	bge	1b0f0 <crc32@@Base+0xd94>
   1b10c:	movw	r0, #35208	; 0x8988
   1b110:	movt	r0, #3
   1b114:	bx	lr
   1b118:	ldr	r0, [r1, #16]
   1b11c:	bx	lr
   1b120:	movw	r0, #39080	; 0x98a8
   1b124:	movt	r0, #3
   1b128:	bx	lr
   1b12c:	andeq	r9, r3, r0, ror r6
   1b130:	cmp	r0, #0
   1b134:	beq	1b178 <crc32@@Base+0xe1c>
   1b138:	movw	r1, #37408	; 0x9220
   1b13c:	mov	r3, #25
   1b140:	movt	r1, #3
   1b144:	b	1b158 <crc32@@Base+0xdfc>
   1b148:	cmp	r0, r3
   1b14c:	beq	1b170 <crc32@@Base+0xe14>
   1b150:	ldr	r3, [r2, #12]
   1b154:	mov	r1, r2
   1b158:	cmp	r3, #0
   1b15c:	add	r2, r1, #12
   1b160:	bge	1b148 <crc32@@Base+0xdec>
   1b164:	movw	r0, #35208	; 0x8988
   1b168:	movt	r0, #3
   1b16c:	bx	lr
   1b170:	ldr	r0, [r1, #16]
   1b174:	bx	lr
   1b178:	movw	r0, #39088	; 0x98b0
   1b17c:	movt	r0, #3
   1b180:	bx	lr
   1b184:	cmp	r0, #0
   1b188:	beq	1b1c8 <crc32@@Base+0xe6c>
   1b18c:	mov	r3, #1
   1b190:	ldr	r1, [pc, #60]	; 1b1d4 <crc32@@Base+0xe78>
   1b194:	b	1b1a8 <crc32@@Base+0xe4c>
   1b198:	cmp	r0, r3
   1b19c:	beq	1b1c0 <crc32@@Base+0xe64>
   1b1a0:	ldr	r3, [r2, #12]
   1b1a4:	mov	r1, r2
   1b1a8:	cmp	r3, #0
   1b1ac:	add	r2, r1, #12
   1b1b0:	bge	1b198 <crc32@@Base+0xe3c>
   1b1b4:	movw	r0, #35208	; 0x8988
   1b1b8:	movt	r0, #3
   1b1bc:	bx	lr
   1b1c0:	ldr	r0, [r1, #16]
   1b1c4:	bx	lr
   1b1c8:	movw	r0, #39088	; 0x98b0
   1b1cc:	movt	r0, #3
   1b1d0:	bx	lr
   1b1d4:	andeq	r9, r3, r8, asr r3
   1b1d8:	push	{r4, r5, r6, lr}
   1b1dc:	ldr	r5, [r0]
   1b1e0:	cmp	r5, #0
   1b1e4:	blt	1b218 <crc32@@Base+0xebc>
   1b1e8:	mov	r6, r2
   1b1ec:	mov	r4, r0
   1b1f0:	ldr	r0, [r4, #4]
   1b1f4:	mov	r1, r6
   1b1f8:	cmp	r0, #0
   1b1fc:	beq	1b20c <crc32@@Base+0xeb0>
   1b200:	bl	12178 <strcasecmp@plt>
   1b204:	cmp	r0, #0
   1b208:	beq	1b21c <crc32@@Base+0xec0>
   1b20c:	ldr	r5, [r4, #12]!
   1b210:	cmp	r5, #0
   1b214:	bge	1b1f0 <crc32@@Base+0xe94>
   1b218:	mvn	r5, #0
   1b21c:	mov	r0, r5
   1b220:	pop	{r4, r5, r6, pc}
   1b224:	mov	r2, r0
   1b228:	movw	r1, #38756	; 0x9764
   1b22c:	movw	r0, #37408	; 0x9220
   1b230:	movt	r1, #3
   1b234:	movt	r0, #3
   1b238:	b	1b1d8 <crc32@@Base+0xe7c>
   1b23c:	mov	r2, r0
   1b240:	movw	r1, #39096	; 0x98b8
   1b244:	ldr	r0, [pc, #4]	; 1b250 <crc32@@Base+0xef4>
   1b248:	movt	r1, #3
   1b24c:	b	1b1d8 <crc32@@Base+0xe7c>
   1b250:	andeq	r9, r3, r8, asr r3
   1b254:	mov	r2, r0
   1b258:	movw	r1, #39300	; 0x9984
   1b25c:	ldr	r0, [pc, #4]	; 1b268 <crc32@@Base+0xf0c>
   1b260:	movt	r1, #3
   1b264:	b	1b1d8 <crc32@@Base+0xe7c>
   1b268:	muleq	r3, ip, r4
   1b26c:	mov	r2, r0
   1b270:	movw	r1, #38736	; 0x9750
   1b274:	ldr	r0, [pc, #4]	; 1b280 <crc32@@Base+0xf24>
   1b278:	movt	r1, #3
   1b27c:	b	1b1d8 <crc32@@Base+0xe7c>
   1b280:	andeq	r9, r3, r0, ror r6
   1b284:	push	{r4, r5, r6, r7, r8, lr}
   1b288:	movw	r4, #7752	; 0x1e48
   1b28c:	movw	r7, #7852	; 0x1eac
   1b290:	movt	r4, #5
   1b294:	movt	r7, #5
   1b298:	cmp	r4, r7
   1b29c:	beq	1b2e0 <crc32@@Base+0xf84>
   1b2a0:	uxtb	r6, r0
   1b2a4:	b	1b2b0 <crc32@@Base+0xf54>
   1b2a8:	cmp	r4, r7
   1b2ac:	beq	1b2e0 <crc32@@Base+0xf84>
   1b2b0:	ldr	r3, [r4]
   1b2b4:	mov	r5, r4
   1b2b8:	mov	r0, r6
   1b2bc:	add	r4, r4, #4
   1b2c0:	ldr	r3, [r3, #32]
   1b2c4:	cmp	r3, #0
   1b2c8:	beq	1b2a8 <crc32@@Base+0xf4c>
   1b2cc:	blx	r3
   1b2d0:	cmp	r0, #0
   1b2d4:	bne	1b2a8 <crc32@@Base+0xf4c>
   1b2d8:	ldr	r0, [r5]
   1b2dc:	pop	{r4, r5, r6, r7, r8, pc}
   1b2e0:	mov	r0, #0
   1b2e4:	pop	{r4, r5, r6, r7, r8, pc}
   1b2e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b2ec:	movw	r4, #7752	; 0x1e48
   1b2f0:	movw	r7, #7852	; 0x1eac
   1b2f4:	movt	r4, #5
   1b2f8:	movt	r7, #5
   1b2fc:	sub	sp, sp, #12
   1b300:	cmp	r4, r7
   1b304:	beq	1b384 <crc32@@Base+0x1028>
   1b308:	mov	r8, r3
   1b30c:	mov	sl, r1
   1b310:	mov	r9, r0
   1b314:	mvn	fp, #0
   1b318:	b	1b324 <crc32@@Base+0xfc8>
   1b31c:	cmp	r4, r7
   1b320:	beq	1b378 <crc32@@Base+0x101c>
   1b324:	mov	r6, r4
   1b328:	mov	r2, r8
   1b32c:	ldr	r3, [r6]
   1b330:	mov	r0, r9
   1b334:	add	r4, r4, #4
   1b338:	ldr	r5, [r3, #16]
   1b33c:	cmp	r5, #0
   1b340:	beq	1b31c <crc32@@Base+0xfc0>
   1b344:	ldr	r1, [sl, #44]	; 0x2c
   1b348:	blx	r5
   1b34c:	subs	fp, r0, #0
   1b350:	bne	1b31c <crc32@@Base+0xfc0>
   1b354:	ldr	r1, [r6]
   1b358:	ldr	r3, [r1, #20]
   1b35c:	cmp	r3, #0
   1b360:	beq	1b38c <crc32@@Base+0x1030>
   1b364:	ldrb	r2, [r8, #133]	; 0x85
   1b368:	cmp	r2, #0
   1b36c:	bne	1b378 <crc32@@Base+0x101c>
   1b370:	mov	r0, r9
   1b374:	blx	r3
   1b378:	mov	r0, fp
   1b37c:	add	sp, sp, #12
   1b380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b384:	mvn	fp, #0
   1b388:	b	1b378 <crc32@@Base+0x101c>
   1b38c:	ldr	ip, [r1]
   1b390:	movw	r0, #7868	; 0x1ebc
   1b394:	movt	r0, #5
   1b398:	ldr	r3, [r8, #80]	; 0x50
   1b39c:	movw	r2, #41260	; 0xa12c
   1b3a0:	mov	r1, #1
   1b3a4:	movt	r2, #3
   1b3a8:	ldr	r0, [r0]
   1b3ac:	str	ip, [sp]
   1b3b0:	bl	12358 <__fprintf_chk@plt>
   1b3b4:	b	1b378 <crc32@@Base+0x101c>
   1b3b8:	push	{r4, r5, r6, r7, lr}
   1b3bc:	mov	r4, r2
   1b3c0:	sub	sp, sp, #12
   1b3c4:	mov	r2, r3
   1b3c8:	mov	r5, r3
   1b3cc:	ldr	r1, [r1, #44]	; 0x2c
   1b3d0:	ldr	r3, [r4, #16]
   1b3d4:	mov	r7, r0
   1b3d8:	blx	r3
   1b3dc:	subs	r6, r0, #0
   1b3e0:	bne	1b410 <crc32@@Base+0x10b4>
   1b3e4:	ldr	r3, [r4, #20]
   1b3e8:	cmp	r3, #0
   1b3ec:	beq	1b448 <crc32@@Base+0x10ec>
   1b3f0:	ldrb	r2, [r5, #133]	; 0x85
   1b3f4:	cmp	r2, #0
   1b3f8:	bne	1b404 <crc32@@Base+0x10a8>
   1b3fc:	mov	r0, r7
   1b400:	blx	r3
   1b404:	mov	r0, r6
   1b408:	add	sp, sp, #12
   1b40c:	pop	{r4, r5, r6, r7, pc}
   1b410:	ldr	ip, [r4]
   1b414:	movw	r1, #7868	; 0x1ebc
   1b418:	movt	r1, #5
   1b41c:	ldr	r3, [r5, #80]	; 0x50
   1b420:	movw	r2, #41296	; 0xa150
   1b424:	movt	r2, #3
   1b428:	ldr	r0, [r1]
   1b42c:	mov	r1, #1
   1b430:	str	r6, [sp, #4]
   1b434:	str	ip, [sp]
   1b438:	bl	12358 <__fprintf_chk@plt>
   1b43c:	mov	r0, r6
   1b440:	add	sp, sp, #12
   1b444:	pop	{r4, r5, r6, r7, pc}
   1b448:	ldr	ip, [r4]
   1b44c:	movw	r1, #7868	; 0x1ebc
   1b450:	movt	r1, #5
   1b454:	ldr	r3, [r5, #80]	; 0x50
   1b458:	movw	r2, #41260	; 0xa12c
   1b45c:	movt	r2, #3
   1b460:	ldr	r0, [r1]
   1b464:	mov	r1, #1
   1b468:	str	ip, [sp]
   1b46c:	bl	12358 <__fprintf_chk@plt>
   1b470:	mov	r0, r6
   1b474:	add	sp, sp, #12
   1b478:	pop	{r4, r5, r6, r7, pc}
   1b47c:	push	{r4, r5, r6, r7, lr}
   1b480:	mov	r6, r1
   1b484:	sub	sp, sp, #12
   1b488:	mov	r4, r2
   1b48c:	movw	r1, #578	; 0x242
   1b490:	mov	r2, #384	; 0x180
   1b494:	mov	r7, r0
   1b498:	bl	124d8 <open@plt>
   1b49c:	subs	r5, r0, #0
   1b4a0:	blt	1b510 <crc32@@Base+0x11b4>
   1b4a4:	mov	r1, r6
   1b4a8:	mov	r2, r4
   1b4ac:	bl	126c4 <write@plt>
   1b4b0:	cmp	r4, r0
   1b4b4:	bne	1b4cc <crc32@@Base+0x1170>
   1b4b8:	mov	r0, r5
   1b4bc:	bl	123b8 <close@plt>
   1b4c0:	mov	r0, #0
   1b4c4:	add	sp, sp, #12
   1b4c8:	pop	{r4, r5, r6, r7, pc}
   1b4cc:	movw	r3, #7868	; 0x1ebc
   1b4d0:	movt	r3, #5
   1b4d4:	ldr	r4, [r3]
   1b4d8:	bl	12748 <__errno_location@plt>
   1b4dc:	ldr	r0, [r0]
   1b4e0:	bl	122a4 <strerror@plt>
   1b4e4:	mov	r3, r7
   1b4e8:	mov	r1, #1
   1b4ec:	movw	r2, #41372	; 0xa19c
   1b4f0:	movt	r2, #3
   1b4f4:	str	r0, [sp]
   1b4f8:	mov	r0, r4
   1b4fc:	bl	12358 <__fprintf_chk@plt>
   1b500:	mov	r0, r5
   1b504:	bl	123b8 <close@plt>
   1b508:	mvn	r0, #0
   1b50c:	b	1b4c4 <crc32@@Base+0x1168>
   1b510:	movw	r3, #7868	; 0x1ebc
   1b514:	movt	r3, #5
   1b518:	ldr	r4, [r3]
   1b51c:	bl	12748 <__errno_location@plt>
   1b520:	ldr	r0, [r0]
   1b524:	bl	122a4 <strerror@plt>
   1b528:	mov	r3, r7
   1b52c:	movw	r2, #41348	; 0xa184
   1b530:	mov	r1, #1
   1b534:	movt	r2, #3
   1b538:	str	r0, [sp]
   1b53c:	mov	r0, r4
   1b540:	bl	12358 <__fprintf_chk@plt>
   1b544:	mvn	r0, #0
   1b548:	b	1b4c4 <crc32@@Base+0x1168>
   1b54c:	push	{r4, r5, r6, r7, r8, lr}
   1b550:	movw	r4, #3824	; 0xef0
   1b554:	movt	r4, #5
   1b558:	sub	sp, sp, #104	; 0x68
   1b55c:	mov	r6, r1
   1b560:	mov	r7, r0
   1b564:	ldr	r3, [r4]
   1b568:	mov	r0, r1
   1b56c:	mov	r1, #0
   1b570:	str	r3, [sp, #100]	; 0x64
   1b574:	bl	124d8 <open@plt>
   1b578:	subs	r5, r0, #0
   1b57c:	blt	1b5bc <crc32@@Base+0x1260>
   1b580:	add	r2, sp, #8
   1b584:	mov	r1, r5
   1b588:	mov	r0, #3
   1b58c:	bl	12610 <__fxstat@plt>
   1b590:	cmp	r0, #0
   1b594:	blt	1b600 <crc32@@Base+0x12a4>
   1b598:	mov	r0, r5
   1b59c:	bl	123b8 <close@plt>
   1b5a0:	ldr	r0, [sp, #52]	; 0x34
   1b5a4:	ldr	r2, [sp, #100]	; 0x64
   1b5a8:	ldr	r3, [r4]
   1b5ac:	cmp	r2, r3
   1b5b0:	bne	1b64c <crc32@@Base+0x12f0>
   1b5b4:	add	sp, sp, #104	; 0x68
   1b5b8:	pop	{r4, r5, r6, r7, r8, pc}
   1b5bc:	movw	r2, #7868	; 0x1ebc
   1b5c0:	movt	r2, #5
   1b5c4:	ldr	r7, [r7, #80]	; 0x50
   1b5c8:	ldr	r5, [r2]
   1b5cc:	bl	12748 <__errno_location@plt>
   1b5d0:	ldr	r0, [r0]
   1b5d4:	bl	122a4 <strerror@plt>
   1b5d8:	mov	r3, r7
   1b5dc:	str	r6, [sp]
   1b5e0:	movw	r2, #29880	; 0x74b8
   1b5e4:	mov	r1, #1
   1b5e8:	movt	r2, #3
   1b5ec:	str	r0, [sp, #4]
   1b5f0:	mov	r0, r5
   1b5f4:	bl	12358 <__fprintf_chk@plt>
   1b5f8:	mvn	r0, #0
   1b5fc:	b	1b5a4 <crc32@@Base+0x1248>
   1b600:	movw	r2, #7868	; 0x1ebc
   1b604:	movt	r2, #5
   1b608:	ldr	r8, [r7, #80]	; 0x50
   1b60c:	ldr	r7, [r2]
   1b610:	bl	12748 <__errno_location@plt>
   1b614:	ldr	r0, [r0]
   1b618:	bl	122a4 <strerror@plt>
   1b61c:	mov	r3, r8
   1b620:	mov	r1, #1
   1b624:	str	r6, [sp]
   1b628:	movw	r2, #29904	; 0x74d0
   1b62c:	movt	r2, #3
   1b630:	str	r0, [sp, #4]
   1b634:	mov	r0, r7
   1b638:	bl	12358 <__fprintf_chk@plt>
   1b63c:	mov	r0, r5
   1b640:	bl	123b8 <close@plt>
   1b644:	mvn	r0, #0
   1b648:	b	1b5a4 <crc32@@Base+0x1248>
   1b64c:	bl	12538 <__stack_chk_fail@plt>
   1b650:	push	{r4, r5, r6, lr}
   1b654:	movw	r4, #3824	; 0xef0
   1b658:	movt	r4, #5
   1b65c:	sub	sp, sp, #8
   1b660:	mov	r6, r0
   1b664:	movw	r0, #41400	; 0xa1b8
   1b668:	ldr	r3, [r4]
   1b66c:	movt	r0, #3
   1b670:	mov	r5, r1
   1b674:	str	r3, [sp, #4]
   1b678:	bl	127d8 <getenv@plt>
   1b67c:	cmp	r0, #0
   1b680:	moveq	r0, r5
   1b684:	beq	1b6b0 <crc32@@Base+0x1354>
   1b688:	mov	r2, #10
   1b68c:	mov	r1, #0
   1b690:	bl	121b4 <strtol@plt>
   1b694:	add	r3, sp, #8
   1b698:	str	r0, [r3, #-8]!
   1b69c:	mov	r0, r3
   1b6a0:	bl	123c4 <gmtime@plt>
   1b6a4:	subs	r5, r0, #0
   1b6a8:	beq	1b6c8 <crc32@@Base+0x136c>
   1b6ac:	ldr	r0, [sp]
   1b6b0:	ldr	r2, [sp, #4]
   1b6b4:	ldr	r3, [r4]
   1b6b8:	cmp	r2, r3
   1b6bc:	bne	1b6f0 <crc32@@Base+0x1394>
   1b6c0:	add	sp, sp, #8
   1b6c4:	pop	{r4, r5, r6, pc}
   1b6c8:	movw	r1, #7868	; 0x1ebc
   1b6cc:	movt	r1, #5
   1b6d0:	mov	r3, r6
   1b6d4:	movw	r2, #41420	; 0xa1cc
   1b6d8:	ldr	r0, [r1]
   1b6dc:	movt	r2, #3
   1b6e0:	mov	r1, #1
   1b6e4:	bl	12358 <__fprintf_chk@plt>
   1b6e8:	mov	r0, r5
   1b6ec:	b	1b6b0 <crc32@@Base+0x1354>
   1b6f0:	bl	12538 <__stack_chk_fail@plt>
   1b6f4:	movw	ip, #8276	; 0x2054
   1b6f8:	movt	ip, #5
   1b6fc:	sub	r2, r2, #4
   1b700:	ldr	r1, [ip]
   1b704:	cmp	r1, #0
   1b708:	addeq	r1, r0, #48	; 0x30
   1b70c:	ldrh	r3, [r1, #1]
   1b710:	rev16	r3, r3
   1b714:	uxth	r3, r3
   1b718:	cmp	r3, #4
   1b71c:	addhi	r3, r1, r3
   1b720:	movls	r3, r1
   1b724:	cmp	r2, #4
   1b728:	ldrls	pc, [pc, r2, lsl #2]
   1b72c:	b	1b76c <crc32@@Base+0x1410>
   1b730:	andeq	fp, r1, r4, asr #14
   1b734:	andeq	fp, r1, ip, lsl #15
   1b738:	andeq	fp, r1, r0, asr #15
   1b73c:	strdeq	fp, [r1], -r4
   1b740:	andeq	fp, r1, r4, ror r7
   1b744:	ldr	r2, [r1]
   1b748:	mov	r0, #204	; 0xcc
   1b74c:	movt	r0, #1024	; 0x400
   1b750:	bic	r2, r2, #16711680	; 0xff0000
   1b754:	bic	r2, r2, #65280	; 0xff00
   1b758:	cmp	r2, r0
   1b75c:	movne	r1, r3
   1b760:	movne	r2, #204	; 0xcc
   1b764:	movtne	r2, #1028	; 0x404
   1b768:	strne	r2, [r3]
   1b76c:	str	r1, [ip]
   1b770:	bx	lr
   1b774:	mov	r1, r3
   1b778:	mov	r2, #207	; 0xcf
   1b77c:	str	r1, [ip]
   1b780:	movt	r2, #1028	; 0x404
   1b784:	str	r2, [r3]
   1b788:	bx	lr
   1b78c:	ldr	r2, [r1]
   1b790:	mov	r0, #204	; 0xcc
   1b794:	movt	r0, #3072	; 0xc00
   1b798:	bic	r2, r2, #16711680	; 0xff0000
   1b79c:	bic	r2, r2, #65280	; 0xff00
   1b7a0:	cmp	r2, r0
   1b7a4:	beq	1b76c <crc32@@Base+0x1410>
   1b7a8:	mov	r2, #204	; 0xcc
   1b7ac:	mov	r1, r3
   1b7b0:	movt	r2, #3076	; 0xc04
   1b7b4:	str	r1, [ip]
   1b7b8:	str	r2, [r3]
   1b7bc:	bx	lr
   1b7c0:	ldr	r2, [r1]
   1b7c4:	mov	r0, #204	; 0xcc
   1b7c8:	movt	r0, #7168	; 0x1c00
   1b7cc:	bic	r2, r2, #16711680	; 0xff0000
   1b7d0:	bic	r2, r2, #65280	; 0xff00
   1b7d4:	cmp	r2, r0
   1b7d8:	beq	1b76c <crc32@@Base+0x1410>
   1b7dc:	mov	r2, #204	; 0xcc
   1b7e0:	mov	r1, r3
   1b7e4:	movt	r2, #7172	; 0x1c04
   1b7e8:	str	r1, [ip]
   1b7ec:	str	r2, [r3]
   1b7f0:	bx	lr
   1b7f4:	mov	r2, #207	; 0xcf
   1b7f8:	mov	r1, r3
   1b7fc:	movt	r2, #5124	; 0x1404
   1b800:	str	r1, [ip]
   1b804:	str	r2, [r3]
   1b808:	bx	lr
   1b80c:	movw	r2, #8276	; 0x2054
   1b810:	movt	r2, #5
   1b814:	cmp	r3, #2
   1b818:	ldr	r1, [r2]
   1b81c:	ldrh	r2, [r1, #1]
   1b820:	rev16	r2, r2
   1b824:	uxth	r2, r2
   1b828:	sub	r2, r2, #4
   1b82c:	asr	r2, r2, #3
   1b830:	beq	1b864 <crc32@@Base+0x1508>
   1b834:	cmp	r3, #3
   1b838:	bxne	lr
   1b83c:	lsl	r0, r2, #3
   1b840:	ldr	r3, [sp]
   1b844:	add	r0, r0, #12
   1b848:	add	r2, r1, r2, lsl #3
   1b84c:	ubfx	ip, r0, #8, #8
   1b850:	rev	r3, r3
   1b854:	orr	r0, ip, r0, lsl #8
   1b858:	str	r3, [r2, #8]
   1b85c:	strh	r0, [r1, #1]
   1b860:	bx	lr
   1b864:	add	r2, r1, r2, lsl #3
   1b868:	ldr	r3, [sp]
   1b86c:	rev	r3, r3
   1b870:	str	r3, [r2, #4]
   1b874:	bx	lr
   1b878:	mov	r3, #12
   1b87c:	mul	r1, r3, r1
   1b880:	movw	r3, #6633	; 0x19e9
   1b884:	movt	r3, #45426	; 0xb172
   1b888:	str	r3, [r0, #28]
   1b88c:	str	r1, [r0, #32]
   1b890:	bx	lr
   1b894:	push	{r4, lr}
   1b898:	mov	ip, #12
   1b89c:	movw	lr, #8276	; 0x2054
   1b8a0:	movt	lr, #5
   1b8a4:	mla	ip, r1, ip, ip
   1b8a8:	ldr	r1, [lr, #4]
   1b8ac:	mov	r4, #177	; 0xb1
   1b8b0:	str	r2, [r0]
   1b8b4:	sub	r1, r2, r1
   1b8b8:	str	r4, [r0, #4]
   1b8bc:	add	r3, r1, r3
   1b8c0:	add	ip, ip, #24
   1b8c4:	add	r2, r3, #20
   1b8c8:	add	ip, r0, ip
   1b8cc:	add	r3, r3, #28
   1b8d0:	str	r2, [r0, #12]
   1b8d4:	str	r1, [r0, #24]
   1b8d8:	mov	r2, #0
   1b8dc:	str	ip, [lr, #8]
   1b8e0:	str	r3, [r0, #20]
   1b8e4:	str	r2, [r0, #8]
   1b8e8:	str	r2, [r0, #16]
   1b8ec:	pop	{r4, pc}
   1b8f0:	subs	r0, r0, #10
   1b8f4:	movne	r0, #1
   1b8f8:	bx	lr
   1b8fc:	ldr	r3, [r0, #4]
   1b900:	cmp	r3, #177	; 0xb1
   1b904:	beq	1b91c <crc32@@Base+0x15c0>
   1b908:	ldrb	r3, [r0]
   1b90c:	cmp	r3, #209	; 0xd1
   1b910:	beq	1b938 <crc32@@Base+0x15dc>
   1b914:	mvn	r0, #10
   1b918:	bx	lr
   1b91c:	ldr	r2, [r0, #28]
   1b920:	movw	r3, #6633	; 0x19e9
   1b924:	movt	r3, #45426	; 0xb172
   1b928:	cmp	r2, r3
   1b92c:	bne	1b908 <crc32@@Base+0x15ac>
   1b930:	mov	r0, #0
   1b934:	bx	lr
   1b938:	ldrb	r3, [r0, #44]	; 0x2c
   1b93c:	cmp	r3, #210	; 0xd2
   1b940:	beq	1b930 <crc32@@Base+0x15d4>
   1b944:	ldr	r3, [r0, #40]	; 0x28
   1b948:	cmp	r3, #0
   1b94c:	mvneq	r0, #10
   1b950:	movne	r0, #0
   1b954:	bx	lr
   1b958:	push	{r4, r5, r6, r7, r8, lr}
   1b95c:	mov	lr, #209	; 0xd1
   1b960:	ldr	r4, [r0, #40]	; 0x28
   1b964:	movt	lr, #16416	; 0x4020
   1b968:	str	lr, [r0]
   1b96c:	cmp	r4, #0
   1b970:	bne	1b9c8 <crc32@@Base+0x166c>
   1b974:	movw	ip, #8276	; 0x2054
   1b978:	movt	ip, #5
   1b97c:	str	r2, [r0, #4]
   1b980:	cmp	r1, #0
   1b984:	ldr	lr, [ip, #4]
   1b988:	str	r4, [r0, #8]
   1b98c:	sub	r2, r2, lr
   1b990:	str	r2, [r0, #32]
   1b994:	add	r3, r2, r3
   1b998:	mov	r2, #0
   1b99c:	str	r3, [r0, #20]
   1b9a0:	addne	r1, r3, #44	; 0x2c
   1b9a4:	str	r2, [r0, #24]
   1b9a8:	add	r3, r3, #32
   1b9ac:	str	r1, [r0, #12]
   1b9b0:	str	r3, [r0, #16]
   1b9b4:	add	r3, r0, #36	; 0x24
   1b9b8:	add	r0, r0, #24
   1b9bc:	str	r3, [ip, #8]
   1b9c0:	str	r0, [ip, #12]
   1b9c4:	pop	{r4, r5, r6, r7, r8, pc}
   1b9c8:	movw	r1, #5240	; 0x1478
   1b9cc:	movt	r1, #5
   1b9d0:	ldr	r1, [r1]
   1b9d4:	cmp	r1, #0
   1b9d8:	bne	1ba6c <crc32@@Base+0x1710>
   1b9dc:	movw	r5, #8276	; 0x2054
   1b9e0:	movt	r5, #5
   1b9e4:	sub	r4, r2, #65536	; 0x10000
   1b9e8:	str	r1, [r0, #8]
   1b9ec:	ldr	r6, [r5, #20]
   1b9f0:	sub	r4, r4, #44	; 0x2c
   1b9f4:	ldr	r7, [r5, #16]
   1b9f8:	add	ip, r0, r6
   1b9fc:	str	r1, [r0, #28]
   1ba00:	add	r8, ip, #36	; 0x24
   1ba04:	str	r8, [r5, #8]
   1ba08:	add	r5, r7, r3
   1ba0c:	str	r7, [r0, #32]
   1ba10:	add	r7, r5, #44	; 0x2c
   1ba14:	str	r7, [r0, #4]
   1ba18:	add	r7, r6, r4
   1ba1c:	str	r5, [r0, #20]
   1ba20:	str	r1, [r0, #12]
   1ba24:	add	r5, r5, #32
   1ba28:	str	r1, [r0, #24]
   1ba2c:	sub	r3, r4, r3
   1ba30:	str	r5, [r0, #16]
   1ba34:	add	r4, r7, #32
   1ba38:	mov	r5, #65536	; 0x10000
   1ba3c:	str	r5, [r0, #36]	; 0x24
   1ba40:	str	lr, [r0, r6]
   1ba44:	str	r2, [ip, #4]
   1ba48:	str	r1, [ip, #8]
   1ba4c:	str	r1, [ip, #28]
   1ba50:	str	r1, [ip, #12]
   1ba54:	str	r1, [ip, #40]	; 0x28
   1ba58:	str	r1, [ip, #24]
   1ba5c:	str	r7, [ip, #20]
   1ba60:	str	r4, [ip, #16]
   1ba64:	str	r3, [ip, #32]
   1ba68:	pop	{r4, r5, r6, r7, r8, pc}
   1ba6c:	movw	r3, #7868	; 0x1ebc
   1ba70:	movt	r3, #5
   1ba74:	movw	r0, #41456	; 0xa1f0
   1ba78:	mov	r2, #60	; 0x3c
   1ba7c:	ldr	r3, [r3]
   1ba80:	movt	r0, #3
   1ba84:	mov	r1, #1
   1ba88:	bl	12634 <fwrite@plt>
   1ba8c:	mov	r0, #1
   1ba90:	bl	12298 <exit@plt>
   1ba94:	ldr	r2, [r0, #4]
   1ba98:	push	{r4, r5, r6, r7, lr}
   1ba9c:	cmp	r2, #177	; 0xb1
   1baa0:	sub	sp, sp, #12
   1baa4:	mov	r4, r0
   1baa8:	beq	1bac0 <crc32@@Base+0x1764>
   1baac:	ldrb	r3, [r4]
   1bab0:	cmp	r3, #209	; 0xd1
   1bab4:	beq	1bb6c <crc32@@Base+0x1810>
   1bab8:	mvn	r0, #0
   1babc:	bl	12838 <__printf_chk@plt+0xc>
   1bac0:	ldr	r1, [r0, #28]
   1bac4:	movw	r3, #6633	; 0x19e9
   1bac8:	movt	r3, #45426	; 0xb172
   1bacc:	cmp	r1, r3
   1bad0:	bne	1baac <crc32@@Base+0x1750>
   1bad4:	ldr	r2, [r0, #32]
   1bad8:	movw	r3, #43691	; 0xaaab
   1badc:	movt	r3, #43690	; 0xaaaa
   1bae0:	cmp	r2, #720	; 0x2d0
   1bae4:	umull	r2, r3, r2, r3
   1bae8:	lsr	r5, r3, #3
   1baec:	bhi	1be4c <crc32@@Base+0x1af0>
   1baf0:	movw	r0, #41612	; 0xa28c
   1baf4:	movt	r0, #3
   1baf8:	bl	12310 <puts@plt>
   1bafc:	mov	r2, #1
   1bb00:	mov	r0, r2
   1bb04:	movw	r1, #41652	; 0xa2b4
   1bb08:	movt	r1, #3
   1bb0c:	bl	1282c <__printf_chk@plt>
   1bb10:	mov	r2, #1
   1bb14:	mov	r1, #0
   1bb18:	ldr	r0, [pc, #832]	; 1be60 <crc32@@Base+0x1b04>
   1bb1c:	bl	1af08 <crc32@@Base+0xbac>
   1bb20:	bl	12310 <puts@plt>
   1bb24:	movw	r1, #34352	; 0x8630
   1bb28:	mov	r0, #1
   1bb2c:	movt	r1, #3
   1bb30:	bl	1282c <__printf_chk@plt>
   1bb34:	mov	r3, #12
   1bb38:	mla	r5, r3, r5, r4
   1bb3c:	ldr	r0, [r5, #36]	; 0x24
   1bb40:	bl	1a944 <crc32@@Base+0x5e8>
   1bb44:	ldr	r2, [r4, #24]
   1bb48:	movw	r1, #41672	; 0xa2c8
   1bb4c:	mov	r0, #1
   1bb50:	movt	r1, #3
   1bb54:	bl	1282c <__printf_chk@plt>
   1bb58:	movw	r1, #41692	; 0xa2dc
   1bb5c:	ldr	r2, [r4]
   1bb60:	mov	r0, #1
   1bb64:	movt	r1, #3
   1bb68:	b	1bc90 <crc32@@Base+0x1934>
   1bb6c:	ldrb	r3, [r4, #44]	; 0x2c
   1bb70:	ldr	r5, [r4, #40]	; 0x28
   1bb74:	cmp	r3, #210	; 0xd2
   1bb78:	beq	1bcd4 <crc32@@Base+0x1978>
   1bb7c:	cmp	r5, #0
   1bb80:	beq	1bab8 <crc32@@Base+0x175c>
   1bb84:	cmp	r2, #177	; 0xb1
   1bb88:	bne	1bba0 <crc32@@Base+0x1844>
   1bb8c:	ldr	r2, [r4, #28]
   1bb90:	movw	r3, #6633	; 0x19e9
   1bb94:	movt	r3, #45426	; 0xb172
   1bb98:	cmp	r2, r3
   1bb9c:	beq	1bc9c <crc32@@Base+0x1940>
   1bba0:	movw	r0, #41612	; 0xa28c
   1bba4:	movt	r0, #3
   1bba8:	bl	12310 <puts@plt>
   1bbac:	mov	r2, #2
   1bbb0:	movw	r1, #41652	; 0xa2b4
   1bbb4:	mov	r0, #1
   1bbb8:	movt	r1, #3
   1bbbc:	bl	1282c <__printf_chk@plt>
   1bbc0:	mov	r2, #2
   1bbc4:	mov	r1, #0
   1bbc8:	ldr	r0, [pc, #656]	; 1be60 <crc32@@Base+0x1b04>
   1bbcc:	bl	1af08 <crc32@@Base+0xbac>
   1bbd0:	bl	12310 <puts@plt>
   1bbd4:	movw	r2, #41812	; 0xa354
   1bbd8:	movw	r1, #41792	; 0xa340
   1bbdc:	movt	r2, #3
   1bbe0:	movt	r1, #3
   1bbe4:	mov	r0, #1
   1bbe8:	movw	r5, #8276	; 0x2054
   1bbec:	bl	1282c <__printf_chk@plt>
   1bbf0:	movw	r1, #41820	; 0xa35c
   1bbf4:	mov	r0, #1
   1bbf8:	movt	r1, #3
   1bbfc:	bl	1282c <__printf_chk@plt>
   1bc00:	movt	r5, #5
   1bc04:	ldr	r0, [r4, #36]	; 0x24
   1bc08:	bl	1a944 <crc32@@Base+0x5e8>
   1bc0c:	movw	r1, #41844	; 0xa374
   1bc10:	mov	r0, #1
   1bc14:	movt	r1, #3
   1bc18:	bl	1282c <__printf_chk@plt>
   1bc1c:	ldr	r0, [r5, #20]
   1bc20:	bl	1a944 <crc32@@Base+0x5e8>
   1bc24:	ldr	r2, [r4, #32]
   1bc28:	movw	r1, #41868	; 0xa38c
   1bc2c:	mov	r0, #1
   1bc30:	movt	r1, #3
   1bc34:	bl	1282c <__printf_chk@plt>
   1bc38:	ldr	r2, [r4, #4]
   1bc3c:	movw	r1, #41896	; 0xa3a8
   1bc40:	mov	r0, #1
   1bc44:	movt	r1, #3
   1bc48:	bl	1282c <__printf_chk@plt>
   1bc4c:	ldr	r3, [r5, #20]
   1bc50:	movw	r1, #41924	; 0xa3c4
   1bc54:	mov	r0, #1
   1bc58:	add	r4, r4, r3
   1bc5c:	movt	r1, #3
   1bc60:	bl	1282c <__printf_chk@plt>
   1bc64:	ldr	r0, [r4, #36]	; 0x24
   1bc68:	bl	1a944 <crc32@@Base+0x5e8>
   1bc6c:	ldr	r2, [r4, #32]
   1bc70:	movw	r1, #41948	; 0xa3dc
   1bc74:	mov	r0, #1
   1bc78:	movt	r1, #3
   1bc7c:	bl	1282c <__printf_chk@plt>
   1bc80:	ldr	r2, [r4, #4]
   1bc84:	movw	r1, #41976	; 0xa3f8
   1bc88:	movt	r1, #3
   1bc8c:	mov	r0, #1
   1bc90:	add	sp, sp, #12
   1bc94:	pop	{r4, r5, r6, r7, lr}
   1bc98:	b	1282c <__printf_chk@plt>
   1bc9c:	movw	r0, #41612	; 0xa28c
   1bca0:	movt	r0, #3
   1bca4:	bl	12310 <puts@plt>
   1bca8:	mov	r2, #1
   1bcac:	mov	r0, r2
   1bcb0:	movw	r1, #41652	; 0xa2b4
   1bcb4:	movt	r1, #3
   1bcb8:	bl	1282c <__printf_chk@plt>
   1bcbc:	mov	r2, #1
   1bcc0:	mov	r1, #0
   1bcc4:	ldr	r0, [pc, #404]	; 1be60 <crc32@@Base+0x1b04>
   1bcc8:	bl	1af08 <crc32@@Base+0xbac>
   1bccc:	bl	12310 <puts@plt>
   1bcd0:	b	1bbd4 <crc32@@Base+0x1878>
   1bcd4:	cmp	r5, #0
   1bcd8:	bne	1be40 <crc32@@Base+0x1ae4>
   1bcdc:	ldrh	r3, [r4, #45]	; 0x2d
   1bce0:	rev16	r3, r3
   1bce4:	uxth	r3, r3
   1bce8:	cmp	r3, #1760	; 0x6e0
   1bcec:	bhi	1be10 <crc32@@Base+0x1ab4>
   1bcf0:	cmp	r2, #177	; 0xb1
   1bcf4:	bne	1bd14 <crc32@@Base+0x19b8>
   1bcf8:	ldr	r2, [r4, #28]
   1bcfc:	movw	r3, #6633	; 0x19e9
   1bd00:	movt	r3, #45426	; 0xb172
   1bd04:	cmp	r2, r3
   1bd08:	moveq	r6, #1
   1bd0c:	moveq	r7, r6
   1bd10:	beq	1bd1c <crc32@@Base+0x19c0>
   1bd14:	mov	r6, #2
   1bd18:	mov	r7, r6
   1bd1c:	movw	r0, #41612	; 0xa28c
   1bd20:	movt	r0, #3
   1bd24:	bl	12310 <puts@plt>
   1bd28:	mov	r2, r7
   1bd2c:	movw	r1, #41652	; 0xa2b4
   1bd30:	mov	r0, #1
   1bd34:	movt	r1, #3
   1bd38:	bl	1282c <__printf_chk@plt>
   1bd3c:	mov	r2, r6
   1bd40:	mov	r1, #0
   1bd44:	ldr	r0, [pc, #276]	; 1be60 <crc32@@Base+0x1b04>
   1bd48:	bl	1af08 <crc32@@Base+0xbac>
   1bd4c:	bl	12310 <puts@plt>
   1bd50:	cmp	r5, #0
   1bd54:	bne	1bbd4 <crc32@@Base+0x1878>
   1bd58:	movw	r2, #41788	; 0xa33c
   1bd5c:	movw	r1, #41792	; 0xa340
   1bd60:	movt	r2, #3
   1bd64:	movt	r1, #3
   1bd68:	mov	r0, #1
   1bd6c:	bl	1282c <__printf_chk@plt>
   1bd70:	movw	r1, #34352	; 0x8630
   1bd74:	mov	r0, #1
   1bd78:	movt	r1, #3
   1bd7c:	bl	1282c <__printf_chk@plt>
   1bd80:	ldr	r0, [r4, #36]	; 0x24
   1bd84:	bl	1a944 <crc32@@Base+0x5e8>
   1bd88:	ldr	r2, [r4, #16]
   1bd8c:	movw	r1, #41672	; 0xa2c8
   1bd90:	mov	r0, #1
   1bd94:	movt	r1, #3
   1bd98:	bl	1282c <__printf_chk@plt>
   1bd9c:	movw	r1, #41692	; 0xa2dc
   1bda0:	ldr	r2, [r4, #4]
   1bda4:	movt	r1, #3
   1bda8:	mov	r0, #1
   1bdac:	bl	1282c <__printf_chk@plt>
   1bdb0:	ldr	r0, [r4, #24]
   1bdb4:	cmp	r0, #0
   1bdb8:	bne	1bdc4 <crc32@@Base+0x1a68>
   1bdbc:	add	sp, sp, #12
   1bdc0:	pop	{r4, r5, r6, r7, pc}
   1bdc4:	ldr	r2, [r4, #20]
   1bdc8:	movw	r1, #41712	; 0xa2f0
   1bdcc:	ldrh	r3, [r4, #45]	; 0x2d
   1bdd0:	movt	r1, #3
   1bdd4:	sub	r0, r0, r2
   1bdd8:	str	r0, [sp]
   1bddc:	rev16	r4, r3
   1bde0:	mov	r0, #1
   1bde4:	mov	r3, #0
   1bde8:	bl	1282c <__printf_chk@plt>
   1bdec:	uxth	r4, r4
   1bdf0:	movw	r1, #41748	; 0xa314
   1bdf4:	mov	r2, #44	; 0x2c
   1bdf8:	mov	r3, r4
   1bdfc:	movt	r1, #3
   1be00:	mov	r0, #1
   1be04:	add	sp, sp, #12
   1be08:	pop	{r4, r5, r6, r7, lr}
   1be0c:	b	1282c <__printf_chk@plt>
   1be10:	movw	r2, #7868	; 0x1ebc
   1be14:	lsr	r3, r3, #3
   1be18:	movt	r2, #5
   1be1c:	mov	r1, #220	; 0xdc
   1be20:	ldr	r0, [r2]
   1be24:	movw	r2, #41560	; 0xa258
   1be28:	str	r1, [sp]
   1be2c:	movt	r2, #3
   1be30:	mov	r1, #1
   1be34:	bl	12358 <__fprintf_chk@plt>
   1be38:	mov	r0, #1
   1be3c:	bl	12298 <exit@plt>
   1be40:	cmp	r2, #177	; 0xb1
   1be44:	beq	1bcf8 <crc32@@Base+0x199c>
   1be48:	b	1bba0 <crc32@@Base+0x1844>
   1be4c:	movw	r2, #7868	; 0x1ebc
   1be50:	mov	r3, r5
   1be54:	movt	r2, #5
   1be58:	mov	r1, #60	; 0x3c
   1be5c:	b	1be20 <crc32@@Base+0x1ac4>
   1be60:	andeq	r1, r5, ip, ror r4
   1be64:	ldr	r3, [r0, #40]	; 0x28
   1be68:	cmp	r3, #0
   1be6c:	bxne	lr
   1be70:	movw	r3, #8276	; 0x2054
   1be74:	movt	r3, #5
   1be78:	mvn	r1, #45	; 0x2d
   1be7c:	ldr	r3, [r3]
   1be80:	cmp	r3, #0
   1be84:	addeq	r3, r0, #48	; 0x30
   1be88:	ldrh	r2, [r3, #1]
   1be8c:	rev16	r2, r2
   1be90:	uxth	r2, r2
   1be94:	cmp	r2, #4
   1be98:	addhi	r3, r3, r2
   1be9c:	mov	r2, r0
   1bea0:	strb	r1, [r2, #44]!	; 0x2c
   1bea4:	sub	r3, r3, r2
   1bea8:	rev16	r3, r3
   1beac:	mov	r2, #64	; 0x40
   1beb0:	strh	r3, [r0, #45]	; 0x2d
   1beb4:	strb	r2, [r0, #47]	; 0x2f
   1beb8:	bx	lr
   1bebc:	cmp	r0, #0
   1bec0:	beq	1bf44 <crc32@@Base+0x1be8>
   1bec4:	ldr	r3, [r0, #64]	; 0x40
   1bec8:	ldrb	r3, [r3]
   1becc:	cmp	r3, #0
   1bed0:	beq	1bf18 <crc32@@Base+0x1bbc>
   1bed4:	ldr	r3, [r0]
   1bed8:	ldr	r2, [r0, #8]
   1bedc:	cmp	r3, #0
   1bee0:	beq	1bf00 <crc32@@Base+0x1ba4>
   1bee4:	cmp	r2, #0
   1bee8:	bne	1bef8 <crc32@@Base+0x1b9c>
   1beec:	ldr	r3, [r0, #16]
   1bef0:	cmp	r3, #0
   1bef4:	beq	1bf08 <crc32@@Base+0x1bac>
   1bef8:	mov	r0, #1
   1befc:	bx	lr
   1bf00:	cmp	r2, #0
   1bf04:	bne	1beec <crc32@@Base+0x1b90>
   1bf08:	ldr	r0, [r0, #28]
   1bf0c:	adds	r0, r0, #0
   1bf10:	movne	r0, #1
   1bf14:	bx	lr
   1bf18:	movw	r1, #7868	; 0x1ebc
   1bf1c:	movt	r1, #5
   1bf20:	ldr	r3, [r0, #80]	; 0x50
   1bf24:	movw	r2, #42004	; 0xa414
   1bf28:	push	{r4, lr}
   1bf2c:	movt	r2, #3
   1bf30:	ldr	r0, [r1]
   1bf34:	mov	r1, #1
   1bf38:	bl	12358 <__fprintf_chk@plt>
   1bf3c:	mvn	r0, #0
   1bf40:	pop	{r4, pc}
   1bf44:	mvn	r0, #0
   1bf48:	bx	lr
   1bf4c:	push	{r4, lr}
   1bf50:	cmp	r3, #2
   1bf54:	sub	sp, sp, #8
   1bf58:	ldr	ip, [sp, #16]
   1bf5c:	beq	1bfb8 <crc32@@Base+0x1c5c>
   1bf60:	cmp	r3, #3
   1bf64:	beq	1bfa0 <crc32@@Base+0x1c44>
   1bf68:	cmp	r3, #1
   1bf6c:	beq	1bf78 <crc32@@Base+0x1c1c>
   1bf70:	add	sp, sp, #8
   1bf74:	pop	{r4, pc}
   1bf78:	sub	lr, ip, #1
   1bf7c:	cmp	ip, #4
   1bf80:	cmpne	lr, #1
   1bf84:	bhi	1bfd0 <crc32@@Base+0x1c74>
   1bf88:	ldr	r2, [sp, #20]
   1bf8c:	mov	r3, #12
   1bf90:	mla	r0, r3, r2, r0
   1bf94:	str	ip, [r0, #36]	; 0x24
   1bf98:	add	sp, sp, #8
   1bf9c:	pop	{r4, pc}
   1bfa0:	ldr	r2, [sp, #20]
   1bfa4:	mov	r3, #12
   1bfa8:	mla	r0, r3, r2, r0
   1bfac:	str	ip, [r0, #44]	; 0x2c
   1bfb0:	add	sp, sp, #8
   1bfb4:	pop	{r4, pc}
   1bfb8:	ldr	r2, [sp, #20]
   1bfbc:	mov	r3, #12
   1bfc0:	mla	r0, r3, r2, r0
   1bfc4:	str	ip, [r0, #40]	; 0x28
   1bfc8:	add	sp, sp, #8
   1bfcc:	pop	{r4, pc}
   1bfd0:	movw	r0, #7868	; 0x1ebc
   1bfd4:	movt	r0, #5
   1bfd8:	mov	r4, r3
   1bfdc:	str	r2, [sp]
   1bfe0:	str	ip, [sp, #4]
   1bfe4:	mov	r3, r1
   1bfe8:	movw	r2, #42088	; 0xa468
   1bfec:	ldr	r0, [r0]
   1bff0:	movt	r2, #3
   1bff4:	mov	r1, r4
   1bff8:	bl	12358 <__fprintf_chk@plt>
   1bffc:	mov	r0, r4
   1c000:	bl	12298 <exit@plt>
   1c004:	movw	r3, #8276	; 0x2054
   1c008:	movt	r3, #5
   1c00c:	ldr	r0, [r3, #24]
   1c010:	cmp	r0, #1
   1c014:	beq	1c064 <crc32@@Base+0x1d08>
   1c018:	cmp	r0, #2
   1c01c:	bne	1c09c <crc32@@Base+0x1d40>
   1c020:	movw	r1, #47116	; 0xb80c
   1c024:	movw	r2, #46836	; 0xb6f4
   1c028:	movt	r1, #1
   1c02c:	movt	r2, #1
   1c030:	str	r1, [r3, #28]
   1c034:	movw	r1, #48740	; 0xbe64
   1c038:	str	r2, [r3, #32]
   1c03c:	movt	r1, #1
   1c040:	movw	r2, #47448	; 0xb958
   1c044:	str	r1, [r3, #36]	; 0x24
   1c048:	movt	r2, #1
   1c04c:	mov	r1, #0
   1c050:	str	r2, [r3, #40]	; 0x28
   1c054:	mov	r2, #220	; 0xdc
   1c058:	str	r1, [r3]
   1c05c:	str	r2, [r3, #44]	; 0x2c
   1c060:	bx	lr
   1c064:	movw	r2, #48972	; 0xbf4c
   1c068:	movw	r1, #47224	; 0xb878
   1c06c:	movt	r2, #1
   1c070:	movt	r1, #1
   1c074:	str	r2, [r3, #28]
   1c078:	movw	r2, #47252	; 0xb894
   1c07c:	str	r1, [r3, #36]	; 0x24
   1c080:	movt	r2, #1
   1c084:	mov	r1, #0
   1c088:	str	r2, [r3, #40]	; 0x28
   1c08c:	str	r1, [r3, #32]
   1c090:	mov	r2, #60	; 0x3c
   1c094:	str	r2, [r3, #44]	; 0x2c
   1c098:	bx	lr
   1c09c:	push	{r4, lr}
   1c0a0:	bl	12838 <__printf_chk@plt+0xc>
   1c0a4:	push	{r4, r5, r6, r7, r8, lr}
   1c0a8:	movw	r4, #3824	; 0xef0
   1c0ac:	movt	r4, #5
   1c0b0:	sub	sp, sp, #16
   1c0b4:	mov	r5, r0
   1c0b8:	mov	r8, r1
   1c0bc:	ldr	r3, [r4]
   1c0c0:	mov	r7, r2
   1c0c4:	str	r3, [sp, #12]
   1c0c8:	bl	12748 <__errno_location@plt>
   1c0cc:	mov	r3, #0
   1c0d0:	mov	r2, #16
   1c0d4:	add	r1, sp, #8
   1c0d8:	mov	r6, r0
   1c0dc:	mov	r0, r5
   1c0e0:	str	r3, [r6]
   1c0e4:	bl	12370 <strtoul@plt>
   1c0e8:	ldr	r3, [r6]
   1c0ec:	cmp	r3, #0
   1c0f0:	bne	1c118 <crc32@@Base+0x1dbc>
   1c0f4:	ldr	r3, [sp, #8]
   1c0f8:	cmp	r3, r5
   1c0fc:	beq	1c118 <crc32@@Base+0x1dbc>
   1c100:	ldr	r2, [sp, #12]
   1c104:	ldr	r3, [r4]
   1c108:	cmp	r2, r3
   1c10c:	bne	1c148 <crc32@@Base+0x1dec>
   1c110:	add	sp, sp, #16
   1c114:	pop	{r4, r5, r6, r7, r8, pc}
   1c118:	movw	r1, #7868	; 0x1ebc
   1c11c:	movt	r1, #5
   1c120:	str	r5, [sp, #4]
   1c124:	mov	r3, r8
   1c128:	str	r7, [sp]
   1c12c:	movw	r2, #30028	; 0x754c
   1c130:	ldr	r0, [r1]
   1c134:	movt	r2, #3
   1c138:	mov	r1, #1
   1c13c:	bl	12358 <__fprintf_chk@plt>
   1c140:	mov	r0, #1
   1c144:	bl	12298 <exit@plt>
   1c148:	bl	12538 <__stack_chk_fail@plt>
   1c14c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c150:	movw	r3, #3824	; 0xef0
   1c154:	sub	sp, sp, #156	; 0x9c
   1c158:	movt	r3, #5
   1c15c:	mov	fp, r1
   1c160:	mov	r4, #0
   1c164:	str	r3, [sp, #32]
   1c168:	ldr	r3, [r3]
   1c16c:	str	r0, [sp, #20]
   1c170:	mov	r0, r1
   1c174:	movw	r1, #53956	; 0xd2c4
   1c178:	movt	r1, #3
   1c17c:	str	r3, [sp, #148]	; 0x94
   1c180:	str	r4, [sp, #40]	; 0x28
   1c184:	bl	123d0 <fopen@plt>
   1c188:	subs	r3, r0, #0
   1c18c:	str	r3, [sp, #24]
   1c190:	beq	1c938 <crc32@@Base+0x25dc>
   1c194:	movw	r8, #5240	; 0x1478
   1c198:	movt	r8, #5
   1c19c:	str	fp, [sp, #12]
   1c1a0:	mov	r7, r4
   1c1a4:	mov	fp, r8
   1c1a8:	movw	r3, #29960	; 0x7508
   1c1ac:	str	r4, [sp, #16]
   1c1b0:	movt	r3, #3
   1c1b4:	str	r3, [sp, #28]
   1c1b8:	ldr	r3, [sp, #24]
   1c1bc:	mov	r2, #10
   1c1c0:	add	r1, sp, #52	; 0x34
   1c1c4:	add	r0, sp, #40	; 0x28
   1c1c8:	bl	121cc <__getdelim@plt>
   1c1cc:	cmp	r0, #0
   1c1d0:	ble	1c6f8 <crc32@@Base+0x239c>
   1c1d4:	add	r2, sp, #44	; 0x2c
   1c1d8:	ldr	r1, [sp, #28]
   1c1dc:	ldr	r0, [sp, #40]	; 0x28
   1c1e0:	add	r7, r7, #1
   1c1e4:	bl	122c8 <__strtok_r@plt>
   1c1e8:	cmp	r0, #0
   1c1ec:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c1f0:	mov	r9, #0
   1c1f4:	movw	r5, #29964	; 0x750c
   1c1f8:	movt	r5, #3
   1c1fc:	mov	r8, r9
   1c200:	str	r0, [sp, #40]	; 0x28
   1c204:	add	r2, sp, #48	; 0x30
   1c208:	mov	r1, r5
   1c20c:	bl	122c8 <__strtok_r@plt>
   1c210:	subs	r4, r0, #0
   1c214:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c218:	ldrb	r3, [r4]
   1c21c:	cmp	r3, #35	; 0x23
   1c220:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c224:	cmp	r8, #3
   1c228:	ldrls	pc, [pc, r8, lsl #2]
   1c22c:	b	1c364 <crc32@@Base+0x2008>
   1c230:	andeq	ip, r1, r0, asr #4
   1c234:	andeq	ip, r1, ip, ror #4
   1c238:	andeq	ip, r1, r4, lsr #5
   1c23c:	andeq	ip, r1, r4, lsr #5
   1c240:	movw	r1, #42168	; 0xa4b8
   1c244:	mov	r2, r4
   1c248:	movt	r1, #3
   1c24c:	ldr	r0, [pc, #1804]	; 1c960 <crc32@@Base+0x2604>
   1c250:	bl	1b1d8 <crc32@@Base+0xe7c>
   1c254:	subs	r9, r0, #0
   1c258:	blt	1c76c <crc32@@Base+0x2410>
   1c25c:	mov	r8, #1
   1c260:	mov	r0, #0
   1c264:	str	r0, [sp, #40]	; 0x28
   1c268:	b	1c204 <crc32@@Base+0x1ea8>
   1c26c:	sub	r3, r9, #1
   1c270:	cmp	r3, #9
   1c274:	ldrls	pc, [pc, r3, lsl #2]
   1c278:	b	1c3e0 <crc32@@Base+0x2084>
   1c27c:	andeq	ip, r1, ip, lsr r5
   1c280:	andeq	ip, r1, ip, ror r4
   1c284:	andeq	ip, r1, r8, ror #7
   1c288:	andeq	ip, r1, ip, ror #6
   1c28c:	andeq	ip, r1, ip, ror #6
   1c290:	andeq	ip, r1, ip, ror #6
   1c294:	andeq	ip, r1, ip, ror #6
   1c298:	andeq	ip, r1, ip, ror #6
   1c29c:	strdeq	ip, [r1], -r4
   1c2a0:	andeq	ip, r1, r0, lsl #11
   1c2a4:	cmp	r9, #4
   1c2a8:	blt	1c364 <crc32@@Base+0x2008>
   1c2ac:	cmp	r9, #8
   1c2b0:	bgt	1c6e4 <crc32@@Base+0x2388>
   1c2b4:	mov	r0, r4
   1c2b8:	mov	r2, r7
   1c2bc:	ldr	r1, [sp, #12]
   1c2c0:	movw	r6, #8276	; 0x2054
   1c2c4:	bl	1c0a4 <crc32@@Base+0x1d48>
   1c2c8:	movt	r6, #5
   1c2cc:	ldr	r3, [r6, #32]
   1c2d0:	cmp	r3, #0
   1c2d4:	mov	r4, r0
   1c2d8:	beq	1c2ec <crc32@@Base+0x1f90>
   1c2dc:	mov	r2, r9
   1c2e0:	ldr	r1, [sp, #16]
   1c2e4:	ldr	r0, [sp, #20]
   1c2e8:	blx	r3
   1c2ec:	ldr	r3, [sp, #16]
   1c2f0:	mov	r2, r7
   1c2f4:	str	r4, [sp]
   1c2f8:	ldr	r1, [sp, #12]
   1c2fc:	str	r3, [sp, #4]
   1c300:	mov	r3, r8
   1c304:	ldr	r4, [r6, #28]
   1c308:	ldr	r0, [sp, #20]
   1c30c:	blx	r4
   1c310:	cmp	r8, #3
   1c314:	movne	r8, #3
   1c318:	bne	1c260 <crc32@@Base+0x1f04>
   1c31c:	ldr	r2, [sp, #16]
   1c320:	ldr	r3, [r6, #44]	; 0x2c
   1c324:	add	r2, r2, #1
   1c328:	str	r2, [sp, #16]
   1c32c:	cmp	r2, r3
   1c330:	bhi	1c89c <crc32@@Base+0x2540>
   1c334:	mov	r3, #0
   1c338:	add	r2, sp, #48	; 0x30
   1c33c:	mov	r0, r3
   1c340:	mov	r1, r5
   1c344:	str	r3, [sp, #40]	; 0x28
   1c348:	bl	122c8 <__strtok_r@plt>
   1c34c:	cmp	r0, #0
   1c350:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c354:	ldrb	r3, [r0]
   1c358:	cmp	r3, #35	; 0x23
   1c35c:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c360:	mov	r8, #4
   1c364:	add	r8, r8, #1
   1c368:	b	1c260 <crc32@@Base+0x1f04>
   1c36c:	mov	r0, r4
   1c370:	mov	r2, r7
   1c374:	ldr	r1, [sp, #12]
   1c378:	movw	r6, #8276	; 0x2054
   1c37c:	bl	1c0a4 <crc32@@Base+0x1d48>
   1c380:	movt	r6, #5
   1c384:	ldr	r3, [r6, #32]
   1c388:	cmp	r3, #0
   1c38c:	mov	r4, r0
   1c390:	beq	1c3a4 <crc32@@Base+0x2048>
   1c394:	mov	r2, r9
   1c398:	ldr	r1, [sp, #16]
   1c39c:	ldr	r0, [sp, #20]
   1c3a0:	blx	r3
   1c3a4:	ldr	r3, [sp, #16]
   1c3a8:	mov	r2, r7
   1c3ac:	str	r4, [sp]
   1c3b0:	ldr	r1, [sp, #12]
   1c3b4:	str	r3, [sp, #4]
   1c3b8:	mov	r3, #1
   1c3bc:	ldr	r4, [r6, #28]
   1c3c0:	ldr	r0, [sp, #20]
   1c3c4:	blx	r4
   1c3c8:	ldr	r3, [fp, #172]	; 0xac
   1c3cc:	cmp	r3, #1
   1c3d0:	movne	r3, #0
   1c3d4:	movne	r8, #2
   1c3d8:	strne	r3, [fp, #172]	; 0xac
   1c3dc:	bne	1c260 <crc32@@Base+0x1f04>
   1c3e0:	mov	r8, #2
   1c3e4:	b	1c260 <crc32@@Base+0x1f04>
   1c3e8:	mov	r0, r4
   1c3ec:	mov	r2, r7
   1c3f0:	ldr	r1, [sp, #12]
   1c3f4:	bl	1c0a4 <crc32@@Base+0x1d48>
   1c3f8:	ldr	r3, [fp, #172]	; 0xac
   1c3fc:	cmp	r3, #1
   1c400:	addeq	r2, sp, #48	; 0x30
   1c404:	moveq	r4, #0
   1c408:	str	r0, [fp, #272]	; 0x110
   1c40c:	moveq	r0, r4
   1c410:	bne	1c758 <crc32@@Base+0x23fc>
   1c414:	mov	r1, r5
   1c418:	str	r4, [sp, #40]	; 0x28
   1c41c:	bl	122c8 <__strtok_r@plt>
   1c420:	cmp	r0, #0
   1c424:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c428:	ldrb	r3, [r0]
   1c42c:	cmp	r3, #35	; 0x23
   1c430:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c434:	add	r2, sp, #48	; 0x30
   1c438:	mov	r1, r5
   1c43c:	mov	r0, r4
   1c440:	str	r4, [sp, #40]	; 0x28
   1c444:	bl	122c8 <__strtok_r@plt>
   1c448:	cmp	r0, #0
   1c44c:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c450:	ldrb	r3, [r0]
   1c454:	cmp	r3, #35	; 0x23
   1c458:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c45c:	mov	r0, r4
   1c460:	add	r2, sp, #48	; 0x30
   1c464:	mov	r1, r5
   1c468:	str	r4, [sp, #40]	; 0x28
   1c46c:	bl	122c8 <__strtok_r@plt>
   1c470:	cmp	r0, #0
   1c474:	bne	1c354 <crc32@@Base+0x1ff8>
   1c478:	b	1c1b8 <crc32@@Base+0x1e5c>
   1c47c:	movw	r1, #42324	; 0xa554
   1c480:	mov	r2, r4
   1c484:	movt	r1, #3
   1c488:	ldr	r0, [pc, #1236]	; 1c964 <crc32@@Base+0x2608>
   1c48c:	bl	1b1d8 <crc32@@Base+0xe7c>
   1c490:	cmn	r0, #1
   1c494:	str	r0, [fp, #272]	; 0x110
   1c498:	beq	1c868 <crc32@@Base+0x250c>
   1c49c:	movw	r1, #42324	; 0xa554
   1c4a0:	mov	r2, r4
   1c4a4:	movt	r1, #3
   1c4a8:	ldr	r0, [pc, #1208]	; 1c968 <crc32@@Base+0x260c>
   1c4ac:	bl	1b1d8 <crc32@@Base+0xe7c>
   1c4b0:	movw	r6, #8276	; 0x2054
   1c4b4:	movt	r6, #5
   1c4b8:	cmn	r0, #1
   1c4bc:	str	r0, [r6, #4]
   1c4c0:	beq	1c868 <crc32@@Base+0x250c>
   1c4c4:	ldr	r3, [fp, #272]	; 0x110
   1c4c8:	mov	r4, #0
   1c4cc:	add	r2, sp, #48	; 0x30
   1c4d0:	mov	r1, r5
   1c4d4:	cmp	r0, r3
   1c4d8:	mov	r0, r4
   1c4dc:	strcc	r3, [r6, #4]
   1c4e0:	ldr	r3, [fp, #172]	; 0xac
   1c4e4:	cmp	r3, #1
   1c4e8:	beq	1c418 <crc32@@Base+0x20bc>
   1c4ec:	str	r4, [fp, #172]	; 0xac
   1c4f0:	b	1c418 <crc32@@Base+0x20bc>
   1c4f4:	movw	r6, #8276	; 0x2054
   1c4f8:	movt	r6, #5
   1c4fc:	ldr	r3, [r6, #24]
   1c500:	cmp	r3, #2
   1c504:	bne	1c834 <crc32@@Base+0x24d8>
   1c508:	mov	r0, r4
   1c50c:	mov	r2, r7
   1c510:	ldr	r1, [sp, #12]
   1c514:	mov	r4, #0
   1c518:	bl	1c0a4 <crc32@@Base+0x1d48>
   1c51c:	ldr	r3, [fp, #172]	; 0xac
   1c520:	add	r2, sp, #48	; 0x30
   1c524:	mov	r1, r5
   1c528:	cmp	r3, #1
   1c52c:	str	r0, [fp]
   1c530:	mov	r0, r4
   1c534:	beq	1c418 <crc32@@Base+0x20bc>
   1c538:	b	1c4ec <crc32@@Base+0x2190>
   1c53c:	mov	r0, r4
   1c540:	mov	r2, r7
   1c544:	ldr	r1, [sp, #12]
   1c548:	movw	r6, #8276	; 0x2054
   1c54c:	bl	1c0a4 <crc32@@Base+0x1d48>
   1c550:	ldr	r3, [fp, #172]	; 0xac
   1c554:	movt	r6, #5
   1c558:	cmp	r3, #0
   1c55c:	str	r0, [r6, #24]
   1c560:	beq	1c804 <crc32@@Base+0x24a8>
   1c564:	mov	r4, #0
   1c568:	mov	r3, #1
   1c56c:	str	r3, [fp, #172]	; 0xac
   1c570:	bl	1c004 <crc32@@Base+0x1ca8>
   1c574:	mov	r0, r4
   1c578:	add	r2, sp, #48	; 0x30
   1c57c:	b	1c414 <crc32@@Base+0x20b8>
   1c580:	movw	r6, #8276	; 0x2054
   1c584:	movt	r6, #5
   1c588:	mov	r1, #0
   1c58c:	mov	r0, r4
   1c590:	mov	sl, #1
   1c594:	str	sl, [r6, #48]	; 0x30
   1c598:	bl	124d8 <open@plt>
   1c59c:	ldr	r3, [sp, #20]
   1c5a0:	add	r3, r3, #44	; 0x2c
   1c5a4:	str	r3, [sp, #36]	; 0x24
   1c5a8:	subs	r9, r0, #0
   1c5ac:	blt	1c7dc <crc32@@Base+0x2480>
   1c5b0:	add	r2, sp, #56	; 0x38
   1c5b4:	mov	r1, r9
   1c5b8:	mov	r0, #3
   1c5bc:	bl	12610 <__fxstat@plt>
   1c5c0:	cmp	r0, #0
   1c5c4:	blt	1c7a0 <crc32@@Base+0x2444>
   1c5c8:	mov	r8, #0
   1c5cc:	mov	r3, sl
   1c5d0:	ldr	r1, [sp, #100]	; 0x64
   1c5d4:	mov	r0, r8
   1c5d8:	str	r9, [sp]
   1c5dc:	mov	r2, sl
   1c5e0:	str	r8, [sp, #4]
   1c5e4:	bl	12490 <mmap@plt>
   1c5e8:	cmn	r0, #1
   1c5ec:	mov	r3, r0
   1c5f0:	beq	1c8e4 <crc32@@Base+0x2588>
   1c5f4:	ldr	r4, [sp, #100]	; 0x64
   1c5f8:	cmp	r4, #65536	; 0x10000
   1c5fc:	bgt	1c8d0 <crc32@@Base+0x2574>
   1c600:	mov	r2, r4
   1c604:	mov	r1, r3
   1c608:	ldr	r0, [sp, #36]	; 0x24
   1c60c:	str	r3, [sp, #36]	; 0x24
   1c610:	bl	12658 <memcpy@plt>
   1c614:	ldr	r3, [sp, #36]	; 0x24
   1c618:	mov	r1, r4
   1c61c:	str	r4, [r6, #20]
   1c620:	mov	r0, r3
   1c624:	bl	126a0 <munmap@plt>
   1c628:	mov	r0, r9
   1c62c:	bl	123b8 <close@plt>
   1c630:	ldr	r3, [sp, #20]
   1c634:	mov	r0, r8
   1c638:	add	r2, sp, #48	; 0x30
   1c63c:	mov	r1, r5
   1c640:	str	r8, [sp, #40]	; 0x28
   1c644:	str	sl, [r3, #40]	; 0x28
   1c648:	bl	122c8 <__strtok_r@plt>
   1c64c:	subs	r4, r0, #0
   1c650:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c654:	ldrb	r3, [r4]
   1c658:	cmp	r3, #35	; 0x23
   1c65c:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c660:	mov	r8, #2
   1c664:	mov	r9, #0
   1c668:	mov	r0, r4
   1c66c:	mov	r2, r7
   1c670:	ldr	r1, [sp, #12]
   1c674:	bl	1c0a4 <crc32@@Base+0x1d48>
   1c678:	add	r2, sp, #48	; 0x30
   1c67c:	mov	r1, r5
   1c680:	str	r9, [sp, #40]	; 0x28
   1c684:	add	r8, r8, #1
   1c688:	str	r0, [r6, #16]
   1c68c:	mov	r0, #0
   1c690:	bl	122c8 <__strtok_r@plt>
   1c694:	cmp	r0, #0
   1c698:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c69c:	ldrb	r3, [r0]
   1c6a0:	cmp	r3, #35	; 0x23
   1c6a4:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c6a8:	cmp	r8, #3
   1c6ac:	beq	1c66c <crc32@@Base+0x2310>
   1c6b0:	add	r2, sp, #48	; 0x30
   1c6b4:	mov	r1, r5
   1c6b8:	mov	r0, #0
   1c6bc:	str	r9, [sp, #40]	; 0x28
   1c6c0:	bl	122c8 <__strtok_r@plt>
   1c6c4:	cmp	r0, #0
   1c6c8:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c6cc:	ldrb	r3, [r0]
   1c6d0:	cmp	r3, #35	; 0x23
   1c6d4:	beq	1c1b8 <crc32@@Base+0x1e5c>
   1c6d8:	mov	r9, #10
   1c6dc:	mov	r8, #5
   1c6e0:	b	1c364 <crc32@@Base+0x2008>
   1c6e4:	cmp	r9, #10
   1c6e8:	bne	1c364 <crc32@@Base+0x2008>
   1c6ec:	movw	r6, #8276	; 0x2054
   1c6f0:	movt	r6, #5
   1c6f4:	b	1c664 <crc32@@Base+0x2308>
   1c6f8:	ldr	fp, [sp, #12]
   1c6fc:	movw	r2, #8276	; 0x2054
   1c700:	movt	r2, #5
   1c704:	mov	r3, r7
   1c708:	ldr	r0, [sp, #20]
   1c70c:	ldr	r4, [r2, #36]	; 0x24
   1c710:	mov	r2, fp
   1c714:	ldr	r1, [sp, #16]
   1c718:	blx	r4
   1c71c:	ldr	r0, [sp, #24]
   1c720:	bl	126b8 <fclose@plt>
   1c724:	movw	r3, #5240	; 0x1478
   1c728:	movt	r3, #5
   1c72c:	ldr	r3, [r3, #272]	; 0x110
   1c730:	cmn	r3, #1
   1c734:	beq	1c910 <crc32@@Base+0x25b4>
   1c738:	ldr	r3, [sp, #32]
   1c73c:	ldr	r2, [sp, #148]	; 0x94
   1c740:	ldr	r0, [sp, #16]
   1c744:	ldr	r3, [r3]
   1c748:	cmp	r2, r3
   1c74c:	bne	1c90c <crc32@@Base+0x25b0>
   1c750:	add	sp, sp, #156	; 0x9c
   1c754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c758:	mov	r4, #0
   1c75c:	add	r2, sp, #48	; 0x30
   1c760:	mov	r0, r4
   1c764:	mov	r1, r5
   1c768:	b	1c4ec <crc32@@Base+0x2190>
   1c76c:	ldr	fp, [sp, #12]
   1c770:	movw	r2, #7868	; 0x1ebc
   1c774:	movt	r2, #5
   1c778:	str	r4, [sp, #4]
   1c77c:	mov	r1, #1
   1c780:	ldr	r0, [r2]
   1c784:	mov	r3, fp
   1c788:	movw	r2, #29988	; 0x7524
   1c78c:	str	r7, [sp]
   1c790:	movt	r2, #3
   1c794:	bl	12358 <__fprintf_chk@plt>
   1c798:	mov	r0, #1
   1c79c:	bl	12298 <exit@plt>
   1c7a0:	movw	r3, #7868	; 0x1ebc
   1c7a4:	movt	r3, #5
   1c7a8:	ldr	r5, [r3]
   1c7ac:	bl	12748 <__errno_location@plt>
   1c7b0:	ldr	r0, [r0]
   1c7b4:	bl	122a4 <strerror@plt>
   1c7b8:	movw	r2, #29908	; 0x74d4
   1c7bc:	movt	r2, #3
   1c7c0:	mov	r3, r4
   1c7c4:	str	r0, [sp]
   1c7c8:	mov	r1, sl
   1c7cc:	mov	r0, r5
   1c7d0:	bl	12358 <__fprintf_chk@plt>
   1c7d4:	mov	r0, sl
   1c7d8:	bl	12298 <exit@plt>
   1c7dc:	movw	r3, #7868	; 0x1ebc
   1c7e0:	movt	r3, #5
   1c7e4:	ldr	r5, [r3]
   1c7e8:	bl	12748 <__errno_location@plt>
   1c7ec:	ldr	r0, [r0]
   1c7f0:	bl	122a4 <strerror@plt>
   1c7f4:	movw	r2, #29884	; 0x74bc
   1c7f8:	mov	r3, r4
   1c7fc:	movt	r2, #3
   1c800:	b	1c7c4 <crc32@@Base+0x2468>
   1c804:	ldr	fp, [sp, #12]
   1c808:	movw	r2, #7868	; 0x1ebc
   1c80c:	movt	r2, #5
   1c810:	str	r7, [sp]
   1c814:	mov	r1, #1
   1c818:	ldr	r0, [r2]
   1c81c:	mov	r3, fp
   1c820:	movw	r2, #42188	; 0xa4cc
   1c824:	movt	r2, #3
   1c828:	bl	12358 <__fprintf_chk@plt>
   1c82c:	mov	r0, #1
   1c830:	bl	12298 <exit@plt>
   1c834:	ldr	fp, [sp, #12]
   1c838:	movw	r1, #7868	; 0x1ebc
   1c83c:	movt	r1, #5
   1c840:	str	r4, [sp, #4]
   1c844:	str	r7, [sp]
   1c848:	movw	r2, #42348	; 0xa56c
   1c84c:	ldr	r0, [r1]
   1c850:	mov	r3, fp
   1c854:	movt	r2, #3
   1c858:	mov	r1, #1
   1c85c:	bl	12358 <__fprintf_chk@plt>
   1c860:	mov	r0, #1
   1c864:	bl	12298 <exit@plt>
   1c868:	ldr	fp, [sp, #12]
   1c86c:	movw	r1, #7868	; 0x1ebc
   1c870:	movt	r1, #5
   1c874:	str	r4, [sp, #4]
   1c878:	str	r7, [sp]
   1c87c:	movw	r2, #42284	; 0xa52c
   1c880:	ldr	r0, [r1]
   1c884:	mov	r3, fp
   1c888:	movt	r2, #3
   1c88c:	mov	r1, #1
   1c890:	bl	12358 <__fprintf_chk@plt>
   1c894:	mov	r0, #1
   1c898:	bl	12298 <exit@plt>
   1c89c:	ldr	fp, [sp, #12]
   1c8a0:	movw	r1, #7868	; 0x1ebc
   1c8a4:	movt	r1, #5
   1c8a8:	str	r3, [sp, #4]
   1c8ac:	str	r7, [sp]
   1c8b0:	movw	r2, #42436	; 0xa5c4
   1c8b4:	ldr	r0, [r1]
   1c8b8:	mov	r3, fp
   1c8bc:	movt	r2, #3
   1c8c0:	mov	r1, #1
   1c8c4:	bl	12358 <__fprintf_chk@plt>
   1c8c8:	mov	r0, #1
   1c8cc:	bl	12298 <exit@plt>
   1c8d0:	movw	r0, #42404	; 0xa5a4
   1c8d4:	movt	r0, #3
   1c8d8:	bl	12310 <puts@plt>
   1c8dc:	mov	r0, sl
   1c8e0:	bl	12298 <exit@plt>
   1c8e4:	movw	r3, #7868	; 0x1ebc
   1c8e8:	movt	r3, #5
   1c8ec:	ldr	r5, [r3]
   1c8f0:	bl	12748 <__errno_location@plt>
   1c8f4:	ldr	r0, [r0]
   1c8f8:	bl	122a4 <strerror@plt>
   1c8fc:	movw	r2, #31488	; 0x7b00
   1c900:	mov	r3, r4
   1c904:	movt	r2, #3
   1c908:	b	1c7c4 <crc32@@Base+0x2468>
   1c90c:	bl	12538 <__stack_chk_fail@plt>
   1c910:	movw	r1, #7868	; 0x1ebc
   1c914:	movt	r1, #5
   1c918:	mov	r3, fp
   1c91c:	movw	r2, #42488	; 0xa5f8
   1c920:	ldr	r0, [r1]
   1c924:	movt	r2, #3
   1c928:	mov	r1, #1
   1c92c:	bl	12358 <__fprintf_chk@plt>
   1c930:	mov	r0, #1
   1c934:	bl	12298 <exit@plt>
   1c938:	movw	r1, #7868	; 0x1ebc
   1c93c:	movt	r1, #5
   1c940:	mov	r3, fp
   1c944:	movw	r2, #42132	; 0xa494
   1c948:	ldr	r0, [r1]
   1c94c:	movt	r2, #3
   1c950:	mov	r1, #1
   1c954:	bl	12358 <__fprintf_chk@plt>
   1c958:	mov	r0, #1
   1c95c:	bl	12298 <exit@plt>
   1c960:	andeq	r1, r5, r0, lsr #9
   1c964:	andeq	r1, r5, ip, lsl #11
   1c968:	andeq	r1, r5, r8, lsr #10
   1c96c:	push	{r4, r5, r6, r7, r8, lr}
   1c970:	movw	r4, #8276	; 0x2054
   1c974:	movw	r5, #5240	; 0x1478
   1c978:	movt	r4, #5
   1c97c:	movt	r5, #5
   1c980:	mov	r8, r0
   1c984:	mov	r6, r3
   1c988:	mov	r2, #1
   1c98c:	mov	r7, r1
   1c990:	str	r2, [r4, #24]
   1c994:	mvn	r3, #0
   1c998:	str	r3, [r5, #272]	; 0x110
   1c99c:	mov	r3, #0
   1c9a0:	str	r3, [r5]
   1c9a4:	bl	1c004 <crc32@@Base+0x1ca8>
   1c9a8:	ldr	r1, [r6, #64]	; 0x40
   1c9ac:	mov	r0, r8
   1c9b0:	bl	1c14c <crc32@@Base+0x1df0>
   1c9b4:	ldr	r3, [r4, #24]
   1c9b8:	cmp	r3, #1
   1c9bc:	moveq	r2, #28
   1c9c0:	mov	r1, r0
   1c9c4:	beq	1c9e0 <crc32@@Base+0x2684>
   1c9c8:	ldr	r0, [r4, #48]	; 0x30
   1c9cc:	mov	r3, #44	; 0x2c
   1c9d0:	movt	r3, #1
   1c9d4:	movw	r2, #1816	; 0x718
   1c9d8:	cmp	r0, #0
   1c9dc:	movne	r2, r3
   1c9e0:	ldr	r3, [r5, #272]	; 0x110
   1c9e4:	ldr	r0, [r4, #4]
   1c9e8:	add	r2, r3, r2
   1c9ec:	cmp	r2, r0
   1c9f0:	mov	r0, r8
   1c9f4:	strhi	r2, [r4, #4]
   1c9f8:	ldr	r8, [r4, #40]	; 0x28
   1c9fc:	ldr	r2, [r6, #60]	; 0x3c
   1ca00:	blx	r8
   1ca04:	ldr	r3, [r5, #272]	; 0x110
   1ca08:	ldr	r0, [r7, #44]	; 0x2c
   1ca0c:	add	r3, r3, #4080	; 0xff0
   1ca10:	ldr	r1, [r4, #12]
   1ca14:	add	r3, r3, #15
   1ca18:	ldr	r2, [r4, #8]
   1ca1c:	add	r3, r3, r0
   1ca20:	cmp	r1, #0
   1ca24:	bic	r3, r3, #4080	; 0xff0
   1ca28:	bic	r3, r3, #15
   1ca2c:	str	r3, [r2]
   1ca30:	popeq	{r4, r5, r6, r7, r8, pc}
   1ca34:	ldr	ip, [r5]
   1ca38:	cmp	ip, #0
   1ca3c:	popeq	{r4, r5, r6, r7, r8, pc}
   1ca40:	ldr	r0, [r6, #60]	; 0x3c
   1ca44:	ldr	lr, [r4, #4]
   1ca48:	sub	r0, r0, lr
   1ca4c:	add	r3, r0, r3
   1ca50:	str	r3, [r1]
   1ca54:	ldr	r3, [r2]
   1ca58:	add	ip, r3, ip
   1ca5c:	str	ip, [r2]
   1ca60:	pop	{r4, r5, r6, r7, r8, pc}
   1ca64:	push	{r4, r5, r6, r7, r8, r9, lr}
   1ca68:	movw	r6, #3824	; 0xef0
   1ca6c:	movt	r6, #5
   1ca70:	sub	sp, sp, #108	; 0x6c
   1ca74:	movw	r4, #8276	; 0x2054
   1ca78:	movw	r5, #5240	; 0x1478
   1ca7c:	ldr	r3, [r6]
   1ca80:	movt	r4, #5
   1ca84:	movt	r5, #5
   1ca88:	mov	r7, r0
   1ca8c:	mov	r8, r1
   1ca90:	mov	r2, #44	; 0x2c
   1ca94:	mov	r1, #0
   1ca98:	movt	r2, #1
   1ca9c:	movw	r0, #8328	; 0x2088
   1caa0:	movt	r0, #5
   1caa4:	str	r3, [sp, #100]	; 0x64
   1caa8:	ldr	r9, [r7, #72]	; 0x48
   1caac:	bl	12388 <memset@plt>
   1cab0:	mvn	r2, #0
   1cab4:	mov	r3, #1
   1cab8:	str	r2, [r5, #272]	; 0x110
   1cabc:	str	r3, [r4, #24]
   1cac0:	mov	r3, #0
   1cac4:	str	r3, [r5]
   1cac8:	bl	1c004 <crc32@@Base+0x1ca8>
   1cacc:	ldr	r1, [r7, #64]	; 0x40
   1cad0:	movw	r0, #8328	; 0x2088
   1cad4:	movt	r0, #5
   1cad8:	bl	1c14c <crc32@@Base+0x1df0>
   1cadc:	ldr	r3, [r4, #24]
   1cae0:	cmp	r3, #1
   1cae4:	moveq	r2, #760	; 0x2f8
   1cae8:	beq	1cb04 <crc32@@Base+0x27a8>
   1caec:	ldr	r1, [r4, #48]	; 0x30
   1caf0:	movw	r3, #1816	; 0x718
   1caf4:	mov	r2, #44	; 0x2c
   1caf8:	movt	r2, #1
   1cafc:	cmp	r1, #0
   1cb00:	moveq	r2, r3
   1cb04:	ldr	r0, [r5, #272]	; 0x110
   1cb08:	ldr	r3, [r4, #4]
   1cb0c:	add	r1, r0, r2
   1cb10:	cmp	r1, r3
   1cb14:	bhi	1cb88 <crc32@@Base+0x282c>
   1cb18:	sub	r4, r3, r0
   1cb1c:	cmp	r2, r4
   1cb20:	bhi	1cb94 <crc32@@Base+0x2838>
   1cb24:	mov	r1, #1
   1cb28:	mov	r0, r4
   1cb2c:	bl	125c8 <calloc@plt>
   1cb30:	cmp	r0, #0
   1cb34:	beq	1cc04 <crc32@@Base+0x28a8>
   1cb38:	str	r0, [r8, #8]
   1cb3c:	add	r2, sp, #8
   1cb40:	str	r4, [r8, #4]
   1cb44:	mov	r1, r9
   1cb48:	mov	r0, #3
   1cb4c:	bl	126dc <__xstat@plt>
   1cb50:	cmp	r0, #0
   1cb54:	blt	1cbc0 <crc32@@Base+0x2864>
   1cb58:	ldr	r0, [sp, #52]	; 0x34
   1cb5c:	ldr	r1, [sp, #100]	; 0x64
   1cb60:	add	r3, r0, #4080	; 0xff0
   1cb64:	ldr	r2, [r6]
   1cb68:	add	r3, r3, #15
   1cb6c:	bic	r3, r3, #4080	; 0xff0
   1cb70:	cmp	r1, r2
   1cb74:	bic	r3, r3, #15
   1cb78:	sub	r0, r3, r0
   1cb7c:	bne	1cbbc <crc32@@Base+0x2860>
   1cb80:	add	sp, sp, #108	; 0x6c
   1cb84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1cb88:	str	r1, [r4, #4]
   1cb8c:	mov	r4, r2
   1cb90:	b	1cb24 <crc32@@Base+0x27c8>
   1cb94:	movw	r1, #7868	; 0x1ebc
   1cb98:	movt	r1, #5
   1cb9c:	ldr	r3, [r7, #80]	; 0x50
   1cba0:	movw	r2, #42520	; 0xa618
   1cba4:	ldr	r0, [r1]
   1cba8:	movt	r2, #3
   1cbac:	mov	r1, #1
   1cbb0:	bl	12358 <__fprintf_chk@plt>
   1cbb4:	mov	r0, #1
   1cbb8:	bl	12298 <exit@plt>
   1cbbc:	bl	12538 <__stack_chk_fail@plt>
   1cbc0:	movw	r2, #7868	; 0x1ebc
   1cbc4:	movt	r2, #5
   1cbc8:	ldr	r5, [r7, #80]	; 0x50
   1cbcc:	ldr	r4, [r2]
   1cbd0:	bl	12748 <__errno_location@plt>
   1cbd4:	ldr	r0, [r0]
   1cbd8:	bl	122a4 <strerror@plt>
   1cbdc:	mov	r3, r5
   1cbe0:	str	r9, [sp]
   1cbe4:	movw	r2, #29904	; 0x74d0
   1cbe8:	mov	r1, #1
   1cbec:	movt	r2, #3
   1cbf0:	str	r0, [sp, #4]
   1cbf4:	mov	r0, r4
   1cbf8:	bl	12358 <__fprintf_chk@plt>
   1cbfc:	mov	r0, #1
   1cc00:	bl	12298 <exit@plt>
   1cc04:	movw	r2, #7868	; 0x1ebc
   1cc08:	movt	r2, #5
   1cc0c:	ldr	r5, [r7, #80]	; 0x50
   1cc10:	ldr	r4, [r2]
   1cc14:	bl	12748 <__errno_location@plt>
   1cc18:	ldr	r0, [r0]
   1cc1c:	bl	122a4 <strerror@plt>
   1cc20:	mov	r3, r5
   1cc24:	movw	r2, #29928	; 0x74e8
   1cc28:	mov	r1, #1
   1cc2c:	movt	r2, #3
   1cc30:	str	r0, [sp]
   1cc34:	mov	r0, r4
   1cc38:	bl	12358 <__fprintf_chk@plt>
   1cc3c:	mov	r0, #1
   1cc40:	bl	12298 <exit@plt>
   1cc44:	mov	r0, #0
   1cc48:	bx	lr
   1cc4c:	bx	lr
   1cc50:	bx	lr
   1cc54:	subs	r0, r0, #38	; 0x26
   1cc58:	movne	r0, #1
   1cc5c:	bx	lr
   1cc60:	push	{r4, r5, r6, lr}
   1cc64:	mov	r5, r1
   1cc68:	sub	sp, sp, #8
   1cc6c:	mov	r6, r0
   1cc70:	mov	r1, #0
   1cc74:	mov	r0, r5
   1cc78:	bl	124d8 <open@plt>
   1cc7c:	subs	r4, r0, #0
   1cc80:	blt	1ccac <crc32@@Base+0x2950>
   1cc84:	mov	r2, r6
   1cc88:	mov	r1, r4
   1cc8c:	mov	r0, #3
   1cc90:	bl	12610 <__fxstat@plt>
   1cc94:	cmp	r0, #0
   1cc98:	blt	1cce8 <crc32@@Base+0x298c>
   1cc9c:	mov	r0, r4
   1cca0:	add	sp, sp, #8
   1cca4:	pop	{r4, r5, r6, lr}
   1cca8:	b	123b8 <close@plt>
   1ccac:	movw	r3, #7868	; 0x1ebc
   1ccb0:	movt	r3, #5
   1ccb4:	ldr	r4, [r3]
   1ccb8:	bl	12748 <__errno_location@plt>
   1ccbc:	ldr	r0, [r0]
   1ccc0:	bl	122a4 <strerror@plt>
   1ccc4:	movw	r2, #43072	; 0xa840
   1ccc8:	movt	r2, #3
   1cccc:	mov	r3, r5
   1ccd0:	mov	r1, #1
   1ccd4:	str	r0, [sp]
   1ccd8:	mov	r0, r4
   1ccdc:	bl	12358 <__fprintf_chk@plt>
   1cce0:	mov	r0, #1
   1cce4:	bl	12298 <exit@plt>
   1cce8:	movw	r3, #7868	; 0x1ebc
   1ccec:	movt	r3, #5
   1ccf0:	ldr	r4, [r3]
   1ccf4:	bl	12748 <__errno_location@plt>
   1ccf8:	ldr	r0, [r0]
   1ccfc:	bl	122a4 <strerror@plt>
   1cd00:	movw	r2, #43092	; 0xa854
   1cd04:	mov	r3, r5
   1cd08:	mov	r1, #1
   1cd0c:	movt	r2, #3
   1cd10:	b	1ccd4 <crc32@@Base+0x2978>
   1cd14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd18:	movw	r4, #3824	; 0xef0
   1cd1c:	sub	sp, sp, #16384	; 0x4000
   1cd20:	movt	r4, #5
   1cd24:	sub	sp, sp, #108	; 0x6c
   1cd28:	mov	sl, r1
   1cd2c:	mov	fp, r2
   1cd30:	ldr	r1, [r4]
   1cd34:	add	r2, sp, #16384	; 0x4000
   1cd38:	cmp	r3, #16384	; 0x4000
   1cd3c:	add	r2, r2, #100	; 0x64
   1cd40:	str	r1, [r2]
   1cd44:	bgt	1ce58 <crc32@@Base+0x2afc>
   1cd48:	mov	r2, #16384	; 0x4000
   1cd4c:	mov	r1, #0
   1cd50:	mov	r9, r0
   1cd54:	add	r0, sp, #100	; 0x64
   1cd58:	mov	r6, r3
   1cd5c:	bl	12388 <memset@plt>
   1cd60:	mov	r1, #0
   1cd64:	mov	r0, sl
   1cd68:	bl	124d8 <open@plt>
   1cd6c:	subs	r7, r0, #0
   1cd70:	blt	1cebc <crc32@@Base+0x2b60>
   1cd74:	add	r2, sp, #8
   1cd78:	mov	r1, r7
   1cd7c:	mov	r0, #3
   1cd80:	bl	12610 <__fxstat@plt>
   1cd84:	cmp	r0, #0
   1cd88:	blt	1ce80 <crc32@@Base+0x2b24>
   1cd8c:	ldr	r1, [sp, #52]	; 0x34
   1cd90:	cmp	r1, #0
   1cd94:	beq	1ce2c <crc32@@Base+0x2ad0>
   1cd98:	mov	r5, #0
   1cd9c:	mov	r3, #1
   1cda0:	str	r7, [sp]
   1cda4:	mov	r0, r5
   1cda8:	str	r5, [sp, #4]
   1cdac:	mov	r2, r3
   1cdb0:	bl	12490 <mmap@plt>
   1cdb4:	cmn	r0, #1
   1cdb8:	mov	r8, r0
   1cdbc:	beq	1cee8 <crc32@@Base+0x2b8c>
   1cdc0:	mov	r2, r5
   1cdc4:	mov	r1, fp
   1cdc8:	mov	r0, r9
   1cdcc:	ldr	sl, [sp, #52]	; 0x34
   1cdd0:	bl	12598 <lseek@plt>
   1cdd4:	cmp	r0, #0
   1cdd8:	blt	1cf84 <crc32@@Base+0x2c28>
   1cddc:	mov	r2, sl
   1cde0:	mov	r1, r8
   1cde4:	mov	r0, r9
   1cde8:	bl	126c4 <write@plt>
   1cdec:	cmp	sl, r0
   1cdf0:	bne	1cf14 <crc32@@Base+0x2bb8>
   1cdf4:	sub	r5, r6, #1
   1cdf8:	rsb	r6, r6, #0
   1cdfc:	add	r5, r5, sl
   1ce00:	add	r1, sp, #100	; 0x64
   1ce04:	and	r5, r5, r6
   1ce08:	mov	r0, r9
   1ce0c:	sub	r5, r5, sl
   1ce10:	mov	r2, r5
   1ce14:	bl	126c4 <write@plt>
   1ce18:	cmp	r5, r0
   1ce1c:	bne	1cf4c <crc32@@Base+0x2bf0>
   1ce20:	ldr	r1, [sp, #52]	; 0x34
   1ce24:	mov	r0, r8
   1ce28:	bl	126a0 <munmap@plt>
   1ce2c:	mov	r0, r7
   1ce30:	bl	123b8 <close@plt>
   1ce34:	add	r3, sp, #16384	; 0x4000
   1ce38:	add	r3, r3, #100	; 0x64
   1ce3c:	ldr	r2, [r3]
   1ce40:	ldr	r3, [r4]
   1ce44:	cmp	r2, r3
   1ce48:	bne	1ce7c <crc32@@Base+0x2b20>
   1ce4c:	add	sp, sp, #16384	; 0x4000
   1ce50:	add	sp, sp, #108	; 0x6c
   1ce54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ce58:	movw	r0, #7868	; 0x1ebc
   1ce5c:	movt	r0, #5
   1ce60:	movw	r2, #43112	; 0xa868
   1ce64:	mov	r1, #1
   1ce68:	ldr	r0, [r0]
   1ce6c:	movt	r2, #3
   1ce70:	bl	12358 <__fprintf_chk@plt>
   1ce74:	mov	r0, #1
   1ce78:	bl	12298 <exit@plt>
   1ce7c:	bl	12538 <__stack_chk_fail@plt>
   1ce80:	movw	r3, #7868	; 0x1ebc
   1ce84:	movt	r3, #5
   1ce88:	ldr	r4, [r3]
   1ce8c:	bl	12748 <__errno_location@plt>
   1ce90:	ldr	r0, [r0]
   1ce94:	bl	122a4 <strerror@plt>
   1ce98:	movw	r2, #29908	; 0x74d4
   1ce9c:	movt	r2, #3
   1cea0:	mov	r3, sl
   1cea4:	mov	r1, #1
   1cea8:	str	r0, [sp]
   1ceac:	mov	r0, r4
   1ceb0:	bl	12358 <__fprintf_chk@plt>
   1ceb4:	mov	r0, #1
   1ceb8:	bl	12298 <exit@plt>
   1cebc:	movw	r3, #7868	; 0x1ebc
   1cec0:	movt	r3, #5
   1cec4:	ldr	r4, [r3]
   1cec8:	bl	12748 <__errno_location@plt>
   1cecc:	ldr	r0, [r0]
   1ced0:	bl	122a4 <strerror@plt>
   1ced4:	movw	r2, #29884	; 0x74bc
   1ced8:	mov	r3, sl
   1cedc:	mov	r1, #1
   1cee0:	movt	r2, #3
   1cee4:	b	1cea8 <crc32@@Base+0x2b4c>
   1cee8:	movw	r3, #7868	; 0x1ebc
   1ceec:	movt	r3, #5
   1cef0:	ldr	r4, [r3]
   1cef4:	bl	12748 <__errno_location@plt>
   1cef8:	ldr	r0, [r0]
   1cefc:	bl	122a4 <strerror@plt>
   1cf00:	movw	r2, #31488	; 0x7b00
   1cf04:	mov	r3, sl
   1cf08:	mov	r1, #1
   1cf0c:	movt	r2, #3
   1cf10:	b	1cea8 <crc32@@Base+0x2b4c>
   1cf14:	movw	r3, #7868	; 0x1ebc
   1cf18:	movt	r3, #5
   1cf1c:	ldr	r4, [r3]
   1cf20:	bl	12748 <__errno_location@plt>
   1cf24:	ldr	r0, [r0]
   1cf28:	bl	122a4 <strerror@plt>
   1cf2c:	movw	r2, #43164	; 0xa89c
   1cf30:	mov	r1, #1
   1cf34:	movt	r2, #3
   1cf38:	mov	r3, r0
   1cf3c:	mov	r0, r4
   1cf40:	bl	12358 <__fprintf_chk@plt>
   1cf44:	mov	r0, #1
   1cf48:	bl	12298 <exit@plt>
   1cf4c:	movw	r3, #7868	; 0x1ebc
   1cf50:	movt	r3, #5
   1cf54:	ldr	r4, [r3]
   1cf58:	bl	12748 <__errno_location@plt>
   1cf5c:	ldr	r0, [r0]
   1cf60:	bl	122a4 <strerror@plt>
   1cf64:	movw	r2, #43180	; 0xa8ac
   1cf68:	mov	r1, #1
   1cf6c:	movt	r2, #3
   1cf70:	mov	r3, r0
   1cf74:	mov	r0, r4
   1cf78:	bl	12358 <__fprintf_chk@plt>
   1cf7c:	mov	r0, #1
   1cf80:	bl	12298 <exit@plt>
   1cf84:	movw	r3, #7868	; 0x1ebc
   1cf88:	movt	r3, #5
   1cf8c:	ldr	r4, [r3]
   1cf90:	bl	12748 <__errno_location@plt>
   1cf94:	ldr	r0, [r0]
   1cf98:	bl	122a4 <strerror@plt>
   1cf9c:	movw	r3, #43024	; 0xa810
   1cfa0:	movw	r2, #43144	; 0xa888
   1cfa4:	movt	r3, #3
   1cfa8:	movt	r2, #3
   1cfac:	mov	r1, #1
   1cfb0:	b	1cea8 <crc32@@Base+0x2b4c>
   1cfb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1cfb8:	movw	r8, #3824	; 0xef0
   1cfbc:	movt	r8, #5
   1cfc0:	ldr	r3, [r0, #4]
   1cfc4:	sub	sp, sp, #668	; 0x29c
   1cfc8:	mov	r4, r0
   1cfcc:	ldr	r2, [r8]
   1cfd0:	cmp	r3, #0
   1cfd4:	mov	r6, r1
   1cfd8:	add	r5, sp, #148	; 0x94
   1cfdc:	str	r2, [sp, #660]	; 0x294
   1cfe0:	bne	1d0b8 <crc32@@Base+0x2d5c>
   1cfe4:	mov	r2, #384	; 0x180
   1cfe8:	movw	r3, #43200	; 0xa8c0
   1cfec:	str	r2, [sp]
   1cff0:	mov	r0, r5
   1cff4:	movt	r3, #3
   1cff8:	mov	r2, #512	; 0x200
   1cffc:	mov	r1, #1
   1d000:	bl	1279c <__sprintf_chk@plt>
   1d004:	ldr	r3, [r4, #24]
   1d008:	add	r7, r4, #32
   1d00c:	mov	r2, #64	; 0x40
   1d010:	mov	r1, #0
   1d014:	orr	r3, r3, #256	; 0x100
   1d018:	mov	r0, r7
   1d01c:	str	r3, [r4, #24]
   1d020:	bl	12388 <memset@plt>
   1d024:	mov	r0, r5
   1d028:	movw	r1, #53956	; 0xd2c4
   1d02c:	movt	r1, #3
   1d030:	bl	1213c <popen@plt>
   1d034:	subs	r9, r0, #0
   1d038:	beq	1d130 <crc32@@Base+0x2dd4>
   1d03c:	mov	r2, r9
   1d040:	mov	r1, #97	; 0x61
   1d044:	add	r0, sp, #16
   1d048:	bl	12604 <fgets@plt>
   1d04c:	cmp	r0, #0
   1d050:	beq	1d108 <crc32@@Base+0x2dac>
   1d054:	movw	r6, #43392	; 0xa980
   1d058:	add	r5, sp, #16
   1d05c:	movt	r6, #3
   1d060:	mov	r4, #0
   1d064:	b	1d088 <crc32@@Base+0x2d2c>
   1d068:	mov	r0, r5
   1d06c:	add	r2, r7, r4
   1d070:	mov	r1, r6
   1d074:	add	r5, r5, #2
   1d078:	bl	12760 <sscanf@plt>
   1d07c:	cmp	r0, #0
   1d080:	blt	1d0e0 <crc32@@Base+0x2d84>
   1d084:	add	r4, r4, #1
   1d088:	add	r0, sp, #16
   1d08c:	bl	1267c <strlen@plt>
   1d090:	cmp	r4, r0, lsr #1
   1d094:	bcc	1d068 <crc32@@Base+0x2d0c>
   1d098:	mov	r0, r9
   1d09c:	bl	12580 <pclose@plt>
   1d0a0:	ldr	r2, [sp, #660]	; 0x294
   1d0a4:	ldr	r3, [r8]
   1d0a8:	cmp	r2, r3
   1d0ac:	bne	1d158 <crc32@@Base+0x2dfc>
   1d0b0:	add	sp, sp, #668	; 0x29c
   1d0b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d0b8:	stm	sp, {r3, r6}
   1d0bc:	mov	r0, r5
   1d0c0:	mov	r3, #384	; 0x180
   1d0c4:	mov	r2, #512	; 0x200
   1d0c8:	str	r3, [sp, #8]
   1d0cc:	mov	r1, #1
   1d0d0:	movw	r3, #43220	; 0xa8d4
   1d0d4:	movt	r3, #3
   1d0d8:	bl	1279c <__sprintf_chk@plt>
   1d0dc:	b	1d004 <crc32@@Base+0x2ca8>
   1d0e0:	movw	r1, #7868	; 0x1ebc
   1d0e4:	movt	r1, #5
   1d0e8:	mov	r3, r0
   1d0ec:	movw	r2, #43400	; 0xa988
   1d0f0:	ldr	r0, [r1]
   1d0f4:	movt	r2, #3
   1d0f8:	mov	r1, #1
   1d0fc:	bl	12358 <__fprintf_chk@plt>
   1d100:	mov	r0, #1
   1d104:	bl	12298 <exit@plt>
   1d108:	movw	r1, #7868	; 0x1ebc
   1d10c:	movt	r1, #5
   1d110:	mov	r3, r6
   1d114:	movw	r2, #43364	; 0xa964
   1d118:	ldr	r0, [r1]
   1d11c:	movt	r2, #3
   1d120:	mov	r1, #1
   1d124:	bl	12358 <__fprintf_chk@plt>
   1d128:	mov	r0, #1
   1d12c:	bl	12298 <exit@plt>
   1d130:	movw	r3, #7868	; 0x1ebc
   1d134:	movt	r3, #5
   1d138:	movw	r0, #43336	; 0xa948
   1d13c:	mov	r2, #27
   1d140:	ldr	r3, [r3]
   1d144:	movt	r0, #3
   1d148:	mov	r1, #1
   1d14c:	bl	12634 <fwrite@plt>
   1d150:	mov	r0, #1
   1d154:	bl	12298 <exit@plt>
   1d158:	bl	12538 <__stack_chk_fail@plt>
   1d15c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d160:	movw	r6, #3824	; 0xef0
   1d164:	sub	sp, sp, #4160	; 0x1040
   1d168:	movt	r6, #5
   1d16c:	sub	sp, sp, #52	; 0x34
   1d170:	mov	r4, #0
   1d174:	ldr	r3, [r6]
   1d178:	add	ip, sp, #4160	; 0x1040
   1d17c:	add	ip, ip, #44	; 0x2c
   1d180:	mov	r9, r1
   1d184:	mov	r2, #4096	; 0x1000
   1d188:	mov	r1, r4
   1d18c:	mov	r5, r0
   1d190:	add	r0, sp, #108	; 0x6c
   1d194:	str	r3, [ip]
   1d198:	str	r4, [sp, #12]
   1d19c:	bl	12388 <memset@plt>
   1d1a0:	mov	r1, r4
   1d1a4:	mov	r0, r9
   1d1a8:	bl	124d8 <open@plt>
   1d1ac:	subs	r7, r0, #0
   1d1b0:	blt	1d408 <crc32@@Base+0x30ac>
   1d1b4:	mov	r1, r7
   1d1b8:	add	r2, sp, #16
   1d1bc:	mov	r0, #3
   1d1c0:	bl	12610 <__fxstat@plt>
   1d1c4:	cmp	r0, #0
   1d1c8:	blt	1d3dc <crc32@@Base+0x3080>
   1d1cc:	ldr	r1, [sp, #60]	; 0x3c
   1d1d0:	cmp	r1, #0
   1d1d4:	beq	1d30c <crc32@@Base+0x2fb0>
   1d1d8:	mov	r3, #1
   1d1dc:	str	r4, [sp, #4]
   1d1e0:	str	r7, [sp]
   1d1e4:	mov	r2, r3
   1d1e8:	mov	r0, r4
   1d1ec:	bl	12490 <mmap@plt>
   1d1f0:	cmn	r0, #1
   1d1f4:	mov	r8, r0
   1d1f8:	beq	1d3b0 <crc32@@Base+0x3054>
   1d1fc:	mov	r2, r4
   1d200:	mov	r1, r4
   1d204:	mov	r0, r5
   1d208:	ldr	r4, [sp, #60]	; 0x3c
   1d20c:	bl	12598 <lseek@plt>
   1d210:	cmp	r0, #0
   1d214:	blt	1d374 <crc32@@Base+0x3018>
   1d218:	mov	r2, r4
   1d21c:	mov	r1, r8
   1d220:	mov	r0, r5
   1d224:	bl	126c4 <write@plt>
   1d228:	cmp	r4, r0
   1d22c:	bne	1d33c <crc32@@Base+0x2fe0>
   1d230:	rsbs	r3, r4, #0
   1d234:	and	r2, r4, #3
   1d238:	and	r3, r3, #3
   1d23c:	rsbpl	r2, r3, #0
   1d240:	cmn	r4, #1
   1d244:	moveq	r3, #1
   1d248:	movne	r3, #0
   1d24c:	cmp	r2, #0
   1d250:	moveq	r3, #0
   1d254:	cmp	r3, #0
   1d258:	bne	1d2e4 <crc32@@Base+0x2f88>
   1d25c:	cmn	r4, #1
   1d260:	bge	1d300 <crc32@@Base+0x2fa4>
   1d264:	rsb	r4, r4, #0
   1d268:	b	1d28c <crc32@@Base+0x2f30>
   1d26c:	mov	r2, #4096	; 0x1000
   1d270:	add	r1, sp, #108	; 0x6c
   1d274:	mov	r0, r5
   1d278:	bl	126c4 <write@plt>
   1d27c:	cmp	r0, #4096	; 0x1000
   1d280:	bne	1d2ac <crc32@@Base+0x2f50>
   1d284:	subs	r4, r4, #4096	; 0x1000
   1d288:	beq	1d300 <crc32@@Base+0x2fa4>
   1d28c:	cmp	r4, #4096	; 0x1000
   1d290:	bge	1d26c <crc32@@Base+0x2f10>
   1d294:	add	r1, sp, #108	; 0x6c
   1d298:	mov	r0, r5
   1d29c:	mov	r2, r4
   1d2a0:	bl	126c4 <write@plt>
   1d2a4:	cmp	r0, r4
   1d2a8:	beq	1d300 <crc32@@Base+0x2fa4>
   1d2ac:	movw	r3, #7868	; 0x1ebc
   1d2b0:	movt	r3, #5
   1d2b4:	ldr	r4, [r3]
   1d2b8:	bl	12748 <__errno_location@plt>
   1d2bc:	ldr	r0, [r0]
   1d2c0:	bl	122a4 <strerror@plt>
   1d2c4:	movw	r2, #43180	; 0xa8ac
   1d2c8:	mov	r1, #1
   1d2cc:	movt	r2, #3
   1d2d0:	mov	r3, r0
   1d2d4:	mov	r0, r4
   1d2d8:	bl	12358 <__fprintf_chk@plt>
   1d2dc:	mov	r0, #1
   1d2e0:	bl	12298 <exit@plt>
   1d2e4:	rsb	r4, r2, #4
   1d2e8:	add	r1, sp, #12
   1d2ec:	mov	r0, r5
   1d2f0:	mov	r2, r4
   1d2f4:	bl	126c4 <write@plt>
   1d2f8:	cmp	r4, r0
   1d2fc:	bne	1d434 <crc32@@Base+0x30d8>
   1d300:	ldr	r1, [sp, #60]	; 0x3c
   1d304:	mov	r0, r8
   1d308:	bl	126a0 <munmap@plt>
   1d30c:	mov	r0, r7
   1d310:	bl	123b8 <close@plt>
   1d314:	add	r3, sp, #4160	; 0x1040
   1d318:	add	r3, r3, #44	; 0x2c
   1d31c:	ldr	r2, [r3]
   1d320:	ldr	r3, [r6]
   1d324:	cmp	r2, r3
   1d328:	bne	1d338 <crc32@@Base+0x2fdc>
   1d32c:	add	sp, sp, #4160	; 0x1040
   1d330:	add	sp, sp, #52	; 0x34
   1d334:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d338:	bl	12538 <__stack_chk_fail@plt>
   1d33c:	movw	r3, #7868	; 0x1ebc
   1d340:	movt	r3, #5
   1d344:	ldr	r4, [r3]
   1d348:	bl	12748 <__errno_location@plt>
   1d34c:	ldr	r0, [r0]
   1d350:	bl	122a4 <strerror@plt>
   1d354:	movw	r2, #43164	; 0xa89c
   1d358:	mov	r1, #1
   1d35c:	movt	r2, #3
   1d360:	mov	r3, r0
   1d364:	mov	r0, r4
   1d368:	bl	12358 <__fprintf_chk@plt>
   1d36c:	mov	r0, #1
   1d370:	bl	12298 <exit@plt>
   1d374:	movw	r3, #7868	; 0x1ebc
   1d378:	movt	r3, #5
   1d37c:	ldr	r4, [r3]
   1d380:	bl	12748 <__errno_location@plt>
   1d384:	ldr	r0, [r0]
   1d388:	bl	122a4 <strerror@plt>
   1d38c:	ldr	r3, [pc, #216]	; 1d46c <crc32@@Base+0x3110>
   1d390:	movw	r2, #43144	; 0xa888
   1d394:	movt	r2, #3
   1d398:	mov	r1, #1
   1d39c:	str	r0, [sp]
   1d3a0:	mov	r0, r4
   1d3a4:	bl	12358 <__fprintf_chk@plt>
   1d3a8:	mov	r0, #1
   1d3ac:	bl	12298 <exit@plt>
   1d3b0:	movw	r3, #7868	; 0x1ebc
   1d3b4:	movt	r3, #5
   1d3b8:	ldr	r4, [r3]
   1d3bc:	bl	12748 <__errno_location@plt>
   1d3c0:	ldr	r0, [r0]
   1d3c4:	bl	122a4 <strerror@plt>
   1d3c8:	movw	r2, #31488	; 0x7b00
   1d3cc:	mov	r3, r9
   1d3d0:	mov	r1, #1
   1d3d4:	movt	r2, #3
   1d3d8:	b	1d39c <crc32@@Base+0x3040>
   1d3dc:	movw	r3, #7868	; 0x1ebc
   1d3e0:	movt	r3, #5
   1d3e4:	ldr	r4, [r3]
   1d3e8:	bl	12748 <__errno_location@plt>
   1d3ec:	ldr	r0, [r0]
   1d3f0:	bl	122a4 <strerror@plt>
   1d3f4:	movw	r2, #29908	; 0x74d4
   1d3f8:	mov	r3, r9
   1d3fc:	mov	r1, #1
   1d400:	movt	r2, #3
   1d404:	b	1d39c <crc32@@Base+0x3040>
   1d408:	movw	r3, #7868	; 0x1ebc
   1d40c:	movt	r3, #5
   1d410:	ldr	r4, [r3]
   1d414:	bl	12748 <__errno_location@plt>
   1d418:	ldr	r0, [r0]
   1d41c:	bl	122a4 <strerror@plt>
   1d420:	movw	r2, #29884	; 0x74bc
   1d424:	mov	r3, r9
   1d428:	mov	r1, #1
   1d42c:	movt	r2, #3
   1d430:	b	1d39c <crc32@@Base+0x3040>
   1d434:	movw	r3, #7868	; 0x1ebc
   1d438:	movt	r3, #5
   1d43c:	ldr	r4, [r3]
   1d440:	bl	12748 <__errno_location@plt>
   1d444:	ldr	r0, [r0]
   1d448:	bl	122a4 <strerror@plt>
   1d44c:	movw	r2, #43424	; 0xa9a0
   1d450:	mov	r1, #1
   1d454:	movt	r2, #3
   1d458:	mov	r3, r0
   1d45c:	mov	r0, r4
   1d460:	bl	12358 <__fprintf_chk@plt>
   1d464:	mov	r0, #1
   1d468:	bl	12298 <exit@plt>
   1d46c:	andeq	sl, r3, r4, lsr #16
   1d470:	push	{r4, r5, r6, r7, lr}
   1d474:	movw	r4, #3824	; 0xef0
   1d478:	movt	r4, #5
   1d47c:	sub	sp, sp, #108	; 0x6c
   1d480:	mov	r1, #0
   1d484:	mov	r7, r0
   1d488:	ldr	r3, [r4]
   1d48c:	str	r3, [sp, #100]	; 0x64
   1d490:	bl	124d8 <open@plt>
   1d494:	subs	r5, r0, #0
   1d498:	blt	1d50c <crc32@@Base+0x31b0>
   1d49c:	add	r2, sp, #8
   1d4a0:	mov	r1, r5
   1d4a4:	mov	r0, #3
   1d4a8:	bl	12610 <__fxstat@plt>
   1d4ac:	cmp	r0, #0
   1d4b0:	blt	1d578 <crc32@@Base+0x321c>
   1d4b4:	mov	r6, #0
   1d4b8:	mov	r3, #1
   1d4bc:	ldr	r1, [sp, #52]	; 0x34
   1d4c0:	mov	r0, r6
   1d4c4:	stm	sp, {r5, r6}
   1d4c8:	mov	r2, r3
   1d4cc:	bl	12490 <mmap@plt>
   1d4d0:	cmn	r0, #1
   1d4d4:	beq	1d54c <crc32@@Base+0x31f0>
   1d4d8:	ldr	r1, [sp, #52]	; 0x34
   1d4dc:	ldr	r7, [r0, #576]	; 0x240
   1d4e0:	bl	126a0 <munmap@plt>
   1d4e4:	mov	r0, r5
   1d4e8:	bl	123b8 <close@plt>
   1d4ec:	ldr	r2, [sp, #100]	; 0x64
   1d4f0:	ldr	r3, [r4]
   1d4f4:	mov	r0, r7
   1d4f8:	mov	r1, r6
   1d4fc:	cmp	r2, r3
   1d500:	bne	1d548 <crc32@@Base+0x31ec>
   1d504:	add	sp, sp, #108	; 0x6c
   1d508:	pop	{r4, r5, r6, r7, pc}
   1d50c:	movw	r3, #7868	; 0x1ebc
   1d510:	movt	r3, #5
   1d514:	ldr	r4, [r3]
   1d518:	bl	12748 <__errno_location@plt>
   1d51c:	ldr	r0, [r0]
   1d520:	bl	122a4 <strerror@plt>
   1d524:	movw	r2, #29884	; 0x74bc
   1d528:	movt	r2, #3
   1d52c:	mov	r3, r7
   1d530:	mov	r1, #1
   1d534:	str	r0, [sp]
   1d538:	mov	r0, r4
   1d53c:	bl	12358 <__fprintf_chk@plt>
   1d540:	mov	r0, #1
   1d544:	bl	12298 <exit@plt>
   1d548:	bl	12538 <__stack_chk_fail@plt>
   1d54c:	movw	r3, #7868	; 0x1ebc
   1d550:	movt	r3, #5
   1d554:	ldr	r4, [r3]
   1d558:	bl	12748 <__errno_location@plt>
   1d55c:	ldr	r0, [r0]
   1d560:	bl	122a4 <strerror@plt>
   1d564:	movw	r2, #31488	; 0x7b00
   1d568:	mov	r3, r7
   1d56c:	mov	r1, #1
   1d570:	movt	r2, #3
   1d574:	b	1d534 <crc32@@Base+0x31d8>
   1d578:	movw	r3, #7868	; 0x1ebc
   1d57c:	movt	r3, #5
   1d580:	ldr	r4, [r3]
   1d584:	bl	12748 <__errno_location@plt>
   1d588:	ldr	r0, [r0]
   1d58c:	bl	122a4 <strerror@plt>
   1d590:	movw	r2, #29908	; 0x74d4
   1d594:	mov	r3, r7
   1d598:	mov	r1, #1
   1d59c:	movt	r2, #3
   1d5a0:	b	1d534 <crc32@@Base+0x31d8>
   1d5a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d5a8:	mov	r4, r0
   1d5ac:	ldrb	r0, [r0, #11]
   1d5b0:	sub	sp, sp, #20
   1d5b4:	ldr	sl, [r2]
   1d5b8:	mov	r5, r3
   1d5bc:	ldrd	r8, [r2, #24]
   1d5c0:	lsl	fp, r0, #7
   1d5c4:	add	r0, r4, r0, lsl #7
   1d5c8:	ldrd	r6, [r2, #32]
   1d5cc:	mov	ip, r0
   1d5d0:	str	r1, [sp, #12]
   1d5d4:	str	r3, [ip, #16]
   1d5d8:	add	r0, r0, #16
   1d5dc:	ldr	r3, [sp, #56]	; 0x38
   1d5e0:	ldr	r1, [sp, #60]	; 0x3c
   1d5e4:	str	r3, [ip, #20]
   1d5e8:	bl	1cfb4 <crc32@@Base+0x2c58>
   1d5ec:	sub	r2, sl, #2
   1d5f0:	cmp	r2, #15
   1d5f4:	ldrls	pc, [pc, r2, lsl #2]
   1d5f8:	b	1d98c <crc32@@Base+0x3630>
   1d5fc:	andeq	sp, r1, r0, lsr #13
   1d600:	andeq	sp, r1, ip, ror r7
   1d604:	andeq	sp, r1, r4, ror #15
   1d608:	andeq	sp, r1, r4, ror #15
   1d60c:	andeq	sp, r1, r4, asr r8
   1d610:	andeq	sp, r1, ip, lsl #19
   1d614:	andeq	sp, r1, ip, lsl #19
   1d618:	andeq	sp, r1, ip, lsl #19
   1d61c:	andeq	sp, r1, ip, lsl #19
   1d620:	andeq	sp, r1, ip, lsl #19
   1d624:	andeq	sp, r1, ip, lsl #19
   1d628:	andeq	sp, r1, ip, lsl #19
   1d62c:	ldrdeq	sp, [r1], -r4
   1d630:	andeq	sp, r1, ip, lsl #19
   1d634:	andeq	sp, r1, ip, lsl #19
   1d638:	andeq	sp, r1, ip, lsr r6
   1d63c:	add	r2, r4, fp
   1d640:	movw	r3, #43460	; 0xa9c4
   1d644:	movt	r3, #3
   1d648:	lsl	r6, r6, #10
   1d64c:	ldr	r1, [r2, #40]	; 0x28
   1d650:	str	r8, [r2, #24]
   1d654:	orr	r1, r1, #68	; 0x44
   1d658:	str	r9, [r2, #28]
   1d65c:	str	r6, [r2, #44]	; 0x2c
   1d660:	str	r1, [r2, #40]	; 0x28
   1d664:	ldr	r1, [sp, #56]	; 0x38
   1d668:	movw	r2, #7872	; 0x1ec0
   1d66c:	movt	r2, #5
   1d670:	str	r1, [sp, #4]
   1d674:	mov	r1, #1
   1d678:	ldr	r0, [r2]
   1d67c:	movw	r2, #43656	; 0xaa88
   1d680:	str	r5, [sp]
   1d684:	movt	r2, #3
   1d688:	bl	12358 <__fprintf_chk@plt>
   1d68c:	ldrb	r3, [r4, #11]
   1d690:	add	r3, r3, #1
   1d694:	strb	r3, [r4, #11]
   1d698:	add	sp, sp, #20
   1d69c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d6a0:	movw	r1, #8376	; 0x20b8
   1d6a4:	movt	r1, #6
   1d6a8:	add	r3, r4, fp
   1d6ac:	mov	r2, #0
   1d6b0:	ldr	r1, [r1, #4]
   1d6b4:	mvn	r6, #1
   1d6b8:	ldr	lr, [r3, #40]	; 0x28
   1d6bc:	strb	r2, [r3, #24]
   1d6c0:	lsr	r1, r1, #16
   1d6c4:	strb	r2, [r3, #25]
   1d6c8:	strb	r2, [r3, #28]
   1d6cc:	lsl	r1, r1, #16
   1d6d0:	strb	r2, [r3, #29]
   1d6d4:	orr	r1, r1, #19
   1d6d8:	strb	r2, [r3, #30]
   1d6dc:	strb	r2, [r3, #31]
   1d6e0:	orr	r1, r1, lr
   1d6e4:	strb	r6, [r3, #26]
   1d6e8:	mov	lr, #31
   1d6ec:	str	r1, [r3, #40]	; 0x28
   1d6f0:	movw	r1, #43612	; 0xaa5c
   1d6f4:	strb	lr, [r3, #27]
   1d6f8:	movt	r1, #3
   1d6fc:	strb	r2, [r3, #32]
   1d700:	strb	r2, [r3, #33]	; 0x21
   1d704:	strb	r6, [r3, #34]	; 0x22
   1d708:	strb	lr, [r3, #35]	; 0x23
   1d70c:	strb	r2, [r3, #36]	; 0x24
   1d710:	strb	r2, [r3, #37]	; 0x25
   1d714:	strb	r2, [r3, #38]	; 0x26
   1d718:	strb	r2, [r3, #39]	; 0x27
   1d71c:	ldrb	r0, [r4, #11]
   1d720:	add	r0, r0, #1
   1d724:	uxtb	r0, r0
   1d728:	strb	r0, [r4, #11]
   1d72c:	add	r6, r4, r0, lsl #7
   1d730:	add	r0, r6, #16
   1d734:	ldr	r3, [r6, #40]	; 0x28
   1d738:	orr	r3, r3, #21
   1d73c:	str	r3, [r6, #40]	; 0x28
   1d740:	bl	1cfb4 <crc32@@Base+0x2c58>
   1d744:	ldr	r3, [r6, #20]
   1d748:	ldr	r0, [sp, #60]	; 0x3c
   1d74c:	add	r3, r3, r5
   1d750:	str	r3, [r6, #16]
   1d754:	bl	1d470 <crc32@@Base+0x3114>
   1d758:	movw	r3, #43472	; 0xa9d0
   1d75c:	movt	r3, #3
   1d760:	subs	r8, r0, #1
   1d764:	str	r0, [r6, #32]
   1d768:	sbc	r9, r1, #0
   1d76c:	str	r1, [r6, #36]	; 0x24
   1d770:	str	r8, [r6, #24]
   1d774:	str	r9, [r6, #28]
   1d778:	b	1d664 <crc32@@Base+0x3308>
   1d77c:	add	ip, r4, fp
   1d780:	mov	r2, #0
   1d784:	mov	lr, #32
   1d788:	ldr	r3, [ip, #40]	; 0x28
   1d78c:	strb	r2, [ip, #24]
   1d790:	orr	r3, r3, #102	; 0x66
   1d794:	strb	r2, [ip, #25]
   1d798:	str	r3, [ip, #40]	; 0x28
   1d79c:	mvn	r3, #63	; 0x3f
   1d7a0:	strb	r2, [ip, #28]
   1d7a4:	strb	r3, [ip, #26]
   1d7a8:	movw	r3, #43444	; 0xa9b4
   1d7ac:	strb	r2, [ip, #29]
   1d7b0:	movt	r3, #3
   1d7b4:	strb	r2, [ip, #30]
   1d7b8:	strb	r2, [ip, #31]
   1d7bc:	strb	lr, [ip, #27]
   1d7c0:	strb	r2, [ip, #32]
   1d7c4:	strb	r2, [ip, #33]	; 0x21
   1d7c8:	strb	r2, [ip, #34]	; 0x22
   1d7cc:	strb	lr, [ip, #35]	; 0x23
   1d7d0:	strb	r2, [ip, #36]	; 0x24
   1d7d4:	strb	r2, [ip, #37]	; 0x25
   1d7d8:	strb	r2, [ip, #38]	; 0x26
   1d7dc:	strb	r2, [ip, #39]	; 0x27
   1d7e0:	b	1d664 <crc32@@Base+0x3308>
   1d7e4:	orrs	r3, r6, r7
   1d7e8:	bne	1d944 <crc32@@Base+0x35e8>
   1d7ec:	movw	r2, #8376	; 0x20b8
   1d7f0:	movt	r2, #6
   1d7f4:	movw	lr, #42262	; 0xa516
   1d7f8:	movt	lr, #4
   1d7fc:	ldr	r1, [r2]
   1d800:	mov	r6, #32
   1d804:	orr	lr, lr, r1, lsl #20
   1d808:	add	ip, r4, fp
   1d80c:	and	r0, r8, #7
   1d810:	mov	r1, #0
   1d814:	orrs	r3, r0, r1
   1d818:	ldr	r3, [ip, #40]	; 0x28
   1d81c:	orr	r3, r3, #3
   1d820:	orr	r3, r3, r6
   1d824:	str	r3, [ip, #40]	; 0x28
   1d828:	bne	1d9b4 <crc32@@Base+0x3658>
   1d82c:	mov	r1, #0
   1d830:	movw	r3, #43456	; 0xa9c0
   1d834:	str	r8, [ip, #24]
   1d838:	movt	r3, #3
   1d83c:	str	r9, [ip, #28]
   1d840:	str	r8, [ip, #32]
   1d844:	str	r9, [ip, #36]	; 0x24
   1d848:	str	lr, [ip, #44]	; 0x2c
   1d84c:	str	r1, [r2]
   1d850:	b	1d664 <crc32@@Base+0x3308>
   1d854:	cmp	r7, #0
   1d858:	ldr	r3, [sp, #12]
   1d85c:	cmpeq	r6, #4
   1d860:	moveq	r2, #1
   1d864:	movne	r2, #0
   1d868:	cmp	r3, #1
   1d86c:	movne	r1, #0
   1d870:	andeq	r1, r2, #1
   1d874:	cmp	r1, #0
   1d878:	beq	1d8f8 <crc32@@Base+0x359c>
   1d87c:	movw	r2, #8376	; 0x20b8
   1d880:	movt	r2, #6
   1d884:	movw	r0, #22012	; 0x55fc
   1d888:	ldr	r1, [r2]
   1d88c:	cmp	r1, #0
   1d890:	beq	1d93c <crc32@@Base+0x35e0>
   1d894:	movt	r0, #3
   1d898:	orr	r0, r0, r1, lsl #20
   1d89c:	add	r1, r4, fp
   1d8a0:	mov	lr, #0
   1d8a4:	movw	r3, #43452	; 0xa9bc
   1d8a8:	movt	r3, #3
   1d8ac:	ldr	ip, [r1, #40]	; 0x28
   1d8b0:	str	r0, [r1, #44]	; 0x2c
   1d8b4:	str	r8, [r1, #24]
   1d8b8:	orr	r0, ip, #67	; 0x43
   1d8bc:	str	r9, [r1, #28]
   1d8c0:	str	r8, [r1, #32]
   1d8c4:	str	r9, [r1, #36]	; 0x24
   1d8c8:	str	lr, [r2]
   1d8cc:	str	r0, [r1, #40]	; 0x28
   1d8d0:	b	1d664 <crc32@@Base+0x3308>
   1d8d4:	add	r2, r4, fp
   1d8d8:	movw	r3, #30392	; 0x76b8
   1d8dc:	movt	r3, #3
   1d8e0:	ldr	r1, [r2, #40]	; 0x28
   1d8e4:	str	r8, [r2, #24]
   1d8e8:	orr	r1, r1, #68	; 0x44
   1d8ec:	str	r9, [r2, #28]
   1d8f0:	str	r1, [r2, #40]	; 0x28
   1d8f4:	b	1d664 <crc32@@Base+0x3308>
   1d8f8:	ldr	r3, [sp, #12]
   1d8fc:	sub	r3, r3, #2
   1d900:	clz	r3, r3
   1d904:	lsr	r3, r3, #5
   1d908:	tst	r2, r3
   1d90c:	bne	1d970 <crc32@@Base+0x3614>
   1d910:	cmp	r7, #0
   1d914:	cmpeq	r6, #5
   1d918:	movne	r3, #0
   1d91c:	cmp	r3, #0
   1d920:	beq	1da04 <crc32@@Base+0x36a8>
   1d924:	movw	r2, #8376	; 0x20b8
   1d928:	movt	r2, #6
   1d92c:	movw	r0, #21510	; 0x5406
   1d930:	ldr	r1, [r2]
   1d934:	cmp	r1, #0
   1d938:	bne	1d894 <crc32@@Base+0x3538>
   1d93c:	movt	r0, #19
   1d940:	b	1d89c <crc32@@Base+0x3540>
   1d944:	cmp	r7, #0
   1d948:	cmpeq	r6, #1
   1d94c:	bne	1d9dc <crc32@@Base+0x3680>
   1d950:	movw	r2, #8376	; 0x20b8
   1d954:	movt	r2, #6
   1d958:	movw	lr, #62762	; 0xf52a
   1d95c:	movt	lr, #4
   1d960:	ldr	r1, [r2]
   1d964:	mov	r6, #48	; 0x30
   1d968:	orr	lr, lr, r1, lsl #20
   1d96c:	b	1d808 <crc32@@Base+0x34ac>
   1d970:	movw	r2, #8376	; 0x20b8
   1d974:	movt	r2, #6
   1d978:	movw	r0, #21505	; 0x5401
   1d97c:	ldr	r1, [r2]
   1d980:	cmp	r1, #0
   1d984:	bne	1d894 <crc32@@Base+0x3538>
   1d988:	b	1d93c <crc32@@Base+0x35e0>
   1d98c:	movw	r1, #7868	; 0x1ebc
   1d990:	movt	r1, #5
   1d994:	mov	r3, sl
   1d998:	movw	r2, #43624	; 0xaa68
   1d99c:	ldr	r0, [r1]
   1d9a0:	movt	r2, #3
   1d9a4:	mov	r1, #1
   1d9a8:	bl	12358 <__fprintf_chk@plt>
   1d9ac:	mov	r0, #1
   1d9b0:	bl	12298 <exit@plt>
   1d9b4:	movw	r3, #7868	; 0x1ebc
   1d9b8:	movt	r3, #5
   1d9bc:	movw	r0, #43552	; 0xaa20
   1d9c0:	mov	r2, #57	; 0x39
   1d9c4:	ldr	r3, [r3]
   1d9c8:	movt	r0, #3
   1d9cc:	mov	r1, #1
   1d9d0:	bl	12634 <fwrite@plt>
   1d9d4:	mov	r0, #1
   1d9d8:	bl	12298 <exit@plt>
   1d9dc:	movw	r3, #7868	; 0x1ebc
   1d9e0:	movt	r3, #5
   1d9e4:	strd	r6, [sp]
   1d9e8:	movw	r2, #43516	; 0xa9fc
   1d9ec:	ldr	r0, [r3]
   1d9f0:	movt	r2, #3
   1d9f4:	mov	r1, #1
   1d9f8:	bl	12358 <__fprintf_chk@plt>
   1d9fc:	mov	r0, #1
   1da00:	bl	12298 <exit@plt>
   1da04:	movw	r3, #7868	; 0x1ebc
   1da08:	movt	r3, #5
   1da0c:	strd	r6, [sp]
   1da10:	movw	r2, #43480	; 0xa9d8
   1da14:	ldr	r0, [r3]
   1da18:	movt	r2, #3
   1da1c:	mov	r1, #1
   1da20:	bl	12358 <__fprintf_chk@plt>
   1da24:	mov	r0, #1
   1da28:	bl	12298 <exit@plt>
   1da2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da30:	movw	ip, #3824	; 0xef0
   1da34:	sub	sp, sp, #956	; 0x3bc
   1da38:	movt	ip, #5
   1da3c:	mov	fp, r0
   1da40:	mov	sl, r1
   1da44:	str	ip, [sp, #36]	; 0x24
   1da48:	mov	r1, #0
   1da4c:	ldr	ip, [ip]
   1da50:	str	r2, [sp, #12]
   1da54:	mov	r2, #1616	; 0x650
   1da58:	ldr	r0, [pc, #2200]	; 1e2f8 <crc32@@Base+0x3f9c>
   1da5c:	str	r3, [sp, #32]
   1da60:	str	ip, [sp, #948]	; 0x3b4
   1da64:	bl	12388 <memset@plt>
   1da68:	cmp	fp, #1
   1da6c:	beq	1e0dc <crc32@@Base+0x3d80>
   1da70:	cmp	fp, #2
   1da74:	beq	1e100 <crc32@@Base+0x3da4>
   1da78:	movw	r9, #8376	; 0x20b8
   1da7c:	movt	r9, #6
   1da80:	mov	r2, #0
   1da84:	mvn	r1, #120	; 0x78
   1da88:	ldr	r3, [r9, #1624]	; 0x658
   1da8c:	strb	r1, [r9, #11]
   1da90:	cmp	r3, r2
   1da94:	strb	r1, [r9, #819]	; 0x333
   1da98:	strb	r2, [r9, #8]
   1da9c:	strb	r2, [r9, #816]	; 0x330
   1daa0:	beq	1e170 <crc32@@Base+0x3e14>
   1daa4:	mov	r4, #8192	; 0x2000
   1daa8:	movw	r8, #53956	; 0xd2c4
   1daac:	ldr	r5, [pc, #2120]	; 1e2fc <crc32@@Base+0x3fa0>
   1dab0:	movt	r8, #3
   1dab4:	mov	r6, r4
   1dab8:	b	1dac8 <crc32@@Base+0x376c>
   1dabc:	ldr	r3, [r5, #40]!	; 0x28
   1dac0:	cmp	r3, #0
   1dac4:	beq	1db48 <crc32@@Base+0x37ec>
   1dac8:	cmp	r3, #13
   1dacc:	bne	1dabc <crc32@@Base+0x3760>
   1dad0:	mov	r1, r8
   1dad4:	ldr	r0, [r5, #4]
   1dad8:	bl	123d0 <fopen@plt>
   1dadc:	subs	r4, r0, #0
   1dae0:	beq	1e1d0 <crc32@@Base+0x3e74>
   1dae4:	mov	r3, r4
   1dae8:	mov	r2, #1
   1daec:	mov	r1, #808	; 0x328
   1daf0:	add	r0, sp, #140	; 0x8c
   1daf4:	bl	12508 <fread@plt>
   1daf8:	cmp	r0, #1
   1dafc:	mov	r7, r0
   1db00:	bne	1e220 <crc32@@Base+0x3ec4>
   1db04:	mov	r0, r4
   1db08:	bl	126b8 <fclose@plt>
   1db0c:	ldrb	r3, [sp, #143]	; 0x8f
   1db10:	cmp	r3, #135	; 0x87
   1db14:	bne	1e1f8 <crc32@@Base+0x3e9c>
   1db18:	ldrb	r2, [sp, #151]	; 0x97
   1db1c:	add	r1, sp, #952	; 0x3b8
   1db20:	sub	r3, sl, #1
   1db24:	rsb	r4, sl, #0
   1db28:	add	r2, r1, r2, lsl #7
   1db2c:	ldr	r2, [r2, #-920]	; 0xfffffc68
   1db30:	add	r6, r6, r2
   1db34:	add	r3, r3, r6
   1db38:	and	r6, r4, r3
   1db3c:	ldr	r3, [r5, #40]!	; 0x28
   1db40:	cmp	r3, #0
   1db44:	bne	1dac8 <crc32@@Base+0x376c>
   1db48:	mov	r4, r6
   1db4c:	movw	r1, #7872	; 0x1ec0
   1db50:	movt	r1, #5
   1db54:	movw	r2, #43824	; 0xab30
   1db58:	str	r1, [sp, #8]
   1db5c:	ldr	r0, [r1]
   1db60:	mov	r3, r4
   1db64:	movt	r2, #3
   1db68:	mov	r1, #1
   1db6c:	bl	12358 <__fprintf_chk@plt>
   1db70:	ldr	r6, [r9, #1624]	; 0x658
   1db74:	cmp	r6, #0
   1db78:	beq	1e178 <crc32@@Base+0x3e1c>
   1db7c:	ldr	r5, [pc, #1912]	; 1e2fc <crc32@@Base+0x3fa0>
   1db80:	subs	r0, sl, #1
   1db84:	mov	r3, #0
   1db88:	mvn	r8, #0
   1db8c:	sbc	r1, r3, #0
   1db90:	rsbs	r2, sl, #0
   1db94:	rsc	r3, r3, #0
   1db98:	strd	r0, [sp, #16]
   1db9c:	strd	r2, [sp, #24]
   1dba0:	sub	r3, r6, #2
   1dba4:	cmp	r3, #15
   1dba8:	ldrls	pc, [pc, r3, lsl #2]
   1dbac:	b	1e148 <crc32@@Base+0x3dec>
   1dbb0:	strdeq	sp, [r1], -r8
   1dbb4:	muleq	r1, r4, sp
   1dbb8:	strdeq	sp, [r1], -r8
   1dbbc:	strdeq	sp, [r1], -r8
   1dbc0:	strdeq	sp, [r1], -r8
   1dbc4:	andeq	lr, r1, r8, asr #2
   1dbc8:	andeq	lr, r1, r8, asr #2
   1dbcc:	andeq	lr, r1, r8, asr #2
   1dbd0:	andeq	sp, r1, r4, ror sp
   1dbd4:	andeq	lr, r1, r8, asr #2
   1dbd8:	andeq	sp, r1, r4, lsl #26
   1dbdc:	andeq	sp, r1, ip, lsr #24
   1dbe0:	strdeq	sp, [r1], -r8
   1dbe4:	andeq	sp, r1, r4, ror lr
   1dbe8:	strdeq	sp, [r1], -r0
   1dbec:	strdeq	sp, [r1], -r8
   1dbf0:	ldrd	r2, [r5, #16]
   1dbf4:	asr	r1, r4, #31
   1dbf8:	cmp	r1, r3
   1dbfc:	cmpeq	r4, r2
   1dc00:	bhi	1e23c <crc32@@Base+0x3ee0>
   1dc04:	ldrd	r0, [sp, #16]
   1dc08:	ldrd	r6, [sp, #24]
   1dc0c:	adds	r0, r0, r2
   1dc10:	adc	r1, r1, r3
   1dc14:	and	r6, r6, r0
   1dc18:	and	r7, r7, r1
   1dc1c:	cmp	r3, r7
   1dc20:	cmpeq	r2, r6
   1dc24:	bne	1e1a8 <crc32@@Base+0x3e4c>
   1dc28:	mov	r4, r2
   1dc2c:	ldr	r6, [r5, #40]!	; 0x28
   1dc30:	cmp	r6, #0
   1dc34:	bne	1dba0 <crc32@@Base+0x3844>
   1dc38:	ldr	r6, [r9, #1624]	; 0x658
   1dc3c:	ldr	r4, [pc, #1720]	; 1e2fc <crc32@@Base+0x3fa0>
   1dc40:	mov	r7, #0
   1dc44:	mov	r5, r4
   1dc48:	b	1dc58 <crc32@@Base+0x38fc>
   1dc4c:	ldr	r6, [r5, #40]!	; 0x28
   1dc50:	cmp	r6, #0
   1dc54:	beq	1dc7c <crc32@@Base+0x3920>
   1dc58:	cmp	r6, #13
   1dc5c:	bne	1dc4c <crc32@@Base+0x38f0>
   1dc60:	ldr	r1, [r5, #4]
   1dc64:	add	r7, r7, #1024	; 0x400
   1dc68:	ldr	r0, [sp, #992]	; 0x3e0
   1dc6c:	bl	1d15c <crc32@@Base+0x2e00>
   1dc70:	ldr	r6, [r5, #40]!	; 0x28
   1dc74:	cmp	r6, #0
   1dc78:	bne	1dc58 <crc32@@Base+0x38fc>
   1dc7c:	mov	r1, r7
   1dc80:	mov	r2, r6
   1dc84:	ldr	r0, [sp, #992]	; 0x3e0
   1dc88:	str	r7, [sp, #12]
   1dc8c:	bl	12598 <lseek@plt>
   1dc90:	cmp	r0, #0
   1dc94:	blt	1e28c <crc32@@Base+0x3f30>
   1dc98:	cmn	r8, #1
   1dc9c:	bne	1de8c <crc32@@Base+0x3b30>
   1dca0:	ldr	r3, [r9, #1624]	; 0x658
   1dca4:	cmp	r3, #0
   1dca8:	beq	1dce4 <crc32@@Base+0x3988>
   1dcac:	movw	r5, #16764	; 0x417c
   1dcb0:	movt	r5, #2
   1dcb4:	cmp	r3, #17
   1dcb8:	bhi	1dcd8 <crc32@@Base+0x397c>
   1dcbc:	mvn	r3, r5, lsr r3
   1dcc0:	tst	r3, #1
   1dcc4:	bne	1dcd8 <crc32@@Base+0x397c>
   1dcc8:	mov	r3, sl
   1dccc:	ldmib	r4, {r1, r2}
   1dcd0:	ldr	r0, [sp, #992]	; 0x3e0
   1dcd4:	bl	1cd14 <crc32@@Base+0x29b8>
   1dcd8:	ldr	r3, [r4, #40]!	; 0x28
   1dcdc:	cmp	r3, #0
   1dce0:	bne	1dcb4 <crc32@@Base+0x3958>
   1dce4:	ldr	r3, [sp, #36]	; 0x24
   1dce8:	mov	r0, #0
   1dcec:	ldr	r2, [sp, #948]	; 0x3b4
   1dcf0:	ldr	r3, [r3]
   1dcf4:	cmp	r2, r3
   1dcf8:	bne	1e2f4 <crc32@@Base+0x3f98>
   1dcfc:	add	sp, sp, #956	; 0x3bc
   1dd00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dd04:	add	r8, r8, #1
   1dd08:	mov	ip, #808	; 0x328
   1dd0c:	ldr	r7, [sp, #32]
   1dd10:	mov	lr, #16
   1dd14:	mla	ip, ip, r8, r9
   1dd18:	ldr	r0, [sp, #8]
   1dd1c:	mvn	r6, #111	; 0x6f
   1dd20:	movw	r2, #43884	; 0xab6c
   1dd24:	mov	r3, lr
   1dd28:	movt	r2, #3
   1dd2c:	mov	r1, #1
   1dd30:	ldr	r0, [r0]
   1dd34:	strh	r7, [ip, #16]
   1dd38:	ldr	r7, [sp, #12]
   1dd3c:	strb	r6, [ip, #795]	; 0x31b
   1dd40:	mov	r6, #1024	; 0x400
   1dd44:	strb	lr, [ip, #793]	; 0x319
   1dd48:	str	r6, [ip, #812]	; 0x32c
   1dd4c:	mov	r6, #0
   1dd50:	strb	r7, [ip, #18]
   1dd54:	strb	r6, [ip, #794]	; 0x31a
   1dd58:	str	lr, [ip, #12]
   1dd5c:	bl	12358 <__fprintf_chk@plt>
   1dd60:	str	r6, [r9, #4]
   1dd64:	ldr	r6, [r5, #40]!	; 0x28
   1dd68:	cmp	r6, #0
   1dd6c:	bne	1dba0 <crc32@@Base+0x3844>
   1dd70:	b	1dc38 <crc32@@Base+0x38dc>
   1dd74:	ldr	r3, [r5, #24]
   1dd78:	ldr	r6, [r5, #40]!	; 0x28
   1dd7c:	lsr	r3, r3, #16
   1dd80:	cmp	r6, #0
   1dd84:	lsl	r3, r3, #16
   1dd88:	str	r3, [r9, #4]
   1dd8c:	bne	1dba0 <crc32@@Base+0x3844>
   1dd90:	b	1dc38 <crc32@@Base+0x38dc>
   1dd94:	cmn	r8, #1
   1dd98:	beq	1e180 <crc32@@Base+0x3e24>
   1dd9c:	ldr	r1, [r5, #4]
   1dda0:	add	r0, sp, #48	; 0x30
   1dda4:	bl	1cc60 <crc32@@Base+0x2904>
   1dda8:	ldr	r1, [r5, #4]
   1ddac:	ldr	r2, [sp, #92]	; 0x5c
   1ddb0:	mov	ip, #808	; 0x328
   1ddb4:	ldr	r0, [pc, #1340]	; 1e2f8 <crc32@@Base+0x3f9c>
   1ddb8:	mov	r3, r4
   1ddbc:	str	r1, [sp, #4]
   1ddc0:	mov	r1, fp
   1ddc4:	str	r2, [sp]
   1ddc8:	mov	r2, r5
   1ddcc:	mla	r0, ip, r8, r0
   1ddd0:	bl	1d5a4 <crc32@@Base+0x3248>
   1ddd4:	mov	r0, r4
   1ddd8:	asr	r1, r4, #31
   1dddc:	strd	r0, [r5, #8]
   1dde0:	ldr	r6, [r5, #40]!	; 0x28
   1dde4:	ldr	r3, [sp, #92]	; 0x5c
   1dde8:	cmp	r6, #0
   1ddec:	add	r4, r4, r3
   1ddf0:	bne	1dba0 <crc32@@Base+0x3844>
   1ddf4:	b	1dc38 <crc32@@Base+0x38dc>
   1ddf8:	cmn	r8, #1
   1ddfc:	beq	1e180 <crc32@@Base+0x3e24>
   1de00:	ldr	r1, [r5, #4]
   1de04:	add	r0, sp, #48	; 0x30
   1de08:	bl	1cc60 <crc32@@Base+0x2904>
   1de0c:	ldr	r2, [r5, #4]
   1de10:	ldr	r3, [sp, #92]	; 0x5c
   1de14:	sub	r6, sl, #1
   1de18:	ldr	r1, [pc, #1240]	; 1e2f8 <crc32@@Base+0x3f9c>
   1de1c:	rsb	r7, sl, #0
   1de20:	add	r3, r6, r3
   1de24:	mov	r0, #808	; 0x328
   1de28:	and	r3, r3, r7
   1de2c:	str	r2, [sp, #4]
   1de30:	mla	r0, r0, r8, r1
   1de34:	str	r3, [sp]
   1de38:	mov	r2, r5
   1de3c:	mov	r3, r4
   1de40:	mov	r1, fp
   1de44:	bl	1d5a4 <crc32@@Base+0x3248>
   1de48:	ldr	r3, [sp, #92]	; 0x5c
   1de4c:	mov	r0, r4
   1de50:	asr	r1, r4, #31
   1de54:	add	r6, r6, r3
   1de58:	strd	r0, [r5, #8]
   1de5c:	and	r7, r7, r6
   1de60:	ldr	r6, [r5, #40]!	; 0x28
   1de64:	add	r4, r4, r7
   1de68:	cmp	r6, #0
   1de6c:	bne	1dba0 <crc32@@Base+0x3844>
   1de70:	b	1dc38 <crc32@@Base+0x38dc>
   1de74:	ldr	r3, [r5, #24]
   1de78:	ldr	r6, [r5, #40]!	; 0x28
   1de7c:	cmp	r6, #0
   1de80:	str	r3, [r9]
   1de84:	bne	1dba0 <crc32@@Base+0x3844>
   1de88:	b	1dc38 <crc32@@Base+0x38dc>
   1de8c:	add	r8, r8, #1
   1de90:	ands	r3, r8, #255	; 0xff
   1de94:	str	r3, [sp, #32]
   1de98:	beq	1e124 <crc32@@Base+0x3dc8>
   1de9c:	movw	r3, #44056	; 0xac18
   1dea0:	ldr	r8, [pc, #1104]	; 1e2f8 <crc32@@Base+0x3f9c>
   1dea4:	movt	r3, #3
   1dea8:	ldr	r7, [sp, #8]
   1deac:	str	sl, [sp, #40]	; 0x28
   1deb0:	mov	fp, r6
   1deb4:	mov	sl, r3
   1deb8:	movw	r2, #44088	; 0xac38
   1debc:	str	r4, [sp, #24]
   1dec0:	movt	r2, #3
   1dec4:	str	r2, [sp, #16]
   1dec8:	mov	r3, #808	; 0x328
   1decc:	ldrb	r1, [r8, #11]
   1ded0:	mla	r4, r3, r6, r9
   1ded4:	ldr	r3, [sp, #12]
   1ded8:	lsl	r1, r1, #7
   1dedc:	ldr	r0, [r7]
   1dee0:	add	r5, fp, r3
   1dee4:	add	lr, r1, #16
   1dee8:	str	r5, [sp]
   1deec:	add	ip, r1, #32
   1def0:	strh	lr, [r8, #12]
   1def4:	mov	r3, r6
   1def8:	mov	r2, sl
   1defc:	mov	r1, #1
   1df00:	strh	ip, [r4, #9]
   1df04:	add	r8, r8, #808	; 0x328
   1df08:	bl	12358 <__fprintf_chk@plt>
   1df0c:	ldrh	r2, [r4, #9]
   1df10:	mov	r3, r6
   1df14:	ldr	r0, [r7]
   1df18:	add	r5, r2, r5
   1df1c:	mov	r1, #1
   1df20:	ldr	r2, [sp, #16]
   1df24:	sub	r5, r5, #16
   1df28:	str	r5, [sp]
   1df2c:	add	r6, r6, #1
   1df30:	bl	12358 <__fprintf_chk@plt>
   1df34:	ldr	r2, [r8, #-4]
   1df38:	ldrh	r3, [r4, #9]
   1df3c:	ldr	r1, [sp, #32]
   1df40:	uxth	r2, r2
   1df44:	sub	r3, r3, #1
   1df48:	add	r3, r2, r3
   1df4c:	rsb	r2, r2, #0
   1df50:	and	r3, r3, r2
   1df54:	cmp	r6, r1
   1df58:	add	fp, fp, r3
   1df5c:	uxth	fp, fp
   1df60:	blt	1dec8 <crc32@@Base+0x3b6c>
   1df64:	mov	r0, fp
   1df68:	mov	r1, #1
   1df6c:	ldr	r4, [sp, #24]
   1df70:	ldr	sl, [sp, #40]	; 0x28
   1df74:	str	fp, [sp, #24]
   1df78:	bl	125c8 <calloc@plt>
   1df7c:	subs	r3, r0, #0
   1df80:	str	r3, [sp, #8]
   1df84:	beq	1e2cc <crc32@@Base+0x3f70>
   1df88:	ldr	r8, [pc, #872]	; 1e2f8 <crc32@@Base+0x3f9c>
   1df8c:	mov	fp, #0
   1df90:	ldr	ip, [sp, #8]
   1df94:	mov	r3, #808	; 0x328
   1df98:	str	r4, [sp, #40]	; 0x28
   1df9c:	str	r3, [sp, #16]
   1dfa0:	str	sl, [sp, #44]	; 0x2c
   1dfa4:	mov	lr, r8
   1dfa8:	ldrb	r7, [r8, #11]
   1dfac:	ldm	lr!, {r0, r1, r2, r3}
   1dfb0:	cmp	r7, #0
   1dfb4:	ldr	lr, [sp, #8]
   1dfb8:	add	r6, ip, #16
   1dfbc:	sub	lr, ip, lr
   1dfc0:	str	r0, [ip]
   1dfc4:	str	r1, [ip, #4]
   1dfc8:	str	r2, [ip, #8]
   1dfcc:	str	r3, [ip, #12]
   1dfd0:	beq	1e040 <crc32@@Base+0x3ce4>
   1dfd4:	ldr	r3, [sp, #16]
   1dfd8:	lsl	r7, r7, #7
   1dfdc:	ldr	r2, [pc, #788]	; 1e2f8 <crc32@@Base+0x3f9c>
   1dfe0:	mla	r1, r3, fp, r2
   1dfe4:	ldr	r3, [sp, #12]
   1dfe8:	add	lr, r3, lr
   1dfec:	mov	r3, r8
   1dff0:	add	r1, r1, r7
   1dff4:	ldr	r2, [r3, #16]
   1dff8:	add	r3, r3, #128	; 0x80
   1dffc:	sub	r2, r2, lr
   1e000:	str	r2, [r3, #-112]	; 0xffffff90
   1e004:	cmp	r1, r3
   1e008:	bne	1dff4 <crc32@@Base+0x3c98>
   1e00c:	add	r4, r7, #16
   1e010:	add	sl, r8, #16
   1e014:	add	r4, ip, r4
   1e018:	mov	r5, r6
   1e01c:	mov	r2, #128	; 0x80
   1e020:	mov	r1, sl
   1e024:	mov	r0, r5
   1e028:	add	r5, r5, r2
   1e02c:	bl	12658 <memcpy@plt>
   1e030:	cmp	r4, r5
   1e034:	add	sl, sl, #128	; 0x80
   1e038:	bne	1e01c <crc32@@Base+0x3cc0>
   1e03c:	add	r6, r6, r7
   1e040:	mov	r2, r8
   1e044:	ldr	r1, [sp, #16]
   1e048:	ldr	r0, [r2, #784]!	; 0x310
   1e04c:	add	r8, r8, #808	; 0x328
   1e050:	ldr	r3, [r8, #-4]
   1e054:	mla	r1, r1, fp, r9
   1e058:	str	r0, [r6]
   1e05c:	ldr	r0, [sp, #32]
   1e060:	add	fp, fp, #1
   1e064:	ldr	ip, [r2, #4]
   1e068:	uxth	r3, r3
   1e06c:	cmp	fp, r0
   1e070:	ldr	r0, [r2, #8]
   1e074:	ldr	r2, [r2, #12]
   1e078:	sub	r4, r3, #1
   1e07c:	str	ip, [r6, #4]
   1e080:	rsb	r3, r3, #0
   1e084:	str	r0, [r6, #8]
   1e088:	mov	fp, #1
   1e08c:	str	r2, [r6, #12]
   1e090:	ldrh	ip, [r1, #9]
   1e094:	add	r4, r4, ip
   1e098:	and	r4, r4, r3
   1e09c:	sub	r4, r4, ip
   1e0a0:	add	r4, r4, #16
   1e0a4:	add	ip, r6, r4
   1e0a8:	blt	1dfa4 <crc32@@Base+0x3c48>
   1e0ac:	ldr	r4, [sp, #40]	; 0x28
   1e0b0:	ldr	sl, [sp, #44]	; 0x2c
   1e0b4:	ldr	r5, [sp, #24]
   1e0b8:	ldr	r1, [sp, #8]
   1e0bc:	ldr	r0, [sp, #992]	; 0x3e0
   1e0c0:	mov	r2, r5
   1e0c4:	bl	126c4 <write@plt>
   1e0c8:	cmp	r0, r5
   1e0cc:	bne	1e264 <crc32@@Base+0x3f08>
   1e0d0:	ldr	r0, [sp, #8]
   1e0d4:	bl	121c0 <free@plt>
   1e0d8:	b	1dca0 <crc32@@Base+0x3944>
   1e0dc:	movw	r3, #7872	; 0x1ec0
   1e0e0:	movt	r3, #5
   1e0e4:	movw	r0, #43692	; 0xaaac
   1e0e8:	mov	r2, #22
   1e0ec:	ldr	r3, [r3]
   1e0f0:	mov	r1, fp
   1e0f4:	movt	r0, #3
   1e0f8:	bl	12634 <fwrite@plt>
   1e0fc:	b	1da78 <crc32@@Base+0x371c>
   1e100:	movw	r3, #7872	; 0x1ec0
   1e104:	movt	r3, #5
   1e108:	movw	r0, #43716	; 0xaac4
   1e10c:	mov	r2, #21
   1e110:	ldr	r3, [r3]
   1e114:	mov	r1, #1
   1e118:	movt	r0, #3
   1e11c:	bl	12634 <fwrite@plt>
   1e120:	b	1da78 <crc32@@Base+0x371c>
   1e124:	ldr	r5, [sp, #32]
   1e128:	mov	r1, #1
   1e12c:	mov	r0, r5
   1e130:	bl	125c8 <calloc@plt>
   1e134:	subs	r3, r0, #0
   1e138:	str	r3, [sp, #8]
   1e13c:	beq	1e2c8 <crc32@@Base+0x3f6c>
   1e140:	str	r5, [sp, #24]
   1e144:	b	1e0b4 <crc32@@Base+0x3d58>
   1e148:	movw	r1, #7868	; 0x1ebc
   1e14c:	movt	r1, #5
   1e150:	mov	r3, r6
   1e154:	movw	r2, #44012	; 0xabec
   1e158:	ldr	r0, [r1]
   1e15c:	movt	r2, #3
   1e160:	mov	r1, #1
   1e164:	bl	12358 <__fprintf_chk@plt>
   1e168:	mov	r0, #1
   1e16c:	bl	12298 <exit@plt>
   1e170:	mov	r4, #8192	; 0x2000
   1e174:	b	1db4c <crc32@@Base+0x37f0>
   1e178:	mvn	r8, #0
   1e17c:	b	1dc3c <crc32@@Base+0x38e0>
   1e180:	movw	r3, #7868	; 0x1ebc
   1e184:	movt	r3, #5
   1e188:	movw	r0, #43864	; 0xab58
   1e18c:	mov	r2, #19
   1e190:	ldr	r3, [r3]
   1e194:	movt	r0, #3
   1e198:	mov	r1, #1
   1e19c:	bl	12634 <fwrite@plt>
   1e1a0:	mov	r0, #1
   1e1a4:	bl	12298 <exit@plt>
   1e1a8:	movw	r3, #7868	; 0x1ebc
   1e1ac:	movt	r3, #5
   1e1b0:	movw	r0, #43960	; 0xabb8
   1e1b4:	mov	r2, #49	; 0x31
   1e1b8:	ldr	r3, [r3]
   1e1bc:	movt	r0, #3
   1e1c0:	mov	r1, #1
   1e1c4:	bl	12634 <fwrite@plt>
   1e1c8:	mov	r0, #1
   1e1cc:	bl	12298 <exit@plt>
   1e1d0:	movw	r1, #7868	; 0x1ebc
   1e1d4:	movt	r1, #5
   1e1d8:	ldr	r3, [r5, #4]
   1e1dc:	movw	r2, #43740	; 0xaadc
   1e1e0:	ldr	r0, [r1]
   1e1e4:	movt	r2, #3
   1e1e8:	mov	r1, #1
   1e1ec:	bl	12358 <__fprintf_chk@plt>
   1e1f0:	mov	r0, #1
   1e1f4:	bl	12298 <exit@plt>
   1e1f8:	movw	r3, #7868	; 0x1ebc
   1e1fc:	movt	r3, #5
   1e200:	movw	r0, #43800	; 0xab18
   1e204:	mov	r2, #23
   1e208:	ldr	r3, [r3]
   1e20c:	movt	r0, #3
   1e210:	mov	r1, r7
   1e214:	bl	12634 <fwrite@plt>
   1e218:	mov	r0, r7
   1e21c:	bl	12298 <exit@plt>
   1e220:	mov	r2, r0
   1e224:	movw	r1, #43776	; 0xab00
   1e228:	mov	r0, #1
   1e22c:	movt	r1, #3
   1e230:	bl	1282c <__printf_chk@plt>
   1e234:	mov	r0, #1
   1e238:	bl	12298 <exit@plt>
   1e23c:	movw	r3, #7868	; 0x1ebc
   1e240:	movt	r3, #5
   1e244:	movw	r0, #43908	; 0xab84
   1e248:	mov	r2, #49	; 0x31
   1e24c:	ldr	r3, [r3]
   1e250:	movt	r0, #3
   1e254:	mov	r1, #1
   1e258:	bl	12634 <fwrite@plt>
   1e25c:	mov	r0, #1
   1e260:	bl	12298 <exit@plt>
   1e264:	movw	r3, #7868	; 0x1ebc
   1e268:	movt	r3, #5
   1e26c:	movw	r0, #44176	; 0xac90
   1e270:	mov	r2, #24
   1e274:	ldr	r3, [r3]
   1e278:	movt	r0, #3
   1e27c:	mov	r1, #1
   1e280:	bl	12634 <fwrite@plt>
   1e284:	mov	r0, #1
   1e288:	bl	12298 <exit@plt>
   1e28c:	movw	r3, #7868	; 0x1ebc
   1e290:	movt	r3, #5
   1e294:	ldr	r4, [r3]
   1e298:	bl	12748 <__errno_location@plt>
   1e29c:	ldr	r0, [r0]
   1e2a0:	bl	122a4 <strerror@plt>
   1e2a4:	movw	r2, #43144	; 0xa888
   1e2a8:	ldr	r3, [pc, #80]	; 1e300 <crc32@@Base+0x3fa4>
   1e2ac:	movt	r2, #3
   1e2b0:	mov	r1, #1
   1e2b4:	str	r0, [sp]
   1e2b8:	mov	r0, r4
   1e2bc:	bl	12358 <__fprintf_chk@plt>
   1e2c0:	mov	r0, #1
   1e2c4:	bl	12298 <exit@plt>
   1e2c8:	ldr	fp, [sp, #8]
   1e2cc:	movw	r1, #7868	; 0x1ebc
   1e2d0:	movt	r1, #5
   1e2d4:	mov	r3, fp
   1e2d8:	movw	r2, #44144	; 0xac70
   1e2dc:	ldr	r0, [r1]
   1e2e0:	movt	r2, #3
   1e2e4:	mov	r1, #1
   1e2e8:	bl	12358 <__fprintf_chk@plt>
   1e2ec:	mov	r0, #1
   1e2f0:	bl	12298 <exit@plt>
   1e2f4:	bl	12538 <__stack_chk_fail@plt>
   1e2f8:	andeq	r2, r6, r0, asr #1
   1e2fc:	andeq	r2, r6, r0, lsl r7
   1e300:	andeq	sl, r3, r0, lsr r8
   1e304:	push	{r4, r5, lr}
   1e308:	mov	ip, r0
   1e30c:	ldrh	r4, [sp, #12]
   1e310:	movw	r0, #7872	; 0x1ec0
   1e314:	movt	r0, #5
   1e318:	mvn	r5, #111	; 0x6f
   1e31c:	str	r2, [ip, #804]	; 0x324
   1e320:	movw	r2, #43884	; 0xab6c
   1e324:	strb	r5, [ip, #787]	; 0x313
   1e328:	movt	r2, #3
   1e32c:	mov	r5, #16
   1e330:	strh	r1, [ip, #8]
   1e334:	strb	r5, [ip, #785]	; 0x311
   1e338:	mov	r1, #1
   1e33c:	mov	r5, #0
   1e340:	strb	r4, [ip, #10]
   1e344:	strb	r5, [ip, #786]	; 0x312
   1e348:	ldr	r0, [r0]
   1e34c:	str	r3, [ip, #4]
   1e350:	pop	{r4, r5, lr}
   1e354:	b	12358 <__fprintf_chk@plt>
   1e358:	movw	r3, #3824	; 0xef0
   1e35c:	movt	r3, #5
   1e360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e364:	movw	r2, #7872	; 0x1ec0
   1e368:	sub	sp, sp, #60	; 0x3c
   1e36c:	ldr	ip, [r3]
   1e370:	movt	r2, #5
   1e374:	mov	r4, r1
   1e378:	str	r3, [sp, #24]
   1e37c:	mov	r7, #0
   1e380:	ldr	r3, [r1, #64]	; 0x40
   1e384:	mov	r1, #1
   1e388:	str	r2, [sp, #16]
   1e38c:	str	r0, [sp, #20]
   1e390:	ldr	r0, [r2]
   1e394:	movw	r2, #44204	; 0xacac
   1e398:	movt	r2, #3
   1e39c:	str	ip, [sp, #52]	; 0x34
   1e3a0:	bl	12358 <__fprintf_chk@plt>
   1e3a4:	ldr	r3, [r4, #64]	; 0x40
   1e3a8:	movw	r1, #53956	; 0xd2c4
   1e3ac:	movt	r1, #3
   1e3b0:	str	r7, [sp, #36]	; 0x24
   1e3b4:	mov	r0, r3
   1e3b8:	str	r3, [sp, #28]
   1e3bc:	bl	123d0 <fopen@plt>
   1e3c0:	subs	r3, r0, #0
   1e3c4:	str	r3, [sp, #8]
   1e3c8:	beq	1ee08 <crc32@@Base+0x4aac>
   1e3cc:	ldr	fp, [pc, #2776]	; 1eeac <crc32@@Base+0x4b50>
   1e3d0:	movw	r5, #29964	; 0x750c
   1e3d4:	movt	r5, #3
   1e3d8:	movw	r3, #29960	; 0x7508
   1e3dc:	movt	r3, #3
   1e3e0:	str	r3, [sp, #12]
   1e3e4:	ldr	r3, [sp, #8]
   1e3e8:	mov	r2, #10
   1e3ec:	add	r1, sp, #48	; 0x30
   1e3f0:	add	r0, sp, #36	; 0x24
   1e3f4:	bl	121cc <__getdelim@plt>
   1e3f8:	cmp	r0, #0
   1e3fc:	ble	1e734 <crc32@@Base+0x43d8>
   1e400:	add	r2, sp, #40	; 0x28
   1e404:	ldr	r1, [sp, #12]
   1e408:	ldr	r0, [sp, #36]	; 0x24
   1e40c:	add	r7, r7, #1
   1e410:	bl	122c8 <__strtok_r@plt>
   1e414:	cmp	r0, #0
   1e418:	beq	1e3e4 <crc32@@Base+0x4088>
   1e41c:	mvn	r6, #0
   1e420:	mov	r4, #0
   1e424:	str	r0, [sp, #36]	; 0x24
   1e428:	add	r2, sp, #44	; 0x2c
   1e42c:	mov	r1, r5
   1e430:	bl	122c8 <__strtok_r@plt>
   1e434:	subs	sl, r0, #0
   1e438:	beq	1e3e4 <crc32@@Base+0x4088>
   1e43c:	ldrb	r3, [sl]
   1e440:	cmp	r3, #35	; 0x23
   1e444:	beq	1e3e4 <crc32@@Base+0x4088>
   1e448:	cmp	r4, #3
   1e44c:	ldrls	pc, [pc, r4, lsl #2]
   1e450:	b	1e66c <crc32@@Base+0x4310>
   1e454:	andeq	lr, r1, r4, ror #8
   1e458:			; <UNDEFINED> instruction: 0x0001e4bc
   1e45c:	muleq	r1, r8, r5
   1e460:	andeq	lr, r1, ip, lsl r6
   1e464:	movw	r8, #5656	; 0x1618
   1e468:	movt	r8, #5
   1e46c:	movw	r1, #44252	; 0xacdc
   1e470:	mov	r2, sl
   1e474:	mov	r0, r8
   1e478:	movt	r1, #3
   1e47c:	bl	1b1d8 <crc32@@Base+0xe7c>
   1e480:	subs	r6, r0, #0
   1e484:	blt	1edb0 <crc32@@Base+0x4a54>
   1e488:	cmp	r6, #10
   1e48c:	beq	1e4fc <crc32@@Base+0x41a0>
   1e490:	mov	r3, #0
   1e494:	add	r2, sp, #44	; 0x2c
   1e498:	mov	r0, r3
   1e49c:	mov	r1, r5
   1e4a0:	str	r3, [sp, #36]	; 0x24
   1e4a4:	bl	122c8 <__strtok_r@plt>
   1e4a8:	subs	sl, r0, #0
   1e4ac:	beq	1e3e4 <crc32@@Base+0x4088>
   1e4b0:	ldrb	r3, [sl]
   1e4b4:	cmp	r3, #35	; 0x23
   1e4b8:	beq	1e3e4 <crc32@@Base+0x4088>
   1e4bc:	sub	r3, r6, #1
   1e4c0:	cmp	r3, #11
   1e4c4:	ldrls	pc, [pc, r3, lsl #2]
   1e4c8:	b	1e56c <crc32@@Base+0x4210>
   1e4cc:	andeq	lr, r1, r8, asr #22
   1e4d0:	andeq	lr, r1, r0, ror #24
   1e4d4:	strdeq	lr, [r1], -r4
   1e4d8:	andeq	lr, r1, r4, lsr sp
   1e4dc:	ldrdeq	lr, [r1], -r8
   1e4e0:	andeq	lr, r1, ip, lsl #21
   1e4e4:	andeq	lr, r1, ip, lsl #23
   1e4e8:	andeq	lr, r1, r0, asr #24
   1e4ec:	andeq	lr, r1, r0, lsr #25
   1e4f0:	andeq	lr, r1, ip, ror #10
   1e4f4:	strdeq	lr, [r1], -ip
   1e4f8:	strdeq	lr, [r1], -ip
   1e4fc:	ldr	r1, [sp, #16]
   1e500:	movw	r4, #8376	; 0x20b8
   1e504:	ldr	r3, [r8, #156]	; 0x9c
   1e508:	movt	r4, #6
   1e50c:	movw	r2, #44308	; 0xad14
   1e510:	movt	r2, #3
   1e514:	add	r3, r3, #1
   1e518:	ldr	r0, [r1]
   1e51c:	mov	r1, #1
   1e520:	str	r3, [r8, #156]	; 0x9c
   1e524:	bl	12358 <__fprintf_chk@plt>
   1e528:	ldr	r3, [r4, #2904]	; 0xb58
   1e52c:	mov	r2, #40	; 0x28
   1e530:	mov	r0, #0
   1e534:	add	r1, r3, #1
   1e538:	mov	ip, #12
   1e53c:	mla	r3, r2, r3, r4
   1e540:	str	r1, [r4, #2904]	; 0xb58
   1e544:	add	r2, sp, #44	; 0x2c
   1e548:	mov	r1, r5
   1e54c:	str	r0, [sp, #36]	; 0x24
   1e550:	str	ip, [r3, #1624]	; 0x658
   1e554:	bl	122c8 <__strtok_r@plt>
   1e558:	cmp	r0, #0
   1e55c:	beq	1e3e4 <crc32@@Base+0x4088>
   1e560:	ldrb	r3, [r0]
   1e564:	cmp	r3, #35	; 0x23
   1e568:	beq	1e3e4 <crc32@@Base+0x4088>
   1e56c:	mov	r3, #0
   1e570:	add	r2, sp, #44	; 0x2c
   1e574:	mov	r0, r3
   1e578:	mov	r1, r5
   1e57c:	str	r3, [sp, #36]	; 0x24
   1e580:	bl	122c8 <__strtok_r@plt>
   1e584:	subs	sl, r0, #0
   1e588:	beq	1e3e4 <crc32@@Base+0x4088>
   1e58c:	ldrb	r3, [sl]
   1e590:	cmp	r3, #35	; 0x23
   1e594:	beq	1e3e4 <crc32@@Base+0x4088>
   1e598:	cmp	r6, #4
   1e59c:	bne	1eb3c <crc32@@Base+0x47e0>
   1e5a0:	mov	r2, #4
   1e5a4:	movw	r1, #44420	; 0xad84
   1e5a8:	mov	r0, sl
   1e5ac:	movt	r1, #3
   1e5b0:	bl	12220 <strncmp@plt>
   1e5b4:	subs	r2, r0, #0
   1e5b8:	beq	1e7d0 <crc32@@Base+0x4474>
   1e5bc:	movw	r1, #44428	; 0xad8c
   1e5c0:	mov	r2, #5
   1e5c4:	movt	r1, #3
   1e5c8:	mov	r0, sl
   1e5cc:	bl	12220 <strncmp@plt>
   1e5d0:	subs	r3, r0, #0
   1e5d4:	beq	1e8d4 <crc32@@Base+0x4578>
   1e5d8:	movw	r1, #44436	; 0xad94
   1e5dc:	mov	r2, #5
   1e5e0:	movt	r1, #3
   1e5e4:	mov	r0, sl
   1e5e8:	bl	12220 <strncmp@plt>
   1e5ec:	subs	r3, r0, #0
   1e5f0:	bne	1ee34 <crc32@@Base+0x4ad8>
   1e5f4:	movw	r4, #8376	; 0x20b8
   1e5f8:	movt	r4, #6
   1e5fc:	str	r3, [sp, #36]	; 0x24
   1e600:	mov	ip, #40	; 0x28
   1e604:	ldr	r3, [r4, #2904]	; 0xb58
   1e608:	add	r2, sp, #44	; 0x2c
   1e60c:	mov	r1, r5
   1e610:	mov	r8, #236	; 0xec
   1e614:	mla	r3, ip, r3, r4
   1e618:	b	1e7f4 <crc32@@Base+0x4498>
   1e61c:	movw	r4, #8376	; 0x20b8
   1e620:	movt	r4, #6
   1e624:	cmp	r6, #4
   1e628:	beq	1e818 <crc32@@Base+0x44bc>
   1e62c:	ldr	r3, [r4, #2920]	; 0xb68
   1e630:	sub	r3, r3, #2
   1e634:	cmp	r3, #4
   1e638:	bls	1e6dc <crc32@@Base+0x4380>
   1e63c:	mov	r3, #0
   1e640:	add	r2, sp, #44	; 0x2c
   1e644:	mov	r0, r3
   1e648:	mov	r1, r5
   1e64c:	str	r3, [sp, #36]	; 0x24
   1e650:	bl	122c8 <__strtok_r@plt>
   1e654:	cmp	r0, #0
   1e658:	beq	1e3e4 <crc32@@Base+0x4088>
   1e65c:	ldrb	r3, [r0]
   1e660:	cmp	r3, #35	; 0x23
   1e664:	beq	1e3e4 <crc32@@Base+0x4088>
   1e668:	mov	r4, #4
   1e66c:	mov	r0, #0
   1e670:	add	r4, r4, #1
   1e674:	str	r0, [sp, #36]	; 0x24
   1e678:	b	1e428 <crc32@@Base+0x40cc>
   1e67c:	ldr	r3, [r4, #2904]	; 0xb58
   1e680:	mov	r2, #40	; 0x28
   1e684:	cmp	r6, #12
   1e688:	mov	r1, r5
   1e68c:	mov	r8, #4
   1e690:	mov	r9, #0
   1e694:	mul	r3, r2, r3
   1e698:	add	r2, sp, #44	; 0x2c
   1e69c:	movne	lr, #6
   1e6a0:	moveq	lr, #14
   1e6a4:	mov	r0, #0
   1e6a8:	str	r0, [sp, #36]	; 0x24
   1e6ac:	add	ip, fp, r3
   1e6b0:	strd	r8, [ip, #32]
   1e6b4:	str	lr, [fp, r3]
   1e6b8:	str	sl, [ip, #4]
   1e6bc:	bl	122c8 <__strtok_r@plt>
   1e6c0:	subs	sl, r0, #0
   1e6c4:	beq	1e3e4 <crc32@@Base+0x4088>
   1e6c8:	ldrb	r3, [sl]
   1e6cc:	cmp	r3, #35	; 0x23
   1e6d0:	beq	1e3e4 <crc32@@Base+0x4088>
   1e6d4:	cmp	r6, #4
   1e6d8:	beq	1e818 <crc32@@Base+0x44bc>
   1e6dc:	mov	r2, #0
   1e6e0:	mov	r0, sl
   1e6e4:	mov	r1, r2
   1e6e8:	mov	r9, #0
   1e6ec:	bl	12334 <strtoll@plt>
   1e6f0:	ldr	r2, [r4, #2904]	; 0xb58
   1e6f4:	mov	r3, #40	; 0x28
   1e6f8:	mov	ip, #0
   1e6fc:	mov	r1, r5
   1e700:	str	ip, [sp, #36]	; 0x24
   1e704:	mla	r3, r3, r2, r4
   1e708:	add	r2, r2, #1
   1e70c:	str	r2, [r4, #2904]	; 0xb58
   1e710:	add	r2, sp, #44	; 0x2c
   1e714:	add	r3, r3, #1616	; 0x650
   1e718:	mov	r8, r0
   1e71c:	mov	r0, ip
   1e720:	strd	r8, [r3, #32]
   1e724:	bl	122c8 <__strtok_r@plt>
   1e728:	cmp	r0, #0
   1e72c:	bne	1e65c <crc32@@Base+0x4300>
   1e730:	b	1e3e4 <crc32@@Base+0x4088>
   1e734:	movw	r4, #8376	; 0x20b8
   1e738:	movt	r4, #6
   1e73c:	ldr	r3, [r4, #2908]	; 0xb5c
   1e740:	cmp	r3, #0
   1e744:	beq	1ede0 <crc32@@Base+0x4a84>
   1e748:	ldr	r6, [sp, #16]
   1e74c:	mov	r1, #1
   1e750:	movw	r2, #44488	; 0xadc8
   1e754:	movt	r2, #3
   1e758:	movw	r5, #2914	; 0xb62
   1e75c:	ldr	r0, [r6]
   1e760:	bl	12358 <__fprintf_chk@plt>
   1e764:	ldrb	r3, [r4, #2912]	; 0xb60
   1e768:	mov	r1, #1
   1e76c:	movw	r2, #44520	; 0xade8
   1e770:	ldr	r0, [r6]
   1e774:	movt	r2, #3
   1e778:	bl	12358 <__fprintf_chk@plt>
   1e77c:	ldrh	r3, [r4, r5]
   1e780:	mov	r1, #1
   1e784:	ldr	r0, [r6]
   1e788:	movw	r2, #44552	; 0xae08
   1e78c:	movt	r2, #3
   1e790:	bl	12358 <__fprintf_chk@plt>
   1e794:	ldr	ip, [sp, #20]
   1e798:	ldrh	r3, [r4, r5]
   1e79c:	ldrb	r2, [r4, #2912]	; 0xb60
   1e7a0:	ldr	r1, [r4, #2908]	; 0xb5c
   1e7a4:	ldr	r0, [r4, #2916]	; 0xb64
   1e7a8:	str	ip, [sp]
   1e7ac:	bl	1da2c <crc32@@Base+0x36d0>
   1e7b0:	ldr	r3, [sp, #24]
   1e7b4:	ldr	r2, [sp, #52]	; 0x34
   1e7b8:	mov	r0, #0
   1e7bc:	ldr	r3, [r3]
   1e7c0:	cmp	r2, r3
   1e7c4:	bne	1ee30 <crc32@@Base+0x4ad4>
   1e7c8:	add	sp, sp, #60	; 0x3c
   1e7cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e7d0:	movw	r4, #8376	; 0x20b8
   1e7d4:	movt	r4, #6
   1e7d8:	mov	ip, #40	; 0x28
   1e7dc:	str	r2, [sp, #36]	; 0x24
   1e7e0:	ldr	r3, [r4, #2904]	; 0xb58
   1e7e4:	add	r2, sp, #44	; 0x2c
   1e7e8:	mov	r1, r5
   1e7ec:	movw	r8, #357	; 0x165
   1e7f0:	mla	r3, ip, r3, r4
   1e7f4:	add	r3, r3, #1616	; 0x650
   1e7f8:	mov	r9, #0
   1e7fc:	strd	r8, [r3, #40]	; 0x28
   1e800:	bl	122c8 <__strtok_r@plt>
   1e804:	subs	sl, r0, #0
   1e808:	beq	1e3e4 <crc32@@Base+0x4088>
   1e80c:	ldrb	r3, [sl]
   1e810:	cmp	r3, #35	; 0x23
   1e814:	beq	1e3e4 <crc32@@Base+0x4088>
   1e818:	mov	r2, #0
   1e81c:	mov	r0, sl
   1e820:	mov	r1, r2
   1e824:	mov	r6, r2
   1e828:	bl	12334 <strtoll@plt>
   1e82c:	ldr	r2, [r4, #2904]	; 0xb58
   1e830:	mov	r3, #40	; 0x28
   1e834:	mov	r1, r5
   1e838:	mov	r9, #0
   1e83c:	str	r6, [sp, #36]	; 0x24
   1e840:	mla	r3, r3, r2, r4
   1e844:	add	r2, r2, #1
   1e848:	str	r2, [r4, #2904]	; 0xb58
   1e84c:	add	r2, sp, #44	; 0x2c
   1e850:	add	r3, r3, #1616	; 0x650
   1e854:	mov	r8, r0
   1e858:	mov	r0, r6
   1e85c:	strd	r8, [r3, #32]
   1e860:	bl	122c8 <__strtok_r@plt>
   1e864:	cmp	r0, #0
   1e868:	beq	1e3e4 <crc32@@Base+0x4088>
   1e86c:	ldrb	r3, [r0]
   1e870:	cmp	r3, #35	; 0x23
   1e874:	beq	1e3e4 <crc32@@Base+0x4088>
   1e878:	add	r2, sp, #44	; 0x2c
   1e87c:	mov	r1, r5
   1e880:	mov	r0, r6
   1e884:	str	r6, [sp, #36]	; 0x24
   1e888:	bl	122c8 <__strtok_r@plt>
   1e88c:	cmp	r0, #0
   1e890:	beq	1e3e4 <crc32@@Base+0x4088>
   1e894:	ldrb	r3, [r0]
   1e898:	cmp	r3, #35	; 0x23
   1e89c:	beq	1e3e4 <crc32@@Base+0x4088>
   1e8a0:	mov	r0, r6
   1e8a4:	add	r2, sp, #44	; 0x2c
   1e8a8:	mov	r1, r5
   1e8ac:	str	r6, [sp, #36]	; 0x24
   1e8b0:	bl	122c8 <__strtok_r@plt>
   1e8b4:	cmp	r0, #0
   1e8b8:	beq	1e3e4 <crc32@@Base+0x4088>
   1e8bc:	ldrb	r3, [r0]
   1e8c0:	cmp	r3, #35	; 0x23
   1e8c4:	beq	1e3e4 <crc32@@Base+0x4088>
   1e8c8:	mov	r6, #4
   1e8cc:	mov	r4, #6
   1e8d0:	b	1e66c <crc32@@Base+0x4310>
   1e8d4:	movw	r4, #8376	; 0x20b8
   1e8d8:	movt	r4, #6
   1e8dc:	str	r3, [sp, #36]	; 0x24
   1e8e0:	mov	ip, #40	; 0x28
   1e8e4:	ldr	r3, [r4, #2904]	; 0xb58
   1e8e8:	add	r2, sp, #44	; 0x2c
   1e8ec:	mov	r1, r5
   1e8f0:	movw	r8, #354	; 0x162
   1e8f4:	mla	r3, ip, r3, r4
   1e8f8:	b	1e7f4 <crc32@@Base+0x4498>
   1e8fc:	movw	r1, #44368	; 0xad50
   1e900:	mov	r2, sl
   1e904:	movt	r1, #3
   1e908:	ldr	r0, [pc, #1440]	; 1eeb0 <crc32@@Base+0x4b54>
   1e90c:	bl	1b1d8 <crc32@@Base+0xe7c>
   1e910:	movw	r4, #8376	; 0x20b8
   1e914:	movt	r4, #6
   1e918:	cmp	r0, #0
   1e91c:	str	r0, [r4, #2920]	; 0xb68
   1e920:	blt	1ee5c <crc32@@Base+0x4b00>
   1e924:	mov	r3, #0
   1e928:	add	r2, sp, #44	; 0x2c
   1e92c:	mov	r0, r3
   1e930:	mov	r1, r5
   1e934:	str	r3, [sp, #36]	; 0x24
   1e938:	bl	122c8 <__strtok_r@plt>
   1e93c:	subs	sl, r0, #0
   1e940:	beq	1e3e4 <crc32@@Base+0x4088>
   1e944:	ldrb	r3, [sl]
   1e948:	cmp	r3, #35	; 0x23
   1e94c:	beq	1e3e4 <crc32@@Base+0x4088>
   1e950:	ldr	r3, [r4, #2920]	; 0xb68
   1e954:	sub	r3, r3, #1
   1e958:	cmp	r3, #5
   1e95c:	ldrls	pc, [pc, r3, lsl #2]
   1e960:	b	1ed04 <crc32@@Base+0x49a8>
   1e964:	strdeq	lr, [r1], -r8
   1e968:	andeq	lr, r1, ip, ror r9
   1e96c:	andeq	lr, r1, r4, asr #19
   1e970:	andeq	lr, r1, ip, ror r6
   1e974:	andeq	lr, r1, ip, ror r6
   1e978:	andeq	lr, r1, r0, asr sl
   1e97c:	ldr	r2, [r4, #2904]	; 0xb58
   1e980:	mov	r3, #40	; 0x28
   1e984:	mov	r1, r5
   1e988:	mov	r8, #0
   1e98c:	mov	r0, #0
   1e990:	mov	lr, #4
   1e994:	mul	r3, r3, r2
   1e998:	add	r2, sp, #44	; 0x2c
   1e99c:	str	r0, [sp, #36]	; 0x24
   1e9a0:	add	ip, fp, r3
   1e9a4:	str	lr, [fp, r3]
   1e9a8:	str	sl, [ip, #4]
   1e9ac:	mov	r9, #0
   1e9b0:	strd	r8, [ip, #32]
   1e9b4:	bl	122c8 <__strtok_r@plt>
   1e9b8:	subs	sl, r0, #0
   1e9bc:	bne	1e6c8 <crc32@@Base+0x436c>
   1e9c0:	b	1e3e4 <crc32@@Base+0x4088>
   1e9c4:	ldr	r2, [r4, #2904]	; 0xb58
   1e9c8:	mov	r3, #40	; 0x28
   1e9cc:	mov	r0, #0
   1e9d0:	mov	lr, #5
   1e9d4:	str	r0, [sp, #36]	; 0x24
   1e9d8:	mov	r1, r5
   1e9dc:	mul	r3, r3, r2
   1e9e0:	mov	r8, #1
   1e9e4:	add	r2, sp, #44	; 0x2c
   1e9e8:	add	ip, fp, r3
   1e9ec:	str	lr, [fp, r3]
   1e9f0:	str	sl, [ip, #4]
   1e9f4:	b	1e9ac <crc32@@Base+0x4650>
   1e9f8:	ldr	r2, [r4, #2904]	; 0xb58
   1e9fc:	mov	r3, #40	; 0x28
   1ea00:	mov	r0, #0
   1ea04:	mov	lr, #2
   1ea08:	mov	r1, r5
   1ea0c:	str	r0, [sp, #36]	; 0x24
   1ea10:	mul	r3, r3, r2
   1ea14:	add	r2, r2, #1
   1ea18:	str	r2, [r4, #2904]	; 0xb58
   1ea1c:	add	r2, sp, #44	; 0x2c
   1ea20:	add	ip, fp, r3
   1ea24:	str	lr, [fp, r3]
   1ea28:	str	sl, [ip, #4]
   1ea2c:	bl	122c8 <__strtok_r@plt>
   1ea30:	subs	sl, r0, #0
   1ea34:	beq	1e3e4 <crc32@@Base+0x4088>
   1ea38:	ldrb	r3, [sl]
   1ea3c:	cmp	r3, #35	; 0x23
   1ea40:	beq	1e3e4 <crc32@@Base+0x4088>
   1ea44:	cmp	r6, #4
   1ea48:	bne	1e63c <crc32@@Base+0x42e0>
   1ea4c:	b	1e818 <crc32@@Base+0x44bc>
   1ea50:	ldr	r2, [r4, #2904]	; 0xb58
   1ea54:	mov	r3, #40	; 0x28
   1ea58:	cmp	r6, #12
   1ea5c:	mov	r0, #0
   1ea60:	mov	r8, #5
   1ea64:	mov	r9, #0
   1ea68:	mul	r3, r3, r2
   1ea6c:	movne	lr, #6
   1ea70:	moveq	lr, #14
   1ea74:	str	r0, [sp, #36]	; 0x24
   1ea78:	add	r2, sp, #44	; 0x2c
   1ea7c:	mov	r1, r5
   1ea80:	add	ip, fp, r3
   1ea84:	strd	r8, [ip, #32]
   1ea88:	b	1e6b4 <crc32@@Base+0x4358>
   1ea8c:	movw	r4, #8376	; 0x20b8
   1ea90:	movt	r4, #6
   1ea94:	mov	r3, #40	; 0x28
   1ea98:	mov	r2, #0
   1ea9c:	ldr	r8, [r4, #2904]	; 0xb58
   1eaa0:	mov	r0, sl
   1eaa4:	mov	ip, #10
   1eaa8:	mul	r3, r3, r8
   1eaac:	mov	r1, r2
   1eab0:	add	r8, r8, #1
   1eab4:	mov	r9, #0
   1eab8:	add	sl, fp, r3
   1eabc:	str	ip, [fp, r3]
   1eac0:	bl	12334 <strtoll@plt>
   1eac4:	mov	r3, #0
   1eac8:	str	r8, [r4, #2904]	; 0xb58
   1eacc:	add	r2, sp, #44	; 0x2c
   1ead0:	str	r3, [sp, #36]	; 0x24
   1ead4:	mov	r1, r5
   1ead8:	mov	r8, r0
   1eadc:	mov	r0, r3
   1eae0:	strd	r8, [sl, #24]
   1eae4:	bl	122c8 <__strtok_r@plt>
   1eae8:	subs	sl, r0, #0
   1eaec:	bne	1e944 <crc32@@Base+0x45e8>
   1eaf0:	b	1e3e4 <crc32@@Base+0x4088>
   1eaf4:	mov	r2, #0
   1eaf8:	mov	r0, sl
   1eafc:	mov	r1, r2
   1eb00:	bl	12334 <strtoll@plt>
   1eb04:	ldr	ip, [pc, #936]	; 1eeb4 <crc32@@Base+0x4b58>
   1eb08:	mov	r3, #0
   1eb0c:	add	r2, sp, #44	; 0x2c
   1eb10:	mov	r1, r5
   1eb14:	str	r3, [sp, #36]	; 0x24
   1eb18:	uxtb	lr, r0
   1eb1c:	mov	r0, r3
   1eb20:	strh	lr, [ip]
   1eb24:	bl	122c8 <__strtok_r@plt>
   1eb28:	subs	sl, r0, #0
   1eb2c:	beq	1e3e4 <crc32@@Base+0x4088>
   1eb30:	ldrb	r3, [sl]
   1eb34:	cmp	r3, #35	; 0x23
   1eb38:	beq	1e3e4 <crc32@@Base+0x4088>
   1eb3c:	movw	r4, #8376	; 0x20b8
   1eb40:	movt	r4, #6
   1eb44:	b	1e950 <crc32@@Base+0x45f4>
   1eb48:	mov	r2, sl
   1eb4c:	movw	r1, #42324	; 0xa554
   1eb50:	ldr	r0, [pc, #864]	; 1eeb8 <crc32@@Base+0x4b5c>
   1eb54:	movt	r1, #3
   1eb58:	bl	1b1d8 <crc32@@Base+0xe7c>
   1eb5c:	movw	r4, #8376	; 0x20b8
   1eb60:	movt	r4, #6
   1eb64:	mov	r3, #0
   1eb68:	add	r2, sp, #44	; 0x2c
   1eb6c:	mov	r1, r5
   1eb70:	str	r3, [sp, #36]	; 0x24
   1eb74:	str	r0, [r4, #2908]	; 0xb5c
   1eb78:	mov	r0, r3
   1eb7c:	bl	122c8 <__strtok_r@plt>
   1eb80:	subs	sl, r0, #0
   1eb84:	bne	1e944 <crc32@@Base+0x45e8>
   1eb88:	b	1e3e4 <crc32@@Base+0x4088>
   1eb8c:	movw	r4, #8376	; 0x20b8
   1eb90:	movt	r4, #6
   1eb94:	mov	r3, #40	; 0x28
   1eb98:	mov	r0, #0
   1eb9c:	ldr	r2, [r4, #2904]	; 0xb58
   1eba0:	mov	lr, #13
   1eba4:	str	r0, [sp, #36]	; 0x24
   1eba8:	add	r1, r2, #1
   1ebac:	str	r1, [r4, #2904]	; 0xb58
   1ebb0:	mul	r3, r3, r2
   1ebb4:	mov	r1, r5
   1ebb8:	add	r2, sp, #44	; 0x2c
   1ebbc:	add	ip, fp, r3
   1ebc0:	str	lr, [fp, r3]
   1ebc4:	str	sl, [ip, #4]
   1ebc8:	bl	122c8 <__strtok_r@plt>
   1ebcc:	subs	sl, r0, #0
   1ebd0:	bne	1e944 <crc32@@Base+0x45e8>
   1ebd4:	b	1e3e4 <crc32@@Base+0x4088>
   1ebd8:	movw	r4, #8376	; 0x20b8
   1ebdc:	movt	r4, #6
   1ebe0:	mov	r3, #40	; 0x28
   1ebe4:	mov	r2, #0
   1ebe8:	ldr	r8, [r4, #2904]	; 0xb58
   1ebec:	mov	ip, #16
   1ebf0:	mov	r0, sl
   1ebf4:	mov	r1, r2
   1ebf8:	mov	r9, #0
   1ebfc:	mul	r3, r3, r8
   1ec00:	add	r8, r8, #1
   1ec04:	add	sl, fp, r3
   1ec08:	str	ip, [fp, r3]
   1ec0c:	bl	12334 <strtoll@plt>
   1ec10:	mov	r3, #0
   1ec14:	str	r8, [r4, #2904]	; 0xb58
   1ec18:	add	r2, sp, #44	; 0x2c
   1ec1c:	mov	r1, r5
   1ec20:	str	r3, [sp, #36]	; 0x24
   1ec24:	mov	r8, r0
   1ec28:	mov	r0, r3
   1ec2c:	strd	r8, [sl, #16]
   1ec30:	bl	122c8 <__strtok_r@plt>
   1ec34:	subs	sl, r0, #0
   1ec38:	bne	1e944 <crc32@@Base+0x45e8>
   1ec3c:	b	1e3e4 <crc32@@Base+0x4088>
   1ec40:	movw	r4, #8376	; 0x20b8
   1ec44:	movt	r4, #6
   1ec48:	mov	r3, #40	; 0x28
   1ec4c:	mov	r2, #0
   1ec50:	ldr	r8, [r4, #2904]	; 0xb58
   1ec54:	mov	r0, sl
   1ec58:	mov	ip, #15
   1ec5c:	b	1eaa8 <crc32@@Base+0x474c>
   1ec60:	mov	r2, #0
   1ec64:	mov	r0, sl
   1ec68:	mov	r1, r2
   1ec6c:	movw	r4, #8376	; 0x20b8
   1ec70:	bl	12334 <strtoll@plt>
   1ec74:	movt	r4, #6
   1ec78:	mov	r3, #0
   1ec7c:	add	r2, sp, #44	; 0x2c
   1ec80:	mov	r1, r5
   1ec84:	str	r3, [sp, #36]	; 0x24
   1ec88:	strb	r0, [r4, #2912]	; 0xb60
   1ec8c:	mov	r0, r3
   1ec90:	bl	122c8 <__strtok_r@plt>
   1ec94:	subs	sl, r0, #0
   1ec98:	bne	1e944 <crc32@@Base+0x45e8>
   1ec9c:	b	1e3e4 <crc32@@Base+0x4088>
   1eca0:	movw	r1, #44328	; 0xad28
   1eca4:	mov	r2, #6
   1eca8:	movt	r1, #3
   1ecac:	mov	r0, sl
   1ecb0:	bl	12220 <strncmp@plt>
   1ecb4:	subs	r3, r0, #0
   1ecb8:	beq	1ed84 <crc32@@Base+0x4a28>
   1ecbc:	mov	r0, sl
   1ecc0:	movw	r1, #44336	; 0xad30
   1ecc4:	mov	r2, #6
   1ecc8:	movt	r1, #3
   1eccc:	bl	12220 <strncmp@plt>
   1ecd0:	subs	r3, r0, #0
   1ecd4:	bne	1ee84 <crc32@@Base+0x4b28>
   1ecd8:	movw	r4, #8376	; 0x20b8
   1ecdc:	movt	r4, #6
   1ece0:	add	r2, sp, #44	; 0x2c
   1ece4:	mov	r1, r5
   1ece8:	str	r3, [sp, #36]	; 0x24
   1ecec:	mov	r3, #2
   1ecf0:	str	r3, [r4, #2916]	; 0xb64
   1ecf4:	bl	122c8 <__strtok_r@plt>
   1ecf8:	subs	sl, r0, #0
   1ecfc:	bne	1e944 <crc32@@Base+0x45e8>
   1ed00:	b	1e3e4 <crc32@@Base+0x4088>
   1ed04:	mov	r3, #0
   1ed08:	add	r2, sp, #44	; 0x2c
   1ed0c:	mov	r0, r3
   1ed10:	mov	r1, r5
   1ed14:	str	r3, [sp, #36]	; 0x24
   1ed18:	bl	122c8 <__strtok_r@plt>
   1ed1c:	subs	sl, r0, #0
   1ed20:	beq	1e3e4 <crc32@@Base+0x4088>
   1ed24:	ldrb	r3, [sl]
   1ed28:	cmp	r3, #35	; 0x23
   1ed2c:	bne	1e624 <crc32@@Base+0x42c8>
   1ed30:	b	1e3e4 <crc32@@Base+0x4088>
   1ed34:	movw	r4, #8376	; 0x20b8
   1ed38:	movt	r4, #6
   1ed3c:	mov	r3, #40	; 0x28
   1ed40:	mov	r0, #0
   1ed44:	ldr	r2, [r4, #2904]	; 0xb58
   1ed48:	mov	lr, #17
   1ed4c:	mov	r1, r5
   1ed50:	str	r0, [sp, #36]	; 0x24
   1ed54:	mul	r3, r3, r2
   1ed58:	add	r2, sp, #44	; 0x2c
   1ed5c:	add	ip, fp, r3
   1ed60:	str	lr, [fp, r3]
   1ed64:	str	sl, [ip, #4]
   1ed68:	bl	122c8 <__strtok_r@plt>
   1ed6c:	subs	sl, r0, #0
   1ed70:	beq	1e3e4 <crc32@@Base+0x4088>
   1ed74:	ldrb	r3, [sl]
   1ed78:	cmp	r3, #35	; 0x23
   1ed7c:	bne	1e5a0 <crc32@@Base+0x4244>
   1ed80:	b	1e3e4 <crc32@@Base+0x4088>
   1ed84:	movw	r4, #8376	; 0x20b8
   1ed88:	movt	r4, #6
   1ed8c:	add	r2, sp, #44	; 0x2c
   1ed90:	mov	r1, r5
   1ed94:	str	r3, [sp, #36]	; 0x24
   1ed98:	mov	r3, #1
   1ed9c:	str	r3, [r4, #2916]	; 0xb64
   1eda0:	bl	122c8 <__strtok_r@plt>
   1eda4:	subs	sl, r0, #0
   1eda8:	bne	1e944 <crc32@@Base+0x45e8>
   1edac:	b	1e3e4 <crc32@@Base+0x4088>
   1edb0:	movw	r2, #7868	; 0x1ebc
   1edb4:	movt	r2, #5
   1edb8:	str	sl, [sp, #4]
   1edbc:	mov	r1, #1
   1edc0:	ldr	r0, [r2]
   1edc4:	movw	r2, #44268	; 0xacec
   1edc8:	ldr	r3, [sp, #28]
   1edcc:	movt	r2, #3
   1edd0:	str	r7, [sp]
   1edd4:	bl	12358 <__fprintf_chk@plt>
   1edd8:	mov	r0, #1
   1eddc:	bl	12298 <exit@plt>
   1ede0:	movw	r3, #7868	; 0x1ebc
   1ede4:	movt	r3, #5
   1ede8:	movw	r0, #44468	; 0xadb4
   1edec:	mov	r2, #18
   1edf0:	ldr	r3, [r3]
   1edf4:	movt	r0, #3
   1edf8:	mov	r1, #1
   1edfc:	bl	12634 <fwrite@plt>
   1ee00:	mov	r0, #1
   1ee04:	bl	12298 <exit@plt>
   1ee08:	movw	r1, #7868	; 0x1ebc
   1ee0c:	movt	r1, #5
   1ee10:	ldr	r3, [sp, #28]
   1ee14:	movw	r2, #44216	; 0xacb8
   1ee18:	ldr	r0, [r1]
   1ee1c:	movt	r2, #3
   1ee20:	mov	r1, #1
   1ee24:	bl	12358 <__fprintf_chk@plt>
   1ee28:	mov	r0, #1
   1ee2c:	bl	12298 <exit@plt>
   1ee30:	bl	12538 <__stack_chk_fail@plt>
   1ee34:	movw	r1, #7868	; 0x1ebc
   1ee38:	movt	r1, #5
   1ee3c:	mov	r3, sl
   1ee40:	movw	r2, #44444	; 0xad9c
   1ee44:	ldr	r0, [r1]
   1ee48:	movt	r2, #3
   1ee4c:	mov	r1, #1
   1ee50:	bl	12358 <__fprintf_chk@plt>
   1ee54:	mov	r0, #1
   1ee58:	bl	12298 <exit@plt>
   1ee5c:	movw	r1, #7868	; 0x1ebc
   1ee60:	movt	r1, #5
   1ee64:	mov	r3, sl
   1ee68:	movw	r2, #44392	; 0xad68
   1ee6c:	ldr	r0, [r1]
   1ee70:	movt	r2, #3
   1ee74:	mov	r1, #1
   1ee78:	bl	12358 <__fprintf_chk@plt>
   1ee7c:	mov	r0, #1
   1ee80:	bl	12298 <exit@plt>
   1ee84:	movw	r3, #7868	; 0x1ebc
   1ee88:	movt	r3, #5
   1ee8c:	movw	r0, #44344	; 0xad38
   1ee90:	mov	r2, #20
   1ee94:	ldr	r3, [r3]
   1ee98:	movt	r0, #3
   1ee9c:	mov	r1, #1
   1eea0:	bl	12634 <fwrite@plt>
   1eea4:	mov	r0, #1
   1eea8:	bl	12298 <exit@plt>
   1eeac:	andeq	r2, r6, r0, lsl r7
   1eeb0:	andeq	r1, r5, ip, lsl #14
   1eeb4:	andeq	r2, r6, sl, lsl ip
   1eeb8:			; <UNDEFINED> instruction: 0x000516b8
   1eebc:	mov	r0, #0
   1eec0:	bx	lr
   1eec4:	bx	lr
   1eec8:	bx	lr
   1eecc:	subs	r0, r0, #37	; 0x25
   1eed0:	movne	r0, #1
   1eed4:	bx	lr
   1eed8:	push	{r4, r5, r6, r7, r8, lr}
   1eedc:	movw	r4, #3824	; 0xef0
   1eee0:	movt	r4, #5
   1eee4:	sub	sp, sp, #16
   1eee8:	mov	r5, r0
   1eeec:	mov	r8, r1
   1eef0:	ldr	r3, [r4]
   1eef4:	mov	r7, r2
   1eef8:	str	r3, [sp, #12]
   1eefc:	bl	12748 <__errno_location@plt>
   1ef00:	mov	r3, #0
   1ef04:	mov	r2, #16
   1ef08:	add	r1, sp, #8
   1ef0c:	mov	r6, r0
   1ef10:	mov	r0, r5
   1ef14:	str	r3, [r6]
   1ef18:	bl	12370 <strtoul@plt>
   1ef1c:	ldr	r3, [r6]
   1ef20:	cmp	r3, #0
   1ef24:	bne	1ef4c <crc32@@Base+0x4bf0>
   1ef28:	ldr	r3, [sp, #8]
   1ef2c:	cmp	r3, r5
   1ef30:	beq	1ef4c <crc32@@Base+0x4bf0>
   1ef34:	ldr	r2, [sp, #12]
   1ef38:	ldr	r3, [r4]
   1ef3c:	cmp	r2, r3
   1ef40:	bne	1ef7c <crc32@@Base+0x4c20>
   1ef44:	add	sp, sp, #16
   1ef48:	pop	{r4, r5, r6, r7, r8, pc}
   1ef4c:	movw	r1, #7868	; 0x1ebc
   1ef50:	movt	r1, #5
   1ef54:	str	r5, [sp, #4]
   1ef58:	mov	r3, r8
   1ef5c:	str	r7, [sp]
   1ef60:	movw	r2, #30028	; 0x754c
   1ef64:	ldr	r0, [r1]
   1ef68:	movt	r2, #3
   1ef6c:	mov	r1, #1
   1ef70:	bl	12358 <__fprintf_chk@plt>
   1ef74:	mov	r0, #1
   1ef78:	bl	12298 <exit@plt>
   1ef7c:	bl	12538 <__stack_chk_fail@plt>
   1ef80:	push	{r4, r5, r6, r7, lr}
   1ef84:	movw	r6, #3824	; 0xef0
   1ef88:	sub	sp, sp, #20
   1ef8c:	movt	r6, #5
   1ef90:	add	r3, sp, #16
   1ef94:	movw	r4, #7872	; 0x1ec0
   1ef98:	ldr	ip, [r6]
   1ef9c:	movt	r4, #5
   1efa0:	add	r1, r3, r0, lsl #2
   1efa4:	mov	r7, r0
   1efa8:	movw	r2, #45088	; 0xb020
   1efac:	movw	r3, #45096	; 0xb028
   1efb0:	movt	r2, #3
   1efb4:	movt	r3, #3
   1efb8:	ldr	r0, [r4]
   1efbc:	strd	r2, [sp, #4]
   1efc0:	movw	r2, #45112	; 0xb038
   1efc4:	ldr	r3, [r1, #-12]
   1efc8:	movt	r2, #3
   1efcc:	mov	r1, #1
   1efd0:	str	ip, [sp, #12]
   1efd4:	bl	12358 <__fprintf_chk@plt>
   1efd8:	movw	r3, #11300	; 0x2c24
   1efdc:	movt	r3, #6
   1efe0:	mov	r1, #1
   1efe4:	add	r5, r3, r7, lsl #6
   1efe8:	ldr	r0, [r4]
   1efec:	ldrb	r3, [r3, r7, lsl #6]
   1eff0:	movw	r2, #45152	; 0xb060
   1eff4:	movt	r2, #3
   1eff8:	bl	12358 <__fprintf_chk@plt>
   1effc:	ldrh	r3, [r5, #1]
   1f000:	mov	r1, #1
   1f004:	ldr	r0, [r4]
   1f008:	movw	r2, #45172	; 0xb074
   1f00c:	movt	r2, #3
   1f010:	bl	12358 <__fprintf_chk@plt>
   1f014:	ldrb	r3, [r5, #3]
   1f018:	mov	r1, #1
   1f01c:	ldr	r0, [r4]
   1f020:	movw	r2, #45196	; 0xb08c
   1f024:	movt	r2, #3
   1f028:	bl	12358 <__fprintf_chk@plt>
   1f02c:	ldr	r3, [r5, #4]
   1f030:	mov	r1, #1
   1f034:	ldr	r0, [r4]
   1f038:	movw	r2, #45220	; 0xb0a4
   1f03c:	movt	r2, #3
   1f040:	bl	12358 <__fprintf_chk@plt>
   1f044:	ldr	r3, [r5, #8]
   1f048:	mov	r1, #1
   1f04c:	ldr	r0, [r4]
   1f050:	movw	r2, #45236	; 0xb0b4
   1f054:	movt	r2, #3
   1f058:	bl	12358 <__fprintf_chk@plt>
   1f05c:	ldr	r3, [r5, #12]
   1f060:	mov	r1, #1
   1f064:	ldr	r0, [r4]
   1f068:	movw	r2, #45256	; 0xb0c8
   1f06c:	movt	r2, #3
   1f070:	bl	12358 <__fprintf_chk@plt>
   1f074:	ldr	r3, [r5, #16]
   1f078:	mov	r1, #1
   1f07c:	ldr	r0, [r4]
   1f080:	movw	r2, #45276	; 0xb0dc
   1f084:	movt	r2, #3
   1f088:	bl	12358 <__fprintf_chk@plt>
   1f08c:	ldr	r3, [r5, #20]
   1f090:	mov	r1, #1
   1f094:	ldr	r0, [r4]
   1f098:	movw	r2, #45300	; 0xb0f4
   1f09c:	movt	r2, #3
   1f0a0:	bl	12358 <__fprintf_chk@plt>
   1f0a4:	ldr	r3, [r5, #24]
   1f0a8:	mov	r1, #1
   1f0ac:	ldr	r0, [r4]
   1f0b0:	movw	r2, #45316	; 0xb104
   1f0b4:	movt	r2, #3
   1f0b8:	bl	12358 <__fprintf_chk@plt>
   1f0bc:	ldr	r3, [r5, #28]
   1f0c0:	mov	r1, #1
   1f0c4:	ldr	r0, [r4]
   1f0c8:	movw	r2, #45332	; 0xb114
   1f0cc:	movt	r2, #3
   1f0d0:	bl	12358 <__fprintf_chk@plt>
   1f0d4:	ldr	r3, [r5, #32]
   1f0d8:	mov	r1, #1
   1f0dc:	ldr	r0, [r4]
   1f0e0:	movw	r2, #45352	; 0xb128
   1f0e4:	movt	r2, #3
   1f0e8:	bl	12358 <__fprintf_chk@plt>
   1f0ec:	ldr	r3, [r5, #36]	; 0x24
   1f0f0:	ldr	r0, [r4]
   1f0f4:	movw	r2, #45376	; 0xb140
   1f0f8:	mov	r1, #1
   1f0fc:	movt	r2, #3
   1f100:	bl	12358 <__fprintf_chk@plt>
   1f104:	ldr	r2, [sp, #12]
   1f108:	ldr	r3, [r6]
   1f10c:	cmp	r2, r3
   1f110:	bne	1f134 <crc32@@Base+0x4dd8>
   1f114:	ldr	r3, [r5, #40]	; 0x28
   1f118:	movw	r2, #45400	; 0xb158
   1f11c:	ldr	r0, [r4]
   1f120:	movt	r2, #3
   1f124:	mov	r1, #1
   1f128:	add	sp, sp, #20
   1f12c:	pop	{r4, r5, r6, r7, lr}
   1f130:	b	12358 <__fprintf_chk@plt>
   1f134:	bl	12538 <__stack_chk_fail@plt>
   1f138:	push	{r4, r5, r6, r7, lr}
   1f13c:	movw	r7, #3824	; 0xef0
   1f140:	sub	sp, sp, #4096	; 0x1000
   1f144:	movt	r7, #5
   1f148:	sub	sp, sp, #20
   1f14c:	mov	r4, r1
   1f150:	ldr	r3, [r7]
   1f154:	add	ip, sp, #4096	; 0x1000
   1f158:	add	ip, ip, #12
   1f15c:	mov	r6, r0
   1f160:	mov	r2, #4096	; 0x1000
   1f164:	mov	r1, #0
   1f168:	add	r0, sp, #12
   1f16c:	str	r3, [ip]
   1f170:	bl	12388 <memset@plt>
   1f174:	mov	r1, r4
   1f178:	mov	r0, r6
   1f17c:	mov	r2, #0
   1f180:	bl	12598 <lseek@plt>
   1f184:	cmp	r0, #0
   1f188:	movge	r4, #8192	; 0x2000
   1f18c:	blt	1f218 <crc32@@Base+0x4ebc>
   1f190:	cmp	r4, #4096	; 0x1000
   1f194:	add	r1, sp, #12
   1f198:	mov	r0, r6
   1f19c:	movlt	r5, r4
   1f1a0:	movge	r5, #4096	; 0x1000
   1f1a4:	mov	r2, r5
   1f1a8:	bl	126c4 <write@plt>
   1f1ac:	cmp	r0, r5
   1f1b0:	bne	1f1e0 <crc32@@Base+0x4e84>
   1f1b4:	subs	r4, r4, r0
   1f1b8:	bne	1f190 <crc32@@Base+0x4e34>
   1f1bc:	add	r3, sp, #4096	; 0x1000
   1f1c0:	add	r3, r3, #12
   1f1c4:	ldr	r2, [r3]
   1f1c8:	ldr	r3, [r7]
   1f1cc:	cmp	r2, r3
   1f1d0:	bne	1f258 <crc32@@Base+0x4efc>
   1f1d4:	add	sp, sp, #4096	; 0x1000
   1f1d8:	add	sp, sp, #20
   1f1dc:	pop	{r4, r5, r6, r7, pc}
   1f1e0:	movw	r3, #7868	; 0x1ebc
   1f1e4:	movt	r3, #5
   1f1e8:	ldr	r4, [r3]
   1f1ec:	bl	12748 <__errno_location@plt>
   1f1f0:	ldr	r0, [r0]
   1f1f4:	bl	122a4 <strerror@plt>
   1f1f8:	movw	r2, #43180	; 0xa8ac
   1f1fc:	mov	r1, #1
   1f200:	movt	r2, #3
   1f204:	mov	r3, r0
   1f208:	mov	r0, r4
   1f20c:	bl	12358 <__fprintf_chk@plt>
   1f210:	mov	r0, #1
   1f214:	bl	12298 <exit@plt>
   1f218:	movw	r3, #7868	; 0x1ebc
   1f21c:	movt	r3, #5
   1f220:	ldr	r4, [r3]
   1f224:	bl	12748 <__errno_location@plt>
   1f228:	ldr	r0, [r0]
   1f22c:	bl	122a4 <strerror@plt>
   1f230:	movw	r3, #45052	; 0xaffc
   1f234:	movw	r2, #45428	; 0xb174
   1f238:	movt	r3, #3
   1f23c:	movt	r2, #3
   1f240:	mov	r1, #1
   1f244:	str	r0, [sp]
   1f248:	mov	r0, r4
   1f24c:	bl	12358 <__fprintf_chk@plt>
   1f250:	mov	r0, #1
   1f254:	bl	12298 <exit@plt>
   1f258:	bl	12538 <__stack_chk_fail@plt>
   1f25c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f260:	movw	r7, #3824	; 0xef0
   1f264:	sub	sp, sp, #4160	; 0x1040
   1f268:	movt	r7, #5
   1f26c:	sub	sp, sp, #52	; 0x34
   1f270:	mov	sl, r3
   1f274:	ldr	ip, [r7]
   1f278:	add	r3, sp, #4160	; 0x1040
   1f27c:	mov	r6, #0
   1f280:	add	r3, r3, #44	; 0x2c
   1f284:	mov	r4, r1
   1f288:	mov	r5, r0
   1f28c:	mov	r1, r6
   1f290:	mov	fp, r2
   1f294:	add	r0, sp, #108	; 0x6c
   1f298:	mov	r2, #4096	; 0x1000
   1f29c:	str	ip, [r3]
   1f2a0:	str	r6, [sp, #12]
   1f2a4:	bl	12388 <memset@plt>
   1f2a8:	mov	r1, r6
   1f2ac:	mov	r0, r4
   1f2b0:	bl	124d8 <open@plt>
   1f2b4:	subs	r8, r0, #0
   1f2b8:	blt	1f504 <crc32@@Base+0x51a8>
   1f2bc:	mov	r1, r8
   1f2c0:	add	r2, sp, #16
   1f2c4:	mov	r0, #3
   1f2c8:	bl	12610 <__fxstat@plt>
   1f2cc:	cmp	r0, #0
   1f2d0:	blt	1f4d8 <crc32@@Base+0x517c>
   1f2d4:	mov	r3, #1
   1f2d8:	ldr	r1, [sp, #60]	; 0x3c
   1f2dc:	str	r6, [sp, #4]
   1f2e0:	mov	r2, r3
   1f2e4:	str	r8, [sp]
   1f2e8:	mov	r0, r6
   1f2ec:	bl	12490 <mmap@plt>
   1f2f0:	cmn	r0, #1
   1f2f4:	mov	r9, r0
   1f2f8:	beq	1f49c <crc32@@Base+0x5140>
   1f2fc:	mov	r2, r6
   1f300:	mov	r1, fp
   1f304:	mov	r0, r5
   1f308:	ldr	r4, [sp, #60]	; 0x3c
   1f30c:	bl	12598 <lseek@plt>
   1f310:	sub	r4, r4, sl
   1f314:	cmp	r0, #0
   1f318:	blt	1f474 <crc32@@Base+0x5118>
   1f31c:	add	r1, r9, sl
   1f320:	mov	r2, r4
   1f324:	mov	r0, r5
   1f328:	bl	126c4 <write@plt>
   1f32c:	cmp	r4, r0
   1f330:	bne	1f43c <crc32@@Base+0x50e0>
   1f334:	rsbs	r3, r4, #0
   1f338:	and	r2, r4, #3
   1f33c:	and	r3, r3, #3
   1f340:	rsbpl	r2, r3, #0
   1f344:	cmn	r4, #1
   1f348:	moveq	r3, #1
   1f34c:	movne	r3, #0
   1f350:	cmp	r2, #0
   1f354:	moveq	r3, #0
   1f358:	cmp	r3, #0
   1f35c:	bne	1f3e8 <crc32@@Base+0x508c>
   1f360:	cmn	r4, #1
   1f364:	bge	1f404 <crc32@@Base+0x50a8>
   1f368:	rsb	r4, r4, #0
   1f36c:	b	1f390 <crc32@@Base+0x5034>
   1f370:	mov	r2, #4096	; 0x1000
   1f374:	add	r1, sp, #108	; 0x6c
   1f378:	mov	r0, r5
   1f37c:	bl	126c4 <write@plt>
   1f380:	cmp	r0, #4096	; 0x1000
   1f384:	bne	1f3b0 <crc32@@Base+0x5054>
   1f388:	subs	r4, r4, #4096	; 0x1000
   1f38c:	beq	1f404 <crc32@@Base+0x50a8>
   1f390:	cmp	r4, #4096	; 0x1000
   1f394:	bge	1f370 <crc32@@Base+0x5014>
   1f398:	add	r1, sp, #108	; 0x6c
   1f39c:	mov	r0, r5
   1f3a0:	mov	r2, r4
   1f3a4:	bl	126c4 <write@plt>
   1f3a8:	cmp	r0, r4
   1f3ac:	beq	1f404 <crc32@@Base+0x50a8>
   1f3b0:	movw	r3, #7868	; 0x1ebc
   1f3b4:	movt	r3, #5
   1f3b8:	ldr	r4, [r3]
   1f3bc:	bl	12748 <__errno_location@plt>
   1f3c0:	ldr	r0, [r0]
   1f3c4:	bl	122a4 <strerror@plt>
   1f3c8:	movw	r2, #43180	; 0xa8ac
   1f3cc:	mov	r1, #1
   1f3d0:	movt	r2, #3
   1f3d4:	mov	r3, r0
   1f3d8:	mov	r0, r4
   1f3dc:	bl	12358 <__fprintf_chk@plt>
   1f3e0:	mov	r0, #1
   1f3e4:	bl	12298 <exit@plt>
   1f3e8:	rsb	r4, r2, #4
   1f3ec:	add	r1, sp, #12
   1f3f0:	mov	r0, r5
   1f3f4:	mov	r2, r4
   1f3f8:	bl	126c4 <write@plt>
   1f3fc:	cmp	r4, r0
   1f400:	bne	1f534 <crc32@@Base+0x51d8>
   1f404:	ldr	r1, [sp, #60]	; 0x3c
   1f408:	mov	r0, r9
   1f40c:	bl	126a0 <munmap@plt>
   1f410:	mov	r0, r8
   1f414:	bl	123b8 <close@plt>
   1f418:	add	r3, sp, #4160	; 0x1040
   1f41c:	add	r3, r3, #44	; 0x2c
   1f420:	ldr	r2, [r3]
   1f424:	ldr	r3, [r7]
   1f428:	cmp	r2, r3
   1f42c:	bne	1f530 <crc32@@Base+0x51d4>
   1f430:	add	sp, sp, #4160	; 0x1040
   1f434:	add	sp, sp, #52	; 0x34
   1f438:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f43c:	movw	r3, #7868	; 0x1ebc
   1f440:	movt	r3, #5
   1f444:	ldr	r4, [r3]
   1f448:	bl	12748 <__errno_location@plt>
   1f44c:	ldr	r0, [r0]
   1f450:	bl	122a4 <strerror@plt>
   1f454:	movw	r2, #43164	; 0xa89c
   1f458:	mov	r1, #1
   1f45c:	movt	r2, #3
   1f460:	mov	r3, r0
   1f464:	mov	r0, r4
   1f468:	bl	12358 <__fprintf_chk@plt>
   1f46c:	mov	r0, #1
   1f470:	bl	12298 <exit@plt>
   1f474:	movw	r3, #7868	; 0x1ebc
   1f478:	movt	r3, #5
   1f47c:	movw	r0, #45444	; 0xb184
   1f480:	mov	r2, #15
   1f484:	ldr	r3, [r3]
   1f488:	movt	r0, #3
   1f48c:	mov	r1, #1
   1f490:	bl	12634 <fwrite@plt>
   1f494:	mov	r0, #1
   1f498:	bl	12298 <exit@plt>
   1f49c:	movw	r3, #7868	; 0x1ebc
   1f4a0:	movt	r3, #5
   1f4a4:	ldr	r5, [r3]
   1f4a8:	bl	12748 <__errno_location@plt>
   1f4ac:	ldr	r0, [r0]
   1f4b0:	bl	122a4 <strerror@plt>
   1f4b4:	movw	r2, #31488	; 0x7b00
   1f4b8:	movt	r2, #3
   1f4bc:	mov	r3, r4
   1f4c0:	mov	r1, #1
   1f4c4:	str	r0, [sp]
   1f4c8:	mov	r0, r5
   1f4cc:	bl	12358 <__fprintf_chk@plt>
   1f4d0:	mov	r0, #1
   1f4d4:	bl	12298 <exit@plt>
   1f4d8:	movw	r3, #7868	; 0x1ebc
   1f4dc:	movt	r3, #5
   1f4e0:	ldr	r5, [r3]
   1f4e4:	bl	12748 <__errno_location@plt>
   1f4e8:	ldr	r0, [r0]
   1f4ec:	bl	122a4 <strerror@plt>
   1f4f0:	movw	r2, #29908	; 0x74d4
   1f4f4:	mov	r3, r4
   1f4f8:	mov	r1, #1
   1f4fc:	movt	r2, #3
   1f500:	b	1f4c4 <crc32@@Base+0x5168>
   1f504:	movw	r3, #7868	; 0x1ebc
   1f508:	movt	r3, #5
   1f50c:	ldr	r5, [r3]
   1f510:	bl	12748 <__errno_location@plt>
   1f514:	ldr	r0, [r0]
   1f518:	bl	122a4 <strerror@plt>
   1f51c:	movw	r2, #29884	; 0x74bc
   1f520:	mov	r3, r4
   1f524:	mov	r1, #1
   1f528:	movt	r2, #3
   1f52c:	b	1f4c4 <crc32@@Base+0x5168>
   1f530:	bl	12538 <__stack_chk_fail@plt>
   1f534:	movw	r3, #7868	; 0x1ebc
   1f538:	movt	r3, #5
   1f53c:	ldr	r4, [r3]
   1f540:	bl	12748 <__errno_location@plt>
   1f544:	ldr	r0, [r0]
   1f548:	bl	122a4 <strerror@plt>
   1f54c:	movw	r2, #43424	; 0xa9a0
   1f550:	mov	r1, #1
   1f554:	movt	r2, #3
   1f558:	mov	r3, r0
   1f55c:	mov	r0, r4
   1f560:	bl	12358 <__fprintf_chk@plt>
   1f564:	mov	r0, #1
   1f568:	bl	12298 <exit@plt>
   1f56c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f570:	movw	r4, #11300	; 0x2c24
   1f574:	movt	r4, #6
   1f578:	movw	r9, #3824	; 0xef0
   1f57c:	movt	r9, #5
   1f580:	sub	sp, sp, #212	; 0xd4
   1f584:	ldr	r1, [r4, #128]	; 0x80
   1f588:	ldr	r3, [r9]
   1f58c:	cmp	r1, #0
   1f590:	str	r3, [sp, #204]	; 0xcc
   1f594:	beq	1fb94 <crc32@@Base+0x5838>
   1f598:	mov	r7, r0
   1f59c:	ldr	r0, [r4, #132]	; 0x84
   1f5a0:	ldr	r6, [r4, #136]	; 0x88
   1f5a4:	cmp	r0, #0
   1f5a8:	beq	1f9a0 <crc32@@Base+0x5644>
   1f5ac:	mov	r1, #0
   1f5b0:	mov	sl, r6
   1f5b4:	bl	124d8 <open@plt>
   1f5b8:	subs	r5, r0, #0
   1f5bc:	movwlt	r2, #7868	; 0x1ebc
   1f5c0:	ldrlt	r5, [r4, #132]	; 0x84
   1f5c4:	movtlt	r2, #5
   1f5c8:	blt	1fb08 <crc32@@Base+0x57ac>
   1f5cc:	add	r2, sp, #48	; 0x30
   1f5d0:	mov	r1, r5
   1f5d4:	mov	r0, #3
   1f5d8:	bl	12610 <__fxstat@plt>
   1f5dc:	cmp	r0, #0
   1f5e0:	blt	1fb3c <crc32@@Base+0x57e0>
   1f5e4:	mov	r0, r5
   1f5e8:	mov	r5, #106496	; 0x1a000
   1f5ec:	bl	123b8 <close@plt>
   1f5f0:	ldr	r3, [sp, #92]	; 0x5c
   1f5f4:	movw	r2, #40959	; 0x9fff
   1f5f8:	movt	r2, #1
   1f5fc:	add	r2, r3, r2
   1f600:	movw	r3, #60495	; 0xec4f
   1f604:	movt	r3, #20164	; 0x4ec4
   1f608:	ldr	r6, [r4, #136]	; 0x88
   1f60c:	asr	r0, r2, #31
   1f610:	ldr	r1, [r4, #128]	; 0x80
   1f614:	smull	r2, r3, r2, r3
   1f618:	rsb	r0, r0, r3, asr #15
   1f61c:	mul	r5, r5, r0
   1f620:	mov	r0, r1
   1f624:	mov	r1, #0
   1f628:	add	r6, r6, r5
   1f62c:	bl	124d8 <open@plt>
   1f630:	subs	r8, r0, #0
   1f634:	blt	1fafc <crc32@@Base+0x57a0>
   1f638:	add	r2, sp, #48	; 0x30
   1f63c:	mov	r1, r8
   1f640:	mov	r0, #3
   1f644:	bl	12610 <__fxstat@plt>
   1f648:	cmp	r0, #0
   1f64c:	movwlt	r2, #7868	; 0x1ebc
   1f650:	ldrlt	r5, [r4, #128]	; 0x80
   1f654:	movtlt	r2, #5
   1f658:	blt	1fb48 <crc32@@Base+0x57ec>
   1f65c:	mov	r0, r8
   1f660:	bl	123b8 <close@plt>
   1f664:	ldr	ip, [r4, #136]	; 0x88
   1f668:	ldr	r3, [sp, #92]	; 0x5c
   1f66c:	mov	r1, #209	; 0xd1
   1f670:	add	r8, ip, #572	; 0x23c
   1f674:	ldr	r2, [r4, #140]	; 0x8c
   1f678:	add	r8, r8, #3
   1f67c:	ldr	r0, [r4, #148]	; 0x94
   1f680:	add	r8, r8, r3
   1f684:	sub	r3, r2, #64	; 0x40
   1f688:	bic	r8, r8, #508	; 0x1fc
   1f68c:	cmp	r0, #0
   1f690:	bic	r8, r8, #3
   1f694:	str	r3, [r4, #84]	; 0x54
   1f698:	sub	r3, r3, ip
   1f69c:	movt	r1, #16672	; 0x4120
   1f6a0:	str	r2, [r4, #68]	; 0x44
   1f6a4:	sub	r2, r2, #32
   1f6a8:	str	r3, [r4, #96]	; 0x60
   1f6ac:	add	r3, r3, r8
   1f6b0:	str	r1, [r4, #64]	; 0x40
   1f6b4:	mov	r1, #0
   1f6b8:	str	r3, [r4, #88]	; 0x58
   1f6bc:	add	r3, r8, #8192	; 0x2000
   1f6c0:	str	r2, [r4, #80]	; 0x50
   1f6c4:	str	r3, [r4, #100]	; 0x64
   1f6c8:	add	r3, r6, #64	; 0x40
   1f6cc:	str	r1, [r4, #76]	; 0x4c
   1f6d0:	str	r1, [r4, #104]	; 0x68
   1f6d4:	str	r3, [r4, #144]	; 0x90
   1f6d8:	beq	1f748 <crc32@@Base+0x53ec>
   1f6dc:	ldr	r3, [r4, #152]	; 0x98
   1f6e0:	cmp	r3, r1
   1f6e4:	beq	1fbe8 <crc32@@Base+0x588c>
   1f6e8:	ldr	r2, [r4, #160]	; 0xa0
   1f6ec:	ldr	r3, [r4, #156]	; 0x9c
   1f6f0:	sub	r3, r3, r2
   1f6f4:	str	r3, [r4, #164]	; 0xa4
   1f6f8:	sub	r3, r3, r6
   1f6fc:	str	r3, [r4, #72]	; 0x48
   1f700:	bl	124d8 <open@plt>
   1f704:	subs	fp, r0, #0
   1f708:	movwlt	r2, #7868	; 0x1ebc
   1f70c:	ldrlt	r5, [r4, #148]	; 0x94
   1f710:	movtlt	r2, #5
   1f714:	blt	1fb08 <crc32@@Base+0x57ac>
   1f718:	add	r2, sp, #48	; 0x30
   1f71c:	mov	r1, fp
   1f720:	mov	r0, #3
   1f724:	bl	12610 <__fxstat@plt>
   1f728:	cmp	r0, #0
   1f72c:	movwlt	r2, #7868	; 0x1ebc
   1f730:	ldrlt	r5, [r4, #148]	; 0x94
   1f734:	movtlt	r2, #5
   1f738:	blt	1fb48 <crc32@@Base+0x57ec>
   1f73c:	mov	r0, fp
   1f740:	bl	123b8 <close@plt>
   1f744:	ldr	ip, [r4, #136]	; 0x88
   1f748:	ldr	fp, [r4, #132]	; 0x84
   1f74c:	cmp	fp, #0
   1f750:	beq	1f788 <crc32@@Base+0x542c>
   1f754:	sub	sl, sl, ip
   1f758:	mov	r2, #0
   1f75c:	mov	r0, r7
   1f760:	mov	r1, sl
   1f764:	bl	12598 <lseek@plt>
   1f768:	cmp	r0, #0
   1f76c:	blt	1fc10 <crc32@@Base+0x58b4>
   1f770:	mov	r1, fp
   1f774:	mov	r3, #1024	; 0x400
   1f778:	mov	r2, sl
   1f77c:	mov	r0, r7
   1f780:	bl	1f25c <crc32@@Base+0x4f00>
   1f784:	ldr	ip, [r4, #136]	; 0x88
   1f788:	sub	r6, r6, ip
   1f78c:	ldr	r3, [r4, #144]	; 0x90
   1f790:	mov	r2, #0
   1f794:	mov	r0, r7
   1f798:	mov	r1, r6
   1f79c:	sub	ip, r3, ip
   1f7a0:	str	ip, [r4, #144]	; 0x90
   1f7a4:	bl	12598 <lseek@plt>
   1f7a8:	cmp	r0, #0
   1f7ac:	blt	1fb6c <crc32@@Base+0x5810>
   1f7b0:	mov	r2, #64	; 0x40
   1f7b4:	ldr	r1, [pc, #1324]	; 1fce8 <crc32@@Base+0x598c>
   1f7b8:	mov	r0, r7
   1f7bc:	bl	126c4 <write@plt>
   1f7c0:	cmp	r0, #64	; 0x40
   1f7c4:	mov	fp, r0
   1f7c8:	bne	1fbc0 <crc32@@Base+0x5864>
   1f7cc:	mov	r3, #0
   1f7d0:	ldr	r2, [r4, #144]	; 0x90
   1f7d4:	ldr	r1, [r4, #128]	; 0x80
   1f7d8:	mov	r0, r7
   1f7dc:	bl	1f25c <crc32@@Base+0x4f00>
   1f7e0:	ldr	r3, [r4, #136]	; 0x88
   1f7e4:	mov	r0, r7
   1f7e8:	sub	r8, r8, r3
   1f7ec:	add	r5, r8, r5
   1f7f0:	mov	r1, r5
   1f7f4:	bl	1f138 <crc32@@Base+0x4ddc>
   1f7f8:	ldr	r3, [r4, #148]	; 0x94
   1f7fc:	cmp	r3, #0
   1f800:	beq	1f840 <crc32@@Base+0x54e4>
   1f804:	ldr	r8, [r4, #164]	; 0xa4
   1f808:	mov	r2, #0
   1f80c:	ldr	r1, [r4, #136]	; 0x88
   1f810:	mov	r0, r7
   1f814:	str	r3, [sp, #8]
   1f818:	sub	r8, r8, r1
   1f81c:	str	r8, [r4, #164]	; 0xa4
   1f820:	mov	r1, r8
   1f824:	bl	12598 <lseek@plt>
   1f828:	ldr	r3, [sp, #8]
   1f82c:	cmp	r0, #0
   1f830:	blt	1fc60 <crc32@@Base+0x5904>
   1f834:	ldr	r2, [r4, #152]	; 0x98
   1f838:	cmp	r2, #0
   1f83c:	bne	1f9ac <crc32@@Base+0x5650>
   1f840:	mov	fp, #0
   1f844:	mov	r8, fp
   1f848:	ldr	r0, [r4, #132]	; 0x84
   1f84c:	cmp	r0, #0
   1f850:	beq	1faf4 <crc32@@Base+0x5798>
   1f854:	movw	r7, #7872	; 0x1ec0
   1f858:	movt	r7, #5
   1f85c:	mov	r0, #1
   1f860:	bl	1ef80 <crc32@@Base+0x4c24>
   1f864:	ldr	r3, [r7]
   1f868:	movw	r0, #45704	; 0xb288
   1f86c:	mov	r2, #31
   1f870:	movt	r0, #3
   1f874:	mov	r1, #1
   1f878:	bl	12634 <fwrite@plt>
   1f87c:	ldr	r3, [r4, #132]	; 0x84
   1f880:	cmp	r3, #0
   1f884:	beq	1f8b8 <crc32@@Base+0x555c>
   1f888:	ldr	r3, [r7]
   1f88c:	mov	r2, #17
   1f890:	mov	r1, #1
   1f894:	movw	r0, #45736	; 0xb2a8
   1f898:	movt	r0, #3
   1f89c:	bl	12634 <fwrite@plt>
   1f8a0:	movw	r2, #45756	; 0xb2bc
   1f8a4:	mov	r3, sl
   1f8a8:	mov	r1, #1
   1f8ac:	movt	r2, #3
   1f8b0:	ldr	r0, [r7]
   1f8b4:	bl	12358 <__fprintf_chk@plt>
   1f8b8:	ldr	r3, [r7]
   1f8bc:	mov	r2, #15
   1f8c0:	mov	r1, #1
   1f8c4:	movw	r0, #45780	; 0xb2d4
   1f8c8:	movt	r0, #3
   1f8cc:	bl	12634 <fwrite@plt>
   1f8d0:	ldr	r1, [r4, #144]	; 0x90
   1f8d4:	ldr	r0, [r7]
   1f8d8:	mov	r3, r6
   1f8dc:	str	r5, [sp, #4]
   1f8e0:	movw	r2, #45796	; 0xb2e4
   1f8e4:	str	r1, [sp]
   1f8e8:	movt	r2, #3
   1f8ec:	mov	r1, #1
   1f8f0:	sub	r5, r5, r6
   1f8f4:	bl	12358 <__fprintf_chk@plt>
   1f8f8:	ldr	r3, [r4, #84]	; 0x54
   1f8fc:	ldr	r0, [r7]
   1f900:	mov	r1, #1
   1f904:	str	r6, [sp]
   1f908:	movw	r2, #45856	; 0xb320
   1f90c:	str	r5, [sp, #4]
   1f910:	movt	r2, #3
   1f914:	bl	12358 <__fprintf_chk@plt>
   1f918:	ldr	r3, [r7]
   1f91c:	mov	r2, #22
   1f920:	mov	r1, #1
   1f924:	movw	r0, #45892	; 0xb344
   1f928:	movt	r0, #3
   1f92c:	bl	12634 <fwrite@plt>
   1f930:	ldr	r3, [r4, #164]	; 0xa4
   1f934:	mov	r1, #1
   1f938:	movw	r2, #45916	; 0xb35c
   1f93c:	ldr	r0, [r7]
   1f940:	movt	r2, #3
   1f944:	bl	12358 <__fprintf_chk@plt>
   1f948:	mov	r3, r8
   1f94c:	mov	r1, #1
   1f950:	movw	r2, #45940	; 0xb374
   1f954:	ldr	r0, [r7]
   1f958:	movt	r2, #3
   1f95c:	bl	12358 <__fprintf_chk@plt>
   1f960:	ldr	r1, [r4, #164]	; 0xa4
   1f964:	ldr	r0, [r7]
   1f968:	mov	r3, fp
   1f96c:	sub	r8, r8, r1
   1f970:	movw	r2, #45964	; 0xb38c
   1f974:	str	r1, [sp]
   1f978:	movt	r2, #3
   1f97c:	str	r8, [sp, #4]
   1f980:	mov	r1, #1
   1f984:	bl	12358 <__fprintf_chk@plt>
   1f988:	ldr	r2, [sp, #204]	; 0xcc
   1f98c:	ldr	r3, [r9]
   1f990:	cmp	r2, r3
   1f994:	bne	1fbbc <crc32@@Base+0x5860>
   1f998:	add	sp, sp, #212	; 0xd4
   1f99c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f9a0:	mov	r5, r0
   1f9a4:	mov	sl, r0
   1f9a8:	b	1f620 <crc32@@Base+0x52c4>
   1f9ac:	mov	r2, r8
   1f9b0:	mov	r1, r3
   1f9b4:	mov	r0, r7
   1f9b8:	mov	r3, #0
   1f9bc:	bl	1f25c <crc32@@Base+0x4f00>
   1f9c0:	ldr	r8, [r4, #164]	; 0xa4
   1f9c4:	ldr	r3, [r4, #168]	; 0xa8
   1f9c8:	mov	r2, #0
   1f9cc:	mov	r0, r7
   1f9d0:	mov	r1, r8
   1f9d4:	str	r3, [sp, #8]
   1f9d8:	bl	12598 <lseek@plt>
   1f9dc:	cmp	r0, #0
   1f9e0:	blt	1fc38 <crc32@@Base+0x58dc>
   1f9e4:	mov	r2, fp
   1f9e8:	add	r1, sp, #140	; 0x8c
   1f9ec:	mov	r0, r7
   1f9f0:	bl	123e8 <read@plt>
   1f9f4:	cmp	r0, #64	; 0x40
   1f9f8:	bne	1fcb0 <crc32@@Base+0x5954>
   1f9fc:	ldr	r2, [sp, #140]	; 0x8c
   1fa00:	mov	r3, #3536	; 0xdd0
   1fa04:	movt	r3, #60926	; 0xedfe
   1fa08:	cmp	r2, r3
   1fa0c:	bne	1fc88 <crc32@@Base+0x592c>
   1fa10:	ldr	lr, [sp, #144]	; 0x90
   1fa14:	mov	r2, #0
   1fa18:	mov	r0, r7
   1fa1c:	ubfx	ip, lr, #8, #8
   1fa20:	ubfx	r1, lr, #16, #8
   1fa24:	lsr	r3, lr, #24
   1fa28:	orr	r3, r3, lr, lsl #24
   1fa2c:	orr	r3, r3, ip, lsl #16
   1fa30:	orr	r3, r3, r1, lsl #8
   1fa34:	add	r3, r3, #3
   1fa38:	bic	r3, r3, #3
   1fa3c:	add	r3, r3, #4080	; 0xff0
   1fa40:	add	r3, r3, #15
   1fa44:	bic	r3, r3, #4080	; 0xff0
   1fa48:	bic	r3, r3, #15
   1fa4c:	str	r3, [sp, #12]
   1fa50:	add	r8, r8, r3
   1fa54:	mov	r1, r8
   1fa58:	bl	12598 <lseek@plt>
   1fa5c:	ldr	r3, [sp, #12]
   1fa60:	cmp	r0, #0
   1fa64:	blt	1fc38 <crc32@@Base+0x58dc>
   1fa68:	ldr	r2, [sp, #8]
   1fa6c:	mov	r0, r7
   1fa70:	add	r1, sp, #16
   1fa74:	sub	fp, r2, #8704	; 0x2200
   1fa78:	mov	r2, #32
   1fa7c:	sub	fp, fp, #63	; 0x3f
   1fa80:	sub	fp, fp, r3
   1fa84:	bic	fp, fp, #63	; 0x3f
   1fa88:	str	fp, [sp, #20]
   1fa8c:	add	r3, r3, fp
   1fa90:	str	r3, [sp, #36]	; 0x24
   1fa94:	add	r3, r3, r2
   1fa98:	str	r3, [sp, #40]	; 0x28
   1fa9c:	mov	r3, #209	; 0xd1
   1faa0:	movt	r3, #16416	; 0x4020
   1faa4:	str	r3, [sp, #16]
   1faa8:	mov	r3, #0
   1faac:	str	r3, [sp, #24]
   1fab0:	str	r3, [sp, #28]
   1fab4:	str	r3, [sp, #32]
   1fab8:	str	r3, [sp, #44]	; 0x2c
   1fabc:	bl	126c4 <write@plt>
   1fac0:	cmp	r0, #32
   1fac4:	addeq	r8, r8, #32
   1fac8:	beq	1f848 <crc32@@Base+0x54ec>
   1facc:	movw	r3, #7868	; 0x1ebc
   1fad0:	movt	r3, #5
   1fad4:	movw	r0, #45672	; 0xb268
   1fad8:	mov	r2, #31
   1fadc:	ldr	r3, [r3]
   1fae0:	movt	r0, #3
   1fae4:	mov	r1, #1
   1fae8:	bl	12634 <fwrite@plt>
   1faec:	mov	r0, #1
   1faf0:	bl	12298 <exit@plt>
   1faf4:	bl	1ef80 <crc32@@Base+0x4c24>
   1faf8:	b	1f854 <crc32@@Base+0x54f8>
   1fafc:	ldr	r5, [r4, #128]	; 0x80
   1fb00:	movw	r2, #7868	; 0x1ebc
   1fb04:	movt	r2, #5
   1fb08:	ldr	r4, [r2]
   1fb0c:	bl	12748 <__errno_location@plt>
   1fb10:	ldr	r0, [r0]
   1fb14:	bl	122a4 <strerror@plt>
   1fb18:	movw	r2, #43072	; 0xa840
   1fb1c:	movt	r2, #3
   1fb20:	mov	r3, r5
   1fb24:	mov	r1, #1
   1fb28:	str	r0, [sp]
   1fb2c:	mov	r0, r4
   1fb30:	bl	12358 <__fprintf_chk@plt>
   1fb34:	mov	r0, #1
   1fb38:	bl	12298 <exit@plt>
   1fb3c:	ldr	r5, [r4, #132]	; 0x84
   1fb40:	movw	r2, #7868	; 0x1ebc
   1fb44:	movt	r2, #5
   1fb48:	ldr	r4, [r2]
   1fb4c:	bl	12748 <__errno_location@plt>
   1fb50:	ldr	r0, [r0]
   1fb54:	bl	122a4 <strerror@plt>
   1fb58:	movw	r2, #43092	; 0xa854
   1fb5c:	mov	r3, r5
   1fb60:	mov	r1, #1
   1fb64:	movt	r2, #3
   1fb68:	b	1fb28 <crc32@@Base+0x57cc>
   1fb6c:	movw	r3, #7868	; 0x1ebc
   1fb70:	movt	r3, #5
   1fb74:	movw	r0, #45536	; 0xb1e0
   1fb78:	mov	r2, #15
   1fb7c:	ldr	r3, [r3]
   1fb80:	movt	r0, #3
   1fb84:	mov	r1, #1
   1fb88:	bl	12634 <fwrite@plt>
   1fb8c:	mov	r0, #1
   1fb90:	bl	12298 <exit@plt>
   1fb94:	movw	r3, #7868	; 0x1ebc
   1fb98:	movt	r3, #5
   1fb9c:	movw	r0, #45460	; 0xb194
   1fba0:	mov	r2, #27
   1fba4:	ldr	r3, [r3]
   1fba8:	movt	r0, #3
   1fbac:	mov	r1, #1
   1fbb0:	bl	12634 <fwrite@plt>
   1fbb4:	mov	r0, #1
   1fbb8:	bl	12298 <exit@plt>
   1fbbc:	bl	12538 <__stack_chk_fail@plt>
   1fbc0:	movw	r3, #7868	; 0x1ebc
   1fbc4:	movt	r3, #5
   1fbc8:	movw	r0, #44176	; 0xac90
   1fbcc:	mov	r2, #24
   1fbd0:	ldr	r3, [r3]
   1fbd4:	movt	r0, #3
   1fbd8:	mov	r1, #1
   1fbdc:	bl	12634 <fwrite@plt>
   1fbe0:	mov	r0, #1
   1fbe4:	bl	12298 <exit@plt>
   1fbe8:	movw	r3, #7868	; 0x1ebc
   1fbec:	movt	r3, #5
   1fbf0:	movw	r0, #45488	; 0xb1b0
   1fbf4:	mov	r2, #19
   1fbf8:	ldr	r3, [r3]
   1fbfc:	movt	r0, #3
   1fc00:	mov	r1, #1
   1fc04:	bl	12634 <fwrite@plt>
   1fc08:	mov	r0, #1
   1fc0c:	bl	12298 <exit@plt>
   1fc10:	movw	r3, #7868	; 0x1ebc
   1fc14:	movt	r3, #5
   1fc18:	movw	r0, #45508	; 0xb1c4
   1fc1c:	mov	r2, #24
   1fc20:	ldr	r3, [r3]
   1fc24:	movt	r0, #3
   1fc28:	mov	r1, #1
   1fc2c:	bl	12634 <fwrite@plt>
   1fc30:	mov	r0, #1
   1fc34:	bl	12298 <exit@plt>
   1fc38:	movw	r3, #7868	; 0x1ebc
   1fc3c:	movt	r3, #5
   1fc40:	movw	r0, #45580	; 0xb20c
   1fc44:	mov	r2, #22
   1fc48:	ldr	r3, [r3]
   1fc4c:	movt	r0, #3
   1fc50:	mov	r1, #1
   1fc54:	bl	12634 <fwrite@plt>
   1fc58:	mov	r0, #1
   1fc5c:	bl	12298 <exit@plt>
   1fc60:	movw	r3, #7868	; 0x1ebc
   1fc64:	movt	r3, #5
   1fc68:	movw	r0, #45552	; 0xb1f0
   1fc6c:	mov	r2, #27
   1fc70:	ldr	r3, [r3]
   1fc74:	movt	r0, #3
   1fc78:	mov	r1, #1
   1fc7c:	bl	12634 <fwrite@plt>
   1fc80:	mov	r0, #1
   1fc84:	bl	12298 <exit@plt>
   1fc88:	movw	r1, #7868	; 0x1ebc
   1fc8c:	movt	r1, #5
   1fc90:	movw	r2, #45644	; 0xb24c
   1fc94:	ldr	r3, [pc, #80]	; 1fcec <crc32@@Base+0x5990>
   1fc98:	ldr	r0, [r1]
   1fc9c:	movt	r2, #3
   1fca0:	mov	r1, #1
   1fca4:	bl	12358 <__fprintf_chk@plt>
   1fca8:	mov	r0, #1
   1fcac:	bl	12298 <exit@plt>
   1fcb0:	movw	r3, #7868	; 0x1ebc
   1fcb4:	movt	r3, #5
   1fcb8:	ldr	r4, [r3]
   1fcbc:	bl	12748 <__errno_location@plt>
   1fcc0:	ldr	r0, [r0]
   1fcc4:	bl	122a4 <strerror@plt>
   1fcc8:	movw	r2, #45604	; 0xb224
   1fccc:	mov	r1, #1
   1fcd0:	movt	r2, #3
   1fcd4:	mov	r3, r0
   1fcd8:	mov	r0, r4
   1fcdc:	bl	12358 <__fprintf_chk@plt>
   1fce0:	mov	r0, #1
   1fce4:	bl	12298 <exit@plt>
   1fce8:	andeq	r2, r6, r4, ror #24
   1fcec:	andeq	fp, r3, r8
   1fcf0:	movw	r3, #3824	; 0xef0
   1fcf4:	movt	r3, #5
   1fcf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcfc:	movw	r2, #7872	; 0x1ec0
   1fd00:	sub	sp, sp, #52	; 0x34
   1fd04:	ldr	ip, [r3]
   1fd08:	movt	r2, #5
   1fd0c:	mov	r4, r1
   1fd10:	str	r3, [sp, #20]
   1fd14:	mov	r6, #0
   1fd18:	ldr	r3, [r1, #64]	; 0x40
   1fd1c:	mov	r1, #1
   1fd20:	str	r0, [sp, #16]
   1fd24:	ldr	r0, [r2]
   1fd28:	movw	r2, #44204	; 0xacac
   1fd2c:	movt	r2, #3
   1fd30:	str	ip, [sp, #44]	; 0x2c
   1fd34:	bl	12358 <__fprintf_chk@plt>
   1fd38:	ldr	r3, [r4, #64]	; 0x40
   1fd3c:	movw	r1, #53956	; 0xd2c4
   1fd40:	movt	r1, #3
   1fd44:	str	r6, [sp, #28]
   1fd48:	mov	r0, r3
   1fd4c:	str	r3, [sp, #12]
   1fd50:	bl	123d0 <fopen@plt>
   1fd54:	subs	r3, r0, #0
   1fd58:	str	r3, [sp, #8]
   1fd5c:	movwne	sl, #29960	; 0x7508
   1fd60:	movwne	r8, #11300	; 0x2c24
   1fd64:	movtne	sl, #3
   1fd68:	movtne	r8, #6
   1fd6c:	beq	20274 <crc32@@Base+0x5f18>
   1fd70:	ldr	r3, [sp, #8]
   1fd74:	mov	r2, #10
   1fd78:	add	r1, sp, #40	; 0x28
   1fd7c:	add	r0, sp, #28
   1fd80:	bl	121cc <__getdelim@plt>
   1fd84:	cmp	r0, #0
   1fd88:	ble	201f8 <crc32@@Base+0x5e9c>
   1fd8c:	add	r2, sp, #32
   1fd90:	mov	r1, sl
   1fd94:	ldr	r0, [sp, #28]
   1fd98:	add	r6, r6, #1
   1fd9c:	bl	122c8 <__strtok_r@plt>
   1fda0:	cmp	r0, #0
   1fda4:	beq	1fd70 <crc32@@Base+0x5a14>
   1fda8:	movw	r5, #29964	; 0x750c
   1fdac:	movw	r9, #46020	; 0xb3c4
   1fdb0:	movt	r5, #3
   1fdb4:	movt	r9, #3
   1fdb8:	mvn	r7, #0
   1fdbc:	mov	fp, #0
   1fdc0:	str	r0, [sp, #28]
   1fdc4:	add	r2, sp, #36	; 0x24
   1fdc8:	mov	r1, r5
   1fdcc:	bl	122c8 <__strtok_r@plt>
   1fdd0:	subs	r4, r0, #0
   1fdd4:	beq	1fd70 <crc32@@Base+0x5a14>
   1fdd8:	ldrb	r3, [r4]
   1fddc:	cmp	r3, #35	; 0x23
   1fde0:	beq	1fd70 <crc32@@Base+0x5a14>
   1fde4:	cmp	fp, #3
   1fde8:	ldrls	pc, [pc, fp, lsl #2]
   1fdec:	b	1ff2c <crc32@@Base+0x5bd0>
   1fdf0:	andeq	pc, r1, r0, lsl #28
   1fdf4:	andeq	pc, r1, ip, asr #28
   1fdf8:	andeq	r0, r2, r4, ror #3
   1fdfc:	strdeq	pc, [r1], -r4
   1fe00:	movw	r1, #46000	; 0xb3b0
   1fe04:	movw	r0, #6028	; 0x178c
   1fe08:	movt	r1, #3
   1fe0c:	movt	r0, #5
   1fe10:	mov	r2, r4
   1fe14:	bl	1b1d8 <crc32@@Base+0xe7c>
   1fe18:	subs	r7, r0, #0
   1fe1c:	blt	20244 <crc32@@Base+0x5ee8>
   1fe20:	mov	r3, #0
   1fe24:	add	r2, sp, #36	; 0x24
   1fe28:	mov	r0, r3
   1fe2c:	mov	r1, r5
   1fe30:	str	r3, [sp, #28]
   1fe34:	bl	122c8 <__strtok_r@plt>
   1fe38:	subs	r4, r0, #0
   1fe3c:	beq	1fd70 <crc32@@Base+0x5a14>
   1fe40:	ldrb	r3, [r4]
   1fe44:	cmp	r3, #35	; 0x23
   1fe48:	beq	1fd70 <crc32@@Base+0x5a14>
   1fe4c:	sub	r3, r7, #2
   1fe50:	cmp	r3, #12
   1fe54:	ldrls	pc, [pc, r3, lsl #2]
   1fe58:	b	201b8 <crc32@@Base+0x5e5c>
   1fe5c:	andeq	r0, r2, r8
   1fe60:			; <UNDEFINED> instruction: 0x000201b8
   1fe64:			; <UNDEFINED> instruction: 0x000201b8
   1fe68:			; <UNDEFINED> instruction: 0x000201b8
   1fe6c:			; <UNDEFINED> instruction: 0x000201b8
   1fe70:			; <UNDEFINED> instruction: 0x000201b8
   1fe74:			; <UNDEFINED> instruction: 0x000201b8
   1fe78:			; <UNDEFINED> instruction: 0x000201b8
   1fe7c:			; <UNDEFINED> instruction: 0x000201b8
   1fe80:	muleq	r1, r4, lr
   1fe84:	muleq	r1, r0, lr
   1fe88:	andeq	pc, r1, ip, lsr pc	; <UNPREDICTABLE>
   1fe8c:	andeq	r0, r2, ip, lsr #1
   1fe90:	str	r4, [r8, #132]	; 0x84
   1fe94:	mov	r3, #0
   1fe98:	add	r2, sp, #36	; 0x24
   1fe9c:	mov	r0, r3
   1fea0:	mov	r1, r5
   1fea4:	str	r3, [sp, #28]
   1fea8:	mov	r3, #1
   1feac:	str	r3, [r8, #152]	; 0x98
   1feb0:	bl	122c8 <__strtok_r@plt>
   1feb4:	cmp	r0, #0
   1feb8:	beq	1fd70 <crc32@@Base+0x5a14>
   1febc:	ldrb	r3, [r0]
   1fec0:	cmp	r3, #35	; 0x23
   1fec4:	beq	1fd70 <crc32@@Base+0x5a14>
   1fec8:	mov	r3, #0
   1fecc:	add	r2, sp, #36	; 0x24
   1fed0:	mov	r0, r3
   1fed4:	mov	r1, r5
   1fed8:	str	r3, [sp, #28]
   1fedc:	bl	122c8 <__strtok_r@plt>
   1fee0:	subs	r4, r0, #0
   1fee4:	beq	1fd70 <crc32@@Base+0x5a14>
   1fee8:	ldrb	r3, [r4]
   1feec:	cmp	r3, #35	; 0x23
   1fef0:	beq	1fd70 <crc32@@Base+0x5a14>
   1fef4:	cmp	r7, #14
   1fef8:	beq	2011c <crc32@@Base+0x5dc0>
   1fefc:	mov	r3, #0
   1ff00:	add	r2, sp, #36	; 0x24
   1ff04:	mov	r0, r3
   1ff08:	mov	r1, r5
   1ff0c:	str	r3, [sp, #28]
   1ff10:	bl	122c8 <__strtok_r@plt>
   1ff14:	cmp	r0, #0
   1ff18:	beq	1fd70 <crc32@@Base+0x5a14>
   1ff1c:	ldrb	r3, [r0]
   1ff20:	cmp	r3, #35	; 0x23
   1ff24:	beq	1fd70 <crc32@@Base+0x5a14>
   1ff28:	mov	fp, #4
   1ff2c:	mov	r0, #0
   1ff30:	add	fp, fp, #1
   1ff34:	str	r0, [sp, #28]
   1ff38:	b	1fdc4 <crc32@@Base+0x5a68>
   1ff3c:	mov	r3, #0
   1ff40:	add	r2, sp, #36	; 0x24
   1ff44:	mov	r0, r3
   1ff48:	mov	r1, r5
   1ff4c:	str	r4, [r8, #128]	; 0x80
   1ff50:	str	r3, [sp, #28]
   1ff54:	bl	122c8 <__strtok_r@plt>
   1ff58:	subs	r4, r0, #0
   1ff5c:	beq	1fd70 <crc32@@Base+0x5a14>
   1ff60:	ldrb	r3, [r4]
   1ff64:	cmp	r3, #35	; 0x23
   1ff68:	beq	1fd70 <crc32@@Base+0x5a14>
   1ff6c:	mov	r0, r4
   1ff70:	mov	r2, r6
   1ff74:	ldr	r1, [sp, #12]
   1ff78:	mov	r4, #0
   1ff7c:	bl	1eed8 <crc32@@Base+0x4b7c>
   1ff80:	add	r2, sp, #36	; 0x24
   1ff84:	mov	r1, r5
   1ff88:	str	r4, [sp, #28]
   1ff8c:	str	r0, [r8, #140]	; 0x8c
   1ff90:	mov	r0, r4
   1ff94:	bl	122c8 <__strtok_r@plt>
   1ff98:	cmp	r0, #0
   1ff9c:	beq	1fd70 <crc32@@Base+0x5a14>
   1ffa0:	ldrb	r3, [r0]
   1ffa4:	cmp	r3, #35	; 0x23
   1ffa8:	beq	1fd70 <crc32@@Base+0x5a14>
   1ffac:	add	r2, sp, #36	; 0x24
   1ffb0:	mov	r1, r5
   1ffb4:	mov	r0, r4
   1ffb8:	str	r4, [sp, #28]
   1ffbc:	bl	122c8 <__strtok_r@plt>
   1ffc0:	cmp	r0, #0
   1ffc4:	beq	1fd70 <crc32@@Base+0x5a14>
   1ffc8:	ldrb	r3, [r0]
   1ffcc:	cmp	r3, #35	; 0x23
   1ffd0:	beq	1fd70 <crc32@@Base+0x5a14>
   1ffd4:	mov	r0, r4
   1ffd8:	add	r2, sp, #36	; 0x24
   1ffdc:	mov	r1, r5
   1ffe0:	str	r4, [sp, #28]
   1ffe4:	bl	122c8 <__strtok_r@plt>
   1ffe8:	cmp	r0, #0
   1ffec:	beq	1fd70 <crc32@@Base+0x5a14>
   1fff0:	ldrb	r3, [r0]
   1fff4:	cmp	r3, #35	; 0x23
   1fff8:	beq	1fd70 <crc32@@Base+0x5a14>
   1fffc:	mov	r7, #13
   20000:	mov	fp, #5
   20004:	b	1ff2c <crc32@@Base+0x5bd0>
   20008:	mov	r2, r4
   2000c:	mov	r1, r9
   20010:	ldr	r0, [pc, #648]	; 202a0 <crc32@@Base+0x5f44>
   20014:	bl	1b1d8 <crc32@@Base+0xe7c>
   20018:	movw	r1, #40680	; 0x9ee8
   2001c:	mov	r2, #2
   20020:	movt	r1, #3
   20024:	str	r0, [r8, #136]	; 0x88
   20028:	mov	r0, r4
   2002c:	bl	12220 <strncmp@plt>
   20030:	subs	r4, r0, #0
   20034:	beq	20220 <crc32@@Base+0x5ec4>
   20038:	mov	r4, #0
   2003c:	add	r2, sp, #36	; 0x24
   20040:	mov	r0, r4
   20044:	mov	r1, r5
   20048:	str	r4, [sp, #28]
   2004c:	bl	122c8 <__strtok_r@plt>
   20050:	cmp	r0, #0
   20054:	beq	1fd70 <crc32@@Base+0x5a14>
   20058:	ldrb	r3, [r0]
   2005c:	cmp	r3, #35	; 0x23
   20060:	beq	1fd70 <crc32@@Base+0x5a14>
   20064:	add	r2, sp, #36	; 0x24
   20068:	mov	r1, r5
   2006c:	mov	r0, r4
   20070:	str	r4, [sp, #28]
   20074:	bl	122c8 <__strtok_r@plt>
   20078:	cmp	r0, #0
   2007c:	beq	1fd70 <crc32@@Base+0x5a14>
   20080:	ldrb	r3, [r0]
   20084:	cmp	r3, #35	; 0x23
   20088:	beq	1fd70 <crc32@@Base+0x5a14>
   2008c:	mov	r0, r4
   20090:	add	r2, sp, #36	; 0x24
   20094:	mov	r1, r5
   20098:	str	r4, [sp, #28]
   2009c:	bl	122c8 <__strtok_r@plt>
   200a0:	cmp	r0, #0
   200a4:	bne	1ff1c <crc32@@Base+0x5bc0>
   200a8:	b	1fd70 <crc32@@Base+0x5a14>
   200ac:	mov	r3, #0
   200b0:	add	r2, sp, #36	; 0x24
   200b4:	mov	r0, r3
   200b8:	mov	r1, r5
   200bc:	str	r4, [r8, #148]	; 0x94
   200c0:	str	r3, [sp, #28]
   200c4:	bl	122c8 <__strtok_r@plt>
   200c8:	subs	r4, r0, #0
   200cc:	beq	1fd70 <crc32@@Base+0x5a14>
   200d0:	ldrb	r3, [r4]
   200d4:	cmp	r3, #35	; 0x23
   200d8:	beq	1fd70 <crc32@@Base+0x5a14>
   200dc:	mov	r0, r4
   200e0:	mov	r2, r6
   200e4:	ldr	r1, [sp, #12]
   200e8:	bl	1eed8 <crc32@@Base+0x4b7c>
   200ec:	mov	r3, #0
   200f0:	add	r2, sp, #36	; 0x24
   200f4:	mov	r1, r5
   200f8:	str	r3, [sp, #28]
   200fc:	str	r0, [r8, #168]	; 0xa8
   20100:	mov	r0, r3
   20104:	bl	122c8 <__strtok_r@plt>
   20108:	subs	r4, r0, #0
   2010c:	beq	1fd70 <crc32@@Base+0x5a14>
   20110:	ldrb	r3, [r4]
   20114:	cmp	r3, #35	; 0x23
   20118:	beq	1fd70 <crc32@@Base+0x5a14>
   2011c:	mov	r0, r4
   20120:	mov	r2, r6
   20124:	ldr	r1, [sp, #12]
   20128:	mov	r4, #0
   2012c:	bl	1eed8 <crc32@@Base+0x4b7c>
   20130:	add	r2, sp, #36	; 0x24
   20134:	mov	r1, r5
   20138:	str	r4, [sp, #28]
   2013c:	str	r0, [r8, #156]	; 0x9c
   20140:	mov	r0, r4
   20144:	bl	122c8 <__strtok_r@plt>
   20148:	cmp	r0, #0
   2014c:	beq	1fd70 <crc32@@Base+0x5a14>
   20150:	ldrb	r3, [r0]
   20154:	cmp	r3, #35	; 0x23
   20158:	beq	1fd70 <crc32@@Base+0x5a14>
   2015c:	add	r2, sp, #36	; 0x24
   20160:	mov	r1, r5
   20164:	mov	r0, r4
   20168:	str	r4, [sp, #28]
   2016c:	bl	122c8 <__strtok_r@plt>
   20170:	cmp	r0, #0
   20174:	beq	1fd70 <crc32@@Base+0x5a14>
   20178:	ldrb	r3, [r0]
   2017c:	cmp	r3, #35	; 0x23
   20180:	beq	1fd70 <crc32@@Base+0x5a14>
   20184:	mov	r0, r4
   20188:	add	r2, sp, #36	; 0x24
   2018c:	mov	r1, r5
   20190:	str	r4, [sp, #28]
   20194:	bl	122c8 <__strtok_r@plt>
   20198:	cmp	r0, #0
   2019c:	beq	1fd70 <crc32@@Base+0x5a14>
   201a0:	ldrb	r3, [r0]
   201a4:	cmp	r3, #35	; 0x23
   201a8:	beq	1fd70 <crc32@@Base+0x5a14>
   201ac:	mov	r7, #14
   201b0:	mov	fp, #6
   201b4:	b	1ff2c <crc32@@Base+0x5bd0>
   201b8:	mov	r3, #0
   201bc:	add	r2, sp, #36	; 0x24
   201c0:	mov	r0, r3
   201c4:	mov	r1, r5
   201c8:	str	r3, [sp, #28]
   201cc:	bl	122c8 <__strtok_r@plt>
   201d0:	subs	r4, r0, #0
   201d4:	beq	1fd70 <crc32@@Base+0x5a14>
   201d8:	ldrb	r3, [r4]
   201dc:	cmp	r3, #35	; 0x23
   201e0:	beq	1fd70 <crc32@@Base+0x5a14>
   201e4:	cmp	r7, #13
   201e8:	beq	1ff6c <crc32@@Base+0x5c10>
   201ec:	cmp	r7, #14
   201f0:	beq	200dc <crc32@@Base+0x5d80>
   201f4:	b	1fec8 <crc32@@Base+0x5b6c>
   201f8:	ldr	r0, [sp, #16]
   201fc:	bl	1f56c <crc32@@Base+0x5210>
   20200:	ldr	r3, [sp, #20]
   20204:	ldr	r2, [sp, #44]	; 0x2c
   20208:	mov	r0, #0
   2020c:	ldr	r3, [r3]
   20210:	cmp	r2, r3
   20214:	bne	2029c <crc32@@Base+0x5f40>
   20218:	add	sp, sp, #52	; 0x34
   2021c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20220:	add	r2, sp, #36	; 0x24
   20224:	mov	r1, r5
   20228:	mov	r3, #32768	; 0x8000
   2022c:	str	r4, [sp, #28]
   20230:	str	r3, [r8, #160]	; 0xa0
   20234:	bl	122c8 <__strtok_r@plt>
   20238:	cmp	r0, #0
   2023c:	bne	20058 <crc32@@Base+0x5cfc>
   20240:	b	1fd70 <crc32@@Base+0x5a14>
   20244:	movw	r2, #7868	; 0x1ebc
   20248:	movt	r2, #5
   2024c:	str	r4, [sp, #4]
   20250:	mov	r1, #1
   20254:	ldr	r0, [r2]
   20258:	movw	r2, #29988	; 0x7524
   2025c:	ldr	r3, [sp, #12]
   20260:	movt	r2, #3
   20264:	str	r6, [sp]
   20268:	bl	12358 <__fprintf_chk@plt>
   2026c:	mov	r0, #1
   20270:	bl	12298 <exit@plt>
   20274:	movw	r1, #7868	; 0x1ebc
   20278:	movt	r1, #5
   2027c:	ldr	r3, [sp, #12]
   20280:	movw	r2, #44216	; 0xacb8
   20284:	ldr	r0, [r1]
   20288:	movt	r2, #3
   2028c:	mov	r1, #1
   20290:	bl	12358 <__fprintf_chk@plt>
   20294:	mov	r0, #1
   20298:	bl	12298 <exit@plt>
   2029c:	bl	12538 <__stack_chk_fail@plt>
   202a0:	andeq	r1, r5, r0, ror #15
   202a4:	subs	r0, r0, #9
   202a8:	movne	r0, #1
   202ac:	bx	lr
   202b0:	movw	r3, #6204	; 0x183c
   202b4:	movt	r3, #5
   202b8:	push	{r4, lr}
   202bc:	mov	r4, r0
   202c0:	ldr	r2, [r3, #4]
   202c4:	ldrb	r0, [r0]
   202c8:	cmp	r2, #0
   202cc:	beq	202f8 <crc32@@Base+0x5f9c>
   202d0:	ldr	r1, [r3]
   202d4:	cmp	r0, r1
   202d8:	bne	202ec <crc32@@Base+0x5f90>
   202dc:	b	202f8 <crc32@@Base+0x5f9c>
   202e0:	ldr	r1, [r3, #8]!
   202e4:	cmp	r0, r1
   202e8:	beq	202f8 <crc32@@Base+0x5f9c>
   202ec:	ldr	r2, [r3, #12]
   202f0:	cmp	r2, #0
   202f4:	bne	202e0 <crc32@@Base+0x5f84>
   202f8:	movw	r1, #46288	; 0xb4d0
   202fc:	mov	r0, #1
   20300:	movt	r1, #3
   20304:	bl	1282c <__printf_chk@plt>
   20308:	ldrb	r2, [r4, #8]
   2030c:	movw	r1, #46328	; 0xb4f8
   20310:	mov	r0, #1
   20314:	movt	r1, #3
   20318:	bl	1282c <__printf_chk@plt>
   2031c:	movw	r1, #34352	; 0x8630
   20320:	mov	r0, #1
   20324:	movt	r1, #3
   20328:	bl	1282c <__printf_chk@plt>
   2032c:	ldr	r0, [r4, #4]
   20330:	sub	r0, r0, #4
   20334:	bl	1a944 <crc32@@Base+0x5e8>
   20338:	ldr	r2, [r4, #16]
   2033c:	movw	r1, #41672	; 0xa2c8
   20340:	mov	r0, #1
   20344:	movt	r1, #3
   20348:	bl	1282c <__printf_chk@plt>
   2034c:	ldr	r2, [r4, #20]
   20350:	movw	r1, #41692	; 0xa2dc
   20354:	mov	r0, #1
   20358:	movt	r1, #3
   2035c:	pop	{r4, lr}
   20360:	b	1282c <__printf_chk@plt>
   20364:	add	r1, r0, r1
   20368:	mov	r3, #0
   2036c:	ldrb	r2, [r0], #1
   20370:	add	r3, r3, r2
   20374:	cmp	r0, r1
   20378:	uxtb	r3, r3
   2037c:	bne	2036c <crc32@@Base+0x6010>
   20380:	mov	r0, r3
   20384:	bx	lr
   20388:	ldr	r3, [r0, #64]	; 0x40
   2038c:	ldrb	r3, [r3]
   20390:	cmp	r3, #0
   20394:	beq	203dc <crc32@@Base+0x6080>
   20398:	ldr	r2, [r0]
   2039c:	ldr	r3, [r0, #8]
   203a0:	cmp	r2, #0
   203a4:	beq	203c4 <crc32@@Base+0x6068>
   203a8:	cmp	r3, #0
   203ac:	bne	203bc <crc32@@Base+0x6060>
   203b0:	ldr	r3, [r0, #16]
   203b4:	cmp	r3, #0
   203b8:	beq	203cc <crc32@@Base+0x6070>
   203bc:	mov	r0, #1
   203c0:	bx	lr
   203c4:	cmp	r3, #0
   203c8:	bne	203b0 <crc32@@Base+0x6054>
   203cc:	ldr	r0, [r0, #28]
   203d0:	adds	r0, r0, #0
   203d4:	movne	r0, #1
   203d8:	bx	lr
   203dc:	push	{lr}		; (str lr, [sp, #-4]!)
   203e0:	movw	r2, #7868	; 0x1ebc
   203e4:	sub	sp, sp, #12
   203e8:	movt	r2, #5
   203ec:	ldr	r3, [r0, #80]	; 0x50
   203f0:	movw	r1, #46364	; 0xb51c
   203f4:	ldr	r0, [r2]
   203f8:	movt	r1, #3
   203fc:	movw	r2, #46348	; 0xb50c
   20400:	str	r1, [sp]
   20404:	movt	r2, #3
   20408:	mov	r1, #1
   2040c:	bl	12358 <__fprintf_chk@plt>
   20410:	mvn	r0, #0
   20414:	add	sp, sp, #12
   20418:	pop	{pc}		; (ldr pc, [sp], #4)
   2041c:	push	{r4, r5, r6, r7, lr}
   20420:	movw	lr, #11472	; 0x2cd0
   20424:	movt	lr, #6
   20428:	sub	sp, sp, #4160	; 0x1040
   2042c:	movw	r4, #3824	; 0xef0
   20430:	movt	r4, #5
   20434:	sub	sp, sp, #44	; 0x2c
   20438:	ldr	r6, [lr]
   2043c:	add	r2, sp, #4160	; 0x1040
   20440:	ldr	r3, [r4]
   20444:	add	r2, r2, #36	; 0x24
   20448:	cmp	r6, #0
   2044c:	str	r3, [r2]
   20450:	ble	2055c <crc32@@Base+0x6200>
   20454:	ldr	r2, [lr, #4]
   20458:	mov	r5, r0
   2045c:	mov	r0, #44	; 0x2c
   20460:	mov	ip, #0
   20464:	mla	r0, r0, r6, r2
   20468:	mov	r3, r2
   2046c:	ldr	r1, [r3]
   20470:	add	r3, r3, #44	; 0x2c
   20474:	cmp	r1, #9
   20478:	addeq	ip, ip, #1
   2047c:	cmp	r3, r0
   20480:	bne	2046c <crc32@@Base+0x6110>
   20484:	cmp	ip, #1
   20488:	bls	204d4 <crc32@@Base+0x6178>
   2048c:	movw	r3, #7868	; 0x1ebc
   20490:	movt	r3, #5
   20494:	movw	r0, #46444	; 0xb56c
   20498:	mov	r2, #41	; 0x29
   2049c:	ldr	r3, [r3]
   204a0:	movt	r0, #3
   204a4:	mov	r1, #1
   204a8:	bl	12634 <fwrite@plt>
   204ac:	mov	r0, #0
   204b0:	add	r3, sp, #4160	; 0x1040
   204b4:	add	r3, r3, #36	; 0x24
   204b8:	ldr	r2, [r3]
   204bc:	ldr	r3, [r4]
   204c0:	cmp	r2, r3
   204c4:	bne	2061c <crc32@@Base+0x62c0>
   204c8:	add	sp, sp, #4160	; 0x1040
   204cc:	add	sp, sp, #44	; 0x2c
   204d0:	pop	{r4, r5, r6, r7, pc}
   204d4:	mov	r0, #0
   204d8:	ldr	r1, [r2]
   204dc:	add	r2, r2, #44	; 0x2c
   204e0:	cmp	r1, #10
   204e4:	addeq	r0, r0, #1
   204e8:	cmp	r3, r2
   204ec:	bne	204d8 <crc32@@Base+0x617c>
   204f0:	cmp	r0, #1
   204f4:	bls	20520 <crc32@@Base+0x61c4>
   204f8:	movw	r3, #7868	; 0x1ebc
   204fc:	movt	r3, #5
   20500:	movw	r0, #46488	; 0xb598
   20504:	mov	r2, #36	; 0x24
   20508:	ldr	r3, [r3]
   2050c:	movt	r0, #3
   20510:	mov	r1, #1
   20514:	bl	12634 <fwrite@plt>
   20518:	mov	r0, #0
   2051c:	b	204b0 <crc32@@Base+0x6154>
   20520:	ldr	r7, [lr, #4]
   20524:	ldr	r3, [r7]
   20528:	cmp	r3, #9
   2052c:	beq	20564 <crc32@@Base+0x6208>
   20530:	mov	r3, r7
   20534:	mov	r2, #0
   20538:	b	20550 <crc32@@Base+0x61f4>
   2053c:	add	r3, r3, #44	; 0x2c
   20540:	ldr	r1, [r3]
   20544:	cmp	r1, #9
   20548:	mov	r7, r3
   2054c:	beq	20564 <crc32@@Base+0x6208>
   20550:	add	r2, r2, #1
   20554:	cmp	r6, r2
   20558:	bne	2053c <crc32@@Base+0x61e0>
   2055c:	mov	r0, #4096	; 0x1000
   20560:	b	204b0 <crc32@@Base+0x6154>
   20564:	add	r2, sp, #8
   20568:	ldr	r1, [r7, #4]
   2056c:	mov	r0, #3
   20570:	bl	126dc <__xstat@plt>
   20574:	cmp	r0, #0
   20578:	blt	205b0 <crc32@@Base+0x6254>
   2057c:	ldr	r0, [r7, #40]	; 0x28
   20580:	cmp	r5, #0
   20584:	ldr	r3, [sp, #52]	; 0x34
   20588:	add	r0, r0, #2
   2058c:	movne	r2, #1
   20590:	add	r3, r3, #4096	; 0x1000
   20594:	strne	r2, [r5]
   20598:	lsl	r0, r0, #2
   2059c:	add	r3, r3, #35	; 0x23
   205a0:	add	r0, r0, r3
   205a4:	bic	r0, r0, #4080	; 0xff0
   205a8:	bic	r0, r0, #15
   205ac:	b	204b0 <crc32@@Base+0x6154>
   205b0:	mov	r2, #4096	; 0x1000
   205b4:	mov	r1, #0
   205b8:	add	r0, sp, #100	; 0x64
   205bc:	bl	12388 <memset@plt>
   205c0:	mov	r1, #4096	; 0x1000
   205c4:	add	r0, sp, #100	; 0x64
   205c8:	bl	12694 <getcwd@plt>
   205cc:	cmp	r0, #0
   205d0:	addne	r1, sp, #100	; 0x64
   205d4:	beq	20604 <crc32@@Base+0x62a8>
   205d8:	movw	r0, #7868	; 0x1ebc
   205dc:	movt	r0, #5
   205e0:	ldr	r3, [r7, #4]
   205e4:	movw	r2, #46544	; 0xb5d0
   205e8:	ldr	r0, [r0]
   205ec:	movt	r2, #3
   205f0:	str	r1, [sp]
   205f4:	mov	r1, #1
   205f8:	bl	12358 <__fprintf_chk@plt>
   205fc:	mov	r0, #0
   20600:	b	204b0 <crc32@@Base+0x6154>
   20604:	movw	r0, #46528	; 0xb5c0
   20608:	movt	r0, #3
   2060c:	bl	12328 <perror@plt>
   20610:	movw	r1, #46416	; 0xb550
   20614:	movt	r1, #3
   20618:	b	205d8 <crc32@@Base+0x627c>
   2061c:	bl	12538 <__stack_chk_fail@plt>
   20620:	push	{r4, r5, r6, lr}
   20624:	mov	r4, r0
   20628:	ldrb	r5, [r0, #8]
   2062c:	cmp	r5, #0
   20630:	beq	20658 <crc32@@Base+0x62fc>
   20634:	ldrb	r3, [r0, #9]
   20638:	ldrh	r0, [r0, #10]
   2063c:	orr	r0, r0, r3, lsl #16
   20640:	cmp	r0, r1
   20644:	mov	r1, r0
   20648:	bhi	206b0 <crc32@@Base+0x6354>
   2064c:	cmp	r0, #0
   20650:	bne	20664 <crc32@@Base+0x6308>
   20654:	b	2066c <crc32@@Base+0x6310>
   20658:	cmp	r1, #31
   2065c:	bls	206b0 <crc32@@Base+0x6354>
   20660:	mov	r1, #32
   20664:	mov	r0, r4
   20668:	bl	20364 <crc32@@Base+0x6008>
   2066c:	ldrb	r3, [r4, #31]
   20670:	sub	r0, r0, r3
   20674:	uxtb	r0, r0
   20678:	cmp	r3, r0
   2067c:	bne	206b0 <crc32@@Base+0x6354>
   20680:	cmp	r5, #0
   20684:	bne	206a8 <crc32@@Base+0x634c>
   20688:	movw	r1, #479	; 0x1df
   2068c:	add	r0, r4, #32
   20690:	bl	20364 <crc32@@Base+0x6008>
   20694:	ldrb	r3, [r4, #511]	; 0x1ff
   20698:	cmp	r3, r0
   2069c:	moveq	r0, #0
   206a0:	mvnne	r0, #10
   206a4:	pop	{r4, r5, r6, pc}
   206a8:	mov	r0, #0
   206ac:	pop	{r4, r5, r6, pc}
   206b0:	mvn	r0, #10
   206b4:	pop	{r4, r5, r6, pc}
   206b8:	push	{r4, r5, r6, r7, r8, lr}
   206bc:	movw	r7, #6204	; 0x183c
   206c0:	movt	r7, #5
   206c4:	mov	r6, r0
   206c8:	ldr	r0, [r7, #4]
   206cc:	cmp	r0, #0
   206d0:	beq	2070c <crc32@@Base+0x63b0>
   206d4:	mov	r4, r7
   206d8:	mov	r5, #0
   206dc:	b	206f0 <crc32@@Base+0x6394>
   206e0:	ldr	r0, [r4, #4]
   206e4:	add	r5, r5, #1
   206e8:	cmp	r0, #0
   206ec:	beq	2070c <crc32@@Base+0x63b0>
   206f0:	mov	r1, r6
   206f4:	add	r4, r4, #8
   206f8:	bl	12718 <strcmp@plt>
   206fc:	cmp	r0, #0
   20700:	bne	206e0 <crc32@@Base+0x6384>
   20704:	ldr	r0, [r7, r5, lsl #3]
   20708:	pop	{r4, r5, r6, r7, r8, pc}
   2070c:	mvn	r0, #0
   20710:	pop	{r4, r5, r6, r7, r8, pc}
   20714:	push	{r4, r5, r6, r7, r8, lr}
   20718:	movw	r7, #6204	; 0x183c
   2071c:	movt	r7, #5
   20720:	mov	r6, r0
   20724:	ldr	r0, [r7, #68]	; 0x44
   20728:	cmp	r0, #0
   2072c:	beq	2076c <crc32@@Base+0x6410>
   20730:	add	r4, r7, #64	; 0x40
   20734:	mov	r5, #0
   20738:	b	2074c <crc32@@Base+0x63f0>
   2073c:	ldr	r0, [r4, #4]
   20740:	add	r5, r5, #1
   20744:	cmp	r0, #0
   20748:	beq	2076c <crc32@@Base+0x6410>
   2074c:	mov	r1, r6
   20750:	add	r4, r4, #8
   20754:	bl	12718 <strcmp@plt>
   20758:	cmp	r0, #0
   2075c:	bne	2073c <crc32@@Base+0x63e0>
   20760:	add	r5, r7, r5, lsl #3
   20764:	ldr	r0, [r5, #64]	; 0x40
   20768:	pop	{r4, r5, r6, r7, r8, pc}
   2076c:	mvn	r0, #0
   20770:	pop	{r4, r5, r6, r7, r8, pc}
   20774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20778:	movw	r3, #3824	; 0xef0
   2077c:	sub	sp, sp, #300	; 0x12c
   20780:	movt	r3, #5
   20784:	movw	fp, #29964	; 0x750c
   20788:	movt	fp, #3
   2078c:	str	r3, [sp, #20]
   20790:	mov	r9, r0
   20794:	ldr	r3, [r3]
   20798:	mov	r8, #0
   2079c:	movw	r2, #11472	; 0x2cd0
   207a0:	movt	r2, #6
   207a4:	str	r2, [sp, #4]
   207a8:	movw	r2, #46804	; 0xb6d4
   207ac:	str	r3, [sp, #292]	; 0x124
   207b0:	movt	r2, #3
   207b4:	movw	r3, #7868	; 0x1ebc
   207b8:	str	r2, [sp, #12]
   207bc:	movt	r3, #5
   207c0:	str	r3, [sp, #16]
   207c4:	mov	r0, r9
   207c8:	bl	12304 <feof@plt>
   207cc:	subs	r1, r0, #0
   207d0:	bne	2096c <crc32@@Base+0x6610>
   207d4:	mov	r2, #256	; 0x100
   207d8:	add	r0, sp, #36	; 0x24
   207dc:	bl	12388 <memset@plt>
   207e0:	mov	r2, r9
   207e4:	add	r0, sp, #36	; 0x24
   207e8:	mov	r1, #256	; 0x100
   207ec:	bl	12604 <fgets@plt>
   207f0:	subs	r7, r0, #0
   207f4:	beq	2096c <crc32@@Base+0x6610>
   207f8:	ldrb	r3, [r7]
   207fc:	cmp	r3, #35	; 0x23
   20800:	cmpne	r3, #10
   20804:	moveq	r4, #1
   20808:	movne	r4, #0
   2080c:	beq	207c4 <crc32@@Base+0x6468>
   20810:	bl	1267c <strlen@plt>
   20814:	add	ip, sp, #32
   20818:	add	r2, sp, #28
   2081c:	ldr	r5, [pc, #924]	; 20bc0 <crc32@@Base+0x6864>
   20820:	mov	r1, ip
   20824:	sub	r0, r0, #1
   20828:	ldrb	r3, [r7, r0]
   2082c:	cmp	r3, #10
   20830:	ldr	r3, [fp]
   20834:	strbeq	r4, [r7, r0]
   20838:	mov	r0, r7
   2083c:	mov	r4, #1
   20840:	strh	r3, [ip], #2
   20844:	lsr	r3, r3, #16
   20848:	strb	r3, [ip]
   2084c:	ldr	r3, [sp, #4]
   20850:	ldr	sl, [r3, #4]
   20854:	bl	122c8 <__strtok_r@plt>
   20858:	ldr	r1, [sp, #12]
   2085c:	mov	r6, r0
   20860:	b	20874 <crc32@@Base+0x6518>
   20864:	add	r4, r4, #1
   20868:	cmp	r4, #24
   2086c:	beq	2091c <crc32@@Base+0x65c0>
   20870:	ldr	r1, [r5, #4]!
   20874:	mov	r0, r6
   20878:	bl	12718 <strcmp@plt>
   2087c:	subs	r3, r0, #0
   20880:	bne	20864 <crc32@@Base+0x6508>
   20884:	mov	ip, #44	; 0x2c
   20888:	add	r2, sp, #28
   2088c:	mul	ip, ip, r8
   20890:	add	r1, sp, #32
   20894:	str	r3, [sp, #8]
   20898:	add	r5, sl, ip
   2089c:	str	r4, [sl, ip]
   208a0:	bl	122c8 <__strtok_r@plt>
   208a4:	ldr	r3, [sp, #8]
   208a8:	subs	r6, r0, #0
   208ac:	beq	20b74 <crc32@@Base+0x6818>
   208b0:	sub	r4, r4, #1
   208b4:	cmp	r4, #22
   208b8:	ldrls	pc, [pc, r4, lsl #2]
   208bc:	b	2091c <crc32@@Base+0x65c0>
   208c0:	andeq	r0, r2, r4, asr fp
   208c4:			; <UNDEFINED> instruction: 0x00020ab0
   208c8:	andeq	r0, r2, ip, lsl r9
   208cc:	andeq	r0, r2, ip, lsl r9
   208d0:	muleq	r2, r4, r9
   208d4:	muleq	r2, r4, r9
   208d8:	andeq	r0, r2, r0, lsr #22
   208dc:	muleq	r2, r4, r9
   208e0:	andeq	r0, r2, ip, ror #19
   208e4:	andeq	r0, r2, ip, lsl r9
   208e8:	andeq	r0, r2, r0, ror #20
   208ec:	ldrdeq	r0, [r2], -r4
   208f0:	ldrdeq	r0, [r2], -r4
   208f4:	andeq	r0, r2, r4, asr #19
   208f8:	andeq	r0, r2, r4, asr #19
   208fc:	andeq	r0, r2, r8, lsl #22
   20900:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   20904:	andeq	r0, r2, ip, lsr #19
   20908:	andeq	r0, r2, ip, lsr #19
   2090c:	andeq	r0, r2, r4, ror #21
   20910:	andeq	r0, r2, r4, lsr #21
   20914:	andeq	r0, r2, ip, lsr #19
   20918:	andeq	r0, r2, r4, asr #19
   2091c:	ldr	r0, [sp, #16]
   20920:	movw	r2, #46972	; 0xb77c
   20924:	mov	r3, r7
   20928:	mov	r1, #1
   2092c:	movt	r2, #3
   20930:	ldr	r0, [r0]
   20934:	bl	12358 <__fprintf_chk@plt>
   20938:	add	r8, r8, #1
   2093c:	cmp	r8, #255	; 0xff
   20940:	ble	207c4 <crc32@@Base+0x6468>
   20944:	movw	r3, #7868	; 0x1ebc
   20948:	movt	r3, #5
   2094c:	movw	r0, #47000	; 0xb798
   20950:	mov	r2, #45	; 0x2d
   20954:	ldr	r3, [r3]
   20958:	movt	r0, #3
   2095c:	mov	r1, #1
   20960:	bl	12634 <fwrite@plt>
   20964:	mvn	r0, #0
   20968:	b	20978 <crc32@@Base+0x661c>
   2096c:	ldr	r3, [sp, #4]
   20970:	mov	r0, #0
   20974:	str	r8, [r3]
   20978:	ldr	r3, [sp, #20]
   2097c:	ldr	r2, [sp, #292]	; 0x124
   20980:	ldr	r3, [r3]
   20984:	cmp	r2, r3
   20988:	bne	20bbc <crc32@@Base+0x6860>
   2098c:	add	sp, sp, #300	; 0x12c
   20990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20994:	mov	r0, r6
   20998:	mov	r2, #16
   2099c:	mov	r1, #0
   209a0:	bl	12370 <strtoul@plt>
   209a4:	str	r0, [r5, #4]
   209a8:	b	20938 <crc32@@Base+0x65dc>
   209ac:	mov	r2, #0
   209b0:	mov	r0, r6
   209b4:	mov	r1, r2
   209b8:	bl	12370 <strtoul@plt>
   209bc:	str	r0, [r5, #4]
   209c0:	b	20938 <crc32@@Base+0x65dc>
   209c4:	mov	r0, r6
   209c8:	bl	123ac <__strdup@plt>
   209cc:	str	r0, [r5, #4]
   209d0:	b	20938 <crc32@@Base+0x65dc>
   209d4:	mov	r0, r6
   209d8:	mov	r2, #10
   209dc:	mov	r1, #0
   209e0:	bl	12370 <strtoul@plt>
   209e4:	str	r0, [r5, #4]
   209e8:	b	20938 <crc32@@Base+0x65dc>
   209ec:	mov	r0, r6
   209f0:	str	r3, [sp, #8]
   209f4:	bl	123ac <__strdup@plt>
   209f8:	ldr	r3, [sp, #8]
   209fc:	add	r4, r5, #8
   20a00:	mov	r6, r3
   20a04:	str	r0, [r5, #4]
   20a08:	add	r2, sp, #28
   20a0c:	add	r1, sp, #32
   20a10:	mov	r0, #0
   20a14:	bl	122c8 <__strtok_r@plt>
   20a18:	cmp	r0, #0
   20a1c:	beq	20b6c <crc32@@Base+0x6810>
   20a20:	mov	r2, #16
   20a24:	mov	r1, #0
   20a28:	bl	12370 <strtoul@plt>
   20a2c:	add	r6, r6, #1
   20a30:	cmp	r6, #8
   20a34:	str	r0, [r4], #4
   20a38:	bne	20a08 <crc32@@Base+0x66ac>
   20a3c:	movw	r3, #7868	; 0x1ebc
   20a40:	movt	r3, #5
   20a44:	movw	r0, #46900	; 0xb734
   20a48:	mov	r2, #30
   20a4c:	ldr	r3, [r3]
   20a50:	mov	r1, #1
   20a54:	movt	r0, #3
   20a58:	bl	12634 <fwrite@plt>
   20a5c:	b	20964 <crc32@@Base+0x6608>
   20a60:	add	r2, sp, #28
   20a64:	add	r1, sp, #32
   20a68:	mov	r0, #0
   20a6c:	bl	122c8 <__strtok_r@plt>
   20a70:	subs	r4, r0, #0
   20a74:	beq	20b98 <crc32@@Base+0x683c>
   20a78:	mov	r2, #16
   20a7c:	mov	r1, #0
   20a80:	mov	r0, r6
   20a84:	bl	12370 <strtoul@plt>
   20a88:	mov	r2, #16
   20a8c:	mov	r1, #0
   20a90:	str	r0, [r5, #4]
   20a94:	mov	r0, r4
   20a98:	bl	12370 <strtoul@plt>
   20a9c:	str	r0, [r5, #8]
   20aa0:	b	20938 <crc32@@Base+0x65dc>
   20aa4:	mov	r3, #1
   20aa8:	strb	r3, [r5, #4]
   20aac:	b	20938 <crc32@@Base+0x65dc>
   20ab0:	mov	r0, r6
   20ab4:	bl	206b8 <crc32@@Base+0x635c>
   20ab8:	cmp	r0, #0
   20abc:	bge	209cc <crc32@@Base+0x6670>
   20ac0:	movw	r1, #7868	; 0x1ebc
   20ac4:	movt	r1, #5
   20ac8:	mov	r3, r6
   20acc:	movw	r2, #46844	; 0xb6fc
   20ad0:	ldr	r0, [r1]
   20ad4:	movt	r2, #3
   20ad8:	mov	r1, #1
   20adc:	bl	12358 <__fprintf_chk@plt>
   20ae0:	b	20964 <crc32@@Base+0x6608>
   20ae4:	mov	r3, #0
   20ae8:	strb	r3, [r5, #4]
   20aec:	b	20938 <crc32@@Base+0x65dc>
   20af0:	mov	r2, #0
   20af4:	mov	r0, r6
   20af8:	mov	r1, r2
   20afc:	bl	12370 <strtoul@plt>
   20b00:	strb	r0, [r5, #4]
   20b04:	b	20938 <crc32@@Base+0x65dc>
   20b08:	mov	r2, #0
   20b0c:	mov	r0, r6
   20b10:	mov	r1, r2
   20b14:	bl	121b4 <strtol@plt>
   20b18:	str	r0, [r5, #4]
   20b1c:	b	20938 <crc32@@Base+0x65dc>
   20b20:	mov	r0, r6
   20b24:	bl	20714 <crc32@@Base+0x63b8>
   20b28:	cmp	r0, #0
   20b2c:	bge	209cc <crc32@@Base+0x6670>
   20b30:	movw	r1, #7868	; 0x1ebc
   20b34:	movt	r1, #5
   20b38:	mov	r3, r6
   20b3c:	movw	r2, #46872	; 0xb718
   20b40:	ldr	r0, [r1]
   20b44:	movt	r2, #3
   20b48:	mov	r1, #1
   20b4c:	bl	12358 <__fprintf_chk@plt>
   20b50:	b	20964 <crc32@@Base+0x6608>
   20b54:	mov	r0, r6
   20b58:	mov	r2, #10
   20b5c:	mov	r1, #0
   20b60:	bl	121b4 <strtol@plt>
   20b64:	str	r0, [r5, #4]
   20b68:	b	20938 <crc32@@Base+0x65dc>
   20b6c:	str	r6, [r5, #40]	; 0x28
   20b70:	b	20938 <crc32@@Base+0x65dc>
   20b74:	movw	r1, #7868	; 0x1ebc
   20b78:	movt	r1, #5
   20b7c:	mov	r3, r7
   20b80:	movw	r2, #46812	; 0xb6dc
   20b84:	ldr	r0, [r1]
   20b88:	movt	r2, #3
   20b8c:	mov	r1, #1
   20b90:	bl	12358 <__fprintf_chk@plt>
   20b94:	b	20964 <crc32@@Base+0x6608>
   20b98:	movw	r3, #7868	; 0x1ebc
   20b9c:	movt	r3, #5
   20ba0:	movw	r0, #46932	; 0xb754
   20ba4:	mov	r2, #37	; 0x25
   20ba8:	ldr	r3, [r3]
   20bac:	mov	r1, #1
   20bb0:	movt	r0, #3
   20bb4:	bl	12634 <fwrite@plt>
   20bb8:	b	20964 <crc32@@Base+0x6608>
   20bbc:	bl	12538 <__stack_chk_fail@plt>
   20bc0:	andeq	fp, r3, r4, ror r4
   20bc4:	push	{r4, r5, r6, r7, r8, lr}
   20bc8:	mov	r7, r0
   20bcc:	sub	sp, sp, #8
   20bd0:	mov	r6, r1
   20bd4:	ldr	r0, [r0, #64]	; 0x40
   20bd8:	movw	r1, #53956	; 0xd2c4
   20bdc:	movt	r1, #3
   20be0:	bl	123d0 <fopen@plt>
   20be4:	subs	r8, r0, #0
   20be8:	beq	20cd8 <crc32@@Base+0x697c>
   20bec:	mov	r1, #1
   20bf0:	mov	r0, #11264	; 0x2c00
   20bf4:	bl	125c8 <calloc@plt>
   20bf8:	movw	r5, #11472	; 0x2cd0
   20bfc:	movt	r5, #6
   20c00:	cmp	r0, #0
   20c04:	str	r0, [r5, #4]
   20c08:	beq	20d6c <crc32@@Base+0x6a10>
   20c0c:	mov	r0, r8
   20c10:	bl	124f0 <rewind@plt>
   20c14:	mov	r0, r8
   20c18:	bl	20774 <crc32@@Base+0x6418>
   20c1c:	mov	r4, r0
   20c20:	mov	r0, r8
   20c24:	bl	126b8 <fclose@plt>
   20c28:	cmp	r4, #0
   20c2c:	bne	20d1c <crc32@@Base+0x69c0>
   20c30:	ldr	r1, [r5]
   20c34:	ldr	r0, [r5, #4]
   20c38:	cmp	r1, #0
   20c3c:	ble	20c74 <crc32@@Base+0x6918>
   20c40:	ldr	r3, [r0]
   20c44:	cmp	r3, #1
   20c48:	beq	20ca4 <crc32@@Base+0x6948>
   20c4c:	mov	r3, r0
   20c50:	b	20c68 <crc32@@Base+0x690c>
   20c54:	add	r3, r3, #44	; 0x2c
   20c58:	ldr	r2, [r3]
   20c5c:	cmp	r2, #1
   20c60:	mov	ip, r3
   20c64:	beq	20ca8 <crc32@@Base+0x694c>
   20c68:	add	r4, r4, #1
   20c6c:	cmp	r4, r1
   20c70:	bne	20c54 <crc32@@Base+0x68f8>
   20c74:	mov	r4, #512	; 0x200
   20c78:	bl	121c0 <free@plt>
   20c7c:	mov	r1, #1
   20c80:	mov	r0, r4
   20c84:	bl	125c8 <calloc@plt>
   20c88:	cmp	r0, #0
   20c8c:	beq	20d2c <crc32@@Base+0x69d0>
   20c90:	str	r0, [r6, #8]
   20c94:	mov	r0, #1
   20c98:	str	r4, [r6, #4]
   20c9c:	add	sp, sp, #8
   20ca0:	pop	{r4, r5, r6, r7, r8, pc}
   20ca4:	mov	ip, r0
   20ca8:	ldr	r3, [ip, #4]
   20cac:	cmn	r3, #1
   20cb0:	blt	20d00 <crc32@@Base+0x69a4>
   20cb4:	cmp	r3, #0
   20cb8:	ble	20c74 <crc32@@Base+0x6918>
   20cbc:	cmp	r3, #1
   20cc0:	bne	20d00 <crc32@@Base+0x69a4>
   20cc4:	mov	r0, #0
   20cc8:	bl	2041c <crc32@@Base+0x60c0>
   20ccc:	mov	r4, r0
   20cd0:	ldr	r0, [r5, #4]
   20cd4:	b	20c78 <crc32@@Base+0x691c>
   20cd8:	movw	r1, #7868	; 0x1ebc
   20cdc:	movt	r1, #5
   20ce0:	ldr	r3, [r7, #64]	; 0x40
   20ce4:	movw	r2, #47048	; 0xb7c8
   20ce8:	ldr	r0, [r1]
   20cec:	movt	r2, #3
   20cf0:	mov	r1, #1
   20cf4:	bl	12358 <__fprintf_chk@plt>
   20cf8:	mov	r0, #1
   20cfc:	bl	12298 <exit@plt>
   20d00:	movw	r1, #7868	; 0x1ebc
   20d04:	movt	r1, #5
   20d08:	movw	r2, #47104	; 0xb800
   20d0c:	movt	r2, #3
   20d10:	ldr	r0, [r1]
   20d14:	mov	r1, #1
   20d18:	bl	12358 <__fprintf_chk@plt>
   20d1c:	ldr	r0, [r5, #4]
   20d20:	bl	121c0 <free@plt>
   20d24:	mov	r0, #1
   20d28:	bl	12298 <exit@plt>
   20d2c:	movw	r2, #7868	; 0x1ebc
   20d30:	movt	r2, #5
   20d34:	ldr	r5, [r7, #80]	; 0x50
   20d38:	ldr	r4, [r2]
   20d3c:	bl	12748 <__errno_location@plt>
   20d40:	ldr	r0, [r0]
   20d44:	bl	122a4 <strerror@plt>
   20d48:	mov	r3, r5
   20d4c:	movw	r2, #29928	; 0x74e8
   20d50:	mov	r1, #1
   20d54:	movt	r2, #3
   20d58:	str	r0, [sp]
   20d5c:	mov	r0, r4
   20d60:	bl	12358 <__fprintf_chk@plt>
   20d64:	mov	r0, #1
   20d68:	bl	12298 <exit@plt>
   20d6c:	movw	r3, #7868	; 0x1ebc
   20d70:	movt	r3, #5
   20d74:	mov	r2, #23
   20d78:	mov	r1, #1
   20d7c:	ldr	r3, [r3]
   20d80:	movw	r0, #47080	; 0xb7e8
   20d84:	movt	r0, #3
   20d88:	bl	12634 <fwrite@plt>
   20d8c:	mov	r0, r8
   20d90:	bl	126b8 <fclose@plt>
   20d94:	mov	r0, #1
   20d98:	bl	12298 <exit@plt>
   20d9c:	ldrb	r3, [r0, #8]
   20da0:	cmp	r3, #0
   20da4:	ldrbne	r3, [r0, #9]
   20da8:	ldrhne	r0, [r0, #10]
   20dac:	orrne	r0, r0, r3, lsl #16
   20db0:	moveq	r0, #32
   20db4:	bx	lr
   20db8:	movw	r3, #11472	; 0x2cd0
   20dbc:	movt	r3, #6
   20dc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   20dc4:	movw	r6, #3824	; 0xef0
   20dc8:	movt	r6, #5
   20dcc:	ldr	ip, [r3]
   20dd0:	sub	sp, sp, #100	; 0x64
   20dd4:	ldr	r2, [r6]
   20dd8:	cmp	ip, #0
   20ddc:	str	r2, [sp, #92]	; 0x5c
   20de0:	ble	20e24 <crc32@@Base+0x6ac8>
   20de4:	ldr	r4, [r3, #4]
   20de8:	mov	r7, r0
   20dec:	ldr	r3, [r4]
   20df0:	cmp	r3, #9
   20df4:	beq	20e44 <crc32@@Base+0x6ae8>
   20df8:	mov	r3, r4
   20dfc:	mov	r2, #0
   20e00:	b	20e18 <crc32@@Base+0x6abc>
   20e04:	add	r3, r3, #44	; 0x2c
   20e08:	ldr	r1, [r3]
   20e0c:	cmp	r1, #9
   20e10:	mov	r4, r3
   20e14:	beq	20e44 <crc32@@Base+0x6ae8>
   20e18:	add	r2, r2, #1
   20e1c:	cmp	ip, r2
   20e20:	bne	20e04 <crc32@@Base+0x6aa8>
   20e24:	mov	r8, #0
   20e28:	ldr	r2, [sp, #92]	; 0x5c
   20e2c:	mov	r0, r8
   20e30:	ldr	r3, [r6]
   20e34:	cmp	r2, r3
   20e38:	bne	20f9c <crc32@@Base+0x6c40>
   20e3c:	add	sp, sp, #100	; 0x64
   20e40:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20e44:	mov	r3, #2
   20e48:	movw	r1, #53956	; 0xd2c4
   20e4c:	strb	r3, [r7]
   20e50:	movt	r1, #3
   20e54:	ldr	r0, [r4, #4]
   20e58:	bl	123d0 <fopen@plt>
   20e5c:	subs	r9, r0, #0
   20e60:	beq	20f74 <crc32@@Base+0x6c18>
   20e64:	bl	1252c <fileno@plt>
   20e68:	mov	r2, sp
   20e6c:	mov	r1, r0
   20e70:	mov	r0, #3
   20e74:	bl	12610 <__fxstat@plt>
   20e78:	subs	r8, r0, #0
   20e7c:	bne	20f50 <crc32@@Base+0x6bf4>
   20e80:	ldr	r2, [r4, #40]	; 0x28
   20e84:	ldr	r1, [sp, #44]	; 0x2c
   20e88:	add	r3, r1, r2, lsl #2
   20e8c:	str	r2, [r7, #4]
   20e90:	add	r3, r3, #15
   20e94:	bic	r3, r3, #3
   20e98:	add	r3, r3, #4
   20e9c:	strh	r3, [r7, #2]
   20ea0:	lsr	r3, r3, #16
   20ea4:	strb	r3, [r7, #1]
   20ea8:	ldr	r3, [r4, #40]	; 0x28
   20eac:	cmp	r3, #0
   20eb0:	moveq	r5, #8
   20eb4:	beq	20ee4 <crc32@@Base+0x6b88>
   20eb8:	add	ip, r4, #8
   20ebc:	add	r0, r7, #4
   20ec0:	mov	r3, r8
   20ec4:	ldr	r2, [ip], #4
   20ec8:	add	r3, r3, #1
   20ecc:	str	r2, [r0, #4]!
   20ed0:	ldr	r2, [r4, #40]	; 0x28
   20ed4:	cmp	r2, r3
   20ed8:	bhi	20ec4 <crc32@@Base+0x6b68>
   20edc:	lsl	r5, r2, #2
   20ee0:	add	r5, r5, #8
   20ee4:	add	r5, r7, r5
   20ee8:	mov	r3, r9
   20eec:	mov	r2, #1
   20ef0:	mov	r0, r5
   20ef4:	bl	12508 <fread@plt>
   20ef8:	cmp	r0, #1
   20efc:	bne	20f20 <crc32@@Base+0x6bc4>
   20f00:	mov	r0, r9
   20f04:	bl	126b8 <fclose@plt>
   20f08:	ldr	r3, [sp, #44]	; 0x2c
   20f0c:	mov	r2, #0
   20f10:	add	r3, r3, #3
   20f14:	bic	r3, r3, #3
   20f18:	str	r2, [r5, r3]
   20f1c:	b	20e28 <crc32@@Base+0x6acc>
   20f20:	movw	r1, #7868	; 0x1ebc
   20f24:	movt	r1, #5
   20f28:	movw	r2, #47184	; 0xb850
   20f2c:	ldr	r3, [r4, #4]
   20f30:	ldr	r0, [r1]
   20f34:	movt	r2, #3
   20f38:	mov	r1, #1
   20f3c:	bl	12358 <__fprintf_chk@plt>
   20f40:	mov	r0, r9
   20f44:	mvn	r8, #0
   20f48:	bl	126b8 <fclose@plt>
   20f4c:	b	20e28 <crc32@@Base+0x6acc>
   20f50:	movw	r1, #7868	; 0x1ebc
   20f54:	movt	r1, #5
   20f58:	ldr	r3, [r4, #4]
   20f5c:	movw	r2, #47156	; 0xb834
   20f60:	ldr	r0, [r1]
   20f64:	movt	r2, #3
   20f68:	mov	r1, #1
   20f6c:	bl	12358 <__fprintf_chk@plt>
   20f70:	b	20f40 <crc32@@Base+0x6be4>
   20f74:	movw	r1, #7868	; 0x1ebc
   20f78:	movt	r1, #5
   20f7c:	ldr	r3, [r4, #4]
   20f80:	movw	r2, #47128	; 0xb818
   20f84:	ldr	r0, [r1]
   20f88:	movt	r2, #3
   20f8c:	mov	r1, #1
   20f90:	mvn	r8, #0
   20f94:	bl	12358 <__fprintf_chk@plt>
   20f98:	b	20e28 <crc32@@Base+0x6acc>
   20f9c:	bl	12538 <__stack_chk_fail@plt>
   20fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20fa4:	movw	sl, #3824	; 0xef0
   20fa8:	sub	sp, sp, #44	; 0x2c
   20fac:	movt	sl, #5
   20fb0:	mov	ip, r3
   20fb4:	mov	r8, r1
   20fb8:	str	r3, [sp, #20]
   20fbc:	movw	r1, #53956	; 0xd2c4
   20fc0:	ldr	r3, [sl]
   20fc4:	movt	r1, #3
   20fc8:	str	r0, [sp, #8]
   20fcc:	ldr	r0, [ip, #64]	; 0x40
   20fd0:	str	r2, [sp, #12]
   20fd4:	str	r3, [sp, #36]	; 0x24
   20fd8:	bl	123d0 <fopen@plt>
   20fdc:	subs	r4, r0, #0
   20fe0:	beq	2175c <crc32@@Base+0x7400>
   20fe4:	mov	r1, #1
   20fe8:	mov	r0, #11264	; 0x2c00
   20fec:	bl	125c8 <calloc@plt>
   20ff0:	movw	r7, #11472	; 0x2cd0
   20ff4:	movt	r7, #6
   20ff8:	cmp	r0, #0
   20ffc:	str	r0, [r7, #4]
   21000:	beq	2172c <crc32@@Base+0x73d0>
   21004:	mov	r0, r4
   21008:	bl	124f0 <rewind@plt>
   2100c:	mov	r0, r4
   21010:	bl	20774 <crc32@@Base+0x6418>
   21014:	mov	r6, r0
   21018:	mov	r0, r4
   2101c:	bl	126b8 <fclose@plt>
   21020:	cmp	r6, #0
   21024:	bne	217e4 <crc32@@Base+0x7488>
   21028:	ldr	r4, [r7]
   2102c:	ldr	r2, [r8, #44]	; 0x2c
   21030:	cmp	r4, #0
   21034:	add	r2, r2, #3
   21038:	bic	r2, r2, #3
   2103c:	str	r2, [r8, #44]	; 0x2c
   21040:	ble	216a4 <crc32@@Base+0x7348>
   21044:	ldr	ip, [r7, #4]
   21048:	ldr	r0, [ip]
   2104c:	cmp	r0, #1
   21050:	beq	21290 <crc32@@Base+0x6f34>
   21054:	mov	r3, ip
   21058:	mov	r1, r6
   2105c:	b	21074 <crc32@@Base+0x6d18>
   21060:	add	r3, r3, #44	; 0x2c
   21064:	ldr	lr, [r3]
   21068:	cmp	lr, #1
   2106c:	mov	r5, r3
   21070:	beq	21294 <crc32@@Base+0x6f38>
   21074:	add	r1, r1, #1
   21078:	cmp	r1, r4
   2107c:	bne	21060 <crc32@@Base+0x6d04>
   21080:	add	r1, ip, #44	; 0x2c
   21084:	mov	lr, #44	; 0x2c
   21088:	mov	ip, r0
   2108c:	mov	r5, #0
   21090:	mla	lr, lr, r4, r1
   21094:	mov	r3, r1
   21098:	b	210a0 <crc32@@Base+0x6d44>
   2109c:	ldr	ip, [r3, #-44]	; 0xffffffd4
   210a0:	cmp	ip, #11
   210a4:	add	r3, r3, #44	; 0x2c
   210a8:	addeq	r5, r5, #1
   210ac:	cmp	r3, lr
   210b0:	bne	2109c <crc32@@Base+0x6d40>
   210b4:	cmp	r5, #0
   210b8:	mov	ip, #0
   210bc:	movne	fp, #1
   210c0:	moveq	fp, ip
   210c4:	movne	r9, #512	; 0x200
   210c8:	moveq	r9, #32
   210cc:	b	210d4 <crc32@@Base+0x6d78>
   210d0:	ldr	r0, [r1, #-44]	; 0xffffffd4
   210d4:	cmp	r0, #10
   210d8:	add	r1, r1, #44	; 0x2c
   210dc:	addeq	ip, ip, #1
   210e0:	cmp	r3, r1
   210e4:	bne	210d0 <crc32@@Base+0x6d74>
   210e8:	cmp	ip, #1
   210ec:	bhi	21680 <crc32@@Base+0x7324>
   210f0:	mov	r1, #1
   210f4:	mov	r0, r9
   210f8:	str	r2, [sp, #16]
   210fc:	bl	125c8 <calloc@plt>
   21100:	ldr	r2, [sp, #16]
   21104:	subs	r5, r0, #0
   21108:	beq	216e4 <crc32@@Base+0x7388>
   2110c:	ldr	r3, [sp, #20]
   21110:	cmp	r4, #0
   21114:	add	r2, r2, #4
   21118:	str	r9, [r5, #12]
   2111c:	sub	r2, r2, r9
   21120:	strb	fp, [r5, #30]
   21124:	ldr	r1, [r3, #56]	; 0x38
   21128:	ldr	r3, [r3, #60]	; 0x3c
   2112c:	str	r2, [r5, #4]
   21130:	ldr	r7, [r7, #4]
   21134:	str	r1, [r5, #16]
   21138:	str	r3, [r5, #20]
   2113c:	ble	216b0 <crc32@@Base+0x7354>
   21140:	ldr	r3, [r7]
   21144:	cmp	r3, #2
   21148:	beq	214b0 <crc32@@Base+0x7154>
   2114c:	mov	r2, r7
   21150:	mov	r1, #0
   21154:	b	2116c <crc32@@Base+0x6e10>
   21158:	add	r2, r2, #44	; 0x2c
   2115c:	ldr	r0, [r2]
   21160:	cmp	r0, #2
   21164:	mov	ip, r2
   21168:	beq	214b4 <crc32@@Base+0x7158>
   2116c:	add	r1, r1, #1
   21170:	cmp	r1, r4
   21174:	bne	21158 <crc32@@Base+0x6dfc>
   21178:	cmp	r3, #7
   2117c:	beq	214c0 <crc32@@Base+0x7164>
   21180:	mov	r2, r7
   21184:	mov	r1, #0
   21188:	b	211a0 <crc32@@Base+0x6e44>
   2118c:	add	r2, r2, #44	; 0x2c
   21190:	ldr	r0, [r2]
   21194:	cmp	r0, #7
   21198:	mov	ip, r2
   2119c:	beq	214c4 <crc32@@Base+0x7168>
   211a0:	add	r1, r1, #1
   211a4:	cmp	r1, r4
   211a8:	bne	2118c <crc32@@Base+0x6e30>
   211ac:	cmp	r3, #8
   211b0:	beq	214d0 <crc32@@Base+0x7174>
   211b4:	mov	r2, r7
   211b8:	mov	r1, #0
   211bc:	b	211d4 <crc32@@Base+0x6e78>
   211c0:	add	r2, r2, #44	; 0x2c
   211c4:	ldr	r0, [r2]
   211c8:	cmp	r0, #8
   211cc:	mov	ip, r2
   211d0:	beq	214d4 <crc32@@Base+0x7178>
   211d4:	add	r1, r1, #1
   211d8:	cmp	r1, r4
   211dc:	bne	211c0 <crc32@@Base+0x6e64>
   211e0:	mov	r1, #32
   211e4:	mov	r0, r5
   211e8:	str	r3, [sp, #16]
   211ec:	bl	20364 <crc32@@Base+0x6008>
   211f0:	cmp	fp, #0
   211f4:	ldr	r3, [sp, #16]
   211f8:	strb	r0, [r5, #31]
   211fc:	bne	214e0 <crc32@@Base+0x7184>
   21200:	add	r3, sp, #32
   21204:	str	r3, [sp, #16]
   21208:	mov	r0, r7
   2120c:	bl	121c0 <free@plt>
   21210:	ldr	r3, [r8, #44]	; 0x2c
   21214:	cmp	r3, #0
   21218:	beq	2123c <crc32@@Base+0x6ee0>
   2121c:	ands	r2, r3, #3
   21220:	ldreq	r1, [sp, #8]
   21224:	bne	21624 <crc32@@Base+0x72c8>
   21228:	ldr	r0, [r1], #4
   2122c:	subs	r3, r3, #4
   21230:	add	r2, r2, r0
   21234:	bne	21228 <crc32@@Base+0x6ecc>
   21238:	mov	r3, r2
   2123c:	ldrd	r0, [sp, #12]
   21240:	mov	r2, #4
   21244:	str	r3, [sp, #32]
   21248:	bl	126c4 <write@plt>
   2124c:	cmp	r0, #4
   21250:	bne	2178c <crc32@@Base+0x7430>
   21254:	ldr	r3, [r8, #44]	; 0x2c
   21258:	mov	r2, r9
   2125c:	ldr	r0, [sp, #8]
   21260:	mov	r1, r5
   21264:	add	r3, r3, #4
   21268:	str	r3, [r8, #44]	; 0x2c
   2126c:	bl	12658 <memcpy@plt>
   21270:	ldr	r2, [sp, #36]	; 0x24
   21274:	ldr	r3, [sl]
   21278:	cmp	r2, r3
   2127c:	bne	21788 <crc32@@Base+0x742c>
   21280:	mov	r0, r5
   21284:	add	sp, sp, #44	; 0x2c
   21288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2128c:	b	121c0 <free@plt>
   21290:	mov	r5, ip
   21294:	ldr	fp, [r5, #4]
   21298:	cmn	fp, #1
   2129c:	blt	217c4 <crc32@@Base+0x7468>
   212a0:	cmp	fp, #0
   212a4:	ble	21080 <crc32@@Base+0x6d24>
   212a8:	cmp	fp, #1
   212ac:	bne	217c4 <crc32@@Base+0x7468>
   212b0:	add	r3, sp, #40	; 0x28
   212b4:	mov	r4, #0
   212b8:	str	r2, [sp, #24]
   212bc:	str	r4, [r3, #-8]!
   212c0:	mov	r0, r3
   212c4:	str	r3, [sp, #16]
   212c8:	bl	2041c <crc32@@Base+0x60c0>
   212cc:	ldr	r2, [sp, #24]
   212d0:	subs	r9, r0, #0
   212d4:	beq	21650 <crc32@@Base+0x72f4>
   212d8:	mov	r1, fp
   212dc:	str	r2, [sp, #24]
   212e0:	bl	125c8 <calloc@plt>
   212e4:	ldr	r2, [sp, #24]
   212e8:	subs	r5, r0, #0
   212ec:	beq	21708 <crc32@@Base+0x73ac>
   212f0:	ldr	ip, [sp, #20]
   212f4:	add	r2, r2, #4
   212f8:	ldr	r3, [r7]
   212fc:	sub	r2, r2, r9
   21300:	ldr	r1, [sp, #32]
   21304:	ldr	r0, [ip, #60]	; 0x3c
   21308:	cmp	r3, #0
   2130c:	str	r2, [r5, #4]
   21310:	ldr	r2, [ip, #56]	; 0x38
   21314:	strb	r1, [r5, #30]
   21318:	add	r1, r5, #32
   2131c:	strh	r9, [r5, #10]
   21320:	str	r2, [sp, #28]
   21324:	sub	r2, r2, #64	; 0x40
   21328:	str	r9, [r5, #12]
   2132c:	str	r2, [r5, #16]
   21330:	lsr	r2, r9, #16
   21334:	strb	fp, [r5, #8]
   21338:	str	r0, [r5, #20]
   2133c:	str	r1, [sp, #24]
   21340:	strb	r2, [r5, #9]
   21344:	ble	21480 <crc32@@Base+0x7124>
   21348:	ldr	r1, [r7, #4]
   2134c:	ldr	fp, [r1]
   21350:	cmp	fp, #2
   21354:	beq	21544 <crc32@@Base+0x71e8>
   21358:	mov	r2, r1
   2135c:	b	21374 <crc32@@Base+0x7018>
   21360:	add	r2, r2, #44	; 0x2c
   21364:	ldr	r0, [r2]
   21368:	cmp	r0, #2
   2136c:	mov	ip, r2
   21370:	beq	21548 <crc32@@Base+0x71ec>
   21374:	add	r4, r4, #1
   21378:	cmp	r4, r3
   2137c:	bne	21360 <crc32@@Base+0x7004>
   21380:	cmp	fp, #5
   21384:	beq	2157c <crc32@@Base+0x7220>
   21388:	mov	r2, r1
   2138c:	mov	r0, #0
   21390:	b	213a8 <crc32@@Base+0x704c>
   21394:	add	r2, r2, #44	; 0x2c
   21398:	ldr	ip, [r2]
   2139c:	cmp	ip, #5
   213a0:	mov	lr, r2
   213a4:	beq	21580 <crc32@@Base+0x7224>
   213a8:	add	r0, r0, #1
   213ac:	cmp	r0, r3
   213b0:	bne	21394 <crc32@@Base+0x7038>
   213b4:	cmp	fp, #6
   213b8:	beq	2158c <crc32@@Base+0x7230>
   213bc:	mov	r2, r1
   213c0:	mov	r0, #0
   213c4:	b	213dc <crc32@@Base+0x7080>
   213c8:	add	r2, r2, #44	; 0x2c
   213cc:	ldr	ip, [r2]
   213d0:	cmp	ip, #6
   213d4:	mov	lr, r2
   213d8:	beq	21590 <crc32@@Base+0x7234>
   213dc:	add	r0, r0, #1
   213e0:	cmp	r0, r3
   213e4:	bne	213c8 <crc32@@Base+0x706c>
   213e8:	cmp	fp, #12
   213ec:	beq	2159c <crc32@@Base+0x7240>
   213f0:	mov	r2, r1
   213f4:	mov	r0, #0
   213f8:	b	21410 <crc32@@Base+0x70b4>
   213fc:	add	r2, r2, #44	; 0x2c
   21400:	ldr	ip, [r2]
   21404:	cmp	ip, #12
   21408:	mov	lr, r2
   2140c:	beq	215a0 <crc32@@Base+0x7244>
   21410:	add	r0, r0, #1
   21414:	cmp	r0, r3
   21418:	bne	213fc <crc32@@Base+0x70a0>
   2141c:	cmp	fp, #13
   21420:	beq	215e4 <crc32@@Base+0x7288>
   21424:	mov	r2, r1
   21428:	mov	r0, #0
   2142c:	b	21444 <crc32@@Base+0x70e8>
   21430:	add	r2, r2, #44	; 0x2c
   21434:	ldr	ip, [r2]
   21438:	cmp	ip, #13
   2143c:	mov	lr, r2
   21440:	beq	215e8 <crc32@@Base+0x728c>
   21444:	add	r0, r0, #1
   21448:	cmp	r0, r3
   2144c:	bne	21430 <crc32@@Base+0x70d4>
   21450:	cmp	fp, #9
   21454:	beq	21554 <crc32@@Base+0x71f8>
   21458:	mov	r2, r1
   2145c:	b	21474 <crc32@@Base+0x7118>
   21460:	add	r2, r2, #44	; 0x2c
   21464:	ldr	r0, [r2]
   21468:	cmp	r0, #9
   2146c:	mov	r1, r2
   21470:	beq	21554 <crc32@@Base+0x71f8>
   21474:	add	r6, r6, #1
   21478:	cmp	r6, r3
   2147c:	bne	21460 <crc32@@Base+0x7104>
   21480:	mov	r3, #1
   21484:	ldr	r0, [sp, #24]
   21488:	strb	r3, [r5, #30]
   2148c:	bl	20db8 <crc32@@Base+0x6a5c>
   21490:	cmp	r0, #0
   21494:	bne	21650 <crc32@@Base+0x72f4>
   21498:	mov	r1, r9
   2149c:	mov	r0, r5
   214a0:	bl	20364 <crc32@@Base+0x6008>
   214a4:	ldr	r7, [r7, #4]
   214a8:	strb	r0, [r5, #31]
   214ac:	b	21208 <crc32@@Base+0x6eac>
   214b0:	mov	ip, r7
   214b4:	ldr	r2, [ip, #4]
   214b8:	strb	r2, [r5]
   214bc:	b	21178 <crc32@@Base+0x6e1c>
   214c0:	mov	ip, r7
   214c4:	ldr	r2, [ip, #4]
   214c8:	strb	r2, [r5, #1]
   214cc:	b	211ac <crc32@@Base+0x6e50>
   214d0:	mov	ip, r7
   214d4:	ldr	r2, [ip, #4]
   214d8:	strh	r2, [r5, #2]
   214dc:	b	211e0 <crc32@@Base+0x6e84>
   214e0:	sub	r2, r7, #44	; 0x2c
   214e4:	mov	r1, #44	; 0x2c
   214e8:	mov	r0, #64	; 0x40
   214ec:	str	r0, [r5, #32]
   214f0:	mla	r4, r1, r4, r2
   214f4:	add	r0, r5, #32
   214f8:	mov	r2, r7
   214fc:	b	21504 <crc32@@Base+0x71a8>
   21500:	ldr	r3, [r2, #44]!	; 0x2c
   21504:	cmp	r3, #11
   21508:	bne	21524 <crc32@@Base+0x71c8>
   2150c:	ldr	ip, [r2, #4]
   21510:	add	r3, r5, r6, lsl #3
   21514:	ldr	r1, [r2, #8]
   21518:	add	r6, r6, #1
   2151c:	str	ip, [r3, #64]	; 0x40
   21520:	str	r1, [r3, #68]	; 0x44
   21524:	cmp	r2, r4
   21528:	bne	21500 <crc32@@Base+0x71a4>
   2152c:	mov	r1, #480	; 0x1e0
   21530:	bl	20364 <crc32@@Base+0x6008>
   21534:	add	r3, sp, #32
   21538:	str	r3, [sp, #16]
   2153c:	strb	r0, [r5, #511]	; 0x1ff
   21540:	b	21208 <crc32@@Base+0x6eac>
   21544:	mov	ip, r1
   21548:	ldr	r2, [ip, #4]
   2154c:	strb	r2, [r5]
   21550:	b	21380 <crc32@@Base+0x7024>
   21554:	ldr	r0, [r1, #4]
   21558:	mov	r1, #47	; 0x2f
   2155c:	bl	127a8 <strrchr@plt>
   21560:	movw	r1, #47356	; 0xb8fc
   21564:	movt	r1, #3
   21568:	bl	12718 <strcmp@plt>
   2156c:	cmp	r0, #0
   21570:	ldreq	r3, [sp, #28]
   21574:	streq	r3, [r5, #16]
   21578:	b	21480 <crc32@@Base+0x7124>
   2157c:	mov	lr, r1
   21580:	ldrh	r2, [lr, #6]
   21584:	strb	r2, [r5, #25]
   21588:	b	213b4 <crc32@@Base+0x7058>
   2158c:	mov	lr, r1
   21590:	ldr	r2, [lr, #4]
   21594:	strb	r2, [r5, #26]
   21598:	b	213e8 <crc32@@Base+0x708c>
   2159c:	mov	lr, r1
   215a0:	ldr	r2, [lr, #4]
   215a4:	cmp	r2, #19200	; 0x4b00
   215a8:	beq	216dc <crc32@@Base+0x7380>
   215ac:	bls	215fc <crc32@@Base+0x72a0>
   215b0:	cmp	r2, #57600	; 0xe100
   215b4:	moveq	r2, #6
   215b8:	beq	215dc <crc32@@Base+0x7280>
   215bc:	mov	r0, #49664	; 0xc200
   215c0:	movt	r0, #1
   215c4:	cmp	r2, r0
   215c8:	moveq	r2, #7
   215cc:	beq	215dc <crc32@@Base+0x7280>
   215d0:	cmp	r2, #38400	; 0x9600
   215d4:	beq	216d4 <crc32@@Base+0x7378>
   215d8:	mov	r2, #0
   215dc:	strb	r2, [r5, #24]
   215e0:	b	2141c <crc32@@Base+0x70c0>
   215e4:	mov	lr, r1
   215e8:	ldr	r2, [lr, #4]
   215ec:	adds	r2, r2, #0
   215f0:	movne	r2, #1
   215f4:	strb	r2, [r5, #1]
   215f8:	b	21450 <crc32@@Base+0x70f4>
   215fc:	cmp	r2, #4800	; 0x12c0
   21600:	moveq	r2, #2
   21604:	beq	215dc <crc32@@Base+0x7280>
   21608:	cmp	r2, #9600	; 0x2580
   2160c:	moveq	r2, #3
   21610:	beq	215dc <crc32@@Base+0x7280>
   21614:	cmp	r2, #2400	; 0x960
   21618:	bne	215d8 <crc32@@Base+0x727c>
   2161c:	mov	r2, #1
   21620:	b	215dc <crc32@@Base+0x7280>
   21624:	movw	r2, #7868	; 0x1ebc
   21628:	movt	r2, #5
   2162c:	mov	r1, #4
   21630:	ldr	r0, [r2]
   21634:	movw	r2, #47276	; 0xb8ac
   21638:	str	r1, [sp]
   2163c:	movt	r2, #3
   21640:	mov	r1, #1
   21644:	bl	12358 <__fprintf_chk@plt>
   21648:	mov	r3, #0
   2164c:	b	2123c <crc32@@Base+0x6ee0>
   21650:	movw	r4, #7868	; 0x1ebc
   21654:	movt	r4, #5
   21658:	ldr	r3, [r4]
   2165c:	mov	r2, #23
   21660:	mov	r1, #1
   21664:	movw	r0, #47252	; 0xb894
   21668:	movt	r0, #3
   2166c:	bl	12634 <fwrite@plt>
   21670:	ldr	r0, [r7, #4]
   21674:	bl	121c0 <free@plt>
   21678:	mov	r0, #1
   2167c:	bl	12298 <exit@plt>
   21680:	movw	r4, #7868	; 0x1ebc
   21684:	movt	r4, #5
   21688:	movw	r0, #46488	; 0xb598
   2168c:	mov	r2, #36	; 0x24
   21690:	ldr	r3, [r4]
   21694:	mov	r1, #1
   21698:	movt	r0, #3
   2169c:	bl	12634 <fwrite@plt>
   216a0:	b	21658 <crc32@@Base+0x72fc>
   216a4:	mov	fp, r6
   216a8:	mov	r9, #32
   216ac:	b	210f0 <crc32@@Base+0x6d94>
   216b0:	mov	r1, #32
   216b4:	bl	20364 <crc32@@Base+0x6008>
   216b8:	cmp	fp, #0
   216bc:	strb	r0, [r5, #31]
   216c0:	beq	21200 <crc32@@Base+0x6ea4>
   216c4:	mov	r3, #64	; 0x40
   216c8:	add	r0, r5, #32
   216cc:	str	r3, [r5, #32]
   216d0:	b	2152c <crc32@@Base+0x71d0>
   216d4:	mov	r2, #5
   216d8:	b	215dc <crc32@@Base+0x7280>
   216dc:	mov	r2, #4
   216e0:	b	215dc <crc32@@Base+0x7280>
   216e4:	movw	r4, #7868	; 0x1ebc
   216e8:	movt	r4, #5
   216ec:	movw	r0, #47216	; 0xb870
   216f0:	mov	r2, #33	; 0x21
   216f4:	ldr	r3, [r4]
   216f8:	mov	r1, #1
   216fc:	movt	r0, #3
   21700:	bl	12634 <fwrite@plt>
   21704:	b	21658 <crc32@@Base+0x72fc>
   21708:	movw	r4, #7868	; 0x1ebc
   2170c:	movt	r4, #5
   21710:	mov	r1, fp
   21714:	movw	r0, #47216	; 0xb870
   21718:	ldr	r3, [r4]
   2171c:	mov	r2, #33	; 0x21
   21720:	movt	r0, #3
   21724:	bl	12634 <fwrite@plt>
   21728:	b	21658 <crc32@@Base+0x72fc>
   2172c:	movw	r3, #7868	; 0x1ebc
   21730:	movt	r3, #5
   21734:	mov	r2, #23
   21738:	mov	r1, #1
   2173c:	ldr	r3, [r3]
   21740:	movw	r0, #47080	; 0xb7e8
   21744:	movt	r0, #3
   21748:	bl	12634 <fwrite@plt>
   2174c:	mov	r0, r4
   21750:	bl	126b8 <fclose@plt>
   21754:	mov	r0, #1
   21758:	bl	12298 <exit@plt>
   2175c:	ldr	r3, [sp, #20]
   21760:	movw	r1, #7868	; 0x1ebc
   21764:	movt	r1, #5
   21768:	movw	r2, #47048	; 0xb7c8
   2176c:	movt	r2, #3
   21770:	ldr	r0, [r1]
   21774:	mov	r1, #1
   21778:	ldr	r3, [r3, #64]	; 0x40
   2177c:	bl	12358 <__fprintf_chk@plt>
   21780:	mov	r0, #1
   21784:	bl	12298 <exit@plt>
   21788:	bl	12538 <__stack_chk_fail@plt>
   2178c:	ldr	r3, [sp, #20]
   21790:	movw	r1, #7868	; 0x1ebc
   21794:	movt	r1, #5
   21798:	movw	r2, #47316	; 0xb8d4
   2179c:	movt	r2, #3
   217a0:	ldr	ip, [r3, #76]	; 0x4c
   217a4:	str	r0, [sp]
   217a8:	ldr	r0, [r1]
   217ac:	mov	r1, #1
   217b0:	ldr	r3, [r3, #80]	; 0x50
   217b4:	str	ip, [sp, #4]
   217b8:	bl	12358 <__fprintf_chk@plt>
   217bc:	mov	r0, #1
   217c0:	bl	12298 <exit@plt>
   217c4:	movw	r1, #7868	; 0x1ebc
   217c8:	movt	r1, #5
   217cc:	movw	r2, #47104	; 0xb800
   217d0:	mov	r3, fp
   217d4:	ldr	r0, [r1]
   217d8:	movt	r2, #3
   217dc:	mov	r1, #1
   217e0:	bl	12358 <__fprintf_chk@plt>
   217e4:	ldr	r0, [r7, #4]
   217e8:	bl	121c0 <free@plt>
   217ec:	mov	r0, #1
   217f0:	bl	12298 <exit@plt>
   217f4:	push	{r4, r5, r6, lr}
   217f8:	movw	r1, #46804	; 0xb6d4
   217fc:	ldr	r5, [pc, #64]	; 21844 <crc32@@Base+0x74e8>
   21800:	movt	r1, #3
   21804:	mov	r6, r0
   21808:	mov	r4, #1
   2180c:	b	21820 <crc32@@Base+0x74c4>
   21810:	add	r4, r4, #1
   21814:	cmp	r4, #24
   21818:	beq	21838 <crc32@@Base+0x74dc>
   2181c:	ldr	r1, [r5, #4]!
   21820:	mov	r0, r6
   21824:	bl	12718 <strcmp@plt>
   21828:	cmp	r0, #0
   2182c:	bne	21810 <crc32@@Base+0x74b4>
   21830:	mov	r0, r4
   21834:	pop	{r4, r5, r6, pc}
   21838:	mov	r4, #0
   2183c:	mov	r0, r4
   21840:	pop	{r4, r5, r6, pc}
   21844:	andeq	fp, r3, r4, ror r4
   21848:	ldr	r2, [r0, #12]
   2184c:	ldr	r3, [r0, #8]
   21850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21854:	eor	r6, r3, r2
   21858:	ldr	r3, [r0, #4]
   2185c:	movw	lr, #42104	; 0xa478
   21860:	ldr	sl, [r1]
   21864:	movt	lr, #55146	; 0xd76a
   21868:	and	r6, r6, r3
   2186c:	ldr	r3, [r0]
   21870:	add	lr, sl, lr
   21874:	eor	r6, r6, r2
   21878:	ldmib	r0, {r2, ip}
   2187c:	add	lr, lr, r3
   21880:	ldr	r3, [r1, #4]
   21884:	add	r6, r6, lr
   21888:	eor	r4, r2, ip
   2188c:	movw	r5, #46934	; 0xb756
   21890:	ldr	ip, [r0, #12]
   21894:	movt	r5, #59591	; 0xe8c7
   21898:	add	r5, r3, r5
   2189c:	add	r6, r2, r6, ror #25
   218a0:	add	r5, r5, ip
   218a4:	ldr	ip, [r0, #8]
   218a8:	and	r4, r4, r6
   218ac:	ldr	lr, [r1, #8]
   218b0:	eor	r4, r4, ip
   218b4:	movw	ip, #28891	; 0x70db
   218b8:	add	r4, r4, r5
   218bc:	movt	ip, #9248	; 0x2420
   218c0:	add	ip, lr, ip
   218c4:	eor	r2, r2, r6
   218c8:	add	r5, r6, r4, ror #20
   218cc:	ldr	r4, [r0, #8]
   218d0:	and	r2, r2, r5
   218d4:	sub	sp, sp, #52	; 0x34
   218d8:	add	ip, ip, r4
   218dc:	ldr	r4, [r0, #4]
   218e0:	ldr	r8, [r1, #12]
   218e4:	eor	r2, r2, r4
   218e8:	str	r3, [sp, #4]
   218ec:	add	r2, r2, ip
   218f0:	eor	r3, r6, r5
   218f4:	movw	ip, #52974	; 0xceee
   218f8:	movt	ip, #49597	; 0xc1bd
   218fc:	add	r7, r5, r2, ror #15
   21900:	add	ip, r8, ip
   21904:	and	r3, r3, r7
   21908:	add	ip, ip, r4
   2190c:	eor	r3, r3, r6
   21910:	ldr	r9, [r1, #16]
   21914:	add	r3, r3, ip
   21918:	str	lr, [sp, #8]
   2191c:	movw	lr, #4015	; 0xfaf
   21920:	movt	lr, #62844	; 0xf57c
   21924:	add	r3, r7, r3, ror #10
   21928:	eor	r2, r5, r7
   2192c:	add	lr, r9, lr
   21930:	ldr	fp, [r1, #20]
   21934:	add	r6, lr, r6
   21938:	and	lr, r2, r3
   2193c:	eor	lr, lr, r5
   21940:	eor	ip, r7, r3
   21944:	add	lr, lr, r6
   21948:	movw	r4, #50730	; 0xc62a
   2194c:	movt	r4, #18311	; 0x4787
   21950:	ldr	r6, [r1, #24]
   21954:	add	lr, r3, lr, ror #25
   21958:	add	r4, fp, r4
   2195c:	and	r2, ip, lr
   21960:	add	r4, r4, r5
   21964:	eor	r2, r2, r7
   21968:	str	r8, [sp, #12]
   2196c:	add	r2, r2, r4
   21970:	movw	r8, #17939	; 0x4613
   21974:	movt	r8, #43056	; 0xa830
   21978:	eor	ip, r3, lr
   2197c:	add	r4, lr, r2, ror #20
   21980:	add	r8, r6, r8
   21984:	add	r2, r8, r7
   21988:	and	r8, ip, r4
   2198c:	eor	r8, r8, r3
   21990:	str	fp, [sp, #20]
   21994:	add	r8, r8, r2
   21998:	ldr	fp, [r1, #28]
   2199c:	movw	ip, #38145	; 0x9501
   219a0:	movt	ip, #64838	; 0xfd46
   219a4:	add	r8, r4, r8, ror #15
   219a8:	eor	r5, lr, r4
   219ac:	add	ip, fp, ip
   219b0:	ldr	r7, [r1, #32]
   219b4:	add	r3, ip, r3
   219b8:	and	ip, r5, r8
   219bc:	eor	ip, ip, lr
   219c0:	str	r6, [sp, #24]
   219c4:	add	ip, ip, r3
   219c8:	movw	r6, #39128	; 0x98d8
   219cc:	movt	r6, #27008	; 0x6980
   219d0:	eor	r2, r4, r8
   219d4:	add	ip, r8, ip, ror #10
   219d8:	add	r6, r7, r6
   219dc:	add	lr, r6, lr
   219e0:	and	r6, r2, ip
   219e4:	eor	r6, r6, r4
   219e8:	ldr	r2, [r1, #36]	; 0x24
   219ec:	add	r6, r6, lr
   219f0:	movw	r5, #63407	; 0xf7af
   219f4:	movt	r5, #35652	; 0x8b44
   219f8:	eor	r3, r8, ip
   219fc:	add	r6, ip, r6, ror #25
   21a00:	add	r5, r2, r5
   21a04:	str	r2, [sp, #32]
   21a08:	add	r2, r5, r4
   21a0c:	and	r5, r3, r6
   21a10:	str	r7, [sp, #28]
   21a14:	eor	r5, r5, r8
   21a18:	ldr	r7, [r1, #40]	; 0x28
   21a1c:	add	r5, r5, r2
   21a20:	eor	r3, ip, r6
   21a24:	sub	r2, r7, #41984	; 0xa400
   21a28:	ldr	r4, [r1, #44]	; 0x2c
   21a2c:	add	r5, r6, r5, ror #20
   21a30:	sub	r2, r2, #79	; 0x4f
   21a34:	add	r8, r2, r8
   21a38:	and	r2, r3, r5
   21a3c:	eor	r2, r2, ip
   21a40:	movw	r3, #55230	; 0xd7be
   21a44:	add	r2, r2, r8
   21a48:	movt	r3, #35164	; 0x895c
   21a4c:	eor	lr, r6, r5
   21a50:	add	r3, r4, r3
   21a54:	add	r2, r5, r2, ror #15
   21a58:	add	ip, r3, ip
   21a5c:	and	r3, lr, r2
   21a60:	str	sl, [sp, #44]	; 0x2c
   21a64:	eor	r3, r3, r6
   21a68:	str	r9, [sp, #16]
   21a6c:	add	r3, r3, ip
   21a70:	str	r4, [sp, #36]	; 0x24
   21a74:	ldr	r8, [r1, #48]	; 0x30
   21a78:	movw	lr, #4386	; 0x1122
   21a7c:	movt	lr, #27536	; 0x6b90
   21a80:	add	r3, r2, r3, ror #10
   21a84:	eor	r4, r5, r2
   21a88:	add	lr, r8, lr
   21a8c:	add	r6, lr, r6
   21a90:	and	lr, r4, r3
   21a94:	eor	lr, lr, r5
   21a98:	ldr	r9, [r1, #52]	; 0x34
   21a9c:	add	lr, lr, r6
   21aa0:	movw	r4, #29075	; 0x7193
   21aa4:	movt	r4, #64920	; 0xfd98
   21aa8:	eor	ip, r2, r3
   21aac:	add	lr, r3, lr, ror #25
   21ab0:	add	r4, r9, r4
   21ab4:	add	r5, r4, r5
   21ab8:	and	r4, ip, lr
   21abc:	eor	r4, r4, r2
   21ac0:	str	r9, [sp, #40]	; 0x28
   21ac4:	add	r4, r4, r5
   21ac8:	ldr	r9, [r1, #56]	; 0x38
   21acc:	eor	r5, r3, lr
   21ad0:	movw	ip, #17294	; 0x438e
   21ad4:	add	r4, lr, r4, ror #20
   21ad8:	movt	ip, #42617	; 0xa679
   21adc:	ldr	r6, [r1, #60]	; 0x3c
   21ae0:	add	ip, r9, ip
   21ae4:	and	r1, r5, r4
   21ae8:	add	r2, ip, r2
   21aec:	eor	r1, r1, r3
   21af0:	movw	ip, #2081	; 0x821
   21af4:	add	r1, r1, r2
   21af8:	movt	ip, #18868	; 0x49b4
   21afc:	eor	r5, lr, r4
   21b00:	add	ip, r6, ip
   21b04:	add	r1, r4, r1, ror #15
   21b08:	add	r3, ip, r3
   21b0c:	and	ip, r5, r1
   21b10:	ldr	r2, [sp, #4]
   21b14:	eor	ip, ip, lr
   21b18:	movw	sl, #9570	; 0x2562
   21b1c:	add	ip, ip, r3
   21b20:	movt	sl, #63006	; 0xf61e
   21b24:	ldr	r5, [sp, #24]
   21b28:	add	sl, r2, sl
   21b2c:	add	ip, r1, ip, ror #10
   21b30:	add	lr, sl, lr
   21b34:	movw	sl, #45888	; 0xb340
   21b38:	movt	sl, #49216	; 0xc040
   21b3c:	eor	r3, r1, ip
   21b40:	add	sl, r5, sl
   21b44:	add	sl, sl, r4
   21b48:	and	r4, r4, r3
   21b4c:	eor	r4, r4, r1
   21b50:	ldr	r5, [sp, #44]	; 0x2c
   21b54:	add	lr, r4, lr
   21b58:	ldr	r4, [sp, #36]	; 0x24
   21b5c:	movw	r3, #23121	; 0x5a51
   21b60:	movt	r3, #9822	; 0x265e
   21b64:	add	lr, ip, lr, ror #27
   21b68:	add	r3, r4, r3
   21b6c:	eor	r2, ip, lr
   21b70:	movw	r4, #51114	; 0xc7aa
   21b74:	and	r2, r2, r1
   21b78:	movt	r4, #59830	; 0xe9b6
   21b7c:	eor	r2, r2, ip
   21b80:	add	r4, r5, r4
   21b84:	add	r2, r2, sl
   21b88:	add	r5, r4, ip
   21b8c:	ldr	r4, [sp, #20]
   21b90:	add	r3, r3, r1
   21b94:	add	r2, lr, r2, ror #23
   21b98:	movw	r1, #4189	; 0x105d
   21b9c:	movt	r1, #54831	; 0xd62f
   21ba0:	movw	sl, #5203	; 0x1453
   21ba4:	add	r1, r4, r1
   21ba8:	eor	r4, lr, r2
   21bac:	and	ip, ip, r4
   21bb0:	movt	sl, #580	; 0x244
   21bb4:	eor	ip, ip, lr
   21bb8:	add	sl, r7, sl
   21bbc:	add	r3, ip, r3
   21bc0:	add	sl, sl, r2
   21bc4:	add	r1, r1, lr
   21bc8:	add	r3, r2, r3, ror #18
   21bcc:	eor	r4, r2, r3
   21bd0:	and	r4, r4, lr
   21bd4:	movw	lr, #59009	; 0xe681
   21bd8:	eor	r4, r4, r2
   21bdc:	movt	lr, #55457	; 0xd8a1
   21be0:	add	r4, r4, r5
   21be4:	movw	r5, #64456	; 0xfbc8
   21be8:	movt	r5, #59347	; 0xe7d3
   21bec:	add	lr, r6, lr
   21bf0:	add	r4, r3, r4, ror #12
   21bf4:	add	lr, lr, r3
   21bf8:	eor	ip, r3, r4
   21bfc:	and	r2, r2, ip
   21c00:	ldr	ip, [sp, #16]
   21c04:	eor	r2, r2, r3
   21c08:	add	r1, r2, r1
   21c0c:	add	r5, ip, r5
   21c10:	ldr	r2, [sp, #32]
   21c14:	add	r5, r5, r4
   21c18:	add	r1, r4, r1, ror #27
   21c1c:	eor	ip, r4, r1
   21c20:	and	ip, ip, r3
   21c24:	movw	r3, #52710	; 0xcde6
   21c28:	eor	ip, ip, r4
   21c2c:	movt	r3, #8673	; 0x21e1
   21c30:	add	ip, ip, sl
   21c34:	add	r3, r2, r3
   21c38:	add	r3, r3, r1
   21c3c:	movw	sl, #2006	; 0x7d6
   21c40:	add	ip, r1, ip, ror #23
   21c44:	movt	sl, #49975	; 0xc337
   21c48:	eor	r2, r1, ip
   21c4c:	add	sl, r9, sl
   21c50:	and	r4, r4, r2
   21c54:	add	sl, sl, ip
   21c58:	eor	r4, r4, r1
   21c5c:	add	lr, r4, lr
   21c60:	ldr	r4, [sp, #12]
   21c64:	add	lr, ip, lr, ror #18
   21c68:	eor	r2, ip, lr
   21c6c:	and	r2, r2, r1
   21c70:	movw	r1, #3463	; 0xd87
   21c74:	eor	r2, r2, ip
   21c78:	movt	r1, #62677	; 0xf4d5
   21c7c:	add	r2, r2, r5
   21c80:	add	r1, r4, r1
   21c84:	movw	r5, #5357	; 0x14ed
   21c88:	movt	r5, #17754	; 0x455a
   21c8c:	add	r2, lr, r2, ror #12
   21c90:	add	r1, r1, lr
   21c94:	eor	r4, lr, r2
   21c98:	and	ip, ip, r4
   21c9c:	eor	ip, ip, lr
   21ca0:	add	r3, ip, r3
   21ca4:	ldr	ip, [sp, #28]
   21ca8:	add	r3, r2, r3, ror #27
   21cac:	add	r5, ip, r5
   21cb0:	eor	r4, r2, r3
   21cb4:	add	r5, r5, r2
   21cb8:	and	r4, r4, lr
   21cbc:	movw	lr, #59653	; 0xe905
   21cc0:	eor	r4, r4, r2
   21cc4:	movt	lr, #43491	; 0xa9e3
   21cc8:	add	r4, r4, sl
   21ccc:	ldr	sl, [sp, #40]	; 0x28
   21cd0:	add	r4, r3, r4, ror #23
   21cd4:	add	lr, sl, lr
   21cd8:	eor	ip, r3, r4
   21cdc:	movw	sl, #41976	; 0xa3f8
   21ce0:	and	r2, r2, ip
   21ce4:	ldr	ip, [sp, #8]
   21ce8:	eor	r2, r2, r3
   21cec:	movt	sl, #64751	; 0xfcef
   21cf0:	add	r1, r2, r1
   21cf4:	add	sl, ip, sl
   21cf8:	movw	r2, #729	; 0x2d9
   21cfc:	movt	r2, #26479	; 0x676f
   21d00:	add	r1, r4, r1, ror #18
   21d04:	add	r2, fp, r2
   21d08:	eor	ip, r4, r1
   21d0c:	add	lr, lr, r3
   21d10:	and	ip, ip, r3
   21d14:	add	r3, r2, r1
   21d18:	eor	ip, ip, r4
   21d1c:	add	sl, sl, r4
   21d20:	add	ip, ip, r5
   21d24:	movw	r5, #19594	; 0x4c8a
   21d28:	movt	r5, #36138	; 0x8d2a
   21d2c:	add	ip, r1, ip, ror #12
   21d30:	add	r5, r8, r5
   21d34:	eor	r2, r1, ip
   21d38:	add	r5, r5, ip
   21d3c:	and	r4, r4, r2
   21d40:	eor	r4, r4, r1
   21d44:	add	lr, r4, lr
   21d48:	movw	r4, #14658	; 0x3942
   21d4c:	movt	r4, #65530	; 0xfffa
   21d50:	add	lr, ip, lr, ror #27
   21d54:	eor	r2, ip, lr
   21d58:	and	r1, r1, r2
   21d5c:	eor	r1, r1, ip
   21d60:	add	sl, r1, sl
   21d64:	ldr	r1, [sp, #20]
   21d68:	add	sl, lr, sl, ror #23
   21d6c:	add	r4, r1, r4
   21d70:	eor	r2, lr, sl
   21d74:	ldr	r1, [sp, #28]
   21d78:	and	r2, r2, ip
   21d7c:	movw	ip, #63105	; 0xf681
   21d80:	eor	r2, r2, lr
   21d84:	movt	ip, #34673	; 0x8771
   21d88:	add	r2, r2, r3
   21d8c:	add	ip, r1, ip
   21d90:	add	r4, r4, lr
   21d94:	add	ip, ip, sl
   21d98:	add	r2, sl, r2, ror #18
   21d9c:	eor	r1, sl, r2
   21da0:	and	r3, r1, lr
   21da4:	movw	lr, #24866	; 0x6122
   21da8:	eor	r3, r3, sl
   21dac:	ldr	sl, [sp, #36]	; 0x24
   21db0:	add	r3, r3, r5
   21db4:	movt	lr, #28061	; 0x6d9d
   21db8:	add	lr, sl, lr
   21dbc:	movw	r5, #14348	; 0x380c
   21dc0:	add	r3, r2, r3, ror #12
   21dc4:	add	lr, lr, r2
   21dc8:	eor	r1, r1, r3
   21dcc:	eor	r2, r2, r3
   21dd0:	add	r1, r1, r4
   21dd4:	movt	r5, #64997	; 0xfde5
   21dd8:	add	r5, r9, r5
   21ddc:	movw	r4, #59972	; 0xea44
   21de0:	add	r1, r3, r1, ror #28
   21de4:	add	r5, r5, r3
   21de8:	eor	r2, r2, r1
   21dec:	eor	r3, r3, r1
   21df0:	add	r2, r2, ip
   21df4:	ldr	ip, [sp, #4]
   21df8:	movt	r4, #42174	; 0xa4be
   21dfc:	ldr	sl, [sp, #44]	; 0x2c
   21e00:	add	r2, r1, r2, ror #21
   21e04:	add	r4, ip, r4
   21e08:	eor	r3, r3, r2
   21e0c:	add	r4, r4, r1
   21e10:	add	r3, r3, lr
   21e14:	eor	r1, r1, r2
   21e18:	ldr	lr, [sp, #16]
   21e1c:	movw	ip, #53161	; 0xcfa9
   21e20:	add	r3, r2, r3, ror #16
   21e24:	movt	ip, #19422	; 0x4bde
   21e28:	eor	r1, r1, r3
   21e2c:	add	ip, lr, ip
   21e30:	add	r1, r1, r5
   21e34:	add	ip, ip, r2
   21e38:	eor	r2, r2, r3
   21e3c:	movw	lr, #19296	; 0x4b60
   21e40:	add	r1, r3, r1, ror #9
   21e44:	movt	lr, #63163	; 0xf6bb
   21e48:	eor	r2, r2, r1
   21e4c:	add	lr, fp, lr
   21e50:	add	r2, r2, r4
   21e54:	add	lr, lr, r3
   21e58:	eor	r3, r3, r1
   21e5c:	movw	r5, #48240	; 0xbc70
   21e60:	add	r2, r1, r2, ror #28
   21e64:	movt	r5, #48831	; 0xbebf
   21e68:	eor	r3, r3, r2
   21e6c:	add	r5, r7, r5
   21e70:	add	r3, r3, ip
   21e74:	add	r5, r5, r1
   21e78:	eor	r1, r1, r2
   21e7c:	ldr	ip, [sp, #40]	; 0x28
   21e80:	add	r3, r2, r3, ror #21
   21e84:	movw	r4, #32454	; 0x7ec6
   21e88:	eor	r1, r1, r3
   21e8c:	movt	r4, #10395	; 0x289b
   21e90:	add	r1, r1, lr
   21e94:	add	r4, ip, r4
   21e98:	add	r4, r4, r2
   21e9c:	eor	r2, r2, r3
   21ea0:	add	r1, r3, r1, ror #16
   21ea4:	movw	ip, #10234	; 0x27fa
   21ea8:	eor	r2, r2, r1
   21eac:	movt	ip, #60065	; 0xeaa1
   21eb0:	add	r2, r2, r5
   21eb4:	add	ip, sl, ip
   21eb8:	add	ip, ip, r3
   21ebc:	eor	r3, r3, r1
   21ec0:	add	r2, r1, r2, ror #9
   21ec4:	ldr	r5, [sp, #12]
   21ec8:	eor	r3, r3, r2
   21ecc:	movw	lr, #12421	; 0x3085
   21ed0:	add	r3, r3, r4
   21ed4:	movt	lr, #54511	; 0xd4ef
   21ed8:	add	lr, r5, lr
   21edc:	ldr	r4, [sp, #24]
   21ee0:	add	r3, r2, r3, ror #28
   21ee4:	add	lr, lr, r1
   21ee8:	eor	r1, r1, r2
   21eec:	movw	r5, #7429	; 0x1d05
   21ef0:	eor	r1, r1, r3
   21ef4:	movt	r5, #1160	; 0x488
   21ef8:	add	r1, r1, ip
   21efc:	add	r5, r4, r5
   21f00:	add	r5, r5, r2
   21f04:	eor	r2, r2, r3
   21f08:	add	r1, r3, r1, ror #21
   21f0c:	ldr	ip, [sp, #32]
   21f10:	eor	r2, r2, r1
   21f14:	movw	r4, #53305	; 0xd039
   21f18:	add	r2, r2, lr
   21f1c:	movt	r4, #55764	; 0xd9d4
   21f20:	add	r4, ip, r4
   21f24:	movw	ip, #39397	; 0x99e5
   21f28:	add	r2, r1, r2, ror #16
   21f2c:	add	r4, r4, r3
   21f30:	eor	r3, r3, r1
   21f34:	movt	ip, #59099	; 0xe6db
   21f38:	eor	r3, r3, r2
   21f3c:	add	ip, r8, ip
   21f40:	add	r3, r3, r5
   21f44:	add	ip, ip, r1
   21f48:	eor	r1, r1, r2
   21f4c:	movw	lr, #31992	; 0x7cf8
   21f50:	add	r3, r2, r3, ror #9
   21f54:	movt	lr, #8098	; 0x1fa2
   21f58:	eor	r1, r1, r3
   21f5c:	add	lr, r6, lr
   21f60:	add	r1, r1, r4
   21f64:	add	lr, lr, r2
   21f68:	eor	r2, r2, r3
   21f6c:	ldr	r4, [sp, #8]
   21f70:	add	r1, r3, r1, ror #28
   21f74:	movw	r5, #22117	; 0x5665
   21f78:	eor	r2, r2, r1
   21f7c:	movt	r5, #50348	; 0xc4ac
   21f80:	add	r2, r2, ip
   21f84:	add	r5, r4, r5
   21f88:	add	r5, r5, r3
   21f8c:	eor	r3, r3, r1
   21f90:	add	r2, r1, r2, ror #21
   21f94:	movw	r4, #8772	; 0x2244
   21f98:	eor	r3, r3, r2
   21f9c:	movt	r4, #62505	; 0xf429
   21fa0:	add	r3, r3, lr
   21fa4:	add	r4, sl, r4
   21fa8:	add	r4, r4, r1
   21fac:	eor	r1, r1, r2
   21fb0:	add	r3, r2, r3, ror #16
   21fb4:	mvn	ip, r2
   21fb8:	eor	r1, r1, r3
   21fbc:	movw	sl, #65431	; 0xff97
   21fc0:	add	r1, r1, r5
   21fc4:	movt	sl, #17194	; 0x432a
   21fc8:	ldr	r5, [sp, #20]
   21fcc:	add	sl, fp, sl
   21fd0:	add	r1, r3, r1, ror #9
   21fd4:	add	r2, sl, r2
   21fd8:	orr	ip, ip, r1
   21fdc:	movw	sl, #41017	; 0xa039
   21fe0:	eor	ip, ip, r3
   21fe4:	movt	sl, #64659	; 0xfc93
   21fe8:	add	ip, ip, r4
   21fec:	mvn	fp, r3
   21ff0:	add	sl, r5, sl
   21ff4:	movw	lr, #9127	; 0x23a7
   21ff8:	add	ip, r1, ip, ror #26
   21ffc:	movt	lr, #43924	; 0xab94
   22000:	orr	fp, fp, ip
   22004:	add	lr, r9, lr
   22008:	add	sl, sl, r1
   2200c:	mvn	r9, r1
   22010:	eor	r1, r1, fp
   22014:	movw	r5, #22979	; 0x59c3
   22018:	add	r2, r1, r2
   2201c:	movt	r5, #25947	; 0x655b
   22020:	add	r5, r8, r5
   22024:	add	lr, lr, r3
   22028:	add	r2, ip, r2, ror #22
   2202c:	add	r5, r5, ip
   22030:	orr	r9, r9, r2
   22034:	mvn	r3, ip
   22038:	eor	ip, ip, r9
   2203c:	ldr	r1, [sp, #12]
   22040:	add	lr, ip, lr
   22044:	movw	r8, #52370	; 0xcc92
   22048:	movt	r8, #36620	; 0x8f0c
   2204c:	mvn	fp, r2
   22050:	add	lr, r2, lr, ror #17
   22054:	add	r8, r1, r8
   22058:	orr	r3, r3, lr
   2205c:	add	r8, r8, r2
   22060:	eor	r2, r2, r3
   22064:	movw	r4, #62589	; 0xf47d
   22068:	add	sl, r2, sl
   2206c:	movt	r4, #65519	; 0xffef
   22070:	add	r4, r7, r4
   22074:	mvn	r7, lr
   22078:	add	sl, lr, sl, ror #11
   2207c:	add	r4, r4, lr
   22080:	orr	fp, fp, sl
   22084:	ldr	r3, [sp, #4]
   22088:	eor	lr, lr, fp
   2208c:	ldr	r1, [sp, #28]
   22090:	add	lr, lr, r5
   22094:	movw	ip, #24017	; 0x5dd1
   22098:	movw	r9, #32335	; 0x7e4f
   2209c:	movt	ip, #34180	; 0x8584
   220a0:	add	lr, sl, lr, ror #26
   220a4:	movt	r9, #28584	; 0x6fa8
   220a8:	orr	r7, r7, lr
   220ac:	add	ip, r3, ip
   220b0:	eor	r7, r7, sl
   220b4:	mvn	r3, sl
   220b8:	add	r7, r7, r8
   220bc:	add	r9, r1, r9
   220c0:	add	r9, r9, lr
   220c4:	mvn	r2, lr
   220c8:	add	r7, lr, r7, ror #22
   220cc:	movw	r1, #59104	; 0xe6e0
   220d0:	orr	r3, r3, r7
   220d4:	movt	r1, #65068	; 0xfe2c
   220d8:	eor	lr, lr, r3
   220dc:	add	r1, r6, r1
   220e0:	add	r4, lr, r4
   220e4:	add	ip, ip, sl
   220e8:	add	r1, r1, r7
   220ec:	mvn	sl, r7
   220f0:	add	r4, r7, r4, ror #17
   220f4:	ldr	r5, [sp, #24]
   220f8:	orr	r2, r2, r4
   220fc:	ldr	r3, [sp, #40]	; 0x28
   22100:	eor	r7, r7, r2
   22104:	movw	r6, #17172	; 0x4314
   22108:	add	r7, r7, ip
   2210c:	movt	r6, #41729	; 0xa301
   22110:	add	r6, r5, r6
   22114:	movw	r5, #4513	; 0x11a1
   22118:	add	r7, r4, r7, ror #11
   2211c:	movt	r5, #19976	; 0x4e08
   22120:	orr	sl, sl, r7
   22124:	add	r5, r3, r5
   22128:	eor	sl, sl, r4
   2212c:	mvn	r3, r4
   22130:	add	sl, sl, r9
   22134:	add	r5, r5, r7
   22138:	mvn	r8, r7
   2213c:	ldr	r2, [sp, #16]
   22140:	add	sl, r7, sl, ror #26
   22144:	add	r6, r6, r4
   22148:	orr	r3, r3, sl
   2214c:	ldr	r4, [sp, #8]
   22150:	eor	r7, r7, r3
   22154:	movw	fp, #32386	; 0x7e82
   22158:	add	r1, r7, r1
   2215c:	movt	fp, #63315	; 0xf753
   22160:	add	fp, r2, fp
   22164:	movw	r2, #53947	; 0xd2bb
   22168:	add	r1, sl, r1, ror #22
   2216c:	movt	r2, #10967	; 0x2ad7
   22170:	orr	r8, r8, r1
   22174:	add	r2, r4, r2
   22178:	add	fp, fp, sl
   2217c:	mvn	r4, sl
   22180:	eor	sl, sl, r8
   22184:	ldr	r3, [sp, #32]
   22188:	add	r6, sl, r6
   2218c:	ldr	r9, [sp, #36]	; 0x24
   22190:	movw	ip, #54161	; 0xd391
   22194:	movt	ip, #60294	; 0xeb86
   22198:	add	r6, r1, r6, ror #17
   2219c:	add	ip, r3, ip
   221a0:	orr	r4, r4, r6
   221a4:	mvn	r3, r1
   221a8:	eor	r4, r4, r1
   221ac:	movw	lr, #62005	; 0xf235
   221b0:	add	r5, r4, r5
   221b4:	movt	lr, #48442	; 0xbd3a
   221b8:	add	lr, r9, lr
   221bc:	add	r2, r2, r6
   221c0:	add	r5, r6, r5, ror #11
   221c4:	mvn	r9, r6
   221c8:	orr	r3, r3, r5
   221cc:	add	lr, lr, r1
   221d0:	eor	r6, r6, r3
   221d4:	add	ip, ip, r5
   221d8:	add	fp, r6, fp
   221dc:	mvn	r7, r5
   221e0:	ldr	r3, [r0]
   221e4:	add	fp, r5, fp, ror #26
   221e8:	ldr	r1, [r0, #12]
   221ec:	orr	r9, r9, fp
   221f0:	add	r6, r3, fp
   221f4:	eor	r5, r5, r9
   221f8:	mvn	r3, fp
   221fc:	add	lr, r5, lr
   22200:	str	r6, [r0]
   22204:	add	lr, fp, lr, ror #22
   22208:	orr	r7, r7, lr
   2220c:	add	r1, r1, lr
   22210:	eor	fp, fp, r7
   22214:	str	r1, [r0, #12]
   22218:	add	r2, fp, r2
   2221c:	add	r2, lr, r2, ror #17
   22220:	orr	r1, r3, r2
   22224:	ldr	r3, [r0, #4]
   22228:	eor	lr, lr, r1
   2222c:	ldr	r1, [r0, #8]
   22230:	add	ip, lr, ip
   22234:	add	r3, r3, r2
   22238:	add	r2, r1, r2
   2223c:	str	r2, [r0, #8]
   22240:	add	lr, r3, ip, ror #11
   22244:	str	lr, [r0, #4]
   22248:	add	sp, sp, #52	; 0x34
   2224c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22250:	ldr	r3, [r1, #16]
   22254:	push	{r4, r5, r6, lr}
   22258:	ubfx	r3, r3, #3, #6
   2225c:	rsb	r2, r3, #63	; 0x3f
   22260:	add	r5, r1, #24
   22264:	cmp	r2, #7
   22268:	mov	r6, r0
   2226c:	add	r0, r5, r3
   22270:	mov	r4, r1
   22274:	add	r0, r0, #1
   22278:	mvn	r1, #127	; 0x7f
   2227c:	strb	r1, [r5, r3]
   22280:	bhi	222e4 <crc32@@Base+0x7f88>
   22284:	mov	r1, #0
   22288:	bl	12388 <memset@plt>
   2228c:	mov	r1, r5
   22290:	mov	r0, r4
   22294:	bl	21848 <crc32@@Base+0x74ec>
   22298:	mov	r2, #56	; 0x38
   2229c:	mov	r1, #0
   222a0:	mov	r0, r5
   222a4:	bl	12388 <memset@plt>
   222a8:	ldr	r2, [r4, #16]
   222ac:	mov	r1, r5
   222b0:	ldr	r3, [r4, #20]
   222b4:	mov	r0, r4
   222b8:	strd	r2, [r4, #80]	; 0x50
   222bc:	bl	21848 <crc32@@Base+0x74ec>
   222c0:	mov	r1, r4
   222c4:	mov	r0, r6
   222c8:	mov	r2, #16
   222cc:	bl	12424 <memmove@plt>
   222d0:	mov	r0, r4
   222d4:	mov	r2, #88	; 0x58
   222d8:	mov	r1, #0
   222dc:	pop	{r4, r5, r6, lr}
   222e0:	b	12388 <memset@plt>
   222e4:	rsb	r2, r3, #55	; 0x37
   222e8:	mov	r1, #0
   222ec:	bl	12388 <memset@plt>
   222f0:	b	222a8 <crc32@@Base+0x7f4c>
   222f4:	ldr	r3, [r0, #20]
   222f8:	cmp	r2, #63	; 0x3f
   222fc:	push	{r4, r5, r6, r7, r8, lr}
   22300:	mov	r8, r2
   22304:	add	r3, r3, r8, lsr #29
   22308:	lsl	r2, r2, #3
   2230c:	mov	r4, r1
   22310:	strd	r2, [r0, #16]
   22314:	add	r5, r0, #24
   22318:	bls	2235c <crc32@@Base+0x8000>
   2231c:	sub	r6, r8, #64	; 0x40
   22320:	mov	r7, r0
   22324:	bic	r6, r6, #63	; 0x3f
   22328:	add	r6, r6, #64	; 0x40
   2232c:	add	r6, r1, r6
   22330:	mov	r2, #64	; 0x40
   22334:	mov	r1, r4
   22338:	mov	r0, r5
   2233c:	add	r4, r4, r2
   22340:	bl	12424 <memmove@plt>
   22344:	mov	r1, r5
   22348:	mov	r0, r7
   2234c:	bl	21848 <crc32@@Base+0x74ec>
   22350:	cmp	r6, r4
   22354:	bne	22330 <crc32@@Base+0x7fd4>
   22358:	and	r8, r8, #63	; 0x3f
   2235c:	mov	r2, r8
   22360:	mov	r1, r4
   22364:	mov	r0, r5
   22368:	pop	{r4, r5, r6, r7, r8, lr}
   2236c:	b	12424 <memmove@plt>
   22370:	push	{r4, r5, lr}
   22374:	movw	r4, #3824	; 0xef0
   22378:	movt	r4, #5
   2237c:	sub	sp, sp, #100	; 0x64
   22380:	mov	r5, r2
   22384:	mov	r2, r1
   22388:	ldr	r3, [r4]
   2238c:	mov	r1, r0
   22390:	add	r0, sp, #4
   22394:	movw	ip, #8961	; 0x2301
   22398:	movt	ip, #26437	; 0x6745
   2239c:	str	ip, [sp, #4]
   223a0:	str	r3, [sp, #92]	; 0x5c
   223a4:	movw	r3, #43913	; 0xab89
   223a8:	movt	r3, #61389	; 0xefcd
   223ac:	str	r3, [sp, #8]
   223b0:	movw	r3, #56574	; 0xdcfe
   223b4:	movt	r3, #39098	; 0x98ba
   223b8:	str	r3, [sp, #12]
   223bc:	movw	r3, #21622	; 0x5476
   223c0:	movt	r3, #4146	; 0x1032
   223c4:	str	r3, [sp, #16]
   223c8:	mov	r3, #0
   223cc:	str	r3, [sp, #20]
   223d0:	str	r3, [sp, #24]
   223d4:	bl	222f4 <crc32@@Base+0x7f98>
   223d8:	add	r1, sp, #4
   223dc:	mov	r0, r5
   223e0:	bl	22250 <crc32@@Base+0x7ef4>
   223e4:	ldr	r2, [sp, #92]	; 0x5c
   223e8:	ldr	r3, [r4]
   223ec:	cmp	r2, r3
   223f0:	bne	223fc <crc32@@Base+0x80a0>
   223f4:	add	sp, sp, #100	; 0x64
   223f8:	pop	{r4, r5, pc}
   223fc:	bl	12538 <__stack_chk_fail@plt>
   22400:	push	{r4, r5, lr}
   22404:	movw	r4, #3824	; 0xef0
   22408:	movt	r4, #5
   2240c:	sub	sp, sp, #100	; 0x64
   22410:	mov	r5, r2
   22414:	mov	r2, r1
   22418:	ldr	r3, [r4]
   2241c:	mov	r1, r0
   22420:	add	r0, sp, #4
   22424:	movw	ip, #8961	; 0x2301
   22428:	movt	ip, #26437	; 0x6745
   2242c:	str	ip, [sp, #4]
   22430:	str	r3, [sp, #92]	; 0x5c
   22434:	movw	r3, #43913	; 0xab89
   22438:	movt	r3, #61389	; 0xefcd
   2243c:	str	r3, [sp, #8]
   22440:	movw	r3, #56574	; 0xdcfe
   22444:	movt	r3, #39098	; 0x98ba
   22448:	str	r3, [sp, #12]
   2244c:	movw	r3, #21622	; 0x5476
   22450:	movt	r3, #4146	; 0x1032
   22454:	str	r3, [sp, #16]
   22458:	mov	r3, #0
   2245c:	str	r3, [sp, #20]
   22460:	str	r3, [sp, #24]
   22464:	bl	222f4 <crc32@@Base+0x7f98>
   22468:	add	r1, sp, #4
   2246c:	mov	r0, r5
   22470:	bl	22250 <crc32@@Base+0x7ef4>
   22474:	ldr	r2, [sp, #92]	; 0x5c
   22478:	ldr	r3, [r4]
   2247c:	cmp	r2, r3
   22480:	bne	2248c <crc32@@Base+0x8130>
   22484:	add	sp, sp, #100	; 0x64
   22488:	pop	{r4, r5, pc}
   2248c:	bl	12538 <__stack_chk_fail@plt>
   22490:	subs	r0, r0, #21
   22494:	movne	r0, #1
   22498:	bx	lr
   2249c:	sub	r1, r1, #1
   224a0:	ldr	r2, [r0]
   224a4:	add	r3, r1, #2032	; 0x7f0
   224a8:	cmp	r1, #0
   224ac:	add	r3, r3, #15
   224b0:	movlt	r1, r3
   224b4:	cmp	r2, #150	; 0x96
   224b8:	asr	r1, r1, #11
   224bc:	bne	2256c <crc32@@Base+0x8210>
   224c0:	ldr	r3, [r0, #4]
   224c4:	cmp	r3, #105	; 0x69
   224c8:	bne	2256c <crc32@@Base+0x8210>
   224cc:	ldr	r3, [r0, #8]
   224d0:	cmp	r3, #150	; 0x96
   224d4:	bne	2256c <crc32@@Base+0x8210>
   224d8:	ldr	r3, [r0, #12]
   224dc:	cmp	r3, #105	; 0x69
   224e0:	bne	2256c <crc32@@Base+0x8210>
   224e4:	ldr	r3, [r0, #16]
   224e8:	uxtb	r2, r1
   224ec:	cmp	r3, r2
   224f0:	bne	2256c <crc32@@Base+0x8210>
   224f4:	mvn	r1, r1
   224f8:	ldr	r2, [r0, #20]
   224fc:	uxtb	r1, r1
   22500:	cmp	r2, r1
   22504:	bne	2256c <crc32@@Base+0x8210>
   22508:	ldr	r1, [r0, #24]
   2250c:	cmp	r3, r1
   22510:	bne	2256c <crc32@@Base+0x8210>
   22514:	ldr	r1, [r0, #28]
   22518:	cmp	r2, r1
   2251c:	bne	2256c <crc32@@Base+0x8210>
   22520:	ldr	r1, [r0, #32]
   22524:	cmp	r3, r1
   22528:	bne	2256c <crc32@@Base+0x8210>
   2252c:	ldr	r1, [r0, #36]	; 0x24
   22530:	cmp	r2, r1
   22534:	bne	2256c <crc32@@Base+0x8210>
   22538:	ldr	r1, [r0, #40]	; 0x28
   2253c:	cmp	r3, r1
   22540:	bne	2256c <crc32@@Base+0x8210>
   22544:	ldr	r3, [r0, #44]	; 0x2c
   22548:	cmp	r2, r3
   2254c:	bne	2256c <crc32@@Base+0x8210>
   22550:	ldr	r3, [r0, #48]	; 0x30
   22554:	cmp	r3, #170	; 0xaa
   22558:	bne	2256c <crc32@@Base+0x8210>
   2255c:	ldr	r0, [r0, #512]	; 0x200
   22560:	subs	r0, r0, #170	; 0xaa
   22564:	mvnne	r0, #0
   22568:	bx	lr
   2256c:	mvn	r0, #0
   22570:	bx	lr
   22574:	ldr	r3, [r1, #44]	; 0x2c
   22578:	mov	r1, #0
   2257c:	push	{r4, r5, r6, lr}
   22580:	movw	r4, #2047	; 0x7ff
   22584:	add	r3, r4, r3
   22588:	mov	r2, #2048	; 0x800
   2258c:	add	r4, r3, r4
   22590:	cmp	r3, r1
   22594:	mov	r5, r0
   22598:	movlt	r3, r4
   2259c:	asr	r4, r3, #11
   225a0:	bl	12388 <memset@plt>
   225a4:	mov	ip, #150	; 0x96
   225a8:	mov	r0, #105	; 0x69
   225ac:	mvn	r2, r4
   225b0:	uxtb	r3, r4
   225b4:	uxtb	r2, r2
   225b8:	mov	r1, #170	; 0xaa
   225bc:	str	r3, [r5, #40]	; 0x28
   225c0:	str	r2, [r5, #44]	; 0x2c
   225c4:	str	r2, [r5, #36]	; 0x24
   225c8:	str	r2, [r5, #28]
   225cc:	str	r2, [r5, #20]
   225d0:	str	r3, [r5, #32]
   225d4:	str	r3, [r5, #24]
   225d8:	str	r3, [r5, #16]
   225dc:	str	ip, [r5, #8]
   225e0:	str	ip, [r5]
   225e4:	str	r0, [r5, #12]
   225e8:	str	r0, [r5, #4]
   225ec:	str	r1, [r5, #512]	; 0x200
   225f0:	str	r1, [r5, #48]	; 0x30
   225f4:	pop	{r4, r5, r6, pc}
   225f8:	push	{r4, r5, r6, r7, r8, lr}
   225fc:	movw	r6, #47700	; 0xba54
   22600:	sub	r5, r0, #4
   22604:	movt	r6, #3
   22608:	mov	r7, r0
   2260c:	mov	r4, #0
   22610:	mov	r2, r4
   22614:	ldr	r3, [r5, #4]!
   22618:	mov	r1, r6
   2261c:	add	r4, r4, #1
   22620:	mov	r0, #1
   22624:	bl	1282c <__printf_chk@plt>
   22628:	cmp	r4, #13
   2262c:	bne	22610 <crc32@@Base+0x82b4>
   22630:	ldr	r3, [r7, #512]	; 0x200
   22634:	movw	r1, #47700	; 0xba54
   22638:	mov	r2, #128	; 0x80
   2263c:	movt	r1, #3
   22640:	mov	r0, #1
   22644:	pop	{r4, r5, r6, r7, r8, lr}
   22648:	b	1282c <__printf_chk@plt>
   2264c:	subs	r0, r0, #16
   22650:	movne	r0, #1
   22654:	bx	lr
   22658:	bx	lr
   2265c:	push	{r4, r5, r6, r7, lr}
   22660:	movw	r5, #3824	; 0xef0
   22664:	movt	r5, #5
   22668:	ldrb	r2, [r0]
   2266c:	sub	sp, sp, #12
   22670:	ldr	r3, [r5]
   22674:	cmp	r2, #48	; 0x30
   22678:	str	r3, [sp, #4]
   2267c:	bne	22730 <crc32@@Base+0x83d4>
   22680:	ldrb	r3, [r0, #1]
   22684:	cmp	r3, #120	; 0x78
   22688:	bne	22730 <crc32@@Base+0x83d4>
   2268c:	mov	r7, r1
   22690:	add	r4, r0, #2
   22694:	bl	12748 <__errno_location@plt>
   22698:	mov	r3, #0
   2269c:	mov	r2, #16
   226a0:	mov	r1, sp
   226a4:	mov	r6, r0
   226a8:	mov	r0, r4
   226ac:	str	r3, [r6]
   226b0:	bl	12370 <strtoul@plt>
   226b4:	ldr	r2, [r6]
   226b8:	cmp	r2, #34	; 0x22
   226bc:	mov	r3, r0
   226c0:	beq	226f8 <crc32@@Base+0x839c>
   226c4:	cmp	r2, #0
   226c8:	bne	22700 <crc32@@Base+0x83a4>
   226cc:	ldr	r2, [sp]
   226d0:	cmp	r2, r4
   226d4:	strne	r3, [r7]
   226d8:	movne	r0, #0
   226dc:	beq	22758 <crc32@@Base+0x83fc>
   226e0:	ldr	r2, [sp, #4]
   226e4:	ldr	r3, [r5]
   226e8:	cmp	r2, r3
   226ec:	bne	22780 <crc32@@Base+0x8424>
   226f0:	add	sp, sp, #12
   226f4:	pop	{r4, r5, r6, r7, pc}
   226f8:	cmn	r0, #1
   226fc:	beq	22708 <crc32@@Base+0x83ac>
   22700:	cmp	r3, #0
   22704:	bne	226cc <crc32@@Base+0x8370>
   22708:	movw	r3, #7868	; 0x1ebc
   2270c:	movt	r3, #5
   22710:	movw	r0, #47864	; 0xbaf8
   22714:	mov	r2, #29
   22718:	ldr	r3, [r3]
   2271c:	movt	r0, #3
   22720:	mov	r1, #1
   22724:	bl	12634 <fwrite@plt>
   22728:	mvn	r0, #21
   2272c:	b	226e0 <crc32@@Base+0x8384>
   22730:	movw	r3, #7868	; 0x1ebc
   22734:	movt	r3, #5
   22738:	movw	r0, #47828	; 0xbad4
   2273c:	mov	r2, #33	; 0x21
   22740:	ldr	r3, [r3]
   22744:	movt	r0, #3
   22748:	mov	r1, #1
   2274c:	bl	12634 <fwrite@plt>
   22750:	mvn	r0, #21
   22754:	b	226e0 <crc32@@Base+0x8384>
   22758:	movw	r3, #7868	; 0x1ebc
   2275c:	movt	r3, #5
   22760:	movw	r0, #47896	; 0xbb18
   22764:	mov	r2, #21
   22768:	ldr	r3, [r3]
   2276c:	movt	r0, #3
   22770:	mov	r1, #1
   22774:	bl	12634 <fwrite@plt>
   22778:	mvn	r0, #21
   2277c:	b	226e0 <crc32@@Base+0x8384>
   22780:	bl	12538 <__stack_chk_fail@plt>
   22784:	push	{r4, r5, r6, r7, r8, lr}
   22788:	cmp	r1, #0
   2278c:	add	r4, r0, #16
   22790:	sub	sp, sp, #8
   22794:	movne	r7, r1
   22798:	mov	r8, r2
   2279c:	moveq	r7, r4
   227a0:	mov	r6, r0
   227a4:	bl	1264c <EVP_CIPHER_CTX_new@plt>
   227a8:	mov	r5, r0
   227ac:	bl	121e4 <EVP_aes_128_cbc@plt>
   227b0:	mov	r2, r4
   227b4:	str	r8, [sp]
   227b8:	mov	r3, r7
   227bc:	mov	r1, r0
   227c0:	mov	r0, r5
   227c4:	bl	12160 <EVP_CipherInit@plt>
   227c8:	cmp	r0, #1
   227cc:	mov	r4, r0
   227d0:	beq	227e0 <crc32@@Base+0x8484>
   227d4:	mov	r0, r4
   227d8:	add	sp, sp, #8
   227dc:	pop	{r4, r5, r6, r7, r8, pc}
   227e0:	mov	r1, #0
   227e4:	mov	r0, r5
   227e8:	bl	12670 <EVP_CIPHER_CTX_set_padding@plt>
   227ec:	mov	r0, r4
   227f0:	str	r5, [r6, #60]	; 0x3c
   227f4:	add	sp, sp, #8
   227f8:	pop	{r4, r5, r6, r7, r8, pc}
   227fc:	push	{r4, r5, r6, lr}
   22800:	mov	r4, r0
   22804:	ldr	r0, [r0, #60]	; 0x3c
   22808:	mov	r5, r1
   2280c:	bl	1249c <EVP_CIPHER_CTX_cleanup@plt>
   22810:	cmp	r0, #0
   22814:	popeq	{r4, r5, r6, pc}
   22818:	mov	r2, r5
   2281c:	add	r1, r4, #136	; 0x88
   22820:	mov	r0, r4
   22824:	pop	{r4, r5, r6, lr}
   22828:	b	22784 <crc32@@Base+0x8428>
   2282c:	push	{r1, r2, r3}
   22830:	push	{r4, lr}
   22834:	movw	r4, #3824	; 0xef0
   22838:	movt	r4, #5
   2283c:	ldrb	r2, [r0]
   22840:	sub	sp, sp, #12
   22844:	ldr	r3, [r4]
   22848:	tst	r2, #8
   2284c:	ldr	r2, [sp, #20]
   22850:	str	r3, [sp, #4]
   22854:	beq	22878 <crc32@@Base+0x851c>
   22858:	ldr	r2, [sp, #4]
   2285c:	ldr	r3, [r4]
   22860:	cmp	r2, r3
   22864:	bne	2289c <crc32@@Base+0x8540>
   22868:	add	sp, sp, #12
   2286c:	pop	{r4, lr}
   22870:	add	sp, sp, #12
   22874:	bx	lr
   22878:	add	ip, sp, #24
   2287c:	movw	r0, #7872	; 0x1ec0
   22880:	movt	r0, #5
   22884:	mov	r1, #1
   22888:	mov	r3, ip
   2288c:	str	ip, [sp]
   22890:	ldr	r0, [r0]
   22894:	bl	125ec <__vfprintf_chk@plt>
   22898:	b	22858 <crc32@@Base+0x84fc>
   2289c:	bl	12538 <__stack_chk_fail@plt>
   228a0:	cmp	r0, #0
   228a4:	beq	22928 <crc32@@Base+0x85cc>
   228a8:	ldr	r3, [r0, #64]	; 0x40
   228ac:	ldrb	r3, [r3]
   228b0:	cmp	r3, #0
   228b4:	beq	228fc <crc32@@Base+0x85a0>
   228b8:	ldr	r3, [r0]
   228bc:	ldr	r2, [r0, #8]
   228c0:	cmp	r3, #0
   228c4:	beq	228e4 <crc32@@Base+0x8588>
   228c8:	cmp	r2, #0
   228cc:	bne	228dc <crc32@@Base+0x8580>
   228d0:	ldr	r3, [r0, #16]
   228d4:	cmp	r3, #0
   228d8:	beq	228ec <crc32@@Base+0x8590>
   228dc:	mov	r0, #1
   228e0:	bx	lr
   228e4:	cmp	r2, #0
   228e8:	bne	228d0 <crc32@@Base+0x8574>
   228ec:	ldr	r0, [r0, #28]
   228f0:	adds	r0, r0, #0
   228f4:	movne	r0, #1
   228f8:	bx	lr
   228fc:	movw	r1, #7868	; 0x1ebc
   22900:	movt	r1, #5
   22904:	ldr	r3, [r0, #80]	; 0x50
   22908:	movw	r2, #47920	; 0xbb30
   2290c:	push	{r4, lr}
   22910:	movt	r2, #3
   22914:	ldr	r0, [r1]
   22918:	mov	r1, #1
   2291c:	bl	12358 <__fprintf_chk@plt>
   22920:	mvn	r0, #0
   22924:	pop	{r4, pc}
   22928:	mvn	r0, #0
   2292c:	bx	lr
   22930:	push	{r4, r5, r6, r7, r8, lr}
   22934:	subs	r7, r0, #0
   22938:	mov	r6, r1
   2293c:	beq	22988 <crc32@@Base+0x862c>
   22940:	ldr	r4, [r7, #12]
   22944:	cmp	r4, #0
   22948:	beq	22970 <crc32@@Base+0x8614>
   2294c:	ldr	r0, [r4, #8]
   22950:	ldr	r5, [r4, #4]
   22954:	cmp	r0, #0
   22958:	beq	22960 <crc32@@Base+0x8604>
   2295c:	bl	121c0 <free@plt>
   22960:	mov	r0, r4
   22964:	bl	121c0 <free@plt>
   22968:	subs	r4, r5, #0
   2296c:	bne	2294c <crc32@@Base+0x85f0>
   22970:	ldr	r4, [r7, #8]
   22974:	mov	r0, r7
   22978:	bl	121c0 <free@plt>
   2297c:	cmp	r4, #0
   22980:	movne	r7, r4
   22984:	bne	22940 <crc32@@Base+0x85e4>
   22988:	cmp	r6, #0
   2298c:	popeq	{r4, r5, r6, r7, r8, pc}
   22990:	ldr	r0, [r6, #8]
   22994:	ldr	r4, [r6]
   22998:	bl	121c0 <free@plt>
   2299c:	mov	r0, r6
   229a0:	bl	121c0 <free@plt>
   229a4:	subs	r6, r4, #0
   229a8:	bne	22990 <crc32@@Base+0x8634>
   229ac:	pop	{r4, r5, r6, r7, r8, pc}
   229b0:	push	{r4, r5, r6, lr}
   229b4:	mov	r4, r1
   229b8:	ldr	r1, [r1]
   229bc:	mov	r5, r0
   229c0:	ldr	r0, [r0]
   229c4:	add	r1, r2, r1
   229c8:	str	r1, [r4]
   229cc:	bl	12478 <realloc@plt>
   229d0:	subs	r2, r0, #0
   229d4:	ldrne	r1, [r4]
   229d8:	movne	r3, #64	; 0x40
   229dc:	movtne	r3, #53760	; 0xd200
   229e0:	strne	r2, [r5]
   229e4:	movne	r0, #0
   229e8:	mvneq	r0, #11
   229ec:	orrne	r3, r3, r1, lsl #8
   229f0:	revne	r3, r3
   229f4:	strne	r3, [r2]
   229f8:	pop	{r4, r5, r6, pc}
   229fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22a00:	movw	r6, #3824	; 0xef0
   22a04:	movt	r6, #5
   22a08:	cmp	r3, #0
   22a0c:	sub	sp, sp, #28
   22a10:	movw	lr, #48004	; 0xbb84
   22a14:	ldr	r4, [r6]
   22a18:	movt	lr, #3
   22a1c:	movw	ip, #48012	; 0xbb8c
   22a20:	movt	ip, #3
   22a24:	mov	r8, r0
   22a28:	mov	r7, r1
   22a2c:	mov	r0, #1
   22a30:	mov	r1, #48	; 0x30
   22a34:	str	r4, [sp, #20]
   22a38:	movne	r5, lr
   22a3c:	moveq	r5, ip
   22a40:	mov	r9, r2
   22a44:	mov	fp, r3
   22a48:	mov	sl, #0
   22a4c:	str	sl, [sp, #16]
   22a50:	bl	125c8 <calloc@plt>
   22a54:	subs	r4, r0, #0
   22a58:	beq	22c10 <crc32@@Base+0x88b4>
   22a5c:	ldr	r0, [r7]
   22a60:	movw	r1, #36260	; 0x8da4
   22a64:	movt	r1, #3
   22a68:	bl	1231c <strtok@plt>
   22a6c:	cmp	r0, #0
   22a70:	beq	22be4 <crc32@@Base+0x8888>
   22a74:	ldrb	r3, [r0]
   22a78:	cmp	r3, #72	; 0x48
   22a7c:	bne	22aec <crc32@@Base+0x8790>
   22a80:	ldrb	r3, [r0, #1]
   22a84:	cmp	r3, #65	; 0x41
   22a88:	bne	22aec <crc32@@Base+0x8790>
   22a8c:	ldrb	r3, [r0, #2]
   22a90:	cmp	r3, #66	; 0x42
   22a94:	bne	22aec <crc32@@Base+0x8790>
   22a98:	ldrb	r3, [r0, #3]
   22a9c:	cmp	r3, #0
   22aa0:	bne	22aec <crc32@@Base+0x8790>
   22aa4:	mov	r0, r3
   22aa8:	movw	r1, #36260	; 0x8da4
   22aac:	movt	r1, #3
   22ab0:	bl	1231c <strtok@plt>
   22ab4:	cmp	r0, #0
   22ab8:	movne	sl, #1
   22abc:	bne	22aec <crc32@@Base+0x8790>
   22ac0:	movw	r1, #7868	; 0x1ebc
   22ac4:	movt	r1, #5
   22ac8:	ldr	r3, [r9]
   22acc:	movw	r2, #48060	; 0xbbbc
   22ad0:	ldr	r0, [r1]
   22ad4:	movt	r2, #3
   22ad8:	str	r5, [sp]
   22adc:	mov	r1, #1
   22ae0:	mvn	r7, #21
   22ae4:	bl	12358 <__fprintf_chk@plt>
   22ae8:	b	22b20 <crc32@@Base+0x87c4>
   22aec:	add	r1, sp, #12
   22af0:	bl	2265c <crc32@@Base+0x8300>
   22af4:	subs	r7, r0, #0
   22af8:	beq	22b44 <crc32@@Base+0x87e8>
   22afc:	movw	r1, #7868	; 0x1ebc
   22b00:	movt	r1, #5
   22b04:	ldr	r3, [r9]
   22b08:	movw	r2, #48092	; 0xbbdc
   22b0c:	ldr	r0, [r1]
   22b10:	movt	r2, #3
   22b14:	str	r5, [sp]
   22b18:	mov	r1, #1
   22b1c:	bl	12358 <__fprintf_chk@plt>
   22b20:	mov	r0, r4
   22b24:	bl	121c0 <free@plt>
   22b28:	ldr	r2, [sp, #20]
   22b2c:	mov	r0, r7
   22b30:	ldr	r3, [r6]
   22b34:	cmp	r2, r3
   22b38:	bne	22c18 <crc32@@Base+0x88bc>
   22b3c:	add	sp, sp, #28
   22b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b44:	movw	r1, #36260	; 0x8da4
   22b48:	movt	r1, #3
   22b4c:	bl	1231c <strtok@plt>
   22b50:	cmp	r0, #0
   22b54:	beq	22b94 <crc32@@Base+0x8838>
   22b58:	add	r1, sp, #16
   22b5c:	bl	2265c <crc32@@Base+0x8300>
   22b60:	subs	ip, r0, #0
   22b64:	beq	22b94 <crc32@@Base+0x8838>
   22b68:	movw	r1, #7868	; 0x1ebc
   22b6c:	movt	r1, #5
   22b70:	ldr	r3, [r9]
   22b74:	movw	r2, #48124	; 0xbbfc
   22b78:	ldr	r0, [r1]
   22b7c:	movt	r2, #3
   22b80:	str	r5, [sp]
   22b84:	mov	r1, #1
   22b88:	mov	r7, ip
   22b8c:	bl	12358 <__fprintf_chk@plt>
   22b90:	b	22b20 <crc32@@Base+0x87c4>
   22b94:	ldr	r1, [r8, #12]
   22b98:	cmp	fp, #0
   22b9c:	ldr	r3, [sp, #12]
   22ba0:	movne	r2, #5
   22ba4:	moveq	r2, #4
   22ba8:	cmp	r1, #0
   22bac:	ldr	r1, [sp, #16]
   22bb0:	str	r3, [r4, #20]
   22bb4:	mov	r3, #16
   22bb8:	str	r3, [r4]
   22bbc:	ldrne	r3, [r8, #16]
   22bc0:	strb	r2, [r4, #17]
   22bc4:	mov	r2, #90	; 0x5a
   22bc8:	strh	sl, [r4, #18]
   22bcc:	str	r1, [r4, #28]
   22bd0:	strb	r2, [r4, #16]
   22bd4:	streq	r4, [r8, #12]
   22bd8:	strne	r4, [r3, #4]
   22bdc:	str	r4, [r8, #16]
   22be0:	b	22b28 <crc32@@Base+0x87cc>
   22be4:	movw	r1, #7868	; 0x1ebc
   22be8:	movt	r1, #5
   22bec:	ldr	r3, [r9]
   22bf0:	movw	r2, #48020	; 0xbb94
   22bf4:	ldr	r0, [r1]
   22bf8:	movt	r2, #3
   22bfc:	str	r5, [sp]
   22c00:	mov	r1, #1
   22c04:	mvn	r7, #21
   22c08:	bl	12358 <__fprintf_chk@plt>
   22c0c:	b	22b20 <crc32@@Base+0x87c4>
   22c10:	mvn	r7, #11
   22c14:	b	22b28 <crc32@@Base+0x87cc>
   22c18:	bl	12538 <__stack_chk_fail@plt>
   22c1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c20:	movw	r5, #3824	; 0xef0
   22c24:	movt	r5, #5
   22c28:	ldr	ip, [r0, #16]
   22c2c:	mov	r9, r2
   22c30:	sub	sp, sp, #20
   22c34:	ldr	r2, [r5]
   22c38:	cmp	ip, #0
   22c3c:	mov	r4, r0
   22c40:	mov	r8, r1
   22c44:	mov	r6, r3
   22c48:	add	r0, r0, #8
   22c4c:	add	r1, r4, #12
   22c50:	str	r2, [sp, #12]
   22c54:	beq	22d48 <crc32@@Base+0x89ec>
   22c58:	cmp	r3, #-1073741824	; 0xc0000000
   22c5c:	beq	22d50 <crc32@@Base+0x89f4>
   22c60:	ldr	r3, [ip]
   22c64:	bic	r3, r3, #16711680	; 0xff0000
   22c68:	bic	r3, r3, #65280	; 0xff00
   22c6c:	cmp	r6, r3
   22c70:	beq	22da0 <crc32@@Base+0x8a44>
   22c74:	mov	r2, #12
   22c78:	bl	229b0 <crc32@@Base+0x8654>
   22c7c:	subs	r7, r0, #0
   22c80:	bne	22d2c <crc32@@Base+0x89d0>
   22c84:	ldr	sl, [r4, #12]
   22c88:	ldr	fp, [r4, #8]
   22c8c:	bic	sl, sl, #3
   22c90:	sub	r3, sl, #12
   22c94:	add	r3, fp, r3
   22c98:	str	r3, [r4, #16]
   22c9c:	ldr	r0, [r8]
   22ca0:	movw	r1, #36260	; 0x8da4
   22ca4:	movt	r1, #3
   22ca8:	bl	1231c <strtok@plt>
   22cac:	cmp	r0, #0
   22cb0:	beq	22e0c <crc32@@Base+0x8ab0>
   22cb4:	add	r1, sp, #4
   22cb8:	bl	2265c <crc32@@Base+0x8300>
   22cbc:	subs	r7, r0, #0
   22cc0:	bne	22d7c <crc32@@Base+0x8a20>
   22cc4:	movw	r1, #36260	; 0x8da4
   22cc8:	movt	r1, #3
   22ccc:	bl	1231c <strtok@plt>
   22cd0:	cmp	r0, #0
   22cd4:	beq	22de4 <crc32@@Base+0x8a88>
   22cd8:	add	r1, sp, #8
   22cdc:	bl	2265c <crc32@@Base+0x8300>
   22ce0:	subs	r7, r0, #0
   22ce4:	bne	22dc0 <crc32@@Base+0x8a64>
   22ce8:	sub	sl, sl, #8
   22cec:	ldr	r3, [sp, #4]
   22cf0:	add	r1, fp, sl
   22cf4:	rev	r3, r3
   22cf8:	str	r3, [fp, sl]
   22cfc:	ldr	r2, [sp, #8]
   22d00:	ldr	r3, [r4, #16]
   22d04:	rev	r2, r2
   22d08:	str	r2, [r1, #4]
   22d0c:	ldr	r1, [r4, #8]
   22d10:	ldr	r2, [r4, #12]
   22d14:	sub	r1, r3, r1
   22d18:	mov	r7, #0
   22d1c:	sub	r2, r2, r1
   22d20:	orr	r6, r6, r2, lsl #8
   22d24:	rev	r6, r6
   22d28:	str	r6, [r3]
   22d2c:	ldr	r2, [sp, #12]
   22d30:	mov	r0, r7
   22d34:	ldr	r3, [r5]
   22d38:	cmp	r2, r3
   22d3c:	bne	22e34 <crc32@@Base+0x8ad8>
   22d40:	add	sp, sp, #20
   22d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d48:	cmp	r3, #-1073741824	; 0xc0000000
   22d4c:	bne	22c74 <crc32@@Base+0x8918>
   22d50:	mov	r2, #4
   22d54:	bl	229b0 <crc32@@Base+0x8654>
   22d58:	subs	r7, r0, #0
   22d5c:	bne	22d2c <crc32@@Base+0x89d0>
   22d60:	ldr	r2, [r4, #12]
   22d64:	ldr	r1, [r4, #8]
   22d68:	bic	r3, r2, #3
   22d6c:	sub	r3, r3, #4
   22d70:	add	r3, r1, r3
   22d74:	str	r3, [r4, #16]
   22d78:	b	22d14 <crc32@@Base+0x89b8>
   22d7c:	movw	r1, #7868	; 0x1ebc
   22d80:	movt	r1, #5
   22d84:	ldr	r3, [r9]
   22d88:	movw	r2, #48192	; 0xbc40
   22d8c:	ldr	r0, [r1]
   22d90:	movt	r2, #3
   22d94:	mov	r1, #1
   22d98:	bl	12358 <__fprintf_chk@plt>
   22d9c:	b	22d2c <crc32@@Base+0x89d0>
   22da0:	mov	r2, #8
   22da4:	bl	229b0 <crc32@@Base+0x8654>
   22da8:	subs	r7, r0, #0
   22dac:	bne	22d2c <crc32@@Base+0x89d0>
   22db0:	ldr	sl, [r4, #12]
   22db4:	ldr	fp, [r4, #8]
   22db8:	bic	sl, sl, #3
   22dbc:	b	22c9c <crc32@@Base+0x8940>
   22dc0:	movw	r1, #7868	; 0x1ebc
   22dc4:	movt	r1, #5
   22dc8:	ldr	r3, [r9]
   22dcc:	movw	r2, #48260	; 0xbc84
   22dd0:	ldr	r0, [r1]
   22dd4:	movt	r2, #3
   22dd8:	mov	r1, #1
   22ddc:	bl	12358 <__fprintf_chk@plt>
   22de0:	b	22d2c <crc32@@Base+0x89d0>
   22de4:	movw	r1, #7868	; 0x1ebc
   22de8:	movt	r1, #5
   22dec:	ldr	r3, [r9]
   22df0:	movw	r2, #48228	; 0xbc64
   22df4:	ldr	r0, [r1]
   22df8:	movt	r2, #3
   22dfc:	mov	r1, #1
   22e00:	mvn	r7, #21
   22e04:	bl	12358 <__fprintf_chk@plt>
   22e08:	b	22d2c <crc32@@Base+0x89d0>
   22e0c:	movw	r1, #7868	; 0x1ebc
   22e10:	movt	r1, #5
   22e14:	ldr	r3, [r9]
   22e18:	movw	r2, #48160	; 0xbc20
   22e1c:	ldr	r0, [r1]
   22e20:	movt	r2, #3
   22e24:	mov	r1, #1
   22e28:	mvn	r7, #21
   22e2c:	bl	12358 <__fprintf_chk@plt>
   22e30:	b	22d2c <crc32@@Base+0x89d0>
   22e34:	bl	12538 <__stack_chk_fail@plt>
   22e38:	push	{r4, r5, r6, r7, r8, r9, lr}
   22e3c:	movw	r4, #3824	; 0xef0
   22e40:	movt	r4, #5
   22e44:	sub	sp, sp, #20
   22e48:	mov	r7, r0
   22e4c:	mov	r0, r3
   22e50:	ldr	ip, [r4]
   22e54:	mov	r6, r3
   22e58:	mov	r8, r1
   22e5c:	mov	r9, r2
   22e60:	str	ip, [sp, #12]
   22e64:	bl	12664 <malloc@plt>
   22e68:	subs	r5, r0, #0
   22e6c:	beq	22edc <crc32@@Base+0x8b80>
   22e70:	mov	r2, #0
   22e74:	mov	r3, r8
   22e78:	str	r2, [r5]
   22e7c:	mov	r0, r7
   22e80:	str	r6, [sp]
   22e84:	add	r2, sp, #8
   22e88:	mov	r1, r5
   22e8c:	bl	12190 <EVP_CipherUpdate@plt>
   22e90:	subs	r6, r0, #0
   22e94:	mvneq	r6, #21
   22e98:	bne	22ec0 <crc32@@Base+0x8b64>
   22e9c:	mov	r0, r5
   22ea0:	bl	121c0 <free@plt>
   22ea4:	ldr	r2, [sp, #12]
   22ea8:	mov	r0, r6
   22eac:	ldr	r3, [r4]
   22eb0:	cmp	r2, r3
   22eb4:	bne	22ee4 <crc32@@Base+0x8b88>
   22eb8:	add	sp, sp, #20
   22ebc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   22ec0:	cmp	r9, #0
   22ec4:	beq	22e9c <crc32@@Base+0x8b40>
   22ec8:	mov	r0, r9
   22ecc:	ldr	r2, [sp, #8]
   22ed0:	mov	r1, r5
   22ed4:	bl	12658 <memcpy@plt>
   22ed8:	b	22e9c <crc32@@Base+0x8b40>
   22edc:	mvn	r6, #11
   22ee0:	b	22ea4 <crc32@@Base+0x8b48>
   22ee4:	bl	12538 <__stack_chk_fail@plt>
   22ee8:	push	{r4, r5, r6, lr}
   22eec:	add	r4, r0, #136	; 0x88
   22ef0:	ldr	r5, [r0, #64]	; 0x40
   22ef4:	mov	r2, #0
   22ef8:	mov	r1, r4
   22efc:	mov	r3, #96	; 0x60
   22f00:	ldr	r0, [r0, #60]	; 0x3c
   22f04:	bl	22e38 <crc32@@Base+0x8adc>
   22f08:	mov	r1, r4
   22f0c:	mov	r0, r5
   22f10:	mov	r2, #96	; 0x60
   22f14:	pop	{r4, r5, r6, lr}
   22f18:	b	1270c <EVP_DigestUpdate@plt>
   22f1c:	push	{r4, r5, r6, r7, r8, lr}
   22f20:	ldr	r4, [r0, #44]	; 0x2c
   22f24:	ldr	r7, [r0, #64]	; 0x40
   22f28:	cmp	r4, #0
   22f2c:	popeq	{r4, r5, r6, r7, r8, pc}
   22f30:	add	r8, r0, #100	; 0x64
   22f34:	mov	r6, r0
   22f38:	add	r5, r4, #20
   22f3c:	mov	r3, #16
   22f40:	mov	r2, r8
   22f44:	ldr	r0, [r6, #60]	; 0x3c
   22f48:	mov	r1, r5
   22f4c:	bl	22e38 <crc32@@Base+0x8adc>
   22f50:	mov	r1, r5
   22f54:	mov	r2, #16
   22f58:	mov	r0, r7
   22f5c:	bl	1270c <EVP_DigestUpdate@plt>
   22f60:	ldr	r4, [r4, #8]
   22f64:	cmp	r4, #0
   22f68:	bne	22f38 <crc32@@Base+0x8bdc>
   22f6c:	pop	{r4, r5, r6, r7, r8, pc}
   22f70:	push	{r4, lr}
   22f74:	movw	r1, #48292	; 0xbca4
   22f78:	mov	r2, #32
   22f7c:	movt	r1, #3
   22f80:	mov	r0, #24
   22f84:	bl	12364 <CRYPTO_malloc@plt>
   22f88:	cmp	r0, #0
   22f8c:	popeq	{r4, pc}
   22f90:	mov	r3, #0
   22f94:	str	r3, [r0]
   22f98:	str	r3, [r0, #4]
   22f9c:	str	r3, [r0, #8]
   22fa0:	str	r3, [r0, #12]
   22fa4:	str	r3, [r0, #16]
   22fa8:	str	r3, [r0, #20]
   22fac:	pop	{r4, pc}
   22fb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22fb4:	movw	r3, #3824	; 0xef0
   22fb8:	sub	sp, sp, #428	; 0x1ac
   22fbc:	movt	r3, #5
   22fc0:	add	r7, sp, #152	; 0x98
   22fc4:	mov	r4, r0
   22fc8:	str	r3, [sp, #36]	; 0x24
   22fcc:	mov	r5, r1
   22fd0:	ldr	r3, [r3]
   22fd4:	mov	r0, r7
   22fd8:	mov	r2, #232	; 0xe8
   22fdc:	mov	r1, #0
   22fe0:	str	r3, [sp, #420]	; 0x1a4
   22fe4:	bl	12388 <memset@plt>
   22fe8:	cmp	r4, #0
   22fec:	mov	r3, #0
   22ff0:	str	r4, [sp, #156]	; 0x9c
   22ff4:	bfi	r3, r5, #3, #1
   22ff8:	strb	r3, [sp, #152]	; 0x98
   22ffc:	beq	2352c <crc32@@Base+0x91d0>
   23000:	mov	r0, r4
   23004:	movw	r1, #53956	; 0xd2c4
   23008:	movt	r1, #3
   2300c:	bl	123d0 <fopen@plt>
   23010:	subs	fp, r0, #0
   23014:	movweq	r4, #7868	; 0x1ebc
   23018:	movteq	r4, #5
   2301c:	beq	23428 <crc32@@Base+0x90cc>
   23020:	mov	r2, #2
   23024:	mov	r1, #0
   23028:	bl	121f0 <fseek@plt>
   2302c:	cmp	r0, #0
   23030:	blt	23418 <crc32@@Base+0x90bc>
   23034:	mov	r0, fp
   23038:	bl	125e0 <ftell@plt>
   2303c:	subs	r3, r0, #0
   23040:	str	r3, [sp, #32]
   23044:	blt	23418 <crc32@@Base+0x90bc>
   23048:	mov	r2, #0
   2304c:	mov	r0, fp
   23050:	mov	r1, r2
   23054:	bl	121f0 <fseek@plt>
   23058:	cmp	r0, #0
   2305c:	blt	23418 <crc32@@Base+0x90bc>
   23060:	ldr	r3, [sp, #32]
   23064:	cmp	r3, #95	; 0x5f
   23068:	ble	23594 <crc32@@Base+0x9238>
   2306c:	ldr	r3, [sp, #32]
   23070:	ands	r5, r3, #15
   23074:	bne	234c4 <crc32@@Base+0x9168>
   23078:	bl	22f70 <crc32@@Base+0x8c14>
   2307c:	mov	r4, r0
   23080:	str	r0, [sp, #216]	; 0xd8
   23084:	bl	122b0 <EVP_sha1@plt>
   23088:	mov	r1, r0
   2308c:	mov	r0, r4
   23090:	bl	12118 <EVP_DigestInit@plt>
   23094:	mov	r0, r7
   23098:	movw	r1, #48464	; 0xbd50
   2309c:	movt	r1, #3
   230a0:	bl	2282c <crc32@@Base+0x84d0>
   230a4:	add	r0, sp, #288	; 0x120
   230a8:	mov	r3, fp
   230ac:	mov	r2, #96	; 0x60
   230b0:	mov	r1, #1
   230b4:	bl	12508 <fread@plt>
   230b8:	cmp	r0, #96	; 0x60
   230bc:	bne	23448 <crc32@@Base+0x90ec>
   230c0:	bl	22f70 <crc32@@Base+0x8c14>
   230c4:	mov	r4, r0
   230c8:	bl	122b0 <EVP_sha1@plt>
   230cc:	mov	r1, r0
   230d0:	mov	r0, r4
   230d4:	bl	12118 <EVP_DigestInit@plt>
   230d8:	add	r1, sp, #308	; 0x134
   230dc:	mov	r2, #76	; 0x4c
   230e0:	mov	r0, r4
   230e4:	bl	1270c <EVP_DigestUpdate@plt>
   230e8:	add	r1, sp, #388	; 0x184
   230ec:	mov	r2, r5
   230f0:	mov	r0, r4
   230f4:	bl	125f8 <EVP_DigestFinal@plt>
   230f8:	mov	r0, r4
   230fc:	bl	12568 <EVP_MD_CTX_cleanup@plt>
   23100:	mov	r0, r4
   23104:	bl	1255c <CRYPTO_free@plt>
   23108:	mov	r1, r5
   2310c:	mov	r2, #1
   23110:	mov	r0, r7
   23114:	bl	22784 <crc32@@Base+0x8428>
   23118:	mov	r0, r7
   2311c:	bl	22ee8 <crc32@@Base+0x8b8c>
   23120:	add	r1, sp, #288	; 0x120
   23124:	add	r0, sp, #388	; 0x184
   23128:	mov	r2, #20
   2312c:	bl	12784 <memcmp@plt>
   23130:	cmp	r0, #0
   23134:	beq	231c0 <crc32@@Base+0x8e64>
   23138:	movw	r3, #48656	; 0xbe10
   2313c:	movw	r2, #48660	; 0xbe14
   23140:	movw	r1, #48616	; 0xbde8
   23144:	movt	r3, #3
   23148:	movt	r2, #3
   2314c:	mov	r0, r7
   23150:	movt	r1, #3
   23154:	bl	2282c <crc32@@Base+0x84d0>
   23158:	mvn	r4, #21
   2315c:	movw	r1, #48552	; 0xbda8
   23160:	mov	r0, r7
   23164:	movt	r1, #3
   23168:	bl	2282c <crc32@@Base+0x84d0>
   2316c:	movw	r2, #48368	; 0xbcf0
   23170:	movt	r2, #3
   23174:	mov	r0, r7
   23178:	movw	r1, #49612	; 0xc1cc
   2317c:	movt	r1, #3
   23180:	bl	2282c <crc32@@Base+0x84d0>
   23184:	ldr	r0, [sp, #212]	; 0xd4
   23188:	bl	1249c <EVP_CIPHER_CTX_cleanup@plt>
   2318c:	mov	r0, fp
   23190:	bl	126b8 <fclose@plt>
   23194:	ldr	r0, [sp, #196]	; 0xc4
   23198:	ldr	r1, [sp, #204]	; 0xcc
   2319c:	bl	22930 <crc32@@Base+0x85d4>
   231a0:	ldr	r3, [sp, #36]	; 0x24
   231a4:	ldr	r2, [sp, #420]	; 0x1a4
   231a8:	mov	r0, r4
   231ac:	ldr	r3, [r3]
   231b0:	cmp	r2, r3
   231b4:	bne	23624 <crc32@@Base+0x92c8>
   231b8:	add	sp, sp, #428	; 0x1ac
   231bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   231c0:	movw	r3, #48604	; 0xbddc
   231c4:	movw	r2, #48608	; 0xbde0
   231c8:	movt	r3, #3
   231cc:	movt	r2, #3
   231d0:	movw	r1, #48616	; 0xbde8
   231d4:	mov	r0, r7
   231d8:	movt	r1, #3
   231dc:	bl	2282c <crc32@@Base+0x84d0>
   231e0:	ldr	r2, [sp, #308]	; 0x134
   231e4:	movw	r3, #21587	; 0x5453
   231e8:	movt	r3, #20557	; 0x504d
   231ec:	cmp	r2, r3
   231f0:	bne	23208 <crc32@@Base+0x8eac>
   231f4:	ldr	r2, [sp, #340]	; 0x154
   231f8:	movw	r3, #26483	; 0x6773
   231fc:	movt	r3, #27764	; 0x6c74
   23200:	cmp	r2, r3
   23204:	beq	23230 <crc32@@Base+0x8ed4>
   23208:	add	r1, sp, #340	; 0x154
   2320c:	add	r3, sp, #308	; 0x134
   23210:	str	r1, [sp]
   23214:	movw	r2, #48660	; 0xbe14
   23218:	movw	r1, #49664	; 0xc200
   2321c:	movt	r2, #3
   23220:	mov	r0, r7
   23224:	movt	r1, #3
   23228:	bl	2282c <crc32@@Base+0x84d0>
   2322c:	b	23158 <crc32@@Base+0x8dfc>
   23230:	add	r1, sp, #340	; 0x154
   23234:	add	r3, sp, #308	; 0x134
   23238:	str	r1, [sp]
   2323c:	movw	r2, #48608	; 0xbde0
   23240:	movw	r1, #49664	; 0xc200
   23244:	movt	r2, #3
   23248:	mov	r0, r7
   2324c:	movt	r1, #3
   23250:	bl	2282c <crc32@@Base+0x84d0>
   23254:	ldrb	r4, [sp, #312]	; 0x138
   23258:	cmp	r4, #1
   2325c:	beq	23288 <crc32@@Base+0x8f2c>
   23260:	ldrb	r3, [sp, #313]	; 0x139
   23264:	str	r3, [sp]
   23268:	movw	r2, #48660	; 0xbe14
   2326c:	mov	r3, r4
   23270:	movw	r1, #49712	; 0xc230
   23274:	movt	r2, #3
   23278:	movt	r1, #3
   2327c:	mov	r0, r7
   23280:	bl	2282c <crc32@@Base+0x84d0>
   23284:	b	23158 <crc32@@Base+0x8dfc>
   23288:	ldrb	r2, [sp, #313]	; 0x139
   2328c:	sub	r3, r2, #1
   23290:	cmp	r3, #1
   23294:	mov	r3, r2
   23298:	bhi	23264 <crc32@@Base+0x8f08>
   2329c:	str	r2, [sp]
   232a0:	mov	r3, r4
   232a4:	mov	r0, r7
   232a8:	movw	r2, #48608	; 0xbde0
   232ac:	movw	r1, #49712	; 0xc230
   232b0:	movt	r2, #3
   232b4:	movt	r1, #3
   232b8:	bl	2282c <crc32@@Base+0x84d0>
   232bc:	mov	r3, #0
   232c0:	ldrd	r0, [r7, #192]	; 0xc0
   232c4:	movw	r2, #16960	; 0x4240
   232c8:	movt	r2, #15
   232cc:	bl	370f4 <crc32@@Base+0x1cd98>
   232d0:	mov	r2, #44	; 0x2c
   232d4:	mov	r1, #0
   232d8:	mov	r5, r0
   232dc:	add	r0, sp, #108	; 0x6c
   232e0:	bl	12388 <memset@plt>
   232e4:	add	r0, sp, #108	; 0x6c
   232e8:	str	r4, [sp, #136]	; 0x88
   232ec:	bl	127c0 <mktime@plt>
   232f0:	add	r1, sp, #64	; 0x40
   232f4:	add	r5, r5, r0
   232f8:	add	r0, sp, #60	; 0x3c
   232fc:	str	r5, [sp, #60]	; 0x3c
   23300:	bl	12460 <gmtime_r@plt>
   23304:	cmp	r0, #0
   23308:	beq	235d8 <crc32@@Base+0x927c>
   2330c:	ldr	r0, [sp, #80]	; 0x50
   23310:	movw	r2, #48608	; 0xbde0
   23314:	ldr	lr, [sp, #76]	; 0x4c
   23318:	movt	r2, #3
   2331c:	ldr	ip, [sp, #64]	; 0x40
   23320:	str	r0, [sp, #12]
   23324:	ldr	r0, [sp, #68]	; 0x44
   23328:	ldr	r1, [sp, #84]	; 0x54
   2332c:	str	lr, [sp, #8]
   23330:	str	ip, [sp, #4]
   23334:	add	r1, r1, #2000	; 0x7d0
   23338:	ldr	r3, [sp, #72]	; 0x48
   2333c:	str	r1, [sp, #16]
   23340:	movw	r1, #49756	; 0xc25c
   23344:	str	r0, [sp]
   23348:	movt	r1, #3
   2334c:	mov	r0, r7
   23350:	bl	2282c <crc32@@Base+0x84d0>
   23354:	ldrh	r0, [r7, #208]	; 0xd0
   23358:	ldrh	r1, [r7, #204]	; 0xcc
   2335c:	movw	r2, #48608	; 0xbde0
   23360:	ldrh	r3, [r7, #200]	; 0xc8
   23364:	rev16	r0, r0
   23368:	rev16	r1, r1
   2336c:	movt	r2, #3
   23370:	rev16	r3, r3
   23374:	uxth	r0, r0
   23378:	uxth	r1, r1
   2337c:	str	r0, [sp, #4]
   23380:	str	r1, [sp]
   23384:	uxth	r3, r3
   23388:	mov	r0, r7
   2338c:	movw	r1, #49820	; 0xc29c
   23390:	movt	r1, #3
   23394:	bl	2282c <crc32@@Base+0x84d0>
   23398:	ldrh	r0, [r7, #220]	; 0xdc
   2339c:	ldrh	r1, [r7, #216]	; 0xd8
   233a0:	movw	r2, #48608	; 0xbde0
   233a4:	ldrh	r3, [r7, #212]	; 0xd4
   233a8:	rev16	r0, r0
   233ac:	rev16	r1, r1
   233b0:	movt	r2, #3
   233b4:	rev16	r3, r3
   233b8:	uxth	r0, r0
   233bc:	uxth	r1, r1
   233c0:	str	r0, [sp, #4]
   233c4:	str	r1, [sp]
   233c8:	uxth	r3, r3
   233cc:	movw	r1, #49864	; 0xc2c8
   233d0:	mov	r0, r7
   233d4:	movt	r1, #3
   233d8:	bl	2282c <crc32@@Base+0x84d0>
   233dc:	ldrh	r3, [r7, #162]	; 0xa2
   233e0:	bic	r2, r3, #1
   233e4:	cmp	r2, #0
   233e8:	beq	23470 <crc32@@Base+0x9114>
   233ec:	tst	r3, #1
   233f0:	movweq	r3, #50548	; 0xc574
   233f4:	movweq	r2, #48660	; 0xbe14
   233f8:	movteq	r3, #3
   233fc:	bne	235c8 <crc32@@Base+0x926c>
   23400:	movt	r2, #3
   23404:	movw	r1, #48668	; 0xbe1c
   23408:	mov	r0, r7
   2340c:	movt	r1, #3
   23410:	bl	2282c <crc32@@Base+0x84d0>
   23414:	b	23158 <crc32@@Base+0x8dfc>
   23418:	movw	r4, #7868	; 0x1ebc
   2341c:	movt	r4, #5
   23420:	mov	r0, fp
   23424:	bl	126b8 <fclose@plt>
   23428:	ldr	r0, [r4]
   2342c:	movw	r2, #49632	; 0xc1e0
   23430:	ldr	r3, [sp, #156]	; 0x9c
   23434:	movt	r2, #3
   23438:	mov	r1, #1
   2343c:	mvn	r4, #21
   23440:	bl	12358 <__fprintf_chk@plt>
   23444:	b	23194 <crc32@@Base+0x8e38>
   23448:	movw	r3, #7868	; 0x1ebc
   2344c:	movt	r3, #5
   23450:	movw	r0, #48516	; 0xbd84
   23454:	mov	r2, #32
   23458:	ldr	r3, [r3]
   2345c:	mov	r1, #1
   23460:	movt	r0, #3
   23464:	mvn	r4, #21
   23468:	bl	12634 <fwrite@plt>
   2346c:	b	2315c <crc32@@Base+0x8e00>
   23470:	tst	r3, #1
   23474:	movwne	r3, #49908	; 0xc2f4
   23478:	movwne	r2, #48608	; 0xbde0
   2347c:	movtne	r3, #3
   23480:	beq	235b8 <crc32@@Base+0x925c>
   23484:	movt	r2, #3
   23488:	movw	r1, #48668	; 0xbe1c
   2348c:	mov	r0, r7
   23490:	movt	r1, #3
   23494:	bl	2282c <crc32@@Base+0x84d0>
   23498:	ldrh	r4, [r7, #224]	; 0xe0
   2349c:	cmp	r4, #0
   234a0:	beq	234e8 <crc32@@Base+0x918c>
   234a4:	mov	r3, r4
   234a8:	movw	r2, #48660	; 0xbe14
   234ac:	movw	r1, #48708	; 0xbe44
   234b0:	movt	r2, #3
   234b4:	movt	r1, #3
   234b8:	mov	r0, r7
   234bc:	bl	2282c <crc32@@Base+0x84d0>
   234c0:	b	23158 <crc32@@Base+0x8dfc>
   234c4:	movw	r4, #7868	; 0x1ebc
   234c8:	movt	r4, #5
   234cc:	movw	r0, #48432	; 0xbd30
   234d0:	mov	r2, #30
   234d4:	ldr	r3, [r4]
   234d8:	mov	r1, #1
   234dc:	movt	r0, #3
   234e0:	bl	12634 <fwrite@plt>
   234e4:	b	23420 <crc32@@Base+0x90c4>
   234e8:	mov	r3, r4
   234ec:	movw	r2, #48608	; 0xbde0
   234f0:	movw	r1, #48708	; 0xbe44
   234f4:	movt	r2, #3
   234f8:	movt	r1, #3
   234fc:	mov	r0, r7
   23500:	bl	2282c <crc32@@Base+0x84d0>
   23504:	ldrh	r3, [r7, #180]	; 0xb4
   23508:	cmp	r3, #6
   2350c:	beq	23554 <crc32@@Base+0x91f8>
   23510:	movw	r2, #48660	; 0xbe14
   23514:	movw	r1, #48748	; 0xbe6c
   23518:	movt	r2, #3
   2351c:	movt	r1, #3
   23520:	mov	r0, r7
   23524:	bl	2282c <crc32@@Base+0x84d0>
   23528:	b	23158 <crc32@@Base+0x8dfc>
   2352c:	movw	r3, #7868	; 0x1ebc
   23530:	movt	r3, #5
   23534:	movw	r0, #48384	; 0xbd00
   23538:	mov	r2, #23
   2353c:	ldr	r3, [r3]
   23540:	mov	r1, #1
   23544:	movt	r0, #3
   23548:	mvn	r4, #21
   2354c:	bl	12634 <fwrite@plt>
   23550:	b	23194 <crc32@@Base+0x8e38>
   23554:	movw	r2, #48608	; 0xbde0
   23558:	movw	r1, #48748	; 0xbe6c
   2355c:	movt	r2, #3
   23560:	movt	r1, #3
   23564:	mov	r0, r7
   23568:	bl	2282c <crc32@@Base+0x84d0>
   2356c:	ldrh	r3, [r7, #184]	; 0xb8
   23570:	cmp	r3, #1
   23574:	beq	23628 <crc32@@Base+0x92cc>
   23578:	movw	r2, #48660	; 0xbe14
   2357c:	movw	r1, #48788	; 0xbe94
   23580:	movt	r2, #3
   23584:	movt	r1, #3
   23588:	mov	r0, r7
   2358c:	bl	2282c <crc32@@Base+0x84d0>
   23590:	b	23158 <crc32@@Base+0x8dfc>
   23594:	movw	r4, #7868	; 0x1ebc
   23598:	movt	r4, #5
   2359c:	movw	r0, #48408	; 0xbd18
   235a0:	mov	r2, #21
   235a4:	ldr	r3, [r4]
   235a8:	mov	r1, #1
   235ac:	movt	r0, #3
   235b0:	bl	12634 <fwrite@plt>
   235b4:	b	23420 <crc32@@Base+0x90c4>
   235b8:	movw	r3, #50548	; 0xc574
   235bc:	movw	r2, #48608	; 0xbde0
   235c0:	movt	r3, #3
   235c4:	b	23484 <crc32@@Base+0x9128>
   235c8:	movw	r3, #49908	; 0xc2f4
   235cc:	movw	r2, #48660	; 0xbe14
   235d0:	movt	r3, #3
   235d4:	b	23400 <crc32@@Base+0x90a4>
   235d8:	ldr	r1, [sp, #80]	; 0x50
   235dc:	movw	r2, #48660	; 0xbe14
   235e0:	ldr	r0, [sp, #64]	; 0x40
   235e4:	movt	r2, #3
   235e8:	ldr	lr, [sp, #76]	; 0x4c
   235ec:	ldr	ip, [sp, #68]	; 0x44
   235f0:	ldr	r3, [sp, #84]	; 0x54
   235f4:	str	r1, [sp, #12]
   235f8:	movw	r1, #49756	; 0xc25c
   235fc:	add	r3, r3, #2000	; 0x7d0
   23600:	str	r0, [sp, #4]
   23604:	str	r3, [sp, #16]
   23608:	movt	r1, #3
   2360c:	str	lr, [sp, #8]
   23610:	mov	r0, r7
   23614:	str	ip, [sp]
   23618:	ldr	r3, [sp, #72]	; 0x48
   2361c:	bl	2282c <crc32@@Base+0x84d0>
   23620:	b	23158 <crc32@@Base+0x8dfc>
   23624:	bl	12538 <__stack_chk_fail@plt>
   23628:	mov	r0, r7
   2362c:	movw	r2, #48608	; 0xbde0
   23630:	movw	r1, #48788	; 0xbe94
   23634:	movt	r2, #3
   23638:	movt	r1, #3
   2363c:	bl	2282c <crc32@@Base+0x84d0>
   23640:	ldrh	r3, [r7, #182]	; 0xb6
   23644:	mov	r0, r7
   23648:	movw	r2, #48608	; 0xbde0
   2364c:	movw	r1, #48828	; 0xbebc
   23650:	movt	r2, #3
   23654:	movt	r1, #3
   23658:	bl	2282c <crc32@@Base+0x84d0>
   2365c:	ldr	r3, [sp, #324]	; 0x144
   23660:	movw	r2, #48608	; 0xbde0
   23664:	movw	r1, #48868	; 0xbee4
   23668:	movt	r2, #3
   2366c:	movt	r1, #3
   23670:	mov	r0, r7
   23674:	bl	2282c <crc32@@Base+0x84d0>
   23678:	ldr	r2, [sp, #32]
   2367c:	ldr	r3, [sp, #316]	; 0x13c
   23680:	cmp	r3, r2, asr #4
   23684:	beq	236a4 <crc32@@Base+0x9348>
   23688:	movw	r2, #48660	; 0xbe14
   2368c:	movw	r1, #49928	; 0xc308
   23690:	movt	r2, #3
   23694:	movt	r1, #3
   23698:	mov	r0, r7
   2369c:	bl	2282c <crc32@@Base+0x84d0>
   236a0:	b	23158 <crc32@@Base+0x8dfc>
   236a4:	mov	r0, r7
   236a8:	movw	r2, #48608	; 0xbde0
   236ac:	movw	r1, #49928	; 0xc308
   236b0:	movt	r2, #3
   236b4:	movt	r1, #3
   236b8:	bl	2282c <crc32@@Base+0x84d0>
   236bc:	ldrh	r2, [r7, #184]	; 0xb8
   236c0:	ldrh	r0, [r7, #182]	; 0xb6
   236c4:	ldrh	r3, [r7, #180]	; 0xb4
   236c8:	ldrh	r1, [r7, #178]	; 0xb2
   236cc:	mla	r3, r0, r2, r3
   236d0:	cmp	r3, r1
   236d4:	beq	236f8 <crc32@@Base+0x939c>
   236d8:	mov	r3, r1
   236dc:	movw	r2, #48660	; 0xbe14
   236e0:	movw	r1, #49968	; 0xc330
   236e4:	movt	r2, #3
   236e8:	movt	r1, #3
   236ec:	mov	r0, r7
   236f0:	bl	2282c <crc32@@Base+0x84d0>
   236f4:	b	23158 <crc32@@Base+0x8dfc>
   236f8:	movw	r2, #48608	; 0xbde0
   236fc:	movw	r1, #49968	; 0xc330
   23700:	movt	r2, #3
   23704:	movt	r1, #3
   23708:	mov	r0, r7
   2370c:	bl	2282c <crc32@@Base+0x84d0>
   23710:	ldrh	r3, [r7, #176]	; 0xb0
   23714:	cmp	r3, #1
   23718:	beq	23738 <crc32@@Base+0x93dc>
   2371c:	movw	r2, #48660	; 0xbe14
   23720:	movw	r1, #50008	; 0xc358
   23724:	movt	r2, #3
   23728:	movt	r1, #3
   2372c:	mov	r0, r7
   23730:	bl	2282c <crc32@@Base+0x84d0>
   23734:	b	23158 <crc32@@Base+0x8dfc>
   23738:	mov	r0, r7
   2373c:	movw	r2, #48608	; 0xbde0
   23740:	movw	r1, #50008	; 0xc358
   23744:	movt	r2, #3
   23748:	movt	r1, #3
   2374c:	bl	2282c <crc32@@Base+0x84d0>
   23750:	ldrh	r2, [r7, #184]	; 0xb8
   23754:	ldrh	ip, [r7, #182]	; 0xb6
   23758:	ldrh	r0, [r7, #180]	; 0xb4
   2375c:	ldrh	r3, [r7, #176]	; 0xb0
   23760:	ldr	r1, [sp, #320]	; 0x140
   23764:	mla	r2, ip, r2, r0
   23768:	add	r3, r2, r3, lsl #1
   2376c:	cmp	r3, r1
   23770:	beq	23794 <crc32@@Base+0x9438>
   23774:	mov	r3, r1
   23778:	movw	r2, #48660	; 0xbe14
   2377c:	movw	r1, #50048	; 0xc380
   23780:	movt	r2, #3
   23784:	movt	r1, #3
   23788:	mov	r0, r7
   2378c:	bl	2282c <crc32@@Base+0x84d0>
   23790:	b	23158 <crc32@@Base+0x8dfc>
   23794:	mov	r0, r7
   23798:	movw	r2, #48608	; 0xbde0
   2379c:	movw	r1, #50048	; 0xc380
   237a0:	movt	r2, #3
   237a4:	movt	r1, #3
   237a8:	bl	2282c <crc32@@Base+0x84d0>
   237ac:	movw	r1, #50088	; 0xc3a8
   237b0:	mov	r0, r7
   237b4:	movt	r1, #3
   237b8:	bl	2282c <crc32@@Base+0x84d0>
   237bc:	ldrh	r3, [r7, #182]	; 0xb6
   237c0:	cmp	r3, #0
   237c4:	bne	23810 <crc32@@Base+0x94b4>
   237c8:	b	2382c <crc32@@Base+0x94d0>
   237cc:	ldr	r3, [sp, #196]	; 0xc4
   237d0:	mov	r2, #16
   237d4:	mov	r1, #1
   237d8:	cmp	r3, #0
   237dc:	streq	r0, [sp, #196]	; 0xc4
   237e0:	ldrne	r3, [sp, #200]	; 0xc8
   237e4:	strne	r0, [r3, #8]
   237e8:	mov	r3, fp
   237ec:	str	r0, [sp, #200]	; 0xc8
   237f0:	add	r0, r0, #20
   237f4:	bl	12508 <fread@plt>
   237f8:	cmp	r0, #16
   237fc:	bne	23eac <crc32@@Base+0x9b50>
   23800:	ldrh	r3, [r7, #182]	; 0xb6
   23804:	add	r4, r4, #1
   23808:	cmp	r4, r3
   2380c:	bcs	2382c <crc32@@Base+0x94d0>
   23810:	mov	r1, #36	; 0x24
   23814:	mov	r0, #1
   23818:	bl	125c8 <calloc@plt>
   2381c:	cmp	r0, #0
   23820:	bne	237cc <crc32@@Base+0x9470>
   23824:	mvn	r4, #11
   23828:	b	2315c <crc32@@Base+0x8e00>
   2382c:	mov	r3, fp
   23830:	mov	r2, #32
   23834:	mov	r1, #1
   23838:	add	r0, sp, #252	; 0xfc
   2383c:	bl	12508 <fread@plt>
   23840:	cmp	r0, #32
   23844:	mov	r4, r0
   23848:	bne	23f00 <crc32@@Base+0x9ba4>
   2384c:	mov	r0, r7
   23850:	bl	22f1c <crc32@@Base+0x8bc0>
   23854:	mov	r1, #0
   23858:	mov	r0, r7
   2385c:	bl	227fc <crc32@@Base+0x84a0>
   23860:	mov	r2, r4
   23864:	add	r1, sp, #252	; 0xfc
   23868:	ldr	r0, [sp, #216]	; 0xd8
   2386c:	bl	1270c <EVP_DigestUpdate@plt>
   23870:	mov	r3, #16
   23874:	add	r2, sp, #168	; 0xa8
   23878:	add	r1, sp, #268	; 0x10c
   2387c:	ldr	r0, [sp, #212]	; 0xd4
   23880:	bl	22e38 <crc32@@Base+0x8adc>
   23884:	mov	r1, #0
   23888:	mov	r0, r7
   2388c:	bl	227fc <crc32@@Base+0x84a0>
   23890:	ldr	r6, [sp, #196]	; 0xc4
   23894:	cmp	r6, #0
   23898:	beq	23ae4 <crc32@@Base+0x9788>
   2389c:	movw	r3, #50548	; 0xc574
   238a0:	movw	r2, #48312	; 0xbcb8
   238a4:	movt	r3, #3
   238a8:	movt	r2, #3
   238ac:	str	r3, [sp, #40]	; 0x28
   238b0:	movw	r3, #48980	; 0xbf54
   238b4:	str	r2, [sp, #52]	; 0x34
   238b8:	movt	r3, #3
   238bc:	movw	r2, #7868	; 0x1ebc
   238c0:	str	r3, [sp, #48]	; 0x30
   238c4:	movt	r2, #5
   238c8:	str	fp, [sp, #28]
   238cc:	str	r2, [sp, #44]	; 0x2c
   238d0:	ldr	r3, [r6, #32]
   238d4:	mov	r0, r7
   238d8:	ldr	ip, [r6, #28]
   238dc:	tst	r3, #1
   238e0:	ldr	r1, [sp, #48]	; 0x30
   238e4:	add	ip, ip, #1
   238e8:	ldrbne	r3, [r6, #4]
   238ec:	ldrne	r2, [sp, #52]	; 0x34
   238f0:	lsl	ip, ip, #4
   238f4:	orrne	r3, r3, #1
   238f8:	str	ip, [r6]
   238fc:	strbne	r3, [r6, #4]
   23900:	strne	r2, [sp, #40]	; 0x28
   23904:	ldr	r2, [r6, #20]
   23908:	ldr	r3, [sp, #40]	; 0x28
   2390c:	str	ip, [sp]
   23910:	bl	2282c <crc32@@Base+0x84d0>
   23914:	ldr	r3, [r6, #32]
   23918:	bics	r2, r3, #1
   2391c:	beq	2393c <crc32@@Base+0x95e0>
   23920:	ldr	r0, [sp, #44]	; 0x2c
   23924:	movw	r2, #49016	; 0xbf78
   23928:	mov	r1, #1
   2392c:	movt	r2, #3
   23930:	ldr	r0, [r0]
   23934:	bl	12358 <__fprintf_chk@plt>
   23938:	ldr	r3, [r6, #32]
   2393c:	tst	r3, #1
   23940:	beq	23970 <crc32@@Base+0x9614>
   23944:	ldr	r2, [sp, #324]	; 0x144
   23948:	ldr	r3, [r6, #20]
   2394c:	cmp	r2, r3
   23950:	beq	23970 <crc32@@Base+0x9614>
   23954:	ldr	r3, [sp, #44]	; 0x2c
   23958:	movw	r0, #49056	; 0xbfa0
   2395c:	mov	r2, #59	; 0x3b
   23960:	movt	r0, #3
   23964:	mov	r1, #1
   23968:	ldr	r3, [r3]
   2396c:	bl	12634 <fwrite@plt>
   23970:	mov	r1, #0
   23974:	mov	r0, r7
   23978:	bl	227fc <crc32@@Base+0x84a0>
   2397c:	mov	sl, #0
   23980:	ldr	r3, [r6]
   23984:	cmp	r3, sl
   23988:	bls	23ad4 <crc32@@Base+0x9778>
   2398c:	mov	r1, #48	; 0x30
   23990:	mov	r0, #1
   23994:	bl	125c8 <calloc@plt>
   23998:	subs	r5, r0, #0
   2399c:	beq	23e74 <crc32@@Base+0x9b18>
   239a0:	ldr	r3, [r6, #12]
   239a4:	add	r8, r5, #32
   239a8:	mov	r2, #16
   239ac:	mov	r1, #1
   239b0:	cmp	r3, #0
   239b4:	mov	r0, r8
   239b8:	streq	r5, [r6, #12]
   239bc:	ldrne	r3, [r6, #16]
   239c0:	strne	r5, [r3, #4]
   239c4:	str	r5, [r6, #16]
   239c8:	ldr	r3, [sp, #28]
   239cc:	bl	12508 <fread@plt>
   239d0:	cmp	r0, #16
   239d4:	mov	r9, r0
   239d8:	bne	23e80 <crc32@@Base+0x9b24>
   239dc:	ldr	fp, [sp, #216]	; 0xd8
   239e0:	add	r4, r5, #16
   239e4:	mov	r3, r0
   239e8:	mov	r1, r8
   239ec:	mov	r2, r4
   239f0:	ldr	r0, [sp, #212]	; 0xd4
   239f4:	bl	22e38 <crc32@@Base+0x8adc>
   239f8:	mov	r2, r9
   239fc:	mov	r1, r8
   23a00:	mov	r0, fp
   23a04:	bl	1270c <EVP_DigestUpdate@plt>
   23a08:	add	sl, sl, #16
   23a0c:	ldrb	r0, [r5, #16]
   23a10:	mov	ip, #90	; 0x5a
   23a14:	add	r1, r5, #31
   23a18:	mov	r2, #90	; 0x5a
   23a1c:	mov	r3, #0
   23a20:	strb	ip, [r5, #16]
   23a24:	b	23a2c <crc32@@Base+0x96d0>
   23a28:	ldrb	r2, [r4, #1]!
   23a2c:	add	r3, r2, r3
   23a30:	cmp	r4, r1
   23a34:	uxtb	r3, r3
   23a38:	bne	23a28 <crc32@@Base+0x96cc>
   23a3c:	cmp	r0, r3
   23a40:	strb	r0, [r5, #16]
   23a44:	ldrb	r3, [r5, #17]
   23a48:	beq	23db8 <crc32@@Base+0x9a5c>
   23a4c:	cmp	r3, #6
   23a50:	ldrls	pc, [pc, r3, lsl #2]
   23a54:	b	23d8c <crc32@@Base+0x9a30>
   23a58:	muleq	r2, r4, sp
   23a5c:	andeq	r3, r2, r0, asr #26
   23a60:	andeq	r3, r2, r0, ror ip
   23a64:	andeq	r3, r2, r0, asr #24
   23a68:	strdeq	r3, [r2], -r8
   23a6c:			; <UNDEFINED> instruction: 0x00023bb0
   23a70:	andeq	r3, r2, r4, ror sl
   23a74:	movw	r4, #48324	; 0xbcc4
   23a78:	movt	r4, #3
   23a7c:	mov	r1, #0
   23a80:	ldr	r0, [r5, #28]
   23a84:	mov	r3, r1
   23a88:	ldr	r2, [pc, #1240]	; 23f68 <crc32@@Base+0x9c0c>
   23a8c:	b	23a94 <crc32@@Base+0x9738>
   23a90:	ldrb	r1, [r2, #-12]
   23a94:	cmp	r0, r1
   23a98:	beq	23e48 <crc32@@Base+0x9aec>
   23a9c:	add	r3, r3, #1
   23aa0:	add	r2, r2, #12
   23aa4:	cmp	r3, #9
   23aa8:	bne	23a90 <crc32@@Base+0x9734>
   23aac:	ldr	r0, [sp, #44]	; 0x2c
   23ab0:	mov	r3, r4
   23ab4:	movw	r2, #49464	; 0xc138
   23ab8:	mov	r1, #1
   23abc:	movt	r2, #3
   23ac0:	ldr	r0, [r0]
   23ac4:	bl	12358 <__fprintf_chk@plt>
   23ac8:	ldr	r3, [r6]
   23acc:	cmp	r3, sl
   23ad0:	bhi	2398c <crc32@@Base+0x9630>
   23ad4:	ldr	r6, [r6, #8]
   23ad8:	cmp	r6, #0
   23adc:	bne	238d0 <crc32@@Base+0x9574>
   23ae0:	ldr	fp, [sp, #28]
   23ae4:	mov	r0, r7
   23ae8:	movw	r1, #50140	; 0xc3dc
   23aec:	movt	r1, #3
   23af0:	bl	2282c <crc32@@Base+0x84d0>
   23af4:	mov	r3, fp
   23af8:	mov	r2, #32
   23afc:	mov	r1, #1
   23b00:	add	r0, sp, #388	; 0x184
   23b04:	bl	12508 <fread@plt>
   23b08:	cmp	r0, #32
   23b0c:	mov	r4, r0
   23b10:	bne	23f00 <crc32@@Base+0x9ba4>
   23b14:	mov	r0, fp
   23b18:	bl	125e0 <ftell@plt>
   23b1c:	ldr	r3, [sp, #32]
   23b20:	cmp	r3, r0
   23b24:	bne	23f28 <crc32@@Base+0x9bcc>
   23b28:	mov	r2, #0
   23b2c:	add	r1, sp, #220	; 0xdc
   23b30:	ldr	r0, [sp, #216]	; 0xd8
   23b34:	bl	125f8 <EVP_DigestFinal@plt>
   23b38:	ldr	r5, [sp, #216]	; 0xd8
   23b3c:	mov	r0, r5
   23b40:	bl	12568 <EVP_MD_CTX_cleanup@plt>
   23b44:	mov	r0, r5
   23b48:	bl	1255c <CRYPTO_free@plt>
   23b4c:	mov	r1, #0
   23b50:	mov	r0, r7
   23b54:	bl	227fc <crc32@@Base+0x84a0>
   23b58:	add	r2, sp, #388	; 0x184
   23b5c:	mov	r3, r4
   23b60:	ldr	r0, [sp, #212]	; 0xd4
   23b64:	mov	r1, r2
   23b68:	bl	22e38 <crc32@@Base+0x8adc>
   23b6c:	add	r1, sp, #220	; 0xdc
   23b70:	add	r0, sp, #388	; 0x184
   23b74:	mov	r2, #20
   23b78:	bl	12784 <memcmp@plt>
   23b7c:	subs	r4, r0, #0
   23b80:	bne	23f50 <crc32@@Base+0x9bf4>
   23b84:	mov	r0, r7
   23b88:	movw	r1, #49568	; 0xc1a0
   23b8c:	movt	r1, #3
   23b90:	bl	2282c <crc32@@Base+0x84d0>
   23b94:	movw	r1, #48552	; 0xbda8
   23b98:	mov	r0, r7
   23b9c:	movt	r1, #3
   23ba0:	bl	2282c <crc32@@Base+0x84d0>
   23ba4:	movw	r2, #48376	; 0xbcf8
   23ba8:	movt	r2, #3
   23bac:	b	23174 <crc32@@Base+0x8e18>
   23bb0:	movw	r2, #48324	; 0xbcc4
   23bb4:	movt	r2, #3
   23bb8:	ldrh	r0, [r5, #18]
   23bbc:	movw	r1, #48360	; 0xbce8
   23bc0:	ldr	r3, [r5, #20]
   23bc4:	movt	r1, #3
   23bc8:	str	r2, [sp, #4]
   23bcc:	tst	r0, #1
   23bd0:	ldr	r0, [r5, #28]
   23bd4:	movw	r2, #50548	; 0xc574
   23bd8:	movt	r2, #3
   23bdc:	movne	r2, r1
   23be0:	movw	r1, #49408	; 0xc100
   23be4:	movt	r1, #3
   23be8:	str	r0, [sp]
   23bec:	mov	r0, r7
   23bf0:	bl	2282c <crc32@@Base+0x84d0>
   23bf4:	b	23980 <crc32@@Base+0x9624>
   23bf8:	movw	r2, #48324	; 0xbcc4
   23bfc:	movt	r2, #3
   23c00:	ldrh	r0, [r5, #18]
   23c04:	movw	r1, #48360	; 0xbce8
   23c08:	ldr	r3, [r5, #20]
   23c0c:	movt	r1, #3
   23c10:	str	r2, [sp, #4]
   23c14:	tst	r0, #1
   23c18:	ldr	r0, [r5, #28]
   23c1c:	movw	r2, #50548	; 0xc574
   23c20:	movt	r2, #3
   23c24:	movne	r2, r1
   23c28:	movw	r1, #49368	; 0xc0d8
   23c2c:	movt	r1, #3
   23c30:	str	r0, [sp]
   23c34:	mov	r0, r7
   23c38:	bl	2282c <crc32@@Base+0x84d0>
   23c3c:	b	23980 <crc32@@Base+0x9624>
   23c40:	movw	r0, #48324	; 0xbcc4
   23c44:	movt	r0, #3
   23c48:	ldr	r3, [r5, #24]
   23c4c:	movw	r1, #49312	; 0xc0a0
   23c50:	ldr	r2, [r5, #20]
   23c54:	movt	r1, #3
   23c58:	str	r0, [sp, #4]
   23c5c:	mov	r0, r7
   23c60:	ldr	ip, [r5, #28]
   23c64:	str	ip, [sp]
   23c68:	bl	2282c <crc32@@Base+0x84d0>
   23c6c:	b	23980 <crc32@@Base+0x9624>
   23c70:	movw	r0, #48324	; 0xbcc4
   23c74:	movt	r0, #3
   23c78:	ldr	r3, [r5, #24]
   23c7c:	movw	r1, #49180	; 0xc01c
   23c80:	ldr	r2, [r5, #20]
   23c84:	movt	r1, #3
   23c88:	str	r0, [sp]
   23c8c:	mov	r0, r7
   23c90:	bl	2282c <crc32@@Base+0x84d0>
   23c94:	ldr	r3, [r5, #24]
   23c98:	add	r4, r3, #15
   23c9c:	bic	r4, r4, #15
   23ca0:	str	r3, [r5, #12]
   23ca4:	mov	r0, r4
   23ca8:	bl	12664 <malloc@plt>
   23cac:	cmp	r0, #0
   23cb0:	str	r0, [r5, #8]
   23cb4:	beq	23d8c <crc32@@Base+0x9a30>
   23cb8:	ldr	r3, [sp, #28]
   23cbc:	mov	r2, r4
   23cc0:	mov	r1, #1
   23cc4:	bl	12508 <fread@plt>
   23cc8:	cmp	r4, r0
   23ccc:	bne	23ed4 <crc32@@Base+0x9b78>
   23cd0:	mov	r2, r4
   23cd4:	ldr	r1, [r5, #8]
   23cd8:	ldr	r0, [sp, #216]	; 0xd8
   23cdc:	add	sl, sl, r4
   23ce0:	bl	1270c <EVP_DigestUpdate@plt>
   23ce4:	ldr	r2, [r5, #8]
   23ce8:	mov	r3, r4
   23cec:	ldr	r0, [sp, #212]	; 0xd4
   23cf0:	mov	r1, r2
   23cf4:	bl	22e38 <crc32@@Base+0x8adc>
   23cf8:	mov	r2, r4
   23cfc:	ldr	r1, [r5, #8]
   23d00:	mov	r0, #0
   23d04:	ldr	r4, [r5, #28]
   23d08:	bl	25f0c <crc32@@Base+0xbbb0>
   23d0c:	cmp	r4, r0
   23d10:	beq	23980 <crc32@@Base+0x9624>
   23d14:	movw	r3, #7868	; 0x1ebc
   23d18:	movt	r3, #5
   23d1c:	movw	r0, #49264	; 0xc070
   23d20:	mov	r2, #44	; 0x2c
   23d24:	ldr	r3, [r3]
   23d28:	mov	r1, #1
   23d2c:	movt	r0, #3
   23d30:	ldr	fp, [sp, #28]
   23d34:	mvn	r4, #21
   23d38:	bl	12634 <fwrite@plt>
   23d3c:	b	2315c <crc32@@Base+0x8e00>
   23d40:	movw	r3, #48324	; 0xbcc4
   23d44:	movt	r3, #3
   23d48:	mvn	r4, #21
   23d4c:	ldrh	r0, [r5, #18]
   23d50:	movw	r1, #48352	; 0xbce0
   23d54:	movt	r1, #3
   23d58:	movw	r2, #50548	; 0xc574
   23d5c:	tst	r0, #1
   23d60:	movt	r2, #3
   23d64:	mov	r0, r7
   23d68:	movne	r2, r1
   23d6c:	movw	r1, #49164	; 0xc00c
   23d70:	movt	r1, #3
   23d74:	bl	2282c <crc32@@Base+0x84d0>
   23d78:	mov	r1, #0
   23d7c:	mov	r0, r7
   23d80:	bl	227fc <crc32@@Base+0x84a0>
   23d84:	cmp	r4, #0
   23d88:	beq	23980 <crc32@@Base+0x9624>
   23d8c:	ldr	fp, [sp, #28]
   23d90:	b	23158 <crc32@@Base+0x8dfc>
   23d94:	movw	r2, #48324	; 0xbcc4
   23d98:	movw	r1, #49152	; 0xc000
   23d9c:	movt	r2, #3
   23da0:	movt	r1, #3
   23da4:	mov	r0, r7
   23da8:	ldr	fp, [sp, #28]
   23dac:	mvn	r4, #21
   23db0:	bl	2282c <crc32@@Base+0x84d0>
   23db4:	b	2315c <crc32@@Base+0x8e00>
   23db8:	cmp	r3, #6
   23dbc:	ldrls	pc, [pc, r3, lsl #2]
   23dc0:	b	23980 <crc32@@Base+0x9624>
   23dc4:	andeq	r3, r2, ip, lsr #28
   23dc8:	andeq	r3, r2, ip, lsl lr
   23dcc:	andeq	r3, r2, r0, lsl lr
   23dd0:	andeq	r3, r2, r4, lsl #28
   23dd4:	strdeq	r3, [r2], -r8
   23dd8:	andeq	r3, r2, ip, ror #27
   23ddc:	andeq	r3, r2, r0, ror #27
   23de0:	movw	r4, #48340	; 0xbcd4
   23de4:	movt	r4, #3
   23de8:	b	23a7c <crc32@@Base+0x9720>
   23dec:	movw	r2, #48340	; 0xbcd4
   23df0:	movt	r2, #3
   23df4:	b	23bb8 <crc32@@Base+0x985c>
   23df8:	movw	r2, #48340	; 0xbcd4
   23dfc:	movt	r2, #3
   23e00:	b	23c00 <crc32@@Base+0x98a4>
   23e04:	movw	r0, #48340	; 0xbcd4
   23e08:	movt	r0, #3
   23e0c:	b	23c48 <crc32@@Base+0x98ec>
   23e10:	movw	r0, #48340	; 0xbcd4
   23e14:	movt	r0, #3
   23e18:	b	23c78 <crc32@@Base+0x991c>
   23e1c:	movw	r3, #48340	; 0xbcd4
   23e20:	mov	r4, #0
   23e24:	movt	r3, #3
   23e28:	b	23d4c <crc32@@Base+0x99f0>
   23e2c:	movw	r2, #48340	; 0xbcd4
   23e30:	movw	r1, #49152	; 0xc000
   23e34:	movt	r2, #3
   23e38:	movt	r1, #3
   23e3c:	mov	r0, r7
   23e40:	bl	2282c <crc32@@Base+0x84d0>
   23e44:	b	23980 <crc32@@Base+0x9624>
   23e48:	mov	r2, #12
   23e4c:	movw	ip, #47720	; 0xba68
   23e50:	mul	r2, r2, r3
   23e54:	movt	ip, #3
   23e58:	movw	r1, #49448	; 0xc128
   23e5c:	mov	r3, r4
   23e60:	movt	r1, #3
   23e64:	mov	r0, r7
   23e68:	ldr	r2, [ip, r2]
   23e6c:	bl	2282c <crc32@@Base+0x84d0>
   23e70:	b	23aac <crc32@@Base+0x9750>
   23e74:	ldr	fp, [sp, #28]
   23e78:	mvn	r4, #11
   23e7c:	b	2315c <crc32@@Base+0x8e00>
   23e80:	movw	r3, #7868	; 0x1ebc
   23e84:	movt	r3, #5
   23e88:	movw	r0, #49116	; 0xbfdc
   23e8c:	mov	r2, #34	; 0x22
   23e90:	ldr	r3, [r3]
   23e94:	mov	r1, #1
   23e98:	movt	r0, #3
   23e9c:	ldr	fp, [sp, #28]
   23ea0:	mvn	r4, #21
   23ea4:	bl	12634 <fwrite@plt>
   23ea8:	b	2315c <crc32@@Base+0x8e00>
   23eac:	movw	r3, #7868	; 0x1ebc
   23eb0:	movt	r3, #5
   23eb4:	movw	r0, #48908	; 0xbf0c
   23eb8:	mov	r2, #34	; 0x22
   23ebc:	ldr	r3, [r3]
   23ec0:	mov	r1, #1
   23ec4:	movt	r0, #3
   23ec8:	mvn	r4, #21
   23ecc:	bl	12634 <fwrite@plt>
   23ed0:	b	2315c <crc32@@Base+0x8e00>
   23ed4:	movw	r3, #7868	; 0x1ebc
   23ed8:	movt	r3, #5
   23edc:	movw	r0, #49220	; 0xc044
   23ee0:	mov	r2, #40	; 0x28
   23ee4:	ldr	r3, [r3]
   23ee8:	mov	r1, #1
   23eec:	movt	r0, #3
   23ef0:	ldr	fp, [sp, #28]
   23ef4:	mvn	r4, #21
   23ef8:	bl	12634 <fwrite@plt>
   23efc:	b	2315c <crc32@@Base+0x8e00>
   23f00:	movw	r3, #7868	; 0x1ebc
   23f04:	movt	r3, #5
   23f08:	movw	r0, #48944	; 0xbf30
   23f0c:	mov	r2, #34	; 0x22
   23f10:	ldr	r3, [r3]
   23f14:	mov	r1, #1
   23f18:	movt	r0, #3
   23f1c:	mvn	r4, #21
   23f20:	bl	12634 <fwrite@plt>
   23f24:	b	2315c <crc32@@Base+0x8e00>
   23f28:	movw	r3, #7868	; 0x1ebc
   23f2c:	movt	r3, #5
   23f30:	movw	r0, #49488	; 0xc150
   23f34:	mov	r2, #35	; 0x23
   23f38:	ldr	r3, [r3]
   23f3c:	mov	r1, #1
   23f40:	movt	r0, #3
   23f44:	mvn	r4, #21
   23f48:	bl	12634 <fwrite@plt>
   23f4c:	b	2315c <crc32@@Base+0x8e00>
   23f50:	movw	r1, #49524	; 0xc174
   23f54:	mov	r0, r7
   23f58:	movt	r1, #3
   23f5c:	mvn	r4, #21
   23f60:	bl	2282c <crc32@@Base+0x84d0>
   23f64:	b	2315c <crc32@@Base+0x8e00>
   23f68:	andeq	fp, r3, ip, ror sl
   23f6c:	movw	r3, #51720	; 0xca08
   23f70:	movt	r3, #30
   23f74:	ldr	r0, [r3]
   23f78:	cmp	r0, #0
   23f7c:	bxeq	lr
   23f80:	mov	r1, #0
   23f84:	b	22fb0 <crc32@@Base+0x8c54>
   23f88:	cmp	r0, #0
   23f8c:	beq	23f9c <crc32@@Base+0x9c40>
   23f90:	ldrb	r3, [r0, #20]
   23f94:	cmp	r3, #83	; 0x53
   23f98:	beq	23fa4 <crc32@@Base+0x9c48>
   23f9c:	mvn	r0, #21
   23fa0:	bx	lr
   23fa4:	ldrb	r3, [r0, #21]
   23fa8:	cmp	r3, #84	; 0x54
   23fac:	bne	23f9c <crc32@@Base+0x9c40>
   23fb0:	ldrb	r3, [r0, #22]
   23fb4:	cmp	r3, #77	; 0x4d
   23fb8:	bne	23f9c <crc32@@Base+0x9c40>
   23fbc:	ldrb	r3, [r0, #23]
   23fc0:	cmp	r3, #80	; 0x50
   23fc4:	bne	23f9c <crc32@@Base+0x9c40>
   23fc8:	ldrb	r3, [r0, #52]	; 0x34
   23fcc:	cmp	r3, #115	; 0x73
   23fd0:	bne	23f9c <crc32@@Base+0x9c40>
   23fd4:	ldrb	r3, [r0, #53]	; 0x35
   23fd8:	cmp	r3, #103	; 0x67
   23fdc:	bne	23f9c <crc32@@Base+0x9c40>
   23fe0:	ldrb	r3, [r0, #54]	; 0x36
   23fe4:	cmp	r3, #116	; 0x74
   23fe8:	bne	23f9c <crc32@@Base+0x9c40>
   23fec:	ldrb	r3, [r0, #55]	; 0x37
   23ff0:	cmp	r3, #108	; 0x6c
   23ff4:	bne	23f9c <crc32@@Base+0x9c40>
   23ff8:	ldr	r2, [r2, #76]	; 0x4c
   23ffc:	movw	r3, #51720	; 0xca08
   24000:	movt	r3, #30
   24004:	mov	r1, #1
   24008:	mov	r0, r2
   2400c:	str	r2, [r3]
   24010:	b	22fb0 <crc32@@Base+0x8c54>
   24014:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24018:	movw	r3, #3824	; 0xef0
   2401c:	sub	sp, sp, #340	; 0x154
   24020:	movt	r3, #5
   24024:	mov	r5, r0
   24028:	mov	r2, #232	; 0xe8
   2402c:	str	r3, [sp, #8]
   24030:	mov	r4, #1
   24034:	ldr	r3, [r3]
   24038:	add	r0, sp, #96	; 0x60
   2403c:	str	r1, [sp, #16]
   24040:	mov	r1, #0
   24044:	str	r4, [r5, #32]
   24048:	str	r3, [sp, #332]	; 0x14c
   2404c:	bl	12388 <memset@plt>
   24050:	ldr	r3, [r5, #64]	; 0x40
   24054:	movw	r1, #53956	; 0xd2c4
   24058:	ldr	ip, [r5, #76]	; 0x4c
   2405c:	movt	r1, #3
   24060:	mov	r2, #0
   24064:	str	r2, [sp, #32]
   24068:	mov	r0, r3
   2406c:	str	r3, [sp, #108]	; 0x6c
   24070:	str	ip, [sp, #104]	; 0x68
   24074:	bl	123d0 <fopen@plt>
   24078:	subs	r5, r0, #0
   2407c:	beq	2542c <crc32@@Base+0xb0d0>
   24080:	movw	r8, #7868	; 0x1ebc
   24084:	movw	fp, #50236	; 0xc43c
   24088:	movt	r8, #5
   2408c:	movt	fp, #3
   24090:	movw	r3, #50212	; 0xc424
   24094:	movt	r3, #3
   24098:	str	r3, [sp, #12]
   2409c:	mov	r3, r5
   240a0:	mov	r2, #10
   240a4:	add	r1, sp, #36	; 0x24
   240a8:	add	r0, sp, #32
   240ac:	bl	121cc <__getdelim@plt>
   240b0:	cmp	r0, #0
   240b4:	ble	24328 <crc32@@Base+0x9fcc>
   240b8:	ldr	r3, [sp, #32]
   240bc:	mov	r2, #0
   240c0:	add	r3, r3, r0
   240c4:	strb	r2, [r3, #-1]
   240c8:	ldr	r7, [sp, #32]
   240cc:	str	r0, [sp, #56]	; 0x38
   240d0:	str	r4, [sp, #60]	; 0x3c
   240d4:	str	r7, [sp, #52]	; 0x34
   240d8:	ldrb	r3, [r7]
   240dc:	cmp	r3, #32
   240e0:	bne	240f0 <crc32@@Base+0x9d94>
   240e4:	ldrb	r3, [r7, #1]!
   240e8:	cmp	r3, #32
   240ec:	beq	240e4 <crc32@@Base+0x9d88>
   240f0:	cmp	r3, #0
   240f4:	beq	24fd4 <crc32@@Base+0xac78>
   240f8:	add	r6, r7, #1
   240fc:	mov	r3, r6
   24100:	b	2410c <crc32@@Base+0x9db0>
   24104:	cmp	r2, #32
   24108:	beq	24304 <crc32@@Base+0x9fa8>
   2410c:	ldrb	r2, [r3]
   24110:	mov	sl, r3
   24114:	add	r3, r3, #1
   24118:	cmp	r2, #0
   2411c:	bne	24104 <crc32@@Base+0x9da8>
   24120:	ldrb	r3, [r7]
   24124:	cmp	r3, #0
   24128:	beq	248d4 <crc32@@Base+0xa578>
   2412c:	mov	r1, fp
   24130:	mov	r0, r7
   24134:	str	sl, [sp, #52]	; 0x34
   24138:	bl	12718 <strcmp@plt>
   2413c:	cmp	r0, #0
   24140:	beq	24314 <crc32@@Base+0x9fb8>
   24144:	ldrb	r9, [r7]
   24148:	cmp	r9, #68	; 0x44
   2414c:	bne	24200 <crc32@@Base+0x9ea4>
   24150:	ldrb	r3, [r7, #1]
   24154:	cmp	r3, #67	; 0x43
   24158:	bne	24200 <crc32@@Base+0x9ea4>
   2415c:	ldrb	r3, [r7, #2]
   24160:	cmp	r3, #68	; 0x44
   24164:	bne	24200 <crc32@@Base+0x9ea4>
   24168:	ldrb	r0, [r7, #3]
   2416c:	cmp	r0, #0
   24170:	bne	24200 <crc32@@Base+0x9ea4>
   24174:	ldrb	r3, [sp, #96]	; 0x60
   24178:	mov	r1, #20
   2417c:	bfi	r3, r0, #0, #1
   24180:	mov	r0, #1
   24184:	uxtb	r3, r3
   24188:	orr	r3, r3, #2
   2418c:	strb	r3, [sp, #96]	; 0x60
   24190:	bl	125c8 <calloc@plt>
   24194:	subs	r6, r0, #0
   24198:	beq	24320 <crc32@@Base+0x9fc4>
   2419c:	mov	r2, #4
   241a0:	add	r1, r6, #12
   241a4:	add	r0, r6, #8
   241a8:	bl	229b0 <crc32@@Base+0x8654>
   241ac:	cmp	r0, #0
   241b0:	bne	24b00 <crc32@@Base+0xa7a4>
   241b4:	movw	r1, #36260	; 0x8da4
   241b8:	ldr	r0, [sp, #52]	; 0x34
   241bc:	movt	r1, #3
   241c0:	bl	1231c <strtok@plt>
   241c4:	cmp	r0, #0
   241c8:	beq	24ae8 <crc32@@Base+0xa78c>
   241cc:	add	r1, sp, #48	; 0x30
   241d0:	bl	2265c <crc32@@Base+0x8300>
   241d4:	cmp	r0, #0
   241d8:	bne	24f5c <crc32@@Base+0xac00>
   241dc:	ldr	r2, [sp, #148]	; 0x94
   241e0:	ldr	r3, [sp, #48]	; 0x30
   241e4:	cmp	r2, #0
   241e8:	streq	r6, [sp, #148]	; 0x94
   241ec:	str	r3, [r6, #4]
   241f0:	ldrne	r3, [sp, #152]	; 0x98
   241f4:	strne	r6, [r3]
   241f8:	str	r6, [sp, #152]	; 0x98
   241fc:	b	24320 <crc32@@Base+0x9fc4>
   24200:	movw	r1, #50328	; 0xc498
   24204:	mov	r0, r7
   24208:	movt	r1, #3
   2420c:	bl	12718 <strcmp@plt>
   24210:	ldrb	r3, [sp, #96]	; 0x60
   24214:	subs	ip, r0, #0
   24218:	beq	248ec <crc32@@Base+0xa590>
   2421c:	tst	r3, #3
   24220:	beq	25230 <crc32@@Base+0xaed4>
   24224:	tst	r3, #1
   24228:	beq	2486c <crc32@@Base+0xa510>
   2422c:	cmp	r9, #78	; 0x4e
   24230:	beq	24958 <crc32@@Base+0xa5fc>
   24234:	cmp	r9, #84	; 0x54
   24238:	bne	249c0 <crc32@@Base+0xa664>
   2423c:	ldrb	r3, [r7, #1]
   24240:	cmp	r3, #65	; 0x41
   24244:	bne	249c0 <crc32@@Base+0xa664>
   24248:	ldrb	r3, [r7, #2]
   2424c:	cmp	r3, #71	; 0x47
   24250:	bne	249c0 <crc32@@Base+0xa664>
   24254:	ldrb	r3, [r7, #3]
   24258:	cmp	r3, #0
   2425c:	bne	249c0 <crc32@@Base+0xa664>
   24260:	mov	r1, #48	; 0x30
   24264:	mov	r0, #1
   24268:	ldr	r7, [sp, #144]	; 0x90
   2426c:	bl	125c8 <calloc@plt>
   24270:	subs	r6, r0, #0
   24274:	beq	24320 <crc32@@Base+0x9fc4>
   24278:	mov	r0, sl
   2427c:	movw	r1, #36260	; 0x8da4
   24280:	movt	r1, #3
   24284:	bl	1231c <strtok@plt>
   24288:	cmp	r0, #0
   2428c:	beq	242a8 <crc32@@Base+0x9f4c>
   24290:	movw	r1, #48352	; 0xbce0
   24294:	movt	r1, #3
   24298:	bl	12718 <strcmp@plt>
   2429c:	cmp	r0, #0
   242a0:	moveq	r3, #1
   242a4:	strheq	r3, [r6, #18]
   242a8:	movw	r3, #346	; 0x15a
   242ac:	strh	r3, [r6, #16]
   242b0:	ldr	r1, [r7, #12]
   242b4:	mov	r2, #16
   242b8:	ldrb	r3, [sp, #96]	; 0x60
   242bc:	cmp	r1, #0
   242c0:	str	r2, [r6]
   242c4:	and	r3, r3, #1
   242c8:	beq	25188 <crc32@@Base+0xae2c>
   242cc:	ldr	r2, [r7, #16]
   242d0:	cmp	r3, #0
   242d4:	str	r6, [r2, #4]
   242d8:	str	r6, [r7, #16]
   242dc:	beq	24320 <crc32@@Base+0x9fc4>
   242e0:	ldr	r6, [sp, #144]	; 0x90
   242e4:	ldr	r3, [r6, #16]
   242e8:	ldr	r3, [r3]
   242ec:	ldr	r2, [r6]
   242f0:	add	r3, r3, r2
   242f4:	str	r3, [r6]
   242f8:	lsr	r3, r3, #4
   242fc:	str	r3, [r6, #28]
   24300:	b	24320 <crc32@@Base+0x9fc4>
   24304:	mov	r1, #0
   24308:	strb	r1, [sl]
   2430c:	mov	sl, r3
   24310:	b	24120 <crc32@@Base+0x9dc4>
   24314:	ldrb	r3, [sp, #96]	; 0x60
   24318:	orr	r3, r3, #4
   2431c:	strb	r3, [sp, #96]	; 0x60
   24320:	add	r4, r4, #1
   24324:	b	2409c <crc32@@Base+0x9d40>
   24328:	ldr	r0, [sp, #32]
   2432c:	mov	r6, #0
   24330:	bl	121c0 <free@plt>
   24334:	mov	r0, r5
   24338:	bl	126b8 <fclose@plt>
   2433c:	add	lr, sp, #304	; 0x130
   24340:	movw	r3, #21587	; 0x5453
   24344:	movt	r3, #20557	; 0x504d
   24348:	str	r3, [sp, #252]	; 0xfc
   2434c:	movw	r3, #26483	; 0x6773
   24350:	movt	r3, #27764	; 0x6c74
   24354:	str	r3, [sp, #284]	; 0x11c
   24358:	movw	r3, #39177	; 0x9909
   2435c:	movt	r3, #65535	; 0xffff
   24360:	strh	r3, [lr]
   24364:	add	lr, sp, #308	; 0x134
   24368:	add	ip, sp, #320	; 0x140
   2436c:	mov	r1, r6
   24370:	strh	r3, [lr]
   24374:	add	lr, sp, #312	; 0x138
   24378:	strh	r6, [ip]
   2437c:	add	ip, sp, #296	; 0x128
   24380:	strh	r3, [lr]
   24384:	add	lr, sp, #316	; 0x13c
   24388:	strh	r3, [ip]
   2438c:	add	ip, sp, #300	; 0x12c
   24390:	strh	r3, [lr]
   24394:	add	lr, sp, #256	; 0x100
   24398:	strh	r3, [ip]
   2439c:	movw	ip, #257	; 0x101
   243a0:	strh	ip, [lr]
   243a4:	add	ip, sp, #276	; 0x114
   243a8:	mov	r3, #6
   243ac:	mov	r2, #44	; 0x2c
   243b0:	strh	r3, [ip]
   243b4:	add	r3, sp, #280	; 0x118
   243b8:	mov	r5, #1
   243bc:	add	r0, sp, #52	; 0x34
   243c0:	strh	r5, [r3]
   243c4:	bl	12388 <memset@plt>
   243c8:	add	r0, sp, #52	; 0x34
   243cc:	mov	r3, #100	; 0x64
   243d0:	str	r5, [sp, #80]	; 0x50
   243d4:	str	r3, [sp, #72]	; 0x48
   243d8:	bl	127c0 <mktime@plt>
   243dc:	mov	r4, r0
   243e0:	mov	r0, r6
   243e4:	bl	12730 <time@plt>
   243e8:	add	lr, sp, #272	; 0x110
   243ec:	movw	r2, #16960	; 0x4240
   243f0:	movt	r2, #15
   243f4:	ldrb	r3, [sp, #96]	; 0x60
   243f8:	ldr	ip, [sp, #128]	; 0x80
   243fc:	strh	r5, [lr]
   24400:	add	r5, sp, #276	; 0x114
   24404:	add	r5, r5, #2
   24408:	ldr	r1, [sp, #140]	; 0x8c
   2440c:	add	lr, sp, #276	; 0x114
   24410:	strh	ip, [r5]
   24414:	add	r5, sp, #256	; 0x100
   24418:	cmp	r1, r6
   2441c:	add	r5, r5, #2
   24420:	ldrh	lr, [lr]
   24424:	ubfx	r3, r3, #2, #1
   24428:	strh	r3, [r5]
   2442c:	add	r5, lr, #2
   24430:	str	r5, [sp, #260]	; 0x104
   24434:	sub	r0, r0, r4
   24438:	mul	r2, r2, r0
   2443c:	add	r0, sp, #288	; 0x120
   24440:	asr	r3, r2, #31
   24444:	strd	r2, [r0]
   24448:	beq	24464 <crc32@@Base+0xa108>
   2444c:	ldr	r3, [r1]
   24450:	ldr	r1, [r1, #8]
   24454:	cmp	r1, #0
   24458:	add	r5, r5, r3, lsr #4
   2445c:	bne	2444c <crc32@@Base+0xa0f0>
   24460:	str	r5, [sp, #260]	; 0x104
   24464:	ldrb	r3, [sp, #136]	; 0x88
   24468:	tst	r3, #1
   2446c:	beq	254f0 <crc32@@Base+0xb194>
   24470:	add	r3, sp, #280	; 0x118
   24474:	uxth	ip, ip
   24478:	ldr	r2, [sp, #260]	; 0x104
   2447c:	ldrh	r3, [r3]
   24480:	add	r2, r2, #2
   24484:	ldr	r1, [sp, #132]	; 0x84
   24488:	mul	ip, r3, ip
   2448c:	str	r1, [sp, #268]	; 0x10c
   24490:	add	r3, lr, ip
   24494:	add	ip, ip, r2
   24498:	add	r2, sp, #272	; 0x110
   2449c:	str	ip, [sp, #260]	; 0x104
   244a0:	add	r2, r2, #2
   244a4:	uxth	r3, r3
   244a8:	strh	r3, [r2]
   244ac:	add	r3, r3, #2
   244b0:	str	r3, [sp, #264]	; 0x108
   244b4:	bl	22f70 <crc32@@Base+0x8c14>
   244b8:	mov	r4, r0
   244bc:	bl	122b0 <EVP_sha1@plt>
   244c0:	mov	r1, r0
   244c4:	mov	r0, r4
   244c8:	bl	12118 <EVP_DigestInit@plt>
   244cc:	mov	r2, #76	; 0x4c
   244d0:	add	r1, sp, #252	; 0xfc
   244d4:	mov	r0, r4
   244d8:	bl	1270c <EVP_DigestUpdate@plt>
   244dc:	add	r1, sp, #232	; 0xe8
   244e0:	mov	r2, #0
   244e4:	mov	r0, r4
   244e8:	bl	125f8 <EVP_DigestFinal@plt>
   244ec:	mov	r0, r4
   244f0:	bl	12568 <EVP_MD_CTX_cleanup@plt>
   244f4:	mov	r0, r4
   244f8:	bl	1255c <CRYPTO_free@plt>
   244fc:	ldr	lr, [sp, #140]	; 0x8c
   24500:	ldr	r5, [sp, #264]	; 0x108
   24504:	cmp	lr, #0
   24508:	beq	2458c <crc32@@Base+0xa230>
   2450c:	ldr	ip, [lr, #12]
   24510:	add	r2, r5, #1
   24514:	ldr	r3, [lr, #28]
   24518:	cmp	ip, #0
   2451c:	str	r2, [lr, #24]
   24520:	sub	r4, r3, #1
   24524:	add	r5, r5, r3
   24528:	str	r4, [lr, #28]
   2452c:	beq	24580 <crc32@@Base+0xa224>
   24530:	ldrb	r3, [ip, #17]
   24534:	add	r0, ip, #16
   24538:	add	r0, r0, #15
   2453c:	cmp	r3, #1
   24540:	ldreq	r2, [lr, #20]
   24544:	ldreq	r3, [lr, #32]
   24548:	streq	r4, [ip, #24]
   2454c:	streq	r2, [ip, #20]
   24550:	add	r2, ip, #15
   24554:	streq	r3, [ip, #28]
   24558:	mov	r3, #0
   2455c:	ldrb	r1, [r2, #1]!
   24560:	add	r3, r3, r1
   24564:	cmp	r2, r0
   24568:	uxtb	r3, r3
   2456c:	bne	2455c <crc32@@Base+0xa200>
   24570:	strb	r3, [ip, #16]
   24574:	ldr	ip, [ip, #4]
   24578:	cmp	ip, #0
   2457c:	bne	24530 <crc32@@Base+0xa1d4>
   24580:	ldr	lr, [lr, #8]
   24584:	cmp	lr, #0
   24588:	bne	2450c <crc32@@Base+0xa1b0>
   2458c:	bl	22f70 <crc32@@Base+0x8c14>
   24590:	mov	r4, r0
   24594:	str	r0, [sp, #160]	; 0xa0
   24598:	bl	122b0 <EVP_sha1@plt>
   2459c:	mov	r1, r0
   245a0:	mov	r0, r4
   245a4:	bl	12118 <EVP_DigestInit@plt>
   245a8:	mov	r2, #1
   245ac:	mov	r1, #0
   245b0:	add	r0, sp, #96	; 0x60
   245b4:	bl	22784 <crc32@@Base+0x8428>
   245b8:	add	r0, sp, #96	; 0x60
   245bc:	bl	22ee8 <crc32@@Base+0x8b8c>
   245c0:	add	r0, sp, #96	; 0x60
   245c4:	bl	22f1c <crc32@@Base+0x8bc0>
   245c8:	mov	r1, #1
   245cc:	add	r0, sp, #96	; 0x60
   245d0:	bl	227fc <crc32@@Base+0x84a0>
   245d4:	ldr	r4, [sp, #160]	; 0xa0
   245d8:	mov	r3, #16
   245dc:	add	r2, sp, #212	; 0xd4
   245e0:	add	r1, sp, #112	; 0x70
   245e4:	ldr	r0, [sp, #156]	; 0x9c
   245e8:	bl	22e38 <crc32@@Base+0x8adc>
   245ec:	mov	r0, r4
   245f0:	add	r1, sp, #196	; 0xc4
   245f4:	mov	r2, #32
   245f8:	bl	1270c <EVP_DigestUpdate@plt>
   245fc:	ldr	r7, [sp, #140]	; 0x8c
   24600:	cmp	r7, #0
   24604:	beq	24690 <crc32@@Base+0xa334>
   24608:	ldr	r4, [r7, #12]
   2460c:	mov	r1, #1
   24610:	add	r0, sp, #96	; 0x60
   24614:	bl	227fc <crc32@@Base+0x84a0>
   24618:	cmp	r4, #0
   2461c:	bne	24638 <crc32@@Base+0xa2dc>
   24620:	b	24684 <crc32@@Base+0xa328>
   24624:	cmp	r1, #2
   24628:	beq	24d70 <crc32@@Base+0xaa14>
   2462c:	ldr	r4, [r4, #4]
   24630:	cmp	r4, #0
   24634:	beq	24684 <crc32@@Base+0xa328>
   24638:	add	r5, r4, #32
   2463c:	ldr	r6, [sp, #160]	; 0xa0
   24640:	mov	r3, #16
   24644:	ldr	r0, [sp, #156]	; 0x9c
   24648:	add	r1, r4, r3
   2464c:	mov	r2, r5
   24650:	bl	22e38 <crc32@@Base+0x8adc>
   24654:	mov	r1, r5
   24658:	mov	r0, r6
   2465c:	mov	r2, #16
   24660:	bl	1270c <EVP_DigestUpdate@plt>
   24664:	ldrb	r1, [r4, #17]
   24668:	cmp	r1, #1
   2466c:	bne	24624 <crc32@@Base+0xa2c8>
   24670:	add	r0, sp, #96	; 0x60
   24674:	bl	227fc <crc32@@Base+0x84a0>
   24678:	ldr	r4, [r4, #4]
   2467c:	cmp	r4, #0
   24680:	bne	24638 <crc32@@Base+0xa2dc>
   24684:	ldr	r7, [r7, #8]
   24688:	cmp	r7, #0
   2468c:	bne	24608 <crc32@@Base+0xa2ac>
   24690:	mov	r1, #1
   24694:	add	r0, sp, #96	; 0x60
   24698:	bl	227fc <crc32@@Base+0x84a0>
   2469c:	add	r1, sp, #164	; 0xa4
   246a0:	mov	r2, #0
   246a4:	ldr	r0, [sp, #160]	; 0xa0
   246a8:	bl	125f8 <EVP_DigestFinal@plt>
   246ac:	ldr	r4, [sp, #160]	; 0xa0
   246b0:	mov	r0, r4
   246b4:	bl	12568 <EVP_MD_CTX_cleanup@plt>
   246b8:	mov	r0, r4
   246bc:	bl	1255c <CRYPTO_free@plt>
   246c0:	add	r2, sp, #164	; 0xa4
   246c4:	mov	r3, #32
   246c8:	ldr	r0, [sp, #156]	; 0x9c
   246cc:	mov	r1, r2
   246d0:	bl	22e38 <crc32@@Base+0x8adc>
   246d4:	ldr	r0, [sp, #156]	; 0x9c
   246d8:	bl	1249c <EVP_CIPHER_CTX_cleanup@plt>
   246dc:	ldr	r5, [sp, #128]	; 0x80
   246e0:	ldr	r7, [sp, #140]	; 0x8c
   246e4:	add	r5, r5, #10
   246e8:	cmp	r7, #0
   246ec:	lsl	r5, r5, #4
   246f0:	beq	24fdc <crc32@@Base+0xac80>
   246f4:	mov	r3, r7
   246f8:	ldr	r2, [r3]
   246fc:	ldr	r3, [r3, #8]
   24700:	add	r5, r5, r2
   24704:	cmp	r3, #0
   24708:	bne	246f8 <crc32@@Base+0xa39c>
   2470c:	mov	r0, r5
   24710:	bl	12664 <malloc@plt>
   24714:	subs	r8, r0, #0
   24718:	beq	24fec <crc32@@Base+0xac90>
   2471c:	add	r1, sp, #232	; 0xe8
   24720:	mov	r2, #96	; 0x60
   24724:	bl	12658 <memcpy@plt>
   24728:	add	r4, r8, #96	; 0x60
   2472c:	mov	lr, r7
   24730:	b	24738 <crc32@@Base+0xa3dc>
   24734:	mov	r4, r6
   24738:	mov	r3, lr
   2473c:	mov	ip, r4
   24740:	ldr	r0, [r3, #20]!
   24744:	add	r6, r4, #16
   24748:	ldr	r1, [r3, #4]
   2474c:	ldr	r2, [r3, #8]
   24750:	ldr	r3, [r3, #12]
   24754:	stmia	ip!, {r0, r1, r2, r3}
   24758:	ldr	lr, [lr, #8]
   2475c:	cmp	lr, #0
   24760:	bne	24734 <crc32@@Base+0xa3d8>
   24764:	add	ip, sp, #196	; 0xc4
   24768:	mov	lr, r6
   2476c:	add	r4, r4, #48	; 0x30
   24770:	mov	r6, r7
   24774:	ldm	ip!, {r0, r1, r2, r3}
   24778:	stmia	lr!, {r0, r1, r2, r3}
   2477c:	ldm	ip, {r0, r1, r2, r3}
   24780:	stm	lr, {r0, r1, r2, r3}
   24784:	ldr	r9, [r6, #12]
   24788:	cmp	r9, #0
   2478c:	bne	247a0 <crc32@@Base+0xa444>
   24790:	b	247f8 <crc32@@Base+0xa49c>
   24794:	ldr	r9, [r9, #4]
   24798:	cmp	r9, #0
   2479c:	beq	247f8 <crc32@@Base+0xa49c>
   247a0:	mov	r3, r9
   247a4:	add	r4, r4, #16
   247a8:	ldr	r0, [r3, #32]!
   247ac:	ldr	r1, [r3, #4]
   247b0:	ldr	r2, [r3, #8]
   247b4:	ldr	r3, [r3, #12]
   247b8:	str	r0, [r4, #-16]
   247bc:	str	r1, [r4, #-12]
   247c0:	str	r2, [r4, #-8]
   247c4:	str	r3, [r4, #-4]
   247c8:	ldrb	r3, [r9, #17]
   247cc:	cmp	r3, #2
   247d0:	bne	24794 <crc32@@Base+0xa438>
   247d4:	ldr	r2, [r9, #12]
   247d8:	mov	r0, r4
   247dc:	ldr	r1, [r9, #8]
   247e0:	bl	12658 <memcpy@plt>
   247e4:	ldr	r3, [r9, #12]
   247e8:	ldr	r9, [r9, #4]
   247ec:	add	r4, r4, r3
   247f0:	cmp	r9, #0
   247f4:	bne	247a0 <crc32@@Base+0xa444>
   247f8:	ldr	r6, [r6, #8]
   247fc:	cmp	r6, #0
   24800:	bne	24784 <crc32@@Base+0xa428>
   24804:	add	ip, sp, #164	; 0xa4
   24808:	ldr	lr, [sp, #16]
   2480c:	ldm	ip!, {r0, r1, r2, r3}
   24810:	str	r5, [lr, #4]
   24814:	mov	r5, #0
   24818:	str	r8, [lr, #8]
   2481c:	str	r0, [r4]
   24820:	str	r1, [r4, #4]
   24824:	str	r2, [r4, #8]
   24828:	str	r3, [r4, #12]
   2482c:	ldm	ip!, {r0, r1, r2, r3}
   24830:	str	r0, [r4, #16]
   24834:	str	r1, [r4, #20]
   24838:	str	r2, [r4, #24]
   2483c:	str	r3, [r4, #28]
   24840:	mov	r0, r7
   24844:	ldr	r1, [sp, #148]	; 0x94
   24848:	bl	22930 <crc32@@Base+0x85d4>
   2484c:	ldr	r3, [sp, #8]
   24850:	ldr	r2, [sp, #332]	; 0x14c
   24854:	mov	r0, r5
   24858:	ldr	r3, [r3]
   2485c:	cmp	r2, r3
   24860:	bne	25558 <crc32@@Base+0xb1fc>
   24864:	add	sp, sp, #340	; 0x154
   24868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2486c:	tst	r3, #2
   24870:	beq	25394 <crc32@@Base+0xb038>
   24874:	cmp	r9, #46	; 0x2e
   24878:	beq	24884 <crc32@@Base+0xa528>
   2487c:	b	24894 <crc32@@Base+0xa538>
   24880:	add	r6, r6, #1
   24884:	ldrb	r9, [r6]
   24888:	mov	r7, r6
   2488c:	cmp	r9, #46	; 0x2e
   24890:	beq	24880 <crc32@@Base+0xa524>
   24894:	cmp	r9, #0
   24898:	addne	r6, r7, #1
   2489c:	bne	248ac <crc32@@Base+0xa550>
   248a0:	b	248d4 <crc32@@Base+0xa578>
   248a4:	cmp	r3, #46	; 0x2e
   248a8:	beq	24b14 <crc32@@Base+0xa7b8>
   248ac:	mov	r0, r6
   248b0:	ldrb	r3, [r6], #1
   248b4:	cmp	r3, #0
   248b8:	bne	248a4 <crc32@@Base+0xa548>
   248bc:	ldrb	r3, [r7]
   248c0:	cmp	r3, #0
   248c4:	beq	248d4 <crc32@@Base+0xa578>
   248c8:	bl	1267c <strlen@plt>
   248cc:	cmp	r0, #1
   248d0:	beq	24dc0 <crc32@@Base+0xaa64>
   248d4:	ldr	r3, [sp, #60]	; 0x3c
   248d8:	ldr	r2, [sp, #12]
   248dc:	mov	r1, #1
   248e0:	ldr	r0, [r8]
   248e4:	bl	12358 <__fprintf_chk@plt>
   248e8:	b	24320 <crc32@@Base+0x9fc4>
   248ec:	mov	r0, #1
   248f0:	mov	r1, #36	; 0x24
   248f4:	orr	r3, r3, r0
   248f8:	bfi	r3, ip, #1, #1
   248fc:	strb	r3, [sp, #96]	; 0x60
   24900:	bl	125c8 <calloc@plt>
   24904:	subs	r6, r0, #0
   24908:	beq	24320 <crc32@@Base+0x9fc4>
   2490c:	mov	r0, sl
   24910:	movw	r1, #36260	; 0x8da4
   24914:	movt	r1, #3
   24918:	bl	1231c <strtok@plt>
   2491c:	cmp	r0, #0
   24920:	beq	24c70 <crc32@@Base+0xa914>
   24924:	add	r1, sp, #48	; 0x30
   24928:	bl	2265c <crc32@@Base+0x8300>
   2492c:	subs	r7, r0, #0
   24930:	beq	24be4 <crc32@@Base+0xa888>
   24934:	movw	r2, #50372	; 0xc4c4
   24938:	ldr	r3, [sp, #60]	; 0x3c
   2493c:	movt	r2, #3
   24940:	mov	r1, #1
   24944:	ldr	r0, [r8]
   24948:	bl	12358 <__fprintf_chk@plt>
   2494c:	mov	r0, r6
   24950:	bl	121c0 <free@plt>
   24954:	b	24320 <crc32@@Base+0x9fc4>
   24958:	ldrb	r3, [r7, #1]
   2495c:	cmp	r3, #79	; 0x4f
   24960:	bne	249c0 <crc32@@Base+0xa664>
   24964:	ldrb	r3, [r7, #2]
   24968:	cmp	r3, #80	; 0x50
   2496c:	bne	249c0 <crc32@@Base+0xa664>
   24970:	ldrb	r3, [r7, #3]
   24974:	cmp	r3, #0
   24978:	bne	249c0 <crc32@@Base+0xa664>
   2497c:	mov	r1, #48	; 0x30
   24980:	mov	r0, #1
   24984:	ldr	r6, [sp, #144]	; 0x90
   24988:	bl	125c8 <calloc@plt>
   2498c:	cmp	r0, #0
   24990:	beq	24320 <crc32@@Base+0x9fc4>
   24994:	mov	r3, #90	; 0x5a
   24998:	strh	r3, [r0, #16]
   2499c:	ldr	r2, [r6, #12]
   249a0:	mov	r3, #16
   249a4:	str	r3, [r0]
   249a8:	cmp	r2, #0
   249ac:	streq	r0, [r6, #12]
   249b0:	ldrne	r2, [r6, #16]
   249b4:	strne	r0, [r2, #4]
   249b8:	str	r0, [r6, #16]
   249bc:	b	242ec <crc32@@Base+0x9f90>
   249c0:	movw	r1, #50500	; 0xc544
   249c4:	mov	r0, r7
   249c8:	movt	r1, #3
   249cc:	bl	12718 <strcmp@plt>
   249d0:	subs	r9, r0, #0
   249d4:	beq	24ddc <crc32@@Base+0xaa80>
   249d8:	movw	r1, #30416	; 0x76d0
   249dc:	mov	r0, r7
   249e0:	movt	r1, #3
   249e4:	bl	12718 <strcmp@plt>
   249e8:	cmp	r0, #0
   249ec:	beq	24cc8 <crc32@@Base+0xa96c>
   249f0:	movw	r1, #48012	; 0xbb8c
   249f4:	mov	r0, r7
   249f8:	movt	r1, #3
   249fc:	bl	12718 <strcmp@plt>
   24a00:	subs	r3, r0, #0
   24a04:	beq	24f8c <crc32@@Base+0xac30>
   24a08:	movw	r1, #48004	; 0xbb84
   24a0c:	mov	r0, r7
   24a10:	movt	r1, #3
   24a14:	bl	12718 <strcmp@plt>
   24a18:	cmp	r0, #0
   24a1c:	beq	24f88 <crc32@@Base+0xac2c>
   24a20:	movw	r1, #51020	; 0xc74c
   24a24:	mov	r0, r7
   24a28:	movt	r1, #3
   24a2c:	bl	12718 <strcmp@plt>
   24a30:	subs	r6, r0, #0
   24a34:	bne	25538 <crc32@@Base+0xb1dc>
   24a38:	ldr	r3, [sp, #144]	; 0x90
   24a3c:	mov	r1, #48	; 0x30
   24a40:	mov	r0, #1
   24a44:	str	r3, [sp, #24]
   24a48:	bl	125c8 <calloc@plt>
   24a4c:	subs	r3, r0, #0
   24a50:	str	r3, [sp, #20]
   24a54:	beq	24320 <crc32@@Base+0x9fc4>
   24a58:	mov	r0, sl
   24a5c:	movw	r1, #36260	; 0x8da4
   24a60:	movt	r1, #3
   24a64:	bl	1231c <strtok@plt>
   24a68:	subs	r9, r0, #0
   24a6c:	beq	2551c <crc32@@Base+0xb1c0>
   24a70:	movw	r7, #47720	; 0xba68
   24a74:	movt	r7, #3
   24a78:	movw	r1, #50208	; 0xc420
   24a7c:	movt	r1, #3
   24a80:	mov	sl, r7
   24a84:	b	24a8c <crc32@@Base+0xa730>
   24a88:	ldr	r1, [r7, #12]!
   24a8c:	mov	r0, r9
   24a90:	bl	12718 <strcmp@plt>
   24a94:	cmp	r0, #0
   24a98:	beq	2519c <crc32@@Base+0xae40>
   24a9c:	ldr	r1, [r7, #4]
   24aa0:	cmp	r1, #0
   24aa4:	beq	24ab8 <crc32@@Base+0xa75c>
   24aa8:	mov	r0, r9
   24aac:	bl	12718 <strcmp@plt>
   24ab0:	cmp	r0, #0
   24ab4:	beq	2519c <crc32@@Base+0xae40>
   24ab8:	add	r6, r6, #1
   24abc:	cmp	r6, #9
   24ac0:	bne	24a88 <crc32@@Base+0xa72c>
   24ac4:	movw	r2, #51248	; 0xc830
   24ac8:	ldr	r3, [sp, #60]	; 0x3c
   24acc:	movt	r2, #3
   24ad0:	mov	r1, #1
   24ad4:	ldr	r0, [r8]
   24ad8:	bl	12358 <__fprintf_chk@plt>
   24adc:	ldr	r0, [sp, #20]
   24ae0:	bl	121c0 <free@plt>
   24ae4:	b	24320 <crc32@@Base+0x9fc4>
   24ae8:	movw	r2, #50252	; 0xc44c
   24aec:	ldr	r3, [sp, #60]	; 0x3c
   24af0:	movt	r2, #3
   24af4:	mov	r1, #1
   24af8:	ldr	r0, [r8]
   24afc:	bl	12358 <__fprintf_chk@plt>
   24b00:	ldr	r0, [r6, #8]
   24b04:	bl	121c0 <free@plt>
   24b08:	mov	r0, r6
   24b0c:	bl	121c0 <free@plt>
   24b10:	b	24320 <crc32@@Base+0x9fc4>
   24b14:	mov	r3, #0
   24b18:	strb	r3, [r0]
   24b1c:	ldrb	r9, [r7]
   24b20:	cmp	r9, r3
   24b24:	beq	248d4 <crc32@@Base+0xa578>
   24b28:	cmp	r6, #0
   24b2c:	moveq	r6, #49	; 0x31
   24b30:	bne	24d94 <crc32@@Base+0xaa38>
   24b34:	movw	r1, #51152	; 0xc7d0
   24b38:	mov	r0, r7
   24b3c:	movt	r1, #3
   24b40:	bl	12718 <strcmp@plt>
   24b44:	cmp	r0, #0
   24b48:	beq	24bb4 <crc32@@Base+0xa858>
   24b4c:	movw	r1, #51160	; 0xc7d8
   24b50:	mov	r0, r7
   24b54:	movt	r1, #3
   24b58:	bl	12718 <strcmp@plt>
   24b5c:	cmp	r0, #0
   24b60:	orreq	r3, r6, #-872415232	; 0xcc000000
   24b64:	beq	24c58 <crc32@@Base+0xa8fc>
   24b68:	cmp	r9, #79	; 0x4f
   24b6c:	beq	24c8c <crc32@@Base+0xa930>
   24b70:	cmp	r9, #69	; 0x45
   24b74:	bne	2555c <crc32@@Base+0xb200>
   24b78:	ldrb	r3, [r7, #1]
   24b7c:	cmp	r3, #81	; 0x51
   24b80:	bne	24c98 <crc32@@Base+0xa93c>
   24b84:	ldrb	r3, [r7, #2]
   24b88:	cmp	r3, #90	; 0x5a
   24b8c:	bne	24c4c <crc32@@Base+0xa8f0>
   24b90:	ldrb	r3, [r7, #3]
   24b94:	cmp	r3, #0
   24b98:	bne	24c98 <crc32@@Base+0xa93c>
   24b9c:	orr	r3, r6, #-822083584	; 0xcf000000
   24ba0:	add	r2, sp, #60	; 0x3c
   24ba4:	add	r1, sp, #52	; 0x34
   24ba8:	ldr	r0, [sp, #152]	; 0x98
   24bac:	bl	22c1c <crc32@@Base+0x88c0>
   24bb0:	b	24bc8 <crc32@@Base+0xa86c>
   24bb4:	orr	r3, r6, #-872415232	; 0xcc000000
   24bb8:	add	r2, sp, #60	; 0x3c
   24bbc:	add	r1, sp, #52	; 0x34
   24bc0:	ldr	r0, [sp, #152]	; 0x98
   24bc4:	bl	22c1c <crc32@@Base+0x88c0>
   24bc8:	ldrb	r3, [sp, #96]	; 0x60
   24bcc:	cmp	r0, #0
   24bd0:	movne	r0, #0
   24bd4:	andeq	r0, r3, #1
   24bd8:	cmp	r0, #0
   24bdc:	beq	24320 <crc32@@Base+0x9fc4>
   24be0:	b	242e0 <crc32@@Base+0x9f84>
   24be4:	movw	r1, #36260	; 0x8da4
   24be8:	movt	r1, #3
   24bec:	bl	1231c <strtok@plt>
   24bf0:	subs	r3, r0, #0
   24bf4:	beq	24d48 <crc32@@Base+0xa9ec>
   24bf8:	str	r3, [sp, #20]
   24bfc:	bl	1267c <strlen@plt>
   24c00:	ldr	r9, [sp, #128]	; 0x80
   24c04:	ldr	sl, [sp, #48]	; 0x30
   24c08:	add	r9, r9, #1
   24c0c:	ldr	r3, [sp, #20]
   24c10:	cmp	r0, #8
   24c14:	beq	24ff4 <crc32@@Base+0xac98>
   24c18:	ldrb	r3, [r6, #4]
   24c1c:	str	sl, [r6, #20]
   24c20:	bfi	r3, r7, #0, #1
   24c24:	str	r7, [r6, #32]
   24c28:	str	r9, [sp, #128]	; 0x80
   24c2c:	strb	r3, [r6, #4]
   24c30:	ldr	r3, [sp, #140]	; 0x8c
   24c34:	cmp	r3, #0
   24c38:	streq	r6, [sp, #140]	; 0x8c
   24c3c:	ldrne	r3, [sp, #144]	; 0x90
   24c40:	strne	r6, [r3, #8]
   24c44:	str	r6, [sp, #144]	; 0x90
   24c48:	b	24320 <crc32@@Base+0x9fc4>
   24c4c:	cmp	r3, #0
   24c50:	bne	24c98 <crc32@@Base+0xa93c>
   24c54:	orr	r3, r6, #-822083584	; 0xcf000000
   24c58:	add	r2, sp, #60	; 0x3c
   24c5c:	orr	r3, r3, #16
   24c60:	add	r1, sp, #52	; 0x34
   24c64:	ldr	r0, [sp, #152]	; 0x98
   24c68:	bl	22c1c <crc32@@Base+0x88c0>
   24c6c:	b	24bc8 <crc32@@Base+0xa86c>
   24c70:	movw	r2, #50336	; 0xc4a0
   24c74:	ldr	r3, [sp, #60]	; 0x3c
   24c78:	movt	r2, #3
   24c7c:	mov	r1, #1
   24c80:	ldr	r0, [r8]
   24c84:	bl	12358 <__fprintf_chk@plt>
   24c88:	b	2494c <crc32@@Base+0xa5f0>
   24c8c:	ldrb	r3, [r7, #1]
   24c90:	cmp	r3, #82	; 0x52
   24c94:	beq	24fa0 <crc32@@Base+0xac44>
   24c98:	movw	r1, #51168	; 0xc7e0
   24c9c:	mov	r0, r7
   24ca0:	movt	r1, #3
   24ca4:	bl	12718 <strcmp@plt>
   24ca8:	cmp	r0, #0
   24cac:	bne	25538 <crc32@@Base+0xb1dc>
   24cb0:	mov	r3, #-1073741824	; 0xc0000000
   24cb4:	add	r2, sp, #60	; 0x3c
   24cb8:	add	r1, sp, #52	; 0x34
   24cbc:	ldr	r0, [sp, #152]	; 0x98
   24cc0:	bl	22c1c <crc32@@Base+0x88c0>
   24cc4:	b	24bc8 <crc32@@Base+0xa86c>
   24cc8:	mov	r1, #48	; 0x30
   24ccc:	mov	r0, #1
   24cd0:	ldr	r7, [sp, #144]	; 0x90
   24cd4:	bl	125c8 <calloc@plt>
   24cd8:	subs	r6, r0, #0
   24cdc:	beq	24320 <crc32@@Base+0x9fc4>
   24ce0:	mov	r0, sl
   24ce4:	movw	r1, #36260	; 0x8da4
   24ce8:	movt	r1, #3
   24cec:	bl	1231c <strtok@plt>
   24cf0:	cmp	r0, #0
   24cf4:	beq	251f8 <crc32@@Base+0xae9c>
   24cf8:	add	r1, sp, #40	; 0x28
   24cfc:	bl	2265c <crc32@@Base+0x8300>
   24d00:	cmp	r0, #0
   24d04:	bne	250e0 <crc32@@Base+0xad84>
   24d08:	movw	r1, #36260	; 0x8da4
   24d0c:	movt	r1, #3
   24d10:	bl	1231c <strtok@plt>
   24d14:	cmp	r0, #0
   24d18:	beq	253b4 <crc32@@Base+0xb058>
   24d1c:	add	r1, sp, #44	; 0x2c
   24d20:	bl	2265c <crc32@@Base+0x8300>
   24d24:	cmp	r0, #0
   24d28:	beq	25128 <crc32@@Base+0xadcc>
   24d2c:	movw	r2, #50916	; 0xc6e4
   24d30:	ldr	r3, [sp, #60]	; 0x3c
   24d34:	movt	r2, #3
   24d38:	mov	r1, #1
   24d3c:	ldr	r0, [r8]
   24d40:	bl	12358 <__fprintf_chk@plt>
   24d44:	b	2494c <crc32@@Base+0xa5f0>
   24d48:	ldr	r0, [sp, #48]	; 0x30
   24d4c:	ldrb	r1, [r6, #4]
   24d50:	ldr	r2, [sp, #128]	; 0x80
   24d54:	bfi	r1, r3, #0, #1
   24d58:	str	r3, [r6, #32]
   24d5c:	strb	r1, [r6, #4]
   24d60:	add	r3, r2, #1
   24d64:	str	r0, [r6, #20]
   24d68:	str	r3, [sp, #128]	; 0x80
   24d6c:	b	24c30 <crc32@@Base+0xa8d4>
   24d70:	ldrd	r2, [r4, #8]
   24d74:	ldr	r0, [sp, #156]	; 0x9c
   24d78:	mov	r1, r2
   24d7c:	bl	22e38 <crc32@@Base+0x8adc>
   24d80:	ldr	r2, [r4, #12]
   24d84:	ldr	r1, [r4, #8]
   24d88:	ldr	r0, [sp, #160]	; 0xa0
   24d8c:	bl	1270c <EVP_DigestUpdate@plt>
   24d90:	b	2462c <crc32@@Base+0xa2d0>
   24d94:	mov	r0, r6
   24d98:	bl	1267c <strlen@plt>
   24d9c:	cmp	r0, #1
   24da0:	bne	248d4 <crc32@@Base+0xa578>
   24da4:	ldrb	r2, [r6]
   24da8:	sub	r3, r2, #49	; 0x31
   24dac:	uxtb	r1, r3
   24db0:	cmp	r2, #52	; 0x34
   24db4:	cmpne	r1, #1
   24db8:	movls	r6, r3
   24dbc:	bls	24b34 <crc32@@Base+0xa7d8>
   24dc0:	movw	r2, #51112	; 0xc7a8
   24dc4:	ldr	r3, [sp, #60]	; 0x3c
   24dc8:	movt	r2, #3
   24dcc:	mov	r1, #1
   24dd0:	ldr	r0, [r8]
   24dd4:	bl	12358 <__fprintf_chk@plt>
   24dd8:	b	24320 <crc32@@Base+0x9fc4>
   24ddc:	mov	r1, #48	; 0x30
   24de0:	mov	r0, #1
   24de4:	ldr	r7, [sp, #144]	; 0x90
   24de8:	bl	125c8 <calloc@plt>
   24dec:	subs	r6, r0, #0
   24df0:	beq	24320 <crc32@@Base+0x9fc4>
   24df4:	mov	r0, sl
   24df8:	movw	r1, #36260	; 0x8da4
   24dfc:	movt	r1, #3
   24e00:	bl	1231c <strtok@plt>
   24e04:	cmp	r0, #0
   24e08:	beq	25208 <crc32@@Base+0xaeac>
   24e0c:	ldrb	r3, [r0]
   24e10:	cmp	r3, #73	; 0x49
   24e14:	bne	2505c <crc32@@Base+0xad00>
   24e18:	ldrb	r3, [r0, #1]
   24e1c:	cmp	r3, #86	; 0x56
   24e20:	bne	24e40 <crc32@@Base+0xaae4>
   24e24:	ldrb	r3, [r0, #2]
   24e28:	cmp	r3, #84	; 0x54
   24e2c:	bne	24e40 <crc32@@Base+0xaae4>
   24e30:	ldrb	r3, [r0, #3]
   24e34:	cmp	r3, #0
   24e38:	moveq	sl, #1
   24e3c:	beq	25090 <crc32@@Base+0xad34>
   24e40:	mov	sl, r9
   24e44:	add	r1, sp, #44	; 0x2c
   24e48:	bl	2265c <crc32@@Base+0x8300>
   24e4c:	cmp	r0, #0
   24e50:	bne	250c4 <crc32@@Base+0xad68>
   24e54:	movw	r1, #36260	; 0x8da4
   24e58:	movt	r1, #3
   24e5c:	bl	1231c <strtok@plt>
   24e60:	subs	r3, r0, #0
   24e64:	str	r3, [sp, #28]
   24e68:	beq	25384 <crc32@@Base+0xb028>
   24e6c:	cmp	sl, #0
   24e70:	bne	2532c <crc32@@Base+0xafd0>
   24e74:	cmp	r9, #0
   24e78:	beq	2524c <crc32@@Base+0xaef0>
   24e7c:	add	r1, sp, #48	; 0x30
   24e80:	ldr	sl, [sp, #148]	; 0x94
   24e84:	bl	2265c <crc32@@Base+0x8300>
   24e88:	cmp	r0, #0
   24e8c:	bne	254d4 <crc32@@Base+0xb178>
   24e90:	cmp	sl, #0
   24e94:	ldr	r1, [sp, #48]	; 0x30
   24e98:	bne	24eac <crc32@@Base+0xab50>
   24e9c:	b	254a0 <crc32@@Base+0xb144>
   24ea0:	ldr	sl, [sl]
   24ea4:	cmp	sl, #0
   24ea8:	beq	254a0 <crc32@@Base+0xb144>
   24eac:	ldr	r3, [sl, #4]
   24eb0:	cmp	r3, r1
   24eb4:	bne	24ea0 <crc32@@Base+0xab44>
   24eb8:	ldr	r2, [sl, #12]
   24ebc:	mov	r0, #1
   24ec0:	add	r9, r2, #15
   24ec4:	bic	r9, r9, #15
   24ec8:	str	r2, [sp, #20]
   24ecc:	mov	r1, r9
   24ed0:	bl	125c8 <calloc@plt>
   24ed4:	ldr	r2, [sp, #20]
   24ed8:	subs	r3, r0, #0
   24edc:	beq	2494c <crc32@@Base+0xa5f0>
   24ee0:	ldr	r1, [sl, #8]
   24ee4:	str	r3, [sp, #20]
   24ee8:	bl	12658 <memcpy@plt>
   24eec:	ldr	r3, [sp, #20]
   24ef0:	str	r9, [r6, #12]
   24ef4:	str	r3, [r6, #8]
   24ef8:	mov	r3, #1
   24efc:	ldr	r0, [sp, #44]	; 0x2c
   24f00:	ldr	r1, [r6, #8]
   24f04:	strh	r3, [r6, #18]
   24f08:	mov	r2, r9
   24f0c:	movw	r3, #602	; 0x25a
   24f10:	str	r0, [r6, #20]
   24f14:	strh	r3, [r6, #16]
   24f18:	mov	r0, #0
   24f1c:	str	r9, [r6, #24]
   24f20:	bl	25f0c <crc32@@Base+0xbbb0>
   24f24:	ldr	r2, [r7, #12]
   24f28:	ldr	r3, [r6, #12]
   24f2c:	cmp	r2, #0
   24f30:	add	r3, r3, #16
   24f34:	str	r3, [r6]
   24f38:	str	r0, [r6, #28]
   24f3c:	beq	2545c <crc32@@Base+0xb100>
   24f40:	ldrb	r2, [sp, #96]	; 0x60
   24f44:	ldr	r3, [r7, #16]
   24f48:	tst	r2, #1
   24f4c:	str	r6, [r3, #4]
   24f50:	str	r6, [r7, #16]
   24f54:	bne	242e0 <crc32@@Base+0x9f84>
   24f58:	b	24320 <crc32@@Base+0x9fc4>
   24f5c:	ldr	r3, [sp, #60]	; 0x3c
   24f60:	mov	r1, #1
   24f64:	ldr	r0, [r8]
   24f68:	movw	r2, #50288	; 0xc470
   24f6c:	movt	r2, #3
   24f70:	bl	12358 <__fprintf_chk@plt>
   24f74:	ldr	r0, [r6, #8]
   24f78:	bl	121c0 <free@plt>
   24f7c:	mov	r0, r6
   24f80:	bl	121c0 <free@plt>
   24f84:	b	24320 <crc32@@Base+0x9fc4>
   24f88:	mov	r3, #1
   24f8c:	add	r2, sp, #60	; 0x3c
   24f90:	add	r1, sp, #52	; 0x34
   24f94:	ldr	r0, [sp, #144]	; 0x90
   24f98:	bl	229fc <crc32@@Base+0x86a0>
   24f9c:	b	24bc8 <crc32@@Base+0xa86c>
   24fa0:	ldrb	r3, [r7, #2]
   24fa4:	cmp	r3, #82	; 0x52
   24fa8:	bne	24c98 <crc32@@Base+0xa93c>
   24fac:	ldrb	r3, [r7, #3]
   24fb0:	cmp	r3, #0
   24fb4:	bne	24c98 <crc32@@Base+0xa93c>
   24fb8:	orr	r3, r6, #-872415232	; 0xcc000000
   24fbc:	add	r2, sp, #60	; 0x3c
   24fc0:	orr	r3, r3, #24
   24fc4:	add	r1, sp, #52	; 0x34
   24fc8:	ldr	r0, [sp, #152]	; 0x98
   24fcc:	bl	22c1c <crc32@@Base+0x88c0>
   24fd0:	b	24bc8 <crc32@@Base+0xa86c>
   24fd4:	mov	r3, r4
   24fd8:	b	248d8 <crc32@@Base+0xa57c>
   24fdc:	mov	r0, r5
   24fe0:	bl	12664 <malloc@plt>
   24fe4:	subs	r8, r0, #0
   24fe8:	bne	250fc <crc32@@Base+0xada0>
   24fec:	mvn	r5, #11
   24ff0:	b	24840 <crc32@@Base+0xa4e4>
   24ff4:	mov	r2, r0
   24ff8:	movw	r1, #50408	; 0xc4e8
   24ffc:	mov	r0, r3
   25000:	movt	r1, #3
   25004:	bl	12220 <strncmp@plt>
   25008:	cmp	r0, #0
   2500c:	bne	24c18 <crc32@@Base+0xa8bc>
   25010:	ldrb	r2, [sp, #136]	; 0x88
   25014:	mov	r1, #1
   25018:	ldrb	r3, [r6, #4]
   2501c:	tst	r2, #1
   25020:	str	sl, [r6, #20]
   25024:	orr	r3, r3, r1
   25028:	orreq	r2, r2, #1
   2502c:	str	r9, [sp, #128]	; 0x80
   25030:	str	r1, [r6, #32]
   25034:	strb	r3, [r6, #4]
   25038:	streq	sl, [sp, #132]	; 0x84
   2503c:	strbeq	r2, [sp, #136]	; 0x88
   25040:	beq	24c30 <crc32@@Base+0xa8d4>
   25044:	movw	r2, #50420	; 0xc4f4
   25048:	ldr	r3, [sp, #60]	; 0x3c
   2504c:	movt	r2, #3
   25050:	ldr	r0, [r8]
   25054:	bl	12358 <__fprintf_chk@plt>
   25058:	b	24c30 <crc32@@Base+0xa8d4>
   2505c:	cmp	r3, #68	; 0x44
   25060:	bne	24e40 <crc32@@Base+0xaae4>
   25064:	ldrb	r3, [r0, #1]
   25068:	cmp	r3, #67	; 0x43
   2506c:	bne	24e40 <crc32@@Base+0xaae4>
   25070:	ldrb	r3, [r0, #2]
   25074:	cmp	r3, #68	; 0x44
   25078:	bne	24e40 <crc32@@Base+0xaae4>
   2507c:	ldrb	r3, [r0, #3]
   25080:	mov	sl, r9
   25084:	cmp	r3, #0
   25088:	bne	24e44 <crc32@@Base+0xaae8>
   2508c:	mov	r9, #1
   25090:	movw	r1, #36260	; 0x8da4
   25094:	mov	r0, #0
   25098:	movt	r1, #3
   2509c:	bl	1231c <strtok@plt>
   250a0:	cmp	r0, #0
   250a4:	bne	24e44 <crc32@@Base+0xaae8>
   250a8:	ldr	r3, [sp, #60]	; 0x3c
   250ac:	movw	r2, #50552	; 0xc578
   250b0:	movt	r2, #3
   250b4:	mov	r1, #1
   250b8:	ldr	r0, [r8]
   250bc:	bl	12358 <__fprintf_chk@plt>
   250c0:	b	2494c <crc32@@Base+0xa5f0>
   250c4:	movw	r2, #50584	; 0xc598
   250c8:	ldr	r3, [sp, #60]	; 0x3c
   250cc:	movt	r2, #3
   250d0:	mov	r1, #1
   250d4:	ldr	r0, [r8]
   250d8:	bl	12358 <__fprintf_chk@plt>
   250dc:	b	2494c <crc32@@Base+0xa5f0>
   250e0:	movw	r2, #50848	; 0xc6a0
   250e4:	ldr	r3, [sp, #60]	; 0x3c
   250e8:	movt	r2, #3
   250ec:	mov	r1, #1
   250f0:	ldr	r0, [r8]
   250f4:	bl	12358 <__fprintf_chk@plt>
   250f8:	b	2494c <crc32@@Base+0xa5f0>
   250fc:	add	r1, sp, #232	; 0xe8
   25100:	mov	r2, #96	; 0x60
   25104:	bl	12658 <memcpy@plt>
   25108:	add	lr, sp, #196	; 0xc4
   2510c:	add	ip, r8, #96	; 0x60
   25110:	add	r4, r8, #128	; 0x80
   25114:	ldm	lr!, {r0, r1, r2, r3}
   25118:	stmia	ip!, {r0, r1, r2, r3}
   2511c:	ldm	lr, {r0, r1, r2, r3}
   25120:	stm	ip, {r0, r1, r2, r3}
   25124:	b	24804 <crc32@@Base+0xa4a8>
   25128:	movw	r1, #36260	; 0x8da4
   2512c:	movt	r1, #3
   25130:	bl	1231c <strtok@plt>
   25134:	cmp	r0, #0
   25138:	beq	25490 <crc32@@Base+0xb134>
   2513c:	add	r1, sp, #48	; 0x30
   25140:	bl	2265c <crc32@@Base+0x8300>
   25144:	cmp	r0, #0
   25148:	bne	25474 <crc32@@Base+0xb118>
   2514c:	movw	r3, #858	; 0x35a
   25150:	strh	r3, [r6, #16]
   25154:	ldr	r3, [r7, #12]
   25158:	mov	r2, #16
   2515c:	ldr	r0, [sp, #40]	; 0x28
   25160:	cmp	r3, #0
   25164:	ldr	r3, [sp, #48]	; 0x30
   25168:	ldr	r1, [sp, #44]	; 0x2c
   2516c:	str	r0, [r6, #20]
   25170:	str	r3, [r6, #24]
   25174:	ldrb	r3, [sp, #96]	; 0x60
   25178:	str	r1, [r6, #28]
   2517c:	and	r3, r3, #1
   25180:	str	r2, [r6]
   25184:	bne	242cc <crc32@@Base+0x9f70>
   25188:	cmp	r3, #0
   2518c:	str	r6, [r7, #12]
   25190:	str	r6, [r7, #16]
   25194:	bne	242e0 <crc32@@Base+0x9f84>
   25198:	b	24320 <crc32@@Base+0x9fc4>
   2519c:	mov	r3, #12
   251a0:	ldr	r0, [sp, #20]
   251a4:	mla	r6, r3, r6, sl
   251a8:	movw	r2, #1626	; 0x65a
   251ac:	strh	r2, [r0, #16]
   251b0:	ldr	r2, [sp, #24]
   251b4:	ldrb	r3, [r6, #8]
   251b8:	ldr	r1, [r2, #12]
   251bc:	mov	r2, #16
   251c0:	str	r2, [r0]
   251c4:	str	r3, [r0, #28]
   251c8:	cmp	r1, #0
   251cc:	ldrb	r3, [sp, #96]	; 0x60
   251d0:	and	r3, r3, #1
   251d4:	beq	25218 <crc32@@Base+0xaebc>
   251d8:	ldr	r1, [sp, #24]
   251dc:	cmp	r3, #0
   251e0:	ldr	r3, [sp, #20]
   251e4:	ldr	r2, [r1, #16]
   251e8:	str	r3, [r2, #4]
   251ec:	str	r3, [r1, #16]
   251f0:	bne	242e0 <crc32@@Base+0x9f84>
   251f4:	b	24320 <crc32@@Base+0x9fc4>
   251f8:	movw	r2, #50816	; 0xc680
   251fc:	ldr	r3, [sp, #60]	; 0x3c
   25200:	movt	r2, #3
   25204:	b	250b4 <crc32@@Base+0xad58>
   25208:	movw	r2, #50508	; 0xc54c
   2520c:	ldr	r3, [sp, #60]	; 0x3c
   25210:	movt	r2, #3
   25214:	b	250b4 <crc32@@Base+0xad58>
   25218:	cmp	r3, #0
   2521c:	ldrd	r2, [sp, #20]
   25220:	str	r2, [r3, #12]
   25224:	str	r2, [r3, #16]
   25228:	bne	242e0 <crc32@@Base+0x9f84>
   2522c:	b	24320 <crc32@@Base+0x9fc4>
   25230:	movw	r2, #50460	; 0xc51c
   25234:	ldr	r3, [sp, #60]	; 0x3c
   25238:	movt	r2, #3
   2523c:	mov	r1, #1
   25240:	ldr	r0, [r8]
   25244:	bl	12358 <__fprintf_chk@plt>
   25248:	b	24320 <crc32@@Base+0x9fc4>
   2524c:	movw	r1, #53956	; 0xd2c4
   25250:	movt	r1, #3
   25254:	bl	123d0 <fopen@plt>
   25258:	subs	sl, r0, #0
   2525c:	beq	253f0 <crc32@@Base+0xb094>
   25260:	mov	r2, #2
   25264:	mov	r1, r9
   25268:	bl	121f0 <fseek@plt>
   2526c:	cmp	r0, #0
   25270:	blt	253e8 <crc32@@Base+0xb08c>
   25274:	mov	r0, sl
   25278:	bl	125e0 <ftell@plt>
   2527c:	subs	r3, r0, #0
   25280:	str	r3, [sp, #20]
   25284:	blt	253e8 <crc32@@Base+0xb08c>
   25288:	mov	r2, r9
   2528c:	mov	r1, r9
   25290:	mov	r0, sl
   25294:	bl	121f0 <fseek@plt>
   25298:	cmp	r0, #0
   2529c:	blt	253e8 <crc32@@Base+0xb08c>
   252a0:	ldr	r3, [sp, #20]
   252a4:	mov	r0, #1
   252a8:	add	r9, r3, #15
   252ac:	bic	r9, r9, #15
   252b0:	mov	r1, r9
   252b4:	bl	125c8 <calloc@plt>
   252b8:	subs	r2, r0, #0
   252bc:	str	r2, [sp, #24]
   252c0:	beq	253e8 <crc32@@Base+0xb08c>
   252c4:	mov	r3, sl
   252c8:	ldr	r2, [sp, #20]
   252cc:	mov	r1, #1
   252d0:	bl	12508 <fread@plt>
   252d4:	ldr	r3, [sp, #20]
   252d8:	cmp	r3, r0
   252dc:	bne	253e0 <crc32@@Base+0xb084>
   252e0:	ldr	r2, [sp, #24]
   252e4:	mov	r0, sl
   252e8:	str	r9, [r6, #12]
   252ec:	str	r2, [r6, #8]
   252f0:	bl	126b8 <fclose@plt>
   252f4:	ldr	r9, [r6, #12]
   252f8:	ands	r3, r9, #15
   252fc:	beq	24efc <crc32@@Base+0xaba0>
   25300:	ldr	r3, [sp, #60]	; 0x3c
   25304:	mov	r1, #1
   25308:	movw	r2, #50784	; 0xc660
   2530c:	ldr	r0, [r8]
   25310:	movt	r2, #3
   25314:	bl	12358 <__fprintf_chk@plt>
   25318:	ldr	r0, [sp, #44]	; 0x2c
   2531c:	ldr	r9, [r6, #12]
   25320:	mov	r3, #0
   25324:	ldr	r1, [r6, #8]
   25328:	b	24f04 <crc32@@Base+0xaba8>
   2532c:	add	r1, sp, #48	; 0x30
   25330:	bl	2265c <crc32@@Base+0x8300>
   25334:	subs	r9, r0, #0
   25338:	bne	253c4 <crc32@@Base+0xb068>
   2533c:	mov	r1, #32
   25340:	mov	r0, #1
   25344:	bl	125c8 <calloc@plt>
   25348:	subs	r1, r0, #0
   2534c:	beq	2494c <crc32@@Base+0xa5f0>
   25350:	ldr	lr, [sp, #48]	; 0x30
   25354:	mov	r2, #32
   25358:	ldr	r0, [sp, #44]	; 0x2c
   2535c:	mov	r3, r9
   25360:	movw	ip, #8401	; 0x20d1
   25364:	str	r1, [r6, #8]
   25368:	movt	ip, #16384	; 0x4000
   2536c:	str	lr, [r1, #4]
   25370:	str	r0, [r1, #20]
   25374:	mov	r9, r2
   25378:	str	ip, [r1]
   2537c:	str	r2, [r6, #12]
   25380:	b	24f04 <crc32@@Base+0xaba8>
   25384:	movw	r2, #50620	; 0xc5bc
   25388:	ldr	r3, [sp, #60]	; 0x3c
   2538c:	movt	r2, #3
   25390:	b	250b4 <crc32@@Base+0xad58>
   25394:	ldr	r0, [r8]
   25398:	movw	r2, #51072	; 0xc780
   2539c:	ldr	r3, [sp, #60]	; 0x3c
   253a0:	movt	r2, #3
   253a4:	str	r7, [sp]
   253a8:	mov	r1, #1
   253ac:	bl	12358 <__fprintf_chk@plt>
   253b0:	b	24320 <crc32@@Base+0x9fc4>
   253b4:	movw	r2, #50884	; 0xc6c4
   253b8:	ldr	r3, [sp, #60]	; 0x3c
   253bc:	movt	r2, #3
   253c0:	b	250b4 <crc32@@Base+0xad58>
   253c4:	movw	r2, #50680	; 0xc5f8
   253c8:	ldr	r3, [sp, #60]	; 0x3c
   253cc:	movt	r2, #3
   253d0:	mov	r1, #1
   253d4:	ldr	r0, [r8]
   253d8:	bl	12358 <__fprintf_chk@plt>
   253dc:	b	2494c <crc32@@Base+0xa5f0>
   253e0:	ldr	r0, [sp, #24]
   253e4:	bl	121c0 <free@plt>
   253e8:	mov	r0, sl
   253ec:	bl	126b8 <fclose@plt>
   253f0:	ldr	r7, [sp, #28]
   253f4:	mov	r1, #1
   253f8:	ldr	r0, [r8]
   253fc:	movw	r2, #49632	; 0xc1e0
   25400:	movt	r2, #3
   25404:	mov	r3, r7
   25408:	bl	12358 <__fprintf_chk@plt>
   2540c:	ldr	r0, [r8]
   25410:	ldr	r3, [sp, #60]	; 0x3c
   25414:	movw	r2, #50756	; 0xc644
   25418:	str	r7, [sp]
   2541c:	movt	r2, #3
   25420:	mov	r1, #1
   25424:	bl	12358 <__fprintf_chk@plt>
   25428:	b	2494c <crc32@@Base+0xa5f0>
   2542c:	bl	126b8 <fclose@plt>
   25430:	movw	r0, #7868	; 0x1ebc
   25434:	movt	r0, #5
   25438:	mov	r1, r4
   2543c:	movw	r2, #49632	; 0xc1e0
   25440:	ldr	r3, [sp, #108]	; 0x6c
   25444:	ldr	r0, [r0]
   25448:	movt	r2, #3
   2544c:	bl	12358 <__fprintf_chk@plt>
   25450:	mvn	r5, #21
   25454:	ldr	r7, [sp, #140]	; 0x8c
   25458:	b	24840 <crc32@@Base+0xa4e4>
   2545c:	ldrb	r3, [sp, #96]	; 0x60
   25460:	str	r6, [r7, #12]
   25464:	tst	r3, #1
   25468:	str	r6, [r7, #16]
   2546c:	bne	242e0 <crc32@@Base+0x9f84>
   25470:	b	24320 <crc32@@Base+0x9fc4>
   25474:	movw	r2, #50984	; 0xc728
   25478:	ldr	r3, [sp, #60]	; 0x3c
   2547c:	movt	r2, #3
   25480:	mov	r1, #1
   25484:	ldr	r0, [r8]
   25488:	bl	12358 <__fprintf_chk@plt>
   2548c:	b	2494c <crc32@@Base+0xa5f0>
   25490:	movw	r2, #50952	; 0xc708
   25494:	ldr	r3, [sp, #60]	; 0x3c
   25498:	movt	r2, #3
   2549c:	b	250b4 <crc32@@Base+0xad58>
   254a0:	ldr	r3, [sp, #60]	; 0x3c
   254a4:	movw	r2, #51212	; 0xc80c
   254a8:	ldr	r0, [r8]
   254ac:	movt	r2, #3
   254b0:	str	r1, [sp]
   254b4:	mov	r1, #1
   254b8:	bl	12358 <__fprintf_chk@plt>
   254bc:	mov	r0, r6
   254c0:	bl	121c0 <free@plt>
   254c4:	ldrb	r3, [sp, #96]	; 0x60
   254c8:	tst	r3, #1
   254cc:	bne	242e0 <crc32@@Base+0x9f84>
   254d0:	b	24320 <crc32@@Base+0x9fc4>
   254d4:	movw	r2, #50720	; 0xc620
   254d8:	ldr	r3, [sp, #60]	; 0x3c
   254dc:	movt	r2, #3
   254e0:	mov	r1, #1
   254e4:	ldr	r0, [r8]
   254e8:	bl	12358 <__fprintf_chk@plt>
   254ec:	b	2494c <crc32@@Base+0xa5f0>
   254f0:	movw	r3, #7868	; 0x1ebc
   254f4:	movt	r3, #5
   254f8:	movw	r0, #51176	; 0xc7e8
   254fc:	mov	r2, #35	; 0x23
   25500:	ldr	r3, [r3]
   25504:	movt	r0, #3
   25508:	mov	r1, #1
   2550c:	mvn	r5, #21
   25510:	bl	12634 <fwrite@plt>
   25514:	ldr	r7, [sp, #140]	; 0x8c
   25518:	b	24840 <crc32@@Base+0xa4e4>
   2551c:	movw	r2, #51028	; 0xc754
   25520:	ldr	r3, [sp, #60]	; 0x3c
   25524:	movt	r2, #3
   25528:	mov	r1, #1
   2552c:	ldr	r0, [r8]
   25530:	bl	12358 <__fprintf_chk@plt>
   25534:	b	24adc <crc32@@Base+0xa780>
   25538:	str	r7, [sp]
   2553c:	movw	r2, #51072	; 0xc780
   25540:	ldr	r3, [sp, #60]	; 0x3c
   25544:	movt	r2, #3
   25548:	mov	r1, #1
   2554c:	ldr	r0, [r8]
   25550:	bl	12358 <__fprintf_chk@plt>
   25554:	b	24320 <crc32@@Base+0x9fc4>
   25558:	bl	12538 <__stack_chk_fail@plt>
   2555c:	cmp	r9, #78	; 0x4e
   25560:	bne	24c98 <crc32@@Base+0xa93c>
   25564:	ldrb	r3, [r7, #1]
   25568:	cmp	r3, #69	; 0x45
   2556c:	bne	24c98 <crc32@@Base+0xa93c>
   25570:	ldrb	r3, [r7, #2]
   25574:	cmp	r3, #81	; 0x51
   25578:	bne	255a4 <crc32@@Base+0xb248>
   2557c:	ldrb	r3, [r7, #3]
   25580:	cmp	r3, #0
   25584:	bne	24c98 <crc32@@Base+0xa93c>
   25588:	orr	r3, r6, #-822083584	; 0xcf000000
   2558c:	add	r2, sp, #60	; 0x3c
   25590:	orr	r3, r3, #8
   25594:	add	r1, sp, #52	; 0x34
   25598:	ldr	r0, [sp, #152]	; 0x98
   2559c:	bl	22c1c <crc32@@Base+0x88c0>
   255a0:	b	24bc8 <crc32@@Base+0xa86c>
   255a4:	cmp	r3, #90	; 0x5a
   255a8:	bne	24c98 <crc32@@Base+0xa93c>
   255ac:	ldrb	r3, [r7, #3]
   255b0:	cmp	r3, #0
   255b4:	bne	24c98 <crc32@@Base+0xa93c>
   255b8:	orr	r3, r6, #-822083584	; 0xcf000000
   255bc:	b	24fbc <crc32@@Base+0xac60>
   255c0:	b	22f70 <crc32@@Base+0x8c14>
   255c4:	push	{r4, lr}
   255c8:	mov	r4, r0
   255cc:	bl	12568 <EVP_MD_CTX_cleanup@plt>
   255d0:	mov	r0, r4
   255d4:	pop	{r4, lr}
   255d8:	b	1255c <CRYPTO_free@plt>
   255dc:	b	1249c <EVP_CIPHER_CTX_cleanup@plt>
   255e0:	subs	r0, r0, #12
   255e4:	movne	r0, #1
   255e8:	bx	lr
   255ec:	ldr	r3, [r0]
   255f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   255f4:	cmn	r3, #1
   255f8:	sub	sp, sp, #20
   255fc:	add	fp, r0, #512	; 0x200
   25600:	beq	256ec <crc32@@Base+0xb390>
   25604:	ldr	r2, [r0, #4]
   25608:	cmn	r2, #1
   2560c:	beq	256ec <crc32@@Base+0xb390>
   25610:	movw	r7, #13528	; 0x34d8
   25614:	movw	sl, #51452	; 0xc8fc
   25618:	movw	r9, #51428	; 0xc8e4
   2561c:	movw	r8, #51440	; 0xc8f0
   25620:	mov	r6, r0
   25624:	movt	r7, #6
   25628:	movt	sl, #3
   2562c:	movt	r9, #3
   25630:	movt	r8, #3
   25634:	add	r5, r0, #20
   25638:	b	2564c <crc32@@Base+0xb2f0>
   2563c:	add	r5, r5, #32
   25640:	ldr	r2, [r5, #-16]
   25644:	cmn	r2, #1
   25648:	beq	256d8 <crc32@@Base+0xb37c>
   2564c:	ldr	r1, [r7]
   25650:	cmp	r1, #0
   25654:	revne	r4, r3
   25658:	revne	r1, r2
   2565c:	moveq	r1, r2
   25660:	moveq	r4, r3
   25664:	cmp	r4, #512	; 0x200
   25668:	bcs	256f8 <crc32@@Base+0xb39c>
   2566c:	add	r1, r4, r1
   25670:	cmp	r1, #512	; 0x200
   25674:	bcs	256f8 <crc32@@Base+0xb39c>
   25678:	str	r2, [sp]
   2567c:	mov	r1, sl
   25680:	mov	r2, r5
   25684:	mov	r0, #1
   25688:	bl	1282c <__printf_chk@plt>
   2568c:	add	ip, r6, r4
   25690:	ldr	r3, [r6, r4]
   25694:	movw	r1, #51484	; 0xc91c
   25698:	ldr	r0, [ip, #8]
   2569c:	movt	r1, #3
   256a0:	ldrh	r4, [ip, #6]
   256a4:	cmp	r3, #0
   256a8:	ldrb	lr, [ip, #5]
   256ac:	ldrb	ip, [ip, #4]
   256b0:	movne	r2, r9
   256b4:	moveq	r2, r8
   256b8:	str	r0, [sp, #12]
   256bc:	str	r4, [sp, #8]
   256c0:	mov	r0, #1
   256c4:	stm	sp, {ip, lr}
   256c8:	bl	1282c <__printf_chk@plt>
   256cc:	ldr	r3, [r5, #12]
   256d0:	cmn	r3, #1
   256d4:	bne	2563c <crc32@@Base+0xb2e0>
   256d8:	ldr	r1, [r7]
   256dc:	mov	r0, fp
   256e0:	add	sp, sp, #20
   256e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   256e8:	b	33614 <crc32@@Base+0x192b8>
   256ec:	movw	r7, #13528	; 0x34d8
   256f0:	movt	r7, #6
   256f4:	b	256d8 <crc32@@Base+0xb37c>
   256f8:	mov	r0, #1
   256fc:	bl	12298 <exit@plt>
   25700:	ldr	r3, [r0]
   25704:	movw	r2, #13528	; 0x34d8
   25708:	movt	r2, #6
   2570c:	cmn	r3, #1
   25710:	ldr	r1, [r2]
   25714:	beq	25798 <crc32@@Base+0xb43c>
   25718:	ldr	ip, [r0, #4]
   2571c:	cmn	ip, #1
   25720:	beq	25798 <crc32@@Base+0xb43c>
   25724:	push	{r4, r5, lr}
   25728:	mov	lr, r0
   2572c:	movw	r5, #510	; 0x1fe
   25730:	b	25758 <crc32@@Base+0xb3fc>
   25734:	cmp	r3, #512	; 0x200
   25738:	bcs	25784 <crc32@@Base+0xb428>
   2573c:	ldr	r3, [lr, #32]
   25740:	add	lr, lr, #32
   25744:	cmn	r3, #1
   25748:	beq	2578c <crc32@@Base+0xb430>
   2574c:	ldr	ip, [lr, #4]
   25750:	cmn	ip, #1
   25754:	beq	2578c <crc32@@Base+0xb430>
   25758:	cmp	r1, #0
   2575c:	revne	ip, ip
   25760:	revne	r3, r3
   25764:	clz	r2, ip
   25768:	sub	r4, r3, #1
   2576c:	add	r3, r3, ip
   25770:	lsr	r2, r2, #5
   25774:	cmp	r4, r5
   25778:	orrhi	r2, r2, #1
   2577c:	cmp	r2, #0
   25780:	beq	25734 <crc32@@Base+0xb3d8>
   25784:	mvn	r0, #0
   25788:	pop	{r4, r5, pc}
   2578c:	add	r0, r0, #512	; 0x200
   25790:	pop	{r4, r5, lr}
   25794:	b	3359c <crc32@@Base+0x19240>
   25798:	add	r0, r0, #512	; 0x200
   2579c:	b	3359c <crc32@@Base+0x19240>
   257a0:	movw	r2, #51428	; 0xc8e4
   257a4:	movt	r2, #3
   257a8:	push	{r4, r5, r6, r7, r8, lr}
   257ac:	mov	r4, r0
   257b0:	mov	r7, r1
   257b4:	ldm	r2!, {r0, r1}
   257b8:	mov	ip, #64	; 0x40
   257bc:	mov	lr, #12
   257c0:	stm	r4, {ip, lr}
   257c4:	mov	r5, r3
   257c8:	ldrb	lr, [r2, #2]
   257cc:	movw	r3, #49345	; 0xc0c1
   257d0:	ldrh	r6, [r2]
   257d4:	movt	r3, #49344	; 0xc0c0
   257d8:	str	r0, [r4, #20]
   257dc:	mov	r2, #256	; 0x100
   257e0:	strb	lr, [r4, #30]
   257e4:	add	r0, r4, #32
   257e8:	str	r1, [r4, #24]
   257ec:	mov	r1, #255	; 0xff
   257f0:	strh	r6, [r4, #28]
   257f4:	mov	r6, #0
   257f8:	str	r3, [r4, #64]	; 0x40
   257fc:	str	r2, [r4, #68]	; 0x44
   25800:	mov	r2, #32
   25804:	str	r6, [r4, #72]	; 0x48
   25808:	bl	12388 <memset@plt>
   2580c:	ldr	r1, [r7, #44]	; 0x2c
   25810:	mov	r3, r6
   25814:	ldr	r2, [r5, #56]	; 0x38
   25818:	sub	r1, r1, #512	; 0x200
   2581c:	add	r0, r4, #512	; 0x200
   25820:	bl	336dc <crc32@@Base+0x19380>
   25824:	ldr	r0, [r5, #64]	; 0x40
   25828:	movw	r1, #51536	; 0xc950
   2582c:	mov	r2, #8
   25830:	movt	r1, #3
   25834:	bl	12220 <strncmp@plt>
   25838:	cmp	r0, #0
   2583c:	popne	{r4, r5, r6, r7, r8, pc}
   25840:	ldr	r2, [r7, #44]	; 0x2c
   25844:	movw	r3, #13528	; 0x34d8
   25848:	movt	r3, #6
   2584c:	mov	r1, #1
   25850:	add	r2, r2, #3
   25854:	str	r1, [r3]
   25858:	lsrs	r2, r2, #2
   2585c:	popeq	{r4, r5, r6, r7, r8, pc}
   25860:	add	r0, r0, #1
   25864:	ldr	r3, [r4]
   25868:	cmp	r2, r0
   2586c:	rev	r3, r3
   25870:	str	r3, [r4], #4
   25874:	bne	25860 <crc32@@Base+0xb504>
   25878:	pop	{r4, r5, r6, r7, r8, pc}
   2587c:	subs	r0, r0, #15
   25880:	movne	r0, #1
   25884:	bx	lr
   25888:	bx	lr
   2588c:	movw	r0, #51584	; 0xc980
   25890:	movt	r0, #3
   25894:	b	12310 <puts@plt>
   25898:	movw	r3, #3824	; 0xef0
   2589c:	movt	r3, #5
   258a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   258a4:	movw	r4, #6484	; 0x1954
   258a8:	ldr	r2, [r3]
   258ac:	sub	sp, sp, #44	; 0x2c
   258b0:	movt	r4, #5
   258b4:	movw	r1, #53956	; 0xd2c4
   258b8:	movt	r1, #3
   258bc:	str	r3, [sp, #12]
   258c0:	str	r0, [r4]
   258c4:	mov	r3, #0
   258c8:	str	r2, [sp, #36]	; 0x24
   258cc:	str	r3, [sp, #16]
   258d0:	str	r3, [sp, #28]
   258d4:	bl	123d0 <fopen@plt>
   258d8:	subs	sl, r0, #0
   258dc:	beq	25a18 <crc32@@Base+0xb6bc>
   258e0:	movw	fp, #29960	; 0x7508
   258e4:	movw	r6, #14052	; 0x36e4
   258e8:	movt	fp, #3
   258ec:	movt	r6, #6
   258f0:	mov	r3, sl
   258f4:	mov	r2, #10
   258f8:	add	r1, sp, #28
   258fc:	add	r0, sp, #16
   25900:	bl	121cc <__getdelim@plt>
   25904:	cmp	r0, #0
   25908:	ble	259c0 <crc32@@Base+0xb664>
   2590c:	ldr	r9, [r4, #4]
   25910:	add	r2, sp, #20
   25914:	mov	r1, fp
   25918:	ldr	r0, [sp, #16]
   2591c:	add	r9, r9, #1
   25920:	str	r9, [r4, #4]
   25924:	bl	122c8 <__strtok_r@plt>
   25928:	cmp	r0, #0
   2592c:	beq	258f0 <crc32@@Base+0xb594>
   25930:	movw	r7, #29964	; 0x750c
   25934:	movw	r8, #51648	; 0xc9c0
   25938:	movt	r7, #3
   2593c:	movt	r8, #3
   25940:	str	r0, [sp, #16]
   25944:	add	r2, sp, #24
   25948:	mov	r1, r7
   2594c:	bl	122c8 <__strtok_r@plt>
   25950:	subs	r5, r0, #0
   25954:	beq	258f0 <crc32@@Base+0xb594>
   25958:	ldrb	r3, [r5]
   2595c:	cmp	r3, #35	; 0x23
   25960:	beq	258f0 <crc32@@Base+0xb594>
   25964:	add	r2, sp, #32
   25968:	mov	r1, r8
   2596c:	bl	12760 <sscanf@plt>
   25970:	cmp	r0, #0
   25974:	beq	259f4 <crc32@@Base+0xb698>
   25978:	ldr	r0, [r4, #8]
   2597c:	mov	r3, #24
   25980:	ldr	ip, [r6]
   25984:	sub	r1, r0, #1
   25988:	ldr	r2, [sp, #32]
   2598c:	lsr	r2, r2, r3
   25990:	sub	r3, r3, #8
   25994:	cmn	r3, #8
   25998:	strb	r2, [r1, #1]!
   2599c:	bne	25988 <crc32@@Base+0xb62c>
   259a0:	mov	r3, #0
   259a4:	add	r0, r0, #4
   259a8:	add	ip, ip, #4
   259ac:	str	r0, [r4, #8]
   259b0:	str	ip, [r6]
   259b4:	mov	r0, r3
   259b8:	str	r3, [sp, #16]
   259bc:	b	25944 <crc32@@Base+0xb5e8>
   259c0:	ldr	r0, [sp, #16]
   259c4:	cmp	r0, #0
   259c8:	beq	259d0 <crc32@@Base+0xb674>
   259cc:	bl	121c0 <free@plt>
   259d0:	mov	r0, sl
   259d4:	bl	126b8 <fclose@plt>
   259d8:	ldr	r3, [sp, #12]
   259dc:	ldr	r2, [sp, #36]	; 0x24
   259e0:	ldr	r3, [r3]
   259e4:	cmp	r2, r3
   259e8:	bne	25a34 <crc32@@Base+0xb6d8>
   259ec:	add	sp, sp, #44	; 0x2c
   259f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   259f4:	ldr	r2, [r4]
   259f8:	mov	r3, r9
   259fc:	str	r5, [sp]
   25a00:	movw	r1, #51652	; 0xc9c4
   25a04:	mov	r0, #1
   25a08:	movt	r1, #3
   25a0c:	bl	1282c <__printf_chk@plt>
   25a10:	mov	r0, #1
   25a14:	bl	12298 <exit@plt>
   25a18:	ldr	r2, [r4]
   25a1c:	movw	r1, #51624	; 0xc9a8
   25a20:	mov	r0, #1
   25a24:	movt	r1, #3
   25a28:	bl	1282c <__printf_chk@plt>
   25a2c:	mov	r0, #1
   25a30:	bl	12298 <exit@plt>
   25a34:	bl	12538 <__stack_chk_fail@plt>
   25a38:	push	{r4, r5, r6, r7, lr}
   25a3c:	movw	r5, #3824	; 0xef0
   25a40:	movt	r5, #5
   25a44:	sub	sp, sp, #100	; 0x64
   25a48:	subs	r6, r0, #0
   25a4c:	ldr	r3, [r5]
   25a50:	str	r3, [sp, #92]	; 0x5c
   25a54:	beq	25b50 <crc32@@Base+0xb7f4>
   25a58:	ldr	r0, [r6, #72]	; 0x48
   25a5c:	cmp	r0, #0
   25a60:	movweq	r4, #14052	; 0x36e4
   25a64:	movteq	r4, #6
   25a68:	beq	25ac0 <crc32@@Base+0xb764>
   25a6c:	movw	r1, #53956	; 0xd2c4
   25a70:	movt	r1, #3
   25a74:	bl	123d0 <fopen@plt>
   25a78:	subs	r7, r0, #0
   25a7c:	beq	25b9c <crc32@@Base+0xb840>
   25a80:	bl	1252c <fileno@plt>
   25a84:	mov	r2, sp
   25a88:	mov	r1, r0
   25a8c:	mov	r0, #3
   25a90:	bl	12610 <__fxstat@plt>
   25a94:	cmn	r0, #1
   25a98:	beq	25bb8 <crc32@@Base+0xb85c>
   25a9c:	ldr	r2, [sp, #44]	; 0x2c
   25aa0:	movw	r4, #14052	; 0x36e4
   25aa4:	movt	r4, #6
   25aa8:	mov	r0, r7
   25aac:	adds	r3, r2, #63	; 0x3f
   25ab0:	addmi	r3, r2, #126	; 0x7e
   25ab4:	bic	r3, r3, #63	; 0x3f
   25ab8:	str	r3, [r4, #4]
   25abc:	bl	126b8 <fclose@plt>
   25ac0:	ldr	r2, [r6, #40]	; 0x28
   25ac4:	cmp	r2, #2
   25ac8:	beq	25b00 <crc32@@Base+0xb7a4>
   25acc:	cmp	r2, #7
   25ad0:	beq	25b58 <crc32@@Base+0xb7fc>
   25ad4:	ldr	r3, [r4, #20]
   25ad8:	movw	r2, #6484	; 0x1954
   25adc:	movt	r2, #5
   25ae0:	mov	r0, #0
   25ae4:	str	r3, [r2, #12]
   25ae8:	ldr	r2, [sp, #92]	; 0x5c
   25aec:	ldr	r3, [r5]
   25af0:	cmp	r2, r3
   25af4:	bne	25b98 <crc32@@Base+0xb83c>
   25af8:	add	sp, sp, #100	; 0x64
   25afc:	pop	{r4, r5, r6, r7, pc}
   25b00:	ldr	r3, [r6, #56]	; 0x38
   25b04:	mov	r1, #0
   25b08:	ldr	r0, [r4, #4]
   25b0c:	movt	r1, #2401	; 0x961
   25b10:	bic	r3, r3, #-16777216	; 0xff000000
   25b14:	str	r2, [r4, #8]
   25b18:	orr	r3, r3, #-2130706432	; 0x81000000
   25b1c:	str	r1, [r4, #24]
   25b20:	add	r3, r3, r0
   25b24:	mov	r2, #192	; 0xc0
   25b28:	mov	r1, #97	; 0x61
   25b2c:	movt	r2, #2401	; 0x961
   25b30:	str	r3, [r4, #20]
   25b34:	str	r2, [r4, #32]
   25b38:	mov	r2, #0
   25b3c:	str	r1, [r4, #12]
   25b40:	str	r2, [r4, #16]
   25b44:	str	r2, [r4, #28]
   25b48:	str	r2, [r4, #36]	; 0x24
   25b4c:	b	25ad8 <crc32@@Base+0xb77c>
   25b50:	mov	r0, #1
   25b54:	b	25ae8 <crc32@@Base+0xb78c>
   25b58:	mov	r1, #-2113929216	; 0x82000000
   25b5c:	str	r2, [r4, #8]
   25b60:	mov	r3, r1
   25b64:	movw	r2, #32960	; 0x80c0
   25b68:	str	r1, [r4, #20]
   25b6c:	movt	r2, #2323	; 0x913
   25b70:	mov	r0, #19
   25b74:	str	r2, [r4, #24]
   25b78:	str	r2, [r4, #32]
   25b7c:	mov	r1, #128	; 0x80
   25b80:	mov	r2, #0
   25b84:	str	r0, [r4, #12]
   25b88:	str	r1, [r4, #16]
   25b8c:	str	r2, [r4, #28]
   25b90:	str	r2, [r4, #36]	; 0x24
   25b94:	b	25ad8 <crc32@@Base+0xb77c>
   25b98:	bl	12538 <__stack_chk_fail@plt>
   25b9c:	ldr	r2, [r6, #72]	; 0x48
   25ba0:	movw	r1, #51692	; 0xc9ec
   25ba4:	mov	r0, #1
   25ba8:	movt	r1, #3
   25bac:	bl	1282c <__printf_chk@plt>
   25bb0:	mov	r0, #1
   25bb4:	bl	12298 <exit@plt>
   25bb8:	bl	12748 <__errno_location@plt>
   25bbc:	ldr	r0, [r0]
   25bc0:	bl	122a4 <strerror@plt>
   25bc4:	movw	r1, #51716	; 0xca04
   25bc8:	movt	r1, #3
   25bcc:	mov	r2, r0
   25bd0:	mov	r0, #1
   25bd4:	bl	1282c <__printf_chk@plt>
   25bd8:	mov	r0, #1
   25bdc:	bl	12298 <exit@plt>
   25be0:	movw	r3, #3824	; 0xef0
   25be4:	movt	r3, #5
   25be8:	ldr	ip, [r0]
   25bec:	movw	r2, #21930	; 0x55aa
   25bf0:	ldr	r1, [r3]
   25bf4:	movt	r2, #21930	; 0x55aa
   25bf8:	push	{lr}		; (str lr, [sp, #-4]!)
   25bfc:	cmp	ip, r2
   25c00:	sub	sp, sp, #12
   25c04:	str	r2, [sp]
   25c08:	str	r1, [sp, #4]
   25c0c:	bne	25c44 <crc32@@Base+0xb8e8>
   25c10:	ldr	r1, [r0, #4]
   25c14:	movw	r2, #3585	; 0xe01
   25c18:	movt	r2, #1
   25c1c:	str	r2, [sp]
   25c20:	cmp	r1, r2
   25c24:	bne	25c44 <crc32@@Base+0xb8e8>
   25c28:	mov	r0, #0
   25c2c:	ldr	r2, [sp, #4]
   25c30:	ldr	r3, [r3]
   25c34:	cmp	r2, r3
   25c38:	bne	25c4c <crc32@@Base+0xb8f0>
   25c3c:	add	sp, sp, #12
   25c40:	pop	{pc}		; (ldr pc, [sp], #4)
   25c44:	mvn	r0, #10
   25c48:	b	25c2c <crc32@@Base+0xb8d0>
   25c4c:	bl	12538 <__stack_chk_fail@plt>
   25c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c54:	movw	r7, #3824	; 0xef0
   25c58:	movt	r7, #5
   25c5c:	sub	sp, sp, #20
   25c60:	mov	r8, r1
   25c64:	mov	r9, r0
   25c68:	ldr	r3, [r7]
   25c6c:	ldr	r0, [r1, #64]	; 0x40
   25c70:	str	r3, [sp, #12]
   25c74:	bl	25898 <crc32@@Base+0xb53c>
   25c78:	ldr	r0, [r8, #68]	; 0x44
   25c7c:	ldrb	r3, [r0]
   25c80:	cmp	r3, #0
   25c84:	bne	25e84 <crc32@@Base+0xbb28>
   25c88:	ldr	r0, [r8, #72]	; 0x48
   25c8c:	cmp	r0, #0
   25c90:	beq	25e94 <crc32@@Base+0xbb38>
   25c94:	movw	r1, #53956	; 0xd2c4
   25c98:	movt	r1, #3
   25c9c:	bl	123d0 <fopen@plt>
   25ca0:	subs	r6, r0, #0
   25ca4:	beq	25ea8 <crc32@@Base+0xbb4c>
   25ca8:	movw	r4, #14052	; 0x36e4
   25cac:	movt	r4, #6
   25cb0:	movw	sl, #6484	; 0x1954
   25cb4:	movt	sl, #5
   25cb8:	ldr	r2, [r4, #20]
   25cbc:	ldr	r3, [r4, #4]
   25cc0:	sub	r3, r2, r3
   25cc4:	str	r3, [sl, #12]
   25cc8:	cmp	r3, r2
   25ccc:	bcs	25d64 <crc32@@Base+0xba08>
   25cd0:	ldr	r2, [sl, #8]
   25cd4:	mov	fp, #255	; 0xff
   25cd8:	ldr	r1, [r4]
   25cdc:	lsr	r0, r3, #24
   25ce0:	mov	r5, #64	; 0x40
   25ce4:	add	r2, r2, #4
   25ce8:	strb	r3, [r2, #-1]
   25cec:	add	r1, r1, #4
   25cf0:	strb	r0, [r2, #-4]
   25cf4:	lsr	r0, r3, #16
   25cf8:	str	r1, [r4]
   25cfc:	lsr	r1, r3, #8
   25d00:	strb	r0, [r2, #-3]
   25d04:	add	r3, r3, r5
   25d08:	strb	r1, [r2, #-2]
   25d0c:	strd	r2, [sl, #8]
   25d10:	mov	r0, r6
   25d14:	bl	12250 <fgetc@plt>
   25d18:	cmn	r0, #1
   25d1c:	uxtbne	fp, r0
   25d20:	bne	25d30 <crc32@@Base+0xb9d4>
   25d24:	ldr	r3, [r4, #8]
   25d28:	cmp	r3, #2
   25d2c:	moveq	fp, #255	; 0xff
   25d30:	ldr	r2, [sl, #8]
   25d34:	subs	r5, r5, #1
   25d38:	ldr	r3, [r4]
   25d3c:	add	r1, r2, #1
   25d40:	str	r1, [sl, #8]
   25d44:	add	r3, r3, #1
   25d48:	strb	fp, [r2]
   25d4c:	str	r3, [r4]
   25d50:	bne	25d10 <crc32@@Base+0xb9b4>
   25d54:	ldr	r3, [sl, #12]
   25d58:	ldr	r2, [r4, #20]
   25d5c:	cmp	r3, r2
   25d60:	bcc	25cd0 <crc32@@Base+0xb974>
   25d64:	mov	r0, r6
   25d68:	bl	126b8 <fclose@plt>
   25d6c:	ldr	r2, [pc, #404]	; 25f08 <crc32@@Base+0xbbac>
   25d70:	add	r0, r2, #16
   25d74:	ldr	r3, [r2]
   25d78:	lsr	r1, r3, #24
   25d7c:	strb	r3, [sp, #11]
   25d80:	strb	r1, [sp, #8]
   25d84:	lsr	r1, r3, #16
   25d88:	lsr	r3, r3, #8
   25d8c:	strb	r1, [sp, #9]
   25d90:	strb	r3, [sp, #10]
   25d94:	ldr	r3, [sp, #8]
   25d98:	str	r3, [r2], #4
   25d9c:	cmp	r0, r2
   25da0:	bne	25d74 <crc32@@Base+0xba18>
   25da4:	ldr	ip, [sl, #8]
   25da8:	ldr	lr, [r4]
   25dac:	ldr	r3, [pc, #340]	; 25f08 <crc32@@Base+0xbbac>
   25db0:	sub	r2, ip, #1
   25db4:	ldrb	r1, [r3], #1
   25db8:	cmp	r3, r0
   25dbc:	strb	r1, [r2, #1]!
   25dc0:	bne	25db4 <crc32@@Base+0xba58>
   25dc4:	ldr	r2, [r4, #12]
   25dc8:	add	lr, lr, #20
   25dcc:	ldr	r1, [r4, #16]
   25dd0:	mov	r0, #8
   25dd4:	strb	r0, [ip, #16]
   25dd8:	mov	r0, #0
   25ddc:	strb	r2, [ip, #17]
   25de0:	mov	r2, lr
   25de4:	strb	r1, [ip, #18]
   25de8:	mov	r1, #64	; 0x40
   25dec:	strb	r1, [ip, #19]
   25df0:	movw	r1, #14164	; 0x3754
   25df4:	movt	r1, #6
   25df8:	str	lr, [r4]
   25dfc:	add	ip, ip, #20
   25e00:	str	ip, [sl, #8]
   25e04:	bl	25f0c <crc32@@Base+0xbbb0>
   25e08:	ldr	r3, [sl, #8]
   25e0c:	ldr	r5, [r4]
   25e10:	mov	r2, #0
   25e14:	add	r3, r3, #4
   25e18:	add	r5, r5, #4
   25e1c:	str	r5, [r4]
   25e20:	mov	r1, r0
   25e24:	mov	r0, r9
   25e28:	strb	r1, [r3, #-1]
   25e2c:	lsr	ip, r1, #24
   25e30:	strb	ip, [r3, #-4]
   25e34:	lsr	ip, r1, #16
   25e38:	lsr	r1, r1, #8
   25e3c:	strb	ip, [r3, #-3]
   25e40:	strb	r1, [r3, #-2]
   25e44:	mov	r1, r2
   25e48:	str	r3, [sl, #8]
   25e4c:	bl	12598 <lseek@plt>
   25e50:	mov	r2, r5
   25e54:	mov	r0, r9
   25e58:	movw	r1, #14164	; 0x3754
   25e5c:	movt	r1, #6
   25e60:	bl	126c4 <write@plt>
   25e64:	cmp	r0, r5
   25e68:	bne	25ec8 <crc32@@Base+0xbb6c>
   25e6c:	ldr	r2, [sp, #12]
   25e70:	ldr	r3, [r7]
   25e74:	cmp	r2, r3
   25e78:	bne	25ec4 <crc32@@Base+0xbb68>
   25e7c:	add	sp, sp, #20
   25e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e84:	bl	25898 <crc32@@Base+0xb53c>
   25e88:	ldr	r0, [r8, #72]	; 0x48
   25e8c:	cmp	r0, #0
   25e90:	bne	25c94 <crc32@@Base+0xb938>
   25e94:	movw	r4, #14052	; 0x36e4
   25e98:	movw	sl, #6484	; 0x1954
   25e9c:	movt	r4, #6
   25ea0:	movt	sl, #5
   25ea4:	b	25d6c <crc32@@Base+0xba10>
   25ea8:	ldr	r2, [r8, #72]	; 0x48
   25eac:	movw	r1, #51692	; 0xc9ec
   25eb0:	mov	r0, #1
   25eb4:	movt	r1, #3
   25eb8:	bl	1282c <__printf_chk@plt>
   25ebc:	mov	r0, #1
   25ec0:	bl	12298 <exit@plt>
   25ec4:	bl	12538 <__stack_chk_fail@plt>
   25ec8:	movw	r2, #7868	; 0x1ebc
   25ecc:	movt	r2, #5
   25ed0:	ldr	r5, [r8, #76]	; 0x4c
   25ed4:	ldr	r4, [r2]
   25ed8:	bl	12748 <__errno_location@plt>
   25edc:	ldr	r0, [r0]
   25ee0:	bl	122a4 <strerror@plt>
   25ee4:	mov	r3, r5
   25ee8:	movw	r2, #61988	; 0xf224
   25eec:	mov	r1, #1
   25ef0:	movt	r2, #3
   25ef4:	str	r0, [sp]
   25ef8:	mov	r0, r4
   25efc:	bl	12358 <__fprintf_chk@plt>
   25f00:	mov	r0, #1
   25f04:	bl	12298 <exit@plt>
   25f08:	strdeq	r3, [r6], -ip
   25f0c:	push	{r4, r5, r6, r7, r8, lr}
   25f10:	movw	r8, #31124	; 0x7994
   25f14:	movt	r8, #21
   25f18:	ldr	r4, [r8]
   25f1c:	cmp	r4, #0
   25f20:	bne	25f6c <crc32@@Base+0xbc10>
   25f24:	movw	r6, #7607	; 0x1db7
   25f28:	add	r7, r8, #1024	; 0x400
   25f2c:	movt	r6, #1217	; 0x4c1
   25f30:	mov	r5, r8
   25f34:	mov	r3, r4
   25f38:	mov	ip, #8
   25f3c:	cmp	r3, #0
   25f40:	mov	lr, r3
   25f44:	lsl	r3, r3, #1
   25f48:	eorlt	r3, r3, r6
   25f4c:	subs	ip, ip, #1
   25f50:	bne	25f3c <crc32@@Base+0xbbe0>
   25f54:	str	r3, [r5, #4]!
   25f58:	cmp	r5, r7
   25f5c:	add	r4, r4, #16777216	; 0x1000000
   25f60:	bne	25f34 <crc32@@Base+0xbbd8>
   25f64:	mov	r3, #1
   25f68:	str	r3, [r8]
   25f6c:	cmp	r2, #0
   25f70:	mvn	r0, r0
   25f74:	popeq	{r4, r5, r6, r7, r8, pc}
   25f78:	add	r2, r1, r2
   25f7c:	ldrb	r3, [r1], #1
   25f80:	eor	r3, r3, r0, lsr #24
   25f84:	cmp	r1, r2
   25f88:	add	r3, r8, r3, lsl #2
   25f8c:	ldr	r3, [r3, #4]
   25f90:	eor	r0, r3, r0, lsl #8
   25f94:	bne	25f7c <crc32@@Base+0xbc20>
   25f98:	pop	{r4, r5, r6, r7, r8, pc}
   25f9c:	subs	r0, r0, #30
   25fa0:	movne	r0, #1
   25fa4:	bx	lr
   25fa8:	push	{r4, r5, r6, r7, r8, lr}
   25fac:	lsr	r2, r0, #3
   25fb0:	lsr	r5, r0, #2
   25fb4:	lsr	lr, r0, #5
   25fb8:	lsr	r7, r0, #1
   25fbc:	lsr	r4, r0, #4
   25fc0:	eor	r3, r5, r2
   25fc4:	lsr	r1, r0, #7
   25fc8:	eor	r2, r2, r4
   25fcc:	and	ip, r0, #1
   25fd0:	eor	r3, r3, lr
   25fd4:	eor	r4, r4, lr
   25fd8:	eor	lr, lr, r7
   25fdc:	lsr	r6, r0, #6
   25fe0:	eor	ip, ip, r1
   25fe4:	and	r8, r2, #1
   25fe8:	and	lr, lr, #1
   25fec:	eor	r8, r8, ip
   25ff0:	eor	r3, r3, r6
   25ff4:	and	r4, r4, #1
   25ff8:	eor	r0, r0, r2
   25ffc:	eor	ip, ip, lr
   26000:	eor	r2, r7, r5
   26004:	and	lr, r6, #1
   26008:	eor	r0, r0, r6
   2600c:	eor	ip, ip, lr
   26010:	eor	r1, r1, r4
   26014:	and	lr, r2, #1
   26018:	and	r3, r3, #1
   2601c:	eor	r2, r2, r0
   26020:	orr	r3, r3, r8, lsl #3
   26024:	eor	r1, r1, lr
   26028:	orr	r3, r3, ip, lsl #2
   2602c:	and	r0, r2, #1
   26030:	orr	r3, r3, r1, lsl #1
   26034:	orr	r0, r3, r0, lsl #4
   26038:	pop	{r4, r5, r6, r7, r8, pc}
   2603c:	push	{r4, r5, r6, r7, r8, lr}
   26040:	mov	r2, #216	; 0xd8
   26044:	mov	r1, #0
   26048:	mov	r7, r0
   2604c:	bl	12388 <memset@plt>
   26050:	add	r5, r7, #508	; 0x1fc
   26054:	mov	r2, #288	; 0x120
   26058:	mov	r1, #255	; 0xff
   2605c:	add	r0, r7, #224	; 0xe0
   26060:	add	r5, r5, #3
   26064:	bl	12388 <memset@plt>
   26068:	mov	r2, #512	; 0x200
   2606c:	mov	r1, #255	; 0xff
   26070:	add	r0, r7, #512	; 0x200
   26074:	bl	12388 <memset@plt>
   26078:	sub	r4, r7, #1
   2607c:	mov	r2, #261120	; 0x3fc00
   26080:	mov	r1, #255	; 0xff
   26084:	add	r0, r7, #1024	; 0x400
   26088:	mov	r6, r5
   2608c:	bl	12388 <memset@plt>
   26090:	mov	r2, #1024	; 0x400
   26094:	mov	r1, #0
   26098:	add	r0, r7, #262144	; 0x40000
   2609c:	bl	12388 <memset@plt>
   260a0:	mov	r0, #2112	; 0x840
   260a4:	mov	r1, #64	; 0x40
   260a8:	mov	r2, #2048	; 0x800
   260ac:	strd	r0, [r7, #24]
   260b0:	movw	r3, #16928	; 0x4220
   260b4:	mov	r0, #0
   260b8:	movt	r3, #17987	; 0x4643
   260bc:	mov	r1, #8
   260c0:	str	r3, [r7, #4]
   260c4:	strd	r0, [r7, #216]	; 0xd8
   260c8:	mov	r3, #6
   260cc:	str	r2, [r7, #20]
   260d0:	str	r3, [r7, #56]	; 0x38
   260d4:	mov	r3, #65280	; 0xff00
   260d8:	str	r2, [r7, #132]	; 0x84
   260dc:	movt	r3, #1
   260e0:	str	r3, [r7, #120]	; 0x78
   260e4:	mov	r3, #1
   260e8:	str	r3, [r7, #8]
   260ec:	str	r3, [r7, #172]	; 0xac
   260f0:	mov	r3, #128	; 0x80
   260f4:	str	r3, [r7, #104]	; 0x68
   260f8:	str	r3, [r7, #108]	; 0x6c
   260fc:	ldrb	r0, [r4, #1]!
   26100:	bl	25fa8 <crc32@@Base+0xbc4c>
   26104:	cmp	r4, r6
   26108:	strb	r0, [r5, #1]!
   2610c:	bne	260fc <crc32@@Base+0xbda0>
   26110:	pop	{r4, r5, r6, r7, r8, pc}
   26114:	push	{r4, r5, r6, lr}
   26118:	movw	r6, #51812	; 0xca64
   2611c:	sub	r5, r0, #4
   26120:	movt	r6, #3
   26124:	mov	r4, #0
   26128:	mov	r2, r4
   2612c:	ldr	r3, [r5, #4]!
   26130:	mov	r1, r6
   26134:	add	r4, r4, #1
   26138:	mov	r0, #1
   2613c:	bl	1282c <__printf_chk@plt>
   26140:	cmp	r4, #56	; 0x38
   26144:	bne	26128 <crc32@@Base+0xbdcc>
   26148:	pop	{r4, r5, r6, pc}
   2614c:	ldr	r2, [r0, #4]
   26150:	movw	r3, #16928	; 0x4220
   26154:	movt	r3, #17987	; 0x4643
   26158:	cmp	r2, r3
   2615c:	bne	261f8 <crc32@@Base+0xbe9c>
   26160:	ldr	r3, [r0, #8]
   26164:	cmp	r3, #1
   26168:	bne	261f8 <crc32@@Base+0xbe9c>
   2616c:	ldr	r3, [r0, #28]
   26170:	cmp	r3, #64	; 0x40
   26174:	bne	261f8 <crc32@@Base+0xbe9c>
   26178:	ldr	r3, [r0, #56]	; 0x38
   2617c:	cmp	r3, #6
   26180:	bne	261f8 <crc32@@Base+0xbe9c>
   26184:	ldr	r2, [r0, #120]	; 0x78
   26188:	mov	r3, #65280	; 0xff00
   2618c:	movt	r3, #1
   26190:	cmp	r2, r3
   26194:	bne	261f8 <crc32@@Base+0xbe9c>
   26198:	ldr	r3, [r0, #172]	; 0xac
   2619c:	cmp	r3, #1
   261a0:	bne	261f8 <crc32@@Base+0xbe9c>
   261a4:	ldr	r3, [r0, #216]	; 0xd8
   261a8:	cmp	r3, #0
   261ac:	bne	261f8 <crc32@@Base+0xbe9c>
   261b0:	ldr	r3, [r0, #220]	; 0xdc
   261b4:	cmp	r3, #8
   261b8:	bne	261f8 <crc32@@Base+0xbe9c>
   261bc:	push	{r4, r5, r6, lr}
   261c0:	add	r5, r0, #508	; 0x1fc
   261c4:	add	r5, r5, #3
   261c8:	sub	r4, r0, #1
   261cc:	mov	r6, r5
   261d0:	b	261dc <crc32@@Base+0xbe80>
   261d4:	cmp	r4, r6
   261d8:	beq	26200 <crc32@@Base+0xbea4>
   261dc:	ldrb	r0, [r4, #1]!
   261e0:	bl	25fa8 <crc32@@Base+0xbc4c>
   261e4:	ldrb	r3, [r5, #1]!
   261e8:	cmp	r3, r0
   261ec:	beq	261d4 <crc32@@Base+0xbe78>
   261f0:	mvn	r0, #0
   261f4:	pop	{r4, r5, r6, pc}
   261f8:	mvn	r0, #0
   261fc:	bx	lr
   26200:	mov	r0, #0
   26204:	pop	{r4, r5, r6, pc}
   26208:	subs	r0, r0, #34	; 0x22
   2620c:	movne	r0, #1
   26210:	bx	lr
   26214:	cmp	r0, #0
   26218:	beq	26240 <crc32@@Base+0xbee4>
   2621c:	mov	r2, #1
   26220:	movw	ip, #21587	; 0x5453
   26224:	strb	r2, [r0, #74]	; 0x4a
   26228:	movt	ip, #12877	; 0x324d
   2622c:	str	r2, [r0, #100]	; 0x64
   26230:	str	ip, [r0]
   26234:	mov	ip, #0
   26238:	str	r2, [r0, #104]	; 0x68
   2623c:	str	ip, [r0, #252]	; 0xfc
   26240:	ldr	r1, [r1, #44]	; 0x2c
   26244:	ldr	ip, [r3, #56]	; 0x38
   26248:	ldr	r2, [r3, #60]	; 0x3c
   2624c:	cmp	r1, #255	; 0xff
   26250:	sub	r3, r1, #256	; 0x100
   26254:	str	r3, [r0, #76]	; 0x4c
   26258:	str	ip, [r0, #88]	; 0x58
   2625c:	movls	r3, #0
   26260:	str	r2, [r0, #80]	; 0x50
   26264:	bls	2628c <crc32@@Base+0xbf30>
   26268:	cmp	r3, #0
   2626c:	add	r2, r0, #256	; 0x100
   26270:	beq	2628c <crc32@@Base+0xbf30>
   26274:	add	r1, r0, r1
   26278:	mov	r3, #0
   2627c:	ldrb	ip, [r2], #1
   26280:	cmp	r1, r2
   26284:	add	r3, r3, ip
   26288:	bne	2627c <crc32@@Base+0xbf20>
   2628c:	str	r3, [r0, #68]	; 0x44
   26290:	bx	lr
   26294:	push	{r4, lr}
   26298:	movw	r1, #51836	; 0xca7c
   2629c:	mov	r4, r0
   262a0:	ldrb	r3, [r0, #73]	; 0x49
   262a4:	ldrb	r2, [r0, #74]	; 0x4a
   262a8:	movt	r1, #3
   262ac:	mov	r0, #1
   262b0:	bl	1282c <__printf_chk@plt>
   262b4:	ldr	r2, [r4, #76]	; 0x4c
   262b8:	movw	r1, #51884	; 0xcaac
   262bc:	mov	r0, #1
   262c0:	movt	r1, #3
   262c4:	bl	1282c <__printf_chk@plt>
   262c8:	ldr	r2, [r4, #88]	; 0x58
   262cc:	movw	r1, #51912	; 0xcac8
   262d0:	mov	r0, #1
   262d4:	movt	r1, #3
   262d8:	bl	1282c <__printf_chk@plt>
   262dc:	ldr	r2, [r4, #80]	; 0x50
   262e0:	movw	r1, #51936	; 0xcae0
   262e4:	mov	r0, #1
   262e8:	movt	r1, #3
   262ec:	bl	1282c <__printf_chk@plt>
   262f0:	ldr	r2, [r4, #68]	; 0x44
   262f4:	movw	r1, #51960	; 0xcaf8
   262f8:	mov	r0, #1
   262fc:	movt	r1, #3
   26300:	bl	1282c <__printf_chk@plt>
   26304:	ldr	r2, [r4, #100]	; 0x64
   26308:	movw	r1, #51984	; 0xcb10
   2630c:	mov	r0, #1
   26310:	movt	r1, #3
   26314:	bl	1282c <__printf_chk@plt>
   26318:	ldr	r2, [r4, #252]	; 0xfc
   2631c:	movw	r1, #52008	; 0xcb28
   26320:	mov	r0, #1
   26324:	movt	r1, #3
   26328:	pop	{r4, lr}
   2632c:	b	1282c <__printf_chk@plt>
   26330:	cmp	r1, #255	; 0xff
   26334:	bls	2639c <crc32@@Base+0xc040>
   26338:	ldr	r2, [r0]
   2633c:	movw	r3, #21587	; 0x5453
   26340:	movt	r3, #12877	; 0x324d
   26344:	cmp	r2, r3
   26348:	bne	2639c <crc32@@Base+0xc040>
   2634c:	ldrb	r3, [r0, #74]	; 0x4a
   26350:	cmp	r3, #1
   26354:	bne	2639c <crc32@@Base+0xc040>
   26358:	ldr	r3, [r0, #84]	; 0x54
   2635c:	cmp	r3, #0
   26360:	bne	2639c <crc32@@Base+0xc040>
   26364:	ldr	r3, [r0, #92]	; 0x5c
   26368:	cmp	r3, #0
   2636c:	bne	2639c <crc32@@Base+0xc040>
   26370:	ldr	r3, [r0, #172]	; 0xac
   26374:	cmp	r3, #0
   26378:	bne	2639c <crc32@@Base+0xc040>
   2637c:	add	r3, r0, #172	; 0xac
   26380:	add	r2, r0, #248	; 0xf8
   26384:	b	26390 <crc32@@Base+0xc034>
   26388:	cmp	r3, r2
   2638c:	bxeq	lr
   26390:	ldr	r0, [r3, #4]!
   26394:	cmp	r0, #0
   26398:	beq	26388 <crc32@@Base+0xc02c>
   2639c:	mvn	r0, #0
   263a0:	bx	lr
   263a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   263a8:	movw	r5, #3824	; 0xef0
   263ac:	movt	r5, #5
   263b0:	sub	sp, sp, #524	; 0x20c
   263b4:	add	lr, sp, #260	; 0x104
   263b8:	add	ip, sp, #3
   263bc:	ldr	r4, [r5]
   263c0:	add	r8, sp, #516	; 0x204
   263c4:	mov	r7, ip
   263c8:	mov	r3, lr
   263cc:	mov	r6, #0
   263d0:	str	r4, [sp, #516]	; 0x204
   263d4:	and	r4, r6, #15
   263d8:	sub	r9, r3, lr
   263dc:	add	r6, r4, #1
   263e0:	strb	r9, [r7, #1]!
   263e4:	ldrb	r4, [r2, r4]
   263e8:	strb	r4, [r3], #1
   263ec:	cmp	r3, r8
   263f0:	bne	263d4 <crc32@@Base+0xc078>
   263f4:	add	r3, sp, #4
   263f8:	sub	r2, lr, #1
   263fc:	add	r7, r3, #255	; 0xff
   26400:	mov	r3, #0
   26404:	ldrb	r4, [ip, #1]!
   26408:	ldrb	lr, [r2, #1]!
   2640c:	add	r3, r3, r4
   26410:	cmp	r7, ip
   26414:	add	r3, r3, lr
   26418:	add	lr, sp, #520	; 0x208
   2641c:	uxtb	r3, r3
   26420:	add	lr, lr, r3
   26424:	uxth	r3, r3
   26428:	ldrb	r6, [lr, #-516]	; 0xfffffdfc
   2642c:	strb	r6, [ip]
   26430:	strb	r4, [lr, #-516]	; 0xfffffdfc
   26434:	bne	26404 <crc32@@Base+0xc0a8>
   26438:	cmp	r1, #0
   2643c:	beq	264b0 <crc32@@Base+0xc154>
   26440:	add	r1, r0, r1
   26444:	sub	r0, r0, #1
   26448:	sub	r4, r1, #1
   2644c:	mov	r1, #0
   26450:	mov	r2, r1
   26454:	add	r3, r2, #1
   26458:	add	r2, sp, #520	; 0x208
   2645c:	add	lr, sp, #520	; 0x208
   26460:	ldrb	r6, [r0, #1]!
   26464:	uxtb	r3, r3
   26468:	add	ip, r2, r3
   2646c:	cmp	r4, r0
   26470:	uxth	r2, r3
   26474:	ldrb	r3, [ip, #-516]	; 0xfffffdfc
   26478:	add	r1, r1, r3
   2647c:	uxtb	r1, r1
   26480:	add	lr, lr, r1
   26484:	ldrb	r7, [lr, #-516]	; 0xfffffdfc
   26488:	strb	r7, [ip, #-516]	; 0xfffffdfc
   2648c:	strb	r3, [lr, #-516]	; 0xfffffdfc
   26490:	ldrb	ip, [ip, #-516]	; 0xfffffdfc
   26494:	add	r3, r3, ip
   26498:	add	ip, sp, #520	; 0x208
   2649c:	uxtab	r3, ip, r3
   264a0:	ldrb	r3, [r3, #-516]	; 0xfffffdfc
   264a4:	eor	r3, r3, r6
   264a8:	strb	r3, [r0]
   264ac:	bne	26454 <crc32@@Base+0xc0f8>
   264b0:	ldr	r2, [sp, #516]	; 0x204
   264b4:	ldr	r3, [r5]
   264b8:	cmp	r2, r3
   264bc:	bne	264c8 <crc32@@Base+0xc16c>
   264c0:	add	sp, sp, #524	; 0x20c
   264c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   264c8:	bl	12538 <__stack_chk_fail@plt>
   264cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   264d0:	mov	r5, r1
   264d4:	mov	r6, r0
   264d8:	mov	r1, r0
   264dc:	mov	r4, r2
   264e0:	mov	r7, #0
   264e4:	mov	r0, r5
   264e8:	str	r7, [r2]
   264ec:	mov	r2, #512	; 0x200
   264f0:	bl	12658 <memcpy@plt>
   264f4:	mov	r0, r5
   264f8:	movw	r2, #6632	; 0x19e8
   264fc:	mov	r1, #512	; 0x200
   26500:	movt	r2, #5
   26504:	bl	263a4 <crc32@@Base+0xc048>
   26508:	ldr	r3, [r5]
   2650c:	movw	r2, #43605	; 0xaa55
   26510:	movt	r2, #4080	; 0xff0
   26514:	cmp	r3, r2
   26518:	bne	26624 <crc32@@Base+0xc2c8>
   2651c:	ldr	r3, [r5, #8]
   26520:	cmp	r3, r7
   26524:	beq	2662c <crc32@@Base+0xc2d0>
   26528:	ldrh	r0, [r5, #12]
   2652c:	mov	r2, #61440	; 0xf000
   26530:	ldr	r8, [pc, #252]	; 26634 <crc32@@Base+0xc2d8>
   26534:	movt	r2, #65535	; 0xffff
   26538:	mov	r3, r7
   2653c:	lsl	r1, r0, #9
   26540:	and	r0, r2, r0, lsl #10
   26544:	add	r7, r6, r1
   26548:	ubfx	r1, r1, #0, #11
   2654c:	orr	r0, r0, r1
   26550:	mov	lr, r8
   26554:	ldrb	r5, [r7]
   26558:	add	r0, r6, r0
   2655c:	b	26578 <crc32@@Base+0xc21c>
   26560:	ldrb	ip, [r0]
   26564:	cmp	ip, r1
   26568:	beq	265d4 <crc32@@Base+0xc278>
   2656c:	add	r3, r3, #1
   26570:	cmp	r3, #9
   26574:	beq	2661c <crc32@@Base+0xc2c0>
   26578:	ldr	r2, [lr, #4]
   2657c:	add	lr, lr, #16
   26580:	ldrb	r1, [r2]
   26584:	cmp	r5, r1
   26588:	bne	26560 <crc32@@Base+0xc204>
   2658c:	ldrb	r6, [r7, #1]
   26590:	add	sl, r7, #1
   26594:	ldrb	ip, [r2, #1]
   26598:	add	r9, r2, #1
   2659c:	cmp	r6, ip
   265a0:	bne	26560 <crc32@@Base+0xc204>
   265a4:	ldrb	r6, [sl, #1]!
   265a8:	ldrb	ip, [r9, #1]!
   265ac:	cmp	r6, ip
   265b0:	bne	26560 <crc32@@Base+0xc204>
   265b4:	ldrb	r6, [sl, #1]
   265b8:	ldrb	ip, [r9, #1]
   265bc:	cmp	r6, ip
   265c0:	bne	26560 <crc32@@Base+0xc204>
   265c4:	add	r3, r8, r3, lsl #4
   265c8:	mov	r0, #24
   265cc:	str	r3, [r4]
   265d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   265d4:	ldrb	r1, [r0, #1]
   265d8:	add	ip, r2, #1
   265dc:	ldrb	r2, [r2, #1]
   265e0:	add	r6, r0, #1
   265e4:	cmp	r1, r2
   265e8:	bne	2656c <crc32@@Base+0xc210>
   265ec:	ldrb	r1, [r6, #1]!
   265f0:	ldrb	r2, [ip, #1]!
   265f4:	cmp	r1, r2
   265f8:	bne	2656c <crc32@@Base+0xc210>
   265fc:	ldrb	r1, [r6, #1]
   26600:	ldrb	r2, [ip, #1]
   26604:	cmp	r1, r2
   26608:	bne	2656c <crc32@@Base+0xc210>
   2660c:	add	r3, r8, r3, lsl #4
   26610:	mov	r0, #25
   26614:	str	r3, [r4]
   26618:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2661c:	mvn	r0, #0
   26620:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26624:	mvn	r0, #70	; 0x46
   26628:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2662c:	mvn	r0, #37	; 0x25
   26630:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   26634:	strdeq	r1, [r5], -r8
   26638:	push	{r4, r5, r6, r7, r8, lr}
   2663c:	mov	r6, r0
   26640:	ldr	r5, [pc, #56]	; 26680 <crc32@@Base+0xc324>
   26644:	mov	r4, #0
   26648:	ldr	r1, [r5, r4, lsl #4]
   2664c:	mov	r2, #6
   26650:	mov	r0, r6
   26654:	lsl	r7, r4, #4
   26658:	bl	12220 <strncmp@plt>
   2665c:	add	r4, r4, #1
   26660:	cmp	r0, #0
   26664:	beq	26678 <crc32@@Base+0xc31c>
   26668:	cmp	r4, #9
   2666c:	bne	26648 <crc32@@Base+0xc2ec>
   26670:	mov	r0, #0
   26674:	pop	{r4, r5, r6, r7, r8, pc}
   26678:	add	r0, r5, r7
   2667c:	pop	{r4, r5, r6, r7, r8, pc}
   26680:	strdeq	r1, [r5], -r8
   26684:	push	{r4, r5, r6, r7, r8, lr}
   26688:	mov	r4, r0
   2668c:	ldr	r5, [r0, #64]	; 0x40
   26690:	cmp	r5, #0
   26694:	beq	266b0 <crc32@@Base+0xc354>
   26698:	mov	r0, r5
   2669c:	bl	26638 <crc32@@Base+0xc2dc>
   266a0:	cmp	r0, #0
   266a4:	beq	266b0 <crc32@@Base+0xc354>
   266a8:	mov	r0, #0
   266ac:	pop	{r4, r5, r6, r7, r8, pc}
   266b0:	ldr	r0, [r4, #16]
   266b4:	cmp	r0, #0
   266b8:	bne	266a8 <crc32@@Base+0xc34c>
   266bc:	ldr	r4, [r4, #12]
   266c0:	cmp	r4, #0
   266c4:	popne	{r4, r5, r6, r7, r8, pc}
   266c8:	cmp	r5, #0
   266cc:	movw	r6, #7868	; 0x1ebc
   266d0:	movt	r6, #5
   266d4:	mov	r1, #1
   266d8:	movw	r3, #52076	; 0xcb6c
   266dc:	movw	r2, #52084	; 0xcb74
   266e0:	movt	r3, #3
   266e4:	movt	r2, #3
   266e8:	movne	r3, r5
   266ec:	ldr	r0, [r6]
   266f0:	bl	12358 <__fprintf_chk@plt>
   266f4:	ldr	r3, [r6]
   266f8:	movw	r0, #52128	; 0xcba0
   266fc:	mov	r2, #20
   26700:	movt	r0, #3
   26704:	mov	r1, #1
   26708:	bl	12634 <fwrite@plt>
   2670c:	ldr	r7, [pc, #56]	; 2674c <crc32@@Base+0xc3f0>
   26710:	movw	r5, #52152	; 0xcbb8
   26714:	movt	r5, #3
   26718:	ldr	r3, [r7, r4, lsl #4]
   2671c:	mov	r2, r5
   26720:	add	r4, r4, #1
   26724:	mov	r1, #1
   26728:	ldr	r0, [r6]
   2672c:	bl	12358 <__fprintf_chk@plt>
   26730:	cmp	r4, #9
   26734:	bne	26718 <crc32@@Base+0xc3bc>
   26738:	ldr	r1, [r6]
   2673c:	mov	r0, #10
   26740:	bl	12628 <fputc@plt>
   26744:	mov	r0, #1
   26748:	pop	{r4, r5, r6, r7, r8, pc}
   2674c:	strdeq	r1, [r5], -r8
   26750:	ldr	r0, [r0, #64]	; 0x40
   26754:	cmp	r0, #0
   26758:	beq	2676c <crc32@@Base+0xc410>
   2675c:	push	{r4, lr}
   26760:	bl	26638 <crc32@@Base+0xc2dc>
   26764:	ldr	r0, [r0, #4]
   26768:	pop	{r4, pc}
   2676c:	ldr	r3, [r0, #4]
   26770:	udf	#0
   26774:	ldr	r0, [r0, #64]	; 0x40
   26778:	cmp	r0, #0
   2677c:	beq	26790 <crc32@@Base+0xc434>
   26780:	push	{r4, lr}
   26784:	bl	26638 <crc32@@Base+0xc2dc>
   26788:	ldr	r0, [r0, #8]
   2678c:	pop	{r4, pc}
   26790:	ldr	r3, [r0, #8]
   26794:	udf	#0
   26798:	ldr	r0, [r0, #64]	; 0x40
   2679c:	cmp	r0, #0
   267a0:	beq	267b4 <crc32@@Base+0xc458>
   267a4:	push	{r4, lr}
   267a8:	bl	26638 <crc32@@Base+0xc2dc>
   267ac:	ldrb	r0, [r0, #12]
   267b0:	pop	{r4, pc}
   267b4:	ldrb	r3, [r0, #12]
   267b8:	udf	#0
   267bc:	ldr	r3, [r2, #64]	; 0x40
   267c0:	cmp	r3, #0
   267c4:	beq	268ec <crc32@@Base+0xc590>
   267c8:	push	{r4, r5, r6, r7, r8, lr}
   267cc:	mov	r4, r0
   267d0:	mov	r0, r3
   267d4:	mov	r5, r1
   267d8:	mov	r6, r2
   267dc:	bl	26638 <crc32@@Base+0xc2dc>
   267e0:	ldr	r3, [r0, #8]
   267e4:	cmp	r5, r3
   267e8:	bhi	2690c <crc32@@Base+0xc5b0>
   267ec:	mov	r2, #2048	; 0x800
   267f0:	mov	r1, #0
   267f4:	mov	r0, r4
   267f8:	bl	12388 <memset@plt>
   267fc:	ldr	r0, [r6, #64]	; 0x40
   26800:	movw	r3, #43605	; 0xaa55
   26804:	movt	r3, #4080	; 0xff0
   26808:	cmp	r0, #0
   2680c:	str	r3, [r4]
   26810:	beq	268f4 <crc32@@Base+0xc598>
   26814:	bl	26638 <crc32@@Base+0xc2dc>
   26818:	add	r1, r5, #508	; 0x1fc
   2681c:	add	r1, r1, #3
   26820:	add	ip, r4, #508	; 0x1fc
   26824:	movw	r5, #506	; 0x1fa
   26828:	mov	r7, #4
   2682c:	lsr	r3, r1, #9
   26830:	movw	r2, #6632	; 0x19e8
   26834:	add	r3, r3, #3
   26838:	movt	r2, #5
   2683c:	bic	r3, r3, #3
   26840:	mov	r1, #512	; 0x200
   26844:	uxth	r3, r3
   26848:	add	lr, r3, #1024	; 0x400
   2684c:	ldrb	r0, [r0, #12]
   26850:	strh	r3, [r4, r5]
   26854:	eor	r3, r0, #1
   26858:	strh	r7, [r4, #12]
   2685c:	str	r3, [r4, #8]
   26860:	mov	r0, r4
   26864:	strh	lr, [ip]
   26868:	bl	263a4 <crc32@@Base+0xc048>
   2686c:	ldr	r0, [r6, #64]	; 0x40
   26870:	cmp	r0, #0
   26874:	beq	26904 <crc32@@Base+0xc5a8>
   26878:	bl	26638 <crc32@@Base+0xc2dc>
   2687c:	ldr	r3, [r0, #4]
   26880:	ldr	r3, [r3]
   26884:	str	r3, [r4, #2048]	; 0x800
   26888:	ldr	r0, [r6, #64]	; 0x40
   2688c:	cmp	r0, #0
   26890:	beq	268fc <crc32@@Base+0xc5a0>
   26894:	bl	26638 <crc32@@Base+0xc2dc>
   26898:	ldrb	r3, [r0, #12]
   2689c:	cmp	r3, #0
   268a0:	beq	268e4 <crc32@@Base+0xc588>
   268a4:	ldr	r5, [r6, #104]	; 0x68
   268a8:	subs	r5, r5, #2048	; 0x800
   268ac:	beq	268e4 <crc32@@Base+0xc588>
   268b0:	movw	r7, #6632	; 0x19e8
   268b4:	add	r4, r4, #2048	; 0x800
   268b8:	movt	r7, #5
   268bc:	cmp	r5, #512	; 0x200
   268c0:	mov	r0, r4
   268c4:	mov	r2, r7
   268c8:	add	r4, r4, #512	; 0x200
   268cc:	movcc	r6, r5
   268d0:	movcs	r6, #512	; 0x200
   268d4:	mov	r1, r6
   268d8:	bl	263a4 <crc32@@Base+0xc048>
   268dc:	subs	r5, r5, r6
   268e0:	bne	268bc <crc32@@Base+0xc560>
   268e4:	mov	r0, #0
   268e8:	pop	{r4, r5, r6, r7, r8, pc}
   268ec:	ldr	r3, [r3, #8]
   268f0:	udf	#0
   268f4:	ldrb	r3, [r0, #12]
   268f8:	udf	#0
   268fc:	ldrb	r3, [r0, #12]
   26900:	udf	#0
   26904:	ldr	r3, [r0, #4]
   26908:	udf	#0
   2690c:	mvn	r0, #27
   26910:	pop	{r4, r5, r6, r7, r8, pc}
   26914:	push	{r4, r5, lr}
   26918:	movw	r4, #3824	; 0xef0
   2691c:	movt	r4, #5
   26920:	sub	sp, sp, #524	; 0x20c
   26924:	mov	r5, r2
   26928:	add	r1, sp, #4
   2692c:	ldr	r3, [r4]
   26930:	mov	r2, sp
   26934:	str	r3, [sp, #516]	; 0x204
   26938:	bl	264cc <crc32@@Base+0xc170>
   2693c:	cmn	r0, #38	; 0x26
   26940:	moveq	r0, #0
   26944:	beq	26980 <crc32@@Base+0xc624>
   26948:	cmp	r0, #0
   2694c:	blt	26980 <crc32@@Base+0xc624>
   26950:	ldr	r0, [r5, #64]	; 0x40
   26954:	cmp	r0, #0
   26958:	beq	26980 <crc32@@Base+0xc624>
   2695c:	bl	26638 <crc32@@Base+0xc2dc>
   26960:	cmp	r0, #0
   26964:	beq	26998 <crc32@@Base+0xc63c>
   26968:	ldr	r3, [sp]
   2696c:	cmp	r3, #0
   26970:	beq	26998 <crc32@@Base+0xc63c>
   26974:	ldr	r1, [r3, #4]
   26978:	ldr	r0, [r0, #4]
   2697c:	bl	12718 <strcmp@plt>
   26980:	ldr	r2, [sp, #516]	; 0x204
   26984:	ldr	r3, [r4]
   26988:	cmp	r2, r3
   2698c:	bne	269a0 <crc32@@Base+0xc644>
   26990:	add	sp, sp, #524	; 0x20c
   26994:	pop	{r4, r5, pc}
   26998:	mvn	r0, #1
   2699c:	b	26980 <crc32@@Base+0xc624>
   269a0:	bl	12538 <__stack_chk_fail@plt>
   269a4:	push	{r4, lr}
   269a8:	movw	r4, #3824	; 0xef0
   269ac:	movt	r4, #5
   269b0:	sub	sp, sp, #520	; 0x208
   269b4:	add	r1, sp, #4
   269b8:	ldr	r3, [r4]
   269bc:	mov	r2, sp
   269c0:	str	r3, [sp, #516]	; 0x204
   269c4:	bl	264cc <crc32@@Base+0xc170>
   269c8:	cmn	r0, #38	; 0x26
   269cc:	beq	26a2c <crc32@@Base+0xc6d0>
   269d0:	cmp	r0, #0
   269d4:	blt	26a44 <crc32@@Base+0xc6e8>
   269d8:	ldr	r1, [sp]
   269dc:	uxtb	r0, r0
   269e0:	cmp	r0, #24
   269e4:	movw	r2, #52156	; 0xcbbc
   269e8:	movt	r2, #3
   269ec:	movw	r3, #52164	; 0xcbc4
   269f0:	mov	r0, #1
   269f4:	movt	r3, #3
   269f8:	moveq	r3, r2
   269fc:	ldr	r2, [r1, #4]
   26a00:	movw	r1, #52204	; 0xcbec
   26a04:	movt	r1, #3
   26a08:	bl	1282c <__printf_chk@plt>
   26a0c:	add	r3, sp, #508	; 0x1fc
   26a10:	add	r3, r3, #2
   26a14:	movw	r1, #52248	; 0xcc18
   26a18:	ldrh	r2, [r3]
   26a1c:	mov	r0, #1
   26a20:	movt	r1, #3
   26a24:	lsl	r2, r2, #9
   26a28:	bl	1282c <__printf_chk@plt>
   26a2c:	ldr	r2, [sp, #516]	; 0x204
   26a30:	ldr	r3, [r4]
   26a34:	cmp	r2, r3
   26a38:	bne	26a68 <crc32@@Base+0xc70c>
   26a3c:	add	sp, sp, #520	; 0x208
   26a40:	pop	{r4, pc}
   26a44:	movw	r3, #7868	; 0x1ebc
   26a48:	movt	r3, #5
   26a4c:	movw	r0, #52168	; 0xcbc8
   26a50:	mov	r2, #33	; 0x21
   26a54:	ldr	r3, [r3]
   26a58:	mov	r1, #1
   26a5c:	movt	r0, #3
   26a60:	bl	12634 <fwrite@plt>
   26a64:	b	26a2c <crc32@@Base+0xc6d0>
   26a68:	bl	12538 <__stack_chk_fail@plt>
   26a6c:	push	{r4, r5, r6, r7, r8, lr}
   26a70:	subs	r4, r2, #0
   26a74:	popeq	{r4, r5, r6, r7, r8, pc}
   26a78:	movw	r7, #6632	; 0x19e8
   26a7c:	add	r6, r0, r1
   26a80:	movt	r7, #5
   26a84:	cmp	r4, #512	; 0x200
   26a88:	mov	r0, r6
   26a8c:	mov	r2, r7
   26a90:	add	r6, r6, #512	; 0x200
   26a94:	movcc	r5, r4
   26a98:	movcs	r5, #512	; 0x200
   26a9c:	mov	r1, r5
   26aa0:	bl	263a4 <crc32@@Base+0xc048>
   26aa4:	subs	r4, r4, r5
   26aa8:	bne	26a84 <crc32@@Base+0xc728>
   26aac:	pop	{r4, r5, r6, r7, r8, pc}
   26ab0:	mov	r3, #2048	; 0x800
   26ab4:	push	{r4, r5, r6, lr}
   26ab8:	mov	r5, r1
   26abc:	str	r3, [r1, #4]
   26ac0:	mov	r6, r0
   26ac4:	mov	r1, #1
   26ac8:	mov	r0, r3
   26acc:	mov	r4, r2
   26ad0:	bl	125c8 <calloc@plt>
   26ad4:	cmp	r0, #0
   26ad8:	str	r0, [r5, #8]
   26adc:	beq	26b18 <crc32@@Base+0xc7bc>
   26ae0:	ldr	ip, [r6, #104]	; 0x68
   26ae4:	cmp	r4, #0
   26ae8:	rsbne	r2, r4, #0
   26aec:	mov	r1, #63488	; 0xf800
   26af0:	add	r3, ip, #2032	; 0x7f0
   26af4:	moveq	r4, #1
   26af8:	add	r3, r3, #15
   26afc:	movt	r1, #65535	; 0xffff
   26b00:	add	r0, r3, r4
   26b04:	mvneq	r2, #0
   26b08:	sub	r1, r1, ip
   26b0c:	and	r0, r0, r2
   26b10:	add	r0, r0, r1
   26b14:	pop	{r4, r5, r6, pc}
   26b18:	mvn	r0, #11
   26b1c:	pop	{r4, r5, r6, pc}
   26b20:	subs	r0, r0, #23
   26b24:	movne	r0, #1
   26b28:	bx	lr
   26b2c:	push	{r4, r5, r6, lr}
   26b30:	mov	r5, r0
   26b34:	mov	r0, r3
   26b38:	mov	r4, r3
   26b3c:	bl	26750 <crc32@@Base+0xc3f4>
   26b40:	ldr	r3, [r0]
   26b44:	mov	r0, r4
   26b48:	str	r3, [r5]
   26b4c:	bl	26798 <crc32@@Base+0xc43c>
   26b50:	cmp	r0, #0
   26b54:	popeq	{r4, r5, r6, pc}
   26b58:	ldr	r2, [r4, #104]	; 0x68
   26b5c:	mov	r0, r5
   26b60:	mov	r1, #4
   26b64:	pop	{r4, r5, r6, lr}
   26b68:	b	26a6c <crc32@@Base+0xc710>
   26b6c:	subs	r0, r0, #24
   26b70:	movne	r0, #1
   26b74:	bx	lr
   26b78:	mov	r2, #2048	; 0x800
   26b7c:	b	26ab0 <crc32@@Base+0xc754>
   26b80:	push	{r4, lr}
   26b84:	mov	r2, r3
   26b88:	ldr	r4, [r3, #104]	; 0x68
   26b8c:	sub	r4, r4, #2048	; 0x800
   26b90:	mov	r1, r4
   26b94:	bl	267bc <crc32@@Base+0xc460>
   26b98:	cmp	r0, #0
   26b9c:	popeq	{r4, pc}
   26ba0:	mov	r2, r4
   26ba4:	movw	r1, #52412	; 0xccbc
   26ba8:	mov	r0, #1
   26bac:	movt	r1, #3
   26bb0:	pop	{r4, lr}
   26bb4:	b	1282c <__printf_chk@plt>
   26bb8:	subs	r0, r0, #25
   26bbc:	movne	r0, #1
   26bc0:	bx	lr
   26bc4:	push	{r4, r5, r6, lr}
   26bc8:	mov	r2, #2048	; 0x800
   26bcc:	mov	r4, r0
   26bd0:	mov	r5, r1
   26bd4:	bl	26ab0 <crc32@@Base+0xc754>
   26bd8:	ldr	r3, [r5, #4]
   26bdc:	ldr	r2, [r4, #104]	; 0x68
   26be0:	add	r3, r3, r2
   26be4:	add	r3, r3, r0
   26be8:	str	r3, [r4, #108]	; 0x6c
   26bec:	add	r0, r0, r3
   26bf0:	pop	{r4, r5, r6, pc}
   26bf4:	push	{r4, r5, r6, lr}
   26bf8:	mov	r2, r3
   26bfc:	ldr	r4, [r3, #108]	; 0x6c
   26c00:	mov	r5, r0
   26c04:	mov	r1, r4
   26c08:	bl	267bc <crc32@@Base+0xc460>
   26c0c:	cmp	r0, #0
   26c10:	bne	26c60 <crc32@@Base+0xc904>
   26c14:	lsrs	r4, r4, #11
   26c18:	popeq	{r4, r5, r6, pc}
   26c1c:	sub	r3, r4, #-67108863	; 0xfc000001
   26c20:	sub	r6, r5, #4096	; 0x1000
   26c24:	add	r4, r5, r3, lsl #12
   26c28:	add	r5, r5, r3, lsl #11
   26c2c:	mov	r1, r5
   26c30:	mov	r2, #2048	; 0x800
   26c34:	mov	r0, r4
   26c38:	sub	r5, r5, #2048	; 0x800
   26c3c:	bl	12424 <memmove@plt>
   26c40:	mov	r2, #2048	; 0x800
   26c44:	mov	r1, #0
   26c48:	add	r0, r4, r2
   26c4c:	sub	r4, r4, #4096	; 0x1000
   26c50:	bl	12388 <memset@plt>
   26c54:	cmp	r4, r6
   26c58:	bne	26c2c <crc32@@Base+0xc8d0>
   26c5c:	pop	{r4, r5, r6, pc}
   26c60:	mov	r2, r4
   26c64:	movw	r1, #52412	; 0xccbc
   26c68:	mov	r0, #1
   26c6c:	movt	r1, #3
   26c70:	bl	1282c <__printf_chk@plt>
   26c74:	lsrs	r4, r4, #11
   26c78:	bne	26c1c <crc32@@Base+0xc8c0>
   26c7c:	pop	{r4, r5, r6, pc}
   26c80:	ldr	r2, [r0]
   26c84:	ldr	r3, [r0, #8]
   26c88:	cmp	r2, #0
   26c8c:	beq	26cb0 <crc32@@Base+0xc954>
   26c90:	cmp	r3, #0
   26c94:	movne	r3, #1
   26c98:	bne	26ca8 <crc32@@Base+0xc94c>
   26c9c:	ldr	r3, [r0, #16]
   26ca0:	adds	r3, r3, #0
   26ca4:	movne	r3, #1
   26ca8:	mov	r0, r3
   26cac:	bx	lr
   26cb0:	cmp	r3, #0
   26cb4:	ldr	r2, [r0, #16]
   26cb8:	beq	26ca8 <crc32@@Base+0xc94c>
   26cbc:	adds	r3, r2, #0
   26cc0:	movne	r3, #1
   26cc4:	mov	r0, r3
   26cc8:	bx	lr
   26ccc:	subs	r0, r0, #19
   26cd0:	movne	r0, #1
   26cd4:	bx	lr
   26cd8:	subs	r0, r0, #35	; 0x23
   26cdc:	movne	r0, #1
   26ce0:	bx	lr
   26ce4:	push	{r4, r5, lr}
   26ce8:	movw	r4, #3824	; 0xef0
   26cec:	movt	r4, #5
   26cf0:	ldr	r3, [r0, #72]	; 0x48
   26cf4:	sub	sp, sp, #100	; 0x64
   26cf8:	ldr	r2, [r4]
   26cfc:	cmp	r3, #0
   26d00:	str	r2, [sp, #92]	; 0x5c
   26d04:	beq	26d48 <crc32@@Base+0xc9ec>
   26d08:	mov	r5, r1
   26d0c:	mov	r2, sp
   26d10:	mov	r1, r3
   26d14:	mov	r0, #3
   26d18:	bl	126dc <__xstat@plt>
   26d1c:	cmp	r0, #0
   26d20:	bne	26d48 <crc32@@Base+0xc9ec>
   26d24:	ldr	r3, [sp, #44]	; 0x2c
   26d28:	movw	r2, #65532	; 0xfffc
   26d2c:	movt	r2, #3
   26d30:	cmp	r3, r2
   26d34:	rsbls	r1, r3, #262144	; 0x40000
   26d38:	strls	r1, [r5, #4]
   26d3c:	movwls	r2, #33436	; 0x829c
   26d40:	movtls	r2, #25
   26d44:	strls	r3, [r2]
   26d48:	ldr	r2, [sp, #92]	; 0x5c
   26d4c:	mov	r0, #0
   26d50:	ldr	r3, [r4]
   26d54:	cmp	r2, r3
   26d58:	bne	26d64 <crc32@@Base+0xca08>
   26d5c:	add	sp, sp, #100	; 0x64
   26d60:	pop	{r4, r5, pc}
   26d64:	bl	12538 <__stack_chk_fail@plt>
   26d68:	push	{r4, r5, r6, r7, r8, lr}
   26d6c:	mov	r7, r0
   26d70:	mov	r5, r0
   26d74:	ldr	r0, [r7, #64]!	; 0x40
   26d78:	movw	r4, #3824	; 0xef0
   26d7c:	movt	r4, #5
   26d80:	sub	sp, sp, #48	; 0x30
   26d84:	movw	ip, #21313	; 0x5341
   26d88:	ldr	r1, [r7, #4]
   26d8c:	movt	ip, #12592	; 0x3130
   26d90:	ldr	r2, [r7, #8]
   26d94:	add	r3, sp, #12
   26d98:	ldr	lr, [r4]
   26d9c:	cmp	r0, ip
   26da0:	stmia	r3!, {r0, r1, r2}
   26da4:	str	lr, [sp, #44]	; 0x2c
   26da8:	bne	26e50 <crc32@@Base+0xcaf4>
   26dac:	ldrb	lr, [sp, #16]
   26db0:	cmp	lr, #0
   26db4:	beq	26e00 <crc32@@Base+0xcaa4>
   26db8:	cmp	lr, #1
   26dbc:	bne	26e50 <crc32@@Base+0xcaf4>
   26dc0:	ldr	r3, [r7, #12]
   26dc4:	add	r8, sp, #24
   26dc8:	add	r6, sp, #41	; 0x29
   26dcc:	mov	ip, r8
   26dd0:	stmia	r8!, {r0, r1, r2, r3}
   26dd4:	mov	r1, #0
   26dd8:	ldr	r0, [r7, #16]
   26ddc:	lsr	r7, r0, #16
   26de0:	str	r0, [r8]
   26de4:	ldrb	r3, [ip], #1
   26de8:	add	r3, r1, r3
   26dec:	cmp	ip, r6
   26df0:	uxth	r1, r3
   26df4:	bne	26de4 <crc32@@Base+0xca88>
   26df8:	ldr	r2, [sp, #32]
   26dfc:	b	26e2c <crc32@@Base+0xcad0>
   26e00:	ldrh	r7, [sp, #22]
   26e04:	add	r0, sp, #21
   26e08:	add	r2, sp, #12
   26e0c:	mov	r1, lr
   26e10:	ldrb	r3, [r2], #1
   26e14:	add	r3, r1, r3
   26e18:	cmp	r2, r0
   26e1c:	uxth	r1, r3
   26e20:	bne	26e10 <crc32@@Base+0xcab4>
   26e24:	ldrh	r2, [sp, #18]
   26e28:	lsl	r2, r2, #2
   26e2c:	cmp	r7, r1
   26e30:	bne	26e50 <crc32@@Base+0xcaf4>
   26e34:	cmp	r2, #63	; 0x3f
   26e38:	ble	26e50 <crc32@@Base+0xcaf4>
   26e3c:	cmp	lr, #0
   26e40:	beq	26e6c <crc32@@Base+0xcb10>
   26e44:	cmp	lr, #1
   26e48:	moveq	r3, #262144	; 0x40000
   26e4c:	beq	26e70 <crc32@@Base+0xcb14>
   26e50:	mvn	r0, #0
   26e54:	ldr	r2, [sp, #44]	; 0x2c
   26e58:	ldr	r3, [r4]
   26e5c:	cmp	r2, r3
   26e60:	bne	26ec8 <crc32@@Base+0xcb6c>
   26e64:	add	sp, sp, #48	; 0x30
   26e68:	pop	{r4, r5, r6, r7, r8, pc}
   26e6c:	mov	r3, #65536	; 0x10000
   26e70:	cmp	r3, r2
   26e74:	bcc	26e50 <crc32@@Base+0xcaf4>
   26e78:	sub	r6, r2, #4
   26e7c:	mov	r1, r5
   26e80:	mov	r0, #0
   26e84:	mov	r2, r6
   26e88:	bl	25f0c <crc32@@Base+0xbbb0>
   26e8c:	ldr	r3, [r5, r6]
   26e90:	mvn	r0, r0
   26e94:	cmp	r0, r3
   26e98:	moveq	r0, #0
   26e9c:	beq	26e54 <crc32@@Base+0xcaf8>
   26ea0:	movw	r2, #7868	; 0x1ebc
   26ea4:	movt	r2, #5
   26ea8:	str	r0, [sp]
   26eac:	mov	r1, #1
   26eb0:	ldr	r0, [r2]
   26eb4:	movw	r2, #52540	; 0xcd3c
   26eb8:	movt	r2, #3
   26ebc:	bl	12358 <__fprintf_chk@plt>
   26ec0:	mvn	r0, #0
   26ec4:	b	26e54 <crc32@@Base+0xcaf8>
   26ec8:	bl	12538 <__stack_chk_fail@plt>
   26ecc:	push	{r4, lr}
   26ed0:	bl	26d68 <crc32@@Base+0xca0c>
   26ed4:	cmp	r0, #0
   26ed8:	beq	26eec <crc32@@Base+0xcb90>
   26edc:	movw	r0, #52616	; 0xcd88
   26ee0:	movt	r0, #3
   26ee4:	pop	{r4, lr}
   26ee8:	b	12310 <puts@plt>
   26eec:	movw	r0, #52580	; 0xcd64
   26ef0:	movt	r0, #3
   26ef4:	pop	{r4, lr}
   26ef8:	b	12310 <puts@plt>
   26efc:	cmp	r1, #127	; 0x7f
   26f00:	ble	26f08 <crc32@@Base+0xcbac>
   26f04:	b	26d68 <crc32@@Base+0xca0c>
   26f08:	mvn	r0, #0
   26f0c:	bx	lr
   26f10:	push	{r4, r5, r6, r7, r8, r9, lr}
   26f14:	movw	r6, #3824	; 0xef0
   26f18:	movt	r6, #5
   26f1c:	movw	r3, #33436	; 0x829c
   26f20:	movt	r3, #25
   26f24:	sub	sp, sp, #44	; 0x2c
   26f28:	ldr	r2, [r6]
   26f2c:	subs	r7, r1, #0
   26f30:	ldr	r4, [r3]
   26f34:	mov	r5, r0
   26f38:	str	r2, [sp, #36]	; 0x24
   26f3c:	add	r9, r0, r4
   26f40:	bne	27078 <crc32@@Base+0xcd1c>
   26f44:	rsb	r8, r4, #65536	; 0x10000
   26f48:	mov	r2, r4
   26f4c:	add	r1, r0, r8
   26f50:	bl	12424 <memmove@plt>
   26f54:	add	r4, r4, #3
   26f58:	mov	r2, r8
   26f5c:	mov	r1, #0
   26f60:	mov	r0, r9
   26f64:	bic	r4, r4, #3
   26f68:	bl	12388 <memset@plt>
   26f6c:	add	r2, r4, #4
   26f70:	cmp	r7, #0
   26f74:	mov	r3, #0
   26f78:	str	r2, [sp, #24]
   26f7c:	str	r3, [sp, #8]
   26f80:	lsr	r2, r2, #2
   26f84:	movw	r1, #21313	; 0x5341
   26f88:	strh	r2, [sp, #10]
   26f8c:	movt	r1, #12592	; 0x3130
   26f90:	mov	r2, #1
   26f94:	str	r1, [sp, #4]
   26f98:	movt	r2, #20
   26f9c:	str	r1, [sp, #16]
   26fa0:	add	ip, r5, #64	; 0x40
   26fa4:	mov	r1, #20
   26fa8:	str	r3, [sp, #32]
   26fac:	str	r3, [sp, #12]
   26fb0:	str	r2, [sp, #20]
   26fb4:	str	r1, [sp, #28]
   26fb8:	beq	27034 <crc32@@Base+0xccd8>
   26fbc:	add	r0, sp, #32
   26fc0:	mov	r1, #65	; 0x41
   26fc4:	add	r2, sp, #16
   26fc8:	b	26fd0 <crc32@@Base+0xcc74>
   26fcc:	ldrb	r1, [r2, #1]!
   26fd0:	add	r3, r3, r1
   26fd4:	cmp	r0, r2
   26fd8:	uxth	r3, r3
   26fdc:	bne	26fcc <crc32@@Base+0xcc70>
   26fe0:	add	lr, sp, #16
   26fe4:	strh	r3, [sp, #34]	; 0x22
   26fe8:	ldm	lr!, {r0, r1, r2, r3}
   26fec:	str	r0, [r5, #64]	; 0x40
   26ff0:	ldr	r0, [lr]
   26ff4:	str	r1, [ip, #4]
   26ff8:	str	r2, [ip, #8]
   26ffc:	str	r0, [ip, #16]
   27000:	str	r3, [ip, #12]
   27004:	mov	r2, r4
   27008:	mov	r1, r5
   2700c:	mov	r0, #0
   27010:	bl	25f0c <crc32@@Base+0xbbb0>
   27014:	ldr	r2, [sp, #36]	; 0x24
   27018:	ldr	r3, [r6]
   2701c:	cmp	r2, r3
   27020:	mvn	r0, r0
   27024:	str	r0, [r5, r4]
   27028:	bne	2708c <crc32@@Base+0xcd30>
   2702c:	add	sp, sp, #44	; 0x2c
   27030:	pop	{r4, r5, r6, r7, r8, r9, pc}
   27034:	add	r0, sp, #12
   27038:	mov	r1, r7
   2703c:	mov	r2, #65	; 0x41
   27040:	add	r3, sp, #4
   27044:	b	2704c <crc32@@Base+0xccf0>
   27048:	ldrb	r2, [r3, #1]!
   2704c:	add	r1, r1, r2
   27050:	cmp	r3, r0
   27054:	uxth	r1, r1
   27058:	bne	27048 <crc32@@Base+0xccec>
   2705c:	add	r3, sp, #4
   27060:	strh	r1, [sp, #14]
   27064:	ldm	r3!, {r0, r1, r2}
   27068:	str	r0, [r5, #64]	; 0x40
   2706c:	str	r1, [ip, #4]
   27070:	str	r2, [ip, #8]
   27074:	b	27004 <crc32@@Base+0xcca8>
   27078:	rsb	r8, r4, #262144	; 0x40000
   2707c:	mov	r2, r4
   27080:	add	r1, r0, r8
   27084:	bl	12424 <memmove@plt>
   27088:	b	26f54 <crc32@@Base+0xcbf8>
   2708c:	bl	12538 <__stack_chk_fail@plt>
   27090:	mov	r1, #0
   27094:	b	26f10 <crc32@@Base+0xcbb4>
   27098:	mov	r1, #1
   2709c:	b	26f10 <crc32@@Base+0xcbb4>
   270a0:	push	{r4, r5, lr}
   270a4:	movw	r4, #3824	; 0xef0
   270a8:	movt	r4, #5
   270ac:	ldr	r3, [r0, #72]	; 0x48
   270b0:	sub	sp, sp, #100	; 0x64
   270b4:	ldr	r2, [r4]
   270b8:	cmp	r3, #0
   270bc:	str	r2, [sp, #92]	; 0x5c
   270c0:	beq	27100 <crc32@@Base+0xcda4>
   270c4:	mov	r5, r1
   270c8:	mov	r2, sp
   270cc:	mov	r1, r3
   270d0:	mov	r0, #3
   270d4:	bl	126dc <__xstat@plt>
   270d8:	cmp	r0, #0
   270dc:	bne	27100 <crc32@@Base+0xcda4>
   270e0:	ldr	r3, [sp, #44]	; 0x2c
   270e4:	movw	r2, #65532	; 0xfffc
   270e8:	cmp	r3, r2
   270ec:	rsbls	r1, r3, #65536	; 0x10000
   270f0:	strls	r1, [r5, #4]
   270f4:	movwls	r2, #33436	; 0x829c
   270f8:	movtls	r2, #25
   270fc:	strls	r3, [r2]
   27100:	ldr	r2, [sp, #92]	; 0x5c
   27104:	mov	r0, #0
   27108:	ldr	r3, [r4]
   2710c:	cmp	r2, r3
   27110:	bne	2711c <crc32@@Base+0xcdc0>
   27114:	add	sp, sp, #100	; 0x64
   27118:	pop	{r4, r5, pc}
   2711c:	bl	12538 <__stack_chk_fail@plt>
   27120:	cmp	r2, #0
   27124:	bxle	lr
   27128:	movw	ip, #52740	; 0xce04
   2712c:	add	r2, r1, r2
   27130:	movt	ip, #3
   27134:	ldrb	r3, [r1], #1
   27138:	eor	r3, r3, r0, lsr #8
   2713c:	cmp	r1, r2
   27140:	lsl	r3, r3, #1
   27144:	ldrh	r3, [ip, r3]
   27148:	eor	r0, r3, r0, lsl #8
   2714c:	uxth	r0, r0
   27150:	bne	27134 <crc32@@Base+0xcdd8>
   27154:	bx	lr
   27158:	cmp	r1, #0
   2715c:	ble	271a4 <crc32@@Base+0xce48>
   27160:	push	{lr}		; (str lr, [sp, #-4]!)
   27164:	add	r1, r0, r1
   27168:	movw	lr, #52740	; 0xce04
   2716c:	movt	lr, #3
   27170:	mov	ip, #0
   27174:	ldrb	r3, [r0], #1
   27178:	eor	r3, r3, ip, lsr #8
   2717c:	cmp	r0, r1
   27180:	lsl	r3, r3, #1
   27184:	ldrh	r3, [lr, r3]
   27188:	eor	ip, r3, ip, lsl #8
   2718c:	uxth	ip, ip
   27190:	bne	27174 <crc32@@Base+0xce18>
   27194:	rev16	ip, ip
   27198:	uxth	ip, ip
   2719c:	strh	ip, [r2]
   271a0:	pop	{pc}		; (ldr pc, [sp], #4)
   271a4:	mov	ip, #0
   271a8:	strh	ip, [r2]
   271ac:	bx	lr
   271b0:	ldr	r3, [r0, #12]
   271b4:	movw	r2, #31129	; 0x7999
   271b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   271bc:	sub	sp, sp, #100	; 0x64
   271c0:	ldr	r7, [r0, #16]
   271c4:	movt	r2, #23170	; 0x5a82
   271c8:	ldr	ip, [r0, #20]
   271cc:	ror	lr, r3, #2
   271d0:	ldr	r5, [r0, #24]
   271d4:	eor	r4, r7, lr
   271d8:	ldr	r9, [r0, #8]
   271dc:	eor	r6, r7, ip
   271e0:	ldr	r8, [r1]
   271e4:	and	r6, r6, r3
   271e8:	str	r5, [sp, #88]	; 0x58
   271ec:	add	r5, r5, r2
   271f0:	str	r0, [sp, #92]	; 0x5c
   271f4:	add	r5, r5, r9, ror #27
   271f8:	ldr	r0, [r1, #4]
   271fc:	and	r4, r4, r9
   27200:	eor	r6, r6, ip
   27204:	str	ip, [sp, #84]	; 0x54
   27208:	rev	r8, r8
   2720c:	add	ip, ip, r2
   27210:	eor	r4, r4, r7
   27214:	add	r6, r6, r5
   27218:	add	r5, r8, r6
   2721c:	rev	fp, r0
   27220:	ldr	sl, [r1, #8]
   27224:	add	r4, r4, ip
   27228:	ror	ip, r9, #2
   2722c:	add	r4, r4, fp
   27230:	eor	r6, lr, ip
   27234:	add	r4, r4, r5, ror #27
   27238:	ror	r0, r5, #2
   2723c:	str	r8, [sp, #16]
   27240:	str	r7, [sp, #80]	; 0x50
   27244:	rev	sl, sl
   27248:	ldr	r8, [r1, #12]
   2724c:	and	r6, r6, r5
   27250:	add	r7, r7, r2
   27254:	eor	r5, ip, r0
   27258:	add	r7, r7, sl
   2725c:	eor	r6, r6, lr
   27260:	str	fp, [sp, #20]
   27264:	rev	r8, r8
   27268:	ror	fp, r4, #2
   2726c:	str	sl, [sp, #24]
   27270:	and	r5, r5, r4
   27274:	ldr	sl, [r1, #16]
   27278:	add	lr, lr, r2
   2727c:	add	r6, r6, r7
   27280:	add	r6, r6, r4, ror #27
   27284:	str	r8, [sp, #4]
   27288:	add	lr, lr, r8
   2728c:	eor	r7, r0, fp
   27290:	ldr	r8, [r1, #20]
   27294:	eor	r5, r5, ip
   27298:	add	r5, r5, lr
   2729c:	add	ip, ip, r2
   272a0:	rev	lr, sl
   272a4:	and	r7, r7, r6
   272a8:	add	r5, r5, r6, ror #27
   272ac:	str	lr, [sp, #8]
   272b0:	ror	r6, r6, #2
   272b4:	add	ip, ip, lr
   272b8:	eor	r7, r7, r0
   272bc:	rev	lr, r8
   272c0:	ldr	r8, [r1, #24]
   272c4:	eor	r4, fp, r6
   272c8:	add	r7, r7, ip
   272cc:	str	lr, [sp, #32]
   272d0:	add	r7, r7, r5, ror #27
   272d4:	add	ip, lr, r2
   272d8:	and	r4, r4, r5
   272dc:	ror	lr, r5, #2
   272e0:	rev	r5, r8
   272e4:	add	r0, ip, r0
   272e8:	eor	r4, r4, fp
   272ec:	eor	ip, r6, lr
   272f0:	mov	r8, r5
   272f4:	ldr	r5, [r1, #28]
   272f8:	add	sl, r8, r2
   272fc:	and	ip, ip, r7
   27300:	rev	r5, r5
   27304:	add	r4, r4, r0
   27308:	ror	r0, r7, #2
   2730c:	add	r4, r4, r7, ror #27
   27310:	add	fp, sl, fp
   27314:	eor	sl, ip, r6
   27318:	mov	ip, r5
   2731c:	eor	r5, lr, r0
   27320:	ldr	r7, [r1, #32]
   27324:	and	r5, r5, r4
   27328:	str	r9, [sp, #72]	; 0x48
   2732c:	add	sl, sl, fp
   27330:	add	r9, ip, r2
   27334:	add	sl, sl, r4, ror #27
   27338:	str	ip, [sp, #56]	; 0x38
   2733c:	ror	r4, r4, #2
   27340:	add	r6, r9, r6
   27344:	eor	ip, r5, lr
   27348:	eor	r9, r0, r4
   2734c:	rev	r5, r7
   27350:	add	ip, ip, r6
   27354:	ldr	r6, [r1, #36]	; 0x24
   27358:	add	ip, ip, sl, ror #27
   2735c:	str	r5, [sp, #12]
   27360:	and	r9, r9, sl
   27364:	add	r5, r5, r2
   27368:	ror	sl, sl, #2
   2736c:	add	r5, r5, lr
   27370:	eor	r9, r9, r0
   27374:	rev	lr, r6
   27378:	eor	r6, r4, sl
   2737c:	add	r7, lr, r2
   27380:	str	r8, [sp, #28]
   27384:	add	r9, r9, r5
   27388:	ldr	r8, [r1, #40]	; 0x28
   2738c:	and	r6, r6, ip
   27390:	add	r9, r9, ip, ror #27
   27394:	str	r3, [sp, #76]	; 0x4c
   27398:	eor	r6, r6, r4
   2739c:	str	lr, [sp, #40]	; 0x28
   273a0:	add	r0, r7, r0
   273a4:	ror	lr, ip, #2
   273a8:	ldr	r7, [r1, #44]	; 0x2c
   273ac:	rev	r8, r8
   273b0:	eor	r5, sl, lr
   273b4:	add	r0, r6, r0
   273b8:	add	fp, r8, r2
   273bc:	add	r0, r0, r9, ror #27
   273c0:	and	r5, r5, r9
   273c4:	ror	r9, r9, #2
   273c8:	rev	r3, r7
   273cc:	eor	r5, r5, sl
   273d0:	add	r4, fp, r4
   273d4:	eor	fp, lr, r9
   273d8:	str	r8, [sp, #36]	; 0x24
   273dc:	add	r4, r5, r4
   273e0:	ldr	r8, [r1, #48]	; 0x30
   273e4:	add	r5, r3, r2
   273e8:	and	fp, fp, r0
   273ec:	add	r4, r4, r0, ror #27
   273f0:	ldr	r7, [r1, #52]	; 0x34
   273f4:	ror	r0, r0, #2
   273f8:	add	sl, r5, sl
   273fc:	eor	fp, fp, lr
   27400:	rev	r6, r8
   27404:	eor	ip, r9, r0
   27408:	add	fp, fp, sl
   2740c:	str	r6, [sp, #44]	; 0x2c
   27410:	ror	sl, r4, #2
   27414:	add	fp, fp, r4, ror #27
   27418:	add	r6, r6, r2
   2741c:	and	ip, ip, r4
   27420:	rev	r4, r7
   27424:	ldr	r7, [r1, #56]	; 0x38
   27428:	str	r3, [sp, #60]	; 0x3c
   2742c:	add	lr, r6, lr
   27430:	ldr	r3, [sp, #24]
   27434:	eor	r6, ip, r9
   27438:	ldr	ip, [sp, #16]
   2743c:	add	r8, r4, r2
   27440:	eor	r5, r0, sl
   27444:	add	r6, r6, lr
   27448:	rev	lr, r7
   2744c:	ldr	r7, [r1, #60]	; 0x3c
   27450:	ldr	r1, [sp, #12]
   27454:	add	r9, r8, r9
   27458:	and	r5, r5, fp
   2745c:	eor	r8, ip, r3
   27460:	add	r6, r6, fp, ror #27
   27464:	eor	r5, r5, r0
   27468:	ror	fp, fp, #2
   2746c:	eor	r8, r8, r1
   27470:	add	r1, lr, r2
   27474:	eor	ip, sl, fp
   27478:	add	r0, r1, r0
   2747c:	add	r5, r5, r9
   27480:	ldr	r1, [sp, #4]
   27484:	rev	r9, r7
   27488:	ldr	r7, [sp, #20]
   2748c:	add	r5, r5, r6, ror #27
   27490:	str	lr, [sp, #16]
   27494:	and	ip, ip, r6
   27498:	ror	lr, r6, #2
   2749c:	ldr	r6, [sp, #40]	; 0x28
   274a0:	eor	r1, r7, r1
   274a4:	str	r4, [sp, #48]	; 0x30
   274a8:	eor	r8, r8, r4
   274ac:	eor	ip, ip, sl
   274b0:	eor	r4, fp, lr
   274b4:	eor	r1, r1, r6
   274b8:	ldr	r6, [sp, #8]
   274bc:	add	ip, ip, r0
   274c0:	and	r4, r4, r5
   274c4:	add	r0, r9, r2
   274c8:	ror	r8, r8, #31
   274cc:	eor	r4, r4, fp
   274d0:	add	r0, r0, sl
   274d4:	mov	sl, r3
   274d8:	eor	sl, sl, r6
   274dc:	ldr	r6, [sp, #16]
   274e0:	mov	r7, r9
   274e4:	add	r0, r4, r0
   274e8:	ror	r9, r5, #2
   274ec:	add	r4, r8, r2
   274f0:	add	ip, ip, r5, ror #27
   274f4:	str	r8, [sp, #20]
   274f8:	eor	r5, lr, r9
   274fc:	ldr	r8, [sp, #36]	; 0x24
   27500:	add	fp, r4, fp
   27504:	eor	r1, r1, r6
   27508:	ldr	r4, [sp, #4]
   2750c:	and	r5, r5, ip
   27510:	ldr	r6, [sp, #32]
   27514:	eor	sl, sl, r8
   27518:	ldr	r3, [sp, #60]	; 0x3c
   2751c:	eor	r5, r5, lr
   27520:	eor	r8, r4, r6
   27524:	add	r5, r5, fp
   27528:	eor	r8, r8, r3
   2752c:	ldr	fp, [sp, #8]
   27530:	ldr	r3, [sp, #28]
   27534:	add	r0, r0, ip, ror #27
   27538:	str	r7, [sp, #52]	; 0x34
   2753c:	ror	ip, ip, #2
   27540:	eor	sl, sl, r7
   27544:	eor	r7, fp, r3
   27548:	ldr	fp, [sp, #20]
   2754c:	ror	r1, r1, #31
   27550:	eor	r4, r9, ip
   27554:	add	r6, r1, r2
   27558:	and	r4, r4, r0
   2755c:	eor	r8, r8, fp
   27560:	add	r6, r6, lr
   27564:	ldr	fp, [sp, #44]	; 0x2c
   27568:	eor	r4, r4, r9
   2756c:	add	r5, r5, r0, ror #27
   27570:	str	r1, [sp, #24]
   27574:	ror	r0, r0, #2
   27578:	ldr	r1, [sp, #56]	; 0x38
   2757c:	ror	sl, sl, #31
   27580:	add	r4, r4, r6
   27584:	str	sl, [sp, #28]
   27588:	ldr	r6, [sp, #32]
   2758c:	ror	r8, r8, #31
   27590:	str	r8, [sp, #8]
   27594:	eor	lr, ip, r0
   27598:	ldr	r8, [sp, #24]
   2759c:	eor	r7, r7, fp
   275a0:	add	fp, sl, r2
   275a4:	and	lr, lr, r5
   275a8:	eor	r7, r7, r8
   275ac:	add	r9, fp, r9
   275b0:	ldr	fp, [sp, #8]
   275b4:	eor	lr, lr, ip
   275b8:	ldr	r8, [sp, #48]	; 0x30
   275bc:	add	lr, lr, r9
   275c0:	add	r2, fp, r2
   275c4:	ror	r9, r7, #31
   275c8:	ldr	fp, [sp, #12]
   275cc:	eor	r6, r6, r1
   275d0:	ror	sl, r5, #2
   275d4:	eor	r6, r6, r8
   275d8:	eor	r8, r3, fp
   275dc:	mov	r3, r9
   275e0:	ldr	r9, [sp, #28]
   275e4:	add	r5, r4, r5, ror #27
   275e8:	eor	r4, r0, sl
   275ec:	add	r2, r2, ip
   275f0:	and	r4, r4, r5
   275f4:	eor	r6, r6, r9
   275f8:	ldr	r9, [sp, #16]
   275fc:	add	lr, lr, r5, ror #27
   27600:	eor	ip, r4, r0
   27604:	ror	r5, r5, #2
   27608:	movw	r4, #60321	; 0xeba1
   2760c:	movt	r4, #28377	; 0x6ed9
   27610:	add	r7, r3, r4
   27614:	eor	r8, r8, r9
   27618:	eor	r9, sl, r5
   2761c:	str	r4, [sp, #4]
   27620:	eor	r9, r9, lr
   27624:	add	r0, r7, r0
   27628:	ldr	r4, [sp, #8]
   2762c:	add	ip, ip, r2
   27630:	add	r0, r9, r0
   27634:	mov	r2, r1
   27638:	ldr	r9, [sp, #4]
   2763c:	ror	fp, r6, #31
   27640:	ldr	r1, [sp, #40]	; 0x28
   27644:	add	ip, ip, lr, ror #27
   27648:	ldr	r6, [sp, #52]	; 0x34
   2764c:	ror	lr, lr, #2
   27650:	ldr	r7, [sp, #12]
   27654:	eor	r2, r2, r1
   27658:	eor	r8, r8, r4
   2765c:	add	r4, fp, r9
   27660:	ldr	r9, [sp, #36]	; 0x24
   27664:	eor	r2, r2, r6
   27668:	add	sl, r4, sl
   2766c:	eor	r6, r5, lr
   27670:	ldr	r4, [sp, #20]
   27674:	eor	r6, r6, ip
   27678:	eor	r7, r7, r9
   2767c:	ldr	r9, [sp, #4]
   27680:	add	r0, r0, ip, ror #27
   27684:	ror	r8, r8, #31
   27688:	ror	ip, ip, #2
   2768c:	eor	r7, r7, r4
   27690:	add	sl, r6, sl
   27694:	mov	r6, r1
   27698:	ldr	r1, [sp, #60]	; 0x3c
   2769c:	add	r4, r8, r9
   276a0:	str	r8, [sp, #32]
   276a4:	eor	r2, r2, r3
   276a8:	str	r3, [sp, #56]	; 0x38
   276ac:	eor	r8, lr, ip
   276b0:	ldr	r3, [sp, #24]
   276b4:	eor	r7, r7, fp
   276b8:	eor	r8, r8, r0
   276bc:	eor	r6, r6, r1
   276c0:	add	r5, r4, r5
   276c4:	eor	r6, r6, r3
   276c8:	add	r5, r8, r5
   276cc:	ldr	r3, [sp, #44]	; 0x2c
   276d0:	ldr	r8, [sp, #36]	; 0x24
   276d4:	ror	r7, r7, #31
   276d8:	ror	r2, r2, #31
   276dc:	add	sl, sl, r0, ror #27
   276e0:	add	r9, r2, r9
   276e4:	eor	r8, r8, r3
   276e8:	mov	r3, r7
   276ec:	ldr	r7, [sp, #32]
   276f0:	add	lr, r9, lr
   276f4:	ldr	r9, [sp, #28]
   276f8:	ror	r0, r0, #2
   276fc:	eor	r6, r6, r7
   27700:	eor	r4, ip, r0
   27704:	eor	r8, r8, r9
   27708:	ldr	r9, [sp, #4]
   2770c:	add	r5, r5, sl, ror #27
   27710:	ldr	r7, [sp, #48]	; 0x30
   27714:	eor	r4, r4, sl
   27718:	ror	r6, r6, #31
   2771c:	ror	sl, sl, #2
   27720:	add	r9, r3, r9
   27724:	add	r4, r4, lr
   27728:	eor	lr, r0, sl
   2772c:	str	r3, [sp, #36]	; 0x24
   27730:	add	ip, r9, ip
   27734:	eor	r7, r1, r7
   27738:	eor	lr, lr, r5
   2773c:	mov	r1, r6
   27740:	ldr	r6, [sp, #8]
   27744:	eor	r8, r8, r2
   27748:	ldr	r9, [sp, #4]
   2774c:	add	lr, lr, ip
   27750:	ldr	ip, [sp, #36]	; 0x24
   27754:	add	r4, r4, r5, ror #27
   27758:	eor	r7, r7, r6
   2775c:	ror	r5, r5, #2
   27760:	ldr	r3, [sp, #44]	; 0x2c
   27764:	add	r9, r1, r9
   27768:	eor	r6, sl, r5
   2776c:	eor	r7, r7, ip
   27770:	ror	ip, r8, #31
   27774:	ldr	r8, [sp, #16]
   27778:	add	r0, r9, r0
   2777c:	eor	r6, r6, r4
   27780:	str	ip, [sp, #40]	; 0x28
   27784:	eor	r8, r3, r8
   27788:	ldr	ip, [sp, #56]	; 0x38
   2778c:	add	r6, r6, r0
   27790:	ldr	r3, [sp, #40]	; 0x28
   27794:	add	lr, lr, r4, ror #27
   27798:	ldr	r0, [sp, #4]
   2779c:	ror	r4, r4, #2
   277a0:	eor	r8, r8, ip
   277a4:	str	r1, [sp, #60]	; 0x3c
   277a8:	add	r9, r3, r0
   277ac:	ror	r0, r7, #31
   277b0:	ldr	r7, [sp, #52]	; 0x34
   277b4:	eor	ip, r5, r4
   277b8:	str	r0, [sp, #12]
   277bc:	eor	r8, r8, r1
   277c0:	ldr	r0, [sp, #48]	; 0x30
   277c4:	add	r6, r6, lr, ror #27
   277c8:	ldr	r1, [sp, #12]
   277cc:	add	sl, r9, sl
   277d0:	eor	r7, r0, r7
   277d4:	ldr	r0, [sp, #4]
   277d8:	eor	ip, ip, lr
   277dc:	ror	lr, lr, #2
   277e0:	add	r9, r1, r0
   277e4:	add	ip, ip, sl
   277e8:	eor	r0, r4, lr
   277ec:	ror	sl, r8, #31
   277f0:	ldr	r8, [sp, #16]
   277f4:	eor	r0, r0, r6
   277f8:	str	sl, [sp, #44]	; 0x2c
   277fc:	eor	r7, r7, fp
   27800:	ldr	sl, [sp, #20]
   27804:	add	r5, r9, r5
   27808:	ldr	r9, [sp, #32]
   2780c:	eor	r7, r7, r3
   27810:	eor	r8, r8, sl
   27814:	ldr	r3, [sp, #44]	; 0x2c
   27818:	add	r5, r0, r5
   2781c:	ldr	r0, [sp, #4]
   27820:	eor	r8, r8, r9
   27824:	add	ip, ip, r6, ror #27
   27828:	add	r9, r3, r0
   2782c:	eor	r8, r8, r1
   27830:	ldr	r0, [sp, #52]	; 0x34
   27834:	ror	r6, r6, #2
   27838:	ldr	r1, [sp, #24]
   2783c:	ror	r7, r7, #31
   27840:	str	r7, [sp, #16]
   27844:	eor	sl, lr, r6
   27848:	eor	r7, r0, r1
   2784c:	add	r4, r9, r4
   27850:	ldr	r1, [sp, #16]
   27854:	eor	sl, sl, ip
   27858:	ldr	r9, [sp, #4]
   2785c:	add	r5, r5, ip, ror #27
   27860:	add	r4, sl, r4
   27864:	ror	ip, ip, #2
   27868:	ldr	sl, [sp, #28]
   2786c:	add	r9, r1, r9
   27870:	ror	r8, r8, #31
   27874:	str	r8, [sp, #48]	; 0x30
   27878:	ldr	r8, [sp, #20]
   2787c:	eor	r0, r6, ip
   27880:	add	lr, r9, lr
   27884:	ldr	r9, [sp, #36]	; 0x24
   27888:	eor	r0, r0, r5
   2788c:	eor	r8, r8, sl
   27890:	eor	r8, r8, r9
   27894:	add	lr, r0, lr
   27898:	ldr	r9, [sp, #48]	; 0x30
   2789c:	eor	r8, r8, r1
   278a0:	ldr	r0, [sp, #4]
   278a4:	add	r4, r4, r5, ror #27
   278a8:	ldr	r1, [sp, #24]
   278ac:	ror	r5, r5, #2
   278b0:	add	r9, r9, r0
   278b4:	ldr	r0, [sp, #8]
   278b8:	eor	r7, r7, r2
   278bc:	eor	sl, ip, r5
   278c0:	eor	r7, r7, r3
   278c4:	eor	r1, r1, r0
   278c8:	ldr	r0, [sp, #60]	; 0x3c
   278cc:	eor	sl, sl, r4
   278d0:	add	r6, r9, r6
   278d4:	ror	r7, r7, #31
   278d8:	ldr	r9, [sp, #48]	; 0x30
   278dc:	eor	r1, r1, r0
   278e0:	add	r6, sl, r6
   278e4:	ldr	r0, [sp, #4]
   278e8:	ror	r8, r8, #31
   278ec:	str	r8, [sp, #20]
   278f0:	ldr	sl, [sp, #28]
   278f4:	add	lr, lr, r4, ror #27
   278f8:	ldr	r8, [sp, #56]	; 0x38
   278fc:	ror	r4, r4, #2
   27900:	mov	r3, r7
   27904:	eor	r1, r1, r9
   27908:	add	r7, r7, r0
   2790c:	eor	r8, sl, r8
   27910:	eor	r0, r5, r4
   27914:	ldr	sl, [sp, #40]	; 0x28
   27918:	eor	r0, r0, lr
   2791c:	add	ip, r7, ip
   27920:	eor	r8, r8, sl
   27924:	add	ip, r0, ip
   27928:	ldr	sl, [sp, #20]
   2792c:	ror	r1, r1, #31
   27930:	ldr	r0, [sp, #4]
   27934:	add	r6, r6, lr, ror #27
   27938:	ror	lr, lr, #2
   2793c:	eor	r8, r8, r3
   27940:	add	r9, sl, r0
   27944:	eor	sl, r4, lr
   27948:	mov	r0, r1
   2794c:	ldr	r1, [sp, #8]
   27950:	ldr	r7, [sp, #12]
   27954:	eor	sl, sl, r6
   27958:	add	r5, r9, r5
   2795c:	eor	r1, r1, fp
   27960:	add	r5, sl, r5
   27964:	ror	sl, r8, #31
   27968:	str	sl, [sp, #24]
   2796c:	eor	r1, r1, r7
   27970:	ldr	sl, [sp, #20]
   27974:	add	ip, ip, r6, ror #27
   27978:	str	r3, [sp, #52]	; 0x34
   2797c:	mov	r3, r0
   27980:	ldr	r0, [sp, #4]
   27984:	ror	r6, r6, #2
   27988:	ldr	r8, [sp, #56]	; 0x38
   2798c:	eor	r1, r1, sl
   27990:	ldr	sl, [sp, #32]
   27994:	add	r9, r3, r0
   27998:	eor	r0, lr, r6
   2799c:	add	r4, r9, r4
   279a0:	eor	r7, r8, sl
   279a4:	eor	r0, r0, ip
   279a8:	ldr	r8, [sp, #44]	; 0x2c
   279ac:	add	r4, r0, r4
   279b0:	ldr	r9, [sp, #24]
   279b4:	add	r5, r5, ip, ror #27
   279b8:	ldr	r0, [sp, #4]
   279bc:	ror	ip, ip, #2
   279c0:	eor	r7, r7, r8
   279c4:	ror	r1, r1, #31
   279c8:	add	sl, r9, r0
   279cc:	eor	r8, r6, ip
   279d0:	eor	r7, r7, r3
   279d4:	mov	r0, r1
   279d8:	eor	r8, r8, r5
   279dc:	ldr	r1, [sp, #16]
   279e0:	add	lr, sl, lr
   279e4:	eor	fp, fp, r2
   279e8:	add	lr, r8, lr
   279ec:	ror	r8, r7, #31
   279f0:	eor	fp, fp, r1
   279f4:	ldr	r1, [sp, #4]
   279f8:	add	r4, r4, r5, ror #27
   279fc:	mov	sl, r8
   27a00:	ror	r5, r5, #2
   27a04:	eor	fp, fp, r9
   27a08:	ldrd	r8, [sp, #32]
   27a0c:	add	lr, lr, r4, ror #27
   27a10:	str	r3, [sp, #64]	; 0x40
   27a14:	mov	r3, r0
   27a18:	add	r0, r0, r1
   27a1c:	eor	r1, ip, r5
   27a20:	eor	r7, r8, r9
   27a24:	eor	r1, r1, r4
   27a28:	ldr	r9, [sp, #48]	; 0x30
   27a2c:	add	r6, r0, r6
   27a30:	add	r6, r1, r6
   27a34:	ror	fp, fp, #31
   27a38:	ldr	r1, [sp, #4]
   27a3c:	ror	r4, r4, #2
   27a40:	eor	r7, r7, r9
   27a44:	mov	r8, sl
   27a48:	add	r9, sl, r1
   27a4c:	mov	r0, fp
   27a50:	eor	sl, r5, r4
   27a54:	ldr	fp, [sp, #60]	; 0x3c
   27a58:	eor	r7, r7, r3
   27a5c:	ldr	r1, [sp, #52]	; 0x34
   27a60:	eor	sl, sl, lr
   27a64:	add	ip, r9, ip
   27a68:	eor	r2, r2, fp
   27a6c:	add	ip, sl, ip
   27a70:	ror	sl, r7, #31
   27a74:	eor	r2, r2, r1
   27a78:	str	r8, [sp, #60]	; 0x3c
   27a7c:	eor	r2, r2, r8
   27a80:	ldr	r1, [sp, #4]
   27a84:	mov	r9, sl
   27a88:	ldr	r8, [sp, #36]	; 0x24
   27a8c:	add	r6, r6, lr, ror #27
   27a90:	ldr	sl, [sp, #40]	; 0x28
   27a94:	ror	lr, lr, #2
   27a98:	str	r3, [sp, #56]	; 0x38
   27a9c:	mov	r3, r0
   27aa0:	eor	r7, r8, sl
   27aa4:	add	r0, r0, r1
   27aa8:	ldr	r8, [sp, #4]
   27aac:	eor	r1, r4, lr
   27ab0:	add	ip, ip, r6, ror #27
   27ab4:	eor	r1, r1, r6
   27ab8:	ror	r6, r6, #2
   27abc:	add	r5, r0, r5
   27ac0:	ror	r2, r2, #31
   27ac4:	mov	r0, r9
   27ac8:	str	r2, [sp, #8]
   27acc:	add	r9, r9, r8
   27ad0:	ldr	r2, [sp, #20]
   27ad4:	eor	r8, lr, r6
   27ad8:	str	r3, [sp, #40]	; 0x28
   27adc:	eor	r8, r8, ip
   27ae0:	add	r5, r1, r5
   27ae4:	add	r4, r9, r4
   27ae8:	ldr	r1, [sp, #12]
   27aec:	add	r9, r8, r4
   27af0:	eor	r7, r7, r2
   27af4:	ldr	r4, [sp, #64]	; 0x40
   27af8:	eor	r7, r7, r3
   27afc:	eor	r2, fp, r1
   27b00:	ldmib	sp, {r3, fp}
   27b04:	eor	r2, r2, r4
   27b08:	eor	r2, r2, r0
   27b0c:	add	r5, r5, ip, ror #27
   27b10:	add	r3, fp, r3
   27b14:	ldr	fp, [sp, #44]	; 0x2c
   27b18:	ror	ip, ip, #2
   27b1c:	add	lr, r3, lr
   27b20:	eor	r8, sl, fp
   27b24:	ror	r3, r7, #31
   27b28:	ror	sl, r2, #31
   27b2c:	str	sl, [sp, #4]
   27b30:	ldr	sl, [sp, #24]
   27b34:	eor	r1, r6, ip
   27b38:	add	r9, r9, r5, ror #27
   27b3c:	mov	r4, r3
   27b40:	eor	r1, r1, r5
   27b44:	eor	r8, r8, sl
   27b48:	movw	r3, #48348	; 0xbcdc
   27b4c:	ldr	sl, [sp, #8]
   27b50:	movt	r3, #36635	; 0x8f1b
   27b54:	ror	r5, r5, #2
   27b58:	add	lr, r1, lr
   27b5c:	add	r1, r4, r3
   27b60:	add	lr, lr, r9, ror #27
   27b64:	str	r4, [sp, #44]	; 0x2c
   27b68:	eor	r8, r8, sl
   27b6c:	orr	r4, r9, r5
   27b70:	ldr	sl, [sp, #16]
   27b74:	add	r6, r1, r6
   27b78:	ldr	r1, [sp, #12]
   27b7c:	and	r4, r4, ip
   27b80:	str	r0, [sp, #68]	; 0x44
   27b84:	ror	r0, r9, #2
   27b88:	and	r9, r9, r5
   27b8c:	eor	r7, r1, sl
   27b90:	orr	r4, r4, r9
   27b94:	ldr	sl, [sp, #56]	; 0x38
   27b98:	add	r6, r6, lr, ror #27
   27b9c:	orr	r2, lr, r0
   27ba0:	add	r6, r4, r6
   27ba4:	ldr	r4, [sp, #44]	; 0x2c
   27ba8:	and	r9, lr, r0
   27bac:	ldr	r1, [sp, #4]
   27bb0:	and	r2, r2, r5
   27bb4:	eor	r7, r7, sl
   27bb8:	orr	r2, r2, r9
   27bbc:	eor	r7, r7, r4
   27bc0:	ldr	r9, [sp, #48]	; 0x30
   27bc4:	add	r1, r1, r3
   27bc8:	add	ip, r1, ip
   27bcc:	ror	r1, r8, #31
   27bd0:	eor	r8, fp, r9
   27bd4:	ror	fp, r7, #31
   27bd8:	str	fp, [sp, #12]
   27bdc:	ror	lr, lr, #2
   27be0:	ldr	fp, [sp, #60]	; 0x3c
   27be4:	add	r4, r1, r3
   27be8:	add	ip, r2, ip
   27bec:	add	r5, r4, r5
   27bf0:	eor	r8, r8, fp
   27bf4:	ldr	fp, [sp, #4]
   27bf8:	ldr	r4, [sp, #16]
   27bfc:	orr	r2, r6, lr
   27c00:	eor	r8, r8, fp
   27c04:	ldr	fp, [sp, #52]	; 0x34
   27c08:	add	ip, ip, r6, ror #27
   27c0c:	str	r1, [sp, #28]
   27c10:	and	r2, r2, r0
   27c14:	ror	r1, r6, #2
   27c18:	and	r6, r6, lr
   27c1c:	eor	r7, r4, fp
   27c20:	orr	r6, r2, r6
   27c24:	ldr	r4, [sp, #40]	; 0x28
   27c28:	ldr	r2, [sp, #12]
   27c2c:	orr	sl, ip, r1
   27c30:	add	r5, r5, ip, ror #27
   27c34:	and	fp, ip, r1
   27c38:	add	r5, r6, r5
   27c3c:	add	r2, r2, r3
   27c40:	ror	r6, r8, #31
   27c44:	and	sl, sl, lr
   27c48:	ldr	r8, [sp, #28]
   27c4c:	eor	r7, r7, r4
   27c50:	ldr	r4, [sp, #20]
   27c54:	add	r0, r2, r0
   27c58:	str	r6, [sp, #48]	; 0x30
   27c5c:	add	r2, r6, r3
   27c60:	orr	sl, sl, fp
   27c64:	ldr	r6, [sp, #68]	; 0x44
   27c68:	ror	ip, ip, #2
   27c6c:	eor	r7, r7, r8
   27c70:	add	sl, sl, r0
   27c74:	eor	r8, r9, r4
   27c78:	add	lr, r2, lr
   27c7c:	ldr	r2, [sp, #12]
   27c80:	add	sl, sl, r5, ror #27
   27c84:	orr	r0, r5, ip
   27c88:	eor	r8, r8, r6
   27c8c:	ror	fp, r5, #2
   27c90:	ror	r9, r7, #31
   27c94:	and	r0, r0, r1
   27c98:	str	r9, [sp, #16]
   27c9c:	eor	r8, r8, r2
   27ca0:	and	r5, r5, ip
   27ca4:	ldr	r9, [sp, #64]	; 0x40
   27ca8:	ldr	r6, [sp, #52]	; 0x34
   27cac:	orr	r5, r0, r5
   27cb0:	add	lr, lr, sl, ror #27
   27cb4:	ldr	r0, [sp, #16]
   27cb8:	add	lr, r5, lr
   27cbc:	ror	r5, r8, #31
   27cc0:	add	r2, r0, r3
   27cc4:	orr	r4, sl, fp
   27cc8:	eor	r7, r6, r9
   27ccc:	ldr	r6, [sp, #8]
   27cd0:	and	r0, sl, fp
   27cd4:	add	r1, r2, r1
   27cd8:	and	r4, r4, ip
   27cdc:	mov	r2, r5
   27ce0:	ldr	r5, [sp, #48]	; 0x30
   27ce4:	eor	r7, r7, r6
   27ce8:	orr	r4, r4, r0
   27cec:	ldr	r6, [sp, #44]	; 0x2c
   27cf0:	eor	r7, r7, r5
   27cf4:	add	r4, r4, r1
   27cf8:	ldr	r5, [sp, #24]
   27cfc:	ror	sl, sl, #2
   27d00:	ldr	r1, [sp, #20]
   27d04:	add	r4, r4, lr, ror #27
   27d08:	str	r2, [sp, #24]
   27d0c:	ror	r0, lr, #2
   27d10:	eor	r8, r1, r5
   27d14:	add	r1, r2, r3
   27d18:	add	ip, r1, ip
   27d1c:	ldr	r1, [sp, #16]
   27d20:	orr	r2, lr, sl
   27d24:	eor	r8, r8, r6
   27d28:	and	r2, r2, fp
   27d2c:	eor	r8, r8, r1
   27d30:	and	lr, lr, sl
   27d34:	ldr	r1, [sp, #56]	; 0x38
   27d38:	add	ip, ip, r4, ror #27
   27d3c:	orr	lr, r2, lr
   27d40:	add	lr, lr, ip
   27d44:	ror	r7, r7, #31
   27d48:	ror	ip, r8, #31
   27d4c:	add	r2, r7, r3
   27d50:	eor	r1, r9, r1
   27d54:	ldr	r9, [sp, #4]
   27d58:	add	fp, r2, fp
   27d5c:	mov	r2, ip
   27d60:	ldr	ip, [sp, #24]
   27d64:	eor	r1, r1, r9
   27d68:	ldr	r8, [sp, #60]	; 0x3c
   27d6c:	orr	r6, r4, r0
   27d70:	eor	r1, r1, ip
   27d74:	ror	r9, r4, #2
   27d78:	str	r7, [sp, #64]	; 0x40
   27d7c:	and	r6, r6, sl
   27d80:	and	r7, r4, r0
   27d84:	orr	ip, lr, r9
   27d88:	orr	r6, r6, r7
   27d8c:	eor	r7, r5, r8
   27d90:	ror	r5, r1, #31
   27d94:	str	r5, [sp, #36]	; 0x24
   27d98:	ldr	r5, [sp, #28]
   27d9c:	add	fp, r6, fp
   27da0:	and	r6, ip, r0
   27da4:	ldr	ip, [sp, #64]	; 0x40
   27da8:	eor	r7, r7, r5
   27dac:	ldr	r1, [sp, #56]	; 0x38
   27db0:	eor	r7, r7, ip
   27db4:	ldr	ip, [sp, #40]	; 0x28
   27db8:	add	fp, fp, lr, ror #27
   27dbc:	ror	r4, lr, #2
   27dc0:	and	lr, lr, r9
   27dc4:	eor	r1, r1, ip
   27dc8:	orr	ip, r6, lr
   27dcc:	ldr	lr, [sp, #36]	; 0x24
   27dd0:	str	r2, [sp, #32]
   27dd4:	add	r2, r2, r3
   27dd8:	add	r5, lr, r3
   27ddc:	add	sl, r2, sl
   27de0:	ldr	lr, [sp, #12]
   27de4:	add	sl, sl, fp, ror #27
   27de8:	orr	r8, fp, r4
   27dec:	and	r2, fp, r4
   27df0:	eor	r1, r1, lr
   27df4:	add	lr, ip, sl
   27df8:	ror	sl, r7, #31
   27dfc:	and	r8, r8, r9
   27e00:	orr	r8, r8, r2
   27e04:	add	r0, r5, r0
   27e08:	mov	ip, sl
   27e0c:	ldr	sl, [sp, #32]
   27e10:	add	r5, r8, r0
   27e14:	ror	r8, fp, #2
   27e18:	eor	r6, r1, sl
   27e1c:	ldr	fp, [sp, #68]	; 0x44
   27e20:	ldr	r1, [sp, #60]	; 0x3c
   27e24:	add	r5, r5, lr, ror #27
   27e28:	ror	sl, lr, #2
   27e2c:	add	r0, ip, r3
   27e30:	eor	r7, r1, fp
   27e34:	ror	r1, r6, #31
   27e38:	str	r1, [sp, #20]
   27e3c:	orr	r2, lr, r8
   27e40:	ldr	r1, [sp, #48]	; 0x30
   27e44:	add	r9, r0, r9
   27e48:	str	ip, [sp, #56]	; 0x38
   27e4c:	and	ip, lr, r8
   27e50:	ldr	lr, [sp, #36]	; 0x24
   27e54:	eor	r7, r7, r1
   27e58:	ldr	r1, [sp, #40]	; 0x28
   27e5c:	and	r2, r2, r4
   27e60:	eor	r7, r7, lr
   27e64:	ldr	lr, [sp, #8]
   27e68:	add	r9, r9, r5, ror #27
   27e6c:	orr	r2, r2, ip
   27e70:	eor	r0, r1, lr
   27e74:	ldr	r1, [sp, #20]
   27e78:	add	r2, r2, r9
   27e7c:	orr	r6, r5, sl
   27e80:	ror	r9, r7, #31
   27e84:	add	lr, r1, r3
   27e88:	and	ip, r5, sl
   27e8c:	ldr	r1, [sp, #16]
   27e90:	and	r6, r6, r8
   27e94:	add	r4, lr, r4
   27e98:	orr	r6, r6, ip
   27e9c:	mov	ip, r9
   27ea0:	ldr	r9, [sp, #56]	; 0x38
   27ea4:	eor	r0, r0, r1
   27ea8:	add	lr, r6, r4
   27eac:	ldr	r6, [sp, #44]	; 0x2c
   27eb0:	eor	r0, r0, r9
   27eb4:	str	ip, [sp, #60]	; 0x3c
   27eb8:	add	ip, ip, r3
   27ebc:	ror	r5, r5, #2
   27ec0:	ror	r4, r0, #31
   27ec4:	eor	r9, fp, r6
   27ec8:	add	ip, ip, r8
   27ecc:	ldr	r8, [sp, #20]
   27ed0:	mov	r7, r4
   27ed4:	ldr	r4, [sp, #24]
   27ed8:	add	lr, lr, r2, ror #27
   27edc:	orr	r1, r2, r5
   27ee0:	eor	r9, r9, r4
   27ee4:	ror	fp, r2, #2
   27ee8:	eor	r9, r9, r8
   27eec:	and	r2, r2, r5
   27ef0:	and	r1, r1, sl
   27ef4:	ldmib	sp, {r4, r8}
   27ef8:	add	ip, ip, lr, ror #27
   27efc:	orr	r1, r1, r2
   27f00:	add	r1, r1, ip
   27f04:	orr	r0, lr, fp
   27f08:	ror	ip, r9, #31
   27f0c:	ldr	r2, [sp, #64]	; 0x40
   27f10:	and	r0, r0, r5
   27f14:	eor	r8, r4, r8
   27f18:	and	r4, lr, fp
   27f1c:	eor	r8, r8, r2
   27f20:	orr	r4, r0, r4
   27f24:	mov	r0, ip
   27f28:	ldr	ip, [sp, #60]	; 0x3c
   27f2c:	ror	lr, lr, #2
   27f30:	str	r7, [sp, #40]	; 0x28
   27f34:	add	r7, r7, r3
   27f38:	eor	r8, r8, ip
   27f3c:	add	sl, r7, sl
   27f40:	ldr	ip, [sp, #28]
   27f44:	add	r4, r4, sl
   27f48:	ror	sl, r8, #31
   27f4c:	str	sl, [sp, #8]
   27f50:	ldr	sl, [sp, #32]
   27f54:	eor	r9, r6, ip
   27f58:	add	r4, r4, r1, ror #27
   27f5c:	add	r2, r0, r3
   27f60:	eor	r9, r9, sl
   27f64:	ldr	sl, [sp, #40]	; 0x28
   27f68:	ldr	r8, [sp, #4]
   27f6c:	orr	r6, r1, lr
   27f70:	eor	r9, r9, sl
   27f74:	ldr	sl, [sp, #12]
   27f78:	ror	ip, r1, #2
   27f7c:	add	r5, r2, r5
   27f80:	and	r1, r1, lr
   27f84:	and	r6, r6, fp
   27f88:	eor	r7, r8, sl
   27f8c:	add	r5, r5, r4, ror #27
   27f90:	ldr	r8, [sp, #8]
   27f94:	orr	r6, r6, r1
   27f98:	add	r6, r6, r5
   27f9c:	ror	r5, r9, #31
   27fa0:	str	r0, [sp, #44]	; 0x2c
   27fa4:	add	sl, r8, r3
   27fa8:	ldr	r8, [sp, #36]	; 0x24
   27fac:	mov	r2, r5
   27fb0:	ldr	r5, [sp, #44]	; 0x2c
   27fb4:	orr	r0, r4, ip
   27fb8:	eor	r7, r7, r8
   27fbc:	and	r1, r4, ip
   27fc0:	and	r0, r0, lr
   27fc4:	eor	r7, r7, r5
   27fc8:	add	fp, sl, fp
   27fcc:	orr	r1, r0, r1
   27fd0:	add	r1, r1, fp
   27fd4:	ror	fp, r7, #31
   27fd8:	ror	r8, r4, #2
   27fdc:	ldr	r0, [sp, #48]	; 0x30
   27fe0:	ldr	r4, [sp, #28]
   27fe4:	mov	r7, fp
   27fe8:	ldr	fp, [sp, #56]	; 0x38
   27fec:	add	r1, r1, r6, ror #27
   27ff0:	ldr	r9, [sp, #8]
   27ff4:	eor	sl, r4, r0
   27ff8:	eor	sl, sl, fp
   27ffc:	ror	r5, r6, #2
   28000:	str	r2, [sp, #28]
   28004:	add	r4, r2, r3
   28008:	eor	sl, sl, r9
   2800c:	orr	r2, r6, r8
   28010:	ldr	r9, [sp, #12]
   28014:	and	r6, r6, r8
   28018:	ldr	fp, [sp, #16]
   2801c:	add	r4, r4, lr
   28020:	and	r2, r2, ip
   28024:	orr	lr, r1, r5
   28028:	add	r4, r4, r1, ror #27
   2802c:	and	lr, lr, r8
   28030:	eor	fp, r9, fp
   28034:	orr	r2, r2, r6
   28038:	and	r9, r1, r5
   2803c:	ldr	r6, [sp, #20]
   28040:	add	r2, r2, r4
   28044:	orr	r9, lr, r9
   28048:	ror	r4, sl, #31
   2804c:	ldr	lr, [sp, #28]
   28050:	str	r7, [sp, #48]	; 0x30
   28054:	eor	fp, fp, r6
   28058:	add	r7, r7, r3
   2805c:	eor	fp, fp, lr
   28060:	add	ip, r7, ip
   28064:	mov	r7, r4
   28068:	ldr	r4, [sp, #24]
   2806c:	add	ip, r9, ip
   28070:	ldr	r9, [sp, #60]	; 0x3c
   28074:	add	r6, ip, r2, ror #27
   28078:	str	r7, [sp, #52]	; 0x34
   2807c:	ror	sl, r1, #2
   28080:	ror	ip, fp, #31
   28084:	ldr	r1, [sp, #16]
   28088:	str	ip, [sp, #4]
   2808c:	mov	lr, r0
   28090:	ldr	fp, [sp, #64]	; 0x40
   28094:	eor	lr, lr, r4
   28098:	ldr	ip, [sp, #48]	; 0x30
   2809c:	orr	r0, r2, sl
   280a0:	eor	lr, lr, r9
   280a4:	add	r4, r7, r3
   280a8:	eor	lr, lr, ip
   280ac:	eor	r9, r1, fp
   280b0:	and	r1, r0, r5
   280b4:	ldr	r0, [sp, #4]
   280b8:	ror	r7, r2, #2
   280bc:	add	r4, r4, r8
   280c0:	and	r2, r2, sl
   280c4:	ldr	r8, [sp, #40]	; 0x28
   280c8:	add	r3, r0, r3
   280cc:	orr	r0, r1, r2
   280d0:	ror	r1, lr, #31
   280d4:	str	r1, [sp, #12]
   280d8:	ldr	r1, [sp, #52]	; 0x34
   280dc:	eor	r9, r9, r8
   280e0:	ldr	lr, [sp, #32]
   280e4:	orr	ip, r6, r7
   280e8:	eor	r9, r9, r1
   280ec:	ldr	r1, [sp, #24]
   280f0:	add	r4, r4, r6, ror #27
   280f4:	and	r8, r6, r7
   280f8:	eor	lr, r1, lr
   280fc:	add	r1, r3, r5
   28100:	ldr	r5, [sp, #44]	; 0x2c
   28104:	add	r0, r0, r4
   28108:	and	ip, ip, sl
   2810c:	ldr	r4, [sp, #12]
   28110:	eor	lr, lr, r5
   28114:	ldr	r5, [sp, #4]
   28118:	orr	r2, ip, r8
   2811c:	movw	r3, #49622	; 0xc1d6
   28120:	ror	ip, r6, #2
   28124:	movt	r3, #51810	; 0xca62
   28128:	ror	r6, r9, #31
   2812c:	ldr	r9, [sp, #36]	; 0x24
   28130:	ldr	r8, [sp, #8]
   28134:	eor	lr, lr, r5
   28138:	add	r2, r2, r1
   2813c:	add	r1, r4, r3
   28140:	eor	r4, r7, ip
   28144:	add	r2, r2, r0, ror #27
   28148:	eor	r5, fp, r9
   2814c:	add	r1, r1, sl
   28150:	ldr	fp, [sp, #12]
   28154:	eor	r4, r4, r0
   28158:	ror	r0, r0, #2
   2815c:	ldr	sl, [sp, #56]	; 0x38
   28160:	str	r6, [sp, #24]
   28164:	eor	r5, r5, r8
   28168:	add	r4, r4, r1
   2816c:	ror	r8, lr, #31
   28170:	eor	r1, ip, r0
   28174:	ldr	lr, [sp, #32]
   28178:	add	r6, r6, r3
   2817c:	eor	r5, r5, fp
   28180:	add	r6, r6, r7
   28184:	ldr	fp, [sp, #28]
   28188:	eor	r1, r1, r2
   2818c:	eor	lr, lr, sl
   28190:	add	r1, r1, r6
   28194:	ldr	r6, [sp, #24]
   28198:	eor	lr, lr, fp
   2819c:	add	r4, r4, r2, ror #27
   281a0:	eor	lr, lr, r6
   281a4:	ror	r2, r2, #2
   281a8:	ldr	r6, [sp, #20]
   281ac:	eor	r7, r0, r2
   281b0:	str	r8, [sp, #32]
   281b4:	add	r8, r8, r3
   281b8:	add	r1, r1, r4, ror #27
   281bc:	ror	fp, r5, #31
   281c0:	eor	r5, r9, r6
   281c4:	add	r6, r8, ip
   281c8:	ror	ip, r4, #2
   281cc:	eor	r8, r7, r4
   281d0:	ldr	r4, [sp, #48]	; 0x30
   281d4:	add	r8, r8, r6
   281d8:	str	fp, [sp, #16]
   281dc:	eor	fp, r2, ip
   281e0:	eor	r5, r5, r4
   281e4:	ldr	r4, [sp, #16]
   281e8:	ror	r9, r1, #2
   281ec:	add	r8, r8, r1, ror #27
   281f0:	add	r6, r4, r3
   281f4:	ror	r4, lr, #31
   281f8:	ldr	lr, [sp, #32]
   281fc:	eor	fp, fp, r1
   28200:	str	r4, [sp, #56]	; 0x38
   28204:	add	r0, r6, r0
   28208:	eor	r5, r5, lr
   2820c:	ldr	lr, [sp, #60]	; 0x3c
   28210:	add	r4, r4, r3
   28214:	add	fp, fp, r0
   28218:	eor	r7, sl, lr
   2821c:	ldr	sl, [sp, #52]	; 0x34
   28220:	ror	r1, r5, #31
   28224:	str	r1, [sp, #36]	; 0x24
   28228:	ldr	r1, [sp, #16]
   2822c:	eor	r7, r7, sl
   28230:	eor	sl, ip, r9
   28234:	add	r2, r4, r2
   28238:	eor	r7, r7, r1
   2823c:	ldr	r1, [sp, #20]
   28240:	ldr	r5, [sp, #40]	; 0x28
   28244:	eor	sl, sl, r8
   28248:	ldr	r4, [sp, #56]	; 0x38
   2824c:	add	sl, sl, r2
   28250:	eor	r6, r1, r5
   28254:	ldr	r1, [sp, #4]
   28258:	ldr	r2, [sp, #36]	; 0x24
   2825c:	add	fp, fp, r8, ror #27
   28260:	eor	r6, r6, r1
   28264:	ror	r8, r8, #2
   28268:	eor	r6, r6, r4
   2826c:	ldr	r4, [sp, #44]	; 0x2c
   28270:	eor	r0, r9, r8
   28274:	add	r1, r2, r3
   28278:	ldr	r2, [sp, #12]
   2827c:	add	sl, sl, fp, ror #27
   28280:	ror	r7, r7, #31
   28284:	eor	r5, lr, r4
   28288:	eor	r0, r0, fp
   2828c:	ldr	r4, [sp, #8]
   28290:	ror	fp, fp, #2
   28294:	add	r1, r1, ip
   28298:	ldr	ip, [sp, #40]	; 0x28
   2829c:	add	lr, r7, r3
   282a0:	eor	r5, r5, r2
   282a4:	ror	r6, r6, #31
   282a8:	eor	r2, r8, fp
   282ac:	str	r6, [sp, #20]
   282b0:	ldr	r6, [sp, #24]
   282b4:	add	lr, lr, r9
   282b8:	eor	ip, ip, r4
   282bc:	eor	r2, r2, sl
   282c0:	ldr	r9, [sp, #28]
   282c4:	eor	ip, ip, r6
   282c8:	add	r2, r2, lr
   282cc:	ldr	lr, [sp, #44]	; 0x2c
   282d0:	ldr	r6, [sp, #20]
   282d4:	eor	ip, ip, r7
   282d8:	add	r1, r0, r1
   282dc:	ldr	r0, [sp, #36]	; 0x24
   282e0:	add	r1, r1, sl, ror #27
   282e4:	eor	r9, lr, r9
   282e8:	ror	sl, sl, #2
   282ec:	ldr	lr, [sp, #32]
   282f0:	eor	r4, fp, sl
   282f4:	eor	r5, r5, r0
   282f8:	add	r0, r6, r3
   282fc:	ror	r6, ip, #31
   28300:	ldr	ip, [sp, #20]
   28304:	add	r8, r0, r8
   28308:	eor	r4, r4, r1
   2830c:	eor	r9, r9, lr
   28310:	add	r2, r2, r1, ror #27
   28314:	ror	r5, r5, #31
   28318:	ror	r1, r1, #2
   2831c:	eor	r9, r9, ip
   28320:	add	r4, r4, r8
   28324:	ldr	ip, [sp, #8]
   28328:	ldr	r8, [sp, #48]	; 0x30
   2832c:	add	r0, r5, r3
   28330:	eor	lr, sl, r1
   28334:	add	fp, r0, fp
   28338:	eor	r8, ip, r8
   2833c:	eor	lr, lr, r2
   28340:	ldr	ip, [sp, #16]
   28344:	add	lr, lr, fp
   28348:	ror	fp, r9, #31
   2834c:	ldr	r9, [sp, #28]
   28350:	str	fp, [sp, #8]
   28354:	add	r0, r6, r3
   28358:	ldr	fp, [sp, #52]	; 0x34
   2835c:	eor	r8, r8, ip
   28360:	add	r0, r0, sl
   28364:	eor	r8, r8, r5
   28368:	ldr	sl, [sp, #56]	; 0x38
   2836c:	eor	r9, r9, fp
   28370:	ldr	fp, [sp, #8]
   28374:	add	r4, r4, r2, ror #27
   28378:	eor	r9, r9, sl
   2837c:	ror	r2, r2, #2
   28380:	add	sl, fp, r3
   28384:	ror	r8, r8, #31
   28388:	str	r8, [sp, #28]
   2838c:	eor	ip, r1, r2
   28390:	ldr	fp, [sp, #4]
   28394:	add	r1, sl, r1
   28398:	ldr	r8, [sp, #48]	; 0x30
   2839c:	eor	r9, r9, r6
   283a0:	ldr	sl, [sp, #28]
   283a4:	add	lr, lr, r4, ror #27
   283a8:	str	r6, [sp, #40]	; 0x28
   283ac:	eor	r8, r8, fp
   283b0:	ldr	r6, [sp, #36]	; 0x24
   283b4:	add	fp, sl, r3
   283b8:	ldr	sl, [sp, #8]
   283bc:	eor	ip, ip, r4
   283c0:	eor	r8, r8, r6
   283c4:	ror	r4, r4, #2
   283c8:	eor	r8, r8, sl
   283cc:	ldr	sl, [sp, #52]	; 0x34
   283d0:	ldr	r6, [sp, #12]
   283d4:	add	ip, ip, r0
   283d8:	eor	r0, r2, r4
   283dc:	add	r2, fp, r2
   283e0:	eor	sl, sl, r6
   283e4:	ldr	fp, [sp, #4]
   283e8:	ldr	r6, [sp, #24]
   283ec:	add	ip, ip, lr, ror #27
   283f0:	eor	r0, r0, lr
   283f4:	ror	lr, lr, #2
   283f8:	eor	fp, fp, r6
   283fc:	ldr	r6, [sp, #28]
   28400:	add	r0, r0, r1
   28404:	eor	r7, r7, sl
   28408:	eor	r1, r4, lr
   2840c:	add	r0, r0, ip, ror #27
   28410:	ror	r9, r9, #31
   28414:	eor	r1, r1, ip
   28418:	eor	r7, r7, r6
   2841c:	ror	ip, ip, #2
   28420:	ldr	r6, [sp, #20]
   28424:	add	sl, r9, r3
   28428:	add	r1, r1, r2
   2842c:	eor	r2, lr, ip
   28430:	eor	r2, r2, r0
   28434:	add	r4, sl, r4
   28438:	eor	r6, r6, fp
   2843c:	add	r4, r2, r4
   28440:	eor	r6, r6, r9
   28444:	ldr	r2, [sp, #32]
   28448:	ldr	r9, [sp, #12]
   2844c:	add	r1, r1, r0, ror #27
   28450:	ror	r8, r8, #31
   28454:	ror	r0, r0, #2
   28458:	eor	r9, r9, r2
   2845c:	add	sl, r8, r3
   28460:	eor	fp, ip, r0
   28464:	eor	r5, r5, r9
   28468:	add	r4, r4, r1, ror #27
   2846c:	eor	fp, fp, r1
   28470:	ror	r7, r7, #31
   28474:	ror	r1, r1, #2
   28478:	add	lr, sl, lr
   2847c:	eor	r8, r8, r5
   28480:	ldr	r9, [sp, #16]
   28484:	add	r2, r7, r3
   28488:	ldr	r5, [sp, #24]
   2848c:	eor	sl, r0, r1
   28490:	add	lr, fp, lr
   28494:	eor	sl, sl, r4
   28498:	add	lr, lr, r4, ror #27
   2849c:	ror	r6, r6, #31
   284a0:	ror	r4, r4, #2
   284a4:	add	ip, r2, ip
   284a8:	eor	r9, r5, r9
   284ac:	ldr	r5, [sp, #40]	; 0x28
   284b0:	add	r2, r6, r3
   284b4:	eor	fp, r1, r4
   284b8:	add	ip, sl, ip
   284bc:	eor	r9, r9, r5
   284c0:	ror	sl, lr, #2
   284c4:	add	ip, ip, lr, ror #27
   284c8:	eor	fp, fp, lr
   284cc:	ldr	r5, [sp, #56]	; 0x38
   284d0:	add	r0, r2, r0
   284d4:	ldr	lr, [sp, #32]
   284d8:	add	r0, fp, r0
   284dc:	ldr	fp, [sp, #8]
   284e0:	ror	r8, r8, #31
   284e4:	eor	lr, lr, r5
   284e8:	eor	lr, lr, fp
   284ec:	eor	r5, r4, sl
   284f0:	eor	r7, r7, r9
   284f4:	add	r9, r8, r3
   284f8:	eor	r5, r5, ip
   284fc:	ldr	fp, [sp, #36]	; 0x24
   28500:	add	r1, r9, r1
   28504:	eor	r6, r6, lr
   28508:	ldr	lr, [sp, #16]
   2850c:	add	r0, r0, ip, ror #27
   28510:	add	r1, r5, r1
   28514:	ror	ip, ip, #2
   28518:	ldr	r5, [sp, #28]
   2851c:	add	r7, r3, r7, ror #31
   28520:	eor	r2, lr, fp
   28524:	eor	lr, sl, ip
   28528:	add	r1, r1, r0, ror #27
   2852c:	eor	r2, r2, r5
   28530:	add	r4, r7, r4
   28534:	ldr	r9, [sp, #72]	; 0x48
   28538:	eor	r7, lr, r0
   2853c:	ror	r0, r0, #2
   28540:	eor	fp, ip, r0
   28544:	add	r4, r4, r7
   28548:	eor	r8, r8, r2
   2854c:	add	r4, r4, r1, ror #27
   28550:	eor	fp, fp, r1
   28554:	add	r6, r3, r6, ror #31
   28558:	ror	r1, r1, #2
   2855c:	add	r3, r9, r3
   28560:	ldr	r2, [sp, #92]	; 0x5c
   28564:	add	r8, r3, r8, ror #31
   28568:	add	r6, r6, sl
   2856c:	eor	r3, r0, r1
   28570:	add	r6, r6, fp
   28574:	add	ip, r8, ip
   28578:	ldr	r7, [sp, #80]	; 0x50
   2857c:	eor	r8, r3, r4
   28580:	ldr	r3, [sp, #76]	; 0x4c
   28584:	add	r6, r6, r4, ror #27
   28588:	ldr	r5, [sp, #88]	; 0x58
   2858c:	add	r4, r7, r4, ror #2
   28590:	add	r3, r3, r6
   28594:	str	r4, [r2, #16]
   28598:	str	r3, [r2, #12]
   2859c:	mov	r3, r2
   285a0:	ldr	r2, [sp, #84]	; 0x54
   285a4:	add	ip, ip, r8
   285a8:	add	ip, ip, r6, ror #27
   285ac:	add	r0, r5, r0
   285b0:	add	r1, r2, r1
   285b4:	str	ip, [r3, #8]
   285b8:	str	r1, [r3, #20]
   285bc:	str	r0, [r3, #24]
   285c0:	add	sp, sp, #100	; 0x64
   285c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   285c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   285cc:	mov	r6, r0
   285d0:	ldr	r8, [r0]
   285d4:	mov	r7, r2
   285d8:	mov	r4, r1
   285dc:	adds	r3, r8, r2
   285e0:	str	r3, [r0]
   285e4:	and	r8, r8, #63	; 0x3f
   285e8:	ldrcs	r3, [r0, #4]
   285ec:	rsb	r5, r8, #64	; 0x40
   285f0:	addcs	r3, r3, #1
   285f4:	strcs	r3, [r0, #4]
   285f8:	cmp	r5, r2
   285fc:	movhi	r3, #0
   28600:	movls	r3, #1
   28604:	cmp	r8, #0
   28608:	moveq	r3, #0
   2860c:	cmp	r3, #0
   28610:	bne	28668 <crc32@@Base+0xe30c>
   28614:	cmp	r7, #63	; 0x3f
   28618:	bls	28648 <crc32@@Base+0xe2ec>
   2861c:	sub	r5, r7, #64	; 0x40
   28620:	bic	r5, r5, #63	; 0x3f
   28624:	add	r5, r5, #64	; 0x40
   28628:	add	r5, r4, r5
   2862c:	mov	r1, r4
   28630:	mov	r0, r6
   28634:	add	r4, r4, #64	; 0x40
   28638:	bl	271b0 <crc32@@Base+0xce54>
   2863c:	cmp	r4, r5
   28640:	bne	2862c <crc32@@Base+0xe2d0>
   28644:	and	r7, r7, #63	; 0x3f
   28648:	cmp	r7, #0
   2864c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   28650:	add	r0, r6, #28
   28654:	mov	r2, r7
   28658:	add	r0, r0, r8
   2865c:	mov	r1, r4
   28660:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   28664:	b	12658 <memcpy@plt>
   28668:	add	r9, r0, #28
   2866c:	mov	r2, r5
   28670:	add	r0, r9, r8
   28674:	sub	r7, r7, r5
   28678:	bl	12658 <memcpy@plt>
   2867c:	mov	r1, r9
   28680:	mov	r0, r6
   28684:	add	r4, r4, r5
   28688:	bl	271b0 <crc32@@Base+0xce54>
   2868c:	mov	r8, #0
   28690:	b	28614 <crc32@@Base+0xe2b8>
   28694:	movw	r2, #8961	; 0x2301
   28698:	movw	r3, #43913	; 0xab89
   2869c:	movt	r2, #26437	; 0x6745
   286a0:	movt	r3, #61389	; 0xefcd
   286a4:	strd	r2, [r0, #8]
   286a8:	movw	r2, #56574	; 0xdcfe
   286ac:	movw	r3, #21622	; 0x5476
   286b0:	movt	r2, #39098	; 0x98ba
   286b4:	movt	r3, #4146	; 0x1032
   286b8:	strd	r2, [r0, #16]
   286bc:	mov	r3, #0
   286c0:	movw	r2, #57840	; 0xe1f0
   286c4:	str	r3, [r0]
   286c8:	movt	r2, #50130	; 0xc3d2
   286cc:	str	r3, [r0, #4]
   286d0:	str	r2, [r0, #24]
   286d4:	bx	lr
   286d8:	cmp	r2, #0
   286dc:	bxeq	lr
   286e0:	b	285c8 <crc32@@Base+0xe26c>
   286e4:	ldr	r3, [r0]
   286e8:	push	{r4, r5, r6, lr}
   286ec:	mov	r4, r0
   286f0:	ldr	r0, [r0, #4]
   286f4:	movw	r6, #3824	; 0xef0
   286f8:	movt	r6, #5
   286fc:	mov	r5, r1
   28700:	lsr	r1, r3, #29
   28704:	sub	sp, sp, #16
   28708:	orr	r1, r1, r0, lsl #3
   2870c:	ldr	r0, [r6]
   28710:	and	r2, r3, #63	; 0x3f
   28714:	lsl	r3, r3, #3
   28718:	cmp	r2, #55	; 0x37
   2871c:	lsr	ip, r1, #24
   28720:	rsbls	r2, r2, #56	; 0x38
   28724:	rsbhi	r2, r2, #120	; 0x78
   28728:	strb	r1, [sp, #7]
   2872c:	strb	ip, [sp, #4]
   28730:	lsr	ip, r1, #16
   28734:	str	r0, [sp, #12]
   28738:	lsr	r1, r1, #8
   2873c:	mov	r0, r4
   28740:	strb	r1, [sp, #6]
   28744:	lsr	r1, r3, #24
   28748:	strb	r1, [sp, #8]
   2874c:	lsr	r1, r3, #16
   28750:	strb	r1, [sp, #9]
   28754:	movw	r1, #53252	; 0xd004
   28758:	movt	r1, #3
   2875c:	strb	r3, [sp, #11]
   28760:	lsr	r3, r3, #8
   28764:	strb	ip, [sp, #5]
   28768:	strb	r3, [sp, #10]
   2876c:	bl	285c8 <crc32@@Base+0xe26c>
   28770:	mov	r2, #8
   28774:	add	r1, sp, #4
   28778:	mov	r0, r4
   2877c:	bl	285c8 <crc32@@Base+0xe26c>
   28780:	ldrb	r3, [r4, #11]
   28784:	strb	r3, [r5]
   28788:	ldrh	r3, [r4, #10]
   2878c:	strb	r3, [r5, #1]
   28790:	ldr	r3, [r4, #8]
   28794:	lsr	r3, r3, #8
   28798:	strb	r3, [r5, #2]
   2879c:	ldr	r3, [r4, #8]
   287a0:	strb	r3, [r5, #3]
   287a4:	ldrb	r3, [r4, #15]
   287a8:	strb	r3, [r5, #4]
   287ac:	ldrh	r3, [r4, #14]
   287b0:	strb	r3, [r5, #5]
   287b4:	ldr	r3, [r4, #12]
   287b8:	lsr	r3, r3, #8
   287bc:	strb	r3, [r5, #6]
   287c0:	ldr	r3, [r4, #12]
   287c4:	strb	r3, [r5, #7]
   287c8:	ldrb	r3, [r4, #19]
   287cc:	strb	r3, [r5, #8]
   287d0:	ldrh	r3, [r4, #18]
   287d4:	strb	r3, [r5, #9]
   287d8:	ldr	r3, [r4, #16]
   287dc:	lsr	r3, r3, #8
   287e0:	strb	r3, [r5, #10]
   287e4:	ldr	r3, [r4, #16]
   287e8:	strb	r3, [r5, #11]
   287ec:	ldrb	r3, [r4, #23]
   287f0:	strb	r3, [r5, #12]
   287f4:	ldrh	r3, [r4, #22]
   287f8:	strb	r3, [r5, #13]
   287fc:	ldr	r3, [r4, #20]
   28800:	lsr	r3, r3, #8
   28804:	strb	r3, [r5, #14]
   28808:	ldr	r3, [r4, #20]
   2880c:	strb	r3, [r5, #15]
   28810:	ldrb	r3, [r4, #27]
   28814:	ldr	r1, [sp, #12]
   28818:	ldr	r2, [r6]
   2881c:	strb	r3, [r5, #16]
   28820:	ldrh	r3, [r4, #26]
   28824:	cmp	r1, r2
   28828:	strb	r3, [r5, #17]
   2882c:	ldr	r3, [r4, #24]
   28830:	lsr	r3, r3, #8
   28834:	strb	r3, [r5, #18]
   28838:	ldr	r3, [r4, #24]
   2883c:	strb	r3, [r5, #19]
   28840:	bne	2884c <crc32@@Base+0xe4f0>
   28844:	add	sp, sp, #16
   28848:	pop	{r4, r5, r6, pc}
   2884c:	bl	12538 <__stack_chk_fail@plt>
   28850:	push	{r4, r5, r6, lr}
   28854:	movw	r4, #3824	; 0xef0
   28858:	movt	r4, #5
   2885c:	sub	sp, sp, #96	; 0x60
   28860:	cmp	r1, #0
   28864:	movw	r3, #8961	; 0x2301
   28868:	ldr	ip, [r4]
   2886c:	movt	r3, #26437	; 0x6745
   28870:	mov	r5, sp
   28874:	str	r3, [sp, #8]
   28878:	mov	r6, r2
   2887c:	movw	r3, #43913	; 0xab89
   28880:	str	ip, [sp, #92]	; 0x5c
   28884:	movt	r3, #61389	; 0xefcd
   28888:	str	r3, [sp, #12]
   2888c:	movw	r3, #56574	; 0xdcfe
   28890:	movt	r3, #39098	; 0x98ba
   28894:	str	r3, [sp, #16]
   28898:	movw	r3, #21622	; 0x5476
   2889c:	movt	r3, #4146	; 0x1032
   288a0:	str	r3, [sp, #20]
   288a4:	movw	r3, #57840	; 0xe1f0
   288a8:	movt	r3, #50130	; 0xc3d2
   288ac:	str	r3, [sp, #24]
   288b0:	mov	r3, #0
   288b4:	str	r3, [sp]
   288b8:	str	r3, [sp, #4]
   288bc:	beq	288d0 <crc32@@Base+0xe574>
   288c0:	mov	r2, r1
   288c4:	mov	r1, r0
   288c8:	mov	r0, r5
   288cc:	bl	285c8 <crc32@@Base+0xe26c>
   288d0:	mov	r1, r6
   288d4:	mov	r0, r5
   288d8:	bl	286e4 <crc32@@Base+0xe388>
   288dc:	ldr	r2, [sp, #92]	; 0x5c
   288e0:	ldr	r3, [r4]
   288e4:	cmp	r2, r3
   288e8:	bne	288f4 <crc32@@Base+0xe598>
   288ec:	add	sp, sp, #96	; 0x60
   288f0:	pop	{r4, r5, r6, pc}
   288f4:	bl	12538 <__stack_chk_fail@plt>
   288f8:	push	{r4, r5, r6, lr}
   288fc:	movw	r4, #3824	; 0xef0
   28900:	movt	r4, #5
   28904:	sub	sp, sp, #96	; 0x60
   28908:	cmp	r1, #0
   2890c:	movw	r3, #8961	; 0x2301
   28910:	ldr	ip, [r4]
   28914:	movt	r3, #26437	; 0x6745
   28918:	mov	r5, sp
   2891c:	str	r3, [sp, #8]
   28920:	mov	r6, r2
   28924:	movw	r3, #43913	; 0xab89
   28928:	str	ip, [sp, #92]	; 0x5c
   2892c:	movt	r3, #61389	; 0xefcd
   28930:	str	r3, [sp, #12]
   28934:	movw	r3, #56574	; 0xdcfe
   28938:	movt	r3, #39098	; 0x98ba
   2893c:	str	r3, [sp, #16]
   28940:	movw	r3, #21622	; 0x5476
   28944:	movt	r3, #4146	; 0x1032
   28948:	str	r3, [sp, #20]
   2894c:	movw	r3, #57840	; 0xe1f0
   28950:	movt	r3, #50130	; 0xc3d2
   28954:	str	r3, [sp, #24]
   28958:	mov	r3, #0
   2895c:	str	r3, [sp]
   28960:	str	r3, [sp, #4]
   28964:	beq	28978 <crc32@@Base+0xe61c>
   28968:	mov	r2, r1
   2896c:	mov	r1, r0
   28970:	mov	r0, r5
   28974:	bl	285c8 <crc32@@Base+0xe26c>
   28978:	mov	r1, r6
   2897c:	mov	r0, r5
   28980:	bl	286e4 <crc32@@Base+0xe388>
   28984:	ldr	r2, [sp, #92]	; 0x5c
   28988:	ldr	r3, [r4]
   2898c:	cmp	r2, r3
   28990:	bne	2899c <crc32@@Base+0xe640>
   28994:	add	sp, sp, #96	; 0x60
   28998:	pop	{r4, r5, r6, pc}
   2899c:	bl	12538 <__stack_chk_fail@plt>
   289a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   289a4:	movw	r5, #3824	; 0xef0
   289a8:	movt	r5, #5
   289ac:	sub	sp, sp, #248	; 0xf8
   289b0:	mov	r4, r1
   289b4:	mov	r9, r0
   289b8:	ldr	ip, [r5]
   289bc:	mov	r1, #54	; 0x36
   289c0:	mov	r8, r2
   289c4:	add	r0, sp, #116	; 0x74
   289c8:	mov	r2, #64	; 0x40
   289cc:	mov	r6, r3
   289d0:	str	ip, [sp, #244]	; 0xf4
   289d4:	ldr	r7, [sp, #280]	; 0x118
   289d8:	bl	12388 <memset@plt>
   289dc:	add	r0, sp, #180	; 0xb4
   289e0:	mov	r2, #64	; 0x40
   289e4:	mov	r1, #92	; 0x5c
   289e8:	bl	12388 <memset@plt>
   289ec:	cmp	r4, #0
   289f0:	ble	28a40 <crc32@@Base+0xe6e4>
   289f4:	sub	r0, r9, #1
   289f8:	add	lr, sp, #179	; 0xb3
   289fc:	add	r9, sp, #115	; 0x73
   28a00:	mov	r2, #0
   28a04:	add	r2, r2, #1
   28a08:	ldrb	r1, [r9, #1]!
   28a0c:	cmp	r2, #63	; 0x3f
   28a10:	ldrb	sl, [lr, #1]!
   28a14:	ldrb	r3, [r0, #1]!
   28a18:	movle	ip, #0
   28a1c:	movgt	ip, #1
   28a20:	cmp	r4, r2
   28a24:	orrle	ip, ip, #1
   28a28:	eor	r1, r1, r3
   28a2c:	cmp	ip, #0
   28a30:	eor	r3, r3, sl
   28a34:	strb	r1, [r9]
   28a38:	strb	r3, [lr]
   28a3c:	beq	28a04 <crc32@@Base+0xe6a8>
   28a40:	add	r1, sp, #116	; 0x74
   28a44:	mov	r2, #64	; 0x40
   28a48:	add	r0, sp, #4
   28a4c:	movw	r3, #8961	; 0x2301
   28a50:	movt	r3, #26437	; 0x6745
   28a54:	str	r3, [sp, #12]
   28a58:	movw	r3, #43913	; 0xab89
   28a5c:	movt	r3, #61389	; 0xefcd
   28a60:	str	r3, [sp, #16]
   28a64:	movw	r3, #56574	; 0xdcfe
   28a68:	movt	r3, #39098	; 0x98ba
   28a6c:	str	r3, [sp, #20]
   28a70:	movw	r3, #21622	; 0x5476
   28a74:	movt	r3, #4146	; 0x1032
   28a78:	str	r3, [sp, #24]
   28a7c:	movw	r3, #57840	; 0xe1f0
   28a80:	movt	r3, #50130	; 0xc3d2
   28a84:	str	r3, [sp, #28]
   28a88:	mov	r3, #0
   28a8c:	str	r3, [sp, #4]
   28a90:	str	r3, [sp, #8]
   28a94:	bl	285c8 <crc32@@Base+0xe26c>
   28a98:	cmp	r6, #0
   28a9c:	beq	28ab0 <crc32@@Base+0xe754>
   28aa0:	mov	r2, r6
   28aa4:	mov	r1, r8
   28aa8:	add	r0, sp, #4
   28aac:	bl	285c8 <crc32@@Base+0xe26c>
   28ab0:	add	r0, sp, #4
   28ab4:	add	r1, sp, #96	; 0x60
   28ab8:	bl	286e4 <crc32@@Base+0xe388>
   28abc:	add	r1, sp, #180	; 0xb4
   28ac0:	mov	r2, #64	; 0x40
   28ac4:	add	r0, sp, #4
   28ac8:	movw	r3, #8961	; 0x2301
   28acc:	movt	r3, #26437	; 0x6745
   28ad0:	str	r3, [sp, #12]
   28ad4:	movw	r3, #43913	; 0xab89
   28ad8:	movt	r3, #61389	; 0xefcd
   28adc:	str	r3, [sp, #16]
   28ae0:	movw	r3, #56574	; 0xdcfe
   28ae4:	movt	r3, #39098	; 0x98ba
   28ae8:	str	r3, [sp, #20]
   28aec:	movw	r3, #21622	; 0x5476
   28af0:	movt	r3, #4146	; 0x1032
   28af4:	str	r3, [sp, #24]
   28af8:	movw	r3, #57840	; 0xe1f0
   28afc:	movt	r3, #50130	; 0xc3d2
   28b00:	str	r3, [sp, #28]
   28b04:	mov	r3, #0
   28b08:	str	r3, [sp, #4]
   28b0c:	str	r3, [sp, #8]
   28b10:	bl	285c8 <crc32@@Base+0xe26c>
   28b14:	mov	r2, #20
   28b18:	add	r1, sp, #96	; 0x60
   28b1c:	add	r0, sp, #4
   28b20:	bl	285c8 <crc32@@Base+0xe26c>
   28b24:	mov	r1, r7
   28b28:	add	r0, sp, #4
   28b2c:	bl	286e4 <crc32@@Base+0xe388>
   28b30:	ldr	r2, [sp, #244]	; 0xf4
   28b34:	ldr	r3, [r5]
   28b38:	cmp	r2, r3
   28b3c:	bne	28b48 <crc32@@Base+0xe7ec>
   28b40:	add	sp, sp, #248	; 0xf8
   28b44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28b48:	bl	12538 <__stack_chk_fail@plt>
   28b4c:	mov	r0, #0
   28b50:	bx	lr
   28b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28b58:	mov	r7, r0
   28b5c:	ldr	r8, [r0, #24]
   28b60:	sub	sp, sp, #116	; 0x74
   28b64:	ldr	r4, [r7, #16]
   28b68:	movw	lr, #12184	; 0x2f98
   28b6c:	ldr	r6, [r7, #36]	; 0x24
   28b70:	movt	lr, #17034	; 0x428a
   28b74:	ldr	r0, [r0, #32]
   28b78:	ror	r2, r8, #11
   28b7c:	ldr	r9, [r7, #28]
   28b80:	eor	r2, r2, r8, ror #6
   28b84:	ldr	ip, [r7, #8]
   28b88:	add	lr, r6, lr
   28b8c:	ldr	fp, [r7, #12]
   28b90:	eor	r2, r2, r8, ror #25
   28b94:	str	r4, [sp, #76]	; 0x4c
   28b98:	mov	r5, r0
   28b9c:	add	r2, r2, lr
   28ba0:	eor	r0, r9, r0
   28ba4:	ldr	lr, [sp, #76]	; 0x4c
   28ba8:	mov	sl, ip
   28bac:	str	r6, [sp, #104]	; 0x68
   28bb0:	orr	r4, sl, fp
   28bb4:	ldr	r6, [r1]
   28bb8:	and	r0, r0, r8
   28bbc:	ror	ip, ip, #13
   28bc0:	str	r5, [sp, #88]	; 0x58
   28bc4:	eor	r0, r0, r5
   28bc8:	eor	ip, ip, sl, ror #2
   28bcc:	and	r5, sl, fp
   28bd0:	and	r4, r4, lr
   28bd4:	ldr	lr, [r7, #20]
   28bd8:	orr	r4, r4, r5
   28bdc:	add	r2, r2, r0
   28be0:	eor	ip, ip, sl, ror #22
   28be4:	rev	r0, r6
   28be8:	add	ip, ip, r4
   28bec:	add	r2, r2, r0
   28bf0:	ldr	r5, [r1, #4]
   28bf4:	str	r0, [sp]
   28bf8:	add	r0, ip, r2
   28bfc:	str	lr, [sp, #92]	; 0x5c
   28c00:	add	lr, lr, r2
   28c04:	ldr	r2, [sp, #88]	; 0x58
   28c08:	eor	r6, r8, r9
   28c0c:	movw	r3, #17553	; 0x4491
   28c10:	movt	r3, #28983	; 0x7137
   28c14:	orr	r4, sl, r0
   28c18:	and	r6, r6, lr
   28c1c:	add	r3, r2, r3
   28c20:	ror	ip, r0, #13
   28c24:	rev	r2, r5
   28c28:	ror	r5, lr, #11
   28c2c:	str	r7, [sp, #108]	; 0x6c
   28c30:	eor	r6, r6, r9
   28c34:	and	r7, sl, r0
   28c38:	add	r3, r3, r2
   28c3c:	eor	r5, r5, lr, ror #6
   28c40:	and	r4, r4, fp
   28c44:	eor	ip, ip, r0, ror #2
   28c48:	eor	r5, r5, lr, ror #25
   28c4c:	eor	ip, ip, r0, ror #22
   28c50:	add	r3, r6, r3
   28c54:	orr	r4, r4, r7
   28c58:	add	r3, r3, r5
   28c5c:	add	r4, ip, r4
   28c60:	str	r2, [sp, #8]
   28c64:	add	r2, r4, r3
   28c68:	ldr	r4, [r1, #8]
   28c6c:	ldr	ip, [sp, #76]	; 0x4c
   28c70:	rev	r5, r4
   28c74:	str	fp, [sp, #84]	; 0x54
   28c78:	add	r6, ip, r3
   28c7c:	mov	fp, r8
   28c80:	mov	r3, r5
   28c84:	eor	r8, r8, lr
   28c88:	orr	r5, r0, r2
   28c8c:	ror	r4, r2, #13
   28c90:	movw	ip, #64463	; 0xfbcf
   28c94:	movt	ip, #46528	; 0xb5c0
   28c98:	str	r9, [sp, #100]	; 0x64
   28c9c:	and	r8, r8, r6
   28ca0:	add	ip, r9, ip
   28ca4:	ror	r7, r6, #11
   28ca8:	and	r9, r0, r2
   28cac:	and	r5, r5, sl
   28cb0:	eor	r4, r4, r2, ror #2
   28cb4:	eor	r8, r8, fp
   28cb8:	eor	r4, r4, r2, ror #22
   28cbc:	add	ip, ip, r3
   28cc0:	eor	r7, r7, r6, ror #6
   28cc4:	orr	r5, r5, r9
   28cc8:	eor	r7, r7, r6, ror #25
   28ccc:	add	r5, r4, r5
   28cd0:	add	ip, r8, ip
   28cd4:	ldr	r4, [sp, #84]	; 0x54
   28cd8:	add	ip, ip, r7
   28cdc:	str	r3, [sp, #20]
   28ce0:	add	r7, r4, ip
   28ce4:	ldr	r4, [r1, #12]
   28ce8:	add	r3, r5, ip
   28cec:	str	sl, [sp, #80]	; 0x50
   28cf0:	rev	r5, r4
   28cf4:	eor	sl, lr, r6
   28cf8:	movw	ip, #56229	; 0xdba5
   28cfc:	movt	ip, #59829	; 0xe9b5
   28d00:	mov	r9, r5
   28d04:	and	sl, sl, r7
   28d08:	orr	r5, r2, r3
   28d0c:	add	ip, fp, ip
   28d10:	ror	r8, r7, #11
   28d14:	ror	r4, r3, #13
   28d18:	str	fp, [sp, #96]	; 0x60
   28d1c:	eor	sl, sl, lr
   28d20:	and	fp, r2, r3
   28d24:	add	ip, ip, r9
   28d28:	eor	r8, r8, r7, ror #6
   28d2c:	and	r5, r5, r0
   28d30:	eor	r4, r4, r3, ror #2
   28d34:	eor	r8, r8, r7, ror #25
   28d38:	orr	r5, r5, fp
   28d3c:	eor	r4, r4, r3, ror #22
   28d40:	ldr	fp, [r1, #16]
   28d44:	add	ip, sl, ip
   28d48:	ldr	sl, [sp, #80]	; 0x50
   28d4c:	add	ip, ip, r8
   28d50:	str	r9, [sp, #24]
   28d54:	add	r9, r4, r5
   28d58:	add	r9, r9, ip
   28d5c:	add	r5, sl, ip
   28d60:	rev	ip, fp
   28d64:	movw	r8, #49755	; 0xc25b
   28d68:	movt	r8, #14678	; 0x3956
   28d6c:	ror	fp, r5, #11
   28d70:	mov	sl, ip
   28d74:	eor	ip, r6, r7
   28d78:	add	r8, sl, r8
   28d7c:	and	ip, ip, r5
   28d80:	str	sl, [sp, #16]
   28d84:	eor	ip, ip, r6
   28d88:	orr	sl, r3, r9
   28d8c:	ror	r4, r9, #13
   28d90:	add	lr, r8, lr
   28d94:	eor	fp, fp, r5, ror #6
   28d98:	and	r8, r3, r9
   28d9c:	eor	fp, fp, r5, ror #25
   28da0:	and	sl, sl, r2
   28da4:	eor	r4, r4, r9, ror #2
   28da8:	add	lr, ip, lr
   28dac:	eor	r4, r4, r9, ror #22
   28db0:	add	lr, lr, fp
   28db4:	orr	sl, sl, r8
   28db8:	ldr	fp, [r1, #20]
   28dbc:	add	r8, r4, sl
   28dc0:	add	ip, r0, lr
   28dc4:	add	r8, r8, lr
   28dc8:	rev	lr, fp
   28dcc:	movw	r4, #4593	; 0x11f1
   28dd0:	movt	r4, #23025	; 0x59f1
   28dd4:	orr	sl, r9, r8
   28dd8:	mov	fp, lr
   28ddc:	eor	lr, r7, r5
   28de0:	str	fp, [sp, #56]	; 0x38
   28de4:	add	r4, fp, r4
   28de8:	and	lr, lr, ip
   28dec:	ror	fp, ip, #11
   28df0:	ror	r0, r8, #13
   28df4:	eor	lr, lr, r7
   28df8:	add	r6, r4, r6
   28dfc:	eor	fp, fp, ip, ror #6
   28e00:	and	r4, r9, r8
   28e04:	and	sl, sl, r3
   28e08:	eor	r0, r0, r8, ror #2
   28e0c:	eor	fp, fp, ip, ror #25
   28e10:	eor	r0, r0, r8, ror #22
   28e14:	add	r6, lr, r6
   28e18:	orr	sl, sl, r4
   28e1c:	add	r6, r6, fp
   28e20:	add	r4, r0, sl
   28e24:	ldr	fp, [r1, #24]
   28e28:	add	r4, r4, r6
   28e2c:	add	r2, r2, r6
   28e30:	rev	lr, fp
   28e34:	eor	r0, r5, ip
   28e38:	movw	r6, #33444	; 0x82a4
   28e3c:	movt	r6, #37439	; 0x923f
   28e40:	str	lr, [sp, #68]	; 0x44
   28e44:	add	r6, lr, r6
   28e48:	orr	sl, r8, r4
   28e4c:	and	r0, r0, r2
   28e50:	ror	fp, r2, #11
   28e54:	ror	lr, r4, #13
   28e58:	eor	r0, r0, r5
   28e5c:	add	r7, r6, r7
   28e60:	eor	fp, fp, r2, ror #6
   28e64:	and	r6, r8, r4
   28e68:	and	sl, sl, r9
   28e6c:	eor	lr, lr, r4, ror #2
   28e70:	eor	fp, fp, r2, ror #25
   28e74:	eor	lr, lr, r4, ror #22
   28e78:	add	r7, r0, r7
   28e7c:	orr	sl, sl, r6
   28e80:	add	r7, r7, fp
   28e84:	add	r6, lr, sl
   28e88:	ldr	fp, [r1, #28]
   28e8c:	add	r0, r3, r7
   28e90:	add	r6, r6, r7
   28e94:	eor	r3, ip, r2
   28e98:	rev	r7, fp
   28e9c:	movw	lr, #24277	; 0x5ed5
   28ea0:	movt	lr, #43804	; 0xab1c
   28ea4:	str	r7, [sp, #28]
   28ea8:	add	lr, r7, lr
   28eac:	orr	sl, r4, r6
   28eb0:	and	r3, r3, r0
   28eb4:	ror	fp, r0, #11
   28eb8:	ror	r7, r6, #13
   28ebc:	eor	r3, r3, ip
   28ec0:	add	r5, lr, r5
   28ec4:	eor	fp, fp, r0, ror #6
   28ec8:	and	lr, r4, r6
   28ecc:	and	sl, sl, r8
   28ed0:	eor	r7, r7, r6, ror #2
   28ed4:	eor	fp, fp, r0, ror #25
   28ed8:	eor	r7, r7, r6, ror #22
   28edc:	add	r5, r3, r5
   28ee0:	orr	sl, sl, lr
   28ee4:	add	r5, r5, fp
   28ee8:	ldr	r3, [r1, #32]
   28eec:	add	lr, r7, sl
   28ef0:	add	lr, lr, r5
   28ef4:	add	r9, r9, r5
   28ef8:	movw	fp, #43672	; 0xaa98
   28efc:	rev	r5, r3
   28f00:	movt	fp, #55303	; 0xd807
   28f04:	eor	r3, r2, r0
   28f08:	str	r5, [sp, #44]	; 0x2c
   28f0c:	add	fp, r5, fp
   28f10:	orr	r7, r6, lr
   28f14:	and	r3, r3, r9
   28f18:	ror	sl, r9, #11
   28f1c:	ror	r5, lr, #13
   28f20:	eor	r3, r3, r2
   28f24:	add	ip, fp, ip
   28f28:	eor	sl, sl, r9, ror #6
   28f2c:	and	fp, r6, lr
   28f30:	and	r7, r7, r4
   28f34:	eor	r5, r5, lr, ror #2
   28f38:	eor	sl, sl, r9, ror #25
   28f3c:	orr	r7, r7, fp
   28f40:	add	ip, r3, ip
   28f44:	eor	r5, r5, lr, ror #22
   28f48:	add	ip, ip, sl
   28f4c:	add	r5, r5, r7
   28f50:	ldr	sl, [r1, #36]	; 0x24
   28f54:	add	r8, r8, ip
   28f58:	add	ip, r5, ip
   28f5c:	eor	r3, r0, r9
   28f60:	rev	r5, sl
   28f64:	movw	fp, #23297	; 0x5b01
   28f68:	movt	fp, #4739	; 0x1283
   28f6c:	str	r5, [sp, #32]
   28f70:	add	fp, r5, fp
   28f74:	orr	r7, lr, ip
   28f78:	and	r3, r3, r8
   28f7c:	ror	sl, r8, #11
   28f80:	ror	r5, ip, #13
   28f84:	eor	r3, r3, r0
   28f88:	add	r2, fp, r2
   28f8c:	eor	sl, sl, r8, ror #6
   28f90:	and	fp, lr, ip
   28f94:	and	r7, r7, r6
   28f98:	eor	r5, r5, ip, ror #2
   28f9c:	eor	sl, sl, r8, ror #25
   28fa0:	orr	r7, r7, fp
   28fa4:	add	r2, r3, r2
   28fa8:	eor	r5, r5, ip, ror #22
   28fac:	add	r2, r2, sl
   28fb0:	add	r5, r5, r7
   28fb4:	ldr	sl, [r1, #40]	; 0x28
   28fb8:	add	r4, r4, r2
   28fbc:	add	r2, r5, r2
   28fc0:	rev	r7, sl
   28fc4:	eor	r5, r9, r8
   28fc8:	movw	r3, #34238	; 0x85be
   28fcc:	movt	r3, #9265	; 0x2431
   28fd0:	str	r7, [sp, #60]	; 0x3c
   28fd4:	orr	sl, ip, r2
   28fd8:	add	r3, r7, r3
   28fdc:	and	r5, r5, r4
   28fe0:	ror	fp, r4, #11
   28fe4:	ror	r7, r2, #13
   28fe8:	eor	r5, r5, r9
   28fec:	add	r3, r3, r0
   28ff0:	eor	fp, fp, r4, ror #6
   28ff4:	and	r0, ip, r2
   28ff8:	and	sl, sl, lr
   28ffc:	eor	r7, r7, r2, ror #2
   29000:	eor	fp, fp, r4, ror #25
   29004:	eor	r7, r7, r2, ror #22
   29008:	add	r3, r5, r3
   2900c:	orr	sl, sl, r0
   29010:	ldr	r5, [r1, #44]	; 0x2c
   29014:	add	r3, r3, fp
   29018:	add	r0, r7, sl
   2901c:	add	r6, r6, r3
   29020:	add	r0, r0, r3
   29024:	rev	r3, r5
   29028:	movw	fp, #32195	; 0x7dc3
   2902c:	movt	fp, #21772	; 0x550c
   29030:	mov	sl, r3
   29034:	eor	r3, r8, r4
   29038:	str	sl, [sp, #36]	; 0x24
   2903c:	add	fp, sl, fp
   29040:	and	r3, r3, r6
   29044:	ror	sl, r6, #11
   29048:	orr	r7, r2, r0
   2904c:	eor	r3, r3, r8
   29050:	ror	r5, r0, #13
   29054:	add	r9, fp, r9
   29058:	eor	sl, sl, r6, ror #6
   2905c:	and	fp, r2, r0
   29060:	eor	sl, sl, r6, ror #25
   29064:	and	r7, r7, ip
   29068:	eor	r5, r5, r0, ror #2
   2906c:	add	r9, r3, r9
   29070:	add	r9, r9, sl
   29074:	ldr	r3, [r1, #48]	; 0x30
   29078:	eor	r5, r5, r0, ror #22
   2907c:	orr	r7, r7, fp
   29080:	add	lr, lr, r9
   29084:	add	fp, r5, r7
   29088:	add	fp, fp, r9
   2908c:	eor	r5, r4, r6
   29090:	rev	r9, r3
   29094:	movw	sl, #23924	; 0x5d74
   29098:	movt	sl, #29374	; 0x72be
   2909c:	and	r5, r5, lr
   290a0:	add	sl, r9, sl
   290a4:	ror	r7, lr, #11
   290a8:	str	r9, [sp, #64]	; 0x40
   290ac:	eor	r5, r5, r4
   290b0:	orr	r9, r0, fp
   290b4:	ror	r3, fp, #13
   290b8:	add	r8, sl, r8
   290bc:	eor	r7, r7, lr, ror #6
   290c0:	and	sl, r0, fp
   290c4:	eor	r7, r7, lr, ror #25
   290c8:	and	r9, r9, r2
   290cc:	eor	r3, r3, fp, ror #2
   290d0:	add	r8, r5, r8
   290d4:	eor	r3, r3, fp, ror #22
   290d8:	add	r8, r8, r7
   290dc:	ldr	r5, [r1, #52]	; 0x34
   290e0:	orr	r9, r9, sl
   290e4:	add	ip, ip, r8
   290e8:	add	sl, r3, r9
   290ec:	eor	r3, r6, lr
   290f0:	add	sl, sl, r8
   290f4:	movw	r9, #45566	; 0xb1fe
   290f8:	rev	r8, r5
   290fc:	movt	r9, #32990	; 0x80de
   29100:	add	r9, r8, r9
   29104:	and	r3, r3, ip
   29108:	ror	r7, ip, #11
   2910c:	str	r8, [sp, #40]	; 0x28
   29110:	eor	r3, r3, r6
   29114:	orr	r8, fp, sl
   29118:	add	r4, r9, r4
   2911c:	ror	r5, sl, #13
   29120:	eor	r7, r7, ip, ror #6
   29124:	add	r4, r3, r4
   29128:	and	r8, r8, r0
   2912c:	and	r3, fp, sl
   29130:	eor	r5, r5, sl, ror #2
   29134:	eor	r7, r7, ip, ror #25
   29138:	add	r7, r4, r7
   2913c:	orr	r8, r8, r3
   29140:	ldr	r4, [r1, #56]	; 0x38
   29144:	eor	r5, r5, sl, ror #22
   29148:	add	r2, r2, r7
   2914c:	add	r5, r5, r8
   29150:	add	r9, r5, r7
   29154:	rev	r4, r4
   29158:	eor	r7, lr, ip
   2915c:	movw	r3, #1703	; 0x6a7
   29160:	movt	r3, #39900	; 0x9bdc
   29164:	and	r7, r7, r2
   29168:	add	r3, r4, r3
   2916c:	ror	r8, r2, #11
   29170:	add	r3, r3, r6
   29174:	eor	r8, r8, r2, ror #6
   29178:	eor	r6, r7, lr
   2917c:	orr	r5, sl, r9
   29180:	eor	r8, r8, r2, ror #25
   29184:	add	r6, r6, r3
   29188:	ror	r3, r9, #13
   2918c:	add	r6, r6, r8
   29190:	and	r5, r5, fp
   29194:	ldr	r1, [r1, #60]	; 0x3c
   29198:	and	r8, sl, r9
   2919c:	eor	r3, r3, r9, ror #2
   291a0:	eor	r3, r3, r9, ror #22
   291a4:	orr	r8, r5, r8
   291a8:	add	r0, r0, r6
   291ac:	rev	r5, r1
   291b0:	add	r8, r3, r8
   291b4:	movw	r1, #61812	; 0xf174
   291b8:	eor	r3, ip, r2
   291bc:	movt	r1, #49563	; 0xc19b
   291c0:	add	r8, r8, r6
   291c4:	add	r1, r5, r1
   291c8:	and	r3, r3, r0
   291cc:	add	r1, r1, lr
   291d0:	eor	r3, r3, ip
   291d4:	str	r4, [sp, #48]	; 0x30
   291d8:	add	r3, r3, r1
   291dc:	ldr	r4, [sp, #32]
   291e0:	ldr	r1, [sp]
   291e4:	ror	r6, r0, #11
   291e8:	ror	r7, r8, #13
   291ec:	orr	lr, r9, r8
   291f0:	eor	r6, r6, r0, ror #6
   291f4:	eor	r7, r7, r8, ror #2
   291f8:	str	r5, [sp, #4]
   291fc:	and	lr, lr, sl
   29200:	eor	r5, r6, r0, ror #25
   29204:	add	r6, r1, r4
   29208:	eor	r1, r7, r8, ror #22
   2920c:	and	r7, r9, r8
   29210:	orr	r7, lr, r7
   29214:	ldr	lr, [sp, #48]	; 0x30
   29218:	str	r0, [sp, #12]
   2921c:	add	r5, r3, r5
   29220:	ldr	r0, [sp, #8]
   29224:	add	r7, r1, r7
   29228:	ror	r3, lr, #19
   2922c:	add	fp, fp, r5
   29230:	eor	r3, r3, lr, ror #17
   29234:	add	r7, r7, r5
   29238:	ror	r1, r0, #18
   2923c:	eor	r3, r3, lr, lsr #10
   29240:	eor	r1, r1, r0, ror #7
   29244:	add	r3, r3, r6
   29248:	eor	lr, r1, r0, lsr #3
   2924c:	ldr	r6, [sp, #12]
   29250:	add	r3, r3, lr
   29254:	str	r3, [sp]
   29258:	ldr	lr, [sp]
   2925c:	eor	r3, r2, r6
   29260:	movw	r1, #27073	; 0x69c1
   29264:	movt	r1, #58523	; 0xe49b
   29268:	add	r1, lr, r1
   2926c:	and	r3, r3, fp
   29270:	ror	r5, fp, #11
   29274:	ldr	lr, [sp, #4]
   29278:	add	r1, r1, ip
   2927c:	eor	r3, r3, r2
   29280:	eor	r5, r5, fp, ror #6
   29284:	orr	ip, r8, r7
   29288:	eor	r5, r5, fp, ror #25
   2928c:	add	r3, r3, r1
   29290:	ror	r6, r7, #13
   29294:	ldr	r1, [sp, #60]	; 0x3c
   29298:	ldr	r4, [sp, #20]
   2929c:	add	r3, r3, r5
   292a0:	and	ip, ip, r9
   292a4:	and	r5, r8, r7
   292a8:	eor	r6, r6, r7, ror #2
   292ac:	orr	ip, ip, r5
   292b0:	eor	r6, r6, r7, ror #22
   292b4:	ror	r5, lr, #19
   292b8:	add	r6, r6, ip
   292bc:	eor	r5, r5, lr, ror #17
   292c0:	ror	ip, r4, #18
   292c4:	add	r1, r0, r1
   292c8:	eor	r5, r5, lr, lsr #10
   292cc:	eor	ip, ip, r4, ror #7
   292d0:	add	lr, r6, r3
   292d4:	ldr	r6, [sp, #12]
   292d8:	add	sl, sl, r3
   292dc:	add	r5, r5, r1
   292e0:	eor	ip, ip, r4, lsr #3
   292e4:	eor	r3, r6, fp
   292e8:	add	ip, r5, ip
   292ec:	movw	r1, #18310	; 0x4786
   292f0:	movt	r1, #61374	; 0xefbe
   292f4:	and	r3, r3, sl
   292f8:	add	r1, ip, r1
   292fc:	ror	r5, sl, #11
   29300:	add	r1, r1, r2
   29304:	eor	r3, r3, r6
   29308:	eor	r5, r5, sl, ror #6
   2930c:	orr	r2, r7, lr
   29310:	eor	r5, r5, sl, ror #25
   29314:	add	r3, r3, r1
   29318:	ror	r1, lr, #13
   2931c:	add	r3, r3, r5
   29320:	and	r2, r2, r8
   29324:	and	r5, r7, lr
   29328:	eor	r1, r1, lr, ror #2
   2932c:	ldr	r6, [sp, #24]
   29330:	ldr	r0, [sp, #36]	; 0x24
   29334:	eor	r1, r1, lr, ror #22
   29338:	orr	r5, r2, r5
   2933c:	str	ip, [sp, #52]	; 0x34
   29340:	add	r5, r1, r5
   29344:	ldr	r1, [sp]
   29348:	add	ip, r4, r0
   2934c:	ldr	r0, [sp]
   29350:	ror	r2, r6, #18
   29354:	add	r9, r9, r3
   29358:	eor	r2, r2, r6, ror #7
   2935c:	ror	r1, r1, #19
   29360:	eor	r2, r2, r6, lsr #3
   29364:	eor	r1, r1, r0, ror #17
   29368:	add	r2, r2, ip
   2936c:	eor	r1, r1, r0, lsr #10
   29370:	add	r5, r5, r3
   29374:	add	r1, r2, r1
   29378:	ldr	r0, [sp, #12]
   2937c:	eor	r3, fp, sl
   29380:	movw	r2, #40390	; 0x9dc6
   29384:	movt	r2, #4033	; 0xfc1
   29388:	str	r1, [sp, #8]
   2938c:	add	r2, r1, r2
   29390:	and	r3, r3, r9
   29394:	ror	r1, r9, #11
   29398:	add	r0, r2, r0
   2939c:	eor	r1, r1, r9, ror #6
   293a0:	eor	r3, r3, fp
   293a4:	ldr	r4, [sp, #16]
   293a8:	add	r3, r3, r0
   293ac:	eor	r0, r1, r9, ror #25
   293b0:	ldr	r1, [sp, #64]	; 0x40
   293b4:	orr	ip, lr, r5
   293b8:	ror	r2, r5, #13
   293bc:	add	r3, r3, r0
   293c0:	add	r1, r6, r1
   293c4:	ldr	r6, [sp, #52]	; 0x34
   293c8:	and	r0, lr, r5
   293cc:	and	ip, ip, r7
   293d0:	eor	r2, r2, r5, ror #2
   293d4:	orr	ip, ip, r0
   293d8:	eor	r2, r2, r5, ror #22
   293dc:	ror	r0, r4, #18
   293e0:	eor	r0, r0, r4, ror #7
   293e4:	add	r2, r2, ip
   293e8:	ror	ip, r6, #19
   293ec:	eor	r0, r0, r4, lsr #3
   293f0:	eor	ip, ip, r6, ror #17
   293f4:	add	r0, r0, r1
   293f8:	eor	r1, ip, r6, lsr #10
   293fc:	add	r8, r8, r3
   29400:	add	r1, r0, r1
   29404:	movw	ip, #41420	; 0xa1cc
   29408:	movt	ip, #9228	; 0x240c
   2940c:	add	r2, r2, r3
   29410:	mov	r0, r1
   29414:	eor	r1, sl, r9
   29418:	add	ip, r0, ip
   2941c:	and	r1, r1, r8
   29420:	add	fp, ip, fp
   29424:	eor	r1, r1, sl
   29428:	ldr	r4, [sp, #16]
   2942c:	ror	r3, r8, #11
   29430:	add	r1, r1, fp
   29434:	ldr	fp, [sp, #40]	; 0x28
   29438:	ldr	r6, [sp, #56]	; 0x38
   2943c:	eor	r3, r3, r8, ror #6
   29440:	str	r0, [sp, #12]
   29444:	eor	r3, r3, r8, ror #25
   29448:	orr	r0, r5, r2
   2944c:	add	fp, r4, fp
   29450:	ror	ip, r2, #13
   29454:	ldr	r4, [sp, #8]
   29458:	add	r1, r1, r3
   2945c:	and	r0, r0, lr
   29460:	and	r3, r5, r2
   29464:	eor	ip, ip, r2, ror #2
   29468:	eor	ip, ip, r2, ror #22
   2946c:	orr	r3, r0, r3
   29470:	ror	r0, r6, #18
   29474:	add	r3, ip, r3
   29478:	eor	r0, r0, r6, ror #7
   2947c:	ror	ip, r4, #19
   29480:	eor	r0, r0, r6, lsr #3
   29484:	eor	ip, ip, r4, ror #17
   29488:	add	r0, r0, fp
   2948c:	eor	ip, ip, r4, lsr #10
   29490:	add	ip, r0, ip
   29494:	add	r7, r7, r1
   29498:	add	r3, r3, r1
   2949c:	eor	r1, r9, r8
   294a0:	mov	fp, ip
   294a4:	movw	ip, #11375	; 0x2c6f
   294a8:	movt	ip, #11753	; 0x2de9
   294ac:	str	fp, [sp, #16]
   294b0:	ldr	r4, [sp, #48]	; 0x30
   294b4:	add	ip, fp, ip
   294b8:	and	r1, r1, r7
   294bc:	ror	fp, r7, #11
   294c0:	add	sl, ip, sl
   294c4:	eor	fp, fp, r7, ror #6
   294c8:	eor	r1, r1, r9
   294cc:	orr	r0, r2, r3
   294d0:	add	r1, r1, sl
   294d4:	eor	sl, fp, r7, ror #25
   294d8:	add	fp, r6, r4
   294dc:	ldr	r6, [sp, #68]	; 0x44
   294e0:	ldr	r4, [sp, #12]
   294e4:	ror	ip, r3, #13
   294e8:	add	r1, r1, sl
   294ec:	and	r0, r0, r5
   294f0:	and	sl, r2, r3
   294f4:	eor	ip, ip, r3, ror #2
   294f8:	orr	sl, r0, sl
   294fc:	eor	ip, ip, r3, ror #22
   29500:	ror	r0, r6, #18
   29504:	add	ip, ip, sl
   29508:	eor	r0, r0, r6, ror #7
   2950c:	ror	sl, r4, #19
   29510:	eor	sl, sl, r4, ror #17
   29514:	eor	r0, r0, r6, lsr #3
   29518:	add	lr, lr, r1
   2951c:	add	r0, r0, fp
   29520:	eor	fp, sl, r4, lsr #10
   29524:	add	ip, ip, r1
   29528:	add	r0, r0, fp
   2952c:	eor	r1, r8, r7
   29530:	ldr	fp, [sp, #4]
   29534:	movw	sl, #33962	; 0x84aa
   29538:	movt	sl, #19060	; 0x4a74
   2953c:	str	r0, [sp, #20]
   29540:	add	sl, r0, sl
   29544:	and	r1, r1, lr
   29548:	ror	r0, lr, #11
   2954c:	add	sl, sl, r9
   29550:	add	fp, r6, fp
   29554:	eor	r1, r1, r8
   29558:	ldr	r6, [sp, #28]
   2955c:	eor	r0, r0, lr, ror #6
   29560:	ldr	r4, [sp, #16]
   29564:	orr	r9, r3, ip
   29568:	eor	r0, r0, lr, ror #25
   2956c:	add	r1, r1, sl
   29570:	ror	sl, ip, #13
   29574:	add	r1, r1, r0
   29578:	and	r9, r9, r2
   2957c:	and	r0, r3, ip
   29580:	eor	sl, sl, ip, ror #2
   29584:	orr	r0, r9, r0
   29588:	eor	sl, sl, ip, ror #22
   2958c:	ror	r9, r6, #18
   29590:	eor	r9, r9, r6, ror #7
   29594:	add	r0, sl, r0
   29598:	ror	sl, r4, #19
   2959c:	eor	r9, r9, r6, lsr #3
   295a0:	eor	sl, sl, r4, ror #17
   295a4:	add	r5, r5, r1
   295a8:	eor	sl, sl, r4, lsr #10
   295ac:	add	r9, r9, fp
   295b0:	add	r0, r0, r1
   295b4:	ldr	r6, [sp, #44]	; 0x2c
   295b8:	add	r9, r9, sl
   295bc:	eor	r1, r7, lr
   295c0:	movw	sl, #43484	; 0xa9dc
   295c4:	movt	sl, #23728	; 0x5cb0
   295c8:	and	r1, r1, r5
   295cc:	add	sl, r9, sl
   295d0:	ror	fp, r5, #11
   295d4:	add	sl, sl, r8
   295d8:	eor	fp, fp, r5, ror #6
   295dc:	eor	r8, r1, r7
   295e0:	ldr	r4, [sp, #20]
   295e4:	eor	fp, fp, r5, ror #25
   295e8:	str	r9, [sp, #24]
   295ec:	add	r8, r8, sl
   295f0:	orr	r9, ip, r0
   295f4:	ror	r1, r0, #13
   295f8:	ror	sl, r6, #18
   295fc:	add	r8, r8, fp
   29600:	and	r9, r9, r3
   29604:	and	fp, ip, r0
   29608:	eor	r1, r1, r0, ror #2
   2960c:	eor	sl, sl, r6, ror #7
   29610:	orr	r9, r9, fp
   29614:	eor	r1, r1, r0, ror #22
   29618:	eor	sl, sl, r6, lsr #3
   2961c:	ldr	r6, [sp, #28]
   29620:	ror	fp, r4, #19
   29624:	add	r1, r1, r9
   29628:	add	r9, r2, r8
   2962c:	ldr	r2, [sp]
   29630:	add	sl, sl, r6
   29634:	eor	fp, fp, r4, ror #17
   29638:	eor	fp, fp, r4, lsr #10
   2963c:	add	sl, sl, r2
   29640:	add	r1, r1, r8
   29644:	ldr	r4, [sp, #32]
   29648:	add	r2, sl, fp
   2964c:	movw	r8, #35034	; 0x88da
   29650:	eor	fp, lr, r5
   29654:	movt	r8, #30457	; 0x76f9
   29658:	add	r8, r2, r8
   2965c:	and	fp, fp, r9
   29660:	add	sl, r8, r7
   29664:	eor	r7, fp, lr
   29668:	add	r7, r7, sl
   2966c:	ror	sl, r4, #18
   29670:	str	r2, [sp, #28]
   29674:	eor	sl, sl, r4, ror #7
   29678:	ror	r2, r9, #11
   2967c:	ldr	r6, [sp, #44]	; 0x2c
   29680:	eor	r2, r2, r9, ror #6
   29684:	eor	sl, sl, r4, lsr #3
   29688:	ldr	r4, [sp, #24]
   2968c:	orr	r8, r0, r1
   29690:	eor	r2, r2, r9, ror #25
   29694:	ror	fp, r1, #13
   29698:	add	r7, r7, r2
   2969c:	and	r8, r8, ip
   296a0:	and	r2, r0, r1
   296a4:	eor	fp, fp, r1, ror #2
   296a8:	eor	fp, fp, r1, ror #22
   296ac:	orr	r2, r8, r2
   296b0:	ror	r8, r4, #19
   296b4:	add	r2, fp, r2
   296b8:	eor	fp, r8, r4, ror #17
   296bc:	add	sl, sl, r6
   296c0:	eor	fp, fp, r4, lsr #10
   296c4:	ldr	r4, [sp, #52]	; 0x34
   296c8:	add	r8, r3, r7
   296cc:	add	r2, r2, r7
   296d0:	add	sl, sl, r4
   296d4:	eor	r3, r5, r9
   296d8:	ldr	r4, [sp, #60]	; 0x3c
   296dc:	add	r7, sl, fp
   296e0:	movw	sl, #20818	; 0x5152
   296e4:	movt	sl, #38974	; 0x983e
   296e8:	and	r3, r3, r8
   296ec:	add	sl, r7, sl
   296f0:	add	sl, sl, lr
   296f4:	eor	r6, r3, r5
   296f8:	ror	fp, r8, #11
   296fc:	add	r6, r6, sl
   29700:	eor	fp, fp, r8, ror #6
   29704:	ror	sl, r4, #18
   29708:	str	r7, [sp, #56]	; 0x38
   2970c:	eor	fp, fp, r8, ror #25
   29710:	orr	r7, r1, r2
   29714:	eor	sl, sl, r4, ror #7
   29718:	add	r6, r6, fp
   2971c:	mov	lr, r4
   29720:	and	fp, r1, r2
   29724:	and	r7, r7, r0
   29728:	ror	r3, r2, #13
   2972c:	eor	sl, sl, r4, lsr #3
   29730:	ldr	r4, [sp, #28]
   29734:	orr	r7, r7, fp
   29738:	eor	r3, r3, r2, ror #2
   2973c:	ldr	fp, [sp, #32]
   29740:	eor	r3, r3, r2, ror #22
   29744:	add	sl, sl, fp
   29748:	add	r3, r3, r7
   2974c:	ror	fp, r4, #19
   29750:	add	r7, ip, r6
   29754:	ldr	ip, [sp, #8]
   29758:	eor	fp, fp, r4, ror #17
   2975c:	eor	fp, fp, r4, lsr #10
   29760:	add	r3, r3, r6
   29764:	add	sl, sl, ip
   29768:	ldr	r4, [sp, #36]	; 0x24
   2976c:	add	ip, sl, fp
   29770:	movw	r6, #50797	; 0xc66d
   29774:	eor	fp, r9, r8
   29778:	movt	r6, #43057	; 0xa831
   2977c:	and	fp, fp, r7
   29780:	add	r6, ip, r6
   29784:	add	r6, r6, r5
   29788:	eor	r5, fp, r9
   2978c:	str	ip, [sp, #32]
   29790:	add	r5, r5, r6
   29794:	ror	ip, r7, #11
   29798:	ror	r6, r4, #18
   2979c:	eor	ip, ip, r7, ror #6
   297a0:	eor	r6, r6, r4, ror #7
   297a4:	orr	sl, r2, r3
   297a8:	eor	ip, ip, r7, ror #25
   297ac:	ror	fp, r3, #13
   297b0:	eor	r6, r6, r4, lsr #3
   297b4:	ldr	r4, [sp, #56]	; 0x38
   297b8:	add	r5, r5, ip
   297bc:	and	sl, sl, r1
   297c0:	and	ip, r2, r3
   297c4:	eor	fp, fp, r3, ror #2
   297c8:	orr	ip, sl, ip
   297cc:	eor	fp, fp, r3, ror #22
   297d0:	ror	sl, r4, #19
   297d4:	add	ip, fp, ip
   297d8:	eor	fp, sl, r4, ror #17
   297dc:	add	ip, ip, r5
   297e0:	add	sl, r0, r5
   297e4:	ldr	r5, [sp, #12]
   297e8:	add	r6, r6, lr
   297ec:	eor	fp, fp, r4, lsr #10
   297f0:	eor	r0, r8, r7
   297f4:	add	r6, r6, r5
   297f8:	movw	r5, #10184	; 0x27c8
   297fc:	add	r6, r6, fp
   29800:	movt	r5, #45059	; 0xb003
   29804:	and	r0, r0, sl
   29808:	add	r5, r6, r5
   2980c:	add	r5, r5, r9
   29810:	eor	r9, r0, r8
   29814:	ror	r0, ip, #13
   29818:	mov	r4, r6
   2981c:	mov	lr, ip
   29820:	orr	r6, r3, ip
   29824:	eor	r0, r0, ip, ror #2
   29828:	ldr	ip, [sp, #64]	; 0x40
   2982c:	add	r9, r9, r5
   29830:	str	lr, [sp, #44]	; 0x2c
   29834:	ror	fp, sl, #11
   29838:	eor	r0, r0, lr, ror #22
   2983c:	ror	r5, ip, #18
   29840:	mov	lr, ip
   29844:	eor	r5, r5, ip, ror #7
   29848:	eor	fp, fp, sl, ror #6
   2984c:	eor	r5, r5, ip, lsr #3
   29850:	ldr	ip, [sp, #44]	; 0x2c
   29854:	eor	fp, fp, sl, ror #25
   29858:	and	r6, r6, r2
   2985c:	add	r9, r9, fp
   29860:	and	fp, r3, ip
   29864:	ldr	ip, [sp, #32]
   29868:	orr	r6, r6, fp
   2986c:	ldr	fp, [sp, #36]	; 0x24
   29870:	add	r0, r0, r6
   29874:	add	r6, r1, r9
   29878:	ldr	r1, [sp, #16]
   2987c:	add	r5, r5, fp
   29880:	ror	fp, ip, #19
   29884:	eor	fp, fp, ip, ror #17
   29888:	add	r5, r5, r1
   2988c:	eor	fp, fp, ip, lsr #10
   29890:	add	r0, r0, r9
   29894:	add	r1, r5, fp
   29898:	movw	r9, #32711	; 0x7fc7
   2989c:	eor	fp, r7, sl
   298a0:	movt	r9, #48985	; 0xbf59
   298a4:	str	r1, [sp, #36]	; 0x24
   298a8:	add	r9, r1, r9
   298ac:	and	fp, fp, r6
   298b0:	ror	r1, r6, #11
   298b4:	add	r5, r9, r8
   298b8:	ldr	ip, [sp, #44]	; 0x2c
   298bc:	eor	r8, fp, r7
   298c0:	eor	r1, r1, r6, ror #6
   298c4:	eor	r1, r1, r6, ror #25
   298c8:	add	r8, r8, r5
   298cc:	add	r8, r8, r1
   298d0:	orr	r9, ip, r0
   298d4:	ldr	r1, [sp, #44]	; 0x2c
   298d8:	ror	fp, r0, #13
   298dc:	ldr	ip, [sp, #40]	; 0x28
   298e0:	and	r9, r9, r3
   298e4:	eor	fp, fp, r0, ror #2
   298e8:	and	r1, r1, r0
   298ec:	eor	fp, fp, r0, ror #22
   298f0:	orr	r1, r9, r1
   298f4:	ror	r5, ip, #18
   298f8:	ror	r9, r4, #19
   298fc:	eor	r5, r5, ip, ror #7
   29900:	add	r1, fp, r1
   29904:	add	r1, r1, r8
   29908:	eor	fp, r9, r4, ror #17
   2990c:	eor	r5, r5, ip, lsr #3
   29910:	add	r9, r2, r8
   29914:	ldr	r8, [sp, #20]
   29918:	add	r5, r5, lr
   2991c:	eor	fp, fp, r4, lsr #10
   29920:	str	r4, [sp, #60]	; 0x3c
   29924:	add	r5, r5, r8
   29928:	ldr	lr, [sp, #48]	; 0x30
   2992c:	add	r2, r5, fp
   29930:	movw	r5, #3059	; 0xbf3
   29934:	movt	r5, #50912	; 0xc6e0
   29938:	ror	fp, r9, #11
   2993c:	mov	r4, r2
   29940:	eor	r2, sl, r6
   29944:	and	r2, r2, r9
   29948:	add	r5, r4, r5
   2994c:	add	r5, r5, r7
   29950:	eor	fp, fp, r9, ror #6
   29954:	eor	r7, r2, sl
   29958:	ldr	r2, [sp, #44]	; 0x2c
   2995c:	orr	r8, r0, r1
   29960:	eor	fp, fp, r9, ror #25
   29964:	add	r7, r7, r5
   29968:	ldr	ip, [sp, #36]	; 0x24
   2996c:	add	r7, r7, fp
   29970:	and	r8, r8, r2
   29974:	and	fp, r0, r1
   29978:	ror	r5, lr, #18
   2997c:	orr	r8, r8, fp
   29980:	eor	r5, r5, lr, ror #7
   29984:	ldr	fp, [sp, #40]	; 0x28
   29988:	eor	r5, r5, lr, lsr #3
   2998c:	ror	r2, r1, #13
   29990:	add	r5, r5, fp
   29994:	ror	fp, ip, #19
   29998:	eor	fp, fp, ip, ror #17
   2999c:	eor	r2, r2, r1, ror #2
   299a0:	eor	fp, fp, ip, lsr #10
   299a4:	ldr	ip, [sp, #24]
   299a8:	eor	r2, r2, r1, ror #22
   299ac:	add	r5, r5, ip
   299b0:	add	r2, r2, r8
   299b4:	add	r5, r5, fp
   299b8:	add	r8, r3, r7
   299bc:	add	r2, r2, r7
   299c0:	movw	r3, #37191	; 0x9147
   299c4:	mov	r7, r5
   299c8:	movt	r3, #54695	; 0xd5a7
   299cc:	eor	r5, r6, r9
   299d0:	add	r3, r7, r3
   299d4:	and	r5, r5, r8
   299d8:	ror	fp, r8, #11
   299dc:	add	sl, r3, sl
   299e0:	eor	r5, r5, r6
   299e4:	eor	fp, fp, r8, ror #6
   299e8:	ldr	ip, [sp, #4]
   299ec:	orr	r3, r1, r2
   299f0:	add	r5, r5, sl
   299f4:	eor	fp, fp, r8, ror #25
   299f8:	ror	sl, r2, #13
   299fc:	add	fp, r5, fp
   29a00:	and	r3, r3, r0
   29a04:	and	r5, r1, r2
   29a08:	eor	sl, sl, r2, ror #2
   29a0c:	orr	r3, r3, r5
   29a10:	eor	sl, sl, r2, ror #22
   29a14:	mov	r5, r4
   29a18:	str	r7, [sp, #40]	; 0x28
   29a1c:	add	sl, sl, r3
   29a20:	ror	r7, ip, #18
   29a24:	ldr	r3, [sp, #44]	; 0x2c
   29a28:	ror	r4, r4, #19
   29a2c:	eor	r4, r4, r5, ror #17
   29a30:	eor	r7, r7, ip, ror #7
   29a34:	str	r5, [sp, #64]	; 0x40
   29a38:	eor	r7, r7, ip, lsr #3
   29a3c:	add	ip, r3, fp
   29a40:	eor	r3, r4, r5, lsr #10
   29a44:	ldr	r4, [sp, #28]
   29a48:	add	r7, r7, lr
   29a4c:	add	fp, sl, fp
   29a50:	ldr	lr, [sp]
   29a54:	add	r7, r7, r4
   29a58:	movw	r4, #25425	; 0x6351
   29a5c:	add	r5, r7, r3
   29a60:	movt	r4, #1738	; 0x6ca
   29a64:	eor	r3, r9, r8
   29a68:	str	r5, [sp, #44]	; 0x2c
   29a6c:	add	r4, r5, r4
   29a70:	and	r3, r3, ip
   29a74:	ror	r5, ip, #11
   29a78:	add	r6, r4, r6
   29a7c:	eor	r3, r3, r9
   29a80:	eor	r5, r5, ip, ror #6
   29a84:	orr	r7, r2, fp
   29a88:	eor	r5, r5, ip, ror #25
   29a8c:	add	r3, r3, r6
   29a90:	ror	r6, fp, #13
   29a94:	ldr	sl, [sp, #40]	; 0x28
   29a98:	add	r3, r3, r5
   29a9c:	and	r7, r7, r1
   29aa0:	and	r5, r2, fp
   29aa4:	eor	r6, r6, fp, ror #2
   29aa8:	ror	r4, lr, #18
   29aac:	orr	r7, r7, r5
   29ab0:	eor	r4, r4, lr, ror #7
   29ab4:	ldr	r5, [sp, #4]
   29ab8:	eor	r6, r6, fp, ror #22
   29abc:	eor	r4, r4, lr, lsr #3
   29ac0:	add	r6, r6, r7
   29ac4:	add	r6, r6, r3
   29ac8:	add	r0, r0, r3
   29acc:	add	r4, r4, r5
   29ad0:	ldr	r3, [sp, #56]	; 0x38
   29ad4:	ror	r5, sl, #19
   29ad8:	movw	r7, #10599	; 0x2967
   29adc:	eor	r5, r5, sl, ror #17
   29ae0:	add	r4, r4, r3
   29ae4:	eor	r5, r5, sl, lsr #10
   29ae8:	eor	r3, r8, ip
   29aec:	add	r5, r4, r5
   29af0:	movt	r7, #5161	; 0x1429
   29af4:	str	r5, [sp, #72]	; 0x48
   29af8:	add	r7, r5, r7
   29afc:	and	r3, r3, r0
   29b00:	ror	r5, r0, #11
   29b04:	ldr	sl, [sp, #52]	; 0x34
   29b08:	eor	r3, r3, r8
   29b0c:	add	r9, r7, r9
   29b10:	eor	r5, r5, r0, ror #6
   29b14:	orr	r4, fp, r6
   29b18:	add	r9, r3, r9
   29b1c:	eor	r5, r5, r0, ror #25
   29b20:	and	r4, r4, r2
   29b24:	add	r5, r9, r5
   29b28:	ror	r7, r6, #13
   29b2c:	and	r9, fp, r6
   29b30:	ror	r3, sl, #18
   29b34:	orr	r4, r4, r9
   29b38:	eor	r7, r7, r6, ror #2
   29b3c:	ldr	r9, [sp, #44]	; 0x2c
   29b40:	eor	r3, r3, sl, ror #7
   29b44:	eor	r7, r7, r6, ror #22
   29b48:	eor	r3, r3, sl, lsr #3
   29b4c:	add	r7, r7, r4
   29b50:	add	r1, r1, r5
   29b54:	add	r3, r3, lr
   29b58:	add	r5, r7, r5
   29b5c:	ror	lr, r9, #19
   29b60:	ldr	r7, [sp, #32]
   29b64:	eor	lr, lr, r9, ror #17
   29b68:	str	r9, [sp, #68]	; 0x44
   29b6c:	eor	r4, lr, r9, lsr #10
   29b70:	add	r3, r3, r7
   29b74:	add	lr, r3, r4
   29b78:	movw	r3, #2693	; 0xa85
   29b7c:	movt	r3, #10167	; 0x27b7
   29b80:	str	lr, [sp]
   29b84:	add	r3, lr, r3
   29b88:	ror	lr, r1, #11
   29b8c:	eor	r4, ip, r0
   29b90:	add	r3, r3, r8
   29b94:	eor	r8, lr, r1, ror #6
   29b98:	ldr	lr, [sp, #8]
   29b9c:	and	r4, r4, r1
   29ba0:	orr	r9, r6, r5
   29ba4:	eor	r4, r4, ip
   29ba8:	and	r9, r9, fp
   29bac:	add	r3, r4, r3
   29bb0:	ror	r4, lr, #18
   29bb4:	eor	r4, r4, lr, ror #7
   29bb8:	ror	r7, r5, #13
   29bbc:	eor	r4, r4, lr, lsr #3
   29bc0:	and	lr, r6, r5
   29bc4:	eor	r7, r7, r5, ror #2
   29bc8:	orr	lr, r9, lr
   29bcc:	ldr	r9, [sp, #72]	; 0x48
   29bd0:	eor	r8, r8, r1, ror #25
   29bd4:	eor	r7, r7, r5, ror #22
   29bd8:	add	r3, r3, r8
   29bdc:	add	lr, r7, lr
   29be0:	add	r2, r2, r3
   29be4:	add	lr, lr, r3
   29be8:	add	r4, r4, sl
   29bec:	ldr	r3, [sp, #60]	; 0x3c
   29bf0:	ror	sl, r9, #19
   29bf4:	eor	sl, sl, r9, ror #17
   29bf8:	movw	r8, #8504	; 0x2138
   29bfc:	add	r4, r4, r3
   29c00:	eor	sl, sl, r9, lsr #10
   29c04:	add	sl, r4, sl
   29c08:	ldr	r9, [sp, #12]
   29c0c:	eor	r3, r0, r1
   29c10:	movt	r8, #11803	; 0x2e1b
   29c14:	add	r8, sl, r8
   29c18:	and	r3, r3, r2
   29c1c:	ror	r7, r2, #11
   29c20:	eor	r3, r3, r0
   29c24:	add	ip, r8, ip
   29c28:	eor	r7, r7, r2, ror #6
   29c2c:	add	ip, r3, ip
   29c30:	eor	r7, r7, r2, ror #25
   29c34:	ror	r3, r9, #18
   29c38:	add	r7, ip, r7
   29c3c:	eor	r3, r3, r9, ror #7
   29c40:	ldr	ip, [sp, #8]
   29c44:	eor	r3, r3, r9, lsr #3
   29c48:	str	sl, [sp, #4]
   29c4c:	add	r3, r3, ip
   29c50:	ldr	ip, [sp]
   29c54:	orr	r4, r5, lr
   29c58:	and	r9, r5, lr
   29c5c:	and	r4, r4, r6
   29c60:	ror	r8, lr, #13
   29c64:	ror	sl, ip, #19
   29c68:	add	fp, fp, r7
   29c6c:	eor	sl, sl, ip, ror #17
   29c70:	orr	r4, r4, r9
   29c74:	eor	sl, sl, ip, lsr #10
   29c78:	ldr	ip, [sp, #36]	; 0x24
   29c7c:	ldr	r9, [sp, #16]
   29c80:	eor	r8, r8, lr, ror #2
   29c84:	add	r3, r3, ip
   29c88:	eor	ip, r1, r2
   29c8c:	add	sl, r3, sl
   29c90:	movw	r3, #28156	; 0x6dfc
   29c94:	movt	r3, #19756	; 0x4d2c
   29c98:	eor	r8, r8, lr, ror #22
   29c9c:	add	r3, sl, r3
   29ca0:	and	ip, ip, fp
   29ca4:	add	r8, r8, r4
   29ca8:	eor	ip, ip, r1
   29cac:	add	r0, r3, r0
   29cb0:	add	r7, r8, r7
   29cb4:	add	r0, ip, r0
   29cb8:	ror	ip, r9, #18
   29cbc:	orr	r4, lr, r7
   29cc0:	eor	ip, ip, r9, ror #7
   29cc4:	and	r4, r4, r5
   29cc8:	eor	ip, ip, r9, lsr #3
   29ccc:	and	r9, lr, r7
   29cd0:	ror	r8, fp, #11
   29cd4:	orr	r9, r4, r9
   29cd8:	ldr	r4, [sp, #12]
   29cdc:	ror	r3, r7, #13
   29ce0:	eor	r8, r8, fp, ror #6
   29ce4:	eor	r3, r3, r7, ror #2
   29ce8:	add	ip, ip, r4
   29cec:	ldr	r4, [sp, #4]
   29cf0:	eor	r8, r8, fp, ror #25
   29cf4:	eor	r3, r3, r7, ror #22
   29cf8:	add	r0, r0, r8
   29cfc:	add	r9, r3, r9
   29d00:	add	r6, r6, r0
   29d04:	add	r9, r9, r0
   29d08:	str	sl, [sp, #44]	; 0x2c
   29d0c:	ldr	r0, [sp, #64]	; 0x40
   29d10:	ror	sl, r4, #19
   29d14:	eor	sl, sl, r4, ror #17
   29d18:	ldr	r8, [sp, #20]
   29d1c:	eor	sl, sl, r4, lsr #10
   29d20:	add	ip, ip, r0
   29d24:	add	r0, ip, sl
   29d28:	movw	r4, #3347	; 0xd13
   29d2c:	movt	r4, #21304	; 0x5338
   29d30:	orr	sl, r7, r9
   29d34:	mov	r3, r0
   29d38:	eor	r0, r2, fp
   29d3c:	str	r3, [sp, #48]	; 0x30
   29d40:	add	r4, r3, r4
   29d44:	and	r0, r0, r6
   29d48:	ror	r3, r6, #11
   29d4c:	eor	r0, r0, r2
   29d50:	add	r1, r4, r1
   29d54:	eor	r3, r3, r6, ror #6
   29d58:	add	r1, r0, r1
   29d5c:	eor	r3, r3, r6, ror #25
   29d60:	and	sl, sl, lr
   29d64:	add	r3, r1, r3
   29d68:	and	r1, r7, r9
   29d6c:	orr	r1, sl, r1
   29d70:	ror	ip, r8, #18
   29d74:	ldr	sl, [sp, #44]	; 0x2c
   29d78:	eor	ip, ip, r8, ror #7
   29d7c:	ldr	r0, [sp, #16]
   29d80:	eor	ip, ip, r8, lsr #3
   29d84:	ror	r4, r9, #13
   29d88:	add	r5, r5, r3
   29d8c:	add	ip, ip, r0
   29d90:	ror	r0, sl, #19
   29d94:	eor	r0, r0, sl, ror #17
   29d98:	eor	r4, r4, r9, ror #2
   29d9c:	eor	r0, r0, sl, lsr #10
   29da0:	ldr	sl, [sp, #40]	; 0x28
   29da4:	eor	r4, r4, r9, ror #22
   29da8:	ror	r8, r5, #11
   29dac:	add	ip, ip, sl
   29db0:	add	r4, r4, r1
   29db4:	add	r0, ip, r0
   29db8:	add	r1, r4, r3
   29dbc:	ldr	ip, [sp, #24]
   29dc0:	movw	r3, #29524	; 0x7354
   29dc4:	mov	sl, r0
   29dc8:	movt	r3, #25866	; 0x650a
   29dcc:	eor	r0, fp, r6
   29dd0:	add	r3, sl, r3
   29dd4:	and	r0, r0, r5
   29dd8:	add	r2, r3, r2
   29ddc:	eor	r0, r0, fp
   29de0:	orr	r4, r9, r1
   29de4:	add	r2, r0, r2
   29de8:	ror	r0, ip, #18
   29dec:	eor	r8, r8, r5, ror #6
   29df0:	eor	r0, r0, ip, ror #7
   29df4:	and	r4, r4, r7
   29df8:	eor	r8, r8, r5, ror #25
   29dfc:	ror	r3, r1, #13
   29e00:	eor	r0, r0, ip, lsr #3
   29e04:	and	ip, r9, r1
   29e08:	add	r2, r2, r8
   29e0c:	str	sl, [sp, #52]	; 0x34
   29e10:	eor	r3, r3, r1, ror #2
   29e14:	ldr	r8, [sp, #20]
   29e18:	orr	ip, r4, ip
   29e1c:	ldr	r4, [sp, #48]	; 0x30
   29e20:	eor	r3, r3, r1, ror #22
   29e24:	add	ip, r3, ip
   29e28:	add	lr, lr, r2
   29e2c:	add	ip, ip, r2
   29e30:	ldr	r2, [sp, #68]	; 0x44
   29e34:	ror	sl, r4, #19
   29e38:	add	r0, r0, r8
   29e3c:	eor	sl, sl, r4, ror #17
   29e40:	add	r0, r0, r2
   29e44:	eor	sl, sl, r4, lsr #10
   29e48:	movw	r4, #2747	; 0xabb
   29e4c:	add	r0, r0, sl
   29e50:	movt	r4, #30314	; 0x766a
   29e54:	add	r4, r0, r4
   29e58:	eor	r2, r6, r5
   29e5c:	add	fp, r4, fp
   29e60:	ldr	r4, [sp, #28]
   29e64:	and	r2, r2, lr
   29e68:	ror	r3, lr, #11
   29e6c:	eor	r2, r2, r6
   29e70:	eor	r3, r3, lr, ror #6
   29e74:	add	fp, r2, fp
   29e78:	ror	sl, r4, #18
   29e7c:	eor	r3, r3, lr, ror #25
   29e80:	str	r0, [sp, #20]
   29e84:	add	r3, fp, r3
   29e88:	orr	r0, r1, ip
   29e8c:	ldr	fp, [sp, #52]	; 0x34
   29e90:	ror	r2, ip, #13
   29e94:	eor	sl, sl, r4, ror #7
   29e98:	ldr	r8, [sp, #24]
   29e9c:	and	r0, r0, r9
   29ea0:	eor	r2, r2, ip, ror #2
   29ea4:	eor	sl, sl, r4, lsr #3
   29ea8:	and	r4, r1, ip
   29eac:	orr	r0, r0, r4
   29eb0:	eor	r2, r2, ip, ror #22
   29eb4:	add	r2, r2, r0
   29eb8:	add	sl, sl, r8
   29ebc:	ldr	r0, [sp, #72]	; 0x48
   29ec0:	ror	r8, fp, #19
   29ec4:	eor	r8, r8, fp, ror #17
   29ec8:	add	r7, r7, r3
   29ecc:	eor	r8, r8, fp, lsr #10
   29ed0:	add	sl, sl, r0
   29ed4:	add	r3, r2, r3
   29ed8:	add	r2, sl, r8
   29edc:	eor	sl, r5, lr
   29ee0:	orr	r4, ip, r3
   29ee4:	mov	fp, r2
   29ee8:	movw	r2, #51502	; 0xc92e
   29eec:	movt	r2, #33218	; 0x81c2
   29ef0:	str	fp, [sp, #24]
   29ef4:	add	r2, fp, r2
   29ef8:	ldr	fp, [sp, #56]	; 0x38
   29efc:	and	sl, sl, r7
   29f00:	add	r6, r2, r6
   29f04:	eor	sl, sl, r5
   29f08:	and	r4, r4, r1
   29f0c:	and	r0, ip, r3
   29f10:	add	r6, sl, r6
   29f14:	ror	sl, fp, #18
   29f18:	orr	r0, r4, r0
   29f1c:	eor	sl, sl, fp, ror #7
   29f20:	ldr	r4, [sp, #28]
   29f24:	eor	sl, sl, fp, lsr #3
   29f28:	ror	r8, r7, #11
   29f2c:	ror	r2, r3, #13
   29f30:	add	sl, sl, r4
   29f34:	ldr	r4, [sp, #20]
   29f38:	eor	r8, r8, r7, ror #6
   29f3c:	eor	r2, r2, r3, ror #2
   29f40:	eor	r8, r8, r7, ror #25
   29f44:	eor	r2, r2, r3, ror #22
   29f48:	add	r6, r6, r8
   29f4c:	add	r2, r2, r0
   29f50:	ror	r8, r4, #19
   29f54:	ldr	r0, [sp]
   29f58:	eor	r8, r8, r4, ror #17
   29f5c:	add	r9, r9, r6
   29f60:	eor	r8, r8, r4, lsr #10
   29f64:	add	sl, sl, r0
   29f68:	add	r6, r2, r6
   29f6c:	eor	r0, lr, r7
   29f70:	add	r2, sl, r8
   29f74:	movw	r4, #11397	; 0x2c85
   29f78:	movt	r4, #37490	; 0x9272
   29f7c:	str	r2, [sp, #28]
   29f80:	add	r4, r2, r4
   29f84:	and	r0, r0, r9
   29f88:	ror	r2, r9, #11
   29f8c:	eor	r0, r0, lr
   29f90:	add	r5, r4, r5
   29f94:	eor	r2, r2, r9, ror #6
   29f98:	ldr	r8, [sp, #32]
   29f9c:	orr	r4, r3, r6
   29fa0:	add	r5, r0, r5
   29fa4:	eor	r2, r2, r9, ror #25
   29fa8:	and	r4, r4, ip
   29fac:	add	r2, r5, r2
   29fb0:	ror	r0, r6, #13
   29fb4:	and	r5, r3, r6
   29fb8:	eor	r0, r0, r6, ror #2
   29fbc:	orr	r5, r4, r5
   29fc0:	ldr	r4, [sp, #24]
   29fc4:	ror	sl, r8, #18
   29fc8:	eor	r0, r0, r6, ror #22
   29fcc:	eor	sl, sl, r8, ror #7
   29fd0:	add	r0, r0, r5
   29fd4:	add	r5, r0, r2
   29fd8:	eor	sl, sl, r8, lsr #3
   29fdc:	ldr	r0, [sp, #4]
   29fe0:	ror	r8, r4, #19
   29fe4:	add	sl, sl, fp
   29fe8:	eor	r8, r8, r4, ror #17
   29fec:	eor	r8, r8, r4, lsr #10
   29ff0:	add	sl, sl, r0
   29ff4:	add	sl, sl, r8
   29ff8:	movw	r8, #59553	; 0xe8a1
   29ffc:	movt	r8, #41663	; 0xa2bf
   2a000:	add	r1, r1, r2
   2a004:	mov	fp, sl
   2a008:	add	r8, fp, r8
   2a00c:	eor	sl, r7, r9
   2a010:	add	lr, r8, lr
   2a014:	ldr	r8, [sp, #60]	; 0x3c
   2a018:	and	sl, sl, r1
   2a01c:	eor	sl, sl, r7
   2a020:	orr	r0, r6, r5
   2a024:	add	lr, sl, lr
   2a028:	and	r0, r0, r3
   2a02c:	ror	sl, r8, #18
   2a030:	ror	r4, r1, #11
   2a034:	eor	sl, sl, r8, ror #7
   2a038:	eor	r4, r4, r1, ror #6
   2a03c:	eor	sl, sl, r8, lsr #3
   2a040:	and	r8, r6, r5
   2a044:	orr	r8, r0, r8
   2a048:	ldr	r0, [sp, #32]
   2a04c:	eor	r4, r4, r1, ror #25
   2a050:	ror	r2, r5, #13
   2a054:	add	sl, sl, r0
   2a058:	ldr	r0, [sp, #28]
   2a05c:	add	lr, lr, r4
   2a060:	eor	r2, r2, r5, ror #2
   2a064:	eor	r2, r2, r5, ror #22
   2a068:	add	ip, ip, lr
   2a06c:	ror	r4, r0, #19
   2a070:	add	r8, r2, r8
   2a074:	eor	r4, r4, r0, ror #17
   2a078:	add	lr, r8, lr
   2a07c:	eor	r4, r4, r0, lsr #10
   2a080:	ldr	r0, [sp, #44]	; 0x2c
   2a084:	movw	r8, #26187	; 0x664b
   2a088:	movt	r8, #43034	; 0xa81a
   2a08c:	add	sl, sl, r0
   2a090:	eor	r0, r9, r1
   2a094:	add	sl, sl, r4
   2a098:	ldr	r4, [sp, #36]	; 0x24
   2a09c:	add	r8, sl, r8
   2a0a0:	and	r0, r0, ip
   2a0a4:	ror	r2, ip, #11
   2a0a8:	eor	r0, r0, r9
   2a0ac:	add	r7, r8, r7
   2a0b0:	eor	r2, r2, ip, ror #6
   2a0b4:	str	fp, [sp, #56]	; 0x38
   2a0b8:	add	r7, r0, r7
   2a0bc:	ror	fp, r4, #18
   2a0c0:	eor	r2, r2, ip, ror #25
   2a0c4:	str	sl, [sp, #32]
   2a0c8:	add	r2, r7, r2
   2a0cc:	orr	sl, r5, lr
   2a0d0:	ldr	r7, [sp, #56]	; 0x38
   2a0d4:	ror	r0, lr, #13
   2a0d8:	eor	fp, fp, r4, ror #7
   2a0dc:	ldr	r8, [sp, #60]	; 0x3c
   2a0e0:	and	sl, sl, r6
   2a0e4:	eor	r0, r0, lr, ror #2
   2a0e8:	eor	fp, fp, r4, lsr #3
   2a0ec:	and	r4, r5, lr
   2a0f0:	eor	r0, r0, lr, ror #22
   2a0f4:	orr	sl, sl, r4
   2a0f8:	add	fp, fp, r8
   2a0fc:	add	r0, r0, sl
   2a100:	ror	r8, r7, #19
   2a104:	mov	sl, r7
   2a108:	eor	r8, r8, r7, ror #17
   2a10c:	add	r7, r0, r2
   2a110:	ldr	r0, [sp, #48]	; 0x30
   2a114:	eor	r8, r8, sl, lsr #10
   2a118:	add	r3, r3, r2
   2a11c:	add	fp, fp, r0
   2a120:	eor	r4, r1, ip
   2a124:	add	r2, fp, r8
   2a128:	movw	r8, #35696	; 0x8b70
   2a12c:	movt	r8, #49739	; 0xc24b
   2a130:	orr	sl, lr, r7
   2a134:	add	r8, r2, r8
   2a138:	and	sl, sl, r5
   2a13c:	add	r9, r8, r9
   2a140:	ldr	r8, [sp, #64]	; 0x40
   2a144:	and	r4, r4, r3
   2a148:	ror	r0, r3, #11
   2a14c:	eor	r4, r4, r1
   2a150:	eor	r0, r0, r3, ror #6
   2a154:	ror	fp, r8, #18
   2a158:	add	r9, r4, r9
   2a15c:	eor	fp, fp, r8, ror #7
   2a160:	ldr	r4, [sp, #36]	; 0x24
   2a164:	eor	fp, fp, r8, lsr #3
   2a168:	and	r8, lr, r7
   2a16c:	orr	r8, sl, r8
   2a170:	ldr	sl, [sp, #32]
   2a174:	eor	r0, r0, r3, ror #25
   2a178:	add	fp, fp, r4
   2a17c:	add	r9, r9, r0
   2a180:	ldr	r0, [sp, #52]	; 0x34
   2a184:	ror	r4, sl, #19
   2a188:	str	r2, [sp, #60]	; 0x3c
   2a18c:	eor	r4, r4, sl, ror #17
   2a190:	ror	r2, r7, #13
   2a194:	eor	r4, r4, sl, lsr #10
   2a198:	eor	r2, r2, r7, ror #2
   2a19c:	add	fp, fp, r0
   2a1a0:	eor	r2, r2, r7, ror #22
   2a1a4:	add	fp, fp, r4
   2a1a8:	add	r8, r2, r8
   2a1ac:	movw	r2, #20899	; 0x51a3
   2a1b0:	movt	r2, #51052	; 0xc76c
   2a1b4:	mov	r4, fp
   2a1b8:	add	r2, r4, r2
   2a1bc:	str	r4, [sp, #8]
   2a1c0:	add	r6, r6, r9
   2a1c4:	eor	fp, ip, r3
   2a1c8:	add	r1, r2, r1
   2a1cc:	ldr	r2, [sp, #40]	; 0x28
   2a1d0:	and	fp, fp, r6
   2a1d4:	add	r9, r8, r9
   2a1d8:	eor	fp, fp, ip
   2a1dc:	ror	sl, r6, #11
   2a1e0:	add	r1, fp, r1
   2a1e4:	eor	sl, sl, r6, ror #6
   2a1e8:	ror	fp, r2, #18
   2a1ec:	orr	r0, r7, r9
   2a1f0:	eor	sl, sl, r6, ror #25
   2a1f4:	ror	r8, r9, #13
   2a1f8:	eor	fp, fp, r2, ror #7
   2a1fc:	add	r1, r1, sl
   2a200:	and	r0, r0, lr
   2a204:	and	sl, r7, r9
   2a208:	eor	r8, r8, r9, ror #2
   2a20c:	eor	fp, fp, r2, lsr #3
   2a210:	ldr	r2, [sp, #60]	; 0x3c
   2a214:	ldr	r4, [sp, #64]	; 0x40
   2a218:	eor	r8, r8, r9, ror #22
   2a21c:	orr	sl, r0, sl
   2a220:	add	r5, r5, r1
   2a224:	add	sl, r8, sl
   2a228:	add	fp, fp, r4
   2a22c:	add	sl, sl, r1
   2a230:	ror	r4, r2, #19
   2a234:	ldr	r1, [sp, #20]
   2a238:	eor	r4, r4, r2, ror #17
   2a23c:	eor	r4, r4, r2, lsr #10
   2a240:	ldr	r8, [sp, #68]	; 0x44
   2a244:	add	fp, fp, r1
   2a248:	eor	r0, r3, r6
   2a24c:	add	r1, fp, r4
   2a250:	movw	r2, #59417	; 0xe819
   2a254:	movt	r2, #53650	; 0xd192
   2a258:	str	r1, [sp, #36]	; 0x24
   2a25c:	add	r2, r1, r2
   2a260:	and	r0, r0, r5
   2a264:	ror	r1, r5, #11
   2a268:	orr	r4, r9, sl
   2a26c:	eor	r0, r0, r3
   2a270:	add	ip, r2, ip
   2a274:	eor	r1, r1, r5, ror #6
   2a278:	add	ip, r0, ip
   2a27c:	and	r4, r4, r7
   2a280:	and	r0, r9, sl
   2a284:	ror	r2, sl, #13
   2a288:	ror	fp, r8, #18
   2a28c:	eor	r1, r1, r5, ror #25
   2a290:	orr	r4, r4, r0
   2a294:	add	r1, ip, r1
   2a298:	ldr	r0, [sp, #40]	; 0x28
   2a29c:	ldr	ip, [sp, #8]
   2a2a0:	eor	r2, r2, sl, ror #2
   2a2a4:	eor	fp, fp, r8, ror #7
   2a2a8:	eor	r2, r2, sl, ror #22
   2a2ac:	eor	fp, fp, r8, lsr #3
   2a2b0:	add	lr, lr, r1
   2a2b4:	add	fp, fp, r0
   2a2b8:	add	r0, r2, r4
   2a2bc:	add	r0, r0, r1
   2a2c0:	ror	r8, ip, #19
   2a2c4:	ldr	r1, [sp, #24]
   2a2c8:	eor	r8, r8, ip, ror #17
   2a2cc:	eor	r8, r8, ip, lsr #10
   2a2d0:	movw	r2, #1572	; 0x624
   2a2d4:	add	fp, fp, r1
   2a2d8:	eor	ip, r6, r5
   2a2dc:	add	r4, fp, r8
   2a2e0:	movt	r2, #54937	; 0xd699
   2a2e4:	add	r2, r4, r2
   2a2e8:	and	ip, ip, lr
   2a2ec:	ror	r1, lr, #11
   2a2f0:	ldr	fp, [sp, #72]	; 0x48
   2a2f4:	add	r3, r2, r3
   2a2f8:	eor	ip, ip, r6
   2a2fc:	eor	r1, r1, lr, ror #6
   2a300:	orr	r8, sl, r0
   2a304:	eor	r1, r1, lr, ror #25
   2a308:	add	ip, ip, r3
   2a30c:	add	ip, ip, r1
   2a310:	and	r8, r8, r9
   2a314:	and	r1, sl, r0
   2a318:	ror	r2, r0, #13
   2a31c:	ror	r3, fp, #18
   2a320:	eor	r2, r2, r0, ror #2
   2a324:	orr	r1, r8, r1
   2a328:	ldr	r8, [sp, #36]	; 0x24
   2a32c:	str	r4, [sp, #12]
   2a330:	eor	r2, r2, r0, ror #22
   2a334:	ldr	r4, [sp, #68]	; 0x44
   2a338:	eor	r3, r3, fp, ror #7
   2a33c:	eor	r3, r3, fp, lsr #3
   2a340:	add	r1, r2, r1
   2a344:	add	r1, r1, ip
   2a348:	add	r2, r7, ip
   2a34c:	add	r3, r3, r4
   2a350:	ldr	ip, [sp, #28]
   2a354:	ror	r4, r8, #19
   2a358:	orr	r7, r0, r1
   2a35c:	eor	r4, r4, r8, ror #17
   2a360:	add	r3, r3, ip
   2a364:	eor	r4, r4, r8, lsr #10
   2a368:	movw	ip, #13701	; 0x3585
   2a36c:	add	r3, r3, r4
   2a370:	eor	r8, r5, lr
   2a374:	movt	ip, #62478	; 0xf40e
   2a378:	and	r8, r8, r2
   2a37c:	add	ip, r3, ip
   2a380:	eor	r8, r8, r5
   2a384:	add	r6, ip, r6
   2a388:	str	r3, [sp, #40]	; 0x28
   2a38c:	add	r6, r8, r6
   2a390:	ror	r3, r2, #11
   2a394:	ldr	r8, [sp]
   2a398:	eor	r3, r3, r2, ror #6
   2a39c:	eor	r3, r3, r2, ror #25
   2a3a0:	ror	ip, r1, #13
   2a3a4:	add	r3, r6, r3
   2a3a8:	ldr	r6, [sp, #12]
   2a3ac:	ror	r4, r8, #18
   2a3b0:	and	r7, r7, sl
   2a3b4:	eor	r4, r4, r8, ror #7
   2a3b8:	eor	ip, ip, r1, ror #2
   2a3bc:	eor	r4, r4, r8, lsr #3
   2a3c0:	and	r8, r0, r1
   2a3c4:	add	r4, r4, fp
   2a3c8:	ror	fp, r6, #19
   2a3cc:	eor	fp, fp, r6, ror #17
   2a3d0:	eor	ip, ip, r1, ror #22
   2a3d4:	eor	fp, fp, r6, lsr #10
   2a3d8:	ldr	r6, [sp, #56]	; 0x38
   2a3dc:	orr	r7, r7, r8
   2a3e0:	add	r4, r4, r6
   2a3e4:	movw	r6, #41072	; 0xa070
   2a3e8:	add	r4, r4, fp
   2a3ec:	movt	r6, #4202	; 0x106a
   2a3f0:	add	r8, ip, r7
   2a3f4:	add	r6, r4, r6
   2a3f8:	add	ip, r9, r3
   2a3fc:	add	r8, r8, r3
   2a400:	add	r5, r6, r5
   2a404:	eor	r3, lr, r2
   2a408:	ldr	r6, [sp, #4]
   2a40c:	and	r3, r3, ip
   2a410:	eor	r3, r3, lr
   2a414:	str	r4, [sp, #16]
   2a418:	add	r5, r3, r5
   2a41c:	ldr	r4, [sp]
   2a420:	ror	r3, r6, #18
   2a424:	ror	r7, ip, #11
   2a428:	eor	r3, r3, r6, ror #7
   2a42c:	eor	r7, r7, ip, ror #6
   2a430:	eor	r3, r3, r6, lsr #3
   2a434:	orr	r9, r1, r8
   2a438:	add	r3, r3, r4
   2a43c:	ldr	r4, [sp, #40]	; 0x28
   2a440:	eor	r7, r7, ip, ror #25
   2a444:	ror	fp, r8, #13
   2a448:	add	r5, r5, r7
   2a44c:	and	r9, r9, r0
   2a450:	ror	r6, r4, #19
   2a454:	and	r7, r1, r8
   2a458:	eor	r6, r6, r4, ror #17
   2a45c:	eor	fp, fp, r8, ror #2
   2a460:	eor	r6, r6, r4, lsr #10
   2a464:	ldr	r4, [sp, #32]
   2a468:	eor	fp, fp, r8, ror #22
   2a46c:	orr	r7, r9, r7
   2a470:	add	r7, fp, r7
   2a474:	add	r3, r3, r4
   2a478:	add	fp, sl, r5
   2a47c:	add	r7, r7, r5
   2a480:	add	r3, r3, r6
   2a484:	eor	r5, r2, ip
   2a488:	movw	r4, #49430	; 0xc116
   2a48c:	movt	r4, #6564	; 0x19a4
   2a490:	add	r4, r3, r4
   2a494:	and	r5, r5, fp
   2a498:	eor	r5, r5, r2
   2a49c:	add	lr, r4, lr
   2a4a0:	add	lr, r5, lr
   2a4a4:	ldr	r5, [sp, #44]	; 0x2c
   2a4a8:	orr	r9, r8, r7
   2a4ac:	ldr	sl, [sp, #16]
   2a4b0:	str	r3, [sp, #64]	; 0x40
   2a4b4:	and	r9, r9, r1
   2a4b8:	ror	r4, r5, #18
   2a4bc:	ror	r3, fp, #11
   2a4c0:	eor	r4, r4, r5, ror #7
   2a4c4:	ror	r6, r7, #13
   2a4c8:	eor	r4, r4, r5, lsr #3
   2a4cc:	and	r5, r8, r7
   2a4d0:	orr	r9, r9, r5
   2a4d4:	eor	r3, r3, fp, ror #6
   2a4d8:	ldr	r5, [sp, #4]
   2a4dc:	eor	r6, r6, r7, ror #2
   2a4e0:	eor	r6, r6, r7, ror #22
   2a4e4:	eor	r3, r3, fp, ror #25
   2a4e8:	add	r3, lr, r3
   2a4ec:	add	r4, r4, r5
   2a4f0:	ror	lr, sl, #19
   2a4f4:	add	r5, r6, r9
   2a4f8:	ldr	r6, [sp, #60]	; 0x3c
   2a4fc:	eor	lr, lr, sl, ror #17
   2a500:	add	r0, r0, r3
   2a504:	eor	lr, lr, sl, lsr #10
   2a508:	add	r4, r4, r6
   2a50c:	add	r5, r5, r3
   2a510:	add	sl, r4, lr
   2a514:	eor	r3, ip, fp
   2a518:	movw	r6, #27656	; 0x6c08
   2a51c:	movt	r6, #7735	; 0x1e37
   2a520:	ldr	r9, [sp, #48]	; 0x30
   2a524:	add	r6, sl, r6
   2a528:	and	r3, r3, r0
   2a52c:	ror	r4, r0, #11
   2a530:	eor	r3, r3, ip
   2a534:	add	r2, r6, r2
   2a538:	eor	r4, r4, r0, ror #6
   2a53c:	orr	lr, r7, r5
   2a540:	eor	r4, r4, r0, ror #25
   2a544:	add	r2, r3, r2
   2a548:	add	r2, r2, r4
   2a54c:	and	lr, lr, r8
   2a550:	and	r4, r7, r5
   2a554:	ror	r3, r9, #18
   2a558:	eor	r3, r3, r9, ror #7
   2a55c:	orr	r4, lr, r4
   2a560:	ldr	lr, [sp, #64]	; 0x40
   2a564:	eor	r3, r3, r9, lsr #3
   2a568:	ldr	r9, [sp, #44]	; 0x2c
   2a56c:	ror	r6, r5, #13
   2a570:	eor	r6, r6, r5, ror #2
   2a574:	add	r1, r1, r2
   2a578:	add	r3, r3, r9
   2a57c:	ror	r9, lr, #19
   2a580:	eor	r9, r9, lr, ror #17
   2a584:	eor	r6, r6, r5, ror #22
   2a588:	eor	r9, r9, lr, lsr #10
   2a58c:	ldr	lr, [sp, #8]
   2a590:	add	r4, r6, r4
   2a594:	add	r3, r3, lr
   2a598:	movw	lr, #30540	; 0x774c
   2a59c:	add	r9, r3, r9
   2a5a0:	movt	lr, #10056	; 0x2748
   2a5a4:	eor	r3, fp, r0
   2a5a8:	str	r9, [sp, #4]
   2a5ac:	add	r4, r4, r2
   2a5b0:	add	lr, r9, lr
   2a5b4:	and	r3, r3, r1
   2a5b8:	ldr	r9, [sp, #52]	; 0x34
   2a5bc:	ror	r2, r1, #11
   2a5c0:	add	ip, lr, ip
   2a5c4:	eor	r3, r3, fp
   2a5c8:	eor	r2, r2, r1, ror #6
   2a5cc:	orr	r6, r5, r4
   2a5d0:	eor	r2, r2, r1, ror #25
   2a5d4:	add	r3, r3, ip
   2a5d8:	and	r6, r6, r7
   2a5dc:	add	r3, r3, r2
   2a5e0:	ror	lr, r4, #13
   2a5e4:	and	r2, r5, r4
   2a5e8:	ror	ip, r9, #18
   2a5ec:	orr	r6, r6, r2
   2a5f0:	eor	lr, lr, r4, ror #2
   2a5f4:	ldr	r2, [sp, #48]	; 0x30
   2a5f8:	eor	ip, ip, r9, ror #7
   2a5fc:	eor	lr, lr, r4, ror #22
   2a600:	eor	ip, ip, r9, lsr #3
   2a604:	add	ip, ip, r2
   2a608:	add	lr, lr, r6
   2a60c:	ror	r2, sl, #19
   2a610:	ldr	r6, [sp, #36]	; 0x24
   2a614:	eor	r2, r2, sl, ror #17
   2a618:	add	r8, r8, r3
   2a61c:	add	lr, lr, r3
   2a620:	add	ip, ip, r6
   2a624:	eor	r3, r2, sl, lsr #10
   2a628:	ldr	r9, [sp, #20]
   2a62c:	add	ip, ip, r3
   2a630:	movw	r2, #48309	; 0xbcb5
   2a634:	movt	r2, #13488	; 0x34b0
   2a638:	ror	r6, lr, #13
   2a63c:	mov	r3, ip
   2a640:	eor	ip, r0, r1
   2a644:	add	r2, r3, r2
   2a648:	and	ip, ip, r8
   2a64c:	add	r2, r2, fp
   2a650:	eor	ip, ip, r0
   2a654:	add	ip, ip, r2
   2a658:	ror	r2, r9, #18
   2a65c:	str	r3, [sp, #44]	; 0x2c
   2a660:	eor	r2, r2, r9, ror #7
   2a664:	ror	r3, r8, #11
   2a668:	eor	r2, r2, r9, lsr #3
   2a66c:	eor	r3, r3, r8, ror #6
   2a670:	ldr	r9, [sp, #52]	; 0x34
   2a674:	orr	fp, r4, lr
   2a678:	eor	r3, r3, r8, ror #25
   2a67c:	add	r3, ip, r3
   2a680:	and	fp, fp, r5
   2a684:	and	ip, r4, lr
   2a688:	eor	r6, r6, lr, ror #2
   2a68c:	add	r2, r2, r9
   2a690:	ldr	r9, [sp, #4]
   2a694:	eor	r6, r6, lr, ror #22
   2a698:	orr	ip, fp, ip
   2a69c:	add	ip, r6, ip
   2a6a0:	add	r7, r7, r3
   2a6a4:	add	ip, ip, r3
   2a6a8:	ror	fp, r9, #19
   2a6ac:	ldr	r3, [sp, #12]
   2a6b0:	eor	r6, fp, r9, ror #17
   2a6b4:	eor	r6, r6, r9, lsr #10
   2a6b8:	ldr	r9, [sp, #24]
   2a6bc:	add	r2, r2, r3
   2a6c0:	eor	r3, r1, r8
   2a6c4:	add	r2, r2, r6
   2a6c8:	and	r3, r3, r7
   2a6cc:	eor	r3, r3, r1
   2a6d0:	ror	fp, r7, #11
   2a6d4:	mov	r6, r2
   2a6d8:	movw	r2, #3251	; 0xcb3
   2a6dc:	movt	r2, #14620	; 0x391c
   2a6e0:	eor	fp, fp, r7, ror #6
   2a6e4:	add	r2, r6, r2
   2a6e8:	str	r6, [sp, #48]	; 0x30
   2a6ec:	add	r2, r2, r0
   2a6f0:	orr	r6, lr, ip
   2a6f4:	add	r3, r3, r2
   2a6f8:	ror	r2, r9, #18
   2a6fc:	eor	r2, r2, r9, ror #7
   2a700:	eor	fp, fp, r7, ror #25
   2a704:	eor	r2, r2, r9, lsr #3
   2a708:	ldr	r9, [sp, #20]
   2a70c:	ror	r0, ip, #13
   2a710:	add	r3, r3, fp
   2a714:	and	r6, r6, r4
   2a718:	and	fp, lr, ip
   2a71c:	eor	r0, r0, ip, ror #2
   2a720:	add	r2, r2, r9
   2a724:	ldr	r9, [sp, #44]	; 0x2c
   2a728:	orr	r6, r6, fp
   2a72c:	eor	r0, r0, ip, ror #22
   2a730:	add	r5, r5, r3
   2a734:	add	r0, r0, r6
   2a738:	movw	r6, #43594	; 0xaa4a
   2a73c:	add	r0, r0, r3
   2a740:	ror	fp, r9, #19
   2a744:	ldr	r3, [sp, #40]	; 0x28
   2a748:	eor	fp, fp, r9, ror #17
   2a74c:	eor	fp, fp, r9, lsr #10
   2a750:	movt	r6, #20184	; 0x4ed8
   2a754:	add	r2, r2, r3
   2a758:	ldr	r9, [sp, #28]
   2a75c:	add	r2, r2, fp
   2a760:	ror	fp, r0, #13
   2a764:	eor	fp, fp, r0, ror #2
   2a768:	mov	r3, r2
   2a76c:	eor	r2, r8, r7
   2a770:	add	r6, r3, r6
   2a774:	and	r2, r2, r5
   2a778:	eor	r2, r2, r8
   2a77c:	add	r1, r6, r1
   2a780:	add	r1, r2, r1
   2a784:	ror	r2, r9, #18
   2a788:	eor	r2, r2, r9, ror #7
   2a78c:	str	r3, [sp, #52]	; 0x34
   2a790:	eor	r2, r2, r9, lsr #3
   2a794:	ldr	r9, [sp, #24]
   2a798:	ror	r3, r5, #11
   2a79c:	orr	r6, ip, r0
   2a7a0:	eor	r3, r3, r5, ror #6
   2a7a4:	add	r2, r2, r9
   2a7a8:	ldr	r9, [sp, #48]	; 0x30
   2a7ac:	eor	r3, r3, r5, ror #25
   2a7b0:	add	r3, r1, r3
   2a7b4:	and	r6, r6, lr
   2a7b8:	and	r1, ip, r0
   2a7bc:	eor	fp, fp, r0, ror #22
   2a7c0:	orr	r1, r6, r1
   2a7c4:	ror	r6, r9, #19
   2a7c8:	add	r1, fp, r1
   2a7cc:	eor	fp, r6, r9, ror #17
   2a7d0:	ldr	r6, [sp, #16]
   2a7d4:	eor	fp, fp, r9, lsr #10
   2a7d8:	add	r1, r1, r3
   2a7dc:	add	r4, r4, r3
   2a7e0:	add	r2, r2, r6
   2a7e4:	ldr	r9, [sp, #56]	; 0x38
   2a7e8:	add	r2, r2, fp
   2a7ec:	movw	r3, #51791	; 0xca4f
   2a7f0:	movt	r3, #23452	; 0x5b9c
   2a7f4:	orr	r6, r0, r1
   2a7f8:	mov	fp, r2
   2a7fc:	eor	r2, r7, r5
   2a800:	and	r2, r2, r4
   2a804:	add	r3, fp, r3
   2a808:	add	r3, r3, r8
   2a80c:	eor	r8, r2, r7
   2a810:	add	r8, r8, r3
   2a814:	ror	r3, r9, #18
   2a818:	str	fp, [sp, #24]
   2a81c:	eor	r3, r3, r9, ror #7
   2a820:	ror	fp, r4, #11
   2a824:	eor	r3, r3, r9, lsr #3
   2a828:	eor	fp, fp, r4, ror #6
   2a82c:	ldr	r9, [sp, #28]
   2a830:	eor	fp, fp, r4, ror #25
   2a834:	ror	r2, r1, #13
   2a838:	add	r8, r8, fp
   2a83c:	and	r6, r6, ip
   2a840:	and	fp, r0, r1
   2a844:	eor	r2, r2, r1, ror #2
   2a848:	add	r3, r3, r9
   2a84c:	ldr	r9, [sp, #52]	; 0x34
   2a850:	orr	r6, r6, fp
   2a854:	eor	r2, r2, r1, ror #22
   2a858:	add	r2, r2, r6
   2a85c:	add	lr, lr, r8
   2a860:	add	r2, r2, r8
   2a864:	ror	fp, r9, #19
   2a868:	ldr	r8, [sp, #64]	; 0x40
   2a86c:	eor	fp, fp, r9, ror #17
   2a870:	eor	fp, fp, r9, lsr #10
   2a874:	movw	r6, #28659	; 0x6ff3
   2a878:	add	r3, r3, r8
   2a87c:	ldr	r9, [sp, #32]
   2a880:	add	r8, r3, fp
   2a884:	movt	r6, #26670	; 0x682e
   2a888:	eor	fp, r5, r4
   2a88c:	add	r6, r8, r6
   2a890:	and	fp, fp, lr
   2a894:	add	r6, r6, r7
   2a898:	eor	r7, fp, r5
   2a89c:	ror	r3, lr, #11
   2a8a0:	add	r7, r7, r6
   2a8a4:	ror	r6, r9, #18
   2a8a8:	eor	r6, r6, r9, ror #7
   2a8ac:	eor	r3, r3, lr, ror #6
   2a8b0:	eor	r6, r6, r9, lsr #3
   2a8b4:	ldr	r9, [sp, #56]	; 0x38
   2a8b8:	str	r8, [sp, #28]
   2a8bc:	eor	r3, r3, lr, ror #25
   2a8c0:	add	r6, r6, r9
   2a8c4:	ldr	r9, [sp, #24]
   2a8c8:	orr	r8, r1, r2
   2a8cc:	ror	fp, r2, #13
   2a8d0:	add	r7, r7, r3
   2a8d4:	and	r8, r8, r0
   2a8d8:	and	r3, r1, r2
   2a8dc:	eor	fp, fp, r2, ror #2
   2a8e0:	eor	fp, fp, r2, ror #22
   2a8e4:	orr	r3, r8, r3
   2a8e8:	ror	r8, r9, #19
   2a8ec:	add	r3, fp, r3
   2a8f0:	eor	fp, r8, r9, ror #17
   2a8f4:	add	sl, r6, sl
   2a8f8:	eor	fp, fp, r9, lsr #10
   2a8fc:	add	ip, ip, r7
   2a900:	add	r3, r3, r7
   2a904:	add	r7, sl, fp
   2a908:	eor	r6, r4, lr
   2a90c:	ldr	fp, [sp, #60]	; 0x3c
   2a910:	mov	sl, r7
   2a914:	movw	r7, #33518	; 0x82ee
   2a918:	movt	r7, #29839	; 0x748f
   2a91c:	str	sl, [sp, #56]	; 0x38
   2a920:	add	r7, sl, r7
   2a924:	and	r6, r6, ip
   2a928:	ror	sl, ip, #11
   2a92c:	eor	r6, r6, r4
   2a930:	add	r5, r7, r5
   2a934:	eor	sl, sl, ip, ror #6
   2a938:	orr	r8, r2, r3
   2a93c:	eor	sl, sl, ip, ror #25
   2a940:	ror	r7, r3, #13
   2a944:	add	r5, r6, r5
   2a948:	add	r5, r5, sl
   2a94c:	and	r8, r8, r1
   2a950:	and	sl, r2, r3
   2a954:	eor	r7, r7, r3, ror #2
   2a958:	ror	r6, fp, #18
   2a95c:	ldr	r9, [sp, #32]
   2a960:	orr	sl, r8, sl
   2a964:	eor	r6, r6, fp, ror #7
   2a968:	eor	r7, r7, r3, ror #22
   2a96c:	eor	r6, r6, fp, lsr #3
   2a970:	add	r7, r7, sl
   2a974:	ldr	fp, [sp, #28]
   2a978:	add	r6, r6, r9
   2a97c:	add	r9, r7, r5
   2a980:	str	r3, [sp]
   2a984:	add	r0, r0, r5
   2a988:	mov	sl, r9
   2a98c:	ror	r8, fp, #19
   2a990:	ldr	r9, [sp, #4]
   2a994:	eor	r8, r8, fp, ror #17
   2a998:	eor	r8, r8, fp, lsr #10
   2a99c:	movw	r5, #25455	; 0x636f
   2a9a0:	add	r6, r6, r9
   2a9a4:	movt	r5, #30885	; 0x78a5
   2a9a8:	add	r6, r6, r8
   2a9ac:	eor	r9, lr, ip
   2a9b0:	mov	r3, r0
   2a9b4:	ldr	fp, [sp, #8]
   2a9b8:	add	r5, r6, r5
   2a9bc:	and	r9, r9, r3
   2a9c0:	eor	r9, r9, lr
   2a9c4:	add	r4, r5, r4
   2a9c8:	mov	r0, sl
   2a9cc:	add	r4, r9, r4
   2a9d0:	ldr	sl, [sp]
   2a9d4:	ror	r7, r3, #11
   2a9d8:	ldr	r9, [sp]
   2a9dc:	ror	r8, r0, #13
   2a9e0:	str	r3, [sp, #20]
   2a9e4:	ror	r5, fp, #18
   2a9e8:	orr	sl, sl, r0
   2a9ec:	eor	r7, r7, r3, ror #6
   2a9f0:	eor	r8, r8, r0, ror #2
   2a9f4:	mov	r3, r0
   2a9f8:	eor	r5, r5, fp, ror #7
   2a9fc:	and	fp, r9, r0
   2aa00:	ldr	r0, [sp, #20]
   2aa04:	and	sl, sl, r2
   2aa08:	ldr	r9, [sp, #8]
   2aa0c:	eor	r8, r8, r3, ror #22
   2aa10:	orr	sl, sl, fp
   2aa14:	movw	fp, #30740	; 0x7814
   2aa18:	eor	r7, r7, r0, ror #25
   2aa1c:	ldr	r0, [sp, #56]	; 0x38
   2aa20:	add	r4, r4, r7
   2aa24:	add	sl, r8, sl
   2aa28:	ldr	r8, [sp, #60]	; 0x3c
   2aa2c:	add	r1, r1, r4
   2aa30:	eor	r5, r5, r9, lsr #3
   2aa34:	str	r1, [sp, #4]
   2aa38:	ror	r9, r0, #19
   2aa3c:	ldr	r1, [sp, #44]	; 0x2c
   2aa40:	add	r5, r5, r8
   2aa44:	eor	r9, r9, r0, ror #17
   2aa48:	mov	r8, r0
   2aa4c:	add	r5, r5, r1
   2aa50:	add	r0, sl, r4
   2aa54:	eor	r9, r9, r8, lsr #10
   2aa58:	ldr	sl, [sp, #20]
   2aa5c:	add	r5, r5, r9
   2aa60:	ldr	r1, [sp, #4]
   2aa64:	movt	fp, #33992	; 0x84c8
   2aa68:	eor	r7, ip, sl
   2aa6c:	add	fp, r5, fp
   2aa70:	and	r7, r7, r1
   2aa74:	add	lr, fp, lr
   2aa78:	ldr	fp, [sp, #4]
   2aa7c:	eor	r7, r7, ip
   2aa80:	ror	r9, r1, #11
   2aa84:	add	lr, r7, lr
   2aa88:	ldr	r1, [sp, #36]	; 0x24
   2aa8c:	orr	sl, r3, r0
   2aa90:	ldr	r7, [sp, #4]
   2aa94:	eor	r9, r9, fp, ror #6
   2aa98:	ldr	fp, [sp]
   2aa9c:	ror	r8, r0, #13
   2aaa0:	ror	r4, r1, #18
   2aaa4:	eor	r8, r8, r0, ror #2
   2aaa8:	and	sl, sl, fp
   2aaac:	eor	r9, r9, r7, ror #25
   2aab0:	mov	fp, r3
   2aab4:	and	fp, fp, r0
   2aab8:	add	lr, lr, r9
   2aabc:	eor	r8, r8, r0, ror #22
   2aac0:	ldr	r9, [sp, #8]
   2aac4:	eor	r4, r4, r1, ror #7
   2aac8:	orr	fp, sl, fp
   2aacc:	eor	r4, r4, r1, lsr #3
   2aad0:	add	fp, r8, fp
   2aad4:	ror	sl, r6, #19
   2aad8:	ldr	r8, [sp, #48]	; 0x30
   2aadc:	add	r4, r4, r9
   2aae0:	eor	sl, sl, r6, ror #17
   2aae4:	add	r1, fp, lr
   2aae8:	add	r4, r4, r8
   2aaec:	eor	r6, sl, r6, lsr #10
   2aaf0:	add	r2, r2, lr
   2aaf4:	add	r6, r4, r6
   2aaf8:	ldr	sl, [sp, #20]
   2aafc:	mov	fp, #520	; 0x208
   2ab00:	ldr	lr, [sp, #4]
   2ab04:	movt	fp, #36039	; 0x8cc7
   2ab08:	add	fp, r6, fp
   2ab0c:	ldr	r4, [sp, #12]
   2ab10:	eor	r8, sl, lr
   2ab14:	add	ip, fp, ip
   2ab18:	ldr	fp, [sp, #12]
   2ab1c:	and	r8, r8, r2
   2ab20:	eor	r8, r8, sl
   2ab24:	ror	r4, r4, #18
   2ab28:	add	ip, r8, ip
   2ab2c:	ldr	r8, [sp, #36]	; 0x24
   2ab30:	eor	r4, r4, fp, ror #7
   2ab34:	orr	r9, r0, r1
   2ab38:	ror	r7, r2, #11
   2ab3c:	ror	lr, r1, #13
   2ab40:	eor	r4, r4, fp, lsr #3
   2ab44:	and	sl, r0, r1
   2ab48:	eor	r7, r7, r2, ror #6
   2ab4c:	and	r9, r9, r3
   2ab50:	eor	lr, lr, r1, ror #2
   2ab54:	ror	fp, r5, #19
   2ab58:	add	r4, r4, r8
   2ab5c:	ldr	r8, [sp, #52]	; 0x34
   2ab60:	str	r0, [sp, #8]
   2ab64:	eor	r7, r7, r2, ror #25
   2ab68:	ldr	r0, [sp, #4]
   2ab6c:	eor	lr, lr, r1, ror #22
   2ab70:	str	r3, [sp, #32]
   2ab74:	orr	r9, r9, sl
   2ab78:	ldr	r3, [sp]
   2ab7c:	eor	fp, fp, r5, ror #17
   2ab80:	add	ip, ip, r7
   2ab84:	add	r9, lr, r9
   2ab88:	add	r4, r4, r8
   2ab8c:	eor	fp, fp, r5, lsr #10
   2ab90:	add	r3, r3, ip
   2ab94:	add	fp, r4, fp
   2ab98:	add	ip, r9, ip
   2ab9c:	eor	r7, r0, r2
   2aba0:	movw	r9, #65530	; 0xfffa
   2aba4:	ldr	r0, [sp, #20]
   2aba8:	movt	r9, #37054	; 0x90be
   2abac:	and	r7, r7, r3
   2abb0:	add	r9, fp, r9
   2abb4:	ldr	sl, [sp, #40]	; 0x28
   2abb8:	add	r0, r9, r0
   2abbc:	ldr	r9, [sp, #4]
   2abc0:	orr	r8, r1, ip
   2abc4:	str	r1, [sp, #20]
   2abc8:	eor	r7, r7, r9
   2abcc:	and	r9, r1, ip
   2abd0:	ldr	r1, [sp, #8]
   2abd4:	ror	r5, r3, #11
   2abd8:	ror	r4, ip, #13
   2abdc:	eor	r5, r5, r3, ror #6
   2abe0:	and	r8, r8, r1
   2abe4:	eor	r4, r4, ip, ror #2
   2abe8:	eor	r5, r5, r3, ror #25
   2abec:	eor	r4, r4, ip, ror #22
   2abf0:	ror	lr, sl, #18
   2abf4:	add	r0, r7, r0
   2abf8:	orr	r8, r8, r9
   2abfc:	add	r0, r0, r5
   2ac00:	add	r8, r4, r8
   2ac04:	ldr	r5, [sp, #32]
   2ac08:	ldr	r4, [sp, #12]
   2ac0c:	eor	lr, lr, sl, ror #7
   2ac10:	eor	lr, lr, sl, lsr #3
   2ac14:	ror	sl, r6, #19
   2ac18:	add	lr, lr, r4
   2ac1c:	eor	r4, sl, r6, ror #17
   2ac20:	add	sl, r5, r0
   2ac24:	ldr	r5, [sp, #24]
   2ac28:	eor	r6, r4, r6, lsr #10
   2ac2c:	add	r0, r8, r0
   2ac30:	add	lr, lr, r5
   2ac34:	ldr	r8, [sp, #20]
   2ac38:	add	r5, lr, r6
   2ac3c:	ldr	r1, [sp, #4]
   2ac40:	movw	r7, #27883	; 0x6ceb
   2ac44:	movt	r7, #42064	; 0xa450
   2ac48:	mov	lr, r5
   2ac4c:	eor	r5, r2, r3
   2ac50:	add	r7, lr, r7
   2ac54:	orr	r6, ip, r0
   2ac58:	and	r5, r5, sl
   2ac5c:	str	lr, [sp]
   2ac60:	eor	r5, r5, r2
   2ac64:	ror	r4, sl, #11
   2ac68:	ror	lr, r0, #13
   2ac6c:	add	r1, r7, r1
   2ac70:	and	r6, r6, r8
   2ac74:	ldr	r8, [sp, #16]
   2ac78:	and	r7, ip, r0
   2ac7c:	eor	r4, r4, sl, ror #6
   2ac80:	eor	lr, lr, r0, ror #2
   2ac84:	add	r1, r5, r1
   2ac88:	ldr	r5, [sp, #16]
   2ac8c:	eor	r4, r4, sl, ror #25
   2ac90:	orr	r6, r6, r7
   2ac94:	eor	lr, lr, r0, ror #22
   2ac98:	add	r1, r1, r4
   2ac9c:	add	lr, lr, r6
   2aca0:	ldr	r4, [sp, #40]	; 0x28
   2aca4:	ror	r8, r8, #18
   2aca8:	ldr	r6, [sp, #8]
   2acac:	eor	r8, r8, r5, ror #7
   2acb0:	movw	r9, #41975	; 0xa3f7
   2acb4:	movt	r9, #48889	; 0xbef9
   2acb8:	add	r9, r4, r9
   2acbc:	eor	r8, r8, r5, lsr #3
   2acc0:	ror	r7, fp, #19
   2acc4:	add	r5, r6, r1
   2acc8:	ldr	r6, [sp, #28]
   2accc:	add	r1, lr, r1
   2acd0:	add	r8, r8, r9
   2acd4:	eor	r7, r7, fp, ror #17
   2acd8:	add	lr, r8, r6
   2acdc:	eor	fp, r7, fp, lsr #10
   2ace0:	eor	r8, r3, sl
   2ace4:	add	fp, lr, fp
   2ace8:	ror	r9, r1, #13
   2acec:	and	r8, r8, r5
   2acf0:	ror	lr, r5, #11
   2acf4:	eor	r9, r9, r1, ror #2
   2acf8:	eor	r8, r8, r3
   2acfc:	add	r2, fp, r2
   2ad00:	eor	lr, lr, r5, ror #6
   2ad04:	orr	r4, r0, r1
   2ad08:	eor	r7, r9, r1, ror #22
   2ad0c:	add	fp, r2, r8
   2ad10:	ldr	r9, [sp, #64]	; 0x40
   2ad14:	eor	lr, lr, r5, ror #25
   2ad18:	and	r4, r4, ip
   2ad1c:	and	r6, r0, r1
   2ad20:	add	fp, fp, lr
   2ad24:	ldr	lr, [sp]
   2ad28:	orr	r6, r4, r6
   2ad2c:	ldr	r4, [sp, #16]
   2ad30:	ror	r8, r9, #18
   2ad34:	movw	r2, #30962	; 0x78f2
   2ad38:	movt	r2, #50801	; 0xc671
   2ad3c:	add	r7, r7, r6
   2ad40:	add	r2, r4, r2
   2ad44:	eor	r6, r8, r9, ror #7
   2ad48:	ror	r4, lr, #19
   2ad4c:	eor	r6, r6, r9, lsr #3
   2ad50:	eor	r4, r4, lr, ror #17
   2ad54:	ldr	lr, [sp, #56]	; 0x38
   2ad58:	add	r6, r6, r2
   2ad5c:	add	r7, r7, fp
   2ad60:	add	r6, r6, lr
   2ad64:	ldr	lr, [sp]
   2ad68:	ldr	r8, [sp, #20]
   2ad6c:	orr	r9, r1, r7
   2ad70:	ror	r2, r7, #13
   2ad74:	and	r9, r9, r0
   2ad78:	add	fp, r8, fp
   2ad7c:	eor	r4, r4, lr, lsr #10
   2ad80:	eor	r8, sl, r5
   2ad84:	and	lr, r1, r7
   2ad88:	and	r8, r8, fp
   2ad8c:	eor	r2, r2, r7, ror #2
   2ad90:	add	r6, r6, r4
   2ad94:	orr	r9, r9, lr
   2ad98:	ldr	lr, [sp, #96]	; 0x60
   2ad9c:	eor	r2, r2, r7, ror #22
   2ada0:	add	r6, r6, r3
   2ada4:	ror	r4, fp, #11
   2ada8:	eor	r8, r8, sl
   2adac:	add	ip, lr, ip
   2adb0:	eor	r4, r4, fp, ror #6
   2adb4:	ldr	lr, [sp, #88]	; 0x58
   2adb8:	add	r9, r2, r9
   2adbc:	add	r8, r6, r8
   2adc0:	ldr	r2, [sp, #80]	; 0x50
   2adc4:	eor	r4, r4, fp, ror #25
   2adc8:	ldr	r6, [sp, #104]	; 0x68
   2adcc:	add	r8, r8, r4
   2add0:	ldr	r3, [sp, #108]	; 0x6c
   2add4:	add	r5, lr, r5
   2add8:	add	sl, r6, sl
   2addc:	ldr	lr, [sp, #76]	; 0x4c
   2ade0:	ldr	r6, [sp, #92]	; 0x5c
   2ade4:	add	r9, r9, r2
   2ade8:	ldr	r4, [sp, #84]	; 0x54
   2adec:	add	r9, r9, r8
   2adf0:	ldr	r2, [sp, #100]	; 0x64
   2adf4:	add	r0, r6, r0
   2adf8:	str	sl, [r3, #36]	; 0x24
   2adfc:	add	r1, lr, r1
   2ae00:	str	r0, [r3, #20]
   2ae04:	add	r7, r4, r7
   2ae08:	str	r5, [r3, #32]
   2ae0c:	add	fp, r2, fp
   2ae10:	str	r1, [r3, #16]
   2ae14:	add	r8, ip, r8
   2ae18:	str	r7, [r3, #12]
   2ae1c:	str	fp, [r3, #28]
   2ae20:	str	r9, [r3, #8]
   2ae24:	str	r8, [r3, #24]
   2ae28:	add	sp, sp, #116	; 0x74
   2ae2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ae34:	mov	r6, r0
   2ae38:	ldr	r8, [r0]
   2ae3c:	mov	r7, r2
   2ae40:	mov	r4, r1
   2ae44:	adds	r3, r8, r2
   2ae48:	str	r3, [r0]
   2ae4c:	and	r8, r8, #63	; 0x3f
   2ae50:	ldrcs	r3, [r0, #4]
   2ae54:	rsb	r5, r8, #64	; 0x40
   2ae58:	addcs	r3, r3, #1
   2ae5c:	strcs	r3, [r0, #4]
   2ae60:	cmp	r5, r2
   2ae64:	movhi	r3, #0
   2ae68:	movls	r3, #1
   2ae6c:	cmp	r8, #0
   2ae70:	moveq	r3, #0
   2ae74:	cmp	r3, #0
   2ae78:	bne	2aed0 <crc32@@Base+0x10b74>
   2ae7c:	cmp	r7, #63	; 0x3f
   2ae80:	bls	2aeb0 <crc32@@Base+0x10b54>
   2ae84:	sub	r5, r7, #64	; 0x40
   2ae88:	bic	r5, r5, #63	; 0x3f
   2ae8c:	add	r5, r5, #64	; 0x40
   2ae90:	add	r5, r4, r5
   2ae94:	mov	r1, r4
   2ae98:	mov	r0, r6
   2ae9c:	add	r4, r4, #64	; 0x40
   2aea0:	bl	28b54 <crc32@@Base+0xe7f8>
   2aea4:	cmp	r4, r5
   2aea8:	bne	2ae94 <crc32@@Base+0x10b38>
   2aeac:	and	r7, r7, #63	; 0x3f
   2aeb0:	cmp	r7, #0
   2aeb4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2aeb8:	add	r0, r6, #40	; 0x28
   2aebc:	mov	r2, r7
   2aec0:	add	r0, r0, r8
   2aec4:	mov	r1, r4
   2aec8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2aecc:	b	12658 <memcpy@plt>
   2aed0:	add	r9, r0, #40	; 0x28
   2aed4:	mov	r2, r5
   2aed8:	add	r0, r9, r8
   2aedc:	sub	r7, r7, r5
   2aee0:	bl	12658 <memcpy@plt>
   2aee4:	mov	r1, r9
   2aee8:	mov	r0, r6
   2aeec:	add	r4, r4, r5
   2aef0:	bl	28b54 <crc32@@Base+0xe7f8>
   2aef4:	mov	r8, #0
   2aef8:	b	2ae7c <crc32@@Base+0x10b20>
   2aefc:	movw	r2, #58983	; 0xe667
   2af00:	movw	r3, #44677	; 0xae85
   2af04:	movt	r2, #27145	; 0x6a09
   2af08:	movt	r3, #47975	; 0xbb67
   2af0c:	strd	r2, [r0, #8]
   2af10:	movw	r2, #62322	; 0xf372
   2af14:	movw	r3, #62778	; 0xf53a
   2af18:	movt	r2, #15470	; 0x3c6e
   2af1c:	movt	r3, #42319	; 0xa54f
   2af20:	strd	r2, [r0, #16]
   2af24:	movw	r2, #21119	; 0x527f
   2af28:	movw	r3, #26764	; 0x688c
   2af2c:	movt	r2, #20750	; 0x510e
   2af30:	movt	r3, #39685	; 0x9b05
   2af34:	strd	r2, [r0, #24]
   2af38:	movw	r2, #55723	; 0xd9ab
   2af3c:	movw	r3, #52505	; 0xcd19
   2af40:	movt	r2, #8067	; 0x1f83
   2af44:	movt	r3, #23520	; 0x5be0
   2af48:	strd	r2, [r0, #32]
   2af4c:	mov	r3, #0
   2af50:	str	r3, [r0]
   2af54:	str	r3, [r0, #4]
   2af58:	bx	lr
   2af5c:	cmp	r2, #0
   2af60:	bxeq	lr
   2af64:	b	2ae30 <crc32@@Base+0x10ad4>
   2af68:	ldr	r3, [r0]
   2af6c:	push	{r4, r5, r6, lr}
   2af70:	mov	r4, r0
   2af74:	ldr	r0, [r0, #4]
   2af78:	movw	r6, #3824	; 0xef0
   2af7c:	movt	r6, #5
   2af80:	mov	r5, r1
   2af84:	lsr	r1, r3, #29
   2af88:	sub	sp, sp, #16
   2af8c:	orr	r1, r1, r0, lsl #3
   2af90:	ldr	r0, [r6]
   2af94:	and	r2, r3, #63	; 0x3f
   2af98:	lsl	r3, r3, #3
   2af9c:	cmp	r2, #55	; 0x37
   2afa0:	lsr	ip, r1, #24
   2afa4:	rsbls	r2, r2, #56	; 0x38
   2afa8:	rsbhi	r2, r2, #120	; 0x78
   2afac:	strb	r1, [sp, #7]
   2afb0:	strb	ip, [sp, #4]
   2afb4:	lsr	ip, r1, #16
   2afb8:	str	r0, [sp, #12]
   2afbc:	lsr	r1, r1, #8
   2afc0:	mov	r0, r4
   2afc4:	strb	r1, [sp, #6]
   2afc8:	lsr	r1, r3, #24
   2afcc:	strb	r1, [sp, #8]
   2afd0:	lsr	r1, r3, #16
   2afd4:	strb	r1, [sp, #9]
   2afd8:	movw	r1, #7012	; 0x1b64
   2afdc:	movt	r1, #5
   2afe0:	strb	r3, [sp, #11]
   2afe4:	lsr	r3, r3, #8
   2afe8:	strb	ip, [sp, #5]
   2afec:	strb	r3, [sp, #10]
   2aff0:	bl	2ae30 <crc32@@Base+0x10ad4>
   2aff4:	mov	r2, #8
   2aff8:	add	r1, sp, #4
   2affc:	mov	r0, r4
   2b000:	bl	2ae30 <crc32@@Base+0x10ad4>
   2b004:	ldrb	r3, [r4, #11]
   2b008:	strb	r3, [r5]
   2b00c:	ldrh	r3, [r4, #10]
   2b010:	strb	r3, [r5, #1]
   2b014:	ldr	r3, [r4, #8]
   2b018:	lsr	r3, r3, #8
   2b01c:	strb	r3, [r5, #2]
   2b020:	ldr	r3, [r4, #8]
   2b024:	strb	r3, [r5, #3]
   2b028:	ldrb	r3, [r4, #15]
   2b02c:	strb	r3, [r5, #4]
   2b030:	ldrh	r3, [r4, #14]
   2b034:	strb	r3, [r5, #5]
   2b038:	ldr	r3, [r4, #12]
   2b03c:	lsr	r3, r3, #8
   2b040:	strb	r3, [r5, #6]
   2b044:	ldr	r3, [r4, #12]
   2b048:	strb	r3, [r5, #7]
   2b04c:	ldrb	r3, [r4, #19]
   2b050:	strb	r3, [r5, #8]
   2b054:	ldrh	r3, [r4, #18]
   2b058:	strb	r3, [r5, #9]
   2b05c:	ldr	r3, [r4, #16]
   2b060:	lsr	r3, r3, #8
   2b064:	strb	r3, [r5, #10]
   2b068:	ldr	r3, [r4, #16]
   2b06c:	strb	r3, [r5, #11]
   2b070:	ldrb	r3, [r4, #23]
   2b074:	strb	r3, [r5, #12]
   2b078:	ldrh	r3, [r4, #22]
   2b07c:	strb	r3, [r5, #13]
   2b080:	ldr	r3, [r4, #20]
   2b084:	lsr	r3, r3, #8
   2b088:	strb	r3, [r5, #14]
   2b08c:	ldr	r3, [r4, #20]
   2b090:	strb	r3, [r5, #15]
   2b094:	ldrb	r3, [r4, #27]
   2b098:	strb	r3, [r5, #16]
   2b09c:	ldrh	r3, [r4, #26]
   2b0a0:	strb	r3, [r5, #17]
   2b0a4:	ldr	r3, [r4, #24]
   2b0a8:	lsr	r3, r3, #8
   2b0ac:	strb	r3, [r5, #18]
   2b0b0:	ldr	r3, [r4, #24]
   2b0b4:	strb	r3, [r5, #19]
   2b0b8:	ldrb	r3, [r4, #31]
   2b0bc:	strb	r3, [r5, #20]
   2b0c0:	ldrh	r3, [r4, #30]
   2b0c4:	strb	r3, [r5, #21]
   2b0c8:	ldr	r3, [r4, #28]
   2b0cc:	lsr	r3, r3, #8
   2b0d0:	strb	r3, [r5, #22]
   2b0d4:	ldr	r3, [r4, #28]
   2b0d8:	strb	r3, [r5, #23]
   2b0dc:	ldrb	r3, [r4, #35]	; 0x23
   2b0e0:	strb	r3, [r5, #24]
   2b0e4:	ldrh	r3, [r4, #34]	; 0x22
   2b0e8:	strb	r3, [r5, #25]
   2b0ec:	ldr	r3, [r4, #32]
   2b0f0:	lsr	r3, r3, #8
   2b0f4:	strb	r3, [r5, #26]
   2b0f8:	ldr	r3, [r4, #32]
   2b0fc:	strb	r3, [r5, #27]
   2b100:	ldrb	r3, [r4, #39]	; 0x27
   2b104:	strb	r3, [r5, #28]
   2b108:	ldrh	r3, [r4, #38]	; 0x26
   2b10c:	strb	r3, [r5, #29]
   2b110:	ldr	r3, [r4, #36]	; 0x24
   2b114:	lsr	r3, r3, #8
   2b118:	strb	r3, [r5, #30]
   2b11c:	ldr	r3, [r4, #36]	; 0x24
   2b120:	strb	r3, [r5, #31]
   2b124:	ldr	r2, [sp, #12]
   2b128:	ldr	r3, [r6]
   2b12c:	cmp	r2, r3
   2b130:	bne	2b13c <crc32@@Base+0x10de0>
   2b134:	add	sp, sp, #16
   2b138:	pop	{r4, r5, r6, pc}
   2b13c:	bl	12538 <__stack_chk_fail@plt>
   2b140:	push	{r4, r5, r6, lr}
   2b144:	movw	r4, #3824	; 0xef0
   2b148:	movt	r4, #5
   2b14c:	subs	ip, r1, #0
   2b150:	sub	sp, sp, #112	; 0x70
   2b154:	movw	r3, #58983	; 0xe667
   2b158:	ldr	r1, [r4]
   2b15c:	movt	r3, #27145	; 0x6a09
   2b160:	add	r6, sp, #4
   2b164:	str	r3, [sp, #12]
   2b168:	mov	r5, r2
   2b16c:	movw	r3, #44677	; 0xae85
   2b170:	str	r1, [sp, #108]	; 0x6c
   2b174:	movt	r3, #47975	; 0xbb67
   2b178:	str	r3, [sp, #16]
   2b17c:	movw	r3, #62322	; 0xf372
   2b180:	movt	r3, #15470	; 0x3c6e
   2b184:	str	r3, [sp, #20]
   2b188:	movw	r3, #62778	; 0xf53a
   2b18c:	movt	r3, #42319	; 0xa54f
   2b190:	str	r3, [sp, #24]
   2b194:	movw	r3, #21119	; 0x527f
   2b198:	movt	r3, #20750	; 0x510e
   2b19c:	str	r3, [sp, #28]
   2b1a0:	movw	r3, #26764	; 0x688c
   2b1a4:	movt	r3, #39685	; 0x9b05
   2b1a8:	str	r3, [sp, #32]
   2b1ac:	movw	r3, #55723	; 0xd9ab
   2b1b0:	movt	r3, #8067	; 0x1f83
   2b1b4:	str	r3, [sp, #36]	; 0x24
   2b1b8:	movw	r3, #52505	; 0xcd19
   2b1bc:	movt	r3, #23520	; 0x5be0
   2b1c0:	str	r3, [sp, #40]	; 0x28
   2b1c4:	mov	r3, #0
   2b1c8:	str	r3, [sp, #4]
   2b1cc:	str	r3, [sp, #8]
   2b1d0:	beq	2b1e4 <crc32@@Base+0x10e88>
   2b1d4:	mov	r1, r0
   2b1d8:	mov	r2, ip
   2b1dc:	mov	r0, r6
   2b1e0:	bl	2ae30 <crc32@@Base+0x10ad4>
   2b1e4:	mov	r1, r5
   2b1e8:	mov	r0, r6
   2b1ec:	bl	2af68 <crc32@@Base+0x10c0c>
   2b1f0:	ldr	r2, [sp, #108]	; 0x6c
   2b1f4:	ldr	r3, [r4]
   2b1f8:	cmp	r2, r3
   2b1fc:	bne	2b208 <crc32@@Base+0x10eac>
   2b200:	add	sp, sp, #112	; 0x70
   2b204:	pop	{r4, r5, r6, pc}
   2b208:	bl	12538 <__stack_chk_fail@plt>
   2b20c:	ldr	r0, [r0, #4]
   2b210:	cmp	r0, r3
   2b214:	bgt	2b234 <crc32@@Base+0x10ed8>
   2b218:	ldr	r3, [r1]
   2b21c:	mov	r0, r1
   2b220:	push	{r4, lr}
   2b224:	str	r3, [r2]
   2b228:	bl	121c0 <free@plt>
   2b22c:	mov	r0, #0
   2b230:	pop	{r4, pc}
   2b234:	mvn	r0, #0
   2b238:	bx	lr
   2b23c:	ldr	r0, [r0, #4]
   2b240:	cmp	r0, r3
   2b244:	bgt	2b264 <crc32@@Base+0x10f08>
   2b248:	ldrh	r3, [r1]
   2b24c:	mov	r0, r1
   2b250:	push	{r4, lr}
   2b254:	strh	r3, [r2]
   2b258:	bl	121c0 <free@plt>
   2b25c:	mov	r0, #0
   2b260:	pop	{r4, pc}
   2b264:	mvn	r0, #0
   2b268:	bx	lr
   2b26c:	push	{r4, lr}
   2b270:	mov	r4, r1
   2b274:	ldr	r0, [r4]
   2b278:	mov	r1, r2
   2b27c:	mov	r2, r3
   2b280:	bl	1a35c <crc32@@Base>
   2b284:	str	r0, [r4]
   2b288:	mov	r0, #0
   2b28c:	pop	{r4, pc}
   2b290:	push	{r4, lr}
   2b294:	mov	r0, #4
   2b298:	mov	r4, r1
   2b29c:	bl	12664 <malloc@plt>
   2b2a0:	mov	r3, #0
   2b2a4:	str	r0, [r4]
   2b2a8:	str	r3, [r0]
   2b2ac:	mov	r0, r3
   2b2b0:	pop	{r4, pc}
   2b2b4:	push	{r4, lr}
   2b2b8:	mov	r0, #2
   2b2bc:	mov	r4, r1
   2b2c0:	bl	12664 <malloc@plt>
   2b2c4:	mov	r3, #0
   2b2c8:	str	r0, [r4]
   2b2cc:	strh	r3, [r0]
   2b2d0:	mov	r0, r3
   2b2d4:	pop	{r4, pc}
   2b2d8:	push	{r4, lr}
   2b2dc:	mov	r4, r1
   2b2e0:	ldrh	r0, [r4]
   2b2e4:	mov	r1, r2
   2b2e8:	mov	r2, r3
   2b2ec:	bl	27120 <crc32@@Base+0xcdc4>
   2b2f0:	strh	r0, [r4]
   2b2f4:	mov	r0, #0
   2b2f8:	pop	{r4, pc}
   2b2fc:	ldr	r0, [r0, #4]
   2b300:	cmp	r0, r3
   2b304:	bgt	2b32c <crc32@@Base+0x10fd0>
   2b308:	push	{r4, lr}
   2b30c:	mov	r4, r1
   2b310:	mov	r0, r4
   2b314:	mov	r1, r2
   2b318:	bl	2af68 <crc32@@Base+0x10c0c>
   2b31c:	mov	r0, r4
   2b320:	bl	121c0 <free@plt>
   2b324:	mov	r0, #0
   2b328:	pop	{r4, pc}
   2b32c:	mvn	r0, #0
   2b330:	bx	lr
   2b334:	mov	r0, r1
   2b338:	mov	r1, r2
   2b33c:	push	{r4, lr}
   2b340:	mov	r2, r3
   2b344:	bl	2af5c <crc32@@Base+0x10c00>
   2b348:	mov	r0, #0
   2b34c:	pop	{r4, pc}
   2b350:	push	{r4, r5, r6, lr}
   2b354:	mov	r0, #104	; 0x68
   2b358:	mov	r4, r1
   2b35c:	bl	12664 <malloc@plt>
   2b360:	mov	r5, r0
   2b364:	bl	2aefc <crc32@@Base+0x10ba0>
   2b368:	str	r5, [r4]
   2b36c:	mov	r0, #0
   2b370:	pop	{r4, r5, r6, pc}
   2b374:	ldr	r0, [r0, #4]
   2b378:	cmp	r0, r3
   2b37c:	bgt	2b3a4 <crc32@@Base+0x11048>
   2b380:	push	{r4, lr}
   2b384:	mov	r4, r1
   2b388:	mov	r0, r4
   2b38c:	mov	r1, r2
   2b390:	bl	286e4 <crc32@@Base+0xe388>
   2b394:	mov	r0, r4
   2b398:	bl	121c0 <free@plt>
   2b39c:	mov	r0, #0
   2b3a0:	pop	{r4, pc}
   2b3a4:	mvn	r0, #0
   2b3a8:	bx	lr
   2b3ac:	mov	r0, r1
   2b3b0:	mov	r1, r2
   2b3b4:	push	{r4, lr}
   2b3b8:	mov	r2, r3
   2b3bc:	bl	286d8 <crc32@@Base+0xe37c>
   2b3c0:	mov	r0, #0
   2b3c4:	pop	{r4, pc}
   2b3c8:	push	{r4, r5, r6, lr}
   2b3cc:	mov	r0, #92	; 0x5c
   2b3d0:	mov	r4, r1
   2b3d4:	bl	12664 <malloc@plt>
   2b3d8:	mov	r5, r0
   2b3dc:	bl	28694 <crc32@@Base+0xe338>
   2b3e0:	str	r5, [r4]
   2b3e4:	mov	r0, #0
   2b3e8:	pop	{r4, r5, r6, pc}
   2b3ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2b3f0:	movw	r5, #7076	; 0x1ba4
   2b3f4:	movt	r5, #5
   2b3f8:	mov	r8, r0
   2b3fc:	mov	r9, r1
   2b400:	mov	r4, #0
   2b404:	mov	r7, #28
   2b408:	mul	r6, r7, r4
   2b40c:	mov	r0, r8
   2b410:	add	r4, r4, #1
   2b414:	ldr	r1, [r5, r6]
   2b418:	bl	12718 <strcmp@plt>
   2b41c:	cmp	r0, #0
   2b420:	beq	2b434 <crc32@@Base+0x110d8>
   2b424:	cmp	r4, #4
   2b428:	bne	2b408 <crc32@@Base+0x110ac>
   2b42c:	mvn	r0, #92	; 0x5c
   2b430:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b434:	add	r5, r5, r6
   2b438:	str	r5, [r9]
   2b43c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b440:	push	{r4, r5, r6, r7, r8, lr}
   2b444:	mov	r6, r0
   2b448:	ldr	r4, [pc, #84]	; 2b4a4 <crc32@@Base+0x11148>
   2b44c:	mov	r7, r1
   2b450:	mov	r5, #0
   2b454:	ldr	r1, [r4, #-16]
   2b458:	mov	r0, r6
   2b45c:	bl	12718 <strcmp@plt>
   2b460:	cmp	r0, #0
   2b464:	bne	2b474 <crc32@@Base+0x11118>
   2b468:	ldr	r3, [r4]
   2b46c:	cmp	r3, #0
   2b470:	bne	2b48c <crc32@@Base+0x11130>
   2b474:	add	r5, r5, #1
   2b478:	add	r4, r4, #28
   2b47c:	cmp	r5, #4
   2b480:	bne	2b454 <crc32@@Base+0x110f8>
   2b484:	mvn	r0, #92	; 0x5c
   2b488:	pop	{r4, r5, r6, r7, r8, pc}
   2b48c:	movw	r3, #7076	; 0x1ba4
   2b490:	movt	r3, #5
   2b494:	mov	r2, #28
   2b498:	mla	r5, r2, r5, r3
   2b49c:	str	r5, [r7]
   2b4a0:	pop	{r4, r5, r6, r7, r8, pc}
   2b4a4:			; <UNDEFINED> instruction: 0x00051bb4
   2b4a8:	subs	r0, r0, #11
   2b4ac:	movne	r0, #1
   2b4b0:	bx	lr
   2b4b4:	ldr	r3, [r0]
   2b4b8:	mov	r0, #60672	; 0xed00
   2b4bc:	movt	r0, #41388	; 0xa1ac
   2b4c0:	bic	r3, r3, #255	; 0xff
   2b4c4:	subs	r0, r3, r0
   2b4c8:	mvnne	r0, #0
   2b4cc:	bx	lr
   2b4d0:	push	{r4, lr}
   2b4d4:	mov	r4, r0
   2b4d8:	movw	r0, #53364	; 0xd074
   2b4dc:	movt	r0, #3
   2b4e0:	bl	12310 <puts@plt>
   2b4e4:	ldr	r2, [r4]
   2b4e8:	movw	r1, #53400	; 0xd098
   2b4ec:	mov	r0, #1
   2b4f0:	movt	r1, #3
   2b4f4:	bl	1282c <__printf_chk@plt>
   2b4f8:	ldr	r2, [r4, #4]
   2b4fc:	movw	r1, #53420	; 0xd0ac
   2b500:	mov	r0, #1
   2b504:	movt	r1, #3
   2b508:	bl	1282c <__printf_chk@plt>
   2b50c:	ldr	r2, [r4, #8]
   2b510:	movw	r1, #53440	; 0xd0c0
   2b514:	mov	r0, #1
   2b518:	movt	r1, #3
   2b51c:	bl	1282c <__printf_chk@plt>
   2b520:	ldr	r2, [r4, #12]
   2b524:	movw	r1, #53460	; 0xd0d4
   2b528:	mov	r0, #1
   2b52c:	movt	r1, #3
   2b530:	bl	1282c <__printf_chk@plt>
   2b534:	ldr	r2, [r4, #16]
   2b538:	movw	r1, #53480	; 0xd0e8
   2b53c:	mov	r0, #1
   2b540:	movt	r1, #3
   2b544:	pop	{r4, lr}
   2b548:	b	1282c <__printf_chk@plt>
   2b54c:	cmp	r0, #0
   2b550:	beq	2b5d4 <crc32@@Base+0x11278>
   2b554:	ldr	r3, [r0, #64]	; 0x40
   2b558:	ldrb	r3, [r3]
   2b55c:	cmp	r3, #0
   2b560:	beq	2b5a8 <crc32@@Base+0x1124c>
   2b564:	ldr	r3, [r0]
   2b568:	ldr	r2, [r0, #8]
   2b56c:	cmp	r3, #0
   2b570:	beq	2b590 <crc32@@Base+0x11234>
   2b574:	cmp	r2, #0
   2b578:	bne	2b588 <crc32@@Base+0x1122c>
   2b57c:	ldr	r3, [r0, #16]
   2b580:	cmp	r3, #0
   2b584:	beq	2b598 <crc32@@Base+0x1123c>
   2b588:	mov	r0, #1
   2b58c:	bx	lr
   2b590:	cmp	r2, #0
   2b594:	bne	2b57c <crc32@@Base+0x11220>
   2b598:	ldr	r0, [r0, #28]
   2b59c:	adds	r0, r0, #0
   2b5a0:	movne	r0, #1
   2b5a4:	bx	lr
   2b5a8:	movw	r1, #7868	; 0x1ebc
   2b5ac:	movt	r1, #5
   2b5b0:	ldr	r3, [r0, #80]	; 0x50
   2b5b4:	movw	r2, #53500	; 0xd0fc
   2b5b8:	push	{r4, lr}
   2b5bc:	movt	r2, #3
   2b5c0:	ldr	r0, [r1]
   2b5c4:	mov	r1, #1
   2b5c8:	bl	12358 <__fprintf_chk@plt>
   2b5cc:	mvn	r0, #0
   2b5d0:	pop	{r4, pc}
   2b5d4:	mvn	r0, #0
   2b5d8:	bx	lr
   2b5dc:	push	{r4, r5, r6, r7, r8, lr}
   2b5e0:	movw	r4, #3824	; 0xef0
   2b5e4:	movt	r4, #5
   2b5e8:	sub	sp, sp, #16
   2b5ec:	mov	r5, r0
   2b5f0:	mov	r8, r1
   2b5f4:	ldr	r3, [r4]
   2b5f8:	mov	r7, r2
   2b5fc:	str	r3, [sp, #12]
   2b600:	bl	12748 <__errno_location@plt>
   2b604:	mov	r3, #0
   2b608:	mov	r2, #16
   2b60c:	add	r1, sp, #8
   2b610:	mov	r6, r0
   2b614:	mov	r0, r5
   2b618:	str	r3, [r6]
   2b61c:	bl	12370 <strtoul@plt>
   2b620:	ldr	r3, [r6]
   2b624:	cmp	r3, #0
   2b628:	bne	2b650 <crc32@@Base+0x112f4>
   2b62c:	ldr	r3, [sp, #8]
   2b630:	cmp	r3, r5
   2b634:	beq	2b650 <crc32@@Base+0x112f4>
   2b638:	ldr	r2, [sp, #12]
   2b63c:	ldr	r3, [r4]
   2b640:	cmp	r2, r3
   2b644:	bne	2b680 <crc32@@Base+0x11324>
   2b648:	add	sp, sp, #16
   2b64c:	pop	{r4, r5, r6, r7, r8, pc}
   2b650:	movw	r1, #7868	; 0x1ebc
   2b654:	movt	r1, #5
   2b658:	str	r5, [sp, #4]
   2b65c:	mov	r3, r8
   2b660:	str	r7, [sp]
   2b664:	movw	r2, #30028	; 0x754c
   2b668:	ldr	r0, [r1]
   2b66c:	movt	r2, #3
   2b670:	mov	r1, #1
   2b674:	bl	12358 <__fprintf_chk@plt>
   2b678:	mov	r0, #1
   2b67c:	bl	12298 <exit@plt>
   2b680:	bl	12538 <__stack_chk_fail@plt>
   2b684:	movw	r2, #3824	; 0xef0
   2b688:	movt	r2, #5
   2b68c:	ldr	ip, [r3, #64]	; 0x40
   2b690:	movw	r1, #53956	; 0xd2c4
   2b694:	ldr	r3, [r2]
   2b698:	movt	r1, #3
   2b69c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b6a0:	sub	sp, sp, #52	; 0x34
   2b6a4:	mov	r9, r0
   2b6a8:	mov	r0, ip
   2b6ac:	str	r2, [sp, #20]
   2b6b0:	mov	r2, #0
   2b6b4:	str	r3, [sp, #44]	; 0x2c
   2b6b8:	str	r2, [sp, #28]
   2b6bc:	str	ip, [sp, #12]
   2b6c0:	bl	123d0 <fopen@plt>
   2b6c4:	subs	r3, r0, #0
   2b6c8:	str	r3, [sp, #8]
   2b6cc:	addne	r1, r9, #2048	; 0x800
   2b6d0:	movne	r3, r9
   2b6d4:	mvnne	r2, #0
   2b6d8:	beq	2ba90 <crc32@@Base+0x11734>
   2b6dc:	strb	r2, [r3], #1
   2b6e0:	cmp	r3, r1
   2b6e4:	bne	2b6dc <crc32@@Base+0x11380>
   2b6e8:	movw	r8, #7188	; 0x1c14
   2b6ec:	movw	fp, #29960	; 0x7508
   2b6f0:	movw	r5, #29964	; 0x750c
   2b6f4:	movt	r8, #5
   2b6f8:	movt	fp, #3
   2b6fc:	movt	r5, #3
   2b700:	mov	r7, #0
   2b704:	mov	r3, #60672	; 0xed00
   2b708:	movt	r3, #41388	; 0xa1ac
   2b70c:	str	r3, [sp, #16]
   2b710:	ldr	r3, [sp, #8]
   2b714:	mov	r2, #10
   2b718:	add	r1, sp, #40	; 0x28
   2b71c:	add	r0, sp, #28
   2b720:	bl	121cc <__getdelim@plt>
   2b724:	cmp	r0, #0
   2b728:	ble	2ba28 <crc32@@Base+0x116cc>
   2b72c:	add	r2, sp, #32
   2b730:	mov	r1, fp
   2b734:	ldr	r0, [sp, #28]
   2b738:	add	r7, r7, #1
   2b73c:	bl	122c8 <__strtok_r@plt>
   2b740:	cmp	r0, #0
   2b744:	beq	2b710 <crc32@@Base+0x113b4>
   2b748:	mov	sl, #0
   2b74c:	str	r0, [sp, #28]
   2b750:	mov	r6, sl
   2b754:	add	r2, sp, #36	; 0x24
   2b758:	mov	r1, r5
   2b75c:	bl	122c8 <__strtok_r@plt>
   2b760:	subs	r4, r0, #0
   2b764:	beq	2b710 <crc32@@Base+0x113b4>
   2b768:	ldrb	r3, [r4]
   2b76c:	cmp	r3, #35	; 0x23
   2b770:	beq	2b710 <crc32@@Base+0x113b4>
   2b774:	cmp	r6, #0
   2b778:	bne	2ba4c <crc32@@Base+0x116f0>
   2b77c:	movw	r1, #53584	; 0xd150
   2b780:	mov	r2, r4
   2b784:	movt	r1, #3
   2b788:	mov	r0, r8
   2b78c:	bl	1b1d8 <crc32@@Base+0xe7c>
   2b790:	subs	sl, r0, #0
   2b794:	blt	2ba60 <crc32@@Base+0x11704>
   2b798:	mov	r0, r6
   2b79c:	add	r2, sp, #36	; 0x24
   2b7a0:	mov	r1, r5
   2b7a4:	str	r6, [sp, #28]
   2b7a8:	bl	122c8 <__strtok_r@plt>
   2b7ac:	subs	r4, r0, #0
   2b7b0:	beq	2b710 <crc32@@Base+0x113b4>
   2b7b4:	ldrb	r3, [r4]
   2b7b8:	cmp	r3, #35	; 0x23
   2b7bc:	beq	2b710 <crc32@@Base+0x113b4>
   2b7c0:	sub	r3, sl, #1
   2b7c4:	cmp	r3, #5
   2b7c8:	ldrls	pc, [pc, r3, lsl #2]
   2b7cc:	b	2b9f4 <crc32@@Base+0x11698>
   2b7d0:	andeq	fp, r2, ip, lsl #17
   2b7d4:	andeq	fp, r2, r4, lsl #19
   2b7d8:	andeq	fp, r2, ip, asr #18
   2b7dc:			; <UNDEFINED> instruction: 0x0002b9bc
   2b7e0:	andeq	fp, r2, r8, ror #15
   2b7e4:	andeq	fp, r2, r4, lsl r9
   2b7e8:	mov	r0, r4
   2b7ec:	mov	r2, r7
   2b7f0:	ldr	r1, [sp, #12]
   2b7f4:	mov	r4, #0
   2b7f8:	bl	2b5dc <crc32@@Base+0x11280>
   2b7fc:	add	r2, sp, #36	; 0x24
   2b800:	mov	r1, r5
   2b804:	str	r4, [sp, #28]
   2b808:	str	r0, [r9, #16]
   2b80c:	mov	r0, r4
   2b810:	bl	122c8 <__strtok_r@plt>
   2b814:	cmp	r0, #0
   2b818:	beq	2b710 <crc32@@Base+0x113b4>
   2b81c:	ldrb	r3, [r0]
   2b820:	cmp	r3, #35	; 0x23
   2b824:	beq	2b710 <crc32@@Base+0x113b4>
   2b828:	add	r2, sp, #36	; 0x24
   2b82c:	mov	r1, r5
   2b830:	mov	r0, r4
   2b834:	str	r4, [sp, #28]
   2b838:	bl	122c8 <__strtok_r@plt>
   2b83c:	cmp	r0, #0
   2b840:	beq	2b710 <crc32@@Base+0x113b4>
   2b844:	ldrb	r3, [r0]
   2b848:	cmp	r3, #35	; 0x23
   2b84c:	beq	2b710 <crc32@@Base+0x113b4>
   2b850:	mov	r0, r4
   2b854:	add	r2, sp, #36	; 0x24
   2b858:	mov	r1, r5
   2b85c:	str	r4, [sp, #28]
   2b860:	bl	122c8 <__strtok_r@plt>
   2b864:	cmp	r0, #0
   2b868:	beq	2b710 <crc32@@Base+0x113b4>
   2b86c:	ldrb	r3, [r0]
   2b870:	cmp	r3, #35	; 0x23
   2b874:	beq	2b710 <crc32@@Base+0x113b4>
   2b878:	mov	r6, #4
   2b87c:	mov	r0, #0
   2b880:	add	r6, r6, #1
   2b884:	str	r0, [sp, #28]
   2b888:	b	2b754 <crc32@@Base+0x113f8>
   2b88c:	movw	r1, #53604	; 0xd164
   2b890:	mov	r2, r4
   2b894:	movt	r1, #3
   2b898:	ldr	r0, [pc, #588]	; 2baec <crc32@@Base+0x11790>
   2b89c:	bl	1b1d8 <crc32@@Base+0xe7c>
   2b8a0:	cmn	r0, #1
   2b8a4:	str	r0, [r9]
   2b8a8:	beq	2babc <crc32@@Base+0x11760>
   2b8ac:	ldr	r3, [r8, #108]	; 0x6c
   2b8b0:	mov	r1, r5
   2b8b4:	ldr	r2, [sp, #16]
   2b8b8:	cmp	r3, #1
   2b8bc:	mov	r3, #0
   2b8c0:	add	r0, r0, r2
   2b8c4:	add	r2, sp, #36	; 0x24
   2b8c8:	str	r0, [r9]
   2b8cc:	mov	r0, r3
   2b8d0:	bne	2ba58 <crc32@@Base+0x116fc>
   2b8d4:	str	r3, [sp, #28]
   2b8d8:	bl	122c8 <__strtok_r@plt>
   2b8dc:	cmp	r0, #0
   2b8e0:	beq	2b710 <crc32@@Base+0x113b4>
   2b8e4:	ldrb	r3, [r0]
   2b8e8:	cmp	r3, #35	; 0x23
   2b8ec:	beq	2b710 <crc32@@Base+0x113b4>
   2b8f0:	mov	r4, #0
   2b8f4:	add	r2, sp, #36	; 0x24
   2b8f8:	mov	r0, r4
   2b8fc:	mov	r1, r5
   2b900:	str	r4, [sp, #28]
   2b904:	bl	122c8 <__strtok_r@plt>
   2b908:	cmp	r0, #0
   2b90c:	bne	2b844 <crc32@@Base+0x114e8>
   2b910:	b	2b710 <crc32@@Base+0x113b4>
   2b914:	mov	r0, r4
   2b918:	mov	r2, r7
   2b91c:	ldr	r1, [sp, #12]
   2b920:	mov	r4, #0
   2b924:	bl	2b5dc <crc32@@Base+0x11280>
   2b928:	add	r2, sp, #36	; 0x24
   2b92c:	mov	r1, r5
   2b930:	str	r4, [sp, #28]
   2b934:	str	r0, [r9, #20]
   2b938:	mov	r0, r4
   2b93c:	bl	122c8 <__strtok_r@plt>
   2b940:	cmp	r0, #0
   2b944:	bne	2b81c <crc32@@Base+0x114c0>
   2b948:	b	2b710 <crc32@@Base+0x113b4>
   2b94c:	mov	r0, r4
   2b950:	mov	r2, r7
   2b954:	ldr	r1, [sp, #12]
   2b958:	mov	r4, #0
   2b95c:	bl	2b5dc <crc32@@Base+0x11280>
   2b960:	add	r2, sp, #36	; 0x24
   2b964:	mov	r1, r5
   2b968:	str	r4, [sp, #28]
   2b96c:	str	r0, [r9, #8]
   2b970:	mov	r0, r4
   2b974:	bl	122c8 <__strtok_r@plt>
   2b978:	cmp	r0, #0
   2b97c:	bne	2b81c <crc32@@Base+0x114c0>
   2b980:	b	2b710 <crc32@@Base+0x113b4>
   2b984:	mov	r0, r4
   2b988:	mov	r2, r7
   2b98c:	ldr	r1, [sp, #12]
   2b990:	mov	r4, #0
   2b994:	bl	2b5dc <crc32@@Base+0x11280>
   2b998:	add	r2, sp, #36	; 0x24
   2b99c:	mov	r1, r5
   2b9a0:	str	r4, [sp, #28]
   2b9a4:	str	r0, [r9, #4]
   2b9a8:	mov	r0, r4
   2b9ac:	bl	122c8 <__strtok_r@plt>
   2b9b0:	cmp	r0, #0
   2b9b4:	bne	2b81c <crc32@@Base+0x114c0>
   2b9b8:	b	2b710 <crc32@@Base+0x113b4>
   2b9bc:	mov	r0, r4
   2b9c0:	mov	r2, r7
   2b9c4:	ldr	r1, [sp, #12]
   2b9c8:	mov	r4, #0
   2b9cc:	bl	2b5dc <crc32@@Base+0x11280>
   2b9d0:	add	r2, sp, #36	; 0x24
   2b9d4:	mov	r1, r5
   2b9d8:	str	r4, [sp, #28]
   2b9dc:	str	r0, [r9, #12]
   2b9e0:	mov	r0, r4
   2b9e4:	bl	122c8 <__strtok_r@plt>
   2b9e8:	cmp	r0, #0
   2b9ec:	bne	2b81c <crc32@@Base+0x114c0>
   2b9f0:	b	2b710 <crc32@@Base+0x113b4>
   2b9f4:	mov	r3, #0
   2b9f8:	add	r2, sp, #36	; 0x24
   2b9fc:	mov	r0, r3
   2ba00:	mov	r1, r5
   2ba04:	str	r3, [sp, #28]
   2ba08:	bl	122c8 <__strtok_r@plt>
   2ba0c:	cmp	r0, #0
   2ba10:	beq	2b710 <crc32@@Base+0x113b4>
   2ba14:	ldrb	r3, [r0]
   2ba18:	cmp	r3, #35	; 0x23
   2ba1c:	beq	2b710 <crc32@@Base+0x113b4>
   2ba20:	mov	r6, #2
   2ba24:	b	2b87c <crc32@@Base+0x11520>
   2ba28:	ldr	r0, [sp, #8]
   2ba2c:	bl	126b8 <fclose@plt>
   2ba30:	ldr	r3, [sp, #20]
   2ba34:	ldr	r2, [sp, #44]	; 0x2c
   2ba38:	ldr	r3, [r3]
   2ba3c:	cmp	r2, r3
   2ba40:	bne	2bab8 <crc32@@Base+0x1175c>
   2ba44:	add	sp, sp, #52	; 0x34
   2ba48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ba4c:	cmp	r6, #1
   2ba50:	bne	2b87c <crc32@@Base+0x11520>
   2ba54:	b	2b7c0 <crc32@@Base+0x11464>
   2ba58:	str	r3, [r8, #108]	; 0x6c
   2ba5c:	b	2b8d4 <crc32@@Base+0x11578>
   2ba60:	movw	r1, #7868	; 0x1ebc
   2ba64:	movt	r1, #5
   2ba68:	str	r4, [sp, #4]
   2ba6c:	movw	r2, #29988	; 0x7524
   2ba70:	str	r7, [sp]
   2ba74:	movt	r2, #3
   2ba78:	ldr	r0, [r1]
   2ba7c:	mov	r1, #1
   2ba80:	ldr	r3, [sp, #12]
   2ba84:	bl	12358 <__fprintf_chk@plt>
   2ba88:	mov	r0, #1
   2ba8c:	bl	12298 <exit@plt>
   2ba90:	movw	r1, #7868	; 0x1ebc
   2ba94:	movt	r1, #5
   2ba98:	ldr	r3, [sp, #12]
   2ba9c:	movw	r2, #42132	; 0xa494
   2baa0:	ldr	r0, [r1]
   2baa4:	movt	r2, #3
   2baa8:	mov	r1, #1
   2baac:	bl	12358 <__fprintf_chk@plt>
   2bab0:	mov	r0, #1
   2bab4:	bl	12298 <exit@plt>
   2bab8:	bl	12538 <__stack_chk_fail@plt>
   2babc:	movw	r1, #7868	; 0x1ebc
   2bac0:	movt	r1, #5
   2bac4:	str	r4, [sp, #4]
   2bac8:	movw	r2, #53632	; 0xd180
   2bacc:	str	r7, [sp]
   2bad0:	movt	r2, #3
   2bad4:	ldr	r0, [r1]
   2bad8:	mov	r1, #1
   2badc:	ldr	r3, [sp, #12]
   2bae0:	bl	12358 <__fprintf_chk@plt>
   2bae4:	mov	r0, #1
   2bae8:	bl	12298 <exit@plt>
   2baec:	andeq	r1, r5, r8, ror #24
   2baf0:	cmp	r1, #2240	; 0x8c0
   2baf4:	bcc	2bb88 <crc32@@Base+0x1182c>
   2baf8:	ldr	r3, [r0, #56]	; 0x38
   2bafc:	cmp	r3, #0
   2bb00:	bne	2bb88 <crc32@@Base+0x1182c>
   2bb04:	ldr	r3, [r0, #68]	; 0x44
   2bb08:	cmp	r3, #0
   2bb0c:	bne	2bb88 <crc32@@Base+0x1182c>
   2bb10:	ldr	r2, [r0, #32]
   2bb14:	movw	r3, #21862	; 0x5566
   2bb18:	movt	r3, #43673	; 0xaa99
   2bb1c:	cmp	r2, r3
   2bb20:	bne	2bb88 <crc32@@Base+0x1182c>
   2bb24:	ldr	r2, [r0, #36]	; 0x24
   2bb28:	movw	r3, #20056	; 0x4e58
   2bb2c:	movt	r3, #22604	; 0x584c
   2bb30:	cmp	r2, r3
   2bb34:	bne	2bb88 <crc32@@Base+0x1182c>
   2bb38:	ldr	ip, [r0, #44]	; 0x2c
   2bb3c:	movw	r3, #41918	; 0xa3be
   2bb40:	ldr	r2, [r0, #40]	; 0x28
   2bb44:	movt	r3, #741	; 0x2e5
   2bb48:	ldr	r1, [r0, #48]	; 0x30
   2bb4c:	add	r2, r2, ip
   2bb50:	ldr	ip, [r0, #60]	; 0x3c
   2bb54:	push	{lr}		; (str lr, [sp, #-4]!)
   2bb58:	add	r3, r2, r3
   2bb5c:	ldr	lr, [r0, #52]	; 0x34
   2bb60:	add	r3, r3, r1
   2bb64:	ldr	r1, [r0, #64]	; 0x40
   2bb68:	add	r3, r3, lr
   2bb6c:	ldr	r2, [r0, #72]	; 0x48
   2bb70:	add	r0, r3, ip
   2bb74:	add	r0, r0, r1
   2bb78:	mvn	r0, r0
   2bb7c:	subs	r0, r2, r0
   2bb80:	mvnne	r0, #0
   2bb84:	pop	{pc}		; (ldr pc, [sp], #4)
   2bb88:	mvn	r0, #0
   2bb8c:	bx	lr
   2bb90:	subs	r0, r0, #26
   2bb94:	movne	r0, #1
   2bb98:	bx	lr
   2bb9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bba0:	movw	r5, #3824	; 0xef0
   2bba4:	movt	r5, #5
   2bba8:	sub	sp, sp, #104	; 0x68
   2bbac:	subs	r4, r0, #0
   2bbb0:	ldr	r2, [r5]
   2bbb4:	str	r2, [sp, #100]	; 0x64
   2bbb8:	beq	2bc30 <crc32@@Base+0x118d4>
   2bbbc:	add	ip, r4, #2048	; 0x800
   2bbc0:	mov	r2, r4
   2bbc4:	mvn	r0, #0
   2bbc8:	movw	lr, #21862	; 0x5566
   2bbcc:	movt	lr, #43673	; 0xaa99
   2bbd0:	str	lr, [r4, #32]
   2bbd4:	movw	lr, #20056	; 0x4e58
   2bbd8:	movt	lr, #22604	; 0x584c
   2bbdc:	str	lr, [r4, #36]	; 0x24
   2bbe0:	movw	lr, #65534	; 0xfffe
   2bbe4:	movt	lr, #60159	; 0xeaff
   2bbe8:	str	lr, [r4]
   2bbec:	str	lr, [r4, #4]
   2bbf0:	str	lr, [r4, #8]
   2bbf4:	str	lr, [r4, #12]
   2bbf8:	str	lr, [r4, #16]
   2bbfc:	str	lr, [r4, #20]
   2bc00:	str	lr, [r4, #24]
   2bc04:	str	lr, [r4, #28]
   2bc08:	mov	lr, #0
   2bc0c:	str	lr, [r4, #40]	; 0x28
   2bc10:	str	r0, [r2, #160]	; 0xa0
   2bc14:	add	r2, r2, #8
   2bc18:	str	r0, [r2, #156]	; 0x9c
   2bc1c:	cmp	r2, ip
   2bc20:	bne	2bc10 <crc32@@Base+0x118b4>
   2bc24:	mov	r2, #0
   2bc28:	str	r2, [r4, #56]	; 0x38
   2bc2c:	str	r2, [r4, #68]	; 0x44
   2bc30:	ldr	ip, [r3, #4]
   2bc34:	mov	r0, #2240	; 0x8c0
   2bc38:	ldr	r2, [r1, #44]	; 0x2c
   2bc3c:	mov	r1, #0
   2bc40:	cmp	ip, #0
   2bc44:	str	r1, [r4, #60]	; 0x3c
   2bc48:	ldr	r6, [r3, #68]	; 0x44
   2bc4c:	ldrne	r1, [r3, #60]	; 0x3c
   2bc50:	str	r0, [r4, #48]	; 0x30
   2bc54:	str	r2, [r4, #52]	; 0x34
   2bc58:	strne	r1, [r4, #60]	; 0x3c
   2bc5c:	str	r2, [r4, #64]	; 0x40
   2bc60:	ldrb	r3, [r6]
   2bc64:	cmp	r3, #0
   2bc68:	moveq	r0, r2
   2bc6c:	moveq	lr, #2240	; 0x8c0
   2bc70:	bne	2bcd4 <crc32@@Base+0x11978>
   2bc74:	ldr	ip, [r4, #36]	; 0x24
   2bc78:	ldr	r3, [r4, #32]
   2bc7c:	ldr	r1, [r4, #40]	; 0x28
   2bc80:	add	r3, r3, ip
   2bc84:	ldr	ip, [r4, #44]	; 0x2c
   2bc88:	add	r3, r3, r1
   2bc8c:	ldr	r1, [r4, #56]	; 0x38
   2bc90:	add	r3, r3, ip
   2bc94:	ldr	ip, [r4, #60]	; 0x3c
   2bc98:	add	r3, r3, r1
   2bc9c:	ldr	r1, [r4, #68]	; 0x44
   2bca0:	add	r3, r3, ip
   2bca4:	ldr	ip, [sp, #100]	; 0x64
   2bca8:	add	r3, r3, r1
   2bcac:	ldr	r1, [r5]
   2bcb0:	add	r3, r3, lr
   2bcb4:	add	r3, r3, r2
   2bcb8:	cmp	ip, r1
   2bcbc:	add	r3, r3, r0
   2bcc0:	mvn	r3, r3
   2bcc4:	str	r3, [r4, #72]	; 0x48
   2bcc8:	bne	2bddc <crc32@@Base+0x11a80>
   2bccc:	add	sp, sp, #104	; 0x68
   2bcd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bcd4:	movw	r1, #53956	; 0xd2c4
   2bcd8:	mov	r0, r6
   2bcdc:	movt	r1, #3
   2bce0:	bl	123d0 <fopen@plt>
   2bce4:	subs	r7, r0, #0
   2bce8:	beq	2bdb4 <crc32@@Base+0x11a58>
   2bcec:	bl	1252c <fileno@plt>
   2bcf0:	add	r2, sp, #8
   2bcf4:	mov	r1, r0
   2bcf8:	mov	r0, #3
   2bcfc:	bl	12610 <__fxstat@plt>
   2bd00:	cmp	r0, #0
   2bd04:	bne	2bd9c <crc32@@Base+0x11a40>
   2bd08:	ldr	r3, [sp, #24]
   2bd0c:	and	r3, r3, #61440	; 0xf000
   2bd10:	cmp	r3, #32768	; 0x8000
   2bd14:	bne	2bd9c <crc32@@Base+0x11a40>
   2bd18:	movw	sl, #53996	; 0xd2ec
   2bd1c:	movw	r9, #54004	; 0xd2f4
   2bd20:	movt	sl, #3
   2bd24:	movt	r9, #3
   2bd28:	mov	r8, sp
   2bd2c:	mov	r6, r0
   2bd30:	add	r3, sp, #4
   2bd34:	mov	r1, sl
   2bd38:	mov	r2, r8
   2bd3c:	mov	r0, r7
   2bd40:	bl	1210c <fscanf@plt>
   2bd44:	cmp	r0, #2
   2bd48:	addeq	r3, r6, #20
   2bd4c:	addeq	r6, r6, #1
   2bd50:	ldmeq	r8, {r0, r1}
   2bd54:	addeq	r3, r4, r3, lsl #3
   2bd58:	stmeq	r3, {r0, r1}
   2bd5c:	mov	r1, r9
   2bd60:	mov	r0, r7
   2bd64:	bl	1210c <fscanf@plt>
   2bd68:	cmp	r6, #255	; 0xff
   2bd6c:	movhi	r3, #0
   2bd70:	movls	r3, #1
   2bd74:	cmn	r0, #1
   2bd78:	moveq	r3, #0
   2bd7c:	cmp	r3, #0
   2bd80:	bne	2bd30 <crc32@@Base+0x119d4>
   2bd84:	mov	r0, r7
   2bd88:	bl	126b8 <fclose@plt>
   2bd8c:	ldr	lr, [r4, #48]	; 0x30
   2bd90:	ldr	r2, [r4, #52]	; 0x34
   2bd94:	ldr	r0, [r4, #64]	; 0x40
   2bd98:	b	2bc74 <crc32@@Base+0x11918>
   2bd9c:	mov	r0, r7
   2bda0:	bl	126b8 <fclose@plt>
   2bda4:	ldr	lr, [r4, #48]	; 0x30
   2bda8:	ldr	r2, [r4, #52]	; 0x34
   2bdac:	ldr	r0, [r4, #64]	; 0x40
   2bdb0:	b	2bc74 <crc32@@Base+0x11918>
   2bdb4:	movw	r1, #7868	; 0x1ebc
   2bdb8:	movt	r1, #5
   2bdbc:	mov	r3, r6
   2bdc0:	movw	r2, #53960	; 0xd2c8
   2bdc4:	ldr	r0, [r1]
   2bdc8:	movt	r2, #3
   2bdcc:	mov	r1, #1
   2bdd0:	bl	12358 <__fprintf_chk@plt>
   2bdd4:	mov	r0, #1
   2bdd8:	bl	12298 <exit@plt>
   2bddc:	bl	12538 <__stack_chk_fail@plt>
   2bde0:	push	{r4, r5, r6, r7, r8, lr}
   2bde4:	mov	r4, r0
   2bde8:	movw	r0, #54012	; 0xd2fc
   2bdec:	movt	r0, #3
   2bdf0:	bl	12310 <puts@plt>
   2bdf4:	ldr	r2, [r4, #48]	; 0x30
   2bdf8:	movw	r1, #54060	; 0xd32c
   2bdfc:	mov	r0, #1
   2be00:	movt	r1, #3
   2be04:	movw	r8, #65534	; 0xfffe
   2be08:	bl	1282c <__printf_chk@plt>
   2be0c:	ldr	r3, [r4, #64]	; 0x40
   2be10:	ldr	r2, [r4, #52]	; 0x34
   2be14:	movw	r1, #54084	; 0xd344
   2be18:	mov	r0, #1
   2be1c:	movt	r1, #3
   2be20:	bl	1282c <__printf_chk@plt>
   2be24:	ldr	r2, [r4, #60]	; 0x3c
   2be28:	movw	r1, #51912	; 0xcac8
   2be2c:	mov	r0, #1
   2be30:	movt	r1, #3
   2be34:	movw	r7, #54156	; 0xd38c
   2be38:	bl	1282c <__printf_chk@plt>
   2be3c:	ldr	r2, [r4, #44]	; 0x2c
   2be40:	movw	r1, #54132	; 0xd374
   2be44:	mov	r0, #1
   2be48:	movt	r1, #3
   2be4c:	sub	r6, r4, #4
   2be50:	bl	1282c <__printf_chk@plt>
   2be54:	ldr	r2, [r4, #72]	; 0x48
   2be58:	movw	r1, #51960	; 0xcaf8
   2be5c:	mov	r0, #1
   2be60:	movt	r1, #3
   2be64:	movt	r8, #60159	; 0xeaff
   2be68:	bl	1282c <__printf_chk@plt>
   2be6c:	movt	r7, #3
   2be70:	mov	r5, #0
   2be74:	ldr	r3, [r6, #4]!
   2be78:	mov	r2, r5
   2be7c:	mov	r0, #1
   2be80:	mov	r1, r7
   2be84:	cmp	r3, r8
   2be88:	add	r5, r5, r0
   2be8c:	beq	2be94 <crc32@@Base+0x11b38>
   2be90:	bl	1282c <__printf_chk@plt>
   2be94:	cmp	r5, #8
   2be98:	bne	2be74 <crc32@@Base+0x11b18>
   2be9c:	movw	r6, #54236	; 0xd3dc
   2bea0:	movw	r7, #54204	; 0xd3bc
   2bea4:	movt	r6, #3
   2bea8:	movt	r7, #3
   2beac:	mov	r5, #0
   2beb0:	b	2bec8 <crc32@@Base+0x11b6c>
   2beb4:	ldr	r3, [r4, #164]	; 0xa4
   2beb8:	bl	1282c <__printf_chk@plt>
   2bebc:	cmp	r5, #256	; 0x100
   2bec0:	popeq	{r4, r5, r6, r7, r8, pc}
   2bec4:	add	r4, r4, #8
   2bec8:	ldr	r2, [r4, #160]	; 0xa0
   2becc:	add	r5, r5, #1
   2bed0:	mov	r1, r6
   2bed4:	mov	r0, #1
   2bed8:	cmn	r2, #1
   2bedc:	popeq	{r4, r5, r6, r7, r8, pc}
   2bee0:	cmp	r5, r0
   2bee4:	bne	2beb4 <crc32@@Base+0x11b58>
   2bee8:	mov	r0, r7
   2beec:	bl	12310 <puts@plt>
   2bef0:	ldrd	r2, [r4, #160]	; 0xa0
   2bef4:	mov	r1, r6
   2bef8:	mov	r0, r5
   2befc:	bl	1282c <__printf_chk@plt>
   2bf00:	b	2bec4 <crc32@@Base+0x11b68>
   2bf04:	cmp	r0, #0
   2bf08:	bxeq	lr
   2bf0c:	ldr	r3, [r0, #56]	; 0x38
   2bf10:	push	{r4, lr}
   2bf14:	cmp	r3, #0
   2bf18:	bne	2bf78 <crc32@@Base+0x11c1c>
   2bf1c:	ldr	r3, [r0, #4]
   2bf20:	cmp	r3, #0
   2bf24:	beq	2bf34 <crc32@@Base+0x11bd8>
   2bf28:	ldr	r3, [r0, #60]	; 0x3c
   2bf2c:	tst	r3, #63	; 0x3f
   2bf30:	bne	2bf50 <crc32@@Base+0x11bf4>
   2bf34:	ldr	r3, [r0, #16]
   2bf38:	cmp	r3, #0
   2bf3c:	ldreq	r0, [r0]
   2bf40:	clzeq	r0, r0
   2bf44:	lsreq	r0, r0, #5
   2bf48:	movne	r0, #0
   2bf4c:	pop	{r4, pc}
   2bf50:	movw	r3, #7868	; 0x1ebc
   2bf54:	movt	r3, #5
   2bf58:	mov	r2, #58	; 0x3a
   2bf5c:	mov	r1, #1
   2bf60:	ldr	r3, [r3]
   2bf64:	movw	r0, #54304	; 0xd420
   2bf68:	movt	r0, #3
   2bf6c:	bl	12634 <fwrite@plt>
   2bf70:	mvn	r0, #0
   2bf74:	pop	{r4, pc}
   2bf78:	movw	r3, #7868	; 0x1ebc
   2bf7c:	movt	r3, #5
   2bf80:	mov	r2, #41	; 0x29
   2bf84:	mov	r1, #1
   2bf88:	ldr	r3, [r3]
   2bf8c:	movw	r0, #54260	; 0xd3f4
   2bf90:	movt	r0, #3
   2bf94:	bl	12634 <fwrite@plt>
   2bf98:	mvn	r0, #0
   2bf9c:	pop	{r4, pc}
   2bfa0:	cmp	r1, #2496	; 0x9c0
   2bfa4:	bcc	2c030 <crc32@@Base+0x11cd4>
   2bfa8:	ldr	r2, [r0, #32]
   2bfac:	movw	r3, #21862	; 0x5566
   2bfb0:	movt	r3, #43673	; 0xaa99
   2bfb4:	cmp	r2, r3
   2bfb8:	bne	2c030 <crc32@@Base+0x11cd4>
   2bfbc:	ldr	r2, [r0, #36]	; 0x24
   2bfc0:	movw	r3, #20056	; 0x4e58
   2bfc4:	movt	r3, #22604	; 0x584c
   2bfc8:	cmp	r2, r3
   2bfcc:	bne	2c030 <crc32@@Base+0x11cd4>
   2bfd0:	ldr	r1, [r0, #44]	; 0x2c
   2bfd4:	movw	r3, #41918	; 0xa3be
   2bfd8:	ldr	r2, [r0, #40]	; 0x28
   2bfdc:	movt	r3, #741	; 0x2e5
   2bfe0:	push	{lr}		; (str lr, [sp, #-4]!)
   2bfe4:	add	r2, r2, r1
   2bfe8:	ldr	lr, [r0, #48]	; 0x30
   2bfec:	add	r3, r2, r3
   2bff0:	ldr	ip, [r0, #52]	; 0x34
   2bff4:	ldr	r1, [r0, #56]	; 0x38
   2bff8:	add	r3, r3, lr
   2bffc:	ldr	r2, [r0, #60]	; 0x3c
   2c000:	add	r3, r3, ip
   2c004:	add	r3, r3, r1
   2c008:	ldr	ip, [r0, #64]	; 0x40
   2c00c:	ldr	r1, [r0, #68]	; 0x44
   2c010:	add	r3, r3, r2
   2c014:	ldr	r2, [r0, #72]	; 0x48
   2c018:	add	r0, r3, ip
   2c01c:	add	r0, r0, r1
   2c020:	mvn	r0, r0
   2c024:	subs	r0, r2, r0
   2c028:	mvnne	r0, #0
   2c02c:	pop	{pc}		; (ldr pc, [sp], #4)
   2c030:	mvn	r0, #0
   2c034:	bx	lr
   2c038:	subs	r0, r0, #27
   2c03c:	movne	r0, #1
   2c040:	bx	lr
   2c044:	push	{r4, r5, r6, r7, r8, lr}
   2c048:	mov	r4, r0
   2c04c:	bl	125e0 <ftell@plt>
   2c050:	subs	r5, r0, #0
   2c054:	blt	2c0a0 <crc32@@Base+0x11d44>
   2c058:	mov	r2, #2
   2c05c:	mov	r1, #0
   2c060:	mov	r0, r4
   2c064:	bl	121f0 <fseek@plt>
   2c068:	subs	r7, r0, #0
   2c06c:	bne	2c130 <crc32@@Base+0x11dd4>
   2c070:	mov	r0, r4
   2c074:	bl	125e0 <ftell@plt>
   2c078:	subs	r6, r0, #0
   2c07c:	blt	2c100 <crc32@@Base+0x11da4>
   2c080:	mov	r2, r7
   2c084:	mov	r1, r5
   2c088:	mov	r0, r4
   2c08c:	bl	121f0 <fseek@plt>
   2c090:	cmp	r0, #0
   2c094:	bne	2c0d0 <crc32@@Base+0x11d74>
   2c098:	mov	r0, r6
   2c09c:	pop	{r4, r5, r6, r7, r8, pc}
   2c0a0:	movw	r3, #7868	; 0x1ebc
   2c0a4:	movt	r3, #5
   2c0a8:	mov	r2, #20
   2c0ac:	mov	r1, #1
   2c0b0:	ldr	r3, [r3]
   2c0b4:	movw	r0, #54492	; 0xd4dc
   2c0b8:	movt	r0, #3
   2c0bc:	bl	12634 <fwrite@plt>
   2c0c0:	mov	r0, r4
   2c0c4:	bl	126b8 <fclose@plt>
   2c0c8:	mov	r0, #2
   2c0cc:	bl	12298 <exit@plt>
   2c0d0:	movw	r1, #7868	; 0x1ebc
   2c0d4:	movt	r1, #5
   2c0d8:	mov	r3, r5
   2c0dc:	movw	r2, #54544	; 0xd510
   2c0e0:	ldr	r0, [r1]
   2c0e4:	movt	r2, #3
   2c0e8:	mov	r1, #1
   2c0ec:	bl	12358 <__fprintf_chk@plt>
   2c0f0:	mov	r0, r4
   2c0f4:	bl	126b8 <fclose@plt>
   2c0f8:	mov	r0, #3
   2c0fc:	bl	12298 <exit@plt>
   2c100:	movw	r3, #7868	; 0x1ebc
   2c104:	movt	r3, #5
   2c108:	mov	r2, #20
   2c10c:	mov	r1, #1
   2c110:	ldr	r3, [r3]
   2c114:	movw	r0, #54492	; 0xd4dc
   2c118:	movt	r0, #3
   2c11c:	bl	12634 <fwrite@plt>
   2c120:	mov	r0, r4
   2c124:	bl	126b8 <fclose@plt>
   2c128:	mov	r0, #4
   2c12c:	bl	12298 <exit@plt>
   2c130:	movw	r3, #7868	; 0x1ebc
   2c134:	movt	r3, #5
   2c138:	mov	r2, #24
   2c13c:	mov	r1, #1
   2c140:	ldr	r3, [r3]
   2c144:	movw	r0, #54516	; 0xd4f4
   2c148:	movt	r0, #3
   2c14c:	bl	12634 <fwrite@plt>
   2c150:	mov	r0, r4
   2c154:	bl	126b8 <fclose@plt>
   2c158:	mov	r0, #3
   2c15c:	bl	12298 <exit@plt>
   2c160:	push	{r4, r5, r6, r7, r8, lr}
   2c164:	movw	r4, #3824	; 0xef0
   2c168:	ldr	r5, [r0, #64]	; 0x40
   2c16c:	movt	r4, #5
   2c170:	mov	r3, #2496	; 0x9c0
   2c174:	movw	r6, #37728	; 0x9360
   2c178:	str	r3, [r1, #4]
   2c17c:	movt	r6, #30
   2c180:	str	r6, [r1, #8]
   2c184:	sub	sp, sp, #96	; 0x60
   2c188:	ldrb	r0, [r5]
   2c18c:	ldr	r3, [r4]
   2c190:	cmp	r0, #0
   2c194:	str	r3, [sp, #92]	; 0x5c
   2c198:	moveq	r5, r0
   2c19c:	bne	2c1bc <crc32@@Base+0x11e60>
   2c1a0:	ldr	r2, [sp, #92]	; 0x5c
   2c1a4:	mov	r0, r5
   2c1a8:	ldr	r3, [r4]
   2c1ac:	cmp	r2, r3
   2c1b0:	bne	2c284 <crc32@@Base+0x11f28>
   2c1b4:	add	sp, sp, #96	; 0x60
   2c1b8:	pop	{r4, r5, r6, r7, r8, pc}
   2c1bc:	mov	r7, r1
   2c1c0:	mov	r0, r5
   2c1c4:	movw	r1, #53956	; 0xd2c4
   2c1c8:	movt	r1, #3
   2c1cc:	bl	123d0 <fopen@plt>
   2c1d0:	cmp	r0, #0
   2c1d4:	mov	r8, r0
   2c1d8:	str	r0, [r6, #2496]	; 0x9c0
   2c1dc:	beq	2c238 <crc32@@Base+0x11edc>
   2c1e0:	bl	1252c <fileno@plt>
   2c1e4:	mov	r2, sp
   2c1e8:	mov	r1, r0
   2c1ec:	mov	r0, #3
   2c1f0:	bl	12610 <__fxstat@plt>
   2c1f4:	subs	r5, r0, #0
   2c1f8:	bne	2c220 <crc32@@Base+0x11ec4>
   2c1fc:	ldr	r3, [sp, #16]
   2c200:	mov	r0, r8
   2c204:	and	r3, r3, #61440	; 0xf000
   2c208:	cmp	r3, #32768	; 0x8000
   2c20c:	beq	2c260 <crc32@@Base+0x11f04>
   2c210:	bl	126b8 <fclose@plt>
   2c214:	str	r5, [r6, #2496]	; 0x9c0
   2c218:	mov	r5, #1
   2c21c:	b	2c1a0 <crc32@@Base+0x11e44>
   2c220:	mov	r0, r8
   2c224:	mov	r5, #1
   2c228:	bl	126b8 <fclose@plt>
   2c22c:	mov	r3, #0
   2c230:	str	r3, [r6, #2496]	; 0x9c0
   2c234:	b	2c1a0 <crc32@@Base+0x11e44>
   2c238:	movw	r1, #7868	; 0x1ebc
   2c23c:	movt	r1, #5
   2c240:	mov	r3, r5
   2c244:	movw	r2, #54576	; 0xd530
   2c248:	ldr	r0, [r1]
   2c24c:	movt	r2, #3
   2c250:	mov	r1, #1
   2c254:	mov	r5, r1
   2c258:	bl	12358 <__fprintf_chk@plt>
   2c25c:	b	2c1a0 <crc32@@Base+0x11e44>
   2c260:	bl	2c044 <crc32@@Base+0x11ce8>
   2c264:	ldr	r1, [r7, #4]
   2c268:	add	r1, r0, r1
   2c26c:	mov	r0, #1
   2c270:	str	r1, [r7, #4]
   2c274:	bl	125c8 <calloc@plt>
   2c278:	str	r0, [r6, #2500]	; 0x9c4
   2c27c:	str	r0, [r7, #8]
   2c280:	b	2c1a0 <crc32@@Base+0x11e44>
   2c284:	bl	12538 <__stack_chk_fail@plt>
   2c288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c28c:	movw	sl, #3824	; 0xef0
   2c290:	movt	sl, #5
   2c294:	sub	sp, sp, #68	; 0x44
   2c298:	mov	r6, r0
   2c29c:	movw	r0, #54612	; 0xd554
   2c2a0:	ldr	r3, [sl]
   2c2a4:	movt	r0, #3
   2c2a8:	str	r3, [sp, #60]	; 0x3c
   2c2ac:	bl	12310 <puts@plt>
   2c2b0:	ldr	r2, [r6, #48]	; 0x30
   2c2b4:	movw	r1, #54060	; 0xd32c
   2c2b8:	mov	r0, #1
   2c2bc:	movt	r1, #3
   2c2c0:	bl	1282c <__printf_chk@plt>
   2c2c4:	ldrd	r2, [r6, #60]	; 0x3c
   2c2c8:	movw	r1, #54084	; 0xd344
   2c2cc:	mov	r0, #1
   2c2d0:	movt	r1, #3
   2c2d4:	bl	1282c <__printf_chk@plt>
   2c2d8:	ldr	r2, [r6, #52]	; 0x34
   2c2dc:	cmp	r2, #0
   2c2e0:	bne	2c670 <crc32@@Base+0x12314>
   2c2e4:	ldr	r2, [r6, #44]	; 0x2c
   2c2e8:	movw	r1, #51912	; 0xcac8
   2c2ec:	mov	r0, #1
   2c2f0:	movt	r1, #3
   2c2f4:	bl	1282c <__printf_chk@plt>
   2c2f8:	movw	r1, #51960	; 0xcaf8
   2c2fc:	ldr	r2, [r6, #72]	; 0x48
   2c300:	movt	r1, #3
   2c304:	mov	r0, #1
   2c308:	movw	r7, #65534	; 0xfffe
   2c30c:	bl	1282c <__printf_chk@plt>
   2c310:	movw	r8, #54156	; 0xd38c
   2c314:	movt	r7, #60159	; 0xeaff
   2c318:	sub	r5, r6, #4
   2c31c:	movt	r8, #3
   2c320:	mov	r4, #0
   2c324:	ldr	r3, [r5, #4]!
   2c328:	cmp	r3, r7
   2c32c:	beq	2c340 <crc32@@Base+0x11fe4>
   2c330:	mov	r2, r4
   2c334:	mov	r1, r8
   2c338:	mov	r0, #1
   2c33c:	bl	1282c <__printf_chk@plt>
   2c340:	add	r4, r4, #1
   2c344:	cmp	r4, #8
   2c348:	bne	2c324 <crc32@@Base+0x11fc8>
   2c34c:	movw	r7, #54236	; 0xd3dc
   2c350:	movw	r8, #54204	; 0xd3bc
   2c354:	movt	r7, #3
   2c358:	movt	r8, #3
   2c35c:	mov	r4, r6
   2c360:	mov	r5, #0
   2c364:	b	2c390 <crc32@@Base+0x12034>
   2c368:	add	r5, r5, #1
   2c36c:	cmp	r5, #1
   2c370:	beq	2c69c <crc32@@Base+0x12340>
   2c374:	ldr	r3, [r4, #188]	; 0xbc
   2c378:	mov	r1, r7
   2c37c:	mov	r0, #1
   2c380:	bl	1282c <__printf_chk@plt>
   2c384:	cmp	r5, #256	; 0x100
   2c388:	beq	2c39c <crc32@@Base+0x12040>
   2c38c:	add	r4, r4, #8
   2c390:	ldr	r2, [r4, #184]	; 0xb8
   2c394:	cmn	r2, #1
   2c398:	bne	2c368 <crc32@@Base+0x1200c>
   2c39c:	ldr	r9, [r6, #152]	; 0x98
   2c3a0:	cmp	r9, #0
   2c3a4:	beq	2c59c <crc32@@Base+0x12240>
   2c3a8:	add	r9, r6, r9
   2c3ac:	ldr	r3, [r9, #4]
   2c3b0:	ldr	r2, [r9, #8]
   2c3b4:	cmp	r3, #0
   2c3b8:	add	r2, r6, r2, lsl #2
   2c3bc:	beq	2c59c <crc32@@Base+0x12240>
   2c3c0:	ldr	r7, [r2, #12]
   2c3c4:	movw	r2, #54396	; 0xd47c
   2c3c8:	movt	r2, #3
   2c3cc:	str	r2, [sp, #12]
   2c3d0:	movw	r2, #40620	; 0x9eac
   2c3d4:	movt	r2, #3
   2c3d8:	movw	r1, #54604	; 0xd54c
   2c3dc:	str	sl, [sp, #20]
   2c3e0:	movt	r1, #3
   2c3e4:	lsl	r7, r7, #2
   2c3e8:	str	r1, [sp, #16]
   2c3ec:	mov	r8, #0
   2c3f0:	mov	sl, r2
   2c3f4:	b	2c548 <crc32@@Base+0x121ec>
   2c3f8:	cmp	lr, #65536	; 0x10000
   2c3fc:	movw	r2, #51804	; 0xca5c
   2c400:	movt	r2, #3
   2c404:	moveq	r2, sl
   2c408:	ldr	r0, [sp, #12]
   2c40c:	ubfx	r3, r4, #8, #4
   2c410:	ubfx	ip, r4, #4, #3
   2c414:	movw	r1, #54708	; 0xd5b4
   2c418:	add	r3, r0, r3, lsl #2
   2c41c:	add	r0, sp, #64	; 0x40
   2c420:	add	ip, r0, ip, lsl #2
   2c424:	movt	r1, #3
   2c428:	ldr	r3, [r3, #32]
   2c42c:	mov	r0, #1
   2c430:	ldr	ip, [ip, #-36]	; 0xffffffdc
   2c434:	str	ip, [sp]
   2c438:	bl	1282c <__printf_chk@plt>
   2c43c:	ldr	r2, [r5, #32]
   2c440:	movw	r1, #54736	; 0xd5d0
   2c444:	mov	r0, #1
   2c448:	movt	r1, #3
   2c44c:	lsl	r2, r2, #2
   2c450:	bl	1282c <__printf_chk@plt>
   2c454:	mov	r3, fp
   2c458:	mov	r2, fp
   2c45c:	movw	r1, #54764	; 0xd5ec
   2c460:	mov	r0, #1
   2c464:	movt	r1, #3
   2c468:	bl	1282c <__printf_chk@plt>
   2c46c:	ldrd	r2, [r5, #24]
   2c470:	movw	r1, #54800	; 0xd610
   2c474:	mov	r0, #1
   2c478:	movt	r1, #3
   2c47c:	bl	1282c <__printf_chk@plt>
   2c480:	ldrd	r2, [r5, #16]
   2c484:	ldrd	r0, [r5, #24]
   2c488:	cmp	r1, r3
   2c48c:	cmpeq	r0, r2
   2c490:	beq	2c5c4 <crc32@@Base+0x12268>
   2c494:	movw	r1, #54828	; 0xd62c
   2c498:	mov	r0, #1
   2c49c:	movt	r1, #3
   2c4a0:	bl	1282c <__printf_chk@plt>
   2c4a4:	movw	r1, #54848	; 0xd640
   2c4a8:	mov	r0, #1
   2c4ac:	movt	r1, #3
   2c4b0:	bl	1282c <__printf_chk@plt>
   2c4b4:	tst	r4, #8388608	; 0x800000
   2c4b8:	bne	2c65c <crc32@@Base+0x12300>
   2c4bc:	tst	r4, #128	; 0x80
   2c4c0:	bne	2c62c <crc32@@Base+0x122d0>
   2c4c4:	and	r3, r4, #28672	; 0x7000
   2c4c8:	cmp	r3, #8192	; 0x2000
   2c4cc:	beq	2c648 <crc32@@Base+0x122ec>
   2c4d0:	cmp	r3, #12288	; 0x3000
   2c4d4:	beq	2c688 <crc32@@Base+0x1232c>
   2c4d8:	cmp	r3, #4096	; 0x1000
   2c4dc:	bne	2c4f0 <crc32@@Base+0x12194>
   2c4e0:	movw	r1, #54888	; 0xd668
   2c4e4:	mov	r0, #1
   2c4e8:	movt	r1, #3
   2c4ec:	bl	1282c <__printf_chk@plt>
   2c4f0:	tst	r4, #262144	; 0x40000
   2c4f4:	bne	2c618 <crc32@@Base+0x122bc>
   2c4f8:	tst	r4, #32768	; 0x8000
   2c4fc:	bne	2c5d0 <crc32@@Base+0x12274>
   2c500:	tst	r4, #8
   2c504:	bne	2c5e8 <crc32@@Base+0x1228c>
   2c508:	tst	r4, #6
   2c50c:	bne	2c600 <crc32@@Base+0x122a4>
   2c510:	tst	r4, #1
   2c514:	beq	2c528 <crc32@@Base+0x121cc>
   2c518:	movw	r1, #54952	; 0xd6a8
   2c51c:	mov	r0, #1
   2c520:	movt	r1, #3
   2c524:	bl	1282c <__printf_chk@plt>
   2c528:	mov	r0, #10
   2c52c:	bl	1237c <putchar@plt>
   2c530:	ldr	r2, [r5, #60]	; 0x3c
   2c534:	movw	r1, #54960	; 0xd6b0
   2c538:	mov	r0, #1
   2c53c:	movt	r1, #3
   2c540:	bl	1282c <__printf_chk@plt>
   2c544:	ldr	r3, [r9, #4]
   2c548:	add	r8, r8, #1
   2c54c:	add	r5, r6, r7
   2c550:	cmp	r8, r3
   2c554:	bcs	2c598 <crc32@@Base+0x1223c>
   2c558:	movw	ip, #54396	; 0xd47c
   2c55c:	movt	ip, #3
   2c560:	add	fp, sp, #28
   2c564:	ldr	r4, [r5, #36]	; 0x24
   2c568:	ldm	ip!, {r0, r1, r2, r3}
   2c56c:	ands	lr, r4, #196608	; 0x30000
   2c570:	ldr	r7, [r5, #12]
   2c574:	stmia	fp!, {r0, r1, r2, r3}
   2c578:	lsl	r7, r7, #2
   2c57c:	ldm	ip, {r0, r1, r2, r3}
   2c580:	ldr	ip, [r5, #8]
   2c584:	stm	fp, {r0, r1, r2, r3}
   2c588:	lsl	fp, ip, #2
   2c58c:	bne	2c3f8 <crc32@@Base+0x1209c>
   2c590:	ldr	r2, [sp, #16]
   2c594:	b	2c408 <crc32@@Base+0x120ac>
   2c598:	ldr	sl, [sp, #20]
   2c59c:	ldr	r2, [sp, #60]	; 0x3c
   2c5a0:	ldr	r3, [sl]
   2c5a4:	cmp	r2, r3
   2c5a8:	bne	2c6b8 <crc32@@Base+0x1235c>
   2c5ac:	movw	r3, #37728	; 0x9360
   2c5b0:	movt	r3, #30
   2c5b4:	ldr	r0, [r3, #2500]	; 0x9c4
   2c5b8:	add	sp, sp, #68	; 0x44
   2c5bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c5c0:	b	121c0 <free@plt>
   2c5c4:	mov	r0, #10
   2c5c8:	bl	1237c <putchar@plt>
   2c5cc:	b	2c4a4 <crc32@@Base+0x12148>
   2c5d0:	movw	r1, #54924	; 0xd68c
   2c5d4:	mov	r0, #1
   2c5d8:	movt	r1, #3
   2c5dc:	bl	1282c <__printf_chk@plt>
   2c5e0:	tst	r4, #8
   2c5e4:	beq	2c508 <crc32@@Base+0x121ac>
   2c5e8:	movw	r1, #54932	; 0xd694
   2c5ec:	mov	r0, #1
   2c5f0:	movt	r1, #3
   2c5f4:	bl	1282c <__printf_chk@plt>
   2c5f8:	tst	r4, #6
   2c5fc:	beq	2c510 <crc32@@Base+0x121b4>
   2c600:	movw	r1, #54944	; 0xd6a0
   2c604:	ubfx	r2, r4, #1, #2
   2c608:	movt	r1, #3
   2c60c:	mov	r0, #1
   2c610:	bl	1282c <__printf_chk@plt>
   2c614:	b	2c510 <crc32@@Base+0x121b4>
   2c618:	movw	r1, #54912	; 0xd680
   2c61c:	mov	r0, #1
   2c620:	movt	r1, #3
   2c624:	bl	1282c <__printf_chk@plt>
   2c628:	b	2c4f8 <crc32@@Base+0x1219c>
   2c62c:	movw	r1, #54876	; 0xd65c
   2c630:	mov	r0, #1
   2c634:	movt	r1, #3
   2c638:	bl	1282c <__printf_chk@plt>
   2c63c:	and	r3, r4, #28672	; 0x7000
   2c640:	cmp	r3, #8192	; 0x2000
   2c644:	bne	2c4d0 <crc32@@Base+0x12174>
   2c648:	movw	r1, #54896	; 0xd670
   2c64c:	mov	r0, #1
   2c650:	movt	r1, #3
   2c654:	bl	1282c <__printf_chk@plt>
   2c658:	b	2c4f0 <crc32@@Base+0x12194>
   2c65c:	movw	r1, #54868	; 0xd654
   2c660:	mov	r0, #1
   2c664:	movt	r1, #3
   2c668:	bl	1282c <__printf_chk@plt>
   2c66c:	b	2c4bc <crc32@@Base+0x12160>
   2c670:	movw	r1, #54660	; 0xd584
   2c674:	ldr	r3, [r6, #56]	; 0x38
   2c678:	movt	r1, #3
   2c67c:	mov	r0, #1
   2c680:	bl	1282c <__printf_chk@plt>
   2c684:	b	2c2e4 <crc32@@Base+0x11f88>
   2c688:	movw	r1, #54904	; 0xd678
   2c68c:	mov	r0, #1
   2c690:	movt	r1, #3
   2c694:	bl	1282c <__printf_chk@plt>
   2c698:	b	2c4f0 <crc32@@Base+0x12194>
   2c69c:	mov	r0, r8
   2c6a0:	bl	12310 <puts@plt>
   2c6a4:	ldrd	r2, [r4, #184]	; 0xb8
   2c6a8:	mov	r1, r7
   2c6ac:	mov	r0, r5
   2c6b0:	bl	1282c <__printf_chk@plt>
   2c6b4:	b	2c38c <crc32@@Base+0x12030>
   2c6b8:	bl	12538 <__stack_chk_fail@plt>
   2c6bc:	cmp	r0, #0
   2c6c0:	bxeq	lr
   2c6c4:	ldr	r3, [r0, #56]	; 0x38
   2c6c8:	push	{r4, lr}
   2c6cc:	cmp	r3, #0
   2c6d0:	bne	2c730 <crc32@@Base+0x123d4>
   2c6d4:	ldr	r3, [r0, #4]
   2c6d8:	cmp	r3, #0
   2c6dc:	beq	2c6ec <crc32@@Base+0x12390>
   2c6e0:	ldr	r3, [r0, #60]	; 0x3c
   2c6e4:	tst	r3, #63	; 0x3f
   2c6e8:	bne	2c708 <crc32@@Base+0x123ac>
   2c6ec:	ldr	r3, [r0, #16]
   2c6f0:	cmp	r3, #0
   2c6f4:	ldreq	r0, [r0]
   2c6f8:	clzeq	r0, r0
   2c6fc:	lsreq	r0, r0, #5
   2c700:	movne	r0, #0
   2c704:	pop	{r4, pc}
   2c708:	movw	r3, #7868	; 0x1ebc
   2c70c:	movt	r3, #5
   2c710:	mov	r2, #58	; 0x3a
   2c714:	mov	r1, #1
   2c718:	ldr	r3, [r3]
   2c71c:	movw	r0, #54304	; 0xd420
   2c720:	movt	r0, #3
   2c724:	bl	12634 <fwrite@plt>
   2c728:	mvn	r0, #0
   2c72c:	pop	{r4, pc}
   2c730:	movw	r3, #7868	; 0x1ebc
   2c734:	movt	r3, #5
   2c738:	mov	r2, #41	; 0x29
   2c73c:	mov	r1, #1
   2c740:	ldr	r3, [r3]
   2c744:	movw	r0, #54260	; 0xd3f4
   2c748:	movt	r0, #3
   2c74c:	bl	12634 <fwrite@plt>
   2c750:	mvn	r0, #0
   2c754:	pop	{r4, pc}
   2c758:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2c75c:	movw	r5, #3824	; 0xef0
   2c760:	movt	r5, #5
   2c764:	mov	r6, r3
   2c768:	sub	sp, sp, #104	; 0x68
   2c76c:	subs	r4, r0, #0
   2c770:	ldr	r3, [r5]
   2c774:	str	r3, [sp, #100]	; 0x64
   2c778:	beq	2c7f8 <crc32@@Base+0x1249c>
   2c77c:	mov	r1, #0
   2c780:	add	r0, r4, #2048	; 0x800
   2c784:	mov	r2, r1
   2c788:	str	r1, [r4, #40]	; 0x28
   2c78c:	mov	r3, r4
   2c790:	mvn	r1, #0
   2c794:	movw	ip, #21862	; 0x5566
   2c798:	movt	ip, #43673	; 0xaa99
   2c79c:	str	ip, [r4, #32]
   2c7a0:	movw	ip, #20056	; 0x4e58
   2c7a4:	movt	ip, #22604	; 0x584c
   2c7a8:	str	ip, [r4, #36]	; 0x24
   2c7ac:	movw	ip, #65534	; 0xfffe
   2c7b0:	movt	ip, #60159	; 0xeaff
   2c7b4:	str	ip, [r4]
   2c7b8:	str	ip, [r4, #4]
   2c7bc:	str	ip, [r4, #8]
   2c7c0:	str	ip, [r4, #12]
   2c7c4:	str	ip, [r4, #16]
   2c7c8:	str	ip, [r4, #20]
   2c7cc:	str	ip, [r4, #24]
   2c7d0:	str	ip, [r4, #28]
   2c7d4:	mov	ip, #2048	; 0x800
   2c7d8:	str	ip, [r4, #68]	; 0x44
   2c7dc:	str	r1, [r3, #184]	; 0xb8
   2c7e0:	add	r3, r3, #8
   2c7e4:	str	r2, [r3, #180]	; 0xb4
   2c7e8:	cmp	r3, r0
   2c7ec:	bne	2c7dc <crc32@@Base+0x12480>
   2c7f0:	str	r2, [r4, #52]	; 0x34
   2c7f4:	str	r2, [r4, #56]	; 0x38
   2c7f8:	ldr	r1, [r6, #4]
   2c7fc:	movw	r7, #37728	; 0x9360
   2c800:	ldr	r3, [r6, #104]	; 0x68
   2c804:	movt	r7, #30
   2c808:	cmp	r1, #0
   2c80c:	mov	r2, #0
   2c810:	sub	r3, r3, #2496	; 0x9c0
   2c814:	str	r3, [r4, #60]	; 0x3c
   2c818:	str	r3, [r4, #64]	; 0x40
   2c81c:	movt	r2, #65532	; 0xfffc
   2c820:	ldrne	r3, [r6, #60]	; 0x3c
   2c824:	ldr	r0, [r7, #2496]	; 0x9c0
   2c828:	str	r2, [r4, #44]	; 0x2c
   2c82c:	mov	r2, #2496	; 0x9c0
   2c830:	strne	r3, [r4, #44]	; 0x2c
   2c834:	cmp	r0, #0
   2c838:	str	r2, [r4, #48]	; 0x30
   2c83c:	beq	2c890 <crc32@@Base+0x12534>
   2c840:	ldr	r8, [r6, #64]	; 0x40
   2c844:	bl	2c044 <crc32@@Base+0x11ce8>
   2c848:	ldr	ip, [r4, #60]	; 0x3c
   2c84c:	mov	r1, #1
   2c850:	ldr	r3, [r4, #64]	; 0x40
   2c854:	sub	ip, ip, r0
   2c858:	sub	r3, r3, r0
   2c85c:	mov	r2, r0
   2c860:	str	r0, [r4, #52]	; 0x34
   2c864:	str	r0, [r4, #56]	; 0x38
   2c868:	add	r0, r4, #2496	; 0x9c0
   2c86c:	str	r3, [r4, #64]	; 0x40
   2c870:	str	ip, [r4, #60]	; 0x3c
   2c874:	ldr	r3, [r7, #2496]	; 0x9c0
   2c878:	bl	12508 <fread@plt>
   2c87c:	ldr	r3, [r4, #52]	; 0x34
   2c880:	cmp	r0, r3
   2c884:	bne	2c9ec <crc32@@Base+0x12690>
   2c888:	ldr	r0, [r7, #2496]	; 0x9c0
   2c88c:	bl	126b8 <fclose@plt>
   2c890:	ldr	r6, [r6, #68]	; 0x44
   2c894:	ldrb	r3, [r6]
   2c898:	cmp	r3, #0
   2c89c:	bne	2c90c <crc32@@Base+0x125b0>
   2c8a0:	ldr	r1, [r4, #36]	; 0x24
   2c8a4:	ldr	r3, [r4, #32]
   2c8a8:	ldr	r2, [r4, #40]	; 0x28
   2c8ac:	add	r3, r3, r1
   2c8b0:	ldr	r1, [r4, #44]	; 0x2c
   2c8b4:	add	r3, r3, r2
   2c8b8:	ldr	r2, [r4, #48]	; 0x30
   2c8bc:	add	r3, r3, r1
   2c8c0:	ldr	r1, [r4, #52]	; 0x34
   2c8c4:	add	r3, r3, r2
   2c8c8:	ldr	r2, [r4, #56]	; 0x38
   2c8cc:	add	r3, r3, r1
   2c8d0:	ldr	r1, [r4, #60]	; 0x3c
   2c8d4:	add	r3, r3, r2
   2c8d8:	ldr	r2, [r4, #64]	; 0x40
   2c8dc:	add	r3, r3, r1
   2c8e0:	ldr	r0, [r4, #68]	; 0x44
   2c8e4:	ldr	r1, [sp, #100]	; 0x64
   2c8e8:	add	r3, r3, r2
   2c8ec:	ldr	r2, [r5]
   2c8f0:	add	r3, r3, r0
   2c8f4:	cmp	r1, r2
   2c8f8:	mvn	r3, r3
   2c8fc:	str	r3, [r4, #72]	; 0x48
   2c900:	bne	2ca1c <crc32@@Base+0x126c0>
   2c904:	add	sp, sp, #104	; 0x68
   2c908:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2c90c:	movw	r1, #53956	; 0xd2c4
   2c910:	mov	r0, r6
   2c914:	movt	r1, #3
   2c918:	bl	123d0 <fopen@plt>
   2c91c:	subs	r7, r0, #0
   2c920:	beq	2c9c4 <crc32@@Base+0x12668>
   2c924:	bl	1252c <fileno@plt>
   2c928:	add	r2, sp, #8
   2c92c:	mov	r1, r0
   2c930:	mov	r0, #3
   2c934:	bl	12610 <__fxstat@plt>
   2c938:	subs	r6, r0, #0
   2c93c:	bne	2c9b8 <crc32@@Base+0x1265c>
   2c940:	ldr	r3, [sp, #24]
   2c944:	and	r3, r3, #61440	; 0xf000
   2c948:	cmp	r3, #32768	; 0x8000
   2c94c:	bne	2c9b8 <crc32@@Base+0x1265c>
   2c950:	movw	sl, #53996	; 0xd2ec
   2c954:	movw	r9, #54004	; 0xd2f4
   2c958:	movt	sl, #3
   2c95c:	movt	r9, #3
   2c960:	mov	r8, sp
   2c964:	add	r3, sp, #4
   2c968:	mov	r1, sl
   2c96c:	mov	r2, r8
   2c970:	mov	r0, r7
   2c974:	bl	1210c <fscanf@plt>
   2c978:	cmp	r0, #2
   2c97c:	addeq	r3, r6, #23
   2c980:	addeq	r6, r6, #1
   2c984:	ldmeq	r8, {r0, r1}
   2c988:	addeq	r3, r4, r3, lsl #3
   2c98c:	stmeq	r3, {r0, r1}
   2c990:	mov	r1, r9
   2c994:	mov	r0, r7
   2c998:	bl	1210c <fscanf@plt>
   2c99c:	cmp	r6, #255	; 0xff
   2c9a0:	movhi	r3, #0
   2c9a4:	movls	r3, #1
   2c9a8:	cmn	r0, #1
   2c9ac:	moveq	r3, #0
   2c9b0:	cmp	r3, #0
   2c9b4:	bne	2c964 <crc32@@Base+0x12608>
   2c9b8:	mov	r0, r7
   2c9bc:	bl	126b8 <fclose@plt>
   2c9c0:	b	2c8a0 <crc32@@Base+0x12544>
   2c9c4:	movw	r1, #7868	; 0x1ebc
   2c9c8:	movt	r1, #5
   2c9cc:	mov	r3, r6
   2c9d0:	movw	r2, #53960	; 0xd2c8
   2c9d4:	ldr	r0, [r1]
   2c9d8:	movt	r2, #3
   2c9dc:	mov	r1, #1
   2c9e0:	bl	12358 <__fprintf_chk@plt>
   2c9e4:	mov	r0, #1
   2c9e8:	bl	12298 <exit@plt>
   2c9ec:	movw	r1, #7868	; 0x1ebc
   2c9f0:	movt	r1, #5
   2c9f4:	mov	r3, r8
   2c9f8:	movw	r2, #54988	; 0xd6cc
   2c9fc:	ldr	r0, [r1]
   2ca00:	movt	r2, #3
   2ca04:	mov	r1, #1
   2ca08:	bl	12358 <__fprintf_chk@plt>
   2ca0c:	ldr	r0, [r7, #2496]	; 0x9c0
   2ca10:	bl	126b8 <fclose@plt>
   2ca14:	mov	r0, #1
   2ca18:	bl	12298 <exit@plt>
   2ca1c:	bl	12538 <__stack_chk_fail@plt>
   2ca20:	cmp	r0, #0
   2ca24:	bxeq	lr
   2ca28:	mov	r1, #0
   2ca2c:	add	ip, r0, #2048	; 0x800
   2ca30:	push	{lr}		; (str lr, [sp, #-4]!)
   2ca34:	mov	r2, r1
   2ca38:	str	r1, [r0, #40]	; 0x28
   2ca3c:	mov	r3, r0
   2ca40:	mvn	r1, #0
   2ca44:	movw	lr, #21862	; 0x5566
   2ca48:	movt	lr, #43673	; 0xaa99
   2ca4c:	str	lr, [r0, #32]
   2ca50:	movw	lr, #20056	; 0x4e58
   2ca54:	movt	lr, #22604	; 0x584c
   2ca58:	str	lr, [r0, #36]	; 0x24
   2ca5c:	movw	lr, #65534	; 0xfffe
   2ca60:	movt	lr, #60159	; 0xeaff
   2ca64:	str	lr, [r0]
   2ca68:	str	lr, [r0, #4]
   2ca6c:	str	lr, [r0, #8]
   2ca70:	str	lr, [r0, #12]
   2ca74:	str	lr, [r0, #16]
   2ca78:	str	lr, [r0, #20]
   2ca7c:	str	lr, [r0, #24]
   2ca80:	str	lr, [r0, #28]
   2ca84:	mov	lr, #2048	; 0x800
   2ca88:	str	lr, [r0, #68]	; 0x44
   2ca8c:	str	r1, [r3, #184]	; 0xb8
   2ca90:	add	r3, r3, #8
   2ca94:	str	r2, [r3, #180]	; 0xb4
   2ca98:	cmp	r3, ip
   2ca9c:	bne	2ca8c <crc32@@Base+0x12730>
   2caa0:	str	r2, [r0, #52]	; 0x34
   2caa4:	str	r2, [r0, #56]	; 0x38
   2caa8:	pop	{pc}		; (ldr pc, [sp], #4)
   2caac:	subs	r0, r0, #28
   2cab0:	movne	r0, #1
   2cab4:	bx	lr
   2cab8:	bx	lr
   2cabc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cac0:	movw	r4, #51724	; 0xca0c
   2cac4:	movt	r4, #30
   2cac8:	sub	sp, sp, #12
   2cacc:	subs	fp, r2, #0
   2cad0:	mov	r8, r0
   2cad4:	ldr	r3, [r4, #12]
   2cad8:	mov	r2, r1
   2cadc:	ldr	r5, [r4, #4]
   2cae0:	ldr	r9, [r4, #16]
   2cae4:	str	r3, [sp]
   2cae8:	ldr	sl, [r4, #8]
   2caec:	ldr	r6, [r4]
   2caf0:	beq	2cbbc <crc32@@Base+0x12860>
   2caf4:	ldr	r1, [fp]
   2caf8:	cmp	r1, #0
   2cafc:	bne	2cb90 <crc32@@Base+0x12834>
   2cb00:	add	r1, r2, #63	; 0x3f
   2cb04:	mov	r0, r5
   2cb08:	add	r6, r1, r6
   2cb0c:	str	r2, [sp, #4]
   2cb10:	bic	r6, r6, #63	; 0x3f
   2cb14:	mov	r1, r6
   2cb18:	bl	12478 <realloc@plt>
   2cb1c:	ldr	r2, [sp, #4]
   2cb20:	mov	r1, r8
   2cb24:	mov	r7, r0
   2cb28:	ldr	r0, [r4]
   2cb2c:	add	r0, r7, r0
   2cb30:	bl	12658 <memcpy@plt>
   2cb34:	ldr	r3, [r4]
   2cb38:	str	r3, [fp]
   2cb3c:	ldr	r3, [r4, #12]
   2cb40:	ldr	r0, [r4, #8]
   2cb44:	cmp	r3, #0
   2cb48:	str	r7, [r4, #4]
   2cb4c:	str	r6, [r4]
   2cb50:	ldrne	r3, [sp]
   2cb54:	subne	r8, r3, r5
   2cb58:	ldr	r3, [r4, #16]
   2cb5c:	addne	r8, r7, r8
   2cb60:	strne	r8, [r4, #12]
   2cb64:	cmp	r3, #0
   2cb68:	subne	r9, r9, r5
   2cb6c:	addne	r9, r7, r9
   2cb70:	strne	r9, [r4, #16]
   2cb74:	cmp	r0, #0
   2cb78:	subne	r5, sl, r5
   2cb7c:	movne	r0, #0
   2cb80:	addne	r7, r7, r5
   2cb84:	strne	r7, [r4, #8]
   2cb88:	add	sp, sp, #12
   2cb8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cb90:	cmp	r1, r6
   2cb94:	strcs	r1, [r4]
   2cb98:	movcs	r6, r1
   2cb9c:	bcs	2cb00 <crc32@@Base+0x127a4>
   2cba0:	mov	r2, r1
   2cba4:	mov	r0, #1
   2cba8:	movw	r1, #55712	; 0xd9a0
   2cbac:	movt	r1, #3
   2cbb0:	bl	1282c <__printf_chk@plt>
   2cbb4:	mvn	r0, #0
   2cbb8:	b	2cb88 <crc32@@Base+0x1282c>
   2cbbc:	add	r6, r6, #63	; 0x3f
   2cbc0:	str	r1, [sp, #4]
   2cbc4:	add	r6, r6, r1
   2cbc8:	mov	r0, r5
   2cbcc:	bic	r6, r6, #63	; 0x3f
   2cbd0:	mov	r1, r6
   2cbd4:	bl	12478 <realloc@plt>
   2cbd8:	ldr	r2, [sp, #4]
   2cbdc:	mov	r1, r8
   2cbe0:	mov	r7, r0
   2cbe4:	ldr	r0, [r4]
   2cbe8:	add	r0, r7, r0
   2cbec:	bl	12658 <memcpy@plt>
   2cbf0:	b	2cb3c <crc32@@Base+0x127e0>
   2cbf4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2cbf8:	movw	r8, #3824	; 0xef0
   2cbfc:	movt	r8, #5
   2cc00:	sub	sp, sp, #100	; 0x64
   2cc04:	mov	r4, r1
   2cc08:	mov	r1, #0
   2cc0c:	ldr	r3, [r8]
   2cc10:	str	r3, [sp, #92]	; 0x5c
   2cc14:	bl	124d8 <open@plt>
   2cc18:	subs	r7, r0, #0
   2cc1c:	blt	2cc94 <crc32@@Base+0x12938>
   2cc20:	mov	r2, sp
   2cc24:	mov	r1, r7
   2cc28:	mov	r0, #3
   2cc2c:	bl	12610 <__fxstat@plt>
   2cc30:	cmp	r0, #0
   2cc34:	blt	2cc94 <crc32@@Base+0x12938>
   2cc38:	ldr	r5, [sp, #44]	; 0x2c
   2cc3c:	cmp	r4, #0
   2cc40:	mov	r0, r5
   2cc44:	strne	r5, [r4]
   2cc48:	bl	12664 <malloc@plt>
   2cc4c:	subs	r9, r0, #0
   2cc50:	beq	2cc94 <crc32@@Base+0x12938>
   2cc54:	cmp	r5, #0
   2cc58:	ble	2ccb4 <crc32@@Base+0x12958>
   2cc5c:	mov	r6, r9
   2cc60:	mov	r4, #0
   2cc64:	b	2cc7c <crc32@@Base+0x12920>
   2cc68:	ldr	r5, [sp, #44]	; 0x2c
   2cc6c:	add	r4, r4, r0
   2cc70:	add	r6, r6, r0
   2cc74:	cmp	r5, r4
   2cc78:	ble	2ccb4 <crc32@@Base+0x12958>
   2cc7c:	sub	r2, r5, r4
   2cc80:	mov	r1, r6
   2cc84:	mov	r0, r7
   2cc88:	bl	123e8 <read@plt>
   2cc8c:	cmp	r0, #0
   2cc90:	bge	2cc68 <crc32@@Base+0x1290c>
   2cc94:	mov	r9, #0
   2cc98:	ldr	r2, [sp, #92]	; 0x5c
   2cc9c:	mov	r0, r9
   2cca0:	ldr	r3, [r8]
   2cca4:	cmp	r2, r3
   2cca8:	bne	2ccc0 <crc32@@Base+0x12964>
   2ccac:	add	sp, sp, #100	; 0x64
   2ccb0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ccb4:	mov	r0, r7
   2ccb8:	bl	123b8 <close@plt>
   2ccbc:	b	2cc98 <crc32@@Base+0x1293c>
   2ccc0:	bl	12538 <__stack_chk_fail@plt>
   2ccc4:	movw	ip, #55128	; 0xd758
   2ccc8:	movt	ip, #3
   2cccc:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ccd0:	mov	r6, r0
   2ccd4:	mov	r8, r1
   2ccd8:	sub	sp, sp, #28
   2ccdc:	ldm	ip!, {r0, r1, r2, r3}
   2cce0:	movw	r7, #3824	; 0xef0
   2cce4:	movt	r7, #5
   2cce8:	mov	lr, sp
   2ccec:	mov	r9, sp
   2ccf0:	mov	r4, #0
   2ccf4:	stmia	lr!, {r0, r1, r2, r3}
   2ccf8:	ldr	ip, [ip]
   2ccfc:	ldr	r3, [r7]
   2cd00:	str	ip, [lr]
   2cd04:	str	r3, [sp, #20]
   2cd08:	ldr	r5, [r9], #4
   2cd0c:	mov	r0, r5
   2cd10:	bl	1267c <strlen@plt>
   2cd14:	mov	r1, r5
   2cd18:	mov	r2, r0
   2cd1c:	mov	r0, r6
   2cd20:	bl	12220 <strncmp@plt>
   2cd24:	cmp	r0, #0
   2cd28:	beq	2cd54 <crc32@@Base+0x129f8>
   2cd2c:	add	r4, r4, #1
   2cd30:	cmp	r4, #5
   2cd34:	bne	2cd08 <crc32@@Base+0x129ac>
   2cd38:	ldr	r2, [sp, #20]
   2cd3c:	mov	r0, r6
   2cd40:	ldr	r3, [r7]
   2cd44:	cmp	r2, r3
   2cd48:	bne	2cd6c <crc32@@Base+0x12a10>
   2cd4c:	add	sp, sp, #28
   2cd50:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2cd54:	mov	r0, r5
   2cd58:	asr	r5, r4, #31
   2cd5c:	strd	r4, [r8, #24]
   2cd60:	bl	1267c <strlen@plt>
   2cd64:	add	r6, r6, r0
   2cd68:	b	2cd38 <crc32@@Base+0x129dc>
   2cd6c:	bl	12538 <__stack_chk_fail@plt>
   2cd70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cd74:	movw	fp, #3824	; 0xef0
   2cd78:	movt	fp, #5
   2cd7c:	sub	sp, sp, #28
   2cd80:	movw	r4, #39080	; 0x98a8
   2cd84:	movw	sl, #55740	; 0xd9bc
   2cd88:	ldr	r3, [fp]
   2cd8c:	movw	r9, #55744	; 0xd9c0
   2cd90:	ldr	r8, [pc, #276]	; 2ceac <crc32@@Base+0x12b50>
   2cd94:	movt	r4, #3
   2cd98:	movt	sl, #3
   2cd9c:	movt	r9, #3
   2cda0:	mov	r6, #0
   2cda4:	mov	r7, #0
   2cda8:	mov	r5, r0
   2cdac:	str	r1, [sp, #4]
   2cdb0:	mov	r2, #4
   2cdb4:	str	r3, [sp, #20]
   2cdb8:	b	2cdcc <crc32@@Base+0x12a70>
   2cdbc:	ldr	r4, [r8, #4]!
   2cdc0:	mov	r0, r4
   2cdc4:	bl	1267c <strlen@plt>
   2cdc8:	mov	r2, r0
   2cdcc:	mov	r1, r4
   2cdd0:	mov	r0, r5
   2cdd4:	bl	12220 <strncmp@plt>
   2cdd8:	cmp	r0, #0
   2cddc:	beq	2ce60 <crc32@@Base+0x12b04>
   2cde0:	mov	r2, #3
   2cde4:	mov	r1, sl
   2cde8:	mov	r0, r4
   2cdec:	bl	12220 <strncmp@plt>
   2cdf0:	cmp	r0, #0
   2cdf4:	bne	2ce30 <crc32@@Base+0x12ad4>
   2cdf8:	ldm	r9, {r0, r1}
   2cdfc:	ldrb	r3, [r4, #4]
   2ce00:	str	r0, [sp, #12]
   2ce04:	add	r0, sp, #12
   2ce08:	strh	r1, [sp, #16]
   2ce0c:	strb	r3, [sp, #16]
   2ce10:	bl	1267c <strlen@plt>
   2ce14:	add	r1, sp, #12
   2ce18:	mov	r2, r0
   2ce1c:	mov	r4, r0
   2ce20:	mov	r0, r5
   2ce24:	bl	12220 <strncmp@plt>
   2ce28:	cmp	r0, #0
   2ce2c:	beq	2ce88 <crc32@@Base+0x12b2c>
   2ce30:	adds	r6, r6, #1
   2ce34:	adc	r7, r7, #0
   2ce38:	cmp	r7, #0
   2ce3c:	cmpeq	r6, #16
   2ce40:	bne	2cdbc <crc32@@Base+0x12a60>
   2ce44:	mov	r0, r5
   2ce48:	ldr	r2, [sp, #20]
   2ce4c:	ldr	r3, [fp]
   2ce50:	cmp	r2, r3
   2ce54:	bne	2cea8 <crc32@@Base+0x12b4c>
   2ce58:	add	sp, sp, #28
   2ce5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ce60:	ldr	r2, [sp, #4]
   2ce64:	lsl	r3, r7, #8
   2ce68:	orr	r3, r3, r6, lsr #24
   2ce6c:	mov	r0, r4
   2ce70:	lsl	r6, r6, #8
   2ce74:	str	r3, [r2, #20]
   2ce78:	str	r6, [r2, #16]
   2ce7c:	bl	1267c <strlen@plt>
   2ce80:	add	r0, r5, r0
   2ce84:	b	2ce48 <crc32@@Base+0x12aec>
   2ce88:	ldr	r2, [sp, #4]
   2ce8c:	lsl	r3, r7, #8
   2ce90:	orr	r3, r3, r6, lsr #24
   2ce94:	add	r0, r5, r4
   2ce98:	lsl	r6, r6, #8
   2ce9c:	str	r3, [r2, #20]
   2cea0:	str	r6, [r2, #16]
   2cea4:	b	2ce48 <crc32@@Base+0x12aec>
   2cea8:	bl	12538 <__stack_chk_fail@plt>
   2ceac:	andeq	sp, r3, ip, ror #14
   2ceb0:	push	{r4, r5, lr}
   2ceb4:	movw	r4, #3824	; 0xef0
   2ceb8:	movt	r4, #5
   2cebc:	sub	sp, sp, #12
   2cec0:	mov	r5, r1
   2cec4:	mov	r2, #0
   2cec8:	ldr	r3, [r4]
   2cecc:	mov	r1, sp
   2ced0:	str	r3, [sp, #4]
   2ced4:	bl	12334 <strtoll@plt>
   2ced8:	ldr	r2, [sp, #4]
   2cedc:	ldr	r3, [r4]
   2cee0:	cmp	r2, r3
   2cee4:	str	r0, [r5, #56]	; 0x38
   2cee8:	ldr	r0, [sp]
   2ceec:	bne	2cef8 <crc32@@Base+0x12b9c>
   2cef0:	add	sp, sp, #12
   2cef4:	pop	{r4, r5, pc}
   2cef8:	bl	12538 <__stack_chk_fail@plt>
   2cefc:	push	{r4, r5, lr}
   2cf00:	movw	r4, #3824	; 0xef0
   2cf04:	movt	r4, #5
   2cf08:	sub	sp, sp, #12
   2cf0c:	mov	r5, r1
   2cf10:	mov	r2, #0
   2cf14:	ldr	r3, [r4]
   2cf18:	mov	r1, sp
   2cf1c:	str	r3, [sp, #4]
   2cf20:	bl	12334 <strtoll@plt>
   2cf24:	ldr	r2, [sp, #4]
   2cf28:	ldr	r3, [r4]
   2cf2c:	cmp	r2, r3
   2cf30:	strd	r0, [r5, #48]	; 0x30
   2cf34:	ldr	r0, [sp]
   2cf38:	bne	2cf44 <crc32@@Base+0x12be8>
   2cf3c:	add	sp, sp, #12
   2cf40:	pop	{r4, r5, pc}
   2cf44:	bl	12538 <__stack_chk_fail@plt>
   2cf48:	push	{r4, r5, lr}
   2cf4c:	movw	r4, #3824	; 0xef0
   2cf50:	movt	r4, #5
   2cf54:	sub	sp, sp, #12
   2cf58:	mov	r5, r1
   2cf5c:	mov	r2, #0
   2cf60:	ldr	r3, [r4]
   2cf64:	mov	r1, sp
   2cf68:	str	r3, [sp, #4]
   2cf6c:	bl	12334 <strtoll@plt>
   2cf70:	ldr	r2, [sp, #4]
   2cf74:	ldr	r3, [r4]
   2cf78:	cmp	r2, r3
   2cf7c:	strd	r0, [r5, #40]	; 0x28
   2cf80:	ldr	r0, [sp]
   2cf84:	bne	2cf90 <crc32@@Base+0x12c34>
   2cf88:	add	sp, sp, #12
   2cf8c:	pop	{r4, r5, pc}
   2cf90:	bl	12538 <__stack_chk_fail@plt>
   2cf94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cf98:	movw	r5, #3824	; 0xef0
   2cf9c:	movt	r5, #5
   2cfa0:	sub	sp, sp, #148	; 0x94
   2cfa4:	mov	r8, #0
   2cfa8:	mov	r4, r0
   2cfac:	ldr	r3, [r5]
   2cfb0:	mov	sl, r2
   2cfb4:	mov	r9, r1
   2cfb8:	mov	r2, #52	; 0x34
   2cfbc:	mov	r1, r8
   2cfc0:	add	r7, sl, #3
   2cfc4:	add	r0, sp, #20
   2cfc8:	str	r3, [sp, #140]	; 0x8c
   2cfcc:	bic	r6, r7, #3
   2cfd0:	str	r8, [sp]
   2cfd4:	bl	12388 <memset@plt>
   2cfd8:	ldrd	r2, [r4, #48]	; 0x30
   2cfdc:	ldrd	r0, [r4, #40]	; 0x28
   2cfe0:	cmp	sl, r6
   2cfe4:	lsr	r7, r7, #2
   2cfe8:	str	r7, [sp, #8]
   2cfec:	str	r7, [sp, #12]
   2cff0:	str	r7, [sp, #16]
   2cff4:	strd	r2, [sp, #24]
   2cff8:	strd	r0, [sp, #32]
   2cffc:	bcc	2d288 <crc32@@Base+0x12f2c>
   2d000:	ldrd	r2, [r4, #8]
   2d004:	mov	r1, #0
   2d008:	and	r0, r2, #4096	; 0x1000
   2d00c:	orrs	r3, r0, r1
   2d010:	bne	2d238 <crc32@@Base+0x12edc>
   2d014:	mov	r0, r9
   2d018:	add	r2, r4, #56	; 0x38
   2d01c:	mov	r1, sl
   2d020:	bl	2cabc <crc32@@Base+0x12760>
   2d024:	subs	r7, r0, #0
   2d028:	bne	2d21c <crc32@@Base+0x12ec0>
   2d02c:	ldrd	r2, [r4, #8]
   2d030:	mov	r3, #0
   2d034:	ldr	r1, [r4, #56]	; 0x38
   2d038:	mov	r8, r2
   2d03c:	and	r2, r2, #8192	; 0x2000
   2d040:	orrs	r3, r2, r3
   2d044:	lsr	r3, r1, #2
   2d048:	str	r3, [sp, #40]	; 0x28
   2d04c:	beq	2d088 <crc32@@Base+0x12d2c>
   2d050:	movw	r3, #51724	; 0xca0c
   2d054:	movt	r3, #30
   2d058:	ldr	r2, [r3, #16]
   2d05c:	cmp	r2, #0
   2d060:	bne	2d384 <crc32@@Base+0x13028>
   2d064:	ldr	r2, [r3, #12]
   2d068:	add	r3, r1, sl
   2d06c:	ldr	r2, [r2, #48]	; 0x30
   2d070:	sub	r3, r3, r2
   2d074:	str	r2, [sp, #40]	; 0x28
   2d078:	lsr	r3, r3, #2
   2d07c:	str	r3, [sp, #16]
   2d080:	str	r3, [sp, #8]
   2d084:	str	r3, [sp, #12]
   2d088:	ldrd	r0, [r4, #24]
   2d08c:	orrs	r3, r0, r1
   2d090:	bne	2d2b8 <crc32@@Base+0x12f5c>
   2d094:	mov	sl, #3
   2d098:	mov	fp, #0
   2d09c:	mov	ip, #6
   2d0a0:	and	r0, r8, #16384	; 0x4000
   2d0a4:	ldrd	r2, [r4, #16]
   2d0a8:	mov	r1, #0
   2d0ac:	orrs	r1, r0, r1
   2d0b0:	ldr	r1, [r4, #32]
   2d0b4:	ldr	r0, [sp, #44]	; 0x2c
   2d0b8:	orr	r1, r1, r2
   2d0bc:	strd	sl, [r4, #24]
   2d0c0:	orr	r1, r1, r0
   2d0c4:	and	r0, r8, #524288	; 0x80000
   2d0c8:	orr	r1, r1, ip
   2d0cc:	orrne	r1, r1, #1
   2d0d0:	str	r1, [sp, #44]	; 0x2c
   2d0d4:	mov	r1, #0
   2d0d8:	orrs	r1, r0, r1
   2d0dc:	ldrne	r1, [sp, #44]	; 0x2c
   2d0e0:	orrne	r1, r1, #65536	; 0x10000
   2d0e4:	strne	r1, [sp, #44]	; 0x2c
   2d0e8:	cmp	r3, #0
   2d0ec:	cmpeq	r2, #512	; 0x200
   2d0f0:	beq	2d2e0 <crc32@@Base+0x12f84>
   2d0f4:	bhi	2d2c8 <crc32@@Base+0x12f6c>
   2d0f8:	orrs	r1, r2, r3
   2d0fc:	beq	2d2e0 <crc32@@Base+0x12f84>
   2d100:	cmp	r3, #0
   2d104:	cmpeq	r2, #256	; 0x100
   2d108:	beq	2d2e0 <crc32@@Base+0x12f84>
   2d10c:	add	r1, sp, #68	; 0x44
   2d110:	add	r3, sp, #8
   2d114:	mov	ip, #0
   2d118:	ldr	r2, [r3], #4
   2d11c:	cmp	r3, r1
   2d120:	add	ip, ip, r2
   2d124:	bne	2d118 <crc32@@Base+0x12dbc>
   2d128:	add	r0, sp, #8
   2d12c:	mov	r2, sp
   2d130:	mov	r1, #64	; 0x40
   2d134:	mvn	ip, ip
   2d138:	str	ip, [sp, #68]	; 0x44
   2d13c:	bl	2cabc <crc32@@Base+0x12760>
   2d140:	subs	r7, r0, #0
   2d144:	bne	2d21c <crc32@@Base+0x12ec0>
   2d148:	movw	r8, #51724	; 0xca0c
   2d14c:	movt	r8, #30
   2d150:	ldr	r3, [r8, #8]
   2d154:	cmp	r3, #0
   2d158:	beq	2d318 <crc32@@Base+0x12fbc>
   2d15c:	ldr	lr, [r8, #16]
   2d160:	ldr	ip, [sp]
   2d164:	ldr	r2, [r3, #4]
   2d168:	cmp	lr, #0
   2d16c:	add	r2, r2, #1
   2d170:	lsr	r1, ip, #2
   2d174:	str	r2, [r3, #4]
   2d178:	streq	r1, [r3, #8]
   2d17c:	beq	2d1a8 <crc32@@Base+0x12e4c>
   2d180:	add	r0, lr, #60	; 0x3c
   2d184:	mov	r3, lr
   2d188:	mov	r2, #0
   2d18c:	str	r1, [lr, #12]
   2d190:	ldr	r1, [r3], #4
   2d194:	cmp	r0, r3
   2d198:	add	r2, r2, r1
   2d19c:	bne	2d190 <crc32@@Base+0x12e34>
   2d1a0:	mvn	r2, r2
   2d1a4:	str	r2, [lr, #60]	; 0x3c
   2d1a8:	ldrd	sl, [r4, #8]
   2d1ac:	mov	r1, #0
   2d1b0:	ldr	lr, [r8, #4]
   2d1b4:	and	r0, sl, #8192	; 0x2000
   2d1b8:	orrs	r3, r0, r1
   2d1bc:	add	ip, lr, ip
   2d1c0:	str	ip, [r8, #16]
   2d1c4:	beq	2d21c <crc32@@Base+0x12ec0>
   2d1c8:	ldr	r1, [r8, #12]
   2d1cc:	ldrd	r8, [r4, #16]
   2d1d0:	ldr	ip, [r4, #40]	; 0x28
   2d1d4:	ldr	r0, [r1, #48]	; 0x30
   2d1d8:	cmp	r0, #0
   2d1dc:	str	ip, [r1, #44]	; 0x2c
   2d1e0:	ldreq	r0, [r4, #56]	; 0x38
   2d1e4:	str	r6, [r1, #60]	; 0x3c
   2d1e8:	str	r6, [r1, #64]	; 0x40
   2d1ec:	streq	r0, [r1, #48]	; 0x30
   2d1f0:	cmp	r9, #0
   2d1f4:	ldr	r0, [r1, #68]	; 0x44
   2d1f8:	cmpeq	r8, #1280	; 0x500
   2d1fc:	bic	r0, r0, #3072	; 0xc00
   2d200:	str	r0, [r1, #68]	; 0x44
   2d204:	beq	2d21c <crc32@@Base+0x12ec0>
   2d208:	cmp	r9, #0
   2d20c:	cmpeq	r8, #1792	; 0x700
   2d210:	orreq	r0, r0, #3072	; 0xc00
   2d214:	streq	r0, [r1, #68]	; 0x44
   2d218:	bne	2d2fc <crc32@@Base+0x12fa0>
   2d21c:	ldr	r2, [sp, #140]	; 0x8c
   2d220:	mov	r0, r7
   2d224:	ldr	r3, [r5]
   2d228:	cmp	r2, r3
   2d22c:	bne	2d398 <crc32@@Base+0x1303c>
   2d230:	add	sp, sp, #148	; 0x94
   2d234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d238:	movw	r6, #51724	; 0xca0c
   2d23c:	movt	r6, #30
   2d240:	ldr	r3, [r6, #12]
   2d244:	ldr	r3, [r3, #48]	; 0x30
   2d248:	cmp	r3, #0
   2d24c:	bne	2d370 <crc32@@Base+0x13014>
   2d250:	mov	r0, r9
   2d254:	add	r2, r4, #56	; 0x38
   2d258:	mov	r1, sl
   2d25c:	bl	2cabc <crc32@@Base+0x12760>
   2d260:	subs	r7, r0, #0
   2d264:	bne	2d21c <crc32@@Base+0x12ec0>
   2d268:	ldr	r3, [r6, #12]
   2d26c:	add	sl, sl, #63	; 0x3f
   2d270:	ldr	r2, [r4, #56]	; 0x38
   2d274:	bic	sl, sl, #63	; 0x3f
   2d278:	str	sl, [r3, #52]	; 0x34
   2d27c:	str	sl, [r3, #56]	; 0x38
   2d280:	str	r2, [r3, #48]	; 0x30
   2d284:	b	2d21c <crc32@@Base+0x12ec0>
   2d288:	mov	r0, r6
   2d28c:	bl	12664 <malloc@plt>
   2d290:	mov	r1, r9
   2d294:	mov	r2, sl
   2d298:	mov	r7, r0
   2d29c:	bl	12658 <memcpy@plt>
   2d2a0:	mov	r1, r8
   2d2a4:	add	r0, r7, sl
   2d2a8:	sub	r2, r6, sl
   2d2ac:	mov	r9, r7
   2d2b0:	bl	12388 <memset@plt>
   2d2b4:	b	2d000 <crc32@@Base+0x12ca4>
   2d2b8:	subs	sl, r0, #1
   2d2bc:	sbc	fp, r1, #0
   2d2c0:	lsl	ip, sl, #1
   2d2c4:	b	2d0a0 <crc32@@Base+0x12d44>
   2d2c8:	cmp	r3, #0
   2d2cc:	cmpeq	r2, #768	; 0x300
   2d2d0:	beq	2d2e0 <crc32@@Base+0x12f84>
   2d2d4:	cmp	r3, #0
   2d2d8:	cmpeq	r2, #1024	; 0x400
   2d2dc:	bne	2d10c <crc32@@Base+0x12db0>
   2d2e0:	and	r8, r8, #262144	; 0x40000
   2d2e4:	mov	r9, #0
   2d2e8:	orrs	r3, r8, r9
   2d2ec:	ldrne	r3, [sp, #44]	; 0x2c
   2d2f0:	orrne	r3, r3, #8
   2d2f4:	strne	r3, [sp, #44]	; 0x2c
   2d2f8:	b	2d10c <crc32@@Base+0x12db0>
   2d2fc:	and	r2, sl, #18
   2d300:	mov	r3, #0
   2d304:	orrs	r3, r2, r3
   2d308:	orrne	r0, r0, #1024	; 0x400
   2d30c:	orreq	r0, r0, #2048	; 0x800
   2d310:	str	r0, [r1, #68]	; 0x44
   2d314:	b	2d21c <crc32@@Base+0x12ec0>
   2d318:	mov	r1, r7
   2d31c:	mov	r2, #60	; 0x3c
   2d320:	add	r0, sp, #80	; 0x50
   2d324:	str	r7, [sp, #4]
   2d328:	bl	12388 <memset@plt>
   2d32c:	add	r2, sp, #4
   2d330:	mov	r1, #64	; 0x40
   2d334:	add	r0, sp, #76	; 0x4c
   2d338:	mov	r3, #0
   2d33c:	movt	r3, #258	; 0x102
   2d340:	str	r3, [sp, #76]	; 0x4c
   2d344:	bl	2cabc <crc32@@Base+0x12760>
   2d348:	cmp	r0, #0
   2d34c:	movne	r7, r0
   2d350:	bne	2d21c <crc32@@Base+0x12ec0>
   2d354:	ldr	r2, [sp, #4]
   2d358:	ldr	r1, [r8, #12]
   2d35c:	ldr	r3, [r8, #4]
   2d360:	str	r2, [r1, #152]	; 0x98
   2d364:	add	r3, r3, r2
   2d368:	str	r3, [r8, #8]
   2d36c:	b	2d15c <crc32@@Base+0x12e00>
   2d370:	movw	r0, #55752	; 0xd9c8
   2d374:	movt	r0, #3
   2d378:	bl	12310 <puts@plt>
   2d37c:	mvn	r7, #0
   2d380:	b	2d21c <crc32@@Base+0x12ec0>
   2d384:	movw	r0, #55804	; 0xd9fc
   2d388:	movt	r0, #3
   2d38c:	bl	12310 <puts@plt>
   2d390:	mvn	r7, #0
   2d394:	b	2d21c <crc32@@Base+0x12ec0>
   2d398:	bl	12538 <__stack_chk_fail@plt>
   2d39c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2d3a0:	movw	r5, #3824	; 0xef0
   2d3a4:	movt	r5, #5
   2d3a8:	sub	sp, sp, #12
   2d3ac:	mov	r4, r0
   2d3b0:	ldr	r0, [r0]
   2d3b4:	ldr	r3, [r5]
   2d3b8:	mov	r1, sp
   2d3bc:	str	r3, [sp, #4]
   2d3c0:	bl	2cbf4 <crc32@@Base+0x12898>
   2d3c4:	ldrd	r2, [r4, #32]
   2d3c8:	ldrd	r6, [r4, #8]
   2d3cc:	orrs	r3, r2, r3
   2d3d0:	orr	r8, r6, #4194304	; 0x400000
   2d3d4:	moveq	r2, #16
   2d3d8:	moveq	r3, #0
   2d3dc:	mov	r9, r7
   2d3e0:	strdeq	r2, [r4, #32]
   2d3e4:	strd	r8, [r4, #8]
   2d3e8:	ldr	r2, [sp]
   2d3ec:	mov	r1, r0
   2d3f0:	mov	r0, r4
   2d3f4:	bl	2cf94 <crc32@@Base+0x12c38>
   2d3f8:	ldr	r2, [sp, #4]
   2d3fc:	ldr	r3, [r5]
   2d400:	cmp	r2, r3
   2d404:	bne	2d410 <crc32@@Base+0x130b4>
   2d408:	add	sp, sp, #12
   2d40c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d410:	bl	12538 <__stack_chk_fail@plt>
   2d414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d418:	movw	fp, #3824	; 0xef0
   2d41c:	movt	fp, #5
   2d420:	sub	sp, sp, #36	; 0x24
   2d424:	mov	r5, r0
   2d428:	add	r1, sp, #24
   2d42c:	ldr	r3, [fp]
   2d430:	ldr	r0, [r0]
   2d434:	str	r3, [sp, #28]
   2d438:	bl	2cbf4 <crc32@@Base+0x12898>
   2d43c:	subs	sl, r0, #0
   2d440:	beq	2d808 <crc32@@Base+0x134ac>
   2d444:	ldrb	r2, [sl, #4]
   2d448:	cmp	r2, #1
   2d44c:	beq	2d614 <crc32@@Base+0x132b8>
   2d450:	cmp	r2, #2
   2d454:	bne	2d5e8 <crc32@@Base+0x1328c>
   2d458:	ldrh	r8, [sl, #60]	; 0x3c
   2d45c:	ldr	r4, [sl, #40]	; 0x28
   2d460:	cmp	r8, #0
   2d464:	add	r4, sl, r4
   2d468:	beq	2d778 <crc32@@Base+0x1341c>
   2d46c:	mov	lr, #0
   2d470:	mvn	r3, #0
   2d474:	mov	ip, r4
   2d478:	str	r4, [sp, #8]
   2d47c:	mov	r9, lr
   2d480:	mov	r4, r3
   2d484:	str	sl, [sp]
   2d488:	str	fp, [sp, #20]
   2d48c:	ldrd	r0, [ip, #32]
   2d490:	orrs	r3, r0, r1
   2d494:	beq	2d4f4 <crc32@@Base+0x13198>
   2d498:	ldrd	r6, [ip, #16]
   2d49c:	orrs	r3, r6, r7
   2d4a0:	beq	2d4f4 <crc32@@Base+0x13198>
   2d4a4:	ldrd	r2, [ip, #8]
   2d4a8:	mov	fp, #0
   2d4ac:	and	sl, r2, #2
   2d4b0:	orrs	r3, sl, fp
   2d4b4:	beq	2d4f4 <crc32@@Base+0x13198>
   2d4b8:	ldr	r3, [ip, #4]
   2d4bc:	cmp	r3, #8
   2d4c0:	beq	2d4f4 <crc32@@Base+0x13198>
   2d4c4:	mov	r3, #0
   2d4c8:	cmp	r7, r3
   2d4cc:	cmpeq	r6, r4
   2d4d0:	movcc	r4, r6
   2d4d4:	adds	r2, r0, r6
   2d4d8:	adc	r3, r1, r7
   2d4dc:	mov	sl, r2
   2d4e0:	mov	fp, r3
   2d4e4:	mov	r3, #0
   2d4e8:	cmp	fp, r3
   2d4ec:	cmpeq	sl, r9
   2d4f0:	addhi	r9, r6, r0
   2d4f4:	add	lr, lr, #1
   2d4f8:	add	ip, ip, #64	; 0x40
   2d4fc:	cmp	r8, lr
   2d500:	bne	2d48c <crc32@@Base+0x13130>
   2d504:	mov	r7, r4
   2d508:	sub	r6, r9, r7
   2d50c:	mov	r0, #1
   2d510:	ldr	sl, [sp]
   2d514:	mov	r1, r6
   2d518:	ldr	r4, [sp, #8]
   2d51c:	ldr	fp, [sp, #20]
   2d520:	bl	125c8 <calloc@plt>
   2d524:	subs	r9, r0, #0
   2d528:	strne	sl, [sp]
   2d52c:	addne	r8, r4, r8, lsl #6
   2d530:	strne	fp, [sp, #8]
   2d534:	bne	2d548 <crc32@@Base+0x131ec>
   2d538:	b	2d7d8 <crc32@@Base+0x1347c>
   2d53c:	add	r4, r4, #64	; 0x40
   2d540:	cmp	r4, r8
   2d544:	beq	2d5bc <crc32@@Base+0x13260>
   2d548:	ldrd	r2, [r4, #32]
   2d54c:	ldr	ip, [r4, #16]
   2d550:	orrs	r3, r2, r3
   2d554:	ldr	r1, [r4, #20]
   2d558:	moveq	r3, #1
   2d55c:	movne	r3, #0
   2d560:	orrs	r1, ip, r1
   2d564:	moveq	r3, #1
   2d568:	cmp	r3, #0
   2d56c:	bne	2d53c <crc32@@Base+0x131e0>
   2d570:	ldrd	r0, [r4, #8]
   2d574:	mov	fp, #0
   2d578:	mov	r1, fp
   2d57c:	and	sl, r0, #2
   2d580:	mov	r0, sl
   2d584:	orrs	r3, r0, r1
   2d588:	beq	2d53c <crc32@@Base+0x131e0>
   2d58c:	ldr	r3, [r4, #4]
   2d590:	cmp	r3, #8
   2d594:	beq	2d53c <crc32@@Base+0x131e0>
   2d598:	ldr	r1, [r4, #24]
   2d59c:	sub	r0, ip, r7
   2d5a0:	ldr	r3, [sp]
   2d5a4:	add	r0, r9, r0
   2d5a8:	add	r4, r4, #64	; 0x40
   2d5ac:	add	r1, r3, r1
   2d5b0:	bl	12658 <memcpy@plt>
   2d5b4:	cmp	r4, r8
   2d5b8:	bne	2d548 <crc32@@Base+0x131ec>
   2d5bc:	ldr	sl, [sp]
   2d5c0:	mov	r8, r7
   2d5c4:	ldr	fp, [sp, #8]
   2d5c8:	mov	r1, #0
   2d5cc:	ldrd	r2, [sl, #24]
   2d5d0:	strd	r2, [sp, #8]
   2d5d4:	ldrd	r2, [r5, #8]
   2d5d8:	strd	r2, [sp]
   2d5dc:	ldrd	r2, [sp, #8]
   2d5e0:	strd	r2, [r5, #48]	; 0x30
   2d5e4:	b	2d73c <crc32@@Base+0x133e0>
   2d5e8:	movw	r1, #55848	; 0xda28
   2d5ec:	mov	r0, #1
   2d5f0:	movt	r1, #3
   2d5f4:	bl	1282c <__printf_chk@plt>
   2d5f8:	mvn	r0, #0
   2d5fc:	ldr	r2, [sp, #28]
   2d600:	ldr	r3, [fp]
   2d604:	cmp	r2, r3
   2d608:	bne	2d810 <crc32@@Base+0x134b4>
   2d60c:	add	sp, sp, #36	; 0x24
   2d610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d614:	ldrh	ip, [sl, #48]	; 0x30
   2d618:	ldr	r4, [sl, #32]
   2d61c:	cmp	ip, #0
   2d620:	add	r4, sl, r4
   2d624:	beq	2d79c <crc32@@Base+0x13440>
   2d628:	mov	r7, #0
   2d62c:	mov	r3, r4
   2d630:	mov	r6, r7
   2d634:	mvn	r8, #0
   2d638:	ldr	r2, [r3, #20]
   2d63c:	cmp	r2, #0
   2d640:	beq	2d67c <crc32@@Base+0x13320>
   2d644:	ldr	r1, [r3, #12]
   2d648:	cmp	r1, #0
   2d64c:	beq	2d67c <crc32@@Base+0x13320>
   2d650:	ldr	r0, [r3, #8]
   2d654:	tst	r0, #2
   2d658:	beq	2d67c <crc32@@Base+0x13320>
   2d65c:	ldr	r0, [r3, #4]
   2d660:	cmp	r0, #8
   2d664:	beq	2d67c <crc32@@Base+0x13320>
   2d668:	cmp	r8, r1
   2d66c:	add	r2, r2, r1
   2d670:	movcs	r8, r1
   2d674:	cmp	r6, r2
   2d678:	movcc	r6, r2
   2d67c:	add	r7, r7, #1
   2d680:	add	r3, r3, #40	; 0x28
   2d684:	cmp	r7, ip
   2d688:	bne	2d638 <crc32@@Base+0x132dc>
   2d68c:	sub	r6, r6, r8
   2d690:	mov	r0, #1
   2d694:	str	r8, [sp, #8]
   2d698:	mov	r1, r6
   2d69c:	bl	125c8 <calloc@plt>
   2d6a0:	ldrd	r2, [r5, #8]
   2d6a4:	orr	r8, r2, #262144	; 0x40000
   2d6a8:	mov	r9, r3
   2d6ac:	strd	r8, [sp]
   2d6b0:	subs	r9, r0, #0
   2d6b4:	beq	2d7e8 <crc32@@Base+0x1348c>
   2d6b8:	mov	r3, #40	; 0x28
   2d6bc:	ldr	r8, [sp, #8]
   2d6c0:	mla	r7, r3, r7, r4
   2d6c4:	b	2d6d4 <crc32@@Base+0x13378>
   2d6c8:	add	r4, r4, #40	; 0x28
   2d6cc:	cmp	r4, r7
   2d6d0:	beq	2d720 <crc32@@Base+0x133c4>
   2d6d4:	ldr	r0, [r4, #12]
   2d6d8:	ldr	r2, [r4, #20]
   2d6dc:	cmp	r0, #0
   2d6e0:	cmpne	r2, #0
   2d6e4:	beq	2d6c8 <crc32@@Base+0x1336c>
   2d6e8:	ldr	r3, [r4, #8]
   2d6ec:	tst	r3, #2
   2d6f0:	beq	2d6c8 <crc32@@Base+0x1336c>
   2d6f4:	ldr	r3, [r4, #4]
   2d6f8:	cmp	r3, #8
   2d6fc:	beq	2d6c8 <crc32@@Base+0x1336c>
   2d700:	ldr	r1, [r4, #16]
   2d704:	sub	r0, r0, r8
   2d708:	add	r0, r9, r0
   2d70c:	add	r4, r4, #40	; 0x28
   2d710:	add	r1, sl, r1
   2d714:	bl	12658 <memcpy@plt>
   2d718:	cmp	r4, r7
   2d71c:	bne	2d6d4 <crc32@@Base+0x13378>
   2d720:	str	r8, [sp, #8]
   2d724:	ldr	r0, [sl, #24]
   2d728:	mov	r1, #0
   2d72c:	ldrd	r2, [sp]
   2d730:	ldr	r8, [sp, #8]
   2d734:	strd	r0, [r5, #48]	; 0x30
   2d738:	strd	r2, [r5, #8]
   2d73c:	ldrd	r2, [r5, #32]
   2d740:	str	r1, [r5, #44]	; 0x2c
   2d744:	ldrd	r0, [sp]
   2d748:	orrs	r3, r2, r3
   2d74c:	str	r8, [r5, #40]	; 0x28
   2d750:	moveq	r2, #16
   2d754:	moveq	r3, #0
   2d758:	orr	r0, r0, #2097152	; 0x200000
   2d75c:	strdeq	r2, [r5, #32]
   2d760:	strd	r0, [r5, #8]
   2d764:	mov	r2, r6
   2d768:	mov	r1, r9
   2d76c:	mov	r0, r5
   2d770:	bl	2cf94 <crc32@@Base+0x12c38>
   2d774:	b	2d5fc <crc32@@Base+0x132a0>
   2d778:	mov	r1, #1
   2d77c:	mov	r0, r1
   2d780:	bl	125c8 <calloc@plt>
   2d784:	subs	r9, r0, #0
   2d788:	beq	2d7d8 <crc32@@Base+0x1347c>
   2d78c:	mov	r1, r8
   2d790:	mov	r6, #1
   2d794:	mvn	r8, #0
   2d798:	b	2d5cc <crc32@@Base+0x13270>
   2d79c:	mov	r1, r2
   2d7a0:	mov	r0, r2
   2d7a4:	str	r2, [sp, #8]
   2d7a8:	bl	125c8 <calloc@plt>
   2d7ac:	ldrd	r8, [r5, #8]
   2d7b0:	orr	r2, r8, #262144	; 0x40000
   2d7b4:	mov	r3, r9
   2d7b8:	strd	r2, [sp]
   2d7bc:	subs	r9, r0, #0
   2d7c0:	beq	2d7e8 <crc32@@Base+0x1348c>
   2d7c4:	ldr	r2, [sp, #8]
   2d7c8:	mvn	r3, #0
   2d7cc:	str	r3, [sp, #8]
   2d7d0:	mov	r6, r2
   2d7d4:	b	2d724 <crc32@@Base+0x133c8>
   2d7d8:	ldrd	r2, [sl, #24]
   2d7dc:	mvn	r0, #0
   2d7e0:	strd	r2, [r5, #48]	; 0x30
   2d7e4:	b	2d5fc <crc32@@Base+0x132a0>
   2d7e8:	ldr	r3, [sl, #24]
   2d7ec:	mov	r2, #0
   2d7f0:	ldrd	r0, [sp]
   2d7f4:	str	r2, [r5, #52]	; 0x34
   2d7f8:	str	r3, [r5, #48]	; 0x30
   2d7fc:	strd	r0, [r5, #8]
   2d800:	mvn	r0, #0
   2d804:	b	2d5fc <crc32@@Base+0x132a0>
   2d808:	mvn	r0, #0
   2d80c:	b	2d5fc <crc32@@Base+0x132a0>
   2d810:	bl	12538 <__stack_chk_fail@plt>
   2d814:	push	{r4, r5, r6, r7, lr}
   2d818:	movw	r5, #3824	; 0xef0
   2d81c:	movt	r5, #5
   2d820:	sub	sp, sp, #28
   2d824:	mov	r1, #0
   2d828:	mov	r4, r0
   2d82c:	ldr	r3, [r5]
   2d830:	ldr	r0, [r0]
   2d834:	str	r3, [sp, #20]
   2d838:	bl	2cbf4 <crc32@@Base+0x12898>
   2d83c:	ldr	r3, [pc, #388]	; 2d9c8 <crc32@@Base+0x1366c>
   2d840:	add	ip, sp, #4
   2d844:	subs	r6, r0, #0
   2d848:	ldm	r3, {r0, r1, r2, r3}
   2d84c:	stmia	ip!, {r0, r1, r2}
   2d850:	strh	r3, [ip]
   2d854:	beq	2d9a8 <crc32@@Base+0x1364c>
   2d858:	add	r1, sp, #4
   2d85c:	mov	r2, #14
   2d860:	mov	r0, r6
   2d864:	bl	12784 <memcmp@plt>
   2d868:	cmp	r0, #0
   2d86c:	bne	2d9a8 <crc32@@Base+0x1364c>
   2d870:	ldrh	r2, [r6, #14]
   2d874:	add	r6, r6, #16
   2d878:	lsl	r3, r2, #8
   2d87c:	orr	r3, r3, r2, lsr #8
   2d880:	uxth	r3, r3
   2d884:	add	r2, r6, r3
   2d888:	ldrb	r3, [r6, r3]
   2d88c:	cmp	r3, #98	; 0x62
   2d890:	bne	2d9a8 <crc32@@Base+0x1364c>
   2d894:	ldrh	r1, [r2, #1]
   2d898:	add	r2, r2, #3
   2d89c:	lsl	r3, r1, #8
   2d8a0:	orr	r3, r3, r1, lsr #8
   2d8a4:	uxth	r3, r3
   2d8a8:	add	r1, r2, r3
   2d8ac:	ldrb	r3, [r2, r3]
   2d8b0:	cmp	r3, #99	; 0x63
   2d8b4:	bne	2d9a8 <crc32@@Base+0x1364c>
   2d8b8:	ldrh	r2, [r1, #1]
   2d8bc:	add	r1, r1, #3
   2d8c0:	lsl	r3, r2, #8
   2d8c4:	orr	r3, r3, r2, lsr #8
   2d8c8:	uxth	r3, r3
   2d8cc:	add	r2, r1, r3
   2d8d0:	ldrb	r3, [r1, r3]
   2d8d4:	cmp	r3, #100	; 0x64
   2d8d8:	bne	2d9a8 <crc32@@Base+0x1364c>
   2d8dc:	ldrh	r1, [r2, #1]
   2d8e0:	add	r2, r2, #3
   2d8e4:	lsl	r3, r1, #8
   2d8e8:	orr	r3, r3, r1, lsr #8
   2d8ec:	uxth	r3, r3
   2d8f0:	add	r0, r2, r3
   2d8f4:	ldrb	r3, [r2, r3]
   2d8f8:	cmp	r3, #101	; 0x65
   2d8fc:	bne	2d9a8 <crc32@@Base+0x1364c>
   2d900:	ldr	r2, [r0, #1]
   2d904:	add	lr, r0, #5
   2d908:	rev	r2, r2
   2d90c:	cmp	r2, #0
   2d910:	beq	2d948 <crc32@@Base+0x135ec>
   2d914:	mov	r6, #255	; 0xff
   2d918:	add	r0, r0, #1
   2d91c:	movt	r6, #255	; 0xff
   2d920:	add	ip, r0, #8
   2d924:	ldr	r1, [r0, #4]
   2d928:	sub	ip, ip, lr
   2d92c:	add	r0, r0, #4
   2d930:	cmp	r2, ip
   2d934:	eor	r3, r1, r1, ror #16
   2d938:	and	r3, r6, r3, lsr #8
   2d93c:	eor	r3, r3, r1, ror #8
   2d940:	str	r3, [r0]
   2d944:	bhi	2d920 <crc32@@Base+0x135c4>
   2d948:	ldrd	r0, [r4, #32]
   2d94c:	mvn	r6, #0
   2d950:	mov	r7, #0
   2d954:	strd	r6, [r4, #40]	; 0x28
   2d958:	orrs	r3, r0, r1
   2d95c:	moveq	r0, #32
   2d960:	moveq	r1, #0
   2d964:	strdeq	r0, [r4, #32]
   2d968:	ldr	r1, [sp, #20]
   2d96c:	ldr	r3, [r5]
   2d970:	cmp	r1, r3
   2d974:	ldrd	r0, [r4, #8]
   2d978:	orr	r6, r0, #1048576	; 0x100000
   2d97c:	mov	r0, #0
   2d980:	mov	r7, r1
   2d984:	mov	r1, #0
   2d988:	strd	r6, [r4, #8]
   2d98c:	strd	r0, [r4, #48]	; 0x30
   2d990:	bne	2d9c4 <crc32@@Base+0x13668>
   2d994:	mov	r1, lr
   2d998:	mov	r0, r4
   2d99c:	add	sp, sp, #28
   2d9a0:	pop	{r4, r5, r6, r7, lr}
   2d9a4:	b	2cf94 <crc32@@Base+0x12c38>
   2d9a8:	ldr	r2, [sp, #20]
   2d9ac:	mvn	r0, #0
   2d9b0:	ldr	r3, [r5]
   2d9b4:	cmp	r2, r3
   2d9b8:	bne	2d9c4 <crc32@@Base+0x13668>
   2d9bc:	add	sp, sp, #28
   2d9c0:	pop	{r4, r5, r6, r7, pc}
   2d9c4:	bl	12538 <__stack_chk_fail@plt>
   2d9c8:	andeq	sp, r3, ip, lsr #15
   2d9cc:	subs	r3, r0, #0
   2d9d0:	beq	2da08 <crc32@@Base+0x136ac>
   2d9d4:	ldr	r2, [r3, #56]	; 0x38
   2d9d8:	push	{r4, lr}
   2d9dc:	cmp	r2, #0
   2d9e0:	bne	2da38 <crc32@@Base+0x136dc>
   2d9e4:	ldr	r0, [r3, #4]
   2d9e8:	cmp	r0, #0
   2d9ec:	bne	2da10 <crc32@@Base+0x136b4>
   2d9f0:	ldr	r2, [r3, #16]
   2d9f4:	cmp	r2, #0
   2d9f8:	ldreq	r3, [r3]
   2d9fc:	clzeq	r0, r3
   2da00:	lsreq	r0, r0, #5
   2da04:	pop	{r4, pc}
   2da08:	mov	r0, r3
   2da0c:	bx	lr
   2da10:	movw	r3, #7868	; 0x1ebc
   2da14:	movt	r3, #5
   2da18:	mov	r2, #41	; 0x29
   2da1c:	mov	r1, #1
   2da20:	ldr	r3, [r3]
   2da24:	movw	r0, #55916	; 0xda6c
   2da28:	movt	r0, #3
   2da2c:	bl	12634 <fwrite@plt>
   2da30:	mvn	r0, #0
   2da34:	pop	{r4, pc}
   2da38:	movw	r3, #7868	; 0x1ebc
   2da3c:	movt	r3, #5
   2da40:	mov	r2, #42	; 0x2a
   2da44:	mov	r1, #1
   2da48:	ldr	r3, [r3]
   2da4c:	movw	r0, #55872	; 0xda40
   2da50:	movt	r0, #3
   2da54:	bl	12634 <fwrite@plt>
   2da58:	mvn	r0, #0
   2da5c:	pop	{r4, pc}
   2da60:	push	{r4, r5, r6, r7, r8, lr}
   2da64:	mov	r2, #4
   2da68:	mov	r5, r1
   2da6c:	movw	r1, #55960	; 0xda98
   2da70:	movt	r1, #3
   2da74:	mov	r4, r0
   2da78:	bl	12220 <strncmp@plt>
   2da7c:	cmp	r0, #0
   2da80:	beq	2dab8 <crc32@@Base+0x1375c>
   2da84:	movw	r1, #55968	; 0xdaa0
   2da88:	mov	r2, #5
   2da8c:	movt	r1, #3
   2da90:	mov	r0, r4
   2da94:	bl	12220 <strncmp@plt>
   2da98:	cmp	r0, #0
   2da9c:	bne	2dac0 <crc32@@Base+0x13764>
   2daa0:	ldrd	r2, [r5, #8]
   2daa4:	add	r0, r4, #5
   2daa8:	orr	r6, r2, #524288	; 0x80000
   2daac:	mov	r7, r3
   2dab0:	strd	r6, [r5, #8]
   2dab4:	pop	{r4, r5, r6, r7, r8, pc}
   2dab8:	add	r0, r4, #4
   2dabc:	pop	{r4, r5, r6, r7, r8, pc}
   2dac0:	mov	r2, r4
   2dac4:	movw	r1, #55976	; 0xdaa8
   2dac8:	mov	r0, #1
   2dacc:	movt	r1, #3
   2dad0:	bl	1282c <__printf_chk@plt>
   2dad4:	mov	r0, #0
   2dad8:	pop	{r4, r5, r6, r7, r8, pc}
   2dadc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dae0:	sub	sp, sp, #4608	; 0x1200
   2dae4:	sub	sp, sp, #44	; 0x2c
   2dae8:	movw	r3, #3824	; 0xef0
   2daec:	movt	r3, #5
   2daf0:	add	ip, sp, #4608	; 0x1200
   2daf4:	str	r3, [sp, #20]
   2daf8:	add	ip, ip, #36	; 0x24
   2dafc:	ldr	r3, [r3]
   2db00:	mov	r4, r1
   2db04:	str	r0, [sp, #24]
   2db08:	mov	r2, #2048	; 0x800
   2db0c:	mov	r1, #0
   2db10:	add	r0, sp, #96	; 0x60
   2db14:	str	r3, [ip]
   2db18:	bl	12388 <memset@plt>
   2db1c:	mov	r2, #2496	; 0x9c0
   2db20:	mov	r1, #0
   2db24:	add	r0, sp, #2144	; 0x860
   2db28:	bl	12388 <memset@plt>
   2db2c:	add	r0, sp, #2144	; 0x860
   2db30:	bl	2ca20 <crc32@@Base+0x126c4>
   2db34:	mov	r2, #0
   2db38:	mov	r1, #2496	; 0x9c0
   2db3c:	add	r0, sp, #2144	; 0x860
   2db40:	bl	2cabc <crc32@@Base+0x12760>
   2db44:	mov	r1, #0
   2db48:	cmp	r0, #0
   2db4c:	ldr	r0, [r4, #72]	; 0x48
   2db50:	movweq	r3, #51724	; 0xca0c
   2db54:	movteq	r3, #30
   2db58:	ldreq	r2, [r3, #4]
   2db5c:	streq	r2, [r3, #12]
   2db60:	bl	2cbf4 <crc32@@Base+0x12898>
   2db64:	cmp	r0, #0
   2db68:	beq	2dc44 <crc32@@Base+0x138e8>
   2db6c:	mov	r1, #123	; 0x7b
   2db70:	bl	12820 <strchr@plt>
   2db74:	subs	r4, r0, #0
   2db78:	beq	2dc44 <crc32@@Base+0x138e8>
   2db7c:	movw	r9, #55128	; 0xd758
   2db80:	add	r4, r4, #1
   2db84:	add	r8, sp, #96	; 0x60
   2db88:	movt	r9, #3
   2db8c:	mov	r3, #0
   2db90:	str	r3, [sp, #8]
   2db94:	mov	r1, #10
   2db98:	mov	r0, r4
   2db9c:	bl	12820 <strchr@plt>
   2dba0:	subs	r7, r0, #0
   2dba4:	beq	2dc44 <crc32@@Base+0x138e8>
   2dba8:	ldrb	r3, [r7, #-1]
   2dbac:	cmp	r3, #13
   2dbb0:	moveq	r3, #0
   2dbb4:	strbeq	r3, [r7, #-1]
   2dbb8:	mov	r3, #0
   2dbbc:	strb	r3, [r7], #1
   2dbc0:	ldrb	r3, [r4]
   2dbc4:	cmp	r3, #9
   2dbc8:	cmpne	r3, #32
   2dbcc:	bne	2dbe0 <crc32@@Base+0x13884>
   2dbd0:	ldrb	r3, [r4, #1]!
   2dbd4:	cmp	r3, #9
   2dbd8:	cmpne	r3, #32
   2dbdc:	beq	2dbd0 <crc32@@Base+0x13874>
   2dbe0:	cmp	r3, #91	; 0x5b
   2dbe4:	beq	2dc90 <crc32@@Base+0x13934>
   2dbe8:	ldrb	r3, [r4]
   2dbec:	cmp	r3, #125	; 0x7d
   2dbf0:	beq	2dda4 <crc32@@Base+0x13a48>
   2dbf4:	cmp	r3, #0
   2dbf8:	bne	2dc08 <crc32@@Base+0x138ac>
   2dbfc:	mov	r4, r7
   2dc00:	b	2db94 <crc32@@Base+0x13838>
   2dc04:	ldrb	r3, [r4, #1]!
   2dc08:	cmp	r3, #9
   2dc0c:	cmpne	r3, #32
   2dc10:	beq	2dc04 <crc32@@Base+0x138a8>
   2dc14:	ldr	r3, [sp, #8]
   2dc18:	str	r4, [r8], #64	; 0x40
   2dc1c:	add	r3, r3, #1
   2dc20:	str	r3, [sp, #8]
   2dc24:	b	2dbfc <crc32@@Base+0x138a0>
   2dc28:	add	r3, sp, #552	; 0x228
   2dc2c:	movw	r1, #56188	; 0xdb7c
   2dc30:	add	r4, r3, r4, lsl #6
   2dc34:	mov	r0, #1
   2dc38:	movt	r1, #3
   2dc3c:	ldr	r2, [r4, #-456]	; 0xfffffe38
   2dc40:	bl	1282c <__printf_chk@plt>
   2dc44:	movw	r3, #7868	; 0x1ebc
   2dc48:	movt	r3, #5
   2dc4c:	movw	r0, #56212	; 0xdb94
   2dc50:	mov	r2, #31
   2dc54:	ldr	r3, [r3]
   2dc58:	movt	r0, #3
   2dc5c:	mov	r1, #1
   2dc60:	bl	12634 <fwrite@plt>
   2dc64:	mvn	r0, #0
   2dc68:	add	r3, sp, #4608	; 0x1200
   2dc6c:	add	r3, r3, #36	; 0x24
   2dc70:	ldr	r2, [r3]
   2dc74:	ldr	r3, [sp, #20]
   2dc78:	ldr	r3, [r3]
   2dc7c:	cmp	r2, r3
   2dc80:	bne	2e224 <crc32@@Base+0x13ec8>
   2dc84:	add	sp, sp, #4608	; 0x1200
   2dc88:	add	sp, sp, #44	; 0x2c
   2dc8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dc90:	ldrb	r3, [r4, #1]
   2dc94:	add	r4, r4, #1
   2dc98:	mov	sl, #48	; 0x30
   2dc9c:	cmp	r3, #9
   2dca0:	cmpne	r3, #32
   2dca4:	ldrbeq	r3, [r4, #1]!
   2dca8:	beq	2dc9c <crc32@@Base+0x13940>
   2dcac:	ldr	r5, [pc, #1396]	; 2e228 <crc32@@Base+0x13ecc>
   2dcb0:	mov	r6, #0
   2dcb4:	mov	r0, r5
   2dcb8:	bl	1267c <strlen@plt>
   2dcbc:	mov	r1, r4
   2dcc0:	mov	r2, r0
   2dcc4:	mov	fp, r0
   2dcc8:	mov	r0, r5
   2dccc:	bl	12220 <strncmp@plt>
   2dcd0:	cmp	r0, #0
   2dcd4:	beq	2dd00 <crc32@@Base+0x139a4>
   2dcd8:	add	r6, r6, #1
   2dcdc:	add	r5, r5, #48	; 0x30
   2dce0:	cmp	r6, #10
   2dce4:	bne	2dcb4 <crc32@@Base+0x13958>
   2dce8:	mov	r2, r4
   2dcec:	movw	r1, #56012	; 0xdacc
   2dcf0:	mov	r0, #1
   2dcf4:	movt	r1, #3
   2dcf8:	bl	1282c <__printf_chk@plt>
   2dcfc:	b	2dc44 <crc32@@Base+0x138e8>
   2dd00:	mla	r6, sl, r6, r9
   2dd04:	add	r4, r4, fp
   2dd08:	ldr	r3, [r6, #144]	; 0x90
   2dd0c:	cmp	r3, #0
   2dd10:	beq	2dd48 <crc32@@Base+0x139ec>
   2dd14:	mov	r0, r4
   2dd18:	mov	r1, r8
   2dd1c:	blx	r3
   2dd20:	mov	r4, r0
   2dd24:	cmp	r4, #0
   2dd28:	beq	2dc44 <crc32@@Base+0x138e8>
   2dd2c:	ldrb	r3, [r4]
   2dd30:	cmp	r3, #93	; 0x5d
   2dd34:	beq	2dd94 <crc32@@Base+0x13a38>
   2dd38:	cmp	r3, #44	; 0x2c
   2dd3c:	ldrbeq	r3, [r4, #1]
   2dd40:	addeq	r4, r4, #1
   2dd44:	b	2dc9c <crc32@@Base+0x13940>
   2dd48:	ldr	r1, [r6, #136]	; 0x88
   2dd4c:	mov	ip, #1
   2dd50:	sub	r3, r1, #32
   2dd54:	rsb	r0, r1, #32
   2dd58:	lsl	r3, ip, r3
   2dd5c:	str	r3, [sp, #4]
   2dd60:	ldr	lr, [sp, #4]
   2dd64:	lsl	r1, ip, r1
   2dd68:	str	r1, [sp]
   2dd6c:	orr	r0, lr, ip, lsr r0
   2dd70:	str	r0, [sp, #4]
   2dd74:	ldrd	r2, [r8, #8]
   2dd78:	ldrd	r0, [sp]
   2dd7c:	orr	r0, r0, r2
   2dd80:	orr	r1, r1, r3
   2dd84:	mov	r2, r0
   2dd88:	mov	r3, r1
   2dd8c:	strd	r2, [r8, #8]
   2dd90:	b	2dd24 <crc32@@Base+0x139c8>
   2dd94:	add	r4, r4, #1
   2dd98:	ldrb	r3, [r4]
   2dd9c:	cmp	r3, #125	; 0x7d
   2dda0:	bne	2dbf4 <crc32@@Base+0x13898>
   2dda4:	ldr	r3, [sp, #8]
   2dda8:	cmp	r3, #0
   2ddac:	beq	2e15c <crc32@@Base+0x13e00>
   2ddb0:	add	r3, sp, #96	; 0x60
   2ddb4:	str	r3, [sp, #28]
   2ddb8:	str	r3, [sp, #12]
   2ddbc:	mov	r3, #0
   2ddc0:	str	r3, [sp, #16]
   2ddc4:	b	2ddec <crc32@@Base+0x13a90>
   2ddc8:	ldr	r2, [sp, #12]
   2ddcc:	ldr	r3, [sp, #16]
   2ddd0:	add	r2, r2, #64	; 0x40
   2ddd4:	str	r2, [sp, #12]
   2ddd8:	ldr	r2, [sp, #8]
   2dddc:	add	r3, r3, #1
   2dde0:	str	r3, [sp, #16]
   2dde4:	cmp	r2, r3
   2dde8:	beq	2dfac <crc32@@Base+0x13c50>
   2ddec:	ldr	r3, [sp, #12]
   2ddf0:	mov	r1, #0
   2ddf4:	ldrd	r2, [r3, #8]
   2ddf8:	and	r0, r2, #512	; 0x200
   2ddfc:	orrs	r3, r0, r1
   2de00:	beq	2ddc8 <crc32@@Base+0x13a6c>
   2de04:	add	r3, sp, #2144	; 0x860
   2de08:	mov	r1, #0
   2de0c:	add	r3, r3, #8
   2de10:	mov	r2, #132	; 0x84
   2de14:	sub	r0, r3, #4
   2de18:	mov	r9, r1
   2de1c:	str	r1, [sp]
   2de20:	bl	12388 <memset@plt>
   2de24:	ldr	r3, [sp, #16]
   2de28:	add	r2, sp, #96	; 0x60
   2de2c:	add	r1, sp, #2160	; 0x870
   2de30:	add	r8, sp, #2288	; 0x8f0
   2de34:	add	r6, sp, #96	; 0x60
   2de38:	ldr	r7, [r2, r3, lsl #6]
   2de3c:	movw	r2, #56040	; 0xdae8
   2de40:	movw	r3, #56048	; 0xdaf0
   2de44:	movt	r2, #3
   2de48:	movt	r3, #3
   2de4c:	str	r2, [sp, #2144]	; 0x860
   2de50:	str	r3, [sp, #2168]	; 0x878
   2de54:	movw	r2, #56056	; 0xdaf8
   2de58:	movw	r3, #56064	; 0xdb00
   2de5c:	movt	r2, #3
   2de60:	movt	r3, #3
   2de64:	str	r2, [sp, #2192]	; 0x890
   2de68:	str	r3, [sp, #2216]	; 0x8a8
   2de6c:	movw	r2, #56072	; 0xdb08
   2de70:	movw	r3, #56084	; 0xdb14
   2de74:	movt	r2, #3
   2de78:	movt	r3, #3
   2de7c:	str	r2, [sp, #2240]	; 0x8c0
   2de80:	str	r3, [sp, #2264]	; 0x8d8
   2de84:	mov	r2, #256	; 0x100
   2de88:	mov	r3, #0
   2de8c:	strd	r2, [r1]
   2de90:	add	r1, sp, #2176	; 0x880
   2de94:	add	r1, r1, #8
   2de98:	strd	r2, [r1]
   2de9c:	add	r1, sp, #2208	; 0x8a0
   2dea0:	strd	r2, [r1]
   2dea4:	add	r1, sp, #2224	; 0x8b0
   2dea8:	add	r1, r1, #8
   2deac:	strd	r2, [r1]
   2deb0:	add	r1, sp, #2192	; 0x890
   2deb4:	add	r1, r1, #8
   2deb8:	mov	r2, #262144	; 0x40000
   2debc:	mov	r3, #0
   2dec0:	strd	r2, [r1]
   2dec4:	add	r1, sp, #2224	; 0x8b0
   2dec8:	strd	r2, [r1]
   2decc:	add	r1, sp, #2256	; 0x8d0
   2ded0:	mov	r2, #1280	; 0x500
   2ded4:	mov	r3, #0
   2ded8:	strd	r2, [r1]
   2dedc:	add	r1, sp, #2272	; 0x8e0
   2dee0:	add	r1, r1, #8
   2dee4:	mov	r2, #1792	; 0x700
   2dee8:	mov	r3, #0
   2deec:	strd	r2, [r1]
   2def0:	ldrd	r4, [r6, #8]
   2def4:	mov	r3, #0
   2def8:	and	r2, r4, #8192	; 0x2000
   2defc:	orrs	r3, r2, r3
   2df00:	beq	2df64 <crc32@@Base+0x13c08>
   2df04:	add	fp, sp, #2144	; 0x860
   2df08:	ldr	sl, [fp]
   2df0c:	mov	r0, sl
   2df10:	bl	1267c <strlen@plt>
   2df14:	mov	r1, sl
   2df18:	mov	r2, r0
   2df1c:	mov	r0, r7
   2df20:	bl	12220 <strncmp@plt>
   2df24:	cmp	r0, #0
   2df28:	bne	2df4c <crc32@@Base+0x13bf0>
   2df2c:	mov	r1, #1
   2df30:	str	r1, [sp]
   2df34:	ldrd	r0, [fp, #16]
   2df38:	ldrd	r2, [fp, #8]
   2df3c:	strd	r0, [r6, #16]
   2df40:	orr	r4, r4, r2
   2df44:	orr	r5, r5, r3
   2df48:	strd	r4, [r6, #8]
   2df4c:	add	fp, fp, #24
   2df50:	cmp	fp, r8
   2df54:	bne	2df08 <crc32@@Base+0x13bac>
   2df58:	ldr	r3, [sp]
   2df5c:	cmp	r3, #0
   2df60:	beq	2df94 <crc32@@Base+0x13c38>
   2df64:	ldr	r3, [sp, #8]
   2df68:	add	r9, r9, #1
   2df6c:	add	r6, r6, #64	; 0x40
   2df70:	cmp	r3, r9
   2df74:	bne	2def0 <crc32@@Base+0x13b94>
   2df78:	ldr	r3, [sp]
   2df7c:	cmp	r3, #0
   2df80:	bne	2ddc8 <crc32@@Base+0x13a6c>
   2df84:	movw	r0, #56128	; 0xdb40
   2df88:	movt	r0, #3
   2df8c:	bl	12310 <puts@plt>
   2df90:	b	2dc44 <crc32@@Base+0x138e8>
   2df94:	mov	r2, r7
   2df98:	movw	r1, #56092	; 0xdb1c
   2df9c:	mov	r0, #1
   2dfa0:	movt	r1, #3
   2dfa4:	bl	1282c <__printf_chk@plt>
   2dfa8:	b	2dc44 <crc32@@Base+0x138e8>
   2dfac:	add	r7, sp, #96	; 0x60
   2dfb0:	mvn	sl, #0
   2dfb4:	mov	r6, #0
   2dfb8:	mov	r8, r2
   2dfbc:	b	2dfe0 <crc32@@Base+0x13c84>
   2dfc0:	orr	r2, r2, r3
   2dfc4:	cmn	sl, #1
   2dfc8:	cmpne	r2, #0
   2dfcc:	bne	2e008 <crc32@@Base+0x13cac>
   2dfd0:	add	r6, r6, #1
   2dfd4:	add	r7, r7, #64	; 0x40
   2dfd8:	cmp	r8, r6
   2dfdc:	beq	2e094 <crc32@@Base+0x13d38>
   2dfe0:	ldrd	r4, [r7, #8]
   2dfe4:	mov	r1, #0
   2dfe8:	mov	r3, #0
   2dfec:	and	r0, r4, #8192	; 0x2000
   2dff0:	and	r2, r4, #4096	; 0x1000
   2dff4:	orrs	r1, r0, r1
   2dff8:	beq	2dfc0 <crc32@@Base+0x13c64>
   2dffc:	orrs	r3, r2, r3
   2e000:	mov	sl, r6
   2e004:	beq	2dfd0 <crc32@@Base+0x13c74>
   2e008:	lsl	r5, r6, #6
   2e00c:	add	r3, sp, #96	; 0x60
   2e010:	add	r4, r3, r5
   2e014:	add	r3, sp, #552	; 0x228
   2e018:	add	r9, r3, sl, lsl #6
   2e01c:	add	lr, sp, #32
   2e020:	mov	r5, r4
   2e024:	sub	ip, r9, #456	; 0x1c8
   2e028:	ldm	r4!, {r0, r1, r2, r3}
   2e02c:	mov	fp, lr
   2e030:	mov	r9, ip
   2e034:	stmia	lr!, {r0, r1, r2, r3}
   2e038:	ldm	r4!, {r0, r1, r2, r3}
   2e03c:	stmia	lr!, {r0, r1, r2, r3}
   2e040:	ldm	r4!, {r0, r1, r2, r3}
   2e044:	stmia	lr!, {r0, r1, r2, r3}
   2e048:	ldm	r4, {r0, r1, r2, r3}
   2e04c:	stm	lr, {r0, r1, r2, r3}
   2e050:	ldm	ip!, {r0, r1, r2, r3}
   2e054:	stmia	r5!, {r0, r1, r2, r3}
   2e058:	ldm	ip!, {r0, r1, r2, r3}
   2e05c:	stmia	r5!, {r0, r1, r2, r3}
   2e060:	ldm	ip!, {r0, r1, r2, r3}
   2e064:	stmia	r5!, {r0, r1, r2, r3}
   2e068:	ldm	ip, {r0, r1, r2, r3}
   2e06c:	stm	r4, {r0, r1, r2, r3}
   2e070:	ldm	fp!, {r0, r1, r2, r3}
   2e074:	stmia	r9!, {r0, r1, r2, r3}
   2e078:	ldm	fp!, {r0, r1, r2, r3}
   2e07c:	stmia	r9!, {r0, r1, r2, r3}
   2e080:	ldm	fp!, {r0, r1, r2, r3}
   2e084:	stmia	r9!, {r0, r1, r2, r3}
   2e088:	ldm	lr, {r0, r1, r2, r3}
   2e08c:	stm	ip, {r0, r1, r2, r3}
   2e090:	b	2dfd0 <crc32@@Base+0x13c74>
   2e094:	movw	r5, #19526	; 0x4c46
   2e098:	mov	r4, #0
   2e09c:	movt	r5, #32581	; 0x7f45
   2e0a0:	ldr	r7, [sp, #8]
   2e0a4:	ldr	r6, [sp, #28]
   2e0a8:	b	2e118 <crc32@@Base+0x13dbc>
   2e0ac:	mov	r2, #4
   2e0b0:	add	r1, sp, #32
   2e0b4:	bl	123e8 <read@plt>
   2e0b8:	cmp	r0, #4
   2e0bc:	bne	2dc28 <crc32@@Base+0x138cc>
   2e0c0:	mov	r0, r8
   2e0c4:	bl	123b8 <close@plt>
   2e0c8:	ldr	r3, [sp, #32]
   2e0cc:	mov	r1, #4080	; 0xff0
   2e0d0:	movt	r1, #9
   2e0d4:	rev	r2, r3
   2e0d8:	cmp	r2, r1
   2e0dc:	beq	2e218 <crc32@@Base+0x13ebc>
   2e0e0:	movw	r1, #54172	; 0xd39c
   2e0e4:	cmp	r2, r5
   2e0e8:	movt	r1, #2
   2e0ec:	movw	r3, #54292	; 0xd414
   2e0f0:	movt	r3, #2
   2e0f4:	movne	r3, r1
   2e0f8:	mov	r0, r6
   2e0fc:	blx	r3
   2e100:	cmp	r0, #0
   2e104:	bne	2dc44 <crc32@@Base+0x138e8>
   2e108:	add	r4, r4, #1
   2e10c:	add	r6, r6, #64	; 0x40
   2e110:	cmp	r7, r4
   2e114:	beq	2e15c <crc32@@Base+0x13e00>
   2e118:	ldrd	r2, [r6, #8]
   2e11c:	mov	r1, #0
   2e120:	and	r0, r2, #512	; 0x200
   2e124:	orrs	r3, r0, r1
   2e128:	bne	2e108 <crc32@@Base+0x13dac>
   2e12c:	add	r3, sp, #96	; 0x60
   2e130:	mov	r1, #0
   2e134:	ldr	r0, [r3, r4, lsl #6]
   2e138:	bl	124d8 <open@plt>
   2e13c:	subs	r8, r0, #0
   2e140:	bge	2e0ac <crc32@@Base+0x13d50>
   2e144:	ldr	r2, [r6]
   2e148:	movw	r1, #56164	; 0xdb64
   2e14c:	mov	r0, #1
   2e150:	movt	r1, #3
   2e154:	bl	1282c <__printf_chk@plt>
   2e158:	b	2dc44 <crc32@@Base+0x138e8>
   2e15c:	movw	r5, #51724	; 0xca0c
   2e160:	movt	r5, #30
   2e164:	mov	r2, #0
   2e168:	ldr	lr, [r5, #12]
   2e16c:	add	r3, lr, #32
   2e170:	add	r0, lr, #72	; 0x48
   2e174:	ldr	r1, [r3], #4
   2e178:	cmp	r0, r3
   2e17c:	add	r2, r2, r1
   2e180:	bne	2e174 <crc32@@Base+0x13e18>
   2e184:	ldr	ip, [r5, #8]
   2e188:	mvn	r2, r2
   2e18c:	str	r2, [lr, #72]	; 0x48
   2e190:	cmp	ip, #0
   2e194:	beq	2e1bc <crc32@@Base+0x13e60>
   2e198:	add	r0, ip, #60	; 0x3c
   2e19c:	mov	r3, ip
   2e1a0:	mov	r2, #0
   2e1a4:	ldr	r1, [r3], #4
   2e1a8:	cmp	r0, r3
   2e1ac:	add	r2, r2, r1
   2e1b0:	bne	2e1a4 <crc32@@Base+0x13e48>
   2e1b4:	mvn	r2, r2
   2e1b8:	str	r2, [ip, #60]	; 0x3c
   2e1bc:	mov	r2, #0
   2e1c0:	ldr	r0, [sp, #24]
   2e1c4:	mov	r1, r2
   2e1c8:	bl	12598 <lseek@plt>
   2e1cc:	cmp	r0, #0
   2e1d0:	bne	2dc44 <crc32@@Base+0x138e8>
   2e1d4:	ldrd	r4, [r5]
   2e1d8:	cmp	r4, #0
   2e1dc:	ldrne	r6, [sp, #24]
   2e1e0:	bne	2e1f4 <crc32@@Base+0x13e98>
   2e1e4:	b	2e210 <crc32@@Base+0x13eb4>
   2e1e8:	subs	r4, r4, r0
   2e1ec:	add	r5, r5, r0
   2e1f0:	beq	2e210 <crc32@@Base+0x13eb4>
   2e1f4:	mov	r2, r4
   2e1f8:	mov	r1, r5
   2e1fc:	mov	r0, r6
   2e200:	bl	126c4 <write@plt>
   2e204:	cmp	r0, #0
   2e208:	bge	2e1e8 <crc32@@Base+0x13e8c>
   2e20c:	b	2dc44 <crc32@@Base+0x138e8>
   2e210:	mov	r0, #0
   2e214:	b	2dc68 <crc32@@Base+0x1390c>
   2e218:	movw	r3, #55316	; 0xd814
   2e21c:	movt	r3, #2
   2e220:	b	2e0f8 <crc32@@Base+0x13d9c>
   2e224:	bl	12538 <__stack_chk_fail@plt>
   2e228:	andeq	sp, r3, r0, asr #15
   2e22c:	ldr	r2, [r0]
   2e230:	movw	r1, #65261	; 0xfeed
   2e234:	push	{lr}		; (str lr, [sp, #-4]!)
   2e238:	ubfx	lr, r2, #8, #8
   2e23c:	lsr	r3, r2, #24
   2e240:	ubfx	ip, r2, #16, #8
   2e244:	orr	r3, r3, r2, lsl #24
   2e248:	movt	r1, #53261	; 0xd00d
   2e24c:	orr	r3, r3, lr, lsl #16
   2e250:	orr	r3, r3, ip, lsl #8
   2e254:	cmp	r3, r1
   2e258:	beq	2e294 <crc32@@Base+0x13f38>
   2e25c:	movw	r2, #274	; 0x112
   2e260:	movt	r2, #12274	; 0x2ff2
   2e264:	cmp	r3, r2
   2e268:	bne	2e2e4 <crc32@@Base+0x13f88>
   2e26c:	ldr	r2, [r0, #36]	; 0x24
   2e270:	ubfx	r0, r2, #8, #8
   2e274:	ubfx	r1, r2, #16, #8
   2e278:	lsr	r3, r2, #24
   2e27c:	orr	r3, r3, r2, lsl #24
   2e280:	orr	r3, r3, r0, lsl #16
   2e284:	orrs	r3, r3, r1, lsl #8
   2e288:	movne	r0, #0
   2e28c:	mvneq	r0, #6
   2e290:	pop	{pc}		; (ldr pc, [sp], #4)
   2e294:	ldr	r2, [r0, #20]
   2e298:	ubfx	ip, r2, #8, #8
   2e29c:	ubfx	r1, r2, #16, #8
   2e2a0:	lsr	r3, r2, #24
   2e2a4:	orr	r3, r3, r2, lsl #24
   2e2a8:	orr	r3, r3, ip, lsl #16
   2e2ac:	orr	r3, r3, r1, lsl #8
   2e2b0:	cmp	r3, #1
   2e2b4:	bls	2e2ec <crc32@@Base+0x13f90>
   2e2b8:	ldr	r2, [r0, #24]
   2e2bc:	ubfx	r0, r2, #8, #8
   2e2c0:	ubfx	r1, r2, #16, #8
   2e2c4:	lsr	r3, r2, #24
   2e2c8:	orr	r3, r3, r2, lsl #24
   2e2cc:	orr	r3, r3, r0, lsl #16
   2e2d0:	orr	r3, r3, r1, lsl #8
   2e2d4:	cmp	r3, #18
   2e2d8:	movcc	r0, #0
   2e2dc:	mvncs	r0, #9
   2e2e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e2e4:	mvn	r0, #8
   2e2e8:	pop	{pc}		; (ldr pc, [sp], #4)
   2e2ec:	mvn	r0, #9
   2e2f0:	pop	{pc}		; (ldr pc, [sp], #4)
   2e2f4:	ldr	ip, [r0, #8]
   2e2f8:	push	{r4, r5, r6, lr}
   2e2fc:	ubfx	r4, ip, #8, #8
   2e300:	lsr	r3, ip, #24
   2e304:	ubfx	lr, ip, #16, #8
   2e308:	orr	r3, r3, ip, lsl #24
   2e30c:	orr	r3, r3, r4, lsl #16
   2e310:	orr	r3, r3, lr, lsl #8
   2e314:	adds	r3, r1, r3
   2e318:	bcs	2e3a0 <crc32@@Base+0x14044>
   2e31c:	adds	r4, r3, r2
   2e320:	bcs	2e3a0 <crc32@@Base+0x14044>
   2e324:	ldr	lr, [r0, #4]
   2e328:	ubfx	r6, lr, #8, #8
   2e32c:	ubfx	r5, lr, #16, #8
   2e330:	lsr	ip, lr, #24
   2e334:	orr	ip, ip, lr, lsl #24
   2e338:	orr	ip, ip, r6, lsl #16
   2e33c:	orr	ip, ip, r5, lsl #8
   2e340:	cmp	r4, ip
   2e344:	bhi	2e3a0 <crc32@@Base+0x14044>
   2e348:	ldr	lr, [r0, #20]
   2e34c:	ubfx	r5, lr, #8, #8
   2e350:	ubfx	r4, lr, #16, #8
   2e354:	lsr	ip, lr, #24
   2e358:	orr	ip, ip, lr, lsl #24
   2e35c:	orr	ip, ip, r5, lsl #16
   2e360:	orr	ip, ip, r4, lsl #8
   2e364:	cmp	ip, #16
   2e368:	bls	2e398 <crc32@@Base+0x1403c>
   2e36c:	adds	r1, r1, r2
   2e370:	bcs	2e3a0 <crc32@@Base+0x14044>
   2e374:	ldr	ip, [r0, #36]	; 0x24
   2e378:	ubfx	r4, ip, #8, #8
   2e37c:	ubfx	lr, ip, #16, #8
   2e380:	lsr	r2, ip, #24
   2e384:	orr	r2, r2, ip, lsl #24
   2e388:	orr	r2, r2, r4, lsl #16
   2e38c:	orr	r2, r2, lr, lsl #8
   2e390:	cmp	r1, r2
   2e394:	bhi	2e3a0 <crc32@@Base+0x14044>
   2e398:	add	r0, r0, r3
   2e39c:	pop	{r4, r5, r6, pc}
   2e3a0:	mov	r0, #0
   2e3a4:	pop	{r4, r5, r6, pc}
   2e3a8:	push	{r4, r5, r6, r7, r8, lr}
   2e3ac:	mov	r6, r2
   2e3b0:	mvn	r3, #7
   2e3b4:	mov	r2, #4
   2e3b8:	str	r3, [r6]
   2e3bc:	mov	r7, r0
   2e3c0:	mov	r8, r1
   2e3c4:	bl	2e2f4 <crc32@@Base+0x13f98>
   2e3c8:	cmp	r0, #0
   2e3cc:	beq	2e454 <crc32@@Base+0x140f8>
   2e3d0:	ldr	r3, [r0]
   2e3d4:	mvn	r2, #10
   2e3d8:	str	r2, [r6]
   2e3dc:	add	r4, r8, #4
   2e3e0:	ubfx	r1, r3, #8, #8
   2e3e4:	ubfx	r2, r3, #16, #8
   2e3e8:	lsr	r5, r3, #24
   2e3ec:	orr	r5, r5, r3, lsl #24
   2e3f0:	orr	r5, r5, r1, lsl #16
   2e3f4:	orr	r5, r5, r2, lsl #8
   2e3f8:	sub	r3, r5, #1
   2e3fc:	cmp	r3, #8
   2e400:	ldrls	pc, [pc, r3, lsl #2]
   2e404:	b	2e454 <crc32@@Base+0x140f8>
   2e408:	andeq	lr, r2, r8, lsr r4
   2e40c:	ldrdeq	lr, [r2], -ip
   2e410:	andeq	lr, r2, r0, ror #8
   2e414:	ldrdeq	lr, [r2], -ip
   2e418:	andeq	lr, r2, r4, asr r4
   2e41c:	andeq	lr, r2, r4, asr r4
   2e420:	andeq	lr, r2, r4, asr r4
   2e424:	andeq	lr, r2, r4, asr r4
   2e428:	ldrdeq	lr, [r2], -ip
   2e42c:	ldrb	r3, [r0]
   2e430:	cmp	r3, #0
   2e434:	beq	2e4dc <crc32@@Base+0x14180>
   2e438:	mov	r2, #1
   2e43c:	mov	r1, r4
   2e440:	mov	r0, r7
   2e444:	add	r4, r4, r2
   2e448:	bl	2e2f4 <crc32@@Base+0x13f98>
   2e44c:	cmp	r0, #0
   2e450:	bne	2e42c <crc32@@Base+0x140d0>
   2e454:	mov	r5, #9
   2e458:	mov	r0, r5
   2e45c:	pop	{r4, r5, r6, r7, r8, pc}
   2e460:	mov	r1, r4
   2e464:	mov	r2, #4
   2e468:	mov	r0, r7
   2e46c:	bl	2e2f4 <crc32@@Base+0x13f98>
   2e470:	cmp	r0, #0
   2e474:	beq	2e454 <crc32@@Base+0x140f8>
   2e478:	ldr	ip, [r0]
   2e47c:	add	r1, r8, #12
   2e480:	ldr	r0, [r7, #20]
   2e484:	ubfx	r3, ip, #8, #8
   2e488:	lsr	r2, ip, #24
   2e48c:	ubfx	lr, r0, #8, #8
   2e490:	orr	r2, r2, ip, lsl #24
   2e494:	ubfx	ip, ip, #16, #8
   2e498:	orr	r2, r2, r3, lsl #16
   2e49c:	lsr	r3, r0, #24
   2e4a0:	orr	r3, r3, r0, lsl #24
   2e4a4:	ubfx	r0, r0, #16, #8
   2e4a8:	orr	r3, r3, lr, lsl #16
   2e4ac:	orr	r2, r2, ip, lsl #8
   2e4b0:	orr	r0, r3, r0, lsl #8
   2e4b4:	add	r4, r2, r1
   2e4b8:	cmp	r0, #15
   2e4bc:	movls	r3, #1
   2e4c0:	movhi	r3, #0
   2e4c4:	cmp	r2, #7
   2e4c8:	movls	r3, #0
   2e4cc:	cmp	r3, #0
   2e4d0:	beq	2e4dc <crc32@@Base+0x14180>
   2e4d4:	tst	r1, #7
   2e4d8:	addne	r4, r4, #4
   2e4dc:	mov	r0, r7
   2e4e0:	sub	r2, r4, r8
   2e4e4:	mov	r1, r8
   2e4e8:	bl	2e2f4 <crc32@@Base+0x13f98>
   2e4ec:	cmp	r0, #0
   2e4f0:	beq	2e454 <crc32@@Base+0x140f8>
   2e4f4:	add	r4, r4, #3
   2e4f8:	mov	r0, r5
   2e4fc:	bic	r4, r4, #3
   2e500:	str	r4, [r6]
   2e504:	pop	{r4, r5, r6, r7, r8, pc}
   2e508:	push	{lr}		; (str lr, [sp, #-4]!)
   2e50c:	subs	r3, r1, #0
   2e510:	sub	sp, sp, #12
   2e514:	str	r1, [sp, #4]
   2e518:	blt	2e540 <crc32@@Base+0x141e4>
   2e51c:	tst	r3, #3
   2e520:	bne	2e540 <crc32@@Base+0x141e4>
   2e524:	add	r2, sp, #4
   2e528:	bl	2e3a8 <crc32@@Base+0x1404c>
   2e52c:	cmp	r0, #1
   2e530:	bne	2e540 <crc32@@Base+0x141e4>
   2e534:	ldr	r0, [sp, #4]
   2e538:	add	sp, sp, #12
   2e53c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e540:	mvn	r0, #3
   2e544:	b	2e538 <crc32@@Base+0x141dc>
   2e548:	push	{lr}		; (str lr, [sp, #-4]!)
   2e54c:	subs	r3, r1, #0
   2e550:	sub	sp, sp, #12
   2e554:	str	r1, [sp, #4]
   2e558:	blt	2e580 <crc32@@Base+0x14224>
   2e55c:	tst	r3, #3
   2e560:	bne	2e580 <crc32@@Base+0x14224>
   2e564:	add	r2, sp, #4
   2e568:	bl	2e3a8 <crc32@@Base+0x1404c>
   2e56c:	cmp	r0, #3
   2e570:	bne	2e580 <crc32@@Base+0x14224>
   2e574:	ldr	r0, [sp, #4]
   2e578:	add	sp, sp, #12
   2e57c:	pop	{pc}		; (ldr pc, [sp], #4)
   2e580:	mvn	r0, #3
   2e584:	b	2e578 <crc32@@Base+0x1421c>
   2e588:	push	{r4, r5, r6, r7, lr}
   2e58c:	movw	r6, #3824	; 0xef0
   2e590:	movt	r6, #5
   2e594:	sub	sp, sp, #12
   2e598:	cmp	r1, #0
   2e59c:	mov	r4, #0
   2e5a0:	ldr	r3, [r6]
   2e5a4:	mov	r5, r2
   2e5a8:	str	r4, [sp]
   2e5ac:	mov	r7, r0
   2e5b0:	str	r3, [sp, #4]
   2e5b4:	bge	2e654 <crc32@@Base+0x142f8>
   2e5b8:	mov	r2, sp
   2e5bc:	mov	r1, r4
   2e5c0:	mov	r0, r7
   2e5c4:	bl	2e3a8 <crc32@@Base+0x1404c>
   2e5c8:	cmp	r0, #2
   2e5cc:	beq	2e5e8 <crc32@@Base+0x1428c>
   2e5d0:	cmp	r0, #9
   2e5d4:	beq	2e638 <crc32@@Base+0x142dc>
   2e5d8:	cmp	r0, #1
   2e5dc:	beq	2e60c <crc32@@Base+0x142b0>
   2e5e0:	ldr	r4, [sp]
   2e5e4:	b	2e5b8 <crc32@@Base+0x1425c>
   2e5e8:	cmp	r5, #0
   2e5ec:	beq	2e5e0 <crc32@@Base+0x14284>
   2e5f0:	ldr	r3, [r5]
   2e5f4:	sub	r3, r3, #1
   2e5f8:	str	r3, [r5]
   2e5fc:	cmp	r3, #0
   2e600:	bge	2e5e0 <crc32@@Base+0x14284>
   2e604:	ldr	r4, [sp]
   2e608:	b	2e61c <crc32@@Base+0x142c0>
   2e60c:	cmp	r5, #0
   2e610:	ldrne	r3, [r5]
   2e614:	addne	r3, r3, #1
   2e618:	strne	r3, [r5]
   2e61c:	ldr	r2, [sp, #4]
   2e620:	mov	r0, r4
   2e624:	ldr	r3, [r6]
   2e628:	cmp	r2, r3
   2e62c:	bne	2e674 <crc32@@Base+0x14318>
   2e630:	add	sp, sp, #12
   2e634:	pop	{r4, r5, r6, r7, pc}
   2e638:	ldr	r4, [sp]
   2e63c:	cmp	r4, #0
   2e640:	bge	2e66c <crc32@@Base+0x14310>
   2e644:	cmp	r5, #0
   2e648:	cmneq	r4, #8
   2e64c:	mvneq	r4, #0
   2e650:	b	2e61c <crc32@@Base+0x142c0>
   2e654:	bl	2e508 <crc32@@Base+0x141ac>
   2e658:	cmp	r0, #0
   2e65c:	mov	r4, r0
   2e660:	str	r0, [sp]
   2e664:	bge	2e5b8 <crc32@@Base+0x1425c>
   2e668:	b	2e61c <crc32@@Base+0x142c0>
   2e66c:	mvn	r4, #0
   2e670:	b	2e61c <crc32@@Base+0x142c0>
   2e674:	bl	12538 <__stack_chk_fail@plt>
   2e678:	push	{r4, lr}
   2e67c:	movw	r4, #3824	; 0xef0
   2e680:	movt	r4, #5
   2e684:	sub	sp, sp, #8
   2e688:	add	r2, sp, #8
   2e68c:	mov	ip, #0
   2e690:	ldr	r3, [r4]
   2e694:	str	ip, [r2, #-8]!
   2e698:	str	r3, [sp, #4]
   2e69c:	bl	2e588 <crc32@@Base+0x1422c>
   2e6a0:	cmp	r0, #0
   2e6a4:	blt	2e6cc <crc32@@Base+0x14370>
   2e6a8:	ldr	r3, [sp]
   2e6ac:	cmp	r3, #1
   2e6b0:	mvnne	r0, #0
   2e6b4:	ldr	r2, [sp, #4]
   2e6b8:	ldr	r3, [r4]
   2e6bc:	cmp	r2, r3
   2e6c0:	bne	2e6d4 <crc32@@Base+0x14378>
   2e6c4:	add	sp, sp, #8
   2e6c8:	pop	{r4, pc}
   2e6cc:	mvn	r0, #0
   2e6d0:	b	2e6b4 <crc32@@Base+0x14358>
   2e6d4:	bl	12538 <__stack_chk_fail@plt>
   2e6d8:	push	{r4, r5, r6, lr}
   2e6dc:	movw	r6, #3824	; 0xef0
   2e6e0:	movt	r6, #5
   2e6e4:	sub	sp, sp, #8
   2e6e8:	add	r4, sp, #8
   2e6ec:	mov	r2, #1
   2e6f0:	ldr	r3, [r6]
   2e6f4:	mov	r5, r0
   2e6f8:	str	r2, [r4, #-8]!
   2e6fc:	str	r3, [sp, #4]
   2e700:	b	2e718 <crc32@@Base+0x143bc>
   2e704:	ldr	r3, [sp]
   2e708:	cmp	r3, #0
   2e70c:	ble	2e72c <crc32@@Base+0x143d0>
   2e710:	cmp	r3, #1
   2e714:	beq	2e748 <crc32@@Base+0x143ec>
   2e718:	mov	r2, r4
   2e71c:	mov	r0, r5
   2e720:	bl	2e588 <crc32@@Base+0x1422c>
   2e724:	subs	r1, r0, #0
   2e728:	bge	2e704 <crc32@@Base+0x143a8>
   2e72c:	mvn	r0, #0
   2e730:	ldr	r2, [sp, #4]
   2e734:	ldr	r3, [r6]
   2e738:	cmp	r2, r3
   2e73c:	bne	2e750 <crc32@@Base+0x143f4>
   2e740:	add	sp, sp, #8
   2e744:	pop	{r4, r5, r6, pc}
   2e748:	mov	r0, r1
   2e74c:	b	2e730 <crc32@@Base+0x143d4>
   2e750:	bl	12538 <__stack_chk_fail@plt>
   2e754:	push	{r4, r5, r6, r7, r8, lr}
   2e758:	mov	r4, r0
   2e75c:	mov	r0, r2
   2e760:	mov	r5, r1
   2e764:	mov	r7, r2
   2e768:	bl	1267c <strlen@plt>
   2e76c:	add	r6, r0, #1
   2e770:	sub	r5, r5, r6
   2e774:	adds	r5, r4, r5
   2e778:	bcc	2e78c <crc32@@Base+0x14430>
   2e77c:	b	2e7ac <crc32@@Base+0x14450>
   2e780:	add	r4, r4, #1
   2e784:	cmp	r5, r4
   2e788:	bcc	2e7ac <crc32@@Base+0x14450>
   2e78c:	mov	r2, r6
   2e790:	mov	r1, r7
   2e794:	mov	r0, r4
   2e798:	bl	12784 <memcmp@plt>
   2e79c:	cmp	r0, #0
   2e7a0:	bne	2e780 <crc32@@Base+0x14424>
   2e7a4:	mov	r0, r4
   2e7a8:	pop	{r4, r5, r6, r7, r8, pc}
   2e7ac:	mov	r0, #0
   2e7b0:	pop	{r4, r5, r6, r7, r8, pc}
   2e7b4:	push	{r4, r5, r6, r7, r8, lr}
   2e7b8:	mov	r6, r1
   2e7bc:	mov	r5, r2
   2e7c0:	mov	r4, r0
   2e7c4:	bl	2e22c <crc32@@Base+0x13ed0>
   2e7c8:	subs	r7, r0, #0
   2e7cc:	bne	2e800 <crc32@@Base+0x144a4>
   2e7d0:	ldr	r3, [r4, #4]
   2e7d4:	ubfx	r0, r3, #8, #8
   2e7d8:	ubfx	r1, r3, #16, #8
   2e7dc:	lsr	r2, r3, #24
   2e7e0:	orr	r2, r2, r3, lsl #24
   2e7e4:	orr	r2, r2, r0, lsl #16
   2e7e8:	orr	r2, r2, r1, lsl #8
   2e7ec:	cmp	r5, r2
   2e7f0:	bcc	2e808 <crc32@@Base+0x144ac>
   2e7f4:	mov	r1, r4
   2e7f8:	mov	r0, r6
   2e7fc:	bl	12424 <memmove@plt>
   2e800:	mov	r0, r7
   2e804:	pop	{r4, r5, r6, r7, r8, pc}
   2e808:	mvn	r7, #2
   2e80c:	b	2e800 <crc32@@Base+0x144a4>
   2e810:	push	{r4, r5, r6, lr}
   2e814:	movw	r4, #3824	; 0xef0
   2e818:	sub	sp, sp, #16
   2e81c:	movt	r4, #5
   2e820:	add	ip, sp, #8
   2e824:	str	ip, [sp]
   2e828:	ldr	ip, [r4]
   2e82c:	ldr	r5, [sp, #32]
   2e830:	ldr	r6, [sp, #36]	; 0x24
   2e834:	str	ip, [sp, #12]
   2e838:	bl	31a70 <crc32@@Base+0x17714>
   2e83c:	cmp	r0, #0
   2e840:	ldreq	r0, [sp, #8]
   2e844:	beq	2e870 <crc32@@Base+0x14514>
   2e848:	ldr	r2, [sp, #40]	; 0x28
   2e84c:	ldr	r3, [sp, #8]
   2e850:	add	r2, r2, r5
   2e854:	cmp	r2, r3
   2e858:	bhi	2e888 <crc32@@Base+0x1452c>
   2e85c:	mov	r1, r6
   2e860:	add	r0, r0, r5
   2e864:	ldr	r2, [sp, #40]	; 0x28
   2e868:	bl	12658 <memcpy@plt>
   2e86c:	mov	r0, #0
   2e870:	ldr	r2, [sp, #12]
   2e874:	ldr	r3, [r4]
   2e878:	cmp	r2, r3
   2e87c:	bne	2e890 <crc32@@Base+0x14534>
   2e880:	add	sp, sp, #16
   2e884:	pop	{r4, r5, r6, pc}
   2e888:	mvn	r0, #2
   2e88c:	b	2e870 <crc32@@Base+0x14514>
   2e890:	bl	12538 <__stack_chk_fail@plt>
   2e894:	push	{r4, r5, r6, r7, r8, r9, lr}
   2e898:	movw	r4, #3824	; 0xef0
   2e89c:	movt	r4, #5
   2e8a0:	sub	sp, sp, #28
   2e8a4:	mov	r9, r3
   2e8a8:	add	r3, sp, #16
   2e8ac:	ldr	ip, [r4]
   2e8b0:	mov	r7, r0
   2e8b4:	mov	r8, r1
   2e8b8:	mov	r5, r2
   2e8bc:	str	ip, [sp, #20]
   2e8c0:	bl	31b04 <crc32@@Base+0x177a8>
   2e8c4:	cmp	r0, #0
   2e8c8:	ldreq	r0, [sp, #16]
   2e8cc:	beq	2e90c <crc32@@Base+0x145b0>
   2e8d0:	ldr	r6, [sp, #16]
   2e8d4:	ldr	r3, [sp, #56]	; 0x38
   2e8d8:	cmp	r6, r3
   2e8dc:	bne	2e924 <crc32@@Base+0x145c8>
   2e8e0:	mov	r0, r5
   2e8e4:	bl	1267c <strlen@plt>
   2e8e8:	mov	r3, #0
   2e8ec:	str	r6, [sp, #8]
   2e8f0:	mov	r2, r5
   2e8f4:	str	r3, [sp]
   2e8f8:	mov	r1, r8
   2e8fc:	str	r9, [sp, #4]
   2e900:	mov	r3, r0
   2e904:	mov	r0, r7
   2e908:	bl	2e810 <crc32@@Base+0x144b4>
   2e90c:	ldr	r2, [sp, #20]
   2e910:	ldr	r3, [r4]
   2e914:	cmp	r2, r3
   2e918:	bne	2e92c <crc32@@Base+0x145d0>
   2e91c:	add	sp, sp, #28
   2e920:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e924:	mvn	r0, #2
   2e928:	b	2e90c <crc32@@Base+0x145b0>
   2e92c:	bl	12538 <__stack_chk_fail@plt>
   2e930:	push	{r4, lr}
   2e934:	movw	r4, #3824	; 0xef0
   2e938:	movt	r4, #5
   2e93c:	sub	sp, sp, #8
   2e940:	ldr	ip, [r4]
   2e944:	mov	r3, sp
   2e948:	str	ip, [sp, #4]
   2e94c:	bl	31a30 <crc32@@Base+0x176d4>
   2e950:	cmp	r0, #0
   2e954:	ldreq	r0, [sp]
   2e958:	beq	2e984 <crc32@@Base+0x14628>
   2e95c:	ldr	r3, [sp]
   2e960:	add	r3, r3, #12
   2e964:	add	r3, r0, r3
   2e968:	cmp	r0, r3
   2e96c:	bcs	2e980 <crc32@@Base+0x14624>
   2e970:	mov	r2, #67108864	; 0x4000000
   2e974:	str	r2, [r0], #4
   2e978:	cmp	r0, r3
   2e97c:	bcc	2e974 <crc32@@Base+0x14618>
   2e980:	mov	r0, #0
   2e984:	ldr	r2, [sp, #4]
   2e988:	ldr	r3, [r4]
   2e98c:	cmp	r2, r3
   2e990:	bne	2e99c <crc32@@Base+0x14640>
   2e994:	add	sp, sp, #8
   2e998:	pop	{r4, pc}
   2e99c:	bl	12538 <__stack_chk_fail@plt>
   2e9a0:	push	{r4, r5, lr}
   2e9a4:	movw	r5, #3824	; 0xef0
   2e9a8:	movt	r5, #5
   2e9ac:	sub	sp, sp, #12
   2e9b0:	cmp	r1, #0
   2e9b4:	mov	r2, #0
   2e9b8:	ldr	r3, [r5]
   2e9bc:	str	r2, [sp]
   2e9c0:	str	r3, [sp, #4]
   2e9c4:	blt	2e9ec <crc32@@Base+0x14690>
   2e9c8:	mov	r4, r0
   2e9cc:	mov	r2, sp
   2e9d0:	mov	r0, r4
   2e9d4:	bl	2e588 <crc32@@Base+0x1422c>
   2e9d8:	ldr	r3, [sp]
   2e9dc:	cmp	r0, #0
   2e9e0:	cmpge	r3, #0
   2e9e4:	mov	r1, r0
   2e9e8:	bge	2e9cc <crc32@@Base+0x14670>
   2e9ec:	ldr	r2, [sp, #4]
   2e9f0:	mov	r0, r1
   2e9f4:	ldr	r3, [r5]
   2e9f8:	cmp	r2, r3
   2e9fc:	bne	2ea08 <crc32@@Base+0x146ac>
   2ea00:	add	sp, sp, #12
   2ea04:	pop	{r4, r5, pc}
   2ea08:	bl	12538 <__stack_chk_fail@plt>
   2ea0c:	push	{r4, r5, r6, lr}
   2ea10:	mov	r6, r0
   2ea14:	mov	r5, r1
   2ea18:	bl	2e9a0 <crc32@@Base+0x14644>
   2ea1c:	subs	r4, r0, #0
   2ea20:	blt	2ea58 <crc32@@Base+0x146fc>
   2ea24:	mov	r1, r5
   2ea28:	mov	r0, r6
   2ea2c:	mov	r2, #0
   2ea30:	bl	2e2f4 <crc32@@Base+0x13f98>
   2ea34:	sub	r1, r4, r5
   2ea38:	add	r1, r0, r1
   2ea3c:	cmp	r0, r1
   2ea40:	movcc	r3, #67108864	; 0x4000000
   2ea44:	bcs	2ea54 <crc32@@Base+0x146f8>
   2ea48:	str	r3, [r0], #4
   2ea4c:	cmp	r0, r1
   2ea50:	bcc	2ea48 <crc32@@Base+0x146ec>
   2ea54:	mov	r4, #0
   2ea58:	mov	r0, r4
   2ea5c:	pop	{r4, r5, r6, pc}
   2ea60:	push	{r4, r5, r6, r7, r8, lr}
   2ea64:	ldr	r5, [r0, #36]	; 0x24
   2ea68:	ldmib	r0, {r4, ip}
   2ea6c:	ldr	r6, [r0, #32]
   2ea70:	ubfx	r3, r5, #8, #8
   2ea74:	lsr	lr, r5, #24
   2ea78:	ubfx	r7, r4, #8, #8
   2ea7c:	lsr	r2, r4, #24
   2ea80:	orr	lr, lr, r5, lsl #24
   2ea84:	ubfx	r5, r5, #16, #8
   2ea88:	ubfx	r8, ip, #8, #8
   2ea8c:	orr	r2, r2, r4, lsl #24
   2ea90:	orr	lr, lr, r3, lsl #16
   2ea94:	lsr	r3, ip, #24
   2ea98:	ubfx	r4, r4, #16, #8
   2ea9c:	orr	lr, lr, r5, lsl #8
   2eaa0:	orr	r3, r3, ip, lsl #24
   2eaa4:	ubfx	r5, r6, #8, #8
   2eaa8:	orr	r2, r2, r7, lsl #16
   2eaac:	ubfx	r7, ip, #16, #8
   2eab0:	lsr	ip, r6, #24
   2eab4:	orr	r3, r3, r8, lsl #16
   2eab8:	orr	ip, ip, r6, lsl #24
   2eabc:	ubfx	r6, r6, #16, #8
   2eac0:	orr	r3, r3, r7, lsl #8
   2eac4:	orr	r2, r2, r4, lsl #8
   2eac8:	orr	ip, ip, r5, lsl #16
   2eacc:	adds	r1, r1, lr
   2ead0:	sub	r2, r2, r3
   2ead4:	orr	ip, ip, r6, lsl #8
   2ead8:	sub	r2, r2, ip
   2eadc:	movcs	r4, #1
   2eae0:	movcc	r4, #0
   2eae4:	cmp	r2, r1
   2eae8:	movcs	r2, r4
   2eaec:	orrcc	r2, r4, #1
   2eaf0:	cmp	r2, #0
   2eaf4:	addeq	r3, r3, lr
   2eaf8:	reveq	r1, r1
   2eafc:	addeq	r3, r0, r3
   2eb00:	movne	r3, #0
   2eb04:	streq	r1, [r0, #36]	; 0x24
   2eb08:	mov	r0, r3
   2eb0c:	pop	{r4, r5, r6, r7, r8, pc}
   2eb10:	cmp	r1, #39	; 0x27
   2eb14:	bls	2eb7c <crc32@@Base+0x14820>
   2eb18:	push	{r4, r5, r6, lr}
   2eb1c:	mov	r2, r1
   2eb20:	mov	r4, r1
   2eb24:	mov	r1, #0
   2eb28:	mov	r5, r0
   2eb2c:	bl	12388 <memset@plt>
   2eb30:	ubfx	r2, r4, #8, #8
   2eb34:	lsr	r1, r4, #24
   2eb38:	orr	r1, r1, r4, lsl #24
   2eb3c:	ubfx	r4, r4, #16, #8
   2eb40:	orr	r1, r1, r2, lsl #16
   2eb44:	movw	r3, #61999	; 0xf22f
   2eb48:	orr	r4, r1, r4, lsl #8
   2eb4c:	movt	r3, #4609	; 0x1201
   2eb50:	mov	r2, #33554432	; 0x2000000
   2eb54:	stm	r5, {r3, r4}
   2eb58:	str	r4, [r5, #12]
   2eb5c:	mov	r3, #285212672	; 0x11000000
   2eb60:	str	r2, [r5, #24]
   2eb64:	mov	r0, #0
   2eb68:	str	r3, [r5, #20]
   2eb6c:	mov	r3, #805306368	; 0x30000000
   2eb70:	str	r3, [r5, #16]
   2eb74:	str	r3, [r5, #8]
   2eb78:	pop	{r4, r5, r6, pc}
   2eb7c:	mvn	r0, #2
   2eb80:	bx	lr
   2eb84:	ldr	ip, [r0]
   2eb88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2eb8c:	ubfx	r5, ip, #8, #8
   2eb90:	lsr	r3, ip, #24
   2eb94:	ubfx	r4, ip, #16, #8
   2eb98:	orr	r3, r3, ip, lsl #24
   2eb9c:	movw	lr, #274	; 0x112
   2eba0:	orr	r3, r3, r5, lsl #16
   2eba4:	movt	lr, #12274	; 0x2ff2
   2eba8:	orr	r3, r3, r4, lsl #8
   2ebac:	cmp	r3, lr
   2ebb0:	bne	2eca4 <crc32@@Base+0x14948>
   2ebb4:	ldr	ip, [r0, #8]
   2ebb8:	ldr	r3, [r0, #32]
   2ebbc:	ubfx	r6, ip, #8, #8
   2ebc0:	ubfx	lr, ip, #16, #8
   2ebc4:	ubfx	r4, r3, #8, #8
   2ebc8:	lsr	r8, ip, #24
   2ebcc:	lsr	r5, r3, #24
   2ebd0:	orr	r8, r8, ip, lsl #24
   2ebd4:	orr	r5, r5, r3, lsl #24
   2ebd8:	ubfx	r3, r3, #16, #8
   2ebdc:	orr	r8, r8, r6, lsl #16
   2ebe0:	orr	r5, r5, r4, lsl #16
   2ebe4:	orr	r8, r8, lr, lsl #8
   2ebe8:	orr	r5, r5, r3, lsl #8
   2ebec:	add	r3, r5, r8
   2ebf0:	cmp	r3, r2
   2ebf4:	bhi	2ecac <crc32@@Base+0x14950>
   2ebf8:	ldr	r3, [r0, #4]
   2ebfc:	mov	r9, r1
   2ec00:	cmp	r0, r1
   2ec04:	sub	sl, r2, r5
   2ec08:	ubfx	r1, r3, #8, #8
   2ec0c:	mov	r6, r2
   2ec10:	lsr	r4, r3, #24
   2ec14:	ubfx	r2, r3, #16, #8
   2ec18:	orr	r4, r4, r3, lsl #24
   2ec1c:	mov	r7, r0
   2ec20:	orr	r4, r4, r1, lsl #16
   2ec24:	add	sl, r9, sl
   2ec28:	orr	r4, r4, r2, lsl #8
   2ec2c:	sub	r4, r4, r5
   2ec30:	add	r4, r0, r4
   2ec34:	bcs	2ec80 <crc32@@Base+0x14924>
   2ec38:	mov	r2, r5
   2ec3c:	mov	r1, r4
   2ec40:	mov	r0, sl
   2ec44:	bl	12424 <memmove@plt>
   2ec48:	mov	r2, r8
   2ec4c:	mov	r1, r7
   2ec50:	mov	r0, r9
   2ec54:	bl	12424 <memmove@plt>
   2ec58:	lsr	r3, r6, #24
   2ec5c:	ubfx	r1, r6, #8, #8
   2ec60:	ubfx	r2, r6, #16, #8
   2ec64:	orr	r3, r3, r6, lsl #24
   2ec68:	orr	r6, r3, r1, lsl #16
   2ec6c:	mov	r0, #0
   2ec70:	orr	r6, r6, r2, lsl #8
   2ec74:	str	r6, [r9, #12]
   2ec78:	str	r6, [r9, #4]
   2ec7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ec80:	mov	r2, r8
   2ec84:	mov	r1, r0
   2ec88:	mov	r0, r9
   2ec8c:	bl	12424 <memmove@plt>
   2ec90:	mov	r2, r5
   2ec94:	mov	r1, r4
   2ec98:	mov	r0, sl
   2ec9c:	bl	12424 <memmove@plt>
   2eca0:	b	2ec58 <crc32@@Base+0x148fc>
   2eca4:	mvn	r0, #8
   2eca8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ecac:	mvn	r0, #2
   2ecb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ecb4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ecb8:	mov	lr, r0
   2ecbc:	ldr	r0, [r0]
   2ecc0:	movw	ip, #274	; 0x112
   2ecc4:	movt	ip, #12274	; 0x2ff2
   2ecc8:	ubfx	r4, r0, #8, #8
   2eccc:	ubfx	r5, r0, #16, #8
   2ecd0:	lsr	r1, r0, #24
   2ecd4:	orr	r1, r1, r0, lsl #24
   2ecd8:	orr	r1, r1, r4, lsl #16
   2ecdc:	ldr	r4, [sp, #28]
   2ece0:	orr	r1, r1, r5, lsl #8
   2ece4:	ldr	r5, [sp, #32]
   2ece8:	cmp	r1, ip
   2ecec:	bne	2ed80 <crc32@@Base+0x14a24>
   2ecf0:	ldr	ip, [lr, #36]	; 0x24
   2ecf4:	ubfx	r6, ip, #8, #8
   2ecf8:	ubfx	r0, ip, #16, #8
   2ecfc:	lsr	r1, ip, #24
   2ed00:	orr	r1, r1, ip, lsl #24
   2ed04:	orr	r1, r1, r6, lsl #16
   2ed08:	orrs	r0, r1, r0, lsl #8
   2ed0c:	bne	2ed88 <crc32@@Base+0x14a2c>
   2ed10:	ldmib	lr, {r6, ip}
   2ed14:	ubfx	r9, ip, #8, #8
   2ed18:	ubfx	r7, r6, #8, #8
   2ed1c:	lsr	r1, ip, #24
   2ed20:	ubfx	r8, ip, #16, #8
   2ed24:	orr	r1, r1, ip, lsl #24
   2ed28:	lsr	ip, r6, #24
   2ed2c:	orr	ip, ip, r6, lsl #24
   2ed30:	orr	r1, r1, r9, lsl #16
   2ed34:	ubfx	r6, r6, #16, #8
   2ed38:	orr	ip, ip, r7, lsl #16
   2ed3c:	orr	r1, r1, r8, lsl #8
   2ed40:	add	r7, r1, #16
   2ed44:	orr	ip, ip, r6, lsl #8
   2ed48:	cmp	r7, ip
   2ed4c:	bhi	2ed90 <crc32@@Base+0x14a34>
   2ed50:	add	ip, lr, r1
   2ed54:	rev	r3, r3
   2ed58:	rev	r2, r2
   2ed5c:	str	r3, [lr, r1]
   2ed60:	rev	r4, r4
   2ed64:	str	r2, [ip, #4]
   2ed68:	str	r4, [ip, #12]
   2ed6c:	rev	r5, r5
   2ed70:	rev	r7, r7
   2ed74:	str	r5, [ip, #8]
   2ed78:	str	r7, [lr, #8]
   2ed7c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ed80:	mvn	r0, #8
   2ed84:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ed88:	mvn	r0, #6
   2ed8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ed90:	mvn	r0, #2
   2ed94:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ed98:	push	{lr}		; (str lr, [sp, #-4]!)
   2ed9c:	sub	sp, sp, #12
   2eda0:	mov	r2, #0
   2eda4:	mov	r3, #0
   2eda8:	strd	r2, [sp]
   2edac:	bl	2ecb4 <crc32@@Base+0x14958>
   2edb0:	add	sp, sp, #12
   2edb4:	pop	{pc}		; (ldr pc, [sp], #4)
   2edb8:	push	{r4, r5, r6, lr}
   2edbc:	mov	r6, r0
   2edc0:	mov	r0, r1
   2edc4:	mov	r4, r1
   2edc8:	bl	1267c <strlen@plt>
   2edcc:	ldr	r2, [r6]
   2edd0:	movw	r1, #274	; 0x112
   2edd4:	movt	r1, #12274	; 0x2ff2
   2edd8:	ubfx	lr, r2, #8, #8
   2eddc:	ubfx	ip, r2, #16, #8
   2ede0:	lsr	r3, r2, #24
   2ede4:	orr	r3, r3, r2, lsl #24
   2ede8:	orr	r3, r3, lr, lsl #16
   2edec:	orr	r3, r3, ip, lsl #8
   2edf0:	cmp	r3, r1
   2edf4:	bne	2ee34 <crc32@@Base+0x14ad8>
   2edf8:	add	r1, r0, #4
   2edfc:	add	r5, r0, #1
   2ee00:	bic	r1, r1, #3
   2ee04:	mov	r0, r6
   2ee08:	add	r1, r1, #4
   2ee0c:	bl	2ea60 <crc32@@Base+0x14704>
   2ee10:	cmp	r0, #0
   2ee14:	beq	2ee3c <crc32@@Base+0x14ae0>
   2ee18:	mov	r3, #16777216	; 0x1000000
   2ee1c:	mov	r2, r5
   2ee20:	mov	r1, r4
   2ee24:	str	r3, [r0], #4
   2ee28:	bl	12658 <memcpy@plt>
   2ee2c:	mov	r0, #0
   2ee30:	pop	{r4, r5, r6, pc}
   2ee34:	mvn	r0, #8
   2ee38:	pop	{r4, r5, r6, pc}
   2ee3c:	mvn	r0, #2
   2ee40:	pop	{r4, r5, r6, pc}
   2ee44:	ldr	r2, [r0]
   2ee48:	movw	r1, #274	; 0x112
   2ee4c:	push	{r4, lr}
   2ee50:	ubfx	lr, r2, #8, #8
   2ee54:	lsr	r3, r2, #24
   2ee58:	ubfx	ip, r2, #16, #8
   2ee5c:	orr	r3, r3, r2, lsl #24
   2ee60:	movt	r1, #12274	; 0x2ff2
   2ee64:	orr	r3, r3, lr, lsl #16
   2ee68:	orr	r3, r3, ip, lsl #8
   2ee6c:	cmp	r3, r1
   2ee70:	bne	2ee94 <crc32@@Base+0x14b38>
   2ee74:	mov	r1, #4
   2ee78:	bl	2ea60 <crc32@@Base+0x14704>
   2ee7c:	subs	r3, r0, #0
   2ee80:	beq	2ee9c <crc32@@Base+0x14b40>
   2ee84:	mov	r2, #33554432	; 0x2000000
   2ee88:	mov	r0, #0
   2ee8c:	str	r2, [r3]
   2ee90:	pop	{r4, pc}
   2ee94:	mvn	r0, #8
   2ee98:	pop	{r4, pc}
   2ee9c:	mvn	r0, #2
   2eea0:	pop	{r4, pc}
   2eea4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eea8:	movw	r4, #274	; 0x112
   2eeac:	ldr	lr, [r0]
   2eeb0:	movt	r4, #12274	; 0x2ff2
   2eeb4:	ubfx	r6, lr, #8, #8
   2eeb8:	ubfx	r5, lr, #16, #8
   2eebc:	lsr	ip, lr, #24
   2eec0:	orr	ip, ip, lr, lsl #24
   2eec4:	orr	ip, ip, r6, lsl #16
   2eec8:	orr	ip, ip, r5, lsl #8
   2eecc:	cmp	ip, r4
   2eed0:	bne	2f068 <crc32@@Base+0x14d0c>
   2eed4:	mov	sl, r0
   2eed8:	ldr	ip, [r0, #4]
   2eedc:	mov	r9, r3
   2eee0:	ldr	r3, [sl, #32]
   2eee4:	ubfx	lr, ip, #8, #8
   2eee8:	mov	r7, r2
   2eeec:	lsr	r5, ip, #24
   2eef0:	ubfx	r2, r3, #8, #8
   2eef4:	lsr	r6, r3, #24
   2eef8:	orr	r5, r5, ip, lsl #24
   2eefc:	mov	r8, r1
   2ef00:	mov	r0, r1
   2ef04:	orr	r6, r6, r3, lsl #24
   2ef08:	ubfx	r1, ip, #16, #8
   2ef0c:	ubfx	r3, r3, #16, #8
   2ef10:	orr	r5, r5, lr, lsl #16
   2ef14:	orr	r6, r6, r2, lsl #16
   2ef18:	orr	r5, r5, r1, lsl #8
   2ef1c:	orr	r6, r6, r3, lsl #8
   2ef20:	bl	1267c <strlen@plt>
   2ef24:	add	r5, sl, r5
   2ef28:	mov	r2, r8
   2ef2c:	mov	r1, r6
   2ef30:	mov	fp, r0
   2ef34:	sub	r0, r5, r6
   2ef38:	bl	2e754 <crc32@@Base+0x143f8>
   2ef3c:	cmp	r0, #0
   2ef40:	subne	r4, r0, r5
   2ef44:	beq	2efbc <crc32@@Base+0x14c60>
   2ef48:	cmp	r4, #0
   2ef4c:	beq	2f02c <crc32@@Base+0x14cd0>
   2ef50:	add	r1, r7, #3
   2ef54:	mov	r0, sl
   2ef58:	bic	r1, r1, #3
   2ef5c:	add	r1, r1, #12
   2ef60:	bl	2ea60 <crc32@@Base+0x14704>
   2ef64:	cmp	r0, #0
   2ef68:	beq	2f02c <crc32@@Base+0x14cd0>
   2ef6c:	ubfx	r1, r4, #8, #8
   2ef70:	lsr	r3, r4, #24
   2ef74:	orr	r3, r3, r4, lsl #24
   2ef78:	lsr	r2, r7, #24
   2ef7c:	orr	r3, r3, r1, lsl #16
   2ef80:	ubfx	r1, r7, #8, #8
   2ef84:	orr	r2, r2, r7, lsl #24
   2ef88:	ubfx	r4, r4, #16, #8
   2ef8c:	ubfx	r7, r7, #16, #8
   2ef90:	orr	r2, r2, r1, lsl #16
   2ef94:	orr	r4, r3, r4, lsl #8
   2ef98:	add	r3, r0, #12
   2ef9c:	str	r4, [r0, #8]
   2efa0:	orr	r7, r2, r7, lsl #8
   2efa4:	mov	r2, #50331648	; 0x3000000
   2efa8:	str	r7, [r0, #4]
   2efac:	str	r2, [r0]
   2efb0:	mov	r0, #0
   2efb4:	str	r3, [r9]
   2efb8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2efbc:	ldr	r2, [sl, #8]
   2efc0:	add	fp, fp, #1
   2efc4:	ldr	r0, [sl, #36]	; 0x24
   2efc8:	rsb	r4, r6, #0
   2efcc:	ubfx	ip, r2, #8, #8
   2efd0:	ldr	r1, [sl, #4]
   2efd4:	lsr	r3, r2, #24
   2efd8:	ubfx	lr, r0, #8, #8
   2efdc:	orr	r3, r3, r2, lsl #24
   2efe0:	ubfx	r2, r2, #16, #8
   2efe4:	orr	r3, r3, ip, lsl #16
   2efe8:	lsr	ip, r0, #24
   2efec:	orr	ip, ip, r0, lsl #24
   2eff0:	ubfx	r0, r0, #16, #8
   2eff4:	orr	ip, ip, lr, lsl #16
   2eff8:	orr	r3, r3, r2, lsl #8
   2effc:	orr	r0, ip, r0, lsl #8
   2f000:	lsr	r2, r1, #24
   2f004:	ubfx	ip, r1, #8, #8
   2f008:	orr	r2, r2, r1, lsl #24
   2f00c:	ubfx	r1, r1, #16, #8
   2f010:	sub	r4, r4, fp
   2f014:	orr	r2, r2, ip, lsl #16
   2f018:	add	r3, r3, r0
   2f01c:	orr	r2, r2, r1, lsl #8
   2f020:	add	r2, r2, r4
   2f024:	cmp	r3, r2
   2f028:	bls	2f034 <crc32@@Base+0x14cd8>
   2f02c:	mvn	r0, #2
   2f030:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f034:	add	r6, r6, fp
   2f038:	mov	r1, r8
   2f03c:	mov	r2, fp
   2f040:	add	r0, r5, r4
   2f044:	bl	12658 <memcpy@plt>
   2f048:	ubfx	r1, r6, #8, #8
   2f04c:	lsr	r3, r6, #24
   2f050:	ubfx	r2, r6, #16, #8
   2f054:	orr	r6, r3, r6, lsl #24
   2f058:	orr	r6, r6, r1, lsl #16
   2f05c:	orr	r6, r6, r2, lsl #8
   2f060:	str	r6, [sl, #32]
   2f064:	b	2ef48 <crc32@@Base+0x14bec>
   2f068:	mvn	r0, #8
   2f06c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f070:	push	{r4, r5, r6, r7, lr}
   2f074:	movw	r4, #3824	; 0xef0
   2f078:	movt	r4, #5
   2f07c:	sub	sp, sp, #12
   2f080:	mov	r5, r3
   2f084:	mov	r7, r2
   2f088:	ldr	ip, [r4]
   2f08c:	mov	r2, r3
   2f090:	mov	r3, sp
   2f094:	str	ip, [sp, #4]
   2f098:	bl	2eea4 <crc32@@Base+0x14b48>
   2f09c:	subs	r6, r0, #0
   2f0a0:	bne	2f0b4 <crc32@@Base+0x14d58>
   2f0a4:	mov	r2, r5
   2f0a8:	mov	r1, r7
   2f0ac:	ldr	r0, [sp]
   2f0b0:	bl	12658 <memcpy@plt>
   2f0b4:	ldr	r2, [sp, #4]
   2f0b8:	mov	r0, r6
   2f0bc:	ldr	r3, [r4]
   2f0c0:	cmp	r2, r3
   2f0c4:	bne	2f0d0 <crc32@@Base+0x14d74>
   2f0c8:	add	sp, sp, #12
   2f0cc:	pop	{r4, r5, r6, r7, pc}
   2f0d0:	bl	12538 <__stack_chk_fail@plt>
   2f0d4:	ldr	r2, [r0]
   2f0d8:	push	{r4, r5, r6, r7, r8, lr}
   2f0dc:	ubfx	ip, r2, #8, #8
   2f0e0:	lsr	r3, r2, #24
   2f0e4:	ubfx	r1, r2, #16, #8
   2f0e8:	orr	r3, r3, r2, lsl #24
   2f0ec:	movw	r6, #3824	; 0xef0
   2f0f0:	movt	r6, #5
   2f0f4:	orr	r3, r3, ip, lsl #16
   2f0f8:	orr	r3, r3, r1, lsl #8
   2f0fc:	movw	r2, #274	; 0x112
   2f100:	ldr	r1, [r6]
   2f104:	movt	r2, #12274	; 0x2ff2
   2f108:	sub	sp, sp, #8
   2f10c:	cmp	r3, r2
   2f110:	str	r1, [sp, #4]
   2f114:	bne	2f2b0 <crc32@@Base+0x14f54>
   2f118:	mov	r1, #4
   2f11c:	mov	r4, r0
   2f120:	bl	2ea60 <crc32@@Base+0x14704>
   2f124:	cmp	r0, #0
   2f128:	beq	2f2b8 <crc32@@Base+0x14f5c>
   2f12c:	mov	r3, #150994944	; 0x9000000
   2f130:	str	r3, [r0]
   2f134:	ldr	r3, [r4, #4]
   2f138:	mov	r7, #0
   2f13c:	ldr	lr, [r4, #32]
   2f140:	ubfx	r2, r3, #8, #8
   2f144:	ldr	r0, [r4, #8]
   2f148:	lsr	r1, r3, #24
   2f14c:	ldr	ip, [r4, #36]	; 0x24
   2f150:	orr	r1, r1, r3, lsl #24
   2f154:	ubfx	r5, lr, #8, #8
   2f158:	orr	r1, r1, r2, lsl #16
   2f15c:	lsr	r2, lr, #24
   2f160:	ubfx	r3, r3, #16, #8
   2f164:	orr	r2, r2, lr, lsl #24
   2f168:	ubfx	lr, lr, #16, #8
   2f16c:	orr	r2, r2, r5, lsl #16
   2f170:	ubfx	r8, r0, #8, #8
   2f174:	lsr	r5, r0, #24
   2f178:	orr	r2, r2, lr, lsl #8
   2f17c:	orr	r1, r1, r3, lsl #8
   2f180:	ubfx	lr, ip, #8, #8
   2f184:	orr	r5, r5, r0, lsl #24
   2f188:	ubfx	r3, r0, #16, #8
   2f18c:	lsr	r0, ip, #24
   2f190:	orr	r0, r0, ip, lsl #24
   2f194:	orr	r5, r5, r8, lsl #16
   2f198:	ubfx	ip, ip, #16, #8
   2f19c:	orr	r3, r5, r3, lsl #8
   2f1a0:	orr	r5, r0, lr, lsl #16
   2f1a4:	sub	r1, r1, r2
   2f1a8:	orr	r5, r5, ip, lsl #8
   2f1ac:	add	r1, r4, r1
   2f1b0:	add	r5, r5, r3
   2f1b4:	add	r0, r4, r5
   2f1b8:	bl	12424 <memmove@plt>
   2f1bc:	rev	r3, r5
   2f1c0:	str	r3, [r4, #12]
   2f1c4:	b	2f23c <crc32@@Base+0x14ee0>
   2f1c8:	cmp	r0, #3
   2f1cc:	bne	2f238 <crc32@@Base+0x14edc>
   2f1d0:	ldr	r3, [r4, #8]
   2f1d4:	ldr	r2, [r4, #32]
   2f1d8:	ubfx	ip, r3, #8, #8
   2f1dc:	ubfx	r0, r3, #16, #8
   2f1e0:	lsr	r1, r3, #24
   2f1e4:	orr	r1, r1, r3, lsl #24
   2f1e8:	lsr	r3, r2, #24
   2f1ec:	orr	r1, r1, ip, lsl #16
   2f1f0:	ubfx	ip, r2, #8, #8
   2f1f4:	orr	r1, r1, r0, lsl #8
   2f1f8:	orr	r3, r3, r2, lsl #24
   2f1fc:	add	r1, r1, r7
   2f200:	ubfx	r2, r2, #16, #8
   2f204:	add	r1, r4, r1
   2f208:	orr	r3, r3, ip, lsl #16
   2f20c:	orr	r3, r3, r2, lsl #8
   2f210:	ldr	r0, [r1, #8]
   2f214:	ubfx	lr, r0, #8, #8
   2f218:	ubfx	ip, r0, #16, #8
   2f21c:	lsr	r2, r0, #24
   2f220:	orr	r2, r2, r0, lsl #24
   2f224:	orr	r2, r2, lr, lsl #16
   2f228:	orr	r2, r2, ip, lsl #8
   2f22c:	add	r3, r3, r2
   2f230:	rev	r3, r3
   2f234:	str	r3, [r1, #8]
   2f238:	ldr	r7, [sp]
   2f23c:	mov	r2, sp
   2f240:	mov	r1, r7
   2f244:	mov	r0, r4
   2f248:	bl	2e3a8 <crc32@@Base+0x1404c>
   2f24c:	cmp	r0, #9
   2f250:	bne	2f1c8 <crc32@@Base+0x14e6c>
   2f254:	ldr	r0, [sp]
   2f258:	cmp	r0, #0
   2f25c:	blt	2f298 <crc32@@Base+0x14f3c>
   2f260:	ldr	r2, [r4, #32]
   2f264:	mov	r3, #3536	; 0xdd0
   2f268:	movt	r3, #60926	; 0xedfe
   2f26c:	str	r3, [r4]
   2f270:	ubfx	ip, r2, #8, #8
   2f274:	ubfx	r1, r2, #16, #8
   2f278:	lsr	r3, r2, #24
   2f27c:	mov	r0, #0
   2f280:	orr	r3, r3, r2, lsl #24
   2f284:	orr	r3, r3, ip, lsl #16
   2f288:	orr	r3, r3, r1, lsl #8
   2f28c:	add	r5, r3, r5
   2f290:	rev	r5, r5
   2f294:	str	r5, [r4, #4]
   2f298:	ldr	r2, [sp, #4]
   2f29c:	ldr	r3, [r6]
   2f2a0:	cmp	r2, r3
   2f2a4:	bne	2f2c0 <crc32@@Base+0x14f64>
   2f2a8:	add	sp, sp, #8
   2f2ac:	pop	{r4, r5, r6, r7, r8, pc}
   2f2b0:	mvn	r0, #8
   2f2b4:	b	2f298 <crc32@@Base+0x14f3c>
   2f2b8:	mvn	r0, #2
   2f2bc:	b	2f298 <crc32@@Base+0x14f3c>
   2f2c0:	bl	12538 <__stack_chk_fail@plt>
   2f2c4:	ldr	ip, [r0, #16]
   2f2c8:	push	{r4, lr}
   2f2cc:	ubfx	r4, ip, #8, #8
   2f2d0:	lsr	r3, ip, #24
   2f2d4:	ubfx	lr, ip, #16, #8
   2f2d8:	orr	r3, r3, ip, lsl #24
   2f2dc:	orr	r3, r3, r4, lsl #16
   2f2e0:	orr	r3, r3, lr, lsl #8
   2f2e4:	cmp	r3, #39	; 0x27
   2f2e8:	bls	2f388 <crc32@@Base+0x1502c>
   2f2ec:	ldr	lr, [r0, #8]
   2f2f0:	add	r1, r1, r3
   2f2f4:	ubfx	r4, lr, #8, #8
   2f2f8:	ubfx	r3, lr, #16, #8
   2f2fc:	lsr	ip, lr, #24
   2f300:	orr	ip, ip, lr, lsl #24
   2f304:	orr	ip, ip, r4, lsl #16
   2f308:	orr	ip, ip, r3, lsl #8
   2f30c:	cmp	r1, ip
   2f310:	bhi	2f388 <crc32@@Base+0x1502c>
   2f314:	ldr	r1, [r0, #12]
   2f318:	add	r2, r2, ip
   2f31c:	ubfx	lr, r1, #8, #8
   2f320:	ubfx	ip, r1, #16, #8
   2f324:	lsr	r3, r1, #24
   2f328:	orr	r3, r3, r1, lsl #24
   2f32c:	orr	r3, r3, lr, lsl #16
   2f330:	orr	r3, r3, ip, lsl #8
   2f334:	cmp	r2, r3
   2f338:	bhi	2f388 <crc32@@Base+0x1502c>
   2f33c:	ldr	r2, [r0, #32]
   2f340:	ldr	r1, [r0, #4]
   2f344:	ubfx	r4, r2, #8, #8
   2f348:	ubfx	lr, r2, #16, #8
   2f34c:	lsr	r0, r2, #24
   2f350:	ubfx	ip, r1, #8, #8
   2f354:	orr	r0, r0, r2, lsl #24
   2f358:	lsr	r2, r1, #24
   2f35c:	orr	r0, r0, r4, lsl #16
   2f360:	orr	r2, r2, r1, lsl #24
   2f364:	ubfx	r1, r1, #16, #8
   2f368:	orr	r0, r0, lr, lsl #8
   2f36c:	orr	r2, r2, ip, lsl #16
   2f370:	add	r0, r0, r3
   2f374:	orr	r3, r2, r1, lsl #8
   2f378:	cmp	r0, r3
   2f37c:	movls	r0, #0
   2f380:	movhi	r0, #1
   2f384:	pop	{r4, pc}
   2f388:	mov	r0, #1
   2f38c:	pop	{r4, pc}
   2f390:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2f394:	cmp	r2, #0
   2f398:	ldr	r5, [r0, #12]
   2f39c:	ldr	r4, [r0, #32]
   2f3a0:	ubfx	r8, r5, #8, #8
   2f3a4:	ubfx	r6, r5, #16, #8
   2f3a8:	ubfx	r7, r4, #8, #8
   2f3ac:	lsr	ip, r5, #24
   2f3b0:	lsr	lr, r4, #24
   2f3b4:	orr	ip, ip, r5, lsl #24
   2f3b8:	orr	lr, lr, r4, lsl #24
   2f3bc:	ubfx	r4, r4, #16, #8
   2f3c0:	orr	ip, ip, r8, lsl #16
   2f3c4:	orr	lr, lr, r7, lsl #16
   2f3c8:	orr	ip, ip, r6, lsl #8
   2f3cc:	orr	lr, lr, r4, lsl #8
   2f3d0:	add	ip, ip, lr
   2f3d4:	add	ip, r0, ip
   2f3d8:	blt	2f454 <crc32@@Base+0x150f8>
   2f3dc:	add	r5, r1, r2
   2f3e0:	cmp	r5, ip
   2f3e4:	movls	r4, #0
   2f3e8:	movhi	r4, #1
   2f3ec:	cmp	r1, r0
   2f3f0:	orrcc	r4, r4, #1
   2f3f4:	cmp	r4, #0
   2f3f8:	bne	2f454 <crc32@@Base+0x150f8>
   2f3fc:	sub	r6, r3, r2
   2f400:	add	r6, ip, r6
   2f404:	cmp	r6, r0
   2f408:	bcc	2f454 <crc32@@Base+0x150f8>
   2f40c:	ldr	r7, [r0, #4]
   2f410:	ubfx	r9, r7, #8, #8
   2f414:	ubfx	r8, r7, #16, #8
   2f418:	lsr	lr, r7, #24
   2f41c:	orr	lr, lr, r7, lsl #24
   2f420:	orr	lr, lr, r9, lsl #16
   2f424:	orr	lr, lr, r8, lsl #8
   2f428:	add	lr, r0, lr
   2f42c:	cmp	r6, lr
   2f430:	bhi	2f45c <crc32@@Base+0x15100>
   2f434:	sub	ip, ip, r1
   2f438:	mov	r0, r1
   2f43c:	sub	r2, ip, r2
   2f440:	mov	r1, r5
   2f444:	add	r0, r0, r3
   2f448:	bl	12424 <memmove@plt>
   2f44c:	mov	r0, r4
   2f450:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f454:	mvn	r0, #3
   2f458:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f45c:	mvn	r0, #2
   2f460:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2f464:	push	{r4, r5, r6, lr}
   2f468:	mov	r6, r2
   2f46c:	mov	r5, r3
   2f470:	lsl	r2, r2, #4
   2f474:	lsl	r3, r3, #4
   2f478:	mov	r4, r0
   2f47c:	bl	2f390 <crc32@@Base+0x15034>
   2f480:	cmp	r0, #0
   2f484:	popne	{r4, r5, r6, pc}
   2f488:	ldr	lr, [r4, #8]
   2f48c:	sub	r3, r5, r6
   2f490:	ldr	ip, [r4, #12]
   2f494:	lsl	r1, r3, #4
   2f498:	ubfx	r6, lr, #8, #8
   2f49c:	ubfx	r5, ip, #8, #8
   2f4a0:	lsr	r2, lr, #24
   2f4a4:	lsr	r3, ip, #24
   2f4a8:	orr	r2, r2, lr, lsl #24
   2f4ac:	orr	r3, r3, ip, lsl #24
   2f4b0:	ubfx	lr, lr, #16, #8
   2f4b4:	ubfx	ip, ip, #16, #8
   2f4b8:	orr	r2, r2, r6, lsl #16
   2f4bc:	orr	r3, r3, r5, lsl #16
   2f4c0:	orr	r2, r2, lr, lsl #8
   2f4c4:	orr	r3, r3, ip, lsl #8
   2f4c8:	add	r2, r2, r1
   2f4cc:	add	r3, r3, r1
   2f4d0:	rev	r2, r2
   2f4d4:	rev	r3, r3
   2f4d8:	strd	r2, [r4, #8]
   2f4dc:	pop	{r4, r5, r6, pc}
   2f4e0:	push	{r4, r5, r6, lr}
   2f4e4:	mov	r4, r0
   2f4e8:	mov	r5, r2
   2f4ec:	mov	r6, r3
   2f4f0:	bl	2f390 <crc32@@Base+0x15034>
   2f4f4:	cmp	r0, #0
   2f4f8:	popne	{r4, r5, r6, pc}
   2f4fc:	ldr	lr, [r4, #36]	; 0x24
   2f500:	sub	ip, r6, r5
   2f504:	ldr	r1, [r4, #12]
   2f508:	ubfx	r3, lr, #8, #8
   2f50c:	lsr	r2, lr, #24
   2f510:	ubfx	r5, r1, #8, #8
   2f514:	orr	r2, r2, lr, lsl #24
   2f518:	ubfx	lr, lr, #16, #8
   2f51c:	orr	r2, r2, r3, lsl #16
   2f520:	lsr	r3, r1, #24
   2f524:	orr	r3, r3, r1, lsl #24
   2f528:	ubfx	r1, r1, #16, #8
   2f52c:	orr	r3, r3, r5, lsl #16
   2f530:	orr	r2, r2, lr, lsl #8
   2f534:	orr	r3, r3, r1, lsl #8
   2f538:	add	r2, r2, ip
   2f53c:	add	r3, r3, ip
   2f540:	rev	r2, r2
   2f544:	rev	r3, r3
   2f548:	str	r2, [r4, #36]	; 0x24
   2f54c:	str	r3, [r4, #12]
   2f550:	pop	{r4, r5, r6, pc}
   2f554:	ldr	ip, [r0, #16]
   2f558:	push	{r4, r5, r6, r7, r8, lr}
   2f55c:	mov	r5, r0
   2f560:	mov	r4, r1
   2f564:	ubfx	lr, ip, #8, #8
   2f568:	add	r0, r1, #40	; 0x28
   2f56c:	lsr	r1, ip, #24
   2f570:	mov	r6, r3
   2f574:	orr	r1, r1, ip, lsl #24
   2f578:	ubfx	r3, ip, #16, #8
   2f57c:	orr	r1, r1, lr, lsl #16
   2f580:	add	r7, r2, #40	; 0x28
   2f584:	orr	r1, r1, r3, lsl #8
   2f588:	add	r8, r7, r6
   2f58c:	add	r1, r5, r1
   2f590:	bl	12424 <memmove@plt>
   2f594:	ldr	r3, [r5, #8]
   2f598:	mov	r2, #671088640	; 0x28000000
   2f59c:	str	r2, [r4, #16]
   2f5a0:	ubfx	r2, r3, #8, #8
   2f5a4:	ubfx	r0, r3, #16, #8
   2f5a8:	lsr	r1, r3, #24
   2f5ac:	orr	r1, r1, r3, lsl #24
   2f5b0:	orr	r1, r1, r2, lsl #16
   2f5b4:	mov	r2, r6
   2f5b8:	orr	r1, r1, r0, lsl #8
   2f5bc:	add	r0, r4, r7
   2f5c0:	add	r1, r5, r1
   2f5c4:	bl	12424 <memmove@plt>
   2f5c8:	ldr	r0, [r5, #12]
   2f5cc:	ubfx	r1, r7, #8, #8
   2f5d0:	lsr	r3, r7, #24
   2f5d4:	orr	r3, r3, r7, lsl #24
   2f5d8:	ubfx	lr, r7, #16, #8
   2f5dc:	ubfx	ip, r0, #8, #8
   2f5e0:	orr	r7, r3, r1, lsl #16
   2f5e4:	lsr	r1, r0, #24
   2f5e8:	ldr	r2, [r5, #32]
   2f5ec:	orr	r1, r1, r0, lsl #24
   2f5f0:	lsr	r3, r6, #24
   2f5f4:	ubfx	r0, r0, #16, #8
   2f5f8:	orr	r1, r1, ip, lsl #16
   2f5fc:	ubfx	ip, r6, #8, #8
   2f600:	orr	r3, r3, r6, lsl #24
   2f604:	orr	r1, r1, r0, lsl #8
   2f608:	lsr	r0, r2, #24
   2f60c:	orr	r3, r3, ip, lsl #16
   2f610:	ubfx	ip, r2, #8, #8
   2f614:	orr	r0, r0, r2, lsl #24
   2f618:	ubfx	r6, r6, #16, #8
   2f61c:	ubfx	r2, r2, #16, #8
   2f620:	orr	r0, r0, ip, lsl #16
   2f624:	orr	r7, r7, lr, lsl #8
   2f628:	orr	r6, r3, r6, lsl #8
   2f62c:	orr	r2, r0, r2, lsl #8
   2f630:	add	r1, r5, r1
   2f634:	add	r0, r4, r8
   2f638:	str	r7, [r4, #8]
   2f63c:	str	r6, [r4, #36]	; 0x24
   2f640:	bl	12424 <memmove@plt>
   2f644:	ldr	r1, [r5, #32]
   2f648:	ubfx	ip, r8, #8, #8
   2f64c:	lsr	r2, r8, #24
   2f650:	ubfx	lr, r1, #8, #8
   2f654:	ubfx	r0, r1, #16, #8
   2f658:	lsr	r3, r1, #24
   2f65c:	orr	r2, r2, r8, lsl #24
   2f660:	orr	r3, r3, r1, lsl #24
   2f664:	ubfx	r8, r8, #16, #8
   2f668:	orr	r3, r3, lr, lsl #16
   2f66c:	orr	r2, r2, ip, lsl #16
   2f670:	orr	r3, r3, r0, lsl #8
   2f674:	orr	r2, r2, r8, lsl #8
   2f678:	rev	r3, r3
   2f67c:	str	r2, [r4, #12]
   2f680:	str	r3, [r4, #32]
   2f684:	pop	{r4, r5, r6, r7, r8, pc}
   2f688:	ldr	r3, [r0, #12]
   2f68c:	push	{r4, r5, r6, r7, r8, lr}
   2f690:	mov	r5, r0
   2f694:	lsr	r4, r3, #24
   2f698:	mov	r6, r1
   2f69c:	mov	r0, r1
   2f6a0:	ubfx	r1, r3, #8, #8
   2f6a4:	ubfx	r2, r3, #16, #8
   2f6a8:	orr	r4, r4, r3, lsl #24
   2f6ac:	orr	r4, r4, r1, lsl #16
   2f6b0:	orr	r4, r4, r2, lsl #8
   2f6b4:	bl	1267c <strlen@plt>
   2f6b8:	ldr	r1, [r5, #32]
   2f6bc:	add	r4, r5, r4
   2f6c0:	mov	r2, r6
   2f6c4:	ubfx	lr, r1, #8, #8
   2f6c8:	ubfx	r3, r1, #16, #8
   2f6cc:	lsr	ip, r1, #24
   2f6d0:	orr	ip, ip, r1, lsl #24
   2f6d4:	orr	r1, ip, lr, lsl #16
   2f6d8:	orr	r1, r1, r3, lsl #8
   2f6dc:	mov	r7, r0
   2f6e0:	mov	r0, r4
   2f6e4:	bl	2e754 <crc32@@Base+0x143f8>
   2f6e8:	subs	r2, r0, #0
   2f6ec:	beq	2f6f8 <crc32@@Base+0x1539c>
   2f6f0:	sub	r0, r2, r4
   2f6f4:	pop	{r4, r5, r6, r7, r8, pc}
   2f6f8:	ldr	r1, [r5, #32]
   2f6fc:	add	r7, r7, #1
   2f700:	ldr	r3, [r5, #12]
   2f704:	ubfx	lr, r1, #8, #8
   2f708:	ubfx	r0, r1, #16, #8
   2f70c:	lsr	r8, r1, #24
   2f710:	ubfx	ip, r3, #8, #8
   2f714:	orr	r8, r8, r1, lsl #24
   2f718:	lsr	r1, r3, #24
   2f71c:	orr	r1, r1, r3, lsl #24
   2f720:	ubfx	r3, r3, #16, #8
   2f724:	orr	r8, r8, lr, lsl #16
   2f728:	orr	r1, r1, ip, lsl #16
   2f72c:	orr	r8, r8, r0, lsl #8
   2f730:	orr	r1, r1, r3, lsl #8
   2f734:	add	r1, r1, r8
   2f738:	mov	r3, r7
   2f73c:	add	r1, r5, r1
   2f740:	mov	r0, r5
   2f744:	bl	2f390 <crc32@@Base+0x15034>
   2f748:	cmp	r0, #0
   2f74c:	popne	{r4, r5, r6, r7, r8, pc}
   2f750:	ldr	ip, [r5, #32]
   2f754:	add	r0, r4, r8
   2f758:	mov	r2, r7
   2f75c:	mov	r1, r6
   2f760:	ubfx	r4, ip, #8, #8
   2f764:	ubfx	lr, ip, #16, #8
   2f768:	lsr	r3, ip, #24
   2f76c:	orr	r3, r3, ip, lsl #24
   2f770:	orr	r3, r3, r4, lsl #16
   2f774:	orr	r3, r3, lr, lsl #8
   2f778:	add	r7, r3, r7
   2f77c:	rev	r7, r7
   2f780:	str	r7, [r5, #32]
   2f784:	bl	12658 <memcpy@plt>
   2f788:	mov	r0, r8
   2f78c:	pop	{r4, r5, r6, r7, r8, pc}
   2f790:	push	{r4, r5, r6, r7, r8, lr}
   2f794:	mov	r7, r2
   2f798:	mov	r6, r3
   2f79c:	mov	r4, r0
   2f7a0:	bl	2e508 <crc32@@Base+0x141ac>
   2f7a4:	subs	r5, r0, #0
   2f7a8:	blt	2f854 <crc32@@Base+0x154f8>
   2f7ac:	mov	r1, r7
   2f7b0:	mov	r0, r4
   2f7b4:	bl	2f688 <crc32@@Base+0x1532c>
   2f7b8:	subs	r7, r0, #0
   2f7bc:	movlt	r5, r7
   2f7c0:	blt	2f854 <crc32@@Base+0x154f8>
   2f7c4:	ldr	r2, [r4, #8]
   2f7c8:	add	r3, r6, #3
   2f7cc:	bic	r3, r3, #3
   2f7d0:	ubfx	r0, r2, #8, #8
   2f7d4:	ubfx	ip, r2, #16, #8
   2f7d8:	lsr	r1, r2, #24
   2f7dc:	add	r3, r3, #12
   2f7e0:	orr	r1, r1, r2, lsl #24
   2f7e4:	mov	r2, #0
   2f7e8:	orr	r1, r1, r0, lsl #16
   2f7ec:	mov	r0, r4
   2f7f0:	orr	r1, r1, ip, lsl #8
   2f7f4:	ldr	ip, [sp, #24]
   2f7f8:	add	r1, r1, r5
   2f7fc:	add	r1, r4, r1
   2f800:	str	r1, [ip]
   2f804:	bl	2f4e0 <crc32@@Base+0x15184>
   2f808:	subs	r5, r0, #0
   2f80c:	bne	2f854 <crc32@@Base+0x154f8>
   2f810:	ldr	r1, [sp, #24]
   2f814:	ubfx	r3, r7, #8, #8
   2f818:	lsr	r2, r7, #24
   2f81c:	ubfx	r0, r6, #8, #8
   2f820:	orr	r2, r2, r7, lsl #24
   2f824:	ubfx	r7, r7, #16, #8
   2f828:	ldr	r1, [r1]
   2f82c:	orr	r2, r2, r3, lsl #16
   2f830:	lsr	r3, r6, #24
   2f834:	orr	r7, r2, r7, lsl #8
   2f838:	orr	r3, r3, r6, lsl #24
   2f83c:	ubfx	r6, r6, #16, #8
   2f840:	orr	r3, r3, r0, lsl #16
   2f844:	str	r7, [r1, #8]
   2f848:	orr	r6, r3, r6, lsl #8
   2f84c:	mov	r3, #50331648	; 0x3000000
   2f850:	stm	r1, {r3, r6}
   2f854:	mov	r0, r5
   2f858:	pop	{r4, r5, r6, r7, r8, pc}
   2f85c:	push	{r4, r5, r6, lr}
   2f860:	mov	r5, r0
   2f864:	bl	2e22c <crc32@@Base+0x13ed0>
   2f868:	cmp	r0, #0
   2f86c:	popne	{r4, r5, r6, pc}
   2f870:	ldr	r3, [r5, #20]
   2f874:	ubfx	r1, r3, #8, #8
   2f878:	ubfx	r2, r3, #16, #8
   2f87c:	lsr	r4, r3, #24
   2f880:	orr	r4, r4, r3, lsl #24
   2f884:	orr	r4, r4, r1, lsl #16
   2f888:	orr	r4, r4, r2, lsl #8
   2f88c:	cmp	r4, #16
   2f890:	bls	2f8d4 <crc32@@Base+0x15578>
   2f894:	ldr	r0, [r5, #36]	; 0x24
   2f898:	mov	r1, #16
   2f89c:	ubfx	ip, r0, #8, #8
   2f8a0:	ubfx	r2, r0, #16, #8
   2f8a4:	lsr	r3, r0, #24
   2f8a8:	orr	r3, r3, r0, lsl #24
   2f8ac:	mov	r0, r5
   2f8b0:	orr	r3, r3, ip, lsl r1
   2f8b4:	orr	r2, r3, r2, lsl #8
   2f8b8:	bl	2f2c4 <crc32@@Base+0x14f68>
   2f8bc:	cmp	r0, #0
   2f8c0:	bne	2f8dc <crc32@@Base+0x15580>
   2f8c4:	cmp	r4, #17
   2f8c8:	movne	r3, #285212672	; 0x11000000
   2f8cc:	strne	r3, [r5, #20]
   2f8d0:	pop	{r4, r5, r6, pc}
   2f8d4:	mvn	r0, #9
   2f8d8:	pop	{r4, r5, r6, pc}
   2f8dc:	mvn	r0, #11
   2f8e0:	pop	{r4, r5, r6, pc}
   2f8e4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f8e8:	mov	r8, r2
   2f8ec:	mov	r9, r3
   2f8f0:	mov	r5, r0
   2f8f4:	ldr	r7, [sp, #40]	; 0x28
   2f8f8:	ldr	r6, [sp, #44]	; 0x2c
   2f8fc:	bl	2f85c <crc32@@Base+0x15500>
   2f900:	subs	sl, r0, #0
   2f904:	beq	2f910 <crc32@@Base+0x155b4>
   2f908:	mov	r0, sl
   2f90c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f910:	mov	r0, r5
   2f914:	bl	315e8 <crc32@@Base+0x1728c>
   2f918:	ldr	r1, [r5, #16]
   2f91c:	mov	r2, sl
   2f920:	mov	r3, #1
   2f924:	ubfx	lr, r1, #8, #8
   2f928:	ubfx	ip, r1, #16, #8
   2f92c:	lsr	r4, r1, #24
   2f930:	orr	r4, r4, r1, lsl #24
   2f934:	orr	r4, r4, lr, lsl #16
   2f938:	orr	r4, r4, ip, lsl #8
   2f93c:	add	r4, r4, r0, lsl #4
   2f940:	mov	r0, r5
   2f944:	add	fp, r5, r4
   2f948:	mov	r1, fp
   2f94c:	bl	2f464 <crc32@@Base+0x15108>
   2f950:	subs	sl, r0, #0
   2f954:	bne	2f908 <crc32@@Base+0x155ac>
   2f958:	rev	r9, r9
   2f95c:	rev	r8, r8
   2f960:	str	r9, [r5, r4]
   2f964:	rev	r7, r7
   2f968:	rev	r6, r6
   2f96c:	str	r8, [fp, #4]
   2f970:	strd	r6, [fp, #8]
   2f974:	mov	r0, sl
   2f978:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f97c:	push	{r4, r5, r6, r7, r8, lr}
   2f980:	mov	r5, r0
   2f984:	mov	r6, r1
   2f988:	ldr	r4, [r0, #16]
   2f98c:	bl	2f85c <crc32@@Base+0x15500>
   2f990:	subs	r7, r0, #0
   2f994:	beq	2f9a0 <crc32@@Base+0x15644>
   2f998:	mov	r0, r7
   2f99c:	pop	{r4, r5, r6, r7, r8, pc}
   2f9a0:	mov	r0, r5
   2f9a4:	bl	315e8 <crc32@@Base+0x1728c>
   2f9a8:	cmp	r6, r0
   2f9ac:	bge	2f9e4 <crc32@@Base+0x15688>
   2f9b0:	ubfx	r3, r4, #8, #8
   2f9b4:	lsr	r1, r4, #24
   2f9b8:	orr	r1, r1, r4, lsl #24
   2f9bc:	ubfx	r4, r4, #16, #8
   2f9c0:	orr	r1, r1, r3, lsl #16
   2f9c4:	mov	r0, r5
   2f9c8:	orr	r1, r1, r4, lsl #8
   2f9cc:	mov	r3, r7
   2f9d0:	add	r1, r1, r6, lsl #4
   2f9d4:	mov	r2, #1
   2f9d8:	add	r1, r5, r1
   2f9dc:	pop	{r4, r5, r6, r7, r8, lr}
   2f9e0:	b	2f464 <crc32@@Base+0x15108>
   2f9e4:	mvn	r7, #0
   2f9e8:	b	2f998 <crc32@@Base+0x1563c>
   2f9ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f9f0:	movw	r4, #3824	; 0xef0
   2f9f4:	movt	r4, #5
   2f9f8:	sub	sp, sp, #12
   2f9fc:	mov	r7, r1
   2fa00:	mov	r8, r2
   2fa04:	ldr	r3, [r4]
   2fa08:	mov	r6, r0
   2fa0c:	str	r3, [sp, #4]
   2fa10:	bl	2f85c <crc32@@Base+0x15500>
   2fa14:	subs	r5, r0, #0
   2fa18:	beq	2fa38 <crc32@@Base+0x156dc>
   2fa1c:	ldr	r2, [sp, #4]
   2fa20:	mov	r0, r5
   2fa24:	ldr	r3, [r4]
   2fa28:	cmp	r2, r3
   2fa2c:	bne	2fa9c <crc32@@Base+0x15740>
   2fa30:	add	sp, sp, #12
   2fa34:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2fa38:	mov	r1, r7
   2fa3c:	mov	r2, sp
   2fa40:	mov	r0, r6
   2fa44:	bl	31804 <crc32@@Base+0x174a8>
   2fa48:	subs	r7, r0, #0
   2fa4c:	ldreq	r5, [sp]
   2fa50:	beq	2fa1c <crc32@@Base+0x156c0>
   2fa54:	mov	r0, r8
   2fa58:	bl	1267c <strlen@plt>
   2fa5c:	ldr	r2, [sp]
   2fa60:	mov	r1, r7
   2fa64:	add	r2, r2, #4
   2fa68:	bic	r2, r2, #3
   2fa6c:	add	r3, r0, #4
   2fa70:	mov	r9, r0
   2fa74:	bic	r3, r3, #3
   2fa78:	mov	r0, r6
   2fa7c:	bl	2f4e0 <crc32@@Base+0x15184>
   2fa80:	subs	r5, r0, #0
   2fa84:	bne	2fa1c <crc32@@Base+0x156c0>
   2fa88:	add	r2, r9, #1
   2fa8c:	mov	r1, r8
   2fa90:	mov	r0, r7
   2fa94:	bl	12658 <memcpy@plt>
   2fa98:	b	2fa1c <crc32@@Base+0x156c0>
   2fa9c:	bl	12538 <__stack_chk_fail@plt>
   2faa0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2faa4:	movw	r4, #3824	; 0xef0
   2faa8:	movt	r4, #5
   2faac:	mov	r9, r2
   2fab0:	sub	sp, sp, #24
   2fab4:	mov	r8, r1
   2fab8:	ldr	r2, [r4]
   2fabc:	mov	r6, r3
   2fac0:	mov	r7, r0
   2fac4:	ldr	sl, [sp, #56]	; 0x38
   2fac8:	str	r2, [sp, #20]
   2facc:	bl	2f85c <crc32@@Base+0x15500>
   2fad0:	subs	r5, r0, #0
   2fad4:	beq	2faf4 <crc32@@Base+0x15798>
   2fad8:	ldr	r2, [sp, #20]
   2fadc:	mov	r0, r5
   2fae0:	ldr	r3, [r4]
   2fae4:	cmp	r2, r3
   2fae8:	bne	2fbb4 <crc32@@Base+0x15858>
   2faec:	add	sp, sp, #24
   2faf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2faf4:	add	r3, sp, #16
   2faf8:	mov	r2, r9
   2fafc:	mov	r1, r8
   2fb00:	mov	r0, r7
   2fb04:	bl	31a30 <crc32@@Base+0x176d4>
   2fb08:	cmp	r0, #0
   2fb0c:	str	r0, [sp, #12]
   2fb10:	beq	2fb78 <crc32@@Base+0x1581c>
   2fb14:	ldr	r2, [sp, #16]
   2fb18:	add	r3, r6, #3
   2fb1c:	add	r1, r0, #12
   2fb20:	bic	r3, r3, #3
   2fb24:	add	r2, r2, #3
   2fb28:	mov	r0, r7
   2fb2c:	bic	r2, r2, #3
   2fb30:	bl	2f4e0 <crc32@@Base+0x15184>
   2fb34:	cmp	r0, #0
   2fb38:	bne	2fb68 <crc32@@Base+0x1580c>
   2fb3c:	lsr	r3, r6, #24
   2fb40:	ubfx	r1, r6, #8, #8
   2fb44:	ldr	r2, [sp, #12]
   2fb48:	orr	r3, r3, r6, lsl #24
   2fb4c:	ubfx	r6, r6, #16, #8
   2fb50:	orr	r3, r3, r1, lsl #16
   2fb54:	orr	r6, r3, r6, lsl #8
   2fb58:	str	r6, [r2, #4]
   2fb5c:	add	r2, r2, #12
   2fb60:	str	r2, [sl]
   2fb64:	b	2fad8 <crc32@@Base+0x1577c>
   2fb68:	cmn	r0, #1
   2fb6c:	beq	2fb94 <crc32@@Base+0x15838>
   2fb70:	mov	r5, r0
   2fb74:	b	2fad8 <crc32@@Base+0x1577c>
   2fb78:	ldr	r0, [sp, #16]
   2fb7c:	cmn	r0, #1
   2fb80:	beq	2fb94 <crc32@@Base+0x15838>
   2fb84:	cmp	r0, #0
   2fb88:	bne	2fb70 <crc32@@Base+0x15814>
   2fb8c:	ldr	r2, [sp, #12]
   2fb90:	b	2fb5c <crc32@@Base+0x15800>
   2fb94:	add	ip, sp, #12
   2fb98:	mov	r3, r6
   2fb9c:	mov	r2, r9
   2fba0:	mov	r1, r8
   2fba4:	mov	r0, r7
   2fba8:	str	ip, [sp]
   2fbac:	bl	2f790 <crc32@@Base+0x15434>
   2fbb0:	b	2fb84 <crc32@@Base+0x15828>
   2fbb4:	bl	12538 <__stack_chk_fail@plt>
   2fbb8:	push	{r4, r5, r6, lr}
   2fbbc:	movw	r4, #3824	; 0xef0
   2fbc0:	movt	r4, #5
   2fbc4:	sub	sp, sp, #16
   2fbc8:	mov	r6, r3
   2fbcc:	add	r3, sp, #8
   2fbd0:	ldr	ip, [r4]
   2fbd4:	str	r3, [sp]
   2fbd8:	ldr	r3, [sp, #32]
   2fbdc:	str	ip, [sp, #12]
   2fbe0:	bl	2faa0 <crc32@@Base+0x15744>
   2fbe4:	subs	r5, r0, #0
   2fbe8:	bne	2fbf8 <crc32@@Base+0x1589c>
   2fbec:	ldr	r3, [sp, #32]
   2fbf0:	cmp	r3, #0
   2fbf4:	bne	2fc14 <crc32@@Base+0x158b8>
   2fbf8:	ldr	r2, [sp, #12]
   2fbfc:	mov	r0, r5
   2fc00:	ldr	r3, [r4]
   2fc04:	cmp	r2, r3
   2fc08:	bne	2fc28 <crc32@@Base+0x158cc>
   2fc0c:	add	sp, sp, #16
   2fc10:	pop	{r4, r5, r6, pc}
   2fc14:	mov	r1, r6
   2fc18:	mov	r2, r3
   2fc1c:	ldr	r0, [sp, #8]
   2fc20:	bl	12658 <memcpy@plt>
   2fc24:	b	2fbf8 <crc32@@Base+0x1589c>
   2fc28:	bl	12538 <__stack_chk_fail@plt>
   2fc2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2fc30:	movw	r4, #3824	; 0xef0
   2fc34:	movt	r4, #5
   2fc38:	mov	r8, r2
   2fc3c:	sub	sp, sp, #28
   2fc40:	mov	r7, r1
   2fc44:	ldr	r2, [r4]
   2fc48:	mov	r9, r3
   2fc4c:	mov	r6, r0
   2fc50:	str	r2, [sp, #20]
   2fc54:	bl	2f85c <crc32@@Base+0x15500>
   2fc58:	subs	r5, r0, #0
   2fc5c:	beq	2fc7c <crc32@@Base+0x15920>
   2fc60:	ldr	r2, [sp, #20]
   2fc64:	mov	r0, r5
   2fc68:	ldr	r3, [r4]
   2fc6c:	cmp	r2, r3
   2fc70:	bne	2fd44 <crc32@@Base+0x159e8>
   2fc74:	add	sp, sp, #28
   2fc78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2fc7c:	add	r3, sp, #16
   2fc80:	mov	r2, r8
   2fc84:	mov	r1, r7
   2fc88:	mov	r0, r6
   2fc8c:	bl	31a30 <crc32@@Base+0x176d4>
   2fc90:	cmp	r0, #0
   2fc94:	str	r0, [sp, #12]
   2fc98:	beq	2fd08 <crc32@@Base+0x159ac>
   2fc9c:	ldr	r2, [sp, #16]
   2fca0:	add	r1, r0, #12
   2fca4:	ldr	r3, [sp, #56]	; 0x38
   2fca8:	mov	r0, r6
   2fcac:	add	r6, r2, r3
   2fcb0:	add	r2, r2, #3
   2fcb4:	add	r3, r6, #3
   2fcb8:	bic	r2, r2, #3
   2fcbc:	bic	r3, r3, #3
   2fcc0:	bl	2f4e0 <crc32@@Base+0x15184>
   2fcc4:	subs	r5, r0, #0
   2fcc8:	bne	2fc60 <crc32@@Base+0x15904>
   2fccc:	ubfx	r1, r6, #8, #8
   2fcd0:	lsr	r3, r6, #24
   2fcd4:	ldr	r2, [sp, #12]
   2fcd8:	orr	r3, r3, r6, lsl #24
   2fcdc:	ubfx	r6, r6, #16, #8
   2fce0:	orr	r3, r3, r1, lsl #16
   2fce4:	ldr	r0, [sp, #16]
   2fce8:	mov	r1, r9
   2fcec:	orr	r6, r3, r6, lsl #8
   2fcf0:	add	r3, r2, #12
   2fcf4:	str	r6, [r2, #4]
   2fcf8:	add	r0, r3, r0
   2fcfc:	ldr	r2, [sp, #56]	; 0x38
   2fd00:	bl	12658 <memcpy@plt>
   2fd04:	b	2fc60 <crc32@@Base+0x15904>
   2fd08:	add	r3, sp, #12
   2fd0c:	mov	r2, r8
   2fd10:	str	r3, [sp]
   2fd14:	mov	r1, r7
   2fd18:	mov	r0, r6
   2fd1c:	ldr	r3, [sp, #56]	; 0x38
   2fd20:	bl	2f790 <crc32@@Base+0x15434>
   2fd24:	subs	r5, r0, #0
   2fd28:	bne	2fc60 <crc32@@Base+0x15904>
   2fd2c:	ldr	r0, [sp, #12]
   2fd30:	mov	r1, r9
   2fd34:	ldr	r2, [sp, #56]	; 0x38
   2fd38:	add	r0, r0, #12
   2fd3c:	bl	12658 <memcpy@plt>
   2fd40:	b	2fc60 <crc32@@Base+0x15904>
   2fd44:	bl	12538 <__stack_chk_fail@plt>
   2fd48:	push	{r4, r5, r6, r7, r8, lr}
   2fd4c:	movw	r4, #3824	; 0xef0
   2fd50:	movt	r4, #5
   2fd54:	sub	sp, sp, #8
   2fd58:	mov	r7, r1
   2fd5c:	mov	r8, r2
   2fd60:	ldr	r3, [r4]
   2fd64:	mov	r6, r0
   2fd68:	str	r3, [sp, #4]
   2fd6c:	bl	2f85c <crc32@@Base+0x15500>
   2fd70:	subs	r5, r0, #0
   2fd74:	beq	2fd94 <crc32@@Base+0x15a38>
   2fd78:	ldr	r2, [sp, #4]
   2fd7c:	mov	r0, r5
   2fd80:	ldr	r3, [r4]
   2fd84:	cmp	r2, r3
   2fd88:	bne	2fdd8 <crc32@@Base+0x15a7c>
   2fd8c:	add	sp, sp, #8
   2fd90:	pop	{r4, r5, r6, r7, r8, pc}
   2fd94:	mov	r1, r7
   2fd98:	mov	r2, r8
   2fd9c:	mov	r3, sp
   2fda0:	mov	r0, r6
   2fda4:	bl	31a30 <crc32@@Base+0x176d4>
   2fda8:	subs	r1, r0, #0
   2fdac:	ldreq	r5, [sp]
   2fdb0:	beq	2fd78 <crc32@@Base+0x15a1c>
   2fdb4:	ldr	r2, [sp]
   2fdb8:	mov	r3, r5
   2fdbc:	mov	r0, r6
   2fdc0:	add	r2, r2, #3
   2fdc4:	bic	r2, r2, #3
   2fdc8:	add	r2, r2, #12
   2fdcc:	bl	2f4e0 <crc32@@Base+0x15184>
   2fdd0:	mov	r5, r0
   2fdd4:	b	2fd78 <crc32@@Base+0x15a1c>
   2fdd8:	bl	12538 <__stack_chk_fail@plt>
   2fddc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fde0:	movw	r4, #3824	; 0xef0
   2fde4:	movt	r4, #5
   2fde8:	mov	r7, r2
   2fdec:	sub	sp, sp, #12
   2fdf0:	mov	r8, r1
   2fdf4:	ldr	r2, [r4]
   2fdf8:	mov	r6, r3
   2fdfc:	mov	r5, r0
   2fe00:	str	r2, [sp, #4]
   2fe04:	bl	2f85c <crc32@@Base+0x15500>
   2fe08:	cmp	r0, #0
   2fe0c:	beq	2fe28 <crc32@@Base+0x15acc>
   2fe10:	ldr	r2, [sp, #4]
   2fe14:	ldr	r3, [r4]
   2fe18:	cmp	r2, r3
   2fe1c:	bne	2ff08 <crc32@@Base+0x15bac>
   2fe20:	add	sp, sp, #12
   2fe24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fe28:	mov	r3, r6
   2fe2c:	mov	r2, r7
   2fe30:	mov	r1, r8
   2fe34:	mov	r0, r5
   2fe38:	bl	316e4 <crc32@@Base+0x17388>
   2fe3c:	cmp	r0, #0
   2fe40:	bge	2ff00 <crc32@@Base+0x15ba4>
   2fe44:	cmn	r0, #1
   2fe48:	bne	2fe10 <crc32@@Base+0x15ab4>
   2fe4c:	mov	r1, r8
   2fe50:	mov	r0, r5
   2fe54:	mov	r2, sp
   2fe58:	bl	2e3a8 <crc32@@Base+0x1404c>
   2fe5c:	ldr	r8, [sp]
   2fe60:	mov	r2, sp
   2fe64:	mov	r0, r5
   2fe68:	mov	r1, r8
   2fe6c:	bl	2e3a8 <crc32@@Base+0x1404c>
   2fe70:	sub	r0, r0, #3
   2fe74:	cmp	r0, #1
   2fe78:	bls	2fe5c <crc32@@Base+0x15b00>
   2fe7c:	ldr	r1, [r5, #8]
   2fe80:	add	sl, r6, #4
   2fe84:	bic	sl, sl, #3
   2fe88:	mov	r2, #0
   2fe8c:	ubfx	lr, r1, #8, #8
   2fe90:	ubfx	ip, r1, #16, #8
   2fe94:	lsr	r9, r1, #24
   2fe98:	add	r3, sl, #8
   2fe9c:	orr	r9, r9, r1, lsl #24
   2fea0:	mov	r0, r5
   2fea4:	orr	r9, r9, lr, lsl #16
   2fea8:	orr	r9, r9, ip, lsl #8
   2feac:	add	r9, r9, r8
   2feb0:	add	fp, r5, r9
   2feb4:	mov	r1, fp
   2feb8:	bl	2f4e0 <crc32@@Base+0x15184>
   2febc:	cmp	r0, #0
   2fec0:	bne	2fe10 <crc32@@Base+0x15ab4>
   2fec4:	add	r3, fp, #4
   2fec8:	mov	r1, r0
   2fecc:	mov	r2, #16777216	; 0x1000000
   2fed0:	str	r2, [r5, r9]
   2fed4:	mov	r0, r3
   2fed8:	mov	r2, sl
   2fedc:	add	sl, fp, sl
   2fee0:	bl	12388 <memset@plt>
   2fee4:	mov	r2, r6
   2fee8:	mov	r1, r7
   2feec:	bl	12658 <memcpy@plt>
   2fef0:	mov	r3, #33554432	; 0x2000000
   2fef4:	mov	r0, r8
   2fef8:	str	r3, [sl, #4]
   2fefc:	b	2fe10 <crc32@@Base+0x15ab4>
   2ff00:	mvn	r0, #1
   2ff04:	b	2fe10 <crc32@@Base+0x15ab4>
   2ff08:	bl	12538 <__stack_chk_fail@plt>
   2ff0c:	push	{r4, r5, r6, lr}
   2ff10:	mov	r5, r0
   2ff14:	mov	r0, r2
   2ff18:	mov	r4, r2
   2ff1c:	mov	r6, r1
   2ff20:	bl	1267c <strlen@plt>
   2ff24:	mov	r2, r4
   2ff28:	mov	r1, r6
   2ff2c:	mov	r3, r0
   2ff30:	mov	r0, r5
   2ff34:	pop	{r4, r5, r6, lr}
   2ff38:	b	2fddc <crc32@@Base+0x15a80>
   2ff3c:	push	{r4, r5, r6, lr}
   2ff40:	mov	r5, r1
   2ff44:	mov	r4, r0
   2ff48:	bl	2f85c <crc32@@Base+0x15500>
   2ff4c:	cmp	r0, #0
   2ff50:	popne	{r4, r5, r6, pc}
   2ff54:	mov	r1, r5
   2ff58:	mov	r0, r4
   2ff5c:	bl	2e9a0 <crc32@@Base+0x14644>
   2ff60:	cmp	r0, #0
   2ff64:	poplt	{r4, r5, r6, pc}
   2ff68:	ldr	r3, [r4, #8]
   2ff6c:	sub	r2, r0, r5
   2ff70:	mov	r0, r4
   2ff74:	ubfx	lr, r3, #8, #8
   2ff78:	ubfx	ip, r3, #16, #8
   2ff7c:	lsr	r1, r3, #24
   2ff80:	orr	r1, r1, r3, lsl #24
   2ff84:	mov	r3, #0
   2ff88:	orr	r1, r1, lr, lsl #16
   2ff8c:	orr	r1, r1, ip, lsl #8
   2ff90:	add	r1, r1, r5
   2ff94:	add	r1, r4, r1
   2ff98:	pop	{r4, r5, r6, lr}
   2ff9c:	b	2f4e0 <crc32@@Base+0x15184>
   2ffa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ffa4:	movw	r5, #3824	; 0xef0
   2ffa8:	movt	r5, #5
   2ffac:	sub	sp, sp, #20
   2ffb0:	mov	r4, r0
   2ffb4:	mov	r7, r1
   2ffb8:	ldr	r3, [r5]
   2ffbc:	mov	r8, r2
   2ffc0:	ldr	sl, [r0, #4]
   2ffc4:	str	r3, [sp, #12]
   2ffc8:	bl	2e22c <crc32@@Base+0x13ed0>
   2ffcc:	subs	r9, r0, #0
   2ffd0:	beq	2fff0 <crc32@@Base+0x15c94>
   2ffd4:	ldr	r2, [sp, #12]
   2ffd8:	mov	r0, r9
   2ffdc:	ldr	r3, [r5]
   2ffe0:	cmp	r2, r3
   2ffe4:	bne	30208 <crc32@@Base+0x15eac>
   2ffe8:	add	sp, sp, #20
   2ffec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fff0:	mov	r0, r4
   2fff4:	bl	315e8 <crc32@@Base+0x1728c>
   2fff8:	ldr	r2, [r4, #20]
   2fffc:	ubfx	ip, r2, #8, #8
   30000:	ubfx	r1, r2, #16, #8
   30004:	lsr	r3, r2, #24
   30008:	orr	r3, r3, r2, lsl #24
   3000c:	orr	r3, r3, ip, lsl #16
   30010:	orr	r3, r3, r1, lsl #8
   30014:	cmp	r3, #16
   30018:	add	r0, r0, #1
   3001c:	lsl	fp, r0, #4
   30020:	bhi	3016c <crc32@@Base+0x15e10>
   30024:	add	r6, sp, #16
   30028:	mov	r1, r9
   3002c:	str	r9, [r6, #-8]!
   30030:	b	30038 <crc32@@Base+0x15cdc>
   30034:	ldr	r1, [sp, #8]
   30038:	mov	r2, r6
   3003c:	mov	r0, r4
   30040:	bl	2e3a8 <crc32@@Base+0x1404c>
   30044:	cmp	r0, #9
   30048:	bne	30034 <crc32@@Base+0x15cd8>
   3004c:	ldr	r3, [sp, #8]
   30050:	cmp	r3, #0
   30054:	movlt	r9, r3
   30058:	blt	2ffd4 <crc32@@Base+0x15c78>
   3005c:	mov	r2, r3
   30060:	mov	r1, fp
   30064:	mov	r0, r4
   30068:	str	r3, [sp, #4]
   3006c:	bl	2f2c4 <crc32@@Base+0x14f68>
   30070:	ldr	r3, [sp, #4]
   30074:	cmp	r0, #0
   30078:	beq	30190 <crc32@@Base+0x15e34>
   3007c:	ldr	r2, [r4, #32]
   30080:	ubfx	r0, r2, #8, #8
   30084:	ubfx	r1, r2, #16, #8
   30088:	lsr	r6, r2, #24
   3008c:	orr	r6, r6, r2, lsl #24
   30090:	orr	r6, r6, r0, lsl #16
   30094:	orr	r6, r6, r1, lsl #8
   30098:	add	r6, r6, #40	; 0x28
   3009c:	add	r6, r6, fp
   300a0:	add	r6, r6, r3
   300a4:	cmp	r6, r8
   300a8:	bgt	30200 <crc32@@Base+0x15ea4>
   300ac:	ubfx	r1, sl, #8, #8
   300b0:	lsr	r2, sl, #24
   300b4:	orr	r2, r2, sl, lsl #24
   300b8:	ubfx	sl, sl, #16, #8
   300bc:	orr	r2, r2, r1, lsl #16
   300c0:	add	r1, r7, r6
   300c4:	orr	sl, r2, sl, lsl #8
   300c8:	cmp	r4, r1
   300cc:	add	sl, r4, sl
   300d0:	movcs	r2, #0
   300d4:	movcc	r2, #1
   300d8:	cmp	sl, r7
   300dc:	movls	r2, #0
   300e0:	cmp	r2, #0
   300e4:	moveq	sl, r7
   300e8:	bne	301f0 <crc32@@Base+0x15e94>
   300ec:	mov	r2, fp
   300f0:	mov	r1, sl
   300f4:	mov	r0, r4
   300f8:	bl	2f554 <crc32@@Base+0x151f8>
   300fc:	mov	r2, r6
   30100:	mov	r1, sl
   30104:	mov	r0, r7
   30108:	bl	12424 <memmove@plt>
   3010c:	ldr	r1, [r4, #28]
   30110:	lsr	r2, r8, #24
   30114:	ubfx	ip, r8, #8, #8
   30118:	ubfx	lr, r1, #8, #8
   3011c:	ubfx	r0, r1, #16, #8
   30120:	lsr	r3, r1, #24
   30124:	orr	r2, r2, r8, lsl #24
   30128:	orr	r3, r3, r1, lsl #24
   3012c:	ubfx	r8, r8, #16, #8
   30130:	orr	r3, r3, lr, lsl #16
   30134:	orr	r2, r2, ip, lsl #16
   30138:	orr	r3, r3, r0, lsl #8
   3013c:	orr	r8, r2, r8, lsl #8
   30140:	rev	r3, r3
   30144:	mov	r2, #285212672	; 0x11000000
   30148:	str	r3, [r7, #28]
   3014c:	mov	r3, #3536	; 0xdd0
   30150:	str	r2, [r7, #20]
   30154:	movt	r3, #60926	; 0xedfe
   30158:	mov	r2, #268435456	; 0x10000000
   3015c:	str	r8, [r7, #4]
   30160:	str	r3, [r7]
   30164:	str	r2, [r7, #24]
   30168:	b	2ffd4 <crc32@@Base+0x15c78>
   3016c:	ldr	r2, [r4, #36]	; 0x24
   30170:	ubfx	r0, r2, #8, #8
   30174:	ubfx	r1, r2, #16, #8
   30178:	lsr	r3, r2, #24
   3017c:	orr	r3, r3, r2, lsl #24
   30180:	orr	r3, r3, r0, lsl #16
   30184:	orr	r3, r3, r1, lsl #8
   30188:	str	r3, [sp, #8]
   3018c:	b	3005c <crc32@@Base+0x15d00>
   30190:	mov	r0, r4
   30194:	mov	r2, r8
   30198:	mov	r1, r7
   3019c:	bl	2e7b4 <crc32@@Base+0x14458>
   301a0:	subs	r9, r0, #0
   301a4:	bne	2ffd4 <crc32@@Base+0x15c78>
   301a8:	ldr	r1, [sp, #8]
   301ac:	lsr	r2, r8, #24
   301b0:	ubfx	ip, r8, #8, #8
   301b4:	orr	r2, r2, r8, lsl #24
   301b8:	ubfx	r0, r1, #8, #8
   301bc:	ubfx	r8, r8, #16, #8
   301c0:	lsr	r3, r1, #24
   301c4:	orr	r2, r2, ip, lsl #16
   301c8:	orr	r3, r3, r1, lsl #24
   301cc:	ubfx	r1, r1, #16, #8
   301d0:	orr	r3, r3, r0, lsl #16
   301d4:	orr	r8, r2, r8, lsl #8
   301d8:	orr	r3, r3, r1, lsl #8
   301dc:	str	r8, [r7, #4]
   301e0:	str	r3, [r7, #36]	; 0x24
   301e4:	mov	r3, #285212672	; 0x11000000
   301e8:	str	r3, [r7, #20]
   301ec:	b	2ffd4 <crc32@@Base+0x15c78>
   301f0:	add	r2, sl, r6
   301f4:	add	r1, r7, r8
   301f8:	cmp	r2, r1
   301fc:	bls	300ec <crc32@@Base+0x15d90>
   30200:	mvn	r9, #2
   30204:	b	2ffd4 <crc32@@Base+0x15c78>
   30208:	bl	12538 <__stack_chk_fail@plt>
   3020c:	push	{r4, r5, r6, lr}
   30210:	mov	r4, r0
   30214:	bl	2f85c <crc32@@Base+0x15500>
   30218:	subs	r5, r0, #0
   3021c:	bne	3029c <crc32@@Base+0x15f40>
   30220:	mov	r0, r4
   30224:	bl	315e8 <crc32@@Base+0x1728c>
   30228:	ldr	r3, [r4, #36]	; 0x24
   3022c:	mov	r1, r4
   30230:	ubfx	lr, r3, #8, #8
   30234:	ubfx	ip, r3, #16, #8
   30238:	lsr	r2, r3, #24
   3023c:	orr	r2, r2, r3, lsl #24
   30240:	orr	r3, r2, lr, lsl #16
   30244:	orr	r3, r3, ip, lsl #8
   30248:	add	r2, r0, #1
   3024c:	mov	r0, r4
   30250:	lsl	r2, r2, #4
   30254:	bl	2f554 <crc32@@Base+0x151f8>
   30258:	ldr	r0, [r4, #12]
   3025c:	ldr	r1, [r4, #32]
   30260:	ubfx	r6, r0, #8, #8
   30264:	ubfx	ip, r0, #16, #8
   30268:	ubfx	lr, r1, #8, #8
   3026c:	lsr	r3, r0, #24
   30270:	lsr	r2, r1, #24
   30274:	orr	r3, r3, r0, lsl #24
   30278:	orr	r2, r2, r1, lsl #24
   3027c:	ubfx	r1, r1, #16, #8
   30280:	orr	r3, r3, r6, lsl #16
   30284:	orr	r2, r2, lr, lsl #16
   30288:	orr	r3, r3, ip, lsl #8
   3028c:	orr	r2, r2, r1, lsl #8
   30290:	add	r3, r3, r2
   30294:	rev	r3, r3
   30298:	str	r3, [r4, #4]
   3029c:	mov	r0, r5
   302a0:	pop	{r4, r5, r6, pc}
   302a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   302a8:	mov	r5, r0
   302ac:	ldr	r0, [r0, #4]
   302b0:	movw	r7, #3824	; 0xef0
   302b4:	movt	r7, #5
   302b8:	mov	r6, r1
   302bc:	ubfx	lr, r0, #8, #8
   302c0:	ubfx	r2, r0, #16, #8
   302c4:	lsr	r3, r0, #24
   302c8:	ldr	ip, [r7]
   302cc:	orr	r3, r3, r0, lsl #24
   302d0:	sub	sp, sp, #12
   302d4:	orr	r3, r3, lr, lsl #16
   302d8:	mov	r1, r5
   302dc:	orr	r2, r3, r2, lsl #8
   302e0:	mov	r0, r6
   302e4:	str	ip, [sp, #4]
   302e8:	bl	12658 <memcpy@plt>
   302ec:	mov	r3, #0
   302f0:	str	r3, [r6, #32]
   302f4:	mov	r4, r3
   302f8:	mov	r2, sp
   302fc:	mov	r1, r4
   30300:	mov	r0, r5
   30304:	bl	2e3a8 <crc32@@Base+0x1404c>
   30308:	cmp	r0, #3
   3030c:	beq	30338 <crc32@@Base+0x15fdc>
   30310:	cmp	r0, #9
   30314:	ldr	r4, [sp]
   30318:	bne	302f8 <crc32@@Base+0x15f9c>
   3031c:	mov	r0, #0
   30320:	ldr	r2, [sp, #4]
   30324:	ldr	r3, [r7]
   30328:	cmp	r2, r3
   3032c:	bne	303bc <crc32@@Base+0x16060>
   30330:	add	sp, sp, #12
   30334:	pop	{r4, r5, r6, r7, r8, r9, pc}
   30338:	mov	r2, #0
   3033c:	mov	r1, r4
   30340:	mov	r0, r5
   30344:	bl	318d0 <crc32@@Base+0x17574>
   30348:	mov	r1, r4
   3034c:	mov	r2, #0
   30350:	mov	r9, r0
   30354:	mov	r0, r6
   30358:	bl	318d0 <crc32@@Base+0x17574>
   3035c:	ldr	r2, [r9, #8]
   30360:	ubfx	ip, r2, #8, #8
   30364:	ubfx	r1, r2, #16, #8
   30368:	lsr	r3, r2, #24
   3036c:	orr	r3, r3, r2, lsl #24
   30370:	orr	r3, r3, ip, lsl #16
   30374:	orr	r1, r3, r1, lsl #8
   30378:	mov	r8, r0
   3037c:	mov	r0, r5
   30380:	bl	31424 <crc32@@Base+0x170c8>
   30384:	mov	r1, r0
   30388:	mov	r0, r6
   3038c:	bl	2f688 <crc32@@Base+0x1532c>
   30390:	cmp	r0, #0
   30394:	blt	30320 <crc32@@Base+0x15fc4>
   30398:	lsr	r3, r0, #24
   3039c:	ubfx	r1, r0, #8, #8
   303a0:	ubfx	r2, r0, #16, #8
   303a4:	orr	r3, r3, r0, lsl #24
   303a8:	orr	r0, r3, r1, lsl #16
   303ac:	ldr	r4, [sp]
   303b0:	orr	r0, r0, r2, lsl #8
   303b4:	str	r0, [r8, #8]
   303b8:	b	302f8 <crc32@@Base+0x15f9c>
   303bc:	bl	12538 <__stack_chk_fail@plt>
   303c0:	cmp	r0, #0
   303c4:	ble	303d4 <crc32@@Base+0x16078>
   303c8:	movw	r0, #56388	; 0xdc44
   303cc:	movt	r0, #3
   303d0:	bx	lr
   303d4:	beq	30410 <crc32@@Base+0x160b4>
   303d8:	cmn	r0, #18
   303dc:	bls	30404 <crc32@@Base+0x160a8>
   303e0:	rsb	r0, r0, #0
   303e4:	movw	r2, #56316	; 0xdbfc
   303e8:	movt	r2, #3
   303ec:	movw	r3, #56424	; 0xdc68
   303f0:	movt	r3, #3
   303f4:	ldr	r0, [r2, r0, lsl #2]
   303f8:	cmp	r0, #0
   303fc:	moveq	r0, r3
   30400:	bx	lr
   30404:	movw	r0, #56424	; 0xdc68
   30408:	movt	r0, #3
   3040c:	bx	lr
   30410:	movw	r0, #56412	; 0xdc5c
   30414:	movt	r0, #3
   30418:	bx	lr
   3041c:	push	{r4, r5, r6, lr}
   30420:	mov	r4, r0
   30424:	mov	r5, r1
   30428:	bl	2eb10 <crc32@@Base+0x147b4>
   3042c:	cmp	r0, #0
   30430:	popne	{r4, r5, r6, pc}
   30434:	mov	r0, r4
   30438:	bl	2ed98 <crc32@@Base+0x14a3c>
   3043c:	cmp	r0, #0
   30440:	popne	{r4, r5, r6, pc}
   30444:	movw	r1, #50548	; 0xc574
   30448:	mov	r0, r4
   3044c:	movt	r1, #3
   30450:	bl	2edb8 <crc32@@Base+0x14a5c>
   30454:	cmp	r0, #0
   30458:	popne	{r4, r5, r6, pc}
   3045c:	mov	r0, r4
   30460:	bl	2ee44 <crc32@@Base+0x14ae8>
   30464:	cmp	r0, #0
   30468:	popne	{r4, r5, r6, pc}
   3046c:	mov	r0, r4
   30470:	bl	2f0d4 <crc32@@Base+0x14d78>
   30474:	cmp	r0, #0
   30478:	popne	{r4, r5, r6, pc}
   3047c:	mov	r2, r5
   30480:	mov	r1, r4
   30484:	mov	r0, r4
   30488:	pop	{r4, r5, r6, lr}
   3048c:	b	2ffa0 <crc32@@Base+0x15c44>
   30490:	push	{r4, lr}
   30494:	movw	r4, #3824	; 0xef0
   30498:	movt	r4, #5
   3049c:	sub	sp, sp, #8
   304a0:	movw	r2, #31900	; 0x7c9c
   304a4:	movt	r2, #3
   304a8:	ldr	ip, [r4]
   304ac:	mov	r3, sp
   304b0:	str	ip, [sp, #4]
   304b4:	bl	31b04 <crc32@@Base+0x177a8>
   304b8:	cmp	r0, #0
   304bc:	moveq	r0, #2
   304c0:	beq	304f8 <crc32@@Base+0x1619c>
   304c4:	ldr	r3, [sp]
   304c8:	cmp	r3, #4
   304cc:	bne	30510 <crc32@@Base+0x161b4>
   304d0:	ldr	r3, [r0]
   304d4:	ubfx	r1, r3, #8, #8
   304d8:	ubfx	r2, r3, #16, #8
   304dc:	lsr	r0, r3, #24
   304e0:	orr	r0, r0, r3, lsl #24
   304e4:	orr	r0, r0, r1, lsl #16
   304e8:	orr	r0, r0, r2, lsl #8
   304ec:	sub	r3, r0, #1
   304f0:	cmp	r3, #4
   304f4:	mvncs	r0, #13
   304f8:	ldr	r2, [sp, #4]
   304fc:	ldr	r3, [r4]
   30500:	cmp	r2, r3
   30504:	bne	30518 <crc32@@Base+0x161bc>
   30508:	add	sp, sp, #8
   3050c:	pop	{r4, pc}
   30510:	mvn	r0, #13
   30514:	b	304f8 <crc32@@Base+0x1619c>
   30518:	bl	12538 <__stack_chk_fail@plt>
   3051c:	push	{r4, lr}
   30520:	movw	r4, #3824	; 0xef0
   30524:	movt	r4, #5
   30528:	sub	sp, sp, #8
   3052c:	movw	r2, #56772	; 0xddc4
   30530:	movt	r2, #3
   30534:	ldr	ip, [r4]
   30538:	mov	r3, sp
   3053c:	str	ip, [sp, #4]
   30540:	bl	31b04 <crc32@@Base+0x177a8>
   30544:	cmp	r0, #0
   30548:	moveq	r0, #2
   3054c:	beq	30580 <crc32@@Base+0x16224>
   30550:	ldr	r3, [sp]
   30554:	cmp	r3, #4
   30558:	bne	30598 <crc32@@Base+0x1623c>
   3055c:	ldr	r3, [r0]
   30560:	ubfx	r1, r3, #8, #8
   30564:	ubfx	r2, r3, #16, #8
   30568:	lsr	r0, r3, #24
   3056c:	orr	r0, r0, r3, lsl #24
   30570:	orr	r0, r0, r1, lsl #16
   30574:	orr	r0, r0, r2, lsl #8
   30578:	cmp	r0, #5
   3057c:	mvncs	r0, #13
   30580:	ldr	r2, [sp, #4]
   30584:	ldr	r3, [r4]
   30588:	cmp	r2, r3
   3058c:	bne	305a0 <crc32@@Base+0x16244>
   30590:	add	sp, sp, #8
   30594:	pop	{r4, pc}
   30598:	mvn	r0, #13
   3059c:	b	30580 <crc32@@Base+0x16224>
   305a0:	bl	12538 <__stack_chk_fail@plt>
   305a4:	push	{r4, r5, r6, r7, r8, lr}
   305a8:	movw	r5, #3824	; 0xef0
   305ac:	movt	r5, #5
   305b0:	sub	sp, sp, #24
   305b4:	mov	r4, r3
   305b8:	add	r3, sp, #12
   305bc:	ldr	ip, [r5]
   305c0:	mov	r6, r0
   305c4:	mov	r7, r1
   305c8:	mov	r8, r2
   305cc:	str	ip, [sp, #20]
   305d0:	bl	31b04 <crc32@@Base+0x177a8>
   305d4:	cmp	r0, #0
   305d8:	ldreq	r0, [sp, #12]
   305dc:	beq	30648 <crc32@@Base+0x162ec>
   305e0:	ldr	r1, [sp, #12]
   305e4:	cmp	r1, #4
   305e8:	bne	30668 <crc32@@Base+0x1630c>
   305ec:	ldr	r2, [r0]
   305f0:	ubfx	ip, r2, #8, #8
   305f4:	ubfx	r0, r2, #16, #8
   305f8:	lsr	r3, r2, #24
   305fc:	orr	r3, r3, r2, lsl #24
   30600:	orr	r3, r3, ip, lsl #16
   30604:	orr	r3, r3, r0, lsl #8
   30608:	adds	r4, r4, r3
   3060c:	movcs	r3, #1
   30610:	movcc	r3, #0
   30614:	cmn	r4, #1
   30618:	movne	r2, #0
   3061c:	moveq	r2, #1
   30620:	orrs	r3, r2, r3
   30624:	bne	30660 <crc32@@Base+0x16304>
   30628:	add	r3, sp, #24
   3062c:	str	r1, [sp]
   30630:	rev	r4, r4
   30634:	mov	r2, r8
   30638:	mov	r1, r7
   3063c:	mov	r0, r6
   30640:	str	r4, [r3, #-8]!
   30644:	bl	2e894 <crc32@@Base+0x14538>
   30648:	ldr	r2, [sp, #20]
   3064c:	ldr	r3, [r5]
   30650:	cmp	r2, r3
   30654:	bne	30670 <crc32@@Base+0x16314>
   30658:	add	sp, sp, #24
   3065c:	pop	{r4, r5, r6, r7, r8, pc}
   30660:	mvn	r0, #16
   30664:	b	30648 <crc32@@Base+0x162ec>
   30668:	mvn	r0, #5
   3066c:	b	30648 <crc32@@Base+0x162ec>
   30670:	bl	12538 <__stack_chk_fail@plt>
   30674:	push	{r4, r5, r6, lr}
   30678:	mov	r4, r2
   3067c:	mov	r3, r4
   30680:	movw	r2, #56784	; 0xddd0
   30684:	movt	r2, #3
   30688:	mov	r5, r0
   3068c:	mov	r6, r1
   30690:	bl	305a4 <crc32@@Base+0x16248>
   30694:	add	r2, r0, #1
   30698:	mov	r3, r0
   3069c:	cmp	r2, #1
   306a0:	bls	306ac <crc32@@Base+0x16350>
   306a4:	mov	r0, r3
   306a8:	pop	{r4, r5, r6, pc}
   306ac:	mov	r3, r4
   306b0:	movw	r2, #56792	; 0xddd8
   306b4:	mov	r1, r6
   306b8:	movt	r2, #3
   306bc:	mov	r0, r5
   306c0:	bl	305a4 <crc32@@Base+0x16248>
   306c4:	add	r2, r0, #1
   306c8:	mov	r3, r0
   306cc:	cmp	r2, #1
   306d0:	bhi	306a4 <crc32@@Base+0x16348>
   306d4:	mov	r1, r6
   306d8:	mov	r0, r5
   306dc:	bl	2e678 <crc32@@Base+0x1431c>
   306e0:	subs	r6, r0, #0
   306e4:	blt	30714 <crc32@@Base+0x163b8>
   306e8:	mov	r1, r6
   306ec:	mov	r2, r4
   306f0:	mov	r0, r5
   306f4:	bl	30674 <crc32@@Base+0x16318>
   306f8:	mov	r1, r6
   306fc:	subs	r3, r0, #0
   30700:	mov	r0, r5
   30704:	bne	306a4 <crc32@@Base+0x16348>
   30708:	bl	2e6d8 <crc32@@Base+0x1437c>
   3070c:	subs	r6, r0, #0
   30710:	bge	306e8 <crc32@@Base+0x1638c>
   30714:	mov	r3, #0
   30718:	b	306a4 <crc32@@Base+0x16348>
   3071c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30720:	movw	ip, #3824	; 0xef0
   30724:	sub	sp, sp, #60	; 0x3c
   30728:	movt	ip, #5
   3072c:	mov	lr, r2
   30730:	mov	r7, r1
   30734:	str	r2, [sp, #28]
   30738:	mov	r1, lr
   3073c:	ldr	r2, [ip]
   30740:	mov	r9, r3
   30744:	str	ip, [sp, #24]
   30748:	mov	r6, r0
   3074c:	str	r2, [sp, #52]	; 0x34
   30750:	bl	31890 <crc32@@Base+0x17534>
   30754:	subs	r3, r0, #0
   30758:	str	r3, [sp, #20]
   3075c:	blt	30888 <crc32@@Base+0x1652c>
   30760:	add	r3, sp, #40	; 0x28
   30764:	add	r2, sp, #36	; 0x24
   30768:	ldr	r1, [sp, #20]
   3076c:	mov	r0, r6
   30770:	bl	31a94 <crc32@@Base+0x17738>
   30774:	subs	r5, r0, #0
   30778:	beq	30904 <crc32@@Base+0x165a8>
   3077c:	ldr	r4, [sp, #40]	; 0x28
   30780:	ands	r4, r4, #3
   30784:	bne	30850 <crc32@@Base+0x164f4>
   30788:	add	r3, sp, #44	; 0x2c
   3078c:	ldr	r2, [sp, #36]	; 0x24
   30790:	mov	r1, r7
   30794:	mov	r0, r6
   30798:	bl	31b04 <crc32@@Base+0x177a8>
   3079c:	subs	r8, r0, #0
   307a0:	beq	3090c <crc32@@Base+0x165b0>
   307a4:	ldr	r3, [sp, #40]	; 0x28
   307a8:	lsrs	r3, r3, #2
   307ac:	subne	r5, r5, #4
   307b0:	bne	307d0 <crc32@@Base+0x16474>
   307b4:	b	30870 <crc32@@Base+0x16514>
   307b8:	cmp	r0, #0
   307bc:	bne	30854 <crc32@@Base+0x164f8>
   307c0:	ldr	r3, [sp, #40]	; 0x28
   307c4:	add	r4, r4, #1
   307c8:	cmp	r4, r3, lsr #2
   307cc:	bcs	30870 <crc32@@Base+0x16514>
   307d0:	ldr	r3, [r5, #4]!
   307d4:	ldr	fp, [sp, #36]	; 0x24
   307d8:	ubfx	r1, r3, #8, #8
   307dc:	ubfx	r2, r3, #16, #8
   307e0:	lsr	sl, r3, #24
   307e4:	orr	sl, sl, r3, lsl #24
   307e8:	mov	r0, fp
   307ec:	orr	sl, sl, r1, lsl #16
   307f0:	orr	sl, sl, r2, lsl #8
   307f4:	ldr	r2, [r8, sl]
   307f8:	ubfx	r1, r2, #8, #8
   307fc:	lsr	r3, r2, #24
   30800:	orr	r3, r3, r2, lsl #24
   30804:	ubfx	r2, r2, #16, #8
   30808:	orr	r3, r3, r1, lsl #16
   3080c:	orr	r3, r3, r2, lsl #8
   30810:	add	r3, r3, r9
   30814:	rev	r3, r3
   30818:	str	r3, [sp, #48]	; 0x30
   3081c:	bl	1267c <strlen@plt>
   30820:	mov	r3, #4
   30824:	str	sl, [sp]
   30828:	mov	r2, fp
   3082c:	str	r3, [sp, #8]
   30830:	mov	r1, r7
   30834:	add	r3, sp, #48	; 0x30
   30838:	str	r3, [sp, #4]
   3083c:	mov	r3, r0
   30840:	mov	r0, r6
   30844:	bl	2e810 <crc32@@Base+0x144b4>
   30848:	cmn	r0, #3
   3084c:	bne	307b8 <crc32@@Base+0x1645c>
   30850:	mvn	r0, #15
   30854:	ldr	r3, [sp, #24]
   30858:	ldr	r2, [sp, #52]	; 0x34
   3085c:	ldr	r3, [r3]
   30860:	cmp	r2, r3
   30864:	bne	3091c <crc32@@Base+0x165c0>
   30868:	add	sp, sp, #60	; 0x3c
   3086c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30870:	ldr	r1, [sp, #20]
   30874:	mov	r0, r6
   30878:	bl	318b0 <crc32@@Base+0x17554>
   3087c:	subs	r3, r0, #0
   30880:	str	r3, [sp, #20]
   30884:	bge	30760 <crc32@@Base+0x16404>
   30888:	ldr	r1, [sp, #28]
   3088c:	mov	r0, r6
   30890:	bl	2e678 <crc32@@Base+0x1431c>
   30894:	subs	r4, r0, #0
   30898:	blt	308fc <crc32@@Base+0x165a0>
   3089c:	mov	r2, #0
   308a0:	mov	r1, r4
   308a4:	mov	r0, r6
   308a8:	bl	31804 <crc32@@Base+0x174a8>
   308ac:	mov	r1, r7
   308b0:	mov	r2, r0
   308b4:	mov	r0, r6
   308b8:	bl	317d4 <crc32@@Base+0x17478>
   308bc:	cmn	r0, #1
   308c0:	beq	30850 <crc32@@Base+0x164f4>
   308c4:	cmp	r0, #0
   308c8:	blt	30854 <crc32@@Base+0x164f8>
   308cc:	mov	r1, r0
   308d0:	mov	r3, r9
   308d4:	mov	r2, r4
   308d8:	mov	r0, r6
   308dc:	bl	3071c <crc32@@Base+0x163c0>
   308e0:	cmp	r0, #0
   308e4:	bne	30854 <crc32@@Base+0x164f8>
   308e8:	mov	r1, r4
   308ec:	mov	r0, r6
   308f0:	bl	2e6d8 <crc32@@Base+0x1437c>
   308f4:	subs	r4, r0, #0
   308f8:	bge	3089c <crc32@@Base+0x16540>
   308fc:	mov	r0, #0
   30900:	b	30854 <crc32@@Base+0x164f8>
   30904:	ldr	r0, [sp, #40]	; 0x28
   30908:	b	30854 <crc32@@Base+0x164f8>
   3090c:	ldr	r0, [sp, #44]	; 0x2c
   30910:	cmn	r0, #1
   30914:	bne	30854 <crc32@@Base+0x164f8>
   30918:	b	30850 <crc32@@Base+0x164f4>
   3091c:	bl	12538 <__stack_chk_fail@plt>
   30920:	push	{r4, r5, r6, r7, r8, r9, lr}
   30924:	movw	r4, #3824	; 0xef0
   30928:	movt	r4, #5
   3092c:	sub	sp, sp, #20
   30930:	mov	r6, r1
   30934:	mov	r9, r2
   30938:	ldr	ip, [r4]
   3093c:	mov	r1, r2
   30940:	mov	r8, r0
   30944:	mov	r7, r3
   30948:	mov	r0, r6
   3094c:	movw	r2, #56808	; 0xdde8
   30950:	add	r3, sp, #8
   30954:	movt	r2, #3
   30958:	str	ip, [sp, #12]
   3095c:	mov	r5, #0
   30960:	str	r5, [sp, #4]
   30964:	bl	31b04 <crc32@@Base+0x177a8>
   30968:	cmp	r0, #0
   3096c:	beq	309a8 <crc32@@Base+0x1664c>
   30970:	ldr	r3, [sp, #8]
   30974:	cmp	r3, #4
   30978:	bne	30a00 <crc32@@Base+0x166a4>
   3097c:	ldr	r3, [r0]
   30980:	ubfx	r0, r3, #8, #8
   30984:	ubfx	r2, r3, #16, #8
   30988:	lsr	r1, r3, #24
   3098c:	orr	r1, r1, r3, lsl #24
   30990:	orr	r1, r1, r0, lsl #16
   30994:	orr	r1, r1, r2, lsl #8
   30998:	cmn	r1, #1
   3099c:	beq	30a00 <crc32@@Base+0x166a4>
   309a0:	cmp	r1, #0
   309a4:	bne	30a08 <crc32@@Base+0x166ac>
   309a8:	mov	r1, r9
   309ac:	mov	r0, r6
   309b0:	movw	r2, #56816	; 0xddf0
   309b4:	add	r3, sp, #4
   309b8:	movt	r2, #3
   309bc:	bl	31b04 <crc32@@Base+0x177a8>
   309c0:	subs	r5, r0, #0
   309c4:	ldreq	r0, [sp, #4]
   309c8:	beq	309d8 <crc32@@Base+0x1667c>
   309cc:	mov	r0, r8
   309d0:	mov	r1, r5
   309d4:	bl	31e60 <crc32@@Base+0x17b04>
   309d8:	cmp	r0, #0
   309dc:	blt	30a18 <crc32@@Base+0x166bc>
   309e0:	cmp	r7, #0
   309e4:	strne	r5, [r7]
   309e8:	ldr	r2, [sp, #12]
   309ec:	ldr	r3, [r4]
   309f0:	cmp	r2, r3
   309f4:	bne	30a28 <crc32@@Base+0x166cc>
   309f8:	add	sp, sp, #20
   309fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   30a00:	mvn	r0, #5
   30a04:	b	309e8 <crc32@@Base+0x1668c>
   30a08:	mov	r0, r8
   30a0c:	bl	322ac <crc32@@Base+0x17f50>
   30a10:	cmp	r0, #0
   30a14:	bge	309e0 <crc32@@Base+0x16684>
   30a18:	ldr	r3, [sp, #4]
   30a1c:	cmn	r3, #1
   30a20:	mvneq	r0, #15
   30a24:	b	309e8 <crc32@@Base+0x1668c>
   30a28:	bl	12538 <__stack_chk_fail@plt>
   30a2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   30a30:	movw	r8, #3824	; 0xef0
   30a34:	movt	r8, #5
   30a38:	mov	r9, r3
   30a3c:	sub	sp, sp, #28
   30a40:	mov	r6, r0
   30a44:	ldr	r3, [r8]
   30a48:	mov	r7, r1
   30a4c:	mov	r0, r2
   30a50:	mov	r1, r9
   30a54:	mov	r5, r2
   30a58:	str	r3, [sp, #20]
   30a5c:	bl	31890 <crc32@@Base+0x17534>
   30a60:	subs	r4, r0, #0
   30a64:	bge	30aa8 <crc32@@Base+0x1674c>
   30a68:	b	30ae8 <crc32@@Base+0x1678c>
   30a6c:	cmp	r1, #0
   30a70:	blt	30acc <crc32@@Base+0x16770>
   30a74:	mov	r3, r0
   30a78:	str	r1, [sp]
   30a7c:	ldr	r2, [sp, #12]
   30a80:	mov	r1, r7
   30a84:	mov	r0, r6
   30a88:	bl	2fbb8 <crc32@@Base+0x1585c>
   30a8c:	subs	r1, r0, #0
   30a90:	bne	30acc <crc32@@Base+0x16770>
   30a94:	mov	r1, r4
   30a98:	mov	r0, r5
   30a9c:	bl	318b0 <crc32@@Base+0x17554>
   30aa0:	subs	r4, r0, #0
   30aa4:	blt	30ae8 <crc32@@Base+0x1678c>
   30aa8:	mov	r1, r4
   30aac:	add	r3, sp, #16
   30ab0:	add	r2, sp, #12
   30ab4:	mov	r0, r5
   30ab8:	bl	31a94 <crc32@@Base+0x17738>
   30abc:	ldr	r1, [sp, #16]
   30ac0:	cmn	r1, #1
   30ac4:	bne	30a6c <crc32@@Base+0x16710>
   30ac8:	mvn	r1, #12
   30acc:	ldr	r2, [sp, #20]
   30ad0:	mov	r0, r1
   30ad4:	ldr	r3, [r8]
   30ad8:	cmp	r2, r3
   30adc:	bne	30b88 <crc32@@Base+0x1682c>
   30ae0:	add	sp, sp, #28
   30ae4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   30ae8:	mov	r1, r9
   30aec:	mov	r0, r5
   30af0:	bl	2e678 <crc32@@Base+0x1431c>
   30af4:	subs	r4, r0, #0
   30af8:	blt	30b60 <crc32@@Base+0x16804>
   30afc:	mov	r2, #0
   30b00:	mov	r1, r4
   30b04:	mov	r0, r5
   30b08:	bl	31804 <crc32@@Base+0x174a8>
   30b0c:	mov	r1, r7
   30b10:	mov	r2, r0
   30b14:	mov	r9, r0
   30b18:	mov	r0, r6
   30b1c:	bl	2ff0c <crc32@@Base+0x15bb0>
   30b20:	cmn	r0, #2
   30b24:	mov	r1, r0
   30b28:	beq	30b68 <crc32@@Base+0x1680c>
   30b2c:	cmp	r1, #0
   30b30:	blt	30acc <crc32@@Base+0x16770>
   30b34:	mov	r3, r4
   30b38:	mov	r2, r5
   30b3c:	mov	r0, r6
   30b40:	bl	30a2c <crc32@@Base+0x166d0>
   30b44:	subs	r1, r0, #0
   30b48:	bne	30acc <crc32@@Base+0x16770>
   30b4c:	mov	r1, r4
   30b50:	mov	r0, r5
   30b54:	bl	2e6d8 <crc32@@Base+0x1437c>
   30b58:	subs	r4, r0, #0
   30b5c:	bge	30afc <crc32@@Base+0x167a0>
   30b60:	mov	r1, #0
   30b64:	b	30acc <crc32@@Base+0x16770>
   30b68:	mov	r1, r7
   30b6c:	mov	r2, r9
   30b70:	mov	r0, r6
   30b74:	bl	317d4 <crc32@@Base+0x17478>
   30b78:	cmn	r0, #1
   30b7c:	mov	r1, r0
   30b80:	bne	30b2c <crc32@@Base+0x167d0>
   30b84:	b	30ac8 <crc32@@Base+0x1676c>
   30b88:	bl	12538 <__stack_chk_fail@plt>
   30b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30b90:	movw	r4, #3824	; 0xef0
   30b94:	movt	r4, #5
   30b98:	sub	sp, sp, #76	; 0x4c
   30b9c:	mov	sl, r0
   30ba0:	mov	fp, r1
   30ba4:	ldr	r3, [r4]
   30ba8:	str	r3, [sp, #68]	; 0x44
   30bac:	bl	31bfc <crc32@@Base+0x178a0>
   30bb0:	mov	r5, r0
   30bb4:	mov	r0, sl
   30bb8:	bl	2e22c <crc32@@Base+0x13ed0>
   30bbc:	subs	r9, r0, #0
   30bc0:	beq	30be0 <crc32@@Base+0x16884>
   30bc4:	ldr	r2, [sp, #68]	; 0x44
   30bc8:	mov	r0, r9
   30bcc:	ldr	r3, [r4]
   30bd0:	cmp	r2, r3
   30bd4:	bne	3120c <crc32@@Base+0x16eb0>
   30bd8:	add	sp, sp, #76	; 0x4c
   30bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30be0:	mov	r0, fp
   30be4:	bl	2e22c <crc32@@Base+0x13ed0>
   30be8:	subs	r9, r0, #0
   30bec:	bne	30bc4 <crc32@@Base+0x16868>
   30bf0:	mov	r1, r9
   30bf4:	mov	r2, r5
   30bf8:	mov	r0, fp
   30bfc:	bl	30674 <crc32@@Base+0x16318>
   30c00:	subs	r9, r0, #0
   30c04:	beq	30c18 <crc32@@Base+0x168bc>
   30c08:	mvn	r3, #0
   30c0c:	str	r3, [fp]
   30c10:	str	r3, [sl]
   30c14:	b	30bc4 <crc32@@Base+0x16868>
   30c18:	movw	r1, #56828	; 0xddfc
   30c1c:	mov	r0, fp
   30c20:	movt	r1, #3
   30c24:	bl	31e60 <crc32@@Base+0x17b04>
   30c28:	subs	r2, r0, #0
   30c2c:	bge	30e64 <crc32@@Base+0x16b08>
   30c30:	cmn	r2, #1
   30c34:	movne	r9, r2
   30c38:	bne	30c08 <crc32@@Base+0x168ac>
   30c3c:	movw	r1, #56848	; 0xde10
   30c40:	mov	r0, fp
   30c44:	movt	r1, #3
   30c48:	bl	31e60 <crc32@@Base+0x17b04>
   30c4c:	cmn	r0, #1
   30c50:	mov	r5, r0
   30c54:	beq	30ea8 <crc32@@Base+0x16b4c>
   30c58:	cmp	r0, #0
   30c5c:	blt	30f7c <crc32@@Base+0x16c20>
   30c60:	movw	r1, #56860	; 0xde1c
   30c64:	mov	r0, sl
   30c68:	movt	r1, #3
   30c6c:	bl	31e60 <crc32@@Base+0x17b04>
   30c70:	cmn	r0, #1
   30c74:	str	r0, [sp, #16]
   30c78:	blt	30e5c <crc32@@Base+0x16b00>
   30c7c:	mov	r1, r5
   30c80:	mov	r0, fp
   30c84:	bl	31890 <crc32@@Base+0x17534>
   30c88:	subs	r3, r0, #0
   30c8c:	str	r3, [sp, #28]
   30c90:	blt	30ea8 <crc32@@Base+0x16b4c>
   30c94:	str	r9, [sp, #40]	; 0x28
   30c98:	mov	r9, fp
   30c9c:	add	r3, sp, #52	; 0x34
   30ca0:	str	r4, [sp, #24]
   30ca4:	str	r3, [sp, #36]	; 0x24
   30ca8:	add	r3, sp, #48	; 0x30
   30cac:	str	r3, [sp, #32]
   30cb0:	ldrd	r2, [sp, #32]
   30cb4:	mov	r0, r9
   30cb8:	ldr	r1, [sp, #28]
   30cbc:	bl	31a94 <crc32@@Base+0x17738>
   30cc0:	subs	r5, r0, #0
   30cc4:	ldrne	r4, [sp, #52]	; 0x34
   30cc8:	bne	30d7c <crc32@@Base+0x16a20>
   30ccc:	b	30f84 <crc32@@Base+0x16c28>
   30cd0:	add	r3, sp, #64	; 0x40
   30cd4:	ldr	r2, [sp, #48]	; 0x30
   30cd8:	mov	r0, sl
   30cdc:	bl	31b04 <crc32@@Base+0x177a8>
   30ce0:	subs	r1, r0, #0
   30ce4:	ldreq	r0, [sp, #64]	; 0x40
   30ce8:	beq	30d64 <crc32@@Base+0x16a08>
   30cec:	mov	r0, sl
   30cf0:	bl	31e60 <crc32@@Base+0x17b04>
   30cf4:	subs	r1, r0, #0
   30cf8:	blt	30f6c <crc32@@Base+0x16c10>
   30cfc:	mov	r0, sl
   30d00:	bl	31b4c <crc32@@Base+0x177f0>
   30d04:	subs	r3, r0, #0
   30d08:	mov	fp, r3
   30d0c:	beq	31210 <crc32@@Base+0x16eb4>
   30d10:	mov	r2, r7
   30d14:	mov	r1, r5
   30d18:	mov	r0, r9
   30d1c:	bl	31d6c <crc32@@Base+0x17a10>
   30d20:	cmn	r0, #1
   30d24:	beq	30f58 <crc32@@Base+0x16bfc>
   30d28:	cmp	r0, #0
   30d2c:	blt	30fa8 <crc32@@Base+0x16c4c>
   30d30:	ldr	r3, [sp, #20]
   30d34:	add	lr, sp, #72	; 0x48
   30d38:	rev	ip, fp
   30d3c:	mov	r1, r0
   30d40:	mov	r2, r4
   30d44:	mov	r0, r9
   30d48:	str	r3, [sp]
   30d4c:	mov	r3, r8
   30d50:	str	ip, [lr, #-12]!
   30d54:	mov	ip, #4
   30d58:	str	lr, [sp, #4]
   30d5c:	str	ip, [sp, #8]
   30d60:	bl	2e810 <crc32@@Base+0x144b4>
   30d64:	cmp	r0, #0
   30d68:	bne	30fa8 <crc32@@Base+0x16c4c>
   30d6c:	ldr	r4, [sp, #52]	; 0x34
   30d70:	cmp	r4, #0
   30d74:	ble	30e84 <crc32@@Base+0x16b28>
   30d78:	mov	r5, r6
   30d7c:	mov	r2, r4
   30d80:	mov	r1, #0
   30d84:	mov	r0, r5
   30d88:	bl	12754 <memchr@plt>
   30d8c:	cmp	r0, #0
   30d90:	beq	30f58 <crc32@@Base+0x16bfc>
   30d94:	sub	r7, r0, r5
   30d98:	sub	r4, r4, #1
   30d9c:	mov	r1, #58	; 0x3a
   30da0:	mov	r0, r5
   30da4:	mov	r2, r7
   30da8:	sub	r4, r4, r7
   30dac:	str	r4, [sp, #52]	; 0x34
   30db0:	bl	12754 <memchr@plt>
   30db4:	add	r6, r7, #1
   30db8:	add	r6, r5, r6
   30dbc:	cmp	r0, #0
   30dc0:	beq	30f58 <crc32@@Base+0x16bfc>
   30dc4:	ldrb	r1, [r0]
   30dc8:	cmp	r1, #58	; 0x3a
   30dcc:	bne	30f58 <crc32@@Base+0x16bfc>
   30dd0:	sub	r2, r7, #1
   30dd4:	sub	r7, r0, r5
   30dd8:	cmp	r7, r2
   30ddc:	beq	30f58 <crc32@@Base+0x16bfc>
   30de0:	add	r4, r0, #1
   30de4:	sub	r2, r2, r7
   30de8:	mov	r0, r4
   30dec:	bl	12754 <memchr@plt>
   30df0:	cmp	r0, #0
   30df4:	beq	30f58 <crc32@@Base+0x16bfc>
   30df8:	ldrb	r3, [r0]
   30dfc:	cmp	r3, #58	; 0x3a
   30e00:	bne	30f58 <crc32@@Base+0x16bfc>
   30e04:	subs	r8, r0, r4
   30e08:	beq	30f58 <crc32@@Base+0x16bfc>
   30e0c:	add	fp, r0, #1
   30e10:	mov	r2, #10
   30e14:	add	r1, sp, #56	; 0x38
   30e18:	mov	r0, fp
   30e1c:	bl	12370 <strtoul@plt>
   30e20:	ldr	r2, [sp, #56]	; 0x38
   30e24:	cmp	fp, r2
   30e28:	ldrb	r2, [r2]
   30e2c:	movcc	r3, #0
   30e30:	movcs	r3, #1
   30e34:	cmp	r2, #0
   30e38:	movne	r3, #1
   30e3c:	cmp	r3, #0
   30e40:	str	r0, [sp, #20]
   30e44:	bne	30f58 <crc32@@Base+0x16bfc>
   30e48:	ldr	r1, [sp, #16]
   30e4c:	cmn	r1, #1
   30e50:	bne	30cd0 <crc32@@Base+0x16974>
   30e54:	ldr	r4, [sp, #24]
   30e58:	mov	fp, r9
   30e5c:	ldr	r9, [sp, #16]
   30e60:	b	30c08 <crc32@@Base+0x168ac>
   30e64:	mov	r3, r5
   30e68:	mov	r1, r9
   30e6c:	mov	r0, fp
   30e70:	bl	3071c <crc32@@Base+0x163c0>
   30e74:	cmp	r0, #0
   30e78:	beq	30c3c <crc32@@Base+0x168e0>
   30e7c:	mov	r9, r0
   30e80:	b	30c08 <crc32@@Base+0x168ac>
   30e84:	ldr	r1, [sp, #28]
   30e88:	mov	r0, r9
   30e8c:	bl	318b0 <crc32@@Base+0x17554>
   30e90:	subs	r3, r0, #0
   30e94:	str	r3, [sp, #28]
   30e98:	bge	30cb0 <crc32@@Base+0x16954>
   30e9c:	mov	fp, r9
   30ea0:	ldr	r4, [sp, #24]
   30ea4:	ldr	r9, [sp, #40]	; 0x28
   30ea8:	mov	r1, #0
   30eac:	mov	r0, fp
   30eb0:	bl	2e678 <crc32@@Base+0x1431c>
   30eb4:	subs	r5, r0, #0
   30eb8:	blt	30f30 <crc32@@Base+0x16bd4>
   30ebc:	movw	r7, #56876	; 0xde2c
   30ec0:	movt	r7, #3
   30ec4:	mov	r2, r7
   30ec8:	mov	r1, r5
   30ecc:	mov	r0, fp
   30ed0:	bl	317d4 <crc32@@Base+0x17478>
   30ed4:	cmn	r0, #1
   30ed8:	mov	r6, r0
   30edc:	beq	30f1c <crc32@@Base+0x16bc0>
   30ee0:	cmp	r0, #0
   30ee4:	blt	30fb8 <crc32@@Base+0x16c5c>
   30ee8:	mov	r1, fp
   30eec:	mov	r3, #0
   30ef0:	mov	r2, r5
   30ef4:	mov	r0, sl
   30ef8:	bl	30920 <crc32@@Base+0x165c4>
   30efc:	subs	r1, r0, #0
   30f00:	blt	30fc0 <crc32@@Base+0x16c64>
   30f04:	mov	r3, r6
   30f08:	mov	r2, fp
   30f0c:	mov	r0, sl
   30f10:	bl	30a2c <crc32@@Base+0x166d0>
   30f14:	cmp	r0, #0
   30f18:	bne	30e7c <crc32@@Base+0x16b20>
   30f1c:	mov	r1, r5
   30f20:	mov	r0, fp
   30f24:	bl	2e6d8 <crc32@@Base+0x1437c>
   30f28:	subs	r5, r0, #0
   30f2c:	bge	30ec4 <crc32@@Base+0x16b68>
   30f30:	movw	r2, #56888	; 0xde38
   30f34:	mov	r1, #0
   30f38:	movt	r2, #3
   30f3c:	mov	r0, fp
   30f40:	bl	317d4 <crc32@@Base+0x17478>
   30f44:	subs	r5, r0, #0
   30f48:	bge	30fc8 <crc32@@Base+0x16c6c>
   30f4c:	mvn	r3, #0
   30f50:	str	r3, [fp]
   30f54:	b	30bc4 <crc32@@Base+0x16868>
   30f58:	mvn	r3, #15
   30f5c:	mov	fp, r9
   30f60:	ldr	r4, [sp, #24]
   30f64:	str	r3, [sp, #16]
   30f68:	b	30e5c <crc32@@Base+0x16b00>
   30f6c:	mov	fp, r9
   30f70:	ldr	r4, [sp, #24]
   30f74:	str	r1, [sp, #16]
   30f78:	b	30e5c <crc32@@Base+0x16b00>
   30f7c:	mov	r9, r0
   30f80:	b	30c08 <crc32@@Base+0x168ac>
   30f84:	ldr	r3, [sp, #52]	; 0x34
   30f88:	cmn	r3, #1
   30f8c:	beq	3130c <crc32@@Base+0x16fb0>
   30f90:	cmp	r3, #0
   30f94:	beq	30e84 <crc32@@Base+0x16b28>
   30f98:	mov	fp, r9
   30f9c:	ldr	r4, [sp, #24]
   30fa0:	mov	r9, r3
   30fa4:	b	30c08 <crc32@@Base+0x168ac>
   30fa8:	mov	fp, r9
   30fac:	ldr	r4, [sp, #24]
   30fb0:	str	r0, [sp, #16]
   30fb4:	b	30e5c <crc32@@Base+0x16b00>
   30fb8:	mov	r9, r0
   30fbc:	b	30c08 <crc32@@Base+0x168ac>
   30fc0:	mov	r9, r1
   30fc4:	b	30c08 <crc32@@Base+0x168ac>
   30fc8:	movw	r2, #56888	; 0xde38
   30fcc:	mov	r1, #0
   30fd0:	movt	r2, #3
   30fd4:	mov	r0, sl
   30fd8:	bl	317d4 <crc32@@Base+0x17478>
   30fdc:	cmn	r0, #1
   30fe0:	str	r0, [sp, #20]
   30fe4:	beq	312f0 <crc32@@Base+0x16f94>
   30fe8:	ldr	r3, [sp, #20]
   30fec:	cmp	r3, #0
   30ff0:	blt	31204 <crc32@@Base+0x16ea8>
   30ff4:	mov	r1, r5
   30ff8:	mov	r0, fp
   30ffc:	bl	31890 <crc32@@Base+0x17534>
   31000:	subs	r3, r0, #0
   31004:	str	r3, [sp, #24]
   31008:	blt	30f4c <crc32@@Base+0x16bf0>
   3100c:	movw	r3, #56900	; 0xde44
   31010:	movw	r2, #56876	; 0xde2c
   31014:	movt	r3, #3
   31018:	movt	r2, #3
   3101c:	str	r3, [sp, #40]	; 0x28
   31020:	add	r3, sp, #52	; 0x34
   31024:	str	r2, [sp, #44]	; 0x2c
   31028:	str	r3, [sp, #36]	; 0x24
   3102c:	add	r3, sp, #48	; 0x30
   31030:	str	r9, [sp, #28]
   31034:	str	r3, [sp, #32]
   31038:	str	r4, [sp, #16]
   3103c:	ldr	r3, [sp, #32]
   31040:	mov	r0, fp
   31044:	ldr	r2, [sp, #36]	; 0x24
   31048:	ldr	r1, [sp, #24]
   3104c:	bl	31a94 <crc32@@Base+0x17738>
   31050:	subs	r8, r0, #0
   31054:	beq	311e8 <crc32@@Base+0x16e8c>
   31058:	ldr	r6, [sp, #48]	; 0x30
   3105c:	cmp	r6, #0
   31060:	ble	3131c <crc32@@Base+0x16fc0>
   31064:	mov	r2, r6
   31068:	mov	r1, #0
   3106c:	bl	12754 <memchr@plt>
   31070:	sub	r3, r6, #1
   31074:	add	r3, r8, r3
   31078:	cmp	r0, r3
   3107c:	bne	3131c <crc32@@Base+0x16fc0>
   31080:	ldrb	r1, [r8]
   31084:	add	r6, r8, r6
   31088:	cmp	r1, #47	; 0x2f
   3108c:	bne	3131c <crc32@@Base+0x16fc0>
   31090:	add	r7, r8, #1
   31094:	mov	r0, r7
   31098:	bl	12820 <strchr@plt>
   3109c:	subs	r9, r0, #0
   310a0:	beq	31344 <crc32@@Base+0x16fe8>
   310a4:	sub	r3, r6, r9
   310a8:	sub	r8, r9, r8
   310ac:	cmp	r3, #12
   310b0:	sub	r8, r8, #1
   310b4:	ble	31344 <crc32@@Base+0x16fe8>
   310b8:	ldr	r1, [sp, #40]	; 0x28
   310bc:	mov	r2, #13
   310c0:	bl	12784 <memcmp@plt>
   310c4:	subs	r1, r0, #0
   310c8:	bne	31344 <crc32@@Base+0x16fe8>
   310cc:	mov	r2, r7
   310d0:	mov	r3, r8
   310d4:	mov	r0, fp
   310d8:	add	r9, r9, #13
   310dc:	bl	316e4 <crc32@@Base+0x17388>
   310e0:	sub	r6, r6, r9
   310e4:	subs	r7, r0, #0
   310e8:	blt	31344 <crc32@@Base+0x16fe8>
   310ec:	ldr	r2, [sp, #44]	; 0x2c
   310f0:	mov	r1, r7
   310f4:	mov	r0, fp
   310f8:	bl	317d4 <crc32@@Base+0x17478>
   310fc:	cmp	r0, #0
   31100:	blt	31344 <crc32@@Base+0x16fe8>
   31104:	mov	r2, r7
   31108:	mov	r1, fp
   3110c:	mov	r0, sl
   31110:	add	r3, sp, #56	; 0x38
   31114:	bl	30920 <crc32@@Base+0x165c4>
   31118:	subs	r5, r0, #0
   3111c:	blt	31338 <crc32@@Base+0x16fdc>
   31120:	ldr	r0, [sp, #56]	; 0x38
   31124:	cmp	r0, #0
   31128:	beq	31224 <crc32@@Base+0x16ec8>
   3112c:	bl	1267c <strlen@plt>
   31130:	mov	r5, r0
   31134:	cmp	r5, #1
   31138:	movle	r3, r5
   3113c:	addgt	r3, r5, #1
   31140:	add	r1, sp, #60	; 0x3c
   31144:	add	r3, r3, r6
   31148:	str	r1, [sp]
   3114c:	ldr	r2, [sp, #52]	; 0x34
   31150:	add	r3, r3, #1
   31154:	ldr	r1, [sp, #20]
   31158:	mov	r0, sl
   3115c:	bl	2faa0 <crc32@@Base+0x15744>
   31160:	subs	r4, r0, #0
   31164:	blt	312e4 <crc32@@Base+0x16f88>
   31168:	ldr	r1, [sp, #56]	; 0x38
   3116c:	cmp	r1, #0
   31170:	beq	31290 <crc32@@Base+0x16f34>
   31174:	cmp	r5, #1
   31178:	ldr	r7, [sp, #60]	; 0x3c
   3117c:	addgt	r8, r5, #1
   31180:	ble	311dc <crc32@@Base+0x16e80>
   31184:	mov	r2, r8
   31188:	mov	r0, r7
   3118c:	bl	12658 <memcpy@plt>
   31190:	mov	r2, r6
   31194:	add	r6, r7, r6
   31198:	mov	r3, #47	; 0x2f
   3119c:	strb	r3, [r7, r5]
   311a0:	add	r5, r6, r5
   311a4:	mov	r1, r9
   311a8:	add	r0, r7, r8
   311ac:	bl	12658 <memcpy@plt>
   311b0:	mov	r3, #0
   311b4:	ldr	r1, [sp, #24]
   311b8:	mov	r0, fp
   311bc:	strb	r3, [r5, #1]
   311c0:	bl	318b0 <crc32@@Base+0x17554>
   311c4:	subs	r3, r0, #0
   311c8:	str	r3, [sp, #24]
   311cc:	bge	3103c <crc32@@Base+0x16ce0>
   311d0:	ldr	r9, [sp, #28]
   311d4:	ldr	r4, [sp, #16]
   311d8:	b	30f4c <crc32@@Base+0x16bf0>
   311dc:	mov	r8, r5
   311e0:	sub	r5, r5, #1
   311e4:	b	31190 <crc32@@Base+0x16e34>
   311e8:	ldr	r3, [sp, #48]	; 0x30
   311ec:	ldr	r9, [sp, #28]
   311f0:	cmp	r3, #0
   311f4:	ldr	r4, [sp, #16]
   311f8:	beq	30f4c <crc32@@Base+0x16bf0>
   311fc:	mov	r9, r3
   31200:	b	30c08 <crc32@@Base+0x168ac>
   31204:	ldr	r3, [sp, #20]
   31208:	b	311fc <crc32@@Base+0x16ea0>
   3120c:	bl	12538 <__stack_chk_fail@plt>
   31210:	mvn	r3, #0
   31214:	mov	fp, r9
   31218:	ldr	r4, [sp, #24]
   3121c:	str	r3, [sp, #16]
   31220:	b	30e5c <crc32@@Base+0x16b00>
   31224:	mov	r0, sl
   31228:	bl	2e22c <crc32@@Base+0x13ed0>
   3122c:	subs	r4, r0, #0
   31230:	bne	31280 <crc32@@Base+0x16f24>
   31234:	add	r2, sp, #64	; 0x40
   31238:	mov	r1, r5
   3123c:	mov	r0, sl
   31240:	bl	31804 <crc32@@Base+0x174a8>
   31244:	cmp	r0, #0
   31248:	beq	3127c <crc32@@Base+0x16f20>
   3124c:	ldr	r3, [sp, #64]	; 0x40
   31250:	cmp	r3, #0
   31254:	beq	31328 <crc32@@Base+0x16fcc>
   31258:	mov	r1, r5
   3125c:	mov	r0, sl
   31260:	bl	32160 <crc32@@Base+0x17e04>
   31264:	subs	r5, r0, #0
   31268:	blt	31338 <crc32@@Base+0x16fdc>
   3126c:	ldr	r3, [sp, #64]	; 0x40
   31270:	add	r3, r3, #1
   31274:	add	r4, r4, r3
   31278:	b	31234 <crc32@@Base+0x16ed8>
   3127c:	ldr	r4, [sp, #64]	; 0x40
   31280:	cmp	r4, #0
   31284:	blt	312e4 <crc32@@Base+0x16f88>
   31288:	mov	r5, r4
   3128c:	b	31134 <crc32@@Base+0x16dd8>
   31290:	add	r3, sp, #56	; 0x38
   31294:	mov	r2, r7
   31298:	mov	r1, fp
   3129c:	mov	r0, sl
   312a0:	bl	30920 <crc32@@Base+0x165c4>
   312a4:	subs	r4, r0, #0
   312a8:	blt	312e4 <crc32@@Base+0x16f88>
   312ac:	cmp	r5, #1
   312b0:	ldr	r7, [sp, #60]	; 0x3c
   312b4:	ble	311dc <crc32@@Base+0x16e80>
   312b8:	ldr	r1, [sp, #56]	; 0x38
   312bc:	add	r8, r5, #1
   312c0:	cmp	r1, #0
   312c4:	bne	31184 <crc32@@Base+0x16e28>
   312c8:	mov	r1, r4
   312cc:	mov	r3, r8
   312d0:	mov	r2, r7
   312d4:	mov	r0, sl
   312d8:	bl	31eb0 <crc32@@Base+0x17b54>
   312dc:	subs	r4, r0, #0
   312e0:	bge	31190 <crc32@@Base+0x16e34>
   312e4:	mov	r3, r4
   312e8:	ldr	r4, [sp, #16]
   312ec:	b	311fc <crc32@@Base+0x16ea0>
   312f0:	movw	r2, #56888	; 0xde38
   312f4:	mov	r1, #0
   312f8:	movt	r2, #3
   312fc:	mov	r0, sl
   31300:	bl	2ff0c <crc32@@Base+0x15bb0>
   31304:	str	r0, [sp, #20]
   31308:	b	30fe8 <crc32@@Base+0x16c8c>
   3130c:	mov	fp, r9
   31310:	ldr	r4, [sp, #24]
   31314:	mvn	r9, #12
   31318:	b	30c08 <crc32@@Base+0x168ac>
   3131c:	ldr	r4, [sp, #16]
   31320:	mvn	r3, #14
   31324:	b	311fc <crc32@@Base+0x16ea0>
   31328:	cmp	r4, #0
   3132c:	moveq	r5, #1
   31330:	beq	31134 <crc32@@Base+0x16dd8>
   31334:	b	31280 <crc32@@Base+0x16f24>
   31338:	ldr	r4, [sp, #16]
   3133c:	mov	r3, r5
   31340:	b	311fc <crc32@@Base+0x16ea0>
   31344:	ldr	r4, [sp, #16]
   31348:	mvn	r3, #15
   3134c:	b	311fc <crc32@@Base+0x16ea0>
   31350:	push	{r4, r5, r6, lr}
   31354:	mov	r2, r1
   31358:	mov	r5, r1
   3135c:	mov	r1, #47	; 0x2f
   31360:	mov	r6, r0
   31364:	bl	12754 <memchr@plt>
   31368:	mov	r2, r5
   3136c:	mov	r1, #58	; 0x3a
   31370:	mov	r4, r0
   31374:	mov	r0, r6
   31378:	bl	12754 <memchr@plt>
   3137c:	cmp	r4, #0
   31380:	cmpne	r0, #0
   31384:	bne	31394 <crc32@@Base+0x17038>
   31388:	cmp	r4, #0
   3138c:	movne	r0, r4
   31390:	pop	{r4, r5, r6, pc}
   31394:	cmp	r0, r4
   31398:	movcs	r0, r4
   3139c:	pop	{r4, r5, r6, pc}
   313a0:	push	{r4, r5, r6, lr}
   313a4:	movw	r5, #3824	; 0xef0
   313a8:	movt	r5, #5
   313ac:	sub	sp, sp, #8
   313b0:	mov	r6, r0
   313b4:	mov	r4, r1
   313b8:	ldr	r3, [r5]
   313bc:	str	r3, [sp, #4]
   313c0:	mov	r2, sp
   313c4:	mov	r1, r4
   313c8:	mov	r0, r6
   313cc:	bl	2e3a8 <crc32@@Base+0x1404c>
   313d0:	cmp	r0, #3
   313d4:	beq	31418 <crc32@@Base+0x170bc>
   313d8:	cmp	r0, #9
   313dc:	bne	31404 <crc32@@Base+0x170a8>
   313e0:	ldr	r0, [sp]
   313e4:	cmp	r0, #0
   313e8:	mvnge	r0, #10
   313ec:	ldr	r2, [sp, #4]
   313f0:	ldr	r3, [r5]
   313f4:	cmp	r2, r3
   313f8:	bne	31420 <crc32@@Base+0x170c4>
   313fc:	add	sp, sp, #8
   31400:	pop	{r4, r5, r6, pc}
   31404:	cmp	r0, #4
   31408:	ldr	r4, [sp]
   3140c:	beq	313c0 <crc32@@Base+0x17064>
   31410:	mvn	r0, #0
   31414:	b	313ec <crc32@@Base+0x17090>
   31418:	mov	r0, r4
   3141c:	b	313ec <crc32@@Base+0x17090>
   31420:	bl	12538 <__stack_chk_fail@plt>
   31424:	ldr	r2, [r0, #12]
   31428:	push	{lr}		; (str lr, [sp, #-4]!)
   3142c:	ubfx	lr, r2, #8, #8
   31430:	lsr	r3, r2, #24
   31434:	ubfx	ip, r2, #16, #8
   31438:	orr	r3, r3, r2, lsl #24
   3143c:	orr	r3, r3, lr, lsl #16
   31440:	orr	r3, r3, ip, lsl #8
   31444:	add	r1, r3, r1
   31448:	add	r0, r0, r1
   3144c:	pop	{pc}		; (ldr pc, [sp], #4)
   31450:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31454:	sub	sp, sp, #28
   31458:	mov	r4, r1
   3145c:	mov	r5, r0
   31460:	str	r2, [sp]
   31464:	str	r3, [sp, #12]
   31468:	bl	2e22c <crc32@@Base+0x13ed0>
   3146c:	cmp	r0, #0
   31470:	bne	315e0 <crc32@@Base+0x17284>
   31474:	ldr	r3, [r5, #16]
   31478:	mov	r9, #0
   3147c:	ubfx	ip, r3, #8, #8
   31480:	ubfx	r2, r3, #16, #8
   31484:	lsr	r1, r3, #24
   31488:	orr	r1, r1, r3, lsl #24
   3148c:	orr	r1, r1, ip, lsl #16
   31490:	orr	r1, r1, r2, lsl #8
   31494:	add	r1, r1, r4, lsl #4
   31498:	add	ip, r5, r1
   3149c:	ldr	r1, [r5, r1]
   314a0:	ldr	r4, [ip, #4]
   314a4:	ubfx	r5, r1, #8, #8
   314a8:	lsl	fp, r1, #24
   314ac:	lsr	lr, r4, #24
   314b0:	lsl	r7, r5, #16
   314b4:	orr	r8, r0, lr
   314b8:	orr	fp, fp, r7
   314bc:	ubfx	lr, r1, #16, #8
   314c0:	orr	sl, r8, r0
   314c4:	strd	sl, [sp, #16]
   314c8:	uxtb	r8, r4
   314cc:	ubfx	fp, r4, #8, #8
   314d0:	lsr	r7, r1, #24
   314d4:	ubfx	r1, r4, #16, #8
   314d8:	ldrd	r4, [sp, #16]
   314dc:	lsl	r3, lr, #8
   314e0:	orr	r4, r4, r0
   314e4:	orr	r5, r5, r3
   314e8:	orr	r3, r5, r7
   314ec:	orr	r2, r4, r0
   314f0:	lsr	r5, r8, #8
   314f4:	lsl	r4, r8, #24
   314f8:	uxtb	r8, fp
   314fc:	orr	sl, r2, r4
   31500:	uxtb	r4, r1
   31504:	orr	fp, r3, r5
   31508:	lsl	r6, r8, #16
   3150c:	lsr	r7, r8, #16
   31510:	lsl	r2, r4, #8
   31514:	orr	sl, sl, r6
   31518:	orr	r6, sl, r2
   3151c:	ldr	r2, [sp]
   31520:	lsr	r3, r4, #24
   31524:	orr	fp, fp, r7
   31528:	orr	r7, fp, r3
   3152c:	str	r0, [sp]
   31530:	strd	r6, [r2]
   31534:	ldr	r1, [ip, #8]
   31538:	ldr	ip, [ip, #12]
   3153c:	ubfx	lr, r1, #8, #8
   31540:	ubfx	r6, r1, #16, #8
   31544:	lsl	fp, r1, #24
   31548:	ubfx	sl, ip, #8, #8
   3154c:	lsl	r5, lr, #16
   31550:	lsr	lr, ip, #24
   31554:	orr	r8, r0, lr
   31558:	lsl	r3, r6, #8
   3155c:	orr	r7, fp, r5
   31560:	orr	r6, r8, r0
   31564:	orr	r5, r7, r3
   31568:	uxtb	r8, ip
   3156c:	orr	r4, r6, r0
   31570:	ubfx	ip, ip, #16, #8
   31574:	lsr	r1, r1, #24
   31578:	str	r1, [sp, #4]
   3157c:	mov	r6, r4
   31580:	mov	r7, r5
   31584:	lsr	r3, r8, #8
   31588:	ldrd	r4, [sp]
   3158c:	lsl	r2, r8, #24
   31590:	uxtb	r8, ip
   31594:	strd	r8, [sp]
   31598:	uxtb	sl, sl
   3159c:	ldr	r1, [sp]
   315a0:	orr	r5, r5, r7
   315a4:	orr	r9, r3, r5
   315a8:	lsr	r7, sl, #16
   315ac:	orr	r3, r9, r7
   315b0:	orr	r4, r4, r6
   315b4:	lsr	r1, r1, #24
   315b8:	orr	r8, r2, r4
   315bc:	lsl	r6, sl, #16
   315c0:	mov	r5, r1
   315c4:	ldr	r1, [sp]
   315c8:	orr	r5, r5, r3
   315cc:	ldr	r3, [sp, #12]
   315d0:	orr	r2, r8, r6
   315d4:	lsl	r1, r1, #8
   315d8:	orr	r4, r1, r2
   315dc:	strd	r4, [r3]
   315e0:	add	sp, sp, #28
   315e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   315e8:	ldr	r2, [r0, #16]
   315ec:	mov	r1, #0
   315f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   315f4:	ubfx	lr, r2, #8, #8
   315f8:	lsr	r3, r2, #24
   315fc:	ubfx	ip, r2, #16, #8
   31600:	orr	r3, r3, r2, lsl #24
   31604:	sub	sp, sp, #12
   31608:	orr	r3, r3, lr, lsl #16
   3160c:	orr	r3, r3, ip, lsl #8
   31610:	add	r0, r0, r3
   31614:	b	3161c <crc32@@Base+0x172c0>
   31618:	add	r1, r1, #1
   3161c:	ldr	ip, [r0, #8]
   31620:	mov	r8, #0
   31624:	ldr	r6, [r0, #12]
   31628:	add	r0, r0, #16
   3162c:	ubfx	lr, ip, #8, #8
   31630:	ubfx	r4, ip, #16, #8
   31634:	lsl	r3, ip, #24
   31638:	str	r3, [sp, #4]
   3163c:	mov	r3, #0
   31640:	str	r3, [sp]
   31644:	ldrd	r2, [sp]
   31648:	lsl	fp, lr, #16
   3164c:	lsr	lr, r6, #24
   31650:	lsl	r9, r4, #8
   31654:	mov	r5, r3
   31658:	mov	r4, r2
   3165c:	orr	r4, r4, lr
   31660:	ubfx	lr, r6, #8, #8
   31664:	orr	r2, r4, r2
   31668:	orr	r3, r5, fp
   3166c:	orr	r2, r2, r8
   31670:	lsr	fp, ip, #24
   31674:	uxtb	r8, r6
   31678:	ubfx	ip, r6, #16, #8
   3167c:	ldrd	r6, [sp]
   31680:	orr	r3, r3, r9
   31684:	lsr	r5, r8, #8
   31688:	orr	r7, r3, fp
   3168c:	lsl	r4, r8, #24
   31690:	orr	r3, r7, r5
   31694:	mov	sl, r6
   31698:	orr	r6, r2, sl
   3169c:	uxtb	sl, lr
   316a0:	orr	r2, r6, r4
   316a4:	uxtb	r6, ip
   316a8:	lsr	r9, sl, #16
   316ac:	lsl	r8, sl, #16
   316b0:	orr	r3, r3, r9
   316b4:	orr	r2, r2, r8
   316b8:	mov	r9, r3
   316bc:	lsr	r3, r6, #24
   316c0:	mov	r5, r3
   316c4:	lsl	r3, r6, #8
   316c8:	orr	r4, r3, r2
   316cc:	orr	r5, r5, r9
   316d0:	orrs	r3, r4, r5
   316d4:	bne	31618 <crc32@@Base+0x172bc>
   316d8:	mov	r0, r1
   316dc:	add	sp, sp, #12
   316e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   316e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   316e8:	movw	r6, #3824	; 0xef0
   316ec:	movt	r6, #5
   316f0:	mov	r8, r2
   316f4:	sub	sp, sp, #8
   316f8:	mov	r4, r1
   316fc:	ldr	r2, [r6]
   31700:	mov	r7, r3
   31704:	mov	r5, r0
   31708:	str	r2, [sp, #4]
   3170c:	bl	2e22c <crc32@@Base+0x13ed0>
   31710:	cmp	r0, #0
   31714:	bne	317ac <crc32@@Base+0x17450>
   31718:	cmp	r4, #0
   3171c:	str	r0, [sp]
   31720:	blt	317a8 <crc32@@Base+0x1744c>
   31724:	add	sl, r7, #1
   31728:	mov	r1, r4
   3172c:	mov	r2, sp
   31730:	mov	r0, r5
   31734:	bl	2e588 <crc32@@Base+0x1422c>
   31738:	ldr	r3, [sp]
   3173c:	cmp	r3, #0
   31740:	cmpge	r0, #0
   31744:	mov	r4, r0
   31748:	blt	317c4 <crc32@@Base+0x17468>
   3174c:	cmp	r3, #1
   31750:	bne	31728 <crc32@@Base+0x173cc>
   31754:	mov	r2, sl
   31758:	add	r1, r4, #4
   3175c:	mov	r0, r5
   31760:	bl	2e2f4 <crc32@@Base+0x13f98>
   31764:	subs	r9, r0, #0
   31768:	beq	31728 <crc32@@Base+0x173cc>
   3176c:	mov	r2, r7
   31770:	mov	r1, r8
   31774:	bl	12784 <memcmp@plt>
   31778:	cmp	r0, #0
   3177c:	bne	31728 <crc32@@Base+0x173cc>
   31780:	ldrb	r9, [r9, r7]
   31784:	cmp	r9, #0
   31788:	beq	317a8 <crc32@@Base+0x1744c>
   3178c:	mov	r2, r7
   31790:	mov	r1, #64	; 0x40
   31794:	mov	r0, r8
   31798:	bl	12754 <memchr@plt>
   3179c:	cmp	r9, #64	; 0x40
   317a0:	cmpeq	r0, #0
   317a4:	bne	31728 <crc32@@Base+0x173cc>
   317a8:	mov	r0, r4
   317ac:	ldr	r2, [sp, #4]
   317b0:	ldr	r3, [r6]
   317b4:	cmp	r2, r3
   317b8:	bne	317d0 <crc32@@Base+0x17474>
   317bc:	add	sp, sp, #8
   317c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   317c4:	cmp	r3, #0
   317c8:	mvnlt	r4, #0
   317cc:	b	317a8 <crc32@@Base+0x1744c>
   317d0:	bl	12538 <__stack_chk_fail@plt>
   317d4:	push	{r4, r5, r6, lr}
   317d8:	mov	r5, r0
   317dc:	mov	r0, r2
   317e0:	mov	r4, r2
   317e4:	mov	r6, r1
   317e8:	bl	1267c <strlen@plt>
   317ec:	mov	r2, r4
   317f0:	mov	r1, r6
   317f4:	mov	r3, r0
   317f8:	mov	r0, r5
   317fc:	pop	{r4, r5, r6, lr}
   31800:	b	316e4 <crc32@@Base+0x17388>
   31804:	push	{r4, r5, r6, r7, r8, lr}
   31808:	mov	r4, r0
   3180c:	mov	r7, r1
   31810:	mov	r5, r2
   31814:	ldr	r6, [r0, #8]
   31818:	bl	2e22c <crc32@@Base+0x13ed0>
   3181c:	cmp	r0, #0
   31820:	beq	3183c <crc32@@Base+0x174e0>
   31824:	cmp	r5, #0
   31828:	strne	r0, [r5]
   3182c:	movne	r4, #0
   31830:	moveq	r4, r5
   31834:	mov	r0, r4
   31838:	pop	{r4, r5, r6, r7, r8, pc}
   3183c:	mov	r1, r7
   31840:	mov	r0, r4
   31844:	bl	2e508 <crc32@@Base+0x141ac>
   31848:	cmp	r0, #0
   3184c:	blt	31824 <crc32@@Base+0x174c8>
   31850:	lsr	r3, r6, #24
   31854:	ubfx	r2, r6, #8, #8
   31858:	orr	r3, r3, r6, lsl #24
   3185c:	ubfx	r6, r6, #16, #8
   31860:	orr	r3, r3, r2, lsl #16
   31864:	cmp	r5, #0
   31868:	orr	r6, r3, r6, lsl #8
   3186c:	add	r6, r6, r7
   31870:	add	r4, r4, r6
   31874:	add	r4, r4, #4
   31878:	beq	31834 <crc32@@Base+0x174d8>
   3187c:	mov	r0, r4
   31880:	bl	1267c <strlen@plt>
   31884:	str	r0, [r5]
   31888:	mov	r0, r4
   3188c:	pop	{r4, r5, r6, r7, r8, pc}
   31890:	push	{r4, lr}
   31894:	mov	r4, r0
   31898:	bl	2e508 <crc32@@Base+0x141ac>
   3189c:	subs	r1, r0, #0
   318a0:	poplt	{r4, pc}
   318a4:	mov	r0, r4
   318a8:	pop	{r4, lr}
   318ac:	b	313a0 <crc32@@Base+0x17044>
   318b0:	push	{r4, lr}
   318b4:	mov	r4, r0
   318b8:	bl	2e548 <crc32@@Base+0x141ec>
   318bc:	subs	r1, r0, #0
   318c0:	poplt	{r4, pc}
   318c4:	mov	r0, r4
   318c8:	pop	{r4, lr}
   318cc:	b	313a0 <crc32@@Base+0x17044>
   318d0:	push	{r4, r5, r6, lr}
   318d4:	mov	r5, r2
   318d8:	mov	r4, r0
   318dc:	mov	r6, r1
   318e0:	bl	2e548 <crc32@@Base+0x141ec>
   318e4:	cmp	r0, #0
   318e8:	blt	3193c <crc32@@Base+0x175e0>
   318ec:	ldr	r3, [r4, #8]
   318f0:	cmp	r5, #0
   318f4:	ubfx	r1, r3, #8, #8
   318f8:	ubfx	r2, r3, #16, #8
   318fc:	lsr	r0, r3, #24
   31900:	orr	r0, r0, r3, lsl #24
   31904:	orr	r0, r0, r1, lsl #16
   31908:	orr	r0, r0, r2, lsl #8
   3190c:	add	r0, r0, r6
   31910:	add	r0, r4, r0
   31914:	popeq	{r4, r5, r6, pc}
   31918:	ldr	r2, [r0, #4]
   3191c:	ubfx	ip, r2, #8, #8
   31920:	ubfx	r1, r2, #16, #8
   31924:	lsr	r3, r2, #24
   31928:	orr	r3, r3, r2, lsl #24
   3192c:	orr	r3, r3, ip, lsl #16
   31930:	orr	r3, r3, r1, lsl #8
   31934:	str	r3, [r5]
   31938:	pop	{r4, r5, r6, pc}
   3193c:	cmp	r5, #0
   31940:	strne	r0, [r5]
   31944:	mov	r0, #0
   31948:	pop	{r4, r5, r6, pc}
   3194c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31950:	mov	sl, r2
   31954:	mov	r7, r3
   31958:	mov	r5, r0
   3195c:	ldr	r8, [sp, #40]	; 0x28
   31960:	bl	31890 <crc32@@Base+0x17534>
   31964:	subs	r6, r0, #0
   31968:	blt	31a18 <crc32@@Base+0x176bc>
   3196c:	add	r9, r7, #1
   31970:	b	31988 <crc32@@Base+0x1762c>
   31974:	mov	r1, r6
   31978:	mov	r0, r5
   3197c:	bl	318b0 <crc32@@Base+0x17554>
   31980:	subs	r6, r0, #0
   31984:	blt	31a18 <crc32@@Base+0x176bc>
   31988:	mov	r1, r6
   3198c:	mov	r2, r8
   31990:	mov	r0, r5
   31994:	bl	318d0 <crc32@@Base+0x17574>
   31998:	mov	r1, r9
   3199c:	subs	fp, r0, #0
   319a0:	beq	31a14 <crc32@@Base+0x176b8>
   319a4:	ldr	r3, [fp, #8]
   319a8:	ldr	r2, [r5, #12]
   319ac:	ubfx	lr, r3, #8, #8
   319b0:	ubfx	r0, r3, #16, #8
   319b4:	lsr	r4, r3, #24
   319b8:	ubfx	ip, r2, #8, #8
   319bc:	orr	r4, r4, r3, lsl #24
   319c0:	lsr	r3, r2, #24
   319c4:	orr	r3, r3, r2, lsl #24
   319c8:	ubfx	r2, r2, #16, #8
   319cc:	orr	r4, r4, lr, lsl #16
   319d0:	orr	r3, r3, ip, lsl #16
   319d4:	orr	r4, r4, r0, lsl #8
   319d8:	orr	r3, r3, r2, lsl #8
   319dc:	add	r4, r4, r3
   319e0:	add	r4, r5, r4
   319e4:	mov	r0, r4
   319e8:	bl	12184 <strnlen@plt>
   319ec:	cmp	r0, r7
   319f0:	bne	31974 <crc32@@Base+0x17618>
   319f4:	mov	r0, r4
   319f8:	mov	r2, r7
   319fc:	mov	r1, sl
   31a00:	bl	12784 <memcmp@plt>
   31a04:	cmp	r0, #0
   31a08:	bne	31974 <crc32@@Base+0x17618>
   31a0c:	mov	r0, fp
   31a10:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a14:	mvn	r6, #12
   31a18:	cmp	r8, #0
   31a1c:	strne	r6, [r8]
   31a20:	movne	fp, #0
   31a24:	moveq	fp, r8
   31a28:	mov	r0, fp
   31a2c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a30:	push	{r4, r5, r6, r7, lr}
   31a34:	mov	r5, r0
   31a38:	sub	sp, sp, #12
   31a3c:	mov	r0, r2
   31a40:	mov	r7, r3
   31a44:	mov	r4, r2
   31a48:	mov	r6, r1
   31a4c:	bl	1267c <strlen@plt>
   31a50:	str	r7, [sp]
   31a54:	mov	r2, r4
   31a58:	mov	r1, r6
   31a5c:	mov	r3, r0
   31a60:	mov	r0, r5
   31a64:	bl	3194c <crc32@@Base+0x175f0>
   31a68:	add	sp, sp, #12
   31a6c:	pop	{r4, r5, r6, r7, pc}
   31a70:	push	{lr}		; (str lr, [sp, #-4]!)
   31a74:	sub	sp, sp, #12
   31a78:	ldr	ip, [sp, #16]
   31a7c:	str	ip, [sp]
   31a80:	bl	3194c <crc32@@Base+0x175f0>
   31a84:	cmp	r0, #0
   31a88:	addne	r0, r0, #12
   31a8c:	add	sp, sp, #12
   31a90:	pop	{pc}		; (ldr pc, [sp], #4)
   31a94:	push	{r4, r5, r6, r7, r8, lr}
   31a98:	mov	r4, r2
   31a9c:	mov	r2, r3
   31aa0:	mov	r5, r0
   31aa4:	bl	318d0 <crc32@@Base+0x17574>
   31aa8:	cmp	r0, #0
   31aac:	popeq	{r4, r5, r6, r7, r8, pc}
   31ab0:	cmp	r4, #0
   31ab4:	beq	31afc <crc32@@Base+0x177a0>
   31ab8:	ldr	ip, [r0, #8]
   31abc:	ldr	r1, [r5, #12]
   31ac0:	ubfx	r7, ip, #8, #8
   31ac4:	ubfx	lr, ip, #16, #8
   31ac8:	ubfx	r6, r1, #8, #8
   31acc:	lsr	r2, ip, #24
   31ad0:	lsr	r3, r1, #24
   31ad4:	orr	r2, r2, ip, lsl #24
   31ad8:	orr	r3, r3, r1, lsl #24
   31adc:	ubfx	r1, r1, #16, #8
   31ae0:	orr	r2, r2, r7, lsl #16
   31ae4:	orr	r3, r3, r6, lsl #16
   31ae8:	orr	r2, r2, lr, lsl #8
   31aec:	orr	r3, r3, r1, lsl #8
   31af0:	add	r3, r3, r2
   31af4:	add	r3, r5, r3
   31af8:	str	r3, [r4]
   31afc:	add	r0, r0, #12
   31b00:	pop	{r4, r5, r6, r7, r8, pc}
   31b04:	push	{r4, r5, r6, r7, lr}
   31b08:	mov	r5, r0
   31b0c:	sub	sp, sp, #12
   31b10:	mov	r0, r2
   31b14:	mov	r7, r3
   31b18:	mov	r4, r2
   31b1c:	mov	r6, r1
   31b20:	bl	1267c <strlen@plt>
   31b24:	str	r7, [sp]
   31b28:	mov	r2, r4
   31b2c:	mov	r1, r6
   31b30:	mov	r3, r0
   31b34:	mov	r0, r5
   31b38:	bl	3194c <crc32@@Base+0x175f0>
   31b3c:	cmp	r0, #0
   31b40:	addne	r0, r0, #12
   31b44:	add	sp, sp, #12
   31b48:	pop	{r4, r5, r6, r7, pc}
   31b4c:	push	{r4, r5, r6, lr}
   31b50:	movw	r4, #3824	; 0xef0
   31b54:	movt	r4, #5
   31b58:	sub	sp, sp, #8
   31b5c:	movw	r2, #56784	; 0xddd0
   31b60:	movt	r2, #3
   31b64:	ldr	ip, [r4]
   31b68:	mov	r3, sp
   31b6c:	mov	r5, r0
   31b70:	mov	r6, r1
   31b74:	str	ip, [sp, #4]
   31b78:	bl	31b04 <crc32@@Base+0x177a8>
   31b7c:	cmp	r0, #0
   31b80:	beq	31b90 <crc32@@Base+0x17834>
   31b84:	ldr	r3, [sp]
   31b88:	cmp	r3, #4
   31b8c:	beq	31bd8 <crc32@@Base+0x1787c>
   31b90:	mov	r3, sp
   31b94:	mov	r1, r6
   31b98:	mov	r0, r5
   31b9c:	movw	r2, #56792	; 0xddd8
   31ba0:	movt	r2, #3
   31ba4:	bl	31b04 <crc32@@Base+0x177a8>
   31ba8:	cmp	r0, #0
   31bac:	beq	31bc0 <crc32@@Base+0x17864>
   31bb0:	ldr	r3, [sp]
   31bb4:	cmp	r3, #4
   31bb8:	movne	r0, #0
   31bbc:	beq	31bd8 <crc32@@Base+0x1787c>
   31bc0:	ldr	r2, [sp, #4]
   31bc4:	ldr	r3, [r4]
   31bc8:	cmp	r2, r3
   31bcc:	bne	31bf8 <crc32@@Base+0x1789c>
   31bd0:	add	sp, sp, #8
   31bd4:	pop	{r4, r5, r6, pc}
   31bd8:	ldr	r3, [r0]
   31bdc:	ubfx	r1, r3, #8, #8
   31be0:	ubfx	r2, r3, #16, #8
   31be4:	lsr	r0, r3, #24
   31be8:	orr	r0, r0, r3, lsl #24
   31bec:	orr	r0, r0, r1, lsl #16
   31bf0:	orr	r0, r0, r2, lsl #8
   31bf4:	b	31bc0 <crc32@@Base+0x17864>
   31bf8:	bl	12538 <__stack_chk_fail@plt>
   31bfc:	push	{r4, r5, r6, lr}
   31c00:	mov	r2, #0
   31c04:	mvn	r1, #0
   31c08:	mov	r6, r0
   31c0c:	bl	2e588 <crc32@@Base+0x1422c>
   31c10:	cmn	r0, #1
   31c14:	beq	31c80 <crc32@@Base+0x17924>
   31c18:	cmp	r0, #0
   31c1c:	mov	r4, r0
   31c20:	movge	r5, #0
   31c24:	bge	31c34 <crc32@@Base+0x178d8>
   31c28:	b	31c74 <crc32@@Base+0x17918>
   31c2c:	cmp	r4, #0
   31c30:	blt	31c74 <crc32@@Base+0x17918>
   31c34:	mov	r1, r4
   31c38:	mov	r0, r6
   31c3c:	bl	31b4c <crc32@@Base+0x177f0>
   31c40:	mov	r1, r4
   31c44:	mov	r2, #0
   31c48:	cmn	r0, #1
   31c4c:	cmpne	r0, r5
   31c50:	mov	r3, r0
   31c54:	mov	r0, r6
   31c58:	movhi	r5, r3
   31c5c:	bl	2e588 <crc32@@Base+0x1422c>
   31c60:	cmn	r0, #1
   31c64:	mov	r4, r0
   31c68:	bne	31c2c <crc32@@Base+0x178d0>
   31c6c:	mov	r0, r5
   31c70:	pop	{r4, r5, r6, pc}
   31c74:	mvn	r5, #0
   31c78:	mov	r0, r5
   31c7c:	pop	{r4, r5, r6, pc}
   31c80:	mov	r5, #0
   31c84:	b	31c6c <crc32@@Base+0x17910>
   31c88:	push	{r4, r5, r6, r7, r8, lr}
   31c8c:	mov	r6, r0
   31c90:	mov	r7, r1
   31c94:	mvn	r4, #0
   31c98:	mov	r5, #0
   31c9c:	b	31cac <crc32@@Base+0x17950>
   31ca0:	bl	31b4c <crc32@@Base+0x177f0>
   31ca4:	cmp	r5, r0
   31ca8:	movcc	r5, r0
   31cac:	mov	r1, r4
   31cb0:	mov	r2, #0
   31cb4:	mov	r0, r6
   31cb8:	bl	2e588 <crc32@@Base+0x1422c>
   31cbc:	subs	r4, r0, #0
   31cc0:	mov	r0, r6
   31cc4:	mov	r1, r4
   31cc8:	bge	31ca0 <crc32@@Base+0x17944>
   31ccc:	cmn	r4, #1
   31cd0:	beq	31cdc <crc32@@Base+0x17980>
   31cd4:	mov	r0, r4
   31cd8:	pop	{r4, r5, r6, r7, r8, pc}
   31cdc:	cmn	r5, #2
   31ce0:	beq	31d04 <crc32@@Base+0x179a8>
   31ce4:	cmp	r7, #0
   31ce8:	moveq	r4, r7
   31cec:	beq	31cd4 <crc32@@Base+0x17978>
   31cf0:	mov	r4, #0
   31cf4:	add	r5, r5, #1
   31cf8:	mov	r0, r4
   31cfc:	str	r5, [r7]
   31d00:	pop	{r4, r5, r6, r7, r8, pc}
   31d04:	mvn	r4, #16
   31d08:	b	31cd4 <crc32@@Base+0x17978>
   31d0c:	push	{r4, r5, r6, lr}
   31d10:	mov	r5, r1
   31d14:	sub	sp, sp, #8
   31d18:	movw	r1, #56916	; 0xde54
   31d1c:	movt	r1, #3
   31d20:	mov	r6, r2
   31d24:	mov	r4, r0
   31d28:	bl	31e60 <crc32@@Base+0x17b04>
   31d2c:	subs	r1, r0, #0
   31d30:	blt	31d60 <crc32@@Base+0x17a04>
   31d34:	mov	ip, #0
   31d38:	mov	r3, r6
   31d3c:	mov	r2, r5
   31d40:	mov	r0, r4
   31d44:	str	ip, [sp]
   31d48:	bl	3194c <crc32@@Base+0x175f0>
   31d4c:	cmp	r0, #0
   31d50:	beq	31d60 <crc32@@Base+0x17a04>
   31d54:	add	r0, r0, #12
   31d58:	add	sp, sp, #8
   31d5c:	pop	{r4, r5, r6, pc}
   31d60:	mov	r0, #0
   31d64:	add	sp, sp, #8
   31d68:	pop	{r4, r5, r6, pc}
   31d6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31d70:	mov	r4, r1
   31d74:	mov	r5, r2
   31d78:	mov	r9, r0
   31d7c:	bl	2e22c <crc32@@Base+0x13ed0>
   31d80:	subs	r7, r0, #0
   31d84:	bne	31e50 <crc32@@Base+0x17af4>
   31d88:	ldrb	r3, [r4]
   31d8c:	add	r8, r4, r5
   31d90:	cmp	r3, #47	; 0x2f
   31d94:	beq	31ddc <crc32@@Base+0x17a80>
   31d98:	mov	r1, r5
   31d9c:	mov	r0, r4
   31da0:	bl	31350 <crc32@@Base+0x16ff4>
   31da4:	mov	r1, r4
   31da8:	cmp	r0, #0
   31dac:	movne	r5, r0
   31db0:	moveq	r5, r8
   31db4:	mov	r0, r9
   31db8:	sub	r2, r5, r4
   31dbc:	bl	31d0c <crc32@@Base+0x179b0>
   31dc0:	subs	r1, r0, #0
   31dc4:	beq	31e58 <crc32@@Base+0x17afc>
   31dc8:	mov	r0, r9
   31dcc:	mov	r4, r5
   31dd0:	bl	31e60 <crc32@@Base+0x17b04>
   31dd4:	ldrb	r3, [r5]
   31dd8:	mov	r7, r0
   31ddc:	cmp	r3, #0
   31de0:	cmpne	r4, r8
   31de4:	bcc	31df0 <crc32@@Base+0x17a94>
   31de8:	b	31e50 <crc32@@Base+0x17af4>
   31dec:	ldrb	r3, [r4, #1]!
   31df0:	cmp	r3, #47	; 0x2f
   31df4:	beq	31dec <crc32@@Base+0x17a90>
   31df8:	cmp	r3, #58	; 0x3a
   31dfc:	cmpne	r3, #0
   31e00:	beq	31e50 <crc32@@Base+0x17af4>
   31e04:	sub	r6, r8, r4
   31e08:	mov	r0, r4
   31e0c:	mov	r1, r6
   31e10:	bl	31350 <crc32@@Base+0x16ff4>
   31e14:	mov	r1, r7
   31e18:	mov	r2, r4
   31e1c:	subs	r5, r0, #0
   31e20:	mov	r0, r9
   31e24:	subne	r6, r5, r4
   31e28:	moveq	r5, r8
   31e2c:	mov	r3, r6
   31e30:	bl	316e4 <crc32@@Base+0x17388>
   31e34:	subs	r7, r0, #0
   31e38:	blt	31e50 <crc32@@Base+0x17af4>
   31e3c:	ldrb	r3, [r5]
   31e40:	mov	r4, r5
   31e44:	cmp	r3, #0
   31e48:	cmpne	r4, r8
   31e4c:	bcc	31df0 <crc32@@Base+0x17a94>
   31e50:	mov	r0, r7
   31e54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31e58:	mvn	r7, #4
   31e5c:	b	31e50 <crc32@@Base+0x17af4>
   31e60:	push	{r4, r5, r6, lr}
   31e64:	mov	r5, r0
   31e68:	mov	r0, r1
   31e6c:	mov	r4, r1
   31e70:	bl	1267c <strlen@plt>
   31e74:	mov	r1, r4
   31e78:	mov	r2, r0
   31e7c:	mov	r0, r5
   31e80:	pop	{r4, r5, r6, lr}
   31e84:	b	31d6c <crc32@@Base+0x17a10>
   31e88:	push	{r4, r5, r6, lr}
   31e8c:	mov	r5, r0
   31e90:	mov	r0, r1
   31e94:	mov	r4, r1
   31e98:	bl	1267c <strlen@plt>
   31e9c:	mov	r1, r4
   31ea0:	mov	r2, r0
   31ea4:	mov	r0, r5
   31ea8:	pop	{r4, r5, r6, lr}
   31eac:	b	31d0c <crc32@@Base+0x179b0>
   31eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31eb4:	movw	sl, #3824	; 0xef0
   31eb8:	movt	sl, #5
   31ebc:	mov	r6, r2
   31ec0:	sub	sp, sp, #28
   31ec4:	mov	r8, r1
   31ec8:	ldr	r2, [sl]
   31ecc:	mov	r4, r3
   31ed0:	str	r3, [sp]
   31ed4:	mov	r9, r0
   31ed8:	str	r2, [sp, #20]
   31edc:	bl	2e22c <crc32@@Base+0x13ed0>
   31ee0:	subs	fp, r0, #0
   31ee4:	bne	31fec <crc32@@Base+0x17c90>
   31ee8:	cmp	r4, #1
   31eec:	ble	32034 <crc32@@Base+0x17cd8>
   31ef0:	cmp	r8, #0
   31ef4:	str	fp, [sp, #12]
   31ef8:	movge	r7, fp
   31efc:	movge	r0, fp
   31f00:	movge	r4, fp
   31f04:	movge	r5, fp
   31f08:	blt	32028 <crc32@@Base+0x17ccc>
   31f0c:	cmp	r0, r5
   31f10:	ble	31f7c <crc32@@Base+0x17c20>
   31f14:	cmp	r7, r8
   31f18:	beq	31fd0 <crc32@@Base+0x17c74>
   31f1c:	mov	r1, r7
   31f20:	add	r2, sp, #12
   31f24:	mov	r0, r9
   31f28:	bl	2e588 <crc32@@Base+0x1422c>
   31f2c:	cmp	r0, #0
   31f30:	cmpge	r8, r0
   31f34:	mov	r7, r0
   31f38:	blt	32008 <crc32@@Base+0x17cac>
   31f3c:	ldr	r0, [sp, #12]
   31f40:	cmp	r5, r0
   31f44:	ble	31f0c <crc32@@Base+0x17bb0>
   31f48:	sub	r3, r4, #1
   31f4c:	add	r2, r6, r3
   31f50:	b	31f58 <crc32@@Base+0x17bfc>
   31f54:	sub	r3, r3, #1
   31f58:	ldrb	r1, [r2, #-1]!
   31f5c:	mov	r4, r3
   31f60:	cmp	r1, #47	; 0x2f
   31f64:	bne	31f54 <crc32@@Base+0x17bf8>
   31f68:	sub	r5, r5, #1
   31f6c:	cmp	r5, r0
   31f70:	bne	31f48 <crc32@@Base+0x17bec>
   31f74:	cmp	r0, r5
   31f78:	bgt	31f14 <crc32@@Base+0x17bb8>
   31f7c:	mov	r1, r7
   31f80:	add	r2, sp, #16
   31f84:	mov	r0, r9
   31f88:	bl	31804 <crc32@@Base+0x174a8>
   31f8c:	subs	r1, r0, #0
   31f90:	beq	32020 <crc32@@Base+0x17cc4>
   31f94:	ldr	r2, [sp, #16]
   31f98:	ldr	r0, [sp]
   31f9c:	add	r3, r2, r4
   31fa0:	cmp	r3, r0
   31fa4:	bge	31f14 <crc32@@Base+0x17bb8>
   31fa8:	add	r0, r6, r4
   31fac:	str	r3, [sp, #4]
   31fb0:	add	r4, r3, #1
   31fb4:	bl	12658 <memcpy@plt>
   31fb8:	ldr	r3, [sp, #4]
   31fbc:	cmp	r7, r8
   31fc0:	mov	r2, #47	; 0x2f
   31fc4:	add	r5, r5, #1
   31fc8:	strb	r2, [r6, r3]
   31fcc:	bne	31f1c <crc32@@Base+0x17bc0>
   31fd0:	ldr	r3, [sp, #12]
   31fd4:	cmp	r3, r5
   31fd8:	bge	32034 <crc32@@Base+0x17cd8>
   31fdc:	cmp	r4, #1
   31fe0:	mov	r3, #0
   31fe4:	subgt	r4, r4, #1
   31fe8:	strb	r3, [r6, r4]
   31fec:	ldr	r2, [sp, #20]
   31ff0:	mov	r0, fp
   31ff4:	ldr	r3, [sl]
   31ff8:	cmp	r2, r3
   31ffc:	bne	32030 <crc32@@Base+0x17cd4>
   32000:	add	sp, sp, #28
   32004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32008:	cmn	r0, #1
   3200c:	bge	32028 <crc32@@Base+0x17ccc>
   32010:	cmn	r0, #4
   32014:	movne	fp, r0
   32018:	mvneq	fp, #10
   3201c:	b	31fec <crc32@@Base+0x17c90>
   32020:	ldr	fp, [sp, #16]
   32024:	b	31fec <crc32@@Base+0x17c90>
   32028:	mvn	fp, #3
   3202c:	b	31fec <crc32@@Base+0x17c90>
   32030:	bl	12538 <__stack_chk_fail@plt>
   32034:	mvn	fp, #2
   32038:	b	31fec <crc32@@Base+0x17c90>
   3203c:	push	{r4, r5, r6, r7, r8, r9, lr}
   32040:	movw	r7, #3824	; 0xef0
   32044:	movt	r7, #5
   32048:	mov	r6, r2
   3204c:	sub	sp, sp, #12
   32050:	mov	r4, r1
   32054:	ldr	r2, [r7]
   32058:	mov	r9, r3
   3205c:	mov	r8, r0
   32060:	str	r2, [sp, #4]
   32064:	bl	2e22c <crc32@@Base+0x13ed0>
   32068:	cmp	r0, #0
   3206c:	bne	32090 <crc32@@Base+0x17d34>
   32070:	cmp	r6, #0
   32074:	blt	32104 <crc32@@Base+0x17da8>
   32078:	cmp	r4, #0
   3207c:	str	r0, [sp]
   32080:	movge	r3, r0
   32084:	mvnge	r5, #12
   32088:	bge	320c8 <crc32@@Base+0x17d6c>
   3208c:	mvn	r0, #3
   32090:	ldr	r2, [sp, #4]
   32094:	ldr	r3, [r7]
   32098:	cmp	r2, r3
   3209c:	bne	3210c <crc32@@Base+0x17db0>
   320a0:	add	sp, sp, #12
   320a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   320a8:	mov	r1, r0
   320ac:	mov	r2, sp
   320b0:	mov	r0, r8
   320b4:	bl	2e588 <crc32@@Base+0x1422c>
   320b8:	cmp	r0, #0
   320bc:	cmpge	r4, r0
   320c0:	blt	320f0 <crc32@@Base+0x17d94>
   320c4:	ldr	r3, [sp]
   320c8:	cmp	r6, r3
   320cc:	moveq	r5, r0
   320d0:	cmp	r4, r0
   320d4:	bne	320a8 <crc32@@Base+0x17d4c>
   320d8:	cmp	r9, #0
   320dc:	strne	r3, [r9]
   320e0:	cmp	r6, r3
   320e4:	movle	r0, r5
   320e8:	mvngt	r0, #0
   320ec:	b	32090 <crc32@@Base+0x17d34>
   320f0:	cmn	r0, #1
   320f4:	bge	3208c <crc32@@Base+0x17d30>
   320f8:	cmn	r0, #4
   320fc:	mvneq	r0, #10
   32100:	b	32090 <crc32@@Base+0x17d34>
   32104:	mvn	r0, #0
   32108:	b	32090 <crc32@@Base+0x17d34>
   3210c:	bl	12538 <__stack_chk_fail@plt>
   32110:	push	{r4, lr}
   32114:	movw	r4, #3824	; 0xef0
   32118:	movt	r4, #5
   3211c:	sub	sp, sp, #8
   32120:	mov	r2, #0
   32124:	ldr	ip, [r4]
   32128:	mov	r3, sp
   3212c:	str	ip, [sp, #4]
   32130:	bl	3203c <crc32@@Base+0x17ce0>
   32134:	cmp	r0, #0
   32138:	ldreq	r0, [sp]
   3213c:	beq	32144 <crc32@@Base+0x17de8>
   32140:	mvnge	r0, #12
   32144:	ldr	r2, [sp, #4]
   32148:	ldr	r3, [r4]
   3214c:	cmp	r2, r3
   32150:	bne	3215c <crc32@@Base+0x17e00>
   32154:	add	sp, sp, #8
   32158:	pop	{r4, pc}
   3215c:	bl	12538 <__stack_chk_fail@plt>
   32160:	push	{r4, r5, r6, lr}
   32164:	movw	r4, #3824	; 0xef0
   32168:	movt	r4, #5
   3216c:	sub	sp, sp, #8
   32170:	mov	r2, #0
   32174:	mov	r5, r0
   32178:	ldr	ip, [r4]
   3217c:	mov	r3, sp
   32180:	mov	r6, r1
   32184:	str	ip, [sp, #4]
   32188:	bl	3203c <crc32@@Base+0x17ce0>
   3218c:	subs	r2, r0, #0
   32190:	beq	321b4 <crc32@@Base+0x17e58>
   32194:	mvnge	r2, #12
   32198:	ldr	r1, [sp, #4]
   3219c:	mov	r0, r2
   321a0:	ldr	r3, [r4]
   321a4:	cmp	r1, r3
   321a8:	bne	321dc <crc32@@Base+0x17e80>
   321ac:	add	sp, sp, #8
   321b0:	pop	{r4, r5, r6, pc}
   321b4:	ldr	r2, [sp]
   321b8:	cmp	r2, #0
   321bc:	blt	32198 <crc32@@Base+0x17e3c>
   321c0:	mov	r3, r0
   321c4:	sub	r2, r2, #1
   321c8:	mov	r1, r6
   321cc:	mov	r0, r5
   321d0:	bl	3203c <crc32@@Base+0x17ce0>
   321d4:	mov	r2, r0
   321d8:	b	32198 <crc32@@Base+0x17e3c>
   321dc:	bl	12538 <__stack_chk_fail@plt>
   321e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   321e4:	movw	r6, #3824	; 0xef0
   321e8:	movt	r6, #5
   321ec:	mov	r8, r2
   321f0:	sub	sp, sp, #8
   321f4:	mov	sl, r1
   321f8:	ldr	r2, [r6]
   321fc:	mov	r9, r3
   32200:	mov	r5, r0
   32204:	ldr	r7, [sp, #40]	; 0x28
   32208:	str	r2, [sp, #4]
   3220c:	bl	2e22c <crc32@@Base+0x13ed0>
   32210:	subs	r4, r0, #0
   32214:	beq	32234 <crc32@@Base+0x17ed8>
   32218:	ldr	r2, [sp, #4]
   3221c:	mov	r0, r4
   32220:	ldr	r3, [r6]
   32224:	cmp	r2, r3
   32228:	bne	322a8 <crc32@@Base+0x17f4c>
   3222c:	add	sp, sp, #8
   32230:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   32234:	mov	r2, r4
   32238:	mov	r1, sl
   3223c:	mov	r0, r5
   32240:	bl	2e588 <crc32@@Base+0x1422c>
   32244:	subs	r4, r0, #0
   32248:	bge	32268 <crc32@@Base+0x17f0c>
   3224c:	b	32218 <crc32@@Base+0x17ebc>
   32250:	mov	r1, r4
   32254:	mov	r2, #0
   32258:	mov	r0, r5
   3225c:	bl	2e588 <crc32@@Base+0x1422c>
   32260:	subs	r4, r0, #0
   32264:	blt	32218 <crc32@@Base+0x17ebc>
   32268:	mov	r3, sp
   3226c:	mov	r2, r8
   32270:	mov	r1, r4
   32274:	mov	r0, r5
   32278:	bl	31b04 <crc32@@Base+0x177a8>
   3227c:	cmp	r0, #0
   32280:	beq	32250 <crc32@@Base+0x17ef4>
   32284:	ldr	r3, [sp]
   32288:	cmp	r3, r7
   3228c:	bne	32250 <crc32@@Base+0x17ef4>
   32290:	mov	r2, r7
   32294:	mov	r1, r9
   32298:	bl	12784 <memcmp@plt>
   3229c:	cmp	r0, #0
   322a0:	bne	32250 <crc32@@Base+0x17ef4>
   322a4:	b	32218 <crc32@@Base+0x17ebc>
   322a8:	bl	12538 <__stack_chk_fail@plt>
   322ac:	sub	r3, r1, #1
   322b0:	cmn	r3, #3
   322b4:	push	{r4, r5, r6, lr}
   322b8:	bhi	3231c <crc32@@Base+0x17fc0>
   322bc:	mov	r5, r0
   322c0:	mov	r6, r1
   322c4:	bl	2e22c <crc32@@Base+0x13ed0>
   322c8:	subs	r4, r0, #0
   322cc:	beq	322d8 <crc32@@Base+0x17f7c>
   322d0:	mov	r0, r4
   322d4:	pop	{r4, r5, r6, pc}
   322d8:	mov	r2, r4
   322dc:	mvn	r1, #0
   322e0:	mov	r0, r5
   322e4:	b	32308 <crc32@@Base+0x17fac>
   322e8:	mov	r1, r4
   322ec:	mov	r0, r5
   322f0:	bl	31b4c <crc32@@Base+0x177f0>
   322f4:	mov	r1, r4
   322f8:	mov	r2, #0
   322fc:	cmp	r6, r0
   32300:	mov	r0, r5
   32304:	beq	322d0 <crc32@@Base+0x17f74>
   32308:	bl	2e588 <crc32@@Base+0x1422c>
   3230c:	subs	r4, r0, #0
   32310:	bge	322e8 <crc32@@Base+0x17f8c>
   32314:	mov	r0, r4
   32318:	pop	{r4, r5, r6, pc}
   3231c:	mvn	r4, #5
   32320:	b	322d0 <crc32@@Base+0x17f74>
   32324:	push	{r4, r5, r6, r7, r8, lr}
   32328:	mov	r4, r0
   3232c:	mov	r0, r2
   32330:	mov	r5, r1
   32334:	mov	r7, r2
   32338:	bl	1267c <strlen@plt>
   3233c:	cmp	r0, r5
   32340:	bgt	323a0 <crc32@@Base+0x18044>
   32344:	mov	r6, r0
   32348:	add	r8, r0, #1
   3234c:	b	32374 <crc32@@Base+0x18018>
   32350:	bl	12754 <memchr@plt>
   32354:	cmp	r0, #0
   32358:	sub	r3, r0, r4
   3235c:	add	r4, r0, #1
   32360:	add	r3, r3, #1
   32364:	popeq	{r4, r5, r6, r7, r8, pc}
   32368:	sub	r5, r5, r3
   3236c:	cmp	r6, r5
   32370:	bgt	323a0 <crc32@@Base+0x18044>
   32374:	mov	r2, r8
   32378:	mov	r1, r4
   3237c:	mov	r0, r7
   32380:	bl	12784 <memcmp@plt>
   32384:	mov	r1, #0
   32388:	mov	r2, r5
   3238c:	cmp	r0, r1
   32390:	mov	r0, r4
   32394:	bne	32350 <crc32@@Base+0x17ff4>
   32398:	mov	r0, #1
   3239c:	pop	{r4, r5, r6, r7, r8, pc}
   323a0:	mov	r0, #0
   323a4:	pop	{r4, r5, r6, r7, r8, pc}
   323a8:	push	{r4, r5, r6, r7, lr}
   323ac:	movw	r7, #3824	; 0xef0
   323b0:	movt	r7, #5
   323b4:	sub	sp, sp, #12
   323b8:	ldr	ip, [r7]
   323bc:	mov	r3, sp
   323c0:	str	ip, [sp, #4]
   323c4:	bl	31b04 <crc32@@Base+0x177a8>
   323c8:	subs	r4, r0, #0
   323cc:	ldreq	r6, [sp]
   323d0:	beq	32418 <crc32@@Base+0x180bc>
   323d4:	ldr	r5, [sp]
   323d8:	mov	r6, #0
   323dc:	add	r5, r4, r5
   323e0:	cmp	r4, r5
   323e4:	bcc	323f4 <crc32@@Base+0x18098>
   323e8:	b	32418 <crc32@@Base+0x180bc>
   323ec:	add	r6, r6, #1
   323f0:	bcs	32418 <crc32@@Base+0x180bc>
   323f4:	sub	r1, r5, r4
   323f8:	mov	r0, r4
   323fc:	bl	12184 <strnlen@plt>
   32400:	add	r0, r0, #1
   32404:	str	r0, [sp]
   32408:	add	r4, r4, r0
   3240c:	cmp	r4, r5
   32410:	bls	323ec <crc32@@Base+0x18090>
   32414:	mvn	r6, #14
   32418:	ldr	r2, [sp, #4]
   3241c:	mov	r0, r6
   32420:	ldr	r3, [r7]
   32424:	cmp	r2, r3
   32428:	bne	32434 <crc32@@Base+0x180d8>
   3242c:	add	sp, sp, #12
   32430:	pop	{r4, r5, r6, r7, pc}
   32434:	bl	12538 <__stack_chk_fail@plt>
   32438:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3243c:	movw	r8, #3824	; 0xef0
   32440:	movt	r8, #5
   32444:	sub	sp, sp, #8
   32448:	mov	r9, r3
   3244c:	ldr	ip, [r8]
   32450:	mov	r3, sp
   32454:	str	ip, [sp, #4]
   32458:	bl	31b04 <crc32@@Base+0x177a8>
   3245c:	subs	r4, r0, #0
   32460:	ldreq	r7, [sp]
   32464:	beq	324dc <crc32@@Base+0x18180>
   32468:	mov	r0, r9
   3246c:	bl	1267c <strlen@plt>
   32470:	ldr	r5, [sp]
   32474:	add	r5, r4, r5
   32478:	cmp	r4, r5
   3247c:	add	sl, r0, #1
   32480:	bcs	324f8 <crc32@@Base+0x1819c>
   32484:	mov	r7, #0
   32488:	b	3249c <crc32@@Base+0x18140>
   3248c:	cmp	r6, r5
   32490:	mov	r4, r6
   32494:	add	r7, r7, #1
   32498:	bcs	324f8 <crc32@@Base+0x1819c>
   3249c:	sub	r1, r5, r4
   324a0:	mov	r0, r4
   324a4:	bl	12184 <strnlen@plt>
   324a8:	add	r0, r0, #1
   324ac:	str	r0, [sp]
   324b0:	add	r6, r4, r0
   324b4:	cmp	r6, r5
   324b8:	bhi	32500 <crc32@@Base+0x181a4>
   324bc:	cmp	r0, sl
   324c0:	bne	3248c <crc32@@Base+0x18130>
   324c4:	mov	r0, r4
   324c8:	mov	r2, sl
   324cc:	mov	r1, r9
   324d0:	bl	12784 <memcmp@plt>
   324d4:	cmp	r0, #0
   324d8:	bne	3248c <crc32@@Base+0x18130>
   324dc:	ldr	r2, [sp, #4]
   324e0:	mov	r0, r7
   324e4:	ldr	r3, [r8]
   324e8:	cmp	r2, r3
   324ec:	bne	32508 <crc32@@Base+0x181ac>
   324f0:	add	sp, sp, #8
   324f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   324f8:	mvn	r7, #0
   324fc:	b	324dc <crc32@@Base+0x18180>
   32500:	mvn	r7, #14
   32504:	b	324dc <crc32@@Base+0x18180>
   32508:	bl	12538 <__stack_chk_fail@plt>
   3250c:	push	{r4, r5, r6, r7, r8, lr}
   32510:	movw	r7, #3824	; 0xef0
   32514:	movt	r7, #5
   32518:	sub	sp, sp, #8
   3251c:	mov	r6, r3
   32520:	ldr	ip, [r7]
   32524:	mov	r3, sp
   32528:	ldr	r8, [sp, #32]
   3252c:	str	ip, [sp, #4]
   32530:	bl	31b04 <crc32@@Base+0x177a8>
   32534:	subs	r4, r0, #0
   32538:	beq	325a0 <crc32@@Base+0x18244>
   3253c:	ldr	r5, [sp]
   32540:	add	r5, r4, r5
   32544:	cmp	r4, r5
   32548:	bcc	32568 <crc32@@Base+0x1820c>
   3254c:	b	325d0 <crc32@@Base+0x18274>
   32550:	cmp	r6, #0
   32554:	beq	325e8 <crc32@@Base+0x1828c>
   32558:	cmp	r3, r5
   3255c:	mov	r4, r3
   32560:	sub	r6, r6, #1
   32564:	bcs	325d0 <crc32@@Base+0x18274>
   32568:	sub	r1, r5, r4
   3256c:	mov	r0, r4
   32570:	bl	12184 <strnlen@plt>
   32574:	add	r3, r0, #1
   32578:	str	r3, [sp]
   3257c:	add	r3, r4, r3
   32580:	cmp	r3, r5
   32584:	bls	32550 <crc32@@Base+0x181f4>
   32588:	cmp	r8, #0
   3258c:	beq	325b0 <crc32@@Base+0x18254>
   32590:	mvn	r3, #14
   32594:	mov	r4, #0
   32598:	str	r3, [r8]
   3259c:	b	325b4 <crc32@@Base+0x18258>
   325a0:	cmp	r8, #0
   325a4:	ldrne	r3, [sp]
   325a8:	strne	r3, [r8]
   325ac:	bne	325b4 <crc32@@Base+0x18258>
   325b0:	mov	r4, #0
   325b4:	ldr	r2, [sp, #4]
   325b8:	mov	r0, r4
   325bc:	ldr	r3, [r7]
   325c0:	cmp	r2, r3
   325c4:	bne	325f4 <crc32@@Base+0x18298>
   325c8:	add	sp, sp, #8
   325cc:	pop	{r4, r5, r6, r7, r8, pc}
   325d0:	cmp	r8, #0
   325d4:	beq	325b0 <crc32@@Base+0x18254>
   325d8:	mvn	r3, #0
   325dc:	mov	r4, #0
   325e0:	str	r3, [r8]
   325e4:	b	325b4 <crc32@@Base+0x18258>
   325e8:	cmp	r8, #0
   325ec:	strne	r0, [r8]
   325f0:	b	325b4 <crc32@@Base+0x18258>
   325f4:	bl	12538 <__stack_chk_fail@plt>
   325f8:	push	{r4, r5, lr}
   325fc:	movw	r4, #3824	; 0xef0
   32600:	movt	r4, #5
   32604:	sub	sp, sp, #12
   32608:	mov	r5, r2
   3260c:	movw	r2, #35196	; 0x897c
   32610:	ldr	ip, [r4]
   32614:	mov	r3, sp
   32618:	movt	r2, #3
   3261c:	str	ip, [sp, #4]
   32620:	bl	31b04 <crc32@@Base+0x177a8>
   32624:	cmp	r0, #0
   32628:	ldreq	r0, [sp]
   3262c:	beq	32644 <crc32@@Base+0x182e8>
   32630:	mov	r2, r5
   32634:	ldr	r1, [sp]
   32638:	bl	32324 <crc32@@Base+0x17fc8>
   3263c:	clz	r0, r0
   32640:	lsr	r0, r0, #5
   32644:	ldr	r2, [sp, #4]
   32648:	ldr	r3, [r4]
   3264c:	cmp	r2, r3
   32650:	bne	3265c <crc32@@Base+0x18300>
   32654:	add	sp, sp, #12
   32658:	pop	{r4, r5, pc}
   3265c:	bl	12538 <__stack_chk_fail@plt>
   32660:	push	{r4, r5, r6, lr}
   32664:	mov	r4, r1
   32668:	mov	r6, r2
   3266c:	mov	r5, r0
   32670:	bl	2e22c <crc32@@Base+0x13ed0>
   32674:	subs	r3, r0, #0
   32678:	beq	32684 <crc32@@Base+0x18328>
   3267c:	mov	r0, r3
   32680:	pop	{r4, r5, r6, pc}
   32684:	mov	r2, r3
   32688:	mov	r1, r4
   3268c:	mov	r0, r5
   32690:	b	326c4 <crc32@@Base+0x18368>
   32694:	mov	r2, r6
   32698:	mov	r1, r4
   3269c:	mov	r0, r5
   326a0:	bl	325f8 <crc32@@Base+0x1829c>
   326a4:	mov	r1, r4
   326a8:	mov	r2, #0
   326ac:	mov	r3, r0
   326b0:	cmn	r3, #1
   326b4:	mov	r0, r5
   326b8:	blt	3267c <crc32@@Base+0x18320>
   326bc:	cmp	r3, r2
   326c0:	beq	326d0 <crc32@@Base+0x18374>
   326c4:	bl	2e588 <crc32@@Base+0x1422c>
   326c8:	subs	r4, r0, #0
   326cc:	bge	32694 <crc32@@Base+0x18338>
   326d0:	mov	r3, r4
   326d4:	mov	r0, r3
   326d8:	pop	{r4, r5, r6, pc}
   326dc:	ldr	r3, [r0, #384]	; 0x180
   326e0:	ldr	ip, [r0, #388]	; 0x184
   326e4:	cmp	r3, #0
   326e8:	push	{r4, r5, lr}
   326ec:	subne	lr, ip, #-536870911	; 0xe0000001
   326f0:	ldr	r4, [r0, #400]	; 0x190
   326f4:	addne	r3, r3, lr, lsl #3
   326f8:	ldr	lr, [r0, #396]	; 0x18c
   326fc:	cmp	r4, #0
   32700:	beq	3270c <crc32@@Base+0x183b0>
   32704:	cmp	ip, #0
   32708:	bne	32734 <crc32@@Base+0x183d8>
   3270c:	cmp	lr, ip
   32710:	add	ip, ip, #1
   32714:	str	ip, [r0, #388]	; 0x184
   32718:	ble	32774 <crc32@@Base+0x18418>
   3271c:	cmp	r3, #0
   32720:	beq	3277c <crc32@@Base+0x18420>
   32724:	str	r1, [r3, #8]
   32728:	mov	r0, #0
   3272c:	str	r2, [r3, #12]
   32730:	pop	{r4, r5, pc}
   32734:	cmp	lr, ip
   32738:	movlt	r4, #0
   3273c:	movge	r4, #1
   32740:	cmp	r3, #0
   32744:	moveq	r4, #0
   32748:	cmp	r4, #0
   3274c:	beq	3270c <crc32@@Base+0x183b0>
   32750:	ldr	r5, [r3]
   32754:	ldr	r4, [r3, #4]
   32758:	add	r4, r5, r4
   3275c:	cmp	r4, r1
   32760:	bge	32784 <crc32@@Base+0x18428>
   32764:	cmp	lr, ip
   32768:	add	ip, ip, #1
   3276c:	str	ip, [r0, #388]	; 0x184
   32770:	bgt	32724 <crc32@@Base+0x183c8>
   32774:	mvn	r0, #0
   32778:	pop	{r4, r5, pc}
   3277c:	mov	r0, r3
   32780:	pop	{r4, r5, pc}
   32784:	add	r2, r1, r2
   32788:	mov	r0, #0
   3278c:	sub	r5, r2, r5
   32790:	str	r5, [r3, #4]
   32794:	pop	{r4, r5, pc}
   32798:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3279c:	movw	ip, #3824	; 0xef0
   327a0:	sub	sp, sp, #204	; 0xcc
   327a4:	movt	ip, #5
   327a8:	mov	r5, r0
   327ac:	mvn	r6, #0
   327b0:	str	ip, [sp, #52]	; 0x34
   327b4:	add	r4, sp, #200	; 0xc8
   327b8:	ldr	ip, [ip]
   327bc:	str	r3, [sp, #44]	; 0x2c
   327c0:	ldr	r3, [sp, #244]	; 0xf4
   327c4:	str	r0, [sp]
   327c8:	add	r0, sp, #68	; 0x44
   327cc:	str	r1, [sp, #48]	; 0x30
   327d0:	mov	r1, #0
   327d4:	str	r2, [sp, #32]
   327d8:	mov	r2, #128	; 0x80
   327dc:	ldr	r8, [sp, #252]	; 0xfc
   327e0:	str	r3, [sp, #28]
   327e4:	str	r6, [sp, #20]
   327e8:	str	ip, [sp, #196]	; 0xc4
   327ec:	bl	12388 <memset@plt>
   327f0:	ldr	r2, [r5, #8]
   327f4:	mov	r1, #0
   327f8:	mov	r5, r1
   327fc:	str	r1, [r4, #-140]!	; 0xffffff74
   32800:	ubfx	r0, r2, #8, #8
   32804:	strb	r1, [r8]
   32808:	lsr	r3, r2, #24
   3280c:	ubfx	r1, r2, #16, #8
   32810:	orr	r3, r3, r2, lsl #24
   32814:	str	r4, [sp, #8]
   32818:	orr	r3, r3, r0, lsl #16
   3281c:	mov	r4, r5
   32820:	orr	r3, r3, r1, lsl #8
   32824:	str	r5, [sp, #4]
   32828:	str	r3, [sp, #24]
   3282c:	str	r8, [sp, #16]
   32830:	ldr	r2, [sp, #8]
   32834:	mov	r1, r5
   32838:	ldr	r0, [sp]
   3283c:	bl	2e3a8 <crc32@@Base+0x1404c>
   32840:	ldr	r3, [sp, #60]	; 0x3c
   32844:	mov	sl, r3
   32848:	sub	r2, r0, #1
   3284c:	mov	r7, r0
   32850:	cmp	r2, #8
   32854:	ldrls	pc, [pc, r2, lsl #2]
   32858:	b	32a10 <crc32@@Base+0x186b4>
   3285c:	ldrdeq	r2, [r3], -r4
   32860:	andeq	r2, r3, r8, asr sl
   32864:	andeq	r2, r3, r4, ror #18
   32868:	andeq	r2, r3, r8, asr #18
   3286c:	andeq	r2, r3, r0, lsl sl
   32870:	andeq	r2, r3, r0, lsl sl
   32874:	andeq	r2, r3, r0, lsl sl
   32878:	andeq	r2, r3, r0, lsl sl
   3287c:	andeq	r2, r3, r0, lsl #17
   32880:	mov	fp, #1
   32884:	str	fp, [sp, #12]
   32888:	cmn	r6, #1
   3288c:	movne	r2, #0
   32890:	moveq	r2, #1
   32894:	tst	fp, r2
   32898:	beq	32bc4 <crc32@@Base+0x18868>
   3289c:	ldr	r2, [sp, #248]	; 0xf8
   328a0:	cmp	r4, r2
   328a4:	movgt	r2, #0
   328a8:	movle	r2, #1
   328ac:	cmp	r4, #0
   328b0:	moveq	r2, #0
   328b4:	cmp	r2, #0
   328b8:	beq	328e4 <crc32@@Base+0x18588>
   328bc:	sub	r2, r4, #-536870911	; 0xe0000001
   328c0:	ldr	r0, [sp, #28]
   328c4:	add	r1, r0, r2, lsl #3
   328c8:	ldr	r2, [r0, r2, lsl #3]
   328cc:	ldr	r1, [r1, #4]
   328d0:	add	r2, r2, r1
   328d4:	ldr	r1, [sp, #24]
   328d8:	sub	r2, r2, r1
   328dc:	cmp	r2, r5
   328e0:	beq	32bd4 <crc32@@Base+0x18878>
   328e4:	mov	r6, r5
   328e8:	cmp	r7, #9
   328ec:	mov	r5, r3
   328f0:	bne	32830 <crc32@@Base+0x184d4>
   328f4:	ldr	lr, [sp]
   328f8:	ldr	r1, [lr, #36]	; 0x24
   328fc:	ubfx	ip, r1, #8, #8
   32900:	ubfx	r0, r1, #16, #8
   32904:	lsr	r2, r1, #24
   32908:	orr	r2, r2, r1, lsl #24
   3290c:	orr	r2, r2, ip, lsl #16
   32910:	orr	r2, r2, r0, lsl #8
   32914:	cmp	r3, r2
   32918:	bne	32cbc <crc32@@Base+0x18960>
   3291c:	ldr	r2, [sp, #248]	; 0xf8
   32920:	cmp	r4, r2
   32924:	blt	32c50 <crc32@@Base+0x188f4>
   32928:	add	r0, r4, #1
   3292c:	ldr	r3, [sp, #52]	; 0x34
   32930:	ldr	r2, [sp, #196]	; 0xc4
   32934:	ldr	r3, [r3]
   32938:	cmp	r2, r3
   3293c:	bne	32cc4 <crc32@@Base+0x18968>
   32940:	add	sp, sp, #204	; 0xcc
   32944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32948:	ldr	r2, [sp, #4]
   3294c:	mov	sl, r5
   32950:	cmp	r2, #1
   32954:	movle	fp, #0
   32958:	movgt	fp, #1
   3295c:	str	fp, [sp, #12]
   32960:	b	32888 <crc32@@Base+0x1852c>
   32964:	ldr	r9, [sp]
   32968:	mov	r2, #0
   3296c:	ldr	r3, [sp, #4]
   32970:	mov	r1, r5
   32974:	cmp	r3, #1
   32978:	mov	r0, r9
   3297c:	movle	fp, #0
   32980:	movgt	fp, #1
   32984:	bl	318d0 <crc32@@Base+0x17574>
   32988:	str	fp, [sp, #12]
   3298c:	ldr	r1, [r0, #8]
   32990:	mov	r0, r9
   32994:	ubfx	r2, r1, #8, #8
   32998:	lsr	r3, r1, #24
   3299c:	orr	r3, r3, r1, lsl #24
   329a0:	ubfx	r1, r1, #16, #8
   329a4:	orr	r3, r3, r2, lsl #16
   329a8:	orr	r1, r3, r1, lsl #8
   329ac:	bl	31424 <crc32@@Base+0x170c8>
   329b0:	ldr	r3, [sp, #240]	; 0xf0
   329b4:	cmp	r3, #0
   329b8:	ble	32ca8 <crc32@@Base+0x1894c>
   329bc:	ldr	r3, [sp, #44]	; 0x2c
   329c0:	mov	r9, #0
   329c4:	str	fp, [sp, #40]	; 0x28
   329c8:	sub	sl, r3, #4
   329cc:	str	r4, [sp, #36]	; 0x24
   329d0:	mov	r4, r9
   329d4:	mov	r9, r0
   329d8:	mov	fp, sl
   329dc:	ldr	sl, [sp, #240]	; 0xf0
   329e0:	b	329f0 <crc32@@Base+0x18694>
   329e4:	add	r4, r4, #1
   329e8:	cmp	sl, r4
   329ec:	beq	32c0c <crc32@@Base+0x188b0>
   329f0:	mov	r1, r9
   329f4:	ldr	r0, [fp, #4]!
   329f8:	bl	12718 <strcmp@plt>
   329fc:	cmp	r0, #0
   32a00:	bne	329e4 <crc32@@Base+0x18688>
   32a04:	ldr	r4, [sp, #36]	; 0x24
   32a08:	mov	sl, r5
   32a0c:	ldr	r3, [sp, #60]	; 0x3c
   32a10:	mov	r9, #1
   32a14:	adds	r2, r6, #1
   32a18:	movne	r2, #1
   32a1c:	tst	r9, r2
   32a20:	beq	328e8 <crc32@@Base+0x1858c>
   32a24:	ldr	r2, [sp, #248]	; 0xf8
   32a28:	cmp	r4, r2
   32a2c:	bge	32a4c <crc32@@Base+0x186f0>
   32a30:	ldr	r1, [sp, #28]
   32a34:	sub	sl, sl, r6
   32a38:	ldr	r0, [sp, #24]
   32a3c:	add	r2, r1, r4, lsl #3
   32a40:	add	r6, r6, r0
   32a44:	str	r6, [r1, r4, lsl #3]
   32a48:	str	sl, [r2, #4]
   32a4c:	add	r4, r4, #1
   32a50:	mvn	r6, #0
   32a54:	b	328e8 <crc32@@Base+0x1858c>
   32a58:	ldr	r1, [sp, #20]
   32a5c:	cmn	r1, #1
   32a60:	beq	32ca0 <crc32@@Base+0x18944>
   32a64:	ldr	lr, [sp, #16]
   32a68:	add	r0, sp, #200	; 0xc8
   32a6c:	add	r2, r0, r1, lsl #2
   32a70:	sub	ip, r1, #1
   32a74:	cmp	lr, r8
   32a78:	ldr	r0, [r2, #-132]	; 0xffffff7c
   32a7c:	bls	32aac <crc32@@Base+0x18750>
   32a80:	ldrb	r1, [lr, #-1]
   32a84:	sub	r2, lr, #1
   32a88:	cmp	r1, #47	; 0x2f
   32a8c:	bne	32aa0 <crc32@@Base+0x18744>
   32a90:	b	32be4 <crc32@@Base+0x18888>
   32a94:	ldrb	r1, [r2, #-1]!
   32a98:	cmp	r1, #47	; 0x2f
   32a9c:	beq	32be4 <crc32@@Base+0x18888>
   32aa0:	cmp	r8, r2
   32aa4:	bne	32a94 <crc32@@Base+0x18738>
   32aa8:	str	r8, [sp, #16]
   32aac:	ldr	r1, [sp, #16]
   32ab0:	mov	r2, #0
   32ab4:	str	ip, [sp, #20]
   32ab8:	strb	r2, [r1]
   32abc:	ldr	r2, [sp, #4]
   32ac0:	str	r0, [sp, #4]
   32ac4:	adds	fp, r2, #0
   32ac8:	str	r2, [sp, #12]
   32acc:	movne	fp, #1
   32ad0:	b	32888 <crc32@@Base+0x1852c>
   32ad4:	ldr	r3, [sp, #20]
   32ad8:	add	r3, r3, #1
   32adc:	str	r3, [sp, #20]
   32ae0:	cmp	r3, #32
   32ae4:	beq	32ca0 <crc32@@Base+0x18944>
   32ae8:	add	r2, sp, #64	; 0x40
   32aec:	mov	r1, r5
   32af0:	ldr	r0, [sp]
   32af4:	bl	31804 <crc32@@Base+0x174a8>
   32af8:	ldr	r2, [sp, #16]
   32afc:	ldr	r9, [sp, #64]	; 0x40
   32b00:	sub	r3, r2, r8
   32b04:	ldr	r1, [sp, #256]	; 0x100
   32b08:	add	r3, r3, #2
   32b0c:	add	r3, r3, r9
   32b10:	cmp	r3, r1
   32b14:	bge	32cb4 <crc32@@Base+0x18958>
   32b18:	add	r3, r8, #1
   32b1c:	mov	r1, r0
   32b20:	cmp	r2, r3
   32b24:	ldreq	r3, [sp, #16]
   32b28:	movne	r3, #47	; 0x2f
   32b2c:	strbne	r3, [r2]
   32b30:	addne	r3, r2, #1
   32b34:	mov	r0, r3
   32b38:	bl	12484 <strcpy@plt>
   32b3c:	ldr	r1, [sp, #20]
   32b40:	ldr	r2, [sp, #4]
   32b44:	cmp	r2, #1
   32b48:	add	r3, r0, r9
   32b4c:	str	r3, [sp, #16]
   32b50:	add	r3, sp, #200	; 0xc8
   32b54:	add	r3, r3, r1, lsl #2
   32b58:	str	r2, [r3, #-132]	; 0xffffff7c
   32b5c:	ldr	r3, [sp, #32]
   32b60:	beq	32c20 <crc32@@Base+0x188c4>
   32b64:	cmp	r3, #0
   32b68:	ble	32bf0 <crc32@@Base+0x18894>
   32b6c:	ldr	r3, [sp, #48]	; 0x30
   32b70:	mov	r9, #0
   32b74:	str	r4, [sp, #12]
   32b78:	sub	fp, r3, #4
   32b7c:	mov	r4, fp
   32b80:	ldr	fp, [sp, #32]
   32b84:	b	32b94 <crc32@@Base+0x18838>
   32b88:	add	r9, r9, #1
   32b8c:	cmp	fp, r9
   32b90:	ble	32bec <crc32@@Base+0x18890>
   32b94:	mov	r1, r8
   32b98:	ldr	r0, [r4, #4]!
   32b9c:	bl	12718 <strcmp@plt>
   32ba0:	cmp	r0, #0
   32ba4:	bne	32b88 <crc32@@Base+0x1882c>
   32ba8:	mov	r2, #2
   32bac:	ldr	r4, [sp, #12]
   32bb0:	ldr	r3, [sp, #60]	; 0x3c
   32bb4:	mov	fp, #1
   32bb8:	str	r2, [sp, #4]
   32bbc:	str	r2, [sp, #12]
   32bc0:	b	32888 <crc32@@Base+0x1852c>
   32bc4:	ldr	r2, [sp, #12]
   32bc8:	clz	r9, r2
   32bcc:	lsr	r9, r9, #5
   32bd0:	b	32a14 <crc32@@Base+0x186b8>
   32bd4:	sub	r4, r4, #1
   32bd8:	ldr	r6, [r0, r4, lsl #3]
   32bdc:	sub	r6, r6, r1
   32be0:	b	328e8 <crc32@@Base+0x1858c>
   32be4:	str	r2, [sp, #16]
   32be8:	b	32aac <crc32@@Base+0x18750>
   32bec:	ldr	r4, [sp, #12]
   32bf0:	ldr	r3, [sp, #4]
   32bf4:	cmp	r3, #0
   32bf8:	bne	32c2c <crc32@@Base+0x188d0>
   32bfc:	mov	sl, r5
   32c00:	mov	r9, #1
   32c04:	ldr	r3, [sp, #60]	; 0x3c
   32c08:	b	32a14 <crc32@@Base+0x186b8>
   32c0c:	ldr	fp, [sp, #40]	; 0x28
   32c10:	mov	sl, r5
   32c14:	ldr	r4, [sp, #36]	; 0x24
   32c18:	ldr	r3, [sp, #60]	; 0x3c
   32c1c:	b	32888 <crc32@@Base+0x1852c>
   32c20:	cmp	r3, #0
   32c24:	mov	sl, r5
   32c28:	bgt	32b6c <crc32@@Base+0x18810>
   32c2c:	ldr	r3, [sp, #4]
   32c30:	subs	r3, r3, #1
   32c34:	str	r3, [sp, #4]
   32c38:	mov	r2, r3
   32c3c:	movne	fp, #1
   32c40:	ldr	r3, [sp, #60]	; 0x3c
   32c44:	moveq	fp, #0
   32c48:	str	r2, [sp, #12]
   32c4c:	b	32888 <crc32@@Base+0x1852c>
   32c50:	ldr	r2, [sp, #260]	; 0x104
   32c54:	sub	r3, r3, r6
   32c58:	ldr	r0, [sp, #28]
   32c5c:	cmp	r2, #0
   32c60:	ldr	r2, [sp, #24]
   32c64:	add	r1, r0, r4, lsl #3
   32c68:	add	r2, r6, r2
   32c6c:	str	r2, [r0, r4, lsl #3]
   32c70:	str	r3, [r1, #4]
   32c74:	beq	32928 <crc32@@Base+0x185cc>
   32c78:	ldr	r0, [lr, #32]
   32c7c:	ubfx	lr, r0, #8, #8
   32c80:	ubfx	ip, r0, #16, #8
   32c84:	lsr	r2, r0, #24
   32c88:	orr	r2, r2, r0, lsl #24
   32c8c:	orr	r2, r2, lr, lsl #16
   32c90:	orr	r2, r2, ip, lsl #8
   32c94:	add	r3, r2, r3
   32c98:	str	r3, [r1, #4]
   32c9c:	b	32928 <crc32@@Base+0x185cc>
   32ca0:	mvn	r0, #10
   32ca4:	b	3292c <crc32@@Base+0x185d0>
   32ca8:	mov	sl, r5
   32cac:	ldr	r3, [sp, #60]	; 0x3c
   32cb0:	b	32888 <crc32@@Base+0x1852c>
   32cb4:	mvn	r0, #2
   32cb8:	b	3292c <crc32@@Base+0x185d0>
   32cbc:	mvn	r0, #11
   32cc0:	b	3292c <crc32@@Base+0x185d0>
   32cc4:	bl	12538 <__stack_chk_fail@plt>
   32cc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32ccc:	sub	sp, sp, #12
   32cd0:	mov	fp, r2
   32cd4:	mov	r7, r1
   32cd8:	movw	r2, #56928	; 0xde60
   32cdc:	mov	r1, #0
   32ce0:	movt	r2, #3
   32ce4:	mov	r4, r0
   32ce8:	mov	sl, r3
   32cec:	ldr	r8, [r0, #8]
   32cf0:	ldr	r5, [sp, #48]	; 0x30
   32cf4:	bl	317d4 <crc32@@Base+0x17478>
   32cf8:	subs	r9, r0, #0
   32cfc:	blt	32ec8 <crc32@@Base+0x18b6c>
   32d00:	mov	r1, r9
   32d04:	mov	r0, r4
   32d08:	bl	2e6d8 <crc32@@Base+0x1437c>
   32d0c:	cmn	r0, #1
   32d10:	mov	r6, r0
   32d14:	beq	32ea4 <crc32@@Base+0x18b48>
   32d18:	cmp	r0, #0
   32d1c:	blt	32e38 <crc32@@Base+0x18adc>
   32d20:	str	r7, [r5, #384]	; 0x180
   32d24:	mov	r1, r9
   32d28:	str	fp, [r5, #388]	; 0x184
   32d2c:	mov	r7, #0
   32d30:	str	sl, [r5, #396]	; 0x18c
   32d34:	mov	r0, r4
   32d38:	str	r7, [r5, #400]	; 0x190
   32d3c:	sub	r6, r6, #4
   32d40:	bl	31890 <crc32@@Base+0x17534>
   32d44:	subs	fp, r0, #0
   32d48:	blt	32e2c <crc32@@Base+0x18ad0>
   32d4c:	lsr	r3, r8, #24
   32d50:	ubfx	r2, r8, #8, #8
   32d54:	orr	r3, r3, r8, lsl #24
   32d58:	ubfx	r8, r8, #16, #8
   32d5c:	orr	r3, r3, r2, lsl #16
   32d60:	orr	r8, r3, r8, lsl #8
   32d64:	add	r3, r8, r9
   32d68:	str	r3, [sp, #4]
   32d6c:	mov	r2, #0
   32d70:	mov	r1, fp
   32d74:	mov	r0, r4
   32d78:	bl	318d0 <crc32@@Base+0x17574>
   32d7c:	ldr	r2, [r0, #8]
   32d80:	mov	r0, r4
   32d84:	ubfx	ip, r2, #8, #8
   32d88:	ubfx	r1, r2, #16, #8
   32d8c:	lsr	r3, r2, #24
   32d90:	orr	r3, r3, r2, lsl #24
   32d94:	orr	r3, r3, ip, lsl #16
   32d98:	orr	r1, r3, r1, lsl #8
   32d9c:	bl	31424 <crc32@@Base+0x170c8>
   32da0:	mov	r1, r0
   32da4:	mov	r0, r4
   32da8:	bl	31e60 <crc32@@Base+0x17b04>
   32dac:	ldr	r1, [r4, #8]
   32db0:	ldr	ip, [r5, #388]	; 0x184
   32db4:	ubfx	r3, r1, #8, #8
   32db8:	lsr	r2, r1, #24
   32dbc:	cmp	ip, #0
   32dc0:	orr	r2, r2, r1, lsl #24
   32dc4:	ubfx	r1, r1, #16, #8
   32dc8:	orr	r2, r2, r3, lsl #16
   32dcc:	ldr	r3, [r5, #384]	; 0x180
   32dd0:	orr	r2, r2, r1, lsl #8
   32dd4:	add	r0, r2, r0
   32dd8:	ble	32e10 <crc32@@Base+0x18ab4>
   32ddc:	add	r3, r3, #8
   32de0:	mov	r1, #0
   32de4:	ldr	r2, [r3, #-8]
   32de8:	add	r1, r1, #1
   32dec:	cmp	r0, r2
   32df0:	blt	32e04 <crc32@@Base+0x18aa8>
   32df4:	ldr	lr, [r3, #-4]
   32df8:	add	r2, r2, lr
   32dfc:	cmp	r0, r2
   32e00:	blt	32e44 <crc32@@Base+0x18ae8>
   32e04:	cmp	ip, r1
   32e08:	add	r3, r3, #8
   32e0c:	bne	32de4 <crc32@@Base+0x18a88>
   32e10:	mov	r1, fp
   32e14:	mov	r0, r4
   32e18:	bl	318b0 <crc32@@Base+0x17554>
   32e1c:	subs	fp, r0, #0
   32e20:	bge	32d6c <crc32@@Base+0x18a10>
   32e24:	cmp	r7, #0
   32e28:	bne	32e90 <crc32@@Base+0x18b34>
   32e2c:	ldr	r6, [r5, #388]	; 0x184
   32e30:	cmp	r6, sl
   32e34:	mvnge	r6, #2
   32e38:	mov	r0, r6
   32e3c:	add	sp, sp, #12
   32e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32e44:	mov	r1, fp
   32e48:	mov	r0, r4
   32e4c:	bl	318b0 <crc32@@Base+0x17554>
   32e50:	cmp	r0, #0
   32e54:	movge	r9, r0
   32e58:	movlt	r9, r6
   32e5c:	cmp	r7, #0
   32e60:	beq	32e7c <crc32@@Base+0x18b20>
   32e64:	sub	r2, r9, fp
   32e68:	add	r1, r8, fp
   32e6c:	mov	r0, r5
   32e70:	mov	r7, #1
   32e74:	bl	326dc <crc32@@Base+0x18380>
   32e78:	b	32e10 <crc32@@Base+0x18ab4>
   32e7c:	mov	r2, #12
   32e80:	ldr	r1, [sp, #4]
   32e84:	mov	r0, r5
   32e88:	bl	326dc <crc32@@Base+0x18380>
   32e8c:	b	32e64 <crc32@@Base+0x18b08>
   32e90:	add	r1, r8, r6
   32e94:	mov	r2, #4
   32e98:	mov	r0, r5
   32e9c:	bl	326dc <crc32@@Base+0x18380>
   32ea0:	b	32e2c <crc32@@Base+0x18ad0>
   32ea4:	ldr	r3, [r4, #36]	; 0x24
   32ea8:	ubfx	r1, r3, #8, #8
   32eac:	ubfx	r2, r3, #16, #8
   32eb0:	lsr	r6, r3, #24
   32eb4:	orr	r6, r6, r3, lsl #24
   32eb8:	orr	r6, r6, r1, lsl #16
   32ebc:	orr	r6, r6, r2, lsl #8
   32ec0:	sub	r6, r6, #8
   32ec4:	b	32d20 <crc32@@Base+0x189c4>
   32ec8:	mvn	r6, #0
   32ecc:	b	32e38 <crc32@@Base+0x18adc>
   32ed0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32ed4:	sub	sp, sp, #84	; 0x54
   32ed8:	mov	r7, r0
   32edc:	movw	ip, #3824	; 0xef0
   32ee0:	ldr	r4, [sp, #132]	; 0x84
   32ee4:	movt	ip, #5
   32ee8:	ldr	r0, [r0, #8]
   32eec:	mov	lr, ip
   32ef0:	str	r1, [sp, #12]
   32ef4:	ldr	r1, [r4, #412]	; 0x19c
   32ef8:	ubfx	r5, r0, #8, #8
   32efc:	str	ip, [sp, #32]
   32f00:	lsr	ip, r0, #24
   32f04:	ldr	lr, [lr]
   32f08:	orr	ip, ip, r0, lsl #24
   32f0c:	cmp	r1, #0
   32f10:	ubfx	r0, r0, #16, #8
   32f14:	orr	ip, ip, r5, lsl #16
   32f18:	str	r2, [sp, #16]
   32f1c:	str	lr, [sp, #76]	; 0x4c
   32f20:	orr	r2, ip, r0, lsl #8
   32f24:	str	r3, [r4, #384]	; 0x180
   32f28:	str	r2, [sp, #24]
   32f2c:	mov	r2, #0
   32f30:	ldr	sl, [sp, #120]	; 0x78
   32f34:	str	r2, [r4, #388]	; 0x184
   32f38:	ble	3349c <crc32@@Base+0x19140>
   32f3c:	cmp	r1, #1
   32f40:	bgt	33014 <crc32@@Base+0x18cb8>
   32f44:	ldr	r3, [sp, #128]	; 0x80
   32f48:	add	fp, r4, #408	; 0x198
   32f4c:	tst	r3, #8
   32f50:	movne	r3, #3
   32f54:	moveq	r3, #2
   32f58:	str	r3, [sp, #28]
   32f5c:	mov	r3, #0
   32f60:	str	r3, [sp, #20]
   32f64:	mov	lr, fp
   32f68:	add	ip, sp, #56	; 0x38
   32f6c:	ldm	lr!, {r0, r1, r2, r3}
   32f70:	ldr	lr, [lr]
   32f74:	stmia	ip!, {r0, r1, r2, r3}
   32f78:	add	r2, sp, #72	; 0x48
   32f7c:	mov	r0, r7
   32f80:	mov	r1, lr
   32f84:	mov	r5, lr
   32f88:	str	lr, [ip]
   32f8c:	bl	2e3a8 <crc32@@Base+0x1404c>
   32f90:	ldr	r6, [sp, #72]	; 0x48
   32f94:	sub	r0, r0, #1
   32f98:	cmp	r0, #8
   32f9c:	ldrls	pc, [pc, r0, lsl #2]
   32fa0:	b	332e4 <crc32@@Base+0x18f88>
   32fa4:	andeq	r3, r3, r0, lsr #6
   32fa8:	andeq	r3, r3, r4, ror r2
   32fac:	andeq	r3, r3, r4, lsr #2
   32fb0:	andeq	r2, r3, r8, asr #31
   32fb4:	andeq	r3, r3, r4, ror #5
   32fb8:	andeq	r3, r3, r4, ror #5
   32fbc:	andeq	r3, r3, r4, ror #5
   32fc0:	andeq	r3, r3, r4, ror #5
   32fc4:	andeq	r3, r3, ip, lsr #8
   32fc8:	ldr	r0, [sp, #64]	; 0x40
   32fcc:	mov	r6, r5
   32fd0:	cmp	r0, #1
   32fd4:	movls	r0, #0
   32fd8:	movhi	r0, #1
   32fdc:	cmp	r0, #0
   32fe0:	beq	332e4 <crc32@@Base+0x18f88>
   32fe4:	ldr	r3, [r4, #404]	; 0x194
   32fe8:	cmn	r3, #1
   32fec:	beq	33440 <crc32@@Base+0x190e4>
   32ff0:	add	lr, sp, #56	; 0x38
   32ff4:	mov	ip, fp
   32ff8:	ldm	lr!, {r0, r1, r2, r3}
   32ffc:	stmia	ip!, {r0, r1, r2, r3}
   33000:	ldr	r1, [r4, #412]	; 0x19c
   33004:	ldr	r3, [lr]
   33008:	cmp	r1, #1
   3300c:	str	r3, [ip]
   33010:	ble	32f64 <crc32@@Base+0x18c08>
   33014:	cmp	r1, #2
   33018:	bne	33070 <crc32@@Base+0x18d14>
   3301c:	ldr	r1, [r7, #36]	; 0x24
   33020:	ldr	r2, [r4, #424]	; 0x1a8
   33024:	ubfx	ip, r1, #8, #8
   33028:	ubfx	r0, r1, #16, #8
   3302c:	lsr	r3, r1, #24
   33030:	orr	r3, r3, r1, lsl #24
   33034:	orr	r3, r3, ip, lsl #16
   33038:	orr	r3, r3, r0, lsl #8
   3303c:	cmp	r2, r3
   33040:	bne	334ec <crc32@@Base+0x19190>
   33044:	ldr	r1, [r4, #404]	; 0x194
   33048:	mov	r0, r4
   3304c:	ldr	r3, [sp, #24]
   33050:	sub	r2, r2, r1
   33054:	add	r1, r1, r3
   33058:	bl	326dc <crc32@@Base+0x18380>
   3305c:	cmp	r0, #0
   33060:	bne	33494 <crc32@@Base+0x19138>
   33064:	ldr	r1, [r4, #412]	; 0x19c
   33068:	add	r1, r1, #1
   3306c:	str	r1, [r4, #412]	; 0x19c
   33070:	cmp	r1, #3
   33074:	bgt	330f4 <crc32@@Base+0x18d98>
   33078:	ldr	r3, [sp, #128]	; 0x80
   3307c:	tst	r3, #1
   33080:	beq	330ec <crc32@@Base+0x18d90>
   33084:	ldr	r3, [r7, #12]
   33088:	mov	r2, #0
   3308c:	str	r2, [r4, #400]	; 0x190
   33090:	ubfx	r0, r3, #8, #8
   33094:	ubfx	r2, r3, #16, #8
   33098:	lsr	r1, r3, #24
   3309c:	orr	r1, r1, r3, lsl #24
   330a0:	ldr	r3, [r4, #424]	; 0x1a8
   330a4:	orr	r1, r1, r0, lsl #16
   330a8:	orr	r1, r1, r2, lsl #8
   330ac:	ldr	r2, [sp, #24]
   330b0:	add	r3, r2, r3
   330b4:	cmp	r3, r1
   330b8:	bhi	334fc <crc32@@Base+0x191a0>
   330bc:	ldr	ip, [r7, #32]
   330c0:	mov	r0, r4
   330c4:	ubfx	lr, ip, #8, #8
   330c8:	ubfx	r2, ip, #16, #8
   330cc:	lsr	r3, ip, #24
   330d0:	orr	r3, r3, ip, lsl #24
   330d4:	orr	r3, r3, lr, lsl #16
   330d8:	orr	r2, r3, r2, lsl #8
   330dc:	bl	326dc <crc32@@Base+0x18380>
   330e0:	cmp	r0, #0
   330e4:	bne	33494 <crc32@@Base+0x19138>
   330e8:	ldr	r1, [r4, #412]	; 0x19c
   330ec:	add	r1, r1, #1
   330f0:	str	r1, [r4, #412]	; 0x19c
   330f4:	ldr	r9, [r4, #388]	; 0x184
   330f8:	cmp	r9, #0
   330fc:	movgt	r9, #0
   33100:	mvnle	r9, #0
   33104:	ldr	r3, [sp, #32]
   33108:	mov	r0, r9
   3310c:	ldr	r2, [sp, #76]	; 0x4c
   33110:	ldr	r3, [r3]
   33114:	cmp	r2, r3
   33118:	bne	33504 <crc32@@Base+0x191a8>
   3311c:	add	sp, sp, #84	; 0x54
   33120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33124:	mov	r2, #0
   33128:	mov	r1, r5
   3312c:	mov	r0, r7
   33130:	bl	318d0 <crc32@@Base+0x17574>
   33134:	ldr	r2, [r0, #8]
   33138:	mov	r0, r7
   3313c:	ubfx	ip, r2, #8, #8
   33140:	ubfx	r1, r2, #16, #8
   33144:	lsr	r3, r2, #24
   33148:	orr	r3, r3, r2, lsl #24
   3314c:	orr	r3, r3, ip, lsl #16
   33150:	orr	r1, r3, r1, lsl #8
   33154:	bl	31424 <crc32@@Base+0x170c8>
   33158:	mov	r6, r0
   3315c:	bl	1267c <strlen@plt>
   33160:	str	r6, [sp]
   33164:	mov	r3, #2
   33168:	ldr	r2, [sp, #20]
   3316c:	mov	r1, r7
   33170:	ldr	ip, [sp, #12]
   33174:	add	r0, r0, #1
   33178:	str	r0, [sp, #4]
   3317c:	ldr	r0, [sp, #16]
   33180:	blx	ip
   33184:	cmn	r0, #1
   33188:	beq	32fc8 <crc32@@Base+0x18c6c>
   3318c:	ldr	r3, [sp, #128]	; 0x80
   33190:	tst	r3, #2
   33194:	beq	33474 <crc32@@Base+0x19118>
   33198:	cmp	r0, #0
   3319c:	beq	3348c <crc32@@Base+0x19130>
   331a0:	ldr	r3, [sp, #64]	; 0x40
   331a4:	cmp	r3, #0
   331a8:	moveq	r3, #1
   331ac:	streq	r3, [sp, #64]	; 0x40
   331b0:	ldr	r3, [r4, #404]	; 0x194
   331b4:	cmn	r3, #1
   331b8:	bne	32ff0 <crc32@@Base+0x18c94>
   331bc:	ldr	r2, [r4, #392]	; 0x188
   331c0:	ldr	r3, [sp, #56]	; 0x38
   331c4:	ldr	r1, [r2, #8]
   331c8:	cmp	r3, #0
   331cc:	ubfx	ip, r1, #8, #8
   331d0:	ubfx	r0, r1, #16, #8
   331d4:	lsr	r2, r1, #24
   331d8:	orr	r2, r2, r1, lsl #24
   331dc:	orr	r2, r2, ip, lsl #16
   331e0:	orr	r2, r2, r0, lsl #8
   331e4:	blt	3344c <crc32@@Base+0x190f0>
   331e8:	str	r7, [sp, #40]	; 0x28
   331ec:	mov	r6, r4
   331f0:	str	sl, [sp, #44]	; 0x2c
   331f4:	mov	r8, #0
   331f8:	str	r5, [sp, #36]	; 0x24
   331fc:	mov	r7, r3
   33200:	mov	sl, r2
   33204:	b	33228 <crc32@@Base+0x18ecc>
   33208:	ldr	r2, [r6, #4]
   3320c:	add	r8, r8, #1
   33210:	add	r6, r6, #12
   33214:	cmp	r2, #0
   33218:	moveq	r3, #1
   3321c:	streq	r3, [r6, #-8]
   33220:	cmp	r7, r8
   33224:	blt	3347c <crc32@@Base+0x19120>
   33228:	ldr	r9, [r6, #8]
   3322c:	cmp	r9, #0
   33230:	bne	33208 <crc32@@Base+0x18eac>
   33234:	ldr	r5, [r6]
   33238:	add	r2, sp, #52	; 0x34
   3323c:	ldr	r0, [r4, #392]	; 0x188
   33240:	mov	r1, r5
   33244:	bl	2e3a8 <crc32@@Base+0x1404c>
   33248:	ldr	r2, [sp, #52]	; 0x34
   3324c:	add	r1, sl, r5
   33250:	mov	r0, r4
   33254:	sub	r2, r2, r5
   33258:	bl	326dc <crc32@@Base+0x18380>
   3325c:	cmp	r0, #0
   33260:	bne	33104 <crc32@@Base+0x18da8>
   33264:	mov	r3, #1
   33268:	str	r3, [r6, #8]
   3326c:	str	r3, [r4, #400]	; 0x190
   33270:	b	33208 <crc32@@Base+0x18eac>
   33274:	ldr	r2, [sp, #56]	; 0x38
   33278:	ldr	r0, [sp, #64]	; 0x40
   3327c:	cmp	r2, #0
   33280:	blt	334ec <crc32@@Base+0x19190>
   33284:	cmp	r0, #0
   33288:	bne	33298 <crc32@@Base+0x18f3c>
   3328c:	ldr	r3, [sp, #128]	; 0x80
   33290:	tst	r3, #4
   33294:	moveq	r6, r5
   33298:	mov	r1, #12
   3329c:	ldr	r3, [sp, #68]	; 0x44
   332a0:	mla	r1, r1, r2, r4
   332a4:	sub	r2, r2, #1
   332a8:	str	r2, [sp, #56]	; 0x38
   332ac:	ldr	r2, [r1, #4]
   332b0:	str	r2, [sp, #64]	; 0x40
   332b4:	b	332cc <crc32@@Base+0x18f70>
   332b8:	sub	r3, r3, #1
   332bc:	str	r3, [sp, #68]	; 0x44
   332c0:	ldrb	r2, [r3]
   332c4:	cmp	r2, #47	; 0x2f
   332c8:	beq	332d4 <crc32@@Base+0x18f78>
   332cc:	cmp	sl, r3
   332d0:	bcc	332b8 <crc32@@Base+0x18f5c>
   332d4:	cmp	r0, #0
   332d8:	mov	r2, #0
   332dc:	strb	r2, [r3]
   332e0:	bne	32fe4 <crc32@@Base+0x18c88>
   332e4:	ldr	r1, [r4, #404]	; 0x194
   332e8:	cmn	r1, #1
   332ec:	beq	32ff0 <crc32@@Base+0x18c94>
   332f0:	ldr	r3, [sp, #24]
   332f4:	sub	r2, r6, r1
   332f8:	mov	r0, r4
   332fc:	add	r1, r1, r3
   33300:	bl	326dc <crc32@@Base+0x18380>
   33304:	cmp	r0, #0
   33308:	bne	33494 <crc32@@Base+0x19138>
   3330c:	mvn	r3, #0
   33310:	str	r3, [r4, #404]	; 0x194
   33314:	mov	r3, #1
   33318:	str	r3, [r4, #400]	; 0x190
   3331c:	b	32ff0 <crc32@@Base+0x18c94>
   33320:	ldr	r3, [sp, #56]	; 0x38
   33324:	add	r3, r3, #1
   33328:	str	r3, [sp, #56]	; 0x38
   3332c:	cmp	r3, #32
   33330:	beq	334ec <crc32@@Base+0x19190>
   33334:	add	r2, sp, #48	; 0x30
   33338:	mov	r1, r5
   3333c:	mov	r0, r7
   33340:	bl	31804 <crc32@@Base+0x174a8>
   33344:	ldr	r2, [sp, #68]	; 0x44
   33348:	ldr	r1, [sp, #48]	; 0x30
   3334c:	sub	r3, r2, sl
   33350:	add	r3, r3, #2
   33354:	add	r3, r3, r1
   33358:	ldr	r1, [sp, #124]	; 0x7c
   3335c:	cmp	r3, r1
   33360:	bge	334f4 <crc32@@Base+0x19198>
   33364:	add	r3, sl, #1
   33368:	mov	r1, r0
   3336c:	cmp	r2, r3
   33370:	addne	r3, r2, #1
   33374:	strne	r3, [sp, #68]	; 0x44
   33378:	movne	r3, #47	; 0x2f
   3337c:	strbne	r3, [r2]
   33380:	ldrne	r3, [sp, #68]	; 0x44
   33384:	mov	r0, r3
   33388:	bl	12484 <strcpy@plt>
   3338c:	ldr	r0, [sp, #56]	; 0x38
   33390:	mov	r2, #12
   33394:	ldr	r1, [sp, #64]	; 0x40
   33398:	ldr	r3, [sp, #68]	; 0x44
   3339c:	mul	r2, r2, r0
   333a0:	ldr	ip, [sp, #48]	; 0x30
   333a4:	cmp	r1, #1
   333a8:	add	r3, r3, ip
   333ac:	str	r3, [sp, #68]	; 0x44
   333b0:	add	r0, r4, r2
   333b4:	str	r1, [r0, #4]
   333b8:	str	r5, [r4, r2]
   333bc:	beq	333cc <crc32@@Base+0x19070>
   333c0:	ldr	r2, [sp, #128]	; 0x80
   333c4:	tst	r2, #12
   333c8:	bne	333d8 <crc32@@Base+0x1907c>
   333cc:	mov	r6, r5
   333d0:	mov	r2, #0
   333d4:	str	r2, [sp, #64]	; 0x40
   333d8:	sub	r3, r3, sl
   333dc:	str	sl, [sp]
   333e0:	add	r2, r3, #1
   333e4:	mov	r1, r7
   333e8:	str	r2, [sp, #4]
   333ec:	mov	r3, #1
   333f0:	mov	r2, r5
   333f4:	ldr	r0, [sp, #16]
   333f8:	ldr	ip, [sp, #12]
   333fc:	blx	ip
   33400:	cmp	r0, #0
   33404:	beq	33454 <crc32@@Base+0x190f8>
   33408:	ldr	r3, [sp, #28]
   3340c:	mov	r0, r3
   33410:	str	r3, [sp, #64]	; 0x40
   33414:	ldr	r3, [sp, #56]	; 0x38
   33418:	mov	r2, #12
   3341c:	str	r5, [sp, #20]
   33420:	mla	r3, r2, r3, r4
   33424:	str	r0, [r3, #8]
   33428:	b	32fdc <crc32@@Base+0x18c80>
   3342c:	mov	r3, #2
   33430:	str	r3, [sp, #60]	; 0x3c
   33434:	ldr	r3, [r4, #404]	; 0x194
   33438:	cmn	r3, #1
   3343c:	bne	32ff0 <crc32@@Base+0x18c94>
   33440:	ldr	r3, [sp, #128]	; 0x80
   33444:	tst	r3, #2
   33448:	bne	331bc <crc32@@Base+0x18e60>
   3344c:	str	r5, [r4, #404]	; 0x194
   33450:	b	32ff0 <crc32@@Base+0x18c94>
   33454:	ldr	r0, [sp, #64]	; 0x40
   33458:	cmp	r0, #0
   3345c:	moveq	r6, r5
   33460:	beq	33414 <crc32@@Base+0x190b8>
   33464:	cmp	r0, #3
   33468:	subne	r0, r0, #1
   3346c:	strne	r0, [sp, #64]	; 0x40
   33470:	b	33414 <crc32@@Base+0x190b8>
   33474:	mov	r6, r5
   33478:	b	32fdc <crc32@@Base+0x18c80>
   3347c:	add	r5, sp, #36	; 0x24
   33480:	ldm	r5, {r5, r7, sl}
   33484:	str	r5, [r4, #404]	; 0x194
   33488:	b	32ff0 <crc32@@Base+0x18c94>
   3348c:	mov	r6, r5
   33490:	b	332e4 <crc32@@Base+0x18f88>
   33494:	mov	r9, #0
   33498:	b	33104 <crc32@@Base+0x18da8>
   3349c:	ldr	r3, [sp, #128]	; 0x80
   334a0:	tst	r3, #16
   334a4:	beq	32f44 <crc32@@Base+0x18be8>
   334a8:	ldr	r3, [r7, #16]
   334ac:	mov	r0, r4
   334b0:	ubfx	ip, r3, #8, #8
   334b4:	ubfx	r2, r3, #16, #8
   334b8:	lsr	r1, r3, #24
   334bc:	orr	r1, r1, r3, lsl #24
   334c0:	ldr	r3, [sp, #24]
   334c4:	orr	r1, r1, ip, lsl #16
   334c8:	orr	r1, r1, r2, lsl #8
   334cc:	sub	r2, r3, r1
   334d0:	bl	326dc <crc32@@Base+0x18380>
   334d4:	cmp	r0, #0
   334d8:	bne	33494 <crc32@@Base+0x19138>
   334dc:	mov	r3, #1
   334e0:	str	r0, [r4, #400]	; 0x190
   334e4:	str	r3, [r4, #412]	; 0x19c
   334e8:	b	32f44 <crc32@@Base+0x18be8>
   334ec:	mvn	r9, #10
   334f0:	b	33104 <crc32@@Base+0x18da8>
   334f4:	mvn	r9, #2
   334f8:	b	33104 <crc32@@Base+0x18da8>
   334fc:	mvn	r9, #11
   33500:	b	33104 <crc32@@Base+0x18da8>
   33504:	bl	12538 <__stack_chk_fail@plt>
   33508:	push	{r4, r5, r6, lr}
   3350c:	mov	lr, #0
   33510:	ldr	ip, [sp, #28]
   33514:	mov	r6, #1
   33518:	ldr	r5, [sp, #16]
   3351c:	mvn	r4, #0
   33520:	str	r6, [ip, #400]	; 0x190
   33524:	str	r5, [ip, #420]	; 0x1a4
   33528:	str	r6, [ip, #396]	; 0x18c
   3352c:	str	r4, [ip, #404]	; 0x194
   33530:	str	lr, [ip, #416]	; 0x1a0
   33534:	str	r0, [ip, #392]	; 0x188
   33538:	strb	lr, [r5]
   3353c:	str	lr, [ip, #424]	; 0x1a8
   33540:	str	r4, [ip, #408]	; 0x198
   33544:	str	lr, [ip, #412]	; 0x19c
   33548:	pop	{r4, r5, r6, lr}
   3354c:	b	32ed0 <crc32@@Base+0x18b74>
   33550:	subs	r0, r0, #17
   33554:	movne	r0, #1
   33558:	bx	lr
   3355c:	ldr	r1, [r1, #44]	; 0x2c
   33560:	ldr	r2, [r3, #56]	; 0x38
   33564:	mov	r3, #1
   33568:	sub	r1, r1, #8
   3356c:	b	336dc <crc32@@Base+0x19380>
   33570:	mov	r1, #1
   33574:	b	33614 <crc32@@Base+0x192b8>
   33578:	mov	r1, #1
   3357c:	b	3359c <crc32@@Base+0x19240>
   33580:	ldr	r3, [r0]
   33584:	rev	r3, r3
   33588:	str	r3, [r0]
   3358c:	ldr	r3, [r1]
   33590:	rev	r3, r3
   33594:	str	r3, [r1]
   33598:	bx	lr
   3359c:	movw	r2, #3824	; 0xef0
   335a0:	movt	r2, #5
   335a4:	cmp	r1, #0
   335a8:	ldr	r3, [r0]
   335ac:	ldr	ip, [r2]
   335b0:	ldr	r1, [r0, #4]
   335b4:	push	{lr}		; (str lr, [sp, #-4]!)
   335b8:	sub	sp, sp, #20
   335bc:	str	ip, [sp, #12]
   335c0:	str	r3, [sp, #4]
   335c4:	str	r1, [sp, #8]
   335c8:	bne	335fc <crc32@@Base+0x192a0>
   335cc:	cmp	r3, #0
   335d0:	ldr	r1, [sp, #12]
   335d4:	ldr	r3, [r2]
   335d8:	ldrne	r0, [sp, #8]
   335dc:	mvneq	r0, #0
   335e0:	clzne	r0, r0
   335e4:	lsrne	r0, r0, #5
   335e8:	rsbne	r0, r0, #0
   335ec:	cmp	r1, r3
   335f0:	bne	33610 <crc32@@Base+0x192b4>
   335f4:	add	sp, sp, #20
   335f8:	pop	{pc}		; (ldr pc, [sp], #4)
   335fc:	add	r1, sp, #8
   33600:	add	r0, sp, #4
   33604:	bl	33580 <crc32@@Base+0x19224>
   33608:	ldr	r3, [sp, #4]
   3360c:	b	335cc <crc32@@Base+0x19270>
   33610:	bl	12538 <__stack_chk_fail@plt>
   33614:	push	{r4, lr}
   33618:	movw	r4, #3824	; 0xef0
   3361c:	movt	r4, #5
   33620:	cmp	r1, #0
   33624:	ldrd	r2, [r0]
   33628:	sub	sp, sp, #16
   3362c:	ldr	r1, [r4]
   33630:	strd	r2, [sp, #4]
   33634:	str	r1, [sp, #12]
   33638:	bne	33678 <crc32@@Base+0x1931c>
   3363c:	cmp	r2, #0
   33640:	beq	336b4 <crc32@@Base+0x19358>
   33644:	ldr	r3, [sp, #8]
   33648:	cmp	r3, #0
   3364c:	beq	33690 <crc32@@Base+0x19334>
   33650:	movw	r1, #57040	; 0xded0
   33654:	mov	r0, #1
   33658:	movt	r1, #3
   3365c:	bl	1282c <__printf_chk@plt>
   33660:	ldr	r2, [sp, #12]
   33664:	ldr	r3, [r4]
   33668:	cmp	r2, r3
   3366c:	bne	3368c <crc32@@Base+0x19330>
   33670:	add	sp, sp, #16
   33674:	pop	{r4, pc}
   33678:	add	r1, sp, #8
   3367c:	add	r0, sp, #4
   33680:	bl	33580 <crc32@@Base+0x19224>
   33684:	ldr	r2, [sp, #4]
   33688:	b	3363c <crc32@@Base+0x192e0>
   3368c:	bl	12538 <__stack_chk_fail@plt>
   33690:	movw	r1, #7868	; 0x1ebc
   33694:	movt	r1, #5
   33698:	movw	r2, #57000	; 0xdea8
   3369c:	movt	r2, #3
   336a0:	ldr	r0, [r1]
   336a4:	mov	r1, #1
   336a8:	bl	12358 <__fprintf_chk@plt>
   336ac:	mov	r0, #1
   336b0:	bl	12298 <exit@plt>
   336b4:	movw	r1, #7868	; 0x1ebc
   336b8:	movt	r1, #5
   336bc:	mov	r3, r2
   336c0:	movw	r2, #56968	; 0xde88
   336c4:	ldr	r0, [r1]
   336c8:	movt	r2, #3
   336cc:	mov	r1, #1
   336d0:	bl	12358 <__fprintf_chk@plt>
   336d4:	mov	r0, #1
   336d8:	bl	12298 <exit@plt>
   336dc:	cmp	r3, #0
   336e0:	stm	r0, {r1, r2}
   336e4:	bxeq	lr
   336e8:	add	r1, r0, #4
   336ec:	b	33580 <crc32@@Base+0x19224>
   336f0:	ldr	r2, [r0]
   336f4:	ldr	r3, [r0, #8]
   336f8:	cmp	r2, #0
   336fc:	beq	33720 <crc32@@Base+0x193c4>
   33700:	cmp	r3, #0
   33704:	movne	r3, #1
   33708:	bne	33718 <crc32@@Base+0x193bc>
   3370c:	ldr	r3, [r0, #16]
   33710:	adds	r3, r3, #0
   33714:	movne	r3, #1
   33718:	mov	r0, r3
   3371c:	bx	lr
   33720:	cmp	r3, #0
   33724:	ldr	r2, [r0, #16]
   33728:	beq	33718 <crc32@@Base+0x193bc>
   3372c:	adds	r3, r2, #0
   33730:	movne	r3, #1
   33734:	mov	r0, r3
   33738:	bx	lr
   3373c:	subs	r0, r0, #36	; 0x24
   33740:	movne	r0, #1
   33744:	bx	lr
   33748:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3374c:	mov	r8, #768	; 0x300
   33750:	mov	sl, r1
   33754:	mov	r9, r2
   33758:	mov	r1, #0
   3375c:	mov	r2, r8
   33760:	mov	r4, r0
   33764:	mov	fp, r3
   33768:	bl	12388 <memset@plt>
   3376c:	movw	r2, #58208	; 0xe360
   33770:	movt	r2, #3
   33774:	mov	r5, #1
   33778:	mov	r0, #56	; 0x38
   3377c:	mov	r1, #0
   33780:	ldrh	r7, [r2]
   33784:	sub	r9, sl, r9
   33788:	ldrb	r6, [r2, #2]
   3378c:	mov	r2, #12
   33790:	strh	r0, [r4, #4]
   33794:	add	r0, r4, #8
   33798:	strh	r1, [r4, #6]
   3379c:	movw	r1, #58212	; 0xe364
   337a0:	strh	r7, [r4]
   337a4:	movt	r1, #3
   337a8:	strb	r6, [r4, #2]
   337ac:	strb	r5, [r4, #3]
   337b0:	bl	12778 <strncpy@plt>
   337b4:	sub	r3, fp, #768	; 0x300
   337b8:	str	r3, [r4, #28]
   337bc:	add	r1, r4, #700	; 0x2bc
   337c0:	ldr	r3, [sp, #40]	; 0x28
   337c4:	add	r2, r4, #720	; 0x2d0
   337c8:	str	r9, [r4, #32]
   337cc:	mov	lr, #32
   337d0:	str	sl, [r4, #36]	; 0x24
   337d4:	mov	ip, #12
   337d8:	strb	r3, [r4, #26]
   337dc:	mov	r0, #100	; 0x64
   337e0:	str	r8, [r4, #40]	; 0x28
   337e4:	mov	r3, #3
   337e8:	str	r8, [r4, #48]	; 0x30
   337ec:	mov	r9, #7
   337f0:	str	lr, [r4, #44]	; 0x2c
   337f4:	mov	fp, #400	; 0x190
   337f8:	strh	ip, [r4, #60]	; 0x3c
   337fc:	movw	sl, #5000	; 0x1388
   33800:	strh	r0, [r4, #72]	; 0x48
   33804:	mov	r8, #532	; 0x214
   33808:	strh	r9, [r4, #74]	; 0x4a
   3380c:	mov	ip, #20
   33810:	str	fp, [r4, #76]	; 0x4c
   33814:	mov	lr, #2
   33818:	str	sl, [r4, #156]	; 0x9c
   3381c:	mov	r9, #16
   33820:	strh	r7, [r4, #56]	; 0x38
   33824:	mov	fp, #128	; 0x80
   33828:	strb	r6, [r4, #58]	; 0x3a
   3382c:	mov	sl, #48	; 0x30
   33830:	strh	r7, [r4, #68]	; 0x44
   33834:	mov	r0, #8
   33838:	strb	r6, [r4, #70]	; 0x46
   3383c:	strh	r7, [r4, #168]	; 0xa8
   33840:	strb	r6, [r4, #170]	; 0xaa
   33844:	str	r5, [r4, #20]
   33848:	strh	r5, [r4, #24]
   3384c:	strb	r5, [r4, #27]
   33850:	str	r5, [r4, #52]	; 0x34
   33854:	strb	r5, [r4, #59]	; 0x3b
   33858:	strh	r5, [r4, #62]	; 0x3e
   3385c:	str	r5, [r4, #64]	; 0x40
   33860:	strb	r5, [r4, #171]	; 0xab
   33864:	strh	r8, [r4, #172]	; 0xac
   33868:	strb	r3, [r4, #71]	; 0x47
   3386c:	strh	r3, [r4, #174]	; 0xae
   33870:	strh	r7, [r1]
   33874:	strb	r6, [r4, #702]	; 0x2be
   33878:	strb	r5, [r4, #703]	; 0x2bf
   3387c:	strh	ip, [r1, #4]
   33880:	strh	lr, [r1, #6]
   33884:	str	r9, [r4, #712]	; 0x2c8
   33888:	str	fp, [r4, #716]	; 0x2cc
   3388c:	strh	r7, [r2]
   33890:	strb	r6, [r4, #722]	; 0x2d2
   33894:	strb	r5, [r4, #723]	; 0x2d3
   33898:	strh	sl, [r2, #4]
   3389c:	strh	r0, [r2, #6]
   338a0:	str	r3, [r4, #728]	; 0x2d8
   338a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   338a8:	push	{r4, r5, r6, lr}
   338ac:	movw	r4, #3824	; 0xef0
   338b0:	movt	r4, #5
   338b4:	sub	sp, sp, #112	; 0x70
   338b8:	mov	r5, r1
   338bc:	mov	r6, r0
   338c0:	ldr	r3, [r4]
   338c4:	add	r0, sp, #4
   338c8:	str	r3, [sp, #108]	; 0x6c
   338cc:	bl	2aefc <crc32@@Base+0x10ba0>
   338d0:	mov	r2, r5
   338d4:	mov	r1, r6
   338d8:	add	r0, sp, #4
   338dc:	bl	2af5c <crc32@@Base+0x10c00>
   338e0:	add	r1, r6, r5
   338e4:	add	r0, sp, #4
   338e8:	bl	2af68 <crc32@@Base+0x10c0c>
   338ec:	ldr	r2, [sp, #108]	; 0x6c
   338f0:	ldr	r3, [r4]
   338f4:	cmp	r2, r3
   338f8:	bne	33904 <crc32@@Base+0x195a8>
   338fc:	add	sp, sp, #112	; 0x70
   33900:	pop	{r4, r5, r6, pc}
   33904:	bl	12538 <__stack_chk_fail@plt>
   33908:	push	{r4, r5, r6, lr}
   3390c:	mov	r5, r1
   33910:	movw	r1, #58244	; 0xe384
   33914:	movt	r1, #3
   33918:	mov	r4, r0
   3391c:	bl	12718 <strcmp@plt>
   33920:	cmp	r0, #0
   33924:	beq	33964 <crc32@@Base+0x19608>
   33928:	movw	r1, #58252	; 0xe38c
   3392c:	mov	r0, r4
   33930:	movt	r1, #3
   33934:	bl	12718 <strcmp@plt>
   33938:	cmp	r0, #0
   3393c:	bne	33a34 <crc32@@Base+0x196d8>
   33940:	cmp	r5, #0
   33944:	movw	r2, #58236	; 0xe37c
   33948:	movt	r2, #3
   3394c:	beq	33974 <crc32@@Base+0x19618>
   33950:	movw	r1, #58276	; 0xe3a4
   33954:	mov	r0, #1
   33958:	movt	r1, #3
   3395c:	bl	1282c <__printf_chk@plt>
   33960:	b	33974 <crc32@@Base+0x19618>
   33964:	movw	r2, #58224	; 0xe370
   33968:	movt	r2, #3
   3396c:	cmp	r5, #0
   33970:	bne	33950 <crc32@@Base+0x195f4>
   33974:	ldr	r6, [r4, #12]
   33978:	cmp	r6, #1
   3397c:	bne	33a54 <crc32@@Base+0x196f8>
   33980:	ldr	r3, [r4, #16]
   33984:	cmp	r3, #512	; 0x200
   33988:	bne	33a54 <crc32@@Base+0x196f8>
   3398c:	movw	r1, #58296	; 0xe3b8
   33990:	add	r0, r4, #512	; 0x200
   33994:	movt	r1, #3
   33998:	bl	12718 <strcmp@plt>
   3399c:	cmp	r0, #0
   339a0:	bne	33a54 <crc32@@Base+0x196f8>
   339a4:	ldr	r2, [r4, #532]	; 0x214
   339a8:	movw	r3, #16962	; 0x4242
   339ac:	movt	r3, #16962	; 0x4242
   339b0:	cmp	r2, r3
   339b4:	bne	33a54 <crc32@@Base+0x196f8>
   339b8:	ldr	r1, [r4, #536]	; 0x218
   339bc:	mov	r2, #5
   339c0:	movt	r2, #1
   339c4:	sub	r3, r1, #65536	; 0x10000
   339c8:	sub	r3, r3, #7
   339cc:	cmp	r1, r2
   339d0:	cmpne	r3, #1
   339d4:	bhi	33a54 <crc32@@Base+0x196f8>
   339d8:	ldr	r3, [r4, #524]	; 0x20c
   339dc:	movw	r1, #58212	; 0xe364
   339e0:	movt	r1, #3
   339e4:	add	r4, r4, r3
   339e8:	add	r0, r4, #8
   339ec:	bl	12718 <strcmp@plt>
   339f0:	subs	ip, r0, #0
   339f4:	bne	33a54 <crc32@@Base+0x196f8>
   339f8:	ldrb	r3, [r4, #26]
   339fc:	cmp	r3, #5
   33a00:	bne	33a54 <crc32@@Base+0x196f8>
   33a04:	cmp	r5, #0
   33a08:	beq	33a2c <crc32@@Base+0x196d0>
   33a0c:	ldr	r2, [r4, #28]
   33a10:	movw	r1, #41672	; 0xa2c8
   33a14:	ldr	r3, [r4, #48]	; 0x30
   33a18:	mov	r0, r6
   33a1c:	movt	r1, #3
   33a20:	mov	r5, ip
   33a24:	add	r2, r2, r3
   33a28:	bl	1282c <__printf_chk@plt>
   33a2c:	mov	r0, r5
   33a30:	pop	{r4, r5, r6, pc}
   33a34:	movw	r1, #58264	; 0xe398
   33a38:	mov	r0, r4
   33a3c:	movt	r1, #3
   33a40:	bl	12718 <strcmp@plt>
   33a44:	cmp	r0, #0
   33a48:	movweq	r2, #52156	; 0xcbbc
   33a4c:	movteq	r2, #3
   33a50:	beq	3396c <crc32@@Base+0x19610>
   33a54:	mvn	r5, #0
   33a58:	mov	r0, r5
   33a5c:	pop	{r4, r5, r6, pc}
   33a60:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33a64:	mov	r2, #4
   33a68:	mov	r5, r1
   33a6c:	mov	r4, r0
   33a70:	movw	r1, #58332	; 0xe3dc
   33a74:	add	r0, r0, #12
   33a78:	movt	r1, #3
   33a7c:	bl	12220 <strncmp@plt>
   33a80:	cmp	r0, #0
   33a84:	bne	33bd8 <crc32@@Base+0x1987c>
   33a88:	movw	r1, #58340	; 0xe3e4
   33a8c:	add	r0, r4, #16
   33a90:	movt	r1, #3
   33a94:	bl	12718 <strcmp@plt>
   33a98:	cmp	r0, #0
   33a9c:	bne	33bd8 <crc32@@Base+0x1987c>
   33aa0:	ldrh	r7, [r4, #26]
   33aa4:	movw	r1, #58296	; 0xe3b8
   33aa8:	movt	r1, #3
   33aac:	add	r6, r4, r7
   33ab0:	mov	r0, r6
   33ab4:	bl	12718 <strcmp@plt>
   33ab8:	cmp	r0, #0
   33abc:	bne	33bd8 <crc32@@Base+0x1987c>
   33ac0:	ldr	r2, [r6, #20]
   33ac4:	movw	r3, #16962	; 0x4242
   33ac8:	movt	r3, #16962	; 0x4242
   33acc:	cmp	r2, r3
   33ad0:	bne	33bd8 <crc32@@Base+0x1987c>
   33ad4:	ldr	r2, [r6, #24]
   33ad8:	mov	r3, #2
   33adc:	movt	r3, #1
   33ae0:	cmp	r2, r3
   33ae4:	beq	33b60 <crc32@@Base+0x19804>
   33ae8:	mov	r3, #9
   33aec:	movt	r3, #1
   33af0:	cmp	r2, r3
   33af4:	bne	33bd8 <crc32@@Base+0x1987c>
   33af8:	cmp	r5, #0
   33afc:	movw	r2, #58320	; 0xe3d0
   33b00:	movt	r2, #3
   33b04:	bne	33b70 <crc32@@Base+0x19814>
   33b08:	add	r4, r4, r7, lsl #1
   33b0c:	movw	r1, #58212	; 0xe364
   33b10:	add	r0, r4, #8
   33b14:	movt	r1, #3
   33b18:	bl	12718 <strcmp@plt>
   33b1c:	subs	ip, r0, #0
   33b20:	bne	33bd8 <crc32@@Base+0x1987c>
   33b24:	ldrb	r3, [r4, #26]
   33b28:	cmp	r3, #2
   33b2c:	bne	33bd8 <crc32@@Base+0x1987c>
   33b30:	cmp	r5, #0
   33b34:	beq	33b58 <crc32@@Base+0x197fc>
   33b38:	ldr	r2, [r4, #28]
   33b3c:	movw	r1, #41672	; 0xa2c8
   33b40:	ldr	r3, [r4, #48]	; 0x30
   33b44:	movt	r1, #3
   33b48:	mov	r0, #1
   33b4c:	mov	r5, ip
   33b50:	add	r2, r2, r3
   33b54:	bl	1282c <__printf_chk@plt>
   33b58:	mov	r0, r5
   33b5c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33b60:	cmp	r5, #0
   33b64:	movw	r2, #58304	; 0xe3c0
   33b68:	movt	r2, #3
   33b6c:	beq	33b08 <crc32@@Base+0x197ac>
   33b70:	movw	r1, #58348	; 0xe3ec
   33b74:	mov	r0, #1
   33b78:	movt	r1, #3
   33b7c:	bl	1282c <__printf_chk@plt>
   33b80:	ldr	r2, [r6, #24]
   33b84:	mov	r3, #2
   33b88:	movt	r3, #1
   33b8c:	cmp	r2, r3
   33b90:	beq	33be4 <crc32@@Base+0x19888>
   33b94:	ldrh	r2, [r4, #26]
   33b98:	cmp	r2, #1024	; 0x400
   33b9c:	lsrcs	r2, r2, #10
   33ba0:	movwcs	r1, #58384	; 0xe410
   33ba4:	movwcc	r1, #58404	; 0xe424
   33ba8:	movtcs	r1, #3
   33bac:	movtcc	r1, #3
   33bb0:	movcs	r0, #1
   33bb4:	movcc	r0, #1
   33bb8:	bl	1282c <__printf_chk@plt>
   33bbc:	movw	r1, #58424	; 0xe438
   33bc0:	ldrh	r2, [r4, #30]
   33bc4:	movt	r1, #3
   33bc8:	mov	r0, #1
   33bcc:	bl	1282c <__printf_chk@plt>
   33bd0:	ldrh	r7, [r4, #26]
   33bd4:	b	33b08 <crc32@@Base+0x197ac>
   33bd8:	mvn	r5, #0
   33bdc:	mov	r0, r5
   33be0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33be4:	ldrh	r2, [r4, #34]	; 0x22
   33be8:	movw	r1, #58364	; 0xe3fc
   33bec:	ldrh	r3, [r4, #32]
   33bf0:	movt	r1, #3
   33bf4:	ldrh	r8, [r4, #26]
   33bf8:	mov	r0, #1
   33bfc:	mov	r9, #0
   33c00:	umull	sl, fp, r2, r3
   33c04:	lsl	r6, sl, #3
   33c08:	lsl	r3, fp, #3
   33c0c:	orr	r3, r3, sl, lsr #29
   33c10:	umull	r6, r7, r6, r8
   33c14:	mla	r7, r3, r8, r7
   33c18:	lsr	r2, r6, #30
   33c1c:	orr	r2, r2, r7, lsl #2
   33c20:	bl	1282c <__printf_chk@plt>
   33c24:	b	33b94 <crc32@@Base+0x19838>
   33c28:	movw	r3, #42736	; 0xa6f0
   33c2c:	movt	r3, #30
   33c30:	push	{r4, lr}
   33c34:	ldr	r2, [r3]
   33c38:	cmp	r2, #0
   33c3c:	bne	33c94 <crc32@@Base+0x19938>
   33c40:	ldr	r0, [r3, #4]
   33c44:	mov	ip, #2
   33c48:	mov	r2, #9
   33c4c:	movt	ip, #1
   33c50:	movt	r2, #1
   33c54:	cmp	r0, r2
   33c58:	cmpne	r0, ip
   33c5c:	movw	r0, #42748	; 0xa6fc
   33c60:	movt	r0, #30
   33c64:	ldreq	r3, [r3, #8]
   33c68:	movne	r2, #2304	; 0x900
   33c6c:	ldrheq	r2, [r3, #26]
   33c70:	mov	r3, #8960	; 0x2300
   33c74:	str	r0, [r1, #8]
   33c78:	lsleq	r2, r2, #1
   33c7c:	addeq	r2, r2, #768	; 0x300
   33c80:	str	r2, [r1, #4]
   33c84:	mov	r1, #255	; 0xff
   33c88:	bl	126ac <__memset_chk@plt>
   33c8c:	mov	r0, #32
   33c90:	pop	{r4, pc}
   33c94:	mov	r2, #512	; 0x200
   33c98:	movw	r0, #42748	; 0xa6fc
   33c9c:	str	r2, [r1, #4]
   33ca0:	movt	r0, #30
   33ca4:	str	r0, [r1, #8]
   33ca8:	mov	r1, #255	; 0xff
   33cac:	bl	12388 <memset@plt>
   33cb0:	mov	r0, #0
   33cb4:	pop	{r4, pc}
   33cb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   33cbc:	movw	r5, #42736	; 0xa6f0
   33cc0:	movt	r5, #30
   33cc4:	sub	sp, sp, #8
   33cc8:	mov	r4, r0
   33ccc:	ldr	r6, [r1, #44]	; 0x2c
   33cd0:	ldr	r2, [r5]
   33cd4:	ldr	r9, [r3, #56]	; 0x38
   33cd8:	cmp	r2, #0
   33cdc:	bne	33e90 <crc32@@Base+0x19b34>
   33ce0:	ldr	r7, [r5, #4]
   33ce4:	mov	r2, #2
   33ce8:	mov	r3, #9
   33cec:	movt	r2, #1
   33cf0:	movt	r3, #1
   33cf4:	cmp	r7, r3
   33cf8:	cmpne	r7, r2
   33cfc:	beq	33dd0 <crc32@@Base+0x19a74>
   33d00:	mov	r3, #7
   33d04:	movt	r3, #1
   33d08:	cmp	r7, r3
   33d0c:	beq	33ee8 <crc32@@Base+0x19b8c>
   33d10:	mov	r3, #5
   33d14:	movt	r3, #1
   33d18:	cmp	r7, r3
   33d1c:	beq	33edc <crc32@@Base+0x19b80>
   33d20:	mov	r2, #8
   33d24:	movt	r2, #1
   33d28:	cmp	r7, r2
   33d2c:	movw	r3, #58264	; 0xe398
   33d30:	movt	r3, #3
   33d34:	movne	r3, #0
   33d38:	mov	r1, #12
   33d3c:	mov	r0, r4
   33d40:	movw	r2, #59924	; 0xea14
   33d44:	movt	r2, #3
   33d48:	bl	123a0 <snprintf@plt>
   33d4c:	ldr	r8, [r5, #4]
   33d50:	mov	r3, #512	; 0x200
   33d54:	mov	r7, #1
   33d58:	str	r3, [r4, #16]
   33d5c:	add	r0, r4, r3
   33d60:	add	r5, r4, #1536	; 0x600
   33d64:	str	r7, [r4, #12]
   33d68:	mov	r2, #8
   33d6c:	movw	r1, #58296	; 0xe3b8
   33d70:	movt	r1, #3
   33d74:	bl	12778 <strncpy@plt>
   33d78:	mov	r1, #1536	; 0x600
   33d7c:	str	r8, [r4, #536]	; 0x218
   33d80:	mov	r0, r5
   33d84:	str	r1, [r4, #524]	; 0x20c
   33d88:	mov	ip, #5
   33d8c:	str	r1, [r4, #540]	; 0x21c
   33d90:	mov	r3, r9
   33d94:	str	r7, [r4, #520]	; 0x208
   33d98:	movw	r2, #16962	; 0x4242
   33d9c:	str	r6, [r4, #528]	; 0x210
   33da0:	movt	r2, #16962	; 0x4242
   33da4:	str	r6, [r4, #544]	; 0x220
   33da8:	str	r2, [r4, #532]	; 0x214
   33dac:	mov	r2, r1
   33db0:	str	ip, [sp]
   33db4:	mov	r1, r6
   33db8:	bl	33748 <crc32@@Base+0x193ec>
   33dbc:	mov	r0, r5
   33dc0:	sub	r1, r6, #1568	; 0x620
   33dc4:	add	sp, sp, #8
   33dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   33dcc:	b	338a8 <crc32@@Base+0x1954c>
   33dd0:	add	sl, r0, #512	; 0x200
   33dd4:	ldr	r8, [r5, #8]
   33dd8:	mov	r5, r0
   33ddc:	mov	r2, #128	; 0x80
   33de0:	mov	r0, r5
   33de4:	mov	r1, r8
   33de8:	add	r5, r5, r2
   33dec:	bl	12658 <memcpy@plt>
   33df0:	cmp	sl, r5
   33df4:	bne	33ddc <crc32@@Base+0x19a80>
   33df8:	ldrh	r1, [r8, #26]
   33dfc:	add	r0, r6, r1
   33e00:	add	r5, r4, r1
   33e04:	sub	r0, r0, #1
   33e08:	bl	36eb4 <crc32@@Base+0x1cb58>
   33e0c:	mov	r2, #8
   33e10:	movw	r1, #58296	; 0xe3b8
   33e14:	movt	r1, #3
   33e18:	mov	sl, r0
   33e1c:	mov	r0, r5
   33e20:	bl	12778 <strncpy@plt>
   33e24:	ldrh	r2, [r8, #26]
   33e28:	mov	ip, #2
   33e2c:	str	r7, [r5, #24]
   33e30:	str	sl, [r5, #16]
   33e34:	mov	r3, r9
   33e38:	lsl	r2, r2, #1
   33e3c:	str	sl, [r5, #32]
   33e40:	add	r4, r4, r2
   33e44:	str	ip, [r5, #12]
   33e48:	str	ip, [r5, #28]
   33e4c:	movw	r1, #16962	; 0x4242
   33e50:	mov	r0, r4
   33e54:	movt	r1, #16962	; 0x4242
   33e58:	str	r1, [r5, #20]
   33e5c:	mov	r1, #1
   33e60:	str	r1, [r5, #8]
   33e64:	str	r1, [r5, #36]	; 0x24
   33e68:	mov	r1, r6
   33e6c:	str	ip, [sp]
   33e70:	bl	33748 <crc32@@Base+0x193ec>
   33e74:	ldrh	r1, [r8, #26]
   33e78:	mov	r0, r4
   33e7c:	sub	r1, r6, r1, lsl #1
   33e80:	sub	r1, r1, #32
   33e84:	add	sp, sp, #8
   33e88:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   33e8c:	b	338a8 <crc32@@Base+0x1954c>
   33e90:	add	r3, r0, #8
   33e94:	str	r9, [r0, #40]	; 0x28
   33e98:	sub	r6, r6, #512	; 0x200
   33e9c:	mvn	r1, #0
   33ea0:	str	r6, [r0, #4]
   33ea4:	movw	r2, #5768	; 0x1688
   33ea8:	str	r1, [r4, #44]	; 0x2c
   33eac:	movt	r2, #22664	; 0x5888
   33eb0:	mov	r0, r3
   33eb4:	str	r2, [r4]
   33eb8:	mov	r1, #0
   33ebc:	mov	r2, #32
   33ec0:	bl	12388 <memset@plt>
   33ec4:	movw	r1, #7520	; 0x1d60
   33ec8:	mov	r2, #32
   33ecc:	movt	r1, #5
   33ed0:	add	sp, sp, #8
   33ed4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   33ed8:	b	12778 <strncpy@plt>
   33edc:	movw	r3, #58252	; 0xe38c
   33ee0:	movt	r3, #3
   33ee4:	b	33d38 <crc32@@Base+0x199dc>
   33ee8:	movw	r3, #58244	; 0xe384
   33eec:	movt	r3, #3
   33ef0:	b	33d38 <crc32@@Base+0x199dc>
   33ef4:	ldr	r2, [r0]
   33ef8:	movw	r3, #5768	; 0x1688
   33efc:	movt	r3, #22664	; 0x5888
   33f00:	cmp	r2, r3
   33f04:	push	{r4, lr}
   33f08:	mov	r4, r0
   33f0c:	beq	33f4c <crc32@@Base+0x19bf0>
   33f10:	movw	r0, #58476	; 0xe46c
   33f14:	movt	r0, #3
   33f18:	bl	12310 <puts@plt>
   33f1c:	movw	r1, #58524	; 0xe49c
   33f20:	mov	r0, r4
   33f24:	movt	r1, #3
   33f28:	bl	12718 <strcmp@plt>
   33f2c:	mov	r1, #1
   33f30:	cmp	r0, #0
   33f34:	mov	r0, r4
   33f38:	beq	33f44 <crc32@@Base+0x19be8>
   33f3c:	pop	{r4, lr}
   33f40:	b	33908 <crc32@@Base+0x195ac>
   33f44:	pop	{r4, lr}
   33f48:	b	33a60 <crc32@@Base+0x19704>
   33f4c:	movw	r0, #58444	; 0xe44c
   33f50:	movt	r0, #3
   33f54:	bl	12310 <puts@plt>
   33f58:	ldr	r2, [r4, #40]	; 0x28
   33f5c:	movw	r1, #41672	; 0xa2c8
   33f60:	mov	r0, #1
   33f64:	movt	r1, #3
   33f68:	pop	{r4, lr}
   33f6c:	b	1282c <__printf_chk@plt>
   33f70:	ldr	r1, [r0]
   33f74:	movw	r2, #5768	; 0x1688
   33f78:	movt	r2, #22664	; 0x5888
   33f7c:	cmp	r1, r2
   33f80:	beq	33fb8 <crc32@@Base+0x19c5c>
   33f84:	push	{r4, lr}
   33f88:	movw	r1, #58524	; 0xe49c
   33f8c:	movt	r1, #3
   33f90:	mov	r4, r0
   33f94:	bl	12718 <strcmp@plt>
   33f98:	subs	r1, r0, #0
   33f9c:	mov	r0, r4
   33fa0:	beq	33fb0 <crc32@@Base+0x19c54>
   33fa4:	mov	r1, #0
   33fa8:	pop	{r4, lr}
   33fac:	b	33908 <crc32@@Base+0x195ac>
   33fb0:	pop	{r4, lr}
   33fb4:	b	33a60 <crc32@@Base+0x19704>
   33fb8:	mov	r0, #0
   33fbc:	bx	lr
   33fc0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33fc4:	ldr	r3, [r0, #56]	; 0x38
   33fc8:	cmp	r3, #0
   33fcc:	beq	34414 <crc32@@Base+0x1a0b8>
   33fd0:	ldr	r0, [r0, #64]	; 0x40
   33fd4:	cmp	r0, #0
   33fd8:	beq	3443c <crc32@@Base+0x1a0e0>
   33fdc:	bl	123ac <__strdup@plt>
   33fe0:	movw	r6, #7520	; 0x1d60
   33fe4:	subs	r8, r0, #0
   33fe8:	movteq	r6, #5
   33fec:	beq	34270 <crc32@@Base+0x19f14>
   33ff0:	movw	r7, #58612	; 0xe4f4
   33ff4:	mov	r4, #19
   33ff8:	movt	r6, #5
   33ffc:	movt	r7, #3
   34000:	movt	r4, #128	; 0x80
   34004:	mov	r9, r8
   34008:	b	34108 <crc32@@Base+0x19dac>
   3400c:	mov	r0, sl
   34010:	bl	1267c <strlen@plt>
   34014:	sub	r0, r0, #1
   34018:	adds	r1, sl, r0
   3401c:	bcs	34070 <crc32@@Base+0x19d14>
   34020:	ldrb	r3, [sl, r0]
   34024:	sub	r3, r3, #9
   34028:	uxtb	r3, r3
   3402c:	cmp	r3, #23
   34030:	bhi	34070 <crc32@@Base+0x19d14>
   34034:	mvn	r3, r4, lsr r3
   34038:	tst	r3, #1
   3403c:	bne	34070 <crc32@@Base+0x19d14>
   34040:	sub	r2, r1, #1
   34044:	sub	r0, sl, #1
   34048:	cmp	r2, r0
   3404c:	mov	r1, r2
   34050:	sub	r2, r2, #1
   34054:	beq	34070 <crc32@@Base+0x19d14>
   34058:	ldrb	r3, [r1]
   3405c:	sub	r3, r3, #9
   34060:	uxtb	r3, r3
   34064:	cmp	r3, #23
   34068:	mvn	r3, r4, lsr r3
   3406c:	bls	34244 <crc32@@Base+0x19ee8>
   34070:	ldrb	r3, [r1, #1]
   34074:	sub	r3, r3, #9
   34078:	uxtb	r3, r3
   3407c:	cmp	r3, #23
   34080:	bhi	34090 <crc32@@Base+0x19d34>
   34084:	mvn	r3, r4, lsr r3
   34088:	ands	r3, r3, #1
   3408c:	strbeq	r3, [r1, #1]
   34090:	mov	r1, r7
   34094:	mov	r0, r9
   34098:	bl	12718 <strcmp@plt>
   3409c:	movw	r1, #58620	; 0xe4fc
   340a0:	movt	r1, #3
   340a4:	cmp	r0, #0
   340a8:	mov	r0, r9
   340ac:	streq	sl, [r6, #32]
   340b0:	bl	12718 <strcmp@plt>
   340b4:	ldrb	r3, [r9]
   340b8:	cmp	r0, #0
   340bc:	streq	sl, [r6, #36]	; 0x24
   340c0:	cmp	r3, #108	; 0x6c
   340c4:	bne	340e0 <crc32@@Base+0x19d84>
   340c8:	ldrb	r3, [r9, #1]
   340cc:	cmp	r3, #107	; 0x6b
   340d0:	bne	340e0 <crc32@@Base+0x19d84>
   340d4:	ldrb	r3, [r9, #2]
   340d8:	cmp	r3, #0
   340dc:	streq	sl, [r6, #40]	; 0x28
   340e0:	mov	r0, r9
   340e4:	movw	r1, #58632	; 0xe508
   340e8:	movt	r1, #3
   340ec:	bl	12718 <strcmp@plt>
   340f0:	cmp	r0, #0
   340f4:	beq	3436c <crc32@@Base+0x1a010>
   340f8:	cmp	r5, #0
   340fc:	beq	34270 <crc32@@Base+0x19f14>
   34100:	adds	r9, r5, #1
   34104:	beq	34270 <crc32@@Base+0x19f14>
   34108:	mov	r1, #59	; 0x3b
   3410c:	mov	r0, r9
   34110:	bl	12820 <strchr@plt>
   34114:	subs	r5, r0, #0
   34118:	beq	3425c <crc32@@Base+0x19f00>
   3411c:	mov	r3, #0
   34120:	mov	r1, #61	; 0x3d
   34124:	strb	r3, [r5]
   34128:	mov	r0, r9
   3412c:	bl	12820 <strchr@plt>
   34130:	subs	fp, r0, #0
   34134:	beq	34100 <crc32@@Base+0x19da4>
   34138:	mov	r3, #0
   3413c:	strb	r3, [fp]
   34140:	ldrb	r3, [r9]
   34144:	add	sl, fp, #1
   34148:	sub	r3, r3, #9
   3414c:	uxtb	r3, r3
   34150:	cmp	r3, #23
   34154:	bhi	3417c <crc32@@Base+0x19e20>
   34158:	mvn	r3, r4, lsr r3
   3415c:	tst	r3, #1
   34160:	bne	3417c <crc32@@Base+0x19e20>
   34164:	ldrb	r3, [r9, #1]!
   34168:	sub	r3, r3, #9
   3416c:	uxtb	r3, r3
   34170:	cmp	r3, #23
   34174:	mvn	r3, r4, lsr r3
   34178:	bls	3415c <crc32@@Base+0x19e00>
   3417c:	mov	r0, r9
   34180:	bl	1267c <strlen@plt>
   34184:	sub	r0, r0, #1
   34188:	adds	r1, r9, r0
   3418c:	bcs	341e0 <crc32@@Base+0x19e84>
   34190:	ldrb	r3, [r9, r0]
   34194:	sub	r3, r3, #9
   34198:	uxtb	r3, r3
   3419c:	cmp	r3, #23
   341a0:	bhi	341e0 <crc32@@Base+0x19e84>
   341a4:	mvn	r3, r4, lsr r3
   341a8:	tst	r3, #1
   341ac:	bne	341e0 <crc32@@Base+0x19e84>
   341b0:	sub	r2, r1, #1
   341b4:	sub	r0, r9, #1
   341b8:	cmp	r2, r0
   341bc:	mov	r1, r2
   341c0:	sub	r2, r2, #1
   341c4:	beq	341e0 <crc32@@Base+0x19e84>
   341c8:	ldrb	r3, [r1]
   341cc:	sub	r3, r3, #9
   341d0:	uxtb	r3, r3
   341d4:	cmp	r3, #23
   341d8:	mvn	r3, r4, lsr r3
   341dc:	bls	34250 <crc32@@Base+0x19ef4>
   341e0:	ldrb	r3, [r1, #1]
   341e4:	sub	r3, r3, #9
   341e8:	uxtb	r3, r3
   341ec:	cmp	r3, #23
   341f0:	bhi	34200 <crc32@@Base+0x19ea4>
   341f4:	mvn	r3, r4, lsr r3
   341f8:	ands	r3, r3, #1
   341fc:	strbeq	r3, [r1, #1]
   34200:	ldrb	r3, [fp, #1]
   34204:	sub	r3, r3, #9
   34208:	uxtb	r3, r3
   3420c:	cmp	r3, #23
   34210:	bhi	3400c <crc32@@Base+0x19cb0>
   34214:	mvn	r3, r4, lsr r3
   34218:	tst	r3, #1
   3421c:	bne	3400c <crc32@@Base+0x19cb0>
   34220:	ldrb	r2, [sl, #1]!
   34224:	sub	r2, r2, #9
   34228:	uxtb	r2, r2
   3422c:	cmp	r2, #23
   34230:	mvn	r2, r4, lsr r2
   34234:	bhi	3400c <crc32@@Base+0x19cb0>
   34238:	tst	r2, #1
   3423c:	beq	34220 <crc32@@Base+0x19ec4>
   34240:	b	3400c <crc32@@Base+0x19cb0>
   34244:	tst	r3, #1
   34248:	beq	34048 <crc32@@Base+0x19cec>
   3424c:	b	34070 <crc32@@Base+0x19d14>
   34250:	tst	r3, #1
   34254:	beq	341b8 <crc32@@Base+0x19e5c>
   34258:	b	341e0 <crc32@@Base+0x19e84>
   3425c:	mov	r1, #61	; 0x3d
   34260:	mov	r0, r9
   34264:	bl	12820 <strchr@plt>
   34268:	subs	fp, r0, #0
   3426c:	bne	34138 <crc32@@Base+0x19ddc>
   34270:	ldr	r3, [r6, #40]	; 0x28
   34274:	cmp	r3, #0
   34278:	beq	34288 <crc32@@Base+0x19f2c>
   3427c:	ldrb	r3, [r3]
   34280:	cmp	r3, #49	; 0x31
   34284:	beq	343b4 <crc32@@Base+0x1a058>
   34288:	ldr	r7, [r6, #32]
   3428c:	movw	r0, #42668	; 0xa6ac
   34290:	movt	r0, #3
   34294:	movw	r5, #57072	; 0xdef0
   34298:	mov	r4, #0
   3429c:	movt	r5, #3
   342a0:	mov	r1, r7
   342a4:	bl	12718 <strcmp@plt>
   342a8:	cmp	r0, #0
   342ac:	beq	342d0 <crc32@@Base+0x19f74>
   342b0:	add	r4, r4, #1
   342b4:	cmp	r4, #5
   342b8:	beq	3438c <crc32@@Base+0x1a030>
   342bc:	ldr	r0, [r5, r4, lsl #3]
   342c0:	mov	r1, r7
   342c4:	bl	12718 <strcmp@plt>
   342c8:	cmp	r0, #0
   342cc:	bne	342b0 <crc32@@Base+0x19f54>
   342d0:	movw	r3, #57072	; 0xdef0
   342d4:	movt	r3, #3
   342d8:	add	r3, r3, r4, lsl #3
   342dc:	movw	r9, #42736	; 0xa6f0
   342e0:	movt	r9, #30
   342e4:	ldr	r5, [r3, #4]
   342e8:	str	r5, [r9, #4]
   342ec:	movw	r0, #58536	; 0xe4a8
   342f0:	ldr	r7, [r6, #36]	; 0x24
   342f4:	movt	r0, #3
   342f8:	mov	r4, #0
   342fc:	ldr	sl, [pc, #416]	; 344a4 <crc32@@Base+0x1a148>
   34300:	b	34308 <crc32@@Base+0x19fac>
   34304:	ldr	r0, [sl, r4, lsl #3]
   34308:	mov	r1, r7
   3430c:	bl	12718 <strcmp@plt>
   34310:	cmp	r0, #0
   34314:	beq	3439c <crc32@@Base+0x1a040>
   34318:	add	r4, r4, #1
   3431c:	cmp	r4, #9
   34320:	bne	34304 <crc32@@Base+0x19fa8>
   34324:	mov	r0, r8
   34328:	bl	121c0 <free@plt>
   3432c:	cmp	r5, #0
   34330:	beq	343d4 <crc32@@Base+0x1a078>
   34334:	mov	r3, #2
   34338:	mov	r0, #9
   3433c:	movt	r3, #1
   34340:	movt	r0, #1
   34344:	cmp	r5, r0
   34348:	cmpne	r5, r3
   3434c:	moveq	r0, #1
   34350:	movne	r0, #0
   34354:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34358:	ldr	r3, [r9, #8]
   3435c:	cmp	r3, #0
   34360:	beq	34464 <crc32@@Base+0x1a108>
   34364:	mov	r0, #0
   34368:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3436c:	mov	r3, sl
   34370:	movw	r2, #59924	; 0xea14
   34374:	movw	r0, #7520	; 0x1d60
   34378:	movt	r2, #3
   3437c:	mov	r1, #32
   34380:	movt	r0, #5
   34384:	bl	123a0 <snprintf@plt>
   34388:	b	340f8 <crc32@@Base+0x19d9c>
   3438c:	movw	r9, #42736	; 0xa6f0
   34390:	movt	r9, #30
   34394:	ldr	r5, [r9, #4]
   34398:	b	342ec <crc32@@Base+0x19f90>
   3439c:	movw	r3, #57072	; 0xdef0
   343a0:	movt	r3, #3
   343a4:	add	r3, r3, r4, lsl #3
   343a8:	ldr	r3, [r3, #44]	; 0x2c
   343ac:	str	r3, [r9, #8]
   343b0:	b	34324 <crc32@@Base+0x19fc8>
   343b4:	movw	r3, #42736	; 0xa6f0
   343b8:	movt	r3, #30
   343bc:	mov	r0, r8
   343c0:	mov	r2, #1
   343c4:	str	r2, [r3]
   343c8:	bl	121c0 <free@plt>
   343cc:	mov	r0, #0
   343d0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   343d4:	movw	r4, #7868	; 0x1ebc
   343d8:	movt	r4, #5
   343dc:	mov	r2, #41	; 0x29
   343e0:	mov	r1, #1
   343e4:	ldr	r3, [r4]
   343e8:	movw	r0, #58640	; 0xe510
   343ec:	movt	r0, #3
   343f0:	bl	12634 <fwrite@plt>
   343f4:	ldr	r3, [r4]
   343f8:	mov	r2, #40	; 0x28
   343fc:	mov	r1, #1
   34400:	movw	r0, #58684	; 0xe53c
   34404:	movt	r0, #3
   34408:	bl	12634 <fwrite@plt>
   3440c:	mvn	r0, #21
   34410:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34414:	movw	r3, #7868	; 0x1ebc
   34418:	movt	r3, #5
   3441c:	mov	r2, #33	; 0x21
   34420:	mov	r1, #1
   34424:	ldr	r3, [r3]
   34428:	movw	r0, #58544	; 0xe4b0
   3442c:	movt	r0, #3
   34430:	bl	12634 <fwrite@plt>
   34434:	mvn	r0, #21
   34438:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3443c:	movw	r3, #7868	; 0x1ebc
   34440:	movt	r3, #5
   34444:	mov	r2, #31
   34448:	mov	r1, #1
   3444c:	ldr	r3, [r3]
   34450:	movw	r0, #58580	; 0xe4d4
   34454:	movt	r0, #3
   34458:	bl	12634 <fwrite@plt>
   3445c:	mvn	r0, #21
   34460:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34464:	movw	r4, #7868	; 0x1ebc
   34468:	movt	r4, #5
   3446c:	mov	r2, #40	; 0x28
   34470:	mov	r1, #1
   34474:	ldr	r3, [r4]
   34478:	movw	r0, #58728	; 0xe568
   3447c:	movt	r0, #3
   34480:	bl	12634 <fwrite@plt>
   34484:	ldr	r0, [r4]
   34488:	ldr	r3, [r6, #32]
   3448c:	mov	r1, #1
   34490:	movw	r2, #58772	; 0xe594
   34494:	movt	r2, #3
   34498:	bl	12358 <__fprintf_chk@plt>
   3449c:	mvn	r0, #21
   344a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   344a4:	andeq	sp, r3, r8, lsl pc
   344a8:	push	{r4, r5, r6, lr}
   344ac:	mov	r4, r0
   344b0:	mov	r5, r1
   344b4:	bl	126f4 <ENGINE_load_builtin_engines@plt>
   344b8:	mov	r0, r4
   344bc:	bl	1240c <ENGINE_by_id@plt>
   344c0:	subs	r4, r0, #0
   344c4:	beq	34550 <crc32@@Base+0x1a1f4>
   344c8:	bl	122e0 <ENGINE_init@plt>
   344cc:	cmp	r0, #0
   344d0:	beq	344f0 <crc32@@Base+0x1a194>
   344d4:	mov	r0, r4
   344d8:	bl	123dc <ENGINE_set_default_RSA@plt>
   344dc:	cmp	r0, #0
   344e0:	beq	34524 <crc32@@Base+0x1a1c8>
   344e4:	str	r4, [r5]
   344e8:	mov	r0, #0
   344ec:	pop	{r4, r5, r6, pc}
   344f0:	movw	r3, #7868	; 0x1ebc
   344f4:	movt	r3, #5
   344f8:	movw	r0, #59000	; 0xe678
   344fc:	mov	r2, #27
   34500:	ldr	r3, [r3]
   34504:	movt	r0, #3
   34508:	mov	r1, #1
   3450c:	bl	12634 <fwrite@plt>
   34510:	mov	r0, r4
   34514:	bl	12244 <ENGINE_free@plt>
   34518:	bl	122f8 <ENGINE_cleanup@plt>
   3451c:	mvn	r0, #0
   34520:	pop	{r4, r5, r6, pc}
   34524:	movw	r3, #7868	; 0x1ebc
   34528:	movt	r3, #5
   3452c:	mov	r2, #39	; 0x27
   34530:	mov	r1, #1
   34534:	ldr	r3, [r3]
   34538:	movw	r0, #59028	; 0xe694
   3453c:	movt	r0, #3
   34540:	bl	12634 <fwrite@plt>
   34544:	mov	r0, r4
   34548:	bl	1219c <ENGINE_finish@plt>
   3454c:	b	34510 <crc32@@Base+0x1a1b4>
   34550:	movw	r3, #7868	; 0x1ebc
   34554:	movt	r3, #5
   34558:	movw	r0, #58976	; 0xe660
   3455c:	mov	r2, #23
   34560:	ldr	r3, [r3]
   34564:	mov	r1, #1
   34568:	movt	r0, #3
   3456c:	bl	12634 <fwrite@plt>
   34570:	b	34518 <crc32@@Base+0x1a1bc>
   34574:	push	{r4, r5, r6, lr}
   34578:	mov	r6, r0
   3457c:	bl	12574 <ERR_get_error@plt>
   34580:	movw	r4, #7868	; 0x1ebc
   34584:	movt	r4, #5
   34588:	ldr	r1, [r4]
   3458c:	mov	r5, r0
   34590:	mov	r0, r6
   34594:	bl	127cc <fputs@plt>
   34598:	mov	r0, r5
   3459c:	mov	r1, #0
   345a0:	ldr	r4, [r4]
   345a4:	bl	12100 <ERR_error_string@plt>
   345a8:	mov	r1, #1
   345ac:	movw	r2, #33088	; 0x8140
   345b0:	movt	r2, #3
   345b4:	mov	r3, r0
   345b8:	mov	r0, r4
   345bc:	bl	12358 <__fprintf_chk@plt>
   345c0:	mvn	r0, #0
   345c4:	pop	{r4, r5, r6, pc}
   345c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   345cc:	movw	r4, #3824	; 0xef0
   345d0:	movt	r4, #5
   345d4:	mov	r7, r3
   345d8:	sub	sp, sp, #1040	; 0x410
   345dc:	mov	r5, r2
   345e0:	ldr	r3, [r4]
   345e4:	sub	sp, sp, #8
   345e8:	mov	r2, #0
   345ec:	mov	r8, r0
   345f0:	str	r2, [r7]
   345f4:	mov	r0, r5
   345f8:	mov	sl, r1
   345fc:	str	r3, [sp, #1044]	; 0x414
   34600:	bl	12208 <ENGINE_get_id@plt>
   34604:	cmp	r0, #0
   34608:	beq	346e0 <crc32@@Base+0x1a384>
   3460c:	movw	r1, #59068	; 0xe6bc
   34610:	movt	r1, #3
   34614:	bl	12718 <strcmp@plt>
   34618:	subs	r9, r0, #0
   3461c:	bne	346e0 <crc32@@Base+0x1a384>
   34620:	cmp	r8, #0
   34624:	add	r6, sp, #20
   34628:	mov	r3, #1024	; 0x400
   3462c:	beq	346a8 <crc32@@Base+0x1a34c>
   34630:	movw	r2, #59076	; 0xe6c4
   34634:	str	sl, [sp, #8]
   34638:	movt	r2, #3
   3463c:	str	r8, [sp, #4]
   34640:	str	r2, [sp]
   34644:	mov	r0, r6
   34648:	mov	r1, r3
   3464c:	mov	r2, #1
   34650:	bl	12688 <__snprintf_chk@plt>
   34654:	mov	r3, #0
   34658:	mov	r0, r5
   3465c:	mov	r1, r6
   34660:	mov	r2, r3
   34664:	bl	12130 <ENGINE_load_private_key@plt>
   34668:	subs	r5, r0, #0
   3466c:	beq	346cc <crc32@@Base+0x1a370>
   34670:	bl	12340 <EVP_PKEY_get1_RSA@plt>
   34674:	subs	r6, r0, #0
   34678:	beq	34708 <crc32@@Base+0x1a3ac>
   3467c:	mov	r0, r5
   34680:	bl	12148 <EVP_PKEY_free@plt>
   34684:	str	r6, [r7]
   34688:	ldr	r2, [sp, #1044]	; 0x414
   3468c:	mov	r0, r9
   34690:	ldr	r3, [r4]
   34694:	cmp	r2, r3
   34698:	bne	34724 <crc32@@Base+0x1a3c8>
   3469c:	add	sp, sp, #1040	; 0x410
   346a0:	add	sp, sp, #8
   346a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   346a8:	str	sl, [sp, #4]
   346ac:	movw	r2, #59112	; 0xe6e8
   346b0:	mov	r0, r6
   346b4:	movt	r2, #3
   346b8:	mov	r1, r3
   346bc:	str	r2, [sp]
   346c0:	mov	r2, #1
   346c4:	bl	12688 <__snprintf_chk@plt>
   346c8:	b	34654 <crc32@@Base+0x1a2f8>
   346cc:	movw	r0, #59168	; 0xe720
   346d0:	movt	r0, #3
   346d4:	bl	34574 <crc32@@Base+0x1a218>
   346d8:	mov	r9, r0
   346dc:	b	34688 <crc32@@Base+0x1a32c>
   346e0:	movw	r3, #7868	; 0x1ebc
   346e4:	movt	r3, #5
   346e8:	movw	r0, #59144	; 0xe708
   346ec:	mov	r2, #21
   346f0:	ldr	r3, [r3]
   346f4:	mov	r1, #1
   346f8:	movt	r0, #3
   346fc:	mvn	r9, #94	; 0x5e
   34700:	bl	12634 <fwrite@plt>
   34704:	b	34688 <crc32@@Base+0x1a32c>
   34708:	movw	r0, #59208	; 0xe748
   3470c:	movt	r0, #3
   34710:	bl	34574 <crc32@@Base+0x1a218>
   34714:	mov	r0, r5
   34718:	bl	12148 <EVP_PKEY_free@plt>
   3471c:	mvn	r9, #21
   34720:	b	34688 <crc32@@Base+0x1a32c>
   34724:	bl	12538 <__stack_chk_fail@plt>
   34728:	push	{r4, r5, r6, r7, r8, lr}
   3472c:	movw	r5, #3824	; 0xef0
   34730:	movt	r5, #5
   34734:	sub	sp, sp, #1040	; 0x410
   34738:	sub	sp, sp, #8
   3473c:	mov	r3, #1024	; 0x400
   34740:	ldr	ip, [r5]
   34744:	mov	r6, r2
   34748:	str	r1, [sp, #8]
   3474c:	movw	r2, #59244	; 0xe76c
   34750:	str	r0, [sp, #4]
   34754:	mov	r1, r3
   34758:	movt	r2, #3
   3475c:	mov	r4, #0
   34760:	str	r2, [sp]
   34764:	add	r0, sp, #20
   34768:	mov	r2, #1
   3476c:	str	r4, [r6]
   34770:	str	ip, [sp, #1044]	; 0x414
   34774:	bl	12688 <__snprintf_chk@plt>
   34778:	add	r0, sp, #20
   3477c:	movw	r1, #53956	; 0xd2c4
   34780:	movt	r1, #3
   34784:	bl	123d0 <fopen@plt>
   34788:	subs	r7, r0, #0
   3478c:	beq	347d4 <crc32@@Base+0x1a478>
   34790:	add	r3, sp, #20
   34794:	mov	r2, r4
   34798:	mov	r1, r4
   3479c:	bl	1228c <PEM_read_RSAPrivateKey@plt>
   347a0:	subs	r8, r0, #0
   347a4:	beq	34810 <crc32@@Base+0x1a4b4>
   347a8:	mov	r0, r7
   347ac:	bl	126b8 <fclose@plt>
   347b0:	mov	r0, r4
   347b4:	str	r8, [r6]
   347b8:	ldr	r2, [sp, #1044]	; 0x414
   347bc:	ldr	r3, [r5]
   347c0:	cmp	r2, r3
   347c4:	bne	3482c <crc32@@Base+0x1a4d0>
   347c8:	add	sp, sp, #1040	; 0x410
   347cc:	add	sp, sp, #8
   347d0:	pop	{r4, r5, r6, r7, r8, pc}
   347d4:	movw	r3, #7868	; 0x1ebc
   347d8:	movt	r3, #5
   347dc:	ldr	r4, [r3]
   347e0:	bl	12748 <__errno_location@plt>
   347e4:	ldr	r0, [r0]
   347e8:	bl	122a4 <strerror@plt>
   347ec:	add	r3, sp, #20
   347f0:	movw	r2, #59256	; 0xe778
   347f4:	mov	r1, #1
   347f8:	movt	r2, #3
   347fc:	str	r0, [sp]
   34800:	mov	r0, r4
   34804:	bl	12358 <__fprintf_chk@plt>
   34808:	mvn	r0, #1
   3480c:	b	347b8 <crc32@@Base+0x1a45c>
   34810:	movw	r0, #59300	; 0xe7a4
   34814:	movt	r0, #3
   34818:	bl	34574 <crc32@@Base+0x1a218>
   3481c:	mov	r0, r7
   34820:	bl	126b8 <fclose@plt>
   34824:	mvn	r0, #70	; 0x46
   34828:	b	347b8 <crc32@@Base+0x1a45c>
   3482c:	bl	12538 <__stack_chk_fail@plt>
   34830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34834:	sub	sp, sp, #28
   34838:	mov	r5, r3
   3483c:	ldr	r4, [sp, #64]	; 0x40
   34840:	str	r2, [sp, #20]
   34844:	cmp	r4, #0
   34848:	add	r2, r4, #31
   3484c:	strd	r0, [sp, #12]
   34850:	movlt	r4, r2
   34854:	bl	12814 <BN_new@plt>
   34858:	mov	r6, r0
   3485c:	bl	12814 <BN_new@plt>
   34860:	mov	sl, r0
   34864:	bl	12814 <BN_new@plt>
   34868:	mov	fp, r0
   3486c:	bl	12814 <BN_new@plt>
   34870:	cmp	sl, #0
   34874:	cmpne	r6, #0
   34878:	beq	34988 <crc32@@Base+0x1a62c>
   3487c:	cmp	r0, #0
   34880:	cmpne	fp, #0
   34884:	mov	r8, r0
   34888:	beq	34988 <crc32@@Base+0x1a62c>
   3488c:	bl	1243c <BN_CTX_new@plt>
   34890:	asr	r4, r4, #5
   34894:	mov	r1, #2
   34898:	lsl	r3, r4, r1
   3489c:	str	r3, [sp, #8]
   348a0:	mov	r4, r3
   348a4:	mov	r9, r0
   348a8:	mov	r0, sl
   348ac:	bl	12550 <BN_set_word@plt>
   348b0:	mov	r1, #32
   348b4:	mov	r0, fp
   348b8:	bl	12550 <BN_set_word@plt>
   348bc:	mov	r3, r9
   348c0:	mov	r2, fp
   348c4:	mov	r1, sl
   348c8:	mov	r0, r8
   348cc:	bl	124cc <BN_exp@plt>
   348d0:	mov	r0, r4
   348d4:	bl	12664 <malloc@plt>
   348d8:	subs	r7, r0, #0
   348dc:	beq	349b0 <crc32@@Base+0x1a654>
   348e0:	ldr	r3, [sp, #8]
   348e4:	sub	r4, r3, #4
   348e8:	adds	r4, r7, r4
   348ec:	bcs	34930 <crc32@@Base+0x1a5d4>
   348f0:	mov	r3, r8
   348f4:	mov	r2, r5
   348f8:	mov	r1, r6
   348fc:	str	r9, [sp]
   34900:	mov	r0, #0
   34904:	bl	12418 <BN_div@plt>
   34908:	mov	r0, r6
   3490c:	bl	1258c <BN_get_word@plt>
   34910:	mov	r2, #32
   34914:	mov	r1, r5
   34918:	rev	r3, r0
   3491c:	mov	r0, r5
   34920:	str	r3, [r4], #-4
   34924:	bl	12700 <BN_rshift@plt>
   34928:	cmp	r7, r4
   3492c:	bls	348f0 <crc32@@Base+0x1a594>
   34930:	ldr	r3, [sp, #8]
   34934:	add	r0, sp, #12
   34938:	str	r3, [sp]
   3493c:	mov	r3, r7
   34940:	ldm	r0, {r0, r1, r2}
   34944:	bl	2fbb8 <crc32@@Base+0x1585c>
   34948:	mov	r4, r0
   3494c:	mov	r0, r7
   34950:	bl	121c0 <free@plt>
   34954:	mov	r0, r6
   34958:	bl	122ec <BN_free@plt>
   3495c:	mov	r0, sl
   34960:	bl	122ec <BN_free@plt>
   34964:	mov	r0, fp
   34968:	bl	122ec <BN_free@plt>
   3496c:	mov	r0, r8
   34970:	bl	122ec <BN_free@plt>
   34974:	cmp	r4, #0
   34978:	mvnne	r4, #2
   3497c:	mov	r0, r4
   34980:	add	sp, sp, #28
   34984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34988:	movw	r3, #7868	; 0x1ebc
   3498c:	movt	r3, #5
   34990:	movw	r0, #59328	; 0xe7c0
   34994:	mov	r2, #23
   34998:	ldr	r3, [r3]
   3499c:	mov	r1, #1
   349a0:	movt	r0, #3
   349a4:	mvn	r4, #11
   349a8:	bl	12634 <fwrite@plt>
   349ac:	b	3497c <crc32@@Base+0x1a620>
   349b0:	movw	r1, #7868	; 0x1ebc
   349b4:	movt	r1, #5
   349b8:	ldr	r3, [sp, #8]
   349bc:	movw	r2, #31788	; 0x7c2c
   349c0:	ldr	r0, [r1]
   349c4:	movt	r2, #3
   349c8:	mov	r1, #1
   349cc:	mvn	r4, #11
   349d0:	bl	12358 <__fprintf_chk@plt>
   349d4:	b	3497c <crc32@@Base+0x1a620>
   349d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   349dc:	movw	r4, #3824	; 0xef0
   349e0:	movt	r4, #5
   349e4:	mov	r7, r1
   349e8:	sub	sp, sp, #60	; 0x3c
   349ec:	mov	r5, r0
   349f0:	ldr	r1, [r4]
   349f4:	mov	r8, r2
   349f8:	mov	sl, r3
   349fc:	ldr	r9, [sp, #96]	; 0x60
   34a00:	mov	r3, #0
   34a04:	str	r3, [sp, #40]	; 0x28
   34a08:	str	r1, [sp, #52]	; 0x34
   34a0c:	bl	12544 <SSL_library_init@plt>
   34a10:	cmp	r0, #0
   34a14:	beq	34ce8 <crc32@@Base+0x1a98c>
   34a18:	bl	121d8 <SSL_load_error_strings@plt>
   34a1c:	bl	1216c <OPENSSL_add_all_algorithms_noconf@plt>
   34a20:	bl	12280 <OpenSSL_add_all_digests@plt>
   34a24:	bl	12790 <OpenSSL_add_all_ciphers@plt>
   34a28:	ldr	r0, [r5, #44]	; 0x2c
   34a2c:	cmp	r0, #0
   34a30:	beq	34a44 <crc32@@Base+0x1a6e8>
   34a34:	add	r1, sp, #40	; 0x28
   34a38:	bl	344a8 <crc32@@Base+0x1a14c>
   34a3c:	subs	r6, r0, #0
   34a40:	bne	34a94 <crc32@@Base+0x1a738>
   34a44:	ldr	r2, [sp, #40]	; 0x28
   34a48:	ldr	r0, [r5]
   34a4c:	cmp	r2, #0
   34a50:	ldr	r1, [r5, #4]
   34a54:	beq	34ac4 <crc32@@Base+0x1a768>
   34a58:	add	r3, sp, #36	; 0x24
   34a5c:	bl	345c8 <crc32@@Base+0x1a26c>
   34a60:	mov	r6, r0
   34a64:	cmp	r6, #0
   34a68:	beq	34ad8 <crc32@@Base+0x1a77c>
   34a6c:	ldr	r3, [r5, #44]	; 0x2c
   34a70:	cmp	r3, #0
   34a74:	beq	34a94 <crc32@@Base+0x1a738>
   34a78:	ldr	r5, [sp, #40]	; 0x28
   34a7c:	cmp	r5, #0
   34a80:	beq	34a94 <crc32@@Base+0x1a738>
   34a84:	mov	r0, r5
   34a88:	bl	1219c <ENGINE_finish@plt>
   34a8c:	mov	r0, r5
   34a90:	bl	12244 <ENGINE_free@plt>
   34a94:	bl	12454 <CRYPTO_cleanup_all_ex_data@plt>
   34a98:	bl	124fc <ERR_free_strings@plt>
   34a9c:	mov	r0, #0
   34aa0:	bl	12274 <ERR_remove_thread_state@plt>
   34aa4:	bl	127f0 <EVP_cleanup@plt>
   34aa8:	ldr	r2, [sp, #52]	; 0x34
   34aac:	mov	r0, r6
   34ab0:	ldr	r3, [r4]
   34ab4:	cmp	r2, r3
   34ab8:	bne	34dc0 <crc32@@Base+0x1aa64>
   34abc:	add	sp, sp, #60	; 0x3c
   34ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34ac4:	add	r2, sp, #36	; 0x24
   34ac8:	bl	34728 <crc32@@Base+0x1a3cc>
   34acc:	mov	r6, r0
   34ad0:	cmp	r6, #0
   34ad4:	bne	34a6c <crc32@@Base+0x1a710>
   34ad8:	ldr	r3, [r5, #24]
   34adc:	ldr	fp, [sp, #36]	; 0x24
   34ae0:	str	r3, [sp, #16]
   34ae4:	ldr	r3, [r5, #20]
   34ae8:	str	r3, [sp, #20]
   34aec:	bl	12514 <EVP_PKEY_new@plt>
   34af0:	subs	r3, r0, #0
   34af4:	str	r3, [sp, #12]
   34af8:	beq	34cd4 <crc32@@Base+0x1a978>
   34afc:	mov	r1, fp
   34b00:	bl	1261c <EVP_PKEY_set1_RSA@plt>
   34b04:	cmp	r0, #0
   34b08:	beq	34c64 <crc32@@Base+0x1a908>
   34b0c:	ldr	r0, [sp, #12]
   34b10:	bl	12268 <EVP_PKEY_size@plt>
   34b14:	str	r0, [sp, #48]	; 0x30
   34b18:	str	r0, [sp, #24]
   34b1c:	bl	12664 <malloc@plt>
   34b20:	subs	r3, r0, #0
   34b24:	str	r3, [sp, #28]
   34b28:	ldr	r3, [sp, #24]
   34b2c:	beq	34c9c <crc32@@Base+0x1a940>
   34b30:	bl	12394 <EVP_MD_CTX_create@plt>
   34b34:	subs	r3, r0, #0
   34b38:	str	r3, [sp, #24]
   34b3c:	beq	34d10 <crc32@@Base+0x1a9b4>
   34b40:	bl	1273c <EVP_MD_CTX_init@plt>
   34b44:	mov	r1, r6
   34b48:	ldr	r0, [sp, #12]
   34b4c:	bl	1225c <EVP_PKEY_CTX_new@plt>
   34b50:	cmp	r0, #0
   34b54:	str	r0, [sp, #44]	; 0x2c
   34b58:	beq	34dac <crc32@@Base+0x1aa50>
   34b5c:	ldr	r3, [sp, #20]
   34b60:	ldr	r3, [r3, #16]
   34b64:	blx	r3
   34b68:	ldr	r3, [sp, #12]
   34b6c:	add	r1, sp, #44	; 0x2c
   34b70:	str	r3, [sp]
   34b74:	mov	r3, r6
   34b78:	mov	r2, r0
   34b7c:	ldr	r0, [sp, #24]
   34b80:	bl	126d0 <EVP_DigestSignInit@plt>
   34b84:	cmp	r0, #0
   34b88:	ble	34d54 <crc32@@Base+0x1a9f8>
   34b8c:	ldr	r3, [sp, #16]
   34b90:	cmp	r3, #0
   34b94:	beq	34bf8 <crc32@@Base+0x1a89c>
   34b98:	ldr	r3, [sp, #16]
   34b9c:	ldr	r3, [r3]
   34ba0:	ldrb	r2, [r3]
   34ba4:	cmp	r2, #112	; 0x70
   34ba8:	bne	34bf8 <crc32@@Base+0x1a89c>
   34bac:	ldrb	r2, [r3, #1]
   34bb0:	cmp	r2, #115	; 0x73
   34bb4:	bne	34bf8 <crc32@@Base+0x1a89c>
   34bb8:	ldrb	r2, [r3, #2]
   34bbc:	cmp	r2, #115	; 0x73
   34bc0:	bne	34bf8 <crc32@@Base+0x1a89c>
   34bc4:	ldrb	r2, [r3, #3]
   34bc8:	cmp	r2, #0
   34bcc:	bne	34bf8 <crc32@@Base+0x1a89c>
   34bd0:	mov	r3, #6
   34bd4:	str	r2, [sp, #4]
   34bd8:	mov	r1, r3
   34bdc:	str	r3, [sp]
   34be0:	ldr	r0, [sp, #44]	; 0x2c
   34be4:	movw	r3, #4097	; 0x1001
   34be8:	mvn	r2, #0
   34bec:	bl	12238 <EVP_PKEY_CTX_ctrl@plt>
   34bf0:	cmp	r0, #0
   34bf4:	ble	34d98 <crc32@@Base+0x1aa3c>
   34bf8:	cmp	r8, #0
   34bfc:	ble	34d2c <crc32@@Base+0x1a9d0>
   34c00:	str	sl, [sp, #16]
   34c04:	mov	fp, #0
   34c08:	str	r9, [sp, #20]
   34c0c:	mov	sl, r7
   34c10:	ldr	r9, [sp, #24]
   34c14:	b	34c28 <crc32@@Base+0x1a8cc>
   34c18:	add	fp, fp, #1
   34c1c:	add	sl, sl, #8
   34c20:	cmp	r8, fp
   34c24:	beq	34d24 <crc32@@Base+0x1a9c8>
   34c28:	ldr	r2, [sl, #4]
   34c2c:	mov	r0, r9
   34c30:	ldr	r1, [r7, fp, lsl #3]
   34c34:	bl	1270c <EVP_DigestUpdate@plt>
   34c38:	cmp	r0, #0
   34c3c:	bne	34c18 <crc32@@Base+0x1a8bc>
   34c40:	movw	r0, #59592	; 0xe8c8
   34c44:	movt	r0, #3
   34c48:	bl	34574 <crc32@@Base+0x1a218>
   34c4c:	mov	r7, r0
   34c50:	ldr	r0, [sp, #24]
   34c54:	bl	12520 <EVP_MD_CTX_destroy@plt>
   34c58:	ldr	r0, [sp, #28]
   34c5c:	bl	121c0 <free@plt>
   34c60:	b	34c74 <crc32@@Base+0x1a918>
   34c64:	movw	r0, #59416	; 0xe818
   34c68:	movt	r0, #3
   34c6c:	bl	34574 <crc32@@Base+0x1a218>
   34c70:	mov	r7, r0
   34c74:	ldr	r0, [sp, #12]
   34c78:	bl	12148 <EVP_PKEY_free@plt>
   34c7c:	cmp	r7, #0
   34c80:	bne	34cc4 <crc32@@Base+0x1a968>
   34c84:	ldr	r0, [sp, #36]	; 0x24
   34c88:	bl	124e4 <RSA_free@plt>
   34c8c:	ldr	r3, [r5, #44]	; 0x2c
   34c90:	cmp	r3, #0
   34c94:	bne	34a78 <crc32@@Base+0x1a71c>
   34c98:	b	34a94 <crc32@@Base+0x1a738>
   34c9c:	movw	r1, #7868	; 0x1ebc
   34ca0:	movt	r1, #5
   34ca4:	movw	r2, #59440	; 0xe830
   34ca8:	movt	r2, #3
   34cac:	ldr	r0, [r1]
   34cb0:	mov	r1, #1
   34cb4:	bl	12358 <__fprintf_chk@plt>
   34cb8:	ldr	r0, [sp, #12]
   34cbc:	mvn	r7, #11
   34cc0:	bl	12148 <EVP_PKEY_free@plt>
   34cc4:	ldr	r0, [sp, #36]	; 0x24
   34cc8:	mov	r6, r7
   34ccc:	bl	124e4 <RSA_free@plt>
   34cd0:	b	34a6c <crc32@@Base+0x1a710>
   34cd4:	movw	r0, #59384	; 0xe7f8
   34cd8:	movt	r0, #3
   34cdc:	bl	34574 <crc32@@Base+0x1a218>
   34ce0:	mov	r7, r0
   34ce4:	b	34c7c <crc32@@Base+0x1a920>
   34ce8:	movw	r3, #7868	; 0x1ebc
   34cec:	movt	r3, #5
   34cf0:	movw	r0, #59352	; 0xe7d8
   34cf4:	mov	r2, #28
   34cf8:	ldr	r3, [r3]
   34cfc:	mov	r1, #1
   34d00:	movt	r0, #3
   34d04:	mvn	r6, #0
   34d08:	bl	12634 <fwrite@plt>
   34d0c:	b	34aa8 <crc32@@Base+0x1a74c>
   34d10:	movw	r0, #59484	; 0xe85c
   34d14:	movt	r0, #3
   34d18:	bl	34574 <crc32@@Base+0x1a218>
   34d1c:	mov	r7, r0
   34d20:	b	34c58 <crc32@@Base+0x1a8fc>
   34d24:	ldr	sl, [sp, #16]
   34d28:	ldr	r9, [sp, #20]
   34d2c:	add	r2, sp, #48	; 0x30
   34d30:	ldrd	r0, [sp, #24]
   34d34:	bl	122bc <EVP_DigestSignFinal@plt>
   34d38:	cmp	r0, #0
   34d3c:	bne	34d68 <crc32@@Base+0x1aa0c>
   34d40:	movw	r0, #59612	; 0xe8dc
   34d44:	movt	r0, #3
   34d48:	bl	34574 <crc32@@Base+0x1a218>
   34d4c:	mov	r7, r0
   34d50:	b	34c50 <crc32@@Base+0x1a8f4>
   34d54:	movw	r0, #59544	; 0xe898
   34d58:	movt	r0, #3
   34d5c:	bl	34574 <crc32@@Base+0x1a218>
   34d60:	mov	r7, r0
   34d64:	b	34c50 <crc32@@Base+0x1a8f4>
   34d68:	ldr	r7, [sp, #24]
   34d6c:	mov	r0, r7
   34d70:	bl	12568 <EVP_MD_CTX_cleanup@plt>
   34d74:	mov	r0, r7
   34d78:	bl	12520 <EVP_MD_CTX_destroy@plt>
   34d7c:	ldr	r0, [sp, #12]
   34d80:	bl	12148 <EVP_PKEY_free@plt>
   34d84:	ldr	r3, [sp, #48]	; 0x30
   34d88:	ldr	r2, [sp, #28]
   34d8c:	str	r2, [sl]
   34d90:	str	r3, [r9]
   34d94:	b	34c84 <crc32@@Base+0x1a928>
   34d98:	movw	r0, #59564	; 0xe8ac
   34d9c:	movt	r0, #3
   34da0:	bl	34574 <crc32@@Base+0x1a218>
   34da4:	mov	r7, r0
   34da8:	b	34c50 <crc32@@Base+0x1a8f4>
   34dac:	movw	r0, #59512	; 0xe878
   34db0:	movt	r0, #3
   34db4:	bl	34574 <crc32@@Base+0x1a218>
   34db8:	mov	r7, r0
   34dbc:	b	34c58 <crc32@@Base+0x1a8fc>
   34dc0:	bl	12538 <__stack_chk_fail@plt>
   34dc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34dc8:	sub	sp, sp, #52	; 0x34
   34dcc:	mov	fp, r1
   34dd0:	strd	r2, [sp, #28]
   34dd4:	str	r0, [sp, #20]
   34dd8:	bl	1243c <BN_CTX_new@plt>
   34ddc:	str	r0, [sp, #16]
   34de0:	bl	12814 <BN_new@plt>
   34de4:	mov	r4, r0
   34de8:	str	r0, [sp, #24]
   34dec:	bl	12814 <BN_new@plt>
   34df0:	mov	r9, r0
   34df4:	bl	12814 <BN_new@plt>
   34df8:	mov	sl, r0
   34dfc:	str	r0, [sp, #12]
   34e00:	bl	12814 <BN_new@plt>
   34e04:	mov	r8, r0
   34e08:	bl	12814 <BN_new@plt>
   34e0c:	str	r0, [sp, #8]
   34e10:	bl	12814 <BN_new@plt>
   34e14:	mov	r5, r0
   34e18:	bl	12814 <BN_new@plt>
   34e1c:	mov	r7, r0
   34e20:	bl	12814 <BN_new@plt>
   34e24:	cmp	r9, #0
   34e28:	cmpne	r4, #0
   34e2c:	beq	35100 <crc32@@Base+0x1ada4>
   34e30:	cmp	r8, #0
   34e34:	cmpne	sl, #0
   34e38:	beq	35100 <crc32@@Base+0x1ada4>
   34e3c:	ldr	r3, [sp, #8]
   34e40:	cmp	r5, #0
   34e44:	cmpne	r3, #0
   34e48:	beq	35100 <crc32@@Base+0x1ada4>
   34e4c:	clz	r4, r0
   34e50:	cmp	r7, #0
   34e54:	mov	r6, r0
   34e58:	lsr	r4, r4, #5
   34e5c:	moveq	r4, #1
   34e60:	cmp	r4, #0
   34e64:	bne	35100 <crc32@@Base+0x1ada4>
   34e68:	cmp	fp, #0
   34e6c:	beq	350f8 <crc32@@Base+0x1ad9c>
   34e70:	ldr	r3, [sp, #20]
   34e74:	ldr	sl, [r3, #20]
   34e78:	mov	r0, sl
   34e7c:	bl	12640 <BN_num_bits@plt>
   34e80:	cmp	r0, #64	; 0x40
   34e84:	bgt	350f8 <crc32@@Base+0x1ad9c>
   34e88:	mov	r0, sl
   34e8c:	bl	1258c <BN_get_word@plt>
   34e90:	stm	fp, {r0, r4}
   34e94:	mov	r0, sl
   34e98:	bl	12640 <BN_num_bits@plt>
   34e9c:	cmp	r0, #32
   34ea0:	bgt	35000 <crc32@@Base+0x1aca4>
   34ea4:	ldr	r3, [sp, #20]
   34ea8:	mov	r0, r6
   34eac:	ldr	r1, [r3, #16]
   34eb0:	bl	127b4 <BN_copy@plt>
   34eb4:	cmp	r0, #0
   34eb8:	beq	34ed0 <crc32@@Base+0x1ab74>
   34ebc:	mov	r1, #1
   34ec0:	ldr	r0, [sp, #24]
   34ec4:	bl	12550 <BN_set_word@plt>
   34ec8:	cmp	r0, #0
   34ecc:	bne	35058 <crc32@@Base+0x1acfc>
   34ed0:	mvn	r4, #0
   34ed4:	ldr	sl, [sp, #16]
   34ed8:	mov	r1, r9
   34edc:	ldr	r2, [sp, #12]
   34ee0:	mov	r0, r7
   34ee4:	mov	r3, sl
   34ee8:	bl	124cc <BN_exp@plt>
   34eec:	mov	r3, sl
   34ef0:	mov	r2, r7
   34ef4:	mov	r1, r6
   34ef8:	cmp	r0, #0
   34efc:	mov	r0, r5
   34f00:	mvneq	r4, #0
   34f04:	bl	124c0 <BN_mod_inverse@plt>
   34f08:	cmp	r0, #0
   34f0c:	beq	34f28 <crc32@@Base+0x1abcc>
   34f10:	mov	r2, r5
   34f14:	mov	r1, r7
   34f18:	mov	r0, r5
   34f1c:	bl	123f4 <BN_sub@plt>
   34f20:	cmp	r0, #0
   34f24:	bne	34f2c <crc32@@Base+0x1abd0>
   34f28:	mvn	r4, #0
   34f2c:	mov	r0, r5
   34f30:	bl	1258c <BN_get_word@plt>
   34f34:	ldr	r3, [sp, #28]
   34f38:	str	r0, [r3]
   34f3c:	mov	r0, r6
   34f40:	bl	12640 <BN_num_bits@plt>
   34f44:	mov	r1, r0
   34f48:	mov	r0, r5
   34f4c:	bl	12550 <BN_set_word@plt>
   34f50:	cmp	r0, #0
   34f54:	bne	35038 <crc32@@Base+0x1acdc>
   34f58:	mvn	r4, #0
   34f5c:	mov	r1, r8
   34f60:	ldr	r0, [sp, #8]
   34f64:	bl	127b4 <BN_copy@plt>
   34f68:	cmp	r0, #0
   34f6c:	beq	34f8c <crc32@@Base+0x1ac30>
   34f70:	ldr	r3, [sp, #16]
   34f74:	mov	r2, r8
   34f78:	ldr	r1, [sp, #8]
   34f7c:	mov	r0, r5
   34f80:	bl	126e8 <BN_mul@plt>
   34f84:	cmp	r0, #0
   34f88:	bne	35084 <crc32@@Base+0x1ad28>
   34f8c:	ldr	r3, [sp, #32]
   34f90:	ldr	r2, [sp, #8]
   34f94:	ldr	r0, [sp, #24]
   34f98:	str	r6, [r3]
   34f9c:	ldr	r3, [sp, #88]	; 0x58
   34fa0:	str	r2, [r3]
   34fa4:	bl	122ec <BN_free@plt>
   34fa8:	mov	r0, r9
   34fac:	bl	122ec <BN_free@plt>
   34fb0:	ldr	r0, [sp, #12]
   34fb4:	bl	122ec <BN_free@plt>
   34fb8:	mov	r0, r8
   34fbc:	bl	122ec <BN_free@plt>
   34fc0:	mov	r0, r5
   34fc4:	bl	122ec <BN_free@plt>
   34fc8:	mov	r0, r7
   34fcc:	bl	122ec <BN_free@plt>
   34fd0:	movw	r3, #7868	; 0x1ebc
   34fd4:	movt	r3, #5
   34fd8:	movw	r0, #59640	; 0xe8f8
   34fdc:	mov	r2, #25
   34fe0:	ldr	r3, [r3]
   34fe4:	movt	r0, #3
   34fe8:	mov	r1, #1
   34fec:	mvn	r4, #11
   34ff0:	bl	12634 <fwrite@plt>
   34ff4:	mov	r0, r4
   34ff8:	add	sp, sp, #52	; 0x34
   34ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35000:	mov	r0, sl
   35004:	bl	121fc <BN_dup@plt>
   35008:	subs	r3, r0, #0
   3500c:	str	r3, [sp, #36]	; 0x24
   35010:	beq	350f8 <crc32@@Base+0x1ad9c>
   35014:	mov	r2, #32
   35018:	mov	r1, r3
   3501c:	bl	12700 <BN_rshift@plt>
   35020:	cmp	r0, #0
   35024:	bne	35128 <crc32@@Base+0x1adcc>
   35028:	mvn	r4, #0
   3502c:	ldr	r0, [sp, #36]	; 0x24
   35030:	bl	122ec <BN_free@plt>
   35034:	b	34ea4 <crc32@@Base+0x1ab48>
   35038:	ldr	r3, [sp, #16]
   3503c:	mov	r2, r5
   35040:	mov	r1, r9
   35044:	mov	r0, r8
   35048:	bl	124cc <BN_exp@plt>
   3504c:	cmp	r0, #0
   35050:	bne	34f5c <crc32@@Base+0x1ac00>
   35054:	b	34f58 <crc32@@Base+0x1abfc>
   35058:	mov	r1, #2
   3505c:	mov	r0, r9
   35060:	bl	12550 <BN_set_word@plt>
   35064:	cmp	r0, #0
   35068:	beq	34ed0 <crc32@@Base+0x1ab74>
   3506c:	mov	r1, #32
   35070:	ldr	r0, [sp, #12]
   35074:	bl	12550 <BN_set_word@plt>
   35078:	cmp	r0, #0
   3507c:	bne	34ed4 <crc32@@Base+0x1ab78>
   35080:	b	34ed0 <crc32@@Base+0x1ab74>
   35084:	ldr	r3, [sp, #16]
   35088:	mov	r2, r5
   3508c:	ldr	r1, [sp, #8]
   35090:	mov	r0, #0
   35094:	str	r3, [sp]
   35098:	mov	r3, r6
   3509c:	bl	12418 <BN_div@plt>
   350a0:	cmp	r0, #0
   350a4:	beq	34f8c <crc32@@Base+0x1ac30>
   350a8:	ldr	r3, [sp, #32]
   350ac:	ldr	r2, [sp, #8]
   350b0:	ldr	r0, [sp, #24]
   350b4:	str	r6, [r3]
   350b8:	ldr	r3, [sp, #88]	; 0x58
   350bc:	str	r2, [r3]
   350c0:	bl	122ec <BN_free@plt>
   350c4:	mov	r0, r9
   350c8:	bl	122ec <BN_free@plt>
   350cc:	ldr	r0, [sp, #12]
   350d0:	bl	122ec <BN_free@plt>
   350d4:	mov	r0, r8
   350d8:	bl	122ec <BN_free@plt>
   350dc:	mov	r0, r5
   350e0:	bl	122ec <BN_free@plt>
   350e4:	mov	r0, r7
   350e8:	bl	122ec <BN_free@plt>
   350ec:	cmp	r4, #0
   350f0:	beq	34ff4 <crc32@@Base+0x1ac98>
   350f4:	b	34fd0 <crc32@@Base+0x1ac74>
   350f8:	mvn	r4, #0
   350fc:	b	34ea4 <crc32@@Base+0x1ab48>
   35100:	movw	r3, #7868	; 0x1ebc
   35104:	movt	r3, #5
   35108:	movw	r0, #59328	; 0xe7c0
   3510c:	mov	r2, #23
   35110:	ldr	r3, [r3]
   35114:	mov	r1, #1
   35118:	movt	r0, #3
   3511c:	mvn	r4, #11
   35120:	bl	12634 <fwrite@plt>
   35124:	b	34ff4 <crc32@@Base+0x1ac98>
   35128:	mov	r1, #32
   3512c:	ldr	r0, [sp, #36]	; 0x24
   35130:	bl	12724 <BN_mask_bits@plt>
   35134:	cmp	r0, #0
   35138:	beq	35028 <crc32@@Base+0x1accc>
   3513c:	ldr	r0, [sp, #36]	; 0x24
   35140:	bl	1258c <BN_get_word@plt>
   35144:	ldrd	r2, [fp]
   35148:	mov	r1, #0
   3514c:	str	r1, [sp, #40]	; 0x28
   35150:	mov	ip, fp
   35154:	mov	r1, r3
   35158:	str	r0, [sp, #44]	; 0x2c
   3515c:	mov	r0, r2
   35160:	ldrd	r2, [sp, #40]	; 0x28
   35164:	orr	sl, r2, r0
   35168:	orr	fp, r3, r1
   3516c:	mov	r4, r2
   35170:	mov	r0, sl
   35174:	mov	r1, fp
   35178:	strd	r0, [ip]
   3517c:	b	3502c <crc32@@Base+0x1acd0>
   35180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35184:	movw	r4, #3824	; 0xef0
   35188:	movt	r4, #5
   3518c:	mov	r5, r0
   35190:	ldr	r0, [r0, #44]	; 0x2c
   35194:	sub	sp, sp, #1104	; 0x450
   35198:	ldr	r3, [r4]
   3519c:	sub	sp, sp, #12
   351a0:	mov	r2, #0
   351a4:	cmp	r0, r2
   351a8:	mov	r7, r1
   351ac:	str	r2, [sp, #60]	; 0x3c
   351b0:	str	r3, [sp, #1108]	; 0x454
   351b4:	beq	352e4 <crc32@@Base+0x1af88>
   351b8:	add	r6, sp, #72	; 0x48
   351bc:	sub	r1, r6, #12
   351c0:	bl	344a8 <crc32@@Base+0x1a14c>
   351c4:	subs	r8, r0, #0
   351c8:	bne	352c4 <crc32@@Base+0x1af68>
   351cc:	ldr	sl, [sp, #60]	; 0x3c
   351d0:	ldr	r8, [r5]
   351d4:	cmp	sl, #0
   351d8:	ldr	fp, [r5, #4]
   351dc:	beq	352e8 <crc32@@Base+0x1af8c>
   351e0:	mov	r0, sl
   351e4:	bl	12208 <ENGINE_get_id@plt>
   351e8:	cmp	r0, #0
   351ec:	beq	355d0 <crc32@@Base+0x1b274>
   351f0:	movw	r1, #59068	; 0xe6bc
   351f4:	movt	r1, #3
   351f8:	bl	12718 <strcmp@plt>
   351fc:	cmp	r0, #0
   35200:	bne	355d0 <crc32@@Base+0x1b274>
   35204:	cmp	r8, #0
   35208:	add	r9, sp, #84	; 0x54
   3520c:	mov	r3, #1024	; 0x400
   35210:	beq	354ec <crc32@@Base+0x1b190>
   35214:	movw	r2, #59668	; 0xe914
   35218:	str	fp, [sp, #8]
   3521c:	movt	r2, #3
   35220:	str	r8, [sp, #4]
   35224:	str	r2, [sp]
   35228:	mov	r0, r9
   3522c:	mov	r1, r3
   35230:	mov	r2, #1
   35234:	bl	12688 <__snprintf_chk@plt>
   35238:	mov	r3, #0
   3523c:	mov	r0, sl
   35240:	mov	r2, r3
   35244:	mov	r1, r9
   35248:	bl	121a8 <ENGINE_load_public_key@plt>
   3524c:	subs	r8, r0, #0
   35250:	beq	35510 <crc32@@Base+0x1b1b4>
   35254:	bl	12340 <EVP_PKEY_get1_RSA@plt>
   35258:	subs	r3, r0, #0
   3525c:	str	r3, [sp, #20]
   35260:	beq	35840 <crc32@@Base+0x1b4e4>
   35264:	mov	r0, r8
   35268:	bl	12148 <EVP_PKEY_free@plt>
   3526c:	add	r3, sp, #56	; 0x38
   35270:	add	r2, sp, #52	; 0x34
   35274:	sub	r1, r6, #8
   35278:	str	r2, [sp]
   3527c:	sub	r3, r3, #8
   35280:	add	r2, sp, #56	; 0x38
   35284:	ldr	r0, [sp, #20]
   35288:	bl	34dc4 <crc32@@Base+0x1aa68>
   3528c:	subs	r8, r0, #0
   35290:	beq	3538c <crc32@@Base+0x1b030>
   35294:	ldr	r0, [sp, #20]
   35298:	bl	124e4 <RSA_free@plt>
   3529c:	ldr	r3, [r5, #44]	; 0x2c
   352a0:	cmp	r3, #0
   352a4:	beq	352c4 <crc32@@Base+0x1af68>
   352a8:	ldr	r5, [sp, #60]	; 0x3c
   352ac:	cmp	r5, #0
   352b0:	beq	352c4 <crc32@@Base+0x1af68>
   352b4:	mov	r0, r5
   352b8:	bl	1219c <ENGINE_finish@plt>
   352bc:	mov	r0, r5
   352c0:	bl	12244 <ENGINE_free@plt>
   352c4:	ldr	r2, [sp, #1108]	; 0x454
   352c8:	mov	r0, r8
   352cc:	ldr	r3, [r4]
   352d0:	cmp	r2, r3
   352d4:	bne	358e4 <crc32@@Base+0x1b588>
   352d8:	add	sp, sp, #1104	; 0x450
   352dc:	add	sp, sp, #12
   352e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   352e4:	ldm	r5, {r8, fp}
   352e8:	add	r9, sp, #84	; 0x54
   352ec:	mov	r3, #1024	; 0x400
   352f0:	mov	r1, r3
   352f4:	str	r8, [sp, #4]
   352f8:	str	fp, [sp, #8]
   352fc:	movw	r2, #59772	; 0xe97c
   35300:	mov	r0, r9
   35304:	movt	r2, #3
   35308:	str	r2, [sp]
   3530c:	mov	r2, #1
   35310:	bl	12688 <__snprintf_chk@plt>
   35314:	mov	r0, r9
   35318:	movw	r1, #53956	; 0xd2c4
   3531c:	movt	r1, #3
   35320:	bl	123d0 <fopen@plt>
   35324:	subs	r8, r0, #0
   35328:	beq	3585c <crc32@@Base+0x1b500>
   3532c:	add	r6, sp, #1104	; 0x450
   35330:	mov	r3, #0
   35334:	add	r6, r6, #8
   35338:	mov	r2, r3
   3533c:	str	r3, [r6, #-1040]!	; 0xfffffbf0
   35340:	mov	r1, r6
   35344:	bl	12154 <PEM_read_X509@plt>
   35348:	cmp	r0, #0
   3534c:	beq	35898 <crc32@@Base+0x1b53c>
   35350:	ldr	r0, [sp, #72]	; 0x48
   35354:	bl	1276c <X509_get_pubkey@plt>
   35358:	subs	fp, r0, #0
   3535c:	beq	358b4 <crc32@@Base+0x1b558>
   35360:	bl	12340 <EVP_PKEY_get1_RSA@plt>
   35364:	subs	r3, r0, #0
   35368:	str	r3, [sp, #20]
   3536c:	beq	358cc <crc32@@Base+0x1b570>
   35370:	mov	r0, r8
   35374:	bl	126b8 <fclose@plt>
   35378:	mov	r0, fp
   3537c:	bl	12148 <EVP_PKEY_free@plt>
   35380:	ldr	r0, [sp, #72]	; 0x48
   35384:	bl	125b0 <X509_free@plt>
   35388:	b	3526c <crc32@@Base+0x1af10>
   3538c:	ldr	r0, [sp, #48]	; 0x30
   35390:	bl	12640 <BN_num_bits@plt>
   35394:	mov	r1, r8
   35398:	movw	r2, #33528	; 0x82f8
   3539c:	movt	r2, #3
   353a0:	str	r0, [sp, #28]
   353a4:	mov	r0, r7
   353a8:	bl	317d4 <crc32@@Base+0x17478>
   353ac:	cmn	r0, #1
   353b0:	mov	r8, r0
   353b4:	beq	35580 <crc32@@Base+0x1b224>
   353b8:	ldr	r0, [r5, #4]
   353bc:	mov	r3, #100	; 0x64
   353c0:	mov	r1, r3
   353c4:	movw	r2, #59920	; 0xea10
   353c8:	movt	r2, #3
   353cc:	str	r2, [sp]
   353d0:	str	r0, [sp, #4]
   353d4:	mov	r2, #1
   353d8:	mov	r0, r9
   353dc:	bl	12688 <__snprintf_chk@plt>
   353e0:	mov	r2, r9
   353e4:	mov	r1, r8
   353e8:	mov	r0, r7
   353ec:	bl	317d4 <crc32@@Base+0x17478>
   353f0:	cmn	r0, #1
   353f4:	str	r0, [sp, #24]
   353f8:	beq	3552c <crc32@@Base+0x1b1d0>
   353fc:	ldr	r3, [sp, #24]
   35400:	cmp	r3, #0
   35404:	blt	357f8 <crc32@@Base+0x1b49c>
   35408:	ldr	r8, [r5, #4]
   3540c:	mov	r0, r8
   35410:	bl	1267c <strlen@plt>
   35414:	ldr	sl, [sp, #24]
   35418:	mov	r3, r8
   3541c:	movw	r2, #32476	; 0x7edc
   35420:	movt	r2, #3
   35424:	mov	r1, sl
   35428:	add	r0, r0, #1
   3542c:	str	r0, [sp]
   35430:	mov	r0, r7
   35434:	bl	2fbb8 <crc32@@Base+0x1585c>
   35438:	subs	r8, r0, #0
   3543c:	bne	354cc <crc32@@Base+0x1b170>
   35440:	ldr	r2, [sp, #28]
   35444:	mov	r9, #4
   35448:	mov	r1, sl
   3544c:	str	r9, [sp]
   35450:	ubfx	r0, r2, #8, #8
   35454:	ubfx	ip, r2, #16, #8
   35458:	lsr	r3, r2, #24
   3545c:	orr	r3, r3, r2, lsl #24
   35460:	movw	r2, #59996	; 0xea5c
   35464:	orr	r0, r3, r0, lsl #16
   35468:	movt	r2, #3
   3546c:	orr	ip, r0, ip, lsl #8
   35470:	mov	r3, r6
   35474:	mov	r0, r7
   35478:	str	ip, [sp, #72]	; 0x48
   3547c:	bl	2fbb8 <crc32@@Base+0x1585c>
   35480:	subs	r8, r0, #0
   35484:	bne	354cc <crc32@@Base+0x1b170>
   35488:	ldr	r3, [sp, #56]	; 0x38
   3548c:	movw	r2, #60012	; 0xea6c
   35490:	str	r9, [sp]
   35494:	movt	r2, #3
   35498:	ubfx	r1, r3, #8, #8
   3549c:	ubfx	r0, r3, #16, #8
   354a0:	lsr	ip, r3, #24
   354a4:	orr	ip, ip, r3, lsl #24
   354a8:	mov	r3, r6
   354ac:	orr	ip, ip, r1, lsl #16
   354b0:	mov	r1, sl
   354b4:	orr	ip, ip, r0, lsl #8
   354b8:	mov	r0, r7
   354bc:	str	ip, [sp, #72]	; 0x48
   354c0:	bl	2fbb8 <crc32@@Base+0x1585c>
   354c4:	subs	r8, r0, #0
   354c8:	beq	355f8 <crc32@@Base+0x1b29c>
   354cc:	ldr	r0, [sp, #48]	; 0x30
   354d0:	bl	122ec <BN_free@plt>
   354d4:	ldr	r0, [sp, #52]	; 0x34
   354d8:	bl	122ec <BN_free@plt>
   354dc:	cmn	r8, #3
   354e0:	mvnne	r8, #4
   354e4:	mvneq	r8, #27
   354e8:	b	35294 <crc32@@Base+0x1af38>
   354ec:	str	fp, [sp, #4]
   354f0:	movw	r2, #59700	; 0xe934
   354f4:	mov	r0, r9
   354f8:	movt	r2, #3
   354fc:	mov	r1, r3
   35500:	str	r2, [sp]
   35504:	mov	r2, #1
   35508:	bl	12688 <__snprintf_chk@plt>
   3550c:	b	35238 <crc32@@Base+0x1aedc>
   35510:	movw	r0, #59732	; 0xe954
   35514:	movt	r0, #3
   35518:	bl	34574 <crc32@@Base+0x1a218>
   3551c:	subs	r8, r0, #0
   35520:	streq	r8, [sp, #20]
   35524:	bne	3529c <crc32@@Base+0x1af40>
   35528:	b	3526c <crc32@@Base+0x1af10>
   3552c:	mov	r2, r9
   35530:	mov	r1, r8
   35534:	mov	r0, r7
   35538:	bl	2ff0c <crc32@@Base+0x15bb0>
   3553c:	subs	r3, r0, #0
   35540:	str	r3, [sp, #24]
   35544:	bge	35408 <crc32@@Base+0x1b0ac>
   35548:	cmn	r3, #3
   3554c:	mov	r8, r3
   35550:	beq	35828 <crc32@@Base+0x1b4cc>
   35554:	movw	r3, #7868	; 0x1ebc
   35558:	movt	r3, #5
   3555c:	ldr	r6, [r3]
   35560:	bl	303c0 <crc32@@Base+0x16064>
   35564:	movw	r2, #59928	; 0xea18
   35568:	mov	r1, #1
   3556c:	movt	r2, #3
   35570:	mov	r3, r0
   35574:	mov	r0, r6
   35578:	bl	12358 <__fprintf_chk@plt>
   3557c:	b	354cc <crc32@@Base+0x1b170>
   35580:	movw	r2, #33528	; 0x82f8
   35584:	mov	r1, #0
   35588:	movt	r2, #3
   3558c:	mov	r0, r7
   35590:	bl	2ff0c <crc32@@Base+0x15bb0>
   35594:	subs	r8, r0, #0
   35598:	bge	353b8 <crc32@@Base+0x1b05c>
   3559c:	cmn	r8, #3
   355a0:	beq	35828 <crc32@@Base+0x1b4cc>
   355a4:	movw	r3, #7868	; 0x1ebc
   355a8:	movt	r3, #5
   355ac:	ldr	r6, [r3]
   355b0:	bl	303c0 <crc32@@Base+0x16064>
   355b4:	movw	r2, #59884	; 0xe9ec
   355b8:	mov	r1, #1
   355bc:	movt	r2, #3
   355c0:	mov	r3, r0
   355c4:	mov	r0, r6
   355c8:	bl	12358 <__fprintf_chk@plt>
   355cc:	b	354cc <crc32@@Base+0x1b170>
   355d0:	movw	r3, #7868	; 0x1ebc
   355d4:	movt	r3, #5
   355d8:	movw	r0, #59144	; 0xe708
   355dc:	mov	r2, #21
   355e0:	ldr	r3, [r3]
   355e4:	mov	r1, #1
   355e8:	movt	r0, #3
   355ec:	mvn	r8, #94	; 0x5e
   355f0:	bl	12634 <fwrite@plt>
   355f4:	b	3529c <crc32@@Base+0x1af40>
   355f8:	ldmdb	r6, {r9, sl}
   355fc:	mov	r0, r8
   35600:	str	r8, [sp, #32]
   35604:	ubfx	lr, r9, #8, #8
   35608:	lsl	r3, r9, #24
   3560c:	ubfx	ip, r9, #16, #8
   35610:	str	r8, [sp, #40]	; 0x28
   35614:	mov	r1, r3
   35618:	lsl	r3, lr, #16
   3561c:	str	r3, [sp, #36]	; 0x24
   35620:	lsr	lr, sl, #24
   35624:	lsl	r3, ip, #8
   35628:	str	r3, [sp, #44]	; 0x2c
   3562c:	ldrd	r2, [sp, #32]
   35630:	orr	r0, r0, lr
   35634:	str	r8, [sp, #32]
   35638:	ubfx	lr, sl, #8, #8
   3563c:	orr	r2, r2, r0
   35640:	orr	r3, r3, r1
   35644:	ubfx	ip, sl, #16, #8
   35648:	mov	r0, r2
   3564c:	mov	r1, r3
   35650:	lsr	r3, r9, #24
   35654:	str	r3, [sp, #36]	; 0x24
   35658:	ldrd	r2, [sp, #40]	; 0x28
   3565c:	orr	r2, r2, r0
   35660:	orr	r3, r3, r1
   35664:	mov	r0, r2
   35668:	mov	r1, r3
   3566c:	uxtb	r2, sl
   35670:	mov	r3, #0
   35674:	strd	r2, [sp, #40]	; 0x28
   35678:	ldrd	r2, [sp, #32]
   3567c:	orr	r2, r2, r0
   35680:	orr	r3, r3, r1
   35684:	ldrd	r0, [sp, #40]	; 0x28
   35688:	mov	r1, #0
   3568c:	lsr	fp, r0, #8
   35690:	lsl	sl, r0, #24
   35694:	uxtb	r0, lr
   35698:	strd	r0, [sp, #32]
   3569c:	orr	r2, r2, sl
   356a0:	orr	r3, r3, fp
   356a4:	strd	r2, [sp, #40]	; 0x28
   356a8:	uxtb	r2, ip
   356ac:	ldr	ip, [sp, #32]
   356b0:	ldrd	r8, [sp, #40]	; 0x28
   356b4:	lsl	r3, r2, #8
   356b8:	lsr	r1, ip, #16
   356bc:	lsl	r0, ip, #16
   356c0:	orr	r8, r8, r0
   356c4:	lsr	ip, r2, #24
   356c8:	orr	r9, r9, r1
   356cc:	mov	sl, r3
   356d0:	orr	fp, ip, r9
   356d4:	orr	sl, sl, r8
   356d8:	mov	r1, #8
   356dc:	mov	r3, r6
   356e0:	str	r1, [sp]
   356e4:	mov	r8, sl
   356e8:	movw	r2, #60028	; 0xea7c
   356ec:	ldr	r1, [sp, #24]
   356f0:	movt	r2, #3
   356f4:	mov	r0, r7
   356f8:	mov	r9, fp
   356fc:	strd	r8, [r6]
   35700:	bl	2fbb8 <crc32@@Base+0x1585c>
   35704:	subs	r8, r0, #0
   35708:	bne	354cc <crc32@@Base+0x1b170>
   3570c:	ldr	r6, [sp, #28]
   35710:	movw	r2, #60044	; 0xea8c
   35714:	ldr	r9, [sp, #24]
   35718:	movt	r2, #3
   3571c:	ldr	r3, [sp, #48]	; 0x30
   35720:	mov	r0, r7
   35724:	str	r6, [sp]
   35728:	mov	r1, r9
   3572c:	bl	34830 <crc32@@Base+0x1a4d4>
   35730:	subs	r8, r0, #0
   35734:	bne	354cc <crc32@@Base+0x1b170>
   35738:	ldr	r3, [sp, #52]	; 0x34
   3573c:	movw	r2, #60056	; 0xea98
   35740:	str	r6, [sp]
   35744:	movt	r2, #3
   35748:	mov	r1, r9
   3574c:	mov	r0, r7
   35750:	bl	34830 <crc32@@Base+0x1a4d4>
   35754:	subs	r8, r0, #0
   35758:	bne	354cc <crc32@@Base+0x1b170>
   3575c:	ldr	r6, [r5, #16]
   35760:	mov	r0, r6
   35764:	bl	1267c <strlen@plt>
   35768:	mov	r3, r6
   3576c:	movw	r2, #34108	; 0x853c
   35770:	mov	r1, r9
   35774:	movt	r2, #3
   35778:	add	r0, r0, #1
   3577c:	str	r0, [sp]
   35780:	mov	r0, r7
   35784:	bl	2fbb8 <crc32@@Base+0x1585c>
   35788:	subs	r8, r0, #0
   3578c:	bne	354cc <crc32@@Base+0x1b170>
   35790:	ldr	r6, [r5, #40]	; 0x28
   35794:	cmp	r6, #0
   35798:	beq	357e4 <crc32@@Base+0x1b488>
   3579c:	mov	r0, r6
   357a0:	bl	1267c <strlen@plt>
   357a4:	mov	r3, r6
   357a8:	ldr	r1, [sp, #24]
   357ac:	movw	r2, #34116	; 0x8544
   357b0:	movt	r2, #3
   357b4:	add	ip, r0, #1
   357b8:	mov	r0, r7
   357bc:	str	ip, [sp]
   357c0:	bl	2fbb8 <crc32@@Base+0x1585c>
   357c4:	mov	r8, r0
   357c8:	ldr	r0, [sp, #48]	; 0x30
   357cc:	bl	122ec <BN_free@plt>
   357d0:	ldr	r0, [sp, #52]	; 0x34
   357d4:	bl	122ec <BN_free@plt>
   357d8:	cmp	r8, #0
   357dc:	beq	35294 <crc32@@Base+0x1af38>
   357e0:	b	354dc <crc32@@Base+0x1b180>
   357e4:	ldr	r0, [sp, #48]	; 0x30
   357e8:	bl	122ec <BN_free@plt>
   357ec:	ldr	r0, [sp, #52]	; 0x34
   357f0:	bl	122ec <BN_free@plt>
   357f4:	b	35294 <crc32@@Base+0x1af38>
   357f8:	movw	r3, #7868	; 0x1ebc
   357fc:	movt	r3, #5
   35800:	ldr	r8, [sp, #24]
   35804:	ldr	r6, [r3]
   35808:	bl	303c0 <crc32@@Base+0x16064>
   3580c:	movw	r2, #59964	; 0xea3c
   35810:	mov	r1, #1
   35814:	movt	r2, #3
   35818:	mov	r3, r0
   3581c:	mov	r0, r6
   35820:	bl	12358 <__fprintf_chk@plt>
   35824:	b	354cc <crc32@@Base+0x1b170>
   35828:	ldr	r0, [sp, #48]	; 0x30
   3582c:	mvn	r8, #27
   35830:	bl	122ec <BN_free@plt>
   35834:	ldr	r0, [sp, #52]	; 0x34
   35838:	bl	122ec <BN_free@plt>
   3583c:	b	35294 <crc32@@Base+0x1af38>
   35840:	movw	r0, #59208	; 0xe748
   35844:	movt	r0, #3
   35848:	bl	34574 <crc32@@Base+0x1a218>
   3584c:	mov	r0, r8
   35850:	bl	12148 <EVP_PKEY_free@plt>
   35854:	mvn	r8, #21
   35858:	b	3529c <crc32@@Base+0x1af40>
   3585c:	movw	r3, #7868	; 0x1ebc
   35860:	movt	r3, #5
   35864:	mvn	r8, #12
   35868:	ldr	r6, [r3]
   3586c:	bl	12748 <__errno_location@plt>
   35870:	ldr	r0, [r0]
   35874:	bl	122a4 <strerror@plt>
   35878:	mov	r3, r9
   3587c:	movw	r2, #59784	; 0xe988
   35880:	mov	r1, #1
   35884:	movt	r2, #3
   35888:	str	r0, [sp]
   3588c:	mov	r0, r6
   35890:	bl	12358 <__fprintf_chk@plt>
   35894:	b	3529c <crc32@@Base+0x1af40>
   35898:	movw	r0, #59828	; 0xe9b4
   3589c:	movt	r0, #3
   358a0:	bl	34574 <crc32@@Base+0x1a218>
   358a4:	mov	r0, r8
   358a8:	mvn	r8, #21
   358ac:	bl	126b8 <fclose@plt>
   358b0:	b	3529c <crc32@@Base+0x1af40>
   358b4:	movw	r0, #59856	; 0xe9d0
   358b8:	movt	r0, #3
   358bc:	bl	34574 <crc32@@Base+0x1a218>
   358c0:	ldr	r0, [sp, #72]	; 0x48
   358c4:	bl	125b0 <X509_free@plt>
   358c8:	b	358a4 <crc32@@Base+0x1b548>
   358cc:	movw	r0, #59208	; 0xe748
   358d0:	movt	r0, #3
   358d4:	bl	34574 <crc32@@Base+0x1a218>
   358d8:	mov	r0, fp
   358dc:	bl	12148 <EVP_PKEY_free@plt>
   358e0:	b	358c0 <crc32@@Base+0x1b564>
   358e4:	bl	12538 <__stack_chk_fail@plt>
   358e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   358ec:	add	fp, sp, #32
   358f0:	movw	r5, #3824	; 0xef0
   358f4:	sub	sp, sp, #52	; 0x34
   358f8:	movt	r5, #5
   358fc:	ldr	r8, [fp, #4]
   35900:	mov	r4, r0
   35904:	ldr	r0, [r5]
   35908:	cmp	r8, #0
   3590c:	ldr	sl, [r4, #32]
   35910:	str	r0, [fp, #-40]	; 0xffffffd8
   35914:	blt	35ab8 <crc32@@Base+0x1b75c>
   35918:	mov	r9, r1
   3591c:	mov	r7, r2
   35920:	mov	r1, r8
   35924:	mov	r6, r3
   35928:	movw	r2, #59996	; 0xea5c
   3592c:	mov	r3, #0
   35930:	movt	r2, #3
   35934:	mov	r0, sl
   35938:	bl	1a6a8 <crc32@@Base+0x34c>
   3593c:	mov	r3, #0
   35940:	mov	r1, r8
   35944:	movw	r2, #60012	; 0xea6c
   35948:	movt	r2, #3
   3594c:	str	r0, [fp, #-48]	; 0xffffffd0
   35950:	mov	r0, sl
   35954:	bl	1a6a8 <crc32@@Base+0x34c>
   35958:	movw	r2, #60028	; 0xea7c
   3595c:	sub	r3, fp, #68	; 0x44
   35960:	movt	r2, #3
   35964:	mov	r1, r8
   35968:	str	r0, [fp, #-52]	; 0xffffffcc
   3596c:	mov	r0, sl
   35970:	bl	31b04 <crc32@@Base+0x177a8>
   35974:	cmp	r0, #0
   35978:	str	r0, [fp, #-56]	; 0xffffffc8
   3597c:	beq	35a94 <crc32@@Base+0x1b738>
   35980:	ldr	r3, [fp, #-68]	; 0xffffffbc
   35984:	cmp	r3, #7
   35988:	bls	35a94 <crc32@@Base+0x1b738>
   3598c:	mov	r3, #0
   35990:	mov	r1, r8
   35994:	movw	r2, #60044	; 0xea8c
   35998:	mov	r0, sl
   3599c:	movt	r2, #3
   359a0:	mov	ip, #8
   359a4:	str	ip, [fp, #-44]	; 0xffffffd4
   359a8:	bl	31b04 <crc32@@Base+0x177a8>
   359ac:	mov	r3, #0
   359b0:	mov	r1, r8
   359b4:	movw	r2, #60056	; 0xea98
   359b8:	movt	r2, #3
   359bc:	str	r0, [fp, #-60]	; 0xffffffc4
   359c0:	mov	r0, sl
   359c4:	bl	31b04 <crc32@@Base+0x177a8>
   359c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   359cc:	cmp	r3, #0
   359d0:	str	r0, [fp, #-64]	; 0xffffffc0
   359d4:	beq	35ab0 <crc32@@Base+0x1b754>
   359d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   359dc:	cmp	r2, #0
   359e0:	beq	35ab0 <crc32@@Base+0x1b754>
   359e4:	ldr	r2, [r4, #28]
   359e8:	cmp	r7, #0
   359ec:	ldr	r1, [r4, #24]
   359f0:	mov	r8, sp
   359f4:	ldr	ip, [r4, #20]
   359f8:	ldr	sl, [r2, #4]
   359fc:	str	r1, [fp, #-72]	; 0xffffffb8
   35a00:	beq	35aa8 <crc32@@Base+0x1b74c>
   35a04:	cmp	ip, #0
   35a08:	beq	35aa8 <crc32@@Base+0x1b74c>
   35a0c:	cmp	r3, #0
   35a10:	add	r2, r3, #7
   35a14:	movlt	r3, r2
   35a18:	asr	r3, r3, #3
   35a1c:	cmp	r6, #512	; 0x200
   35a20:	cmpls	r3, r6
   35a24:	bne	35aa0 <crc32@@Base+0x1b744>
   35a28:	add	r3, r6, #7
   35a2c:	mov	r1, r6
   35a30:	bic	r3, r3, #7
   35a34:	mov	r0, r7
   35a38:	sub	sp, sp, r3
   35a3c:	sub	r2, fp, #64	; 0x40
   35a40:	add	r6, sp, #8
   35a44:	ldr	r7, [ip, #4]
   35a48:	mov	r3, r6
   35a4c:	bl	363e0 <crc32@@Base+0x1c084>
   35a50:	cmp	r0, #0
   35a54:	bne	35a78 <crc32@@Base+0x1b71c>
   35a58:	str	r7, [sp]
   35a5c:	mov	r3, r9
   35a60:	ldr	r1, [fp, #-72]	; 0xffffffb8
   35a64:	mov	r2, sl
   35a68:	mov	r0, r4
   35a6c:	ldr	r7, [r1, #4]
   35a70:	mov	r1, r6
   35a74:	blx	r7
   35a78:	mov	sp, r8
   35a7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35a80:	ldr	r3, [r5]
   35a84:	cmp	r2, r3
   35a88:	bne	35ac0 <crc32@@Base+0x1b764>
   35a8c:	sub	sp, fp, #32
   35a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35a94:	mov	r3, #0
   35a98:	str	r3, [fp, #-56]	; 0xffffffc8
   35a9c:	b	3598c <crc32@@Base+0x1b630>
   35aa0:	mvn	r0, #21
   35aa4:	b	35a78 <crc32@@Base+0x1b71c>
   35aa8:	mvn	r0, #4
   35aac:	b	35a78 <crc32@@Base+0x1b71c>
   35ab0:	mvn	r0, #13
   35ab4:	b	35a7c <crc32@@Base+0x1b720>
   35ab8:	mvn	r0, #8
   35abc:	b	35a7c <crc32@@Base+0x1b720>
   35ac0:	bl	12538 <__stack_chk_fail@plt>
   35ac4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35ac8:	add	sl, r1, #2
   35acc:	ldr	fp, [r0, #20]
   35ad0:	sub	sp, sp, #12
   35ad4:	mov	r4, r1
   35ad8:	mov	r0, sl
   35adc:	add	r1, r1, #3
   35ae0:	str	r3, [sp, #4]
   35ae4:	ldr	r7, [fp, #4]
   35ae8:	ldr	r8, [fp, #8]
   35aec:	sub	r6, r2, r7
   35af0:	sub	r9, r6, r8
   35af4:	sub	r2, r9, #4
   35af8:	sub	r9, r9, #3
   35afc:	bl	12784 <memcmp@plt>
   35b00:	mov	r2, r8
   35b04:	ldr	r1, [fp, #12]
   35b08:	mov	r5, r0
   35b0c:	add	r0, sl, r9
   35b10:	add	r0, r0, #1
   35b14:	bl	12784 <memcmp@plt>
   35b18:	ldrb	r2, [r4, #1]
   35b1c:	ldrb	r3, [r4, #2]
   35b20:	eor	r2, r2, #1
   35b24:	ldrb	ip, [r4]
   35b28:	ldrb	r1, [sl, r9]
   35b2c:	mvn	r3, r3
   35b30:	orr	r2, r2, r3
   35b34:	orr	r2, r2, ip
   35b38:	orr	r2, r2, r1
   35b3c:	uxtb	r2, r2
   35b40:	orr	r0, r5, r0
   35b44:	orrs	r2, r2, r0
   35b48:	bne	35b6c <crc32@@Base+0x1b810>
   35b4c:	mov	r2, r7
   35b50:	ldr	r1, [sp, #4]
   35b54:	add	r0, r4, r6
   35b58:	bl	12784 <memcmp@plt>
   35b5c:	cmp	r0, #0
   35b60:	mvnne	r0, #12
   35b64:	add	sp, sp, #12
   35b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35b6c:	mvn	r0, #21
   35b70:	b	35b64 <crc32@@Base+0x1b808>
   35b74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35b78:	sub	sp, sp, #76	; 0x4c
   35b7c:	mov	r7, r2
   35b80:	movw	ip, #3824	; 0xef0
   35b84:	ldr	r2, [sp, #112]	; 0x70
   35b88:	movt	ip, #5
   35b8c:	str	ip, [sp, #20]
   35b90:	mov	r6, r1
   35b94:	sub	r2, r7, r2
   35b98:	ldr	ip, [ip]
   35b9c:	sub	r5, r2, #1
   35ba0:	ldr	r9, [r0, #20]
   35ba4:	sub	r4, r2, #2
   35ba8:	str	r3, [sp, #28]
   35bac:	mov	r0, r5
   35bb0:	mov	r3, #0
   35bb4:	str	ip, [sp, #68]	; 0x44
   35bb8:	str	r3, [sp, #64]	; 0x40
   35bbc:	str	r3, [sp, #60]	; 0x3c
   35bc0:	str	r4, [sp, #24]
   35bc4:	bl	12664 <malloc@plt>
   35bc8:	mov	r8, r0
   35bcc:	str	r0, [sp, #8]
   35bd0:	ldr	r0, [sp, #112]	; 0x70
   35bd4:	bl	12664 <malloc@plt>
   35bd8:	mov	r1, #1
   35bdc:	mov	sl, r0
   35be0:	str	r0, [sp, #4]
   35be4:	mov	r0, r5
   35be8:	bl	125c8 <calloc@plt>
   35bec:	mov	fp, r0
   35bf0:	mov	r0, r5
   35bf4:	bl	12664 <malloc@plt>
   35bf8:	str	r0, [sp]
   35bfc:	mov	r0, r4
   35c00:	bl	12664 <malloc@plt>
   35c04:	str	r0, [sp, #12]
   35c08:	ldr	r0, [sp, #112]	; 0x70
   35c0c:	bl	12664 <malloc@plt>
   35c10:	cmp	sl, #0
   35c14:	cmpne	r8, #0
   35c18:	str	r0, [sp, #16]
   35c1c:	beq	35e94 <crc32@@Base+0x1bb38>
   35c20:	ldr	r3, [sp]
   35c24:	cmp	r3, #0
   35c28:	cmpne	fp, #0
   35c2c:	beq	35e94 <crc32@@Base+0x1bb38>
   35c30:	ldr	r3, [sp, #12]
   35c34:	clz	r4, r0
   35c38:	cmp	r3, #0
   35c3c:	lsr	r4, r4, #5
   35c40:	moveq	r4, #1
   35c44:	cmp	r4, #0
   35c48:	bne	35e94 <crc32@@Base+0x1bb38>
   35c4c:	add	r7, r6, r7
   35c50:	ldrb	r3, [r7, #-1]
   35c54:	cmp	r3, #188	; 0xbc
   35c58:	bne	35eb4 <crc32@@Base+0x1bb58>
   35c5c:	ldr	r7, [sp, #8]
   35c60:	mov	r2, r5
   35c64:	mov	r1, r6
   35c68:	mov	r0, r7
   35c6c:	bl	12658 <memcpy@plt>
   35c70:	ldr	r2, [sp, #112]	; 0x70
   35c74:	add	r1, r6, r5
   35c78:	ldr	r0, [sp, #4]
   35c7c:	bl	12658 <memcpy@plt>
   35c80:	ldrb	r8, [r7]
   35c84:	tst	r8, #128	; 0x80
   35c88:	bne	35ed4 <crc32@@Base+0x1bb78>
   35c8c:	ldr	r6, [r9, #4]
   35c90:	add	r2, sp, #56	; 0x38
   35c94:	ldr	r3, [sp, #4]
   35c98:	ldr	r1, [sp, #112]	; 0x70
   35c9c:	mov	r0, r6
   35ca0:	str	r3, [sp, #32]
   35ca4:	mov	r3, #4
   35ca8:	str	r1, [sp, #36]	; 0x24
   35cac:	strd	r2, [sp, #40]	; 0x28
   35cb0:	bl	12664 <malloc@plt>
   35cb4:	subs	sl, r0, #0
   35cb8:	beq	35f00 <crc32@@Base+0x1bba4>
   35cbc:	cmp	r5, #0
   35cc0:	ble	35e8c <crc32@@Base+0x1bb30>
   35cc4:	mov	r7, r4
   35cc8:	strb	r7, [sp, #59]	; 0x3b
   35ccc:	lsr	r2, r7, #24
   35cd0:	lsr	r3, r7, #16
   35cd4:	strb	r2, [sp, #56]	; 0x38
   35cd8:	strb	r3, [sp, #57]	; 0x39
   35cdc:	lsr	r2, r7, #8
   35ce0:	mov	r3, sl
   35ce4:	strb	r2, [sp, #58]	; 0x3a
   35ce8:	add	r1, sp, #32
   35cec:	mov	r2, #2
   35cf0:	ldr	r0, [r9]
   35cf4:	ldr	ip, [r9, #20]
   35cf8:	blx	ip
   35cfc:	cmp	r0, #0
   35d00:	blt	35d48 <crc32@@Base+0x1b9ec>
   35d04:	cmp	r5, r4
   35d08:	cmpgt	r6, #0
   35d0c:	ble	35d3c <crc32@@Base+0x1b9e0>
   35d10:	sub	r3, r4, #1
   35d14:	sub	r2, sl, #1
   35d18:	add	r3, fp, r3
   35d1c:	mov	ip, r4
   35d20:	add	r4, r4, #1
   35d24:	ldrb	r1, [r2, #1]!
   35d28:	sub	r0, r4, ip
   35d2c:	cmp	r6, r0
   35d30:	cmpgt	r5, r4
   35d34:	strb	r1, [r3, #1]!
   35d38:	bgt	35d20 <crc32@@Base+0x1b9c4>
   35d3c:	cmp	r5, r4
   35d40:	add	r7, r7, #1
   35d44:	bgt	35cc8 <crc32@@Base+0x1b96c>
   35d48:	mov	r0, sl
   35d4c:	bl	121c0 <free@plt>
   35d50:	ldr	r3, [sp]
   35d54:	sub	r0, fp, #1
   35d58:	ldr	ip, [sp, #8]
   35d5c:	mov	r2, #0
   35d60:	sub	r1, r3, #1
   35d64:	b	35d6c <crc32@@Base+0x1ba10>
   35d68:	ldrb	r8, [ip, #1]!
   35d6c:	add	r2, r2, #1
   35d70:	ldrb	r3, [r0, #1]!
   35d74:	cmp	r5, r2
   35d78:	eor	r3, r3, r8
   35d7c:	strb	r3, [r1, #1]!
   35d80:	bgt	35d68 <crc32@@Base+0x1ba0c>
   35d84:	ldr	r2, [sp]
   35d88:	ldrb	r3, [r2]
   35d8c:	and	r3, r3, #127	; 0x7f
   35d90:	strb	r3, [r2]
   35d94:	cmp	r3, #1
   35d98:	bne	35e60 <crc32@@Base+0x1bb04>
   35d9c:	ldr	r6, [sp, #24]
   35da0:	ldr	r5, [sp, #12]
   35da4:	ldr	r3, [sp]
   35da8:	mov	r2, r6
   35dac:	add	r1, r3, #1
   35db0:	mov	r0, r5
   35db4:	bl	12658 <memcpy@plt>
   35db8:	ldr	r2, [sp, #28]
   35dbc:	ldr	r4, [r9, #20]
   35dc0:	mov	ip, #8
   35dc4:	ldr	r0, [r9]
   35dc8:	add	r3, sp, #60	; 0x3c
   35dcc:	ldr	r7, [sp, #16]
   35dd0:	add	r1, sp, #32
   35dd4:	str	r2, [sp, #40]	; 0x28
   35dd8:	ldr	r2, [sp, #112]	; 0x70
   35ddc:	str	r3, [sp, #32]
   35de0:	mov	r3, r7
   35de4:	str	ip, [sp, #36]	; 0x24
   35de8:	str	r2, [sp, #44]	; 0x2c
   35dec:	mov	r2, #3
   35df0:	str	r5, [sp, #48]	; 0x30
   35df4:	str	r6, [sp, #52]	; 0x34
   35df8:	blx	r4
   35dfc:	ldr	r2, [sp, #112]	; 0x70
   35e00:	mov	r1, r7
   35e04:	ldr	r0, [sp, #4]
   35e08:	bl	12784 <memcmp@plt>
   35e0c:	mov	r4, r0
   35e10:	ldr	r0, [sp, #16]
   35e14:	bl	121c0 <free@plt>
   35e18:	ldr	r0, [sp, #12]
   35e1c:	bl	121c0 <free@plt>
   35e20:	ldr	r0, [sp]
   35e24:	bl	121c0 <free@plt>
   35e28:	mov	r0, fp
   35e2c:	bl	121c0 <free@plt>
   35e30:	ldr	r0, [sp, #4]
   35e34:	bl	121c0 <free@plt>
   35e38:	ldr	r0, [sp, #8]
   35e3c:	bl	121c0 <free@plt>
   35e40:	ldr	r3, [sp, #20]
   35e44:	ldr	r2, [sp, #68]	; 0x44
   35e48:	mov	r0, r4
   35e4c:	ldr	r3, [r3]
   35e50:	cmp	r2, r3
   35e54:	bne	35f0c <crc32@@Base+0x1bbb0>
   35e58:	add	sp, sp, #76	; 0x4c
   35e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35e60:	movw	r2, #60072	; 0xeaa8
   35e64:	movw	r1, #60168	; 0xeb08
   35e68:	movt	r2, #3
   35e6c:	movt	r1, #3
   35e70:	mov	r0, #1
   35e74:	mov	r4, #22
   35e78:	bl	1282c <__printf_chk@plt>
   35e7c:	movw	r0, #60232	; 0xeb48
   35e80:	movt	r0, #3
   35e84:	bl	12310 <puts@plt>
   35e88:	b	35e10 <crc32@@Base+0x1bab4>
   35e8c:	bl	121c0 <free@plt>
   35e90:	b	35d84 <crc32@@Base+0x1ba28>
   35e94:	movw	r2, #60072	; 0xeaa8
   35e98:	movw	r1, #60092	; 0xeabc
   35e9c:	movt	r2, #3
   35ea0:	movt	r1, #3
   35ea4:	mov	r0, #1
   35ea8:	mvn	r4, #11
   35eac:	bl	1282c <__printf_chk@plt>
   35eb0:	b	35e10 <crc32@@Base+0x1bab4>
   35eb4:	movw	r2, #60072	; 0xeaa8
   35eb8:	movw	r1, #60124	; 0xeadc
   35ebc:	movt	r2, #3
   35ec0:	movt	r1, #3
   35ec4:	mov	r0, #1
   35ec8:	mvn	r4, #21
   35ecc:	bl	1282c <__printf_chk@plt>
   35ed0:	b	35e10 <crc32@@Base+0x1bab4>
   35ed4:	movw	r2, #60072	; 0xeaa8
   35ed8:	movw	r1, #60168	; 0xeb08
   35edc:	movt	r2, #3
   35ee0:	movt	r1, #3
   35ee4:	mov	r0, #1
   35ee8:	mvn	r4, #21
   35eec:	bl	1282c <__printf_chk@plt>
   35ef0:	movw	r0, #60196	; 0xeb24
   35ef4:	movt	r0, #3
   35ef8:	bl	12310 <puts@plt>
   35efc:	b	35e10 <crc32@@Base+0x1bab4>
   35f00:	cmp	r5, #0
   35f04:	ble	35d84 <crc32@@Base+0x1ba28>
   35f08:	b	35d50 <crc32@@Base+0x1b9f4>
   35f0c:	bl	12538 <__stack_chk_fail@plt>
   35f10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35f14:	mov	r4, r0
   35f18:	add	fp, sp, #32
   35f1c:	sub	sp, sp, #132	; 0x84
   35f20:	ldr	ip, [r0, #28]
   35f24:	ldr	r0, [r0, #20]
   35f28:	movw	r6, #3824	; 0xef0
   35f2c:	mov	r8, r1
   35f30:	movt	r6, #5
   35f34:	mov	r9, r2
   35f38:	ldr	r2, [ip, #4]
   35f3c:	ldr	r1, [r0, #4]
   35f40:	str	r3, [fp, #-152]	; 0xffffff68
   35f44:	add	r3, r2, #7
   35f48:	cmp	r2, r1
   35f4c:	ldr	r2, [r6]
   35f50:	bic	r3, r3, #7
   35f54:	ldr	r5, [r4, #32]
   35f58:	sub	sp, sp, r3
   35f5c:	str	r2, [fp, #-40]	; 0xffffffd8
   35f60:	blt	360dc <crc32@@Base+0x1bd80>
   35f64:	movw	r2, #33528	; 0x82f8
   35f68:	mov	r1, #0
   35f6c:	movt	r2, #3
   35f70:	mov	r0, r5
   35f74:	bl	317d4 <crc32@@Base+0x17478>
   35f78:	subs	r3, r0, #0
   35f7c:	str	r3, [fp, #-156]	; 0xffffff64
   35f80:	blt	360e4 <crc32@@Base+0x1bd88>
   35f84:	ldr	r0, [r4, #20]
   35f88:	add	r7, sp, #8
   35f8c:	mov	r1, r8
   35f90:	mov	r2, r9
   35f94:	mov	r3, r7
   35f98:	ldr	r8, [r0, #20]
   35f9c:	ldr	r0, [r0]
   35fa0:	blx	r8
   35fa4:	cmp	r0, #0
   35fa8:	blt	360dc <crc32@@Base+0x1bd80>
   35fac:	ldr	r3, [r4, #36]	; 0x24
   35fb0:	cmn	r3, #1
   35fb4:	beq	35fd8 <crc32@@Base+0x1bc7c>
   35fb8:	str	r3, [sp]
   35fbc:	mov	r1, r7
   35fc0:	ldr	r3, [fp, #4]
   35fc4:	mov	r0, r4
   35fc8:	ldr	r2, [fp, #-152]	; 0xffffff68
   35fcc:	bl	358e8 <crc32@@Base+0x1b58c>
   35fd0:	cmp	r0, #0
   35fd4:	beq	36034 <crc32@@Base+0x1bcd8>
   35fd8:	ldr	r1, [r4, #4]
   35fdc:	mov	r3, #100	; 0x64
   35fe0:	movw	r2, #59920	; 0xea10
   35fe4:	sub	r0, fp, #140	; 0x8c
   35fe8:	movt	r2, #3
   35fec:	str	r2, [sp]
   35ff0:	str	r1, [sp, #4]
   35ff4:	mov	r2, #1
   35ff8:	mov	r1, r3
   35ffc:	bl	12688 <__snprintf_chk@plt>
   36000:	sub	r2, fp, #140	; 0x8c
   36004:	ldr	r1, [fp, #-156]	; 0xffffff64
   36008:	mov	r0, r5
   3600c:	bl	317d4 <crc32@@Base+0x17478>
   36010:	ldr	r3, [fp, #4]
   36014:	ldr	r2, [fp, #-152]	; 0xffffff68
   36018:	mov	r1, r7
   3601c:	str	r0, [sp]
   36020:	mov	r8, r0
   36024:	mov	r0, r4
   36028:	bl	358e8 <crc32@@Base+0x1b58c>
   3602c:	subs	r9, r0, #0
   36030:	bne	36054 <crc32@@Base+0x1bcf8>
   36034:	mov	r9, #0
   36038:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3603c:	mov	r0, r9
   36040:	ldr	r3, [r6]
   36044:	cmp	r2, r3
   36048:	bne	360ec <crc32@@Base+0x1bd90>
   3604c:	sub	sp, fp, #32
   36050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36054:	sub	sl, fp, #36	; 0x24
   36058:	mov	r3, #0
   3605c:	ldr	r1, [fp, #-156]	; 0xffffff64
   36060:	str	r3, [sl, #-108]!	; 0xffffff94
   36064:	mov	r2, sl
   36068:	ldr	r0, [r4, #8]
   3606c:	bl	2e588 <crc32@@Base+0x1422c>
   36070:	subs	r5, r0, #0
   36074:	bge	36094 <crc32@@Base+0x1bd38>
   36078:	b	36038 <crc32@@Base+0x1bcdc>
   3607c:	mov	r1, r5
   36080:	mov	r2, sl
   36084:	ldr	r0, [r4, #8]
   36088:	bl	2e588 <crc32@@Base+0x1422c>
   3608c:	subs	r5, r0, #0
   36090:	blt	36038 <crc32@@Base+0x1bcdc>
   36094:	ldr	r3, [fp, #-144]	; 0xffffff70
   36098:	cmp	r3, #0
   3609c:	ble	36038 <crc32@@Base+0x1bcdc>
   360a0:	subs	r2, r8, r5
   360a4:	movne	r2, #1
   360a8:	cmp	r3, #1
   360ac:	movne	r2, #0
   360b0:	cmp	r2, #0
   360b4:	beq	3607c <crc32@@Base+0x1bd20>
   360b8:	str	r5, [sp]
   360bc:	mov	r1, r7
   360c0:	ldr	r3, [fp, #4]
   360c4:	mov	r0, r4
   360c8:	ldr	r2, [fp, #-152]	; 0xffffff68
   360cc:	bl	358e8 <crc32@@Base+0x1b58c>
   360d0:	subs	r9, r0, #0
   360d4:	bne	3607c <crc32@@Base+0x1bd20>
   360d8:	b	36034 <crc32@@Base+0x1bcd8>
   360dc:	mvn	r9, #21
   360e0:	b	36038 <crc32@@Base+0x1bcdc>
   360e4:	mvn	r9, #1
   360e8:	b	36038 <crc32@@Base+0x1bcdc>
   360ec:	bl	12538 <__stack_chk_fail@plt>
   360f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   360f4:	movw	r8, #3824	; 0xef0
   360f8:	movt	r8, #5
   360fc:	mov	r7, r2
   36100:	sub	sp, sp, #28
   36104:	mov	r6, r1
   36108:	ldr	r2, [r8]
   3610c:	add	r1, sp, #12
   36110:	mov	sl, r3
   36114:	str	r2, [sp, #20]
   36118:	bl	2b440 <crc32@@Base+0x110e4>
   3611c:	cmp	r0, #0
   36120:	bne	36190 <crc32@@Base+0x1be34>
   36124:	ldr	r0, [sp, #12]
   36128:	add	r1, sp, #16
   3612c:	ldr	r3, [r0, #16]
   36130:	blx	r3
   36134:	cmp	r0, #0
   36138:	bne	36190 <crc32@@Base+0x1be34>
   3613c:	cmp	r7, #1
   36140:	beq	361ac <crc32@@Base+0x1be50>
   36144:	mov	r4, r0
   36148:	sub	r7, r7, #1
   3614c:	mov	r9, r0
   36150:	mov	r5, r6
   36154:	b	36168 <crc32@@Base+0x1be0c>
   36158:	add	r4, r4, #1
   3615c:	add	r5, r5, #8
   36160:	cmp	r7, r4
   36164:	beq	361a8 <crc32@@Base+0x1be4c>
   36168:	ldr	ip, [sp, #12]
   3616c:	ldr	r3, [r5, #4]
   36170:	ldr	r2, [r6, r4, lsl #3]
   36174:	ldr	r1, [sp, #16]
   36178:	mov	r0, ip
   3617c:	str	r9, [sp]
   36180:	ldr	fp, [ip, #20]
   36184:	blx	fp
   36188:	cmp	r0, #0
   3618c:	beq	36158 <crc32@@Base+0x1bdfc>
   36190:	ldr	r2, [sp, #20]
   36194:	ldr	r3, [r8]
   36198:	cmp	r2, r3
   3619c:	bne	361f4 <crc32@@Base+0x1be98>
   361a0:	add	sp, sp, #28
   361a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   361a8:	add	r6, r6, r7, lsl #3
   361ac:	ldr	ip, [sp, #12]
   361b0:	mov	lr, #1
   361b4:	ldrd	r2, [r6]
   361b8:	ldr	r1, [sp, #16]
   361bc:	str	lr, [sp]
   361c0:	mov	r0, ip
   361c4:	ldr	r4, [ip, #20]
   361c8:	blx	r4
   361cc:	cmp	r0, #0
   361d0:	bne	36190 <crc32@@Base+0x1be34>
   361d4:	ldr	r3, [sp, #12]
   361d8:	mov	r2, sl
   361dc:	ldr	r1, [sp, #16]
   361e0:	ldr	r4, [r3, #24]
   361e4:	mov	r0, r3
   361e8:	ldr	r3, [r3, #4]
   361ec:	blx	r4
   361f0:	b	36190 <crc32@@Base+0x1be34>
   361f4:	bl	12538 <__stack_chk_fail@plt>
   361f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   361fc:	sub	sp, sp, #44	; 0x2c
   36200:	mov	fp, r0
   36204:	mov	r0, r1
   36208:	str	r1, [sp, #16]
   3620c:	ldr	r1, [fp]
   36210:	str	r3, [sp, #32]
   36214:	cmp	r1, #0
   36218:	beq	363c4 <crc32@@Base+0x1c068>
   3621c:	sub	r3, r0, #4
   36220:	str	r3, [sp, #36]	; 0x24
   36224:	mov	r1, r3
   36228:	mov	r3, #0
   3622c:	mov	ip, r3
   36230:	str	ip, [r1, #4]!
   36234:	add	r3, r3, #1
   36238:	ldr	r0, [fp]
   3623c:	cmp	r0, r3
   36240:	bhi	36230 <crc32@@Base+0x1bed4>
   36244:	cmp	r0, #0
   36248:	beq	363c4 <crc32@@Base+0x1c068>
   3624c:	ldr	r3, [fp, #8]
   36250:	str	fp, [sp, #4]
   36254:	str	r3, [sp, #28]
   36258:	sub	r3, r2, #4
   3625c:	str	r3, [sp, #20]
   36260:	mov	r3, #0
   36264:	str	r3, [sp, #24]
   36268:	ldr	r3, [sp, #20]
   3626c:	mov	fp, #0
   36270:	ldr	ip, [sp, #16]
   36274:	cmp	r0, #1
   36278:	ldr	r9, [sp, #32]
   3627c:	mov	r7, #0
   36280:	ldr	r8, [r3, #4]!
   36284:	ldr	r6, [ip]
   36288:	ldr	r2, [sp, #4]
   3628c:	str	r3, [sp, #20]
   36290:	ldr	r3, [r9]
   36294:	mov	sl, r6
   36298:	ldr	r5, [r2, #4]
   3629c:	ldr	r4, [sp, #28]
   362a0:	umlal	sl, fp, r3, r8
   362a4:	ldr	r1, [r4]
   362a8:	mul	r5, sl, r5
   362ac:	mov	r6, sl
   362b0:	umlal	r6, r7, r1, r5
   362b4:	bls	363d8 <crc32@@Base+0x1c07c>
   362b8:	str	r8, [sp, #8]
   362bc:	mov	lr, #1
   362c0:	str	r5, [sp, #12]
   362c4:	mov	r8, r9
   362c8:	b	362d0 <crc32@@Base+0x1bf74>
   362cc:	mov	lr, r3
   362d0:	ldr	r5, [r8, #4]!
   362d4:	mov	r3, #0
   362d8:	ldr	r6, [sp, #8]
   362dc:	mov	sl, fp
   362e0:	mov	fp, r3
   362e4:	ldr	r9, [r4, #4]!
   362e8:	mov	r1, r3
   362ec:	ldr	r3, [sp, #12]
   362f0:	umlal	sl, fp, r5, r6
   362f4:	ldr	r2, [ip, #4]
   362f8:	mov	r0, r7
   362fc:	umlal	r0, r1, r9, r3
   36300:	adds	r6, sl, r2
   36304:	ldr	r2, [sp, #4]
   36308:	adc	r7, fp, #0
   3630c:	adds	r6, r0, r6
   36310:	str	r6, [ip], #4
   36314:	add	r3, lr, #1
   36318:	mov	fp, r7
   3631c:	ldr	r2, [r2]
   36320:	adc	r7, r1, #0
   36324:	cmp	r3, r2
   36328:	bcc	362cc <crc32@@Base+0x1bf70>
   3632c:	ldr	r3, [sp, #16]
   36330:	add	lr, r3, lr, lsl #2
   36334:	adds	r2, r7, fp
   36338:	mov	r1, #0
   3633c:	adc	r3, r1, r1
   36340:	mov	r5, r1
   36344:	str	r2, [lr]
   36348:	mov	r4, r3
   3634c:	orrs	r3, r4, r5
   36350:	beq	363cc <crc32@@Base+0x1c070>
   36354:	ldr	r7, [sp, #4]
   36358:	ldr	r3, [r7]
   3635c:	cmp	r3, r1
   36360:	beq	363c4 <crc32@@Base+0x1c068>
   36364:	ldr	r3, [sp, #28]
   36368:	mov	ip, r1
   3636c:	ldr	r1, [sp, #36]	; 0x24
   36370:	mov	r2, #0
   36374:	sub	lr, r3, #4
   36378:	mov	r3, #0
   3637c:	ldr	r6, [r1, #4]!
   36380:	add	ip, ip, #1
   36384:	ldr	r0, [lr, #4]!
   36388:	adds	r4, r2, r6
   3638c:	adc	r5, r3, #0
   36390:	subs	r8, r4, r0
   36394:	str	r8, [r1]
   36398:	sbc	r9, r5, #0
   3639c:	ldr	r0, [r7]
   363a0:	mov	r2, r9
   363a4:	asr	r3, r9, #31
   363a8:	cmp	ip, r0
   363ac:	bcc	3637c <crc32@@Base+0x1c020>
   363b0:	ldr	r3, [sp, #24]
   363b4:	add	r3, r3, #1
   363b8:	str	r3, [sp, #24]
   363bc:	cmp	r3, r0
   363c0:	bcc	36268 <crc32@@Base+0x1bf0c>
   363c4:	add	sp, sp, #44	; 0x2c
   363c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   363cc:	ldr	r3, [sp, #4]
   363d0:	ldr	r0, [r3]
   363d4:	b	363b0 <crc32@@Base+0x1c054>
   363d8:	ldr	lr, [sp, #16]
   363dc:	b	36334 <crc32@@Base+0x1bfd8>
   363e0:	movw	ip, #3824	; 0xef0
   363e4:	movt	ip, #5
   363e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   363ec:	add	fp, sp, #32
   363f0:	mov	lr, ip
   363f4:	sub	sp, sp, #76	; 0x4c
   363f8:	str	ip, [fp, #-100]	; 0xffffff9c
   363fc:	mov	ip, r0
   36400:	ldr	r0, [lr]
   36404:	cmp	r2, #0
   36408:	str	r1, [fp, #-96]	; 0xffffffa0
   3640c:	str	r3, [fp, #-104]	; 0xffffff98
   36410:	str	r0, [fp, #-40]	; 0xffffffd8
   36414:	beq	368ac <crc32@@Base+0x1c550>
   36418:	ldrd	r0, [r2, #8]
   3641c:	ldr	r3, [r2, #16]
   36420:	cmp	r0, #0
   36424:	str	r1, [fp, #-64]	; 0xffffffc0
   36428:	str	r3, [fp, #-68]	; 0xffffffbc
   3642c:	beq	36890 <crc32@@Base+0x1c534>
   36430:	ldr	r1, [r0]
   36434:	mov	r6, #0
   36438:	ldr	r0, [r0, #4]
   3643c:	ubfx	r4, r1, #16, #8
   36440:	ubfx	lr, r1, #8, #8
   36444:	lsl	r5, r1, #24
   36448:	str	r5, [fp, #-72]	; 0xffffffb8
   3644c:	mov	r5, #0
   36450:	str	r5, [fp, #-76]	; 0xffffffb4
   36454:	lsl	r4, r4, #8
   36458:	str	r4, [fp, #-88]	; 0xffffffa8
   3645c:	ldrd	r4, [fp, #-76]	; 0xffffffb4
   36460:	lsl	r7, lr, #16
   36464:	lsr	lr, r0, #24
   36468:	mov	r8, r4
   3646c:	mov	r9, r5
   36470:	orr	r8, r8, lr
   36474:	ubfx	lr, r0, #16, #8
   36478:	orr	r5, r9, r7
   3647c:	lsr	r7, r1, #24
   36480:	mov	r1, #0
   36484:	str	r1, [fp, #-92]	; 0xffffffa4
   36488:	orr	r4, r8, r4
   3648c:	ldrd	r8, [fp, #-92]	; 0xffffffa4
   36490:	ubfx	r1, r0, #8, #8
   36494:	orr	r8, r8, r4
   36498:	uxtb	r4, r0
   3649c:	orr	r9, r9, r5
   364a0:	lsr	r0, r4, #8
   364a4:	str	r0, [fp, #-80]	; 0xffffffb0
   364a8:	lsl	r0, r4, #24
   364ac:	str	r0, [fp, #-84]	; 0xffffffac
   364b0:	uxtb	r0, r1
   364b4:	orr	r4, r8, r6
   364b8:	orr	r5, r9, r7
   364bc:	ldrd	r8, [fp, #-84]	; 0xffffffac
   364c0:	lsr	r7, r0, #16
   364c4:	lsl	r6, r0, #16
   364c8:	uxtb	r0, lr
   364cc:	orr	r8, r8, r4
   364d0:	orr	r9, r9, r5
   364d4:	orr	r8, r8, r6
   364d8:	orr	r9, r9, r7
   364dc:	lsr	r5, r0, #24
   364e0:	lsl	r4, r0, #8
   364e4:	orr	r7, r9, r5
   364e8:	orr	r6, r8, r4
   364ec:	strd	r6, [fp, #-52]	; 0xffffffcc
   364f0:	cmp	r3, #0
   364f4:	beq	368a4 <crc32@@Base+0x1c548>
   364f8:	ldr	r7, [r2, #4]
   364fc:	cmp	r7, #0
   36500:	beq	368a4 <crc32@@Base+0x1c548>
   36504:	ldr	r9, [r2]
   36508:	cmp	r9, #0
   3650c:	beq	368a4 <crc32@@Base+0x1c548>
   36510:	sub	r2, r3, #2048	; 0x800
   36514:	cmp	r2, #2048	; 0x800
   36518:	bhi	368a4 <crc32@@Base+0x1c548>
   3651c:	lsr	r3, r3, #5
   36520:	mov	r6, #0
   36524:	str	r3, [fp, #-68]	; 0xffffffbc
   36528:	lsl	r4, r3, #2
   3652c:	add	r5, r4, #10
   36530:	add	r7, r7, r4
   36534:	bic	r1, r5, #7
   36538:	sub	sp, sp, r1
   3653c:	mov	r2, sp
   36540:	sub	sp, sp, r1
   36544:	sub	sl, r2, #4
   36548:	str	r2, [fp, #-60]	; 0xffffffc4
   3654c:	mov	r8, sp
   36550:	str	r8, [fp, #-56]	; 0xffffffc8
   36554:	ldr	lr, [r7, #-4]!
   36558:	add	r6, r6, #1
   3655c:	cmp	r3, r6
   36560:	ubfx	r0, lr, #8, #8
   36564:	ubfx	r1, lr, #16, #8
   36568:	lsr	r2, lr, #24
   3656c:	orr	r2, r2, lr, lsl #24
   36570:	orr	r2, r2, r0, lsl #16
   36574:	orr	r2, r2, r1, lsl #8
   36578:	str	r2, [sl, #4]!
   3657c:	bgt	36554 <crc32@@Base+0x1c1f8>
   36580:	add	r9, r9, r4
   36584:	sub	r7, r8, #4
   36588:	mov	r6, #0
   3658c:	ldr	r1, [r9, #-4]!
   36590:	add	r6, r6, #1
   36594:	cmp	r3, r6
   36598:	ubfx	lr, r1, #8, #8
   3659c:	ubfx	r0, r1, #16, #8
   365a0:	lsr	r2, r1, #24
   365a4:	orr	r2, r2, r1, lsl #24
   365a8:	orr	r2, r2, lr, lsl #16
   365ac:	orr	r2, r2, r0, lsl #8
   365b0:	str	r2, [r7, #4]!
   365b4:	bgt	3658c <crc32@@Base+0x1c230>
   365b8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   365bc:	mov	r1, ip
   365c0:	bic	r3, r2, #3
   365c4:	add	r3, r3, #10
   365c8:	bic	r3, r3, #7
   365cc:	sub	sp, sp, r3
   365d0:	mov	r9, sp
   365d4:	mov	r0, r9
   365d8:	bl	12658 <memcpy@plt>
   365dc:	bic	r3, r5, #7
   365e0:	str	sp, [fp, #-76]	; 0xffffffb4
   365e4:	sub	sp, sp, r3
   365e8:	sub	ip, r4, #4
   365ec:	mov	r7, sp
   365f0:	sub	sp, sp, r3
   365f4:	add	ip, r9, ip
   365f8:	sub	sl, r7, #4
   365fc:	mov	r5, sp
   36600:	sub	sp, sp, r3
   36604:	sub	lr, ip, r4
   36608:	mov	r2, sp
   3660c:	sub	sp, sp, r3
   36610:	lsr	r2, r2, #2
   36614:	str	r2, [fp, #-84]	; 0xffffffac
   36618:	mov	r6, sp
   3661c:	lsl	r4, r2, #2
   36620:	ldr	r0, [ip], #-4
   36624:	ubfx	r1, r0, #8, #8
   36628:	ubfx	r2, r0, #16, #8
   3662c:	lsr	r3, r0, #24
   36630:	cmp	lr, ip
   36634:	orr	r3, r3, r0, lsl #24
   36638:	orr	r3, r3, r1, lsl #16
   3663c:	orr	r3, r3, r2, lsl #8
   36640:	str	r3, [sl, #4]!
   36644:	bne	36620 <crc32@@Base+0x1c2c4>
   36648:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   3664c:	orrs	r3, r0, r1
   36650:	beq	3686c <crc32@@Base+0x1c510>
   36654:	lsrs	r3, r1, #1
   36658:	rrx	r2, r0
   3665c:	orrs	ip, r2, r3
   36660:	beq	3686c <crc32@@Base+0x1c510>
   36664:	mov	sl, #2
   36668:	b	36678 <crc32@@Base+0x1c31c>
   3666c:	add	sl, sl, #1
   36670:	cmp	sl, #65	; 0x41
   36674:	beq	3686c <crc32@@Base+0x1c510>
   36678:	lsrs	r3, r3, #1
   3667c:	rrx	r2, r2
   36680:	orrs	ip, r2, r3
   36684:	bne	3666c <crc32@@Base+0x1c310>
   36688:	and	r0, r0, #1
   3668c:	cmp	r0, #0
   36690:	beq	3686c <crc32@@Base+0x1c510>
   36694:	mov	r3, r8
   36698:	mov	r2, r7
   3669c:	mov	r1, r5
   366a0:	sub	r0, fp, #68	; 0x44
   366a4:	bl	361f8 <crc32@@Base+0x1be9c>
   366a8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   366ac:	mov	r1, r5
   366b0:	mov	r0, r6
   366b4:	lsl	r2, r2, #2
   366b8:	bl	12658 <memcpy@plt>
   366bc:	subs	r8, sl, #2
   366c0:	beq	36724 <crc32@@Base+0x1c3c8>
   366c4:	mov	sl, #1
   366c8:	b	366e8 <crc32@@Base+0x1c38c>
   366cc:	mov	r3, r6
   366d0:	mov	r2, r4
   366d4:	mov	r1, r5
   366d8:	sub	r0, fp, #68	; 0x44
   366dc:	bl	361f8 <crc32@@Base+0x1be9c>
   366e0:	subs	r8, r8, #1
   366e4:	beq	36724 <crc32@@Base+0x1c3c8>
   366e8:	mov	r3, r5
   366ec:	mov	r2, r5
   366f0:	mov	r1, r4
   366f4:	sub	r0, fp, #68	; 0x44
   366f8:	bl	361f8 <crc32@@Base+0x1be9c>
   366fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36700:	ands	r3, r3, sl, lsl r8
   36704:	bne	366cc <crc32@@Base+0x1c370>
   36708:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3670c:	mov	r1, r4
   36710:	mov	r0, r5
   36714:	lsl	r2, r2, #2
   36718:	bl	12658 <memcpy@plt>
   3671c:	subs	r8, r8, #1
   36720:	bne	366e8 <crc32@@Base+0x1c38c>
   36724:	mov	r3, r5
   36728:	mov	r2, r5
   3672c:	mov	r1, r4
   36730:	sub	r0, fp, #68	; 0x44
   36734:	bl	361f8 <crc32@@Base+0x1be9c>
   36738:	mov	r3, r7
   3673c:	mov	r1, r5
   36740:	mov	r2, r4
   36744:	sub	r0, fp, #68	; 0x44
   36748:	bl	361f8 <crc32@@Base+0x1be9c>
   3674c:	ldr	r6, [fp, #-68]	; 0xffffffbc
   36750:	mov	r1, r5
   36754:	mov	r0, r4
   36758:	lsl	r5, r6, #2
   3675c:	mov	r2, r5
   36760:	bl	12658 <memcpy@plt>
   36764:	subs	r3, r6, #1
   36768:	bmi	367bc <crc32@@Base+0x1c460>
   3676c:	ldr	r1, [fp, #-84]	; 0xffffffac
   36770:	lsl	r2, r3, #2
   36774:	ldr	r0, [fp, #-60]	; 0xffffffc4
   36778:	ldr	r2, [r2, r1, lsl #2]
   3677c:	ldr	r1, [r0, r3, lsl #2]
   36780:	cmp	r1, r2
   36784:	bhi	3681c <crc32@@Base+0x1c4c0>
   36788:	bcc	367bc <crc32@@Base+0x1c460>
   3678c:	sub	r1, r5, #4
   36790:	mov	r2, r3
   36794:	add	r0, r0, r1
   36798:	add	r1, r4, r1
   3679c:	b	367b4 <crc32@@Base+0x1c458>
   367a0:	ldr	lr, [r1, #-4]!
   367a4:	ldr	ip, [r0, #-4]!
   367a8:	cmp	lr, ip
   367ac:	bcc	3681c <crc32@@Base+0x1c4c0>
   367b0:	bhi	367bc <crc32@@Base+0x1c460>
   367b4:	subs	r2, r2, #1
   367b8:	bcs	367a0 <crc32@@Base+0x1c444>
   367bc:	cmp	r6, #0
   367c0:	beq	36850 <crc32@@Base+0x1c4f4>
   367c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   367c8:	sub	ip, r4, #4
   367cc:	mov	r6, #0
   367d0:	mov	r7, #0
   367d4:	add	r8, r5, r2
   367d8:	str	r4, [fp, #-84]	; 0xffffffac
   367dc:	str	r5, [fp, #-92]	; 0xffffffa4
   367e0:	ldr	sl, [ip, #4]!
   367e4:	ldr	lr, [r2], #4
   367e8:	adds	r0, r6, sl
   367ec:	adc	r1, r7, #0
   367f0:	subs	r4, r0, lr
   367f4:	sbc	r5, r1, #0
   367f8:	cmp	r8, r2
   367fc:	str	r4, [ip]
   36800:	mov	r6, r5
   36804:	asr	r7, r5, #31
   36808:	bne	367e0 <crc32@@Base+0x1c484>
   3680c:	cmp	r3, #0
   36810:	ldr	r4, [fp, #-84]	; 0xffffffac
   36814:	ldr	r5, [fp, #-92]	; 0xffffffa4
   36818:	blt	36850 <crc32@@Base+0x1c4f4>
   3681c:	add	r4, r4, r5
   36820:	mov	r0, r9
   36824:	ldr	r1, [r4, #-4]!
   36828:	sub	r3, r3, #1
   3682c:	cmn	r3, #1
   36830:	ubfx	lr, r1, #8, #8
   36834:	ubfx	ip, r1, #16, #8
   36838:	lsr	r2, r1, #24
   3683c:	orr	r2, r2, r1, lsl #24
   36840:	orr	r2, r2, lr, lsl #16
   36844:	orr	r2, r2, ip, lsl #8
   36848:	str	r2, [r0], #4
   3684c:	bne	36824 <crc32@@Base+0x1c4c8>
   36850:	mov	r1, r9
   36854:	ldr	r2, [fp, #-96]	; 0xffffffa0
   36858:	ldr	sp, [fp, #-76]	; 0xffffffb4
   3685c:	ldr	r0, [fp, #-104]	; 0xffffff98
   36860:	bl	12658 <memcpy@plt>
   36864:	mov	r0, #0
   36868:	b	36874 <crc32@@Base+0x1c518>
   3686c:	ldr	sp, [fp, #-76]	; 0xffffffb4
   36870:	mvn	r0, #21
   36874:	ldr	r3, [fp, #-100]	; 0xffffff9c
   36878:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3687c:	ldr	r3, [r3]
   36880:	cmp	r2, r3
   36884:	bne	368b4 <crc32@@Base+0x1c558>
   36888:	sub	sp, fp, #32
   3688c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36890:	mov	r0, #1
   36894:	mov	r1, #0
   36898:	movt	r0, #1
   3689c:	strd	r0, [fp, #-52]	; 0xffffffcc
   368a0:	b	364f0 <crc32@@Base+0x1c194>
   368a4:	mvn	r0, #13
   368a8:	b	36874 <crc32@@Base+0x1c518>
   368ac:	mvn	r0, #8
   368b0:	b	36874 <crc32@@Base+0x1c518>
   368b4:	bl	12538 <__stack_chk_fail@plt>
   368b8:	push	{r4, r5, r6, lr}
   368bc:	movw	r4, #51708	; 0xc9fc
   368c0:	movt	r4, #30
   368c4:	mov	r6, r1
   368c8:	ldr	r1, [r0]
   368cc:	ldr	r0, [r4]
   368d0:	bl	1ae50 <crc32@@Base+0xaf4>
   368d4:	ldr	r1, [r6]
   368d8:	mov	r5, r0
   368dc:	ldr	r0, [r4]
   368e0:	bl	1ae50 <crc32@@Base+0xaf4>
   368e4:	mov	r1, r0
   368e8:	mov	r0, r5
   368ec:	pop	{r4, r5, r6, lr}
   368f0:	b	12718 <strcmp@plt>
   368f4:	push	{r4, r5, r6, lr}
   368f8:	movw	r4, #7868	; 0x1ebc
   368fc:	movt	r4, #5
   36900:	movw	r5, #7608	; 0x1db8
   36904:	movt	r5, #5
   36908:	mov	r3, r0
   3690c:	mov	r1, #1
   36910:	movw	r2, #60268	; 0xeb6c
   36914:	ldr	r0, [r4]
   36918:	movt	r2, #3
   3691c:	bl	12358 <__fprintf_chk@plt>
   36920:	ldr	r3, [r5, #80]	; 0x50
   36924:	mov	r1, #1
   36928:	ldr	r0, [r4]
   3692c:	movw	r2, #60280	; 0xeb78
   36930:	movt	r2, #3
   36934:	bl	12358 <__fprintf_chk@plt>
   36938:	ldr	r3, [r5, #80]	; 0x50
   3693c:	mov	r1, #1
   36940:	ldr	r0, [r4]
   36944:	movw	r2, #60348	; 0xebbc
   36948:	movt	r2, #3
   3694c:	bl	12358 <__fprintf_chk@plt>
   36950:	ldr	r3, [r5, #80]	; 0x50
   36954:	mov	r1, #1
   36958:	ldr	r0, [r4]
   3695c:	movw	r2, #60860	; 0xedbc
   36960:	movt	r2, #3
   36964:	bl	12358 <__fprintf_chk@plt>
   36968:	ldr	r3, [r4]
   3696c:	mov	r2, #151	; 0x97
   36970:	mov	r1, #1
   36974:	movw	r0, #61048	; 0xee78
   36978:	movt	r0, #3
   3697c:	bl	12634 <fwrite@plt>
   36980:	ldr	r3, [r4]
   36984:	movw	r2, #513	; 0x201
   36988:	mov	r1, #1
   3698c:	movw	r0, #61200	; 0xef10
   36990:	movt	r0, #3
   36994:	bl	12634 <fwrite@plt>
   36998:	ldr	r3, [r5, #80]	; 0x50
   3699c:	mov	r1, #1
   369a0:	ldr	r0, [r4]
   369a4:	movw	r2, #61716	; 0xf114
   369a8:	movt	r2, #3
   369ac:	bl	12358 <__fprintf_chk@plt>
   369b0:	ldr	r3, [r4]
   369b4:	movw	r0, #61772	; 0xf14c
   369b8:	mov	r2, #53	; 0x35
   369bc:	movt	r0, #3
   369c0:	mov	r1, #1
   369c4:	bl	12634 <fwrite@plt>
   369c8:	mov	r0, #1
   369cc:	bl	12298 <exit@plt>
   369d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   369d4:	sub	sp, sp, #20
   369d8:	mov	r7, r0
   369dc:	bl	1aed8 <crc32@@Base+0xb7c>
   369e0:	mov	r1, #4
   369e4:	mov	r6, r0
   369e8:	bl	125c8 <calloc@plt>
   369ec:	subs	r3, r0, #0
   369f0:	str	r3, [sp, #12]
   369f4:	beq	36b30 <crc32@@Base+0x1c7d4>
   369f8:	cmp	r6, #0
   369fc:	ble	36ae0 <crc32@@Base+0x1c784>
   36a00:	sub	r2, r3, #4
   36a04:	mov	r3, #0
   36a08:	str	r3, [r2, #4]!
   36a0c:	add	r3, r3, #1
   36a10:	cmp	r6, r3
   36a14:	bne	36a08 <crc32@@Base+0x1c6ac>
   36a18:	ldr	r5, [sp, #12]
   36a1c:	movw	ip, #51708	; 0xc9fc
   36a20:	movt	ip, #30
   36a24:	mov	r1, r6
   36a28:	mov	r2, #4
   36a2c:	movw	sl, #7868	; 0x1ebc
   36a30:	mov	r0, r5
   36a34:	movt	sl, #5
   36a38:	movw	r3, #26808	; 0x68b8
   36a3c:	movt	r3, #3
   36a40:	str	r7, [ip]
   36a44:	bl	12214 <qsort@plt>
   36a48:	mov	r0, r7
   36a4c:	ldr	r4, [sl]
   36a50:	bl	1aef0 <crc32@@Base+0xb94>
   36a54:	movw	r2, #61840	; 0xf190
   36a58:	mov	r1, #1
   36a5c:	movt	r2, #3
   36a60:	movw	fp, #61828	; 0xf184
   36a64:	add	r6, r5, r6, lsl #2
   36a68:	movt	fp, #3
   36a6c:	mov	r3, r0
   36a70:	mov	r0, r4
   36a74:	bl	12358 <__fprintf_chk@plt>
   36a78:	mov	r4, r5
   36a7c:	ldr	r5, [r4], #4
   36a80:	mov	r0, r7
   36a84:	ldr	r8, [sl]
   36a88:	mov	r1, r5
   36a8c:	bl	1ae50 <crc32@@Base+0xaf4>
   36a90:	mov	r1, r5
   36a94:	mov	r9, r0
   36a98:	mov	r0, r7
   36a9c:	bl	1adc8 <crc32@@Base+0xa6c>
   36aa0:	mov	r3, r9
   36aa4:	mov	r2, fp
   36aa8:	mov	r1, #1
   36aac:	str	r0, [sp]
   36ab0:	mov	r0, r8
   36ab4:	bl	12358 <__fprintf_chk@plt>
   36ab8:	cmp	r4, r6
   36abc:	bne	36a7c <crc32@@Base+0x1c720>
   36ac0:	ldr	r1, [sl]
   36ac4:	mov	r0, #10
   36ac8:	bl	12628 <fputc@plt>
   36acc:	ldr	r0, [sp, #12]
   36ad0:	bl	121c0 <free@plt>
   36ad4:	mov	r0, #0
   36ad8:	add	sp, sp, #20
   36adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36ae0:	movw	r2, #51708	; 0xc9fc
   36ae4:	movt	r2, #30
   36ae8:	mov	r1, r6
   36aec:	movw	sl, #7868	; 0x1ebc
   36af0:	str	r7, [r2]
   36af4:	movt	sl, #5
   36af8:	mov	r2, #4
   36afc:	movw	r3, #26808	; 0x68b8
   36b00:	movt	r3, #3
   36b04:	bl	12214 <qsort@plt>
   36b08:	mov	r0, r7
   36b0c:	ldr	r4, [sl]
   36b10:	bl	1aef0 <crc32@@Base+0xb94>
   36b14:	movw	r2, #61840	; 0xf190
   36b18:	mov	r1, #1
   36b1c:	movt	r2, #3
   36b20:	mov	r3, r0
   36b24:	mov	r0, r4
   36b28:	bl	12358 <__fprintf_chk@plt>
   36b2c:	b	36ac0 <crc32@@Base+0x1c764>
   36b30:	mvn	r0, #11
   36b34:	b	36ad8 <crc32@@Base+0x1c77c>
   36b38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36b3c:	movw	r8, #3824	; 0xef0
   36b40:	sub	sp, sp, #4160	; 0x1040
   36b44:	movt	r8, #5
   36b48:	sub	sp, sp, #60	; 0x3c
   36b4c:	movw	r5, #7608	; 0x1db8
   36b50:	ldr	r3, [r8]
   36b54:	movt	r5, #5
   36b58:	mov	r4, r2
   36b5c:	add	r2, sp, #4160	; 0x1040
   36b60:	add	r2, r2, #52	; 0x34
   36b64:	mov	r6, r0
   36b68:	ldr	r0, [r5, #44]	; 0x2c
   36b6c:	mov	r7, #0
   36b70:	str	r3, [r2]
   36b74:	mov	sl, r1
   36b78:	str	r7, [sp, #20]
   36b7c:	bl	1b284 <crc32@@Base+0xf28>
   36b80:	mov	r1, r7
   36b84:	mov	r2, #4096	; 0x1000
   36b88:	str	r0, [sp, #12]
   36b8c:	add	r0, sp, #116	; 0x74
   36b90:	bl	12388 <memset@plt>
   36b94:	ldr	r3, [r5, #24]
   36b98:	cmp	r3, r7
   36b9c:	bne	36d90 <crc32@@Base+0x1ca34>
   36ba0:	mov	r1, #0
   36ba4:	mov	r0, sl
   36ba8:	bl	124d8 <open@plt>
   36bac:	subs	r9, r0, #0
   36bb0:	blt	36e80 <crc32@@Base+0x1cb24>
   36bb4:	mov	r1, r9
   36bb8:	add	r2, sp, #24
   36bbc:	mov	r0, #3
   36bc0:	bl	12610 <__fxstat@plt>
   36bc4:	cmp	r0, #0
   36bc8:	blt	36e4c <crc32@@Base+0x1caf0>
   36bcc:	mov	r3, #1
   36bd0:	mov	r0, #0
   36bd4:	ldr	r1, [sp, #68]	; 0x44
   36bd8:	mov	r2, r3
   36bdc:	str	r9, [sp]
   36be0:	str	r0, [sp, #4]
   36be4:	bl	12490 <mmap@plt>
   36be8:	cmn	r0, #1
   36bec:	mov	r7, r0
   36bf0:	beq	36e14 <crc32@@Base+0x1cab8>
   36bf4:	ldr	r2, [r5, #28]
   36bf8:	ldr	fp, [sp, #68]	; 0x44
   36bfc:	cmp	r2, #0
   36c00:	beq	36db4 <crc32@@Base+0x1ca58>
   36c04:	ldr	r3, [sp, #12]
   36c08:	ldr	lr, [r3, #4]
   36c0c:	cmp	lr, fp
   36c10:	bhi	36de8 <crc32@@Base+0x1ca8c>
   36c14:	add	r1, r0, lr
   36c18:	cmp	r1, r0
   36c1c:	bls	36c4c <crc32@@Base+0x1c8f0>
   36c20:	ldrb	r2, [r0]
   36c24:	cmp	r2, #255	; 0xff
   36c28:	subeq	ip, r1, #1
   36c2c:	moveq	r2, r0
   36c30:	beq	36c44 <crc32@@Base+0x1c8e8>
   36c34:	b	36dbc <crc32@@Base+0x1ca60>
   36c38:	ldrb	r0, [r2, #1]!
   36c3c:	cmp	r0, #255	; 0xff
   36c40:	bne	36dbc <crc32@@Base+0x1ca60>
   36c44:	cmp	r2, ip
   36c48:	bne	36c38 <crc32@@Base+0x1c8dc>
   36c4c:	sub	fp, fp, lr
   36c50:	mov	r2, fp
   36c54:	mov	r0, r6
   36c58:	bl	126c4 <write@plt>
   36c5c:	cmp	r0, fp
   36c60:	bne	36cf4 <crc32@@Base+0x1c998>
   36c64:	rsbs	r2, fp, #0
   36c68:	and	r3, fp, #3
   36c6c:	and	r2, r2, #3
   36c70:	rsbpl	r3, r2, #0
   36c74:	sub	r2, r4, #1
   36c78:	clz	r2, r2
   36c7c:	cmp	r3, #0
   36c80:	lsr	r2, r2, #5
   36c84:	moveq	r2, #0
   36c88:	cmp	r2, #0
   36c8c:	bne	36d3c <crc32@@Base+0x1c9e0>
   36c90:	cmp	r4, #1
   36c94:	ble	36d58 <crc32@@Base+0x1c9fc>
   36c98:	sub	r3, r4, #1
   36c9c:	sub	sl, r4, #4096	; 0x1000
   36ca0:	bic	r3, r3, #4080	; 0xff0
   36ca4:	bic	r3, r3, #15
   36ca8:	sub	sl, sl, r3
   36cac:	b	36cd4 <crc32@@Base+0x1c978>
   36cb0:	mov	r2, #4096	; 0x1000
   36cb4:	add	r1, sp, #116	; 0x74
   36cb8:	mov	r0, r6
   36cbc:	bl	126c4 <write@plt>
   36cc0:	cmp	r0, #4096	; 0x1000
   36cc4:	bne	36cf4 <crc32@@Base+0x1c998>
   36cc8:	sub	r4, r4, #4096	; 0x1000
   36ccc:	cmp	sl, r4
   36cd0:	beq	36d58 <crc32@@Base+0x1c9fc>
   36cd4:	cmp	r4, #4096	; 0x1000
   36cd8:	bge	36cb0 <crc32@@Base+0x1c954>
   36cdc:	add	r1, sp, #116	; 0x74
   36ce0:	mov	r0, r6
   36ce4:	mov	r2, r4
   36ce8:	bl	126c4 <write@plt>
   36cec:	cmp	r0, r4
   36cf0:	beq	36d58 <crc32@@Base+0x1c9fc>
   36cf4:	movw	r2, #7868	; 0x1ebc
   36cf8:	movt	r2, #5
   36cfc:	ldr	r6, [r5, #80]	; 0x50
   36d00:	ldr	r4, [r2]
   36d04:	bl	12748 <__errno_location@plt>
   36d08:	ldr	r5, [r5, #76]	; 0x4c
   36d0c:	ldr	r0, [r0]
   36d10:	bl	122a4 <strerror@plt>
   36d14:	movw	r2, #61984	; 0xf220
   36d18:	movt	r2, #3
   36d1c:	mov	r3, r6
   36d20:	mov	r1, #1
   36d24:	str	r5, [sp]
   36d28:	str	r0, [sp, #4]
   36d2c:	mov	r0, r4
   36d30:	bl	12358 <__fprintf_chk@plt>
   36d34:	mov	r0, #1
   36d38:	bl	12298 <exit@plt>
   36d3c:	rsb	r4, r3, #4
   36d40:	add	r1, sp, #20
   36d44:	mov	r0, r6
   36d48:	mov	r2, r4
   36d4c:	bl	126c4 <write@plt>
   36d50:	cmp	r4, r0
   36d54:	bne	36cf4 <crc32@@Base+0x1c998>
   36d58:	ldr	r1, [sp, #68]	; 0x44
   36d5c:	mov	r0, r7
   36d60:	bl	126a0 <munmap@plt>
   36d64:	mov	r0, r9
   36d68:	bl	123b8 <close@plt>
   36d6c:	add	r3, sp, #4160	; 0x1040
   36d70:	add	r3, r3, #52	; 0x34
   36d74:	ldr	r2, [r3]
   36d78:	ldr	r3, [r8]
   36d7c:	cmp	r2, r3
   36d80:	bne	36e48 <crc32@@Base+0x1caec>
   36d84:	add	sp, sp, #4160	; 0x1040
   36d88:	add	sp, sp, #60	; 0x3c
   36d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36d90:	movw	r1, #7868	; 0x1ebc
   36d94:	movt	r1, #5
   36d98:	movw	r2, #61872	; 0xf1b0
   36d9c:	mov	r3, sl
   36da0:	ldr	r0, [r1]
   36da4:	movt	r2, #3
   36da8:	mov	r1, #1
   36dac:	bl	12358 <__fprintf_chk@plt>
   36db0:	b	36ba0 <crc32@@Base+0x1c844>
   36db4:	mov	r1, r0
   36db8:	b	36c50 <crc32@@Base+0x1c8f4>
   36dbc:	movw	r1, #7868	; 0x1ebc
   36dc0:	movt	r1, #5
   36dc4:	ldr	r3, [r5, #80]	; 0x50
   36dc8:	movw	r2, #61936	; 0xf1f0
   36dcc:	ldr	r0, [r1]
   36dd0:	movt	r2, #3
   36dd4:	str	sl, [sp]
   36dd8:	mov	r1, #1
   36ddc:	bl	12358 <__fprintf_chk@plt>
   36de0:	mov	r0, #1
   36de4:	bl	12298 <exit@plt>
   36de8:	movw	r1, #7868	; 0x1ebc
   36dec:	movt	r1, #5
   36df0:	str	sl, [sp]
   36df4:	movw	r2, #61892	; 0xf1c4
   36df8:	ldr	r0, [r1]
   36dfc:	movt	r2, #3
   36e00:	ldr	r3, [r5, #80]	; 0x50
   36e04:	mov	r1, #1
   36e08:	bl	12358 <__fprintf_chk@plt>
   36e0c:	mov	r0, #1
   36e10:	bl	12298 <exit@plt>
   36e14:	movw	r2, #7868	; 0x1ebc
   36e18:	movt	r2, #5
   36e1c:	ldr	r5, [r5, #80]	; 0x50
   36e20:	ldr	r4, [r2]
   36e24:	bl	12748 <__errno_location@plt>
   36e28:	ldr	r0, [r0]
   36e2c:	bl	122a4 <strerror@plt>
   36e30:	movw	r2, #31484	; 0x7afc
   36e34:	mov	r3, r5
   36e38:	str	sl, [sp]
   36e3c:	mov	r1, #1
   36e40:	movt	r2, #3
   36e44:	b	36d28 <crc32@@Base+0x1c9cc>
   36e48:	bl	12538 <__stack_chk_fail@plt>
   36e4c:	movw	r2, #7868	; 0x1ebc
   36e50:	movt	r2, #5
   36e54:	ldr	r5, [r5, #80]	; 0x50
   36e58:	ldr	r4, [r2]
   36e5c:	bl	12748 <__errno_location@plt>
   36e60:	ldr	r0, [r0]
   36e64:	bl	122a4 <strerror@plt>
   36e68:	movw	r2, #29904	; 0x74d0
   36e6c:	mov	r3, r5
   36e70:	str	sl, [sp]
   36e74:	mov	r1, #1
   36e78:	movt	r2, #3
   36e7c:	b	36d28 <crc32@@Base+0x1c9cc>
   36e80:	movw	r2, #7868	; 0x1ebc
   36e84:	movt	r2, #5
   36e88:	ldr	r5, [r5, #80]	; 0x50
   36e8c:	ldr	r4, [r2]
   36e90:	bl	12748 <__errno_location@plt>
   36e94:	ldr	r0, [r0]
   36e98:	bl	122a4 <strerror@plt>
   36e9c:	movw	r2, #29880	; 0x74b8
   36ea0:	mov	r3, r5
   36ea4:	str	sl, [sp]
   36ea8:	mov	r1, #1
   36eac:	movt	r2, #3
   36eb0:	b	36d28 <crc32@@Base+0x1c9cc>
   36eb4:	cmp	r1, #0
   36eb8:	beq	370c4 <crc32@@Base+0x1cd68>
   36ebc:	eor	ip, r0, r1
   36ec0:	rsbmi	r1, r1, #0
   36ec4:	subs	r2, r1, #1
   36ec8:	beq	37090 <crc32@@Base+0x1cd34>
   36ecc:	movs	r3, r0
   36ed0:	rsbmi	r3, r0, #0
   36ed4:	cmp	r3, r1
   36ed8:	bls	3709c <crc32@@Base+0x1cd40>
   36edc:	tst	r1, r2
   36ee0:	beq	370ac <crc32@@Base+0x1cd50>
   36ee4:	clz	r2, r3
   36ee8:	clz	r0, r1
   36eec:	sub	r2, r0, r2
   36ef0:	rsbs	r2, r2, #31
   36ef4:	addne	r2, r2, r2, lsl #1
   36ef8:	mov	r0, #0
   36efc:	addne	pc, pc, r2, lsl #2
   36f00:	nop	{0}
   36f04:	cmp	r3, r1, lsl #31
   36f08:	adc	r0, r0, r0
   36f0c:	subcs	r3, r3, r1, lsl #31
   36f10:	cmp	r3, r1, lsl #30
   36f14:	adc	r0, r0, r0
   36f18:	subcs	r3, r3, r1, lsl #30
   36f1c:	cmp	r3, r1, lsl #29
   36f20:	adc	r0, r0, r0
   36f24:	subcs	r3, r3, r1, lsl #29
   36f28:	cmp	r3, r1, lsl #28
   36f2c:	adc	r0, r0, r0
   36f30:	subcs	r3, r3, r1, lsl #28
   36f34:	cmp	r3, r1, lsl #27
   36f38:	adc	r0, r0, r0
   36f3c:	subcs	r3, r3, r1, lsl #27
   36f40:	cmp	r3, r1, lsl #26
   36f44:	adc	r0, r0, r0
   36f48:	subcs	r3, r3, r1, lsl #26
   36f4c:	cmp	r3, r1, lsl #25
   36f50:	adc	r0, r0, r0
   36f54:	subcs	r3, r3, r1, lsl #25
   36f58:	cmp	r3, r1, lsl #24
   36f5c:	adc	r0, r0, r0
   36f60:	subcs	r3, r3, r1, lsl #24
   36f64:	cmp	r3, r1, lsl #23
   36f68:	adc	r0, r0, r0
   36f6c:	subcs	r3, r3, r1, lsl #23
   36f70:	cmp	r3, r1, lsl #22
   36f74:	adc	r0, r0, r0
   36f78:	subcs	r3, r3, r1, lsl #22
   36f7c:	cmp	r3, r1, lsl #21
   36f80:	adc	r0, r0, r0
   36f84:	subcs	r3, r3, r1, lsl #21
   36f88:	cmp	r3, r1, lsl #20
   36f8c:	adc	r0, r0, r0
   36f90:	subcs	r3, r3, r1, lsl #20
   36f94:	cmp	r3, r1, lsl #19
   36f98:	adc	r0, r0, r0
   36f9c:	subcs	r3, r3, r1, lsl #19
   36fa0:	cmp	r3, r1, lsl #18
   36fa4:	adc	r0, r0, r0
   36fa8:	subcs	r3, r3, r1, lsl #18
   36fac:	cmp	r3, r1, lsl #17
   36fb0:	adc	r0, r0, r0
   36fb4:	subcs	r3, r3, r1, lsl #17
   36fb8:	cmp	r3, r1, lsl #16
   36fbc:	adc	r0, r0, r0
   36fc0:	subcs	r3, r3, r1, lsl #16
   36fc4:	cmp	r3, r1, lsl #15
   36fc8:	adc	r0, r0, r0
   36fcc:	subcs	r3, r3, r1, lsl #15
   36fd0:	cmp	r3, r1, lsl #14
   36fd4:	adc	r0, r0, r0
   36fd8:	subcs	r3, r3, r1, lsl #14
   36fdc:	cmp	r3, r1, lsl #13
   36fe0:	adc	r0, r0, r0
   36fe4:	subcs	r3, r3, r1, lsl #13
   36fe8:	cmp	r3, r1, lsl #12
   36fec:	adc	r0, r0, r0
   36ff0:	subcs	r3, r3, r1, lsl #12
   36ff4:	cmp	r3, r1, lsl #11
   36ff8:	adc	r0, r0, r0
   36ffc:	subcs	r3, r3, r1, lsl #11
   37000:	cmp	r3, r1, lsl #10
   37004:	adc	r0, r0, r0
   37008:	subcs	r3, r3, r1, lsl #10
   3700c:	cmp	r3, r1, lsl #9
   37010:	adc	r0, r0, r0
   37014:	subcs	r3, r3, r1, lsl #9
   37018:	cmp	r3, r1, lsl #8
   3701c:	adc	r0, r0, r0
   37020:	subcs	r3, r3, r1, lsl #8
   37024:	cmp	r3, r1, lsl #7
   37028:	adc	r0, r0, r0
   3702c:	subcs	r3, r3, r1, lsl #7
   37030:	cmp	r3, r1, lsl #6
   37034:	adc	r0, r0, r0
   37038:	subcs	r3, r3, r1, lsl #6
   3703c:	cmp	r3, r1, lsl #5
   37040:	adc	r0, r0, r0
   37044:	subcs	r3, r3, r1, lsl #5
   37048:	cmp	r3, r1, lsl #4
   3704c:	adc	r0, r0, r0
   37050:	subcs	r3, r3, r1, lsl #4
   37054:	cmp	r3, r1, lsl #3
   37058:	adc	r0, r0, r0
   3705c:	subcs	r3, r3, r1, lsl #3
   37060:	cmp	r3, r1, lsl #2
   37064:	adc	r0, r0, r0
   37068:	subcs	r3, r3, r1, lsl #2
   3706c:	cmp	r3, r1, lsl #1
   37070:	adc	r0, r0, r0
   37074:	subcs	r3, r3, r1, lsl #1
   37078:	cmp	r3, r1
   3707c:	adc	r0, r0, r0
   37080:	subcs	r3, r3, r1
   37084:	cmp	ip, #0
   37088:	rsbmi	r0, r0, #0
   3708c:	bx	lr
   37090:	teq	ip, r0
   37094:	rsbmi	r0, r0, #0
   37098:	bx	lr
   3709c:	movcc	r0, #0
   370a0:	asreq	r0, ip, #31
   370a4:	orreq	r0, r0, #1
   370a8:	bx	lr
   370ac:	clz	r2, r1
   370b0:	rsb	r2, r2, #31
   370b4:	cmp	ip, #0
   370b8:	lsr	r0, r3, r2
   370bc:	rsbmi	r0, r0, #0
   370c0:	bx	lr
   370c4:	cmp	r0, #0
   370c8:	mvngt	r0, #-2147483648	; 0x80000000
   370cc:	movlt	r0, #-2147483648	; 0x80000000
   370d0:	b	37130 <crc32@@Base+0x1cdd4>
   370d4:	cmp	r1, #0
   370d8:	beq	370c4 <crc32@@Base+0x1cd68>
   370dc:	push	{r0, r1, lr}
   370e0:	bl	36ebc <crc32@@Base+0x1cb60>
   370e4:	pop	{r1, r2, lr}
   370e8:	mul	r3, r2, r0
   370ec:	sub	r1, r1, r3
   370f0:	bx	lr
   370f4:	cmp	r3, #0
   370f8:	cmpeq	r2, #0
   370fc:	bne	37114 <crc32@@Base+0x1cdb8>
   37100:	cmp	r1, #0
   37104:	cmpeq	r0, #0
   37108:	mvnne	r1, #0
   3710c:	mvnne	r0, #0
   37110:	b	37130 <crc32@@Base+0x1cdd4>
   37114:	sub	sp, sp, #8
   37118:	push	{sp, lr}
   3711c:	bl	37140 <crc32@@Base+0x1cde4>
   37120:	ldr	lr, [sp, #4]
   37124:	add	sp, sp, #8
   37128:	pop	{r2, r3}
   3712c:	bx	lr
   37130:	push	{r1, lr}
   37134:	mov	r0, #8
   37138:	bl	125a4 <raise@plt>
   3713c:	pop	{r1, pc}
   37140:	cmp	r1, r3
   37144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37148:	cmpeq	r0, r2
   3714c:	sub	sp, sp, #12
   37150:	mov	sl, r0
   37154:	mov	fp, r1
   37158:	ldr	r8, [sp, #48]	; 0x30
   3715c:	bcc	37254 <crc32@@Base+0x1cef8>
   37160:	cmp	r3, #0
   37164:	mov	r0, r2
   37168:	mov	r1, r3
   3716c:	clzeq	r3, r0
   37170:	addeq	r2, r3, #32
   37174:	clzne	r2, r3
   37178:	cmp	fp, #0
   3717c:	clzeq	r3, sl
   37180:	clzne	r3, fp
   37184:	addeq	r3, r3, #32
   37188:	sub	r3, r2, r3
   3718c:	sub	ip, r3, #32
   37190:	lsl	r7, r1, r3
   37194:	orr	r7, r7, r0, lsl ip
   37198:	rsb	lr, r3, #32
   3719c:	orr	r7, r7, r0, lsr lr
   371a0:	lsl	r6, r0, r3
   371a4:	cmp	fp, r7
   371a8:	cmpeq	sl, r6
   371ac:	bcs	37274 <crc32@@Base+0x1cf18>
   371b0:	mov	r0, #0
   371b4:	mov	r1, #0
   371b8:	strd	r0, [sp]
   371bc:	cmp	r3, #0
   371c0:	beq	37260 <crc32@@Base+0x1cf04>
   371c4:	lsrs	r7, r7, #1
   371c8:	rrx	r6, r6
   371cc:	mov	r2, r3
   371d0:	b	371f4 <crc32@@Base+0x1ce98>
   371d4:	subs	r0, sl, r6
   371d8:	sbc	r1, fp, r7
   371dc:	adds	r4, r0, r0
   371e0:	adc	r5, r1, r1
   371e4:	adds	sl, r4, #1
   371e8:	adc	fp, r5, #0
   371ec:	subs	r2, r2, #1
   371f0:	beq	37210 <crc32@@Base+0x1ceb4>
   371f4:	cmp	fp, r7
   371f8:	cmpeq	sl, r6
   371fc:	bcs	371d4 <crc32@@Base+0x1ce78>
   37200:	adds	sl, sl, sl
   37204:	adc	fp, fp, fp
   37208:	subs	r2, r2, #1
   3720c:	bne	371f4 <crc32@@Base+0x1ce98>
   37210:	lsr	r2, sl, r3
   37214:	lsr	r9, fp, r3
   37218:	orr	r2, r2, fp, lsl lr
   3721c:	ldrd	r6, [sp]
   37220:	orr	r2, r2, fp, lsr ip
   37224:	lsl	r1, r9, r3
   37228:	adds	r6, r6, sl
   3722c:	orr	r1, r1, r2, lsl ip
   37230:	lsl	r0, r2, r3
   37234:	adc	r7, r7, fp
   37238:	orr	r1, r1, r2, lsr lr
   3723c:	subs	r6, r6, r0
   37240:	mov	sl, r2
   37244:	sbc	r7, r7, r1
   37248:	mov	fp, r9
   3724c:	strd	r6, [sp]
   37250:	b	37260 <crc32@@Base+0x1cf04>
   37254:	mov	r2, #0
   37258:	mov	r3, #0
   3725c:	strd	r2, [sp]
   37260:	cmp	r8, #0
   37264:	ldrd	r0, [sp]
   37268:	strdne	sl, [r8]
   3726c:	add	sp, sp, #12
   37270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37274:	mov	r2, #1
   37278:	subs	sl, sl, r6
   3727c:	lsl	r1, r2, ip
   37280:	sbc	fp, fp, r7
   37284:	orr	r1, r1, r2, lsr lr
   37288:	lsl	r2, r2, r3
   3728c:	str	r1, [sp, #4]
   37290:	str	r2, [sp]
   37294:	b	371bc <crc32@@Base+0x1ce60>
   37298:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   3729c:	mov	r7, r0
   372a0:	ldr	r6, [pc, #76]	; 372f4 <crc32@@Base+0x1cf98>
   372a4:	mov	r8, r1
   372a8:	ldr	r5, [pc, #72]	; 372f8 <crc32@@Base+0x1cf9c>
   372ac:	mov	r9, r2
   372b0:	add	r6, pc, r6
   372b4:	bl	120e0 <_init@@Base>
   372b8:	add	r5, pc, r5
   372bc:	rsb	r6, r5, r6
   372c0:	asrs	r6, r6, #2
   372c4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   372c8:	sub	r5, r5, #4
   372cc:	mov	r4, #0
   372d0:	add	r4, r4, #1
   372d4:	ldr	r3, [r5, #4]!
   372d8:	mov	r0, r7
   372dc:	mov	r1, r8
   372e0:	mov	r2, r9
   372e4:	blx	r3
   372e8:	cmp	r4, r6
   372ec:	bne	372d0 <crc32@@Base+0x1cf74>
   372f0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   372f4:	andeq	r9, r1, r4, lsr ip
   372f8:	andeq	r9, r1, r8, lsr #24
   372fc:	bx	lr

Disassembly of section .fini:

00037300 <_fini@@Base>:
   37300:	push	{r3, lr}
   37304:	pop	{r3, pc}
