
centos-preinstalled/utmpdump:     file format elf32-littlearm


Disassembly of section .init:

00010cc8 <.init>:
   10cc8:	push	{r3, lr}
   10ccc:	bl	1122c <ftello64@plt+0x2f8>
   10cd0:	pop	{r3, pc}

Disassembly of section .plt:

00010cd4 <read@plt-0x14>:
   10cd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cd8:	ldr	lr, [pc, #4]	; 10ce4 <read@plt-0x4>
   10cdc:	add	lr, pc, lr
   10ce0:	ldr	pc, [lr, #8]!
   10ce4:	andeq	r2, r1, ip, lsl r3

00010ce8 <read@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #73728	; 0x12000
   10cf0:	ldr	pc, [ip, #796]!	; 0x31c

00010cf4 <mktime@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #73728	; 0x12000
   10cfc:	ldr	pc, [ip, #788]!	; 0x314

00010d00 <free@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #73728	; 0x12000
   10d08:	ldr	pc, [ip, #780]!	; 0x30c

00010d0c <fgets@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #73728	; 0x12000
   10d14:	ldr	pc, [ip, #772]!	; 0x304

00010d18 <ferror@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #73728	; 0x12000
   10d20:	ldr	pc, [ip, #764]!	; 0x2fc

00010d24 <inet_pton@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #73728	; 0x12000
   10d2c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d30 <_exit@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #73728	; 0x12000
   10d38:	ldr	pc, [ip, #748]!	; 0x2ec

00010d3c <memcpy@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #73728	; 0x12000
   10d44:	ldr	pc, [ip, #740]!	; 0x2e4

00010d48 <sleep@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #73728	; 0x12000
   10d50:	ldr	pc, [ip, #732]!	; 0x2dc

00010d54 <dcgettext@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #73728	; 0x12000
   10d5c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d60 <__stack_chk_fail@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #73728	; 0x12000
   10d68:	ldr	pc, [ip, #716]!	; 0x2cc

00010d6c <strptime@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #73728	; 0x12000
   10d74:	ldr	pc, [ip, #708]!	; 0x2c4

00010d78 <textdomain@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #73728	; 0x12000
   10d80:	ldr	pc, [ip, #700]!	; 0x2bc

00010d84 <err@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #73728	; 0x12000
   10d8c:	ldr	pc, [ip, #692]!	; 0x2b4

00010d90 <__fxstat64@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #73728	; 0x12000
   10d98:	ldr	pc, [ip, #684]!	; 0x2ac

00010d9c <fwrite@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #73728	; 0x12000
   10da4:	ldr	pc, [ip, #676]!	; 0x2a4

00010da8 <fread@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #73728	; 0x12000
   10db0:	ldr	pc, [ip, #668]!	; 0x29c

00010db4 <__fpending@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #73728	; 0x12000
   10dbc:	ldr	pc, [ip, #660]!	; 0x294

00010dc0 <malloc@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #73728	; 0x12000
   10dc8:	ldr	pc, [ip, #652]!	; 0x28c

00010dcc <__libc_start_main@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #73728	; 0x12000
   10dd4:	ldr	pc, [ip, #644]!	; 0x284

00010dd8 <strftime@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #73728	; 0x12000
   10de0:	ldr	pc, [ip, #636]!	; 0x27c

00010de4 <localtime@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #73728	; 0x12000
   10dec:	ldr	pc, [ip, #628]!	; 0x274

00010df0 <__gmon_start__@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #73728	; 0x12000
   10df8:	ldr	pc, [ip, #620]!	; 0x26c

00010dfc <getopt_long@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #73728	; 0x12000
   10e04:	ldr	pc, [ip, #612]!	; 0x264

00010e08 <__ctype_b_loc@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #73728	; 0x12000
   10e10:	ldr	pc, [ip, #604]!	; 0x25c

00010e14 <exit@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #73728	; 0x12000
   10e1c:	ldr	pc, [ip, #596]!	; 0x254

00010e20 <inotify_init@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #73728	; 0x12000
   10e28:	ldr	pc, [ip, #588]!	; 0x24c

00010e2c <strchr@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #73728	; 0x12000
   10e34:	ldr	pc, [ip, #580]!	; 0x244

00010e38 <warnx@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #73728	; 0x12000
   10e40:	ldr	pc, [ip, #572]!	; 0x23c

00010e44 <inotify_add_watch@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #73728	; 0x12000
   10e4c:	ldr	pc, [ip, #564]!	; 0x234

00010e50 <__errno_location@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #73728	; 0x12000
   10e58:	ldr	pc, [ip, #556]!	; 0x22c

00010e5c <__cxa_atexit@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #73728	; 0x12000
   10e64:	ldr	pc, [ip, #548]!	; 0x224

00010e68 <memset@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #73728	; 0x12000
   10e70:	ldr	pc, [ip, #540]!	; 0x21c

00010e74 <strncpy@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #73728	; 0x12000
   10e7c:	ldr	pc, [ip, #532]!	; 0x214

00010e80 <__printf_chk@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #73728	; 0x12000
   10e88:	ldr	pc, [ip, #524]!	; 0x20c

00010e8c <fileno@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #73728	; 0x12000
   10e94:	ldr	pc, [ip, #516]!	; 0x204

00010e98 <__fprintf_chk@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #73728	; 0x12000
   10ea0:	ldr	pc, [ip, #508]!	; 0x1fc

00010ea4 <fclose@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #73728	; 0x12000
   10eac:	ldr	pc, [ip, #500]!	; 0x1f4

00010eb0 <setlocale@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #73728	; 0x12000
   10eb8:	ldr	pc, [ip, #492]!	; 0x1ec

00010ebc <errx@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #73728	; 0x12000
   10ec4:	ldr	pc, [ip, #484]!	; 0x1e4

00010ec8 <warn@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #73728	; 0x12000
   10ed0:	ldr	pc, [ip, #476]!	; 0x1dc

00010ed4 <sscanf@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #73728	; 0x12000
   10edc:	ldr	pc, [ip, #468]!	; 0x1d4

00010ee0 <fopen64@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #73728	; 0x12000
   10ee8:	ldr	pc, [ip, #460]!	; 0x1cc

00010eec <inet_ntop@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #73728	; 0x12000
   10ef4:	ldr	pc, [ip, #452]!	; 0x1c4

00010ef8 <bindtextdomain@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #73728	; 0x12000
   10f00:	ldr	pc, [ip, #444]!	; 0x1bc

00010f04 <fseek@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #73728	; 0x12000
   10f0c:	ldr	pc, [ip, #436]!	; 0x1b4

00010f10 <fputs@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #73728	; 0x12000
   10f18:	ldr	pc, [ip, #428]!	; 0x1ac

00010f1c <abort@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #73728	; 0x12000
   10f24:	ldr	pc, [ip, #420]!	; 0x1a4

00010f28 <close@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #73728	; 0x12000
   10f30:	ldr	pc, [ip, #412]!	; 0x19c

00010f34 <ftello64@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #73728	; 0x12000
   10f3c:	ldr	pc, [ip, #404]!	; 0x194

Disassembly of section .text:

00010f40 <.text>:
   10f40:	push	{r4, r5, r6, r7, r8, lr}
   10f44:	mov	r6, r1
   10f48:	sub	sp, sp, #8
   10f4c:	mov	r5, r0
   10f50:	movw	r1, #7748	; 0x1e44
   10f54:	mov	r0, #6
   10f58:	movt	r1, #1
   10f5c:	mov	r4, #0
   10f60:	bl	10eb0 <setlocale@plt>
   10f64:	movw	r0, #8320	; 0x2080
   10f68:	movw	r1, #8332	; 0x208c
   10f6c:	movt	r0, #1
   10f70:	movt	r1, #1
   10f74:	mov	r8, r4
   10f78:	bl	10ef8 <bindtextdomain@plt>
   10f7c:	movw	r0, #8320	; 0x2080
   10f80:	movt	r0, #1
   10f84:	mov	r7, r4
   10f88:	bl	10d78 <textdomain@plt>
   10f8c:	movw	r0, #7140	; 0x1be4
   10f90:	movt	r0, #1
   10f94:	bl	11d88 <ftello64@plt+0xe54>
   10f98:	str	r7, [sp]
   10f9c:	movw	r2, #8384	; 0x20c0
   10fa0:	movw	r3, #7620	; 0x1dc4
   10fa4:	movt	r2, #1
   10fa8:	movt	r3, #1
   10fac:	mov	r0, r5
   10fb0:	mov	r1, r6
   10fb4:	bl	10dfc <getopt_long@plt>
   10fb8:	cmn	r0, #1
   10fbc:	beq	110b4 <ftello64@plt+0x180>
   10fc0:	sub	r3, r0, #86	; 0x56
   10fc4:	cmp	r3, #28
   10fc8:	ldrls	pc, [pc, r3, lsl #2]
   10fcc:	b	110a4 <ftello64@plt+0x170>
   10fd0:	andeq	r1, r1, ip, asr #32
   10fd4:	andeq	r1, r1, r4, lsr #1
   10fd8:	andeq	r1, r1, r4, lsr #1
   10fdc:	andeq	r1, r1, r4, lsr #1
   10fe0:	andeq	r1, r1, r4, lsr #1
   10fe4:	andeq	r1, r1, r4, lsr #1
   10fe8:	andeq	r1, r1, r4, lsr #1
   10fec:	andeq	r1, r1, r4, lsr #1
   10ff0:	andeq	r1, r1, r4, lsr #1
   10ff4:	andeq	r1, r1, r4, lsr #1
   10ff8:	andeq	r1, r1, r4, lsr #1
   10ffc:	andeq	r1, r1, r4, lsr #1
   11000:	andeq	r1, r1, r4, lsr #1
   11004:	andeq	r1, r1, r4, lsr #1
   11008:	andeq	r1, r1, r4, lsr #1
   1100c:	andeq	r1, r1, r4, lsr #1
   11010:	andeq	r1, r1, r4, asr #32
   11014:	andeq	r1, r1, r4, lsr #1
   11018:	muleq	r1, r4, r0
   1101c:	andeq	r1, r1, r4, lsr #1
   11020:	andeq	r1, r1, r4, lsr #1
   11024:	andeq	r1, r1, r4, lsr #1
   11028:	andeq	r1, r1, r4, lsr #1
   1102c:	andeq	r1, r1, r4, lsr #1
   11030:	andeq	r1, r1, r4, lsr #1
   11034:	andeq	r1, r1, r4, lsr #1
   11038:	andeq	r1, r1, r4, lsr #1
   1103c:	andeq	r1, r1, r4, lsr #1
   11040:	andeq	r1, r1, ip, lsl #1
   11044:	mov	r4, #1
   11048:	b	10f98 <ftello64@plt+0x64>
   1104c:	mov	r2, #5
   11050:	movw	r1, #8352	; 0x20a0
   11054:	mov	r0, #0
   11058:	movt	r1, #1
   1105c:	bl	10d54 <dcgettext@plt>
   11060:	movw	r2, #12512	; 0x30e0
   11064:	movt	r2, #2
   11068:	movw	r3, #8364	; 0x20ac
   1106c:	movt	r3, #1
   11070:	ldr	r2, [r2]
   11074:	mov	r1, r0
   11078:	mov	r0, #1
   1107c:	bl	10e80 <__printf_chk@plt>
   11080:	mov	r0, #0
   11084:	add	sp, sp, #8
   11088:	pop	{r4, r5, r6, r7, r8, pc}
   1108c:	mov	r8, #1
   11090:	b	10f98 <ftello64@plt+0x64>
   11094:	movw	r3, #12544	; 0x3100
   11098:	movt	r3, #2
   1109c:	ldr	r0, [r3]
   110a0:	bl	113c4 <ftello64@plt+0x490>
   110a4:	movw	r3, #12532	; 0x30f4
   110a8:	movt	r3, #2
   110ac:	ldr	r0, [r3]
   110b0:	bl	113c4 <ftello64@plt+0x490>
   110b4:	movw	r3, #12528	; 0x30f0
   110b8:	movt	r3, #2
   110bc:	ldr	r3, [r3]
   110c0:	cmp	r5, r3
   110c4:	bgt	11194 <ftello64@plt+0x260>
   110c8:	cmp	r4, #0
   110cc:	bne	111d0 <ftello64@plt+0x29c>
   110d0:	movw	r3, #12536	; 0x30f8
   110d4:	movt	r3, #2
   110d8:	movw	r6, #8308	; 0x2074
   110dc:	movt	r6, #1
   110e0:	ldr	r5, [r3]
   110e4:	cmp	r8, #0
   110e8:	movw	r3, #12532	; 0x30f4
   110ec:	movt	r3, #2
   110f0:	beq	11150 <ftello64@plt+0x21c>
   110f4:	mov	r2, #5
   110f8:	movw	r1, #8432	; 0x20f0
   110fc:	mov	r0, #0
   11100:	movt	r1, #1
   11104:	ldr	r4, [r3]
   11108:	bl	10d54 <dcgettext@plt>
   1110c:	mov	r3, r6
   11110:	mov	r1, #1
   11114:	mov	r2, r0
   11118:	mov	r0, r4
   1111c:	bl	10e98 <__fprintf_chk@plt>
   11120:	mov	r0, r5
   11124:	bl	11a04 <ftello64@plt+0xad0>
   11128:	cmp	r5, #0
   1112c:	beq	11080 <ftello64@plt+0x14c>
   11130:	movw	r3, #12536	; 0x30f8
   11134:	movt	r3, #2
   11138:	ldr	r3, [r3]
   1113c:	cmp	r5, r3
   11140:	beq	11080 <ftello64@plt+0x14c>
   11144:	mov	r0, r5
   11148:	bl	10ea4 <fclose@plt>
   1114c:	b	11080 <ftello64@plt+0x14c>
   11150:	mov	r2, #5
   11154:	mov	r0, r8
   11158:	movw	r1, #8452	; 0x2104
   1115c:	movt	r1, #1
   11160:	ldr	r7, [r3]
   11164:	bl	10d54 <dcgettext@plt>
   11168:	mov	r1, #1
   1116c:	mov	r3, r6
   11170:	mov	r2, r0
   11174:	mov	r0, r7
   11178:	bl	10e98 <__fprintf_chk@plt>
   1117c:	mov	r0, r5
   11180:	mov	r1, r6
   11184:	mov	r2, r4
   11188:	bl	116c8 <ftello64@plt+0x794>
   1118c:	mov	r5, r0
   11190:	b	11128 <ftello64@plt+0x1f4>
   11194:	ldr	r6, [r6, r3, lsl #2]
   11198:	movw	r1, #8196	; 0x2004
   1119c:	movt	r1, #1
   111a0:	mov	r0, r6
   111a4:	bl	10ee0 <fopen64@plt>
   111a8:	subs	r5, r0, #0
   111ac:	bne	110e4 <ftello64@plt+0x1b0>
   111b0:	mov	r2, #5
   111b4:	movw	r1, #8200	; 0x2008
   111b8:	movt	r1, #1
   111bc:	bl	10d54 <dcgettext@plt>
   111c0:	mov	r2, r6
   111c4:	mov	r1, r0
   111c8:	mov	r0, #1
   111cc:	bl	10d84 <err@plt>
   111d0:	movw	r1, #8392	; 0x20c8
   111d4:	mov	r0, #0
   111d8:	movt	r1, #1
   111dc:	mov	r2, #5
   111e0:	bl	10d54 <dcgettext@plt>
   111e4:	mov	r1, r0
   111e8:	mov	r0, #1
   111ec:	bl	10ebc <errx@plt>
   111f0:	mov	fp, #0
   111f4:	mov	lr, #0
   111f8:	pop	{r1}		; (ldr r1, [sp], #4)
   111fc:	mov	r2, sp
   11200:	push	{r2}		; (str r2, [sp, #-4]!)
   11204:	push	{r0}		; (str r0, [sp, #-4]!)
   11208:	ldr	ip, [pc, #16]	; 11220 <ftello64@plt+0x2ec>
   1120c:	push	{ip}		; (str ip, [sp, #-4]!)
   11210:	ldr	r0, [pc, #12]	; 11224 <ftello64@plt+0x2f0>
   11214:	ldr	r3, [pc, #12]	; 11228 <ftello64@plt+0x2f4>
   11218:	bl	10dcc <__libc_start_main@plt>
   1121c:	bl	10f1c <abort@plt>
   11220:	andeq	r1, r1, r4, lsl #27
   11224:	andeq	r0, r1, r0, asr #30
   11228:	andeq	r1, r1, r0, lsr #26
   1122c:	ldr	r3, [pc, #20]	; 11248 <ftello64@plt+0x314>
   11230:	ldr	r2, [pc, #20]	; 1124c <ftello64@plt+0x318>
   11234:	add	r3, pc, r3
   11238:	ldr	r2, [r3, r2]
   1123c:	cmp	r2, #0
   11240:	bxeq	lr
   11244:	b	10df0 <__gmon_start__@plt>
   11248:	andeq	r1, r1, r4, asr #27
   1124c:	ldrdeq	r0, [r0], -r4
   11250:	push	{r3, lr}
   11254:	movw	r0, #12512	; 0x30e0
   11258:	ldr	r3, [pc, #36]	; 11284 <ftello64@plt+0x350>
   1125c:	movt	r0, #2
   11260:	rsb	r3, r0, r3
   11264:	cmp	r3, #6
   11268:	popls	{r3, pc}
   1126c:	movw	r3, #0
   11270:	movt	r3, #0
   11274:	cmp	r3, #0
   11278:	popeq	{r3, pc}
   1127c:	blx	r3
   11280:	pop	{r3, pc}
   11284:	andeq	r3, r2, r3, ror #1
   11288:	push	{r3, lr}
   1128c:	movw	r0, #12512	; 0x30e0
   11290:	movw	r3, #12512	; 0x30e0
   11294:	movt	r0, #2
   11298:	movt	r3, #2
   1129c:	rsb	r3, r0, r3
   112a0:	asr	r3, r3, #2
   112a4:	add	r3, r3, r3, lsr #31
   112a8:	asrs	r1, r3, #1
   112ac:	popeq	{r3, pc}
   112b0:	movw	r2, #0
   112b4:	movt	r2, #0
   112b8:	cmp	r2, #0
   112bc:	popeq	{r3, pc}
   112c0:	blx	r2
   112c4:	pop	{r3, pc}
   112c8:	push	{r4, lr}
   112cc:	movw	r4, #12548	; 0x3104
   112d0:	movt	r4, #2
   112d4:	ldrb	r3, [r4]
   112d8:	cmp	r3, #0
   112dc:	popne	{r4, pc}
   112e0:	bl	11250 <ftello64@plt+0x31c>
   112e4:	mov	r3, #1
   112e8:	strb	r3, [r4]
   112ec:	pop	{r4, pc}
   112f0:	movw	r0, #12036	; 0x2f04
   112f4:	movt	r0, #2
   112f8:	push	{r3, lr}
   112fc:	ldr	r3, [r0]
   11300:	cmp	r3, #0
   11304:	beq	1131c <ftello64@plt+0x3e8>
   11308:	movw	r3, #0
   1130c:	movt	r3, #0
   11310:	cmp	r3, #0
   11314:	beq	1131c <ftello64@plt+0x3e8>
   11318:	blx	r3
   1131c:	pop	{r3, lr}
   11320:	b	11288 <ftello64@plt+0x354>
   11324:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11328:	mov	r8, r1
   1132c:	mov	r1, #91	; 0x5b
   11330:	mov	r5, r0
   11334:	mov	r7, r2
   11338:	mov	r9, r3
   1133c:	bl	10e2c <strchr@plt>
   11340:	subs	r6, r0, r5
   11344:	bmi	113a4 <ftello64@plt+0x470>
   11348:	add	r4, r6, #1
   1134c:	mov	r1, #93	; 0x5d
   11350:	add	r4, r5, r4
   11354:	mov	r0, r4
   11358:	bl	10e2c <strchr@plt>
   1135c:	subs	r0, r0, r4
   11360:	bmi	113a4 <ftello64@plt+0x470>
   11364:	cmp	r9, #0
   11368:	mov	r5, #0
   1136c:	add	r6, r6, r0
   11370:	strb	r5, [r4, r0]
   11374:	beq	1138c <ftello64@plt+0x458>
   11378:	mov	r0, r4
   1137c:	mov	r1, #32
   11380:	bl	10e2c <strchr@plt>
   11384:	cmp	r0, #0
   11388:	strbne	r5, [r0]
   1138c:	mov	r0, r8
   11390:	mov	r1, r4
   11394:	mov	r2, r7
   11398:	bl	10e74 <strncpy@plt>
   1139c:	add	r0, r6, #2
   113a0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   113a4:	movw	r1, #7700	; 0x1e14
   113a8:	mov	r0, #0
   113ac:	movt	r1, #1
   113b0:	mov	r2, #5
   113b4:	bl	10d54 <dcgettext@plt>
   113b8:	mov	r1, r0
   113bc:	mov	r0, #1
   113c0:	bl	10ebc <errx@plt>
   113c4:	push	{r4, lr}
   113c8:	mov	r2, #5
   113cc:	mov	r4, r0
   113d0:	movw	r1, #7740	; 0x1e3c
   113d4:	mov	r0, #0
   113d8:	movt	r1, #1
   113dc:	bl	10d54 <dcgettext@plt>
   113e0:	mov	r1, r4
   113e4:	bl	10f10 <fputs@plt>
   113e8:	mov	r2, #5
   113ec:	movw	r1, #7752	; 0x1e48
   113f0:	mov	r0, #0
   113f4:	movt	r1, #1
   113f8:	bl	10d54 <dcgettext@plt>
   113fc:	movw	r3, #12512	; 0x30e0
   11400:	movt	r3, #2
   11404:	mov	r1, #1
   11408:	ldr	r3, [r3]
   1140c:	mov	r2, r0
   11410:	mov	r0, r4
   11414:	bl	10e98 <__fprintf_chk@plt>
   11418:	mov	r2, #5
   1141c:	movw	r1, #7780	; 0x1e64
   11420:	mov	r0, #0
   11424:	movt	r1, #1
   11428:	bl	10d54 <dcgettext@plt>
   1142c:	mov	r1, r4
   11430:	bl	10f10 <fputs@plt>
   11434:	mov	r2, #5
   11438:	movw	r1, #7792	; 0x1e70
   1143c:	mov	r0, #0
   11440:	movt	r1, #1
   11444:	bl	10d54 <dcgettext@plt>
   11448:	mov	r1, r4
   1144c:	bl	10f10 <fputs@plt>
   11450:	mov	r2, #5
   11454:	movw	r1, #7904	; 0x1ee0
   11458:	mov	r0, #0
   1145c:	movt	r1, #1
   11460:	bl	10d54 <dcgettext@plt>
   11464:	mov	r1, r4
   11468:	bl	10f10 <fputs@plt>
   1146c:	mov	r2, #5
   11470:	movw	r1, #7948	; 0x1f0c
   11474:	mov	r0, #0
   11478:	movt	r1, #1
   1147c:	bl	10d54 <dcgettext@plt>
   11480:	mov	r1, r4
   11484:	bl	10f10 <fputs@plt>
   11488:	mov	r2, #5
   1148c:	movw	r1, #8004	; 0x1f44
   11490:	mov	r0, #0
   11494:	movt	r1, #1
   11498:	bl	10d54 <dcgettext@plt>
   1149c:	movw	r3, #8032	; 0x1f60
   114a0:	mov	r1, #1
   114a4:	movt	r3, #1
   114a8:	mov	r2, r0
   114ac:	mov	r0, r4
   114b0:	bl	10e98 <__fprintf_chk@plt>
   114b4:	movw	r3, #12532	; 0x30f4
   114b8:	movt	r3, #2
   114bc:	ldr	r0, [r3]
   114c0:	subs	r3, r4, r0
   114c4:	rsbs	r0, r3, #0
   114c8:	adcs	r0, r0, r3
   114cc:	bl	10e14 <exit@plt>
   114d0:	push	{r3, r4, r5, r6, r7, lr}
   114d4:	mov	r6, r0
   114d8:	ldrb	r4, [r0]
   114dc:	mov	r7, r1
   114e0:	cmp	r4, #0
   114e4:	popeq	{r3, r4, r5, r6, r7, pc}
   114e8:	cmp	r1, #0
   114ec:	pople	{r3, r4, r5, r6, r7, pc}
   114f0:	bl	10e08 <__ctype_b_loc@plt>
   114f4:	mov	r3, r6
   114f8:	add	r1, r6, r7
   114fc:	mov	r5, r0
   11500:	mov	r0, #63	; 0x3f
   11504:	b	1152c <ftello64@plt+0x5f8>
   11508:	cmp	r4, #91	; 0x5b
   1150c:	beq	1154c <ftello64@plt+0x618>
   11510:	cmp	r4, #93	; 0x5d
   11514:	beq	1154c <ftello64@plt+0x618>
   11518:	ldrb	r4, [r3, #1]!
   1151c:	cmp	r4, #0
   11520:	popeq	{r3, r4, r5, r6, r7, pc}
   11524:	cmp	r3, r1
   11528:	beq	11554 <ftello64@plt+0x620>
   1152c:	sxtb	r2, r4
   11530:	ldr	ip, [r5]
   11534:	mov	r4, r2
   11538:	sxth	r2, r2
   1153c:	lsl	r2, r2, #1
   11540:	ldrh	r2, [ip, r2]
   11544:	tst	r2, #16384	; 0x4000
   11548:	bne	11508 <ftello64@plt+0x5d4>
   1154c:	strb	r0, [r3]
   11550:	b	11518 <ftello64@plt+0x5e4>
   11554:	pop	{r3, r4, r5, r6, r7, pc}
   11558:	sub	sp, sp, #16
   1155c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11560:	sub	sp, sp, #104	; 0x68
   11564:	movw	r4, #12520	; 0x30e8
   11568:	movt	r4, #2
   1156c:	ldr	lr, [sp, #488]	; 0x1e8
   11570:	ldr	ip, [r4]
   11574:	cmp	lr, #0
   11578:	add	lr, sp, #132	; 0x84
   1157c:	str	ip, [sp, #100]	; 0x64
   11580:	stmib	lr, {r0, r1, r2, r3}
   11584:	bne	115a4 <ftello64@plt+0x670>
   11588:	ldr	r3, [sp, #492]	; 0x1ec
   1158c:	cmp	r3, #0
   11590:	bne	115a4 <ftello64@plt+0x670>
   11594:	ldr	r3, [sp, #496]	; 0x1f0
   11598:	cmp	r3, #0
   1159c:	moveq	r0, #2
   115a0:	beq	115a8 <ftello64@plt+0x674>
   115a4:	mov	r0, #10
   115a8:	mov	r3, #46	; 0x2e
   115ac:	add	r1, sp, #484	; 0x1e4
   115b0:	add	r2, sp, #52	; 0x34
   115b4:	bl	10eec <inet_ntop@plt>
   115b8:	ldr	r3, [sp, #476]	; 0x1dc
   115bc:	cmp	r3, #0
   115c0:	str	r3, [sp, #48]	; 0x30
   115c4:	movweq	r5, #12552	; 0x3108
   115c8:	movteq	r5, #2
   115cc:	strbeq	r3, [r5]
   115d0:	mov	r9, r0
   115d4:	bne	11694 <ftello64@plt+0x760>
   115d8:	add	sl, sp, #176	; 0xb0
   115dc:	add	r8, sp, #180	; 0xb4
   115e0:	add	r7, sp, #144	; 0x90
   115e4:	mov	r1, #4
   115e8:	mov	r0, sl
   115ec:	add	r6, sp, #212	; 0xd4
   115f0:	bl	114d0 <ftello64@plt+0x59c>
   115f4:	mov	r0, r8
   115f8:	mov	r1, #32
   115fc:	bl	114d0 <ftello64@plt+0x59c>
   11600:	mov	r0, r7
   11604:	mov	r1, #32
   11608:	bl	114d0 <ftello64@plt+0x59c>
   1160c:	mov	r0, r6
   11610:	mov	r1, #256	; 0x100
   11614:	bl	114d0 <ftello64@plt+0x59c>
   11618:	mov	ip, #32
   1161c:	ldrsh	r2, [sp, #136]	; 0x88
   11620:	mov	r1, #8
   11624:	ldr	r3, [sp, #140]	; 0x8c
   11628:	mov	lr, #256	; 0x100
   1162c:	str	r7, [sp, #24]
   11630:	mov	r0, #1
   11634:	str	r6, [sp, #36]	; 0x24
   11638:	mov	r7, #12
   1163c:	str	r1, [sp, #4]
   11640:	mov	r6, #20
   11644:	str	sl, [sp]
   11648:	movw	r1, #8064	; 0x1f80
   1164c:	str	r8, [sp, #12]
   11650:	movt	r1, #1
   11654:	str	r9, [sp, #40]	; 0x28
   11658:	str	r5, [sp, #44]	; 0x2c
   1165c:	str	ip, [sp, #8]
   11660:	str	ip, [sp, #20]
   11664:	str	r7, [sp, #16]
   11668:	str	r6, [sp, #28]
   1166c:	str	lr, [sp, #32]
   11670:	bl	10e80 <__printf_chk@plt>
   11674:	ldr	r2, [sp, #100]	; 0x64
   11678:	ldr	r3, [r4]
   1167c:	cmp	r2, r3
   11680:	bne	116c4 <ftello64@plt+0x790>
   11684:	add	sp, sp, #104	; 0x68
   11688:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1168c:	add	sp, sp, #16
   11690:	bx	lr
   11694:	add	r0, sp, #48	; 0x30
   11698:	movw	r5, #12552	; 0x3108
   1169c:	bl	10de4 <localtime@plt>
   116a0:	movw	r2, #8044	; 0x1f6c
   116a4:	mov	r1, #29
   116a8:	movt	r2, #1
   116ac:	mov	r3, r0
   116b0:	mov	r0, r5
   116b4:	movt	r0, #2
   116b8:	movt	r5, #2
   116bc:	bl	10dd8 <strftime@plt>
   116c0:	b	115d8 <ftello64@plt+0x6a4>
   116c4:	bl	10d60 <__stack_chk_fail@plt>
   116c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   116cc:	sub	sp, sp, #1328	; 0x530
   116d0:	sub	sp, sp, #12
   116d4:	movw	r3, #12520	; 0x30e8
   116d8:	movt	r3, #2
   116dc:	subs	r6, r2, #0
   116e0:	str	r3, [sp, #380]	; 0x17c
   116e4:	mov	r9, r1
   116e8:	ldr	r3, [r3]
   116ec:	mov	r5, r0
   116f0:	str	r3, [sp, #1332]	; 0x534
   116f4:	beq	11708 <ftello64@plt+0x7d4>
   116f8:	mov	r1, #61696	; 0xf100
   116fc:	mov	r2, #2
   11700:	movt	r1, #65535	; 0xffff
   11704:	bl	10f04 <fseek@plt>
   11708:	add	r4, sp, #500	; 0x1f4
   1170c:	b	11728 <ftello64@plt+0x7f4>
   11710:	add	r1, sp, #516	; 0x204
   11714:	mov	r2, #368	; 0x170
   11718:	mov	r0, sp
   1171c:	bl	10d3c <memcpy@plt>
   11720:	ldm	r4, {r0, r1, r2, r3}
   11724:	bl	11558 <ftello64@plt+0x624>
   11728:	mov	r0, r4
   1172c:	mov	r1, #384	; 0x180
   11730:	mov	r2, #1
   11734:	mov	r3, r5
   11738:	bl	10da8 <fread@plt>
   1173c:	cmp	r0, #1
   11740:	beq	11710 <ftello64@plt+0x7dc>
   11744:	cmp	r6, #0
   11748:	moveq	r0, r5
   1174c:	bne	11770 <ftello64@plt+0x83c>
   11750:	ldr	r1, [sp, #380]	; 0x17c
   11754:	ldr	r2, [sp, #1332]	; 0x534
   11758:	ldr	r3, [r1]
   1175c:	cmp	r2, r3
   11760:	bne	119c8 <ftello64@plt+0xa94>
   11764:	add	sp, sp, #1328	; 0x530
   11768:	add	sp, sp, #12
   1176c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11770:	bl	10e20 <inotify_init@plt>
   11774:	cmn	r0, #1
   11778:	str	r0, [sp, #376]	; 0x178
   1177c:	beq	11954 <ftello64@plt+0xa20>
   11780:	mov	r0, r5
   11784:	bl	10f34 <ftello64@plt>
   11788:	mov	sl, r0
   1178c:	mov	r0, r5
   11790:	mov	fp, r1
   11794:	bl	10ea4 <fclose@plt>
   11798:	ldr	r0, [sp, #376]	; 0x178
   1179c:	mov	r1, r9
   117a0:	movw	r2, #11266	; 0x2c02
   117a4:	bl	10e44 <inotify_add_watch@plt>
   117a8:	cmn	r0, #1
   117ac:	str	r0, [sp, #384]	; 0x180
   117b0:	beq	119f0 <ftello64@plt+0xabc>
   117b4:	cmp	r0, #0
   117b8:	blt	1192c <ftello64@plt+0x9f8>
   117bc:	bl	10e50 <__errno_location@plt>
   117c0:	movw	r8, #64640	; 0xfc80
   117c4:	movt	r8, #65535	; 0xffff
   117c8:	str	r0, [sp, #388]	; 0x184
   117cc:	ldr	r1, [sp, #388]	; 0x184
   117d0:	mov	r2, #0
   117d4:	ldr	r0, [sp, #376]	; 0x178
   117d8:	str	r2, [r1]
   117dc:	add	r1, sp, #1264	; 0x4f0
   117e0:	add	r1, r1, #4
   117e4:	mov	r2, #64	; 0x40
   117e8:	bl	10ce8 <read@plt>
   117ec:	cmp	r0, #0
   117f0:	str	r0, [sp, #372]	; 0x174
   117f4:	blt	1198c <ftello64@plt+0xa58>
   117f8:	beq	117cc <ftello64@plt+0x898>
   117fc:	ldr	r3, [sp, #1272]	; 0x4f8
   11800:	tst	r3, #2
   11804:	beq	11924 <ftello64@plt+0x9f0>
   11808:	add	r7, sp, #1264	; 0x4f0
   1180c:	add	r4, sp, #884	; 0x374
   11810:	add	r7, r7, #4
   11814:	mov	r6, #0
   11818:	movw	r1, #8196	; 0x2004
   1181c:	mov	r0, r9
   11820:	movt	r1, #1
   11824:	bl	10ee0 <fopen64@plt>
   11828:	subs	r5, r0, #0
   1182c:	beq	119e0 <ftello64@plt+0xaac>
   11830:	bl	10e8c <fileno@plt>
   11834:	add	r2, sp, #392	; 0x188
   11838:	mov	r1, r0
   1183c:	mov	r0, #3
   11840:	bl	10d90 <__fxstat64@plt>
   11844:	cmn	r0, #1
   11848:	beq	119cc <ftello64@plt+0xa98>
   1184c:	add	r1, sp, #1328	; 0x530
   11850:	add	r1, r1, #8
   11854:	ldrd	r2, [r1, r8]
   11858:	cmp	r3, fp
   1185c:	cmpeq	r2, sl
   11860:	beq	118ec <ftello64@plt+0x9b8>
   11864:	mov	r0, r5
   11868:	mov	r1, sl
   1186c:	mov	r2, #0
   11870:	bl	10f04 <fseek@plt>
   11874:	cmn	r0, #1
   11878:	bne	11898 <ftello64@plt+0x964>
   1187c:	b	118b4 <ftello64@plt+0x980>
   11880:	add	r1, sp, #900	; 0x384
   11884:	mov	r2, #368	; 0x170
   11888:	mov	r0, sp
   1188c:	bl	10d3c <memcpy@plt>
   11890:	ldm	r4, {r0, r1, r2, r3}
   11894:	bl	11558 <ftello64@plt+0x624>
   11898:	mov	r0, r4
   1189c:	mov	r1, #384	; 0x180
   118a0:	mov	r2, #1
   118a4:	mov	r3, r5
   118a8:	bl	10da8 <fread@plt>
   118ac:	cmp	r0, #1
   118b0:	beq	11880 <ftello64@plt+0x94c>
   118b4:	mov	r0, r5
   118b8:	bl	10f34 <ftello64@plt>
   118bc:	mov	r2, r0
   118c0:	mov	r3, r1
   118c4:	mvn	r0, #0
   118c8:	mvn	r1, #0
   118cc:	cmp	r3, r1
   118d0:	cmpeq	r2, r0
   118d4:	beq	1197c <ftello64@plt+0xa48>
   118d8:	cmp	r3, fp
   118dc:	cmpeq	r2, sl
   118e0:	beq	1197c <ftello64@plt+0xa48>
   118e4:	mov	sl, r2
   118e8:	mov	fp, r3
   118ec:	mov	r0, r5
   118f0:	bl	10ea4 <fclose@plt>
   118f4:	ldr	r3, [r7, #12]
   118f8:	ldr	r2, [sp, #372]	; 0x174
   118fc:	add	r3, r3, #16
   11900:	add	r6, r3, r6
   11904:	cmp	r2, r6
   11908:	ble	117cc <ftello64@plt+0x898>
   1190c:	add	r1, sp, #1264	; 0x4f0
   11910:	add	r1, r1, #4
   11914:	add	r7, r1, r6
   11918:	ldr	r3, [r7, #4]
   1191c:	tst	r3, #2
   11920:	bne	11818 <ftello64@plt+0x8e4>
   11924:	ldr	r0, [sp, #384]	; 0x180
   11928:	bl	10f28 <close@plt>
   1192c:	ldr	r0, [sp, #376]	; 0x178
   11930:	bl	10f28 <close@plt>
   11934:	mov	r0, #0
   11938:	b	11750 <ftello64@plt+0x81c>
   1193c:	add	r1, sp, #516	; 0x204
   11940:	mov	r2, #368	; 0x170
   11944:	mov	r0, sp
   11948:	bl	10d3c <memcpy@plt>
   1194c:	ldm	r4, {r0, r1, r2, r3}
   11950:	bl	11558 <ftello64@plt+0x624>
   11954:	mov	r0, r4
   11958:	mov	r1, #384	; 0x180
   1195c:	mov	r2, #1
   11960:	mov	r3, r5
   11964:	bl	10da8 <fread@plt>
   11968:	cmp	r0, #1
   1196c:	beq	1193c <ftello64@plt+0xa08>
   11970:	mov	r0, #1
   11974:	bl	10d48 <sleep@plt>
   11978:	b	11954 <ftello64@plt+0xa20>
   1197c:	add	r1, sp, #1328	; 0x530
   11980:	add	r1, r1, #8
   11984:	ldrd	r2, [r1, r8]
   11988:	b	118e4 <ftello64@plt+0x9b0>
   1198c:	ldr	r3, [sp, #388]	; 0x184
   11990:	ldr	r0, [r3]
   11994:	cmp	r0, #4
   11998:	cmpne	r0, #11
   1199c:	movne	r0, #0
   119a0:	moveq	r0, #1
   119a4:	beq	117cc <ftello64@plt+0x898>
   119a8:	movw	r1, #8164	; 0x1fe4
   119ac:	movt	r1, #1
   119b0:	mov	r2, #5
   119b4:	bl	10d54 <dcgettext@plt>
   119b8:	mov	r2, r9
   119bc:	mov	r1, r0
   119c0:	mov	r0, #1
   119c4:	bl	10d84 <err@plt>
   119c8:	bl	10d60 <__stack_chk_fail@plt>
   119cc:	movw	r1, #8216	; 0x2018
   119d0:	mov	r0, #0
   119d4:	movt	r1, #1
   119d8:	mov	r2, #5
   119dc:	b	119b4 <ftello64@plt+0xa80>
   119e0:	movw	r1, #8200	; 0x2008
   119e4:	mov	r2, #5
   119e8:	movt	r1, #1
   119ec:	b	119b4 <ftello64@plt+0xa80>
   119f0:	movw	r1, #8132	; 0x1fc4
   119f4:	mov	r0, #0
   119f8:	movt	r1, #1
   119fc:	mov	r2, #5
   11a00:	b	119b4 <ftello64@plt+0xa80>
   11a04:	push	{r4, r5, r6, r7, r8, r9, lr}
   11a08:	movw	r9, #12520	; 0x30e8
   11a0c:	movt	r9, #2
   11a10:	sub	sp, sp, #524	; 0x20c
   11a14:	mov	r8, r0
   11a18:	mov	r0, #1024	; 0x400
   11a1c:	ldr	r3, [r9]
   11a20:	str	r3, [sp, #516]	; 0x204
   11a24:	bl	10dc0 <malloc@plt>
   11a28:	subs	r5, r0, #0
   11a2c:	movne	r4, #0
   11a30:	movwne	r7, #12544	; 0x3100
   11a34:	strbne	r4, [sp, #464]	; 0x1d0
   11a38:	movtne	r7, #2
   11a3c:	bne	11b94 <ftello64@plt+0xc60>
   11a40:	b	11bcc <ftello64@plt+0xc98>
   11a44:	mov	r1, #0
   11a48:	mov	r2, #384	; 0x180
   11a4c:	add	r6, r5, #19
   11a50:	add	r0, sp, #52	; 0x34
   11a54:	bl	10e68 <memset@plt>
   11a58:	add	r3, sp, #92	; 0x5c
   11a5c:	add	r2, sp, #52	; 0x34
   11a60:	str	r3, [sp]
   11a64:	movw	r1, #8260	; 0x2044
   11a68:	add	r3, sp, #56	; 0x38
   11a6c:	movt	r1, #1
   11a70:	mov	r0, r5
   11a74:	bl	10ed4 <sscanf@plt>
   11a78:	mov	r0, r6
   11a7c:	add	r1, sp, #96	; 0x60
   11a80:	mov	r2, #32
   11a84:	mov	r3, #1
   11a88:	bl	11324 <ftello64@plt+0x3f0>
   11a8c:	add	r1, sp, #60	; 0x3c
   11a90:	mov	r2, #32
   11a94:	mov	r3, #1
   11a98:	add	r6, r6, r0
   11a9c:	mov	r0, r6
   11aa0:	bl	11324 <ftello64@plt+0x3f0>
   11aa4:	add	r1, sp, #128	; 0x80
   11aa8:	mov	r2, #256	; 0x100
   11aac:	mov	r3, #1
   11ab0:	add	r6, r6, r0
   11ab4:	mov	r0, r6
   11ab8:	bl	11324 <ftello64@plt+0x3f0>
   11abc:	add	r1, sp, #468	; 0x1d4
   11ac0:	mov	r2, #46	; 0x2e
   11ac4:	mov	r3, #1
   11ac8:	add	r6, r6, r0
   11acc:	mov	r0, r6
   11ad0:	bl	11324 <ftello64@plt+0x3f0>
   11ad4:	mov	r2, #28
   11ad8:	mov	r3, #0
   11adc:	add	r1, sp, #436	; 0x1b4
   11ae0:	add	r0, r6, r0
   11ae4:	bl	11324 <ftello64@plt+0x3f0>
   11ae8:	mov	r1, #46	; 0x2e
   11aec:	add	r0, sp, #468	; 0x1d4
   11af0:	bl	10e2c <strchr@plt>
   11af4:	add	r2, sp, #400	; 0x190
   11af8:	add	r1, sp, #468	; 0x1d4
   11afc:	cmp	r0, #0
   11b00:	movne	r0, #2
   11b04:	moveq	r0, #10
   11b08:	bl	10d24 <inet_pton@plt>
   11b0c:	ldrb	r2, [sp, #436]	; 0x1b4
   11b10:	str	r4, [sp, #8]
   11b14:	str	r4, [sp, #12]
   11b18:	sxtb	r0, r2
   11b1c:	str	r4, [sp, #16]
   11b20:	bics	ip, r0, #32
   11b24:	str	r4, [sp, #20]
   11b28:	str	r4, [sp, #24]
   11b2c:	str	r4, [sp, #28]
   11b30:	str	r4, [sp, #32]
   11b34:	str	r4, [sp, #36]	; 0x24
   11b38:	str	r4, [sp, #40]	; 0x28
   11b3c:	str	r4, [sp, #44]	; 0x2c
   11b40:	str	r4, [sp, #48]	; 0x30
   11b44:	beq	11b7c <ftello64@plt+0xc48>
   11b48:	add	r2, sp, #8
   11b4c:	add	r0, sp, #436	; 0x1b4
   11b50:	movw	r1, #8280	; 0x2058
   11b54:	movt	r1, #1
   11b58:	bl	10d6c <strptime@plt>
   11b5c:	ldrb	r2, [sp, #462]	; 0x1ce
   11b60:	add	r0, sp, #8
   11b64:	sxtb	r3, r2
   11b68:	cmp	r3, #68	; 0x44
   11b6c:	moveq	r3, #1
   11b70:	streq	r3, [sp, #40]	; 0x28
   11b74:	bl	10cf4 <mktime@plt>
   11b78:	mov	ip, r0
   11b7c:	add	r0, sp, #52	; 0x34
   11b80:	mov	r1, #384	; 0x180
   11b84:	mov	r2, #1
   11b88:	ldr	r3, [r7]
   11b8c:	str	ip, [sp, #392]	; 0x188
   11b90:	bl	10d9c <fwrite@plt>
   11b94:	mov	r0, r5
   11b98:	movw	r1, #1023	; 0x3ff
   11b9c:	mov	r2, r8
   11ba0:	bl	10d0c <fgets@plt>
   11ba4:	cmp	r0, #0
   11ba8:	bne	11a44 <ftello64@plt+0xb10>
   11bac:	ldr	r2, [sp, #516]	; 0x204
   11bb0:	ldr	r3, [r9]
   11bb4:	cmp	r2, r3
   11bb8:	bne	11be0 <ftello64@plt+0xcac>
   11bbc:	mov	r0, r5
   11bc0:	add	sp, sp, #524	; 0x20c
   11bc4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   11bc8:	b	10d00 <free@plt>
   11bcc:	movw	r1, #8232	; 0x2028
   11bd0:	mov	r0, #1
   11bd4:	movt	r1, #1
   11bd8:	mov	r2, #1024	; 0x400
   11bdc:	bl	10d84 <err@plt>
   11be0:	bl	10d60 <__stack_chk_fail@plt>
   11be4:	movw	r3, #12544	; 0x3100
   11be8:	movt	r3, #2
   11bec:	push	{r4, r5, r6, lr}
   11bf0:	ldr	r4, [r3]
   11bf4:	mov	r0, r4
   11bf8:	bl	10db4 <__fpending@plt>
   11bfc:	mov	r6, r0
   11c00:	mov	r0, r4
   11c04:	bl	10d18 <ferror@plt>
   11c08:	mov	r5, r0
   11c0c:	mov	r0, r4
   11c10:	bl	10ea4 <fclose@plt>
   11c14:	adds	r4, r0, #0
   11c18:	movne	r4, #1
   11c1c:	cmp	r5, #0
   11c20:	bne	11c98 <ftello64@plt+0xd64>
   11c24:	cmp	r4, #0
   11c28:	beq	11c44 <ftello64@plt+0xd10>
   11c2c:	cmp	r6, #0
   11c30:	beq	11ce8 <ftello64@plt+0xdb4>
   11c34:	bl	10e50 <__errno_location@plt>
   11c38:	ldr	r3, [r0]
   11c3c:	cmp	r3, #32
   11c40:	bne	11cfc <ftello64@plt+0xdc8>
   11c44:	movw	r3, #12532	; 0x30f4
   11c48:	movt	r3, #2
   11c4c:	ldr	r4, [r3]
   11c50:	mov	r0, r4
   11c54:	bl	10db4 <__fpending@plt>
   11c58:	mov	r6, r0
   11c5c:	mov	r0, r4
   11c60:	bl	10d18 <ferror@plt>
   11c64:	mov	r5, r0
   11c68:	mov	r0, r4
   11c6c:	bl	10ea4 <fclose@plt>
   11c70:	adds	r4, r0, #0
   11c74:	movne	r4, #1
   11c78:	cmp	r5, #0
   11c7c:	beq	11cc4 <ftello64@plt+0xd90>
   11c80:	cmp	r4, #0
   11c84:	bne	11c90 <ftello64@plt+0xd5c>
   11c88:	bl	10e50 <__errno_location@plt>
   11c8c:	str	r4, [r0]
   11c90:	mov	r0, #1
   11c94:	bl	10d30 <_exit@plt>
   11c98:	cmp	r4, #0
   11c9c:	bne	11c34 <ftello64@plt+0xd00>
   11ca0:	bl	10e50 <__errno_location@plt>
   11ca4:	str	r4, [r0]
   11ca8:	mov	r2, #5
   11cac:	movw	r1, #8296	; 0x2068
   11cb0:	mov	r0, #0
   11cb4:	movt	r1, #1
   11cb8:	bl	10d54 <dcgettext@plt>
   11cbc:	bl	10e38 <warnx@plt>
   11cc0:	b	11c90 <ftello64@plt+0xd5c>
   11cc4:	cmp	r4, #0
   11cc8:	popeq	{r4, r5, r6, pc}
   11ccc:	cmp	r6, #0
   11cd0:	bne	11c90 <ftello64@plt+0xd5c>
   11cd4:	bl	10e50 <__errno_location@plt>
   11cd8:	ldr	r3, [r0]
   11cdc:	cmp	r3, #9
   11ce0:	bne	11c90 <ftello64@plt+0xd5c>
   11ce4:	pop	{r4, r5, r6, pc}
   11ce8:	bl	10e50 <__errno_location@plt>
   11cec:	ldr	r3, [r0]
   11cf0:	cmp	r3, #9
   11cf4:	bne	11c3c <ftello64@plt+0xd08>
   11cf8:	b	11c44 <ftello64@plt+0xd10>
   11cfc:	cmp	r3, #0
   11d00:	beq	11ca8 <ftello64@plt+0xd74>
   11d04:	mov	r2, #5
   11d08:	movw	r1, #8296	; 0x2068
   11d0c:	mov	r0, #0
   11d10:	movt	r1, #1
   11d14:	bl	10d54 <dcgettext@plt>
   11d18:	bl	10ec8 <warn@plt>
   11d1c:	b	11c90 <ftello64@plt+0xd5c>
   11d20:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11d24:	mov	r7, r0
   11d28:	ldr	r6, [pc, #76]	; 11d7c <ftello64@plt+0xe48>
   11d2c:	mov	r8, r1
   11d30:	ldr	r5, [pc, #72]	; 11d80 <ftello64@plt+0xe4c>
   11d34:	mov	r9, r2
   11d38:	add	r6, pc, r6
   11d3c:	bl	10cc8 <read@plt-0x20>
   11d40:	add	r5, pc, r5
   11d44:	rsb	r6, r5, r6
   11d48:	asrs	r6, r6, #2
   11d4c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11d50:	sub	r5, r5, #4
   11d54:	mov	r4, #0
   11d58:	add	r4, r4, #1
   11d5c:	ldr	r3, [r5, #4]!
   11d60:	mov	r0, r7
   11d64:	mov	r1, r8
   11d68:	mov	r2, r9
   11d6c:	blx	r3
   11d70:	cmp	r4, r6
   11d74:	bne	11d58 <ftello64@plt+0xe24>
   11d78:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11d7c:	andeq	r1, r1, r0, asr #3
   11d80:			; <UNDEFINED> instruction: 0x000111b4
   11d84:	bx	lr
   11d88:	ldr	r3, [pc, #28]	; 11dac <ftello64@plt+0xe78>
   11d8c:	mov	r1, #0
   11d90:	ldr	r2, [pc, #24]	; 11db0 <ftello64@plt+0xe7c>
   11d94:	add	r3, pc, r3
   11d98:	ldr	r3, [r3, r2]
   11d9c:	cmp	r3, #0
   11da0:	ldrne	r2, [r3]
   11da4:	moveq	r2, r3
   11da8:	b	10e5c <__cxa_atexit@plt>
   11dac:	andeq	r1, r1, r4, ror #4
   11db0:	ldrdeq	r0, [r0], -r8

Disassembly of section .fini:

00011db4 <.fini>:
   11db4:	push	{r3, lr}
   11db8:	pop	{r3, pc}
