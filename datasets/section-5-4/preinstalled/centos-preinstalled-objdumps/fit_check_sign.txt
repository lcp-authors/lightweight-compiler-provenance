
centos-preinstalled/fit_check_sign:     file format elf32-littlearm


Disassembly of section .init:

00012048 <_init@@Base>:
   12048:	push	{r3, lr}
   1204c:	bl	129e8 <__printf_chk@plt+0x278>
   12050:	pop	{r3, pc}

Disassembly of section .plt:

00012054 <ERR_error_string@plt-0x14>:
   12054:	push	{lr}		; (str lr, [sp, #-4]!)
   12058:	ldr	lr, [pc, #4]	; 12064 <_init@@Base+0x1c>
   1205c:	add	lr, pc, lr
   12060:	ldr	pc, [lr, #8]!
   12064:	muleq	r3, ip, pc	; <UNPREDICTABLE>

00012068 <ERR_error_string@plt>:
   12068:	add	ip, pc, #0, 12
   1206c:	add	ip, ip, #60, 20	; 0x3c000
   12070:	ldr	pc, [ip, #3996]!	; 0xf9c

00012074 <fscanf@plt>:
   12074:	add	ip, pc, #0, 12
   12078:	add	ip, ip, #60, 20	; 0x3c000
   1207c:	ldr	pc, [ip, #3988]!	; 0xf94

00012080 <EVP_DigestInit@plt>:
   12080:	add	ip, pc, #0, 12
   12084:	add	ip, ip, #60, 20	; 0x3c000
   12088:	ldr	pc, [ip, #3980]!	; 0xf8c

0001208c <ftruncate@plt>:
   1208c:	add	ip, pc, #0, 12
   12090:	add	ip, ip, #60, 20	; 0x3c000
   12094:	ldr	pc, [ip, #3972]!	; 0xf84

00012098 <ENGINE_load_private_key@plt>:
   12098:	add	ip, pc, #0, 12
   1209c:	add	ip, ip, #60, 20	; 0x3c000
   120a0:	ldr	pc, [ip, #3964]!	; 0xf7c

000120a4 <popen@plt>:
   120a4:	add	ip, pc, #0, 12
   120a8:	add	ip, ip, #60, 20	; 0x3c000
   120ac:	ldr	pc, [ip, #3956]!	; 0xf74

000120b0 <EVP_PKEY_free@plt>:
   120b0:	add	ip, pc, #0, 12
   120b4:	add	ip, ip, #60, 20	; 0x3c000
   120b8:	ldr	pc, [ip, #3948]!	; 0xf6c

000120bc <PEM_read_X509@plt>:
   120bc:	add	ip, pc, #0, 12
   120c0:	add	ip, ip, #60, 20	; 0x3c000
   120c4:	ldr	pc, [ip, #3940]!	; 0xf64

000120c8 <EVP_CipherInit@plt>:
   120c8:	add	ip, pc, #0, 12
   120cc:	add	ip, ip, #60, 20	; 0x3c000
   120d0:	ldr	pc, [ip, #3932]!	; 0xf5c

000120d4 <OPENSSL_add_all_algorithms_noconf@plt>:
   120d4:	add	ip, pc, #0, 12
   120d8:	add	ip, ip, #60, 20	; 0x3c000
   120dc:	ldr	pc, [ip, #3924]!	; 0xf54

000120e0 <strcasecmp@plt>:
   120e0:	add	ip, pc, #0, 12
   120e4:	add	ip, ip, #60, 20	; 0x3c000
   120e8:	ldr	pc, [ip, #3916]!	; 0xf4c

000120ec <strnlen@plt>:
   120ec:	add	ip, pc, #0, 12
   120f0:	add	ip, ip, #60, 20	; 0x3c000
   120f4:	ldr	pc, [ip, #3908]!	; 0xf44

000120f8 <EVP_CipherUpdate@plt>:
   120f8:	add	ip, pc, #0, 12
   120fc:	add	ip, ip, #60, 20	; 0x3c000
   12100:	ldr	pc, [ip, #3900]!	; 0xf3c

00012104 <ENGINE_finish@plt>:
   12104:	add	ip, pc, #0, 12
   12108:	add	ip, ip, #60, 20	; 0x3c000
   1210c:	ldr	pc, [ip, #3892]!	; 0xf34

00012110 <ENGINE_load_public_key@plt>:
   12110:	add	ip, pc, #0, 12
   12114:	add	ip, ip, #60, 20	; 0x3c000
   12118:	ldr	pc, [ip, #3884]!	; 0xf2c

0001211c <strtol@plt>:
   1211c:	add	ip, pc, #0, 12
   12120:	add	ip, ip, #60, 20	; 0x3c000
   12124:	ldr	pc, [ip, #3876]!	; 0xf24

00012128 <free@plt>:
   12128:	add	ip, pc, #0, 12
   1212c:	add	ip, ip, #60, 20	; 0x3c000
   12130:	ldr	pc, [ip, #3868]!	; 0xf1c

00012134 <__getdelim@plt>:
   12134:	add	ip, pc, #0, 12
   12138:	add	ip, ip, #60, 20	; 0x3c000
   1213c:	ldr	pc, [ip, #3860]!	; 0xf14

00012140 <SSL_load_error_strings@plt>:
   12140:	add	ip, pc, #0, 12
   12144:	add	ip, ip, #60, 20	; 0x3c000
   12148:	ldr	pc, [ip, #3852]!	; 0xf0c

0001214c <EVP_aes_128_cbc@plt>:
   1214c:	add	ip, pc, #0, 12
   12150:	add	ip, ip, #60, 20	; 0x3c000
   12154:	ldr	pc, [ip, #3844]!	; 0xf04

00012158 <fseek@plt>:
   12158:	add	ip, pc, #0, 12
   1215c:	add	ip, ip, #60, 20	; 0x3c000
   12160:	ldr	pc, [ip, #3836]!	; 0xefc

00012164 <BN_dup@plt>:
   12164:	add	ip, pc, #0, 12
   12168:	add	ip, ip, #60, 20	; 0x3c000
   1216c:	ldr	pc, [ip, #3828]!	; 0xef4

00012170 <ENGINE_get_id@plt>:
   12170:	add	ip, pc, #0, 12
   12174:	add	ip, ip, #60, 20	; 0x3c000
   12178:	ldr	pc, [ip, #3820]!	; 0xeec

0001217c <strncmp@plt>:
   1217c:	add	ip, pc, #0, 12
   12180:	add	ip, ip, #60, 20	; 0x3c000
   12184:	ldr	pc, [ip, #3812]!	; 0xee4

00012188 <__open_2@plt>:
   12188:	add	ip, pc, #0, 12
   1218c:	add	ip, ip, #60, 20	; 0x3c000
   12190:	ldr	pc, [ip, #3804]!	; 0xedc

00012194 <EVP_PKEY_CTX_ctrl@plt>:
   12194:	add	ip, pc, #0, 12
   12198:	add	ip, ip, #60, 20	; 0x3c000
   1219c:	ldr	pc, [ip, #3796]!	; 0xed4

000121a0 <ENGINE_free@plt>:
   121a0:	add	ip, pc, #0, 12
   121a4:	add	ip, ip, #60, 20	; 0x3c000
   121a8:	ldr	pc, [ip, #3788]!	; 0xecc

000121ac <fgetc@plt>:
   121ac:	add	ip, pc, #0, 12
   121b0:	add	ip, ip, #60, 20	; 0x3c000
   121b4:	ldr	pc, [ip, #3780]!	; 0xec4

000121b8 <EVP_PKEY_CTX_new@plt>:
   121b8:	add	ip, pc, #0, 12
   121bc:	add	ip, ip, #60, 20	; 0x3c000
   121c0:	ldr	pc, [ip, #3772]!	; 0xebc

000121c4 <EVP_PKEY_size@plt>:
   121c4:	add	ip, pc, #0, 12
   121c8:	add	ip, ip, #60, 20	; 0x3c000
   121cc:	ldr	pc, [ip, #3764]!	; 0xeb4

000121d0 <ERR_remove_thread_state@plt>:
   121d0:	add	ip, pc, #0, 12
   121d4:	add	ip, ip, #60, 20	; 0x3c000
   121d8:	ldr	pc, [ip, #3756]!	; 0xeac

000121dc <OpenSSL_add_all_digests@plt>:
   121dc:	add	ip, pc, #0, 12
   121e0:	add	ip, ip, #60, 20	; 0x3c000
   121e4:	ldr	pc, [ip, #3748]!	; 0xea4

000121e8 <PEM_read_RSAPrivateKey@plt>:
   121e8:	add	ip, pc, #0, 12
   121ec:	add	ip, ip, #60, 20	; 0x3c000
   121f0:	ldr	pc, [ip, #3740]!	; 0xe9c

000121f4 <exit@plt>:
   121f4:	add	ip, pc, #0, 12
   121f8:	add	ip, ip, #60, 20	; 0x3c000
   121fc:	ldr	pc, [ip, #3732]!	; 0xe94

00012200 <strerror@plt>:
   12200:	add	ip, pc, #0, 12
   12204:	add	ip, ip, #60, 20	; 0x3c000
   12208:	ldr	pc, [ip, #3724]!	; 0xe8c

0001220c <EVP_sha1@plt>:
   1220c:	add	ip, pc, #0, 12
   12210:	add	ip, ip, #60, 20	; 0x3c000
   12214:	ldr	pc, [ip, #3716]!	; 0xe84

00012218 <EVP_DigestSignFinal@plt>:
   12218:	add	ip, pc, #0, 12
   1221c:	add	ip, ip, #60, 20	; 0x3c000
   12220:	ldr	pc, [ip, #3708]!	; 0xe7c

00012224 <__strtok_r@plt>:
   12224:	add	ip, pc, #0, 12
   12228:	add	ip, ip, #60, 20	; 0x3c000
   1222c:	ldr	pc, [ip, #3700]!	; 0xe74

00012230 <__vsnprintf_chk@plt>:
   12230:	add	ip, pc, #0, 12
   12234:	add	ip, ip, #60, 20	; 0x3c000
   12238:	ldr	pc, [ip, #3692]!	; 0xe6c

0001223c <ENGINE_init@plt>:
   1223c:	add	ip, pc, #0, 12
   12240:	add	ip, ip, #60, 20	; 0x3c000
   12244:	ldr	pc, [ip, #3684]!	; 0xe64

00012248 <BN_free@plt>:
   12248:	add	ip, pc, #0, 12
   1224c:	add	ip, ip, #60, 20	; 0x3c000
   12250:	ldr	pc, [ip, #3676]!	; 0xe5c

00012254 <ENGINE_cleanup@plt>:
   12254:	add	ip, pc, #0, 12
   12258:	add	ip, ip, #60, 20	; 0x3c000
   1225c:	ldr	pc, [ip, #3668]!	; 0xe54

00012260 <feof@plt>:
   12260:	add	ip, pc, #0, 12
   12264:	add	ip, ip, #60, 20	; 0x3c000
   12268:	ldr	pc, [ip, #3660]!	; 0xe4c

0001226c <puts@plt>:
   1226c:	add	ip, pc, #0, 12
   12270:	add	ip, ip, #60, 20	; 0x3c000
   12274:	ldr	pc, [ip, #3652]!	; 0xe44

00012278 <strtok@plt>:
   12278:	add	ip, pc, #0, 12
   1227c:	add	ip, ip, #60, 20	; 0x3c000
   12280:	ldr	pc, [ip, #3644]!	; 0xe3c

00012284 <perror@plt>:
   12284:	add	ip, pc, #0, 12
   12288:	add	ip, ip, #60, 20	; 0x3c000
   1228c:	ldr	pc, [ip, #3636]!	; 0xe34

00012290 <strtoll@plt>:
   12290:	add	ip, pc, #0, 12
   12294:	add	ip, ip, #60, 20	; 0x3c000
   12298:	ldr	pc, [ip, #3628]!	; 0xe2c

0001229c <EVP_PKEY_get1_RSA@plt>:
   1229c:	add	ip, pc, #0, 12
   122a0:	add	ip, ip, #60, 20	; 0x3c000
   122a4:	ldr	pc, [ip, #3620]!	; 0xe24

000122a8 <EVP_sha256@plt>:
   122a8:	add	ip, pc, #0, 12
   122ac:	add	ip, ip, #60, 20	; 0x3c000
   122b0:	ldr	pc, [ip, #3612]!	; 0xe1c

000122b4 <__fprintf_chk@plt>:
   122b4:	add	ip, pc, #0, 12
   122b8:	add	ip, ip, #60, 20	; 0x3c000
   122bc:	ldr	pc, [ip, #3604]!	; 0xe14

000122c0 <CRYPTO_malloc@plt>:
   122c0:	add	ip, pc, #0, 12
   122c4:	add	ip, ip, #60, 20	; 0x3c000
   122c8:	ldr	pc, [ip, #3596]!	; 0xe0c

000122cc <strtoul@plt>:
   122cc:	add	ip, pc, #0, 12
   122d0:	add	ip, ip, #60, 20	; 0x3c000
   122d4:	ldr	pc, [ip, #3588]!	; 0xe04

000122d8 <putchar@plt>:
   122d8:	add	ip, pc, #0, 12
   122dc:	add	ip, ip, #60, 20	; 0x3c000
   122e0:	ldr	pc, [ip, #3580]!	; 0xdfc

000122e4 <memset@plt>:
   122e4:	add	ip, pc, #0, 12
   122e8:	add	ip, ip, #60, 20	; 0x3c000
   122ec:	ldr	pc, [ip, #3572]!	; 0xdf4

000122f0 <EVP_MD_CTX_create@plt>:
   122f0:	add	ip, pc, #0, 12
   122f4:	add	ip, ip, #60, 20	; 0x3c000
   122f8:	ldr	pc, [ip, #3564]!	; 0xdec

000122fc <snprintf@plt>:
   122fc:	add	ip, pc, #0, 12
   12300:	add	ip, ip, #60, 20	; 0x3c000
   12304:	ldr	pc, [ip, #3556]!	; 0xde4

00012308 <__strdup@plt>:
   12308:	add	ip, pc, #0, 12
   1230c:	add	ip, ip, #60, 20	; 0x3c000
   12310:	ldr	pc, [ip, #3548]!	; 0xddc

00012314 <close@plt>:
   12314:	add	ip, pc, #0, 12
   12318:	add	ip, ip, #60, 20	; 0x3c000
   1231c:	ldr	pc, [ip, #3540]!	; 0xdd4

00012320 <gmtime@plt>:
   12320:	add	ip, pc, #0, 12
   12324:	add	ip, ip, #60, 20	; 0x3c000
   12328:	ldr	pc, [ip, #3532]!	; 0xdcc

0001232c <fopen@plt>:
   1232c:	add	ip, pc, #0, 12
   12330:	add	ip, ip, #60, 20	; 0x3c000
   12334:	ldr	pc, [ip, #3524]!	; 0xdc4

00012338 <ENGINE_set_default_RSA@plt>:
   12338:	add	ip, pc, #0, 12
   1233c:	add	ip, ip, #60, 20	; 0x3c000
   12340:	ldr	pc, [ip, #3516]!	; 0xdbc

00012344 <read@plt>:
   12344:	add	ip, pc, #0, 12
   12348:	add	ip, ip, #60, 20	; 0x3c000
   1234c:	ldr	pc, [ip, #3508]!	; 0xdb4

00012350 <BN_sub@plt>:
   12350:	add	ip, pc, #0, 12
   12354:	add	ip, ip, #60, 20	; 0x3c000
   12358:	ldr	pc, [ip, #3500]!	; 0xdac

0001235c <abort@plt>:
   1235c:	add	ip, pc, #0, 12
   12360:	add	ip, ip, #60, 20	; 0x3c000
   12364:	ldr	pc, [ip, #3492]!	; 0xda4

00012368 <ENGINE_by_id@plt>:
   12368:	add	ip, pc, #0, 12
   1236c:	add	ip, ip, #60, 20	; 0x3c000
   12370:	ldr	pc, [ip, #3484]!	; 0xd9c

00012374 <BN_div@plt>:
   12374:	add	ip, pc, #0, 12
   12378:	add	ip, ip, #60, 20	; 0x3c000
   1237c:	ldr	pc, [ip, #3476]!	; 0xd94

00012380 <memmove@plt>:
   12380:	add	ip, pc, #0, 12
   12384:	add	ip, ip, #60, 20	; 0x3c000
   12388:	ldr	pc, [ip, #3468]!	; 0xd8c

0001238c <ctime@plt>:
   1238c:	add	ip, pc, #0, 12
   12390:	add	ip, ip, #60, 20	; 0x3c000
   12394:	ldr	pc, [ip, #3460]!	; 0xd84

00012398 <BN_CTX_new@plt>:
   12398:	add	ip, pc, #0, 12
   1239c:	add	ip, ip, #60, 20	; 0x3c000
   123a0:	ldr	pc, [ip, #3452]!	; 0xd7c

000123a4 <unlink@plt>:
   123a4:	add	ip, pc, #0, 12
   123a8:	add	ip, ip, #60, 20	; 0x3c000
   123ac:	ldr	pc, [ip, #3444]!	; 0xd74

000123b0 <CRYPTO_cleanup_all_ex_data@plt>:
   123b0:	add	ip, pc, #0, 12
   123b4:	add	ip, ip, #60, 20	; 0x3c000
   123b8:	ldr	pc, [ip, #3436]!	; 0xd6c

000123bc <gmtime_r@plt>:
   123bc:	add	ip, pc, #0, 12
   123c0:	add	ip, ip, #60, 20	; 0x3c000
   123c4:	ldr	pc, [ip, #3428]!	; 0xd64

000123c8 <system@plt>:
   123c8:	add	ip, pc, #0, 12
   123cc:	add	ip, ip, #60, 20	; 0x3c000
   123d0:	ldr	pc, [ip, #3420]!	; 0xd5c

000123d4 <realloc@plt>:
   123d4:	add	ip, pc, #0, 12
   123d8:	add	ip, ip, #60, 20	; 0x3c000
   123dc:	ldr	pc, [ip, #3412]!	; 0xd54

000123e0 <strcpy@plt>:
   123e0:	add	ip, pc, #0, 12
   123e4:	add	ip, ip, #60, 20	; 0x3c000
   123e8:	ldr	pc, [ip, #3404]!	; 0xd4c

000123ec <mmap@plt>:
   123ec:	add	ip, pc, #0, 12
   123f0:	add	ip, ip, #60, 20	; 0x3c000
   123f4:	ldr	pc, [ip, #3396]!	; 0xd44

000123f8 <EVP_CIPHER_CTX_cleanup@plt>:
   123f8:	add	ip, pc, #0, 12
   123fc:	add	ip, ip, #60, 20	; 0x3c000
   12400:	ldr	pc, [ip, #3388]!	; 0xd3c

00012404 <__strncat_chk@plt>:
   12404:	add	ip, pc, #0, 12
   12408:	add	ip, ip, #60, 20	; 0x3c000
   1240c:	ldr	pc, [ip, #3380]!	; 0xd34

00012410 <getopt@plt>:
   12410:	add	ip, pc, #0, 12
   12414:	add	ip, ip, #60, 20	; 0x3c000
   12418:	ldr	pc, [ip, #3372]!	; 0xd2c

0001241c <BN_mod_inverse@plt>:
   1241c:	add	ip, pc, #0, 12
   12420:	add	ip, ip, #60, 20	; 0x3c000
   12424:	ldr	pc, [ip, #3364]!	; 0xd24

00012428 <BN_exp@plt>:
   12428:	add	ip, pc, #0, 12
   1242c:	add	ip, ip, #60, 20	; 0x3c000
   12430:	ldr	pc, [ip, #3356]!	; 0xd1c

00012434 <open@plt>:
   12434:	add	ip, pc, #0, 12
   12438:	add	ip, ip, #60, 20	; 0x3c000
   1243c:	ldr	pc, [ip, #3348]!	; 0xd14

00012440 <RSA_free@plt>:
   12440:	add	ip, pc, #0, 12
   12444:	add	ip, ip, #60, 20	; 0x3c000
   12448:	ldr	pc, [ip, #3340]!	; 0xd0c

0001244c <rewind@plt>:
   1244c:	add	ip, pc, #0, 12
   12450:	add	ip, ip, #60, 20	; 0x3c000
   12454:	ldr	pc, [ip, #3332]!	; 0xd04

00012458 <ERR_free_strings@plt>:
   12458:	add	ip, pc, #0, 12
   1245c:	add	ip, ip, #60, 20	; 0x3c000
   12460:	ldr	pc, [ip, #3324]!	; 0xcfc

00012464 <fread@plt>:
   12464:	add	ip, pc, #0, 12
   12468:	add	ip, ip, #60, 20	; 0x3c000
   1246c:	ldr	pc, [ip, #3316]!	; 0xcf4

00012470 <EVP_PKEY_new@plt>:
   12470:	add	ip, pc, #0, 12
   12474:	add	ip, ip, #60, 20	; 0x3c000
   12478:	ldr	pc, [ip, #3308]!	; 0xcec

0001247c <EVP_MD_CTX_destroy@plt>:
   1247c:	add	ip, pc, #0, 12
   12480:	add	ip, ip, #60, 20	; 0x3c000
   12484:	ldr	pc, [ip, #3300]!	; 0xce4

00012488 <fileno@plt>:
   12488:	add	ip, pc, #0, 12
   1248c:	add	ip, ip, #60, 20	; 0x3c000
   12490:	ldr	pc, [ip, #3292]!	; 0xcdc

00012494 <__stack_chk_fail@plt>:
   12494:	add	ip, pc, #0, 12
   12498:	add	ip, ip, #60, 20	; 0x3c000
   1249c:	ldr	pc, [ip, #3284]!	; 0xcd4

000124a0 <SSL_library_init@plt>:
   124a0:	add	ip, pc, #0, 12
   124a4:	add	ip, ip, #60, 20	; 0x3c000
   124a8:	ldr	pc, [ip, #3276]!	; 0xccc

000124ac <BN_set_word@plt>:
   124ac:	add	ip, pc, #0, 12
   124b0:	add	ip, ip, #60, 20	; 0x3c000
   124b4:	ldr	pc, [ip, #3268]!	; 0xcc4

000124b8 <CRYPTO_free@plt>:
   124b8:	add	ip, pc, #0, 12
   124bc:	add	ip, ip, #60, 20	; 0x3c000
   124c0:	ldr	pc, [ip, #3260]!	; 0xcbc

000124c4 <EVP_MD_CTX_cleanup@plt>:
   124c4:	add	ip, pc, #0, 12
   124c8:	add	ip, ip, #60, 20	; 0x3c000
   124cc:	ldr	pc, [ip, #3252]!	; 0xcb4

000124d0 <ERR_get_error@plt>:
   124d0:	add	ip, pc, #0, 12
   124d4:	add	ip, ip, #60, 20	; 0x3c000
   124d8:	ldr	pc, [ip, #3244]!	; 0xcac

000124dc <pclose@plt>:
   124dc:	add	ip, pc, #0, 12
   124e0:	add	ip, ip, #60, 20	; 0x3c000
   124e4:	ldr	pc, [ip, #3236]!	; 0xca4

000124e8 <BN_get_word@plt>:
   124e8:	add	ip, pc, #0, 12
   124ec:	add	ip, ip, #60, 20	; 0x3c000
   124f0:	ldr	pc, [ip, #3228]!	; 0xc9c

000124f4 <lseek@plt>:
   124f4:	add	ip, pc, #0, 12
   124f8:	add	ip, ip, #60, 20	; 0x3c000
   124fc:	ldr	pc, [ip, #3220]!	; 0xc94

00012500 <raise@plt>:
   12500:	add	ip, pc, #0, 12
   12504:	add	ip, ip, #60, 20	; 0x3c000
   12508:	ldr	pc, [ip, #3212]!	; 0xc8c

0001250c <X509_free@plt>:
   1250c:	add	ip, pc, #0, 12
   12510:	add	ip, ip, #60, 20	; 0x3c000
   12514:	ldr	pc, [ip, #3204]!	; 0xc84

00012518 <calloc@plt>:
   12518:	add	ip, pc, #0, 12
   1251c:	add	ip, ip, #60, 20	; 0x3c000
   12520:	ldr	pc, [ip, #3196]!	; 0xc7c

00012524 <ftell@plt>:
   12524:	add	ip, pc, #0, 12
   12528:	add	ip, ip, #60, 20	; 0x3c000
   1252c:	ldr	pc, [ip, #3188]!	; 0xc74

00012530 <__vfprintf_chk@plt>:
   12530:	add	ip, pc, #0, 12
   12534:	add	ip, ip, #60, 20	; 0x3c000
   12538:	ldr	pc, [ip, #3180]!	; 0xc6c

0001253c <EVP_DigestFinal@plt>:
   1253c:	add	ip, pc, #0, 12
   12540:	add	ip, ip, #60, 20	; 0x3c000
   12544:	ldr	pc, [ip, #3172]!	; 0xc64

00012548 <fgets@plt>:
   12548:	add	ip, pc, #0, 12
   1254c:	add	ip, ip, #60, 20	; 0x3c000
   12550:	ldr	pc, [ip, #3164]!	; 0xc5c

00012554 <__fxstat@plt>:
   12554:	add	ip, pc, #0, 12
   12558:	add	ip, ip, #60, 20	; 0x3c000
   1255c:	ldr	pc, [ip, #3156]!	; 0xc54

00012560 <EVP_PKEY_set1_RSA@plt>:
   12560:	add	ip, pc, #0, 12
   12564:	add	ip, ip, #60, 20	; 0x3c000
   12568:	ldr	pc, [ip, #3148]!	; 0xc4c

0001256c <fputc@plt>:
   1256c:	add	ip, pc, #0, 12
   12570:	add	ip, ip, #60, 20	; 0x3c000
   12574:	ldr	pc, [ip, #3140]!	; 0xc44

00012578 <fwrite@plt>:
   12578:	add	ip, pc, #0, 12
   1257c:	add	ip, ip, #60, 20	; 0x3c000
   12580:	ldr	pc, [ip, #3132]!	; 0xc3c

00012584 <BN_num_bits@plt>:
   12584:	add	ip, pc, #0, 12
   12588:	add	ip, ip, #60, 20	; 0x3c000
   1258c:	ldr	pc, [ip, #3124]!	; 0xc34

00012590 <EVP_CIPHER_CTX_new@plt>:
   12590:	add	ip, pc, #0, 12
   12594:	add	ip, ip, #60, 20	; 0x3c000
   12598:	ldr	pc, [ip, #3116]!	; 0xc2c

0001259c <memcpy@plt>:
   1259c:	add	ip, pc, #0, 12
   125a0:	add	ip, ip, #60, 20	; 0x3c000
   125a4:	ldr	pc, [ip, #3108]!	; 0xc24

000125a8 <malloc@plt>:
   125a8:	add	ip, pc, #0, 12
   125ac:	add	ip, ip, #60, 20	; 0x3c000
   125b0:	ldr	pc, [ip, #3100]!	; 0xc1c

000125b4 <EVP_CIPHER_CTX_set_padding@plt>:
   125b4:	add	ip, pc, #0, 12
   125b8:	add	ip, ip, #60, 20	; 0x3c000
   125bc:	ldr	pc, [ip, #3092]!	; 0xc14

000125c0 <strlen@plt>:
   125c0:	add	ip, pc, #0, 12
   125c4:	add	ip, ip, #60, 20	; 0x3c000
   125c8:	ldr	pc, [ip, #3084]!	; 0xc0c

000125cc <__snprintf_chk@plt>:
   125cc:	add	ip, pc, #0, 12
   125d0:	add	ip, ip, #60, 20	; 0x3c000
   125d4:	ldr	pc, [ip, #3076]!	; 0xc04

000125d8 <getcwd@plt>:
   125d8:	add	ip, pc, #0, 12
   125dc:	add	ip, ip, #60, 20	; 0x3c000
   125e0:	ldr	pc, [ip, #3068]!	; 0xbfc

000125e4 <munmap@plt>:
   125e4:	add	ip, pc, #0, 12
   125e8:	add	ip, ip, #60, 20	; 0x3c000
   125ec:	ldr	pc, [ip, #3060]!	; 0xbf4

000125f0 <__memset_chk@plt>:
   125f0:	add	ip, pc, #0, 12
   125f4:	add	ip, ip, #60, 20	; 0x3c000
   125f8:	ldr	pc, [ip, #3052]!	; 0xbec

000125fc <fclose@plt>:
   125fc:	add	ip, pc, #0, 12
   12600:	add	ip, ip, #60, 20	; 0x3c000
   12604:	ldr	pc, [ip, #3044]!	; 0xbe4

00012608 <write@plt>:
   12608:	add	ip, pc, #0, 12
   1260c:	add	ip, ip, #60, 20	; 0x3c000
   12610:	ldr	pc, [ip, #3036]!	; 0xbdc

00012614 <EVP_DigestSignInit@plt>:
   12614:	add	ip, pc, #0, 12
   12618:	add	ip, ip, #60, 20	; 0x3c000
   1261c:	ldr	pc, [ip, #3028]!	; 0xbd4

00012620 <__xstat@plt>:
   12620:	add	ip, pc, #0, 12
   12624:	add	ip, ip, #60, 20	; 0x3c000
   12628:	ldr	pc, [ip, #3020]!	; 0xbcc

0001262c <BN_mul@plt>:
   1262c:	add	ip, pc, #0, 12
   12630:	add	ip, ip, #60, 20	; 0x3c000
   12634:	ldr	pc, [ip, #3012]!	; 0xbc4

00012638 <ENGINE_load_builtin_engines@plt>:
   12638:	add	ip, pc, #0, 12
   1263c:	add	ip, ip, #60, 20	; 0x3c000
   12640:	ldr	pc, [ip, #3004]!	; 0xbbc

00012644 <BN_rshift@plt>:
   12644:	add	ip, pc, #0, 12
   12648:	add	ip, ip, #60, 20	; 0x3c000
   1264c:	ldr	pc, [ip, #2996]!	; 0xbb4

00012650 <EVP_DigestUpdate@plt>:
   12650:	add	ip, pc, #0, 12
   12654:	add	ip, ip, #60, 20	; 0x3c000
   12658:	ldr	pc, [ip, #2988]!	; 0xbac

0001265c <strcmp@plt>:
   1265c:	add	ip, pc, #0, 12
   12660:	add	ip, ip, #60, 20	; 0x3c000
   12664:	ldr	pc, [ip, #2980]!	; 0xba4

00012668 <BN_mask_bits@plt>:
   12668:	add	ip, pc, #0, 12
   1266c:	add	ip, ip, #60, 20	; 0x3c000
   12670:	ldr	pc, [ip, #2972]!	; 0xb9c

00012674 <time@plt>:
   12674:	add	ip, pc, #0, 12
   12678:	add	ip, ip, #60, 20	; 0x3c000
   1267c:	ldr	pc, [ip, #2964]!	; 0xb94

00012680 <EVP_MD_CTX_init@plt>:
   12680:	add	ip, pc, #0, 12
   12684:	add	ip, ip, #60, 20	; 0x3c000
   12688:	ldr	pc, [ip, #2956]!	; 0xb8c

0001268c <__errno_location@plt>:
   1268c:	add	ip, pc, #0, 12
   12690:	add	ip, ip, #60, 20	; 0x3c000
   12694:	ldr	pc, [ip, #2948]!	; 0xb84

00012698 <memchr@plt>:
   12698:	add	ip, pc, #0, 12
   1269c:	add	ip, ip, #60, 20	; 0x3c000
   126a0:	ldr	pc, [ip, #2940]!	; 0xb7c

000126a4 <sscanf@plt>:
   126a4:	add	ip, pc, #0, 12
   126a8:	add	ip, ip, #60, 20	; 0x3c000
   126ac:	ldr	pc, [ip, #2932]!	; 0xb74

000126b0 <X509_get_pubkey@plt>:
   126b0:	add	ip, pc, #0, 12
   126b4:	add	ip, ip, #60, 20	; 0x3c000
   126b8:	ldr	pc, [ip, #2924]!	; 0xb6c

000126bc <strncpy@plt>:
   126bc:	add	ip, pc, #0, 12
   126c0:	add	ip, ip, #60, 20	; 0x3c000
   126c4:	ldr	pc, [ip, #2916]!	; 0xb64

000126c8 <memcmp@plt>:
   126c8:	add	ip, pc, #0, 12
   126cc:	add	ip, ip, #60, 20	; 0x3c000
   126d0:	ldr	pc, [ip, #2908]!	; 0xb5c

000126d4 <OpenSSL_add_all_ciphers@plt>:
   126d4:	add	ip, pc, #0, 12
   126d8:	add	ip, ip, #60, 20	; 0x3c000
   126dc:	ldr	pc, [ip, #2900]!	; 0xb54

000126e0 <__sprintf_chk@plt>:
   126e0:	add	ip, pc, #0, 12
   126e4:	add	ip, ip, #60, 20	; 0x3c000
   126e8:	ldr	pc, [ip, #2892]!	; 0xb4c

000126ec <strrchr@plt>:
   126ec:	add	ip, pc, #0, 12
   126f0:	add	ip, ip, #60, 20	; 0x3c000
   126f4:	ldr	pc, [ip, #2884]!	; 0xb44

000126f8 <BN_copy@plt>:
   126f8:	add	ip, pc, #0, 12
   126fc:	add	ip, ip, #60, 20	; 0x3c000
   12700:	ldr	pc, [ip, #2876]!	; 0xb3c

00012704 <mktime@plt>:
   12704:	add	ip, pc, #0, 12
   12708:	add	ip, ip, #60, 20	; 0x3c000
   1270c:	ldr	pc, [ip, #2868]!	; 0xb34

00012710 <fputs@plt>:
   12710:	add	ip, pc, #0, 12
   12714:	add	ip, ip, #60, 20	; 0x3c000
   12718:	ldr	pc, [ip, #2860]!	; 0xb2c

0001271c <getenv@plt>:
   1271c:	add	ip, pc, #0, 12
   12720:	add	ip, ip, #60, 20	; 0x3c000
   12724:	ldr	pc, [ip, #2852]!	; 0xb24

00012728 <__libc_start_main@plt>:
   12728:	add	ip, pc, #0, 12
   1272c:	add	ip, ip, #60, 20	; 0x3c000
   12730:	ldr	pc, [ip, #2844]!	; 0xb1c

00012734 <EVP_cleanup@plt>:
   12734:	add	ip, pc, #0, 12
   12738:	add	ip, ip, #60, 20	; 0x3c000
   1273c:	ldr	pc, [ip, #2836]!	; 0xb14

00012740 <__gmon_start__@plt>:
   12740:	add	ip, pc, #0, 12
   12744:	add	ip, ip, #60, 20	; 0x3c000
   12748:	ldr	pc, [ip, #2828]!	; 0xb0c

0001274c <rename@plt>:
   1274c:	add	ip, pc, #0, 12
   12750:	add	ip, ip, #60, 20	; 0x3c000
   12754:	ldr	pc, [ip, #2820]!	; 0xb04

00012758 <BN_new@plt>:
   12758:	add	ip, pc, #0, 12
   1275c:	add	ip, ip, #60, 20	; 0x3c000
   12760:	ldr	pc, [ip, #2812]!	; 0xafc

00012764 <strchr@plt>:
   12764:	add	ip, pc, #0, 12
   12768:	add	ip, ip, #60, 20	; 0x3c000
   1276c:	ldr	pc, [ip, #2804]!	; 0xaf4

00012770 <__printf_chk@plt>:
   12770:	add	ip, pc, #0, 12
   12774:	add	ip, ip, #60, 20	; 0x3c000
   12778:	ldr	pc, [ip, #2796]!	; 0xaec

Disassembly of section .text:

00012780 <crc32@@Base-0x6fc8>:
   12780:	movw	r1, #65044	; 0xfe14
   12784:	movt	r1, #4
   12788:	mov	r3, r0
   1278c:	movw	r2, #36988	; 0x907c
   12790:	ldr	r0, [r1]
   12794:	movt	r2, #3
   12798:	push	{r4, lr}
   1279c:	mov	r1, #1
   127a0:	bl	122b4 <__fprintf_chk@plt>
   127a4:	mov	r0, #1
   127a8:	bl	121f4 <exit@plt>
   127ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127b0:	movw	sl, #61168	; 0xeef0
   127b4:	movt	sl, #4
   127b8:	sub	sp, sp, #464	; 0x1d0
   127bc:	mov	r5, r1
   127c0:	mov	r7, r0
   127c4:	ldr	r3, [sl]
   127c8:	add	r0, sp, #204	; 0xcc
   127cc:	ldr	r1, [r1]
   127d0:	mov	r2, #255	; 0xff
   127d4:	movw	r4, #55908	; 0xda64
   127d8:	movw	r6, #65040	; 0xfe10
   127dc:	str	r3, [sp, #460]	; 0x1cc
   127e0:	movt	r4, #3
   127e4:	bl	126bc <strncpy@plt>
   127e8:	movt	r6, #4
   127ec:	mov	r3, #0
   127f0:	strb	r3, [sp, #459]	; 0x1cb
   127f4:	mov	r8, r3
   127f8:	mov	r9, r3
   127fc:	mov	r2, r4
   12800:	mov	r1, r5
   12804:	mov	r0, r7
   12808:	bl	12410 <getopt@plt>
   1280c:	cmn	r0, #1
   12810:	beq	12834 <__printf_chk@plt+0xc4>
   12814:	cmp	r0, #102	; 0x66
   12818:	beq	1282c <__printf_chk@plt+0xbc>
   1281c:	cmp	r0, #107	; 0x6b
   12820:	bne	128c0 <__printf_chk@plt+0x150>
   12824:	ldr	r8, [r6]
   12828:	b	127fc <__printf_chk@plt+0x8c>
   1282c:	ldr	r9, [r6]
   12830:	b	127fc <__printf_chk@plt+0x8c>
   12834:	cmp	r9, #0
   12838:	beq	1295c <__printf_chk@plt+0x1ec>
   1283c:	cmp	r8, #0
   12840:	beq	12934 <__printf_chk@plt+0x1c4>
   12844:	mov	r4, #0
   12848:	add	r0, sp, #24
   1284c:	mov	r1, r9
   12850:	str	r0, [sp]
   12854:	str	r4, [sp, #4]
   12858:	mov	r2, r4
   1285c:	mov	r5, #1
   12860:	add	r3, sp, #16
   12864:	str	r5, [sp, #8]
   12868:	add	r0, sp, #204	; 0xcc
   1286c:	bl	138f4 <__printf_chk@plt+0x1184>
   12870:	subs	r6, r0, #0
   12874:	blt	128a4 <__printf_chk@plt+0x134>
   12878:	mov	r2, r4
   1287c:	str	r4, [sp, #4]
   12880:	add	r3, sp, #112	; 0x70
   12884:	str	r5, [sp, #8]
   12888:	str	r3, [sp]
   1288c:	mov	r1, r8
   12890:	add	r0, sp, #204	; 0xcc
   12894:	add	r3, sp, #20
   12898:	bl	138f4 <__printf_chk@plt+0x1184>
   1289c:	subs	r4, r0, #0
   128a0:	bge	128cc <__printf_chk@plt+0x15c>
   128a4:	ldr	r2, [sp, #460]	; 0x1cc
   128a8:	mov	r0, #1
   128ac:	ldr	r3, [sl]
   128b0:	cmp	r2, r3
   128b4:	bne	128c8 <__printf_chk@plt+0x158>
   128b8:	add	sp, sp, #464	; 0x1d0
   128bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128c0:	add	r0, sp, #204	; 0xcc
   128c4:	bl	35ca8 <crc32@@Base+0x1c560>
   128c8:	bl	12494 <__stack_chk_fail@plt>
   128cc:	ldr	r0, [sp, #20]
   128d0:	bl	18834 <__printf_chk@plt+0x60c4>
   128d4:	ldrd	r0, [sp, #16]
   128d8:	bl	161d4 <__printf_chk@plt+0x3a64>
   128dc:	subs	r7, r0, #0
   128e0:	bne	12984 <__printf_chk@plt+0x214>
   128e4:	movw	r3, #65044	; 0xfe14
   128e8:	movt	r3, #4
   128ec:	movw	r0, #55964	; 0xda9c
   128f0:	mov	r1, r5
   128f4:	ldr	r3, [r3]
   128f8:	movt	r0, #3
   128fc:	mov	r2, #19
   12900:	bl	12578 <fwrite@plt>
   12904:	ldr	r1, [sp, #68]	; 0x44
   12908:	ldr	r0, [sp, #16]
   1290c:	bl	125e4 <munmap@plt>
   12910:	ldr	r1, [sp, #156]	; 0x9c
   12914:	ldr	r0, [sp, #20]
   12918:	bl	125e4 <munmap@plt>
   1291c:	mov	r0, r6
   12920:	bl	12314 <close@plt>
   12924:	mov	r0, r4
   12928:	bl	12314 <close@plt>
   1292c:	mov	r0, r7
   12930:	bl	121f4 <exit@plt>
   12934:	movw	r1, #65044	; 0xfe14
   12938:	movt	r1, #4
   1293c:	movw	r2, #55940	; 0xda84
   12940:	ldr	r3, [r5]
   12944:	ldr	r0, [r1]
   12948:	movt	r2, #3
   1294c:	mov	r1, #1
   12950:	bl	122b4 <__fprintf_chk@plt>
   12954:	ldr	r0, [r5]
   12958:	bl	35ca8 <crc32@@Base+0x1c560>
   1295c:	movw	r1, #65044	; 0xfe14
   12960:	movt	r1, #4
   12964:	movw	r2, #55916	; 0xda6c
   12968:	ldr	r3, [r5]
   1296c:	ldr	r0, [r1]
   12970:	movt	r2, #3
   12974:	mov	r1, #1
   12978:	bl	122b4 <__fprintf_chk@plt>
   1297c:	ldr	r0, [r5]
   12980:	bl	35ca8 <crc32@@Base+0x1c560>
   12984:	movw	r1, #65044	; 0xfe14
   12988:	movt	r1, #4
   1298c:	movw	r2, #55984	; 0xdab0
   12990:	mov	r3, r5
   12994:	ldr	r0, [r1]
   12998:	movt	r2, #3
   1299c:	mov	r1, r5
   129a0:	mov	r7, r5
   129a4:	bl	122b4 <__fprintf_chk@plt>
   129a8:	b	12904 <__printf_chk@plt+0x194>
   129ac:	mov	fp, #0
   129b0:	mov	lr, #0
   129b4:	pop	{r1}		; (ldr r1, [sp], #4)
   129b8:	mov	r2, sp
   129bc:	push	{r2}		; (str r2, [sp, #-4]!)
   129c0:	push	{r0}		; (str r0, [sp, #-4]!)
   129c4:	ldr	ip, [pc, #16]	; 129dc <__printf_chk@plt+0x26c>
   129c8:	push	{ip}		; (str ip, [sp, #-4]!)
   129cc:	ldr	r0, [pc, #12]	; 129e0 <__printf_chk@plt+0x270>
   129d0:	ldr	r3, [pc, #12]	; 129e4 <__printf_chk@plt+0x274>
   129d4:	bl	12728 <__libc_start_main@plt>
   129d8:	bl	1235c <abort@plt>
   129dc:	andeq	r6, r3, ip, lsl r1
   129e0:	andeq	r2, r1, ip, lsr #15
   129e4:	strheq	r6, [r3], -r8
   129e8:	ldr	r3, [pc, #20]	; 12a04 <__printf_chk@plt+0x294>
   129ec:	ldr	r2, [pc, #20]	; 12a08 <__printf_chk@plt+0x298>
   129f0:	add	r3, pc, r3
   129f4:	ldr	r2, [r3, r2]
   129f8:	cmp	r2, #0
   129fc:	bxeq	lr
   12a00:	b	12740 <__gmon_start__@plt>
   12a04:	andeq	ip, r3, r8, lsl #12
   12a08:	andeq	r0, r0, r8, ror #4
   12a0c:	movw	r0, #64940	; 0xfdac
   12a10:	movt	r0, #4
   12a14:	movw	r3, #64940	; 0xfdac
   12a18:	movt	r3, #4
   12a1c:	cmp	r3, r0
   12a20:	bxeq	lr
   12a24:	movw	r3, #0
   12a28:	movt	r3, #0
   12a2c:	cmp	r3, #0
   12a30:	bxeq	lr
   12a34:	bx	r3
   12a38:	movw	r0, #64940	; 0xfdac
   12a3c:	movt	r0, #4
   12a40:	movw	r1, #64940	; 0xfdac
   12a44:	movt	r1, #4
   12a48:	sub	r1, r1, r0
   12a4c:	asr	r1, r1, #2
   12a50:	add	r1, r1, r1, lsr #31
   12a54:	asrs	r1, r1, #1
   12a58:	bxeq	lr
   12a5c:	movw	r3, #0
   12a60:	movt	r3, #0
   12a64:	cmp	r3, #0
   12a68:	bxeq	lr
   12a6c:	bx	r3
   12a70:	push	{r4, lr}
   12a74:	movw	r4, #65052	; 0xfe1c
   12a78:	movt	r4, #4
   12a7c:	ldrb	r3, [r4]
   12a80:	cmp	r3, #0
   12a84:	popne	{r4, pc}
   12a88:	bl	12a0c <__printf_chk@plt+0x29c>
   12a8c:	mov	r3, #1
   12a90:	strb	r3, [r4]
   12a94:	pop	{r4, pc}
   12a98:	b	12a38 <__printf_chk@plt+0x2c8>
   12a9c:	subs	r0, r0, #13
   12aa0:	movne	r0, #1
   12aa4:	bx	lr
   12aa8:	ldr	r2, [r0]
   12aac:	movw	r3, #18772	; 0x4954
   12ab0:	movt	r3, #16720	; 0x4150
   12ab4:	cmp	r2, r3
   12ab8:	movweq	r3, #65056	; 0xfe20
   12abc:	movteq	r3, #4
   12ac0:	moveq	r0, #0
   12ac4:	mvnne	r0, #10
   12ac8:	streq	r1, [r3]
   12acc:	bx	lr
   12ad0:	bx	lr
   12ad4:	cmp	r0, #0
   12ad8:	beq	12b5c <__printf_chk@plt+0x3ec>
   12adc:	ldr	r3, [r0, #64]	; 0x40
   12ae0:	ldrb	r3, [r3]
   12ae4:	cmp	r3, #0
   12ae8:	beq	12b30 <__printf_chk@plt+0x3c0>
   12aec:	ldr	r3, [r0]
   12af0:	ldr	r2, [r0, #8]
   12af4:	cmp	r3, #0
   12af8:	beq	12b18 <__printf_chk@plt+0x3a8>
   12afc:	cmp	r2, #0
   12b00:	bne	12b10 <__printf_chk@plt+0x3a0>
   12b04:	ldr	r3, [r0, #16]
   12b08:	cmp	r3, #0
   12b0c:	beq	12b20 <__printf_chk@plt+0x3b0>
   12b10:	mov	r0, #1
   12b14:	bx	lr
   12b18:	cmp	r2, #0
   12b1c:	bne	12b04 <__printf_chk@plt+0x394>
   12b20:	ldr	r0, [r0, #28]
   12b24:	adds	r0, r0, #0
   12b28:	movne	r0, #1
   12b2c:	bx	lr
   12b30:	movw	r1, #65044	; 0xfe14
   12b34:	movt	r1, #4
   12b38:	ldr	r3, [r0, #80]	; 0x50
   12b3c:	movw	r2, #25176	; 0x6258
   12b40:	push	{r4, lr}
   12b44:	movt	r2, #3
   12b48:	ldr	r0, [r1]
   12b4c:	mov	r1, #1
   12b50:	bl	122b4 <__fprintf_chk@plt>
   12b54:	mvn	r0, #0
   12b58:	pop	{r4, pc}
   12b5c:	mvn	r0, #0
   12b60:	bx	lr
   12b64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b68:	movw	r3, #61168	; 0xeef0
   12b6c:	sub	sp, sp, #212	; 0xd4
   12b70:	movt	r3, #4
   12b74:	mov	r4, #0
   12b78:	str	r0, [sp, #40]	; 0x28
   12b7c:	str	r3, [sp, #48]	; 0x30
   12b80:	ldr	r0, [r0, #64]	; 0x40
   12b84:	ldr	r3, [r3]
   12b88:	str	r1, [sp, #44]	; 0x2c
   12b8c:	movw	r1, #49448	; 0xc128
   12b90:	movt	r1, #3
   12b94:	str	r0, [sp, #52]	; 0x34
   12b98:	str	r3, [sp, #204]	; 0xcc
   12b9c:	str	r4, [sp, #56]	; 0x38
   12ba0:	bl	1232c <fopen@plt>
   12ba4:	subs	r3, r0, #0
   12ba8:	str	r3, [sp, #28]
   12bac:	beq	130d4 <__printf_chk@plt+0x964>
   12bb0:	ldr	r3, [sp, #40]	; 0x28
   12bb4:	mov	r1, r4
   12bb8:	ldr	r6, [r3, #72]	; 0x48
   12bbc:	ldr	r3, [sp, #44]	; 0x2c
   12bc0:	mov	r0, r6
   12bc4:	str	r4, [r3, #4]
   12bc8:	bl	12434 <open@plt>
   12bcc:	subs	r5, r0, #0
   12bd0:	blt	1309c <__printf_chk@plt+0x92c>
   12bd4:	mov	r1, r5
   12bd8:	mov	r0, #3
   12bdc:	add	r2, sp, #72	; 0x48
   12be0:	bl	12554 <__fxstat@plt>
   12be4:	cmp	r0, #0
   12be8:	blt	13054 <__printf_chk@plt+0x8e4>
   12bec:	ldr	r0, [sp, #116]	; 0x74
   12bf0:	movw	r3, #65056	; 0xfe20
   12bf4:	movt	r3, #4
   12bf8:	add	r0, r0, #3
   12bfc:	bic	r0, r0, #3
   12c00:	add	r0, r0, #4096	; 0x1000
   12c04:	str	r0, [r3]
   12c08:	bl	125a8 <malloc@plt>
   12c0c:	subs	r6, r0, #0
   12c10:	beq	13010 <__printf_chk@plt+0x8a0>
   12c14:	mov	r0, r5
   12c18:	str	r4, [sp, #24]
   12c1c:	bl	12314 <close@plt>
   12c20:	add	r3, r6, #4
   12c24:	str	r3, [sp, #32]
   12c28:	movw	fp, #24880	; 0x6130
   12c2c:	ldr	r3, [sp, #44]	; 0x2c
   12c30:	movt	fp, #3
   12c34:	str	r6, [r3, #8]
   12c38:	movw	r3, #18772	; 0x4954
   12c3c:	movt	r3, #16720	; 0x4150
   12c40:	str	r3, [r6]
   12c44:	movw	r3, #22797	; 0x590d
   12c48:	movt	r3, #22611	; 0x5853
   12c4c:	str	r3, [sp, #36]	; 0x24
   12c50:	ldr	r3, [sp, #28]
   12c54:	mov	r2, #10
   12c58:	add	r1, sp, #68	; 0x44
   12c5c:	add	r0, sp, #56	; 0x38
   12c60:	bl	12134 <__getdelim@plt>
   12c64:	cmp	r0, #0
   12c68:	ble	12dd8 <__printf_chk@plt+0x668>
   12c6c:	movw	r1, #25384	; 0x6328
   12c70:	add	r2, sp, #60	; 0x3c
   12c74:	movt	r1, #3
   12c78:	ldr	r0, [sp, #56]	; 0x38
   12c7c:	bl	12224 <__strtok_r@plt>
   12c80:	ldr	r3, [sp, #24]
   12c84:	add	r3, r3, #1
   12c88:	str	r3, [sp, #24]
   12c8c:	subs	r3, r0, #0
   12c90:	beq	12c50 <__printf_chk@plt+0x4e0>
   12c94:	movw	r1, #25388	; 0x632c
   12c98:	add	r2, sp, #64	; 0x40
   12c9c:	movt	r1, #3
   12ca0:	str	r3, [sp, #56]	; 0x38
   12ca4:	bl	12224 <__strtok_r@plt>
   12ca8:	subs	r4, r0, #0
   12cac:	beq	12c50 <__printf_chk@plt+0x4e0>
   12cb0:	ldrb	r3, [r4]
   12cb4:	cmp	r3, #35	; 0x23
   12cb8:	beq	12c50 <__printf_chk@plt+0x4e0>
   12cbc:	movw	r1, #25392	; 0x6330
   12cc0:	movw	r0, #62064	; 0xf270
   12cc4:	movt	r1, #3
   12cc8:	movt	r0, #4
   12ccc:	mov	r2, r4
   12cd0:	bl	1a5c8 <crc32@@Base+0xe80>
   12cd4:	subs	r9, r0, #0
   12cd8:	blt	12f0c <__printf_chk@plt+0x79c>
   12cdc:	add	r7, sp, #164	; 0xa4
   12ce0:	mov	r3, #0
   12ce4:	movw	r6, #25388	; 0x632c
   12ce8:	movt	r6, #3
   12cec:	mov	r5, r3
   12cf0:	mov	sl, r3
   12cf4:	mov	r8, r7
   12cf8:	str	r3, [sp, #56]	; 0x38
   12cfc:	str	r7, [sp, #20]
   12d00:	add	r2, sp, #64	; 0x40
   12d04:	mov	r1, r6
   12d08:	mov	r0, #0
   12d0c:	bl	12224 <__strtok_r@plt>
   12d10:	subs	r4, r0, #0
   12d14:	beq	12d74 <__printf_chk@plt+0x604>
   12d18:	ldrb	r3, [r4]
   12d1c:	cmp	r3, #35	; 0x23
   12d20:	beq	12d74 <__printf_chk@plt+0x604>
   12d24:	bl	1268c <__errno_location@plt>
   12d28:	mov	r2, #16
   12d2c:	add	r1, sp, #72	; 0x48
   12d30:	mov	r7, r0
   12d34:	str	sl, [r0]
   12d38:	mov	r0, r4
   12d3c:	bl	122cc <strtoul@plt>
   12d40:	ldr	r3, [r7]
   12d44:	cmp	r3, #0
   12d48:	bne	12ed4 <__printf_chk@plt+0x764>
   12d4c:	ldr	r2, [sp, #72]	; 0x48
   12d50:	cmp	r4, r2
   12d54:	beq	12ed8 <__printf_chk@plt+0x768>
   12d58:	ldr	r2, [fp, r9, lsl #3]
   12d5c:	add	r5, r5, #1
   12d60:	str	r0, [r8], #4
   12d64:	cmp	r2, r5
   12d68:	bcc	12f40 <__printf_chk@plt+0x7d0>
   12d6c:	str	r3, [sp, #56]	; 0x38
   12d70:	b	12d00 <__printf_chk@plt+0x590>
   12d74:	cmp	r9, #0
   12d78:	ldr	r7, [sp, #20]
   12d7c:	beq	12c50 <__printf_chk@plt+0x4e0>
   12d80:	add	r9, fp, r9, lsl #3
   12d84:	ldr	r2, [sp, #36]	; 0x24
   12d88:	ldr	r3, [r9, #4]
   12d8c:	cmp	r3, r2
   12d90:	ldr	r2, [sp, #32]
   12d94:	ldreq	r1, [sp, #32]
   12d98:	str	r3, [r2]
   12d9c:	addne	r3, r2, #4
   12da0:	ldreq	r2, [r9, #152]	; 0x98
   12da4:	addeq	r3, r1, #8
   12da8:	addeq	r2, r2, r5, lsl #16
   12dac:	streq	r2, [r1, #4]
   12db0:	cmp	r5, #0
   12db4:	streq	r3, [sp, #32]
   12db8:	beq	12c50 <__printf_chk@plt+0x4e0>
   12dbc:	add	r5, r3, r5, lsl #2
   12dc0:	ldr	r2, [r7], #4
   12dc4:	str	r2, [r3], #4
   12dc8:	cmp	r5, r3
   12dcc:	bne	12dc0 <__printf_chk@plt+0x650>
   12dd0:	str	r5, [sp, #32]
   12dd4:	b	12c50 <__printf_chk@plt+0x4e0>
   12dd8:	ldr	r0, [sp, #28]
   12ddc:	bl	125fc <fclose@plt>
   12de0:	ldr	r3, [sp, #40]	; 0x28
   12de4:	mov	r1, #0
   12de8:	ldr	r4, [r3, #72]	; 0x48
   12dec:	mov	r0, r4
   12df0:	bl	12434 <open@plt>
   12df4:	subs	r7, r0, #0
   12df8:	blt	12f8c <__printf_chk@plt+0x81c>
   12dfc:	add	r2, sp, #72	; 0x48
   12e00:	mov	r1, r7
   12e04:	mov	r0, #3
   12e08:	bl	12554 <__fxstat@plt>
   12e0c:	cmp	r0, #0
   12e10:	blt	12fd8 <__printf_chk@plt+0x868>
   12e14:	mov	r6, #0
   12e18:	mov	r3, #1
   12e1c:	mov	r2, r3
   12e20:	ldr	r1, [sp, #116]	; 0x74
   12e24:	str	r7, [sp]
   12e28:	mov	r0, r6
   12e2c:	str	r6, [sp, #4]
   12e30:	bl	123ec <mmap@plt>
   12e34:	ldr	r9, [sp, #40]	; 0x28
   12e38:	ldr	r5, [sp, #116]	; 0x74
   12e3c:	movw	r3, #22785	; 0x5901
   12e40:	movt	r3, #22611	; 0x5853
   12e44:	ldr	r2, [r9, #60]	; 0x3c
   12e48:	mov	r4, r0
   12e4c:	ldr	r0, [sp, #32]
   12e50:	mov	r1, r4
   12e54:	add	r8, r0, #12
   12e58:	str	r3, [r0]
   12e5c:	stmib	r0, {r2, r5}
   12e60:	mov	r2, r5
   12e64:	mov	r0, r8
   12e68:	bl	1259c <memcpy@plt>
   12e6c:	mov	r1, r5
   12e70:	mov	r0, r4
   12e74:	add	r4, r5, #3
   12e78:	bl	125e4 <munmap@plt>
   12e7c:	mov	r0, r7
   12e80:	bl	12314 <close@plt>
   12e84:	ldr	r3, [sp, #48]	; 0x30
   12e88:	ldr	r5, [sp, #44]	; 0x2c
   12e8c:	bic	r4, r4, #3
   12e90:	ldr	r0, [sp, #204]	; 0xcc
   12e94:	add	r2, r8, r4
   12e98:	ldr	r1, [r3]
   12e9c:	add	r3, r2, #8
   12ea0:	ldr	ip, [r9, #60]	; 0x3c
   12ea4:	cmp	r0, r1
   12ea8:	ldr	lr, [r5, #8]
   12eac:	movw	r1, #22790	; 0x5906
   12eb0:	mov	r0, r6
   12eb4:	sub	r3, r3, lr
   12eb8:	movt	r1, #22611	; 0x5853
   12ebc:	str	r3, [r5, #4]
   12ec0:	str	r1, [r8, r4]
   12ec4:	str	ip, [r2, #4]
   12ec8:	bne	12fd4 <__printf_chk@plt+0x864>
   12ecc:	add	sp, sp, #212	; 0xd4
   12ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ed4:	mov	r2, r4
   12ed8:	movw	r1, #65044	; 0xfe14
   12edc:	movt	r1, #4
   12ee0:	str	r2, [sp, #4]
   12ee4:	movw	r2, #25452	; 0x636c
   12ee8:	ldr	r0, [r1]
   12eec:	movt	r2, #3
   12ef0:	ldr	r1, [sp, #24]
   12ef4:	ldr	r3, [sp, #52]	; 0x34
   12ef8:	str	r1, [sp]
   12efc:	mov	r1, #1
   12f00:	bl	122b4 <__fprintf_chk@plt>
   12f04:	mov	r0, #1
   12f08:	bl	121f4 <exit@plt>
   12f0c:	ldr	r1, [sp, #24]
   12f10:	movw	r2, #65044	; 0xfe14
   12f14:	movt	r2, #4
   12f18:	str	r4, [sp, #4]
   12f1c:	ldr	r3, [sp, #52]	; 0x34
   12f20:	ldr	r0, [r2]
   12f24:	movw	r2, #25412	; 0x6344
   12f28:	str	r1, [sp]
   12f2c:	movt	r2, #3
   12f30:	mov	r1, #1
   12f34:	bl	122b4 <__fprintf_chk@plt>
   12f38:	mov	r0, #1
   12f3c:	bl	121f4 <exit@plt>
   12f40:	movw	r3, #62064	; 0xf270
   12f44:	movt	r3, #4
   12f48:	mov	r2, #12
   12f4c:	str	r4, [sp, #4]
   12f50:	mla	r9, r2, r9, r3
   12f54:	ldr	r3, [sp, #24]
   12f58:	movw	r1, #65044	; 0xfe14
   12f5c:	movt	r1, #4
   12f60:	movw	r2, #25492	; 0x6394
   12f64:	movt	r2, #3
   12f68:	str	r3, [sp]
   12f6c:	ldr	r3, [sp, #52]	; 0x34
   12f70:	ldr	ip, [r9, #4]
   12f74:	ldr	r0, [r1]
   12f78:	mov	r1, #1
   12f7c:	str	ip, [sp, #8]
   12f80:	bl	122b4 <__fprintf_chk@plt>
   12f84:	mov	r0, #1
   12f88:	bl	121f4 <exit@plt>
   12f8c:	ldr	r3, [sp, #40]	; 0x28
   12f90:	movw	r2, #65044	; 0xfe14
   12f94:	movt	r2, #4
   12f98:	ldr	r6, [r3, #80]	; 0x50
   12f9c:	ldr	r5, [r2]
   12fa0:	bl	1268c <__errno_location@plt>
   12fa4:	ldr	r0, [r0]
   12fa8:	bl	12200 <strerror@plt>
   12fac:	movw	r2, #25304	; 0x62d8
   12fb0:	movt	r2, #3
   12fb4:	mov	r3, r6
   12fb8:	mov	r1, #1
   12fbc:	str	r4, [sp]
   12fc0:	str	r0, [sp, #4]
   12fc4:	mov	r0, r5
   12fc8:	bl	122b4 <__fprintf_chk@plt>
   12fcc:	mov	r0, #1
   12fd0:	bl	121f4 <exit@plt>
   12fd4:	bl	12494 <__stack_chk_fail@plt>
   12fd8:	ldr	r3, [sp, #40]	; 0x28
   12fdc:	movw	r2, #65044	; 0xfe14
   12fe0:	movt	r2, #4
   12fe4:	ldr	r6, [r3, #80]	; 0x50
   12fe8:	ldr	r5, [r2]
   12fec:	bl	1268c <__errno_location@plt>
   12ff0:	ldr	r0, [r0]
   12ff4:	bl	12200 <strerror@plt>
   12ff8:	movw	r2, #25328	; 0x62f0
   12ffc:	mov	r3, r6
   13000:	str	r4, [sp]
   13004:	mov	r1, #1
   13008:	movt	r2, #3
   1300c:	b	12fc0 <__printf_chk@plt+0x850>
   13010:	ldr	r3, [sp, #40]	; 0x28
   13014:	movw	r2, #65044	; 0xfe14
   13018:	movt	r2, #4
   1301c:	ldr	r5, [r3, #80]	; 0x50
   13020:	ldr	r4, [r2]
   13024:	bl	1268c <__errno_location@plt>
   13028:	ldr	r0, [r0]
   1302c:	bl	12200 <strerror@plt>
   13030:	mov	r3, r5
   13034:	movw	r2, #25352	; 0x6308
   13038:	mov	r1, #1
   1303c:	movt	r2, #3
   13040:	str	r0, [sp]
   13044:	mov	r0, r4
   13048:	bl	122b4 <__fprintf_chk@plt>
   1304c:	mov	r0, #1
   13050:	bl	121f4 <exit@plt>
   13054:	ldr	r3, [sp, #40]	; 0x28
   13058:	movw	r2, #65044	; 0xfe14
   1305c:	movt	r2, #4
   13060:	ldr	r5, [r3, #80]	; 0x50
   13064:	ldr	r4, [r2]
   13068:	bl	1268c <__errno_location@plt>
   1306c:	ldr	r0, [r0]
   13070:	bl	12200 <strerror@plt>
   13074:	movw	r2, #25328	; 0x62f0
   13078:	movt	r2, #3
   1307c:	mov	r3, r5
   13080:	mov	r1, #1
   13084:	str	r6, [sp]
   13088:	str	r0, [sp, #4]
   1308c:	mov	r0, r4
   13090:	bl	122b4 <__fprintf_chk@plt>
   13094:	mov	r0, #1
   13098:	bl	121f4 <exit@plt>
   1309c:	ldr	r3, [sp, #40]	; 0x28
   130a0:	movw	r2, #65044	; 0xfe14
   130a4:	movt	r2, #4
   130a8:	ldr	r5, [r3, #80]	; 0x50
   130ac:	ldr	r4, [r2]
   130b0:	bl	1268c <__errno_location@plt>
   130b4:	ldr	r0, [r0]
   130b8:	bl	12200 <strerror@plt>
   130bc:	movw	r2, #25304	; 0x62d8
   130c0:	mov	r3, r5
   130c4:	str	r6, [sp]
   130c8:	mov	r1, #1
   130cc:	movt	r2, #3
   130d0:	b	13088 <__printf_chk@plt+0x918>
   130d4:	movw	r1, #65044	; 0xfe14
   130d8:	movt	r1, #4
   130dc:	ldr	r3, [sp, #52]	; 0x34
   130e0:	movw	r2, #25260	; 0x62ac
   130e4:	ldr	r0, [r1]
   130e8:	movt	r2, #3
   130ec:	mov	r1, #1
   130f0:	bl	122b4 <__fprintf_chk@plt>
   130f4:	mov	r0, #1
   130f8:	bl	121f4 <exit@plt>
   130fc:	ldr	r2, [r0]
   13100:	movw	r3, #18772	; 0x4954
   13104:	movt	r3, #16720	; 0x4150
   13108:	cmp	r2, r3
   1310c:	beq	13130 <__printf_chk@plt+0x9c0>
   13110:	movw	r3, #65044	; 0xfe14
   13114:	movt	r3, #4
   13118:	movw	r0, #25548	; 0x63cc
   1311c:	mov	r2, #36	; 0x24
   13120:	ldr	r3, [r3]
   13124:	movt	r0, #3
   13128:	mov	r1, #1
   1312c:	b	12578 <fwrite@plt>
   13130:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13134:	movw	sl, #65048	; 0xfe18
   13138:	sub	sp, sp, #28
   1313c:	movt	sl, #4
   13140:	ldr	r9, [pc, #432]	; 132f8 <__printf_chk@plt+0xb88>
   13144:	mov	r6, r0
   13148:	str	r0, [sp, #20]
   1314c:	mov	r2, #40	; 0x28
   13150:	ldr	r3, [sl]
   13154:	mov	r1, #1
   13158:	movw	r0, #25588	; 0x63f4
   1315c:	movw	fp, #22790	; 0x5906
   13160:	movt	r0, #3
   13164:	movw	r7, #22797	; 0x590d
   13168:	movt	fp, #22611	; 0x5853
   1316c:	movt	r7, #22611	; 0x5853
   13170:	bl	12578 <fwrite@plt>
   13174:	ldr	r3, [r6], #4
   13178:	ldr	r0, [sl]
   1317c:	movw	r2, #25632	; 0x6420
   13180:	mov	r1, #1
   13184:	movt	r2, #3
   13188:	bl	122b4 <__fprintf_chk@plt>
   1318c:	movw	r3, #22785	; 0x5901
   13190:	movt	r3, #22611	; 0x5853
   13194:	str	r3, [sp, #16]
   13198:	ldr	r5, [r6]
   1319c:	cmp	r5, fp
   131a0:	beq	132f0 <__printf_chk@plt+0xb80>
   131a4:	ldr	r3, [sp, #16]
   131a8:	cmp	r5, r3
   131ac:	beq	132b4 <__printf_chk@plt+0xb44>
   131b0:	movw	r8, #24880	; 0x6130
   131b4:	movt	r8, #3
   131b8:	mov	r2, #0
   131bc:	mov	r3, r8
   131c0:	mov	r4, r2
   131c4:	b	131d8 <__printf_chk@plt+0xa68>
   131c8:	add	r4, r4, #1
   131cc:	cmp	r4, #19
   131d0:	beq	1328c <__printf_chk@plt+0xb1c>
   131d4:	ldr	r2, [r3, #4]
   131d8:	cmp	r5, r2
   131dc:	add	r3, r3, #8
   131e0:	bne	131c8 <__printf_chk@plt+0xa58>
   131e4:	cmp	r5, r7
   131e8:	bne	131fc <__printf_chk@plt+0xa8c>
   131ec:	ldrh	r2, [r6, #4]
   131f0:	ldr	r1, [r9, r4, lsl #3]
   131f4:	cmp	r1, r2
   131f8:	bne	131c8 <__printf_chk@plt+0xa58>
   131fc:	ldr	r3, [sl]
   13200:	mov	r2, r4
   13204:	mov	r1, #0
   13208:	movw	r0, #62064	; 0xf270
   1320c:	movt	r0, #4
   13210:	str	r3, [sp, #12]
   13214:	bl	1a2f8 <crc32@@Base+0xbb0>
   13218:	movw	r2, #25728	; 0x6480
   1321c:	mov	r1, #1
   13220:	movt	r2, #3
   13224:	mov	r3, r0
   13228:	ldr	r0, [sp, #12]
   1322c:	bl	122b4 <__fprintf_chk@plt>
   13230:	ldr	r3, [r8, r4, lsl #3]
   13234:	movw	r2, #65056	; 0xfe20
   13238:	movt	r2, #4
   1323c:	add	r3, r3, #1
   13240:	cmp	r5, r7
   13244:	movne	r5, r3
   13248:	addeq	r5, r3, #1
   1324c:	ldr	r3, [r2]
   13250:	ldr	r2, [sp, #20]
   13254:	add	r6, r6, r5, lsl #2
   13258:	sub	r2, r6, r2
   1325c:	cmp	r2, r3
   13260:	bls	13198 <__printf_chk@plt+0xa28>
   13264:	movw	r3, #65044	; 0xfe14
   13268:	movt	r3, #4
   1326c:	movw	r0, #25688	; 0x6458
   13270:	mov	r2, #37	; 0x25
   13274:	ldr	r3, [r3]
   13278:	movt	r0, #3
   1327c:	mov	r1, #1
   13280:	add	sp, sp, #28
   13284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13288:	b	12578 <fwrite@plt>
   1328c:	movw	r3, #65044	; 0xfe14
   13290:	movt	r3, #4
   13294:	movw	r0, #25748	; 0x6494
   13298:	mov	r2, #30
   1329c:	ldr	r3, [r3]
   132a0:	movt	r0, #3
   132a4:	mov	r1, #1
   132a8:	add	sp, sp, #28
   132ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132b0:	b	12578 <fwrite@plt>
   132b4:	ldr	ip, [r6, #8]
   132b8:	movw	r2, #25652	; 0x6434
   132bc:	ldr	r3, [r6, #4]
   132c0:	movt	r2, #3
   132c4:	ldr	r0, [sl]
   132c8:	mov	r1, #1
   132cc:	str	ip, [sp]
   132d0:	add	r6, r6, #12
   132d4:	bl	122b4 <__fprintf_chk@plt>
   132d8:	ldr	r3, [r6, #-4]
   132dc:	bic	r3, r3, #3
   132e0:	add	r6, r6, r3
   132e4:	ldr	r5, [r6]
   132e8:	cmp	r5, fp
   132ec:	bne	131a4 <__printf_chk@plt+0xa34>
   132f0:	add	sp, sp, #28
   132f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132f8:	andeq	r6, r3, r8, asr #3
   132fc:	subs	r0, r0, #18
   13300:	movne	r0, #1
   13304:	bx	lr
   13308:	push	{r4, lr}
   1330c:	sub	r2, r0, #4
   13310:	add	ip, r0, #204	; 0xcc
   13314:	b	13320 <__printf_chk@plt+0xbb0>
   13318:	cmp	r2, ip
   1331c:	beq	13390 <__printf_chk@plt+0xc20>
   13320:	ldr	r3, [r2, #4]!
   13324:	lsr	r3, r3, #28
   13328:	cmp	r3, #12
   1332c:	beq	13318 <__printf_chk@plt+0xba8>
   13330:	mov	ip, #61440	; 0xf000
   13334:	mov	r2, #0
   13338:	mov	lr, ip
   1333c:	movt	ip, #65535	; 0xffff
   13340:	movt	lr, #58783	; 0xe59f
   13344:	cmp	r2, #5
   13348:	beq	13370 <__printf_chk@plt+0xc00>
   1334c:	ldr	r3, [r0, r2, lsl #2]
   13350:	and	r4, r3, #-16777216	; 0xff000000
   13354:	and	r3, r3, ip
   13358:	cmp	r4, #-369098752	; 0xea000000
   1335c:	beq	13378 <__printf_chk@plt+0xc08>
   13360:	cmp	r3, lr
   13364:	beq	13378 <__printf_chk@plt+0xc08>
   13368:	mov	r0, #1
   1336c:	pop	{r4, pc}
   13370:	add	r2, r2, #1
   13374:	b	13344 <__printf_chk@plt+0xbd4>
   13378:	cmp	r2, #6
   1337c:	bne	13370 <__printf_chk@plt+0xc00>
   13380:	ldr	r0, [r0, #20]
   13384:	subs	r0, r0, r1
   13388:	movne	r0, #1
   1338c:	pop	{r4, pc}
   13390:	add	r0, r0, #208	; 0xd0
   13394:	sub	r1, r1, #208	; 0xd0
   13398:	b	13330 <__printf_chk@plt+0xbc0>
   1339c:	ldr	ip, [r1, #44]	; 0x2c
   133a0:	sub	r2, r0, #4
   133a4:	add	r1, r0, #204	; 0xcc
   133a8:	b	133b4 <__printf_chk@plt+0xc44>
   133ac:	cmp	r2, r1
   133b0:	beq	133d0 <__printf_chk@plt+0xc60>
   133b4:	ldr	r3, [r2, #4]!
   133b8:	lsr	r3, r3, #28
   133bc:	cmp	r3, #12
   133c0:	beq	133ac <__printf_chk@plt+0xc3c>
   133c4:	mov	r3, #20
   133c8:	str	ip, [r0, r3]
   133cc:	bx	lr
   133d0:	mov	r3, #228	; 0xe4
   133d4:	sub	ip, ip, #208	; 0xd0
   133d8:	str	ip, [r0, r3]
   133dc:	bx	lr
   133e0:	push	{r4, r5, r6, lr}
   133e4:	sub	r3, r0, #4
   133e8:	mov	r5, r0
   133ec:	add	r2, r0, #204	; 0xcc
   133f0:	b	133fc <__printf_chk@plt+0xc8c>
   133f4:	cmp	r2, r3
   133f8:	beq	13434 <__printf_chk@plt+0xcc4>
   133fc:	ldr	r4, [r3, #4]!
   13400:	lsr	r4, r4, #28
   13404:	cmp	r4, #12
   13408:	beq	133f4 <__printf_chk@plt+0xc84>
   1340c:	movw	r0, #26476	; 0x676c
   13410:	movt	r0, #3
   13414:	bl	1226c <puts@plt>
   13418:	mov	r3, #20
   1341c:	ldr	r2, [r5, r3]
   13420:	movw	r1, #26360	; 0x66f8
   13424:	mov	r0, #1
   13428:	movt	r1, #3
   1342c:	pop	{r4, r5, r6, lr}
   13430:	b	12770 <__printf_chk@plt>
   13434:	movw	r0, #26388	; 0x6714
   13438:	movt	r0, #3
   1343c:	bl	1226c <puts@plt>
   13440:	ldr	r6, [r5]
   13444:	movw	r0, #26440	; 0x6748
   13448:	movt	r0, #3
   1344c:	bl	1226c <puts@plt>
   13450:	movw	r0, #26336	; 0x66e0
   13454:	movt	r0, #3
   13458:	bl	1226c <puts@plt>
   1345c:	ubfx	r2, r6, #18, #9
   13460:	movw	r1, #26456	; 0x6758
   13464:	mov	r0, #1
   13468:	movt	r1, #3
   1346c:	bl	12770 <__printf_chk@plt>
   13470:	tst	r6, #196608	; 0x30000
   13474:	movw	r1, #26232	; 0x6678
   13478:	mov	r0, #1
   1347c:	movne	r2, #1024	; 0x400
   13480:	moveq	r2, #512	; 0x200
   13484:	movt	r1, #3
   13488:	bl	12770 <__printf_chk@plt>
   1348c:	ubfx	r3, r6, #13, #3
   13490:	cmp	r3, #2
   13494:	subhi	r2, r3, #3
   13498:	lslhi	r2, r4, r2
   1349c:	bls	13508 <__printf_chk@plt+0xd98>
   134a0:	movw	r1, #26252	; 0x668c
   134a4:	mov	r0, #1
   134a8:	movt	r1, #3
   134ac:	bl	12770 <__printf_chk@plt>
   134b0:	ubfx	r2, r6, #4, #9
   134b4:	mov	r0, #1
   134b8:	movw	r1, #26272	; 0x66a0
   134bc:	movt	r1, #3
   134c0:	mov	r4, r0
   134c4:	bl	12770 <__printf_chk@plt>
   134c8:	ubfx	r2, r6, #1, #2
   134cc:	lsl	r2, r4, r2
   134d0:	mov	r0, r4
   134d4:	movw	r1, #26292	; 0x66b4
   134d8:	movt	r1, #3
   134dc:	bl	12770 <__printf_chk@plt>
   134e0:	and	r2, r6, r4
   134e4:	mov	r0, r4
   134e8:	movw	r1, #26316	; 0x66cc
   134ec:	movt	r1, #3
   134f0:	bl	12770 <__printf_chk@plt>
   134f4:	movw	r0, #26336	; 0x66e0
   134f8:	movt	r0, #3
   134fc:	bl	1226c <puts@plt>
   13500:	mov	r3, #228	; 0xe4
   13504:	b	1341c <__printf_chk@plt+0xcac>
   13508:	mov	r2, #2
   1350c:	lsl	r2, r2, r3
   13510:	b	134a0 <__printf_chk@plt+0xd30>
   13514:	ldr	r3, [r0, #64]	; 0x40
   13518:	ldrb	r0, [r3]
   1351c:	cmp	r0, #0
   13520:	bxeq	lr
   13524:	movw	ip, #65060	; 0xfe24
   13528:	movt	ip, #4
   1352c:	mov	r2, #0
   13530:	movt	r2, #2044	; 0x7fc
   13534:	ldr	r3, [ip, #16]
   13538:	ldr	r0, [ip, #20]
   1353c:	cmp	r3, #512	; 0x200
   13540:	push	{r4, lr}
   13544:	and	r2, r2, r0, lsl #18
   13548:	beq	13580 <__printf_chk@plt+0xe10>
   1354c:	cmp	r3, #1024	; 0x400
   13550:	orreq	r0, r2, #-1073741824	; 0xc0000000
   13554:	orreq	r0, r0, #65536	; 0x10000
   13558:	beq	13584 <__printf_chk@plt+0xe14>
   1355c:	movw	r1, #65044	; 0xfe14
   13560:	movt	r1, #4
   13564:	movw	r2, #26532	; 0x67a4
   13568:	movt	r2, #3
   1356c:	ldr	r0, [r1]
   13570:	mov	r1, #1
   13574:	bl	122b4 <__fprintf_chk@plt>
   13578:	mov	r0, #1
   1357c:	pop	{r4, pc}
   13580:	orr	r0, r2, #-1073741824	; 0xc0000000
   13584:	ldr	r3, [ip, #12]
   13588:	sub	r2, r3, #2
   1358c:	cmp	r2, #22
   13590:	ldrls	pc, [pc, r2, lsl #2]
   13594:	b	136c0 <__printf_chk@plt+0xf50>
   13598:	strdeq	r3, [r1], -r8
   1359c:	andeq	r3, r1, r0, asr #13
   135a0:	muleq	r1, r4, r6
   135a4:	andeq	r3, r1, r0, asr #13
   135a8:	andeq	r3, r1, r0, asr #13
   135ac:	andeq	r3, r1, r0, asr #13
   135b0:	andeq	r3, r1, ip, lsl #13
   135b4:	andeq	r3, r1, r0, asr #13
   135b8:	andeq	r3, r1, r0, asr #13
   135bc:	andeq	r3, r1, r0, asr #13
   135c0:	strdeq	r3, [r1], -r4
   135c4:	andeq	r3, r1, r0, asr #13
   135c8:	andeq	r3, r1, r0, asr #13
   135cc:	andeq	r3, r1, r0, asr #13
   135d0:	andeq	r3, r1, r0, asr #13
   135d4:	andeq	r3, r1, r0, asr #13
   135d8:	andeq	r3, r1, r0, asr #13
   135dc:	andeq	r3, r1, r0, asr #13
   135e0:	andeq	r3, r1, r0, asr #13
   135e4:	andeq	r3, r1, r0, asr #13
   135e8:	andeq	r3, r1, r0, asr #13
   135ec:	andeq	r3, r1, r0, asr #13
   135f0:	andeq	r3, r1, r4, lsl #13
   135f4:	orr	r0, r0, #24576	; 0x6000
   135f8:	ldr	lr, [ip, #8]
   135fc:	movw	r2, #8176	; 0x1ff0
   13600:	ldr	r3, [ip, #4]
   13604:	and	r2, r2, lr, lsl #4
   13608:	sub	lr, r3, #1
   1360c:	orr	r2, r2, r0
   13610:	cmp	lr, #7
   13614:	ldrls	pc, [pc, lr, lsl #2]
   13618:	b	1369c <__printf_chk@plt+0xf2c>
   1361c:	andeq	r3, r1, r0, asr #12
   13620:	andeq	r3, r1, ip, ror r6
   13624:	muleq	r1, ip, r6
   13628:	andeq	r3, r1, ip, lsr r6
   1362c:	muleq	r1, ip, r6
   13630:	muleq	r1, ip, r6
   13634:	muleq	r1, ip, r6
   13638:	andeq	r3, r1, r4, ror r6
   1363c:	orr	r2, r2, #4
   13640:	ldr	r3, [ip]
   13644:	cmp	r3, #0
   13648:	ldr	r3, [pc, #148]	; 136e4 <__printf_chk@plt+0xf74>
   1364c:	orrne	r2, r2, #1
   13650:	add	r0, r3, #208	; 0xd0
   13654:	str	r2, [r3, #4]!
   13658:	cmp	r3, r0
   1365c:	bne	13654 <__printf_chk@plt+0xee4>
   13660:	ldr	r3, [pc, #128]	; 136e8 <__printf_chk@plt+0xf78>
   13664:	mov	r2, #208	; 0xd0
   13668:	mov	r0, #0
   1366c:	strd	r2, [r1, #4]
   13670:	pop	{r4, pc}
   13674:	orr	r2, r2, #6
   13678:	b	13640 <__printf_chk@plt+0xed0>
   1367c:	orr	r2, r2, #2
   13680:	b	13640 <__printf_chk@plt+0xed0>
   13684:	orr	r0, r0, #32768	; 0x8000
   13688:	b	135f8 <__printf_chk@plt+0xe88>
   1368c:	orr	r0, r0, #16384	; 0x4000
   13690:	b	135f8 <__printf_chk@plt+0xe88>
   13694:	orr	r0, r0, #8192	; 0x2000
   13698:	b	135f8 <__printf_chk@plt+0xe88>
   1369c:	movw	r1, #65044	; 0xfe14
   136a0:	movt	r1, #4
   136a4:	movw	r2, #26648	; 0x6818
   136a8:	movt	r2, #3
   136ac:	ldr	r0, [r1]
   136b0:	mov	r1, #1
   136b4:	bl	122b4 <__fprintf_chk@plt>
   136b8:	mov	r0, #1
   136bc:	pop	{r4, pc}
   136c0:	movw	r1, #65044	; 0xfe14
   136c4:	movt	r1, #4
   136c8:	movw	r2, #26592	; 0x67e0
   136cc:	movt	r2, #3
   136d0:	ldr	r0, [r1]
   136d4:	mov	r1, #1
   136d8:	bl	122b4 <__fprintf_chk@plt>
   136dc:	mov	r0, #1
   136e0:	pop	{r4, pc}
   136e4:	andeq	pc, r4, r8, lsr lr	; <UNPREDICTABLE>
   136e8:	andeq	pc, r4, ip, lsr lr	; <UNPREDICTABLE>
   136ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   136f0:	mov	r7, r0
   136f4:	ldr	r0, [r0, #64]	; 0x40
   136f8:	ldrb	r3, [r0]
   136fc:	cmp	r3, #0
   13700:	bne	1374c <__printf_chk@plt+0xfdc>
   13704:	ldr	r3, [r7, #4]
   13708:	cmp	r3, #0
   1370c:	bne	13744 <__printf_chk@plt+0xfd4>
   13710:	ldr	r3, [r7, #8]
   13714:	cmp	r3, #0
   13718:	bne	13744 <__printf_chk@plt+0xfd4>
   1371c:	ldr	r3, [r7, #28]
   13720:	cmp	r3, #0
   13724:	bne	13744 <__printf_chk@plt+0xfd4>
   13728:	ldr	r3, [r7]
   1372c:	ldr	r0, [r7, #16]
   13730:	cmp	r3, #0
   13734:	beq	138ac <__printf_chk@plt+0x113c>
   13738:	adds	r0, r0, #0
   1373c:	movne	r0, #1
   13740:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13744:	mov	r0, #1
   13748:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1374c:	movw	r1, #26724	; 0x6864
   13750:	movt	r1, #3
   13754:	bl	12278 <strtok@plt>
   13758:	subs	r6, r0, #0
   1375c:	beq	13704 <__printf_chk@plt+0xf94>
   13760:	movw	r8, #26712	; 0x6858
   13764:	movw	r9, #26208	; 0x6660
   13768:	movt	r8, #3
   1376c:	movt	r9, #3
   13770:	mov	r2, #8
   13774:	mov	r5, r8
   13778:	mov	r4, #0
   1377c:	mov	r1, r5
   13780:	mov	r0, r6
   13784:	bl	1217c <strncmp@plt>
   13788:	cmp	r0, #0
   1378c:	bne	13850 <__printf_chk@plt+0x10e0>
   13790:	mov	r1, #61	; 0x3d
   13794:	mov	r0, r6
   13798:	bl	12764 <strchr@plt>
   1379c:	cmp	r0, #0
   137a0:	beq	13870 <__printf_chk@plt+0x1100>
   137a4:	sub	r4, r4, #1
   137a8:	add	r0, r0, #1
   137ac:	mov	r2, #10
   137b0:	mov	r1, #0
   137b4:	cmp	r4, #4
   137b8:	ldrls	pc, [pc, r4, lsl #2]
   137bc:	b	13814 <__printf_chk@plt+0x10a4>
   137c0:	andeq	r3, r1, r0, lsl #16
   137c4:	ldrdeq	r3, [r1], -r4
   137c8:	andeq	r3, r1, ip, lsr r8
   137cc:	andeq	r3, r1, r8, lsr #16
   137d0:	muleq	r1, r8, r8
   137d4:	bl	1211c <strtol@plt>
   137d8:	movw	r3, #65060	; 0xfe24
   137dc:	movt	r3, #4
   137e0:	str	r0, [r3, #8]
   137e4:	movw	r1, #26724	; 0x6864
   137e8:	mov	r0, #0
   137ec:	movt	r1, #3
   137f0:	bl	12278 <strtok@plt>
   137f4:	subs	r6, r0, #0
   137f8:	bne	13770 <__printf_chk@plt+0x1000>
   137fc:	b	13704 <__printf_chk@plt+0xf94>
   13800:	bl	1211c <strtol@plt>
   13804:	movw	r3, #65060	; 0xfe24
   13808:	movt	r3, #4
   1380c:	str	r0, [r3, #4]
   13810:	b	137e4 <__printf_chk@plt+0x1074>
   13814:	bl	1211c <strtol@plt>
   13818:	movw	r3, #65060	; 0xfe24
   1381c:	movt	r3, #4
   13820:	str	r0, [r3]
   13824:	b	137e4 <__printf_chk@plt+0x1074>
   13828:	bl	1211c <strtol@plt>
   1382c:	movw	r3, #65060	; 0xfe24
   13830:	movt	r3, #4
   13834:	str	r0, [r3, #16]
   13838:	b	137e4 <__printf_chk@plt+0x1074>
   1383c:	bl	1211c <strtol@plt>
   13840:	movw	r3, #65060	; 0xfe24
   13844:	movt	r3, #4
   13848:	str	r0, [r3, #12]
   1384c:	b	137e4 <__printf_chk@plt+0x1074>
   13850:	add	r4, r4, #1
   13854:	cmp	r4, #6
   13858:	beq	13870 <__printf_chk@plt+0x1100>
   1385c:	ldr	r5, [r9, r4, lsl #2]
   13860:	mov	r0, r5
   13864:	bl	125c0 <strlen@plt>
   13868:	mov	r2, r0
   1386c:	b	1377c <__printf_chk@plt+0x100c>
   13870:	movw	r1, #65044	; 0xfe14
   13874:	movt	r1, #4
   13878:	mov	r3, r6
   1387c:	movw	r2, #26728	; 0x6868
   13880:	ldr	r0, [r1]
   13884:	movt	r2, #3
   13888:	mov	r1, #1
   1388c:	bl	122b4 <__fprintf_chk@plt>
   13890:	mov	r0, #1
   13894:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13898:	bl	1211c <strtol@plt>
   1389c:	movw	r3, #65060	; 0xfe24
   138a0:	movt	r3, #4
   138a4:	str	r0, [r3, #20]
   138a8:	b	137e4 <__printf_chk@plt+0x1074>
   138ac:	clz	r0, r0
   138b0:	lsr	r0, r0, #5
   138b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138b8:	push	{r4, lr}
   138bc:	mov	r4, r0
   138c0:	bl	2d61c <crc32@@Base+0x13ed4>
   138c4:	cmp	r0, #0
   138c8:	beq	138d4 <__printf_chk@plt+0x1164>
   138cc:	mov	r0, #1
   138d0:	pop	{r4, pc}
   138d4:	mov	r0, r4
   138d8:	bl	17cfc <__printf_chk@plt+0x558c>
   138dc:	clz	r0, r0
   138e0:	lsr	r0, r0, #5
   138e4:	pop	{r4, pc}
   138e8:	subs	r0, r0, #8
   138ec:	movne	r0, #1
   138f0:	bx	lr
   138f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138f8:	sub	sp, sp, #12
   138fc:	mov	r5, r1
   13900:	mov	r9, r0
   13904:	ldrb	r6, [sp, #56]	; 0x38
   13908:	mov	r0, r1
   1390c:	mov	sl, r2
   13910:	mov	fp, r3
   13914:	cmp	r6, #0
   13918:	ldrb	r8, [sp, #52]	; 0x34
   1391c:	moveq	r1, #2
   13920:	movne	r1, #0
   13924:	bl	12188 <__open_2@plt>
   13928:	mov	r4, r0
   1392c:	bl	1268c <__errno_location@plt>
   13930:	cmp	r4, #0
   13934:	mov	r7, r0
   13938:	blt	139f8 <__printf_chk@plt+0x1288>
   1393c:	ldr	r2, [sp, #48]	; 0x30
   13940:	mov	r1, r4
   13944:	mov	r0, #3
   13948:	bl	12554 <__fxstat@plt>
   1394c:	cmp	r0, #0
   13950:	blt	13a74 <__printf_chk@plt+0x1304>
   13954:	ldr	r3, [sp, #48]	; 0x30
   13958:	cmp	sl, #0
   1395c:	ldr	r1, [r3, #44]	; 0x2c
   13960:	bne	13a50 <__printf_chk@plt+0x12e0>
   13964:	cmp	r6, #0
   13968:	mov	r3, #0
   1396c:	mov	r0, r3
   13970:	str	r3, [r7]
   13974:	moveq	r2, #3
   13978:	movne	r2, #1
   1397c:	str	r3, [sp, #4]
   13980:	mov	r3, #1
   13984:	str	r4, [sp]
   13988:	bl	123ec <mmap@plt>
   1398c:	ldr	r2, [r7]
   13990:	cmn	r0, #1
   13994:	mov	r6, r0
   13998:	beq	139a4 <__printf_chk@plt+0x1234>
   1399c:	cmp	r2, #0
   139a0:	beq	13aac <__printf_chk@plt+0x133c>
   139a4:	movw	r3, #65044	; 0xfe14
   139a8:	movt	r3, #4
   139ac:	mov	r0, r2
   139b0:	ldr	r6, [r3]
   139b4:	bl	12200 <strerror@plt>
   139b8:	movw	r2, #26908	; 0x691c
   139bc:	str	r5, [sp]
   139c0:	mov	r3, r9
   139c4:	movt	r2, #3
   139c8:	mov	r1, #1
   139cc:	str	r0, [sp, #4]
   139d0:	mov	r0, r6
   139d4:	bl	122b4 <__fprintf_chk@plt>
   139d8:	mov	r0, r4
   139dc:	bl	12314 <close@plt>
   139e0:	cmp	r8, #0
   139e4:	mvneq	r4, #0
   139e8:	bne	13a38 <__printf_chk@plt+0x12c8>
   139ec:	mov	r0, r4
   139f0:	add	sp, sp, #12
   139f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139f8:	movw	r3, #65044	; 0xfe14
   139fc:	movt	r3, #4
   13a00:	ldr	r0, [r0]
   13a04:	ldr	r4, [r3]
   13a08:	bl	12200 <strerror@plt>
   13a0c:	str	r5, [sp]
   13a10:	mov	r3, r9
   13a14:	movw	r2, #25304	; 0x62d8
   13a18:	mov	r1, #1
   13a1c:	movt	r2, #3
   13a20:	str	r0, [sp, #4]
   13a24:	mov	r0, r4
   13a28:	bl	122b4 <__fprintf_chk@plt>
   13a2c:	cmp	r8, #0
   13a30:	mvneq	r4, #0
   13a34:	beq	139ec <__printf_chk@plt+0x127c>
   13a38:	mov	r0, r5
   13a3c:	mvn	r4, #0
   13a40:	bl	123a4 <unlink@plt>
   13a44:	mov	r0, r4
   13a48:	add	sp, sp, #12
   13a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a50:	add	r1, sl, r1
   13a54:	mov	r0, r4
   13a58:	str	r1, [r3, #44]	; 0x2c
   13a5c:	bl	1208c <ftruncate@plt>
   13a60:	cmp	r0, #0
   13a64:	bne	13ac8 <__printf_chk@plt+0x1358>
   13a68:	ldr	r3, [sp, #48]	; 0x30
   13a6c:	ldr	r1, [r3, #44]	; 0x2c
   13a70:	b	13964 <__printf_chk@plt+0x11f4>
   13a74:	movw	r3, #65044	; 0xfe14
   13a78:	movt	r3, #4
   13a7c:	ldr	r0, [r7]
   13a80:	ldr	r6, [r3]
   13a84:	bl	12200 <strerror@plt>
   13a88:	str	r5, [sp]
   13a8c:	mov	r3, r9
   13a90:	movw	r2, #25328	; 0x62f0
   13a94:	mov	r1, #1
   13a98:	movt	r2, #3
   13a9c:	str	r0, [sp, #4]
   13aa0:	mov	r0, r6
   13aa4:	bl	122b4 <__fprintf_chk@plt>
   13aa8:	b	139d8 <__printf_chk@plt+0x1268>
   13aac:	bl	2d61c <crc32@@Base+0x13ed4>
   13ab0:	cmp	r0, #0
   13ab4:	bne	13b00 <__printf_chk@plt+0x1390>
   13ab8:	cmp	sl, #0
   13abc:	bne	13b24 <__printf_chk@plt+0x13b4>
   13ac0:	str	r6, [fp]
   13ac4:	b	139ec <__printf_chk@plt+0x127c>
   13ac8:	movw	r3, #65044	; 0xfe14
   13acc:	movt	r3, #4
   13ad0:	ldr	r0, [r7]
   13ad4:	ldr	r6, [r3]
   13ad8:	bl	12200 <strerror@plt>
   13adc:	str	r5, [sp]
   13ae0:	mov	r3, r9
   13ae4:	movw	r2, #26880	; 0x6900
   13ae8:	mov	r1, #1
   13aec:	movt	r2, #3
   13af0:	str	r0, [sp, #4]
   13af4:	mov	r0, r6
   13af8:	bl	122b4 <__fprintf_chk@plt>
   13afc:	b	139d8 <__printf_chk@plt+0x1268>
   13b00:	movw	r1, #65044	; 0xfe14
   13b04:	movt	r1, #4
   13b08:	mov	r3, r9
   13b0c:	movw	r2, #26932	; 0x6934
   13b10:	ldr	r0, [r1]
   13b14:	movt	r2, #3
   13b18:	mov	r1, #1
   13b1c:	bl	122b4 <__fprintf_chk@plt>
   13b20:	b	139d8 <__printf_chk@plt+0x1268>
   13b24:	ldr	r3, [sp, #48]	; 0x30
   13b28:	mov	r1, r6
   13b2c:	mov	r0, r6
   13b30:	ldr	r2, [r3, #44]	; 0x2c
   13b34:	bl	2f390 <crc32@@Base+0x15c48>
   13b38:	cmp	r0, #0
   13b3c:	beq	13ac0 <__printf_chk@plt+0x1350>
   13b40:	movw	r3, #65044	; 0xfe14
   13b44:	movt	r3, #4
   13b48:	ldr	r6, [r3]
   13b4c:	bl	2f7b0 <crc32@@Base+0x16068>
   13b50:	mov	r3, r9
   13b54:	movw	r2, #26956	; 0x694c
   13b58:	mov	r1, #1
   13b5c:	movt	r2, #3
   13b60:	str	r0, [sp]
   13b64:	mov	r0, r6
   13b68:	bl	122b4 <__fprintf_chk@plt>
   13b6c:	b	139d8 <__printf_chk@plt+0x1268>
   13b70:	push	{r2, r3}
   13b74:	mov	r3, #100	; 0x64
   13b78:	push	{r4, r5, r6, lr}
   13b7c:	sub	sp, sp, #120	; 0x78
   13b80:	movw	r4, #61168	; 0xeef0
   13b84:	movt	r4, #4
   13b88:	ldr	r2, [sp, #136]	; 0x88
   13b8c:	add	ip, sp, #140	; 0x8c
   13b90:	ldr	lr, [r4]
   13b94:	mov	r5, r0
   13b98:	str	ip, [sp, #4]
   13b9c:	mov	r6, r1
   13ba0:	str	r2, [sp]
   13ba4:	mov	r1, r3
   13ba8:	mov	r2, #1
   13bac:	add	r0, sp, #16
   13bb0:	str	lr, [sp, #116]	; 0x74
   13bb4:	str	ip, [sp, #12]
   13bb8:	bl	12230 <__vsnprintf_chk@plt>
   13bbc:	add	r0, sp, #16
   13bc0:	bl	125c0 <strlen@plt>
   13bc4:	add	r2, sp, #16
   13bc8:	mov	r1, r6
   13bcc:	add	r3, r0, #1
   13bd0:	mov	r0, r5
   13bd4:	bl	2e460 <crc32@@Base+0x14d18>
   13bd8:	ldr	r2, [sp, #116]	; 0x74
   13bdc:	ldr	r3, [r4]
   13be0:	cmp	r2, r3
   13be4:	bne	13bf8 <__printf_chk@plt+0x1488>
   13be8:	add	sp, sp, #120	; 0x78
   13bec:	pop	{r4, r5, r6, lr}
   13bf0:	add	sp, sp, #8
   13bf4:	bx	lr
   13bf8:	bl	12494 <__stack_chk_fail@plt>
   13bfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13c00:	movw	r9, #61168	; 0xeef0
   13c04:	movt	r9, #4
   13c08:	sub	sp, sp, #24
   13c0c:	mov	r8, r1
   13c10:	mov	r7, r0
   13c14:	ldr	r3, [r9]
   13c18:	str	r3, [sp, #20]
   13c1c:	bl	17cfc <__printf_chk@plt+0x558c>
   13c20:	cmp	r0, #0
   13c24:	beq	13d70 <__printf_chk@plt+0x1600>
   13c28:	movw	r1, #27024	; 0x6990
   13c2c:	mov	r0, r7
   13c30:	movt	r1, #3
   13c34:	bl	31250 <crc32@@Base+0x17b08>
   13c38:	subs	r4, r0, #0
   13c3c:	blt	13d84 <__printf_chk@plt+0x1614>
   13c40:	mov	r1, r4
   13c44:	mov	r0, r7
   13c48:	bl	162b8 <__printf_chk@plt+0x3b48>
   13c4c:	ldr	r2, [r8, #20]
   13c50:	cmp	r2, r0
   13c54:	movlt	r0, #0
   13c58:	movge	r0, #1
   13c5c:	orrs	r5, r0, r2, lsr #31
   13c60:	bne	13d58 <__printf_chk@plt+0x15e8>
   13c64:	add	sl, sp, #24
   13c68:	mov	r1, r4
   13c6c:	mov	r0, r7
   13c70:	str	r5, [sl, #-16]!
   13c74:	mov	r2, sl
   13c78:	bl	2d978 <crc32@@Base+0x14230>
   13c7c:	subs	r6, r0, #0
   13c80:	bge	13cb8 <__printf_chk@plt+0x1548>
   13c84:	b	13cc4 <__printf_chk@plt+0x1554>
   13c88:	cmp	r4, #1
   13c8c:	bne	13ca0 <__printf_chk@plt+0x1530>
   13c90:	ldr	r3, [r8, #20]
   13c94:	cmp	r3, r5
   13c98:	beq	13ce0 <__printf_chk@plt+0x1570>
   13c9c:	add	r5, r5, #1
   13ca0:	mov	r1, r6
   13ca4:	mov	r2, sl
   13ca8:	mov	r0, r7
   13cac:	bl	2d978 <crc32@@Base+0x14230>
   13cb0:	subs	r6, r0, #0
   13cb4:	blt	13cc4 <__printf_chk@plt+0x1554>
   13cb8:	ldr	r4, [sp, #8]
   13cbc:	cmp	r4, #0
   13cc0:	bgt	13c88 <__printf_chk@plt+0x1518>
   13cc4:	mov	r0, #0
   13cc8:	ldr	r2, [sp, #20]
   13ccc:	ldr	r3, [r9]
   13cd0:	cmp	r2, r3
   13cd4:	bne	13dac <__printf_chk@plt+0x163c>
   13cd8:	add	sp, sp, #24
   13cdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13ce0:	mov	r1, r6
   13ce4:	mov	r2, #0
   13ce8:	mov	r0, r7
   13cec:	bl	30bf4 <crc32@@Base+0x174ac>
   13cf0:	mov	r3, r5
   13cf4:	movw	r2, #46016	; 0xb3c0
   13cf8:	movw	r1, #27104	; 0x69e0
   13cfc:	movt	r2, #3
   13d00:	movt	r1, #3
   13d04:	str	r0, [sp]
   13d08:	mov	r0, r4
   13d0c:	bl	12770 <__printf_chk@plt>
   13d10:	mov	r1, r6
   13d14:	mov	r0, r7
   13d18:	movw	r2, #46016	; 0xb3c0
   13d1c:	movt	r2, #3
   13d20:	bl	16afc <__printf_chk@plt+0x438c>
   13d24:	ldr	r4, [r8, #84]	; 0x54
   13d28:	add	r3, sp, #24
   13d2c:	mov	r1, r6
   13d30:	mov	ip, #0
   13d34:	add	r2, sp, #12
   13d38:	mov	r0, r7
   13d3c:	str	ip, [r3, #-8]!
   13d40:	bl	168c4 <__printf_chk@plt+0x4154>
   13d44:	mov	r0, r4
   13d48:	ldr	r2, [sp, #16]
   13d4c:	ldr	r1, [sp, #12]
   13d50:	bl	1a86c <crc32@@Base+0x1124>
   13d54:	b	13cc8 <__printf_chk@plt+0x1558>
   13d58:	movw	r1, #27076	; 0x69c4
   13d5c:	mov	r0, #1
   13d60:	movt	r1, #3
   13d64:	bl	12770 <__printf_chk@plt>
   13d68:	mvn	r0, #0
   13d6c:	b	13cc8 <__printf_chk@plt+0x1558>
   13d70:	movw	r0, #27000	; 0x6978
   13d74:	movt	r0, #3
   13d78:	bl	1226c <puts@plt>
   13d7c:	mvn	r0, #0
   13d80:	b	13cc8 <__printf_chk@plt+0x1558>
   13d84:	bl	2f7b0 <crc32@@Base+0x16068>
   13d88:	movw	r2, #27024	; 0x6990
   13d8c:	movw	r1, #27032	; 0x6998
   13d90:	movt	r2, #3
   13d94:	movt	r1, #3
   13d98:	mov	r3, r0
   13d9c:	mov	r0, #1
   13da0:	bl	12770 <__printf_chk@plt>
   13da4:	mvn	r0, #0
   13da8:	b	13cc8 <__printf_chk@plt+0x1558>
   13dac:	bl	12494 <__stack_chk_fail@plt>
   13db0:	ldrb	r2, [r0, #112]	; 0x70
   13db4:	mov	r3, r0
   13db8:	cmp	r2, #0
   13dbc:	bne	13e00 <__printf_chk@plt+0x1690>
   13dc0:	ldr	r2, [r0]
   13dc4:	ldr	r0, [r0, #8]
   13dc8:	cmp	r2, #0
   13dcc:	beq	13de8 <__printf_chk@plt+0x1678>
   13dd0:	cmp	r0, #0
   13dd4:	bne	13e08 <__printf_chk@plt+0x1698>
   13dd8:	ldr	r0, [r3, #16]
   13ddc:	adds	r0, r0, #0
   13de0:	movne	r0, #1
   13de4:	bx	lr
   13de8:	cmp	r0, #0
   13dec:	ldr	r3, [r3, #16]
   13df0:	bxeq	lr
   13df4:	adds	r0, r3, #0
   13df8:	movne	r0, #1
   13dfc:	bx	lr
   13e00:	mov	r0, #0
   13e04:	bx	lr
   13e08:	mov	r0, #1
   13e0c:	bx	lr
   13e10:	push	{r4, r5, r6, r7, r8, lr}
   13e14:	movw	r4, #61168	; 0xeef0
   13e18:	movt	r4, #4
   13e1c:	sub	sp, sp, #112	; 0x70
   13e20:	mov	r8, r0
   13e24:	mov	r7, r1
   13e28:	ldr	r3, [r4]
   13e2c:	mov	r0, r2
   13e30:	mov	r1, #2
   13e34:	mov	r6, r2
   13e38:	str	r3, [sp, #108]	; 0x6c
   13e3c:	bl	12434 <open@plt>
   13e40:	subs	r5, r0, #0
   13e44:	blt	13f4c <__printf_chk@plt+0x17dc>
   13e48:	add	r2, sp, #16
   13e4c:	mov	r1, r5
   13e50:	mov	r0, #3
   13e54:	bl	12554 <__fxstat@plt>
   13e58:	cmp	r0, #0
   13e5c:	blt	13ec0 <__printf_chk@plt+0x1750>
   13e60:	mov	r0, r7
   13e64:	movw	r1, #40512	; 0x9e40
   13e68:	add	r3, sp, #12
   13e6c:	movt	r1, #3
   13e70:	ldr	r2, [sp, #60]	; 0x3c
   13e74:	bl	2e294 <crc32@@Base+0x14b4c>
   13e78:	subs	r7, r0, #0
   13e7c:	bne	13efc <__printf_chk@plt+0x178c>
   13e80:	ldr	r2, [sp, #60]	; 0x3c
   13e84:	mov	r0, r5
   13e88:	ldr	r1, [sp, #12]
   13e8c:	bl	12344 <read@plt>
   13e90:	ldr	r3, [sp, #60]	; 0x3c
   13e94:	cmp	r0, r3
   13e98:	bne	13f0c <__printf_chk@plt+0x179c>
   13e9c:	mov	r0, r5
   13ea0:	bl	12314 <close@plt>
   13ea4:	ldr	r2, [sp, #108]	; 0x6c
   13ea8:	mov	r0, r7
   13eac:	ldr	r3, [r4]
   13eb0:	cmp	r2, r3
   13eb4:	bne	13f90 <__printf_chk@plt+0x1820>
   13eb8:	add	sp, sp, #112	; 0x70
   13ebc:	pop	{r4, r5, r6, r7, r8, pc}
   13ec0:	movw	r2, #65044	; 0xfe14
   13ec4:	movt	r2, #4
   13ec8:	ldr	r8, [r8]
   13ecc:	ldr	r7, [r2]
   13ed0:	bl	1268c <__errno_location@plt>
   13ed4:	ldr	r0, [r0]
   13ed8:	bl	12200 <strerror@plt>
   13edc:	movw	r2, #25328	; 0x62f0
   13ee0:	mov	r3, r8
   13ee4:	str	r6, [sp]
   13ee8:	movt	r2, #3
   13eec:	mov	r1, #1
   13ef0:	str	r0, [sp, #4]
   13ef4:	mov	r0, r7
   13ef8:	bl	122b4 <__fprintf_chk@plt>
   13efc:	mov	r0, r5
   13f00:	mvn	r7, #0
   13f04:	bl	12314 <close@plt>
   13f08:	b	13ea4 <__printf_chk@plt+0x1734>
   13f0c:	movw	r2, #65044	; 0xfe14
   13f10:	movt	r2, #4
   13f14:	ldr	r8, [r8]
   13f18:	ldr	r7, [r2]
   13f1c:	bl	1268c <__errno_location@plt>
   13f20:	ldr	r0, [r0]
   13f24:	bl	12200 <strerror@plt>
   13f28:	mov	r3, r8
   13f2c:	str	r6, [sp]
   13f30:	movw	r2, #26908	; 0x691c
   13f34:	mov	r1, #1
   13f38:	movt	r2, #3
   13f3c:	str	r0, [sp, #4]
   13f40:	mov	r0, r7
   13f44:	bl	122b4 <__fprintf_chk@plt>
   13f48:	b	13efc <__printf_chk@plt+0x178c>
   13f4c:	movw	r2, #65044	; 0xfe14
   13f50:	movt	r2, #4
   13f54:	ldr	r8, [r8]
   13f58:	mvn	r7, #0
   13f5c:	ldr	r5, [r2]
   13f60:	bl	1268c <__errno_location@plt>
   13f64:	ldr	r0, [r0]
   13f68:	bl	12200 <strerror@plt>
   13f6c:	mov	r3, r8
   13f70:	str	r6, [sp]
   13f74:	movw	r2, #25304	; 0x62d8
   13f78:	mov	r1, #1
   13f7c:	movt	r2, #3
   13f80:	str	r0, [sp, #4]
   13f84:	mov	r0, r5
   13f88:	bl	122b4 <__fprintf_chk@plt>
   13f8c:	b	13ea4 <__printf_chk@plt+0x1734>
   13f90:	bl	12494 <__stack_chk_fail@plt>
   13f94:	push	{r4, r5, r6, r7, r8, lr}
   13f98:	mov	r6, r1
   13f9c:	mov	r7, r0
   13fa0:	mov	r1, #47	; 0x2f
   13fa4:	mov	r0, r6
   13fa8:	bl	126ec <strrchr@plt>
   13fac:	mov	r1, #46	; 0x2e
   13fb0:	cmp	r0, #0
   13fb4:	addne	r5, r0, #1
   13fb8:	mov	r0, r6
   13fbc:	moveq	r5, r6
   13fc0:	bl	126ec <strrchr@plt>
   13fc4:	cmp	r0, #0
   13fc8:	beq	13ff4 <__printf_chk@plt+0x1884>
   13fcc:	sub	r4, r0, r5
   13fd0:	mov	r1, r5
   13fd4:	cmp	r4, #99	; 0x63
   13fd8:	mov	r0, r7
   13fdc:	movge	r4, #99	; 0x63
   13fe0:	mov	r2, r4
   13fe4:	bl	1259c <memcpy@plt>
   13fe8:	mov	r3, #0
   13fec:	strb	r3, [r7, r4]
   13ff0:	pop	{r4, r5, r6, r7, r8, pc}
   13ff4:	mov	r0, r6
   13ff8:	bl	125c0 <strlen@plt>
   13ffc:	add	r0, r6, r0
   14000:	b	13fcc <__printf_chk@plt+0x185c>
   14004:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14008:	movw	r3, #61168	; 0xeef0
   1400c:	sub	sp, sp, #1020	; 0x3fc
   14010:	movt	r3, #4
   14014:	ldr	r5, [r0, #76]	; 0x4c
   14018:	mov	r4, r0
   1401c:	str	r3, [sp, #28]
   14020:	ldr	r3, [r3]
   14024:	mov	r0, r5
   14028:	str	r3, [sp, #1012]	; 0x3f4
   1402c:	bl	125c0 <strlen@plt>
   14030:	add	r0, r0, #5
   14034:	cmp	r0, #256	; 0x100
   14038:	bhi	1418c <__printf_chk@plt+0x1a1c>
   1403c:	str	r5, [sp]
   14040:	movw	r2, #27200	; 0x6a40
   14044:	movw	r3, #27192	; 0x6a38
   14048:	movt	r2, #3
   1404c:	movt	r3, #3
   14050:	str	r2, [sp, #4]
   14054:	add	r0, sp, #244	; 0xf4
   14058:	mov	r2, #256	; 0x100
   1405c:	mov	r1, #1
   14060:	bl	126e0 <__sprintf_chk@plt>
   14064:	ldrb	r3, [r4, #112]	; 0x70
   14068:	cmp	r3, #0
   1406c:	bne	141bc <__printf_chk@plt+0x1a4c>
   14070:	ldr	r2, [r4, #72]	; 0x48
   14074:	cmp	r2, #0
   14078:	beq	14560 <__printf_chk@plt+0x1df0>
   1407c:	ldr	ip, [r4, #52]	; 0x34
   14080:	add	r6, sp, #500	; 0x1f4
   14084:	mov	r3, #512	; 0x200
   14088:	str	r2, [sp, #16]
   1408c:	movw	r1, #27568	; 0x6bb0
   14090:	add	r2, sp, #244	; 0xf4
   14094:	movt	r1, #3
   14098:	str	r2, [sp, #12]
   1409c:	str	r1, [sp, #4]
   140a0:	movw	r2, #27572	; 0x6bb4
   140a4:	mov	r0, r6
   140a8:	movt	r2, #3
   140ac:	str	ip, [sp, #8]
   140b0:	mov	r1, r3
   140b4:	str	r2, [sp]
   140b8:	mov	r2, #1
   140bc:	bl	125cc <__snprintf_chk@plt>
   140c0:	ldrb	r3, [sp, #500]	; 0x1f4
   140c4:	cmp	r3, #0
   140c8:	beq	140dc <__printf_chk@plt+0x196c>
   140cc:	mov	r0, r6
   140d0:	bl	123c8 <system@plt>
   140d4:	cmn	r0, #1
   140d8:	beq	14db8 <__printf_chk@plt+0x2648>
   140dc:	add	fp, sp, #64	; 0x40
   140e0:	ldr	r0, [r4, #80]	; 0x50
   140e4:	mov	r2, #0
   140e8:	add	r1, sp, #152	; 0x98
   140ec:	mov	r3, fp
   140f0:	str	r1, [sp]
   140f4:	str	r2, [sp, #8]
   140f8:	add	r1, sp, #244	; 0xf4
   140fc:	str	r2, [sp, #4]
   14100:	bl	138f4 <__printf_chk@plt+0x1184>
   14104:	subs	r8, r0, #0
   14108:	blt	14160 <__printf_chk@plt+0x19f0>
   1410c:	ldr	r6, [sp, #196]	; 0xc4
   14110:	ldr	r9, [sp, #64]	; 0x40
   14114:	add	r6, r6, #16384	; 0x4000
   14118:	mov	r0, r6
   1411c:	ldr	r7, [r9, #4]
   14120:	bl	125a8 <malloc@plt>
   14124:	subs	r5, r0, #0
   14128:	beq	142c4 <__printf_chk@plt+0x1b54>
   1412c:	mov	r2, r6
   14130:	mov	r0, r9
   14134:	mov	r1, r5
   14138:	bl	2f390 <crc32@@Base+0x15c48>
   1413c:	cmp	r0, #0
   14140:	beq	142f0 <__printf_chk@plt+0x1b80>
   14144:	mov	r0, r8
   14148:	bl	12314 <close@plt>
   1414c:	ldr	r1, [sp, #196]	; 0xc4
   14150:	ldr	r0, [sp, #64]	; 0x40
   14154:	bl	125e4 <munmap@plt>
   14158:	mov	r0, r5
   1415c:	bl	12128 <free@plt>
   14160:	add	r0, sp, #244	; 0xf4
   14164:	mvn	r8, #0
   14168:	bl	123a4 <unlink@plt>
   1416c:	ldr	r3, [sp, #28]
   14170:	mov	r0, r8
   14174:	ldr	r2, [sp, #1012]	; 0x3f4
   14178:	ldr	r3, [r3]
   1417c:	cmp	r2, r3
   14180:	bne	14df8 <__printf_chk@plt+0x2688>
   14184:	add	sp, sp, #1020	; 0x3fc
   14188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1418c:	ldr	ip, [r4, #80]	; 0x50
   14190:	movw	r2, #65044	; 0xfe14
   14194:	movt	r2, #4
   14198:	mov	r1, #1
   1419c:	mov	r3, r5
   141a0:	mov	r8, r1
   141a4:	ldr	r0, [r2]
   141a8:	movw	r2, #27136	; 0x6a00
   141ac:	str	ip, [sp]
   141b0:	movt	r2, #3
   141b4:	bl	122b4 <__fprintf_chk@plt>
   141b8:	b	1416c <__printf_chk@plt+0x19fc>
   141bc:	ldr	r1, [r4, #72]	; 0x48
   141c0:	mov	r0, r4
   141c4:	bl	1a93c <crc32@@Base+0x11f4>
   141c8:	subs	r6, r0, #0
   141cc:	blt	14228 <__printf_chk@plt+0x1ab8>
   141d0:	ldr	r1, [r4, #120]	; 0x78
   141d4:	cmp	r1, #0
   141d8:	beq	141f0 <__printf_chk@plt+0x1a80>
   141dc:	mov	r0, r4
   141e0:	bl	1a93c <crc32@@Base+0x11f4>
   141e4:	cmp	r0, #0
   141e8:	addge	r6, r6, r0
   141ec:	blt	14228 <__printf_chk@plt+0x1ab8>
   141f0:	ldr	r5, [r4, #124]	; 0x7c
   141f4:	cmp	r5, #0
   141f8:	bne	14214 <__printf_chk@plt+0x1aa4>
   141fc:	b	14250 <__printf_chk@plt+0x1ae0>
   14200:	ldr	r5, [r5]
   14204:	add	r0, r0, #300	; 0x12c
   14208:	add	r6, r6, r0
   1420c:	cmp	r5, #0
   14210:	beq	14250 <__printf_chk@plt+0x1ae0>
   14214:	ldr	r1, [r5, #8]
   14218:	mov	r0, r4
   1421c:	bl	1a93c <crc32@@Base+0x11f4>
   14220:	cmp	r0, #0
   14224:	bge	14200 <__printf_chk@plt+0x1a90>
   14228:	movw	r7, #65044	; 0xfe14
   1422c:	movt	r7, #4
   14230:	mov	r1, #1
   14234:	ldr	r3, [r4, #80]	; 0x50
   14238:	movw	r2, #27540	; 0x6b94
   1423c:	ldr	r0, [r7]
   14240:	movt	r2, #3
   14244:	mov	r8, r1
   14248:	bl	122b4 <__fprintf_chk@plt>
   1424c:	b	1416c <__printf_chk@plt+0x19fc>
   14250:	add	r6, r6, #4096	; 0x1000
   14254:	mov	r0, r6
   14258:	bl	125a8 <malloc@plt>
   1425c:	subs	r5, r0, #0
   14260:	beq	14d90 <__printf_chk@plt+0x2620>
   14264:	mov	r1, r6
   14268:	bl	2df00 <crc32@@Base+0x147b8>
   1426c:	subs	r7, r0, #0
   14270:	beq	14598 <__printf_chk@plt+0x1e28>
   14274:	cmp	r7, #0
   14278:	blt	14d28 <__printf_chk@plt+0x25b8>
   1427c:	movw	r2, #438	; 0x1b6
   14280:	movw	r1, #578	; 0x242
   14284:	add	r0, sp, #244	; 0xf4
   14288:	bl	12434 <open@plt>
   1428c:	subs	r6, r0, #0
   14290:	blt	14d4c <__printf_chk@plt+0x25dc>
   14294:	mov	r2, r7
   14298:	mov	r1, r5
   1429c:	bl	12608 <write@plt>
   142a0:	cmp	r0, r7
   142a4:	bne	14ccc <__printf_chk@plt+0x255c>
   142a8:	mov	r0, r6
   142ac:	bl	12314 <close@plt>
   142b0:	mov	r0, r5
   142b4:	bl	12128 <free@plt>
   142b8:	mov	r3, #0
   142bc:	strb	r3, [sp, #500]	; 0x1f4
   142c0:	b	140dc <__printf_chk@plt+0x196c>
   142c4:	movw	r2, #65044	; 0xfe14
   142c8:	movt	r2, #4
   142cc:	str	r6, [sp]
   142d0:	movw	r3, #26984	; 0x6968
   142d4:	ldr	r0, [r2]
   142d8:	movt	r3, #3
   142dc:	movw	r2, #27636	; 0x6bf4
   142e0:	mov	r1, #1
   142e4:	movt	r2, #3
   142e8:	bl	122b4 <__fprintf_chk@plt>
   142ec:	b	14144 <__printf_chk@plt+0x19d4>
   142f0:	movw	r1, #27024	; 0x6990
   142f4:	mov	r0, r5
   142f8:	movt	r1, #3
   142fc:	bl	31250 <crc32@@Base+0x17b08>
   14300:	subs	r1, r0, #0
   14304:	blt	14144 <__printf_chk@plt+0x19d4>
   14308:	mov	r0, r5
   1430c:	bl	2da68 <crc32@@Base+0x14320>
   14310:	subs	r6, r0, #0
   14314:	blt	143c8 <__printf_chk@plt+0x1c58>
   14318:	lsr	r2, r7, #24
   1431c:	ubfx	r3, r7, #8, #8
   14320:	orr	r2, r2, r7, lsl #24
   14324:	ubfx	r7, r7, #16, #8
   14328:	orr	r3, r2, r3, lsl #16
   1432c:	movw	sl, #27680	; 0x6c20
   14330:	orr	r7, r3, r7, lsl #8
   14334:	movw	r9, #27692	; 0x6c2c
   14338:	add	r3, r7, #3
   1433c:	movt	sl, #3
   14340:	bic	r3, r3, #3
   14344:	movt	r9, #3
   14348:	str	r4, [sp, #32]
   1434c:	mov	r4, r3
   14350:	mvn	r3, #0
   14354:	mov	r2, sl
   14358:	mov	r1, r6
   1435c:	mov	r0, r5
   14360:	bl	19a94 <crc32@@Base+0x34c>
   14364:	mvn	r3, #0
   14368:	mov	r2, r9
   1436c:	mov	r1, r6
   14370:	mov	r7, r0
   14374:	mov	r0, r5
   14378:	bl	19a94 <crc32@@Base+0x34c>
   1437c:	cmn	r7, #1
   14380:	cmnne	r0, #1
   14384:	beq	143b0 <__printf_chk@plt+0x1c40>
   14388:	add	r3, r7, r4
   1438c:	str	r0, [sp]
   14390:	add	r3, r5, r3
   14394:	movw	r2, #40512	; 0x9e40
   14398:	mov	r1, r6
   1439c:	movt	r2, #3
   143a0:	mov	r0, r5
   143a4:	bl	2efa8 <crc32@@Base+0x15860>
   143a8:	cmp	r0, #0
   143ac:	bne	14144 <__printf_chk@plt+0x19d4>
   143b0:	mov	r1, r6
   143b4:	mov	r0, r5
   143b8:	bl	2dac8 <crc32@@Base+0x14380>
   143bc:	subs	r6, r0, #0
   143c0:	bge	14350 <__printf_chk@plt+0x1be0>
   143c4:	ldr	r4, [sp, #32]
   143c8:	mov	r0, r8
   143cc:	bl	12314 <close@plt>
   143d0:	mov	r0, r5
   143d4:	bl	2f5fc <crc32@@Base+0x15eb4>
   143d8:	movw	r2, #438	; 0x1b6
   143dc:	movw	r1, #578	; 0x242
   143e0:	add	r0, sp, #244	; 0xf4
   143e4:	ldr	r7, [r5, #4]
   143e8:	bl	12434 <open@plt>
   143ec:	subs	r8, r0, #0
   143f0:	blt	14bfc <__printf_chk@plt+0x248c>
   143f4:	ubfx	r3, r7, #8, #8
   143f8:	lsr	r6, r7, #24
   143fc:	orr	r6, r6, r7, lsl #24
   14400:	ubfx	r7, r7, #16, #8
   14404:	orr	r6, r6, r3, lsl #16
   14408:	mov	r1, r5
   1440c:	orr	r6, r6, r7, lsl #8
   14410:	mov	r2, r6
   14414:	bl	12608 <write@plt>
   14418:	cmp	r6, r0
   1441c:	bne	14144 <__printf_chk@plt+0x19d4>
   14420:	mov	r0, r8
   14424:	mov	r6, #0
   14428:	bl	12314 <close@plt>
   1442c:	ldr	r1, [sp, #196]	; 0xc4
   14430:	ldr	r0, [sp, #64]	; 0x40
   14434:	mov	r7, r6
   14438:	bl	125e4 <munmap@plt>
   1443c:	mov	r0, r5
   14440:	bl	12128 <free@plt>
   14444:	b	14514 <__printf_chk@plt+0x1da4>
   14448:	add	r3, sp, #152	; 0x98
   1444c:	str	r7, [sp, #8]
   14450:	str	r3, [sp]
   14454:	mov	r2, r6
   14458:	str	r7, [sp, #4]
   1445c:	add	r3, sp, #56	; 0x38
   14460:	bl	138f4 <__printf_chk@plt+0x1184>
   14464:	subs	r5, r0, #0
   14468:	blt	14930 <__printf_chk@plt+0x21c0>
   1446c:	ldr	sl, [sp, #196]	; 0xc4
   14470:	ldr	r0, [r4, #80]	; 0x50
   14474:	ldr	r3, [r4, #72]	; 0x48
   14478:	cmp	r3, #0
   1447c:	beq	144a4 <__printf_chk@plt+0x1d34>
   14480:	ldr	r1, [sp, #128]	; 0x80
   14484:	bl	1aa40 <crc32@@Base+0x12f8>
   14488:	mov	r1, #0
   1448c:	mov	r2, r0
   14490:	ldr	r0, [sp, #60]	; 0x3c
   14494:	bl	174dc <__printf_chk@plt+0x4d6c>
   14498:	subs	r8, r0, #0
   1449c:	bne	144d0 <__printf_chk@plt+0x1d60>
   144a0:	ldr	r0, [r4, #80]	; 0x50
   144a4:	ldr	r8, [r4, #88]	; 0x58
   144a8:	ldr	lr, [r4, #140]	; 0x8c
   144ac:	ldr	ip, [r4, #100]	; 0x64
   144b0:	ldr	r3, [r4, #96]	; 0x60
   144b4:	ldr	r2, [sp, #60]	; 0x3c
   144b8:	str	r0, [sp, #8]
   144bc:	mov	r0, r8
   144c0:	ldr	r1, [sp, #56]	; 0x38
   144c4:	stm	sp, {ip, lr}
   144c8:	bl	15e20 <__printf_chk@plt+0x36b0>
   144cc:	mov	r8, r0
   144d0:	ldr	r0, [sp, #56]	; 0x38
   144d4:	cmp	r0, #0
   144d8:	beq	144ec <__printf_chk@plt+0x1d7c>
   144dc:	mov	r1, sl
   144e0:	bl	125e4 <munmap@plt>
   144e4:	mov	r0, r5
   144e8:	bl	12314 <close@plt>
   144ec:	ldr	r1, [sp, #108]	; 0x6c
   144f0:	ldr	r0, [sp, #60]	; 0x3c
   144f4:	bl	125e4 <munmap@plt>
   144f8:	mov	r0, r9
   144fc:	bl	12314 <close@plt>
   14500:	cmn	r8, #28
   14504:	bne	14dfc <__printf_chk@plt+0x268c>
   14508:	add	r6, r6, #1024	; 0x400
   1450c:	cmp	r6, #65536	; 0x10000
   14510:	beq	14948 <__printf_chk@plt+0x21d8>
   14514:	ldr	r0, [r4, #80]	; 0x50
   14518:	mov	r1, #1
   1451c:	add	r3, sp, #60	; 0x3c
   14520:	str	r1, [sp, #4]
   14524:	str	r7, [sp, #8]
   14528:	mov	r2, r6
   1452c:	add	r1, sp, #244	; 0xf4
   14530:	str	fp, [sp]
   14534:	str	r7, [sp, #56]	; 0x38
   14538:	bl	138f4 <__printf_chk@plt+0x1184>
   1453c:	subs	r9, r0, #0
   14540:	blt	14970 <__printf_chk@plt+0x2200>
   14544:	ldr	r1, [r4, #92]	; 0x5c
   14548:	ldr	r0, [r4, #80]	; 0x50
   1454c:	cmp	r1, #0
   14550:	bne	14448 <__printf_chk@plt+0x1cd8>
   14554:	mov	r5, r1
   14558:	mov	sl, r1
   1455c:	b	14474 <__printf_chk@plt+0x1d04>
   14560:	ldr	r1, [r4, #76]	; 0x4c
   14564:	add	r6, sp, #500	; 0x1f4
   14568:	mov	r3, #512	; 0x200
   1456c:	add	r2, sp, #244	; 0xf4
   14570:	mov	r0, r6
   14574:	str	r2, [sp, #8]
   14578:	str	r1, [sp, #4]
   1457c:	movw	r2, #27592	; 0x6bc8
   14580:	mov	r1, r3
   14584:	movt	r2, #3
   14588:	str	r2, [sp]
   1458c:	mov	r2, #1
   14590:	bl	125cc <__snprintf_chk@plt>
   14594:	b	140c0 <__printf_chk@plt+0x1950>
   14598:	mov	r0, r5
   1459c:	add	r7, sp, #1016	; 0x3f8
   145a0:	bl	2e188 <crc32@@Base+0x14a40>
   145a4:	movw	r1, #46016	; 0xb3c0
   145a8:	mov	r0, r5
   145ac:	movt	r1, #3
   145b0:	bl	2e1a8 <crc32@@Base+0x14a60>
   145b4:	ldrb	r0, [r4, #116]	; 0x74
   145b8:	bl	1a3d0 <crc32@@Base+0xc88>
   145bc:	movw	r2, #27240	; 0x6a68
   145c0:	movw	r1, #27276	; 0x6a8c
   145c4:	movt	r2, #3
   145c8:	movt	r1, #3
   145cc:	add	r6, sp, #500	; 0x1f4
   145d0:	add	sl, r4, #80	; 0x50
   145d4:	mov	r3, r0
   145d8:	mov	r0, r5
   145dc:	bl	13b70 <__printf_chk@plt+0x1400>
   145e0:	movw	r3, #27288	; 0x6a98
   145e4:	movw	r2, #27296	; 0x6aa0
   145e8:	movt	r3, #3
   145ec:	movt	r2, #3
   145f0:	movw	r1, #27316	; 0x6ab4
   145f4:	mov	r0, r5
   145f8:	movt	r1, #3
   145fc:	bl	13b70 <__printf_chk@plt+0x1400>
   14600:	mov	r3, #16777216	; 0x1000000
   14604:	movw	r1, #27324	; 0x6abc
   14608:	str	r3, [r7, #-864]!	; 0xfffffca0
   1460c:	movt	r1, #3
   14610:	mov	r2, r7
   14614:	mov	r3, #4
   14618:	mov	r0, r5
   1461c:	bl	2e460 <crc32@@Base+0x14d18>
   14620:	movw	r1, #27340	; 0x6acc
   14624:	mov	r0, r5
   14628:	movt	r1, #3
   1462c:	bl	2e1a8 <crc32@@Base+0x14a60>
   14630:	ldrb	r0, [r4, #116]	; 0x74
   14634:	bl	1a424 <crc32@@Base+0xcdc>
   14638:	mov	r3, #100	; 0x64
   1463c:	mov	r1, r3
   14640:	movw	r2, #27348	; 0x6ad4
   14644:	movt	r2, #3
   14648:	str	r2, [sp, #36]	; 0x24
   1464c:	str	r2, [sp]
   14650:	mov	r2, #1
   14654:	mov	r9, r0
   14658:	str	r0, [sp, #4]
   1465c:	mov	r0, r6
   14660:	bl	125cc <__snprintf_chk@plt>
   14664:	mov	r1, r6
   14668:	mov	r0, r5
   1466c:	bl	2e1a8 <crc32@@Base+0x14a60>
   14670:	ldr	r8, [r4, #64]	; 0x40
   14674:	str	sl, [sp, #32]
   14678:	mov	r0, r8
   1467c:	bl	125c0 <strlen@plt>
   14680:	mov	r2, r8
   14684:	movw	r1, #27276	; 0x6a8c
   14688:	movt	r1, #3
   1468c:	add	r3, r0, #1
   14690:	mov	r0, r5
   14694:	bl	2e460 <crc32@@Base+0x14d18>
   14698:	mov	r0, r9
   1469c:	bl	125c0 <strlen@plt>
   146a0:	mov	r2, r9
   146a4:	movw	r1, #40452	; 0x9e04
   146a8:	movt	r1, #3
   146ac:	add	r3, r0, #1
   146b0:	mov	r0, r5
   146b4:	bl	2e460 <crc32@@Base+0x14d18>
   146b8:	ldrb	r0, [r4, #40]	; 0x28
   146bc:	bl	1a574 <crc32@@Base+0xe2c>
   146c0:	mov	r8, r0
   146c4:	ldrb	r0, [r4, #40]	; 0x28
   146c8:	bl	1a574 <crc32@@Base+0xe2c>
   146cc:	bl	125c0 <strlen@plt>
   146d0:	mov	r2, r8
   146d4:	movw	r1, #27356	; 0x6adc
   146d8:	movt	r1, #3
   146dc:	add	r3, r0, #1
   146e0:	mov	r0, r5
   146e4:	bl	2e460 <crc32@@Base+0x14d18>
   146e8:	ldrb	r0, [r4, #36]	; 0x24
   146ec:	bl	1a520 <crc32@@Base+0xdd8>
   146f0:	mov	r8, r0
   146f4:	ldrb	r0, [r4, #36]	; 0x24
   146f8:	bl	1a520 <crc32@@Base+0xdd8>
   146fc:	bl	125c0 <strlen@plt>
   14700:	mov	r2, r8
   14704:	movw	r1, #35972	; 0x8c84
   14708:	movt	r1, #3
   1470c:	add	r3, r0, #1
   14710:	mov	r0, r5
   14714:	bl	2e460 <crc32@@Base+0x14d18>
   14718:	ldrb	r0, [r4, #48]	; 0x30
   1471c:	bl	1a4cc <crc32@@Base+0xd84>
   14720:	mov	r8, r0
   14724:	ldrb	r0, [r4, #48]	; 0x30
   14728:	bl	1a4cc <crc32@@Base+0xd84>
   1472c:	bl	125c0 <strlen@plt>
   14730:	mov	r2, r8
   14734:	movw	r1, #27364	; 0x6ae4
   14738:	movt	r1, #3
   1473c:	add	r3, r0, #1
   14740:	mov	r0, r5
   14744:	bl	2e460 <crc32@@Base+0x14d18>
   14748:	ldr	r1, [r4, #56]	; 0x38
   1474c:	mov	r2, r7
   14750:	ubfx	ip, r1, #8, #8
   14754:	ubfx	r3, r1, #16, #8
   14758:	lsr	r0, r1, #24
   1475c:	orr	r0, r0, r1, lsl #24
   14760:	movw	r1, #27376	; 0x6af0
   14764:	orr	r0, r0, ip, lsl #16
   14768:	movt	r1, #3
   1476c:	orr	r0, r0, r3, lsl #8
   14770:	mov	r3, #4
   14774:	str	r0, [sp, #152]	; 0x98
   14778:	mov	r0, r5
   1477c:	bl	2e460 <crc32@@Base+0x14d18>
   14780:	ldr	r3, [r4, #60]	; 0x3c
   14784:	mov	r2, r7
   14788:	movw	r1, #27384	; 0x6af8
   1478c:	ubfx	lr, r3, #8, #8
   14790:	ubfx	r0, r3, #16, #8
   14794:	lsr	ip, r3, #24
   14798:	movt	r1, #3
   1479c:	orr	ip, ip, r3, lsl #24
   147a0:	mov	r3, #4
   147a4:	orr	ip, ip, lr, lsl #16
   147a8:	orr	ip, ip, r0, lsl #8
   147ac:	mov	r0, r5
   147b0:	str	ip, [sp, #152]	; 0x98
   147b4:	bl	2e460 <crc32@@Base+0x14d18>
   147b8:	mov	r0, sl
   147bc:	ldr	r2, [r4, #72]	; 0x48
   147c0:	mov	r1, r5
   147c4:	bl	13e10 <__printf_chk@plt+0x16a0>
   147c8:	subs	r7, r0, #0
   147cc:	bne	14274 <__printf_chk@plt+0x1b04>
   147d0:	mov	r0, r5
   147d4:	bl	2e234 <crc32@@Base+0x14aec>
   147d8:	ldr	r8, [r4, #124]	; 0x7c
   147dc:	cmp	r8, #0
   147e0:	beq	1497c <__printf_chk@plt+0x220c>
   147e4:	movw	r3, #27392	; 0x6b00
   147e8:	movw	r2, #27396	; 0x6b04
   147ec:	movt	r3, #3
   147f0:	movt	r2, #3
   147f4:	str	r3, [sp, #40]	; 0x28
   147f8:	mov	fp, r7
   147fc:	movw	r3, #27276	; 0x6a8c
   14800:	str	r2, [sp, #44]	; 0x2c
   14804:	movt	r3, #3
   14808:	str	r7, [sp, #52]	; 0x34
   1480c:	str	r3, [sp, #48]	; 0x30
   14810:	b	14820 <__printf_chk@plt+0x20b0>
   14814:	ldr	r8, [r8]
   14818:	cmp	r8, #0
   1481c:	beq	14978 <__printf_chk@plt+0x2208>
   14820:	ldr	r3, [r8, #4]
   14824:	cmp	r3, #8
   14828:	bne	14814 <__printf_chk@plt+0x20a4>
   1482c:	ldr	r2, [sp, #40]	; 0x28
   14830:	mov	r3, #100	; 0x64
   14834:	ldr	r0, [sp, #44]	; 0x2c
   14838:	mov	r1, r3
   1483c:	add	fp, fp, #1
   14840:	str	fp, [sp, #8]
   14844:	str	r2, [sp, #4]
   14848:	mov	r2, #1
   1484c:	str	r0, [sp]
   14850:	mov	r0, r6
   14854:	bl	125cc <__snprintf_chk@plt>
   14858:	mov	r1, r6
   1485c:	mov	r0, r5
   14860:	bl	2e1a8 <crc32@@Base+0x14a60>
   14864:	ldr	r1, [r8, #8]
   14868:	mov	r0, r6
   1486c:	bl	13f94 <__printf_chk@plt+0x1824>
   14870:	mov	r0, r6
   14874:	bl	125c0 <strlen@plt>
   14878:	mov	r2, r6
   1487c:	ldr	r1, [sp, #48]	; 0x30
   14880:	add	r3, r0, #1
   14884:	mov	r0, r5
   14888:	bl	2e460 <crc32@@Base+0x14d18>
   1488c:	ldr	r2, [r8, #8]
   14890:	mov	r1, r5
   14894:	ldr	r0, [sp, #32]
   14898:	bl	13e10 <__printf_chk@plt+0x16a0>
   1489c:	subs	sl, r0, #0
   148a0:	bne	14d20 <__printf_chk@plt+0x25b0>
   148a4:	mov	r0, r9
   148a8:	bl	125c0 <strlen@plt>
   148ac:	mov	r2, r9
   148b0:	movw	r1, #40452	; 0x9e04
   148b4:	movt	r1, #3
   148b8:	add	r3, r0, #1
   148bc:	mov	r0, r5
   148c0:	bl	2e460 <crc32@@Base+0x14d18>
   148c4:	ldrb	r0, [r4, #40]	; 0x28
   148c8:	bl	1a574 <crc32@@Base+0xe2c>
   148cc:	mov	r7, r0
   148d0:	ldrb	r0, [r4, #40]	; 0x28
   148d4:	bl	1a574 <crc32@@Base+0xe2c>
   148d8:	bl	125c0 <strlen@plt>
   148dc:	mov	r2, r7
   148e0:	movw	r1, #27356	; 0x6adc
   148e4:	movt	r1, #3
   148e8:	add	r3, r0, #1
   148ec:	mov	r0, r5
   148f0:	bl	2e460 <crc32@@Base+0x14d18>
   148f4:	mov	r0, sl
   148f8:	bl	1a4cc <crc32@@Base+0xd84>
   148fc:	mov	r7, r0
   14900:	mov	r0, sl
   14904:	bl	1a4cc <crc32@@Base+0xd84>
   14908:	bl	125c0 <strlen@plt>
   1490c:	mov	r2, r7
   14910:	movw	r1, #27364	; 0x6ae4
   14914:	movt	r1, #3
   14918:	add	r3, r0, #1
   1491c:	mov	r0, r5
   14920:	bl	2e460 <crc32@@Base+0x14d18>
   14924:	mov	r0, r5
   14928:	bl	2e234 <crc32@@Base+0x14aec>
   1492c:	b	14814 <__printf_chk@plt+0x20a4>
   14930:	ldr	r1, [sp, #108]	; 0x6c
   14934:	mvn	r8, #4
   14938:	ldr	r0, [sp, #60]	; 0x3c
   1493c:	bl	125e4 <munmap@plt>
   14940:	mov	r0, r9
   14944:	bl	12314 <close@plt>
   14948:	movw	r1, #65044	; 0xfe14
   1494c:	movt	r1, #4
   14950:	ldr	r3, [r4, #80]	; 0x50
   14954:	movw	r2, #27704	; 0x6c38
   14958:	ldr	r0, [r1]
   1495c:	movt	r2, #3
   14960:	str	r8, [sp]
   14964:	mov	r1, #1
   14968:	bl	122b4 <__fprintf_chk@plt>
   1496c:	b	14160 <__printf_chk@plt+0x19f0>
   14970:	mvn	r8, #4
   14974:	b	14948 <__printf_chk@plt+0x21d8>
   14978:	ldr	r7, [sp, #52]	; 0x34
   1497c:	ldr	r3, [r4, #120]	; 0x78
   14980:	cmp	r3, #0
   14984:	beq	14a08 <__printf_chk@plt+0x2298>
   14988:	movw	r1, #27404	; 0x6b0c
   1498c:	mov	r0, r5
   14990:	movt	r1, #3
   14994:	bl	2e1a8 <crc32@@Base+0x14a60>
   14998:	mov	r3, #8
   1499c:	movw	r2, #27416	; 0x6b18
   149a0:	movw	r1, #40452	; 0x9e04
   149a4:	movt	r2, #3
   149a8:	movt	r1, #3
   149ac:	mov	r0, r5
   149b0:	bl	2e460 <crc32@@Base+0x14d18>
   149b4:	ldrb	r0, [r4, #36]	; 0x24
   149b8:	bl	1a520 <crc32@@Base+0xdd8>
   149bc:	mov	r8, r0
   149c0:	ldrb	r0, [r4, #36]	; 0x24
   149c4:	bl	1a520 <crc32@@Base+0xdd8>
   149c8:	bl	125c0 <strlen@plt>
   149cc:	mov	r2, r8
   149d0:	movw	r1, #35972	; 0x8c84
   149d4:	movt	r1, #3
   149d8:	add	r3, r0, #1
   149dc:	mov	r0, r5
   149e0:	bl	2e460 <crc32@@Base+0x14d18>
   149e4:	ldr	r0, [sp, #32]
   149e8:	ldr	r2, [r4, #120]	; 0x78
   149ec:	mov	r1, r5
   149f0:	bl	13e10 <__printf_chk@plt+0x16a0>
   149f4:	cmp	r0, #0
   149f8:	movne	r7, r0
   149fc:	bne	14274 <__printf_chk@plt+0x1b04>
   14a00:	mov	r0, r5
   14a04:	bl	2e234 <crc32@@Base+0x14aec>
   14a08:	mov	r0, r5
   14a0c:	bl	2e234 <crc32@@Base+0x14aec>
   14a10:	movw	r1, #27424	; 0x6b20
   14a14:	mov	r0, r5
   14a18:	movt	r1, #3
   14a1c:	bl	2e1a8 <crc32@@Base+0x14a60>
   14a20:	movw	r2, #27440	; 0x6b30
   14a24:	movw	r1, #27448	; 0x6b38
   14a28:	movt	r2, #3
   14a2c:	movt	r1, #3
   14a30:	mov	r3, #7
   14a34:	mov	r0, r5
   14a38:	bl	2e460 <crc32@@Base+0x14d18>
   14a3c:	ldr	r8, [r4, #124]	; 0x7c
   14a40:	cmp	r8, #0
   14a44:	beq	14c40 <__printf_chk@plt+0x24d0>
   14a48:	movw	sl, #27456	; 0x6b40
   14a4c:	movw	fp, #27276	; 0x6a8c
   14a50:	movw	r3, #27464	; 0x6b48
   14a54:	movt	sl, #3
   14a58:	movt	r3, #3
   14a5c:	movt	fp, #3
   14a60:	str	r3, [sp, #32]
   14a64:	b	14a74 <__printf_chk@plt+0x2304>
   14a68:	ldr	r8, [r8]
   14a6c:	cmp	r8, #0
   14a70:	beq	14bb4 <__printf_chk@plt+0x2444>
   14a74:	ldr	r0, [r8, #4]
   14a78:	cmp	r0, #8
   14a7c:	bne	14a68 <__printf_chk@plt+0x22f8>
   14a80:	bl	1a424 <crc32@@Base+0xcdc>
   14a84:	mov	r3, #100	; 0x64
   14a88:	mov	r1, r3
   14a8c:	mov	r2, #1
   14a90:	add	r7, r7, #1
   14a94:	str	sl, [sp]
   14a98:	str	r7, [sp, #4]
   14a9c:	mov	r0, r6
   14aa0:	bl	125cc <__snprintf_chk@plt>
   14aa4:	mov	r1, r6
   14aa8:	mov	r0, r5
   14aac:	bl	2e1a8 <crc32@@Base+0x14a60>
   14ab0:	ldr	r1, [r8, #8]
   14ab4:	mov	r0, r6
   14ab8:	bl	13f94 <__printf_chk@plt+0x1824>
   14abc:	mov	r0, r6
   14ac0:	bl	125c0 <strlen@plt>
   14ac4:	mov	r2, r6
   14ac8:	mov	r1, fp
   14acc:	add	r3, r0, #1
   14ad0:	mov	r0, r5
   14ad4:	bl	2e460 <crc32@@Base+0x14d18>
   14ad8:	ldrb	r0, [r4, #116]	; 0x74
   14adc:	bl	1a424 <crc32@@Base+0xcdc>
   14ae0:	ldr	r2, [sp, #36]	; 0x24
   14ae4:	mov	r3, #100	; 0x64
   14ae8:	mov	r1, r3
   14aec:	str	r2, [sp]
   14af0:	mov	r2, #1
   14af4:	mov	r9, r0
   14af8:	str	r0, [sp, #4]
   14afc:	mov	r0, r6
   14b00:	bl	125cc <__snprintf_chk@plt>
   14b04:	mov	r0, r6
   14b08:	bl	125c0 <strlen@plt>
   14b0c:	mov	r1, r9
   14b10:	mov	r2, r6
   14b14:	add	r3, r0, #1
   14b18:	mov	r0, r5
   14b1c:	bl	2e460 <crc32@@Base+0x14d18>
   14b20:	mov	r0, r6
   14b24:	bl	125c0 <strlen@plt>
   14b28:	mov	r2, r6
   14b2c:	ldr	r1, [sp, #32]
   14b30:	add	r3, r0, #1
   14b34:	mov	r0, r5
   14b38:	bl	2e460 <crc32@@Base+0x14d18>
   14b3c:	ldr	r3, [r4, #120]	; 0x78
   14b40:	cmp	r3, #0
   14b44:	beq	14b64 <__printf_chk@plt+0x23f4>
   14b48:	movw	r2, #27404	; 0x6b0c
   14b4c:	movw	r1, #27416	; 0x6b18
   14b50:	movt	r2, #3
   14b54:	movt	r1, #3
   14b58:	mov	r3, #10
   14b5c:	mov	r0, r5
   14b60:	bl	2e460 <crc32@@Base+0x14d18>
   14b64:	mov	r3, #100	; 0x64
   14b68:	mov	r2, #1
   14b6c:	mov	r1, r3
   14b70:	str	r7, [sp, #4]
   14b74:	movw	r0, #27476	; 0x6b54
   14b78:	movt	r0, #3
   14b7c:	str	r0, [sp]
   14b80:	mov	r0, r6
   14b84:	bl	125cc <__snprintf_chk@plt>
   14b88:	mov	r0, r6
   14b8c:	bl	125c0 <strlen@plt>
   14b90:	mov	r2, r6
   14b94:	movw	r1, #27392	; 0x6b00
   14b98:	movt	r1, #3
   14b9c:	add	r3, r0, #1
   14ba0:	mov	r0, r5
   14ba4:	bl	2e460 <crc32@@Base+0x14d18>
   14ba8:	mov	r0, r5
   14bac:	bl	2e234 <crc32@@Base+0x14aec>
   14bb0:	b	14a68 <__printf_chk@plt+0x22f8>
   14bb4:	cmp	r7, #0
   14bb8:	beq	14c40 <__printf_chk@plt+0x24d0>
   14bbc:	mov	r0, r5
   14bc0:	bl	2e234 <crc32@@Base+0x14aec>
   14bc4:	mov	r0, r5
   14bc8:	bl	2e234 <crc32@@Base+0x14aec>
   14bcc:	mov	r0, r5
   14bd0:	bl	2e4c4 <crc32@@Base+0x14d7c>
   14bd4:	subs	r7, r0, #0
   14bd8:	bne	14274 <__printf_chk@plt+0x1b04>
   14bdc:	ldr	r3, [r5, #4]
   14be0:	ubfx	r1, r3, #8, #8
   14be4:	ubfx	r2, r3, #16, #8
   14be8:	lsr	r7, r3, #24
   14bec:	orr	r7, r7, r3, lsl #24
   14bf0:	orr	r7, r7, r1, lsl #16
   14bf4:	orr	r7, r7, r2, lsl #8
   14bf8:	b	14274 <__printf_chk@plt+0x1b04>
   14bfc:	movw	r2, #65044	; 0xfe14
   14c00:	movt	r2, #4
   14c04:	ldr	r6, [r4, #80]	; 0x50
   14c08:	ldr	r4, [r2]
   14c0c:	bl	1268c <__errno_location@plt>
   14c10:	ldr	r0, [r0]
   14c14:	bl	12200 <strerror@plt>
   14c18:	add	r2, sp, #244	; 0xf4
   14c1c:	mov	r3, r6
   14c20:	str	r2, [sp]
   14c24:	mov	r1, #1
   14c28:	movw	r2, #25304	; 0x62d8
   14c2c:	movt	r2, #3
   14c30:	str	r0, [sp, #4]
   14c34:	mov	r0, r4
   14c38:	bl	122b4 <__fprintf_chk@plt>
   14c3c:	b	1414c <__printf_chk@plt+0x19dc>
   14c40:	movw	r1, #27440	; 0x6b30
   14c44:	mov	r0, r5
   14c48:	movt	r1, #3
   14c4c:	bl	2e1a8 <crc32@@Base+0x14a60>
   14c50:	ldrb	r0, [r4, #116]	; 0x74
   14c54:	bl	1a424 <crc32@@Base+0xcdc>
   14c58:	ldr	r2, [sp, #36]	; 0x24
   14c5c:	mov	r3, #100	; 0x64
   14c60:	mov	r1, r3
   14c64:	str	r2, [sp]
   14c68:	mov	r2, #1
   14c6c:	mov	r7, r0
   14c70:	str	r0, [sp, #4]
   14c74:	mov	r0, r6
   14c78:	bl	125cc <__snprintf_chk@plt>
   14c7c:	mov	r0, r6
   14c80:	bl	125c0 <strlen@plt>
   14c84:	mov	r1, r7
   14c88:	mov	r2, r6
   14c8c:	add	r3, r0, #1
   14c90:	mov	r0, r5
   14c94:	bl	2e460 <crc32@@Base+0x14d18>
   14c98:	ldr	r3, [r4, #120]	; 0x78
   14c9c:	cmp	r3, #0
   14ca0:	beq	14cc0 <__printf_chk@plt+0x2550>
   14ca4:	movw	r2, #27404	; 0x6b0c
   14ca8:	movw	r1, #27416	; 0x6b18
   14cac:	movt	r2, #3
   14cb0:	movt	r1, #3
   14cb4:	mov	r3, #10
   14cb8:	mov	r0, r5
   14cbc:	bl	2e460 <crc32@@Base+0x14d18>
   14cc0:	mov	r0, r5
   14cc4:	bl	2e234 <crc32@@Base+0x14aec>
   14cc8:	b	14bbc <__printf_chk@plt+0x244c>
   14ccc:	bl	1268c <__errno_location@plt>
   14cd0:	movw	r7, #65044	; 0xfe14
   14cd4:	movt	r7, #4
   14cd8:	ldr	r9, [r4, #80]	; 0x50
   14cdc:	ldr	r8, [r7]
   14ce0:	ldr	r0, [r0]
   14ce4:	bl	12200 <strerror@plt>
   14ce8:	add	r2, sp, #244	; 0xf4
   14cec:	mov	r3, r9
   14cf0:	str	r2, [sp]
   14cf4:	mov	r1, #1
   14cf8:	movw	r2, #27516	; 0x6b7c
   14cfc:	movt	r2, #3
   14d00:	str	r0, [sp, #4]
   14d04:	mov	r0, r8
   14d08:	bl	122b4 <__fprintf_chk@plt>
   14d0c:	mov	r0, r6
   14d10:	bl	12314 <close@plt>
   14d14:	mov	r0, r5
   14d18:	bl	12128 <free@plt>
   14d1c:	b	14230 <__printf_chk@plt+0x1ac0>
   14d20:	mov	r7, sl
   14d24:	b	14274 <__printf_chk@plt+0x1b04>
   14d28:	movw	r7, #65044	; 0xfe14
   14d2c:	movt	r7, #4
   14d30:	movw	r2, #27484	; 0x6b5c
   14d34:	ldr	r3, [r4, #80]	; 0x50
   14d38:	ldr	r0, [r7]
   14d3c:	movt	r2, #3
   14d40:	mov	r1, #1
   14d44:	bl	122b4 <__fprintf_chk@plt>
   14d48:	b	14d14 <__printf_chk@plt+0x25a4>
   14d4c:	bl	1268c <__errno_location@plt>
   14d50:	movw	r7, #65044	; 0xfe14
   14d54:	movt	r7, #4
   14d58:	ldr	r8, [r4, #80]	; 0x50
   14d5c:	ldr	r6, [r7]
   14d60:	ldr	r0, [r0]
   14d64:	bl	12200 <strerror@plt>
   14d68:	add	r2, sp, #244	; 0xf4
   14d6c:	mov	r3, r8
   14d70:	str	r2, [sp]
   14d74:	mov	r1, #1
   14d78:	movw	r2, #25304	; 0x62d8
   14d7c:	movt	r2, #3
   14d80:	str	r0, [sp, #4]
   14d84:	mov	r0, r6
   14d88:	bl	122b4 <__fprintf_chk@plt>
   14d8c:	b	14d14 <__printf_chk@plt+0x25a4>
   14d90:	movw	r7, #65044	; 0xfe14
   14d94:	movt	r7, #4
   14d98:	ldr	r3, [r4, #80]	; 0x50
   14d9c:	movw	r2, #27208	; 0x6a48
   14da0:	ldr	r0, [r7]
   14da4:	movt	r2, #3
   14da8:	str	r6, [sp]
   14dac:	mov	r1, #1
   14db0:	bl	122b4 <__fprintf_chk@plt>
   14db4:	b	14230 <__printf_chk@plt+0x1ac0>
   14db8:	movw	r2, #65044	; 0xfe14
   14dbc:	movt	r2, #4
   14dc0:	ldr	r5, [r4, #80]	; 0x50
   14dc4:	ldr	r4, [r2]
   14dc8:	bl	1268c <__errno_location@plt>
   14dcc:	ldr	r0, [r0]
   14dd0:	bl	12200 <strerror@plt>
   14dd4:	mov	r3, r5
   14dd8:	str	r6, [sp]
   14ddc:	movw	r2, #27608	; 0x6bd8
   14de0:	mov	r1, #1
   14de4:	movt	r2, #3
   14de8:	str	r0, [sp, #4]
   14dec:	mov	r0, r4
   14df0:	bl	122b4 <__fprintf_chk@plt>
   14df4:	b	14160 <__printf_chk@plt+0x19f0>
   14df8:	bl	12494 <__stack_chk_fail@plt>
   14dfc:	cmp	r8, #0
   14e00:	bne	14948 <__printf_chk@plt+0x21d8>
   14e04:	ldrb	r3, [r4, #132]	; 0x84
   14e08:	cmp	r3, #0
   14e0c:	beq	14f50 <__printf_chk@plt+0x27e0>
   14e10:	ldr	r0, [r4, #80]	; 0x50
   14e14:	add	r3, sp, #56	; 0x38
   14e18:	add	ip, sp, #152	; 0x98
   14e1c:	str	r8, [sp, #8]
   14e20:	mov	r2, r8
   14e24:	str	r8, [sp, #4]
   14e28:	add	r1, sp, #244	; 0xf4
   14e2c:	str	ip, [sp]
   14e30:	bl	138f4 <__printf_chk@plt+0x1184>
   14e34:	subs	r3, r0, #0
   14e38:	str	r3, [sp, #32]
   14e3c:	blt	14160 <__printf_chk@plt+0x19f0>
   14e40:	ldr	r5, [sp, #56]	; 0x38
   14e44:	ldr	r2, [r5, #4]
   14e48:	ubfx	r1, r2, #8, #8
   14e4c:	ubfx	r0, r2, #16, #8
   14e50:	lsr	r3, r2, #24
   14e54:	orr	r3, r3, r2, lsl #24
   14e58:	orr	r3, r3, r1, lsl #16
   14e5c:	orr	r0, r3, r0, lsl #8
   14e60:	bl	125a8 <malloc@plt>
   14e64:	subs	r9, r0, #0
   14e68:	mov	r0, r5
   14e6c:	beq	15108 <__printf_chk@plt+0x2998>
   14e70:	movw	r1, #27024	; 0x6990
   14e74:	movt	r1, #3
   14e78:	bl	31250 <crc32@@Base+0x17b08>
   14e7c:	subs	r1, r0, #0
   14e80:	bge	14fc4 <__printf_chk@plt+0x2854>
   14e84:	ldr	r1, [sp, #196]	; 0xc4
   14e88:	ldr	r0, [sp, #56]	; 0x38
   14e8c:	bl	125e4 <munmap@plt>
   14e90:	mov	r0, r9
   14e94:	bl	12128 <free@plt>
   14e98:	ldr	r0, [sp, #32]
   14e9c:	bl	12314 <close@plt>
   14ea0:	b	14160 <__printf_chk@plt+0x19f0>
   14ea4:	mov	r6, r8
   14ea8:	ldr	r0, [sp, #56]	; 0x38
   14eac:	bl	2f5fc <crc32@@Base+0x15eb4>
   14eb0:	ldr	r0, [sp, #56]	; 0x38
   14eb4:	ldr	r1, [sp, #196]	; 0xc4
   14eb8:	ldr	r3, [r0, #4]
   14ebc:	ubfx	ip, r3, #8, #8
   14ec0:	ubfx	r2, r3, #16, #8
   14ec4:	lsr	r5, r3, #24
   14ec8:	orr	r5, r5, r3, lsl #24
   14ecc:	orr	r5, r5, ip, lsl #16
   14ed0:	orr	r5, r5, r2, lsl #8
   14ed4:	bl	125e4 <munmap@plt>
   14ed8:	add	r5, r5, #3
   14edc:	ldr	r0, [sp, #32]
   14ee0:	bic	r5, r5, #3
   14ee4:	mov	r1, r5
   14ee8:	bl	1208c <ftruncate@plt>
   14eec:	cmp	r0, #0
   14ef0:	bne	14e90 <__printf_chk@plt+0x2720>
   14ef4:	ldr	r3, [r4, #136]	; 0x88
   14ef8:	cmp	r3, #0
   14efc:	beq	14f0c <__printf_chk@plt+0x279c>
   14f00:	cmp	r3, r5
   14f04:	bcc	14e90 <__printf_chk@plt+0x2720>
   14f08:	mov	r5, r3
   14f0c:	mov	r1, r5
   14f10:	ldr	r5, [sp, #32]
   14f14:	mov	r2, #0
   14f18:	mov	r0, r5
   14f1c:	bl	124f4 <lseek@plt>
   14f20:	cmp	r0, #0
   14f24:	blt	14e90 <__printf_chk@plt+0x2720>
   14f28:	mov	r2, r6
   14f2c:	mov	r1, r9
   14f30:	mov	r0, r5
   14f34:	bl	12608 <write@plt>
   14f38:	cmp	r6, r0
   14f3c:	bne	14e90 <__printf_chk@plt+0x2720>
   14f40:	mov	r0, r9
   14f44:	bl	12128 <free@plt>
   14f48:	ldr	r0, [sp, #32]
   14f4c:	bl	12314 <close@plt>
   14f50:	ldr	r1, [r4, #76]	; 0x4c
   14f54:	add	r0, sp, #244	; 0xf4
   14f58:	bl	1274c <rename@plt>
   14f5c:	cmn	r0, #1
   14f60:	bne	1416c <__printf_chk@plt+0x19fc>
   14f64:	movw	r2, #65044	; 0xfe14
   14f68:	movt	r2, #4
   14f6c:	ldr	r6, [r4, #80]	; 0x50
   14f70:	mov	r8, #1
   14f74:	ldr	r5, [r2]
   14f78:	bl	1268c <__errno_location@plt>
   14f7c:	ldr	r7, [r4, #76]	; 0x4c
   14f80:	ldr	r0, [r0]
   14f84:	bl	12200 <strerror@plt>
   14f88:	mov	r3, r6
   14f8c:	add	r2, sp, #244	; 0xf4
   14f90:	mov	r1, r8
   14f94:	str	r2, [sp]
   14f98:	movw	r2, #27760	; 0x6c70
   14f9c:	str	r7, [sp, #4]
   14fa0:	movt	r2, #3
   14fa4:	str	r0, [sp, #8]
   14fa8:	mov	r0, r5
   14fac:	bl	122b4 <__fprintf_chk@plt>
   14fb0:	add	r0, sp, #244	; 0xf4
   14fb4:	bl	123a4 <unlink@plt>
   14fb8:	ldr	r0, [r4, #76]	; 0x4c
   14fbc:	bl	123a4 <unlink@plt>
   14fc0:	b	1416c <__printf_chk@plt+0x19fc>
   14fc4:	ldr	r0, [sp, #56]	; 0x38
   14fc8:	bl	2da68 <crc32@@Base+0x14320>
   14fcc:	subs	r5, r0, #0
   14fd0:	blt	14ea4 <__printf_chk@plt+0x2734>
   14fd4:	movw	r7, #40512	; 0x9e40
   14fd8:	movw	sl, #27692	; 0x6c2c
   14fdc:	movw	r3, #27680	; 0x6c20
   14fe0:	movt	r7, #3
   14fe4:	movt	r3, #3
   14fe8:	movt	sl, #3
   14fec:	str	r3, [sp, #36]	; 0x24
   14ff0:	mov	r6, r8
   14ff4:	b	15080 <__printf_chk@plt+0x2910>
   14ff8:	add	ip, r6, r3
   14ffc:	movw	r2, #27744	; 0x6c60
   15000:	mov	r3, #4
   15004:	movt	r2, #3
   15008:	str	r3, [sp]
   1500c:	mov	r1, r5
   15010:	mov	r3, fp
   15014:	rev	ip, ip
   15018:	str	ip, [sp, #64]	; 0x40
   1501c:	bl	2efa8 <crc32@@Base+0x15860>
   15020:	ldr	r3, [sp, #60]	; 0x3c
   15024:	mov	r1, #4
   15028:	str	r1, [sp]
   1502c:	ubfx	r2, r3, #8, #8
   15030:	ubfx	r1, r3, #16, #8
   15034:	lsr	ip, r3, #24
   15038:	ldr	r0, [sp, #56]	; 0x38
   1503c:	orr	ip, ip, r3, lsl #24
   15040:	mov	r3, fp
   15044:	orr	ip, ip, r2, lsl #16
   15048:	mov	r2, sl
   1504c:	orr	ip, ip, r1, lsl #8
   15050:	mov	r1, r5
   15054:	str	ip, [sp, #64]	; 0x40
   15058:	bl	2efa8 <crc32@@Base+0x15860>
   1505c:	ldr	r3, [sp, #60]	; 0x3c
   15060:	add	r3, r3, #3
   15064:	bic	r3, r3, #3
   15068:	add	r6, r6, r3
   1506c:	mov	r1, r5
   15070:	ldr	r0, [sp, #56]	; 0x38
   15074:	bl	2dac8 <crc32@@Base+0x14380>
   15078:	subs	r5, r0, #0
   1507c:	blt	14ea8 <__printf_chk@plt+0x2738>
   15080:	mov	r1, r5
   15084:	add	r3, sp, #60	; 0x3c
   15088:	mov	r2, r7
   1508c:	ldr	r0, [sp, #56]	; 0x38
   15090:	bl	30ef4 <crc32@@Base+0x177ac>
   15094:	subs	r1, r0, #0
   15098:	beq	1506c <__printf_chk@plt+0x28fc>
   1509c:	ldr	r2, [sp, #60]	; 0x3c
   150a0:	add	r0, r9, r6
   150a4:	bl	1259c <memcpy@plt>
   150a8:	mov	r2, r7
   150ac:	mov	r1, r5
   150b0:	ldr	r0, [sp, #56]	; 0x38
   150b4:	bl	2f138 <crc32@@Base+0x159f0>
   150b8:	cmp	r0, #0
   150bc:	bne	14e84 <__printf_chk@plt+0x2714>
   150c0:	ldr	r3, [r4, #136]	; 0x88
   150c4:	ldr	r0, [sp, #56]	; 0x38
   150c8:	cmp	r3, #0
   150cc:	bne	14ff8 <__printf_chk@plt+0x2888>
   150d0:	ubfx	r2, r6, #8, #8
   150d4:	lsr	r3, r6, #24
   150d8:	orr	r3, r3, r6, lsl #24
   150dc:	ubfx	r1, r6, #16, #8
   150e0:	orr	ip, r3, r2, lsl #16
   150e4:	mov	r3, #4
   150e8:	orr	ip, ip, r1, lsl #8
   150ec:	str	r3, [sp]
   150f0:	ldr	r2, [sp, #36]	; 0x24
   150f4:	mov	r3, fp
   150f8:	mov	r1, r5
   150fc:	str	ip, [sp, #64]	; 0x40
   15100:	bl	2efa8 <crc32@@Base+0x15860>
   15104:	b	15020 <__printf_chk@plt+0x28b0>
   15108:	ldr	r1, [sp, #196]	; 0xc4
   1510c:	bl	125e4 <munmap@plt>
   15110:	b	14e98 <__printf_chk@plt+0x2728>
   15114:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15118:	sub	sp, sp, #36	; 0x24
   1511c:	movw	r7, #61168	; 0xeef0
   15120:	movt	r7, #4
   15124:	ldr	r5, [sp, #72]	; 0x48
   15128:	mov	r6, r2
   1512c:	ldr	ip, [r7]
   15130:	mov	r4, r0
   15134:	mov	sl, r1
   15138:	mov	r0, r2
   1513c:	mov	r1, r5
   15140:	mov	r2, #0
   15144:	str	r3, [sp, #20]
   15148:	str	ip, [sp, #28]
   1514c:	ldr	r9, [sp, #76]	; 0x4c
   15150:	ldr	fp, [sp, #80]	; 0x50
   15154:	bl	30bf4 <crc32@@Base+0x174ac>
   15158:	mov	r1, r5
   1515c:	add	r2, sp, #24
   15160:	str	r0, [sp, #16]
   15164:	mov	r0, r6
   15168:	bl	173f8 <__printf_chk@plt+0x4c88>
   1516c:	subs	r8, r0, #0
   15170:	bne	15234 <__printf_chk@plt+0x2ac4>
   15174:	mov	r3, r8
   15178:	mov	r1, r5
   1517c:	movw	r2, #27892	; 0x6cf4
   15180:	mov	r0, r6
   15184:	movt	r2, #3
   15188:	bl	30ef4 <crc32@@Base+0x177ac>
   1518c:	mov	r2, #44	; 0x2c
   15190:	mov	r1, r8
   15194:	str	r0, [sp, #12]
   15198:	add	r0, r4, #4
   1519c:	bl	122e4 <memset@plt>
   151a0:	mov	r3, r8
   151a4:	mov	r1, r5
   151a8:	str	sl, [r4]
   151ac:	movw	r2, #27900	; 0x6cfc
   151b0:	mov	r0, r6
   151b4:	movt	r2, #3
   151b8:	bl	30ef4 <crc32@@Base+0x177ac>
   151bc:	str	r6, [r4, #8]
   151c0:	str	r5, [r4, #12]
   151c4:	str	r0, [r4, #4]
   151c8:	ldr	r0, [sp, #24]
   151cc:	bl	12308 <__strdup@plt>
   151d0:	str	r0, [r4, #16]
   151d4:	ldr	r0, [sp, #24]
   151d8:	bl	18854 <__printf_chk@plt+0x60e4>
   151dc:	str	r0, [r4, #20]
   151e0:	ldr	r0, [sp, #24]
   151e4:	bl	188c0 <__printf_chk@plt+0x6150>
   151e8:	str	r0, [r4, #28]
   151ec:	ldr	r0, [sp, #12]
   151f0:	bl	18a8c <__printf_chk@plt+0x631c>
   151f4:	ldr	r3, [r4, #20]
   151f8:	str	r9, [r4, #40]	; 0x28
   151fc:	cmp	r3, #0
   15200:	str	fp, [r4, #44]	; 0x2c
   15204:	str	r0, [r4, #24]
   15208:	beq	15250 <__printf_chk@plt+0x2ae0>
   1520c:	ldr	r3, [r4, #28]
   15210:	cmp	r3, #0
   15214:	beq	15250 <__printf_chk@plt+0x2ae0>
   15218:	ldr	r2, [sp, #28]
   1521c:	mov	r0, r8
   15220:	ldr	r3, [r7]
   15224:	cmp	r2, r3
   15228:	bne	15278 <__printf_chk@plt+0x2b08>
   1522c:	add	sp, sp, #36	; 0x24
   15230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15234:	ldrd	r2, [sp, #16]
   15238:	movw	r1, #27824	; 0x6cb0
   1523c:	mov	r0, #1
   15240:	movt	r1, #3
   15244:	mvn	r8, #0
   15248:	bl	12770 <__printf_chk@plt>
   1524c:	b	15218 <__printf_chk@plt+0x2aa8>
   15250:	ldr	r1, [sp, #20]
   15254:	mov	r0, #1
   15258:	ldr	r2, [sp, #24]
   1525c:	mvn	r8, #0
   15260:	ldr	r3, [sp, #16]
   15264:	str	r1, [sp]
   15268:	movw	r1, #27916	; 0x6d0c
   1526c:	movt	r1, #3
   15270:	bl	12770 <__printf_chk@plt>
   15274:	b	15218 <__printf_chk@plt+0x2aa8>
   15278:	bl	12494 <__stack_chk_fail@plt>
   1527c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15280:	movw	r4, #61168	; 0xeef0
   15284:	movt	r4, #4
   15288:	sub	sp, sp, #28
   1528c:	mov	r5, r0
   15290:	mov	r7, r1
   15294:	ldr	ip, [r4]
   15298:	str	r3, [sp]
   1529c:	mov	r3, r2
   152a0:	movw	r2, #28000	; 0x6d60
   152a4:	movt	r2, #3
   152a8:	str	ip, [sp, #20]
   152ac:	ldr	r6, [r0, #32]
   152b0:	ldrd	r8, [sp, #64]	; 0x40
   152b4:	ldr	sl, [sp, #76]	; 0x4c
   152b8:	bl	2efa8 <crc32@@Base+0x15860>
   152bc:	cmp	r0, #0
   152c0:	beq	152dc <__printf_chk@plt+0x2b6c>
   152c4:	ldr	r2, [sp, #20]
   152c8:	ldr	r3, [r4]
   152cc:	cmp	r2, r3
   152d0:	bne	1541c <__printf_chk@plt+0x2cac>
   152d4:	add	sp, sp, #28
   152d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152dc:	mov	fp, #8
   152e0:	movw	r3, #28008	; 0x6d68
   152e4:	str	fp, [sp]
   152e8:	movt	r3, #3
   152ec:	movw	r2, #28016	; 0x6d70
   152f0:	mov	r1, r7
   152f4:	movt	r2, #3
   152f8:	mov	r0, r5
   152fc:	bl	2efa8 <crc32@@Base+0x15860>
   15300:	cmp	r0, #0
   15304:	bne	152c4 <__printf_chk@plt+0x2b54>
   15308:	str	fp, [sp]
   1530c:	movw	r3, #27288	; 0x6a98
   15310:	movw	r2, #28028	; 0x6d7c
   15314:	movt	r3, #3
   15318:	movt	r2, #3
   1531c:	mov	r1, r7
   15320:	mov	r0, r5
   15324:	bl	2efa8 <crc32@@Base+0x15860>
   15328:	cmp	r8, #0
   1532c:	clz	r3, r0
   15330:	lsr	r3, r3, #5
   15334:	moveq	r3, #0
   15338:	cmp	r3, #0
   1533c:	beq	15368 <__printf_chk@plt+0x2bf8>
   15340:	mov	r0, r8
   15344:	bl	125c0 <strlen@plt>
   15348:	movw	r2, #28044	; 0x6d8c
   1534c:	mov	r3, r8
   15350:	mov	r1, r7
   15354:	movt	r2, #3
   15358:	add	r0, r0, #1
   1535c:	str	r0, [sp]
   15360:	mov	r0, r5
   15364:	bl	2efa8 <crc32@@Base+0x15860>
   15368:	cmp	r0, #0
   1536c:	bne	152c4 <__printf_chk@plt+0x2b54>
   15370:	bl	12674 <time@plt>
   15374:	mov	r1, r0
   15378:	mov	r0, sl
   1537c:	bl	1aa40 <crc32@@Base+0x12f8>
   15380:	mov	r1, r7
   15384:	mov	r2, r0
   15388:	mov	r0, r5
   1538c:	bl	174dc <__printf_chk@plt+0x4d6c>
   15390:	cmp	r9, #0
   15394:	clz	r3, r0
   15398:	lsr	r3, r3, #5
   1539c:	moveq	r3, #0
   153a0:	cmp	r3, #0
   153a4:	beq	152c4 <__printf_chk@plt+0x2b54>
   153a8:	ldr	r3, [sp, #72]	; 0x48
   153ac:	ubfx	r2, r6, #8, #8
   153b0:	lsr	ip, r6, #24
   153b4:	mov	r1, r7
   153b8:	orr	ip, ip, r6, lsl #24
   153bc:	ubfx	r6, r6, #16, #8
   153c0:	orr	ip, ip, r2, lsl #16
   153c4:	str	r3, [sp]
   153c8:	movw	r2, #28052	; 0x6d94
   153cc:	mov	r3, r9
   153d0:	movt	r2, #3
   153d4:	mov	r0, r5
   153d8:	orr	r6, ip, r6, lsl #8
   153dc:	bl	2efa8 <crc32@@Base+0x15860>
   153e0:	rev	r6, r6
   153e4:	mov	r3, #0
   153e8:	str	r6, [sp, #16]
   153ec:	str	r3, [sp, #12]
   153f0:	cmp	r0, #0
   153f4:	bne	152c4 <__printf_chk@plt+0x2b54>
   153f8:	mov	r3, #8
   153fc:	mov	r1, r7
   15400:	str	r3, [sp]
   15404:	mov	r0, r5
   15408:	movw	r2, #28068	; 0x6da4
   1540c:	add	r3, sp, #12
   15410:	movt	r2, #3
   15414:	bl	2efa8 <crc32@@Base+0x15860>
   15418:	b	152c4 <__printf_chk@plt+0x2b54>
   1541c:	bl	12494 <__stack_chk_fail@plt>
   15420:	push	{r4, r5, r6, lr}
   15424:	mov	r4, r0
   15428:	mov	r0, r1
   1542c:	bl	12308 <__strdup@plt>
   15430:	ldr	r1, [r4]
   15434:	add	r1, r1, #1
   15438:	lsl	r1, r1, #2
   1543c:	mov	r5, r0
   15440:	ldr	r0, [r4, #4]
   15444:	bl	123d4 <realloc@plt>
   15448:	ldr	r2, [r4]
   1544c:	add	r1, r2, #1
   15450:	str	r1, [r4]
   15454:	mov	r3, r0
   15458:	mov	r0, #0
   1545c:	str	r3, [r4, #4]
   15460:	str	r5, [r3, r2, lsl #2]
   15464:	pop	{r4, r5, r6, pc}
   15468:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1546c:	sub	sp, sp, #1296	; 0x510
   15470:	sub	sp, sp, #12
   15474:	movw	fp, #61168	; 0xeef0
   15478:	movt	fp, #4
   1547c:	mov	r4, r2
   15480:	str	r3, [sp, #56]	; 0x38
   15484:	movw	r3, #40512	; 0x9e40
   15488:	movt	r3, #3
   1548c:	str	r3, [sp, #96]	; 0x60
   15490:	ldr	r3, [sp, #1344]	; 0x540
   15494:	mov	r2, #0
   15498:	ldr	ip, [fp]
   1549c:	mov	r5, r0
   154a0:	mov	r6, r1
   154a4:	str	r1, [sp, #28]
   154a8:	str	r3, [sp, #60]	; 0x3c
   154ac:	movw	sl, #28084	; 0x6db4
   154b0:	ldr	r3, [sp, #1348]	; 0x544
   154b4:	movt	sl, #3
   154b8:	str	ip, [sp, #1300]	; 0x514
   154bc:	movw	r9, #28100	; 0x6dc4
   154c0:	movt	r9, #3
   154c4:	str	r3, [sp, #64]	; 0x40
   154c8:	ldr	r3, [sp, #1352]	; 0x548
   154cc:	str	r3, [sp, #68]	; 0x44
   154d0:	bl	30bf4 <crc32@@Base+0x174ac>
   154d4:	mov	r1, r4
   154d8:	mov	r2, #0
   154dc:	str	r0, [sp, #72]	; 0x48
   154e0:	mov	r0, r5
   154e4:	bl	30bf4 <crc32@@Base+0x174ac>
   154e8:	mov	r1, r6
   154ec:	mov	r2, #0
   154f0:	str	r0, [sp, #76]	; 0x4c
   154f4:	mov	r0, r5
   154f8:	bl	30bf4 <crc32@@Base+0x174ac>
   154fc:	mov	r1, r4
   15500:	mov	r2, #0
   15504:	mov	r6, r0
   15508:	str	r0, [sp, #24]
   1550c:	mov	r0, r5
   15510:	bl	30bf4 <crc32@@Base+0x174ac>
   15514:	mov	r3, #200	; 0xc8
   15518:	mov	r1, r3
   1551c:	mov	r2, #0
   15520:	str	r6, [sp, #8]
   15524:	str	r2, [sp, #88]	; 0x58
   15528:	str	r2, [sp, #92]	; 0x5c
   1552c:	mov	r2, #1
   15530:	str	sl, [sp, #4]
   15534:	str	r9, [sp]
   15538:	str	r0, [sp, #32]
   1553c:	add	r0, sp, #900	; 0x384
   15540:	bl	125cc <__snprintf_chk@plt>
   15544:	add	r0, sp, #88	; 0x58
   15548:	movw	r1, #52408	; 0xccb8
   1554c:	movt	r1, #3
   15550:	bl	15420 <__printf_chk@plt+0x2cb0>
   15554:	cmp	r0, #0
   15558:	bne	15754 <__printf_chk@plt+0x2fe4>
   1555c:	add	r1, sp, #900	; 0x384
   15560:	add	r0, sp, #88	; 0x58
   15564:	bl	15420 <__printf_chk@plt+0x2cb0>
   15568:	subs	r3, r0, #0
   1556c:	str	r3, [sp, #36]	; 0x24
   15570:	bne	15754 <__printf_chk@plt+0x2fe4>
   15574:	mov	r1, r4
   15578:	movw	r2, #28108	; 0x6dcc
   1557c:	add	r3, sp, #84	; 0x54
   15580:	movt	r2, #3
   15584:	mov	r0, r5
   15588:	bl	30ef4 <crc32@@Base+0x177ac>
   1558c:	subs	r7, r0, #0
   15590:	bne	157c8 <__printf_chk@plt+0x3058>
   15594:	ldr	r2, [pc, #1132]	; 15a08 <__printf_chk@plt+0x3298>
   15598:	mov	r3, #11
   1559c:	str	r3, [sp, #84]	; 0x54
   155a0:	mov	r3, #1
   155a4:	sub	r7, r2, #11
   155a8:	str	r3, [sp, #48]	; 0x30
   155ac:	str	r2, [sp, #40]	; 0x28
   155b0:	movw	r6, #28300	; 0x6e8c
   155b4:	movt	r6, #3
   155b8:	movw	r3, #28120	; 0x6dd8
   155bc:	movt	r3, #3
   155c0:	str	r3, [sp, #44]	; 0x2c
   155c4:	mov	r3, #0
   155c8:	str	r3, [sp, #52]	; 0x34
   155cc:	mov	r2, r7
   155d0:	ldr	r1, [sp, #28]
   155d4:	mov	r0, r5
   155d8:	bl	180dc <__printf_chk@plt+0x596c>
   155dc:	subs	r4, r0, #0
   155e0:	bge	15658 <__printf_chk@plt+0x2ee8>
   155e4:	ldr	r3, [sp, #32]
   155e8:	mov	r2, r7
   155ec:	ldr	r1, [sp, #44]	; 0x2c
   155f0:	mov	r0, #1
   155f4:	str	r3, [sp]
   155f8:	ldr	r3, [sp, #24]
   155fc:	bl	12770 <__printf_chk@plt>
   15600:	ldr	r3, [sp, #48]	; 0x30
   15604:	cmp	r3, #0
   15608:	beq	15964 <__printf_chk@plt+0x31f4>
   1560c:	mov	r0, r7
   15610:	bl	125c0 <strlen@plt>
   15614:	ldr	r3, [sp, #40]	; 0x28
   15618:	add	r0, r0, #1
   1561c:	add	r7, r7, r0
   15620:	cmp	r7, r3
   15624:	bcc	155cc <__printf_chk@plt+0x2e5c>
   15628:	ldr	r3, [sp, #52]	; 0x34
   1562c:	cmp	r3, #0
   15630:	bne	157f0 <__printf_chk@plt+0x3080>
   15634:	ldr	r3, [sp, #32]
   15638:	movw	r1, #28308	; 0x6e94
   1563c:	ldr	r2, [sp, #24]
   15640:	movt	r1, #3
   15644:	mov	r0, #1
   15648:	mvn	ip, #41	; 0x29
   1564c:	str	ip, [sp, #36]	; 0x24
   15650:	bl	12770 <__printf_chk@plt>
   15654:	b	15774 <__printf_chk@plt+0x3004>
   15658:	add	r2, sp, #1088	; 0x440
   1565c:	mov	r3, #200	; 0xc8
   15660:	add	r2, r2, #12
   15664:	mov	r1, r4
   15668:	mov	r0, r5
   1566c:	bl	312a0 <crc32@@Base+0x17b58>
   15670:	cmp	r0, #0
   15674:	blt	15794 <__printf_chk@plt+0x3024>
   15678:	add	r1, sp, #1088	; 0x440
   1567c:	add	r0, sp, #88	; 0x58
   15680:	add	r1, r1, #12
   15684:	bl	15420 <__printf_chk@plt+0x2cb0>
   15688:	subs	r8, r0, #0
   1568c:	bne	15754 <__printf_chk@plt+0x2fe4>
   15690:	ldr	r2, [sp, #24]
   15694:	mov	r3, #200	; 0xc8
   15698:	mov	r1, r3
   1569c:	str	sl, [sp, #4]
   156a0:	str	r9, [sp]
   156a4:	add	r0, sp, #900	; 0x384
   156a8:	str	r2, [sp, #8]
   156ac:	mov	r2, #1
   156b0:	bl	125cc <__snprintf_chk@plt>
   156b4:	mov	r1, r4
   156b8:	mov	r0, r5
   156bc:	bl	2da68 <crc32@@Base+0x14320>
   156c0:	subs	r4, r0, #0
   156c4:	blt	1593c <__printf_chk@plt+0x31cc>
   156c8:	mov	r2, #0
   156cc:	mov	r1, r4
   156d0:	mov	r0, r5
   156d4:	bl	30bf4 <crc32@@Base+0x174ac>
   156d8:	mov	r2, #4
   156dc:	mov	r1, r6
   156e0:	bl	1217c <strncmp@plt>
   156e4:	cmp	r0, #0
   156e8:	bne	15728 <__printf_chk@plt+0x2fb8>
   156ec:	add	r2, sp, #1088	; 0x440
   156f0:	mov	r3, #200	; 0xc8
   156f4:	add	r2, r2, #12
   156f8:	mov	r1, r4
   156fc:	mov	r0, r5
   15700:	bl	312a0 <crc32@@Base+0x17b58>
   15704:	cmp	r0, #0
   15708:	blt	15794 <__printf_chk@plt+0x3024>
   1570c:	add	r1, sp, #1088	; 0x440
   15710:	add	r0, sp, #88	; 0x58
   15714:	add	r1, r1, #12
   15718:	bl	15420 <__printf_chk@plt+0x2cb0>
   1571c:	cmp	r0, #0
   15720:	bne	15754 <__printf_chk@plt+0x2fe4>
   15724:	add	r8, r8, #1
   15728:	mov	r1, r4
   1572c:	mov	r0, r5
   15730:	bl	2dac8 <crc32@@Base+0x14380>
   15734:	subs	r4, r0, #0
   15738:	bge	156c8 <__printf_chk@plt+0x2f58>
   1573c:	cmp	r8, #0
   15740:	beq	1593c <__printf_chk@plt+0x31cc>
   15744:	ldr	r3, [sp, #52]	; 0x34
   15748:	add	r3, r3, #1
   1574c:	str	r3, [sp, #52]	; 0x34
   15750:	b	1560c <__printf_chk@plt+0x2e9c>
   15754:	movw	r1, #28364	; 0x6ecc
   15758:	ldr	r3, [sp, #32]
   1575c:	ldr	r2, [sp, #24]
   15760:	mov	r0, #1
   15764:	movt	r1, #3
   15768:	mvn	ip, #11
   1576c:	str	ip, [sp, #36]	; 0x24
   15770:	bl	12770 <__printf_chk@plt>
   15774:	ldr	r2, [sp, #1300]	; 0x514
   15778:	ldr	r3, [fp]
   1577c:	ldr	r0, [sp, #36]	; 0x24
   15780:	cmp	r2, r3
   15784:	bne	15a04 <__printf_chk@plt+0x3294>
   15788:	add	sp, sp, #1296	; 0x510
   1578c:	add	sp, sp, #12
   15790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15794:	mvn	r3, #1
   15798:	str	r3, [sp, #36]	; 0x24
   1579c:	bl	2f7b0 <crc32@@Base+0x16068>
   157a0:	ldr	r3, [sp, #32]
   157a4:	mov	r2, r7
   157a8:	movw	r1, #28412	; 0x6efc
   157ac:	movt	r1, #3
   157b0:	str	r3, [sp]
   157b4:	ldr	r3, [sp, #24]
   157b8:	str	r0, [sp, #4]
   157bc:	mov	r0, #1
   157c0:	bl	12770 <__printf_chk@plt>
   157c4:	b	15774 <__printf_chk@plt+0x3004>
   157c8:	ldr	r3, [sp, #84]	; 0x54
   157cc:	cmp	r3, #0
   157d0:	beq	157f0 <__printf_chk@plt+0x3080>
   157d4:	add	r3, r7, r3
   157d8:	str	r3, [sp, #40]	; 0x28
   157dc:	cmp	r7, r3
   157e0:	ldrcc	r3, [sp, #36]	; 0x24
   157e4:	strcc	r3, [sp, #48]	; 0x30
   157e8:	bcc	155b0 <__printf_chk@plt+0x2e40>
   157ec:	b	15634 <__printf_chk@plt+0x2ec4>
   157f0:	mov	r0, #200	; 0xc8
   157f4:	add	r3, sp, #104	; 0x68
   157f8:	str	r0, [sp, #16]
   157fc:	add	r0, sp, #1088	; 0x440
   15800:	mov	r4, #1
   15804:	add	r0, r0, #12
   15808:	ldr	r2, [sp, #88]	; 0x58
   1580c:	add	r6, sp, #100	; 0x64
   15810:	str	r0, [sp, #12]
   15814:	sub	r3, r3, #8
   15818:	mov	r0, #100	; 0x64
   1581c:	ldr	r1, [sp, #92]	; 0x5c
   15820:	str	r0, [sp, #8]
   15824:	mov	r0, r5
   15828:	str	r6, [sp, #4]
   1582c:	str	r4, [sp, #20]
   15830:	str	r4, [sp]
   15834:	bl	31b88 <crc32@@Base+0x18440>
   15838:	subs	r9, r0, #0
   1583c:	blt	15998 <__printf_chk@plt+0x3228>
   15840:	beq	15970 <__printf_chk@plt+0x3200>
   15844:	mov	r1, r6
   15848:	mov	r0, r5
   1584c:	mov	r3, #0
   15850:	mov	r2, r9
   15854:	bl	18a98 <__printf_chk@plt+0x6328>
   15858:	subs	sl, r0, #0
   1585c:	beq	159e4 <__printf_chk@plt+0x3274>
   15860:	ldr	r4, [sp, #88]	; 0x58
   15864:	cmp	r4, #0
   15868:	ble	15920 <__printf_chk@plt+0x31b0>
   1586c:	ldr	r7, [sp, #92]	; 0x5c
   15870:	mov	r8, #0
   15874:	add	r4, r7, r4, lsl #2
   15878:	mov	r6, r7
   1587c:	mov	r5, r7
   15880:	ldr	r0, [r5], #4
   15884:	add	r8, r8, #1
   15888:	bl	125c0 <strlen@plt>
   1588c:	cmp	r4, r5
   15890:	add	r8, r8, r0
   15894:	bne	15880 <__printf_chk@plt+0x3110>
   15898:	mov	r0, r8
   1589c:	bl	125a8 <malloc@plt>
   158a0:	subs	r8, r0, #0
   158a4:	beq	159c4 <__printf_chk@plt+0x3254>
   158a8:	mov	r4, #0
   158ac:	ldr	r1, [r6]
   158b0:	add	r0, r8, r4
   158b4:	bl	123e0 <strcpy@plt>
   158b8:	ldr	r0, [r6], #4
   158bc:	bl	125c0 <strlen@plt>
   158c0:	add	r4, r4, #1
   158c4:	cmp	r5, r6
   158c8:	add	r4, r4, r0
   158cc:	bne	158ac <__printf_chk@plt+0x313c>
   158d0:	mov	r5, #0
   158d4:	b	158dc <__printf_chk@plt+0x316c>
   158d8:	ldr	r7, [sp, #92]	; 0x5c
   158dc:	ldr	r0, [r7, r5, lsl #2]
   158e0:	add	r5, r5, #1
   158e4:	bl	12128 <free@plt>
   158e8:	ldr	r3, [sp, #88]	; 0x58
   158ec:	cmp	r5, r3
   158f0:	blt	158d8 <__printf_chk@plt+0x3168>
   158f4:	ldr	r0, [sp, #92]	; 0x5c
   158f8:	bl	12128 <free@plt>
   158fc:	ldr	r3, [sp, #60]	; 0x3c
   15900:	str	r9, [r3]
   15904:	ldr	r3, [sp, #56]	; 0x38
   15908:	str	sl, [r3]
   1590c:	ldr	r3, [sp, #64]	; 0x40
   15910:	str	r8, [r3]
   15914:	ldr	r3, [sp, #68]	; 0x44
   15918:	str	r4, [r3]
   1591c:	b	15774 <__printf_chk@plt+0x3004>
   15920:	mov	r0, #0
   15924:	bl	125a8 <malloc@plt>
   15928:	subs	r8, r0, #0
   1592c:	beq	159c4 <__printf_chk@plt+0x3254>
   15930:	ldr	r0, [sp, #92]	; 0x5c
   15934:	mov	r4, #0
   15938:	b	158f8 <__printf_chk@plt+0x3188>
   1593c:	ldr	r3, [sp, #32]
   15940:	movw	r1, #28176	; 0x6e10
   15944:	str	r7, [sp]
   15948:	mov	r0, #1
   1594c:	ldr	r2, [sp, #24]
   15950:	movt	r1, #3
   15954:	bl	12770 <__printf_chk@plt>
   15958:	mvn	r3, #41	; 0x29
   1595c:	str	r3, [sp, #36]	; 0x24
   15960:	b	15774 <__printf_chk@plt+0x3004>
   15964:	mvn	r3, #1
   15968:	str	r3, [sp, #36]	; 0x24
   1596c:	b	15774 <__printf_chk@plt+0x3004>
   15970:	bl	2f7b0 <crc32@@Base+0x16068>
   15974:	ldrd	r2, [sp, #72]	; 0x48
   15978:	movw	r1, #28520	; 0x6f68
   1597c:	movt	r1, #3
   15980:	mvn	ip, #21
   15984:	str	ip, [sp, #36]	; 0x24
   15988:	str	r0, [sp]
   1598c:	mov	r0, r4
   15990:	bl	12770 <__printf_chk@plt>
   15994:	b	15774 <__printf_chk@plt+0x3004>
   15998:	mov	r0, #0
   1599c:	mvn	r3, #4
   159a0:	str	r3, [sp, #36]	; 0x24
   159a4:	bl	2f7b0 <crc32@@Base+0x16068>
   159a8:	ldrd	r2, [sp, #72]	; 0x48
   159ac:	movw	r1, #28476	; 0x6f3c
   159b0:	movt	r1, #3
   159b4:	str	r0, [sp]
   159b8:	mov	r0, r4
   159bc:	bl	12770 <__printf_chk@plt>
   159c0:	b	15774 <__printf_chk@plt+0x3004>
   159c4:	ldrd	r2, [sp, #72]	; 0x48
   159c8:	movw	r1, #28616	; 0x6fc8
   159cc:	mov	r0, #1
   159d0:	movt	r1, #3
   159d4:	mvn	ip, #11
   159d8:	str	ip, [sp, #36]	; 0x24
   159dc:	bl	12770 <__printf_chk@plt>
   159e0:	b	15774 <__printf_chk@plt+0x3004>
   159e4:	ldrd	r2, [sp, #72]	; 0x48
   159e8:	mov	r0, r4
   159ec:	movw	r1, #28568	; 0x6f98
   159f0:	movt	r1, #3
   159f4:	mvn	ip, #11
   159f8:	str	ip, [sp, #36]	; 0x24
   159fc:	bl	12770 <__printf_chk@plt>
   15a00:	b	15774 <__printf_chk@plt+0x3004>
   15a04:	bl	12494 <__stack_chk_fail@plt>
   15a08:	andeq	r6, r3, pc, lsr #25
   15a0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a10:	movw	ip, #61168	; 0xeef0
   15a14:	sub	sp, sp, #172	; 0xac
   15a18:	movt	ip, #4
   15a1c:	mov	r5, r2
   15a20:	mov	r4, r3
   15a24:	str	ip, [sp, #36]	; 0x24
   15a28:	mov	r7, r0
   15a2c:	ldr	ip, [ip]
   15a30:	mov	r0, r2
   15a34:	str	r1, [sp, #48]	; 0x30
   15a38:	add	r2, sp, #60	; 0x3c
   15a3c:	mov	r1, r3
   15a40:	add	r3, sp, #64	; 0x40
   15a44:	str	ip, [sp, #164]	; 0xa4
   15a48:	ldr	ip, [sp, #208]	; 0xd0
   15a4c:	str	ip, [sp, #40]	; 0x28
   15a50:	ldr	ip, [sp, #216]	; 0xd8
   15a54:	str	ip, [sp, #28]
   15a58:	ldr	ip, [sp, #220]	; 0xdc
   15a5c:	str	ip, [sp, #44]	; 0x2c
   15a60:	bl	168c4 <__printf_chk@plt+0x4154>
   15a64:	subs	r3, r0, #0
   15a68:	str	r3, [sp, #20]
   15a6c:	bne	15e04 <__printf_chk@plt+0x3694>
   15a70:	mov	r1, r4
   15a74:	ldr	r2, [sp, #20]
   15a78:	mov	r0, r5
   15a7c:	bl	30bf4 <crc32@@Base+0x174ac>
   15a80:	mov	r1, r4
   15a84:	str	r0, [sp, #24]
   15a88:	mov	r0, r5
   15a8c:	bl	2da68 <crc32@@Base+0x14320>
   15a90:	subs	r4, r0, #0
   15a94:	blt	15c10 <__printf_chk@plt+0x34a0>
   15a98:	ldr	r3, [sp, #212]	; 0xd4
   15a9c:	movw	r6, #28300	; 0x6e8c
   15aa0:	movw	r8, #28952	; 0x7118
   15aa4:	movt	r6, #3
   15aa8:	cmp	r3, #0
   15aac:	movt	r8, #3
   15ab0:	movw	r3, #35276	; 0x89cc
   15ab4:	movt	r3, #3
   15ab8:	moveq	r3, #0
   15abc:	str	r3, [sp, #32]
   15ac0:	movw	r3, #27900	; 0x6cfc
   15ac4:	movt	r3, #3
   15ac8:	str	r3, [sp, #52]	; 0x34
   15acc:	b	15b04 <__printf_chk@plt+0x3394>
   15ad0:	cmp	r7, #0
   15ad4:	beq	15af0 <__printf_chk@plt+0x3380>
   15ad8:	mov	r0, r9
   15adc:	mov	r2, #9
   15ae0:	mov	r1, r8
   15ae4:	bl	1217c <strncmp@plt>
   15ae8:	cmp	r0, #0
   15aec:	beq	15c30 <__printf_chk@plt+0x34c0>
   15af0:	mov	r1, r4
   15af4:	mov	r0, r5
   15af8:	bl	2dac8 <crc32@@Base+0x14380>
   15afc:	subs	r4, r0, #0
   15b00:	blt	15c10 <__printf_chk@plt+0x34a0>
   15b04:	mov	r2, #0
   15b08:	mov	r1, r4
   15b0c:	mov	r0, r5
   15b10:	bl	30bf4 <crc32@@Base+0x174ac>
   15b14:	mov	r2, #4
   15b18:	mov	r1, r6
   15b1c:	mov	r9, r0
   15b20:	bl	1217c <strncmp@plt>
   15b24:	subs	r2, r0, #0
   15b28:	bne	15ad0 <__printf_chk@plt+0x3360>
   15b2c:	mov	r1, r4
   15b30:	mov	r0, r5
   15b34:	ldr	r9, [sp, #60]	; 0x3c
   15b38:	ldr	sl, [sp, #64]	; 0x40
   15b3c:	bl	30bf4 <crc32@@Base+0x174ac>
   15b40:	add	r2, sp, #84	; 0x54
   15b44:	mov	r1, r4
   15b48:	mov	fp, r0
   15b4c:	mov	r0, r5
   15b50:	bl	173f8 <__printf_chk@plt+0x4c88>
   15b54:	cmp	r0, #0
   15b58:	bne	15db4 <__printf_chk@plt+0x3644>
   15b5c:	mov	r1, sl
   15b60:	add	ip, sp, #76	; 0x4c
   15b64:	ldr	r2, [sp, #84]	; 0x54
   15b68:	mov	r0, r9
   15b6c:	add	r3, sp, #132	; 0x84
   15b70:	str	ip, [sp]
   15b74:	bl	17544 <__printf_chk@plt+0x4dd4>
   15b78:	subs	sl, r0, #0
   15b7c:	bne	15dd8 <__printf_chk@plt+0x3668>
   15b80:	ldr	ip, [sp, #76]	; 0x4c
   15b84:	add	r3, sp, #132	; 0x84
   15b88:	movw	r2, #28000	; 0x6d60
   15b8c:	mov	r1, r4
   15b90:	movt	r2, #3
   15b94:	mov	r0, r5
   15b98:	str	ip, [sp]
   15b9c:	bl	2efa8 <crc32@@Base+0x15860>
   15ba0:	cmp	r0, #0
   15ba4:	beq	15af0 <__printf_chk@plt+0x3380>
   15ba8:	mov	r1, r4
   15bac:	mov	r9, r0
   15bb0:	mov	r2, sl
   15bb4:	mov	r0, r5
   15bb8:	bl	30bf4 <crc32@@Base+0x174ac>
   15bbc:	mov	r4, r0
   15bc0:	mov	r0, r9
   15bc4:	bl	2f7b0 <crc32@@Base+0x16068>
   15bc8:	mov	r3, r4
   15bcc:	movw	r2, #28000	; 0x6d60
   15bd0:	movw	r1, #28844	; 0x70ac
   15bd4:	movt	r2, #3
   15bd8:	movt	r1, #3
   15bdc:	str	r0, [sp]
   15be0:	mov	r0, #1
   15be4:	bl	12770 <__printf_chk@plt>
   15be8:	cmn	r9, #3
   15bec:	movw	r1, #28892	; 0x70dc
   15bf0:	ldr	r3, [sp, #24]
   15bf4:	mov	r2, fp
   15bf8:	mov	r0, #1
   15bfc:	movt	r1, #3
   15c00:	mvnne	ip, #4
   15c04:	mvneq	ip, #27
   15c08:	str	ip, [sp, #20]
   15c0c:	bl	12770 <__printf_chk@plt>
   15c10:	ldr	r3, [sp, #36]	; 0x24
   15c14:	ldr	r2, [sp, #164]	; 0xa4
   15c18:	ldr	r0, [sp, #20]
   15c1c:	ldr	r3, [r3]
   15c20:	cmp	r2, r3
   15c24:	bne	15e1c <__printf_chk@plt+0x36ac>
   15c28:	add	sp, sp, #172	; 0xac
   15c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c30:	ldr	r3, [sp, #28]
   15c34:	mov	r2, r5
   15c38:	str	r4, [sp]
   15c3c:	add	r0, sp, #84	; 0x54
   15c40:	mov	r1, r7
   15c44:	ldr	sl, [sp, #60]	; 0x3c
   15c48:	str	r3, [sp, #8]
   15c4c:	ldr	r3, [sp, #32]
   15c50:	ldr	r9, [sp, #64]	; 0x40
   15c54:	str	r3, [sp, #4]
   15c58:	ldr	r3, [sp, #24]
   15c5c:	bl	15114 <__printf_chk@plt+0x29a4>
   15c60:	subs	r2, r0, #0
   15c64:	bne	15cd0 <__printf_chk@plt+0x3560>
   15c68:	mov	r1, r4
   15c6c:	mov	r0, r5
   15c70:	bl	30bf4 <crc32@@Base+0x174ac>
   15c74:	add	r1, sp, #72	; 0x48
   15c78:	str	r9, [sp, #80]	; 0x50
   15c7c:	add	r3, sp, #68	; 0x44
   15c80:	str	r1, [sp]
   15c84:	mov	r2, #1
   15c88:	str	sl, [sp, #76]	; 0x4c
   15c8c:	add	r1, sp, #76	; 0x4c
   15c90:	mov	fp, r0
   15c94:	ldr	r0, [sp, #112]	; 0x70
   15c98:	ldr	r9, [r0, #8]
   15c9c:	add	r0, sp, #84	; 0x54
   15ca0:	blx	r9
   15ca4:	subs	r9, r0, #0
   15ca8:	beq	15cdc <__printf_chk@plt+0x356c>
   15cac:	str	r9, [sp]
   15cb0:	mov	r2, fp
   15cb4:	movw	r1, #28964	; 0x7124
   15cb8:	ldr	r3, [sp, #24]
   15cbc:	movt	r1, #3
   15cc0:	mov	r0, #1
   15cc4:	bl	12770 <__printf_chk@plt>
   15cc8:	cmn	r9, #2
   15ccc:	beq	15af0 <__printf_chk@plt+0x3380>
   15cd0:	mvn	r3, #0
   15cd4:	str	r3, [sp, #20]
   15cd8:	b	15c10 <__printf_chk@plt+0x34a0>
   15cdc:	ldr	ip, [sp, #44]	; 0x2c
   15ce0:	mov	r1, r4
   15ce4:	str	r9, [sp, #8]
   15ce8:	mov	r0, r5
   15cec:	str	r9, [sp, #4]
   15cf0:	str	ip, [sp, #12]
   15cf4:	ldr	ip, [sp, #40]	; 0x28
   15cf8:	ldr	r3, [sp, #72]	; 0x48
   15cfc:	ldr	r2, [sp, #68]	; 0x44
   15d00:	str	ip, [sp]
   15d04:	bl	1527c <__printf_chk@plt+0x2b0c>
   15d08:	subs	r9, r0, #0
   15d0c:	beq	15d4c <__printf_chk@plt+0x35dc>
   15d10:	cmn	r9, #3
   15d14:	mvneq	r3, #27
   15d18:	streq	r3, [sp, #20]
   15d1c:	beq	15c10 <__printf_chk@plt+0x34a0>
   15d20:	bl	2f7b0 <crc32@@Base+0x16068>
   15d24:	ldr	r3, [sp, #24]
   15d28:	mov	r2, fp
   15d2c:	movw	r1, #29024	; 0x7160
   15d30:	movt	r1, #3
   15d34:	mvn	ip, #0
   15d38:	str	ip, [sp, #20]
   15d3c:	str	r0, [sp]
   15d40:	mov	r0, #1
   15d44:	bl	12770 <__printf_chk@plt>
   15d48:	b	15c10 <__printf_chk@plt+0x34a0>
   15d4c:	ldr	r0, [sp, #68]	; 0x44
   15d50:	bl	12128 <free@plt>
   15d54:	mov	r1, r4
   15d58:	mov	r3, r9
   15d5c:	ldr	r2, [sp, #52]	; 0x34
   15d60:	mov	r0, r5
   15d64:	bl	30ef4 <crc32@@Base+0x177ac>
   15d68:	ldr	r1, [sp, #48]	; 0x30
   15d6c:	cmp	r1, #0
   15d70:	str	r0, [sp, #88]	; 0x58
   15d74:	beq	15af0 <__printf_chk@plt+0x3380>
   15d78:	ldr	r3, [sp, #112]	; 0x70
   15d7c:	add	r0, sp, #84	; 0x54
   15d80:	ldr	r3, [r3, #12]
   15d84:	blx	r3
   15d88:	cmp	r0, #0
   15d8c:	beq	15af0 <__printf_chk@plt+0x3380>
   15d90:	mov	ip, r0
   15d94:	ldr	r3, [sp, #24]
   15d98:	mov	r2, fp
   15d9c:	movw	r1, #29096	; 0x71a8
   15da0:	mov	r0, #1
   15da4:	movt	r1, #3
   15da8:	str	ip, [sp, #20]
   15dac:	bl	12770 <__printf_chk@plt>
   15db0:	b	15c10 <__printf_chk@plt+0x34a0>
   15db4:	ldr	r3, [sp, #24]
   15db8:	mov	r2, fp
   15dbc:	movw	r1, #28704	; 0x7020
   15dc0:	mov	r0, #1
   15dc4:	movt	r1, #3
   15dc8:	mvn	ip, #1
   15dcc:	str	ip, [sp, #20]
   15dd0:	bl	12770 <__printf_chk@plt>
   15dd4:	b	15c10 <__printf_chk@plt+0x34a0>
   15dd8:	ldr	r1, [sp, #24]
   15ddc:	mov	r3, fp
   15de0:	ldr	r2, [sp, #84]	; 0x54
   15de4:	mov	r0, #1
   15de8:	mvn	ip, #92	; 0x5c
   15dec:	str	ip, [sp, #20]
   15df0:	str	r1, [sp]
   15df4:	movw	r1, #28772	; 0x7064
   15df8:	movt	r1, #3
   15dfc:	bl	12770 <__printf_chk@plt>
   15e00:	b	15c10 <__printf_chk@plt+0x34a0>
   15e04:	movw	r0, #28676	; 0x7004
   15e08:	movt	r0, #3
   15e0c:	bl	1226c <puts@plt>
   15e10:	mvn	r3, #0
   15e14:	str	r3, [sp, #20]
   15e18:	b	15c10 <__printf_chk@plt+0x34a0>
   15e1c:	bl	12494 <__stack_chk_fail@plt>
   15e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e24:	movw	ip, #61168	; 0xeef0
   15e28:	sub	sp, sp, #132	; 0x84
   15e2c:	movt	ip, #4
   15e30:	mov	r4, r2
   15e34:	mov	r8, r0
   15e38:	ldr	r2, [ip]
   15e3c:	mov	r0, r4
   15e40:	str	r3, [sp, #24]
   15e44:	ldr	r3, [sp, #176]	; 0xb0
   15e48:	str	r1, [sp, #36]	; 0x24
   15e4c:	movw	r1, #27024	; 0x6990
   15e50:	movt	r1, #3
   15e54:	str	ip, [sp, #40]	; 0x28
   15e58:	str	r2, [sp, #124]	; 0x7c
   15e5c:	ldr	r5, [sp, #168]	; 0xa8
   15e60:	ldr	r9, [sp, #172]	; 0xac
   15e64:	str	r3, [sp, #28]
   15e68:	bl	31250 <crc32@@Base+0x17b08>
   15e6c:	subs	r6, r0, #0
   15e70:	blt	16110 <__printf_chk@plt+0x39a0>
   15e74:	mov	r1, r6
   15e78:	mov	r0, r4
   15e7c:	bl	2da68 <crc32@@Base+0x14320>
   15e80:	subs	r7, r0, #0
   15e84:	blt	15efc <__printf_chk@plt+0x378c>
   15e88:	ldr	sl, [sp, #36]	; 0x24
   15e8c:	ldr	fp, [sp, #24]
   15e90:	ldr	r6, [sp, #28]
   15e94:	b	15eac <__printf_chk@plt+0x373c>
   15e98:	mov	r1, r7
   15e9c:	mov	r0, r4
   15ea0:	bl	2dac8 <crc32@@Base+0x14380>
   15ea4:	subs	r7, r0, #0
   15ea8:	blt	15efc <__printf_chk@plt+0x378c>
   15eac:	str	r6, [sp, #12]
   15eb0:	mov	r3, r7
   15eb4:	str	r9, [sp, #8]
   15eb8:	mov	r2, r4
   15ebc:	str	r5, [sp, #4]
   15ec0:	mov	r1, sl
   15ec4:	str	fp, [sp]
   15ec8:	mov	r0, r8
   15ecc:	bl	15a0c <__printf_chk@plt+0x329c>
   15ed0:	cmp	r0, #0
   15ed4:	beq	15e98 <__printf_chk@plt+0x3728>
   15ed8:	mov	r6, r0
   15edc:	ldr	r3, [sp, #40]	; 0x28
   15ee0:	mov	r0, r6
   15ee4:	ldr	r2, [sp, #124]	; 0x7c
   15ee8:	ldr	r3, [r3]
   15eec:	cmp	r2, r3
   15ef0:	bne	161d0 <__printf_chk@plt+0x3a60>
   15ef4:	add	sp, sp, #132	; 0x84
   15ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15efc:	cmp	r8, #0
   15f00:	beq	16108 <__printf_chk@plt+0x3998>
   15f04:	movw	r1, #28084	; 0x6db4
   15f08:	mov	r0, r4
   15f0c:	movt	r1, #3
   15f10:	bl	31250 <crc32@@Base+0x17b08>
   15f14:	subs	r1, r0, #0
   15f18:	blt	161a8 <__printf_chk@plt+0x3a38>
   15f1c:	mov	r0, r4
   15f20:	bl	2da68 <crc32@@Base+0x14320>
   15f24:	subs	fp, r0, #0
   15f28:	blt	16108 <__printf_chk@plt+0x3998>
   15f2c:	cmp	r5, #0
   15f30:	movw	r7, #28952	; 0x7118
   15f34:	movt	r7, #3
   15f38:	movw	r3, #29172	; 0x71f4
   15f3c:	movw	r2, #29180	; 0x71fc
   15f40:	movt	r3, #3
   15f44:	movt	r2, #3
   15f48:	moveq	r3, #0
   15f4c:	str	r2, [sp, #32]
   15f50:	str	r3, [sp, #16]
   15f54:	movw	r3, #27900	; 0x6cfc
   15f58:	str	r8, [sp, #20]
   15f5c:	movt	r3, #3
   15f60:	str	r3, [sp, #44]	; 0x2c
   15f64:	mov	r2, #0
   15f68:	mov	r1, fp
   15f6c:	mov	r0, r4
   15f70:	bl	30bf4 <crc32@@Base+0x174ac>
   15f74:	mov	r1, fp
   15f78:	mov	sl, r0
   15f7c:	mov	r0, r4
   15f80:	bl	2da68 <crc32@@Base+0x14320>
   15f84:	subs	r5, r0, #0
   15f88:	bge	15fc0 <__printf_chk@plt+0x3850>
   15f8c:	b	160f4 <__printf_chk@plt+0x3984>
   15f90:	mov	r2, r8
   15f94:	mov	r3, sl
   15f98:	ldr	r1, [sp, #32]
   15f9c:	mov	r0, #1
   15fa0:	bl	12770 <__printf_chk@plt>
   15fa4:	cmn	r6, #2
   15fa8:	bne	161a0 <__printf_chk@plt+0x3a30>
   15fac:	mov	r1, r5
   15fb0:	mov	r0, r4
   15fb4:	bl	2dac8 <crc32@@Base+0x14380>
   15fb8:	subs	r5, r0, #0
   15fbc:	blt	160f4 <__printf_chk@plt+0x3984>
   15fc0:	mov	r2, #0
   15fc4:	mov	r1, r5
   15fc8:	mov	r0, r4
   15fcc:	bl	30bf4 <crc32@@Base+0x174ac>
   15fd0:	mov	r2, #9
   15fd4:	mov	r1, r7
   15fd8:	bl	1217c <strncmp@plt>
   15fdc:	subs	r2, r0, #0
   15fe0:	bne	15fac <__printf_chk@plt+0x383c>
   15fe4:	mov	r1, r5
   15fe8:	mov	r0, r4
   15fec:	bl	30bf4 <crc32@@Base+0x174ac>
   15ff0:	add	r2, sp, #60	; 0x3c
   15ff4:	add	r3, sp, #56	; 0x38
   15ff8:	str	r2, [sp, #8]
   15ffc:	str	r3, [sp, #4]
   16000:	add	r2, sp, #64	; 0x40
   16004:	add	r3, sp, #52	; 0x34
   16008:	str	r2, [sp]
   1600c:	mov	r1, fp
   16010:	mov	r2, r5
   16014:	mov	r8, r0
   16018:	mov	r0, r4
   1601c:	bl	15468 <__printf_chk@plt+0x2cf8>
   16020:	cmp	r0, #0
   16024:	bne	161a0 <__printf_chk@plt+0x3a30>
   16028:	ldr	r3, [sp, #16]
   1602c:	add	r0, sp, #76	; 0x4c
   16030:	str	r9, [sp, #8]
   16034:	mov	r2, r4
   16038:	str	r5, [sp]
   1603c:	str	r3, [sp, #4]
   16040:	mov	r3, sl
   16044:	ldr	r1, [sp, #20]
   16048:	bl	15114 <__printf_chk@plt+0x29a4>
   1604c:	cmp	r0, #0
   16050:	bne	161a0 <__printf_chk@plt+0x3a30>
   16054:	ldr	ip, [sp, #104]	; 0x68
   16058:	add	lr, sp, #72	; 0x48
   1605c:	ldr	r2, [sp, #64]	; 0x40
   16060:	add	r3, sp, #68	; 0x44
   16064:	str	lr, [sp]
   16068:	add	r0, sp, #76	; 0x4c
   1606c:	ldr	r6, [ip, #8]
   16070:	ldr	r1, [sp, #52]	; 0x34
   16074:	blx	r6
   16078:	mov	r6, r0
   1607c:	ldr	r0, [sp, #52]	; 0x34
   16080:	bl	12128 <free@plt>
   16084:	cmp	r6, #0
   16088:	bne	15f90 <__printf_chk@plt+0x3820>
   1608c:	ldr	r6, [sp, #28]
   16090:	mov	r1, r5
   16094:	ldr	lr, [sp, #60]	; 0x3c
   16098:	mov	r0, r4
   1609c:	ldr	ip, [sp, #56]	; 0x38
   160a0:	str	r6, [sp, #12]
   160a4:	ldr	r6, [sp, #24]
   160a8:	ldr	r3, [sp, #72]	; 0x48
   160ac:	ldr	r2, [sp, #68]	; 0x44
   160b0:	stm	sp, {r6, ip, lr}
   160b4:	bl	1527c <__printf_chk@plt+0x2b0c>
   160b8:	subs	r6, r0, #0
   160bc:	beq	16134 <__printf_chk@plt+0x39c4>
   160c0:	cmn	r6, #3
   160c4:	mvneq	r6, #27
   160c8:	beq	15edc <__printf_chk@plt+0x376c>
   160cc:	bl	2f7b0 <crc32@@Base+0x16068>
   160d0:	mov	r3, sl
   160d4:	mov	r2, r8
   160d8:	movw	r1, #29024	; 0x7160
   160dc:	movt	r1, #3
   160e0:	mvn	r6, #0
   160e4:	str	r0, [sp]
   160e8:	mov	r0, #1
   160ec:	bl	12770 <__printf_chk@plt>
   160f0:	b	15edc <__printf_chk@plt+0x376c>
   160f4:	mov	r1, fp
   160f8:	mov	r0, r4
   160fc:	bl	2dac8 <crc32@@Base+0x14380>
   16100:	subs	fp, r0, #0
   16104:	bge	15f64 <__printf_chk@plt+0x37f4>
   16108:	mov	r6, #0
   1610c:	b	15edc <__printf_chk@plt+0x376c>
   16110:	bl	2f7b0 <crc32@@Base+0x16068>
   16114:	movw	r2, #27024	; 0x6990
   16118:	movw	r1, #27032	; 0x6998
   1611c:	movt	r2, #3
   16120:	movt	r1, #3
   16124:	mov	r3, r0
   16128:	mov	r0, #1
   1612c:	bl	12770 <__printf_chk@plt>
   16130:	b	15edc <__printf_chk@plt+0x376c>
   16134:	ldr	r0, [sp, #68]	; 0x44
   16138:	bl	12128 <free@plt>
   1613c:	ldr	r0, [sp, #56]	; 0x38
   16140:	bl	12128 <free@plt>
   16144:	mov	r1, r5
   16148:	mov	r3, r6
   1614c:	ldr	r2, [sp, #44]	; 0x2c
   16150:	mov	r0, r4
   16154:	bl	30ef4 <crc32@@Base+0x177ac>
   16158:	ldr	r1, [sp, #36]	; 0x24
   1615c:	cmp	r1, #0
   16160:	str	r0, [sp, #80]	; 0x50
   16164:	beq	15fac <__printf_chk@plt+0x383c>
   16168:	ldr	r3, [sp, #104]	; 0x68
   1616c:	add	r0, sp, #76	; 0x4c
   16170:	ldr	r3, [r3, #12]
   16174:	blx	r3
   16178:	cmp	r0, #0
   1617c:	beq	15fac <__printf_chk@plt+0x383c>
   16180:	mov	r6, r0
   16184:	mov	r2, r8
   16188:	mov	r3, sl
   1618c:	movw	r1, #29236	; 0x7234
   16190:	mov	r0, #1
   16194:	movt	r1, #3
   16198:	bl	12770 <__printf_chk@plt>
   1619c:	b	15edc <__printf_chk@plt+0x376c>
   161a0:	mvn	r6, #0
   161a4:	b	15edc <__printf_chk@plt+0x376c>
   161a8:	bl	2f7b0 <crc32@@Base+0x16068>
   161ac:	movw	r2, #28084	; 0x6db4
   161b0:	movw	r1, #27032	; 0x6998
   161b4:	movt	r2, #3
   161b8:	movt	r1, #3
   161bc:	mvn	r6, #1
   161c0:	mov	r3, r0
   161c4:	mov	r0, #1
   161c8:	bl	12770 <__printf_chk@plt>
   161cc:	b	15edc <__printf_chk@plt+0x376c>
   161d0:	bl	12494 <__stack_chk_fail@plt>
   161d4:	push	{r4, r5, r6, lr}
   161d8:	mov	r1, #0
   161dc:	mov	r4, r0
   161e0:	bl	17f7c <__printf_chk@plt+0x580c>
   161e4:	subs	r5, r0, #0
   161e8:	beq	16220 <__printf_chk@plt+0x3ab0>
   161ec:	movw	r1, #29320	; 0x7288
   161f0:	mov	r0, #1
   161f4:	movt	r1, #3
   161f8:	bl	12770 <__printf_chk@plt>
   161fc:	mov	r1, r5
   16200:	mov	r0, r4
   16204:	bl	193a8 <__printf_chk@plt+0x6c38>
   16208:	cmp	r0, #0
   1620c:	popne	{r4, r5, r6, pc}
   16210:	mov	r1, r5
   16214:	mov	r0, r4
   16218:	pop	{r4, r5, r6, lr}
   1621c:	b	194b4 <__printf_chk@plt+0x6d44>
   16220:	mvn	r0, #0
   16224:	pop	{r4, r5, r6, pc}
   16228:	push	{r4, r5, r6, lr}
   1622c:	movw	r4, #61168	; 0xeef0
   16230:	movt	r4, #4
   16234:	sub	sp, sp, #8
   16238:	mov	r5, r3
   1623c:	mov	r6, r2
   16240:	ldr	ip, [r4]
   16244:	mov	r3, sp
   16248:	str	ip, [sp, #4]
   1624c:	bl	30ef4 <crc32@@Base+0x177ac>
   16250:	cmp	r0, #0
   16254:	beq	162ac <__printf_chk@plt+0x3b3c>
   16258:	ldr	r3, [sp]
   1625c:	cmp	r3, #4
   16260:	bhi	16290 <__printf_chk@plt+0x3b20>
   16264:	asrs	r3, r3, #2
   16268:	ldrne	r3, [r0]
   1626c:	mov	r0, #0
   16270:	revne	r3, r3
   16274:	str	r3, [r5]
   16278:	ldr	r2, [sp, #4]
   1627c:	ldr	r3, [r4]
   16280:	cmp	r2, r3
   16284:	bne	162b4 <__printf_chk@plt+0x3b44>
   16288:	add	sp, sp, #8
   1628c:	pop	{r4, r5, r6, pc}
   16290:	mov	r2, r6
   16294:	movw	r1, #29468	; 0x731c
   16298:	mov	r0, #1
   1629c:	movt	r1, #3
   162a0:	bl	12770 <__printf_chk@plt>
   162a4:	mvn	r0, #0
   162a8:	b	16278 <__printf_chk@plt+0x3b08>
   162ac:	mvn	r0, #0
   162b0:	b	16278 <__printf_chk@plt+0x3b08>
   162b4:	bl	12494 <__stack_chk_fail@plt>
   162b8:	push	{r4, r5, r6, r7, lr}
   162bc:	movw	r7, #61168	; 0xeef0
   162c0:	movt	r7, #4
   162c4:	sub	sp, sp, #12
   162c8:	add	r4, sp, #8
   162cc:	mov	r5, #0
   162d0:	ldr	r3, [r7]
   162d4:	mov	r6, r0
   162d8:	str	r5, [r4, #-8]!
   162dc:	mov	r2, r4
   162e0:	str	r3, [sp, #4]
   162e4:	bl	2d978 <crc32@@Base+0x14230>
   162e8:	subs	r1, r0, #0
   162ec:	blt	16328 <__printf_chk@plt+0x3bb8>
   162f0:	ldr	r3, [sp]
   162f4:	cmp	r3, r5
   162f8:	bgt	1630c <__printf_chk@plt+0x3b9c>
   162fc:	b	16328 <__printf_chk@plt+0x3bb8>
   16300:	ldr	r3, [sp]
   16304:	cmp	r3, #0
   16308:	ble	16328 <__printf_chk@plt+0x3bb8>
   1630c:	cmp	r3, #1
   16310:	mov	r2, r4
   16314:	mov	r0, r6
   16318:	addeq	r5, r5, #1
   1631c:	bl	2d978 <crc32@@Base+0x14230>
   16320:	subs	r1, r0, #0
   16324:	bge	16300 <__printf_chk@plt+0x3b90>
   16328:	ldr	r2, [sp, #4]
   1632c:	mov	r0, r5
   16330:	ldr	r3, [r7]
   16334:	cmp	r2, r3
   16338:	bne	16344 <__printf_chk@plt+0x3bd4>
   1633c:	add	sp, sp, #12
   16340:	pop	{r4, r5, r6, r7, pc}
   16344:	bl	12494 <__stack_chk_fail@plt>
   16348:	push	{r4, r5, lr}
   1634c:	movw	r4, #61168	; 0xeef0
   16350:	movt	r4, #4
   16354:	sub	sp, sp, #12
   16358:	mov	r5, r2
   1635c:	movw	r2, #27276	; 0x6a8c
   16360:	ldr	ip, [r4]
   16364:	mov	r3, sp
   16368:	movt	r2, #3
   1636c:	str	ip, [sp, #4]
   16370:	bl	30ef4 <crc32@@Base+0x177ac>
   16374:	ldr	r2, [sp, #4]
   16378:	str	r0, [r5]
   1637c:	ldr	r3, [r4]
   16380:	cmp	r2, r3
   16384:	bne	1639c <__printf_chk@plt+0x3c2c>
   16388:	clz	r0, r0
   1638c:	lsr	r0, r0, #5
   16390:	rsb	r0, r0, #0
   16394:	add	sp, sp, #12
   16398:	pop	{r4, r5, pc}
   1639c:	bl	12494 <__stack_chk_fail@plt>
   163a0:	push	{r4, r5, lr}
   163a4:	movw	r4, #61168	; 0xeef0
   163a8:	movt	r4, #4
   163ac:	sub	sp, sp, #12
   163b0:	mov	r5, r2
   163b4:	movw	r2, #29500	; 0x733c
   163b8:	ldr	ip, [r4]
   163bc:	mov	r3, sp
   163c0:	movt	r2, #3
   163c4:	str	ip, [sp, #4]
   163c8:	bl	30ef4 <crc32@@Base+0x177ac>
   163cc:	cmp	r0, #0
   163d0:	beq	16410 <__printf_chk@plt+0x3ca0>
   163d4:	ldr	r3, [sp]
   163d8:	cmp	r3, #4
   163dc:	bne	16408 <__printf_chk@plt+0x3c98>
   163e0:	ldr	r3, [r0]
   163e4:	mov	r0, #0
   163e8:	rev	r3, r3
   163ec:	str	r3, [r5]
   163f0:	ldr	r2, [sp, #4]
   163f4:	ldr	r3, [r4]
   163f8:	cmp	r2, r3
   163fc:	bne	16418 <__printf_chk@plt+0x3ca8>
   16400:	add	sp, sp, #12
   16404:	pop	{r4, r5, pc}
   16408:	mvn	r0, #1
   1640c:	b	163f0 <__printf_chk@plt+0x3c80>
   16410:	mvn	r0, #0
   16414:	b	163f0 <__printf_chk@plt+0x3c80>
   16418:	bl	12494 <__stack_chk_fail@plt>
   1641c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16420:	movw	r7, #61168	; 0xeef0
   16424:	movt	r7, #4
   16428:	sub	sp, sp, #20
   1642c:	mov	r6, r1
   16430:	mov	r5, r0
   16434:	ldr	ip, [r7]
   16438:	movw	r1, #29512	; 0x7348
   1643c:	mov	r0, #1
   16440:	movt	r1, #3
   16444:	mov	sl, r2
   16448:	mov	fp, r3
   1644c:	str	ip, [sp, #12]
   16450:	bl	12770 <__printf_chk@plt>
   16454:	mov	r1, r6
   16458:	mov	r0, r5
   1645c:	add	r3, sp, #8
   16460:	movw	r2, #29532	; 0x735c
   16464:	movt	r2, #3
   16468:	bl	30ef4 <crc32@@Base+0x177ac>
   1646c:	subs	r2, r0, #0
   16470:	beq	16604 <__printf_chk@plt+0x3e94>
   16474:	movw	r1, #55420	; 0xd87c
   16478:	mov	r0, #1
   1647c:	movt	r1, #3
   16480:	bl	12770 <__printf_chk@plt>
   16484:	mov	r3, #0
   16488:	mov	r1, r6
   1648c:	movw	r2, #27900	; 0x6cfc
   16490:	mov	r0, r5
   16494:	movt	r2, #3
   16498:	bl	30ef4 <crc32@@Base+0x177ac>
   1649c:	movw	r2, #29540	; 0x7364
   164a0:	mov	r3, #0
   164a4:	movt	r2, #3
   164a8:	mov	r1, r6
   164ac:	mov	r9, r0
   164b0:	mov	r0, r5
   164b4:	bl	30ef4 <crc32@@Base+0x177ac>
   164b8:	cmp	r9, #0
   164bc:	mov	r4, r0
   164c0:	beq	164d8 <__printf_chk@plt+0x3d68>
   164c4:	movw	r1, #29572	; 0x7384
   164c8:	mov	r2, r9
   164cc:	movt	r1, #3
   164d0:	mov	r0, #1
   164d4:	bl	12770 <__printf_chk@plt>
   164d8:	cmp	r4, #0
   164dc:	beq	164f0 <__printf_chk@plt+0x3d80>
   164e0:	movw	r1, #29576	; 0x7388
   164e4:	mov	r0, #1
   164e8:	movt	r1, #3
   164ec:	bl	12770 <__printf_chk@plt>
   164f0:	mov	r0, #10
   164f4:	bl	122d8 <putchar@plt>
   164f8:	movw	r2, #27892	; 0x6cf4
   164fc:	mov	r3, #0
   16500:	movt	r2, #3
   16504:	mov	r1, r6
   16508:	mov	r0, r5
   1650c:	bl	30ef4 <crc32@@Base+0x177ac>
   16510:	cmp	r0, #0
   16514:	beq	16534 <__printf_chk@plt+0x3dc4>
   16518:	str	r0, [sp]
   1651c:	movw	r1, #29588	; 0x7394
   16520:	mov	r3, fp
   16524:	movt	r1, #3
   16528:	mov	r2, sl
   1652c:	mov	r0, #1
   16530:	bl	12770 <__printf_chk@plt>
   16534:	movw	r2, #28000	; 0x6d60
   16538:	add	r3, sp, #8
   1653c:	movt	r2, #3
   16540:	mov	r1, r6
   16544:	mov	r0, r5
   16548:	bl	30ef4 <crc32@@Base+0x177ac>
   1654c:	subs	r8, r0, #0
   16550:	beq	16614 <__printf_chk@plt+0x3ea4>
   16554:	ldr	r4, [sp, #8]
   16558:	mov	r3, fp
   1655c:	movw	r1, #29608	; 0x73a8
   16560:	mov	r2, sl
   16564:	movt	r1, #3
   16568:	mov	r0, #1
   1656c:	bl	12770 <__printf_chk@plt>
   16570:	cmp	r4, #0
   16574:	ble	165a4 <__printf_chk@plt+0x3e34>
   16578:	sub	r3, r4, #1
   1657c:	movw	fp, #29640	; 0x73c8
   16580:	sub	r4, r8, #1
   16584:	movt	fp, #3
   16588:	add	r8, r8, r3
   1658c:	ldrb	r2, [r4, #1]!
   16590:	mov	r1, fp
   16594:	mov	r0, #1
   16598:	bl	12770 <__printf_chk@plt>
   1659c:	cmp	r8, r4
   165a0:	bne	1658c <__printf_chk@plt+0x3e1c>
   165a4:	mov	r0, #10
   165a8:	bl	122d8 <putchar@plt>
   165ac:	cmp	r9, #0
   165b0:	beq	165ec <__printf_chk@plt+0x3e7c>
   165b4:	mov	r2, sl
   165b8:	movw	r1, #29648	; 0x73d0
   165bc:	mov	r0, #1
   165c0:	movt	r1, #3
   165c4:	bl	12770 <__printf_chk@plt>
   165c8:	add	r2, sp, #8
   165cc:	mov	r1, r6
   165d0:	mov	r0, r5
   165d4:	bl	163a0 <__printf_chk@plt+0x3c30>
   165d8:	cmp	r0, #0
   165dc:	beq	1663c <__printf_chk@plt+0x3ecc>
   165e0:	movw	r0, #29628	; 0x73bc
   165e4:	movt	r0, #3
   165e8:	bl	1226c <puts@plt>
   165ec:	ldr	r2, [sp, #12]
   165f0:	ldr	r3, [r7]
   165f4:	cmp	r2, r3
   165f8:	bne	16648 <__printf_chk@plt+0x3ed8>
   165fc:	add	sp, sp, #20
   16600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16604:	movw	r0, #29552	; 0x7370
   16608:	movt	r0, #3
   1660c:	bl	1226c <puts@plt>
   16610:	b	165ec <__printf_chk@plt+0x3e7c>
   16614:	mov	r3, fp
   16618:	mov	r2, sl
   1661c:	movw	r1, #29608	; 0x73a8
   16620:	mov	r0, #1
   16624:	movt	r1, #3
   16628:	bl	12770 <__printf_chk@plt>
   1662c:	movw	r0, #29628	; 0x73bc
   16630:	movt	r0, #3
   16634:	bl	1226c <puts@plt>
   16638:	b	165ac <__printf_chk@plt+0x3e3c>
   1663c:	ldr	r0, [sp, #8]
   16640:	bl	19d90 <crc32@@Base+0x648>
   16644:	b	165ec <__printf_chk@plt+0x3e7c>
   16648:	bl	12494 <__stack_chk_fail@plt>
   1664c:	push	{r4, r5, r6, r7, r8, lr}
   16650:	mov	r7, r2
   16654:	mov	r2, #0
   16658:	mov	r6, r1
   1665c:	mov	r5, r0
   16660:	bl	30bf4 <crc32@@Base+0x174ac>
   16664:	movw	r1, #28300	; 0x6e8c
   16668:	mov	r2, #4
   1666c:	movt	r1, #3
   16670:	mov	r4, r0
   16674:	bl	1217c <strncmp@plt>
   16678:	cmp	r0, #0
   1667c:	beq	166b8 <__printf_chk@plt+0x3f48>
   16680:	mov	r0, r4
   16684:	movw	r1, #28952	; 0x7118
   16688:	mov	r2, #9
   1668c:	movt	r1, #3
   16690:	bl	1217c <strncmp@plt>
   16694:	cmp	r0, #0
   16698:	popne	{r4, r5, r6, r7, r8, pc}
   1669c:	mov	r2, r7
   166a0:	mov	r1, r6
   166a4:	mov	r0, r5
   166a8:	movw	r3, #29676	; 0x73ec
   166ac:	pop	{r4, r5, r6, r7, r8, lr}
   166b0:	movt	r3, #3
   166b4:	b	1641c <__printf_chk@plt+0x3cac>
   166b8:	mov	r2, r7
   166bc:	mov	r1, r6
   166c0:	mov	r0, r5
   166c4:	movw	r3, #29668	; 0x73e4
   166c8:	pop	{r4, r5, r6, r7, r8, lr}
   166cc:	movt	r3, #3
   166d0:	b	1641c <__printf_chk@plt+0x3cac>
   166d4:	push	{r4, r5, r6, lr}
   166d8:	mov	r5, r1
   166dc:	movw	r1, #27024	; 0x6990
   166e0:	movt	r1, #3
   166e4:	mov	r4, r0
   166e8:	bl	31250 <crc32@@Base+0x17b08>
   166ec:	subs	r1, r0, #0
   166f0:	poplt	{r4, r5, r6, pc}
   166f4:	mov	r2, r5
   166f8:	mov	r0, r4
   166fc:	pop	{r4, r5, r6, lr}
   16700:	b	30bc4 <crc32@@Base+0x1747c>
   16704:	push	{r4, r5, lr}
   16708:	movw	r4, #61168	; 0xeef0
   1670c:	movt	r4, #4
   16710:	sub	sp, sp, #12
   16714:	mov	r5, r2
   16718:	movw	r2, #35972	; 0x8c84
   1671c:	ldr	ip, [r4]
   16720:	mov	r3, sp
   16724:	movt	r2, #3
   16728:	str	ip, [sp, #4]
   1672c:	bl	30ef4 <crc32@@Base+0x177ac>
   16730:	cmp	r0, #0
   16734:	mvneq	r3, #0
   16738:	strbeq	r3, [r5]
   1673c:	beq	1674c <__printf_chk@plt+0x3fdc>
   16740:	bl	1a614 <crc32@@Base+0xecc>
   16744:	mov	r3, #0
   16748:	strb	r0, [r5]
   1674c:	ldr	r2, [sp, #4]
   16750:	mov	r0, r3
   16754:	ldr	r3, [r4]
   16758:	cmp	r2, r3
   1675c:	bne	16768 <__printf_chk@plt+0x3ff8>
   16760:	add	sp, sp, #12
   16764:	pop	{r4, r5, pc}
   16768:	bl	12494 <__stack_chk_fail@plt>
   1676c:	push	{r4, r5, lr}
   16770:	movw	r4, #61168	; 0xeef0
   16774:	movt	r4, #4
   16778:	sub	sp, sp, #12
   1677c:	mov	r5, r2
   16780:	movw	r2, #27356	; 0x6adc
   16784:	ldr	ip, [r4]
   16788:	mov	r3, sp
   1678c:	movt	r2, #3
   16790:	str	ip, [sp, #4]
   16794:	bl	30ef4 <crc32@@Base+0x177ac>
   16798:	cmp	r0, #0
   1679c:	mvneq	r3, #0
   167a0:	strbeq	r3, [r5]
   167a4:	beq	167b4 <__printf_chk@plt+0x4044>
   167a8:	bl	1a62c <crc32@@Base+0xee4>
   167ac:	mov	r3, #0
   167b0:	strb	r0, [r5]
   167b4:	ldr	r2, [sp, #4]
   167b8:	mov	r0, r3
   167bc:	ldr	r3, [r4]
   167c0:	cmp	r2, r3
   167c4:	bne	167d0 <__printf_chk@plt+0x4060>
   167c8:	add	sp, sp, #12
   167cc:	pop	{r4, r5, pc}
   167d0:	bl	12494 <__stack_chk_fail@plt>
   167d4:	push	{r4, r5, lr}
   167d8:	movw	r4, #61168	; 0xeef0
   167dc:	movt	r4, #4
   167e0:	sub	sp, sp, #12
   167e4:	mov	r5, r2
   167e8:	movw	r2, #40452	; 0x9e04
   167ec:	ldr	ip, [r4]
   167f0:	mov	r3, sp
   167f4:	movt	r2, #3
   167f8:	str	ip, [sp, #4]
   167fc:	bl	30ef4 <crc32@@Base+0x177ac>
   16800:	cmp	r0, #0
   16804:	mvneq	r3, #0
   16808:	strbeq	r3, [r5]
   1680c:	beq	1681c <__printf_chk@plt+0x40ac>
   16810:	bl	1a644 <crc32@@Base+0xefc>
   16814:	mov	r3, #0
   16818:	strb	r0, [r5]
   1681c:	ldr	r2, [sp, #4]
   16820:	mov	r0, r3
   16824:	ldr	r3, [r4]
   16828:	cmp	r2, r3
   1682c:	bne	16838 <__printf_chk@plt+0x40c8>
   16830:	add	sp, sp, #12
   16834:	pop	{r4, r5, pc}
   16838:	bl	12494 <__stack_chk_fail@plt>
   1683c:	push	{r4, r5, lr}
   16840:	movw	r4, #61168	; 0xeef0
   16844:	movt	r4, #4
   16848:	sub	sp, sp, #12
   1684c:	mov	r5, r2
   16850:	movw	r2, #27364	; 0x6ae4
   16854:	ldr	ip, [r4]
   16858:	mov	r3, sp
   1685c:	movt	r2, #3
   16860:	str	ip, [sp, #4]
   16864:	bl	30ef4 <crc32@@Base+0x177ac>
   16868:	cmp	r0, #0
   1686c:	mvneq	r3, #0
   16870:	strbeq	r3, [r5]
   16874:	beq	16884 <__printf_chk@plt+0x4114>
   16878:	bl	1a65c <crc32@@Base+0xf14>
   1687c:	mov	r3, #0
   16880:	strb	r0, [r5]
   16884:	ldr	r2, [sp, #4]
   16888:	mov	r0, r3
   1688c:	ldr	r3, [r4]
   16890:	cmp	r2, r3
   16894:	bne	168a0 <__printf_chk@plt+0x4130>
   16898:	add	sp, sp, #12
   1689c:	pop	{r4, r5, pc}
   168a0:	bl	12494 <__stack_chk_fail@plt>
   168a4:	mov	r3, r2
   168a8:	movw	r2, #27376	; 0x6af0
   168ac:	movt	r2, #3
   168b0:	b	16228 <__printf_chk@plt+0x3ab8>
   168b4:	mov	r3, r2
   168b8:	movw	r2, #27384	; 0x6af8
   168bc:	movt	r2, #3
   168c0:	b	16228 <__printf_chk@plt+0x3ab8>
   168c4:	push	{r4, r5, r6, lr}
   168c8:	movw	r4, #61168	; 0xeef0
   168cc:	movt	r4, #4
   168d0:	sub	sp, sp, #8
   168d4:	mov	r6, r3
   168d8:	mov	r5, r2
   168dc:	ldr	ip, [r4]
   168e0:	mov	r3, sp
   168e4:	movw	r2, #40512	; 0x9e40
   168e8:	movt	r2, #3
   168ec:	str	ip, [sp, #4]
   168f0:	bl	30ef4 <crc32@@Base+0x177ac>
   168f4:	ldr	r2, [sp, #4]
   168f8:	cmp	r0, #0
   168fc:	str	r0, [r5]
   16900:	streq	r0, [r6]
   16904:	ldrne	r3, [sp]
   16908:	mvneq	r0, #0
   1690c:	movne	r0, #0
   16910:	strne	r3, [r6]
   16914:	ldr	r3, [r4]
   16918:	cmp	r2, r3
   1691c:	bne	16928 <__printf_chk@plt+0x41b8>
   16920:	add	sp, sp, #8
   16924:	pop	{r4, r5, r6, pc}
   16928:	bl	12494 <__stack_chk_fail@plt>
   1692c:	mov	r3, #0
   16930:	push	{r4, lr}
   16934:	mov	r4, r2
   16938:	movw	r2, #27680	; 0x6c20
   1693c:	movt	r2, #3
   16940:	bl	30ef4 <crc32@@Base+0x177ac>
   16944:	cmp	r0, #0
   16948:	ldrne	r2, [r0]
   1694c:	movne	r0, #0
   16950:	mvneq	r0, #1
   16954:	ubfxne	ip, r2, #8, #8
   16958:	ubfxne	r1, r2, #16, #8
   1695c:	lsrne	r3, r2, #24
   16960:	orrne	r3, r3, r2, lsl #24
   16964:	orrne	r3, r3, ip, lsl #16
   16968:	orrne	r3, r3, r1, lsl #8
   1696c:	strne	r3, [r4]
   16970:	pop	{r4, pc}
   16974:	mov	r3, #0
   16978:	push	{r4, lr}
   1697c:	mov	r4, r2
   16980:	movw	r2, #27744	; 0x6c60
   16984:	movt	r2, #3
   16988:	bl	30ef4 <crc32@@Base+0x177ac>
   1698c:	cmp	r0, #0
   16990:	ldrne	r2, [r0]
   16994:	movne	r0, #0
   16998:	mvneq	r0, #1
   1699c:	ubfxne	ip, r2, #8, #8
   169a0:	ubfxne	r1, r2, #16, #8
   169a4:	lsrne	r3, r2, #24
   169a8:	orrne	r3, r3, r2, lsl #24
   169ac:	orrne	r3, r3, ip, lsl #16
   169b0:	orrne	r3, r3, r1, lsl #8
   169b4:	strne	r3, [r4]
   169b8:	pop	{r4, pc}
   169bc:	mov	r3, #0
   169c0:	push	{r4, lr}
   169c4:	mov	r4, r2
   169c8:	movw	r2, #27692	; 0x6c2c
   169cc:	movt	r2, #3
   169d0:	bl	30ef4 <crc32@@Base+0x177ac>
   169d4:	cmp	r0, #0
   169d8:	ldrne	r2, [r0]
   169dc:	movne	r0, #0
   169e0:	mvneq	r0, #1
   169e4:	ubfxne	ip, r2, #8, #8
   169e8:	ubfxne	r1, r2, #16, #8
   169ec:	lsrne	r3, r2, #24
   169f0:	orrne	r3, r3, r2, lsl #24
   169f4:	orrne	r3, r3, ip, lsl #16
   169f8:	orrne	r3, r3, r1, lsl #8
   169fc:	strne	r3, [r4]
   16a00:	pop	{r4, pc}
   16a04:	push	{r4, r5, r6, r7, r8, lr}
   16a08:	movw	r5, #61168	; 0xeef0
   16a0c:	movt	r5, #4
   16a10:	sub	sp, sp, #16
   16a14:	mov	r6, r2
   16a18:	add	r2, sp, #4
   16a1c:	ldr	ip, [r5]
   16a20:	mov	r7, r3
   16a24:	mov	r4, r0
   16a28:	mov	r8, r1
   16a2c:	str	ip, [sp, #12]
   16a30:	bl	16974 <__printf_chk@plt+0x4204>
   16a34:	cmp	r0, #0
   16a38:	beq	16a84 <__printf_chk@plt+0x4314>
   16a3c:	add	r2, sp, #4
   16a40:	mov	r1, r8
   16a44:	mov	r0, r4
   16a48:	bl	1692c <__printf_chk@plt+0x41bc>
   16a4c:	cmp	r0, #0
   16a50:	bne	16abc <__printf_chk@plt+0x434c>
   16a54:	ldr	r2, [r4, #4]
   16a58:	ldr	r1, [sp, #4]
   16a5c:	ubfx	ip, r2, #8, #8
   16a60:	ubfx	r0, r2, #16, #8
   16a64:	lsr	r3, r2, #24
   16a68:	orr	r3, r3, r2, lsl #24
   16a6c:	orr	r3, r3, ip, lsl #16
   16a70:	orr	r3, r3, r0, lsl #8
   16a74:	add	r3, r3, #3
   16a78:	bic	r3, r3, #3
   16a7c:	add	r3, r1, r3
   16a80:	str	r3, [sp, #4]
   16a84:	add	r2, sp, #8
   16a88:	mov	r0, r4
   16a8c:	mov	r1, r8
   16a90:	bl	169bc <__printf_chk@plt+0x424c>
   16a94:	ldrd	r2, [sp, #4]
   16a98:	add	r4, r4, r2
   16a9c:	str	r4, [r6]
   16aa0:	str	r3, [r7]
   16aa4:	ldr	r2, [sp, #12]
   16aa8:	ldr	r3, [r5]
   16aac:	cmp	r2, r3
   16ab0:	bne	16af8 <__printf_chk@plt+0x4388>
   16ab4:	add	sp, sp, #16
   16ab8:	pop	{r4, r5, r6, r7, r8, pc}
   16abc:	mov	r1, r8
   16ac0:	mov	r0, r4
   16ac4:	movw	r2, #40512	; 0x9e40
   16ac8:	add	r3, sp, #8
   16acc:	movt	r2, #3
   16ad0:	bl	30ef4 <crc32@@Base+0x177ac>
   16ad4:	cmp	r0, #0
   16ad8:	str	r0, [r6]
   16adc:	ldrne	r3, [sp, #8]
   16ae0:	movne	r0, #0
   16ae4:	strne	r3, [r7]
   16ae8:	bne	16aa4 <__printf_chk@plt+0x4334>
   16aec:	str	r0, [r7]
   16af0:	mvn	r0, #0
   16af4:	b	16aa4 <__printf_chk@plt+0x4334>
   16af8:	bl	12494 <__stack_chk_fail@plt>
   16afc:	push	{r4, r5, r6, r7, r8, lr}
   16b00:	movw	r7, #61168	; 0xeef0
   16b04:	movt	r7, #4
   16b08:	sub	sp, sp, #32
   16b0c:	mov	r6, r2
   16b10:	add	r3, sp, #24
   16b14:	ldr	ip, [r7]
   16b18:	movw	r2, #27276	; 0x6a8c
   16b1c:	movt	r2, #3
   16b20:	mov	r5, r1
   16b24:	mov	r4, r0
   16b28:	str	ip, [sp, #28]
   16b2c:	bl	30ef4 <crc32@@Base+0x177ac>
   16b30:	movw	r1, #29684	; 0x73f4
   16b34:	mov	r2, r6
   16b38:	movt	r1, #3
   16b3c:	subs	r8, r0, #0
   16b40:	mov	r0, #1
   16b44:	beq	16d98 <__printf_chk@plt+0x4628>
   16b48:	bl	12770 <__printf_chk@plt>
   16b4c:	mov	r0, r8
   16b50:	bl	1226c <puts@plt>
   16b54:	add	r2, sp, #24
   16b58:	mov	r1, #0
   16b5c:	mov	r0, r4
   16b60:	bl	163a0 <__printf_chk@plt+0x3c30>
   16b64:	mov	r2, r6
   16b68:	movw	r1, #29704	; 0x7408
   16b6c:	movt	r1, #3
   16b70:	mov	r8, r0
   16b74:	mov	r0, #1
   16b78:	bl	12770 <__printf_chk@plt>
   16b7c:	cmp	r8, #0
   16b80:	beq	16d8c <__printf_chk@plt+0x461c>
   16b84:	movw	r0, #29628	; 0x73bc
   16b88:	movt	r0, #3
   16b8c:	bl	1226c <puts@plt>
   16b90:	add	r2, sp, #4
   16b94:	mov	r1, r5
   16b98:	mov	r0, r4
   16b9c:	bl	167d4 <__printf_chk@plt+0x4064>
   16ba0:	ldrb	r0, [sp, #4]
   16ba4:	bl	1a3d0 <crc32@@Base+0xc88>
   16ba8:	mov	r2, r6
   16bac:	movw	r1, #29724	; 0x741c
   16bb0:	movt	r1, #3
   16bb4:	mov	r3, r0
   16bb8:	mov	r0, #1
   16bbc:	bl	12770 <__printf_chk@plt>
   16bc0:	add	r2, sp, #7
   16bc4:	mov	r1, r5
   16bc8:	mov	r0, r4
   16bcc:	bl	1683c <__printf_chk@plt+0x40cc>
   16bd0:	ldrb	r0, [sp, #7]
   16bd4:	bl	1a478 <crc32@@Base+0xd30>
   16bd8:	mov	r2, r6
   16bdc:	movw	r1, #29748	; 0x7434
   16be0:	movt	r1, #3
   16be4:	mov	r3, r0
   16be8:	mov	r0, #1
   16bec:	bl	12770 <__printf_chk@plt>
   16bf0:	add	r3, sp, #8
   16bf4:	add	r2, sp, #20
   16bf8:	mov	r1, r5
   16bfc:	mov	r0, r4
   16c00:	bl	16a04 <__printf_chk@plt+0x4294>
   16c04:	mov	r2, r6
   16c08:	movw	r1, #29772	; 0x744c
   16c0c:	movt	r1, #3
   16c10:	mov	r8, r0
   16c14:	mov	r0, #1
   16c18:	bl	12770 <__printf_chk@plt>
   16c1c:	cmp	r8, #0
   16c20:	beq	16dac <__printf_chk@plt+0x463c>
   16c24:	movw	r0, #29628	; 0x73bc
   16c28:	movt	r0, #3
   16c2c:	bl	1226c <puts@plt>
   16c30:	ldrb	r3, [sp, #4]
   16c34:	sub	r2, r3, #1
   16c38:	uxtb	r2, r2
   16c3c:	cmp	r2, #7
   16c40:	bhi	16c88 <__printf_chk@plt+0x4518>
   16c44:	mov	r1, #151	; 0x97
   16c48:	mvn	r2, r1, lsr r2
   16c4c:	tst	r2, #1
   16c50:	bne	16c88 <__printf_chk@plt+0x4518>
   16c54:	add	r2, sp, #5
   16c58:	mov	r1, r5
   16c5c:	mov	r0, r4
   16c60:	bl	1676c <__printf_chk@plt+0x3ffc>
   16c64:	ldrb	r0, [sp, #5]
   16c68:	bl	1a37c <crc32@@Base+0xc34>
   16c6c:	mov	r2, r6
   16c70:	movw	r1, #29792	; 0x7460
   16c74:	movt	r1, #3
   16c78:	mov	r3, r0
   16c7c:	mov	r0, #1
   16c80:	bl	12770 <__printf_chk@plt>
   16c84:	ldrb	r3, [sp, #4]
   16c88:	sub	r2, r3, #2
   16c8c:	cmp	r3, #5
   16c90:	cmpne	r2, #1
   16c94:	bls	16e50 <__printf_chk@plt+0x46e0>
   16c98:	cmp	r3, #29
   16c9c:	bhi	16d04 <__printf_chk@plt+0x4594>
   16ca0:	mov	r2, #46	; 0x2e
   16ca4:	movt	r2, #8192	; 0x2000
   16ca8:	mvn	r2, r2, lsr r3
   16cac:	tst	r2, #1
   16cb0:	bne	16cfc <__printf_chk@plt+0x458c>
   16cb4:	add	r3, sp, #12
   16cb8:	mov	r1, r5
   16cbc:	movw	r2, #27376	; 0x6af0
   16cc0:	mov	r0, r4
   16cc4:	movt	r2, #3
   16cc8:	bl	16228 <__printf_chk@plt+0x3ab8>
   16ccc:	mov	r2, r6
   16cd0:	movw	r1, #29840	; 0x7490
   16cd4:	movt	r1, #3
   16cd8:	mov	r8, r0
   16cdc:	mov	r0, #1
   16ce0:	bl	12770 <__printf_chk@plt>
   16ce4:	cmp	r8, #0
   16ce8:	beq	16db8 <__printf_chk@plt+0x4648>
   16cec:	movw	r0, #29628	; 0x73bc
   16cf0:	movt	r0, #3
   16cf4:	bl	1226c <puts@plt>
   16cf8:	ldrb	r3, [sp, #4]
   16cfc:	cmp	r3, #8
   16d00:	beq	16dd8 <__printf_chk@plt+0x4668>
   16d04:	sub	r3, r3, #1
   16d08:	cmp	r3, #2
   16d0c:	bls	16e08 <__printf_chk@plt+0x4698>
   16d10:	mov	r1, r5
   16d14:	add	r2, sp, #24
   16d18:	mov	r0, r4
   16d1c:	mov	r3, #0
   16d20:	str	r3, [sp, #24]
   16d24:	bl	2d978 <crc32@@Base+0x14230>
   16d28:	subs	r5, r0, #0
   16d2c:	bge	16d4c <__printf_chk@plt+0x45dc>
   16d30:	b	16d74 <__printf_chk@plt+0x4604>
   16d34:	mov	r1, r5
   16d38:	add	r2, sp, #24
   16d3c:	mov	r0, r4
   16d40:	bl	2d978 <crc32@@Base+0x14230>
   16d44:	subs	r5, r0, #0
   16d48:	blt	16d74 <__printf_chk@plt+0x4604>
   16d4c:	ldr	r3, [sp, #24]
   16d50:	cmp	r3, #0
   16d54:	ble	16d74 <__printf_chk@plt+0x4604>
   16d58:	cmp	r3, #1
   16d5c:	bne	16d34 <__printf_chk@plt+0x45c4>
   16d60:	mov	r2, r6
   16d64:	mov	r1, r5
   16d68:	mov	r0, r4
   16d6c:	bl	1664c <__printf_chk@plt+0x3edc>
   16d70:	b	16d34 <__printf_chk@plt+0x45c4>
   16d74:	ldr	r2, [sp, #28]
   16d78:	ldr	r3, [r7]
   16d7c:	cmp	r2, r3
   16d80:	bne	16ebc <__printf_chk@plt+0x474c>
   16d84:	add	sp, sp, #32
   16d88:	pop	{r4, r5, r6, r7, r8, pc}
   16d8c:	ldr	r0, [sp, #24]
   16d90:	bl	19d90 <crc32@@Base+0x648>
   16d94:	b	16b90 <__printf_chk@plt+0x4420>
   16d98:	bl	12770 <__printf_chk@plt>
   16d9c:	movw	r0, #29628	; 0x73bc
   16da0:	movt	r0, #3
   16da4:	bl	1226c <puts@plt>
   16da8:	b	16b54 <__printf_chk@plt+0x43e4>
   16dac:	ldr	r0, [sp, #8]
   16db0:	bl	19d34 <crc32@@Base+0x5ec>
   16db4:	b	16c30 <__printf_chk@plt+0x44c0>
   16db8:	movw	r1, #29860	; 0x74a4
   16dbc:	ldr	r2, [sp, #12]
   16dc0:	movt	r1, #3
   16dc4:	mov	r0, #1
   16dc8:	bl	12770 <__printf_chk@plt>
   16dcc:	ldrb	r3, [sp, #4]
   16dd0:	cmp	r3, #8
   16dd4:	bne	16d04 <__printf_chk@plt+0x4594>
   16dd8:	movw	r2, #27376	; 0x6af0
   16ddc:	add	r3, sp, #12
   16de0:	movt	r2, #3
   16de4:	mov	r1, r5
   16de8:	mov	r0, r4
   16dec:	bl	16228 <__printf_chk@plt+0x3ab8>
   16df0:	cmp	r0, #0
   16df4:	beq	16ea0 <__printf_chk@plt+0x4730>
   16df8:	ldrb	r3, [sp, #4]
   16dfc:	sub	r3, r3, #1
   16e00:	cmp	r3, #2
   16e04:	bhi	16d10 <__printf_chk@plt+0x45a0>
   16e08:	add	r3, sp, #16
   16e0c:	mov	r1, r5
   16e10:	movw	r2, #27384	; 0x6af8
   16e14:	mov	r0, r4
   16e18:	movt	r2, #3
   16e1c:	bl	16228 <__printf_chk@plt+0x3ab8>
   16e20:	mov	r2, r6
   16e24:	movw	r1, #29900	; 0x74cc
   16e28:	movt	r1, #3
   16e2c:	mov	r8, r0
   16e30:	mov	r0, #1
   16e34:	bl	12770 <__printf_chk@plt>
   16e38:	cmp	r8, #0
   16e3c:	beq	16e88 <__printf_chk@plt+0x4718>
   16e40:	movw	r0, #29628	; 0x73bc
   16e44:	movt	r0, #3
   16e48:	bl	1226c <puts@plt>
   16e4c:	b	16d10 <__printf_chk@plt+0x45a0>
   16e50:	add	r2, sp, #6
   16e54:	mov	r1, r5
   16e58:	mov	r0, r4
   16e5c:	bl	16704 <__printf_chk@plt+0x3f94>
   16e60:	ldrb	r0, [sp, #6]
   16e64:	bl	1a328 <crc32@@Base+0xbe0>
   16e68:	mov	r2, r6
   16e6c:	movw	r1, #29816	; 0x7478
   16e70:	movt	r1, #3
   16e74:	mov	r3, r0
   16e78:	mov	r0, #1
   16e7c:	bl	12770 <__printf_chk@plt>
   16e80:	ldrb	r3, [sp, #4]
   16e84:	b	16c98 <__printf_chk@plt+0x4528>
   16e88:	movw	r1, #29860	; 0x74a4
   16e8c:	ldr	r2, [sp, #16]
   16e90:	movt	r1, #3
   16e94:	mov	r0, #1
   16e98:	bl	12770 <__printf_chk@plt>
   16e9c:	b	16d10 <__printf_chk@plt+0x45a0>
   16ea0:	movw	r1, #29872	; 0x74b0
   16ea4:	ldr	r3, [sp, #12]
   16ea8:	movt	r1, #3
   16eac:	mov	r2, r6
   16eb0:	mov	r0, #1
   16eb4:	bl	12770 <__printf_chk@plt>
   16eb8:	b	16df8 <__printf_chk@plt+0x4688>
   16ebc:	bl	12494 <__stack_chk_fail@plt>
   16ec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ec4:	movw	sl, #61168	; 0xeef0
   16ec8:	movt	sl, #4
   16ecc:	sub	sp, sp, #44	; 0x2c
   16ed0:	mov	r1, #0
   16ed4:	movw	r2, #27276	; 0x6a8c
   16ed8:	ldr	ip, [sl]
   16edc:	movt	r2, #3
   16ee0:	add	r3, sp, #32
   16ee4:	mov	r4, r0
   16ee8:	str	ip, [sp, #36]	; 0x24
   16eec:	bl	30ef4 <crc32@@Base+0x177ac>
   16ef0:	movw	r2, #46016	; 0xb3c0
   16ef4:	movw	r1, #29920	; 0x74e0
   16ef8:	movt	r2, #3
   16efc:	movt	r1, #3
   16f00:	subs	r5, r0, #0
   16f04:	mov	r0, #1
   16f08:	beq	17068 <__printf_chk@plt+0x48f8>
   16f0c:	bl	12770 <__printf_chk@plt>
   16f10:	mov	r0, r5
   16f14:	bl	1226c <puts@plt>
   16f18:	add	r2, sp, #28
   16f1c:	mov	r1, #0
   16f20:	mov	r0, r4
   16f24:	bl	163a0 <__printf_chk@plt+0x3c30>
   16f28:	movw	r2, #46016	; 0xb3c0
   16f2c:	movw	r1, #29940	; 0x74f4
   16f30:	movt	r2, #3
   16f34:	movt	r1, #3
   16f38:	mov	r5, r0
   16f3c:	mov	r0, #1
   16f40:	bl	12770 <__printf_chk@plt>
   16f44:	cmp	r5, #0
   16f48:	beq	1705c <__printf_chk@plt+0x48ec>
   16f4c:	movw	r0, #29628	; 0x73bc
   16f50:	movt	r0, #3
   16f54:	bl	1226c <puts@plt>
   16f58:	movw	r1, #27024	; 0x6990
   16f5c:	mov	r0, r4
   16f60:	movt	r1, #3
   16f64:	bl	31250 <crc32@@Base+0x17b08>
   16f68:	subs	r1, r0, #0
   16f6c:	blt	173ac <__printf_chk@plt+0x4c3c>
   16f70:	add	r7, sp, #40	; 0x28
   16f74:	mov	r8, #0
   16f78:	mov	r0, r4
   16f7c:	str	r8, [r7, #-16]!
   16f80:	mov	r2, r7
   16f84:	bl	2d978 <crc32@@Base+0x14230>
   16f88:	subs	r6, r0, #0
   16f8c:	blt	1702c <__printf_chk@plt+0x48bc>
   16f90:	ldr	r5, [sp, #24]
   16f94:	cmp	r5, r8
   16f98:	ble	1702c <__printf_chk@plt+0x48bc>
   16f9c:	movw	fp, #29960	; 0x7508
   16fa0:	movt	fp, #3
   16fa4:	movw	r9, #46016	; 0xb3c0
   16fa8:	str	sl, [sp, #8]
   16fac:	movt	r9, #3
   16fb0:	mov	sl, fp
   16fb4:	b	16fdc <__printf_chk@plt+0x486c>
   16fb8:	mov	r1, r6
   16fbc:	mov	r2, r7
   16fc0:	mov	r0, r4
   16fc4:	bl	2d978 <crc32@@Base+0x14230>
   16fc8:	subs	r6, r0, #0
   16fcc:	blt	17028 <__printf_chk@plt+0x48b8>
   16fd0:	ldr	r5, [sp, #24]
   16fd4:	cmp	r5, #0
   16fd8:	ble	17028 <__printf_chk@plt+0x48b8>
   16fdc:	cmp	r5, #1
   16fe0:	bne	16fb8 <__printf_chk@plt+0x4848>
   16fe4:	mov	r1, r6
   16fe8:	mov	r2, #0
   16fec:	mov	r0, r4
   16ff0:	add	fp, r8, #1
   16ff4:	bl	30bf4 <crc32@@Base+0x174ac>
   16ff8:	mov	r3, r8
   16ffc:	mov	r2, r9
   17000:	mov	r1, sl
   17004:	mov	r8, fp
   17008:	str	r0, [sp]
   1700c:	mov	r0, r5
   17010:	bl	12770 <__printf_chk@plt>
   17014:	mov	r2, r9
   17018:	mov	r1, r6
   1701c:	mov	r0, r4
   17020:	bl	16afc <__printf_chk@plt+0x438c>
   17024:	b	16fb8 <__printf_chk@plt+0x4848>
   17028:	ldr	sl, [sp, #8]
   1702c:	movw	r1, #28084	; 0x6db4
   17030:	mov	r0, r4
   17034:	movt	r1, #3
   17038:	bl	31250 <crc32@@Base+0x17b08>
   1703c:	subs	r5, r0, #0
   17040:	bge	1707c <__printf_chk@plt+0x490c>
   17044:	ldr	r2, [sp, #36]	; 0x24
   17048:	ldr	r3, [sl]
   1704c:	cmp	r2, r3
   17050:	bne	173f4 <__printf_chk@plt+0x4c84>
   17054:	add	sp, sp, #44	; 0x2c
   17058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1705c:	ldr	r0, [sp, #28]
   17060:	bl	19d90 <crc32@@Base+0x648>
   17064:	b	16f58 <__printf_chk@plt+0x47e8>
   17068:	bl	12770 <__printf_chk@plt>
   1706c:	movw	r0, #29628	; 0x73bc
   17070:	movt	r0, #3
   17074:	bl	1226c <puts@plt>
   17078:	b	16f18 <__printf_chk@plt+0x47a8>
   1707c:	mov	r3, #0
   17080:	mov	r1, r6
   17084:	movw	r2, #27448	; 0x6b38
   17088:	mov	r0, r4
   1708c:	movt	r2, #3
   17090:	bl	30ef4 <crc32@@Base+0x177ac>
   17094:	subs	r3, r0, #0
   17098:	beq	170b4 <__printf_chk@plt+0x4944>
   1709c:	movw	r2, #46016	; 0xb3c0
   170a0:	movw	r1, #29980	; 0x751c
   170a4:	movt	r2, #3
   170a8:	movt	r1, #3
   170ac:	mov	r0, #1
   170b0:	bl	12770 <__printf_chk@plt>
   170b4:	mov	r1, r5
   170b8:	mov	r2, r7
   170bc:	mov	r0, r4
   170c0:	mov	r9, #0
   170c4:	str	r9, [sp, #24]
   170c8:	bl	2d978 <crc32@@Base+0x14230>
   170cc:	subs	r5, r0, #0
   170d0:	blt	17044 <__printf_chk@plt+0x48d4>
   170d4:	ldr	r6, [sp, #24]
   170d8:	cmp	r6, r9
   170dc:	ble	17044 <__printf_chk@plt+0x48d4>
   170e0:	movw	r8, #46016	; 0xb3c0
   170e4:	movw	r3, #30012	; 0x753c
   170e8:	movt	r8, #3
   170ec:	movt	r3, #3
   170f0:	str	sl, [sp, #20]
   170f4:	str	r3, [sp, #12]
   170f8:	movw	r3, #27276	; 0x6a8c
   170fc:	movt	r3, #3
   17100:	str	r3, [sp, #16]
   17104:	b	1712c <__printf_chk@plt+0x49bc>
   17108:	mov	r1, r5
   1710c:	mov	r2, r7
   17110:	mov	r0, r4
   17114:	bl	2d978 <crc32@@Base+0x14230>
   17118:	subs	r5, r0, #0
   1711c:	blt	173d8 <__printf_chk@plt+0x4c68>
   17120:	ldr	r6, [sp, #24]
   17124:	cmp	r6, #0
   17128:	ble	173d8 <__printf_chk@plt+0x4c68>
   1712c:	cmp	r6, #1
   17130:	bne	17108 <__printf_chk@plt+0x4998>
   17134:	mov	r2, #0
   17138:	mov	r1, r5
   1713c:	mov	r0, r4
   17140:	add	r3, r9, #1
   17144:	str	r3, [sp, #8]
   17148:	bl	30bf4 <crc32@@Base+0x174ac>
   1714c:	mov	r3, r9
   17150:	mov	r2, r8
   17154:	ldr	r1, [sp, #12]
   17158:	str	r0, [sp]
   1715c:	mov	r0, r6
   17160:	bl	12770 <__printf_chk@plt>
   17164:	ldr	r2, [sp, #16]
   17168:	mov	r1, r5
   1716c:	add	r3, sp, #32
   17170:	mov	r0, r4
   17174:	bl	30ef4 <crc32@@Base+0x177ac>
   17178:	movw	r1, #29684	; 0x73f4
   1717c:	mov	r2, r8
   17180:	movt	r1, #3
   17184:	subs	r9, r0, #0
   17188:	mov	r0, r6
   1718c:	beq	173e0 <__printf_chk@plt+0x4c70>
   17190:	bl	12770 <__printf_chk@plt>
   17194:	mov	r0, r9
   17198:	bl	1226c <puts@plt>
   1719c:	mov	r3, #0
   171a0:	mov	r1, r5
   171a4:	movw	r2, #30040	; 0x7558
   171a8:	mov	r0, r4
   171ac:	movt	r2, #3
   171b0:	bl	30ef4 <crc32@@Base+0x177ac>
   171b4:	mov	r2, r8
   171b8:	movw	r1, #30048	; 0x7560
   171bc:	movt	r1, #3
   171c0:	mov	r6, r0
   171c4:	mov	r0, #1
   171c8:	bl	12770 <__printf_chk@plt>
   171cc:	cmp	r6, #0
   171d0:	movweq	r0, #29628	; 0x73bc
   171d4:	movne	r0, r6
   171d8:	movteq	r0, #3
   171dc:	bl	1226c <puts@plt>
   171e0:	mov	r3, #0
   171e4:	movw	r2, #27416	; 0x6b18
   171e8:	mov	r1, r5
   171ec:	movt	r2, #3
   171f0:	mov	r0, r4
   171f4:	bl	30ef4 <crc32@@Base+0x177ac>
   171f8:	subs	r3, r0, #0
   171fc:	beq	17214 <__printf_chk@plt+0x4aa4>
   17200:	movw	r1, #30068	; 0x7574
   17204:	mov	r2, r8
   17208:	movt	r1, #3
   1720c:	mov	r0, #1
   17210:	bl	12770 <__printf_chk@plt>
   17214:	mov	r3, #0
   17218:	movw	r2, #41648	; 0xa2b0
   1721c:	mov	r1, r5
   17220:	movt	r2, #3
   17224:	mov	r0, r4
   17228:	bl	30ef4 <crc32@@Base+0x177ac>
   1722c:	subs	r3, r0, #0
   17230:	beq	17248 <__printf_chk@plt+0x4ad8>
   17234:	movw	r1, #30092	; 0x758c
   17238:	mov	r2, r8
   1723c:	movt	r1, #3
   17240:	mov	r0, #1
   17244:	bl	12770 <__printf_chk@plt>
   17248:	movw	r9, #27392	; 0x6b00
   1724c:	movw	fp, #30136	; 0x75b8
   17250:	movt	r9, #3
   17254:	movt	fp, #3
   17258:	mov	r6, #0
   1725c:	b	1728c <__printf_chk@plt+0x4b1c>
   17260:	cmp	r6, #0
   17264:	mov	r0, #1
   17268:	add	r6, r6, #1
   1726c:	movweq	r1, #30116	; 0x75a4
   17270:	moveq	r2, r8
   17274:	movteq	r1, #3
   17278:	movne	r2, r8
   1727c:	movne	r1, fp
   17280:	bl	12770 <__printf_chk@plt>
   17284:	mov	r0, sl
   17288:	bl	1226c <puts@plt>
   1728c:	mov	r2, #0
   17290:	mov	r3, r6
   17294:	str	r2, [sp]
   17298:	mov	r1, r5
   1729c:	mov	r2, r9
   172a0:	mov	r0, r4
   172a4:	bl	318fc <crc32@@Base+0x181b4>
   172a8:	subs	sl, r0, #0
   172ac:	bne	17260 <__printf_chk@plt+0x4af0>
   172b0:	mov	r3, sl
   172b4:	movw	r2, #30156	; 0x75cc
   172b8:	mov	r1, r5
   172bc:	movt	r2, #3
   172c0:	mov	r0, r4
   172c4:	bl	30ef4 <crc32@@Base+0x177ac>
   172c8:	subs	r3, r0, #0
   172cc:	beq	172e4 <__printf_chk@plt+0x4b74>
   172d0:	movw	r1, #30164	; 0x75d4
   172d4:	mov	r2, r8
   172d8:	movt	r1, #3
   172dc:	mov	r0, #1
   172e0:	bl	12770 <__printf_chk@plt>
   172e4:	movw	r9, #27464	; 0x6b48
   172e8:	movw	fp, #30136	; 0x75b8
   172ec:	movt	r9, #3
   172f0:	movt	fp, #3
   172f4:	mov	r6, #0
   172f8:	b	17328 <__printf_chk@plt+0x4bb8>
   172fc:	cmp	r6, #0
   17300:	mov	r0, #1
   17304:	add	r6, r6, #1
   17308:	movweq	r1, #30188	; 0x75ec
   1730c:	moveq	r2, r8
   17310:	movteq	r1, #3
   17314:	movne	r2, r8
   17318:	movne	r1, fp
   1731c:	bl	12770 <__printf_chk@plt>
   17320:	mov	r0, sl
   17324:	bl	1226c <puts@plt>
   17328:	mov	r2, #0
   1732c:	mov	r3, r6
   17330:	str	r2, [sp]
   17334:	mov	r1, r5
   17338:	mov	r2, r9
   1733c:	mov	r0, r4
   17340:	bl	318fc <crc32@@Base+0x181b4>
   17344:	subs	sl, r0, #0
   17348:	bne	172fc <__printf_chk@plt+0x4b8c>
   1734c:	add	r2, sp, #32
   17350:	mov	r1, r5
   17354:	mov	r0, r4
   17358:	str	sl, [sp, #32]
   1735c:	bl	2d978 <crc32@@Base+0x14230>
   17360:	subs	r6, r0, #0
   17364:	bge	17384 <__printf_chk@plt+0x4c14>
   17368:	b	173d0 <__printf_chk@plt+0x4c60>
   1736c:	mov	r1, r6
   17370:	add	r2, sp, #32
   17374:	mov	r0, r4
   17378:	bl	2d978 <crc32@@Base+0x14230>
   1737c:	subs	r6, r0, #0
   17380:	blt	173d0 <__printf_chk@plt+0x4c60>
   17384:	ldr	r3, [sp, #32]
   17388:	cmp	r3, #0
   1738c:	ble	173d0 <__printf_chk@plt+0x4c60>
   17390:	cmp	r3, #1
   17394:	bne	1736c <__printf_chk@plt+0x4bfc>
   17398:	mov	r2, r8
   1739c:	mov	r1, r6
   173a0:	mov	r0, r4
   173a4:	bl	1664c <__printf_chk@plt+0x3edc>
   173a8:	b	1736c <__printf_chk@plt+0x4bfc>
   173ac:	bl	2f7b0 <crc32@@Base+0x16068>
   173b0:	movw	r2, #27024	; 0x6990
   173b4:	movw	r1, #27032	; 0x6998
   173b8:	movt	r2, #3
   173bc:	movt	r1, #3
   173c0:	mov	r3, r0
   173c4:	mov	r0, #1
   173c8:	bl	12770 <__printf_chk@plt>
   173cc:	b	17044 <__printf_chk@plt+0x48d4>
   173d0:	ldr	r9, [sp, #8]
   173d4:	b	17108 <__printf_chk@plt+0x4998>
   173d8:	ldr	sl, [sp, #20]
   173dc:	b	17044 <__printf_chk@plt+0x48d4>
   173e0:	bl	12770 <__printf_chk@plt>
   173e4:	movw	r0, #29628	; 0x73bc
   173e8:	movt	r0, #3
   173ec:	bl	1226c <puts@plt>
   173f0:	b	1719c <__printf_chk@plt+0x4a2c>
   173f4:	bl	12494 <__stack_chk_fail@plt>
   173f8:	push	{r4, r5, lr}
   173fc:	movw	r4, #61168	; 0xeef0
   17400:	movt	r4, #4
   17404:	sub	sp, sp, #12
   17408:	mov	r5, r2
   1740c:	movw	r2, #29532	; 0x735c
   17410:	ldr	ip, [r4]
   17414:	mov	r3, sp
   17418:	movt	r2, #3
   1741c:	str	ip, [sp, #4]
   17420:	bl	30ef4 <crc32@@Base+0x177ac>
   17424:	ldr	r2, [sp, #4]
   17428:	str	r0, [r5]
   1742c:	ldr	r3, [r4]
   17430:	cmp	r2, r3
   17434:	bne	1744c <__printf_chk@plt+0x4cdc>
   17438:	clz	r0, r0
   1743c:	lsr	r0, r0, #5
   17440:	rsb	r0, r0, #0
   17444:	add	sp, sp, #12
   17448:	pop	{r4, r5, pc}
   1744c:	bl	12494 <__stack_chk_fail@plt>
   17450:	push	{r4, r5, r6, lr}
   17454:	movw	r4, #61168	; 0xeef0
   17458:	movt	r4, #4
   1745c:	sub	sp, sp, #8
   17460:	mov	r6, r3
   17464:	mov	r5, r2
   17468:	ldr	ip, [r4]
   1746c:	mov	r3, sp
   17470:	movw	r2, #28000	; 0x6d60
   17474:	movt	r2, #3
   17478:	str	ip, [sp, #4]
   1747c:	bl	30ef4 <crc32@@Base+0x177ac>
   17480:	ldr	r2, [sp, #4]
   17484:	cmp	r0, #0
   17488:	str	r0, [r5]
   1748c:	streq	r0, [r6]
   17490:	ldrne	r3, [sp]
   17494:	mvneq	r0, #0
   17498:	movne	r0, #0
   1749c:	strne	r3, [r6]
   174a0:	ldr	r3, [r4]
   174a4:	cmp	r2, r3
   174a8:	bne	174b4 <__printf_chk@plt+0x4d44>
   174ac:	add	sp, sp, #8
   174b0:	pop	{r4, r5, r6, pc}
   174b4:	bl	12494 <__stack_chk_fail@plt>
   174b8:	ldr	r2, [r0, #4]
   174bc:	ubfx	ip, r2, #8, #8
   174c0:	ubfx	r1, r2, #16, #8
   174c4:	lsr	r3, r2, #24
   174c8:	orr	r3, r3, r2, lsl #24
   174cc:	orr	r3, r3, ip, lsl #16
   174d0:	orr	r3, r3, r1, lsl #8
   174d4:	add	r0, r0, r3
   174d8:	bx	lr
   174dc:	push	{r4, lr}
   174e0:	movw	r4, #61168	; 0xeef0
   174e4:	movt	r4, #4
   174e8:	sub	sp, sp, #16
   174ec:	add	r3, sp, #16
   174f0:	rev	r2, r2
   174f4:	ldr	ip, [r4]
   174f8:	str	r2, [r3, #-8]!
   174fc:	mov	r2, #4
   17500:	str	r2, [sp]
   17504:	movw	r2, #29500	; 0x733c
   17508:	movt	r2, #3
   1750c:	str	ip, [sp, #12]
   17510:	bl	2efa8 <crc32@@Base+0x15860>
   17514:	cmp	r0, #0
   17518:	beq	17528 <__printf_chk@plt+0x4db8>
   1751c:	cmn	r0, #3
   17520:	mvnne	r0, #0
   17524:	mvneq	r0, #27
   17528:	ldr	r2, [sp, #12]
   1752c:	ldr	r3, [r4]
   17530:	cmp	r2, r3
   17534:	bne	17540 <__printf_chk@plt+0x4dd0>
   17538:	add	sp, sp, #16
   1753c:	pop	{r4, pc}
   17540:	bl	12494 <__stack_chk_fail@plt>
   17544:	push	{r4, r5, r6, r7, r8, lr}
   17548:	mov	r7, r1
   1754c:	mov	r6, r0
   17550:	movw	r1, #30208	; 0x7600
   17554:	mov	r0, r2
   17558:	movt	r1, #3
   1755c:	mov	r5, r2
   17560:	mov	r8, r3
   17564:	bl	1265c <strcmp@plt>
   17568:	subs	r4, r0, #0
   1756c:	beq	1762c <__printf_chk@plt+0x4ebc>
   17570:	movw	r1, #30216	; 0x7608
   17574:	mov	r0, r5
   17578:	movt	r1, #3
   1757c:	bl	1265c <strcmp@plt>
   17580:	subs	r4, r0, #0
   17584:	beq	175f8 <__printf_chk@plt+0x4e88>
   17588:	movw	r1, #30224	; 0x7610
   1758c:	mov	r0, r5
   17590:	movt	r1, #3
   17594:	bl	1265c <strcmp@plt>
   17598:	subs	r4, r0, #0
   1759c:	beq	17658 <__printf_chk@plt+0x4ee8>
   175a0:	ldrb	r3, [r5]
   175a4:	cmp	r3, #109	; 0x6d
   175a8:	bne	17620 <__printf_chk@plt+0x4eb0>
   175ac:	ldrb	r3, [r5, #1]
   175b0:	cmp	r3, #100	; 0x64
   175b4:	bne	17620 <__printf_chk@plt+0x4eb0>
   175b8:	ldrb	r3, [r5, #2]
   175bc:	cmp	r3, #53	; 0x35
   175c0:	bne	17620 <__printf_chk@plt+0x4eb0>
   175c4:	ldrb	r4, [r5, #3]
   175c8:	cmp	r4, #0
   175cc:	bne	17620 <__printf_chk@plt+0x4eb0>
   175d0:	mov	r2, r8
   175d4:	mov	r0, r6
   175d8:	mov	r1, r7
   175dc:	mov	r3, #65536	; 0x10000
   175e0:	bl	217f0 <crc32@@Base+0x80a8>
   175e4:	ldr	r2, [sp, #24]
   175e8:	mov	r3, #16
   175ec:	mov	r0, r4
   175f0:	str	r3, [r2]
   175f4:	pop	{r4, r5, r6, r7, r8, pc}
   175f8:	mov	r2, r8
   175fc:	mov	r0, r6
   17600:	mov	r1, r7
   17604:	mov	r3, #65536	; 0x10000
   17608:	bl	27ce8 <crc32@@Base+0xe5a0>
   1760c:	ldr	r2, [sp, #24]
   17610:	mov	r3, #20
   17614:	mov	r0, r4
   17618:	str	r3, [r2]
   1761c:	pop	{r4, r5, r6, r7, r8, pc}
   17620:	mvn	r4, #0
   17624:	mov	r0, r4
   17628:	pop	{r4, r5, r6, r7, r8, pc}
   1762c:	mov	r2, r7
   17630:	mov	r1, r6
   17634:	mov	r3, #65536	; 0x10000
   17638:	bl	1975c <crc32@@Base+0x14>
   1763c:	ldr	r2, [sp, #24]
   17640:	mov	r3, #4
   17644:	rev	r0, r0
   17648:	str	r0, [r8]
   1764c:	str	r3, [r2]
   17650:	mov	r0, r4
   17654:	pop	{r4, r5, r6, r7, r8, pc}
   17658:	mov	r2, r8
   1765c:	mov	r0, r6
   17660:	mov	r1, r7
   17664:	mov	r3, #65536	; 0x10000
   17668:	bl	2a530 <crc32@@Base+0x10de8>
   1766c:	ldr	r2, [sp, #24]
   17670:	mov	r3, #32
   17674:	mov	r0, r4
   17678:	str	r3, [r2]
   1767c:	pop	{r4, r5, r6, r7, r8, pc}
   17680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17684:	movw	r6, #61168	; 0xeef0
   17688:	movt	r6, #4
   1768c:	sub	sp, sp, #76	; 0x4c
   17690:	mov	r5, r0
   17694:	add	r4, sp, #72	; 0x48
   17698:	ldr	r0, [r6]
   1769c:	mov	r9, r1
   176a0:	mov	fp, r2
   176a4:	mov	r8, r3
   176a8:	mov	r2, #1
   176ac:	movw	r3, #46016	; 0xb3c0
   176b0:	str	r2, [r4, #-44]!	; 0xffffffd4
   176b4:	movt	r3, #3
   176b8:	str	r0, [sp, #68]	; 0x44
   176bc:	str	r3, [sp, #24]
   176c0:	bl	18844 <__printf_chk@plt+0x60d4>
   176c4:	str	r4, [sp, #4]
   176c8:	mov	r3, r8
   176cc:	mov	r2, fp
   176d0:	mov	r1, r9
   176d4:	str	r0, [sp]
   176d8:	mov	r0, r5
   176dc:	bl	18c2c <__printf_chk@plt+0x64bc>
   176e0:	cmp	r0, #0
   176e4:	beq	17758 <__printf_chk@plt+0x4fe8>
   176e8:	movw	r2, #30232	; 0x7618
   176ec:	movt	r2, #3
   176f0:	mov	r4, #0
   176f4:	str	r2, [sp, #24]
   176f8:	mov	r7, r2
   176fc:	mov	r1, r4
   17700:	mov	r2, #0
   17704:	mov	r0, r5
   17708:	bl	30bf4 <crc32@@Base+0x174ac>
   1770c:	mov	r1, r9
   17710:	mov	r2, #0
   17714:	mov	r4, r0
   17718:	mov	r0, r5
   1771c:	bl	30bf4 <crc32@@Base+0x174ac>
   17720:	mov	r3, r4
   17724:	mov	r2, r7
   17728:	movw	r1, #30432	; 0x76e0
   1772c:	movt	r1, #3
   17730:	str	r0, [sp]
   17734:	mov	r0, #1
   17738:	bl	12770 <__printf_chk@plt>
   1773c:	mov	r0, #0
   17740:	ldr	r2, [sp, #68]	; 0x44
   17744:	ldr	r3, [r6]
   17748:	cmp	r2, r3
   1774c:	bne	1799c <__printf_chk@plt+0x522c>
   17750:	add	sp, sp, #76	; 0x4c
   17754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17758:	mov	r1, r9
   1775c:	mov	r0, r5
   17760:	bl	2da68 <crc32@@Base+0x14320>
   17764:	subs	r4, r0, #0
   17768:	blt	178ec <__printf_chk@plt+0x517c>
   1776c:	movw	r3, #28952	; 0x7118
   17770:	movt	r3, #3
   17774:	str	r3, [sp, #12]
   17778:	movw	r3, #30424	; 0x76d8
   1777c:	movt	r3, #3
   17780:	movw	r7, #28300	; 0x6e8c
   17784:	str	r6, [sp, #20]
   17788:	movt	r7, #3
   1778c:	str	r9, [sp, #16]
   17790:	mov	r6, r3
   17794:	b	177d0 <__printf_chk@plt+0x5060>
   17798:	ldr	r3, [sp, #28]
   1779c:	cmp	r3, #0
   177a0:	beq	177bc <__printf_chk@plt+0x504c>
   177a4:	mov	r0, r9
   177a8:	mov	r2, #9
   177ac:	ldr	r1, [sp, #12]
   177b0:	bl	1217c <strncmp@plt>
   177b4:	cmp	r0, #0
   177b8:	beq	178a8 <__printf_chk@plt+0x5138>
   177bc:	mov	r1, r4
   177c0:	mov	r0, r5
   177c4:	bl	2dac8 <crc32@@Base+0x14380>
   177c8:	subs	r4, r0, #0
   177cc:	blt	178e4 <__printf_chk@plt+0x5174>
   177d0:	mov	r2, #0
   177d4:	mov	r1, r4
   177d8:	mov	r0, r5
   177dc:	bl	30bf4 <crc32@@Base+0x174ac>
   177e0:	mov	r2, #4
   177e4:	mov	r1, r7
   177e8:	mov	r9, r0
   177ec:	bl	1217c <strncmp@plt>
   177f0:	subs	ip, r0, #0
   177f4:	bne	17798 <__printf_chk@plt+0x5028>
   177f8:	movw	r2, #29532	; 0x735c
   177fc:	mov	r1, r4
   17800:	movt	r2, #3
   17804:	add	r3, sp, #32
   17808:	mov	r0, r5
   1780c:	str	ip, [sp, #24]
   17810:	bl	30ef4 <crc32@@Base+0x177ac>
   17814:	subs	r9, r0, #0
   17818:	beq	17964 <__printf_chk@plt+0x51f4>
   1781c:	mov	r2, r9
   17820:	movw	r1, #55420	; 0xd87c
   17824:	mov	r0, #1
   17828:	movt	r1, #3
   1782c:	bl	12770 <__printf_chk@plt>
   17830:	add	r3, sp, #32
   17834:	movw	r2, #28000	; 0x6d60
   17838:	mov	r1, r4
   1783c:	movt	r2, #3
   17840:	mov	r0, r5
   17844:	bl	30ef4 <crc32@@Base+0x177ac>
   17848:	subs	sl, r0, #0
   1784c:	beq	17980 <__printf_chk@plt+0x5210>
   17850:	add	r3, sp, #32
   17854:	mov	r2, r9
   17858:	str	r3, [sp]
   1785c:	mov	r1, r8
   17860:	add	r3, sp, #36	; 0x24
   17864:	mov	r0, fp
   17868:	ldr	r9, [sp, #32]
   1786c:	bl	17544 <__printf_chk@plt+0x4dd4>
   17870:	cmp	r0, #0
   17874:	bne	1792c <__printf_chk@plt+0x51bc>
   17878:	ldr	r3, [sp, #32]
   1787c:	cmp	r9, r3
   17880:	bne	17910 <__printf_chk@plt+0x51a0>
   17884:	mov	r2, r9
   17888:	mov	r1, sl
   1788c:	add	r0, sp, #36	; 0x24
   17890:	bl	126c8 <memcmp@plt>
   17894:	cmp	r0, #0
   17898:	bne	17948 <__printf_chk@plt+0x51d8>
   1789c:	mov	r0, r6
   178a0:	bl	1226c <puts@plt>
   178a4:	b	177bc <__printf_chk@plt+0x504c>
   178a8:	add	r3, sp, #24
   178ac:	mvn	r2, #0
   178b0:	str	r3, [sp, #4]
   178b4:	mov	r1, r4
   178b8:	str	r2, [sp]
   178bc:	mov	r3, r8
   178c0:	mov	r2, fp
   178c4:	mov	r0, r5
   178c8:	bl	18b10 <__printf_chk@plt+0x63a0>
   178cc:	cmp	r0, #0
   178d0:	beq	1789c <__printf_chk@plt+0x512c>
   178d4:	movw	r0, #30428	; 0x76dc
   178d8:	movt	r0, #3
   178dc:	bl	1226c <puts@plt>
   178e0:	b	177bc <__printf_chk@plt+0x504c>
   178e4:	ldr	r9, [sp, #16]
   178e8:	ldr	r6, [sp, #20]
   178ec:	cmn	r4, #8
   178f0:	cmnne	r4, #11
   178f4:	movne	r0, #1
   178f8:	bne	17740 <__printf_chk@plt+0x4fd0>
   178fc:	movw	r2, #30300	; 0x765c
   17900:	movt	r2, #3
   17904:	str	r2, [sp, #24]
   17908:	mov	r7, r2
   1790c:	b	176fc <__printf_chk@plt+0x4f8c>
   17910:	movw	r2, #30376	; 0x76a8
   17914:	movt	r2, #3
   17918:	ldr	r9, [sp, #16]
   1791c:	ldr	r6, [sp, #20]
   17920:	mov	r7, r2
   17924:	str	r2, [sp, #24]
   17928:	b	176fc <__printf_chk@plt+0x4f8c>
   1792c:	movw	r2, #30396	; 0x76bc
   17930:	movt	r2, #3
   17934:	ldr	r9, [sp, #16]
   17938:	ldr	r6, [sp, #20]
   1793c:	mov	r7, r2
   17940:	str	r2, [sp, #24]
   17944:	b	176fc <__printf_chk@plt+0x4f8c>
   17948:	movw	r2, #30360	; 0x7698
   1794c:	movt	r2, #3
   17950:	ldr	r9, [sp, #16]
   17954:	ldr	r6, [sp, #20]
   17958:	mov	r7, r2
   1795c:	str	r2, [sp, #24]
   17960:	b	176fc <__printf_chk@plt+0x4f8c>
   17964:	movw	r2, #30328	; 0x7678
   17968:	movt	r2, #3
   1796c:	ldr	r9, [sp, #16]
   17970:	ldr	r6, [sp, #20]
   17974:	mov	r7, r2
   17978:	str	r2, [sp, #24]
   1797c:	b	176fc <__printf_chk@plt+0x4f8c>
   17980:	movw	r2, #30268	; 0x763c
   17984:	movt	r2, #3
   17988:	ldr	r9, [sp, #16]
   1798c:	ldr	r6, [sp, #20]
   17990:	mov	r7, r2
   17994:	str	r2, [sp, #24]
   17998:	b	176fc <__printf_chk@plt+0x4f8c>
   1799c:	bl	12494 <__stack_chk_fail@plt>
   179a0:	push	{r4, r5, r6, r7, lr}
   179a4:	movw	r4, #61168	; 0xeef0
   179a8:	movt	r4, #4
   179ac:	sub	sp, sp, #28
   179b0:	add	r3, sp, #16
   179b4:	add	r2, sp, #12
   179b8:	ldr	ip, [r4]
   179bc:	mov	r5, r0
   179c0:	mov	r6, r1
   179c4:	str	ip, [sp, #20]
   179c8:	bl	16a04 <__printf_chk@plt+0x4294>
   179cc:	cmp	r0, #0
   179d0:	bne	179fc <__printf_chk@plt+0x528c>
   179d4:	mov	r1, r6
   179d8:	mov	r0, r5
   179dc:	ldrd	r2, [sp, #12]
   179e0:	bl	17680 <__printf_chk@plt+0x4f10>
   179e4:	ldr	r2, [sp, #20]
   179e8:	ldr	r3, [r4]
   179ec:	cmp	r2, r3
   179f0:	bne	17a48 <__printf_chk@plt+0x52d8>
   179f4:	add	sp, sp, #28
   179f8:	pop	{r4, r5, r6, r7, pc}
   179fc:	mov	r2, #0
   17a00:	mov	r0, r5
   17a04:	mov	r1, r2
   17a08:	bl	30bf4 <crc32@@Base+0x174ac>
   17a0c:	mov	r1, r6
   17a10:	mov	r2, #0
   17a14:	mov	r7, r0
   17a18:	mov	r0, r5
   17a1c:	bl	30bf4 <crc32@@Base+0x174ac>
   17a20:	mov	r3, r7
   17a24:	movw	r2, #28676	; 0x7004
   17a28:	movw	r1, #30484	; 0x7714
   17a2c:	movt	r2, #3
   17a30:	movt	r1, #3
   17a34:	str	r0, [sp]
   17a38:	mov	r0, #1
   17a3c:	bl	12770 <__printf_chk@plt>
   17a40:	mov	r0, #0
   17a44:	b	179e4 <__printf_chk@plt+0x5274>
   17a48:	bl	12494 <__stack_chk_fail@plt>
   17a4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17a50:	movw	r9, #61168	; 0xeef0
   17a54:	movt	r9, #4
   17a58:	sub	sp, sp, #8
   17a5c:	movw	r1, #27024	; 0x6990
   17a60:	movt	r1, #3
   17a64:	ldr	r3, [r9]
   17a68:	mov	r6, r0
   17a6c:	str	r3, [sp, #4]
   17a70:	bl	31250 <crc32@@Base+0x17b08>
   17a74:	subs	r4, r0, #0
   17a78:	blt	17b5c <__printf_chk@plt+0x53ec>
   17a7c:	add	r8, sp, #8
   17a80:	mov	r2, r6
   17a84:	movw	r1, #30536	; 0x7748
   17a88:	mov	r0, #1
   17a8c:	movt	r1, #3
   17a90:	mov	r7, #0
   17a94:	bl	12770 <__printf_chk@plt>
   17a98:	str	r7, [r8, #-8]!
   17a9c:	mov	r1, r4
   17aa0:	mov	r0, r6
   17aa4:	mov	r2, r8
   17aa8:	bl	2d978 <crc32@@Base+0x14230>
   17aac:	subs	r5, r0, #0
   17ab0:	blt	17b40 <__printf_chk@plt+0x53d0>
   17ab4:	ldr	r4, [sp]
   17ab8:	cmp	r4, r7
   17abc:	ble	17b40 <__printf_chk@plt+0x53d0>
   17ac0:	movw	sl, #30588	; 0x777c
   17ac4:	movt	sl, #3
   17ac8:	b	17af0 <__printf_chk@plt+0x5380>
   17acc:	mov	r1, r5
   17ad0:	mov	r2, r8
   17ad4:	mov	r0, r6
   17ad8:	bl	2d978 <crc32@@Base+0x14230>
   17adc:	subs	r5, r0, #0
   17ae0:	blt	17b40 <__printf_chk@plt+0x53d0>
   17ae4:	ldr	r4, [sp]
   17ae8:	cmp	r4, #0
   17aec:	ble	17b40 <__printf_chk@plt+0x53d0>
   17af0:	cmp	r4, #1
   17af4:	bne	17acc <__printf_chk@plt+0x535c>
   17af8:	mov	r2, #0
   17afc:	mov	r1, r5
   17b00:	mov	r0, r6
   17b04:	bl	30bf4 <crc32@@Base+0x174ac>
   17b08:	mov	r2, r7
   17b0c:	mov	r1, sl
   17b10:	add	r7, r7, #1
   17b14:	mov	r3, r0
   17b18:	mov	r0, r4
   17b1c:	bl	12770 <__printf_chk@plt>
   17b20:	mov	r1, r5
   17b24:	mov	r0, r6
   17b28:	bl	179a0 <__printf_chk@plt+0x5230>
   17b2c:	cmp	r0, #0
   17b30:	beq	17b44 <__printf_chk@plt+0x53d4>
   17b34:	mov	r0, #10
   17b38:	bl	122d8 <putchar@plt>
   17b3c:	b	17acc <__printf_chk@plt+0x535c>
   17b40:	mov	r0, #1
   17b44:	ldr	r2, [sp, #4]
   17b48:	ldr	r3, [r9]
   17b4c:	cmp	r2, r3
   17b50:	bne	17b84 <__printf_chk@plt+0x5414>
   17b54:	add	sp, sp, #8
   17b58:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b5c:	bl	2f7b0 <crc32@@Base+0x16068>
   17b60:	movw	r2, #27024	; 0x6990
   17b64:	movw	r1, #27032	; 0x6998
   17b68:	movt	r2, #3
   17b6c:	movt	r1, #3
   17b70:	mov	r3, r0
   17b74:	mov	r0, #1
   17b78:	bl	12770 <__printf_chk@plt>
   17b7c:	mov	r0, #0
   17b80:	b	17b44 <__printf_chk@plt+0x53d4>
   17b84:	bl	12494 <__stack_chk_fail@plt>
   17b88:	push	{r4, r5, lr}
   17b8c:	movw	r4, #61168	; 0xeef0
   17b90:	movt	r4, #4
   17b94:	sub	sp, sp, #12
   17b98:	mov	r5, r2
   17b9c:	add	r2, sp, #3
   17ba0:	ldr	r3, [r4]
   17ba4:	str	r3, [sp, #4]
   17ba8:	bl	16704 <__printf_chk@plt+0x3f94>
   17bac:	ldr	r2, [sp, #4]
   17bb0:	ldr	r3, [r4]
   17bb4:	cmp	r0, #0
   17bb8:	ldrbeq	r0, [sp, #3]
   17bbc:	movne	r0, #0
   17bc0:	subeq	r0, r0, r5
   17bc4:	clzeq	r0, r0
   17bc8:	lsreq	r0, r0, #5
   17bcc:	cmp	r2, r3
   17bd0:	bne	17bdc <__printf_chk@plt+0x546c>
   17bd4:	add	sp, sp, #12
   17bd8:	pop	{r4, r5, pc}
   17bdc:	bl	12494 <__stack_chk_fail@plt>
   17be0:	push	{r4, r5, lr}
   17be4:	movw	r4, #61168	; 0xeef0
   17be8:	movt	r4, #4
   17bec:	sub	sp, sp, #12
   17bf0:	mov	r5, r2
   17bf4:	add	r2, sp, #3
   17bf8:	ldr	r3, [r4]
   17bfc:	str	r3, [sp, #4]
   17c00:	bl	1676c <__printf_chk@plt+0x3ffc>
   17c04:	cmp	r0, #0
   17c08:	movne	r0, #0
   17c0c:	bne	17c30 <__printf_chk@plt+0x54c0>
   17c10:	ldrb	r0, [sp, #3]
   17c14:	cmp	r0, r5
   17c18:	moveq	r0, #1
   17c1c:	beq	17c30 <__printf_chk@plt+0x54c0>
   17c20:	cmp	r5, #3
   17c24:	cmpeq	r0, #24
   17c28:	moveq	r0, #1
   17c2c:	movne	r0, #0
   17c30:	ldr	r2, [sp, #4]
   17c34:	ldr	r3, [r4]
   17c38:	cmp	r2, r3
   17c3c:	bne	17c48 <__printf_chk@plt+0x54d8>
   17c40:	add	sp, sp, #12
   17c44:	pop	{r4, r5, pc}
   17c48:	bl	12494 <__stack_chk_fail@plt>
   17c4c:	push	{r4, r5, lr}
   17c50:	movw	r4, #61168	; 0xeef0
   17c54:	movt	r4, #4
   17c58:	sub	sp, sp, #12
   17c5c:	mov	r5, r2
   17c60:	add	r2, sp, #3
   17c64:	ldr	r3, [r4]
   17c68:	str	r3, [sp, #4]
   17c6c:	bl	167d4 <__printf_chk@plt+0x4064>
   17c70:	ldr	r2, [sp, #4]
   17c74:	ldr	r3, [r4]
   17c78:	cmp	r0, #0
   17c7c:	ldrbeq	r0, [sp, #3]
   17c80:	movne	r0, #0
   17c84:	subeq	r0, r0, r5
   17c88:	clzeq	r0, r0
   17c8c:	lsreq	r0, r0, #5
   17c90:	cmp	r2, r3
   17c94:	bne	17ca0 <__printf_chk@plt+0x5530>
   17c98:	add	sp, sp, #12
   17c9c:	pop	{r4, r5, pc}
   17ca0:	bl	12494 <__stack_chk_fail@plt>
   17ca4:	push	{r4, r5, lr}
   17ca8:	movw	r4, #61168	; 0xeef0
   17cac:	movt	r4, #4
   17cb0:	sub	sp, sp, #12
   17cb4:	mov	r5, r2
   17cb8:	add	r2, sp, #3
   17cbc:	ldr	r3, [r4]
   17cc0:	str	r3, [sp, #4]
   17cc4:	bl	1683c <__printf_chk@plt+0x40cc>
   17cc8:	ldr	r2, [sp, #4]
   17ccc:	ldr	r3, [r4]
   17cd0:	cmp	r0, #0
   17cd4:	ldrbeq	r0, [sp, #3]
   17cd8:	movne	r0, #0
   17cdc:	subeq	r0, r0, r5
   17ce0:	clzeq	r0, r0
   17ce4:	lsreq	r0, r0, #5
   17ce8:	cmp	r2, r3
   17cec:	bne	17cf8 <__printf_chk@plt+0x5588>
   17cf0:	add	sp, sp, #12
   17cf4:	pop	{r4, r5, pc}
   17cf8:	bl	12494 <__stack_chk_fail@plt>
   17cfc:	mov	r3, #0
   17d00:	movw	r2, #27276	; 0x6a8c
   17d04:	push	{r4, lr}
   17d08:	mov	r1, r3
   17d0c:	movt	r2, #3
   17d10:	mov	r4, r0
   17d14:	bl	30ef4 <crc32@@Base+0x177ac>
   17d18:	cmp	r0, #0
   17d1c:	beq	17d5c <__printf_chk@plt+0x55ec>
   17d20:	mov	r3, #0
   17d24:	movw	r2, #29500	; 0x733c
   17d28:	mov	r1, r3
   17d2c:	movt	r2, #3
   17d30:	mov	r0, r4
   17d34:	bl	30ef4 <crc32@@Base+0x177ac>
   17d38:	cmp	r0, #0
   17d3c:	beq	17d5c <__printf_chk@plt+0x55ec>
   17d40:	mov	r0, r4
   17d44:	movw	r1, #27024	; 0x6990
   17d48:	movt	r1, #3
   17d4c:	bl	31250 <crc32@@Base+0x17b08>
   17d50:	mvn	r0, r0
   17d54:	lsr	r0, r0, #31
   17d58:	pop	{r4, pc}
   17d5c:	mov	r0, #0
   17d60:	pop	{r4, pc}
   17d64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17d68:	movw	sl, #61168	; 0xeef0
   17d6c:	movt	sl, #4
   17d70:	sub	sp, sp, #52	; 0x34
   17d74:	mov	r5, r1
   17d78:	movw	r1, #28084	; 0x6db4
   17d7c:	ldr	r3, [sl]
   17d80:	movt	r1, #3
   17d84:	mov	r2, #0
   17d88:	mov	r7, r0
   17d8c:	str	r2, [sp, #28]
   17d90:	str	r3, [sp, #44]	; 0x2c
   17d94:	bl	31250 <crc32@@Base+0x17b08>
   17d98:	movw	r1, #27024	; 0x6990
   17d9c:	movt	r1, #3
   17da0:	mov	r4, r0
   17da4:	mov	r0, r7
   17da8:	bl	31250 <crc32@@Base+0x17b08>
   17dac:	lsr	r8, r0, #31
   17db0:	str	r0, [sp, #8]
   17db4:	orrs	r8, r8, r4, lsr #31
   17db8:	bne	17f64 <__printf_chk@plt+0x57f4>
   17dbc:	add	r3, sp, #32
   17dc0:	mov	r0, r5
   17dc4:	movw	r2, #30620	; 0x779c
   17dc8:	mov	r1, r8
   17dcc:	movt	r2, #3
   17dd0:	bl	30ef4 <crc32@@Base+0x177ac>
   17dd4:	subs	r3, r0, #0
   17dd8:	str	r3, [sp, #20]
   17ddc:	beq	17f64 <__printf_chk@plt+0x57f4>
   17de0:	mov	r1, r4
   17de4:	mov	r0, r7
   17de8:	add	r2, sp, #28
   17dec:	bl	2d978 <crc32@@Base+0x14230>
   17df0:	subs	r6, r0, #0
   17df4:	blt	17f64 <__printf_chk@plt+0x57f4>
   17df8:	ldr	r3, [sp, #28]
   17dfc:	cmp	r3, #0
   17e00:	ble	17f64 <__printf_chk@plt+0x57f4>
   17e04:	movw	r2, #27392	; 0x6b00
   17e08:	movw	r1, #40512	; 0x9e40
   17e0c:	movt	r2, #3
   17e10:	movt	r1, #3
   17e14:	str	r2, [sp, #4]
   17e18:	str	r1, [sp, #12]
   17e1c:	str	r8, [sp]
   17e20:	str	sl, [sp, #16]
   17e24:	b	17e4c <__printf_chk@plt+0x56dc>
   17e28:	mov	r1, r6
   17e2c:	add	r2, sp, #28
   17e30:	mov	r0, r7
   17e34:	bl	2d978 <crc32@@Base+0x14230>
   17e38:	subs	r6, r0, #0
   17e3c:	blt	17f38 <__printf_chk@plt+0x57c8>
   17e40:	ldr	r3, [sp, #28]
   17e44:	cmp	r3, #0
   17e48:	ble	17f38 <__printf_chk@plt+0x57c8>
   17e4c:	cmp	r3, #1
   17e50:	bne	17e28 <__printf_chk@plt+0x56b8>
   17e54:	ldr	r2, [sp, #4]
   17e58:	add	r3, sp, #36	; 0x24
   17e5c:	mov	r1, r6
   17e60:	mov	r0, r7
   17e64:	bl	30ef4 <crc32@@Base+0x177ac>
   17e68:	subs	r2, r0, #0
   17e6c:	beq	17e28 <__printf_chk@plt+0x56b8>
   17e70:	ldr	r1, [sp, #8]
   17e74:	mov	r0, r7
   17e78:	bl	30bc4 <crc32@@Base+0x1747c>
   17e7c:	subs	r1, r0, #0
   17e80:	blt	17e28 <__printf_chk@plt+0x56b8>
   17e84:	add	r3, sp, #40	; 0x28
   17e88:	ldr	r2, [sp, #12]
   17e8c:	mov	r0, r7
   17e90:	bl	30ef4 <crc32@@Base+0x177ac>
   17e94:	subs	fp, r0, #0
   17e98:	beq	17e28 <__printf_chk@plt+0x56b8>
   17e9c:	ldr	r3, [sp, #32]
   17ea0:	cmp	r3, #0
   17ea4:	str	r3, [sp, #36]	; 0x24
   17ea8:	ble	17e28 <__printf_chk@plt+0x56b8>
   17eac:	ldr	r3, [sp]
   17eb0:	cmp	r8, #0
   17eb4:	clz	r9, r3
   17eb8:	lsr	r9, r9, #5
   17ebc:	orrgt	r3, r9, #1
   17ec0:	movle	r3, r9
   17ec4:	cmp	r3, #0
   17ec8:	beq	17f70 <__printf_chk@plt+0x5800>
   17ecc:	ldr	r5, [sp, #20]
   17ed0:	mov	sl, #0
   17ed4:	b	17f08 <__printf_chk@plt+0x5798>
   17ed8:	ldr	r0, [sp, #36]	; 0x24
   17edc:	add	r5, r5, r4
   17ee0:	add	sl, sl, #1
   17ee4:	sub	r0, r0, r4
   17ee8:	str	r0, [sp, #36]	; 0x24
   17eec:	cmp	r0, #0
   17ef0:	ble	17e28 <__printf_chk@plt+0x56b8>
   17ef4:	cmp	sl, r8
   17ef8:	movge	r3, r9
   17efc:	orrlt	r3, r9, #1
   17f00:	cmp	r3, #0
   17f04:	beq	17e28 <__printf_chk@plt+0x56b8>
   17f08:	mov	r0, r5
   17f0c:	bl	125c0 <strlen@plt>
   17f10:	mov	r2, r5
   17f14:	mov	r1, #0
   17f18:	add	r4, r0, #1
   17f1c:	mov	r0, fp
   17f20:	bl	319e8 <crc32@@Base+0x182a0>
   17f24:	cmp	r0, #0
   17f28:	bne	17ed8 <__printf_chk@plt+0x5768>
   17f2c:	mov	r8, sl
   17f30:	str	r6, [sp]
   17f34:	b	17e28 <__printf_chk@plt+0x56b8>
   17f38:	ldr	r3, [sp]
   17f3c:	ldr	sl, [sp, #16]
   17f40:	cmp	r3, #0
   17f44:	beq	17f64 <__printf_chk@plt+0x57f4>
   17f48:	ldr	r2, [sp, #44]	; 0x2c
   17f4c:	ldr	r3, [sl]
   17f50:	ldr	r0, [sp]
   17f54:	cmp	r2, r3
   17f58:	bne	17f78 <__printf_chk@plt+0x5808>
   17f5c:	add	sp, sp, #52	; 0x34
   17f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f64:	mvn	r3, #0
   17f68:	str	r3, [sp]
   17f6c:	b	17f48 <__printf_chk@plt+0x57d8>
   17f70:	mov	r8, r3
   17f74:	b	17e28 <__printf_chk@plt+0x56b8>
   17f78:	bl	12494 <__stack_chk_fail@plt>
   17f7c:	push	{r4, r5, r6, r7, r8, r9, lr}
   17f80:	movw	r4, #61168	; 0xeef0
   17f84:	movt	r4, #4
   17f88:	sub	sp, sp, #12
   17f8c:	mov	r5, r1
   17f90:	movw	r1, #28084	; 0x6db4
   17f94:	ldr	r3, [r4]
   17f98:	movt	r1, #3
   17f9c:	mov	r8, r0
   17fa0:	str	r3, [sp, #4]
   17fa4:	bl	31250 <crc32@@Base+0x17b08>
   17fa8:	subs	r6, r0, #0
   17fac:	blt	18018 <__printf_chk@plt+0x58a8>
   17fb0:	cmp	r5, #0
   17fb4:	beq	1804c <__printf_chk@plt+0x58dc>
   17fb8:	mov	r1, #35	; 0x23
   17fbc:	mov	r0, r5
   17fc0:	bl	12764 <strchr@plt>
   17fc4:	cmp	r0, #0
   17fc8:	beq	18034 <__printf_chk@plt+0x58c4>
   17fcc:	sub	r0, r0, r5
   17fd0:	str	r0, [sp]
   17fd4:	add	r0, r0, #1
   17fd8:	bl	125a8 <malloc@plt>
   17fdc:	subs	r7, r0, #0
   17fe0:	beq	18074 <__printf_chk@plt+0x5904>
   17fe4:	ldr	r9, [sp]
   17fe8:	mov	r1, r5
   17fec:	mov	r2, r9
   17ff0:	bl	1259c <memcpy@plt>
   17ff4:	mov	r1, r6
   17ff8:	mov	r3, #0
   17ffc:	mov	r0, r8
   18000:	mov	r2, r7
   18004:	strb	r3, [r7, r9]
   18008:	bl	30bc4 <crc32@@Base+0x1747c>
   1800c:	mov	r6, r0
   18010:	mov	r0, r7
   18014:	bl	12128 <free@plt>
   18018:	ldr	r2, [sp, #4]
   1801c:	mov	r0, r6
   18020:	ldr	r3, [r4]
   18024:	cmp	r2, r3
   18028:	bne	1807c <__printf_chk@plt+0x590c>
   1802c:	add	sp, sp, #12
   18030:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18034:	mov	r1, r6
   18038:	mov	r2, r5
   1803c:	mov	r0, r8
   18040:	bl	30bc4 <crc32@@Base+0x1747c>
   18044:	mov	r6, r0
   18048:	b	18018 <__printf_chk@plt+0x58a8>
   1804c:	mov	r1, r6
   18050:	movw	r2, #27448	; 0x6b38
   18054:	mov	r3, sp
   18058:	movt	r2, #3
   1805c:	mov	r0, r8
   18060:	bl	30ef4 <crc32@@Base+0x177ac>
   18064:	subs	r5, r0, #0
   18068:	ldreq	r6, [sp]
   1806c:	bne	17fb8 <__printf_chk@plt+0x5848>
   18070:	b	18018 <__printf_chk@plt+0x58a8>
   18074:	mvn	r6, #11
   18078:	b	18018 <__printf_chk@plt+0x58a8>
   1807c:	bl	12494 <__stack_chk_fail@plt>
   18080:	b	31798 <crc32@@Base+0x18050>
   18084:	push	{r4, r5, lr}
   18088:	movw	r4, #61168	; 0xeef0
   1808c:	sub	sp, sp, #20
   18090:	movt	r4, #4
   18094:	add	ip, sp, #8
   18098:	mov	r5, r0
   1809c:	str	ip, [sp]
   180a0:	ldr	ip, [r4]
   180a4:	str	ip, [sp, #12]
   180a8:	bl	318fc <crc32@@Base+0x181b4>
   180ac:	subs	r1, r0, #0
   180b0:	ldreq	r0, [sp, #8]
   180b4:	beq	180c0 <__printf_chk@plt+0x5950>
   180b8:	mov	r0, r5
   180bc:	bl	166d4 <__printf_chk@plt+0x3f64>
   180c0:	ldr	r2, [sp, #12]
   180c4:	ldr	r3, [r4]
   180c8:	cmp	r2, r3
   180cc:	bne	180d8 <__printf_chk@plt+0x5968>
   180d0:	add	sp, sp, #20
   180d4:	pop	{r4, r5, pc}
   180d8:	bl	12494 <__stack_chk_fail@plt>
   180dc:	mov	r3, #0
   180e0:	b	18084 <__printf_chk@plt+0x5914>
   180e4:	push	{r4, r5, r6, lr}
   180e8:	mov	r5, r1
   180ec:	ldr	r1, [r0, #72]	; 0x48
   180f0:	mov	r0, r2
   180f4:	mov	r4, r2
   180f8:	bl	17f7c <__printf_chk@plt+0x580c>
   180fc:	subs	r1, r0, #0
   18100:	blt	18120 <__printf_chk@plt+0x59b0>
   18104:	mov	r2, r5
   18108:	mov	r0, r4
   1810c:	mov	r3, #0
   18110:	bl	18084 <__printf_chk@plt+0x5914>
   18114:	cmp	r0, #0
   18118:	mvnlt	r0, #1
   1811c:	pop	{r4, r5, r6, pc}
   18120:	mvn	r0, #21
   18124:	pop	{r4, r5, r6, pc}
   18128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1812c:	sub	sp, sp, #60	; 0x3c
   18130:	mov	r9, r3
   18134:	subs	ip, r2, #0
   18138:	ldr	r3, [sp, #112]	; 0x70
   1813c:	movw	r6, #61168	; 0xeef0
   18140:	str	ip, [sp, #8]
   18144:	movt	r6, #4
   18148:	ldrne	r7, [ip]
   1814c:	mov	r4, r1
   18150:	str	r3, [sp, #16]
   18154:	mov	sl, r0
   18158:	ldr	r3, [sp, #116]	; 0x74
   1815c:	movw	r1, #30640	; 0x77b0
   18160:	ldreq	r7, [sp, #8]
   18164:	cmp	r9, #0
   18168:	ldr	fp, [sp, #100]	; 0x64
   1816c:	movt	r1, #3
   18170:	str	r3, [sp, #20]
   18174:	mov	r0, #1
   18178:	ldrne	r3, [r9]
   1817c:	ldr	r2, [r6]
   18180:	streq	r9, [sp, #12]
   18184:	strne	r3, [sp, #12]
   18188:	sub	r3, fp, #1
   1818c:	cmp	r3, #28
   18190:	str	r2, [sp, #52]	; 0x34
   18194:	movwls	r2, #29352	; 0x72a8
   18198:	movtls	r2, #3
   1819c:	movwhi	r8, #30632	; 0x77a8
   181a0:	movthi	r8, #3
   181a4:	ldrls	r8, [r2, r3, lsl #2]
   181a8:	mov	r3, r4
   181ac:	mov	r2, r8
   181b0:	bl	12770 <__printf_chk@plt>
   181b4:	mov	r0, r4
   181b8:	bl	17cfc <__printf_chk@plt+0x558c>
   181bc:	cmp	r0, #0
   181c0:	beq	18680 <__printf_chk@plt+0x5f10>
   181c4:	cmp	r7, #0
   181c8:	beq	18414 <__printf_chk@plt+0x5ca4>
   181cc:	mov	r1, r7
   181d0:	mov	r0, r4
   181d4:	bl	166d4 <__printf_chk@plt+0x3f64>
   181d8:	mov	r3, #0
   181dc:	str	r3, [sp, #24]
   181e0:	mov	r5, r0
   181e4:	cmp	r5, #0
   181e8:	blt	1866c <__printf_chk@plt+0x5efc>
   181ec:	mov	r3, r8
   181f0:	mov	r2, r7
   181f4:	movw	r1, #30864	; 0x7890
   181f8:	mov	r0, #1
   181fc:	movt	r1, #3
   18200:	bl	12770 <__printf_chk@plt>
   18204:	ldr	sl, [sl, #124]	; 0x7c
   18208:	movw	r2, #29956	; 0x7504
   1820c:	mov	r1, r5
   18210:	movt	r2, #3
   18214:	mov	r0, r4
   18218:	bl	16afc <__printf_chk@plt+0x438c>
   1821c:	cmp	sl, #0
   18220:	bne	183a4 <__printf_chk@plt+0x5c34>
   18224:	cmp	fp, #8
   18228:	add	sl, sp, #48	; 0x30
   1822c:	beq	183dc <__printf_chk@plt+0x5c6c>
   18230:	mov	r2, sl
   18234:	mov	r1, r5
   18238:	mov	r0, r4
   1823c:	uxtb	r3, fp
   18240:	str	r3, [sp, #28]
   18244:	bl	167d4 <__printf_chk@plt+0x4064>
   18248:	cmp	r0, #0
   1824c:	beq	1832c <__printf_chk@plt+0x5bbc>
   18250:	mov	r2, sl
   18254:	mov	r1, r5
   18258:	mov	r0, r4
   1825c:	bl	167d4 <__printf_chk@plt+0x4064>
   18260:	cmp	r0, #0
   18264:	beq	184c4 <__printf_chk@plt+0x5d54>
   18268:	cmp	fp, #2
   1826c:	beq	184d4 <__printf_chk@plt+0x5d64>
   18270:	cmp	fp, #29
   18274:	cmpne	fp, #8
   18278:	moveq	r3, #1
   1827c:	movne	r3, #0
   18280:	bne	18504 <__printf_chk@plt+0x5d94>
   18284:	cmp	fp, #22
   18288:	bne	186b0 <__printf_chk@plt+0x5f40>
   1828c:	add	r3, sp, #44	; 0x2c
   18290:	add	r2, sp, #40	; 0x28
   18294:	mov	r1, r5
   18298:	mov	r0, r4
   1829c:	bl	16a04 <__printf_chk@plt+0x4294>
   182a0:	cmp	r0, #0
   182a4:	ldreq	r3, [sp, #44]	; 0x2c
   182a8:	streq	r3, [sp, #32]
   182ac:	bne	18708 <__printf_chk@plt+0x5f98>
   182b0:	ldr	r3, [sp, #40]	; 0x28
   182b4:	str	r3, [sp, #28]
   182b8:	ldr	r3, [sp, #108]	; 0x6c
   182bc:	cmp	r3, #0
   182c0:	ldr	r3, [sp, #28]
   182c4:	str	r3, [sp, #36]	; 0x24
   182c8:	bne	18588 <__printf_chk@plt+0x5e18>
   182cc:	ldr	r2, [sp, #16]
   182d0:	ldr	r1, [sp, #36]	; 0x24
   182d4:	ldr	r3, [sp, #8]
   182d8:	str	r1, [r2]
   182dc:	cmp	r3, #0
   182e0:	ldr	r2, [sp, #20]
   182e4:	ldr	r1, [sp, #32]
   182e8:	str	r1, [r2]
   182ec:	strne	r7, [r3]
   182f0:	cmp	r9, #0
   182f4:	beq	18310 <__printf_chk@plt+0x5ba0>
   182f8:	ldr	r2, [sp, #12]
   182fc:	ldr	r1, [sp, #24]
   18300:	cmp	r2, #0
   18304:	mov	r3, r2
   18308:	moveq	r3, r1
   1830c:	str	r3, [r9]
   18310:	ldr	r2, [sp, #52]	; 0x34
   18314:	mov	r0, r5
   18318:	ldr	r3, [r6]
   1831c:	cmp	r2, r3
   18320:	bne	18738 <__printf_chk@plt+0x5fc8>
   18324:	add	sp, sp, #60	; 0x3c
   18328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1832c:	ldrb	r3, [sp, #48]	; 0x30
   18330:	uxtb	r2, fp
   18334:	cmp	r2, r3
   18338:	bne	18250 <__printf_chk@plt+0x5ae0>
   1833c:	cmp	fp, #29
   18340:	cmpne	fp, #8
   18344:	movne	r3, #1
   18348:	strne	r3, [sp, #32]
   1834c:	bne	18508 <__printf_chk@plt+0x5d98>
   18350:	add	r3, sp, #44	; 0x2c
   18354:	add	r2, sp, #40	; 0x28
   18358:	mov	r1, r5
   1835c:	mov	r0, r4
   18360:	bl	16a04 <__printf_chk@plt+0x4294>
   18364:	cmp	r0, #0
   18368:	bne	18708 <__printf_chk@plt+0x5f98>
   1836c:	ldr	r3, [sp, #44]	; 0x2c
   18370:	cmp	fp, #8
   18374:	ldr	r0, [sp, #40]	; 0x28
   18378:	str	r3, [sp, #32]
   1837c:	str	r0, [sp, #28]
   18380:	bne	182b8 <__printf_chk@plt+0x5b48>
   18384:	bl	2d61c <crc32@@Base+0x13ed4>
   18388:	cmp	r0, #0
   1838c:	beq	182b0 <__printf_chk@plt+0x5b40>
   18390:	movw	r0, #30972	; 0x78fc
   18394:	movt	r0, #3
   18398:	bl	1226c <puts@plt>
   1839c:	mvn	r5, #7
   183a0:	b	18310 <__printf_chk@plt+0x5ba0>
   183a4:	movw	r0, #30780	; 0x783c
   183a8:	movt	r0, #3
   183ac:	bl	1226c <puts@plt>
   183b0:	mov	r1, r5
   183b4:	mov	r0, r4
   183b8:	bl	179a0 <__printf_chk@plt+0x5230>
   183bc:	cmp	r0, #0
   183c0:	beq	1869c <__printf_chk@plt+0x5f2c>
   183c4:	movw	r0, #55980	; 0xdaac
   183c8:	movt	r0, #3
   183cc:	bl	1226c <puts@plt>
   183d0:	cmp	fp, #8
   183d4:	add	sl, sp, #48	; 0x30
   183d8:	bne	18230 <__printf_chk@plt+0x5ac0>
   183dc:	mov	r1, r5
   183e0:	mov	r0, r4
   183e4:	mov	r2, sl
   183e8:	bl	1683c <__printf_chk@plt+0x40cc>
   183ec:	cmp	r0, #0
   183f0:	bne	18400 <__printf_chk@plt+0x5c90>
   183f4:	ldrb	r3, [sp, #48]	; 0x30
   183f8:	cmp	r3, #0
   183fc:	beq	18230 <__printf_chk@plt+0x5ac0>
   18400:	movw	r0, #30892	; 0x78ac
   18404:	movt	r0, #3
   18408:	bl	1226c <puts@plt>
   1840c:	mvn	r5, #92	; 0x5c
   18410:	b	18310 <__printf_chk@plt+0x5ba0>
   18414:	ldr	r1, [sp, #12]
   18418:	mov	r0, r4
   1841c:	bl	17f7c <__printf_chk@plt+0x580c>
   18420:	subs	r5, r0, #0
   18424:	blt	18724 <__printf_chk@plt+0x5fb4>
   18428:	mov	r2, r7
   1842c:	mov	r1, r5
   18430:	mov	r0, r4
   18434:	bl	30bf4 <crc32@@Base+0x174ac>
   18438:	movw	r1, #30748	; 0x781c
   1843c:	movt	r1, #3
   18440:	mov	r2, r0
   18444:	str	r0, [sp, #24]
   18448:	mov	r0, #1
   1844c:	bl	12770 <__printf_chk@plt>
   18450:	cmp	fp, #2
   18454:	ldreq	r3, [sp, #24]
   18458:	streq	r3, [sl, #72]	; 0x48
   1845c:	ldr	r3, [sl, #124]	; 0x7c
   18460:	cmp	r3, #0
   18464:	beq	18494 <__printf_chk@plt+0x5d24>
   18468:	movw	r0, #30780	; 0x783c
   1846c:	movt	r0, #3
   18470:	bl	1226c <puts@plt>
   18474:	mov	r1, r5
   18478:	mov	r0, r4
   1847c:	bl	193a8 <__printf_chk@plt+0x6c38>
   18480:	cmp	r0, #0
   18484:	bne	1869c <__printf_chk@plt+0x5f2c>
   18488:	movw	r0, #55980	; 0xdaac
   1848c:	movt	r0, #3
   18490:	bl	1226c <puts@plt>
   18494:	mov	r1, r5
   18498:	mov	r3, #0
   1849c:	mov	r2, r8
   184a0:	mov	r0, r4
   184a4:	bl	18084 <__printf_chk@plt+0x5914>
   184a8:	mov	r2, #0
   184ac:	mov	r1, r0
   184b0:	mov	r5, r0
   184b4:	mov	r0, r4
   184b8:	bl	30bf4 <crc32@@Base+0x174ac>
   184bc:	mov	r7, r0
   184c0:	b	181e4 <__printf_chk@plt+0x5a74>
   184c4:	ldrb	r3, [sp, #48]	; 0x30
   184c8:	cmp	r3, #5
   184cc:	beq	1833c <__printf_chk@plt+0x5bcc>
   184d0:	b	18268 <__printf_chk@plt+0x5af8>
   184d4:	mov	r2, sl
   184d8:	mov	r1, r5
   184dc:	mov	r0, r4
   184e0:	bl	167d4 <__printf_chk@plt+0x4064>
   184e4:	cmp	r0, #0
   184e8:	movne	r3, #0
   184ec:	strne	r3, [sp, #32]
   184f0:	bne	18508 <__printf_chk@plt+0x5d98>
   184f4:	ldrb	r3, [sp, #48]	; 0x30
   184f8:	sub	r3, r3, #14
   184fc:	clz	r3, r3
   18500:	lsr	r3, r3, #5
   18504:	str	r3, [sp, #32]
   18508:	mov	r2, sl
   1850c:	mov	r1, r5
   18510:	mov	r0, r4
   18514:	bl	16704 <__printf_chk@plt+0x3f94>
   18518:	cmp	r0, #0
   1851c:	bne	1852c <__printf_chk@plt+0x5dbc>
   18520:	ldrb	r3, [sp, #48]	; 0x30
   18524:	cmp	r3, #5
   18528:	beq	18550 <__printf_chk@plt+0x5de0>
   1852c:	mov	r2, sl
   18530:	mov	r1, r5
   18534:	mov	r0, r4
   18538:	bl	16704 <__printf_chk@plt+0x3f94>
   1853c:	cmp	r0, #0
   18540:	bne	18560 <__printf_chk@plt+0x5df0>
   18544:	ldrb	r3, [sp, #48]	; 0x30
   18548:	cmp	r3, #17
   1854c:	bne	18560 <__printf_chk@plt+0x5df0>
   18550:	ldr	r3, [sp, #32]
   18554:	cmp	r3, #1
   18558:	bne	18284 <__printf_chk@plt+0x5b14>
   1855c:	b	18350 <__printf_chk@plt+0x5be0>
   18560:	mov	r2, sl
   18564:	mov	r1, r5
   18568:	mov	r0, r4
   1856c:	bl	16704 <__printf_chk@plt+0x3f94>
   18570:	cmp	r0, #0
   18574:	bne	18284 <__printf_chk@plt+0x5b14>
   18578:	ldrb	r3, [sp, #48]	; 0x30
   1857c:	cmp	r3, #24
   18580:	beq	18550 <__printf_chk@plt+0x5de0>
   18584:	b	18284 <__printf_chk@plt+0x5b14>
   18588:	mov	r3, sl
   1858c:	movw	r2, #27376	; 0x6af0
   18590:	mov	r1, r5
   18594:	movt	r2, #3
   18598:	mov	r0, r4
   1859c:	bl	16228 <__printf_chk@plt+0x3ab8>
   185a0:	ldr	r3, [sp, #108]	; 0x6c
   185a4:	cmp	r0, #0
   185a8:	beq	185d0 <__printf_chk@plt+0x5e60>
   185ac:	cmp	r3, #3
   185b0:	bne	182cc <__printf_chk@plt+0x5b5c>
   185b4:	mov	r2, r8
   185b8:	movw	r1, #31000	; 0x7918
   185bc:	mov	r0, #1
   185c0:	movt	r1, #3
   185c4:	bl	12770 <__printf_chk@plt>
   185c8:	mvn	r5, #8
   185cc:	b	18310 <__printf_chk@plt+0x5ba0>
   185d0:	cmp	r3, #2
   185d4:	ldr	r2, [sp, #48]	; 0x30
   185d8:	beq	18660 <__printf_chk@plt+0x5ef0>
   185dc:	ldr	lr, [r4, #4]
   185e0:	ldr	r3, [sp, #32]
   185e4:	ubfx	ip, lr, #8, #8
   185e8:	ubfx	r0, lr, #16, #8
   185ec:	add	r1, r2, r3
   185f0:	lsr	r3, lr, #24
   185f4:	orr	r3, r3, lr, lsl #24
   185f8:	orr	r3, r3, ip, lsl #16
   185fc:	orr	r3, r3, r0, lsl #8
   18600:	add	r3, r3, r4
   18604:	cmp	fp, #2
   18608:	cmpne	r2, r3
   1860c:	movcc	r3, #1
   18610:	movcs	r3, #0
   18614:	cmp	r4, r1
   18618:	movcs	r4, #0
   1861c:	andcc	r4, r3, #1
   18620:	cmp	r4, #0
   18624:	bne	1873c <__printf_chk@plt+0x5fcc>
   18628:	ldr	r3, [sp, #28]
   1862c:	movw	r1, #31064	; 0x7958
   18630:	str	r2, [sp]
   18634:	movt	r1, #3
   18638:	mov	r2, r8
   1863c:	mov	r0, #1
   18640:	bl	12770 <__printf_chk@plt>
   18644:	ldr	r2, [sp, #32]
   18648:	ldr	r1, [sp, #40]	; 0x28
   1864c:	ldr	r0, [sp, #48]	; 0x30
   18650:	bl	12380 <memmove@plt>
   18654:	ldr	r3, [sp, #48]	; 0x30
   18658:	str	r3, [sp, #36]	; 0x24
   1865c:	b	182cc <__printf_chk@plt+0x5b5c>
   18660:	cmp	r2, #0
   18664:	beq	182cc <__printf_chk@plt+0x5b5c>
   18668:	b	185dc <__printf_chk@plt+0x5e6c>
   1866c:	movw	r0, #30832	; 0x7870
   18670:	movt	r0, #3
   18674:	bl	1226c <puts@plt>
   18678:	mvn	r5, #1
   1867c:	b	18310 <__printf_chk@plt+0x5ba0>
   18680:	mov	r2, r8
   18684:	movw	r1, #30684	; 0x77dc
   18688:	mov	r0, #1
   1868c:	movt	r1, #3
   18690:	bl	12770 <__printf_chk@plt>
   18694:	mvn	r5, #7
   18698:	b	18310 <__printf_chk@plt+0x5ba0>
   1869c:	movw	r0, #30816	; 0x7860
   186a0:	movt	r0, #3
   186a4:	bl	1226c <puts@plt>
   186a8:	mvn	r5, #12
   186ac:	b	18310 <__printf_chk@plt+0x5ba0>
   186b0:	mov	r2, sl
   186b4:	mov	r1, r5
   186b8:	mov	r0, r4
   186bc:	mvn	r5, #4
   186c0:	bl	16704 <__printf_chk@plt+0x3f94>
   186c4:	ldrb	r0, [sp, #48]	; 0x30
   186c8:	bl	1a328 <crc32@@Base+0xbe0>
   186cc:	ldr	r3, [sp, #96]	; 0x60
   186d0:	mov	r4, r0
   186d4:	uxtb	r0, r3
   186d8:	bl	1a37c <crc32@@Base+0xc34>
   186dc:	mov	r7, r0
   186e0:	ldr	r0, [sp, #28]
   186e4:	bl	1a3d0 <crc32@@Base+0xc88>
   186e8:	mov	r3, r7
   186ec:	mov	r2, r4
   186f0:	movw	r1, #30916	; 0x78c4
   186f4:	movt	r1, #3
   186f8:	str	r0, [sp]
   186fc:	mov	r0, #1
   18700:	bl	12770 <__printf_chk@plt>
   18704:	b	18310 <__printf_chk@plt+0x5ba0>
   18708:	mov	r2, r8
   1870c:	movw	r1, #30936	; 0x78d8
   18710:	mov	r0, #1
   18714:	movt	r1, #3
   18718:	bl	12770 <__printf_chk@plt>
   1871c:	mvn	r5, #1
   18720:	b	18310 <__printf_chk@plt+0x5ba0>
   18724:	movw	r0, #30712	; 0x77f8
   18728:	movt	r0, #3
   1872c:	bl	1226c <puts@plt>
   18730:	mvn	r5, #1
   18734:	b	18310 <__printf_chk@plt+0x5ba0>
   18738:	bl	12494 <__stack_chk_fail@plt>
   1873c:	mov	r2, r8
   18740:	movw	r1, #31040	; 0x7940
   18744:	mov	r0, #1
   18748:	movt	r1, #3
   1874c:	bl	12770 <__printf_chk@plt>
   18750:	mvn	r5, #17
   18754:	b	18310 <__printf_chk@plt+0x5ba0>
   18758:	push	{r4, r5, r6, r7, r8, lr}
   1875c:	movw	r4, #61168	; 0xeef0
   18760:	movt	r4, #4
   18764:	ldr	r6, [r0, #76]	; 0x4c
   18768:	sub	sp, sp, #32
   1876c:	mov	r7, r1
   18770:	ldr	r3, [r4]
   18774:	mov	r8, r2
   18778:	movw	r1, #26144	; 0x6620
   1877c:	mov	r2, r6
   18780:	movt	r1, #3
   18784:	mov	r5, r0
   18788:	str	r3, [sp, #28]
   1878c:	bl	180e4 <__printf_chk@plt+0x5974>
   18790:	cmp	r0, #0
   18794:	blt	187d0 <__printf_chk@plt+0x6060>
   18798:	mov	r3, #0
   1879c:	add	ip, sp, #24
   187a0:	str	r7, [sp]
   187a4:	mov	r1, r6
   187a8:	str	ip, [sp, #20]
   187ac:	mov	r6, #130	; 0x82
   187b0:	mov	r7, #3
   187b4:	mov	ip, #20
   187b8:	str	r8, [sp, #16]
   187bc:	mov	r0, r5
   187c0:	mov	r2, r3
   187c4:	strd	r6, [sp, #8]
   187c8:	str	ip, [sp, #4]
   187cc:	bl	18128 <__printf_chk@plt+0x59b8>
   187d0:	ldr	r2, [sp, #28]
   187d4:	ldr	r3, [r4]
   187d8:	cmp	r2, r3
   187dc:	bne	187e8 <__printf_chk@plt+0x6078>
   187e0:	add	sp, sp, #32
   187e4:	pop	{r4, r5, r6, r7, r8, pc}
   187e8:	bl	12494 <__stack_chk_fail@plt>
   187ec:	push	{r4, r5, r6, lr}
   187f0:	movw	r4, #62424	; 0xf3d8
   187f4:	movt	r4, #4
   187f8:	mov	r1, r0
   187fc:	mov	r5, r0
   18800:	ldr	r0, [r4]
   18804:	bl	1265c <strcmp@plt>
   18808:	cmp	r0, #0
   1880c:	beq	1882c <__printf_chk@plt+0x60bc>
   18810:	ldr	r0, [r4, #8]!
   18814:	mov	r1, r5
   18818:	bl	1265c <strcmp@plt>
   1881c:	cmp	r0, #0
   18820:	moveq	r0, r4
   18824:	movne	r0, #0
   18828:	pop	{r4, r5, r6, pc}
   1882c:	mov	r0, r4
   18830:	pop	{r4, r5, r6, pc}
   18834:	movw	r3, #43348	; 0xa954
   18838:	movt	r3, #30
   1883c:	str	r0, [r3]
   18840:	bx	lr
   18844:	movw	r3, #43348	; 0xa954
   18848:	movt	r3, #30
   1884c:	ldr	r0, [r3]
   18850:	bx	lr
   18854:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18858:	mov	r9, r0
   1885c:	ldr	r7, [pc, #88]	; 188bc <__printf_chk@plt+0x614c>
   18860:	mov	r4, #0
   18864:	mov	sl, #24
   18868:	mul	r8, sl, r4
   1886c:	ldr	r5, [r7, r8]
   18870:	mov	r0, r5
   18874:	bl	125c0 <strlen@plt>
   18878:	mov	r1, r9
   1887c:	mov	r2, r0
   18880:	mov	r6, r0
   18884:	mov	r0, r5
   18888:	bl	1217c <strncmp@plt>
   1888c:	cmp	r0, #0
   18890:	bne	188a0 <__printf_chk@plt+0x6130>
   18894:	ldrb	r3, [r9, r6]
   18898:	cmp	r3, #44	; 0x2c
   1889c:	beq	188b4 <__printf_chk@plt+0x6144>
   188a0:	cmp	r4, #1
   188a4:	mov	r4, #1
   188a8:	bne	18868 <__printf_chk@plt+0x60f8>
   188ac:	mov	r0, #0
   188b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   188b4:	add	r0, r7, r8
   188b8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   188bc:	andeq	pc, r4, r8, ror #7
   188c0:	push	{r4, r5, r6, lr}
   188c4:	mov	r1, #44	; 0x2c
   188c8:	bl	12764 <strchr@plt>
   188cc:	cmp	r0, #0
   188d0:	popeq	{r4, r5, r6, pc}
   188d4:	add	r5, r0, #1
   188d8:	movw	r4, #62424	; 0xf3d8
   188dc:	movt	r4, #4
   188e0:	mov	r1, r5
   188e4:	ldr	r0, [r4, #64]	; 0x40
   188e8:	bl	1265c <strcmp@plt>
   188ec:	cmp	r0, #0
   188f0:	beq	18910 <__printf_chk@plt+0x61a0>
   188f4:	ldr	r0, [r4, #84]!	; 0x54
   188f8:	mov	r1, r5
   188fc:	bl	1265c <strcmp@plt>
   18900:	cmp	r0, #0
   18904:	moveq	r0, r4
   18908:	movne	r0, #0
   1890c:	pop	{r4, r5, r6, pc}
   18910:	add	r0, r4, #64	; 0x40
   18914:	pop	{r4, r5, r6, pc}
   18918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1891c:	movw	r6, #61168	; 0xeef0
   18920:	sub	sp, sp, #20
   18924:	movt	r6, #4
   18928:	mov	sl, r3
   1892c:	mov	r9, r1
   18930:	ldr	ip, [r6]
   18934:	mov	r1, r2
   18938:	ldr	r3, [sp, #56]	; 0x38
   1893c:	mov	r8, r2
   18940:	mov	r4, r0
   18944:	add	r2, sp, #8
   18948:	mov	r0, r9
   1894c:	str	ip, [sp, #12]
   18950:	str	r3, [sp, #4]
   18954:	bl	173f8 <__printf_chk@plt+0x4c88>
   18958:	subs	r7, r0, #0
   1895c:	bne	18a58 <__printf_chk@plt+0x62e8>
   18960:	mov	r3, r7
   18964:	mov	r1, r8
   18968:	movw	r2, #27892	; 0x6cf4
   1896c:	mov	r0, r9
   18970:	movt	r2, #3
   18974:	movw	r5, #31116	; 0x798c
   18978:	bl	30ef4 <crc32@@Base+0x177ac>
   1897c:	movt	r5, #3
   18980:	mov	r2, #48	; 0x30
   18984:	mov	r1, r7
   18988:	cmp	r0, #0
   1898c:	movne	r5, r0
   18990:	mov	r0, r4
   18994:	bl	122e4 <memset@plt>
   18998:	mov	r3, r7
   1899c:	mov	r1, r8
   189a0:	movw	r2, #27900	; 0x6cfc
   189a4:	mov	r0, r9
   189a8:	movt	r2, #3
   189ac:	bl	30ef4 <crc32@@Base+0x177ac>
   189b0:	ldr	fp, [sp, #8]
   189b4:	str	r9, [r4, #8]
   189b8:	str	r8, [r4, #12]
   189bc:	str	fp, [r4, #16]
   189c0:	str	r0, [r4, #4]
   189c4:	str	r0, [sp]
   189c8:	mov	r0, fp
   189cc:	bl	18854 <__printf_chk@plt+0x60e4>
   189d0:	str	r0, [r4, #20]
   189d4:	mov	r0, fp
   189d8:	bl	188c0 <__printf_chk@plt+0x6150>
   189dc:	str	r0, [r4, #28]
   189e0:	mov	r0, r5
   189e4:	bl	187ec <__printf_chk@plt+0x607c>
   189e8:	movw	r1, #43348	; 0xa954
   189ec:	movt	r1, #30
   189f0:	ldr	r3, [sp]
   189f4:	mov	r2, fp
   189f8:	str	sl, [r4, #36]	; 0x24
   189fc:	ldr	ip, [r1]
   18a00:	movw	r1, #31156	; 0x79b4
   18a04:	movt	r1, #3
   18a08:	str	ip, [r4, #32]
   18a0c:	str	r0, [r4, #24]
   18a10:	mov	r0, #1
   18a14:	bl	12770 <__printf_chk@plt>
   18a18:	ldr	r3, [r4, #20]
   18a1c:	cmp	r3, #0
   18a20:	beq	18a70 <__printf_chk@plt+0x6300>
   18a24:	ldr	r3, [r4, #28]
   18a28:	cmp	r3, #0
   18a2c:	beq	18a70 <__printf_chk@plt+0x6300>
   18a30:	ldr	r3, [r4, #24]
   18a34:	cmp	r3, #0
   18a38:	beq	18a70 <__printf_chk@plt+0x6300>
   18a3c:	ldr	r2, [sp, #12]
   18a40:	mov	r0, r7
   18a44:	ldr	r3, [r6]
   18a48:	cmp	r2, r3
   18a4c:	bne	18a88 <__printf_chk@plt+0x6318>
   18a50:	add	sp, sp, #20
   18a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18a58:	ldr	r2, [sp, #4]
   18a5c:	movw	r3, #30328	; 0x7678
   18a60:	mvn	r7, #0
   18a64:	movt	r3, #3
   18a68:	str	r3, [r2]
   18a6c:	b	18a3c <__printf_chk@plt+0x62cc>
   18a70:	ldr	r2, [sp, #4]
   18a74:	movw	r3, #31128	; 0x7998
   18a78:	mvn	r7, #0
   18a7c:	movt	r3, #3
   18a80:	str	r3, [r2]
   18a84:	b	18a3c <__printf_chk@plt+0x62cc>
   18a88:	bl	12494 <__stack_chk_fail@plt>
   18a8c:	cmp	r0, #0
   18a90:	bxeq	lr
   18a94:	b	187ec <__printf_chk@plt+0x607c>
   18a98:	cmp	r3, #0
   18a9c:	push	{r4, r5, lr}
   18aa0:	mov	r5, r0
   18aa4:	sub	sp, sp, #12
   18aa8:	mov	r4, r1
   18aac:	beq	18af0 <__printf_chk@plt+0x6380>
   18ab0:	cmp	r2, #0
   18ab4:	movgt	r0, #4
   18ab8:	movgt	r1, #0
   18abc:	ble	18ae4 <__printf_chk@plt+0x6374>
   18ac0:	ldr	ip, [r4, r1, lsl #3]
   18ac4:	ldr	lr, [r4, r0]
   18ac8:	add	ip, r5, ip
   18acc:	str	ip, [r3, r1, lsl #3]
   18ad0:	add	r1, r1, #1
   18ad4:	cmp	r2, r1
   18ad8:	str	lr, [r3, r0]
   18adc:	add	r0, r0, #8
   18ae0:	bne	18ac0 <__printf_chk@plt+0x6350>
   18ae4:	mov	r0, r3
   18ae8:	add	sp, sp, #12
   18aec:	pop	{r4, r5, pc}
   18af0:	mov	r1, r2
   18af4:	mov	r0, #8
   18af8:	str	r2, [sp, #4]
   18afc:	bl	12518 <calloc@plt>
   18b00:	ldr	r2, [sp, #4]
   18b04:	subs	r3, r0, #0
   18b08:	bne	18ab0 <__printf_chk@plt+0x6340>
   18b0c:	b	18ae4 <__printf_chk@plt+0x6374>
   18b10:	push	{r4, r5, r6, r7, r8, r9, lr}
   18b14:	mov	r6, r1
   18b18:	ldr	r1, [r0, #4]
   18b1c:	mov	r8, r2
   18b20:	mov	r7, r3
   18b24:	sub	sp, sp, #84	; 0x54
   18b28:	ubfx	r2, r1, #8, #8
   18b2c:	movw	r4, #61168	; 0xeef0
   18b30:	lsr	r3, r1, #24
   18b34:	movt	r4, #4
   18b38:	orr	r3, r3, r1, lsl #24
   18b3c:	ubfx	r1, r1, #16, #8
   18b40:	orr	r3, r3, r2, lsl #16
   18b44:	ldr	r9, [sp, #116]	; 0x74
   18b48:	ldr	r2, [r4]
   18b4c:	orr	r3, r3, r1, lsl #8
   18b50:	cmp	r3, #268435456	; 0x10000000
   18b54:	mov	r3, #0
   18b58:	str	r3, [r9]
   18b5c:	str	r2, [sp, #76]	; 0x4c
   18b60:	bls	18b8c <__printf_chk@plt+0x641c>
   18b64:	mvn	r0, #0
   18b68:	movw	r3, #31164	; 0x79bc
   18b6c:	movt	r3, #3
   18b70:	str	r3, [r9]
   18b74:	ldr	r2, [sp, #76]	; 0x4c
   18b78:	ldr	r3, [r4]
   18b7c:	cmp	r2, r3
   18b80:	bne	18c28 <__printf_chk@plt+0x64b8>
   18b84:	add	sp, sp, #84	; 0x54
   18b88:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18b8c:	mov	r5, r0
   18b90:	str	r9, [sp]
   18b94:	ldr	r3, [sp, #112]	; 0x70
   18b98:	mov	r2, r6
   18b9c:	add	r0, sp, #28
   18ba0:	mov	r1, r5
   18ba4:	bl	18918 <__printf_chk@plt+0x61a8>
   18ba8:	cmp	r0, #0
   18bac:	bne	18c20 <__printf_chk@plt+0x64b0>
   18bb0:	add	r3, sp, #16
   18bb4:	mov	r1, r6
   18bb8:	mov	r0, r5
   18bbc:	add	r2, sp, #12
   18bc0:	bl	17450 <__printf_chk@plt+0x4ce0>
   18bc4:	cmp	r0, #0
   18bc8:	movwne	r3, #30268	; 0x763c
   18bcc:	mvnne	r0, #0
   18bd0:	movtne	r3, #3
   18bd4:	strne	r3, [r9]
   18bd8:	bne	18b74 <__printf_chk@plt+0x6404>
   18bdc:	ldr	lr, [sp, #16]
   18be0:	add	r0, sp, #28
   18be4:	ldr	ip, [sp, #56]	; 0x38
   18be8:	mov	r2, #1
   18bec:	ldr	r3, [sp, #12]
   18bf0:	add	r1, sp, #20
   18bf4:	str	lr, [sp]
   18bf8:	str	r8, [sp, #20]
   18bfc:	str	r7, [sp, #24]
   18c00:	ldr	r5, [ip, #16]
   18c04:	blx	r5
   18c08:	cmp	r0, #0
   18c0c:	movwne	r3, #31188	; 0x79d4
   18c10:	mvnne	r0, #0
   18c14:	movtne	r3, #3
   18c18:	strne	r3, [r9]
   18c1c:	b	18b74 <__printf_chk@plt+0x6404>
   18c20:	mvn	r0, #0
   18c24:	b	18b74 <__printf_chk@plt+0x6404>
   18c28:	bl	12494 <__stack_chk_fail@plt>
   18c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c30:	sub	sp, sp, #52	; 0x34
   18c34:	movw	ip, #61168	; 0xeef0
   18c38:	movt	ip, #4
   18c3c:	ldr	lr, [sp, #92]	; 0x5c
   18c40:	mov	sl, r2
   18c44:	ldr	r9, [sp, #88]	; 0x58
   18c48:	mov	r2, #1
   18c4c:	str	ip, [sp, #32]
   18c50:	mov	r5, r0
   18c54:	ldr	ip, [ip]
   18c58:	mov	fp, r3
   18c5c:	str	r1, [sp, #24]
   18c60:	mov	r0, r9
   18c64:	str	r2, [lr]
   18c68:	mov	r1, #0
   18c6c:	movw	r2, #28952	; 0x7118
   18c70:	movt	r2, #3
   18c74:	str	lr, [sp, #36]	; 0x24
   18c78:	str	ip, [sp, #44]	; 0x2c
   18c7c:	bl	30bc4 <crc32@@Base+0x1747c>
   18c80:	subs	r1, r0, #0
   18c84:	blt	18dc0 <__printf_chk@plt+0x6650>
   18c88:	mov	r0, r9
   18c8c:	bl	2da68 <crc32@@Base+0x14320>
   18c90:	subs	r7, r0, #0
   18c94:	blt	18dc0 <__printf_chk@plt+0x6650>
   18c98:	movw	r3, #29540	; 0x7364
   18c9c:	movw	r2, #35276	; 0x89cc
   18ca0:	movt	r3, #3
   18ca4:	movt	r2, #3
   18ca8:	str	r3, [sp, #12]
   18cac:	movw	r3, #46016	; 0xb3c0
   18cb0:	str	r2, [sp, #20]
   18cb4:	movt	r3, #3
   18cb8:	str	r3, [sp, #28]
   18cbc:	mov	r3, #0
   18cc0:	str	r3, [sp, #16]
   18cc4:	mov	r3, #0
   18cc8:	ldr	r2, [sp, #12]
   18ccc:	mov	r1, r7
   18cd0:	mov	r0, r9
   18cd4:	bl	30ef4 <crc32@@Base+0x177ac>
   18cd8:	cmp	r0, #0
   18cdc:	beq	18df8 <__printf_chk@plt+0x6688>
   18ce0:	ldr	r1, [sp, #20]
   18ce4:	bl	1265c <strcmp@plt>
   18ce8:	cmp	r0, #0
   18cec:	bne	18df8 <__printf_chk@plt+0x6688>
   18cf0:	ldr	r3, [sp, #28]
   18cf4:	mov	r0, r5
   18cf8:	ldr	r1, [sp, #24]
   18cfc:	str	r3, [sp, #40]	; 0x28
   18d00:	bl	2da68 <crc32@@Base+0x14320>
   18d04:	subs	r4, r0, #0
   18d08:	blt	18d88 <__printf_chk@plt+0x6618>
   18d0c:	movw	r6, #28952	; 0x7118
   18d10:	movw	r8, #30428	; 0x76dc
   18d14:	movt	r6, #3
   18d18:	movt	r8, #3
   18d1c:	mov	r2, #0
   18d20:	mov	r1, r4
   18d24:	mov	r0, r5
   18d28:	bl	30bf4 <crc32@@Base+0x174ac>
   18d2c:	mov	r2, #9
   18d30:	mov	r1, r6
   18d34:	bl	1217c <strncmp@plt>
   18d38:	cmp	r0, #0
   18d3c:	bne	18d74 <__printf_chk@plt+0x6604>
   18d40:	add	r3, sp, #40	; 0x28
   18d44:	mvn	r2, #0
   18d48:	str	r3, [sp, #4]
   18d4c:	mov	r1, r4
   18d50:	str	r2, [sp]
   18d54:	mov	r3, fp
   18d58:	mov	r2, sl
   18d5c:	mov	r0, r5
   18d60:	bl	18b10 <__printf_chk@plt+0x63a0>
   18d64:	cmp	r0, #0
   18d68:	beq	18de0 <__printf_chk@plt+0x6670>
   18d6c:	mov	r0, r8
   18d70:	bl	1226c <puts@plt>
   18d74:	mov	r1, r4
   18d78:	mov	r0, r5
   18d7c:	bl	2dac8 <crc32@@Base+0x14380>
   18d80:	subs	r4, r0, #0
   18d84:	bge	18d1c <__printf_chk@plt+0x65ac>
   18d88:	cmn	r4, #8
   18d8c:	cmnne	r4, #11
   18d90:	beq	18e28 <__printf_chk@plt+0x66b8>
   18d94:	mov	r1, r7
   18d98:	mov	r2, #0
   18d9c:	mov	r0, r9
   18da0:	bl	30bf4 <crc32@@Base+0x174ac>
   18da4:	movw	r1, #31208	; 0x79e8
   18da8:	movt	r1, #3
   18dac:	mov	r2, r0
   18db0:	mov	r0, #1
   18db4:	bl	12770 <__printf_chk@plt>
   18db8:	mvn	r0, #0
   18dbc:	b	18dc4 <__printf_chk@plt+0x6654>
   18dc0:	mov	r0, #0
   18dc4:	ldr	r3, [sp, #32]
   18dc8:	ldr	r2, [sp, #44]	; 0x2c
   18dcc:	ldr	r3, [r3]
   18dd0:	cmp	r2, r3
   18dd4:	bne	18e78 <__printf_chk@plt+0x6708>
   18dd8:	add	sp, sp, #52	; 0x34
   18ddc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18de0:	ldr	r3, [sp, #16]
   18de4:	movw	r0, #30424	; 0x76d8
   18de8:	movt	r0, #3
   18dec:	add	r3, r3, #1
   18df0:	str	r3, [sp, #16]
   18df4:	bl	1226c <puts@plt>
   18df8:	mov	r1, r7
   18dfc:	mov	r0, r9
   18e00:	bl	2dac8 <crc32@@Base+0x14380>
   18e04:	subs	r7, r0, #0
   18e08:	bge	18cc4 <__printf_chk@plt+0x6554>
   18e0c:	ldr	r3, [sp, #16]
   18e10:	cmp	r3, #0
   18e14:	beq	18dc0 <__printf_chk@plt+0x6650>
   18e18:	ldr	r3, [sp, #36]	; 0x24
   18e1c:	mov	r0, #0
   18e20:	str	r0, [r3]
   18e24:	b	18dc4 <__printf_chk@plt+0x6654>
   18e28:	mov	r1, r4
   18e2c:	mov	r2, #0
   18e30:	mov	r0, r5
   18e34:	movw	r4, #30300	; 0x765c
   18e38:	movt	r4, #3
   18e3c:	str	r4, [sp, #40]	; 0x28
   18e40:	bl	30bf4 <crc32@@Base+0x174ac>
   18e44:	ldr	r1, [sp, #24]
   18e48:	mov	r2, #0
   18e4c:	mov	r6, r0
   18e50:	mov	r0, r5
   18e54:	bl	30bf4 <crc32@@Base+0x174ac>
   18e58:	mov	r2, r4
   18e5c:	mov	r3, r6
   18e60:	movw	r1, #30432	; 0x76e0
   18e64:	movt	r1, #3
   18e68:	str	r0, [sp]
   18e6c:	mov	r0, #1
   18e70:	bl	12770 <__printf_chk@plt>
   18e74:	b	18d94 <__printf_chk@plt+0x6624>
   18e78:	bl	12494 <__stack_chk_fail@plt>
   18e7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18e80:	mov	r6, r0
   18e84:	add	fp, sp, #32
   18e88:	sub	sp, sp, #316	; 0x13c
   18e8c:	ldr	r0, [r0, #4]
   18e90:	str	r1, [fp, #-312]	; 0xfffffec8
   18e94:	movw	r7, #61168	; 0xeef0
   18e98:	ubfx	r4, r0, #8, #8
   18e9c:	ubfx	lr, r0, #16, #8
   18ea0:	lsr	r1, r0, #24
   18ea4:	movt	r7, #4
   18ea8:	orr	r1, r1, r0, lsl #24
   18eac:	mov	r8, r3
   18eb0:	orr	r1, r1, r4, lsl #16
   18eb4:	ldr	ip, [r7]
   18eb8:	orr	r1, r1, lr, lsl #8
   18ebc:	mov	r0, #0
   18ec0:	cmp	r1, #268435456	; 0x10000000
   18ec4:	str	r0, [r3]
   18ec8:	movw	r1, #40512	; 0x9e40
   18ecc:	str	ip, [fp, #-40]	; 0xffffffd8
   18ed0:	movt	r1, #3
   18ed4:	str	r1, [fp, #-244]	; 0xffffff0c
   18ed8:	bls	18f04 <__printf_chk@plt+0x6794>
   18edc:	mvn	r0, #0
   18ee0:	movw	r3, #31164	; 0x79bc
   18ee4:	movt	r3, #3
   18ee8:	str	r3, [r8]
   18eec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18ef0:	ldr	r3, [r7]
   18ef4:	cmp	r2, r3
   18ef8:	bne	191b4 <__printf_chk@plt+0x6a44>
   18efc:	sub	sp, fp, #32
   18f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18f04:	str	r3, [sp]
   18f08:	sub	r0, fp, #292	; 0x124
   18f0c:	ldr	r4, [fp, #-312]	; 0xfffffec8
   18f10:	mov	r3, r2
   18f14:	mov	r1, r6
   18f18:	mov	r2, r4
   18f1c:	bl	18918 <__printf_chk@plt+0x61a8>
   18f20:	cmp	r0, #0
   18f24:	bne	191ac <__printf_chk@plt+0x6a3c>
   18f28:	sub	r3, fp, #300	; 0x12c
   18f2c:	mov	r1, r4
   18f30:	sub	r2, fp, #304	; 0x130
   18f34:	mov	r0, r6
   18f38:	bl	17450 <__printf_chk@plt+0x4ce0>
   18f3c:	subs	r4, r0, #0
   18f40:	movwne	r3, #30268	; 0x763c
   18f44:	mvnne	r0, #0
   18f48:	movtne	r3, #3
   18f4c:	strne	r3, [r8]
   18f50:	bne	18eec <__printf_chk@plt+0x677c>
   18f54:	movw	r2, #28052	; 0x6d94
   18f58:	sub	r3, fp, #296	; 0x128
   18f5c:	movt	r2, #3
   18f60:	ldr	r1, [fp, #-312]	; 0xfffffec8
   18f64:	mov	r0, r6
   18f68:	bl	30ef4 <crc32@@Base+0x177ac>
   18f6c:	subs	r9, r0, #0
   18f70:	beq	19198 <__printf_chk@plt+0x6a28>
   18f74:	ldr	ip, [fp, #-296]	; 0xfffffed8
   18f78:	add	r5, r9, ip
   18f7c:	cmp	r9, r5
   18f80:	bcs	19198 <__printf_chk@plt+0x6a28>
   18f84:	sub	r2, r9, #1
   18f88:	sub	r0, r5, #1
   18f8c:	ldrb	r1, [r2, #1]!
   18f90:	cmp	r1, #0
   18f94:	addeq	r4, r4, #1
   18f98:	cmp	r0, r2
   18f9c:	bne	18f8c <__printf_chk@plt+0x681c>
   18fa0:	cmp	r4, #0
   18fa4:	beq	19198 <__printf_chk@plt+0x6a28>
   18fa8:	cmp	ip, #0
   18fac:	ble	18fcc <__printf_chk@plt+0x685c>
   18fb0:	ldrb	r2, [r5, #-1]
   18fb4:	cmp	r2, #0
   18fb8:	movwne	r3, #31284	; 0x7a34
   18fbc:	mvnne	r0, #0
   18fc0:	movtne	r3, #3
   18fc4:	strne	r3, [r8]
   18fc8:	bne	18eec <__printf_chk@plt+0x677c>
   18fcc:	cmp	r4, #100	; 0x64
   18fd0:	movwgt	r3, #31332	; 0x7a64
   18fd4:	mvngt	r0, #0
   18fd8:	movtgt	r3, #3
   18fdc:	strgt	r3, [r8]
   18fe0:	bgt	18eec <__printf_chk@plt+0x677c>
   18fe4:	lsl	r2, r4, #2
   18fe8:	str	sp, [fp, #-316]	; 0xfffffec4
   18fec:	add	r2, r2, #10
   18ff0:	bic	r2, r2, #7
   18ff4:	sub	sp, sp, r2
   18ff8:	add	sl, sp, #20
   18ffc:	add	r3, sp, #24
   19000:	str	r3, [fp, #-320]	; 0xfffffec0
   19004:	str	r9, [sl, #4]!
   19008:	mov	r0, r9
   1900c:	bl	125c0 <strlen@plt>
   19010:	add	r0, r0, #1
   19014:	add	r9, r9, r0
   19018:	cmp	r5, r9
   1901c:	bhi	19004 <__printf_chk@plt+0x6894>
   19020:	rsb	r3, r4, r4, lsl #3
   19024:	mov	r2, r4
   19028:	add	r4, r3, #19
   1902c:	ldr	r1, [fp, #-320]	; 0xfffffec0
   19030:	lsl	r3, r3, #3
   19034:	mov	lr, #200	; 0xc8
   19038:	add	r3, r3, #168	; 0xa8
   1903c:	sub	r0, fp, #240	; 0xf0
   19040:	sub	sp, sp, r3
   19044:	mov	ip, #1
   19048:	sub	r3, fp, #244	; 0xf4
   1904c:	add	r5, sp, #24
   19050:	str	r0, [sp, #12]
   19054:	mov	sl, #0
   19058:	str	r4, [sp, #8]
   1905c:	mov	r0, r6
   19060:	str	lr, [sp, #16]
   19064:	str	ip, [sp]
   19068:	str	r5, [sp, #4]
   1906c:	str	sl, [sp, #20]
   19070:	bl	31b88 <crc32@@Base+0x18440>
   19074:	subs	r3, r0, #0
   19078:	mov	r9, r3
   1907c:	blt	1909c <__printf_chk@plt+0x692c>
   19080:	bne	190b0 <__printf_chk@plt+0x6940>
   19084:	mvn	r0, #0
   19088:	movw	r3, #31404	; 0x7aac
   1908c:	movt	r3, #3
   19090:	str	r3, [r8]
   19094:	ldr	sp, [fp, #-316]	; 0xfffffec4
   19098:	b	18eec <__printf_chk@plt+0x677c>
   1909c:	movw	r3, #31372	; 0x7a8c
   190a0:	mvn	r0, #0
   190a4:	movt	r3, #3
   190a8:	str	r3, [r8]
   190ac:	b	19094 <__printf_chk@plt+0x6924>
   190b0:	cmp	r4, r3
   190b4:	bgt	190cc <__printf_chk@plt+0x695c>
   190b8:	movw	r3, #31420	; 0x7abc
   190bc:	mvn	r0, #0
   190c0:	movt	r3, #3
   190c4:	str	r3, [r8]
   190c8:	b	19094 <__printf_chk@plt+0x6924>
   190cc:	mov	r3, sl
   190d0:	ldr	r1, [fp, #-312]	; 0xfffffec8
   190d4:	movw	r2, #28068	; 0x6da4
   190d8:	mov	r0, r6
   190dc:	movt	r2, #3
   190e0:	bl	30ef4 <crc32@@Base+0x177ac>
   190e4:	cmp	r0, #0
   190e8:	beq	19138 <__printf_chk@plt+0x69c8>
   190ec:	ldr	r1, [r6, #12]
   190f0:	add	r2, r5, r9, lsl #3
   190f4:	ubfx	lr, r1, #8, #8
   190f8:	ubfx	ip, r1, #16, #8
   190fc:	lsr	r3, r1, #24
   19100:	orr	r3, r3, r1, lsl #24
   19104:	orr	r3, r3, lr, lsl #16
   19108:	orr	r3, r3, ip, lsl #8
   1910c:	str	r3, [r5, r9, lsl #3]
   19110:	ldr	r1, [r0, #4]
   19114:	add	r3, r9, #1
   19118:	ubfx	ip, r1, #8, #8
   1911c:	mov	r9, r3
   19120:	lsr	r3, r1, #24
   19124:	ubfx	r0, r1, #16, #8
   19128:	orr	r3, r3, r1, lsl #24
   1912c:	orr	r3, r3, ip, lsl #16
   19130:	orr	r3, r3, r0, lsl #8
   19134:	str	r3, [r2, #4]
   19138:	lsl	r3, r9, #3
   1913c:	mov	r2, r9
   19140:	add	r3, r3, #8
   19144:	mov	r1, r5
   19148:	sub	sp, sp, r3
   1914c:	mov	r0, r6
   19150:	add	r4, sp, #24
   19154:	mov	r3, r4
   19158:	bl	18a98 <__printf_chk@plt+0x6328>
   1915c:	ldr	ip, [fp, #-264]	; 0xfffffef8
   19160:	ldr	lr, [fp, #-300]	; 0xfffffed4
   19164:	mov	r1, r4
   19168:	ldr	r3, [fp, #-304]	; 0xfffffed0
   1916c:	mov	r2, r9
   19170:	sub	r0, fp, #292	; 0x124
   19174:	str	lr, [sp]
   19178:	ldr	r4, [ip, #16]
   1917c:	blx	r4
   19180:	cmp	r0, #0
   19184:	movwne	r3, #31188	; 0x79d4
   19188:	mvnne	r0, #0
   1918c:	movtne	r3, #3
   19190:	strne	r3, [r8]
   19194:	b	19094 <__printf_chk@plt+0x6924>
   19198:	movw	r3, #31252	; 0x7a14
   1919c:	mvn	r0, #0
   191a0:	movt	r3, #3
   191a4:	str	r3, [r8]
   191a8:	b	18eec <__printf_chk@plt+0x677c>
   191ac:	mvn	r0, #0
   191b0:	b	18eec <__printf_chk@plt+0x677c>
   191b4:	bl	12494 <__stack_chk_fail@plt>
   191b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   191bc:	movw	r3, #61168	; 0xeef0
   191c0:	sub	sp, sp, #36	; 0x24
   191c4:	movt	r3, #4
   191c8:	mov	r9, r2
   191cc:	mov	r5, r0
   191d0:	str	r3, [sp, #20]
   191d4:	mov	r0, r2
   191d8:	ldr	r3, [r3]
   191dc:	movw	r2, #28952	; 0x7118
   191e0:	str	r1, [sp, #12]
   191e4:	movt	r2, #3
   191e8:	mov	r1, #0
   191ec:	str	r3, [sp, #28]
   191f0:	bl	30bc4 <crc32@@Base+0x1747c>
   191f4:	subs	r1, r0, #0
   191f8:	blt	19334 <__printf_chk@plt+0x6bc4>
   191fc:	mov	r0, r9
   19200:	bl	2da68 <crc32@@Base+0x14320>
   19204:	subs	r6, r0, #0
   19208:	blt	19334 <__printf_chk@plt+0x6bc4>
   1920c:	movw	sl, #29540	; 0x7364
   19210:	movw	fp, #29172	; 0x71f4
   19214:	movt	sl, #3
   19218:	movt	fp, #3
   1921c:	movw	r3, #46016	; 0xb3c0
   19220:	movt	r3, #3
   19224:	str	r3, [sp, #16]
   19228:	mov	r3, #0
   1922c:	mov	r2, sl
   19230:	mov	r1, r6
   19234:	mov	r0, r9
   19238:	bl	30ef4 <crc32@@Base+0x177ac>
   1923c:	cmp	r0, #0
   19240:	beq	19320 <__printf_chk@plt+0x6bb0>
   19244:	mov	r1, fp
   19248:	bl	1265c <strcmp@plt>
   1924c:	cmp	r0, #0
   19250:	bne	19320 <__printf_chk@plt+0x6bb0>
   19254:	ldr	r3, [sp, #16]
   19258:	mov	r0, r5
   1925c:	ldr	r1, [sp, #12]
   19260:	str	r3, [sp, #24]
   19264:	bl	2da68 <crc32@@Base+0x14320>
   19268:	subs	r4, r0, #0
   1926c:	blt	192dc <__printf_chk@plt+0x6b6c>
   19270:	movw	r7, #28952	; 0x7118
   19274:	movw	r8, #30428	; 0x76dc
   19278:	movt	r7, #3
   1927c:	movt	r8, #3
   19280:	mov	r2, #0
   19284:	mov	r1, r4
   19288:	mov	r0, r5
   1928c:	bl	30bf4 <crc32@@Base+0x174ac>
   19290:	mov	r2, #9
   19294:	mov	r1, r7
   19298:	bl	1217c <strncmp@plt>
   1929c:	cmp	r0, #0
   192a0:	bne	192c8 <__printf_chk@plt+0x6b58>
   192a4:	add	r3, sp, #24
   192a8:	mov	r2, r6
   192ac:	mov	r1, r4
   192b0:	mov	r0, r5
   192b4:	bl	18e7c <__printf_chk@plt+0x670c>
   192b8:	cmp	r0, #0
   192bc:	beq	19314 <__printf_chk@plt+0x6ba4>
   192c0:	mov	r0, r8
   192c4:	bl	1226c <puts@plt>
   192c8:	mov	r1, r4
   192cc:	mov	r0, r5
   192d0:	bl	2dac8 <crc32@@Base+0x14380>
   192d4:	subs	r4, r0, #0
   192d8:	bge	19280 <__printf_chk@plt+0x6b10>
   192dc:	cmn	r4, #8
   192e0:	cmnne	r4, #11
   192e4:	beq	19354 <__printf_chk@plt+0x6be4>
   192e8:	mov	r1, r6
   192ec:	mov	r2, #0
   192f0:	mov	r0, r9
   192f4:	bl	30bf4 <crc32@@Base+0x174ac>
   192f8:	movw	r1, #31208	; 0x79e8
   192fc:	movt	r1, #3
   19300:	mov	r2, r0
   19304:	mov	r0, #1
   19308:	bl	12770 <__printf_chk@plt>
   1930c:	mvn	r0, #0
   19310:	b	19338 <__printf_chk@plt+0x6bc8>
   19314:	movw	r0, #30424	; 0x76d8
   19318:	movt	r0, #3
   1931c:	bl	1226c <puts@plt>
   19320:	mov	r1, r6
   19324:	mov	r0, r9
   19328:	bl	2dac8 <crc32@@Base+0x14380>
   1932c:	subs	r6, r0, #0
   19330:	bge	19228 <__printf_chk@plt+0x6ab8>
   19334:	mov	r0, #0
   19338:	ldr	r3, [sp, #20]
   1933c:	ldr	r2, [sp, #28]
   19340:	ldr	r3, [r3]
   19344:	cmp	r2, r3
   19348:	bne	193a4 <__printf_chk@plt+0x6c34>
   1934c:	add	sp, sp, #36	; 0x24
   19350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19354:	mov	r1, r4
   19358:	mov	r2, #0
   1935c:	mov	r0, r5
   19360:	movw	r4, #30300	; 0x765c
   19364:	movt	r4, #3
   19368:	str	r4, [sp, #24]
   1936c:	bl	30bf4 <crc32@@Base+0x174ac>
   19370:	ldr	r1, [sp, #12]
   19374:	mov	r2, #0
   19378:	mov	r7, r0
   1937c:	mov	r0, r5
   19380:	bl	30bf4 <crc32@@Base+0x174ac>
   19384:	mov	r2, r4
   19388:	mov	r3, r7
   1938c:	movw	r1, #31444	; 0x7ad4
   19390:	movt	r1, #3
   19394:	str	r0, [sp]
   19398:	mov	r0, #1
   1939c:	bl	12770 <__printf_chk@plt>
   193a0:	b	192e8 <__printf_chk@plt+0x6b78>
   193a4:	bl	12494 <__stack_chk_fail@plt>
   193a8:	movw	r3, #43348	; 0xa954
   193ac:	movt	r3, #30
   193b0:	ldr	r2, [r3]
   193b4:	b	191b8 <__printf_chk@plt+0x6a48>
   193b8:	push	{r4, r5, r6, r7, r8, lr}
   193bc:	mov	r6, r0
   193c0:	ldr	r7, [sp, #40]	; 0x28
   193c4:	uxtb	r0, r3
   193c8:	mov	r4, r1
   193cc:	mov	r8, r2
   193d0:	ldr	r5, [sp, #32]
   193d4:	str	r1, [r7]
   193d8:	bl	1a3d0 <crc32@@Base+0xc88>
   193dc:	cmp	r6, #0
   193e0:	mov	r3, r0
   193e4:	bne	19480 <__printf_chk@plt+0x6d10>
   193e8:	cmp	r4, r8
   193ec:	beq	19464 <__printf_chk@plt+0x6cf4>
   193f0:	movw	r2, #31660	; 0x7bac
   193f4:	movw	r1, #31668	; 0x7bb4
   193f8:	movt	r2, #3
   193fc:	movt	r1, #3
   19400:	mov	r0, #1
   19404:	bl	12770 <__printf_chk@plt>
   19408:	ldr	r3, [sp, #36]	; 0x24
   1940c:	cmp	r5, r3
   19410:	bhi	1943c <__printf_chk@plt+0x6ccc>
   19414:	mov	r2, r5
   19418:	ldrd	r0, [sp, #24]
   1941c:	bl	12380 <memmove@plt>
   19420:	add	r4, r4, r5
   19424:	movw	r0, #55980	; 0xdaac
   19428:	str	r4, [r7]
   1942c:	movt	r0, #3
   19430:	bl	1226c <puts@plt>
   19434:	mov	r0, #0
   19438:	pop	{r4, r5, r6, r7, r8, pc}
   1943c:	mov	r0, r6
   19440:	bl	1a478 <crc32@@Base+0xd30>
   19444:	movw	r0, #31584	; 0x7b60
   19448:	movt	r0, #3
   1944c:	bl	1226c <puts@plt>
   19450:	movw	r0, #31632	; 0x7b90
   19454:	movt	r0, #3
   19458:	bl	1226c <puts@plt>
   1945c:	mvn	r0, #0
   19460:	pop	{r4, r5, r6, r7, r8, pc}
   19464:	movw	r2, #31684	; 0x7bc4
   19468:	movw	r1, #31668	; 0x7bb4
   1946c:	movt	r2, #3
   19470:	movt	r1, #3
   19474:	mov	r0, #1
   19478:	bl	12770 <__printf_chk@plt>
   1947c:	b	19420 <__printf_chk@plt+0x6cb0>
   19480:	mov	r2, r0
   19484:	movw	r1, #31520	; 0x7b20
   19488:	mov	r0, #1
   1948c:	movt	r1, #3
   19490:	bl	12770 <__printf_chk@plt>
   19494:	mov	r2, r6
   19498:	movw	r1, #31548	; 0x7b3c
   1949c:	mov	r0, #1
   194a0:	movt	r1, #3
   194a4:	bl	12770 <__printf_chk@plt>
   194a8:	mvn	r0, #2
   194ac:	pop	{r4, r5, r6, r7, r8, pc}
   194b0:	b	12380 <memmove@plt>
   194b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194b8:	movw	r8, #61168	; 0xeef0
   194bc:	movt	r8, #4
   194c0:	movw	r3, #31712	; 0x7be0
   194c4:	sub	sp, sp, #204	; 0xcc
   194c8:	mov	r2, r3
   194cc:	ldr	r3, [r8]
   194d0:	mov	r4, #0
   194d4:	movw	r7, #31516	; 0x7b1c
   194d8:	add	sl, sp, #56	; 0x38
   194dc:	movt	r7, #3
   194e0:	mov	r5, r0
   194e4:	mov	r6, r4
   194e8:	mov	r9, #2
   194ec:	movt	r2, #3
   194f0:	str	r3, [sp, #196]	; 0xc4
   194f4:	str	r2, [sp, #32]
   194f8:	movw	r2, #31688	; 0x7bc8
   194fc:	str	r8, [sp, #28]
   19500:	movt	r2, #3
   19504:	str	r2, [sp, #36]	; 0x24
   19508:	mov	fp, #0
   1950c:	mov	r2, #132	; 0x84
   19510:	mov	r1, fp
   19514:	add	r0, sp, #64	; 0x40
   19518:	str	fp, [sp, #48]	; 0x30
   1951c:	bl	122e4 <memset@plt>
   19520:	mvn	ip, #0
   19524:	add	r1, sp, #52	; 0x34
   19528:	str	r9, [sp, #4]
   1952c:	mov	r2, fp
   19530:	str	r1, [sp, #16]
   19534:	add	r3, sp, #48	; 0x30
   19538:	str	ip, [sp, #8]
   1953c:	mov	r1, r5
   19540:	str	fp, [sp, #12]
   19544:	add	r0, sp, #64	; 0x40
   19548:	str	fp, [sp]
   1954c:	mov	ip, #1
   19550:	str	sl, [sp, #20]
   19554:	str	ip, [sp, #188]	; 0xbc
   19558:	bl	18128 <__printf_chk@plt+0x59b8>
   1955c:	subs	r9, r0, #0
   19560:	blt	19604 <__printf_chk@plt+0x6e94>
   19564:	add	r2, sp, #46	; 0x2e
   19568:	mov	r1, r9
   1956c:	mov	r0, r5
   19570:	bl	167d4 <__printf_chk@plt+0x4064>
   19574:	cmp	r0, fp
   19578:	bne	19640 <__printf_chk@plt+0x6ed0>
   1957c:	mov	r1, r9
   19580:	add	r2, sp, #47	; 0x2f
   19584:	mov	r0, r5
   19588:	bl	1683c <__printf_chk@plt+0x40cc>
   1958c:	subs	r8, r0, #0
   19590:	bne	19658 <__printf_chk@plt+0x6ee8>
   19594:	ldr	r9, [sp, #56]	; 0x38
   19598:	add	r0, r9, #262144	; 0x40000
   1959c:	lsl	r0, r0, #2
   195a0:	bl	125a8 <malloc@plt>
   195a4:	ldr	ip, [sp, #52]	; 0x34
   195a8:	add	lr, sp, #60	; 0x3c
   195ac:	mov	r1, r8
   195b0:	ldrb	r3, [sp, #46]	; 0x2e
   195b4:	mov	r2, ip
   195b8:	str	r9, [sp, #8]
   195bc:	str	lr, [sp, #16]
   195c0:	mov	fp, r0
   195c4:	ldrb	r0, [sp, #47]	; 0x2f
   195c8:	stm	sp, {fp, ip}
   195cc:	mov	ip, #8388608	; 0x800000
   195d0:	str	ip, [sp, #12]
   195d4:	bl	193b8 <__printf_chk@plt+0x6c48>
   195d8:	mov	r9, r0
   195dc:	mov	r0, fp
   195e0:	bl	12128 <free@plt>
   195e4:	cmp	r9, #0
   195e8:	cmnne	r9, #3
   195ec:	bne	19604 <__printf_chk@plt+0x6e94>
   195f0:	add	r4, r4, #1
   195f4:	cmp	r4, #3
   195f8:	beq	19620 <__printf_chk@plt+0x6eb0>
   195fc:	ldrb	r9, [r4, r7]
   19600:	b	19508 <__printf_chk@plt+0x6d98>
   19604:	cmp	r6, #0
   19608:	bne	195f0 <__printf_chk@plt+0x6e80>
   1960c:	cmn	r9, #2
   19610:	add	r4, r4, #1
   19614:	movne	r6, r9
   19618:	cmp	r4, #3
   1961c:	bne	195fc <__printf_chk@plt+0x6e8c>
   19620:	ldr	r8, [sp, #28]
   19624:	mov	r0, r6
   19628:	ldr	r2, [sp, #196]	; 0xc4
   1962c:	ldr	r3, [r8]
   19630:	cmp	r2, r3
   19634:	bne	1966c <__printf_chk@plt+0x6efc>
   19638:	add	sp, sp, #204	; 0xcc
   1963c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19640:	ldr	r0, [sp, #36]	; 0x24
   19644:	bl	1226c <puts@plt>
   19648:	cmp	r6, fp
   1964c:	bne	195f0 <__printf_chk@plt+0x6e80>
   19650:	mvn	r6, #21
   19654:	b	195f0 <__printf_chk@plt+0x6e80>
   19658:	ldr	r0, [sp, #32]
   1965c:	bl	1226c <puts@plt>
   19660:	cmp	r6, #0
   19664:	beq	19650 <__printf_chk@plt+0x6ee0>
   19668:	b	195f0 <__printf_chk@plt+0x6e80>
   1966c:	bl	12494 <__stack_chk_fail@plt>
   19670:	tst	r1, #3
   19674:	beq	196ac <__printf_chk@plt+0x6f3c>
   19678:	cmp	r2, #0
   1967c:	bxeq	lr
   19680:	movw	r3, #31744	; 0x7c00
   19684:	movt	r3, #3
   19688:	ldrb	ip, [r1], #1
   1968c:	subs	r2, r2, #1
   19690:	eor	ip, ip, r0
   19694:	uxtb	ip, ip
   19698:	ldr	ip, [r3, ip, lsl #2]
   1969c:	eor	r0, ip, r0, lsr #8
   196a0:	bxeq	lr
   196a4:	tst	r1, #3
   196a8:	bne	19688 <__printf_chk@plt+0x6f18>
   196ac:	lsrs	ip, r2, #2
   196b0:	and	r2, r2, #3
   196b4:	push	{lr}		; (str lr, [sp, #-4]!)
   196b8:	sub	lr, r1, #4
   196bc:	beq	19710 <__printf_chk@plt+0x6fa0>
   196c0:	sub	ip, ip, #-1073741823	; 0xc0000001
   196c4:	movw	r3, #31744	; 0x7c00
   196c8:	movt	r3, #3
   196cc:	add	r1, r1, ip, lsl #2
   196d0:	ldr	ip, [lr, #4]!
   196d4:	eor	r0, r0, ip
   196d8:	cmp	lr, r1
   196dc:	uxtb	ip, r0
   196e0:	ldr	ip, [r3, ip, lsl #2]
   196e4:	eor	ip, ip, r0, lsr #8
   196e8:	uxtb	r0, ip
   196ec:	ldr	r0, [r3, r0, lsl #2]
   196f0:	eor	ip, r0, ip, lsr #8
   196f4:	uxtb	r0, ip
   196f8:	ldr	r0, [r3, r0, lsl #2]
   196fc:	eor	r0, r0, ip, lsr #8
   19700:	uxtb	ip, r0
   19704:	ldr	ip, [r3, ip, lsl #2]
   19708:	eor	r0, ip, r0, lsr #8
   1970c:	bne	196d0 <__printf_chk@plt+0x6f60>
   19710:	cmp	r2, #0
   19714:	popeq	{pc}		; (ldreq pc, [sp], #4)
   19718:	add	r1, lr, #3
   1971c:	movw	r3, #31744	; 0x7c00
   19720:	add	lr, r1, r2
   19724:	movt	r3, #3
   19728:	ldrb	r2, [r1, #1]!
   1972c:	eor	r2, r2, r0
   19730:	cmp	r1, lr
   19734:	uxtb	r2, r2
   19738:	ldr	ip, [r3, r2, lsl #2]
   1973c:	eor	r0, ip, r0, lsr #8
   19740:	bne	19728 <__printf_chk@plt+0x6fb8>
   19744:	pop	{pc}		; (ldr pc, [sp], #4)

00019748 <crc32@@Base>:
   19748:	push	{r4, lr}
   1974c:	mvn	r0, r0
   19750:	bl	19670 <__printf_chk@plt+0x6f00>
   19754:	mvn	r0, r0
   19758:	pop	{r4, pc}
   1975c:	push	{r4, lr}
   19760:	mvn	r0, r0
   19764:	bl	19670 <__printf_chk@plt+0x6f00>
   19768:	mvn	r0, r0
   1976c:	pop	{r4, pc}
   19770:	push	{r4, lr}
   19774:	mov	r4, r2
   19778:	mov	r2, r1
   1977c:	mov	r1, r0
   19780:	mvn	r0, #0
   19784:	bl	19670 <__printf_chk@plt+0x6f00>
   19788:	mvn	r0, r0
   1978c:	rev	r0, r0
   19790:	str	r0, [r4]
   19794:	pop	{r4, pc}
   19798:	sub	r0, r0, #1
   1979c:	uxtb	r0, r0
   197a0:	cmp	r0, #31
   197a4:	movwls	r3, #8319	; 0x207f
   197a8:	movtls	r3, #32768	; 0x8000
   197ac:	mvnls	r0, r3, lsr r0
   197b0:	andls	r0, r0, #1
   197b4:	movhi	r0, #1
   197b8:	bx	lr
   197bc:	ldr	r2, [r0]
   197c0:	ldr	r3, [r0, #8]
   197c4:	cmp	r2, #0
   197c8:	beq	197ec <crc32@@Base+0xa4>
   197cc:	cmp	r3, #0
   197d0:	movne	r3, #1
   197d4:	bne	197e4 <crc32@@Base+0x9c>
   197d8:	ldr	r3, [r0, #16]
   197dc:	adds	r3, r3, #0
   197e0:	movne	r3, #1
   197e4:	mov	r0, r3
   197e8:	bx	lr
   197ec:	cmp	r3, #0
   197f0:	ldr	r2, [r0, #16]
   197f4:	beq	197e4 <crc32@@Base+0x9c>
   197f8:	adds	r3, r2, #0
   197fc:	movne	r3, #1
   19800:	mov	r0, r3
   19804:	bx	lr
   19808:	push	{r4, r5, r6, r7, r8, lr}
   1980c:	movw	r5, #61168	; 0xeef0
   19810:	movt	r5, #4
   19814:	ldrb	r2, [r0, #30]
   19818:	sub	sp, sp, #24
   1981c:	mov	r4, r0
   19820:	ldr	r3, [r5]
   19824:	cmp	r2, #4
   19828:	mov	r6, r1
   1982c:	str	r3, [sp, #20]
   19830:	beq	19868 <crc32@@Base+0x120>
   19834:	ldr	r2, [r0, #12]
   19838:	add	r1, r0, #64	; 0x40
   1983c:	str	r1, [sp, #12]
   19840:	rev	r2, r2
   19844:	str	r2, [sp, #16]
   19848:	ldr	r0, [r6, #84]	; 0x54
   1984c:	bl	1a86c <crc32@@Base+0x1124>
   19850:	ldr	r2, [sp, #20]
   19854:	ldr	r3, [r5]
   19858:	cmp	r2, r3
   1985c:	bne	198d0 <crc32@@Base+0x188>
   19860:	add	sp, sp, #24
   19864:	pop	{r4, r5, r6, r7, r8, pc}
   19868:	ldr	r7, [r1, #20]
   1986c:	bl	19c50 <crc32@@Base+0x508>
   19870:	add	r2, sp, #12
   19874:	add	r3, sp, #16
   19878:	mov	r1, r7
   1987c:	mov	r8, r0
   19880:	mov	r0, r4
   19884:	bl	19c80 <crc32@@Base+0x538>
   19888:	ldr	r2, [sp, #16]
   1988c:	cmp	r2, #0
   19890:	cmpne	r7, r8
   19894:	ldrcc	r1, [sp, #12]
   19898:	bcc	19848 <crc32@@Base+0x100>
   1989c:	ldr	ip, [r6, #76]	; 0x4c
   198a0:	movw	r1, #65044	; 0xfe14
   198a4:	movt	r1, #4
   198a8:	ldr	r3, [r6, #80]	; 0x50
   198ac:	movw	r2, #32768	; 0x8000
   198b0:	movt	r2, #3
   198b4:	ldr	r0, [r1]
   198b8:	mov	r1, #1
   198bc:	str	r7, [sp]
   198c0:	str	ip, [sp, #4]
   198c4:	bl	122b4 <__fprintf_chk@plt>
   198c8:	mvn	r0, #0
   198cc:	b	19850 <crc32@@Base+0x108>
   198d0:	bl	12494 <__stack_chk_fail@plt>
   198d4:	ldr	r2, [r1, #44]	; 0x2c
   198d8:	push	{r4, r5, r6, r7, r8, lr}
   198dc:	sub	r2, r2, #64	; 0x40
   198e0:	mov	r4, r0
   198e4:	mov	r7, r1
   198e8:	add	r1, r0, #64	; 0x40
   198ec:	mov	r0, #0
   198f0:	mov	r5, r3
   198f4:	bl	19748 <crc32@@Base>
   198f8:	ldr	r1, [r7, #64]	; 0x40
   198fc:	mov	r6, r0
   19900:	ldr	r0, [r5, #80]	; 0x50
   19904:	bl	1aa40 <crc32@@Base+0x12f8>
   19908:	ldr	r3, [r5, #44]	; 0x2c
   1990c:	ldr	ip, [r5, #36]	; 0x24
   19910:	rev	r6, r6
   19914:	cmp	r3, #32
   19918:	ldr	r3, [r7, #44]	; 0x2c
   1991c:	ldr	r2, [r5, #60]	; 0x3c
   19920:	addeq	r3, r3, #8064	; 0x1f80
   19924:	subne	r3, r3, #64	; 0x40
   19928:	addeq	r3, r3, #32
   1992c:	cmp	ip, #26
   19930:	ldr	r1, [r5, #56]	; 0x38
   19934:	rev	r3, r3
   19938:	ldreq	r2, [r4, #80]	; 0x50
   1993c:	str	r3, [r4, #12]
   19940:	movw	r3, #1319	; 0x527
   19944:	subeq	r1, r2, #28
   19948:	str	r6, [r4, #24]
   1994c:	rev	r1, r1
   19950:	rev	r2, r2
   19954:	str	r1, [r4, #16]
   19958:	movt	r3, #22041	; 0x5619
   1995c:	str	r2, [r4, #20]
   19960:	mov	r2, #32
   19964:	str	r3, [r4]
   19968:	rev	r0, r0
   1996c:	str	r0, [r4, #8]
   19970:	ldr	r3, [r5, #36]	; 0x24
   19974:	add	r0, r4, r2
   19978:	strb	r3, [r4, #28]
   1997c:	ldr	r3, [r5, #40]	; 0x28
   19980:	strb	r3, [r4, #29]
   19984:	ldr	r3, [r5, #44]	; 0x2c
   19988:	strb	r3, [r4, #30]
   1998c:	ldr	r3, [r5, #48]	; 0x30
   19990:	strb	r3, [r4, #31]
   19994:	ldr	r1, [r5, #64]	; 0x40
   19998:	bl	126bc <strncpy@plt>
   1999c:	mov	r2, #64	; 0x40
   199a0:	mov	r1, r4
   199a4:	mov	r0, #0
   199a8:	bl	19748 <crc32@@Base>
   199ac:	rev	r0, r0
   199b0:	str	r0, [r4, #4]
   199b4:	pop	{r4, r5, r6, r7, r8, pc}
   199b8:	push	{r4, r5, r6, r7, r8, lr}
   199bc:	movw	r5, #61168	; 0xeef0
   199c0:	movt	r5, #4
   199c4:	sub	sp, sp, #72	; 0x48
   199c8:	add	r6, r0, #64	; 0x40
   199cc:	add	lr, sp, #4
   199d0:	ldr	r3, [r5]
   199d4:	mov	r4, r0
   199d8:	mov	r8, r1
   199dc:	str	r3, [sp, #68]	; 0x44
   199e0:	ldr	r0, [r4]
   199e4:	add	r4, r4, #16
   199e8:	ldr	r1, [r4, #-12]
   199ec:	mov	ip, lr
   199f0:	ldr	r2, [r4, #-8]
   199f4:	add	lr, lr, #16
   199f8:	ldr	r3, [r4, #-4]
   199fc:	cmp	r4, r6
   19a00:	stmia	ip!, {r0, r1, r2, r3}
   19a04:	bne	199e0 <crc32@@Base+0x298>
   19a08:	ldr	r2, [sp, #4]
   19a0c:	movw	r3, #1319	; 0x527
   19a10:	movt	r3, #22041	; 0x5619
   19a14:	cmp	r2, r3
   19a18:	bne	19a80 <crc32@@Base+0x338>
   19a1c:	mov	r7, #0
   19a20:	add	r1, sp, #4
   19a24:	mov	r0, r7
   19a28:	mov	r2, #64	; 0x40
   19a2c:	ldr	r6, [sp, #8]
   19a30:	str	r7, [sp, #8]
   19a34:	bl	19748 <crc32@@Base>
   19a38:	rev	r6, r6
   19a3c:	cmp	r6, r0
   19a40:	bne	19a88 <crc32@@Base+0x340>
   19a44:	ldr	r3, [sp, #28]
   19a48:	mov	r1, r4
   19a4c:	sub	r2, r8, #64	; 0x40
   19a50:	mov	r0, r7
   19a54:	rev	r4, r3
   19a58:	bl	19748 <crc32@@Base>
   19a5c:	cmp	r4, r0
   19a60:	moveq	r0, r7
   19a64:	mvnne	r0, #10
   19a68:	ldr	r2, [sp, #68]	; 0x44
   19a6c:	ldr	r3, [r5]
   19a70:	cmp	r2, r3
   19a74:	bne	19a90 <crc32@@Base+0x348>
   19a78:	add	sp, sp, #72	; 0x48
   19a7c:	pop	{r4, r5, r6, r7, r8, pc}
   19a80:	mvn	r0, #8
   19a84:	b	19a68 <crc32@@Base+0x320>
   19a88:	mvn	r0, #6
   19a8c:	b	19a68 <crc32@@Base+0x320>
   19a90:	bl	12494 <__stack_chk_fail@plt>
   19a94:	push	{r4, r5, lr}
   19a98:	movw	r4, #61168	; 0xeef0
   19a9c:	movt	r4, #4
   19aa0:	sub	sp, sp, #12
   19aa4:	mov	r5, r3
   19aa8:	ldr	ip, [r4]
   19aac:	mov	r3, sp
   19ab0:	str	ip, [sp, #4]
   19ab4:	bl	30ef4 <crc32@@Base+0x177ac>
   19ab8:	cmp	r0, #0
   19abc:	beq	19ae8 <crc32@@Base+0x3a0>
   19ac0:	ldr	r3, [sp]
   19ac4:	cmp	r3, #3
   19ac8:	bls	19ae8 <crc32@@Base+0x3a0>
   19acc:	ldr	r3, [r0]
   19ad0:	ubfx	r1, r3, #8, #8
   19ad4:	ubfx	r2, r3, #16, #8
   19ad8:	lsr	r5, r3, #24
   19adc:	orr	r5, r5, r3, lsl #24
   19ae0:	orr	r5, r5, r1, lsl #16
   19ae4:	orr	r5, r5, r2, lsl #8
   19ae8:	ldr	r2, [sp, #4]
   19aec:	mov	r0, r5
   19af0:	ldr	r3, [r4]
   19af4:	cmp	r2, r3
   19af8:	bne	19b04 <crc32@@Base+0x3bc>
   19afc:	add	sp, sp, #12
   19b00:	pop	{r4, r5, pc}
   19b04:	bl	12494 <__stack_chk_fail@plt>
   19b08:	push	{r4, r5, lr}
   19b0c:	movw	r4, #61168	; 0xeef0
   19b10:	movt	r4, #4
   19b14:	sub	sp, sp, #12
   19b18:	mov	r5, r3
   19b1c:	ldr	ip, [r4]
   19b20:	mov	r3, sp
   19b24:	str	ip, [sp, #4]
   19b28:	bl	30ef4 <crc32@@Base+0x177ac>
   19b2c:	cmp	r0, #0
   19b30:	beq	19b5c <crc32@@Base+0x414>
   19b34:	ldr	r3, [sp]
   19b38:	cmp	r3, #3
   19b3c:	bls	19b5c <crc32@@Base+0x414>
   19b40:	ldr	r3, [r0]
   19b44:	ubfx	r1, r3, #8, #8
   19b48:	ubfx	r2, r3, #16, #8
   19b4c:	lsr	r5, r3, #24
   19b50:	orr	r5, r5, r3, lsl #24
   19b54:	orr	r5, r5, r1, lsl #16
   19b58:	orr	r5, r5, r2, lsl #8
   19b5c:	ldr	r2, [sp, #4]
   19b60:	mov	r0, r5
   19b64:	ldr	r3, [r4]
   19b68:	cmp	r2, r3
   19b6c:	bne	19b78 <crc32@@Base+0x430>
   19b70:	add	sp, sp, #12
   19b74:	pop	{r4, r5, pc}
   19b78:	bl	12494 <__stack_chk_fail@plt>
   19b7c:	andeq	r0, r0, r0
   19b80:	push	{r4, r5, r6, r7, lr}
   19b84:	movw	r4, #61168	; 0xeef0
   19b88:	movt	r4, #4
   19b8c:	sub	sp, sp, #76	; 0x4c
   19b90:	add	r7, r0, #64	; 0x40
   19b94:	add	r5, sp, #4
   19b98:	ldr	r3, [r4]
   19b9c:	mov	r6, r0
   19ba0:	mov	ip, r0
   19ba4:	str	r3, [sp, #68]	; 0x44
   19ba8:	ldr	r0, [ip]
   19bac:	add	ip, ip, #16
   19bb0:	ldr	r1, [ip, #-12]
   19bb4:	mov	lr, r5
   19bb8:	ldr	r2, [ip, #-8]
   19bbc:	add	r5, r5, #16
   19bc0:	ldr	r3, [ip, #-4]
   19bc4:	cmp	ip, r7
   19bc8:	stmia	lr!, {r0, r1, r2, r3}
   19bcc:	bne	19ba8 <crc32@@Base+0x460>
   19bd0:	mov	r3, #0
   19bd4:	add	r1, sp, #4
   19bd8:	mov	r0, r3
   19bdc:	mov	r2, #64	; 0x40
   19be0:	str	r3, [sp, #8]
   19be4:	bl	19748 <crc32@@Base>
   19be8:	ldr	r3, [r6, #4]
   19bec:	ldr	r1, [sp, #68]	; 0x44
   19bf0:	rev	r3, r3
   19bf4:	ldr	r2, [r4]
   19bf8:	cmp	r1, r2
   19bfc:	sub	r0, r0, r3
   19c00:	clz	r0, r0
   19c04:	lsr	r0, r0, #5
   19c08:	bne	19c14 <crc32@@Base+0x4cc>
   19c0c:	add	sp, sp, #76	; 0x4c
   19c10:	pop	{r4, r5, r6, r7, pc}
   19c14:	bl	12494 <__stack_chk_fail@plt>
   19c18:	ldr	r2, [r0, #12]
   19c1c:	add	r1, r0, #64	; 0x40
   19c20:	push	{r4, lr}
   19c24:	mov	r3, #65536	; 0x10000
   19c28:	mov	r4, r0
   19c2c:	rev	r2, r2
   19c30:	mov	r0, #0
   19c34:	bl	1975c <crc32@@Base+0x14>
   19c38:	ldr	r3, [r4, #24]
   19c3c:	rev	r3, r3
   19c40:	sub	r0, r0, r3
   19c44:	clz	r0, r0
   19c48:	lsr	r0, r0, #5
   19c4c:	pop	{r4, pc}
   19c50:	ldr	r3, [r0, #64]	; 0x40
   19c54:	cmp	r3, #0
   19c58:	beq	19c78 <crc32@@Base+0x530>
   19c5c:	add	r3, r0, #68	; 0x44
   19c60:	mov	r0, #0
   19c64:	ldr	r2, [r3], #4
   19c68:	add	r0, r0, #1
   19c6c:	cmp	r2, #0
   19c70:	bne	19c64 <crc32@@Base+0x51c>
   19c74:	bx	lr
   19c78:	mov	r0, r3
   19c7c:	bx	lr
   19c80:	ldr	ip, [r0, #64]	; 0x40
   19c84:	cmp	ip, #0
   19c88:	beq	19d24 <crc32@@Base+0x5dc>
   19c8c:	push	{r4, r5, r6, r7, r8, lr}
   19c90:	add	r7, r0, #68	; 0x44
   19c94:	add	r8, r0, #64	; 0x40
   19c98:	mov	r4, #0
   19c9c:	mov	r5, r7
   19ca0:	b	19ca8 <crc32@@Base+0x560>
   19ca4:	mov	r4, r6
   19ca8:	ldr	lr, [r5], #4
   19cac:	add	r6, r4, #1
   19cb0:	cmp	lr, #0
   19cb4:	bne	19ca4 <crc32@@Base+0x55c>
   19cb8:	cmp	r1, r6
   19cbc:	bcs	19d14 <crc32@@Base+0x5cc>
   19cc0:	ldr	r5, [r8, r1, lsl #2]
   19cc4:	add	r4, r4, #2
   19cc8:	cmp	r1, #0
   19ccc:	lsl	r1, r1, #2
   19cd0:	rev	r5, r5
   19cd4:	add	r4, r8, r4, lsl #2
   19cd8:	str	r5, [r3]
   19cdc:	beq	19d0c <crc32@@Base+0x5c4>
   19ce0:	add	r1, r1, #64	; 0x40
   19ce4:	add	r0, r0, r1
   19ce8:	b	19cf0 <crc32@@Base+0x5a8>
   19cec:	ldr	ip, [r7], #4
   19cf0:	rev	ip, ip
   19cf4:	cmp	r7, r0
   19cf8:	add	ip, ip, #3
   19cfc:	bic	ip, ip, #3
   19d00:	add	lr, lr, ip
   19d04:	bne	19cec <crc32@@Base+0x5a4>
   19d08:	add	r4, r4, lr
   19d0c:	str	r4, [r2]
   19d10:	pop	{r4, r5, r6, r7, r8, pc}
   19d14:	mov	r1, #0
   19d18:	str	r1, [r3]
   19d1c:	str	r1, [r2]
   19d20:	pop	{r4, r5, r6, r7, r8, pc}
   19d24:	mov	r1, #0
   19d28:	str	r1, [r3]
   19d2c:	str	r1, [r2]
   19d30:	bx	lr
   19d34:	mov	r2, r0
   19d38:	vldr	d5, [pc, #64]	; 19d80 <crc32@@Base+0x638>
   19d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   19d40:	sub	sp, sp, #28
   19d44:	vmov	s15, r2
   19d48:	movw	r1, #34064	; 0x8510
   19d4c:	vldr	d6, [pc, #52]	; 19d88 <crc32@@Base+0x640>
   19d50:	movt	r1, #3
   19d54:	str	r0, [sp, #20]
   19d58:	mov	r0, #1
   19d5c:	vcvt.f64.u32	d7, s15
   19d60:	vmul.f64	d6, d7, d6
   19d64:	vmul.f64	d7, d7, d5
   19d68:	vstr	d6, [sp, #8]
   19d6c:	vstr	d7, [sp]
   19d70:	bl	12770 <__printf_chk@plt>
   19d74:	add	sp, sp, #28
   19d78:	pop	{pc}		; (ldr pc, [sp], #4)
   19d7c:	nop	{0}
   19d80:	andeq	r0, r0, r0
   19d84:	svccc	0x00500000
   19d88:	andeq	r0, r0, r0
   19d8c:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   19d90:	push	{lr}		; (str lr, [sp, #-4]!)
   19d94:	sub	sp, sp, #12
   19d98:	add	r3, sp, #8
   19d9c:	str	r0, [r3, #-4]!
   19da0:	mov	r0, r3
   19da4:	bl	1238c <ctime@plt>
   19da8:	movw	r1, #55420	; 0xd87c
   19dac:	movt	r1, #3
   19db0:	mov	r2, r0
   19db4:	mov	r0, #1
   19db8:	bl	12770 <__printf_chk@plt>
   19dbc:	add	sp, sp, #12
   19dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   19dc4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19dc8:	movw	r5, #61168	; 0xeef0
   19dcc:	movt	r5, #4
   19dd0:	sub	sp, sp, #24
   19dd4:	mov	r4, r0
   19dd8:	add	r3, r0, #32
   19ddc:	ldr	ip, [r5]
   19de0:	movw	r2, #46016	; 0xb3c0
   19de4:	str	r3, [sp]
   19de8:	movt	r2, #3
   19dec:	mov	r3, #32
   19df0:	movw	r1, #34232	; 0x85b8
   19df4:	mov	r0, #1
   19df8:	movt	r1, #3
   19dfc:	str	ip, [sp, #20]
   19e00:	bl	12770 <__printf_chk@plt>
   19e04:	movw	r2, #46016	; 0xb3c0
   19e08:	movw	r1, #34256	; 0x85d0
   19e0c:	movt	r2, #3
   19e10:	movt	r1, #3
   19e14:	mov	r0, #1
   19e18:	bl	12770 <__printf_chk@plt>
   19e1c:	ldr	r0, [r4, #8]
   19e20:	rev	r0, r0
   19e24:	bl	19d90 <crc32@@Base+0x648>
   19e28:	movw	r2, #46016	; 0xb3c0
   19e2c:	movw	r1, #34276	; 0x85e4
   19e30:	movt	r2, #3
   19e34:	movt	r1, #3
   19e38:	mov	r0, #1
   19e3c:	bl	12770 <__printf_chk@plt>
   19e40:	ldrb	r0, [r4, #28]
   19e44:	cmp	r0, #0
   19e48:	beq	1a168 <crc32@@Base+0xa20>
   19e4c:	movw	r1, #32828	; 0x803c
   19e50:	mov	r3, #25
   19e54:	movt	r1, #3
   19e58:	b	19e6c <crc32@@Base+0x724>
   19e5c:	cmp	r3, r0
   19e60:	beq	1a110 <crc32@@Base+0x9c8>
   19e64:	ldr	r3, [r2, #12]
   19e68:	mov	r1, r2
   19e6c:	cmp	r3, #0
   19e70:	add	r2, r1, #12
   19e74:	bge	19e5c <crc32@@Base+0x714>
   19e78:	movw	r3, #34096	; 0x8530
   19e7c:	movt	r3, #3
   19e80:	ldrb	ip, [r4, #29]
   19e84:	cmp	ip, #0
   19e88:	beq	1a15c <crc32@@Base+0xa14>
   19e8c:	mov	r2, #1
   19e90:	ldr	r0, [pc, #736]	; 1a178 <crc32@@Base+0xa30>
   19e94:	b	19ea8 <crc32@@Base+0x760>
   19e98:	cmp	r2, ip
   19e9c:	beq	1a118 <crc32@@Base+0x9d0>
   19ea0:	ldr	r2, [r1, #12]
   19ea4:	mov	r0, r1
   19ea8:	cmp	r2, #0
   19eac:	add	r1, r0, #12
   19eb0:	bge	19e98 <crc32@@Base+0x750>
   19eb4:	movw	r2, #34108	; 0x853c
   19eb8:	movt	r2, #3
   19ebc:	ldrb	lr, [r4, #30]
   19ec0:	cmp	lr, #13
   19ec4:	beq	1a150 <crc32@@Base+0xa08>
   19ec8:	mov	r1, #7
   19ecc:	ldr	ip, [pc, #680]	; 1a17c <crc32@@Base+0xa34>
   19ed0:	b	19ee4 <crc32@@Base+0x79c>
   19ed4:	cmp	lr, r1
   19ed8:	beq	1a120 <crc32@@Base+0x9d8>
   19edc:	ldr	r1, [r0, #12]
   19ee0:	mov	ip, r0
   19ee4:	cmp	r1, #0
   19ee8:	add	r0, ip, #12
   19eec:	bge	19ed4 <crc32@@Base+0x78c>
   19ef0:	movw	r6, #34132	; 0x8554
   19ef4:	movt	r6, #3
   19ef8:	ldrb	lr, [r4, #31]
   19efc:	cmp	lr, #0
   19f00:	beq	1a144 <crc32@@Base+0x9fc>
   19f04:	mov	r1, #2
   19f08:	ldr	ip, [pc, #624]	; 1a180 <crc32@@Base+0xa38>
   19f0c:	b	19f20 <crc32@@Base+0x7d8>
   19f10:	cmp	lr, r1
   19f14:	beq	1a108 <crc32@@Base+0x9c0>
   19f18:	ldr	r1, [r0, #12]
   19f1c:	mov	ip, r0
   19f20:	cmp	r1, #0
   19f24:	add	r0, ip, #12
   19f28:	bge	19f10 <crc32@@Base+0x7c8>
   19f2c:	movw	r1, #34148	; 0x8564
   19f30:	movt	r1, #3
   19f34:	str	r1, [sp, #4]
   19f38:	mov	r0, #1
   19f3c:	str	r6, [sp]
   19f40:	movw	r1, #34296	; 0x85f8
   19f44:	movt	r1, #3
   19f48:	bl	12770 <__printf_chk@plt>
   19f4c:	movw	r2, #46016	; 0xb3c0
   19f50:	movw	r1, #34312	; 0x8608
   19f54:	movt	r2, #3
   19f58:	movt	r1, #3
   19f5c:	mov	r0, #1
   19f60:	bl	12770 <__printf_chk@plt>
   19f64:	ldr	r0, [r4, #12]
   19f68:	rev	r0, r0
   19f6c:	bl	19d34 <crc32@@Base+0x5ec>
   19f70:	ldr	r3, [r4, #16]
   19f74:	movw	r2, #46016	; 0xb3c0
   19f78:	movw	r1, #34332	; 0x861c
   19f7c:	rev	r3, r3
   19f80:	movt	r2, #3
   19f84:	movt	r1, #3
   19f88:	mov	r0, #1
   19f8c:	bl	12770 <__printf_chk@plt>
   19f90:	ldr	r3, [r4, #20]
   19f94:	movw	r2, #46016	; 0xb3c0
   19f98:	movw	r1, #34356	; 0x8634
   19f9c:	rev	r3, r3
   19fa0:	movt	r2, #3
   19fa4:	movt	r1, #3
   19fa8:	mov	r0, #1
   19fac:	bl	12770 <__printf_chk@plt>
   19fb0:	ldrb	r3, [r4, #30]
   19fb4:	and	r2, r3, #253	; 0xfd
   19fb8:	cmp	r2, #4
   19fbc:	bne	1a0d0 <crc32@@Base+0x988>
   19fc0:	ldr	r3, [r4, #64]	; 0x40
   19fc4:	cmp	r3, #0
   19fc8:	beq	1a128 <crc32@@Base+0x9e0>
   19fcc:	add	r3, r4, #68	; 0x44
   19fd0:	mov	r7, #0
   19fd4:	ldr	r8, [r3], #4
   19fd8:	add	r7, r7, #1
   19fdc:	cmp	r8, #0
   19fe0:	bne	19fd4 <crc32@@Base+0x88c>
   19fe4:	movw	r2, #46016	; 0xb3c0
   19fe8:	movw	r1, #34380	; 0x864c
   19fec:	movt	r2, #3
   19ff0:	movt	r1, #3
   19ff4:	mov	r0, #1
   19ff8:	mov	r6, r8
   19ffc:	bl	12770 <__printf_chk@plt>
   1a000:	mov	r1, r8
   1a004:	add	r3, sp, #16
   1a008:	add	r2, sp, #12
   1a00c:	mov	r0, r4
   1a010:	movw	r9, #34396	; 0x865c
   1a014:	bl	19c80 <crc32@@Base+0x538>
   1a018:	mov	r3, r8
   1a01c:	movw	r2, #46016	; 0xb3c0
   1a020:	movw	r1, #34396	; 0x865c
   1a024:	movt	r2, #3
   1a028:	movt	r1, #3
   1a02c:	mov	r0, #1
   1a030:	movw	r8, #46016	; 0xb3c0
   1a034:	bl	12770 <__printf_chk@plt>
   1a038:	ldr	r0, [sp, #16]
   1a03c:	bl	19d34 <crc32@@Base+0x5ec>
   1a040:	movw	sl, #34412	; 0x866c
   1a044:	movt	r8, #3
   1a048:	movt	r9, #3
   1a04c:	movt	sl, #3
   1a050:	add	r6, r6, #1
   1a054:	cmp	r7, r6
   1a058:	beq	1a0b8 <crc32@@Base+0x970>
   1a05c:	add	r3, sp, #16
   1a060:	add	r2, sp, #12
   1a064:	mov	r1, r6
   1a068:	mov	r0, r4
   1a06c:	bl	19c80 <crc32@@Base+0x538>
   1a070:	mov	r3, r6
   1a074:	mov	r2, r8
   1a078:	mov	r1, r9
   1a07c:	mov	r0, #1
   1a080:	bl	12770 <__printf_chk@plt>
   1a084:	ldr	r0, [sp, #16]
   1a088:	bl	19d34 <crc32@@Base+0x5ec>
   1a08c:	ldrb	r3, [r4, #30]
   1a090:	cmp	r3, #6
   1a094:	bne	1a050 <crc32@@Base+0x908>
   1a098:	ldr	r3, [sp, #12]
   1a09c:	mov	r2, r8
   1a0a0:	mov	r1, sl
   1a0a4:	mov	r0, #1
   1a0a8:	add	r6, r6, #1
   1a0ac:	bl	12770 <__printf_chk@plt>
   1a0b0:	cmp	r7, r6
   1a0b4:	bne	1a05c <crc32@@Base+0x914>
   1a0b8:	ldr	r2, [sp, #20]
   1a0bc:	ldr	r3, [r5]
   1a0c0:	cmp	r2, r3
   1a0c4:	bne	1a174 <crc32@@Base+0xa2c>
   1a0c8:	add	sp, sp, #24
   1a0cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a0d0:	cmp	r3, #32
   1a0d4:	bne	1a0b8 <crc32@@Base+0x970>
   1a0d8:	ldr	r3, [r4, #12]
   1a0dc:	movw	r1, #34436	; 0x8684
   1a0e0:	ldr	r2, [r4, #16]
   1a0e4:	movt	r1, #3
   1a0e8:	rev	r3, r3
   1a0ec:	mov	r0, #1
   1a0f0:	sub	r3, r3, #8064	; 0x1f80
   1a0f4:	rev	r2, r2
   1a0f8:	sub	r3, r3, #32
   1a0fc:	sub	r2, r2, #64	; 0x40
   1a100:	bl	12770 <__printf_chk@plt>
   1a104:	b	1a0b8 <crc32@@Base+0x970>
   1a108:	ldr	r1, [ip, #20]
   1a10c:	b	19f34 <crc32@@Base+0x7ec>
   1a110:	ldr	r3, [r1, #20]
   1a114:	b	19e80 <crc32@@Base+0x738>
   1a118:	ldr	r2, [r0, #20]
   1a11c:	b	19ebc <crc32@@Base+0x774>
   1a120:	ldr	r6, [ip, #20]
   1a124:	b	19ef8 <crc32@@Base+0x7b0>
   1a128:	movw	r2, #46016	; 0xb3c0
   1a12c:	movw	r1, #34380	; 0x864c
   1a130:	movt	r2, #3
   1a134:	movt	r1, #3
   1a138:	mov	r0, #1
   1a13c:	bl	12770 <__printf_chk@plt>
   1a140:	b	1a0b8 <crc32@@Base+0x970>
   1a144:	movw	r1, #34216	; 0x85a8
   1a148:	movt	r1, #3
   1a14c:	b	19f34 <crc32@@Base+0x7ec>
   1a150:	movw	r6, #34196	; 0x8594
   1a154:	movt	r6, #3
   1a158:	b	19ef8 <crc32@@Base+0x7b0>
   1a15c:	movw	r2, #34180	; 0x8584
   1a160:	movt	r2, #3
   1a164:	b	19ebc <crc32@@Base+0x774>
   1a168:	movw	r3, #34168	; 0x8578
   1a16c:	movt	r3, #3
   1a170:	b	19e80 <crc32@@Base+0x738>
   1a174:	bl	12494 <__stack_chk_fail@plt>
   1a178:	andeq	r8, r3, r4, ror r1
   1a17c:			; <UNDEFINED> instruction: 0x000382b8
   1a180:	andeq	r8, r3, ip, lsl #9
   1a184:	ldr	r3, [r0]
   1a188:	cmp	r3, #0
   1a18c:	blt	1a1b0 <crc32@@Base+0xa68>
   1a190:	cmp	r1, r3
   1a194:	bne	1a1a4 <crc32@@Base+0xa5c>
   1a198:	bx	lr
   1a19c:	cmp	r3, r1
   1a1a0:	bxeq	lr
   1a1a4:	ldr	r3, [r0, #12]!
   1a1a8:	cmp	r3, #0
   1a1ac:	bge	1a19c <crc32@@Base+0xa54>
   1a1b0:	mov	r0, #0
   1a1b4:	bx	lr
   1a1b8:	push	{r4, r5, r6, lr}
   1a1bc:	movw	lr, #32828	; 0x803c
   1a1c0:	movt	lr, #3
   1a1c4:	mov	r3, #12
   1a1c8:	mla	r3, r3, r0, lr
   1a1cc:	ldr	r2, [r3, #1196]	; 0x4ac
   1a1d0:	ldr	r3, [r2]
   1a1d4:	cmp	r3, #0
   1a1d8:	bge	1a1ec <crc32@@Base+0xaa4>
   1a1dc:	b	1a1fc <crc32@@Base+0xab4>
   1a1e0:	ldr	r3, [r2, #12]!
   1a1e4:	cmp	r3, #0
   1a1e8:	blt	1a1fc <crc32@@Base+0xab4>
   1a1ec:	cmp	r1, r3
   1a1f0:	bne	1a1e0 <crc32@@Base+0xa98>
   1a1f4:	ldr	r0, [r2, #8]
   1a1f8:	pop	{r4, r5, r6, pc}
   1a1fc:	movw	r3, #34476	; 0x86ac
   1a200:	movt	r3, #3
   1a204:	mov	ip, r0
   1a208:	mov	r5, #12
   1a20c:	ldm	r3, {r0, r1, r2}
   1a210:	movw	r4, #65420	; 0xff8c
   1a214:	mla	ip, r5, ip, lr
   1a218:	movt	r4, #4
   1a21c:	mov	r3, #30
   1a220:	stmia	r4!, {r0, r1}
   1a224:	mov	r0, r4
   1a228:	strb	r2, [r0], #-8
   1a22c:	mov	r2, #21
   1a230:	ldr	r1, [ip, #1188]	; 0x4a4
   1a234:	bl	12404 <__strncat_chk@plt>
   1a238:	sub	r0, r4, #8
   1a23c:	pop	{r4, r5, r6, pc}
   1a240:	push	{r4, r5, r6, lr}
   1a244:	movw	lr, #32828	; 0x803c
   1a248:	movt	lr, #3
   1a24c:	mov	r3, #12
   1a250:	mla	r3, r3, r0, lr
   1a254:	ldr	r2, [r3, #1196]	; 0x4ac
   1a258:	ldr	r3, [r2]
   1a25c:	cmp	r3, #0
   1a260:	bge	1a274 <crc32@@Base+0xb2c>
   1a264:	b	1a284 <crc32@@Base+0xb3c>
   1a268:	ldr	r3, [r2, #12]!
   1a26c:	cmp	r3, #0
   1a270:	blt	1a284 <crc32@@Base+0xb3c>
   1a274:	cmp	r1, r3
   1a278:	bne	1a268 <crc32@@Base+0xb20>
   1a27c:	ldr	r0, [r2, #4]
   1a280:	pop	{r4, r5, r6, pc}
   1a284:	movw	r3, #34476	; 0x86ac
   1a288:	movt	r3, #3
   1a28c:	mov	ip, r0
   1a290:	mov	r5, #12
   1a294:	ldm	r3, {r0, r1, r2}
   1a298:	movw	r4, #65420	; 0xff8c
   1a29c:	mla	ip, r5, ip, lr
   1a2a0:	movt	r4, #4
   1a2a4:	mov	r3, #30
   1a2a8:	stmia	r4!, {r0, r1}
   1a2ac:	mov	r0, r4
   1a2b0:	strb	r2, [r0], #-8
   1a2b4:	mov	r2, #21
   1a2b8:	ldr	r1, [ip, #1188]	; 0x4a4
   1a2bc:	bl	12404 <__strncat_chk@plt>
   1a2c0:	sub	r0, r4, #8
   1a2c4:	pop	{r4, r5, r6, pc}
   1a2c8:	movw	r2, #32828	; 0x803c
   1a2cc:	movt	r2, #3
   1a2d0:	mov	r3, #12
   1a2d4:	mla	r0, r3, r0, r2
   1a2d8:	ldr	r0, [r0, #1192]	; 0x4a8
   1a2dc:	bx	lr
   1a2e0:	movw	r2, #32828	; 0x803c
   1a2e4:	movt	r2, #3
   1a2e8:	mov	r3, #12
   1a2ec:	mla	r0, r3, r0, r2
   1a2f0:	ldr	r0, [r0, #1188]	; 0x4a4
   1a2f4:	bx	lr
   1a2f8:	ldr	r3, [r0]
   1a2fc:	cmp	r3, #0
   1a300:	bge	1a314 <crc32@@Base+0xbcc>
   1a304:	b	1a320 <crc32@@Base+0xbd8>
   1a308:	ldr	r3, [r0, #12]!
   1a30c:	cmp	r3, #0
   1a310:	blt	1a320 <crc32@@Base+0xbd8>
   1a314:	cmp	r2, r3
   1a318:	bne	1a308 <crc32@@Base+0xbc0>
   1a31c:	ldr	r1, [r0, #8]
   1a320:	mov	r0, r1
   1a324:	bx	lr
   1a328:	cmp	r0, #0
   1a32c:	beq	1a370 <crc32@@Base+0xc28>
   1a330:	movw	r1, #32828	; 0x803c
   1a334:	mov	r3, #25
   1a338:	movt	r1, #3
   1a33c:	b	1a350 <crc32@@Base+0xc08>
   1a340:	cmp	r0, r3
   1a344:	beq	1a368 <crc32@@Base+0xc20>
   1a348:	ldr	r3, [r2, #12]
   1a34c:	mov	r1, r2
   1a350:	cmp	r3, #0
   1a354:	add	r2, r1, #12
   1a358:	bge	1a340 <crc32@@Base+0xbf8>
   1a35c:	movw	r0, #34096	; 0x8530
   1a360:	movt	r0, #3
   1a364:	bx	lr
   1a368:	ldr	r0, [r1, #20]
   1a36c:	bx	lr
   1a370:	movw	r0, #34168	; 0x8578
   1a374:	movt	r0, #3
   1a378:	bx	lr
   1a37c:	cmp	r0, #0
   1a380:	beq	1a3c0 <crc32@@Base+0xc78>
   1a384:	mov	r3, #1
   1a388:	ldr	r1, [pc, #60]	; 1a3cc <crc32@@Base+0xc84>
   1a38c:	b	1a3a0 <crc32@@Base+0xc58>
   1a390:	cmp	r0, r3
   1a394:	beq	1a3b8 <crc32@@Base+0xc70>
   1a398:	ldr	r3, [r2, #12]
   1a39c:	mov	r1, r2
   1a3a0:	cmp	r3, #0
   1a3a4:	add	r2, r1, #12
   1a3a8:	bge	1a390 <crc32@@Base+0xc48>
   1a3ac:	movw	r0, #34108	; 0x853c
   1a3b0:	movt	r0, #3
   1a3b4:	bx	lr
   1a3b8:	ldr	r0, [r1, #20]
   1a3bc:	bx	lr
   1a3c0:	movw	r0, #34180	; 0x8584
   1a3c4:	movt	r0, #3
   1a3c8:	bx	lr
   1a3cc:	andeq	r8, r3, r4, ror r1
   1a3d0:	cmp	r0, #13
   1a3d4:	beq	1a414 <crc32@@Base+0xccc>
   1a3d8:	mov	r3, #7
   1a3dc:	ldr	r1, [pc, #60]	; 1a420 <crc32@@Base+0xcd8>
   1a3e0:	b	1a3f4 <crc32@@Base+0xcac>
   1a3e4:	cmp	r0, r3
   1a3e8:	beq	1a40c <crc32@@Base+0xcc4>
   1a3ec:	ldr	r3, [r2, #12]
   1a3f0:	mov	r1, r2
   1a3f4:	cmp	r3, #0
   1a3f8:	add	r2, r1, #12
   1a3fc:	bge	1a3e4 <crc32@@Base+0xc9c>
   1a400:	movw	r0, #34132	; 0x8554
   1a404:	movt	r0, #3
   1a408:	bx	lr
   1a40c:	ldr	r0, [r1, #20]
   1a410:	bx	lr
   1a414:	movw	r0, #34196	; 0x8594
   1a418:	movt	r0, #3
   1a41c:	bx	lr
   1a420:			; <UNDEFINED> instruction: 0x000382b8
   1a424:	cmp	r0, #13
   1a428:	beq	1a468 <crc32@@Base+0xd20>
   1a42c:	mov	r3, #7
   1a430:	ldr	r1, [pc, #60]	; 1a474 <crc32@@Base+0xd2c>
   1a434:	b	1a448 <crc32@@Base+0xd00>
   1a438:	cmp	r0, r3
   1a43c:	beq	1a460 <crc32@@Base+0xd18>
   1a440:	ldr	r3, [r2, #12]
   1a444:	mov	r1, r2
   1a448:	cmp	r3, #0
   1a44c:	add	r2, r1, #12
   1a450:	bge	1a438 <crc32@@Base+0xcf0>
   1a454:	movw	r0, #30632	; 0x77a8
   1a458:	movt	r0, #3
   1a45c:	bx	lr
   1a460:	ldr	r0, [r1, #16]
   1a464:	bx	lr
   1a468:	movw	r0, #34488	; 0x86b8
   1a46c:	movt	r0, #3
   1a470:	bx	lr
   1a474:			; <UNDEFINED> instruction: 0x000382b8
   1a478:	cmp	r0, #0
   1a47c:	beq	1a4bc <crc32@@Base+0xd74>
   1a480:	mov	r3, #2
   1a484:	ldr	r1, [pc, #60]	; 1a4c8 <crc32@@Base+0xd80>
   1a488:	b	1a49c <crc32@@Base+0xd54>
   1a48c:	cmp	r0, r3
   1a490:	beq	1a4b4 <crc32@@Base+0xd6c>
   1a494:	ldr	r3, [r2, #12]
   1a498:	mov	r1, r2
   1a49c:	cmp	r3, #0
   1a4a0:	add	r2, r1, #12
   1a4a4:	bge	1a48c <crc32@@Base+0xd44>
   1a4a8:	movw	r0, #34148	; 0x8564
   1a4ac:	movt	r0, #3
   1a4b0:	bx	lr
   1a4b4:	ldr	r0, [r1, #20]
   1a4b8:	bx	lr
   1a4bc:	movw	r0, #34216	; 0x85a8
   1a4c0:	movt	r0, #3
   1a4c4:	bx	lr
   1a4c8:	andeq	r8, r3, ip, lsl #9
   1a4cc:	cmp	r0, #0
   1a4d0:	beq	1a510 <crc32@@Base+0xdc8>
   1a4d4:	mov	r3, #2
   1a4d8:	ldr	r1, [pc, #60]	; 1a51c <crc32@@Base+0xdd4>
   1a4dc:	b	1a4f0 <crc32@@Base+0xda8>
   1a4e0:	cmp	r0, r3
   1a4e4:	beq	1a508 <crc32@@Base+0xdc0>
   1a4e8:	ldr	r3, [r2, #12]
   1a4ec:	mov	r1, r2
   1a4f0:	cmp	r3, #0
   1a4f4:	add	r2, r1, #12
   1a4f8:	bge	1a4e0 <crc32@@Base+0xd98>
   1a4fc:	movw	r0, #30632	; 0x77a8
   1a500:	movt	r0, #3
   1a504:	bx	lr
   1a508:	ldr	r0, [r1, #16]
   1a50c:	bx	lr
   1a510:	movw	r0, #34500	; 0x86c4
   1a514:	movt	r0, #3
   1a518:	bx	lr
   1a51c:	andeq	r8, r3, ip, lsl #9
   1a520:	cmp	r0, #0
   1a524:	beq	1a568 <crc32@@Base+0xe20>
   1a528:	movw	r1, #32828	; 0x803c
   1a52c:	mov	r3, #25
   1a530:	movt	r1, #3
   1a534:	b	1a548 <crc32@@Base+0xe00>
   1a538:	cmp	r0, r3
   1a53c:	beq	1a560 <crc32@@Base+0xe18>
   1a540:	ldr	r3, [r2, #12]
   1a544:	mov	r1, r2
   1a548:	cmp	r3, #0
   1a54c:	add	r2, r1, #12
   1a550:	bge	1a538 <crc32@@Base+0xdf0>
   1a554:	movw	r0, #30632	; 0x77a8
   1a558:	movt	r0, #3
   1a55c:	bx	lr
   1a560:	ldr	r0, [r1, #16]
   1a564:	bx	lr
   1a568:	movw	r0, #34508	; 0x86cc
   1a56c:	movt	r0, #3
   1a570:	bx	lr
   1a574:	cmp	r0, #0
   1a578:	beq	1a5b8 <crc32@@Base+0xe70>
   1a57c:	mov	r3, #1
   1a580:	ldr	r1, [pc, #60]	; 1a5c4 <crc32@@Base+0xe7c>
   1a584:	b	1a598 <crc32@@Base+0xe50>
   1a588:	cmp	r0, r3
   1a58c:	beq	1a5b0 <crc32@@Base+0xe68>
   1a590:	ldr	r3, [r2, #12]
   1a594:	mov	r1, r2
   1a598:	cmp	r3, #0
   1a59c:	add	r2, r1, #12
   1a5a0:	bge	1a588 <crc32@@Base+0xe40>
   1a5a4:	movw	r0, #30632	; 0x77a8
   1a5a8:	movt	r0, #3
   1a5ac:	bx	lr
   1a5b0:	ldr	r0, [r1, #16]
   1a5b4:	bx	lr
   1a5b8:	movw	r0, #34508	; 0x86cc
   1a5bc:	movt	r0, #3
   1a5c0:	bx	lr
   1a5c4:	andeq	r8, r3, r4, ror r1
   1a5c8:	push	{r4, r5, r6, lr}
   1a5cc:	ldr	r5, [r0]
   1a5d0:	cmp	r5, #0
   1a5d4:	blt	1a608 <crc32@@Base+0xec0>
   1a5d8:	mov	r6, r2
   1a5dc:	mov	r4, r0
   1a5e0:	ldr	r0, [r4, #4]
   1a5e4:	mov	r1, r6
   1a5e8:	cmp	r0, #0
   1a5ec:	beq	1a5fc <crc32@@Base+0xeb4>
   1a5f0:	bl	120e0 <strcasecmp@plt>
   1a5f4:	cmp	r0, #0
   1a5f8:	beq	1a60c <crc32@@Base+0xec4>
   1a5fc:	ldr	r5, [r4, #12]!
   1a600:	cmp	r5, #0
   1a604:	bge	1a5e0 <crc32@@Base+0xe98>
   1a608:	mvn	r5, #0
   1a60c:	mov	r0, r5
   1a610:	pop	{r4, r5, r6, pc}
   1a614:	mov	r2, r0
   1a618:	movw	r1, #34176	; 0x8580
   1a61c:	movw	r0, #32828	; 0x803c
   1a620:	movt	r1, #3
   1a624:	movt	r0, #3
   1a628:	b	1a5c8 <crc32@@Base+0xe80>
   1a62c:	mov	r2, r0
   1a630:	movw	r1, #34516	; 0x86d4
   1a634:	ldr	r0, [pc, #4]	; 1a640 <crc32@@Base+0xef8>
   1a638:	movt	r1, #3
   1a63c:	b	1a5c8 <crc32@@Base+0xe80>
   1a640:	andeq	r8, r3, r4, ror r1
   1a644:	mov	r2, r0
   1a648:	movw	r1, #34768	; 0x87d0
   1a64c:	ldr	r0, [pc, #4]	; 1a658 <crc32@@Base+0xf10>
   1a650:	movt	r1, #3
   1a654:	b	1a5c8 <crc32@@Base+0xe80>
   1a658:			; <UNDEFINED> instruction: 0x000382b8
   1a65c:	mov	r2, r0
   1a660:	movw	r1, #34156	; 0x856c
   1a664:	ldr	r0, [pc, #4]	; 1a670 <crc32@@Base+0xf28>
   1a668:	movt	r1, #3
   1a66c:	b	1a5c8 <crc32@@Base+0xe80>
   1a670:	andeq	r8, r3, ip, lsl #9
   1a674:	push	{r4, r5, r6, r7, r8, lr}
   1a678:	movw	r4, #64940	; 0xfdac
   1a67c:	movw	r7, #65040	; 0xfe10
   1a680:	movt	r4, #4
   1a684:	movt	r7, #4
   1a688:	cmp	r4, r7
   1a68c:	beq	1a6d0 <crc32@@Base+0xf88>
   1a690:	uxtb	r6, r0
   1a694:	b	1a6a0 <crc32@@Base+0xf58>
   1a698:	cmp	r4, r7
   1a69c:	beq	1a6d0 <crc32@@Base+0xf88>
   1a6a0:	ldr	r3, [r4]
   1a6a4:	mov	r5, r4
   1a6a8:	mov	r0, r6
   1a6ac:	add	r4, r4, #4
   1a6b0:	ldr	r3, [r3, #32]
   1a6b4:	cmp	r3, #0
   1a6b8:	beq	1a698 <crc32@@Base+0xf50>
   1a6bc:	blx	r3
   1a6c0:	cmp	r0, #0
   1a6c4:	bne	1a698 <crc32@@Base+0xf50>
   1a6c8:	ldr	r0, [r5]
   1a6cc:	pop	{r4, r5, r6, r7, r8, pc}
   1a6d0:	mov	r0, #0
   1a6d4:	pop	{r4, r5, r6, r7, r8, pc}
   1a6d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a6dc:	movw	r4, #64940	; 0xfdac
   1a6e0:	movw	r7, #65040	; 0xfe10
   1a6e4:	movt	r4, #4
   1a6e8:	movt	r7, #4
   1a6ec:	sub	sp, sp, #12
   1a6f0:	cmp	r4, r7
   1a6f4:	beq	1a774 <crc32@@Base+0x102c>
   1a6f8:	mov	r8, r3
   1a6fc:	mov	sl, r1
   1a700:	mov	r9, r0
   1a704:	mvn	fp, #0
   1a708:	b	1a714 <crc32@@Base+0xfcc>
   1a70c:	cmp	r4, r7
   1a710:	beq	1a768 <crc32@@Base+0x1020>
   1a714:	mov	r6, r4
   1a718:	mov	r2, r8
   1a71c:	ldr	r3, [r6]
   1a720:	mov	r0, r9
   1a724:	add	r4, r4, #4
   1a728:	ldr	r5, [r3, #16]
   1a72c:	cmp	r5, #0
   1a730:	beq	1a70c <crc32@@Base+0xfc4>
   1a734:	ldr	r1, [sl, #44]	; 0x2c
   1a738:	blx	r5
   1a73c:	subs	fp, r0, #0
   1a740:	bne	1a70c <crc32@@Base+0xfc4>
   1a744:	ldr	r1, [r6]
   1a748:	ldr	r3, [r1, #20]
   1a74c:	cmp	r3, #0
   1a750:	beq	1a77c <crc32@@Base+0x1034>
   1a754:	ldrb	r2, [r8, #133]	; 0x85
   1a758:	cmp	r2, #0
   1a75c:	bne	1a768 <crc32@@Base+0x1020>
   1a760:	mov	r0, r9
   1a764:	blx	r3
   1a768:	mov	r0, fp
   1a76c:	add	sp, sp, #12
   1a770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a774:	mvn	fp, #0
   1a778:	b	1a768 <crc32@@Base+0x1020>
   1a77c:	ldr	ip, [r1]
   1a780:	movw	r0, #65044	; 0xfe14
   1a784:	movt	r0, #4
   1a788:	ldr	r3, [r8, #80]	; 0x50
   1a78c:	movw	r2, #36728	; 0x8f78
   1a790:	mov	r1, #1
   1a794:	movt	r2, #3
   1a798:	ldr	r0, [r0]
   1a79c:	str	ip, [sp]
   1a7a0:	bl	122b4 <__fprintf_chk@plt>
   1a7a4:	b	1a768 <crc32@@Base+0x1020>
   1a7a8:	push	{r4, r5, r6, r7, lr}
   1a7ac:	mov	r4, r2
   1a7b0:	sub	sp, sp, #12
   1a7b4:	mov	r2, r3
   1a7b8:	mov	r5, r3
   1a7bc:	ldr	r1, [r1, #44]	; 0x2c
   1a7c0:	ldr	r3, [r4, #16]
   1a7c4:	mov	r7, r0
   1a7c8:	blx	r3
   1a7cc:	subs	r6, r0, #0
   1a7d0:	bne	1a800 <crc32@@Base+0x10b8>
   1a7d4:	ldr	r3, [r4, #20]
   1a7d8:	cmp	r3, #0
   1a7dc:	beq	1a838 <crc32@@Base+0x10f0>
   1a7e0:	ldrb	r2, [r5, #133]	; 0x85
   1a7e4:	cmp	r2, #0
   1a7e8:	bne	1a7f4 <crc32@@Base+0x10ac>
   1a7ec:	mov	r0, r7
   1a7f0:	blx	r3
   1a7f4:	mov	r0, r6
   1a7f8:	add	sp, sp, #12
   1a7fc:	pop	{r4, r5, r6, r7, pc}
   1a800:	ldr	ip, [r4]
   1a804:	movw	r1, #65044	; 0xfe14
   1a808:	movt	r1, #4
   1a80c:	ldr	r3, [r5, #80]	; 0x50
   1a810:	movw	r2, #36764	; 0x8f9c
   1a814:	movt	r2, #3
   1a818:	ldr	r0, [r1]
   1a81c:	mov	r1, #1
   1a820:	str	r6, [sp, #4]
   1a824:	str	ip, [sp]
   1a828:	bl	122b4 <__fprintf_chk@plt>
   1a82c:	mov	r0, r6
   1a830:	add	sp, sp, #12
   1a834:	pop	{r4, r5, r6, r7, pc}
   1a838:	ldr	ip, [r4]
   1a83c:	movw	r1, #65044	; 0xfe14
   1a840:	movt	r1, #4
   1a844:	ldr	r3, [r5, #80]	; 0x50
   1a848:	movw	r2, #36728	; 0x8f78
   1a84c:	movt	r2, #3
   1a850:	ldr	r0, [r1]
   1a854:	mov	r1, #1
   1a858:	str	ip, [sp]
   1a85c:	bl	122b4 <__fprintf_chk@plt>
   1a860:	mov	r0, r6
   1a864:	add	sp, sp, #12
   1a868:	pop	{r4, r5, r6, r7, pc}
   1a86c:	push	{r4, r5, r6, r7, lr}
   1a870:	mov	r6, r1
   1a874:	sub	sp, sp, #12
   1a878:	mov	r4, r2
   1a87c:	movw	r1, #578	; 0x242
   1a880:	mov	r2, #384	; 0x180
   1a884:	mov	r7, r0
   1a888:	bl	12434 <open@plt>
   1a88c:	subs	r5, r0, #0
   1a890:	blt	1a900 <crc32@@Base+0x11b8>
   1a894:	mov	r1, r6
   1a898:	mov	r2, r4
   1a89c:	bl	12608 <write@plt>
   1a8a0:	cmp	r4, r0
   1a8a4:	bne	1a8bc <crc32@@Base+0x1174>
   1a8a8:	mov	r0, r5
   1a8ac:	bl	12314 <close@plt>
   1a8b0:	mov	r0, #0
   1a8b4:	add	sp, sp, #12
   1a8b8:	pop	{r4, r5, r6, r7, pc}
   1a8bc:	movw	r3, #65044	; 0xfe14
   1a8c0:	movt	r3, #4
   1a8c4:	ldr	r4, [r3]
   1a8c8:	bl	1268c <__errno_location@plt>
   1a8cc:	ldr	r0, [r0]
   1a8d0:	bl	12200 <strerror@plt>
   1a8d4:	mov	r3, r7
   1a8d8:	mov	r1, #1
   1a8dc:	movw	r2, #36840	; 0x8fe8
   1a8e0:	movt	r2, #3
   1a8e4:	str	r0, [sp]
   1a8e8:	mov	r0, r4
   1a8ec:	bl	122b4 <__fprintf_chk@plt>
   1a8f0:	mov	r0, r5
   1a8f4:	bl	12314 <close@plt>
   1a8f8:	mvn	r0, #0
   1a8fc:	b	1a8b4 <crc32@@Base+0x116c>
   1a900:	movw	r3, #65044	; 0xfe14
   1a904:	movt	r3, #4
   1a908:	ldr	r4, [r3]
   1a90c:	bl	1268c <__errno_location@plt>
   1a910:	ldr	r0, [r0]
   1a914:	bl	12200 <strerror@plt>
   1a918:	mov	r3, r7
   1a91c:	movw	r2, #36816	; 0x8fd0
   1a920:	mov	r1, #1
   1a924:	movt	r2, #3
   1a928:	str	r0, [sp]
   1a92c:	mov	r0, r4
   1a930:	bl	122b4 <__fprintf_chk@plt>
   1a934:	mvn	r0, #0
   1a938:	b	1a8b4 <crc32@@Base+0x116c>
   1a93c:	push	{r4, r5, r6, r7, r8, lr}
   1a940:	movw	r4, #61168	; 0xeef0
   1a944:	movt	r4, #4
   1a948:	sub	sp, sp, #104	; 0x68
   1a94c:	mov	r6, r1
   1a950:	mov	r7, r0
   1a954:	ldr	r3, [r4]
   1a958:	mov	r0, r1
   1a95c:	mov	r1, #0
   1a960:	str	r3, [sp, #100]	; 0x64
   1a964:	bl	12434 <open@plt>
   1a968:	subs	r5, r0, #0
   1a96c:	blt	1a9ac <crc32@@Base+0x1264>
   1a970:	add	r2, sp, #8
   1a974:	mov	r1, r5
   1a978:	mov	r0, #3
   1a97c:	bl	12554 <__fxstat@plt>
   1a980:	cmp	r0, #0
   1a984:	blt	1a9f0 <crc32@@Base+0x12a8>
   1a988:	mov	r0, r5
   1a98c:	bl	12314 <close@plt>
   1a990:	ldr	r0, [sp, #52]	; 0x34
   1a994:	ldr	r2, [sp, #100]	; 0x64
   1a998:	ldr	r3, [r4]
   1a99c:	cmp	r2, r3
   1a9a0:	bne	1aa3c <crc32@@Base+0x12f4>
   1a9a4:	add	sp, sp, #104	; 0x68
   1a9a8:	pop	{r4, r5, r6, r7, r8, pc}
   1a9ac:	movw	r2, #65044	; 0xfe14
   1a9b0:	movt	r2, #4
   1a9b4:	ldr	r7, [r7, #80]	; 0x50
   1a9b8:	ldr	r5, [r2]
   1a9bc:	bl	1268c <__errno_location@plt>
   1a9c0:	ldr	r0, [r0]
   1a9c4:	bl	12200 <strerror@plt>
   1a9c8:	mov	r3, r7
   1a9cc:	str	r6, [sp]
   1a9d0:	movw	r2, #25304	; 0x62d8
   1a9d4:	mov	r1, #1
   1a9d8:	movt	r2, #3
   1a9dc:	str	r0, [sp, #4]
   1a9e0:	mov	r0, r5
   1a9e4:	bl	122b4 <__fprintf_chk@plt>
   1a9e8:	mvn	r0, #0
   1a9ec:	b	1a994 <crc32@@Base+0x124c>
   1a9f0:	movw	r2, #65044	; 0xfe14
   1a9f4:	movt	r2, #4
   1a9f8:	ldr	r8, [r7, #80]	; 0x50
   1a9fc:	ldr	r7, [r2]
   1aa00:	bl	1268c <__errno_location@plt>
   1aa04:	ldr	r0, [r0]
   1aa08:	bl	12200 <strerror@plt>
   1aa0c:	mov	r3, r8
   1aa10:	mov	r1, #1
   1aa14:	str	r6, [sp]
   1aa18:	movw	r2, #25328	; 0x62f0
   1aa1c:	movt	r2, #3
   1aa20:	str	r0, [sp, #4]
   1aa24:	mov	r0, r7
   1aa28:	bl	122b4 <__fprintf_chk@plt>
   1aa2c:	mov	r0, r5
   1aa30:	bl	12314 <close@plt>
   1aa34:	mvn	r0, #0
   1aa38:	b	1a994 <crc32@@Base+0x124c>
   1aa3c:	bl	12494 <__stack_chk_fail@plt>
   1aa40:	push	{r4, r5, r6, lr}
   1aa44:	movw	r4, #61168	; 0xeef0
   1aa48:	movt	r4, #4
   1aa4c:	sub	sp, sp, #8
   1aa50:	mov	r6, r0
   1aa54:	movw	r0, #36868	; 0x9004
   1aa58:	ldr	r3, [r4]
   1aa5c:	movt	r0, #3
   1aa60:	mov	r5, r1
   1aa64:	str	r3, [sp, #4]
   1aa68:	bl	1271c <getenv@plt>
   1aa6c:	cmp	r0, #0
   1aa70:	moveq	r0, r5
   1aa74:	beq	1aaa0 <crc32@@Base+0x1358>
   1aa78:	mov	r2, #10
   1aa7c:	mov	r1, #0
   1aa80:	bl	1211c <strtol@plt>
   1aa84:	add	r3, sp, #8
   1aa88:	str	r0, [r3, #-8]!
   1aa8c:	mov	r0, r3
   1aa90:	bl	12320 <gmtime@plt>
   1aa94:	subs	r5, r0, #0
   1aa98:	beq	1aab8 <crc32@@Base+0x1370>
   1aa9c:	ldr	r0, [sp]
   1aaa0:	ldr	r2, [sp, #4]
   1aaa4:	ldr	r3, [r4]
   1aaa8:	cmp	r2, r3
   1aaac:	bne	1aae0 <crc32@@Base+0x1398>
   1aab0:	add	sp, sp, #8
   1aab4:	pop	{r4, r5, r6, pc}
   1aab8:	movw	r1, #65044	; 0xfe14
   1aabc:	movt	r1, #4
   1aac0:	mov	r3, r6
   1aac4:	movw	r2, #36888	; 0x9018
   1aac8:	ldr	r0, [r1]
   1aacc:	movt	r2, #3
   1aad0:	mov	r1, #1
   1aad4:	bl	122b4 <__fprintf_chk@plt>
   1aad8:	mov	r0, r5
   1aadc:	b	1aaa0 <crc32@@Base+0x1358>
   1aae0:	bl	12494 <__stack_chk_fail@plt>
   1aae4:	movw	ip, #65452	; 0xffac
   1aae8:	movt	ip, #4
   1aaec:	sub	r2, r2, #4
   1aaf0:	ldr	r1, [ip]
   1aaf4:	cmp	r1, #0
   1aaf8:	addeq	r1, r0, #48	; 0x30
   1aafc:	ldrh	r3, [r1, #1]
   1ab00:	rev16	r3, r3
   1ab04:	uxth	r3, r3
   1ab08:	cmp	r3, #4
   1ab0c:	addhi	r3, r1, r3
   1ab10:	movls	r3, r1
   1ab14:	cmp	r2, #4
   1ab18:	ldrls	pc, [pc, r2, lsl #2]
   1ab1c:	b	1ab5c <crc32@@Base+0x1414>
   1ab20:	andeq	sl, r1, r4, lsr fp
   1ab24:	andeq	sl, r1, ip, ror fp
   1ab28:			; <UNDEFINED> instruction: 0x0001abb0
   1ab2c:	andeq	sl, r1, r4, ror #23
   1ab30:	andeq	sl, r1, r4, ror #22
   1ab34:	ldr	r2, [r1]
   1ab38:	mov	r0, #204	; 0xcc
   1ab3c:	movt	r0, #1024	; 0x400
   1ab40:	bic	r2, r2, #16711680	; 0xff0000
   1ab44:	bic	r2, r2, #65280	; 0xff00
   1ab48:	cmp	r2, r0
   1ab4c:	movne	r1, r3
   1ab50:	movne	r2, #204	; 0xcc
   1ab54:	movtne	r2, #1028	; 0x404
   1ab58:	strne	r2, [r3]
   1ab5c:	str	r1, [ip]
   1ab60:	bx	lr
   1ab64:	mov	r1, r3
   1ab68:	mov	r2, #207	; 0xcf
   1ab6c:	str	r1, [ip]
   1ab70:	movt	r2, #1028	; 0x404
   1ab74:	str	r2, [r3]
   1ab78:	bx	lr
   1ab7c:	ldr	r2, [r1]
   1ab80:	mov	r0, #204	; 0xcc
   1ab84:	movt	r0, #3072	; 0xc00
   1ab88:	bic	r2, r2, #16711680	; 0xff0000
   1ab8c:	bic	r2, r2, #65280	; 0xff00
   1ab90:	cmp	r2, r0
   1ab94:	beq	1ab5c <crc32@@Base+0x1414>
   1ab98:	mov	r2, #204	; 0xcc
   1ab9c:	mov	r1, r3
   1aba0:	movt	r2, #3076	; 0xc04
   1aba4:	str	r1, [ip]
   1aba8:	str	r2, [r3]
   1abac:	bx	lr
   1abb0:	ldr	r2, [r1]
   1abb4:	mov	r0, #204	; 0xcc
   1abb8:	movt	r0, #7168	; 0x1c00
   1abbc:	bic	r2, r2, #16711680	; 0xff0000
   1abc0:	bic	r2, r2, #65280	; 0xff00
   1abc4:	cmp	r2, r0
   1abc8:	beq	1ab5c <crc32@@Base+0x1414>
   1abcc:	mov	r2, #204	; 0xcc
   1abd0:	mov	r1, r3
   1abd4:	movt	r2, #7172	; 0x1c04
   1abd8:	str	r1, [ip]
   1abdc:	str	r2, [r3]
   1abe0:	bx	lr
   1abe4:	mov	r2, #207	; 0xcf
   1abe8:	mov	r1, r3
   1abec:	movt	r2, #5124	; 0x1404
   1abf0:	str	r1, [ip]
   1abf4:	str	r2, [r3]
   1abf8:	bx	lr
   1abfc:	movw	r2, #65452	; 0xffac
   1ac00:	movt	r2, #4
   1ac04:	cmp	r3, #2
   1ac08:	ldr	r1, [r2]
   1ac0c:	ldrh	r2, [r1, #1]
   1ac10:	rev16	r2, r2
   1ac14:	uxth	r2, r2
   1ac18:	sub	r2, r2, #4
   1ac1c:	asr	r2, r2, #3
   1ac20:	beq	1ac54 <crc32@@Base+0x150c>
   1ac24:	cmp	r3, #3
   1ac28:	bxne	lr
   1ac2c:	lsl	r0, r2, #3
   1ac30:	ldr	r3, [sp]
   1ac34:	add	r0, r0, #12
   1ac38:	add	r2, r1, r2, lsl #3
   1ac3c:	ubfx	ip, r0, #8, #8
   1ac40:	rev	r3, r3
   1ac44:	orr	r0, ip, r0, lsl #8
   1ac48:	str	r3, [r2, #8]
   1ac4c:	strh	r0, [r1, #1]
   1ac50:	bx	lr
   1ac54:	add	r2, r1, r2, lsl #3
   1ac58:	ldr	r3, [sp]
   1ac5c:	rev	r3, r3
   1ac60:	str	r3, [r2, #4]
   1ac64:	bx	lr
   1ac68:	mov	r3, #12
   1ac6c:	mul	r1, r3, r1
   1ac70:	movw	r3, #6633	; 0x19e9
   1ac74:	movt	r3, #45426	; 0xb172
   1ac78:	str	r3, [r0, #28]
   1ac7c:	str	r1, [r0, #32]
   1ac80:	bx	lr
   1ac84:	push	{r4, lr}
   1ac88:	mov	ip, #12
   1ac8c:	movw	lr, #65452	; 0xffac
   1ac90:	movt	lr, #4
   1ac94:	mla	ip, r1, ip, ip
   1ac98:	ldr	r1, [lr, #4]
   1ac9c:	mov	r4, #177	; 0xb1
   1aca0:	str	r2, [r0]
   1aca4:	sub	r1, r2, r1
   1aca8:	str	r4, [r0, #4]
   1acac:	add	r3, r1, r3
   1acb0:	add	ip, ip, #24
   1acb4:	add	r2, r3, #20
   1acb8:	add	ip, r0, ip
   1acbc:	add	r3, r3, #28
   1acc0:	str	r2, [r0, #12]
   1acc4:	str	r1, [r0, #24]
   1acc8:	mov	r2, #0
   1accc:	str	ip, [lr, #8]
   1acd0:	str	r3, [r0, #20]
   1acd4:	str	r2, [r0, #8]
   1acd8:	str	r2, [r0, #16]
   1acdc:	pop	{r4, pc}
   1ace0:	subs	r0, r0, #10
   1ace4:	movne	r0, #1
   1ace8:	bx	lr
   1acec:	ldr	r3, [r0, #4]
   1acf0:	cmp	r3, #177	; 0xb1
   1acf4:	beq	1ad0c <crc32@@Base+0x15c4>
   1acf8:	ldrb	r3, [r0]
   1acfc:	cmp	r3, #209	; 0xd1
   1ad00:	beq	1ad28 <crc32@@Base+0x15e0>
   1ad04:	mvn	r0, #10
   1ad08:	bx	lr
   1ad0c:	ldr	r2, [r0, #28]
   1ad10:	movw	r3, #6633	; 0x19e9
   1ad14:	movt	r3, #45426	; 0xb172
   1ad18:	cmp	r2, r3
   1ad1c:	bne	1acf8 <crc32@@Base+0x15b0>
   1ad20:	mov	r0, #0
   1ad24:	bx	lr
   1ad28:	ldrb	r3, [r0, #44]	; 0x2c
   1ad2c:	cmp	r3, #210	; 0xd2
   1ad30:	beq	1ad20 <crc32@@Base+0x15d8>
   1ad34:	ldr	r3, [r0, #40]	; 0x28
   1ad38:	cmp	r3, #0
   1ad3c:	mvneq	r0, #10
   1ad40:	movne	r0, #0
   1ad44:	bx	lr
   1ad48:	push	{r4, r5, r6, r7, r8, lr}
   1ad4c:	mov	lr, #209	; 0xd1
   1ad50:	ldr	r4, [r0, #40]	; 0x28
   1ad54:	movt	lr, #16416	; 0x4020
   1ad58:	str	lr, [r0]
   1ad5c:	cmp	r4, #0
   1ad60:	bne	1adb8 <crc32@@Base+0x1670>
   1ad64:	movw	ip, #65452	; 0xffac
   1ad68:	movt	ip, #4
   1ad6c:	str	r2, [r0, #4]
   1ad70:	cmp	r1, #0
   1ad74:	ldr	lr, [ip, #4]
   1ad78:	str	r4, [r0, #8]
   1ad7c:	sub	r2, r2, lr
   1ad80:	str	r2, [r0, #32]
   1ad84:	add	r3, r2, r3
   1ad88:	mov	r2, #0
   1ad8c:	str	r3, [r0, #20]
   1ad90:	addne	r1, r3, #44	; 0x2c
   1ad94:	str	r2, [r0, #24]
   1ad98:	add	r3, r3, #32
   1ad9c:	str	r1, [r0, #12]
   1ada0:	str	r3, [r0, #16]
   1ada4:	add	r3, r0, #36	; 0x24
   1ada8:	add	r0, r0, #24
   1adac:	str	r3, [ip, #8]
   1adb0:	str	r0, [ip, #12]
   1adb4:	pop	{r4, r5, r6, r7, r8, pc}
   1adb8:	movw	r1, #62572	; 0xf46c
   1adbc:	movt	r1, #4
   1adc0:	ldr	r1, [r1]
   1adc4:	cmp	r1, #0
   1adc8:	bne	1ae5c <crc32@@Base+0x1714>
   1adcc:	movw	r5, #65452	; 0xffac
   1add0:	movt	r5, #4
   1add4:	sub	r4, r2, #65536	; 0x10000
   1add8:	str	r1, [r0, #8]
   1addc:	ldr	r6, [r5, #20]
   1ade0:	sub	r4, r4, #44	; 0x2c
   1ade4:	ldr	r7, [r5, #16]
   1ade8:	add	ip, r0, r6
   1adec:	str	r1, [r0, #28]
   1adf0:	add	r8, ip, #36	; 0x24
   1adf4:	str	r8, [r5, #8]
   1adf8:	add	r5, r7, r3
   1adfc:	str	r7, [r0, #32]
   1ae00:	add	r7, r5, #44	; 0x2c
   1ae04:	str	r7, [r0, #4]
   1ae08:	add	r7, r6, r4
   1ae0c:	str	r5, [r0, #20]
   1ae10:	str	r1, [r0, #12]
   1ae14:	add	r5, r5, #32
   1ae18:	str	r1, [r0, #24]
   1ae1c:	sub	r3, r4, r3
   1ae20:	str	r5, [r0, #16]
   1ae24:	add	r4, r7, #32
   1ae28:	mov	r5, #65536	; 0x10000
   1ae2c:	str	r5, [r0, #36]	; 0x24
   1ae30:	str	lr, [r0, r6]
   1ae34:	str	r2, [ip, #4]
   1ae38:	str	r1, [ip, #8]
   1ae3c:	str	r1, [ip, #28]
   1ae40:	str	r1, [ip, #12]
   1ae44:	str	r1, [ip, #40]	; 0x28
   1ae48:	str	r1, [ip, #24]
   1ae4c:	str	r7, [ip, #20]
   1ae50:	str	r4, [ip, #16]
   1ae54:	str	r3, [ip, #32]
   1ae58:	pop	{r4, r5, r6, r7, r8, pc}
   1ae5c:	movw	r3, #65044	; 0xfe14
   1ae60:	movt	r3, #4
   1ae64:	movw	r0, #36924	; 0x903c
   1ae68:	mov	r2, #60	; 0x3c
   1ae6c:	ldr	r3, [r3]
   1ae70:	movt	r0, #3
   1ae74:	mov	r1, #1
   1ae78:	bl	12578 <fwrite@plt>
   1ae7c:	mov	r0, #1
   1ae80:	bl	121f4 <exit@plt>
   1ae84:	ldr	r2, [r0, #4]
   1ae88:	push	{r4, r5, r6, r7, lr}
   1ae8c:	cmp	r2, #177	; 0xb1
   1ae90:	sub	sp, sp, #12
   1ae94:	mov	r4, r0
   1ae98:	beq	1aeb0 <crc32@@Base+0x1768>
   1ae9c:	ldrb	r3, [r4]
   1aea0:	cmp	r3, #209	; 0xd1
   1aea4:	beq	1af5c <crc32@@Base+0x1814>
   1aea8:	mvn	r0, #0
   1aeac:	bl	12780 <__printf_chk@plt+0x10>
   1aeb0:	ldr	r1, [r0, #28]
   1aeb4:	movw	r3, #6633	; 0x19e9
   1aeb8:	movt	r3, #45426	; 0xb172
   1aebc:	cmp	r1, r3
   1aec0:	bne	1ae9c <crc32@@Base+0x1754>
   1aec4:	ldr	r2, [r0, #32]
   1aec8:	movw	r3, #43691	; 0xaaab
   1aecc:	movt	r3, #43690	; 0xaaaa
   1aed0:	cmp	r2, #720	; 0x2d0
   1aed4:	umull	r2, r3, r2, r3
   1aed8:	lsr	r5, r3, #3
   1aedc:	bhi	1b23c <crc32@@Base+0x1af4>
   1aee0:	movw	r0, #37080	; 0x90d8
   1aee4:	movt	r0, #3
   1aee8:	bl	1226c <puts@plt>
   1aeec:	mov	r2, #1
   1aef0:	mov	r0, r2
   1aef4:	movw	r1, #37120	; 0x9100
   1aef8:	movt	r1, #3
   1aefc:	bl	12770 <__printf_chk@plt>
   1af00:	mov	r2, #1
   1af04:	mov	r1, #0
   1af08:	ldr	r0, [pc, #832]	; 1b250 <crc32@@Base+0x1b08>
   1af0c:	bl	1a2f8 <crc32@@Base+0xbb0>
   1af10:	bl	1226c <puts@plt>
   1af14:	movw	r1, #29776	; 0x7450
   1af18:	mov	r0, #1
   1af1c:	movt	r1, #3
   1af20:	bl	12770 <__printf_chk@plt>
   1af24:	mov	r3, #12
   1af28:	mla	r5, r3, r5, r4
   1af2c:	ldr	r0, [r5, #36]	; 0x24
   1af30:	bl	19d34 <crc32@@Base+0x5ec>
   1af34:	ldr	r2, [r4, #24]
   1af38:	movw	r1, #37140	; 0x9114
   1af3c:	mov	r0, #1
   1af40:	movt	r1, #3
   1af44:	bl	12770 <__printf_chk@plt>
   1af48:	movw	r1, #37160	; 0x9128
   1af4c:	ldr	r2, [r4]
   1af50:	mov	r0, #1
   1af54:	movt	r1, #3
   1af58:	b	1b080 <crc32@@Base+0x1938>
   1af5c:	ldrb	r3, [r4, #44]	; 0x2c
   1af60:	ldr	r5, [r4, #40]	; 0x28
   1af64:	cmp	r3, #210	; 0xd2
   1af68:	beq	1b0c4 <crc32@@Base+0x197c>
   1af6c:	cmp	r5, #0
   1af70:	beq	1aea8 <crc32@@Base+0x1760>
   1af74:	cmp	r2, #177	; 0xb1
   1af78:	bne	1af90 <crc32@@Base+0x1848>
   1af7c:	ldr	r2, [r4, #28]
   1af80:	movw	r3, #6633	; 0x19e9
   1af84:	movt	r3, #45426	; 0xb172
   1af88:	cmp	r2, r3
   1af8c:	beq	1b08c <crc32@@Base+0x1944>
   1af90:	movw	r0, #37080	; 0x90d8
   1af94:	movt	r0, #3
   1af98:	bl	1226c <puts@plt>
   1af9c:	mov	r2, #2
   1afa0:	movw	r1, #37120	; 0x9100
   1afa4:	mov	r0, #1
   1afa8:	movt	r1, #3
   1afac:	bl	12770 <__printf_chk@plt>
   1afb0:	mov	r2, #2
   1afb4:	mov	r1, #0
   1afb8:	ldr	r0, [pc, #656]	; 1b250 <crc32@@Base+0x1b08>
   1afbc:	bl	1a2f8 <crc32@@Base+0xbb0>
   1afc0:	bl	1226c <puts@plt>
   1afc4:	movw	r2, #37280	; 0x91a0
   1afc8:	movw	r1, #37260	; 0x918c
   1afcc:	movt	r2, #3
   1afd0:	movt	r1, #3
   1afd4:	mov	r0, #1
   1afd8:	movw	r5, #65452	; 0xffac
   1afdc:	bl	12770 <__printf_chk@plt>
   1afe0:	movw	r1, #37288	; 0x91a8
   1afe4:	mov	r0, #1
   1afe8:	movt	r1, #3
   1afec:	bl	12770 <__printf_chk@plt>
   1aff0:	movt	r5, #4
   1aff4:	ldr	r0, [r4, #36]	; 0x24
   1aff8:	bl	19d34 <crc32@@Base+0x5ec>
   1affc:	movw	r1, #37312	; 0x91c0
   1b000:	mov	r0, #1
   1b004:	movt	r1, #3
   1b008:	bl	12770 <__printf_chk@plt>
   1b00c:	ldr	r0, [r5, #20]
   1b010:	bl	19d34 <crc32@@Base+0x5ec>
   1b014:	ldr	r2, [r4, #32]
   1b018:	movw	r1, #37336	; 0x91d8
   1b01c:	mov	r0, #1
   1b020:	movt	r1, #3
   1b024:	bl	12770 <__printf_chk@plt>
   1b028:	ldr	r2, [r4, #4]
   1b02c:	movw	r1, #37364	; 0x91f4
   1b030:	mov	r0, #1
   1b034:	movt	r1, #3
   1b038:	bl	12770 <__printf_chk@plt>
   1b03c:	ldr	r3, [r5, #20]
   1b040:	movw	r1, #37392	; 0x9210
   1b044:	mov	r0, #1
   1b048:	add	r4, r4, r3
   1b04c:	movt	r1, #3
   1b050:	bl	12770 <__printf_chk@plt>
   1b054:	ldr	r0, [r4, #36]	; 0x24
   1b058:	bl	19d34 <crc32@@Base+0x5ec>
   1b05c:	ldr	r2, [r4, #32]
   1b060:	movw	r1, #37416	; 0x9228
   1b064:	mov	r0, #1
   1b068:	movt	r1, #3
   1b06c:	bl	12770 <__printf_chk@plt>
   1b070:	ldr	r2, [r4, #4]
   1b074:	movw	r1, #37444	; 0x9244
   1b078:	movt	r1, #3
   1b07c:	mov	r0, #1
   1b080:	add	sp, sp, #12
   1b084:	pop	{r4, r5, r6, r7, lr}
   1b088:	b	12770 <__printf_chk@plt>
   1b08c:	movw	r0, #37080	; 0x90d8
   1b090:	movt	r0, #3
   1b094:	bl	1226c <puts@plt>
   1b098:	mov	r2, #1
   1b09c:	mov	r0, r2
   1b0a0:	movw	r1, #37120	; 0x9100
   1b0a4:	movt	r1, #3
   1b0a8:	bl	12770 <__printf_chk@plt>
   1b0ac:	mov	r2, #1
   1b0b0:	mov	r1, #0
   1b0b4:	ldr	r0, [pc, #404]	; 1b250 <crc32@@Base+0x1b08>
   1b0b8:	bl	1a2f8 <crc32@@Base+0xbb0>
   1b0bc:	bl	1226c <puts@plt>
   1b0c0:	b	1afc4 <crc32@@Base+0x187c>
   1b0c4:	cmp	r5, #0
   1b0c8:	bne	1b230 <crc32@@Base+0x1ae8>
   1b0cc:	ldrh	r3, [r4, #45]	; 0x2d
   1b0d0:	rev16	r3, r3
   1b0d4:	uxth	r3, r3
   1b0d8:	cmp	r3, #1760	; 0x6e0
   1b0dc:	bhi	1b200 <crc32@@Base+0x1ab8>
   1b0e0:	cmp	r2, #177	; 0xb1
   1b0e4:	bne	1b104 <crc32@@Base+0x19bc>
   1b0e8:	ldr	r2, [r4, #28]
   1b0ec:	movw	r3, #6633	; 0x19e9
   1b0f0:	movt	r3, #45426	; 0xb172
   1b0f4:	cmp	r2, r3
   1b0f8:	moveq	r6, #1
   1b0fc:	moveq	r7, r6
   1b100:	beq	1b10c <crc32@@Base+0x19c4>
   1b104:	mov	r6, #2
   1b108:	mov	r7, r6
   1b10c:	movw	r0, #37080	; 0x90d8
   1b110:	movt	r0, #3
   1b114:	bl	1226c <puts@plt>
   1b118:	mov	r2, r7
   1b11c:	movw	r1, #37120	; 0x9100
   1b120:	mov	r0, #1
   1b124:	movt	r1, #3
   1b128:	bl	12770 <__printf_chk@plt>
   1b12c:	mov	r2, r6
   1b130:	mov	r1, #0
   1b134:	ldr	r0, [pc, #276]	; 1b250 <crc32@@Base+0x1b08>
   1b138:	bl	1a2f8 <crc32@@Base+0xbb0>
   1b13c:	bl	1226c <puts@plt>
   1b140:	cmp	r5, #0
   1b144:	bne	1afc4 <crc32@@Base+0x187c>
   1b148:	movw	r2, #37256	; 0x9188
   1b14c:	movw	r1, #37260	; 0x918c
   1b150:	movt	r2, #3
   1b154:	movt	r1, #3
   1b158:	mov	r0, #1
   1b15c:	bl	12770 <__printf_chk@plt>
   1b160:	movw	r1, #29776	; 0x7450
   1b164:	mov	r0, #1
   1b168:	movt	r1, #3
   1b16c:	bl	12770 <__printf_chk@plt>
   1b170:	ldr	r0, [r4, #36]	; 0x24
   1b174:	bl	19d34 <crc32@@Base+0x5ec>
   1b178:	ldr	r2, [r4, #16]
   1b17c:	movw	r1, #37140	; 0x9114
   1b180:	mov	r0, #1
   1b184:	movt	r1, #3
   1b188:	bl	12770 <__printf_chk@plt>
   1b18c:	movw	r1, #37160	; 0x9128
   1b190:	ldr	r2, [r4, #4]
   1b194:	movt	r1, #3
   1b198:	mov	r0, #1
   1b19c:	bl	12770 <__printf_chk@plt>
   1b1a0:	ldr	r0, [r4, #24]
   1b1a4:	cmp	r0, #0
   1b1a8:	bne	1b1b4 <crc32@@Base+0x1a6c>
   1b1ac:	add	sp, sp, #12
   1b1b0:	pop	{r4, r5, r6, r7, pc}
   1b1b4:	ldr	r2, [r4, #20]
   1b1b8:	movw	r1, #37180	; 0x913c
   1b1bc:	ldrh	r3, [r4, #45]	; 0x2d
   1b1c0:	movt	r1, #3
   1b1c4:	sub	r0, r0, r2
   1b1c8:	str	r0, [sp]
   1b1cc:	rev16	r4, r3
   1b1d0:	mov	r0, #1
   1b1d4:	mov	r3, #0
   1b1d8:	bl	12770 <__printf_chk@plt>
   1b1dc:	uxth	r4, r4
   1b1e0:	movw	r1, #37216	; 0x9160
   1b1e4:	mov	r2, #44	; 0x2c
   1b1e8:	mov	r3, r4
   1b1ec:	movt	r1, #3
   1b1f0:	mov	r0, #1
   1b1f4:	add	sp, sp, #12
   1b1f8:	pop	{r4, r5, r6, r7, lr}
   1b1fc:	b	12770 <__printf_chk@plt>
   1b200:	movw	r2, #65044	; 0xfe14
   1b204:	lsr	r3, r3, #3
   1b208:	movt	r2, #4
   1b20c:	mov	r1, #220	; 0xdc
   1b210:	ldr	r0, [r2]
   1b214:	movw	r2, #37028	; 0x90a4
   1b218:	str	r1, [sp]
   1b21c:	movt	r2, #3
   1b220:	mov	r1, #1
   1b224:	bl	122b4 <__fprintf_chk@plt>
   1b228:	mov	r0, #1
   1b22c:	bl	121f4 <exit@plt>
   1b230:	cmp	r2, #177	; 0xb1
   1b234:	beq	1b0e8 <crc32@@Base+0x19a0>
   1b238:	b	1af90 <crc32@@Base+0x1848>
   1b23c:	movw	r2, #65044	; 0xfe14
   1b240:	mov	r3, r5
   1b244:	movt	r2, #4
   1b248:	mov	r1, #60	; 0x3c
   1b24c:	b	1b210 <crc32@@Base+0x1ac8>
   1b250:	andeq	pc, r4, r0, ror r4	; <UNPREDICTABLE>
   1b254:	ldr	r3, [r0, #40]	; 0x28
   1b258:	cmp	r3, #0
   1b25c:	bxne	lr
   1b260:	movw	r3, #65452	; 0xffac
   1b264:	movt	r3, #4
   1b268:	mvn	r1, #45	; 0x2d
   1b26c:	ldr	r3, [r3]
   1b270:	cmp	r3, #0
   1b274:	addeq	r3, r0, #48	; 0x30
   1b278:	ldrh	r2, [r3, #1]
   1b27c:	rev16	r2, r2
   1b280:	uxth	r2, r2
   1b284:	cmp	r2, #4
   1b288:	addhi	r3, r3, r2
   1b28c:	mov	r2, r0
   1b290:	strb	r1, [r2, #44]!	; 0x2c
   1b294:	sub	r3, r3, r2
   1b298:	rev16	r3, r3
   1b29c:	mov	r2, #64	; 0x40
   1b2a0:	strh	r3, [r0, #45]	; 0x2d
   1b2a4:	strb	r2, [r0, #47]	; 0x2f
   1b2a8:	bx	lr
   1b2ac:	cmp	r0, #0
   1b2b0:	beq	1b334 <crc32@@Base+0x1bec>
   1b2b4:	ldr	r3, [r0, #64]	; 0x40
   1b2b8:	ldrb	r3, [r3]
   1b2bc:	cmp	r3, #0
   1b2c0:	beq	1b308 <crc32@@Base+0x1bc0>
   1b2c4:	ldr	r3, [r0]
   1b2c8:	ldr	r2, [r0, #8]
   1b2cc:	cmp	r3, #0
   1b2d0:	beq	1b2f0 <crc32@@Base+0x1ba8>
   1b2d4:	cmp	r2, #0
   1b2d8:	bne	1b2e8 <crc32@@Base+0x1ba0>
   1b2dc:	ldr	r3, [r0, #16]
   1b2e0:	cmp	r3, #0
   1b2e4:	beq	1b2f8 <crc32@@Base+0x1bb0>
   1b2e8:	mov	r0, #1
   1b2ec:	bx	lr
   1b2f0:	cmp	r2, #0
   1b2f4:	bne	1b2dc <crc32@@Base+0x1b94>
   1b2f8:	ldr	r0, [r0, #28]
   1b2fc:	adds	r0, r0, #0
   1b300:	movne	r0, #1
   1b304:	bx	lr
   1b308:	movw	r1, #65044	; 0xfe14
   1b30c:	movt	r1, #4
   1b310:	ldr	r3, [r0, #80]	; 0x50
   1b314:	movw	r2, #37472	; 0x9260
   1b318:	push	{r4, lr}
   1b31c:	movt	r2, #3
   1b320:	ldr	r0, [r1]
   1b324:	mov	r1, #1
   1b328:	bl	122b4 <__fprintf_chk@plt>
   1b32c:	mvn	r0, #0
   1b330:	pop	{r4, pc}
   1b334:	mvn	r0, #0
   1b338:	bx	lr
   1b33c:	push	{r4, lr}
   1b340:	cmp	r3, #2
   1b344:	sub	sp, sp, #8
   1b348:	ldr	ip, [sp, #16]
   1b34c:	beq	1b3a8 <crc32@@Base+0x1c60>
   1b350:	cmp	r3, #3
   1b354:	beq	1b390 <crc32@@Base+0x1c48>
   1b358:	cmp	r3, #1
   1b35c:	beq	1b368 <crc32@@Base+0x1c20>
   1b360:	add	sp, sp, #8
   1b364:	pop	{r4, pc}
   1b368:	sub	lr, ip, #1
   1b36c:	cmp	ip, #4
   1b370:	cmpne	lr, #1
   1b374:	bhi	1b3c0 <crc32@@Base+0x1c78>
   1b378:	ldr	r2, [sp, #20]
   1b37c:	mov	r3, #12
   1b380:	mla	r0, r3, r2, r0
   1b384:	str	ip, [r0, #36]	; 0x24
   1b388:	add	sp, sp, #8
   1b38c:	pop	{r4, pc}
   1b390:	ldr	r2, [sp, #20]
   1b394:	mov	r3, #12
   1b398:	mla	r0, r3, r2, r0
   1b39c:	str	ip, [r0, #44]	; 0x2c
   1b3a0:	add	sp, sp, #8
   1b3a4:	pop	{r4, pc}
   1b3a8:	ldr	r2, [sp, #20]
   1b3ac:	mov	r3, #12
   1b3b0:	mla	r0, r3, r2, r0
   1b3b4:	str	ip, [r0, #40]	; 0x28
   1b3b8:	add	sp, sp, #8
   1b3bc:	pop	{r4, pc}
   1b3c0:	movw	r0, #65044	; 0xfe14
   1b3c4:	movt	r0, #4
   1b3c8:	mov	r4, r3
   1b3cc:	str	r2, [sp]
   1b3d0:	str	ip, [sp, #4]
   1b3d4:	mov	r3, r1
   1b3d8:	movw	r2, #37556	; 0x92b4
   1b3dc:	ldr	r0, [r0]
   1b3e0:	movt	r2, #3
   1b3e4:	mov	r1, r4
   1b3e8:	bl	122b4 <__fprintf_chk@plt>
   1b3ec:	mov	r0, r4
   1b3f0:	bl	121f4 <exit@plt>
   1b3f4:	movw	r3, #65452	; 0xffac
   1b3f8:	movt	r3, #4
   1b3fc:	ldr	r0, [r3, #24]
   1b400:	cmp	r0, #1
   1b404:	beq	1b454 <crc32@@Base+0x1d0c>
   1b408:	cmp	r0, #2
   1b40c:	bne	1b48c <crc32@@Base+0x1d44>
   1b410:	movw	r1, #44028	; 0xabfc
   1b414:	movw	r2, #43748	; 0xaae4
   1b418:	movt	r1, #1
   1b41c:	movt	r2, #1
   1b420:	str	r1, [r3, #28]
   1b424:	movw	r1, #45652	; 0xb254
   1b428:	str	r2, [r3, #32]
   1b42c:	movt	r1, #1
   1b430:	movw	r2, #44360	; 0xad48
   1b434:	str	r1, [r3, #36]	; 0x24
   1b438:	movt	r2, #1
   1b43c:	mov	r1, #0
   1b440:	str	r2, [r3, #40]	; 0x28
   1b444:	mov	r2, #220	; 0xdc
   1b448:	str	r1, [r3]
   1b44c:	str	r2, [r3, #44]	; 0x2c
   1b450:	bx	lr
   1b454:	movw	r2, #45884	; 0xb33c
   1b458:	movw	r1, #44136	; 0xac68
   1b45c:	movt	r2, #1
   1b460:	movt	r1, #1
   1b464:	str	r2, [r3, #28]
   1b468:	movw	r2, #44164	; 0xac84
   1b46c:	str	r1, [r3, #36]	; 0x24
   1b470:	movt	r2, #1
   1b474:	mov	r1, #0
   1b478:	str	r2, [r3, #40]	; 0x28
   1b47c:	str	r1, [r3, #32]
   1b480:	mov	r2, #60	; 0x3c
   1b484:	str	r2, [r3, #44]	; 0x2c
   1b488:	bx	lr
   1b48c:	push	{r4, lr}
   1b490:	bl	12780 <__printf_chk@plt+0x10>
   1b494:	push	{r4, r5, r6, r7, r8, lr}
   1b498:	movw	r4, #61168	; 0xeef0
   1b49c:	movt	r4, #4
   1b4a0:	sub	sp, sp, #16
   1b4a4:	mov	r5, r0
   1b4a8:	mov	r8, r1
   1b4ac:	ldr	r3, [r4]
   1b4b0:	mov	r7, r2
   1b4b4:	str	r3, [sp, #12]
   1b4b8:	bl	1268c <__errno_location@plt>
   1b4bc:	mov	r3, #0
   1b4c0:	mov	r2, #16
   1b4c4:	add	r1, sp, #8
   1b4c8:	mov	r6, r0
   1b4cc:	mov	r0, r5
   1b4d0:	str	r3, [r6]
   1b4d4:	bl	122cc <strtoul@plt>
   1b4d8:	ldr	r3, [r6]
   1b4dc:	cmp	r3, #0
   1b4e0:	bne	1b508 <crc32@@Base+0x1dc0>
   1b4e4:	ldr	r3, [sp, #8]
   1b4e8:	cmp	r3, r5
   1b4ec:	beq	1b508 <crc32@@Base+0x1dc0>
   1b4f0:	ldr	r2, [sp, #12]
   1b4f4:	ldr	r3, [r4]
   1b4f8:	cmp	r2, r3
   1b4fc:	bne	1b538 <crc32@@Base+0x1df0>
   1b500:	add	sp, sp, #16
   1b504:	pop	{r4, r5, r6, r7, r8, pc}
   1b508:	movw	r1, #65044	; 0xfe14
   1b50c:	movt	r1, #4
   1b510:	str	r5, [sp, #4]
   1b514:	mov	r3, r8
   1b518:	str	r7, [sp]
   1b51c:	movw	r2, #25452	; 0x636c
   1b520:	ldr	r0, [r1]
   1b524:	movt	r2, #3
   1b528:	mov	r1, #1
   1b52c:	bl	122b4 <__fprintf_chk@plt>
   1b530:	mov	r0, #1
   1b534:	bl	121f4 <exit@plt>
   1b538:	bl	12494 <__stack_chk_fail@plt>
   1b53c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b540:	movw	r3, #61168	; 0xeef0
   1b544:	sub	sp, sp, #156	; 0x9c
   1b548:	movt	r3, #4
   1b54c:	mov	fp, r1
   1b550:	mov	r4, #0
   1b554:	str	r3, [sp, #32]
   1b558:	ldr	r3, [r3]
   1b55c:	str	r0, [sp, #20]
   1b560:	mov	r0, r1
   1b564:	movw	r1, #49448	; 0xc128
   1b568:	movt	r1, #3
   1b56c:	str	r3, [sp, #148]	; 0x94
   1b570:	str	r4, [sp, #40]	; 0x28
   1b574:	bl	1232c <fopen@plt>
   1b578:	subs	r3, r0, #0
   1b57c:	str	r3, [sp, #24]
   1b580:	beq	1bd28 <crc32@@Base+0x25e0>
   1b584:	movw	r8, #62572	; 0xf46c
   1b588:	movt	r8, #4
   1b58c:	str	fp, [sp, #12]
   1b590:	mov	r7, r4
   1b594:	mov	fp, r8
   1b598:	movw	r3, #25384	; 0x6328
   1b59c:	str	r4, [sp, #16]
   1b5a0:	movt	r3, #3
   1b5a4:	str	r3, [sp, #28]
   1b5a8:	ldr	r3, [sp, #24]
   1b5ac:	mov	r2, #10
   1b5b0:	add	r1, sp, #52	; 0x34
   1b5b4:	add	r0, sp, #40	; 0x28
   1b5b8:	bl	12134 <__getdelim@plt>
   1b5bc:	cmp	r0, #0
   1b5c0:	ble	1bae8 <crc32@@Base+0x23a0>
   1b5c4:	add	r2, sp, #44	; 0x2c
   1b5c8:	ldr	r1, [sp, #28]
   1b5cc:	ldr	r0, [sp, #40]	; 0x28
   1b5d0:	add	r7, r7, #1
   1b5d4:	bl	12224 <__strtok_r@plt>
   1b5d8:	cmp	r0, #0
   1b5dc:	beq	1b5a8 <crc32@@Base+0x1e60>
   1b5e0:	mov	r9, #0
   1b5e4:	movw	r5, #25388	; 0x632c
   1b5e8:	movt	r5, #3
   1b5ec:	mov	r8, r9
   1b5f0:	str	r0, [sp, #40]	; 0x28
   1b5f4:	add	r2, sp, #48	; 0x30
   1b5f8:	mov	r1, r5
   1b5fc:	bl	12224 <__strtok_r@plt>
   1b600:	subs	r4, r0, #0
   1b604:	beq	1b5a8 <crc32@@Base+0x1e60>
   1b608:	ldrb	r3, [r4]
   1b60c:	cmp	r3, #35	; 0x23
   1b610:	beq	1b5a8 <crc32@@Base+0x1e60>
   1b614:	cmp	r8, #3
   1b618:	ldrls	pc, [pc, r8, lsl #2]
   1b61c:	b	1b754 <crc32@@Base+0x200c>
   1b620:	andeq	fp, r1, r0, lsr r6
   1b624:	andeq	fp, r1, ip, asr r6
   1b628:	muleq	r1, r4, r6
   1b62c:	muleq	r1, r4, r6
   1b630:	movw	r1, #37636	; 0x9304
   1b634:	mov	r2, r4
   1b638:	movt	r1, #3
   1b63c:	ldr	r0, [pc, #1804]	; 1bd50 <crc32@@Base+0x2608>
   1b640:	bl	1a5c8 <crc32@@Base+0xe80>
   1b644:	subs	r9, r0, #0
   1b648:	blt	1bb5c <crc32@@Base+0x2414>
   1b64c:	mov	r8, #1
   1b650:	mov	r0, #0
   1b654:	str	r0, [sp, #40]	; 0x28
   1b658:	b	1b5f4 <crc32@@Base+0x1eac>
   1b65c:	sub	r3, r9, #1
   1b660:	cmp	r3, #9
   1b664:	ldrls	pc, [pc, r3, lsl #2]
   1b668:	b	1b7d0 <crc32@@Base+0x2088>
   1b66c:	andeq	fp, r1, ip, lsr #18
   1b670:	andeq	fp, r1, ip, ror #16
   1b674:	ldrdeq	fp, [r1], -r8
   1b678:	andeq	fp, r1, ip, asr r7
   1b67c:	andeq	fp, r1, ip, asr r7
   1b680:	andeq	fp, r1, ip, asr r7
   1b684:	andeq	fp, r1, ip, asr r7
   1b688:	andeq	fp, r1, ip, asr r7
   1b68c:	andeq	fp, r1, r4, ror #17
   1b690:	andeq	fp, r1, r0, ror r9
   1b694:	cmp	r9, #4
   1b698:	blt	1b754 <crc32@@Base+0x200c>
   1b69c:	cmp	r9, #8
   1b6a0:	bgt	1bad4 <crc32@@Base+0x238c>
   1b6a4:	mov	r0, r4
   1b6a8:	mov	r2, r7
   1b6ac:	ldr	r1, [sp, #12]
   1b6b0:	movw	r6, #65452	; 0xffac
   1b6b4:	bl	1b494 <crc32@@Base+0x1d4c>
   1b6b8:	movt	r6, #4
   1b6bc:	ldr	r3, [r6, #32]
   1b6c0:	cmp	r3, #0
   1b6c4:	mov	r4, r0
   1b6c8:	beq	1b6dc <crc32@@Base+0x1f94>
   1b6cc:	mov	r2, r9
   1b6d0:	ldr	r1, [sp, #16]
   1b6d4:	ldr	r0, [sp, #20]
   1b6d8:	blx	r3
   1b6dc:	ldr	r3, [sp, #16]
   1b6e0:	mov	r2, r7
   1b6e4:	str	r4, [sp]
   1b6e8:	ldr	r1, [sp, #12]
   1b6ec:	str	r3, [sp, #4]
   1b6f0:	mov	r3, r8
   1b6f4:	ldr	r4, [r6, #28]
   1b6f8:	ldr	r0, [sp, #20]
   1b6fc:	blx	r4
   1b700:	cmp	r8, #3
   1b704:	movne	r8, #3
   1b708:	bne	1b650 <crc32@@Base+0x1f08>
   1b70c:	ldr	r2, [sp, #16]
   1b710:	ldr	r3, [r6, #44]	; 0x2c
   1b714:	add	r2, r2, #1
   1b718:	str	r2, [sp, #16]
   1b71c:	cmp	r2, r3
   1b720:	bhi	1bc8c <crc32@@Base+0x2544>
   1b724:	mov	r3, #0
   1b728:	add	r2, sp, #48	; 0x30
   1b72c:	mov	r0, r3
   1b730:	mov	r1, r5
   1b734:	str	r3, [sp, #40]	; 0x28
   1b738:	bl	12224 <__strtok_r@plt>
   1b73c:	cmp	r0, #0
   1b740:	beq	1b5a8 <crc32@@Base+0x1e60>
   1b744:	ldrb	r3, [r0]
   1b748:	cmp	r3, #35	; 0x23
   1b74c:	beq	1b5a8 <crc32@@Base+0x1e60>
   1b750:	mov	r8, #4
   1b754:	add	r8, r8, #1
   1b758:	b	1b650 <crc32@@Base+0x1f08>
   1b75c:	mov	r0, r4
   1b760:	mov	r2, r7
   1b764:	ldr	r1, [sp, #12]
   1b768:	movw	r6, #65452	; 0xffac
   1b76c:	bl	1b494 <crc32@@Base+0x1d4c>
   1b770:	movt	r6, #4
   1b774:	ldr	r3, [r6, #32]
   1b778:	cmp	r3, #0
   1b77c:	mov	r4, r0
   1b780:	beq	1b794 <crc32@@Base+0x204c>
   1b784:	mov	r2, r9
   1b788:	ldr	r1, [sp, #16]
   1b78c:	ldr	r0, [sp, #20]
   1b790:	blx	r3
   1b794:	ldr	r3, [sp, #16]
   1b798:	mov	r2, r7
   1b79c:	str	r4, [sp]
   1b7a0:	ldr	r1, [sp, #12]
   1b7a4:	str	r3, [sp, #4]
   1b7a8:	mov	r3, #1
   1b7ac:	ldr	r4, [r6, #28]
   1b7b0:	ldr	r0, [sp, #20]
   1b7b4:	blx	r4
   1b7b8:	ldr	r3, [fp, #172]	; 0xac
   1b7bc:	cmp	r3, #1
   1b7c0:	movne	r3, #0
   1b7c4:	movne	r8, #2
   1b7c8:	strne	r3, [fp, #172]	; 0xac
   1b7cc:	bne	1b650 <crc32@@Base+0x1f08>
   1b7d0:	mov	r8, #2
   1b7d4:	b	1b650 <crc32@@Base+0x1f08>
   1b7d8:	mov	r0, r4
   1b7dc:	mov	r2, r7
   1b7e0:	ldr	r1, [sp, #12]
   1b7e4:	bl	1b494 <crc32@@Base+0x1d4c>
   1b7e8:	ldr	r3, [fp, #172]	; 0xac
   1b7ec:	cmp	r3, #1
   1b7f0:	addeq	r2, sp, #48	; 0x30
   1b7f4:	moveq	r4, #0
   1b7f8:	str	r0, [fp, #272]	; 0x110
   1b7fc:	moveq	r0, r4
   1b800:	bne	1bb48 <crc32@@Base+0x2400>
   1b804:	mov	r1, r5
   1b808:	str	r4, [sp, #40]	; 0x28
   1b80c:	bl	12224 <__strtok_r@plt>
   1b810:	cmp	r0, #0
   1b814:	beq	1b5a8 <crc32@@Base+0x1e60>
   1b818:	ldrb	r3, [r0]
   1b81c:	cmp	r3, #35	; 0x23
   1b820:	beq	1b5a8 <crc32@@Base+0x1e60>
   1b824:	add	r2, sp, #48	; 0x30
   1b828:	mov	r1, r5
   1b82c:	mov	r0, r4
   1b830:	str	r4, [sp, #40]	; 0x28
   1b834:	bl	12224 <__strtok_r@plt>
   1b838:	cmp	r0, #0
   1b83c:	beq	1b5a8 <crc32@@Base+0x1e60>
   1b840:	ldrb	r3, [r0]
   1b844:	cmp	r3, #35	; 0x23
   1b848:	beq	1b5a8 <crc32@@Base+0x1e60>
   1b84c:	mov	r0, r4
   1b850:	add	r2, sp, #48	; 0x30
   1b854:	mov	r1, r5
   1b858:	str	r4, [sp, #40]	; 0x28
   1b85c:	bl	12224 <__strtok_r@plt>
   1b860:	cmp	r0, #0
   1b864:	bne	1b744 <crc32@@Base+0x1ffc>
   1b868:	b	1b5a8 <crc32@@Base+0x1e60>
   1b86c:	movw	r1, #37792	; 0x93a0
   1b870:	mov	r2, r4
   1b874:	movt	r1, #3
   1b878:	ldr	r0, [pc, #1236]	; 1bd54 <crc32@@Base+0x260c>
   1b87c:	bl	1a5c8 <crc32@@Base+0xe80>
   1b880:	cmn	r0, #1
   1b884:	str	r0, [fp, #272]	; 0x110
   1b888:	beq	1bc58 <crc32@@Base+0x2510>
   1b88c:	movw	r1, #37792	; 0x93a0
   1b890:	mov	r2, r4
   1b894:	movt	r1, #3
   1b898:	ldr	r0, [pc, #1208]	; 1bd58 <crc32@@Base+0x2610>
   1b89c:	bl	1a5c8 <crc32@@Base+0xe80>
   1b8a0:	movw	r6, #65452	; 0xffac
   1b8a4:	movt	r6, #4
   1b8a8:	cmn	r0, #1
   1b8ac:	str	r0, [r6, #4]
   1b8b0:	beq	1bc58 <crc32@@Base+0x2510>
   1b8b4:	ldr	r3, [fp, #272]	; 0x110
   1b8b8:	mov	r4, #0
   1b8bc:	add	r2, sp, #48	; 0x30
   1b8c0:	mov	r1, r5
   1b8c4:	cmp	r0, r3
   1b8c8:	mov	r0, r4
   1b8cc:	strcc	r3, [r6, #4]
   1b8d0:	ldr	r3, [fp, #172]	; 0xac
   1b8d4:	cmp	r3, #1
   1b8d8:	beq	1b808 <crc32@@Base+0x20c0>
   1b8dc:	str	r4, [fp, #172]	; 0xac
   1b8e0:	b	1b808 <crc32@@Base+0x20c0>
   1b8e4:	movw	r6, #65452	; 0xffac
   1b8e8:	movt	r6, #4
   1b8ec:	ldr	r3, [r6, #24]
   1b8f0:	cmp	r3, #2
   1b8f4:	bne	1bc24 <crc32@@Base+0x24dc>
   1b8f8:	mov	r0, r4
   1b8fc:	mov	r2, r7
   1b900:	ldr	r1, [sp, #12]
   1b904:	mov	r4, #0
   1b908:	bl	1b494 <crc32@@Base+0x1d4c>
   1b90c:	ldr	r3, [fp, #172]	; 0xac
   1b910:	add	r2, sp, #48	; 0x30
   1b914:	mov	r1, r5
   1b918:	cmp	r3, #1
   1b91c:	str	r0, [fp]
   1b920:	mov	r0, r4
   1b924:	beq	1b808 <crc32@@Base+0x20c0>
   1b928:	b	1b8dc <crc32@@Base+0x2194>
   1b92c:	mov	r0, r4
   1b930:	mov	r2, r7
   1b934:	ldr	r1, [sp, #12]
   1b938:	movw	r6, #65452	; 0xffac
   1b93c:	bl	1b494 <crc32@@Base+0x1d4c>
   1b940:	ldr	r3, [fp, #172]	; 0xac
   1b944:	movt	r6, #4
   1b948:	cmp	r3, #0
   1b94c:	str	r0, [r6, #24]
   1b950:	beq	1bbf4 <crc32@@Base+0x24ac>
   1b954:	mov	r4, #0
   1b958:	mov	r3, #1
   1b95c:	str	r3, [fp, #172]	; 0xac
   1b960:	bl	1b3f4 <crc32@@Base+0x1cac>
   1b964:	mov	r0, r4
   1b968:	add	r2, sp, #48	; 0x30
   1b96c:	b	1b804 <crc32@@Base+0x20bc>
   1b970:	movw	r6, #65452	; 0xffac
   1b974:	movt	r6, #4
   1b978:	mov	r1, #0
   1b97c:	mov	r0, r4
   1b980:	mov	sl, #1
   1b984:	str	sl, [r6, #48]	; 0x30
   1b988:	bl	12434 <open@plt>
   1b98c:	ldr	r3, [sp, #20]
   1b990:	add	r3, r3, #44	; 0x2c
   1b994:	str	r3, [sp, #36]	; 0x24
   1b998:	subs	r9, r0, #0
   1b99c:	blt	1bbcc <crc32@@Base+0x2484>
   1b9a0:	add	r2, sp, #56	; 0x38
   1b9a4:	mov	r1, r9
   1b9a8:	mov	r0, #3
   1b9ac:	bl	12554 <__fxstat@plt>
   1b9b0:	cmp	r0, #0
   1b9b4:	blt	1bb90 <crc32@@Base+0x2448>
   1b9b8:	mov	r8, #0
   1b9bc:	mov	r3, sl
   1b9c0:	ldr	r1, [sp, #100]	; 0x64
   1b9c4:	mov	r0, r8
   1b9c8:	str	r9, [sp]
   1b9cc:	mov	r2, sl
   1b9d0:	str	r8, [sp, #4]
   1b9d4:	bl	123ec <mmap@plt>
   1b9d8:	cmn	r0, #1
   1b9dc:	mov	r3, r0
   1b9e0:	beq	1bcd4 <crc32@@Base+0x258c>
   1b9e4:	ldr	r4, [sp, #100]	; 0x64
   1b9e8:	cmp	r4, #65536	; 0x10000
   1b9ec:	bgt	1bcc0 <crc32@@Base+0x2578>
   1b9f0:	mov	r2, r4
   1b9f4:	mov	r1, r3
   1b9f8:	ldr	r0, [sp, #36]	; 0x24
   1b9fc:	str	r3, [sp, #36]	; 0x24
   1ba00:	bl	1259c <memcpy@plt>
   1ba04:	ldr	r3, [sp, #36]	; 0x24
   1ba08:	mov	r1, r4
   1ba0c:	str	r4, [r6, #20]
   1ba10:	mov	r0, r3
   1ba14:	bl	125e4 <munmap@plt>
   1ba18:	mov	r0, r9
   1ba1c:	bl	12314 <close@plt>
   1ba20:	ldr	r3, [sp, #20]
   1ba24:	mov	r0, r8
   1ba28:	add	r2, sp, #48	; 0x30
   1ba2c:	mov	r1, r5
   1ba30:	str	r8, [sp, #40]	; 0x28
   1ba34:	str	sl, [r3, #40]	; 0x28
   1ba38:	bl	12224 <__strtok_r@plt>
   1ba3c:	subs	r4, r0, #0
   1ba40:	beq	1b5a8 <crc32@@Base+0x1e60>
   1ba44:	ldrb	r3, [r4]
   1ba48:	cmp	r3, #35	; 0x23
   1ba4c:	beq	1b5a8 <crc32@@Base+0x1e60>
   1ba50:	mov	r8, #2
   1ba54:	mov	r9, #0
   1ba58:	mov	r0, r4
   1ba5c:	mov	r2, r7
   1ba60:	ldr	r1, [sp, #12]
   1ba64:	bl	1b494 <crc32@@Base+0x1d4c>
   1ba68:	add	r2, sp, #48	; 0x30
   1ba6c:	mov	r1, r5
   1ba70:	str	r9, [sp, #40]	; 0x28
   1ba74:	add	r8, r8, #1
   1ba78:	str	r0, [r6, #16]
   1ba7c:	mov	r0, #0
   1ba80:	bl	12224 <__strtok_r@plt>
   1ba84:	cmp	r0, #0
   1ba88:	beq	1b5a8 <crc32@@Base+0x1e60>
   1ba8c:	ldrb	r3, [r0]
   1ba90:	cmp	r3, #35	; 0x23
   1ba94:	beq	1b5a8 <crc32@@Base+0x1e60>
   1ba98:	cmp	r8, #3
   1ba9c:	beq	1ba5c <crc32@@Base+0x2314>
   1baa0:	add	r2, sp, #48	; 0x30
   1baa4:	mov	r1, r5
   1baa8:	mov	r0, #0
   1baac:	str	r9, [sp, #40]	; 0x28
   1bab0:	bl	12224 <__strtok_r@plt>
   1bab4:	cmp	r0, #0
   1bab8:	beq	1b5a8 <crc32@@Base+0x1e60>
   1babc:	ldrb	r3, [r0]
   1bac0:	cmp	r3, #35	; 0x23
   1bac4:	beq	1b5a8 <crc32@@Base+0x1e60>
   1bac8:	mov	r9, #10
   1bacc:	mov	r8, #5
   1bad0:	b	1b754 <crc32@@Base+0x200c>
   1bad4:	cmp	r9, #10
   1bad8:	bne	1b754 <crc32@@Base+0x200c>
   1badc:	movw	r6, #65452	; 0xffac
   1bae0:	movt	r6, #4
   1bae4:	b	1ba54 <crc32@@Base+0x230c>
   1bae8:	ldr	fp, [sp, #12]
   1baec:	movw	r2, #65452	; 0xffac
   1baf0:	movt	r2, #4
   1baf4:	mov	r3, r7
   1baf8:	ldr	r0, [sp, #20]
   1bafc:	ldr	r4, [r2, #36]	; 0x24
   1bb00:	mov	r2, fp
   1bb04:	ldr	r1, [sp, #16]
   1bb08:	blx	r4
   1bb0c:	ldr	r0, [sp, #24]
   1bb10:	bl	125fc <fclose@plt>
   1bb14:	movw	r3, #62572	; 0xf46c
   1bb18:	movt	r3, #4
   1bb1c:	ldr	r3, [r3, #272]	; 0x110
   1bb20:	cmn	r3, #1
   1bb24:	beq	1bd00 <crc32@@Base+0x25b8>
   1bb28:	ldr	r3, [sp, #32]
   1bb2c:	ldr	r2, [sp, #148]	; 0x94
   1bb30:	ldr	r0, [sp, #16]
   1bb34:	ldr	r3, [r3]
   1bb38:	cmp	r2, r3
   1bb3c:	bne	1bcfc <crc32@@Base+0x25b4>
   1bb40:	add	sp, sp, #156	; 0x9c
   1bb44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb48:	mov	r4, #0
   1bb4c:	add	r2, sp, #48	; 0x30
   1bb50:	mov	r0, r4
   1bb54:	mov	r1, r5
   1bb58:	b	1b8dc <crc32@@Base+0x2194>
   1bb5c:	ldr	fp, [sp, #12]
   1bb60:	movw	r2, #65044	; 0xfe14
   1bb64:	movt	r2, #4
   1bb68:	str	r4, [sp, #4]
   1bb6c:	mov	r1, #1
   1bb70:	ldr	r0, [r2]
   1bb74:	mov	r3, fp
   1bb78:	movw	r2, #25412	; 0x6344
   1bb7c:	str	r7, [sp]
   1bb80:	movt	r2, #3
   1bb84:	bl	122b4 <__fprintf_chk@plt>
   1bb88:	mov	r0, #1
   1bb8c:	bl	121f4 <exit@plt>
   1bb90:	movw	r3, #65044	; 0xfe14
   1bb94:	movt	r3, #4
   1bb98:	ldr	r5, [r3]
   1bb9c:	bl	1268c <__errno_location@plt>
   1bba0:	ldr	r0, [r0]
   1bba4:	bl	12200 <strerror@plt>
   1bba8:	movw	r2, #25332	; 0x62f4
   1bbac:	movt	r2, #3
   1bbb0:	mov	r3, r4
   1bbb4:	str	r0, [sp]
   1bbb8:	mov	r1, sl
   1bbbc:	mov	r0, r5
   1bbc0:	bl	122b4 <__fprintf_chk@plt>
   1bbc4:	mov	r0, sl
   1bbc8:	bl	121f4 <exit@plt>
   1bbcc:	movw	r3, #65044	; 0xfe14
   1bbd0:	movt	r3, #4
   1bbd4:	ldr	r5, [r3]
   1bbd8:	bl	1268c <__errno_location@plt>
   1bbdc:	ldr	r0, [r0]
   1bbe0:	bl	12200 <strerror@plt>
   1bbe4:	movw	r2, #25308	; 0x62dc
   1bbe8:	mov	r3, r4
   1bbec:	movt	r2, #3
   1bbf0:	b	1bbb4 <crc32@@Base+0x246c>
   1bbf4:	ldr	fp, [sp, #12]
   1bbf8:	movw	r2, #65044	; 0xfe14
   1bbfc:	movt	r2, #4
   1bc00:	str	r7, [sp]
   1bc04:	mov	r1, #1
   1bc08:	ldr	r0, [r2]
   1bc0c:	mov	r3, fp
   1bc10:	movw	r2, #37656	; 0x9318
   1bc14:	movt	r2, #3
   1bc18:	bl	122b4 <__fprintf_chk@plt>
   1bc1c:	mov	r0, #1
   1bc20:	bl	121f4 <exit@plt>
   1bc24:	ldr	fp, [sp, #12]
   1bc28:	movw	r1, #65044	; 0xfe14
   1bc2c:	movt	r1, #4
   1bc30:	str	r4, [sp, #4]
   1bc34:	str	r7, [sp]
   1bc38:	movw	r2, #37816	; 0x93b8
   1bc3c:	ldr	r0, [r1]
   1bc40:	mov	r3, fp
   1bc44:	movt	r2, #3
   1bc48:	mov	r1, #1
   1bc4c:	bl	122b4 <__fprintf_chk@plt>
   1bc50:	mov	r0, #1
   1bc54:	bl	121f4 <exit@plt>
   1bc58:	ldr	fp, [sp, #12]
   1bc5c:	movw	r1, #65044	; 0xfe14
   1bc60:	movt	r1, #4
   1bc64:	str	r4, [sp, #4]
   1bc68:	str	r7, [sp]
   1bc6c:	movw	r2, #37752	; 0x9378
   1bc70:	ldr	r0, [r1]
   1bc74:	mov	r3, fp
   1bc78:	movt	r2, #3
   1bc7c:	mov	r1, #1
   1bc80:	bl	122b4 <__fprintf_chk@plt>
   1bc84:	mov	r0, #1
   1bc88:	bl	121f4 <exit@plt>
   1bc8c:	ldr	fp, [sp, #12]
   1bc90:	movw	r1, #65044	; 0xfe14
   1bc94:	movt	r1, #4
   1bc98:	str	r3, [sp, #4]
   1bc9c:	str	r7, [sp]
   1bca0:	movw	r2, #37904	; 0x9410
   1bca4:	ldr	r0, [r1]
   1bca8:	mov	r3, fp
   1bcac:	movt	r2, #3
   1bcb0:	mov	r1, #1
   1bcb4:	bl	122b4 <__fprintf_chk@plt>
   1bcb8:	mov	r0, #1
   1bcbc:	bl	121f4 <exit@plt>
   1bcc0:	movw	r0, #37872	; 0x93f0
   1bcc4:	movt	r0, #3
   1bcc8:	bl	1226c <puts@plt>
   1bccc:	mov	r0, sl
   1bcd0:	bl	121f4 <exit@plt>
   1bcd4:	movw	r3, #65044	; 0xfe14
   1bcd8:	movt	r3, #4
   1bcdc:	ldr	r5, [r3]
   1bce0:	bl	1268c <__errno_location@plt>
   1bce4:	ldr	r0, [r0]
   1bce8:	bl	12200 <strerror@plt>
   1bcec:	movw	r2, #26912	; 0x6920
   1bcf0:	mov	r3, r4
   1bcf4:	movt	r2, #3
   1bcf8:	b	1bbb4 <crc32@@Base+0x246c>
   1bcfc:	bl	12494 <__stack_chk_fail@plt>
   1bd00:	movw	r1, #65044	; 0xfe14
   1bd04:	movt	r1, #4
   1bd08:	mov	r3, fp
   1bd0c:	movw	r2, #37956	; 0x9444
   1bd10:	ldr	r0, [r1]
   1bd14:	movt	r2, #3
   1bd18:	mov	r1, #1
   1bd1c:	bl	122b4 <__fprintf_chk@plt>
   1bd20:	mov	r0, #1
   1bd24:	bl	121f4 <exit@plt>
   1bd28:	movw	r1, #65044	; 0xfe14
   1bd2c:	movt	r1, #4
   1bd30:	mov	r3, fp
   1bd34:	movw	r2, #37600	; 0x92e0
   1bd38:	ldr	r0, [r1]
   1bd3c:	movt	r2, #3
   1bd40:	mov	r1, #1
   1bd44:	bl	122b4 <__fprintf_chk@plt>
   1bd48:	mov	r0, #1
   1bd4c:	bl	121f4 <exit@plt>
   1bd50:	muleq	r4, r4, r4
   1bd54:	andeq	pc, r4, r0, lsl #11
   1bd58:	andeq	pc, r4, ip, lsl r5	; <UNPREDICTABLE>
   1bd5c:	push	{r4, r5, r6, r7, r8, lr}
   1bd60:	movw	r4, #65452	; 0xffac
   1bd64:	movw	r5, #62572	; 0xf46c
   1bd68:	movt	r4, #4
   1bd6c:	movt	r5, #4
   1bd70:	mov	r8, r0
   1bd74:	mov	r6, r3
   1bd78:	mov	r2, #1
   1bd7c:	mov	r7, r1
   1bd80:	str	r2, [r4, #24]
   1bd84:	mvn	r3, #0
   1bd88:	str	r3, [r5, #272]	; 0x110
   1bd8c:	mov	r3, #0
   1bd90:	str	r3, [r5]
   1bd94:	bl	1b3f4 <crc32@@Base+0x1cac>
   1bd98:	ldr	r1, [r6, #64]	; 0x40
   1bd9c:	mov	r0, r8
   1bda0:	bl	1b53c <crc32@@Base+0x1df4>
   1bda4:	ldr	r3, [r4, #24]
   1bda8:	cmp	r3, #1
   1bdac:	moveq	r2, #28
   1bdb0:	mov	r1, r0
   1bdb4:	beq	1bdd0 <crc32@@Base+0x2688>
   1bdb8:	ldr	r0, [r4, #48]	; 0x30
   1bdbc:	mov	r3, #44	; 0x2c
   1bdc0:	movt	r3, #1
   1bdc4:	movw	r2, #1816	; 0x718
   1bdc8:	cmp	r0, #0
   1bdcc:	movne	r2, r3
   1bdd0:	ldr	r3, [r5, #272]	; 0x110
   1bdd4:	ldr	r0, [r4, #4]
   1bdd8:	add	r2, r3, r2
   1bddc:	cmp	r2, r0
   1bde0:	mov	r0, r8
   1bde4:	strhi	r2, [r4, #4]
   1bde8:	ldr	r8, [r4, #40]	; 0x28
   1bdec:	ldr	r2, [r6, #60]	; 0x3c
   1bdf0:	blx	r8
   1bdf4:	ldr	r3, [r5, #272]	; 0x110
   1bdf8:	ldr	r0, [r7, #44]	; 0x2c
   1bdfc:	add	r3, r3, #4080	; 0xff0
   1be00:	ldr	r1, [r4, #12]
   1be04:	add	r3, r3, #15
   1be08:	ldr	r2, [r4, #8]
   1be0c:	add	r3, r3, r0
   1be10:	cmp	r1, #0
   1be14:	bic	r3, r3, #4080	; 0xff0
   1be18:	bic	r3, r3, #15
   1be1c:	str	r3, [r2]
   1be20:	popeq	{r4, r5, r6, r7, r8, pc}
   1be24:	ldr	ip, [r5]
   1be28:	cmp	ip, #0
   1be2c:	popeq	{r4, r5, r6, r7, r8, pc}
   1be30:	ldr	r0, [r6, #60]	; 0x3c
   1be34:	ldr	lr, [r4, #4]
   1be38:	sub	r0, r0, lr
   1be3c:	add	r3, r0, r3
   1be40:	str	r3, [r1]
   1be44:	ldr	r3, [r2]
   1be48:	add	ip, r3, ip
   1be4c:	str	ip, [r2]
   1be50:	pop	{r4, r5, r6, r7, r8, pc}
   1be54:	push	{r4, r5, r6, r7, r8, r9, lr}
   1be58:	movw	r6, #61168	; 0xeef0
   1be5c:	movt	r6, #4
   1be60:	sub	sp, sp, #108	; 0x6c
   1be64:	movw	r4, #65452	; 0xffac
   1be68:	movw	r5, #62572	; 0xf46c
   1be6c:	ldr	r3, [r6]
   1be70:	movt	r4, #4
   1be74:	movt	r5, #4
   1be78:	mov	r7, r0
   1be7c:	mov	r8, r1
   1be80:	mov	r2, #44	; 0x2c
   1be84:	mov	r1, #0
   1be88:	movt	r2, #1
   1be8c:	movw	r0, #65504	; 0xffe0
   1be90:	movt	r0, #4
   1be94:	str	r3, [sp, #100]	; 0x64
   1be98:	ldr	r9, [r7, #72]	; 0x48
   1be9c:	bl	122e4 <memset@plt>
   1bea0:	mvn	r2, #0
   1bea4:	mov	r3, #1
   1bea8:	str	r2, [r5, #272]	; 0x110
   1beac:	str	r3, [r4, #24]
   1beb0:	mov	r3, #0
   1beb4:	str	r3, [r5]
   1beb8:	bl	1b3f4 <crc32@@Base+0x1cac>
   1bebc:	ldr	r1, [r7, #64]	; 0x40
   1bec0:	movw	r0, #65504	; 0xffe0
   1bec4:	movt	r0, #4
   1bec8:	bl	1b53c <crc32@@Base+0x1df4>
   1becc:	ldr	r3, [r4, #24]
   1bed0:	cmp	r3, #1
   1bed4:	moveq	r2, #760	; 0x2f8
   1bed8:	beq	1bef4 <crc32@@Base+0x27ac>
   1bedc:	ldr	r1, [r4, #48]	; 0x30
   1bee0:	movw	r3, #1816	; 0x718
   1bee4:	mov	r2, #44	; 0x2c
   1bee8:	movt	r2, #1
   1beec:	cmp	r1, #0
   1bef0:	moveq	r2, r3
   1bef4:	ldr	r0, [r5, #272]	; 0x110
   1bef8:	ldr	r3, [r4, #4]
   1befc:	add	r1, r0, r2
   1bf00:	cmp	r1, r3
   1bf04:	bhi	1bf78 <crc32@@Base+0x2830>
   1bf08:	sub	r4, r3, r0
   1bf0c:	cmp	r2, r4
   1bf10:	bhi	1bf84 <crc32@@Base+0x283c>
   1bf14:	mov	r1, #1
   1bf18:	mov	r0, r4
   1bf1c:	bl	12518 <calloc@plt>
   1bf20:	cmp	r0, #0
   1bf24:	beq	1bff4 <crc32@@Base+0x28ac>
   1bf28:	str	r0, [r8, #8]
   1bf2c:	add	r2, sp, #8
   1bf30:	str	r4, [r8, #4]
   1bf34:	mov	r1, r9
   1bf38:	mov	r0, #3
   1bf3c:	bl	12620 <__xstat@plt>
   1bf40:	cmp	r0, #0
   1bf44:	blt	1bfb0 <crc32@@Base+0x2868>
   1bf48:	ldr	r0, [sp, #52]	; 0x34
   1bf4c:	ldr	r1, [sp, #100]	; 0x64
   1bf50:	add	r3, r0, #4080	; 0xff0
   1bf54:	ldr	r2, [r6]
   1bf58:	add	r3, r3, #15
   1bf5c:	bic	r3, r3, #4080	; 0xff0
   1bf60:	cmp	r1, r2
   1bf64:	bic	r3, r3, #15
   1bf68:	sub	r0, r3, r0
   1bf6c:	bne	1bfac <crc32@@Base+0x2864>
   1bf70:	add	sp, sp, #108	; 0x6c
   1bf74:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1bf78:	str	r1, [r4, #4]
   1bf7c:	mov	r4, r2
   1bf80:	b	1bf14 <crc32@@Base+0x27cc>
   1bf84:	movw	r1, #65044	; 0xfe14
   1bf88:	movt	r1, #4
   1bf8c:	ldr	r3, [r7, #80]	; 0x50
   1bf90:	movw	r2, #37988	; 0x9464
   1bf94:	ldr	r0, [r1]
   1bf98:	movt	r2, #3
   1bf9c:	mov	r1, #1
   1bfa0:	bl	122b4 <__fprintf_chk@plt>
   1bfa4:	mov	r0, #1
   1bfa8:	bl	121f4 <exit@plt>
   1bfac:	bl	12494 <__stack_chk_fail@plt>
   1bfb0:	movw	r2, #65044	; 0xfe14
   1bfb4:	movt	r2, #4
   1bfb8:	ldr	r5, [r7, #80]	; 0x50
   1bfbc:	ldr	r4, [r2]
   1bfc0:	bl	1268c <__errno_location@plt>
   1bfc4:	ldr	r0, [r0]
   1bfc8:	bl	12200 <strerror@plt>
   1bfcc:	mov	r3, r5
   1bfd0:	str	r9, [sp]
   1bfd4:	movw	r2, #25328	; 0x62f0
   1bfd8:	mov	r1, #1
   1bfdc:	movt	r2, #3
   1bfe0:	str	r0, [sp, #4]
   1bfe4:	mov	r0, r4
   1bfe8:	bl	122b4 <__fprintf_chk@plt>
   1bfec:	mov	r0, #1
   1bff0:	bl	121f4 <exit@plt>
   1bff4:	movw	r2, #65044	; 0xfe14
   1bff8:	movt	r2, #4
   1bffc:	ldr	r5, [r7, #80]	; 0x50
   1c000:	ldr	r4, [r2]
   1c004:	bl	1268c <__errno_location@plt>
   1c008:	ldr	r0, [r0]
   1c00c:	bl	12200 <strerror@plt>
   1c010:	mov	r3, r5
   1c014:	movw	r2, #25352	; 0x6308
   1c018:	mov	r1, #1
   1c01c:	movt	r2, #3
   1c020:	str	r0, [sp]
   1c024:	mov	r0, r4
   1c028:	bl	122b4 <__fprintf_chk@plt>
   1c02c:	mov	r0, #1
   1c030:	bl	121f4 <exit@plt>
   1c034:	mov	r0, #0
   1c038:	bx	lr
   1c03c:	bx	lr
   1c040:	bx	lr
   1c044:	subs	r0, r0, #38	; 0x26
   1c048:	movne	r0, #1
   1c04c:	bx	lr
   1c050:	push	{r4, r5, r6, lr}
   1c054:	mov	r5, r1
   1c058:	sub	sp, sp, #8
   1c05c:	mov	r6, r0
   1c060:	mov	r1, #0
   1c064:	mov	r0, r5
   1c068:	bl	12434 <open@plt>
   1c06c:	subs	r4, r0, #0
   1c070:	blt	1c09c <crc32@@Base+0x2954>
   1c074:	mov	r2, r6
   1c078:	mov	r1, r4
   1c07c:	mov	r0, #3
   1c080:	bl	12554 <__fxstat@plt>
   1c084:	cmp	r0, #0
   1c088:	blt	1c0d8 <crc32@@Base+0x2990>
   1c08c:	mov	r0, r4
   1c090:	add	sp, sp, #8
   1c094:	pop	{r4, r5, r6, lr}
   1c098:	b	12314 <close@plt>
   1c09c:	movw	r3, #65044	; 0xfe14
   1c0a0:	movt	r3, #4
   1c0a4:	ldr	r4, [r3]
   1c0a8:	bl	1268c <__errno_location@plt>
   1c0ac:	ldr	r0, [r0]
   1c0b0:	bl	12200 <strerror@plt>
   1c0b4:	movw	r2, #38540	; 0x968c
   1c0b8:	movt	r2, #3
   1c0bc:	mov	r3, r5
   1c0c0:	mov	r1, #1
   1c0c4:	str	r0, [sp]
   1c0c8:	mov	r0, r4
   1c0cc:	bl	122b4 <__fprintf_chk@plt>
   1c0d0:	mov	r0, #1
   1c0d4:	bl	121f4 <exit@plt>
   1c0d8:	movw	r3, #65044	; 0xfe14
   1c0dc:	movt	r3, #4
   1c0e0:	ldr	r4, [r3]
   1c0e4:	bl	1268c <__errno_location@plt>
   1c0e8:	ldr	r0, [r0]
   1c0ec:	bl	12200 <strerror@plt>
   1c0f0:	movw	r2, #38560	; 0x96a0
   1c0f4:	mov	r3, r5
   1c0f8:	mov	r1, #1
   1c0fc:	movt	r2, #3
   1c100:	b	1c0c4 <crc32@@Base+0x297c>
   1c104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c108:	movw	r4, #61168	; 0xeef0
   1c10c:	sub	sp, sp, #16384	; 0x4000
   1c110:	movt	r4, #4
   1c114:	sub	sp, sp, #108	; 0x6c
   1c118:	mov	sl, r1
   1c11c:	mov	fp, r2
   1c120:	ldr	r1, [r4]
   1c124:	add	r2, sp, #16384	; 0x4000
   1c128:	cmp	r3, #16384	; 0x4000
   1c12c:	add	r2, r2, #100	; 0x64
   1c130:	str	r1, [r2]
   1c134:	bgt	1c248 <crc32@@Base+0x2b00>
   1c138:	mov	r2, #16384	; 0x4000
   1c13c:	mov	r1, #0
   1c140:	mov	r9, r0
   1c144:	add	r0, sp, #100	; 0x64
   1c148:	mov	r6, r3
   1c14c:	bl	122e4 <memset@plt>
   1c150:	mov	r1, #0
   1c154:	mov	r0, sl
   1c158:	bl	12434 <open@plt>
   1c15c:	subs	r7, r0, #0
   1c160:	blt	1c2ac <crc32@@Base+0x2b64>
   1c164:	add	r2, sp, #8
   1c168:	mov	r1, r7
   1c16c:	mov	r0, #3
   1c170:	bl	12554 <__fxstat@plt>
   1c174:	cmp	r0, #0
   1c178:	blt	1c270 <crc32@@Base+0x2b28>
   1c17c:	ldr	r1, [sp, #52]	; 0x34
   1c180:	cmp	r1, #0
   1c184:	beq	1c21c <crc32@@Base+0x2ad4>
   1c188:	mov	r5, #0
   1c18c:	mov	r3, #1
   1c190:	str	r7, [sp]
   1c194:	mov	r0, r5
   1c198:	str	r5, [sp, #4]
   1c19c:	mov	r2, r3
   1c1a0:	bl	123ec <mmap@plt>
   1c1a4:	cmn	r0, #1
   1c1a8:	mov	r8, r0
   1c1ac:	beq	1c2d8 <crc32@@Base+0x2b90>
   1c1b0:	mov	r2, r5
   1c1b4:	mov	r1, fp
   1c1b8:	mov	r0, r9
   1c1bc:	ldr	sl, [sp, #52]	; 0x34
   1c1c0:	bl	124f4 <lseek@plt>
   1c1c4:	cmp	r0, #0
   1c1c8:	blt	1c374 <crc32@@Base+0x2c2c>
   1c1cc:	mov	r2, sl
   1c1d0:	mov	r1, r8
   1c1d4:	mov	r0, r9
   1c1d8:	bl	12608 <write@plt>
   1c1dc:	cmp	sl, r0
   1c1e0:	bne	1c304 <crc32@@Base+0x2bbc>
   1c1e4:	sub	r5, r6, #1
   1c1e8:	rsb	r6, r6, #0
   1c1ec:	add	r5, r5, sl
   1c1f0:	add	r1, sp, #100	; 0x64
   1c1f4:	and	r5, r5, r6
   1c1f8:	mov	r0, r9
   1c1fc:	sub	r5, r5, sl
   1c200:	mov	r2, r5
   1c204:	bl	12608 <write@plt>
   1c208:	cmp	r5, r0
   1c20c:	bne	1c33c <crc32@@Base+0x2bf4>
   1c210:	ldr	r1, [sp, #52]	; 0x34
   1c214:	mov	r0, r8
   1c218:	bl	125e4 <munmap@plt>
   1c21c:	mov	r0, r7
   1c220:	bl	12314 <close@plt>
   1c224:	add	r3, sp, #16384	; 0x4000
   1c228:	add	r3, r3, #100	; 0x64
   1c22c:	ldr	r2, [r3]
   1c230:	ldr	r3, [r4]
   1c234:	cmp	r2, r3
   1c238:	bne	1c26c <crc32@@Base+0x2b24>
   1c23c:	add	sp, sp, #16384	; 0x4000
   1c240:	add	sp, sp, #108	; 0x6c
   1c244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c248:	movw	r0, #65044	; 0xfe14
   1c24c:	movt	r0, #4
   1c250:	movw	r2, #38580	; 0x96b4
   1c254:	mov	r1, #1
   1c258:	ldr	r0, [r0]
   1c25c:	movt	r2, #3
   1c260:	bl	122b4 <__fprintf_chk@plt>
   1c264:	mov	r0, #1
   1c268:	bl	121f4 <exit@plt>
   1c26c:	bl	12494 <__stack_chk_fail@plt>
   1c270:	movw	r3, #65044	; 0xfe14
   1c274:	movt	r3, #4
   1c278:	ldr	r4, [r3]
   1c27c:	bl	1268c <__errno_location@plt>
   1c280:	ldr	r0, [r0]
   1c284:	bl	12200 <strerror@plt>
   1c288:	movw	r2, #25332	; 0x62f4
   1c28c:	movt	r2, #3
   1c290:	mov	r3, sl
   1c294:	mov	r1, #1
   1c298:	str	r0, [sp]
   1c29c:	mov	r0, r4
   1c2a0:	bl	122b4 <__fprintf_chk@plt>
   1c2a4:	mov	r0, #1
   1c2a8:	bl	121f4 <exit@plt>
   1c2ac:	movw	r3, #65044	; 0xfe14
   1c2b0:	movt	r3, #4
   1c2b4:	ldr	r4, [r3]
   1c2b8:	bl	1268c <__errno_location@plt>
   1c2bc:	ldr	r0, [r0]
   1c2c0:	bl	12200 <strerror@plt>
   1c2c4:	movw	r2, #25308	; 0x62dc
   1c2c8:	mov	r3, sl
   1c2cc:	mov	r1, #1
   1c2d0:	movt	r2, #3
   1c2d4:	b	1c298 <crc32@@Base+0x2b50>
   1c2d8:	movw	r3, #65044	; 0xfe14
   1c2dc:	movt	r3, #4
   1c2e0:	ldr	r4, [r3]
   1c2e4:	bl	1268c <__errno_location@plt>
   1c2e8:	ldr	r0, [r0]
   1c2ec:	bl	12200 <strerror@plt>
   1c2f0:	movw	r2, #26912	; 0x6920
   1c2f4:	mov	r3, sl
   1c2f8:	mov	r1, #1
   1c2fc:	movt	r2, #3
   1c300:	b	1c298 <crc32@@Base+0x2b50>
   1c304:	movw	r3, #65044	; 0xfe14
   1c308:	movt	r3, #4
   1c30c:	ldr	r4, [r3]
   1c310:	bl	1268c <__errno_location@plt>
   1c314:	ldr	r0, [r0]
   1c318:	bl	12200 <strerror@plt>
   1c31c:	movw	r2, #38632	; 0x96e8
   1c320:	mov	r1, #1
   1c324:	movt	r2, #3
   1c328:	mov	r3, r0
   1c32c:	mov	r0, r4
   1c330:	bl	122b4 <__fprintf_chk@plt>
   1c334:	mov	r0, #1
   1c338:	bl	121f4 <exit@plt>
   1c33c:	movw	r3, #65044	; 0xfe14
   1c340:	movt	r3, #4
   1c344:	ldr	r4, [r3]
   1c348:	bl	1268c <__errno_location@plt>
   1c34c:	ldr	r0, [r0]
   1c350:	bl	12200 <strerror@plt>
   1c354:	movw	r2, #38648	; 0x96f8
   1c358:	mov	r1, #1
   1c35c:	movt	r2, #3
   1c360:	mov	r3, r0
   1c364:	mov	r0, r4
   1c368:	bl	122b4 <__fprintf_chk@plt>
   1c36c:	mov	r0, #1
   1c370:	bl	121f4 <exit@plt>
   1c374:	movw	r3, #65044	; 0xfe14
   1c378:	movt	r3, #4
   1c37c:	ldr	r4, [r3]
   1c380:	bl	1268c <__errno_location@plt>
   1c384:	ldr	r0, [r0]
   1c388:	bl	12200 <strerror@plt>
   1c38c:	movw	r3, #38492	; 0x965c
   1c390:	movw	r2, #38612	; 0x96d4
   1c394:	movt	r3, #3
   1c398:	movt	r2, #3
   1c39c:	mov	r1, #1
   1c3a0:	b	1c298 <crc32@@Base+0x2b50>
   1c3a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c3a8:	movw	r8, #61168	; 0xeef0
   1c3ac:	movt	r8, #4
   1c3b0:	ldr	r3, [r0, #4]
   1c3b4:	sub	sp, sp, #668	; 0x29c
   1c3b8:	mov	r4, r0
   1c3bc:	ldr	r2, [r8]
   1c3c0:	cmp	r3, #0
   1c3c4:	mov	r6, r1
   1c3c8:	add	r5, sp, #148	; 0x94
   1c3cc:	str	r2, [sp, #660]	; 0x294
   1c3d0:	bne	1c4a8 <crc32@@Base+0x2d60>
   1c3d4:	mov	r2, #384	; 0x180
   1c3d8:	movw	r3, #38668	; 0x970c
   1c3dc:	str	r2, [sp]
   1c3e0:	mov	r0, r5
   1c3e4:	movt	r3, #3
   1c3e8:	mov	r2, #512	; 0x200
   1c3ec:	mov	r1, #1
   1c3f0:	bl	126e0 <__sprintf_chk@plt>
   1c3f4:	ldr	r3, [r4, #24]
   1c3f8:	add	r7, r4, #32
   1c3fc:	mov	r2, #64	; 0x40
   1c400:	mov	r1, #0
   1c404:	orr	r3, r3, #256	; 0x100
   1c408:	mov	r0, r7
   1c40c:	str	r3, [r4, #24]
   1c410:	bl	122e4 <memset@plt>
   1c414:	mov	r0, r5
   1c418:	movw	r1, #49448	; 0xc128
   1c41c:	movt	r1, #3
   1c420:	bl	120a4 <popen@plt>
   1c424:	subs	r9, r0, #0
   1c428:	beq	1c520 <crc32@@Base+0x2dd8>
   1c42c:	mov	r2, r9
   1c430:	mov	r1, #97	; 0x61
   1c434:	add	r0, sp, #16
   1c438:	bl	12548 <fgets@plt>
   1c43c:	cmp	r0, #0
   1c440:	beq	1c4f8 <crc32@@Base+0x2db0>
   1c444:	movw	r6, #38860	; 0x97cc
   1c448:	add	r5, sp, #16
   1c44c:	movt	r6, #3
   1c450:	mov	r4, #0
   1c454:	b	1c478 <crc32@@Base+0x2d30>
   1c458:	mov	r0, r5
   1c45c:	add	r2, r7, r4
   1c460:	mov	r1, r6
   1c464:	add	r5, r5, #2
   1c468:	bl	126a4 <sscanf@plt>
   1c46c:	cmp	r0, #0
   1c470:	blt	1c4d0 <crc32@@Base+0x2d88>
   1c474:	add	r4, r4, #1
   1c478:	add	r0, sp, #16
   1c47c:	bl	125c0 <strlen@plt>
   1c480:	cmp	r4, r0, lsr #1
   1c484:	bcc	1c458 <crc32@@Base+0x2d10>
   1c488:	mov	r0, r9
   1c48c:	bl	124dc <pclose@plt>
   1c490:	ldr	r2, [sp, #660]	; 0x294
   1c494:	ldr	r3, [r8]
   1c498:	cmp	r2, r3
   1c49c:	bne	1c548 <crc32@@Base+0x2e00>
   1c4a0:	add	sp, sp, #668	; 0x29c
   1c4a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c4a8:	stm	sp, {r3, r6}
   1c4ac:	mov	r0, r5
   1c4b0:	mov	r3, #384	; 0x180
   1c4b4:	mov	r2, #512	; 0x200
   1c4b8:	str	r3, [sp, #8]
   1c4bc:	mov	r1, #1
   1c4c0:	movw	r3, #38688	; 0x9720
   1c4c4:	movt	r3, #3
   1c4c8:	bl	126e0 <__sprintf_chk@plt>
   1c4cc:	b	1c3f4 <crc32@@Base+0x2cac>
   1c4d0:	movw	r1, #65044	; 0xfe14
   1c4d4:	movt	r1, #4
   1c4d8:	mov	r3, r0
   1c4dc:	movw	r2, #38868	; 0x97d4
   1c4e0:	ldr	r0, [r1]
   1c4e4:	movt	r2, #3
   1c4e8:	mov	r1, #1
   1c4ec:	bl	122b4 <__fprintf_chk@plt>
   1c4f0:	mov	r0, #1
   1c4f4:	bl	121f4 <exit@plt>
   1c4f8:	movw	r1, #65044	; 0xfe14
   1c4fc:	movt	r1, #4
   1c500:	mov	r3, r6
   1c504:	movw	r2, #38832	; 0x97b0
   1c508:	ldr	r0, [r1]
   1c50c:	movt	r2, #3
   1c510:	mov	r1, #1
   1c514:	bl	122b4 <__fprintf_chk@plt>
   1c518:	mov	r0, #1
   1c51c:	bl	121f4 <exit@plt>
   1c520:	movw	r3, #65044	; 0xfe14
   1c524:	movt	r3, #4
   1c528:	movw	r0, #38804	; 0x9794
   1c52c:	mov	r2, #27
   1c530:	ldr	r3, [r3]
   1c534:	movt	r0, #3
   1c538:	mov	r1, #1
   1c53c:	bl	12578 <fwrite@plt>
   1c540:	mov	r0, #1
   1c544:	bl	121f4 <exit@plt>
   1c548:	bl	12494 <__stack_chk_fail@plt>
   1c54c:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c550:	movw	r6, #61168	; 0xeef0
   1c554:	sub	sp, sp, #4160	; 0x1040
   1c558:	movt	r6, #4
   1c55c:	sub	sp, sp, #52	; 0x34
   1c560:	mov	r4, #0
   1c564:	ldr	r3, [r6]
   1c568:	add	ip, sp, #4160	; 0x1040
   1c56c:	add	ip, ip, #44	; 0x2c
   1c570:	mov	r9, r1
   1c574:	mov	r2, #4096	; 0x1000
   1c578:	mov	r1, r4
   1c57c:	mov	r5, r0
   1c580:	add	r0, sp, #108	; 0x6c
   1c584:	str	r3, [ip]
   1c588:	str	r4, [sp, #12]
   1c58c:	bl	122e4 <memset@plt>
   1c590:	mov	r1, r4
   1c594:	mov	r0, r9
   1c598:	bl	12434 <open@plt>
   1c59c:	subs	r7, r0, #0
   1c5a0:	blt	1c7f8 <crc32@@Base+0x30b0>
   1c5a4:	mov	r1, r7
   1c5a8:	add	r2, sp, #16
   1c5ac:	mov	r0, #3
   1c5b0:	bl	12554 <__fxstat@plt>
   1c5b4:	cmp	r0, #0
   1c5b8:	blt	1c7cc <crc32@@Base+0x3084>
   1c5bc:	ldr	r1, [sp, #60]	; 0x3c
   1c5c0:	cmp	r1, #0
   1c5c4:	beq	1c6fc <crc32@@Base+0x2fb4>
   1c5c8:	mov	r3, #1
   1c5cc:	str	r4, [sp, #4]
   1c5d0:	str	r7, [sp]
   1c5d4:	mov	r2, r3
   1c5d8:	mov	r0, r4
   1c5dc:	bl	123ec <mmap@plt>
   1c5e0:	cmn	r0, #1
   1c5e4:	mov	r8, r0
   1c5e8:	beq	1c7a0 <crc32@@Base+0x3058>
   1c5ec:	mov	r2, r4
   1c5f0:	mov	r1, r4
   1c5f4:	mov	r0, r5
   1c5f8:	ldr	r4, [sp, #60]	; 0x3c
   1c5fc:	bl	124f4 <lseek@plt>
   1c600:	cmp	r0, #0
   1c604:	blt	1c764 <crc32@@Base+0x301c>
   1c608:	mov	r2, r4
   1c60c:	mov	r1, r8
   1c610:	mov	r0, r5
   1c614:	bl	12608 <write@plt>
   1c618:	cmp	r4, r0
   1c61c:	bne	1c72c <crc32@@Base+0x2fe4>
   1c620:	rsbs	r3, r4, #0
   1c624:	and	r2, r4, #3
   1c628:	and	r3, r3, #3
   1c62c:	rsbpl	r2, r3, #0
   1c630:	cmn	r4, #1
   1c634:	moveq	r3, #1
   1c638:	movne	r3, #0
   1c63c:	cmp	r2, #0
   1c640:	moveq	r3, #0
   1c644:	cmp	r3, #0
   1c648:	bne	1c6d4 <crc32@@Base+0x2f8c>
   1c64c:	cmn	r4, #1
   1c650:	bge	1c6f0 <crc32@@Base+0x2fa8>
   1c654:	rsb	r4, r4, #0
   1c658:	b	1c67c <crc32@@Base+0x2f34>
   1c65c:	mov	r2, #4096	; 0x1000
   1c660:	add	r1, sp, #108	; 0x6c
   1c664:	mov	r0, r5
   1c668:	bl	12608 <write@plt>
   1c66c:	cmp	r0, #4096	; 0x1000
   1c670:	bne	1c69c <crc32@@Base+0x2f54>
   1c674:	subs	r4, r4, #4096	; 0x1000
   1c678:	beq	1c6f0 <crc32@@Base+0x2fa8>
   1c67c:	cmp	r4, #4096	; 0x1000
   1c680:	bge	1c65c <crc32@@Base+0x2f14>
   1c684:	add	r1, sp, #108	; 0x6c
   1c688:	mov	r0, r5
   1c68c:	mov	r2, r4
   1c690:	bl	12608 <write@plt>
   1c694:	cmp	r0, r4
   1c698:	beq	1c6f0 <crc32@@Base+0x2fa8>
   1c69c:	movw	r3, #65044	; 0xfe14
   1c6a0:	movt	r3, #4
   1c6a4:	ldr	r4, [r3]
   1c6a8:	bl	1268c <__errno_location@plt>
   1c6ac:	ldr	r0, [r0]
   1c6b0:	bl	12200 <strerror@plt>
   1c6b4:	movw	r2, #38648	; 0x96f8
   1c6b8:	mov	r1, #1
   1c6bc:	movt	r2, #3
   1c6c0:	mov	r3, r0
   1c6c4:	mov	r0, r4
   1c6c8:	bl	122b4 <__fprintf_chk@plt>
   1c6cc:	mov	r0, #1
   1c6d0:	bl	121f4 <exit@plt>
   1c6d4:	rsb	r4, r2, #4
   1c6d8:	add	r1, sp, #12
   1c6dc:	mov	r0, r5
   1c6e0:	mov	r2, r4
   1c6e4:	bl	12608 <write@plt>
   1c6e8:	cmp	r4, r0
   1c6ec:	bne	1c824 <crc32@@Base+0x30dc>
   1c6f0:	ldr	r1, [sp, #60]	; 0x3c
   1c6f4:	mov	r0, r8
   1c6f8:	bl	125e4 <munmap@plt>
   1c6fc:	mov	r0, r7
   1c700:	bl	12314 <close@plt>
   1c704:	add	r3, sp, #4160	; 0x1040
   1c708:	add	r3, r3, #44	; 0x2c
   1c70c:	ldr	r2, [r3]
   1c710:	ldr	r3, [r6]
   1c714:	cmp	r2, r3
   1c718:	bne	1c728 <crc32@@Base+0x2fe0>
   1c71c:	add	sp, sp, #4160	; 0x1040
   1c720:	add	sp, sp, #52	; 0x34
   1c724:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c728:	bl	12494 <__stack_chk_fail@plt>
   1c72c:	movw	r3, #65044	; 0xfe14
   1c730:	movt	r3, #4
   1c734:	ldr	r4, [r3]
   1c738:	bl	1268c <__errno_location@plt>
   1c73c:	ldr	r0, [r0]
   1c740:	bl	12200 <strerror@plt>
   1c744:	movw	r2, #38632	; 0x96e8
   1c748:	mov	r1, #1
   1c74c:	movt	r2, #3
   1c750:	mov	r3, r0
   1c754:	mov	r0, r4
   1c758:	bl	122b4 <__fprintf_chk@plt>
   1c75c:	mov	r0, #1
   1c760:	bl	121f4 <exit@plt>
   1c764:	movw	r3, #65044	; 0xfe14
   1c768:	movt	r3, #4
   1c76c:	ldr	r4, [r3]
   1c770:	bl	1268c <__errno_location@plt>
   1c774:	ldr	r0, [r0]
   1c778:	bl	12200 <strerror@plt>
   1c77c:	ldr	r3, [pc, #216]	; 1c85c <crc32@@Base+0x3114>
   1c780:	movw	r2, #38612	; 0x96d4
   1c784:	movt	r2, #3
   1c788:	mov	r1, #1
   1c78c:	str	r0, [sp]
   1c790:	mov	r0, r4
   1c794:	bl	122b4 <__fprintf_chk@plt>
   1c798:	mov	r0, #1
   1c79c:	bl	121f4 <exit@plt>
   1c7a0:	movw	r3, #65044	; 0xfe14
   1c7a4:	movt	r3, #4
   1c7a8:	ldr	r4, [r3]
   1c7ac:	bl	1268c <__errno_location@plt>
   1c7b0:	ldr	r0, [r0]
   1c7b4:	bl	12200 <strerror@plt>
   1c7b8:	movw	r2, #26912	; 0x6920
   1c7bc:	mov	r3, r9
   1c7c0:	mov	r1, #1
   1c7c4:	movt	r2, #3
   1c7c8:	b	1c78c <crc32@@Base+0x3044>
   1c7cc:	movw	r3, #65044	; 0xfe14
   1c7d0:	movt	r3, #4
   1c7d4:	ldr	r4, [r3]
   1c7d8:	bl	1268c <__errno_location@plt>
   1c7dc:	ldr	r0, [r0]
   1c7e0:	bl	12200 <strerror@plt>
   1c7e4:	movw	r2, #25332	; 0x62f4
   1c7e8:	mov	r3, r9
   1c7ec:	mov	r1, #1
   1c7f0:	movt	r2, #3
   1c7f4:	b	1c78c <crc32@@Base+0x3044>
   1c7f8:	movw	r3, #65044	; 0xfe14
   1c7fc:	movt	r3, #4
   1c800:	ldr	r4, [r3]
   1c804:	bl	1268c <__errno_location@plt>
   1c808:	ldr	r0, [r0]
   1c80c:	bl	12200 <strerror@plt>
   1c810:	movw	r2, #25308	; 0x62dc
   1c814:	mov	r3, r9
   1c818:	mov	r1, #1
   1c81c:	movt	r2, #3
   1c820:	b	1c78c <crc32@@Base+0x3044>
   1c824:	movw	r3, #65044	; 0xfe14
   1c828:	movt	r3, #4
   1c82c:	ldr	r4, [r3]
   1c830:	bl	1268c <__errno_location@plt>
   1c834:	ldr	r0, [r0]
   1c838:	bl	12200 <strerror@plt>
   1c83c:	movw	r2, #38892	; 0x97ec
   1c840:	mov	r1, #1
   1c844:	movt	r2, #3
   1c848:	mov	r3, r0
   1c84c:	mov	r0, r4
   1c850:	bl	122b4 <__fprintf_chk@plt>
   1c854:	mov	r0, #1
   1c858:	bl	121f4 <exit@plt>
   1c85c:	andeq	r9, r3, r0, ror r6
   1c860:	push	{r4, r5, r6, r7, lr}
   1c864:	movw	r4, #61168	; 0xeef0
   1c868:	movt	r4, #4
   1c86c:	sub	sp, sp, #108	; 0x6c
   1c870:	mov	r1, #0
   1c874:	mov	r7, r0
   1c878:	ldr	r3, [r4]
   1c87c:	str	r3, [sp, #100]	; 0x64
   1c880:	bl	12434 <open@plt>
   1c884:	subs	r5, r0, #0
   1c888:	blt	1c8fc <crc32@@Base+0x31b4>
   1c88c:	add	r2, sp, #8
   1c890:	mov	r1, r5
   1c894:	mov	r0, #3
   1c898:	bl	12554 <__fxstat@plt>
   1c89c:	cmp	r0, #0
   1c8a0:	blt	1c968 <crc32@@Base+0x3220>
   1c8a4:	mov	r6, #0
   1c8a8:	mov	r3, #1
   1c8ac:	ldr	r1, [sp, #52]	; 0x34
   1c8b0:	mov	r0, r6
   1c8b4:	stm	sp, {r5, r6}
   1c8b8:	mov	r2, r3
   1c8bc:	bl	123ec <mmap@plt>
   1c8c0:	cmn	r0, #1
   1c8c4:	beq	1c93c <crc32@@Base+0x31f4>
   1c8c8:	ldr	r1, [sp, #52]	; 0x34
   1c8cc:	ldr	r7, [r0, #576]	; 0x240
   1c8d0:	bl	125e4 <munmap@plt>
   1c8d4:	mov	r0, r5
   1c8d8:	bl	12314 <close@plt>
   1c8dc:	ldr	r2, [sp, #100]	; 0x64
   1c8e0:	ldr	r3, [r4]
   1c8e4:	mov	r0, r7
   1c8e8:	mov	r1, r6
   1c8ec:	cmp	r2, r3
   1c8f0:	bne	1c938 <crc32@@Base+0x31f0>
   1c8f4:	add	sp, sp, #108	; 0x6c
   1c8f8:	pop	{r4, r5, r6, r7, pc}
   1c8fc:	movw	r3, #65044	; 0xfe14
   1c900:	movt	r3, #4
   1c904:	ldr	r4, [r3]
   1c908:	bl	1268c <__errno_location@plt>
   1c90c:	ldr	r0, [r0]
   1c910:	bl	12200 <strerror@plt>
   1c914:	movw	r2, #25308	; 0x62dc
   1c918:	movt	r2, #3
   1c91c:	mov	r3, r7
   1c920:	mov	r1, #1
   1c924:	str	r0, [sp]
   1c928:	mov	r0, r4
   1c92c:	bl	122b4 <__fprintf_chk@plt>
   1c930:	mov	r0, #1
   1c934:	bl	121f4 <exit@plt>
   1c938:	bl	12494 <__stack_chk_fail@plt>
   1c93c:	movw	r3, #65044	; 0xfe14
   1c940:	movt	r3, #4
   1c944:	ldr	r4, [r3]
   1c948:	bl	1268c <__errno_location@plt>
   1c94c:	ldr	r0, [r0]
   1c950:	bl	12200 <strerror@plt>
   1c954:	movw	r2, #26912	; 0x6920
   1c958:	mov	r3, r7
   1c95c:	mov	r1, #1
   1c960:	movt	r2, #3
   1c964:	b	1c924 <crc32@@Base+0x31dc>
   1c968:	movw	r3, #65044	; 0xfe14
   1c96c:	movt	r3, #4
   1c970:	ldr	r4, [r3]
   1c974:	bl	1268c <__errno_location@plt>
   1c978:	ldr	r0, [r0]
   1c97c:	bl	12200 <strerror@plt>
   1c980:	movw	r2, #25332	; 0x62f4
   1c984:	mov	r3, r7
   1c988:	mov	r1, #1
   1c98c:	movt	r2, #3
   1c990:	b	1c924 <crc32@@Base+0x31dc>
   1c994:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c998:	mov	r4, r0
   1c99c:	ldrb	r0, [r0, #11]
   1c9a0:	sub	sp, sp, #20
   1c9a4:	ldr	sl, [r2]
   1c9a8:	mov	r5, r3
   1c9ac:	ldrd	r8, [r2, #24]
   1c9b0:	lsl	fp, r0, #7
   1c9b4:	add	r0, r4, r0, lsl #7
   1c9b8:	ldrd	r6, [r2, #32]
   1c9bc:	mov	ip, r0
   1c9c0:	str	r1, [sp, #12]
   1c9c4:	str	r3, [ip, #16]
   1c9c8:	add	r0, r0, #16
   1c9cc:	ldr	r3, [sp, #56]	; 0x38
   1c9d0:	ldr	r1, [sp, #60]	; 0x3c
   1c9d4:	str	r3, [ip, #20]
   1c9d8:	bl	1c3a4 <crc32@@Base+0x2c5c>
   1c9dc:	sub	r2, sl, #2
   1c9e0:	cmp	r2, #15
   1c9e4:	ldrls	pc, [pc, r2, lsl #2]
   1c9e8:	b	1cd7c <crc32@@Base+0x3634>
   1c9ec:	muleq	r1, r0, sl
   1c9f0:	andeq	ip, r1, ip, ror #22
   1c9f4:	ldrdeq	ip, [r1], -r4
   1c9f8:	ldrdeq	ip, [r1], -r4
   1c9fc:	andeq	ip, r1, r4, asr #24
   1ca00:	andeq	ip, r1, ip, ror sp
   1ca04:	andeq	ip, r1, ip, ror sp
   1ca08:	andeq	ip, r1, ip, ror sp
   1ca0c:	andeq	ip, r1, ip, ror sp
   1ca10:	andeq	ip, r1, ip, ror sp
   1ca14:	andeq	ip, r1, ip, ror sp
   1ca18:	andeq	ip, r1, ip, ror sp
   1ca1c:	andeq	ip, r1, r4, asr #25
   1ca20:	andeq	ip, r1, ip, ror sp
   1ca24:	andeq	ip, r1, ip, ror sp
   1ca28:	andeq	ip, r1, ip, lsr #20
   1ca2c:	add	r2, r4, fp
   1ca30:	movw	r3, #38928	; 0x9810
   1ca34:	movt	r3, #3
   1ca38:	lsl	r6, r6, #10
   1ca3c:	ldr	r1, [r2, #40]	; 0x28
   1ca40:	str	r8, [r2, #24]
   1ca44:	orr	r1, r1, #68	; 0x44
   1ca48:	str	r9, [r2, #28]
   1ca4c:	str	r6, [r2, #44]	; 0x2c
   1ca50:	str	r1, [r2, #40]	; 0x28
   1ca54:	ldr	r1, [sp, #56]	; 0x38
   1ca58:	movw	r2, #65048	; 0xfe18
   1ca5c:	movt	r2, #4
   1ca60:	str	r1, [sp, #4]
   1ca64:	mov	r1, #1
   1ca68:	ldr	r0, [r2]
   1ca6c:	movw	r2, #39124	; 0x98d4
   1ca70:	str	r5, [sp]
   1ca74:	movt	r2, #3
   1ca78:	bl	122b4 <__fprintf_chk@plt>
   1ca7c:	ldrb	r3, [r4, #11]
   1ca80:	add	r3, r3, #1
   1ca84:	strb	r3, [r4, #11]
   1ca88:	add	sp, sp, #20
   1ca8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca90:	movw	r1, #16
   1ca94:	movt	r1, #6
   1ca98:	add	r3, r4, fp
   1ca9c:	mov	r2, #0
   1caa0:	ldr	r1, [r1, #4]
   1caa4:	mvn	r6, #1
   1caa8:	ldr	lr, [r3, #40]	; 0x28
   1caac:	strb	r2, [r3, #24]
   1cab0:	lsr	r1, r1, #16
   1cab4:	strb	r2, [r3, #25]
   1cab8:	strb	r2, [r3, #28]
   1cabc:	lsl	r1, r1, #16
   1cac0:	strb	r2, [r3, #29]
   1cac4:	orr	r1, r1, #19
   1cac8:	strb	r2, [r3, #30]
   1cacc:	strb	r2, [r3, #31]
   1cad0:	orr	r1, r1, lr
   1cad4:	strb	r6, [r3, #26]
   1cad8:	mov	lr, #31
   1cadc:	str	r1, [r3, #40]	; 0x28
   1cae0:	movw	r1, #39080	; 0x98a8
   1cae4:	strb	lr, [r3, #27]
   1cae8:	movt	r1, #3
   1caec:	strb	r2, [r3, #32]
   1caf0:	strb	r2, [r3, #33]	; 0x21
   1caf4:	strb	r6, [r3, #34]	; 0x22
   1caf8:	strb	lr, [r3, #35]	; 0x23
   1cafc:	strb	r2, [r3, #36]	; 0x24
   1cb00:	strb	r2, [r3, #37]	; 0x25
   1cb04:	strb	r2, [r3, #38]	; 0x26
   1cb08:	strb	r2, [r3, #39]	; 0x27
   1cb0c:	ldrb	r0, [r4, #11]
   1cb10:	add	r0, r0, #1
   1cb14:	uxtb	r0, r0
   1cb18:	strb	r0, [r4, #11]
   1cb1c:	add	r6, r4, r0, lsl #7
   1cb20:	add	r0, r6, #16
   1cb24:	ldr	r3, [r6, #40]	; 0x28
   1cb28:	orr	r3, r3, #21
   1cb2c:	str	r3, [r6, #40]	; 0x28
   1cb30:	bl	1c3a4 <crc32@@Base+0x2c5c>
   1cb34:	ldr	r3, [r6, #20]
   1cb38:	ldr	r0, [sp, #60]	; 0x3c
   1cb3c:	add	r3, r3, r5
   1cb40:	str	r3, [r6, #16]
   1cb44:	bl	1c860 <crc32@@Base+0x3118>
   1cb48:	movw	r3, #38940	; 0x981c
   1cb4c:	movt	r3, #3
   1cb50:	subs	r8, r0, #1
   1cb54:	str	r0, [r6, #32]
   1cb58:	sbc	r9, r1, #0
   1cb5c:	str	r1, [r6, #36]	; 0x24
   1cb60:	str	r8, [r6, #24]
   1cb64:	str	r9, [r6, #28]
   1cb68:	b	1ca54 <crc32@@Base+0x330c>
   1cb6c:	add	ip, r4, fp
   1cb70:	mov	r2, #0
   1cb74:	mov	lr, #32
   1cb78:	ldr	r3, [ip, #40]	; 0x28
   1cb7c:	strb	r2, [ip, #24]
   1cb80:	orr	r3, r3, #102	; 0x66
   1cb84:	strb	r2, [ip, #25]
   1cb88:	str	r3, [ip, #40]	; 0x28
   1cb8c:	mvn	r3, #63	; 0x3f
   1cb90:	strb	r2, [ip, #28]
   1cb94:	strb	r3, [ip, #26]
   1cb98:	movw	r3, #38912	; 0x9800
   1cb9c:	strb	r2, [ip, #29]
   1cba0:	movt	r3, #3
   1cba4:	strb	r2, [ip, #30]
   1cba8:	strb	r2, [ip, #31]
   1cbac:	strb	lr, [ip, #27]
   1cbb0:	strb	r2, [ip, #32]
   1cbb4:	strb	r2, [ip, #33]	; 0x21
   1cbb8:	strb	r2, [ip, #34]	; 0x22
   1cbbc:	strb	lr, [ip, #35]	; 0x23
   1cbc0:	strb	r2, [ip, #36]	; 0x24
   1cbc4:	strb	r2, [ip, #37]	; 0x25
   1cbc8:	strb	r2, [ip, #38]	; 0x26
   1cbcc:	strb	r2, [ip, #39]	; 0x27
   1cbd0:	b	1ca54 <crc32@@Base+0x330c>
   1cbd4:	orrs	r3, r6, r7
   1cbd8:	bne	1cd34 <crc32@@Base+0x35ec>
   1cbdc:	movw	r2, #16
   1cbe0:	movt	r2, #6
   1cbe4:	movw	lr, #42262	; 0xa516
   1cbe8:	movt	lr, #4
   1cbec:	ldr	r1, [r2]
   1cbf0:	mov	r6, #32
   1cbf4:	orr	lr, lr, r1, lsl #20
   1cbf8:	add	ip, r4, fp
   1cbfc:	and	r0, r8, #7
   1cc00:	mov	r1, #0
   1cc04:	orrs	r3, r0, r1
   1cc08:	ldr	r3, [ip, #40]	; 0x28
   1cc0c:	orr	r3, r3, #3
   1cc10:	orr	r3, r3, r6
   1cc14:	str	r3, [ip, #40]	; 0x28
   1cc18:	bne	1cda4 <crc32@@Base+0x365c>
   1cc1c:	mov	r1, #0
   1cc20:	movw	r3, #38924	; 0x980c
   1cc24:	str	r8, [ip, #24]
   1cc28:	movt	r3, #3
   1cc2c:	str	r9, [ip, #28]
   1cc30:	str	r8, [ip, #32]
   1cc34:	str	r9, [ip, #36]	; 0x24
   1cc38:	str	lr, [ip, #44]	; 0x2c
   1cc3c:	str	r1, [r2]
   1cc40:	b	1ca54 <crc32@@Base+0x330c>
   1cc44:	cmp	r7, #0
   1cc48:	ldr	r3, [sp, #12]
   1cc4c:	cmpeq	r6, #4
   1cc50:	moveq	r2, #1
   1cc54:	movne	r2, #0
   1cc58:	cmp	r3, #1
   1cc5c:	movne	r1, #0
   1cc60:	andeq	r1, r2, #1
   1cc64:	cmp	r1, #0
   1cc68:	beq	1cce8 <crc32@@Base+0x35a0>
   1cc6c:	movw	r2, #16
   1cc70:	movt	r2, #6
   1cc74:	movw	r0, #22012	; 0x55fc
   1cc78:	ldr	r1, [r2]
   1cc7c:	cmp	r1, #0
   1cc80:	beq	1cd2c <crc32@@Base+0x35e4>
   1cc84:	movt	r0, #3
   1cc88:	orr	r0, r0, r1, lsl #20
   1cc8c:	add	r1, r4, fp
   1cc90:	mov	lr, #0
   1cc94:	movw	r3, #38920	; 0x9808
   1cc98:	movt	r3, #3
   1cc9c:	ldr	ip, [r1, #40]	; 0x28
   1cca0:	str	r0, [r1, #44]	; 0x2c
   1cca4:	str	r8, [r1, #24]
   1cca8:	orr	r0, ip, #67	; 0x43
   1ccac:	str	r9, [r1, #28]
   1ccb0:	str	r8, [r1, #32]
   1ccb4:	str	r9, [r1, #36]	; 0x24
   1ccb8:	str	lr, [r2]
   1ccbc:	str	r0, [r1, #40]	; 0x28
   1ccc0:	b	1ca54 <crc32@@Base+0x330c>
   1ccc4:	add	r2, r4, fp
   1ccc8:	movw	r3, #25816	; 0x64d8
   1cccc:	movt	r3, #3
   1ccd0:	ldr	r1, [r2, #40]	; 0x28
   1ccd4:	str	r8, [r2, #24]
   1ccd8:	orr	r1, r1, #68	; 0x44
   1ccdc:	str	r9, [r2, #28]
   1cce0:	str	r1, [r2, #40]	; 0x28
   1cce4:	b	1ca54 <crc32@@Base+0x330c>
   1cce8:	ldr	r3, [sp, #12]
   1ccec:	sub	r3, r3, #2
   1ccf0:	clz	r3, r3
   1ccf4:	lsr	r3, r3, #5
   1ccf8:	tst	r2, r3
   1ccfc:	bne	1cd60 <crc32@@Base+0x3618>
   1cd00:	cmp	r7, #0
   1cd04:	cmpeq	r6, #5
   1cd08:	movne	r3, #0
   1cd0c:	cmp	r3, #0
   1cd10:	beq	1cdf4 <crc32@@Base+0x36ac>
   1cd14:	movw	r2, #16
   1cd18:	movt	r2, #6
   1cd1c:	movw	r0, #21510	; 0x5406
   1cd20:	ldr	r1, [r2]
   1cd24:	cmp	r1, #0
   1cd28:	bne	1cc84 <crc32@@Base+0x353c>
   1cd2c:	movt	r0, #19
   1cd30:	b	1cc8c <crc32@@Base+0x3544>
   1cd34:	cmp	r7, #0
   1cd38:	cmpeq	r6, #1
   1cd3c:	bne	1cdcc <crc32@@Base+0x3684>
   1cd40:	movw	r2, #16
   1cd44:	movt	r2, #6
   1cd48:	movw	lr, #62762	; 0xf52a
   1cd4c:	movt	lr, #4
   1cd50:	ldr	r1, [r2]
   1cd54:	mov	r6, #48	; 0x30
   1cd58:	orr	lr, lr, r1, lsl #20
   1cd5c:	b	1cbf8 <crc32@@Base+0x34b0>
   1cd60:	movw	r2, #16
   1cd64:	movt	r2, #6
   1cd68:	movw	r0, #21505	; 0x5401
   1cd6c:	ldr	r1, [r2]
   1cd70:	cmp	r1, #0
   1cd74:	bne	1cc84 <crc32@@Base+0x353c>
   1cd78:	b	1cd2c <crc32@@Base+0x35e4>
   1cd7c:	movw	r1, #65044	; 0xfe14
   1cd80:	movt	r1, #4
   1cd84:	mov	r3, sl
   1cd88:	movw	r2, #39092	; 0x98b4
   1cd8c:	ldr	r0, [r1]
   1cd90:	movt	r2, #3
   1cd94:	mov	r1, #1
   1cd98:	bl	122b4 <__fprintf_chk@plt>
   1cd9c:	mov	r0, #1
   1cda0:	bl	121f4 <exit@plt>
   1cda4:	movw	r3, #65044	; 0xfe14
   1cda8:	movt	r3, #4
   1cdac:	movw	r0, #39020	; 0x986c
   1cdb0:	mov	r2, #57	; 0x39
   1cdb4:	ldr	r3, [r3]
   1cdb8:	movt	r0, #3
   1cdbc:	mov	r1, #1
   1cdc0:	bl	12578 <fwrite@plt>
   1cdc4:	mov	r0, #1
   1cdc8:	bl	121f4 <exit@plt>
   1cdcc:	movw	r3, #65044	; 0xfe14
   1cdd0:	movt	r3, #4
   1cdd4:	strd	r6, [sp]
   1cdd8:	movw	r2, #38984	; 0x9848
   1cddc:	ldr	r0, [r3]
   1cde0:	movt	r2, #3
   1cde4:	mov	r1, #1
   1cde8:	bl	122b4 <__fprintf_chk@plt>
   1cdec:	mov	r0, #1
   1cdf0:	bl	121f4 <exit@plt>
   1cdf4:	movw	r3, #65044	; 0xfe14
   1cdf8:	movt	r3, #4
   1cdfc:	strd	r6, [sp]
   1ce00:	movw	r2, #38948	; 0x9824
   1ce04:	ldr	r0, [r3]
   1ce08:	movt	r2, #3
   1ce0c:	mov	r1, #1
   1ce10:	bl	122b4 <__fprintf_chk@plt>
   1ce14:	mov	r0, #1
   1ce18:	bl	121f4 <exit@plt>
   1ce1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ce20:	movw	ip, #61168	; 0xeef0
   1ce24:	sub	sp, sp, #956	; 0x3bc
   1ce28:	movt	ip, #4
   1ce2c:	mov	fp, r0
   1ce30:	mov	sl, r1
   1ce34:	str	ip, [sp, #36]	; 0x24
   1ce38:	mov	r1, #0
   1ce3c:	ldr	ip, [ip]
   1ce40:	str	r2, [sp, #12]
   1ce44:	mov	r2, #1616	; 0x650
   1ce48:	ldr	r0, [pc, #2200]	; 1d6e8 <crc32@@Base+0x3fa0>
   1ce4c:	str	r3, [sp, #32]
   1ce50:	str	ip, [sp, #948]	; 0x3b4
   1ce54:	bl	122e4 <memset@plt>
   1ce58:	cmp	fp, #1
   1ce5c:	beq	1d4cc <crc32@@Base+0x3d84>
   1ce60:	cmp	fp, #2
   1ce64:	beq	1d4f0 <crc32@@Base+0x3da8>
   1ce68:	movw	r9, #16
   1ce6c:	movt	r9, #6
   1ce70:	mov	r2, #0
   1ce74:	mvn	r1, #120	; 0x78
   1ce78:	ldr	r3, [r9, #1624]	; 0x658
   1ce7c:	strb	r1, [r9, #11]
   1ce80:	cmp	r3, r2
   1ce84:	strb	r1, [r9, #819]	; 0x333
   1ce88:	strb	r2, [r9, #8]
   1ce8c:	strb	r2, [r9, #816]	; 0x330
   1ce90:	beq	1d560 <crc32@@Base+0x3e18>
   1ce94:	mov	r4, #8192	; 0x2000
   1ce98:	movw	r8, #49448	; 0xc128
   1ce9c:	ldr	r5, [pc, #2120]	; 1d6ec <crc32@@Base+0x3fa4>
   1cea0:	movt	r8, #3
   1cea4:	mov	r6, r4
   1cea8:	b	1ceb8 <crc32@@Base+0x3770>
   1ceac:	ldr	r3, [r5, #40]!	; 0x28
   1ceb0:	cmp	r3, #0
   1ceb4:	beq	1cf38 <crc32@@Base+0x37f0>
   1ceb8:	cmp	r3, #13
   1cebc:	bne	1ceac <crc32@@Base+0x3764>
   1cec0:	mov	r1, r8
   1cec4:	ldr	r0, [r5, #4]
   1cec8:	bl	1232c <fopen@plt>
   1cecc:	subs	r4, r0, #0
   1ced0:	beq	1d5c0 <crc32@@Base+0x3e78>
   1ced4:	mov	r3, r4
   1ced8:	mov	r2, #1
   1cedc:	mov	r1, #808	; 0x328
   1cee0:	add	r0, sp, #140	; 0x8c
   1cee4:	bl	12464 <fread@plt>
   1cee8:	cmp	r0, #1
   1ceec:	mov	r7, r0
   1cef0:	bne	1d610 <crc32@@Base+0x3ec8>
   1cef4:	mov	r0, r4
   1cef8:	bl	125fc <fclose@plt>
   1cefc:	ldrb	r3, [sp, #143]	; 0x8f
   1cf00:	cmp	r3, #135	; 0x87
   1cf04:	bne	1d5e8 <crc32@@Base+0x3ea0>
   1cf08:	ldrb	r2, [sp, #151]	; 0x97
   1cf0c:	add	r1, sp, #952	; 0x3b8
   1cf10:	sub	r3, sl, #1
   1cf14:	rsb	r4, sl, #0
   1cf18:	add	r2, r1, r2, lsl #7
   1cf1c:	ldr	r2, [r2, #-920]	; 0xfffffc68
   1cf20:	add	r6, r6, r2
   1cf24:	add	r3, r3, r6
   1cf28:	and	r6, r4, r3
   1cf2c:	ldr	r3, [r5, #40]!	; 0x28
   1cf30:	cmp	r3, #0
   1cf34:	bne	1ceb8 <crc32@@Base+0x3770>
   1cf38:	mov	r4, r6
   1cf3c:	movw	r1, #65048	; 0xfe18
   1cf40:	movt	r1, #4
   1cf44:	movw	r2, #39292	; 0x997c
   1cf48:	str	r1, [sp, #8]
   1cf4c:	ldr	r0, [r1]
   1cf50:	mov	r3, r4
   1cf54:	movt	r2, #3
   1cf58:	mov	r1, #1
   1cf5c:	bl	122b4 <__fprintf_chk@plt>
   1cf60:	ldr	r6, [r9, #1624]	; 0x658
   1cf64:	cmp	r6, #0
   1cf68:	beq	1d568 <crc32@@Base+0x3e20>
   1cf6c:	ldr	r5, [pc, #1912]	; 1d6ec <crc32@@Base+0x3fa4>
   1cf70:	subs	r0, sl, #1
   1cf74:	mov	r3, #0
   1cf78:	mvn	r8, #0
   1cf7c:	sbc	r1, r3, #0
   1cf80:	rsbs	r2, sl, #0
   1cf84:	rsc	r3, r3, #0
   1cf88:	strd	r0, [sp, #16]
   1cf8c:	strd	r2, [sp, #24]
   1cf90:	sub	r3, r6, #2
   1cf94:	cmp	r3, #15
   1cf98:	ldrls	pc, [pc, r3, lsl #2]
   1cf9c:	b	1d538 <crc32@@Base+0x3df0>
   1cfa0:	andeq	sp, r1, r8, ror #3
   1cfa4:	andeq	sp, r1, r4, lsl #3
   1cfa8:	andeq	sp, r1, r8, ror #3
   1cfac:	andeq	sp, r1, r8, ror #3
   1cfb0:	andeq	sp, r1, r8, ror #3
   1cfb4:	andeq	sp, r1, r8, lsr r5
   1cfb8:	andeq	sp, r1, r8, lsr r5
   1cfbc:	andeq	sp, r1, r8, lsr r5
   1cfc0:	andeq	sp, r1, r4, ror #2
   1cfc4:	andeq	sp, r1, r8, lsr r5
   1cfc8:	strdeq	sp, [r1], -r4
   1cfcc:	andeq	sp, r1, ip, lsl r0
   1cfd0:	andeq	sp, r1, r8, ror #3
   1cfd4:	andeq	sp, r1, r4, ror #4
   1cfd8:	andeq	ip, r1, r0, ror #31
   1cfdc:	andeq	sp, r1, r8, ror #3
   1cfe0:	ldrd	r2, [r5, #16]
   1cfe4:	asr	r1, r4, #31
   1cfe8:	cmp	r1, r3
   1cfec:	cmpeq	r4, r2
   1cff0:	bhi	1d62c <crc32@@Base+0x3ee4>
   1cff4:	ldrd	r0, [sp, #16]
   1cff8:	ldrd	r6, [sp, #24]
   1cffc:	adds	r0, r0, r2
   1d000:	adc	r1, r1, r3
   1d004:	and	r6, r6, r0
   1d008:	and	r7, r7, r1
   1d00c:	cmp	r3, r7
   1d010:	cmpeq	r2, r6
   1d014:	bne	1d598 <crc32@@Base+0x3e50>
   1d018:	mov	r4, r2
   1d01c:	ldr	r6, [r5, #40]!	; 0x28
   1d020:	cmp	r6, #0
   1d024:	bne	1cf90 <crc32@@Base+0x3848>
   1d028:	ldr	r6, [r9, #1624]	; 0x658
   1d02c:	ldr	r4, [pc, #1720]	; 1d6ec <crc32@@Base+0x3fa4>
   1d030:	mov	r7, #0
   1d034:	mov	r5, r4
   1d038:	b	1d048 <crc32@@Base+0x3900>
   1d03c:	ldr	r6, [r5, #40]!	; 0x28
   1d040:	cmp	r6, #0
   1d044:	beq	1d06c <crc32@@Base+0x3924>
   1d048:	cmp	r6, #13
   1d04c:	bne	1d03c <crc32@@Base+0x38f4>
   1d050:	ldr	r1, [r5, #4]
   1d054:	add	r7, r7, #1024	; 0x400
   1d058:	ldr	r0, [sp, #992]	; 0x3e0
   1d05c:	bl	1c54c <crc32@@Base+0x2e04>
   1d060:	ldr	r6, [r5, #40]!	; 0x28
   1d064:	cmp	r6, #0
   1d068:	bne	1d048 <crc32@@Base+0x3900>
   1d06c:	mov	r1, r7
   1d070:	mov	r2, r6
   1d074:	ldr	r0, [sp, #992]	; 0x3e0
   1d078:	str	r7, [sp, #12]
   1d07c:	bl	124f4 <lseek@plt>
   1d080:	cmp	r0, #0
   1d084:	blt	1d67c <crc32@@Base+0x3f34>
   1d088:	cmn	r8, #1
   1d08c:	bne	1d27c <crc32@@Base+0x3b34>
   1d090:	ldr	r3, [r9, #1624]	; 0x658
   1d094:	cmp	r3, #0
   1d098:	beq	1d0d4 <crc32@@Base+0x398c>
   1d09c:	movw	r5, #16764	; 0x417c
   1d0a0:	movt	r5, #2
   1d0a4:	cmp	r3, #17
   1d0a8:	bhi	1d0c8 <crc32@@Base+0x3980>
   1d0ac:	mvn	r3, r5, lsr r3
   1d0b0:	tst	r3, #1
   1d0b4:	bne	1d0c8 <crc32@@Base+0x3980>
   1d0b8:	mov	r3, sl
   1d0bc:	ldmib	r4, {r1, r2}
   1d0c0:	ldr	r0, [sp, #992]	; 0x3e0
   1d0c4:	bl	1c104 <crc32@@Base+0x29bc>
   1d0c8:	ldr	r3, [r4, #40]!	; 0x28
   1d0cc:	cmp	r3, #0
   1d0d0:	bne	1d0a4 <crc32@@Base+0x395c>
   1d0d4:	ldr	r3, [sp, #36]	; 0x24
   1d0d8:	mov	r0, #0
   1d0dc:	ldr	r2, [sp, #948]	; 0x3b4
   1d0e0:	ldr	r3, [r3]
   1d0e4:	cmp	r2, r3
   1d0e8:	bne	1d6e4 <crc32@@Base+0x3f9c>
   1d0ec:	add	sp, sp, #956	; 0x3bc
   1d0f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d0f4:	add	r8, r8, #1
   1d0f8:	mov	ip, #808	; 0x328
   1d0fc:	ldr	r7, [sp, #32]
   1d100:	mov	lr, #16
   1d104:	mla	ip, ip, r8, r9
   1d108:	ldr	r0, [sp, #8]
   1d10c:	mvn	r6, #111	; 0x6f
   1d110:	movw	r2, #39352	; 0x99b8
   1d114:	mov	r3, lr
   1d118:	movt	r2, #3
   1d11c:	mov	r1, #1
   1d120:	ldr	r0, [r0]
   1d124:	strh	r7, [ip, #16]
   1d128:	ldr	r7, [sp, #12]
   1d12c:	strb	r6, [ip, #795]	; 0x31b
   1d130:	mov	r6, #1024	; 0x400
   1d134:	strb	lr, [ip, #793]	; 0x319
   1d138:	str	r6, [ip, #812]	; 0x32c
   1d13c:	mov	r6, #0
   1d140:	strb	r7, [ip, #18]
   1d144:	strb	r6, [ip, #794]	; 0x31a
   1d148:	str	lr, [ip, #12]
   1d14c:	bl	122b4 <__fprintf_chk@plt>
   1d150:	str	r6, [r9, #4]
   1d154:	ldr	r6, [r5, #40]!	; 0x28
   1d158:	cmp	r6, #0
   1d15c:	bne	1cf90 <crc32@@Base+0x3848>
   1d160:	b	1d028 <crc32@@Base+0x38e0>
   1d164:	ldr	r3, [r5, #24]
   1d168:	ldr	r6, [r5, #40]!	; 0x28
   1d16c:	lsr	r3, r3, #16
   1d170:	cmp	r6, #0
   1d174:	lsl	r3, r3, #16
   1d178:	str	r3, [r9, #4]
   1d17c:	bne	1cf90 <crc32@@Base+0x3848>
   1d180:	b	1d028 <crc32@@Base+0x38e0>
   1d184:	cmn	r8, #1
   1d188:	beq	1d570 <crc32@@Base+0x3e28>
   1d18c:	ldr	r1, [r5, #4]
   1d190:	add	r0, sp, #48	; 0x30
   1d194:	bl	1c050 <crc32@@Base+0x2908>
   1d198:	ldr	r1, [r5, #4]
   1d19c:	ldr	r2, [sp, #92]	; 0x5c
   1d1a0:	mov	ip, #808	; 0x328
   1d1a4:	ldr	r0, [pc, #1340]	; 1d6e8 <crc32@@Base+0x3fa0>
   1d1a8:	mov	r3, r4
   1d1ac:	str	r1, [sp, #4]
   1d1b0:	mov	r1, fp
   1d1b4:	str	r2, [sp]
   1d1b8:	mov	r2, r5
   1d1bc:	mla	r0, ip, r8, r0
   1d1c0:	bl	1c994 <crc32@@Base+0x324c>
   1d1c4:	mov	r0, r4
   1d1c8:	asr	r1, r4, #31
   1d1cc:	strd	r0, [r5, #8]
   1d1d0:	ldr	r6, [r5, #40]!	; 0x28
   1d1d4:	ldr	r3, [sp, #92]	; 0x5c
   1d1d8:	cmp	r6, #0
   1d1dc:	add	r4, r4, r3
   1d1e0:	bne	1cf90 <crc32@@Base+0x3848>
   1d1e4:	b	1d028 <crc32@@Base+0x38e0>
   1d1e8:	cmn	r8, #1
   1d1ec:	beq	1d570 <crc32@@Base+0x3e28>
   1d1f0:	ldr	r1, [r5, #4]
   1d1f4:	add	r0, sp, #48	; 0x30
   1d1f8:	bl	1c050 <crc32@@Base+0x2908>
   1d1fc:	ldr	r2, [r5, #4]
   1d200:	ldr	r3, [sp, #92]	; 0x5c
   1d204:	sub	r6, sl, #1
   1d208:	ldr	r1, [pc, #1240]	; 1d6e8 <crc32@@Base+0x3fa0>
   1d20c:	rsb	r7, sl, #0
   1d210:	add	r3, r6, r3
   1d214:	mov	r0, #808	; 0x328
   1d218:	and	r3, r3, r7
   1d21c:	str	r2, [sp, #4]
   1d220:	mla	r0, r0, r8, r1
   1d224:	str	r3, [sp]
   1d228:	mov	r2, r5
   1d22c:	mov	r3, r4
   1d230:	mov	r1, fp
   1d234:	bl	1c994 <crc32@@Base+0x324c>
   1d238:	ldr	r3, [sp, #92]	; 0x5c
   1d23c:	mov	r0, r4
   1d240:	asr	r1, r4, #31
   1d244:	add	r6, r6, r3
   1d248:	strd	r0, [r5, #8]
   1d24c:	and	r7, r7, r6
   1d250:	ldr	r6, [r5, #40]!	; 0x28
   1d254:	add	r4, r4, r7
   1d258:	cmp	r6, #0
   1d25c:	bne	1cf90 <crc32@@Base+0x3848>
   1d260:	b	1d028 <crc32@@Base+0x38e0>
   1d264:	ldr	r3, [r5, #24]
   1d268:	ldr	r6, [r5, #40]!	; 0x28
   1d26c:	cmp	r6, #0
   1d270:	str	r3, [r9]
   1d274:	bne	1cf90 <crc32@@Base+0x3848>
   1d278:	b	1d028 <crc32@@Base+0x38e0>
   1d27c:	add	r8, r8, #1
   1d280:	ands	r3, r8, #255	; 0xff
   1d284:	str	r3, [sp, #32]
   1d288:	beq	1d514 <crc32@@Base+0x3dcc>
   1d28c:	movw	r3, #39524	; 0x9a64
   1d290:	ldr	r8, [pc, #1104]	; 1d6e8 <crc32@@Base+0x3fa0>
   1d294:	movt	r3, #3
   1d298:	ldr	r7, [sp, #8]
   1d29c:	str	sl, [sp, #40]	; 0x28
   1d2a0:	mov	fp, r6
   1d2a4:	mov	sl, r3
   1d2a8:	movw	r2, #39556	; 0x9a84
   1d2ac:	str	r4, [sp, #24]
   1d2b0:	movt	r2, #3
   1d2b4:	str	r2, [sp, #16]
   1d2b8:	mov	r3, #808	; 0x328
   1d2bc:	ldrb	r1, [r8, #11]
   1d2c0:	mla	r4, r3, r6, r9
   1d2c4:	ldr	r3, [sp, #12]
   1d2c8:	lsl	r1, r1, #7
   1d2cc:	ldr	r0, [r7]
   1d2d0:	add	r5, fp, r3
   1d2d4:	add	lr, r1, #16
   1d2d8:	str	r5, [sp]
   1d2dc:	add	ip, r1, #32
   1d2e0:	strh	lr, [r8, #12]
   1d2e4:	mov	r3, r6
   1d2e8:	mov	r2, sl
   1d2ec:	mov	r1, #1
   1d2f0:	strh	ip, [r4, #9]
   1d2f4:	add	r8, r8, #808	; 0x328
   1d2f8:	bl	122b4 <__fprintf_chk@plt>
   1d2fc:	ldrh	r2, [r4, #9]
   1d300:	mov	r3, r6
   1d304:	ldr	r0, [r7]
   1d308:	add	r5, r2, r5
   1d30c:	mov	r1, #1
   1d310:	ldr	r2, [sp, #16]
   1d314:	sub	r5, r5, #16
   1d318:	str	r5, [sp]
   1d31c:	add	r6, r6, #1
   1d320:	bl	122b4 <__fprintf_chk@plt>
   1d324:	ldr	r2, [r8, #-4]
   1d328:	ldrh	r3, [r4, #9]
   1d32c:	ldr	r1, [sp, #32]
   1d330:	uxth	r2, r2
   1d334:	sub	r3, r3, #1
   1d338:	add	r3, r2, r3
   1d33c:	rsb	r2, r2, #0
   1d340:	and	r3, r3, r2
   1d344:	cmp	r6, r1
   1d348:	add	fp, fp, r3
   1d34c:	uxth	fp, fp
   1d350:	blt	1d2b8 <crc32@@Base+0x3b70>
   1d354:	mov	r0, fp
   1d358:	mov	r1, #1
   1d35c:	ldr	r4, [sp, #24]
   1d360:	ldr	sl, [sp, #40]	; 0x28
   1d364:	str	fp, [sp, #24]
   1d368:	bl	12518 <calloc@plt>
   1d36c:	subs	r3, r0, #0
   1d370:	str	r3, [sp, #8]
   1d374:	beq	1d6bc <crc32@@Base+0x3f74>
   1d378:	ldr	r8, [pc, #872]	; 1d6e8 <crc32@@Base+0x3fa0>
   1d37c:	mov	fp, #0
   1d380:	ldr	ip, [sp, #8]
   1d384:	mov	r3, #808	; 0x328
   1d388:	str	r4, [sp, #40]	; 0x28
   1d38c:	str	r3, [sp, #16]
   1d390:	str	sl, [sp, #44]	; 0x2c
   1d394:	mov	lr, r8
   1d398:	ldrb	r7, [r8, #11]
   1d39c:	ldm	lr!, {r0, r1, r2, r3}
   1d3a0:	cmp	r7, #0
   1d3a4:	ldr	lr, [sp, #8]
   1d3a8:	add	r6, ip, #16
   1d3ac:	sub	lr, ip, lr
   1d3b0:	str	r0, [ip]
   1d3b4:	str	r1, [ip, #4]
   1d3b8:	str	r2, [ip, #8]
   1d3bc:	str	r3, [ip, #12]
   1d3c0:	beq	1d430 <crc32@@Base+0x3ce8>
   1d3c4:	ldr	r3, [sp, #16]
   1d3c8:	lsl	r7, r7, #7
   1d3cc:	ldr	r2, [pc, #788]	; 1d6e8 <crc32@@Base+0x3fa0>
   1d3d0:	mla	r1, r3, fp, r2
   1d3d4:	ldr	r3, [sp, #12]
   1d3d8:	add	lr, r3, lr
   1d3dc:	mov	r3, r8
   1d3e0:	add	r1, r1, r7
   1d3e4:	ldr	r2, [r3, #16]
   1d3e8:	add	r3, r3, #128	; 0x80
   1d3ec:	sub	r2, r2, lr
   1d3f0:	str	r2, [r3, #-112]	; 0xffffff90
   1d3f4:	cmp	r1, r3
   1d3f8:	bne	1d3e4 <crc32@@Base+0x3c9c>
   1d3fc:	add	r4, r7, #16
   1d400:	add	sl, r8, #16
   1d404:	add	r4, ip, r4
   1d408:	mov	r5, r6
   1d40c:	mov	r2, #128	; 0x80
   1d410:	mov	r1, sl
   1d414:	mov	r0, r5
   1d418:	add	r5, r5, r2
   1d41c:	bl	1259c <memcpy@plt>
   1d420:	cmp	r4, r5
   1d424:	add	sl, sl, #128	; 0x80
   1d428:	bne	1d40c <crc32@@Base+0x3cc4>
   1d42c:	add	r6, r6, r7
   1d430:	mov	r2, r8
   1d434:	ldr	r1, [sp, #16]
   1d438:	ldr	r0, [r2, #784]!	; 0x310
   1d43c:	add	r8, r8, #808	; 0x328
   1d440:	ldr	r3, [r8, #-4]
   1d444:	mla	r1, r1, fp, r9
   1d448:	str	r0, [r6]
   1d44c:	ldr	r0, [sp, #32]
   1d450:	add	fp, fp, #1
   1d454:	ldr	ip, [r2, #4]
   1d458:	uxth	r3, r3
   1d45c:	cmp	fp, r0
   1d460:	ldr	r0, [r2, #8]
   1d464:	ldr	r2, [r2, #12]
   1d468:	sub	r4, r3, #1
   1d46c:	str	ip, [r6, #4]
   1d470:	rsb	r3, r3, #0
   1d474:	str	r0, [r6, #8]
   1d478:	mov	fp, #1
   1d47c:	str	r2, [r6, #12]
   1d480:	ldrh	ip, [r1, #9]
   1d484:	add	r4, r4, ip
   1d488:	and	r4, r4, r3
   1d48c:	sub	r4, r4, ip
   1d490:	add	r4, r4, #16
   1d494:	add	ip, r6, r4
   1d498:	blt	1d394 <crc32@@Base+0x3c4c>
   1d49c:	ldr	r4, [sp, #40]	; 0x28
   1d4a0:	ldr	sl, [sp, #44]	; 0x2c
   1d4a4:	ldr	r5, [sp, #24]
   1d4a8:	ldr	r1, [sp, #8]
   1d4ac:	ldr	r0, [sp, #992]	; 0x3e0
   1d4b0:	mov	r2, r5
   1d4b4:	bl	12608 <write@plt>
   1d4b8:	cmp	r0, r5
   1d4bc:	bne	1d654 <crc32@@Base+0x3f0c>
   1d4c0:	ldr	r0, [sp, #8]
   1d4c4:	bl	12128 <free@plt>
   1d4c8:	b	1d090 <crc32@@Base+0x3948>
   1d4cc:	movw	r3, #65048	; 0xfe18
   1d4d0:	movt	r3, #4
   1d4d4:	movw	r0, #39160	; 0x98f8
   1d4d8:	mov	r2, #22
   1d4dc:	ldr	r3, [r3]
   1d4e0:	mov	r1, fp
   1d4e4:	movt	r0, #3
   1d4e8:	bl	12578 <fwrite@plt>
   1d4ec:	b	1ce68 <crc32@@Base+0x3720>
   1d4f0:	movw	r3, #65048	; 0xfe18
   1d4f4:	movt	r3, #4
   1d4f8:	movw	r0, #39184	; 0x9910
   1d4fc:	mov	r2, #21
   1d500:	ldr	r3, [r3]
   1d504:	mov	r1, #1
   1d508:	movt	r0, #3
   1d50c:	bl	12578 <fwrite@plt>
   1d510:	b	1ce68 <crc32@@Base+0x3720>
   1d514:	ldr	r5, [sp, #32]
   1d518:	mov	r1, #1
   1d51c:	mov	r0, r5
   1d520:	bl	12518 <calloc@plt>
   1d524:	subs	r3, r0, #0
   1d528:	str	r3, [sp, #8]
   1d52c:	beq	1d6b8 <crc32@@Base+0x3f70>
   1d530:	str	r5, [sp, #24]
   1d534:	b	1d4a4 <crc32@@Base+0x3d5c>
   1d538:	movw	r1, #65044	; 0xfe14
   1d53c:	movt	r1, #4
   1d540:	mov	r3, r6
   1d544:	movw	r2, #39480	; 0x9a38
   1d548:	ldr	r0, [r1]
   1d54c:	movt	r2, #3
   1d550:	mov	r1, #1
   1d554:	bl	122b4 <__fprintf_chk@plt>
   1d558:	mov	r0, #1
   1d55c:	bl	121f4 <exit@plt>
   1d560:	mov	r4, #8192	; 0x2000
   1d564:	b	1cf3c <crc32@@Base+0x37f4>
   1d568:	mvn	r8, #0
   1d56c:	b	1d02c <crc32@@Base+0x38e4>
   1d570:	movw	r3, #65044	; 0xfe14
   1d574:	movt	r3, #4
   1d578:	movw	r0, #39332	; 0x99a4
   1d57c:	mov	r2, #19
   1d580:	ldr	r3, [r3]
   1d584:	movt	r0, #3
   1d588:	mov	r1, #1
   1d58c:	bl	12578 <fwrite@plt>
   1d590:	mov	r0, #1
   1d594:	bl	121f4 <exit@plt>
   1d598:	movw	r3, #65044	; 0xfe14
   1d59c:	movt	r3, #4
   1d5a0:	movw	r0, #39428	; 0x9a04
   1d5a4:	mov	r2, #49	; 0x31
   1d5a8:	ldr	r3, [r3]
   1d5ac:	movt	r0, #3
   1d5b0:	mov	r1, #1
   1d5b4:	bl	12578 <fwrite@plt>
   1d5b8:	mov	r0, #1
   1d5bc:	bl	121f4 <exit@plt>
   1d5c0:	movw	r1, #65044	; 0xfe14
   1d5c4:	movt	r1, #4
   1d5c8:	ldr	r3, [r5, #4]
   1d5cc:	movw	r2, #39208	; 0x9928
   1d5d0:	ldr	r0, [r1]
   1d5d4:	movt	r2, #3
   1d5d8:	mov	r1, #1
   1d5dc:	bl	122b4 <__fprintf_chk@plt>
   1d5e0:	mov	r0, #1
   1d5e4:	bl	121f4 <exit@plt>
   1d5e8:	movw	r3, #65044	; 0xfe14
   1d5ec:	movt	r3, #4
   1d5f0:	movw	r0, #39268	; 0x9964
   1d5f4:	mov	r2, #23
   1d5f8:	ldr	r3, [r3]
   1d5fc:	movt	r0, #3
   1d600:	mov	r1, r7
   1d604:	bl	12578 <fwrite@plt>
   1d608:	mov	r0, r7
   1d60c:	bl	121f4 <exit@plt>
   1d610:	mov	r2, r0
   1d614:	movw	r1, #39244	; 0x994c
   1d618:	mov	r0, #1
   1d61c:	movt	r1, #3
   1d620:	bl	12770 <__printf_chk@plt>
   1d624:	mov	r0, #1
   1d628:	bl	121f4 <exit@plt>
   1d62c:	movw	r3, #65044	; 0xfe14
   1d630:	movt	r3, #4
   1d634:	movw	r0, #39376	; 0x99d0
   1d638:	mov	r2, #49	; 0x31
   1d63c:	ldr	r3, [r3]
   1d640:	movt	r0, #3
   1d644:	mov	r1, #1
   1d648:	bl	12578 <fwrite@plt>
   1d64c:	mov	r0, #1
   1d650:	bl	121f4 <exit@plt>
   1d654:	movw	r3, #65044	; 0xfe14
   1d658:	movt	r3, #4
   1d65c:	movw	r0, #39644	; 0x9adc
   1d660:	mov	r2, #24
   1d664:	ldr	r3, [r3]
   1d668:	movt	r0, #3
   1d66c:	mov	r1, #1
   1d670:	bl	12578 <fwrite@plt>
   1d674:	mov	r0, #1
   1d678:	bl	121f4 <exit@plt>
   1d67c:	movw	r3, #65044	; 0xfe14
   1d680:	movt	r3, #4
   1d684:	ldr	r4, [r3]
   1d688:	bl	1268c <__errno_location@plt>
   1d68c:	ldr	r0, [r0]
   1d690:	bl	12200 <strerror@plt>
   1d694:	movw	r2, #38612	; 0x96d4
   1d698:	ldr	r3, [pc, #80]	; 1d6f0 <crc32@@Base+0x3fa8>
   1d69c:	movt	r2, #3
   1d6a0:	mov	r1, #1
   1d6a4:	str	r0, [sp]
   1d6a8:	mov	r0, r4
   1d6ac:	bl	122b4 <__fprintf_chk@plt>
   1d6b0:	mov	r0, #1
   1d6b4:	bl	121f4 <exit@plt>
   1d6b8:	ldr	fp, [sp, #8]
   1d6bc:	movw	r1, #65044	; 0xfe14
   1d6c0:	movt	r1, #4
   1d6c4:	mov	r3, fp
   1d6c8:	movw	r2, #39612	; 0x9abc
   1d6cc:	ldr	r0, [r1]
   1d6d0:	movt	r2, #3
   1d6d4:	mov	r1, #1
   1d6d8:	bl	122b4 <__fprintf_chk@plt>
   1d6dc:	mov	r0, #1
   1d6e0:	bl	121f4 <exit@plt>
   1d6e4:	bl	12494 <__stack_chk_fail@plt>
   1d6e8:	andeq	r0, r6, r8, lsl r0
   1d6ec:	andeq	r0, r6, r8, ror #12
   1d6f0:	andeq	r9, r3, ip, ror r6
   1d6f4:	push	{r4, r5, lr}
   1d6f8:	mov	ip, r0
   1d6fc:	ldrh	r4, [sp, #12]
   1d700:	movw	r0, #65048	; 0xfe18
   1d704:	movt	r0, #4
   1d708:	mvn	r5, #111	; 0x6f
   1d70c:	str	r2, [ip, #804]	; 0x324
   1d710:	movw	r2, #39352	; 0x99b8
   1d714:	strb	r5, [ip, #787]	; 0x313
   1d718:	movt	r2, #3
   1d71c:	mov	r5, #16
   1d720:	strh	r1, [ip, #8]
   1d724:	strb	r5, [ip, #785]	; 0x311
   1d728:	mov	r1, #1
   1d72c:	mov	r5, #0
   1d730:	strb	r4, [ip, #10]
   1d734:	strb	r5, [ip, #786]	; 0x312
   1d738:	ldr	r0, [r0]
   1d73c:	str	r3, [ip, #4]
   1d740:	pop	{r4, r5, lr}
   1d744:	b	122b4 <__fprintf_chk@plt>
   1d748:	movw	r3, #61168	; 0xeef0
   1d74c:	movt	r3, #4
   1d750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d754:	movw	r2, #65048	; 0xfe18
   1d758:	sub	sp, sp, #60	; 0x3c
   1d75c:	ldr	ip, [r3]
   1d760:	movt	r2, #4
   1d764:	mov	r4, r1
   1d768:	str	r3, [sp, #24]
   1d76c:	mov	r7, #0
   1d770:	ldr	r3, [r1, #64]	; 0x40
   1d774:	mov	r1, #1
   1d778:	str	r2, [sp, #16]
   1d77c:	str	r0, [sp, #20]
   1d780:	ldr	r0, [r2]
   1d784:	movw	r2, #39672	; 0x9af8
   1d788:	movt	r2, #3
   1d78c:	str	ip, [sp, #52]	; 0x34
   1d790:	bl	122b4 <__fprintf_chk@plt>
   1d794:	ldr	r3, [r4, #64]	; 0x40
   1d798:	movw	r1, #49448	; 0xc128
   1d79c:	movt	r1, #3
   1d7a0:	str	r7, [sp, #36]	; 0x24
   1d7a4:	mov	r0, r3
   1d7a8:	str	r3, [sp, #28]
   1d7ac:	bl	1232c <fopen@plt>
   1d7b0:	subs	r3, r0, #0
   1d7b4:	str	r3, [sp, #8]
   1d7b8:	beq	1e1f8 <crc32@@Base+0x4ab0>
   1d7bc:	ldr	fp, [pc, #2776]	; 1e29c <crc32@@Base+0x4b54>
   1d7c0:	movw	r5, #25388	; 0x632c
   1d7c4:	movt	r5, #3
   1d7c8:	movw	r3, #25384	; 0x6328
   1d7cc:	movt	r3, #3
   1d7d0:	str	r3, [sp, #12]
   1d7d4:	ldr	r3, [sp, #8]
   1d7d8:	mov	r2, #10
   1d7dc:	add	r1, sp, #48	; 0x30
   1d7e0:	add	r0, sp, #36	; 0x24
   1d7e4:	bl	12134 <__getdelim@plt>
   1d7e8:	cmp	r0, #0
   1d7ec:	ble	1db24 <crc32@@Base+0x43dc>
   1d7f0:	add	r2, sp, #40	; 0x28
   1d7f4:	ldr	r1, [sp, #12]
   1d7f8:	ldr	r0, [sp, #36]	; 0x24
   1d7fc:	add	r7, r7, #1
   1d800:	bl	12224 <__strtok_r@plt>
   1d804:	cmp	r0, #0
   1d808:	beq	1d7d4 <crc32@@Base+0x408c>
   1d80c:	mvn	r6, #0
   1d810:	mov	r4, #0
   1d814:	str	r0, [sp, #36]	; 0x24
   1d818:	add	r2, sp, #44	; 0x2c
   1d81c:	mov	r1, r5
   1d820:	bl	12224 <__strtok_r@plt>
   1d824:	subs	sl, r0, #0
   1d828:	beq	1d7d4 <crc32@@Base+0x408c>
   1d82c:	ldrb	r3, [sl]
   1d830:	cmp	r3, #35	; 0x23
   1d834:	beq	1d7d4 <crc32@@Base+0x408c>
   1d838:	cmp	r4, #3
   1d83c:	ldrls	pc, [pc, r4, lsl #2]
   1d840:	b	1da5c <crc32@@Base+0x4314>
   1d844:	andeq	sp, r1, r4, asr r8
   1d848:	andeq	sp, r1, ip, lsr #17
   1d84c:	andeq	sp, r1, r8, lsl #19
   1d850:	andeq	sp, r1, ip, lsl #20
   1d854:	movw	r8, #62988	; 0xf60c
   1d858:	movt	r8, #4
   1d85c:	movw	r1, #39720	; 0x9b28
   1d860:	mov	r2, sl
   1d864:	mov	r0, r8
   1d868:	movt	r1, #3
   1d86c:	bl	1a5c8 <crc32@@Base+0xe80>
   1d870:	subs	r6, r0, #0
   1d874:	blt	1e1a0 <crc32@@Base+0x4a58>
   1d878:	cmp	r6, #10
   1d87c:	beq	1d8ec <crc32@@Base+0x41a4>
   1d880:	mov	r3, #0
   1d884:	add	r2, sp, #44	; 0x2c
   1d888:	mov	r0, r3
   1d88c:	mov	r1, r5
   1d890:	str	r3, [sp, #36]	; 0x24
   1d894:	bl	12224 <__strtok_r@plt>
   1d898:	subs	sl, r0, #0
   1d89c:	beq	1d7d4 <crc32@@Base+0x408c>
   1d8a0:	ldrb	r3, [sl]
   1d8a4:	cmp	r3, #35	; 0x23
   1d8a8:	beq	1d7d4 <crc32@@Base+0x408c>
   1d8ac:	sub	r3, r6, #1
   1d8b0:	cmp	r3, #11
   1d8b4:	ldrls	pc, [pc, r3, lsl #2]
   1d8b8:	b	1d95c <crc32@@Base+0x4214>
   1d8bc:	andeq	sp, r1, r8, lsr pc
   1d8c0:	andeq	lr, r1, r0, asr r0
   1d8c4:	andeq	sp, r1, r4, ror #29
   1d8c8:	andeq	lr, r1, r4, lsr #2
   1d8cc:	andeq	sp, r1, r8, asr #31
   1d8d0:	andeq	sp, r1, ip, ror lr
   1d8d4:	andeq	sp, r1, ip, ror pc
   1d8d8:	andeq	lr, r1, r0, lsr r0
   1d8dc:	muleq	r1, r0, r0
   1d8e0:	andeq	sp, r1, ip, asr r9
   1d8e4:	andeq	sp, r1, ip, ror #25
   1d8e8:	andeq	sp, r1, ip, ror #25
   1d8ec:	ldr	r1, [sp, #16]
   1d8f0:	movw	r4, #16
   1d8f4:	ldr	r3, [r8, #156]	; 0x9c
   1d8f8:	movt	r4, #6
   1d8fc:	movw	r2, #39776	; 0x9b60
   1d900:	movt	r2, #3
   1d904:	add	r3, r3, #1
   1d908:	ldr	r0, [r1]
   1d90c:	mov	r1, #1
   1d910:	str	r3, [r8, #156]	; 0x9c
   1d914:	bl	122b4 <__fprintf_chk@plt>
   1d918:	ldr	r3, [r4, #2904]	; 0xb58
   1d91c:	mov	r2, #40	; 0x28
   1d920:	mov	r0, #0
   1d924:	add	r1, r3, #1
   1d928:	mov	ip, #12
   1d92c:	mla	r3, r2, r3, r4
   1d930:	str	r1, [r4, #2904]	; 0xb58
   1d934:	add	r2, sp, #44	; 0x2c
   1d938:	mov	r1, r5
   1d93c:	str	r0, [sp, #36]	; 0x24
   1d940:	str	ip, [r3, #1624]	; 0x658
   1d944:	bl	12224 <__strtok_r@plt>
   1d948:	cmp	r0, #0
   1d94c:	beq	1d7d4 <crc32@@Base+0x408c>
   1d950:	ldrb	r3, [r0]
   1d954:	cmp	r3, #35	; 0x23
   1d958:	beq	1d7d4 <crc32@@Base+0x408c>
   1d95c:	mov	r3, #0
   1d960:	add	r2, sp, #44	; 0x2c
   1d964:	mov	r0, r3
   1d968:	mov	r1, r5
   1d96c:	str	r3, [sp, #36]	; 0x24
   1d970:	bl	12224 <__strtok_r@plt>
   1d974:	subs	sl, r0, #0
   1d978:	beq	1d7d4 <crc32@@Base+0x408c>
   1d97c:	ldrb	r3, [sl]
   1d980:	cmp	r3, #35	; 0x23
   1d984:	beq	1d7d4 <crc32@@Base+0x408c>
   1d988:	cmp	r6, #4
   1d98c:	bne	1df2c <crc32@@Base+0x47e4>
   1d990:	mov	r2, #4
   1d994:	movw	r1, #39888	; 0x9bd0
   1d998:	mov	r0, sl
   1d99c:	movt	r1, #3
   1d9a0:	bl	1217c <strncmp@plt>
   1d9a4:	subs	r2, r0, #0
   1d9a8:	beq	1dbc0 <crc32@@Base+0x4478>
   1d9ac:	movw	r1, #39896	; 0x9bd8
   1d9b0:	mov	r2, #5
   1d9b4:	movt	r1, #3
   1d9b8:	mov	r0, sl
   1d9bc:	bl	1217c <strncmp@plt>
   1d9c0:	subs	r3, r0, #0
   1d9c4:	beq	1dcc4 <crc32@@Base+0x457c>
   1d9c8:	movw	r1, #39904	; 0x9be0
   1d9cc:	mov	r2, #5
   1d9d0:	movt	r1, #3
   1d9d4:	mov	r0, sl
   1d9d8:	bl	1217c <strncmp@plt>
   1d9dc:	subs	r3, r0, #0
   1d9e0:	bne	1e224 <crc32@@Base+0x4adc>
   1d9e4:	movw	r4, #16
   1d9e8:	movt	r4, #6
   1d9ec:	str	r3, [sp, #36]	; 0x24
   1d9f0:	mov	ip, #40	; 0x28
   1d9f4:	ldr	r3, [r4, #2904]	; 0xb58
   1d9f8:	add	r2, sp, #44	; 0x2c
   1d9fc:	mov	r1, r5
   1da00:	mov	r8, #236	; 0xec
   1da04:	mla	r3, ip, r3, r4
   1da08:	b	1dbe4 <crc32@@Base+0x449c>
   1da0c:	movw	r4, #16
   1da10:	movt	r4, #6
   1da14:	cmp	r6, #4
   1da18:	beq	1dc08 <crc32@@Base+0x44c0>
   1da1c:	ldr	r3, [r4, #2920]	; 0xb68
   1da20:	sub	r3, r3, #2
   1da24:	cmp	r3, #4
   1da28:	bls	1dacc <crc32@@Base+0x4384>
   1da2c:	mov	r3, #0
   1da30:	add	r2, sp, #44	; 0x2c
   1da34:	mov	r0, r3
   1da38:	mov	r1, r5
   1da3c:	str	r3, [sp, #36]	; 0x24
   1da40:	bl	12224 <__strtok_r@plt>
   1da44:	cmp	r0, #0
   1da48:	beq	1d7d4 <crc32@@Base+0x408c>
   1da4c:	ldrb	r3, [r0]
   1da50:	cmp	r3, #35	; 0x23
   1da54:	beq	1d7d4 <crc32@@Base+0x408c>
   1da58:	mov	r4, #4
   1da5c:	mov	r0, #0
   1da60:	add	r4, r4, #1
   1da64:	str	r0, [sp, #36]	; 0x24
   1da68:	b	1d818 <crc32@@Base+0x40d0>
   1da6c:	ldr	r3, [r4, #2904]	; 0xb58
   1da70:	mov	r2, #40	; 0x28
   1da74:	cmp	r6, #12
   1da78:	mov	r1, r5
   1da7c:	mov	r8, #4
   1da80:	mov	r9, #0
   1da84:	mul	r3, r2, r3
   1da88:	add	r2, sp, #44	; 0x2c
   1da8c:	movne	lr, #6
   1da90:	moveq	lr, #14
   1da94:	mov	r0, #0
   1da98:	str	r0, [sp, #36]	; 0x24
   1da9c:	add	ip, fp, r3
   1daa0:	strd	r8, [ip, #32]
   1daa4:	str	lr, [fp, r3]
   1daa8:	str	sl, [ip, #4]
   1daac:	bl	12224 <__strtok_r@plt>
   1dab0:	subs	sl, r0, #0
   1dab4:	beq	1d7d4 <crc32@@Base+0x408c>
   1dab8:	ldrb	r3, [sl]
   1dabc:	cmp	r3, #35	; 0x23
   1dac0:	beq	1d7d4 <crc32@@Base+0x408c>
   1dac4:	cmp	r6, #4
   1dac8:	beq	1dc08 <crc32@@Base+0x44c0>
   1dacc:	mov	r2, #0
   1dad0:	mov	r0, sl
   1dad4:	mov	r1, r2
   1dad8:	mov	r9, #0
   1dadc:	bl	12290 <strtoll@plt>
   1dae0:	ldr	r2, [r4, #2904]	; 0xb58
   1dae4:	mov	r3, #40	; 0x28
   1dae8:	mov	ip, #0
   1daec:	mov	r1, r5
   1daf0:	str	ip, [sp, #36]	; 0x24
   1daf4:	mla	r3, r3, r2, r4
   1daf8:	add	r2, r2, #1
   1dafc:	str	r2, [r4, #2904]	; 0xb58
   1db00:	add	r2, sp, #44	; 0x2c
   1db04:	add	r3, r3, #1616	; 0x650
   1db08:	mov	r8, r0
   1db0c:	mov	r0, ip
   1db10:	strd	r8, [r3, #32]
   1db14:	bl	12224 <__strtok_r@plt>
   1db18:	cmp	r0, #0
   1db1c:	bne	1da4c <crc32@@Base+0x4304>
   1db20:	b	1d7d4 <crc32@@Base+0x408c>
   1db24:	movw	r4, #16
   1db28:	movt	r4, #6
   1db2c:	ldr	r3, [r4, #2908]	; 0xb5c
   1db30:	cmp	r3, #0
   1db34:	beq	1e1d0 <crc32@@Base+0x4a88>
   1db38:	ldr	r6, [sp, #16]
   1db3c:	mov	r1, #1
   1db40:	movw	r2, #39956	; 0x9c14
   1db44:	movt	r2, #3
   1db48:	movw	r5, #2914	; 0xb62
   1db4c:	ldr	r0, [r6]
   1db50:	bl	122b4 <__fprintf_chk@plt>
   1db54:	ldrb	r3, [r4, #2912]	; 0xb60
   1db58:	mov	r1, #1
   1db5c:	movw	r2, #39988	; 0x9c34
   1db60:	ldr	r0, [r6]
   1db64:	movt	r2, #3
   1db68:	bl	122b4 <__fprintf_chk@plt>
   1db6c:	ldrh	r3, [r4, r5]
   1db70:	mov	r1, #1
   1db74:	ldr	r0, [r6]
   1db78:	movw	r2, #40020	; 0x9c54
   1db7c:	movt	r2, #3
   1db80:	bl	122b4 <__fprintf_chk@plt>
   1db84:	ldr	ip, [sp, #20]
   1db88:	ldrh	r3, [r4, r5]
   1db8c:	ldrb	r2, [r4, #2912]	; 0xb60
   1db90:	ldr	r1, [r4, #2908]	; 0xb5c
   1db94:	ldr	r0, [r4, #2916]	; 0xb64
   1db98:	str	ip, [sp]
   1db9c:	bl	1ce1c <crc32@@Base+0x36d4>
   1dba0:	ldr	r3, [sp, #24]
   1dba4:	ldr	r2, [sp, #52]	; 0x34
   1dba8:	mov	r0, #0
   1dbac:	ldr	r3, [r3]
   1dbb0:	cmp	r2, r3
   1dbb4:	bne	1e220 <crc32@@Base+0x4ad8>
   1dbb8:	add	sp, sp, #60	; 0x3c
   1dbbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbc0:	movw	r4, #16
   1dbc4:	movt	r4, #6
   1dbc8:	mov	ip, #40	; 0x28
   1dbcc:	str	r2, [sp, #36]	; 0x24
   1dbd0:	ldr	r3, [r4, #2904]	; 0xb58
   1dbd4:	add	r2, sp, #44	; 0x2c
   1dbd8:	mov	r1, r5
   1dbdc:	movw	r8, #357	; 0x165
   1dbe0:	mla	r3, ip, r3, r4
   1dbe4:	add	r3, r3, #1616	; 0x650
   1dbe8:	mov	r9, #0
   1dbec:	strd	r8, [r3, #40]	; 0x28
   1dbf0:	bl	12224 <__strtok_r@plt>
   1dbf4:	subs	sl, r0, #0
   1dbf8:	beq	1d7d4 <crc32@@Base+0x408c>
   1dbfc:	ldrb	r3, [sl]
   1dc00:	cmp	r3, #35	; 0x23
   1dc04:	beq	1d7d4 <crc32@@Base+0x408c>
   1dc08:	mov	r2, #0
   1dc0c:	mov	r0, sl
   1dc10:	mov	r1, r2
   1dc14:	mov	r6, r2
   1dc18:	bl	12290 <strtoll@plt>
   1dc1c:	ldr	r2, [r4, #2904]	; 0xb58
   1dc20:	mov	r3, #40	; 0x28
   1dc24:	mov	r1, r5
   1dc28:	mov	r9, #0
   1dc2c:	str	r6, [sp, #36]	; 0x24
   1dc30:	mla	r3, r3, r2, r4
   1dc34:	add	r2, r2, #1
   1dc38:	str	r2, [r4, #2904]	; 0xb58
   1dc3c:	add	r2, sp, #44	; 0x2c
   1dc40:	add	r3, r3, #1616	; 0x650
   1dc44:	mov	r8, r0
   1dc48:	mov	r0, r6
   1dc4c:	strd	r8, [r3, #32]
   1dc50:	bl	12224 <__strtok_r@plt>
   1dc54:	cmp	r0, #0
   1dc58:	beq	1d7d4 <crc32@@Base+0x408c>
   1dc5c:	ldrb	r3, [r0]
   1dc60:	cmp	r3, #35	; 0x23
   1dc64:	beq	1d7d4 <crc32@@Base+0x408c>
   1dc68:	add	r2, sp, #44	; 0x2c
   1dc6c:	mov	r1, r5
   1dc70:	mov	r0, r6
   1dc74:	str	r6, [sp, #36]	; 0x24
   1dc78:	bl	12224 <__strtok_r@plt>
   1dc7c:	cmp	r0, #0
   1dc80:	beq	1d7d4 <crc32@@Base+0x408c>
   1dc84:	ldrb	r3, [r0]
   1dc88:	cmp	r3, #35	; 0x23
   1dc8c:	beq	1d7d4 <crc32@@Base+0x408c>
   1dc90:	mov	r0, r6
   1dc94:	add	r2, sp, #44	; 0x2c
   1dc98:	mov	r1, r5
   1dc9c:	str	r6, [sp, #36]	; 0x24
   1dca0:	bl	12224 <__strtok_r@plt>
   1dca4:	cmp	r0, #0
   1dca8:	beq	1d7d4 <crc32@@Base+0x408c>
   1dcac:	ldrb	r3, [r0]
   1dcb0:	cmp	r3, #35	; 0x23
   1dcb4:	beq	1d7d4 <crc32@@Base+0x408c>
   1dcb8:	mov	r6, #4
   1dcbc:	mov	r4, #6
   1dcc0:	b	1da5c <crc32@@Base+0x4314>
   1dcc4:	movw	r4, #16
   1dcc8:	movt	r4, #6
   1dccc:	str	r3, [sp, #36]	; 0x24
   1dcd0:	mov	ip, #40	; 0x28
   1dcd4:	ldr	r3, [r4, #2904]	; 0xb58
   1dcd8:	add	r2, sp, #44	; 0x2c
   1dcdc:	mov	r1, r5
   1dce0:	movw	r8, #354	; 0x162
   1dce4:	mla	r3, ip, r3, r4
   1dce8:	b	1dbe4 <crc32@@Base+0x449c>
   1dcec:	movw	r1, #39836	; 0x9b9c
   1dcf0:	mov	r2, sl
   1dcf4:	movt	r1, #3
   1dcf8:	ldr	r0, [pc, #1440]	; 1e2a0 <crc32@@Base+0x4b58>
   1dcfc:	bl	1a5c8 <crc32@@Base+0xe80>
   1dd00:	movw	r4, #16
   1dd04:	movt	r4, #6
   1dd08:	cmp	r0, #0
   1dd0c:	str	r0, [r4, #2920]	; 0xb68
   1dd10:	blt	1e24c <crc32@@Base+0x4b04>
   1dd14:	mov	r3, #0
   1dd18:	add	r2, sp, #44	; 0x2c
   1dd1c:	mov	r0, r3
   1dd20:	mov	r1, r5
   1dd24:	str	r3, [sp, #36]	; 0x24
   1dd28:	bl	12224 <__strtok_r@plt>
   1dd2c:	subs	sl, r0, #0
   1dd30:	beq	1d7d4 <crc32@@Base+0x408c>
   1dd34:	ldrb	r3, [sl]
   1dd38:	cmp	r3, #35	; 0x23
   1dd3c:	beq	1d7d4 <crc32@@Base+0x408c>
   1dd40:	ldr	r3, [r4, #2920]	; 0xb68
   1dd44:	sub	r3, r3, #1
   1dd48:	cmp	r3, #5
   1dd4c:	ldrls	pc, [pc, r3, lsl #2]
   1dd50:	b	1e0f4 <crc32@@Base+0x49ac>
   1dd54:	andeq	sp, r1, r8, ror #27
   1dd58:	andeq	sp, r1, ip, ror #26
   1dd5c:			; <UNDEFINED> instruction: 0x0001ddb4
   1dd60:	andeq	sp, r1, ip, ror #20
   1dd64:	andeq	sp, r1, ip, ror #20
   1dd68:	andeq	sp, r1, r0, asr #28
   1dd6c:	ldr	r2, [r4, #2904]	; 0xb58
   1dd70:	mov	r3, #40	; 0x28
   1dd74:	mov	r1, r5
   1dd78:	mov	r8, #0
   1dd7c:	mov	r0, #0
   1dd80:	mov	lr, #4
   1dd84:	mul	r3, r3, r2
   1dd88:	add	r2, sp, #44	; 0x2c
   1dd8c:	str	r0, [sp, #36]	; 0x24
   1dd90:	add	ip, fp, r3
   1dd94:	str	lr, [fp, r3]
   1dd98:	str	sl, [ip, #4]
   1dd9c:	mov	r9, #0
   1dda0:	strd	r8, [ip, #32]
   1dda4:	bl	12224 <__strtok_r@plt>
   1dda8:	subs	sl, r0, #0
   1ddac:	bne	1dab8 <crc32@@Base+0x4370>
   1ddb0:	b	1d7d4 <crc32@@Base+0x408c>
   1ddb4:	ldr	r2, [r4, #2904]	; 0xb58
   1ddb8:	mov	r3, #40	; 0x28
   1ddbc:	mov	r0, #0
   1ddc0:	mov	lr, #5
   1ddc4:	str	r0, [sp, #36]	; 0x24
   1ddc8:	mov	r1, r5
   1ddcc:	mul	r3, r3, r2
   1ddd0:	mov	r8, #1
   1ddd4:	add	r2, sp, #44	; 0x2c
   1ddd8:	add	ip, fp, r3
   1dddc:	str	lr, [fp, r3]
   1dde0:	str	sl, [ip, #4]
   1dde4:	b	1dd9c <crc32@@Base+0x4654>
   1dde8:	ldr	r2, [r4, #2904]	; 0xb58
   1ddec:	mov	r3, #40	; 0x28
   1ddf0:	mov	r0, #0
   1ddf4:	mov	lr, #2
   1ddf8:	mov	r1, r5
   1ddfc:	str	r0, [sp, #36]	; 0x24
   1de00:	mul	r3, r3, r2
   1de04:	add	r2, r2, #1
   1de08:	str	r2, [r4, #2904]	; 0xb58
   1de0c:	add	r2, sp, #44	; 0x2c
   1de10:	add	ip, fp, r3
   1de14:	str	lr, [fp, r3]
   1de18:	str	sl, [ip, #4]
   1de1c:	bl	12224 <__strtok_r@plt>
   1de20:	subs	sl, r0, #0
   1de24:	beq	1d7d4 <crc32@@Base+0x408c>
   1de28:	ldrb	r3, [sl]
   1de2c:	cmp	r3, #35	; 0x23
   1de30:	beq	1d7d4 <crc32@@Base+0x408c>
   1de34:	cmp	r6, #4
   1de38:	bne	1da2c <crc32@@Base+0x42e4>
   1de3c:	b	1dc08 <crc32@@Base+0x44c0>
   1de40:	ldr	r2, [r4, #2904]	; 0xb58
   1de44:	mov	r3, #40	; 0x28
   1de48:	cmp	r6, #12
   1de4c:	mov	r0, #0
   1de50:	mov	r8, #5
   1de54:	mov	r9, #0
   1de58:	mul	r3, r3, r2
   1de5c:	movne	lr, #6
   1de60:	moveq	lr, #14
   1de64:	str	r0, [sp, #36]	; 0x24
   1de68:	add	r2, sp, #44	; 0x2c
   1de6c:	mov	r1, r5
   1de70:	add	ip, fp, r3
   1de74:	strd	r8, [ip, #32]
   1de78:	b	1daa4 <crc32@@Base+0x435c>
   1de7c:	movw	r4, #16
   1de80:	movt	r4, #6
   1de84:	mov	r3, #40	; 0x28
   1de88:	mov	r2, #0
   1de8c:	ldr	r8, [r4, #2904]	; 0xb58
   1de90:	mov	r0, sl
   1de94:	mov	ip, #10
   1de98:	mul	r3, r3, r8
   1de9c:	mov	r1, r2
   1dea0:	add	r8, r8, #1
   1dea4:	mov	r9, #0
   1dea8:	add	sl, fp, r3
   1deac:	str	ip, [fp, r3]
   1deb0:	bl	12290 <strtoll@plt>
   1deb4:	mov	r3, #0
   1deb8:	str	r8, [r4, #2904]	; 0xb58
   1debc:	add	r2, sp, #44	; 0x2c
   1dec0:	str	r3, [sp, #36]	; 0x24
   1dec4:	mov	r1, r5
   1dec8:	mov	r8, r0
   1decc:	mov	r0, r3
   1ded0:	strd	r8, [sl, #24]
   1ded4:	bl	12224 <__strtok_r@plt>
   1ded8:	subs	sl, r0, #0
   1dedc:	bne	1dd34 <crc32@@Base+0x45ec>
   1dee0:	b	1d7d4 <crc32@@Base+0x408c>
   1dee4:	mov	r2, #0
   1dee8:	mov	r0, sl
   1deec:	mov	r1, r2
   1def0:	bl	12290 <strtoll@plt>
   1def4:	ldr	ip, [pc, #936]	; 1e2a4 <crc32@@Base+0x4b5c>
   1def8:	mov	r3, #0
   1defc:	add	r2, sp, #44	; 0x2c
   1df00:	mov	r1, r5
   1df04:	str	r3, [sp, #36]	; 0x24
   1df08:	uxtb	lr, r0
   1df0c:	mov	r0, r3
   1df10:	strh	lr, [ip]
   1df14:	bl	12224 <__strtok_r@plt>
   1df18:	subs	sl, r0, #0
   1df1c:	beq	1d7d4 <crc32@@Base+0x408c>
   1df20:	ldrb	r3, [sl]
   1df24:	cmp	r3, #35	; 0x23
   1df28:	beq	1d7d4 <crc32@@Base+0x408c>
   1df2c:	movw	r4, #16
   1df30:	movt	r4, #6
   1df34:	b	1dd40 <crc32@@Base+0x45f8>
   1df38:	mov	r2, sl
   1df3c:	movw	r1, #37792	; 0x93a0
   1df40:	ldr	r0, [pc, #864]	; 1e2a8 <crc32@@Base+0x4b60>
   1df44:	movt	r1, #3
   1df48:	bl	1a5c8 <crc32@@Base+0xe80>
   1df4c:	movw	r4, #16
   1df50:	movt	r4, #6
   1df54:	mov	r3, #0
   1df58:	add	r2, sp, #44	; 0x2c
   1df5c:	mov	r1, r5
   1df60:	str	r3, [sp, #36]	; 0x24
   1df64:	str	r0, [r4, #2908]	; 0xb5c
   1df68:	mov	r0, r3
   1df6c:	bl	12224 <__strtok_r@plt>
   1df70:	subs	sl, r0, #0
   1df74:	bne	1dd34 <crc32@@Base+0x45ec>
   1df78:	b	1d7d4 <crc32@@Base+0x408c>
   1df7c:	movw	r4, #16
   1df80:	movt	r4, #6
   1df84:	mov	r3, #40	; 0x28
   1df88:	mov	r0, #0
   1df8c:	ldr	r2, [r4, #2904]	; 0xb58
   1df90:	mov	lr, #13
   1df94:	str	r0, [sp, #36]	; 0x24
   1df98:	add	r1, r2, #1
   1df9c:	str	r1, [r4, #2904]	; 0xb58
   1dfa0:	mul	r3, r3, r2
   1dfa4:	mov	r1, r5
   1dfa8:	add	r2, sp, #44	; 0x2c
   1dfac:	add	ip, fp, r3
   1dfb0:	str	lr, [fp, r3]
   1dfb4:	str	sl, [ip, #4]
   1dfb8:	bl	12224 <__strtok_r@plt>
   1dfbc:	subs	sl, r0, #0
   1dfc0:	bne	1dd34 <crc32@@Base+0x45ec>
   1dfc4:	b	1d7d4 <crc32@@Base+0x408c>
   1dfc8:	movw	r4, #16
   1dfcc:	movt	r4, #6
   1dfd0:	mov	r3, #40	; 0x28
   1dfd4:	mov	r2, #0
   1dfd8:	ldr	r8, [r4, #2904]	; 0xb58
   1dfdc:	mov	ip, #16
   1dfe0:	mov	r0, sl
   1dfe4:	mov	r1, r2
   1dfe8:	mov	r9, #0
   1dfec:	mul	r3, r3, r8
   1dff0:	add	r8, r8, #1
   1dff4:	add	sl, fp, r3
   1dff8:	str	ip, [fp, r3]
   1dffc:	bl	12290 <strtoll@plt>
   1e000:	mov	r3, #0
   1e004:	str	r8, [r4, #2904]	; 0xb58
   1e008:	add	r2, sp, #44	; 0x2c
   1e00c:	mov	r1, r5
   1e010:	str	r3, [sp, #36]	; 0x24
   1e014:	mov	r8, r0
   1e018:	mov	r0, r3
   1e01c:	strd	r8, [sl, #16]
   1e020:	bl	12224 <__strtok_r@plt>
   1e024:	subs	sl, r0, #0
   1e028:	bne	1dd34 <crc32@@Base+0x45ec>
   1e02c:	b	1d7d4 <crc32@@Base+0x408c>
   1e030:	movw	r4, #16
   1e034:	movt	r4, #6
   1e038:	mov	r3, #40	; 0x28
   1e03c:	mov	r2, #0
   1e040:	ldr	r8, [r4, #2904]	; 0xb58
   1e044:	mov	r0, sl
   1e048:	mov	ip, #15
   1e04c:	b	1de98 <crc32@@Base+0x4750>
   1e050:	mov	r2, #0
   1e054:	mov	r0, sl
   1e058:	mov	r1, r2
   1e05c:	movw	r4, #16
   1e060:	bl	12290 <strtoll@plt>
   1e064:	movt	r4, #6
   1e068:	mov	r3, #0
   1e06c:	add	r2, sp, #44	; 0x2c
   1e070:	mov	r1, r5
   1e074:	str	r3, [sp, #36]	; 0x24
   1e078:	strb	r0, [r4, #2912]	; 0xb60
   1e07c:	mov	r0, r3
   1e080:	bl	12224 <__strtok_r@plt>
   1e084:	subs	sl, r0, #0
   1e088:	bne	1dd34 <crc32@@Base+0x45ec>
   1e08c:	b	1d7d4 <crc32@@Base+0x408c>
   1e090:	movw	r1, #39796	; 0x9b74
   1e094:	mov	r2, #6
   1e098:	movt	r1, #3
   1e09c:	mov	r0, sl
   1e0a0:	bl	1217c <strncmp@plt>
   1e0a4:	subs	r3, r0, #0
   1e0a8:	beq	1e174 <crc32@@Base+0x4a2c>
   1e0ac:	mov	r0, sl
   1e0b0:	movw	r1, #39804	; 0x9b7c
   1e0b4:	mov	r2, #6
   1e0b8:	movt	r1, #3
   1e0bc:	bl	1217c <strncmp@plt>
   1e0c0:	subs	r3, r0, #0
   1e0c4:	bne	1e274 <crc32@@Base+0x4b2c>
   1e0c8:	movw	r4, #16
   1e0cc:	movt	r4, #6
   1e0d0:	add	r2, sp, #44	; 0x2c
   1e0d4:	mov	r1, r5
   1e0d8:	str	r3, [sp, #36]	; 0x24
   1e0dc:	mov	r3, #2
   1e0e0:	str	r3, [r4, #2916]	; 0xb64
   1e0e4:	bl	12224 <__strtok_r@plt>
   1e0e8:	subs	sl, r0, #0
   1e0ec:	bne	1dd34 <crc32@@Base+0x45ec>
   1e0f0:	b	1d7d4 <crc32@@Base+0x408c>
   1e0f4:	mov	r3, #0
   1e0f8:	add	r2, sp, #44	; 0x2c
   1e0fc:	mov	r0, r3
   1e100:	mov	r1, r5
   1e104:	str	r3, [sp, #36]	; 0x24
   1e108:	bl	12224 <__strtok_r@plt>
   1e10c:	subs	sl, r0, #0
   1e110:	beq	1d7d4 <crc32@@Base+0x408c>
   1e114:	ldrb	r3, [sl]
   1e118:	cmp	r3, #35	; 0x23
   1e11c:	bne	1da14 <crc32@@Base+0x42cc>
   1e120:	b	1d7d4 <crc32@@Base+0x408c>
   1e124:	movw	r4, #16
   1e128:	movt	r4, #6
   1e12c:	mov	r3, #40	; 0x28
   1e130:	mov	r0, #0
   1e134:	ldr	r2, [r4, #2904]	; 0xb58
   1e138:	mov	lr, #17
   1e13c:	mov	r1, r5
   1e140:	str	r0, [sp, #36]	; 0x24
   1e144:	mul	r3, r3, r2
   1e148:	add	r2, sp, #44	; 0x2c
   1e14c:	add	ip, fp, r3
   1e150:	str	lr, [fp, r3]
   1e154:	str	sl, [ip, #4]
   1e158:	bl	12224 <__strtok_r@plt>
   1e15c:	subs	sl, r0, #0
   1e160:	beq	1d7d4 <crc32@@Base+0x408c>
   1e164:	ldrb	r3, [sl]
   1e168:	cmp	r3, #35	; 0x23
   1e16c:	bne	1d990 <crc32@@Base+0x4248>
   1e170:	b	1d7d4 <crc32@@Base+0x408c>
   1e174:	movw	r4, #16
   1e178:	movt	r4, #6
   1e17c:	add	r2, sp, #44	; 0x2c
   1e180:	mov	r1, r5
   1e184:	str	r3, [sp, #36]	; 0x24
   1e188:	mov	r3, #1
   1e18c:	str	r3, [r4, #2916]	; 0xb64
   1e190:	bl	12224 <__strtok_r@plt>
   1e194:	subs	sl, r0, #0
   1e198:	bne	1dd34 <crc32@@Base+0x45ec>
   1e19c:	b	1d7d4 <crc32@@Base+0x408c>
   1e1a0:	movw	r2, #65044	; 0xfe14
   1e1a4:	movt	r2, #4
   1e1a8:	str	sl, [sp, #4]
   1e1ac:	mov	r1, #1
   1e1b0:	ldr	r0, [r2]
   1e1b4:	movw	r2, #39736	; 0x9b38
   1e1b8:	ldr	r3, [sp, #28]
   1e1bc:	movt	r2, #3
   1e1c0:	str	r7, [sp]
   1e1c4:	bl	122b4 <__fprintf_chk@plt>
   1e1c8:	mov	r0, #1
   1e1cc:	bl	121f4 <exit@plt>
   1e1d0:	movw	r3, #65044	; 0xfe14
   1e1d4:	movt	r3, #4
   1e1d8:	movw	r0, #39936	; 0x9c00
   1e1dc:	mov	r2, #18
   1e1e0:	ldr	r3, [r3]
   1e1e4:	movt	r0, #3
   1e1e8:	mov	r1, #1
   1e1ec:	bl	12578 <fwrite@plt>
   1e1f0:	mov	r0, #1
   1e1f4:	bl	121f4 <exit@plt>
   1e1f8:	movw	r1, #65044	; 0xfe14
   1e1fc:	movt	r1, #4
   1e200:	ldr	r3, [sp, #28]
   1e204:	movw	r2, #39684	; 0x9b04
   1e208:	ldr	r0, [r1]
   1e20c:	movt	r2, #3
   1e210:	mov	r1, #1
   1e214:	bl	122b4 <__fprintf_chk@plt>
   1e218:	mov	r0, #1
   1e21c:	bl	121f4 <exit@plt>
   1e220:	bl	12494 <__stack_chk_fail@plt>
   1e224:	movw	r1, #65044	; 0xfe14
   1e228:	movt	r1, #4
   1e22c:	mov	r3, sl
   1e230:	movw	r2, #39912	; 0x9be8
   1e234:	ldr	r0, [r1]
   1e238:	movt	r2, #3
   1e23c:	mov	r1, #1
   1e240:	bl	122b4 <__fprintf_chk@plt>
   1e244:	mov	r0, #1
   1e248:	bl	121f4 <exit@plt>
   1e24c:	movw	r1, #65044	; 0xfe14
   1e250:	movt	r1, #4
   1e254:	mov	r3, sl
   1e258:	movw	r2, #39860	; 0x9bb4
   1e25c:	ldr	r0, [r1]
   1e260:	movt	r2, #3
   1e264:	mov	r1, #1
   1e268:	bl	122b4 <__fprintf_chk@plt>
   1e26c:	mov	r0, #1
   1e270:	bl	121f4 <exit@plt>
   1e274:	movw	r3, #65044	; 0xfe14
   1e278:	movt	r3, #4
   1e27c:	movw	r0, #39812	; 0x9b84
   1e280:	mov	r2, #20
   1e284:	ldr	r3, [r3]
   1e288:	movt	r0, #3
   1e28c:	mov	r1, #1
   1e290:	bl	12578 <fwrite@plt>
   1e294:	mov	r0, #1
   1e298:	bl	121f4 <exit@plt>
   1e29c:	andeq	r0, r6, r8, ror #12
   1e2a0:	andeq	pc, r4, r0, lsl #14
   1e2a4:	andeq	r0, r6, r2, ror fp
   1e2a8:	andeq	pc, r4, ip, lsr #13
   1e2ac:	mov	r0, #0
   1e2b0:	bx	lr
   1e2b4:	bx	lr
   1e2b8:	bx	lr
   1e2bc:	subs	r0, r0, #37	; 0x25
   1e2c0:	movne	r0, #1
   1e2c4:	bx	lr
   1e2c8:	push	{r4, r5, r6, r7, r8, lr}
   1e2cc:	movw	r4, #61168	; 0xeef0
   1e2d0:	movt	r4, #4
   1e2d4:	sub	sp, sp, #16
   1e2d8:	mov	r5, r0
   1e2dc:	mov	r8, r1
   1e2e0:	ldr	r3, [r4]
   1e2e4:	mov	r7, r2
   1e2e8:	str	r3, [sp, #12]
   1e2ec:	bl	1268c <__errno_location@plt>
   1e2f0:	mov	r3, #0
   1e2f4:	mov	r2, #16
   1e2f8:	add	r1, sp, #8
   1e2fc:	mov	r6, r0
   1e300:	mov	r0, r5
   1e304:	str	r3, [r6]
   1e308:	bl	122cc <strtoul@plt>
   1e30c:	ldr	r3, [r6]
   1e310:	cmp	r3, #0
   1e314:	bne	1e33c <crc32@@Base+0x4bf4>
   1e318:	ldr	r3, [sp, #8]
   1e31c:	cmp	r3, r5
   1e320:	beq	1e33c <crc32@@Base+0x4bf4>
   1e324:	ldr	r2, [sp, #12]
   1e328:	ldr	r3, [r4]
   1e32c:	cmp	r2, r3
   1e330:	bne	1e36c <crc32@@Base+0x4c24>
   1e334:	add	sp, sp, #16
   1e338:	pop	{r4, r5, r6, r7, r8, pc}
   1e33c:	movw	r1, #65044	; 0xfe14
   1e340:	movt	r1, #4
   1e344:	str	r5, [sp, #4]
   1e348:	mov	r3, r8
   1e34c:	str	r7, [sp]
   1e350:	movw	r2, #25452	; 0x636c
   1e354:	ldr	r0, [r1]
   1e358:	movt	r2, #3
   1e35c:	mov	r1, #1
   1e360:	bl	122b4 <__fprintf_chk@plt>
   1e364:	mov	r0, #1
   1e368:	bl	121f4 <exit@plt>
   1e36c:	bl	12494 <__stack_chk_fail@plt>
   1e370:	push	{r4, r5, r6, r7, lr}
   1e374:	movw	r6, #61168	; 0xeef0
   1e378:	sub	sp, sp, #20
   1e37c:	movt	r6, #4
   1e380:	add	r3, sp, #16
   1e384:	movw	r4, #65048	; 0xfe18
   1e388:	ldr	ip, [r6]
   1e38c:	movt	r4, #4
   1e390:	add	r1, r3, r0, lsl #2
   1e394:	mov	r7, r0
   1e398:	movw	r2, #40556	; 0x9e6c
   1e39c:	movw	r3, #40564	; 0x9e74
   1e3a0:	movt	r2, #3
   1e3a4:	movt	r3, #3
   1e3a8:	ldr	r0, [r4]
   1e3ac:	strd	r2, [sp, #4]
   1e3b0:	movw	r2, #40580	; 0x9e84
   1e3b4:	ldr	r3, [r1, #-12]
   1e3b8:	movt	r2, #3
   1e3bc:	mov	r1, #1
   1e3c0:	str	ip, [sp, #12]
   1e3c4:	bl	122b4 <__fprintf_chk@plt>
   1e3c8:	movw	r3, #2940	; 0xb7c
   1e3cc:	movt	r3, #6
   1e3d0:	mov	r1, #1
   1e3d4:	add	r5, r3, r7, lsl #6
   1e3d8:	ldr	r0, [r4]
   1e3dc:	ldrb	r3, [r3, r7, lsl #6]
   1e3e0:	movw	r2, #40620	; 0x9eac
   1e3e4:	movt	r2, #3
   1e3e8:	bl	122b4 <__fprintf_chk@plt>
   1e3ec:	ldrh	r3, [r5, #1]
   1e3f0:	mov	r1, #1
   1e3f4:	ldr	r0, [r4]
   1e3f8:	movw	r2, #40640	; 0x9ec0
   1e3fc:	movt	r2, #3
   1e400:	bl	122b4 <__fprintf_chk@plt>
   1e404:	ldrb	r3, [r5, #3]
   1e408:	mov	r1, #1
   1e40c:	ldr	r0, [r4]
   1e410:	movw	r2, #40664	; 0x9ed8
   1e414:	movt	r2, #3
   1e418:	bl	122b4 <__fprintf_chk@plt>
   1e41c:	ldr	r3, [r5, #4]
   1e420:	mov	r1, #1
   1e424:	ldr	r0, [r4]
   1e428:	movw	r2, #40688	; 0x9ef0
   1e42c:	movt	r2, #3
   1e430:	bl	122b4 <__fprintf_chk@plt>
   1e434:	ldr	r3, [r5, #8]
   1e438:	mov	r1, #1
   1e43c:	ldr	r0, [r4]
   1e440:	movw	r2, #40704	; 0x9f00
   1e444:	movt	r2, #3
   1e448:	bl	122b4 <__fprintf_chk@plt>
   1e44c:	ldr	r3, [r5, #12]
   1e450:	mov	r1, #1
   1e454:	ldr	r0, [r4]
   1e458:	movw	r2, #40724	; 0x9f14
   1e45c:	movt	r2, #3
   1e460:	bl	122b4 <__fprintf_chk@plt>
   1e464:	ldr	r3, [r5, #16]
   1e468:	mov	r1, #1
   1e46c:	ldr	r0, [r4]
   1e470:	movw	r2, #40744	; 0x9f28
   1e474:	movt	r2, #3
   1e478:	bl	122b4 <__fprintf_chk@plt>
   1e47c:	ldr	r3, [r5, #20]
   1e480:	mov	r1, #1
   1e484:	ldr	r0, [r4]
   1e488:	movw	r2, #40768	; 0x9f40
   1e48c:	movt	r2, #3
   1e490:	bl	122b4 <__fprintf_chk@plt>
   1e494:	ldr	r3, [r5, #24]
   1e498:	mov	r1, #1
   1e49c:	ldr	r0, [r4]
   1e4a0:	movw	r2, #40784	; 0x9f50
   1e4a4:	movt	r2, #3
   1e4a8:	bl	122b4 <__fprintf_chk@plt>
   1e4ac:	ldr	r3, [r5, #28]
   1e4b0:	mov	r1, #1
   1e4b4:	ldr	r0, [r4]
   1e4b8:	movw	r2, #40800	; 0x9f60
   1e4bc:	movt	r2, #3
   1e4c0:	bl	122b4 <__fprintf_chk@plt>
   1e4c4:	ldr	r3, [r5, #32]
   1e4c8:	mov	r1, #1
   1e4cc:	ldr	r0, [r4]
   1e4d0:	movw	r2, #40820	; 0x9f74
   1e4d4:	movt	r2, #3
   1e4d8:	bl	122b4 <__fprintf_chk@plt>
   1e4dc:	ldr	r3, [r5, #36]	; 0x24
   1e4e0:	ldr	r0, [r4]
   1e4e4:	movw	r2, #40844	; 0x9f8c
   1e4e8:	mov	r1, #1
   1e4ec:	movt	r2, #3
   1e4f0:	bl	122b4 <__fprintf_chk@plt>
   1e4f4:	ldr	r2, [sp, #12]
   1e4f8:	ldr	r3, [r6]
   1e4fc:	cmp	r2, r3
   1e500:	bne	1e524 <crc32@@Base+0x4ddc>
   1e504:	ldr	r3, [r5, #40]	; 0x28
   1e508:	movw	r2, #40868	; 0x9fa4
   1e50c:	ldr	r0, [r4]
   1e510:	movt	r2, #3
   1e514:	mov	r1, #1
   1e518:	add	sp, sp, #20
   1e51c:	pop	{r4, r5, r6, r7, lr}
   1e520:	b	122b4 <__fprintf_chk@plt>
   1e524:	bl	12494 <__stack_chk_fail@plt>
   1e528:	push	{r4, r5, r6, r7, lr}
   1e52c:	movw	r7, #61168	; 0xeef0
   1e530:	sub	sp, sp, #4096	; 0x1000
   1e534:	movt	r7, #4
   1e538:	sub	sp, sp, #20
   1e53c:	mov	r4, r1
   1e540:	ldr	r3, [r7]
   1e544:	add	ip, sp, #4096	; 0x1000
   1e548:	add	ip, ip, #12
   1e54c:	mov	r6, r0
   1e550:	mov	r2, #4096	; 0x1000
   1e554:	mov	r1, #0
   1e558:	add	r0, sp, #12
   1e55c:	str	r3, [ip]
   1e560:	bl	122e4 <memset@plt>
   1e564:	mov	r1, r4
   1e568:	mov	r0, r6
   1e56c:	mov	r2, #0
   1e570:	bl	124f4 <lseek@plt>
   1e574:	cmp	r0, #0
   1e578:	movge	r4, #8192	; 0x2000
   1e57c:	blt	1e608 <crc32@@Base+0x4ec0>
   1e580:	cmp	r4, #4096	; 0x1000
   1e584:	add	r1, sp, #12
   1e588:	mov	r0, r6
   1e58c:	movlt	r5, r4
   1e590:	movge	r5, #4096	; 0x1000
   1e594:	mov	r2, r5
   1e598:	bl	12608 <write@plt>
   1e59c:	cmp	r0, r5
   1e5a0:	bne	1e5d0 <crc32@@Base+0x4e88>
   1e5a4:	subs	r4, r4, r0
   1e5a8:	bne	1e580 <crc32@@Base+0x4e38>
   1e5ac:	add	r3, sp, #4096	; 0x1000
   1e5b0:	add	r3, r3, #12
   1e5b4:	ldr	r2, [r3]
   1e5b8:	ldr	r3, [r7]
   1e5bc:	cmp	r2, r3
   1e5c0:	bne	1e648 <crc32@@Base+0x4f00>
   1e5c4:	add	sp, sp, #4096	; 0x1000
   1e5c8:	add	sp, sp, #20
   1e5cc:	pop	{r4, r5, r6, r7, pc}
   1e5d0:	movw	r3, #65044	; 0xfe14
   1e5d4:	movt	r3, #4
   1e5d8:	ldr	r4, [r3]
   1e5dc:	bl	1268c <__errno_location@plt>
   1e5e0:	ldr	r0, [r0]
   1e5e4:	bl	12200 <strerror@plt>
   1e5e8:	movw	r2, #38648	; 0x96f8
   1e5ec:	mov	r1, #1
   1e5f0:	movt	r2, #3
   1e5f4:	mov	r3, r0
   1e5f8:	mov	r0, r4
   1e5fc:	bl	122b4 <__fprintf_chk@plt>
   1e600:	mov	r0, #1
   1e604:	bl	121f4 <exit@plt>
   1e608:	movw	r3, #65044	; 0xfe14
   1e60c:	movt	r3, #4
   1e610:	ldr	r4, [r3]
   1e614:	bl	1268c <__errno_location@plt>
   1e618:	ldr	r0, [r0]
   1e61c:	bl	12200 <strerror@plt>
   1e620:	movw	r3, #40520	; 0x9e48
   1e624:	movw	r2, #40896	; 0x9fc0
   1e628:	movt	r3, #3
   1e62c:	movt	r2, #3
   1e630:	mov	r1, #1
   1e634:	str	r0, [sp]
   1e638:	mov	r0, r4
   1e63c:	bl	122b4 <__fprintf_chk@plt>
   1e640:	mov	r0, #1
   1e644:	bl	121f4 <exit@plt>
   1e648:	bl	12494 <__stack_chk_fail@plt>
   1e64c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e650:	movw	r7, #61168	; 0xeef0
   1e654:	sub	sp, sp, #4160	; 0x1040
   1e658:	movt	r7, #4
   1e65c:	sub	sp, sp, #52	; 0x34
   1e660:	mov	sl, r3
   1e664:	ldr	ip, [r7]
   1e668:	add	r3, sp, #4160	; 0x1040
   1e66c:	mov	r6, #0
   1e670:	add	r3, r3, #44	; 0x2c
   1e674:	mov	r4, r1
   1e678:	mov	r5, r0
   1e67c:	mov	r1, r6
   1e680:	mov	fp, r2
   1e684:	add	r0, sp, #108	; 0x6c
   1e688:	mov	r2, #4096	; 0x1000
   1e68c:	str	ip, [r3]
   1e690:	str	r6, [sp, #12]
   1e694:	bl	122e4 <memset@plt>
   1e698:	mov	r1, r6
   1e69c:	mov	r0, r4
   1e6a0:	bl	12434 <open@plt>
   1e6a4:	subs	r8, r0, #0
   1e6a8:	blt	1e8f4 <crc32@@Base+0x51ac>
   1e6ac:	mov	r1, r8
   1e6b0:	add	r2, sp, #16
   1e6b4:	mov	r0, #3
   1e6b8:	bl	12554 <__fxstat@plt>
   1e6bc:	cmp	r0, #0
   1e6c0:	blt	1e8c8 <crc32@@Base+0x5180>
   1e6c4:	mov	r3, #1
   1e6c8:	ldr	r1, [sp, #60]	; 0x3c
   1e6cc:	str	r6, [sp, #4]
   1e6d0:	mov	r2, r3
   1e6d4:	str	r8, [sp]
   1e6d8:	mov	r0, r6
   1e6dc:	bl	123ec <mmap@plt>
   1e6e0:	cmn	r0, #1
   1e6e4:	mov	r9, r0
   1e6e8:	beq	1e88c <crc32@@Base+0x5144>
   1e6ec:	mov	r2, r6
   1e6f0:	mov	r1, fp
   1e6f4:	mov	r0, r5
   1e6f8:	ldr	r4, [sp, #60]	; 0x3c
   1e6fc:	bl	124f4 <lseek@plt>
   1e700:	sub	r4, r4, sl
   1e704:	cmp	r0, #0
   1e708:	blt	1e864 <crc32@@Base+0x511c>
   1e70c:	add	r1, r9, sl
   1e710:	mov	r2, r4
   1e714:	mov	r0, r5
   1e718:	bl	12608 <write@plt>
   1e71c:	cmp	r4, r0
   1e720:	bne	1e82c <crc32@@Base+0x50e4>
   1e724:	rsbs	r3, r4, #0
   1e728:	and	r2, r4, #3
   1e72c:	and	r3, r3, #3
   1e730:	rsbpl	r2, r3, #0
   1e734:	cmn	r4, #1
   1e738:	moveq	r3, #1
   1e73c:	movne	r3, #0
   1e740:	cmp	r2, #0
   1e744:	moveq	r3, #0
   1e748:	cmp	r3, #0
   1e74c:	bne	1e7d8 <crc32@@Base+0x5090>
   1e750:	cmn	r4, #1
   1e754:	bge	1e7f4 <crc32@@Base+0x50ac>
   1e758:	rsb	r4, r4, #0
   1e75c:	b	1e780 <crc32@@Base+0x5038>
   1e760:	mov	r2, #4096	; 0x1000
   1e764:	add	r1, sp, #108	; 0x6c
   1e768:	mov	r0, r5
   1e76c:	bl	12608 <write@plt>
   1e770:	cmp	r0, #4096	; 0x1000
   1e774:	bne	1e7a0 <crc32@@Base+0x5058>
   1e778:	subs	r4, r4, #4096	; 0x1000
   1e77c:	beq	1e7f4 <crc32@@Base+0x50ac>
   1e780:	cmp	r4, #4096	; 0x1000
   1e784:	bge	1e760 <crc32@@Base+0x5018>
   1e788:	add	r1, sp, #108	; 0x6c
   1e78c:	mov	r0, r5
   1e790:	mov	r2, r4
   1e794:	bl	12608 <write@plt>
   1e798:	cmp	r0, r4
   1e79c:	beq	1e7f4 <crc32@@Base+0x50ac>
   1e7a0:	movw	r3, #65044	; 0xfe14
   1e7a4:	movt	r3, #4
   1e7a8:	ldr	r4, [r3]
   1e7ac:	bl	1268c <__errno_location@plt>
   1e7b0:	ldr	r0, [r0]
   1e7b4:	bl	12200 <strerror@plt>
   1e7b8:	movw	r2, #38648	; 0x96f8
   1e7bc:	mov	r1, #1
   1e7c0:	movt	r2, #3
   1e7c4:	mov	r3, r0
   1e7c8:	mov	r0, r4
   1e7cc:	bl	122b4 <__fprintf_chk@plt>
   1e7d0:	mov	r0, #1
   1e7d4:	bl	121f4 <exit@plt>
   1e7d8:	rsb	r4, r2, #4
   1e7dc:	add	r1, sp, #12
   1e7e0:	mov	r0, r5
   1e7e4:	mov	r2, r4
   1e7e8:	bl	12608 <write@plt>
   1e7ec:	cmp	r4, r0
   1e7f0:	bne	1e924 <crc32@@Base+0x51dc>
   1e7f4:	ldr	r1, [sp, #60]	; 0x3c
   1e7f8:	mov	r0, r9
   1e7fc:	bl	125e4 <munmap@plt>
   1e800:	mov	r0, r8
   1e804:	bl	12314 <close@plt>
   1e808:	add	r3, sp, #4160	; 0x1040
   1e80c:	add	r3, r3, #44	; 0x2c
   1e810:	ldr	r2, [r3]
   1e814:	ldr	r3, [r7]
   1e818:	cmp	r2, r3
   1e81c:	bne	1e920 <crc32@@Base+0x51d8>
   1e820:	add	sp, sp, #4160	; 0x1040
   1e824:	add	sp, sp, #52	; 0x34
   1e828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e82c:	movw	r3, #65044	; 0xfe14
   1e830:	movt	r3, #4
   1e834:	ldr	r4, [r3]
   1e838:	bl	1268c <__errno_location@plt>
   1e83c:	ldr	r0, [r0]
   1e840:	bl	12200 <strerror@plt>
   1e844:	movw	r2, #38632	; 0x96e8
   1e848:	mov	r1, #1
   1e84c:	movt	r2, #3
   1e850:	mov	r3, r0
   1e854:	mov	r0, r4
   1e858:	bl	122b4 <__fprintf_chk@plt>
   1e85c:	mov	r0, #1
   1e860:	bl	121f4 <exit@plt>
   1e864:	movw	r3, #65044	; 0xfe14
   1e868:	movt	r3, #4
   1e86c:	movw	r0, #40912	; 0x9fd0
   1e870:	mov	r2, #15
   1e874:	ldr	r3, [r3]
   1e878:	movt	r0, #3
   1e87c:	mov	r1, #1
   1e880:	bl	12578 <fwrite@plt>
   1e884:	mov	r0, #1
   1e888:	bl	121f4 <exit@plt>
   1e88c:	movw	r3, #65044	; 0xfe14
   1e890:	movt	r3, #4
   1e894:	ldr	r5, [r3]
   1e898:	bl	1268c <__errno_location@plt>
   1e89c:	ldr	r0, [r0]
   1e8a0:	bl	12200 <strerror@plt>
   1e8a4:	movw	r2, #26912	; 0x6920
   1e8a8:	movt	r2, #3
   1e8ac:	mov	r3, r4
   1e8b0:	mov	r1, #1
   1e8b4:	str	r0, [sp]
   1e8b8:	mov	r0, r5
   1e8bc:	bl	122b4 <__fprintf_chk@plt>
   1e8c0:	mov	r0, #1
   1e8c4:	bl	121f4 <exit@plt>
   1e8c8:	movw	r3, #65044	; 0xfe14
   1e8cc:	movt	r3, #4
   1e8d0:	ldr	r5, [r3]
   1e8d4:	bl	1268c <__errno_location@plt>
   1e8d8:	ldr	r0, [r0]
   1e8dc:	bl	12200 <strerror@plt>
   1e8e0:	movw	r2, #25332	; 0x62f4
   1e8e4:	mov	r3, r4
   1e8e8:	mov	r1, #1
   1e8ec:	movt	r2, #3
   1e8f0:	b	1e8b4 <crc32@@Base+0x516c>
   1e8f4:	movw	r3, #65044	; 0xfe14
   1e8f8:	movt	r3, #4
   1e8fc:	ldr	r5, [r3]
   1e900:	bl	1268c <__errno_location@plt>
   1e904:	ldr	r0, [r0]
   1e908:	bl	12200 <strerror@plt>
   1e90c:	movw	r2, #25308	; 0x62dc
   1e910:	mov	r3, r4
   1e914:	mov	r1, #1
   1e918:	movt	r2, #3
   1e91c:	b	1e8b4 <crc32@@Base+0x516c>
   1e920:	bl	12494 <__stack_chk_fail@plt>
   1e924:	movw	r3, #65044	; 0xfe14
   1e928:	movt	r3, #4
   1e92c:	ldr	r4, [r3]
   1e930:	bl	1268c <__errno_location@plt>
   1e934:	ldr	r0, [r0]
   1e938:	bl	12200 <strerror@plt>
   1e93c:	movw	r2, #38892	; 0x97ec
   1e940:	mov	r1, #1
   1e944:	movt	r2, #3
   1e948:	mov	r3, r0
   1e94c:	mov	r0, r4
   1e950:	bl	122b4 <__fprintf_chk@plt>
   1e954:	mov	r0, #1
   1e958:	bl	121f4 <exit@plt>
   1e95c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e960:	movw	r4, #2940	; 0xb7c
   1e964:	movt	r4, #6
   1e968:	movw	r9, #61168	; 0xeef0
   1e96c:	movt	r9, #4
   1e970:	sub	sp, sp, #212	; 0xd4
   1e974:	ldr	r1, [r4, #128]	; 0x80
   1e978:	ldr	r3, [r9]
   1e97c:	cmp	r1, #0
   1e980:	str	r3, [sp, #204]	; 0xcc
   1e984:	beq	1ef84 <crc32@@Base+0x583c>
   1e988:	mov	r7, r0
   1e98c:	ldr	r0, [r4, #132]	; 0x84
   1e990:	ldr	r6, [r4, #136]	; 0x88
   1e994:	cmp	r0, #0
   1e998:	beq	1ed90 <crc32@@Base+0x5648>
   1e99c:	mov	r1, #0
   1e9a0:	mov	sl, r6
   1e9a4:	bl	12434 <open@plt>
   1e9a8:	subs	r5, r0, #0
   1e9ac:	movwlt	r2, #65044	; 0xfe14
   1e9b0:	ldrlt	r5, [r4, #132]	; 0x84
   1e9b4:	movtlt	r2, #4
   1e9b8:	blt	1eef8 <crc32@@Base+0x57b0>
   1e9bc:	add	r2, sp, #48	; 0x30
   1e9c0:	mov	r1, r5
   1e9c4:	mov	r0, #3
   1e9c8:	bl	12554 <__fxstat@plt>
   1e9cc:	cmp	r0, #0
   1e9d0:	blt	1ef2c <crc32@@Base+0x57e4>
   1e9d4:	mov	r0, r5
   1e9d8:	mov	r5, #106496	; 0x1a000
   1e9dc:	bl	12314 <close@plt>
   1e9e0:	ldr	r3, [sp, #92]	; 0x5c
   1e9e4:	movw	r2, #40959	; 0x9fff
   1e9e8:	movt	r2, #1
   1e9ec:	add	r2, r3, r2
   1e9f0:	movw	r3, #60495	; 0xec4f
   1e9f4:	movt	r3, #20164	; 0x4ec4
   1e9f8:	ldr	r6, [r4, #136]	; 0x88
   1e9fc:	asr	r0, r2, #31
   1ea00:	ldr	r1, [r4, #128]	; 0x80
   1ea04:	smull	r2, r3, r2, r3
   1ea08:	rsb	r0, r0, r3, asr #15
   1ea0c:	mul	r5, r5, r0
   1ea10:	mov	r0, r1
   1ea14:	mov	r1, #0
   1ea18:	add	r6, r6, r5
   1ea1c:	bl	12434 <open@plt>
   1ea20:	subs	r8, r0, #0
   1ea24:	blt	1eeec <crc32@@Base+0x57a4>
   1ea28:	add	r2, sp, #48	; 0x30
   1ea2c:	mov	r1, r8
   1ea30:	mov	r0, #3
   1ea34:	bl	12554 <__fxstat@plt>
   1ea38:	cmp	r0, #0
   1ea3c:	movwlt	r2, #65044	; 0xfe14
   1ea40:	ldrlt	r5, [r4, #128]	; 0x80
   1ea44:	movtlt	r2, #4
   1ea48:	blt	1ef38 <crc32@@Base+0x57f0>
   1ea4c:	mov	r0, r8
   1ea50:	bl	12314 <close@plt>
   1ea54:	ldr	ip, [r4, #136]	; 0x88
   1ea58:	ldr	r3, [sp, #92]	; 0x5c
   1ea5c:	mov	r1, #209	; 0xd1
   1ea60:	add	r8, ip, #572	; 0x23c
   1ea64:	ldr	r2, [r4, #140]	; 0x8c
   1ea68:	add	r8, r8, #3
   1ea6c:	ldr	r0, [r4, #148]	; 0x94
   1ea70:	add	r8, r8, r3
   1ea74:	sub	r3, r2, #64	; 0x40
   1ea78:	bic	r8, r8, #508	; 0x1fc
   1ea7c:	cmp	r0, #0
   1ea80:	bic	r8, r8, #3
   1ea84:	str	r3, [r4, #84]	; 0x54
   1ea88:	sub	r3, r3, ip
   1ea8c:	movt	r1, #16672	; 0x4120
   1ea90:	str	r2, [r4, #68]	; 0x44
   1ea94:	sub	r2, r2, #32
   1ea98:	str	r3, [r4, #96]	; 0x60
   1ea9c:	add	r3, r3, r8
   1eaa0:	str	r1, [r4, #64]	; 0x40
   1eaa4:	mov	r1, #0
   1eaa8:	str	r3, [r4, #88]	; 0x58
   1eaac:	add	r3, r8, #8192	; 0x2000
   1eab0:	str	r2, [r4, #80]	; 0x50
   1eab4:	str	r3, [r4, #100]	; 0x64
   1eab8:	add	r3, r6, #64	; 0x40
   1eabc:	str	r1, [r4, #76]	; 0x4c
   1eac0:	str	r1, [r4, #104]	; 0x68
   1eac4:	str	r3, [r4, #144]	; 0x90
   1eac8:	beq	1eb38 <crc32@@Base+0x53f0>
   1eacc:	ldr	r3, [r4, #152]	; 0x98
   1ead0:	cmp	r3, r1
   1ead4:	beq	1efd8 <crc32@@Base+0x5890>
   1ead8:	ldr	r2, [r4, #160]	; 0xa0
   1eadc:	ldr	r3, [r4, #156]	; 0x9c
   1eae0:	sub	r3, r3, r2
   1eae4:	str	r3, [r4, #164]	; 0xa4
   1eae8:	sub	r3, r3, r6
   1eaec:	str	r3, [r4, #72]	; 0x48
   1eaf0:	bl	12434 <open@plt>
   1eaf4:	subs	fp, r0, #0
   1eaf8:	movwlt	r2, #65044	; 0xfe14
   1eafc:	ldrlt	r5, [r4, #148]	; 0x94
   1eb00:	movtlt	r2, #4
   1eb04:	blt	1eef8 <crc32@@Base+0x57b0>
   1eb08:	add	r2, sp, #48	; 0x30
   1eb0c:	mov	r1, fp
   1eb10:	mov	r0, #3
   1eb14:	bl	12554 <__fxstat@plt>
   1eb18:	cmp	r0, #0
   1eb1c:	movwlt	r2, #65044	; 0xfe14
   1eb20:	ldrlt	r5, [r4, #148]	; 0x94
   1eb24:	movtlt	r2, #4
   1eb28:	blt	1ef38 <crc32@@Base+0x57f0>
   1eb2c:	mov	r0, fp
   1eb30:	bl	12314 <close@plt>
   1eb34:	ldr	ip, [r4, #136]	; 0x88
   1eb38:	ldr	fp, [r4, #132]	; 0x84
   1eb3c:	cmp	fp, #0
   1eb40:	beq	1eb78 <crc32@@Base+0x5430>
   1eb44:	sub	sl, sl, ip
   1eb48:	mov	r2, #0
   1eb4c:	mov	r0, r7
   1eb50:	mov	r1, sl
   1eb54:	bl	124f4 <lseek@plt>
   1eb58:	cmp	r0, #0
   1eb5c:	blt	1f000 <crc32@@Base+0x58b8>
   1eb60:	mov	r1, fp
   1eb64:	mov	r3, #1024	; 0x400
   1eb68:	mov	r2, sl
   1eb6c:	mov	r0, r7
   1eb70:	bl	1e64c <crc32@@Base+0x4f04>
   1eb74:	ldr	ip, [r4, #136]	; 0x88
   1eb78:	sub	r6, r6, ip
   1eb7c:	ldr	r3, [r4, #144]	; 0x90
   1eb80:	mov	r2, #0
   1eb84:	mov	r0, r7
   1eb88:	mov	r1, r6
   1eb8c:	sub	ip, r3, ip
   1eb90:	str	ip, [r4, #144]	; 0x90
   1eb94:	bl	124f4 <lseek@plt>
   1eb98:	cmp	r0, #0
   1eb9c:	blt	1ef5c <crc32@@Base+0x5814>
   1eba0:	mov	r2, #64	; 0x40
   1eba4:	ldr	r1, [pc, #1324]	; 1f0d8 <crc32@@Base+0x5990>
   1eba8:	mov	r0, r7
   1ebac:	bl	12608 <write@plt>
   1ebb0:	cmp	r0, #64	; 0x40
   1ebb4:	mov	fp, r0
   1ebb8:	bne	1efb0 <crc32@@Base+0x5868>
   1ebbc:	mov	r3, #0
   1ebc0:	ldr	r2, [r4, #144]	; 0x90
   1ebc4:	ldr	r1, [r4, #128]	; 0x80
   1ebc8:	mov	r0, r7
   1ebcc:	bl	1e64c <crc32@@Base+0x4f04>
   1ebd0:	ldr	r3, [r4, #136]	; 0x88
   1ebd4:	mov	r0, r7
   1ebd8:	sub	r8, r8, r3
   1ebdc:	add	r5, r8, r5
   1ebe0:	mov	r1, r5
   1ebe4:	bl	1e528 <crc32@@Base+0x4de0>
   1ebe8:	ldr	r3, [r4, #148]	; 0x94
   1ebec:	cmp	r3, #0
   1ebf0:	beq	1ec30 <crc32@@Base+0x54e8>
   1ebf4:	ldr	r8, [r4, #164]	; 0xa4
   1ebf8:	mov	r2, #0
   1ebfc:	ldr	r1, [r4, #136]	; 0x88
   1ec00:	mov	r0, r7
   1ec04:	str	r3, [sp, #8]
   1ec08:	sub	r8, r8, r1
   1ec0c:	str	r8, [r4, #164]	; 0xa4
   1ec10:	mov	r1, r8
   1ec14:	bl	124f4 <lseek@plt>
   1ec18:	ldr	r3, [sp, #8]
   1ec1c:	cmp	r0, #0
   1ec20:	blt	1f050 <crc32@@Base+0x5908>
   1ec24:	ldr	r2, [r4, #152]	; 0x98
   1ec28:	cmp	r2, #0
   1ec2c:	bne	1ed9c <crc32@@Base+0x5654>
   1ec30:	mov	fp, #0
   1ec34:	mov	r8, fp
   1ec38:	ldr	r0, [r4, #132]	; 0x84
   1ec3c:	cmp	r0, #0
   1ec40:	beq	1eee4 <crc32@@Base+0x579c>
   1ec44:	movw	r7, #65048	; 0xfe18
   1ec48:	movt	r7, #4
   1ec4c:	mov	r0, #1
   1ec50:	bl	1e370 <crc32@@Base+0x4c28>
   1ec54:	ldr	r3, [r7]
   1ec58:	movw	r0, #41172	; 0xa0d4
   1ec5c:	mov	r2, #31
   1ec60:	movt	r0, #3
   1ec64:	mov	r1, #1
   1ec68:	bl	12578 <fwrite@plt>
   1ec6c:	ldr	r3, [r4, #132]	; 0x84
   1ec70:	cmp	r3, #0
   1ec74:	beq	1eca8 <crc32@@Base+0x5560>
   1ec78:	ldr	r3, [r7]
   1ec7c:	mov	r2, #17
   1ec80:	mov	r1, #1
   1ec84:	movw	r0, #41204	; 0xa0f4
   1ec88:	movt	r0, #3
   1ec8c:	bl	12578 <fwrite@plt>
   1ec90:	movw	r2, #41224	; 0xa108
   1ec94:	mov	r3, sl
   1ec98:	mov	r1, #1
   1ec9c:	movt	r2, #3
   1eca0:	ldr	r0, [r7]
   1eca4:	bl	122b4 <__fprintf_chk@plt>
   1eca8:	ldr	r3, [r7]
   1ecac:	mov	r2, #15
   1ecb0:	mov	r1, #1
   1ecb4:	movw	r0, #41248	; 0xa120
   1ecb8:	movt	r0, #3
   1ecbc:	bl	12578 <fwrite@plt>
   1ecc0:	ldr	r1, [r4, #144]	; 0x90
   1ecc4:	ldr	r0, [r7]
   1ecc8:	mov	r3, r6
   1eccc:	str	r5, [sp, #4]
   1ecd0:	movw	r2, #41264	; 0xa130
   1ecd4:	str	r1, [sp]
   1ecd8:	movt	r2, #3
   1ecdc:	mov	r1, #1
   1ece0:	sub	r5, r5, r6
   1ece4:	bl	122b4 <__fprintf_chk@plt>
   1ece8:	ldr	r3, [r4, #84]	; 0x54
   1ecec:	ldr	r0, [r7]
   1ecf0:	mov	r1, #1
   1ecf4:	str	r6, [sp]
   1ecf8:	movw	r2, #41324	; 0xa16c
   1ecfc:	str	r5, [sp, #4]
   1ed00:	movt	r2, #3
   1ed04:	bl	122b4 <__fprintf_chk@plt>
   1ed08:	ldr	r3, [r7]
   1ed0c:	mov	r2, #22
   1ed10:	mov	r1, #1
   1ed14:	movw	r0, #41360	; 0xa190
   1ed18:	movt	r0, #3
   1ed1c:	bl	12578 <fwrite@plt>
   1ed20:	ldr	r3, [r4, #164]	; 0xa4
   1ed24:	mov	r1, #1
   1ed28:	movw	r2, #41384	; 0xa1a8
   1ed2c:	ldr	r0, [r7]
   1ed30:	movt	r2, #3
   1ed34:	bl	122b4 <__fprintf_chk@plt>
   1ed38:	mov	r3, r8
   1ed3c:	mov	r1, #1
   1ed40:	movw	r2, #41408	; 0xa1c0
   1ed44:	ldr	r0, [r7]
   1ed48:	movt	r2, #3
   1ed4c:	bl	122b4 <__fprintf_chk@plt>
   1ed50:	ldr	r1, [r4, #164]	; 0xa4
   1ed54:	ldr	r0, [r7]
   1ed58:	mov	r3, fp
   1ed5c:	sub	r8, r8, r1
   1ed60:	movw	r2, #41432	; 0xa1d8
   1ed64:	str	r1, [sp]
   1ed68:	movt	r2, #3
   1ed6c:	str	r8, [sp, #4]
   1ed70:	mov	r1, #1
   1ed74:	bl	122b4 <__fprintf_chk@plt>
   1ed78:	ldr	r2, [sp, #204]	; 0xcc
   1ed7c:	ldr	r3, [r9]
   1ed80:	cmp	r2, r3
   1ed84:	bne	1efac <crc32@@Base+0x5864>
   1ed88:	add	sp, sp, #212	; 0xd4
   1ed8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed90:	mov	r5, r0
   1ed94:	mov	sl, r0
   1ed98:	b	1ea10 <crc32@@Base+0x52c8>
   1ed9c:	mov	r2, r8
   1eda0:	mov	r1, r3
   1eda4:	mov	r0, r7
   1eda8:	mov	r3, #0
   1edac:	bl	1e64c <crc32@@Base+0x4f04>
   1edb0:	ldr	r8, [r4, #164]	; 0xa4
   1edb4:	ldr	r3, [r4, #168]	; 0xa8
   1edb8:	mov	r2, #0
   1edbc:	mov	r0, r7
   1edc0:	mov	r1, r8
   1edc4:	str	r3, [sp, #8]
   1edc8:	bl	124f4 <lseek@plt>
   1edcc:	cmp	r0, #0
   1edd0:	blt	1f028 <crc32@@Base+0x58e0>
   1edd4:	mov	r2, fp
   1edd8:	add	r1, sp, #140	; 0x8c
   1eddc:	mov	r0, r7
   1ede0:	bl	12344 <read@plt>
   1ede4:	cmp	r0, #64	; 0x40
   1ede8:	bne	1f0a0 <crc32@@Base+0x5958>
   1edec:	ldr	r2, [sp, #140]	; 0x8c
   1edf0:	mov	r3, #3536	; 0xdd0
   1edf4:	movt	r3, #60926	; 0xedfe
   1edf8:	cmp	r2, r3
   1edfc:	bne	1f078 <crc32@@Base+0x5930>
   1ee00:	ldr	lr, [sp, #144]	; 0x90
   1ee04:	mov	r2, #0
   1ee08:	mov	r0, r7
   1ee0c:	ubfx	ip, lr, #8, #8
   1ee10:	ubfx	r1, lr, #16, #8
   1ee14:	lsr	r3, lr, #24
   1ee18:	orr	r3, r3, lr, lsl #24
   1ee1c:	orr	r3, r3, ip, lsl #16
   1ee20:	orr	r3, r3, r1, lsl #8
   1ee24:	add	r3, r3, #3
   1ee28:	bic	r3, r3, #3
   1ee2c:	add	r3, r3, #4080	; 0xff0
   1ee30:	add	r3, r3, #15
   1ee34:	bic	r3, r3, #4080	; 0xff0
   1ee38:	bic	r3, r3, #15
   1ee3c:	str	r3, [sp, #12]
   1ee40:	add	r8, r8, r3
   1ee44:	mov	r1, r8
   1ee48:	bl	124f4 <lseek@plt>
   1ee4c:	ldr	r3, [sp, #12]
   1ee50:	cmp	r0, #0
   1ee54:	blt	1f028 <crc32@@Base+0x58e0>
   1ee58:	ldr	r2, [sp, #8]
   1ee5c:	mov	r0, r7
   1ee60:	add	r1, sp, #16
   1ee64:	sub	fp, r2, #8704	; 0x2200
   1ee68:	mov	r2, #32
   1ee6c:	sub	fp, fp, #63	; 0x3f
   1ee70:	sub	fp, fp, r3
   1ee74:	bic	fp, fp, #63	; 0x3f
   1ee78:	str	fp, [sp, #20]
   1ee7c:	add	r3, r3, fp
   1ee80:	str	r3, [sp, #36]	; 0x24
   1ee84:	add	r3, r3, r2
   1ee88:	str	r3, [sp, #40]	; 0x28
   1ee8c:	mov	r3, #209	; 0xd1
   1ee90:	movt	r3, #16416	; 0x4020
   1ee94:	str	r3, [sp, #16]
   1ee98:	mov	r3, #0
   1ee9c:	str	r3, [sp, #24]
   1eea0:	str	r3, [sp, #28]
   1eea4:	str	r3, [sp, #32]
   1eea8:	str	r3, [sp, #44]	; 0x2c
   1eeac:	bl	12608 <write@plt>
   1eeb0:	cmp	r0, #32
   1eeb4:	addeq	r8, r8, #32
   1eeb8:	beq	1ec38 <crc32@@Base+0x54f0>
   1eebc:	movw	r3, #65044	; 0xfe14
   1eec0:	movt	r3, #4
   1eec4:	movw	r0, #41140	; 0xa0b4
   1eec8:	mov	r2, #31
   1eecc:	ldr	r3, [r3]
   1eed0:	movt	r0, #3
   1eed4:	mov	r1, #1
   1eed8:	bl	12578 <fwrite@plt>
   1eedc:	mov	r0, #1
   1eee0:	bl	121f4 <exit@plt>
   1eee4:	bl	1e370 <crc32@@Base+0x4c28>
   1eee8:	b	1ec44 <crc32@@Base+0x54fc>
   1eeec:	ldr	r5, [r4, #128]	; 0x80
   1eef0:	movw	r2, #65044	; 0xfe14
   1eef4:	movt	r2, #4
   1eef8:	ldr	r4, [r2]
   1eefc:	bl	1268c <__errno_location@plt>
   1ef00:	ldr	r0, [r0]
   1ef04:	bl	12200 <strerror@plt>
   1ef08:	movw	r2, #38540	; 0x968c
   1ef0c:	movt	r2, #3
   1ef10:	mov	r3, r5
   1ef14:	mov	r1, #1
   1ef18:	str	r0, [sp]
   1ef1c:	mov	r0, r4
   1ef20:	bl	122b4 <__fprintf_chk@plt>
   1ef24:	mov	r0, #1
   1ef28:	bl	121f4 <exit@plt>
   1ef2c:	ldr	r5, [r4, #132]	; 0x84
   1ef30:	movw	r2, #65044	; 0xfe14
   1ef34:	movt	r2, #4
   1ef38:	ldr	r4, [r2]
   1ef3c:	bl	1268c <__errno_location@plt>
   1ef40:	ldr	r0, [r0]
   1ef44:	bl	12200 <strerror@plt>
   1ef48:	movw	r2, #38560	; 0x96a0
   1ef4c:	mov	r3, r5
   1ef50:	mov	r1, #1
   1ef54:	movt	r2, #3
   1ef58:	b	1ef18 <crc32@@Base+0x57d0>
   1ef5c:	movw	r3, #65044	; 0xfe14
   1ef60:	movt	r3, #4
   1ef64:	movw	r0, #41004	; 0xa02c
   1ef68:	mov	r2, #15
   1ef6c:	ldr	r3, [r3]
   1ef70:	movt	r0, #3
   1ef74:	mov	r1, #1
   1ef78:	bl	12578 <fwrite@plt>
   1ef7c:	mov	r0, #1
   1ef80:	bl	121f4 <exit@plt>
   1ef84:	movw	r3, #65044	; 0xfe14
   1ef88:	movt	r3, #4
   1ef8c:	movw	r0, #40928	; 0x9fe0
   1ef90:	mov	r2, #27
   1ef94:	ldr	r3, [r3]
   1ef98:	movt	r0, #3
   1ef9c:	mov	r1, #1
   1efa0:	bl	12578 <fwrite@plt>
   1efa4:	mov	r0, #1
   1efa8:	bl	121f4 <exit@plt>
   1efac:	bl	12494 <__stack_chk_fail@plt>
   1efb0:	movw	r3, #65044	; 0xfe14
   1efb4:	movt	r3, #4
   1efb8:	movw	r0, #39644	; 0x9adc
   1efbc:	mov	r2, #24
   1efc0:	ldr	r3, [r3]
   1efc4:	movt	r0, #3
   1efc8:	mov	r1, #1
   1efcc:	bl	12578 <fwrite@plt>
   1efd0:	mov	r0, #1
   1efd4:	bl	121f4 <exit@plt>
   1efd8:	movw	r3, #65044	; 0xfe14
   1efdc:	movt	r3, #4
   1efe0:	movw	r0, #40956	; 0x9ffc
   1efe4:	mov	r2, #19
   1efe8:	ldr	r3, [r3]
   1efec:	movt	r0, #3
   1eff0:	mov	r1, #1
   1eff4:	bl	12578 <fwrite@plt>
   1eff8:	mov	r0, #1
   1effc:	bl	121f4 <exit@plt>
   1f000:	movw	r3, #65044	; 0xfe14
   1f004:	movt	r3, #4
   1f008:	movw	r0, #40976	; 0xa010
   1f00c:	mov	r2, #24
   1f010:	ldr	r3, [r3]
   1f014:	movt	r0, #3
   1f018:	mov	r1, #1
   1f01c:	bl	12578 <fwrite@plt>
   1f020:	mov	r0, #1
   1f024:	bl	121f4 <exit@plt>
   1f028:	movw	r3, #65044	; 0xfe14
   1f02c:	movt	r3, #4
   1f030:	movw	r0, #41048	; 0xa058
   1f034:	mov	r2, #22
   1f038:	ldr	r3, [r3]
   1f03c:	movt	r0, #3
   1f040:	mov	r1, #1
   1f044:	bl	12578 <fwrite@plt>
   1f048:	mov	r0, #1
   1f04c:	bl	121f4 <exit@plt>
   1f050:	movw	r3, #65044	; 0xfe14
   1f054:	movt	r3, #4
   1f058:	movw	r0, #41020	; 0xa03c
   1f05c:	mov	r2, #27
   1f060:	ldr	r3, [r3]
   1f064:	movt	r0, #3
   1f068:	mov	r1, #1
   1f06c:	bl	12578 <fwrite@plt>
   1f070:	mov	r0, #1
   1f074:	bl	121f4 <exit@plt>
   1f078:	movw	r1, #65044	; 0xfe14
   1f07c:	movt	r1, #4
   1f080:	movw	r2, #41112	; 0xa098
   1f084:	ldr	r3, [pc, #80]	; 1f0dc <crc32@@Base+0x5994>
   1f088:	ldr	r0, [r1]
   1f08c:	movt	r2, #3
   1f090:	mov	r1, #1
   1f094:	bl	122b4 <__fprintf_chk@plt>
   1f098:	mov	r0, #1
   1f09c:	bl	121f4 <exit@plt>
   1f0a0:	movw	r3, #65044	; 0xfe14
   1f0a4:	movt	r3, #4
   1f0a8:	ldr	r4, [r3]
   1f0ac:	bl	1268c <__errno_location@plt>
   1f0b0:	ldr	r0, [r0]
   1f0b4:	bl	12200 <strerror@plt>
   1f0b8:	movw	r2, #41072	; 0xa070
   1f0bc:	mov	r1, #1
   1f0c0:	movt	r2, #3
   1f0c4:	mov	r3, r0
   1f0c8:	mov	r0, r4
   1f0cc:	bl	122b4 <__fprintf_chk@plt>
   1f0d0:	mov	r0, #1
   1f0d4:	bl	121f4 <exit@plt>
   1f0d8:			; <UNDEFINED> instruction: 0x00060bbc
   1f0dc:	andeq	r9, r3, r4, asr lr
   1f0e0:	movw	r3, #61168	; 0xeef0
   1f0e4:	movt	r3, #4
   1f0e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f0ec:	movw	r2, #65048	; 0xfe18
   1f0f0:	sub	sp, sp, #52	; 0x34
   1f0f4:	ldr	ip, [r3]
   1f0f8:	movt	r2, #4
   1f0fc:	mov	r4, r1
   1f100:	str	r3, [sp, #20]
   1f104:	mov	r6, #0
   1f108:	ldr	r3, [r1, #64]	; 0x40
   1f10c:	mov	r1, #1
   1f110:	str	r0, [sp, #16]
   1f114:	ldr	r0, [r2]
   1f118:	movw	r2, #39672	; 0x9af8
   1f11c:	movt	r2, #3
   1f120:	str	ip, [sp, #44]	; 0x2c
   1f124:	bl	122b4 <__fprintf_chk@plt>
   1f128:	ldr	r3, [r4, #64]	; 0x40
   1f12c:	movw	r1, #49448	; 0xc128
   1f130:	movt	r1, #3
   1f134:	str	r6, [sp, #28]
   1f138:	mov	r0, r3
   1f13c:	str	r3, [sp, #12]
   1f140:	bl	1232c <fopen@plt>
   1f144:	subs	r3, r0, #0
   1f148:	str	r3, [sp, #8]
   1f14c:	movwne	sl, #25384	; 0x6328
   1f150:	movwne	r8, #2940	; 0xb7c
   1f154:	movtne	sl, #3
   1f158:	movtne	r8, #6
   1f15c:	beq	1f664 <crc32@@Base+0x5f1c>
   1f160:	ldr	r3, [sp, #8]
   1f164:	mov	r2, #10
   1f168:	add	r1, sp, #40	; 0x28
   1f16c:	add	r0, sp, #28
   1f170:	bl	12134 <__getdelim@plt>
   1f174:	cmp	r0, #0
   1f178:	ble	1f5e8 <crc32@@Base+0x5ea0>
   1f17c:	add	r2, sp, #32
   1f180:	mov	r1, sl
   1f184:	ldr	r0, [sp, #28]
   1f188:	add	r6, r6, #1
   1f18c:	bl	12224 <__strtok_r@plt>
   1f190:	cmp	r0, #0
   1f194:	beq	1f160 <crc32@@Base+0x5a18>
   1f198:	movw	r5, #25388	; 0x632c
   1f19c:	movw	r9, #41488	; 0xa210
   1f1a0:	movt	r5, #3
   1f1a4:	movt	r9, #3
   1f1a8:	mvn	r7, #0
   1f1ac:	mov	fp, #0
   1f1b0:	str	r0, [sp, #28]
   1f1b4:	add	r2, sp, #36	; 0x24
   1f1b8:	mov	r1, r5
   1f1bc:	bl	12224 <__strtok_r@plt>
   1f1c0:	subs	r4, r0, #0
   1f1c4:	beq	1f160 <crc32@@Base+0x5a18>
   1f1c8:	ldrb	r3, [r4]
   1f1cc:	cmp	r3, #35	; 0x23
   1f1d0:	beq	1f160 <crc32@@Base+0x5a18>
   1f1d4:	cmp	fp, #3
   1f1d8:	ldrls	pc, [pc, fp, lsl #2]
   1f1dc:	b	1f31c <crc32@@Base+0x5bd4>
   1f1e0:	strdeq	pc, [r1], -r0
   1f1e4:	andeq	pc, r1, ip, lsr r2	; <UNPREDICTABLE>
   1f1e8:	ldrdeq	pc, [r1], -r4
   1f1ec:	andeq	pc, r1, r4, ror #5
   1f1f0:	movw	r1, #41468	; 0xa1fc
   1f1f4:	movw	r0, #63360	; 0xf780
   1f1f8:	movt	r1, #3
   1f1fc:	movt	r0, #4
   1f200:	mov	r2, r4
   1f204:	bl	1a5c8 <crc32@@Base+0xe80>
   1f208:	subs	r7, r0, #0
   1f20c:	blt	1f634 <crc32@@Base+0x5eec>
   1f210:	mov	r3, #0
   1f214:	add	r2, sp, #36	; 0x24
   1f218:	mov	r0, r3
   1f21c:	mov	r1, r5
   1f220:	str	r3, [sp, #28]
   1f224:	bl	12224 <__strtok_r@plt>
   1f228:	subs	r4, r0, #0
   1f22c:	beq	1f160 <crc32@@Base+0x5a18>
   1f230:	ldrb	r3, [r4]
   1f234:	cmp	r3, #35	; 0x23
   1f238:	beq	1f160 <crc32@@Base+0x5a18>
   1f23c:	sub	r3, r7, #2
   1f240:	cmp	r3, #12
   1f244:	ldrls	pc, [pc, r3, lsl #2]
   1f248:	b	1f5a8 <crc32@@Base+0x5e60>
   1f24c:	strdeq	pc, [r1], -r8
   1f250:	andeq	pc, r1, r8, lsr #11
   1f254:	andeq	pc, r1, r8, lsr #11
   1f258:	andeq	pc, r1, r8, lsr #11
   1f25c:	andeq	pc, r1, r8, lsr #11
   1f260:	andeq	pc, r1, r8, lsr #11
   1f264:	andeq	pc, r1, r8, lsr #11
   1f268:	andeq	pc, r1, r8, lsr #11
   1f26c:	andeq	pc, r1, r8, lsr #11
   1f270:	andeq	pc, r1, r4, lsl #5
   1f274:	andeq	pc, r1, r0, lsl #5
   1f278:	andeq	pc, r1, ip, lsr #6
   1f27c:	muleq	r1, ip, r4
   1f280:	str	r4, [r8, #132]	; 0x84
   1f284:	mov	r3, #0
   1f288:	add	r2, sp, #36	; 0x24
   1f28c:	mov	r0, r3
   1f290:	mov	r1, r5
   1f294:	str	r3, [sp, #28]
   1f298:	mov	r3, #1
   1f29c:	str	r3, [r8, #152]	; 0x98
   1f2a0:	bl	12224 <__strtok_r@plt>
   1f2a4:	cmp	r0, #0
   1f2a8:	beq	1f160 <crc32@@Base+0x5a18>
   1f2ac:	ldrb	r3, [r0]
   1f2b0:	cmp	r3, #35	; 0x23
   1f2b4:	beq	1f160 <crc32@@Base+0x5a18>
   1f2b8:	mov	r3, #0
   1f2bc:	add	r2, sp, #36	; 0x24
   1f2c0:	mov	r0, r3
   1f2c4:	mov	r1, r5
   1f2c8:	str	r3, [sp, #28]
   1f2cc:	bl	12224 <__strtok_r@plt>
   1f2d0:	subs	r4, r0, #0
   1f2d4:	beq	1f160 <crc32@@Base+0x5a18>
   1f2d8:	ldrb	r3, [r4]
   1f2dc:	cmp	r3, #35	; 0x23
   1f2e0:	beq	1f160 <crc32@@Base+0x5a18>
   1f2e4:	cmp	r7, #14
   1f2e8:	beq	1f50c <crc32@@Base+0x5dc4>
   1f2ec:	mov	r3, #0
   1f2f0:	add	r2, sp, #36	; 0x24
   1f2f4:	mov	r0, r3
   1f2f8:	mov	r1, r5
   1f2fc:	str	r3, [sp, #28]
   1f300:	bl	12224 <__strtok_r@plt>
   1f304:	cmp	r0, #0
   1f308:	beq	1f160 <crc32@@Base+0x5a18>
   1f30c:	ldrb	r3, [r0]
   1f310:	cmp	r3, #35	; 0x23
   1f314:	beq	1f160 <crc32@@Base+0x5a18>
   1f318:	mov	fp, #4
   1f31c:	mov	r0, #0
   1f320:	add	fp, fp, #1
   1f324:	str	r0, [sp, #28]
   1f328:	b	1f1b4 <crc32@@Base+0x5a6c>
   1f32c:	mov	r3, #0
   1f330:	add	r2, sp, #36	; 0x24
   1f334:	mov	r0, r3
   1f338:	mov	r1, r5
   1f33c:	str	r4, [r8, #128]	; 0x80
   1f340:	str	r3, [sp, #28]
   1f344:	bl	12224 <__strtok_r@plt>
   1f348:	subs	r4, r0, #0
   1f34c:	beq	1f160 <crc32@@Base+0x5a18>
   1f350:	ldrb	r3, [r4]
   1f354:	cmp	r3, #35	; 0x23
   1f358:	beq	1f160 <crc32@@Base+0x5a18>
   1f35c:	mov	r0, r4
   1f360:	mov	r2, r6
   1f364:	ldr	r1, [sp, #12]
   1f368:	mov	r4, #0
   1f36c:	bl	1e2c8 <crc32@@Base+0x4b80>
   1f370:	add	r2, sp, #36	; 0x24
   1f374:	mov	r1, r5
   1f378:	str	r4, [sp, #28]
   1f37c:	str	r0, [r8, #140]	; 0x8c
   1f380:	mov	r0, r4
   1f384:	bl	12224 <__strtok_r@plt>
   1f388:	cmp	r0, #0
   1f38c:	beq	1f160 <crc32@@Base+0x5a18>
   1f390:	ldrb	r3, [r0]
   1f394:	cmp	r3, #35	; 0x23
   1f398:	beq	1f160 <crc32@@Base+0x5a18>
   1f39c:	add	r2, sp, #36	; 0x24
   1f3a0:	mov	r1, r5
   1f3a4:	mov	r0, r4
   1f3a8:	str	r4, [sp, #28]
   1f3ac:	bl	12224 <__strtok_r@plt>
   1f3b0:	cmp	r0, #0
   1f3b4:	beq	1f160 <crc32@@Base+0x5a18>
   1f3b8:	ldrb	r3, [r0]
   1f3bc:	cmp	r3, #35	; 0x23
   1f3c0:	beq	1f160 <crc32@@Base+0x5a18>
   1f3c4:	mov	r0, r4
   1f3c8:	add	r2, sp, #36	; 0x24
   1f3cc:	mov	r1, r5
   1f3d0:	str	r4, [sp, #28]
   1f3d4:	bl	12224 <__strtok_r@plt>
   1f3d8:	cmp	r0, #0
   1f3dc:	beq	1f160 <crc32@@Base+0x5a18>
   1f3e0:	ldrb	r3, [r0]
   1f3e4:	cmp	r3, #35	; 0x23
   1f3e8:	beq	1f160 <crc32@@Base+0x5a18>
   1f3ec:	mov	r7, #13
   1f3f0:	mov	fp, #5
   1f3f4:	b	1f31c <crc32@@Base+0x5bd4>
   1f3f8:	mov	r2, r4
   1f3fc:	mov	r1, r9
   1f400:	ldr	r0, [pc, #648]	; 1f690 <crc32@@Base+0x5f48>
   1f404:	bl	1a5c8 <crc32@@Base+0xe80>
   1f408:	movw	r1, #36148	; 0x8d34
   1f40c:	mov	r2, #2
   1f410:	movt	r1, #3
   1f414:	str	r0, [r8, #136]	; 0x88
   1f418:	mov	r0, r4
   1f41c:	bl	1217c <strncmp@plt>
   1f420:	subs	r4, r0, #0
   1f424:	beq	1f610 <crc32@@Base+0x5ec8>
   1f428:	mov	r4, #0
   1f42c:	add	r2, sp, #36	; 0x24
   1f430:	mov	r0, r4
   1f434:	mov	r1, r5
   1f438:	str	r4, [sp, #28]
   1f43c:	bl	12224 <__strtok_r@plt>
   1f440:	cmp	r0, #0
   1f444:	beq	1f160 <crc32@@Base+0x5a18>
   1f448:	ldrb	r3, [r0]
   1f44c:	cmp	r3, #35	; 0x23
   1f450:	beq	1f160 <crc32@@Base+0x5a18>
   1f454:	add	r2, sp, #36	; 0x24
   1f458:	mov	r1, r5
   1f45c:	mov	r0, r4
   1f460:	str	r4, [sp, #28]
   1f464:	bl	12224 <__strtok_r@plt>
   1f468:	cmp	r0, #0
   1f46c:	beq	1f160 <crc32@@Base+0x5a18>
   1f470:	ldrb	r3, [r0]
   1f474:	cmp	r3, #35	; 0x23
   1f478:	beq	1f160 <crc32@@Base+0x5a18>
   1f47c:	mov	r0, r4
   1f480:	add	r2, sp, #36	; 0x24
   1f484:	mov	r1, r5
   1f488:	str	r4, [sp, #28]
   1f48c:	bl	12224 <__strtok_r@plt>
   1f490:	cmp	r0, #0
   1f494:	bne	1f30c <crc32@@Base+0x5bc4>
   1f498:	b	1f160 <crc32@@Base+0x5a18>
   1f49c:	mov	r3, #0
   1f4a0:	add	r2, sp, #36	; 0x24
   1f4a4:	mov	r0, r3
   1f4a8:	mov	r1, r5
   1f4ac:	str	r4, [r8, #148]	; 0x94
   1f4b0:	str	r3, [sp, #28]
   1f4b4:	bl	12224 <__strtok_r@plt>
   1f4b8:	subs	r4, r0, #0
   1f4bc:	beq	1f160 <crc32@@Base+0x5a18>
   1f4c0:	ldrb	r3, [r4]
   1f4c4:	cmp	r3, #35	; 0x23
   1f4c8:	beq	1f160 <crc32@@Base+0x5a18>
   1f4cc:	mov	r0, r4
   1f4d0:	mov	r2, r6
   1f4d4:	ldr	r1, [sp, #12]
   1f4d8:	bl	1e2c8 <crc32@@Base+0x4b80>
   1f4dc:	mov	r3, #0
   1f4e0:	add	r2, sp, #36	; 0x24
   1f4e4:	mov	r1, r5
   1f4e8:	str	r3, [sp, #28]
   1f4ec:	str	r0, [r8, #168]	; 0xa8
   1f4f0:	mov	r0, r3
   1f4f4:	bl	12224 <__strtok_r@plt>
   1f4f8:	subs	r4, r0, #0
   1f4fc:	beq	1f160 <crc32@@Base+0x5a18>
   1f500:	ldrb	r3, [r4]
   1f504:	cmp	r3, #35	; 0x23
   1f508:	beq	1f160 <crc32@@Base+0x5a18>
   1f50c:	mov	r0, r4
   1f510:	mov	r2, r6
   1f514:	ldr	r1, [sp, #12]
   1f518:	mov	r4, #0
   1f51c:	bl	1e2c8 <crc32@@Base+0x4b80>
   1f520:	add	r2, sp, #36	; 0x24
   1f524:	mov	r1, r5
   1f528:	str	r4, [sp, #28]
   1f52c:	str	r0, [r8, #156]	; 0x9c
   1f530:	mov	r0, r4
   1f534:	bl	12224 <__strtok_r@plt>
   1f538:	cmp	r0, #0
   1f53c:	beq	1f160 <crc32@@Base+0x5a18>
   1f540:	ldrb	r3, [r0]
   1f544:	cmp	r3, #35	; 0x23
   1f548:	beq	1f160 <crc32@@Base+0x5a18>
   1f54c:	add	r2, sp, #36	; 0x24
   1f550:	mov	r1, r5
   1f554:	mov	r0, r4
   1f558:	str	r4, [sp, #28]
   1f55c:	bl	12224 <__strtok_r@plt>
   1f560:	cmp	r0, #0
   1f564:	beq	1f160 <crc32@@Base+0x5a18>
   1f568:	ldrb	r3, [r0]
   1f56c:	cmp	r3, #35	; 0x23
   1f570:	beq	1f160 <crc32@@Base+0x5a18>
   1f574:	mov	r0, r4
   1f578:	add	r2, sp, #36	; 0x24
   1f57c:	mov	r1, r5
   1f580:	str	r4, [sp, #28]
   1f584:	bl	12224 <__strtok_r@plt>
   1f588:	cmp	r0, #0
   1f58c:	beq	1f160 <crc32@@Base+0x5a18>
   1f590:	ldrb	r3, [r0]
   1f594:	cmp	r3, #35	; 0x23
   1f598:	beq	1f160 <crc32@@Base+0x5a18>
   1f59c:	mov	r7, #14
   1f5a0:	mov	fp, #6
   1f5a4:	b	1f31c <crc32@@Base+0x5bd4>
   1f5a8:	mov	r3, #0
   1f5ac:	add	r2, sp, #36	; 0x24
   1f5b0:	mov	r0, r3
   1f5b4:	mov	r1, r5
   1f5b8:	str	r3, [sp, #28]
   1f5bc:	bl	12224 <__strtok_r@plt>
   1f5c0:	subs	r4, r0, #0
   1f5c4:	beq	1f160 <crc32@@Base+0x5a18>
   1f5c8:	ldrb	r3, [r4]
   1f5cc:	cmp	r3, #35	; 0x23
   1f5d0:	beq	1f160 <crc32@@Base+0x5a18>
   1f5d4:	cmp	r7, #13
   1f5d8:	beq	1f35c <crc32@@Base+0x5c14>
   1f5dc:	cmp	r7, #14
   1f5e0:	beq	1f4cc <crc32@@Base+0x5d84>
   1f5e4:	b	1f2b8 <crc32@@Base+0x5b70>
   1f5e8:	ldr	r0, [sp, #16]
   1f5ec:	bl	1e95c <crc32@@Base+0x5214>
   1f5f0:	ldr	r3, [sp, #20]
   1f5f4:	ldr	r2, [sp, #44]	; 0x2c
   1f5f8:	mov	r0, #0
   1f5fc:	ldr	r3, [r3]
   1f600:	cmp	r2, r3
   1f604:	bne	1f68c <crc32@@Base+0x5f44>
   1f608:	add	sp, sp, #52	; 0x34
   1f60c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f610:	add	r2, sp, #36	; 0x24
   1f614:	mov	r1, r5
   1f618:	mov	r3, #32768	; 0x8000
   1f61c:	str	r4, [sp, #28]
   1f620:	str	r3, [r8, #160]	; 0xa0
   1f624:	bl	12224 <__strtok_r@plt>
   1f628:	cmp	r0, #0
   1f62c:	bne	1f448 <crc32@@Base+0x5d00>
   1f630:	b	1f160 <crc32@@Base+0x5a18>
   1f634:	movw	r2, #65044	; 0xfe14
   1f638:	movt	r2, #4
   1f63c:	str	r4, [sp, #4]
   1f640:	mov	r1, #1
   1f644:	ldr	r0, [r2]
   1f648:	movw	r2, #25412	; 0x6344
   1f64c:	ldr	r3, [sp, #12]
   1f650:	movt	r2, #3
   1f654:	str	r6, [sp]
   1f658:	bl	122b4 <__fprintf_chk@plt>
   1f65c:	mov	r0, #1
   1f660:	bl	121f4 <exit@plt>
   1f664:	movw	r1, #65044	; 0xfe14
   1f668:	movt	r1, #4
   1f66c:	ldr	r3, [sp, #12]
   1f670:	movw	r2, #39684	; 0x9b04
   1f674:	ldr	r0, [r1]
   1f678:	movt	r2, #3
   1f67c:	mov	r1, #1
   1f680:	bl	122b4 <__fprintf_chk@plt>
   1f684:	mov	r0, #1
   1f688:	bl	121f4 <exit@plt>
   1f68c:	bl	12494 <__stack_chk_fail@plt>
   1f690:	ldrdeq	pc, [r4], -r4
   1f694:	subs	r0, r0, #9
   1f698:	movne	r0, #1
   1f69c:	bx	lr
   1f6a0:	movw	r3, #63536	; 0xf830
   1f6a4:	movt	r3, #4
   1f6a8:	push	{r4, lr}
   1f6ac:	mov	r4, r0
   1f6b0:	ldr	r2, [r3, #4]
   1f6b4:	ldrb	r0, [r0]
   1f6b8:	cmp	r2, #0
   1f6bc:	beq	1f6e8 <crc32@@Base+0x5fa0>
   1f6c0:	ldr	r1, [r3]
   1f6c4:	cmp	r0, r1
   1f6c8:	bne	1f6dc <crc32@@Base+0x5f94>
   1f6cc:	b	1f6e8 <crc32@@Base+0x5fa0>
   1f6d0:	ldr	r1, [r3, #8]!
   1f6d4:	cmp	r0, r1
   1f6d8:	beq	1f6e8 <crc32@@Base+0x5fa0>
   1f6dc:	ldr	r2, [r3, #12]
   1f6e0:	cmp	r2, #0
   1f6e4:	bne	1f6d0 <crc32@@Base+0x5f88>
   1f6e8:	movw	r1, #41756	; 0xa31c
   1f6ec:	mov	r0, #1
   1f6f0:	movt	r1, #3
   1f6f4:	bl	12770 <__printf_chk@plt>
   1f6f8:	ldrb	r2, [r4, #8]
   1f6fc:	movw	r1, #41796	; 0xa344
   1f700:	mov	r0, #1
   1f704:	movt	r1, #3
   1f708:	bl	12770 <__printf_chk@plt>
   1f70c:	movw	r1, #29776	; 0x7450
   1f710:	mov	r0, #1
   1f714:	movt	r1, #3
   1f718:	bl	12770 <__printf_chk@plt>
   1f71c:	ldr	r0, [r4, #4]
   1f720:	sub	r0, r0, #4
   1f724:	bl	19d34 <crc32@@Base+0x5ec>
   1f728:	ldr	r2, [r4, #16]
   1f72c:	movw	r1, #37140	; 0x9114
   1f730:	mov	r0, #1
   1f734:	movt	r1, #3
   1f738:	bl	12770 <__printf_chk@plt>
   1f73c:	ldr	r2, [r4, #20]
   1f740:	movw	r1, #37160	; 0x9128
   1f744:	mov	r0, #1
   1f748:	movt	r1, #3
   1f74c:	pop	{r4, lr}
   1f750:	b	12770 <__printf_chk@plt>
   1f754:	add	r1, r0, r1
   1f758:	mov	r3, #0
   1f75c:	ldrb	r2, [r0], #1
   1f760:	add	r3, r3, r2
   1f764:	cmp	r0, r1
   1f768:	uxtb	r3, r3
   1f76c:	bne	1f75c <crc32@@Base+0x6014>
   1f770:	mov	r0, r3
   1f774:	bx	lr
   1f778:	ldr	r3, [r0, #64]	; 0x40
   1f77c:	ldrb	r3, [r3]
   1f780:	cmp	r3, #0
   1f784:	beq	1f7cc <crc32@@Base+0x6084>
   1f788:	ldr	r2, [r0]
   1f78c:	ldr	r3, [r0, #8]
   1f790:	cmp	r2, #0
   1f794:	beq	1f7b4 <crc32@@Base+0x606c>
   1f798:	cmp	r3, #0
   1f79c:	bne	1f7ac <crc32@@Base+0x6064>
   1f7a0:	ldr	r3, [r0, #16]
   1f7a4:	cmp	r3, #0
   1f7a8:	beq	1f7bc <crc32@@Base+0x6074>
   1f7ac:	mov	r0, #1
   1f7b0:	bx	lr
   1f7b4:	cmp	r3, #0
   1f7b8:	bne	1f7a0 <crc32@@Base+0x6058>
   1f7bc:	ldr	r0, [r0, #28]
   1f7c0:	adds	r0, r0, #0
   1f7c4:	movne	r0, #1
   1f7c8:	bx	lr
   1f7cc:	push	{lr}		; (str lr, [sp, #-4]!)
   1f7d0:	movw	r2, #65044	; 0xfe14
   1f7d4:	sub	sp, sp, #12
   1f7d8:	movt	r2, #4
   1f7dc:	ldr	r3, [r0, #80]	; 0x50
   1f7e0:	movw	r1, #41832	; 0xa368
   1f7e4:	ldr	r0, [r2]
   1f7e8:	movt	r1, #3
   1f7ec:	movw	r2, #41816	; 0xa358
   1f7f0:	str	r1, [sp]
   1f7f4:	movt	r2, #3
   1f7f8:	mov	r1, #1
   1f7fc:	bl	122b4 <__fprintf_chk@plt>
   1f800:	mvn	r0, #0
   1f804:	add	sp, sp, #12
   1f808:	pop	{pc}		; (ldr pc, [sp], #4)
   1f80c:	push	{r4, r5, r6, r7, lr}
   1f810:	movw	lr, #3112	; 0xc28
   1f814:	movt	lr, #6
   1f818:	sub	sp, sp, #4160	; 0x1040
   1f81c:	movw	r4, #61168	; 0xeef0
   1f820:	movt	r4, #4
   1f824:	sub	sp, sp, #44	; 0x2c
   1f828:	ldr	r6, [lr]
   1f82c:	add	r2, sp, #4160	; 0x1040
   1f830:	ldr	r3, [r4]
   1f834:	add	r2, r2, #36	; 0x24
   1f838:	cmp	r6, #0
   1f83c:	str	r3, [r2]
   1f840:	ble	1f94c <crc32@@Base+0x6204>
   1f844:	ldr	r2, [lr, #4]
   1f848:	mov	r5, r0
   1f84c:	mov	r0, #44	; 0x2c
   1f850:	mov	ip, #0
   1f854:	mla	r0, r0, r6, r2
   1f858:	mov	r3, r2
   1f85c:	ldr	r1, [r3]
   1f860:	add	r3, r3, #44	; 0x2c
   1f864:	cmp	r1, #9
   1f868:	addeq	ip, ip, #1
   1f86c:	cmp	r3, r0
   1f870:	bne	1f85c <crc32@@Base+0x6114>
   1f874:	cmp	ip, #1
   1f878:	bls	1f8c4 <crc32@@Base+0x617c>
   1f87c:	movw	r3, #65044	; 0xfe14
   1f880:	movt	r3, #4
   1f884:	movw	r0, #41912	; 0xa3b8
   1f888:	mov	r2, #41	; 0x29
   1f88c:	ldr	r3, [r3]
   1f890:	movt	r0, #3
   1f894:	mov	r1, #1
   1f898:	bl	12578 <fwrite@plt>
   1f89c:	mov	r0, #0
   1f8a0:	add	r3, sp, #4160	; 0x1040
   1f8a4:	add	r3, r3, #36	; 0x24
   1f8a8:	ldr	r2, [r3]
   1f8ac:	ldr	r3, [r4]
   1f8b0:	cmp	r2, r3
   1f8b4:	bne	1fa0c <crc32@@Base+0x62c4>
   1f8b8:	add	sp, sp, #4160	; 0x1040
   1f8bc:	add	sp, sp, #44	; 0x2c
   1f8c0:	pop	{r4, r5, r6, r7, pc}
   1f8c4:	mov	r0, #0
   1f8c8:	ldr	r1, [r2]
   1f8cc:	add	r2, r2, #44	; 0x2c
   1f8d0:	cmp	r1, #10
   1f8d4:	addeq	r0, r0, #1
   1f8d8:	cmp	r3, r2
   1f8dc:	bne	1f8c8 <crc32@@Base+0x6180>
   1f8e0:	cmp	r0, #1
   1f8e4:	bls	1f910 <crc32@@Base+0x61c8>
   1f8e8:	movw	r3, #65044	; 0xfe14
   1f8ec:	movt	r3, #4
   1f8f0:	movw	r0, #41956	; 0xa3e4
   1f8f4:	mov	r2, #36	; 0x24
   1f8f8:	ldr	r3, [r3]
   1f8fc:	movt	r0, #3
   1f900:	mov	r1, #1
   1f904:	bl	12578 <fwrite@plt>
   1f908:	mov	r0, #0
   1f90c:	b	1f8a0 <crc32@@Base+0x6158>
   1f910:	ldr	r7, [lr, #4]
   1f914:	ldr	r3, [r7]
   1f918:	cmp	r3, #9
   1f91c:	beq	1f954 <crc32@@Base+0x620c>
   1f920:	mov	r3, r7
   1f924:	mov	r2, #0
   1f928:	b	1f940 <crc32@@Base+0x61f8>
   1f92c:	add	r3, r3, #44	; 0x2c
   1f930:	ldr	r1, [r3]
   1f934:	cmp	r1, #9
   1f938:	mov	r7, r3
   1f93c:	beq	1f954 <crc32@@Base+0x620c>
   1f940:	add	r2, r2, #1
   1f944:	cmp	r6, r2
   1f948:	bne	1f92c <crc32@@Base+0x61e4>
   1f94c:	mov	r0, #4096	; 0x1000
   1f950:	b	1f8a0 <crc32@@Base+0x6158>
   1f954:	add	r2, sp, #8
   1f958:	ldr	r1, [r7, #4]
   1f95c:	mov	r0, #3
   1f960:	bl	12620 <__xstat@plt>
   1f964:	cmp	r0, #0
   1f968:	blt	1f9a0 <crc32@@Base+0x6258>
   1f96c:	ldr	r0, [r7, #40]	; 0x28
   1f970:	cmp	r5, #0
   1f974:	ldr	r3, [sp, #52]	; 0x34
   1f978:	add	r0, r0, #2
   1f97c:	movne	r2, #1
   1f980:	add	r3, r3, #4096	; 0x1000
   1f984:	strne	r2, [r5]
   1f988:	lsl	r0, r0, #2
   1f98c:	add	r3, r3, #35	; 0x23
   1f990:	add	r0, r0, r3
   1f994:	bic	r0, r0, #4080	; 0xff0
   1f998:	bic	r0, r0, #15
   1f99c:	b	1f8a0 <crc32@@Base+0x6158>
   1f9a0:	mov	r2, #4096	; 0x1000
   1f9a4:	mov	r1, #0
   1f9a8:	add	r0, sp, #100	; 0x64
   1f9ac:	bl	122e4 <memset@plt>
   1f9b0:	mov	r1, #4096	; 0x1000
   1f9b4:	add	r0, sp, #100	; 0x64
   1f9b8:	bl	125d8 <getcwd@plt>
   1f9bc:	cmp	r0, #0
   1f9c0:	addne	r1, sp, #100	; 0x64
   1f9c4:	beq	1f9f4 <crc32@@Base+0x62ac>
   1f9c8:	movw	r0, #65044	; 0xfe14
   1f9cc:	movt	r0, #4
   1f9d0:	ldr	r3, [r7, #4]
   1f9d4:	movw	r2, #42012	; 0xa41c
   1f9d8:	ldr	r0, [r0]
   1f9dc:	movt	r2, #3
   1f9e0:	str	r1, [sp]
   1f9e4:	mov	r1, #1
   1f9e8:	bl	122b4 <__fprintf_chk@plt>
   1f9ec:	mov	r0, #0
   1f9f0:	b	1f8a0 <crc32@@Base+0x6158>
   1f9f4:	movw	r0, #41996	; 0xa40c
   1f9f8:	movt	r0, #3
   1f9fc:	bl	12284 <perror@plt>
   1fa00:	movw	r1, #41884	; 0xa39c
   1fa04:	movt	r1, #3
   1fa08:	b	1f9c8 <crc32@@Base+0x6280>
   1fa0c:	bl	12494 <__stack_chk_fail@plt>
   1fa10:	push	{r4, r5, r6, lr}
   1fa14:	mov	r4, r0
   1fa18:	ldrb	r5, [r0, #8]
   1fa1c:	cmp	r5, #0
   1fa20:	beq	1fa48 <crc32@@Base+0x6300>
   1fa24:	ldrb	r3, [r0, #9]
   1fa28:	ldrh	r0, [r0, #10]
   1fa2c:	orr	r0, r0, r3, lsl #16
   1fa30:	cmp	r0, r1
   1fa34:	mov	r1, r0
   1fa38:	bhi	1faa0 <crc32@@Base+0x6358>
   1fa3c:	cmp	r0, #0
   1fa40:	bne	1fa54 <crc32@@Base+0x630c>
   1fa44:	b	1fa5c <crc32@@Base+0x6314>
   1fa48:	cmp	r1, #31
   1fa4c:	bls	1faa0 <crc32@@Base+0x6358>
   1fa50:	mov	r1, #32
   1fa54:	mov	r0, r4
   1fa58:	bl	1f754 <crc32@@Base+0x600c>
   1fa5c:	ldrb	r3, [r4, #31]
   1fa60:	sub	r0, r0, r3
   1fa64:	uxtb	r0, r0
   1fa68:	cmp	r3, r0
   1fa6c:	bne	1faa0 <crc32@@Base+0x6358>
   1fa70:	cmp	r5, #0
   1fa74:	bne	1fa98 <crc32@@Base+0x6350>
   1fa78:	movw	r1, #479	; 0x1df
   1fa7c:	add	r0, r4, #32
   1fa80:	bl	1f754 <crc32@@Base+0x600c>
   1fa84:	ldrb	r3, [r4, #511]	; 0x1ff
   1fa88:	cmp	r3, r0
   1fa8c:	moveq	r0, #0
   1fa90:	mvnne	r0, #10
   1fa94:	pop	{r4, r5, r6, pc}
   1fa98:	mov	r0, #0
   1fa9c:	pop	{r4, r5, r6, pc}
   1faa0:	mvn	r0, #10
   1faa4:	pop	{r4, r5, r6, pc}
   1faa8:	push	{r4, r5, r6, r7, r8, lr}
   1faac:	movw	r7, #63536	; 0xf830
   1fab0:	movt	r7, #4
   1fab4:	mov	r6, r0
   1fab8:	ldr	r0, [r7, #4]
   1fabc:	cmp	r0, #0
   1fac0:	beq	1fafc <crc32@@Base+0x63b4>
   1fac4:	mov	r4, r7
   1fac8:	mov	r5, #0
   1facc:	b	1fae0 <crc32@@Base+0x6398>
   1fad0:	ldr	r0, [r4, #4]
   1fad4:	add	r5, r5, #1
   1fad8:	cmp	r0, #0
   1fadc:	beq	1fafc <crc32@@Base+0x63b4>
   1fae0:	mov	r1, r6
   1fae4:	add	r4, r4, #8
   1fae8:	bl	1265c <strcmp@plt>
   1faec:	cmp	r0, #0
   1faf0:	bne	1fad0 <crc32@@Base+0x6388>
   1faf4:	ldr	r0, [r7, r5, lsl #3]
   1faf8:	pop	{r4, r5, r6, r7, r8, pc}
   1fafc:	mvn	r0, #0
   1fb00:	pop	{r4, r5, r6, r7, r8, pc}
   1fb04:	push	{r4, r5, r6, r7, r8, lr}
   1fb08:	movw	r7, #63536	; 0xf830
   1fb0c:	movt	r7, #4
   1fb10:	mov	r6, r0
   1fb14:	ldr	r0, [r7, #68]	; 0x44
   1fb18:	cmp	r0, #0
   1fb1c:	beq	1fb5c <crc32@@Base+0x6414>
   1fb20:	add	r4, r7, #64	; 0x40
   1fb24:	mov	r5, #0
   1fb28:	b	1fb3c <crc32@@Base+0x63f4>
   1fb2c:	ldr	r0, [r4, #4]
   1fb30:	add	r5, r5, #1
   1fb34:	cmp	r0, #0
   1fb38:	beq	1fb5c <crc32@@Base+0x6414>
   1fb3c:	mov	r1, r6
   1fb40:	add	r4, r4, #8
   1fb44:	bl	1265c <strcmp@plt>
   1fb48:	cmp	r0, #0
   1fb4c:	bne	1fb2c <crc32@@Base+0x63e4>
   1fb50:	add	r5, r7, r5, lsl #3
   1fb54:	ldr	r0, [r5, #64]	; 0x40
   1fb58:	pop	{r4, r5, r6, r7, r8, pc}
   1fb5c:	mvn	r0, #0
   1fb60:	pop	{r4, r5, r6, r7, r8, pc}
   1fb64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb68:	movw	r3, #61168	; 0xeef0
   1fb6c:	sub	sp, sp, #300	; 0x12c
   1fb70:	movt	r3, #4
   1fb74:	movw	fp, #25388	; 0x632c
   1fb78:	movt	fp, #3
   1fb7c:	str	r3, [sp, #20]
   1fb80:	mov	r9, r0
   1fb84:	ldr	r3, [r3]
   1fb88:	mov	r8, #0
   1fb8c:	movw	r2, #3112	; 0xc28
   1fb90:	movt	r2, #6
   1fb94:	str	r2, [sp, #4]
   1fb98:	movw	r2, #42272	; 0xa520
   1fb9c:	str	r3, [sp, #292]	; 0x124
   1fba0:	movt	r2, #3
   1fba4:	movw	r3, #65044	; 0xfe14
   1fba8:	str	r2, [sp, #12]
   1fbac:	movt	r3, #4
   1fbb0:	str	r3, [sp, #16]
   1fbb4:	mov	r0, r9
   1fbb8:	bl	12260 <feof@plt>
   1fbbc:	subs	r1, r0, #0
   1fbc0:	bne	1fd5c <crc32@@Base+0x6614>
   1fbc4:	mov	r2, #256	; 0x100
   1fbc8:	add	r0, sp, #36	; 0x24
   1fbcc:	bl	122e4 <memset@plt>
   1fbd0:	mov	r2, r9
   1fbd4:	add	r0, sp, #36	; 0x24
   1fbd8:	mov	r1, #256	; 0x100
   1fbdc:	bl	12548 <fgets@plt>
   1fbe0:	subs	r7, r0, #0
   1fbe4:	beq	1fd5c <crc32@@Base+0x6614>
   1fbe8:	ldrb	r3, [r7]
   1fbec:	cmp	r3, #35	; 0x23
   1fbf0:	cmpne	r3, #10
   1fbf4:	moveq	r4, #1
   1fbf8:	movne	r4, #0
   1fbfc:	beq	1fbb4 <crc32@@Base+0x646c>
   1fc00:	bl	125c0 <strlen@plt>
   1fc04:	add	ip, sp, #32
   1fc08:	add	r2, sp, #28
   1fc0c:	ldr	r5, [pc, #924]	; 1ffb0 <crc32@@Base+0x6868>
   1fc10:	mov	r1, ip
   1fc14:	sub	r0, r0, #1
   1fc18:	ldrb	r3, [r7, r0]
   1fc1c:	cmp	r3, #10
   1fc20:	ldr	r3, [fp]
   1fc24:	strbeq	r4, [r7, r0]
   1fc28:	mov	r0, r7
   1fc2c:	mov	r4, #1
   1fc30:	strh	r3, [ip], #2
   1fc34:	lsr	r3, r3, #16
   1fc38:	strb	r3, [ip]
   1fc3c:	ldr	r3, [sp, #4]
   1fc40:	ldr	sl, [r3, #4]
   1fc44:	bl	12224 <__strtok_r@plt>
   1fc48:	ldr	r1, [sp, #12]
   1fc4c:	mov	r6, r0
   1fc50:	b	1fc64 <crc32@@Base+0x651c>
   1fc54:	add	r4, r4, #1
   1fc58:	cmp	r4, #24
   1fc5c:	beq	1fd0c <crc32@@Base+0x65c4>
   1fc60:	ldr	r1, [r5, #4]!
   1fc64:	mov	r0, r6
   1fc68:	bl	1265c <strcmp@plt>
   1fc6c:	subs	r3, r0, #0
   1fc70:	bne	1fc54 <crc32@@Base+0x650c>
   1fc74:	mov	ip, #44	; 0x2c
   1fc78:	add	r2, sp, #28
   1fc7c:	mul	ip, ip, r8
   1fc80:	add	r1, sp, #32
   1fc84:	str	r3, [sp, #8]
   1fc88:	add	r5, sl, ip
   1fc8c:	str	r4, [sl, ip]
   1fc90:	bl	12224 <__strtok_r@plt>
   1fc94:	ldr	r3, [sp, #8]
   1fc98:	subs	r6, r0, #0
   1fc9c:	beq	1ff64 <crc32@@Base+0x681c>
   1fca0:	sub	r4, r4, #1
   1fca4:	cmp	r4, #22
   1fca8:	ldrls	pc, [pc, r4, lsl #2]
   1fcac:	b	1fd0c <crc32@@Base+0x65c4>
   1fcb0:	andeq	pc, r1, r4, asr #30
   1fcb4:	andeq	pc, r1, r0, lsr #29
   1fcb8:	andeq	pc, r1, ip, lsl #26
   1fcbc:	andeq	pc, r1, ip, lsl #26
   1fcc0:	andeq	pc, r1, r4, lsl #27
   1fcc4:	andeq	pc, r1, r4, lsl #27
   1fcc8:	andeq	pc, r1, r0, lsl pc	; <UNPREDICTABLE>
   1fccc:	andeq	pc, r1, r4, lsl #27
   1fcd0:	ldrdeq	pc, [r1], -ip
   1fcd4:	andeq	pc, r1, ip, lsl #26
   1fcd8:	andeq	pc, r1, r0, asr lr	; <UNPREDICTABLE>
   1fcdc:	andeq	pc, r1, r4, asr #27
   1fce0:	andeq	pc, r1, r4, asr #27
   1fce4:			; <UNDEFINED> instruction: 0x0001fdb4
   1fce8:			; <UNDEFINED> instruction: 0x0001fdb4
   1fcec:	strdeq	pc, [r1], -r8
   1fcf0:	andeq	pc, r1, r0, ror #29
   1fcf4:	muleq	r1, ip, sp
   1fcf8:	muleq	r1, ip, sp
   1fcfc:	ldrdeq	pc, [r1], -r4
   1fd00:	muleq	r1, r4, lr
   1fd04:	muleq	r1, ip, sp
   1fd08:			; <UNDEFINED> instruction: 0x0001fdb4
   1fd0c:	ldr	r0, [sp, #16]
   1fd10:	movw	r2, #42440	; 0xa5c8
   1fd14:	mov	r3, r7
   1fd18:	mov	r1, #1
   1fd1c:	movt	r2, #3
   1fd20:	ldr	r0, [r0]
   1fd24:	bl	122b4 <__fprintf_chk@plt>
   1fd28:	add	r8, r8, #1
   1fd2c:	cmp	r8, #255	; 0xff
   1fd30:	ble	1fbb4 <crc32@@Base+0x646c>
   1fd34:	movw	r3, #65044	; 0xfe14
   1fd38:	movt	r3, #4
   1fd3c:	movw	r0, #42468	; 0xa5e4
   1fd40:	mov	r2, #45	; 0x2d
   1fd44:	ldr	r3, [r3]
   1fd48:	movt	r0, #3
   1fd4c:	mov	r1, #1
   1fd50:	bl	12578 <fwrite@plt>
   1fd54:	mvn	r0, #0
   1fd58:	b	1fd68 <crc32@@Base+0x6620>
   1fd5c:	ldr	r3, [sp, #4]
   1fd60:	mov	r0, #0
   1fd64:	str	r8, [r3]
   1fd68:	ldr	r3, [sp, #20]
   1fd6c:	ldr	r2, [sp, #292]	; 0x124
   1fd70:	ldr	r3, [r3]
   1fd74:	cmp	r2, r3
   1fd78:	bne	1ffac <crc32@@Base+0x6864>
   1fd7c:	add	sp, sp, #300	; 0x12c
   1fd80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd84:	mov	r0, r6
   1fd88:	mov	r2, #16
   1fd8c:	mov	r1, #0
   1fd90:	bl	122cc <strtoul@plt>
   1fd94:	str	r0, [r5, #4]
   1fd98:	b	1fd28 <crc32@@Base+0x65e0>
   1fd9c:	mov	r2, #0
   1fda0:	mov	r0, r6
   1fda4:	mov	r1, r2
   1fda8:	bl	122cc <strtoul@plt>
   1fdac:	str	r0, [r5, #4]
   1fdb0:	b	1fd28 <crc32@@Base+0x65e0>
   1fdb4:	mov	r0, r6
   1fdb8:	bl	12308 <__strdup@plt>
   1fdbc:	str	r0, [r5, #4]
   1fdc0:	b	1fd28 <crc32@@Base+0x65e0>
   1fdc4:	mov	r0, r6
   1fdc8:	mov	r2, #10
   1fdcc:	mov	r1, #0
   1fdd0:	bl	122cc <strtoul@plt>
   1fdd4:	str	r0, [r5, #4]
   1fdd8:	b	1fd28 <crc32@@Base+0x65e0>
   1fddc:	mov	r0, r6
   1fde0:	str	r3, [sp, #8]
   1fde4:	bl	12308 <__strdup@plt>
   1fde8:	ldr	r3, [sp, #8]
   1fdec:	add	r4, r5, #8
   1fdf0:	mov	r6, r3
   1fdf4:	str	r0, [r5, #4]
   1fdf8:	add	r2, sp, #28
   1fdfc:	add	r1, sp, #32
   1fe00:	mov	r0, #0
   1fe04:	bl	12224 <__strtok_r@plt>
   1fe08:	cmp	r0, #0
   1fe0c:	beq	1ff5c <crc32@@Base+0x6814>
   1fe10:	mov	r2, #16
   1fe14:	mov	r1, #0
   1fe18:	bl	122cc <strtoul@plt>
   1fe1c:	add	r6, r6, #1
   1fe20:	cmp	r6, #8
   1fe24:	str	r0, [r4], #4
   1fe28:	bne	1fdf8 <crc32@@Base+0x66b0>
   1fe2c:	movw	r3, #65044	; 0xfe14
   1fe30:	movt	r3, #4
   1fe34:	movw	r0, #42368	; 0xa580
   1fe38:	mov	r2, #30
   1fe3c:	ldr	r3, [r3]
   1fe40:	mov	r1, #1
   1fe44:	movt	r0, #3
   1fe48:	bl	12578 <fwrite@plt>
   1fe4c:	b	1fd54 <crc32@@Base+0x660c>
   1fe50:	add	r2, sp, #28
   1fe54:	add	r1, sp, #32
   1fe58:	mov	r0, #0
   1fe5c:	bl	12224 <__strtok_r@plt>
   1fe60:	subs	r4, r0, #0
   1fe64:	beq	1ff88 <crc32@@Base+0x6840>
   1fe68:	mov	r2, #16
   1fe6c:	mov	r1, #0
   1fe70:	mov	r0, r6
   1fe74:	bl	122cc <strtoul@plt>
   1fe78:	mov	r2, #16
   1fe7c:	mov	r1, #0
   1fe80:	str	r0, [r5, #4]
   1fe84:	mov	r0, r4
   1fe88:	bl	122cc <strtoul@plt>
   1fe8c:	str	r0, [r5, #8]
   1fe90:	b	1fd28 <crc32@@Base+0x65e0>
   1fe94:	mov	r3, #1
   1fe98:	strb	r3, [r5, #4]
   1fe9c:	b	1fd28 <crc32@@Base+0x65e0>
   1fea0:	mov	r0, r6
   1fea4:	bl	1faa8 <crc32@@Base+0x6360>
   1fea8:	cmp	r0, #0
   1feac:	bge	1fdbc <crc32@@Base+0x6674>
   1feb0:	movw	r1, #65044	; 0xfe14
   1feb4:	movt	r1, #4
   1feb8:	mov	r3, r6
   1febc:	movw	r2, #42312	; 0xa548
   1fec0:	ldr	r0, [r1]
   1fec4:	movt	r2, #3
   1fec8:	mov	r1, #1
   1fecc:	bl	122b4 <__fprintf_chk@plt>
   1fed0:	b	1fd54 <crc32@@Base+0x660c>
   1fed4:	mov	r3, #0
   1fed8:	strb	r3, [r5, #4]
   1fedc:	b	1fd28 <crc32@@Base+0x65e0>
   1fee0:	mov	r2, #0
   1fee4:	mov	r0, r6
   1fee8:	mov	r1, r2
   1feec:	bl	122cc <strtoul@plt>
   1fef0:	strb	r0, [r5, #4]
   1fef4:	b	1fd28 <crc32@@Base+0x65e0>
   1fef8:	mov	r2, #0
   1fefc:	mov	r0, r6
   1ff00:	mov	r1, r2
   1ff04:	bl	1211c <strtol@plt>
   1ff08:	str	r0, [r5, #4]
   1ff0c:	b	1fd28 <crc32@@Base+0x65e0>
   1ff10:	mov	r0, r6
   1ff14:	bl	1fb04 <crc32@@Base+0x63bc>
   1ff18:	cmp	r0, #0
   1ff1c:	bge	1fdbc <crc32@@Base+0x6674>
   1ff20:	movw	r1, #65044	; 0xfe14
   1ff24:	movt	r1, #4
   1ff28:	mov	r3, r6
   1ff2c:	movw	r2, #42340	; 0xa564
   1ff30:	ldr	r0, [r1]
   1ff34:	movt	r2, #3
   1ff38:	mov	r1, #1
   1ff3c:	bl	122b4 <__fprintf_chk@plt>
   1ff40:	b	1fd54 <crc32@@Base+0x660c>
   1ff44:	mov	r0, r6
   1ff48:	mov	r2, #10
   1ff4c:	mov	r1, #0
   1ff50:	bl	1211c <strtol@plt>
   1ff54:	str	r0, [r5, #4]
   1ff58:	b	1fd28 <crc32@@Base+0x65e0>
   1ff5c:	str	r6, [r5, #40]	; 0x28
   1ff60:	b	1fd28 <crc32@@Base+0x65e0>
   1ff64:	movw	r1, #65044	; 0xfe14
   1ff68:	movt	r1, #4
   1ff6c:	mov	r3, r7
   1ff70:	movw	r2, #42280	; 0xa528
   1ff74:	ldr	r0, [r1]
   1ff78:	movt	r2, #3
   1ff7c:	mov	r1, #1
   1ff80:	bl	122b4 <__fprintf_chk@plt>
   1ff84:	b	1fd54 <crc32@@Base+0x660c>
   1ff88:	movw	r3, #65044	; 0xfe14
   1ff8c:	movt	r3, #4
   1ff90:	movw	r0, #42400	; 0xa5a0
   1ff94:	mov	r2, #37	; 0x25
   1ff98:	ldr	r3, [r3]
   1ff9c:	mov	r1, #1
   1ffa0:	movt	r0, #3
   1ffa4:	bl	12578 <fwrite@plt>
   1ffa8:	b	1fd54 <crc32@@Base+0x660c>
   1ffac:	bl	12494 <__stack_chk_fail@plt>
   1ffb0:	andeq	sl, r3, r0, asr #5
   1ffb4:	push	{r4, r5, r6, r7, r8, lr}
   1ffb8:	mov	r7, r0
   1ffbc:	sub	sp, sp, #8
   1ffc0:	mov	r6, r1
   1ffc4:	ldr	r0, [r0, #64]	; 0x40
   1ffc8:	movw	r1, #49448	; 0xc128
   1ffcc:	movt	r1, #3
   1ffd0:	bl	1232c <fopen@plt>
   1ffd4:	subs	r8, r0, #0
   1ffd8:	beq	200c8 <crc32@@Base+0x6980>
   1ffdc:	mov	r1, #1
   1ffe0:	mov	r0, #11264	; 0x2c00
   1ffe4:	bl	12518 <calloc@plt>
   1ffe8:	movw	r5, #3112	; 0xc28
   1ffec:	movt	r5, #6
   1fff0:	cmp	r0, #0
   1fff4:	str	r0, [r5, #4]
   1fff8:	beq	2015c <crc32@@Base+0x6a14>
   1fffc:	mov	r0, r8
   20000:	bl	1244c <rewind@plt>
   20004:	mov	r0, r8
   20008:	bl	1fb64 <crc32@@Base+0x641c>
   2000c:	mov	r4, r0
   20010:	mov	r0, r8
   20014:	bl	125fc <fclose@plt>
   20018:	cmp	r4, #0
   2001c:	bne	2010c <crc32@@Base+0x69c4>
   20020:	ldr	r1, [r5]
   20024:	ldr	r0, [r5, #4]
   20028:	cmp	r1, #0
   2002c:	ble	20064 <crc32@@Base+0x691c>
   20030:	ldr	r3, [r0]
   20034:	cmp	r3, #1
   20038:	beq	20094 <crc32@@Base+0x694c>
   2003c:	mov	r3, r0
   20040:	b	20058 <crc32@@Base+0x6910>
   20044:	add	r3, r3, #44	; 0x2c
   20048:	ldr	r2, [r3]
   2004c:	cmp	r2, #1
   20050:	mov	ip, r3
   20054:	beq	20098 <crc32@@Base+0x6950>
   20058:	add	r4, r4, #1
   2005c:	cmp	r4, r1
   20060:	bne	20044 <crc32@@Base+0x68fc>
   20064:	mov	r4, #512	; 0x200
   20068:	bl	12128 <free@plt>
   2006c:	mov	r1, #1
   20070:	mov	r0, r4
   20074:	bl	12518 <calloc@plt>
   20078:	cmp	r0, #0
   2007c:	beq	2011c <crc32@@Base+0x69d4>
   20080:	str	r0, [r6, #8]
   20084:	mov	r0, #1
   20088:	str	r4, [r6, #4]
   2008c:	add	sp, sp, #8
   20090:	pop	{r4, r5, r6, r7, r8, pc}
   20094:	mov	ip, r0
   20098:	ldr	r3, [ip, #4]
   2009c:	cmn	r3, #1
   200a0:	blt	200f0 <crc32@@Base+0x69a8>
   200a4:	cmp	r3, #0
   200a8:	ble	20064 <crc32@@Base+0x691c>
   200ac:	cmp	r3, #1
   200b0:	bne	200f0 <crc32@@Base+0x69a8>
   200b4:	mov	r0, #0
   200b8:	bl	1f80c <crc32@@Base+0x60c4>
   200bc:	mov	r4, r0
   200c0:	ldr	r0, [r5, #4]
   200c4:	b	20068 <crc32@@Base+0x6920>
   200c8:	movw	r1, #65044	; 0xfe14
   200cc:	movt	r1, #4
   200d0:	ldr	r3, [r7, #64]	; 0x40
   200d4:	movw	r2, #42516	; 0xa614
   200d8:	ldr	r0, [r1]
   200dc:	movt	r2, #3
   200e0:	mov	r1, #1
   200e4:	bl	122b4 <__fprintf_chk@plt>
   200e8:	mov	r0, #1
   200ec:	bl	121f4 <exit@plt>
   200f0:	movw	r1, #65044	; 0xfe14
   200f4:	movt	r1, #4
   200f8:	movw	r2, #42572	; 0xa64c
   200fc:	movt	r2, #3
   20100:	ldr	r0, [r1]
   20104:	mov	r1, #1
   20108:	bl	122b4 <__fprintf_chk@plt>
   2010c:	ldr	r0, [r5, #4]
   20110:	bl	12128 <free@plt>
   20114:	mov	r0, #1
   20118:	bl	121f4 <exit@plt>
   2011c:	movw	r2, #65044	; 0xfe14
   20120:	movt	r2, #4
   20124:	ldr	r5, [r7, #80]	; 0x50
   20128:	ldr	r4, [r2]
   2012c:	bl	1268c <__errno_location@plt>
   20130:	ldr	r0, [r0]
   20134:	bl	12200 <strerror@plt>
   20138:	mov	r3, r5
   2013c:	movw	r2, #25352	; 0x6308
   20140:	mov	r1, #1
   20144:	movt	r2, #3
   20148:	str	r0, [sp]
   2014c:	mov	r0, r4
   20150:	bl	122b4 <__fprintf_chk@plt>
   20154:	mov	r0, #1
   20158:	bl	121f4 <exit@plt>
   2015c:	movw	r3, #65044	; 0xfe14
   20160:	movt	r3, #4
   20164:	mov	r2, #23
   20168:	mov	r1, #1
   2016c:	ldr	r3, [r3]
   20170:	movw	r0, #42548	; 0xa634
   20174:	movt	r0, #3
   20178:	bl	12578 <fwrite@plt>
   2017c:	mov	r0, r8
   20180:	bl	125fc <fclose@plt>
   20184:	mov	r0, #1
   20188:	bl	121f4 <exit@plt>
   2018c:	ldrb	r3, [r0, #8]
   20190:	cmp	r3, #0
   20194:	ldrbne	r3, [r0, #9]
   20198:	ldrhne	r0, [r0, #10]
   2019c:	orrne	r0, r0, r3, lsl #16
   201a0:	moveq	r0, #32
   201a4:	bx	lr
   201a8:	movw	r3, #3112	; 0xc28
   201ac:	movt	r3, #6
   201b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   201b4:	movw	r6, #61168	; 0xeef0
   201b8:	movt	r6, #4
   201bc:	ldr	ip, [r3]
   201c0:	sub	sp, sp, #100	; 0x64
   201c4:	ldr	r2, [r6]
   201c8:	cmp	ip, #0
   201cc:	str	r2, [sp, #92]	; 0x5c
   201d0:	ble	20214 <crc32@@Base+0x6acc>
   201d4:	ldr	r4, [r3, #4]
   201d8:	mov	r7, r0
   201dc:	ldr	r3, [r4]
   201e0:	cmp	r3, #9
   201e4:	beq	20234 <crc32@@Base+0x6aec>
   201e8:	mov	r3, r4
   201ec:	mov	r2, #0
   201f0:	b	20208 <crc32@@Base+0x6ac0>
   201f4:	add	r3, r3, #44	; 0x2c
   201f8:	ldr	r1, [r3]
   201fc:	cmp	r1, #9
   20200:	mov	r4, r3
   20204:	beq	20234 <crc32@@Base+0x6aec>
   20208:	add	r2, r2, #1
   2020c:	cmp	ip, r2
   20210:	bne	201f4 <crc32@@Base+0x6aac>
   20214:	mov	r8, #0
   20218:	ldr	r2, [sp, #92]	; 0x5c
   2021c:	mov	r0, r8
   20220:	ldr	r3, [r6]
   20224:	cmp	r2, r3
   20228:	bne	2038c <crc32@@Base+0x6c44>
   2022c:	add	sp, sp, #100	; 0x64
   20230:	pop	{r4, r5, r6, r7, r8, r9, pc}
   20234:	mov	r3, #2
   20238:	movw	r1, #49448	; 0xc128
   2023c:	strb	r3, [r7]
   20240:	movt	r1, #3
   20244:	ldr	r0, [r4, #4]
   20248:	bl	1232c <fopen@plt>
   2024c:	subs	r9, r0, #0
   20250:	beq	20364 <crc32@@Base+0x6c1c>
   20254:	bl	12488 <fileno@plt>
   20258:	mov	r2, sp
   2025c:	mov	r1, r0
   20260:	mov	r0, #3
   20264:	bl	12554 <__fxstat@plt>
   20268:	subs	r8, r0, #0
   2026c:	bne	20340 <crc32@@Base+0x6bf8>
   20270:	ldr	r2, [r4, #40]	; 0x28
   20274:	ldr	r1, [sp, #44]	; 0x2c
   20278:	add	r3, r1, r2, lsl #2
   2027c:	str	r2, [r7, #4]
   20280:	add	r3, r3, #15
   20284:	bic	r3, r3, #3
   20288:	add	r3, r3, #4
   2028c:	strh	r3, [r7, #2]
   20290:	lsr	r3, r3, #16
   20294:	strb	r3, [r7, #1]
   20298:	ldr	r3, [r4, #40]	; 0x28
   2029c:	cmp	r3, #0
   202a0:	moveq	r5, #8
   202a4:	beq	202d4 <crc32@@Base+0x6b8c>
   202a8:	add	ip, r4, #8
   202ac:	add	r0, r7, #4
   202b0:	mov	r3, r8
   202b4:	ldr	r2, [ip], #4
   202b8:	add	r3, r3, #1
   202bc:	str	r2, [r0, #4]!
   202c0:	ldr	r2, [r4, #40]	; 0x28
   202c4:	cmp	r2, r3
   202c8:	bhi	202b4 <crc32@@Base+0x6b6c>
   202cc:	lsl	r5, r2, #2
   202d0:	add	r5, r5, #8
   202d4:	add	r5, r7, r5
   202d8:	mov	r3, r9
   202dc:	mov	r2, #1
   202e0:	mov	r0, r5
   202e4:	bl	12464 <fread@plt>
   202e8:	cmp	r0, #1
   202ec:	bne	20310 <crc32@@Base+0x6bc8>
   202f0:	mov	r0, r9
   202f4:	bl	125fc <fclose@plt>
   202f8:	ldr	r3, [sp, #44]	; 0x2c
   202fc:	mov	r2, #0
   20300:	add	r3, r3, #3
   20304:	bic	r3, r3, #3
   20308:	str	r2, [r5, r3]
   2030c:	b	20218 <crc32@@Base+0x6ad0>
   20310:	movw	r1, #65044	; 0xfe14
   20314:	movt	r1, #4
   20318:	movw	r2, #42652	; 0xa69c
   2031c:	ldr	r3, [r4, #4]
   20320:	ldr	r0, [r1]
   20324:	movt	r2, #3
   20328:	mov	r1, #1
   2032c:	bl	122b4 <__fprintf_chk@plt>
   20330:	mov	r0, r9
   20334:	mvn	r8, #0
   20338:	bl	125fc <fclose@plt>
   2033c:	b	20218 <crc32@@Base+0x6ad0>
   20340:	movw	r1, #65044	; 0xfe14
   20344:	movt	r1, #4
   20348:	ldr	r3, [r4, #4]
   2034c:	movw	r2, #42624	; 0xa680
   20350:	ldr	r0, [r1]
   20354:	movt	r2, #3
   20358:	mov	r1, #1
   2035c:	bl	122b4 <__fprintf_chk@plt>
   20360:	b	20330 <crc32@@Base+0x6be8>
   20364:	movw	r1, #65044	; 0xfe14
   20368:	movt	r1, #4
   2036c:	ldr	r3, [r4, #4]
   20370:	movw	r2, #42596	; 0xa664
   20374:	ldr	r0, [r1]
   20378:	movt	r2, #3
   2037c:	mov	r1, #1
   20380:	mvn	r8, #0
   20384:	bl	122b4 <__fprintf_chk@plt>
   20388:	b	20218 <crc32@@Base+0x6ad0>
   2038c:	bl	12494 <__stack_chk_fail@plt>
   20390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20394:	movw	sl, #61168	; 0xeef0
   20398:	sub	sp, sp, #44	; 0x2c
   2039c:	movt	sl, #4
   203a0:	mov	ip, r3
   203a4:	mov	r8, r1
   203a8:	str	r3, [sp, #20]
   203ac:	movw	r1, #49448	; 0xc128
   203b0:	ldr	r3, [sl]
   203b4:	movt	r1, #3
   203b8:	str	r0, [sp, #8]
   203bc:	ldr	r0, [ip, #64]	; 0x40
   203c0:	str	r2, [sp, #12]
   203c4:	str	r3, [sp, #36]	; 0x24
   203c8:	bl	1232c <fopen@plt>
   203cc:	subs	r4, r0, #0
   203d0:	beq	20b4c <crc32@@Base+0x7404>
   203d4:	mov	r1, #1
   203d8:	mov	r0, #11264	; 0x2c00
   203dc:	bl	12518 <calloc@plt>
   203e0:	movw	r7, #3112	; 0xc28
   203e4:	movt	r7, #6
   203e8:	cmp	r0, #0
   203ec:	str	r0, [r7, #4]
   203f0:	beq	20b1c <crc32@@Base+0x73d4>
   203f4:	mov	r0, r4
   203f8:	bl	1244c <rewind@plt>
   203fc:	mov	r0, r4
   20400:	bl	1fb64 <crc32@@Base+0x641c>
   20404:	mov	r6, r0
   20408:	mov	r0, r4
   2040c:	bl	125fc <fclose@plt>
   20410:	cmp	r6, #0
   20414:	bne	20bd4 <crc32@@Base+0x748c>
   20418:	ldr	r4, [r7]
   2041c:	ldr	r2, [r8, #44]	; 0x2c
   20420:	cmp	r4, #0
   20424:	add	r2, r2, #3
   20428:	bic	r2, r2, #3
   2042c:	str	r2, [r8, #44]	; 0x2c
   20430:	ble	20a94 <crc32@@Base+0x734c>
   20434:	ldr	ip, [r7, #4]
   20438:	ldr	r0, [ip]
   2043c:	cmp	r0, #1
   20440:	beq	20680 <crc32@@Base+0x6f38>
   20444:	mov	r3, ip
   20448:	mov	r1, r6
   2044c:	b	20464 <crc32@@Base+0x6d1c>
   20450:	add	r3, r3, #44	; 0x2c
   20454:	ldr	lr, [r3]
   20458:	cmp	lr, #1
   2045c:	mov	r5, r3
   20460:	beq	20684 <crc32@@Base+0x6f3c>
   20464:	add	r1, r1, #1
   20468:	cmp	r1, r4
   2046c:	bne	20450 <crc32@@Base+0x6d08>
   20470:	add	r1, ip, #44	; 0x2c
   20474:	mov	lr, #44	; 0x2c
   20478:	mov	ip, r0
   2047c:	mov	r5, #0
   20480:	mla	lr, lr, r4, r1
   20484:	mov	r3, r1
   20488:	b	20490 <crc32@@Base+0x6d48>
   2048c:	ldr	ip, [r3, #-44]	; 0xffffffd4
   20490:	cmp	ip, #11
   20494:	add	r3, r3, #44	; 0x2c
   20498:	addeq	r5, r5, #1
   2049c:	cmp	r3, lr
   204a0:	bne	2048c <crc32@@Base+0x6d44>
   204a4:	cmp	r5, #0
   204a8:	mov	ip, #0
   204ac:	movne	fp, #1
   204b0:	moveq	fp, ip
   204b4:	movne	r9, #512	; 0x200
   204b8:	moveq	r9, #32
   204bc:	b	204c4 <crc32@@Base+0x6d7c>
   204c0:	ldr	r0, [r1, #-44]	; 0xffffffd4
   204c4:	cmp	r0, #10
   204c8:	add	r1, r1, #44	; 0x2c
   204cc:	addeq	ip, ip, #1
   204d0:	cmp	r3, r1
   204d4:	bne	204c0 <crc32@@Base+0x6d78>
   204d8:	cmp	ip, #1
   204dc:	bhi	20a70 <crc32@@Base+0x7328>
   204e0:	mov	r1, #1
   204e4:	mov	r0, r9
   204e8:	str	r2, [sp, #16]
   204ec:	bl	12518 <calloc@plt>
   204f0:	ldr	r2, [sp, #16]
   204f4:	subs	r5, r0, #0
   204f8:	beq	20ad4 <crc32@@Base+0x738c>
   204fc:	ldr	r3, [sp, #20]
   20500:	cmp	r4, #0
   20504:	add	r2, r2, #4
   20508:	str	r9, [r5, #12]
   2050c:	sub	r2, r2, r9
   20510:	strb	fp, [r5, #30]
   20514:	ldr	r1, [r3, #56]	; 0x38
   20518:	ldr	r3, [r3, #60]	; 0x3c
   2051c:	str	r2, [r5, #4]
   20520:	ldr	r7, [r7, #4]
   20524:	str	r1, [r5, #16]
   20528:	str	r3, [r5, #20]
   2052c:	ble	20aa0 <crc32@@Base+0x7358>
   20530:	ldr	r3, [r7]
   20534:	cmp	r3, #2
   20538:	beq	208a0 <crc32@@Base+0x7158>
   2053c:	mov	r2, r7
   20540:	mov	r1, #0
   20544:	b	2055c <crc32@@Base+0x6e14>
   20548:	add	r2, r2, #44	; 0x2c
   2054c:	ldr	r0, [r2]
   20550:	cmp	r0, #2
   20554:	mov	ip, r2
   20558:	beq	208a4 <crc32@@Base+0x715c>
   2055c:	add	r1, r1, #1
   20560:	cmp	r1, r4
   20564:	bne	20548 <crc32@@Base+0x6e00>
   20568:	cmp	r3, #7
   2056c:	beq	208b0 <crc32@@Base+0x7168>
   20570:	mov	r2, r7
   20574:	mov	r1, #0
   20578:	b	20590 <crc32@@Base+0x6e48>
   2057c:	add	r2, r2, #44	; 0x2c
   20580:	ldr	r0, [r2]
   20584:	cmp	r0, #7
   20588:	mov	ip, r2
   2058c:	beq	208b4 <crc32@@Base+0x716c>
   20590:	add	r1, r1, #1
   20594:	cmp	r1, r4
   20598:	bne	2057c <crc32@@Base+0x6e34>
   2059c:	cmp	r3, #8
   205a0:	beq	208c0 <crc32@@Base+0x7178>
   205a4:	mov	r2, r7
   205a8:	mov	r1, #0
   205ac:	b	205c4 <crc32@@Base+0x6e7c>
   205b0:	add	r2, r2, #44	; 0x2c
   205b4:	ldr	r0, [r2]
   205b8:	cmp	r0, #8
   205bc:	mov	ip, r2
   205c0:	beq	208c4 <crc32@@Base+0x717c>
   205c4:	add	r1, r1, #1
   205c8:	cmp	r1, r4
   205cc:	bne	205b0 <crc32@@Base+0x6e68>
   205d0:	mov	r1, #32
   205d4:	mov	r0, r5
   205d8:	str	r3, [sp, #16]
   205dc:	bl	1f754 <crc32@@Base+0x600c>
   205e0:	cmp	fp, #0
   205e4:	ldr	r3, [sp, #16]
   205e8:	strb	r0, [r5, #31]
   205ec:	bne	208d0 <crc32@@Base+0x7188>
   205f0:	add	r3, sp, #32
   205f4:	str	r3, [sp, #16]
   205f8:	mov	r0, r7
   205fc:	bl	12128 <free@plt>
   20600:	ldr	r3, [r8, #44]	; 0x2c
   20604:	cmp	r3, #0
   20608:	beq	2062c <crc32@@Base+0x6ee4>
   2060c:	ands	r2, r3, #3
   20610:	ldreq	r1, [sp, #8]
   20614:	bne	20a14 <crc32@@Base+0x72cc>
   20618:	ldr	r0, [r1], #4
   2061c:	subs	r3, r3, #4
   20620:	add	r2, r2, r0
   20624:	bne	20618 <crc32@@Base+0x6ed0>
   20628:	mov	r3, r2
   2062c:	ldrd	r0, [sp, #12]
   20630:	mov	r2, #4
   20634:	str	r3, [sp, #32]
   20638:	bl	12608 <write@plt>
   2063c:	cmp	r0, #4
   20640:	bne	20b7c <crc32@@Base+0x7434>
   20644:	ldr	r3, [r8, #44]	; 0x2c
   20648:	mov	r2, r9
   2064c:	ldr	r0, [sp, #8]
   20650:	mov	r1, r5
   20654:	add	r3, r3, #4
   20658:	str	r3, [r8, #44]	; 0x2c
   2065c:	bl	1259c <memcpy@plt>
   20660:	ldr	r2, [sp, #36]	; 0x24
   20664:	ldr	r3, [sl]
   20668:	cmp	r2, r3
   2066c:	bne	20b78 <crc32@@Base+0x7430>
   20670:	mov	r0, r5
   20674:	add	sp, sp, #44	; 0x2c
   20678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2067c:	b	12128 <free@plt>
   20680:	mov	r5, ip
   20684:	ldr	fp, [r5, #4]
   20688:	cmn	fp, #1
   2068c:	blt	20bb4 <crc32@@Base+0x746c>
   20690:	cmp	fp, #0
   20694:	ble	20470 <crc32@@Base+0x6d28>
   20698:	cmp	fp, #1
   2069c:	bne	20bb4 <crc32@@Base+0x746c>
   206a0:	add	r3, sp, #40	; 0x28
   206a4:	mov	r4, #0
   206a8:	str	r2, [sp, #24]
   206ac:	str	r4, [r3, #-8]!
   206b0:	mov	r0, r3
   206b4:	str	r3, [sp, #16]
   206b8:	bl	1f80c <crc32@@Base+0x60c4>
   206bc:	ldr	r2, [sp, #24]
   206c0:	subs	r9, r0, #0
   206c4:	beq	20a40 <crc32@@Base+0x72f8>
   206c8:	mov	r1, fp
   206cc:	str	r2, [sp, #24]
   206d0:	bl	12518 <calloc@plt>
   206d4:	ldr	r2, [sp, #24]
   206d8:	subs	r5, r0, #0
   206dc:	beq	20af8 <crc32@@Base+0x73b0>
   206e0:	ldr	ip, [sp, #20]
   206e4:	add	r2, r2, #4
   206e8:	ldr	r3, [r7]
   206ec:	sub	r2, r2, r9
   206f0:	ldr	r1, [sp, #32]
   206f4:	ldr	r0, [ip, #60]	; 0x3c
   206f8:	cmp	r3, #0
   206fc:	str	r2, [r5, #4]
   20700:	ldr	r2, [ip, #56]	; 0x38
   20704:	strb	r1, [r5, #30]
   20708:	add	r1, r5, #32
   2070c:	strh	r9, [r5, #10]
   20710:	str	r2, [sp, #28]
   20714:	sub	r2, r2, #64	; 0x40
   20718:	str	r9, [r5, #12]
   2071c:	str	r2, [r5, #16]
   20720:	lsr	r2, r9, #16
   20724:	strb	fp, [r5, #8]
   20728:	str	r0, [r5, #20]
   2072c:	str	r1, [sp, #24]
   20730:	strb	r2, [r5, #9]
   20734:	ble	20870 <crc32@@Base+0x7128>
   20738:	ldr	r1, [r7, #4]
   2073c:	ldr	fp, [r1]
   20740:	cmp	fp, #2
   20744:	beq	20934 <crc32@@Base+0x71ec>
   20748:	mov	r2, r1
   2074c:	b	20764 <crc32@@Base+0x701c>
   20750:	add	r2, r2, #44	; 0x2c
   20754:	ldr	r0, [r2]
   20758:	cmp	r0, #2
   2075c:	mov	ip, r2
   20760:	beq	20938 <crc32@@Base+0x71f0>
   20764:	add	r4, r4, #1
   20768:	cmp	r4, r3
   2076c:	bne	20750 <crc32@@Base+0x7008>
   20770:	cmp	fp, #5
   20774:	beq	2096c <crc32@@Base+0x7224>
   20778:	mov	r2, r1
   2077c:	mov	r0, #0
   20780:	b	20798 <crc32@@Base+0x7050>
   20784:	add	r2, r2, #44	; 0x2c
   20788:	ldr	ip, [r2]
   2078c:	cmp	ip, #5
   20790:	mov	lr, r2
   20794:	beq	20970 <crc32@@Base+0x7228>
   20798:	add	r0, r0, #1
   2079c:	cmp	r0, r3
   207a0:	bne	20784 <crc32@@Base+0x703c>
   207a4:	cmp	fp, #6
   207a8:	beq	2097c <crc32@@Base+0x7234>
   207ac:	mov	r2, r1
   207b0:	mov	r0, #0
   207b4:	b	207cc <crc32@@Base+0x7084>
   207b8:	add	r2, r2, #44	; 0x2c
   207bc:	ldr	ip, [r2]
   207c0:	cmp	ip, #6
   207c4:	mov	lr, r2
   207c8:	beq	20980 <crc32@@Base+0x7238>
   207cc:	add	r0, r0, #1
   207d0:	cmp	r0, r3
   207d4:	bne	207b8 <crc32@@Base+0x7070>
   207d8:	cmp	fp, #12
   207dc:	beq	2098c <crc32@@Base+0x7244>
   207e0:	mov	r2, r1
   207e4:	mov	r0, #0
   207e8:	b	20800 <crc32@@Base+0x70b8>
   207ec:	add	r2, r2, #44	; 0x2c
   207f0:	ldr	ip, [r2]
   207f4:	cmp	ip, #12
   207f8:	mov	lr, r2
   207fc:	beq	20990 <crc32@@Base+0x7248>
   20800:	add	r0, r0, #1
   20804:	cmp	r0, r3
   20808:	bne	207ec <crc32@@Base+0x70a4>
   2080c:	cmp	fp, #13
   20810:	beq	209d4 <crc32@@Base+0x728c>
   20814:	mov	r2, r1
   20818:	mov	r0, #0
   2081c:	b	20834 <crc32@@Base+0x70ec>
   20820:	add	r2, r2, #44	; 0x2c
   20824:	ldr	ip, [r2]
   20828:	cmp	ip, #13
   2082c:	mov	lr, r2
   20830:	beq	209d8 <crc32@@Base+0x7290>
   20834:	add	r0, r0, #1
   20838:	cmp	r0, r3
   2083c:	bne	20820 <crc32@@Base+0x70d8>
   20840:	cmp	fp, #9
   20844:	beq	20944 <crc32@@Base+0x71fc>
   20848:	mov	r2, r1
   2084c:	b	20864 <crc32@@Base+0x711c>
   20850:	add	r2, r2, #44	; 0x2c
   20854:	ldr	r0, [r2]
   20858:	cmp	r0, #9
   2085c:	mov	r1, r2
   20860:	beq	20944 <crc32@@Base+0x71fc>
   20864:	add	r6, r6, #1
   20868:	cmp	r6, r3
   2086c:	bne	20850 <crc32@@Base+0x7108>
   20870:	mov	r3, #1
   20874:	ldr	r0, [sp, #24]
   20878:	strb	r3, [r5, #30]
   2087c:	bl	201a8 <crc32@@Base+0x6a60>
   20880:	cmp	r0, #0
   20884:	bne	20a40 <crc32@@Base+0x72f8>
   20888:	mov	r1, r9
   2088c:	mov	r0, r5
   20890:	bl	1f754 <crc32@@Base+0x600c>
   20894:	ldr	r7, [r7, #4]
   20898:	strb	r0, [r5, #31]
   2089c:	b	205f8 <crc32@@Base+0x6eb0>
   208a0:	mov	ip, r7
   208a4:	ldr	r2, [ip, #4]
   208a8:	strb	r2, [r5]
   208ac:	b	20568 <crc32@@Base+0x6e20>
   208b0:	mov	ip, r7
   208b4:	ldr	r2, [ip, #4]
   208b8:	strb	r2, [r5, #1]
   208bc:	b	2059c <crc32@@Base+0x6e54>
   208c0:	mov	ip, r7
   208c4:	ldr	r2, [ip, #4]
   208c8:	strh	r2, [r5, #2]
   208cc:	b	205d0 <crc32@@Base+0x6e88>
   208d0:	sub	r2, r7, #44	; 0x2c
   208d4:	mov	r1, #44	; 0x2c
   208d8:	mov	r0, #64	; 0x40
   208dc:	str	r0, [r5, #32]
   208e0:	mla	r4, r1, r4, r2
   208e4:	add	r0, r5, #32
   208e8:	mov	r2, r7
   208ec:	b	208f4 <crc32@@Base+0x71ac>
   208f0:	ldr	r3, [r2, #44]!	; 0x2c
   208f4:	cmp	r3, #11
   208f8:	bne	20914 <crc32@@Base+0x71cc>
   208fc:	ldr	ip, [r2, #4]
   20900:	add	r3, r5, r6, lsl #3
   20904:	ldr	r1, [r2, #8]
   20908:	add	r6, r6, #1
   2090c:	str	ip, [r3, #64]	; 0x40
   20910:	str	r1, [r3, #68]	; 0x44
   20914:	cmp	r2, r4
   20918:	bne	208f0 <crc32@@Base+0x71a8>
   2091c:	mov	r1, #480	; 0x1e0
   20920:	bl	1f754 <crc32@@Base+0x600c>
   20924:	add	r3, sp, #32
   20928:	str	r3, [sp, #16]
   2092c:	strb	r0, [r5, #511]	; 0x1ff
   20930:	b	205f8 <crc32@@Base+0x6eb0>
   20934:	mov	ip, r1
   20938:	ldr	r2, [ip, #4]
   2093c:	strb	r2, [r5]
   20940:	b	20770 <crc32@@Base+0x7028>
   20944:	ldr	r0, [r1, #4]
   20948:	mov	r1, #47	; 0x2f
   2094c:	bl	126ec <strrchr@plt>
   20950:	movw	r1, #42824	; 0xa748
   20954:	movt	r1, #3
   20958:	bl	1265c <strcmp@plt>
   2095c:	cmp	r0, #0
   20960:	ldreq	r3, [sp, #28]
   20964:	streq	r3, [r5, #16]
   20968:	b	20870 <crc32@@Base+0x7128>
   2096c:	mov	lr, r1
   20970:	ldrh	r2, [lr, #6]
   20974:	strb	r2, [r5, #25]
   20978:	b	207a4 <crc32@@Base+0x705c>
   2097c:	mov	lr, r1
   20980:	ldr	r2, [lr, #4]
   20984:	strb	r2, [r5, #26]
   20988:	b	207d8 <crc32@@Base+0x7090>
   2098c:	mov	lr, r1
   20990:	ldr	r2, [lr, #4]
   20994:	cmp	r2, #19200	; 0x4b00
   20998:	beq	20acc <crc32@@Base+0x7384>
   2099c:	bls	209ec <crc32@@Base+0x72a4>
   209a0:	cmp	r2, #57600	; 0xe100
   209a4:	moveq	r2, #6
   209a8:	beq	209cc <crc32@@Base+0x7284>
   209ac:	mov	r0, #49664	; 0xc200
   209b0:	movt	r0, #1
   209b4:	cmp	r2, r0
   209b8:	moveq	r2, #7
   209bc:	beq	209cc <crc32@@Base+0x7284>
   209c0:	cmp	r2, #38400	; 0x9600
   209c4:	beq	20ac4 <crc32@@Base+0x737c>
   209c8:	mov	r2, #0
   209cc:	strb	r2, [r5, #24]
   209d0:	b	2080c <crc32@@Base+0x70c4>
   209d4:	mov	lr, r1
   209d8:	ldr	r2, [lr, #4]
   209dc:	adds	r2, r2, #0
   209e0:	movne	r2, #1
   209e4:	strb	r2, [r5, #1]
   209e8:	b	20840 <crc32@@Base+0x70f8>
   209ec:	cmp	r2, #4800	; 0x12c0
   209f0:	moveq	r2, #2
   209f4:	beq	209cc <crc32@@Base+0x7284>
   209f8:	cmp	r2, #9600	; 0x2580
   209fc:	moveq	r2, #3
   20a00:	beq	209cc <crc32@@Base+0x7284>
   20a04:	cmp	r2, #2400	; 0x960
   20a08:	bne	209c8 <crc32@@Base+0x7280>
   20a0c:	mov	r2, #1
   20a10:	b	209cc <crc32@@Base+0x7284>
   20a14:	movw	r2, #65044	; 0xfe14
   20a18:	movt	r2, #4
   20a1c:	mov	r1, #4
   20a20:	ldr	r0, [r2]
   20a24:	movw	r2, #42744	; 0xa6f8
   20a28:	str	r1, [sp]
   20a2c:	movt	r2, #3
   20a30:	mov	r1, #1
   20a34:	bl	122b4 <__fprintf_chk@plt>
   20a38:	mov	r3, #0
   20a3c:	b	2062c <crc32@@Base+0x6ee4>
   20a40:	movw	r4, #65044	; 0xfe14
   20a44:	movt	r4, #4
   20a48:	ldr	r3, [r4]
   20a4c:	mov	r2, #23
   20a50:	mov	r1, #1
   20a54:	movw	r0, #42720	; 0xa6e0
   20a58:	movt	r0, #3
   20a5c:	bl	12578 <fwrite@plt>
   20a60:	ldr	r0, [r7, #4]
   20a64:	bl	12128 <free@plt>
   20a68:	mov	r0, #1
   20a6c:	bl	121f4 <exit@plt>
   20a70:	movw	r4, #65044	; 0xfe14
   20a74:	movt	r4, #4
   20a78:	movw	r0, #41956	; 0xa3e4
   20a7c:	mov	r2, #36	; 0x24
   20a80:	ldr	r3, [r4]
   20a84:	mov	r1, #1
   20a88:	movt	r0, #3
   20a8c:	bl	12578 <fwrite@plt>
   20a90:	b	20a48 <crc32@@Base+0x7300>
   20a94:	mov	fp, r6
   20a98:	mov	r9, #32
   20a9c:	b	204e0 <crc32@@Base+0x6d98>
   20aa0:	mov	r1, #32
   20aa4:	bl	1f754 <crc32@@Base+0x600c>
   20aa8:	cmp	fp, #0
   20aac:	strb	r0, [r5, #31]
   20ab0:	beq	205f0 <crc32@@Base+0x6ea8>
   20ab4:	mov	r3, #64	; 0x40
   20ab8:	add	r0, r5, #32
   20abc:	str	r3, [r5, #32]
   20ac0:	b	2091c <crc32@@Base+0x71d4>
   20ac4:	mov	r2, #5
   20ac8:	b	209cc <crc32@@Base+0x7284>
   20acc:	mov	r2, #4
   20ad0:	b	209cc <crc32@@Base+0x7284>
   20ad4:	movw	r4, #65044	; 0xfe14
   20ad8:	movt	r4, #4
   20adc:	movw	r0, #42684	; 0xa6bc
   20ae0:	mov	r2, #33	; 0x21
   20ae4:	ldr	r3, [r4]
   20ae8:	mov	r1, #1
   20aec:	movt	r0, #3
   20af0:	bl	12578 <fwrite@plt>
   20af4:	b	20a48 <crc32@@Base+0x7300>
   20af8:	movw	r4, #65044	; 0xfe14
   20afc:	movt	r4, #4
   20b00:	mov	r1, fp
   20b04:	movw	r0, #42684	; 0xa6bc
   20b08:	ldr	r3, [r4]
   20b0c:	mov	r2, #33	; 0x21
   20b10:	movt	r0, #3
   20b14:	bl	12578 <fwrite@plt>
   20b18:	b	20a48 <crc32@@Base+0x7300>
   20b1c:	movw	r3, #65044	; 0xfe14
   20b20:	movt	r3, #4
   20b24:	mov	r2, #23
   20b28:	mov	r1, #1
   20b2c:	ldr	r3, [r3]
   20b30:	movw	r0, #42548	; 0xa634
   20b34:	movt	r0, #3
   20b38:	bl	12578 <fwrite@plt>
   20b3c:	mov	r0, r4
   20b40:	bl	125fc <fclose@plt>
   20b44:	mov	r0, #1
   20b48:	bl	121f4 <exit@plt>
   20b4c:	ldr	r3, [sp, #20]
   20b50:	movw	r1, #65044	; 0xfe14
   20b54:	movt	r1, #4
   20b58:	movw	r2, #42516	; 0xa614
   20b5c:	movt	r2, #3
   20b60:	ldr	r0, [r1]
   20b64:	mov	r1, #1
   20b68:	ldr	r3, [r3, #64]	; 0x40
   20b6c:	bl	122b4 <__fprintf_chk@plt>
   20b70:	mov	r0, #1
   20b74:	bl	121f4 <exit@plt>
   20b78:	bl	12494 <__stack_chk_fail@plt>
   20b7c:	ldr	r3, [sp, #20]
   20b80:	movw	r1, #65044	; 0xfe14
   20b84:	movt	r1, #4
   20b88:	movw	r2, #42784	; 0xa720
   20b8c:	movt	r2, #3
   20b90:	ldr	ip, [r3, #76]	; 0x4c
   20b94:	str	r0, [sp]
   20b98:	ldr	r0, [r1]
   20b9c:	mov	r1, #1
   20ba0:	ldr	r3, [r3, #80]	; 0x50
   20ba4:	str	ip, [sp, #4]
   20ba8:	bl	122b4 <__fprintf_chk@plt>
   20bac:	mov	r0, #1
   20bb0:	bl	121f4 <exit@plt>
   20bb4:	movw	r1, #65044	; 0xfe14
   20bb8:	movt	r1, #4
   20bbc:	movw	r2, #42572	; 0xa64c
   20bc0:	mov	r3, fp
   20bc4:	ldr	r0, [r1]
   20bc8:	movt	r2, #3
   20bcc:	mov	r1, #1
   20bd0:	bl	122b4 <__fprintf_chk@plt>
   20bd4:	ldr	r0, [r7, #4]
   20bd8:	bl	12128 <free@plt>
   20bdc:	mov	r0, #1
   20be0:	bl	121f4 <exit@plt>
   20be4:	push	{r4, r5, r6, lr}
   20be8:	movw	r1, #42272	; 0xa520
   20bec:	ldr	r5, [pc, #64]	; 20c34 <crc32@@Base+0x74ec>
   20bf0:	movt	r1, #3
   20bf4:	mov	r6, r0
   20bf8:	mov	r4, #1
   20bfc:	b	20c10 <crc32@@Base+0x74c8>
   20c00:	add	r4, r4, #1
   20c04:	cmp	r4, #24
   20c08:	beq	20c28 <crc32@@Base+0x74e0>
   20c0c:	ldr	r1, [r5, #4]!
   20c10:	mov	r0, r6
   20c14:	bl	1265c <strcmp@plt>
   20c18:	cmp	r0, #0
   20c1c:	bne	20c00 <crc32@@Base+0x74b8>
   20c20:	mov	r0, r4
   20c24:	pop	{r4, r5, r6, pc}
   20c28:	mov	r4, #0
   20c2c:	mov	r0, r4
   20c30:	pop	{r4, r5, r6, pc}
   20c34:	andeq	sl, r3, r0, asr #5
   20c38:	ldr	r2, [r0, #12]
   20c3c:	ldr	r3, [r0, #8]
   20c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c44:	eor	r6, r3, r2
   20c48:	ldr	r3, [r0, #4]
   20c4c:	movw	lr, #42104	; 0xa478
   20c50:	ldr	sl, [r1]
   20c54:	movt	lr, #55146	; 0xd76a
   20c58:	and	r6, r6, r3
   20c5c:	ldr	r3, [r0]
   20c60:	add	lr, sl, lr
   20c64:	eor	r6, r6, r2
   20c68:	ldmib	r0, {r2, ip}
   20c6c:	add	lr, lr, r3
   20c70:	ldr	r3, [r1, #4]
   20c74:	add	r6, r6, lr
   20c78:	eor	r4, r2, ip
   20c7c:	movw	r5, #46934	; 0xb756
   20c80:	ldr	ip, [r0, #12]
   20c84:	movt	r5, #59591	; 0xe8c7
   20c88:	add	r5, r3, r5
   20c8c:	add	r6, r2, r6, ror #25
   20c90:	add	r5, r5, ip
   20c94:	ldr	ip, [r0, #8]
   20c98:	and	r4, r4, r6
   20c9c:	ldr	lr, [r1, #8]
   20ca0:	eor	r4, r4, ip
   20ca4:	movw	ip, #28891	; 0x70db
   20ca8:	add	r4, r4, r5
   20cac:	movt	ip, #9248	; 0x2420
   20cb0:	add	ip, lr, ip
   20cb4:	eor	r2, r2, r6
   20cb8:	add	r5, r6, r4, ror #20
   20cbc:	ldr	r4, [r0, #8]
   20cc0:	and	r2, r2, r5
   20cc4:	sub	sp, sp, #52	; 0x34
   20cc8:	add	ip, ip, r4
   20ccc:	ldr	r4, [r0, #4]
   20cd0:	ldr	r8, [r1, #12]
   20cd4:	eor	r2, r2, r4
   20cd8:	str	r3, [sp, #4]
   20cdc:	add	r2, r2, ip
   20ce0:	eor	r3, r6, r5
   20ce4:	movw	ip, #52974	; 0xceee
   20ce8:	movt	ip, #49597	; 0xc1bd
   20cec:	add	r7, r5, r2, ror #15
   20cf0:	add	ip, r8, ip
   20cf4:	and	r3, r3, r7
   20cf8:	add	ip, ip, r4
   20cfc:	eor	r3, r3, r6
   20d00:	ldr	r9, [r1, #16]
   20d04:	add	r3, r3, ip
   20d08:	str	lr, [sp, #8]
   20d0c:	movw	lr, #4015	; 0xfaf
   20d10:	movt	lr, #62844	; 0xf57c
   20d14:	add	r3, r7, r3, ror #10
   20d18:	eor	r2, r5, r7
   20d1c:	add	lr, r9, lr
   20d20:	ldr	fp, [r1, #20]
   20d24:	add	r6, lr, r6
   20d28:	and	lr, r2, r3
   20d2c:	eor	lr, lr, r5
   20d30:	eor	ip, r7, r3
   20d34:	add	lr, lr, r6
   20d38:	movw	r4, #50730	; 0xc62a
   20d3c:	movt	r4, #18311	; 0x4787
   20d40:	ldr	r6, [r1, #24]
   20d44:	add	lr, r3, lr, ror #25
   20d48:	add	r4, fp, r4
   20d4c:	and	r2, ip, lr
   20d50:	add	r4, r4, r5
   20d54:	eor	r2, r2, r7
   20d58:	str	r8, [sp, #12]
   20d5c:	add	r2, r2, r4
   20d60:	movw	r8, #17939	; 0x4613
   20d64:	movt	r8, #43056	; 0xa830
   20d68:	eor	ip, r3, lr
   20d6c:	add	r4, lr, r2, ror #20
   20d70:	add	r8, r6, r8
   20d74:	add	r2, r8, r7
   20d78:	and	r8, ip, r4
   20d7c:	eor	r8, r8, r3
   20d80:	str	fp, [sp, #20]
   20d84:	add	r8, r8, r2
   20d88:	ldr	fp, [r1, #28]
   20d8c:	movw	ip, #38145	; 0x9501
   20d90:	movt	ip, #64838	; 0xfd46
   20d94:	add	r8, r4, r8, ror #15
   20d98:	eor	r5, lr, r4
   20d9c:	add	ip, fp, ip
   20da0:	ldr	r7, [r1, #32]
   20da4:	add	r3, ip, r3
   20da8:	and	ip, r5, r8
   20dac:	eor	ip, ip, lr
   20db0:	str	r6, [sp, #24]
   20db4:	add	ip, ip, r3
   20db8:	movw	r6, #39128	; 0x98d8
   20dbc:	movt	r6, #27008	; 0x6980
   20dc0:	eor	r2, r4, r8
   20dc4:	add	ip, r8, ip, ror #10
   20dc8:	add	r6, r7, r6
   20dcc:	add	lr, r6, lr
   20dd0:	and	r6, r2, ip
   20dd4:	eor	r6, r6, r4
   20dd8:	ldr	r2, [r1, #36]	; 0x24
   20ddc:	add	r6, r6, lr
   20de0:	movw	r5, #63407	; 0xf7af
   20de4:	movt	r5, #35652	; 0x8b44
   20de8:	eor	r3, r8, ip
   20dec:	add	r6, ip, r6, ror #25
   20df0:	add	r5, r2, r5
   20df4:	str	r2, [sp, #32]
   20df8:	add	r2, r5, r4
   20dfc:	and	r5, r3, r6
   20e00:	str	r7, [sp, #28]
   20e04:	eor	r5, r5, r8
   20e08:	ldr	r7, [r1, #40]	; 0x28
   20e0c:	add	r5, r5, r2
   20e10:	eor	r3, ip, r6
   20e14:	sub	r2, r7, #41984	; 0xa400
   20e18:	ldr	r4, [r1, #44]	; 0x2c
   20e1c:	add	r5, r6, r5, ror #20
   20e20:	sub	r2, r2, #79	; 0x4f
   20e24:	add	r8, r2, r8
   20e28:	and	r2, r3, r5
   20e2c:	eor	r2, r2, ip
   20e30:	movw	r3, #55230	; 0xd7be
   20e34:	add	r2, r2, r8
   20e38:	movt	r3, #35164	; 0x895c
   20e3c:	eor	lr, r6, r5
   20e40:	add	r3, r4, r3
   20e44:	add	r2, r5, r2, ror #15
   20e48:	add	ip, r3, ip
   20e4c:	and	r3, lr, r2
   20e50:	str	sl, [sp, #44]	; 0x2c
   20e54:	eor	r3, r3, r6
   20e58:	str	r9, [sp, #16]
   20e5c:	add	r3, r3, ip
   20e60:	str	r4, [sp, #36]	; 0x24
   20e64:	ldr	r8, [r1, #48]	; 0x30
   20e68:	movw	lr, #4386	; 0x1122
   20e6c:	movt	lr, #27536	; 0x6b90
   20e70:	add	r3, r2, r3, ror #10
   20e74:	eor	r4, r5, r2
   20e78:	add	lr, r8, lr
   20e7c:	add	r6, lr, r6
   20e80:	and	lr, r4, r3
   20e84:	eor	lr, lr, r5
   20e88:	ldr	r9, [r1, #52]	; 0x34
   20e8c:	add	lr, lr, r6
   20e90:	movw	r4, #29075	; 0x7193
   20e94:	movt	r4, #64920	; 0xfd98
   20e98:	eor	ip, r2, r3
   20e9c:	add	lr, r3, lr, ror #25
   20ea0:	add	r4, r9, r4
   20ea4:	add	r5, r4, r5
   20ea8:	and	r4, ip, lr
   20eac:	eor	r4, r4, r2
   20eb0:	str	r9, [sp, #40]	; 0x28
   20eb4:	add	r4, r4, r5
   20eb8:	ldr	r9, [r1, #56]	; 0x38
   20ebc:	eor	r5, r3, lr
   20ec0:	movw	ip, #17294	; 0x438e
   20ec4:	add	r4, lr, r4, ror #20
   20ec8:	movt	ip, #42617	; 0xa679
   20ecc:	ldr	r6, [r1, #60]	; 0x3c
   20ed0:	add	ip, r9, ip
   20ed4:	and	r1, r5, r4
   20ed8:	add	r2, ip, r2
   20edc:	eor	r1, r1, r3
   20ee0:	movw	ip, #2081	; 0x821
   20ee4:	add	r1, r1, r2
   20ee8:	movt	ip, #18868	; 0x49b4
   20eec:	eor	r5, lr, r4
   20ef0:	add	ip, r6, ip
   20ef4:	add	r1, r4, r1, ror #15
   20ef8:	add	r3, ip, r3
   20efc:	and	ip, r5, r1
   20f00:	ldr	r2, [sp, #4]
   20f04:	eor	ip, ip, lr
   20f08:	movw	sl, #9570	; 0x2562
   20f0c:	add	ip, ip, r3
   20f10:	movt	sl, #63006	; 0xf61e
   20f14:	ldr	r5, [sp, #24]
   20f18:	add	sl, r2, sl
   20f1c:	add	ip, r1, ip, ror #10
   20f20:	add	lr, sl, lr
   20f24:	movw	sl, #45888	; 0xb340
   20f28:	movt	sl, #49216	; 0xc040
   20f2c:	eor	r3, r1, ip
   20f30:	add	sl, r5, sl
   20f34:	add	sl, sl, r4
   20f38:	and	r4, r4, r3
   20f3c:	eor	r4, r4, r1
   20f40:	ldr	r5, [sp, #44]	; 0x2c
   20f44:	add	lr, r4, lr
   20f48:	ldr	r4, [sp, #36]	; 0x24
   20f4c:	movw	r3, #23121	; 0x5a51
   20f50:	movt	r3, #9822	; 0x265e
   20f54:	add	lr, ip, lr, ror #27
   20f58:	add	r3, r4, r3
   20f5c:	eor	r2, ip, lr
   20f60:	movw	r4, #51114	; 0xc7aa
   20f64:	and	r2, r2, r1
   20f68:	movt	r4, #59830	; 0xe9b6
   20f6c:	eor	r2, r2, ip
   20f70:	add	r4, r5, r4
   20f74:	add	r2, r2, sl
   20f78:	add	r5, r4, ip
   20f7c:	ldr	r4, [sp, #20]
   20f80:	add	r3, r3, r1
   20f84:	add	r2, lr, r2, ror #23
   20f88:	movw	r1, #4189	; 0x105d
   20f8c:	movt	r1, #54831	; 0xd62f
   20f90:	movw	sl, #5203	; 0x1453
   20f94:	add	r1, r4, r1
   20f98:	eor	r4, lr, r2
   20f9c:	and	ip, ip, r4
   20fa0:	movt	sl, #580	; 0x244
   20fa4:	eor	ip, ip, lr
   20fa8:	add	sl, r7, sl
   20fac:	add	r3, ip, r3
   20fb0:	add	sl, sl, r2
   20fb4:	add	r1, r1, lr
   20fb8:	add	r3, r2, r3, ror #18
   20fbc:	eor	r4, r2, r3
   20fc0:	and	r4, r4, lr
   20fc4:	movw	lr, #59009	; 0xe681
   20fc8:	eor	r4, r4, r2
   20fcc:	movt	lr, #55457	; 0xd8a1
   20fd0:	add	r4, r4, r5
   20fd4:	movw	r5, #64456	; 0xfbc8
   20fd8:	movt	r5, #59347	; 0xe7d3
   20fdc:	add	lr, r6, lr
   20fe0:	add	r4, r3, r4, ror #12
   20fe4:	add	lr, lr, r3
   20fe8:	eor	ip, r3, r4
   20fec:	and	r2, r2, ip
   20ff0:	ldr	ip, [sp, #16]
   20ff4:	eor	r2, r2, r3
   20ff8:	add	r1, r2, r1
   20ffc:	add	r5, ip, r5
   21000:	ldr	r2, [sp, #32]
   21004:	add	r5, r5, r4
   21008:	add	r1, r4, r1, ror #27
   2100c:	eor	ip, r4, r1
   21010:	and	ip, ip, r3
   21014:	movw	r3, #52710	; 0xcde6
   21018:	eor	ip, ip, r4
   2101c:	movt	r3, #8673	; 0x21e1
   21020:	add	ip, ip, sl
   21024:	add	r3, r2, r3
   21028:	add	r3, r3, r1
   2102c:	movw	sl, #2006	; 0x7d6
   21030:	add	ip, r1, ip, ror #23
   21034:	movt	sl, #49975	; 0xc337
   21038:	eor	r2, r1, ip
   2103c:	add	sl, r9, sl
   21040:	and	r4, r4, r2
   21044:	add	sl, sl, ip
   21048:	eor	r4, r4, r1
   2104c:	add	lr, r4, lr
   21050:	ldr	r4, [sp, #12]
   21054:	add	lr, ip, lr, ror #18
   21058:	eor	r2, ip, lr
   2105c:	and	r2, r2, r1
   21060:	movw	r1, #3463	; 0xd87
   21064:	eor	r2, r2, ip
   21068:	movt	r1, #62677	; 0xf4d5
   2106c:	add	r2, r2, r5
   21070:	add	r1, r4, r1
   21074:	movw	r5, #5357	; 0x14ed
   21078:	movt	r5, #17754	; 0x455a
   2107c:	add	r2, lr, r2, ror #12
   21080:	add	r1, r1, lr
   21084:	eor	r4, lr, r2
   21088:	and	ip, ip, r4
   2108c:	eor	ip, ip, lr
   21090:	add	r3, ip, r3
   21094:	ldr	ip, [sp, #28]
   21098:	add	r3, r2, r3, ror #27
   2109c:	add	r5, ip, r5
   210a0:	eor	r4, r2, r3
   210a4:	add	r5, r5, r2
   210a8:	and	r4, r4, lr
   210ac:	movw	lr, #59653	; 0xe905
   210b0:	eor	r4, r4, r2
   210b4:	movt	lr, #43491	; 0xa9e3
   210b8:	add	r4, r4, sl
   210bc:	ldr	sl, [sp, #40]	; 0x28
   210c0:	add	r4, r3, r4, ror #23
   210c4:	add	lr, sl, lr
   210c8:	eor	ip, r3, r4
   210cc:	movw	sl, #41976	; 0xa3f8
   210d0:	and	r2, r2, ip
   210d4:	ldr	ip, [sp, #8]
   210d8:	eor	r2, r2, r3
   210dc:	movt	sl, #64751	; 0xfcef
   210e0:	add	r1, r2, r1
   210e4:	add	sl, ip, sl
   210e8:	movw	r2, #729	; 0x2d9
   210ec:	movt	r2, #26479	; 0x676f
   210f0:	add	r1, r4, r1, ror #18
   210f4:	add	r2, fp, r2
   210f8:	eor	ip, r4, r1
   210fc:	add	lr, lr, r3
   21100:	and	ip, ip, r3
   21104:	add	r3, r2, r1
   21108:	eor	ip, ip, r4
   2110c:	add	sl, sl, r4
   21110:	add	ip, ip, r5
   21114:	movw	r5, #19594	; 0x4c8a
   21118:	movt	r5, #36138	; 0x8d2a
   2111c:	add	ip, r1, ip, ror #12
   21120:	add	r5, r8, r5
   21124:	eor	r2, r1, ip
   21128:	add	r5, r5, ip
   2112c:	and	r4, r4, r2
   21130:	eor	r4, r4, r1
   21134:	add	lr, r4, lr
   21138:	movw	r4, #14658	; 0x3942
   2113c:	movt	r4, #65530	; 0xfffa
   21140:	add	lr, ip, lr, ror #27
   21144:	eor	r2, ip, lr
   21148:	and	r1, r1, r2
   2114c:	eor	r1, r1, ip
   21150:	add	sl, r1, sl
   21154:	ldr	r1, [sp, #20]
   21158:	add	sl, lr, sl, ror #23
   2115c:	add	r4, r1, r4
   21160:	eor	r2, lr, sl
   21164:	ldr	r1, [sp, #28]
   21168:	and	r2, r2, ip
   2116c:	movw	ip, #63105	; 0xf681
   21170:	eor	r2, r2, lr
   21174:	movt	ip, #34673	; 0x8771
   21178:	add	r2, r2, r3
   2117c:	add	ip, r1, ip
   21180:	add	r4, r4, lr
   21184:	add	ip, ip, sl
   21188:	add	r2, sl, r2, ror #18
   2118c:	eor	r1, sl, r2
   21190:	and	r3, r1, lr
   21194:	movw	lr, #24866	; 0x6122
   21198:	eor	r3, r3, sl
   2119c:	ldr	sl, [sp, #36]	; 0x24
   211a0:	add	r3, r3, r5
   211a4:	movt	lr, #28061	; 0x6d9d
   211a8:	add	lr, sl, lr
   211ac:	movw	r5, #14348	; 0x380c
   211b0:	add	r3, r2, r3, ror #12
   211b4:	add	lr, lr, r2
   211b8:	eor	r1, r1, r3
   211bc:	eor	r2, r2, r3
   211c0:	add	r1, r1, r4
   211c4:	movt	r5, #64997	; 0xfde5
   211c8:	add	r5, r9, r5
   211cc:	movw	r4, #59972	; 0xea44
   211d0:	add	r1, r3, r1, ror #28
   211d4:	add	r5, r5, r3
   211d8:	eor	r2, r2, r1
   211dc:	eor	r3, r3, r1
   211e0:	add	r2, r2, ip
   211e4:	ldr	ip, [sp, #4]
   211e8:	movt	r4, #42174	; 0xa4be
   211ec:	ldr	sl, [sp, #44]	; 0x2c
   211f0:	add	r2, r1, r2, ror #21
   211f4:	add	r4, ip, r4
   211f8:	eor	r3, r3, r2
   211fc:	add	r4, r4, r1
   21200:	add	r3, r3, lr
   21204:	eor	r1, r1, r2
   21208:	ldr	lr, [sp, #16]
   2120c:	movw	ip, #53161	; 0xcfa9
   21210:	add	r3, r2, r3, ror #16
   21214:	movt	ip, #19422	; 0x4bde
   21218:	eor	r1, r1, r3
   2121c:	add	ip, lr, ip
   21220:	add	r1, r1, r5
   21224:	add	ip, ip, r2
   21228:	eor	r2, r2, r3
   2122c:	movw	lr, #19296	; 0x4b60
   21230:	add	r1, r3, r1, ror #9
   21234:	movt	lr, #63163	; 0xf6bb
   21238:	eor	r2, r2, r1
   2123c:	add	lr, fp, lr
   21240:	add	r2, r2, r4
   21244:	add	lr, lr, r3
   21248:	eor	r3, r3, r1
   2124c:	movw	r5, #48240	; 0xbc70
   21250:	add	r2, r1, r2, ror #28
   21254:	movt	r5, #48831	; 0xbebf
   21258:	eor	r3, r3, r2
   2125c:	add	r5, r7, r5
   21260:	add	r3, r3, ip
   21264:	add	r5, r5, r1
   21268:	eor	r1, r1, r2
   2126c:	ldr	ip, [sp, #40]	; 0x28
   21270:	add	r3, r2, r3, ror #21
   21274:	movw	r4, #32454	; 0x7ec6
   21278:	eor	r1, r1, r3
   2127c:	movt	r4, #10395	; 0x289b
   21280:	add	r1, r1, lr
   21284:	add	r4, ip, r4
   21288:	add	r4, r4, r2
   2128c:	eor	r2, r2, r3
   21290:	add	r1, r3, r1, ror #16
   21294:	movw	ip, #10234	; 0x27fa
   21298:	eor	r2, r2, r1
   2129c:	movt	ip, #60065	; 0xeaa1
   212a0:	add	r2, r2, r5
   212a4:	add	ip, sl, ip
   212a8:	add	ip, ip, r3
   212ac:	eor	r3, r3, r1
   212b0:	add	r2, r1, r2, ror #9
   212b4:	ldr	r5, [sp, #12]
   212b8:	eor	r3, r3, r2
   212bc:	movw	lr, #12421	; 0x3085
   212c0:	add	r3, r3, r4
   212c4:	movt	lr, #54511	; 0xd4ef
   212c8:	add	lr, r5, lr
   212cc:	ldr	r4, [sp, #24]
   212d0:	add	r3, r2, r3, ror #28
   212d4:	add	lr, lr, r1
   212d8:	eor	r1, r1, r2
   212dc:	movw	r5, #7429	; 0x1d05
   212e0:	eor	r1, r1, r3
   212e4:	movt	r5, #1160	; 0x488
   212e8:	add	r1, r1, ip
   212ec:	add	r5, r4, r5
   212f0:	add	r5, r5, r2
   212f4:	eor	r2, r2, r3
   212f8:	add	r1, r3, r1, ror #21
   212fc:	ldr	ip, [sp, #32]
   21300:	eor	r2, r2, r1
   21304:	movw	r4, #53305	; 0xd039
   21308:	add	r2, r2, lr
   2130c:	movt	r4, #55764	; 0xd9d4
   21310:	add	r4, ip, r4
   21314:	movw	ip, #39397	; 0x99e5
   21318:	add	r2, r1, r2, ror #16
   2131c:	add	r4, r4, r3
   21320:	eor	r3, r3, r1
   21324:	movt	ip, #59099	; 0xe6db
   21328:	eor	r3, r3, r2
   2132c:	add	ip, r8, ip
   21330:	add	r3, r3, r5
   21334:	add	ip, ip, r1
   21338:	eor	r1, r1, r2
   2133c:	movw	lr, #31992	; 0x7cf8
   21340:	add	r3, r2, r3, ror #9
   21344:	movt	lr, #8098	; 0x1fa2
   21348:	eor	r1, r1, r3
   2134c:	add	lr, r6, lr
   21350:	add	r1, r1, r4
   21354:	add	lr, lr, r2
   21358:	eor	r2, r2, r3
   2135c:	ldr	r4, [sp, #8]
   21360:	add	r1, r3, r1, ror #28
   21364:	movw	r5, #22117	; 0x5665
   21368:	eor	r2, r2, r1
   2136c:	movt	r5, #50348	; 0xc4ac
   21370:	add	r2, r2, ip
   21374:	add	r5, r4, r5
   21378:	add	r5, r5, r3
   2137c:	eor	r3, r3, r1
   21380:	add	r2, r1, r2, ror #21
   21384:	movw	r4, #8772	; 0x2244
   21388:	eor	r3, r3, r2
   2138c:	movt	r4, #62505	; 0xf429
   21390:	add	r3, r3, lr
   21394:	add	r4, sl, r4
   21398:	add	r4, r4, r1
   2139c:	eor	r1, r1, r2
   213a0:	add	r3, r2, r3, ror #16
   213a4:	mvn	ip, r2
   213a8:	eor	r1, r1, r3
   213ac:	movw	sl, #65431	; 0xff97
   213b0:	add	r1, r1, r5
   213b4:	movt	sl, #17194	; 0x432a
   213b8:	ldr	r5, [sp, #20]
   213bc:	add	sl, fp, sl
   213c0:	add	r1, r3, r1, ror #9
   213c4:	add	r2, sl, r2
   213c8:	orr	ip, ip, r1
   213cc:	movw	sl, #41017	; 0xa039
   213d0:	eor	ip, ip, r3
   213d4:	movt	sl, #64659	; 0xfc93
   213d8:	add	ip, ip, r4
   213dc:	mvn	fp, r3
   213e0:	add	sl, r5, sl
   213e4:	movw	lr, #9127	; 0x23a7
   213e8:	add	ip, r1, ip, ror #26
   213ec:	movt	lr, #43924	; 0xab94
   213f0:	orr	fp, fp, ip
   213f4:	add	lr, r9, lr
   213f8:	add	sl, sl, r1
   213fc:	mvn	r9, r1
   21400:	eor	r1, r1, fp
   21404:	movw	r5, #22979	; 0x59c3
   21408:	add	r2, r1, r2
   2140c:	movt	r5, #25947	; 0x655b
   21410:	add	r5, r8, r5
   21414:	add	lr, lr, r3
   21418:	add	r2, ip, r2, ror #22
   2141c:	add	r5, r5, ip
   21420:	orr	r9, r9, r2
   21424:	mvn	r3, ip
   21428:	eor	ip, ip, r9
   2142c:	ldr	r1, [sp, #12]
   21430:	add	lr, ip, lr
   21434:	movw	r8, #52370	; 0xcc92
   21438:	movt	r8, #36620	; 0x8f0c
   2143c:	mvn	fp, r2
   21440:	add	lr, r2, lr, ror #17
   21444:	add	r8, r1, r8
   21448:	orr	r3, r3, lr
   2144c:	add	r8, r8, r2
   21450:	eor	r2, r2, r3
   21454:	movw	r4, #62589	; 0xf47d
   21458:	add	sl, r2, sl
   2145c:	movt	r4, #65519	; 0xffef
   21460:	add	r4, r7, r4
   21464:	mvn	r7, lr
   21468:	add	sl, lr, sl, ror #11
   2146c:	add	r4, r4, lr
   21470:	orr	fp, fp, sl
   21474:	ldr	r3, [sp, #4]
   21478:	eor	lr, lr, fp
   2147c:	ldr	r1, [sp, #28]
   21480:	add	lr, lr, r5
   21484:	movw	ip, #24017	; 0x5dd1
   21488:	movw	r9, #32335	; 0x7e4f
   2148c:	movt	ip, #34180	; 0x8584
   21490:	add	lr, sl, lr, ror #26
   21494:	movt	r9, #28584	; 0x6fa8
   21498:	orr	r7, r7, lr
   2149c:	add	ip, r3, ip
   214a0:	eor	r7, r7, sl
   214a4:	mvn	r3, sl
   214a8:	add	r7, r7, r8
   214ac:	add	r9, r1, r9
   214b0:	add	r9, r9, lr
   214b4:	mvn	r2, lr
   214b8:	add	r7, lr, r7, ror #22
   214bc:	movw	r1, #59104	; 0xe6e0
   214c0:	orr	r3, r3, r7
   214c4:	movt	r1, #65068	; 0xfe2c
   214c8:	eor	lr, lr, r3
   214cc:	add	r1, r6, r1
   214d0:	add	r4, lr, r4
   214d4:	add	ip, ip, sl
   214d8:	add	r1, r1, r7
   214dc:	mvn	sl, r7
   214e0:	add	r4, r7, r4, ror #17
   214e4:	ldr	r5, [sp, #24]
   214e8:	orr	r2, r2, r4
   214ec:	ldr	r3, [sp, #40]	; 0x28
   214f0:	eor	r7, r7, r2
   214f4:	movw	r6, #17172	; 0x4314
   214f8:	add	r7, r7, ip
   214fc:	movt	r6, #41729	; 0xa301
   21500:	add	r6, r5, r6
   21504:	movw	r5, #4513	; 0x11a1
   21508:	add	r7, r4, r7, ror #11
   2150c:	movt	r5, #19976	; 0x4e08
   21510:	orr	sl, sl, r7
   21514:	add	r5, r3, r5
   21518:	eor	sl, sl, r4
   2151c:	mvn	r3, r4
   21520:	add	sl, sl, r9
   21524:	add	r5, r5, r7
   21528:	mvn	r8, r7
   2152c:	ldr	r2, [sp, #16]
   21530:	add	sl, r7, sl, ror #26
   21534:	add	r6, r6, r4
   21538:	orr	r3, r3, sl
   2153c:	ldr	r4, [sp, #8]
   21540:	eor	r7, r7, r3
   21544:	movw	fp, #32386	; 0x7e82
   21548:	add	r1, r7, r1
   2154c:	movt	fp, #63315	; 0xf753
   21550:	add	fp, r2, fp
   21554:	movw	r2, #53947	; 0xd2bb
   21558:	add	r1, sl, r1, ror #22
   2155c:	movt	r2, #10967	; 0x2ad7
   21560:	orr	r8, r8, r1
   21564:	add	r2, r4, r2
   21568:	add	fp, fp, sl
   2156c:	mvn	r4, sl
   21570:	eor	sl, sl, r8
   21574:	ldr	r3, [sp, #32]
   21578:	add	r6, sl, r6
   2157c:	ldr	r9, [sp, #36]	; 0x24
   21580:	movw	ip, #54161	; 0xd391
   21584:	movt	ip, #60294	; 0xeb86
   21588:	add	r6, r1, r6, ror #17
   2158c:	add	ip, r3, ip
   21590:	orr	r4, r4, r6
   21594:	mvn	r3, r1
   21598:	eor	r4, r4, r1
   2159c:	movw	lr, #62005	; 0xf235
   215a0:	add	r5, r4, r5
   215a4:	movt	lr, #48442	; 0xbd3a
   215a8:	add	lr, r9, lr
   215ac:	add	r2, r2, r6
   215b0:	add	r5, r6, r5, ror #11
   215b4:	mvn	r9, r6
   215b8:	orr	r3, r3, r5
   215bc:	add	lr, lr, r1
   215c0:	eor	r6, r6, r3
   215c4:	add	ip, ip, r5
   215c8:	add	fp, r6, fp
   215cc:	mvn	r7, r5
   215d0:	ldr	r3, [r0]
   215d4:	add	fp, r5, fp, ror #26
   215d8:	ldr	r1, [r0, #12]
   215dc:	orr	r9, r9, fp
   215e0:	add	r6, r3, fp
   215e4:	eor	r5, r5, r9
   215e8:	mvn	r3, fp
   215ec:	add	lr, r5, lr
   215f0:	str	r6, [r0]
   215f4:	add	lr, fp, lr, ror #22
   215f8:	orr	r7, r7, lr
   215fc:	add	r1, r1, lr
   21600:	eor	fp, fp, r7
   21604:	str	r1, [r0, #12]
   21608:	add	r2, fp, r2
   2160c:	add	r2, lr, r2, ror #17
   21610:	orr	r1, r3, r2
   21614:	ldr	r3, [r0, #4]
   21618:	eor	lr, lr, r1
   2161c:	ldr	r1, [r0, #8]
   21620:	add	ip, lr, ip
   21624:	add	r3, r3, r2
   21628:	add	r2, r1, r2
   2162c:	str	r2, [r0, #8]
   21630:	add	lr, r3, ip, ror #11
   21634:	str	lr, [r0, #4]
   21638:	add	sp, sp, #52	; 0x34
   2163c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21640:	ldr	r3, [r1, #16]
   21644:	push	{r4, r5, r6, lr}
   21648:	ubfx	r3, r3, #3, #6
   2164c:	rsb	r2, r3, #63	; 0x3f
   21650:	add	r5, r1, #24
   21654:	cmp	r2, #7
   21658:	mov	r6, r0
   2165c:	add	r0, r5, r3
   21660:	mov	r4, r1
   21664:	add	r0, r0, #1
   21668:	mvn	r1, #127	; 0x7f
   2166c:	strb	r1, [r5, r3]
   21670:	bhi	216d4 <crc32@@Base+0x7f8c>
   21674:	mov	r1, #0
   21678:	bl	122e4 <memset@plt>
   2167c:	mov	r1, r5
   21680:	mov	r0, r4
   21684:	bl	20c38 <crc32@@Base+0x74f0>
   21688:	mov	r2, #56	; 0x38
   2168c:	mov	r1, #0
   21690:	mov	r0, r5
   21694:	bl	122e4 <memset@plt>
   21698:	ldr	r2, [r4, #16]
   2169c:	mov	r1, r5
   216a0:	ldr	r3, [r4, #20]
   216a4:	mov	r0, r4
   216a8:	strd	r2, [r4, #80]	; 0x50
   216ac:	bl	20c38 <crc32@@Base+0x74f0>
   216b0:	mov	r1, r4
   216b4:	mov	r0, r6
   216b8:	mov	r2, #16
   216bc:	bl	12380 <memmove@plt>
   216c0:	mov	r0, r4
   216c4:	mov	r2, #88	; 0x58
   216c8:	mov	r1, #0
   216cc:	pop	{r4, r5, r6, lr}
   216d0:	b	122e4 <memset@plt>
   216d4:	rsb	r2, r3, #55	; 0x37
   216d8:	mov	r1, #0
   216dc:	bl	122e4 <memset@plt>
   216e0:	b	21698 <crc32@@Base+0x7f50>
   216e4:	ldr	r3, [r0, #20]
   216e8:	cmp	r2, #63	; 0x3f
   216ec:	push	{r4, r5, r6, r7, r8, lr}
   216f0:	mov	r8, r2
   216f4:	add	r3, r3, r8, lsr #29
   216f8:	lsl	r2, r2, #3
   216fc:	mov	r4, r1
   21700:	strd	r2, [r0, #16]
   21704:	add	r5, r0, #24
   21708:	bls	2174c <crc32@@Base+0x8004>
   2170c:	sub	r6, r8, #64	; 0x40
   21710:	mov	r7, r0
   21714:	bic	r6, r6, #63	; 0x3f
   21718:	add	r6, r6, #64	; 0x40
   2171c:	add	r6, r1, r6
   21720:	mov	r2, #64	; 0x40
   21724:	mov	r1, r4
   21728:	mov	r0, r5
   2172c:	add	r4, r4, r2
   21730:	bl	12380 <memmove@plt>
   21734:	mov	r1, r5
   21738:	mov	r0, r7
   2173c:	bl	20c38 <crc32@@Base+0x74f0>
   21740:	cmp	r6, r4
   21744:	bne	21720 <crc32@@Base+0x7fd8>
   21748:	and	r8, r8, #63	; 0x3f
   2174c:	mov	r2, r8
   21750:	mov	r1, r4
   21754:	mov	r0, r5
   21758:	pop	{r4, r5, r6, r7, r8, lr}
   2175c:	b	12380 <memmove@plt>
   21760:	push	{r4, r5, lr}
   21764:	movw	r4, #61168	; 0xeef0
   21768:	movt	r4, #4
   2176c:	sub	sp, sp, #100	; 0x64
   21770:	mov	r5, r2
   21774:	mov	r2, r1
   21778:	ldr	r3, [r4]
   2177c:	mov	r1, r0
   21780:	add	r0, sp, #4
   21784:	movw	ip, #8961	; 0x2301
   21788:	movt	ip, #26437	; 0x6745
   2178c:	str	ip, [sp, #4]
   21790:	str	r3, [sp, #92]	; 0x5c
   21794:	movw	r3, #43913	; 0xab89
   21798:	movt	r3, #61389	; 0xefcd
   2179c:	str	r3, [sp, #8]
   217a0:	movw	r3, #56574	; 0xdcfe
   217a4:	movt	r3, #39098	; 0x98ba
   217a8:	str	r3, [sp, #12]
   217ac:	movw	r3, #21622	; 0x5476
   217b0:	movt	r3, #4146	; 0x1032
   217b4:	str	r3, [sp, #16]
   217b8:	mov	r3, #0
   217bc:	str	r3, [sp, #20]
   217c0:	str	r3, [sp, #24]
   217c4:	bl	216e4 <crc32@@Base+0x7f9c>
   217c8:	add	r1, sp, #4
   217cc:	mov	r0, r5
   217d0:	bl	21640 <crc32@@Base+0x7ef8>
   217d4:	ldr	r2, [sp, #92]	; 0x5c
   217d8:	ldr	r3, [r4]
   217dc:	cmp	r2, r3
   217e0:	bne	217ec <crc32@@Base+0x80a4>
   217e4:	add	sp, sp, #100	; 0x64
   217e8:	pop	{r4, r5, pc}
   217ec:	bl	12494 <__stack_chk_fail@plt>
   217f0:	push	{r4, r5, lr}
   217f4:	movw	r4, #61168	; 0xeef0
   217f8:	movt	r4, #4
   217fc:	sub	sp, sp, #100	; 0x64
   21800:	mov	r5, r2
   21804:	mov	r2, r1
   21808:	ldr	r3, [r4]
   2180c:	mov	r1, r0
   21810:	add	r0, sp, #4
   21814:	movw	ip, #8961	; 0x2301
   21818:	movt	ip, #26437	; 0x6745
   2181c:	str	ip, [sp, #4]
   21820:	str	r3, [sp, #92]	; 0x5c
   21824:	movw	r3, #43913	; 0xab89
   21828:	movt	r3, #61389	; 0xefcd
   2182c:	str	r3, [sp, #8]
   21830:	movw	r3, #56574	; 0xdcfe
   21834:	movt	r3, #39098	; 0x98ba
   21838:	str	r3, [sp, #12]
   2183c:	movw	r3, #21622	; 0x5476
   21840:	movt	r3, #4146	; 0x1032
   21844:	str	r3, [sp, #16]
   21848:	mov	r3, #0
   2184c:	str	r3, [sp, #20]
   21850:	str	r3, [sp, #24]
   21854:	bl	216e4 <crc32@@Base+0x7f9c>
   21858:	add	r1, sp, #4
   2185c:	mov	r0, r5
   21860:	bl	21640 <crc32@@Base+0x7ef8>
   21864:	ldr	r2, [sp, #92]	; 0x5c
   21868:	ldr	r3, [r4]
   2186c:	cmp	r2, r3
   21870:	bne	2187c <crc32@@Base+0x8134>
   21874:	add	sp, sp, #100	; 0x64
   21878:	pop	{r4, r5, pc}
   2187c:	bl	12494 <__stack_chk_fail@plt>
   21880:	subs	r0, r0, #21
   21884:	movne	r0, #1
   21888:	bx	lr
   2188c:	sub	r1, r1, #1
   21890:	ldr	r2, [r0]
   21894:	add	r3, r1, #2032	; 0x7f0
   21898:	cmp	r1, #0
   2189c:	add	r3, r3, #15
   218a0:	movlt	r1, r3
   218a4:	cmp	r2, #150	; 0x96
   218a8:	asr	r1, r1, #11
   218ac:	bne	2195c <crc32@@Base+0x8214>
   218b0:	ldr	r3, [r0, #4]
   218b4:	cmp	r3, #105	; 0x69
   218b8:	bne	2195c <crc32@@Base+0x8214>
   218bc:	ldr	r3, [r0, #8]
   218c0:	cmp	r3, #150	; 0x96
   218c4:	bne	2195c <crc32@@Base+0x8214>
   218c8:	ldr	r3, [r0, #12]
   218cc:	cmp	r3, #105	; 0x69
   218d0:	bne	2195c <crc32@@Base+0x8214>
   218d4:	ldr	r3, [r0, #16]
   218d8:	uxtb	r2, r1
   218dc:	cmp	r3, r2
   218e0:	bne	2195c <crc32@@Base+0x8214>
   218e4:	mvn	r1, r1
   218e8:	ldr	r2, [r0, #20]
   218ec:	uxtb	r1, r1
   218f0:	cmp	r2, r1
   218f4:	bne	2195c <crc32@@Base+0x8214>
   218f8:	ldr	r1, [r0, #24]
   218fc:	cmp	r3, r1
   21900:	bne	2195c <crc32@@Base+0x8214>
   21904:	ldr	r1, [r0, #28]
   21908:	cmp	r2, r1
   2190c:	bne	2195c <crc32@@Base+0x8214>
   21910:	ldr	r1, [r0, #32]
   21914:	cmp	r3, r1
   21918:	bne	2195c <crc32@@Base+0x8214>
   2191c:	ldr	r1, [r0, #36]	; 0x24
   21920:	cmp	r2, r1
   21924:	bne	2195c <crc32@@Base+0x8214>
   21928:	ldr	r1, [r0, #40]	; 0x28
   2192c:	cmp	r3, r1
   21930:	bne	2195c <crc32@@Base+0x8214>
   21934:	ldr	r3, [r0, #44]	; 0x2c
   21938:	cmp	r2, r3
   2193c:	bne	2195c <crc32@@Base+0x8214>
   21940:	ldr	r3, [r0, #48]	; 0x30
   21944:	cmp	r3, #170	; 0xaa
   21948:	bne	2195c <crc32@@Base+0x8214>
   2194c:	ldr	r0, [r0, #512]	; 0x200
   21950:	subs	r0, r0, #170	; 0xaa
   21954:	mvnne	r0, #0
   21958:	bx	lr
   2195c:	mvn	r0, #0
   21960:	bx	lr
   21964:	ldr	r3, [r1, #44]	; 0x2c
   21968:	mov	r1, #0
   2196c:	push	{r4, r5, r6, lr}
   21970:	movw	r4, #2047	; 0x7ff
   21974:	add	r3, r4, r3
   21978:	mov	r2, #2048	; 0x800
   2197c:	add	r4, r3, r4
   21980:	cmp	r3, r1
   21984:	mov	r5, r0
   21988:	movlt	r3, r4
   2198c:	asr	r4, r3, #11
   21990:	bl	122e4 <memset@plt>
   21994:	mov	ip, #150	; 0x96
   21998:	mov	r0, #105	; 0x69
   2199c:	mvn	r2, r4
   219a0:	uxtb	r3, r4
   219a4:	uxtb	r2, r2
   219a8:	mov	r1, #170	; 0xaa
   219ac:	str	r3, [r5, #40]	; 0x28
   219b0:	str	r2, [r5, #44]	; 0x2c
   219b4:	str	r2, [r5, #36]	; 0x24
   219b8:	str	r2, [r5, #28]
   219bc:	str	r2, [r5, #20]
   219c0:	str	r3, [r5, #32]
   219c4:	str	r3, [r5, #24]
   219c8:	str	r3, [r5, #16]
   219cc:	str	ip, [r5, #8]
   219d0:	str	ip, [r5]
   219d4:	str	r0, [r5, #12]
   219d8:	str	r0, [r5, #4]
   219dc:	str	r1, [r5, #512]	; 0x200
   219e0:	str	r1, [r5, #48]	; 0x30
   219e4:	pop	{r4, r5, r6, pc}
   219e8:	push	{r4, r5, r6, r7, r8, lr}
   219ec:	movw	r6, #43168	; 0xa8a0
   219f0:	sub	r5, r0, #4
   219f4:	movt	r6, #3
   219f8:	mov	r7, r0
   219fc:	mov	r4, #0
   21a00:	mov	r2, r4
   21a04:	ldr	r3, [r5, #4]!
   21a08:	mov	r1, r6
   21a0c:	add	r4, r4, #1
   21a10:	mov	r0, #1
   21a14:	bl	12770 <__printf_chk@plt>
   21a18:	cmp	r4, #13
   21a1c:	bne	21a00 <crc32@@Base+0x82b8>
   21a20:	ldr	r3, [r7, #512]	; 0x200
   21a24:	movw	r1, #43168	; 0xa8a0
   21a28:	mov	r2, #128	; 0x80
   21a2c:	movt	r1, #3
   21a30:	mov	r0, #1
   21a34:	pop	{r4, r5, r6, r7, r8, lr}
   21a38:	b	12770 <__printf_chk@plt>
   21a3c:	subs	r0, r0, #16
   21a40:	movne	r0, #1
   21a44:	bx	lr
   21a48:	bx	lr
   21a4c:	push	{r4, r5, r6, r7, lr}
   21a50:	movw	r5, #61168	; 0xeef0
   21a54:	movt	r5, #4
   21a58:	ldrb	r2, [r0]
   21a5c:	sub	sp, sp, #12
   21a60:	ldr	r3, [r5]
   21a64:	cmp	r2, #48	; 0x30
   21a68:	str	r3, [sp, #4]
   21a6c:	bne	21b20 <crc32@@Base+0x83d8>
   21a70:	ldrb	r3, [r0, #1]
   21a74:	cmp	r3, #120	; 0x78
   21a78:	bne	21b20 <crc32@@Base+0x83d8>
   21a7c:	mov	r7, r1
   21a80:	add	r4, r0, #2
   21a84:	bl	1268c <__errno_location@plt>
   21a88:	mov	r3, #0
   21a8c:	mov	r2, #16
   21a90:	mov	r1, sp
   21a94:	mov	r6, r0
   21a98:	mov	r0, r4
   21a9c:	str	r3, [r6]
   21aa0:	bl	122cc <strtoul@plt>
   21aa4:	ldr	r2, [r6]
   21aa8:	cmp	r2, #34	; 0x22
   21aac:	mov	r3, r0
   21ab0:	beq	21ae8 <crc32@@Base+0x83a0>
   21ab4:	cmp	r2, #0
   21ab8:	bne	21af0 <crc32@@Base+0x83a8>
   21abc:	ldr	r2, [sp]
   21ac0:	cmp	r2, r4
   21ac4:	strne	r3, [r7]
   21ac8:	movne	r0, #0
   21acc:	beq	21b48 <crc32@@Base+0x8400>
   21ad0:	ldr	r2, [sp, #4]
   21ad4:	ldr	r3, [r5]
   21ad8:	cmp	r2, r3
   21adc:	bne	21b70 <crc32@@Base+0x8428>
   21ae0:	add	sp, sp, #12
   21ae4:	pop	{r4, r5, r6, r7, pc}
   21ae8:	cmn	r0, #1
   21aec:	beq	21af8 <crc32@@Base+0x83b0>
   21af0:	cmp	r3, #0
   21af4:	bne	21abc <crc32@@Base+0x8374>
   21af8:	movw	r3, #65044	; 0xfe14
   21afc:	movt	r3, #4
   21b00:	movw	r0, #43332	; 0xa944
   21b04:	mov	r2, #29
   21b08:	ldr	r3, [r3]
   21b0c:	movt	r0, #3
   21b10:	mov	r1, #1
   21b14:	bl	12578 <fwrite@plt>
   21b18:	mvn	r0, #21
   21b1c:	b	21ad0 <crc32@@Base+0x8388>
   21b20:	movw	r3, #65044	; 0xfe14
   21b24:	movt	r3, #4
   21b28:	movw	r0, #43296	; 0xa920
   21b2c:	mov	r2, #33	; 0x21
   21b30:	ldr	r3, [r3]
   21b34:	movt	r0, #3
   21b38:	mov	r1, #1
   21b3c:	bl	12578 <fwrite@plt>
   21b40:	mvn	r0, #21
   21b44:	b	21ad0 <crc32@@Base+0x8388>
   21b48:	movw	r3, #65044	; 0xfe14
   21b4c:	movt	r3, #4
   21b50:	movw	r0, #43364	; 0xa964
   21b54:	mov	r2, #21
   21b58:	ldr	r3, [r3]
   21b5c:	movt	r0, #3
   21b60:	mov	r1, #1
   21b64:	bl	12578 <fwrite@plt>
   21b68:	mvn	r0, #21
   21b6c:	b	21ad0 <crc32@@Base+0x8388>
   21b70:	bl	12494 <__stack_chk_fail@plt>
   21b74:	push	{r4, r5, r6, r7, r8, lr}
   21b78:	cmp	r1, #0
   21b7c:	add	r4, r0, #16
   21b80:	sub	sp, sp, #8
   21b84:	movne	r7, r1
   21b88:	mov	r8, r2
   21b8c:	moveq	r7, r4
   21b90:	mov	r6, r0
   21b94:	bl	12590 <EVP_CIPHER_CTX_new@plt>
   21b98:	mov	r5, r0
   21b9c:	bl	1214c <EVP_aes_128_cbc@plt>
   21ba0:	mov	r2, r4
   21ba4:	str	r8, [sp]
   21ba8:	mov	r3, r7
   21bac:	mov	r1, r0
   21bb0:	mov	r0, r5
   21bb4:	bl	120c8 <EVP_CipherInit@plt>
   21bb8:	cmp	r0, #1
   21bbc:	mov	r4, r0
   21bc0:	beq	21bd0 <crc32@@Base+0x8488>
   21bc4:	mov	r0, r4
   21bc8:	add	sp, sp, #8
   21bcc:	pop	{r4, r5, r6, r7, r8, pc}
   21bd0:	mov	r1, #0
   21bd4:	mov	r0, r5
   21bd8:	bl	125b4 <EVP_CIPHER_CTX_set_padding@plt>
   21bdc:	mov	r0, r4
   21be0:	str	r5, [r6, #60]	; 0x3c
   21be4:	add	sp, sp, #8
   21be8:	pop	{r4, r5, r6, r7, r8, pc}
   21bec:	push	{r4, r5, r6, lr}
   21bf0:	mov	r4, r0
   21bf4:	ldr	r0, [r0, #60]	; 0x3c
   21bf8:	mov	r5, r1
   21bfc:	bl	123f8 <EVP_CIPHER_CTX_cleanup@plt>
   21c00:	cmp	r0, #0
   21c04:	popeq	{r4, r5, r6, pc}
   21c08:	mov	r2, r5
   21c0c:	add	r1, r4, #136	; 0x88
   21c10:	mov	r0, r4
   21c14:	pop	{r4, r5, r6, lr}
   21c18:	b	21b74 <crc32@@Base+0x842c>
   21c1c:	push	{r1, r2, r3}
   21c20:	push	{r4, lr}
   21c24:	movw	r4, #61168	; 0xeef0
   21c28:	movt	r4, #4
   21c2c:	ldrb	r2, [r0]
   21c30:	sub	sp, sp, #12
   21c34:	ldr	r3, [r4]
   21c38:	tst	r2, #8
   21c3c:	ldr	r2, [sp, #20]
   21c40:	str	r3, [sp, #4]
   21c44:	beq	21c68 <crc32@@Base+0x8520>
   21c48:	ldr	r2, [sp, #4]
   21c4c:	ldr	r3, [r4]
   21c50:	cmp	r2, r3
   21c54:	bne	21c8c <crc32@@Base+0x8544>
   21c58:	add	sp, sp, #12
   21c5c:	pop	{r4, lr}
   21c60:	add	sp, sp, #12
   21c64:	bx	lr
   21c68:	add	ip, sp, #24
   21c6c:	movw	r0, #65048	; 0xfe18
   21c70:	movt	r0, #4
   21c74:	mov	r1, #1
   21c78:	mov	r3, ip
   21c7c:	str	ip, [sp]
   21c80:	ldr	r0, [r0]
   21c84:	bl	12530 <__vfprintf_chk@plt>
   21c88:	b	21c48 <crc32@@Base+0x8500>
   21c8c:	bl	12494 <__stack_chk_fail@plt>
   21c90:	cmp	r0, #0
   21c94:	beq	21d18 <crc32@@Base+0x85d0>
   21c98:	ldr	r3, [r0, #64]	; 0x40
   21c9c:	ldrb	r3, [r3]
   21ca0:	cmp	r3, #0
   21ca4:	beq	21cec <crc32@@Base+0x85a4>
   21ca8:	ldr	r3, [r0]
   21cac:	ldr	r2, [r0, #8]
   21cb0:	cmp	r3, #0
   21cb4:	beq	21cd4 <crc32@@Base+0x858c>
   21cb8:	cmp	r2, #0
   21cbc:	bne	21ccc <crc32@@Base+0x8584>
   21cc0:	ldr	r3, [r0, #16]
   21cc4:	cmp	r3, #0
   21cc8:	beq	21cdc <crc32@@Base+0x8594>
   21ccc:	mov	r0, #1
   21cd0:	bx	lr
   21cd4:	cmp	r2, #0
   21cd8:	bne	21cc0 <crc32@@Base+0x8578>
   21cdc:	ldr	r0, [r0, #28]
   21ce0:	adds	r0, r0, #0
   21ce4:	movne	r0, #1
   21ce8:	bx	lr
   21cec:	movw	r1, #65044	; 0xfe14
   21cf0:	movt	r1, #4
   21cf4:	ldr	r3, [r0, #80]	; 0x50
   21cf8:	movw	r2, #43388	; 0xa97c
   21cfc:	push	{r4, lr}
   21d00:	movt	r2, #3
   21d04:	ldr	r0, [r1]
   21d08:	mov	r1, #1
   21d0c:	bl	122b4 <__fprintf_chk@plt>
   21d10:	mvn	r0, #0
   21d14:	pop	{r4, pc}
   21d18:	mvn	r0, #0
   21d1c:	bx	lr
   21d20:	push	{r4, r5, r6, r7, r8, lr}
   21d24:	subs	r7, r0, #0
   21d28:	mov	r6, r1
   21d2c:	beq	21d78 <crc32@@Base+0x8630>
   21d30:	ldr	r4, [r7, #12]
   21d34:	cmp	r4, #0
   21d38:	beq	21d60 <crc32@@Base+0x8618>
   21d3c:	ldr	r0, [r4, #8]
   21d40:	ldr	r5, [r4, #4]
   21d44:	cmp	r0, #0
   21d48:	beq	21d50 <crc32@@Base+0x8608>
   21d4c:	bl	12128 <free@plt>
   21d50:	mov	r0, r4
   21d54:	bl	12128 <free@plt>
   21d58:	subs	r4, r5, #0
   21d5c:	bne	21d3c <crc32@@Base+0x85f4>
   21d60:	ldr	r4, [r7, #8]
   21d64:	mov	r0, r7
   21d68:	bl	12128 <free@plt>
   21d6c:	cmp	r4, #0
   21d70:	movne	r7, r4
   21d74:	bne	21d30 <crc32@@Base+0x85e8>
   21d78:	cmp	r6, #0
   21d7c:	popeq	{r4, r5, r6, r7, r8, pc}
   21d80:	ldr	r0, [r6, #8]
   21d84:	ldr	r4, [r6]
   21d88:	bl	12128 <free@plt>
   21d8c:	mov	r0, r6
   21d90:	bl	12128 <free@plt>
   21d94:	subs	r6, r4, #0
   21d98:	bne	21d80 <crc32@@Base+0x8638>
   21d9c:	pop	{r4, r5, r6, r7, r8, pc}
   21da0:	push	{r4, r5, r6, lr}
   21da4:	mov	r4, r1
   21da8:	ldr	r1, [r1]
   21dac:	mov	r5, r0
   21db0:	ldr	r0, [r0]
   21db4:	add	r1, r2, r1
   21db8:	str	r1, [r4]
   21dbc:	bl	123d4 <realloc@plt>
   21dc0:	subs	r2, r0, #0
   21dc4:	ldrne	r1, [r4]
   21dc8:	movne	r3, #64	; 0x40
   21dcc:	movtne	r3, #53760	; 0xd200
   21dd0:	strne	r2, [r5]
   21dd4:	movne	r0, #0
   21dd8:	mvneq	r0, #11
   21ddc:	orrne	r3, r3, r1, lsl #8
   21de0:	revne	r3, r3
   21de4:	strne	r3, [r2]
   21de8:	pop	{r4, r5, r6, pc}
   21dec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21df0:	movw	r6, #61168	; 0xeef0
   21df4:	movt	r6, #4
   21df8:	cmp	r3, #0
   21dfc:	sub	sp, sp, #28
   21e00:	movw	lr, #43472	; 0xa9d0
   21e04:	ldr	r4, [r6]
   21e08:	movt	lr, #3
   21e0c:	movw	ip, #43480	; 0xa9d8
   21e10:	movt	ip, #3
   21e14:	mov	r8, r0
   21e18:	mov	r7, r1
   21e1c:	mov	r0, #1
   21e20:	mov	r1, #48	; 0x30
   21e24:	str	r4, [sp, #20]
   21e28:	movne	r5, lr
   21e2c:	moveq	r5, ip
   21e30:	mov	r9, r2
   21e34:	mov	fp, r3
   21e38:	mov	sl, #0
   21e3c:	str	sl, [sp, #16]
   21e40:	bl	12518 <calloc@plt>
   21e44:	subs	r4, r0, #0
   21e48:	beq	22000 <crc32@@Base+0x88b8>
   21e4c:	ldr	r0, [r7]
   21e50:	movw	r1, #31680	; 0x7bc0
   21e54:	movt	r1, #3
   21e58:	bl	12278 <strtok@plt>
   21e5c:	cmp	r0, #0
   21e60:	beq	21fd4 <crc32@@Base+0x888c>
   21e64:	ldrb	r3, [r0]
   21e68:	cmp	r3, #72	; 0x48
   21e6c:	bne	21edc <crc32@@Base+0x8794>
   21e70:	ldrb	r3, [r0, #1]
   21e74:	cmp	r3, #65	; 0x41
   21e78:	bne	21edc <crc32@@Base+0x8794>
   21e7c:	ldrb	r3, [r0, #2]
   21e80:	cmp	r3, #66	; 0x42
   21e84:	bne	21edc <crc32@@Base+0x8794>
   21e88:	ldrb	r3, [r0, #3]
   21e8c:	cmp	r3, #0
   21e90:	bne	21edc <crc32@@Base+0x8794>
   21e94:	mov	r0, r3
   21e98:	movw	r1, #31680	; 0x7bc0
   21e9c:	movt	r1, #3
   21ea0:	bl	12278 <strtok@plt>
   21ea4:	cmp	r0, #0
   21ea8:	movne	sl, #1
   21eac:	bne	21edc <crc32@@Base+0x8794>
   21eb0:	movw	r1, #65044	; 0xfe14
   21eb4:	movt	r1, #4
   21eb8:	ldr	r3, [r9]
   21ebc:	movw	r2, #43528	; 0xaa08
   21ec0:	ldr	r0, [r1]
   21ec4:	movt	r2, #3
   21ec8:	str	r5, [sp]
   21ecc:	mov	r1, #1
   21ed0:	mvn	r7, #21
   21ed4:	bl	122b4 <__fprintf_chk@plt>
   21ed8:	b	21f10 <crc32@@Base+0x87c8>
   21edc:	add	r1, sp, #12
   21ee0:	bl	21a4c <crc32@@Base+0x8304>
   21ee4:	subs	r7, r0, #0
   21ee8:	beq	21f34 <crc32@@Base+0x87ec>
   21eec:	movw	r1, #65044	; 0xfe14
   21ef0:	movt	r1, #4
   21ef4:	ldr	r3, [r9]
   21ef8:	movw	r2, #43560	; 0xaa28
   21efc:	ldr	r0, [r1]
   21f00:	movt	r2, #3
   21f04:	str	r5, [sp]
   21f08:	mov	r1, #1
   21f0c:	bl	122b4 <__fprintf_chk@plt>
   21f10:	mov	r0, r4
   21f14:	bl	12128 <free@plt>
   21f18:	ldr	r2, [sp, #20]
   21f1c:	mov	r0, r7
   21f20:	ldr	r3, [r6]
   21f24:	cmp	r2, r3
   21f28:	bne	22008 <crc32@@Base+0x88c0>
   21f2c:	add	sp, sp, #28
   21f30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f34:	movw	r1, #31680	; 0x7bc0
   21f38:	movt	r1, #3
   21f3c:	bl	12278 <strtok@plt>
   21f40:	cmp	r0, #0
   21f44:	beq	21f84 <crc32@@Base+0x883c>
   21f48:	add	r1, sp, #16
   21f4c:	bl	21a4c <crc32@@Base+0x8304>
   21f50:	subs	ip, r0, #0
   21f54:	beq	21f84 <crc32@@Base+0x883c>
   21f58:	movw	r1, #65044	; 0xfe14
   21f5c:	movt	r1, #4
   21f60:	ldr	r3, [r9]
   21f64:	movw	r2, #43592	; 0xaa48
   21f68:	ldr	r0, [r1]
   21f6c:	movt	r2, #3
   21f70:	str	r5, [sp]
   21f74:	mov	r1, #1
   21f78:	mov	r7, ip
   21f7c:	bl	122b4 <__fprintf_chk@plt>
   21f80:	b	21f10 <crc32@@Base+0x87c8>
   21f84:	ldr	r1, [r8, #12]
   21f88:	cmp	fp, #0
   21f8c:	ldr	r3, [sp, #12]
   21f90:	movne	r2, #5
   21f94:	moveq	r2, #4
   21f98:	cmp	r1, #0
   21f9c:	ldr	r1, [sp, #16]
   21fa0:	str	r3, [r4, #20]
   21fa4:	mov	r3, #16
   21fa8:	str	r3, [r4]
   21fac:	ldrne	r3, [r8, #16]
   21fb0:	strb	r2, [r4, #17]
   21fb4:	mov	r2, #90	; 0x5a
   21fb8:	strh	sl, [r4, #18]
   21fbc:	str	r1, [r4, #28]
   21fc0:	strb	r2, [r4, #16]
   21fc4:	streq	r4, [r8, #12]
   21fc8:	strne	r4, [r3, #4]
   21fcc:	str	r4, [r8, #16]
   21fd0:	b	21f18 <crc32@@Base+0x87d0>
   21fd4:	movw	r1, #65044	; 0xfe14
   21fd8:	movt	r1, #4
   21fdc:	ldr	r3, [r9]
   21fe0:	movw	r2, #43488	; 0xa9e0
   21fe4:	ldr	r0, [r1]
   21fe8:	movt	r2, #3
   21fec:	str	r5, [sp]
   21ff0:	mov	r1, #1
   21ff4:	mvn	r7, #21
   21ff8:	bl	122b4 <__fprintf_chk@plt>
   21ffc:	b	21f10 <crc32@@Base+0x87c8>
   22000:	mvn	r7, #11
   22004:	b	21f18 <crc32@@Base+0x87d0>
   22008:	bl	12494 <__stack_chk_fail@plt>
   2200c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22010:	movw	r5, #61168	; 0xeef0
   22014:	movt	r5, #4
   22018:	ldr	ip, [r0, #16]
   2201c:	mov	r9, r2
   22020:	sub	sp, sp, #20
   22024:	ldr	r2, [r5]
   22028:	cmp	ip, #0
   2202c:	mov	r4, r0
   22030:	mov	r8, r1
   22034:	mov	r6, r3
   22038:	add	r0, r0, #8
   2203c:	add	r1, r4, #12
   22040:	str	r2, [sp, #12]
   22044:	beq	22138 <crc32@@Base+0x89f0>
   22048:	cmp	r3, #-1073741824	; 0xc0000000
   2204c:	beq	22140 <crc32@@Base+0x89f8>
   22050:	ldr	r3, [ip]
   22054:	bic	r3, r3, #16711680	; 0xff0000
   22058:	bic	r3, r3, #65280	; 0xff00
   2205c:	cmp	r6, r3
   22060:	beq	22190 <crc32@@Base+0x8a48>
   22064:	mov	r2, #12
   22068:	bl	21da0 <crc32@@Base+0x8658>
   2206c:	subs	r7, r0, #0
   22070:	bne	2211c <crc32@@Base+0x89d4>
   22074:	ldr	sl, [r4, #12]
   22078:	ldr	fp, [r4, #8]
   2207c:	bic	sl, sl, #3
   22080:	sub	r3, sl, #12
   22084:	add	r3, fp, r3
   22088:	str	r3, [r4, #16]
   2208c:	ldr	r0, [r8]
   22090:	movw	r1, #31680	; 0x7bc0
   22094:	movt	r1, #3
   22098:	bl	12278 <strtok@plt>
   2209c:	cmp	r0, #0
   220a0:	beq	221fc <crc32@@Base+0x8ab4>
   220a4:	add	r1, sp, #4
   220a8:	bl	21a4c <crc32@@Base+0x8304>
   220ac:	subs	r7, r0, #0
   220b0:	bne	2216c <crc32@@Base+0x8a24>
   220b4:	movw	r1, #31680	; 0x7bc0
   220b8:	movt	r1, #3
   220bc:	bl	12278 <strtok@plt>
   220c0:	cmp	r0, #0
   220c4:	beq	221d4 <crc32@@Base+0x8a8c>
   220c8:	add	r1, sp, #8
   220cc:	bl	21a4c <crc32@@Base+0x8304>
   220d0:	subs	r7, r0, #0
   220d4:	bne	221b0 <crc32@@Base+0x8a68>
   220d8:	sub	sl, sl, #8
   220dc:	ldr	r3, [sp, #4]
   220e0:	add	r1, fp, sl
   220e4:	rev	r3, r3
   220e8:	str	r3, [fp, sl]
   220ec:	ldr	r2, [sp, #8]
   220f0:	ldr	r3, [r4, #16]
   220f4:	rev	r2, r2
   220f8:	str	r2, [r1, #4]
   220fc:	ldr	r1, [r4, #8]
   22100:	ldr	r2, [r4, #12]
   22104:	sub	r1, r3, r1
   22108:	mov	r7, #0
   2210c:	sub	r2, r2, r1
   22110:	orr	r6, r6, r2, lsl #8
   22114:	rev	r6, r6
   22118:	str	r6, [r3]
   2211c:	ldr	r2, [sp, #12]
   22120:	mov	r0, r7
   22124:	ldr	r3, [r5]
   22128:	cmp	r2, r3
   2212c:	bne	22224 <crc32@@Base+0x8adc>
   22130:	add	sp, sp, #20
   22134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22138:	cmp	r3, #-1073741824	; 0xc0000000
   2213c:	bne	22064 <crc32@@Base+0x891c>
   22140:	mov	r2, #4
   22144:	bl	21da0 <crc32@@Base+0x8658>
   22148:	subs	r7, r0, #0
   2214c:	bne	2211c <crc32@@Base+0x89d4>
   22150:	ldr	r2, [r4, #12]
   22154:	ldr	r1, [r4, #8]
   22158:	bic	r3, r2, #3
   2215c:	sub	r3, r3, #4
   22160:	add	r3, r1, r3
   22164:	str	r3, [r4, #16]
   22168:	b	22104 <crc32@@Base+0x89bc>
   2216c:	movw	r1, #65044	; 0xfe14
   22170:	movt	r1, #4
   22174:	ldr	r3, [r9]
   22178:	movw	r2, #43660	; 0xaa8c
   2217c:	ldr	r0, [r1]
   22180:	movt	r2, #3
   22184:	mov	r1, #1
   22188:	bl	122b4 <__fprintf_chk@plt>
   2218c:	b	2211c <crc32@@Base+0x89d4>
   22190:	mov	r2, #8
   22194:	bl	21da0 <crc32@@Base+0x8658>
   22198:	subs	r7, r0, #0
   2219c:	bne	2211c <crc32@@Base+0x89d4>
   221a0:	ldr	sl, [r4, #12]
   221a4:	ldr	fp, [r4, #8]
   221a8:	bic	sl, sl, #3
   221ac:	b	2208c <crc32@@Base+0x8944>
   221b0:	movw	r1, #65044	; 0xfe14
   221b4:	movt	r1, #4
   221b8:	ldr	r3, [r9]
   221bc:	movw	r2, #43728	; 0xaad0
   221c0:	ldr	r0, [r1]
   221c4:	movt	r2, #3
   221c8:	mov	r1, #1
   221cc:	bl	122b4 <__fprintf_chk@plt>
   221d0:	b	2211c <crc32@@Base+0x89d4>
   221d4:	movw	r1, #65044	; 0xfe14
   221d8:	movt	r1, #4
   221dc:	ldr	r3, [r9]
   221e0:	movw	r2, #43696	; 0xaab0
   221e4:	ldr	r0, [r1]
   221e8:	movt	r2, #3
   221ec:	mov	r1, #1
   221f0:	mvn	r7, #21
   221f4:	bl	122b4 <__fprintf_chk@plt>
   221f8:	b	2211c <crc32@@Base+0x89d4>
   221fc:	movw	r1, #65044	; 0xfe14
   22200:	movt	r1, #4
   22204:	ldr	r3, [r9]
   22208:	movw	r2, #43628	; 0xaa6c
   2220c:	ldr	r0, [r1]
   22210:	movt	r2, #3
   22214:	mov	r1, #1
   22218:	mvn	r7, #21
   2221c:	bl	122b4 <__fprintf_chk@plt>
   22220:	b	2211c <crc32@@Base+0x89d4>
   22224:	bl	12494 <__stack_chk_fail@plt>
   22228:	push	{r4, r5, r6, r7, r8, r9, lr}
   2222c:	movw	r4, #61168	; 0xeef0
   22230:	movt	r4, #4
   22234:	sub	sp, sp, #20
   22238:	mov	r7, r0
   2223c:	mov	r0, r3
   22240:	ldr	ip, [r4]
   22244:	mov	r6, r3
   22248:	mov	r8, r1
   2224c:	mov	r9, r2
   22250:	str	ip, [sp, #12]
   22254:	bl	125a8 <malloc@plt>
   22258:	subs	r5, r0, #0
   2225c:	beq	222cc <crc32@@Base+0x8b84>
   22260:	mov	r2, #0
   22264:	mov	r3, r8
   22268:	str	r2, [r5]
   2226c:	mov	r0, r7
   22270:	str	r6, [sp]
   22274:	add	r2, sp, #8
   22278:	mov	r1, r5
   2227c:	bl	120f8 <EVP_CipherUpdate@plt>
   22280:	subs	r6, r0, #0
   22284:	mvneq	r6, #21
   22288:	bne	222b0 <crc32@@Base+0x8b68>
   2228c:	mov	r0, r5
   22290:	bl	12128 <free@plt>
   22294:	ldr	r2, [sp, #12]
   22298:	mov	r0, r6
   2229c:	ldr	r3, [r4]
   222a0:	cmp	r2, r3
   222a4:	bne	222d4 <crc32@@Base+0x8b8c>
   222a8:	add	sp, sp, #20
   222ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
   222b0:	cmp	r9, #0
   222b4:	beq	2228c <crc32@@Base+0x8b44>
   222b8:	mov	r0, r9
   222bc:	ldr	r2, [sp, #8]
   222c0:	mov	r1, r5
   222c4:	bl	1259c <memcpy@plt>
   222c8:	b	2228c <crc32@@Base+0x8b44>
   222cc:	mvn	r6, #11
   222d0:	b	22294 <crc32@@Base+0x8b4c>
   222d4:	bl	12494 <__stack_chk_fail@plt>
   222d8:	push	{r4, r5, r6, lr}
   222dc:	add	r4, r0, #136	; 0x88
   222e0:	ldr	r5, [r0, #64]	; 0x40
   222e4:	mov	r2, #0
   222e8:	mov	r1, r4
   222ec:	mov	r3, #96	; 0x60
   222f0:	ldr	r0, [r0, #60]	; 0x3c
   222f4:	bl	22228 <crc32@@Base+0x8ae0>
   222f8:	mov	r1, r4
   222fc:	mov	r0, r5
   22300:	mov	r2, #96	; 0x60
   22304:	pop	{r4, r5, r6, lr}
   22308:	b	12650 <EVP_DigestUpdate@plt>
   2230c:	push	{r4, r5, r6, r7, r8, lr}
   22310:	ldr	r4, [r0, #44]	; 0x2c
   22314:	ldr	r7, [r0, #64]	; 0x40
   22318:	cmp	r4, #0
   2231c:	popeq	{r4, r5, r6, r7, r8, pc}
   22320:	add	r8, r0, #100	; 0x64
   22324:	mov	r6, r0
   22328:	add	r5, r4, #20
   2232c:	mov	r3, #16
   22330:	mov	r2, r8
   22334:	ldr	r0, [r6, #60]	; 0x3c
   22338:	mov	r1, r5
   2233c:	bl	22228 <crc32@@Base+0x8ae0>
   22340:	mov	r1, r5
   22344:	mov	r2, #16
   22348:	mov	r0, r7
   2234c:	bl	12650 <EVP_DigestUpdate@plt>
   22350:	ldr	r4, [r4, #8]
   22354:	cmp	r4, #0
   22358:	bne	22328 <crc32@@Base+0x8be0>
   2235c:	pop	{r4, r5, r6, r7, r8, pc}
   22360:	push	{r4, lr}
   22364:	movw	r1, #43760	; 0xaaf0
   22368:	mov	r2, #32
   2236c:	movt	r1, #3
   22370:	mov	r0, #24
   22374:	bl	122c0 <CRYPTO_malloc@plt>
   22378:	cmp	r0, #0
   2237c:	popeq	{r4, pc}
   22380:	mov	r3, #0
   22384:	str	r3, [r0]
   22388:	str	r3, [r0, #4]
   2238c:	str	r3, [r0, #8]
   22390:	str	r3, [r0, #12]
   22394:	str	r3, [r0, #16]
   22398:	str	r3, [r0, #20]
   2239c:	pop	{r4, pc}
   223a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223a4:	movw	r3, #61168	; 0xeef0
   223a8:	sub	sp, sp, #428	; 0x1ac
   223ac:	movt	r3, #4
   223b0:	add	r7, sp, #152	; 0x98
   223b4:	mov	r4, r0
   223b8:	str	r3, [sp, #36]	; 0x24
   223bc:	mov	r5, r1
   223c0:	ldr	r3, [r3]
   223c4:	mov	r0, r7
   223c8:	mov	r2, #232	; 0xe8
   223cc:	mov	r1, #0
   223d0:	str	r3, [sp, #420]	; 0x1a4
   223d4:	bl	122e4 <memset@plt>
   223d8:	cmp	r4, #0
   223dc:	mov	r3, #0
   223e0:	str	r4, [sp, #156]	; 0x9c
   223e4:	bfi	r3, r5, #3, #1
   223e8:	strb	r3, [sp, #152]	; 0x98
   223ec:	beq	2291c <crc32@@Base+0x91d4>
   223f0:	mov	r0, r4
   223f4:	movw	r1, #49448	; 0xc128
   223f8:	movt	r1, #3
   223fc:	bl	1232c <fopen@plt>
   22400:	subs	fp, r0, #0
   22404:	movweq	r4, #65044	; 0xfe14
   22408:	movteq	r4, #4
   2240c:	beq	22818 <crc32@@Base+0x90d0>
   22410:	mov	r2, #2
   22414:	mov	r1, #0
   22418:	bl	12158 <fseek@plt>
   2241c:	cmp	r0, #0
   22420:	blt	22808 <crc32@@Base+0x90c0>
   22424:	mov	r0, fp
   22428:	bl	12524 <ftell@plt>
   2242c:	subs	r3, r0, #0
   22430:	str	r3, [sp, #32]
   22434:	blt	22808 <crc32@@Base+0x90c0>
   22438:	mov	r2, #0
   2243c:	mov	r0, fp
   22440:	mov	r1, r2
   22444:	bl	12158 <fseek@plt>
   22448:	cmp	r0, #0
   2244c:	blt	22808 <crc32@@Base+0x90c0>
   22450:	ldr	r3, [sp, #32]
   22454:	cmp	r3, #95	; 0x5f
   22458:	ble	22984 <crc32@@Base+0x923c>
   2245c:	ldr	r3, [sp, #32]
   22460:	ands	r5, r3, #15
   22464:	bne	228b4 <crc32@@Base+0x916c>
   22468:	bl	22360 <crc32@@Base+0x8c18>
   2246c:	mov	r4, r0
   22470:	str	r0, [sp, #216]	; 0xd8
   22474:	bl	1220c <EVP_sha1@plt>
   22478:	mov	r1, r0
   2247c:	mov	r0, r4
   22480:	bl	12080 <EVP_DigestInit@plt>
   22484:	mov	r0, r7
   22488:	movw	r1, #43932	; 0xab9c
   2248c:	movt	r1, #3
   22490:	bl	21c1c <crc32@@Base+0x84d4>
   22494:	add	r0, sp, #288	; 0x120
   22498:	mov	r3, fp
   2249c:	mov	r2, #96	; 0x60
   224a0:	mov	r1, #1
   224a4:	bl	12464 <fread@plt>
   224a8:	cmp	r0, #96	; 0x60
   224ac:	bne	22838 <crc32@@Base+0x90f0>
   224b0:	bl	22360 <crc32@@Base+0x8c18>
   224b4:	mov	r4, r0
   224b8:	bl	1220c <EVP_sha1@plt>
   224bc:	mov	r1, r0
   224c0:	mov	r0, r4
   224c4:	bl	12080 <EVP_DigestInit@plt>
   224c8:	add	r1, sp, #308	; 0x134
   224cc:	mov	r2, #76	; 0x4c
   224d0:	mov	r0, r4
   224d4:	bl	12650 <EVP_DigestUpdate@plt>
   224d8:	add	r1, sp, #388	; 0x184
   224dc:	mov	r2, r5
   224e0:	mov	r0, r4
   224e4:	bl	1253c <EVP_DigestFinal@plt>
   224e8:	mov	r0, r4
   224ec:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   224f0:	mov	r0, r4
   224f4:	bl	124b8 <CRYPTO_free@plt>
   224f8:	mov	r1, r5
   224fc:	mov	r2, #1
   22500:	mov	r0, r7
   22504:	bl	21b74 <crc32@@Base+0x842c>
   22508:	mov	r0, r7
   2250c:	bl	222d8 <crc32@@Base+0x8b90>
   22510:	add	r1, sp, #288	; 0x120
   22514:	add	r0, sp, #388	; 0x184
   22518:	mov	r2, #20
   2251c:	bl	126c8 <memcmp@plt>
   22520:	cmp	r0, #0
   22524:	beq	225b0 <crc32@@Base+0x8e68>
   22528:	movw	r3, #44124	; 0xac5c
   2252c:	movw	r2, #44128	; 0xac60
   22530:	movw	r1, #44084	; 0xac34
   22534:	movt	r3, #3
   22538:	movt	r2, #3
   2253c:	mov	r0, r7
   22540:	movt	r1, #3
   22544:	bl	21c1c <crc32@@Base+0x84d4>
   22548:	mvn	r4, #21
   2254c:	movw	r1, #44020	; 0xabf4
   22550:	mov	r0, r7
   22554:	movt	r1, #3
   22558:	bl	21c1c <crc32@@Base+0x84d4>
   2255c:	movw	r2, #43836	; 0xab3c
   22560:	movt	r2, #3
   22564:	mov	r0, r7
   22568:	movw	r1, #45080	; 0xb018
   2256c:	movt	r1, #3
   22570:	bl	21c1c <crc32@@Base+0x84d4>
   22574:	ldr	r0, [sp, #212]	; 0xd4
   22578:	bl	123f8 <EVP_CIPHER_CTX_cleanup@plt>
   2257c:	mov	r0, fp
   22580:	bl	125fc <fclose@plt>
   22584:	ldr	r0, [sp, #196]	; 0xc4
   22588:	ldr	r1, [sp, #204]	; 0xcc
   2258c:	bl	21d20 <crc32@@Base+0x85d8>
   22590:	ldr	r3, [sp, #36]	; 0x24
   22594:	ldr	r2, [sp, #420]	; 0x1a4
   22598:	mov	r0, r4
   2259c:	ldr	r3, [r3]
   225a0:	cmp	r2, r3
   225a4:	bne	22a14 <crc32@@Base+0x92cc>
   225a8:	add	sp, sp, #428	; 0x1ac
   225ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   225b0:	movw	r3, #44072	; 0xac28
   225b4:	movw	r2, #44076	; 0xac2c
   225b8:	movt	r3, #3
   225bc:	movt	r2, #3
   225c0:	movw	r1, #44084	; 0xac34
   225c4:	mov	r0, r7
   225c8:	movt	r1, #3
   225cc:	bl	21c1c <crc32@@Base+0x84d4>
   225d0:	ldr	r2, [sp, #308]	; 0x134
   225d4:	movw	r3, #21587	; 0x5453
   225d8:	movt	r3, #20557	; 0x504d
   225dc:	cmp	r2, r3
   225e0:	bne	225f8 <crc32@@Base+0x8eb0>
   225e4:	ldr	r2, [sp, #340]	; 0x154
   225e8:	movw	r3, #26483	; 0x6773
   225ec:	movt	r3, #27764	; 0x6c74
   225f0:	cmp	r2, r3
   225f4:	beq	22620 <crc32@@Base+0x8ed8>
   225f8:	add	r1, sp, #340	; 0x154
   225fc:	add	r3, sp, #308	; 0x134
   22600:	str	r1, [sp]
   22604:	movw	r2, #44128	; 0xac60
   22608:	movw	r1, #45132	; 0xb04c
   2260c:	movt	r2, #3
   22610:	mov	r0, r7
   22614:	movt	r1, #3
   22618:	bl	21c1c <crc32@@Base+0x84d4>
   2261c:	b	22548 <crc32@@Base+0x8e00>
   22620:	add	r1, sp, #340	; 0x154
   22624:	add	r3, sp, #308	; 0x134
   22628:	str	r1, [sp]
   2262c:	movw	r2, #44076	; 0xac2c
   22630:	movw	r1, #45132	; 0xb04c
   22634:	movt	r2, #3
   22638:	mov	r0, r7
   2263c:	movt	r1, #3
   22640:	bl	21c1c <crc32@@Base+0x84d4>
   22644:	ldrb	r4, [sp, #312]	; 0x138
   22648:	cmp	r4, #1
   2264c:	beq	22678 <crc32@@Base+0x8f30>
   22650:	ldrb	r3, [sp, #313]	; 0x139
   22654:	str	r3, [sp]
   22658:	movw	r2, #44128	; 0xac60
   2265c:	mov	r3, r4
   22660:	movw	r1, #45180	; 0xb07c
   22664:	movt	r2, #3
   22668:	movt	r1, #3
   2266c:	mov	r0, r7
   22670:	bl	21c1c <crc32@@Base+0x84d4>
   22674:	b	22548 <crc32@@Base+0x8e00>
   22678:	ldrb	r2, [sp, #313]	; 0x139
   2267c:	sub	r3, r2, #1
   22680:	cmp	r3, #1
   22684:	mov	r3, r2
   22688:	bhi	22654 <crc32@@Base+0x8f0c>
   2268c:	str	r2, [sp]
   22690:	mov	r3, r4
   22694:	mov	r0, r7
   22698:	movw	r2, #44076	; 0xac2c
   2269c:	movw	r1, #45180	; 0xb07c
   226a0:	movt	r2, #3
   226a4:	movt	r1, #3
   226a8:	bl	21c1c <crc32@@Base+0x84d4>
   226ac:	mov	r3, #0
   226b0:	ldrd	r0, [r7, #192]	; 0xc0
   226b4:	movw	r2, #16960	; 0x4240
   226b8:	movt	r2, #15
   226bc:	bl	35f14 <crc32@@Base+0x1c7cc>
   226c0:	mov	r2, #44	; 0x2c
   226c4:	mov	r1, #0
   226c8:	mov	r5, r0
   226cc:	add	r0, sp, #108	; 0x6c
   226d0:	bl	122e4 <memset@plt>
   226d4:	add	r0, sp, #108	; 0x6c
   226d8:	str	r4, [sp, #136]	; 0x88
   226dc:	bl	12704 <mktime@plt>
   226e0:	add	r1, sp, #64	; 0x40
   226e4:	add	r5, r5, r0
   226e8:	add	r0, sp, #60	; 0x3c
   226ec:	str	r5, [sp, #60]	; 0x3c
   226f0:	bl	123bc <gmtime_r@plt>
   226f4:	cmp	r0, #0
   226f8:	beq	229c8 <crc32@@Base+0x9280>
   226fc:	ldr	r0, [sp, #80]	; 0x50
   22700:	movw	r2, #44076	; 0xac2c
   22704:	ldr	lr, [sp, #76]	; 0x4c
   22708:	movt	r2, #3
   2270c:	ldr	ip, [sp, #64]	; 0x40
   22710:	str	r0, [sp, #12]
   22714:	ldr	r0, [sp, #68]	; 0x44
   22718:	ldr	r1, [sp, #84]	; 0x54
   2271c:	str	lr, [sp, #8]
   22720:	str	ip, [sp, #4]
   22724:	add	r1, r1, #2000	; 0x7d0
   22728:	ldr	r3, [sp, #72]	; 0x48
   2272c:	str	r1, [sp, #16]
   22730:	movw	r1, #45224	; 0xb0a8
   22734:	str	r0, [sp]
   22738:	movt	r1, #3
   2273c:	mov	r0, r7
   22740:	bl	21c1c <crc32@@Base+0x84d4>
   22744:	ldrh	r0, [r7, #208]	; 0xd0
   22748:	ldrh	r1, [r7, #204]	; 0xcc
   2274c:	movw	r2, #44076	; 0xac2c
   22750:	ldrh	r3, [r7, #200]	; 0xc8
   22754:	rev16	r0, r0
   22758:	rev16	r1, r1
   2275c:	movt	r2, #3
   22760:	rev16	r3, r3
   22764:	uxth	r0, r0
   22768:	uxth	r1, r1
   2276c:	str	r0, [sp, #4]
   22770:	str	r1, [sp]
   22774:	uxth	r3, r3
   22778:	mov	r0, r7
   2277c:	movw	r1, #45288	; 0xb0e8
   22780:	movt	r1, #3
   22784:	bl	21c1c <crc32@@Base+0x84d4>
   22788:	ldrh	r0, [r7, #220]	; 0xdc
   2278c:	ldrh	r1, [r7, #216]	; 0xd8
   22790:	movw	r2, #44076	; 0xac2c
   22794:	ldrh	r3, [r7, #212]	; 0xd4
   22798:	rev16	r0, r0
   2279c:	rev16	r1, r1
   227a0:	movt	r2, #3
   227a4:	rev16	r3, r3
   227a8:	uxth	r0, r0
   227ac:	uxth	r1, r1
   227b0:	str	r0, [sp, #4]
   227b4:	str	r1, [sp]
   227b8:	uxth	r3, r3
   227bc:	movw	r1, #45332	; 0xb114
   227c0:	mov	r0, r7
   227c4:	movt	r1, #3
   227c8:	bl	21c1c <crc32@@Base+0x84d4>
   227cc:	ldrh	r3, [r7, #162]	; 0xa2
   227d0:	bic	r2, r3, #1
   227d4:	cmp	r2, #0
   227d8:	beq	22860 <crc32@@Base+0x9118>
   227dc:	tst	r3, #1
   227e0:	movweq	r3, #46016	; 0xb3c0
   227e4:	movweq	r2, #44128	; 0xac60
   227e8:	movteq	r3, #3
   227ec:	bne	229b8 <crc32@@Base+0x9270>
   227f0:	movt	r2, #3
   227f4:	movw	r1, #44136	; 0xac68
   227f8:	mov	r0, r7
   227fc:	movt	r1, #3
   22800:	bl	21c1c <crc32@@Base+0x84d4>
   22804:	b	22548 <crc32@@Base+0x8e00>
   22808:	movw	r4, #65044	; 0xfe14
   2280c:	movt	r4, #4
   22810:	mov	r0, fp
   22814:	bl	125fc <fclose@plt>
   22818:	ldr	r0, [r4]
   2281c:	movw	r2, #45100	; 0xb02c
   22820:	ldr	r3, [sp, #156]	; 0x9c
   22824:	movt	r2, #3
   22828:	mov	r1, #1
   2282c:	mvn	r4, #21
   22830:	bl	122b4 <__fprintf_chk@plt>
   22834:	b	22584 <crc32@@Base+0x8e3c>
   22838:	movw	r3, #65044	; 0xfe14
   2283c:	movt	r3, #4
   22840:	movw	r0, #43984	; 0xabd0
   22844:	mov	r2, #32
   22848:	ldr	r3, [r3]
   2284c:	mov	r1, #1
   22850:	movt	r0, #3
   22854:	mvn	r4, #21
   22858:	bl	12578 <fwrite@plt>
   2285c:	b	2254c <crc32@@Base+0x8e04>
   22860:	tst	r3, #1
   22864:	movwne	r3, #45376	; 0xb140
   22868:	movwne	r2, #44076	; 0xac2c
   2286c:	movtne	r3, #3
   22870:	beq	229a8 <crc32@@Base+0x9260>
   22874:	movt	r2, #3
   22878:	movw	r1, #44136	; 0xac68
   2287c:	mov	r0, r7
   22880:	movt	r1, #3
   22884:	bl	21c1c <crc32@@Base+0x84d4>
   22888:	ldrh	r4, [r7, #224]	; 0xe0
   2288c:	cmp	r4, #0
   22890:	beq	228d8 <crc32@@Base+0x9190>
   22894:	mov	r3, r4
   22898:	movw	r2, #44128	; 0xac60
   2289c:	movw	r1, #44176	; 0xac90
   228a0:	movt	r2, #3
   228a4:	movt	r1, #3
   228a8:	mov	r0, r7
   228ac:	bl	21c1c <crc32@@Base+0x84d4>
   228b0:	b	22548 <crc32@@Base+0x8e00>
   228b4:	movw	r4, #65044	; 0xfe14
   228b8:	movt	r4, #4
   228bc:	movw	r0, #43900	; 0xab7c
   228c0:	mov	r2, #30
   228c4:	ldr	r3, [r4]
   228c8:	mov	r1, #1
   228cc:	movt	r0, #3
   228d0:	bl	12578 <fwrite@plt>
   228d4:	b	22810 <crc32@@Base+0x90c8>
   228d8:	mov	r3, r4
   228dc:	movw	r2, #44076	; 0xac2c
   228e0:	movw	r1, #44176	; 0xac90
   228e4:	movt	r2, #3
   228e8:	movt	r1, #3
   228ec:	mov	r0, r7
   228f0:	bl	21c1c <crc32@@Base+0x84d4>
   228f4:	ldrh	r3, [r7, #180]	; 0xb4
   228f8:	cmp	r3, #6
   228fc:	beq	22944 <crc32@@Base+0x91fc>
   22900:	movw	r2, #44128	; 0xac60
   22904:	movw	r1, #44216	; 0xacb8
   22908:	movt	r2, #3
   2290c:	movt	r1, #3
   22910:	mov	r0, r7
   22914:	bl	21c1c <crc32@@Base+0x84d4>
   22918:	b	22548 <crc32@@Base+0x8e00>
   2291c:	movw	r3, #65044	; 0xfe14
   22920:	movt	r3, #4
   22924:	movw	r0, #43852	; 0xab4c
   22928:	mov	r2, #23
   2292c:	ldr	r3, [r3]
   22930:	mov	r1, #1
   22934:	movt	r0, #3
   22938:	mvn	r4, #21
   2293c:	bl	12578 <fwrite@plt>
   22940:	b	22584 <crc32@@Base+0x8e3c>
   22944:	movw	r2, #44076	; 0xac2c
   22948:	movw	r1, #44216	; 0xacb8
   2294c:	movt	r2, #3
   22950:	movt	r1, #3
   22954:	mov	r0, r7
   22958:	bl	21c1c <crc32@@Base+0x84d4>
   2295c:	ldrh	r3, [r7, #184]	; 0xb8
   22960:	cmp	r3, #1
   22964:	beq	22a18 <crc32@@Base+0x92d0>
   22968:	movw	r2, #44128	; 0xac60
   2296c:	movw	r1, #44256	; 0xace0
   22970:	movt	r2, #3
   22974:	movt	r1, #3
   22978:	mov	r0, r7
   2297c:	bl	21c1c <crc32@@Base+0x84d4>
   22980:	b	22548 <crc32@@Base+0x8e00>
   22984:	movw	r4, #65044	; 0xfe14
   22988:	movt	r4, #4
   2298c:	movw	r0, #43876	; 0xab64
   22990:	mov	r2, #21
   22994:	ldr	r3, [r4]
   22998:	mov	r1, #1
   2299c:	movt	r0, #3
   229a0:	bl	12578 <fwrite@plt>
   229a4:	b	22810 <crc32@@Base+0x90c8>
   229a8:	movw	r3, #46016	; 0xb3c0
   229ac:	movw	r2, #44076	; 0xac2c
   229b0:	movt	r3, #3
   229b4:	b	22874 <crc32@@Base+0x912c>
   229b8:	movw	r3, #45376	; 0xb140
   229bc:	movw	r2, #44128	; 0xac60
   229c0:	movt	r3, #3
   229c4:	b	227f0 <crc32@@Base+0x90a8>
   229c8:	ldr	r1, [sp, #80]	; 0x50
   229cc:	movw	r2, #44128	; 0xac60
   229d0:	ldr	r0, [sp, #64]	; 0x40
   229d4:	movt	r2, #3
   229d8:	ldr	lr, [sp, #76]	; 0x4c
   229dc:	ldr	ip, [sp, #68]	; 0x44
   229e0:	ldr	r3, [sp, #84]	; 0x54
   229e4:	str	r1, [sp, #12]
   229e8:	movw	r1, #45224	; 0xb0a8
   229ec:	add	r3, r3, #2000	; 0x7d0
   229f0:	str	r0, [sp, #4]
   229f4:	str	r3, [sp, #16]
   229f8:	movt	r1, #3
   229fc:	str	lr, [sp, #8]
   22a00:	mov	r0, r7
   22a04:	str	ip, [sp]
   22a08:	ldr	r3, [sp, #72]	; 0x48
   22a0c:	bl	21c1c <crc32@@Base+0x84d4>
   22a10:	b	22548 <crc32@@Base+0x8e00>
   22a14:	bl	12494 <__stack_chk_fail@plt>
   22a18:	mov	r0, r7
   22a1c:	movw	r2, #44076	; 0xac2c
   22a20:	movw	r1, #44256	; 0xace0
   22a24:	movt	r2, #3
   22a28:	movt	r1, #3
   22a2c:	bl	21c1c <crc32@@Base+0x84d4>
   22a30:	ldrh	r3, [r7, #182]	; 0xb6
   22a34:	mov	r0, r7
   22a38:	movw	r2, #44076	; 0xac2c
   22a3c:	movw	r1, #44296	; 0xad08
   22a40:	movt	r2, #3
   22a44:	movt	r1, #3
   22a48:	bl	21c1c <crc32@@Base+0x84d4>
   22a4c:	ldr	r3, [sp, #324]	; 0x144
   22a50:	movw	r2, #44076	; 0xac2c
   22a54:	movw	r1, #44336	; 0xad30
   22a58:	movt	r2, #3
   22a5c:	movt	r1, #3
   22a60:	mov	r0, r7
   22a64:	bl	21c1c <crc32@@Base+0x84d4>
   22a68:	ldr	r2, [sp, #32]
   22a6c:	ldr	r3, [sp, #316]	; 0x13c
   22a70:	cmp	r3, r2, asr #4
   22a74:	beq	22a94 <crc32@@Base+0x934c>
   22a78:	movw	r2, #44128	; 0xac60
   22a7c:	movw	r1, #45396	; 0xb154
   22a80:	movt	r2, #3
   22a84:	movt	r1, #3
   22a88:	mov	r0, r7
   22a8c:	bl	21c1c <crc32@@Base+0x84d4>
   22a90:	b	22548 <crc32@@Base+0x8e00>
   22a94:	mov	r0, r7
   22a98:	movw	r2, #44076	; 0xac2c
   22a9c:	movw	r1, #45396	; 0xb154
   22aa0:	movt	r2, #3
   22aa4:	movt	r1, #3
   22aa8:	bl	21c1c <crc32@@Base+0x84d4>
   22aac:	ldrh	r2, [r7, #184]	; 0xb8
   22ab0:	ldrh	r0, [r7, #182]	; 0xb6
   22ab4:	ldrh	r3, [r7, #180]	; 0xb4
   22ab8:	ldrh	r1, [r7, #178]	; 0xb2
   22abc:	mla	r3, r0, r2, r3
   22ac0:	cmp	r3, r1
   22ac4:	beq	22ae8 <crc32@@Base+0x93a0>
   22ac8:	mov	r3, r1
   22acc:	movw	r2, #44128	; 0xac60
   22ad0:	movw	r1, #45436	; 0xb17c
   22ad4:	movt	r2, #3
   22ad8:	movt	r1, #3
   22adc:	mov	r0, r7
   22ae0:	bl	21c1c <crc32@@Base+0x84d4>
   22ae4:	b	22548 <crc32@@Base+0x8e00>
   22ae8:	movw	r2, #44076	; 0xac2c
   22aec:	movw	r1, #45436	; 0xb17c
   22af0:	movt	r2, #3
   22af4:	movt	r1, #3
   22af8:	mov	r0, r7
   22afc:	bl	21c1c <crc32@@Base+0x84d4>
   22b00:	ldrh	r3, [r7, #176]	; 0xb0
   22b04:	cmp	r3, #1
   22b08:	beq	22b28 <crc32@@Base+0x93e0>
   22b0c:	movw	r2, #44128	; 0xac60
   22b10:	movw	r1, #45476	; 0xb1a4
   22b14:	movt	r2, #3
   22b18:	movt	r1, #3
   22b1c:	mov	r0, r7
   22b20:	bl	21c1c <crc32@@Base+0x84d4>
   22b24:	b	22548 <crc32@@Base+0x8e00>
   22b28:	mov	r0, r7
   22b2c:	movw	r2, #44076	; 0xac2c
   22b30:	movw	r1, #45476	; 0xb1a4
   22b34:	movt	r2, #3
   22b38:	movt	r1, #3
   22b3c:	bl	21c1c <crc32@@Base+0x84d4>
   22b40:	ldrh	r2, [r7, #184]	; 0xb8
   22b44:	ldrh	ip, [r7, #182]	; 0xb6
   22b48:	ldrh	r0, [r7, #180]	; 0xb4
   22b4c:	ldrh	r3, [r7, #176]	; 0xb0
   22b50:	ldr	r1, [sp, #320]	; 0x140
   22b54:	mla	r2, ip, r2, r0
   22b58:	add	r3, r2, r3, lsl #1
   22b5c:	cmp	r3, r1
   22b60:	beq	22b84 <crc32@@Base+0x943c>
   22b64:	mov	r3, r1
   22b68:	movw	r2, #44128	; 0xac60
   22b6c:	movw	r1, #45516	; 0xb1cc
   22b70:	movt	r2, #3
   22b74:	movt	r1, #3
   22b78:	mov	r0, r7
   22b7c:	bl	21c1c <crc32@@Base+0x84d4>
   22b80:	b	22548 <crc32@@Base+0x8e00>
   22b84:	mov	r0, r7
   22b88:	movw	r2, #44076	; 0xac2c
   22b8c:	movw	r1, #45516	; 0xb1cc
   22b90:	movt	r2, #3
   22b94:	movt	r1, #3
   22b98:	bl	21c1c <crc32@@Base+0x84d4>
   22b9c:	movw	r1, #45556	; 0xb1f4
   22ba0:	mov	r0, r7
   22ba4:	movt	r1, #3
   22ba8:	bl	21c1c <crc32@@Base+0x84d4>
   22bac:	ldrh	r3, [r7, #182]	; 0xb6
   22bb0:	cmp	r3, #0
   22bb4:	bne	22c00 <crc32@@Base+0x94b8>
   22bb8:	b	22c1c <crc32@@Base+0x94d4>
   22bbc:	ldr	r3, [sp, #196]	; 0xc4
   22bc0:	mov	r2, #16
   22bc4:	mov	r1, #1
   22bc8:	cmp	r3, #0
   22bcc:	streq	r0, [sp, #196]	; 0xc4
   22bd0:	ldrne	r3, [sp, #200]	; 0xc8
   22bd4:	strne	r0, [r3, #8]
   22bd8:	mov	r3, fp
   22bdc:	str	r0, [sp, #200]	; 0xc8
   22be0:	add	r0, r0, #20
   22be4:	bl	12464 <fread@plt>
   22be8:	cmp	r0, #16
   22bec:	bne	2329c <crc32@@Base+0x9b54>
   22bf0:	ldrh	r3, [r7, #182]	; 0xb6
   22bf4:	add	r4, r4, #1
   22bf8:	cmp	r4, r3
   22bfc:	bcs	22c1c <crc32@@Base+0x94d4>
   22c00:	mov	r1, #36	; 0x24
   22c04:	mov	r0, #1
   22c08:	bl	12518 <calloc@plt>
   22c0c:	cmp	r0, #0
   22c10:	bne	22bbc <crc32@@Base+0x9474>
   22c14:	mvn	r4, #11
   22c18:	b	2254c <crc32@@Base+0x8e04>
   22c1c:	mov	r3, fp
   22c20:	mov	r2, #32
   22c24:	mov	r1, #1
   22c28:	add	r0, sp, #252	; 0xfc
   22c2c:	bl	12464 <fread@plt>
   22c30:	cmp	r0, #32
   22c34:	mov	r4, r0
   22c38:	bne	232f0 <crc32@@Base+0x9ba8>
   22c3c:	mov	r0, r7
   22c40:	bl	2230c <crc32@@Base+0x8bc4>
   22c44:	mov	r1, #0
   22c48:	mov	r0, r7
   22c4c:	bl	21bec <crc32@@Base+0x84a4>
   22c50:	mov	r2, r4
   22c54:	add	r1, sp, #252	; 0xfc
   22c58:	ldr	r0, [sp, #216]	; 0xd8
   22c5c:	bl	12650 <EVP_DigestUpdate@plt>
   22c60:	mov	r3, #16
   22c64:	add	r2, sp, #168	; 0xa8
   22c68:	add	r1, sp, #268	; 0x10c
   22c6c:	ldr	r0, [sp, #212]	; 0xd4
   22c70:	bl	22228 <crc32@@Base+0x8ae0>
   22c74:	mov	r1, #0
   22c78:	mov	r0, r7
   22c7c:	bl	21bec <crc32@@Base+0x84a4>
   22c80:	ldr	r6, [sp, #196]	; 0xc4
   22c84:	cmp	r6, #0
   22c88:	beq	22ed4 <crc32@@Base+0x978c>
   22c8c:	movw	r3, #46016	; 0xb3c0
   22c90:	movw	r2, #43780	; 0xab04
   22c94:	movt	r3, #3
   22c98:	movt	r2, #3
   22c9c:	str	r3, [sp, #40]	; 0x28
   22ca0:	movw	r3, #44448	; 0xada0
   22ca4:	str	r2, [sp, #52]	; 0x34
   22ca8:	movt	r3, #3
   22cac:	movw	r2, #65044	; 0xfe14
   22cb0:	str	r3, [sp, #48]	; 0x30
   22cb4:	movt	r2, #4
   22cb8:	str	fp, [sp, #28]
   22cbc:	str	r2, [sp, #44]	; 0x2c
   22cc0:	ldr	r3, [r6, #32]
   22cc4:	mov	r0, r7
   22cc8:	ldr	ip, [r6, #28]
   22ccc:	tst	r3, #1
   22cd0:	ldr	r1, [sp, #48]	; 0x30
   22cd4:	add	ip, ip, #1
   22cd8:	ldrbne	r3, [r6, #4]
   22cdc:	ldrne	r2, [sp, #52]	; 0x34
   22ce0:	lsl	ip, ip, #4
   22ce4:	orrne	r3, r3, #1
   22ce8:	str	ip, [r6]
   22cec:	strbne	r3, [r6, #4]
   22cf0:	strne	r2, [sp, #40]	; 0x28
   22cf4:	ldr	r2, [r6, #20]
   22cf8:	ldr	r3, [sp, #40]	; 0x28
   22cfc:	str	ip, [sp]
   22d00:	bl	21c1c <crc32@@Base+0x84d4>
   22d04:	ldr	r3, [r6, #32]
   22d08:	bics	r2, r3, #1
   22d0c:	beq	22d2c <crc32@@Base+0x95e4>
   22d10:	ldr	r0, [sp, #44]	; 0x2c
   22d14:	movw	r2, #44484	; 0xadc4
   22d18:	mov	r1, #1
   22d1c:	movt	r2, #3
   22d20:	ldr	r0, [r0]
   22d24:	bl	122b4 <__fprintf_chk@plt>
   22d28:	ldr	r3, [r6, #32]
   22d2c:	tst	r3, #1
   22d30:	beq	22d60 <crc32@@Base+0x9618>
   22d34:	ldr	r2, [sp, #324]	; 0x144
   22d38:	ldr	r3, [r6, #20]
   22d3c:	cmp	r2, r3
   22d40:	beq	22d60 <crc32@@Base+0x9618>
   22d44:	ldr	r3, [sp, #44]	; 0x2c
   22d48:	movw	r0, #44524	; 0xadec
   22d4c:	mov	r2, #59	; 0x3b
   22d50:	movt	r0, #3
   22d54:	mov	r1, #1
   22d58:	ldr	r3, [r3]
   22d5c:	bl	12578 <fwrite@plt>
   22d60:	mov	r1, #0
   22d64:	mov	r0, r7
   22d68:	bl	21bec <crc32@@Base+0x84a4>
   22d6c:	mov	sl, #0
   22d70:	ldr	r3, [r6]
   22d74:	cmp	r3, sl
   22d78:	bls	22ec4 <crc32@@Base+0x977c>
   22d7c:	mov	r1, #48	; 0x30
   22d80:	mov	r0, #1
   22d84:	bl	12518 <calloc@plt>
   22d88:	subs	r5, r0, #0
   22d8c:	beq	23264 <crc32@@Base+0x9b1c>
   22d90:	ldr	r3, [r6, #12]
   22d94:	add	r8, r5, #32
   22d98:	mov	r2, #16
   22d9c:	mov	r1, #1
   22da0:	cmp	r3, #0
   22da4:	mov	r0, r8
   22da8:	streq	r5, [r6, #12]
   22dac:	ldrne	r3, [r6, #16]
   22db0:	strne	r5, [r3, #4]
   22db4:	str	r5, [r6, #16]
   22db8:	ldr	r3, [sp, #28]
   22dbc:	bl	12464 <fread@plt>
   22dc0:	cmp	r0, #16
   22dc4:	mov	r9, r0
   22dc8:	bne	23270 <crc32@@Base+0x9b28>
   22dcc:	ldr	fp, [sp, #216]	; 0xd8
   22dd0:	add	r4, r5, #16
   22dd4:	mov	r3, r0
   22dd8:	mov	r1, r8
   22ddc:	mov	r2, r4
   22de0:	ldr	r0, [sp, #212]	; 0xd4
   22de4:	bl	22228 <crc32@@Base+0x8ae0>
   22de8:	mov	r2, r9
   22dec:	mov	r1, r8
   22df0:	mov	r0, fp
   22df4:	bl	12650 <EVP_DigestUpdate@plt>
   22df8:	add	sl, sl, #16
   22dfc:	ldrb	r0, [r5, #16]
   22e00:	mov	ip, #90	; 0x5a
   22e04:	add	r1, r5, #31
   22e08:	mov	r2, #90	; 0x5a
   22e0c:	mov	r3, #0
   22e10:	strb	ip, [r5, #16]
   22e14:	b	22e1c <crc32@@Base+0x96d4>
   22e18:	ldrb	r2, [r4, #1]!
   22e1c:	add	r3, r2, r3
   22e20:	cmp	r4, r1
   22e24:	uxtb	r3, r3
   22e28:	bne	22e18 <crc32@@Base+0x96d0>
   22e2c:	cmp	r0, r3
   22e30:	strb	r0, [r5, #16]
   22e34:	ldrb	r3, [r5, #17]
   22e38:	beq	231a8 <crc32@@Base+0x9a60>
   22e3c:	cmp	r3, #6
   22e40:	ldrls	pc, [pc, r3, lsl #2]
   22e44:	b	2317c <crc32@@Base+0x9a34>
   22e48:	andeq	r3, r2, r4, lsl #3
   22e4c:	andeq	r3, r2, r0, lsr r1
   22e50:	andeq	r3, r2, r0, rrx
   22e54:	andeq	r3, r2, r0, lsr r0
   22e58:	andeq	r2, r2, r8, ror #31
   22e5c:	andeq	r2, r2, r0, lsr #31
   22e60:	andeq	r2, r2, r4, ror #28
   22e64:	movw	r4, #43792	; 0xab10
   22e68:	movt	r4, #3
   22e6c:	mov	r1, #0
   22e70:	ldr	r0, [r5, #28]
   22e74:	mov	r3, r1
   22e78:	ldr	r2, [pc, #1240]	; 23358 <crc32@@Base+0x9c10>
   22e7c:	b	22e84 <crc32@@Base+0x973c>
   22e80:	ldrb	r1, [r2, #-12]
   22e84:	cmp	r0, r1
   22e88:	beq	23238 <crc32@@Base+0x9af0>
   22e8c:	add	r3, r3, #1
   22e90:	add	r2, r2, #12
   22e94:	cmp	r3, #9
   22e98:	bne	22e80 <crc32@@Base+0x9738>
   22e9c:	ldr	r0, [sp, #44]	; 0x2c
   22ea0:	mov	r3, r4
   22ea4:	movw	r2, #44932	; 0xaf84
   22ea8:	mov	r1, #1
   22eac:	movt	r2, #3
   22eb0:	ldr	r0, [r0]
   22eb4:	bl	122b4 <__fprintf_chk@plt>
   22eb8:	ldr	r3, [r6]
   22ebc:	cmp	r3, sl
   22ec0:	bhi	22d7c <crc32@@Base+0x9634>
   22ec4:	ldr	r6, [r6, #8]
   22ec8:	cmp	r6, #0
   22ecc:	bne	22cc0 <crc32@@Base+0x9578>
   22ed0:	ldr	fp, [sp, #28]
   22ed4:	mov	r0, r7
   22ed8:	movw	r1, #45608	; 0xb228
   22edc:	movt	r1, #3
   22ee0:	bl	21c1c <crc32@@Base+0x84d4>
   22ee4:	mov	r3, fp
   22ee8:	mov	r2, #32
   22eec:	mov	r1, #1
   22ef0:	add	r0, sp, #388	; 0x184
   22ef4:	bl	12464 <fread@plt>
   22ef8:	cmp	r0, #32
   22efc:	mov	r4, r0
   22f00:	bne	232f0 <crc32@@Base+0x9ba8>
   22f04:	mov	r0, fp
   22f08:	bl	12524 <ftell@plt>
   22f0c:	ldr	r3, [sp, #32]
   22f10:	cmp	r3, r0
   22f14:	bne	23318 <crc32@@Base+0x9bd0>
   22f18:	mov	r2, #0
   22f1c:	add	r1, sp, #220	; 0xdc
   22f20:	ldr	r0, [sp, #216]	; 0xd8
   22f24:	bl	1253c <EVP_DigestFinal@plt>
   22f28:	ldr	r5, [sp, #216]	; 0xd8
   22f2c:	mov	r0, r5
   22f30:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   22f34:	mov	r0, r5
   22f38:	bl	124b8 <CRYPTO_free@plt>
   22f3c:	mov	r1, #0
   22f40:	mov	r0, r7
   22f44:	bl	21bec <crc32@@Base+0x84a4>
   22f48:	add	r2, sp, #388	; 0x184
   22f4c:	mov	r3, r4
   22f50:	ldr	r0, [sp, #212]	; 0xd4
   22f54:	mov	r1, r2
   22f58:	bl	22228 <crc32@@Base+0x8ae0>
   22f5c:	add	r1, sp, #220	; 0xdc
   22f60:	add	r0, sp, #388	; 0x184
   22f64:	mov	r2, #20
   22f68:	bl	126c8 <memcmp@plt>
   22f6c:	subs	r4, r0, #0
   22f70:	bne	23340 <crc32@@Base+0x9bf8>
   22f74:	mov	r0, r7
   22f78:	movw	r1, #45036	; 0xafec
   22f7c:	movt	r1, #3
   22f80:	bl	21c1c <crc32@@Base+0x84d4>
   22f84:	movw	r1, #44020	; 0xabf4
   22f88:	mov	r0, r7
   22f8c:	movt	r1, #3
   22f90:	bl	21c1c <crc32@@Base+0x84d4>
   22f94:	movw	r2, #43844	; 0xab44
   22f98:	movt	r2, #3
   22f9c:	b	22564 <crc32@@Base+0x8e1c>
   22fa0:	movw	r2, #43792	; 0xab10
   22fa4:	movt	r2, #3
   22fa8:	ldrh	r0, [r5, #18]
   22fac:	movw	r1, #43828	; 0xab34
   22fb0:	ldr	r3, [r5, #20]
   22fb4:	movt	r1, #3
   22fb8:	str	r2, [sp, #4]
   22fbc:	tst	r0, #1
   22fc0:	ldr	r0, [r5, #28]
   22fc4:	movw	r2, #46016	; 0xb3c0
   22fc8:	movt	r2, #3
   22fcc:	movne	r2, r1
   22fd0:	movw	r1, #44876	; 0xaf4c
   22fd4:	movt	r1, #3
   22fd8:	str	r0, [sp]
   22fdc:	mov	r0, r7
   22fe0:	bl	21c1c <crc32@@Base+0x84d4>
   22fe4:	b	22d70 <crc32@@Base+0x9628>
   22fe8:	movw	r2, #43792	; 0xab10
   22fec:	movt	r2, #3
   22ff0:	ldrh	r0, [r5, #18]
   22ff4:	movw	r1, #43828	; 0xab34
   22ff8:	ldr	r3, [r5, #20]
   22ffc:	movt	r1, #3
   23000:	str	r2, [sp, #4]
   23004:	tst	r0, #1
   23008:	ldr	r0, [r5, #28]
   2300c:	movw	r2, #46016	; 0xb3c0
   23010:	movt	r2, #3
   23014:	movne	r2, r1
   23018:	movw	r1, #44836	; 0xaf24
   2301c:	movt	r1, #3
   23020:	str	r0, [sp]
   23024:	mov	r0, r7
   23028:	bl	21c1c <crc32@@Base+0x84d4>
   2302c:	b	22d70 <crc32@@Base+0x9628>
   23030:	movw	r0, #43792	; 0xab10
   23034:	movt	r0, #3
   23038:	ldr	r3, [r5, #24]
   2303c:	movw	r1, #44780	; 0xaeec
   23040:	ldr	r2, [r5, #20]
   23044:	movt	r1, #3
   23048:	str	r0, [sp, #4]
   2304c:	mov	r0, r7
   23050:	ldr	ip, [r5, #28]
   23054:	str	ip, [sp]
   23058:	bl	21c1c <crc32@@Base+0x84d4>
   2305c:	b	22d70 <crc32@@Base+0x9628>
   23060:	movw	r0, #43792	; 0xab10
   23064:	movt	r0, #3
   23068:	ldr	r3, [r5, #24]
   2306c:	movw	r1, #44648	; 0xae68
   23070:	ldr	r2, [r5, #20]
   23074:	movt	r1, #3
   23078:	str	r0, [sp]
   2307c:	mov	r0, r7
   23080:	bl	21c1c <crc32@@Base+0x84d4>
   23084:	ldr	r3, [r5, #24]
   23088:	add	r4, r3, #15
   2308c:	bic	r4, r4, #15
   23090:	str	r3, [r5, #12]
   23094:	mov	r0, r4
   23098:	bl	125a8 <malloc@plt>
   2309c:	cmp	r0, #0
   230a0:	str	r0, [r5, #8]
   230a4:	beq	2317c <crc32@@Base+0x9a34>
   230a8:	ldr	r3, [sp, #28]
   230ac:	mov	r2, r4
   230b0:	mov	r1, #1
   230b4:	bl	12464 <fread@plt>
   230b8:	cmp	r4, r0
   230bc:	bne	232c4 <crc32@@Base+0x9b7c>
   230c0:	mov	r2, r4
   230c4:	ldr	r1, [r5, #8]
   230c8:	ldr	r0, [sp, #216]	; 0xd8
   230cc:	add	sl, sl, r4
   230d0:	bl	12650 <EVP_DigestUpdate@plt>
   230d4:	ldr	r2, [r5, #8]
   230d8:	mov	r3, r4
   230dc:	ldr	r0, [sp, #212]	; 0xd4
   230e0:	mov	r1, r2
   230e4:	bl	22228 <crc32@@Base+0x8ae0>
   230e8:	mov	r2, r4
   230ec:	ldr	r1, [r5, #8]
   230f0:	mov	r0, #0
   230f4:	ldr	r4, [r5, #28]
   230f8:	bl	252fc <crc32@@Base+0xbbb4>
   230fc:	cmp	r4, r0
   23100:	beq	22d70 <crc32@@Base+0x9628>
   23104:	movw	r3, #65044	; 0xfe14
   23108:	movt	r3, #4
   2310c:	movw	r0, #44732	; 0xaebc
   23110:	mov	r2, #44	; 0x2c
   23114:	ldr	r3, [r3]
   23118:	mov	r1, #1
   2311c:	movt	r0, #3
   23120:	ldr	fp, [sp, #28]
   23124:	mvn	r4, #21
   23128:	bl	12578 <fwrite@plt>
   2312c:	b	2254c <crc32@@Base+0x8e04>
   23130:	movw	r3, #43792	; 0xab10
   23134:	movt	r3, #3
   23138:	mvn	r4, #21
   2313c:	ldrh	r0, [r5, #18]
   23140:	movw	r1, #43820	; 0xab2c
   23144:	movt	r1, #3
   23148:	movw	r2, #46016	; 0xb3c0
   2314c:	tst	r0, #1
   23150:	movt	r2, #3
   23154:	mov	r0, r7
   23158:	movne	r2, r1
   2315c:	movw	r1, #44632	; 0xae58
   23160:	movt	r1, #3
   23164:	bl	21c1c <crc32@@Base+0x84d4>
   23168:	mov	r1, #0
   2316c:	mov	r0, r7
   23170:	bl	21bec <crc32@@Base+0x84a4>
   23174:	cmp	r4, #0
   23178:	beq	22d70 <crc32@@Base+0x9628>
   2317c:	ldr	fp, [sp, #28]
   23180:	b	22548 <crc32@@Base+0x8e00>
   23184:	movw	r2, #43792	; 0xab10
   23188:	movw	r1, #44620	; 0xae4c
   2318c:	movt	r2, #3
   23190:	movt	r1, #3
   23194:	mov	r0, r7
   23198:	ldr	fp, [sp, #28]
   2319c:	mvn	r4, #21
   231a0:	bl	21c1c <crc32@@Base+0x84d4>
   231a4:	b	2254c <crc32@@Base+0x8e04>
   231a8:	cmp	r3, #6
   231ac:	ldrls	pc, [pc, r3, lsl #2]
   231b0:	b	22d70 <crc32@@Base+0x9628>
   231b4:	andeq	r3, r2, ip, lsl r2
   231b8:	andeq	r3, r2, ip, lsl #4
   231bc:	andeq	r3, r2, r0, lsl #4
   231c0:	strdeq	r3, [r2], -r4
   231c4:	andeq	r3, r2, r8, ror #3
   231c8:	ldrdeq	r3, [r2], -ip
   231cc:	ldrdeq	r3, [r2], -r0
   231d0:	movw	r4, #43808	; 0xab20
   231d4:	movt	r4, #3
   231d8:	b	22e6c <crc32@@Base+0x9724>
   231dc:	movw	r2, #43808	; 0xab20
   231e0:	movt	r2, #3
   231e4:	b	22fa8 <crc32@@Base+0x9860>
   231e8:	movw	r2, #43808	; 0xab20
   231ec:	movt	r2, #3
   231f0:	b	22ff0 <crc32@@Base+0x98a8>
   231f4:	movw	r0, #43808	; 0xab20
   231f8:	movt	r0, #3
   231fc:	b	23038 <crc32@@Base+0x98f0>
   23200:	movw	r0, #43808	; 0xab20
   23204:	movt	r0, #3
   23208:	b	23068 <crc32@@Base+0x9920>
   2320c:	movw	r3, #43808	; 0xab20
   23210:	mov	r4, #0
   23214:	movt	r3, #3
   23218:	b	2313c <crc32@@Base+0x99f4>
   2321c:	movw	r2, #43808	; 0xab20
   23220:	movw	r1, #44620	; 0xae4c
   23224:	movt	r2, #3
   23228:	movt	r1, #3
   2322c:	mov	r0, r7
   23230:	bl	21c1c <crc32@@Base+0x84d4>
   23234:	b	22d70 <crc32@@Base+0x9628>
   23238:	mov	r2, #12
   2323c:	movw	ip, #43188	; 0xa8b4
   23240:	mul	r2, r2, r3
   23244:	movt	ip, #3
   23248:	movw	r1, #44916	; 0xaf74
   2324c:	mov	r3, r4
   23250:	movt	r1, #3
   23254:	mov	r0, r7
   23258:	ldr	r2, [ip, r2]
   2325c:	bl	21c1c <crc32@@Base+0x84d4>
   23260:	b	22e9c <crc32@@Base+0x9754>
   23264:	ldr	fp, [sp, #28]
   23268:	mvn	r4, #11
   2326c:	b	2254c <crc32@@Base+0x8e04>
   23270:	movw	r3, #65044	; 0xfe14
   23274:	movt	r3, #4
   23278:	movw	r0, #44584	; 0xae28
   2327c:	mov	r2, #34	; 0x22
   23280:	ldr	r3, [r3]
   23284:	mov	r1, #1
   23288:	movt	r0, #3
   2328c:	ldr	fp, [sp, #28]
   23290:	mvn	r4, #21
   23294:	bl	12578 <fwrite@plt>
   23298:	b	2254c <crc32@@Base+0x8e04>
   2329c:	movw	r3, #65044	; 0xfe14
   232a0:	movt	r3, #4
   232a4:	movw	r0, #44376	; 0xad58
   232a8:	mov	r2, #34	; 0x22
   232ac:	ldr	r3, [r3]
   232b0:	mov	r1, #1
   232b4:	movt	r0, #3
   232b8:	mvn	r4, #21
   232bc:	bl	12578 <fwrite@plt>
   232c0:	b	2254c <crc32@@Base+0x8e04>
   232c4:	movw	r3, #65044	; 0xfe14
   232c8:	movt	r3, #4
   232cc:	movw	r0, #44688	; 0xae90
   232d0:	mov	r2, #40	; 0x28
   232d4:	ldr	r3, [r3]
   232d8:	mov	r1, #1
   232dc:	movt	r0, #3
   232e0:	ldr	fp, [sp, #28]
   232e4:	mvn	r4, #21
   232e8:	bl	12578 <fwrite@plt>
   232ec:	b	2254c <crc32@@Base+0x8e04>
   232f0:	movw	r3, #65044	; 0xfe14
   232f4:	movt	r3, #4
   232f8:	movw	r0, #44412	; 0xad7c
   232fc:	mov	r2, #34	; 0x22
   23300:	ldr	r3, [r3]
   23304:	mov	r1, #1
   23308:	movt	r0, #3
   2330c:	mvn	r4, #21
   23310:	bl	12578 <fwrite@plt>
   23314:	b	2254c <crc32@@Base+0x8e04>
   23318:	movw	r3, #65044	; 0xfe14
   2331c:	movt	r3, #4
   23320:	movw	r0, #44956	; 0xaf9c
   23324:	mov	r2, #35	; 0x23
   23328:	ldr	r3, [r3]
   2332c:	mov	r1, #1
   23330:	movt	r0, #3
   23334:	mvn	r4, #21
   23338:	bl	12578 <fwrite@plt>
   2333c:	b	2254c <crc32@@Base+0x8e04>
   23340:	movw	r1, #44992	; 0xafc0
   23344:	mov	r0, r7
   23348:	movt	r1, #3
   2334c:	mvn	r4, #21
   23350:	bl	21c1c <crc32@@Base+0x84d4>
   23354:	b	2254c <crc32@@Base+0x8e04>
   23358:	andeq	sl, r3, r8, asr #17
   2335c:	movw	r3, #43356	; 0xa95c
   23360:	movt	r3, #30
   23364:	ldr	r0, [r3]
   23368:	cmp	r0, #0
   2336c:	bxeq	lr
   23370:	mov	r1, #0
   23374:	b	223a0 <crc32@@Base+0x8c58>
   23378:	cmp	r0, #0
   2337c:	beq	2338c <crc32@@Base+0x9c44>
   23380:	ldrb	r3, [r0, #20]
   23384:	cmp	r3, #83	; 0x53
   23388:	beq	23394 <crc32@@Base+0x9c4c>
   2338c:	mvn	r0, #21
   23390:	bx	lr
   23394:	ldrb	r3, [r0, #21]
   23398:	cmp	r3, #84	; 0x54
   2339c:	bne	2338c <crc32@@Base+0x9c44>
   233a0:	ldrb	r3, [r0, #22]
   233a4:	cmp	r3, #77	; 0x4d
   233a8:	bne	2338c <crc32@@Base+0x9c44>
   233ac:	ldrb	r3, [r0, #23]
   233b0:	cmp	r3, #80	; 0x50
   233b4:	bne	2338c <crc32@@Base+0x9c44>
   233b8:	ldrb	r3, [r0, #52]	; 0x34
   233bc:	cmp	r3, #115	; 0x73
   233c0:	bne	2338c <crc32@@Base+0x9c44>
   233c4:	ldrb	r3, [r0, #53]	; 0x35
   233c8:	cmp	r3, #103	; 0x67
   233cc:	bne	2338c <crc32@@Base+0x9c44>
   233d0:	ldrb	r3, [r0, #54]	; 0x36
   233d4:	cmp	r3, #116	; 0x74
   233d8:	bne	2338c <crc32@@Base+0x9c44>
   233dc:	ldrb	r3, [r0, #55]	; 0x37
   233e0:	cmp	r3, #108	; 0x6c
   233e4:	bne	2338c <crc32@@Base+0x9c44>
   233e8:	ldr	r2, [r2, #76]	; 0x4c
   233ec:	movw	r3, #43356	; 0xa95c
   233f0:	movt	r3, #30
   233f4:	mov	r1, #1
   233f8:	mov	r0, r2
   233fc:	str	r2, [r3]
   23400:	b	223a0 <crc32@@Base+0x8c58>
   23404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23408:	movw	r3, #61168	; 0xeef0
   2340c:	sub	sp, sp, #340	; 0x154
   23410:	movt	r3, #4
   23414:	mov	r5, r0
   23418:	mov	r2, #232	; 0xe8
   2341c:	str	r3, [sp, #8]
   23420:	mov	r4, #1
   23424:	ldr	r3, [r3]
   23428:	add	r0, sp, #96	; 0x60
   2342c:	str	r1, [sp, #16]
   23430:	mov	r1, #0
   23434:	str	r4, [r5, #32]
   23438:	str	r3, [sp, #332]	; 0x14c
   2343c:	bl	122e4 <memset@plt>
   23440:	ldr	r3, [r5, #64]	; 0x40
   23444:	movw	r1, #49448	; 0xc128
   23448:	ldr	ip, [r5, #76]	; 0x4c
   2344c:	movt	r1, #3
   23450:	mov	r2, #0
   23454:	str	r2, [sp, #32]
   23458:	mov	r0, r3
   2345c:	str	r3, [sp, #108]	; 0x6c
   23460:	str	ip, [sp, #104]	; 0x68
   23464:	bl	1232c <fopen@plt>
   23468:	subs	r5, r0, #0
   2346c:	beq	2481c <crc32@@Base+0xb0d4>
   23470:	movw	r8, #65044	; 0xfe14
   23474:	movw	fp, #45704	; 0xb288
   23478:	movt	r8, #4
   2347c:	movt	fp, #3
   23480:	movw	r3, #45680	; 0xb270
   23484:	movt	r3, #3
   23488:	str	r3, [sp, #12]
   2348c:	mov	r3, r5
   23490:	mov	r2, #10
   23494:	add	r1, sp, #36	; 0x24
   23498:	add	r0, sp, #32
   2349c:	bl	12134 <__getdelim@plt>
   234a0:	cmp	r0, #0
   234a4:	ble	23718 <crc32@@Base+0x9fd0>
   234a8:	ldr	r3, [sp, #32]
   234ac:	mov	r2, #0
   234b0:	add	r3, r3, r0
   234b4:	strb	r2, [r3, #-1]
   234b8:	ldr	r7, [sp, #32]
   234bc:	str	r0, [sp, #56]	; 0x38
   234c0:	str	r4, [sp, #60]	; 0x3c
   234c4:	str	r7, [sp, #52]	; 0x34
   234c8:	ldrb	r3, [r7]
   234cc:	cmp	r3, #32
   234d0:	bne	234e0 <crc32@@Base+0x9d98>
   234d4:	ldrb	r3, [r7, #1]!
   234d8:	cmp	r3, #32
   234dc:	beq	234d4 <crc32@@Base+0x9d8c>
   234e0:	cmp	r3, #0
   234e4:	beq	243c4 <crc32@@Base+0xac7c>
   234e8:	add	r6, r7, #1
   234ec:	mov	r3, r6
   234f0:	b	234fc <crc32@@Base+0x9db4>
   234f4:	cmp	r2, #32
   234f8:	beq	236f4 <crc32@@Base+0x9fac>
   234fc:	ldrb	r2, [r3]
   23500:	mov	sl, r3
   23504:	add	r3, r3, #1
   23508:	cmp	r2, #0
   2350c:	bne	234f4 <crc32@@Base+0x9dac>
   23510:	ldrb	r3, [r7]
   23514:	cmp	r3, #0
   23518:	beq	23cc4 <crc32@@Base+0xa57c>
   2351c:	mov	r1, fp
   23520:	mov	r0, r7
   23524:	str	sl, [sp, #52]	; 0x34
   23528:	bl	1265c <strcmp@plt>
   2352c:	cmp	r0, #0
   23530:	beq	23704 <crc32@@Base+0x9fbc>
   23534:	ldrb	r9, [r7]
   23538:	cmp	r9, #68	; 0x44
   2353c:	bne	235f0 <crc32@@Base+0x9ea8>
   23540:	ldrb	r3, [r7, #1]
   23544:	cmp	r3, #67	; 0x43
   23548:	bne	235f0 <crc32@@Base+0x9ea8>
   2354c:	ldrb	r3, [r7, #2]
   23550:	cmp	r3, #68	; 0x44
   23554:	bne	235f0 <crc32@@Base+0x9ea8>
   23558:	ldrb	r0, [r7, #3]
   2355c:	cmp	r0, #0
   23560:	bne	235f0 <crc32@@Base+0x9ea8>
   23564:	ldrb	r3, [sp, #96]	; 0x60
   23568:	mov	r1, #20
   2356c:	bfi	r3, r0, #0, #1
   23570:	mov	r0, #1
   23574:	uxtb	r3, r3
   23578:	orr	r3, r3, #2
   2357c:	strb	r3, [sp, #96]	; 0x60
   23580:	bl	12518 <calloc@plt>
   23584:	subs	r6, r0, #0
   23588:	beq	23710 <crc32@@Base+0x9fc8>
   2358c:	mov	r2, #4
   23590:	add	r1, r6, #12
   23594:	add	r0, r6, #8
   23598:	bl	21da0 <crc32@@Base+0x8658>
   2359c:	cmp	r0, #0
   235a0:	bne	23ef0 <crc32@@Base+0xa7a8>
   235a4:	movw	r1, #31680	; 0x7bc0
   235a8:	ldr	r0, [sp, #52]	; 0x34
   235ac:	movt	r1, #3
   235b0:	bl	12278 <strtok@plt>
   235b4:	cmp	r0, #0
   235b8:	beq	23ed8 <crc32@@Base+0xa790>
   235bc:	add	r1, sp, #48	; 0x30
   235c0:	bl	21a4c <crc32@@Base+0x8304>
   235c4:	cmp	r0, #0
   235c8:	bne	2434c <crc32@@Base+0xac04>
   235cc:	ldr	r2, [sp, #148]	; 0x94
   235d0:	ldr	r3, [sp, #48]	; 0x30
   235d4:	cmp	r2, #0
   235d8:	streq	r6, [sp, #148]	; 0x94
   235dc:	str	r3, [r6, #4]
   235e0:	ldrne	r3, [sp, #152]	; 0x98
   235e4:	strne	r6, [r3]
   235e8:	str	r6, [sp, #152]	; 0x98
   235ec:	b	23710 <crc32@@Base+0x9fc8>
   235f0:	movw	r1, #45796	; 0xb2e4
   235f4:	mov	r0, r7
   235f8:	movt	r1, #3
   235fc:	bl	1265c <strcmp@plt>
   23600:	ldrb	r3, [sp, #96]	; 0x60
   23604:	subs	ip, r0, #0
   23608:	beq	23cdc <crc32@@Base+0xa594>
   2360c:	tst	r3, #3
   23610:	beq	24620 <crc32@@Base+0xaed8>
   23614:	tst	r3, #1
   23618:	beq	23c5c <crc32@@Base+0xa514>
   2361c:	cmp	r9, #78	; 0x4e
   23620:	beq	23d48 <crc32@@Base+0xa600>
   23624:	cmp	r9, #84	; 0x54
   23628:	bne	23db0 <crc32@@Base+0xa668>
   2362c:	ldrb	r3, [r7, #1]
   23630:	cmp	r3, #65	; 0x41
   23634:	bne	23db0 <crc32@@Base+0xa668>
   23638:	ldrb	r3, [r7, #2]
   2363c:	cmp	r3, #71	; 0x47
   23640:	bne	23db0 <crc32@@Base+0xa668>
   23644:	ldrb	r3, [r7, #3]
   23648:	cmp	r3, #0
   2364c:	bne	23db0 <crc32@@Base+0xa668>
   23650:	mov	r1, #48	; 0x30
   23654:	mov	r0, #1
   23658:	ldr	r7, [sp, #144]	; 0x90
   2365c:	bl	12518 <calloc@plt>
   23660:	subs	r6, r0, #0
   23664:	beq	23710 <crc32@@Base+0x9fc8>
   23668:	mov	r0, sl
   2366c:	movw	r1, #31680	; 0x7bc0
   23670:	movt	r1, #3
   23674:	bl	12278 <strtok@plt>
   23678:	cmp	r0, #0
   2367c:	beq	23698 <crc32@@Base+0x9f50>
   23680:	movw	r1, #43820	; 0xab2c
   23684:	movt	r1, #3
   23688:	bl	1265c <strcmp@plt>
   2368c:	cmp	r0, #0
   23690:	moveq	r3, #1
   23694:	strheq	r3, [r6, #18]
   23698:	movw	r3, #346	; 0x15a
   2369c:	strh	r3, [r6, #16]
   236a0:	ldr	r1, [r7, #12]
   236a4:	mov	r2, #16
   236a8:	ldrb	r3, [sp, #96]	; 0x60
   236ac:	cmp	r1, #0
   236b0:	str	r2, [r6]
   236b4:	and	r3, r3, #1
   236b8:	beq	24578 <crc32@@Base+0xae30>
   236bc:	ldr	r2, [r7, #16]
   236c0:	cmp	r3, #0
   236c4:	str	r6, [r2, #4]
   236c8:	str	r6, [r7, #16]
   236cc:	beq	23710 <crc32@@Base+0x9fc8>
   236d0:	ldr	r6, [sp, #144]	; 0x90
   236d4:	ldr	r3, [r6, #16]
   236d8:	ldr	r3, [r3]
   236dc:	ldr	r2, [r6]
   236e0:	add	r3, r3, r2
   236e4:	str	r3, [r6]
   236e8:	lsr	r3, r3, #4
   236ec:	str	r3, [r6, #28]
   236f0:	b	23710 <crc32@@Base+0x9fc8>
   236f4:	mov	r1, #0
   236f8:	strb	r1, [sl]
   236fc:	mov	sl, r3
   23700:	b	23510 <crc32@@Base+0x9dc8>
   23704:	ldrb	r3, [sp, #96]	; 0x60
   23708:	orr	r3, r3, #4
   2370c:	strb	r3, [sp, #96]	; 0x60
   23710:	add	r4, r4, #1
   23714:	b	2348c <crc32@@Base+0x9d44>
   23718:	ldr	r0, [sp, #32]
   2371c:	mov	r6, #0
   23720:	bl	12128 <free@plt>
   23724:	mov	r0, r5
   23728:	bl	125fc <fclose@plt>
   2372c:	add	lr, sp, #304	; 0x130
   23730:	movw	r3, #21587	; 0x5453
   23734:	movt	r3, #20557	; 0x504d
   23738:	str	r3, [sp, #252]	; 0xfc
   2373c:	movw	r3, #26483	; 0x6773
   23740:	movt	r3, #27764	; 0x6c74
   23744:	str	r3, [sp, #284]	; 0x11c
   23748:	movw	r3, #39177	; 0x9909
   2374c:	movt	r3, #65535	; 0xffff
   23750:	strh	r3, [lr]
   23754:	add	lr, sp, #308	; 0x134
   23758:	add	ip, sp, #320	; 0x140
   2375c:	mov	r1, r6
   23760:	strh	r3, [lr]
   23764:	add	lr, sp, #312	; 0x138
   23768:	strh	r6, [ip]
   2376c:	add	ip, sp, #296	; 0x128
   23770:	strh	r3, [lr]
   23774:	add	lr, sp, #316	; 0x13c
   23778:	strh	r3, [ip]
   2377c:	add	ip, sp, #300	; 0x12c
   23780:	strh	r3, [lr]
   23784:	add	lr, sp, #256	; 0x100
   23788:	strh	r3, [ip]
   2378c:	movw	ip, #257	; 0x101
   23790:	strh	ip, [lr]
   23794:	add	ip, sp, #276	; 0x114
   23798:	mov	r3, #6
   2379c:	mov	r2, #44	; 0x2c
   237a0:	strh	r3, [ip]
   237a4:	add	r3, sp, #280	; 0x118
   237a8:	mov	r5, #1
   237ac:	add	r0, sp, #52	; 0x34
   237b0:	strh	r5, [r3]
   237b4:	bl	122e4 <memset@plt>
   237b8:	add	r0, sp, #52	; 0x34
   237bc:	mov	r3, #100	; 0x64
   237c0:	str	r5, [sp, #80]	; 0x50
   237c4:	str	r3, [sp, #72]	; 0x48
   237c8:	bl	12704 <mktime@plt>
   237cc:	mov	r4, r0
   237d0:	mov	r0, r6
   237d4:	bl	12674 <time@plt>
   237d8:	add	lr, sp, #272	; 0x110
   237dc:	movw	r2, #16960	; 0x4240
   237e0:	movt	r2, #15
   237e4:	ldrb	r3, [sp, #96]	; 0x60
   237e8:	ldr	ip, [sp, #128]	; 0x80
   237ec:	strh	r5, [lr]
   237f0:	add	r5, sp, #276	; 0x114
   237f4:	add	r5, r5, #2
   237f8:	ldr	r1, [sp, #140]	; 0x8c
   237fc:	add	lr, sp, #276	; 0x114
   23800:	strh	ip, [r5]
   23804:	add	r5, sp, #256	; 0x100
   23808:	cmp	r1, r6
   2380c:	add	r5, r5, #2
   23810:	ldrh	lr, [lr]
   23814:	ubfx	r3, r3, #2, #1
   23818:	strh	r3, [r5]
   2381c:	add	r5, lr, #2
   23820:	str	r5, [sp, #260]	; 0x104
   23824:	sub	r0, r0, r4
   23828:	mul	r2, r2, r0
   2382c:	add	r0, sp, #288	; 0x120
   23830:	asr	r3, r2, #31
   23834:	strd	r2, [r0]
   23838:	beq	23854 <crc32@@Base+0xa10c>
   2383c:	ldr	r3, [r1]
   23840:	ldr	r1, [r1, #8]
   23844:	cmp	r1, #0
   23848:	add	r5, r5, r3, lsr #4
   2384c:	bne	2383c <crc32@@Base+0xa0f4>
   23850:	str	r5, [sp, #260]	; 0x104
   23854:	ldrb	r3, [sp, #136]	; 0x88
   23858:	tst	r3, #1
   2385c:	beq	248e0 <crc32@@Base+0xb198>
   23860:	add	r3, sp, #280	; 0x118
   23864:	uxth	ip, ip
   23868:	ldr	r2, [sp, #260]	; 0x104
   2386c:	ldrh	r3, [r3]
   23870:	add	r2, r2, #2
   23874:	ldr	r1, [sp, #132]	; 0x84
   23878:	mul	ip, r3, ip
   2387c:	str	r1, [sp, #268]	; 0x10c
   23880:	add	r3, lr, ip
   23884:	add	ip, ip, r2
   23888:	add	r2, sp, #272	; 0x110
   2388c:	str	ip, [sp, #260]	; 0x104
   23890:	add	r2, r2, #2
   23894:	uxth	r3, r3
   23898:	strh	r3, [r2]
   2389c:	add	r3, r3, #2
   238a0:	str	r3, [sp, #264]	; 0x108
   238a4:	bl	22360 <crc32@@Base+0x8c18>
   238a8:	mov	r4, r0
   238ac:	bl	1220c <EVP_sha1@plt>
   238b0:	mov	r1, r0
   238b4:	mov	r0, r4
   238b8:	bl	12080 <EVP_DigestInit@plt>
   238bc:	mov	r2, #76	; 0x4c
   238c0:	add	r1, sp, #252	; 0xfc
   238c4:	mov	r0, r4
   238c8:	bl	12650 <EVP_DigestUpdate@plt>
   238cc:	add	r1, sp, #232	; 0xe8
   238d0:	mov	r2, #0
   238d4:	mov	r0, r4
   238d8:	bl	1253c <EVP_DigestFinal@plt>
   238dc:	mov	r0, r4
   238e0:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   238e4:	mov	r0, r4
   238e8:	bl	124b8 <CRYPTO_free@plt>
   238ec:	ldr	lr, [sp, #140]	; 0x8c
   238f0:	ldr	r5, [sp, #264]	; 0x108
   238f4:	cmp	lr, #0
   238f8:	beq	2397c <crc32@@Base+0xa234>
   238fc:	ldr	ip, [lr, #12]
   23900:	add	r2, r5, #1
   23904:	ldr	r3, [lr, #28]
   23908:	cmp	ip, #0
   2390c:	str	r2, [lr, #24]
   23910:	sub	r4, r3, #1
   23914:	add	r5, r5, r3
   23918:	str	r4, [lr, #28]
   2391c:	beq	23970 <crc32@@Base+0xa228>
   23920:	ldrb	r3, [ip, #17]
   23924:	add	r0, ip, #16
   23928:	add	r0, r0, #15
   2392c:	cmp	r3, #1
   23930:	ldreq	r2, [lr, #20]
   23934:	ldreq	r3, [lr, #32]
   23938:	streq	r4, [ip, #24]
   2393c:	streq	r2, [ip, #20]
   23940:	add	r2, ip, #15
   23944:	streq	r3, [ip, #28]
   23948:	mov	r3, #0
   2394c:	ldrb	r1, [r2, #1]!
   23950:	add	r3, r3, r1
   23954:	cmp	r2, r0
   23958:	uxtb	r3, r3
   2395c:	bne	2394c <crc32@@Base+0xa204>
   23960:	strb	r3, [ip, #16]
   23964:	ldr	ip, [ip, #4]
   23968:	cmp	ip, #0
   2396c:	bne	23920 <crc32@@Base+0xa1d8>
   23970:	ldr	lr, [lr, #8]
   23974:	cmp	lr, #0
   23978:	bne	238fc <crc32@@Base+0xa1b4>
   2397c:	bl	22360 <crc32@@Base+0x8c18>
   23980:	mov	r4, r0
   23984:	str	r0, [sp, #160]	; 0xa0
   23988:	bl	1220c <EVP_sha1@plt>
   2398c:	mov	r1, r0
   23990:	mov	r0, r4
   23994:	bl	12080 <EVP_DigestInit@plt>
   23998:	mov	r2, #1
   2399c:	mov	r1, #0
   239a0:	add	r0, sp, #96	; 0x60
   239a4:	bl	21b74 <crc32@@Base+0x842c>
   239a8:	add	r0, sp, #96	; 0x60
   239ac:	bl	222d8 <crc32@@Base+0x8b90>
   239b0:	add	r0, sp, #96	; 0x60
   239b4:	bl	2230c <crc32@@Base+0x8bc4>
   239b8:	mov	r1, #1
   239bc:	add	r0, sp, #96	; 0x60
   239c0:	bl	21bec <crc32@@Base+0x84a4>
   239c4:	ldr	r4, [sp, #160]	; 0xa0
   239c8:	mov	r3, #16
   239cc:	add	r2, sp, #212	; 0xd4
   239d0:	add	r1, sp, #112	; 0x70
   239d4:	ldr	r0, [sp, #156]	; 0x9c
   239d8:	bl	22228 <crc32@@Base+0x8ae0>
   239dc:	mov	r0, r4
   239e0:	add	r1, sp, #196	; 0xc4
   239e4:	mov	r2, #32
   239e8:	bl	12650 <EVP_DigestUpdate@plt>
   239ec:	ldr	r7, [sp, #140]	; 0x8c
   239f0:	cmp	r7, #0
   239f4:	beq	23a80 <crc32@@Base+0xa338>
   239f8:	ldr	r4, [r7, #12]
   239fc:	mov	r1, #1
   23a00:	add	r0, sp, #96	; 0x60
   23a04:	bl	21bec <crc32@@Base+0x84a4>
   23a08:	cmp	r4, #0
   23a0c:	bne	23a28 <crc32@@Base+0xa2e0>
   23a10:	b	23a74 <crc32@@Base+0xa32c>
   23a14:	cmp	r1, #2
   23a18:	beq	24160 <crc32@@Base+0xaa18>
   23a1c:	ldr	r4, [r4, #4]
   23a20:	cmp	r4, #0
   23a24:	beq	23a74 <crc32@@Base+0xa32c>
   23a28:	add	r5, r4, #32
   23a2c:	ldr	r6, [sp, #160]	; 0xa0
   23a30:	mov	r3, #16
   23a34:	ldr	r0, [sp, #156]	; 0x9c
   23a38:	add	r1, r4, r3
   23a3c:	mov	r2, r5
   23a40:	bl	22228 <crc32@@Base+0x8ae0>
   23a44:	mov	r1, r5
   23a48:	mov	r0, r6
   23a4c:	mov	r2, #16
   23a50:	bl	12650 <EVP_DigestUpdate@plt>
   23a54:	ldrb	r1, [r4, #17]
   23a58:	cmp	r1, #1
   23a5c:	bne	23a14 <crc32@@Base+0xa2cc>
   23a60:	add	r0, sp, #96	; 0x60
   23a64:	bl	21bec <crc32@@Base+0x84a4>
   23a68:	ldr	r4, [r4, #4]
   23a6c:	cmp	r4, #0
   23a70:	bne	23a28 <crc32@@Base+0xa2e0>
   23a74:	ldr	r7, [r7, #8]
   23a78:	cmp	r7, #0
   23a7c:	bne	239f8 <crc32@@Base+0xa2b0>
   23a80:	mov	r1, #1
   23a84:	add	r0, sp, #96	; 0x60
   23a88:	bl	21bec <crc32@@Base+0x84a4>
   23a8c:	add	r1, sp, #164	; 0xa4
   23a90:	mov	r2, #0
   23a94:	ldr	r0, [sp, #160]	; 0xa0
   23a98:	bl	1253c <EVP_DigestFinal@plt>
   23a9c:	ldr	r4, [sp, #160]	; 0xa0
   23aa0:	mov	r0, r4
   23aa4:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   23aa8:	mov	r0, r4
   23aac:	bl	124b8 <CRYPTO_free@plt>
   23ab0:	add	r2, sp, #164	; 0xa4
   23ab4:	mov	r3, #32
   23ab8:	ldr	r0, [sp, #156]	; 0x9c
   23abc:	mov	r1, r2
   23ac0:	bl	22228 <crc32@@Base+0x8ae0>
   23ac4:	ldr	r0, [sp, #156]	; 0x9c
   23ac8:	bl	123f8 <EVP_CIPHER_CTX_cleanup@plt>
   23acc:	ldr	r5, [sp, #128]	; 0x80
   23ad0:	ldr	r7, [sp, #140]	; 0x8c
   23ad4:	add	r5, r5, #10
   23ad8:	cmp	r7, #0
   23adc:	lsl	r5, r5, #4
   23ae0:	beq	243cc <crc32@@Base+0xac84>
   23ae4:	mov	r3, r7
   23ae8:	ldr	r2, [r3]
   23aec:	ldr	r3, [r3, #8]
   23af0:	add	r5, r5, r2
   23af4:	cmp	r3, #0
   23af8:	bne	23ae8 <crc32@@Base+0xa3a0>
   23afc:	mov	r0, r5
   23b00:	bl	125a8 <malloc@plt>
   23b04:	subs	r8, r0, #0
   23b08:	beq	243dc <crc32@@Base+0xac94>
   23b0c:	add	r1, sp, #232	; 0xe8
   23b10:	mov	r2, #96	; 0x60
   23b14:	bl	1259c <memcpy@plt>
   23b18:	add	r4, r8, #96	; 0x60
   23b1c:	mov	lr, r7
   23b20:	b	23b28 <crc32@@Base+0xa3e0>
   23b24:	mov	r4, r6
   23b28:	mov	r3, lr
   23b2c:	mov	ip, r4
   23b30:	ldr	r0, [r3, #20]!
   23b34:	add	r6, r4, #16
   23b38:	ldr	r1, [r3, #4]
   23b3c:	ldr	r2, [r3, #8]
   23b40:	ldr	r3, [r3, #12]
   23b44:	stmia	ip!, {r0, r1, r2, r3}
   23b48:	ldr	lr, [lr, #8]
   23b4c:	cmp	lr, #0
   23b50:	bne	23b24 <crc32@@Base+0xa3dc>
   23b54:	add	ip, sp, #196	; 0xc4
   23b58:	mov	lr, r6
   23b5c:	add	r4, r4, #48	; 0x30
   23b60:	mov	r6, r7
   23b64:	ldm	ip!, {r0, r1, r2, r3}
   23b68:	stmia	lr!, {r0, r1, r2, r3}
   23b6c:	ldm	ip, {r0, r1, r2, r3}
   23b70:	stm	lr, {r0, r1, r2, r3}
   23b74:	ldr	r9, [r6, #12]
   23b78:	cmp	r9, #0
   23b7c:	bne	23b90 <crc32@@Base+0xa448>
   23b80:	b	23be8 <crc32@@Base+0xa4a0>
   23b84:	ldr	r9, [r9, #4]
   23b88:	cmp	r9, #0
   23b8c:	beq	23be8 <crc32@@Base+0xa4a0>
   23b90:	mov	r3, r9
   23b94:	add	r4, r4, #16
   23b98:	ldr	r0, [r3, #32]!
   23b9c:	ldr	r1, [r3, #4]
   23ba0:	ldr	r2, [r3, #8]
   23ba4:	ldr	r3, [r3, #12]
   23ba8:	str	r0, [r4, #-16]
   23bac:	str	r1, [r4, #-12]
   23bb0:	str	r2, [r4, #-8]
   23bb4:	str	r3, [r4, #-4]
   23bb8:	ldrb	r3, [r9, #17]
   23bbc:	cmp	r3, #2
   23bc0:	bne	23b84 <crc32@@Base+0xa43c>
   23bc4:	ldr	r2, [r9, #12]
   23bc8:	mov	r0, r4
   23bcc:	ldr	r1, [r9, #8]
   23bd0:	bl	1259c <memcpy@plt>
   23bd4:	ldr	r3, [r9, #12]
   23bd8:	ldr	r9, [r9, #4]
   23bdc:	add	r4, r4, r3
   23be0:	cmp	r9, #0
   23be4:	bne	23b90 <crc32@@Base+0xa448>
   23be8:	ldr	r6, [r6, #8]
   23bec:	cmp	r6, #0
   23bf0:	bne	23b74 <crc32@@Base+0xa42c>
   23bf4:	add	ip, sp, #164	; 0xa4
   23bf8:	ldr	lr, [sp, #16]
   23bfc:	ldm	ip!, {r0, r1, r2, r3}
   23c00:	str	r5, [lr, #4]
   23c04:	mov	r5, #0
   23c08:	str	r8, [lr, #8]
   23c0c:	str	r0, [r4]
   23c10:	str	r1, [r4, #4]
   23c14:	str	r2, [r4, #8]
   23c18:	str	r3, [r4, #12]
   23c1c:	ldm	ip!, {r0, r1, r2, r3}
   23c20:	str	r0, [r4, #16]
   23c24:	str	r1, [r4, #20]
   23c28:	str	r2, [r4, #24]
   23c2c:	str	r3, [r4, #28]
   23c30:	mov	r0, r7
   23c34:	ldr	r1, [sp, #148]	; 0x94
   23c38:	bl	21d20 <crc32@@Base+0x85d8>
   23c3c:	ldr	r3, [sp, #8]
   23c40:	ldr	r2, [sp, #332]	; 0x14c
   23c44:	mov	r0, r5
   23c48:	ldr	r3, [r3]
   23c4c:	cmp	r2, r3
   23c50:	bne	24948 <crc32@@Base+0xb200>
   23c54:	add	sp, sp, #340	; 0x154
   23c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c5c:	tst	r3, #2
   23c60:	beq	24784 <crc32@@Base+0xb03c>
   23c64:	cmp	r9, #46	; 0x2e
   23c68:	beq	23c74 <crc32@@Base+0xa52c>
   23c6c:	b	23c84 <crc32@@Base+0xa53c>
   23c70:	add	r6, r6, #1
   23c74:	ldrb	r9, [r6]
   23c78:	mov	r7, r6
   23c7c:	cmp	r9, #46	; 0x2e
   23c80:	beq	23c70 <crc32@@Base+0xa528>
   23c84:	cmp	r9, #0
   23c88:	addne	r6, r7, #1
   23c8c:	bne	23c9c <crc32@@Base+0xa554>
   23c90:	b	23cc4 <crc32@@Base+0xa57c>
   23c94:	cmp	r3, #46	; 0x2e
   23c98:	beq	23f04 <crc32@@Base+0xa7bc>
   23c9c:	mov	r0, r6
   23ca0:	ldrb	r3, [r6], #1
   23ca4:	cmp	r3, #0
   23ca8:	bne	23c94 <crc32@@Base+0xa54c>
   23cac:	ldrb	r3, [r7]
   23cb0:	cmp	r3, #0
   23cb4:	beq	23cc4 <crc32@@Base+0xa57c>
   23cb8:	bl	125c0 <strlen@plt>
   23cbc:	cmp	r0, #1
   23cc0:	beq	241b0 <crc32@@Base+0xaa68>
   23cc4:	ldr	r3, [sp, #60]	; 0x3c
   23cc8:	ldr	r2, [sp, #12]
   23ccc:	mov	r1, #1
   23cd0:	ldr	r0, [r8]
   23cd4:	bl	122b4 <__fprintf_chk@plt>
   23cd8:	b	23710 <crc32@@Base+0x9fc8>
   23cdc:	mov	r0, #1
   23ce0:	mov	r1, #36	; 0x24
   23ce4:	orr	r3, r3, r0
   23ce8:	bfi	r3, ip, #1, #1
   23cec:	strb	r3, [sp, #96]	; 0x60
   23cf0:	bl	12518 <calloc@plt>
   23cf4:	subs	r6, r0, #0
   23cf8:	beq	23710 <crc32@@Base+0x9fc8>
   23cfc:	mov	r0, sl
   23d00:	movw	r1, #31680	; 0x7bc0
   23d04:	movt	r1, #3
   23d08:	bl	12278 <strtok@plt>
   23d0c:	cmp	r0, #0
   23d10:	beq	24060 <crc32@@Base+0xa918>
   23d14:	add	r1, sp, #48	; 0x30
   23d18:	bl	21a4c <crc32@@Base+0x8304>
   23d1c:	subs	r7, r0, #0
   23d20:	beq	23fd4 <crc32@@Base+0xa88c>
   23d24:	movw	r2, #45840	; 0xb310
   23d28:	ldr	r3, [sp, #60]	; 0x3c
   23d2c:	movt	r2, #3
   23d30:	mov	r1, #1
   23d34:	ldr	r0, [r8]
   23d38:	bl	122b4 <__fprintf_chk@plt>
   23d3c:	mov	r0, r6
   23d40:	bl	12128 <free@plt>
   23d44:	b	23710 <crc32@@Base+0x9fc8>
   23d48:	ldrb	r3, [r7, #1]
   23d4c:	cmp	r3, #79	; 0x4f
   23d50:	bne	23db0 <crc32@@Base+0xa668>
   23d54:	ldrb	r3, [r7, #2]
   23d58:	cmp	r3, #80	; 0x50
   23d5c:	bne	23db0 <crc32@@Base+0xa668>
   23d60:	ldrb	r3, [r7, #3]
   23d64:	cmp	r3, #0
   23d68:	bne	23db0 <crc32@@Base+0xa668>
   23d6c:	mov	r1, #48	; 0x30
   23d70:	mov	r0, #1
   23d74:	ldr	r6, [sp, #144]	; 0x90
   23d78:	bl	12518 <calloc@plt>
   23d7c:	cmp	r0, #0
   23d80:	beq	23710 <crc32@@Base+0x9fc8>
   23d84:	mov	r3, #90	; 0x5a
   23d88:	strh	r3, [r0, #16]
   23d8c:	ldr	r2, [r6, #12]
   23d90:	mov	r3, #16
   23d94:	str	r3, [r0]
   23d98:	cmp	r2, #0
   23d9c:	streq	r0, [r6, #12]
   23da0:	ldrne	r2, [r6, #16]
   23da4:	strne	r0, [r2, #4]
   23da8:	str	r0, [r6, #16]
   23dac:	b	236dc <crc32@@Base+0x9f94>
   23db0:	movw	r1, #45968	; 0xb390
   23db4:	mov	r0, r7
   23db8:	movt	r1, #3
   23dbc:	bl	1265c <strcmp@plt>
   23dc0:	subs	r9, r0, #0
   23dc4:	beq	241cc <crc32@@Base+0xaa84>
   23dc8:	movw	r1, #25840	; 0x64f0
   23dcc:	mov	r0, r7
   23dd0:	movt	r1, #3
   23dd4:	bl	1265c <strcmp@plt>
   23dd8:	cmp	r0, #0
   23ddc:	beq	240b8 <crc32@@Base+0xa970>
   23de0:	movw	r1, #43480	; 0xa9d8
   23de4:	mov	r0, r7
   23de8:	movt	r1, #3
   23dec:	bl	1265c <strcmp@plt>
   23df0:	subs	r3, r0, #0
   23df4:	beq	2437c <crc32@@Base+0xac34>
   23df8:	movw	r1, #43472	; 0xa9d0
   23dfc:	mov	r0, r7
   23e00:	movt	r1, #3
   23e04:	bl	1265c <strcmp@plt>
   23e08:	cmp	r0, #0
   23e0c:	beq	24378 <crc32@@Base+0xac30>
   23e10:	movw	r1, #46488	; 0xb598
   23e14:	mov	r0, r7
   23e18:	movt	r1, #3
   23e1c:	bl	1265c <strcmp@plt>
   23e20:	subs	r6, r0, #0
   23e24:	bne	24928 <crc32@@Base+0xb1e0>
   23e28:	ldr	r3, [sp, #144]	; 0x90
   23e2c:	mov	r1, #48	; 0x30
   23e30:	mov	r0, #1
   23e34:	str	r3, [sp, #24]
   23e38:	bl	12518 <calloc@plt>
   23e3c:	subs	r3, r0, #0
   23e40:	str	r3, [sp, #20]
   23e44:	beq	23710 <crc32@@Base+0x9fc8>
   23e48:	mov	r0, sl
   23e4c:	movw	r1, #31680	; 0x7bc0
   23e50:	movt	r1, #3
   23e54:	bl	12278 <strtok@plt>
   23e58:	subs	r9, r0, #0
   23e5c:	beq	2490c <crc32@@Base+0xb1c4>
   23e60:	movw	r7, #43188	; 0xa8b4
   23e64:	movt	r7, #3
   23e68:	movw	r1, #45676	; 0xb26c
   23e6c:	movt	r1, #3
   23e70:	mov	sl, r7
   23e74:	b	23e7c <crc32@@Base+0xa734>
   23e78:	ldr	r1, [r7, #12]!
   23e7c:	mov	r0, r9
   23e80:	bl	1265c <strcmp@plt>
   23e84:	cmp	r0, #0
   23e88:	beq	2458c <crc32@@Base+0xae44>
   23e8c:	ldr	r1, [r7, #4]
   23e90:	cmp	r1, #0
   23e94:	beq	23ea8 <crc32@@Base+0xa760>
   23e98:	mov	r0, r9
   23e9c:	bl	1265c <strcmp@plt>
   23ea0:	cmp	r0, #0
   23ea4:	beq	2458c <crc32@@Base+0xae44>
   23ea8:	add	r6, r6, #1
   23eac:	cmp	r6, #9
   23eb0:	bne	23e78 <crc32@@Base+0xa730>
   23eb4:	movw	r2, #46716	; 0xb67c
   23eb8:	ldr	r3, [sp, #60]	; 0x3c
   23ebc:	movt	r2, #3
   23ec0:	mov	r1, #1
   23ec4:	ldr	r0, [r8]
   23ec8:	bl	122b4 <__fprintf_chk@plt>
   23ecc:	ldr	r0, [sp, #20]
   23ed0:	bl	12128 <free@plt>
   23ed4:	b	23710 <crc32@@Base+0x9fc8>
   23ed8:	movw	r2, #45720	; 0xb298
   23edc:	ldr	r3, [sp, #60]	; 0x3c
   23ee0:	movt	r2, #3
   23ee4:	mov	r1, #1
   23ee8:	ldr	r0, [r8]
   23eec:	bl	122b4 <__fprintf_chk@plt>
   23ef0:	ldr	r0, [r6, #8]
   23ef4:	bl	12128 <free@plt>
   23ef8:	mov	r0, r6
   23efc:	bl	12128 <free@plt>
   23f00:	b	23710 <crc32@@Base+0x9fc8>
   23f04:	mov	r3, #0
   23f08:	strb	r3, [r0]
   23f0c:	ldrb	r9, [r7]
   23f10:	cmp	r9, r3
   23f14:	beq	23cc4 <crc32@@Base+0xa57c>
   23f18:	cmp	r6, #0
   23f1c:	moveq	r6, #49	; 0x31
   23f20:	bne	24184 <crc32@@Base+0xaa3c>
   23f24:	movw	r1, #46620	; 0xb61c
   23f28:	mov	r0, r7
   23f2c:	movt	r1, #3
   23f30:	bl	1265c <strcmp@plt>
   23f34:	cmp	r0, #0
   23f38:	beq	23fa4 <crc32@@Base+0xa85c>
   23f3c:	movw	r1, #46628	; 0xb624
   23f40:	mov	r0, r7
   23f44:	movt	r1, #3
   23f48:	bl	1265c <strcmp@plt>
   23f4c:	cmp	r0, #0
   23f50:	orreq	r3, r6, #-872415232	; 0xcc000000
   23f54:	beq	24048 <crc32@@Base+0xa900>
   23f58:	cmp	r9, #79	; 0x4f
   23f5c:	beq	2407c <crc32@@Base+0xa934>
   23f60:	cmp	r9, #69	; 0x45
   23f64:	bne	2494c <crc32@@Base+0xb204>
   23f68:	ldrb	r3, [r7, #1]
   23f6c:	cmp	r3, #81	; 0x51
   23f70:	bne	24088 <crc32@@Base+0xa940>
   23f74:	ldrb	r3, [r7, #2]
   23f78:	cmp	r3, #90	; 0x5a
   23f7c:	bne	2403c <crc32@@Base+0xa8f4>
   23f80:	ldrb	r3, [r7, #3]
   23f84:	cmp	r3, #0
   23f88:	bne	24088 <crc32@@Base+0xa940>
   23f8c:	orr	r3, r6, #-822083584	; 0xcf000000
   23f90:	add	r2, sp, #60	; 0x3c
   23f94:	add	r1, sp, #52	; 0x34
   23f98:	ldr	r0, [sp, #152]	; 0x98
   23f9c:	bl	2200c <crc32@@Base+0x88c4>
   23fa0:	b	23fb8 <crc32@@Base+0xa870>
   23fa4:	orr	r3, r6, #-872415232	; 0xcc000000
   23fa8:	add	r2, sp, #60	; 0x3c
   23fac:	add	r1, sp, #52	; 0x34
   23fb0:	ldr	r0, [sp, #152]	; 0x98
   23fb4:	bl	2200c <crc32@@Base+0x88c4>
   23fb8:	ldrb	r3, [sp, #96]	; 0x60
   23fbc:	cmp	r0, #0
   23fc0:	movne	r0, #0
   23fc4:	andeq	r0, r3, #1
   23fc8:	cmp	r0, #0
   23fcc:	beq	23710 <crc32@@Base+0x9fc8>
   23fd0:	b	236d0 <crc32@@Base+0x9f88>
   23fd4:	movw	r1, #31680	; 0x7bc0
   23fd8:	movt	r1, #3
   23fdc:	bl	12278 <strtok@plt>
   23fe0:	subs	r3, r0, #0
   23fe4:	beq	24138 <crc32@@Base+0xa9f0>
   23fe8:	str	r3, [sp, #20]
   23fec:	bl	125c0 <strlen@plt>
   23ff0:	ldr	r9, [sp, #128]	; 0x80
   23ff4:	ldr	sl, [sp, #48]	; 0x30
   23ff8:	add	r9, r9, #1
   23ffc:	ldr	r3, [sp, #20]
   24000:	cmp	r0, #8
   24004:	beq	243e4 <crc32@@Base+0xac9c>
   24008:	ldrb	r3, [r6, #4]
   2400c:	str	sl, [r6, #20]
   24010:	bfi	r3, r7, #0, #1
   24014:	str	r7, [r6, #32]
   24018:	str	r9, [sp, #128]	; 0x80
   2401c:	strb	r3, [r6, #4]
   24020:	ldr	r3, [sp, #140]	; 0x8c
   24024:	cmp	r3, #0
   24028:	streq	r6, [sp, #140]	; 0x8c
   2402c:	ldrne	r3, [sp, #144]	; 0x90
   24030:	strne	r6, [r3, #8]
   24034:	str	r6, [sp, #144]	; 0x90
   24038:	b	23710 <crc32@@Base+0x9fc8>
   2403c:	cmp	r3, #0
   24040:	bne	24088 <crc32@@Base+0xa940>
   24044:	orr	r3, r6, #-822083584	; 0xcf000000
   24048:	add	r2, sp, #60	; 0x3c
   2404c:	orr	r3, r3, #16
   24050:	add	r1, sp, #52	; 0x34
   24054:	ldr	r0, [sp, #152]	; 0x98
   24058:	bl	2200c <crc32@@Base+0x88c4>
   2405c:	b	23fb8 <crc32@@Base+0xa870>
   24060:	movw	r2, #45804	; 0xb2ec
   24064:	ldr	r3, [sp, #60]	; 0x3c
   24068:	movt	r2, #3
   2406c:	mov	r1, #1
   24070:	ldr	r0, [r8]
   24074:	bl	122b4 <__fprintf_chk@plt>
   24078:	b	23d3c <crc32@@Base+0xa5f4>
   2407c:	ldrb	r3, [r7, #1]
   24080:	cmp	r3, #82	; 0x52
   24084:	beq	24390 <crc32@@Base+0xac48>
   24088:	movw	r1, #46636	; 0xb62c
   2408c:	mov	r0, r7
   24090:	movt	r1, #3
   24094:	bl	1265c <strcmp@plt>
   24098:	cmp	r0, #0
   2409c:	bne	24928 <crc32@@Base+0xb1e0>
   240a0:	mov	r3, #-1073741824	; 0xc0000000
   240a4:	add	r2, sp, #60	; 0x3c
   240a8:	add	r1, sp, #52	; 0x34
   240ac:	ldr	r0, [sp, #152]	; 0x98
   240b0:	bl	2200c <crc32@@Base+0x88c4>
   240b4:	b	23fb8 <crc32@@Base+0xa870>
   240b8:	mov	r1, #48	; 0x30
   240bc:	mov	r0, #1
   240c0:	ldr	r7, [sp, #144]	; 0x90
   240c4:	bl	12518 <calloc@plt>
   240c8:	subs	r6, r0, #0
   240cc:	beq	23710 <crc32@@Base+0x9fc8>
   240d0:	mov	r0, sl
   240d4:	movw	r1, #31680	; 0x7bc0
   240d8:	movt	r1, #3
   240dc:	bl	12278 <strtok@plt>
   240e0:	cmp	r0, #0
   240e4:	beq	245e8 <crc32@@Base+0xaea0>
   240e8:	add	r1, sp, #40	; 0x28
   240ec:	bl	21a4c <crc32@@Base+0x8304>
   240f0:	cmp	r0, #0
   240f4:	bne	244d0 <crc32@@Base+0xad88>
   240f8:	movw	r1, #31680	; 0x7bc0
   240fc:	movt	r1, #3
   24100:	bl	12278 <strtok@plt>
   24104:	cmp	r0, #0
   24108:	beq	247a4 <crc32@@Base+0xb05c>
   2410c:	add	r1, sp, #44	; 0x2c
   24110:	bl	21a4c <crc32@@Base+0x8304>
   24114:	cmp	r0, #0
   24118:	beq	24518 <crc32@@Base+0xadd0>
   2411c:	movw	r2, #46384	; 0xb530
   24120:	ldr	r3, [sp, #60]	; 0x3c
   24124:	movt	r2, #3
   24128:	mov	r1, #1
   2412c:	ldr	r0, [r8]
   24130:	bl	122b4 <__fprintf_chk@plt>
   24134:	b	23d3c <crc32@@Base+0xa5f4>
   24138:	ldr	r0, [sp, #48]	; 0x30
   2413c:	ldrb	r1, [r6, #4]
   24140:	ldr	r2, [sp, #128]	; 0x80
   24144:	bfi	r1, r3, #0, #1
   24148:	str	r3, [r6, #32]
   2414c:	strb	r1, [r6, #4]
   24150:	add	r3, r2, #1
   24154:	str	r0, [r6, #20]
   24158:	str	r3, [sp, #128]	; 0x80
   2415c:	b	24020 <crc32@@Base+0xa8d8>
   24160:	ldrd	r2, [r4, #8]
   24164:	ldr	r0, [sp, #156]	; 0x9c
   24168:	mov	r1, r2
   2416c:	bl	22228 <crc32@@Base+0x8ae0>
   24170:	ldr	r2, [r4, #12]
   24174:	ldr	r1, [r4, #8]
   24178:	ldr	r0, [sp, #160]	; 0xa0
   2417c:	bl	12650 <EVP_DigestUpdate@plt>
   24180:	b	23a1c <crc32@@Base+0xa2d4>
   24184:	mov	r0, r6
   24188:	bl	125c0 <strlen@plt>
   2418c:	cmp	r0, #1
   24190:	bne	23cc4 <crc32@@Base+0xa57c>
   24194:	ldrb	r2, [r6]
   24198:	sub	r3, r2, #49	; 0x31
   2419c:	uxtb	r1, r3
   241a0:	cmp	r2, #52	; 0x34
   241a4:	cmpne	r1, #1
   241a8:	movls	r6, r3
   241ac:	bls	23f24 <crc32@@Base+0xa7dc>
   241b0:	movw	r2, #46580	; 0xb5f4
   241b4:	ldr	r3, [sp, #60]	; 0x3c
   241b8:	movt	r2, #3
   241bc:	mov	r1, #1
   241c0:	ldr	r0, [r8]
   241c4:	bl	122b4 <__fprintf_chk@plt>
   241c8:	b	23710 <crc32@@Base+0x9fc8>
   241cc:	mov	r1, #48	; 0x30
   241d0:	mov	r0, #1
   241d4:	ldr	r7, [sp, #144]	; 0x90
   241d8:	bl	12518 <calloc@plt>
   241dc:	subs	r6, r0, #0
   241e0:	beq	23710 <crc32@@Base+0x9fc8>
   241e4:	mov	r0, sl
   241e8:	movw	r1, #31680	; 0x7bc0
   241ec:	movt	r1, #3
   241f0:	bl	12278 <strtok@plt>
   241f4:	cmp	r0, #0
   241f8:	beq	245f8 <crc32@@Base+0xaeb0>
   241fc:	ldrb	r3, [r0]
   24200:	cmp	r3, #73	; 0x49
   24204:	bne	2444c <crc32@@Base+0xad04>
   24208:	ldrb	r3, [r0, #1]
   2420c:	cmp	r3, #86	; 0x56
   24210:	bne	24230 <crc32@@Base+0xaae8>
   24214:	ldrb	r3, [r0, #2]
   24218:	cmp	r3, #84	; 0x54
   2421c:	bne	24230 <crc32@@Base+0xaae8>
   24220:	ldrb	r3, [r0, #3]
   24224:	cmp	r3, #0
   24228:	moveq	sl, #1
   2422c:	beq	24480 <crc32@@Base+0xad38>
   24230:	mov	sl, r9
   24234:	add	r1, sp, #44	; 0x2c
   24238:	bl	21a4c <crc32@@Base+0x8304>
   2423c:	cmp	r0, #0
   24240:	bne	244b4 <crc32@@Base+0xad6c>
   24244:	movw	r1, #31680	; 0x7bc0
   24248:	movt	r1, #3
   2424c:	bl	12278 <strtok@plt>
   24250:	subs	r3, r0, #0
   24254:	str	r3, [sp, #28]
   24258:	beq	24774 <crc32@@Base+0xb02c>
   2425c:	cmp	sl, #0
   24260:	bne	2471c <crc32@@Base+0xafd4>
   24264:	cmp	r9, #0
   24268:	beq	2463c <crc32@@Base+0xaef4>
   2426c:	add	r1, sp, #48	; 0x30
   24270:	ldr	sl, [sp, #148]	; 0x94
   24274:	bl	21a4c <crc32@@Base+0x8304>
   24278:	cmp	r0, #0
   2427c:	bne	248c4 <crc32@@Base+0xb17c>
   24280:	cmp	sl, #0
   24284:	ldr	r1, [sp, #48]	; 0x30
   24288:	bne	2429c <crc32@@Base+0xab54>
   2428c:	b	24890 <crc32@@Base+0xb148>
   24290:	ldr	sl, [sl]
   24294:	cmp	sl, #0
   24298:	beq	24890 <crc32@@Base+0xb148>
   2429c:	ldr	r3, [sl, #4]
   242a0:	cmp	r3, r1
   242a4:	bne	24290 <crc32@@Base+0xab48>
   242a8:	ldr	r2, [sl, #12]
   242ac:	mov	r0, #1
   242b0:	add	r9, r2, #15
   242b4:	bic	r9, r9, #15
   242b8:	str	r2, [sp, #20]
   242bc:	mov	r1, r9
   242c0:	bl	12518 <calloc@plt>
   242c4:	ldr	r2, [sp, #20]
   242c8:	subs	r3, r0, #0
   242cc:	beq	23d3c <crc32@@Base+0xa5f4>
   242d0:	ldr	r1, [sl, #8]
   242d4:	str	r3, [sp, #20]
   242d8:	bl	1259c <memcpy@plt>
   242dc:	ldr	r3, [sp, #20]
   242e0:	str	r9, [r6, #12]
   242e4:	str	r3, [r6, #8]
   242e8:	mov	r3, #1
   242ec:	ldr	r0, [sp, #44]	; 0x2c
   242f0:	ldr	r1, [r6, #8]
   242f4:	strh	r3, [r6, #18]
   242f8:	mov	r2, r9
   242fc:	movw	r3, #602	; 0x25a
   24300:	str	r0, [r6, #20]
   24304:	strh	r3, [r6, #16]
   24308:	mov	r0, #0
   2430c:	str	r9, [r6, #24]
   24310:	bl	252fc <crc32@@Base+0xbbb4>
   24314:	ldr	r2, [r7, #12]
   24318:	ldr	r3, [r6, #12]
   2431c:	cmp	r2, #0
   24320:	add	r3, r3, #16
   24324:	str	r3, [r6]
   24328:	str	r0, [r6, #28]
   2432c:	beq	2484c <crc32@@Base+0xb104>
   24330:	ldrb	r2, [sp, #96]	; 0x60
   24334:	ldr	r3, [r7, #16]
   24338:	tst	r2, #1
   2433c:	str	r6, [r3, #4]
   24340:	str	r6, [r7, #16]
   24344:	bne	236d0 <crc32@@Base+0x9f88>
   24348:	b	23710 <crc32@@Base+0x9fc8>
   2434c:	ldr	r3, [sp, #60]	; 0x3c
   24350:	mov	r1, #1
   24354:	ldr	r0, [r8]
   24358:	movw	r2, #45756	; 0xb2bc
   2435c:	movt	r2, #3
   24360:	bl	122b4 <__fprintf_chk@plt>
   24364:	ldr	r0, [r6, #8]
   24368:	bl	12128 <free@plt>
   2436c:	mov	r0, r6
   24370:	bl	12128 <free@plt>
   24374:	b	23710 <crc32@@Base+0x9fc8>
   24378:	mov	r3, #1
   2437c:	add	r2, sp, #60	; 0x3c
   24380:	add	r1, sp, #52	; 0x34
   24384:	ldr	r0, [sp, #144]	; 0x90
   24388:	bl	21dec <crc32@@Base+0x86a4>
   2438c:	b	23fb8 <crc32@@Base+0xa870>
   24390:	ldrb	r3, [r7, #2]
   24394:	cmp	r3, #82	; 0x52
   24398:	bne	24088 <crc32@@Base+0xa940>
   2439c:	ldrb	r3, [r7, #3]
   243a0:	cmp	r3, #0
   243a4:	bne	24088 <crc32@@Base+0xa940>
   243a8:	orr	r3, r6, #-872415232	; 0xcc000000
   243ac:	add	r2, sp, #60	; 0x3c
   243b0:	orr	r3, r3, #24
   243b4:	add	r1, sp, #52	; 0x34
   243b8:	ldr	r0, [sp, #152]	; 0x98
   243bc:	bl	2200c <crc32@@Base+0x88c4>
   243c0:	b	23fb8 <crc32@@Base+0xa870>
   243c4:	mov	r3, r4
   243c8:	b	23cc8 <crc32@@Base+0xa580>
   243cc:	mov	r0, r5
   243d0:	bl	125a8 <malloc@plt>
   243d4:	subs	r8, r0, #0
   243d8:	bne	244ec <crc32@@Base+0xada4>
   243dc:	mvn	r5, #11
   243e0:	b	23c30 <crc32@@Base+0xa4e8>
   243e4:	mov	r2, r0
   243e8:	movw	r1, #45876	; 0xb334
   243ec:	mov	r0, r3
   243f0:	movt	r1, #3
   243f4:	bl	1217c <strncmp@plt>
   243f8:	cmp	r0, #0
   243fc:	bne	24008 <crc32@@Base+0xa8c0>
   24400:	ldrb	r2, [sp, #136]	; 0x88
   24404:	mov	r1, #1
   24408:	ldrb	r3, [r6, #4]
   2440c:	tst	r2, #1
   24410:	str	sl, [r6, #20]
   24414:	orr	r3, r3, r1
   24418:	orreq	r2, r2, #1
   2441c:	str	r9, [sp, #128]	; 0x80
   24420:	str	r1, [r6, #32]
   24424:	strb	r3, [r6, #4]
   24428:	streq	sl, [sp, #132]	; 0x84
   2442c:	strbeq	r2, [sp, #136]	; 0x88
   24430:	beq	24020 <crc32@@Base+0xa8d8>
   24434:	movw	r2, #45888	; 0xb340
   24438:	ldr	r3, [sp, #60]	; 0x3c
   2443c:	movt	r2, #3
   24440:	ldr	r0, [r8]
   24444:	bl	122b4 <__fprintf_chk@plt>
   24448:	b	24020 <crc32@@Base+0xa8d8>
   2444c:	cmp	r3, #68	; 0x44
   24450:	bne	24230 <crc32@@Base+0xaae8>
   24454:	ldrb	r3, [r0, #1]
   24458:	cmp	r3, #67	; 0x43
   2445c:	bne	24230 <crc32@@Base+0xaae8>
   24460:	ldrb	r3, [r0, #2]
   24464:	cmp	r3, #68	; 0x44
   24468:	bne	24230 <crc32@@Base+0xaae8>
   2446c:	ldrb	r3, [r0, #3]
   24470:	mov	sl, r9
   24474:	cmp	r3, #0
   24478:	bne	24234 <crc32@@Base+0xaaec>
   2447c:	mov	r9, #1
   24480:	movw	r1, #31680	; 0x7bc0
   24484:	mov	r0, #0
   24488:	movt	r1, #3
   2448c:	bl	12278 <strtok@plt>
   24490:	cmp	r0, #0
   24494:	bne	24234 <crc32@@Base+0xaaec>
   24498:	ldr	r3, [sp, #60]	; 0x3c
   2449c:	movw	r2, #46020	; 0xb3c4
   244a0:	movt	r2, #3
   244a4:	mov	r1, #1
   244a8:	ldr	r0, [r8]
   244ac:	bl	122b4 <__fprintf_chk@plt>
   244b0:	b	23d3c <crc32@@Base+0xa5f4>
   244b4:	movw	r2, #46052	; 0xb3e4
   244b8:	ldr	r3, [sp, #60]	; 0x3c
   244bc:	movt	r2, #3
   244c0:	mov	r1, #1
   244c4:	ldr	r0, [r8]
   244c8:	bl	122b4 <__fprintf_chk@plt>
   244cc:	b	23d3c <crc32@@Base+0xa5f4>
   244d0:	movw	r2, #46316	; 0xb4ec
   244d4:	ldr	r3, [sp, #60]	; 0x3c
   244d8:	movt	r2, #3
   244dc:	mov	r1, #1
   244e0:	ldr	r0, [r8]
   244e4:	bl	122b4 <__fprintf_chk@plt>
   244e8:	b	23d3c <crc32@@Base+0xa5f4>
   244ec:	add	r1, sp, #232	; 0xe8
   244f0:	mov	r2, #96	; 0x60
   244f4:	bl	1259c <memcpy@plt>
   244f8:	add	lr, sp, #196	; 0xc4
   244fc:	add	ip, r8, #96	; 0x60
   24500:	add	r4, r8, #128	; 0x80
   24504:	ldm	lr!, {r0, r1, r2, r3}
   24508:	stmia	ip!, {r0, r1, r2, r3}
   2450c:	ldm	lr, {r0, r1, r2, r3}
   24510:	stm	ip, {r0, r1, r2, r3}
   24514:	b	23bf4 <crc32@@Base+0xa4ac>
   24518:	movw	r1, #31680	; 0x7bc0
   2451c:	movt	r1, #3
   24520:	bl	12278 <strtok@plt>
   24524:	cmp	r0, #0
   24528:	beq	24880 <crc32@@Base+0xb138>
   2452c:	add	r1, sp, #48	; 0x30
   24530:	bl	21a4c <crc32@@Base+0x8304>
   24534:	cmp	r0, #0
   24538:	bne	24864 <crc32@@Base+0xb11c>
   2453c:	movw	r3, #858	; 0x35a
   24540:	strh	r3, [r6, #16]
   24544:	ldr	r3, [r7, #12]
   24548:	mov	r2, #16
   2454c:	ldr	r0, [sp, #40]	; 0x28
   24550:	cmp	r3, #0
   24554:	ldr	r3, [sp, #48]	; 0x30
   24558:	ldr	r1, [sp, #44]	; 0x2c
   2455c:	str	r0, [r6, #20]
   24560:	str	r3, [r6, #24]
   24564:	ldrb	r3, [sp, #96]	; 0x60
   24568:	str	r1, [r6, #28]
   2456c:	and	r3, r3, #1
   24570:	str	r2, [r6]
   24574:	bne	236bc <crc32@@Base+0x9f74>
   24578:	cmp	r3, #0
   2457c:	str	r6, [r7, #12]
   24580:	str	r6, [r7, #16]
   24584:	bne	236d0 <crc32@@Base+0x9f88>
   24588:	b	23710 <crc32@@Base+0x9fc8>
   2458c:	mov	r3, #12
   24590:	ldr	r0, [sp, #20]
   24594:	mla	r6, r3, r6, sl
   24598:	movw	r2, #1626	; 0x65a
   2459c:	strh	r2, [r0, #16]
   245a0:	ldr	r2, [sp, #24]
   245a4:	ldrb	r3, [r6, #8]
   245a8:	ldr	r1, [r2, #12]
   245ac:	mov	r2, #16
   245b0:	str	r2, [r0]
   245b4:	str	r3, [r0, #28]
   245b8:	cmp	r1, #0
   245bc:	ldrb	r3, [sp, #96]	; 0x60
   245c0:	and	r3, r3, #1
   245c4:	beq	24608 <crc32@@Base+0xaec0>
   245c8:	ldr	r1, [sp, #24]
   245cc:	cmp	r3, #0
   245d0:	ldr	r3, [sp, #20]
   245d4:	ldr	r2, [r1, #16]
   245d8:	str	r3, [r2, #4]
   245dc:	str	r3, [r1, #16]
   245e0:	bne	236d0 <crc32@@Base+0x9f88>
   245e4:	b	23710 <crc32@@Base+0x9fc8>
   245e8:	movw	r2, #46284	; 0xb4cc
   245ec:	ldr	r3, [sp, #60]	; 0x3c
   245f0:	movt	r2, #3
   245f4:	b	244a4 <crc32@@Base+0xad5c>
   245f8:	movw	r2, #45976	; 0xb398
   245fc:	ldr	r3, [sp, #60]	; 0x3c
   24600:	movt	r2, #3
   24604:	b	244a4 <crc32@@Base+0xad5c>
   24608:	cmp	r3, #0
   2460c:	ldrd	r2, [sp, #20]
   24610:	str	r2, [r3, #12]
   24614:	str	r2, [r3, #16]
   24618:	bne	236d0 <crc32@@Base+0x9f88>
   2461c:	b	23710 <crc32@@Base+0x9fc8>
   24620:	movw	r2, #45928	; 0xb368
   24624:	ldr	r3, [sp, #60]	; 0x3c
   24628:	movt	r2, #3
   2462c:	mov	r1, #1
   24630:	ldr	r0, [r8]
   24634:	bl	122b4 <__fprintf_chk@plt>
   24638:	b	23710 <crc32@@Base+0x9fc8>
   2463c:	movw	r1, #49448	; 0xc128
   24640:	movt	r1, #3
   24644:	bl	1232c <fopen@plt>
   24648:	subs	sl, r0, #0
   2464c:	beq	247e0 <crc32@@Base+0xb098>
   24650:	mov	r2, #2
   24654:	mov	r1, r9
   24658:	bl	12158 <fseek@plt>
   2465c:	cmp	r0, #0
   24660:	blt	247d8 <crc32@@Base+0xb090>
   24664:	mov	r0, sl
   24668:	bl	12524 <ftell@plt>
   2466c:	subs	r3, r0, #0
   24670:	str	r3, [sp, #20]
   24674:	blt	247d8 <crc32@@Base+0xb090>
   24678:	mov	r2, r9
   2467c:	mov	r1, r9
   24680:	mov	r0, sl
   24684:	bl	12158 <fseek@plt>
   24688:	cmp	r0, #0
   2468c:	blt	247d8 <crc32@@Base+0xb090>
   24690:	ldr	r3, [sp, #20]
   24694:	mov	r0, #1
   24698:	add	r9, r3, #15
   2469c:	bic	r9, r9, #15
   246a0:	mov	r1, r9
   246a4:	bl	12518 <calloc@plt>
   246a8:	subs	r2, r0, #0
   246ac:	str	r2, [sp, #24]
   246b0:	beq	247d8 <crc32@@Base+0xb090>
   246b4:	mov	r3, sl
   246b8:	ldr	r2, [sp, #20]
   246bc:	mov	r1, #1
   246c0:	bl	12464 <fread@plt>
   246c4:	ldr	r3, [sp, #20]
   246c8:	cmp	r3, r0
   246cc:	bne	247d0 <crc32@@Base+0xb088>
   246d0:	ldr	r2, [sp, #24]
   246d4:	mov	r0, sl
   246d8:	str	r9, [r6, #12]
   246dc:	str	r2, [r6, #8]
   246e0:	bl	125fc <fclose@plt>
   246e4:	ldr	r9, [r6, #12]
   246e8:	ands	r3, r9, #15
   246ec:	beq	242ec <crc32@@Base+0xaba4>
   246f0:	ldr	r3, [sp, #60]	; 0x3c
   246f4:	mov	r1, #1
   246f8:	movw	r2, #46252	; 0xb4ac
   246fc:	ldr	r0, [r8]
   24700:	movt	r2, #3
   24704:	bl	122b4 <__fprintf_chk@plt>
   24708:	ldr	r0, [sp, #44]	; 0x2c
   2470c:	ldr	r9, [r6, #12]
   24710:	mov	r3, #0
   24714:	ldr	r1, [r6, #8]
   24718:	b	242f4 <crc32@@Base+0xabac>
   2471c:	add	r1, sp, #48	; 0x30
   24720:	bl	21a4c <crc32@@Base+0x8304>
   24724:	subs	r9, r0, #0
   24728:	bne	247b4 <crc32@@Base+0xb06c>
   2472c:	mov	r1, #32
   24730:	mov	r0, #1
   24734:	bl	12518 <calloc@plt>
   24738:	subs	r1, r0, #0
   2473c:	beq	23d3c <crc32@@Base+0xa5f4>
   24740:	ldr	lr, [sp, #48]	; 0x30
   24744:	mov	r2, #32
   24748:	ldr	r0, [sp, #44]	; 0x2c
   2474c:	mov	r3, r9
   24750:	movw	ip, #8401	; 0x20d1
   24754:	str	r1, [r6, #8]
   24758:	movt	ip, #16384	; 0x4000
   2475c:	str	lr, [r1, #4]
   24760:	str	r0, [r1, #20]
   24764:	mov	r9, r2
   24768:	str	ip, [r1]
   2476c:	str	r2, [r6, #12]
   24770:	b	242f4 <crc32@@Base+0xabac>
   24774:	movw	r2, #46088	; 0xb408
   24778:	ldr	r3, [sp, #60]	; 0x3c
   2477c:	movt	r2, #3
   24780:	b	244a4 <crc32@@Base+0xad5c>
   24784:	ldr	r0, [r8]
   24788:	movw	r2, #46540	; 0xb5cc
   2478c:	ldr	r3, [sp, #60]	; 0x3c
   24790:	movt	r2, #3
   24794:	str	r7, [sp]
   24798:	mov	r1, #1
   2479c:	bl	122b4 <__fprintf_chk@plt>
   247a0:	b	23710 <crc32@@Base+0x9fc8>
   247a4:	movw	r2, #46352	; 0xb510
   247a8:	ldr	r3, [sp, #60]	; 0x3c
   247ac:	movt	r2, #3
   247b0:	b	244a4 <crc32@@Base+0xad5c>
   247b4:	movw	r2, #46148	; 0xb444
   247b8:	ldr	r3, [sp, #60]	; 0x3c
   247bc:	movt	r2, #3
   247c0:	mov	r1, #1
   247c4:	ldr	r0, [r8]
   247c8:	bl	122b4 <__fprintf_chk@plt>
   247cc:	b	23d3c <crc32@@Base+0xa5f4>
   247d0:	ldr	r0, [sp, #24]
   247d4:	bl	12128 <free@plt>
   247d8:	mov	r0, sl
   247dc:	bl	125fc <fclose@plt>
   247e0:	ldr	r7, [sp, #28]
   247e4:	mov	r1, #1
   247e8:	ldr	r0, [r8]
   247ec:	movw	r2, #45100	; 0xb02c
   247f0:	movt	r2, #3
   247f4:	mov	r3, r7
   247f8:	bl	122b4 <__fprintf_chk@plt>
   247fc:	ldr	r0, [r8]
   24800:	ldr	r3, [sp, #60]	; 0x3c
   24804:	movw	r2, #46224	; 0xb490
   24808:	str	r7, [sp]
   2480c:	movt	r2, #3
   24810:	mov	r1, #1
   24814:	bl	122b4 <__fprintf_chk@plt>
   24818:	b	23d3c <crc32@@Base+0xa5f4>
   2481c:	bl	125fc <fclose@plt>
   24820:	movw	r0, #65044	; 0xfe14
   24824:	movt	r0, #4
   24828:	mov	r1, r4
   2482c:	movw	r2, #45100	; 0xb02c
   24830:	ldr	r3, [sp, #108]	; 0x6c
   24834:	ldr	r0, [r0]
   24838:	movt	r2, #3
   2483c:	bl	122b4 <__fprintf_chk@plt>
   24840:	mvn	r5, #21
   24844:	ldr	r7, [sp, #140]	; 0x8c
   24848:	b	23c30 <crc32@@Base+0xa4e8>
   2484c:	ldrb	r3, [sp, #96]	; 0x60
   24850:	str	r6, [r7, #12]
   24854:	tst	r3, #1
   24858:	str	r6, [r7, #16]
   2485c:	bne	236d0 <crc32@@Base+0x9f88>
   24860:	b	23710 <crc32@@Base+0x9fc8>
   24864:	movw	r2, #46452	; 0xb574
   24868:	ldr	r3, [sp, #60]	; 0x3c
   2486c:	movt	r2, #3
   24870:	mov	r1, #1
   24874:	ldr	r0, [r8]
   24878:	bl	122b4 <__fprintf_chk@plt>
   2487c:	b	23d3c <crc32@@Base+0xa5f4>
   24880:	movw	r2, #46420	; 0xb554
   24884:	ldr	r3, [sp, #60]	; 0x3c
   24888:	movt	r2, #3
   2488c:	b	244a4 <crc32@@Base+0xad5c>
   24890:	ldr	r3, [sp, #60]	; 0x3c
   24894:	movw	r2, #46680	; 0xb658
   24898:	ldr	r0, [r8]
   2489c:	movt	r2, #3
   248a0:	str	r1, [sp]
   248a4:	mov	r1, #1
   248a8:	bl	122b4 <__fprintf_chk@plt>
   248ac:	mov	r0, r6
   248b0:	bl	12128 <free@plt>
   248b4:	ldrb	r3, [sp, #96]	; 0x60
   248b8:	tst	r3, #1
   248bc:	bne	236d0 <crc32@@Base+0x9f88>
   248c0:	b	23710 <crc32@@Base+0x9fc8>
   248c4:	movw	r2, #46188	; 0xb46c
   248c8:	ldr	r3, [sp, #60]	; 0x3c
   248cc:	movt	r2, #3
   248d0:	mov	r1, #1
   248d4:	ldr	r0, [r8]
   248d8:	bl	122b4 <__fprintf_chk@plt>
   248dc:	b	23d3c <crc32@@Base+0xa5f4>
   248e0:	movw	r3, #65044	; 0xfe14
   248e4:	movt	r3, #4
   248e8:	movw	r0, #46644	; 0xb634
   248ec:	mov	r2, #35	; 0x23
   248f0:	ldr	r3, [r3]
   248f4:	movt	r0, #3
   248f8:	mov	r1, #1
   248fc:	mvn	r5, #21
   24900:	bl	12578 <fwrite@plt>
   24904:	ldr	r7, [sp, #140]	; 0x8c
   24908:	b	23c30 <crc32@@Base+0xa4e8>
   2490c:	movw	r2, #46496	; 0xb5a0
   24910:	ldr	r3, [sp, #60]	; 0x3c
   24914:	movt	r2, #3
   24918:	mov	r1, #1
   2491c:	ldr	r0, [r8]
   24920:	bl	122b4 <__fprintf_chk@plt>
   24924:	b	23ecc <crc32@@Base+0xa784>
   24928:	str	r7, [sp]
   2492c:	movw	r2, #46540	; 0xb5cc
   24930:	ldr	r3, [sp, #60]	; 0x3c
   24934:	movt	r2, #3
   24938:	mov	r1, #1
   2493c:	ldr	r0, [r8]
   24940:	bl	122b4 <__fprintf_chk@plt>
   24944:	b	23710 <crc32@@Base+0x9fc8>
   24948:	bl	12494 <__stack_chk_fail@plt>
   2494c:	cmp	r9, #78	; 0x4e
   24950:	bne	24088 <crc32@@Base+0xa940>
   24954:	ldrb	r3, [r7, #1]
   24958:	cmp	r3, #69	; 0x45
   2495c:	bne	24088 <crc32@@Base+0xa940>
   24960:	ldrb	r3, [r7, #2]
   24964:	cmp	r3, #81	; 0x51
   24968:	bne	24994 <crc32@@Base+0xb24c>
   2496c:	ldrb	r3, [r7, #3]
   24970:	cmp	r3, #0
   24974:	bne	24088 <crc32@@Base+0xa940>
   24978:	orr	r3, r6, #-822083584	; 0xcf000000
   2497c:	add	r2, sp, #60	; 0x3c
   24980:	orr	r3, r3, #8
   24984:	add	r1, sp, #52	; 0x34
   24988:	ldr	r0, [sp, #152]	; 0x98
   2498c:	bl	2200c <crc32@@Base+0x88c4>
   24990:	b	23fb8 <crc32@@Base+0xa870>
   24994:	cmp	r3, #90	; 0x5a
   24998:	bne	24088 <crc32@@Base+0xa940>
   2499c:	ldrb	r3, [r7, #3]
   249a0:	cmp	r3, #0
   249a4:	bne	24088 <crc32@@Base+0xa940>
   249a8:	orr	r3, r6, #-822083584	; 0xcf000000
   249ac:	b	243ac <crc32@@Base+0xac64>
   249b0:	b	22360 <crc32@@Base+0x8c18>
   249b4:	push	{r4, lr}
   249b8:	mov	r4, r0
   249bc:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   249c0:	mov	r0, r4
   249c4:	pop	{r4, lr}
   249c8:	b	124b8 <CRYPTO_free@plt>
   249cc:	b	123f8 <EVP_CIPHER_CTX_cleanup@plt>
   249d0:	subs	r0, r0, #12
   249d4:	movne	r0, #1
   249d8:	bx	lr
   249dc:	ldr	r3, [r0]
   249e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   249e4:	cmn	r3, #1
   249e8:	sub	sp, sp, #20
   249ec:	add	fp, r0, #512	; 0x200
   249f0:	beq	24adc <crc32@@Base+0xb394>
   249f4:	ldr	r2, [r0, #4]
   249f8:	cmn	r2, #1
   249fc:	beq	24adc <crc32@@Base+0xb394>
   24a00:	movw	r7, #5168	; 0x1430
   24a04:	movw	sl, #46920	; 0xb748
   24a08:	movw	r9, #46896	; 0xb730
   24a0c:	movw	r8, #46908	; 0xb73c
   24a10:	mov	r6, r0
   24a14:	movt	r7, #6
   24a18:	movt	sl, #3
   24a1c:	movt	r9, #3
   24a20:	movt	r8, #3
   24a24:	add	r5, r0, #20
   24a28:	b	24a3c <crc32@@Base+0xb2f4>
   24a2c:	add	r5, r5, #32
   24a30:	ldr	r2, [r5, #-16]
   24a34:	cmn	r2, #1
   24a38:	beq	24ac8 <crc32@@Base+0xb380>
   24a3c:	ldr	r1, [r7]
   24a40:	cmp	r1, #0
   24a44:	revne	r4, r3
   24a48:	revne	r1, r2
   24a4c:	moveq	r1, r2
   24a50:	moveq	r4, r3
   24a54:	cmp	r4, #512	; 0x200
   24a58:	bcs	24ae8 <crc32@@Base+0xb3a0>
   24a5c:	add	r1, r4, r1
   24a60:	cmp	r1, #512	; 0x200
   24a64:	bcs	24ae8 <crc32@@Base+0xb3a0>
   24a68:	str	r2, [sp]
   24a6c:	mov	r1, sl
   24a70:	mov	r2, r5
   24a74:	mov	r0, #1
   24a78:	bl	12770 <__printf_chk@plt>
   24a7c:	add	ip, r6, r4
   24a80:	ldr	r3, [r6, r4]
   24a84:	movw	r1, #46952	; 0xb768
   24a88:	ldr	r0, [ip, #8]
   24a8c:	movt	r1, #3
   24a90:	ldrh	r4, [ip, #6]
   24a94:	cmp	r3, #0
   24a98:	ldrb	lr, [ip, #5]
   24a9c:	ldrb	ip, [ip, #4]
   24aa0:	movne	r2, r9
   24aa4:	moveq	r2, r8
   24aa8:	str	r0, [sp, #12]
   24aac:	str	r4, [sp, #8]
   24ab0:	mov	r0, #1
   24ab4:	stm	sp, {ip, lr}
   24ab8:	bl	12770 <__printf_chk@plt>
   24abc:	ldr	r3, [r5, #12]
   24ac0:	cmn	r3, #1
   24ac4:	bne	24a2c <crc32@@Base+0xb2e4>
   24ac8:	ldr	r1, [r7]
   24acc:	mov	r0, fp
   24ad0:	add	sp, sp, #20
   24ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24ad8:	b	32a04 <crc32@@Base+0x192bc>
   24adc:	movw	r7, #5168	; 0x1430
   24ae0:	movt	r7, #6
   24ae4:	b	24ac8 <crc32@@Base+0xb380>
   24ae8:	mov	r0, #1
   24aec:	bl	121f4 <exit@plt>
   24af0:	ldr	r3, [r0]
   24af4:	movw	r2, #5168	; 0x1430
   24af8:	movt	r2, #6
   24afc:	cmn	r3, #1
   24b00:	ldr	r1, [r2]
   24b04:	beq	24b88 <crc32@@Base+0xb440>
   24b08:	ldr	ip, [r0, #4]
   24b0c:	cmn	ip, #1
   24b10:	beq	24b88 <crc32@@Base+0xb440>
   24b14:	push	{r4, r5, lr}
   24b18:	mov	lr, r0
   24b1c:	movw	r5, #510	; 0x1fe
   24b20:	b	24b48 <crc32@@Base+0xb400>
   24b24:	cmp	r3, #512	; 0x200
   24b28:	bcs	24b74 <crc32@@Base+0xb42c>
   24b2c:	ldr	r3, [lr, #32]
   24b30:	add	lr, lr, #32
   24b34:	cmn	r3, #1
   24b38:	beq	24b7c <crc32@@Base+0xb434>
   24b3c:	ldr	ip, [lr, #4]
   24b40:	cmn	ip, #1
   24b44:	beq	24b7c <crc32@@Base+0xb434>
   24b48:	cmp	r1, #0
   24b4c:	revne	ip, ip
   24b50:	revne	r3, r3
   24b54:	clz	r2, ip
   24b58:	sub	r4, r3, #1
   24b5c:	add	r3, r3, ip
   24b60:	lsr	r2, r2, #5
   24b64:	cmp	r4, r5
   24b68:	orrhi	r2, r2, #1
   24b6c:	cmp	r2, #0
   24b70:	beq	24b24 <crc32@@Base+0xb3dc>
   24b74:	mvn	r0, #0
   24b78:	pop	{r4, r5, pc}
   24b7c:	add	r0, r0, #512	; 0x200
   24b80:	pop	{r4, r5, lr}
   24b84:	b	3298c <crc32@@Base+0x19244>
   24b88:	add	r0, r0, #512	; 0x200
   24b8c:	b	3298c <crc32@@Base+0x19244>
   24b90:	movw	r2, #46896	; 0xb730
   24b94:	movt	r2, #3
   24b98:	push	{r4, r5, r6, r7, r8, lr}
   24b9c:	mov	r4, r0
   24ba0:	mov	r7, r1
   24ba4:	ldm	r2!, {r0, r1}
   24ba8:	mov	ip, #64	; 0x40
   24bac:	mov	lr, #12
   24bb0:	stm	r4, {ip, lr}
   24bb4:	mov	r5, r3
   24bb8:	ldrb	lr, [r2, #2]
   24bbc:	movw	r3, #49345	; 0xc0c1
   24bc0:	ldrh	r6, [r2]
   24bc4:	movt	r3, #49344	; 0xc0c0
   24bc8:	str	r0, [r4, #20]
   24bcc:	mov	r2, #256	; 0x100
   24bd0:	strb	lr, [r4, #30]
   24bd4:	add	r0, r4, #32
   24bd8:	str	r1, [r4, #24]
   24bdc:	mov	r1, #255	; 0xff
   24be0:	strh	r6, [r4, #28]
   24be4:	mov	r6, #0
   24be8:	str	r3, [r4, #64]	; 0x40
   24bec:	str	r2, [r4, #68]	; 0x44
   24bf0:	mov	r2, #32
   24bf4:	str	r6, [r4, #72]	; 0x48
   24bf8:	bl	122e4 <memset@plt>
   24bfc:	ldr	r1, [r7, #44]	; 0x2c
   24c00:	mov	r3, r6
   24c04:	ldr	r2, [r5, #56]	; 0x38
   24c08:	sub	r1, r1, #512	; 0x200
   24c0c:	add	r0, r4, #512	; 0x200
   24c10:	bl	32acc <crc32@@Base+0x19384>
   24c14:	ldr	r0, [r5, #64]	; 0x40
   24c18:	movw	r1, #47004	; 0xb79c
   24c1c:	mov	r2, #8
   24c20:	movt	r1, #3
   24c24:	bl	1217c <strncmp@plt>
   24c28:	cmp	r0, #0
   24c2c:	popne	{r4, r5, r6, r7, r8, pc}
   24c30:	ldr	r2, [r7, #44]	; 0x2c
   24c34:	movw	r3, #5168	; 0x1430
   24c38:	movt	r3, #6
   24c3c:	mov	r1, #1
   24c40:	add	r2, r2, #3
   24c44:	str	r1, [r3]
   24c48:	lsrs	r2, r2, #2
   24c4c:	popeq	{r4, r5, r6, r7, r8, pc}
   24c50:	add	r0, r0, #1
   24c54:	ldr	r3, [r4]
   24c58:	cmp	r2, r0
   24c5c:	rev	r3, r3
   24c60:	str	r3, [r4], #4
   24c64:	bne	24c50 <crc32@@Base+0xb508>
   24c68:	pop	{r4, r5, r6, r7, r8, pc}
   24c6c:	subs	r0, r0, #15
   24c70:	movne	r0, #1
   24c74:	bx	lr
   24c78:	bx	lr
   24c7c:	movw	r0, #47052	; 0xb7cc
   24c80:	movt	r0, #3
   24c84:	b	1226c <puts@plt>
   24c88:	movw	r3, #61168	; 0xeef0
   24c8c:	movt	r3, #4
   24c90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24c94:	movw	r4, #63816	; 0xf948
   24c98:	ldr	r2, [r3]
   24c9c:	sub	sp, sp, #44	; 0x2c
   24ca0:	movt	r4, #4
   24ca4:	movw	r1, #49448	; 0xc128
   24ca8:	movt	r1, #3
   24cac:	str	r3, [sp, #12]
   24cb0:	str	r0, [r4]
   24cb4:	mov	r3, #0
   24cb8:	str	r2, [sp, #36]	; 0x24
   24cbc:	str	r3, [sp, #16]
   24cc0:	str	r3, [sp, #28]
   24cc4:	bl	1232c <fopen@plt>
   24cc8:	subs	sl, r0, #0
   24ccc:	beq	24e08 <crc32@@Base+0xb6c0>
   24cd0:	movw	fp, #25384	; 0x6328
   24cd4:	movw	r6, #5692	; 0x163c
   24cd8:	movt	fp, #3
   24cdc:	movt	r6, #6
   24ce0:	mov	r3, sl
   24ce4:	mov	r2, #10
   24ce8:	add	r1, sp, #28
   24cec:	add	r0, sp, #16
   24cf0:	bl	12134 <__getdelim@plt>
   24cf4:	cmp	r0, #0
   24cf8:	ble	24db0 <crc32@@Base+0xb668>
   24cfc:	ldr	r9, [r4, #4]
   24d00:	add	r2, sp, #20
   24d04:	mov	r1, fp
   24d08:	ldr	r0, [sp, #16]
   24d0c:	add	r9, r9, #1
   24d10:	str	r9, [r4, #4]
   24d14:	bl	12224 <__strtok_r@plt>
   24d18:	cmp	r0, #0
   24d1c:	beq	24ce0 <crc32@@Base+0xb598>
   24d20:	movw	r7, #25388	; 0x632c
   24d24:	movw	r8, #47116	; 0xb80c
   24d28:	movt	r7, #3
   24d2c:	movt	r8, #3
   24d30:	str	r0, [sp, #16]
   24d34:	add	r2, sp, #24
   24d38:	mov	r1, r7
   24d3c:	bl	12224 <__strtok_r@plt>
   24d40:	subs	r5, r0, #0
   24d44:	beq	24ce0 <crc32@@Base+0xb598>
   24d48:	ldrb	r3, [r5]
   24d4c:	cmp	r3, #35	; 0x23
   24d50:	beq	24ce0 <crc32@@Base+0xb598>
   24d54:	add	r2, sp, #32
   24d58:	mov	r1, r8
   24d5c:	bl	126a4 <sscanf@plt>
   24d60:	cmp	r0, #0
   24d64:	beq	24de4 <crc32@@Base+0xb69c>
   24d68:	ldr	r0, [r4, #8]
   24d6c:	mov	r3, #24
   24d70:	ldr	ip, [r6]
   24d74:	sub	r1, r0, #1
   24d78:	ldr	r2, [sp, #32]
   24d7c:	lsr	r2, r2, r3
   24d80:	sub	r3, r3, #8
   24d84:	cmn	r3, #8
   24d88:	strb	r2, [r1, #1]!
   24d8c:	bne	24d78 <crc32@@Base+0xb630>
   24d90:	mov	r3, #0
   24d94:	add	r0, r0, #4
   24d98:	add	ip, ip, #4
   24d9c:	str	r0, [r4, #8]
   24da0:	str	ip, [r6]
   24da4:	mov	r0, r3
   24da8:	str	r3, [sp, #16]
   24dac:	b	24d34 <crc32@@Base+0xb5ec>
   24db0:	ldr	r0, [sp, #16]
   24db4:	cmp	r0, #0
   24db8:	beq	24dc0 <crc32@@Base+0xb678>
   24dbc:	bl	12128 <free@plt>
   24dc0:	mov	r0, sl
   24dc4:	bl	125fc <fclose@plt>
   24dc8:	ldr	r3, [sp, #12]
   24dcc:	ldr	r2, [sp, #36]	; 0x24
   24dd0:	ldr	r3, [r3]
   24dd4:	cmp	r2, r3
   24dd8:	bne	24e24 <crc32@@Base+0xb6dc>
   24ddc:	add	sp, sp, #44	; 0x2c
   24de0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24de4:	ldr	r2, [r4]
   24de8:	mov	r3, r9
   24dec:	str	r5, [sp]
   24df0:	movw	r1, #47120	; 0xb810
   24df4:	mov	r0, #1
   24df8:	movt	r1, #3
   24dfc:	bl	12770 <__printf_chk@plt>
   24e00:	mov	r0, #1
   24e04:	bl	121f4 <exit@plt>
   24e08:	ldr	r2, [r4]
   24e0c:	movw	r1, #47092	; 0xb7f4
   24e10:	mov	r0, #1
   24e14:	movt	r1, #3
   24e18:	bl	12770 <__printf_chk@plt>
   24e1c:	mov	r0, #1
   24e20:	bl	121f4 <exit@plt>
   24e24:	bl	12494 <__stack_chk_fail@plt>
   24e28:	push	{r4, r5, r6, r7, lr}
   24e2c:	movw	r5, #61168	; 0xeef0
   24e30:	movt	r5, #4
   24e34:	sub	sp, sp, #100	; 0x64
   24e38:	subs	r6, r0, #0
   24e3c:	ldr	r3, [r5]
   24e40:	str	r3, [sp, #92]	; 0x5c
   24e44:	beq	24f40 <crc32@@Base+0xb7f8>
   24e48:	ldr	r0, [r6, #72]	; 0x48
   24e4c:	cmp	r0, #0
   24e50:	movweq	r4, #5692	; 0x163c
   24e54:	movteq	r4, #6
   24e58:	beq	24eb0 <crc32@@Base+0xb768>
   24e5c:	movw	r1, #49448	; 0xc128
   24e60:	movt	r1, #3
   24e64:	bl	1232c <fopen@plt>
   24e68:	subs	r7, r0, #0
   24e6c:	beq	24f8c <crc32@@Base+0xb844>
   24e70:	bl	12488 <fileno@plt>
   24e74:	mov	r2, sp
   24e78:	mov	r1, r0
   24e7c:	mov	r0, #3
   24e80:	bl	12554 <__fxstat@plt>
   24e84:	cmn	r0, #1
   24e88:	beq	24fa8 <crc32@@Base+0xb860>
   24e8c:	ldr	r2, [sp, #44]	; 0x2c
   24e90:	movw	r4, #5692	; 0x163c
   24e94:	movt	r4, #6
   24e98:	mov	r0, r7
   24e9c:	adds	r3, r2, #63	; 0x3f
   24ea0:	addmi	r3, r2, #126	; 0x7e
   24ea4:	bic	r3, r3, #63	; 0x3f
   24ea8:	str	r3, [r4, #4]
   24eac:	bl	125fc <fclose@plt>
   24eb0:	ldr	r2, [r6, #40]	; 0x28
   24eb4:	cmp	r2, #2
   24eb8:	beq	24ef0 <crc32@@Base+0xb7a8>
   24ebc:	cmp	r2, #7
   24ec0:	beq	24f48 <crc32@@Base+0xb800>
   24ec4:	ldr	r3, [r4, #20]
   24ec8:	movw	r2, #63816	; 0xf948
   24ecc:	movt	r2, #4
   24ed0:	mov	r0, #0
   24ed4:	str	r3, [r2, #12]
   24ed8:	ldr	r2, [sp, #92]	; 0x5c
   24edc:	ldr	r3, [r5]
   24ee0:	cmp	r2, r3
   24ee4:	bne	24f88 <crc32@@Base+0xb840>
   24ee8:	add	sp, sp, #100	; 0x64
   24eec:	pop	{r4, r5, r6, r7, pc}
   24ef0:	ldr	r3, [r6, #56]	; 0x38
   24ef4:	mov	r1, #0
   24ef8:	ldr	r0, [r4, #4]
   24efc:	movt	r1, #2401	; 0x961
   24f00:	bic	r3, r3, #-16777216	; 0xff000000
   24f04:	str	r2, [r4, #8]
   24f08:	orr	r3, r3, #-2130706432	; 0x81000000
   24f0c:	str	r1, [r4, #24]
   24f10:	add	r3, r3, r0
   24f14:	mov	r2, #192	; 0xc0
   24f18:	mov	r1, #97	; 0x61
   24f1c:	movt	r2, #2401	; 0x961
   24f20:	str	r3, [r4, #20]
   24f24:	str	r2, [r4, #32]
   24f28:	mov	r2, #0
   24f2c:	str	r1, [r4, #12]
   24f30:	str	r2, [r4, #16]
   24f34:	str	r2, [r4, #28]
   24f38:	str	r2, [r4, #36]	; 0x24
   24f3c:	b	24ec8 <crc32@@Base+0xb780>
   24f40:	mov	r0, #1
   24f44:	b	24ed8 <crc32@@Base+0xb790>
   24f48:	mov	r1, #-2113929216	; 0x82000000
   24f4c:	str	r2, [r4, #8]
   24f50:	mov	r3, r1
   24f54:	movw	r2, #32960	; 0x80c0
   24f58:	str	r1, [r4, #20]
   24f5c:	movt	r2, #2323	; 0x913
   24f60:	mov	r0, #19
   24f64:	str	r2, [r4, #24]
   24f68:	str	r2, [r4, #32]
   24f6c:	mov	r1, #128	; 0x80
   24f70:	mov	r2, #0
   24f74:	str	r0, [r4, #12]
   24f78:	str	r1, [r4, #16]
   24f7c:	str	r2, [r4, #28]
   24f80:	str	r2, [r4, #36]	; 0x24
   24f84:	b	24ec8 <crc32@@Base+0xb780>
   24f88:	bl	12494 <__stack_chk_fail@plt>
   24f8c:	ldr	r2, [r6, #72]	; 0x48
   24f90:	movw	r1, #47160	; 0xb838
   24f94:	mov	r0, #1
   24f98:	movt	r1, #3
   24f9c:	bl	12770 <__printf_chk@plt>
   24fa0:	mov	r0, #1
   24fa4:	bl	121f4 <exit@plt>
   24fa8:	bl	1268c <__errno_location@plt>
   24fac:	ldr	r0, [r0]
   24fb0:	bl	12200 <strerror@plt>
   24fb4:	movw	r1, #47184	; 0xb850
   24fb8:	movt	r1, #3
   24fbc:	mov	r2, r0
   24fc0:	mov	r0, #1
   24fc4:	bl	12770 <__printf_chk@plt>
   24fc8:	mov	r0, #1
   24fcc:	bl	121f4 <exit@plt>
   24fd0:	movw	r3, #61168	; 0xeef0
   24fd4:	movt	r3, #4
   24fd8:	ldr	ip, [r0]
   24fdc:	movw	r2, #21930	; 0x55aa
   24fe0:	ldr	r1, [r3]
   24fe4:	movt	r2, #21930	; 0x55aa
   24fe8:	push	{lr}		; (str lr, [sp, #-4]!)
   24fec:	cmp	ip, r2
   24ff0:	sub	sp, sp, #12
   24ff4:	str	r2, [sp]
   24ff8:	str	r1, [sp, #4]
   24ffc:	bne	25034 <crc32@@Base+0xb8ec>
   25000:	ldr	r1, [r0, #4]
   25004:	movw	r2, #3585	; 0xe01
   25008:	movt	r2, #1
   2500c:	str	r2, [sp]
   25010:	cmp	r1, r2
   25014:	bne	25034 <crc32@@Base+0xb8ec>
   25018:	mov	r0, #0
   2501c:	ldr	r2, [sp, #4]
   25020:	ldr	r3, [r3]
   25024:	cmp	r2, r3
   25028:	bne	2503c <crc32@@Base+0xb8f4>
   2502c:	add	sp, sp, #12
   25030:	pop	{pc}		; (ldr pc, [sp], #4)
   25034:	mvn	r0, #10
   25038:	b	2501c <crc32@@Base+0xb8d4>
   2503c:	bl	12494 <__stack_chk_fail@plt>
   25040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25044:	movw	r7, #61168	; 0xeef0
   25048:	movt	r7, #4
   2504c:	sub	sp, sp, #20
   25050:	mov	r8, r1
   25054:	mov	r9, r0
   25058:	ldr	r3, [r7]
   2505c:	ldr	r0, [r1, #64]	; 0x40
   25060:	str	r3, [sp, #12]
   25064:	bl	24c88 <crc32@@Base+0xb540>
   25068:	ldr	r0, [r8, #68]	; 0x44
   2506c:	ldrb	r3, [r0]
   25070:	cmp	r3, #0
   25074:	bne	25274 <crc32@@Base+0xbb2c>
   25078:	ldr	r0, [r8, #72]	; 0x48
   2507c:	cmp	r0, #0
   25080:	beq	25284 <crc32@@Base+0xbb3c>
   25084:	movw	r1, #49448	; 0xc128
   25088:	movt	r1, #3
   2508c:	bl	1232c <fopen@plt>
   25090:	subs	r6, r0, #0
   25094:	beq	25298 <crc32@@Base+0xbb50>
   25098:	movw	r4, #5692	; 0x163c
   2509c:	movt	r4, #6
   250a0:	movw	sl, #63816	; 0xf948
   250a4:	movt	sl, #4
   250a8:	ldr	r2, [r4, #20]
   250ac:	ldr	r3, [r4, #4]
   250b0:	sub	r3, r2, r3
   250b4:	str	r3, [sl, #12]
   250b8:	cmp	r3, r2
   250bc:	bcs	25154 <crc32@@Base+0xba0c>
   250c0:	ldr	r2, [sl, #8]
   250c4:	mov	fp, #255	; 0xff
   250c8:	ldr	r1, [r4]
   250cc:	lsr	r0, r3, #24
   250d0:	mov	r5, #64	; 0x40
   250d4:	add	r2, r2, #4
   250d8:	strb	r3, [r2, #-1]
   250dc:	add	r1, r1, #4
   250e0:	strb	r0, [r2, #-4]
   250e4:	lsr	r0, r3, #16
   250e8:	str	r1, [r4]
   250ec:	lsr	r1, r3, #8
   250f0:	strb	r0, [r2, #-3]
   250f4:	add	r3, r3, r5
   250f8:	strb	r1, [r2, #-2]
   250fc:	strd	r2, [sl, #8]
   25100:	mov	r0, r6
   25104:	bl	121ac <fgetc@plt>
   25108:	cmn	r0, #1
   2510c:	uxtbne	fp, r0
   25110:	bne	25120 <crc32@@Base+0xb9d8>
   25114:	ldr	r3, [r4, #8]
   25118:	cmp	r3, #2
   2511c:	moveq	fp, #255	; 0xff
   25120:	ldr	r2, [sl, #8]
   25124:	subs	r5, r5, #1
   25128:	ldr	r3, [r4]
   2512c:	add	r1, r2, #1
   25130:	str	r1, [sl, #8]
   25134:	add	r3, r3, #1
   25138:	strb	fp, [r2]
   2513c:	str	r3, [r4]
   25140:	bne	25100 <crc32@@Base+0xb9b8>
   25144:	ldr	r3, [sl, #12]
   25148:	ldr	r2, [r4, #20]
   2514c:	cmp	r3, r2
   25150:	bcc	250c0 <crc32@@Base+0xb978>
   25154:	mov	r0, r6
   25158:	bl	125fc <fclose@plt>
   2515c:	ldr	r2, [pc, #404]	; 252f8 <crc32@@Base+0xbbb0>
   25160:	add	r0, r2, #16
   25164:	ldr	r3, [r2]
   25168:	lsr	r1, r3, #24
   2516c:	strb	r3, [sp, #11]
   25170:	strb	r1, [sp, #8]
   25174:	lsr	r1, r3, #16
   25178:	lsr	r3, r3, #8
   2517c:	strb	r1, [sp, #9]
   25180:	strb	r3, [sp, #10]
   25184:	ldr	r3, [sp, #8]
   25188:	str	r3, [r2], #4
   2518c:	cmp	r0, r2
   25190:	bne	25164 <crc32@@Base+0xba1c>
   25194:	ldr	ip, [sl, #8]
   25198:	ldr	lr, [r4]
   2519c:	ldr	r3, [pc, #340]	; 252f8 <crc32@@Base+0xbbb0>
   251a0:	sub	r2, ip, #1
   251a4:	ldrb	r1, [r3], #1
   251a8:	cmp	r3, r0
   251ac:	strb	r1, [r2, #1]!
   251b0:	bne	251a4 <crc32@@Base+0xba5c>
   251b4:	ldr	r2, [r4, #12]
   251b8:	add	lr, lr, #20
   251bc:	ldr	r1, [r4, #16]
   251c0:	mov	r0, #8
   251c4:	strb	r0, [ip, #16]
   251c8:	mov	r0, #0
   251cc:	strb	r2, [ip, #17]
   251d0:	mov	r2, lr
   251d4:	strb	r1, [ip, #18]
   251d8:	mov	r1, #64	; 0x40
   251dc:	strb	r1, [ip, #19]
   251e0:	movw	r1, #5804	; 0x16ac
   251e4:	movt	r1, #6
   251e8:	str	lr, [r4]
   251ec:	add	ip, ip, #20
   251f0:	str	ip, [sl, #8]
   251f4:	bl	252fc <crc32@@Base+0xbbb4>
   251f8:	ldr	r3, [sl, #8]
   251fc:	ldr	r5, [r4]
   25200:	mov	r2, #0
   25204:	add	r3, r3, #4
   25208:	add	r5, r5, #4
   2520c:	str	r5, [r4]
   25210:	mov	r1, r0
   25214:	mov	r0, r9
   25218:	strb	r1, [r3, #-1]
   2521c:	lsr	ip, r1, #24
   25220:	strb	ip, [r3, #-4]
   25224:	lsr	ip, r1, #16
   25228:	lsr	r1, r1, #8
   2522c:	strb	ip, [r3, #-3]
   25230:	strb	r1, [r3, #-2]
   25234:	mov	r1, r2
   25238:	str	r3, [sl, #8]
   2523c:	bl	124f4 <lseek@plt>
   25240:	mov	r2, r5
   25244:	mov	r0, r9
   25248:	movw	r1, #5804	; 0x16ac
   2524c:	movt	r1, #6
   25250:	bl	12608 <write@plt>
   25254:	cmp	r0, r5
   25258:	bne	252b8 <crc32@@Base+0xbb70>
   2525c:	ldr	r2, [sp, #12]
   25260:	ldr	r3, [r7]
   25264:	cmp	r2, r3
   25268:	bne	252b4 <crc32@@Base+0xbb6c>
   2526c:	add	sp, sp, #20
   25270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25274:	bl	24c88 <crc32@@Base+0xb540>
   25278:	ldr	r0, [r8, #72]	; 0x48
   2527c:	cmp	r0, #0
   25280:	bne	25084 <crc32@@Base+0xb93c>
   25284:	movw	r4, #5692	; 0x163c
   25288:	movw	sl, #63816	; 0xf948
   2528c:	movt	r4, #6
   25290:	movt	sl, #4
   25294:	b	2515c <crc32@@Base+0xba14>
   25298:	ldr	r2, [r8, #72]	; 0x48
   2529c:	movw	r1, #47160	; 0xb838
   252a0:	mov	r0, #1
   252a4:	movt	r1, #3
   252a8:	bl	12770 <__printf_chk@plt>
   252ac:	mov	r0, #1
   252b0:	bl	121f4 <exit@plt>
   252b4:	bl	12494 <__stack_chk_fail@plt>
   252b8:	movw	r2, #65044	; 0xfe14
   252bc:	movt	r2, #4
   252c0:	ldr	r5, [r8, #76]	; 0x4c
   252c4:	ldr	r4, [r2]
   252c8:	bl	1268c <__errno_location@plt>
   252cc:	ldr	r0, [r0]
   252d0:	bl	12200 <strerror@plt>
   252d4:	mov	r3, r5
   252d8:	movw	r2, #47236	; 0xb884
   252dc:	mov	r1, #1
   252e0:	movt	r2, #3
   252e4:	str	r0, [sp]
   252e8:	mov	r0, r4
   252ec:	bl	122b4 <__fprintf_chk@plt>
   252f0:	mov	r0, #1
   252f4:	bl	121f4 <exit@plt>
   252f8:	andeq	r1, r6, r4, asr r6
   252fc:	push	{r4, r5, r6, r7, r8, lr}
   25300:	movw	r8, #22764	; 0x58ec
   25304:	movt	r8, #21
   25308:	ldr	r4, [r8]
   2530c:	cmp	r4, #0
   25310:	bne	2535c <crc32@@Base+0xbc14>
   25314:	movw	r6, #7607	; 0x1db7
   25318:	add	r7, r8, #1024	; 0x400
   2531c:	movt	r6, #1217	; 0x4c1
   25320:	mov	r5, r8
   25324:	mov	r3, r4
   25328:	mov	ip, #8
   2532c:	cmp	r3, #0
   25330:	mov	lr, r3
   25334:	lsl	r3, r3, #1
   25338:	eorlt	r3, r3, r6
   2533c:	subs	ip, ip, #1
   25340:	bne	2532c <crc32@@Base+0xbbe4>
   25344:	str	r3, [r5, #4]!
   25348:	cmp	r5, r7
   2534c:	add	r4, r4, #16777216	; 0x1000000
   25350:	bne	25324 <crc32@@Base+0xbbdc>
   25354:	mov	r3, #1
   25358:	str	r3, [r8]
   2535c:	cmp	r2, #0
   25360:	mvn	r0, r0
   25364:	popeq	{r4, r5, r6, r7, r8, pc}
   25368:	add	r2, r1, r2
   2536c:	ldrb	r3, [r1], #1
   25370:	eor	r3, r3, r0, lsr #24
   25374:	cmp	r1, r2
   25378:	add	r3, r8, r3, lsl #2
   2537c:	ldr	r3, [r3, #4]
   25380:	eor	r0, r3, r0, lsl #8
   25384:	bne	2536c <crc32@@Base+0xbc24>
   25388:	pop	{r4, r5, r6, r7, r8, pc}
   2538c:	subs	r0, r0, #30
   25390:	movne	r0, #1
   25394:	bx	lr
   25398:	push	{r4, r5, r6, r7, r8, lr}
   2539c:	lsr	r2, r0, #3
   253a0:	lsr	r5, r0, #2
   253a4:	lsr	lr, r0, #5
   253a8:	lsr	r7, r0, #1
   253ac:	lsr	r4, r0, #4
   253b0:	eor	r3, r5, r2
   253b4:	lsr	r1, r0, #7
   253b8:	eor	r2, r2, r4
   253bc:	and	ip, r0, #1
   253c0:	eor	r3, r3, lr
   253c4:	eor	r4, r4, lr
   253c8:	eor	lr, lr, r7
   253cc:	lsr	r6, r0, #6
   253d0:	eor	ip, ip, r1
   253d4:	and	r8, r2, #1
   253d8:	and	lr, lr, #1
   253dc:	eor	r8, r8, ip
   253e0:	eor	r3, r3, r6
   253e4:	and	r4, r4, #1
   253e8:	eor	r0, r0, r2
   253ec:	eor	ip, ip, lr
   253f0:	eor	r2, r7, r5
   253f4:	and	lr, r6, #1
   253f8:	eor	r0, r0, r6
   253fc:	eor	ip, ip, lr
   25400:	eor	r1, r1, r4
   25404:	and	lr, r2, #1
   25408:	and	r3, r3, #1
   2540c:	eor	r2, r2, r0
   25410:	orr	r3, r3, r8, lsl #3
   25414:	eor	r1, r1, lr
   25418:	orr	r3, r3, ip, lsl #2
   2541c:	and	r0, r2, #1
   25420:	orr	r3, r3, r1, lsl #1
   25424:	orr	r0, r3, r0, lsl #4
   25428:	pop	{r4, r5, r6, r7, r8, pc}
   2542c:	push	{r4, r5, r6, r7, r8, lr}
   25430:	mov	r2, #216	; 0xd8
   25434:	mov	r1, #0
   25438:	mov	r7, r0
   2543c:	bl	122e4 <memset@plt>
   25440:	add	r5, r7, #508	; 0x1fc
   25444:	mov	r2, #288	; 0x120
   25448:	mov	r1, #255	; 0xff
   2544c:	add	r0, r7, #224	; 0xe0
   25450:	add	r5, r5, #3
   25454:	bl	122e4 <memset@plt>
   25458:	mov	r2, #512	; 0x200
   2545c:	mov	r1, #255	; 0xff
   25460:	add	r0, r7, #512	; 0x200
   25464:	bl	122e4 <memset@plt>
   25468:	sub	r4, r7, #1
   2546c:	mov	r2, #261120	; 0x3fc00
   25470:	mov	r1, #255	; 0xff
   25474:	add	r0, r7, #1024	; 0x400
   25478:	mov	r6, r5
   2547c:	bl	122e4 <memset@plt>
   25480:	mov	r2, #1024	; 0x400
   25484:	mov	r1, #0
   25488:	add	r0, r7, #262144	; 0x40000
   2548c:	bl	122e4 <memset@plt>
   25490:	mov	r0, #2112	; 0x840
   25494:	mov	r1, #64	; 0x40
   25498:	mov	r2, #2048	; 0x800
   2549c:	strd	r0, [r7, #24]
   254a0:	movw	r3, #16928	; 0x4220
   254a4:	mov	r0, #0
   254a8:	movt	r3, #17987	; 0x4643
   254ac:	mov	r1, #8
   254b0:	str	r3, [r7, #4]
   254b4:	strd	r0, [r7, #216]	; 0xd8
   254b8:	mov	r3, #6
   254bc:	str	r2, [r7, #20]
   254c0:	str	r3, [r7, #56]	; 0x38
   254c4:	mov	r3, #65280	; 0xff00
   254c8:	str	r2, [r7, #132]	; 0x84
   254cc:	movt	r3, #1
   254d0:	str	r3, [r7, #120]	; 0x78
   254d4:	mov	r3, #1
   254d8:	str	r3, [r7, #8]
   254dc:	str	r3, [r7, #172]	; 0xac
   254e0:	mov	r3, #128	; 0x80
   254e4:	str	r3, [r7, #104]	; 0x68
   254e8:	str	r3, [r7, #108]	; 0x6c
   254ec:	ldrb	r0, [r4, #1]!
   254f0:	bl	25398 <crc32@@Base+0xbc50>
   254f4:	cmp	r4, r6
   254f8:	strb	r0, [r5, #1]!
   254fc:	bne	254ec <crc32@@Base+0xbda4>
   25500:	pop	{r4, r5, r6, r7, r8, pc}
   25504:	push	{r4, r5, r6, lr}
   25508:	movw	r6, #47304	; 0xb8c8
   2550c:	sub	r5, r0, #4
   25510:	movt	r6, #3
   25514:	mov	r4, #0
   25518:	mov	r2, r4
   2551c:	ldr	r3, [r5, #4]!
   25520:	mov	r1, r6
   25524:	add	r4, r4, #1
   25528:	mov	r0, #1
   2552c:	bl	12770 <__printf_chk@plt>
   25530:	cmp	r4, #56	; 0x38
   25534:	bne	25518 <crc32@@Base+0xbdd0>
   25538:	pop	{r4, r5, r6, pc}
   2553c:	ldr	r2, [r0, #4]
   25540:	movw	r3, #16928	; 0x4220
   25544:	movt	r3, #17987	; 0x4643
   25548:	cmp	r2, r3
   2554c:	bne	255e8 <crc32@@Base+0xbea0>
   25550:	ldr	r3, [r0, #8]
   25554:	cmp	r3, #1
   25558:	bne	255e8 <crc32@@Base+0xbea0>
   2555c:	ldr	r3, [r0, #28]
   25560:	cmp	r3, #64	; 0x40
   25564:	bne	255e8 <crc32@@Base+0xbea0>
   25568:	ldr	r3, [r0, #56]	; 0x38
   2556c:	cmp	r3, #6
   25570:	bne	255e8 <crc32@@Base+0xbea0>
   25574:	ldr	r2, [r0, #120]	; 0x78
   25578:	mov	r3, #65280	; 0xff00
   2557c:	movt	r3, #1
   25580:	cmp	r2, r3
   25584:	bne	255e8 <crc32@@Base+0xbea0>
   25588:	ldr	r3, [r0, #172]	; 0xac
   2558c:	cmp	r3, #1
   25590:	bne	255e8 <crc32@@Base+0xbea0>
   25594:	ldr	r3, [r0, #216]	; 0xd8
   25598:	cmp	r3, #0
   2559c:	bne	255e8 <crc32@@Base+0xbea0>
   255a0:	ldr	r3, [r0, #220]	; 0xdc
   255a4:	cmp	r3, #8
   255a8:	bne	255e8 <crc32@@Base+0xbea0>
   255ac:	push	{r4, r5, r6, lr}
   255b0:	add	r5, r0, #508	; 0x1fc
   255b4:	add	r5, r5, #3
   255b8:	sub	r4, r0, #1
   255bc:	mov	r6, r5
   255c0:	b	255cc <crc32@@Base+0xbe84>
   255c4:	cmp	r4, r6
   255c8:	beq	255f0 <crc32@@Base+0xbea8>
   255cc:	ldrb	r0, [r4, #1]!
   255d0:	bl	25398 <crc32@@Base+0xbc50>
   255d4:	ldrb	r3, [r5, #1]!
   255d8:	cmp	r3, r0
   255dc:	beq	255c4 <crc32@@Base+0xbe7c>
   255e0:	mvn	r0, #0
   255e4:	pop	{r4, r5, r6, pc}
   255e8:	mvn	r0, #0
   255ec:	bx	lr
   255f0:	mov	r0, #0
   255f4:	pop	{r4, r5, r6, pc}
   255f8:	subs	r0, r0, #34	; 0x22
   255fc:	movne	r0, #1
   25600:	bx	lr
   25604:	cmp	r0, #0
   25608:	beq	25630 <crc32@@Base+0xbee8>
   2560c:	mov	r2, #1
   25610:	movw	ip, #21587	; 0x5453
   25614:	strb	r2, [r0, #74]	; 0x4a
   25618:	movt	ip, #12877	; 0x324d
   2561c:	str	r2, [r0, #100]	; 0x64
   25620:	str	ip, [r0]
   25624:	mov	ip, #0
   25628:	str	r2, [r0, #104]	; 0x68
   2562c:	str	ip, [r0, #252]	; 0xfc
   25630:	ldr	r1, [r1, #44]	; 0x2c
   25634:	ldr	ip, [r3, #56]	; 0x38
   25638:	ldr	r2, [r3, #60]	; 0x3c
   2563c:	cmp	r1, #255	; 0xff
   25640:	sub	r3, r1, #256	; 0x100
   25644:	str	r3, [r0, #76]	; 0x4c
   25648:	str	ip, [r0, #88]	; 0x58
   2564c:	movls	r3, #0
   25650:	str	r2, [r0, #80]	; 0x50
   25654:	bls	2567c <crc32@@Base+0xbf34>
   25658:	cmp	r3, #0
   2565c:	add	r2, r0, #256	; 0x100
   25660:	beq	2567c <crc32@@Base+0xbf34>
   25664:	add	r1, r0, r1
   25668:	mov	r3, #0
   2566c:	ldrb	ip, [r2], #1
   25670:	cmp	r1, r2
   25674:	add	r3, r3, ip
   25678:	bne	2566c <crc32@@Base+0xbf24>
   2567c:	str	r3, [r0, #68]	; 0x44
   25680:	bx	lr
   25684:	push	{r4, lr}
   25688:	movw	r1, #47328	; 0xb8e0
   2568c:	mov	r4, r0
   25690:	ldrb	r3, [r0, #73]	; 0x49
   25694:	ldrb	r2, [r0, #74]	; 0x4a
   25698:	movt	r1, #3
   2569c:	mov	r0, #1
   256a0:	bl	12770 <__printf_chk@plt>
   256a4:	ldr	r2, [r4, #76]	; 0x4c
   256a8:	movw	r1, #47376	; 0xb910
   256ac:	mov	r0, #1
   256b0:	movt	r1, #3
   256b4:	bl	12770 <__printf_chk@plt>
   256b8:	ldr	r2, [r4, #88]	; 0x58
   256bc:	movw	r1, #47404	; 0xb92c
   256c0:	mov	r0, #1
   256c4:	movt	r1, #3
   256c8:	bl	12770 <__printf_chk@plt>
   256cc:	ldr	r2, [r4, #80]	; 0x50
   256d0:	movw	r1, #47428	; 0xb944
   256d4:	mov	r0, #1
   256d8:	movt	r1, #3
   256dc:	bl	12770 <__printf_chk@plt>
   256e0:	ldr	r2, [r4, #68]	; 0x44
   256e4:	movw	r1, #47452	; 0xb95c
   256e8:	mov	r0, #1
   256ec:	movt	r1, #3
   256f0:	bl	12770 <__printf_chk@plt>
   256f4:	ldr	r2, [r4, #100]	; 0x64
   256f8:	movw	r1, #47476	; 0xb974
   256fc:	mov	r0, #1
   25700:	movt	r1, #3
   25704:	bl	12770 <__printf_chk@plt>
   25708:	ldr	r2, [r4, #252]	; 0xfc
   2570c:	movw	r1, #47500	; 0xb98c
   25710:	mov	r0, #1
   25714:	movt	r1, #3
   25718:	pop	{r4, lr}
   2571c:	b	12770 <__printf_chk@plt>
   25720:	cmp	r1, #255	; 0xff
   25724:	bls	2578c <crc32@@Base+0xc044>
   25728:	ldr	r2, [r0]
   2572c:	movw	r3, #21587	; 0x5453
   25730:	movt	r3, #12877	; 0x324d
   25734:	cmp	r2, r3
   25738:	bne	2578c <crc32@@Base+0xc044>
   2573c:	ldrb	r3, [r0, #74]	; 0x4a
   25740:	cmp	r3, #1
   25744:	bne	2578c <crc32@@Base+0xc044>
   25748:	ldr	r3, [r0, #84]	; 0x54
   2574c:	cmp	r3, #0
   25750:	bne	2578c <crc32@@Base+0xc044>
   25754:	ldr	r3, [r0, #92]	; 0x5c
   25758:	cmp	r3, #0
   2575c:	bne	2578c <crc32@@Base+0xc044>
   25760:	ldr	r3, [r0, #172]	; 0xac
   25764:	cmp	r3, #0
   25768:	bne	2578c <crc32@@Base+0xc044>
   2576c:	add	r3, r0, #172	; 0xac
   25770:	add	r2, r0, #248	; 0xf8
   25774:	b	25780 <crc32@@Base+0xc038>
   25778:	cmp	r3, r2
   2577c:	bxeq	lr
   25780:	ldr	r0, [r3, #4]!
   25784:	cmp	r0, #0
   25788:	beq	25778 <crc32@@Base+0xc030>
   2578c:	mvn	r0, #0
   25790:	bx	lr
   25794:	push	{r4, r5, r6, r7, r8, r9, lr}
   25798:	movw	r5, #61168	; 0xeef0
   2579c:	movt	r5, #4
   257a0:	sub	sp, sp, #524	; 0x20c
   257a4:	add	lr, sp, #260	; 0x104
   257a8:	add	ip, sp, #3
   257ac:	ldr	r4, [r5]
   257b0:	add	r8, sp, #516	; 0x204
   257b4:	mov	r7, ip
   257b8:	mov	r3, lr
   257bc:	mov	r6, #0
   257c0:	str	r4, [sp, #516]	; 0x204
   257c4:	and	r4, r6, #15
   257c8:	sub	r9, r3, lr
   257cc:	add	r6, r4, #1
   257d0:	strb	r9, [r7, #1]!
   257d4:	ldrb	r4, [r2, r4]
   257d8:	strb	r4, [r3], #1
   257dc:	cmp	r3, r8
   257e0:	bne	257c4 <crc32@@Base+0xc07c>
   257e4:	add	r3, sp, #4
   257e8:	sub	r2, lr, #1
   257ec:	add	r7, r3, #255	; 0xff
   257f0:	mov	r3, #0
   257f4:	ldrb	r4, [ip, #1]!
   257f8:	ldrb	lr, [r2, #1]!
   257fc:	add	r3, r3, r4
   25800:	cmp	r7, ip
   25804:	add	r3, r3, lr
   25808:	add	lr, sp, #520	; 0x208
   2580c:	uxtb	r3, r3
   25810:	add	lr, lr, r3
   25814:	uxth	r3, r3
   25818:	ldrb	r6, [lr, #-516]	; 0xfffffdfc
   2581c:	strb	r6, [ip]
   25820:	strb	r4, [lr, #-516]	; 0xfffffdfc
   25824:	bne	257f4 <crc32@@Base+0xc0ac>
   25828:	cmp	r1, #0
   2582c:	beq	258a0 <crc32@@Base+0xc158>
   25830:	add	r1, r0, r1
   25834:	sub	r0, r0, #1
   25838:	sub	r4, r1, #1
   2583c:	mov	r1, #0
   25840:	mov	r2, r1
   25844:	add	r3, r2, #1
   25848:	add	r2, sp, #520	; 0x208
   2584c:	add	lr, sp, #520	; 0x208
   25850:	ldrb	r6, [r0, #1]!
   25854:	uxtb	r3, r3
   25858:	add	ip, r2, r3
   2585c:	cmp	r4, r0
   25860:	uxth	r2, r3
   25864:	ldrb	r3, [ip, #-516]	; 0xfffffdfc
   25868:	add	r1, r1, r3
   2586c:	uxtb	r1, r1
   25870:	add	lr, lr, r1
   25874:	ldrb	r7, [lr, #-516]	; 0xfffffdfc
   25878:	strb	r7, [ip, #-516]	; 0xfffffdfc
   2587c:	strb	r3, [lr, #-516]	; 0xfffffdfc
   25880:	ldrb	ip, [ip, #-516]	; 0xfffffdfc
   25884:	add	r3, r3, ip
   25888:	add	ip, sp, #520	; 0x208
   2588c:	uxtab	r3, ip, r3
   25890:	ldrb	r3, [r3, #-516]	; 0xfffffdfc
   25894:	eor	r3, r3, r6
   25898:	strb	r3, [r0]
   2589c:	bne	25844 <crc32@@Base+0xc0fc>
   258a0:	ldr	r2, [sp, #516]	; 0x204
   258a4:	ldr	r3, [r5]
   258a8:	cmp	r2, r3
   258ac:	bne	258b8 <crc32@@Base+0xc170>
   258b0:	add	sp, sp, #524	; 0x20c
   258b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   258b8:	bl	12494 <__stack_chk_fail@plt>
   258bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   258c0:	mov	r5, r1
   258c4:	mov	r6, r0
   258c8:	mov	r1, r0
   258cc:	mov	r4, r2
   258d0:	mov	r7, #0
   258d4:	mov	r0, r5
   258d8:	str	r7, [r2]
   258dc:	mov	r2, #512	; 0x200
   258e0:	bl	1259c <memcpy@plt>
   258e4:	mov	r0, r5
   258e8:	movw	r2, #63964	; 0xf9dc
   258ec:	mov	r1, #512	; 0x200
   258f0:	movt	r2, #4
   258f4:	bl	25794 <crc32@@Base+0xc04c>
   258f8:	ldr	r3, [r5]
   258fc:	movw	r2, #43605	; 0xaa55
   25900:	movt	r2, #4080	; 0xff0
   25904:	cmp	r3, r2
   25908:	bne	25a14 <crc32@@Base+0xc2cc>
   2590c:	ldr	r3, [r5, #8]
   25910:	cmp	r3, r7
   25914:	beq	25a1c <crc32@@Base+0xc2d4>
   25918:	ldrh	r0, [r5, #12]
   2591c:	mov	r2, #61440	; 0xf000
   25920:	ldr	r8, [pc, #252]	; 25a24 <crc32@@Base+0xc2dc>
   25924:	movt	r2, #65535	; 0xffff
   25928:	mov	r3, r7
   2592c:	lsl	r1, r0, #9
   25930:	and	r0, r2, r0, lsl #10
   25934:	add	r7, r6, r1
   25938:	ubfx	r1, r1, #0, #11
   2593c:	orr	r0, r0, r1
   25940:	mov	lr, r8
   25944:	ldrb	r5, [r7]
   25948:	add	r0, r6, r0
   2594c:	b	25968 <crc32@@Base+0xc220>
   25950:	ldrb	ip, [r0]
   25954:	cmp	ip, r1
   25958:	beq	259c4 <crc32@@Base+0xc27c>
   2595c:	add	r3, r3, #1
   25960:	cmp	r3, #9
   25964:	beq	25a0c <crc32@@Base+0xc2c4>
   25968:	ldr	r2, [lr, #4]
   2596c:	add	lr, lr, #16
   25970:	ldrb	r1, [r2]
   25974:	cmp	r5, r1
   25978:	bne	25950 <crc32@@Base+0xc208>
   2597c:	ldrb	r6, [r7, #1]
   25980:	add	sl, r7, #1
   25984:	ldrb	ip, [r2, #1]
   25988:	add	r9, r2, #1
   2598c:	cmp	r6, ip
   25990:	bne	25950 <crc32@@Base+0xc208>
   25994:	ldrb	r6, [sl, #1]!
   25998:	ldrb	ip, [r9, #1]!
   2599c:	cmp	r6, ip
   259a0:	bne	25950 <crc32@@Base+0xc208>
   259a4:	ldrb	r6, [sl, #1]
   259a8:	ldrb	ip, [r9, #1]
   259ac:	cmp	r6, ip
   259b0:	bne	25950 <crc32@@Base+0xc208>
   259b4:	add	r3, r8, r3, lsl #4
   259b8:	mov	r0, #24
   259bc:	str	r3, [r4]
   259c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   259c4:	ldrb	r1, [r0, #1]
   259c8:	add	ip, r2, #1
   259cc:	ldrb	r2, [r2, #1]
   259d0:	add	r6, r0, #1
   259d4:	cmp	r1, r2
   259d8:	bne	2595c <crc32@@Base+0xc214>
   259dc:	ldrb	r1, [r6, #1]!
   259e0:	ldrb	r2, [ip, #1]!
   259e4:	cmp	r1, r2
   259e8:	bne	2595c <crc32@@Base+0xc214>
   259ec:	ldrb	r1, [r6, #1]
   259f0:	ldrb	r2, [ip, #1]
   259f4:	cmp	r1, r2
   259f8:	bne	2595c <crc32@@Base+0xc214>
   259fc:	add	r3, r8, r3, lsl #4
   25a00:	mov	r0, #25
   25a04:	str	r3, [r4]
   25a08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a0c:	mvn	r0, #0
   25a10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a14:	mvn	r0, #70	; 0x46
   25a18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a1c:	mvn	r0, #37	; 0x25
   25a20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   25a24:	andeq	pc, r4, ip, ror #19
   25a28:	push	{r4, r5, r6, r7, r8, lr}
   25a2c:	mov	r6, r0
   25a30:	ldr	r5, [pc, #56]	; 25a70 <crc32@@Base+0xc328>
   25a34:	mov	r4, #0
   25a38:	ldr	r1, [r5, r4, lsl #4]
   25a3c:	mov	r2, #6
   25a40:	mov	r0, r6
   25a44:	lsl	r7, r4, #4
   25a48:	bl	1217c <strncmp@plt>
   25a4c:	add	r4, r4, #1
   25a50:	cmp	r0, #0
   25a54:	beq	25a68 <crc32@@Base+0xc320>
   25a58:	cmp	r4, #9
   25a5c:	bne	25a38 <crc32@@Base+0xc2f0>
   25a60:	mov	r0, #0
   25a64:	pop	{r4, r5, r6, r7, r8, pc}
   25a68:	add	r0, r5, r7
   25a6c:	pop	{r4, r5, r6, r7, r8, pc}
   25a70:	andeq	pc, r4, ip, ror #19
   25a74:	push	{r4, r5, r6, r7, r8, lr}
   25a78:	mov	r4, r0
   25a7c:	ldr	r5, [r0, #64]	; 0x40
   25a80:	cmp	r5, #0
   25a84:	beq	25aa0 <crc32@@Base+0xc358>
   25a88:	mov	r0, r5
   25a8c:	bl	25a28 <crc32@@Base+0xc2e0>
   25a90:	cmp	r0, #0
   25a94:	beq	25aa0 <crc32@@Base+0xc358>
   25a98:	mov	r0, #0
   25a9c:	pop	{r4, r5, r6, r7, r8, pc}
   25aa0:	ldr	r0, [r4, #16]
   25aa4:	cmp	r0, #0
   25aa8:	bne	25a98 <crc32@@Base+0xc350>
   25aac:	ldr	r4, [r4, #12]
   25ab0:	cmp	r4, #0
   25ab4:	popne	{r4, r5, r6, r7, r8, pc}
   25ab8:	cmp	r5, #0
   25abc:	movw	r6, #65044	; 0xfe14
   25ac0:	movt	r6, #4
   25ac4:	mov	r1, #1
   25ac8:	movw	r3, #47568	; 0xb9d0
   25acc:	movw	r2, #47576	; 0xb9d8
   25ad0:	movt	r3, #3
   25ad4:	movt	r2, #3
   25ad8:	movne	r3, r5
   25adc:	ldr	r0, [r6]
   25ae0:	bl	122b4 <__fprintf_chk@plt>
   25ae4:	ldr	r3, [r6]
   25ae8:	movw	r0, #47620	; 0xba04
   25aec:	mov	r2, #20
   25af0:	movt	r0, #3
   25af4:	mov	r1, #1
   25af8:	bl	12578 <fwrite@plt>
   25afc:	ldr	r7, [pc, #56]	; 25b3c <crc32@@Base+0xc3f4>
   25b00:	movw	r5, #47644	; 0xba1c
   25b04:	movt	r5, #3
   25b08:	ldr	r3, [r7, r4, lsl #4]
   25b0c:	mov	r2, r5
   25b10:	add	r4, r4, #1
   25b14:	mov	r1, #1
   25b18:	ldr	r0, [r6]
   25b1c:	bl	122b4 <__fprintf_chk@plt>
   25b20:	cmp	r4, #9
   25b24:	bne	25b08 <crc32@@Base+0xc3c0>
   25b28:	ldr	r1, [r6]
   25b2c:	mov	r0, #10
   25b30:	bl	1256c <fputc@plt>
   25b34:	mov	r0, #1
   25b38:	pop	{r4, r5, r6, r7, r8, pc}
   25b3c:	andeq	pc, r4, ip, ror #19
   25b40:	ldr	r0, [r0, #64]	; 0x40
   25b44:	cmp	r0, #0
   25b48:	beq	25b5c <crc32@@Base+0xc414>
   25b4c:	push	{r4, lr}
   25b50:	bl	25a28 <crc32@@Base+0xc2e0>
   25b54:	ldr	r0, [r0, #4]
   25b58:	pop	{r4, pc}
   25b5c:	ldr	r3, [r0, #4]
   25b60:	udf	#0
   25b64:	ldr	r0, [r0, #64]	; 0x40
   25b68:	cmp	r0, #0
   25b6c:	beq	25b80 <crc32@@Base+0xc438>
   25b70:	push	{r4, lr}
   25b74:	bl	25a28 <crc32@@Base+0xc2e0>
   25b78:	ldr	r0, [r0, #8]
   25b7c:	pop	{r4, pc}
   25b80:	ldr	r3, [r0, #8]
   25b84:	udf	#0
   25b88:	ldr	r0, [r0, #64]	; 0x40
   25b8c:	cmp	r0, #0
   25b90:	beq	25ba4 <crc32@@Base+0xc45c>
   25b94:	push	{r4, lr}
   25b98:	bl	25a28 <crc32@@Base+0xc2e0>
   25b9c:	ldrb	r0, [r0, #12]
   25ba0:	pop	{r4, pc}
   25ba4:	ldrb	r3, [r0, #12]
   25ba8:	udf	#0
   25bac:	ldr	r3, [r2, #64]	; 0x40
   25bb0:	cmp	r3, #0
   25bb4:	beq	25cdc <crc32@@Base+0xc594>
   25bb8:	push	{r4, r5, r6, r7, r8, lr}
   25bbc:	mov	r4, r0
   25bc0:	mov	r0, r3
   25bc4:	mov	r5, r1
   25bc8:	mov	r6, r2
   25bcc:	bl	25a28 <crc32@@Base+0xc2e0>
   25bd0:	ldr	r3, [r0, #8]
   25bd4:	cmp	r5, r3
   25bd8:	bhi	25cfc <crc32@@Base+0xc5b4>
   25bdc:	mov	r2, #2048	; 0x800
   25be0:	mov	r1, #0
   25be4:	mov	r0, r4
   25be8:	bl	122e4 <memset@plt>
   25bec:	ldr	r0, [r6, #64]	; 0x40
   25bf0:	movw	r3, #43605	; 0xaa55
   25bf4:	movt	r3, #4080	; 0xff0
   25bf8:	cmp	r0, #0
   25bfc:	str	r3, [r4]
   25c00:	beq	25ce4 <crc32@@Base+0xc59c>
   25c04:	bl	25a28 <crc32@@Base+0xc2e0>
   25c08:	add	r1, r5, #508	; 0x1fc
   25c0c:	add	r1, r1, #3
   25c10:	add	ip, r4, #508	; 0x1fc
   25c14:	movw	r5, #506	; 0x1fa
   25c18:	mov	r7, #4
   25c1c:	lsr	r3, r1, #9
   25c20:	movw	r2, #63964	; 0xf9dc
   25c24:	add	r3, r3, #3
   25c28:	movt	r2, #4
   25c2c:	bic	r3, r3, #3
   25c30:	mov	r1, #512	; 0x200
   25c34:	uxth	r3, r3
   25c38:	add	lr, r3, #1024	; 0x400
   25c3c:	ldrb	r0, [r0, #12]
   25c40:	strh	r3, [r4, r5]
   25c44:	eor	r3, r0, #1
   25c48:	strh	r7, [r4, #12]
   25c4c:	str	r3, [r4, #8]
   25c50:	mov	r0, r4
   25c54:	strh	lr, [ip]
   25c58:	bl	25794 <crc32@@Base+0xc04c>
   25c5c:	ldr	r0, [r6, #64]	; 0x40
   25c60:	cmp	r0, #0
   25c64:	beq	25cf4 <crc32@@Base+0xc5ac>
   25c68:	bl	25a28 <crc32@@Base+0xc2e0>
   25c6c:	ldr	r3, [r0, #4]
   25c70:	ldr	r3, [r3]
   25c74:	str	r3, [r4, #2048]	; 0x800
   25c78:	ldr	r0, [r6, #64]	; 0x40
   25c7c:	cmp	r0, #0
   25c80:	beq	25cec <crc32@@Base+0xc5a4>
   25c84:	bl	25a28 <crc32@@Base+0xc2e0>
   25c88:	ldrb	r3, [r0, #12]
   25c8c:	cmp	r3, #0
   25c90:	beq	25cd4 <crc32@@Base+0xc58c>
   25c94:	ldr	r5, [r6, #104]	; 0x68
   25c98:	subs	r5, r5, #2048	; 0x800
   25c9c:	beq	25cd4 <crc32@@Base+0xc58c>
   25ca0:	movw	r7, #63964	; 0xf9dc
   25ca4:	add	r4, r4, #2048	; 0x800
   25ca8:	movt	r7, #4
   25cac:	cmp	r5, #512	; 0x200
   25cb0:	mov	r0, r4
   25cb4:	mov	r2, r7
   25cb8:	add	r4, r4, #512	; 0x200
   25cbc:	movcc	r6, r5
   25cc0:	movcs	r6, #512	; 0x200
   25cc4:	mov	r1, r6
   25cc8:	bl	25794 <crc32@@Base+0xc04c>
   25ccc:	subs	r5, r5, r6
   25cd0:	bne	25cac <crc32@@Base+0xc564>
   25cd4:	mov	r0, #0
   25cd8:	pop	{r4, r5, r6, r7, r8, pc}
   25cdc:	ldr	r3, [r3, #8]
   25ce0:	udf	#0
   25ce4:	ldrb	r3, [r0, #12]
   25ce8:	udf	#0
   25cec:	ldrb	r3, [r0, #12]
   25cf0:	udf	#0
   25cf4:	ldr	r3, [r0, #4]
   25cf8:	udf	#0
   25cfc:	mvn	r0, #27
   25d00:	pop	{r4, r5, r6, r7, r8, pc}
   25d04:	push	{r4, r5, lr}
   25d08:	movw	r4, #61168	; 0xeef0
   25d0c:	movt	r4, #4
   25d10:	sub	sp, sp, #524	; 0x20c
   25d14:	mov	r5, r2
   25d18:	add	r1, sp, #4
   25d1c:	ldr	r3, [r4]
   25d20:	mov	r2, sp
   25d24:	str	r3, [sp, #516]	; 0x204
   25d28:	bl	258bc <crc32@@Base+0xc174>
   25d2c:	cmn	r0, #38	; 0x26
   25d30:	moveq	r0, #0
   25d34:	beq	25d70 <crc32@@Base+0xc628>
   25d38:	cmp	r0, #0
   25d3c:	blt	25d70 <crc32@@Base+0xc628>
   25d40:	ldr	r0, [r5, #64]	; 0x40
   25d44:	cmp	r0, #0
   25d48:	beq	25d70 <crc32@@Base+0xc628>
   25d4c:	bl	25a28 <crc32@@Base+0xc2e0>
   25d50:	cmp	r0, #0
   25d54:	beq	25d88 <crc32@@Base+0xc640>
   25d58:	ldr	r3, [sp]
   25d5c:	cmp	r3, #0
   25d60:	beq	25d88 <crc32@@Base+0xc640>
   25d64:	ldr	r1, [r3, #4]
   25d68:	ldr	r0, [r0, #4]
   25d6c:	bl	1265c <strcmp@plt>
   25d70:	ldr	r2, [sp, #516]	; 0x204
   25d74:	ldr	r3, [r4]
   25d78:	cmp	r2, r3
   25d7c:	bne	25d90 <crc32@@Base+0xc648>
   25d80:	add	sp, sp, #524	; 0x20c
   25d84:	pop	{r4, r5, pc}
   25d88:	mvn	r0, #1
   25d8c:	b	25d70 <crc32@@Base+0xc628>
   25d90:	bl	12494 <__stack_chk_fail@plt>
   25d94:	push	{r4, lr}
   25d98:	movw	r4, #61168	; 0xeef0
   25d9c:	movt	r4, #4
   25da0:	sub	sp, sp, #520	; 0x208
   25da4:	add	r1, sp, #4
   25da8:	ldr	r3, [r4]
   25dac:	mov	r2, sp
   25db0:	str	r3, [sp, #516]	; 0x204
   25db4:	bl	258bc <crc32@@Base+0xc174>
   25db8:	cmn	r0, #38	; 0x26
   25dbc:	beq	25e1c <crc32@@Base+0xc6d4>
   25dc0:	cmp	r0, #0
   25dc4:	blt	25e34 <crc32@@Base+0xc6ec>
   25dc8:	ldr	r1, [sp]
   25dcc:	uxtb	r0, r0
   25dd0:	cmp	r0, #24
   25dd4:	movw	r2, #47648	; 0xba20
   25dd8:	movt	r2, #3
   25ddc:	movw	r3, #47656	; 0xba28
   25de0:	mov	r0, #1
   25de4:	movt	r3, #3
   25de8:	moveq	r3, r2
   25dec:	ldr	r2, [r1, #4]
   25df0:	movw	r1, #47696	; 0xba50
   25df4:	movt	r1, #3
   25df8:	bl	12770 <__printf_chk@plt>
   25dfc:	add	r3, sp, #508	; 0x1fc
   25e00:	add	r3, r3, #2
   25e04:	movw	r1, #47740	; 0xba7c
   25e08:	ldrh	r2, [r3]
   25e0c:	mov	r0, #1
   25e10:	movt	r1, #3
   25e14:	lsl	r2, r2, #9
   25e18:	bl	12770 <__printf_chk@plt>
   25e1c:	ldr	r2, [sp, #516]	; 0x204
   25e20:	ldr	r3, [r4]
   25e24:	cmp	r2, r3
   25e28:	bne	25e58 <crc32@@Base+0xc710>
   25e2c:	add	sp, sp, #520	; 0x208
   25e30:	pop	{r4, pc}
   25e34:	movw	r3, #65044	; 0xfe14
   25e38:	movt	r3, #4
   25e3c:	movw	r0, #47660	; 0xba2c
   25e40:	mov	r2, #33	; 0x21
   25e44:	ldr	r3, [r3]
   25e48:	mov	r1, #1
   25e4c:	movt	r0, #3
   25e50:	bl	12578 <fwrite@plt>
   25e54:	b	25e1c <crc32@@Base+0xc6d4>
   25e58:	bl	12494 <__stack_chk_fail@plt>
   25e5c:	push	{r4, r5, r6, r7, r8, lr}
   25e60:	subs	r4, r2, #0
   25e64:	popeq	{r4, r5, r6, r7, r8, pc}
   25e68:	movw	r7, #63964	; 0xf9dc
   25e6c:	add	r6, r0, r1
   25e70:	movt	r7, #4
   25e74:	cmp	r4, #512	; 0x200
   25e78:	mov	r0, r6
   25e7c:	mov	r2, r7
   25e80:	add	r6, r6, #512	; 0x200
   25e84:	movcc	r5, r4
   25e88:	movcs	r5, #512	; 0x200
   25e8c:	mov	r1, r5
   25e90:	bl	25794 <crc32@@Base+0xc04c>
   25e94:	subs	r4, r4, r5
   25e98:	bne	25e74 <crc32@@Base+0xc72c>
   25e9c:	pop	{r4, r5, r6, r7, r8, pc}
   25ea0:	mov	r3, #2048	; 0x800
   25ea4:	push	{r4, r5, r6, lr}
   25ea8:	mov	r5, r1
   25eac:	str	r3, [r1, #4]
   25eb0:	mov	r6, r0
   25eb4:	mov	r1, #1
   25eb8:	mov	r0, r3
   25ebc:	mov	r4, r2
   25ec0:	bl	12518 <calloc@plt>
   25ec4:	cmp	r0, #0
   25ec8:	str	r0, [r5, #8]
   25ecc:	beq	25f08 <crc32@@Base+0xc7c0>
   25ed0:	ldr	ip, [r6, #104]	; 0x68
   25ed4:	cmp	r4, #0
   25ed8:	rsbne	r2, r4, #0
   25edc:	mov	r1, #63488	; 0xf800
   25ee0:	add	r3, ip, #2032	; 0x7f0
   25ee4:	moveq	r4, #1
   25ee8:	add	r3, r3, #15
   25eec:	movt	r1, #65535	; 0xffff
   25ef0:	add	r0, r3, r4
   25ef4:	mvneq	r2, #0
   25ef8:	sub	r1, r1, ip
   25efc:	and	r0, r0, r2
   25f00:	add	r0, r0, r1
   25f04:	pop	{r4, r5, r6, pc}
   25f08:	mvn	r0, #11
   25f0c:	pop	{r4, r5, r6, pc}
   25f10:	subs	r0, r0, #23
   25f14:	movne	r0, #1
   25f18:	bx	lr
   25f1c:	push	{r4, r5, r6, lr}
   25f20:	mov	r5, r0
   25f24:	mov	r0, r3
   25f28:	mov	r4, r3
   25f2c:	bl	25b40 <crc32@@Base+0xc3f8>
   25f30:	ldr	r3, [r0]
   25f34:	mov	r0, r4
   25f38:	str	r3, [r5]
   25f3c:	bl	25b88 <crc32@@Base+0xc440>
   25f40:	cmp	r0, #0
   25f44:	popeq	{r4, r5, r6, pc}
   25f48:	ldr	r2, [r4, #104]	; 0x68
   25f4c:	mov	r0, r5
   25f50:	mov	r1, #4
   25f54:	pop	{r4, r5, r6, lr}
   25f58:	b	25e5c <crc32@@Base+0xc714>
   25f5c:	subs	r0, r0, #24
   25f60:	movne	r0, #1
   25f64:	bx	lr
   25f68:	mov	r2, #2048	; 0x800
   25f6c:	b	25ea0 <crc32@@Base+0xc758>
   25f70:	push	{r4, lr}
   25f74:	mov	r2, r3
   25f78:	ldr	r4, [r3, #104]	; 0x68
   25f7c:	sub	r4, r4, #2048	; 0x800
   25f80:	mov	r1, r4
   25f84:	bl	25bac <crc32@@Base+0xc464>
   25f88:	cmp	r0, #0
   25f8c:	popeq	{r4, pc}
   25f90:	mov	r2, r4
   25f94:	movw	r1, #47904	; 0xbb20
   25f98:	mov	r0, #1
   25f9c:	movt	r1, #3
   25fa0:	pop	{r4, lr}
   25fa4:	b	12770 <__printf_chk@plt>
   25fa8:	subs	r0, r0, #25
   25fac:	movne	r0, #1
   25fb0:	bx	lr
   25fb4:	push	{r4, r5, r6, lr}
   25fb8:	mov	r2, #2048	; 0x800
   25fbc:	mov	r4, r0
   25fc0:	mov	r5, r1
   25fc4:	bl	25ea0 <crc32@@Base+0xc758>
   25fc8:	ldr	r3, [r5, #4]
   25fcc:	ldr	r2, [r4, #104]	; 0x68
   25fd0:	add	r3, r3, r2
   25fd4:	add	r3, r3, r0
   25fd8:	str	r3, [r4, #108]	; 0x6c
   25fdc:	add	r0, r0, r3
   25fe0:	pop	{r4, r5, r6, pc}
   25fe4:	push	{r4, r5, r6, lr}
   25fe8:	mov	r2, r3
   25fec:	ldr	r4, [r3, #108]	; 0x6c
   25ff0:	mov	r5, r0
   25ff4:	mov	r1, r4
   25ff8:	bl	25bac <crc32@@Base+0xc464>
   25ffc:	cmp	r0, #0
   26000:	bne	26050 <crc32@@Base+0xc908>
   26004:	lsrs	r4, r4, #11
   26008:	popeq	{r4, r5, r6, pc}
   2600c:	sub	r3, r4, #-67108863	; 0xfc000001
   26010:	sub	r6, r5, #4096	; 0x1000
   26014:	add	r4, r5, r3, lsl #12
   26018:	add	r5, r5, r3, lsl #11
   2601c:	mov	r1, r5
   26020:	mov	r2, #2048	; 0x800
   26024:	mov	r0, r4
   26028:	sub	r5, r5, #2048	; 0x800
   2602c:	bl	12380 <memmove@plt>
   26030:	mov	r2, #2048	; 0x800
   26034:	mov	r1, #0
   26038:	add	r0, r4, r2
   2603c:	sub	r4, r4, #4096	; 0x1000
   26040:	bl	122e4 <memset@plt>
   26044:	cmp	r4, r6
   26048:	bne	2601c <crc32@@Base+0xc8d4>
   2604c:	pop	{r4, r5, r6, pc}
   26050:	mov	r2, r4
   26054:	movw	r1, #47904	; 0xbb20
   26058:	mov	r0, #1
   2605c:	movt	r1, #3
   26060:	bl	12770 <__printf_chk@plt>
   26064:	lsrs	r4, r4, #11
   26068:	bne	2600c <crc32@@Base+0xc8c4>
   2606c:	pop	{r4, r5, r6, pc}
   26070:	ldr	r2, [r0]
   26074:	ldr	r3, [r0, #8]
   26078:	cmp	r2, #0
   2607c:	beq	260a0 <crc32@@Base+0xc958>
   26080:	cmp	r3, #0
   26084:	movne	r3, #1
   26088:	bne	26098 <crc32@@Base+0xc950>
   2608c:	ldr	r3, [r0, #16]
   26090:	adds	r3, r3, #0
   26094:	movne	r3, #1
   26098:	mov	r0, r3
   2609c:	bx	lr
   260a0:	cmp	r3, #0
   260a4:	ldr	r2, [r0, #16]
   260a8:	beq	26098 <crc32@@Base+0xc950>
   260ac:	adds	r3, r2, #0
   260b0:	movne	r3, #1
   260b4:	mov	r0, r3
   260b8:	bx	lr
   260bc:	subs	r0, r0, #19
   260c0:	movne	r0, #1
   260c4:	bx	lr
   260c8:	subs	r0, r0, #35	; 0x23
   260cc:	movne	r0, #1
   260d0:	bx	lr
   260d4:	push	{r4, r5, lr}
   260d8:	movw	r4, #61168	; 0xeef0
   260dc:	movt	r4, #4
   260e0:	ldr	r3, [r0, #72]	; 0x48
   260e4:	sub	sp, sp, #100	; 0x64
   260e8:	ldr	r2, [r4]
   260ec:	cmp	r3, #0
   260f0:	str	r2, [sp, #92]	; 0x5c
   260f4:	beq	26138 <crc32@@Base+0xc9f0>
   260f8:	mov	r5, r1
   260fc:	mov	r2, sp
   26100:	mov	r1, r3
   26104:	mov	r0, #3
   26108:	bl	12620 <__xstat@plt>
   2610c:	cmp	r0, #0
   26110:	bne	26138 <crc32@@Base+0xc9f0>
   26114:	ldr	r3, [sp, #44]	; 0x2c
   26118:	movw	r2, #65532	; 0xfffc
   2611c:	movt	r2, #3
   26120:	cmp	r3, r2
   26124:	rsbls	r1, r3, #262144	; 0x40000
   26128:	strls	r1, [r5, #4]
   2612c:	movwls	r2, #25076	; 0x61f4
   26130:	movtls	r2, #25
   26134:	strls	r3, [r2]
   26138:	ldr	r2, [sp, #92]	; 0x5c
   2613c:	mov	r0, #0
   26140:	ldr	r3, [r4]
   26144:	cmp	r2, r3
   26148:	bne	26154 <crc32@@Base+0xca0c>
   2614c:	add	sp, sp, #100	; 0x64
   26150:	pop	{r4, r5, pc}
   26154:	bl	12494 <__stack_chk_fail@plt>
   26158:	push	{r4, r5, r6, r7, r8, lr}
   2615c:	mov	r7, r0
   26160:	mov	r5, r0
   26164:	ldr	r0, [r7, #64]!	; 0x40
   26168:	movw	r4, #61168	; 0xeef0
   2616c:	movt	r4, #4
   26170:	sub	sp, sp, #48	; 0x30
   26174:	movw	ip, #21313	; 0x5341
   26178:	ldr	r1, [r7, #4]
   2617c:	movt	ip, #12592	; 0x3130
   26180:	ldr	r2, [r7, #8]
   26184:	add	r3, sp, #12
   26188:	ldr	lr, [r4]
   2618c:	cmp	r0, ip
   26190:	stmia	r3!, {r0, r1, r2}
   26194:	str	lr, [sp, #44]	; 0x2c
   26198:	bne	26240 <crc32@@Base+0xcaf8>
   2619c:	ldrb	lr, [sp, #16]
   261a0:	cmp	lr, #0
   261a4:	beq	261f0 <crc32@@Base+0xcaa8>
   261a8:	cmp	lr, #1
   261ac:	bne	26240 <crc32@@Base+0xcaf8>
   261b0:	ldr	r3, [r7, #12]
   261b4:	add	r8, sp, #24
   261b8:	add	r6, sp, #41	; 0x29
   261bc:	mov	ip, r8
   261c0:	stmia	r8!, {r0, r1, r2, r3}
   261c4:	mov	r1, #0
   261c8:	ldr	r0, [r7, #16]
   261cc:	lsr	r7, r0, #16
   261d0:	str	r0, [r8]
   261d4:	ldrb	r3, [ip], #1
   261d8:	add	r3, r1, r3
   261dc:	cmp	ip, r6
   261e0:	uxth	r1, r3
   261e4:	bne	261d4 <crc32@@Base+0xca8c>
   261e8:	ldr	r2, [sp, #32]
   261ec:	b	2621c <crc32@@Base+0xcad4>
   261f0:	ldrh	r7, [sp, #22]
   261f4:	add	r0, sp, #21
   261f8:	add	r2, sp, #12
   261fc:	mov	r1, lr
   26200:	ldrb	r3, [r2], #1
   26204:	add	r3, r1, r3
   26208:	cmp	r2, r0
   2620c:	uxth	r1, r3
   26210:	bne	26200 <crc32@@Base+0xcab8>
   26214:	ldrh	r2, [sp, #18]
   26218:	lsl	r2, r2, #2
   2621c:	cmp	r7, r1
   26220:	bne	26240 <crc32@@Base+0xcaf8>
   26224:	cmp	r2, #63	; 0x3f
   26228:	ble	26240 <crc32@@Base+0xcaf8>
   2622c:	cmp	lr, #0
   26230:	beq	2625c <crc32@@Base+0xcb14>
   26234:	cmp	lr, #1
   26238:	moveq	r3, #262144	; 0x40000
   2623c:	beq	26260 <crc32@@Base+0xcb18>
   26240:	mvn	r0, #0
   26244:	ldr	r2, [sp, #44]	; 0x2c
   26248:	ldr	r3, [r4]
   2624c:	cmp	r2, r3
   26250:	bne	262b8 <crc32@@Base+0xcb70>
   26254:	add	sp, sp, #48	; 0x30
   26258:	pop	{r4, r5, r6, r7, r8, pc}
   2625c:	mov	r3, #65536	; 0x10000
   26260:	cmp	r3, r2
   26264:	bcc	26240 <crc32@@Base+0xcaf8>
   26268:	sub	r6, r2, #4
   2626c:	mov	r1, r5
   26270:	mov	r0, #0
   26274:	mov	r2, r6
   26278:	bl	252fc <crc32@@Base+0xbbb4>
   2627c:	ldr	r3, [r5, r6]
   26280:	mvn	r0, r0
   26284:	cmp	r0, r3
   26288:	moveq	r0, #0
   2628c:	beq	26244 <crc32@@Base+0xcafc>
   26290:	movw	r2, #65044	; 0xfe14
   26294:	movt	r2, #4
   26298:	str	r0, [sp]
   2629c:	mov	r1, #1
   262a0:	ldr	r0, [r2]
   262a4:	movw	r2, #48032	; 0xbba0
   262a8:	movt	r2, #3
   262ac:	bl	122b4 <__fprintf_chk@plt>
   262b0:	mvn	r0, #0
   262b4:	b	26244 <crc32@@Base+0xcafc>
   262b8:	bl	12494 <__stack_chk_fail@plt>
   262bc:	push	{r4, lr}
   262c0:	bl	26158 <crc32@@Base+0xca10>
   262c4:	cmp	r0, #0
   262c8:	beq	262dc <crc32@@Base+0xcb94>
   262cc:	movw	r0, #48108	; 0xbbec
   262d0:	movt	r0, #3
   262d4:	pop	{r4, lr}
   262d8:	b	1226c <puts@plt>
   262dc:	movw	r0, #48072	; 0xbbc8
   262e0:	movt	r0, #3
   262e4:	pop	{r4, lr}
   262e8:	b	1226c <puts@plt>
   262ec:	cmp	r1, #127	; 0x7f
   262f0:	ble	262f8 <crc32@@Base+0xcbb0>
   262f4:	b	26158 <crc32@@Base+0xca10>
   262f8:	mvn	r0, #0
   262fc:	bx	lr
   26300:	push	{r4, r5, r6, r7, r8, r9, lr}
   26304:	movw	r6, #61168	; 0xeef0
   26308:	movt	r6, #4
   2630c:	movw	r3, #25076	; 0x61f4
   26310:	movt	r3, #25
   26314:	sub	sp, sp, #44	; 0x2c
   26318:	ldr	r2, [r6]
   2631c:	subs	r7, r1, #0
   26320:	ldr	r4, [r3]
   26324:	mov	r5, r0
   26328:	str	r2, [sp, #36]	; 0x24
   2632c:	add	r9, r0, r4
   26330:	bne	26468 <crc32@@Base+0xcd20>
   26334:	rsb	r8, r4, #65536	; 0x10000
   26338:	mov	r2, r4
   2633c:	add	r1, r0, r8
   26340:	bl	12380 <memmove@plt>
   26344:	add	r4, r4, #3
   26348:	mov	r2, r8
   2634c:	mov	r1, #0
   26350:	mov	r0, r9
   26354:	bic	r4, r4, #3
   26358:	bl	122e4 <memset@plt>
   2635c:	add	r2, r4, #4
   26360:	cmp	r7, #0
   26364:	mov	r3, #0
   26368:	str	r2, [sp, #24]
   2636c:	str	r3, [sp, #8]
   26370:	lsr	r2, r2, #2
   26374:	movw	r1, #21313	; 0x5341
   26378:	strh	r2, [sp, #10]
   2637c:	movt	r1, #12592	; 0x3130
   26380:	mov	r2, #1
   26384:	str	r1, [sp, #4]
   26388:	movt	r2, #20
   2638c:	str	r1, [sp, #16]
   26390:	add	ip, r5, #64	; 0x40
   26394:	mov	r1, #20
   26398:	str	r3, [sp, #32]
   2639c:	str	r3, [sp, #12]
   263a0:	str	r2, [sp, #20]
   263a4:	str	r1, [sp, #28]
   263a8:	beq	26424 <crc32@@Base+0xccdc>
   263ac:	add	r0, sp, #32
   263b0:	mov	r1, #65	; 0x41
   263b4:	add	r2, sp, #16
   263b8:	b	263c0 <crc32@@Base+0xcc78>
   263bc:	ldrb	r1, [r2, #1]!
   263c0:	add	r3, r3, r1
   263c4:	cmp	r0, r2
   263c8:	uxth	r3, r3
   263cc:	bne	263bc <crc32@@Base+0xcc74>
   263d0:	add	lr, sp, #16
   263d4:	strh	r3, [sp, #34]	; 0x22
   263d8:	ldm	lr!, {r0, r1, r2, r3}
   263dc:	str	r0, [r5, #64]	; 0x40
   263e0:	ldr	r0, [lr]
   263e4:	str	r1, [ip, #4]
   263e8:	str	r2, [ip, #8]
   263ec:	str	r0, [ip, #16]
   263f0:	str	r3, [ip, #12]
   263f4:	mov	r2, r4
   263f8:	mov	r1, r5
   263fc:	mov	r0, #0
   26400:	bl	252fc <crc32@@Base+0xbbb4>
   26404:	ldr	r2, [sp, #36]	; 0x24
   26408:	ldr	r3, [r6]
   2640c:	cmp	r2, r3
   26410:	mvn	r0, r0
   26414:	str	r0, [r5, r4]
   26418:	bne	2647c <crc32@@Base+0xcd34>
   2641c:	add	sp, sp, #44	; 0x2c
   26420:	pop	{r4, r5, r6, r7, r8, r9, pc}
   26424:	add	r0, sp, #12
   26428:	mov	r1, r7
   2642c:	mov	r2, #65	; 0x41
   26430:	add	r3, sp, #4
   26434:	b	2643c <crc32@@Base+0xccf4>
   26438:	ldrb	r2, [r3, #1]!
   2643c:	add	r1, r1, r2
   26440:	cmp	r3, r0
   26444:	uxth	r1, r1
   26448:	bne	26438 <crc32@@Base+0xccf0>
   2644c:	add	r3, sp, #4
   26450:	strh	r1, [sp, #14]
   26454:	ldm	r3!, {r0, r1, r2}
   26458:	str	r0, [r5, #64]	; 0x40
   2645c:	str	r1, [ip, #4]
   26460:	str	r2, [ip, #8]
   26464:	b	263f4 <crc32@@Base+0xccac>
   26468:	rsb	r8, r4, #262144	; 0x40000
   2646c:	mov	r2, r4
   26470:	add	r1, r0, r8
   26474:	bl	12380 <memmove@plt>
   26478:	b	26344 <crc32@@Base+0xcbfc>
   2647c:	bl	12494 <__stack_chk_fail@plt>
   26480:	mov	r1, #0
   26484:	b	26300 <crc32@@Base+0xcbb8>
   26488:	mov	r1, #1
   2648c:	b	26300 <crc32@@Base+0xcbb8>
   26490:	push	{r4, r5, lr}
   26494:	movw	r4, #61168	; 0xeef0
   26498:	movt	r4, #4
   2649c:	ldr	r3, [r0, #72]	; 0x48
   264a0:	sub	sp, sp, #100	; 0x64
   264a4:	ldr	r2, [r4]
   264a8:	cmp	r3, #0
   264ac:	str	r2, [sp, #92]	; 0x5c
   264b0:	beq	264f0 <crc32@@Base+0xcda8>
   264b4:	mov	r5, r1
   264b8:	mov	r2, sp
   264bc:	mov	r1, r3
   264c0:	mov	r0, #3
   264c4:	bl	12620 <__xstat@plt>
   264c8:	cmp	r0, #0
   264cc:	bne	264f0 <crc32@@Base+0xcda8>
   264d0:	ldr	r3, [sp, #44]	; 0x2c
   264d4:	movw	r2, #65532	; 0xfffc
   264d8:	cmp	r3, r2
   264dc:	rsbls	r1, r3, #65536	; 0x10000
   264e0:	strls	r1, [r5, #4]
   264e4:	movwls	r2, #25076	; 0x61f4
   264e8:	movtls	r2, #25
   264ec:	strls	r3, [r2]
   264f0:	ldr	r2, [sp, #92]	; 0x5c
   264f4:	mov	r0, #0
   264f8:	ldr	r3, [r4]
   264fc:	cmp	r2, r3
   26500:	bne	2650c <crc32@@Base+0xcdc4>
   26504:	add	sp, sp, #100	; 0x64
   26508:	pop	{r4, r5, pc}
   2650c:	bl	12494 <__stack_chk_fail@plt>
   26510:	cmp	r2, #0
   26514:	bxle	lr
   26518:	movw	ip, #48232	; 0xbc68
   2651c:	add	r2, r1, r2
   26520:	movt	ip, #3
   26524:	ldrb	r3, [r1], #1
   26528:	eor	r3, r3, r0, lsr #8
   2652c:	cmp	r1, r2
   26530:	lsl	r3, r3, #1
   26534:	ldrh	r3, [ip, r3]
   26538:	eor	r0, r3, r0, lsl #8
   2653c:	uxth	r0, r0
   26540:	bne	26524 <crc32@@Base+0xcddc>
   26544:	bx	lr
   26548:	cmp	r1, #0
   2654c:	ble	26594 <crc32@@Base+0xce4c>
   26550:	push	{lr}		; (str lr, [sp, #-4]!)
   26554:	add	r1, r0, r1
   26558:	movw	lr, #48232	; 0xbc68
   2655c:	movt	lr, #3
   26560:	mov	ip, #0
   26564:	ldrb	r3, [r0], #1
   26568:	eor	r3, r3, ip, lsr #8
   2656c:	cmp	r0, r1
   26570:	lsl	r3, r3, #1
   26574:	ldrh	r3, [lr, r3]
   26578:	eor	ip, r3, ip, lsl #8
   2657c:	uxth	ip, ip
   26580:	bne	26564 <crc32@@Base+0xce1c>
   26584:	rev16	ip, ip
   26588:	uxth	ip, ip
   2658c:	strh	ip, [r2]
   26590:	pop	{pc}		; (ldr pc, [sp], #4)
   26594:	mov	ip, #0
   26598:	strh	ip, [r2]
   2659c:	bx	lr
   265a0:	ldr	r3, [r0, #12]
   265a4:	movw	r2, #31129	; 0x7999
   265a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   265ac:	sub	sp, sp, #100	; 0x64
   265b0:	ldr	r7, [r0, #16]
   265b4:	movt	r2, #23170	; 0x5a82
   265b8:	ldr	ip, [r0, #20]
   265bc:	ror	lr, r3, #2
   265c0:	ldr	r5, [r0, #24]
   265c4:	eor	r4, r7, lr
   265c8:	ldr	r9, [r0, #8]
   265cc:	eor	r6, r7, ip
   265d0:	ldr	r8, [r1]
   265d4:	and	r6, r6, r3
   265d8:	str	r5, [sp, #88]	; 0x58
   265dc:	add	r5, r5, r2
   265e0:	str	r0, [sp, #92]	; 0x5c
   265e4:	add	r5, r5, r9, ror #27
   265e8:	ldr	r0, [r1, #4]
   265ec:	and	r4, r4, r9
   265f0:	eor	r6, r6, ip
   265f4:	str	ip, [sp, #84]	; 0x54
   265f8:	rev	r8, r8
   265fc:	add	ip, ip, r2
   26600:	eor	r4, r4, r7
   26604:	add	r6, r6, r5
   26608:	add	r5, r8, r6
   2660c:	rev	fp, r0
   26610:	ldr	sl, [r1, #8]
   26614:	add	r4, r4, ip
   26618:	ror	ip, r9, #2
   2661c:	add	r4, r4, fp
   26620:	eor	r6, lr, ip
   26624:	add	r4, r4, r5, ror #27
   26628:	ror	r0, r5, #2
   2662c:	str	r8, [sp, #16]
   26630:	str	r7, [sp, #80]	; 0x50
   26634:	rev	sl, sl
   26638:	ldr	r8, [r1, #12]
   2663c:	and	r6, r6, r5
   26640:	add	r7, r7, r2
   26644:	eor	r5, ip, r0
   26648:	add	r7, r7, sl
   2664c:	eor	r6, r6, lr
   26650:	str	fp, [sp, #20]
   26654:	rev	r8, r8
   26658:	ror	fp, r4, #2
   2665c:	str	sl, [sp, #24]
   26660:	and	r5, r5, r4
   26664:	ldr	sl, [r1, #16]
   26668:	add	lr, lr, r2
   2666c:	add	r6, r6, r7
   26670:	add	r6, r6, r4, ror #27
   26674:	str	r8, [sp, #4]
   26678:	add	lr, lr, r8
   2667c:	eor	r7, r0, fp
   26680:	ldr	r8, [r1, #20]
   26684:	eor	r5, r5, ip
   26688:	add	r5, r5, lr
   2668c:	add	ip, ip, r2
   26690:	rev	lr, sl
   26694:	and	r7, r7, r6
   26698:	add	r5, r5, r6, ror #27
   2669c:	str	lr, [sp, #8]
   266a0:	ror	r6, r6, #2
   266a4:	add	ip, ip, lr
   266a8:	eor	r7, r7, r0
   266ac:	rev	lr, r8
   266b0:	ldr	r8, [r1, #24]
   266b4:	eor	r4, fp, r6
   266b8:	add	r7, r7, ip
   266bc:	str	lr, [sp, #32]
   266c0:	add	r7, r7, r5, ror #27
   266c4:	add	ip, lr, r2
   266c8:	and	r4, r4, r5
   266cc:	ror	lr, r5, #2
   266d0:	rev	r5, r8
   266d4:	add	r0, ip, r0
   266d8:	eor	r4, r4, fp
   266dc:	eor	ip, r6, lr
   266e0:	mov	r8, r5
   266e4:	ldr	r5, [r1, #28]
   266e8:	add	sl, r8, r2
   266ec:	and	ip, ip, r7
   266f0:	rev	r5, r5
   266f4:	add	r4, r4, r0
   266f8:	ror	r0, r7, #2
   266fc:	add	r4, r4, r7, ror #27
   26700:	add	fp, sl, fp
   26704:	eor	sl, ip, r6
   26708:	mov	ip, r5
   2670c:	eor	r5, lr, r0
   26710:	ldr	r7, [r1, #32]
   26714:	and	r5, r5, r4
   26718:	str	r9, [sp, #72]	; 0x48
   2671c:	add	sl, sl, fp
   26720:	add	r9, ip, r2
   26724:	add	sl, sl, r4, ror #27
   26728:	str	ip, [sp, #56]	; 0x38
   2672c:	ror	r4, r4, #2
   26730:	add	r6, r9, r6
   26734:	eor	ip, r5, lr
   26738:	eor	r9, r0, r4
   2673c:	rev	r5, r7
   26740:	add	ip, ip, r6
   26744:	ldr	r6, [r1, #36]	; 0x24
   26748:	add	ip, ip, sl, ror #27
   2674c:	str	r5, [sp, #12]
   26750:	and	r9, r9, sl
   26754:	add	r5, r5, r2
   26758:	ror	sl, sl, #2
   2675c:	add	r5, r5, lr
   26760:	eor	r9, r9, r0
   26764:	rev	lr, r6
   26768:	eor	r6, r4, sl
   2676c:	add	r7, lr, r2
   26770:	str	r8, [sp, #28]
   26774:	add	r9, r9, r5
   26778:	ldr	r8, [r1, #40]	; 0x28
   2677c:	and	r6, r6, ip
   26780:	add	r9, r9, ip, ror #27
   26784:	str	r3, [sp, #76]	; 0x4c
   26788:	eor	r6, r6, r4
   2678c:	str	lr, [sp, #40]	; 0x28
   26790:	add	r0, r7, r0
   26794:	ror	lr, ip, #2
   26798:	ldr	r7, [r1, #44]	; 0x2c
   2679c:	rev	r8, r8
   267a0:	eor	r5, sl, lr
   267a4:	add	r0, r6, r0
   267a8:	add	fp, r8, r2
   267ac:	add	r0, r0, r9, ror #27
   267b0:	and	r5, r5, r9
   267b4:	ror	r9, r9, #2
   267b8:	rev	r3, r7
   267bc:	eor	r5, r5, sl
   267c0:	add	r4, fp, r4
   267c4:	eor	fp, lr, r9
   267c8:	str	r8, [sp, #36]	; 0x24
   267cc:	add	r4, r5, r4
   267d0:	ldr	r8, [r1, #48]	; 0x30
   267d4:	add	r5, r3, r2
   267d8:	and	fp, fp, r0
   267dc:	add	r4, r4, r0, ror #27
   267e0:	ldr	r7, [r1, #52]	; 0x34
   267e4:	ror	r0, r0, #2
   267e8:	add	sl, r5, sl
   267ec:	eor	fp, fp, lr
   267f0:	rev	r6, r8
   267f4:	eor	ip, r9, r0
   267f8:	add	fp, fp, sl
   267fc:	str	r6, [sp, #44]	; 0x2c
   26800:	ror	sl, r4, #2
   26804:	add	fp, fp, r4, ror #27
   26808:	add	r6, r6, r2
   2680c:	and	ip, ip, r4
   26810:	rev	r4, r7
   26814:	ldr	r7, [r1, #56]	; 0x38
   26818:	str	r3, [sp, #60]	; 0x3c
   2681c:	add	lr, r6, lr
   26820:	ldr	r3, [sp, #24]
   26824:	eor	r6, ip, r9
   26828:	ldr	ip, [sp, #16]
   2682c:	add	r8, r4, r2
   26830:	eor	r5, r0, sl
   26834:	add	r6, r6, lr
   26838:	rev	lr, r7
   2683c:	ldr	r7, [r1, #60]	; 0x3c
   26840:	ldr	r1, [sp, #12]
   26844:	add	r9, r8, r9
   26848:	and	r5, r5, fp
   2684c:	eor	r8, ip, r3
   26850:	add	r6, r6, fp, ror #27
   26854:	eor	r5, r5, r0
   26858:	ror	fp, fp, #2
   2685c:	eor	r8, r8, r1
   26860:	add	r1, lr, r2
   26864:	eor	ip, sl, fp
   26868:	add	r0, r1, r0
   2686c:	add	r5, r5, r9
   26870:	ldr	r1, [sp, #4]
   26874:	rev	r9, r7
   26878:	ldr	r7, [sp, #20]
   2687c:	add	r5, r5, r6, ror #27
   26880:	str	lr, [sp, #16]
   26884:	and	ip, ip, r6
   26888:	ror	lr, r6, #2
   2688c:	ldr	r6, [sp, #40]	; 0x28
   26890:	eor	r1, r7, r1
   26894:	str	r4, [sp, #48]	; 0x30
   26898:	eor	r8, r8, r4
   2689c:	eor	ip, ip, sl
   268a0:	eor	r4, fp, lr
   268a4:	eor	r1, r1, r6
   268a8:	ldr	r6, [sp, #8]
   268ac:	add	ip, ip, r0
   268b0:	and	r4, r4, r5
   268b4:	add	r0, r9, r2
   268b8:	ror	r8, r8, #31
   268bc:	eor	r4, r4, fp
   268c0:	add	r0, r0, sl
   268c4:	mov	sl, r3
   268c8:	eor	sl, sl, r6
   268cc:	ldr	r6, [sp, #16]
   268d0:	mov	r7, r9
   268d4:	add	r0, r4, r0
   268d8:	ror	r9, r5, #2
   268dc:	add	r4, r8, r2
   268e0:	add	ip, ip, r5, ror #27
   268e4:	str	r8, [sp, #20]
   268e8:	eor	r5, lr, r9
   268ec:	ldr	r8, [sp, #36]	; 0x24
   268f0:	add	fp, r4, fp
   268f4:	eor	r1, r1, r6
   268f8:	ldr	r4, [sp, #4]
   268fc:	and	r5, r5, ip
   26900:	ldr	r6, [sp, #32]
   26904:	eor	sl, sl, r8
   26908:	ldr	r3, [sp, #60]	; 0x3c
   2690c:	eor	r5, r5, lr
   26910:	eor	r8, r4, r6
   26914:	add	r5, r5, fp
   26918:	eor	r8, r8, r3
   2691c:	ldr	fp, [sp, #8]
   26920:	ldr	r3, [sp, #28]
   26924:	add	r0, r0, ip, ror #27
   26928:	str	r7, [sp, #52]	; 0x34
   2692c:	ror	ip, ip, #2
   26930:	eor	sl, sl, r7
   26934:	eor	r7, fp, r3
   26938:	ldr	fp, [sp, #20]
   2693c:	ror	r1, r1, #31
   26940:	eor	r4, r9, ip
   26944:	add	r6, r1, r2
   26948:	and	r4, r4, r0
   2694c:	eor	r8, r8, fp
   26950:	add	r6, r6, lr
   26954:	ldr	fp, [sp, #44]	; 0x2c
   26958:	eor	r4, r4, r9
   2695c:	add	r5, r5, r0, ror #27
   26960:	str	r1, [sp, #24]
   26964:	ror	r0, r0, #2
   26968:	ldr	r1, [sp, #56]	; 0x38
   2696c:	ror	sl, sl, #31
   26970:	add	r4, r4, r6
   26974:	str	sl, [sp, #28]
   26978:	ldr	r6, [sp, #32]
   2697c:	ror	r8, r8, #31
   26980:	str	r8, [sp, #8]
   26984:	eor	lr, ip, r0
   26988:	ldr	r8, [sp, #24]
   2698c:	eor	r7, r7, fp
   26990:	add	fp, sl, r2
   26994:	and	lr, lr, r5
   26998:	eor	r7, r7, r8
   2699c:	add	r9, fp, r9
   269a0:	ldr	fp, [sp, #8]
   269a4:	eor	lr, lr, ip
   269a8:	ldr	r8, [sp, #48]	; 0x30
   269ac:	add	lr, lr, r9
   269b0:	add	r2, fp, r2
   269b4:	ror	r9, r7, #31
   269b8:	ldr	fp, [sp, #12]
   269bc:	eor	r6, r6, r1
   269c0:	ror	sl, r5, #2
   269c4:	eor	r6, r6, r8
   269c8:	eor	r8, r3, fp
   269cc:	mov	r3, r9
   269d0:	ldr	r9, [sp, #28]
   269d4:	add	r5, r4, r5, ror #27
   269d8:	eor	r4, r0, sl
   269dc:	add	r2, r2, ip
   269e0:	and	r4, r4, r5
   269e4:	eor	r6, r6, r9
   269e8:	ldr	r9, [sp, #16]
   269ec:	add	lr, lr, r5, ror #27
   269f0:	eor	ip, r4, r0
   269f4:	ror	r5, r5, #2
   269f8:	movw	r4, #60321	; 0xeba1
   269fc:	movt	r4, #28377	; 0x6ed9
   26a00:	add	r7, r3, r4
   26a04:	eor	r8, r8, r9
   26a08:	eor	r9, sl, r5
   26a0c:	str	r4, [sp, #4]
   26a10:	eor	r9, r9, lr
   26a14:	add	r0, r7, r0
   26a18:	ldr	r4, [sp, #8]
   26a1c:	add	ip, ip, r2
   26a20:	add	r0, r9, r0
   26a24:	mov	r2, r1
   26a28:	ldr	r9, [sp, #4]
   26a2c:	ror	fp, r6, #31
   26a30:	ldr	r1, [sp, #40]	; 0x28
   26a34:	add	ip, ip, lr, ror #27
   26a38:	ldr	r6, [sp, #52]	; 0x34
   26a3c:	ror	lr, lr, #2
   26a40:	ldr	r7, [sp, #12]
   26a44:	eor	r2, r2, r1
   26a48:	eor	r8, r8, r4
   26a4c:	add	r4, fp, r9
   26a50:	ldr	r9, [sp, #36]	; 0x24
   26a54:	eor	r2, r2, r6
   26a58:	add	sl, r4, sl
   26a5c:	eor	r6, r5, lr
   26a60:	ldr	r4, [sp, #20]
   26a64:	eor	r6, r6, ip
   26a68:	eor	r7, r7, r9
   26a6c:	ldr	r9, [sp, #4]
   26a70:	add	r0, r0, ip, ror #27
   26a74:	ror	r8, r8, #31
   26a78:	ror	ip, ip, #2
   26a7c:	eor	r7, r7, r4
   26a80:	add	sl, r6, sl
   26a84:	mov	r6, r1
   26a88:	ldr	r1, [sp, #60]	; 0x3c
   26a8c:	add	r4, r8, r9
   26a90:	str	r8, [sp, #32]
   26a94:	eor	r2, r2, r3
   26a98:	str	r3, [sp, #56]	; 0x38
   26a9c:	eor	r8, lr, ip
   26aa0:	ldr	r3, [sp, #24]
   26aa4:	eor	r7, r7, fp
   26aa8:	eor	r8, r8, r0
   26aac:	eor	r6, r6, r1
   26ab0:	add	r5, r4, r5
   26ab4:	eor	r6, r6, r3
   26ab8:	add	r5, r8, r5
   26abc:	ldr	r3, [sp, #44]	; 0x2c
   26ac0:	ldr	r8, [sp, #36]	; 0x24
   26ac4:	ror	r7, r7, #31
   26ac8:	ror	r2, r2, #31
   26acc:	add	sl, sl, r0, ror #27
   26ad0:	add	r9, r2, r9
   26ad4:	eor	r8, r8, r3
   26ad8:	mov	r3, r7
   26adc:	ldr	r7, [sp, #32]
   26ae0:	add	lr, r9, lr
   26ae4:	ldr	r9, [sp, #28]
   26ae8:	ror	r0, r0, #2
   26aec:	eor	r6, r6, r7
   26af0:	eor	r4, ip, r0
   26af4:	eor	r8, r8, r9
   26af8:	ldr	r9, [sp, #4]
   26afc:	add	r5, r5, sl, ror #27
   26b00:	ldr	r7, [sp, #48]	; 0x30
   26b04:	eor	r4, r4, sl
   26b08:	ror	r6, r6, #31
   26b0c:	ror	sl, sl, #2
   26b10:	add	r9, r3, r9
   26b14:	add	r4, r4, lr
   26b18:	eor	lr, r0, sl
   26b1c:	str	r3, [sp, #36]	; 0x24
   26b20:	add	ip, r9, ip
   26b24:	eor	r7, r1, r7
   26b28:	eor	lr, lr, r5
   26b2c:	mov	r1, r6
   26b30:	ldr	r6, [sp, #8]
   26b34:	eor	r8, r8, r2
   26b38:	ldr	r9, [sp, #4]
   26b3c:	add	lr, lr, ip
   26b40:	ldr	ip, [sp, #36]	; 0x24
   26b44:	add	r4, r4, r5, ror #27
   26b48:	eor	r7, r7, r6
   26b4c:	ror	r5, r5, #2
   26b50:	ldr	r3, [sp, #44]	; 0x2c
   26b54:	add	r9, r1, r9
   26b58:	eor	r6, sl, r5
   26b5c:	eor	r7, r7, ip
   26b60:	ror	ip, r8, #31
   26b64:	ldr	r8, [sp, #16]
   26b68:	add	r0, r9, r0
   26b6c:	eor	r6, r6, r4
   26b70:	str	ip, [sp, #40]	; 0x28
   26b74:	eor	r8, r3, r8
   26b78:	ldr	ip, [sp, #56]	; 0x38
   26b7c:	add	r6, r6, r0
   26b80:	ldr	r3, [sp, #40]	; 0x28
   26b84:	add	lr, lr, r4, ror #27
   26b88:	ldr	r0, [sp, #4]
   26b8c:	ror	r4, r4, #2
   26b90:	eor	r8, r8, ip
   26b94:	str	r1, [sp, #60]	; 0x3c
   26b98:	add	r9, r3, r0
   26b9c:	ror	r0, r7, #31
   26ba0:	ldr	r7, [sp, #52]	; 0x34
   26ba4:	eor	ip, r5, r4
   26ba8:	str	r0, [sp, #12]
   26bac:	eor	r8, r8, r1
   26bb0:	ldr	r0, [sp, #48]	; 0x30
   26bb4:	add	r6, r6, lr, ror #27
   26bb8:	ldr	r1, [sp, #12]
   26bbc:	add	sl, r9, sl
   26bc0:	eor	r7, r0, r7
   26bc4:	ldr	r0, [sp, #4]
   26bc8:	eor	ip, ip, lr
   26bcc:	ror	lr, lr, #2
   26bd0:	add	r9, r1, r0
   26bd4:	add	ip, ip, sl
   26bd8:	eor	r0, r4, lr
   26bdc:	ror	sl, r8, #31
   26be0:	ldr	r8, [sp, #16]
   26be4:	eor	r0, r0, r6
   26be8:	str	sl, [sp, #44]	; 0x2c
   26bec:	eor	r7, r7, fp
   26bf0:	ldr	sl, [sp, #20]
   26bf4:	add	r5, r9, r5
   26bf8:	ldr	r9, [sp, #32]
   26bfc:	eor	r7, r7, r3
   26c00:	eor	r8, r8, sl
   26c04:	ldr	r3, [sp, #44]	; 0x2c
   26c08:	add	r5, r0, r5
   26c0c:	ldr	r0, [sp, #4]
   26c10:	eor	r8, r8, r9
   26c14:	add	ip, ip, r6, ror #27
   26c18:	add	r9, r3, r0
   26c1c:	eor	r8, r8, r1
   26c20:	ldr	r0, [sp, #52]	; 0x34
   26c24:	ror	r6, r6, #2
   26c28:	ldr	r1, [sp, #24]
   26c2c:	ror	r7, r7, #31
   26c30:	str	r7, [sp, #16]
   26c34:	eor	sl, lr, r6
   26c38:	eor	r7, r0, r1
   26c3c:	add	r4, r9, r4
   26c40:	ldr	r1, [sp, #16]
   26c44:	eor	sl, sl, ip
   26c48:	ldr	r9, [sp, #4]
   26c4c:	add	r5, r5, ip, ror #27
   26c50:	add	r4, sl, r4
   26c54:	ror	ip, ip, #2
   26c58:	ldr	sl, [sp, #28]
   26c5c:	add	r9, r1, r9
   26c60:	ror	r8, r8, #31
   26c64:	str	r8, [sp, #48]	; 0x30
   26c68:	ldr	r8, [sp, #20]
   26c6c:	eor	r0, r6, ip
   26c70:	add	lr, r9, lr
   26c74:	ldr	r9, [sp, #36]	; 0x24
   26c78:	eor	r0, r0, r5
   26c7c:	eor	r8, r8, sl
   26c80:	eor	r8, r8, r9
   26c84:	add	lr, r0, lr
   26c88:	ldr	r9, [sp, #48]	; 0x30
   26c8c:	eor	r8, r8, r1
   26c90:	ldr	r0, [sp, #4]
   26c94:	add	r4, r4, r5, ror #27
   26c98:	ldr	r1, [sp, #24]
   26c9c:	ror	r5, r5, #2
   26ca0:	add	r9, r9, r0
   26ca4:	ldr	r0, [sp, #8]
   26ca8:	eor	r7, r7, r2
   26cac:	eor	sl, ip, r5
   26cb0:	eor	r7, r7, r3
   26cb4:	eor	r1, r1, r0
   26cb8:	ldr	r0, [sp, #60]	; 0x3c
   26cbc:	eor	sl, sl, r4
   26cc0:	add	r6, r9, r6
   26cc4:	ror	r7, r7, #31
   26cc8:	ldr	r9, [sp, #48]	; 0x30
   26ccc:	eor	r1, r1, r0
   26cd0:	add	r6, sl, r6
   26cd4:	ldr	r0, [sp, #4]
   26cd8:	ror	r8, r8, #31
   26cdc:	str	r8, [sp, #20]
   26ce0:	ldr	sl, [sp, #28]
   26ce4:	add	lr, lr, r4, ror #27
   26ce8:	ldr	r8, [sp, #56]	; 0x38
   26cec:	ror	r4, r4, #2
   26cf0:	mov	r3, r7
   26cf4:	eor	r1, r1, r9
   26cf8:	add	r7, r7, r0
   26cfc:	eor	r8, sl, r8
   26d00:	eor	r0, r5, r4
   26d04:	ldr	sl, [sp, #40]	; 0x28
   26d08:	eor	r0, r0, lr
   26d0c:	add	ip, r7, ip
   26d10:	eor	r8, r8, sl
   26d14:	add	ip, r0, ip
   26d18:	ldr	sl, [sp, #20]
   26d1c:	ror	r1, r1, #31
   26d20:	ldr	r0, [sp, #4]
   26d24:	add	r6, r6, lr, ror #27
   26d28:	ror	lr, lr, #2
   26d2c:	eor	r8, r8, r3
   26d30:	add	r9, sl, r0
   26d34:	eor	sl, r4, lr
   26d38:	mov	r0, r1
   26d3c:	ldr	r1, [sp, #8]
   26d40:	ldr	r7, [sp, #12]
   26d44:	eor	sl, sl, r6
   26d48:	add	r5, r9, r5
   26d4c:	eor	r1, r1, fp
   26d50:	add	r5, sl, r5
   26d54:	ror	sl, r8, #31
   26d58:	str	sl, [sp, #24]
   26d5c:	eor	r1, r1, r7
   26d60:	ldr	sl, [sp, #20]
   26d64:	add	ip, ip, r6, ror #27
   26d68:	str	r3, [sp, #52]	; 0x34
   26d6c:	mov	r3, r0
   26d70:	ldr	r0, [sp, #4]
   26d74:	ror	r6, r6, #2
   26d78:	ldr	r8, [sp, #56]	; 0x38
   26d7c:	eor	r1, r1, sl
   26d80:	ldr	sl, [sp, #32]
   26d84:	add	r9, r3, r0
   26d88:	eor	r0, lr, r6
   26d8c:	add	r4, r9, r4
   26d90:	eor	r7, r8, sl
   26d94:	eor	r0, r0, ip
   26d98:	ldr	r8, [sp, #44]	; 0x2c
   26d9c:	add	r4, r0, r4
   26da0:	ldr	r9, [sp, #24]
   26da4:	add	r5, r5, ip, ror #27
   26da8:	ldr	r0, [sp, #4]
   26dac:	ror	ip, ip, #2
   26db0:	eor	r7, r7, r8
   26db4:	ror	r1, r1, #31
   26db8:	add	sl, r9, r0
   26dbc:	eor	r8, r6, ip
   26dc0:	eor	r7, r7, r3
   26dc4:	mov	r0, r1
   26dc8:	eor	r8, r8, r5
   26dcc:	ldr	r1, [sp, #16]
   26dd0:	add	lr, sl, lr
   26dd4:	eor	fp, fp, r2
   26dd8:	add	lr, r8, lr
   26ddc:	ror	r8, r7, #31
   26de0:	eor	fp, fp, r1
   26de4:	ldr	r1, [sp, #4]
   26de8:	add	r4, r4, r5, ror #27
   26dec:	mov	sl, r8
   26df0:	ror	r5, r5, #2
   26df4:	eor	fp, fp, r9
   26df8:	ldrd	r8, [sp, #32]
   26dfc:	add	lr, lr, r4, ror #27
   26e00:	str	r3, [sp, #64]	; 0x40
   26e04:	mov	r3, r0
   26e08:	add	r0, r0, r1
   26e0c:	eor	r1, ip, r5
   26e10:	eor	r7, r8, r9
   26e14:	eor	r1, r1, r4
   26e18:	ldr	r9, [sp, #48]	; 0x30
   26e1c:	add	r6, r0, r6
   26e20:	add	r6, r1, r6
   26e24:	ror	fp, fp, #31
   26e28:	ldr	r1, [sp, #4]
   26e2c:	ror	r4, r4, #2
   26e30:	eor	r7, r7, r9
   26e34:	mov	r8, sl
   26e38:	add	r9, sl, r1
   26e3c:	mov	r0, fp
   26e40:	eor	sl, r5, r4
   26e44:	ldr	fp, [sp, #60]	; 0x3c
   26e48:	eor	r7, r7, r3
   26e4c:	ldr	r1, [sp, #52]	; 0x34
   26e50:	eor	sl, sl, lr
   26e54:	add	ip, r9, ip
   26e58:	eor	r2, r2, fp
   26e5c:	add	ip, sl, ip
   26e60:	ror	sl, r7, #31
   26e64:	eor	r2, r2, r1
   26e68:	str	r8, [sp, #60]	; 0x3c
   26e6c:	eor	r2, r2, r8
   26e70:	ldr	r1, [sp, #4]
   26e74:	mov	r9, sl
   26e78:	ldr	r8, [sp, #36]	; 0x24
   26e7c:	add	r6, r6, lr, ror #27
   26e80:	ldr	sl, [sp, #40]	; 0x28
   26e84:	ror	lr, lr, #2
   26e88:	str	r3, [sp, #56]	; 0x38
   26e8c:	mov	r3, r0
   26e90:	eor	r7, r8, sl
   26e94:	add	r0, r0, r1
   26e98:	ldr	r8, [sp, #4]
   26e9c:	eor	r1, r4, lr
   26ea0:	add	ip, ip, r6, ror #27
   26ea4:	eor	r1, r1, r6
   26ea8:	ror	r6, r6, #2
   26eac:	add	r5, r0, r5
   26eb0:	ror	r2, r2, #31
   26eb4:	mov	r0, r9
   26eb8:	str	r2, [sp, #8]
   26ebc:	add	r9, r9, r8
   26ec0:	ldr	r2, [sp, #20]
   26ec4:	eor	r8, lr, r6
   26ec8:	str	r3, [sp, #40]	; 0x28
   26ecc:	eor	r8, r8, ip
   26ed0:	add	r5, r1, r5
   26ed4:	add	r4, r9, r4
   26ed8:	ldr	r1, [sp, #12]
   26edc:	add	r9, r8, r4
   26ee0:	eor	r7, r7, r2
   26ee4:	ldr	r4, [sp, #64]	; 0x40
   26ee8:	eor	r7, r7, r3
   26eec:	eor	r2, fp, r1
   26ef0:	ldmib	sp, {r3, fp}
   26ef4:	eor	r2, r2, r4
   26ef8:	eor	r2, r2, r0
   26efc:	add	r5, r5, ip, ror #27
   26f00:	add	r3, fp, r3
   26f04:	ldr	fp, [sp, #44]	; 0x2c
   26f08:	ror	ip, ip, #2
   26f0c:	add	lr, r3, lr
   26f10:	eor	r8, sl, fp
   26f14:	ror	r3, r7, #31
   26f18:	ror	sl, r2, #31
   26f1c:	str	sl, [sp, #4]
   26f20:	ldr	sl, [sp, #24]
   26f24:	eor	r1, r6, ip
   26f28:	add	r9, r9, r5, ror #27
   26f2c:	mov	r4, r3
   26f30:	eor	r1, r1, r5
   26f34:	eor	r8, r8, sl
   26f38:	movw	r3, #48348	; 0xbcdc
   26f3c:	ldr	sl, [sp, #8]
   26f40:	movt	r3, #36635	; 0x8f1b
   26f44:	ror	r5, r5, #2
   26f48:	add	lr, r1, lr
   26f4c:	add	r1, r4, r3
   26f50:	add	lr, lr, r9, ror #27
   26f54:	str	r4, [sp, #44]	; 0x2c
   26f58:	eor	r8, r8, sl
   26f5c:	orr	r4, r9, r5
   26f60:	ldr	sl, [sp, #16]
   26f64:	add	r6, r1, r6
   26f68:	ldr	r1, [sp, #12]
   26f6c:	and	r4, r4, ip
   26f70:	str	r0, [sp, #68]	; 0x44
   26f74:	ror	r0, r9, #2
   26f78:	and	r9, r9, r5
   26f7c:	eor	r7, r1, sl
   26f80:	orr	r4, r4, r9
   26f84:	ldr	sl, [sp, #56]	; 0x38
   26f88:	add	r6, r6, lr, ror #27
   26f8c:	orr	r2, lr, r0
   26f90:	add	r6, r4, r6
   26f94:	ldr	r4, [sp, #44]	; 0x2c
   26f98:	and	r9, lr, r0
   26f9c:	ldr	r1, [sp, #4]
   26fa0:	and	r2, r2, r5
   26fa4:	eor	r7, r7, sl
   26fa8:	orr	r2, r2, r9
   26fac:	eor	r7, r7, r4
   26fb0:	ldr	r9, [sp, #48]	; 0x30
   26fb4:	add	r1, r1, r3
   26fb8:	add	ip, r1, ip
   26fbc:	ror	r1, r8, #31
   26fc0:	eor	r8, fp, r9
   26fc4:	ror	fp, r7, #31
   26fc8:	str	fp, [sp, #12]
   26fcc:	ror	lr, lr, #2
   26fd0:	ldr	fp, [sp, #60]	; 0x3c
   26fd4:	add	r4, r1, r3
   26fd8:	add	ip, r2, ip
   26fdc:	add	r5, r4, r5
   26fe0:	eor	r8, r8, fp
   26fe4:	ldr	fp, [sp, #4]
   26fe8:	ldr	r4, [sp, #16]
   26fec:	orr	r2, r6, lr
   26ff0:	eor	r8, r8, fp
   26ff4:	ldr	fp, [sp, #52]	; 0x34
   26ff8:	add	ip, ip, r6, ror #27
   26ffc:	str	r1, [sp, #28]
   27000:	and	r2, r2, r0
   27004:	ror	r1, r6, #2
   27008:	and	r6, r6, lr
   2700c:	eor	r7, r4, fp
   27010:	orr	r6, r2, r6
   27014:	ldr	r4, [sp, #40]	; 0x28
   27018:	ldr	r2, [sp, #12]
   2701c:	orr	sl, ip, r1
   27020:	add	r5, r5, ip, ror #27
   27024:	and	fp, ip, r1
   27028:	add	r5, r6, r5
   2702c:	add	r2, r2, r3
   27030:	ror	r6, r8, #31
   27034:	and	sl, sl, lr
   27038:	ldr	r8, [sp, #28]
   2703c:	eor	r7, r7, r4
   27040:	ldr	r4, [sp, #20]
   27044:	add	r0, r2, r0
   27048:	str	r6, [sp, #48]	; 0x30
   2704c:	add	r2, r6, r3
   27050:	orr	sl, sl, fp
   27054:	ldr	r6, [sp, #68]	; 0x44
   27058:	ror	ip, ip, #2
   2705c:	eor	r7, r7, r8
   27060:	add	sl, sl, r0
   27064:	eor	r8, r9, r4
   27068:	add	lr, r2, lr
   2706c:	ldr	r2, [sp, #12]
   27070:	add	sl, sl, r5, ror #27
   27074:	orr	r0, r5, ip
   27078:	eor	r8, r8, r6
   2707c:	ror	fp, r5, #2
   27080:	ror	r9, r7, #31
   27084:	and	r0, r0, r1
   27088:	str	r9, [sp, #16]
   2708c:	eor	r8, r8, r2
   27090:	and	r5, r5, ip
   27094:	ldr	r9, [sp, #64]	; 0x40
   27098:	ldr	r6, [sp, #52]	; 0x34
   2709c:	orr	r5, r0, r5
   270a0:	add	lr, lr, sl, ror #27
   270a4:	ldr	r0, [sp, #16]
   270a8:	add	lr, r5, lr
   270ac:	ror	r5, r8, #31
   270b0:	add	r2, r0, r3
   270b4:	orr	r4, sl, fp
   270b8:	eor	r7, r6, r9
   270bc:	ldr	r6, [sp, #8]
   270c0:	and	r0, sl, fp
   270c4:	add	r1, r2, r1
   270c8:	and	r4, r4, ip
   270cc:	mov	r2, r5
   270d0:	ldr	r5, [sp, #48]	; 0x30
   270d4:	eor	r7, r7, r6
   270d8:	orr	r4, r4, r0
   270dc:	ldr	r6, [sp, #44]	; 0x2c
   270e0:	eor	r7, r7, r5
   270e4:	add	r4, r4, r1
   270e8:	ldr	r5, [sp, #24]
   270ec:	ror	sl, sl, #2
   270f0:	ldr	r1, [sp, #20]
   270f4:	add	r4, r4, lr, ror #27
   270f8:	str	r2, [sp, #24]
   270fc:	ror	r0, lr, #2
   27100:	eor	r8, r1, r5
   27104:	add	r1, r2, r3
   27108:	add	ip, r1, ip
   2710c:	ldr	r1, [sp, #16]
   27110:	orr	r2, lr, sl
   27114:	eor	r8, r8, r6
   27118:	and	r2, r2, fp
   2711c:	eor	r8, r8, r1
   27120:	and	lr, lr, sl
   27124:	ldr	r1, [sp, #56]	; 0x38
   27128:	add	ip, ip, r4, ror #27
   2712c:	orr	lr, r2, lr
   27130:	add	lr, lr, ip
   27134:	ror	r7, r7, #31
   27138:	ror	ip, r8, #31
   2713c:	add	r2, r7, r3
   27140:	eor	r1, r9, r1
   27144:	ldr	r9, [sp, #4]
   27148:	add	fp, r2, fp
   2714c:	mov	r2, ip
   27150:	ldr	ip, [sp, #24]
   27154:	eor	r1, r1, r9
   27158:	ldr	r8, [sp, #60]	; 0x3c
   2715c:	orr	r6, r4, r0
   27160:	eor	r1, r1, ip
   27164:	ror	r9, r4, #2
   27168:	str	r7, [sp, #64]	; 0x40
   2716c:	and	r6, r6, sl
   27170:	and	r7, r4, r0
   27174:	orr	ip, lr, r9
   27178:	orr	r6, r6, r7
   2717c:	eor	r7, r5, r8
   27180:	ror	r5, r1, #31
   27184:	str	r5, [sp, #36]	; 0x24
   27188:	ldr	r5, [sp, #28]
   2718c:	add	fp, r6, fp
   27190:	and	r6, ip, r0
   27194:	ldr	ip, [sp, #64]	; 0x40
   27198:	eor	r7, r7, r5
   2719c:	ldr	r1, [sp, #56]	; 0x38
   271a0:	eor	r7, r7, ip
   271a4:	ldr	ip, [sp, #40]	; 0x28
   271a8:	add	fp, fp, lr, ror #27
   271ac:	ror	r4, lr, #2
   271b0:	and	lr, lr, r9
   271b4:	eor	r1, r1, ip
   271b8:	orr	ip, r6, lr
   271bc:	ldr	lr, [sp, #36]	; 0x24
   271c0:	str	r2, [sp, #32]
   271c4:	add	r2, r2, r3
   271c8:	add	r5, lr, r3
   271cc:	add	sl, r2, sl
   271d0:	ldr	lr, [sp, #12]
   271d4:	add	sl, sl, fp, ror #27
   271d8:	orr	r8, fp, r4
   271dc:	and	r2, fp, r4
   271e0:	eor	r1, r1, lr
   271e4:	add	lr, ip, sl
   271e8:	ror	sl, r7, #31
   271ec:	and	r8, r8, r9
   271f0:	orr	r8, r8, r2
   271f4:	add	r0, r5, r0
   271f8:	mov	ip, sl
   271fc:	ldr	sl, [sp, #32]
   27200:	add	r5, r8, r0
   27204:	ror	r8, fp, #2
   27208:	eor	r6, r1, sl
   2720c:	ldr	fp, [sp, #68]	; 0x44
   27210:	ldr	r1, [sp, #60]	; 0x3c
   27214:	add	r5, r5, lr, ror #27
   27218:	ror	sl, lr, #2
   2721c:	add	r0, ip, r3
   27220:	eor	r7, r1, fp
   27224:	ror	r1, r6, #31
   27228:	str	r1, [sp, #20]
   2722c:	orr	r2, lr, r8
   27230:	ldr	r1, [sp, #48]	; 0x30
   27234:	add	r9, r0, r9
   27238:	str	ip, [sp, #56]	; 0x38
   2723c:	and	ip, lr, r8
   27240:	ldr	lr, [sp, #36]	; 0x24
   27244:	eor	r7, r7, r1
   27248:	ldr	r1, [sp, #40]	; 0x28
   2724c:	and	r2, r2, r4
   27250:	eor	r7, r7, lr
   27254:	ldr	lr, [sp, #8]
   27258:	add	r9, r9, r5, ror #27
   2725c:	orr	r2, r2, ip
   27260:	eor	r0, r1, lr
   27264:	ldr	r1, [sp, #20]
   27268:	add	r2, r2, r9
   2726c:	orr	r6, r5, sl
   27270:	ror	r9, r7, #31
   27274:	add	lr, r1, r3
   27278:	and	ip, r5, sl
   2727c:	ldr	r1, [sp, #16]
   27280:	and	r6, r6, r8
   27284:	add	r4, lr, r4
   27288:	orr	r6, r6, ip
   2728c:	mov	ip, r9
   27290:	ldr	r9, [sp, #56]	; 0x38
   27294:	eor	r0, r0, r1
   27298:	add	lr, r6, r4
   2729c:	ldr	r6, [sp, #44]	; 0x2c
   272a0:	eor	r0, r0, r9
   272a4:	str	ip, [sp, #60]	; 0x3c
   272a8:	add	ip, ip, r3
   272ac:	ror	r5, r5, #2
   272b0:	ror	r4, r0, #31
   272b4:	eor	r9, fp, r6
   272b8:	add	ip, ip, r8
   272bc:	ldr	r8, [sp, #20]
   272c0:	mov	r7, r4
   272c4:	ldr	r4, [sp, #24]
   272c8:	add	lr, lr, r2, ror #27
   272cc:	orr	r1, r2, r5
   272d0:	eor	r9, r9, r4
   272d4:	ror	fp, r2, #2
   272d8:	eor	r9, r9, r8
   272dc:	and	r2, r2, r5
   272e0:	and	r1, r1, sl
   272e4:	ldmib	sp, {r4, r8}
   272e8:	add	ip, ip, lr, ror #27
   272ec:	orr	r1, r1, r2
   272f0:	add	r1, r1, ip
   272f4:	orr	r0, lr, fp
   272f8:	ror	ip, r9, #31
   272fc:	ldr	r2, [sp, #64]	; 0x40
   27300:	and	r0, r0, r5
   27304:	eor	r8, r4, r8
   27308:	and	r4, lr, fp
   2730c:	eor	r8, r8, r2
   27310:	orr	r4, r0, r4
   27314:	mov	r0, ip
   27318:	ldr	ip, [sp, #60]	; 0x3c
   2731c:	ror	lr, lr, #2
   27320:	str	r7, [sp, #40]	; 0x28
   27324:	add	r7, r7, r3
   27328:	eor	r8, r8, ip
   2732c:	add	sl, r7, sl
   27330:	ldr	ip, [sp, #28]
   27334:	add	r4, r4, sl
   27338:	ror	sl, r8, #31
   2733c:	str	sl, [sp, #8]
   27340:	ldr	sl, [sp, #32]
   27344:	eor	r9, r6, ip
   27348:	add	r4, r4, r1, ror #27
   2734c:	add	r2, r0, r3
   27350:	eor	r9, r9, sl
   27354:	ldr	sl, [sp, #40]	; 0x28
   27358:	ldr	r8, [sp, #4]
   2735c:	orr	r6, r1, lr
   27360:	eor	r9, r9, sl
   27364:	ldr	sl, [sp, #12]
   27368:	ror	ip, r1, #2
   2736c:	add	r5, r2, r5
   27370:	and	r1, r1, lr
   27374:	and	r6, r6, fp
   27378:	eor	r7, r8, sl
   2737c:	add	r5, r5, r4, ror #27
   27380:	ldr	r8, [sp, #8]
   27384:	orr	r6, r6, r1
   27388:	add	r6, r6, r5
   2738c:	ror	r5, r9, #31
   27390:	str	r0, [sp, #44]	; 0x2c
   27394:	add	sl, r8, r3
   27398:	ldr	r8, [sp, #36]	; 0x24
   2739c:	mov	r2, r5
   273a0:	ldr	r5, [sp, #44]	; 0x2c
   273a4:	orr	r0, r4, ip
   273a8:	eor	r7, r7, r8
   273ac:	and	r1, r4, ip
   273b0:	and	r0, r0, lr
   273b4:	eor	r7, r7, r5
   273b8:	add	fp, sl, fp
   273bc:	orr	r1, r0, r1
   273c0:	add	r1, r1, fp
   273c4:	ror	fp, r7, #31
   273c8:	ror	r8, r4, #2
   273cc:	ldr	r0, [sp, #48]	; 0x30
   273d0:	ldr	r4, [sp, #28]
   273d4:	mov	r7, fp
   273d8:	ldr	fp, [sp, #56]	; 0x38
   273dc:	add	r1, r1, r6, ror #27
   273e0:	ldr	r9, [sp, #8]
   273e4:	eor	sl, r4, r0
   273e8:	eor	sl, sl, fp
   273ec:	ror	r5, r6, #2
   273f0:	str	r2, [sp, #28]
   273f4:	add	r4, r2, r3
   273f8:	eor	sl, sl, r9
   273fc:	orr	r2, r6, r8
   27400:	ldr	r9, [sp, #12]
   27404:	and	r6, r6, r8
   27408:	ldr	fp, [sp, #16]
   2740c:	add	r4, r4, lr
   27410:	and	r2, r2, ip
   27414:	orr	lr, r1, r5
   27418:	add	r4, r4, r1, ror #27
   2741c:	and	lr, lr, r8
   27420:	eor	fp, r9, fp
   27424:	orr	r2, r2, r6
   27428:	and	r9, r1, r5
   2742c:	ldr	r6, [sp, #20]
   27430:	add	r2, r2, r4
   27434:	orr	r9, lr, r9
   27438:	ror	r4, sl, #31
   2743c:	ldr	lr, [sp, #28]
   27440:	str	r7, [sp, #48]	; 0x30
   27444:	eor	fp, fp, r6
   27448:	add	r7, r7, r3
   2744c:	eor	fp, fp, lr
   27450:	add	ip, r7, ip
   27454:	mov	r7, r4
   27458:	ldr	r4, [sp, #24]
   2745c:	add	ip, r9, ip
   27460:	ldr	r9, [sp, #60]	; 0x3c
   27464:	add	r6, ip, r2, ror #27
   27468:	str	r7, [sp, #52]	; 0x34
   2746c:	ror	sl, r1, #2
   27470:	ror	ip, fp, #31
   27474:	ldr	r1, [sp, #16]
   27478:	str	ip, [sp, #4]
   2747c:	mov	lr, r0
   27480:	ldr	fp, [sp, #64]	; 0x40
   27484:	eor	lr, lr, r4
   27488:	ldr	ip, [sp, #48]	; 0x30
   2748c:	orr	r0, r2, sl
   27490:	eor	lr, lr, r9
   27494:	add	r4, r7, r3
   27498:	eor	lr, lr, ip
   2749c:	eor	r9, r1, fp
   274a0:	and	r1, r0, r5
   274a4:	ldr	r0, [sp, #4]
   274a8:	ror	r7, r2, #2
   274ac:	add	r4, r4, r8
   274b0:	and	r2, r2, sl
   274b4:	ldr	r8, [sp, #40]	; 0x28
   274b8:	add	r3, r0, r3
   274bc:	orr	r0, r1, r2
   274c0:	ror	r1, lr, #31
   274c4:	str	r1, [sp, #12]
   274c8:	ldr	r1, [sp, #52]	; 0x34
   274cc:	eor	r9, r9, r8
   274d0:	ldr	lr, [sp, #32]
   274d4:	orr	ip, r6, r7
   274d8:	eor	r9, r9, r1
   274dc:	ldr	r1, [sp, #24]
   274e0:	add	r4, r4, r6, ror #27
   274e4:	and	r8, r6, r7
   274e8:	eor	lr, r1, lr
   274ec:	add	r1, r3, r5
   274f0:	ldr	r5, [sp, #44]	; 0x2c
   274f4:	add	r0, r0, r4
   274f8:	and	ip, ip, sl
   274fc:	ldr	r4, [sp, #12]
   27500:	eor	lr, lr, r5
   27504:	ldr	r5, [sp, #4]
   27508:	orr	r2, ip, r8
   2750c:	movw	r3, #49622	; 0xc1d6
   27510:	ror	ip, r6, #2
   27514:	movt	r3, #51810	; 0xca62
   27518:	ror	r6, r9, #31
   2751c:	ldr	r9, [sp, #36]	; 0x24
   27520:	ldr	r8, [sp, #8]
   27524:	eor	lr, lr, r5
   27528:	add	r2, r2, r1
   2752c:	add	r1, r4, r3
   27530:	eor	r4, r7, ip
   27534:	add	r2, r2, r0, ror #27
   27538:	eor	r5, fp, r9
   2753c:	add	r1, r1, sl
   27540:	ldr	fp, [sp, #12]
   27544:	eor	r4, r4, r0
   27548:	ror	r0, r0, #2
   2754c:	ldr	sl, [sp, #56]	; 0x38
   27550:	str	r6, [sp, #24]
   27554:	eor	r5, r5, r8
   27558:	add	r4, r4, r1
   2755c:	ror	r8, lr, #31
   27560:	eor	r1, ip, r0
   27564:	ldr	lr, [sp, #32]
   27568:	add	r6, r6, r3
   2756c:	eor	r5, r5, fp
   27570:	add	r6, r6, r7
   27574:	ldr	fp, [sp, #28]
   27578:	eor	r1, r1, r2
   2757c:	eor	lr, lr, sl
   27580:	add	r1, r1, r6
   27584:	ldr	r6, [sp, #24]
   27588:	eor	lr, lr, fp
   2758c:	add	r4, r4, r2, ror #27
   27590:	eor	lr, lr, r6
   27594:	ror	r2, r2, #2
   27598:	ldr	r6, [sp, #20]
   2759c:	eor	r7, r0, r2
   275a0:	str	r8, [sp, #32]
   275a4:	add	r8, r8, r3
   275a8:	add	r1, r1, r4, ror #27
   275ac:	ror	fp, r5, #31
   275b0:	eor	r5, r9, r6
   275b4:	add	r6, r8, ip
   275b8:	ror	ip, r4, #2
   275bc:	eor	r8, r7, r4
   275c0:	ldr	r4, [sp, #48]	; 0x30
   275c4:	add	r8, r8, r6
   275c8:	str	fp, [sp, #16]
   275cc:	eor	fp, r2, ip
   275d0:	eor	r5, r5, r4
   275d4:	ldr	r4, [sp, #16]
   275d8:	ror	r9, r1, #2
   275dc:	add	r8, r8, r1, ror #27
   275e0:	add	r6, r4, r3
   275e4:	ror	r4, lr, #31
   275e8:	ldr	lr, [sp, #32]
   275ec:	eor	fp, fp, r1
   275f0:	str	r4, [sp, #56]	; 0x38
   275f4:	add	r0, r6, r0
   275f8:	eor	r5, r5, lr
   275fc:	ldr	lr, [sp, #60]	; 0x3c
   27600:	add	r4, r4, r3
   27604:	add	fp, fp, r0
   27608:	eor	r7, sl, lr
   2760c:	ldr	sl, [sp, #52]	; 0x34
   27610:	ror	r1, r5, #31
   27614:	str	r1, [sp, #36]	; 0x24
   27618:	ldr	r1, [sp, #16]
   2761c:	eor	r7, r7, sl
   27620:	eor	sl, ip, r9
   27624:	add	r2, r4, r2
   27628:	eor	r7, r7, r1
   2762c:	ldr	r1, [sp, #20]
   27630:	ldr	r5, [sp, #40]	; 0x28
   27634:	eor	sl, sl, r8
   27638:	ldr	r4, [sp, #56]	; 0x38
   2763c:	add	sl, sl, r2
   27640:	eor	r6, r1, r5
   27644:	ldr	r1, [sp, #4]
   27648:	ldr	r2, [sp, #36]	; 0x24
   2764c:	add	fp, fp, r8, ror #27
   27650:	eor	r6, r6, r1
   27654:	ror	r8, r8, #2
   27658:	eor	r6, r6, r4
   2765c:	ldr	r4, [sp, #44]	; 0x2c
   27660:	eor	r0, r9, r8
   27664:	add	r1, r2, r3
   27668:	ldr	r2, [sp, #12]
   2766c:	add	sl, sl, fp, ror #27
   27670:	ror	r7, r7, #31
   27674:	eor	r5, lr, r4
   27678:	eor	r0, r0, fp
   2767c:	ldr	r4, [sp, #8]
   27680:	ror	fp, fp, #2
   27684:	add	r1, r1, ip
   27688:	ldr	ip, [sp, #40]	; 0x28
   2768c:	add	lr, r7, r3
   27690:	eor	r5, r5, r2
   27694:	ror	r6, r6, #31
   27698:	eor	r2, r8, fp
   2769c:	str	r6, [sp, #20]
   276a0:	ldr	r6, [sp, #24]
   276a4:	add	lr, lr, r9
   276a8:	eor	ip, ip, r4
   276ac:	eor	r2, r2, sl
   276b0:	ldr	r9, [sp, #28]
   276b4:	eor	ip, ip, r6
   276b8:	add	r2, r2, lr
   276bc:	ldr	lr, [sp, #44]	; 0x2c
   276c0:	ldr	r6, [sp, #20]
   276c4:	eor	ip, ip, r7
   276c8:	add	r1, r0, r1
   276cc:	ldr	r0, [sp, #36]	; 0x24
   276d0:	add	r1, r1, sl, ror #27
   276d4:	eor	r9, lr, r9
   276d8:	ror	sl, sl, #2
   276dc:	ldr	lr, [sp, #32]
   276e0:	eor	r4, fp, sl
   276e4:	eor	r5, r5, r0
   276e8:	add	r0, r6, r3
   276ec:	ror	r6, ip, #31
   276f0:	ldr	ip, [sp, #20]
   276f4:	add	r8, r0, r8
   276f8:	eor	r4, r4, r1
   276fc:	eor	r9, r9, lr
   27700:	add	r2, r2, r1, ror #27
   27704:	ror	r5, r5, #31
   27708:	ror	r1, r1, #2
   2770c:	eor	r9, r9, ip
   27710:	add	r4, r4, r8
   27714:	ldr	ip, [sp, #8]
   27718:	ldr	r8, [sp, #48]	; 0x30
   2771c:	add	r0, r5, r3
   27720:	eor	lr, sl, r1
   27724:	add	fp, r0, fp
   27728:	eor	r8, ip, r8
   2772c:	eor	lr, lr, r2
   27730:	ldr	ip, [sp, #16]
   27734:	add	lr, lr, fp
   27738:	ror	fp, r9, #31
   2773c:	ldr	r9, [sp, #28]
   27740:	str	fp, [sp, #8]
   27744:	add	r0, r6, r3
   27748:	ldr	fp, [sp, #52]	; 0x34
   2774c:	eor	r8, r8, ip
   27750:	add	r0, r0, sl
   27754:	eor	r8, r8, r5
   27758:	ldr	sl, [sp, #56]	; 0x38
   2775c:	eor	r9, r9, fp
   27760:	ldr	fp, [sp, #8]
   27764:	add	r4, r4, r2, ror #27
   27768:	eor	r9, r9, sl
   2776c:	ror	r2, r2, #2
   27770:	add	sl, fp, r3
   27774:	ror	r8, r8, #31
   27778:	str	r8, [sp, #28]
   2777c:	eor	ip, r1, r2
   27780:	ldr	fp, [sp, #4]
   27784:	add	r1, sl, r1
   27788:	ldr	r8, [sp, #48]	; 0x30
   2778c:	eor	r9, r9, r6
   27790:	ldr	sl, [sp, #28]
   27794:	add	lr, lr, r4, ror #27
   27798:	str	r6, [sp, #40]	; 0x28
   2779c:	eor	r8, r8, fp
   277a0:	ldr	r6, [sp, #36]	; 0x24
   277a4:	add	fp, sl, r3
   277a8:	ldr	sl, [sp, #8]
   277ac:	eor	ip, ip, r4
   277b0:	eor	r8, r8, r6
   277b4:	ror	r4, r4, #2
   277b8:	eor	r8, r8, sl
   277bc:	ldr	sl, [sp, #52]	; 0x34
   277c0:	ldr	r6, [sp, #12]
   277c4:	add	ip, ip, r0
   277c8:	eor	r0, r2, r4
   277cc:	add	r2, fp, r2
   277d0:	eor	sl, sl, r6
   277d4:	ldr	fp, [sp, #4]
   277d8:	ldr	r6, [sp, #24]
   277dc:	add	ip, ip, lr, ror #27
   277e0:	eor	r0, r0, lr
   277e4:	ror	lr, lr, #2
   277e8:	eor	fp, fp, r6
   277ec:	ldr	r6, [sp, #28]
   277f0:	add	r0, r0, r1
   277f4:	eor	r7, r7, sl
   277f8:	eor	r1, r4, lr
   277fc:	add	r0, r0, ip, ror #27
   27800:	ror	r9, r9, #31
   27804:	eor	r1, r1, ip
   27808:	eor	r7, r7, r6
   2780c:	ror	ip, ip, #2
   27810:	ldr	r6, [sp, #20]
   27814:	add	sl, r9, r3
   27818:	add	r1, r1, r2
   2781c:	eor	r2, lr, ip
   27820:	eor	r2, r2, r0
   27824:	add	r4, sl, r4
   27828:	eor	r6, r6, fp
   2782c:	add	r4, r2, r4
   27830:	eor	r6, r6, r9
   27834:	ldr	r2, [sp, #32]
   27838:	ldr	r9, [sp, #12]
   2783c:	add	r1, r1, r0, ror #27
   27840:	ror	r8, r8, #31
   27844:	ror	r0, r0, #2
   27848:	eor	r9, r9, r2
   2784c:	add	sl, r8, r3
   27850:	eor	fp, ip, r0
   27854:	eor	r5, r5, r9
   27858:	add	r4, r4, r1, ror #27
   2785c:	eor	fp, fp, r1
   27860:	ror	r7, r7, #31
   27864:	ror	r1, r1, #2
   27868:	add	lr, sl, lr
   2786c:	eor	r8, r8, r5
   27870:	ldr	r9, [sp, #16]
   27874:	add	r2, r7, r3
   27878:	ldr	r5, [sp, #24]
   2787c:	eor	sl, r0, r1
   27880:	add	lr, fp, lr
   27884:	eor	sl, sl, r4
   27888:	add	lr, lr, r4, ror #27
   2788c:	ror	r6, r6, #31
   27890:	ror	r4, r4, #2
   27894:	add	ip, r2, ip
   27898:	eor	r9, r5, r9
   2789c:	ldr	r5, [sp, #40]	; 0x28
   278a0:	add	r2, r6, r3
   278a4:	eor	fp, r1, r4
   278a8:	add	ip, sl, ip
   278ac:	eor	r9, r9, r5
   278b0:	ror	sl, lr, #2
   278b4:	add	ip, ip, lr, ror #27
   278b8:	eor	fp, fp, lr
   278bc:	ldr	r5, [sp, #56]	; 0x38
   278c0:	add	r0, r2, r0
   278c4:	ldr	lr, [sp, #32]
   278c8:	add	r0, fp, r0
   278cc:	ldr	fp, [sp, #8]
   278d0:	ror	r8, r8, #31
   278d4:	eor	lr, lr, r5
   278d8:	eor	lr, lr, fp
   278dc:	eor	r5, r4, sl
   278e0:	eor	r7, r7, r9
   278e4:	add	r9, r8, r3
   278e8:	eor	r5, r5, ip
   278ec:	ldr	fp, [sp, #36]	; 0x24
   278f0:	add	r1, r9, r1
   278f4:	eor	r6, r6, lr
   278f8:	ldr	lr, [sp, #16]
   278fc:	add	r0, r0, ip, ror #27
   27900:	add	r1, r5, r1
   27904:	ror	ip, ip, #2
   27908:	ldr	r5, [sp, #28]
   2790c:	add	r7, r3, r7, ror #31
   27910:	eor	r2, lr, fp
   27914:	eor	lr, sl, ip
   27918:	add	r1, r1, r0, ror #27
   2791c:	eor	r2, r2, r5
   27920:	add	r4, r7, r4
   27924:	ldr	r9, [sp, #72]	; 0x48
   27928:	eor	r7, lr, r0
   2792c:	ror	r0, r0, #2
   27930:	eor	fp, ip, r0
   27934:	add	r4, r4, r7
   27938:	eor	r8, r8, r2
   2793c:	add	r4, r4, r1, ror #27
   27940:	eor	fp, fp, r1
   27944:	add	r6, r3, r6, ror #31
   27948:	ror	r1, r1, #2
   2794c:	add	r3, r9, r3
   27950:	ldr	r2, [sp, #92]	; 0x5c
   27954:	add	r8, r3, r8, ror #31
   27958:	add	r6, r6, sl
   2795c:	eor	r3, r0, r1
   27960:	add	r6, r6, fp
   27964:	add	ip, r8, ip
   27968:	ldr	r7, [sp, #80]	; 0x50
   2796c:	eor	r8, r3, r4
   27970:	ldr	r3, [sp, #76]	; 0x4c
   27974:	add	r6, r6, r4, ror #27
   27978:	ldr	r5, [sp, #88]	; 0x58
   2797c:	add	r4, r7, r4, ror #2
   27980:	add	r3, r3, r6
   27984:	str	r4, [r2, #16]
   27988:	str	r3, [r2, #12]
   2798c:	mov	r3, r2
   27990:	ldr	r2, [sp, #84]	; 0x54
   27994:	add	ip, ip, r8
   27998:	add	ip, ip, r6, ror #27
   2799c:	add	r0, r5, r0
   279a0:	add	r1, r2, r1
   279a4:	str	ip, [r3, #8]
   279a8:	str	r1, [r3, #20]
   279ac:	str	r0, [r3, #24]
   279b0:	add	sp, sp, #100	; 0x64
   279b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   279bc:	mov	r6, r0
   279c0:	ldr	r8, [r0]
   279c4:	mov	r7, r2
   279c8:	mov	r4, r1
   279cc:	adds	r3, r8, r2
   279d0:	str	r3, [r0]
   279d4:	and	r8, r8, #63	; 0x3f
   279d8:	ldrcs	r3, [r0, #4]
   279dc:	rsb	r5, r8, #64	; 0x40
   279e0:	addcs	r3, r3, #1
   279e4:	strcs	r3, [r0, #4]
   279e8:	cmp	r5, r2
   279ec:	movhi	r3, #0
   279f0:	movls	r3, #1
   279f4:	cmp	r8, #0
   279f8:	moveq	r3, #0
   279fc:	cmp	r3, #0
   27a00:	bne	27a58 <crc32@@Base+0xe310>
   27a04:	cmp	r7, #63	; 0x3f
   27a08:	bls	27a38 <crc32@@Base+0xe2f0>
   27a0c:	sub	r5, r7, #64	; 0x40
   27a10:	bic	r5, r5, #63	; 0x3f
   27a14:	add	r5, r5, #64	; 0x40
   27a18:	add	r5, r4, r5
   27a1c:	mov	r1, r4
   27a20:	mov	r0, r6
   27a24:	add	r4, r4, #64	; 0x40
   27a28:	bl	265a0 <crc32@@Base+0xce58>
   27a2c:	cmp	r4, r5
   27a30:	bne	27a1c <crc32@@Base+0xe2d4>
   27a34:	and	r7, r7, #63	; 0x3f
   27a38:	cmp	r7, #0
   27a3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   27a40:	add	r0, r6, #28
   27a44:	mov	r2, r7
   27a48:	add	r0, r0, r8
   27a4c:	mov	r1, r4
   27a50:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   27a54:	b	1259c <memcpy@plt>
   27a58:	add	r9, r0, #28
   27a5c:	mov	r2, r5
   27a60:	add	r0, r9, r8
   27a64:	sub	r7, r7, r5
   27a68:	bl	1259c <memcpy@plt>
   27a6c:	mov	r1, r9
   27a70:	mov	r0, r6
   27a74:	add	r4, r4, r5
   27a78:	bl	265a0 <crc32@@Base+0xce58>
   27a7c:	mov	r8, #0
   27a80:	b	27a04 <crc32@@Base+0xe2bc>
   27a84:	movw	r2, #8961	; 0x2301
   27a88:	movw	r3, #43913	; 0xab89
   27a8c:	movt	r2, #26437	; 0x6745
   27a90:	movt	r3, #61389	; 0xefcd
   27a94:	strd	r2, [r0, #8]
   27a98:	movw	r2, #56574	; 0xdcfe
   27a9c:	movw	r3, #21622	; 0x5476
   27aa0:	movt	r2, #39098	; 0x98ba
   27aa4:	movt	r3, #4146	; 0x1032
   27aa8:	strd	r2, [r0, #16]
   27aac:	mov	r3, #0
   27ab0:	movw	r2, #57840	; 0xe1f0
   27ab4:	str	r3, [r0]
   27ab8:	movt	r2, #50130	; 0xc3d2
   27abc:	str	r3, [r0, #4]
   27ac0:	str	r2, [r0, #24]
   27ac4:	bx	lr
   27ac8:	cmp	r2, #0
   27acc:	bxeq	lr
   27ad0:	b	279b8 <crc32@@Base+0xe270>
   27ad4:	ldr	r3, [r0]
   27ad8:	push	{r4, r5, r6, lr}
   27adc:	mov	r4, r0
   27ae0:	ldr	r0, [r0, #4]
   27ae4:	movw	r6, #61168	; 0xeef0
   27ae8:	movt	r6, #4
   27aec:	mov	r5, r1
   27af0:	lsr	r1, r3, #29
   27af4:	sub	sp, sp, #16
   27af8:	orr	r1, r1, r0, lsl #3
   27afc:	ldr	r0, [r6]
   27b00:	and	r2, r3, #63	; 0x3f
   27b04:	lsl	r3, r3, #3
   27b08:	cmp	r2, #55	; 0x37
   27b0c:	lsr	ip, r1, #24
   27b10:	rsbls	r2, r2, #56	; 0x38
   27b14:	rsbhi	r2, r2, #120	; 0x78
   27b18:	strb	r1, [sp, #7]
   27b1c:	strb	ip, [sp, #4]
   27b20:	lsr	ip, r1, #16
   27b24:	str	r0, [sp, #12]
   27b28:	lsr	r1, r1, #8
   27b2c:	mov	r0, r4
   27b30:	strb	r1, [sp, #6]
   27b34:	lsr	r1, r3, #24
   27b38:	strb	r1, [sp, #8]
   27b3c:	lsr	r1, r3, #16
   27b40:	strb	r1, [sp, #9]
   27b44:	movw	r1, #48744	; 0xbe68
   27b48:	movt	r1, #3
   27b4c:	strb	r3, [sp, #11]
   27b50:	lsr	r3, r3, #8
   27b54:	strb	ip, [sp, #5]
   27b58:	strb	r3, [sp, #10]
   27b5c:	bl	279b8 <crc32@@Base+0xe270>
   27b60:	mov	r2, #8
   27b64:	add	r1, sp, #4
   27b68:	mov	r0, r4
   27b6c:	bl	279b8 <crc32@@Base+0xe270>
   27b70:	ldrb	r3, [r4, #11]
   27b74:	strb	r3, [r5]
   27b78:	ldrh	r3, [r4, #10]
   27b7c:	strb	r3, [r5, #1]
   27b80:	ldr	r3, [r4, #8]
   27b84:	lsr	r3, r3, #8
   27b88:	strb	r3, [r5, #2]
   27b8c:	ldr	r3, [r4, #8]
   27b90:	strb	r3, [r5, #3]
   27b94:	ldrb	r3, [r4, #15]
   27b98:	strb	r3, [r5, #4]
   27b9c:	ldrh	r3, [r4, #14]
   27ba0:	strb	r3, [r5, #5]
   27ba4:	ldr	r3, [r4, #12]
   27ba8:	lsr	r3, r3, #8
   27bac:	strb	r3, [r5, #6]
   27bb0:	ldr	r3, [r4, #12]
   27bb4:	strb	r3, [r5, #7]
   27bb8:	ldrb	r3, [r4, #19]
   27bbc:	strb	r3, [r5, #8]
   27bc0:	ldrh	r3, [r4, #18]
   27bc4:	strb	r3, [r5, #9]
   27bc8:	ldr	r3, [r4, #16]
   27bcc:	lsr	r3, r3, #8
   27bd0:	strb	r3, [r5, #10]
   27bd4:	ldr	r3, [r4, #16]
   27bd8:	strb	r3, [r5, #11]
   27bdc:	ldrb	r3, [r4, #23]
   27be0:	strb	r3, [r5, #12]
   27be4:	ldrh	r3, [r4, #22]
   27be8:	strb	r3, [r5, #13]
   27bec:	ldr	r3, [r4, #20]
   27bf0:	lsr	r3, r3, #8
   27bf4:	strb	r3, [r5, #14]
   27bf8:	ldr	r3, [r4, #20]
   27bfc:	strb	r3, [r5, #15]
   27c00:	ldrb	r3, [r4, #27]
   27c04:	ldr	r1, [sp, #12]
   27c08:	ldr	r2, [r6]
   27c0c:	strb	r3, [r5, #16]
   27c10:	ldrh	r3, [r4, #26]
   27c14:	cmp	r1, r2
   27c18:	strb	r3, [r5, #17]
   27c1c:	ldr	r3, [r4, #24]
   27c20:	lsr	r3, r3, #8
   27c24:	strb	r3, [r5, #18]
   27c28:	ldr	r3, [r4, #24]
   27c2c:	strb	r3, [r5, #19]
   27c30:	bne	27c3c <crc32@@Base+0xe4f4>
   27c34:	add	sp, sp, #16
   27c38:	pop	{r4, r5, r6, pc}
   27c3c:	bl	12494 <__stack_chk_fail@plt>
   27c40:	push	{r4, r5, r6, lr}
   27c44:	movw	r4, #61168	; 0xeef0
   27c48:	movt	r4, #4
   27c4c:	sub	sp, sp, #96	; 0x60
   27c50:	cmp	r1, #0
   27c54:	movw	r3, #8961	; 0x2301
   27c58:	ldr	ip, [r4]
   27c5c:	movt	r3, #26437	; 0x6745
   27c60:	mov	r5, sp
   27c64:	str	r3, [sp, #8]
   27c68:	mov	r6, r2
   27c6c:	movw	r3, #43913	; 0xab89
   27c70:	str	ip, [sp, #92]	; 0x5c
   27c74:	movt	r3, #61389	; 0xefcd
   27c78:	str	r3, [sp, #12]
   27c7c:	movw	r3, #56574	; 0xdcfe
   27c80:	movt	r3, #39098	; 0x98ba
   27c84:	str	r3, [sp, #16]
   27c88:	movw	r3, #21622	; 0x5476
   27c8c:	movt	r3, #4146	; 0x1032
   27c90:	str	r3, [sp, #20]
   27c94:	movw	r3, #57840	; 0xe1f0
   27c98:	movt	r3, #50130	; 0xc3d2
   27c9c:	str	r3, [sp, #24]
   27ca0:	mov	r3, #0
   27ca4:	str	r3, [sp]
   27ca8:	str	r3, [sp, #4]
   27cac:	beq	27cc0 <crc32@@Base+0xe578>
   27cb0:	mov	r2, r1
   27cb4:	mov	r1, r0
   27cb8:	mov	r0, r5
   27cbc:	bl	279b8 <crc32@@Base+0xe270>
   27cc0:	mov	r1, r6
   27cc4:	mov	r0, r5
   27cc8:	bl	27ad4 <crc32@@Base+0xe38c>
   27ccc:	ldr	r2, [sp, #92]	; 0x5c
   27cd0:	ldr	r3, [r4]
   27cd4:	cmp	r2, r3
   27cd8:	bne	27ce4 <crc32@@Base+0xe59c>
   27cdc:	add	sp, sp, #96	; 0x60
   27ce0:	pop	{r4, r5, r6, pc}
   27ce4:	bl	12494 <__stack_chk_fail@plt>
   27ce8:	push	{r4, r5, r6, lr}
   27cec:	movw	r4, #61168	; 0xeef0
   27cf0:	movt	r4, #4
   27cf4:	sub	sp, sp, #96	; 0x60
   27cf8:	cmp	r1, #0
   27cfc:	movw	r3, #8961	; 0x2301
   27d00:	ldr	ip, [r4]
   27d04:	movt	r3, #26437	; 0x6745
   27d08:	mov	r5, sp
   27d0c:	str	r3, [sp, #8]
   27d10:	mov	r6, r2
   27d14:	movw	r3, #43913	; 0xab89
   27d18:	str	ip, [sp, #92]	; 0x5c
   27d1c:	movt	r3, #61389	; 0xefcd
   27d20:	str	r3, [sp, #12]
   27d24:	movw	r3, #56574	; 0xdcfe
   27d28:	movt	r3, #39098	; 0x98ba
   27d2c:	str	r3, [sp, #16]
   27d30:	movw	r3, #21622	; 0x5476
   27d34:	movt	r3, #4146	; 0x1032
   27d38:	str	r3, [sp, #20]
   27d3c:	movw	r3, #57840	; 0xe1f0
   27d40:	movt	r3, #50130	; 0xc3d2
   27d44:	str	r3, [sp, #24]
   27d48:	mov	r3, #0
   27d4c:	str	r3, [sp]
   27d50:	str	r3, [sp, #4]
   27d54:	beq	27d68 <crc32@@Base+0xe620>
   27d58:	mov	r2, r1
   27d5c:	mov	r1, r0
   27d60:	mov	r0, r5
   27d64:	bl	279b8 <crc32@@Base+0xe270>
   27d68:	mov	r1, r6
   27d6c:	mov	r0, r5
   27d70:	bl	27ad4 <crc32@@Base+0xe38c>
   27d74:	ldr	r2, [sp, #92]	; 0x5c
   27d78:	ldr	r3, [r4]
   27d7c:	cmp	r2, r3
   27d80:	bne	27d8c <crc32@@Base+0xe644>
   27d84:	add	sp, sp, #96	; 0x60
   27d88:	pop	{r4, r5, r6, pc}
   27d8c:	bl	12494 <__stack_chk_fail@plt>
   27d90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   27d94:	movw	r5, #61168	; 0xeef0
   27d98:	movt	r5, #4
   27d9c:	sub	sp, sp, #248	; 0xf8
   27da0:	mov	r4, r1
   27da4:	mov	r9, r0
   27da8:	ldr	ip, [r5]
   27dac:	mov	r1, #54	; 0x36
   27db0:	mov	r8, r2
   27db4:	add	r0, sp, #116	; 0x74
   27db8:	mov	r2, #64	; 0x40
   27dbc:	mov	r6, r3
   27dc0:	str	ip, [sp, #244]	; 0xf4
   27dc4:	ldr	r7, [sp, #280]	; 0x118
   27dc8:	bl	122e4 <memset@plt>
   27dcc:	add	r0, sp, #180	; 0xb4
   27dd0:	mov	r2, #64	; 0x40
   27dd4:	mov	r1, #92	; 0x5c
   27dd8:	bl	122e4 <memset@plt>
   27ddc:	cmp	r4, #0
   27de0:	ble	27e30 <crc32@@Base+0xe6e8>
   27de4:	sub	r0, r9, #1
   27de8:	add	lr, sp, #179	; 0xb3
   27dec:	add	r9, sp, #115	; 0x73
   27df0:	mov	r2, #0
   27df4:	add	r2, r2, #1
   27df8:	ldrb	r1, [r9, #1]!
   27dfc:	cmp	r2, #63	; 0x3f
   27e00:	ldrb	sl, [lr, #1]!
   27e04:	ldrb	r3, [r0, #1]!
   27e08:	movle	ip, #0
   27e0c:	movgt	ip, #1
   27e10:	cmp	r4, r2
   27e14:	orrle	ip, ip, #1
   27e18:	eor	r1, r1, r3
   27e1c:	cmp	ip, #0
   27e20:	eor	r3, r3, sl
   27e24:	strb	r1, [r9]
   27e28:	strb	r3, [lr]
   27e2c:	beq	27df4 <crc32@@Base+0xe6ac>
   27e30:	add	r1, sp, #116	; 0x74
   27e34:	mov	r2, #64	; 0x40
   27e38:	add	r0, sp, #4
   27e3c:	movw	r3, #8961	; 0x2301
   27e40:	movt	r3, #26437	; 0x6745
   27e44:	str	r3, [sp, #12]
   27e48:	movw	r3, #43913	; 0xab89
   27e4c:	movt	r3, #61389	; 0xefcd
   27e50:	str	r3, [sp, #16]
   27e54:	movw	r3, #56574	; 0xdcfe
   27e58:	movt	r3, #39098	; 0x98ba
   27e5c:	str	r3, [sp, #20]
   27e60:	movw	r3, #21622	; 0x5476
   27e64:	movt	r3, #4146	; 0x1032
   27e68:	str	r3, [sp, #24]
   27e6c:	movw	r3, #57840	; 0xe1f0
   27e70:	movt	r3, #50130	; 0xc3d2
   27e74:	str	r3, [sp, #28]
   27e78:	mov	r3, #0
   27e7c:	str	r3, [sp, #4]
   27e80:	str	r3, [sp, #8]
   27e84:	bl	279b8 <crc32@@Base+0xe270>
   27e88:	cmp	r6, #0
   27e8c:	beq	27ea0 <crc32@@Base+0xe758>
   27e90:	mov	r2, r6
   27e94:	mov	r1, r8
   27e98:	add	r0, sp, #4
   27e9c:	bl	279b8 <crc32@@Base+0xe270>
   27ea0:	add	r0, sp, #4
   27ea4:	add	r1, sp, #96	; 0x60
   27ea8:	bl	27ad4 <crc32@@Base+0xe38c>
   27eac:	add	r1, sp, #180	; 0xb4
   27eb0:	mov	r2, #64	; 0x40
   27eb4:	add	r0, sp, #4
   27eb8:	movw	r3, #8961	; 0x2301
   27ebc:	movt	r3, #26437	; 0x6745
   27ec0:	str	r3, [sp, #12]
   27ec4:	movw	r3, #43913	; 0xab89
   27ec8:	movt	r3, #61389	; 0xefcd
   27ecc:	str	r3, [sp, #16]
   27ed0:	movw	r3, #56574	; 0xdcfe
   27ed4:	movt	r3, #39098	; 0x98ba
   27ed8:	str	r3, [sp, #20]
   27edc:	movw	r3, #21622	; 0x5476
   27ee0:	movt	r3, #4146	; 0x1032
   27ee4:	str	r3, [sp, #24]
   27ee8:	movw	r3, #57840	; 0xe1f0
   27eec:	movt	r3, #50130	; 0xc3d2
   27ef0:	str	r3, [sp, #28]
   27ef4:	mov	r3, #0
   27ef8:	str	r3, [sp, #4]
   27efc:	str	r3, [sp, #8]
   27f00:	bl	279b8 <crc32@@Base+0xe270>
   27f04:	mov	r2, #20
   27f08:	add	r1, sp, #96	; 0x60
   27f0c:	add	r0, sp, #4
   27f10:	bl	279b8 <crc32@@Base+0xe270>
   27f14:	mov	r1, r7
   27f18:	add	r0, sp, #4
   27f1c:	bl	27ad4 <crc32@@Base+0xe38c>
   27f20:	ldr	r2, [sp, #244]	; 0xf4
   27f24:	ldr	r3, [r5]
   27f28:	cmp	r2, r3
   27f2c:	bne	27f38 <crc32@@Base+0xe7f0>
   27f30:	add	sp, sp, #248	; 0xf8
   27f34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27f38:	bl	12494 <__stack_chk_fail@plt>
   27f3c:	mov	r0, #0
   27f40:	bx	lr
   27f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27f48:	mov	r7, r0
   27f4c:	ldr	r8, [r0, #24]
   27f50:	sub	sp, sp, #116	; 0x74
   27f54:	ldr	r4, [r7, #16]
   27f58:	movw	lr, #12184	; 0x2f98
   27f5c:	ldr	r6, [r7, #36]	; 0x24
   27f60:	movt	lr, #17034	; 0x428a
   27f64:	ldr	r0, [r0, #32]
   27f68:	ror	r2, r8, #11
   27f6c:	ldr	r9, [r7, #28]
   27f70:	eor	r2, r2, r8, ror #6
   27f74:	ldr	ip, [r7, #8]
   27f78:	add	lr, r6, lr
   27f7c:	ldr	fp, [r7, #12]
   27f80:	eor	r2, r2, r8, ror #25
   27f84:	str	r4, [sp, #76]	; 0x4c
   27f88:	mov	r5, r0
   27f8c:	add	r2, r2, lr
   27f90:	eor	r0, r9, r0
   27f94:	ldr	lr, [sp, #76]	; 0x4c
   27f98:	mov	sl, ip
   27f9c:	str	r6, [sp, #104]	; 0x68
   27fa0:	orr	r4, sl, fp
   27fa4:	ldr	r6, [r1]
   27fa8:	and	r0, r0, r8
   27fac:	ror	ip, ip, #13
   27fb0:	str	r5, [sp, #88]	; 0x58
   27fb4:	eor	r0, r0, r5
   27fb8:	eor	ip, ip, sl, ror #2
   27fbc:	and	r5, sl, fp
   27fc0:	and	r4, r4, lr
   27fc4:	ldr	lr, [r7, #20]
   27fc8:	orr	r4, r4, r5
   27fcc:	add	r2, r2, r0
   27fd0:	eor	ip, ip, sl, ror #22
   27fd4:	rev	r0, r6
   27fd8:	add	ip, ip, r4
   27fdc:	add	r2, r2, r0
   27fe0:	ldr	r5, [r1, #4]
   27fe4:	str	r0, [sp]
   27fe8:	add	r0, ip, r2
   27fec:	str	lr, [sp, #92]	; 0x5c
   27ff0:	add	lr, lr, r2
   27ff4:	ldr	r2, [sp, #88]	; 0x58
   27ff8:	eor	r6, r8, r9
   27ffc:	movw	r3, #17553	; 0x4491
   28000:	movt	r3, #28983	; 0x7137
   28004:	orr	r4, sl, r0
   28008:	and	r6, r6, lr
   2800c:	add	r3, r2, r3
   28010:	ror	ip, r0, #13
   28014:	rev	r2, r5
   28018:	ror	r5, lr, #11
   2801c:	str	r7, [sp, #108]	; 0x6c
   28020:	eor	r6, r6, r9
   28024:	and	r7, sl, r0
   28028:	add	r3, r3, r2
   2802c:	eor	r5, r5, lr, ror #6
   28030:	and	r4, r4, fp
   28034:	eor	ip, ip, r0, ror #2
   28038:	eor	r5, r5, lr, ror #25
   2803c:	eor	ip, ip, r0, ror #22
   28040:	add	r3, r6, r3
   28044:	orr	r4, r4, r7
   28048:	add	r3, r3, r5
   2804c:	add	r4, ip, r4
   28050:	str	r2, [sp, #8]
   28054:	add	r2, r4, r3
   28058:	ldr	r4, [r1, #8]
   2805c:	ldr	ip, [sp, #76]	; 0x4c
   28060:	rev	r5, r4
   28064:	str	fp, [sp, #84]	; 0x54
   28068:	add	r6, ip, r3
   2806c:	mov	fp, r8
   28070:	mov	r3, r5
   28074:	eor	r8, r8, lr
   28078:	orr	r5, r0, r2
   2807c:	ror	r4, r2, #13
   28080:	movw	ip, #64463	; 0xfbcf
   28084:	movt	ip, #46528	; 0xb5c0
   28088:	str	r9, [sp, #100]	; 0x64
   2808c:	and	r8, r8, r6
   28090:	add	ip, r9, ip
   28094:	ror	r7, r6, #11
   28098:	and	r9, r0, r2
   2809c:	and	r5, r5, sl
   280a0:	eor	r4, r4, r2, ror #2
   280a4:	eor	r8, r8, fp
   280a8:	eor	r4, r4, r2, ror #22
   280ac:	add	ip, ip, r3
   280b0:	eor	r7, r7, r6, ror #6
   280b4:	orr	r5, r5, r9
   280b8:	eor	r7, r7, r6, ror #25
   280bc:	add	r5, r4, r5
   280c0:	add	ip, r8, ip
   280c4:	ldr	r4, [sp, #84]	; 0x54
   280c8:	add	ip, ip, r7
   280cc:	str	r3, [sp, #20]
   280d0:	add	r7, r4, ip
   280d4:	ldr	r4, [r1, #12]
   280d8:	add	r3, r5, ip
   280dc:	str	sl, [sp, #80]	; 0x50
   280e0:	rev	r5, r4
   280e4:	eor	sl, lr, r6
   280e8:	movw	ip, #56229	; 0xdba5
   280ec:	movt	ip, #59829	; 0xe9b5
   280f0:	mov	r9, r5
   280f4:	and	sl, sl, r7
   280f8:	orr	r5, r2, r3
   280fc:	add	ip, fp, ip
   28100:	ror	r8, r7, #11
   28104:	ror	r4, r3, #13
   28108:	str	fp, [sp, #96]	; 0x60
   2810c:	eor	sl, sl, lr
   28110:	and	fp, r2, r3
   28114:	add	ip, ip, r9
   28118:	eor	r8, r8, r7, ror #6
   2811c:	and	r5, r5, r0
   28120:	eor	r4, r4, r3, ror #2
   28124:	eor	r8, r8, r7, ror #25
   28128:	orr	r5, r5, fp
   2812c:	eor	r4, r4, r3, ror #22
   28130:	ldr	fp, [r1, #16]
   28134:	add	ip, sl, ip
   28138:	ldr	sl, [sp, #80]	; 0x50
   2813c:	add	ip, ip, r8
   28140:	str	r9, [sp, #24]
   28144:	add	r9, r4, r5
   28148:	add	r9, r9, ip
   2814c:	add	r5, sl, ip
   28150:	rev	ip, fp
   28154:	movw	r8, #49755	; 0xc25b
   28158:	movt	r8, #14678	; 0x3956
   2815c:	ror	fp, r5, #11
   28160:	mov	sl, ip
   28164:	eor	ip, r6, r7
   28168:	add	r8, sl, r8
   2816c:	and	ip, ip, r5
   28170:	str	sl, [sp, #16]
   28174:	eor	ip, ip, r6
   28178:	orr	sl, r3, r9
   2817c:	ror	r4, r9, #13
   28180:	add	lr, r8, lr
   28184:	eor	fp, fp, r5, ror #6
   28188:	and	r8, r3, r9
   2818c:	eor	fp, fp, r5, ror #25
   28190:	and	sl, sl, r2
   28194:	eor	r4, r4, r9, ror #2
   28198:	add	lr, ip, lr
   2819c:	eor	r4, r4, r9, ror #22
   281a0:	add	lr, lr, fp
   281a4:	orr	sl, sl, r8
   281a8:	ldr	fp, [r1, #20]
   281ac:	add	r8, r4, sl
   281b0:	add	ip, r0, lr
   281b4:	add	r8, r8, lr
   281b8:	rev	lr, fp
   281bc:	movw	r4, #4593	; 0x11f1
   281c0:	movt	r4, #23025	; 0x59f1
   281c4:	orr	sl, r9, r8
   281c8:	mov	fp, lr
   281cc:	eor	lr, r7, r5
   281d0:	str	fp, [sp, #56]	; 0x38
   281d4:	add	r4, fp, r4
   281d8:	and	lr, lr, ip
   281dc:	ror	fp, ip, #11
   281e0:	ror	r0, r8, #13
   281e4:	eor	lr, lr, r7
   281e8:	add	r6, r4, r6
   281ec:	eor	fp, fp, ip, ror #6
   281f0:	and	r4, r9, r8
   281f4:	and	sl, sl, r3
   281f8:	eor	r0, r0, r8, ror #2
   281fc:	eor	fp, fp, ip, ror #25
   28200:	eor	r0, r0, r8, ror #22
   28204:	add	r6, lr, r6
   28208:	orr	sl, sl, r4
   2820c:	add	r6, r6, fp
   28210:	add	r4, r0, sl
   28214:	ldr	fp, [r1, #24]
   28218:	add	r4, r4, r6
   2821c:	add	r2, r2, r6
   28220:	rev	lr, fp
   28224:	eor	r0, r5, ip
   28228:	movw	r6, #33444	; 0x82a4
   2822c:	movt	r6, #37439	; 0x923f
   28230:	str	lr, [sp, #68]	; 0x44
   28234:	add	r6, lr, r6
   28238:	orr	sl, r8, r4
   2823c:	and	r0, r0, r2
   28240:	ror	fp, r2, #11
   28244:	ror	lr, r4, #13
   28248:	eor	r0, r0, r5
   2824c:	add	r7, r6, r7
   28250:	eor	fp, fp, r2, ror #6
   28254:	and	r6, r8, r4
   28258:	and	sl, sl, r9
   2825c:	eor	lr, lr, r4, ror #2
   28260:	eor	fp, fp, r2, ror #25
   28264:	eor	lr, lr, r4, ror #22
   28268:	add	r7, r0, r7
   2826c:	orr	sl, sl, r6
   28270:	add	r7, r7, fp
   28274:	add	r6, lr, sl
   28278:	ldr	fp, [r1, #28]
   2827c:	add	r0, r3, r7
   28280:	add	r6, r6, r7
   28284:	eor	r3, ip, r2
   28288:	rev	r7, fp
   2828c:	movw	lr, #24277	; 0x5ed5
   28290:	movt	lr, #43804	; 0xab1c
   28294:	str	r7, [sp, #28]
   28298:	add	lr, r7, lr
   2829c:	orr	sl, r4, r6
   282a0:	and	r3, r3, r0
   282a4:	ror	fp, r0, #11
   282a8:	ror	r7, r6, #13
   282ac:	eor	r3, r3, ip
   282b0:	add	r5, lr, r5
   282b4:	eor	fp, fp, r0, ror #6
   282b8:	and	lr, r4, r6
   282bc:	and	sl, sl, r8
   282c0:	eor	r7, r7, r6, ror #2
   282c4:	eor	fp, fp, r0, ror #25
   282c8:	eor	r7, r7, r6, ror #22
   282cc:	add	r5, r3, r5
   282d0:	orr	sl, sl, lr
   282d4:	add	r5, r5, fp
   282d8:	ldr	r3, [r1, #32]
   282dc:	add	lr, r7, sl
   282e0:	add	lr, lr, r5
   282e4:	add	r9, r9, r5
   282e8:	movw	fp, #43672	; 0xaa98
   282ec:	rev	r5, r3
   282f0:	movt	fp, #55303	; 0xd807
   282f4:	eor	r3, r2, r0
   282f8:	str	r5, [sp, #44]	; 0x2c
   282fc:	add	fp, r5, fp
   28300:	orr	r7, r6, lr
   28304:	and	r3, r3, r9
   28308:	ror	sl, r9, #11
   2830c:	ror	r5, lr, #13
   28310:	eor	r3, r3, r2
   28314:	add	ip, fp, ip
   28318:	eor	sl, sl, r9, ror #6
   2831c:	and	fp, r6, lr
   28320:	and	r7, r7, r4
   28324:	eor	r5, r5, lr, ror #2
   28328:	eor	sl, sl, r9, ror #25
   2832c:	orr	r7, r7, fp
   28330:	add	ip, r3, ip
   28334:	eor	r5, r5, lr, ror #22
   28338:	add	ip, ip, sl
   2833c:	add	r5, r5, r7
   28340:	ldr	sl, [r1, #36]	; 0x24
   28344:	add	r8, r8, ip
   28348:	add	ip, r5, ip
   2834c:	eor	r3, r0, r9
   28350:	rev	r5, sl
   28354:	movw	fp, #23297	; 0x5b01
   28358:	movt	fp, #4739	; 0x1283
   2835c:	str	r5, [sp, #32]
   28360:	add	fp, r5, fp
   28364:	orr	r7, lr, ip
   28368:	and	r3, r3, r8
   2836c:	ror	sl, r8, #11
   28370:	ror	r5, ip, #13
   28374:	eor	r3, r3, r0
   28378:	add	r2, fp, r2
   2837c:	eor	sl, sl, r8, ror #6
   28380:	and	fp, lr, ip
   28384:	and	r7, r7, r6
   28388:	eor	r5, r5, ip, ror #2
   2838c:	eor	sl, sl, r8, ror #25
   28390:	orr	r7, r7, fp
   28394:	add	r2, r3, r2
   28398:	eor	r5, r5, ip, ror #22
   2839c:	add	r2, r2, sl
   283a0:	add	r5, r5, r7
   283a4:	ldr	sl, [r1, #40]	; 0x28
   283a8:	add	r4, r4, r2
   283ac:	add	r2, r5, r2
   283b0:	rev	r7, sl
   283b4:	eor	r5, r9, r8
   283b8:	movw	r3, #34238	; 0x85be
   283bc:	movt	r3, #9265	; 0x2431
   283c0:	str	r7, [sp, #60]	; 0x3c
   283c4:	orr	sl, ip, r2
   283c8:	add	r3, r7, r3
   283cc:	and	r5, r5, r4
   283d0:	ror	fp, r4, #11
   283d4:	ror	r7, r2, #13
   283d8:	eor	r5, r5, r9
   283dc:	add	r3, r3, r0
   283e0:	eor	fp, fp, r4, ror #6
   283e4:	and	r0, ip, r2
   283e8:	and	sl, sl, lr
   283ec:	eor	r7, r7, r2, ror #2
   283f0:	eor	fp, fp, r4, ror #25
   283f4:	eor	r7, r7, r2, ror #22
   283f8:	add	r3, r5, r3
   283fc:	orr	sl, sl, r0
   28400:	ldr	r5, [r1, #44]	; 0x2c
   28404:	add	r3, r3, fp
   28408:	add	r0, r7, sl
   2840c:	add	r6, r6, r3
   28410:	add	r0, r0, r3
   28414:	rev	r3, r5
   28418:	movw	fp, #32195	; 0x7dc3
   2841c:	movt	fp, #21772	; 0x550c
   28420:	mov	sl, r3
   28424:	eor	r3, r8, r4
   28428:	str	sl, [sp, #36]	; 0x24
   2842c:	add	fp, sl, fp
   28430:	and	r3, r3, r6
   28434:	ror	sl, r6, #11
   28438:	orr	r7, r2, r0
   2843c:	eor	r3, r3, r8
   28440:	ror	r5, r0, #13
   28444:	add	r9, fp, r9
   28448:	eor	sl, sl, r6, ror #6
   2844c:	and	fp, r2, r0
   28450:	eor	sl, sl, r6, ror #25
   28454:	and	r7, r7, ip
   28458:	eor	r5, r5, r0, ror #2
   2845c:	add	r9, r3, r9
   28460:	add	r9, r9, sl
   28464:	ldr	r3, [r1, #48]	; 0x30
   28468:	eor	r5, r5, r0, ror #22
   2846c:	orr	r7, r7, fp
   28470:	add	lr, lr, r9
   28474:	add	fp, r5, r7
   28478:	add	fp, fp, r9
   2847c:	eor	r5, r4, r6
   28480:	rev	r9, r3
   28484:	movw	sl, #23924	; 0x5d74
   28488:	movt	sl, #29374	; 0x72be
   2848c:	and	r5, r5, lr
   28490:	add	sl, r9, sl
   28494:	ror	r7, lr, #11
   28498:	str	r9, [sp, #64]	; 0x40
   2849c:	eor	r5, r5, r4
   284a0:	orr	r9, r0, fp
   284a4:	ror	r3, fp, #13
   284a8:	add	r8, sl, r8
   284ac:	eor	r7, r7, lr, ror #6
   284b0:	and	sl, r0, fp
   284b4:	eor	r7, r7, lr, ror #25
   284b8:	and	r9, r9, r2
   284bc:	eor	r3, r3, fp, ror #2
   284c0:	add	r8, r5, r8
   284c4:	eor	r3, r3, fp, ror #22
   284c8:	add	r8, r8, r7
   284cc:	ldr	r5, [r1, #52]	; 0x34
   284d0:	orr	r9, r9, sl
   284d4:	add	ip, ip, r8
   284d8:	add	sl, r3, r9
   284dc:	eor	r3, r6, lr
   284e0:	add	sl, sl, r8
   284e4:	movw	r9, #45566	; 0xb1fe
   284e8:	rev	r8, r5
   284ec:	movt	r9, #32990	; 0x80de
   284f0:	add	r9, r8, r9
   284f4:	and	r3, r3, ip
   284f8:	ror	r7, ip, #11
   284fc:	str	r8, [sp, #40]	; 0x28
   28500:	eor	r3, r3, r6
   28504:	orr	r8, fp, sl
   28508:	add	r4, r9, r4
   2850c:	ror	r5, sl, #13
   28510:	eor	r7, r7, ip, ror #6
   28514:	add	r4, r3, r4
   28518:	and	r8, r8, r0
   2851c:	and	r3, fp, sl
   28520:	eor	r5, r5, sl, ror #2
   28524:	eor	r7, r7, ip, ror #25
   28528:	add	r7, r4, r7
   2852c:	orr	r8, r8, r3
   28530:	ldr	r4, [r1, #56]	; 0x38
   28534:	eor	r5, r5, sl, ror #22
   28538:	add	r2, r2, r7
   2853c:	add	r5, r5, r8
   28540:	add	r9, r5, r7
   28544:	rev	r4, r4
   28548:	eor	r7, lr, ip
   2854c:	movw	r3, #1703	; 0x6a7
   28550:	movt	r3, #39900	; 0x9bdc
   28554:	and	r7, r7, r2
   28558:	add	r3, r4, r3
   2855c:	ror	r8, r2, #11
   28560:	add	r3, r3, r6
   28564:	eor	r8, r8, r2, ror #6
   28568:	eor	r6, r7, lr
   2856c:	orr	r5, sl, r9
   28570:	eor	r8, r8, r2, ror #25
   28574:	add	r6, r6, r3
   28578:	ror	r3, r9, #13
   2857c:	add	r6, r6, r8
   28580:	and	r5, r5, fp
   28584:	ldr	r1, [r1, #60]	; 0x3c
   28588:	and	r8, sl, r9
   2858c:	eor	r3, r3, r9, ror #2
   28590:	eor	r3, r3, r9, ror #22
   28594:	orr	r8, r5, r8
   28598:	add	r0, r0, r6
   2859c:	rev	r5, r1
   285a0:	add	r8, r3, r8
   285a4:	movw	r1, #61812	; 0xf174
   285a8:	eor	r3, ip, r2
   285ac:	movt	r1, #49563	; 0xc19b
   285b0:	add	r8, r8, r6
   285b4:	add	r1, r5, r1
   285b8:	and	r3, r3, r0
   285bc:	add	r1, r1, lr
   285c0:	eor	r3, r3, ip
   285c4:	str	r4, [sp, #48]	; 0x30
   285c8:	add	r3, r3, r1
   285cc:	ldr	r4, [sp, #32]
   285d0:	ldr	r1, [sp]
   285d4:	ror	r6, r0, #11
   285d8:	ror	r7, r8, #13
   285dc:	orr	lr, r9, r8
   285e0:	eor	r6, r6, r0, ror #6
   285e4:	eor	r7, r7, r8, ror #2
   285e8:	str	r5, [sp, #4]
   285ec:	and	lr, lr, sl
   285f0:	eor	r5, r6, r0, ror #25
   285f4:	add	r6, r1, r4
   285f8:	eor	r1, r7, r8, ror #22
   285fc:	and	r7, r9, r8
   28600:	orr	r7, lr, r7
   28604:	ldr	lr, [sp, #48]	; 0x30
   28608:	str	r0, [sp, #12]
   2860c:	add	r5, r3, r5
   28610:	ldr	r0, [sp, #8]
   28614:	add	r7, r1, r7
   28618:	ror	r3, lr, #19
   2861c:	add	fp, fp, r5
   28620:	eor	r3, r3, lr, ror #17
   28624:	add	r7, r7, r5
   28628:	ror	r1, r0, #18
   2862c:	eor	r3, r3, lr, lsr #10
   28630:	eor	r1, r1, r0, ror #7
   28634:	add	r3, r3, r6
   28638:	eor	lr, r1, r0, lsr #3
   2863c:	ldr	r6, [sp, #12]
   28640:	add	r3, r3, lr
   28644:	str	r3, [sp]
   28648:	ldr	lr, [sp]
   2864c:	eor	r3, r2, r6
   28650:	movw	r1, #27073	; 0x69c1
   28654:	movt	r1, #58523	; 0xe49b
   28658:	add	r1, lr, r1
   2865c:	and	r3, r3, fp
   28660:	ror	r5, fp, #11
   28664:	ldr	lr, [sp, #4]
   28668:	add	r1, r1, ip
   2866c:	eor	r3, r3, r2
   28670:	eor	r5, r5, fp, ror #6
   28674:	orr	ip, r8, r7
   28678:	eor	r5, r5, fp, ror #25
   2867c:	add	r3, r3, r1
   28680:	ror	r6, r7, #13
   28684:	ldr	r1, [sp, #60]	; 0x3c
   28688:	ldr	r4, [sp, #20]
   2868c:	add	r3, r3, r5
   28690:	and	ip, ip, r9
   28694:	and	r5, r8, r7
   28698:	eor	r6, r6, r7, ror #2
   2869c:	orr	ip, ip, r5
   286a0:	eor	r6, r6, r7, ror #22
   286a4:	ror	r5, lr, #19
   286a8:	add	r6, r6, ip
   286ac:	eor	r5, r5, lr, ror #17
   286b0:	ror	ip, r4, #18
   286b4:	add	r1, r0, r1
   286b8:	eor	r5, r5, lr, lsr #10
   286bc:	eor	ip, ip, r4, ror #7
   286c0:	add	lr, r6, r3
   286c4:	ldr	r6, [sp, #12]
   286c8:	add	sl, sl, r3
   286cc:	add	r5, r5, r1
   286d0:	eor	ip, ip, r4, lsr #3
   286d4:	eor	r3, r6, fp
   286d8:	add	ip, r5, ip
   286dc:	movw	r1, #18310	; 0x4786
   286e0:	movt	r1, #61374	; 0xefbe
   286e4:	and	r3, r3, sl
   286e8:	add	r1, ip, r1
   286ec:	ror	r5, sl, #11
   286f0:	add	r1, r1, r2
   286f4:	eor	r3, r3, r6
   286f8:	eor	r5, r5, sl, ror #6
   286fc:	orr	r2, r7, lr
   28700:	eor	r5, r5, sl, ror #25
   28704:	add	r3, r3, r1
   28708:	ror	r1, lr, #13
   2870c:	add	r3, r3, r5
   28710:	and	r2, r2, r8
   28714:	and	r5, r7, lr
   28718:	eor	r1, r1, lr, ror #2
   2871c:	ldr	r6, [sp, #24]
   28720:	ldr	r0, [sp, #36]	; 0x24
   28724:	eor	r1, r1, lr, ror #22
   28728:	orr	r5, r2, r5
   2872c:	str	ip, [sp, #52]	; 0x34
   28730:	add	r5, r1, r5
   28734:	ldr	r1, [sp]
   28738:	add	ip, r4, r0
   2873c:	ldr	r0, [sp]
   28740:	ror	r2, r6, #18
   28744:	add	r9, r9, r3
   28748:	eor	r2, r2, r6, ror #7
   2874c:	ror	r1, r1, #19
   28750:	eor	r2, r2, r6, lsr #3
   28754:	eor	r1, r1, r0, ror #17
   28758:	add	r2, r2, ip
   2875c:	eor	r1, r1, r0, lsr #10
   28760:	add	r5, r5, r3
   28764:	add	r1, r2, r1
   28768:	ldr	r0, [sp, #12]
   2876c:	eor	r3, fp, sl
   28770:	movw	r2, #40390	; 0x9dc6
   28774:	movt	r2, #4033	; 0xfc1
   28778:	str	r1, [sp, #8]
   2877c:	add	r2, r1, r2
   28780:	and	r3, r3, r9
   28784:	ror	r1, r9, #11
   28788:	add	r0, r2, r0
   2878c:	eor	r1, r1, r9, ror #6
   28790:	eor	r3, r3, fp
   28794:	ldr	r4, [sp, #16]
   28798:	add	r3, r3, r0
   2879c:	eor	r0, r1, r9, ror #25
   287a0:	ldr	r1, [sp, #64]	; 0x40
   287a4:	orr	ip, lr, r5
   287a8:	ror	r2, r5, #13
   287ac:	add	r3, r3, r0
   287b0:	add	r1, r6, r1
   287b4:	ldr	r6, [sp, #52]	; 0x34
   287b8:	and	r0, lr, r5
   287bc:	and	ip, ip, r7
   287c0:	eor	r2, r2, r5, ror #2
   287c4:	orr	ip, ip, r0
   287c8:	eor	r2, r2, r5, ror #22
   287cc:	ror	r0, r4, #18
   287d0:	eor	r0, r0, r4, ror #7
   287d4:	add	r2, r2, ip
   287d8:	ror	ip, r6, #19
   287dc:	eor	r0, r0, r4, lsr #3
   287e0:	eor	ip, ip, r6, ror #17
   287e4:	add	r0, r0, r1
   287e8:	eor	r1, ip, r6, lsr #10
   287ec:	add	r8, r8, r3
   287f0:	add	r1, r0, r1
   287f4:	movw	ip, #41420	; 0xa1cc
   287f8:	movt	ip, #9228	; 0x240c
   287fc:	add	r2, r2, r3
   28800:	mov	r0, r1
   28804:	eor	r1, sl, r9
   28808:	add	ip, r0, ip
   2880c:	and	r1, r1, r8
   28810:	add	fp, ip, fp
   28814:	eor	r1, r1, sl
   28818:	ldr	r4, [sp, #16]
   2881c:	ror	r3, r8, #11
   28820:	add	r1, r1, fp
   28824:	ldr	fp, [sp, #40]	; 0x28
   28828:	ldr	r6, [sp, #56]	; 0x38
   2882c:	eor	r3, r3, r8, ror #6
   28830:	str	r0, [sp, #12]
   28834:	eor	r3, r3, r8, ror #25
   28838:	orr	r0, r5, r2
   2883c:	add	fp, r4, fp
   28840:	ror	ip, r2, #13
   28844:	ldr	r4, [sp, #8]
   28848:	add	r1, r1, r3
   2884c:	and	r0, r0, lr
   28850:	and	r3, r5, r2
   28854:	eor	ip, ip, r2, ror #2
   28858:	eor	ip, ip, r2, ror #22
   2885c:	orr	r3, r0, r3
   28860:	ror	r0, r6, #18
   28864:	add	r3, ip, r3
   28868:	eor	r0, r0, r6, ror #7
   2886c:	ror	ip, r4, #19
   28870:	eor	r0, r0, r6, lsr #3
   28874:	eor	ip, ip, r4, ror #17
   28878:	add	r0, r0, fp
   2887c:	eor	ip, ip, r4, lsr #10
   28880:	add	ip, r0, ip
   28884:	add	r7, r7, r1
   28888:	add	r3, r3, r1
   2888c:	eor	r1, r9, r8
   28890:	mov	fp, ip
   28894:	movw	ip, #11375	; 0x2c6f
   28898:	movt	ip, #11753	; 0x2de9
   2889c:	str	fp, [sp, #16]
   288a0:	ldr	r4, [sp, #48]	; 0x30
   288a4:	add	ip, fp, ip
   288a8:	and	r1, r1, r7
   288ac:	ror	fp, r7, #11
   288b0:	add	sl, ip, sl
   288b4:	eor	fp, fp, r7, ror #6
   288b8:	eor	r1, r1, r9
   288bc:	orr	r0, r2, r3
   288c0:	add	r1, r1, sl
   288c4:	eor	sl, fp, r7, ror #25
   288c8:	add	fp, r6, r4
   288cc:	ldr	r6, [sp, #68]	; 0x44
   288d0:	ldr	r4, [sp, #12]
   288d4:	ror	ip, r3, #13
   288d8:	add	r1, r1, sl
   288dc:	and	r0, r0, r5
   288e0:	and	sl, r2, r3
   288e4:	eor	ip, ip, r3, ror #2
   288e8:	orr	sl, r0, sl
   288ec:	eor	ip, ip, r3, ror #22
   288f0:	ror	r0, r6, #18
   288f4:	add	ip, ip, sl
   288f8:	eor	r0, r0, r6, ror #7
   288fc:	ror	sl, r4, #19
   28900:	eor	sl, sl, r4, ror #17
   28904:	eor	r0, r0, r6, lsr #3
   28908:	add	lr, lr, r1
   2890c:	add	r0, r0, fp
   28910:	eor	fp, sl, r4, lsr #10
   28914:	add	ip, ip, r1
   28918:	add	r0, r0, fp
   2891c:	eor	r1, r8, r7
   28920:	ldr	fp, [sp, #4]
   28924:	movw	sl, #33962	; 0x84aa
   28928:	movt	sl, #19060	; 0x4a74
   2892c:	str	r0, [sp, #20]
   28930:	add	sl, r0, sl
   28934:	and	r1, r1, lr
   28938:	ror	r0, lr, #11
   2893c:	add	sl, sl, r9
   28940:	add	fp, r6, fp
   28944:	eor	r1, r1, r8
   28948:	ldr	r6, [sp, #28]
   2894c:	eor	r0, r0, lr, ror #6
   28950:	ldr	r4, [sp, #16]
   28954:	orr	r9, r3, ip
   28958:	eor	r0, r0, lr, ror #25
   2895c:	add	r1, r1, sl
   28960:	ror	sl, ip, #13
   28964:	add	r1, r1, r0
   28968:	and	r9, r9, r2
   2896c:	and	r0, r3, ip
   28970:	eor	sl, sl, ip, ror #2
   28974:	orr	r0, r9, r0
   28978:	eor	sl, sl, ip, ror #22
   2897c:	ror	r9, r6, #18
   28980:	eor	r9, r9, r6, ror #7
   28984:	add	r0, sl, r0
   28988:	ror	sl, r4, #19
   2898c:	eor	r9, r9, r6, lsr #3
   28990:	eor	sl, sl, r4, ror #17
   28994:	add	r5, r5, r1
   28998:	eor	sl, sl, r4, lsr #10
   2899c:	add	r9, r9, fp
   289a0:	add	r0, r0, r1
   289a4:	ldr	r6, [sp, #44]	; 0x2c
   289a8:	add	r9, r9, sl
   289ac:	eor	r1, r7, lr
   289b0:	movw	sl, #43484	; 0xa9dc
   289b4:	movt	sl, #23728	; 0x5cb0
   289b8:	and	r1, r1, r5
   289bc:	add	sl, r9, sl
   289c0:	ror	fp, r5, #11
   289c4:	add	sl, sl, r8
   289c8:	eor	fp, fp, r5, ror #6
   289cc:	eor	r8, r1, r7
   289d0:	ldr	r4, [sp, #20]
   289d4:	eor	fp, fp, r5, ror #25
   289d8:	str	r9, [sp, #24]
   289dc:	add	r8, r8, sl
   289e0:	orr	r9, ip, r0
   289e4:	ror	r1, r0, #13
   289e8:	ror	sl, r6, #18
   289ec:	add	r8, r8, fp
   289f0:	and	r9, r9, r3
   289f4:	and	fp, ip, r0
   289f8:	eor	r1, r1, r0, ror #2
   289fc:	eor	sl, sl, r6, ror #7
   28a00:	orr	r9, r9, fp
   28a04:	eor	r1, r1, r0, ror #22
   28a08:	eor	sl, sl, r6, lsr #3
   28a0c:	ldr	r6, [sp, #28]
   28a10:	ror	fp, r4, #19
   28a14:	add	r1, r1, r9
   28a18:	add	r9, r2, r8
   28a1c:	ldr	r2, [sp]
   28a20:	add	sl, sl, r6
   28a24:	eor	fp, fp, r4, ror #17
   28a28:	eor	fp, fp, r4, lsr #10
   28a2c:	add	sl, sl, r2
   28a30:	add	r1, r1, r8
   28a34:	ldr	r4, [sp, #32]
   28a38:	add	r2, sl, fp
   28a3c:	movw	r8, #35034	; 0x88da
   28a40:	eor	fp, lr, r5
   28a44:	movt	r8, #30457	; 0x76f9
   28a48:	add	r8, r2, r8
   28a4c:	and	fp, fp, r9
   28a50:	add	sl, r8, r7
   28a54:	eor	r7, fp, lr
   28a58:	add	r7, r7, sl
   28a5c:	ror	sl, r4, #18
   28a60:	str	r2, [sp, #28]
   28a64:	eor	sl, sl, r4, ror #7
   28a68:	ror	r2, r9, #11
   28a6c:	ldr	r6, [sp, #44]	; 0x2c
   28a70:	eor	r2, r2, r9, ror #6
   28a74:	eor	sl, sl, r4, lsr #3
   28a78:	ldr	r4, [sp, #24]
   28a7c:	orr	r8, r0, r1
   28a80:	eor	r2, r2, r9, ror #25
   28a84:	ror	fp, r1, #13
   28a88:	add	r7, r7, r2
   28a8c:	and	r8, r8, ip
   28a90:	and	r2, r0, r1
   28a94:	eor	fp, fp, r1, ror #2
   28a98:	eor	fp, fp, r1, ror #22
   28a9c:	orr	r2, r8, r2
   28aa0:	ror	r8, r4, #19
   28aa4:	add	r2, fp, r2
   28aa8:	eor	fp, r8, r4, ror #17
   28aac:	add	sl, sl, r6
   28ab0:	eor	fp, fp, r4, lsr #10
   28ab4:	ldr	r4, [sp, #52]	; 0x34
   28ab8:	add	r8, r3, r7
   28abc:	add	r2, r2, r7
   28ac0:	add	sl, sl, r4
   28ac4:	eor	r3, r5, r9
   28ac8:	ldr	r4, [sp, #60]	; 0x3c
   28acc:	add	r7, sl, fp
   28ad0:	movw	sl, #20818	; 0x5152
   28ad4:	movt	sl, #38974	; 0x983e
   28ad8:	and	r3, r3, r8
   28adc:	add	sl, r7, sl
   28ae0:	add	sl, sl, lr
   28ae4:	eor	r6, r3, r5
   28ae8:	ror	fp, r8, #11
   28aec:	add	r6, r6, sl
   28af0:	eor	fp, fp, r8, ror #6
   28af4:	ror	sl, r4, #18
   28af8:	str	r7, [sp, #56]	; 0x38
   28afc:	eor	fp, fp, r8, ror #25
   28b00:	orr	r7, r1, r2
   28b04:	eor	sl, sl, r4, ror #7
   28b08:	add	r6, r6, fp
   28b0c:	mov	lr, r4
   28b10:	and	fp, r1, r2
   28b14:	and	r7, r7, r0
   28b18:	ror	r3, r2, #13
   28b1c:	eor	sl, sl, r4, lsr #3
   28b20:	ldr	r4, [sp, #28]
   28b24:	orr	r7, r7, fp
   28b28:	eor	r3, r3, r2, ror #2
   28b2c:	ldr	fp, [sp, #32]
   28b30:	eor	r3, r3, r2, ror #22
   28b34:	add	sl, sl, fp
   28b38:	add	r3, r3, r7
   28b3c:	ror	fp, r4, #19
   28b40:	add	r7, ip, r6
   28b44:	ldr	ip, [sp, #8]
   28b48:	eor	fp, fp, r4, ror #17
   28b4c:	eor	fp, fp, r4, lsr #10
   28b50:	add	r3, r3, r6
   28b54:	add	sl, sl, ip
   28b58:	ldr	r4, [sp, #36]	; 0x24
   28b5c:	add	ip, sl, fp
   28b60:	movw	r6, #50797	; 0xc66d
   28b64:	eor	fp, r9, r8
   28b68:	movt	r6, #43057	; 0xa831
   28b6c:	and	fp, fp, r7
   28b70:	add	r6, ip, r6
   28b74:	add	r6, r6, r5
   28b78:	eor	r5, fp, r9
   28b7c:	str	ip, [sp, #32]
   28b80:	add	r5, r5, r6
   28b84:	ror	ip, r7, #11
   28b88:	ror	r6, r4, #18
   28b8c:	eor	ip, ip, r7, ror #6
   28b90:	eor	r6, r6, r4, ror #7
   28b94:	orr	sl, r2, r3
   28b98:	eor	ip, ip, r7, ror #25
   28b9c:	ror	fp, r3, #13
   28ba0:	eor	r6, r6, r4, lsr #3
   28ba4:	ldr	r4, [sp, #56]	; 0x38
   28ba8:	add	r5, r5, ip
   28bac:	and	sl, sl, r1
   28bb0:	and	ip, r2, r3
   28bb4:	eor	fp, fp, r3, ror #2
   28bb8:	orr	ip, sl, ip
   28bbc:	eor	fp, fp, r3, ror #22
   28bc0:	ror	sl, r4, #19
   28bc4:	add	ip, fp, ip
   28bc8:	eor	fp, sl, r4, ror #17
   28bcc:	add	ip, ip, r5
   28bd0:	add	sl, r0, r5
   28bd4:	ldr	r5, [sp, #12]
   28bd8:	add	r6, r6, lr
   28bdc:	eor	fp, fp, r4, lsr #10
   28be0:	eor	r0, r8, r7
   28be4:	add	r6, r6, r5
   28be8:	movw	r5, #10184	; 0x27c8
   28bec:	add	r6, r6, fp
   28bf0:	movt	r5, #45059	; 0xb003
   28bf4:	and	r0, r0, sl
   28bf8:	add	r5, r6, r5
   28bfc:	add	r5, r5, r9
   28c00:	eor	r9, r0, r8
   28c04:	ror	r0, ip, #13
   28c08:	mov	r4, r6
   28c0c:	mov	lr, ip
   28c10:	orr	r6, r3, ip
   28c14:	eor	r0, r0, ip, ror #2
   28c18:	ldr	ip, [sp, #64]	; 0x40
   28c1c:	add	r9, r9, r5
   28c20:	str	lr, [sp, #44]	; 0x2c
   28c24:	ror	fp, sl, #11
   28c28:	eor	r0, r0, lr, ror #22
   28c2c:	ror	r5, ip, #18
   28c30:	mov	lr, ip
   28c34:	eor	r5, r5, ip, ror #7
   28c38:	eor	fp, fp, sl, ror #6
   28c3c:	eor	r5, r5, ip, lsr #3
   28c40:	ldr	ip, [sp, #44]	; 0x2c
   28c44:	eor	fp, fp, sl, ror #25
   28c48:	and	r6, r6, r2
   28c4c:	add	r9, r9, fp
   28c50:	and	fp, r3, ip
   28c54:	ldr	ip, [sp, #32]
   28c58:	orr	r6, r6, fp
   28c5c:	ldr	fp, [sp, #36]	; 0x24
   28c60:	add	r0, r0, r6
   28c64:	add	r6, r1, r9
   28c68:	ldr	r1, [sp, #16]
   28c6c:	add	r5, r5, fp
   28c70:	ror	fp, ip, #19
   28c74:	eor	fp, fp, ip, ror #17
   28c78:	add	r5, r5, r1
   28c7c:	eor	fp, fp, ip, lsr #10
   28c80:	add	r0, r0, r9
   28c84:	add	r1, r5, fp
   28c88:	movw	r9, #32711	; 0x7fc7
   28c8c:	eor	fp, r7, sl
   28c90:	movt	r9, #48985	; 0xbf59
   28c94:	str	r1, [sp, #36]	; 0x24
   28c98:	add	r9, r1, r9
   28c9c:	and	fp, fp, r6
   28ca0:	ror	r1, r6, #11
   28ca4:	add	r5, r9, r8
   28ca8:	ldr	ip, [sp, #44]	; 0x2c
   28cac:	eor	r8, fp, r7
   28cb0:	eor	r1, r1, r6, ror #6
   28cb4:	eor	r1, r1, r6, ror #25
   28cb8:	add	r8, r8, r5
   28cbc:	add	r8, r8, r1
   28cc0:	orr	r9, ip, r0
   28cc4:	ldr	r1, [sp, #44]	; 0x2c
   28cc8:	ror	fp, r0, #13
   28ccc:	ldr	ip, [sp, #40]	; 0x28
   28cd0:	and	r9, r9, r3
   28cd4:	eor	fp, fp, r0, ror #2
   28cd8:	and	r1, r1, r0
   28cdc:	eor	fp, fp, r0, ror #22
   28ce0:	orr	r1, r9, r1
   28ce4:	ror	r5, ip, #18
   28ce8:	ror	r9, r4, #19
   28cec:	eor	r5, r5, ip, ror #7
   28cf0:	add	r1, fp, r1
   28cf4:	add	r1, r1, r8
   28cf8:	eor	fp, r9, r4, ror #17
   28cfc:	eor	r5, r5, ip, lsr #3
   28d00:	add	r9, r2, r8
   28d04:	ldr	r8, [sp, #20]
   28d08:	add	r5, r5, lr
   28d0c:	eor	fp, fp, r4, lsr #10
   28d10:	str	r4, [sp, #60]	; 0x3c
   28d14:	add	r5, r5, r8
   28d18:	ldr	lr, [sp, #48]	; 0x30
   28d1c:	add	r2, r5, fp
   28d20:	movw	r5, #3059	; 0xbf3
   28d24:	movt	r5, #50912	; 0xc6e0
   28d28:	ror	fp, r9, #11
   28d2c:	mov	r4, r2
   28d30:	eor	r2, sl, r6
   28d34:	and	r2, r2, r9
   28d38:	add	r5, r4, r5
   28d3c:	add	r5, r5, r7
   28d40:	eor	fp, fp, r9, ror #6
   28d44:	eor	r7, r2, sl
   28d48:	ldr	r2, [sp, #44]	; 0x2c
   28d4c:	orr	r8, r0, r1
   28d50:	eor	fp, fp, r9, ror #25
   28d54:	add	r7, r7, r5
   28d58:	ldr	ip, [sp, #36]	; 0x24
   28d5c:	add	r7, r7, fp
   28d60:	and	r8, r8, r2
   28d64:	and	fp, r0, r1
   28d68:	ror	r5, lr, #18
   28d6c:	orr	r8, r8, fp
   28d70:	eor	r5, r5, lr, ror #7
   28d74:	ldr	fp, [sp, #40]	; 0x28
   28d78:	eor	r5, r5, lr, lsr #3
   28d7c:	ror	r2, r1, #13
   28d80:	add	r5, r5, fp
   28d84:	ror	fp, ip, #19
   28d88:	eor	fp, fp, ip, ror #17
   28d8c:	eor	r2, r2, r1, ror #2
   28d90:	eor	fp, fp, ip, lsr #10
   28d94:	ldr	ip, [sp, #24]
   28d98:	eor	r2, r2, r1, ror #22
   28d9c:	add	r5, r5, ip
   28da0:	add	r2, r2, r8
   28da4:	add	r5, r5, fp
   28da8:	add	r8, r3, r7
   28dac:	add	r2, r2, r7
   28db0:	movw	r3, #37191	; 0x9147
   28db4:	mov	r7, r5
   28db8:	movt	r3, #54695	; 0xd5a7
   28dbc:	eor	r5, r6, r9
   28dc0:	add	r3, r7, r3
   28dc4:	and	r5, r5, r8
   28dc8:	ror	fp, r8, #11
   28dcc:	add	sl, r3, sl
   28dd0:	eor	r5, r5, r6
   28dd4:	eor	fp, fp, r8, ror #6
   28dd8:	ldr	ip, [sp, #4]
   28ddc:	orr	r3, r1, r2
   28de0:	add	r5, r5, sl
   28de4:	eor	fp, fp, r8, ror #25
   28de8:	ror	sl, r2, #13
   28dec:	add	fp, r5, fp
   28df0:	and	r3, r3, r0
   28df4:	and	r5, r1, r2
   28df8:	eor	sl, sl, r2, ror #2
   28dfc:	orr	r3, r3, r5
   28e00:	eor	sl, sl, r2, ror #22
   28e04:	mov	r5, r4
   28e08:	str	r7, [sp, #40]	; 0x28
   28e0c:	add	sl, sl, r3
   28e10:	ror	r7, ip, #18
   28e14:	ldr	r3, [sp, #44]	; 0x2c
   28e18:	ror	r4, r4, #19
   28e1c:	eor	r4, r4, r5, ror #17
   28e20:	eor	r7, r7, ip, ror #7
   28e24:	str	r5, [sp, #64]	; 0x40
   28e28:	eor	r7, r7, ip, lsr #3
   28e2c:	add	ip, r3, fp
   28e30:	eor	r3, r4, r5, lsr #10
   28e34:	ldr	r4, [sp, #28]
   28e38:	add	r7, r7, lr
   28e3c:	add	fp, sl, fp
   28e40:	ldr	lr, [sp]
   28e44:	add	r7, r7, r4
   28e48:	movw	r4, #25425	; 0x6351
   28e4c:	add	r5, r7, r3
   28e50:	movt	r4, #1738	; 0x6ca
   28e54:	eor	r3, r9, r8
   28e58:	str	r5, [sp, #44]	; 0x2c
   28e5c:	add	r4, r5, r4
   28e60:	and	r3, r3, ip
   28e64:	ror	r5, ip, #11
   28e68:	add	r6, r4, r6
   28e6c:	eor	r3, r3, r9
   28e70:	eor	r5, r5, ip, ror #6
   28e74:	orr	r7, r2, fp
   28e78:	eor	r5, r5, ip, ror #25
   28e7c:	add	r3, r3, r6
   28e80:	ror	r6, fp, #13
   28e84:	ldr	sl, [sp, #40]	; 0x28
   28e88:	add	r3, r3, r5
   28e8c:	and	r7, r7, r1
   28e90:	and	r5, r2, fp
   28e94:	eor	r6, r6, fp, ror #2
   28e98:	ror	r4, lr, #18
   28e9c:	orr	r7, r7, r5
   28ea0:	eor	r4, r4, lr, ror #7
   28ea4:	ldr	r5, [sp, #4]
   28ea8:	eor	r6, r6, fp, ror #22
   28eac:	eor	r4, r4, lr, lsr #3
   28eb0:	add	r6, r6, r7
   28eb4:	add	r6, r6, r3
   28eb8:	add	r0, r0, r3
   28ebc:	add	r4, r4, r5
   28ec0:	ldr	r3, [sp, #56]	; 0x38
   28ec4:	ror	r5, sl, #19
   28ec8:	movw	r7, #10599	; 0x2967
   28ecc:	eor	r5, r5, sl, ror #17
   28ed0:	add	r4, r4, r3
   28ed4:	eor	r5, r5, sl, lsr #10
   28ed8:	eor	r3, r8, ip
   28edc:	add	r5, r4, r5
   28ee0:	movt	r7, #5161	; 0x1429
   28ee4:	str	r5, [sp, #72]	; 0x48
   28ee8:	add	r7, r5, r7
   28eec:	and	r3, r3, r0
   28ef0:	ror	r5, r0, #11
   28ef4:	ldr	sl, [sp, #52]	; 0x34
   28ef8:	eor	r3, r3, r8
   28efc:	add	r9, r7, r9
   28f00:	eor	r5, r5, r0, ror #6
   28f04:	orr	r4, fp, r6
   28f08:	add	r9, r3, r9
   28f0c:	eor	r5, r5, r0, ror #25
   28f10:	and	r4, r4, r2
   28f14:	add	r5, r9, r5
   28f18:	ror	r7, r6, #13
   28f1c:	and	r9, fp, r6
   28f20:	ror	r3, sl, #18
   28f24:	orr	r4, r4, r9
   28f28:	eor	r7, r7, r6, ror #2
   28f2c:	ldr	r9, [sp, #44]	; 0x2c
   28f30:	eor	r3, r3, sl, ror #7
   28f34:	eor	r7, r7, r6, ror #22
   28f38:	eor	r3, r3, sl, lsr #3
   28f3c:	add	r7, r7, r4
   28f40:	add	r1, r1, r5
   28f44:	add	r3, r3, lr
   28f48:	add	r5, r7, r5
   28f4c:	ror	lr, r9, #19
   28f50:	ldr	r7, [sp, #32]
   28f54:	eor	lr, lr, r9, ror #17
   28f58:	str	r9, [sp, #68]	; 0x44
   28f5c:	eor	r4, lr, r9, lsr #10
   28f60:	add	r3, r3, r7
   28f64:	add	lr, r3, r4
   28f68:	movw	r3, #2693	; 0xa85
   28f6c:	movt	r3, #10167	; 0x27b7
   28f70:	str	lr, [sp]
   28f74:	add	r3, lr, r3
   28f78:	ror	lr, r1, #11
   28f7c:	eor	r4, ip, r0
   28f80:	add	r3, r3, r8
   28f84:	eor	r8, lr, r1, ror #6
   28f88:	ldr	lr, [sp, #8]
   28f8c:	and	r4, r4, r1
   28f90:	orr	r9, r6, r5
   28f94:	eor	r4, r4, ip
   28f98:	and	r9, r9, fp
   28f9c:	add	r3, r4, r3
   28fa0:	ror	r4, lr, #18
   28fa4:	eor	r4, r4, lr, ror #7
   28fa8:	ror	r7, r5, #13
   28fac:	eor	r4, r4, lr, lsr #3
   28fb0:	and	lr, r6, r5
   28fb4:	eor	r7, r7, r5, ror #2
   28fb8:	orr	lr, r9, lr
   28fbc:	ldr	r9, [sp, #72]	; 0x48
   28fc0:	eor	r8, r8, r1, ror #25
   28fc4:	eor	r7, r7, r5, ror #22
   28fc8:	add	r3, r3, r8
   28fcc:	add	lr, r7, lr
   28fd0:	add	r2, r2, r3
   28fd4:	add	lr, lr, r3
   28fd8:	add	r4, r4, sl
   28fdc:	ldr	r3, [sp, #60]	; 0x3c
   28fe0:	ror	sl, r9, #19
   28fe4:	eor	sl, sl, r9, ror #17
   28fe8:	movw	r8, #8504	; 0x2138
   28fec:	add	r4, r4, r3
   28ff0:	eor	sl, sl, r9, lsr #10
   28ff4:	add	sl, r4, sl
   28ff8:	ldr	r9, [sp, #12]
   28ffc:	eor	r3, r0, r1
   29000:	movt	r8, #11803	; 0x2e1b
   29004:	add	r8, sl, r8
   29008:	and	r3, r3, r2
   2900c:	ror	r7, r2, #11
   29010:	eor	r3, r3, r0
   29014:	add	ip, r8, ip
   29018:	eor	r7, r7, r2, ror #6
   2901c:	add	ip, r3, ip
   29020:	eor	r7, r7, r2, ror #25
   29024:	ror	r3, r9, #18
   29028:	add	r7, ip, r7
   2902c:	eor	r3, r3, r9, ror #7
   29030:	ldr	ip, [sp, #8]
   29034:	eor	r3, r3, r9, lsr #3
   29038:	str	sl, [sp, #4]
   2903c:	add	r3, r3, ip
   29040:	ldr	ip, [sp]
   29044:	orr	r4, r5, lr
   29048:	and	r9, r5, lr
   2904c:	and	r4, r4, r6
   29050:	ror	r8, lr, #13
   29054:	ror	sl, ip, #19
   29058:	add	fp, fp, r7
   2905c:	eor	sl, sl, ip, ror #17
   29060:	orr	r4, r4, r9
   29064:	eor	sl, sl, ip, lsr #10
   29068:	ldr	ip, [sp, #36]	; 0x24
   2906c:	ldr	r9, [sp, #16]
   29070:	eor	r8, r8, lr, ror #2
   29074:	add	r3, r3, ip
   29078:	eor	ip, r1, r2
   2907c:	add	sl, r3, sl
   29080:	movw	r3, #28156	; 0x6dfc
   29084:	movt	r3, #19756	; 0x4d2c
   29088:	eor	r8, r8, lr, ror #22
   2908c:	add	r3, sl, r3
   29090:	and	ip, ip, fp
   29094:	add	r8, r8, r4
   29098:	eor	ip, ip, r1
   2909c:	add	r0, r3, r0
   290a0:	add	r7, r8, r7
   290a4:	add	r0, ip, r0
   290a8:	ror	ip, r9, #18
   290ac:	orr	r4, lr, r7
   290b0:	eor	ip, ip, r9, ror #7
   290b4:	and	r4, r4, r5
   290b8:	eor	ip, ip, r9, lsr #3
   290bc:	and	r9, lr, r7
   290c0:	ror	r8, fp, #11
   290c4:	orr	r9, r4, r9
   290c8:	ldr	r4, [sp, #12]
   290cc:	ror	r3, r7, #13
   290d0:	eor	r8, r8, fp, ror #6
   290d4:	eor	r3, r3, r7, ror #2
   290d8:	add	ip, ip, r4
   290dc:	ldr	r4, [sp, #4]
   290e0:	eor	r8, r8, fp, ror #25
   290e4:	eor	r3, r3, r7, ror #22
   290e8:	add	r0, r0, r8
   290ec:	add	r9, r3, r9
   290f0:	add	r6, r6, r0
   290f4:	add	r9, r9, r0
   290f8:	str	sl, [sp, #44]	; 0x2c
   290fc:	ldr	r0, [sp, #64]	; 0x40
   29100:	ror	sl, r4, #19
   29104:	eor	sl, sl, r4, ror #17
   29108:	ldr	r8, [sp, #20]
   2910c:	eor	sl, sl, r4, lsr #10
   29110:	add	ip, ip, r0
   29114:	add	r0, ip, sl
   29118:	movw	r4, #3347	; 0xd13
   2911c:	movt	r4, #21304	; 0x5338
   29120:	orr	sl, r7, r9
   29124:	mov	r3, r0
   29128:	eor	r0, r2, fp
   2912c:	str	r3, [sp, #48]	; 0x30
   29130:	add	r4, r3, r4
   29134:	and	r0, r0, r6
   29138:	ror	r3, r6, #11
   2913c:	eor	r0, r0, r2
   29140:	add	r1, r4, r1
   29144:	eor	r3, r3, r6, ror #6
   29148:	add	r1, r0, r1
   2914c:	eor	r3, r3, r6, ror #25
   29150:	and	sl, sl, lr
   29154:	add	r3, r1, r3
   29158:	and	r1, r7, r9
   2915c:	orr	r1, sl, r1
   29160:	ror	ip, r8, #18
   29164:	ldr	sl, [sp, #44]	; 0x2c
   29168:	eor	ip, ip, r8, ror #7
   2916c:	ldr	r0, [sp, #16]
   29170:	eor	ip, ip, r8, lsr #3
   29174:	ror	r4, r9, #13
   29178:	add	r5, r5, r3
   2917c:	add	ip, ip, r0
   29180:	ror	r0, sl, #19
   29184:	eor	r0, r0, sl, ror #17
   29188:	eor	r4, r4, r9, ror #2
   2918c:	eor	r0, r0, sl, lsr #10
   29190:	ldr	sl, [sp, #40]	; 0x28
   29194:	eor	r4, r4, r9, ror #22
   29198:	ror	r8, r5, #11
   2919c:	add	ip, ip, sl
   291a0:	add	r4, r4, r1
   291a4:	add	r0, ip, r0
   291a8:	add	r1, r4, r3
   291ac:	ldr	ip, [sp, #24]
   291b0:	movw	r3, #29524	; 0x7354
   291b4:	mov	sl, r0
   291b8:	movt	r3, #25866	; 0x650a
   291bc:	eor	r0, fp, r6
   291c0:	add	r3, sl, r3
   291c4:	and	r0, r0, r5
   291c8:	add	r2, r3, r2
   291cc:	eor	r0, r0, fp
   291d0:	orr	r4, r9, r1
   291d4:	add	r2, r0, r2
   291d8:	ror	r0, ip, #18
   291dc:	eor	r8, r8, r5, ror #6
   291e0:	eor	r0, r0, ip, ror #7
   291e4:	and	r4, r4, r7
   291e8:	eor	r8, r8, r5, ror #25
   291ec:	ror	r3, r1, #13
   291f0:	eor	r0, r0, ip, lsr #3
   291f4:	and	ip, r9, r1
   291f8:	add	r2, r2, r8
   291fc:	str	sl, [sp, #52]	; 0x34
   29200:	eor	r3, r3, r1, ror #2
   29204:	ldr	r8, [sp, #20]
   29208:	orr	ip, r4, ip
   2920c:	ldr	r4, [sp, #48]	; 0x30
   29210:	eor	r3, r3, r1, ror #22
   29214:	add	ip, r3, ip
   29218:	add	lr, lr, r2
   2921c:	add	ip, ip, r2
   29220:	ldr	r2, [sp, #68]	; 0x44
   29224:	ror	sl, r4, #19
   29228:	add	r0, r0, r8
   2922c:	eor	sl, sl, r4, ror #17
   29230:	add	r0, r0, r2
   29234:	eor	sl, sl, r4, lsr #10
   29238:	movw	r4, #2747	; 0xabb
   2923c:	add	r0, r0, sl
   29240:	movt	r4, #30314	; 0x766a
   29244:	add	r4, r0, r4
   29248:	eor	r2, r6, r5
   2924c:	add	fp, r4, fp
   29250:	ldr	r4, [sp, #28]
   29254:	and	r2, r2, lr
   29258:	ror	r3, lr, #11
   2925c:	eor	r2, r2, r6
   29260:	eor	r3, r3, lr, ror #6
   29264:	add	fp, r2, fp
   29268:	ror	sl, r4, #18
   2926c:	eor	r3, r3, lr, ror #25
   29270:	str	r0, [sp, #20]
   29274:	add	r3, fp, r3
   29278:	orr	r0, r1, ip
   2927c:	ldr	fp, [sp, #52]	; 0x34
   29280:	ror	r2, ip, #13
   29284:	eor	sl, sl, r4, ror #7
   29288:	ldr	r8, [sp, #24]
   2928c:	and	r0, r0, r9
   29290:	eor	r2, r2, ip, ror #2
   29294:	eor	sl, sl, r4, lsr #3
   29298:	and	r4, r1, ip
   2929c:	orr	r0, r0, r4
   292a0:	eor	r2, r2, ip, ror #22
   292a4:	add	r2, r2, r0
   292a8:	add	sl, sl, r8
   292ac:	ldr	r0, [sp, #72]	; 0x48
   292b0:	ror	r8, fp, #19
   292b4:	eor	r8, r8, fp, ror #17
   292b8:	add	r7, r7, r3
   292bc:	eor	r8, r8, fp, lsr #10
   292c0:	add	sl, sl, r0
   292c4:	add	r3, r2, r3
   292c8:	add	r2, sl, r8
   292cc:	eor	sl, r5, lr
   292d0:	orr	r4, ip, r3
   292d4:	mov	fp, r2
   292d8:	movw	r2, #51502	; 0xc92e
   292dc:	movt	r2, #33218	; 0x81c2
   292e0:	str	fp, [sp, #24]
   292e4:	add	r2, fp, r2
   292e8:	ldr	fp, [sp, #56]	; 0x38
   292ec:	and	sl, sl, r7
   292f0:	add	r6, r2, r6
   292f4:	eor	sl, sl, r5
   292f8:	and	r4, r4, r1
   292fc:	and	r0, ip, r3
   29300:	add	r6, sl, r6
   29304:	ror	sl, fp, #18
   29308:	orr	r0, r4, r0
   2930c:	eor	sl, sl, fp, ror #7
   29310:	ldr	r4, [sp, #28]
   29314:	eor	sl, sl, fp, lsr #3
   29318:	ror	r8, r7, #11
   2931c:	ror	r2, r3, #13
   29320:	add	sl, sl, r4
   29324:	ldr	r4, [sp, #20]
   29328:	eor	r8, r8, r7, ror #6
   2932c:	eor	r2, r2, r3, ror #2
   29330:	eor	r8, r8, r7, ror #25
   29334:	eor	r2, r2, r3, ror #22
   29338:	add	r6, r6, r8
   2933c:	add	r2, r2, r0
   29340:	ror	r8, r4, #19
   29344:	ldr	r0, [sp]
   29348:	eor	r8, r8, r4, ror #17
   2934c:	add	r9, r9, r6
   29350:	eor	r8, r8, r4, lsr #10
   29354:	add	sl, sl, r0
   29358:	add	r6, r2, r6
   2935c:	eor	r0, lr, r7
   29360:	add	r2, sl, r8
   29364:	movw	r4, #11397	; 0x2c85
   29368:	movt	r4, #37490	; 0x9272
   2936c:	str	r2, [sp, #28]
   29370:	add	r4, r2, r4
   29374:	and	r0, r0, r9
   29378:	ror	r2, r9, #11
   2937c:	eor	r0, r0, lr
   29380:	add	r5, r4, r5
   29384:	eor	r2, r2, r9, ror #6
   29388:	ldr	r8, [sp, #32]
   2938c:	orr	r4, r3, r6
   29390:	add	r5, r0, r5
   29394:	eor	r2, r2, r9, ror #25
   29398:	and	r4, r4, ip
   2939c:	add	r2, r5, r2
   293a0:	ror	r0, r6, #13
   293a4:	and	r5, r3, r6
   293a8:	eor	r0, r0, r6, ror #2
   293ac:	orr	r5, r4, r5
   293b0:	ldr	r4, [sp, #24]
   293b4:	ror	sl, r8, #18
   293b8:	eor	r0, r0, r6, ror #22
   293bc:	eor	sl, sl, r8, ror #7
   293c0:	add	r0, r0, r5
   293c4:	add	r5, r0, r2
   293c8:	eor	sl, sl, r8, lsr #3
   293cc:	ldr	r0, [sp, #4]
   293d0:	ror	r8, r4, #19
   293d4:	add	sl, sl, fp
   293d8:	eor	r8, r8, r4, ror #17
   293dc:	eor	r8, r8, r4, lsr #10
   293e0:	add	sl, sl, r0
   293e4:	add	sl, sl, r8
   293e8:	movw	r8, #59553	; 0xe8a1
   293ec:	movt	r8, #41663	; 0xa2bf
   293f0:	add	r1, r1, r2
   293f4:	mov	fp, sl
   293f8:	add	r8, fp, r8
   293fc:	eor	sl, r7, r9
   29400:	add	lr, r8, lr
   29404:	ldr	r8, [sp, #60]	; 0x3c
   29408:	and	sl, sl, r1
   2940c:	eor	sl, sl, r7
   29410:	orr	r0, r6, r5
   29414:	add	lr, sl, lr
   29418:	and	r0, r0, r3
   2941c:	ror	sl, r8, #18
   29420:	ror	r4, r1, #11
   29424:	eor	sl, sl, r8, ror #7
   29428:	eor	r4, r4, r1, ror #6
   2942c:	eor	sl, sl, r8, lsr #3
   29430:	and	r8, r6, r5
   29434:	orr	r8, r0, r8
   29438:	ldr	r0, [sp, #32]
   2943c:	eor	r4, r4, r1, ror #25
   29440:	ror	r2, r5, #13
   29444:	add	sl, sl, r0
   29448:	ldr	r0, [sp, #28]
   2944c:	add	lr, lr, r4
   29450:	eor	r2, r2, r5, ror #2
   29454:	eor	r2, r2, r5, ror #22
   29458:	add	ip, ip, lr
   2945c:	ror	r4, r0, #19
   29460:	add	r8, r2, r8
   29464:	eor	r4, r4, r0, ror #17
   29468:	add	lr, r8, lr
   2946c:	eor	r4, r4, r0, lsr #10
   29470:	ldr	r0, [sp, #44]	; 0x2c
   29474:	movw	r8, #26187	; 0x664b
   29478:	movt	r8, #43034	; 0xa81a
   2947c:	add	sl, sl, r0
   29480:	eor	r0, r9, r1
   29484:	add	sl, sl, r4
   29488:	ldr	r4, [sp, #36]	; 0x24
   2948c:	add	r8, sl, r8
   29490:	and	r0, r0, ip
   29494:	ror	r2, ip, #11
   29498:	eor	r0, r0, r9
   2949c:	add	r7, r8, r7
   294a0:	eor	r2, r2, ip, ror #6
   294a4:	str	fp, [sp, #56]	; 0x38
   294a8:	add	r7, r0, r7
   294ac:	ror	fp, r4, #18
   294b0:	eor	r2, r2, ip, ror #25
   294b4:	str	sl, [sp, #32]
   294b8:	add	r2, r7, r2
   294bc:	orr	sl, r5, lr
   294c0:	ldr	r7, [sp, #56]	; 0x38
   294c4:	ror	r0, lr, #13
   294c8:	eor	fp, fp, r4, ror #7
   294cc:	ldr	r8, [sp, #60]	; 0x3c
   294d0:	and	sl, sl, r6
   294d4:	eor	r0, r0, lr, ror #2
   294d8:	eor	fp, fp, r4, lsr #3
   294dc:	and	r4, r5, lr
   294e0:	eor	r0, r0, lr, ror #22
   294e4:	orr	sl, sl, r4
   294e8:	add	fp, fp, r8
   294ec:	add	r0, r0, sl
   294f0:	ror	r8, r7, #19
   294f4:	mov	sl, r7
   294f8:	eor	r8, r8, r7, ror #17
   294fc:	add	r7, r0, r2
   29500:	ldr	r0, [sp, #48]	; 0x30
   29504:	eor	r8, r8, sl, lsr #10
   29508:	add	r3, r3, r2
   2950c:	add	fp, fp, r0
   29510:	eor	r4, r1, ip
   29514:	add	r2, fp, r8
   29518:	movw	r8, #35696	; 0x8b70
   2951c:	movt	r8, #49739	; 0xc24b
   29520:	orr	sl, lr, r7
   29524:	add	r8, r2, r8
   29528:	and	sl, sl, r5
   2952c:	add	r9, r8, r9
   29530:	ldr	r8, [sp, #64]	; 0x40
   29534:	and	r4, r4, r3
   29538:	ror	r0, r3, #11
   2953c:	eor	r4, r4, r1
   29540:	eor	r0, r0, r3, ror #6
   29544:	ror	fp, r8, #18
   29548:	add	r9, r4, r9
   2954c:	eor	fp, fp, r8, ror #7
   29550:	ldr	r4, [sp, #36]	; 0x24
   29554:	eor	fp, fp, r8, lsr #3
   29558:	and	r8, lr, r7
   2955c:	orr	r8, sl, r8
   29560:	ldr	sl, [sp, #32]
   29564:	eor	r0, r0, r3, ror #25
   29568:	add	fp, fp, r4
   2956c:	add	r9, r9, r0
   29570:	ldr	r0, [sp, #52]	; 0x34
   29574:	ror	r4, sl, #19
   29578:	str	r2, [sp, #60]	; 0x3c
   2957c:	eor	r4, r4, sl, ror #17
   29580:	ror	r2, r7, #13
   29584:	eor	r4, r4, sl, lsr #10
   29588:	eor	r2, r2, r7, ror #2
   2958c:	add	fp, fp, r0
   29590:	eor	r2, r2, r7, ror #22
   29594:	add	fp, fp, r4
   29598:	add	r8, r2, r8
   2959c:	movw	r2, #20899	; 0x51a3
   295a0:	movt	r2, #51052	; 0xc76c
   295a4:	mov	r4, fp
   295a8:	add	r2, r4, r2
   295ac:	str	r4, [sp, #8]
   295b0:	add	r6, r6, r9
   295b4:	eor	fp, ip, r3
   295b8:	add	r1, r2, r1
   295bc:	ldr	r2, [sp, #40]	; 0x28
   295c0:	and	fp, fp, r6
   295c4:	add	r9, r8, r9
   295c8:	eor	fp, fp, ip
   295cc:	ror	sl, r6, #11
   295d0:	add	r1, fp, r1
   295d4:	eor	sl, sl, r6, ror #6
   295d8:	ror	fp, r2, #18
   295dc:	orr	r0, r7, r9
   295e0:	eor	sl, sl, r6, ror #25
   295e4:	ror	r8, r9, #13
   295e8:	eor	fp, fp, r2, ror #7
   295ec:	add	r1, r1, sl
   295f0:	and	r0, r0, lr
   295f4:	and	sl, r7, r9
   295f8:	eor	r8, r8, r9, ror #2
   295fc:	eor	fp, fp, r2, lsr #3
   29600:	ldr	r2, [sp, #60]	; 0x3c
   29604:	ldr	r4, [sp, #64]	; 0x40
   29608:	eor	r8, r8, r9, ror #22
   2960c:	orr	sl, r0, sl
   29610:	add	r5, r5, r1
   29614:	add	sl, r8, sl
   29618:	add	fp, fp, r4
   2961c:	add	sl, sl, r1
   29620:	ror	r4, r2, #19
   29624:	ldr	r1, [sp, #20]
   29628:	eor	r4, r4, r2, ror #17
   2962c:	eor	r4, r4, r2, lsr #10
   29630:	ldr	r8, [sp, #68]	; 0x44
   29634:	add	fp, fp, r1
   29638:	eor	r0, r3, r6
   2963c:	add	r1, fp, r4
   29640:	movw	r2, #59417	; 0xe819
   29644:	movt	r2, #53650	; 0xd192
   29648:	str	r1, [sp, #36]	; 0x24
   2964c:	add	r2, r1, r2
   29650:	and	r0, r0, r5
   29654:	ror	r1, r5, #11
   29658:	orr	r4, r9, sl
   2965c:	eor	r0, r0, r3
   29660:	add	ip, r2, ip
   29664:	eor	r1, r1, r5, ror #6
   29668:	add	ip, r0, ip
   2966c:	and	r4, r4, r7
   29670:	and	r0, r9, sl
   29674:	ror	r2, sl, #13
   29678:	ror	fp, r8, #18
   2967c:	eor	r1, r1, r5, ror #25
   29680:	orr	r4, r4, r0
   29684:	add	r1, ip, r1
   29688:	ldr	r0, [sp, #40]	; 0x28
   2968c:	ldr	ip, [sp, #8]
   29690:	eor	r2, r2, sl, ror #2
   29694:	eor	fp, fp, r8, ror #7
   29698:	eor	r2, r2, sl, ror #22
   2969c:	eor	fp, fp, r8, lsr #3
   296a0:	add	lr, lr, r1
   296a4:	add	fp, fp, r0
   296a8:	add	r0, r2, r4
   296ac:	add	r0, r0, r1
   296b0:	ror	r8, ip, #19
   296b4:	ldr	r1, [sp, #24]
   296b8:	eor	r8, r8, ip, ror #17
   296bc:	eor	r8, r8, ip, lsr #10
   296c0:	movw	r2, #1572	; 0x624
   296c4:	add	fp, fp, r1
   296c8:	eor	ip, r6, r5
   296cc:	add	r4, fp, r8
   296d0:	movt	r2, #54937	; 0xd699
   296d4:	add	r2, r4, r2
   296d8:	and	ip, ip, lr
   296dc:	ror	r1, lr, #11
   296e0:	ldr	fp, [sp, #72]	; 0x48
   296e4:	add	r3, r2, r3
   296e8:	eor	ip, ip, r6
   296ec:	eor	r1, r1, lr, ror #6
   296f0:	orr	r8, sl, r0
   296f4:	eor	r1, r1, lr, ror #25
   296f8:	add	ip, ip, r3
   296fc:	add	ip, ip, r1
   29700:	and	r8, r8, r9
   29704:	and	r1, sl, r0
   29708:	ror	r2, r0, #13
   2970c:	ror	r3, fp, #18
   29710:	eor	r2, r2, r0, ror #2
   29714:	orr	r1, r8, r1
   29718:	ldr	r8, [sp, #36]	; 0x24
   2971c:	str	r4, [sp, #12]
   29720:	eor	r2, r2, r0, ror #22
   29724:	ldr	r4, [sp, #68]	; 0x44
   29728:	eor	r3, r3, fp, ror #7
   2972c:	eor	r3, r3, fp, lsr #3
   29730:	add	r1, r2, r1
   29734:	add	r1, r1, ip
   29738:	add	r2, r7, ip
   2973c:	add	r3, r3, r4
   29740:	ldr	ip, [sp, #28]
   29744:	ror	r4, r8, #19
   29748:	orr	r7, r0, r1
   2974c:	eor	r4, r4, r8, ror #17
   29750:	add	r3, r3, ip
   29754:	eor	r4, r4, r8, lsr #10
   29758:	movw	ip, #13701	; 0x3585
   2975c:	add	r3, r3, r4
   29760:	eor	r8, r5, lr
   29764:	movt	ip, #62478	; 0xf40e
   29768:	and	r8, r8, r2
   2976c:	add	ip, r3, ip
   29770:	eor	r8, r8, r5
   29774:	add	r6, ip, r6
   29778:	str	r3, [sp, #40]	; 0x28
   2977c:	add	r6, r8, r6
   29780:	ror	r3, r2, #11
   29784:	ldr	r8, [sp]
   29788:	eor	r3, r3, r2, ror #6
   2978c:	eor	r3, r3, r2, ror #25
   29790:	ror	ip, r1, #13
   29794:	add	r3, r6, r3
   29798:	ldr	r6, [sp, #12]
   2979c:	ror	r4, r8, #18
   297a0:	and	r7, r7, sl
   297a4:	eor	r4, r4, r8, ror #7
   297a8:	eor	ip, ip, r1, ror #2
   297ac:	eor	r4, r4, r8, lsr #3
   297b0:	and	r8, r0, r1
   297b4:	add	r4, r4, fp
   297b8:	ror	fp, r6, #19
   297bc:	eor	fp, fp, r6, ror #17
   297c0:	eor	ip, ip, r1, ror #22
   297c4:	eor	fp, fp, r6, lsr #10
   297c8:	ldr	r6, [sp, #56]	; 0x38
   297cc:	orr	r7, r7, r8
   297d0:	add	r4, r4, r6
   297d4:	movw	r6, #41072	; 0xa070
   297d8:	add	r4, r4, fp
   297dc:	movt	r6, #4202	; 0x106a
   297e0:	add	r8, ip, r7
   297e4:	add	r6, r4, r6
   297e8:	add	ip, r9, r3
   297ec:	add	r8, r8, r3
   297f0:	add	r5, r6, r5
   297f4:	eor	r3, lr, r2
   297f8:	ldr	r6, [sp, #4]
   297fc:	and	r3, r3, ip
   29800:	eor	r3, r3, lr
   29804:	str	r4, [sp, #16]
   29808:	add	r5, r3, r5
   2980c:	ldr	r4, [sp]
   29810:	ror	r3, r6, #18
   29814:	ror	r7, ip, #11
   29818:	eor	r3, r3, r6, ror #7
   2981c:	eor	r7, r7, ip, ror #6
   29820:	eor	r3, r3, r6, lsr #3
   29824:	orr	r9, r1, r8
   29828:	add	r3, r3, r4
   2982c:	ldr	r4, [sp, #40]	; 0x28
   29830:	eor	r7, r7, ip, ror #25
   29834:	ror	fp, r8, #13
   29838:	add	r5, r5, r7
   2983c:	and	r9, r9, r0
   29840:	ror	r6, r4, #19
   29844:	and	r7, r1, r8
   29848:	eor	r6, r6, r4, ror #17
   2984c:	eor	fp, fp, r8, ror #2
   29850:	eor	r6, r6, r4, lsr #10
   29854:	ldr	r4, [sp, #32]
   29858:	eor	fp, fp, r8, ror #22
   2985c:	orr	r7, r9, r7
   29860:	add	r7, fp, r7
   29864:	add	r3, r3, r4
   29868:	add	fp, sl, r5
   2986c:	add	r7, r7, r5
   29870:	add	r3, r3, r6
   29874:	eor	r5, r2, ip
   29878:	movw	r4, #49430	; 0xc116
   2987c:	movt	r4, #6564	; 0x19a4
   29880:	add	r4, r3, r4
   29884:	and	r5, r5, fp
   29888:	eor	r5, r5, r2
   2988c:	add	lr, r4, lr
   29890:	add	lr, r5, lr
   29894:	ldr	r5, [sp, #44]	; 0x2c
   29898:	orr	r9, r8, r7
   2989c:	ldr	sl, [sp, #16]
   298a0:	str	r3, [sp, #64]	; 0x40
   298a4:	and	r9, r9, r1
   298a8:	ror	r4, r5, #18
   298ac:	ror	r3, fp, #11
   298b0:	eor	r4, r4, r5, ror #7
   298b4:	ror	r6, r7, #13
   298b8:	eor	r4, r4, r5, lsr #3
   298bc:	and	r5, r8, r7
   298c0:	orr	r9, r9, r5
   298c4:	eor	r3, r3, fp, ror #6
   298c8:	ldr	r5, [sp, #4]
   298cc:	eor	r6, r6, r7, ror #2
   298d0:	eor	r6, r6, r7, ror #22
   298d4:	eor	r3, r3, fp, ror #25
   298d8:	add	r3, lr, r3
   298dc:	add	r4, r4, r5
   298e0:	ror	lr, sl, #19
   298e4:	add	r5, r6, r9
   298e8:	ldr	r6, [sp, #60]	; 0x3c
   298ec:	eor	lr, lr, sl, ror #17
   298f0:	add	r0, r0, r3
   298f4:	eor	lr, lr, sl, lsr #10
   298f8:	add	r4, r4, r6
   298fc:	add	r5, r5, r3
   29900:	add	sl, r4, lr
   29904:	eor	r3, ip, fp
   29908:	movw	r6, #27656	; 0x6c08
   2990c:	movt	r6, #7735	; 0x1e37
   29910:	ldr	r9, [sp, #48]	; 0x30
   29914:	add	r6, sl, r6
   29918:	and	r3, r3, r0
   2991c:	ror	r4, r0, #11
   29920:	eor	r3, r3, ip
   29924:	add	r2, r6, r2
   29928:	eor	r4, r4, r0, ror #6
   2992c:	orr	lr, r7, r5
   29930:	eor	r4, r4, r0, ror #25
   29934:	add	r2, r3, r2
   29938:	add	r2, r2, r4
   2993c:	and	lr, lr, r8
   29940:	and	r4, r7, r5
   29944:	ror	r3, r9, #18
   29948:	eor	r3, r3, r9, ror #7
   2994c:	orr	r4, lr, r4
   29950:	ldr	lr, [sp, #64]	; 0x40
   29954:	eor	r3, r3, r9, lsr #3
   29958:	ldr	r9, [sp, #44]	; 0x2c
   2995c:	ror	r6, r5, #13
   29960:	eor	r6, r6, r5, ror #2
   29964:	add	r1, r1, r2
   29968:	add	r3, r3, r9
   2996c:	ror	r9, lr, #19
   29970:	eor	r9, r9, lr, ror #17
   29974:	eor	r6, r6, r5, ror #22
   29978:	eor	r9, r9, lr, lsr #10
   2997c:	ldr	lr, [sp, #8]
   29980:	add	r4, r6, r4
   29984:	add	r3, r3, lr
   29988:	movw	lr, #30540	; 0x774c
   2998c:	add	r9, r3, r9
   29990:	movt	lr, #10056	; 0x2748
   29994:	eor	r3, fp, r0
   29998:	str	r9, [sp, #4]
   2999c:	add	r4, r4, r2
   299a0:	add	lr, r9, lr
   299a4:	and	r3, r3, r1
   299a8:	ldr	r9, [sp, #52]	; 0x34
   299ac:	ror	r2, r1, #11
   299b0:	add	ip, lr, ip
   299b4:	eor	r3, r3, fp
   299b8:	eor	r2, r2, r1, ror #6
   299bc:	orr	r6, r5, r4
   299c0:	eor	r2, r2, r1, ror #25
   299c4:	add	r3, r3, ip
   299c8:	and	r6, r6, r7
   299cc:	add	r3, r3, r2
   299d0:	ror	lr, r4, #13
   299d4:	and	r2, r5, r4
   299d8:	ror	ip, r9, #18
   299dc:	orr	r6, r6, r2
   299e0:	eor	lr, lr, r4, ror #2
   299e4:	ldr	r2, [sp, #48]	; 0x30
   299e8:	eor	ip, ip, r9, ror #7
   299ec:	eor	lr, lr, r4, ror #22
   299f0:	eor	ip, ip, r9, lsr #3
   299f4:	add	ip, ip, r2
   299f8:	add	lr, lr, r6
   299fc:	ror	r2, sl, #19
   29a00:	ldr	r6, [sp, #36]	; 0x24
   29a04:	eor	r2, r2, sl, ror #17
   29a08:	add	r8, r8, r3
   29a0c:	add	lr, lr, r3
   29a10:	add	ip, ip, r6
   29a14:	eor	r3, r2, sl, lsr #10
   29a18:	ldr	r9, [sp, #20]
   29a1c:	add	ip, ip, r3
   29a20:	movw	r2, #48309	; 0xbcb5
   29a24:	movt	r2, #13488	; 0x34b0
   29a28:	ror	r6, lr, #13
   29a2c:	mov	r3, ip
   29a30:	eor	ip, r0, r1
   29a34:	add	r2, r3, r2
   29a38:	and	ip, ip, r8
   29a3c:	add	r2, r2, fp
   29a40:	eor	ip, ip, r0
   29a44:	add	ip, ip, r2
   29a48:	ror	r2, r9, #18
   29a4c:	str	r3, [sp, #44]	; 0x2c
   29a50:	eor	r2, r2, r9, ror #7
   29a54:	ror	r3, r8, #11
   29a58:	eor	r2, r2, r9, lsr #3
   29a5c:	eor	r3, r3, r8, ror #6
   29a60:	ldr	r9, [sp, #52]	; 0x34
   29a64:	orr	fp, r4, lr
   29a68:	eor	r3, r3, r8, ror #25
   29a6c:	add	r3, ip, r3
   29a70:	and	fp, fp, r5
   29a74:	and	ip, r4, lr
   29a78:	eor	r6, r6, lr, ror #2
   29a7c:	add	r2, r2, r9
   29a80:	ldr	r9, [sp, #4]
   29a84:	eor	r6, r6, lr, ror #22
   29a88:	orr	ip, fp, ip
   29a8c:	add	ip, r6, ip
   29a90:	add	r7, r7, r3
   29a94:	add	ip, ip, r3
   29a98:	ror	fp, r9, #19
   29a9c:	ldr	r3, [sp, #12]
   29aa0:	eor	r6, fp, r9, ror #17
   29aa4:	eor	r6, r6, r9, lsr #10
   29aa8:	ldr	r9, [sp, #24]
   29aac:	add	r2, r2, r3
   29ab0:	eor	r3, r1, r8
   29ab4:	add	r2, r2, r6
   29ab8:	and	r3, r3, r7
   29abc:	eor	r3, r3, r1
   29ac0:	ror	fp, r7, #11
   29ac4:	mov	r6, r2
   29ac8:	movw	r2, #3251	; 0xcb3
   29acc:	movt	r2, #14620	; 0x391c
   29ad0:	eor	fp, fp, r7, ror #6
   29ad4:	add	r2, r6, r2
   29ad8:	str	r6, [sp, #48]	; 0x30
   29adc:	add	r2, r2, r0
   29ae0:	orr	r6, lr, ip
   29ae4:	add	r3, r3, r2
   29ae8:	ror	r2, r9, #18
   29aec:	eor	r2, r2, r9, ror #7
   29af0:	eor	fp, fp, r7, ror #25
   29af4:	eor	r2, r2, r9, lsr #3
   29af8:	ldr	r9, [sp, #20]
   29afc:	ror	r0, ip, #13
   29b00:	add	r3, r3, fp
   29b04:	and	r6, r6, r4
   29b08:	and	fp, lr, ip
   29b0c:	eor	r0, r0, ip, ror #2
   29b10:	add	r2, r2, r9
   29b14:	ldr	r9, [sp, #44]	; 0x2c
   29b18:	orr	r6, r6, fp
   29b1c:	eor	r0, r0, ip, ror #22
   29b20:	add	r5, r5, r3
   29b24:	add	r0, r0, r6
   29b28:	movw	r6, #43594	; 0xaa4a
   29b2c:	add	r0, r0, r3
   29b30:	ror	fp, r9, #19
   29b34:	ldr	r3, [sp, #40]	; 0x28
   29b38:	eor	fp, fp, r9, ror #17
   29b3c:	eor	fp, fp, r9, lsr #10
   29b40:	movt	r6, #20184	; 0x4ed8
   29b44:	add	r2, r2, r3
   29b48:	ldr	r9, [sp, #28]
   29b4c:	add	r2, r2, fp
   29b50:	ror	fp, r0, #13
   29b54:	eor	fp, fp, r0, ror #2
   29b58:	mov	r3, r2
   29b5c:	eor	r2, r8, r7
   29b60:	add	r6, r3, r6
   29b64:	and	r2, r2, r5
   29b68:	eor	r2, r2, r8
   29b6c:	add	r1, r6, r1
   29b70:	add	r1, r2, r1
   29b74:	ror	r2, r9, #18
   29b78:	eor	r2, r2, r9, ror #7
   29b7c:	str	r3, [sp, #52]	; 0x34
   29b80:	eor	r2, r2, r9, lsr #3
   29b84:	ldr	r9, [sp, #24]
   29b88:	ror	r3, r5, #11
   29b8c:	orr	r6, ip, r0
   29b90:	eor	r3, r3, r5, ror #6
   29b94:	add	r2, r2, r9
   29b98:	ldr	r9, [sp, #48]	; 0x30
   29b9c:	eor	r3, r3, r5, ror #25
   29ba0:	add	r3, r1, r3
   29ba4:	and	r6, r6, lr
   29ba8:	and	r1, ip, r0
   29bac:	eor	fp, fp, r0, ror #22
   29bb0:	orr	r1, r6, r1
   29bb4:	ror	r6, r9, #19
   29bb8:	add	r1, fp, r1
   29bbc:	eor	fp, r6, r9, ror #17
   29bc0:	ldr	r6, [sp, #16]
   29bc4:	eor	fp, fp, r9, lsr #10
   29bc8:	add	r1, r1, r3
   29bcc:	add	r4, r4, r3
   29bd0:	add	r2, r2, r6
   29bd4:	ldr	r9, [sp, #56]	; 0x38
   29bd8:	add	r2, r2, fp
   29bdc:	movw	r3, #51791	; 0xca4f
   29be0:	movt	r3, #23452	; 0x5b9c
   29be4:	orr	r6, r0, r1
   29be8:	mov	fp, r2
   29bec:	eor	r2, r7, r5
   29bf0:	and	r2, r2, r4
   29bf4:	add	r3, fp, r3
   29bf8:	add	r3, r3, r8
   29bfc:	eor	r8, r2, r7
   29c00:	add	r8, r8, r3
   29c04:	ror	r3, r9, #18
   29c08:	str	fp, [sp, #24]
   29c0c:	eor	r3, r3, r9, ror #7
   29c10:	ror	fp, r4, #11
   29c14:	eor	r3, r3, r9, lsr #3
   29c18:	eor	fp, fp, r4, ror #6
   29c1c:	ldr	r9, [sp, #28]
   29c20:	eor	fp, fp, r4, ror #25
   29c24:	ror	r2, r1, #13
   29c28:	add	r8, r8, fp
   29c2c:	and	r6, r6, ip
   29c30:	and	fp, r0, r1
   29c34:	eor	r2, r2, r1, ror #2
   29c38:	add	r3, r3, r9
   29c3c:	ldr	r9, [sp, #52]	; 0x34
   29c40:	orr	r6, r6, fp
   29c44:	eor	r2, r2, r1, ror #22
   29c48:	add	r2, r2, r6
   29c4c:	add	lr, lr, r8
   29c50:	add	r2, r2, r8
   29c54:	ror	fp, r9, #19
   29c58:	ldr	r8, [sp, #64]	; 0x40
   29c5c:	eor	fp, fp, r9, ror #17
   29c60:	eor	fp, fp, r9, lsr #10
   29c64:	movw	r6, #28659	; 0x6ff3
   29c68:	add	r3, r3, r8
   29c6c:	ldr	r9, [sp, #32]
   29c70:	add	r8, r3, fp
   29c74:	movt	r6, #26670	; 0x682e
   29c78:	eor	fp, r5, r4
   29c7c:	add	r6, r8, r6
   29c80:	and	fp, fp, lr
   29c84:	add	r6, r6, r7
   29c88:	eor	r7, fp, r5
   29c8c:	ror	r3, lr, #11
   29c90:	add	r7, r7, r6
   29c94:	ror	r6, r9, #18
   29c98:	eor	r6, r6, r9, ror #7
   29c9c:	eor	r3, r3, lr, ror #6
   29ca0:	eor	r6, r6, r9, lsr #3
   29ca4:	ldr	r9, [sp, #56]	; 0x38
   29ca8:	str	r8, [sp, #28]
   29cac:	eor	r3, r3, lr, ror #25
   29cb0:	add	r6, r6, r9
   29cb4:	ldr	r9, [sp, #24]
   29cb8:	orr	r8, r1, r2
   29cbc:	ror	fp, r2, #13
   29cc0:	add	r7, r7, r3
   29cc4:	and	r8, r8, r0
   29cc8:	and	r3, r1, r2
   29ccc:	eor	fp, fp, r2, ror #2
   29cd0:	eor	fp, fp, r2, ror #22
   29cd4:	orr	r3, r8, r3
   29cd8:	ror	r8, r9, #19
   29cdc:	add	r3, fp, r3
   29ce0:	eor	fp, r8, r9, ror #17
   29ce4:	add	sl, r6, sl
   29ce8:	eor	fp, fp, r9, lsr #10
   29cec:	add	ip, ip, r7
   29cf0:	add	r3, r3, r7
   29cf4:	add	r7, sl, fp
   29cf8:	eor	r6, r4, lr
   29cfc:	ldr	fp, [sp, #60]	; 0x3c
   29d00:	mov	sl, r7
   29d04:	movw	r7, #33518	; 0x82ee
   29d08:	movt	r7, #29839	; 0x748f
   29d0c:	str	sl, [sp, #56]	; 0x38
   29d10:	add	r7, sl, r7
   29d14:	and	r6, r6, ip
   29d18:	ror	sl, ip, #11
   29d1c:	eor	r6, r6, r4
   29d20:	add	r5, r7, r5
   29d24:	eor	sl, sl, ip, ror #6
   29d28:	orr	r8, r2, r3
   29d2c:	eor	sl, sl, ip, ror #25
   29d30:	ror	r7, r3, #13
   29d34:	add	r5, r6, r5
   29d38:	add	r5, r5, sl
   29d3c:	and	r8, r8, r1
   29d40:	and	sl, r2, r3
   29d44:	eor	r7, r7, r3, ror #2
   29d48:	ror	r6, fp, #18
   29d4c:	ldr	r9, [sp, #32]
   29d50:	orr	sl, r8, sl
   29d54:	eor	r6, r6, fp, ror #7
   29d58:	eor	r7, r7, r3, ror #22
   29d5c:	eor	r6, r6, fp, lsr #3
   29d60:	add	r7, r7, sl
   29d64:	ldr	fp, [sp, #28]
   29d68:	add	r6, r6, r9
   29d6c:	add	r9, r7, r5
   29d70:	str	r3, [sp]
   29d74:	add	r0, r0, r5
   29d78:	mov	sl, r9
   29d7c:	ror	r8, fp, #19
   29d80:	ldr	r9, [sp, #4]
   29d84:	eor	r8, r8, fp, ror #17
   29d88:	eor	r8, r8, fp, lsr #10
   29d8c:	movw	r5, #25455	; 0x636f
   29d90:	add	r6, r6, r9
   29d94:	movt	r5, #30885	; 0x78a5
   29d98:	add	r6, r6, r8
   29d9c:	eor	r9, lr, ip
   29da0:	mov	r3, r0
   29da4:	ldr	fp, [sp, #8]
   29da8:	add	r5, r6, r5
   29dac:	and	r9, r9, r3
   29db0:	eor	r9, r9, lr
   29db4:	add	r4, r5, r4
   29db8:	mov	r0, sl
   29dbc:	add	r4, r9, r4
   29dc0:	ldr	sl, [sp]
   29dc4:	ror	r7, r3, #11
   29dc8:	ldr	r9, [sp]
   29dcc:	ror	r8, r0, #13
   29dd0:	str	r3, [sp, #20]
   29dd4:	ror	r5, fp, #18
   29dd8:	orr	sl, sl, r0
   29ddc:	eor	r7, r7, r3, ror #6
   29de0:	eor	r8, r8, r0, ror #2
   29de4:	mov	r3, r0
   29de8:	eor	r5, r5, fp, ror #7
   29dec:	and	fp, r9, r0
   29df0:	ldr	r0, [sp, #20]
   29df4:	and	sl, sl, r2
   29df8:	ldr	r9, [sp, #8]
   29dfc:	eor	r8, r8, r3, ror #22
   29e00:	orr	sl, sl, fp
   29e04:	movw	fp, #30740	; 0x7814
   29e08:	eor	r7, r7, r0, ror #25
   29e0c:	ldr	r0, [sp, #56]	; 0x38
   29e10:	add	r4, r4, r7
   29e14:	add	sl, r8, sl
   29e18:	ldr	r8, [sp, #60]	; 0x3c
   29e1c:	add	r1, r1, r4
   29e20:	eor	r5, r5, r9, lsr #3
   29e24:	str	r1, [sp, #4]
   29e28:	ror	r9, r0, #19
   29e2c:	ldr	r1, [sp, #44]	; 0x2c
   29e30:	add	r5, r5, r8
   29e34:	eor	r9, r9, r0, ror #17
   29e38:	mov	r8, r0
   29e3c:	add	r5, r5, r1
   29e40:	add	r0, sl, r4
   29e44:	eor	r9, r9, r8, lsr #10
   29e48:	ldr	sl, [sp, #20]
   29e4c:	add	r5, r5, r9
   29e50:	ldr	r1, [sp, #4]
   29e54:	movt	fp, #33992	; 0x84c8
   29e58:	eor	r7, ip, sl
   29e5c:	add	fp, r5, fp
   29e60:	and	r7, r7, r1
   29e64:	add	lr, fp, lr
   29e68:	ldr	fp, [sp, #4]
   29e6c:	eor	r7, r7, ip
   29e70:	ror	r9, r1, #11
   29e74:	add	lr, r7, lr
   29e78:	ldr	r1, [sp, #36]	; 0x24
   29e7c:	orr	sl, r3, r0
   29e80:	ldr	r7, [sp, #4]
   29e84:	eor	r9, r9, fp, ror #6
   29e88:	ldr	fp, [sp]
   29e8c:	ror	r8, r0, #13
   29e90:	ror	r4, r1, #18
   29e94:	eor	r8, r8, r0, ror #2
   29e98:	and	sl, sl, fp
   29e9c:	eor	r9, r9, r7, ror #25
   29ea0:	mov	fp, r3
   29ea4:	and	fp, fp, r0
   29ea8:	add	lr, lr, r9
   29eac:	eor	r8, r8, r0, ror #22
   29eb0:	ldr	r9, [sp, #8]
   29eb4:	eor	r4, r4, r1, ror #7
   29eb8:	orr	fp, sl, fp
   29ebc:	eor	r4, r4, r1, lsr #3
   29ec0:	add	fp, r8, fp
   29ec4:	ror	sl, r6, #19
   29ec8:	ldr	r8, [sp, #48]	; 0x30
   29ecc:	add	r4, r4, r9
   29ed0:	eor	sl, sl, r6, ror #17
   29ed4:	add	r1, fp, lr
   29ed8:	add	r4, r4, r8
   29edc:	eor	r6, sl, r6, lsr #10
   29ee0:	add	r2, r2, lr
   29ee4:	add	r6, r4, r6
   29ee8:	ldr	sl, [sp, #20]
   29eec:	mov	fp, #520	; 0x208
   29ef0:	ldr	lr, [sp, #4]
   29ef4:	movt	fp, #36039	; 0x8cc7
   29ef8:	add	fp, r6, fp
   29efc:	ldr	r4, [sp, #12]
   29f00:	eor	r8, sl, lr
   29f04:	add	ip, fp, ip
   29f08:	ldr	fp, [sp, #12]
   29f0c:	and	r8, r8, r2
   29f10:	eor	r8, r8, sl
   29f14:	ror	r4, r4, #18
   29f18:	add	ip, r8, ip
   29f1c:	ldr	r8, [sp, #36]	; 0x24
   29f20:	eor	r4, r4, fp, ror #7
   29f24:	orr	r9, r0, r1
   29f28:	ror	r7, r2, #11
   29f2c:	ror	lr, r1, #13
   29f30:	eor	r4, r4, fp, lsr #3
   29f34:	and	sl, r0, r1
   29f38:	eor	r7, r7, r2, ror #6
   29f3c:	and	r9, r9, r3
   29f40:	eor	lr, lr, r1, ror #2
   29f44:	ror	fp, r5, #19
   29f48:	add	r4, r4, r8
   29f4c:	ldr	r8, [sp, #52]	; 0x34
   29f50:	str	r0, [sp, #8]
   29f54:	eor	r7, r7, r2, ror #25
   29f58:	ldr	r0, [sp, #4]
   29f5c:	eor	lr, lr, r1, ror #22
   29f60:	str	r3, [sp, #32]
   29f64:	orr	r9, r9, sl
   29f68:	ldr	r3, [sp]
   29f6c:	eor	fp, fp, r5, ror #17
   29f70:	add	ip, ip, r7
   29f74:	add	r9, lr, r9
   29f78:	add	r4, r4, r8
   29f7c:	eor	fp, fp, r5, lsr #10
   29f80:	add	r3, r3, ip
   29f84:	add	fp, r4, fp
   29f88:	add	ip, r9, ip
   29f8c:	eor	r7, r0, r2
   29f90:	movw	r9, #65530	; 0xfffa
   29f94:	ldr	r0, [sp, #20]
   29f98:	movt	r9, #37054	; 0x90be
   29f9c:	and	r7, r7, r3
   29fa0:	add	r9, fp, r9
   29fa4:	ldr	sl, [sp, #40]	; 0x28
   29fa8:	add	r0, r9, r0
   29fac:	ldr	r9, [sp, #4]
   29fb0:	orr	r8, r1, ip
   29fb4:	str	r1, [sp, #20]
   29fb8:	eor	r7, r7, r9
   29fbc:	and	r9, r1, ip
   29fc0:	ldr	r1, [sp, #8]
   29fc4:	ror	r5, r3, #11
   29fc8:	ror	r4, ip, #13
   29fcc:	eor	r5, r5, r3, ror #6
   29fd0:	and	r8, r8, r1
   29fd4:	eor	r4, r4, ip, ror #2
   29fd8:	eor	r5, r5, r3, ror #25
   29fdc:	eor	r4, r4, ip, ror #22
   29fe0:	ror	lr, sl, #18
   29fe4:	add	r0, r7, r0
   29fe8:	orr	r8, r8, r9
   29fec:	add	r0, r0, r5
   29ff0:	add	r8, r4, r8
   29ff4:	ldr	r5, [sp, #32]
   29ff8:	ldr	r4, [sp, #12]
   29ffc:	eor	lr, lr, sl, ror #7
   2a000:	eor	lr, lr, sl, lsr #3
   2a004:	ror	sl, r6, #19
   2a008:	add	lr, lr, r4
   2a00c:	eor	r4, sl, r6, ror #17
   2a010:	add	sl, r5, r0
   2a014:	ldr	r5, [sp, #24]
   2a018:	eor	r6, r4, r6, lsr #10
   2a01c:	add	r0, r8, r0
   2a020:	add	lr, lr, r5
   2a024:	ldr	r8, [sp, #20]
   2a028:	add	r5, lr, r6
   2a02c:	ldr	r1, [sp, #4]
   2a030:	movw	r7, #27883	; 0x6ceb
   2a034:	movt	r7, #42064	; 0xa450
   2a038:	mov	lr, r5
   2a03c:	eor	r5, r2, r3
   2a040:	add	r7, lr, r7
   2a044:	orr	r6, ip, r0
   2a048:	and	r5, r5, sl
   2a04c:	str	lr, [sp]
   2a050:	eor	r5, r5, r2
   2a054:	ror	r4, sl, #11
   2a058:	ror	lr, r0, #13
   2a05c:	add	r1, r7, r1
   2a060:	and	r6, r6, r8
   2a064:	ldr	r8, [sp, #16]
   2a068:	and	r7, ip, r0
   2a06c:	eor	r4, r4, sl, ror #6
   2a070:	eor	lr, lr, r0, ror #2
   2a074:	add	r1, r5, r1
   2a078:	ldr	r5, [sp, #16]
   2a07c:	eor	r4, r4, sl, ror #25
   2a080:	orr	r6, r6, r7
   2a084:	eor	lr, lr, r0, ror #22
   2a088:	add	r1, r1, r4
   2a08c:	add	lr, lr, r6
   2a090:	ldr	r4, [sp, #40]	; 0x28
   2a094:	ror	r8, r8, #18
   2a098:	ldr	r6, [sp, #8]
   2a09c:	eor	r8, r8, r5, ror #7
   2a0a0:	movw	r9, #41975	; 0xa3f7
   2a0a4:	movt	r9, #48889	; 0xbef9
   2a0a8:	add	r9, r4, r9
   2a0ac:	eor	r8, r8, r5, lsr #3
   2a0b0:	ror	r7, fp, #19
   2a0b4:	add	r5, r6, r1
   2a0b8:	ldr	r6, [sp, #28]
   2a0bc:	add	r1, lr, r1
   2a0c0:	add	r8, r8, r9
   2a0c4:	eor	r7, r7, fp, ror #17
   2a0c8:	add	lr, r8, r6
   2a0cc:	eor	fp, r7, fp, lsr #10
   2a0d0:	eor	r8, r3, sl
   2a0d4:	add	fp, lr, fp
   2a0d8:	ror	r9, r1, #13
   2a0dc:	and	r8, r8, r5
   2a0e0:	ror	lr, r5, #11
   2a0e4:	eor	r9, r9, r1, ror #2
   2a0e8:	eor	r8, r8, r3
   2a0ec:	add	r2, fp, r2
   2a0f0:	eor	lr, lr, r5, ror #6
   2a0f4:	orr	r4, r0, r1
   2a0f8:	eor	r7, r9, r1, ror #22
   2a0fc:	add	fp, r2, r8
   2a100:	ldr	r9, [sp, #64]	; 0x40
   2a104:	eor	lr, lr, r5, ror #25
   2a108:	and	r4, r4, ip
   2a10c:	and	r6, r0, r1
   2a110:	add	fp, fp, lr
   2a114:	ldr	lr, [sp]
   2a118:	orr	r6, r4, r6
   2a11c:	ldr	r4, [sp, #16]
   2a120:	ror	r8, r9, #18
   2a124:	movw	r2, #30962	; 0x78f2
   2a128:	movt	r2, #50801	; 0xc671
   2a12c:	add	r7, r7, r6
   2a130:	add	r2, r4, r2
   2a134:	eor	r6, r8, r9, ror #7
   2a138:	ror	r4, lr, #19
   2a13c:	eor	r6, r6, r9, lsr #3
   2a140:	eor	r4, r4, lr, ror #17
   2a144:	ldr	lr, [sp, #56]	; 0x38
   2a148:	add	r6, r6, r2
   2a14c:	add	r7, r7, fp
   2a150:	add	r6, r6, lr
   2a154:	ldr	lr, [sp]
   2a158:	ldr	r8, [sp, #20]
   2a15c:	orr	r9, r1, r7
   2a160:	ror	r2, r7, #13
   2a164:	and	r9, r9, r0
   2a168:	add	fp, r8, fp
   2a16c:	eor	r4, r4, lr, lsr #10
   2a170:	eor	r8, sl, r5
   2a174:	and	lr, r1, r7
   2a178:	and	r8, r8, fp
   2a17c:	eor	r2, r2, r7, ror #2
   2a180:	add	r6, r6, r4
   2a184:	orr	r9, r9, lr
   2a188:	ldr	lr, [sp, #96]	; 0x60
   2a18c:	eor	r2, r2, r7, ror #22
   2a190:	add	r6, r6, r3
   2a194:	ror	r4, fp, #11
   2a198:	eor	r8, r8, sl
   2a19c:	add	ip, lr, ip
   2a1a0:	eor	r4, r4, fp, ror #6
   2a1a4:	ldr	lr, [sp, #88]	; 0x58
   2a1a8:	add	r9, r2, r9
   2a1ac:	add	r8, r6, r8
   2a1b0:	ldr	r2, [sp, #80]	; 0x50
   2a1b4:	eor	r4, r4, fp, ror #25
   2a1b8:	ldr	r6, [sp, #104]	; 0x68
   2a1bc:	add	r8, r8, r4
   2a1c0:	ldr	r3, [sp, #108]	; 0x6c
   2a1c4:	add	r5, lr, r5
   2a1c8:	add	sl, r6, sl
   2a1cc:	ldr	lr, [sp, #76]	; 0x4c
   2a1d0:	ldr	r6, [sp, #92]	; 0x5c
   2a1d4:	add	r9, r9, r2
   2a1d8:	ldr	r4, [sp, #84]	; 0x54
   2a1dc:	add	r9, r9, r8
   2a1e0:	ldr	r2, [sp, #100]	; 0x64
   2a1e4:	add	r0, r6, r0
   2a1e8:	str	sl, [r3, #36]	; 0x24
   2a1ec:	add	r1, lr, r1
   2a1f0:	str	r0, [r3, #20]
   2a1f4:	add	r7, r4, r7
   2a1f8:	str	r5, [r3, #32]
   2a1fc:	add	fp, r2, fp
   2a200:	str	r1, [r3, #16]
   2a204:	add	r8, ip, r8
   2a208:	str	r7, [r3, #12]
   2a20c:	str	fp, [r3, #28]
   2a210:	str	r9, [r3, #8]
   2a214:	str	r8, [r3, #24]
   2a218:	add	sp, sp, #116	; 0x74
   2a21c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a220:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a224:	mov	r6, r0
   2a228:	ldr	r8, [r0]
   2a22c:	mov	r7, r2
   2a230:	mov	r4, r1
   2a234:	adds	r3, r8, r2
   2a238:	str	r3, [r0]
   2a23c:	and	r8, r8, #63	; 0x3f
   2a240:	ldrcs	r3, [r0, #4]
   2a244:	rsb	r5, r8, #64	; 0x40
   2a248:	addcs	r3, r3, #1
   2a24c:	strcs	r3, [r0, #4]
   2a250:	cmp	r5, r2
   2a254:	movhi	r3, #0
   2a258:	movls	r3, #1
   2a25c:	cmp	r8, #0
   2a260:	moveq	r3, #0
   2a264:	cmp	r3, #0
   2a268:	bne	2a2c0 <crc32@@Base+0x10b78>
   2a26c:	cmp	r7, #63	; 0x3f
   2a270:	bls	2a2a0 <crc32@@Base+0x10b58>
   2a274:	sub	r5, r7, #64	; 0x40
   2a278:	bic	r5, r5, #63	; 0x3f
   2a27c:	add	r5, r5, #64	; 0x40
   2a280:	add	r5, r4, r5
   2a284:	mov	r1, r4
   2a288:	mov	r0, r6
   2a28c:	add	r4, r4, #64	; 0x40
   2a290:	bl	27f44 <crc32@@Base+0xe7fc>
   2a294:	cmp	r4, r5
   2a298:	bne	2a284 <crc32@@Base+0x10b3c>
   2a29c:	and	r7, r7, #63	; 0x3f
   2a2a0:	cmp	r7, #0
   2a2a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a2a8:	add	r0, r6, #40	; 0x28
   2a2ac:	mov	r2, r7
   2a2b0:	add	r0, r0, r8
   2a2b4:	mov	r1, r4
   2a2b8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a2bc:	b	1259c <memcpy@plt>
   2a2c0:	add	r9, r0, #40	; 0x28
   2a2c4:	mov	r2, r5
   2a2c8:	add	r0, r9, r8
   2a2cc:	sub	r7, r7, r5
   2a2d0:	bl	1259c <memcpy@plt>
   2a2d4:	mov	r1, r9
   2a2d8:	mov	r0, r6
   2a2dc:	add	r4, r4, r5
   2a2e0:	bl	27f44 <crc32@@Base+0xe7fc>
   2a2e4:	mov	r8, #0
   2a2e8:	b	2a26c <crc32@@Base+0x10b24>
   2a2ec:	movw	r2, #58983	; 0xe667
   2a2f0:	movw	r3, #44677	; 0xae85
   2a2f4:	movt	r2, #27145	; 0x6a09
   2a2f8:	movt	r3, #47975	; 0xbb67
   2a2fc:	strd	r2, [r0, #8]
   2a300:	movw	r2, #62322	; 0xf372
   2a304:	movw	r3, #62778	; 0xf53a
   2a308:	movt	r2, #15470	; 0x3c6e
   2a30c:	movt	r3, #42319	; 0xa54f
   2a310:	strd	r2, [r0, #16]
   2a314:	movw	r2, #21119	; 0x527f
   2a318:	movw	r3, #26764	; 0x688c
   2a31c:	movt	r2, #20750	; 0x510e
   2a320:	movt	r3, #39685	; 0x9b05
   2a324:	strd	r2, [r0, #24]
   2a328:	movw	r2, #55723	; 0xd9ab
   2a32c:	movw	r3, #52505	; 0xcd19
   2a330:	movt	r2, #8067	; 0x1f83
   2a334:	movt	r3, #23520	; 0x5be0
   2a338:	strd	r2, [r0, #32]
   2a33c:	mov	r3, #0
   2a340:	str	r3, [r0]
   2a344:	str	r3, [r0, #4]
   2a348:	bx	lr
   2a34c:	cmp	r2, #0
   2a350:	bxeq	lr
   2a354:	b	2a220 <crc32@@Base+0x10ad8>
   2a358:	ldr	r3, [r0]
   2a35c:	push	{r4, r5, r6, lr}
   2a360:	mov	r4, r0
   2a364:	ldr	r0, [r0, #4]
   2a368:	movw	r6, #61168	; 0xeef0
   2a36c:	movt	r6, #4
   2a370:	mov	r5, r1
   2a374:	lsr	r1, r3, #29
   2a378:	sub	sp, sp, #16
   2a37c:	orr	r1, r1, r0, lsl #3
   2a380:	ldr	r0, [r6]
   2a384:	and	r2, r3, #63	; 0x3f
   2a388:	lsl	r3, r3, #3
   2a38c:	cmp	r2, #55	; 0x37
   2a390:	lsr	ip, r1, #24
   2a394:	rsbls	r2, r2, #56	; 0x38
   2a398:	rsbhi	r2, r2, #120	; 0x78
   2a39c:	strb	r1, [sp, #7]
   2a3a0:	strb	ip, [sp, #4]
   2a3a4:	lsr	ip, r1, #16
   2a3a8:	str	r0, [sp, #12]
   2a3ac:	lsr	r1, r1, #8
   2a3b0:	mov	r0, r4
   2a3b4:	strb	r1, [sp, #6]
   2a3b8:	lsr	r1, r3, #24
   2a3bc:	strb	r1, [sp, #8]
   2a3c0:	lsr	r1, r3, #16
   2a3c4:	strb	r1, [sp, #9]
   2a3c8:	movw	r1, #64344	; 0xfb58
   2a3cc:	movt	r1, #4
   2a3d0:	strb	r3, [sp, #11]
   2a3d4:	lsr	r3, r3, #8
   2a3d8:	strb	ip, [sp, #5]
   2a3dc:	strb	r3, [sp, #10]
   2a3e0:	bl	2a220 <crc32@@Base+0x10ad8>
   2a3e4:	mov	r2, #8
   2a3e8:	add	r1, sp, #4
   2a3ec:	mov	r0, r4
   2a3f0:	bl	2a220 <crc32@@Base+0x10ad8>
   2a3f4:	ldrb	r3, [r4, #11]
   2a3f8:	strb	r3, [r5]
   2a3fc:	ldrh	r3, [r4, #10]
   2a400:	strb	r3, [r5, #1]
   2a404:	ldr	r3, [r4, #8]
   2a408:	lsr	r3, r3, #8
   2a40c:	strb	r3, [r5, #2]
   2a410:	ldr	r3, [r4, #8]
   2a414:	strb	r3, [r5, #3]
   2a418:	ldrb	r3, [r4, #15]
   2a41c:	strb	r3, [r5, #4]
   2a420:	ldrh	r3, [r4, #14]
   2a424:	strb	r3, [r5, #5]
   2a428:	ldr	r3, [r4, #12]
   2a42c:	lsr	r3, r3, #8
   2a430:	strb	r3, [r5, #6]
   2a434:	ldr	r3, [r4, #12]
   2a438:	strb	r3, [r5, #7]
   2a43c:	ldrb	r3, [r4, #19]
   2a440:	strb	r3, [r5, #8]
   2a444:	ldrh	r3, [r4, #18]
   2a448:	strb	r3, [r5, #9]
   2a44c:	ldr	r3, [r4, #16]
   2a450:	lsr	r3, r3, #8
   2a454:	strb	r3, [r5, #10]
   2a458:	ldr	r3, [r4, #16]
   2a45c:	strb	r3, [r5, #11]
   2a460:	ldrb	r3, [r4, #23]
   2a464:	strb	r3, [r5, #12]
   2a468:	ldrh	r3, [r4, #22]
   2a46c:	strb	r3, [r5, #13]
   2a470:	ldr	r3, [r4, #20]
   2a474:	lsr	r3, r3, #8
   2a478:	strb	r3, [r5, #14]
   2a47c:	ldr	r3, [r4, #20]
   2a480:	strb	r3, [r5, #15]
   2a484:	ldrb	r3, [r4, #27]
   2a488:	strb	r3, [r5, #16]
   2a48c:	ldrh	r3, [r4, #26]
   2a490:	strb	r3, [r5, #17]
   2a494:	ldr	r3, [r4, #24]
   2a498:	lsr	r3, r3, #8
   2a49c:	strb	r3, [r5, #18]
   2a4a0:	ldr	r3, [r4, #24]
   2a4a4:	strb	r3, [r5, #19]
   2a4a8:	ldrb	r3, [r4, #31]
   2a4ac:	strb	r3, [r5, #20]
   2a4b0:	ldrh	r3, [r4, #30]
   2a4b4:	strb	r3, [r5, #21]
   2a4b8:	ldr	r3, [r4, #28]
   2a4bc:	lsr	r3, r3, #8
   2a4c0:	strb	r3, [r5, #22]
   2a4c4:	ldr	r3, [r4, #28]
   2a4c8:	strb	r3, [r5, #23]
   2a4cc:	ldrb	r3, [r4, #35]	; 0x23
   2a4d0:	strb	r3, [r5, #24]
   2a4d4:	ldrh	r3, [r4, #34]	; 0x22
   2a4d8:	strb	r3, [r5, #25]
   2a4dc:	ldr	r3, [r4, #32]
   2a4e0:	lsr	r3, r3, #8
   2a4e4:	strb	r3, [r5, #26]
   2a4e8:	ldr	r3, [r4, #32]
   2a4ec:	strb	r3, [r5, #27]
   2a4f0:	ldrb	r3, [r4, #39]	; 0x27
   2a4f4:	strb	r3, [r5, #28]
   2a4f8:	ldrh	r3, [r4, #38]	; 0x26
   2a4fc:	strb	r3, [r5, #29]
   2a500:	ldr	r3, [r4, #36]	; 0x24
   2a504:	lsr	r3, r3, #8
   2a508:	strb	r3, [r5, #30]
   2a50c:	ldr	r3, [r4, #36]	; 0x24
   2a510:	strb	r3, [r5, #31]
   2a514:	ldr	r2, [sp, #12]
   2a518:	ldr	r3, [r6]
   2a51c:	cmp	r2, r3
   2a520:	bne	2a52c <crc32@@Base+0x10de4>
   2a524:	add	sp, sp, #16
   2a528:	pop	{r4, r5, r6, pc}
   2a52c:	bl	12494 <__stack_chk_fail@plt>
   2a530:	push	{r4, r5, r6, lr}
   2a534:	movw	r4, #61168	; 0xeef0
   2a538:	movt	r4, #4
   2a53c:	subs	ip, r1, #0
   2a540:	sub	sp, sp, #112	; 0x70
   2a544:	movw	r3, #58983	; 0xe667
   2a548:	ldr	r1, [r4]
   2a54c:	movt	r3, #27145	; 0x6a09
   2a550:	add	r6, sp, #4
   2a554:	str	r3, [sp, #12]
   2a558:	mov	r5, r2
   2a55c:	movw	r3, #44677	; 0xae85
   2a560:	str	r1, [sp, #108]	; 0x6c
   2a564:	movt	r3, #47975	; 0xbb67
   2a568:	str	r3, [sp, #16]
   2a56c:	movw	r3, #62322	; 0xf372
   2a570:	movt	r3, #15470	; 0x3c6e
   2a574:	str	r3, [sp, #20]
   2a578:	movw	r3, #62778	; 0xf53a
   2a57c:	movt	r3, #42319	; 0xa54f
   2a580:	str	r3, [sp, #24]
   2a584:	movw	r3, #21119	; 0x527f
   2a588:	movt	r3, #20750	; 0x510e
   2a58c:	str	r3, [sp, #28]
   2a590:	movw	r3, #26764	; 0x688c
   2a594:	movt	r3, #39685	; 0x9b05
   2a598:	str	r3, [sp, #32]
   2a59c:	movw	r3, #55723	; 0xd9ab
   2a5a0:	movt	r3, #8067	; 0x1f83
   2a5a4:	str	r3, [sp, #36]	; 0x24
   2a5a8:	movw	r3, #52505	; 0xcd19
   2a5ac:	movt	r3, #23520	; 0x5be0
   2a5b0:	str	r3, [sp, #40]	; 0x28
   2a5b4:	mov	r3, #0
   2a5b8:	str	r3, [sp, #4]
   2a5bc:	str	r3, [sp, #8]
   2a5c0:	beq	2a5d4 <crc32@@Base+0x10e8c>
   2a5c4:	mov	r1, r0
   2a5c8:	mov	r2, ip
   2a5cc:	mov	r0, r6
   2a5d0:	bl	2a220 <crc32@@Base+0x10ad8>
   2a5d4:	mov	r1, r5
   2a5d8:	mov	r0, r6
   2a5dc:	bl	2a358 <crc32@@Base+0x10c10>
   2a5e0:	ldr	r2, [sp, #108]	; 0x6c
   2a5e4:	ldr	r3, [r4]
   2a5e8:	cmp	r2, r3
   2a5ec:	bne	2a5f8 <crc32@@Base+0x10eb0>
   2a5f0:	add	sp, sp, #112	; 0x70
   2a5f4:	pop	{r4, r5, r6, pc}
   2a5f8:	bl	12494 <__stack_chk_fail@plt>
   2a5fc:	ldr	r0, [r0, #4]
   2a600:	cmp	r0, r3
   2a604:	bgt	2a624 <crc32@@Base+0x10edc>
   2a608:	ldr	r3, [r1]
   2a60c:	mov	r0, r1
   2a610:	push	{r4, lr}
   2a614:	str	r3, [r2]
   2a618:	bl	12128 <free@plt>
   2a61c:	mov	r0, #0
   2a620:	pop	{r4, pc}
   2a624:	mvn	r0, #0
   2a628:	bx	lr
   2a62c:	ldr	r0, [r0, #4]
   2a630:	cmp	r0, r3
   2a634:	bgt	2a654 <crc32@@Base+0x10f0c>
   2a638:	ldrh	r3, [r1]
   2a63c:	mov	r0, r1
   2a640:	push	{r4, lr}
   2a644:	strh	r3, [r2]
   2a648:	bl	12128 <free@plt>
   2a64c:	mov	r0, #0
   2a650:	pop	{r4, pc}
   2a654:	mvn	r0, #0
   2a658:	bx	lr
   2a65c:	push	{r4, lr}
   2a660:	mov	r4, r1
   2a664:	ldr	r0, [r4]
   2a668:	mov	r1, r2
   2a66c:	mov	r2, r3
   2a670:	bl	19748 <crc32@@Base>
   2a674:	str	r0, [r4]
   2a678:	mov	r0, #0
   2a67c:	pop	{r4, pc}
   2a680:	push	{r4, lr}
   2a684:	mov	r0, #4
   2a688:	mov	r4, r1
   2a68c:	bl	125a8 <malloc@plt>
   2a690:	mov	r3, #0
   2a694:	str	r0, [r4]
   2a698:	str	r3, [r0]
   2a69c:	mov	r0, r3
   2a6a0:	pop	{r4, pc}
   2a6a4:	push	{r4, lr}
   2a6a8:	mov	r0, #2
   2a6ac:	mov	r4, r1
   2a6b0:	bl	125a8 <malloc@plt>
   2a6b4:	mov	r3, #0
   2a6b8:	str	r0, [r4]
   2a6bc:	strh	r3, [r0]
   2a6c0:	mov	r0, r3
   2a6c4:	pop	{r4, pc}
   2a6c8:	push	{r4, lr}
   2a6cc:	mov	r4, r1
   2a6d0:	ldrh	r0, [r4]
   2a6d4:	mov	r1, r2
   2a6d8:	mov	r2, r3
   2a6dc:	bl	26510 <crc32@@Base+0xcdc8>
   2a6e0:	strh	r0, [r4]
   2a6e4:	mov	r0, #0
   2a6e8:	pop	{r4, pc}
   2a6ec:	ldr	r0, [r0, #4]
   2a6f0:	cmp	r0, r3
   2a6f4:	bgt	2a71c <crc32@@Base+0x10fd4>
   2a6f8:	push	{r4, lr}
   2a6fc:	mov	r4, r1
   2a700:	mov	r0, r4
   2a704:	mov	r1, r2
   2a708:	bl	2a358 <crc32@@Base+0x10c10>
   2a70c:	mov	r0, r4
   2a710:	bl	12128 <free@plt>
   2a714:	mov	r0, #0
   2a718:	pop	{r4, pc}
   2a71c:	mvn	r0, #0
   2a720:	bx	lr
   2a724:	mov	r0, r1
   2a728:	mov	r1, r2
   2a72c:	push	{r4, lr}
   2a730:	mov	r2, r3
   2a734:	bl	2a34c <crc32@@Base+0x10c04>
   2a738:	mov	r0, #0
   2a73c:	pop	{r4, pc}
   2a740:	push	{r4, r5, r6, lr}
   2a744:	mov	r0, #104	; 0x68
   2a748:	mov	r4, r1
   2a74c:	bl	125a8 <malloc@plt>
   2a750:	mov	r5, r0
   2a754:	bl	2a2ec <crc32@@Base+0x10ba4>
   2a758:	str	r5, [r4]
   2a75c:	mov	r0, #0
   2a760:	pop	{r4, r5, r6, pc}
   2a764:	ldr	r0, [r0, #4]
   2a768:	cmp	r0, r3
   2a76c:	bgt	2a794 <crc32@@Base+0x1104c>
   2a770:	push	{r4, lr}
   2a774:	mov	r4, r1
   2a778:	mov	r0, r4
   2a77c:	mov	r1, r2
   2a780:	bl	27ad4 <crc32@@Base+0xe38c>
   2a784:	mov	r0, r4
   2a788:	bl	12128 <free@plt>
   2a78c:	mov	r0, #0
   2a790:	pop	{r4, pc}
   2a794:	mvn	r0, #0
   2a798:	bx	lr
   2a79c:	mov	r0, r1
   2a7a0:	mov	r1, r2
   2a7a4:	push	{r4, lr}
   2a7a8:	mov	r2, r3
   2a7ac:	bl	27ac8 <crc32@@Base+0xe380>
   2a7b0:	mov	r0, #0
   2a7b4:	pop	{r4, pc}
   2a7b8:	push	{r4, r5, r6, lr}
   2a7bc:	mov	r0, #92	; 0x5c
   2a7c0:	mov	r4, r1
   2a7c4:	bl	125a8 <malloc@plt>
   2a7c8:	mov	r5, r0
   2a7cc:	bl	27a84 <crc32@@Base+0xe33c>
   2a7d0:	str	r5, [r4]
   2a7d4:	mov	r0, #0
   2a7d8:	pop	{r4, r5, r6, pc}
   2a7dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2a7e0:	movw	r5, #64408	; 0xfb98
   2a7e4:	movt	r5, #4
   2a7e8:	mov	r8, r0
   2a7ec:	mov	r9, r1
   2a7f0:	mov	r4, #0
   2a7f4:	mov	r7, #28
   2a7f8:	mul	r6, r7, r4
   2a7fc:	mov	r0, r8
   2a800:	add	r4, r4, #1
   2a804:	ldr	r1, [r5, r6]
   2a808:	bl	1265c <strcmp@plt>
   2a80c:	cmp	r0, #0
   2a810:	beq	2a824 <crc32@@Base+0x110dc>
   2a814:	cmp	r4, #4
   2a818:	bne	2a7f8 <crc32@@Base+0x110b0>
   2a81c:	mvn	r0, #92	; 0x5c
   2a820:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a824:	add	r5, r5, r6
   2a828:	str	r5, [r9]
   2a82c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a830:	push	{r4, r5, r6, r7, r8, lr}
   2a834:	mov	r6, r0
   2a838:	ldr	r4, [pc, #84]	; 2a894 <crc32@@Base+0x1114c>
   2a83c:	mov	r7, r1
   2a840:	mov	r5, #0
   2a844:	ldr	r1, [r4, #-16]
   2a848:	mov	r0, r6
   2a84c:	bl	1265c <strcmp@plt>
   2a850:	cmp	r0, #0
   2a854:	bne	2a864 <crc32@@Base+0x1111c>
   2a858:	ldr	r3, [r4]
   2a85c:	cmp	r3, #0
   2a860:	bne	2a87c <crc32@@Base+0x11134>
   2a864:	add	r5, r5, #1
   2a868:	add	r4, r4, #28
   2a86c:	cmp	r5, #4
   2a870:	bne	2a844 <crc32@@Base+0x110fc>
   2a874:	mvn	r0, #92	; 0x5c
   2a878:	pop	{r4, r5, r6, r7, r8, pc}
   2a87c:	movw	r3, #64408	; 0xfb98
   2a880:	movt	r3, #4
   2a884:	mov	r2, #28
   2a888:	mla	r5, r2, r5, r3
   2a88c:	str	r5, [r7]
   2a890:	pop	{r4, r5, r6, r7, r8, pc}
   2a894:	andeq	pc, r4, r8, lsr #23
   2a898:	subs	r0, r0, #11
   2a89c:	movne	r0, #1
   2a8a0:	bx	lr
   2a8a4:	ldr	r3, [r0]
   2a8a8:	mov	r0, #60672	; 0xed00
   2a8ac:	movt	r0, #41388	; 0xa1ac
   2a8b0:	bic	r3, r3, #255	; 0xff
   2a8b4:	subs	r0, r3, r0
   2a8b8:	mvnne	r0, #0
   2a8bc:	bx	lr
   2a8c0:	push	{r4, lr}
   2a8c4:	mov	r4, r0
   2a8c8:	movw	r0, #48856	; 0xbed8
   2a8cc:	movt	r0, #3
   2a8d0:	bl	1226c <puts@plt>
   2a8d4:	ldr	r2, [r4]
   2a8d8:	movw	r1, #48892	; 0xbefc
   2a8dc:	mov	r0, #1
   2a8e0:	movt	r1, #3
   2a8e4:	bl	12770 <__printf_chk@plt>
   2a8e8:	ldr	r2, [r4, #4]
   2a8ec:	movw	r1, #48912	; 0xbf10
   2a8f0:	mov	r0, #1
   2a8f4:	movt	r1, #3
   2a8f8:	bl	12770 <__printf_chk@plt>
   2a8fc:	ldr	r2, [r4, #8]
   2a900:	movw	r1, #48932	; 0xbf24
   2a904:	mov	r0, #1
   2a908:	movt	r1, #3
   2a90c:	bl	12770 <__printf_chk@plt>
   2a910:	ldr	r2, [r4, #12]
   2a914:	movw	r1, #48952	; 0xbf38
   2a918:	mov	r0, #1
   2a91c:	movt	r1, #3
   2a920:	bl	12770 <__printf_chk@plt>
   2a924:	ldr	r2, [r4, #16]
   2a928:	movw	r1, #48972	; 0xbf4c
   2a92c:	mov	r0, #1
   2a930:	movt	r1, #3
   2a934:	pop	{r4, lr}
   2a938:	b	12770 <__printf_chk@plt>
   2a93c:	cmp	r0, #0
   2a940:	beq	2a9c4 <crc32@@Base+0x1127c>
   2a944:	ldr	r3, [r0, #64]	; 0x40
   2a948:	ldrb	r3, [r3]
   2a94c:	cmp	r3, #0
   2a950:	beq	2a998 <crc32@@Base+0x11250>
   2a954:	ldr	r3, [r0]
   2a958:	ldr	r2, [r0, #8]
   2a95c:	cmp	r3, #0
   2a960:	beq	2a980 <crc32@@Base+0x11238>
   2a964:	cmp	r2, #0
   2a968:	bne	2a978 <crc32@@Base+0x11230>
   2a96c:	ldr	r3, [r0, #16]
   2a970:	cmp	r3, #0
   2a974:	beq	2a988 <crc32@@Base+0x11240>
   2a978:	mov	r0, #1
   2a97c:	bx	lr
   2a980:	cmp	r2, #0
   2a984:	bne	2a96c <crc32@@Base+0x11224>
   2a988:	ldr	r0, [r0, #28]
   2a98c:	adds	r0, r0, #0
   2a990:	movne	r0, #1
   2a994:	bx	lr
   2a998:	movw	r1, #65044	; 0xfe14
   2a99c:	movt	r1, #4
   2a9a0:	ldr	r3, [r0, #80]	; 0x50
   2a9a4:	movw	r2, #48992	; 0xbf60
   2a9a8:	push	{r4, lr}
   2a9ac:	movt	r2, #3
   2a9b0:	ldr	r0, [r1]
   2a9b4:	mov	r1, #1
   2a9b8:	bl	122b4 <__fprintf_chk@plt>
   2a9bc:	mvn	r0, #0
   2a9c0:	pop	{r4, pc}
   2a9c4:	mvn	r0, #0
   2a9c8:	bx	lr
   2a9cc:	push	{r4, r5, r6, r7, r8, lr}
   2a9d0:	movw	r4, #61168	; 0xeef0
   2a9d4:	movt	r4, #4
   2a9d8:	sub	sp, sp, #16
   2a9dc:	mov	r5, r0
   2a9e0:	mov	r8, r1
   2a9e4:	ldr	r3, [r4]
   2a9e8:	mov	r7, r2
   2a9ec:	str	r3, [sp, #12]
   2a9f0:	bl	1268c <__errno_location@plt>
   2a9f4:	mov	r3, #0
   2a9f8:	mov	r2, #16
   2a9fc:	add	r1, sp, #8
   2aa00:	mov	r6, r0
   2aa04:	mov	r0, r5
   2aa08:	str	r3, [r6]
   2aa0c:	bl	122cc <strtoul@plt>
   2aa10:	ldr	r3, [r6]
   2aa14:	cmp	r3, #0
   2aa18:	bne	2aa40 <crc32@@Base+0x112f8>
   2aa1c:	ldr	r3, [sp, #8]
   2aa20:	cmp	r3, r5
   2aa24:	beq	2aa40 <crc32@@Base+0x112f8>
   2aa28:	ldr	r2, [sp, #12]
   2aa2c:	ldr	r3, [r4]
   2aa30:	cmp	r2, r3
   2aa34:	bne	2aa70 <crc32@@Base+0x11328>
   2aa38:	add	sp, sp, #16
   2aa3c:	pop	{r4, r5, r6, r7, r8, pc}
   2aa40:	movw	r1, #65044	; 0xfe14
   2aa44:	movt	r1, #4
   2aa48:	str	r5, [sp, #4]
   2aa4c:	mov	r3, r8
   2aa50:	str	r7, [sp]
   2aa54:	movw	r2, #25452	; 0x636c
   2aa58:	ldr	r0, [r1]
   2aa5c:	movt	r2, #3
   2aa60:	mov	r1, #1
   2aa64:	bl	122b4 <__fprintf_chk@plt>
   2aa68:	mov	r0, #1
   2aa6c:	bl	121f4 <exit@plt>
   2aa70:	bl	12494 <__stack_chk_fail@plt>
   2aa74:	movw	r2, #61168	; 0xeef0
   2aa78:	movt	r2, #4
   2aa7c:	ldr	ip, [r3, #64]	; 0x40
   2aa80:	movw	r1, #49448	; 0xc128
   2aa84:	ldr	r3, [r2]
   2aa88:	movt	r1, #3
   2aa8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aa90:	sub	sp, sp, #52	; 0x34
   2aa94:	mov	r9, r0
   2aa98:	mov	r0, ip
   2aa9c:	str	r2, [sp, #20]
   2aaa0:	mov	r2, #0
   2aaa4:	str	r3, [sp, #44]	; 0x2c
   2aaa8:	str	r2, [sp, #28]
   2aaac:	str	ip, [sp, #12]
   2aab0:	bl	1232c <fopen@plt>
   2aab4:	subs	r3, r0, #0
   2aab8:	str	r3, [sp, #8]
   2aabc:	addne	r1, r9, #2048	; 0x800
   2aac0:	movne	r3, r9
   2aac4:	mvnne	r2, #0
   2aac8:	beq	2ae80 <crc32@@Base+0x11738>
   2aacc:	strb	r2, [r3], #1
   2aad0:	cmp	r3, r1
   2aad4:	bne	2aacc <crc32@@Base+0x11384>
   2aad8:	movw	r8, #64520	; 0xfc08
   2aadc:	movw	fp, #25384	; 0x6328
   2aae0:	movw	r5, #25388	; 0x632c
   2aae4:	movt	r8, #4
   2aae8:	movt	fp, #3
   2aaec:	movt	r5, #3
   2aaf0:	mov	r7, #0
   2aaf4:	mov	r3, #60672	; 0xed00
   2aaf8:	movt	r3, #41388	; 0xa1ac
   2aafc:	str	r3, [sp, #16]
   2ab00:	ldr	r3, [sp, #8]
   2ab04:	mov	r2, #10
   2ab08:	add	r1, sp, #40	; 0x28
   2ab0c:	add	r0, sp, #28
   2ab10:	bl	12134 <__getdelim@plt>
   2ab14:	cmp	r0, #0
   2ab18:	ble	2ae18 <crc32@@Base+0x116d0>
   2ab1c:	add	r2, sp, #32
   2ab20:	mov	r1, fp
   2ab24:	ldr	r0, [sp, #28]
   2ab28:	add	r7, r7, #1
   2ab2c:	bl	12224 <__strtok_r@plt>
   2ab30:	cmp	r0, #0
   2ab34:	beq	2ab00 <crc32@@Base+0x113b8>
   2ab38:	mov	sl, #0
   2ab3c:	str	r0, [sp, #28]
   2ab40:	mov	r6, sl
   2ab44:	add	r2, sp, #36	; 0x24
   2ab48:	mov	r1, r5
   2ab4c:	bl	12224 <__strtok_r@plt>
   2ab50:	subs	r4, r0, #0
   2ab54:	beq	2ab00 <crc32@@Base+0x113b8>
   2ab58:	ldrb	r3, [r4]
   2ab5c:	cmp	r3, #35	; 0x23
   2ab60:	beq	2ab00 <crc32@@Base+0x113b8>
   2ab64:	cmp	r6, #0
   2ab68:	bne	2ae3c <crc32@@Base+0x116f4>
   2ab6c:	movw	r1, #49076	; 0xbfb4
   2ab70:	mov	r2, r4
   2ab74:	movt	r1, #3
   2ab78:	mov	r0, r8
   2ab7c:	bl	1a5c8 <crc32@@Base+0xe80>
   2ab80:	subs	sl, r0, #0
   2ab84:	blt	2ae50 <crc32@@Base+0x11708>
   2ab88:	mov	r0, r6
   2ab8c:	add	r2, sp, #36	; 0x24
   2ab90:	mov	r1, r5
   2ab94:	str	r6, [sp, #28]
   2ab98:	bl	12224 <__strtok_r@plt>
   2ab9c:	subs	r4, r0, #0
   2aba0:	beq	2ab00 <crc32@@Base+0x113b8>
   2aba4:	ldrb	r3, [r4]
   2aba8:	cmp	r3, #35	; 0x23
   2abac:	beq	2ab00 <crc32@@Base+0x113b8>
   2abb0:	sub	r3, sl, #1
   2abb4:	cmp	r3, #5
   2abb8:	ldrls	pc, [pc, r3, lsl #2]
   2abbc:	b	2ade4 <crc32@@Base+0x1169c>
   2abc0:	andeq	sl, r2, ip, ror ip
   2abc4:	andeq	sl, r2, r4, ror sp
   2abc8:	andeq	sl, r2, ip, lsr sp
   2abcc:	andeq	sl, r2, ip, lsr #27
   2abd0:	ldrdeq	sl, [r2], -r8
   2abd4:	andeq	sl, r2, r4, lsl #26
   2abd8:	mov	r0, r4
   2abdc:	mov	r2, r7
   2abe0:	ldr	r1, [sp, #12]
   2abe4:	mov	r4, #0
   2abe8:	bl	2a9cc <crc32@@Base+0x11284>
   2abec:	add	r2, sp, #36	; 0x24
   2abf0:	mov	r1, r5
   2abf4:	str	r4, [sp, #28]
   2abf8:	str	r0, [r9, #16]
   2abfc:	mov	r0, r4
   2ac00:	bl	12224 <__strtok_r@plt>
   2ac04:	cmp	r0, #0
   2ac08:	beq	2ab00 <crc32@@Base+0x113b8>
   2ac0c:	ldrb	r3, [r0]
   2ac10:	cmp	r3, #35	; 0x23
   2ac14:	beq	2ab00 <crc32@@Base+0x113b8>
   2ac18:	add	r2, sp, #36	; 0x24
   2ac1c:	mov	r1, r5
   2ac20:	mov	r0, r4
   2ac24:	str	r4, [sp, #28]
   2ac28:	bl	12224 <__strtok_r@plt>
   2ac2c:	cmp	r0, #0
   2ac30:	beq	2ab00 <crc32@@Base+0x113b8>
   2ac34:	ldrb	r3, [r0]
   2ac38:	cmp	r3, #35	; 0x23
   2ac3c:	beq	2ab00 <crc32@@Base+0x113b8>
   2ac40:	mov	r0, r4
   2ac44:	add	r2, sp, #36	; 0x24
   2ac48:	mov	r1, r5
   2ac4c:	str	r4, [sp, #28]
   2ac50:	bl	12224 <__strtok_r@plt>
   2ac54:	cmp	r0, #0
   2ac58:	beq	2ab00 <crc32@@Base+0x113b8>
   2ac5c:	ldrb	r3, [r0]
   2ac60:	cmp	r3, #35	; 0x23
   2ac64:	beq	2ab00 <crc32@@Base+0x113b8>
   2ac68:	mov	r6, #4
   2ac6c:	mov	r0, #0
   2ac70:	add	r6, r6, #1
   2ac74:	str	r0, [sp, #28]
   2ac78:	b	2ab44 <crc32@@Base+0x113fc>
   2ac7c:	movw	r1, #49096	; 0xbfc8
   2ac80:	mov	r2, r4
   2ac84:	movt	r1, #3
   2ac88:	ldr	r0, [pc, #588]	; 2aedc <crc32@@Base+0x11794>
   2ac8c:	bl	1a5c8 <crc32@@Base+0xe80>
   2ac90:	cmn	r0, #1
   2ac94:	str	r0, [r9]
   2ac98:	beq	2aeac <crc32@@Base+0x11764>
   2ac9c:	ldr	r3, [r8, #108]	; 0x6c
   2aca0:	mov	r1, r5
   2aca4:	ldr	r2, [sp, #16]
   2aca8:	cmp	r3, #1
   2acac:	mov	r3, #0
   2acb0:	add	r0, r0, r2
   2acb4:	add	r2, sp, #36	; 0x24
   2acb8:	str	r0, [r9]
   2acbc:	mov	r0, r3
   2acc0:	bne	2ae48 <crc32@@Base+0x11700>
   2acc4:	str	r3, [sp, #28]
   2acc8:	bl	12224 <__strtok_r@plt>
   2accc:	cmp	r0, #0
   2acd0:	beq	2ab00 <crc32@@Base+0x113b8>
   2acd4:	ldrb	r3, [r0]
   2acd8:	cmp	r3, #35	; 0x23
   2acdc:	beq	2ab00 <crc32@@Base+0x113b8>
   2ace0:	mov	r4, #0
   2ace4:	add	r2, sp, #36	; 0x24
   2ace8:	mov	r0, r4
   2acec:	mov	r1, r5
   2acf0:	str	r4, [sp, #28]
   2acf4:	bl	12224 <__strtok_r@plt>
   2acf8:	cmp	r0, #0
   2acfc:	bne	2ac34 <crc32@@Base+0x114ec>
   2ad00:	b	2ab00 <crc32@@Base+0x113b8>
   2ad04:	mov	r0, r4
   2ad08:	mov	r2, r7
   2ad0c:	ldr	r1, [sp, #12]
   2ad10:	mov	r4, #0
   2ad14:	bl	2a9cc <crc32@@Base+0x11284>
   2ad18:	add	r2, sp, #36	; 0x24
   2ad1c:	mov	r1, r5
   2ad20:	str	r4, [sp, #28]
   2ad24:	str	r0, [r9, #20]
   2ad28:	mov	r0, r4
   2ad2c:	bl	12224 <__strtok_r@plt>
   2ad30:	cmp	r0, #0
   2ad34:	bne	2ac0c <crc32@@Base+0x114c4>
   2ad38:	b	2ab00 <crc32@@Base+0x113b8>
   2ad3c:	mov	r0, r4
   2ad40:	mov	r2, r7
   2ad44:	ldr	r1, [sp, #12]
   2ad48:	mov	r4, #0
   2ad4c:	bl	2a9cc <crc32@@Base+0x11284>
   2ad50:	add	r2, sp, #36	; 0x24
   2ad54:	mov	r1, r5
   2ad58:	str	r4, [sp, #28]
   2ad5c:	str	r0, [r9, #8]
   2ad60:	mov	r0, r4
   2ad64:	bl	12224 <__strtok_r@plt>
   2ad68:	cmp	r0, #0
   2ad6c:	bne	2ac0c <crc32@@Base+0x114c4>
   2ad70:	b	2ab00 <crc32@@Base+0x113b8>
   2ad74:	mov	r0, r4
   2ad78:	mov	r2, r7
   2ad7c:	ldr	r1, [sp, #12]
   2ad80:	mov	r4, #0
   2ad84:	bl	2a9cc <crc32@@Base+0x11284>
   2ad88:	add	r2, sp, #36	; 0x24
   2ad8c:	mov	r1, r5
   2ad90:	str	r4, [sp, #28]
   2ad94:	str	r0, [r9, #4]
   2ad98:	mov	r0, r4
   2ad9c:	bl	12224 <__strtok_r@plt>
   2ada0:	cmp	r0, #0
   2ada4:	bne	2ac0c <crc32@@Base+0x114c4>
   2ada8:	b	2ab00 <crc32@@Base+0x113b8>
   2adac:	mov	r0, r4
   2adb0:	mov	r2, r7
   2adb4:	ldr	r1, [sp, #12]
   2adb8:	mov	r4, #0
   2adbc:	bl	2a9cc <crc32@@Base+0x11284>
   2adc0:	add	r2, sp, #36	; 0x24
   2adc4:	mov	r1, r5
   2adc8:	str	r4, [sp, #28]
   2adcc:	str	r0, [r9, #12]
   2add0:	mov	r0, r4
   2add4:	bl	12224 <__strtok_r@plt>
   2add8:	cmp	r0, #0
   2addc:	bne	2ac0c <crc32@@Base+0x114c4>
   2ade0:	b	2ab00 <crc32@@Base+0x113b8>
   2ade4:	mov	r3, #0
   2ade8:	add	r2, sp, #36	; 0x24
   2adec:	mov	r0, r3
   2adf0:	mov	r1, r5
   2adf4:	str	r3, [sp, #28]
   2adf8:	bl	12224 <__strtok_r@plt>
   2adfc:	cmp	r0, #0
   2ae00:	beq	2ab00 <crc32@@Base+0x113b8>
   2ae04:	ldrb	r3, [r0]
   2ae08:	cmp	r3, #35	; 0x23
   2ae0c:	beq	2ab00 <crc32@@Base+0x113b8>
   2ae10:	mov	r6, #2
   2ae14:	b	2ac6c <crc32@@Base+0x11524>
   2ae18:	ldr	r0, [sp, #8]
   2ae1c:	bl	125fc <fclose@plt>
   2ae20:	ldr	r3, [sp, #20]
   2ae24:	ldr	r2, [sp, #44]	; 0x2c
   2ae28:	ldr	r3, [r3]
   2ae2c:	cmp	r2, r3
   2ae30:	bne	2aea8 <crc32@@Base+0x11760>
   2ae34:	add	sp, sp, #52	; 0x34
   2ae38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ae3c:	cmp	r6, #1
   2ae40:	bne	2ac6c <crc32@@Base+0x11524>
   2ae44:	b	2abb0 <crc32@@Base+0x11468>
   2ae48:	str	r3, [r8, #108]	; 0x6c
   2ae4c:	b	2acc4 <crc32@@Base+0x1157c>
   2ae50:	movw	r1, #65044	; 0xfe14
   2ae54:	movt	r1, #4
   2ae58:	str	r4, [sp, #4]
   2ae5c:	movw	r2, #25412	; 0x6344
   2ae60:	str	r7, [sp]
   2ae64:	movt	r2, #3
   2ae68:	ldr	r0, [r1]
   2ae6c:	mov	r1, #1
   2ae70:	ldr	r3, [sp, #12]
   2ae74:	bl	122b4 <__fprintf_chk@plt>
   2ae78:	mov	r0, #1
   2ae7c:	bl	121f4 <exit@plt>
   2ae80:	movw	r1, #65044	; 0xfe14
   2ae84:	movt	r1, #4
   2ae88:	ldr	r3, [sp, #12]
   2ae8c:	movw	r2, #37600	; 0x92e0
   2ae90:	ldr	r0, [r1]
   2ae94:	movt	r2, #3
   2ae98:	mov	r1, #1
   2ae9c:	bl	122b4 <__fprintf_chk@plt>
   2aea0:	mov	r0, #1
   2aea4:	bl	121f4 <exit@plt>
   2aea8:	bl	12494 <__stack_chk_fail@plt>
   2aeac:	movw	r1, #65044	; 0xfe14
   2aeb0:	movt	r1, #4
   2aeb4:	str	r4, [sp, #4]
   2aeb8:	movw	r2, #49124	; 0xbfe4
   2aebc:	str	r7, [sp]
   2aec0:	movt	r2, #3
   2aec4:	ldr	r0, [r1]
   2aec8:	mov	r1, #1
   2aecc:	ldr	r3, [sp, #12]
   2aed0:	bl	122b4 <__fprintf_chk@plt>
   2aed4:	mov	r0, #1
   2aed8:	bl	121f4 <exit@plt>
   2aedc:	andeq	pc, r4, ip, asr ip	; <UNPREDICTABLE>
   2aee0:	cmp	r1, #2240	; 0x8c0
   2aee4:	bcc	2af78 <crc32@@Base+0x11830>
   2aee8:	ldr	r3, [r0, #56]	; 0x38
   2aeec:	cmp	r3, #0
   2aef0:	bne	2af78 <crc32@@Base+0x11830>
   2aef4:	ldr	r3, [r0, #68]	; 0x44
   2aef8:	cmp	r3, #0
   2aefc:	bne	2af78 <crc32@@Base+0x11830>
   2af00:	ldr	r2, [r0, #32]
   2af04:	movw	r3, #21862	; 0x5566
   2af08:	movt	r3, #43673	; 0xaa99
   2af0c:	cmp	r2, r3
   2af10:	bne	2af78 <crc32@@Base+0x11830>
   2af14:	ldr	r2, [r0, #36]	; 0x24
   2af18:	movw	r3, #20056	; 0x4e58
   2af1c:	movt	r3, #22604	; 0x584c
   2af20:	cmp	r2, r3
   2af24:	bne	2af78 <crc32@@Base+0x11830>
   2af28:	ldr	ip, [r0, #44]	; 0x2c
   2af2c:	movw	r3, #41918	; 0xa3be
   2af30:	ldr	r2, [r0, #40]	; 0x28
   2af34:	movt	r3, #741	; 0x2e5
   2af38:	ldr	r1, [r0, #48]	; 0x30
   2af3c:	add	r2, r2, ip
   2af40:	ldr	ip, [r0, #60]	; 0x3c
   2af44:	push	{lr}		; (str lr, [sp, #-4]!)
   2af48:	add	r3, r2, r3
   2af4c:	ldr	lr, [r0, #52]	; 0x34
   2af50:	add	r3, r3, r1
   2af54:	ldr	r1, [r0, #64]	; 0x40
   2af58:	add	r3, r3, lr
   2af5c:	ldr	r2, [r0, #72]	; 0x48
   2af60:	add	r0, r3, ip
   2af64:	add	r0, r0, r1
   2af68:	mvn	r0, r0
   2af6c:	subs	r0, r2, r0
   2af70:	mvnne	r0, #0
   2af74:	pop	{pc}		; (ldr pc, [sp], #4)
   2af78:	mvn	r0, #0
   2af7c:	bx	lr
   2af80:	subs	r0, r0, #26
   2af84:	movne	r0, #1
   2af88:	bx	lr
   2af8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2af90:	movw	r5, #61168	; 0xeef0
   2af94:	movt	r5, #4
   2af98:	sub	sp, sp, #104	; 0x68
   2af9c:	subs	r4, r0, #0
   2afa0:	ldr	r2, [r5]
   2afa4:	str	r2, [sp, #100]	; 0x64
   2afa8:	beq	2b020 <crc32@@Base+0x118d8>
   2afac:	add	ip, r4, #2048	; 0x800
   2afb0:	mov	r2, r4
   2afb4:	mvn	r0, #0
   2afb8:	movw	lr, #21862	; 0x5566
   2afbc:	movt	lr, #43673	; 0xaa99
   2afc0:	str	lr, [r4, #32]
   2afc4:	movw	lr, #20056	; 0x4e58
   2afc8:	movt	lr, #22604	; 0x584c
   2afcc:	str	lr, [r4, #36]	; 0x24
   2afd0:	movw	lr, #65534	; 0xfffe
   2afd4:	movt	lr, #60159	; 0xeaff
   2afd8:	str	lr, [r4]
   2afdc:	str	lr, [r4, #4]
   2afe0:	str	lr, [r4, #8]
   2afe4:	str	lr, [r4, #12]
   2afe8:	str	lr, [r4, #16]
   2afec:	str	lr, [r4, #20]
   2aff0:	str	lr, [r4, #24]
   2aff4:	str	lr, [r4, #28]
   2aff8:	mov	lr, #0
   2affc:	str	lr, [r4, #40]	; 0x28
   2b000:	str	r0, [r2, #160]	; 0xa0
   2b004:	add	r2, r2, #8
   2b008:	str	r0, [r2, #156]	; 0x9c
   2b00c:	cmp	r2, ip
   2b010:	bne	2b000 <crc32@@Base+0x118b8>
   2b014:	mov	r2, #0
   2b018:	str	r2, [r4, #56]	; 0x38
   2b01c:	str	r2, [r4, #68]	; 0x44
   2b020:	ldr	ip, [r3, #4]
   2b024:	mov	r0, #2240	; 0x8c0
   2b028:	ldr	r2, [r1, #44]	; 0x2c
   2b02c:	mov	r1, #0
   2b030:	cmp	ip, #0
   2b034:	str	r1, [r4, #60]	; 0x3c
   2b038:	ldr	r6, [r3, #68]	; 0x44
   2b03c:	ldrne	r1, [r3, #60]	; 0x3c
   2b040:	str	r0, [r4, #48]	; 0x30
   2b044:	str	r2, [r4, #52]	; 0x34
   2b048:	strne	r1, [r4, #60]	; 0x3c
   2b04c:	str	r2, [r4, #64]	; 0x40
   2b050:	ldrb	r3, [r6]
   2b054:	cmp	r3, #0
   2b058:	moveq	r0, r2
   2b05c:	moveq	lr, #2240	; 0x8c0
   2b060:	bne	2b0c4 <crc32@@Base+0x1197c>
   2b064:	ldr	ip, [r4, #36]	; 0x24
   2b068:	ldr	r3, [r4, #32]
   2b06c:	ldr	r1, [r4, #40]	; 0x28
   2b070:	add	r3, r3, ip
   2b074:	ldr	ip, [r4, #44]	; 0x2c
   2b078:	add	r3, r3, r1
   2b07c:	ldr	r1, [r4, #56]	; 0x38
   2b080:	add	r3, r3, ip
   2b084:	ldr	ip, [r4, #60]	; 0x3c
   2b088:	add	r3, r3, r1
   2b08c:	ldr	r1, [r4, #68]	; 0x44
   2b090:	add	r3, r3, ip
   2b094:	ldr	ip, [sp, #100]	; 0x64
   2b098:	add	r3, r3, r1
   2b09c:	ldr	r1, [r5]
   2b0a0:	add	r3, r3, lr
   2b0a4:	add	r3, r3, r2
   2b0a8:	cmp	ip, r1
   2b0ac:	add	r3, r3, r0
   2b0b0:	mvn	r3, r3
   2b0b4:	str	r3, [r4, #72]	; 0x48
   2b0b8:	bne	2b1cc <crc32@@Base+0x11a84>
   2b0bc:	add	sp, sp, #104	; 0x68
   2b0c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2b0c4:	movw	r1, #49448	; 0xc128
   2b0c8:	mov	r0, r6
   2b0cc:	movt	r1, #3
   2b0d0:	bl	1232c <fopen@plt>
   2b0d4:	subs	r7, r0, #0
   2b0d8:	beq	2b1a4 <crc32@@Base+0x11a5c>
   2b0dc:	bl	12488 <fileno@plt>
   2b0e0:	add	r2, sp, #8
   2b0e4:	mov	r1, r0
   2b0e8:	mov	r0, #3
   2b0ec:	bl	12554 <__fxstat@plt>
   2b0f0:	cmp	r0, #0
   2b0f4:	bne	2b18c <crc32@@Base+0x11a44>
   2b0f8:	ldr	r3, [sp, #24]
   2b0fc:	and	r3, r3, #61440	; 0xf000
   2b100:	cmp	r3, #32768	; 0x8000
   2b104:	bne	2b18c <crc32@@Base+0x11a44>
   2b108:	movw	sl, #49488	; 0xc150
   2b10c:	movw	r9, #49496	; 0xc158
   2b110:	movt	sl, #3
   2b114:	movt	r9, #3
   2b118:	mov	r8, sp
   2b11c:	mov	r6, r0
   2b120:	add	r3, sp, #4
   2b124:	mov	r1, sl
   2b128:	mov	r2, r8
   2b12c:	mov	r0, r7
   2b130:	bl	12074 <fscanf@plt>
   2b134:	cmp	r0, #2
   2b138:	addeq	r3, r6, #20
   2b13c:	addeq	r6, r6, #1
   2b140:	ldmeq	r8, {r0, r1}
   2b144:	addeq	r3, r4, r3, lsl #3
   2b148:	stmeq	r3, {r0, r1}
   2b14c:	mov	r1, r9
   2b150:	mov	r0, r7
   2b154:	bl	12074 <fscanf@plt>
   2b158:	cmp	r6, #255	; 0xff
   2b15c:	movhi	r3, #0
   2b160:	movls	r3, #1
   2b164:	cmn	r0, #1
   2b168:	moveq	r3, #0
   2b16c:	cmp	r3, #0
   2b170:	bne	2b120 <crc32@@Base+0x119d8>
   2b174:	mov	r0, r7
   2b178:	bl	125fc <fclose@plt>
   2b17c:	ldr	lr, [r4, #48]	; 0x30
   2b180:	ldr	r2, [r4, #52]	; 0x34
   2b184:	ldr	r0, [r4, #64]	; 0x40
   2b188:	b	2b064 <crc32@@Base+0x1191c>
   2b18c:	mov	r0, r7
   2b190:	bl	125fc <fclose@plt>
   2b194:	ldr	lr, [r4, #48]	; 0x30
   2b198:	ldr	r2, [r4, #52]	; 0x34
   2b19c:	ldr	r0, [r4, #64]	; 0x40
   2b1a0:	b	2b064 <crc32@@Base+0x1191c>
   2b1a4:	movw	r1, #65044	; 0xfe14
   2b1a8:	movt	r1, #4
   2b1ac:	mov	r3, r6
   2b1b0:	movw	r2, #49452	; 0xc12c
   2b1b4:	ldr	r0, [r1]
   2b1b8:	movt	r2, #3
   2b1bc:	mov	r1, #1
   2b1c0:	bl	122b4 <__fprintf_chk@plt>
   2b1c4:	mov	r0, #1
   2b1c8:	bl	121f4 <exit@plt>
   2b1cc:	bl	12494 <__stack_chk_fail@plt>
   2b1d0:	push	{r4, r5, r6, r7, r8, lr}
   2b1d4:	mov	r4, r0
   2b1d8:	movw	r0, #49504	; 0xc160
   2b1dc:	movt	r0, #3
   2b1e0:	bl	1226c <puts@plt>
   2b1e4:	ldr	r2, [r4, #48]	; 0x30
   2b1e8:	movw	r1, #49552	; 0xc190
   2b1ec:	mov	r0, #1
   2b1f0:	movt	r1, #3
   2b1f4:	movw	r8, #65534	; 0xfffe
   2b1f8:	bl	12770 <__printf_chk@plt>
   2b1fc:	ldr	r3, [r4, #64]	; 0x40
   2b200:	ldr	r2, [r4, #52]	; 0x34
   2b204:	movw	r1, #49576	; 0xc1a8
   2b208:	mov	r0, #1
   2b20c:	movt	r1, #3
   2b210:	bl	12770 <__printf_chk@plt>
   2b214:	ldr	r2, [r4, #60]	; 0x3c
   2b218:	movw	r1, #47404	; 0xb92c
   2b21c:	mov	r0, #1
   2b220:	movt	r1, #3
   2b224:	movw	r7, #49648	; 0xc1f0
   2b228:	bl	12770 <__printf_chk@plt>
   2b22c:	ldr	r2, [r4, #44]	; 0x2c
   2b230:	movw	r1, #49624	; 0xc1d8
   2b234:	mov	r0, #1
   2b238:	movt	r1, #3
   2b23c:	sub	r6, r4, #4
   2b240:	bl	12770 <__printf_chk@plt>
   2b244:	ldr	r2, [r4, #72]	; 0x48
   2b248:	movw	r1, #47452	; 0xb95c
   2b24c:	mov	r0, #1
   2b250:	movt	r1, #3
   2b254:	movt	r8, #60159	; 0xeaff
   2b258:	bl	12770 <__printf_chk@plt>
   2b25c:	movt	r7, #3
   2b260:	mov	r5, #0
   2b264:	ldr	r3, [r6, #4]!
   2b268:	mov	r2, r5
   2b26c:	mov	r0, #1
   2b270:	mov	r1, r7
   2b274:	cmp	r3, r8
   2b278:	add	r5, r5, r0
   2b27c:	beq	2b284 <crc32@@Base+0x11b3c>
   2b280:	bl	12770 <__printf_chk@plt>
   2b284:	cmp	r5, #8
   2b288:	bne	2b264 <crc32@@Base+0x11b1c>
   2b28c:	movw	r6, #49728	; 0xc240
   2b290:	movw	r7, #49696	; 0xc220
   2b294:	movt	r6, #3
   2b298:	movt	r7, #3
   2b29c:	mov	r5, #0
   2b2a0:	b	2b2b8 <crc32@@Base+0x11b70>
   2b2a4:	ldr	r3, [r4, #164]	; 0xa4
   2b2a8:	bl	12770 <__printf_chk@plt>
   2b2ac:	cmp	r5, #256	; 0x100
   2b2b0:	popeq	{r4, r5, r6, r7, r8, pc}
   2b2b4:	add	r4, r4, #8
   2b2b8:	ldr	r2, [r4, #160]	; 0xa0
   2b2bc:	add	r5, r5, #1
   2b2c0:	mov	r1, r6
   2b2c4:	mov	r0, #1
   2b2c8:	cmn	r2, #1
   2b2cc:	popeq	{r4, r5, r6, r7, r8, pc}
   2b2d0:	cmp	r5, r0
   2b2d4:	bne	2b2a4 <crc32@@Base+0x11b5c>
   2b2d8:	mov	r0, r7
   2b2dc:	bl	1226c <puts@plt>
   2b2e0:	ldrd	r2, [r4, #160]	; 0xa0
   2b2e4:	mov	r1, r6
   2b2e8:	mov	r0, r5
   2b2ec:	bl	12770 <__printf_chk@plt>
   2b2f0:	b	2b2b4 <crc32@@Base+0x11b6c>
   2b2f4:	cmp	r0, #0
   2b2f8:	bxeq	lr
   2b2fc:	ldr	r3, [r0, #56]	; 0x38
   2b300:	push	{r4, lr}
   2b304:	cmp	r3, #0
   2b308:	bne	2b368 <crc32@@Base+0x11c20>
   2b30c:	ldr	r3, [r0, #4]
   2b310:	cmp	r3, #0
   2b314:	beq	2b324 <crc32@@Base+0x11bdc>
   2b318:	ldr	r3, [r0, #60]	; 0x3c
   2b31c:	tst	r3, #63	; 0x3f
   2b320:	bne	2b340 <crc32@@Base+0x11bf8>
   2b324:	ldr	r3, [r0, #16]
   2b328:	cmp	r3, #0
   2b32c:	ldreq	r0, [r0]
   2b330:	clzeq	r0, r0
   2b334:	lsreq	r0, r0, #5
   2b338:	movne	r0, #0
   2b33c:	pop	{r4, pc}
   2b340:	movw	r3, #65044	; 0xfe14
   2b344:	movt	r3, #4
   2b348:	mov	r2, #58	; 0x3a
   2b34c:	mov	r1, #1
   2b350:	ldr	r3, [r3]
   2b354:	movw	r0, #49796	; 0xc284
   2b358:	movt	r0, #3
   2b35c:	bl	12578 <fwrite@plt>
   2b360:	mvn	r0, #0
   2b364:	pop	{r4, pc}
   2b368:	movw	r3, #65044	; 0xfe14
   2b36c:	movt	r3, #4
   2b370:	mov	r2, #41	; 0x29
   2b374:	mov	r1, #1
   2b378:	ldr	r3, [r3]
   2b37c:	movw	r0, #49752	; 0xc258
   2b380:	movt	r0, #3
   2b384:	bl	12578 <fwrite@plt>
   2b388:	mvn	r0, #0
   2b38c:	pop	{r4, pc}
   2b390:	cmp	r1, #2496	; 0x9c0
   2b394:	bcc	2b420 <crc32@@Base+0x11cd8>
   2b398:	ldr	r2, [r0, #32]
   2b39c:	movw	r3, #21862	; 0x5566
   2b3a0:	movt	r3, #43673	; 0xaa99
   2b3a4:	cmp	r2, r3
   2b3a8:	bne	2b420 <crc32@@Base+0x11cd8>
   2b3ac:	ldr	r2, [r0, #36]	; 0x24
   2b3b0:	movw	r3, #20056	; 0x4e58
   2b3b4:	movt	r3, #22604	; 0x584c
   2b3b8:	cmp	r2, r3
   2b3bc:	bne	2b420 <crc32@@Base+0x11cd8>
   2b3c0:	ldr	r1, [r0, #44]	; 0x2c
   2b3c4:	movw	r3, #41918	; 0xa3be
   2b3c8:	ldr	r2, [r0, #40]	; 0x28
   2b3cc:	movt	r3, #741	; 0x2e5
   2b3d0:	push	{lr}		; (str lr, [sp, #-4]!)
   2b3d4:	add	r2, r2, r1
   2b3d8:	ldr	lr, [r0, #48]	; 0x30
   2b3dc:	add	r3, r2, r3
   2b3e0:	ldr	ip, [r0, #52]	; 0x34
   2b3e4:	ldr	r1, [r0, #56]	; 0x38
   2b3e8:	add	r3, r3, lr
   2b3ec:	ldr	r2, [r0, #60]	; 0x3c
   2b3f0:	add	r3, r3, ip
   2b3f4:	add	r3, r3, r1
   2b3f8:	ldr	ip, [r0, #64]	; 0x40
   2b3fc:	ldr	r1, [r0, #68]	; 0x44
   2b400:	add	r3, r3, r2
   2b404:	ldr	r2, [r0, #72]	; 0x48
   2b408:	add	r0, r3, ip
   2b40c:	add	r0, r0, r1
   2b410:	mvn	r0, r0
   2b414:	subs	r0, r2, r0
   2b418:	mvnne	r0, #0
   2b41c:	pop	{pc}		; (ldr pc, [sp], #4)
   2b420:	mvn	r0, #0
   2b424:	bx	lr
   2b428:	subs	r0, r0, #27
   2b42c:	movne	r0, #1
   2b430:	bx	lr
   2b434:	push	{r4, r5, r6, r7, r8, lr}
   2b438:	mov	r4, r0
   2b43c:	bl	12524 <ftell@plt>
   2b440:	subs	r5, r0, #0
   2b444:	blt	2b490 <crc32@@Base+0x11d48>
   2b448:	mov	r2, #2
   2b44c:	mov	r1, #0
   2b450:	mov	r0, r4
   2b454:	bl	12158 <fseek@plt>
   2b458:	subs	r7, r0, #0
   2b45c:	bne	2b520 <crc32@@Base+0x11dd8>
   2b460:	mov	r0, r4
   2b464:	bl	12524 <ftell@plt>
   2b468:	subs	r6, r0, #0
   2b46c:	blt	2b4f0 <crc32@@Base+0x11da8>
   2b470:	mov	r2, r7
   2b474:	mov	r1, r5
   2b478:	mov	r0, r4
   2b47c:	bl	12158 <fseek@plt>
   2b480:	cmp	r0, #0
   2b484:	bne	2b4c0 <crc32@@Base+0x11d78>
   2b488:	mov	r0, r6
   2b48c:	pop	{r4, r5, r6, r7, r8, pc}
   2b490:	movw	r3, #65044	; 0xfe14
   2b494:	movt	r3, #4
   2b498:	mov	r2, #20
   2b49c:	mov	r1, #1
   2b4a0:	ldr	r3, [r3]
   2b4a4:	movw	r0, #49984	; 0xc340
   2b4a8:	movt	r0, #3
   2b4ac:	bl	12578 <fwrite@plt>
   2b4b0:	mov	r0, r4
   2b4b4:	bl	125fc <fclose@plt>
   2b4b8:	mov	r0, #2
   2b4bc:	bl	121f4 <exit@plt>
   2b4c0:	movw	r1, #65044	; 0xfe14
   2b4c4:	movt	r1, #4
   2b4c8:	mov	r3, r5
   2b4cc:	movw	r2, #50036	; 0xc374
   2b4d0:	ldr	r0, [r1]
   2b4d4:	movt	r2, #3
   2b4d8:	mov	r1, #1
   2b4dc:	bl	122b4 <__fprintf_chk@plt>
   2b4e0:	mov	r0, r4
   2b4e4:	bl	125fc <fclose@plt>
   2b4e8:	mov	r0, #3
   2b4ec:	bl	121f4 <exit@plt>
   2b4f0:	movw	r3, #65044	; 0xfe14
   2b4f4:	movt	r3, #4
   2b4f8:	mov	r2, #20
   2b4fc:	mov	r1, #1
   2b500:	ldr	r3, [r3]
   2b504:	movw	r0, #49984	; 0xc340
   2b508:	movt	r0, #3
   2b50c:	bl	12578 <fwrite@plt>
   2b510:	mov	r0, r4
   2b514:	bl	125fc <fclose@plt>
   2b518:	mov	r0, #4
   2b51c:	bl	121f4 <exit@plt>
   2b520:	movw	r3, #65044	; 0xfe14
   2b524:	movt	r3, #4
   2b528:	mov	r2, #24
   2b52c:	mov	r1, #1
   2b530:	ldr	r3, [r3]
   2b534:	movw	r0, #50008	; 0xc358
   2b538:	movt	r0, #3
   2b53c:	bl	12578 <fwrite@plt>
   2b540:	mov	r0, r4
   2b544:	bl	125fc <fclose@plt>
   2b548:	mov	r0, #3
   2b54c:	bl	121f4 <exit@plt>
   2b550:	push	{r4, r5, r6, r7, r8, lr}
   2b554:	movw	r4, #61168	; 0xeef0
   2b558:	ldr	r5, [r0, #64]	; 0x40
   2b55c:	movt	r4, #4
   2b560:	mov	r3, #2496	; 0x9c0
   2b564:	movw	r6, #29368	; 0x72b8
   2b568:	str	r3, [r1, #4]
   2b56c:	movt	r6, #30
   2b570:	str	r6, [r1, #8]
   2b574:	sub	sp, sp, #96	; 0x60
   2b578:	ldrb	r0, [r5]
   2b57c:	ldr	r3, [r4]
   2b580:	cmp	r0, #0
   2b584:	str	r3, [sp, #92]	; 0x5c
   2b588:	moveq	r5, r0
   2b58c:	bne	2b5ac <crc32@@Base+0x11e64>
   2b590:	ldr	r2, [sp, #92]	; 0x5c
   2b594:	mov	r0, r5
   2b598:	ldr	r3, [r4]
   2b59c:	cmp	r2, r3
   2b5a0:	bne	2b674 <crc32@@Base+0x11f2c>
   2b5a4:	add	sp, sp, #96	; 0x60
   2b5a8:	pop	{r4, r5, r6, r7, r8, pc}
   2b5ac:	mov	r7, r1
   2b5b0:	mov	r0, r5
   2b5b4:	movw	r1, #49448	; 0xc128
   2b5b8:	movt	r1, #3
   2b5bc:	bl	1232c <fopen@plt>
   2b5c0:	cmp	r0, #0
   2b5c4:	mov	r8, r0
   2b5c8:	str	r0, [r6, #2496]	; 0x9c0
   2b5cc:	beq	2b628 <crc32@@Base+0x11ee0>
   2b5d0:	bl	12488 <fileno@plt>
   2b5d4:	mov	r2, sp
   2b5d8:	mov	r1, r0
   2b5dc:	mov	r0, #3
   2b5e0:	bl	12554 <__fxstat@plt>
   2b5e4:	subs	r5, r0, #0
   2b5e8:	bne	2b610 <crc32@@Base+0x11ec8>
   2b5ec:	ldr	r3, [sp, #16]
   2b5f0:	mov	r0, r8
   2b5f4:	and	r3, r3, #61440	; 0xf000
   2b5f8:	cmp	r3, #32768	; 0x8000
   2b5fc:	beq	2b650 <crc32@@Base+0x11f08>
   2b600:	bl	125fc <fclose@plt>
   2b604:	str	r5, [r6, #2496]	; 0x9c0
   2b608:	mov	r5, #1
   2b60c:	b	2b590 <crc32@@Base+0x11e48>
   2b610:	mov	r0, r8
   2b614:	mov	r5, #1
   2b618:	bl	125fc <fclose@plt>
   2b61c:	mov	r3, #0
   2b620:	str	r3, [r6, #2496]	; 0x9c0
   2b624:	b	2b590 <crc32@@Base+0x11e48>
   2b628:	movw	r1, #65044	; 0xfe14
   2b62c:	movt	r1, #4
   2b630:	mov	r3, r5
   2b634:	movw	r2, #50068	; 0xc394
   2b638:	ldr	r0, [r1]
   2b63c:	movt	r2, #3
   2b640:	mov	r1, #1
   2b644:	mov	r5, r1
   2b648:	bl	122b4 <__fprintf_chk@plt>
   2b64c:	b	2b590 <crc32@@Base+0x11e48>
   2b650:	bl	2b434 <crc32@@Base+0x11cec>
   2b654:	ldr	r1, [r7, #4]
   2b658:	add	r1, r0, r1
   2b65c:	mov	r0, #1
   2b660:	str	r1, [r7, #4]
   2b664:	bl	12518 <calloc@plt>
   2b668:	str	r0, [r6, #2500]	; 0x9c4
   2b66c:	str	r0, [r7, #8]
   2b670:	b	2b590 <crc32@@Base+0x11e48>
   2b674:	bl	12494 <__stack_chk_fail@plt>
   2b678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b67c:	movw	sl, #61168	; 0xeef0
   2b680:	movt	sl, #4
   2b684:	sub	sp, sp, #68	; 0x44
   2b688:	mov	r6, r0
   2b68c:	movw	r0, #50104	; 0xc3b8
   2b690:	ldr	r3, [sl]
   2b694:	movt	r0, #3
   2b698:	str	r3, [sp, #60]	; 0x3c
   2b69c:	bl	1226c <puts@plt>
   2b6a0:	ldr	r2, [r6, #48]	; 0x30
   2b6a4:	movw	r1, #49552	; 0xc190
   2b6a8:	mov	r0, #1
   2b6ac:	movt	r1, #3
   2b6b0:	bl	12770 <__printf_chk@plt>
   2b6b4:	ldrd	r2, [r6, #60]	; 0x3c
   2b6b8:	movw	r1, #49576	; 0xc1a8
   2b6bc:	mov	r0, #1
   2b6c0:	movt	r1, #3
   2b6c4:	bl	12770 <__printf_chk@plt>
   2b6c8:	ldr	r2, [r6, #52]	; 0x34
   2b6cc:	cmp	r2, #0
   2b6d0:	bne	2ba60 <crc32@@Base+0x12318>
   2b6d4:	ldr	r2, [r6, #44]	; 0x2c
   2b6d8:	movw	r1, #47404	; 0xb92c
   2b6dc:	mov	r0, #1
   2b6e0:	movt	r1, #3
   2b6e4:	bl	12770 <__printf_chk@plt>
   2b6e8:	movw	r1, #47452	; 0xb95c
   2b6ec:	ldr	r2, [r6, #72]	; 0x48
   2b6f0:	movt	r1, #3
   2b6f4:	mov	r0, #1
   2b6f8:	movw	r7, #65534	; 0xfffe
   2b6fc:	bl	12770 <__printf_chk@plt>
   2b700:	movw	r8, #49648	; 0xc1f0
   2b704:	movt	r7, #60159	; 0xeaff
   2b708:	sub	r5, r6, #4
   2b70c:	movt	r8, #3
   2b710:	mov	r4, #0
   2b714:	ldr	r3, [r5, #4]!
   2b718:	cmp	r3, r7
   2b71c:	beq	2b730 <crc32@@Base+0x11fe8>
   2b720:	mov	r2, r4
   2b724:	mov	r1, r8
   2b728:	mov	r0, #1
   2b72c:	bl	12770 <__printf_chk@plt>
   2b730:	add	r4, r4, #1
   2b734:	cmp	r4, #8
   2b738:	bne	2b714 <crc32@@Base+0x11fcc>
   2b73c:	movw	r7, #49728	; 0xc240
   2b740:	movw	r8, #49696	; 0xc220
   2b744:	movt	r7, #3
   2b748:	movt	r8, #3
   2b74c:	mov	r4, r6
   2b750:	mov	r5, #0
   2b754:	b	2b780 <crc32@@Base+0x12038>
   2b758:	add	r5, r5, #1
   2b75c:	cmp	r5, #1
   2b760:	beq	2ba8c <crc32@@Base+0x12344>
   2b764:	ldr	r3, [r4, #188]	; 0xbc
   2b768:	mov	r1, r7
   2b76c:	mov	r0, #1
   2b770:	bl	12770 <__printf_chk@plt>
   2b774:	cmp	r5, #256	; 0x100
   2b778:	beq	2b78c <crc32@@Base+0x12044>
   2b77c:	add	r4, r4, #8
   2b780:	ldr	r2, [r4, #184]	; 0xb8
   2b784:	cmn	r2, #1
   2b788:	bne	2b758 <crc32@@Base+0x12010>
   2b78c:	ldr	r9, [r6, #152]	; 0x98
   2b790:	cmp	r9, #0
   2b794:	beq	2b98c <crc32@@Base+0x12244>
   2b798:	add	r9, r6, r9
   2b79c:	ldr	r3, [r9, #4]
   2b7a0:	ldr	r2, [r9, #8]
   2b7a4:	cmp	r3, #0
   2b7a8:	add	r2, r6, r2, lsl #2
   2b7ac:	beq	2b98c <crc32@@Base+0x12244>
   2b7b0:	ldr	r7, [r2, #12]
   2b7b4:	movw	r2, #49888	; 0xc2e0
   2b7b8:	movt	r2, #3
   2b7bc:	str	r2, [sp, #12]
   2b7c0:	movw	r2, #36088	; 0x8cf8
   2b7c4:	movt	r2, #3
   2b7c8:	movw	r1, #50096	; 0xc3b0
   2b7cc:	str	sl, [sp, #20]
   2b7d0:	movt	r1, #3
   2b7d4:	lsl	r7, r7, #2
   2b7d8:	str	r1, [sp, #16]
   2b7dc:	mov	r8, #0
   2b7e0:	mov	sl, r2
   2b7e4:	b	2b938 <crc32@@Base+0x121f0>
   2b7e8:	cmp	lr, #65536	; 0x10000
   2b7ec:	movw	r2, #47296	; 0xb8c0
   2b7f0:	movt	r2, #3
   2b7f4:	moveq	r2, sl
   2b7f8:	ldr	r0, [sp, #12]
   2b7fc:	ubfx	r3, r4, #8, #4
   2b800:	ubfx	ip, r4, #4, #3
   2b804:	movw	r1, #50200	; 0xc418
   2b808:	add	r3, r0, r3, lsl #2
   2b80c:	add	r0, sp, #64	; 0x40
   2b810:	add	ip, r0, ip, lsl #2
   2b814:	movt	r1, #3
   2b818:	ldr	r3, [r3, #32]
   2b81c:	mov	r0, #1
   2b820:	ldr	ip, [ip, #-36]	; 0xffffffdc
   2b824:	str	ip, [sp]
   2b828:	bl	12770 <__printf_chk@plt>
   2b82c:	ldr	r2, [r5, #32]
   2b830:	movw	r1, #50228	; 0xc434
   2b834:	mov	r0, #1
   2b838:	movt	r1, #3
   2b83c:	lsl	r2, r2, #2
   2b840:	bl	12770 <__printf_chk@plt>
   2b844:	mov	r3, fp
   2b848:	mov	r2, fp
   2b84c:	movw	r1, #50256	; 0xc450
   2b850:	mov	r0, #1
   2b854:	movt	r1, #3
   2b858:	bl	12770 <__printf_chk@plt>
   2b85c:	ldrd	r2, [r5, #24]
   2b860:	movw	r1, #50292	; 0xc474
   2b864:	mov	r0, #1
   2b868:	movt	r1, #3
   2b86c:	bl	12770 <__printf_chk@plt>
   2b870:	ldrd	r2, [r5, #16]
   2b874:	ldrd	r0, [r5, #24]
   2b878:	cmp	r1, r3
   2b87c:	cmpeq	r0, r2
   2b880:	beq	2b9b4 <crc32@@Base+0x1226c>
   2b884:	movw	r1, #50320	; 0xc490
   2b888:	mov	r0, #1
   2b88c:	movt	r1, #3
   2b890:	bl	12770 <__printf_chk@plt>
   2b894:	movw	r1, #50340	; 0xc4a4
   2b898:	mov	r0, #1
   2b89c:	movt	r1, #3
   2b8a0:	bl	12770 <__printf_chk@plt>
   2b8a4:	tst	r4, #8388608	; 0x800000
   2b8a8:	bne	2ba4c <crc32@@Base+0x12304>
   2b8ac:	tst	r4, #128	; 0x80
   2b8b0:	bne	2ba1c <crc32@@Base+0x122d4>
   2b8b4:	and	r3, r4, #28672	; 0x7000
   2b8b8:	cmp	r3, #8192	; 0x2000
   2b8bc:	beq	2ba38 <crc32@@Base+0x122f0>
   2b8c0:	cmp	r3, #12288	; 0x3000
   2b8c4:	beq	2ba78 <crc32@@Base+0x12330>
   2b8c8:	cmp	r3, #4096	; 0x1000
   2b8cc:	bne	2b8e0 <crc32@@Base+0x12198>
   2b8d0:	movw	r1, #50380	; 0xc4cc
   2b8d4:	mov	r0, #1
   2b8d8:	movt	r1, #3
   2b8dc:	bl	12770 <__printf_chk@plt>
   2b8e0:	tst	r4, #262144	; 0x40000
   2b8e4:	bne	2ba08 <crc32@@Base+0x122c0>
   2b8e8:	tst	r4, #32768	; 0x8000
   2b8ec:	bne	2b9c0 <crc32@@Base+0x12278>
   2b8f0:	tst	r4, #8
   2b8f4:	bne	2b9d8 <crc32@@Base+0x12290>
   2b8f8:	tst	r4, #6
   2b8fc:	bne	2b9f0 <crc32@@Base+0x122a8>
   2b900:	tst	r4, #1
   2b904:	beq	2b918 <crc32@@Base+0x121d0>
   2b908:	movw	r1, #50444	; 0xc50c
   2b90c:	mov	r0, #1
   2b910:	movt	r1, #3
   2b914:	bl	12770 <__printf_chk@plt>
   2b918:	mov	r0, #10
   2b91c:	bl	122d8 <putchar@plt>
   2b920:	ldr	r2, [r5, #60]	; 0x3c
   2b924:	movw	r1, #50452	; 0xc514
   2b928:	mov	r0, #1
   2b92c:	movt	r1, #3
   2b930:	bl	12770 <__printf_chk@plt>
   2b934:	ldr	r3, [r9, #4]
   2b938:	add	r8, r8, #1
   2b93c:	add	r5, r6, r7
   2b940:	cmp	r8, r3
   2b944:	bcs	2b988 <crc32@@Base+0x12240>
   2b948:	movw	ip, #49888	; 0xc2e0
   2b94c:	movt	ip, #3
   2b950:	add	fp, sp, #28
   2b954:	ldr	r4, [r5, #36]	; 0x24
   2b958:	ldm	ip!, {r0, r1, r2, r3}
   2b95c:	ands	lr, r4, #196608	; 0x30000
   2b960:	ldr	r7, [r5, #12]
   2b964:	stmia	fp!, {r0, r1, r2, r3}
   2b968:	lsl	r7, r7, #2
   2b96c:	ldm	ip, {r0, r1, r2, r3}
   2b970:	ldr	ip, [r5, #8]
   2b974:	stm	fp, {r0, r1, r2, r3}
   2b978:	lsl	fp, ip, #2
   2b97c:	bne	2b7e8 <crc32@@Base+0x120a0>
   2b980:	ldr	r2, [sp, #16]
   2b984:	b	2b7f8 <crc32@@Base+0x120b0>
   2b988:	ldr	sl, [sp, #20]
   2b98c:	ldr	r2, [sp, #60]	; 0x3c
   2b990:	ldr	r3, [sl]
   2b994:	cmp	r2, r3
   2b998:	bne	2baa8 <crc32@@Base+0x12360>
   2b99c:	movw	r3, #29368	; 0x72b8
   2b9a0:	movt	r3, #30
   2b9a4:	ldr	r0, [r3, #2500]	; 0x9c4
   2b9a8:	add	sp, sp, #68	; 0x44
   2b9ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b9b0:	b	12128 <free@plt>
   2b9b4:	mov	r0, #10
   2b9b8:	bl	122d8 <putchar@plt>
   2b9bc:	b	2b894 <crc32@@Base+0x1214c>
   2b9c0:	movw	r1, #50416	; 0xc4f0
   2b9c4:	mov	r0, #1
   2b9c8:	movt	r1, #3
   2b9cc:	bl	12770 <__printf_chk@plt>
   2b9d0:	tst	r4, #8
   2b9d4:	beq	2b8f8 <crc32@@Base+0x121b0>
   2b9d8:	movw	r1, #50424	; 0xc4f8
   2b9dc:	mov	r0, #1
   2b9e0:	movt	r1, #3
   2b9e4:	bl	12770 <__printf_chk@plt>
   2b9e8:	tst	r4, #6
   2b9ec:	beq	2b900 <crc32@@Base+0x121b8>
   2b9f0:	movw	r1, #50436	; 0xc504
   2b9f4:	ubfx	r2, r4, #1, #2
   2b9f8:	movt	r1, #3
   2b9fc:	mov	r0, #1
   2ba00:	bl	12770 <__printf_chk@plt>
   2ba04:	b	2b900 <crc32@@Base+0x121b8>
   2ba08:	movw	r1, #50404	; 0xc4e4
   2ba0c:	mov	r0, #1
   2ba10:	movt	r1, #3
   2ba14:	bl	12770 <__printf_chk@plt>
   2ba18:	b	2b8e8 <crc32@@Base+0x121a0>
   2ba1c:	movw	r1, #50368	; 0xc4c0
   2ba20:	mov	r0, #1
   2ba24:	movt	r1, #3
   2ba28:	bl	12770 <__printf_chk@plt>
   2ba2c:	and	r3, r4, #28672	; 0x7000
   2ba30:	cmp	r3, #8192	; 0x2000
   2ba34:	bne	2b8c0 <crc32@@Base+0x12178>
   2ba38:	movw	r1, #50388	; 0xc4d4
   2ba3c:	mov	r0, #1
   2ba40:	movt	r1, #3
   2ba44:	bl	12770 <__printf_chk@plt>
   2ba48:	b	2b8e0 <crc32@@Base+0x12198>
   2ba4c:	movw	r1, #50360	; 0xc4b8
   2ba50:	mov	r0, #1
   2ba54:	movt	r1, #3
   2ba58:	bl	12770 <__printf_chk@plt>
   2ba5c:	b	2b8ac <crc32@@Base+0x12164>
   2ba60:	movw	r1, #50152	; 0xc3e8
   2ba64:	ldr	r3, [r6, #56]	; 0x38
   2ba68:	movt	r1, #3
   2ba6c:	mov	r0, #1
   2ba70:	bl	12770 <__printf_chk@plt>
   2ba74:	b	2b6d4 <crc32@@Base+0x11f8c>
   2ba78:	movw	r1, #50396	; 0xc4dc
   2ba7c:	mov	r0, #1
   2ba80:	movt	r1, #3
   2ba84:	bl	12770 <__printf_chk@plt>
   2ba88:	b	2b8e0 <crc32@@Base+0x12198>
   2ba8c:	mov	r0, r8
   2ba90:	bl	1226c <puts@plt>
   2ba94:	ldrd	r2, [r4, #184]	; 0xb8
   2ba98:	mov	r1, r7
   2ba9c:	mov	r0, r5
   2baa0:	bl	12770 <__printf_chk@plt>
   2baa4:	b	2b77c <crc32@@Base+0x12034>
   2baa8:	bl	12494 <__stack_chk_fail@plt>
   2baac:	cmp	r0, #0
   2bab0:	bxeq	lr
   2bab4:	ldr	r3, [r0, #56]	; 0x38
   2bab8:	push	{r4, lr}
   2babc:	cmp	r3, #0
   2bac0:	bne	2bb20 <crc32@@Base+0x123d8>
   2bac4:	ldr	r3, [r0, #4]
   2bac8:	cmp	r3, #0
   2bacc:	beq	2badc <crc32@@Base+0x12394>
   2bad0:	ldr	r3, [r0, #60]	; 0x3c
   2bad4:	tst	r3, #63	; 0x3f
   2bad8:	bne	2baf8 <crc32@@Base+0x123b0>
   2badc:	ldr	r3, [r0, #16]
   2bae0:	cmp	r3, #0
   2bae4:	ldreq	r0, [r0]
   2bae8:	clzeq	r0, r0
   2baec:	lsreq	r0, r0, #5
   2baf0:	movne	r0, #0
   2baf4:	pop	{r4, pc}
   2baf8:	movw	r3, #65044	; 0xfe14
   2bafc:	movt	r3, #4
   2bb00:	mov	r2, #58	; 0x3a
   2bb04:	mov	r1, #1
   2bb08:	ldr	r3, [r3]
   2bb0c:	movw	r0, #49796	; 0xc284
   2bb10:	movt	r0, #3
   2bb14:	bl	12578 <fwrite@plt>
   2bb18:	mvn	r0, #0
   2bb1c:	pop	{r4, pc}
   2bb20:	movw	r3, #65044	; 0xfe14
   2bb24:	movt	r3, #4
   2bb28:	mov	r2, #41	; 0x29
   2bb2c:	mov	r1, #1
   2bb30:	ldr	r3, [r3]
   2bb34:	movw	r0, #49752	; 0xc258
   2bb38:	movt	r0, #3
   2bb3c:	bl	12578 <fwrite@plt>
   2bb40:	mvn	r0, #0
   2bb44:	pop	{r4, pc}
   2bb48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bb4c:	movw	r5, #61168	; 0xeef0
   2bb50:	movt	r5, #4
   2bb54:	mov	r6, r3
   2bb58:	sub	sp, sp, #104	; 0x68
   2bb5c:	subs	r4, r0, #0
   2bb60:	ldr	r3, [r5]
   2bb64:	str	r3, [sp, #100]	; 0x64
   2bb68:	beq	2bbe8 <crc32@@Base+0x124a0>
   2bb6c:	mov	r1, #0
   2bb70:	add	r0, r4, #2048	; 0x800
   2bb74:	mov	r2, r1
   2bb78:	str	r1, [r4, #40]	; 0x28
   2bb7c:	mov	r3, r4
   2bb80:	mvn	r1, #0
   2bb84:	movw	ip, #21862	; 0x5566
   2bb88:	movt	ip, #43673	; 0xaa99
   2bb8c:	str	ip, [r4, #32]
   2bb90:	movw	ip, #20056	; 0x4e58
   2bb94:	movt	ip, #22604	; 0x584c
   2bb98:	str	ip, [r4, #36]	; 0x24
   2bb9c:	movw	ip, #65534	; 0xfffe
   2bba0:	movt	ip, #60159	; 0xeaff
   2bba4:	str	ip, [r4]
   2bba8:	str	ip, [r4, #4]
   2bbac:	str	ip, [r4, #8]
   2bbb0:	str	ip, [r4, #12]
   2bbb4:	str	ip, [r4, #16]
   2bbb8:	str	ip, [r4, #20]
   2bbbc:	str	ip, [r4, #24]
   2bbc0:	str	ip, [r4, #28]
   2bbc4:	mov	ip, #2048	; 0x800
   2bbc8:	str	ip, [r4, #68]	; 0x44
   2bbcc:	str	r1, [r3, #184]	; 0xb8
   2bbd0:	add	r3, r3, #8
   2bbd4:	str	r2, [r3, #180]	; 0xb4
   2bbd8:	cmp	r3, r0
   2bbdc:	bne	2bbcc <crc32@@Base+0x12484>
   2bbe0:	str	r2, [r4, #52]	; 0x34
   2bbe4:	str	r2, [r4, #56]	; 0x38
   2bbe8:	ldr	r1, [r6, #4]
   2bbec:	movw	r7, #29368	; 0x72b8
   2bbf0:	ldr	r3, [r6, #104]	; 0x68
   2bbf4:	movt	r7, #30
   2bbf8:	cmp	r1, #0
   2bbfc:	mov	r2, #0
   2bc00:	sub	r3, r3, #2496	; 0x9c0
   2bc04:	str	r3, [r4, #60]	; 0x3c
   2bc08:	str	r3, [r4, #64]	; 0x40
   2bc0c:	movt	r2, #65532	; 0xfffc
   2bc10:	ldrne	r3, [r6, #60]	; 0x3c
   2bc14:	ldr	r0, [r7, #2496]	; 0x9c0
   2bc18:	str	r2, [r4, #44]	; 0x2c
   2bc1c:	mov	r2, #2496	; 0x9c0
   2bc20:	strne	r3, [r4, #44]	; 0x2c
   2bc24:	cmp	r0, #0
   2bc28:	str	r2, [r4, #48]	; 0x30
   2bc2c:	beq	2bc80 <crc32@@Base+0x12538>
   2bc30:	ldr	r8, [r6, #64]	; 0x40
   2bc34:	bl	2b434 <crc32@@Base+0x11cec>
   2bc38:	ldr	ip, [r4, #60]	; 0x3c
   2bc3c:	mov	r1, #1
   2bc40:	ldr	r3, [r4, #64]	; 0x40
   2bc44:	sub	ip, ip, r0
   2bc48:	sub	r3, r3, r0
   2bc4c:	mov	r2, r0
   2bc50:	str	r0, [r4, #52]	; 0x34
   2bc54:	str	r0, [r4, #56]	; 0x38
   2bc58:	add	r0, r4, #2496	; 0x9c0
   2bc5c:	str	r3, [r4, #64]	; 0x40
   2bc60:	str	ip, [r4, #60]	; 0x3c
   2bc64:	ldr	r3, [r7, #2496]	; 0x9c0
   2bc68:	bl	12464 <fread@plt>
   2bc6c:	ldr	r3, [r4, #52]	; 0x34
   2bc70:	cmp	r0, r3
   2bc74:	bne	2bddc <crc32@@Base+0x12694>
   2bc78:	ldr	r0, [r7, #2496]	; 0x9c0
   2bc7c:	bl	125fc <fclose@plt>
   2bc80:	ldr	r6, [r6, #68]	; 0x44
   2bc84:	ldrb	r3, [r6]
   2bc88:	cmp	r3, #0
   2bc8c:	bne	2bcfc <crc32@@Base+0x125b4>
   2bc90:	ldr	r1, [r4, #36]	; 0x24
   2bc94:	ldr	r3, [r4, #32]
   2bc98:	ldr	r2, [r4, #40]	; 0x28
   2bc9c:	add	r3, r3, r1
   2bca0:	ldr	r1, [r4, #44]	; 0x2c
   2bca4:	add	r3, r3, r2
   2bca8:	ldr	r2, [r4, #48]	; 0x30
   2bcac:	add	r3, r3, r1
   2bcb0:	ldr	r1, [r4, #52]	; 0x34
   2bcb4:	add	r3, r3, r2
   2bcb8:	ldr	r2, [r4, #56]	; 0x38
   2bcbc:	add	r3, r3, r1
   2bcc0:	ldr	r1, [r4, #60]	; 0x3c
   2bcc4:	add	r3, r3, r2
   2bcc8:	ldr	r2, [r4, #64]	; 0x40
   2bccc:	add	r3, r3, r1
   2bcd0:	ldr	r0, [r4, #68]	; 0x44
   2bcd4:	ldr	r1, [sp, #100]	; 0x64
   2bcd8:	add	r3, r3, r2
   2bcdc:	ldr	r2, [r5]
   2bce0:	add	r3, r3, r0
   2bce4:	cmp	r1, r2
   2bce8:	mvn	r3, r3
   2bcec:	str	r3, [r4, #72]	; 0x48
   2bcf0:	bne	2be0c <crc32@@Base+0x126c4>
   2bcf4:	add	sp, sp, #104	; 0x68
   2bcf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bcfc:	movw	r1, #49448	; 0xc128
   2bd00:	mov	r0, r6
   2bd04:	movt	r1, #3
   2bd08:	bl	1232c <fopen@plt>
   2bd0c:	subs	r7, r0, #0
   2bd10:	beq	2bdb4 <crc32@@Base+0x1266c>
   2bd14:	bl	12488 <fileno@plt>
   2bd18:	add	r2, sp, #8
   2bd1c:	mov	r1, r0
   2bd20:	mov	r0, #3
   2bd24:	bl	12554 <__fxstat@plt>
   2bd28:	subs	r6, r0, #0
   2bd2c:	bne	2bda8 <crc32@@Base+0x12660>
   2bd30:	ldr	r3, [sp, #24]
   2bd34:	and	r3, r3, #61440	; 0xf000
   2bd38:	cmp	r3, #32768	; 0x8000
   2bd3c:	bne	2bda8 <crc32@@Base+0x12660>
   2bd40:	movw	sl, #49488	; 0xc150
   2bd44:	movw	r9, #49496	; 0xc158
   2bd48:	movt	sl, #3
   2bd4c:	movt	r9, #3
   2bd50:	mov	r8, sp
   2bd54:	add	r3, sp, #4
   2bd58:	mov	r1, sl
   2bd5c:	mov	r2, r8
   2bd60:	mov	r0, r7
   2bd64:	bl	12074 <fscanf@plt>
   2bd68:	cmp	r0, #2
   2bd6c:	addeq	r3, r6, #23
   2bd70:	addeq	r6, r6, #1
   2bd74:	ldmeq	r8, {r0, r1}
   2bd78:	addeq	r3, r4, r3, lsl #3
   2bd7c:	stmeq	r3, {r0, r1}
   2bd80:	mov	r1, r9
   2bd84:	mov	r0, r7
   2bd88:	bl	12074 <fscanf@plt>
   2bd8c:	cmp	r6, #255	; 0xff
   2bd90:	movhi	r3, #0
   2bd94:	movls	r3, #1
   2bd98:	cmn	r0, #1
   2bd9c:	moveq	r3, #0
   2bda0:	cmp	r3, #0
   2bda4:	bne	2bd54 <crc32@@Base+0x1260c>
   2bda8:	mov	r0, r7
   2bdac:	bl	125fc <fclose@plt>
   2bdb0:	b	2bc90 <crc32@@Base+0x12548>
   2bdb4:	movw	r1, #65044	; 0xfe14
   2bdb8:	movt	r1, #4
   2bdbc:	mov	r3, r6
   2bdc0:	movw	r2, #49452	; 0xc12c
   2bdc4:	ldr	r0, [r1]
   2bdc8:	movt	r2, #3
   2bdcc:	mov	r1, #1
   2bdd0:	bl	122b4 <__fprintf_chk@plt>
   2bdd4:	mov	r0, #1
   2bdd8:	bl	121f4 <exit@plt>
   2bddc:	movw	r1, #65044	; 0xfe14
   2bde0:	movt	r1, #4
   2bde4:	mov	r3, r8
   2bde8:	movw	r2, #50480	; 0xc530
   2bdec:	ldr	r0, [r1]
   2bdf0:	movt	r2, #3
   2bdf4:	mov	r1, #1
   2bdf8:	bl	122b4 <__fprintf_chk@plt>
   2bdfc:	ldr	r0, [r7, #2496]	; 0x9c0
   2be00:	bl	125fc <fclose@plt>
   2be04:	mov	r0, #1
   2be08:	bl	121f4 <exit@plt>
   2be0c:	bl	12494 <__stack_chk_fail@plt>
   2be10:	cmp	r0, #0
   2be14:	bxeq	lr
   2be18:	mov	r1, #0
   2be1c:	add	ip, r0, #2048	; 0x800
   2be20:	push	{lr}		; (str lr, [sp, #-4]!)
   2be24:	mov	r2, r1
   2be28:	str	r1, [r0, #40]	; 0x28
   2be2c:	mov	r3, r0
   2be30:	mvn	r1, #0
   2be34:	movw	lr, #21862	; 0x5566
   2be38:	movt	lr, #43673	; 0xaa99
   2be3c:	str	lr, [r0, #32]
   2be40:	movw	lr, #20056	; 0x4e58
   2be44:	movt	lr, #22604	; 0x584c
   2be48:	str	lr, [r0, #36]	; 0x24
   2be4c:	movw	lr, #65534	; 0xfffe
   2be50:	movt	lr, #60159	; 0xeaff
   2be54:	str	lr, [r0]
   2be58:	str	lr, [r0, #4]
   2be5c:	str	lr, [r0, #8]
   2be60:	str	lr, [r0, #12]
   2be64:	str	lr, [r0, #16]
   2be68:	str	lr, [r0, #20]
   2be6c:	str	lr, [r0, #24]
   2be70:	str	lr, [r0, #28]
   2be74:	mov	lr, #2048	; 0x800
   2be78:	str	lr, [r0, #68]	; 0x44
   2be7c:	str	r1, [r3, #184]	; 0xb8
   2be80:	add	r3, r3, #8
   2be84:	str	r2, [r3, #180]	; 0xb4
   2be88:	cmp	r3, ip
   2be8c:	bne	2be7c <crc32@@Base+0x12734>
   2be90:	str	r2, [r0, #52]	; 0x34
   2be94:	str	r2, [r0, #56]	; 0x38
   2be98:	pop	{pc}		; (ldr pc, [sp], #4)
   2be9c:	subs	r0, r0, #28
   2bea0:	movne	r0, #1
   2bea4:	bx	lr
   2bea8:	bx	lr
   2beac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2beb0:	movw	r4, #43360	; 0xa960
   2beb4:	movt	r4, #30
   2beb8:	sub	sp, sp, #12
   2bebc:	subs	fp, r2, #0
   2bec0:	mov	r8, r0
   2bec4:	ldr	r3, [r4, #12]
   2bec8:	mov	r2, r1
   2becc:	ldr	r5, [r4, #4]
   2bed0:	ldr	r9, [r4, #16]
   2bed4:	str	r3, [sp]
   2bed8:	ldr	sl, [r4, #8]
   2bedc:	ldr	r6, [r4]
   2bee0:	beq	2bfac <crc32@@Base+0x12864>
   2bee4:	ldr	r1, [fp]
   2bee8:	cmp	r1, #0
   2beec:	bne	2bf80 <crc32@@Base+0x12838>
   2bef0:	add	r1, r2, #63	; 0x3f
   2bef4:	mov	r0, r5
   2bef8:	add	r6, r1, r6
   2befc:	str	r2, [sp, #4]
   2bf00:	bic	r6, r6, #63	; 0x3f
   2bf04:	mov	r1, r6
   2bf08:	bl	123d4 <realloc@plt>
   2bf0c:	ldr	r2, [sp, #4]
   2bf10:	mov	r1, r8
   2bf14:	mov	r7, r0
   2bf18:	ldr	r0, [r4]
   2bf1c:	add	r0, r7, r0
   2bf20:	bl	1259c <memcpy@plt>
   2bf24:	ldr	r3, [r4]
   2bf28:	str	r3, [fp]
   2bf2c:	ldr	r3, [r4, #12]
   2bf30:	ldr	r0, [r4, #8]
   2bf34:	cmp	r3, #0
   2bf38:	str	r7, [r4, #4]
   2bf3c:	str	r6, [r4]
   2bf40:	ldrne	r3, [sp]
   2bf44:	subne	r8, r3, r5
   2bf48:	ldr	r3, [r4, #16]
   2bf4c:	addne	r8, r7, r8
   2bf50:	strne	r8, [r4, #12]
   2bf54:	cmp	r3, #0
   2bf58:	subne	r9, r9, r5
   2bf5c:	addne	r9, r7, r9
   2bf60:	strne	r9, [r4, #16]
   2bf64:	cmp	r0, #0
   2bf68:	subne	r5, sl, r5
   2bf6c:	movne	r0, #0
   2bf70:	addne	r7, r7, r5
   2bf74:	strne	r7, [r4, #8]
   2bf78:	add	sp, sp, #12
   2bf7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bf80:	cmp	r1, r6
   2bf84:	strcs	r1, [r4]
   2bf88:	movcs	r6, r1
   2bf8c:	bcs	2bef0 <crc32@@Base+0x127a8>
   2bf90:	mov	r2, r1
   2bf94:	mov	r0, #1
   2bf98:	movw	r1, #51208	; 0xc808
   2bf9c:	movt	r1, #3
   2bfa0:	bl	12770 <__printf_chk@plt>
   2bfa4:	mvn	r0, #0
   2bfa8:	b	2bf78 <crc32@@Base+0x12830>
   2bfac:	add	r6, r6, #63	; 0x3f
   2bfb0:	str	r1, [sp, #4]
   2bfb4:	add	r6, r6, r1
   2bfb8:	mov	r0, r5
   2bfbc:	bic	r6, r6, #63	; 0x3f
   2bfc0:	mov	r1, r6
   2bfc4:	bl	123d4 <realloc@plt>
   2bfc8:	ldr	r2, [sp, #4]
   2bfcc:	mov	r1, r8
   2bfd0:	mov	r7, r0
   2bfd4:	ldr	r0, [r4]
   2bfd8:	add	r0, r7, r0
   2bfdc:	bl	1259c <memcpy@plt>
   2bfe0:	b	2bf2c <crc32@@Base+0x127e4>
   2bfe4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2bfe8:	movw	r8, #61168	; 0xeef0
   2bfec:	movt	r8, #4
   2bff0:	sub	sp, sp, #100	; 0x64
   2bff4:	mov	r4, r1
   2bff8:	mov	r1, #0
   2bffc:	ldr	r3, [r8]
   2c000:	str	r3, [sp, #92]	; 0x5c
   2c004:	bl	12434 <open@plt>
   2c008:	subs	r7, r0, #0
   2c00c:	blt	2c084 <crc32@@Base+0x1293c>
   2c010:	mov	r2, sp
   2c014:	mov	r1, r7
   2c018:	mov	r0, #3
   2c01c:	bl	12554 <__fxstat@plt>
   2c020:	cmp	r0, #0
   2c024:	blt	2c084 <crc32@@Base+0x1293c>
   2c028:	ldr	r5, [sp, #44]	; 0x2c
   2c02c:	cmp	r4, #0
   2c030:	mov	r0, r5
   2c034:	strne	r5, [r4]
   2c038:	bl	125a8 <malloc@plt>
   2c03c:	subs	r9, r0, #0
   2c040:	beq	2c084 <crc32@@Base+0x1293c>
   2c044:	cmp	r5, #0
   2c048:	ble	2c0a4 <crc32@@Base+0x1295c>
   2c04c:	mov	r6, r9
   2c050:	mov	r4, #0
   2c054:	b	2c06c <crc32@@Base+0x12924>
   2c058:	ldr	r5, [sp, #44]	; 0x2c
   2c05c:	add	r4, r4, r0
   2c060:	add	r6, r6, r0
   2c064:	cmp	r5, r4
   2c068:	ble	2c0a4 <crc32@@Base+0x1295c>
   2c06c:	sub	r2, r5, r4
   2c070:	mov	r1, r6
   2c074:	mov	r0, r7
   2c078:	bl	12344 <read@plt>
   2c07c:	cmp	r0, #0
   2c080:	bge	2c058 <crc32@@Base+0x12910>
   2c084:	mov	r9, #0
   2c088:	ldr	r2, [sp, #92]	; 0x5c
   2c08c:	mov	r0, r9
   2c090:	ldr	r3, [r8]
   2c094:	cmp	r2, r3
   2c098:	bne	2c0b0 <crc32@@Base+0x12968>
   2c09c:	add	sp, sp, #100	; 0x64
   2c0a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c0a4:	mov	r0, r7
   2c0a8:	bl	12314 <close@plt>
   2c0ac:	b	2c088 <crc32@@Base+0x12940>
   2c0b0:	bl	12494 <__stack_chk_fail@plt>
   2c0b4:	movw	ip, #50624	; 0xc5c0
   2c0b8:	movt	ip, #3
   2c0bc:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c0c0:	mov	r6, r0
   2c0c4:	mov	r8, r1
   2c0c8:	sub	sp, sp, #28
   2c0cc:	ldm	ip!, {r0, r1, r2, r3}
   2c0d0:	movw	r7, #61168	; 0xeef0
   2c0d4:	movt	r7, #4
   2c0d8:	mov	lr, sp
   2c0dc:	mov	r9, sp
   2c0e0:	mov	r4, #0
   2c0e4:	stmia	lr!, {r0, r1, r2, r3}
   2c0e8:	ldr	ip, [ip]
   2c0ec:	ldr	r3, [r7]
   2c0f0:	str	ip, [lr]
   2c0f4:	str	r3, [sp, #20]
   2c0f8:	ldr	r5, [r9], #4
   2c0fc:	mov	r0, r5
   2c100:	bl	125c0 <strlen@plt>
   2c104:	mov	r1, r5
   2c108:	mov	r2, r0
   2c10c:	mov	r0, r6
   2c110:	bl	1217c <strncmp@plt>
   2c114:	cmp	r0, #0
   2c118:	beq	2c144 <crc32@@Base+0x129fc>
   2c11c:	add	r4, r4, #1
   2c120:	cmp	r4, #5
   2c124:	bne	2c0f8 <crc32@@Base+0x129b0>
   2c128:	ldr	r2, [sp, #20]
   2c12c:	mov	r0, r6
   2c130:	ldr	r3, [r7]
   2c134:	cmp	r2, r3
   2c138:	bne	2c15c <crc32@@Base+0x12a14>
   2c13c:	add	sp, sp, #28
   2c140:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c144:	mov	r0, r5
   2c148:	asr	r5, r4, #31
   2c14c:	strd	r4, [r8, #24]
   2c150:	bl	125c0 <strlen@plt>
   2c154:	add	r6, r6, r0
   2c158:	b	2c128 <crc32@@Base+0x129e0>
   2c15c:	bl	12494 <__stack_chk_fail@plt>
   2c160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c164:	movw	fp, #61168	; 0xeef0
   2c168:	movt	fp, #4
   2c16c:	sub	sp, sp, #28
   2c170:	movw	r4, #34500	; 0x86c4
   2c174:	movw	sl, #51236	; 0xc824
   2c178:	ldr	r3, [fp]
   2c17c:	movw	r9, #51240	; 0xc828
   2c180:	ldr	r8, [pc, #276]	; 2c29c <crc32@@Base+0x12b54>
   2c184:	movt	r4, #3
   2c188:	movt	sl, #3
   2c18c:	movt	r9, #3
   2c190:	mov	r6, #0
   2c194:	mov	r7, #0
   2c198:	mov	r5, r0
   2c19c:	str	r1, [sp, #4]
   2c1a0:	mov	r2, #4
   2c1a4:	str	r3, [sp, #20]
   2c1a8:	b	2c1bc <crc32@@Base+0x12a74>
   2c1ac:	ldr	r4, [r8, #4]!
   2c1b0:	mov	r0, r4
   2c1b4:	bl	125c0 <strlen@plt>
   2c1b8:	mov	r2, r0
   2c1bc:	mov	r1, r4
   2c1c0:	mov	r0, r5
   2c1c4:	bl	1217c <strncmp@plt>
   2c1c8:	cmp	r0, #0
   2c1cc:	beq	2c250 <crc32@@Base+0x12b08>
   2c1d0:	mov	r2, #3
   2c1d4:	mov	r1, sl
   2c1d8:	mov	r0, r4
   2c1dc:	bl	1217c <strncmp@plt>
   2c1e0:	cmp	r0, #0
   2c1e4:	bne	2c220 <crc32@@Base+0x12ad8>
   2c1e8:	ldm	r9, {r0, r1}
   2c1ec:	ldrb	r3, [r4, #4]
   2c1f0:	str	r0, [sp, #12]
   2c1f4:	add	r0, sp, #12
   2c1f8:	strh	r1, [sp, #16]
   2c1fc:	strb	r3, [sp, #16]
   2c200:	bl	125c0 <strlen@plt>
   2c204:	add	r1, sp, #12
   2c208:	mov	r2, r0
   2c20c:	mov	r4, r0
   2c210:	mov	r0, r5
   2c214:	bl	1217c <strncmp@plt>
   2c218:	cmp	r0, #0
   2c21c:	beq	2c278 <crc32@@Base+0x12b30>
   2c220:	adds	r6, r6, #1
   2c224:	adc	r7, r7, #0
   2c228:	cmp	r7, #0
   2c22c:	cmpeq	r6, #16
   2c230:	bne	2c1ac <crc32@@Base+0x12a64>
   2c234:	mov	r0, r5
   2c238:	ldr	r2, [sp, #20]
   2c23c:	ldr	r3, [fp]
   2c240:	cmp	r2, r3
   2c244:	bne	2c298 <crc32@@Base+0x12b50>
   2c248:	add	sp, sp, #28
   2c24c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c250:	ldr	r2, [sp, #4]
   2c254:	lsl	r3, r7, #8
   2c258:	orr	r3, r3, r6, lsr #24
   2c25c:	mov	r0, r4
   2c260:	lsl	r6, r6, #8
   2c264:	str	r3, [r2, #20]
   2c268:	str	r6, [r2, #16]
   2c26c:	bl	125c0 <strlen@plt>
   2c270:	add	r0, r5, r0
   2c274:	b	2c238 <crc32@@Base+0x12af0>
   2c278:	ldr	r2, [sp, #4]
   2c27c:	lsl	r3, r7, #8
   2c280:	orr	r3, r3, r6, lsr #24
   2c284:	add	r0, r5, r4
   2c288:	lsl	r6, r6, #8
   2c28c:	str	r3, [r2, #20]
   2c290:	str	r6, [r2, #16]
   2c294:	b	2c238 <crc32@@Base+0x12af0>
   2c298:	bl	12494 <__stack_chk_fail@plt>
   2c29c:	ldrdeq	ip, [r3], -r4
   2c2a0:	push	{r4, r5, lr}
   2c2a4:	movw	r4, #61168	; 0xeef0
   2c2a8:	movt	r4, #4
   2c2ac:	sub	sp, sp, #12
   2c2b0:	mov	r5, r1
   2c2b4:	mov	r2, #0
   2c2b8:	ldr	r3, [r4]
   2c2bc:	mov	r1, sp
   2c2c0:	str	r3, [sp, #4]
   2c2c4:	bl	12290 <strtoll@plt>
   2c2c8:	ldr	r2, [sp, #4]
   2c2cc:	ldr	r3, [r4]
   2c2d0:	cmp	r2, r3
   2c2d4:	str	r0, [r5, #56]	; 0x38
   2c2d8:	ldr	r0, [sp]
   2c2dc:	bne	2c2e8 <crc32@@Base+0x12ba0>
   2c2e0:	add	sp, sp, #12
   2c2e4:	pop	{r4, r5, pc}
   2c2e8:	bl	12494 <__stack_chk_fail@plt>
   2c2ec:	push	{r4, r5, lr}
   2c2f0:	movw	r4, #61168	; 0xeef0
   2c2f4:	movt	r4, #4
   2c2f8:	sub	sp, sp, #12
   2c2fc:	mov	r5, r1
   2c300:	mov	r2, #0
   2c304:	ldr	r3, [r4]
   2c308:	mov	r1, sp
   2c30c:	str	r3, [sp, #4]
   2c310:	bl	12290 <strtoll@plt>
   2c314:	ldr	r2, [sp, #4]
   2c318:	ldr	r3, [r4]
   2c31c:	cmp	r2, r3
   2c320:	strd	r0, [r5, #48]	; 0x30
   2c324:	ldr	r0, [sp]
   2c328:	bne	2c334 <crc32@@Base+0x12bec>
   2c32c:	add	sp, sp, #12
   2c330:	pop	{r4, r5, pc}
   2c334:	bl	12494 <__stack_chk_fail@plt>
   2c338:	push	{r4, r5, lr}
   2c33c:	movw	r4, #61168	; 0xeef0
   2c340:	movt	r4, #4
   2c344:	sub	sp, sp, #12
   2c348:	mov	r5, r1
   2c34c:	mov	r2, #0
   2c350:	ldr	r3, [r4]
   2c354:	mov	r1, sp
   2c358:	str	r3, [sp, #4]
   2c35c:	bl	12290 <strtoll@plt>
   2c360:	ldr	r2, [sp, #4]
   2c364:	ldr	r3, [r4]
   2c368:	cmp	r2, r3
   2c36c:	strd	r0, [r5, #40]	; 0x28
   2c370:	ldr	r0, [sp]
   2c374:	bne	2c380 <crc32@@Base+0x12c38>
   2c378:	add	sp, sp, #12
   2c37c:	pop	{r4, r5, pc}
   2c380:	bl	12494 <__stack_chk_fail@plt>
   2c384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c388:	movw	r5, #61168	; 0xeef0
   2c38c:	movt	r5, #4
   2c390:	sub	sp, sp, #148	; 0x94
   2c394:	mov	r8, #0
   2c398:	mov	r4, r0
   2c39c:	ldr	r3, [r5]
   2c3a0:	mov	sl, r2
   2c3a4:	mov	r9, r1
   2c3a8:	mov	r2, #52	; 0x34
   2c3ac:	mov	r1, r8
   2c3b0:	add	r7, sl, #3
   2c3b4:	add	r0, sp, #20
   2c3b8:	str	r3, [sp, #140]	; 0x8c
   2c3bc:	bic	r6, r7, #3
   2c3c0:	str	r8, [sp]
   2c3c4:	bl	122e4 <memset@plt>
   2c3c8:	ldrd	r2, [r4, #48]	; 0x30
   2c3cc:	ldrd	r0, [r4, #40]	; 0x28
   2c3d0:	cmp	sl, r6
   2c3d4:	lsr	r7, r7, #2
   2c3d8:	str	r7, [sp, #8]
   2c3dc:	str	r7, [sp, #12]
   2c3e0:	str	r7, [sp, #16]
   2c3e4:	strd	r2, [sp, #24]
   2c3e8:	strd	r0, [sp, #32]
   2c3ec:	bcc	2c678 <crc32@@Base+0x12f30>
   2c3f0:	ldrd	r2, [r4, #8]
   2c3f4:	mov	r1, #0
   2c3f8:	and	r0, r2, #4096	; 0x1000
   2c3fc:	orrs	r3, r0, r1
   2c400:	bne	2c628 <crc32@@Base+0x12ee0>
   2c404:	mov	r0, r9
   2c408:	add	r2, r4, #56	; 0x38
   2c40c:	mov	r1, sl
   2c410:	bl	2beac <crc32@@Base+0x12764>
   2c414:	subs	r7, r0, #0
   2c418:	bne	2c60c <crc32@@Base+0x12ec4>
   2c41c:	ldrd	r2, [r4, #8]
   2c420:	mov	r3, #0
   2c424:	ldr	r1, [r4, #56]	; 0x38
   2c428:	mov	r8, r2
   2c42c:	and	r2, r2, #8192	; 0x2000
   2c430:	orrs	r3, r2, r3
   2c434:	lsr	r3, r1, #2
   2c438:	str	r3, [sp, #40]	; 0x28
   2c43c:	beq	2c478 <crc32@@Base+0x12d30>
   2c440:	movw	r3, #43360	; 0xa960
   2c444:	movt	r3, #30
   2c448:	ldr	r2, [r3, #16]
   2c44c:	cmp	r2, #0
   2c450:	bne	2c774 <crc32@@Base+0x1302c>
   2c454:	ldr	r2, [r3, #12]
   2c458:	add	r3, r1, sl
   2c45c:	ldr	r2, [r2, #48]	; 0x30
   2c460:	sub	r3, r3, r2
   2c464:	str	r2, [sp, #40]	; 0x28
   2c468:	lsr	r3, r3, #2
   2c46c:	str	r3, [sp, #16]
   2c470:	str	r3, [sp, #8]
   2c474:	str	r3, [sp, #12]
   2c478:	ldrd	r0, [r4, #24]
   2c47c:	orrs	r3, r0, r1
   2c480:	bne	2c6a8 <crc32@@Base+0x12f60>
   2c484:	mov	sl, #3
   2c488:	mov	fp, #0
   2c48c:	mov	ip, #6
   2c490:	and	r0, r8, #16384	; 0x4000
   2c494:	ldrd	r2, [r4, #16]
   2c498:	mov	r1, #0
   2c49c:	orrs	r1, r0, r1
   2c4a0:	ldr	r1, [r4, #32]
   2c4a4:	ldr	r0, [sp, #44]	; 0x2c
   2c4a8:	orr	r1, r1, r2
   2c4ac:	strd	sl, [r4, #24]
   2c4b0:	orr	r1, r1, r0
   2c4b4:	and	r0, r8, #524288	; 0x80000
   2c4b8:	orr	r1, r1, ip
   2c4bc:	orrne	r1, r1, #1
   2c4c0:	str	r1, [sp, #44]	; 0x2c
   2c4c4:	mov	r1, #0
   2c4c8:	orrs	r1, r0, r1
   2c4cc:	ldrne	r1, [sp, #44]	; 0x2c
   2c4d0:	orrne	r1, r1, #65536	; 0x10000
   2c4d4:	strne	r1, [sp, #44]	; 0x2c
   2c4d8:	cmp	r3, #0
   2c4dc:	cmpeq	r2, #512	; 0x200
   2c4e0:	beq	2c6d0 <crc32@@Base+0x12f88>
   2c4e4:	bhi	2c6b8 <crc32@@Base+0x12f70>
   2c4e8:	orrs	r1, r2, r3
   2c4ec:	beq	2c6d0 <crc32@@Base+0x12f88>
   2c4f0:	cmp	r3, #0
   2c4f4:	cmpeq	r2, #256	; 0x100
   2c4f8:	beq	2c6d0 <crc32@@Base+0x12f88>
   2c4fc:	add	r1, sp, #68	; 0x44
   2c500:	add	r3, sp, #8
   2c504:	mov	ip, #0
   2c508:	ldr	r2, [r3], #4
   2c50c:	cmp	r3, r1
   2c510:	add	ip, ip, r2
   2c514:	bne	2c508 <crc32@@Base+0x12dc0>
   2c518:	add	r0, sp, #8
   2c51c:	mov	r2, sp
   2c520:	mov	r1, #64	; 0x40
   2c524:	mvn	ip, ip
   2c528:	str	ip, [sp, #68]	; 0x44
   2c52c:	bl	2beac <crc32@@Base+0x12764>
   2c530:	subs	r7, r0, #0
   2c534:	bne	2c60c <crc32@@Base+0x12ec4>
   2c538:	movw	r8, #43360	; 0xa960
   2c53c:	movt	r8, #30
   2c540:	ldr	r3, [r8, #8]
   2c544:	cmp	r3, #0
   2c548:	beq	2c708 <crc32@@Base+0x12fc0>
   2c54c:	ldr	lr, [r8, #16]
   2c550:	ldr	ip, [sp]
   2c554:	ldr	r2, [r3, #4]
   2c558:	cmp	lr, #0
   2c55c:	add	r2, r2, #1
   2c560:	lsr	r1, ip, #2
   2c564:	str	r2, [r3, #4]
   2c568:	streq	r1, [r3, #8]
   2c56c:	beq	2c598 <crc32@@Base+0x12e50>
   2c570:	add	r0, lr, #60	; 0x3c
   2c574:	mov	r3, lr
   2c578:	mov	r2, #0
   2c57c:	str	r1, [lr, #12]
   2c580:	ldr	r1, [r3], #4
   2c584:	cmp	r0, r3
   2c588:	add	r2, r2, r1
   2c58c:	bne	2c580 <crc32@@Base+0x12e38>
   2c590:	mvn	r2, r2
   2c594:	str	r2, [lr, #60]	; 0x3c
   2c598:	ldrd	sl, [r4, #8]
   2c59c:	mov	r1, #0
   2c5a0:	ldr	lr, [r8, #4]
   2c5a4:	and	r0, sl, #8192	; 0x2000
   2c5a8:	orrs	r3, r0, r1
   2c5ac:	add	ip, lr, ip
   2c5b0:	str	ip, [r8, #16]
   2c5b4:	beq	2c60c <crc32@@Base+0x12ec4>
   2c5b8:	ldr	r1, [r8, #12]
   2c5bc:	ldrd	r8, [r4, #16]
   2c5c0:	ldr	ip, [r4, #40]	; 0x28
   2c5c4:	ldr	r0, [r1, #48]	; 0x30
   2c5c8:	cmp	r0, #0
   2c5cc:	str	ip, [r1, #44]	; 0x2c
   2c5d0:	ldreq	r0, [r4, #56]	; 0x38
   2c5d4:	str	r6, [r1, #60]	; 0x3c
   2c5d8:	str	r6, [r1, #64]	; 0x40
   2c5dc:	streq	r0, [r1, #48]	; 0x30
   2c5e0:	cmp	r9, #0
   2c5e4:	ldr	r0, [r1, #68]	; 0x44
   2c5e8:	cmpeq	r8, #1280	; 0x500
   2c5ec:	bic	r0, r0, #3072	; 0xc00
   2c5f0:	str	r0, [r1, #68]	; 0x44
   2c5f4:	beq	2c60c <crc32@@Base+0x12ec4>
   2c5f8:	cmp	r9, #0
   2c5fc:	cmpeq	r8, #1792	; 0x700
   2c600:	orreq	r0, r0, #3072	; 0xc00
   2c604:	streq	r0, [r1, #68]	; 0x44
   2c608:	bne	2c6ec <crc32@@Base+0x12fa4>
   2c60c:	ldr	r2, [sp, #140]	; 0x8c
   2c610:	mov	r0, r7
   2c614:	ldr	r3, [r5]
   2c618:	cmp	r2, r3
   2c61c:	bne	2c788 <crc32@@Base+0x13040>
   2c620:	add	sp, sp, #148	; 0x94
   2c624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c628:	movw	r6, #43360	; 0xa960
   2c62c:	movt	r6, #30
   2c630:	ldr	r3, [r6, #12]
   2c634:	ldr	r3, [r3, #48]	; 0x30
   2c638:	cmp	r3, #0
   2c63c:	bne	2c760 <crc32@@Base+0x13018>
   2c640:	mov	r0, r9
   2c644:	add	r2, r4, #56	; 0x38
   2c648:	mov	r1, sl
   2c64c:	bl	2beac <crc32@@Base+0x12764>
   2c650:	subs	r7, r0, #0
   2c654:	bne	2c60c <crc32@@Base+0x12ec4>
   2c658:	ldr	r3, [r6, #12]
   2c65c:	add	sl, sl, #63	; 0x3f
   2c660:	ldr	r2, [r4, #56]	; 0x38
   2c664:	bic	sl, sl, #63	; 0x3f
   2c668:	str	sl, [r3, #52]	; 0x34
   2c66c:	str	sl, [r3, #56]	; 0x38
   2c670:	str	r2, [r3, #48]	; 0x30
   2c674:	b	2c60c <crc32@@Base+0x12ec4>
   2c678:	mov	r0, r6
   2c67c:	bl	125a8 <malloc@plt>
   2c680:	mov	r1, r9
   2c684:	mov	r2, sl
   2c688:	mov	r7, r0
   2c68c:	bl	1259c <memcpy@plt>
   2c690:	mov	r1, r8
   2c694:	add	r0, r7, sl
   2c698:	sub	r2, r6, sl
   2c69c:	mov	r9, r7
   2c6a0:	bl	122e4 <memset@plt>
   2c6a4:	b	2c3f0 <crc32@@Base+0x12ca8>
   2c6a8:	subs	sl, r0, #1
   2c6ac:	sbc	fp, r1, #0
   2c6b0:	lsl	ip, sl, #1
   2c6b4:	b	2c490 <crc32@@Base+0x12d48>
   2c6b8:	cmp	r3, #0
   2c6bc:	cmpeq	r2, #768	; 0x300
   2c6c0:	beq	2c6d0 <crc32@@Base+0x12f88>
   2c6c4:	cmp	r3, #0
   2c6c8:	cmpeq	r2, #1024	; 0x400
   2c6cc:	bne	2c4fc <crc32@@Base+0x12db4>
   2c6d0:	and	r8, r8, #262144	; 0x40000
   2c6d4:	mov	r9, #0
   2c6d8:	orrs	r3, r8, r9
   2c6dc:	ldrne	r3, [sp, #44]	; 0x2c
   2c6e0:	orrne	r3, r3, #8
   2c6e4:	strne	r3, [sp, #44]	; 0x2c
   2c6e8:	b	2c4fc <crc32@@Base+0x12db4>
   2c6ec:	and	r2, sl, #18
   2c6f0:	mov	r3, #0
   2c6f4:	orrs	r3, r2, r3
   2c6f8:	orrne	r0, r0, #1024	; 0x400
   2c6fc:	orreq	r0, r0, #2048	; 0x800
   2c700:	str	r0, [r1, #68]	; 0x44
   2c704:	b	2c60c <crc32@@Base+0x12ec4>
   2c708:	mov	r1, r7
   2c70c:	mov	r2, #60	; 0x3c
   2c710:	add	r0, sp, #80	; 0x50
   2c714:	str	r7, [sp, #4]
   2c718:	bl	122e4 <memset@plt>
   2c71c:	add	r2, sp, #4
   2c720:	mov	r1, #64	; 0x40
   2c724:	add	r0, sp, #76	; 0x4c
   2c728:	mov	r3, #0
   2c72c:	movt	r3, #258	; 0x102
   2c730:	str	r3, [sp, #76]	; 0x4c
   2c734:	bl	2beac <crc32@@Base+0x12764>
   2c738:	cmp	r0, #0
   2c73c:	movne	r7, r0
   2c740:	bne	2c60c <crc32@@Base+0x12ec4>
   2c744:	ldr	r2, [sp, #4]
   2c748:	ldr	r1, [r8, #12]
   2c74c:	ldr	r3, [r8, #4]
   2c750:	str	r2, [r1, #152]	; 0x98
   2c754:	add	r3, r3, r2
   2c758:	str	r3, [r8, #8]
   2c75c:	b	2c54c <crc32@@Base+0x12e04>
   2c760:	movw	r0, #51248	; 0xc830
   2c764:	movt	r0, #3
   2c768:	bl	1226c <puts@plt>
   2c76c:	mvn	r7, #0
   2c770:	b	2c60c <crc32@@Base+0x12ec4>
   2c774:	movw	r0, #51300	; 0xc864
   2c778:	movt	r0, #3
   2c77c:	bl	1226c <puts@plt>
   2c780:	mvn	r7, #0
   2c784:	b	2c60c <crc32@@Base+0x12ec4>
   2c788:	bl	12494 <__stack_chk_fail@plt>
   2c78c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c790:	movw	r5, #61168	; 0xeef0
   2c794:	movt	r5, #4
   2c798:	sub	sp, sp, #12
   2c79c:	mov	r4, r0
   2c7a0:	ldr	r0, [r0]
   2c7a4:	ldr	r3, [r5]
   2c7a8:	mov	r1, sp
   2c7ac:	str	r3, [sp, #4]
   2c7b0:	bl	2bfe4 <crc32@@Base+0x1289c>
   2c7b4:	ldrd	r2, [r4, #32]
   2c7b8:	ldrd	r6, [r4, #8]
   2c7bc:	orrs	r3, r2, r3
   2c7c0:	orr	r8, r6, #4194304	; 0x400000
   2c7c4:	moveq	r2, #16
   2c7c8:	moveq	r3, #0
   2c7cc:	mov	r9, r7
   2c7d0:	strdeq	r2, [r4, #32]
   2c7d4:	strd	r8, [r4, #8]
   2c7d8:	ldr	r2, [sp]
   2c7dc:	mov	r1, r0
   2c7e0:	mov	r0, r4
   2c7e4:	bl	2c384 <crc32@@Base+0x12c3c>
   2c7e8:	ldr	r2, [sp, #4]
   2c7ec:	ldr	r3, [r5]
   2c7f0:	cmp	r2, r3
   2c7f4:	bne	2c800 <crc32@@Base+0x130b8>
   2c7f8:	add	sp, sp, #12
   2c7fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c800:	bl	12494 <__stack_chk_fail@plt>
   2c804:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c808:	movw	fp, #61168	; 0xeef0
   2c80c:	movt	fp, #4
   2c810:	sub	sp, sp, #36	; 0x24
   2c814:	mov	r5, r0
   2c818:	add	r1, sp, #24
   2c81c:	ldr	r3, [fp]
   2c820:	ldr	r0, [r0]
   2c824:	str	r3, [sp, #28]
   2c828:	bl	2bfe4 <crc32@@Base+0x1289c>
   2c82c:	subs	sl, r0, #0
   2c830:	beq	2cbf8 <crc32@@Base+0x134b0>
   2c834:	ldrb	r2, [sl, #4]
   2c838:	cmp	r2, #1
   2c83c:	beq	2ca04 <crc32@@Base+0x132bc>
   2c840:	cmp	r2, #2
   2c844:	bne	2c9d8 <crc32@@Base+0x13290>
   2c848:	ldrh	r8, [sl, #60]	; 0x3c
   2c84c:	ldr	r4, [sl, #40]	; 0x28
   2c850:	cmp	r8, #0
   2c854:	add	r4, sl, r4
   2c858:	beq	2cb68 <crc32@@Base+0x13420>
   2c85c:	mov	lr, #0
   2c860:	mvn	r3, #0
   2c864:	mov	ip, r4
   2c868:	str	r4, [sp, #8]
   2c86c:	mov	r9, lr
   2c870:	mov	r4, r3
   2c874:	str	sl, [sp]
   2c878:	str	fp, [sp, #20]
   2c87c:	ldrd	r0, [ip, #32]
   2c880:	orrs	r3, r0, r1
   2c884:	beq	2c8e4 <crc32@@Base+0x1319c>
   2c888:	ldrd	r6, [ip, #16]
   2c88c:	orrs	r3, r6, r7
   2c890:	beq	2c8e4 <crc32@@Base+0x1319c>
   2c894:	ldrd	r2, [ip, #8]
   2c898:	mov	fp, #0
   2c89c:	and	sl, r2, #2
   2c8a0:	orrs	r3, sl, fp
   2c8a4:	beq	2c8e4 <crc32@@Base+0x1319c>
   2c8a8:	ldr	r3, [ip, #4]
   2c8ac:	cmp	r3, #8
   2c8b0:	beq	2c8e4 <crc32@@Base+0x1319c>
   2c8b4:	mov	r3, #0
   2c8b8:	cmp	r7, r3
   2c8bc:	cmpeq	r6, r4
   2c8c0:	movcc	r4, r6
   2c8c4:	adds	r2, r0, r6
   2c8c8:	adc	r3, r1, r7
   2c8cc:	mov	sl, r2
   2c8d0:	mov	fp, r3
   2c8d4:	mov	r3, #0
   2c8d8:	cmp	fp, r3
   2c8dc:	cmpeq	sl, r9
   2c8e0:	addhi	r9, r6, r0
   2c8e4:	add	lr, lr, #1
   2c8e8:	add	ip, ip, #64	; 0x40
   2c8ec:	cmp	r8, lr
   2c8f0:	bne	2c87c <crc32@@Base+0x13134>
   2c8f4:	mov	r7, r4
   2c8f8:	sub	r6, r9, r7
   2c8fc:	mov	r0, #1
   2c900:	ldr	sl, [sp]
   2c904:	mov	r1, r6
   2c908:	ldr	r4, [sp, #8]
   2c90c:	ldr	fp, [sp, #20]
   2c910:	bl	12518 <calloc@plt>
   2c914:	subs	r9, r0, #0
   2c918:	strne	sl, [sp]
   2c91c:	addne	r8, r4, r8, lsl #6
   2c920:	strne	fp, [sp, #8]
   2c924:	bne	2c938 <crc32@@Base+0x131f0>
   2c928:	b	2cbc8 <crc32@@Base+0x13480>
   2c92c:	add	r4, r4, #64	; 0x40
   2c930:	cmp	r4, r8
   2c934:	beq	2c9ac <crc32@@Base+0x13264>
   2c938:	ldrd	r2, [r4, #32]
   2c93c:	ldr	ip, [r4, #16]
   2c940:	orrs	r3, r2, r3
   2c944:	ldr	r1, [r4, #20]
   2c948:	moveq	r3, #1
   2c94c:	movne	r3, #0
   2c950:	orrs	r1, ip, r1
   2c954:	moveq	r3, #1
   2c958:	cmp	r3, #0
   2c95c:	bne	2c92c <crc32@@Base+0x131e4>
   2c960:	ldrd	r0, [r4, #8]
   2c964:	mov	fp, #0
   2c968:	mov	r1, fp
   2c96c:	and	sl, r0, #2
   2c970:	mov	r0, sl
   2c974:	orrs	r3, r0, r1
   2c978:	beq	2c92c <crc32@@Base+0x131e4>
   2c97c:	ldr	r3, [r4, #4]
   2c980:	cmp	r3, #8
   2c984:	beq	2c92c <crc32@@Base+0x131e4>
   2c988:	ldr	r1, [r4, #24]
   2c98c:	sub	r0, ip, r7
   2c990:	ldr	r3, [sp]
   2c994:	add	r0, r9, r0
   2c998:	add	r4, r4, #64	; 0x40
   2c99c:	add	r1, r3, r1
   2c9a0:	bl	1259c <memcpy@plt>
   2c9a4:	cmp	r4, r8
   2c9a8:	bne	2c938 <crc32@@Base+0x131f0>
   2c9ac:	ldr	sl, [sp]
   2c9b0:	mov	r8, r7
   2c9b4:	ldr	fp, [sp, #8]
   2c9b8:	mov	r1, #0
   2c9bc:	ldrd	r2, [sl, #24]
   2c9c0:	strd	r2, [sp, #8]
   2c9c4:	ldrd	r2, [r5, #8]
   2c9c8:	strd	r2, [sp]
   2c9cc:	ldrd	r2, [sp, #8]
   2c9d0:	strd	r2, [r5, #48]	; 0x30
   2c9d4:	b	2cb2c <crc32@@Base+0x133e4>
   2c9d8:	movw	r1, #51344	; 0xc890
   2c9dc:	mov	r0, #1
   2c9e0:	movt	r1, #3
   2c9e4:	bl	12770 <__printf_chk@plt>
   2c9e8:	mvn	r0, #0
   2c9ec:	ldr	r2, [sp, #28]
   2c9f0:	ldr	r3, [fp]
   2c9f4:	cmp	r2, r3
   2c9f8:	bne	2cc00 <crc32@@Base+0x134b8>
   2c9fc:	add	sp, sp, #36	; 0x24
   2ca00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ca04:	ldrh	ip, [sl, #48]	; 0x30
   2ca08:	ldr	r4, [sl, #32]
   2ca0c:	cmp	ip, #0
   2ca10:	add	r4, sl, r4
   2ca14:	beq	2cb8c <crc32@@Base+0x13444>
   2ca18:	mov	r7, #0
   2ca1c:	mov	r3, r4
   2ca20:	mov	r6, r7
   2ca24:	mvn	r8, #0
   2ca28:	ldr	r2, [r3, #20]
   2ca2c:	cmp	r2, #0
   2ca30:	beq	2ca6c <crc32@@Base+0x13324>
   2ca34:	ldr	r1, [r3, #12]
   2ca38:	cmp	r1, #0
   2ca3c:	beq	2ca6c <crc32@@Base+0x13324>
   2ca40:	ldr	r0, [r3, #8]
   2ca44:	tst	r0, #2
   2ca48:	beq	2ca6c <crc32@@Base+0x13324>
   2ca4c:	ldr	r0, [r3, #4]
   2ca50:	cmp	r0, #8
   2ca54:	beq	2ca6c <crc32@@Base+0x13324>
   2ca58:	cmp	r8, r1
   2ca5c:	add	r2, r2, r1
   2ca60:	movcs	r8, r1
   2ca64:	cmp	r6, r2
   2ca68:	movcc	r6, r2
   2ca6c:	add	r7, r7, #1
   2ca70:	add	r3, r3, #40	; 0x28
   2ca74:	cmp	r7, ip
   2ca78:	bne	2ca28 <crc32@@Base+0x132e0>
   2ca7c:	sub	r6, r6, r8
   2ca80:	mov	r0, #1
   2ca84:	str	r8, [sp, #8]
   2ca88:	mov	r1, r6
   2ca8c:	bl	12518 <calloc@plt>
   2ca90:	ldrd	r2, [r5, #8]
   2ca94:	orr	r8, r2, #262144	; 0x40000
   2ca98:	mov	r9, r3
   2ca9c:	strd	r8, [sp]
   2caa0:	subs	r9, r0, #0
   2caa4:	beq	2cbd8 <crc32@@Base+0x13490>
   2caa8:	mov	r3, #40	; 0x28
   2caac:	ldr	r8, [sp, #8]
   2cab0:	mla	r7, r3, r7, r4
   2cab4:	b	2cac4 <crc32@@Base+0x1337c>
   2cab8:	add	r4, r4, #40	; 0x28
   2cabc:	cmp	r4, r7
   2cac0:	beq	2cb10 <crc32@@Base+0x133c8>
   2cac4:	ldr	r0, [r4, #12]
   2cac8:	ldr	r2, [r4, #20]
   2cacc:	cmp	r0, #0
   2cad0:	cmpne	r2, #0
   2cad4:	beq	2cab8 <crc32@@Base+0x13370>
   2cad8:	ldr	r3, [r4, #8]
   2cadc:	tst	r3, #2
   2cae0:	beq	2cab8 <crc32@@Base+0x13370>
   2cae4:	ldr	r3, [r4, #4]
   2cae8:	cmp	r3, #8
   2caec:	beq	2cab8 <crc32@@Base+0x13370>
   2caf0:	ldr	r1, [r4, #16]
   2caf4:	sub	r0, r0, r8
   2caf8:	add	r0, r9, r0
   2cafc:	add	r4, r4, #40	; 0x28
   2cb00:	add	r1, sl, r1
   2cb04:	bl	1259c <memcpy@plt>
   2cb08:	cmp	r4, r7
   2cb0c:	bne	2cac4 <crc32@@Base+0x1337c>
   2cb10:	str	r8, [sp, #8]
   2cb14:	ldr	r0, [sl, #24]
   2cb18:	mov	r1, #0
   2cb1c:	ldrd	r2, [sp]
   2cb20:	ldr	r8, [sp, #8]
   2cb24:	strd	r0, [r5, #48]	; 0x30
   2cb28:	strd	r2, [r5, #8]
   2cb2c:	ldrd	r2, [r5, #32]
   2cb30:	str	r1, [r5, #44]	; 0x2c
   2cb34:	ldrd	r0, [sp]
   2cb38:	orrs	r3, r2, r3
   2cb3c:	str	r8, [r5, #40]	; 0x28
   2cb40:	moveq	r2, #16
   2cb44:	moveq	r3, #0
   2cb48:	orr	r0, r0, #2097152	; 0x200000
   2cb4c:	strdeq	r2, [r5, #32]
   2cb50:	strd	r0, [r5, #8]
   2cb54:	mov	r2, r6
   2cb58:	mov	r1, r9
   2cb5c:	mov	r0, r5
   2cb60:	bl	2c384 <crc32@@Base+0x12c3c>
   2cb64:	b	2c9ec <crc32@@Base+0x132a4>
   2cb68:	mov	r1, #1
   2cb6c:	mov	r0, r1
   2cb70:	bl	12518 <calloc@plt>
   2cb74:	subs	r9, r0, #0
   2cb78:	beq	2cbc8 <crc32@@Base+0x13480>
   2cb7c:	mov	r1, r8
   2cb80:	mov	r6, #1
   2cb84:	mvn	r8, #0
   2cb88:	b	2c9bc <crc32@@Base+0x13274>
   2cb8c:	mov	r1, r2
   2cb90:	mov	r0, r2
   2cb94:	str	r2, [sp, #8]
   2cb98:	bl	12518 <calloc@plt>
   2cb9c:	ldrd	r8, [r5, #8]
   2cba0:	orr	r2, r8, #262144	; 0x40000
   2cba4:	mov	r3, r9
   2cba8:	strd	r2, [sp]
   2cbac:	subs	r9, r0, #0
   2cbb0:	beq	2cbd8 <crc32@@Base+0x13490>
   2cbb4:	ldr	r2, [sp, #8]
   2cbb8:	mvn	r3, #0
   2cbbc:	str	r3, [sp, #8]
   2cbc0:	mov	r6, r2
   2cbc4:	b	2cb14 <crc32@@Base+0x133cc>
   2cbc8:	ldrd	r2, [sl, #24]
   2cbcc:	mvn	r0, #0
   2cbd0:	strd	r2, [r5, #48]	; 0x30
   2cbd4:	b	2c9ec <crc32@@Base+0x132a4>
   2cbd8:	ldr	r3, [sl, #24]
   2cbdc:	mov	r2, #0
   2cbe0:	ldrd	r0, [sp]
   2cbe4:	str	r2, [r5, #52]	; 0x34
   2cbe8:	str	r3, [r5, #48]	; 0x30
   2cbec:	strd	r0, [r5, #8]
   2cbf0:	mvn	r0, #0
   2cbf4:	b	2c9ec <crc32@@Base+0x132a4>
   2cbf8:	mvn	r0, #0
   2cbfc:	b	2c9ec <crc32@@Base+0x132a4>
   2cc00:	bl	12494 <__stack_chk_fail@plt>
   2cc04:	push	{r4, r5, r6, r7, lr}
   2cc08:	movw	r5, #61168	; 0xeef0
   2cc0c:	movt	r5, #4
   2cc10:	sub	sp, sp, #28
   2cc14:	mov	r1, #0
   2cc18:	mov	r4, r0
   2cc1c:	ldr	r3, [r5]
   2cc20:	ldr	r0, [r0]
   2cc24:	str	r3, [sp, #20]
   2cc28:	bl	2bfe4 <crc32@@Base+0x1289c>
   2cc2c:	ldr	r3, [pc, #388]	; 2cdb8 <crc32@@Base+0x13670>
   2cc30:	add	ip, sp, #4
   2cc34:	subs	r6, r0, #0
   2cc38:	ldm	r3, {r0, r1, r2, r3}
   2cc3c:	stmia	ip!, {r0, r1, r2}
   2cc40:	strh	r3, [ip]
   2cc44:	beq	2cd98 <crc32@@Base+0x13650>
   2cc48:	add	r1, sp, #4
   2cc4c:	mov	r2, #14
   2cc50:	mov	r0, r6
   2cc54:	bl	126c8 <memcmp@plt>
   2cc58:	cmp	r0, #0
   2cc5c:	bne	2cd98 <crc32@@Base+0x13650>
   2cc60:	ldrh	r2, [r6, #14]
   2cc64:	add	r6, r6, #16
   2cc68:	lsl	r3, r2, #8
   2cc6c:	orr	r3, r3, r2, lsr #8
   2cc70:	uxth	r3, r3
   2cc74:	add	r2, r6, r3
   2cc78:	ldrb	r3, [r6, r3]
   2cc7c:	cmp	r3, #98	; 0x62
   2cc80:	bne	2cd98 <crc32@@Base+0x13650>
   2cc84:	ldrh	r1, [r2, #1]
   2cc88:	add	r2, r2, #3
   2cc8c:	lsl	r3, r1, #8
   2cc90:	orr	r3, r3, r1, lsr #8
   2cc94:	uxth	r3, r3
   2cc98:	add	r1, r2, r3
   2cc9c:	ldrb	r3, [r2, r3]
   2cca0:	cmp	r3, #99	; 0x63
   2cca4:	bne	2cd98 <crc32@@Base+0x13650>
   2cca8:	ldrh	r2, [r1, #1]
   2ccac:	add	r1, r1, #3
   2ccb0:	lsl	r3, r2, #8
   2ccb4:	orr	r3, r3, r2, lsr #8
   2ccb8:	uxth	r3, r3
   2ccbc:	add	r2, r1, r3
   2ccc0:	ldrb	r3, [r1, r3]
   2ccc4:	cmp	r3, #100	; 0x64
   2ccc8:	bne	2cd98 <crc32@@Base+0x13650>
   2cccc:	ldrh	r1, [r2, #1]
   2ccd0:	add	r2, r2, #3
   2ccd4:	lsl	r3, r1, #8
   2ccd8:	orr	r3, r3, r1, lsr #8
   2ccdc:	uxth	r3, r3
   2cce0:	add	r0, r2, r3
   2cce4:	ldrb	r3, [r2, r3]
   2cce8:	cmp	r3, #101	; 0x65
   2ccec:	bne	2cd98 <crc32@@Base+0x13650>
   2ccf0:	ldr	r2, [r0, #1]
   2ccf4:	add	lr, r0, #5
   2ccf8:	rev	r2, r2
   2ccfc:	cmp	r2, #0
   2cd00:	beq	2cd38 <crc32@@Base+0x135f0>
   2cd04:	mov	r6, #255	; 0xff
   2cd08:	add	r0, r0, #1
   2cd0c:	movt	r6, #255	; 0xff
   2cd10:	add	ip, r0, #8
   2cd14:	ldr	r1, [r0, #4]
   2cd18:	sub	ip, ip, lr
   2cd1c:	add	r0, r0, #4
   2cd20:	cmp	r2, ip
   2cd24:	eor	r3, r1, r1, ror #16
   2cd28:	and	r3, r6, r3, lsr #8
   2cd2c:	eor	r3, r3, r1, ror #8
   2cd30:	str	r3, [r0]
   2cd34:	bhi	2cd10 <crc32@@Base+0x135c8>
   2cd38:	ldrd	r0, [r4, #32]
   2cd3c:	mvn	r6, #0
   2cd40:	mov	r7, #0
   2cd44:	strd	r6, [r4, #40]	; 0x28
   2cd48:	orrs	r3, r0, r1
   2cd4c:	moveq	r0, #32
   2cd50:	moveq	r1, #0
   2cd54:	strdeq	r0, [r4, #32]
   2cd58:	ldr	r1, [sp, #20]
   2cd5c:	ldr	r3, [r5]
   2cd60:	cmp	r1, r3
   2cd64:	ldrd	r0, [r4, #8]
   2cd68:	orr	r6, r0, #1048576	; 0x100000
   2cd6c:	mov	r0, #0
   2cd70:	mov	r7, r1
   2cd74:	mov	r1, #0
   2cd78:	strd	r6, [r4, #8]
   2cd7c:	strd	r0, [r4, #48]	; 0x30
   2cd80:	bne	2cdb4 <crc32@@Base+0x1366c>
   2cd84:	mov	r1, lr
   2cd88:	mov	r0, r4
   2cd8c:	add	sp, sp, #28
   2cd90:	pop	{r4, r5, r6, r7, lr}
   2cd94:	b	2c384 <crc32@@Base+0x12c3c>
   2cd98:	ldr	r2, [sp, #20]
   2cd9c:	mvn	r0, #0
   2cda0:	ldr	r3, [r5]
   2cda4:	cmp	r2, r3
   2cda8:	bne	2cdb4 <crc32@@Base+0x1366c>
   2cdac:	add	sp, sp, #28
   2cdb0:	pop	{r4, r5, r6, r7, pc}
   2cdb4:	bl	12494 <__stack_chk_fail@plt>
   2cdb8:	andeq	ip, r3, r4, lsl r6
   2cdbc:	subs	r3, r0, #0
   2cdc0:	beq	2cdf8 <crc32@@Base+0x136b0>
   2cdc4:	ldr	r2, [r3, #56]	; 0x38
   2cdc8:	push	{r4, lr}
   2cdcc:	cmp	r2, #0
   2cdd0:	bne	2ce28 <crc32@@Base+0x136e0>
   2cdd4:	ldr	r0, [r3, #4]
   2cdd8:	cmp	r0, #0
   2cddc:	bne	2ce00 <crc32@@Base+0x136b8>
   2cde0:	ldr	r2, [r3, #16]
   2cde4:	cmp	r2, #0
   2cde8:	ldreq	r3, [r3]
   2cdec:	clzeq	r0, r3
   2cdf0:	lsreq	r0, r0, #5
   2cdf4:	pop	{r4, pc}
   2cdf8:	mov	r0, r3
   2cdfc:	bx	lr
   2ce00:	movw	r3, #65044	; 0xfe14
   2ce04:	movt	r3, #4
   2ce08:	mov	r2, #41	; 0x29
   2ce0c:	mov	r1, #1
   2ce10:	ldr	r3, [r3]
   2ce14:	movw	r0, #51412	; 0xc8d4
   2ce18:	movt	r0, #3
   2ce1c:	bl	12578 <fwrite@plt>
   2ce20:	mvn	r0, #0
   2ce24:	pop	{r4, pc}
   2ce28:	movw	r3, #65044	; 0xfe14
   2ce2c:	movt	r3, #4
   2ce30:	mov	r2, #42	; 0x2a
   2ce34:	mov	r1, #1
   2ce38:	ldr	r3, [r3]
   2ce3c:	movw	r0, #51368	; 0xc8a8
   2ce40:	movt	r0, #3
   2ce44:	bl	12578 <fwrite@plt>
   2ce48:	mvn	r0, #0
   2ce4c:	pop	{r4, pc}
   2ce50:	push	{r4, r5, r6, r7, r8, lr}
   2ce54:	mov	r2, #4
   2ce58:	mov	r5, r1
   2ce5c:	movw	r1, #51456	; 0xc900
   2ce60:	movt	r1, #3
   2ce64:	mov	r4, r0
   2ce68:	bl	1217c <strncmp@plt>
   2ce6c:	cmp	r0, #0
   2ce70:	beq	2cea8 <crc32@@Base+0x13760>
   2ce74:	movw	r1, #51464	; 0xc908
   2ce78:	mov	r2, #5
   2ce7c:	movt	r1, #3
   2ce80:	mov	r0, r4
   2ce84:	bl	1217c <strncmp@plt>
   2ce88:	cmp	r0, #0
   2ce8c:	bne	2ceb0 <crc32@@Base+0x13768>
   2ce90:	ldrd	r2, [r5, #8]
   2ce94:	add	r0, r4, #5
   2ce98:	orr	r6, r2, #524288	; 0x80000
   2ce9c:	mov	r7, r3
   2cea0:	strd	r6, [r5, #8]
   2cea4:	pop	{r4, r5, r6, r7, r8, pc}
   2cea8:	add	r0, r4, #4
   2ceac:	pop	{r4, r5, r6, r7, r8, pc}
   2ceb0:	mov	r2, r4
   2ceb4:	movw	r1, #51472	; 0xc910
   2ceb8:	mov	r0, #1
   2cebc:	movt	r1, #3
   2cec0:	bl	12770 <__printf_chk@plt>
   2cec4:	mov	r0, #0
   2cec8:	pop	{r4, r5, r6, r7, r8, pc}
   2cecc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ced0:	sub	sp, sp, #4608	; 0x1200
   2ced4:	sub	sp, sp, #44	; 0x2c
   2ced8:	movw	r3, #61168	; 0xeef0
   2cedc:	movt	r3, #4
   2cee0:	add	ip, sp, #4608	; 0x1200
   2cee4:	str	r3, [sp, #20]
   2cee8:	add	ip, ip, #36	; 0x24
   2ceec:	ldr	r3, [r3]
   2cef0:	mov	r4, r1
   2cef4:	str	r0, [sp, #24]
   2cef8:	mov	r2, #2048	; 0x800
   2cefc:	mov	r1, #0
   2cf00:	add	r0, sp, #96	; 0x60
   2cf04:	str	r3, [ip]
   2cf08:	bl	122e4 <memset@plt>
   2cf0c:	mov	r2, #2496	; 0x9c0
   2cf10:	mov	r1, #0
   2cf14:	add	r0, sp, #2144	; 0x860
   2cf18:	bl	122e4 <memset@plt>
   2cf1c:	add	r0, sp, #2144	; 0x860
   2cf20:	bl	2be10 <crc32@@Base+0x126c8>
   2cf24:	mov	r2, #0
   2cf28:	mov	r1, #2496	; 0x9c0
   2cf2c:	add	r0, sp, #2144	; 0x860
   2cf30:	bl	2beac <crc32@@Base+0x12764>
   2cf34:	mov	r1, #0
   2cf38:	cmp	r0, #0
   2cf3c:	ldr	r0, [r4, #72]	; 0x48
   2cf40:	movweq	r3, #43360	; 0xa960
   2cf44:	movteq	r3, #30
   2cf48:	ldreq	r2, [r3, #4]
   2cf4c:	streq	r2, [r3, #12]
   2cf50:	bl	2bfe4 <crc32@@Base+0x1289c>
   2cf54:	cmp	r0, #0
   2cf58:	beq	2d034 <crc32@@Base+0x138ec>
   2cf5c:	mov	r1, #123	; 0x7b
   2cf60:	bl	12764 <strchr@plt>
   2cf64:	subs	r4, r0, #0
   2cf68:	beq	2d034 <crc32@@Base+0x138ec>
   2cf6c:	movw	r9, #50624	; 0xc5c0
   2cf70:	add	r4, r4, #1
   2cf74:	add	r8, sp, #96	; 0x60
   2cf78:	movt	r9, #3
   2cf7c:	mov	r3, #0
   2cf80:	str	r3, [sp, #8]
   2cf84:	mov	r1, #10
   2cf88:	mov	r0, r4
   2cf8c:	bl	12764 <strchr@plt>
   2cf90:	subs	r7, r0, #0
   2cf94:	beq	2d034 <crc32@@Base+0x138ec>
   2cf98:	ldrb	r3, [r7, #-1]
   2cf9c:	cmp	r3, #13
   2cfa0:	moveq	r3, #0
   2cfa4:	strbeq	r3, [r7, #-1]
   2cfa8:	mov	r3, #0
   2cfac:	strb	r3, [r7], #1
   2cfb0:	ldrb	r3, [r4]
   2cfb4:	cmp	r3, #9
   2cfb8:	cmpne	r3, #32
   2cfbc:	bne	2cfd0 <crc32@@Base+0x13888>
   2cfc0:	ldrb	r3, [r4, #1]!
   2cfc4:	cmp	r3, #9
   2cfc8:	cmpne	r3, #32
   2cfcc:	beq	2cfc0 <crc32@@Base+0x13878>
   2cfd0:	cmp	r3, #91	; 0x5b
   2cfd4:	beq	2d080 <crc32@@Base+0x13938>
   2cfd8:	ldrb	r3, [r4]
   2cfdc:	cmp	r3, #125	; 0x7d
   2cfe0:	beq	2d194 <crc32@@Base+0x13a4c>
   2cfe4:	cmp	r3, #0
   2cfe8:	bne	2cff8 <crc32@@Base+0x138b0>
   2cfec:	mov	r4, r7
   2cff0:	b	2cf84 <crc32@@Base+0x1383c>
   2cff4:	ldrb	r3, [r4, #1]!
   2cff8:	cmp	r3, #9
   2cffc:	cmpne	r3, #32
   2d000:	beq	2cff4 <crc32@@Base+0x138ac>
   2d004:	ldr	r3, [sp, #8]
   2d008:	str	r4, [r8], #64	; 0x40
   2d00c:	add	r3, r3, #1
   2d010:	str	r3, [sp, #8]
   2d014:	b	2cfec <crc32@@Base+0x138a4>
   2d018:	add	r3, sp, #552	; 0x228
   2d01c:	movw	r1, #51684	; 0xc9e4
   2d020:	add	r4, r3, r4, lsl #6
   2d024:	mov	r0, #1
   2d028:	movt	r1, #3
   2d02c:	ldr	r2, [r4, #-456]	; 0xfffffe38
   2d030:	bl	12770 <__printf_chk@plt>
   2d034:	movw	r3, #65044	; 0xfe14
   2d038:	movt	r3, #4
   2d03c:	movw	r0, #51708	; 0xc9fc
   2d040:	mov	r2, #31
   2d044:	ldr	r3, [r3]
   2d048:	movt	r0, #3
   2d04c:	mov	r1, #1
   2d050:	bl	12578 <fwrite@plt>
   2d054:	mvn	r0, #0
   2d058:	add	r3, sp, #4608	; 0x1200
   2d05c:	add	r3, r3, #36	; 0x24
   2d060:	ldr	r2, [r3]
   2d064:	ldr	r3, [sp, #20]
   2d068:	ldr	r3, [r3]
   2d06c:	cmp	r2, r3
   2d070:	bne	2d614 <crc32@@Base+0x13ecc>
   2d074:	add	sp, sp, #4608	; 0x1200
   2d078:	add	sp, sp, #44	; 0x2c
   2d07c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d080:	ldrb	r3, [r4, #1]
   2d084:	add	r4, r4, #1
   2d088:	mov	sl, #48	; 0x30
   2d08c:	cmp	r3, #9
   2d090:	cmpne	r3, #32
   2d094:	ldrbeq	r3, [r4, #1]!
   2d098:	beq	2d08c <crc32@@Base+0x13944>
   2d09c:	ldr	r5, [pc, #1396]	; 2d618 <crc32@@Base+0x13ed0>
   2d0a0:	mov	r6, #0
   2d0a4:	mov	r0, r5
   2d0a8:	bl	125c0 <strlen@plt>
   2d0ac:	mov	r1, r4
   2d0b0:	mov	r2, r0
   2d0b4:	mov	fp, r0
   2d0b8:	mov	r0, r5
   2d0bc:	bl	1217c <strncmp@plt>
   2d0c0:	cmp	r0, #0
   2d0c4:	beq	2d0f0 <crc32@@Base+0x139a8>
   2d0c8:	add	r6, r6, #1
   2d0cc:	add	r5, r5, #48	; 0x30
   2d0d0:	cmp	r6, #10
   2d0d4:	bne	2d0a4 <crc32@@Base+0x1395c>
   2d0d8:	mov	r2, r4
   2d0dc:	movw	r1, #51508	; 0xc934
   2d0e0:	mov	r0, #1
   2d0e4:	movt	r1, #3
   2d0e8:	bl	12770 <__printf_chk@plt>
   2d0ec:	b	2d034 <crc32@@Base+0x138ec>
   2d0f0:	mla	r6, sl, r6, r9
   2d0f4:	add	r4, r4, fp
   2d0f8:	ldr	r3, [r6, #144]	; 0x90
   2d0fc:	cmp	r3, #0
   2d100:	beq	2d138 <crc32@@Base+0x139f0>
   2d104:	mov	r0, r4
   2d108:	mov	r1, r8
   2d10c:	blx	r3
   2d110:	mov	r4, r0
   2d114:	cmp	r4, #0
   2d118:	beq	2d034 <crc32@@Base+0x138ec>
   2d11c:	ldrb	r3, [r4]
   2d120:	cmp	r3, #93	; 0x5d
   2d124:	beq	2d184 <crc32@@Base+0x13a3c>
   2d128:	cmp	r3, #44	; 0x2c
   2d12c:	ldrbeq	r3, [r4, #1]
   2d130:	addeq	r4, r4, #1
   2d134:	b	2d08c <crc32@@Base+0x13944>
   2d138:	ldr	r1, [r6, #136]	; 0x88
   2d13c:	mov	ip, #1
   2d140:	sub	r3, r1, #32
   2d144:	rsb	r0, r1, #32
   2d148:	lsl	r3, ip, r3
   2d14c:	str	r3, [sp, #4]
   2d150:	ldr	lr, [sp, #4]
   2d154:	lsl	r1, ip, r1
   2d158:	str	r1, [sp]
   2d15c:	orr	r0, lr, ip, lsr r0
   2d160:	str	r0, [sp, #4]
   2d164:	ldrd	r2, [r8, #8]
   2d168:	ldrd	r0, [sp]
   2d16c:	orr	r0, r0, r2
   2d170:	orr	r1, r1, r3
   2d174:	mov	r2, r0
   2d178:	mov	r3, r1
   2d17c:	strd	r2, [r8, #8]
   2d180:	b	2d114 <crc32@@Base+0x139cc>
   2d184:	add	r4, r4, #1
   2d188:	ldrb	r3, [r4]
   2d18c:	cmp	r3, #125	; 0x7d
   2d190:	bne	2cfe4 <crc32@@Base+0x1389c>
   2d194:	ldr	r3, [sp, #8]
   2d198:	cmp	r3, #0
   2d19c:	beq	2d54c <crc32@@Base+0x13e04>
   2d1a0:	add	r3, sp, #96	; 0x60
   2d1a4:	str	r3, [sp, #28]
   2d1a8:	str	r3, [sp, #12]
   2d1ac:	mov	r3, #0
   2d1b0:	str	r3, [sp, #16]
   2d1b4:	b	2d1dc <crc32@@Base+0x13a94>
   2d1b8:	ldr	r2, [sp, #12]
   2d1bc:	ldr	r3, [sp, #16]
   2d1c0:	add	r2, r2, #64	; 0x40
   2d1c4:	str	r2, [sp, #12]
   2d1c8:	ldr	r2, [sp, #8]
   2d1cc:	add	r3, r3, #1
   2d1d0:	str	r3, [sp, #16]
   2d1d4:	cmp	r2, r3
   2d1d8:	beq	2d39c <crc32@@Base+0x13c54>
   2d1dc:	ldr	r3, [sp, #12]
   2d1e0:	mov	r1, #0
   2d1e4:	ldrd	r2, [r3, #8]
   2d1e8:	and	r0, r2, #512	; 0x200
   2d1ec:	orrs	r3, r0, r1
   2d1f0:	beq	2d1b8 <crc32@@Base+0x13a70>
   2d1f4:	add	r3, sp, #2144	; 0x860
   2d1f8:	mov	r1, #0
   2d1fc:	add	r3, r3, #8
   2d200:	mov	r2, #132	; 0x84
   2d204:	sub	r0, r3, #4
   2d208:	mov	r9, r1
   2d20c:	str	r1, [sp]
   2d210:	bl	122e4 <memset@plt>
   2d214:	ldr	r3, [sp, #16]
   2d218:	add	r2, sp, #96	; 0x60
   2d21c:	add	r1, sp, #2160	; 0x870
   2d220:	add	r8, sp, #2288	; 0x8f0
   2d224:	add	r6, sp, #96	; 0x60
   2d228:	ldr	r7, [r2, r3, lsl #6]
   2d22c:	movw	r2, #51536	; 0xc950
   2d230:	movw	r3, #51544	; 0xc958
   2d234:	movt	r2, #3
   2d238:	movt	r3, #3
   2d23c:	str	r2, [sp, #2144]	; 0x860
   2d240:	str	r3, [sp, #2168]	; 0x878
   2d244:	movw	r2, #51552	; 0xc960
   2d248:	movw	r3, #51560	; 0xc968
   2d24c:	movt	r2, #3
   2d250:	movt	r3, #3
   2d254:	str	r2, [sp, #2192]	; 0x890
   2d258:	str	r3, [sp, #2216]	; 0x8a8
   2d25c:	movw	r2, #51568	; 0xc970
   2d260:	movw	r3, #51580	; 0xc97c
   2d264:	movt	r2, #3
   2d268:	movt	r3, #3
   2d26c:	str	r2, [sp, #2240]	; 0x8c0
   2d270:	str	r3, [sp, #2264]	; 0x8d8
   2d274:	mov	r2, #256	; 0x100
   2d278:	mov	r3, #0
   2d27c:	strd	r2, [r1]
   2d280:	add	r1, sp, #2176	; 0x880
   2d284:	add	r1, r1, #8
   2d288:	strd	r2, [r1]
   2d28c:	add	r1, sp, #2208	; 0x8a0
   2d290:	strd	r2, [r1]
   2d294:	add	r1, sp, #2224	; 0x8b0
   2d298:	add	r1, r1, #8
   2d29c:	strd	r2, [r1]
   2d2a0:	add	r1, sp, #2192	; 0x890
   2d2a4:	add	r1, r1, #8
   2d2a8:	mov	r2, #262144	; 0x40000
   2d2ac:	mov	r3, #0
   2d2b0:	strd	r2, [r1]
   2d2b4:	add	r1, sp, #2224	; 0x8b0
   2d2b8:	strd	r2, [r1]
   2d2bc:	add	r1, sp, #2256	; 0x8d0
   2d2c0:	mov	r2, #1280	; 0x500
   2d2c4:	mov	r3, #0
   2d2c8:	strd	r2, [r1]
   2d2cc:	add	r1, sp, #2272	; 0x8e0
   2d2d0:	add	r1, r1, #8
   2d2d4:	mov	r2, #1792	; 0x700
   2d2d8:	mov	r3, #0
   2d2dc:	strd	r2, [r1]
   2d2e0:	ldrd	r4, [r6, #8]
   2d2e4:	mov	r3, #0
   2d2e8:	and	r2, r4, #8192	; 0x2000
   2d2ec:	orrs	r3, r2, r3
   2d2f0:	beq	2d354 <crc32@@Base+0x13c0c>
   2d2f4:	add	fp, sp, #2144	; 0x860
   2d2f8:	ldr	sl, [fp]
   2d2fc:	mov	r0, sl
   2d300:	bl	125c0 <strlen@plt>
   2d304:	mov	r1, sl
   2d308:	mov	r2, r0
   2d30c:	mov	r0, r7
   2d310:	bl	1217c <strncmp@plt>
   2d314:	cmp	r0, #0
   2d318:	bne	2d33c <crc32@@Base+0x13bf4>
   2d31c:	mov	r1, #1
   2d320:	str	r1, [sp]
   2d324:	ldrd	r0, [fp, #16]
   2d328:	ldrd	r2, [fp, #8]
   2d32c:	strd	r0, [r6, #16]
   2d330:	orr	r4, r4, r2
   2d334:	orr	r5, r5, r3
   2d338:	strd	r4, [r6, #8]
   2d33c:	add	fp, fp, #24
   2d340:	cmp	fp, r8
   2d344:	bne	2d2f8 <crc32@@Base+0x13bb0>
   2d348:	ldr	r3, [sp]
   2d34c:	cmp	r3, #0
   2d350:	beq	2d384 <crc32@@Base+0x13c3c>
   2d354:	ldr	r3, [sp, #8]
   2d358:	add	r9, r9, #1
   2d35c:	add	r6, r6, #64	; 0x40
   2d360:	cmp	r3, r9
   2d364:	bne	2d2e0 <crc32@@Base+0x13b98>
   2d368:	ldr	r3, [sp]
   2d36c:	cmp	r3, #0
   2d370:	bne	2d1b8 <crc32@@Base+0x13a70>
   2d374:	movw	r0, #51624	; 0xc9a8
   2d378:	movt	r0, #3
   2d37c:	bl	1226c <puts@plt>
   2d380:	b	2d034 <crc32@@Base+0x138ec>
   2d384:	mov	r2, r7
   2d388:	movw	r1, #51588	; 0xc984
   2d38c:	mov	r0, #1
   2d390:	movt	r1, #3
   2d394:	bl	12770 <__printf_chk@plt>
   2d398:	b	2d034 <crc32@@Base+0x138ec>
   2d39c:	add	r7, sp, #96	; 0x60
   2d3a0:	mvn	sl, #0
   2d3a4:	mov	r6, #0
   2d3a8:	mov	r8, r2
   2d3ac:	b	2d3d0 <crc32@@Base+0x13c88>
   2d3b0:	orr	r2, r2, r3
   2d3b4:	cmn	sl, #1
   2d3b8:	cmpne	r2, #0
   2d3bc:	bne	2d3f8 <crc32@@Base+0x13cb0>
   2d3c0:	add	r6, r6, #1
   2d3c4:	add	r7, r7, #64	; 0x40
   2d3c8:	cmp	r8, r6
   2d3cc:	beq	2d484 <crc32@@Base+0x13d3c>
   2d3d0:	ldrd	r4, [r7, #8]
   2d3d4:	mov	r1, #0
   2d3d8:	mov	r3, #0
   2d3dc:	and	r0, r4, #8192	; 0x2000
   2d3e0:	and	r2, r4, #4096	; 0x1000
   2d3e4:	orrs	r1, r0, r1
   2d3e8:	beq	2d3b0 <crc32@@Base+0x13c68>
   2d3ec:	orrs	r3, r2, r3
   2d3f0:	mov	sl, r6
   2d3f4:	beq	2d3c0 <crc32@@Base+0x13c78>
   2d3f8:	lsl	r5, r6, #6
   2d3fc:	add	r3, sp, #96	; 0x60
   2d400:	add	r4, r3, r5
   2d404:	add	r3, sp, #552	; 0x228
   2d408:	add	r9, r3, sl, lsl #6
   2d40c:	add	lr, sp, #32
   2d410:	mov	r5, r4
   2d414:	sub	ip, r9, #456	; 0x1c8
   2d418:	ldm	r4!, {r0, r1, r2, r3}
   2d41c:	mov	fp, lr
   2d420:	mov	r9, ip
   2d424:	stmia	lr!, {r0, r1, r2, r3}
   2d428:	ldm	r4!, {r0, r1, r2, r3}
   2d42c:	stmia	lr!, {r0, r1, r2, r3}
   2d430:	ldm	r4!, {r0, r1, r2, r3}
   2d434:	stmia	lr!, {r0, r1, r2, r3}
   2d438:	ldm	r4, {r0, r1, r2, r3}
   2d43c:	stm	lr, {r0, r1, r2, r3}
   2d440:	ldm	ip!, {r0, r1, r2, r3}
   2d444:	stmia	r5!, {r0, r1, r2, r3}
   2d448:	ldm	ip!, {r0, r1, r2, r3}
   2d44c:	stmia	r5!, {r0, r1, r2, r3}
   2d450:	ldm	ip!, {r0, r1, r2, r3}
   2d454:	stmia	r5!, {r0, r1, r2, r3}
   2d458:	ldm	ip, {r0, r1, r2, r3}
   2d45c:	stm	r4, {r0, r1, r2, r3}
   2d460:	ldm	fp!, {r0, r1, r2, r3}
   2d464:	stmia	r9!, {r0, r1, r2, r3}
   2d468:	ldm	fp!, {r0, r1, r2, r3}
   2d46c:	stmia	r9!, {r0, r1, r2, r3}
   2d470:	ldm	fp!, {r0, r1, r2, r3}
   2d474:	stmia	r9!, {r0, r1, r2, r3}
   2d478:	ldm	lr, {r0, r1, r2, r3}
   2d47c:	stm	ip, {r0, r1, r2, r3}
   2d480:	b	2d3c0 <crc32@@Base+0x13c78>
   2d484:	movw	r5, #19526	; 0x4c46
   2d488:	mov	r4, #0
   2d48c:	movt	r5, #32581	; 0x7f45
   2d490:	ldr	r7, [sp, #8]
   2d494:	ldr	r6, [sp, #28]
   2d498:	b	2d508 <crc32@@Base+0x13dc0>
   2d49c:	mov	r2, #4
   2d4a0:	add	r1, sp, #32
   2d4a4:	bl	12344 <read@plt>
   2d4a8:	cmp	r0, #4
   2d4ac:	bne	2d018 <crc32@@Base+0x138d0>
   2d4b0:	mov	r0, r8
   2d4b4:	bl	12314 <close@plt>
   2d4b8:	ldr	r3, [sp, #32]
   2d4bc:	mov	r1, #4080	; 0xff0
   2d4c0:	movt	r1, #9
   2d4c4:	rev	r2, r3
   2d4c8:	cmp	r2, r1
   2d4cc:	beq	2d608 <crc32@@Base+0x13ec0>
   2d4d0:	movw	r1, #51084	; 0xc78c
   2d4d4:	cmp	r2, r5
   2d4d8:	movt	r1, #2
   2d4dc:	movw	r3, #51204	; 0xc804
   2d4e0:	movt	r3, #2
   2d4e4:	movne	r3, r1
   2d4e8:	mov	r0, r6
   2d4ec:	blx	r3
   2d4f0:	cmp	r0, #0
   2d4f4:	bne	2d034 <crc32@@Base+0x138ec>
   2d4f8:	add	r4, r4, #1
   2d4fc:	add	r6, r6, #64	; 0x40
   2d500:	cmp	r7, r4
   2d504:	beq	2d54c <crc32@@Base+0x13e04>
   2d508:	ldrd	r2, [r6, #8]
   2d50c:	mov	r1, #0
   2d510:	and	r0, r2, #512	; 0x200
   2d514:	orrs	r3, r0, r1
   2d518:	bne	2d4f8 <crc32@@Base+0x13db0>
   2d51c:	add	r3, sp, #96	; 0x60
   2d520:	mov	r1, #0
   2d524:	ldr	r0, [r3, r4, lsl #6]
   2d528:	bl	12434 <open@plt>
   2d52c:	subs	r8, r0, #0
   2d530:	bge	2d49c <crc32@@Base+0x13d54>
   2d534:	ldr	r2, [r6]
   2d538:	movw	r1, #51660	; 0xc9cc
   2d53c:	mov	r0, #1
   2d540:	movt	r1, #3
   2d544:	bl	12770 <__printf_chk@plt>
   2d548:	b	2d034 <crc32@@Base+0x138ec>
   2d54c:	movw	r5, #43360	; 0xa960
   2d550:	movt	r5, #30
   2d554:	mov	r2, #0
   2d558:	ldr	lr, [r5, #12]
   2d55c:	add	r3, lr, #32
   2d560:	add	r0, lr, #72	; 0x48
   2d564:	ldr	r1, [r3], #4
   2d568:	cmp	r0, r3
   2d56c:	add	r2, r2, r1
   2d570:	bne	2d564 <crc32@@Base+0x13e1c>
   2d574:	ldr	ip, [r5, #8]
   2d578:	mvn	r2, r2
   2d57c:	str	r2, [lr, #72]	; 0x48
   2d580:	cmp	ip, #0
   2d584:	beq	2d5ac <crc32@@Base+0x13e64>
   2d588:	add	r0, ip, #60	; 0x3c
   2d58c:	mov	r3, ip
   2d590:	mov	r2, #0
   2d594:	ldr	r1, [r3], #4
   2d598:	cmp	r0, r3
   2d59c:	add	r2, r2, r1
   2d5a0:	bne	2d594 <crc32@@Base+0x13e4c>
   2d5a4:	mvn	r2, r2
   2d5a8:	str	r2, [ip, #60]	; 0x3c
   2d5ac:	mov	r2, #0
   2d5b0:	ldr	r0, [sp, #24]
   2d5b4:	mov	r1, r2
   2d5b8:	bl	124f4 <lseek@plt>
   2d5bc:	cmp	r0, #0
   2d5c0:	bne	2d034 <crc32@@Base+0x138ec>
   2d5c4:	ldrd	r4, [r5]
   2d5c8:	cmp	r4, #0
   2d5cc:	ldrne	r6, [sp, #24]
   2d5d0:	bne	2d5e4 <crc32@@Base+0x13e9c>
   2d5d4:	b	2d600 <crc32@@Base+0x13eb8>
   2d5d8:	subs	r4, r4, r0
   2d5dc:	add	r5, r5, r0
   2d5e0:	beq	2d600 <crc32@@Base+0x13eb8>
   2d5e4:	mov	r2, r4
   2d5e8:	mov	r1, r5
   2d5ec:	mov	r0, r6
   2d5f0:	bl	12608 <write@plt>
   2d5f4:	cmp	r0, #0
   2d5f8:	bge	2d5d8 <crc32@@Base+0x13e90>
   2d5fc:	b	2d034 <crc32@@Base+0x138ec>
   2d600:	mov	r0, #0
   2d604:	b	2d058 <crc32@@Base+0x13910>
   2d608:	movw	r3, #52228	; 0xcc04
   2d60c:	movt	r3, #2
   2d610:	b	2d4e8 <crc32@@Base+0x13da0>
   2d614:	bl	12494 <__stack_chk_fail@plt>
   2d618:	andeq	ip, r3, r8, lsr #12
   2d61c:	ldr	r2, [r0]
   2d620:	movw	r1, #65261	; 0xfeed
   2d624:	push	{lr}		; (str lr, [sp, #-4]!)
   2d628:	ubfx	lr, r2, #8, #8
   2d62c:	lsr	r3, r2, #24
   2d630:	ubfx	ip, r2, #16, #8
   2d634:	orr	r3, r3, r2, lsl #24
   2d638:	movt	r1, #53261	; 0xd00d
   2d63c:	orr	r3, r3, lr, lsl #16
   2d640:	orr	r3, r3, ip, lsl #8
   2d644:	cmp	r3, r1
   2d648:	beq	2d684 <crc32@@Base+0x13f3c>
   2d64c:	movw	r2, #274	; 0x112
   2d650:	movt	r2, #12274	; 0x2ff2
   2d654:	cmp	r3, r2
   2d658:	bne	2d6d4 <crc32@@Base+0x13f8c>
   2d65c:	ldr	r2, [r0, #36]	; 0x24
   2d660:	ubfx	r0, r2, #8, #8
   2d664:	ubfx	r1, r2, #16, #8
   2d668:	lsr	r3, r2, #24
   2d66c:	orr	r3, r3, r2, lsl #24
   2d670:	orr	r3, r3, r0, lsl #16
   2d674:	orrs	r3, r3, r1, lsl #8
   2d678:	movne	r0, #0
   2d67c:	mvneq	r0, #6
   2d680:	pop	{pc}		; (ldr pc, [sp], #4)
   2d684:	ldr	r2, [r0, #20]
   2d688:	ubfx	ip, r2, #8, #8
   2d68c:	ubfx	r1, r2, #16, #8
   2d690:	lsr	r3, r2, #24
   2d694:	orr	r3, r3, r2, lsl #24
   2d698:	orr	r3, r3, ip, lsl #16
   2d69c:	orr	r3, r3, r1, lsl #8
   2d6a0:	cmp	r3, #1
   2d6a4:	bls	2d6dc <crc32@@Base+0x13f94>
   2d6a8:	ldr	r2, [r0, #24]
   2d6ac:	ubfx	r0, r2, #8, #8
   2d6b0:	ubfx	r1, r2, #16, #8
   2d6b4:	lsr	r3, r2, #24
   2d6b8:	orr	r3, r3, r2, lsl #24
   2d6bc:	orr	r3, r3, r0, lsl #16
   2d6c0:	orr	r3, r3, r1, lsl #8
   2d6c4:	cmp	r3, #18
   2d6c8:	movcc	r0, #0
   2d6cc:	mvncs	r0, #9
   2d6d0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d6d4:	mvn	r0, #8
   2d6d8:	pop	{pc}		; (ldr pc, [sp], #4)
   2d6dc:	mvn	r0, #9
   2d6e0:	pop	{pc}		; (ldr pc, [sp], #4)
   2d6e4:	ldr	ip, [r0, #8]
   2d6e8:	push	{r4, r5, r6, lr}
   2d6ec:	ubfx	r4, ip, #8, #8
   2d6f0:	lsr	r3, ip, #24
   2d6f4:	ubfx	lr, ip, #16, #8
   2d6f8:	orr	r3, r3, ip, lsl #24
   2d6fc:	orr	r3, r3, r4, lsl #16
   2d700:	orr	r3, r3, lr, lsl #8
   2d704:	adds	r3, r1, r3
   2d708:	bcs	2d790 <crc32@@Base+0x14048>
   2d70c:	adds	r4, r3, r2
   2d710:	bcs	2d790 <crc32@@Base+0x14048>
   2d714:	ldr	lr, [r0, #4]
   2d718:	ubfx	r6, lr, #8, #8
   2d71c:	ubfx	r5, lr, #16, #8
   2d720:	lsr	ip, lr, #24
   2d724:	orr	ip, ip, lr, lsl #24
   2d728:	orr	ip, ip, r6, lsl #16
   2d72c:	orr	ip, ip, r5, lsl #8
   2d730:	cmp	r4, ip
   2d734:	bhi	2d790 <crc32@@Base+0x14048>
   2d738:	ldr	lr, [r0, #20]
   2d73c:	ubfx	r5, lr, #8, #8
   2d740:	ubfx	r4, lr, #16, #8
   2d744:	lsr	ip, lr, #24
   2d748:	orr	ip, ip, lr, lsl #24
   2d74c:	orr	ip, ip, r5, lsl #16
   2d750:	orr	ip, ip, r4, lsl #8
   2d754:	cmp	ip, #16
   2d758:	bls	2d788 <crc32@@Base+0x14040>
   2d75c:	adds	r1, r1, r2
   2d760:	bcs	2d790 <crc32@@Base+0x14048>
   2d764:	ldr	ip, [r0, #36]	; 0x24
   2d768:	ubfx	r4, ip, #8, #8
   2d76c:	ubfx	lr, ip, #16, #8
   2d770:	lsr	r2, ip, #24
   2d774:	orr	r2, r2, ip, lsl #24
   2d778:	orr	r2, r2, r4, lsl #16
   2d77c:	orr	r2, r2, lr, lsl #8
   2d780:	cmp	r1, r2
   2d784:	bhi	2d790 <crc32@@Base+0x14048>
   2d788:	add	r0, r0, r3
   2d78c:	pop	{r4, r5, r6, pc}
   2d790:	mov	r0, #0
   2d794:	pop	{r4, r5, r6, pc}
   2d798:	push	{r4, r5, r6, r7, r8, lr}
   2d79c:	mov	r6, r2
   2d7a0:	mvn	r3, #7
   2d7a4:	mov	r2, #4
   2d7a8:	str	r3, [r6]
   2d7ac:	mov	r7, r0
   2d7b0:	mov	r8, r1
   2d7b4:	bl	2d6e4 <crc32@@Base+0x13f9c>
   2d7b8:	cmp	r0, #0
   2d7bc:	beq	2d844 <crc32@@Base+0x140fc>
   2d7c0:	ldr	r3, [r0]
   2d7c4:	mvn	r2, #10
   2d7c8:	str	r2, [r6]
   2d7cc:	add	r4, r8, #4
   2d7d0:	ubfx	r1, r3, #8, #8
   2d7d4:	ubfx	r2, r3, #16, #8
   2d7d8:	lsr	r5, r3, #24
   2d7dc:	orr	r5, r5, r3, lsl #24
   2d7e0:	orr	r5, r5, r1, lsl #16
   2d7e4:	orr	r5, r5, r2, lsl #8
   2d7e8:	sub	r3, r5, #1
   2d7ec:	cmp	r3, #8
   2d7f0:	ldrls	pc, [pc, r3, lsl #2]
   2d7f4:	b	2d844 <crc32@@Base+0x140fc>
   2d7f8:	andeq	sp, r2, r8, lsr #16
   2d7fc:	andeq	sp, r2, ip, asr #17
   2d800:	andeq	sp, r2, r0, asr r8
   2d804:	andeq	sp, r2, ip, asr #17
   2d808:	andeq	sp, r2, r4, asr #16
   2d80c:	andeq	sp, r2, r4, asr #16
   2d810:	andeq	sp, r2, r4, asr #16
   2d814:	andeq	sp, r2, r4, asr #16
   2d818:	andeq	sp, r2, ip, asr #17
   2d81c:	ldrb	r3, [r0]
   2d820:	cmp	r3, #0
   2d824:	beq	2d8cc <crc32@@Base+0x14184>
   2d828:	mov	r2, #1
   2d82c:	mov	r1, r4
   2d830:	mov	r0, r7
   2d834:	add	r4, r4, r2
   2d838:	bl	2d6e4 <crc32@@Base+0x13f9c>
   2d83c:	cmp	r0, #0
   2d840:	bne	2d81c <crc32@@Base+0x140d4>
   2d844:	mov	r5, #9
   2d848:	mov	r0, r5
   2d84c:	pop	{r4, r5, r6, r7, r8, pc}
   2d850:	mov	r1, r4
   2d854:	mov	r2, #4
   2d858:	mov	r0, r7
   2d85c:	bl	2d6e4 <crc32@@Base+0x13f9c>
   2d860:	cmp	r0, #0
   2d864:	beq	2d844 <crc32@@Base+0x140fc>
   2d868:	ldr	ip, [r0]
   2d86c:	add	r1, r8, #12
   2d870:	ldr	r0, [r7, #20]
   2d874:	ubfx	r3, ip, #8, #8
   2d878:	lsr	r2, ip, #24
   2d87c:	ubfx	lr, r0, #8, #8
   2d880:	orr	r2, r2, ip, lsl #24
   2d884:	ubfx	ip, ip, #16, #8
   2d888:	orr	r2, r2, r3, lsl #16
   2d88c:	lsr	r3, r0, #24
   2d890:	orr	r3, r3, r0, lsl #24
   2d894:	ubfx	r0, r0, #16, #8
   2d898:	orr	r3, r3, lr, lsl #16
   2d89c:	orr	r2, r2, ip, lsl #8
   2d8a0:	orr	r0, r3, r0, lsl #8
   2d8a4:	add	r4, r2, r1
   2d8a8:	cmp	r0, #15
   2d8ac:	movls	r3, #1
   2d8b0:	movhi	r3, #0
   2d8b4:	cmp	r2, #7
   2d8b8:	movls	r3, #0
   2d8bc:	cmp	r3, #0
   2d8c0:	beq	2d8cc <crc32@@Base+0x14184>
   2d8c4:	tst	r1, #7
   2d8c8:	addne	r4, r4, #4
   2d8cc:	mov	r0, r7
   2d8d0:	sub	r2, r4, r8
   2d8d4:	mov	r1, r8
   2d8d8:	bl	2d6e4 <crc32@@Base+0x13f9c>
   2d8dc:	cmp	r0, #0
   2d8e0:	beq	2d844 <crc32@@Base+0x140fc>
   2d8e4:	add	r4, r4, #3
   2d8e8:	mov	r0, r5
   2d8ec:	bic	r4, r4, #3
   2d8f0:	str	r4, [r6]
   2d8f4:	pop	{r4, r5, r6, r7, r8, pc}
   2d8f8:	push	{lr}		; (str lr, [sp, #-4]!)
   2d8fc:	subs	r3, r1, #0
   2d900:	sub	sp, sp, #12
   2d904:	str	r1, [sp, #4]
   2d908:	blt	2d930 <crc32@@Base+0x141e8>
   2d90c:	tst	r3, #3
   2d910:	bne	2d930 <crc32@@Base+0x141e8>
   2d914:	add	r2, sp, #4
   2d918:	bl	2d798 <crc32@@Base+0x14050>
   2d91c:	cmp	r0, #1
   2d920:	bne	2d930 <crc32@@Base+0x141e8>
   2d924:	ldr	r0, [sp, #4]
   2d928:	add	sp, sp, #12
   2d92c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d930:	mvn	r0, #3
   2d934:	b	2d928 <crc32@@Base+0x141e0>
   2d938:	push	{lr}		; (str lr, [sp, #-4]!)
   2d93c:	subs	r3, r1, #0
   2d940:	sub	sp, sp, #12
   2d944:	str	r1, [sp, #4]
   2d948:	blt	2d970 <crc32@@Base+0x14228>
   2d94c:	tst	r3, #3
   2d950:	bne	2d970 <crc32@@Base+0x14228>
   2d954:	add	r2, sp, #4
   2d958:	bl	2d798 <crc32@@Base+0x14050>
   2d95c:	cmp	r0, #3
   2d960:	bne	2d970 <crc32@@Base+0x14228>
   2d964:	ldr	r0, [sp, #4]
   2d968:	add	sp, sp, #12
   2d96c:	pop	{pc}		; (ldr pc, [sp], #4)
   2d970:	mvn	r0, #3
   2d974:	b	2d968 <crc32@@Base+0x14220>
   2d978:	push	{r4, r5, r6, r7, lr}
   2d97c:	movw	r6, #61168	; 0xeef0
   2d980:	movt	r6, #4
   2d984:	sub	sp, sp, #12
   2d988:	cmp	r1, #0
   2d98c:	mov	r4, #0
   2d990:	ldr	r3, [r6]
   2d994:	mov	r5, r2
   2d998:	str	r4, [sp]
   2d99c:	mov	r7, r0
   2d9a0:	str	r3, [sp, #4]
   2d9a4:	bge	2da44 <crc32@@Base+0x142fc>
   2d9a8:	mov	r2, sp
   2d9ac:	mov	r1, r4
   2d9b0:	mov	r0, r7
   2d9b4:	bl	2d798 <crc32@@Base+0x14050>
   2d9b8:	cmp	r0, #2
   2d9bc:	beq	2d9d8 <crc32@@Base+0x14290>
   2d9c0:	cmp	r0, #9
   2d9c4:	beq	2da28 <crc32@@Base+0x142e0>
   2d9c8:	cmp	r0, #1
   2d9cc:	beq	2d9fc <crc32@@Base+0x142b4>
   2d9d0:	ldr	r4, [sp]
   2d9d4:	b	2d9a8 <crc32@@Base+0x14260>
   2d9d8:	cmp	r5, #0
   2d9dc:	beq	2d9d0 <crc32@@Base+0x14288>
   2d9e0:	ldr	r3, [r5]
   2d9e4:	sub	r3, r3, #1
   2d9e8:	str	r3, [r5]
   2d9ec:	cmp	r3, #0
   2d9f0:	bge	2d9d0 <crc32@@Base+0x14288>
   2d9f4:	ldr	r4, [sp]
   2d9f8:	b	2da0c <crc32@@Base+0x142c4>
   2d9fc:	cmp	r5, #0
   2da00:	ldrne	r3, [r5]
   2da04:	addne	r3, r3, #1
   2da08:	strne	r3, [r5]
   2da0c:	ldr	r2, [sp, #4]
   2da10:	mov	r0, r4
   2da14:	ldr	r3, [r6]
   2da18:	cmp	r2, r3
   2da1c:	bne	2da64 <crc32@@Base+0x1431c>
   2da20:	add	sp, sp, #12
   2da24:	pop	{r4, r5, r6, r7, pc}
   2da28:	ldr	r4, [sp]
   2da2c:	cmp	r4, #0
   2da30:	bge	2da5c <crc32@@Base+0x14314>
   2da34:	cmp	r5, #0
   2da38:	cmneq	r4, #8
   2da3c:	mvneq	r4, #0
   2da40:	b	2da0c <crc32@@Base+0x142c4>
   2da44:	bl	2d8f8 <crc32@@Base+0x141b0>
   2da48:	cmp	r0, #0
   2da4c:	mov	r4, r0
   2da50:	str	r0, [sp]
   2da54:	bge	2d9a8 <crc32@@Base+0x14260>
   2da58:	b	2da0c <crc32@@Base+0x142c4>
   2da5c:	mvn	r4, #0
   2da60:	b	2da0c <crc32@@Base+0x142c4>
   2da64:	bl	12494 <__stack_chk_fail@plt>
   2da68:	push	{r4, lr}
   2da6c:	movw	r4, #61168	; 0xeef0
   2da70:	movt	r4, #4
   2da74:	sub	sp, sp, #8
   2da78:	add	r2, sp, #8
   2da7c:	mov	ip, #0
   2da80:	ldr	r3, [r4]
   2da84:	str	ip, [r2, #-8]!
   2da88:	str	r3, [sp, #4]
   2da8c:	bl	2d978 <crc32@@Base+0x14230>
   2da90:	cmp	r0, #0
   2da94:	blt	2dabc <crc32@@Base+0x14374>
   2da98:	ldr	r3, [sp]
   2da9c:	cmp	r3, #1
   2daa0:	mvnne	r0, #0
   2daa4:	ldr	r2, [sp, #4]
   2daa8:	ldr	r3, [r4]
   2daac:	cmp	r2, r3
   2dab0:	bne	2dac4 <crc32@@Base+0x1437c>
   2dab4:	add	sp, sp, #8
   2dab8:	pop	{r4, pc}
   2dabc:	mvn	r0, #0
   2dac0:	b	2daa4 <crc32@@Base+0x1435c>
   2dac4:	bl	12494 <__stack_chk_fail@plt>
   2dac8:	push	{r4, r5, r6, lr}
   2dacc:	movw	r6, #61168	; 0xeef0
   2dad0:	movt	r6, #4
   2dad4:	sub	sp, sp, #8
   2dad8:	add	r4, sp, #8
   2dadc:	mov	r2, #1
   2dae0:	ldr	r3, [r6]
   2dae4:	mov	r5, r0
   2dae8:	str	r2, [r4, #-8]!
   2daec:	str	r3, [sp, #4]
   2daf0:	b	2db08 <crc32@@Base+0x143c0>
   2daf4:	ldr	r3, [sp]
   2daf8:	cmp	r3, #0
   2dafc:	ble	2db1c <crc32@@Base+0x143d4>
   2db00:	cmp	r3, #1
   2db04:	beq	2db38 <crc32@@Base+0x143f0>
   2db08:	mov	r2, r4
   2db0c:	mov	r0, r5
   2db10:	bl	2d978 <crc32@@Base+0x14230>
   2db14:	subs	r1, r0, #0
   2db18:	bge	2daf4 <crc32@@Base+0x143ac>
   2db1c:	mvn	r0, #0
   2db20:	ldr	r2, [sp, #4]
   2db24:	ldr	r3, [r6]
   2db28:	cmp	r2, r3
   2db2c:	bne	2db40 <crc32@@Base+0x143f8>
   2db30:	add	sp, sp, #8
   2db34:	pop	{r4, r5, r6, pc}
   2db38:	mov	r0, r1
   2db3c:	b	2db20 <crc32@@Base+0x143d8>
   2db40:	bl	12494 <__stack_chk_fail@plt>
   2db44:	push	{r4, r5, r6, r7, r8, lr}
   2db48:	mov	r4, r0
   2db4c:	mov	r0, r2
   2db50:	mov	r5, r1
   2db54:	mov	r7, r2
   2db58:	bl	125c0 <strlen@plt>
   2db5c:	add	r6, r0, #1
   2db60:	sub	r5, r5, r6
   2db64:	adds	r5, r4, r5
   2db68:	bcc	2db7c <crc32@@Base+0x14434>
   2db6c:	b	2db9c <crc32@@Base+0x14454>
   2db70:	add	r4, r4, #1
   2db74:	cmp	r5, r4
   2db78:	bcc	2db9c <crc32@@Base+0x14454>
   2db7c:	mov	r2, r6
   2db80:	mov	r1, r7
   2db84:	mov	r0, r4
   2db88:	bl	126c8 <memcmp@plt>
   2db8c:	cmp	r0, #0
   2db90:	bne	2db70 <crc32@@Base+0x14428>
   2db94:	mov	r0, r4
   2db98:	pop	{r4, r5, r6, r7, r8, pc}
   2db9c:	mov	r0, #0
   2dba0:	pop	{r4, r5, r6, r7, r8, pc}
   2dba4:	push	{r4, r5, r6, r7, r8, lr}
   2dba8:	mov	r6, r1
   2dbac:	mov	r5, r2
   2dbb0:	mov	r4, r0
   2dbb4:	bl	2d61c <crc32@@Base+0x13ed4>
   2dbb8:	subs	r7, r0, #0
   2dbbc:	bne	2dbf0 <crc32@@Base+0x144a8>
   2dbc0:	ldr	r3, [r4, #4]
   2dbc4:	ubfx	r0, r3, #8, #8
   2dbc8:	ubfx	r1, r3, #16, #8
   2dbcc:	lsr	r2, r3, #24
   2dbd0:	orr	r2, r2, r3, lsl #24
   2dbd4:	orr	r2, r2, r0, lsl #16
   2dbd8:	orr	r2, r2, r1, lsl #8
   2dbdc:	cmp	r5, r2
   2dbe0:	bcc	2dbf8 <crc32@@Base+0x144b0>
   2dbe4:	mov	r1, r4
   2dbe8:	mov	r0, r6
   2dbec:	bl	12380 <memmove@plt>
   2dbf0:	mov	r0, r7
   2dbf4:	pop	{r4, r5, r6, r7, r8, pc}
   2dbf8:	mvn	r7, #2
   2dbfc:	b	2dbf0 <crc32@@Base+0x144a8>
   2dc00:	push	{r4, r5, r6, lr}
   2dc04:	movw	r4, #61168	; 0xeef0
   2dc08:	sub	sp, sp, #16
   2dc0c:	movt	r4, #4
   2dc10:	add	ip, sp, #8
   2dc14:	str	ip, [sp]
   2dc18:	ldr	ip, [r4]
   2dc1c:	ldr	r5, [sp, #32]
   2dc20:	ldr	r6, [sp, #36]	; 0x24
   2dc24:	str	ip, [sp, #12]
   2dc28:	bl	30e60 <crc32@@Base+0x17718>
   2dc2c:	cmp	r0, #0
   2dc30:	ldreq	r0, [sp, #8]
   2dc34:	beq	2dc60 <crc32@@Base+0x14518>
   2dc38:	ldr	r2, [sp, #40]	; 0x28
   2dc3c:	ldr	r3, [sp, #8]
   2dc40:	add	r2, r2, r5
   2dc44:	cmp	r2, r3
   2dc48:	bhi	2dc78 <crc32@@Base+0x14530>
   2dc4c:	mov	r1, r6
   2dc50:	add	r0, r0, r5
   2dc54:	ldr	r2, [sp, #40]	; 0x28
   2dc58:	bl	1259c <memcpy@plt>
   2dc5c:	mov	r0, #0
   2dc60:	ldr	r2, [sp, #12]
   2dc64:	ldr	r3, [r4]
   2dc68:	cmp	r2, r3
   2dc6c:	bne	2dc80 <crc32@@Base+0x14538>
   2dc70:	add	sp, sp, #16
   2dc74:	pop	{r4, r5, r6, pc}
   2dc78:	mvn	r0, #2
   2dc7c:	b	2dc60 <crc32@@Base+0x14518>
   2dc80:	bl	12494 <__stack_chk_fail@plt>
   2dc84:	push	{r4, r5, r6, r7, r8, r9, lr}
   2dc88:	movw	r4, #61168	; 0xeef0
   2dc8c:	movt	r4, #4
   2dc90:	sub	sp, sp, #28
   2dc94:	mov	r9, r3
   2dc98:	add	r3, sp, #16
   2dc9c:	ldr	ip, [r4]
   2dca0:	mov	r7, r0
   2dca4:	mov	r8, r1
   2dca8:	mov	r5, r2
   2dcac:	str	ip, [sp, #20]
   2dcb0:	bl	30ef4 <crc32@@Base+0x177ac>
   2dcb4:	cmp	r0, #0
   2dcb8:	ldreq	r0, [sp, #16]
   2dcbc:	beq	2dcfc <crc32@@Base+0x145b4>
   2dcc0:	ldr	r6, [sp, #16]
   2dcc4:	ldr	r3, [sp, #56]	; 0x38
   2dcc8:	cmp	r6, r3
   2dccc:	bne	2dd14 <crc32@@Base+0x145cc>
   2dcd0:	mov	r0, r5
   2dcd4:	bl	125c0 <strlen@plt>
   2dcd8:	mov	r3, #0
   2dcdc:	str	r6, [sp, #8]
   2dce0:	mov	r2, r5
   2dce4:	str	r3, [sp]
   2dce8:	mov	r1, r8
   2dcec:	str	r9, [sp, #4]
   2dcf0:	mov	r3, r0
   2dcf4:	mov	r0, r7
   2dcf8:	bl	2dc00 <crc32@@Base+0x144b8>
   2dcfc:	ldr	r2, [sp, #20]
   2dd00:	ldr	r3, [r4]
   2dd04:	cmp	r2, r3
   2dd08:	bne	2dd1c <crc32@@Base+0x145d4>
   2dd0c:	add	sp, sp, #28
   2dd10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2dd14:	mvn	r0, #2
   2dd18:	b	2dcfc <crc32@@Base+0x145b4>
   2dd1c:	bl	12494 <__stack_chk_fail@plt>
   2dd20:	push	{r4, lr}
   2dd24:	movw	r4, #61168	; 0xeef0
   2dd28:	movt	r4, #4
   2dd2c:	sub	sp, sp, #8
   2dd30:	ldr	ip, [r4]
   2dd34:	mov	r3, sp
   2dd38:	str	ip, [sp, #4]
   2dd3c:	bl	30e20 <crc32@@Base+0x176d8>
   2dd40:	cmp	r0, #0
   2dd44:	ldreq	r0, [sp]
   2dd48:	beq	2dd74 <crc32@@Base+0x1462c>
   2dd4c:	ldr	r3, [sp]
   2dd50:	add	r3, r3, #12
   2dd54:	add	r3, r0, r3
   2dd58:	cmp	r0, r3
   2dd5c:	bcs	2dd70 <crc32@@Base+0x14628>
   2dd60:	mov	r2, #67108864	; 0x4000000
   2dd64:	str	r2, [r0], #4
   2dd68:	cmp	r0, r3
   2dd6c:	bcc	2dd64 <crc32@@Base+0x1461c>
   2dd70:	mov	r0, #0
   2dd74:	ldr	r2, [sp, #4]
   2dd78:	ldr	r3, [r4]
   2dd7c:	cmp	r2, r3
   2dd80:	bne	2dd8c <crc32@@Base+0x14644>
   2dd84:	add	sp, sp, #8
   2dd88:	pop	{r4, pc}
   2dd8c:	bl	12494 <__stack_chk_fail@plt>
   2dd90:	push	{r4, r5, lr}
   2dd94:	movw	r5, #61168	; 0xeef0
   2dd98:	movt	r5, #4
   2dd9c:	sub	sp, sp, #12
   2dda0:	cmp	r1, #0
   2dda4:	mov	r2, #0
   2dda8:	ldr	r3, [r5]
   2ddac:	str	r2, [sp]
   2ddb0:	str	r3, [sp, #4]
   2ddb4:	blt	2dddc <crc32@@Base+0x14694>
   2ddb8:	mov	r4, r0
   2ddbc:	mov	r2, sp
   2ddc0:	mov	r0, r4
   2ddc4:	bl	2d978 <crc32@@Base+0x14230>
   2ddc8:	ldr	r3, [sp]
   2ddcc:	cmp	r0, #0
   2ddd0:	cmpge	r3, #0
   2ddd4:	mov	r1, r0
   2ddd8:	bge	2ddbc <crc32@@Base+0x14674>
   2dddc:	ldr	r2, [sp, #4]
   2dde0:	mov	r0, r1
   2dde4:	ldr	r3, [r5]
   2dde8:	cmp	r2, r3
   2ddec:	bne	2ddf8 <crc32@@Base+0x146b0>
   2ddf0:	add	sp, sp, #12
   2ddf4:	pop	{r4, r5, pc}
   2ddf8:	bl	12494 <__stack_chk_fail@plt>
   2ddfc:	push	{r4, r5, r6, lr}
   2de00:	mov	r6, r0
   2de04:	mov	r5, r1
   2de08:	bl	2dd90 <crc32@@Base+0x14648>
   2de0c:	subs	r4, r0, #0
   2de10:	blt	2de48 <crc32@@Base+0x14700>
   2de14:	mov	r1, r5
   2de18:	mov	r0, r6
   2de1c:	mov	r2, #0
   2de20:	bl	2d6e4 <crc32@@Base+0x13f9c>
   2de24:	sub	r1, r4, r5
   2de28:	add	r1, r0, r1
   2de2c:	cmp	r0, r1
   2de30:	movcc	r3, #67108864	; 0x4000000
   2de34:	bcs	2de44 <crc32@@Base+0x146fc>
   2de38:	str	r3, [r0], #4
   2de3c:	cmp	r0, r1
   2de40:	bcc	2de38 <crc32@@Base+0x146f0>
   2de44:	mov	r4, #0
   2de48:	mov	r0, r4
   2de4c:	pop	{r4, r5, r6, pc}
   2de50:	push	{r4, r5, r6, r7, r8, lr}
   2de54:	ldr	r5, [r0, #36]	; 0x24
   2de58:	ldmib	r0, {r4, ip}
   2de5c:	ldr	r6, [r0, #32]
   2de60:	ubfx	r3, r5, #8, #8
   2de64:	lsr	lr, r5, #24
   2de68:	ubfx	r7, r4, #8, #8
   2de6c:	lsr	r2, r4, #24
   2de70:	orr	lr, lr, r5, lsl #24
   2de74:	ubfx	r5, r5, #16, #8
   2de78:	ubfx	r8, ip, #8, #8
   2de7c:	orr	r2, r2, r4, lsl #24
   2de80:	orr	lr, lr, r3, lsl #16
   2de84:	lsr	r3, ip, #24
   2de88:	ubfx	r4, r4, #16, #8
   2de8c:	orr	lr, lr, r5, lsl #8
   2de90:	orr	r3, r3, ip, lsl #24
   2de94:	ubfx	r5, r6, #8, #8
   2de98:	orr	r2, r2, r7, lsl #16
   2de9c:	ubfx	r7, ip, #16, #8
   2dea0:	lsr	ip, r6, #24
   2dea4:	orr	r3, r3, r8, lsl #16
   2dea8:	orr	ip, ip, r6, lsl #24
   2deac:	ubfx	r6, r6, #16, #8
   2deb0:	orr	r3, r3, r7, lsl #8
   2deb4:	orr	r2, r2, r4, lsl #8
   2deb8:	orr	ip, ip, r5, lsl #16
   2debc:	adds	r1, r1, lr
   2dec0:	sub	r2, r2, r3
   2dec4:	orr	ip, ip, r6, lsl #8
   2dec8:	sub	r2, r2, ip
   2decc:	movcs	r4, #1
   2ded0:	movcc	r4, #0
   2ded4:	cmp	r2, r1
   2ded8:	movcs	r2, r4
   2dedc:	orrcc	r2, r4, #1
   2dee0:	cmp	r2, #0
   2dee4:	addeq	r3, r3, lr
   2dee8:	reveq	r1, r1
   2deec:	addeq	r3, r0, r3
   2def0:	movne	r3, #0
   2def4:	streq	r1, [r0, #36]	; 0x24
   2def8:	mov	r0, r3
   2defc:	pop	{r4, r5, r6, r7, r8, pc}
   2df00:	cmp	r1, #39	; 0x27
   2df04:	bls	2df6c <crc32@@Base+0x14824>
   2df08:	push	{r4, r5, r6, lr}
   2df0c:	mov	r2, r1
   2df10:	mov	r4, r1
   2df14:	mov	r1, #0
   2df18:	mov	r5, r0
   2df1c:	bl	122e4 <memset@plt>
   2df20:	ubfx	r2, r4, #8, #8
   2df24:	lsr	r1, r4, #24
   2df28:	orr	r1, r1, r4, lsl #24
   2df2c:	ubfx	r4, r4, #16, #8
   2df30:	orr	r1, r1, r2, lsl #16
   2df34:	movw	r3, #61999	; 0xf22f
   2df38:	orr	r4, r1, r4, lsl #8
   2df3c:	movt	r3, #4609	; 0x1201
   2df40:	mov	r2, #33554432	; 0x2000000
   2df44:	stm	r5, {r3, r4}
   2df48:	str	r4, [r5, #12]
   2df4c:	mov	r3, #285212672	; 0x11000000
   2df50:	str	r2, [r5, #24]
   2df54:	mov	r0, #0
   2df58:	str	r3, [r5, #20]
   2df5c:	mov	r3, #805306368	; 0x30000000
   2df60:	str	r3, [r5, #16]
   2df64:	str	r3, [r5, #8]
   2df68:	pop	{r4, r5, r6, pc}
   2df6c:	mvn	r0, #2
   2df70:	bx	lr
   2df74:	ldr	ip, [r0]
   2df78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2df7c:	ubfx	r5, ip, #8, #8
   2df80:	lsr	r3, ip, #24
   2df84:	ubfx	r4, ip, #16, #8
   2df88:	orr	r3, r3, ip, lsl #24
   2df8c:	movw	lr, #274	; 0x112
   2df90:	orr	r3, r3, r5, lsl #16
   2df94:	movt	lr, #12274	; 0x2ff2
   2df98:	orr	r3, r3, r4, lsl #8
   2df9c:	cmp	r3, lr
   2dfa0:	bne	2e094 <crc32@@Base+0x1494c>
   2dfa4:	ldr	ip, [r0, #8]
   2dfa8:	ldr	r3, [r0, #32]
   2dfac:	ubfx	r6, ip, #8, #8
   2dfb0:	ubfx	lr, ip, #16, #8
   2dfb4:	ubfx	r4, r3, #8, #8
   2dfb8:	lsr	r8, ip, #24
   2dfbc:	lsr	r5, r3, #24
   2dfc0:	orr	r8, r8, ip, lsl #24
   2dfc4:	orr	r5, r5, r3, lsl #24
   2dfc8:	ubfx	r3, r3, #16, #8
   2dfcc:	orr	r8, r8, r6, lsl #16
   2dfd0:	orr	r5, r5, r4, lsl #16
   2dfd4:	orr	r8, r8, lr, lsl #8
   2dfd8:	orr	r5, r5, r3, lsl #8
   2dfdc:	add	r3, r5, r8
   2dfe0:	cmp	r3, r2
   2dfe4:	bhi	2e09c <crc32@@Base+0x14954>
   2dfe8:	ldr	r3, [r0, #4]
   2dfec:	mov	r9, r1
   2dff0:	cmp	r0, r1
   2dff4:	sub	sl, r2, r5
   2dff8:	ubfx	r1, r3, #8, #8
   2dffc:	mov	r6, r2
   2e000:	lsr	r4, r3, #24
   2e004:	ubfx	r2, r3, #16, #8
   2e008:	orr	r4, r4, r3, lsl #24
   2e00c:	mov	r7, r0
   2e010:	orr	r4, r4, r1, lsl #16
   2e014:	add	sl, r9, sl
   2e018:	orr	r4, r4, r2, lsl #8
   2e01c:	sub	r4, r4, r5
   2e020:	add	r4, r0, r4
   2e024:	bcs	2e070 <crc32@@Base+0x14928>
   2e028:	mov	r2, r5
   2e02c:	mov	r1, r4
   2e030:	mov	r0, sl
   2e034:	bl	12380 <memmove@plt>
   2e038:	mov	r2, r8
   2e03c:	mov	r1, r7
   2e040:	mov	r0, r9
   2e044:	bl	12380 <memmove@plt>
   2e048:	lsr	r3, r6, #24
   2e04c:	ubfx	r1, r6, #8, #8
   2e050:	ubfx	r2, r6, #16, #8
   2e054:	orr	r3, r3, r6, lsl #24
   2e058:	orr	r6, r3, r1, lsl #16
   2e05c:	mov	r0, #0
   2e060:	orr	r6, r6, r2, lsl #8
   2e064:	str	r6, [r9, #12]
   2e068:	str	r6, [r9, #4]
   2e06c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e070:	mov	r2, r8
   2e074:	mov	r1, r0
   2e078:	mov	r0, r9
   2e07c:	bl	12380 <memmove@plt>
   2e080:	mov	r2, r5
   2e084:	mov	r1, r4
   2e088:	mov	r0, sl
   2e08c:	bl	12380 <memmove@plt>
   2e090:	b	2e048 <crc32@@Base+0x14900>
   2e094:	mvn	r0, #8
   2e098:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e09c:	mvn	r0, #2
   2e0a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e0a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2e0a8:	mov	lr, r0
   2e0ac:	ldr	r0, [r0]
   2e0b0:	movw	ip, #274	; 0x112
   2e0b4:	movt	ip, #12274	; 0x2ff2
   2e0b8:	ubfx	r4, r0, #8, #8
   2e0bc:	ubfx	r5, r0, #16, #8
   2e0c0:	lsr	r1, r0, #24
   2e0c4:	orr	r1, r1, r0, lsl #24
   2e0c8:	orr	r1, r1, r4, lsl #16
   2e0cc:	ldr	r4, [sp, #28]
   2e0d0:	orr	r1, r1, r5, lsl #8
   2e0d4:	ldr	r5, [sp, #32]
   2e0d8:	cmp	r1, ip
   2e0dc:	bne	2e170 <crc32@@Base+0x14a28>
   2e0e0:	ldr	ip, [lr, #36]	; 0x24
   2e0e4:	ubfx	r6, ip, #8, #8
   2e0e8:	ubfx	r0, ip, #16, #8
   2e0ec:	lsr	r1, ip, #24
   2e0f0:	orr	r1, r1, ip, lsl #24
   2e0f4:	orr	r1, r1, r6, lsl #16
   2e0f8:	orrs	r0, r1, r0, lsl #8
   2e0fc:	bne	2e178 <crc32@@Base+0x14a30>
   2e100:	ldmib	lr, {r6, ip}
   2e104:	ubfx	r9, ip, #8, #8
   2e108:	ubfx	r7, r6, #8, #8
   2e10c:	lsr	r1, ip, #24
   2e110:	ubfx	r8, ip, #16, #8
   2e114:	orr	r1, r1, ip, lsl #24
   2e118:	lsr	ip, r6, #24
   2e11c:	orr	ip, ip, r6, lsl #24
   2e120:	orr	r1, r1, r9, lsl #16
   2e124:	ubfx	r6, r6, #16, #8
   2e128:	orr	ip, ip, r7, lsl #16
   2e12c:	orr	r1, r1, r8, lsl #8
   2e130:	add	r7, r1, #16
   2e134:	orr	ip, ip, r6, lsl #8
   2e138:	cmp	r7, ip
   2e13c:	bhi	2e180 <crc32@@Base+0x14a38>
   2e140:	add	ip, lr, r1
   2e144:	rev	r3, r3
   2e148:	rev	r2, r2
   2e14c:	str	r3, [lr, r1]
   2e150:	rev	r4, r4
   2e154:	str	r2, [ip, #4]
   2e158:	str	r4, [ip, #12]
   2e15c:	rev	r5, r5
   2e160:	rev	r7, r7
   2e164:	str	r5, [ip, #8]
   2e168:	str	r7, [lr, #8]
   2e16c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e170:	mvn	r0, #8
   2e174:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e178:	mvn	r0, #6
   2e17c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e180:	mvn	r0, #2
   2e184:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e188:	push	{lr}		; (str lr, [sp, #-4]!)
   2e18c:	sub	sp, sp, #12
   2e190:	mov	r2, #0
   2e194:	mov	r3, #0
   2e198:	strd	r2, [sp]
   2e19c:	bl	2e0a4 <crc32@@Base+0x1495c>
   2e1a0:	add	sp, sp, #12
   2e1a4:	pop	{pc}		; (ldr pc, [sp], #4)
   2e1a8:	push	{r4, r5, r6, lr}
   2e1ac:	mov	r6, r0
   2e1b0:	mov	r0, r1
   2e1b4:	mov	r4, r1
   2e1b8:	bl	125c0 <strlen@plt>
   2e1bc:	ldr	r2, [r6]
   2e1c0:	movw	r1, #274	; 0x112
   2e1c4:	movt	r1, #12274	; 0x2ff2
   2e1c8:	ubfx	lr, r2, #8, #8
   2e1cc:	ubfx	ip, r2, #16, #8
   2e1d0:	lsr	r3, r2, #24
   2e1d4:	orr	r3, r3, r2, lsl #24
   2e1d8:	orr	r3, r3, lr, lsl #16
   2e1dc:	orr	r3, r3, ip, lsl #8
   2e1e0:	cmp	r3, r1
   2e1e4:	bne	2e224 <crc32@@Base+0x14adc>
   2e1e8:	add	r1, r0, #4
   2e1ec:	add	r5, r0, #1
   2e1f0:	bic	r1, r1, #3
   2e1f4:	mov	r0, r6
   2e1f8:	add	r1, r1, #4
   2e1fc:	bl	2de50 <crc32@@Base+0x14708>
   2e200:	cmp	r0, #0
   2e204:	beq	2e22c <crc32@@Base+0x14ae4>
   2e208:	mov	r3, #16777216	; 0x1000000
   2e20c:	mov	r2, r5
   2e210:	mov	r1, r4
   2e214:	str	r3, [r0], #4
   2e218:	bl	1259c <memcpy@plt>
   2e21c:	mov	r0, #0
   2e220:	pop	{r4, r5, r6, pc}
   2e224:	mvn	r0, #8
   2e228:	pop	{r4, r5, r6, pc}
   2e22c:	mvn	r0, #2
   2e230:	pop	{r4, r5, r6, pc}
   2e234:	ldr	r2, [r0]
   2e238:	movw	r1, #274	; 0x112
   2e23c:	push	{r4, lr}
   2e240:	ubfx	lr, r2, #8, #8
   2e244:	lsr	r3, r2, #24
   2e248:	ubfx	ip, r2, #16, #8
   2e24c:	orr	r3, r3, r2, lsl #24
   2e250:	movt	r1, #12274	; 0x2ff2
   2e254:	orr	r3, r3, lr, lsl #16
   2e258:	orr	r3, r3, ip, lsl #8
   2e25c:	cmp	r3, r1
   2e260:	bne	2e284 <crc32@@Base+0x14b3c>
   2e264:	mov	r1, #4
   2e268:	bl	2de50 <crc32@@Base+0x14708>
   2e26c:	subs	r3, r0, #0
   2e270:	beq	2e28c <crc32@@Base+0x14b44>
   2e274:	mov	r2, #33554432	; 0x2000000
   2e278:	mov	r0, #0
   2e27c:	str	r2, [r3]
   2e280:	pop	{r4, pc}
   2e284:	mvn	r0, #8
   2e288:	pop	{r4, pc}
   2e28c:	mvn	r0, #2
   2e290:	pop	{r4, pc}
   2e294:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e298:	movw	r4, #274	; 0x112
   2e29c:	ldr	lr, [r0]
   2e2a0:	movt	r4, #12274	; 0x2ff2
   2e2a4:	ubfx	r6, lr, #8, #8
   2e2a8:	ubfx	r5, lr, #16, #8
   2e2ac:	lsr	ip, lr, #24
   2e2b0:	orr	ip, ip, lr, lsl #24
   2e2b4:	orr	ip, ip, r6, lsl #16
   2e2b8:	orr	ip, ip, r5, lsl #8
   2e2bc:	cmp	ip, r4
   2e2c0:	bne	2e458 <crc32@@Base+0x14d10>
   2e2c4:	mov	sl, r0
   2e2c8:	ldr	ip, [r0, #4]
   2e2cc:	mov	r9, r3
   2e2d0:	ldr	r3, [sl, #32]
   2e2d4:	ubfx	lr, ip, #8, #8
   2e2d8:	mov	r7, r2
   2e2dc:	lsr	r5, ip, #24
   2e2e0:	ubfx	r2, r3, #8, #8
   2e2e4:	lsr	r6, r3, #24
   2e2e8:	orr	r5, r5, ip, lsl #24
   2e2ec:	mov	r8, r1
   2e2f0:	mov	r0, r1
   2e2f4:	orr	r6, r6, r3, lsl #24
   2e2f8:	ubfx	r1, ip, #16, #8
   2e2fc:	ubfx	r3, r3, #16, #8
   2e300:	orr	r5, r5, lr, lsl #16
   2e304:	orr	r6, r6, r2, lsl #16
   2e308:	orr	r5, r5, r1, lsl #8
   2e30c:	orr	r6, r6, r3, lsl #8
   2e310:	bl	125c0 <strlen@plt>
   2e314:	add	r5, sl, r5
   2e318:	mov	r2, r8
   2e31c:	mov	r1, r6
   2e320:	mov	fp, r0
   2e324:	sub	r0, r5, r6
   2e328:	bl	2db44 <crc32@@Base+0x143fc>
   2e32c:	cmp	r0, #0
   2e330:	subne	r4, r0, r5
   2e334:	beq	2e3ac <crc32@@Base+0x14c64>
   2e338:	cmp	r4, #0
   2e33c:	beq	2e41c <crc32@@Base+0x14cd4>
   2e340:	add	r1, r7, #3
   2e344:	mov	r0, sl
   2e348:	bic	r1, r1, #3
   2e34c:	add	r1, r1, #12
   2e350:	bl	2de50 <crc32@@Base+0x14708>
   2e354:	cmp	r0, #0
   2e358:	beq	2e41c <crc32@@Base+0x14cd4>
   2e35c:	ubfx	r1, r4, #8, #8
   2e360:	lsr	r3, r4, #24
   2e364:	orr	r3, r3, r4, lsl #24
   2e368:	lsr	r2, r7, #24
   2e36c:	orr	r3, r3, r1, lsl #16
   2e370:	ubfx	r1, r7, #8, #8
   2e374:	orr	r2, r2, r7, lsl #24
   2e378:	ubfx	r4, r4, #16, #8
   2e37c:	ubfx	r7, r7, #16, #8
   2e380:	orr	r2, r2, r1, lsl #16
   2e384:	orr	r4, r3, r4, lsl #8
   2e388:	add	r3, r0, #12
   2e38c:	str	r4, [r0, #8]
   2e390:	orr	r7, r2, r7, lsl #8
   2e394:	mov	r2, #50331648	; 0x3000000
   2e398:	str	r7, [r0, #4]
   2e39c:	str	r2, [r0]
   2e3a0:	mov	r0, #0
   2e3a4:	str	r3, [r9]
   2e3a8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e3ac:	ldr	r2, [sl, #8]
   2e3b0:	add	fp, fp, #1
   2e3b4:	ldr	r0, [sl, #36]	; 0x24
   2e3b8:	rsb	r4, r6, #0
   2e3bc:	ubfx	ip, r2, #8, #8
   2e3c0:	ldr	r1, [sl, #4]
   2e3c4:	lsr	r3, r2, #24
   2e3c8:	ubfx	lr, r0, #8, #8
   2e3cc:	orr	r3, r3, r2, lsl #24
   2e3d0:	ubfx	r2, r2, #16, #8
   2e3d4:	orr	r3, r3, ip, lsl #16
   2e3d8:	lsr	ip, r0, #24
   2e3dc:	orr	ip, ip, r0, lsl #24
   2e3e0:	ubfx	r0, r0, #16, #8
   2e3e4:	orr	ip, ip, lr, lsl #16
   2e3e8:	orr	r3, r3, r2, lsl #8
   2e3ec:	orr	r0, ip, r0, lsl #8
   2e3f0:	lsr	r2, r1, #24
   2e3f4:	ubfx	ip, r1, #8, #8
   2e3f8:	orr	r2, r2, r1, lsl #24
   2e3fc:	ubfx	r1, r1, #16, #8
   2e400:	sub	r4, r4, fp
   2e404:	orr	r2, r2, ip, lsl #16
   2e408:	add	r3, r3, r0
   2e40c:	orr	r2, r2, r1, lsl #8
   2e410:	add	r2, r2, r4
   2e414:	cmp	r3, r2
   2e418:	bls	2e424 <crc32@@Base+0x14cdc>
   2e41c:	mvn	r0, #2
   2e420:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e424:	add	r6, r6, fp
   2e428:	mov	r1, r8
   2e42c:	mov	r2, fp
   2e430:	add	r0, r5, r4
   2e434:	bl	1259c <memcpy@plt>
   2e438:	ubfx	r1, r6, #8, #8
   2e43c:	lsr	r3, r6, #24
   2e440:	ubfx	r2, r6, #16, #8
   2e444:	orr	r6, r3, r6, lsl #24
   2e448:	orr	r6, r6, r1, lsl #16
   2e44c:	orr	r6, r6, r2, lsl #8
   2e450:	str	r6, [sl, #32]
   2e454:	b	2e338 <crc32@@Base+0x14bf0>
   2e458:	mvn	r0, #8
   2e45c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e460:	push	{r4, r5, r6, r7, lr}
   2e464:	movw	r4, #61168	; 0xeef0
   2e468:	movt	r4, #4
   2e46c:	sub	sp, sp, #12
   2e470:	mov	r5, r3
   2e474:	mov	r7, r2
   2e478:	ldr	ip, [r4]
   2e47c:	mov	r2, r3
   2e480:	mov	r3, sp
   2e484:	str	ip, [sp, #4]
   2e488:	bl	2e294 <crc32@@Base+0x14b4c>
   2e48c:	subs	r6, r0, #0
   2e490:	bne	2e4a4 <crc32@@Base+0x14d5c>
   2e494:	mov	r2, r5
   2e498:	mov	r1, r7
   2e49c:	ldr	r0, [sp]
   2e4a0:	bl	1259c <memcpy@plt>
   2e4a4:	ldr	r2, [sp, #4]
   2e4a8:	mov	r0, r6
   2e4ac:	ldr	r3, [r4]
   2e4b0:	cmp	r2, r3
   2e4b4:	bne	2e4c0 <crc32@@Base+0x14d78>
   2e4b8:	add	sp, sp, #12
   2e4bc:	pop	{r4, r5, r6, r7, pc}
   2e4c0:	bl	12494 <__stack_chk_fail@plt>
   2e4c4:	ldr	r2, [r0]
   2e4c8:	push	{r4, r5, r6, r7, r8, lr}
   2e4cc:	ubfx	ip, r2, #8, #8
   2e4d0:	lsr	r3, r2, #24
   2e4d4:	ubfx	r1, r2, #16, #8
   2e4d8:	orr	r3, r3, r2, lsl #24
   2e4dc:	movw	r6, #61168	; 0xeef0
   2e4e0:	movt	r6, #4
   2e4e4:	orr	r3, r3, ip, lsl #16
   2e4e8:	orr	r3, r3, r1, lsl #8
   2e4ec:	movw	r2, #274	; 0x112
   2e4f0:	ldr	r1, [r6]
   2e4f4:	movt	r2, #12274	; 0x2ff2
   2e4f8:	sub	sp, sp, #8
   2e4fc:	cmp	r3, r2
   2e500:	str	r1, [sp, #4]
   2e504:	bne	2e6a0 <crc32@@Base+0x14f58>
   2e508:	mov	r1, #4
   2e50c:	mov	r4, r0
   2e510:	bl	2de50 <crc32@@Base+0x14708>
   2e514:	cmp	r0, #0
   2e518:	beq	2e6a8 <crc32@@Base+0x14f60>
   2e51c:	mov	r3, #150994944	; 0x9000000
   2e520:	str	r3, [r0]
   2e524:	ldr	r3, [r4, #4]
   2e528:	mov	r7, #0
   2e52c:	ldr	lr, [r4, #32]
   2e530:	ubfx	r2, r3, #8, #8
   2e534:	ldr	r0, [r4, #8]
   2e538:	lsr	r1, r3, #24
   2e53c:	ldr	ip, [r4, #36]	; 0x24
   2e540:	orr	r1, r1, r3, lsl #24
   2e544:	ubfx	r5, lr, #8, #8
   2e548:	orr	r1, r1, r2, lsl #16
   2e54c:	lsr	r2, lr, #24
   2e550:	ubfx	r3, r3, #16, #8
   2e554:	orr	r2, r2, lr, lsl #24
   2e558:	ubfx	lr, lr, #16, #8
   2e55c:	orr	r2, r2, r5, lsl #16
   2e560:	ubfx	r8, r0, #8, #8
   2e564:	lsr	r5, r0, #24
   2e568:	orr	r2, r2, lr, lsl #8
   2e56c:	orr	r1, r1, r3, lsl #8
   2e570:	ubfx	lr, ip, #8, #8
   2e574:	orr	r5, r5, r0, lsl #24
   2e578:	ubfx	r3, r0, #16, #8
   2e57c:	lsr	r0, ip, #24
   2e580:	orr	r0, r0, ip, lsl #24
   2e584:	orr	r5, r5, r8, lsl #16
   2e588:	ubfx	ip, ip, #16, #8
   2e58c:	orr	r3, r5, r3, lsl #8
   2e590:	orr	r5, r0, lr, lsl #16
   2e594:	sub	r1, r1, r2
   2e598:	orr	r5, r5, ip, lsl #8
   2e59c:	add	r1, r4, r1
   2e5a0:	add	r5, r5, r3
   2e5a4:	add	r0, r4, r5
   2e5a8:	bl	12380 <memmove@plt>
   2e5ac:	rev	r3, r5
   2e5b0:	str	r3, [r4, #12]
   2e5b4:	b	2e62c <crc32@@Base+0x14ee4>
   2e5b8:	cmp	r0, #3
   2e5bc:	bne	2e628 <crc32@@Base+0x14ee0>
   2e5c0:	ldr	r3, [r4, #8]
   2e5c4:	ldr	r2, [r4, #32]
   2e5c8:	ubfx	ip, r3, #8, #8
   2e5cc:	ubfx	r0, r3, #16, #8
   2e5d0:	lsr	r1, r3, #24
   2e5d4:	orr	r1, r1, r3, lsl #24
   2e5d8:	lsr	r3, r2, #24
   2e5dc:	orr	r1, r1, ip, lsl #16
   2e5e0:	ubfx	ip, r2, #8, #8
   2e5e4:	orr	r1, r1, r0, lsl #8
   2e5e8:	orr	r3, r3, r2, lsl #24
   2e5ec:	add	r1, r1, r7
   2e5f0:	ubfx	r2, r2, #16, #8
   2e5f4:	add	r1, r4, r1
   2e5f8:	orr	r3, r3, ip, lsl #16
   2e5fc:	orr	r3, r3, r2, lsl #8
   2e600:	ldr	r0, [r1, #8]
   2e604:	ubfx	lr, r0, #8, #8
   2e608:	ubfx	ip, r0, #16, #8
   2e60c:	lsr	r2, r0, #24
   2e610:	orr	r2, r2, r0, lsl #24
   2e614:	orr	r2, r2, lr, lsl #16
   2e618:	orr	r2, r2, ip, lsl #8
   2e61c:	add	r3, r3, r2
   2e620:	rev	r3, r3
   2e624:	str	r3, [r1, #8]
   2e628:	ldr	r7, [sp]
   2e62c:	mov	r2, sp
   2e630:	mov	r1, r7
   2e634:	mov	r0, r4
   2e638:	bl	2d798 <crc32@@Base+0x14050>
   2e63c:	cmp	r0, #9
   2e640:	bne	2e5b8 <crc32@@Base+0x14e70>
   2e644:	ldr	r0, [sp]
   2e648:	cmp	r0, #0
   2e64c:	blt	2e688 <crc32@@Base+0x14f40>
   2e650:	ldr	r2, [r4, #32]
   2e654:	mov	r3, #3536	; 0xdd0
   2e658:	movt	r3, #60926	; 0xedfe
   2e65c:	str	r3, [r4]
   2e660:	ubfx	ip, r2, #8, #8
   2e664:	ubfx	r1, r2, #16, #8
   2e668:	lsr	r3, r2, #24
   2e66c:	mov	r0, #0
   2e670:	orr	r3, r3, r2, lsl #24
   2e674:	orr	r3, r3, ip, lsl #16
   2e678:	orr	r3, r3, r1, lsl #8
   2e67c:	add	r5, r3, r5
   2e680:	rev	r5, r5
   2e684:	str	r5, [r4, #4]
   2e688:	ldr	r2, [sp, #4]
   2e68c:	ldr	r3, [r6]
   2e690:	cmp	r2, r3
   2e694:	bne	2e6b0 <crc32@@Base+0x14f68>
   2e698:	add	sp, sp, #8
   2e69c:	pop	{r4, r5, r6, r7, r8, pc}
   2e6a0:	mvn	r0, #8
   2e6a4:	b	2e688 <crc32@@Base+0x14f40>
   2e6a8:	mvn	r0, #2
   2e6ac:	b	2e688 <crc32@@Base+0x14f40>
   2e6b0:	bl	12494 <__stack_chk_fail@plt>
   2e6b4:	ldr	ip, [r0, #16]
   2e6b8:	push	{r4, lr}
   2e6bc:	ubfx	r4, ip, #8, #8
   2e6c0:	lsr	r3, ip, #24
   2e6c4:	ubfx	lr, ip, #16, #8
   2e6c8:	orr	r3, r3, ip, lsl #24
   2e6cc:	orr	r3, r3, r4, lsl #16
   2e6d0:	orr	r3, r3, lr, lsl #8
   2e6d4:	cmp	r3, #39	; 0x27
   2e6d8:	bls	2e778 <crc32@@Base+0x15030>
   2e6dc:	ldr	lr, [r0, #8]
   2e6e0:	add	r1, r1, r3
   2e6e4:	ubfx	r4, lr, #8, #8
   2e6e8:	ubfx	r3, lr, #16, #8
   2e6ec:	lsr	ip, lr, #24
   2e6f0:	orr	ip, ip, lr, lsl #24
   2e6f4:	orr	ip, ip, r4, lsl #16
   2e6f8:	orr	ip, ip, r3, lsl #8
   2e6fc:	cmp	r1, ip
   2e700:	bhi	2e778 <crc32@@Base+0x15030>
   2e704:	ldr	r1, [r0, #12]
   2e708:	add	r2, r2, ip
   2e70c:	ubfx	lr, r1, #8, #8
   2e710:	ubfx	ip, r1, #16, #8
   2e714:	lsr	r3, r1, #24
   2e718:	orr	r3, r3, r1, lsl #24
   2e71c:	orr	r3, r3, lr, lsl #16
   2e720:	orr	r3, r3, ip, lsl #8
   2e724:	cmp	r2, r3
   2e728:	bhi	2e778 <crc32@@Base+0x15030>
   2e72c:	ldr	r2, [r0, #32]
   2e730:	ldr	r1, [r0, #4]
   2e734:	ubfx	r4, r2, #8, #8
   2e738:	ubfx	lr, r2, #16, #8
   2e73c:	lsr	r0, r2, #24
   2e740:	ubfx	ip, r1, #8, #8
   2e744:	orr	r0, r0, r2, lsl #24
   2e748:	lsr	r2, r1, #24
   2e74c:	orr	r0, r0, r4, lsl #16
   2e750:	orr	r2, r2, r1, lsl #24
   2e754:	ubfx	r1, r1, #16, #8
   2e758:	orr	r0, r0, lr, lsl #8
   2e75c:	orr	r2, r2, ip, lsl #16
   2e760:	add	r0, r0, r3
   2e764:	orr	r3, r2, r1, lsl #8
   2e768:	cmp	r0, r3
   2e76c:	movls	r0, #0
   2e770:	movhi	r0, #1
   2e774:	pop	{r4, pc}
   2e778:	mov	r0, #1
   2e77c:	pop	{r4, pc}
   2e780:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e784:	cmp	r2, #0
   2e788:	ldr	r5, [r0, #12]
   2e78c:	ldr	r4, [r0, #32]
   2e790:	ubfx	r8, r5, #8, #8
   2e794:	ubfx	r6, r5, #16, #8
   2e798:	ubfx	r7, r4, #8, #8
   2e79c:	lsr	ip, r5, #24
   2e7a0:	lsr	lr, r4, #24
   2e7a4:	orr	ip, ip, r5, lsl #24
   2e7a8:	orr	lr, lr, r4, lsl #24
   2e7ac:	ubfx	r4, r4, #16, #8
   2e7b0:	orr	ip, ip, r8, lsl #16
   2e7b4:	orr	lr, lr, r7, lsl #16
   2e7b8:	orr	ip, ip, r6, lsl #8
   2e7bc:	orr	lr, lr, r4, lsl #8
   2e7c0:	add	ip, ip, lr
   2e7c4:	add	ip, r0, ip
   2e7c8:	blt	2e844 <crc32@@Base+0x150fc>
   2e7cc:	add	r5, r1, r2
   2e7d0:	cmp	r5, ip
   2e7d4:	movls	r4, #0
   2e7d8:	movhi	r4, #1
   2e7dc:	cmp	r1, r0
   2e7e0:	orrcc	r4, r4, #1
   2e7e4:	cmp	r4, #0
   2e7e8:	bne	2e844 <crc32@@Base+0x150fc>
   2e7ec:	sub	r6, r3, r2
   2e7f0:	add	r6, ip, r6
   2e7f4:	cmp	r6, r0
   2e7f8:	bcc	2e844 <crc32@@Base+0x150fc>
   2e7fc:	ldr	r7, [r0, #4]
   2e800:	ubfx	r9, r7, #8, #8
   2e804:	ubfx	r8, r7, #16, #8
   2e808:	lsr	lr, r7, #24
   2e80c:	orr	lr, lr, r7, lsl #24
   2e810:	orr	lr, lr, r9, lsl #16
   2e814:	orr	lr, lr, r8, lsl #8
   2e818:	add	lr, r0, lr
   2e81c:	cmp	r6, lr
   2e820:	bhi	2e84c <crc32@@Base+0x15104>
   2e824:	sub	ip, ip, r1
   2e828:	mov	r0, r1
   2e82c:	sub	r2, ip, r2
   2e830:	mov	r1, r5
   2e834:	add	r0, r0, r3
   2e838:	bl	12380 <memmove@plt>
   2e83c:	mov	r0, r4
   2e840:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e844:	mvn	r0, #3
   2e848:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e84c:	mvn	r0, #2
   2e850:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e854:	push	{r4, r5, r6, lr}
   2e858:	mov	r6, r2
   2e85c:	mov	r5, r3
   2e860:	lsl	r2, r2, #4
   2e864:	lsl	r3, r3, #4
   2e868:	mov	r4, r0
   2e86c:	bl	2e780 <crc32@@Base+0x15038>
   2e870:	cmp	r0, #0
   2e874:	popne	{r4, r5, r6, pc}
   2e878:	ldr	lr, [r4, #8]
   2e87c:	sub	r3, r5, r6
   2e880:	ldr	ip, [r4, #12]
   2e884:	lsl	r1, r3, #4
   2e888:	ubfx	r6, lr, #8, #8
   2e88c:	ubfx	r5, ip, #8, #8
   2e890:	lsr	r2, lr, #24
   2e894:	lsr	r3, ip, #24
   2e898:	orr	r2, r2, lr, lsl #24
   2e89c:	orr	r3, r3, ip, lsl #24
   2e8a0:	ubfx	lr, lr, #16, #8
   2e8a4:	ubfx	ip, ip, #16, #8
   2e8a8:	orr	r2, r2, r6, lsl #16
   2e8ac:	orr	r3, r3, r5, lsl #16
   2e8b0:	orr	r2, r2, lr, lsl #8
   2e8b4:	orr	r3, r3, ip, lsl #8
   2e8b8:	add	r2, r2, r1
   2e8bc:	add	r3, r3, r1
   2e8c0:	rev	r2, r2
   2e8c4:	rev	r3, r3
   2e8c8:	strd	r2, [r4, #8]
   2e8cc:	pop	{r4, r5, r6, pc}
   2e8d0:	push	{r4, r5, r6, lr}
   2e8d4:	mov	r4, r0
   2e8d8:	mov	r5, r2
   2e8dc:	mov	r6, r3
   2e8e0:	bl	2e780 <crc32@@Base+0x15038>
   2e8e4:	cmp	r0, #0
   2e8e8:	popne	{r4, r5, r6, pc}
   2e8ec:	ldr	lr, [r4, #36]	; 0x24
   2e8f0:	sub	ip, r6, r5
   2e8f4:	ldr	r1, [r4, #12]
   2e8f8:	ubfx	r3, lr, #8, #8
   2e8fc:	lsr	r2, lr, #24
   2e900:	ubfx	r5, r1, #8, #8
   2e904:	orr	r2, r2, lr, lsl #24
   2e908:	ubfx	lr, lr, #16, #8
   2e90c:	orr	r2, r2, r3, lsl #16
   2e910:	lsr	r3, r1, #24
   2e914:	orr	r3, r3, r1, lsl #24
   2e918:	ubfx	r1, r1, #16, #8
   2e91c:	orr	r3, r3, r5, lsl #16
   2e920:	orr	r2, r2, lr, lsl #8
   2e924:	orr	r3, r3, r1, lsl #8
   2e928:	add	r2, r2, ip
   2e92c:	add	r3, r3, ip
   2e930:	rev	r2, r2
   2e934:	rev	r3, r3
   2e938:	str	r2, [r4, #36]	; 0x24
   2e93c:	str	r3, [r4, #12]
   2e940:	pop	{r4, r5, r6, pc}
   2e944:	ldr	ip, [r0, #16]
   2e948:	push	{r4, r5, r6, r7, r8, lr}
   2e94c:	mov	r5, r0
   2e950:	mov	r4, r1
   2e954:	ubfx	lr, ip, #8, #8
   2e958:	add	r0, r1, #40	; 0x28
   2e95c:	lsr	r1, ip, #24
   2e960:	mov	r6, r3
   2e964:	orr	r1, r1, ip, lsl #24
   2e968:	ubfx	r3, ip, #16, #8
   2e96c:	orr	r1, r1, lr, lsl #16
   2e970:	add	r7, r2, #40	; 0x28
   2e974:	orr	r1, r1, r3, lsl #8
   2e978:	add	r8, r7, r6
   2e97c:	add	r1, r5, r1
   2e980:	bl	12380 <memmove@plt>
   2e984:	ldr	r3, [r5, #8]
   2e988:	mov	r2, #671088640	; 0x28000000
   2e98c:	str	r2, [r4, #16]
   2e990:	ubfx	r2, r3, #8, #8
   2e994:	ubfx	r0, r3, #16, #8
   2e998:	lsr	r1, r3, #24
   2e99c:	orr	r1, r1, r3, lsl #24
   2e9a0:	orr	r1, r1, r2, lsl #16
   2e9a4:	mov	r2, r6
   2e9a8:	orr	r1, r1, r0, lsl #8
   2e9ac:	add	r0, r4, r7
   2e9b0:	add	r1, r5, r1
   2e9b4:	bl	12380 <memmove@plt>
   2e9b8:	ldr	r0, [r5, #12]
   2e9bc:	ubfx	r1, r7, #8, #8
   2e9c0:	lsr	r3, r7, #24
   2e9c4:	orr	r3, r3, r7, lsl #24
   2e9c8:	ubfx	lr, r7, #16, #8
   2e9cc:	ubfx	ip, r0, #8, #8
   2e9d0:	orr	r7, r3, r1, lsl #16
   2e9d4:	lsr	r1, r0, #24
   2e9d8:	ldr	r2, [r5, #32]
   2e9dc:	orr	r1, r1, r0, lsl #24
   2e9e0:	lsr	r3, r6, #24
   2e9e4:	ubfx	r0, r0, #16, #8
   2e9e8:	orr	r1, r1, ip, lsl #16
   2e9ec:	ubfx	ip, r6, #8, #8
   2e9f0:	orr	r3, r3, r6, lsl #24
   2e9f4:	orr	r1, r1, r0, lsl #8
   2e9f8:	lsr	r0, r2, #24
   2e9fc:	orr	r3, r3, ip, lsl #16
   2ea00:	ubfx	ip, r2, #8, #8
   2ea04:	orr	r0, r0, r2, lsl #24
   2ea08:	ubfx	r6, r6, #16, #8
   2ea0c:	ubfx	r2, r2, #16, #8
   2ea10:	orr	r0, r0, ip, lsl #16
   2ea14:	orr	r7, r7, lr, lsl #8
   2ea18:	orr	r6, r3, r6, lsl #8
   2ea1c:	orr	r2, r0, r2, lsl #8
   2ea20:	add	r1, r5, r1
   2ea24:	add	r0, r4, r8
   2ea28:	str	r7, [r4, #8]
   2ea2c:	str	r6, [r4, #36]	; 0x24
   2ea30:	bl	12380 <memmove@plt>
   2ea34:	ldr	r1, [r5, #32]
   2ea38:	ubfx	ip, r8, #8, #8
   2ea3c:	lsr	r2, r8, #24
   2ea40:	ubfx	lr, r1, #8, #8
   2ea44:	ubfx	r0, r1, #16, #8
   2ea48:	lsr	r3, r1, #24
   2ea4c:	orr	r2, r2, r8, lsl #24
   2ea50:	orr	r3, r3, r1, lsl #24
   2ea54:	ubfx	r8, r8, #16, #8
   2ea58:	orr	r3, r3, lr, lsl #16
   2ea5c:	orr	r2, r2, ip, lsl #16
   2ea60:	orr	r3, r3, r0, lsl #8
   2ea64:	orr	r2, r2, r8, lsl #8
   2ea68:	rev	r3, r3
   2ea6c:	str	r2, [r4, #12]
   2ea70:	str	r3, [r4, #32]
   2ea74:	pop	{r4, r5, r6, r7, r8, pc}
   2ea78:	ldr	r3, [r0, #12]
   2ea7c:	push	{r4, r5, r6, r7, r8, lr}
   2ea80:	mov	r5, r0
   2ea84:	lsr	r4, r3, #24
   2ea88:	mov	r6, r1
   2ea8c:	mov	r0, r1
   2ea90:	ubfx	r1, r3, #8, #8
   2ea94:	ubfx	r2, r3, #16, #8
   2ea98:	orr	r4, r4, r3, lsl #24
   2ea9c:	orr	r4, r4, r1, lsl #16
   2eaa0:	orr	r4, r4, r2, lsl #8
   2eaa4:	bl	125c0 <strlen@plt>
   2eaa8:	ldr	r1, [r5, #32]
   2eaac:	add	r4, r5, r4
   2eab0:	mov	r2, r6
   2eab4:	ubfx	lr, r1, #8, #8
   2eab8:	ubfx	r3, r1, #16, #8
   2eabc:	lsr	ip, r1, #24
   2eac0:	orr	ip, ip, r1, lsl #24
   2eac4:	orr	r1, ip, lr, lsl #16
   2eac8:	orr	r1, r1, r3, lsl #8
   2eacc:	mov	r7, r0
   2ead0:	mov	r0, r4
   2ead4:	bl	2db44 <crc32@@Base+0x143fc>
   2ead8:	subs	r2, r0, #0
   2eadc:	beq	2eae8 <crc32@@Base+0x153a0>
   2eae0:	sub	r0, r2, r4
   2eae4:	pop	{r4, r5, r6, r7, r8, pc}
   2eae8:	ldr	r1, [r5, #32]
   2eaec:	add	r7, r7, #1
   2eaf0:	ldr	r3, [r5, #12]
   2eaf4:	ubfx	lr, r1, #8, #8
   2eaf8:	ubfx	r0, r1, #16, #8
   2eafc:	lsr	r8, r1, #24
   2eb00:	ubfx	ip, r3, #8, #8
   2eb04:	orr	r8, r8, r1, lsl #24
   2eb08:	lsr	r1, r3, #24
   2eb0c:	orr	r1, r1, r3, lsl #24
   2eb10:	ubfx	r3, r3, #16, #8
   2eb14:	orr	r8, r8, lr, lsl #16
   2eb18:	orr	r1, r1, ip, lsl #16
   2eb1c:	orr	r8, r8, r0, lsl #8
   2eb20:	orr	r1, r1, r3, lsl #8
   2eb24:	add	r1, r1, r8
   2eb28:	mov	r3, r7
   2eb2c:	add	r1, r5, r1
   2eb30:	mov	r0, r5
   2eb34:	bl	2e780 <crc32@@Base+0x15038>
   2eb38:	cmp	r0, #0
   2eb3c:	popne	{r4, r5, r6, r7, r8, pc}
   2eb40:	ldr	ip, [r5, #32]
   2eb44:	add	r0, r4, r8
   2eb48:	mov	r2, r7
   2eb4c:	mov	r1, r6
   2eb50:	ubfx	r4, ip, #8, #8
   2eb54:	ubfx	lr, ip, #16, #8
   2eb58:	lsr	r3, ip, #24
   2eb5c:	orr	r3, r3, ip, lsl #24
   2eb60:	orr	r3, r3, r4, lsl #16
   2eb64:	orr	r3, r3, lr, lsl #8
   2eb68:	add	r7, r3, r7
   2eb6c:	rev	r7, r7
   2eb70:	str	r7, [r5, #32]
   2eb74:	bl	1259c <memcpy@plt>
   2eb78:	mov	r0, r8
   2eb7c:	pop	{r4, r5, r6, r7, r8, pc}
   2eb80:	push	{r4, r5, r6, r7, r8, lr}
   2eb84:	mov	r7, r2
   2eb88:	mov	r6, r3
   2eb8c:	mov	r4, r0
   2eb90:	bl	2d8f8 <crc32@@Base+0x141b0>
   2eb94:	subs	r5, r0, #0
   2eb98:	blt	2ec44 <crc32@@Base+0x154fc>
   2eb9c:	mov	r1, r7
   2eba0:	mov	r0, r4
   2eba4:	bl	2ea78 <crc32@@Base+0x15330>
   2eba8:	subs	r7, r0, #0
   2ebac:	movlt	r5, r7
   2ebb0:	blt	2ec44 <crc32@@Base+0x154fc>
   2ebb4:	ldr	r2, [r4, #8]
   2ebb8:	add	r3, r6, #3
   2ebbc:	bic	r3, r3, #3
   2ebc0:	ubfx	r0, r2, #8, #8
   2ebc4:	ubfx	ip, r2, #16, #8
   2ebc8:	lsr	r1, r2, #24
   2ebcc:	add	r3, r3, #12
   2ebd0:	orr	r1, r1, r2, lsl #24
   2ebd4:	mov	r2, #0
   2ebd8:	orr	r1, r1, r0, lsl #16
   2ebdc:	mov	r0, r4
   2ebe0:	orr	r1, r1, ip, lsl #8
   2ebe4:	ldr	ip, [sp, #24]
   2ebe8:	add	r1, r1, r5
   2ebec:	add	r1, r4, r1
   2ebf0:	str	r1, [ip]
   2ebf4:	bl	2e8d0 <crc32@@Base+0x15188>
   2ebf8:	subs	r5, r0, #0
   2ebfc:	bne	2ec44 <crc32@@Base+0x154fc>
   2ec00:	ldr	r1, [sp, #24]
   2ec04:	ubfx	r3, r7, #8, #8
   2ec08:	lsr	r2, r7, #24
   2ec0c:	ubfx	r0, r6, #8, #8
   2ec10:	orr	r2, r2, r7, lsl #24
   2ec14:	ubfx	r7, r7, #16, #8
   2ec18:	ldr	r1, [r1]
   2ec1c:	orr	r2, r2, r3, lsl #16
   2ec20:	lsr	r3, r6, #24
   2ec24:	orr	r7, r2, r7, lsl #8
   2ec28:	orr	r3, r3, r6, lsl #24
   2ec2c:	ubfx	r6, r6, #16, #8
   2ec30:	orr	r3, r3, r0, lsl #16
   2ec34:	str	r7, [r1, #8]
   2ec38:	orr	r6, r3, r6, lsl #8
   2ec3c:	mov	r3, #50331648	; 0x3000000
   2ec40:	stm	r1, {r3, r6}
   2ec44:	mov	r0, r5
   2ec48:	pop	{r4, r5, r6, r7, r8, pc}
   2ec4c:	push	{r4, r5, r6, lr}
   2ec50:	mov	r5, r0
   2ec54:	bl	2d61c <crc32@@Base+0x13ed4>
   2ec58:	cmp	r0, #0
   2ec5c:	popne	{r4, r5, r6, pc}
   2ec60:	ldr	r3, [r5, #20]
   2ec64:	ubfx	r1, r3, #8, #8
   2ec68:	ubfx	r2, r3, #16, #8
   2ec6c:	lsr	r4, r3, #24
   2ec70:	orr	r4, r4, r3, lsl #24
   2ec74:	orr	r4, r4, r1, lsl #16
   2ec78:	orr	r4, r4, r2, lsl #8
   2ec7c:	cmp	r4, #16
   2ec80:	bls	2ecc4 <crc32@@Base+0x1557c>
   2ec84:	ldr	r0, [r5, #36]	; 0x24
   2ec88:	mov	r1, #16
   2ec8c:	ubfx	ip, r0, #8, #8
   2ec90:	ubfx	r2, r0, #16, #8
   2ec94:	lsr	r3, r0, #24
   2ec98:	orr	r3, r3, r0, lsl #24
   2ec9c:	mov	r0, r5
   2eca0:	orr	r3, r3, ip, lsl r1
   2eca4:	orr	r2, r3, r2, lsl #8
   2eca8:	bl	2e6b4 <crc32@@Base+0x14f6c>
   2ecac:	cmp	r0, #0
   2ecb0:	bne	2eccc <crc32@@Base+0x15584>
   2ecb4:	cmp	r4, #17
   2ecb8:	movne	r3, #285212672	; 0x11000000
   2ecbc:	strne	r3, [r5, #20]
   2ecc0:	pop	{r4, r5, r6, pc}
   2ecc4:	mvn	r0, #9
   2ecc8:	pop	{r4, r5, r6, pc}
   2eccc:	mvn	r0, #11
   2ecd0:	pop	{r4, r5, r6, pc}
   2ecd4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ecd8:	mov	r8, r2
   2ecdc:	mov	r9, r3
   2ece0:	mov	r5, r0
   2ece4:	ldr	r7, [sp, #40]	; 0x28
   2ece8:	ldr	r6, [sp, #44]	; 0x2c
   2ecec:	bl	2ec4c <crc32@@Base+0x15504>
   2ecf0:	subs	sl, r0, #0
   2ecf4:	beq	2ed00 <crc32@@Base+0x155b8>
   2ecf8:	mov	r0, sl
   2ecfc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ed00:	mov	r0, r5
   2ed04:	bl	309d8 <crc32@@Base+0x17290>
   2ed08:	ldr	r1, [r5, #16]
   2ed0c:	mov	r2, sl
   2ed10:	mov	r3, #1
   2ed14:	ubfx	lr, r1, #8, #8
   2ed18:	ubfx	ip, r1, #16, #8
   2ed1c:	lsr	r4, r1, #24
   2ed20:	orr	r4, r4, r1, lsl #24
   2ed24:	orr	r4, r4, lr, lsl #16
   2ed28:	orr	r4, r4, ip, lsl #8
   2ed2c:	add	r4, r4, r0, lsl #4
   2ed30:	mov	r0, r5
   2ed34:	add	fp, r5, r4
   2ed38:	mov	r1, fp
   2ed3c:	bl	2e854 <crc32@@Base+0x1510c>
   2ed40:	subs	sl, r0, #0
   2ed44:	bne	2ecf8 <crc32@@Base+0x155b0>
   2ed48:	rev	r9, r9
   2ed4c:	rev	r8, r8
   2ed50:	str	r9, [r5, r4]
   2ed54:	rev	r7, r7
   2ed58:	rev	r6, r6
   2ed5c:	str	r8, [fp, #4]
   2ed60:	strd	r6, [fp, #8]
   2ed64:	mov	r0, sl
   2ed68:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ed6c:	push	{r4, r5, r6, r7, r8, lr}
   2ed70:	mov	r5, r0
   2ed74:	mov	r6, r1
   2ed78:	ldr	r4, [r0, #16]
   2ed7c:	bl	2ec4c <crc32@@Base+0x15504>
   2ed80:	subs	r7, r0, #0
   2ed84:	beq	2ed90 <crc32@@Base+0x15648>
   2ed88:	mov	r0, r7
   2ed8c:	pop	{r4, r5, r6, r7, r8, pc}
   2ed90:	mov	r0, r5
   2ed94:	bl	309d8 <crc32@@Base+0x17290>
   2ed98:	cmp	r6, r0
   2ed9c:	bge	2edd4 <crc32@@Base+0x1568c>
   2eda0:	ubfx	r3, r4, #8, #8
   2eda4:	lsr	r1, r4, #24
   2eda8:	orr	r1, r1, r4, lsl #24
   2edac:	ubfx	r4, r4, #16, #8
   2edb0:	orr	r1, r1, r3, lsl #16
   2edb4:	mov	r0, r5
   2edb8:	orr	r1, r1, r4, lsl #8
   2edbc:	mov	r3, r7
   2edc0:	add	r1, r1, r6, lsl #4
   2edc4:	mov	r2, #1
   2edc8:	add	r1, r5, r1
   2edcc:	pop	{r4, r5, r6, r7, r8, lr}
   2edd0:	b	2e854 <crc32@@Base+0x1510c>
   2edd4:	mvn	r7, #0
   2edd8:	b	2ed88 <crc32@@Base+0x15640>
   2eddc:	push	{r4, r5, r6, r7, r8, r9, lr}
   2ede0:	movw	r4, #61168	; 0xeef0
   2ede4:	movt	r4, #4
   2ede8:	sub	sp, sp, #12
   2edec:	mov	r7, r1
   2edf0:	mov	r8, r2
   2edf4:	ldr	r3, [r4]
   2edf8:	mov	r6, r0
   2edfc:	str	r3, [sp, #4]
   2ee00:	bl	2ec4c <crc32@@Base+0x15504>
   2ee04:	subs	r5, r0, #0
   2ee08:	beq	2ee28 <crc32@@Base+0x156e0>
   2ee0c:	ldr	r2, [sp, #4]
   2ee10:	mov	r0, r5
   2ee14:	ldr	r3, [r4]
   2ee18:	cmp	r2, r3
   2ee1c:	bne	2ee8c <crc32@@Base+0x15744>
   2ee20:	add	sp, sp, #12
   2ee24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2ee28:	mov	r1, r7
   2ee2c:	mov	r2, sp
   2ee30:	mov	r0, r6
   2ee34:	bl	30bf4 <crc32@@Base+0x174ac>
   2ee38:	subs	r7, r0, #0
   2ee3c:	ldreq	r5, [sp]
   2ee40:	beq	2ee0c <crc32@@Base+0x156c4>
   2ee44:	mov	r0, r8
   2ee48:	bl	125c0 <strlen@plt>
   2ee4c:	ldr	r2, [sp]
   2ee50:	mov	r1, r7
   2ee54:	add	r2, r2, #4
   2ee58:	bic	r2, r2, #3
   2ee5c:	add	r3, r0, #4
   2ee60:	mov	r9, r0
   2ee64:	bic	r3, r3, #3
   2ee68:	mov	r0, r6
   2ee6c:	bl	2e8d0 <crc32@@Base+0x15188>
   2ee70:	subs	r5, r0, #0
   2ee74:	bne	2ee0c <crc32@@Base+0x156c4>
   2ee78:	add	r2, r9, #1
   2ee7c:	mov	r1, r8
   2ee80:	mov	r0, r7
   2ee84:	bl	1259c <memcpy@plt>
   2ee88:	b	2ee0c <crc32@@Base+0x156c4>
   2ee8c:	bl	12494 <__stack_chk_fail@plt>
   2ee90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ee94:	movw	r4, #61168	; 0xeef0
   2ee98:	movt	r4, #4
   2ee9c:	mov	r9, r2
   2eea0:	sub	sp, sp, #24
   2eea4:	mov	r8, r1
   2eea8:	ldr	r2, [r4]
   2eeac:	mov	r6, r3
   2eeb0:	mov	r7, r0
   2eeb4:	ldr	sl, [sp, #56]	; 0x38
   2eeb8:	str	r2, [sp, #20]
   2eebc:	bl	2ec4c <crc32@@Base+0x15504>
   2eec0:	subs	r5, r0, #0
   2eec4:	beq	2eee4 <crc32@@Base+0x1579c>
   2eec8:	ldr	r2, [sp, #20]
   2eecc:	mov	r0, r5
   2eed0:	ldr	r3, [r4]
   2eed4:	cmp	r2, r3
   2eed8:	bne	2efa4 <crc32@@Base+0x1585c>
   2eedc:	add	sp, sp, #24
   2eee0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2eee4:	add	r3, sp, #16
   2eee8:	mov	r2, r9
   2eeec:	mov	r1, r8
   2eef0:	mov	r0, r7
   2eef4:	bl	30e20 <crc32@@Base+0x176d8>
   2eef8:	cmp	r0, #0
   2eefc:	str	r0, [sp, #12]
   2ef00:	beq	2ef68 <crc32@@Base+0x15820>
   2ef04:	ldr	r2, [sp, #16]
   2ef08:	add	r3, r6, #3
   2ef0c:	add	r1, r0, #12
   2ef10:	bic	r3, r3, #3
   2ef14:	add	r2, r2, #3
   2ef18:	mov	r0, r7
   2ef1c:	bic	r2, r2, #3
   2ef20:	bl	2e8d0 <crc32@@Base+0x15188>
   2ef24:	cmp	r0, #0
   2ef28:	bne	2ef58 <crc32@@Base+0x15810>
   2ef2c:	lsr	r3, r6, #24
   2ef30:	ubfx	r1, r6, #8, #8
   2ef34:	ldr	r2, [sp, #12]
   2ef38:	orr	r3, r3, r6, lsl #24
   2ef3c:	ubfx	r6, r6, #16, #8
   2ef40:	orr	r3, r3, r1, lsl #16
   2ef44:	orr	r6, r3, r6, lsl #8
   2ef48:	str	r6, [r2, #4]
   2ef4c:	add	r2, r2, #12
   2ef50:	str	r2, [sl]
   2ef54:	b	2eec8 <crc32@@Base+0x15780>
   2ef58:	cmn	r0, #1
   2ef5c:	beq	2ef84 <crc32@@Base+0x1583c>
   2ef60:	mov	r5, r0
   2ef64:	b	2eec8 <crc32@@Base+0x15780>
   2ef68:	ldr	r0, [sp, #16]
   2ef6c:	cmn	r0, #1
   2ef70:	beq	2ef84 <crc32@@Base+0x1583c>
   2ef74:	cmp	r0, #0
   2ef78:	bne	2ef60 <crc32@@Base+0x15818>
   2ef7c:	ldr	r2, [sp, #12]
   2ef80:	b	2ef4c <crc32@@Base+0x15804>
   2ef84:	add	ip, sp, #12
   2ef88:	mov	r3, r6
   2ef8c:	mov	r2, r9
   2ef90:	mov	r1, r8
   2ef94:	mov	r0, r7
   2ef98:	str	ip, [sp]
   2ef9c:	bl	2eb80 <crc32@@Base+0x15438>
   2efa0:	b	2ef74 <crc32@@Base+0x1582c>
   2efa4:	bl	12494 <__stack_chk_fail@plt>
   2efa8:	push	{r4, r5, r6, lr}
   2efac:	movw	r4, #61168	; 0xeef0
   2efb0:	movt	r4, #4
   2efb4:	sub	sp, sp, #16
   2efb8:	mov	r6, r3
   2efbc:	add	r3, sp, #8
   2efc0:	ldr	ip, [r4]
   2efc4:	str	r3, [sp]
   2efc8:	ldr	r3, [sp, #32]
   2efcc:	str	ip, [sp, #12]
   2efd0:	bl	2ee90 <crc32@@Base+0x15748>
   2efd4:	subs	r5, r0, #0
   2efd8:	bne	2efe8 <crc32@@Base+0x158a0>
   2efdc:	ldr	r3, [sp, #32]
   2efe0:	cmp	r3, #0
   2efe4:	bne	2f004 <crc32@@Base+0x158bc>
   2efe8:	ldr	r2, [sp, #12]
   2efec:	mov	r0, r5
   2eff0:	ldr	r3, [r4]
   2eff4:	cmp	r2, r3
   2eff8:	bne	2f018 <crc32@@Base+0x158d0>
   2effc:	add	sp, sp, #16
   2f000:	pop	{r4, r5, r6, pc}
   2f004:	mov	r1, r6
   2f008:	mov	r2, r3
   2f00c:	ldr	r0, [sp, #8]
   2f010:	bl	1259c <memcpy@plt>
   2f014:	b	2efe8 <crc32@@Base+0x158a0>
   2f018:	bl	12494 <__stack_chk_fail@plt>
   2f01c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f020:	movw	r4, #61168	; 0xeef0
   2f024:	movt	r4, #4
   2f028:	mov	r8, r2
   2f02c:	sub	sp, sp, #28
   2f030:	mov	r7, r1
   2f034:	ldr	r2, [r4]
   2f038:	mov	r9, r3
   2f03c:	mov	r6, r0
   2f040:	str	r2, [sp, #20]
   2f044:	bl	2ec4c <crc32@@Base+0x15504>
   2f048:	subs	r5, r0, #0
   2f04c:	beq	2f06c <crc32@@Base+0x15924>
   2f050:	ldr	r2, [sp, #20]
   2f054:	mov	r0, r5
   2f058:	ldr	r3, [r4]
   2f05c:	cmp	r2, r3
   2f060:	bne	2f134 <crc32@@Base+0x159ec>
   2f064:	add	sp, sp, #28
   2f068:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2f06c:	add	r3, sp, #16
   2f070:	mov	r2, r8
   2f074:	mov	r1, r7
   2f078:	mov	r0, r6
   2f07c:	bl	30e20 <crc32@@Base+0x176d8>
   2f080:	cmp	r0, #0
   2f084:	str	r0, [sp, #12]
   2f088:	beq	2f0f8 <crc32@@Base+0x159b0>
   2f08c:	ldr	r2, [sp, #16]
   2f090:	add	r1, r0, #12
   2f094:	ldr	r3, [sp, #56]	; 0x38
   2f098:	mov	r0, r6
   2f09c:	add	r6, r2, r3
   2f0a0:	add	r2, r2, #3
   2f0a4:	add	r3, r6, #3
   2f0a8:	bic	r2, r2, #3
   2f0ac:	bic	r3, r3, #3
   2f0b0:	bl	2e8d0 <crc32@@Base+0x15188>
   2f0b4:	subs	r5, r0, #0
   2f0b8:	bne	2f050 <crc32@@Base+0x15908>
   2f0bc:	ubfx	r1, r6, #8, #8
   2f0c0:	lsr	r3, r6, #24
   2f0c4:	ldr	r2, [sp, #12]
   2f0c8:	orr	r3, r3, r6, lsl #24
   2f0cc:	ubfx	r6, r6, #16, #8
   2f0d0:	orr	r3, r3, r1, lsl #16
   2f0d4:	ldr	r0, [sp, #16]
   2f0d8:	mov	r1, r9
   2f0dc:	orr	r6, r3, r6, lsl #8
   2f0e0:	add	r3, r2, #12
   2f0e4:	str	r6, [r2, #4]
   2f0e8:	add	r0, r3, r0
   2f0ec:	ldr	r2, [sp, #56]	; 0x38
   2f0f0:	bl	1259c <memcpy@plt>
   2f0f4:	b	2f050 <crc32@@Base+0x15908>
   2f0f8:	add	r3, sp, #12
   2f0fc:	mov	r2, r8
   2f100:	str	r3, [sp]
   2f104:	mov	r1, r7
   2f108:	mov	r0, r6
   2f10c:	ldr	r3, [sp, #56]	; 0x38
   2f110:	bl	2eb80 <crc32@@Base+0x15438>
   2f114:	subs	r5, r0, #0
   2f118:	bne	2f050 <crc32@@Base+0x15908>
   2f11c:	ldr	r0, [sp, #12]
   2f120:	mov	r1, r9
   2f124:	ldr	r2, [sp, #56]	; 0x38
   2f128:	add	r0, r0, #12
   2f12c:	bl	1259c <memcpy@plt>
   2f130:	b	2f050 <crc32@@Base+0x15908>
   2f134:	bl	12494 <__stack_chk_fail@plt>
   2f138:	push	{r4, r5, r6, r7, r8, lr}
   2f13c:	movw	r4, #61168	; 0xeef0
   2f140:	movt	r4, #4
   2f144:	sub	sp, sp, #8
   2f148:	mov	r7, r1
   2f14c:	mov	r8, r2
   2f150:	ldr	r3, [r4]
   2f154:	mov	r6, r0
   2f158:	str	r3, [sp, #4]
   2f15c:	bl	2ec4c <crc32@@Base+0x15504>
   2f160:	subs	r5, r0, #0
   2f164:	beq	2f184 <crc32@@Base+0x15a3c>
   2f168:	ldr	r2, [sp, #4]
   2f16c:	mov	r0, r5
   2f170:	ldr	r3, [r4]
   2f174:	cmp	r2, r3
   2f178:	bne	2f1c8 <crc32@@Base+0x15a80>
   2f17c:	add	sp, sp, #8
   2f180:	pop	{r4, r5, r6, r7, r8, pc}
   2f184:	mov	r1, r7
   2f188:	mov	r2, r8
   2f18c:	mov	r3, sp
   2f190:	mov	r0, r6
   2f194:	bl	30e20 <crc32@@Base+0x176d8>
   2f198:	subs	r1, r0, #0
   2f19c:	ldreq	r5, [sp]
   2f1a0:	beq	2f168 <crc32@@Base+0x15a20>
   2f1a4:	ldr	r2, [sp]
   2f1a8:	mov	r3, r5
   2f1ac:	mov	r0, r6
   2f1b0:	add	r2, r2, #3
   2f1b4:	bic	r2, r2, #3
   2f1b8:	add	r2, r2, #12
   2f1bc:	bl	2e8d0 <crc32@@Base+0x15188>
   2f1c0:	mov	r5, r0
   2f1c4:	b	2f168 <crc32@@Base+0x15a20>
   2f1c8:	bl	12494 <__stack_chk_fail@plt>
   2f1cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f1d0:	movw	r4, #61168	; 0xeef0
   2f1d4:	movt	r4, #4
   2f1d8:	mov	r7, r2
   2f1dc:	sub	sp, sp, #12
   2f1e0:	mov	r8, r1
   2f1e4:	ldr	r2, [r4]
   2f1e8:	mov	r6, r3
   2f1ec:	mov	r5, r0
   2f1f0:	str	r2, [sp, #4]
   2f1f4:	bl	2ec4c <crc32@@Base+0x15504>
   2f1f8:	cmp	r0, #0
   2f1fc:	beq	2f218 <crc32@@Base+0x15ad0>
   2f200:	ldr	r2, [sp, #4]
   2f204:	ldr	r3, [r4]
   2f208:	cmp	r2, r3
   2f20c:	bne	2f2f8 <crc32@@Base+0x15bb0>
   2f210:	add	sp, sp, #12
   2f214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f218:	mov	r3, r6
   2f21c:	mov	r2, r7
   2f220:	mov	r1, r8
   2f224:	mov	r0, r5
   2f228:	bl	30ad4 <crc32@@Base+0x1738c>
   2f22c:	cmp	r0, #0
   2f230:	bge	2f2f0 <crc32@@Base+0x15ba8>
   2f234:	cmn	r0, #1
   2f238:	bne	2f200 <crc32@@Base+0x15ab8>
   2f23c:	mov	r1, r8
   2f240:	mov	r0, r5
   2f244:	mov	r2, sp
   2f248:	bl	2d798 <crc32@@Base+0x14050>
   2f24c:	ldr	r8, [sp]
   2f250:	mov	r2, sp
   2f254:	mov	r0, r5
   2f258:	mov	r1, r8
   2f25c:	bl	2d798 <crc32@@Base+0x14050>
   2f260:	sub	r0, r0, #3
   2f264:	cmp	r0, #1
   2f268:	bls	2f24c <crc32@@Base+0x15b04>
   2f26c:	ldr	r1, [r5, #8]
   2f270:	add	sl, r6, #4
   2f274:	bic	sl, sl, #3
   2f278:	mov	r2, #0
   2f27c:	ubfx	lr, r1, #8, #8
   2f280:	ubfx	ip, r1, #16, #8
   2f284:	lsr	r9, r1, #24
   2f288:	add	r3, sl, #8
   2f28c:	orr	r9, r9, r1, lsl #24
   2f290:	mov	r0, r5
   2f294:	orr	r9, r9, lr, lsl #16
   2f298:	orr	r9, r9, ip, lsl #8
   2f29c:	add	r9, r9, r8
   2f2a0:	add	fp, r5, r9
   2f2a4:	mov	r1, fp
   2f2a8:	bl	2e8d0 <crc32@@Base+0x15188>
   2f2ac:	cmp	r0, #0
   2f2b0:	bne	2f200 <crc32@@Base+0x15ab8>
   2f2b4:	add	r3, fp, #4
   2f2b8:	mov	r1, r0
   2f2bc:	mov	r2, #16777216	; 0x1000000
   2f2c0:	str	r2, [r5, r9]
   2f2c4:	mov	r0, r3
   2f2c8:	mov	r2, sl
   2f2cc:	add	sl, fp, sl
   2f2d0:	bl	122e4 <memset@plt>
   2f2d4:	mov	r2, r6
   2f2d8:	mov	r1, r7
   2f2dc:	bl	1259c <memcpy@plt>
   2f2e0:	mov	r3, #33554432	; 0x2000000
   2f2e4:	mov	r0, r8
   2f2e8:	str	r3, [sl, #4]
   2f2ec:	b	2f200 <crc32@@Base+0x15ab8>
   2f2f0:	mvn	r0, #1
   2f2f4:	b	2f200 <crc32@@Base+0x15ab8>
   2f2f8:	bl	12494 <__stack_chk_fail@plt>
   2f2fc:	push	{r4, r5, r6, lr}
   2f300:	mov	r5, r0
   2f304:	mov	r0, r2
   2f308:	mov	r4, r2
   2f30c:	mov	r6, r1
   2f310:	bl	125c0 <strlen@plt>
   2f314:	mov	r2, r4
   2f318:	mov	r1, r6
   2f31c:	mov	r3, r0
   2f320:	mov	r0, r5
   2f324:	pop	{r4, r5, r6, lr}
   2f328:	b	2f1cc <crc32@@Base+0x15a84>
   2f32c:	push	{r4, r5, r6, lr}
   2f330:	mov	r5, r1
   2f334:	mov	r4, r0
   2f338:	bl	2ec4c <crc32@@Base+0x15504>
   2f33c:	cmp	r0, #0
   2f340:	popne	{r4, r5, r6, pc}
   2f344:	mov	r1, r5
   2f348:	mov	r0, r4
   2f34c:	bl	2dd90 <crc32@@Base+0x14648>
   2f350:	cmp	r0, #0
   2f354:	poplt	{r4, r5, r6, pc}
   2f358:	ldr	r3, [r4, #8]
   2f35c:	sub	r2, r0, r5
   2f360:	mov	r0, r4
   2f364:	ubfx	lr, r3, #8, #8
   2f368:	ubfx	ip, r3, #16, #8
   2f36c:	lsr	r1, r3, #24
   2f370:	orr	r1, r1, r3, lsl #24
   2f374:	mov	r3, #0
   2f378:	orr	r1, r1, lr, lsl #16
   2f37c:	orr	r1, r1, ip, lsl #8
   2f380:	add	r1, r1, r5
   2f384:	add	r1, r4, r1
   2f388:	pop	{r4, r5, r6, lr}
   2f38c:	b	2e8d0 <crc32@@Base+0x15188>
   2f390:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f394:	movw	r5, #61168	; 0xeef0
   2f398:	movt	r5, #4
   2f39c:	sub	sp, sp, #20
   2f3a0:	mov	r4, r0
   2f3a4:	mov	r7, r1
   2f3a8:	ldr	r3, [r5]
   2f3ac:	mov	r8, r2
   2f3b0:	ldr	sl, [r0, #4]
   2f3b4:	str	r3, [sp, #12]
   2f3b8:	bl	2d61c <crc32@@Base+0x13ed4>
   2f3bc:	subs	r9, r0, #0
   2f3c0:	beq	2f3e0 <crc32@@Base+0x15c98>
   2f3c4:	ldr	r2, [sp, #12]
   2f3c8:	mov	r0, r9
   2f3cc:	ldr	r3, [r5]
   2f3d0:	cmp	r2, r3
   2f3d4:	bne	2f5f8 <crc32@@Base+0x15eb0>
   2f3d8:	add	sp, sp, #20
   2f3dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f3e0:	mov	r0, r4
   2f3e4:	bl	309d8 <crc32@@Base+0x17290>
   2f3e8:	ldr	r2, [r4, #20]
   2f3ec:	ubfx	ip, r2, #8, #8
   2f3f0:	ubfx	r1, r2, #16, #8
   2f3f4:	lsr	r3, r2, #24
   2f3f8:	orr	r3, r3, r2, lsl #24
   2f3fc:	orr	r3, r3, ip, lsl #16
   2f400:	orr	r3, r3, r1, lsl #8
   2f404:	cmp	r3, #16
   2f408:	add	r0, r0, #1
   2f40c:	lsl	fp, r0, #4
   2f410:	bhi	2f55c <crc32@@Base+0x15e14>
   2f414:	add	r6, sp, #16
   2f418:	mov	r1, r9
   2f41c:	str	r9, [r6, #-8]!
   2f420:	b	2f428 <crc32@@Base+0x15ce0>
   2f424:	ldr	r1, [sp, #8]
   2f428:	mov	r2, r6
   2f42c:	mov	r0, r4
   2f430:	bl	2d798 <crc32@@Base+0x14050>
   2f434:	cmp	r0, #9
   2f438:	bne	2f424 <crc32@@Base+0x15cdc>
   2f43c:	ldr	r3, [sp, #8]
   2f440:	cmp	r3, #0
   2f444:	movlt	r9, r3
   2f448:	blt	2f3c4 <crc32@@Base+0x15c7c>
   2f44c:	mov	r2, r3
   2f450:	mov	r1, fp
   2f454:	mov	r0, r4
   2f458:	str	r3, [sp, #4]
   2f45c:	bl	2e6b4 <crc32@@Base+0x14f6c>
   2f460:	ldr	r3, [sp, #4]
   2f464:	cmp	r0, #0
   2f468:	beq	2f580 <crc32@@Base+0x15e38>
   2f46c:	ldr	r2, [r4, #32]
   2f470:	ubfx	r0, r2, #8, #8
   2f474:	ubfx	r1, r2, #16, #8
   2f478:	lsr	r6, r2, #24
   2f47c:	orr	r6, r6, r2, lsl #24
   2f480:	orr	r6, r6, r0, lsl #16
   2f484:	orr	r6, r6, r1, lsl #8
   2f488:	add	r6, r6, #40	; 0x28
   2f48c:	add	r6, r6, fp
   2f490:	add	r6, r6, r3
   2f494:	cmp	r6, r8
   2f498:	bgt	2f5f0 <crc32@@Base+0x15ea8>
   2f49c:	ubfx	r1, sl, #8, #8
   2f4a0:	lsr	r2, sl, #24
   2f4a4:	orr	r2, r2, sl, lsl #24
   2f4a8:	ubfx	sl, sl, #16, #8
   2f4ac:	orr	r2, r2, r1, lsl #16
   2f4b0:	add	r1, r7, r6
   2f4b4:	orr	sl, r2, sl, lsl #8
   2f4b8:	cmp	r4, r1
   2f4bc:	add	sl, r4, sl
   2f4c0:	movcs	r2, #0
   2f4c4:	movcc	r2, #1
   2f4c8:	cmp	sl, r7
   2f4cc:	movls	r2, #0
   2f4d0:	cmp	r2, #0
   2f4d4:	moveq	sl, r7
   2f4d8:	bne	2f5e0 <crc32@@Base+0x15e98>
   2f4dc:	mov	r2, fp
   2f4e0:	mov	r1, sl
   2f4e4:	mov	r0, r4
   2f4e8:	bl	2e944 <crc32@@Base+0x151fc>
   2f4ec:	mov	r2, r6
   2f4f0:	mov	r1, sl
   2f4f4:	mov	r0, r7
   2f4f8:	bl	12380 <memmove@plt>
   2f4fc:	ldr	r1, [r4, #28]
   2f500:	lsr	r2, r8, #24
   2f504:	ubfx	ip, r8, #8, #8
   2f508:	ubfx	lr, r1, #8, #8
   2f50c:	ubfx	r0, r1, #16, #8
   2f510:	lsr	r3, r1, #24
   2f514:	orr	r2, r2, r8, lsl #24
   2f518:	orr	r3, r3, r1, lsl #24
   2f51c:	ubfx	r8, r8, #16, #8
   2f520:	orr	r3, r3, lr, lsl #16
   2f524:	orr	r2, r2, ip, lsl #16
   2f528:	orr	r3, r3, r0, lsl #8
   2f52c:	orr	r8, r2, r8, lsl #8
   2f530:	rev	r3, r3
   2f534:	mov	r2, #285212672	; 0x11000000
   2f538:	str	r3, [r7, #28]
   2f53c:	mov	r3, #3536	; 0xdd0
   2f540:	str	r2, [r7, #20]
   2f544:	movt	r3, #60926	; 0xedfe
   2f548:	mov	r2, #268435456	; 0x10000000
   2f54c:	str	r8, [r7, #4]
   2f550:	str	r3, [r7]
   2f554:	str	r2, [r7, #24]
   2f558:	b	2f3c4 <crc32@@Base+0x15c7c>
   2f55c:	ldr	r2, [r4, #36]	; 0x24
   2f560:	ubfx	r0, r2, #8, #8
   2f564:	ubfx	r1, r2, #16, #8
   2f568:	lsr	r3, r2, #24
   2f56c:	orr	r3, r3, r2, lsl #24
   2f570:	orr	r3, r3, r0, lsl #16
   2f574:	orr	r3, r3, r1, lsl #8
   2f578:	str	r3, [sp, #8]
   2f57c:	b	2f44c <crc32@@Base+0x15d04>
   2f580:	mov	r0, r4
   2f584:	mov	r2, r8
   2f588:	mov	r1, r7
   2f58c:	bl	2dba4 <crc32@@Base+0x1445c>
   2f590:	subs	r9, r0, #0
   2f594:	bne	2f3c4 <crc32@@Base+0x15c7c>
   2f598:	ldr	r1, [sp, #8]
   2f59c:	lsr	r2, r8, #24
   2f5a0:	ubfx	ip, r8, #8, #8
   2f5a4:	orr	r2, r2, r8, lsl #24
   2f5a8:	ubfx	r0, r1, #8, #8
   2f5ac:	ubfx	r8, r8, #16, #8
   2f5b0:	lsr	r3, r1, #24
   2f5b4:	orr	r2, r2, ip, lsl #16
   2f5b8:	orr	r3, r3, r1, lsl #24
   2f5bc:	ubfx	r1, r1, #16, #8
   2f5c0:	orr	r3, r3, r0, lsl #16
   2f5c4:	orr	r8, r2, r8, lsl #8
   2f5c8:	orr	r3, r3, r1, lsl #8
   2f5cc:	str	r8, [r7, #4]
   2f5d0:	str	r3, [r7, #36]	; 0x24
   2f5d4:	mov	r3, #285212672	; 0x11000000
   2f5d8:	str	r3, [r7, #20]
   2f5dc:	b	2f3c4 <crc32@@Base+0x15c7c>
   2f5e0:	add	r2, sl, r6
   2f5e4:	add	r1, r7, r8
   2f5e8:	cmp	r2, r1
   2f5ec:	bls	2f4dc <crc32@@Base+0x15d94>
   2f5f0:	mvn	r9, #2
   2f5f4:	b	2f3c4 <crc32@@Base+0x15c7c>
   2f5f8:	bl	12494 <__stack_chk_fail@plt>
   2f5fc:	push	{r4, r5, r6, lr}
   2f600:	mov	r4, r0
   2f604:	bl	2ec4c <crc32@@Base+0x15504>
   2f608:	subs	r5, r0, #0
   2f60c:	bne	2f68c <crc32@@Base+0x15f44>
   2f610:	mov	r0, r4
   2f614:	bl	309d8 <crc32@@Base+0x17290>
   2f618:	ldr	r3, [r4, #36]	; 0x24
   2f61c:	mov	r1, r4
   2f620:	ubfx	lr, r3, #8, #8
   2f624:	ubfx	ip, r3, #16, #8
   2f628:	lsr	r2, r3, #24
   2f62c:	orr	r2, r2, r3, lsl #24
   2f630:	orr	r3, r2, lr, lsl #16
   2f634:	orr	r3, r3, ip, lsl #8
   2f638:	add	r2, r0, #1
   2f63c:	mov	r0, r4
   2f640:	lsl	r2, r2, #4
   2f644:	bl	2e944 <crc32@@Base+0x151fc>
   2f648:	ldr	r0, [r4, #12]
   2f64c:	ldr	r1, [r4, #32]
   2f650:	ubfx	r6, r0, #8, #8
   2f654:	ubfx	ip, r0, #16, #8
   2f658:	ubfx	lr, r1, #8, #8
   2f65c:	lsr	r3, r0, #24
   2f660:	lsr	r2, r1, #24
   2f664:	orr	r3, r3, r0, lsl #24
   2f668:	orr	r2, r2, r1, lsl #24
   2f66c:	ubfx	r1, r1, #16, #8
   2f670:	orr	r3, r3, r6, lsl #16
   2f674:	orr	r2, r2, lr, lsl #16
   2f678:	orr	r3, r3, ip, lsl #8
   2f67c:	orr	r2, r2, r1, lsl #8
   2f680:	add	r3, r3, r2
   2f684:	rev	r3, r3
   2f688:	str	r3, [r4, #4]
   2f68c:	mov	r0, r5
   2f690:	pop	{r4, r5, r6, pc}
   2f694:	push	{r4, r5, r6, r7, r8, r9, lr}
   2f698:	mov	r5, r0
   2f69c:	ldr	r0, [r0, #4]
   2f6a0:	movw	r7, #61168	; 0xeef0
   2f6a4:	movt	r7, #4
   2f6a8:	mov	r6, r1
   2f6ac:	ubfx	lr, r0, #8, #8
   2f6b0:	ubfx	r2, r0, #16, #8
   2f6b4:	lsr	r3, r0, #24
   2f6b8:	ldr	ip, [r7]
   2f6bc:	orr	r3, r3, r0, lsl #24
   2f6c0:	sub	sp, sp, #12
   2f6c4:	orr	r3, r3, lr, lsl #16
   2f6c8:	mov	r1, r5
   2f6cc:	orr	r2, r3, r2, lsl #8
   2f6d0:	mov	r0, r6
   2f6d4:	str	ip, [sp, #4]
   2f6d8:	bl	1259c <memcpy@plt>
   2f6dc:	mov	r3, #0
   2f6e0:	str	r3, [r6, #32]
   2f6e4:	mov	r4, r3
   2f6e8:	mov	r2, sp
   2f6ec:	mov	r1, r4
   2f6f0:	mov	r0, r5
   2f6f4:	bl	2d798 <crc32@@Base+0x14050>
   2f6f8:	cmp	r0, #3
   2f6fc:	beq	2f728 <crc32@@Base+0x15fe0>
   2f700:	cmp	r0, #9
   2f704:	ldr	r4, [sp]
   2f708:	bne	2f6e8 <crc32@@Base+0x15fa0>
   2f70c:	mov	r0, #0
   2f710:	ldr	r2, [sp, #4]
   2f714:	ldr	r3, [r7]
   2f718:	cmp	r2, r3
   2f71c:	bne	2f7ac <crc32@@Base+0x16064>
   2f720:	add	sp, sp, #12
   2f724:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2f728:	mov	r2, #0
   2f72c:	mov	r1, r4
   2f730:	mov	r0, r5
   2f734:	bl	30cc0 <crc32@@Base+0x17578>
   2f738:	mov	r1, r4
   2f73c:	mov	r2, #0
   2f740:	mov	r9, r0
   2f744:	mov	r0, r6
   2f748:	bl	30cc0 <crc32@@Base+0x17578>
   2f74c:	ldr	r2, [r9, #8]
   2f750:	ubfx	ip, r2, #8, #8
   2f754:	ubfx	r1, r2, #16, #8
   2f758:	lsr	r3, r2, #24
   2f75c:	orr	r3, r3, r2, lsl #24
   2f760:	orr	r3, r3, ip, lsl #16
   2f764:	orr	r1, r3, r1, lsl #8
   2f768:	mov	r8, r0
   2f76c:	mov	r0, r5
   2f770:	bl	30814 <crc32@@Base+0x170cc>
   2f774:	mov	r1, r0
   2f778:	mov	r0, r6
   2f77c:	bl	2ea78 <crc32@@Base+0x15330>
   2f780:	cmp	r0, #0
   2f784:	blt	2f710 <crc32@@Base+0x15fc8>
   2f788:	lsr	r3, r0, #24
   2f78c:	ubfx	r1, r0, #8, #8
   2f790:	ubfx	r2, r0, #16, #8
   2f794:	orr	r3, r3, r0, lsl #24
   2f798:	orr	r0, r3, r1, lsl #16
   2f79c:	ldr	r4, [sp]
   2f7a0:	orr	r0, r0, r2, lsl #8
   2f7a4:	str	r0, [r8, #8]
   2f7a8:	b	2f6e8 <crc32@@Base+0x15fa0>
   2f7ac:	bl	12494 <__stack_chk_fail@plt>
   2f7b0:	cmp	r0, #0
   2f7b4:	ble	2f7c4 <crc32@@Base+0x1607c>
   2f7b8:	movw	r0, #51884	; 0xcaac
   2f7bc:	movt	r0, #3
   2f7c0:	bx	lr
   2f7c4:	beq	2f800 <crc32@@Base+0x160b8>
   2f7c8:	cmn	r0, #18
   2f7cc:	bls	2f7f4 <crc32@@Base+0x160ac>
   2f7d0:	rsb	r0, r0, #0
   2f7d4:	movw	r2, #51812	; 0xca64
   2f7d8:	movt	r2, #3
   2f7dc:	movw	r3, #51920	; 0xcad0
   2f7e0:	movt	r3, #3
   2f7e4:	ldr	r0, [r2, r0, lsl #2]
   2f7e8:	cmp	r0, #0
   2f7ec:	moveq	r0, r3
   2f7f0:	bx	lr
   2f7f4:	movw	r0, #51920	; 0xcad0
   2f7f8:	movt	r0, #3
   2f7fc:	bx	lr
   2f800:	movw	r0, #51908	; 0xcac4
   2f804:	movt	r0, #3
   2f808:	bx	lr
   2f80c:	push	{r4, r5, r6, lr}
   2f810:	mov	r4, r0
   2f814:	mov	r5, r1
   2f818:	bl	2df00 <crc32@@Base+0x147b8>
   2f81c:	cmp	r0, #0
   2f820:	popne	{r4, r5, r6, pc}
   2f824:	mov	r0, r4
   2f828:	bl	2e188 <crc32@@Base+0x14a40>
   2f82c:	cmp	r0, #0
   2f830:	popne	{r4, r5, r6, pc}
   2f834:	movw	r1, #46016	; 0xb3c0
   2f838:	mov	r0, r4
   2f83c:	movt	r1, #3
   2f840:	bl	2e1a8 <crc32@@Base+0x14a60>
   2f844:	cmp	r0, #0
   2f848:	popne	{r4, r5, r6, pc}
   2f84c:	mov	r0, r4
   2f850:	bl	2e234 <crc32@@Base+0x14aec>
   2f854:	cmp	r0, #0
   2f858:	popne	{r4, r5, r6, pc}
   2f85c:	mov	r0, r4
   2f860:	bl	2e4c4 <crc32@@Base+0x14d7c>
   2f864:	cmp	r0, #0
   2f868:	popne	{r4, r5, r6, pc}
   2f86c:	mov	r2, r5
   2f870:	mov	r1, r4
   2f874:	mov	r0, r4
   2f878:	pop	{r4, r5, r6, lr}
   2f87c:	b	2f390 <crc32@@Base+0x15c48>
   2f880:	push	{r4, lr}
   2f884:	movw	r4, #61168	; 0xeef0
   2f888:	movt	r4, #4
   2f88c:	sub	sp, sp, #8
   2f890:	movw	r2, #27324	; 0x6abc
   2f894:	movt	r2, #3
   2f898:	ldr	ip, [r4]
   2f89c:	mov	r3, sp
   2f8a0:	str	ip, [sp, #4]
   2f8a4:	bl	30ef4 <crc32@@Base+0x177ac>
   2f8a8:	cmp	r0, #0
   2f8ac:	moveq	r0, #2
   2f8b0:	beq	2f8e8 <crc32@@Base+0x161a0>
   2f8b4:	ldr	r3, [sp]
   2f8b8:	cmp	r3, #4
   2f8bc:	bne	2f900 <crc32@@Base+0x161b8>
   2f8c0:	ldr	r3, [r0]
   2f8c4:	ubfx	r1, r3, #8, #8
   2f8c8:	ubfx	r2, r3, #16, #8
   2f8cc:	lsr	r0, r3, #24
   2f8d0:	orr	r0, r0, r3, lsl #24
   2f8d4:	orr	r0, r0, r1, lsl #16
   2f8d8:	orr	r0, r0, r2, lsl #8
   2f8dc:	sub	r3, r0, #1
   2f8e0:	cmp	r3, #4
   2f8e4:	mvncs	r0, #13
   2f8e8:	ldr	r2, [sp, #4]
   2f8ec:	ldr	r3, [r4]
   2f8f0:	cmp	r2, r3
   2f8f4:	bne	2f908 <crc32@@Base+0x161c0>
   2f8f8:	add	sp, sp, #8
   2f8fc:	pop	{r4, pc}
   2f900:	mvn	r0, #13
   2f904:	b	2f8e8 <crc32@@Base+0x161a0>
   2f908:	bl	12494 <__stack_chk_fail@plt>
   2f90c:	push	{r4, lr}
   2f910:	movw	r4, #61168	; 0xeef0
   2f914:	movt	r4, #4
   2f918:	sub	sp, sp, #8
   2f91c:	movw	r2, #52268	; 0xcc2c
   2f920:	movt	r2, #3
   2f924:	ldr	ip, [r4]
   2f928:	mov	r3, sp
   2f92c:	str	ip, [sp, #4]
   2f930:	bl	30ef4 <crc32@@Base+0x177ac>
   2f934:	cmp	r0, #0
   2f938:	moveq	r0, #2
   2f93c:	beq	2f970 <crc32@@Base+0x16228>
   2f940:	ldr	r3, [sp]
   2f944:	cmp	r3, #4
   2f948:	bne	2f988 <crc32@@Base+0x16240>
   2f94c:	ldr	r3, [r0]
   2f950:	ubfx	r1, r3, #8, #8
   2f954:	ubfx	r2, r3, #16, #8
   2f958:	lsr	r0, r3, #24
   2f95c:	orr	r0, r0, r3, lsl #24
   2f960:	orr	r0, r0, r1, lsl #16
   2f964:	orr	r0, r0, r2, lsl #8
   2f968:	cmp	r0, #5
   2f96c:	mvncs	r0, #13
   2f970:	ldr	r2, [sp, #4]
   2f974:	ldr	r3, [r4]
   2f978:	cmp	r2, r3
   2f97c:	bne	2f990 <crc32@@Base+0x16248>
   2f980:	add	sp, sp, #8
   2f984:	pop	{r4, pc}
   2f988:	mvn	r0, #13
   2f98c:	b	2f970 <crc32@@Base+0x16228>
   2f990:	bl	12494 <__stack_chk_fail@plt>
   2f994:	push	{r4, r5, r6, r7, r8, lr}
   2f998:	movw	r5, #61168	; 0xeef0
   2f99c:	movt	r5, #4
   2f9a0:	sub	sp, sp, #24
   2f9a4:	mov	r4, r3
   2f9a8:	add	r3, sp, #12
   2f9ac:	ldr	ip, [r5]
   2f9b0:	mov	r6, r0
   2f9b4:	mov	r7, r1
   2f9b8:	mov	r8, r2
   2f9bc:	str	ip, [sp, #20]
   2f9c0:	bl	30ef4 <crc32@@Base+0x177ac>
   2f9c4:	cmp	r0, #0
   2f9c8:	ldreq	r0, [sp, #12]
   2f9cc:	beq	2fa38 <crc32@@Base+0x162f0>
   2f9d0:	ldr	r1, [sp, #12]
   2f9d4:	cmp	r1, #4
   2f9d8:	bne	2fa58 <crc32@@Base+0x16310>
   2f9dc:	ldr	r2, [r0]
   2f9e0:	ubfx	ip, r2, #8, #8
   2f9e4:	ubfx	r0, r2, #16, #8
   2f9e8:	lsr	r3, r2, #24
   2f9ec:	orr	r3, r3, r2, lsl #24
   2f9f0:	orr	r3, r3, ip, lsl #16
   2f9f4:	orr	r3, r3, r0, lsl #8
   2f9f8:	adds	r4, r4, r3
   2f9fc:	movcs	r3, #1
   2fa00:	movcc	r3, #0
   2fa04:	cmn	r4, #1
   2fa08:	movne	r2, #0
   2fa0c:	moveq	r2, #1
   2fa10:	orrs	r3, r2, r3
   2fa14:	bne	2fa50 <crc32@@Base+0x16308>
   2fa18:	add	r3, sp, #24
   2fa1c:	str	r1, [sp]
   2fa20:	rev	r4, r4
   2fa24:	mov	r2, r8
   2fa28:	mov	r1, r7
   2fa2c:	mov	r0, r6
   2fa30:	str	r4, [r3, #-8]!
   2fa34:	bl	2dc84 <crc32@@Base+0x1453c>
   2fa38:	ldr	r2, [sp, #20]
   2fa3c:	ldr	r3, [r5]
   2fa40:	cmp	r2, r3
   2fa44:	bne	2fa60 <crc32@@Base+0x16318>
   2fa48:	add	sp, sp, #24
   2fa4c:	pop	{r4, r5, r6, r7, r8, pc}
   2fa50:	mvn	r0, #16
   2fa54:	b	2fa38 <crc32@@Base+0x162f0>
   2fa58:	mvn	r0, #5
   2fa5c:	b	2fa38 <crc32@@Base+0x162f0>
   2fa60:	bl	12494 <__stack_chk_fail@plt>
   2fa64:	push	{r4, r5, r6, lr}
   2fa68:	mov	r4, r2
   2fa6c:	mov	r3, r4
   2fa70:	movw	r2, #52280	; 0xcc38
   2fa74:	movt	r2, #3
   2fa78:	mov	r5, r0
   2fa7c:	mov	r6, r1
   2fa80:	bl	2f994 <crc32@@Base+0x1624c>
   2fa84:	add	r2, r0, #1
   2fa88:	mov	r3, r0
   2fa8c:	cmp	r2, #1
   2fa90:	bls	2fa9c <crc32@@Base+0x16354>
   2fa94:	mov	r0, r3
   2fa98:	pop	{r4, r5, r6, pc}
   2fa9c:	mov	r3, r4
   2faa0:	movw	r2, #52288	; 0xcc40
   2faa4:	mov	r1, r6
   2faa8:	movt	r2, #3
   2faac:	mov	r0, r5
   2fab0:	bl	2f994 <crc32@@Base+0x1624c>
   2fab4:	add	r2, r0, #1
   2fab8:	mov	r3, r0
   2fabc:	cmp	r2, #1
   2fac0:	bhi	2fa94 <crc32@@Base+0x1634c>
   2fac4:	mov	r1, r6
   2fac8:	mov	r0, r5
   2facc:	bl	2da68 <crc32@@Base+0x14320>
   2fad0:	subs	r6, r0, #0
   2fad4:	blt	2fb04 <crc32@@Base+0x163bc>
   2fad8:	mov	r1, r6
   2fadc:	mov	r2, r4
   2fae0:	mov	r0, r5
   2fae4:	bl	2fa64 <crc32@@Base+0x1631c>
   2fae8:	mov	r1, r6
   2faec:	subs	r3, r0, #0
   2faf0:	mov	r0, r5
   2faf4:	bne	2fa94 <crc32@@Base+0x1634c>
   2faf8:	bl	2dac8 <crc32@@Base+0x14380>
   2fafc:	subs	r6, r0, #0
   2fb00:	bge	2fad8 <crc32@@Base+0x16390>
   2fb04:	mov	r3, #0
   2fb08:	b	2fa94 <crc32@@Base+0x1634c>
   2fb0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fb10:	movw	ip, #61168	; 0xeef0
   2fb14:	sub	sp, sp, #60	; 0x3c
   2fb18:	movt	ip, #4
   2fb1c:	mov	lr, r2
   2fb20:	mov	r7, r1
   2fb24:	str	r2, [sp, #28]
   2fb28:	mov	r1, lr
   2fb2c:	ldr	r2, [ip]
   2fb30:	mov	r9, r3
   2fb34:	str	ip, [sp, #24]
   2fb38:	mov	r6, r0
   2fb3c:	str	r2, [sp, #52]	; 0x34
   2fb40:	bl	30c80 <crc32@@Base+0x17538>
   2fb44:	subs	r3, r0, #0
   2fb48:	str	r3, [sp, #20]
   2fb4c:	blt	2fc78 <crc32@@Base+0x16530>
   2fb50:	add	r3, sp, #40	; 0x28
   2fb54:	add	r2, sp, #36	; 0x24
   2fb58:	ldr	r1, [sp, #20]
   2fb5c:	mov	r0, r6
   2fb60:	bl	30e84 <crc32@@Base+0x1773c>
   2fb64:	subs	r5, r0, #0
   2fb68:	beq	2fcf4 <crc32@@Base+0x165ac>
   2fb6c:	ldr	r4, [sp, #40]	; 0x28
   2fb70:	ands	r4, r4, #3
   2fb74:	bne	2fc40 <crc32@@Base+0x164f8>
   2fb78:	add	r3, sp, #44	; 0x2c
   2fb7c:	ldr	r2, [sp, #36]	; 0x24
   2fb80:	mov	r1, r7
   2fb84:	mov	r0, r6
   2fb88:	bl	30ef4 <crc32@@Base+0x177ac>
   2fb8c:	subs	r8, r0, #0
   2fb90:	beq	2fcfc <crc32@@Base+0x165b4>
   2fb94:	ldr	r3, [sp, #40]	; 0x28
   2fb98:	lsrs	r3, r3, #2
   2fb9c:	subne	r5, r5, #4
   2fba0:	bne	2fbc0 <crc32@@Base+0x16478>
   2fba4:	b	2fc60 <crc32@@Base+0x16518>
   2fba8:	cmp	r0, #0
   2fbac:	bne	2fc44 <crc32@@Base+0x164fc>
   2fbb0:	ldr	r3, [sp, #40]	; 0x28
   2fbb4:	add	r4, r4, #1
   2fbb8:	cmp	r4, r3, lsr #2
   2fbbc:	bcs	2fc60 <crc32@@Base+0x16518>
   2fbc0:	ldr	r3, [r5, #4]!
   2fbc4:	ldr	fp, [sp, #36]	; 0x24
   2fbc8:	ubfx	r1, r3, #8, #8
   2fbcc:	ubfx	r2, r3, #16, #8
   2fbd0:	lsr	sl, r3, #24
   2fbd4:	orr	sl, sl, r3, lsl #24
   2fbd8:	mov	r0, fp
   2fbdc:	orr	sl, sl, r1, lsl #16
   2fbe0:	orr	sl, sl, r2, lsl #8
   2fbe4:	ldr	r2, [r8, sl]
   2fbe8:	ubfx	r1, r2, #8, #8
   2fbec:	lsr	r3, r2, #24
   2fbf0:	orr	r3, r3, r2, lsl #24
   2fbf4:	ubfx	r2, r2, #16, #8
   2fbf8:	orr	r3, r3, r1, lsl #16
   2fbfc:	orr	r3, r3, r2, lsl #8
   2fc00:	add	r3, r3, r9
   2fc04:	rev	r3, r3
   2fc08:	str	r3, [sp, #48]	; 0x30
   2fc0c:	bl	125c0 <strlen@plt>
   2fc10:	mov	r3, #4
   2fc14:	str	sl, [sp]
   2fc18:	mov	r2, fp
   2fc1c:	str	r3, [sp, #8]
   2fc20:	mov	r1, r7
   2fc24:	add	r3, sp, #48	; 0x30
   2fc28:	str	r3, [sp, #4]
   2fc2c:	mov	r3, r0
   2fc30:	mov	r0, r6
   2fc34:	bl	2dc00 <crc32@@Base+0x144b8>
   2fc38:	cmn	r0, #3
   2fc3c:	bne	2fba8 <crc32@@Base+0x16460>
   2fc40:	mvn	r0, #15
   2fc44:	ldr	r3, [sp, #24]
   2fc48:	ldr	r2, [sp, #52]	; 0x34
   2fc4c:	ldr	r3, [r3]
   2fc50:	cmp	r2, r3
   2fc54:	bne	2fd0c <crc32@@Base+0x165c4>
   2fc58:	add	sp, sp, #60	; 0x3c
   2fc5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fc60:	ldr	r1, [sp, #20]
   2fc64:	mov	r0, r6
   2fc68:	bl	30ca0 <crc32@@Base+0x17558>
   2fc6c:	subs	r3, r0, #0
   2fc70:	str	r3, [sp, #20]
   2fc74:	bge	2fb50 <crc32@@Base+0x16408>
   2fc78:	ldr	r1, [sp, #28]
   2fc7c:	mov	r0, r6
   2fc80:	bl	2da68 <crc32@@Base+0x14320>
   2fc84:	subs	r4, r0, #0
   2fc88:	blt	2fcec <crc32@@Base+0x165a4>
   2fc8c:	mov	r2, #0
   2fc90:	mov	r1, r4
   2fc94:	mov	r0, r6
   2fc98:	bl	30bf4 <crc32@@Base+0x174ac>
   2fc9c:	mov	r1, r7
   2fca0:	mov	r2, r0
   2fca4:	mov	r0, r6
   2fca8:	bl	30bc4 <crc32@@Base+0x1747c>
   2fcac:	cmn	r0, #1
   2fcb0:	beq	2fc40 <crc32@@Base+0x164f8>
   2fcb4:	cmp	r0, #0
   2fcb8:	blt	2fc44 <crc32@@Base+0x164fc>
   2fcbc:	mov	r1, r0
   2fcc0:	mov	r3, r9
   2fcc4:	mov	r2, r4
   2fcc8:	mov	r0, r6
   2fccc:	bl	2fb0c <crc32@@Base+0x163c4>
   2fcd0:	cmp	r0, #0
   2fcd4:	bne	2fc44 <crc32@@Base+0x164fc>
   2fcd8:	mov	r1, r4
   2fcdc:	mov	r0, r6
   2fce0:	bl	2dac8 <crc32@@Base+0x14380>
   2fce4:	subs	r4, r0, #0
   2fce8:	bge	2fc8c <crc32@@Base+0x16544>
   2fcec:	mov	r0, #0
   2fcf0:	b	2fc44 <crc32@@Base+0x164fc>
   2fcf4:	ldr	r0, [sp, #40]	; 0x28
   2fcf8:	b	2fc44 <crc32@@Base+0x164fc>
   2fcfc:	ldr	r0, [sp, #44]	; 0x2c
   2fd00:	cmn	r0, #1
   2fd04:	bne	2fc44 <crc32@@Base+0x164fc>
   2fd08:	b	2fc40 <crc32@@Base+0x164f8>
   2fd0c:	bl	12494 <__stack_chk_fail@plt>
   2fd10:	push	{r4, r5, r6, r7, r8, r9, lr}
   2fd14:	movw	r4, #61168	; 0xeef0
   2fd18:	movt	r4, #4
   2fd1c:	sub	sp, sp, #20
   2fd20:	mov	r6, r1
   2fd24:	mov	r9, r2
   2fd28:	ldr	ip, [r4]
   2fd2c:	mov	r1, r2
   2fd30:	mov	r8, r0
   2fd34:	mov	r7, r3
   2fd38:	mov	r0, r6
   2fd3c:	movw	r2, #52304	; 0xcc50
   2fd40:	add	r3, sp, #8
   2fd44:	movt	r2, #3
   2fd48:	str	ip, [sp, #12]
   2fd4c:	mov	r5, #0
   2fd50:	str	r5, [sp, #4]
   2fd54:	bl	30ef4 <crc32@@Base+0x177ac>
   2fd58:	cmp	r0, #0
   2fd5c:	beq	2fd98 <crc32@@Base+0x16650>
   2fd60:	ldr	r3, [sp, #8]
   2fd64:	cmp	r3, #4
   2fd68:	bne	2fdf0 <crc32@@Base+0x166a8>
   2fd6c:	ldr	r3, [r0]
   2fd70:	ubfx	r0, r3, #8, #8
   2fd74:	ubfx	r2, r3, #16, #8
   2fd78:	lsr	r1, r3, #24
   2fd7c:	orr	r1, r1, r3, lsl #24
   2fd80:	orr	r1, r1, r0, lsl #16
   2fd84:	orr	r1, r1, r2, lsl #8
   2fd88:	cmn	r1, #1
   2fd8c:	beq	2fdf0 <crc32@@Base+0x166a8>
   2fd90:	cmp	r1, #0
   2fd94:	bne	2fdf8 <crc32@@Base+0x166b0>
   2fd98:	mov	r1, r9
   2fd9c:	mov	r0, r6
   2fda0:	movw	r2, #52312	; 0xcc58
   2fda4:	add	r3, sp, #4
   2fda8:	movt	r2, #3
   2fdac:	bl	30ef4 <crc32@@Base+0x177ac>
   2fdb0:	subs	r5, r0, #0
   2fdb4:	ldreq	r0, [sp, #4]
   2fdb8:	beq	2fdc8 <crc32@@Base+0x16680>
   2fdbc:	mov	r0, r8
   2fdc0:	mov	r1, r5
   2fdc4:	bl	31250 <crc32@@Base+0x17b08>
   2fdc8:	cmp	r0, #0
   2fdcc:	blt	2fe08 <crc32@@Base+0x166c0>
   2fdd0:	cmp	r7, #0
   2fdd4:	strne	r5, [r7]
   2fdd8:	ldr	r2, [sp, #12]
   2fddc:	ldr	r3, [r4]
   2fde0:	cmp	r2, r3
   2fde4:	bne	2fe18 <crc32@@Base+0x166d0>
   2fde8:	add	sp, sp, #20
   2fdec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2fdf0:	mvn	r0, #5
   2fdf4:	b	2fdd8 <crc32@@Base+0x16690>
   2fdf8:	mov	r0, r8
   2fdfc:	bl	3169c <crc32@@Base+0x17f54>
   2fe00:	cmp	r0, #0
   2fe04:	bge	2fdd0 <crc32@@Base+0x16688>
   2fe08:	ldr	r3, [sp, #4]
   2fe0c:	cmn	r3, #1
   2fe10:	mvneq	r0, #15
   2fe14:	b	2fdd8 <crc32@@Base+0x16690>
   2fe18:	bl	12494 <__stack_chk_fail@plt>
   2fe1c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2fe20:	movw	r8, #61168	; 0xeef0
   2fe24:	movt	r8, #4
   2fe28:	mov	r9, r3
   2fe2c:	sub	sp, sp, #28
   2fe30:	mov	r6, r0
   2fe34:	ldr	r3, [r8]
   2fe38:	mov	r7, r1
   2fe3c:	mov	r0, r2
   2fe40:	mov	r1, r9
   2fe44:	mov	r5, r2
   2fe48:	str	r3, [sp, #20]
   2fe4c:	bl	30c80 <crc32@@Base+0x17538>
   2fe50:	subs	r4, r0, #0
   2fe54:	bge	2fe98 <crc32@@Base+0x16750>
   2fe58:	b	2fed8 <crc32@@Base+0x16790>
   2fe5c:	cmp	r1, #0
   2fe60:	blt	2febc <crc32@@Base+0x16774>
   2fe64:	mov	r3, r0
   2fe68:	str	r1, [sp]
   2fe6c:	ldr	r2, [sp, #12]
   2fe70:	mov	r1, r7
   2fe74:	mov	r0, r6
   2fe78:	bl	2efa8 <crc32@@Base+0x15860>
   2fe7c:	subs	r1, r0, #0
   2fe80:	bne	2febc <crc32@@Base+0x16774>
   2fe84:	mov	r1, r4
   2fe88:	mov	r0, r5
   2fe8c:	bl	30ca0 <crc32@@Base+0x17558>
   2fe90:	subs	r4, r0, #0
   2fe94:	blt	2fed8 <crc32@@Base+0x16790>
   2fe98:	mov	r1, r4
   2fe9c:	add	r3, sp, #16
   2fea0:	add	r2, sp, #12
   2fea4:	mov	r0, r5
   2fea8:	bl	30e84 <crc32@@Base+0x1773c>
   2feac:	ldr	r1, [sp, #16]
   2feb0:	cmn	r1, #1
   2feb4:	bne	2fe5c <crc32@@Base+0x16714>
   2feb8:	mvn	r1, #12
   2febc:	ldr	r2, [sp, #20]
   2fec0:	mov	r0, r1
   2fec4:	ldr	r3, [r8]
   2fec8:	cmp	r2, r3
   2fecc:	bne	2ff78 <crc32@@Base+0x16830>
   2fed0:	add	sp, sp, #28
   2fed4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2fed8:	mov	r1, r9
   2fedc:	mov	r0, r5
   2fee0:	bl	2da68 <crc32@@Base+0x14320>
   2fee4:	subs	r4, r0, #0
   2fee8:	blt	2ff50 <crc32@@Base+0x16808>
   2feec:	mov	r2, #0
   2fef0:	mov	r1, r4
   2fef4:	mov	r0, r5
   2fef8:	bl	30bf4 <crc32@@Base+0x174ac>
   2fefc:	mov	r1, r7
   2ff00:	mov	r2, r0
   2ff04:	mov	r9, r0
   2ff08:	mov	r0, r6
   2ff0c:	bl	2f2fc <crc32@@Base+0x15bb4>
   2ff10:	cmn	r0, #2
   2ff14:	mov	r1, r0
   2ff18:	beq	2ff58 <crc32@@Base+0x16810>
   2ff1c:	cmp	r1, #0
   2ff20:	blt	2febc <crc32@@Base+0x16774>
   2ff24:	mov	r3, r4
   2ff28:	mov	r2, r5
   2ff2c:	mov	r0, r6
   2ff30:	bl	2fe1c <crc32@@Base+0x166d4>
   2ff34:	subs	r1, r0, #0
   2ff38:	bne	2febc <crc32@@Base+0x16774>
   2ff3c:	mov	r1, r4
   2ff40:	mov	r0, r5
   2ff44:	bl	2dac8 <crc32@@Base+0x14380>
   2ff48:	subs	r4, r0, #0
   2ff4c:	bge	2feec <crc32@@Base+0x167a4>
   2ff50:	mov	r1, #0
   2ff54:	b	2febc <crc32@@Base+0x16774>
   2ff58:	mov	r1, r7
   2ff5c:	mov	r2, r9
   2ff60:	mov	r0, r6
   2ff64:	bl	30bc4 <crc32@@Base+0x1747c>
   2ff68:	cmn	r0, #1
   2ff6c:	mov	r1, r0
   2ff70:	bne	2ff1c <crc32@@Base+0x167d4>
   2ff74:	b	2feb8 <crc32@@Base+0x16770>
   2ff78:	bl	12494 <__stack_chk_fail@plt>
   2ff7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ff80:	movw	r4, #61168	; 0xeef0
   2ff84:	movt	r4, #4
   2ff88:	sub	sp, sp, #76	; 0x4c
   2ff8c:	mov	sl, r0
   2ff90:	mov	fp, r1
   2ff94:	ldr	r3, [r4]
   2ff98:	str	r3, [sp, #68]	; 0x44
   2ff9c:	bl	30fec <crc32@@Base+0x178a4>
   2ffa0:	mov	r5, r0
   2ffa4:	mov	r0, sl
   2ffa8:	bl	2d61c <crc32@@Base+0x13ed4>
   2ffac:	subs	r9, r0, #0
   2ffb0:	beq	2ffd0 <crc32@@Base+0x16888>
   2ffb4:	ldr	r2, [sp, #68]	; 0x44
   2ffb8:	mov	r0, r9
   2ffbc:	ldr	r3, [r4]
   2ffc0:	cmp	r2, r3
   2ffc4:	bne	305fc <crc32@@Base+0x16eb4>
   2ffc8:	add	sp, sp, #76	; 0x4c
   2ffcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ffd0:	mov	r0, fp
   2ffd4:	bl	2d61c <crc32@@Base+0x13ed4>
   2ffd8:	subs	r9, r0, #0
   2ffdc:	bne	2ffb4 <crc32@@Base+0x1686c>
   2ffe0:	mov	r1, r9
   2ffe4:	mov	r2, r5
   2ffe8:	mov	r0, fp
   2ffec:	bl	2fa64 <crc32@@Base+0x1631c>
   2fff0:	subs	r9, r0, #0
   2fff4:	beq	30008 <crc32@@Base+0x168c0>
   2fff8:	mvn	r3, #0
   2fffc:	str	r3, [fp]
   30000:	str	r3, [sl]
   30004:	b	2ffb4 <crc32@@Base+0x1686c>
   30008:	movw	r1, #52324	; 0xcc64
   3000c:	mov	r0, fp
   30010:	movt	r1, #3
   30014:	bl	31250 <crc32@@Base+0x17b08>
   30018:	subs	r2, r0, #0
   3001c:	bge	30254 <crc32@@Base+0x16b0c>
   30020:	cmn	r2, #1
   30024:	movne	r9, r2
   30028:	bne	2fff8 <crc32@@Base+0x168b0>
   3002c:	movw	r1, #52344	; 0xcc78
   30030:	mov	r0, fp
   30034:	movt	r1, #3
   30038:	bl	31250 <crc32@@Base+0x17b08>
   3003c:	cmn	r0, #1
   30040:	mov	r5, r0
   30044:	beq	30298 <crc32@@Base+0x16b50>
   30048:	cmp	r0, #0
   3004c:	blt	3036c <crc32@@Base+0x16c24>
   30050:	movw	r1, #52356	; 0xcc84
   30054:	mov	r0, sl
   30058:	movt	r1, #3
   3005c:	bl	31250 <crc32@@Base+0x17b08>
   30060:	cmn	r0, #1
   30064:	str	r0, [sp, #16]
   30068:	blt	3024c <crc32@@Base+0x16b04>
   3006c:	mov	r1, r5
   30070:	mov	r0, fp
   30074:	bl	30c80 <crc32@@Base+0x17538>
   30078:	subs	r3, r0, #0
   3007c:	str	r3, [sp, #28]
   30080:	blt	30298 <crc32@@Base+0x16b50>
   30084:	str	r9, [sp, #40]	; 0x28
   30088:	mov	r9, fp
   3008c:	add	r3, sp, #52	; 0x34
   30090:	str	r4, [sp, #24]
   30094:	str	r3, [sp, #36]	; 0x24
   30098:	add	r3, sp, #48	; 0x30
   3009c:	str	r3, [sp, #32]
   300a0:	ldrd	r2, [sp, #32]
   300a4:	mov	r0, r9
   300a8:	ldr	r1, [sp, #28]
   300ac:	bl	30e84 <crc32@@Base+0x1773c>
   300b0:	subs	r5, r0, #0
   300b4:	ldrne	r4, [sp, #52]	; 0x34
   300b8:	bne	3016c <crc32@@Base+0x16a24>
   300bc:	b	30374 <crc32@@Base+0x16c2c>
   300c0:	add	r3, sp, #64	; 0x40
   300c4:	ldr	r2, [sp, #48]	; 0x30
   300c8:	mov	r0, sl
   300cc:	bl	30ef4 <crc32@@Base+0x177ac>
   300d0:	subs	r1, r0, #0
   300d4:	ldreq	r0, [sp, #64]	; 0x40
   300d8:	beq	30154 <crc32@@Base+0x16a0c>
   300dc:	mov	r0, sl
   300e0:	bl	31250 <crc32@@Base+0x17b08>
   300e4:	subs	r1, r0, #0
   300e8:	blt	3035c <crc32@@Base+0x16c14>
   300ec:	mov	r0, sl
   300f0:	bl	30f3c <crc32@@Base+0x177f4>
   300f4:	subs	r3, r0, #0
   300f8:	mov	fp, r3
   300fc:	beq	30600 <crc32@@Base+0x16eb8>
   30100:	mov	r2, r7
   30104:	mov	r1, r5
   30108:	mov	r0, r9
   3010c:	bl	3115c <crc32@@Base+0x17a14>
   30110:	cmn	r0, #1
   30114:	beq	30348 <crc32@@Base+0x16c00>
   30118:	cmp	r0, #0
   3011c:	blt	30398 <crc32@@Base+0x16c50>
   30120:	ldr	r3, [sp, #20]
   30124:	add	lr, sp, #72	; 0x48
   30128:	rev	ip, fp
   3012c:	mov	r1, r0
   30130:	mov	r2, r4
   30134:	mov	r0, r9
   30138:	str	r3, [sp]
   3013c:	mov	r3, r8
   30140:	str	ip, [lr, #-12]!
   30144:	mov	ip, #4
   30148:	str	lr, [sp, #4]
   3014c:	str	ip, [sp, #8]
   30150:	bl	2dc00 <crc32@@Base+0x144b8>
   30154:	cmp	r0, #0
   30158:	bne	30398 <crc32@@Base+0x16c50>
   3015c:	ldr	r4, [sp, #52]	; 0x34
   30160:	cmp	r4, #0
   30164:	ble	30274 <crc32@@Base+0x16b2c>
   30168:	mov	r5, r6
   3016c:	mov	r2, r4
   30170:	mov	r1, #0
   30174:	mov	r0, r5
   30178:	bl	12698 <memchr@plt>
   3017c:	cmp	r0, #0
   30180:	beq	30348 <crc32@@Base+0x16c00>
   30184:	sub	r7, r0, r5
   30188:	sub	r4, r4, #1
   3018c:	mov	r1, #58	; 0x3a
   30190:	mov	r0, r5
   30194:	mov	r2, r7
   30198:	sub	r4, r4, r7
   3019c:	str	r4, [sp, #52]	; 0x34
   301a0:	bl	12698 <memchr@plt>
   301a4:	add	r6, r7, #1
   301a8:	add	r6, r5, r6
   301ac:	cmp	r0, #0
   301b0:	beq	30348 <crc32@@Base+0x16c00>
   301b4:	ldrb	r1, [r0]
   301b8:	cmp	r1, #58	; 0x3a
   301bc:	bne	30348 <crc32@@Base+0x16c00>
   301c0:	sub	r2, r7, #1
   301c4:	sub	r7, r0, r5
   301c8:	cmp	r7, r2
   301cc:	beq	30348 <crc32@@Base+0x16c00>
   301d0:	add	r4, r0, #1
   301d4:	sub	r2, r2, r7
   301d8:	mov	r0, r4
   301dc:	bl	12698 <memchr@plt>
   301e0:	cmp	r0, #0
   301e4:	beq	30348 <crc32@@Base+0x16c00>
   301e8:	ldrb	r3, [r0]
   301ec:	cmp	r3, #58	; 0x3a
   301f0:	bne	30348 <crc32@@Base+0x16c00>
   301f4:	subs	r8, r0, r4
   301f8:	beq	30348 <crc32@@Base+0x16c00>
   301fc:	add	fp, r0, #1
   30200:	mov	r2, #10
   30204:	add	r1, sp, #56	; 0x38
   30208:	mov	r0, fp
   3020c:	bl	122cc <strtoul@plt>
   30210:	ldr	r2, [sp, #56]	; 0x38
   30214:	cmp	fp, r2
   30218:	ldrb	r2, [r2]
   3021c:	movcc	r3, #0
   30220:	movcs	r3, #1
   30224:	cmp	r2, #0
   30228:	movne	r3, #1
   3022c:	cmp	r3, #0
   30230:	str	r0, [sp, #20]
   30234:	bne	30348 <crc32@@Base+0x16c00>
   30238:	ldr	r1, [sp, #16]
   3023c:	cmn	r1, #1
   30240:	bne	300c0 <crc32@@Base+0x16978>
   30244:	ldr	r4, [sp, #24]
   30248:	mov	fp, r9
   3024c:	ldr	r9, [sp, #16]
   30250:	b	2fff8 <crc32@@Base+0x168b0>
   30254:	mov	r3, r5
   30258:	mov	r1, r9
   3025c:	mov	r0, fp
   30260:	bl	2fb0c <crc32@@Base+0x163c4>
   30264:	cmp	r0, #0
   30268:	beq	3002c <crc32@@Base+0x168e4>
   3026c:	mov	r9, r0
   30270:	b	2fff8 <crc32@@Base+0x168b0>
   30274:	ldr	r1, [sp, #28]
   30278:	mov	r0, r9
   3027c:	bl	30ca0 <crc32@@Base+0x17558>
   30280:	subs	r3, r0, #0
   30284:	str	r3, [sp, #28]
   30288:	bge	300a0 <crc32@@Base+0x16958>
   3028c:	mov	fp, r9
   30290:	ldr	r4, [sp, #24]
   30294:	ldr	r9, [sp, #40]	; 0x28
   30298:	mov	r1, #0
   3029c:	mov	r0, fp
   302a0:	bl	2da68 <crc32@@Base+0x14320>
   302a4:	subs	r5, r0, #0
   302a8:	blt	30320 <crc32@@Base+0x16bd8>
   302ac:	movw	r7, #52372	; 0xcc94
   302b0:	movt	r7, #3
   302b4:	mov	r2, r7
   302b8:	mov	r1, r5
   302bc:	mov	r0, fp
   302c0:	bl	30bc4 <crc32@@Base+0x1747c>
   302c4:	cmn	r0, #1
   302c8:	mov	r6, r0
   302cc:	beq	3030c <crc32@@Base+0x16bc4>
   302d0:	cmp	r0, #0
   302d4:	blt	303a8 <crc32@@Base+0x16c60>
   302d8:	mov	r1, fp
   302dc:	mov	r3, #0
   302e0:	mov	r2, r5
   302e4:	mov	r0, sl
   302e8:	bl	2fd10 <crc32@@Base+0x165c8>
   302ec:	subs	r1, r0, #0
   302f0:	blt	303b0 <crc32@@Base+0x16c68>
   302f4:	mov	r3, r6
   302f8:	mov	r2, fp
   302fc:	mov	r0, sl
   30300:	bl	2fe1c <crc32@@Base+0x166d4>
   30304:	cmp	r0, #0
   30308:	bne	3026c <crc32@@Base+0x16b24>
   3030c:	mov	r1, r5
   30310:	mov	r0, fp
   30314:	bl	2dac8 <crc32@@Base+0x14380>
   30318:	subs	r5, r0, #0
   3031c:	bge	302b4 <crc32@@Base+0x16b6c>
   30320:	movw	r2, #52384	; 0xcca0
   30324:	mov	r1, #0
   30328:	movt	r2, #3
   3032c:	mov	r0, fp
   30330:	bl	30bc4 <crc32@@Base+0x1747c>
   30334:	subs	r5, r0, #0
   30338:	bge	303b8 <crc32@@Base+0x16c70>
   3033c:	mvn	r3, #0
   30340:	str	r3, [fp]
   30344:	b	2ffb4 <crc32@@Base+0x1686c>
   30348:	mvn	r3, #15
   3034c:	mov	fp, r9
   30350:	ldr	r4, [sp, #24]
   30354:	str	r3, [sp, #16]
   30358:	b	3024c <crc32@@Base+0x16b04>
   3035c:	mov	fp, r9
   30360:	ldr	r4, [sp, #24]
   30364:	str	r1, [sp, #16]
   30368:	b	3024c <crc32@@Base+0x16b04>
   3036c:	mov	r9, r0
   30370:	b	2fff8 <crc32@@Base+0x168b0>
   30374:	ldr	r3, [sp, #52]	; 0x34
   30378:	cmn	r3, #1
   3037c:	beq	306fc <crc32@@Base+0x16fb4>
   30380:	cmp	r3, #0
   30384:	beq	30274 <crc32@@Base+0x16b2c>
   30388:	mov	fp, r9
   3038c:	ldr	r4, [sp, #24]
   30390:	mov	r9, r3
   30394:	b	2fff8 <crc32@@Base+0x168b0>
   30398:	mov	fp, r9
   3039c:	ldr	r4, [sp, #24]
   303a0:	str	r0, [sp, #16]
   303a4:	b	3024c <crc32@@Base+0x16b04>
   303a8:	mov	r9, r0
   303ac:	b	2fff8 <crc32@@Base+0x168b0>
   303b0:	mov	r9, r1
   303b4:	b	2fff8 <crc32@@Base+0x168b0>
   303b8:	movw	r2, #52384	; 0xcca0
   303bc:	mov	r1, #0
   303c0:	movt	r2, #3
   303c4:	mov	r0, sl
   303c8:	bl	30bc4 <crc32@@Base+0x1747c>
   303cc:	cmn	r0, #1
   303d0:	str	r0, [sp, #20]
   303d4:	beq	306e0 <crc32@@Base+0x16f98>
   303d8:	ldr	r3, [sp, #20]
   303dc:	cmp	r3, #0
   303e0:	blt	305f4 <crc32@@Base+0x16eac>
   303e4:	mov	r1, r5
   303e8:	mov	r0, fp
   303ec:	bl	30c80 <crc32@@Base+0x17538>
   303f0:	subs	r3, r0, #0
   303f4:	str	r3, [sp, #24]
   303f8:	blt	3033c <crc32@@Base+0x16bf4>
   303fc:	movw	r3, #52396	; 0xccac
   30400:	movw	r2, #52372	; 0xcc94
   30404:	movt	r3, #3
   30408:	movt	r2, #3
   3040c:	str	r3, [sp, #40]	; 0x28
   30410:	add	r3, sp, #52	; 0x34
   30414:	str	r2, [sp, #44]	; 0x2c
   30418:	str	r3, [sp, #36]	; 0x24
   3041c:	add	r3, sp, #48	; 0x30
   30420:	str	r9, [sp, #28]
   30424:	str	r3, [sp, #32]
   30428:	str	r4, [sp, #16]
   3042c:	ldr	r3, [sp, #32]
   30430:	mov	r0, fp
   30434:	ldr	r2, [sp, #36]	; 0x24
   30438:	ldr	r1, [sp, #24]
   3043c:	bl	30e84 <crc32@@Base+0x1773c>
   30440:	subs	r8, r0, #0
   30444:	beq	305d8 <crc32@@Base+0x16e90>
   30448:	ldr	r6, [sp, #48]	; 0x30
   3044c:	cmp	r6, #0
   30450:	ble	3070c <crc32@@Base+0x16fc4>
   30454:	mov	r2, r6
   30458:	mov	r1, #0
   3045c:	bl	12698 <memchr@plt>
   30460:	sub	r3, r6, #1
   30464:	add	r3, r8, r3
   30468:	cmp	r0, r3
   3046c:	bne	3070c <crc32@@Base+0x16fc4>
   30470:	ldrb	r1, [r8]
   30474:	add	r6, r8, r6
   30478:	cmp	r1, #47	; 0x2f
   3047c:	bne	3070c <crc32@@Base+0x16fc4>
   30480:	add	r7, r8, #1
   30484:	mov	r0, r7
   30488:	bl	12764 <strchr@plt>
   3048c:	subs	r9, r0, #0
   30490:	beq	30734 <crc32@@Base+0x16fec>
   30494:	sub	r3, r6, r9
   30498:	sub	r8, r9, r8
   3049c:	cmp	r3, #12
   304a0:	sub	r8, r8, #1
   304a4:	ble	30734 <crc32@@Base+0x16fec>
   304a8:	ldr	r1, [sp, #40]	; 0x28
   304ac:	mov	r2, #13
   304b0:	bl	126c8 <memcmp@plt>
   304b4:	subs	r1, r0, #0
   304b8:	bne	30734 <crc32@@Base+0x16fec>
   304bc:	mov	r2, r7
   304c0:	mov	r3, r8
   304c4:	mov	r0, fp
   304c8:	add	r9, r9, #13
   304cc:	bl	30ad4 <crc32@@Base+0x1738c>
   304d0:	sub	r6, r6, r9
   304d4:	subs	r7, r0, #0
   304d8:	blt	30734 <crc32@@Base+0x16fec>
   304dc:	ldr	r2, [sp, #44]	; 0x2c
   304e0:	mov	r1, r7
   304e4:	mov	r0, fp
   304e8:	bl	30bc4 <crc32@@Base+0x1747c>
   304ec:	cmp	r0, #0
   304f0:	blt	30734 <crc32@@Base+0x16fec>
   304f4:	mov	r2, r7
   304f8:	mov	r1, fp
   304fc:	mov	r0, sl
   30500:	add	r3, sp, #56	; 0x38
   30504:	bl	2fd10 <crc32@@Base+0x165c8>
   30508:	subs	r5, r0, #0
   3050c:	blt	30728 <crc32@@Base+0x16fe0>
   30510:	ldr	r0, [sp, #56]	; 0x38
   30514:	cmp	r0, #0
   30518:	beq	30614 <crc32@@Base+0x16ecc>
   3051c:	bl	125c0 <strlen@plt>
   30520:	mov	r5, r0
   30524:	cmp	r5, #1
   30528:	movle	r3, r5
   3052c:	addgt	r3, r5, #1
   30530:	add	r1, sp, #60	; 0x3c
   30534:	add	r3, r3, r6
   30538:	str	r1, [sp]
   3053c:	ldr	r2, [sp, #52]	; 0x34
   30540:	add	r3, r3, #1
   30544:	ldr	r1, [sp, #20]
   30548:	mov	r0, sl
   3054c:	bl	2ee90 <crc32@@Base+0x15748>
   30550:	subs	r4, r0, #0
   30554:	blt	306d4 <crc32@@Base+0x16f8c>
   30558:	ldr	r1, [sp, #56]	; 0x38
   3055c:	cmp	r1, #0
   30560:	beq	30680 <crc32@@Base+0x16f38>
   30564:	cmp	r5, #1
   30568:	ldr	r7, [sp, #60]	; 0x3c
   3056c:	addgt	r8, r5, #1
   30570:	ble	305cc <crc32@@Base+0x16e84>
   30574:	mov	r2, r8
   30578:	mov	r0, r7
   3057c:	bl	1259c <memcpy@plt>
   30580:	mov	r2, r6
   30584:	add	r6, r7, r6
   30588:	mov	r3, #47	; 0x2f
   3058c:	strb	r3, [r7, r5]
   30590:	add	r5, r6, r5
   30594:	mov	r1, r9
   30598:	add	r0, r7, r8
   3059c:	bl	1259c <memcpy@plt>
   305a0:	mov	r3, #0
   305a4:	ldr	r1, [sp, #24]
   305a8:	mov	r0, fp
   305ac:	strb	r3, [r5, #1]
   305b0:	bl	30ca0 <crc32@@Base+0x17558>
   305b4:	subs	r3, r0, #0
   305b8:	str	r3, [sp, #24]
   305bc:	bge	3042c <crc32@@Base+0x16ce4>
   305c0:	ldr	r9, [sp, #28]
   305c4:	ldr	r4, [sp, #16]
   305c8:	b	3033c <crc32@@Base+0x16bf4>
   305cc:	mov	r8, r5
   305d0:	sub	r5, r5, #1
   305d4:	b	30580 <crc32@@Base+0x16e38>
   305d8:	ldr	r3, [sp, #48]	; 0x30
   305dc:	ldr	r9, [sp, #28]
   305e0:	cmp	r3, #0
   305e4:	ldr	r4, [sp, #16]
   305e8:	beq	3033c <crc32@@Base+0x16bf4>
   305ec:	mov	r9, r3
   305f0:	b	2fff8 <crc32@@Base+0x168b0>
   305f4:	ldr	r3, [sp, #20]
   305f8:	b	305ec <crc32@@Base+0x16ea4>
   305fc:	bl	12494 <__stack_chk_fail@plt>
   30600:	mvn	r3, #0
   30604:	mov	fp, r9
   30608:	ldr	r4, [sp, #24]
   3060c:	str	r3, [sp, #16]
   30610:	b	3024c <crc32@@Base+0x16b04>
   30614:	mov	r0, sl
   30618:	bl	2d61c <crc32@@Base+0x13ed4>
   3061c:	subs	r4, r0, #0
   30620:	bne	30670 <crc32@@Base+0x16f28>
   30624:	add	r2, sp, #64	; 0x40
   30628:	mov	r1, r5
   3062c:	mov	r0, sl
   30630:	bl	30bf4 <crc32@@Base+0x174ac>
   30634:	cmp	r0, #0
   30638:	beq	3066c <crc32@@Base+0x16f24>
   3063c:	ldr	r3, [sp, #64]	; 0x40
   30640:	cmp	r3, #0
   30644:	beq	30718 <crc32@@Base+0x16fd0>
   30648:	mov	r1, r5
   3064c:	mov	r0, sl
   30650:	bl	31550 <crc32@@Base+0x17e08>
   30654:	subs	r5, r0, #0
   30658:	blt	30728 <crc32@@Base+0x16fe0>
   3065c:	ldr	r3, [sp, #64]	; 0x40
   30660:	add	r3, r3, #1
   30664:	add	r4, r4, r3
   30668:	b	30624 <crc32@@Base+0x16edc>
   3066c:	ldr	r4, [sp, #64]	; 0x40
   30670:	cmp	r4, #0
   30674:	blt	306d4 <crc32@@Base+0x16f8c>
   30678:	mov	r5, r4
   3067c:	b	30524 <crc32@@Base+0x16ddc>
   30680:	add	r3, sp, #56	; 0x38
   30684:	mov	r2, r7
   30688:	mov	r1, fp
   3068c:	mov	r0, sl
   30690:	bl	2fd10 <crc32@@Base+0x165c8>
   30694:	subs	r4, r0, #0
   30698:	blt	306d4 <crc32@@Base+0x16f8c>
   3069c:	cmp	r5, #1
   306a0:	ldr	r7, [sp, #60]	; 0x3c
   306a4:	ble	305cc <crc32@@Base+0x16e84>
   306a8:	ldr	r1, [sp, #56]	; 0x38
   306ac:	add	r8, r5, #1
   306b0:	cmp	r1, #0
   306b4:	bne	30574 <crc32@@Base+0x16e2c>
   306b8:	mov	r1, r4
   306bc:	mov	r3, r8
   306c0:	mov	r2, r7
   306c4:	mov	r0, sl
   306c8:	bl	312a0 <crc32@@Base+0x17b58>
   306cc:	subs	r4, r0, #0
   306d0:	bge	30580 <crc32@@Base+0x16e38>
   306d4:	mov	r3, r4
   306d8:	ldr	r4, [sp, #16]
   306dc:	b	305ec <crc32@@Base+0x16ea4>
   306e0:	movw	r2, #52384	; 0xcca0
   306e4:	mov	r1, #0
   306e8:	movt	r2, #3
   306ec:	mov	r0, sl
   306f0:	bl	2f2fc <crc32@@Base+0x15bb4>
   306f4:	str	r0, [sp, #20]
   306f8:	b	303d8 <crc32@@Base+0x16c90>
   306fc:	mov	fp, r9
   30700:	ldr	r4, [sp, #24]
   30704:	mvn	r9, #12
   30708:	b	2fff8 <crc32@@Base+0x168b0>
   3070c:	ldr	r4, [sp, #16]
   30710:	mvn	r3, #14
   30714:	b	305ec <crc32@@Base+0x16ea4>
   30718:	cmp	r4, #0
   3071c:	moveq	r5, #1
   30720:	beq	30524 <crc32@@Base+0x16ddc>
   30724:	b	30670 <crc32@@Base+0x16f28>
   30728:	ldr	r4, [sp, #16]
   3072c:	mov	r3, r5
   30730:	b	305ec <crc32@@Base+0x16ea4>
   30734:	ldr	r4, [sp, #16]
   30738:	mvn	r3, #15
   3073c:	b	305ec <crc32@@Base+0x16ea4>
   30740:	push	{r4, r5, r6, lr}
   30744:	mov	r2, r1
   30748:	mov	r5, r1
   3074c:	mov	r1, #47	; 0x2f
   30750:	mov	r6, r0
   30754:	bl	12698 <memchr@plt>
   30758:	mov	r2, r5
   3075c:	mov	r1, #58	; 0x3a
   30760:	mov	r4, r0
   30764:	mov	r0, r6
   30768:	bl	12698 <memchr@plt>
   3076c:	cmp	r4, #0
   30770:	cmpne	r0, #0
   30774:	bne	30784 <crc32@@Base+0x1703c>
   30778:	cmp	r4, #0
   3077c:	movne	r0, r4
   30780:	pop	{r4, r5, r6, pc}
   30784:	cmp	r0, r4
   30788:	movcs	r0, r4
   3078c:	pop	{r4, r5, r6, pc}
   30790:	push	{r4, r5, r6, lr}
   30794:	movw	r5, #61168	; 0xeef0
   30798:	movt	r5, #4
   3079c:	sub	sp, sp, #8
   307a0:	mov	r6, r0
   307a4:	mov	r4, r1
   307a8:	ldr	r3, [r5]
   307ac:	str	r3, [sp, #4]
   307b0:	mov	r2, sp
   307b4:	mov	r1, r4
   307b8:	mov	r0, r6
   307bc:	bl	2d798 <crc32@@Base+0x14050>
   307c0:	cmp	r0, #3
   307c4:	beq	30808 <crc32@@Base+0x170c0>
   307c8:	cmp	r0, #9
   307cc:	bne	307f4 <crc32@@Base+0x170ac>
   307d0:	ldr	r0, [sp]
   307d4:	cmp	r0, #0
   307d8:	mvnge	r0, #10
   307dc:	ldr	r2, [sp, #4]
   307e0:	ldr	r3, [r5]
   307e4:	cmp	r2, r3
   307e8:	bne	30810 <crc32@@Base+0x170c8>
   307ec:	add	sp, sp, #8
   307f0:	pop	{r4, r5, r6, pc}
   307f4:	cmp	r0, #4
   307f8:	ldr	r4, [sp]
   307fc:	beq	307b0 <crc32@@Base+0x17068>
   30800:	mvn	r0, #0
   30804:	b	307dc <crc32@@Base+0x17094>
   30808:	mov	r0, r4
   3080c:	b	307dc <crc32@@Base+0x17094>
   30810:	bl	12494 <__stack_chk_fail@plt>
   30814:	ldr	r2, [r0, #12]
   30818:	push	{lr}		; (str lr, [sp, #-4]!)
   3081c:	ubfx	lr, r2, #8, #8
   30820:	lsr	r3, r2, #24
   30824:	ubfx	ip, r2, #16, #8
   30828:	orr	r3, r3, r2, lsl #24
   3082c:	orr	r3, r3, lr, lsl #16
   30830:	orr	r3, r3, ip, lsl #8
   30834:	add	r1, r3, r1
   30838:	add	r0, r0, r1
   3083c:	pop	{pc}		; (ldr pc, [sp], #4)
   30840:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30844:	sub	sp, sp, #28
   30848:	mov	r4, r1
   3084c:	mov	r5, r0
   30850:	str	r2, [sp]
   30854:	str	r3, [sp, #12]
   30858:	bl	2d61c <crc32@@Base+0x13ed4>
   3085c:	cmp	r0, #0
   30860:	bne	309d0 <crc32@@Base+0x17288>
   30864:	ldr	r3, [r5, #16]
   30868:	mov	r9, #0
   3086c:	ubfx	ip, r3, #8, #8
   30870:	ubfx	r2, r3, #16, #8
   30874:	lsr	r1, r3, #24
   30878:	orr	r1, r1, r3, lsl #24
   3087c:	orr	r1, r1, ip, lsl #16
   30880:	orr	r1, r1, r2, lsl #8
   30884:	add	r1, r1, r4, lsl #4
   30888:	add	ip, r5, r1
   3088c:	ldr	r1, [r5, r1]
   30890:	ldr	r4, [ip, #4]
   30894:	ubfx	r5, r1, #8, #8
   30898:	lsl	fp, r1, #24
   3089c:	lsr	lr, r4, #24
   308a0:	lsl	r7, r5, #16
   308a4:	orr	r8, r0, lr
   308a8:	orr	fp, fp, r7
   308ac:	ubfx	lr, r1, #16, #8
   308b0:	orr	sl, r8, r0
   308b4:	strd	sl, [sp, #16]
   308b8:	uxtb	r8, r4
   308bc:	ubfx	fp, r4, #8, #8
   308c0:	lsr	r7, r1, #24
   308c4:	ubfx	r1, r4, #16, #8
   308c8:	ldrd	r4, [sp, #16]
   308cc:	lsl	r3, lr, #8
   308d0:	orr	r4, r4, r0
   308d4:	orr	r5, r5, r3
   308d8:	orr	r3, r5, r7
   308dc:	orr	r2, r4, r0
   308e0:	lsr	r5, r8, #8
   308e4:	lsl	r4, r8, #24
   308e8:	uxtb	r8, fp
   308ec:	orr	sl, r2, r4
   308f0:	uxtb	r4, r1
   308f4:	orr	fp, r3, r5
   308f8:	lsl	r6, r8, #16
   308fc:	lsr	r7, r8, #16
   30900:	lsl	r2, r4, #8
   30904:	orr	sl, sl, r6
   30908:	orr	r6, sl, r2
   3090c:	ldr	r2, [sp]
   30910:	lsr	r3, r4, #24
   30914:	orr	fp, fp, r7
   30918:	orr	r7, fp, r3
   3091c:	str	r0, [sp]
   30920:	strd	r6, [r2]
   30924:	ldr	r1, [ip, #8]
   30928:	ldr	ip, [ip, #12]
   3092c:	ubfx	lr, r1, #8, #8
   30930:	ubfx	r6, r1, #16, #8
   30934:	lsl	fp, r1, #24
   30938:	ubfx	sl, ip, #8, #8
   3093c:	lsl	r5, lr, #16
   30940:	lsr	lr, ip, #24
   30944:	orr	r8, r0, lr
   30948:	lsl	r3, r6, #8
   3094c:	orr	r7, fp, r5
   30950:	orr	r6, r8, r0
   30954:	orr	r5, r7, r3
   30958:	uxtb	r8, ip
   3095c:	orr	r4, r6, r0
   30960:	ubfx	ip, ip, #16, #8
   30964:	lsr	r1, r1, #24
   30968:	str	r1, [sp, #4]
   3096c:	mov	r6, r4
   30970:	mov	r7, r5
   30974:	lsr	r3, r8, #8
   30978:	ldrd	r4, [sp]
   3097c:	lsl	r2, r8, #24
   30980:	uxtb	r8, ip
   30984:	strd	r8, [sp]
   30988:	uxtb	sl, sl
   3098c:	ldr	r1, [sp]
   30990:	orr	r5, r5, r7
   30994:	orr	r9, r3, r5
   30998:	lsr	r7, sl, #16
   3099c:	orr	r3, r9, r7
   309a0:	orr	r4, r4, r6
   309a4:	lsr	r1, r1, #24
   309a8:	orr	r8, r2, r4
   309ac:	lsl	r6, sl, #16
   309b0:	mov	r5, r1
   309b4:	ldr	r1, [sp]
   309b8:	orr	r5, r5, r3
   309bc:	ldr	r3, [sp, #12]
   309c0:	orr	r2, r8, r6
   309c4:	lsl	r1, r1, #8
   309c8:	orr	r4, r1, r2
   309cc:	strd	r4, [r3]
   309d0:	add	sp, sp, #28
   309d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   309d8:	ldr	r2, [r0, #16]
   309dc:	mov	r1, #0
   309e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   309e4:	ubfx	lr, r2, #8, #8
   309e8:	lsr	r3, r2, #24
   309ec:	ubfx	ip, r2, #16, #8
   309f0:	orr	r3, r3, r2, lsl #24
   309f4:	sub	sp, sp, #12
   309f8:	orr	r3, r3, lr, lsl #16
   309fc:	orr	r3, r3, ip, lsl #8
   30a00:	add	r0, r0, r3
   30a04:	b	30a0c <crc32@@Base+0x172c4>
   30a08:	add	r1, r1, #1
   30a0c:	ldr	ip, [r0, #8]
   30a10:	mov	r8, #0
   30a14:	ldr	r6, [r0, #12]
   30a18:	add	r0, r0, #16
   30a1c:	ubfx	lr, ip, #8, #8
   30a20:	ubfx	r4, ip, #16, #8
   30a24:	lsl	r3, ip, #24
   30a28:	str	r3, [sp, #4]
   30a2c:	mov	r3, #0
   30a30:	str	r3, [sp]
   30a34:	ldrd	r2, [sp]
   30a38:	lsl	fp, lr, #16
   30a3c:	lsr	lr, r6, #24
   30a40:	lsl	r9, r4, #8
   30a44:	mov	r5, r3
   30a48:	mov	r4, r2
   30a4c:	orr	r4, r4, lr
   30a50:	ubfx	lr, r6, #8, #8
   30a54:	orr	r2, r4, r2
   30a58:	orr	r3, r5, fp
   30a5c:	orr	r2, r2, r8
   30a60:	lsr	fp, ip, #24
   30a64:	uxtb	r8, r6
   30a68:	ubfx	ip, r6, #16, #8
   30a6c:	ldrd	r6, [sp]
   30a70:	orr	r3, r3, r9
   30a74:	lsr	r5, r8, #8
   30a78:	orr	r7, r3, fp
   30a7c:	lsl	r4, r8, #24
   30a80:	orr	r3, r7, r5
   30a84:	mov	sl, r6
   30a88:	orr	r6, r2, sl
   30a8c:	uxtb	sl, lr
   30a90:	orr	r2, r6, r4
   30a94:	uxtb	r6, ip
   30a98:	lsr	r9, sl, #16
   30a9c:	lsl	r8, sl, #16
   30aa0:	orr	r3, r3, r9
   30aa4:	orr	r2, r2, r8
   30aa8:	mov	r9, r3
   30aac:	lsr	r3, r6, #24
   30ab0:	mov	r5, r3
   30ab4:	lsl	r3, r6, #8
   30ab8:	orr	r4, r3, r2
   30abc:	orr	r5, r5, r9
   30ac0:	orrs	r3, r4, r5
   30ac4:	bne	30a08 <crc32@@Base+0x172c0>
   30ac8:	mov	r0, r1
   30acc:	add	sp, sp, #12
   30ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30ad4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30ad8:	movw	r6, #61168	; 0xeef0
   30adc:	movt	r6, #4
   30ae0:	mov	r8, r2
   30ae4:	sub	sp, sp, #8
   30ae8:	mov	r4, r1
   30aec:	ldr	r2, [r6]
   30af0:	mov	r7, r3
   30af4:	mov	r5, r0
   30af8:	str	r2, [sp, #4]
   30afc:	bl	2d61c <crc32@@Base+0x13ed4>
   30b00:	cmp	r0, #0
   30b04:	bne	30b9c <crc32@@Base+0x17454>
   30b08:	cmp	r4, #0
   30b0c:	str	r0, [sp]
   30b10:	blt	30b98 <crc32@@Base+0x17450>
   30b14:	add	sl, r7, #1
   30b18:	mov	r1, r4
   30b1c:	mov	r2, sp
   30b20:	mov	r0, r5
   30b24:	bl	2d978 <crc32@@Base+0x14230>
   30b28:	ldr	r3, [sp]
   30b2c:	cmp	r3, #0
   30b30:	cmpge	r0, #0
   30b34:	mov	r4, r0
   30b38:	blt	30bb4 <crc32@@Base+0x1746c>
   30b3c:	cmp	r3, #1
   30b40:	bne	30b18 <crc32@@Base+0x173d0>
   30b44:	mov	r2, sl
   30b48:	add	r1, r4, #4
   30b4c:	mov	r0, r5
   30b50:	bl	2d6e4 <crc32@@Base+0x13f9c>
   30b54:	subs	r9, r0, #0
   30b58:	beq	30b18 <crc32@@Base+0x173d0>
   30b5c:	mov	r2, r7
   30b60:	mov	r1, r8
   30b64:	bl	126c8 <memcmp@plt>
   30b68:	cmp	r0, #0
   30b6c:	bne	30b18 <crc32@@Base+0x173d0>
   30b70:	ldrb	r9, [r9, r7]
   30b74:	cmp	r9, #0
   30b78:	beq	30b98 <crc32@@Base+0x17450>
   30b7c:	mov	r2, r7
   30b80:	mov	r1, #64	; 0x40
   30b84:	mov	r0, r8
   30b88:	bl	12698 <memchr@plt>
   30b8c:	cmp	r9, #64	; 0x40
   30b90:	cmpeq	r0, #0
   30b94:	bne	30b18 <crc32@@Base+0x173d0>
   30b98:	mov	r0, r4
   30b9c:	ldr	r2, [sp, #4]
   30ba0:	ldr	r3, [r6]
   30ba4:	cmp	r2, r3
   30ba8:	bne	30bc0 <crc32@@Base+0x17478>
   30bac:	add	sp, sp, #8
   30bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30bb4:	cmp	r3, #0
   30bb8:	mvnlt	r4, #0
   30bbc:	b	30b98 <crc32@@Base+0x17450>
   30bc0:	bl	12494 <__stack_chk_fail@plt>
   30bc4:	push	{r4, r5, r6, lr}
   30bc8:	mov	r5, r0
   30bcc:	mov	r0, r2
   30bd0:	mov	r4, r2
   30bd4:	mov	r6, r1
   30bd8:	bl	125c0 <strlen@plt>
   30bdc:	mov	r2, r4
   30be0:	mov	r1, r6
   30be4:	mov	r3, r0
   30be8:	mov	r0, r5
   30bec:	pop	{r4, r5, r6, lr}
   30bf0:	b	30ad4 <crc32@@Base+0x1738c>
   30bf4:	push	{r4, r5, r6, r7, r8, lr}
   30bf8:	mov	r4, r0
   30bfc:	mov	r7, r1
   30c00:	mov	r5, r2
   30c04:	ldr	r6, [r0, #8]
   30c08:	bl	2d61c <crc32@@Base+0x13ed4>
   30c0c:	cmp	r0, #0
   30c10:	beq	30c2c <crc32@@Base+0x174e4>
   30c14:	cmp	r5, #0
   30c18:	strne	r0, [r5]
   30c1c:	movne	r4, #0
   30c20:	moveq	r4, r5
   30c24:	mov	r0, r4
   30c28:	pop	{r4, r5, r6, r7, r8, pc}
   30c2c:	mov	r1, r7
   30c30:	mov	r0, r4
   30c34:	bl	2d8f8 <crc32@@Base+0x141b0>
   30c38:	cmp	r0, #0
   30c3c:	blt	30c14 <crc32@@Base+0x174cc>
   30c40:	lsr	r3, r6, #24
   30c44:	ubfx	r2, r6, #8, #8
   30c48:	orr	r3, r3, r6, lsl #24
   30c4c:	ubfx	r6, r6, #16, #8
   30c50:	orr	r3, r3, r2, lsl #16
   30c54:	cmp	r5, #0
   30c58:	orr	r6, r3, r6, lsl #8
   30c5c:	add	r6, r6, r7
   30c60:	add	r4, r4, r6
   30c64:	add	r4, r4, #4
   30c68:	beq	30c24 <crc32@@Base+0x174dc>
   30c6c:	mov	r0, r4
   30c70:	bl	125c0 <strlen@plt>
   30c74:	str	r0, [r5]
   30c78:	mov	r0, r4
   30c7c:	pop	{r4, r5, r6, r7, r8, pc}
   30c80:	push	{r4, lr}
   30c84:	mov	r4, r0
   30c88:	bl	2d8f8 <crc32@@Base+0x141b0>
   30c8c:	subs	r1, r0, #0
   30c90:	poplt	{r4, pc}
   30c94:	mov	r0, r4
   30c98:	pop	{r4, lr}
   30c9c:	b	30790 <crc32@@Base+0x17048>
   30ca0:	push	{r4, lr}
   30ca4:	mov	r4, r0
   30ca8:	bl	2d938 <crc32@@Base+0x141f0>
   30cac:	subs	r1, r0, #0
   30cb0:	poplt	{r4, pc}
   30cb4:	mov	r0, r4
   30cb8:	pop	{r4, lr}
   30cbc:	b	30790 <crc32@@Base+0x17048>
   30cc0:	push	{r4, r5, r6, lr}
   30cc4:	mov	r5, r2
   30cc8:	mov	r4, r0
   30ccc:	mov	r6, r1
   30cd0:	bl	2d938 <crc32@@Base+0x141f0>
   30cd4:	cmp	r0, #0
   30cd8:	blt	30d2c <crc32@@Base+0x175e4>
   30cdc:	ldr	r3, [r4, #8]
   30ce0:	cmp	r5, #0
   30ce4:	ubfx	r1, r3, #8, #8
   30ce8:	ubfx	r2, r3, #16, #8
   30cec:	lsr	r0, r3, #24
   30cf0:	orr	r0, r0, r3, lsl #24
   30cf4:	orr	r0, r0, r1, lsl #16
   30cf8:	orr	r0, r0, r2, lsl #8
   30cfc:	add	r0, r0, r6
   30d00:	add	r0, r4, r0
   30d04:	popeq	{r4, r5, r6, pc}
   30d08:	ldr	r2, [r0, #4]
   30d0c:	ubfx	ip, r2, #8, #8
   30d10:	ubfx	r1, r2, #16, #8
   30d14:	lsr	r3, r2, #24
   30d18:	orr	r3, r3, r2, lsl #24
   30d1c:	orr	r3, r3, ip, lsl #16
   30d20:	orr	r3, r3, r1, lsl #8
   30d24:	str	r3, [r5]
   30d28:	pop	{r4, r5, r6, pc}
   30d2c:	cmp	r5, #0
   30d30:	strne	r0, [r5]
   30d34:	mov	r0, #0
   30d38:	pop	{r4, r5, r6, pc}
   30d3c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30d40:	mov	sl, r2
   30d44:	mov	r7, r3
   30d48:	mov	r5, r0
   30d4c:	ldr	r8, [sp, #40]	; 0x28
   30d50:	bl	30c80 <crc32@@Base+0x17538>
   30d54:	subs	r6, r0, #0
   30d58:	blt	30e08 <crc32@@Base+0x176c0>
   30d5c:	add	r9, r7, #1
   30d60:	b	30d78 <crc32@@Base+0x17630>
   30d64:	mov	r1, r6
   30d68:	mov	r0, r5
   30d6c:	bl	30ca0 <crc32@@Base+0x17558>
   30d70:	subs	r6, r0, #0
   30d74:	blt	30e08 <crc32@@Base+0x176c0>
   30d78:	mov	r1, r6
   30d7c:	mov	r2, r8
   30d80:	mov	r0, r5
   30d84:	bl	30cc0 <crc32@@Base+0x17578>
   30d88:	mov	r1, r9
   30d8c:	subs	fp, r0, #0
   30d90:	beq	30e04 <crc32@@Base+0x176bc>
   30d94:	ldr	r3, [fp, #8]
   30d98:	ldr	r2, [r5, #12]
   30d9c:	ubfx	lr, r3, #8, #8
   30da0:	ubfx	r0, r3, #16, #8
   30da4:	lsr	r4, r3, #24
   30da8:	ubfx	ip, r2, #8, #8
   30dac:	orr	r4, r4, r3, lsl #24
   30db0:	lsr	r3, r2, #24
   30db4:	orr	r3, r3, r2, lsl #24
   30db8:	ubfx	r2, r2, #16, #8
   30dbc:	orr	r4, r4, lr, lsl #16
   30dc0:	orr	r3, r3, ip, lsl #16
   30dc4:	orr	r4, r4, r0, lsl #8
   30dc8:	orr	r3, r3, r2, lsl #8
   30dcc:	add	r4, r4, r3
   30dd0:	add	r4, r5, r4
   30dd4:	mov	r0, r4
   30dd8:	bl	120ec <strnlen@plt>
   30ddc:	cmp	r0, r7
   30de0:	bne	30d64 <crc32@@Base+0x1761c>
   30de4:	mov	r0, r4
   30de8:	mov	r2, r7
   30dec:	mov	r1, sl
   30df0:	bl	126c8 <memcmp@plt>
   30df4:	cmp	r0, #0
   30df8:	bne	30d64 <crc32@@Base+0x1761c>
   30dfc:	mov	r0, fp
   30e00:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e04:	mvn	r6, #12
   30e08:	cmp	r8, #0
   30e0c:	strne	r6, [r8]
   30e10:	movne	fp, #0
   30e14:	moveq	fp, r8
   30e18:	mov	r0, fp
   30e1c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e20:	push	{r4, r5, r6, r7, lr}
   30e24:	mov	r5, r0
   30e28:	sub	sp, sp, #12
   30e2c:	mov	r0, r2
   30e30:	mov	r7, r3
   30e34:	mov	r4, r2
   30e38:	mov	r6, r1
   30e3c:	bl	125c0 <strlen@plt>
   30e40:	str	r7, [sp]
   30e44:	mov	r2, r4
   30e48:	mov	r1, r6
   30e4c:	mov	r3, r0
   30e50:	mov	r0, r5
   30e54:	bl	30d3c <crc32@@Base+0x175f4>
   30e58:	add	sp, sp, #12
   30e5c:	pop	{r4, r5, r6, r7, pc}
   30e60:	push	{lr}		; (str lr, [sp, #-4]!)
   30e64:	sub	sp, sp, #12
   30e68:	ldr	ip, [sp, #16]
   30e6c:	str	ip, [sp]
   30e70:	bl	30d3c <crc32@@Base+0x175f4>
   30e74:	cmp	r0, #0
   30e78:	addne	r0, r0, #12
   30e7c:	add	sp, sp, #12
   30e80:	pop	{pc}		; (ldr pc, [sp], #4)
   30e84:	push	{r4, r5, r6, r7, r8, lr}
   30e88:	mov	r4, r2
   30e8c:	mov	r2, r3
   30e90:	mov	r5, r0
   30e94:	bl	30cc0 <crc32@@Base+0x17578>
   30e98:	cmp	r0, #0
   30e9c:	popeq	{r4, r5, r6, r7, r8, pc}
   30ea0:	cmp	r4, #0
   30ea4:	beq	30eec <crc32@@Base+0x177a4>
   30ea8:	ldr	ip, [r0, #8]
   30eac:	ldr	r1, [r5, #12]
   30eb0:	ubfx	r7, ip, #8, #8
   30eb4:	ubfx	lr, ip, #16, #8
   30eb8:	ubfx	r6, r1, #8, #8
   30ebc:	lsr	r2, ip, #24
   30ec0:	lsr	r3, r1, #24
   30ec4:	orr	r2, r2, ip, lsl #24
   30ec8:	orr	r3, r3, r1, lsl #24
   30ecc:	ubfx	r1, r1, #16, #8
   30ed0:	orr	r2, r2, r7, lsl #16
   30ed4:	orr	r3, r3, r6, lsl #16
   30ed8:	orr	r2, r2, lr, lsl #8
   30edc:	orr	r3, r3, r1, lsl #8
   30ee0:	add	r3, r3, r2
   30ee4:	add	r3, r5, r3
   30ee8:	str	r3, [r4]
   30eec:	add	r0, r0, #12
   30ef0:	pop	{r4, r5, r6, r7, r8, pc}
   30ef4:	push	{r4, r5, r6, r7, lr}
   30ef8:	mov	r5, r0
   30efc:	sub	sp, sp, #12
   30f00:	mov	r0, r2
   30f04:	mov	r7, r3
   30f08:	mov	r4, r2
   30f0c:	mov	r6, r1
   30f10:	bl	125c0 <strlen@plt>
   30f14:	str	r7, [sp]
   30f18:	mov	r2, r4
   30f1c:	mov	r1, r6
   30f20:	mov	r3, r0
   30f24:	mov	r0, r5
   30f28:	bl	30d3c <crc32@@Base+0x175f4>
   30f2c:	cmp	r0, #0
   30f30:	addne	r0, r0, #12
   30f34:	add	sp, sp, #12
   30f38:	pop	{r4, r5, r6, r7, pc}
   30f3c:	push	{r4, r5, r6, lr}
   30f40:	movw	r4, #61168	; 0xeef0
   30f44:	movt	r4, #4
   30f48:	sub	sp, sp, #8
   30f4c:	movw	r2, #52280	; 0xcc38
   30f50:	movt	r2, #3
   30f54:	ldr	ip, [r4]
   30f58:	mov	r3, sp
   30f5c:	mov	r5, r0
   30f60:	mov	r6, r1
   30f64:	str	ip, [sp, #4]
   30f68:	bl	30ef4 <crc32@@Base+0x177ac>
   30f6c:	cmp	r0, #0
   30f70:	beq	30f80 <crc32@@Base+0x17838>
   30f74:	ldr	r3, [sp]
   30f78:	cmp	r3, #4
   30f7c:	beq	30fc8 <crc32@@Base+0x17880>
   30f80:	mov	r3, sp
   30f84:	mov	r1, r6
   30f88:	mov	r0, r5
   30f8c:	movw	r2, #52288	; 0xcc40
   30f90:	movt	r2, #3
   30f94:	bl	30ef4 <crc32@@Base+0x177ac>
   30f98:	cmp	r0, #0
   30f9c:	beq	30fb0 <crc32@@Base+0x17868>
   30fa0:	ldr	r3, [sp]
   30fa4:	cmp	r3, #4
   30fa8:	movne	r0, #0
   30fac:	beq	30fc8 <crc32@@Base+0x17880>
   30fb0:	ldr	r2, [sp, #4]
   30fb4:	ldr	r3, [r4]
   30fb8:	cmp	r2, r3
   30fbc:	bne	30fe8 <crc32@@Base+0x178a0>
   30fc0:	add	sp, sp, #8
   30fc4:	pop	{r4, r5, r6, pc}
   30fc8:	ldr	r3, [r0]
   30fcc:	ubfx	r1, r3, #8, #8
   30fd0:	ubfx	r2, r3, #16, #8
   30fd4:	lsr	r0, r3, #24
   30fd8:	orr	r0, r0, r3, lsl #24
   30fdc:	orr	r0, r0, r1, lsl #16
   30fe0:	orr	r0, r0, r2, lsl #8
   30fe4:	b	30fb0 <crc32@@Base+0x17868>
   30fe8:	bl	12494 <__stack_chk_fail@plt>
   30fec:	push	{r4, r5, r6, lr}
   30ff0:	mov	r2, #0
   30ff4:	mvn	r1, #0
   30ff8:	mov	r6, r0
   30ffc:	bl	2d978 <crc32@@Base+0x14230>
   31000:	cmn	r0, #1
   31004:	beq	31070 <crc32@@Base+0x17928>
   31008:	cmp	r0, #0
   3100c:	mov	r4, r0
   31010:	movge	r5, #0
   31014:	bge	31024 <crc32@@Base+0x178dc>
   31018:	b	31064 <crc32@@Base+0x1791c>
   3101c:	cmp	r4, #0
   31020:	blt	31064 <crc32@@Base+0x1791c>
   31024:	mov	r1, r4
   31028:	mov	r0, r6
   3102c:	bl	30f3c <crc32@@Base+0x177f4>
   31030:	mov	r1, r4
   31034:	mov	r2, #0
   31038:	cmn	r0, #1
   3103c:	cmpne	r0, r5
   31040:	mov	r3, r0
   31044:	mov	r0, r6
   31048:	movhi	r5, r3
   3104c:	bl	2d978 <crc32@@Base+0x14230>
   31050:	cmn	r0, #1
   31054:	mov	r4, r0
   31058:	bne	3101c <crc32@@Base+0x178d4>
   3105c:	mov	r0, r5
   31060:	pop	{r4, r5, r6, pc}
   31064:	mvn	r5, #0
   31068:	mov	r0, r5
   3106c:	pop	{r4, r5, r6, pc}
   31070:	mov	r5, #0
   31074:	b	3105c <crc32@@Base+0x17914>
   31078:	push	{r4, r5, r6, r7, r8, lr}
   3107c:	mov	r6, r0
   31080:	mov	r7, r1
   31084:	mvn	r4, #0
   31088:	mov	r5, #0
   3108c:	b	3109c <crc32@@Base+0x17954>
   31090:	bl	30f3c <crc32@@Base+0x177f4>
   31094:	cmp	r5, r0
   31098:	movcc	r5, r0
   3109c:	mov	r1, r4
   310a0:	mov	r2, #0
   310a4:	mov	r0, r6
   310a8:	bl	2d978 <crc32@@Base+0x14230>
   310ac:	subs	r4, r0, #0
   310b0:	mov	r0, r6
   310b4:	mov	r1, r4
   310b8:	bge	31090 <crc32@@Base+0x17948>
   310bc:	cmn	r4, #1
   310c0:	beq	310cc <crc32@@Base+0x17984>
   310c4:	mov	r0, r4
   310c8:	pop	{r4, r5, r6, r7, r8, pc}
   310cc:	cmn	r5, #2
   310d0:	beq	310f4 <crc32@@Base+0x179ac>
   310d4:	cmp	r7, #0
   310d8:	moveq	r4, r7
   310dc:	beq	310c4 <crc32@@Base+0x1797c>
   310e0:	mov	r4, #0
   310e4:	add	r5, r5, #1
   310e8:	mov	r0, r4
   310ec:	str	r5, [r7]
   310f0:	pop	{r4, r5, r6, r7, r8, pc}
   310f4:	mvn	r4, #16
   310f8:	b	310c4 <crc32@@Base+0x1797c>
   310fc:	push	{r4, r5, r6, lr}
   31100:	mov	r5, r1
   31104:	sub	sp, sp, #8
   31108:	movw	r1, #52412	; 0xccbc
   3110c:	movt	r1, #3
   31110:	mov	r6, r2
   31114:	mov	r4, r0
   31118:	bl	31250 <crc32@@Base+0x17b08>
   3111c:	subs	r1, r0, #0
   31120:	blt	31150 <crc32@@Base+0x17a08>
   31124:	mov	ip, #0
   31128:	mov	r3, r6
   3112c:	mov	r2, r5
   31130:	mov	r0, r4
   31134:	str	ip, [sp]
   31138:	bl	30d3c <crc32@@Base+0x175f4>
   3113c:	cmp	r0, #0
   31140:	beq	31150 <crc32@@Base+0x17a08>
   31144:	add	r0, r0, #12
   31148:	add	sp, sp, #8
   3114c:	pop	{r4, r5, r6, pc}
   31150:	mov	r0, #0
   31154:	add	sp, sp, #8
   31158:	pop	{r4, r5, r6, pc}
   3115c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   31160:	mov	r4, r1
   31164:	mov	r5, r2
   31168:	mov	r9, r0
   3116c:	bl	2d61c <crc32@@Base+0x13ed4>
   31170:	subs	r7, r0, #0
   31174:	bne	31240 <crc32@@Base+0x17af8>
   31178:	ldrb	r3, [r4]
   3117c:	add	r8, r4, r5
   31180:	cmp	r3, #47	; 0x2f
   31184:	beq	311cc <crc32@@Base+0x17a84>
   31188:	mov	r1, r5
   3118c:	mov	r0, r4
   31190:	bl	30740 <crc32@@Base+0x16ff8>
   31194:	mov	r1, r4
   31198:	cmp	r0, #0
   3119c:	movne	r5, r0
   311a0:	moveq	r5, r8
   311a4:	mov	r0, r9
   311a8:	sub	r2, r5, r4
   311ac:	bl	310fc <crc32@@Base+0x179b4>
   311b0:	subs	r1, r0, #0
   311b4:	beq	31248 <crc32@@Base+0x17b00>
   311b8:	mov	r0, r9
   311bc:	mov	r4, r5
   311c0:	bl	31250 <crc32@@Base+0x17b08>
   311c4:	ldrb	r3, [r5]
   311c8:	mov	r7, r0
   311cc:	cmp	r3, #0
   311d0:	cmpne	r4, r8
   311d4:	bcc	311e0 <crc32@@Base+0x17a98>
   311d8:	b	31240 <crc32@@Base+0x17af8>
   311dc:	ldrb	r3, [r4, #1]!
   311e0:	cmp	r3, #47	; 0x2f
   311e4:	beq	311dc <crc32@@Base+0x17a94>
   311e8:	cmp	r3, #58	; 0x3a
   311ec:	cmpne	r3, #0
   311f0:	beq	31240 <crc32@@Base+0x17af8>
   311f4:	sub	r6, r8, r4
   311f8:	mov	r0, r4
   311fc:	mov	r1, r6
   31200:	bl	30740 <crc32@@Base+0x16ff8>
   31204:	mov	r1, r7
   31208:	mov	r2, r4
   3120c:	subs	r5, r0, #0
   31210:	mov	r0, r9
   31214:	subne	r6, r5, r4
   31218:	moveq	r5, r8
   3121c:	mov	r3, r6
   31220:	bl	30ad4 <crc32@@Base+0x1738c>
   31224:	subs	r7, r0, #0
   31228:	blt	31240 <crc32@@Base+0x17af8>
   3122c:	ldrb	r3, [r5]
   31230:	mov	r4, r5
   31234:	cmp	r3, #0
   31238:	cmpne	r4, r8
   3123c:	bcc	311e0 <crc32@@Base+0x17a98>
   31240:	mov	r0, r7
   31244:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31248:	mvn	r7, #4
   3124c:	b	31240 <crc32@@Base+0x17af8>
   31250:	push	{r4, r5, r6, lr}
   31254:	mov	r5, r0
   31258:	mov	r0, r1
   3125c:	mov	r4, r1
   31260:	bl	125c0 <strlen@plt>
   31264:	mov	r1, r4
   31268:	mov	r2, r0
   3126c:	mov	r0, r5
   31270:	pop	{r4, r5, r6, lr}
   31274:	b	3115c <crc32@@Base+0x17a14>
   31278:	push	{r4, r5, r6, lr}
   3127c:	mov	r5, r0
   31280:	mov	r0, r1
   31284:	mov	r4, r1
   31288:	bl	125c0 <strlen@plt>
   3128c:	mov	r1, r4
   31290:	mov	r2, r0
   31294:	mov	r0, r5
   31298:	pop	{r4, r5, r6, lr}
   3129c:	b	310fc <crc32@@Base+0x179b4>
   312a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   312a4:	movw	sl, #61168	; 0xeef0
   312a8:	movt	sl, #4
   312ac:	mov	r6, r2
   312b0:	sub	sp, sp, #28
   312b4:	mov	r8, r1
   312b8:	ldr	r2, [sl]
   312bc:	mov	r4, r3
   312c0:	str	r3, [sp]
   312c4:	mov	r9, r0
   312c8:	str	r2, [sp, #20]
   312cc:	bl	2d61c <crc32@@Base+0x13ed4>
   312d0:	subs	fp, r0, #0
   312d4:	bne	313dc <crc32@@Base+0x17c94>
   312d8:	cmp	r4, #1
   312dc:	ble	31424 <crc32@@Base+0x17cdc>
   312e0:	cmp	r8, #0
   312e4:	str	fp, [sp, #12]
   312e8:	movge	r7, fp
   312ec:	movge	r0, fp
   312f0:	movge	r4, fp
   312f4:	movge	r5, fp
   312f8:	blt	31418 <crc32@@Base+0x17cd0>
   312fc:	cmp	r0, r5
   31300:	ble	3136c <crc32@@Base+0x17c24>
   31304:	cmp	r7, r8
   31308:	beq	313c0 <crc32@@Base+0x17c78>
   3130c:	mov	r1, r7
   31310:	add	r2, sp, #12
   31314:	mov	r0, r9
   31318:	bl	2d978 <crc32@@Base+0x14230>
   3131c:	cmp	r0, #0
   31320:	cmpge	r8, r0
   31324:	mov	r7, r0
   31328:	blt	313f8 <crc32@@Base+0x17cb0>
   3132c:	ldr	r0, [sp, #12]
   31330:	cmp	r5, r0
   31334:	ble	312fc <crc32@@Base+0x17bb4>
   31338:	sub	r3, r4, #1
   3133c:	add	r2, r6, r3
   31340:	b	31348 <crc32@@Base+0x17c00>
   31344:	sub	r3, r3, #1
   31348:	ldrb	r1, [r2, #-1]!
   3134c:	mov	r4, r3
   31350:	cmp	r1, #47	; 0x2f
   31354:	bne	31344 <crc32@@Base+0x17bfc>
   31358:	sub	r5, r5, #1
   3135c:	cmp	r5, r0
   31360:	bne	31338 <crc32@@Base+0x17bf0>
   31364:	cmp	r0, r5
   31368:	bgt	31304 <crc32@@Base+0x17bbc>
   3136c:	mov	r1, r7
   31370:	add	r2, sp, #16
   31374:	mov	r0, r9
   31378:	bl	30bf4 <crc32@@Base+0x174ac>
   3137c:	subs	r1, r0, #0
   31380:	beq	31410 <crc32@@Base+0x17cc8>
   31384:	ldr	r2, [sp, #16]
   31388:	ldr	r0, [sp]
   3138c:	add	r3, r2, r4
   31390:	cmp	r3, r0
   31394:	bge	31304 <crc32@@Base+0x17bbc>
   31398:	add	r0, r6, r4
   3139c:	str	r3, [sp, #4]
   313a0:	add	r4, r3, #1
   313a4:	bl	1259c <memcpy@plt>
   313a8:	ldr	r3, [sp, #4]
   313ac:	cmp	r7, r8
   313b0:	mov	r2, #47	; 0x2f
   313b4:	add	r5, r5, #1
   313b8:	strb	r2, [r6, r3]
   313bc:	bne	3130c <crc32@@Base+0x17bc4>
   313c0:	ldr	r3, [sp, #12]
   313c4:	cmp	r3, r5
   313c8:	bge	31424 <crc32@@Base+0x17cdc>
   313cc:	cmp	r4, #1
   313d0:	mov	r3, #0
   313d4:	subgt	r4, r4, #1
   313d8:	strb	r3, [r6, r4]
   313dc:	ldr	r2, [sp, #20]
   313e0:	mov	r0, fp
   313e4:	ldr	r3, [sl]
   313e8:	cmp	r2, r3
   313ec:	bne	31420 <crc32@@Base+0x17cd8>
   313f0:	add	sp, sp, #28
   313f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   313f8:	cmn	r0, #1
   313fc:	bge	31418 <crc32@@Base+0x17cd0>
   31400:	cmn	r0, #4
   31404:	movne	fp, r0
   31408:	mvneq	fp, #10
   3140c:	b	313dc <crc32@@Base+0x17c94>
   31410:	ldr	fp, [sp, #16]
   31414:	b	313dc <crc32@@Base+0x17c94>
   31418:	mvn	fp, #3
   3141c:	b	313dc <crc32@@Base+0x17c94>
   31420:	bl	12494 <__stack_chk_fail@plt>
   31424:	mvn	fp, #2
   31428:	b	313dc <crc32@@Base+0x17c94>
   3142c:	push	{r4, r5, r6, r7, r8, r9, lr}
   31430:	movw	r7, #61168	; 0xeef0
   31434:	movt	r7, #4
   31438:	mov	r6, r2
   3143c:	sub	sp, sp, #12
   31440:	mov	r4, r1
   31444:	ldr	r2, [r7]
   31448:	mov	r9, r3
   3144c:	mov	r8, r0
   31450:	str	r2, [sp, #4]
   31454:	bl	2d61c <crc32@@Base+0x13ed4>
   31458:	cmp	r0, #0
   3145c:	bne	31480 <crc32@@Base+0x17d38>
   31460:	cmp	r6, #0
   31464:	blt	314f4 <crc32@@Base+0x17dac>
   31468:	cmp	r4, #0
   3146c:	str	r0, [sp]
   31470:	movge	r3, r0
   31474:	mvnge	r5, #12
   31478:	bge	314b8 <crc32@@Base+0x17d70>
   3147c:	mvn	r0, #3
   31480:	ldr	r2, [sp, #4]
   31484:	ldr	r3, [r7]
   31488:	cmp	r2, r3
   3148c:	bne	314fc <crc32@@Base+0x17db4>
   31490:	add	sp, sp, #12
   31494:	pop	{r4, r5, r6, r7, r8, r9, pc}
   31498:	mov	r1, r0
   3149c:	mov	r2, sp
   314a0:	mov	r0, r8
   314a4:	bl	2d978 <crc32@@Base+0x14230>
   314a8:	cmp	r0, #0
   314ac:	cmpge	r4, r0
   314b0:	blt	314e0 <crc32@@Base+0x17d98>
   314b4:	ldr	r3, [sp]
   314b8:	cmp	r6, r3
   314bc:	moveq	r5, r0
   314c0:	cmp	r4, r0
   314c4:	bne	31498 <crc32@@Base+0x17d50>
   314c8:	cmp	r9, #0
   314cc:	strne	r3, [r9]
   314d0:	cmp	r6, r3
   314d4:	movle	r0, r5
   314d8:	mvngt	r0, #0
   314dc:	b	31480 <crc32@@Base+0x17d38>
   314e0:	cmn	r0, #1
   314e4:	bge	3147c <crc32@@Base+0x17d34>
   314e8:	cmn	r0, #4
   314ec:	mvneq	r0, #10
   314f0:	b	31480 <crc32@@Base+0x17d38>
   314f4:	mvn	r0, #0
   314f8:	b	31480 <crc32@@Base+0x17d38>
   314fc:	bl	12494 <__stack_chk_fail@plt>
   31500:	push	{r4, lr}
   31504:	movw	r4, #61168	; 0xeef0
   31508:	movt	r4, #4
   3150c:	sub	sp, sp, #8
   31510:	mov	r2, #0
   31514:	ldr	ip, [r4]
   31518:	mov	r3, sp
   3151c:	str	ip, [sp, #4]
   31520:	bl	3142c <crc32@@Base+0x17ce4>
   31524:	cmp	r0, #0
   31528:	ldreq	r0, [sp]
   3152c:	beq	31534 <crc32@@Base+0x17dec>
   31530:	mvnge	r0, #12
   31534:	ldr	r2, [sp, #4]
   31538:	ldr	r3, [r4]
   3153c:	cmp	r2, r3
   31540:	bne	3154c <crc32@@Base+0x17e04>
   31544:	add	sp, sp, #8
   31548:	pop	{r4, pc}
   3154c:	bl	12494 <__stack_chk_fail@plt>
   31550:	push	{r4, r5, r6, lr}
   31554:	movw	r4, #61168	; 0xeef0
   31558:	movt	r4, #4
   3155c:	sub	sp, sp, #8
   31560:	mov	r2, #0
   31564:	mov	r5, r0
   31568:	ldr	ip, [r4]
   3156c:	mov	r3, sp
   31570:	mov	r6, r1
   31574:	str	ip, [sp, #4]
   31578:	bl	3142c <crc32@@Base+0x17ce4>
   3157c:	subs	r2, r0, #0
   31580:	beq	315a4 <crc32@@Base+0x17e5c>
   31584:	mvnge	r2, #12
   31588:	ldr	r1, [sp, #4]
   3158c:	mov	r0, r2
   31590:	ldr	r3, [r4]
   31594:	cmp	r1, r3
   31598:	bne	315cc <crc32@@Base+0x17e84>
   3159c:	add	sp, sp, #8
   315a0:	pop	{r4, r5, r6, pc}
   315a4:	ldr	r2, [sp]
   315a8:	cmp	r2, #0
   315ac:	blt	31588 <crc32@@Base+0x17e40>
   315b0:	mov	r3, r0
   315b4:	sub	r2, r2, #1
   315b8:	mov	r1, r6
   315bc:	mov	r0, r5
   315c0:	bl	3142c <crc32@@Base+0x17ce4>
   315c4:	mov	r2, r0
   315c8:	b	31588 <crc32@@Base+0x17e40>
   315cc:	bl	12494 <__stack_chk_fail@plt>
   315d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   315d4:	movw	r6, #61168	; 0xeef0
   315d8:	movt	r6, #4
   315dc:	mov	r8, r2
   315e0:	sub	sp, sp, #8
   315e4:	mov	sl, r1
   315e8:	ldr	r2, [r6]
   315ec:	mov	r9, r3
   315f0:	mov	r5, r0
   315f4:	ldr	r7, [sp, #40]	; 0x28
   315f8:	str	r2, [sp, #4]
   315fc:	bl	2d61c <crc32@@Base+0x13ed4>
   31600:	subs	r4, r0, #0
   31604:	beq	31624 <crc32@@Base+0x17edc>
   31608:	ldr	r2, [sp, #4]
   3160c:	mov	r0, r4
   31610:	ldr	r3, [r6]
   31614:	cmp	r2, r3
   31618:	bne	31698 <crc32@@Base+0x17f50>
   3161c:	add	sp, sp, #8
   31620:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   31624:	mov	r2, r4
   31628:	mov	r1, sl
   3162c:	mov	r0, r5
   31630:	bl	2d978 <crc32@@Base+0x14230>
   31634:	subs	r4, r0, #0
   31638:	bge	31658 <crc32@@Base+0x17f10>
   3163c:	b	31608 <crc32@@Base+0x17ec0>
   31640:	mov	r1, r4
   31644:	mov	r2, #0
   31648:	mov	r0, r5
   3164c:	bl	2d978 <crc32@@Base+0x14230>
   31650:	subs	r4, r0, #0
   31654:	blt	31608 <crc32@@Base+0x17ec0>
   31658:	mov	r3, sp
   3165c:	mov	r2, r8
   31660:	mov	r1, r4
   31664:	mov	r0, r5
   31668:	bl	30ef4 <crc32@@Base+0x177ac>
   3166c:	cmp	r0, #0
   31670:	beq	31640 <crc32@@Base+0x17ef8>
   31674:	ldr	r3, [sp]
   31678:	cmp	r3, r7
   3167c:	bne	31640 <crc32@@Base+0x17ef8>
   31680:	mov	r2, r7
   31684:	mov	r1, r9
   31688:	bl	126c8 <memcmp@plt>
   3168c:	cmp	r0, #0
   31690:	bne	31640 <crc32@@Base+0x17ef8>
   31694:	b	31608 <crc32@@Base+0x17ec0>
   31698:	bl	12494 <__stack_chk_fail@plt>
   3169c:	sub	r3, r1, #1
   316a0:	cmn	r3, #3
   316a4:	push	{r4, r5, r6, lr}
   316a8:	bhi	3170c <crc32@@Base+0x17fc4>
   316ac:	mov	r5, r0
   316b0:	mov	r6, r1
   316b4:	bl	2d61c <crc32@@Base+0x13ed4>
   316b8:	subs	r4, r0, #0
   316bc:	beq	316c8 <crc32@@Base+0x17f80>
   316c0:	mov	r0, r4
   316c4:	pop	{r4, r5, r6, pc}
   316c8:	mov	r2, r4
   316cc:	mvn	r1, #0
   316d0:	mov	r0, r5
   316d4:	b	316f8 <crc32@@Base+0x17fb0>
   316d8:	mov	r1, r4
   316dc:	mov	r0, r5
   316e0:	bl	30f3c <crc32@@Base+0x177f4>
   316e4:	mov	r1, r4
   316e8:	mov	r2, #0
   316ec:	cmp	r6, r0
   316f0:	mov	r0, r5
   316f4:	beq	316c0 <crc32@@Base+0x17f78>
   316f8:	bl	2d978 <crc32@@Base+0x14230>
   316fc:	subs	r4, r0, #0
   31700:	bge	316d8 <crc32@@Base+0x17f90>
   31704:	mov	r0, r4
   31708:	pop	{r4, r5, r6, pc}
   3170c:	mvn	r4, #5
   31710:	b	316c0 <crc32@@Base+0x17f78>
   31714:	push	{r4, r5, r6, r7, r8, lr}
   31718:	mov	r4, r0
   3171c:	mov	r0, r2
   31720:	mov	r5, r1
   31724:	mov	r7, r2
   31728:	bl	125c0 <strlen@plt>
   3172c:	cmp	r0, r5
   31730:	bgt	31790 <crc32@@Base+0x18048>
   31734:	mov	r6, r0
   31738:	add	r8, r0, #1
   3173c:	b	31764 <crc32@@Base+0x1801c>
   31740:	bl	12698 <memchr@plt>
   31744:	cmp	r0, #0
   31748:	sub	r3, r0, r4
   3174c:	add	r4, r0, #1
   31750:	add	r3, r3, #1
   31754:	popeq	{r4, r5, r6, r7, r8, pc}
   31758:	sub	r5, r5, r3
   3175c:	cmp	r6, r5
   31760:	bgt	31790 <crc32@@Base+0x18048>
   31764:	mov	r2, r8
   31768:	mov	r1, r4
   3176c:	mov	r0, r7
   31770:	bl	126c8 <memcmp@plt>
   31774:	mov	r1, #0
   31778:	mov	r2, r5
   3177c:	cmp	r0, r1
   31780:	mov	r0, r4
   31784:	bne	31740 <crc32@@Base+0x17ff8>
   31788:	mov	r0, #1
   3178c:	pop	{r4, r5, r6, r7, r8, pc}
   31790:	mov	r0, #0
   31794:	pop	{r4, r5, r6, r7, r8, pc}
   31798:	push	{r4, r5, r6, r7, lr}
   3179c:	movw	r7, #61168	; 0xeef0
   317a0:	movt	r7, #4
   317a4:	sub	sp, sp, #12
   317a8:	ldr	ip, [r7]
   317ac:	mov	r3, sp
   317b0:	str	ip, [sp, #4]
   317b4:	bl	30ef4 <crc32@@Base+0x177ac>
   317b8:	subs	r4, r0, #0
   317bc:	ldreq	r6, [sp]
   317c0:	beq	31808 <crc32@@Base+0x180c0>
   317c4:	ldr	r5, [sp]
   317c8:	mov	r6, #0
   317cc:	add	r5, r4, r5
   317d0:	cmp	r4, r5
   317d4:	bcc	317e4 <crc32@@Base+0x1809c>
   317d8:	b	31808 <crc32@@Base+0x180c0>
   317dc:	add	r6, r6, #1
   317e0:	bcs	31808 <crc32@@Base+0x180c0>
   317e4:	sub	r1, r5, r4
   317e8:	mov	r0, r4
   317ec:	bl	120ec <strnlen@plt>
   317f0:	add	r0, r0, #1
   317f4:	str	r0, [sp]
   317f8:	add	r4, r4, r0
   317fc:	cmp	r4, r5
   31800:	bls	317dc <crc32@@Base+0x18094>
   31804:	mvn	r6, #14
   31808:	ldr	r2, [sp, #4]
   3180c:	mov	r0, r6
   31810:	ldr	r3, [r7]
   31814:	cmp	r2, r3
   31818:	bne	31824 <crc32@@Base+0x180dc>
   3181c:	add	sp, sp, #12
   31820:	pop	{r4, r5, r6, r7, pc}
   31824:	bl	12494 <__stack_chk_fail@plt>
   31828:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3182c:	movw	r8, #61168	; 0xeef0
   31830:	movt	r8, #4
   31834:	sub	sp, sp, #8
   31838:	mov	r9, r3
   3183c:	ldr	ip, [r8]
   31840:	mov	r3, sp
   31844:	str	ip, [sp, #4]
   31848:	bl	30ef4 <crc32@@Base+0x177ac>
   3184c:	subs	r4, r0, #0
   31850:	ldreq	r7, [sp]
   31854:	beq	318cc <crc32@@Base+0x18184>
   31858:	mov	r0, r9
   3185c:	bl	125c0 <strlen@plt>
   31860:	ldr	r5, [sp]
   31864:	add	r5, r4, r5
   31868:	cmp	r4, r5
   3186c:	add	sl, r0, #1
   31870:	bcs	318e8 <crc32@@Base+0x181a0>
   31874:	mov	r7, #0
   31878:	b	3188c <crc32@@Base+0x18144>
   3187c:	cmp	r6, r5
   31880:	mov	r4, r6
   31884:	add	r7, r7, #1
   31888:	bcs	318e8 <crc32@@Base+0x181a0>
   3188c:	sub	r1, r5, r4
   31890:	mov	r0, r4
   31894:	bl	120ec <strnlen@plt>
   31898:	add	r0, r0, #1
   3189c:	str	r0, [sp]
   318a0:	add	r6, r4, r0
   318a4:	cmp	r6, r5
   318a8:	bhi	318f0 <crc32@@Base+0x181a8>
   318ac:	cmp	r0, sl
   318b0:	bne	3187c <crc32@@Base+0x18134>
   318b4:	mov	r0, r4
   318b8:	mov	r2, sl
   318bc:	mov	r1, r9
   318c0:	bl	126c8 <memcmp@plt>
   318c4:	cmp	r0, #0
   318c8:	bne	3187c <crc32@@Base+0x18134>
   318cc:	ldr	r2, [sp, #4]
   318d0:	mov	r0, r7
   318d4:	ldr	r3, [r8]
   318d8:	cmp	r2, r3
   318dc:	bne	318f8 <crc32@@Base+0x181b0>
   318e0:	add	sp, sp, #8
   318e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   318e8:	mvn	r7, #0
   318ec:	b	318cc <crc32@@Base+0x18184>
   318f0:	mvn	r7, #14
   318f4:	b	318cc <crc32@@Base+0x18184>
   318f8:	bl	12494 <__stack_chk_fail@plt>
   318fc:	push	{r4, r5, r6, r7, r8, lr}
   31900:	movw	r7, #61168	; 0xeef0
   31904:	movt	r7, #4
   31908:	sub	sp, sp, #8
   3190c:	mov	r6, r3
   31910:	ldr	ip, [r7]
   31914:	mov	r3, sp
   31918:	ldr	r8, [sp, #32]
   3191c:	str	ip, [sp, #4]
   31920:	bl	30ef4 <crc32@@Base+0x177ac>
   31924:	subs	r4, r0, #0
   31928:	beq	31990 <crc32@@Base+0x18248>
   3192c:	ldr	r5, [sp]
   31930:	add	r5, r4, r5
   31934:	cmp	r4, r5
   31938:	bcc	31958 <crc32@@Base+0x18210>
   3193c:	b	319c0 <crc32@@Base+0x18278>
   31940:	cmp	r6, #0
   31944:	beq	319d8 <crc32@@Base+0x18290>
   31948:	cmp	r3, r5
   3194c:	mov	r4, r3
   31950:	sub	r6, r6, #1
   31954:	bcs	319c0 <crc32@@Base+0x18278>
   31958:	sub	r1, r5, r4
   3195c:	mov	r0, r4
   31960:	bl	120ec <strnlen@plt>
   31964:	add	r3, r0, #1
   31968:	str	r3, [sp]
   3196c:	add	r3, r4, r3
   31970:	cmp	r3, r5
   31974:	bls	31940 <crc32@@Base+0x181f8>
   31978:	cmp	r8, #0
   3197c:	beq	319a0 <crc32@@Base+0x18258>
   31980:	mvn	r3, #14
   31984:	mov	r4, #0
   31988:	str	r3, [r8]
   3198c:	b	319a4 <crc32@@Base+0x1825c>
   31990:	cmp	r8, #0
   31994:	ldrne	r3, [sp]
   31998:	strne	r3, [r8]
   3199c:	bne	319a4 <crc32@@Base+0x1825c>
   319a0:	mov	r4, #0
   319a4:	ldr	r2, [sp, #4]
   319a8:	mov	r0, r4
   319ac:	ldr	r3, [r7]
   319b0:	cmp	r2, r3
   319b4:	bne	319e4 <crc32@@Base+0x1829c>
   319b8:	add	sp, sp, #8
   319bc:	pop	{r4, r5, r6, r7, r8, pc}
   319c0:	cmp	r8, #0
   319c4:	beq	319a0 <crc32@@Base+0x18258>
   319c8:	mvn	r3, #0
   319cc:	mov	r4, #0
   319d0:	str	r3, [r8]
   319d4:	b	319a4 <crc32@@Base+0x1825c>
   319d8:	cmp	r8, #0
   319dc:	strne	r0, [r8]
   319e0:	b	319a4 <crc32@@Base+0x1825c>
   319e4:	bl	12494 <__stack_chk_fail@plt>
   319e8:	push	{r4, r5, lr}
   319ec:	movw	r4, #61168	; 0xeef0
   319f0:	movt	r4, #4
   319f4:	sub	sp, sp, #12
   319f8:	mov	r5, r2
   319fc:	movw	r2, #30620	; 0x779c
   31a00:	ldr	ip, [r4]
   31a04:	mov	r3, sp
   31a08:	movt	r2, #3
   31a0c:	str	ip, [sp, #4]
   31a10:	bl	30ef4 <crc32@@Base+0x177ac>
   31a14:	cmp	r0, #0
   31a18:	ldreq	r0, [sp]
   31a1c:	beq	31a34 <crc32@@Base+0x182ec>
   31a20:	mov	r2, r5
   31a24:	ldr	r1, [sp]
   31a28:	bl	31714 <crc32@@Base+0x17fcc>
   31a2c:	clz	r0, r0
   31a30:	lsr	r0, r0, #5
   31a34:	ldr	r2, [sp, #4]
   31a38:	ldr	r3, [r4]
   31a3c:	cmp	r2, r3
   31a40:	bne	31a4c <crc32@@Base+0x18304>
   31a44:	add	sp, sp, #12
   31a48:	pop	{r4, r5, pc}
   31a4c:	bl	12494 <__stack_chk_fail@plt>
   31a50:	push	{r4, r5, r6, lr}
   31a54:	mov	r4, r1
   31a58:	mov	r6, r2
   31a5c:	mov	r5, r0
   31a60:	bl	2d61c <crc32@@Base+0x13ed4>
   31a64:	subs	r3, r0, #0
   31a68:	beq	31a74 <crc32@@Base+0x1832c>
   31a6c:	mov	r0, r3
   31a70:	pop	{r4, r5, r6, pc}
   31a74:	mov	r2, r3
   31a78:	mov	r1, r4
   31a7c:	mov	r0, r5
   31a80:	b	31ab4 <crc32@@Base+0x1836c>
   31a84:	mov	r2, r6
   31a88:	mov	r1, r4
   31a8c:	mov	r0, r5
   31a90:	bl	319e8 <crc32@@Base+0x182a0>
   31a94:	mov	r1, r4
   31a98:	mov	r2, #0
   31a9c:	mov	r3, r0
   31aa0:	cmn	r3, #1
   31aa4:	mov	r0, r5
   31aa8:	blt	31a6c <crc32@@Base+0x18324>
   31aac:	cmp	r3, r2
   31ab0:	beq	31ac0 <crc32@@Base+0x18378>
   31ab4:	bl	2d978 <crc32@@Base+0x14230>
   31ab8:	subs	r4, r0, #0
   31abc:	bge	31a84 <crc32@@Base+0x1833c>
   31ac0:	mov	r3, r4
   31ac4:	mov	r0, r3
   31ac8:	pop	{r4, r5, r6, pc}
   31acc:	ldr	r3, [r0, #384]	; 0x180
   31ad0:	ldr	ip, [r0, #388]	; 0x184
   31ad4:	cmp	r3, #0
   31ad8:	push	{r4, r5, lr}
   31adc:	subne	lr, ip, #-536870911	; 0xe0000001
   31ae0:	ldr	r4, [r0, #400]	; 0x190
   31ae4:	addne	r3, r3, lr, lsl #3
   31ae8:	ldr	lr, [r0, #396]	; 0x18c
   31aec:	cmp	r4, #0
   31af0:	beq	31afc <crc32@@Base+0x183b4>
   31af4:	cmp	ip, #0
   31af8:	bne	31b24 <crc32@@Base+0x183dc>
   31afc:	cmp	lr, ip
   31b00:	add	ip, ip, #1
   31b04:	str	ip, [r0, #388]	; 0x184
   31b08:	ble	31b64 <crc32@@Base+0x1841c>
   31b0c:	cmp	r3, #0
   31b10:	beq	31b6c <crc32@@Base+0x18424>
   31b14:	str	r1, [r3, #8]
   31b18:	mov	r0, #0
   31b1c:	str	r2, [r3, #12]
   31b20:	pop	{r4, r5, pc}
   31b24:	cmp	lr, ip
   31b28:	movlt	r4, #0
   31b2c:	movge	r4, #1
   31b30:	cmp	r3, #0
   31b34:	moveq	r4, #0
   31b38:	cmp	r4, #0
   31b3c:	beq	31afc <crc32@@Base+0x183b4>
   31b40:	ldr	r5, [r3]
   31b44:	ldr	r4, [r3, #4]
   31b48:	add	r4, r5, r4
   31b4c:	cmp	r4, r1
   31b50:	bge	31b74 <crc32@@Base+0x1842c>
   31b54:	cmp	lr, ip
   31b58:	add	ip, ip, #1
   31b5c:	str	ip, [r0, #388]	; 0x184
   31b60:	bgt	31b14 <crc32@@Base+0x183cc>
   31b64:	mvn	r0, #0
   31b68:	pop	{r4, r5, pc}
   31b6c:	mov	r0, r3
   31b70:	pop	{r4, r5, pc}
   31b74:	add	r2, r1, r2
   31b78:	mov	r0, #0
   31b7c:	sub	r5, r2, r5
   31b80:	str	r5, [r3, #4]
   31b84:	pop	{r4, r5, pc}
   31b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31b8c:	movw	ip, #61168	; 0xeef0
   31b90:	sub	sp, sp, #204	; 0xcc
   31b94:	movt	ip, #4
   31b98:	mov	r5, r0
   31b9c:	mvn	r6, #0
   31ba0:	str	ip, [sp, #52]	; 0x34
   31ba4:	add	r4, sp, #200	; 0xc8
   31ba8:	ldr	ip, [ip]
   31bac:	str	r3, [sp, #44]	; 0x2c
   31bb0:	ldr	r3, [sp, #244]	; 0xf4
   31bb4:	str	r0, [sp]
   31bb8:	add	r0, sp, #68	; 0x44
   31bbc:	str	r1, [sp, #48]	; 0x30
   31bc0:	mov	r1, #0
   31bc4:	str	r2, [sp, #32]
   31bc8:	mov	r2, #128	; 0x80
   31bcc:	ldr	r8, [sp, #252]	; 0xfc
   31bd0:	str	r3, [sp, #28]
   31bd4:	str	r6, [sp, #20]
   31bd8:	str	ip, [sp, #196]	; 0xc4
   31bdc:	bl	122e4 <memset@plt>
   31be0:	ldr	r2, [r5, #8]
   31be4:	mov	r1, #0
   31be8:	mov	r5, r1
   31bec:	str	r1, [r4, #-140]!	; 0xffffff74
   31bf0:	ubfx	r0, r2, #8, #8
   31bf4:	strb	r1, [r8]
   31bf8:	lsr	r3, r2, #24
   31bfc:	ubfx	r1, r2, #16, #8
   31c00:	orr	r3, r3, r2, lsl #24
   31c04:	str	r4, [sp, #8]
   31c08:	orr	r3, r3, r0, lsl #16
   31c0c:	mov	r4, r5
   31c10:	orr	r3, r3, r1, lsl #8
   31c14:	str	r5, [sp, #4]
   31c18:	str	r3, [sp, #24]
   31c1c:	str	r8, [sp, #16]
   31c20:	ldr	r2, [sp, #8]
   31c24:	mov	r1, r5
   31c28:	ldr	r0, [sp]
   31c2c:	bl	2d798 <crc32@@Base+0x14050>
   31c30:	ldr	r3, [sp, #60]	; 0x3c
   31c34:	mov	sl, r3
   31c38:	sub	r2, r0, #1
   31c3c:	mov	r7, r0
   31c40:	cmp	r2, #8
   31c44:	ldrls	pc, [pc, r2, lsl #2]
   31c48:	b	31e00 <crc32@@Base+0x186b8>
   31c4c:	andeq	r1, r3, r4, asr #29
   31c50:	andeq	r1, r3, r8, asr #28
   31c54:	andeq	r1, r3, r4, asr sp
   31c58:	andeq	r1, r3, r8, lsr sp
   31c5c:	andeq	r1, r3, r0, lsl #28
   31c60:	andeq	r1, r3, r0, lsl #28
   31c64:	andeq	r1, r3, r0, lsl #28
   31c68:	andeq	r1, r3, r0, lsl #28
   31c6c:	andeq	r1, r3, r0, ror ip
   31c70:	mov	fp, #1
   31c74:	str	fp, [sp, #12]
   31c78:	cmn	r6, #1
   31c7c:	movne	r2, #0
   31c80:	moveq	r2, #1
   31c84:	tst	fp, r2
   31c88:	beq	31fb4 <crc32@@Base+0x1886c>
   31c8c:	ldr	r2, [sp, #248]	; 0xf8
   31c90:	cmp	r4, r2
   31c94:	movgt	r2, #0
   31c98:	movle	r2, #1
   31c9c:	cmp	r4, #0
   31ca0:	moveq	r2, #0
   31ca4:	cmp	r2, #0
   31ca8:	beq	31cd4 <crc32@@Base+0x1858c>
   31cac:	sub	r2, r4, #-536870911	; 0xe0000001
   31cb0:	ldr	r0, [sp, #28]
   31cb4:	add	r1, r0, r2, lsl #3
   31cb8:	ldr	r2, [r0, r2, lsl #3]
   31cbc:	ldr	r1, [r1, #4]
   31cc0:	add	r2, r2, r1
   31cc4:	ldr	r1, [sp, #24]
   31cc8:	sub	r2, r2, r1
   31ccc:	cmp	r2, r5
   31cd0:	beq	31fc4 <crc32@@Base+0x1887c>
   31cd4:	mov	r6, r5
   31cd8:	cmp	r7, #9
   31cdc:	mov	r5, r3
   31ce0:	bne	31c20 <crc32@@Base+0x184d8>
   31ce4:	ldr	lr, [sp]
   31ce8:	ldr	r1, [lr, #36]	; 0x24
   31cec:	ubfx	ip, r1, #8, #8
   31cf0:	ubfx	r0, r1, #16, #8
   31cf4:	lsr	r2, r1, #24
   31cf8:	orr	r2, r2, r1, lsl #24
   31cfc:	orr	r2, r2, ip, lsl #16
   31d00:	orr	r2, r2, r0, lsl #8
   31d04:	cmp	r3, r2
   31d08:	bne	320ac <crc32@@Base+0x18964>
   31d0c:	ldr	r2, [sp, #248]	; 0xf8
   31d10:	cmp	r4, r2
   31d14:	blt	32040 <crc32@@Base+0x188f8>
   31d18:	add	r0, r4, #1
   31d1c:	ldr	r3, [sp, #52]	; 0x34
   31d20:	ldr	r2, [sp, #196]	; 0xc4
   31d24:	ldr	r3, [r3]
   31d28:	cmp	r2, r3
   31d2c:	bne	320b4 <crc32@@Base+0x1896c>
   31d30:	add	sp, sp, #204	; 0xcc
   31d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31d38:	ldr	r2, [sp, #4]
   31d3c:	mov	sl, r5
   31d40:	cmp	r2, #1
   31d44:	movle	fp, #0
   31d48:	movgt	fp, #1
   31d4c:	str	fp, [sp, #12]
   31d50:	b	31c78 <crc32@@Base+0x18530>
   31d54:	ldr	r9, [sp]
   31d58:	mov	r2, #0
   31d5c:	ldr	r3, [sp, #4]
   31d60:	mov	r1, r5
   31d64:	cmp	r3, #1
   31d68:	mov	r0, r9
   31d6c:	movle	fp, #0
   31d70:	movgt	fp, #1
   31d74:	bl	30cc0 <crc32@@Base+0x17578>
   31d78:	str	fp, [sp, #12]
   31d7c:	ldr	r1, [r0, #8]
   31d80:	mov	r0, r9
   31d84:	ubfx	r2, r1, #8, #8
   31d88:	lsr	r3, r1, #24
   31d8c:	orr	r3, r3, r1, lsl #24
   31d90:	ubfx	r1, r1, #16, #8
   31d94:	orr	r3, r3, r2, lsl #16
   31d98:	orr	r1, r3, r1, lsl #8
   31d9c:	bl	30814 <crc32@@Base+0x170cc>
   31da0:	ldr	r3, [sp, #240]	; 0xf0
   31da4:	cmp	r3, #0
   31da8:	ble	32098 <crc32@@Base+0x18950>
   31dac:	ldr	r3, [sp, #44]	; 0x2c
   31db0:	mov	r9, #0
   31db4:	str	fp, [sp, #40]	; 0x28
   31db8:	sub	sl, r3, #4
   31dbc:	str	r4, [sp, #36]	; 0x24
   31dc0:	mov	r4, r9
   31dc4:	mov	r9, r0
   31dc8:	mov	fp, sl
   31dcc:	ldr	sl, [sp, #240]	; 0xf0
   31dd0:	b	31de0 <crc32@@Base+0x18698>
   31dd4:	add	r4, r4, #1
   31dd8:	cmp	sl, r4
   31ddc:	beq	31ffc <crc32@@Base+0x188b4>
   31de0:	mov	r1, r9
   31de4:	ldr	r0, [fp, #4]!
   31de8:	bl	1265c <strcmp@plt>
   31dec:	cmp	r0, #0
   31df0:	bne	31dd4 <crc32@@Base+0x1868c>
   31df4:	ldr	r4, [sp, #36]	; 0x24
   31df8:	mov	sl, r5
   31dfc:	ldr	r3, [sp, #60]	; 0x3c
   31e00:	mov	r9, #1
   31e04:	adds	r2, r6, #1
   31e08:	movne	r2, #1
   31e0c:	tst	r9, r2
   31e10:	beq	31cd8 <crc32@@Base+0x18590>
   31e14:	ldr	r2, [sp, #248]	; 0xf8
   31e18:	cmp	r4, r2
   31e1c:	bge	31e3c <crc32@@Base+0x186f4>
   31e20:	ldr	r1, [sp, #28]
   31e24:	sub	sl, sl, r6
   31e28:	ldr	r0, [sp, #24]
   31e2c:	add	r2, r1, r4, lsl #3
   31e30:	add	r6, r6, r0
   31e34:	str	r6, [r1, r4, lsl #3]
   31e38:	str	sl, [r2, #4]
   31e3c:	add	r4, r4, #1
   31e40:	mvn	r6, #0
   31e44:	b	31cd8 <crc32@@Base+0x18590>
   31e48:	ldr	r1, [sp, #20]
   31e4c:	cmn	r1, #1
   31e50:	beq	32090 <crc32@@Base+0x18948>
   31e54:	ldr	lr, [sp, #16]
   31e58:	add	r0, sp, #200	; 0xc8
   31e5c:	add	r2, r0, r1, lsl #2
   31e60:	sub	ip, r1, #1
   31e64:	cmp	lr, r8
   31e68:	ldr	r0, [r2, #-132]	; 0xffffff7c
   31e6c:	bls	31e9c <crc32@@Base+0x18754>
   31e70:	ldrb	r1, [lr, #-1]
   31e74:	sub	r2, lr, #1
   31e78:	cmp	r1, #47	; 0x2f
   31e7c:	bne	31e90 <crc32@@Base+0x18748>
   31e80:	b	31fd4 <crc32@@Base+0x1888c>
   31e84:	ldrb	r1, [r2, #-1]!
   31e88:	cmp	r1, #47	; 0x2f
   31e8c:	beq	31fd4 <crc32@@Base+0x1888c>
   31e90:	cmp	r8, r2
   31e94:	bne	31e84 <crc32@@Base+0x1873c>
   31e98:	str	r8, [sp, #16]
   31e9c:	ldr	r1, [sp, #16]
   31ea0:	mov	r2, #0
   31ea4:	str	ip, [sp, #20]
   31ea8:	strb	r2, [r1]
   31eac:	ldr	r2, [sp, #4]
   31eb0:	str	r0, [sp, #4]
   31eb4:	adds	fp, r2, #0
   31eb8:	str	r2, [sp, #12]
   31ebc:	movne	fp, #1
   31ec0:	b	31c78 <crc32@@Base+0x18530>
   31ec4:	ldr	r3, [sp, #20]
   31ec8:	add	r3, r3, #1
   31ecc:	str	r3, [sp, #20]
   31ed0:	cmp	r3, #32
   31ed4:	beq	32090 <crc32@@Base+0x18948>
   31ed8:	add	r2, sp, #64	; 0x40
   31edc:	mov	r1, r5
   31ee0:	ldr	r0, [sp]
   31ee4:	bl	30bf4 <crc32@@Base+0x174ac>
   31ee8:	ldr	r2, [sp, #16]
   31eec:	ldr	r9, [sp, #64]	; 0x40
   31ef0:	sub	r3, r2, r8
   31ef4:	ldr	r1, [sp, #256]	; 0x100
   31ef8:	add	r3, r3, #2
   31efc:	add	r3, r3, r9
   31f00:	cmp	r3, r1
   31f04:	bge	320a4 <crc32@@Base+0x1895c>
   31f08:	add	r3, r8, #1
   31f0c:	mov	r1, r0
   31f10:	cmp	r2, r3
   31f14:	ldreq	r3, [sp, #16]
   31f18:	movne	r3, #47	; 0x2f
   31f1c:	strbne	r3, [r2]
   31f20:	addne	r3, r2, #1
   31f24:	mov	r0, r3
   31f28:	bl	123e0 <strcpy@plt>
   31f2c:	ldr	r1, [sp, #20]
   31f30:	ldr	r2, [sp, #4]
   31f34:	cmp	r2, #1
   31f38:	add	r3, r0, r9
   31f3c:	str	r3, [sp, #16]
   31f40:	add	r3, sp, #200	; 0xc8
   31f44:	add	r3, r3, r1, lsl #2
   31f48:	str	r2, [r3, #-132]	; 0xffffff7c
   31f4c:	ldr	r3, [sp, #32]
   31f50:	beq	32010 <crc32@@Base+0x188c8>
   31f54:	cmp	r3, #0
   31f58:	ble	31fe0 <crc32@@Base+0x18898>
   31f5c:	ldr	r3, [sp, #48]	; 0x30
   31f60:	mov	r9, #0
   31f64:	str	r4, [sp, #12]
   31f68:	sub	fp, r3, #4
   31f6c:	mov	r4, fp
   31f70:	ldr	fp, [sp, #32]
   31f74:	b	31f84 <crc32@@Base+0x1883c>
   31f78:	add	r9, r9, #1
   31f7c:	cmp	fp, r9
   31f80:	ble	31fdc <crc32@@Base+0x18894>
   31f84:	mov	r1, r8
   31f88:	ldr	r0, [r4, #4]!
   31f8c:	bl	1265c <strcmp@plt>
   31f90:	cmp	r0, #0
   31f94:	bne	31f78 <crc32@@Base+0x18830>
   31f98:	mov	r2, #2
   31f9c:	ldr	r4, [sp, #12]
   31fa0:	ldr	r3, [sp, #60]	; 0x3c
   31fa4:	mov	fp, #1
   31fa8:	str	r2, [sp, #4]
   31fac:	str	r2, [sp, #12]
   31fb0:	b	31c78 <crc32@@Base+0x18530>
   31fb4:	ldr	r2, [sp, #12]
   31fb8:	clz	r9, r2
   31fbc:	lsr	r9, r9, #5
   31fc0:	b	31e04 <crc32@@Base+0x186bc>
   31fc4:	sub	r4, r4, #1
   31fc8:	ldr	r6, [r0, r4, lsl #3]
   31fcc:	sub	r6, r6, r1
   31fd0:	b	31cd8 <crc32@@Base+0x18590>
   31fd4:	str	r2, [sp, #16]
   31fd8:	b	31e9c <crc32@@Base+0x18754>
   31fdc:	ldr	r4, [sp, #12]
   31fe0:	ldr	r3, [sp, #4]
   31fe4:	cmp	r3, #0
   31fe8:	bne	3201c <crc32@@Base+0x188d4>
   31fec:	mov	sl, r5
   31ff0:	mov	r9, #1
   31ff4:	ldr	r3, [sp, #60]	; 0x3c
   31ff8:	b	31e04 <crc32@@Base+0x186bc>
   31ffc:	ldr	fp, [sp, #40]	; 0x28
   32000:	mov	sl, r5
   32004:	ldr	r4, [sp, #36]	; 0x24
   32008:	ldr	r3, [sp, #60]	; 0x3c
   3200c:	b	31c78 <crc32@@Base+0x18530>
   32010:	cmp	r3, #0
   32014:	mov	sl, r5
   32018:	bgt	31f5c <crc32@@Base+0x18814>
   3201c:	ldr	r3, [sp, #4]
   32020:	subs	r3, r3, #1
   32024:	str	r3, [sp, #4]
   32028:	mov	r2, r3
   3202c:	movne	fp, #1
   32030:	ldr	r3, [sp, #60]	; 0x3c
   32034:	moveq	fp, #0
   32038:	str	r2, [sp, #12]
   3203c:	b	31c78 <crc32@@Base+0x18530>
   32040:	ldr	r2, [sp, #260]	; 0x104
   32044:	sub	r3, r3, r6
   32048:	ldr	r0, [sp, #28]
   3204c:	cmp	r2, #0
   32050:	ldr	r2, [sp, #24]
   32054:	add	r1, r0, r4, lsl #3
   32058:	add	r2, r6, r2
   3205c:	str	r2, [r0, r4, lsl #3]
   32060:	str	r3, [r1, #4]
   32064:	beq	31d18 <crc32@@Base+0x185d0>
   32068:	ldr	r0, [lr, #32]
   3206c:	ubfx	lr, r0, #8, #8
   32070:	ubfx	ip, r0, #16, #8
   32074:	lsr	r2, r0, #24
   32078:	orr	r2, r2, r0, lsl #24
   3207c:	orr	r2, r2, lr, lsl #16
   32080:	orr	r2, r2, ip, lsl #8
   32084:	add	r3, r2, r3
   32088:	str	r3, [r1, #4]
   3208c:	b	31d18 <crc32@@Base+0x185d0>
   32090:	mvn	r0, #10
   32094:	b	31d1c <crc32@@Base+0x185d4>
   32098:	mov	sl, r5
   3209c:	ldr	r3, [sp, #60]	; 0x3c
   320a0:	b	31c78 <crc32@@Base+0x18530>
   320a4:	mvn	r0, #2
   320a8:	b	31d1c <crc32@@Base+0x185d4>
   320ac:	mvn	r0, #11
   320b0:	b	31d1c <crc32@@Base+0x185d4>
   320b4:	bl	12494 <__stack_chk_fail@plt>
   320b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   320bc:	sub	sp, sp, #12
   320c0:	mov	fp, r2
   320c4:	mov	r7, r1
   320c8:	movw	r2, #52424	; 0xccc8
   320cc:	mov	r1, #0
   320d0:	movt	r2, #3
   320d4:	mov	r4, r0
   320d8:	mov	sl, r3
   320dc:	ldr	r8, [r0, #8]
   320e0:	ldr	r5, [sp, #48]	; 0x30
   320e4:	bl	30bc4 <crc32@@Base+0x1747c>
   320e8:	subs	r9, r0, #0
   320ec:	blt	322b8 <crc32@@Base+0x18b70>
   320f0:	mov	r1, r9
   320f4:	mov	r0, r4
   320f8:	bl	2dac8 <crc32@@Base+0x14380>
   320fc:	cmn	r0, #1
   32100:	mov	r6, r0
   32104:	beq	32294 <crc32@@Base+0x18b4c>
   32108:	cmp	r0, #0
   3210c:	blt	32228 <crc32@@Base+0x18ae0>
   32110:	str	r7, [r5, #384]	; 0x180
   32114:	mov	r1, r9
   32118:	str	fp, [r5, #388]	; 0x184
   3211c:	mov	r7, #0
   32120:	str	sl, [r5, #396]	; 0x18c
   32124:	mov	r0, r4
   32128:	str	r7, [r5, #400]	; 0x190
   3212c:	sub	r6, r6, #4
   32130:	bl	30c80 <crc32@@Base+0x17538>
   32134:	subs	fp, r0, #0
   32138:	blt	3221c <crc32@@Base+0x18ad4>
   3213c:	lsr	r3, r8, #24
   32140:	ubfx	r2, r8, #8, #8
   32144:	orr	r3, r3, r8, lsl #24
   32148:	ubfx	r8, r8, #16, #8
   3214c:	orr	r3, r3, r2, lsl #16
   32150:	orr	r8, r3, r8, lsl #8
   32154:	add	r3, r8, r9
   32158:	str	r3, [sp, #4]
   3215c:	mov	r2, #0
   32160:	mov	r1, fp
   32164:	mov	r0, r4
   32168:	bl	30cc0 <crc32@@Base+0x17578>
   3216c:	ldr	r2, [r0, #8]
   32170:	mov	r0, r4
   32174:	ubfx	ip, r2, #8, #8
   32178:	ubfx	r1, r2, #16, #8
   3217c:	lsr	r3, r2, #24
   32180:	orr	r3, r3, r2, lsl #24
   32184:	orr	r3, r3, ip, lsl #16
   32188:	orr	r1, r3, r1, lsl #8
   3218c:	bl	30814 <crc32@@Base+0x170cc>
   32190:	mov	r1, r0
   32194:	mov	r0, r4
   32198:	bl	31250 <crc32@@Base+0x17b08>
   3219c:	ldr	r1, [r4, #8]
   321a0:	ldr	ip, [r5, #388]	; 0x184
   321a4:	ubfx	r3, r1, #8, #8
   321a8:	lsr	r2, r1, #24
   321ac:	cmp	ip, #0
   321b0:	orr	r2, r2, r1, lsl #24
   321b4:	ubfx	r1, r1, #16, #8
   321b8:	orr	r2, r2, r3, lsl #16
   321bc:	ldr	r3, [r5, #384]	; 0x180
   321c0:	orr	r2, r2, r1, lsl #8
   321c4:	add	r0, r2, r0
   321c8:	ble	32200 <crc32@@Base+0x18ab8>
   321cc:	add	r3, r3, #8
   321d0:	mov	r1, #0
   321d4:	ldr	r2, [r3, #-8]
   321d8:	add	r1, r1, #1
   321dc:	cmp	r0, r2
   321e0:	blt	321f4 <crc32@@Base+0x18aac>
   321e4:	ldr	lr, [r3, #-4]
   321e8:	add	r2, r2, lr
   321ec:	cmp	r0, r2
   321f0:	blt	32234 <crc32@@Base+0x18aec>
   321f4:	cmp	ip, r1
   321f8:	add	r3, r3, #8
   321fc:	bne	321d4 <crc32@@Base+0x18a8c>
   32200:	mov	r1, fp
   32204:	mov	r0, r4
   32208:	bl	30ca0 <crc32@@Base+0x17558>
   3220c:	subs	fp, r0, #0
   32210:	bge	3215c <crc32@@Base+0x18a14>
   32214:	cmp	r7, #0
   32218:	bne	32280 <crc32@@Base+0x18b38>
   3221c:	ldr	r6, [r5, #388]	; 0x184
   32220:	cmp	r6, sl
   32224:	mvnge	r6, #2
   32228:	mov	r0, r6
   3222c:	add	sp, sp, #12
   32230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32234:	mov	r1, fp
   32238:	mov	r0, r4
   3223c:	bl	30ca0 <crc32@@Base+0x17558>
   32240:	cmp	r0, #0
   32244:	movge	r9, r0
   32248:	movlt	r9, r6
   3224c:	cmp	r7, #0
   32250:	beq	3226c <crc32@@Base+0x18b24>
   32254:	sub	r2, r9, fp
   32258:	add	r1, r8, fp
   3225c:	mov	r0, r5
   32260:	mov	r7, #1
   32264:	bl	31acc <crc32@@Base+0x18384>
   32268:	b	32200 <crc32@@Base+0x18ab8>
   3226c:	mov	r2, #12
   32270:	ldr	r1, [sp, #4]
   32274:	mov	r0, r5
   32278:	bl	31acc <crc32@@Base+0x18384>
   3227c:	b	32254 <crc32@@Base+0x18b0c>
   32280:	add	r1, r8, r6
   32284:	mov	r2, #4
   32288:	mov	r0, r5
   3228c:	bl	31acc <crc32@@Base+0x18384>
   32290:	b	3221c <crc32@@Base+0x18ad4>
   32294:	ldr	r3, [r4, #36]	; 0x24
   32298:	ubfx	r1, r3, #8, #8
   3229c:	ubfx	r2, r3, #16, #8
   322a0:	lsr	r6, r3, #24
   322a4:	orr	r6, r6, r3, lsl #24
   322a8:	orr	r6, r6, r1, lsl #16
   322ac:	orr	r6, r6, r2, lsl #8
   322b0:	sub	r6, r6, #8
   322b4:	b	32110 <crc32@@Base+0x189c8>
   322b8:	mvn	r6, #0
   322bc:	b	32228 <crc32@@Base+0x18ae0>
   322c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   322c4:	sub	sp, sp, #84	; 0x54
   322c8:	mov	r7, r0
   322cc:	movw	ip, #61168	; 0xeef0
   322d0:	ldr	r4, [sp, #132]	; 0x84
   322d4:	movt	ip, #4
   322d8:	ldr	r0, [r0, #8]
   322dc:	mov	lr, ip
   322e0:	str	r1, [sp, #12]
   322e4:	ldr	r1, [r4, #412]	; 0x19c
   322e8:	ubfx	r5, r0, #8, #8
   322ec:	str	ip, [sp, #32]
   322f0:	lsr	ip, r0, #24
   322f4:	ldr	lr, [lr]
   322f8:	orr	ip, ip, r0, lsl #24
   322fc:	cmp	r1, #0
   32300:	ubfx	r0, r0, #16, #8
   32304:	orr	ip, ip, r5, lsl #16
   32308:	str	r2, [sp, #16]
   3230c:	str	lr, [sp, #76]	; 0x4c
   32310:	orr	r2, ip, r0, lsl #8
   32314:	str	r3, [r4, #384]	; 0x180
   32318:	str	r2, [sp, #24]
   3231c:	mov	r2, #0
   32320:	ldr	sl, [sp, #120]	; 0x78
   32324:	str	r2, [r4, #388]	; 0x184
   32328:	ble	3288c <crc32@@Base+0x19144>
   3232c:	cmp	r1, #1
   32330:	bgt	32404 <crc32@@Base+0x18cbc>
   32334:	ldr	r3, [sp, #128]	; 0x80
   32338:	add	fp, r4, #408	; 0x198
   3233c:	tst	r3, #8
   32340:	movne	r3, #3
   32344:	moveq	r3, #2
   32348:	str	r3, [sp, #28]
   3234c:	mov	r3, #0
   32350:	str	r3, [sp, #20]
   32354:	mov	lr, fp
   32358:	add	ip, sp, #56	; 0x38
   3235c:	ldm	lr!, {r0, r1, r2, r3}
   32360:	ldr	lr, [lr]
   32364:	stmia	ip!, {r0, r1, r2, r3}
   32368:	add	r2, sp, #72	; 0x48
   3236c:	mov	r0, r7
   32370:	mov	r1, lr
   32374:	mov	r5, lr
   32378:	str	lr, [ip]
   3237c:	bl	2d798 <crc32@@Base+0x14050>
   32380:	ldr	r6, [sp, #72]	; 0x48
   32384:	sub	r0, r0, #1
   32388:	cmp	r0, #8
   3238c:	ldrls	pc, [pc, r0, lsl #2]
   32390:	b	326d4 <crc32@@Base+0x18f8c>
   32394:	andeq	r2, r3, r0, lsl r7
   32398:	andeq	r2, r3, r4, ror #12
   3239c:	andeq	r2, r3, r4, lsl r5
   323a0:			; <UNDEFINED> instruction: 0x000323b8
   323a4:	ldrdeq	r2, [r3], -r4
   323a8:	ldrdeq	r2, [r3], -r4
   323ac:	ldrdeq	r2, [r3], -r4
   323b0:	ldrdeq	r2, [r3], -r4
   323b4:	andeq	r2, r3, ip, lsl r8
   323b8:	ldr	r0, [sp, #64]	; 0x40
   323bc:	mov	r6, r5
   323c0:	cmp	r0, #1
   323c4:	movls	r0, #0
   323c8:	movhi	r0, #1
   323cc:	cmp	r0, #0
   323d0:	beq	326d4 <crc32@@Base+0x18f8c>
   323d4:	ldr	r3, [r4, #404]	; 0x194
   323d8:	cmn	r3, #1
   323dc:	beq	32830 <crc32@@Base+0x190e8>
   323e0:	add	lr, sp, #56	; 0x38
   323e4:	mov	ip, fp
   323e8:	ldm	lr!, {r0, r1, r2, r3}
   323ec:	stmia	ip!, {r0, r1, r2, r3}
   323f0:	ldr	r1, [r4, #412]	; 0x19c
   323f4:	ldr	r3, [lr]
   323f8:	cmp	r1, #1
   323fc:	str	r3, [ip]
   32400:	ble	32354 <crc32@@Base+0x18c0c>
   32404:	cmp	r1, #2
   32408:	bne	32460 <crc32@@Base+0x18d18>
   3240c:	ldr	r1, [r7, #36]	; 0x24
   32410:	ldr	r2, [r4, #424]	; 0x1a8
   32414:	ubfx	ip, r1, #8, #8
   32418:	ubfx	r0, r1, #16, #8
   3241c:	lsr	r3, r1, #24
   32420:	orr	r3, r3, r1, lsl #24
   32424:	orr	r3, r3, ip, lsl #16
   32428:	orr	r3, r3, r0, lsl #8
   3242c:	cmp	r2, r3
   32430:	bne	328dc <crc32@@Base+0x19194>
   32434:	ldr	r1, [r4, #404]	; 0x194
   32438:	mov	r0, r4
   3243c:	ldr	r3, [sp, #24]
   32440:	sub	r2, r2, r1
   32444:	add	r1, r1, r3
   32448:	bl	31acc <crc32@@Base+0x18384>
   3244c:	cmp	r0, #0
   32450:	bne	32884 <crc32@@Base+0x1913c>
   32454:	ldr	r1, [r4, #412]	; 0x19c
   32458:	add	r1, r1, #1
   3245c:	str	r1, [r4, #412]	; 0x19c
   32460:	cmp	r1, #3
   32464:	bgt	324e4 <crc32@@Base+0x18d9c>
   32468:	ldr	r3, [sp, #128]	; 0x80
   3246c:	tst	r3, #1
   32470:	beq	324dc <crc32@@Base+0x18d94>
   32474:	ldr	r3, [r7, #12]
   32478:	mov	r2, #0
   3247c:	str	r2, [r4, #400]	; 0x190
   32480:	ubfx	r0, r3, #8, #8
   32484:	ubfx	r2, r3, #16, #8
   32488:	lsr	r1, r3, #24
   3248c:	orr	r1, r1, r3, lsl #24
   32490:	ldr	r3, [r4, #424]	; 0x1a8
   32494:	orr	r1, r1, r0, lsl #16
   32498:	orr	r1, r1, r2, lsl #8
   3249c:	ldr	r2, [sp, #24]
   324a0:	add	r3, r2, r3
   324a4:	cmp	r3, r1
   324a8:	bhi	328ec <crc32@@Base+0x191a4>
   324ac:	ldr	ip, [r7, #32]
   324b0:	mov	r0, r4
   324b4:	ubfx	lr, ip, #8, #8
   324b8:	ubfx	r2, ip, #16, #8
   324bc:	lsr	r3, ip, #24
   324c0:	orr	r3, r3, ip, lsl #24
   324c4:	orr	r3, r3, lr, lsl #16
   324c8:	orr	r2, r3, r2, lsl #8
   324cc:	bl	31acc <crc32@@Base+0x18384>
   324d0:	cmp	r0, #0
   324d4:	bne	32884 <crc32@@Base+0x1913c>
   324d8:	ldr	r1, [r4, #412]	; 0x19c
   324dc:	add	r1, r1, #1
   324e0:	str	r1, [r4, #412]	; 0x19c
   324e4:	ldr	r9, [r4, #388]	; 0x184
   324e8:	cmp	r9, #0
   324ec:	movgt	r9, #0
   324f0:	mvnle	r9, #0
   324f4:	ldr	r3, [sp, #32]
   324f8:	mov	r0, r9
   324fc:	ldr	r2, [sp, #76]	; 0x4c
   32500:	ldr	r3, [r3]
   32504:	cmp	r2, r3
   32508:	bne	328f4 <crc32@@Base+0x191ac>
   3250c:	add	sp, sp, #84	; 0x54
   32510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32514:	mov	r2, #0
   32518:	mov	r1, r5
   3251c:	mov	r0, r7
   32520:	bl	30cc0 <crc32@@Base+0x17578>
   32524:	ldr	r2, [r0, #8]
   32528:	mov	r0, r7
   3252c:	ubfx	ip, r2, #8, #8
   32530:	ubfx	r1, r2, #16, #8
   32534:	lsr	r3, r2, #24
   32538:	orr	r3, r3, r2, lsl #24
   3253c:	orr	r3, r3, ip, lsl #16
   32540:	orr	r1, r3, r1, lsl #8
   32544:	bl	30814 <crc32@@Base+0x170cc>
   32548:	mov	r6, r0
   3254c:	bl	125c0 <strlen@plt>
   32550:	str	r6, [sp]
   32554:	mov	r3, #2
   32558:	ldr	r2, [sp, #20]
   3255c:	mov	r1, r7
   32560:	ldr	ip, [sp, #12]
   32564:	add	r0, r0, #1
   32568:	str	r0, [sp, #4]
   3256c:	ldr	r0, [sp, #16]
   32570:	blx	ip
   32574:	cmn	r0, #1
   32578:	beq	323b8 <crc32@@Base+0x18c70>
   3257c:	ldr	r3, [sp, #128]	; 0x80
   32580:	tst	r3, #2
   32584:	beq	32864 <crc32@@Base+0x1911c>
   32588:	cmp	r0, #0
   3258c:	beq	3287c <crc32@@Base+0x19134>
   32590:	ldr	r3, [sp, #64]	; 0x40
   32594:	cmp	r3, #0
   32598:	moveq	r3, #1
   3259c:	streq	r3, [sp, #64]	; 0x40
   325a0:	ldr	r3, [r4, #404]	; 0x194
   325a4:	cmn	r3, #1
   325a8:	bne	323e0 <crc32@@Base+0x18c98>
   325ac:	ldr	r2, [r4, #392]	; 0x188
   325b0:	ldr	r3, [sp, #56]	; 0x38
   325b4:	ldr	r1, [r2, #8]
   325b8:	cmp	r3, #0
   325bc:	ubfx	ip, r1, #8, #8
   325c0:	ubfx	r0, r1, #16, #8
   325c4:	lsr	r2, r1, #24
   325c8:	orr	r2, r2, r1, lsl #24
   325cc:	orr	r2, r2, ip, lsl #16
   325d0:	orr	r2, r2, r0, lsl #8
   325d4:	blt	3283c <crc32@@Base+0x190f4>
   325d8:	str	r7, [sp, #40]	; 0x28
   325dc:	mov	r6, r4
   325e0:	str	sl, [sp, #44]	; 0x2c
   325e4:	mov	r8, #0
   325e8:	str	r5, [sp, #36]	; 0x24
   325ec:	mov	r7, r3
   325f0:	mov	sl, r2
   325f4:	b	32618 <crc32@@Base+0x18ed0>
   325f8:	ldr	r2, [r6, #4]
   325fc:	add	r8, r8, #1
   32600:	add	r6, r6, #12
   32604:	cmp	r2, #0
   32608:	moveq	r3, #1
   3260c:	streq	r3, [r6, #-8]
   32610:	cmp	r7, r8
   32614:	blt	3286c <crc32@@Base+0x19124>
   32618:	ldr	r9, [r6, #8]
   3261c:	cmp	r9, #0
   32620:	bne	325f8 <crc32@@Base+0x18eb0>
   32624:	ldr	r5, [r6]
   32628:	add	r2, sp, #52	; 0x34
   3262c:	ldr	r0, [r4, #392]	; 0x188
   32630:	mov	r1, r5
   32634:	bl	2d798 <crc32@@Base+0x14050>
   32638:	ldr	r2, [sp, #52]	; 0x34
   3263c:	add	r1, sl, r5
   32640:	mov	r0, r4
   32644:	sub	r2, r2, r5
   32648:	bl	31acc <crc32@@Base+0x18384>
   3264c:	cmp	r0, #0
   32650:	bne	324f4 <crc32@@Base+0x18dac>
   32654:	mov	r3, #1
   32658:	str	r3, [r6, #8]
   3265c:	str	r3, [r4, #400]	; 0x190
   32660:	b	325f8 <crc32@@Base+0x18eb0>
   32664:	ldr	r2, [sp, #56]	; 0x38
   32668:	ldr	r0, [sp, #64]	; 0x40
   3266c:	cmp	r2, #0
   32670:	blt	328dc <crc32@@Base+0x19194>
   32674:	cmp	r0, #0
   32678:	bne	32688 <crc32@@Base+0x18f40>
   3267c:	ldr	r3, [sp, #128]	; 0x80
   32680:	tst	r3, #4
   32684:	moveq	r6, r5
   32688:	mov	r1, #12
   3268c:	ldr	r3, [sp, #68]	; 0x44
   32690:	mla	r1, r1, r2, r4
   32694:	sub	r2, r2, #1
   32698:	str	r2, [sp, #56]	; 0x38
   3269c:	ldr	r2, [r1, #4]
   326a0:	str	r2, [sp, #64]	; 0x40
   326a4:	b	326bc <crc32@@Base+0x18f74>
   326a8:	sub	r3, r3, #1
   326ac:	str	r3, [sp, #68]	; 0x44
   326b0:	ldrb	r2, [r3]
   326b4:	cmp	r2, #47	; 0x2f
   326b8:	beq	326c4 <crc32@@Base+0x18f7c>
   326bc:	cmp	sl, r3
   326c0:	bcc	326a8 <crc32@@Base+0x18f60>
   326c4:	cmp	r0, #0
   326c8:	mov	r2, #0
   326cc:	strb	r2, [r3]
   326d0:	bne	323d4 <crc32@@Base+0x18c8c>
   326d4:	ldr	r1, [r4, #404]	; 0x194
   326d8:	cmn	r1, #1
   326dc:	beq	323e0 <crc32@@Base+0x18c98>
   326e0:	ldr	r3, [sp, #24]
   326e4:	sub	r2, r6, r1
   326e8:	mov	r0, r4
   326ec:	add	r1, r1, r3
   326f0:	bl	31acc <crc32@@Base+0x18384>
   326f4:	cmp	r0, #0
   326f8:	bne	32884 <crc32@@Base+0x1913c>
   326fc:	mvn	r3, #0
   32700:	str	r3, [r4, #404]	; 0x194
   32704:	mov	r3, #1
   32708:	str	r3, [r4, #400]	; 0x190
   3270c:	b	323e0 <crc32@@Base+0x18c98>
   32710:	ldr	r3, [sp, #56]	; 0x38
   32714:	add	r3, r3, #1
   32718:	str	r3, [sp, #56]	; 0x38
   3271c:	cmp	r3, #32
   32720:	beq	328dc <crc32@@Base+0x19194>
   32724:	add	r2, sp, #48	; 0x30
   32728:	mov	r1, r5
   3272c:	mov	r0, r7
   32730:	bl	30bf4 <crc32@@Base+0x174ac>
   32734:	ldr	r2, [sp, #68]	; 0x44
   32738:	ldr	r1, [sp, #48]	; 0x30
   3273c:	sub	r3, r2, sl
   32740:	add	r3, r3, #2
   32744:	add	r3, r3, r1
   32748:	ldr	r1, [sp, #124]	; 0x7c
   3274c:	cmp	r3, r1
   32750:	bge	328e4 <crc32@@Base+0x1919c>
   32754:	add	r3, sl, #1
   32758:	mov	r1, r0
   3275c:	cmp	r2, r3
   32760:	addne	r3, r2, #1
   32764:	strne	r3, [sp, #68]	; 0x44
   32768:	movne	r3, #47	; 0x2f
   3276c:	strbne	r3, [r2]
   32770:	ldrne	r3, [sp, #68]	; 0x44
   32774:	mov	r0, r3
   32778:	bl	123e0 <strcpy@plt>
   3277c:	ldr	r0, [sp, #56]	; 0x38
   32780:	mov	r2, #12
   32784:	ldr	r1, [sp, #64]	; 0x40
   32788:	ldr	r3, [sp, #68]	; 0x44
   3278c:	mul	r2, r2, r0
   32790:	ldr	ip, [sp, #48]	; 0x30
   32794:	cmp	r1, #1
   32798:	add	r3, r3, ip
   3279c:	str	r3, [sp, #68]	; 0x44
   327a0:	add	r0, r4, r2
   327a4:	str	r1, [r0, #4]
   327a8:	str	r5, [r4, r2]
   327ac:	beq	327bc <crc32@@Base+0x19074>
   327b0:	ldr	r2, [sp, #128]	; 0x80
   327b4:	tst	r2, #12
   327b8:	bne	327c8 <crc32@@Base+0x19080>
   327bc:	mov	r6, r5
   327c0:	mov	r2, #0
   327c4:	str	r2, [sp, #64]	; 0x40
   327c8:	sub	r3, r3, sl
   327cc:	str	sl, [sp]
   327d0:	add	r2, r3, #1
   327d4:	mov	r1, r7
   327d8:	str	r2, [sp, #4]
   327dc:	mov	r3, #1
   327e0:	mov	r2, r5
   327e4:	ldr	r0, [sp, #16]
   327e8:	ldr	ip, [sp, #12]
   327ec:	blx	ip
   327f0:	cmp	r0, #0
   327f4:	beq	32844 <crc32@@Base+0x190fc>
   327f8:	ldr	r3, [sp, #28]
   327fc:	mov	r0, r3
   32800:	str	r3, [sp, #64]	; 0x40
   32804:	ldr	r3, [sp, #56]	; 0x38
   32808:	mov	r2, #12
   3280c:	str	r5, [sp, #20]
   32810:	mla	r3, r2, r3, r4
   32814:	str	r0, [r3, #8]
   32818:	b	323cc <crc32@@Base+0x18c84>
   3281c:	mov	r3, #2
   32820:	str	r3, [sp, #60]	; 0x3c
   32824:	ldr	r3, [r4, #404]	; 0x194
   32828:	cmn	r3, #1
   3282c:	bne	323e0 <crc32@@Base+0x18c98>
   32830:	ldr	r3, [sp, #128]	; 0x80
   32834:	tst	r3, #2
   32838:	bne	325ac <crc32@@Base+0x18e64>
   3283c:	str	r5, [r4, #404]	; 0x194
   32840:	b	323e0 <crc32@@Base+0x18c98>
   32844:	ldr	r0, [sp, #64]	; 0x40
   32848:	cmp	r0, #0
   3284c:	moveq	r6, r5
   32850:	beq	32804 <crc32@@Base+0x190bc>
   32854:	cmp	r0, #3
   32858:	subne	r0, r0, #1
   3285c:	strne	r0, [sp, #64]	; 0x40
   32860:	b	32804 <crc32@@Base+0x190bc>
   32864:	mov	r6, r5
   32868:	b	323cc <crc32@@Base+0x18c84>
   3286c:	add	r5, sp, #36	; 0x24
   32870:	ldm	r5, {r5, r7, sl}
   32874:	str	r5, [r4, #404]	; 0x194
   32878:	b	323e0 <crc32@@Base+0x18c98>
   3287c:	mov	r6, r5
   32880:	b	326d4 <crc32@@Base+0x18f8c>
   32884:	mov	r9, #0
   32888:	b	324f4 <crc32@@Base+0x18dac>
   3288c:	ldr	r3, [sp, #128]	; 0x80
   32890:	tst	r3, #16
   32894:	beq	32334 <crc32@@Base+0x18bec>
   32898:	ldr	r3, [r7, #16]
   3289c:	mov	r0, r4
   328a0:	ubfx	ip, r3, #8, #8
   328a4:	ubfx	r2, r3, #16, #8
   328a8:	lsr	r1, r3, #24
   328ac:	orr	r1, r1, r3, lsl #24
   328b0:	ldr	r3, [sp, #24]
   328b4:	orr	r1, r1, ip, lsl #16
   328b8:	orr	r1, r1, r2, lsl #8
   328bc:	sub	r2, r3, r1
   328c0:	bl	31acc <crc32@@Base+0x18384>
   328c4:	cmp	r0, #0
   328c8:	bne	32884 <crc32@@Base+0x1913c>
   328cc:	mov	r3, #1
   328d0:	str	r0, [r4, #400]	; 0x190
   328d4:	str	r3, [r4, #412]	; 0x19c
   328d8:	b	32334 <crc32@@Base+0x18bec>
   328dc:	mvn	r9, #10
   328e0:	b	324f4 <crc32@@Base+0x18dac>
   328e4:	mvn	r9, #2
   328e8:	b	324f4 <crc32@@Base+0x18dac>
   328ec:	mvn	r9, #11
   328f0:	b	324f4 <crc32@@Base+0x18dac>
   328f4:	bl	12494 <__stack_chk_fail@plt>
   328f8:	push	{r4, r5, r6, lr}
   328fc:	mov	lr, #0
   32900:	ldr	ip, [sp, #28]
   32904:	mov	r6, #1
   32908:	ldr	r5, [sp, #16]
   3290c:	mvn	r4, #0
   32910:	str	r6, [ip, #400]	; 0x190
   32914:	str	r5, [ip, #420]	; 0x1a4
   32918:	str	r6, [ip, #396]	; 0x18c
   3291c:	str	r4, [ip, #404]	; 0x194
   32920:	str	lr, [ip, #416]	; 0x1a0
   32924:	str	r0, [ip, #392]	; 0x188
   32928:	strb	lr, [r5]
   3292c:	str	lr, [ip, #424]	; 0x1a8
   32930:	str	r4, [ip, #408]	; 0x198
   32934:	str	lr, [ip, #412]	; 0x19c
   32938:	pop	{r4, r5, r6, lr}
   3293c:	b	322c0 <crc32@@Base+0x18b78>
   32940:	subs	r0, r0, #17
   32944:	movne	r0, #1
   32948:	bx	lr
   3294c:	ldr	r1, [r1, #44]	; 0x2c
   32950:	ldr	r2, [r3, #56]	; 0x38
   32954:	mov	r3, #1
   32958:	sub	r1, r1, #8
   3295c:	b	32acc <crc32@@Base+0x19384>
   32960:	mov	r1, #1
   32964:	b	32a04 <crc32@@Base+0x192bc>
   32968:	mov	r1, #1
   3296c:	b	3298c <crc32@@Base+0x19244>
   32970:	ldr	r3, [r0]
   32974:	rev	r3, r3
   32978:	str	r3, [r0]
   3297c:	ldr	r3, [r1]
   32980:	rev	r3, r3
   32984:	str	r3, [r1]
   32988:	bx	lr
   3298c:	movw	r2, #61168	; 0xeef0
   32990:	movt	r2, #4
   32994:	cmp	r1, #0
   32998:	ldr	r3, [r0]
   3299c:	ldr	ip, [r2]
   329a0:	ldr	r1, [r0, #4]
   329a4:	push	{lr}		; (str lr, [sp, #-4]!)
   329a8:	sub	sp, sp, #20
   329ac:	str	ip, [sp, #12]
   329b0:	str	r3, [sp, #4]
   329b4:	str	r1, [sp, #8]
   329b8:	bne	329ec <crc32@@Base+0x192a4>
   329bc:	cmp	r3, #0
   329c0:	ldr	r1, [sp, #12]
   329c4:	ldr	r3, [r2]
   329c8:	ldrne	r0, [sp, #8]
   329cc:	mvneq	r0, #0
   329d0:	clzne	r0, r0
   329d4:	lsrne	r0, r0, #5
   329d8:	rsbne	r0, r0, #0
   329dc:	cmp	r1, r3
   329e0:	bne	32a00 <crc32@@Base+0x192b8>
   329e4:	add	sp, sp, #20
   329e8:	pop	{pc}		; (ldr pc, [sp], #4)
   329ec:	add	r1, sp, #8
   329f0:	add	r0, sp, #4
   329f4:	bl	32970 <crc32@@Base+0x19228>
   329f8:	ldr	r3, [sp, #4]
   329fc:	b	329bc <crc32@@Base+0x19274>
   32a00:	bl	12494 <__stack_chk_fail@plt>
   32a04:	push	{r4, lr}
   32a08:	movw	r4, #61168	; 0xeef0
   32a0c:	movt	r4, #4
   32a10:	cmp	r1, #0
   32a14:	ldrd	r2, [r0]
   32a18:	sub	sp, sp, #16
   32a1c:	ldr	r1, [r4]
   32a20:	strd	r2, [sp, #4]
   32a24:	str	r1, [sp, #12]
   32a28:	bne	32a68 <crc32@@Base+0x19320>
   32a2c:	cmp	r2, #0
   32a30:	beq	32aa4 <crc32@@Base+0x1935c>
   32a34:	ldr	r3, [sp, #8]
   32a38:	cmp	r3, #0
   32a3c:	beq	32a80 <crc32@@Base+0x19338>
   32a40:	movw	r1, #52536	; 0xcd38
   32a44:	mov	r0, #1
   32a48:	movt	r1, #3
   32a4c:	bl	12770 <__printf_chk@plt>
   32a50:	ldr	r2, [sp, #12]
   32a54:	ldr	r3, [r4]
   32a58:	cmp	r2, r3
   32a5c:	bne	32a7c <crc32@@Base+0x19334>
   32a60:	add	sp, sp, #16
   32a64:	pop	{r4, pc}
   32a68:	add	r1, sp, #8
   32a6c:	add	r0, sp, #4
   32a70:	bl	32970 <crc32@@Base+0x19228>
   32a74:	ldr	r2, [sp, #4]
   32a78:	b	32a2c <crc32@@Base+0x192e4>
   32a7c:	bl	12494 <__stack_chk_fail@plt>
   32a80:	movw	r1, #65044	; 0xfe14
   32a84:	movt	r1, #4
   32a88:	movw	r2, #52496	; 0xcd10
   32a8c:	movt	r2, #3
   32a90:	ldr	r0, [r1]
   32a94:	mov	r1, #1
   32a98:	bl	122b4 <__fprintf_chk@plt>
   32a9c:	mov	r0, #1
   32aa0:	bl	121f4 <exit@plt>
   32aa4:	movw	r1, #65044	; 0xfe14
   32aa8:	movt	r1, #4
   32aac:	mov	r3, r2
   32ab0:	movw	r2, #52464	; 0xccf0
   32ab4:	ldr	r0, [r1]
   32ab8:	movt	r2, #3
   32abc:	mov	r1, #1
   32ac0:	bl	122b4 <__fprintf_chk@plt>
   32ac4:	mov	r0, #1
   32ac8:	bl	121f4 <exit@plt>
   32acc:	cmp	r3, #0
   32ad0:	stm	r0, {r1, r2}
   32ad4:	bxeq	lr
   32ad8:	add	r1, r0, #4
   32adc:	b	32970 <crc32@@Base+0x19228>
   32ae0:	ldr	r2, [r0]
   32ae4:	ldr	r3, [r0, #8]
   32ae8:	cmp	r2, #0
   32aec:	beq	32b10 <crc32@@Base+0x193c8>
   32af0:	cmp	r3, #0
   32af4:	movne	r3, #1
   32af8:	bne	32b08 <crc32@@Base+0x193c0>
   32afc:	ldr	r3, [r0, #16]
   32b00:	adds	r3, r3, #0
   32b04:	movne	r3, #1
   32b08:	mov	r0, r3
   32b0c:	bx	lr
   32b10:	cmp	r3, #0
   32b14:	ldr	r2, [r0, #16]
   32b18:	beq	32b08 <crc32@@Base+0x193c0>
   32b1c:	adds	r3, r2, #0
   32b20:	movne	r3, #1
   32b24:	mov	r0, r3
   32b28:	bx	lr
   32b2c:	subs	r0, r0, #36	; 0x24
   32b30:	movne	r0, #1
   32b34:	bx	lr
   32b38:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b3c:	mov	r8, #768	; 0x300
   32b40:	mov	sl, r1
   32b44:	mov	r9, r2
   32b48:	mov	r1, #0
   32b4c:	mov	r2, r8
   32b50:	mov	r4, r0
   32b54:	mov	fp, r3
   32b58:	bl	122e4 <memset@plt>
   32b5c:	movw	r2, #53704	; 0xd1c8
   32b60:	movt	r2, #3
   32b64:	mov	r5, #1
   32b68:	mov	r0, #56	; 0x38
   32b6c:	mov	r1, #0
   32b70:	ldrh	r7, [r2]
   32b74:	sub	r9, sl, r9
   32b78:	ldrb	r6, [r2, #2]
   32b7c:	mov	r2, #12
   32b80:	strh	r0, [r4, #4]
   32b84:	add	r0, r4, #8
   32b88:	strh	r1, [r4, #6]
   32b8c:	movw	r1, #53708	; 0xd1cc
   32b90:	strh	r7, [r4]
   32b94:	movt	r1, #3
   32b98:	strb	r6, [r4, #2]
   32b9c:	strb	r5, [r4, #3]
   32ba0:	bl	126bc <strncpy@plt>
   32ba4:	sub	r3, fp, #768	; 0x300
   32ba8:	str	r3, [r4, #28]
   32bac:	add	r1, r4, #700	; 0x2bc
   32bb0:	ldr	r3, [sp, #40]	; 0x28
   32bb4:	add	r2, r4, #720	; 0x2d0
   32bb8:	str	r9, [r4, #32]
   32bbc:	mov	lr, #32
   32bc0:	str	sl, [r4, #36]	; 0x24
   32bc4:	mov	ip, #12
   32bc8:	strb	r3, [r4, #26]
   32bcc:	mov	r0, #100	; 0x64
   32bd0:	str	r8, [r4, #40]	; 0x28
   32bd4:	mov	r3, #3
   32bd8:	str	r8, [r4, #48]	; 0x30
   32bdc:	mov	r9, #7
   32be0:	str	lr, [r4, #44]	; 0x2c
   32be4:	mov	fp, #400	; 0x190
   32be8:	strh	ip, [r4, #60]	; 0x3c
   32bec:	movw	sl, #5000	; 0x1388
   32bf0:	strh	r0, [r4, #72]	; 0x48
   32bf4:	mov	r8, #532	; 0x214
   32bf8:	strh	r9, [r4, #74]	; 0x4a
   32bfc:	mov	ip, #20
   32c00:	str	fp, [r4, #76]	; 0x4c
   32c04:	mov	lr, #2
   32c08:	str	sl, [r4, #156]	; 0x9c
   32c0c:	mov	r9, #16
   32c10:	strh	r7, [r4, #56]	; 0x38
   32c14:	mov	fp, #128	; 0x80
   32c18:	strb	r6, [r4, #58]	; 0x3a
   32c1c:	mov	sl, #48	; 0x30
   32c20:	strh	r7, [r4, #68]	; 0x44
   32c24:	mov	r0, #8
   32c28:	strb	r6, [r4, #70]	; 0x46
   32c2c:	strh	r7, [r4, #168]	; 0xa8
   32c30:	strb	r6, [r4, #170]	; 0xaa
   32c34:	str	r5, [r4, #20]
   32c38:	strh	r5, [r4, #24]
   32c3c:	strb	r5, [r4, #27]
   32c40:	str	r5, [r4, #52]	; 0x34
   32c44:	strb	r5, [r4, #59]	; 0x3b
   32c48:	strh	r5, [r4, #62]	; 0x3e
   32c4c:	str	r5, [r4, #64]	; 0x40
   32c50:	strb	r5, [r4, #171]	; 0xab
   32c54:	strh	r8, [r4, #172]	; 0xac
   32c58:	strb	r3, [r4, #71]	; 0x47
   32c5c:	strh	r3, [r4, #174]	; 0xae
   32c60:	strh	r7, [r1]
   32c64:	strb	r6, [r4, #702]	; 0x2be
   32c68:	strb	r5, [r4, #703]	; 0x2bf
   32c6c:	strh	ip, [r1, #4]
   32c70:	strh	lr, [r1, #6]
   32c74:	str	r9, [r4, #712]	; 0x2c8
   32c78:	str	fp, [r4, #716]	; 0x2cc
   32c7c:	strh	r7, [r2]
   32c80:	strb	r6, [r4, #722]	; 0x2d2
   32c84:	strb	r5, [r4, #723]	; 0x2d3
   32c88:	strh	sl, [r2, #4]
   32c8c:	strh	r0, [r2, #6]
   32c90:	str	r3, [r4, #728]	; 0x2d8
   32c94:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c98:	push	{r4, r5, r6, lr}
   32c9c:	movw	r4, #61168	; 0xeef0
   32ca0:	movt	r4, #4
   32ca4:	sub	sp, sp, #112	; 0x70
   32ca8:	mov	r5, r1
   32cac:	mov	r6, r0
   32cb0:	ldr	r3, [r4]
   32cb4:	add	r0, sp, #4
   32cb8:	str	r3, [sp, #108]	; 0x6c
   32cbc:	bl	2a2ec <crc32@@Base+0x10ba4>
   32cc0:	mov	r2, r5
   32cc4:	mov	r1, r6
   32cc8:	add	r0, sp, #4
   32ccc:	bl	2a34c <crc32@@Base+0x10c04>
   32cd0:	add	r1, r6, r5
   32cd4:	add	r0, sp, #4
   32cd8:	bl	2a358 <crc32@@Base+0x10c10>
   32cdc:	ldr	r2, [sp, #108]	; 0x6c
   32ce0:	ldr	r3, [r4]
   32ce4:	cmp	r2, r3
   32ce8:	bne	32cf4 <crc32@@Base+0x195ac>
   32cec:	add	sp, sp, #112	; 0x70
   32cf0:	pop	{r4, r5, r6, pc}
   32cf4:	bl	12494 <__stack_chk_fail@plt>
   32cf8:	push	{r4, r5, r6, lr}
   32cfc:	mov	r5, r1
   32d00:	movw	r1, #53740	; 0xd1ec
   32d04:	movt	r1, #3
   32d08:	mov	r4, r0
   32d0c:	bl	1265c <strcmp@plt>
   32d10:	cmp	r0, #0
   32d14:	beq	32d54 <crc32@@Base+0x1960c>
   32d18:	movw	r1, #53748	; 0xd1f4
   32d1c:	mov	r0, r4
   32d20:	movt	r1, #3
   32d24:	bl	1265c <strcmp@plt>
   32d28:	cmp	r0, #0
   32d2c:	bne	32e24 <crc32@@Base+0x196dc>
   32d30:	cmp	r5, #0
   32d34:	movw	r2, #53732	; 0xd1e4
   32d38:	movt	r2, #3
   32d3c:	beq	32d64 <crc32@@Base+0x1961c>
   32d40:	movw	r1, #53772	; 0xd20c
   32d44:	mov	r0, #1
   32d48:	movt	r1, #3
   32d4c:	bl	12770 <__printf_chk@plt>
   32d50:	b	32d64 <crc32@@Base+0x1961c>
   32d54:	movw	r2, #53720	; 0xd1d8
   32d58:	movt	r2, #3
   32d5c:	cmp	r5, #0
   32d60:	bne	32d40 <crc32@@Base+0x195f8>
   32d64:	ldr	r6, [r4, #12]
   32d68:	cmp	r6, #1
   32d6c:	bne	32e44 <crc32@@Base+0x196fc>
   32d70:	ldr	r3, [r4, #16]
   32d74:	cmp	r3, #512	; 0x200
   32d78:	bne	32e44 <crc32@@Base+0x196fc>
   32d7c:	movw	r1, #53792	; 0xd220
   32d80:	add	r0, r4, #512	; 0x200
   32d84:	movt	r1, #3
   32d88:	bl	1265c <strcmp@plt>
   32d8c:	cmp	r0, #0
   32d90:	bne	32e44 <crc32@@Base+0x196fc>
   32d94:	ldr	r2, [r4, #532]	; 0x214
   32d98:	movw	r3, #16962	; 0x4242
   32d9c:	movt	r3, #16962	; 0x4242
   32da0:	cmp	r2, r3
   32da4:	bne	32e44 <crc32@@Base+0x196fc>
   32da8:	ldr	r1, [r4, #536]	; 0x218
   32dac:	mov	r2, #5
   32db0:	movt	r2, #1
   32db4:	sub	r3, r1, #65536	; 0x10000
   32db8:	sub	r3, r3, #7
   32dbc:	cmp	r1, r2
   32dc0:	cmpne	r3, #1
   32dc4:	bhi	32e44 <crc32@@Base+0x196fc>
   32dc8:	ldr	r3, [r4, #524]	; 0x20c
   32dcc:	movw	r1, #53708	; 0xd1cc
   32dd0:	movt	r1, #3
   32dd4:	add	r4, r4, r3
   32dd8:	add	r0, r4, #8
   32ddc:	bl	1265c <strcmp@plt>
   32de0:	subs	ip, r0, #0
   32de4:	bne	32e44 <crc32@@Base+0x196fc>
   32de8:	ldrb	r3, [r4, #26]
   32dec:	cmp	r3, #5
   32df0:	bne	32e44 <crc32@@Base+0x196fc>
   32df4:	cmp	r5, #0
   32df8:	beq	32e1c <crc32@@Base+0x196d4>
   32dfc:	ldr	r2, [r4, #28]
   32e00:	movw	r1, #37140	; 0x9114
   32e04:	ldr	r3, [r4, #48]	; 0x30
   32e08:	mov	r0, r6
   32e0c:	movt	r1, #3
   32e10:	mov	r5, ip
   32e14:	add	r2, r2, r3
   32e18:	bl	12770 <__printf_chk@plt>
   32e1c:	mov	r0, r5
   32e20:	pop	{r4, r5, r6, pc}
   32e24:	movw	r1, #53760	; 0xd200
   32e28:	mov	r0, r4
   32e2c:	movt	r1, #3
   32e30:	bl	1265c <strcmp@plt>
   32e34:	cmp	r0, #0
   32e38:	movweq	r2, #47648	; 0xba20
   32e3c:	movteq	r2, #3
   32e40:	beq	32d5c <crc32@@Base+0x19614>
   32e44:	mvn	r5, #0
   32e48:	mov	r0, r5
   32e4c:	pop	{r4, r5, r6, pc}
   32e50:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32e54:	mov	r2, #4
   32e58:	mov	r5, r1
   32e5c:	mov	r4, r0
   32e60:	movw	r1, #53828	; 0xd244
   32e64:	add	r0, r0, #12
   32e68:	movt	r1, #3
   32e6c:	bl	1217c <strncmp@plt>
   32e70:	cmp	r0, #0
   32e74:	bne	32fc8 <crc32@@Base+0x19880>
   32e78:	movw	r1, #53836	; 0xd24c
   32e7c:	add	r0, r4, #16
   32e80:	movt	r1, #3
   32e84:	bl	1265c <strcmp@plt>
   32e88:	cmp	r0, #0
   32e8c:	bne	32fc8 <crc32@@Base+0x19880>
   32e90:	ldrh	r7, [r4, #26]
   32e94:	movw	r1, #53792	; 0xd220
   32e98:	movt	r1, #3
   32e9c:	add	r6, r4, r7
   32ea0:	mov	r0, r6
   32ea4:	bl	1265c <strcmp@plt>
   32ea8:	cmp	r0, #0
   32eac:	bne	32fc8 <crc32@@Base+0x19880>
   32eb0:	ldr	r2, [r6, #20]
   32eb4:	movw	r3, #16962	; 0x4242
   32eb8:	movt	r3, #16962	; 0x4242
   32ebc:	cmp	r2, r3
   32ec0:	bne	32fc8 <crc32@@Base+0x19880>
   32ec4:	ldr	r2, [r6, #24]
   32ec8:	mov	r3, #2
   32ecc:	movt	r3, #1
   32ed0:	cmp	r2, r3
   32ed4:	beq	32f50 <crc32@@Base+0x19808>
   32ed8:	mov	r3, #9
   32edc:	movt	r3, #1
   32ee0:	cmp	r2, r3
   32ee4:	bne	32fc8 <crc32@@Base+0x19880>
   32ee8:	cmp	r5, #0
   32eec:	movw	r2, #53816	; 0xd238
   32ef0:	movt	r2, #3
   32ef4:	bne	32f60 <crc32@@Base+0x19818>
   32ef8:	add	r4, r4, r7, lsl #1
   32efc:	movw	r1, #53708	; 0xd1cc
   32f00:	add	r0, r4, #8
   32f04:	movt	r1, #3
   32f08:	bl	1265c <strcmp@plt>
   32f0c:	subs	ip, r0, #0
   32f10:	bne	32fc8 <crc32@@Base+0x19880>
   32f14:	ldrb	r3, [r4, #26]
   32f18:	cmp	r3, #2
   32f1c:	bne	32fc8 <crc32@@Base+0x19880>
   32f20:	cmp	r5, #0
   32f24:	beq	32f48 <crc32@@Base+0x19800>
   32f28:	ldr	r2, [r4, #28]
   32f2c:	movw	r1, #37140	; 0x9114
   32f30:	ldr	r3, [r4, #48]	; 0x30
   32f34:	movt	r1, #3
   32f38:	mov	r0, #1
   32f3c:	mov	r5, ip
   32f40:	add	r2, r2, r3
   32f44:	bl	12770 <__printf_chk@plt>
   32f48:	mov	r0, r5
   32f4c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f50:	cmp	r5, #0
   32f54:	movw	r2, #53800	; 0xd228
   32f58:	movt	r2, #3
   32f5c:	beq	32ef8 <crc32@@Base+0x197b0>
   32f60:	movw	r1, #53844	; 0xd254
   32f64:	mov	r0, #1
   32f68:	movt	r1, #3
   32f6c:	bl	12770 <__printf_chk@plt>
   32f70:	ldr	r2, [r6, #24]
   32f74:	mov	r3, #2
   32f78:	movt	r3, #1
   32f7c:	cmp	r2, r3
   32f80:	beq	32fd4 <crc32@@Base+0x1988c>
   32f84:	ldrh	r2, [r4, #26]
   32f88:	cmp	r2, #1024	; 0x400
   32f8c:	lsrcs	r2, r2, #10
   32f90:	movwcs	r1, #53880	; 0xd278
   32f94:	movwcc	r1, #53900	; 0xd28c
   32f98:	movtcs	r1, #3
   32f9c:	movtcc	r1, #3
   32fa0:	movcs	r0, #1
   32fa4:	movcc	r0, #1
   32fa8:	bl	12770 <__printf_chk@plt>
   32fac:	movw	r1, #53920	; 0xd2a0
   32fb0:	ldrh	r2, [r4, #30]
   32fb4:	movt	r1, #3
   32fb8:	mov	r0, #1
   32fbc:	bl	12770 <__printf_chk@plt>
   32fc0:	ldrh	r7, [r4, #26]
   32fc4:	b	32ef8 <crc32@@Base+0x197b0>
   32fc8:	mvn	r5, #0
   32fcc:	mov	r0, r5
   32fd0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32fd4:	ldrh	r2, [r4, #34]	; 0x22
   32fd8:	movw	r1, #53860	; 0xd264
   32fdc:	ldrh	r3, [r4, #32]
   32fe0:	movt	r1, #3
   32fe4:	ldrh	r8, [r4, #26]
   32fe8:	mov	r0, #1
   32fec:	mov	r9, #0
   32ff0:	umull	sl, fp, r2, r3
   32ff4:	lsl	r6, sl, #3
   32ff8:	lsl	r3, fp, #3
   32ffc:	orr	r3, r3, sl, lsr #29
   33000:	umull	r6, r7, r6, r8
   33004:	mla	r7, r3, r8, r7
   33008:	lsr	r2, r6, #30
   3300c:	orr	r2, r2, r7, lsl #2
   33010:	bl	12770 <__printf_chk@plt>
   33014:	b	32f84 <crc32@@Base+0x1983c>
   33018:	movw	r3, #34376	; 0x8648
   3301c:	movt	r3, #30
   33020:	push	{r4, lr}
   33024:	ldr	r2, [r3]
   33028:	cmp	r2, #0
   3302c:	bne	33084 <crc32@@Base+0x1993c>
   33030:	ldr	r0, [r3, #4]
   33034:	mov	ip, #2
   33038:	mov	r2, #9
   3303c:	movt	ip, #1
   33040:	movt	r2, #1
   33044:	cmp	r0, r2
   33048:	cmpne	r0, ip
   3304c:	movw	r0, #34388	; 0x8654
   33050:	movt	r0, #30
   33054:	ldreq	r3, [r3, #8]
   33058:	movne	r2, #2304	; 0x900
   3305c:	ldrheq	r2, [r3, #26]
   33060:	mov	r3, #8960	; 0x2300
   33064:	str	r0, [r1, #8]
   33068:	lsleq	r2, r2, #1
   3306c:	addeq	r2, r2, #768	; 0x300
   33070:	str	r2, [r1, #4]
   33074:	mov	r1, #255	; 0xff
   33078:	bl	125f0 <__memset_chk@plt>
   3307c:	mov	r0, #32
   33080:	pop	{r4, pc}
   33084:	mov	r2, #512	; 0x200
   33088:	movw	r0, #34388	; 0x8654
   3308c:	str	r2, [r1, #4]
   33090:	movt	r0, #30
   33094:	str	r0, [r1, #8]
   33098:	mov	r1, #255	; 0xff
   3309c:	bl	122e4 <memset@plt>
   330a0:	mov	r0, #0
   330a4:	pop	{r4, pc}
   330a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   330ac:	movw	r5, #34376	; 0x8648
   330b0:	movt	r5, #30
   330b4:	sub	sp, sp, #8
   330b8:	mov	r4, r0
   330bc:	ldr	r6, [r1, #44]	; 0x2c
   330c0:	ldr	r2, [r5]
   330c4:	ldr	r9, [r3, #56]	; 0x38
   330c8:	cmp	r2, #0
   330cc:	bne	33280 <crc32@@Base+0x19b38>
   330d0:	ldr	r7, [r5, #4]
   330d4:	mov	r2, #2
   330d8:	mov	r3, #9
   330dc:	movt	r2, #1
   330e0:	movt	r3, #1
   330e4:	cmp	r7, r3
   330e8:	cmpne	r7, r2
   330ec:	beq	331c0 <crc32@@Base+0x19a78>
   330f0:	mov	r3, #7
   330f4:	movt	r3, #1
   330f8:	cmp	r7, r3
   330fc:	beq	332d8 <crc32@@Base+0x19b90>
   33100:	mov	r3, #5
   33104:	movt	r3, #1
   33108:	cmp	r7, r3
   3310c:	beq	332cc <crc32@@Base+0x19b84>
   33110:	mov	r2, #8
   33114:	movt	r2, #1
   33118:	cmp	r7, r2
   3311c:	movw	r3, #53760	; 0xd200
   33120:	movt	r3, #3
   33124:	movne	r3, #0
   33128:	mov	r1, #12
   3312c:	mov	r0, r4
   33130:	movw	r2, #55420	; 0xd87c
   33134:	movt	r2, #3
   33138:	bl	122fc <snprintf@plt>
   3313c:	ldr	r8, [r5, #4]
   33140:	mov	r3, #512	; 0x200
   33144:	mov	r7, #1
   33148:	str	r3, [r4, #16]
   3314c:	add	r0, r4, r3
   33150:	add	r5, r4, #1536	; 0x600
   33154:	str	r7, [r4, #12]
   33158:	mov	r2, #8
   3315c:	movw	r1, #53792	; 0xd220
   33160:	movt	r1, #3
   33164:	bl	126bc <strncpy@plt>
   33168:	mov	r1, #1536	; 0x600
   3316c:	str	r8, [r4, #536]	; 0x218
   33170:	mov	r0, r5
   33174:	str	r1, [r4, #524]	; 0x20c
   33178:	mov	ip, #5
   3317c:	str	r1, [r4, #540]	; 0x21c
   33180:	mov	r3, r9
   33184:	str	r7, [r4, #520]	; 0x208
   33188:	movw	r2, #16962	; 0x4242
   3318c:	str	r6, [r4, #528]	; 0x210
   33190:	movt	r2, #16962	; 0x4242
   33194:	str	r6, [r4, #544]	; 0x220
   33198:	str	r2, [r4, #532]	; 0x214
   3319c:	mov	r2, r1
   331a0:	str	ip, [sp]
   331a4:	mov	r1, r6
   331a8:	bl	32b38 <crc32@@Base+0x193f0>
   331ac:	mov	r0, r5
   331b0:	sub	r1, r6, #1568	; 0x620
   331b4:	add	sp, sp, #8
   331b8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   331bc:	b	32c98 <crc32@@Base+0x19550>
   331c0:	add	sl, r0, #512	; 0x200
   331c4:	ldr	r8, [r5, #8]
   331c8:	mov	r5, r0
   331cc:	mov	r2, #128	; 0x80
   331d0:	mov	r0, r5
   331d4:	mov	r1, r8
   331d8:	add	r5, r5, r2
   331dc:	bl	1259c <memcpy@plt>
   331e0:	cmp	sl, r5
   331e4:	bne	331cc <crc32@@Base+0x19a84>
   331e8:	ldrh	r1, [r8, #26]
   331ec:	add	r0, r6, r1
   331f0:	add	r5, r4, r1
   331f4:	sub	r0, r0, #1
   331f8:	bl	35cd4 <crc32@@Base+0x1c58c>
   331fc:	mov	r2, #8
   33200:	movw	r1, #53792	; 0xd220
   33204:	movt	r1, #3
   33208:	mov	sl, r0
   3320c:	mov	r0, r5
   33210:	bl	126bc <strncpy@plt>
   33214:	ldrh	r2, [r8, #26]
   33218:	mov	ip, #2
   3321c:	str	r7, [r5, #24]
   33220:	str	sl, [r5, #16]
   33224:	mov	r3, r9
   33228:	lsl	r2, r2, #1
   3322c:	str	sl, [r5, #32]
   33230:	add	r4, r4, r2
   33234:	str	ip, [r5, #12]
   33238:	str	ip, [r5, #28]
   3323c:	movw	r1, #16962	; 0x4242
   33240:	mov	r0, r4
   33244:	movt	r1, #16962	; 0x4242
   33248:	str	r1, [r5, #20]
   3324c:	mov	r1, #1
   33250:	str	r1, [r5, #8]
   33254:	str	r1, [r5, #36]	; 0x24
   33258:	mov	r1, r6
   3325c:	str	ip, [sp]
   33260:	bl	32b38 <crc32@@Base+0x193f0>
   33264:	ldrh	r1, [r8, #26]
   33268:	mov	r0, r4
   3326c:	sub	r1, r6, r1, lsl #1
   33270:	sub	r1, r1, #32
   33274:	add	sp, sp, #8
   33278:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   3327c:	b	32c98 <crc32@@Base+0x19550>
   33280:	add	r3, r0, #8
   33284:	str	r9, [r0, #40]	; 0x28
   33288:	sub	r6, r6, #512	; 0x200
   3328c:	mvn	r1, #0
   33290:	str	r6, [r0, #4]
   33294:	movw	r2, #5768	; 0x1688
   33298:	str	r1, [r4, #44]	; 0x2c
   3329c:	movt	r2, #22664	; 0x5888
   332a0:	mov	r0, r3
   332a4:	str	r2, [r4]
   332a8:	mov	r1, #0
   332ac:	mov	r2, #32
   332b0:	bl	122e4 <memset@plt>
   332b4:	movw	r1, #64852	; 0xfd54
   332b8:	mov	r2, #32
   332bc:	movt	r1, #4
   332c0:	add	sp, sp, #8
   332c4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   332c8:	b	126bc <strncpy@plt>
   332cc:	movw	r3, #53748	; 0xd1f4
   332d0:	movt	r3, #3
   332d4:	b	33128 <crc32@@Base+0x199e0>
   332d8:	movw	r3, #53740	; 0xd1ec
   332dc:	movt	r3, #3
   332e0:	b	33128 <crc32@@Base+0x199e0>
   332e4:	ldr	r2, [r0]
   332e8:	movw	r3, #5768	; 0x1688
   332ec:	movt	r3, #22664	; 0x5888
   332f0:	cmp	r2, r3
   332f4:	push	{r4, lr}
   332f8:	mov	r4, r0
   332fc:	beq	3333c <crc32@@Base+0x19bf4>
   33300:	movw	r0, #53972	; 0xd2d4
   33304:	movt	r0, #3
   33308:	bl	1226c <puts@plt>
   3330c:	movw	r1, #54020	; 0xd304
   33310:	mov	r0, r4
   33314:	movt	r1, #3
   33318:	bl	1265c <strcmp@plt>
   3331c:	mov	r1, #1
   33320:	cmp	r0, #0
   33324:	mov	r0, r4
   33328:	beq	33334 <crc32@@Base+0x19bec>
   3332c:	pop	{r4, lr}
   33330:	b	32cf8 <crc32@@Base+0x195b0>
   33334:	pop	{r4, lr}
   33338:	b	32e50 <crc32@@Base+0x19708>
   3333c:	movw	r0, #53940	; 0xd2b4
   33340:	movt	r0, #3
   33344:	bl	1226c <puts@plt>
   33348:	ldr	r2, [r4, #40]	; 0x28
   3334c:	movw	r1, #37140	; 0x9114
   33350:	mov	r0, #1
   33354:	movt	r1, #3
   33358:	pop	{r4, lr}
   3335c:	b	12770 <__printf_chk@plt>
   33360:	ldr	r1, [r0]
   33364:	movw	r2, #5768	; 0x1688
   33368:	movt	r2, #22664	; 0x5888
   3336c:	cmp	r1, r2
   33370:	beq	333a8 <crc32@@Base+0x19c60>
   33374:	push	{r4, lr}
   33378:	movw	r1, #54020	; 0xd304
   3337c:	movt	r1, #3
   33380:	mov	r4, r0
   33384:	bl	1265c <strcmp@plt>
   33388:	subs	r1, r0, #0
   3338c:	mov	r0, r4
   33390:	beq	333a0 <crc32@@Base+0x19c58>
   33394:	mov	r1, #0
   33398:	pop	{r4, lr}
   3339c:	b	32cf8 <crc32@@Base+0x195b0>
   333a0:	pop	{r4, lr}
   333a4:	b	32e50 <crc32@@Base+0x19708>
   333a8:	mov	r0, #0
   333ac:	bx	lr
   333b0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   333b4:	ldr	r3, [r0, #56]	; 0x38
   333b8:	cmp	r3, #0
   333bc:	beq	33804 <crc32@@Base+0x1a0bc>
   333c0:	ldr	r0, [r0, #64]	; 0x40
   333c4:	cmp	r0, #0
   333c8:	beq	3382c <crc32@@Base+0x1a0e4>
   333cc:	bl	12308 <__strdup@plt>
   333d0:	movw	r6, #64852	; 0xfd54
   333d4:	subs	r8, r0, #0
   333d8:	movteq	r6, #4
   333dc:	beq	33660 <crc32@@Base+0x19f18>
   333e0:	movw	r7, #54108	; 0xd35c
   333e4:	mov	r4, #19
   333e8:	movt	r6, #4
   333ec:	movt	r7, #3
   333f0:	movt	r4, #128	; 0x80
   333f4:	mov	r9, r8
   333f8:	b	334f8 <crc32@@Base+0x19db0>
   333fc:	mov	r0, sl
   33400:	bl	125c0 <strlen@plt>
   33404:	sub	r0, r0, #1
   33408:	adds	r1, sl, r0
   3340c:	bcs	33460 <crc32@@Base+0x19d18>
   33410:	ldrb	r3, [sl, r0]
   33414:	sub	r3, r3, #9
   33418:	uxtb	r3, r3
   3341c:	cmp	r3, #23
   33420:	bhi	33460 <crc32@@Base+0x19d18>
   33424:	mvn	r3, r4, lsr r3
   33428:	tst	r3, #1
   3342c:	bne	33460 <crc32@@Base+0x19d18>
   33430:	sub	r2, r1, #1
   33434:	sub	r0, sl, #1
   33438:	cmp	r2, r0
   3343c:	mov	r1, r2
   33440:	sub	r2, r2, #1
   33444:	beq	33460 <crc32@@Base+0x19d18>
   33448:	ldrb	r3, [r1]
   3344c:	sub	r3, r3, #9
   33450:	uxtb	r3, r3
   33454:	cmp	r3, #23
   33458:	mvn	r3, r4, lsr r3
   3345c:	bls	33634 <crc32@@Base+0x19eec>
   33460:	ldrb	r3, [r1, #1]
   33464:	sub	r3, r3, #9
   33468:	uxtb	r3, r3
   3346c:	cmp	r3, #23
   33470:	bhi	33480 <crc32@@Base+0x19d38>
   33474:	mvn	r3, r4, lsr r3
   33478:	ands	r3, r3, #1
   3347c:	strbeq	r3, [r1, #1]
   33480:	mov	r1, r7
   33484:	mov	r0, r9
   33488:	bl	1265c <strcmp@plt>
   3348c:	movw	r1, #54116	; 0xd364
   33490:	movt	r1, #3
   33494:	cmp	r0, #0
   33498:	mov	r0, r9
   3349c:	streq	sl, [r6, #32]
   334a0:	bl	1265c <strcmp@plt>
   334a4:	ldrb	r3, [r9]
   334a8:	cmp	r0, #0
   334ac:	streq	sl, [r6, #36]	; 0x24
   334b0:	cmp	r3, #108	; 0x6c
   334b4:	bne	334d0 <crc32@@Base+0x19d88>
   334b8:	ldrb	r3, [r9, #1]
   334bc:	cmp	r3, #107	; 0x6b
   334c0:	bne	334d0 <crc32@@Base+0x19d88>
   334c4:	ldrb	r3, [r9, #2]
   334c8:	cmp	r3, #0
   334cc:	streq	sl, [r6, #40]	; 0x28
   334d0:	mov	r0, r9
   334d4:	movw	r1, #54128	; 0xd370
   334d8:	movt	r1, #3
   334dc:	bl	1265c <strcmp@plt>
   334e0:	cmp	r0, #0
   334e4:	beq	3375c <crc32@@Base+0x1a014>
   334e8:	cmp	r5, #0
   334ec:	beq	33660 <crc32@@Base+0x19f18>
   334f0:	adds	r9, r5, #1
   334f4:	beq	33660 <crc32@@Base+0x19f18>
   334f8:	mov	r1, #59	; 0x3b
   334fc:	mov	r0, r9
   33500:	bl	12764 <strchr@plt>
   33504:	subs	r5, r0, #0
   33508:	beq	3364c <crc32@@Base+0x19f04>
   3350c:	mov	r3, #0
   33510:	mov	r1, #61	; 0x3d
   33514:	strb	r3, [r5]
   33518:	mov	r0, r9
   3351c:	bl	12764 <strchr@plt>
   33520:	subs	fp, r0, #0
   33524:	beq	334f0 <crc32@@Base+0x19da8>
   33528:	mov	r3, #0
   3352c:	strb	r3, [fp]
   33530:	ldrb	r3, [r9]
   33534:	add	sl, fp, #1
   33538:	sub	r3, r3, #9
   3353c:	uxtb	r3, r3
   33540:	cmp	r3, #23
   33544:	bhi	3356c <crc32@@Base+0x19e24>
   33548:	mvn	r3, r4, lsr r3
   3354c:	tst	r3, #1
   33550:	bne	3356c <crc32@@Base+0x19e24>
   33554:	ldrb	r3, [r9, #1]!
   33558:	sub	r3, r3, #9
   3355c:	uxtb	r3, r3
   33560:	cmp	r3, #23
   33564:	mvn	r3, r4, lsr r3
   33568:	bls	3354c <crc32@@Base+0x19e04>
   3356c:	mov	r0, r9
   33570:	bl	125c0 <strlen@plt>
   33574:	sub	r0, r0, #1
   33578:	adds	r1, r9, r0
   3357c:	bcs	335d0 <crc32@@Base+0x19e88>
   33580:	ldrb	r3, [r9, r0]
   33584:	sub	r3, r3, #9
   33588:	uxtb	r3, r3
   3358c:	cmp	r3, #23
   33590:	bhi	335d0 <crc32@@Base+0x19e88>
   33594:	mvn	r3, r4, lsr r3
   33598:	tst	r3, #1
   3359c:	bne	335d0 <crc32@@Base+0x19e88>
   335a0:	sub	r2, r1, #1
   335a4:	sub	r0, r9, #1
   335a8:	cmp	r2, r0
   335ac:	mov	r1, r2
   335b0:	sub	r2, r2, #1
   335b4:	beq	335d0 <crc32@@Base+0x19e88>
   335b8:	ldrb	r3, [r1]
   335bc:	sub	r3, r3, #9
   335c0:	uxtb	r3, r3
   335c4:	cmp	r3, #23
   335c8:	mvn	r3, r4, lsr r3
   335cc:	bls	33640 <crc32@@Base+0x19ef8>
   335d0:	ldrb	r3, [r1, #1]
   335d4:	sub	r3, r3, #9
   335d8:	uxtb	r3, r3
   335dc:	cmp	r3, #23
   335e0:	bhi	335f0 <crc32@@Base+0x19ea8>
   335e4:	mvn	r3, r4, lsr r3
   335e8:	ands	r3, r3, #1
   335ec:	strbeq	r3, [r1, #1]
   335f0:	ldrb	r3, [fp, #1]
   335f4:	sub	r3, r3, #9
   335f8:	uxtb	r3, r3
   335fc:	cmp	r3, #23
   33600:	bhi	333fc <crc32@@Base+0x19cb4>
   33604:	mvn	r3, r4, lsr r3
   33608:	tst	r3, #1
   3360c:	bne	333fc <crc32@@Base+0x19cb4>
   33610:	ldrb	r2, [sl, #1]!
   33614:	sub	r2, r2, #9
   33618:	uxtb	r2, r2
   3361c:	cmp	r2, #23
   33620:	mvn	r2, r4, lsr r2
   33624:	bhi	333fc <crc32@@Base+0x19cb4>
   33628:	tst	r2, #1
   3362c:	beq	33610 <crc32@@Base+0x19ec8>
   33630:	b	333fc <crc32@@Base+0x19cb4>
   33634:	tst	r3, #1
   33638:	beq	33438 <crc32@@Base+0x19cf0>
   3363c:	b	33460 <crc32@@Base+0x19d18>
   33640:	tst	r3, #1
   33644:	beq	335a8 <crc32@@Base+0x19e60>
   33648:	b	335d0 <crc32@@Base+0x19e88>
   3364c:	mov	r1, #61	; 0x3d
   33650:	mov	r0, r9
   33654:	bl	12764 <strchr@plt>
   33658:	subs	fp, r0, #0
   3365c:	bne	33528 <crc32@@Base+0x19de0>
   33660:	ldr	r3, [r6, #40]	; 0x28
   33664:	cmp	r3, #0
   33668:	beq	33678 <crc32@@Base+0x19f30>
   3366c:	ldrb	r3, [r3]
   33670:	cmp	r3, #49	; 0x31
   33674:	beq	337a4 <crc32@@Base+0x1a05c>
   33678:	ldr	r7, [r6, #32]
   3367c:	movw	r0, #38136	; 0x94f8
   33680:	movt	r0, #3
   33684:	movw	r5, #52568	; 0xcd58
   33688:	mov	r4, #0
   3368c:	movt	r5, #3
   33690:	mov	r1, r7
   33694:	bl	1265c <strcmp@plt>
   33698:	cmp	r0, #0
   3369c:	beq	336c0 <crc32@@Base+0x19f78>
   336a0:	add	r4, r4, #1
   336a4:	cmp	r4, #5
   336a8:	beq	3377c <crc32@@Base+0x1a034>
   336ac:	ldr	r0, [r5, r4, lsl #3]
   336b0:	mov	r1, r7
   336b4:	bl	1265c <strcmp@plt>
   336b8:	cmp	r0, #0
   336bc:	bne	336a0 <crc32@@Base+0x19f58>
   336c0:	movw	r3, #52568	; 0xcd58
   336c4:	movt	r3, #3
   336c8:	add	r3, r3, r4, lsl #3
   336cc:	movw	r9, #34376	; 0x8648
   336d0:	movt	r9, #30
   336d4:	ldr	r5, [r3, #4]
   336d8:	str	r5, [r9, #4]
   336dc:	movw	r0, #54032	; 0xd310
   336e0:	ldr	r7, [r6, #36]	; 0x24
   336e4:	movt	r0, #3
   336e8:	mov	r4, #0
   336ec:	ldr	sl, [pc, #416]	; 33894 <crc32@@Base+0x1a14c>
   336f0:	b	336f8 <crc32@@Base+0x19fb0>
   336f4:	ldr	r0, [sl, r4, lsl #3]
   336f8:	mov	r1, r7
   336fc:	bl	1265c <strcmp@plt>
   33700:	cmp	r0, #0
   33704:	beq	3378c <crc32@@Base+0x1a044>
   33708:	add	r4, r4, #1
   3370c:	cmp	r4, #9
   33710:	bne	336f4 <crc32@@Base+0x19fac>
   33714:	mov	r0, r8
   33718:	bl	12128 <free@plt>
   3371c:	cmp	r5, #0
   33720:	beq	337c4 <crc32@@Base+0x1a07c>
   33724:	mov	r3, #2
   33728:	mov	r0, #9
   3372c:	movt	r3, #1
   33730:	movt	r0, #1
   33734:	cmp	r5, r0
   33738:	cmpne	r5, r3
   3373c:	moveq	r0, #1
   33740:	movne	r0, #0
   33744:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33748:	ldr	r3, [r9, #8]
   3374c:	cmp	r3, #0
   33750:	beq	33854 <crc32@@Base+0x1a10c>
   33754:	mov	r0, #0
   33758:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3375c:	mov	r3, sl
   33760:	movw	r2, #55420	; 0xd87c
   33764:	movw	r0, #64852	; 0xfd54
   33768:	movt	r2, #3
   3376c:	mov	r1, #32
   33770:	movt	r0, #4
   33774:	bl	122fc <snprintf@plt>
   33778:	b	334e8 <crc32@@Base+0x19da0>
   3377c:	movw	r9, #34376	; 0x8648
   33780:	movt	r9, #30
   33784:	ldr	r5, [r9, #4]
   33788:	b	336dc <crc32@@Base+0x19f94>
   3378c:	movw	r3, #52568	; 0xcd58
   33790:	movt	r3, #3
   33794:	add	r3, r3, r4, lsl #3
   33798:	ldr	r3, [r3, #44]	; 0x2c
   3379c:	str	r3, [r9, #8]
   337a0:	b	33714 <crc32@@Base+0x19fcc>
   337a4:	movw	r3, #34376	; 0x8648
   337a8:	movt	r3, #30
   337ac:	mov	r0, r8
   337b0:	mov	r2, #1
   337b4:	str	r2, [r3]
   337b8:	bl	12128 <free@plt>
   337bc:	mov	r0, #0
   337c0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   337c4:	movw	r4, #65044	; 0xfe14
   337c8:	movt	r4, #4
   337cc:	mov	r2, #41	; 0x29
   337d0:	mov	r1, #1
   337d4:	ldr	r3, [r4]
   337d8:	movw	r0, #54136	; 0xd378
   337dc:	movt	r0, #3
   337e0:	bl	12578 <fwrite@plt>
   337e4:	ldr	r3, [r4]
   337e8:	mov	r2, #40	; 0x28
   337ec:	mov	r1, #1
   337f0:	movw	r0, #54180	; 0xd3a4
   337f4:	movt	r0, #3
   337f8:	bl	12578 <fwrite@plt>
   337fc:	mvn	r0, #21
   33800:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33804:	movw	r3, #65044	; 0xfe14
   33808:	movt	r3, #4
   3380c:	mov	r2, #33	; 0x21
   33810:	mov	r1, #1
   33814:	ldr	r3, [r3]
   33818:	movw	r0, #54040	; 0xd318
   3381c:	movt	r0, #3
   33820:	bl	12578 <fwrite@plt>
   33824:	mvn	r0, #21
   33828:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3382c:	movw	r3, #65044	; 0xfe14
   33830:	movt	r3, #4
   33834:	mov	r2, #31
   33838:	mov	r1, #1
   3383c:	ldr	r3, [r3]
   33840:	movw	r0, #54076	; 0xd33c
   33844:	movt	r0, #3
   33848:	bl	12578 <fwrite@plt>
   3384c:	mvn	r0, #21
   33850:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33854:	movw	r4, #65044	; 0xfe14
   33858:	movt	r4, #4
   3385c:	mov	r2, #40	; 0x28
   33860:	mov	r1, #1
   33864:	ldr	r3, [r4]
   33868:	movw	r0, #54224	; 0xd3d0
   3386c:	movt	r0, #3
   33870:	bl	12578 <fwrite@plt>
   33874:	ldr	r0, [r4]
   33878:	ldr	r3, [r6, #32]
   3387c:	mov	r1, #1
   33880:	movw	r2, #54268	; 0xd3fc
   33884:	movt	r2, #3
   33888:	bl	122b4 <__fprintf_chk@plt>
   3388c:	mvn	r0, #21
   33890:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33894:	andeq	ip, r3, r0, lsl #27
   33898:	push	{r4, r5, r6, lr}
   3389c:	mov	r4, r0
   338a0:	mov	r5, r1
   338a4:	bl	12638 <ENGINE_load_builtin_engines@plt>
   338a8:	mov	r0, r4
   338ac:	bl	12368 <ENGINE_by_id@plt>
   338b0:	subs	r4, r0, #0
   338b4:	beq	33940 <crc32@@Base+0x1a1f8>
   338b8:	bl	1223c <ENGINE_init@plt>
   338bc:	cmp	r0, #0
   338c0:	beq	338e0 <crc32@@Base+0x1a198>
   338c4:	mov	r0, r4
   338c8:	bl	12338 <ENGINE_set_default_RSA@plt>
   338cc:	cmp	r0, #0
   338d0:	beq	33914 <crc32@@Base+0x1a1cc>
   338d4:	str	r4, [r5]
   338d8:	mov	r0, #0
   338dc:	pop	{r4, r5, r6, pc}
   338e0:	movw	r3, #65044	; 0xfe14
   338e4:	movt	r3, #4
   338e8:	movw	r0, #54496	; 0xd4e0
   338ec:	mov	r2, #27
   338f0:	ldr	r3, [r3]
   338f4:	movt	r0, #3
   338f8:	mov	r1, #1
   338fc:	bl	12578 <fwrite@plt>
   33900:	mov	r0, r4
   33904:	bl	121a0 <ENGINE_free@plt>
   33908:	bl	12254 <ENGINE_cleanup@plt>
   3390c:	mvn	r0, #0
   33910:	pop	{r4, r5, r6, pc}
   33914:	movw	r3, #65044	; 0xfe14
   33918:	movt	r3, #4
   3391c:	mov	r2, #39	; 0x27
   33920:	mov	r1, #1
   33924:	ldr	r3, [r3]
   33928:	movw	r0, #54524	; 0xd4fc
   3392c:	movt	r0, #3
   33930:	bl	12578 <fwrite@plt>
   33934:	mov	r0, r4
   33938:	bl	12104 <ENGINE_finish@plt>
   3393c:	b	33900 <crc32@@Base+0x1a1b8>
   33940:	movw	r3, #65044	; 0xfe14
   33944:	movt	r3, #4
   33948:	movw	r0, #54472	; 0xd4c8
   3394c:	mov	r2, #23
   33950:	ldr	r3, [r3]
   33954:	mov	r1, #1
   33958:	movt	r0, #3
   3395c:	bl	12578 <fwrite@plt>
   33960:	b	33908 <crc32@@Base+0x1a1c0>
   33964:	push	{r4, r5, r6, lr}
   33968:	mov	r6, r0
   3396c:	bl	124d0 <ERR_get_error@plt>
   33970:	movw	r4, #65044	; 0xfe14
   33974:	movt	r4, #4
   33978:	ldr	r1, [r4]
   3397c:	mov	r5, r0
   33980:	mov	r0, r6
   33984:	bl	12710 <fputs@plt>
   33988:	mov	r0, r5
   3398c:	mov	r1, #0
   33990:	ldr	r4, [r4]
   33994:	bl	12068 <ERR_error_string@plt>
   33998:	mov	r1, #1
   3399c:	movw	r2, #28512	; 0x6f60
   339a0:	movt	r2, #3
   339a4:	mov	r3, r0
   339a8:	mov	r0, r4
   339ac:	bl	122b4 <__fprintf_chk@plt>
   339b0:	mvn	r0, #0
   339b4:	pop	{r4, r5, r6, pc}
   339b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   339bc:	movw	r4, #61168	; 0xeef0
   339c0:	movt	r4, #4
   339c4:	mov	r7, r3
   339c8:	sub	sp, sp, #1040	; 0x410
   339cc:	mov	r5, r2
   339d0:	ldr	r3, [r4]
   339d4:	sub	sp, sp, #8
   339d8:	mov	r2, #0
   339dc:	mov	r8, r0
   339e0:	str	r2, [r7]
   339e4:	mov	r0, r5
   339e8:	mov	sl, r1
   339ec:	str	r3, [sp, #1044]	; 0x414
   339f0:	bl	12170 <ENGINE_get_id@plt>
   339f4:	cmp	r0, #0
   339f8:	beq	33ad0 <crc32@@Base+0x1a388>
   339fc:	movw	r1, #54564	; 0xd524
   33a00:	movt	r1, #3
   33a04:	bl	1265c <strcmp@plt>
   33a08:	subs	r9, r0, #0
   33a0c:	bne	33ad0 <crc32@@Base+0x1a388>
   33a10:	cmp	r8, #0
   33a14:	add	r6, sp, #20
   33a18:	mov	r3, #1024	; 0x400
   33a1c:	beq	33a98 <crc32@@Base+0x1a350>
   33a20:	movw	r2, #54572	; 0xd52c
   33a24:	str	sl, [sp, #8]
   33a28:	movt	r2, #3
   33a2c:	str	r8, [sp, #4]
   33a30:	str	r2, [sp]
   33a34:	mov	r0, r6
   33a38:	mov	r1, r3
   33a3c:	mov	r2, #1
   33a40:	bl	125cc <__snprintf_chk@plt>
   33a44:	mov	r3, #0
   33a48:	mov	r0, r5
   33a4c:	mov	r1, r6
   33a50:	mov	r2, r3
   33a54:	bl	12098 <ENGINE_load_private_key@plt>
   33a58:	subs	r5, r0, #0
   33a5c:	beq	33abc <crc32@@Base+0x1a374>
   33a60:	bl	1229c <EVP_PKEY_get1_RSA@plt>
   33a64:	subs	r6, r0, #0
   33a68:	beq	33af8 <crc32@@Base+0x1a3b0>
   33a6c:	mov	r0, r5
   33a70:	bl	120b0 <EVP_PKEY_free@plt>
   33a74:	str	r6, [r7]
   33a78:	ldr	r2, [sp, #1044]	; 0x414
   33a7c:	mov	r0, r9
   33a80:	ldr	r3, [r4]
   33a84:	cmp	r2, r3
   33a88:	bne	33b14 <crc32@@Base+0x1a3cc>
   33a8c:	add	sp, sp, #1040	; 0x410
   33a90:	add	sp, sp, #8
   33a94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   33a98:	str	sl, [sp, #4]
   33a9c:	movw	r2, #54608	; 0xd550
   33aa0:	mov	r0, r6
   33aa4:	movt	r2, #3
   33aa8:	mov	r1, r3
   33aac:	str	r2, [sp]
   33ab0:	mov	r2, #1
   33ab4:	bl	125cc <__snprintf_chk@plt>
   33ab8:	b	33a44 <crc32@@Base+0x1a2fc>
   33abc:	movw	r0, #54664	; 0xd588
   33ac0:	movt	r0, #3
   33ac4:	bl	33964 <crc32@@Base+0x1a21c>
   33ac8:	mov	r9, r0
   33acc:	b	33a78 <crc32@@Base+0x1a330>
   33ad0:	movw	r3, #65044	; 0xfe14
   33ad4:	movt	r3, #4
   33ad8:	movw	r0, #54640	; 0xd570
   33adc:	mov	r2, #21
   33ae0:	ldr	r3, [r3]
   33ae4:	mov	r1, #1
   33ae8:	movt	r0, #3
   33aec:	mvn	r9, #94	; 0x5e
   33af0:	bl	12578 <fwrite@plt>
   33af4:	b	33a78 <crc32@@Base+0x1a330>
   33af8:	movw	r0, #54704	; 0xd5b0
   33afc:	movt	r0, #3
   33b00:	bl	33964 <crc32@@Base+0x1a21c>
   33b04:	mov	r0, r5
   33b08:	bl	120b0 <EVP_PKEY_free@plt>
   33b0c:	mvn	r9, #21
   33b10:	b	33a78 <crc32@@Base+0x1a330>
   33b14:	bl	12494 <__stack_chk_fail@plt>
   33b18:	push	{r4, r5, r6, r7, r8, lr}
   33b1c:	movw	r5, #61168	; 0xeef0
   33b20:	movt	r5, #4
   33b24:	sub	sp, sp, #1040	; 0x410
   33b28:	sub	sp, sp, #8
   33b2c:	mov	r3, #1024	; 0x400
   33b30:	ldr	ip, [r5]
   33b34:	mov	r6, r2
   33b38:	str	r1, [sp, #8]
   33b3c:	movw	r2, #54740	; 0xd5d4
   33b40:	str	r0, [sp, #4]
   33b44:	mov	r1, r3
   33b48:	movt	r2, #3
   33b4c:	mov	r4, #0
   33b50:	str	r2, [sp]
   33b54:	add	r0, sp, #20
   33b58:	mov	r2, #1
   33b5c:	str	r4, [r6]
   33b60:	str	ip, [sp, #1044]	; 0x414
   33b64:	bl	125cc <__snprintf_chk@plt>
   33b68:	add	r0, sp, #20
   33b6c:	movw	r1, #49448	; 0xc128
   33b70:	movt	r1, #3
   33b74:	bl	1232c <fopen@plt>
   33b78:	subs	r7, r0, #0
   33b7c:	beq	33bc4 <crc32@@Base+0x1a47c>
   33b80:	add	r3, sp, #20
   33b84:	mov	r2, r4
   33b88:	mov	r1, r4
   33b8c:	bl	121e8 <PEM_read_RSAPrivateKey@plt>
   33b90:	subs	r8, r0, #0
   33b94:	beq	33c00 <crc32@@Base+0x1a4b8>
   33b98:	mov	r0, r7
   33b9c:	bl	125fc <fclose@plt>
   33ba0:	mov	r0, r4
   33ba4:	str	r8, [r6]
   33ba8:	ldr	r2, [sp, #1044]	; 0x414
   33bac:	ldr	r3, [r5]
   33bb0:	cmp	r2, r3
   33bb4:	bne	33c1c <crc32@@Base+0x1a4d4>
   33bb8:	add	sp, sp, #1040	; 0x410
   33bbc:	add	sp, sp, #8
   33bc0:	pop	{r4, r5, r6, r7, r8, pc}
   33bc4:	movw	r3, #65044	; 0xfe14
   33bc8:	movt	r3, #4
   33bcc:	ldr	r4, [r3]
   33bd0:	bl	1268c <__errno_location@plt>
   33bd4:	ldr	r0, [r0]
   33bd8:	bl	12200 <strerror@plt>
   33bdc:	add	r3, sp, #20
   33be0:	movw	r2, #54752	; 0xd5e0
   33be4:	mov	r1, #1
   33be8:	movt	r2, #3
   33bec:	str	r0, [sp]
   33bf0:	mov	r0, r4
   33bf4:	bl	122b4 <__fprintf_chk@plt>
   33bf8:	mvn	r0, #1
   33bfc:	b	33ba8 <crc32@@Base+0x1a460>
   33c00:	movw	r0, #54796	; 0xd60c
   33c04:	movt	r0, #3
   33c08:	bl	33964 <crc32@@Base+0x1a21c>
   33c0c:	mov	r0, r7
   33c10:	bl	125fc <fclose@plt>
   33c14:	mvn	r0, #70	; 0x46
   33c18:	b	33ba8 <crc32@@Base+0x1a460>
   33c1c:	bl	12494 <__stack_chk_fail@plt>
   33c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33c24:	sub	sp, sp, #28
   33c28:	mov	r5, r3
   33c2c:	ldr	r4, [sp, #64]	; 0x40
   33c30:	str	r2, [sp, #20]
   33c34:	cmp	r4, #0
   33c38:	add	r2, r4, #31
   33c3c:	strd	r0, [sp, #12]
   33c40:	movlt	r4, r2
   33c44:	bl	12758 <BN_new@plt>
   33c48:	mov	r6, r0
   33c4c:	bl	12758 <BN_new@plt>
   33c50:	mov	sl, r0
   33c54:	bl	12758 <BN_new@plt>
   33c58:	mov	fp, r0
   33c5c:	bl	12758 <BN_new@plt>
   33c60:	cmp	sl, #0
   33c64:	cmpne	r6, #0
   33c68:	beq	33d78 <crc32@@Base+0x1a630>
   33c6c:	cmp	r0, #0
   33c70:	cmpne	fp, #0
   33c74:	mov	r8, r0
   33c78:	beq	33d78 <crc32@@Base+0x1a630>
   33c7c:	bl	12398 <BN_CTX_new@plt>
   33c80:	asr	r4, r4, #5
   33c84:	mov	r1, #2
   33c88:	lsl	r3, r4, r1
   33c8c:	str	r3, [sp, #8]
   33c90:	mov	r4, r3
   33c94:	mov	r9, r0
   33c98:	mov	r0, sl
   33c9c:	bl	124ac <BN_set_word@plt>
   33ca0:	mov	r1, #32
   33ca4:	mov	r0, fp
   33ca8:	bl	124ac <BN_set_word@plt>
   33cac:	mov	r3, r9
   33cb0:	mov	r2, fp
   33cb4:	mov	r1, sl
   33cb8:	mov	r0, r8
   33cbc:	bl	12428 <BN_exp@plt>
   33cc0:	mov	r0, r4
   33cc4:	bl	125a8 <malloc@plt>
   33cc8:	subs	r7, r0, #0
   33ccc:	beq	33da0 <crc32@@Base+0x1a658>
   33cd0:	ldr	r3, [sp, #8]
   33cd4:	sub	r4, r3, #4
   33cd8:	adds	r4, r7, r4
   33cdc:	bcs	33d20 <crc32@@Base+0x1a5d8>
   33ce0:	mov	r3, r8
   33ce4:	mov	r2, r5
   33ce8:	mov	r1, r6
   33cec:	str	r9, [sp]
   33cf0:	mov	r0, #0
   33cf4:	bl	12374 <BN_div@plt>
   33cf8:	mov	r0, r6
   33cfc:	bl	124e8 <BN_get_word@plt>
   33d00:	mov	r2, #32
   33d04:	mov	r1, r5
   33d08:	rev	r3, r0
   33d0c:	mov	r0, r5
   33d10:	str	r3, [r4], #-4
   33d14:	bl	12644 <BN_rshift@plt>
   33d18:	cmp	r7, r4
   33d1c:	bls	33ce0 <crc32@@Base+0x1a598>
   33d20:	ldr	r3, [sp, #8]
   33d24:	add	r0, sp, #12
   33d28:	str	r3, [sp]
   33d2c:	mov	r3, r7
   33d30:	ldm	r0, {r0, r1, r2}
   33d34:	bl	2efa8 <crc32@@Base+0x15860>
   33d38:	mov	r4, r0
   33d3c:	mov	r0, r7
   33d40:	bl	12128 <free@plt>
   33d44:	mov	r0, r6
   33d48:	bl	12248 <BN_free@plt>
   33d4c:	mov	r0, sl
   33d50:	bl	12248 <BN_free@plt>
   33d54:	mov	r0, fp
   33d58:	bl	12248 <BN_free@plt>
   33d5c:	mov	r0, r8
   33d60:	bl	12248 <BN_free@plt>
   33d64:	cmp	r4, #0
   33d68:	mvnne	r4, #2
   33d6c:	mov	r0, r4
   33d70:	add	sp, sp, #28
   33d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33d78:	movw	r3, #65044	; 0xfe14
   33d7c:	movt	r3, #4
   33d80:	movw	r0, #54824	; 0xd628
   33d84:	mov	r2, #23
   33d88:	ldr	r3, [r3]
   33d8c:	mov	r1, #1
   33d90:	movt	r0, #3
   33d94:	mvn	r4, #11
   33d98:	bl	12578 <fwrite@plt>
   33d9c:	b	33d6c <crc32@@Base+0x1a624>
   33da0:	movw	r1, #65044	; 0xfe14
   33da4:	movt	r1, #4
   33da8:	ldr	r3, [sp, #8]
   33dac:	movw	r2, #27212	; 0x6a4c
   33db0:	ldr	r0, [r1]
   33db4:	movt	r2, #3
   33db8:	mov	r1, #1
   33dbc:	mvn	r4, #11
   33dc0:	bl	122b4 <__fprintf_chk@plt>
   33dc4:	b	33d6c <crc32@@Base+0x1a624>
   33dc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33dcc:	movw	r4, #61168	; 0xeef0
   33dd0:	movt	r4, #4
   33dd4:	mov	r7, r1
   33dd8:	sub	sp, sp, #60	; 0x3c
   33ddc:	mov	r5, r0
   33de0:	ldr	r1, [r4]
   33de4:	mov	r8, r2
   33de8:	mov	sl, r3
   33dec:	ldr	r9, [sp, #96]	; 0x60
   33df0:	mov	r3, #0
   33df4:	str	r3, [sp, #40]	; 0x28
   33df8:	str	r1, [sp, #52]	; 0x34
   33dfc:	bl	124a0 <SSL_library_init@plt>
   33e00:	cmp	r0, #0
   33e04:	beq	340d8 <crc32@@Base+0x1a990>
   33e08:	bl	12140 <SSL_load_error_strings@plt>
   33e0c:	bl	120d4 <OPENSSL_add_all_algorithms_noconf@plt>
   33e10:	bl	121dc <OpenSSL_add_all_digests@plt>
   33e14:	bl	126d4 <OpenSSL_add_all_ciphers@plt>
   33e18:	ldr	r0, [r5, #44]	; 0x2c
   33e1c:	cmp	r0, #0
   33e20:	beq	33e34 <crc32@@Base+0x1a6ec>
   33e24:	add	r1, sp, #40	; 0x28
   33e28:	bl	33898 <crc32@@Base+0x1a150>
   33e2c:	subs	r6, r0, #0
   33e30:	bne	33e84 <crc32@@Base+0x1a73c>
   33e34:	ldr	r2, [sp, #40]	; 0x28
   33e38:	ldr	r0, [r5]
   33e3c:	cmp	r2, #0
   33e40:	ldr	r1, [r5, #4]
   33e44:	beq	33eb4 <crc32@@Base+0x1a76c>
   33e48:	add	r3, sp, #36	; 0x24
   33e4c:	bl	339b8 <crc32@@Base+0x1a270>
   33e50:	mov	r6, r0
   33e54:	cmp	r6, #0
   33e58:	beq	33ec8 <crc32@@Base+0x1a780>
   33e5c:	ldr	r3, [r5, #44]	; 0x2c
   33e60:	cmp	r3, #0
   33e64:	beq	33e84 <crc32@@Base+0x1a73c>
   33e68:	ldr	r5, [sp, #40]	; 0x28
   33e6c:	cmp	r5, #0
   33e70:	beq	33e84 <crc32@@Base+0x1a73c>
   33e74:	mov	r0, r5
   33e78:	bl	12104 <ENGINE_finish@plt>
   33e7c:	mov	r0, r5
   33e80:	bl	121a0 <ENGINE_free@plt>
   33e84:	bl	123b0 <CRYPTO_cleanup_all_ex_data@plt>
   33e88:	bl	12458 <ERR_free_strings@plt>
   33e8c:	mov	r0, #0
   33e90:	bl	121d0 <ERR_remove_thread_state@plt>
   33e94:	bl	12734 <EVP_cleanup@plt>
   33e98:	ldr	r2, [sp, #52]	; 0x34
   33e9c:	mov	r0, r6
   33ea0:	ldr	r3, [r4]
   33ea4:	cmp	r2, r3
   33ea8:	bne	341b0 <crc32@@Base+0x1aa68>
   33eac:	add	sp, sp, #60	; 0x3c
   33eb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33eb4:	add	r2, sp, #36	; 0x24
   33eb8:	bl	33b18 <crc32@@Base+0x1a3d0>
   33ebc:	mov	r6, r0
   33ec0:	cmp	r6, #0
   33ec4:	bne	33e5c <crc32@@Base+0x1a714>
   33ec8:	ldr	r3, [r5, #24]
   33ecc:	ldr	fp, [sp, #36]	; 0x24
   33ed0:	str	r3, [sp, #16]
   33ed4:	ldr	r3, [r5, #20]
   33ed8:	str	r3, [sp, #20]
   33edc:	bl	12470 <EVP_PKEY_new@plt>
   33ee0:	subs	r3, r0, #0
   33ee4:	str	r3, [sp, #12]
   33ee8:	beq	340c4 <crc32@@Base+0x1a97c>
   33eec:	mov	r1, fp
   33ef0:	bl	12560 <EVP_PKEY_set1_RSA@plt>
   33ef4:	cmp	r0, #0
   33ef8:	beq	34054 <crc32@@Base+0x1a90c>
   33efc:	ldr	r0, [sp, #12]
   33f00:	bl	121c4 <EVP_PKEY_size@plt>
   33f04:	str	r0, [sp, #48]	; 0x30
   33f08:	str	r0, [sp, #24]
   33f0c:	bl	125a8 <malloc@plt>
   33f10:	subs	r3, r0, #0
   33f14:	str	r3, [sp, #28]
   33f18:	ldr	r3, [sp, #24]
   33f1c:	beq	3408c <crc32@@Base+0x1a944>
   33f20:	bl	122f0 <EVP_MD_CTX_create@plt>
   33f24:	subs	r3, r0, #0
   33f28:	str	r3, [sp, #24]
   33f2c:	beq	34100 <crc32@@Base+0x1a9b8>
   33f30:	bl	12680 <EVP_MD_CTX_init@plt>
   33f34:	mov	r1, r6
   33f38:	ldr	r0, [sp, #12]
   33f3c:	bl	121b8 <EVP_PKEY_CTX_new@plt>
   33f40:	cmp	r0, #0
   33f44:	str	r0, [sp, #44]	; 0x2c
   33f48:	beq	3419c <crc32@@Base+0x1aa54>
   33f4c:	ldr	r3, [sp, #20]
   33f50:	ldr	r3, [r3, #16]
   33f54:	blx	r3
   33f58:	ldr	r3, [sp, #12]
   33f5c:	add	r1, sp, #44	; 0x2c
   33f60:	str	r3, [sp]
   33f64:	mov	r3, r6
   33f68:	mov	r2, r0
   33f6c:	ldr	r0, [sp, #24]
   33f70:	bl	12614 <EVP_DigestSignInit@plt>
   33f74:	cmp	r0, #0
   33f78:	ble	34144 <crc32@@Base+0x1a9fc>
   33f7c:	ldr	r3, [sp, #16]
   33f80:	cmp	r3, #0
   33f84:	beq	33fe8 <crc32@@Base+0x1a8a0>
   33f88:	ldr	r3, [sp, #16]
   33f8c:	ldr	r3, [r3]
   33f90:	ldrb	r2, [r3]
   33f94:	cmp	r2, #112	; 0x70
   33f98:	bne	33fe8 <crc32@@Base+0x1a8a0>
   33f9c:	ldrb	r2, [r3, #1]
   33fa0:	cmp	r2, #115	; 0x73
   33fa4:	bne	33fe8 <crc32@@Base+0x1a8a0>
   33fa8:	ldrb	r2, [r3, #2]
   33fac:	cmp	r2, #115	; 0x73
   33fb0:	bne	33fe8 <crc32@@Base+0x1a8a0>
   33fb4:	ldrb	r2, [r3, #3]
   33fb8:	cmp	r2, #0
   33fbc:	bne	33fe8 <crc32@@Base+0x1a8a0>
   33fc0:	mov	r3, #6
   33fc4:	str	r2, [sp, #4]
   33fc8:	mov	r1, r3
   33fcc:	str	r3, [sp]
   33fd0:	ldr	r0, [sp, #44]	; 0x2c
   33fd4:	movw	r3, #4097	; 0x1001
   33fd8:	mvn	r2, #0
   33fdc:	bl	12194 <EVP_PKEY_CTX_ctrl@plt>
   33fe0:	cmp	r0, #0
   33fe4:	ble	34188 <crc32@@Base+0x1aa40>
   33fe8:	cmp	r8, #0
   33fec:	ble	3411c <crc32@@Base+0x1a9d4>
   33ff0:	str	sl, [sp, #16]
   33ff4:	mov	fp, #0
   33ff8:	str	r9, [sp, #20]
   33ffc:	mov	sl, r7
   34000:	ldr	r9, [sp, #24]
   34004:	b	34018 <crc32@@Base+0x1a8d0>
   34008:	add	fp, fp, #1
   3400c:	add	sl, sl, #8
   34010:	cmp	r8, fp
   34014:	beq	34114 <crc32@@Base+0x1a9cc>
   34018:	ldr	r2, [sl, #4]
   3401c:	mov	r0, r9
   34020:	ldr	r1, [r7, fp, lsl #3]
   34024:	bl	12650 <EVP_DigestUpdate@plt>
   34028:	cmp	r0, #0
   3402c:	bne	34008 <crc32@@Base+0x1a8c0>
   34030:	movw	r0, #55088	; 0xd730
   34034:	movt	r0, #3
   34038:	bl	33964 <crc32@@Base+0x1a21c>
   3403c:	mov	r7, r0
   34040:	ldr	r0, [sp, #24]
   34044:	bl	1247c <EVP_MD_CTX_destroy@plt>
   34048:	ldr	r0, [sp, #28]
   3404c:	bl	12128 <free@plt>
   34050:	b	34064 <crc32@@Base+0x1a91c>
   34054:	movw	r0, #54912	; 0xd680
   34058:	movt	r0, #3
   3405c:	bl	33964 <crc32@@Base+0x1a21c>
   34060:	mov	r7, r0
   34064:	ldr	r0, [sp, #12]
   34068:	bl	120b0 <EVP_PKEY_free@plt>
   3406c:	cmp	r7, #0
   34070:	bne	340b4 <crc32@@Base+0x1a96c>
   34074:	ldr	r0, [sp, #36]	; 0x24
   34078:	bl	12440 <RSA_free@plt>
   3407c:	ldr	r3, [r5, #44]	; 0x2c
   34080:	cmp	r3, #0
   34084:	bne	33e68 <crc32@@Base+0x1a720>
   34088:	b	33e84 <crc32@@Base+0x1a73c>
   3408c:	movw	r1, #65044	; 0xfe14
   34090:	movt	r1, #4
   34094:	movw	r2, #54936	; 0xd698
   34098:	movt	r2, #3
   3409c:	ldr	r0, [r1]
   340a0:	mov	r1, #1
   340a4:	bl	122b4 <__fprintf_chk@plt>
   340a8:	ldr	r0, [sp, #12]
   340ac:	mvn	r7, #11
   340b0:	bl	120b0 <EVP_PKEY_free@plt>
   340b4:	ldr	r0, [sp, #36]	; 0x24
   340b8:	mov	r6, r7
   340bc:	bl	12440 <RSA_free@plt>
   340c0:	b	33e5c <crc32@@Base+0x1a714>
   340c4:	movw	r0, #54880	; 0xd660
   340c8:	movt	r0, #3
   340cc:	bl	33964 <crc32@@Base+0x1a21c>
   340d0:	mov	r7, r0
   340d4:	b	3406c <crc32@@Base+0x1a924>
   340d8:	movw	r3, #65044	; 0xfe14
   340dc:	movt	r3, #4
   340e0:	movw	r0, #54848	; 0xd640
   340e4:	mov	r2, #28
   340e8:	ldr	r3, [r3]
   340ec:	mov	r1, #1
   340f0:	movt	r0, #3
   340f4:	mvn	r6, #0
   340f8:	bl	12578 <fwrite@plt>
   340fc:	b	33e98 <crc32@@Base+0x1a750>
   34100:	movw	r0, #54980	; 0xd6c4
   34104:	movt	r0, #3
   34108:	bl	33964 <crc32@@Base+0x1a21c>
   3410c:	mov	r7, r0
   34110:	b	34048 <crc32@@Base+0x1a900>
   34114:	ldr	sl, [sp, #16]
   34118:	ldr	r9, [sp, #20]
   3411c:	add	r2, sp, #48	; 0x30
   34120:	ldrd	r0, [sp, #24]
   34124:	bl	12218 <EVP_DigestSignFinal@plt>
   34128:	cmp	r0, #0
   3412c:	bne	34158 <crc32@@Base+0x1aa10>
   34130:	movw	r0, #55108	; 0xd744
   34134:	movt	r0, #3
   34138:	bl	33964 <crc32@@Base+0x1a21c>
   3413c:	mov	r7, r0
   34140:	b	34040 <crc32@@Base+0x1a8f8>
   34144:	movw	r0, #55040	; 0xd700
   34148:	movt	r0, #3
   3414c:	bl	33964 <crc32@@Base+0x1a21c>
   34150:	mov	r7, r0
   34154:	b	34040 <crc32@@Base+0x1a8f8>
   34158:	ldr	r7, [sp, #24]
   3415c:	mov	r0, r7
   34160:	bl	124c4 <EVP_MD_CTX_cleanup@plt>
   34164:	mov	r0, r7
   34168:	bl	1247c <EVP_MD_CTX_destroy@plt>
   3416c:	ldr	r0, [sp, #12]
   34170:	bl	120b0 <EVP_PKEY_free@plt>
   34174:	ldr	r3, [sp, #48]	; 0x30
   34178:	ldr	r2, [sp, #28]
   3417c:	str	r2, [sl]
   34180:	str	r3, [r9]
   34184:	b	34074 <crc32@@Base+0x1a92c>
   34188:	movw	r0, #55060	; 0xd714
   3418c:	movt	r0, #3
   34190:	bl	33964 <crc32@@Base+0x1a21c>
   34194:	mov	r7, r0
   34198:	b	34040 <crc32@@Base+0x1a8f8>
   3419c:	movw	r0, #55008	; 0xd6e0
   341a0:	movt	r0, #3
   341a4:	bl	33964 <crc32@@Base+0x1a21c>
   341a8:	mov	r7, r0
   341ac:	b	34048 <crc32@@Base+0x1a900>
   341b0:	bl	12494 <__stack_chk_fail@plt>
   341b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   341b8:	sub	sp, sp, #52	; 0x34
   341bc:	mov	fp, r1
   341c0:	strd	r2, [sp, #28]
   341c4:	str	r0, [sp, #20]
   341c8:	bl	12398 <BN_CTX_new@plt>
   341cc:	str	r0, [sp, #16]
   341d0:	bl	12758 <BN_new@plt>
   341d4:	mov	r4, r0
   341d8:	str	r0, [sp, #24]
   341dc:	bl	12758 <BN_new@plt>
   341e0:	mov	r9, r0
   341e4:	bl	12758 <BN_new@plt>
   341e8:	mov	sl, r0
   341ec:	str	r0, [sp, #12]
   341f0:	bl	12758 <BN_new@plt>
   341f4:	mov	r8, r0
   341f8:	bl	12758 <BN_new@plt>
   341fc:	str	r0, [sp, #8]
   34200:	bl	12758 <BN_new@plt>
   34204:	mov	r5, r0
   34208:	bl	12758 <BN_new@plt>
   3420c:	mov	r7, r0
   34210:	bl	12758 <BN_new@plt>
   34214:	cmp	r9, #0
   34218:	cmpne	r4, #0
   3421c:	beq	344f0 <crc32@@Base+0x1ada8>
   34220:	cmp	r8, #0
   34224:	cmpne	sl, #0
   34228:	beq	344f0 <crc32@@Base+0x1ada8>
   3422c:	ldr	r3, [sp, #8]
   34230:	cmp	r5, #0
   34234:	cmpne	r3, #0
   34238:	beq	344f0 <crc32@@Base+0x1ada8>
   3423c:	clz	r4, r0
   34240:	cmp	r7, #0
   34244:	mov	r6, r0
   34248:	lsr	r4, r4, #5
   3424c:	moveq	r4, #1
   34250:	cmp	r4, #0
   34254:	bne	344f0 <crc32@@Base+0x1ada8>
   34258:	cmp	fp, #0
   3425c:	beq	344e8 <crc32@@Base+0x1ada0>
   34260:	ldr	r3, [sp, #20]
   34264:	ldr	sl, [r3, #20]
   34268:	mov	r0, sl
   3426c:	bl	12584 <BN_num_bits@plt>
   34270:	cmp	r0, #64	; 0x40
   34274:	bgt	344e8 <crc32@@Base+0x1ada0>
   34278:	mov	r0, sl
   3427c:	bl	124e8 <BN_get_word@plt>
   34280:	stm	fp, {r0, r4}
   34284:	mov	r0, sl
   34288:	bl	12584 <BN_num_bits@plt>
   3428c:	cmp	r0, #32
   34290:	bgt	343f0 <crc32@@Base+0x1aca8>
   34294:	ldr	r3, [sp, #20]
   34298:	mov	r0, r6
   3429c:	ldr	r1, [r3, #16]
   342a0:	bl	126f8 <BN_copy@plt>
   342a4:	cmp	r0, #0
   342a8:	beq	342c0 <crc32@@Base+0x1ab78>
   342ac:	mov	r1, #1
   342b0:	ldr	r0, [sp, #24]
   342b4:	bl	124ac <BN_set_word@plt>
   342b8:	cmp	r0, #0
   342bc:	bne	34448 <crc32@@Base+0x1ad00>
   342c0:	mvn	r4, #0
   342c4:	ldr	sl, [sp, #16]
   342c8:	mov	r1, r9
   342cc:	ldr	r2, [sp, #12]
   342d0:	mov	r0, r7
   342d4:	mov	r3, sl
   342d8:	bl	12428 <BN_exp@plt>
   342dc:	mov	r3, sl
   342e0:	mov	r2, r7
   342e4:	mov	r1, r6
   342e8:	cmp	r0, #0
   342ec:	mov	r0, r5
   342f0:	mvneq	r4, #0
   342f4:	bl	1241c <BN_mod_inverse@plt>
   342f8:	cmp	r0, #0
   342fc:	beq	34318 <crc32@@Base+0x1abd0>
   34300:	mov	r2, r5
   34304:	mov	r1, r7
   34308:	mov	r0, r5
   3430c:	bl	12350 <BN_sub@plt>
   34310:	cmp	r0, #0
   34314:	bne	3431c <crc32@@Base+0x1abd4>
   34318:	mvn	r4, #0
   3431c:	mov	r0, r5
   34320:	bl	124e8 <BN_get_word@plt>
   34324:	ldr	r3, [sp, #28]
   34328:	str	r0, [r3]
   3432c:	mov	r0, r6
   34330:	bl	12584 <BN_num_bits@plt>
   34334:	mov	r1, r0
   34338:	mov	r0, r5
   3433c:	bl	124ac <BN_set_word@plt>
   34340:	cmp	r0, #0
   34344:	bne	34428 <crc32@@Base+0x1ace0>
   34348:	mvn	r4, #0
   3434c:	mov	r1, r8
   34350:	ldr	r0, [sp, #8]
   34354:	bl	126f8 <BN_copy@plt>
   34358:	cmp	r0, #0
   3435c:	beq	3437c <crc32@@Base+0x1ac34>
   34360:	ldr	r3, [sp, #16]
   34364:	mov	r2, r8
   34368:	ldr	r1, [sp, #8]
   3436c:	mov	r0, r5
   34370:	bl	1262c <BN_mul@plt>
   34374:	cmp	r0, #0
   34378:	bne	34474 <crc32@@Base+0x1ad2c>
   3437c:	ldr	r3, [sp, #32]
   34380:	ldr	r2, [sp, #8]
   34384:	ldr	r0, [sp, #24]
   34388:	str	r6, [r3]
   3438c:	ldr	r3, [sp, #88]	; 0x58
   34390:	str	r2, [r3]
   34394:	bl	12248 <BN_free@plt>
   34398:	mov	r0, r9
   3439c:	bl	12248 <BN_free@plt>
   343a0:	ldr	r0, [sp, #12]
   343a4:	bl	12248 <BN_free@plt>
   343a8:	mov	r0, r8
   343ac:	bl	12248 <BN_free@plt>
   343b0:	mov	r0, r5
   343b4:	bl	12248 <BN_free@plt>
   343b8:	mov	r0, r7
   343bc:	bl	12248 <BN_free@plt>
   343c0:	movw	r3, #65044	; 0xfe14
   343c4:	movt	r3, #4
   343c8:	movw	r0, #55136	; 0xd760
   343cc:	mov	r2, #25
   343d0:	ldr	r3, [r3]
   343d4:	movt	r0, #3
   343d8:	mov	r1, #1
   343dc:	mvn	r4, #11
   343e0:	bl	12578 <fwrite@plt>
   343e4:	mov	r0, r4
   343e8:	add	sp, sp, #52	; 0x34
   343ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   343f0:	mov	r0, sl
   343f4:	bl	12164 <BN_dup@plt>
   343f8:	subs	r3, r0, #0
   343fc:	str	r3, [sp, #36]	; 0x24
   34400:	beq	344e8 <crc32@@Base+0x1ada0>
   34404:	mov	r2, #32
   34408:	mov	r1, r3
   3440c:	bl	12644 <BN_rshift@plt>
   34410:	cmp	r0, #0
   34414:	bne	34518 <crc32@@Base+0x1add0>
   34418:	mvn	r4, #0
   3441c:	ldr	r0, [sp, #36]	; 0x24
   34420:	bl	12248 <BN_free@plt>
   34424:	b	34294 <crc32@@Base+0x1ab4c>
   34428:	ldr	r3, [sp, #16]
   3442c:	mov	r2, r5
   34430:	mov	r1, r9
   34434:	mov	r0, r8
   34438:	bl	12428 <BN_exp@plt>
   3443c:	cmp	r0, #0
   34440:	bne	3434c <crc32@@Base+0x1ac04>
   34444:	b	34348 <crc32@@Base+0x1ac00>
   34448:	mov	r1, #2
   3444c:	mov	r0, r9
   34450:	bl	124ac <BN_set_word@plt>
   34454:	cmp	r0, #0
   34458:	beq	342c0 <crc32@@Base+0x1ab78>
   3445c:	mov	r1, #32
   34460:	ldr	r0, [sp, #12]
   34464:	bl	124ac <BN_set_word@plt>
   34468:	cmp	r0, #0
   3446c:	bne	342c4 <crc32@@Base+0x1ab7c>
   34470:	b	342c0 <crc32@@Base+0x1ab78>
   34474:	ldr	r3, [sp, #16]
   34478:	mov	r2, r5
   3447c:	ldr	r1, [sp, #8]
   34480:	mov	r0, #0
   34484:	str	r3, [sp]
   34488:	mov	r3, r6
   3448c:	bl	12374 <BN_div@plt>
   34490:	cmp	r0, #0
   34494:	beq	3437c <crc32@@Base+0x1ac34>
   34498:	ldr	r3, [sp, #32]
   3449c:	ldr	r2, [sp, #8]
   344a0:	ldr	r0, [sp, #24]
   344a4:	str	r6, [r3]
   344a8:	ldr	r3, [sp, #88]	; 0x58
   344ac:	str	r2, [r3]
   344b0:	bl	12248 <BN_free@plt>
   344b4:	mov	r0, r9
   344b8:	bl	12248 <BN_free@plt>
   344bc:	ldr	r0, [sp, #12]
   344c0:	bl	12248 <BN_free@plt>
   344c4:	mov	r0, r8
   344c8:	bl	12248 <BN_free@plt>
   344cc:	mov	r0, r5
   344d0:	bl	12248 <BN_free@plt>
   344d4:	mov	r0, r7
   344d8:	bl	12248 <BN_free@plt>
   344dc:	cmp	r4, #0
   344e0:	beq	343e4 <crc32@@Base+0x1ac9c>
   344e4:	b	343c0 <crc32@@Base+0x1ac78>
   344e8:	mvn	r4, #0
   344ec:	b	34294 <crc32@@Base+0x1ab4c>
   344f0:	movw	r3, #65044	; 0xfe14
   344f4:	movt	r3, #4
   344f8:	movw	r0, #54824	; 0xd628
   344fc:	mov	r2, #23
   34500:	ldr	r3, [r3]
   34504:	mov	r1, #1
   34508:	movt	r0, #3
   3450c:	mvn	r4, #11
   34510:	bl	12578 <fwrite@plt>
   34514:	b	343e4 <crc32@@Base+0x1ac9c>
   34518:	mov	r1, #32
   3451c:	ldr	r0, [sp, #36]	; 0x24
   34520:	bl	12668 <BN_mask_bits@plt>
   34524:	cmp	r0, #0
   34528:	beq	34418 <crc32@@Base+0x1acd0>
   3452c:	ldr	r0, [sp, #36]	; 0x24
   34530:	bl	124e8 <BN_get_word@plt>
   34534:	ldrd	r2, [fp]
   34538:	mov	r1, #0
   3453c:	str	r1, [sp, #40]	; 0x28
   34540:	mov	ip, fp
   34544:	mov	r1, r3
   34548:	str	r0, [sp, #44]	; 0x2c
   3454c:	mov	r0, r2
   34550:	ldrd	r2, [sp, #40]	; 0x28
   34554:	orr	sl, r2, r0
   34558:	orr	fp, r3, r1
   3455c:	mov	r4, r2
   34560:	mov	r0, sl
   34564:	mov	r1, fp
   34568:	strd	r0, [ip]
   3456c:	b	3441c <crc32@@Base+0x1acd4>
   34570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34574:	movw	r4, #61168	; 0xeef0
   34578:	movt	r4, #4
   3457c:	mov	r5, r0
   34580:	ldr	r0, [r0, #44]	; 0x2c
   34584:	sub	sp, sp, #1104	; 0x450
   34588:	ldr	r3, [r4]
   3458c:	sub	sp, sp, #12
   34590:	mov	r2, #0
   34594:	cmp	r0, r2
   34598:	mov	r7, r1
   3459c:	str	r2, [sp, #60]	; 0x3c
   345a0:	str	r3, [sp, #1108]	; 0x454
   345a4:	beq	346d4 <crc32@@Base+0x1af8c>
   345a8:	add	r6, sp, #72	; 0x48
   345ac:	sub	r1, r6, #12
   345b0:	bl	33898 <crc32@@Base+0x1a150>
   345b4:	subs	r8, r0, #0
   345b8:	bne	346b4 <crc32@@Base+0x1af6c>
   345bc:	ldr	sl, [sp, #60]	; 0x3c
   345c0:	ldr	r8, [r5]
   345c4:	cmp	sl, #0
   345c8:	ldr	fp, [r5, #4]
   345cc:	beq	346d8 <crc32@@Base+0x1af90>
   345d0:	mov	r0, sl
   345d4:	bl	12170 <ENGINE_get_id@plt>
   345d8:	cmp	r0, #0
   345dc:	beq	349c0 <crc32@@Base+0x1b278>
   345e0:	movw	r1, #54564	; 0xd524
   345e4:	movt	r1, #3
   345e8:	bl	1265c <strcmp@plt>
   345ec:	cmp	r0, #0
   345f0:	bne	349c0 <crc32@@Base+0x1b278>
   345f4:	cmp	r8, #0
   345f8:	add	r9, sp, #84	; 0x54
   345fc:	mov	r3, #1024	; 0x400
   34600:	beq	348dc <crc32@@Base+0x1b194>
   34604:	movw	r2, #55164	; 0xd77c
   34608:	str	fp, [sp, #8]
   3460c:	movt	r2, #3
   34610:	str	r8, [sp, #4]
   34614:	str	r2, [sp]
   34618:	mov	r0, r9
   3461c:	mov	r1, r3
   34620:	mov	r2, #1
   34624:	bl	125cc <__snprintf_chk@plt>
   34628:	mov	r3, #0
   3462c:	mov	r0, sl
   34630:	mov	r2, r3
   34634:	mov	r1, r9
   34638:	bl	12110 <ENGINE_load_public_key@plt>
   3463c:	subs	r8, r0, #0
   34640:	beq	34900 <crc32@@Base+0x1b1b8>
   34644:	bl	1229c <EVP_PKEY_get1_RSA@plt>
   34648:	subs	r3, r0, #0
   3464c:	str	r3, [sp, #20]
   34650:	beq	34c30 <crc32@@Base+0x1b4e8>
   34654:	mov	r0, r8
   34658:	bl	120b0 <EVP_PKEY_free@plt>
   3465c:	add	r3, sp, #56	; 0x38
   34660:	add	r2, sp, #52	; 0x34
   34664:	sub	r1, r6, #8
   34668:	str	r2, [sp]
   3466c:	sub	r3, r3, #8
   34670:	add	r2, sp, #56	; 0x38
   34674:	ldr	r0, [sp, #20]
   34678:	bl	341b4 <crc32@@Base+0x1aa6c>
   3467c:	subs	r8, r0, #0
   34680:	beq	3477c <crc32@@Base+0x1b034>
   34684:	ldr	r0, [sp, #20]
   34688:	bl	12440 <RSA_free@plt>
   3468c:	ldr	r3, [r5, #44]	; 0x2c
   34690:	cmp	r3, #0
   34694:	beq	346b4 <crc32@@Base+0x1af6c>
   34698:	ldr	r5, [sp, #60]	; 0x3c
   3469c:	cmp	r5, #0
   346a0:	beq	346b4 <crc32@@Base+0x1af6c>
   346a4:	mov	r0, r5
   346a8:	bl	12104 <ENGINE_finish@plt>
   346ac:	mov	r0, r5
   346b0:	bl	121a0 <ENGINE_free@plt>
   346b4:	ldr	r2, [sp, #1108]	; 0x454
   346b8:	mov	r0, r8
   346bc:	ldr	r3, [r4]
   346c0:	cmp	r2, r3
   346c4:	bne	34cd4 <crc32@@Base+0x1b58c>
   346c8:	add	sp, sp, #1104	; 0x450
   346cc:	add	sp, sp, #12
   346d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   346d4:	ldm	r5, {r8, fp}
   346d8:	add	r9, sp, #84	; 0x54
   346dc:	mov	r3, #1024	; 0x400
   346e0:	mov	r1, r3
   346e4:	str	r8, [sp, #4]
   346e8:	str	fp, [sp, #8]
   346ec:	movw	r2, #55268	; 0xd7e4
   346f0:	mov	r0, r9
   346f4:	movt	r2, #3
   346f8:	str	r2, [sp]
   346fc:	mov	r2, #1
   34700:	bl	125cc <__snprintf_chk@plt>
   34704:	mov	r0, r9
   34708:	movw	r1, #49448	; 0xc128
   3470c:	movt	r1, #3
   34710:	bl	1232c <fopen@plt>
   34714:	subs	r8, r0, #0
   34718:	beq	34c4c <crc32@@Base+0x1b504>
   3471c:	add	r6, sp, #1104	; 0x450
   34720:	mov	r3, #0
   34724:	add	r6, r6, #8
   34728:	mov	r2, r3
   3472c:	str	r3, [r6, #-1040]!	; 0xfffffbf0
   34730:	mov	r1, r6
   34734:	bl	120bc <PEM_read_X509@plt>
   34738:	cmp	r0, #0
   3473c:	beq	34c88 <crc32@@Base+0x1b540>
   34740:	ldr	r0, [sp, #72]	; 0x48
   34744:	bl	126b0 <X509_get_pubkey@plt>
   34748:	subs	fp, r0, #0
   3474c:	beq	34ca4 <crc32@@Base+0x1b55c>
   34750:	bl	1229c <EVP_PKEY_get1_RSA@plt>
   34754:	subs	r3, r0, #0
   34758:	str	r3, [sp, #20]
   3475c:	beq	34cbc <crc32@@Base+0x1b574>
   34760:	mov	r0, r8
   34764:	bl	125fc <fclose@plt>
   34768:	mov	r0, fp
   3476c:	bl	120b0 <EVP_PKEY_free@plt>
   34770:	ldr	r0, [sp, #72]	; 0x48
   34774:	bl	1250c <X509_free@plt>
   34778:	b	3465c <crc32@@Base+0x1af14>
   3477c:	ldr	r0, [sp, #48]	; 0x30
   34780:	bl	12584 <BN_num_bits@plt>
   34784:	mov	r1, r8
   34788:	movw	r2, #28952	; 0x7118
   3478c:	movt	r2, #3
   34790:	str	r0, [sp, #28]
   34794:	mov	r0, r7
   34798:	bl	30bc4 <crc32@@Base+0x1747c>
   3479c:	cmn	r0, #1
   347a0:	mov	r8, r0
   347a4:	beq	34970 <crc32@@Base+0x1b228>
   347a8:	ldr	r0, [r5, #4]
   347ac:	mov	r3, #100	; 0x64
   347b0:	mov	r1, r3
   347b4:	movw	r2, #55416	; 0xd878
   347b8:	movt	r2, #3
   347bc:	str	r2, [sp]
   347c0:	str	r0, [sp, #4]
   347c4:	mov	r2, #1
   347c8:	mov	r0, r9
   347cc:	bl	125cc <__snprintf_chk@plt>
   347d0:	mov	r2, r9
   347d4:	mov	r1, r8
   347d8:	mov	r0, r7
   347dc:	bl	30bc4 <crc32@@Base+0x1747c>
   347e0:	cmn	r0, #1
   347e4:	str	r0, [sp, #24]
   347e8:	beq	3491c <crc32@@Base+0x1b1d4>
   347ec:	ldr	r3, [sp, #24]
   347f0:	cmp	r3, #0
   347f4:	blt	34be8 <crc32@@Base+0x1b4a0>
   347f8:	ldr	r8, [r5, #4]
   347fc:	mov	r0, r8
   34800:	bl	125c0 <strlen@plt>
   34804:	ldr	sl, [sp, #24]
   34808:	mov	r3, r8
   3480c:	movw	r2, #27900	; 0x6cfc
   34810:	movt	r2, #3
   34814:	mov	r1, sl
   34818:	add	r0, r0, #1
   3481c:	str	r0, [sp]
   34820:	mov	r0, r7
   34824:	bl	2efa8 <crc32@@Base+0x15860>
   34828:	subs	r8, r0, #0
   3482c:	bne	348bc <crc32@@Base+0x1b174>
   34830:	ldr	r2, [sp, #28]
   34834:	mov	r9, #4
   34838:	mov	r1, sl
   3483c:	str	r9, [sp]
   34840:	ubfx	r0, r2, #8, #8
   34844:	ubfx	ip, r2, #16, #8
   34848:	lsr	r3, r2, #24
   3484c:	orr	r3, r3, r2, lsl #24
   34850:	movw	r2, #55492	; 0xd8c4
   34854:	orr	r0, r3, r0, lsl #16
   34858:	movt	r2, #3
   3485c:	orr	ip, r0, ip, lsl #8
   34860:	mov	r3, r6
   34864:	mov	r0, r7
   34868:	str	ip, [sp, #72]	; 0x48
   3486c:	bl	2efa8 <crc32@@Base+0x15860>
   34870:	subs	r8, r0, #0
   34874:	bne	348bc <crc32@@Base+0x1b174>
   34878:	ldr	r3, [sp, #56]	; 0x38
   3487c:	movw	r2, #55508	; 0xd8d4
   34880:	str	r9, [sp]
   34884:	movt	r2, #3
   34888:	ubfx	r1, r3, #8, #8
   3488c:	ubfx	r0, r3, #16, #8
   34890:	lsr	ip, r3, #24
   34894:	orr	ip, ip, r3, lsl #24
   34898:	mov	r3, r6
   3489c:	orr	ip, ip, r1, lsl #16
   348a0:	mov	r1, sl
   348a4:	orr	ip, ip, r0, lsl #8
   348a8:	mov	r0, r7
   348ac:	str	ip, [sp, #72]	; 0x48
   348b0:	bl	2efa8 <crc32@@Base+0x15860>
   348b4:	subs	r8, r0, #0
   348b8:	beq	349e8 <crc32@@Base+0x1b2a0>
   348bc:	ldr	r0, [sp, #48]	; 0x30
   348c0:	bl	12248 <BN_free@plt>
   348c4:	ldr	r0, [sp, #52]	; 0x34
   348c8:	bl	12248 <BN_free@plt>
   348cc:	cmn	r8, #3
   348d0:	mvnne	r8, #4
   348d4:	mvneq	r8, #27
   348d8:	b	34684 <crc32@@Base+0x1af3c>
   348dc:	str	fp, [sp, #4]
   348e0:	movw	r2, #55196	; 0xd79c
   348e4:	mov	r0, r9
   348e8:	movt	r2, #3
   348ec:	mov	r1, r3
   348f0:	str	r2, [sp]
   348f4:	mov	r2, #1
   348f8:	bl	125cc <__snprintf_chk@plt>
   348fc:	b	34628 <crc32@@Base+0x1aee0>
   34900:	movw	r0, #55228	; 0xd7bc
   34904:	movt	r0, #3
   34908:	bl	33964 <crc32@@Base+0x1a21c>
   3490c:	subs	r8, r0, #0
   34910:	streq	r8, [sp, #20]
   34914:	bne	3468c <crc32@@Base+0x1af44>
   34918:	b	3465c <crc32@@Base+0x1af14>
   3491c:	mov	r2, r9
   34920:	mov	r1, r8
   34924:	mov	r0, r7
   34928:	bl	2f2fc <crc32@@Base+0x15bb4>
   3492c:	subs	r3, r0, #0
   34930:	str	r3, [sp, #24]
   34934:	bge	347f8 <crc32@@Base+0x1b0b0>
   34938:	cmn	r3, #3
   3493c:	mov	r8, r3
   34940:	beq	34c18 <crc32@@Base+0x1b4d0>
   34944:	movw	r3, #65044	; 0xfe14
   34948:	movt	r3, #4
   3494c:	ldr	r6, [r3]
   34950:	bl	2f7b0 <crc32@@Base+0x16068>
   34954:	movw	r2, #55424	; 0xd880
   34958:	mov	r1, #1
   3495c:	movt	r2, #3
   34960:	mov	r3, r0
   34964:	mov	r0, r6
   34968:	bl	122b4 <__fprintf_chk@plt>
   3496c:	b	348bc <crc32@@Base+0x1b174>
   34970:	movw	r2, #28952	; 0x7118
   34974:	mov	r1, #0
   34978:	movt	r2, #3
   3497c:	mov	r0, r7
   34980:	bl	2f2fc <crc32@@Base+0x15bb4>
   34984:	subs	r8, r0, #0
   34988:	bge	347a8 <crc32@@Base+0x1b060>
   3498c:	cmn	r8, #3
   34990:	beq	34c18 <crc32@@Base+0x1b4d0>
   34994:	movw	r3, #65044	; 0xfe14
   34998:	movt	r3, #4
   3499c:	ldr	r6, [r3]
   349a0:	bl	2f7b0 <crc32@@Base+0x16068>
   349a4:	movw	r2, #55380	; 0xd854
   349a8:	mov	r1, #1
   349ac:	movt	r2, #3
   349b0:	mov	r3, r0
   349b4:	mov	r0, r6
   349b8:	bl	122b4 <__fprintf_chk@plt>
   349bc:	b	348bc <crc32@@Base+0x1b174>
   349c0:	movw	r3, #65044	; 0xfe14
   349c4:	movt	r3, #4
   349c8:	movw	r0, #54640	; 0xd570
   349cc:	mov	r2, #21
   349d0:	ldr	r3, [r3]
   349d4:	mov	r1, #1
   349d8:	movt	r0, #3
   349dc:	mvn	r8, #94	; 0x5e
   349e0:	bl	12578 <fwrite@plt>
   349e4:	b	3468c <crc32@@Base+0x1af44>
   349e8:	ldmdb	r6, {r9, sl}
   349ec:	mov	r0, r8
   349f0:	str	r8, [sp, #32]
   349f4:	ubfx	lr, r9, #8, #8
   349f8:	lsl	r3, r9, #24
   349fc:	ubfx	ip, r9, #16, #8
   34a00:	str	r8, [sp, #40]	; 0x28
   34a04:	mov	r1, r3
   34a08:	lsl	r3, lr, #16
   34a0c:	str	r3, [sp, #36]	; 0x24
   34a10:	lsr	lr, sl, #24
   34a14:	lsl	r3, ip, #8
   34a18:	str	r3, [sp, #44]	; 0x2c
   34a1c:	ldrd	r2, [sp, #32]
   34a20:	orr	r0, r0, lr
   34a24:	str	r8, [sp, #32]
   34a28:	ubfx	lr, sl, #8, #8
   34a2c:	orr	r2, r2, r0
   34a30:	orr	r3, r3, r1
   34a34:	ubfx	ip, sl, #16, #8
   34a38:	mov	r0, r2
   34a3c:	mov	r1, r3
   34a40:	lsr	r3, r9, #24
   34a44:	str	r3, [sp, #36]	; 0x24
   34a48:	ldrd	r2, [sp, #40]	; 0x28
   34a4c:	orr	r2, r2, r0
   34a50:	orr	r3, r3, r1
   34a54:	mov	r0, r2
   34a58:	mov	r1, r3
   34a5c:	uxtb	r2, sl
   34a60:	mov	r3, #0
   34a64:	strd	r2, [sp, #40]	; 0x28
   34a68:	ldrd	r2, [sp, #32]
   34a6c:	orr	r2, r2, r0
   34a70:	orr	r3, r3, r1
   34a74:	ldrd	r0, [sp, #40]	; 0x28
   34a78:	mov	r1, #0
   34a7c:	lsr	fp, r0, #8
   34a80:	lsl	sl, r0, #24
   34a84:	uxtb	r0, lr
   34a88:	strd	r0, [sp, #32]
   34a8c:	orr	r2, r2, sl
   34a90:	orr	r3, r3, fp
   34a94:	strd	r2, [sp, #40]	; 0x28
   34a98:	uxtb	r2, ip
   34a9c:	ldr	ip, [sp, #32]
   34aa0:	ldrd	r8, [sp, #40]	; 0x28
   34aa4:	lsl	r3, r2, #8
   34aa8:	lsr	r1, ip, #16
   34aac:	lsl	r0, ip, #16
   34ab0:	orr	r8, r8, r0
   34ab4:	lsr	ip, r2, #24
   34ab8:	orr	r9, r9, r1
   34abc:	mov	sl, r3
   34ac0:	orr	fp, ip, r9
   34ac4:	orr	sl, sl, r8
   34ac8:	mov	r1, #8
   34acc:	mov	r3, r6
   34ad0:	str	r1, [sp]
   34ad4:	mov	r8, sl
   34ad8:	movw	r2, #55524	; 0xd8e4
   34adc:	ldr	r1, [sp, #24]
   34ae0:	movt	r2, #3
   34ae4:	mov	r0, r7
   34ae8:	mov	r9, fp
   34aec:	strd	r8, [r6]
   34af0:	bl	2efa8 <crc32@@Base+0x15860>
   34af4:	subs	r8, r0, #0
   34af8:	bne	348bc <crc32@@Base+0x1b174>
   34afc:	ldr	r6, [sp, #28]
   34b00:	movw	r2, #55540	; 0xd8f4
   34b04:	ldr	r9, [sp, #24]
   34b08:	movt	r2, #3
   34b0c:	ldr	r3, [sp, #48]	; 0x30
   34b10:	mov	r0, r7
   34b14:	str	r6, [sp]
   34b18:	mov	r1, r9
   34b1c:	bl	33c20 <crc32@@Base+0x1a4d8>
   34b20:	subs	r8, r0, #0
   34b24:	bne	348bc <crc32@@Base+0x1b174>
   34b28:	ldr	r3, [sp, #52]	; 0x34
   34b2c:	movw	r2, #55552	; 0xd900
   34b30:	str	r6, [sp]
   34b34:	movt	r2, #3
   34b38:	mov	r1, r9
   34b3c:	mov	r0, r7
   34b40:	bl	33c20 <crc32@@Base+0x1a4d8>
   34b44:	subs	r8, r0, #0
   34b48:	bne	348bc <crc32@@Base+0x1b174>
   34b4c:	ldr	r6, [r5, #16]
   34b50:	mov	r0, r6
   34b54:	bl	125c0 <strlen@plt>
   34b58:	mov	r3, r6
   34b5c:	movw	r2, #29532	; 0x735c
   34b60:	mov	r1, r9
   34b64:	movt	r2, #3
   34b68:	add	r0, r0, #1
   34b6c:	str	r0, [sp]
   34b70:	mov	r0, r7
   34b74:	bl	2efa8 <crc32@@Base+0x15860>
   34b78:	subs	r8, r0, #0
   34b7c:	bne	348bc <crc32@@Base+0x1b174>
   34b80:	ldr	r6, [r5, #40]	; 0x28
   34b84:	cmp	r6, #0
   34b88:	beq	34bd4 <crc32@@Base+0x1b48c>
   34b8c:	mov	r0, r6
   34b90:	bl	125c0 <strlen@plt>
   34b94:	mov	r3, r6
   34b98:	ldr	r1, [sp, #24]
   34b9c:	movw	r2, #29540	; 0x7364
   34ba0:	movt	r2, #3
   34ba4:	add	ip, r0, #1
   34ba8:	mov	r0, r7
   34bac:	str	ip, [sp]
   34bb0:	bl	2efa8 <crc32@@Base+0x15860>
   34bb4:	mov	r8, r0
   34bb8:	ldr	r0, [sp, #48]	; 0x30
   34bbc:	bl	12248 <BN_free@plt>
   34bc0:	ldr	r0, [sp, #52]	; 0x34
   34bc4:	bl	12248 <BN_free@plt>
   34bc8:	cmp	r8, #0
   34bcc:	beq	34684 <crc32@@Base+0x1af3c>
   34bd0:	b	348cc <crc32@@Base+0x1b184>
   34bd4:	ldr	r0, [sp, #48]	; 0x30
   34bd8:	bl	12248 <BN_free@plt>
   34bdc:	ldr	r0, [sp, #52]	; 0x34
   34be0:	bl	12248 <BN_free@plt>
   34be4:	b	34684 <crc32@@Base+0x1af3c>
   34be8:	movw	r3, #65044	; 0xfe14
   34bec:	movt	r3, #4
   34bf0:	ldr	r8, [sp, #24]
   34bf4:	ldr	r6, [r3]
   34bf8:	bl	2f7b0 <crc32@@Base+0x16068>
   34bfc:	movw	r2, #55460	; 0xd8a4
   34c00:	mov	r1, #1
   34c04:	movt	r2, #3
   34c08:	mov	r3, r0
   34c0c:	mov	r0, r6
   34c10:	bl	122b4 <__fprintf_chk@plt>
   34c14:	b	348bc <crc32@@Base+0x1b174>
   34c18:	ldr	r0, [sp, #48]	; 0x30
   34c1c:	mvn	r8, #27
   34c20:	bl	12248 <BN_free@plt>
   34c24:	ldr	r0, [sp, #52]	; 0x34
   34c28:	bl	12248 <BN_free@plt>
   34c2c:	b	34684 <crc32@@Base+0x1af3c>
   34c30:	movw	r0, #54704	; 0xd5b0
   34c34:	movt	r0, #3
   34c38:	bl	33964 <crc32@@Base+0x1a21c>
   34c3c:	mov	r0, r8
   34c40:	bl	120b0 <EVP_PKEY_free@plt>
   34c44:	mvn	r8, #21
   34c48:	b	3468c <crc32@@Base+0x1af44>
   34c4c:	movw	r3, #65044	; 0xfe14
   34c50:	movt	r3, #4
   34c54:	mvn	r8, #12
   34c58:	ldr	r6, [r3]
   34c5c:	bl	1268c <__errno_location@plt>
   34c60:	ldr	r0, [r0]
   34c64:	bl	12200 <strerror@plt>
   34c68:	mov	r3, r9
   34c6c:	movw	r2, #55280	; 0xd7f0
   34c70:	mov	r1, #1
   34c74:	movt	r2, #3
   34c78:	str	r0, [sp]
   34c7c:	mov	r0, r6
   34c80:	bl	122b4 <__fprintf_chk@plt>
   34c84:	b	3468c <crc32@@Base+0x1af44>
   34c88:	movw	r0, #55324	; 0xd81c
   34c8c:	movt	r0, #3
   34c90:	bl	33964 <crc32@@Base+0x1a21c>
   34c94:	mov	r0, r8
   34c98:	mvn	r8, #21
   34c9c:	bl	125fc <fclose@plt>
   34ca0:	b	3468c <crc32@@Base+0x1af44>
   34ca4:	movw	r0, #55352	; 0xd838
   34ca8:	movt	r0, #3
   34cac:	bl	33964 <crc32@@Base+0x1a21c>
   34cb0:	ldr	r0, [sp, #72]	; 0x48
   34cb4:	bl	1250c <X509_free@plt>
   34cb8:	b	34c94 <crc32@@Base+0x1b54c>
   34cbc:	movw	r0, #54704	; 0xd5b0
   34cc0:	movt	r0, #3
   34cc4:	bl	33964 <crc32@@Base+0x1a21c>
   34cc8:	mov	r0, fp
   34ccc:	bl	120b0 <EVP_PKEY_free@plt>
   34cd0:	b	34cb0 <crc32@@Base+0x1b568>
   34cd4:	bl	12494 <__stack_chk_fail@plt>
   34cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34cdc:	add	fp, sp, #32
   34ce0:	movw	r5, #61168	; 0xeef0
   34ce4:	sub	sp, sp, #52	; 0x34
   34ce8:	movt	r5, #4
   34cec:	ldr	r8, [fp, #4]
   34cf0:	mov	r4, r0
   34cf4:	ldr	r0, [r5]
   34cf8:	cmp	r8, #0
   34cfc:	ldr	sl, [r4, #32]
   34d00:	str	r0, [fp, #-40]	; 0xffffffd8
   34d04:	blt	34ea8 <crc32@@Base+0x1b760>
   34d08:	mov	r9, r1
   34d0c:	mov	r7, r2
   34d10:	mov	r1, r8
   34d14:	mov	r6, r3
   34d18:	movw	r2, #55492	; 0xd8c4
   34d1c:	mov	r3, #0
   34d20:	movt	r2, #3
   34d24:	mov	r0, sl
   34d28:	bl	19a94 <crc32@@Base+0x34c>
   34d2c:	mov	r3, #0
   34d30:	mov	r1, r8
   34d34:	movw	r2, #55508	; 0xd8d4
   34d38:	movt	r2, #3
   34d3c:	str	r0, [fp, #-48]	; 0xffffffd0
   34d40:	mov	r0, sl
   34d44:	bl	19a94 <crc32@@Base+0x34c>
   34d48:	movw	r2, #55524	; 0xd8e4
   34d4c:	sub	r3, fp, #68	; 0x44
   34d50:	movt	r2, #3
   34d54:	mov	r1, r8
   34d58:	str	r0, [fp, #-52]	; 0xffffffcc
   34d5c:	mov	r0, sl
   34d60:	bl	30ef4 <crc32@@Base+0x177ac>
   34d64:	cmp	r0, #0
   34d68:	str	r0, [fp, #-56]	; 0xffffffc8
   34d6c:	beq	34e84 <crc32@@Base+0x1b73c>
   34d70:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34d74:	cmp	r3, #7
   34d78:	bls	34e84 <crc32@@Base+0x1b73c>
   34d7c:	mov	r3, #0
   34d80:	mov	r1, r8
   34d84:	movw	r2, #55540	; 0xd8f4
   34d88:	mov	r0, sl
   34d8c:	movt	r2, #3
   34d90:	mov	ip, #8
   34d94:	str	ip, [fp, #-44]	; 0xffffffd4
   34d98:	bl	30ef4 <crc32@@Base+0x177ac>
   34d9c:	mov	r3, #0
   34da0:	mov	r1, r8
   34da4:	movw	r2, #55552	; 0xd900
   34da8:	movt	r2, #3
   34dac:	str	r0, [fp, #-60]	; 0xffffffc4
   34db0:	mov	r0, sl
   34db4:	bl	30ef4 <crc32@@Base+0x177ac>
   34db8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   34dbc:	cmp	r3, #0
   34dc0:	str	r0, [fp, #-64]	; 0xffffffc0
   34dc4:	beq	34ea0 <crc32@@Base+0x1b758>
   34dc8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   34dcc:	cmp	r2, #0
   34dd0:	beq	34ea0 <crc32@@Base+0x1b758>
   34dd4:	ldr	r2, [r4, #28]
   34dd8:	cmp	r7, #0
   34ddc:	ldr	r1, [r4, #24]
   34de0:	mov	r8, sp
   34de4:	ldr	ip, [r4, #20]
   34de8:	ldr	sl, [r2, #4]
   34dec:	str	r1, [fp, #-72]	; 0xffffffb8
   34df0:	beq	34e98 <crc32@@Base+0x1b750>
   34df4:	cmp	ip, #0
   34df8:	beq	34e98 <crc32@@Base+0x1b750>
   34dfc:	cmp	r3, #0
   34e00:	add	r2, r3, #7
   34e04:	movlt	r3, r2
   34e08:	asr	r3, r3, #3
   34e0c:	cmp	r6, #512	; 0x200
   34e10:	cmpls	r3, r6
   34e14:	bne	34e90 <crc32@@Base+0x1b748>
   34e18:	add	r3, r6, #7
   34e1c:	mov	r1, r6
   34e20:	bic	r3, r3, #7
   34e24:	mov	r0, r7
   34e28:	sub	sp, sp, r3
   34e2c:	sub	r2, fp, #64	; 0x40
   34e30:	add	r6, sp, #8
   34e34:	ldr	r7, [ip, #4]
   34e38:	mov	r3, r6
   34e3c:	bl	357d0 <crc32@@Base+0x1c088>
   34e40:	cmp	r0, #0
   34e44:	bne	34e68 <crc32@@Base+0x1b720>
   34e48:	str	r7, [sp]
   34e4c:	mov	r3, r9
   34e50:	ldr	r1, [fp, #-72]	; 0xffffffb8
   34e54:	mov	r2, sl
   34e58:	mov	r0, r4
   34e5c:	ldr	r7, [r1, #4]
   34e60:	mov	r1, r6
   34e64:	blx	r7
   34e68:	mov	sp, r8
   34e6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   34e70:	ldr	r3, [r5]
   34e74:	cmp	r2, r3
   34e78:	bne	34eb0 <crc32@@Base+0x1b768>
   34e7c:	sub	sp, fp, #32
   34e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34e84:	mov	r3, #0
   34e88:	str	r3, [fp, #-56]	; 0xffffffc8
   34e8c:	b	34d7c <crc32@@Base+0x1b634>
   34e90:	mvn	r0, #21
   34e94:	b	34e68 <crc32@@Base+0x1b720>
   34e98:	mvn	r0, #4
   34e9c:	b	34e68 <crc32@@Base+0x1b720>
   34ea0:	mvn	r0, #13
   34ea4:	b	34e6c <crc32@@Base+0x1b724>
   34ea8:	mvn	r0, #8
   34eac:	b	34e6c <crc32@@Base+0x1b724>
   34eb0:	bl	12494 <__stack_chk_fail@plt>
   34eb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34eb8:	add	sl, r1, #2
   34ebc:	ldr	fp, [r0, #20]
   34ec0:	sub	sp, sp, #12
   34ec4:	mov	r4, r1
   34ec8:	mov	r0, sl
   34ecc:	add	r1, r1, #3
   34ed0:	str	r3, [sp, #4]
   34ed4:	ldr	r7, [fp, #4]
   34ed8:	ldr	r8, [fp, #8]
   34edc:	sub	r6, r2, r7
   34ee0:	sub	r9, r6, r8
   34ee4:	sub	r2, r9, #4
   34ee8:	sub	r9, r9, #3
   34eec:	bl	126c8 <memcmp@plt>
   34ef0:	mov	r2, r8
   34ef4:	ldr	r1, [fp, #12]
   34ef8:	mov	r5, r0
   34efc:	add	r0, sl, r9
   34f00:	add	r0, r0, #1
   34f04:	bl	126c8 <memcmp@plt>
   34f08:	ldrb	r2, [r4, #1]
   34f0c:	ldrb	r3, [r4, #2]
   34f10:	eor	r2, r2, #1
   34f14:	ldrb	ip, [r4]
   34f18:	ldrb	r1, [sl, r9]
   34f1c:	mvn	r3, r3
   34f20:	orr	r2, r2, r3
   34f24:	orr	r2, r2, ip
   34f28:	orr	r2, r2, r1
   34f2c:	uxtb	r2, r2
   34f30:	orr	r0, r5, r0
   34f34:	orrs	r2, r2, r0
   34f38:	bne	34f5c <crc32@@Base+0x1b814>
   34f3c:	mov	r2, r7
   34f40:	ldr	r1, [sp, #4]
   34f44:	add	r0, r4, r6
   34f48:	bl	126c8 <memcmp@plt>
   34f4c:	cmp	r0, #0
   34f50:	mvnne	r0, #12
   34f54:	add	sp, sp, #12
   34f58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34f5c:	mvn	r0, #21
   34f60:	b	34f54 <crc32@@Base+0x1b80c>
   34f64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34f68:	sub	sp, sp, #76	; 0x4c
   34f6c:	mov	r7, r2
   34f70:	movw	ip, #61168	; 0xeef0
   34f74:	ldr	r2, [sp, #112]	; 0x70
   34f78:	movt	ip, #4
   34f7c:	str	ip, [sp, #20]
   34f80:	mov	r6, r1
   34f84:	sub	r2, r7, r2
   34f88:	ldr	ip, [ip]
   34f8c:	sub	r5, r2, #1
   34f90:	ldr	r9, [r0, #20]
   34f94:	sub	r4, r2, #2
   34f98:	str	r3, [sp, #28]
   34f9c:	mov	r0, r5
   34fa0:	mov	r3, #0
   34fa4:	str	ip, [sp, #68]	; 0x44
   34fa8:	str	r3, [sp, #64]	; 0x40
   34fac:	str	r3, [sp, #60]	; 0x3c
   34fb0:	str	r4, [sp, #24]
   34fb4:	bl	125a8 <malloc@plt>
   34fb8:	mov	r8, r0
   34fbc:	str	r0, [sp, #8]
   34fc0:	ldr	r0, [sp, #112]	; 0x70
   34fc4:	bl	125a8 <malloc@plt>
   34fc8:	mov	r1, #1
   34fcc:	mov	sl, r0
   34fd0:	str	r0, [sp, #4]
   34fd4:	mov	r0, r5
   34fd8:	bl	12518 <calloc@plt>
   34fdc:	mov	fp, r0
   34fe0:	mov	r0, r5
   34fe4:	bl	125a8 <malloc@plt>
   34fe8:	str	r0, [sp]
   34fec:	mov	r0, r4
   34ff0:	bl	125a8 <malloc@plt>
   34ff4:	str	r0, [sp, #12]
   34ff8:	ldr	r0, [sp, #112]	; 0x70
   34ffc:	bl	125a8 <malloc@plt>
   35000:	cmp	sl, #0
   35004:	cmpne	r8, #0
   35008:	str	r0, [sp, #16]
   3500c:	beq	35284 <crc32@@Base+0x1bb3c>
   35010:	ldr	r3, [sp]
   35014:	cmp	r3, #0
   35018:	cmpne	fp, #0
   3501c:	beq	35284 <crc32@@Base+0x1bb3c>
   35020:	ldr	r3, [sp, #12]
   35024:	clz	r4, r0
   35028:	cmp	r3, #0
   3502c:	lsr	r4, r4, #5
   35030:	moveq	r4, #1
   35034:	cmp	r4, #0
   35038:	bne	35284 <crc32@@Base+0x1bb3c>
   3503c:	add	r7, r6, r7
   35040:	ldrb	r3, [r7, #-1]
   35044:	cmp	r3, #188	; 0xbc
   35048:	bne	352a4 <crc32@@Base+0x1bb5c>
   3504c:	ldr	r7, [sp, #8]
   35050:	mov	r2, r5
   35054:	mov	r1, r6
   35058:	mov	r0, r7
   3505c:	bl	1259c <memcpy@plt>
   35060:	ldr	r2, [sp, #112]	; 0x70
   35064:	add	r1, r6, r5
   35068:	ldr	r0, [sp, #4]
   3506c:	bl	1259c <memcpy@plt>
   35070:	ldrb	r8, [r7]
   35074:	tst	r8, #128	; 0x80
   35078:	bne	352c4 <crc32@@Base+0x1bb7c>
   3507c:	ldr	r6, [r9, #4]
   35080:	add	r2, sp, #56	; 0x38
   35084:	ldr	r3, [sp, #4]
   35088:	ldr	r1, [sp, #112]	; 0x70
   3508c:	mov	r0, r6
   35090:	str	r3, [sp, #32]
   35094:	mov	r3, #4
   35098:	str	r1, [sp, #36]	; 0x24
   3509c:	strd	r2, [sp, #40]	; 0x28
   350a0:	bl	125a8 <malloc@plt>
   350a4:	subs	sl, r0, #0
   350a8:	beq	352f0 <crc32@@Base+0x1bba8>
   350ac:	cmp	r5, #0
   350b0:	ble	3527c <crc32@@Base+0x1bb34>
   350b4:	mov	r7, r4
   350b8:	strb	r7, [sp, #59]	; 0x3b
   350bc:	lsr	r2, r7, #24
   350c0:	lsr	r3, r7, #16
   350c4:	strb	r2, [sp, #56]	; 0x38
   350c8:	strb	r3, [sp, #57]	; 0x39
   350cc:	lsr	r2, r7, #8
   350d0:	mov	r3, sl
   350d4:	strb	r2, [sp, #58]	; 0x3a
   350d8:	add	r1, sp, #32
   350dc:	mov	r2, #2
   350e0:	ldr	r0, [r9]
   350e4:	ldr	ip, [r9, #20]
   350e8:	blx	ip
   350ec:	cmp	r0, #0
   350f0:	blt	35138 <crc32@@Base+0x1b9f0>
   350f4:	cmp	r5, r4
   350f8:	cmpgt	r6, #0
   350fc:	ble	3512c <crc32@@Base+0x1b9e4>
   35100:	sub	r3, r4, #1
   35104:	sub	r2, sl, #1
   35108:	add	r3, fp, r3
   3510c:	mov	ip, r4
   35110:	add	r4, r4, #1
   35114:	ldrb	r1, [r2, #1]!
   35118:	sub	r0, r4, ip
   3511c:	cmp	r6, r0
   35120:	cmpgt	r5, r4
   35124:	strb	r1, [r3, #1]!
   35128:	bgt	35110 <crc32@@Base+0x1b9c8>
   3512c:	cmp	r5, r4
   35130:	add	r7, r7, #1
   35134:	bgt	350b8 <crc32@@Base+0x1b970>
   35138:	mov	r0, sl
   3513c:	bl	12128 <free@plt>
   35140:	ldr	r3, [sp]
   35144:	sub	r0, fp, #1
   35148:	ldr	ip, [sp, #8]
   3514c:	mov	r2, #0
   35150:	sub	r1, r3, #1
   35154:	b	3515c <crc32@@Base+0x1ba14>
   35158:	ldrb	r8, [ip, #1]!
   3515c:	add	r2, r2, #1
   35160:	ldrb	r3, [r0, #1]!
   35164:	cmp	r5, r2
   35168:	eor	r3, r3, r8
   3516c:	strb	r3, [r1, #1]!
   35170:	bgt	35158 <crc32@@Base+0x1ba10>
   35174:	ldr	r2, [sp]
   35178:	ldrb	r3, [r2]
   3517c:	and	r3, r3, #127	; 0x7f
   35180:	strb	r3, [r2]
   35184:	cmp	r3, #1
   35188:	bne	35250 <crc32@@Base+0x1bb08>
   3518c:	ldr	r6, [sp, #24]
   35190:	ldr	r5, [sp, #12]
   35194:	ldr	r3, [sp]
   35198:	mov	r2, r6
   3519c:	add	r1, r3, #1
   351a0:	mov	r0, r5
   351a4:	bl	1259c <memcpy@plt>
   351a8:	ldr	r2, [sp, #28]
   351ac:	ldr	r4, [r9, #20]
   351b0:	mov	ip, #8
   351b4:	ldr	r0, [r9]
   351b8:	add	r3, sp, #60	; 0x3c
   351bc:	ldr	r7, [sp, #16]
   351c0:	add	r1, sp, #32
   351c4:	str	r2, [sp, #40]	; 0x28
   351c8:	ldr	r2, [sp, #112]	; 0x70
   351cc:	str	r3, [sp, #32]
   351d0:	mov	r3, r7
   351d4:	str	ip, [sp, #36]	; 0x24
   351d8:	str	r2, [sp, #44]	; 0x2c
   351dc:	mov	r2, #3
   351e0:	str	r5, [sp, #48]	; 0x30
   351e4:	str	r6, [sp, #52]	; 0x34
   351e8:	blx	r4
   351ec:	ldr	r2, [sp, #112]	; 0x70
   351f0:	mov	r1, r7
   351f4:	ldr	r0, [sp, #4]
   351f8:	bl	126c8 <memcmp@plt>
   351fc:	mov	r4, r0
   35200:	ldr	r0, [sp, #16]
   35204:	bl	12128 <free@plt>
   35208:	ldr	r0, [sp, #12]
   3520c:	bl	12128 <free@plt>
   35210:	ldr	r0, [sp]
   35214:	bl	12128 <free@plt>
   35218:	mov	r0, fp
   3521c:	bl	12128 <free@plt>
   35220:	ldr	r0, [sp, #4]
   35224:	bl	12128 <free@plt>
   35228:	ldr	r0, [sp, #8]
   3522c:	bl	12128 <free@plt>
   35230:	ldr	r3, [sp, #20]
   35234:	ldr	r2, [sp, #68]	; 0x44
   35238:	mov	r0, r4
   3523c:	ldr	r3, [r3]
   35240:	cmp	r2, r3
   35244:	bne	352fc <crc32@@Base+0x1bbb4>
   35248:	add	sp, sp, #76	; 0x4c
   3524c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35250:	movw	r2, #55568	; 0xd910
   35254:	movw	r1, #55664	; 0xd970
   35258:	movt	r2, #3
   3525c:	movt	r1, #3
   35260:	mov	r0, #1
   35264:	mov	r4, #22
   35268:	bl	12770 <__printf_chk@plt>
   3526c:	movw	r0, #55728	; 0xd9b0
   35270:	movt	r0, #3
   35274:	bl	1226c <puts@plt>
   35278:	b	35200 <crc32@@Base+0x1bab8>
   3527c:	bl	12128 <free@plt>
   35280:	b	35174 <crc32@@Base+0x1ba2c>
   35284:	movw	r2, #55568	; 0xd910
   35288:	movw	r1, #55588	; 0xd924
   3528c:	movt	r2, #3
   35290:	movt	r1, #3
   35294:	mov	r0, #1
   35298:	mvn	r4, #11
   3529c:	bl	12770 <__printf_chk@plt>
   352a0:	b	35200 <crc32@@Base+0x1bab8>
   352a4:	movw	r2, #55568	; 0xd910
   352a8:	movw	r1, #55620	; 0xd944
   352ac:	movt	r2, #3
   352b0:	movt	r1, #3
   352b4:	mov	r0, #1
   352b8:	mvn	r4, #21
   352bc:	bl	12770 <__printf_chk@plt>
   352c0:	b	35200 <crc32@@Base+0x1bab8>
   352c4:	movw	r2, #55568	; 0xd910
   352c8:	movw	r1, #55664	; 0xd970
   352cc:	movt	r2, #3
   352d0:	movt	r1, #3
   352d4:	mov	r0, #1
   352d8:	mvn	r4, #21
   352dc:	bl	12770 <__printf_chk@plt>
   352e0:	movw	r0, #55692	; 0xd98c
   352e4:	movt	r0, #3
   352e8:	bl	1226c <puts@plt>
   352ec:	b	35200 <crc32@@Base+0x1bab8>
   352f0:	cmp	r5, #0
   352f4:	ble	35174 <crc32@@Base+0x1ba2c>
   352f8:	b	35140 <crc32@@Base+0x1b9f8>
   352fc:	bl	12494 <__stack_chk_fail@plt>
   35300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35304:	mov	r4, r0
   35308:	add	fp, sp, #32
   3530c:	sub	sp, sp, #132	; 0x84
   35310:	ldr	ip, [r0, #28]
   35314:	ldr	r0, [r0, #20]
   35318:	movw	r6, #61168	; 0xeef0
   3531c:	mov	r8, r1
   35320:	movt	r6, #4
   35324:	mov	r9, r2
   35328:	ldr	r2, [ip, #4]
   3532c:	ldr	r1, [r0, #4]
   35330:	str	r3, [fp, #-152]	; 0xffffff68
   35334:	add	r3, r2, #7
   35338:	cmp	r2, r1
   3533c:	ldr	r2, [r6]
   35340:	bic	r3, r3, #7
   35344:	ldr	r5, [r4, #32]
   35348:	sub	sp, sp, r3
   3534c:	str	r2, [fp, #-40]	; 0xffffffd8
   35350:	blt	354cc <crc32@@Base+0x1bd84>
   35354:	movw	r2, #28952	; 0x7118
   35358:	mov	r1, #0
   3535c:	movt	r2, #3
   35360:	mov	r0, r5
   35364:	bl	30bc4 <crc32@@Base+0x1747c>
   35368:	subs	r3, r0, #0
   3536c:	str	r3, [fp, #-156]	; 0xffffff64
   35370:	blt	354d4 <crc32@@Base+0x1bd8c>
   35374:	ldr	r0, [r4, #20]
   35378:	add	r7, sp, #8
   3537c:	mov	r1, r8
   35380:	mov	r2, r9
   35384:	mov	r3, r7
   35388:	ldr	r8, [r0, #20]
   3538c:	ldr	r0, [r0]
   35390:	blx	r8
   35394:	cmp	r0, #0
   35398:	blt	354cc <crc32@@Base+0x1bd84>
   3539c:	ldr	r3, [r4, #36]	; 0x24
   353a0:	cmn	r3, #1
   353a4:	beq	353c8 <crc32@@Base+0x1bc80>
   353a8:	str	r3, [sp]
   353ac:	mov	r1, r7
   353b0:	ldr	r3, [fp, #4]
   353b4:	mov	r0, r4
   353b8:	ldr	r2, [fp, #-152]	; 0xffffff68
   353bc:	bl	34cd8 <crc32@@Base+0x1b590>
   353c0:	cmp	r0, #0
   353c4:	beq	35424 <crc32@@Base+0x1bcdc>
   353c8:	ldr	r1, [r4, #4]
   353cc:	mov	r3, #100	; 0x64
   353d0:	movw	r2, #55416	; 0xd878
   353d4:	sub	r0, fp, #140	; 0x8c
   353d8:	movt	r2, #3
   353dc:	str	r2, [sp]
   353e0:	str	r1, [sp, #4]
   353e4:	mov	r2, #1
   353e8:	mov	r1, r3
   353ec:	bl	125cc <__snprintf_chk@plt>
   353f0:	sub	r2, fp, #140	; 0x8c
   353f4:	ldr	r1, [fp, #-156]	; 0xffffff64
   353f8:	mov	r0, r5
   353fc:	bl	30bc4 <crc32@@Base+0x1747c>
   35400:	ldr	r3, [fp, #4]
   35404:	ldr	r2, [fp, #-152]	; 0xffffff68
   35408:	mov	r1, r7
   3540c:	str	r0, [sp]
   35410:	mov	r8, r0
   35414:	mov	r0, r4
   35418:	bl	34cd8 <crc32@@Base+0x1b590>
   3541c:	subs	r9, r0, #0
   35420:	bne	35444 <crc32@@Base+0x1bcfc>
   35424:	mov	r9, #0
   35428:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3542c:	mov	r0, r9
   35430:	ldr	r3, [r6]
   35434:	cmp	r2, r3
   35438:	bne	354dc <crc32@@Base+0x1bd94>
   3543c:	sub	sp, fp, #32
   35440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35444:	sub	sl, fp, #36	; 0x24
   35448:	mov	r3, #0
   3544c:	ldr	r1, [fp, #-156]	; 0xffffff64
   35450:	str	r3, [sl, #-108]!	; 0xffffff94
   35454:	mov	r2, sl
   35458:	ldr	r0, [r4, #8]
   3545c:	bl	2d978 <crc32@@Base+0x14230>
   35460:	subs	r5, r0, #0
   35464:	bge	35484 <crc32@@Base+0x1bd3c>
   35468:	b	35428 <crc32@@Base+0x1bce0>
   3546c:	mov	r1, r5
   35470:	mov	r2, sl
   35474:	ldr	r0, [r4, #8]
   35478:	bl	2d978 <crc32@@Base+0x14230>
   3547c:	subs	r5, r0, #0
   35480:	blt	35428 <crc32@@Base+0x1bce0>
   35484:	ldr	r3, [fp, #-144]	; 0xffffff70
   35488:	cmp	r3, #0
   3548c:	ble	35428 <crc32@@Base+0x1bce0>
   35490:	subs	r2, r8, r5
   35494:	movne	r2, #1
   35498:	cmp	r3, #1
   3549c:	movne	r2, #0
   354a0:	cmp	r2, #0
   354a4:	beq	3546c <crc32@@Base+0x1bd24>
   354a8:	str	r5, [sp]
   354ac:	mov	r1, r7
   354b0:	ldr	r3, [fp, #4]
   354b4:	mov	r0, r4
   354b8:	ldr	r2, [fp, #-152]	; 0xffffff68
   354bc:	bl	34cd8 <crc32@@Base+0x1b590>
   354c0:	subs	r9, r0, #0
   354c4:	bne	3546c <crc32@@Base+0x1bd24>
   354c8:	b	35424 <crc32@@Base+0x1bcdc>
   354cc:	mvn	r9, #21
   354d0:	b	35428 <crc32@@Base+0x1bce0>
   354d4:	mvn	r9, #1
   354d8:	b	35428 <crc32@@Base+0x1bce0>
   354dc:	bl	12494 <__stack_chk_fail@plt>
   354e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   354e4:	movw	r8, #61168	; 0xeef0
   354e8:	movt	r8, #4
   354ec:	mov	r7, r2
   354f0:	sub	sp, sp, #28
   354f4:	mov	r6, r1
   354f8:	ldr	r2, [r8]
   354fc:	add	r1, sp, #12
   35500:	mov	sl, r3
   35504:	str	r2, [sp, #20]
   35508:	bl	2a830 <crc32@@Base+0x110e8>
   3550c:	cmp	r0, #0
   35510:	bne	35580 <crc32@@Base+0x1be38>
   35514:	ldr	r0, [sp, #12]
   35518:	add	r1, sp, #16
   3551c:	ldr	r3, [r0, #16]
   35520:	blx	r3
   35524:	cmp	r0, #0
   35528:	bne	35580 <crc32@@Base+0x1be38>
   3552c:	cmp	r7, #1
   35530:	beq	3559c <crc32@@Base+0x1be54>
   35534:	mov	r4, r0
   35538:	sub	r7, r7, #1
   3553c:	mov	r9, r0
   35540:	mov	r5, r6
   35544:	b	35558 <crc32@@Base+0x1be10>
   35548:	add	r4, r4, #1
   3554c:	add	r5, r5, #8
   35550:	cmp	r7, r4
   35554:	beq	35598 <crc32@@Base+0x1be50>
   35558:	ldr	ip, [sp, #12]
   3555c:	ldr	r3, [r5, #4]
   35560:	ldr	r2, [r6, r4, lsl #3]
   35564:	ldr	r1, [sp, #16]
   35568:	mov	r0, ip
   3556c:	str	r9, [sp]
   35570:	ldr	fp, [ip, #20]
   35574:	blx	fp
   35578:	cmp	r0, #0
   3557c:	beq	35548 <crc32@@Base+0x1be00>
   35580:	ldr	r2, [sp, #20]
   35584:	ldr	r3, [r8]
   35588:	cmp	r2, r3
   3558c:	bne	355e4 <crc32@@Base+0x1be9c>
   35590:	add	sp, sp, #28
   35594:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35598:	add	r6, r6, r7, lsl #3
   3559c:	ldr	ip, [sp, #12]
   355a0:	mov	lr, #1
   355a4:	ldrd	r2, [r6]
   355a8:	ldr	r1, [sp, #16]
   355ac:	str	lr, [sp]
   355b0:	mov	r0, ip
   355b4:	ldr	r4, [ip, #20]
   355b8:	blx	r4
   355bc:	cmp	r0, #0
   355c0:	bne	35580 <crc32@@Base+0x1be38>
   355c4:	ldr	r3, [sp, #12]
   355c8:	mov	r2, sl
   355cc:	ldr	r1, [sp, #16]
   355d0:	ldr	r4, [r3, #24]
   355d4:	mov	r0, r3
   355d8:	ldr	r3, [r3, #4]
   355dc:	blx	r4
   355e0:	b	35580 <crc32@@Base+0x1be38>
   355e4:	bl	12494 <__stack_chk_fail@plt>
   355e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   355ec:	sub	sp, sp, #44	; 0x2c
   355f0:	mov	fp, r0
   355f4:	mov	r0, r1
   355f8:	str	r1, [sp, #16]
   355fc:	ldr	r1, [fp]
   35600:	str	r3, [sp, #32]
   35604:	cmp	r1, #0
   35608:	beq	357b4 <crc32@@Base+0x1c06c>
   3560c:	sub	r3, r0, #4
   35610:	str	r3, [sp, #36]	; 0x24
   35614:	mov	r1, r3
   35618:	mov	r3, #0
   3561c:	mov	ip, r3
   35620:	str	ip, [r1, #4]!
   35624:	add	r3, r3, #1
   35628:	ldr	r0, [fp]
   3562c:	cmp	r0, r3
   35630:	bhi	35620 <crc32@@Base+0x1bed8>
   35634:	cmp	r0, #0
   35638:	beq	357b4 <crc32@@Base+0x1c06c>
   3563c:	ldr	r3, [fp, #8]
   35640:	str	fp, [sp, #4]
   35644:	str	r3, [sp, #28]
   35648:	sub	r3, r2, #4
   3564c:	str	r3, [sp, #20]
   35650:	mov	r3, #0
   35654:	str	r3, [sp, #24]
   35658:	ldr	r3, [sp, #20]
   3565c:	mov	fp, #0
   35660:	ldr	ip, [sp, #16]
   35664:	cmp	r0, #1
   35668:	ldr	r9, [sp, #32]
   3566c:	mov	r7, #0
   35670:	ldr	r8, [r3, #4]!
   35674:	ldr	r6, [ip]
   35678:	ldr	r2, [sp, #4]
   3567c:	str	r3, [sp, #20]
   35680:	ldr	r3, [r9]
   35684:	mov	sl, r6
   35688:	ldr	r5, [r2, #4]
   3568c:	ldr	r4, [sp, #28]
   35690:	umlal	sl, fp, r3, r8
   35694:	ldr	r1, [r4]
   35698:	mul	r5, sl, r5
   3569c:	mov	r6, sl
   356a0:	umlal	r6, r7, r1, r5
   356a4:	bls	357c8 <crc32@@Base+0x1c080>
   356a8:	str	r8, [sp, #8]
   356ac:	mov	lr, #1
   356b0:	str	r5, [sp, #12]
   356b4:	mov	r8, r9
   356b8:	b	356c0 <crc32@@Base+0x1bf78>
   356bc:	mov	lr, r3
   356c0:	ldr	r5, [r8, #4]!
   356c4:	mov	r3, #0
   356c8:	ldr	r6, [sp, #8]
   356cc:	mov	sl, fp
   356d0:	mov	fp, r3
   356d4:	ldr	r9, [r4, #4]!
   356d8:	mov	r1, r3
   356dc:	ldr	r3, [sp, #12]
   356e0:	umlal	sl, fp, r5, r6
   356e4:	ldr	r2, [ip, #4]
   356e8:	mov	r0, r7
   356ec:	umlal	r0, r1, r9, r3
   356f0:	adds	r6, sl, r2
   356f4:	ldr	r2, [sp, #4]
   356f8:	adc	r7, fp, #0
   356fc:	adds	r6, r0, r6
   35700:	str	r6, [ip], #4
   35704:	add	r3, lr, #1
   35708:	mov	fp, r7
   3570c:	ldr	r2, [r2]
   35710:	adc	r7, r1, #0
   35714:	cmp	r3, r2
   35718:	bcc	356bc <crc32@@Base+0x1bf74>
   3571c:	ldr	r3, [sp, #16]
   35720:	add	lr, r3, lr, lsl #2
   35724:	adds	r2, r7, fp
   35728:	mov	r1, #0
   3572c:	adc	r3, r1, r1
   35730:	mov	r5, r1
   35734:	str	r2, [lr]
   35738:	mov	r4, r3
   3573c:	orrs	r3, r4, r5
   35740:	beq	357bc <crc32@@Base+0x1c074>
   35744:	ldr	r7, [sp, #4]
   35748:	ldr	r3, [r7]
   3574c:	cmp	r3, r1
   35750:	beq	357b4 <crc32@@Base+0x1c06c>
   35754:	ldr	r3, [sp, #28]
   35758:	mov	ip, r1
   3575c:	ldr	r1, [sp, #36]	; 0x24
   35760:	mov	r2, #0
   35764:	sub	lr, r3, #4
   35768:	mov	r3, #0
   3576c:	ldr	r6, [r1, #4]!
   35770:	add	ip, ip, #1
   35774:	ldr	r0, [lr, #4]!
   35778:	adds	r4, r2, r6
   3577c:	adc	r5, r3, #0
   35780:	subs	r8, r4, r0
   35784:	str	r8, [r1]
   35788:	sbc	r9, r5, #0
   3578c:	ldr	r0, [r7]
   35790:	mov	r2, r9
   35794:	asr	r3, r9, #31
   35798:	cmp	ip, r0
   3579c:	bcc	3576c <crc32@@Base+0x1c024>
   357a0:	ldr	r3, [sp, #24]
   357a4:	add	r3, r3, #1
   357a8:	str	r3, [sp, #24]
   357ac:	cmp	r3, r0
   357b0:	bcc	35658 <crc32@@Base+0x1bf10>
   357b4:	add	sp, sp, #44	; 0x2c
   357b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   357bc:	ldr	r3, [sp, #4]
   357c0:	ldr	r0, [r3]
   357c4:	b	357a0 <crc32@@Base+0x1c058>
   357c8:	ldr	lr, [sp, #16]
   357cc:	b	35724 <crc32@@Base+0x1bfdc>
   357d0:	movw	ip, #61168	; 0xeef0
   357d4:	movt	ip, #4
   357d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   357dc:	add	fp, sp, #32
   357e0:	mov	lr, ip
   357e4:	sub	sp, sp, #76	; 0x4c
   357e8:	str	ip, [fp, #-100]	; 0xffffff9c
   357ec:	mov	ip, r0
   357f0:	ldr	r0, [lr]
   357f4:	cmp	r2, #0
   357f8:	str	r1, [fp, #-96]	; 0xffffffa0
   357fc:	str	r3, [fp, #-104]	; 0xffffff98
   35800:	str	r0, [fp, #-40]	; 0xffffffd8
   35804:	beq	35c9c <crc32@@Base+0x1c554>
   35808:	ldrd	r0, [r2, #8]
   3580c:	ldr	r3, [r2, #16]
   35810:	cmp	r0, #0
   35814:	str	r1, [fp, #-64]	; 0xffffffc0
   35818:	str	r3, [fp, #-68]	; 0xffffffbc
   3581c:	beq	35c80 <crc32@@Base+0x1c538>
   35820:	ldr	r1, [r0]
   35824:	mov	r6, #0
   35828:	ldr	r0, [r0, #4]
   3582c:	ubfx	r4, r1, #16, #8
   35830:	ubfx	lr, r1, #8, #8
   35834:	lsl	r5, r1, #24
   35838:	str	r5, [fp, #-72]	; 0xffffffb8
   3583c:	mov	r5, #0
   35840:	str	r5, [fp, #-76]	; 0xffffffb4
   35844:	lsl	r4, r4, #8
   35848:	str	r4, [fp, #-88]	; 0xffffffa8
   3584c:	ldrd	r4, [fp, #-76]	; 0xffffffb4
   35850:	lsl	r7, lr, #16
   35854:	lsr	lr, r0, #24
   35858:	mov	r8, r4
   3585c:	mov	r9, r5
   35860:	orr	r8, r8, lr
   35864:	ubfx	lr, r0, #16, #8
   35868:	orr	r5, r9, r7
   3586c:	lsr	r7, r1, #24
   35870:	mov	r1, #0
   35874:	str	r1, [fp, #-92]	; 0xffffffa4
   35878:	orr	r4, r8, r4
   3587c:	ldrd	r8, [fp, #-92]	; 0xffffffa4
   35880:	ubfx	r1, r0, #8, #8
   35884:	orr	r8, r8, r4
   35888:	uxtb	r4, r0
   3588c:	orr	r9, r9, r5
   35890:	lsr	r0, r4, #8
   35894:	str	r0, [fp, #-80]	; 0xffffffb0
   35898:	lsl	r0, r4, #24
   3589c:	str	r0, [fp, #-84]	; 0xffffffac
   358a0:	uxtb	r0, r1
   358a4:	orr	r4, r8, r6
   358a8:	orr	r5, r9, r7
   358ac:	ldrd	r8, [fp, #-84]	; 0xffffffac
   358b0:	lsr	r7, r0, #16
   358b4:	lsl	r6, r0, #16
   358b8:	uxtb	r0, lr
   358bc:	orr	r8, r8, r4
   358c0:	orr	r9, r9, r5
   358c4:	orr	r8, r8, r6
   358c8:	orr	r9, r9, r7
   358cc:	lsr	r5, r0, #24
   358d0:	lsl	r4, r0, #8
   358d4:	orr	r7, r9, r5
   358d8:	orr	r6, r8, r4
   358dc:	strd	r6, [fp, #-52]	; 0xffffffcc
   358e0:	cmp	r3, #0
   358e4:	beq	35c94 <crc32@@Base+0x1c54c>
   358e8:	ldr	r7, [r2, #4]
   358ec:	cmp	r7, #0
   358f0:	beq	35c94 <crc32@@Base+0x1c54c>
   358f4:	ldr	r9, [r2]
   358f8:	cmp	r9, #0
   358fc:	beq	35c94 <crc32@@Base+0x1c54c>
   35900:	sub	r2, r3, #2048	; 0x800
   35904:	cmp	r2, #2048	; 0x800
   35908:	bhi	35c94 <crc32@@Base+0x1c54c>
   3590c:	lsr	r3, r3, #5
   35910:	mov	r6, #0
   35914:	str	r3, [fp, #-68]	; 0xffffffbc
   35918:	lsl	r4, r3, #2
   3591c:	add	r5, r4, #10
   35920:	add	r7, r7, r4
   35924:	bic	r1, r5, #7
   35928:	sub	sp, sp, r1
   3592c:	mov	r2, sp
   35930:	sub	sp, sp, r1
   35934:	sub	sl, r2, #4
   35938:	str	r2, [fp, #-60]	; 0xffffffc4
   3593c:	mov	r8, sp
   35940:	str	r8, [fp, #-56]	; 0xffffffc8
   35944:	ldr	lr, [r7, #-4]!
   35948:	add	r6, r6, #1
   3594c:	cmp	r3, r6
   35950:	ubfx	r0, lr, #8, #8
   35954:	ubfx	r1, lr, #16, #8
   35958:	lsr	r2, lr, #24
   3595c:	orr	r2, r2, lr, lsl #24
   35960:	orr	r2, r2, r0, lsl #16
   35964:	orr	r2, r2, r1, lsl #8
   35968:	str	r2, [sl, #4]!
   3596c:	bgt	35944 <crc32@@Base+0x1c1fc>
   35970:	add	r9, r9, r4
   35974:	sub	r7, r8, #4
   35978:	mov	r6, #0
   3597c:	ldr	r1, [r9, #-4]!
   35980:	add	r6, r6, #1
   35984:	cmp	r3, r6
   35988:	ubfx	lr, r1, #8, #8
   3598c:	ubfx	r0, r1, #16, #8
   35990:	lsr	r2, r1, #24
   35994:	orr	r2, r2, r1, lsl #24
   35998:	orr	r2, r2, lr, lsl #16
   3599c:	orr	r2, r2, r0, lsl #8
   359a0:	str	r2, [r7, #4]!
   359a4:	bgt	3597c <crc32@@Base+0x1c234>
   359a8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   359ac:	mov	r1, ip
   359b0:	bic	r3, r2, #3
   359b4:	add	r3, r3, #10
   359b8:	bic	r3, r3, #7
   359bc:	sub	sp, sp, r3
   359c0:	mov	r9, sp
   359c4:	mov	r0, r9
   359c8:	bl	1259c <memcpy@plt>
   359cc:	bic	r3, r5, #7
   359d0:	str	sp, [fp, #-76]	; 0xffffffb4
   359d4:	sub	sp, sp, r3
   359d8:	sub	ip, r4, #4
   359dc:	mov	r7, sp
   359e0:	sub	sp, sp, r3
   359e4:	add	ip, r9, ip
   359e8:	sub	sl, r7, #4
   359ec:	mov	r5, sp
   359f0:	sub	sp, sp, r3
   359f4:	sub	lr, ip, r4
   359f8:	mov	r2, sp
   359fc:	sub	sp, sp, r3
   35a00:	lsr	r2, r2, #2
   35a04:	str	r2, [fp, #-84]	; 0xffffffac
   35a08:	mov	r6, sp
   35a0c:	lsl	r4, r2, #2
   35a10:	ldr	r0, [ip], #-4
   35a14:	ubfx	r1, r0, #8, #8
   35a18:	ubfx	r2, r0, #16, #8
   35a1c:	lsr	r3, r0, #24
   35a20:	cmp	lr, ip
   35a24:	orr	r3, r3, r0, lsl #24
   35a28:	orr	r3, r3, r1, lsl #16
   35a2c:	orr	r3, r3, r2, lsl #8
   35a30:	str	r3, [sl, #4]!
   35a34:	bne	35a10 <crc32@@Base+0x1c2c8>
   35a38:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   35a3c:	orrs	r3, r0, r1
   35a40:	beq	35c5c <crc32@@Base+0x1c514>
   35a44:	lsrs	r3, r1, #1
   35a48:	rrx	r2, r0
   35a4c:	orrs	ip, r2, r3
   35a50:	beq	35c5c <crc32@@Base+0x1c514>
   35a54:	mov	sl, #2
   35a58:	b	35a68 <crc32@@Base+0x1c320>
   35a5c:	add	sl, sl, #1
   35a60:	cmp	sl, #65	; 0x41
   35a64:	beq	35c5c <crc32@@Base+0x1c514>
   35a68:	lsrs	r3, r3, #1
   35a6c:	rrx	r2, r2
   35a70:	orrs	ip, r2, r3
   35a74:	bne	35a5c <crc32@@Base+0x1c314>
   35a78:	and	r0, r0, #1
   35a7c:	cmp	r0, #0
   35a80:	beq	35c5c <crc32@@Base+0x1c514>
   35a84:	mov	r3, r8
   35a88:	mov	r2, r7
   35a8c:	mov	r1, r5
   35a90:	sub	r0, fp, #68	; 0x44
   35a94:	bl	355e8 <crc32@@Base+0x1bea0>
   35a98:	ldr	r2, [fp, #-68]	; 0xffffffbc
   35a9c:	mov	r1, r5
   35aa0:	mov	r0, r6
   35aa4:	lsl	r2, r2, #2
   35aa8:	bl	1259c <memcpy@plt>
   35aac:	subs	r8, sl, #2
   35ab0:	beq	35b14 <crc32@@Base+0x1c3cc>
   35ab4:	mov	sl, #1
   35ab8:	b	35ad8 <crc32@@Base+0x1c390>
   35abc:	mov	r3, r6
   35ac0:	mov	r2, r4
   35ac4:	mov	r1, r5
   35ac8:	sub	r0, fp, #68	; 0x44
   35acc:	bl	355e8 <crc32@@Base+0x1bea0>
   35ad0:	subs	r8, r8, #1
   35ad4:	beq	35b14 <crc32@@Base+0x1c3cc>
   35ad8:	mov	r3, r5
   35adc:	mov	r2, r5
   35ae0:	mov	r1, r4
   35ae4:	sub	r0, fp, #68	; 0x44
   35ae8:	bl	355e8 <crc32@@Base+0x1bea0>
   35aec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35af0:	ands	r3, r3, sl, lsl r8
   35af4:	bne	35abc <crc32@@Base+0x1c374>
   35af8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   35afc:	mov	r1, r4
   35b00:	mov	r0, r5
   35b04:	lsl	r2, r2, #2
   35b08:	bl	1259c <memcpy@plt>
   35b0c:	subs	r8, r8, #1
   35b10:	bne	35ad8 <crc32@@Base+0x1c390>
   35b14:	mov	r3, r5
   35b18:	mov	r2, r5
   35b1c:	mov	r1, r4
   35b20:	sub	r0, fp, #68	; 0x44
   35b24:	bl	355e8 <crc32@@Base+0x1bea0>
   35b28:	mov	r3, r7
   35b2c:	mov	r1, r5
   35b30:	mov	r2, r4
   35b34:	sub	r0, fp, #68	; 0x44
   35b38:	bl	355e8 <crc32@@Base+0x1bea0>
   35b3c:	ldr	r6, [fp, #-68]	; 0xffffffbc
   35b40:	mov	r1, r5
   35b44:	mov	r0, r4
   35b48:	lsl	r5, r6, #2
   35b4c:	mov	r2, r5
   35b50:	bl	1259c <memcpy@plt>
   35b54:	subs	r3, r6, #1
   35b58:	bmi	35bac <crc32@@Base+0x1c464>
   35b5c:	ldr	r1, [fp, #-84]	; 0xffffffac
   35b60:	lsl	r2, r3, #2
   35b64:	ldr	r0, [fp, #-60]	; 0xffffffc4
   35b68:	ldr	r2, [r2, r1, lsl #2]
   35b6c:	ldr	r1, [r0, r3, lsl #2]
   35b70:	cmp	r1, r2
   35b74:	bhi	35c0c <crc32@@Base+0x1c4c4>
   35b78:	bcc	35bac <crc32@@Base+0x1c464>
   35b7c:	sub	r1, r5, #4
   35b80:	mov	r2, r3
   35b84:	add	r0, r0, r1
   35b88:	add	r1, r4, r1
   35b8c:	b	35ba4 <crc32@@Base+0x1c45c>
   35b90:	ldr	lr, [r1, #-4]!
   35b94:	ldr	ip, [r0, #-4]!
   35b98:	cmp	lr, ip
   35b9c:	bcc	35c0c <crc32@@Base+0x1c4c4>
   35ba0:	bhi	35bac <crc32@@Base+0x1c464>
   35ba4:	subs	r2, r2, #1
   35ba8:	bcs	35b90 <crc32@@Base+0x1c448>
   35bac:	cmp	r6, #0
   35bb0:	beq	35c40 <crc32@@Base+0x1c4f8>
   35bb4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   35bb8:	sub	ip, r4, #4
   35bbc:	mov	r6, #0
   35bc0:	mov	r7, #0
   35bc4:	add	r8, r5, r2
   35bc8:	str	r4, [fp, #-84]	; 0xffffffac
   35bcc:	str	r5, [fp, #-92]	; 0xffffffa4
   35bd0:	ldr	sl, [ip, #4]!
   35bd4:	ldr	lr, [r2], #4
   35bd8:	adds	r0, r6, sl
   35bdc:	adc	r1, r7, #0
   35be0:	subs	r4, r0, lr
   35be4:	sbc	r5, r1, #0
   35be8:	cmp	r8, r2
   35bec:	str	r4, [ip]
   35bf0:	mov	r6, r5
   35bf4:	asr	r7, r5, #31
   35bf8:	bne	35bd0 <crc32@@Base+0x1c488>
   35bfc:	cmp	r3, #0
   35c00:	ldr	r4, [fp, #-84]	; 0xffffffac
   35c04:	ldr	r5, [fp, #-92]	; 0xffffffa4
   35c08:	blt	35c40 <crc32@@Base+0x1c4f8>
   35c0c:	add	r4, r4, r5
   35c10:	mov	r0, r9
   35c14:	ldr	r1, [r4, #-4]!
   35c18:	sub	r3, r3, #1
   35c1c:	cmn	r3, #1
   35c20:	ubfx	lr, r1, #8, #8
   35c24:	ubfx	ip, r1, #16, #8
   35c28:	lsr	r2, r1, #24
   35c2c:	orr	r2, r2, r1, lsl #24
   35c30:	orr	r2, r2, lr, lsl #16
   35c34:	orr	r2, r2, ip, lsl #8
   35c38:	str	r2, [r0], #4
   35c3c:	bne	35c14 <crc32@@Base+0x1c4cc>
   35c40:	mov	r1, r9
   35c44:	ldr	r2, [fp, #-96]	; 0xffffffa0
   35c48:	ldr	sp, [fp, #-76]	; 0xffffffb4
   35c4c:	ldr	r0, [fp, #-104]	; 0xffffff98
   35c50:	bl	1259c <memcpy@plt>
   35c54:	mov	r0, #0
   35c58:	b	35c64 <crc32@@Base+0x1c51c>
   35c5c:	ldr	sp, [fp, #-76]	; 0xffffffb4
   35c60:	mvn	r0, #21
   35c64:	ldr	r3, [fp, #-100]	; 0xffffff9c
   35c68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35c6c:	ldr	r3, [r3]
   35c70:	cmp	r2, r3
   35c74:	bne	35ca4 <crc32@@Base+0x1c55c>
   35c78:	sub	sp, fp, #32
   35c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35c80:	mov	r0, #1
   35c84:	mov	r1, #0
   35c88:	movt	r0, #1
   35c8c:	strd	r0, [fp, #-52]	; 0xffffffcc
   35c90:	b	358e0 <crc32@@Base+0x1c198>
   35c94:	mvn	r0, #13
   35c98:	b	35c64 <crc32@@Base+0x1c51c>
   35c9c:	mvn	r0, #8
   35ca0:	b	35c64 <crc32@@Base+0x1c51c>
   35ca4:	bl	12494 <__stack_chk_fail@plt>
   35ca8:	movw	r1, #65044	; 0xfe14
   35cac:	movt	r1, #4
   35cb0:	mov	r3, r0
   35cb4:	movw	r2, #55764	; 0xd9d4
   35cb8:	ldr	r0, [r1]
   35cbc:	movt	r2, #3
   35cc0:	push	{r4, lr}
   35cc4:	mov	r1, #1
   35cc8:	bl	122b4 <__fprintf_chk@plt>
   35ccc:	mov	r0, #1
   35cd0:	bl	121f4 <exit@plt>
   35cd4:	cmp	r1, #0
   35cd8:	beq	35ee4 <crc32@@Base+0x1c79c>
   35cdc:	eor	ip, r0, r1
   35ce0:	rsbmi	r1, r1, #0
   35ce4:	subs	r2, r1, #1
   35ce8:	beq	35eb0 <crc32@@Base+0x1c768>
   35cec:	movs	r3, r0
   35cf0:	rsbmi	r3, r0, #0
   35cf4:	cmp	r3, r1
   35cf8:	bls	35ebc <crc32@@Base+0x1c774>
   35cfc:	tst	r1, r2
   35d00:	beq	35ecc <crc32@@Base+0x1c784>
   35d04:	clz	r2, r3
   35d08:	clz	r0, r1
   35d0c:	sub	r2, r0, r2
   35d10:	rsbs	r2, r2, #31
   35d14:	addne	r2, r2, r2, lsl #1
   35d18:	mov	r0, #0
   35d1c:	addne	pc, pc, r2, lsl #2
   35d20:	nop	{0}
   35d24:	cmp	r3, r1, lsl #31
   35d28:	adc	r0, r0, r0
   35d2c:	subcs	r3, r3, r1, lsl #31
   35d30:	cmp	r3, r1, lsl #30
   35d34:	adc	r0, r0, r0
   35d38:	subcs	r3, r3, r1, lsl #30
   35d3c:	cmp	r3, r1, lsl #29
   35d40:	adc	r0, r0, r0
   35d44:	subcs	r3, r3, r1, lsl #29
   35d48:	cmp	r3, r1, lsl #28
   35d4c:	adc	r0, r0, r0
   35d50:	subcs	r3, r3, r1, lsl #28
   35d54:	cmp	r3, r1, lsl #27
   35d58:	adc	r0, r0, r0
   35d5c:	subcs	r3, r3, r1, lsl #27
   35d60:	cmp	r3, r1, lsl #26
   35d64:	adc	r0, r0, r0
   35d68:	subcs	r3, r3, r1, lsl #26
   35d6c:	cmp	r3, r1, lsl #25
   35d70:	adc	r0, r0, r0
   35d74:	subcs	r3, r3, r1, lsl #25
   35d78:	cmp	r3, r1, lsl #24
   35d7c:	adc	r0, r0, r0
   35d80:	subcs	r3, r3, r1, lsl #24
   35d84:	cmp	r3, r1, lsl #23
   35d88:	adc	r0, r0, r0
   35d8c:	subcs	r3, r3, r1, lsl #23
   35d90:	cmp	r3, r1, lsl #22
   35d94:	adc	r0, r0, r0
   35d98:	subcs	r3, r3, r1, lsl #22
   35d9c:	cmp	r3, r1, lsl #21
   35da0:	adc	r0, r0, r0
   35da4:	subcs	r3, r3, r1, lsl #21
   35da8:	cmp	r3, r1, lsl #20
   35dac:	adc	r0, r0, r0
   35db0:	subcs	r3, r3, r1, lsl #20
   35db4:	cmp	r3, r1, lsl #19
   35db8:	adc	r0, r0, r0
   35dbc:	subcs	r3, r3, r1, lsl #19
   35dc0:	cmp	r3, r1, lsl #18
   35dc4:	adc	r0, r0, r0
   35dc8:	subcs	r3, r3, r1, lsl #18
   35dcc:	cmp	r3, r1, lsl #17
   35dd0:	adc	r0, r0, r0
   35dd4:	subcs	r3, r3, r1, lsl #17
   35dd8:	cmp	r3, r1, lsl #16
   35ddc:	adc	r0, r0, r0
   35de0:	subcs	r3, r3, r1, lsl #16
   35de4:	cmp	r3, r1, lsl #15
   35de8:	adc	r0, r0, r0
   35dec:	subcs	r3, r3, r1, lsl #15
   35df0:	cmp	r3, r1, lsl #14
   35df4:	adc	r0, r0, r0
   35df8:	subcs	r3, r3, r1, lsl #14
   35dfc:	cmp	r3, r1, lsl #13
   35e00:	adc	r0, r0, r0
   35e04:	subcs	r3, r3, r1, lsl #13
   35e08:	cmp	r3, r1, lsl #12
   35e0c:	adc	r0, r0, r0
   35e10:	subcs	r3, r3, r1, lsl #12
   35e14:	cmp	r3, r1, lsl #11
   35e18:	adc	r0, r0, r0
   35e1c:	subcs	r3, r3, r1, lsl #11
   35e20:	cmp	r3, r1, lsl #10
   35e24:	adc	r0, r0, r0
   35e28:	subcs	r3, r3, r1, lsl #10
   35e2c:	cmp	r3, r1, lsl #9
   35e30:	adc	r0, r0, r0
   35e34:	subcs	r3, r3, r1, lsl #9
   35e38:	cmp	r3, r1, lsl #8
   35e3c:	adc	r0, r0, r0
   35e40:	subcs	r3, r3, r1, lsl #8
   35e44:	cmp	r3, r1, lsl #7
   35e48:	adc	r0, r0, r0
   35e4c:	subcs	r3, r3, r1, lsl #7
   35e50:	cmp	r3, r1, lsl #6
   35e54:	adc	r0, r0, r0
   35e58:	subcs	r3, r3, r1, lsl #6
   35e5c:	cmp	r3, r1, lsl #5
   35e60:	adc	r0, r0, r0
   35e64:	subcs	r3, r3, r1, lsl #5
   35e68:	cmp	r3, r1, lsl #4
   35e6c:	adc	r0, r0, r0
   35e70:	subcs	r3, r3, r1, lsl #4
   35e74:	cmp	r3, r1, lsl #3
   35e78:	adc	r0, r0, r0
   35e7c:	subcs	r3, r3, r1, lsl #3
   35e80:	cmp	r3, r1, lsl #2
   35e84:	adc	r0, r0, r0
   35e88:	subcs	r3, r3, r1, lsl #2
   35e8c:	cmp	r3, r1, lsl #1
   35e90:	adc	r0, r0, r0
   35e94:	subcs	r3, r3, r1, lsl #1
   35e98:	cmp	r3, r1
   35e9c:	adc	r0, r0, r0
   35ea0:	subcs	r3, r3, r1
   35ea4:	cmp	ip, #0
   35ea8:	rsbmi	r0, r0, #0
   35eac:	bx	lr
   35eb0:	teq	ip, r0
   35eb4:	rsbmi	r0, r0, #0
   35eb8:	bx	lr
   35ebc:	movcc	r0, #0
   35ec0:	asreq	r0, ip, #31
   35ec4:	orreq	r0, r0, #1
   35ec8:	bx	lr
   35ecc:	clz	r2, r1
   35ed0:	rsb	r2, r2, #31
   35ed4:	cmp	ip, #0
   35ed8:	lsr	r0, r3, r2
   35edc:	rsbmi	r0, r0, #0
   35ee0:	bx	lr
   35ee4:	cmp	r0, #0
   35ee8:	mvngt	r0, #-2147483648	; 0x80000000
   35eec:	movlt	r0, #-2147483648	; 0x80000000
   35ef0:	b	35f50 <crc32@@Base+0x1c808>
   35ef4:	cmp	r1, #0
   35ef8:	beq	35ee4 <crc32@@Base+0x1c79c>
   35efc:	push	{r0, r1, lr}
   35f00:	bl	35cdc <crc32@@Base+0x1c594>
   35f04:	pop	{r1, r2, lr}
   35f08:	mul	r3, r2, r0
   35f0c:	sub	r1, r1, r3
   35f10:	bx	lr
   35f14:	cmp	r3, #0
   35f18:	cmpeq	r2, #0
   35f1c:	bne	35f34 <crc32@@Base+0x1c7ec>
   35f20:	cmp	r1, #0
   35f24:	cmpeq	r0, #0
   35f28:	mvnne	r1, #0
   35f2c:	mvnne	r0, #0
   35f30:	b	35f50 <crc32@@Base+0x1c808>
   35f34:	sub	sp, sp, #8
   35f38:	push	{sp, lr}
   35f3c:	bl	35f60 <crc32@@Base+0x1c818>
   35f40:	ldr	lr, [sp, #4]
   35f44:	add	sp, sp, #8
   35f48:	pop	{r2, r3}
   35f4c:	bx	lr
   35f50:	push	{r1, lr}
   35f54:	mov	r0, #8
   35f58:	bl	12500 <raise@plt>
   35f5c:	pop	{r1, pc}
   35f60:	cmp	r1, r3
   35f64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35f68:	cmpeq	r0, r2
   35f6c:	sub	sp, sp, #12
   35f70:	mov	sl, r0
   35f74:	mov	fp, r1
   35f78:	ldr	r8, [sp, #48]	; 0x30
   35f7c:	bcc	36074 <crc32@@Base+0x1c92c>
   35f80:	cmp	r3, #0
   35f84:	mov	r0, r2
   35f88:	mov	r1, r3
   35f8c:	clzeq	r3, r0
   35f90:	addeq	r2, r3, #32
   35f94:	clzne	r2, r3
   35f98:	cmp	fp, #0
   35f9c:	clzeq	r3, sl
   35fa0:	clzne	r3, fp
   35fa4:	addeq	r3, r3, #32
   35fa8:	sub	r3, r2, r3
   35fac:	sub	ip, r3, #32
   35fb0:	lsl	r7, r1, r3
   35fb4:	orr	r7, r7, r0, lsl ip
   35fb8:	rsb	lr, r3, #32
   35fbc:	orr	r7, r7, r0, lsr lr
   35fc0:	lsl	r6, r0, r3
   35fc4:	cmp	fp, r7
   35fc8:	cmpeq	sl, r6
   35fcc:	bcs	36094 <crc32@@Base+0x1c94c>
   35fd0:	mov	r0, #0
   35fd4:	mov	r1, #0
   35fd8:	strd	r0, [sp]
   35fdc:	cmp	r3, #0
   35fe0:	beq	36080 <crc32@@Base+0x1c938>
   35fe4:	lsrs	r7, r7, #1
   35fe8:	rrx	r6, r6
   35fec:	mov	r2, r3
   35ff0:	b	36014 <crc32@@Base+0x1c8cc>
   35ff4:	subs	r0, sl, r6
   35ff8:	sbc	r1, fp, r7
   35ffc:	adds	r4, r0, r0
   36000:	adc	r5, r1, r1
   36004:	adds	sl, r4, #1
   36008:	adc	fp, r5, #0
   3600c:	subs	r2, r2, #1
   36010:	beq	36030 <crc32@@Base+0x1c8e8>
   36014:	cmp	fp, r7
   36018:	cmpeq	sl, r6
   3601c:	bcs	35ff4 <crc32@@Base+0x1c8ac>
   36020:	adds	sl, sl, sl
   36024:	adc	fp, fp, fp
   36028:	subs	r2, r2, #1
   3602c:	bne	36014 <crc32@@Base+0x1c8cc>
   36030:	lsr	r2, sl, r3
   36034:	lsr	r9, fp, r3
   36038:	orr	r2, r2, fp, lsl lr
   3603c:	ldrd	r6, [sp]
   36040:	orr	r2, r2, fp, lsr ip
   36044:	lsl	r1, r9, r3
   36048:	adds	r6, r6, sl
   3604c:	orr	r1, r1, r2, lsl ip
   36050:	lsl	r0, r2, r3
   36054:	adc	r7, r7, fp
   36058:	orr	r1, r1, r2, lsr lr
   3605c:	subs	r6, r6, r0
   36060:	mov	sl, r2
   36064:	sbc	r7, r7, r1
   36068:	mov	fp, r9
   3606c:	strd	r6, [sp]
   36070:	b	36080 <crc32@@Base+0x1c938>
   36074:	mov	r2, #0
   36078:	mov	r3, #0
   3607c:	strd	r2, [sp]
   36080:	cmp	r8, #0
   36084:	ldrd	r0, [sp]
   36088:	strdne	sl, [r8]
   3608c:	add	sp, sp, #12
   36090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36094:	mov	r2, #1
   36098:	subs	sl, sl, r6
   3609c:	lsl	r1, r2, ip
   360a0:	sbc	fp, fp, r7
   360a4:	orr	r1, r1, r2, lsr lr
   360a8:	lsl	r2, r2, r3
   360ac:	str	r1, [sp, #4]
   360b0:	str	r2, [sp]
   360b4:	b	35fdc <crc32@@Base+0x1c894>
   360b8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   360bc:	mov	r7, r0
   360c0:	ldr	r6, [pc, #76]	; 36114 <crc32@@Base+0x1c9cc>
   360c4:	mov	r8, r1
   360c8:	ldr	r5, [pc, #72]	; 36118 <crc32@@Base+0x1c9d0>
   360cc:	mov	r9, r2
   360d0:	add	r6, pc, r6
   360d4:	bl	12048 <_init@@Base>
   360d8:	add	r5, pc, r5
   360dc:	rsb	r6, r5, r6
   360e0:	asrs	r6, r6, #2
   360e4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   360e8:	sub	r5, r5, #4
   360ec:	mov	r4, #0
   360f0:	add	r4, r4, #1
   360f4:	ldr	r3, [r5, #4]!
   360f8:	mov	r0, r7
   360fc:	mov	r1, r8
   36100:	mov	r2, r9
   36104:	blx	r3
   36108:	cmp	r4, r6
   3610c:	bne	360f0 <crc32@@Base+0x1c9a8>
   36110:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   36114:	andeq	r8, r1, r4, lsl lr
   36118:	andeq	r8, r1, r8, lsl #28
   3611c:	bx	lr

Disassembly of section .fini:

00036120 <_fini@@Base>:
   36120:	push	{r3, lr}
   36124:	pop	{r3, pc}
