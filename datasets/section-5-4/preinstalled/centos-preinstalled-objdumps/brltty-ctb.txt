
centos-preinstalled/brltty-ctb:     file format elf32-littlearm


Disassembly of section .init:

00014c30 <_init@@Base>:
   14c30:	push	{r3, lr}
   14c34:	bl	155e8 <_start@@Base+0x3c>
   14c38:	pop	{r3, pc}

Disassembly of section .plt:

00014c3c <chdir@plt-0x14>:
   14c3c:	push	{lr}		; (str lr, [sp, #-4]!)
   14c40:	ldr	lr, [pc, #4]	; 14c4c <_init@@Base+0x1c>
   14c44:	add	lr, pc, lr
   14c48:	ldr	pc, [lr, #8]!
   14c4c:			; <UNDEFINED> instruction: 0x000263b4

00014c50 <chdir@plt>:
   14c50:	add	ip, pc, #0, 12
   14c54:	add	ip, ip, #155648	; 0x26000
   14c58:	ldr	pc, [ip, #948]!	; 0x3b4

00014c5c <pthread_mutex_lock@plt>:
   14c5c:	add	ip, pc, #0, 12
   14c60:	add	ip, ip, #155648	; 0x26000
   14c64:	ldr	pc, [ip, #940]!	; 0x3ac

00014c68 <localtime_r@plt>:
   14c68:	add	ip, pc, #0, 12
   14c6c:	add	ip, ip, #155648	; 0x26000
   14c70:	ldr	pc, [ip, #932]!	; 0x3a4

00014c74 <wcslen@plt>:
   14c74:	add	ip, pc, #0, 12
   14c78:	add	ip, ip, #155648	; 0x26000
   14c7c:	ldr	pc, [ip, #924]!	; 0x39c

00014c80 <towlower@plt>:
   14c80:	add	ip, pc, #0, 12
   14c84:	add	ip, ip, #155648	; 0x26000
   14c88:	ldr	pc, [ip, #916]!	; 0x394

00014c8c <ftruncate@plt>:
   14c8c:	add	ip, pc, #0, 12
   14c90:	add	ip, ip, #155648	; 0x26000
   14c94:	ldr	pc, [ip, #908]!	; 0x38c

00014c98 <iswspace@plt>:
   14c98:	add	ip, pc, #0, 12
   14c9c:	add	ip, ip, #155648	; 0x26000
   14ca0:	ldr	pc, [ip, #900]!	; 0x384

00014ca4 <getpid@plt>:
   14ca4:	add	ip, pc, #0, 12
   14ca8:	add	ip, ip, #155648	; 0x26000
   14cac:	ldr	pc, [ip, #892]!	; 0x37c

00014cb0 <__memcpy_chk@plt>:
   14cb0:	add	ip, pc, #0, 12
   14cb4:	add	ip, ip, #155648	; 0x26000
   14cb8:	ldr	pc, [ip, #884]!	; 0x374

00014cbc <pthread_rwlock_destroy@plt>:
   14cbc:	add	ip, pc, #0, 12
   14cc0:	add	ip, ip, #155648	; 0x26000
   14cc4:	ldr	pc, [ip, #876]!	; 0x36c

00014cc8 <dlerror@plt>:
   14cc8:	add	ip, pc, #0, 12
   14ccc:	add	ip, ip, #155648	; 0x26000
   14cd0:	ldr	pc, [ip, #868]!	; 0x364

00014cd4 <gettimeofday@plt>:
   14cd4:	add	ip, pc, #0, 12
   14cd8:	add	ip, ip, #155648	; 0x26000
   14cdc:	ldr	pc, [ip, #860]!	; 0x35c

00014ce0 <iswupper@plt>:
   14ce0:	add	ip, pc, #0, 12
   14ce4:	add	ip, ip, #155648	; 0x26000
   14ce8:	ldr	pc, [ip, #852]!	; 0x354

00014cec <strcasecmp@plt>:
   14cec:	add	ip, pc, #0, 12
   14cf0:	add	ip, ip, #155648	; 0x26000
   14cf4:	ldr	pc, [ip, #844]!	; 0x34c

00014cf8 <fdopen@plt>:
   14cf8:	add	ip, pc, #0, 12
   14cfc:	add	ip, ip, #155648	; 0x26000
   14d00:	ldr	pc, [ip, #836]!	; 0x344

00014d04 <strtol@plt>:
   14d04:	add	ip, pc, #0, 12
   14d08:	add	ip, ip, #155648	; 0x26000
   14d0c:	ldr	pc, [ip, #828]!	; 0x33c

00014d10 <free@plt>:
   14d10:	add	ip, pc, #0, 12
   14d14:	add	ip, ip, #155648	; 0x26000
   14d18:	ldr	pc, [ip, #820]!	; 0x334

00014d1c <iswalpha@plt>:
   14d1c:	add	ip, pc, #0, 12
   14d20:	add	ip, ip, #155648	; 0x26000
   14d24:	ldr	pc, [ip, #812]!	; 0x32c

00014d28 <__gcc_personality_v0@plt>:
   14d28:	add	ip, pc, #0, 12
   14d2c:	add	ip, ip, #155648	; 0x26000
   14d30:	ldr	pc, [ip, #804]!	; 0x324

00014d34 <qsort@plt>:
   14d34:	add	ip, pc, #0, 12
   14d38:	add	ip, ip, #155648	; 0x26000
   14d3c:	ldr	pc, [ip, #796]!	; 0x31c

00014d40 <strncmp@plt>:
   14d40:	add	ip, pc, #0, 12
   14d44:	add	ip, ip, #155648	; 0x26000
   14d48:	ldr	pc, [ip, #788]!	; 0x314

00014d4c <mbstowcs@plt>:
   14d4c:	add	ip, pc, #0, 12
   14d50:	add	ip, ip, #155648	; 0x26000
   14d54:	ldr	pc, [ip, #780]!	; 0x30c

00014d58 <__open_2@plt>:
   14d58:	add	ip, pc, #0, 12
   14d5c:	add	ip, ip, #155648	; 0x26000
   14d60:	ldr	pc, [ip, #772]!	; 0x304

00014d64 <strerror@plt>:
   14d64:	add	ip, pc, #0, 12
   14d68:	add	ip, ip, #155648	; 0x26000
   14d6c:	ldr	pc, [ip, #764]!	; 0x2fc

00014d70 <__xmknod@plt>:
   14d70:	add	ip, pc, #0, 12
   14d74:	add	ip, ip, #155648	; 0x26000
   14d78:	ldr	pc, [ip, #756]!	; 0x2f4

00014d7c <__vsnprintf_chk@plt>:
   14d7c:	add	ip, pc, #0, 12
   14d80:	add	ip, ip, #155648	; 0x26000
   14d84:	ldr	pc, [ip, #748]!	; 0x2ec

00014d88 <dlclose@plt>:
   14d88:	add	ip, pc, #0, 12
   14d8c:	add	ip, ip, #155648	; 0x26000
   14d90:	ldr	pc, [ip, #740]!	; 0x2e4

00014d94 <feof@plt>:
   14d94:	add	ip, pc, #0, 12
   14d98:	add	ip, ip, #155648	; 0x26000
   14d9c:	ldr	pc, [ip, #732]!	; 0x2dc

00014da0 <strtok@plt>:
   14da0:	add	ip, pc, #0, 12
   14da4:	add	ip, ip, #155648	; 0x26000
   14da8:	ldr	pc, [ip, #724]!	; 0x2d4

00014dac <nl_langinfo@plt>:
   14dac:	add	ip, pc, #0, 12
   14db0:	add	ip, ip, #155648	; 0x26000
   14db4:	ldr	pc, [ip, #716]!	; 0x2cc

00014db8 <wmemcpy@plt>:
   14db8:	add	ip, pc, #0, 12
   14dbc:	add	ip, ip, #155648	; 0x26000
   14dc0:	ldr	pc, [ip, #708]!	; 0x2c4

00014dc4 <textdomain@plt>:
   14dc4:	add	ip, pc, #0, 12
   14dc8:	add	ip, ip, #155648	; 0x26000
   14dcc:	ldr	pc, [ip, #700]!	; 0x2bc

00014dd0 <readlink@plt>:
   14dd0:	add	ip, pc, #0, 12
   14dd4:	add	ip, ip, #155648	; 0x26000
   14dd8:	ldr	pc, [ip, #692]!	; 0x2b4

00014ddc <__fprintf_chk@plt>:
   14ddc:	add	ip, pc, #0, 12
   14de0:	add	ip, ip, #155648	; 0x26000
   14de4:	ldr	pc, [ip, #684]!	; 0x2ac

00014de8 <strtoul@plt>:
   14de8:	add	ip, pc, #0, 12
   14dec:	add	ip, ip, #155648	; 0x26000
   14df0:	ldr	pc, [ip, #676]!	; 0x2a4

00014df4 <nanosleep@plt>:
   14df4:	add	ip, pc, #0, 12
   14df8:	add	ip, ip, #155648	; 0x26000
   14dfc:	ldr	pc, [ip, #668]!	; 0x29c

00014e00 <strftime@plt>:
   14e00:	add	ip, pc, #0, 12
   14e04:	add	ip, ip, #155648	; 0x26000
   14e08:	ldr	pc, [ip, #660]!	; 0x294

00014e0c <memset@plt>:
   14e0c:	add	ip, pc, #0, 12
   14e10:	add	ip, ip, #155648	; 0x26000
   14e14:	ldr	pc, [ip, #652]!	; 0x28c

00014e18 <closelog@plt>:
   14e18:	add	ip, pc, #0, 12
   14e1c:	add	ip, ip, #155648	; 0x26000
   14e20:	ldr	pc, [ip, #644]!	; 0x284

00014e24 <fcntl@plt>:
   14e24:	add	ip, pc, #0, 12
   14e28:	add	ip, ip, #155648	; 0x26000
   14e2c:	ldr	pc, [ip, #636]!	; 0x27c

00014e30 <pthread_rwlock_rdlock@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #155648	; 0x26000
   14e38:	ldr	pc, [ip, #628]!	; 0x274

00014e3c <wcschr@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #155648	; 0x26000
   14e44:	ldr	pc, [ip, #620]!	; 0x26c

00014e48 <snprintf@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #155648	; 0x26000
   14e50:	ldr	pc, [ip, #612]!	; 0x264

00014e54 <__strdup@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #155648	; 0x26000
   14e5c:	ldr	pc, [ip, #604]!	; 0x25c

00014e60 <sigaddset@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #155648	; 0x26000
   14e68:	ldr	pc, [ip, #596]!	; 0x254

00014e6c <close@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #155648	; 0x26000
   14e74:	ldr	pc, [ip, #588]!	; 0x24c

00014e78 <wmemcmp@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #155648	; 0x26000
   14e80:	ldr	pc, [ip, #580]!	; 0x244

00014e84 <fopen@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #155648	; 0x26000
   14e8c:	ldr	pc, [ip, #572]!	; 0x23c

00014e90 <read@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #155648	; 0x26000
   14e98:	ldr	pc, [ip, #564]!	; 0x234

00014e9c <wmemchr@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #155648	; 0x26000
   14ea4:	ldr	pc, [ip, #556]!	; 0x22c

00014ea8 <abort@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #155648	; 0x26000
   14eb0:	ldr	pc, [ip, #548]!	; 0x224

00014eb4 <bsearch@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #155648	; 0x26000
   14ebc:	ldr	pc, [ip, #540]!	; 0x21c

00014ec0 <poll@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #155648	; 0x26000
   14ec8:	ldr	pc, [ip, #532]!	; 0x214

00014ecc <__ctype_toupper_loc@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #155648	; 0x26000
   14ed4:	ldr	pc, [ip, #524]!	; 0x20c

00014ed8 <memmove@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #155648	; 0x26000
   14ee0:	ldr	pc, [ip, #516]!	; 0x204

00014ee4 <iswlower@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #155648	; 0x26000
   14eec:	ldr	pc, [ip, #508]!	; 0x1fc

00014ef0 <dlopen@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #155648	; 0x26000
   14ef8:	ldr	pc, [ip, #500]!	; 0x1f4

00014efc <kill@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #155648	; 0x26000
   14f04:	ldr	pc, [ip, #492]!	; 0x1ec

00014f08 <u_getIntPropertyValue_50@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #155648	; 0x26000
   14f10:	ldr	pc, [ip, #484]!	; 0x1e4

00014f14 <ioctl@plt>:
   14f14:	add	ip, pc, #0, 12
   14f18:	add	ip, ip, #155648	; 0x26000
   14f1c:	ldr	pc, [ip, #476]!	; 0x1dc

00014f20 <clock_gettime@plt>:
   14f20:	add	ip, pc, #0, 12
   14f24:	add	ip, ip, #155648	; 0x26000
   14f28:	ldr	pc, [ip, #468]!	; 0x1d4

00014f2c <realloc@plt>:
   14f2c:	add	ip, pc, #0, 12
   14f30:	add	ip, ip, #155648	; 0x26000
   14f34:	ldr	pc, [ip, #460]!	; 0x1cc

00014f38 <u_charFromName_50@plt>:
   14f38:	add	ip, pc, #0, 12
   14f3c:	add	ip, ip, #155648	; 0x26000
   14f40:	ldr	pc, [ip, #452]!	; 0x1c4

00014f44 <unorm_normalize_50@plt>:
   14f44:	add	ip, pc, #0, 12
   14f48:	add	ip, ip, #155648	; 0x26000
   14f4c:	ldr	pc, [ip, #444]!	; 0x1bc

00014f50 <strtod@plt>:
   14f50:	add	ip, pc, #0, 12
   14f54:	add	ip, ip, #155648	; 0x26000
   14f58:	ldr	pc, [ip, #436]!	; 0x1b4

00014f5c <iswpunct@plt>:
   14f5c:	add	ip, pc, #0, 12
   14f60:	add	ip, ip, #155648	; 0x26000
   14f64:	ldr	pc, [ip, #428]!	; 0x1ac

00014f68 <open@plt>:
   14f68:	add	ip, pc, #0, 12
   14f6c:	add	ip, ip, #155648	; 0x26000
   14f70:	ldr	pc, [ip, #420]!	; 0x1a4

00014f74 <waitpid@plt>:
   14f74:	add	ip, pc, #0, 12
   14f78:	add	ip, ip, #155648	; 0x26000
   14f7c:	ldr	pc, [ip, #412]!	; 0x19c

00014f80 <fread@plt>:
   14f80:	add	ip, pc, #0, 12
   14f84:	add	ip, ip, #155648	; 0x26000
   14f88:	ldr	pc, [ip, #404]!	; 0x194

00014f8c <fileno@plt>:
   14f8c:	add	ip, pc, #0, 12
   14f90:	add	ip, ip, #155648	; 0x26000
   14f94:	ldr	pc, [ip, #396]!	; 0x18c

00014f98 <pthread_rwlock_unlock@plt>:
   14f98:	add	ip, pc, #0, 12
   14f9c:	add	ip, ip, #155648	; 0x26000
   14fa0:	ldr	pc, [ip, #388]!	; 0x184

00014fa4 <__syslog_chk@plt>:
   14fa4:	add	ip, pc, #0, 12
   14fa8:	add	ip, ip, #155648	; 0x26000
   14fac:	ldr	pc, [ip, #380]!	; 0x17c

00014fb0 <pthread_rwlock_wrlock@plt>:
   14fb0:	add	ip, pc, #0, 12
   14fb4:	add	ip, ip, #155648	; 0x26000
   14fb8:	ldr	pc, [ip, #372]!	; 0x174

00014fbc <__stack_chk_fail@plt>:
   14fbc:	add	ip, pc, #0, 12
   14fc0:	add	ip, ip, #155648	; 0x26000
   14fc4:	ldr	pc, [ip, #364]!	; 0x16c

00014fc8 <pthread_rwlock_tryrdlock@plt>:
   14fc8:	add	ip, pc, #0, 12
   14fcc:	add	ip, ip, #155648	; 0x26000
   14fd0:	ldr	pc, [ip, #356]!	; 0x164

00014fd4 <fork@plt>:
   14fd4:	add	ip, pc, #0, 12
   14fd8:	add	ip, ip, #155648	; 0x26000
   14fdc:	ldr	pc, [ip, #348]!	; 0x15c

00014fe0 <access@plt>:
   14fe0:	add	ip, pc, #0, 12
   14fe4:	add	ip, ip, #155648	; 0x26000
   14fe8:	ldr	pc, [ip, #340]!	; 0x154

00014fec <dcgettext@plt>:
   14fec:	add	ip, pc, #0, 12
   14ff0:	add	ip, ip, #155648	; 0x26000
   14ff4:	ldr	pc, [ip, #332]!	; 0x14c

00014ff8 <mkdir@plt>:
   14ff8:	add	ip, pc, #0, 12
   14ffc:	add	ip, ip, #155648	; 0x26000
   15000:	ldr	pc, [ip, #324]!	; 0x144

00015004 <__cxa_atexit@plt>:
   15004:	add	ip, pc, #0, 12
   15008:	add	ip, ip, #155648	; 0x26000
   1500c:	ldr	pc, [ip, #316]!	; 0x13c

00015010 <strncasecmp@plt>:
   15010:	add	ip, pc, #0, 12
   15014:	add	ip, ip, #155648	; 0x26000
   15018:	ldr	pc, [ip, #308]!	; 0x134

0001501c <getopt_long@plt>:
   1501c:	add	ip, pc, #0, 12
   15020:	add	ip, ip, #155648	; 0x26000
   15024:	ldr	pc, [ip, #300]!	; 0x12c

00015028 <lseek@plt>:
   15028:	add	ip, pc, #0, 12
   1502c:	add	ip, ip, #155648	; 0x26000
   15030:	ldr	pc, [ip, #292]!	; 0x124

00015034 <raise@plt>:
   15034:	add	ip, pc, #0, 12
   15038:	add	ip, ip, #155648	; 0x26000
   1503c:	ldr	pc, [ip, #284]!	; 0x11c

00015040 <__ctype_b_loc@plt>:
   15040:	add	ip, pc, #0, 12
   15044:	add	ip, ip, #155648	; 0x26000
   15048:	ldr	pc, [ip, #276]!	; 0x114

0001504c <bindtextdomain@plt>:
   1504c:	add	ip, pc, #0, 12
   15050:	add	ip, ip, #155648	; 0x26000
   15054:	ldr	pc, [ip, #268]!	; 0x10c

00015058 <iswdigit@plt>:
   15058:	add	ip, pc, #0, 12
   1505c:	add	ip, ip, #155648	; 0x26000
   15060:	ldr	pc, [ip, #260]!	; 0x104

00015064 <sysconf@plt>:
   15064:	add	ip, pc, #0, 12
   15068:	add	ip, ip, #155648	; 0x26000
   1506c:	ldr	pc, [ip, #252]!	; 0xfc

00015070 <calloc@plt>:
   15070:	add	ip, pc, #0, 12
   15074:	add	ip, ip, #155648	; 0x26000
   15078:	ldr	pc, [ip, #244]!	; 0xf4

0001507c <setlocale@plt>:
   1507c:	add	ip, pc, #0, 12
   15080:	add	ip, ip, #155648	; 0x26000
   15084:	ldr	pc, [ip, #236]!	; 0xec

00015088 <ferror@plt>:
   15088:	add	ip, pc, #0, 12
   1508c:	add	ip, ip, #155648	; 0x26000
   15090:	ldr	pc, [ip, #228]!	; 0xe4

00015094 <iconv_close@plt>:
   15094:	add	ip, pc, #0, 12
   15098:	add	ip, ip, #155648	; 0x26000
   1509c:	ldr	pc, [ip, #220]!	; 0xdc

000150a0 <fgets@plt>:
   150a0:	add	ip, pc, #0, 12
   150a4:	add	ip, ip, #155648	; 0x26000
   150a8:	ldr	pc, [ip, #212]!	; 0xd4

000150ac <__fxstat@plt>:
   150ac:	add	ip, pc, #0, 12
   150b0:	add	ip, ip, #155648	; 0x26000
   150b4:	ldr	pc, [ip, #204]!	; 0xcc

000150b8 <fputc@plt>:
   150b8:	add	ip, pc, #0, 12
   150bc:	add	ip, ip, #155648	; 0x26000
   150c0:	ldr	pc, [ip, #196]!	; 0xc4

000150c4 <fwrite@plt>:
   150c4:	add	ip, pc, #0, 12
   150c8:	add	ip, ip, #155648	; 0x26000
   150cc:	ldr	pc, [ip, #188]!	; 0xbc

000150d0 <memcpy@plt>:
   150d0:	add	ip, pc, #0, 12
   150d4:	add	ip, ip, #155648	; 0x26000
   150d8:	ldr	pc, [ip, #180]!	; 0xb4

000150dc <malloc@plt>:
   150dc:	add	ip, pc, #0, 12
   150e0:	add	ip, ip, #155648	; 0x26000
   150e4:	ldr	pc, [ip, #172]!	; 0xac

000150e8 <strlen@plt>:
   150e8:	add	ip, pc, #0, 12
   150ec:	add	ip, ip, #155648	; 0x26000
   150f0:	ldr	pc, [ip, #164]!	; 0xa4

000150f4 <__snprintf_chk@plt>:
   150f4:	add	ip, pc, #0, 12
   150f8:	add	ip, ip, #155648	; 0x26000
   150fc:	ldr	pc, [ip, #156]!	; 0x9c

00015100 <ioperm@plt>:
   15100:	add	ip, pc, #0, 12
   15104:	add	ip, ip, #155648	; 0x26000
   15108:	ldr	pc, [ip, #148]!	; 0x94

0001510c <outb@plt>:
   1510c:	add	ip, pc, #0, 12
   15110:	add	ip, ip, #155648	; 0x26000
   15114:	ldr	pc, [ip, #140]!	; 0x8c

00015118 <getcwd@plt>:
   15118:	add	ip, pc, #0, 12
   1511c:	add	ip, ip, #155648	; 0x26000
   15120:	ldr	pc, [ip, #132]!	; 0x84

00015124 <fclose@plt>:
   15124:	add	ip, pc, #0, 12
   15128:	add	ip, ip, #155648	; 0x26000
   1512c:	ldr	pc, [ip, #124]!	; 0x7c

00015130 <write@plt>:
   15130:	add	ip, pc, #0, 12
   15134:	add	ip, ip, #155648	; 0x26000
   15138:	ldr	pc, [ip, #116]!	; 0x74

0001513c <inb@plt>:
   1513c:	add	ip, pc, #0, 12
   15140:	add	ip, ip, #155648	; 0x26000
   15144:	ldr	pc, [ip, #108]!	; 0x6c

00015148 <mempcpy@plt>:
   15148:	add	ip, pc, #0, 12
   1514c:	add	ip, ip, #155648	; 0x26000
   15150:	ldr	pc, [ip, #100]!	; 0x64

00015154 <__xstat@plt>:
   15154:	add	ip, pc, #0, 12
   15158:	add	ip, ip, #155648	; 0x26000
   1515c:	ldr	pc, [ip, #92]!	; 0x5c

00015160 <pthread_rwlock_trywrlock@plt>:
   15160:	add	ip, pc, #0, 12
   15164:	add	ip, ip, #155648	; 0x26000
   15168:	ldr	pc, [ip, #84]!	; 0x54

0001516c <__realpath_chk@plt>:
   1516c:	add	ip, pc, #0, 12
   15170:	add	ip, ip, #155648	; 0x26000
   15174:	ldr	pc, [ip, #76]!	; 0x4c

00015178 <iconv_open@plt>:
   15178:	add	ip, pc, #0, 12
   1517c:	add	ip, ip, #155648	; 0x26000
   15180:	ldr	pc, [ip, #68]!	; 0x44

00015184 <pthread_rwlock_init@plt>:
   15184:	add	ip, pc, #0, 12
   15188:	add	ip, ip, #155648	; 0x26000
   1518c:	ldr	pc, [ip, #60]!	; 0x3c

00015190 <_exit@plt>:
   15190:	add	ip, pc, #0, 12
   15194:	add	ip, ip, #155648	; 0x26000
   15198:	ldr	pc, [ip, #52]!	; 0x34

0001519c <strcmp@plt>:
   1519c:	add	ip, pc, #0, 12
   151a0:	add	ip, ip, #155648	; 0x26000
   151a4:	ldr	pc, [ip, #44]!	; 0x2c

000151a8 <iconv@plt>:
   151a8:	add	ip, pc, #0, 12
   151ac:	add	ip, ip, #155648	; 0x26000
   151b0:	ldr	pc, [ip, #36]!	; 0x24

000151b4 <__errno_location@plt>:
   151b4:	add	ip, pc, #0, 12
   151b8:	add	ip, ip, #155648	; 0x26000
   151bc:	ldr	pc, [ip, #28]!

000151c0 <mount@plt>:
   151c0:	add	ip, pc, #0, 12
   151c4:	add	ip, ip, #155648	; 0x26000
   151c8:	ldr	pc, [ip, #20]!

000151cc <memchr@plt>:
   151cc:	add	ip, pc, #0, 12
   151d0:	add	ip, ip, #155648	; 0x26000
   151d4:	ldr	pc, [ip, #12]!

000151d8 <sscanf@plt>:
   151d8:	add	ip, pc, #0, 12
   151dc:	add	ip, ip, #155648	; 0x26000
   151e0:	ldr	pc, [ip, #4]!

000151e4 <strncpy@plt>:
   151e4:	add	ip, pc, #0, 12
   151e8:	add	ip, ip, #151552	; 0x25000
   151ec:	ldr	pc, [ip, #4092]!	; 0xffc

000151f0 <towupper@plt>:
   151f0:	add	ip, pc, #0, 12
   151f4:	add	ip, ip, #151552	; 0x25000
   151f8:	ldr	pc, [ip, #4084]!	; 0xff4

000151fc <fflush@plt>:
   151fc:	add	ip, pc, #0, 12
   15200:	add	ip, ip, #151552	; 0x25000
   15204:	ldr	pc, [ip, #4076]!	; 0xfec

00015208 <_Unwind_Resume@plt>:
   15208:	add	ip, pc, #0, 12
   1520c:	add	ip, ip, #151552	; 0x25000
   15210:	ldr	pc, [ip, #4068]!	; 0xfe4

00015214 <memcmp@plt>:
   15214:	add	ip, pc, #0, 12
   15218:	add	ip, ip, #151552	; 0x25000
   1521c:	ldr	pc, [ip, #4060]!	; 0xfdc

00015220 <sigemptyset@plt>:
   15220:	add	ip, pc, #0, 12
   15224:	add	ip, ip, #151552	; 0x25000
   15228:	ldr	pc, [ip, #4052]!	; 0xfd4

0001522c <strrchr@plt>:
   1522c:	add	ip, pc, #0, 12
   15230:	add	ip, ip, #151552	; 0x25000
   15234:	ldr	pc, [ip, #4044]!	; 0xfcc

00015238 <mktime@plt>:
   15238:	add	ip, pc, #0, 12
   1523c:	add	ip, ip, #151552	; 0x25000
   15240:	ldr	pc, [ip, #4036]!	; 0xfc4

00015244 <openlog@plt>:
   15244:	add	ip, pc, #0, 12
   15248:	add	ip, ip, #151552	; 0x25000
   1524c:	ldr	pc, [ip, #4028]!	; 0xfbc

00015250 <fputs@plt>:
   15250:	add	ip, pc, #0, 12
   15254:	add	ip, ip, #151552	; 0x25000
   15258:	ldr	pc, [ip, #4020]!	; 0xfb4

0001525c <getenv@plt>:
   1525c:	add	ip, pc, #0, 12
   15260:	add	ip, ip, #151552	; 0x25000
   15264:	ldr	pc, [ip, #4012]!	; 0xfac

00015268 <__libc_start_main@plt>:
   15268:	add	ip, pc, #0, 12
   1526c:	add	ip, ip, #151552	; 0x25000
   15270:	ldr	pc, [ip, #4004]!	; 0xfa4

00015274 <dlsym@plt>:
   15274:	add	ip, pc, #0, 12
   15278:	add	ip, ip, #151552	; 0x25000
   1527c:	ldr	pc, [ip, #3996]!	; 0xf9c

00015280 <execvp@plt>:
   15280:	add	ip, pc, #0, 12
   15284:	add	ip, ip, #151552	; 0x25000
   15288:	ldr	pc, [ip, #3988]!	; 0xf94

0001528c <__gmon_start__@plt>:
   1528c:	add	ip, pc, #0, 12
   15290:	add	ip, ip, #151552	; 0x25000
   15294:	ldr	pc, [ip, #3980]!	; 0xf8c

00015298 <sigprocmask@plt>:
   15298:	add	ip, pc, #0, 12
   1529c:	add	ip, ip, #151552	; 0x25000
   152a0:	ldr	pc, [ip, #3972]!	; 0xf84

000152a4 <strchr@plt>:
   152a4:	add	ip, pc, #0, 12
   152a8:	add	ip, ip, #151552	; 0x25000
   152ac:	ldr	pc, [ip, #3964]!	; 0xf7c

000152b0 <pthread_mutex_unlock@plt>:
   152b0:	add	ip, pc, #0, 12
   152b4:	add	ip, ip, #151552	; 0x25000
   152b8:	ldr	pc, [ip, #3956]!	; 0xf74

000152bc <pipe@plt>:
   152bc:	add	ip, pc, #0, 12
   152c0:	add	ip, ip, #151552	; 0x25000
   152c4:	ldr	pc, [ip, #3948]!	; 0xf6c

Disassembly of section .text:

000152c8 <main@@Base>:
   152c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152cc:	movw	r5, #45784	; 0xb2d8
   152d0:	movt	r5, #3
   152d4:	sub	sp, sp, #28
   152d8:	mov	r4, #0
   152dc:	ldr	r3, [r5]
   152e0:	str	r0, [sp, #4]
   152e4:	str	r1, [sp]
   152e8:	str	r3, [sp, #20]
   152ec:	bl	1cf08 <resetPreferences@@Base>
   152f0:	movw	r3, #46144	; 0xb440
   152f4:	movt	r3, #3
   152f8:	movw	r0, #23452	; 0x5b9c
   152fc:	add	r1, sp, #4
   15300:	movt	r0, #2
   15304:	mov	r2, sp
   15308:	strb	r4, [r3, #38]	; 0x26
   1530c:	bl	16d38 <processOptions@@Base>
   15310:	cmp	r0, #1
   15314:	mov	r6, r0
   15318:	moveq	r0, r4
   1531c:	beq	1532c <main@@Base+0x64>
   15320:	cmp	r6, r4
   15324:	beq	15344 <main@@Base+0x7c>
   15328:	mov	r0, r6
   1532c:	ldr	r2, [sp, #20]
   15330:	ldr	r3, [r5]
   15334:	cmp	r2, r3
   15338:	bne	155a4 <main@@Base+0x2dc>
   1533c:	add	sp, sp, #28
   15340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15344:	movw	r4, #45796	; 0xb2e4
   15348:	movt	r4, #3
   1534c:	add	r0, sp, #12
   15350:	add	r3, r4, #44	; 0x2c
   15354:	str	r6, [sp, #16]
   15358:	str	r3, [sp, #12]
   1535c:	bl	16098 <fixInstallPaths@@Base>
   15360:	ldr	r1, [r4, #48]	; 0x30
   15364:	movw	r2, #45788	; 0xb2dc
   15368:	movt	r2, #3
   1536c:	str	r6, [r4, #28]
   15370:	str	r6, [r4, #36]	; 0x24
   15374:	ldrb	r3, [r1]
   15378:	ldr	r2, [r2]
   1537c:	rsbs	r3, r3, #1
   15380:	str	r6, [r4, #24]
   15384:	str	r6, [r4, #8]
   15388:	movcc	r3, #0
   1538c:	cmp	r3, #0
   15390:	str	r2, [r4]
   15394:	str	r3, [r4, #16]
   15398:	beq	15500 <main@@Base+0x238>
   1539c:	mov	r3, #128	; 0x80
   153a0:	str	r3, [r4, #4]
   153a4:	ldr	r0, [r4, #44]	; 0x2c
   153a8:	movw	r6, #45796	; 0xb2e4
   153ac:	ldr	r1, [r4, #52]	; 0x34
   153b0:	movt	r6, #3
   153b4:	bl	2129c <makeContractionTablePath@@Base>
   153b8:	subs	r9, r0, #0
   153bc:	moveq	r6, #4
   153c0:	beq	154dc <main@@Base+0x214>
   153c4:	bl	20e70 <compileContractionTable@@Base>
   153c8:	cmp	r0, #0
   153cc:	str	r0, [r6, #12]
   153d0:	moveq	r6, #4
   153d4:	beq	154d4 <main@@Base+0x20c>
   153d8:	ldr	r1, [r6, #56]	; 0x38
   153dc:	ldrb	r3, [r1]
   153e0:	cmp	r3, #0
   153e4:	bne	15538 <main@@Base+0x270>
   153e8:	movw	r7, #45756	; 0xb2bc
   153ec:	movt	r7, #3
   153f0:	movw	r3, #22308	; 0x5724
   153f4:	movt	r3, #1
   153f8:	str	r3, [r6, #20]
   153fc:	ldr	r3, [sp, #4]
   15400:	cmp	r3, #0
   15404:	beq	1557c <main@@Base+0x2b4>
   15408:	movw	r8, #45776	; 0xb2d0
   1540c:	ldr	r3, [sp]
   15410:	movt	r8, #3
   15414:	b	1544c <main@@Base+0x184>
   15418:	ldr	r0, [r8]
   1541c:	bl	159b8 <_start@@Base+0x40c>
   15420:	mov	r6, r0
   15424:	cmp	r6, #0
   15428:	bne	154bc <main@@Base+0x1f4>
   1542c:	ldr	r2, [sp, #4]
   15430:	ldr	r3, [sp]
   15434:	sub	r2, r2, #1
   15438:	str	r2, [sp, #4]
   1543c:	cmp	r2, #0
   15440:	add	r3, r3, #4
   15444:	str	r3, [sp]
   15448:	beq	154bc <main@@Base+0x1f4>
   1544c:	ldr	sl, [r3]
   15450:	movw	r1, #24288	; 0x5ee0
   15454:	movt	r1, #2
   15458:	mov	r0, sl
   1545c:	bl	1519c <strcmp@plt>
   15460:	cmp	r0, #0
   15464:	beq	15418 <main@@Base+0x150>
   15468:	movw	r1, #30036	; 0x7554
   1546c:	mov	r0, sl
   15470:	movt	r1, #2
   15474:	bl	14e84 <fopen@plt>
   15478:	subs	fp, r0, #0
   1547c:	beq	15494 <main@@Base+0x1cc>
   15480:	bl	159b8 <_start@@Base+0x40c>
   15484:	mov	r6, r0
   15488:	mov	r0, fp
   1548c:	bl	15124 <fclose@plt>
   15490:	b	15424 <main@@Base+0x15c>
   15494:	bl	151b4 <__errno_location@plt>
   15498:	mov	r6, #4
   1549c:	ldr	r0, [r0]
   154a0:	bl	14d64 <strerror@plt>
   154a4:	movw	r1, #23740	; 0x5cbc
   154a8:	mov	r2, sl
   154ac:	movt	r1, #2
   154b0:	mov	r3, r0
   154b4:	mov	r0, #3
   154b8:	bl	183d0 <logMessage@@Base>
   154bc:	ldr	r0, [r7]
   154c0:	cmp	r0, #0
   154c4:	beq	154cc <main@@Base+0x204>
   154c8:	bl	1f524 <destroyTextTable@@Base>
   154cc:	ldr	r0, [r4, #12]
   154d0:	bl	211dc <destroyContractionTable@@Base>
   154d4:	mov	r0, r9
   154d8:	bl	14d10 <free@plt>
   154dc:	ldr	r0, [r4, #8]
   154e0:	cmp	r0, #0
   154e4:	beq	154ec <main@@Base+0x224>
   154e8:	bl	14d10 <free@plt>
   154ec:	ldr	r0, [r4, #28]
   154f0:	cmp	r0, #0
   154f4:	beq	15328 <main@@Base+0x60>
   154f8:	bl	14d10 <free@plt>
   154fc:	b	15328 <main@@Base+0x60>
   15500:	add	r0, r4, #4
   15504:	ldr	r2, [pc, #156]	; 155a8 <main@@Base+0x2e0>
   15508:	bl	19d94 <validateInteger@@Base>
   1550c:	cmp	r0, #0
   15510:	bne	153a4 <main@@Base+0xdc>
   15514:	mov	r0, #3
   15518:	ldr	r3, [r4, #48]	; 0x30
   1551c:	movw	r1, #26656	; 0x6820
   15520:	movw	r2, #23716	; 0x5ca4
   15524:	movt	r1, #2
   15528:	movt	r2, #2
   1552c:	bl	183d0 <logMessage@@Base>
   15530:	mov	r0, #2
   15534:	b	1532c <main@@Base+0x64>
   15538:	ldr	r0, [r6, #44]	; 0x2c
   1553c:	movw	r3, #22424	; 0x5798
   15540:	movt	r3, #1
   15544:	str	r3, [r6, #20]
   15548:	bl	1f55c <makeTextTablePath@@Base>
   1554c:	subs	r6, r0, #0
   15550:	moveq	r6, #4
   15554:	beq	154cc <main@@Base+0x204>
   15558:	bl	1fc70 <compileTextTable@@Base>
   1555c:	movw	r7, #45756	; 0xb2bc
   15560:	movt	r7, #3
   15564:	cmp	r0, #0
   15568:	str	r0, [r7]
   1556c:	beq	15594 <main@@Base+0x2cc>
   15570:	mov	r0, r6
   15574:	bl	14d10 <free@plt>
   15578:	b	153fc <main@@Base+0x134>
   1557c:	movw	r3, #45776	; 0xb2d0
   15580:	movt	r3, #3
   15584:	ldr	r0, [r3]
   15588:	bl	159b8 <_start@@Base+0x40c>
   1558c:	mov	r6, r0
   15590:	b	154bc <main@@Base+0x1f4>
   15594:	mov	r0, r6
   15598:	mov	r6, #4
   1559c:	bl	14d10 <free@plt>
   155a0:	b	154cc <main@@Base+0x204>
   155a4:	bl	14fbc <__stack_chk_fail@plt>
   155a8:			; <UNDEFINED> instruction: 0x00025bb8

000155ac <_start@@Base>:
   155ac:	mov	fp, #0
   155b0:	mov	lr, #0
   155b4:	pop	{r1}		; (ldr r1, [sp], #4)
   155b8:	mov	r2, sp
   155bc:	push	{r2}		; (str r2, [sp, #-4]!)
   155c0:	push	{r0}		; (str r0, [sp, #-4]!)
   155c4:	ldr	ip, [pc, #16]	; 155dc <_start@@Base+0x30>
   155c8:	push	{ip}		; (str ip, [sp, #-4]!)
   155cc:	ldr	r0, [pc, #12]	; 155e0 <_start@@Base+0x34>
   155d0:	ldr	r3, [pc, #12]	; 155e4 <_start@@Base+0x38>
   155d4:	bl	15268 <__libc_start_main@plt>
   155d8:	bl	14ea8 <abort@plt>
   155dc:	andeq	r5, r2, ip, asr fp
   155e0:	andeq	r5, r1, r8, asr #5
   155e4:	strdeq	r5, [r2], -r8
   155e8:	ldr	r3, [pc, #20]	; 15604 <_start@@Base+0x58>
   155ec:	ldr	r2, [pc, #20]	; 15608 <_start@@Base+0x5c>
   155f0:	add	r3, pc, r3
   155f4:	ldr	r2, [r3, r2]
   155f8:	cmp	r2, #0
   155fc:	bxeq	lr
   15600:	b	1528c <__gmon_start__@plt>
   15604:	andeq	r5, r2, r8, lsl #20
   15608:	andeq	r0, r0, r8, lsr #5
   1560c:	push	{r3, lr}
   15610:	movw	r0, #45776	; 0xb2d0
   15614:	ldr	r3, [pc, #36]	; 15640 <_start@@Base+0x94>
   15618:	movt	r0, #3
   1561c:	rsb	r3, r0, r3
   15620:	cmp	r3, #6
   15624:	popls	{r3, pc}
   15628:	movw	r3, #0
   1562c:	movt	r3, #0
   15630:	cmp	r3, #0
   15634:	popeq	{r3, pc}
   15638:	blx	r3
   1563c:	pop	{r3, pc}
   15640:	ldrdeq	fp, [r3], -r3
   15644:	push	{r3, lr}
   15648:	movw	r0, #45776	; 0xb2d0
   1564c:	movw	r3, #45776	; 0xb2d0
   15650:	movt	r0, #3
   15654:	movt	r3, #3
   15658:	rsb	r3, r0, r3
   1565c:	asr	r3, r3, #2
   15660:	add	r3, r3, r3, lsr #31
   15664:	asrs	r1, r3, #1
   15668:	popeq	{r3, pc}
   1566c:	movw	r2, #0
   15670:	movt	r2, #0
   15674:	cmp	r2, #0
   15678:	popeq	{r3, pc}
   1567c:	blx	r2
   15680:	pop	{r3, pc}
   15684:	push	{r4, lr}
   15688:	movw	r4, #45792	; 0xb2e0
   1568c:	movt	r4, #3
   15690:	ldrb	r3, [r4]
   15694:	cmp	r3, #0
   15698:	popne	{r4, pc}
   1569c:	bl	1560c <_start@@Base+0x60>
   156a0:	mov	r3, #1
   156a4:	strb	r3, [r4]
   156a8:	pop	{r4, pc}
   156ac:	movw	r0, #42500	; 0xa604
   156b0:	movt	r0, #3
   156b4:	push	{r3, lr}
   156b8:	ldr	r3, [r0]
   156bc:	cmp	r3, #0
   156c0:	beq	156d8 <_start@@Base+0x12c>
   156c4:	movw	r3, #0
   156c8:	movt	r3, #0
   156cc:	cmp	r3, #0
   156d0:	beq	156d8 <_start@@Base+0x12c>
   156d4:	blx	r3
   156d8:	pop	{r3, lr}
   156dc:	b	15644 <_start@@Base+0x98>
   156e0:	movw	r3, #45796	; 0xb2e4
   156e4:	movt	r3, #3
   156e8:	push	{r4, lr}
   156ec:	mov	r4, r0
   156f0:	ldr	r0, [r3]
   156f4:	bl	15088 <ferror@plt>
   156f8:	cmp	r0, #0
   156fc:	bne	15708 <_start@@Base+0x15c>
   15700:	mov	r0, #1
   15704:	pop	{r4, pc}
   15708:	movw	r0, #23708	; 0x5c9c
   1570c:	movt	r0, #2
   15710:	bl	18498 <logSystemError@@Base>
   15714:	mov	r2, #4
   15718:	mov	r0, #0
   1571c:	str	r2, [r4]
   15720:	pop	{r4, pc}
   15724:	push	{r4, r5, r6, lr}
   15728:	movw	r4, #45784	; 0xb2d8
   1572c:	movt	r4, #3
   15730:	sub	sp, sp, #24
   15734:	add	r5, sp, #12
   15738:	mov	r6, r1
   1573c:	ldr	r3, [r4]
   15740:	orr	r0, r0, #10240	; 0x2800
   15744:	mov	r1, r5
   15748:	str	r3, [sp, #20]
   1574c:	bl	241e0 <convertWcharToUtf8@@Base>
   15750:	movw	r2, #45796	; 0xb2e4
   15754:	movt	r2, #3
   15758:	str	r5, [sp]
   1575c:	mov	r1, #1
   15760:	mov	r3, r0
   15764:	ldr	r0, [r2]
   15768:	movw	r2, #29852	; 0x749c
   1576c:	movt	r2, #2
   15770:	bl	14ddc <__fprintf_chk@plt>
   15774:	mov	r0, r6
   15778:	bl	156e0 <_start@@Base+0x134>
   1577c:	ldr	r2, [sp, #20]
   15780:	ldr	r3, [r4]
   15784:	cmp	r2, r3
   15788:	bne	15794 <_start@@Base+0x1e8>
   1578c:	add	sp, sp, #24
   15790:	pop	{r4, r5, r6, pc}
   15794:	bl	14fbc <__stack_chk_fail@plt>
   15798:	movw	r3, #45756	; 0xb2bc
   1579c:	movt	r3, #3
   157a0:	mov	r2, r0
   157a4:	push	{r4, lr}
   157a8:	mov	r4, r1
   157ac:	ldr	r0, [r3]
   157b0:	mov	r1, r2
   157b4:	bl	1fed4 <convertDotsToCharacter@@Base>
   157b8:	movw	r3, #45796	; 0xb2e4
   157bc:	movt	r3, #3
   157c0:	ldr	r1, [r3]
   157c4:	bl	150b8 <fputc@plt>
   157c8:	mov	r0, r4
   157cc:	pop	{r4, lr}
   157d0:	b	156e0 <_start@@Base+0x134>
   157d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   157d8:	movw	r6, #45784	; 0xb2d8
   157dc:	movt	r6, #3
   157e0:	sub	sp, sp, #44	; 0x2c
   157e4:	subs	r5, r1, #0
   157e8:	mov	r8, r0
   157ec:	ldr	r3, [r6]
   157f0:	mov	r4, r2
   157f4:	str	r3, [sp, #36]	; 0x24
   157f8:	beq	158c8 <_start@@Base+0x31c>
   157fc:	movw	sl, #45796	; 0xb2e4
   15800:	movt	sl, #3
   15804:	mov	r9, #0
   15808:	ldr	r0, [sl, #4]
   1580c:	mov	r7, sl
   15810:	ldr	r3, [sl, #8]
   15814:	cmp	r3, #0
   15818:	str	r5, [sp, #28]
   1581c:	str	r0, [sp, #32]
   15820:	beq	158d0 <_start@@Base+0x324>
   15824:	add	r2, sp, #32
   15828:	mvn	ip, #0
   1582c:	str	r2, [sp]
   15830:	mov	r1, r8
   15834:	ldr	r0, [sl, #12]
   15838:	add	r2, sp, #28
   1583c:	str	r9, [sp, #4]
   15840:	str	ip, [sp, #8]
   15844:	bl	225c0 <contractText@@Base>
   15848:	ldr	r3, [sp, #28]
   1584c:	cmp	r3, r5
   15850:	bcs	15860 <_start@@Base+0x2b4>
   15854:	ldr	r2, [r7, #16]
   15858:	cmp	r2, #0
   1585c:	bne	158e8 <_start@@Base+0x33c>
   15860:	ldr	r2, [sp, #32]
   15864:	cmp	r2, #0
   15868:	movgt	fp, #0
   1586c:	bgt	15884 <_start@@Base+0x2d8>
   15870:	b	158c0 <_start@@Base+0x314>
   15874:	ldr	r2, [sp, #32]
   15878:	add	fp, fp, #1
   1587c:	cmp	r2, fp
   15880:	ble	158bc <_start@@Base+0x310>
   15884:	ldr	r0, [sl, #8]
   15888:	mov	r1, r4
   1588c:	ldr	r2, [sl, #20]
   15890:	ldrb	r0, [r0, fp]
   15894:	blx	r2
   15898:	cmp	r0, #0
   1589c:	bne	15874 <_start@@Base+0x2c8>
   158a0:	mov	r0, #0
   158a4:	ldr	r2, [sp, #36]	; 0x24
   158a8:	ldr	r3, [r6]
   158ac:	cmp	r2, r3
   158b0:	bne	15948 <_start@@Base+0x39c>
   158b4:	add	sp, sp, #44	; 0x2c
   158b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158bc:	ldr	r3, [sp, #28]
   158c0:	subs	r5, r5, r3
   158c4:	bne	15908 <_start@@Base+0x35c>
   158c8:	mov	r0, #1
   158cc:	b	158a4 <_start@@Base+0x2f8>
   158d0:	bl	150dc <malloc@plt>
   158d4:	cmp	r0, #0
   158d8:	str	r0, [sl, #8]
   158dc:	beq	15938 <_start@@Base+0x38c>
   158e0:	mov	r3, r0
   158e4:	b	15824 <_start@@Base+0x278>
   158e8:	ldr	r0, [r7, #8]
   158ec:	bl	14d10 <free@plt>
   158f0:	ldr	r0, [r7, #4]
   158f4:	str	r9, [r7, #8]
   158f8:	mov	r3, #0
   158fc:	lsl	r0, r0, #1
   15900:	str	r0, [r7, #4]
   15904:	b	15814 <_start@@Base+0x268>
   15908:	ldr	r1, [sl]
   1590c:	mov	r0, #10
   15910:	str	r3, [sp, #20]
   15914:	bl	150b8 <fputc@plt>
   15918:	mov	r0, r4
   1591c:	bl	156e0 <_start@@Base+0x134>
   15920:	ldr	r3, [sp, #20]
   15924:	cmp	r0, #0
   15928:	beq	158a0 <_start@@Base+0x2f4>
   1592c:	add	r8, r8, r3, lsl #2
   15930:	ldmib	r7, {r0, r3}
   15934:	b	15814 <_start@@Base+0x268>
   15938:	bl	184dc <logMallocError@@Base>
   1593c:	mov	r3, #4
   15940:	str	r3, [r4]
   15944:	b	158a0 <_start@@Base+0x2f4>
   15948:	bl	14fbc <__stack_chk_fail@plt>
   1594c:	push	{r4, r5, r6, lr}
   15950:	movw	r4, #45796	; 0xb2e4
   15954:	movt	r4, #3
   15958:	mov	r5, r1
   1595c:	mov	r6, r0
   15960:	ldr	r1, [r4, #24]
   15964:	cmp	r1, #0
   15968:	bne	15974 <_start@@Base+0x3c8>
   1596c:	mov	r0, #1
   15970:	pop	{r4, r5, r6, pc}
   15974:	ldr	r0, [r4, #28]
   15978:	mov	r2, r5
   1597c:	bl	157d4 <_start@@Base+0x228>
   15980:	cmp	r0, #0
   15984:	popeq	{r4, r5, r6, pc}
   15988:	cmp	r6, #0
   1598c:	mov	r3, #0
   15990:	str	r3, [r4, #24]
   15994:	beq	1596c <_start@@Base+0x3c0>
   15998:	ldr	r1, [r4]
   1599c:	uxtb	r0, r6
   159a0:	bl	150b8 <fputc@plt>
   159a4:	mov	r0, r5
   159a8:	bl	156e0 <_start@@Base+0x134>
   159ac:	adds	r0, r0, #0
   159b0:	movne	r0, #1
   159b4:	pop	{r4, r5, r6, pc}
   159b8:	push	{r4, r5, r6, lr}
   159bc:	movw	r4, #45784	; 0xb2d8
   159c0:	movt	r4, #3
   159c4:	sub	sp, sp, #8
   159c8:	add	r5, sp, #8
   159cc:	mov	r2, #0
   159d0:	ldr	r3, [r4]
   159d4:	movw	r1, #23572	; 0x5c14
   159d8:	str	r2, [r5, #-8]!
   159dc:	movt	r1, #1
   159e0:	mov	r2, sp
   159e4:	str	r3, [sp, #4]
   159e8:	bl	19238 <processLines@@Base>
   159ec:	cmp	r0, #0
   159f0:	moveq	r0, #4
   159f4:	beq	15a1c <_start@@Base+0x470>
   159f8:	ldr	r6, [sp]
   159fc:	cmp	r6, #0
   15a00:	bne	15a54 <_start@@Base+0x4a8>
   15a04:	mov	r0, #10
   15a08:	mov	r1, sp
   15a0c:	bl	1594c <_start@@Base+0x3a0>
   15a10:	cmp	r0, #0
   15a14:	bne	15a34 <_start@@Base+0x488>
   15a18:	ldr	r0, [sp]
   15a1c:	ldr	r2, [sp, #4]
   15a20:	ldr	r3, [r4]
   15a24:	cmp	r2, r3
   15a28:	bne	15a5c <_start@@Base+0x4b0>
   15a2c:	add	sp, sp, #8
   15a30:	pop	{r4, r5, r6, pc}
   15a34:	movw	r3, #45796	; 0xb2e4
   15a38:	movt	r3, #3
   15a3c:	ldr	r0, [r3]
   15a40:	bl	151fc <fflush@plt>
   15a44:	mov	r0, sp
   15a48:	bl	156e0 <_start@@Base+0x134>
   15a4c:	cmp	r0, #0
   15a50:	beq	15a18 <_start@@Base+0x46c>
   15a54:	mov	r0, r6
   15a58:	b	15a1c <_start@@Base+0x470>
   15a5c:	bl	14fbc <__stack_chk_fail@plt>
   15a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a64:	movw	r5, #45796	; 0xb2e4
   15a68:	movt	r5, #3
   15a6c:	mov	r6, r1
   15a70:	sub	sp, sp, #20
   15a74:	mov	r8, r0
   15a78:	ldr	r1, [r5, #32]
   15a7c:	mov	r9, r2
   15a80:	mov	r7, r3
   15a84:	cmp	r1, #0
   15a88:	beq	15b48 <_start@@Base+0x59c>
   15a8c:	cmp	r6, #0
   15a90:	beq	15b48 <_start@@Base+0x59c>
   15a94:	ldr	r0, [r0]
   15a98:	bl	14c98 <iswspace@plt>
   15a9c:	cmp	r0, #0
   15aa0:	bne	15b8c <_start@@Base+0x5e0>
   15aa4:	ldr	r4, [r5, #24]
   15aa8:	movw	sl, #45796	; 0xb2e4
   15aac:	ldr	r2, [r5, #36]	; 0x24
   15ab0:	movt	sl, #3
   15ab4:	adds	fp, r4, #0
   15ab8:	movne	fp, #1
   15abc:	add	r3, fp, r4
   15ac0:	add	r3, r3, r6
   15ac4:	cmp	r3, r2
   15ac8:	ldrls	r0, [sl, #28]
   15acc:	bhi	15ba4 <_start@@Base+0x5f8>
   15ad0:	cmp	fp, #0
   15ad4:	mov	r2, r6
   15ad8:	addne	sl, r4, #1
   15adc:	mov	r1, r8
   15ae0:	moveq	sl, r4
   15ae4:	movne	r3, #32
   15ae8:	strne	r3, [r0, r4, lsl #2]
   15aec:	add	r0, r0, sl, lsl #2
   15af0:	bl	14db8 <wmemcpy@plt>
   15af4:	cmp	r9, #10
   15af8:	movw	r4, #45796	; 0xb2e4
   15afc:	add	r6, sl, r6
   15b00:	movt	r4, #3
   15b04:	str	r6, [r5, #24]
   15b08:	moveq	r0, #1
   15b0c:	beq	15b60 <_start@@Base+0x5b4>
   15b10:	mov	r0, #0
   15b14:	mov	r1, r7
   15b18:	bl	1594c <_start@@Base+0x3a0>
   15b1c:	cmp	r0, #0
   15b20:	beq	15b5c <_start@@Base+0x5b0>
   15b24:	ldr	r1, [r4]
   15b28:	uxtb	r0, r9
   15b2c:	bl	150b8 <fputc@plt>
   15b30:	mov	r0, r7
   15b34:	bl	156e0 <_start@@Base+0x134>
   15b38:	adds	r0, r0, #0
   15b3c:	movne	r0, #1
   15b40:	add	sp, sp, #20
   15b44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b48:	mov	r0, #10
   15b4c:	mov	r1, r7
   15b50:	bl	1594c <_start@@Base+0x3a0>
   15b54:	cmp	r0, #0
   15b58:	bne	15b68 <_start@@Base+0x5bc>
   15b5c:	mov	r0, #0
   15b60:	add	sp, sp, #20
   15b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b68:	mov	r0, r8
   15b6c:	mov	r1, r6
   15b70:	mov	r2, r7
   15b74:	bl	157d4 <_start@@Base+0x228>
   15b78:	cmp	r0, #0
   15b7c:	beq	15b5c <_start@@Base+0x5b0>
   15b80:	uxtb	r0, r9
   15b84:	ldr	r1, [r5]
   15b88:	b	15b2c <_start@@Base+0x580>
   15b8c:	mov	r0, #10
   15b90:	mov	r1, r7
   15b94:	bl	1594c <_start@@Base+0x3a0>
   15b98:	cmp	r0, #0
   15b9c:	bne	15aa4 <_start@@Base+0x4f8>
   15ba0:	b	15b5c <_start@@Base+0x5b0>
   15ba4:	orr	r3, r3, #255	; 0xff
   15ba8:	mov	r1, #4
   15bac:	str	r3, [sp, #12]
   15bb0:	mov	r0, r3
   15bb4:	bl	15070 <calloc@plt>
   15bb8:	subs	r3, r0, #0
   15bbc:	beq	15bf8 <_start@@Base+0x64c>
   15bc0:	ldr	ip, [sl, #28]
   15bc4:	mov	r2, r4
   15bc8:	mov	r1, ip
   15bcc:	stmib	sp, {r3, ip}
   15bd0:	bl	14db8 <wmemcpy@plt>
   15bd4:	ldr	ip, [sp, #8]
   15bd8:	mov	r0, ip
   15bdc:	bl	14d10 <free@plt>
   15be0:	ldr	r3, [sp, #4]
   15be4:	mov	r0, r3
   15be8:	str	r3, [sl, #28]
   15bec:	ldr	r3, [sp, #12]
   15bf0:	str	r3, [sl, #36]	; 0x24
   15bf4:	b	15ad0 <_start@@Base+0x524>
   15bf8:	str	r3, [sp, #4]
   15bfc:	bl	184dc <logMallocError@@Base>
   15c00:	ldr	r3, [sp, #4]
   15c04:	mov	r0, r3
   15c08:	mov	r3, #4
   15c0c:	str	r3, [r7]
   15c10:	b	15b60 <_start@@Base+0x5b4>
   15c14:	push	{r4, r5, r6, r7, fp, lr}
   15c18:	add	fp, sp, #20
   15c1c:	sub	sp, sp, #16
   15c20:	movw	r7, #45784	; 0xb2d8
   15c24:	movt	r7, #3
   15c28:	mov	r4, r0
   15c2c:	mov	r6, r1
   15c30:	ldr	r3, [r7]
   15c34:	str	r3, [fp, #-24]	; 0xffffffe8
   15c38:	bl	150e8 <strlen@plt>
   15c3c:	sub	r1, fp, #28
   15c40:	str	r4, [fp, #-32]	; 0xffffffe0
   15c44:	add	r2, r0, #1
   15c48:	sub	r0, fp, #32
   15c4c:	lsl	r3, r2, #2
   15c50:	add	r3, r3, #10
   15c54:	bic	r3, r3, #7
   15c58:	sub	sp, sp, r3
   15c5c:	str	sp, [fp, #-28]	; 0xffffffe4
   15c60:	bl	244b4 <convertUtf8ToWchars@@Base>
   15c64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c68:	mov	r5, sp
   15c6c:	mov	r4, sp
   15c70:	rsb	r5, r5, r3
   15c74:	str	sp, [fp, #-28]	; 0xffffffe4
   15c78:	asr	r5, r5, #2
   15c7c:	b	15cb8 <_start@@Base+0x70c>
   15c80:	rsb	r1, r4, r2
   15c84:	mov	r0, r4
   15c88:	ldr	r2, [r2]
   15c8c:	mov	r3, r6
   15c90:	asr	r4, r1, #2
   15c94:	mov	r1, r4
   15c98:	bl	15a60 <_start@@Base+0x4b4>
   15c9c:	cmp	r0, #0
   15ca0:	beq	15d20 <_start@@Base+0x774>
   15ca4:	add	r4, r4, #1
   15ca8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15cac:	rsb	r5, r4, r5
   15cb0:	add	r4, r3, r4, lsl #2
   15cb4:	str	r4, [fp, #-28]	; 0xffffffe4
   15cb8:	mov	r2, r5
   15cbc:	mov	r0, r4
   15cc0:	mov	r1, #12
   15cc4:	bl	14e9c <wmemchr@plt>
   15cc8:	subs	r2, r0, #0
   15ccc:	bne	15c80 <_start@@Base+0x6d4>
   15cd0:	mov	r0, r4
   15cd4:	mov	r1, r5
   15cd8:	mov	r2, #10
   15cdc:	mov	r3, r6
   15ce0:	bl	15a60 <_start@@Base+0x4b4>
   15ce4:	cmp	r0, #0
   15ce8:	beq	15d20 <_start@@Base+0x774>
   15cec:	movw	r3, #45796	; 0xb2e4
   15cf0:	movt	r3, #3
   15cf4:	ldr	r2, [r3, #40]	; 0x28
   15cf8:	cmp	r2, #0
   15cfc:	moveq	r0, #1
   15d00:	beq	15d24 <_start@@Base+0x778>
   15d04:	ldr	r0, [r3]
   15d08:	bl	151fc <fflush@plt>
   15d0c:	mov	r0, r6
   15d10:	bl	156e0 <_start@@Base+0x134>
   15d14:	adds	r0, r0, #0
   15d18:	movne	r0, #1
   15d1c:	b	15d24 <_start@@Base+0x778>
   15d20:	mov	r0, #0
   15d24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d28:	ldr	r3, [r7]
   15d2c:	cmp	r2, r3
   15d30:	bne	15d3c <_start@@Base+0x790>
   15d34:	sub	sp, fp, #20
   15d38:	pop	{r4, r5, r6, r7, fp, pc}
   15d3c:	bl	14fbc <__stack_chk_fail@plt>

00015d40 <endProgram@@Base>:
   15d40:	push	{r3, r4, r5, lr}
   15d44:	ldr	r5, [pc, #48]	; 15d7c <endProgram@@Base+0x3c>
   15d48:	add	r5, pc, r5
   15d4c:	ldr	r4, [r5]
   15d50:	cmp	r4, #0
   15d54:	popeq	{r3, r4, r5, pc}
   15d58:	ldm	r4, {r2, r3}
   15d5c:	str	r2, [r5]
   15d60:	blx	r3
   15d64:	mov	r0, r4
   15d68:	bl	14d10 <free@plt>
   15d6c:	ldr	r4, [r5]
   15d70:	cmp	r4, #0
   15d74:	bne	15d58 <endProgram@@Base+0x18>
   15d78:	pop	{r3, r4, r5, pc}
   15d7c:	ldrdeq	r5, [r2], -r0
   15d80:	push	{r3, r4, r5, lr}
   15d84:	bl	18764 <makePath@@Base>
   15d88:	subs	r4, r0, #0
   15d8c:	beq	15da4 <endProgram@@Base+0x64>
   15d90:	bl	189bc <testProgramPath@@Base>
   15d94:	subs	r5, r0, #0
   15d98:	mov	r0, r4
   15d9c:	beq	15dac <endProgram@@Base+0x6c>
   15da0:	pop	{r3, r4, r5, pc}
   15da4:	mov	r0, r4
   15da8:	pop	{r3, r4, r5, pc}
   15dac:	bl	14d10 <free@plt>
   15db0:	mov	r0, r5
   15db4:	pop	{r3, r4, r5, pc}

00015db8 <beginProgram@@Base>:
   15db8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dbc:	sub	sp, sp, #4096	; 0x1000
   15dc0:	ldr	r4, [pc, #564]	; 15ffc <beginProgram@@Base+0x244>
   15dc4:	sub	sp, sp, #20
   15dc8:	ldr	r2, [pc, #560]	; 16000 <beginProgram@@Base+0x248>
   15dcc:	mov	r7, r1
   15dd0:	add	r4, pc, r4
   15dd4:	ldr	r3, [pc, #552]	; 16004 <beginProgram@@Base+0x24c>
   15dd8:	add	r1, sp, #8192	; 0x2000
   15ddc:	ldr	r5, [pc, #548]	; 16008 <beginProgram@@Base+0x250>
   15de0:	ldr	r6, [r4, r2]
   15de4:	add	r5, pc, r5
   15de8:	ldr	r2, [r6]
   15dec:	str	r2, [r1, #-4084]	; 0xfffff00c
   15df0:	ldr	r0, [r4, r3]
   15df4:	bl	25b60 <__libc_csu_fini@@Base+0x4>
   15df8:	ldr	r1, [pc, #524]	; 1600c <beginProgram@@Base+0x254>
   15dfc:	mov	r0, #6
   15e00:	add	r1, pc, r1
   15e04:	bl	1507c <setlocale@plt>
   15e08:	ldr	r1, [pc, #512]	; 16010 <beginProgram@@Base+0x258>
   15e0c:	mov	r0, r5
   15e10:	add	r1, pc, r1
   15e14:	bl	1504c <bindtextdomain@plt>
   15e18:	mov	r0, r5
   15e1c:	bl	14dc4 <textdomain@plt>
   15e20:	bl	1aff4 <getProgramPath@@Base>
   15e24:	ldr	r3, [pc, #488]	; 16014 <beginProgram@@Base+0x25c>
   15e28:	ldr	r5, [r4, r3]
   15e2c:	cmp	r0, #0
   15e30:	str	r0, [r5]
   15e34:	ldreq	r0, [r7]
   15e38:	streq	r0, [r5]
   15e3c:	bl	1874c <isExplicitPath@@Base>
   15e40:	subs	fp, r0, #0
   15e44:	beq	15ed8 <beginProgram@@Base+0x120>
   15e48:	ldr	r0, [r5]
   15e4c:	bl	1874c <isExplicitPath@@Base>
   15e50:	cmp	r0, #0
   15e54:	bne	15e90 <beginProgram@@Base+0xd8>
   15e58:	ldr	r0, [r5]
   15e5c:	bl	186e4 <locatePathName@@Base>
   15e60:	ldr	r3, [pc, #432]	; 16018 <beginProgram@@Base+0x260>
   15e64:	ldr	r3, [r4, r3]
   15e68:	str	r0, [r3]
   15e6c:	bl	17fa8 <setLogPrefix@@Base>
   15e70:	add	r3, sp, #8192	; 0x2000
   15e74:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   15e78:	ldr	r3, [r6]
   15e7c:	cmp	r2, r3
   15e80:	bne	15ff8 <beginProgram@@Base+0x240>
   15e84:	add	sp, sp, #4096	; 0x1000
   15e88:	add	sp, sp, #20
   15e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e90:	ldr	r0, [r5]
   15e94:	bl	185d4 <isAbsolutePath@@Base>
   15e98:	cmp	r0, #0
   15e9c:	ldr	r0, [r5]
   15ea0:	beq	15fb0 <beginProgram@@Base+0x1f8>
   15ea4:	bl	185d4 <isAbsolutePath@@Base>
   15ea8:	cmp	r0, #0
   15eac:	bne	15e58 <beginProgram@@Base+0xa0>
   15eb0:	bl	18c14 <getWorkingDirectory@@Base>
   15eb4:	subs	r7, r0, #0
   15eb8:	beq	15e58 <beginProgram@@Base+0xa0>
   15ebc:	ldr	r1, [r5]
   15ec0:	bl	18764 <makePath@@Base>
   15ec4:	cmp	r0, #0
   15ec8:	strne	r0, [r5]
   15ecc:	mov	r0, r7
   15ed0:	bl	14d10 <free@plt>
   15ed4:	b	15e58 <beginProgram@@Base+0xa0>
   15ed8:	ldr	r0, [pc, #316]	; 1601c <beginProgram@@Base+0x264>
   15edc:	ldr	r7, [r5]
   15ee0:	add	r0, pc, r0
   15ee4:	bl	1525c <getenv@plt>
   15ee8:	cmp	r0, #0
   15eec:	beq	15f94 <beginProgram@@Base+0x1dc>
   15ef0:	mov	r1, #58	; 0x3a
   15ef4:	add	r2, sp, #8
   15ef8:	bl	19958 <splitString@@Base>
   15efc:	cmp	r0, #0
   15f00:	str	r0, [sp, #4]
   15f04:	beq	15f94 <beginProgram@@Base+0x1dc>
   15f08:	add	r2, sp, #4096	; 0x1000
   15f0c:	movw	r9, #61432	; 0xeff8
   15f10:	add	r2, r2, #16
   15f14:	movt	r9, #65535	; 0xffff
   15f18:	ldr	r3, [r2, r9]
   15f1c:	cmp	r3, #0
   15f20:	ble	15f8c <beginProgram@@Base+0x1d4>
   15f24:	ldr	r8, [pc, #244]	; 16020 <beginProgram@@Base+0x268>
   15f28:	ldr	r3, [sp, #4]
   15f2c:	add	r8, pc, r8
   15f30:	sub	sl, r3, #4
   15f34:	b	15f50 <beginProgram@@Base+0x198>
   15f38:	add	r1, sp, #4096	; 0x1000
   15f3c:	add	fp, fp, #1
   15f40:	add	r1, r1, #16
   15f44:	ldr	r2, [r1, r9]
   15f48:	cmp	fp, r2
   15f4c:	bge	15f8c <beginProgram@@Base+0x1d4>
   15f50:	ldr	r0, [sl, #4]!
   15f54:	mov	r1, r7
   15f58:	ldrb	r2, [r0]
   15f5c:	cmp	r2, #0
   15f60:	moveq	r0, r8
   15f64:	bl	15d80 <endProgram@@Base+0x40>
   15f68:	subs	r2, r0, #0
   15f6c:	beq	15f38 <beginProgram@@Base+0x180>
   15f70:	ldr	r0, [sp, #4]
   15f74:	str	r2, [sp]
   15f78:	bl	19924 <deallocateStrings@@Base>
   15f7c:	ldr	r2, [sp]
   15f80:	mov	r0, r2
   15f84:	str	r2, [r5]
   15f88:	b	15e4c <beginProgram@@Base+0x94>
   15f8c:	ldr	r0, [sp, #4]
   15f90:	bl	19924 <deallocateStrings@@Base>
   15f94:	ldr	r0, [pc, #136]	; 16024 <beginProgram@@Base+0x26c>
   15f98:	ldr	r1, [r5]
   15f9c:	add	r0, pc, r0
   15fa0:	bl	15d80 <endProgram@@Base+0x40>
   15fa4:	subs	r2, r0, #0
   15fa8:	beq	15e48 <beginProgram@@Base+0x90>
   15fac:	b	15f80 <beginProgram@@Base+0x1c8>
   15fb0:	add	r1, sp, #12
   15fb4:	mov	r2, #4096	; 0x1000
   15fb8:	bl	1516c <__realpath_chk@plt>
   15fbc:	cmp	r0, #0
   15fc0:	beq	15fd8 <beginProgram@@Base+0x220>
   15fc4:	bl	14e54 <__strdup@plt>
   15fc8:	cmp	r0, #0
   15fcc:	beq	15fec <beginProgram@@Base+0x234>
   15fd0:	str	r0, [r5]
   15fd4:	b	15ea4 <beginProgram@@Base+0xec>
   15fd8:	ldr	r0, [pc, #72]	; 16028 <beginProgram@@Base+0x270>
   15fdc:	add	r0, pc, r0
   15fe0:	bl	18498 <logSystemError@@Base>
   15fe4:	ldr	r0, [r5]
   15fe8:	b	15ea4 <beginProgram@@Base+0xec>
   15fec:	bl	184dc <logMallocError@@Base>
   15ff0:	ldr	r0, [r5]
   15ff4:	b	15ea4 <beginProgram@@Base+0xec>
   15ff8:	bl	14fbc <__stack_chk_fail@plt>
   15ffc:	andeq	r5, r2, r8, lsr #4
   16000:	andeq	r0, r0, r8, asr #4
   16004:	andeq	r0, r0, r8, ror r2
   16008:	strdeq	r0, [r1], -r8
   1600c:	ldrdeq	r0, [r1], -r8
   16010:	ldrdeq	r0, [r1], -r4
   16014:	muleq	r0, r4, r2
   16018:	andeq	r0, r0, r0, lsl #5
   1601c:	andeq	r0, r1, r8, lsl r0
   16020:			; <UNDEFINED> instruction: 0x0000feb8
   16024:	andeq	pc, r0, r8, asr #28
   16028:	andeq	pc, r0, r4, lsr #30

0001602c <makeProgramBanner@@Base>:
   1602c:	push	{r4, r5, r6, lr}
   16030:	sub	sp, sp, #24
   16034:	ldr	r6, [pc, #72]	; 16084 <makeProgramBanner@@Base+0x58>
   16038:	mov	r2, #1
   1603c:	ldr	r5, [pc, #68]	; 16088 <makeProgramBanner@@Base+0x5c>
   16040:	mvn	r3, #0
   16044:	ldr	r4, [pc, #64]	; 1608c <makeProgramBanner@@Base+0x60>
   16048:	add	r6, pc, r6
   1604c:	ldr	lr, [pc, #60]	; 16090 <makeProgramBanner@@Base+0x64>
   16050:	add	r5, pc, r5
   16054:	ldr	ip, [pc, #56]	; 16094 <makeProgramBanner@@Base+0x68>
   16058:	add	r4, pc, r4
   1605c:	add	lr, pc, lr
   16060:	str	r6, [sp]
   16064:	add	ip, pc, ip
   16068:	str	r5, [sp, #4]
   1606c:	str	r4, [sp, #8]
   16070:	str	lr, [sp, #12]
   16074:	str	ip, [sp, #16]
   16078:	bl	150f4 <__snprintf_chk@plt>
   1607c:	add	sp, sp, #24
   16080:	pop	{r4, r5, r6, pc}
   16084:	andeq	pc, r0, r4, asr #29
   16088:	andeq	pc, r0, r8, asr #29
   1608c:	andeq	pc, r0, r8, asr #29
   16090:	andeq	pc, r0, r8, asr #29
   16094:	andeq	pc, r0, r8, asr #29

00016098 <fixInstallPaths@@Base>:
   16098:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1609c:	mov	r4, r0
   160a0:	ldr	r5, [pc, #340]	; 161fc <fixInstallPaths@@Base+0x164>
   160a4:	ldr	r3, [pc, #340]	; 16200 <fixInstallPaths@@Base+0x168>
   160a8:	add	r5, pc, r5
   160ac:	add	r3, pc, r3
   160b0:	ldr	r2, [r5, #4]
   160b4:	cmp	r2, #0
   160b8:	beq	1619c <fixInstallPaths@@Base+0x104>
   160bc:	ldr	r3, [r4]
   160c0:	cmp	r3, #0
   160c4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   160c8:	ldr	r5, [pc, #308]	; 16204 <fixInstallPaths@@Base+0x16c>
   160cc:	add	r4, r4, #4
   160d0:	ldr	r7, [pc, #304]	; 16208 <fixInstallPaths@@Base+0x170>
   160d4:	ldr	r6, [pc, #304]	; 1620c <fixInstallPaths@@Base+0x174>
   160d8:	add	r5, pc, r5
   160dc:	ldr	r9, [pc, #300]	; 16210 <fixInstallPaths@@Base+0x178>
   160e0:	add	r7, pc, r7
   160e4:	ldr	r8, [pc, #296]	; 16214 <fixInstallPaths@@Base+0x17c>
   160e8:	add	r6, pc, r6
   160ec:	add	r9, pc, r9
   160f0:	add	r8, pc, r8
   160f4:	b	16104 <fixInstallPaths@@Base+0x6c>
   160f8:	ldr	r3, [r4], #4
   160fc:	cmp	r3, #0
   16100:	beq	16170 <fixInstallPaths@@Base+0xd8>
   16104:	ldr	r1, [r3]
   16108:	cmp	r1, #0
   1610c:	beq	160f8 <fixInstallPaths@@Base+0x60>
   16110:	ldrb	r3, [r1]
   16114:	cmp	r3, #0
   16118:	beq	160f8 <fixInstallPaths@@Base+0x60>
   1611c:	ldr	r0, [r5, #4]
   16120:	bl	18764 <makePath@@Base>
   16124:	subs	r3, r0, #0
   16128:	beq	16174 <fixInstallPaths@@Base+0xdc>
   1612c:	ldr	r2, [r4, #-4]
   16130:	str	r3, [r2]
   16134:	bl	185d4 <isAbsolutePath@@Base>
   16138:	cmp	r0, #0
   1613c:	bne	160f8 <fixInstallPaths@@Base+0x60>
   16140:	mov	r1, r7
   16144:	mov	r2, #5
   16148:	bl	14fec <dcgettext@plt>
   1614c:	ldr	r3, [r4, #-4]
   16150:	mov	r1, r6
   16154:	ldr	r3, [r3]
   16158:	mov	r2, r0
   1615c:	mov	r0, #4
   16160:	bl	183d0 <logMessage@@Base>
   16164:	ldr	r3, [r4], #4
   16168:	cmp	r3, #0
   1616c:	bne	16104 <fixInstallPaths@@Base+0x6c>
   16170:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16174:	mov	r1, r9
   16178:	mov	r2, #5
   1617c:	bl	14fec <dcgettext@plt>
   16180:	ldr	r3, [r4, #-4]
   16184:	mov	r1, r8
   16188:	ldr	r3, [r3]
   1618c:	mov	r2, r0
   16190:	mov	r0, #4
   16194:	bl	183d0 <logMessage@@Base>
   16198:	b	160f8 <fixInstallPaths@@Base+0x60>
   1619c:	ldr	r2, [pc, #116]	; 16218 <fixInstallPaths@@Base+0x180>
   161a0:	ldr	r3, [r3, r2]
   161a4:	ldr	r0, [r3]
   161a8:	bl	185ec <getPathDirectory@@Base>
   161ac:	cmp	r0, #0
   161b0:	mov	r2, r0
   161b4:	str	r0, [r5, #4]
   161b8:	beq	161d0 <fixInstallPaths@@Base+0x138>
   161bc:	ldr	r1, [pc, #88]	; 1621c <fixInstallPaths@@Base+0x184>
   161c0:	mov	r0, #7
   161c4:	add	r1, pc, r1
   161c8:	bl	183d0 <logMessage@@Base>
   161cc:	b	160bc <fixInstallPaths@@Base+0x24>
   161d0:	ldr	r1, [pc, #72]	; 16220 <fixInstallPaths@@Base+0x188>
   161d4:	mov	r2, #5
   161d8:	add	r1, pc, r1
   161dc:	bl	14fec <dcgettext@plt>
   161e0:	mov	r1, r0
   161e4:	mov	r0, #4
   161e8:	bl	183d0 <logMessage@@Base>
   161ec:	ldr	r2, [pc, #48]	; 16224 <fixInstallPaths@@Base+0x18c>
   161f0:	add	r2, pc, r2
   161f4:	str	r2, [r5, #4]
   161f8:	b	161bc <fixInstallPaths@@Base+0x124>
   161fc:	andeq	r5, r2, r0, ror r2
   16200:	andeq	r4, r2, ip, asr #30
   16204:	andeq	r5, r2, r0, asr #4
   16208:	andeq	pc, r0, r8, lsr #29
   1620c:	andeq	r0, r1, r0, lsr r7
   16210:	andeq	pc, r0, r4, lsl #29
   16214:	andeq	r0, r1, r8, lsr #14
   16218:	muleq	r0, r4, r2
   1621c:	muleq	r0, r4, sp
   16220:	andeq	pc, r0, ip, asr sp	; <UNPREDICTABLE>
   16224:	strdeq	pc, [r0], -r4

00016228 <fixInstallPath@@Base>:
   16228:	ldr	r3, [pc, #72]	; 16278 <fixInstallPath@@Base+0x50>
   1622c:	mov	r2, #0
   16230:	ldr	r1, [pc, #68]	; 1627c <fixInstallPath@@Base+0x54>
   16234:	add	r3, pc, r3
   16238:	push	{r4, lr}
   1623c:	sub	sp, sp, #16
   16240:	ldr	r4, [r3, r1]
   16244:	str	r0, [sp, #4]
   16248:	add	r0, sp, #4
   1624c:	str	r2, [sp, #8]
   16250:	ldr	r3, [r4]
   16254:	str	r3, [sp, #12]
   16258:	bl	16098 <fixInstallPaths@@Base>
   1625c:	ldr	r2, [sp, #12]
   16260:	ldr	r3, [r4]
   16264:	cmp	r2, r3
   16268:	bne	16274 <fixInstallPath@@Base+0x4c>
   1626c:	add	sp, sp, #16
   16270:	pop	{r4, pc}
   16274:	bl	14fbc <__stack_chk_fail@plt>
   16278:	andeq	r4, r2, r4, asr #27
   1627c:	andeq	r0, r0, r8, asr #4

00016280 <createPidFile@@Base>:
   16280:	ldr	r3, [pc, #700]	; 16544 <createPidFile@@Base+0x2c4>
   16284:	ldr	r2, [pc, #700]	; 16548 <createPidFile@@Base+0x2c8>
   16288:	add	r3, pc, r3
   1628c:	push	{r4, r5, r6, r7, r8, lr}
   16290:	subs	r6, r1, #0
   16294:	ldr	r5, [r3, r2]
   16298:	sub	sp, sp, #56	; 0x38
   1629c:	mov	r4, r0
   162a0:	ldr	r3, [r5]
   162a4:	str	r3, [sp, #52]	; 0x34
   162a8:	beq	16328 <createPidFile@@Base+0xa8>
   162ac:	cmp	r4, #0
   162b0:	beq	16320 <createPidFile@@Base+0xa0>
   162b4:	ldrb	r3, [r4]
   162b8:	cmp	r3, #0
   162bc:	bne	162dc <createPidFile@@Base+0x5c>
   162c0:	ldr	r2, [sp, #52]	; 0x34
   162c4:	mov	r0, r3
   162c8:	ldr	r3, [r5]
   162cc:	cmp	r2, r3
   162d0:	bne	16540 <createPidFile@@Base+0x2c0>
   162d4:	add	sp, sp, #56	; 0x38
   162d8:	pop	{r4, r5, r6, r7, r8, pc}
   162dc:	mov	r0, r4
   162e0:	mov	r1, #66	; 0x42
   162e4:	mov	r2, #420	; 0x1a4
   162e8:	bl	14f68 <open@plt>
   162ec:	cmn	r0, #1
   162f0:	mov	r7, r0
   162f4:	beq	16448 <createPidFile@@Base+0x1c8>
   162f8:	mov	r1, #1
   162fc:	bl	1908c <acquireFileLock@@Base>
   16300:	subs	r8, r0, #0
   16304:	bne	16334 <createPidFile@@Base+0xb4>
   16308:	bl	151b4 <__errno_location@plt>
   1630c:	ldr	r3, [r0]
   16310:	cmp	r3, #38	; 0x26
   16314:	beq	16334 <createPidFile@@Base+0xb4>
   16318:	mov	r0, r7
   1631c:	bl	14e6c <close@plt>
   16320:	mov	r3, #0
   16324:	b	162c0 <createPidFile@@Base+0x40>
   16328:	bl	166d4 <getProcessIdentifier@@Base>
   1632c:	mov	r6, r0
   16330:	b	162ac <createPidFile@@Base+0x2c>
   16334:	add	r4, sp, #20
   16338:	mov	r0, r7
   1633c:	mov	r2, #32
   16340:	mov	r1, r4
   16344:	bl	14e90 <read@plt>
   16348:	cmn	r0, #1
   1634c:	mov	r3, r0
   16350:	beq	16504 <createPidFile@@Base+0x284>
   16354:	cmp	r0, #32
   16358:	add	r2, sp, #56	; 0x38
   1635c:	ldr	r1, [pc, #488]	; 1654c <createPidFile@@Base+0x2cc>
   16360:	mov	r0, r4
   16364:	moveq	r3, #31
   16368:	add	ip, r2, r3
   1636c:	add	r1, pc, r1
   16370:	add	r2, sp, #16
   16374:	add	r3, sp, #15
   16378:	mov	lr, #0
   1637c:	strb	lr, [ip, #-36]	; 0xffffffdc
   16380:	bl	151d8 <sscanf@plt>
   16384:	cmp	r0, #1
   16388:	beq	164c4 <createPidFile@@Base+0x244>
   1638c:	cmp	r0, #2
   16390:	beq	164b4 <createPidFile@@Base+0x234>
   16394:	mov	r1, #0
   16398:	mov	r0, r7
   1639c:	mov	r2, r1
   163a0:	bl	15028 <lseek@plt>
   163a4:	cmn	r0, #1
   163a8:	beq	16518 <createPidFile@@Base+0x298>
   163ac:	mov	r0, r7
   163b0:	mov	r1, #0
   163b4:	bl	14c8c <ftruncate@plt>
   163b8:	cmn	r0, #1
   163bc:	beq	1648c <createPidFile@@Base+0x20c>
   163c0:	ldr	ip, [pc, #392]	; 16550 <createPidFile@@Base+0x2d0>
   163c4:	mov	r1, #32
   163c8:	mov	r3, r1
   163cc:	mov	r2, #1
   163d0:	add	ip, pc, ip
   163d4:	str	r6, [sp, #4]
   163d8:	str	ip, [sp]
   163dc:	mov	r0, r4
   163e0:	bl	150f4 <__snprintf_chk@plt>
   163e4:	mov	r1, r4
   163e8:	mov	r2, r0
   163ec:	mov	r0, r7
   163f0:	bl	15130 <write@plt>
   163f4:	cmn	r0, #1
   163f8:	beq	1652c <createPidFile@@Base+0x2ac>
   163fc:	mov	r4, #0
   16400:	cmp	r8, #0
   16404:	bne	164f8 <createPidFile@@Base+0x278>
   16408:	mov	r0, r7
   1640c:	bl	14e6c <close@plt>
   16410:	cmp	r4, #2
   16414:	beq	164a0 <createPidFile@@Base+0x220>
   16418:	cmp	r4, #3
   1641c:	beq	16320 <createPidFile@@Base+0xa0>
   16420:	cmp	r4, #0
   16424:	moveq	r3, #1
   16428:	beq	162c0 <createPidFile@@Base+0x40>
   1642c:	ldr	r1, [pc, #288]	; 16554 <createPidFile@@Base+0x2d4>
   16430:	mov	r2, r4
   16434:	mov	r0, #4
   16438:	add	r1, pc, r1
   1643c:	bl	183d0 <logMessage@@Base>
   16440:	mov	r3, #0
   16444:	b	162c0 <createPidFile@@Base+0x40>
   16448:	ldr	r1, [pc, #264]	; 16558 <createPidFile@@Base+0x2d8>
   1644c:	mov	r2, #5
   16450:	mov	r0, #0
   16454:	add	r1, pc, r1
   16458:	bl	14fec <dcgettext@plt>
   1645c:	mov	r6, r0
   16460:	bl	151b4 <__errno_location@plt>
   16464:	ldr	r0, [r0]
   16468:	bl	14d64 <strerror@plt>
   1646c:	ldr	r1, [pc, #232]	; 1655c <createPidFile@@Base+0x2dc>
   16470:	mov	r2, r6
   16474:	mov	r3, r4
   16478:	add	r1, pc, r1
   1647c:	str	r0, [sp]
   16480:	mov	r0, #4
   16484:	bl	183d0 <logMessage@@Base>
   16488:	b	16320 <createPidFile@@Base+0xa0>
   1648c:	ldr	r0, [pc, #204]	; 16560 <createPidFile@@Base+0x2e0>
   16490:	mov	r4, #3
   16494:	add	r0, pc, r0
   16498:	bl	18498 <logSystemError@@Base>
   1649c:	b	16400 <createPidFile@@Base+0x180>
   164a0:	bl	151b4 <__errno_location@plt>
   164a4:	mov	r2, #17
   164a8:	mov	r3, #0
   164ac:	str	r2, [r0]
   164b0:	b	162c0 <createPidFile@@Base+0x40>
   164b4:	ldrb	r3, [sp, #15]
   164b8:	cmp	r3, #10
   164bc:	cmpne	r3, #13
   164c0:	bne	16394 <createPidFile@@Base+0x114>
   164c4:	ldr	r0, [sp, #16]
   164c8:	cmp	r0, r6
   164cc:	beq	163fc <createPidFile@@Base+0x17c>
   164d0:	bl	166d8 <testProcessIdentifier@@Base>
   164d4:	cmp	r0, #0
   164d8:	beq	16394 <createPidFile@@Base+0x114>
   164dc:	ldr	r1, [pc, #128]	; 16564 <createPidFile@@Base+0x2e4>
   164e0:	mov	r0, #3
   164e4:	ldr	r2, [sp, #16]
   164e8:	mov	r4, #2
   164ec:	add	r1, pc, r1
   164f0:	bl	183d0 <logMessage@@Base>
   164f4:	b	16400 <createPidFile@@Base+0x180>
   164f8:	mov	r0, r7
   164fc:	bl	190ac <releaseFileLock@@Base>
   16500:	b	16408 <createPidFile@@Base+0x188>
   16504:	ldr	r0, [pc, #92]	; 16568 <createPidFile@@Base+0x2e8>
   16508:	mov	r4, #3
   1650c:	add	r0, pc, r0
   16510:	bl	18498 <logSystemError@@Base>
   16514:	b	16400 <createPidFile@@Base+0x180>
   16518:	ldr	r0, [pc, #76]	; 1656c <createPidFile@@Base+0x2ec>
   1651c:	mov	r4, #3
   16520:	add	r0, pc, r0
   16524:	bl	18498 <logSystemError@@Base>
   16528:	b	16400 <createPidFile@@Base+0x180>
   1652c:	ldr	r0, [pc, #60]	; 16570 <createPidFile@@Base+0x2f0>
   16530:	mov	r4, #3
   16534:	add	r0, pc, r0
   16538:	bl	18498 <logSystemError@@Base>
   1653c:	b	16400 <createPidFile@@Base+0x180>
   16540:	bl	14fbc <__stack_chk_fail@plt>
   16544:	andeq	r4, r2, r0, ror sp
   16548:	andeq	r0, r0, r8, asr #4
   1654c:	andeq	pc, r0, r8, lsr ip	; <UNPREDICTABLE>
   16550:	andeq	pc, r0, r8, lsl #24
   16554:	andeq	pc, r0, r8, ror #23
   16558:	muleq	r0, ip, fp
   1655c:	muleq	r0, ip, fp
   16560:	andeq	pc, r0, r8, asr #22
   16564:	andeq	pc, r0, r0, asr #21
   16568:	andeq	pc, r0, r4, asr #21
   1656c:	andeq	pc, r0, r8, asr #21
   16570:	andeq	pc, r0, r4, ror #30

00016574 <cancelProgram@@Base>:
   16574:	ldr	r2, [pc, #260]	; 16680 <cancelProgram@@Base+0x10c>
   16578:	ldr	ip, [pc, #260]	; 16684 <cancelProgram@@Base+0x110>
   1657c:	add	r2, pc, r2
   16580:	ldr	r1, [pc, #256]	; 16688 <cancelProgram@@Base+0x114>
   16584:	push	{r4, r5, r6, r7, r8, lr}
   16588:	sub	sp, sp, #272	; 0x110
   1658c:	ldr	r4, [r2, ip]
   16590:	add	r1, pc, r1
   16594:	mov	r6, r0
   16598:	ldr	r2, [r4]
   1659c:	str	r2, [sp, #268]	; 0x10c
   165a0:	bl	14e84 <fopen@plt>
   165a4:	subs	r5, r0, #0
   165a8:	beq	16638 <cancelProgram@@Base+0xc4>
   165ac:	add	r0, sp, #12
   165b0:	mov	r1, #256	; 0x100
   165b4:	mov	r2, r5
   165b8:	bl	150a0 <fgets@plt>
   165bc:	subs	r7, r0, #0
   165c0:	beq	16614 <cancelProgram@@Base+0xa0>
   165c4:	add	r1, sp, #8
   165c8:	mov	r2, #10
   165cc:	bl	14d04 <strtol@plt>
   165d0:	ldr	r3, [sp, #8]
   165d4:	ldrb	r6, [r3]
   165d8:	cmp	r6, #0
   165dc:	mov	r8, r0
   165e0:	beq	16604 <cancelProgram@@Base+0x90>
   165e4:	bl	15040 <__ctype_b_loc@plt>
   165e8:	lsl	r6, r6, #1
   165ec:	ldr	r3, [r0]
   165f0:	ldrh	r7, [r3, r6]
   165f4:	and	r7, r7, #8192	; 0x2000
   165f8:	uxth	r7, r7
   165fc:	cmp	r7, #0
   16600:	beq	16614 <cancelProgram@@Base+0xa0>
   16604:	mov	r0, r8
   16608:	bl	166f0 <cancelProcess@@Base>
   1660c:	adds	r7, r0, #0
   16610:	movne	r7, #1
   16614:	mov	r0, r5
   16618:	bl	15124 <fclose@plt>
   1661c:	ldr	r2, [sp, #268]	; 0x10c
   16620:	mov	r0, r7
   16624:	ldr	r3, [r4]
   16628:	cmp	r2, r3
   1662c:	bne	1667c <cancelProgram@@Base+0x108>
   16630:	add	sp, sp, #272	; 0x110
   16634:	pop	{r4, r5, r6, r7, r8, pc}
   16638:	ldr	r1, [pc, #76]	; 1668c <cancelProgram@@Base+0x118>
   1663c:	mov	r2, #5
   16640:	mov	r7, r5
   16644:	add	r1, pc, r1
   16648:	bl	14fec <dcgettext@plt>
   1664c:	mov	r8, r0
   16650:	bl	151b4 <__errno_location@plt>
   16654:	ldr	r0, [r0]
   16658:	bl	14d64 <strerror@plt>
   1665c:	ldr	r1, [pc, #44]	; 16690 <cancelProgram@@Base+0x11c>
   16660:	mov	r2, r8
   16664:	mov	r3, r6
   16668:	add	r1, pc, r1
   1666c:	str	r0, [sp]
   16670:	mov	r0, #3
   16674:	bl	183d0 <logMessage@@Base>
   16678:	b	1661c <cancelProgram@@Base+0xa8>
   1667c:	bl	14fbc <__stack_chk_fail@plt>
   16680:	andeq	r4, r2, ip, ror sl
   16684:	andeq	r0, r0, r8, asr #4
   16688:			; <UNDEFINED> instruction: 0x00010fbc
   1668c:	strdeq	pc, [r0], -ip
   16690:	andeq	pc, r0, ip, lsr #19

00016694 <onProgramExit@@Base>:
   16694:	push	{r4, lr}
   16698:	mov	r4, r0
   1669c:	mov	r0, #8
   166a0:	bl	150dc <malloc@plt>
   166a4:	cmp	r0, #0
   166a8:	beq	166c8 <onProgramExit@@Base+0x34>
   166ac:	ldr	r2, [pc, #28]	; 166d0 <onProgramExit@@Base+0x3c>
   166b0:	str	r4, [r0, #4]
   166b4:	add	r2, pc, r2
   166b8:	ldr	r1, [r2]
   166bc:	str	r0, [r2]
   166c0:	str	r1, [r0]
   166c4:	pop	{r4, pc}
   166c8:	pop	{r4, lr}
   166cc:	b	184dc <logMallocError@@Base>
   166d0:	andeq	r4, r2, r4, ror #24

000166d4 <getProcessIdentifier@@Base>:
   166d4:	b	14ca4 <getpid@plt>

000166d8 <testProcessIdentifier@@Base>:
   166d8:	push	{r3, lr}
   166dc:	mov	r1, #0
   166e0:	bl	14efc <kill@plt>
   166e4:	adds	r0, r0, #1
   166e8:	movne	r0, #1
   166ec:	pop	{r3, pc}

000166f0 <cancelProcess@@Base>:
   166f0:	push	{r3, lr}
   166f4:	mov	r1, #15
   166f8:	bl	14efc <kill@plt>
   166fc:	adds	r0, r0, #1
   16700:	movne	r0, #1
   16704:	pop	{r3, pc}
   16708:	push	{r4, r5, r6, r7, r8, r9, lr}
   1670c:	mov	r4, r0
   16710:	ldr	r5, [r0]
   16714:	sub	sp, sp, #20
   16718:	mov	r6, r1
   1671c:	mov	r8, r2
   16720:	cmp	r5, #0
   16724:	beq	167c0 <cancelProcess@@Base+0xd0>
   16728:	mov	r0, r5
   1672c:	bl	150e8 <strlen@plt>
   16730:	mov	r7, r0
   16734:	mov	r0, r6
   16738:	bl	150e8 <strlen@plt>
   1673c:	add	r0, r7, r0
   16740:	add	r7, r0, #2
   16744:	mov	r0, r7
   16748:	bl	150dc <malloc@plt>
   1674c:	subs	r9, r0, #0
   16750:	beq	167d8 <cancelProcess@@Base+0xe8>
   16754:	cmp	r8, #0
   16758:	bne	16798 <cancelProcess@@Base+0xa8>
   1675c:	ldr	ip, [pc, #128]	; 167e4 <cancelProcess@@Base+0xf4>
   16760:	mov	r1, r7
   16764:	str	r5, [sp, #4]
   16768:	mov	r2, #1
   1676c:	add	ip, pc, ip
   16770:	str	r6, [sp, #8]
   16774:	mvn	r3, #0
   16778:	str	ip, [sp]
   1677c:	bl	150f4 <__snprintf_chk@plt>
   16780:	ldr	r0, [r4]
   16784:	bl	14d10 <free@plt>
   16788:	mov	r0, #1
   1678c:	str	r9, [r4]
   16790:	add	sp, sp, #20
   16794:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16798:	ldr	ip, [pc, #72]	; 167e8 <cancelProcess@@Base+0xf8>
   1679c:	mov	r1, r7
   167a0:	str	r6, [sp, #4]
   167a4:	mov	r2, #1
   167a8:	add	ip, pc, ip
   167ac:	str	r5, [sp, #8]
   167b0:	mvn	r3, #0
   167b4:	str	ip, [sp]
   167b8:	bl	150f4 <__snprintf_chk@plt>
   167bc:	b	16780 <cancelProcess@@Base+0x90>
   167c0:	mov	r0, r1
   167c4:	bl	14e54 <__strdup@plt>
   167c8:	cmp	r0, #0
   167cc:	str	r0, [r4]
   167d0:	movne	r0, #1
   167d4:	bne	16790 <cancelProcess@@Base+0xa0>
   167d8:	bl	184dc <logMallocError@@Base>
   167dc:	mov	r0, #0
   167e0:	b	16790 <cancelProcess@@Base+0xa0>
   167e4:	andeq	pc, r0, r8, ror #17
   167e8:	andeq	pc, r0, ip, lsr #17
   167ec:	ldr	ip, [pc, #468]	; 169c8 <cancelProcess@@Base+0x2d8>
   167f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   167f4:	add	ip, pc, ip
   167f8:	ldr	r5, [pc, #460]	; 169cc <cancelProcess@@Base+0x2dc>
   167fc:	sub	sp, sp, #20
   16800:	ldrb	r6, [r1, #8]
   16804:	mov	r4, r1
   16808:	mov	r7, r0
   1680c:	mov	r8, r2
   16810:	ldr	r5, [ip, r5]
   16814:	add	r6, r0, r6
   16818:	ldrb	r3, [r6, #8]
   1681c:	ldr	ip, [r5]
   16820:	cmp	r3, #0
   16824:	str	ip, [sp, #12]
   16828:	bne	1686c <cancelProcess@@Base+0x17c>
   1682c:	mov	r9, #1
   16830:	strb	r9, [r6, #8]
   16834:	ldr	r3, [r1, #4]
   16838:	ldr	r6, [r1, #12]
   1683c:	cmp	r3, #0
   16840:	beq	168c8 <cancelProcess@@Base+0x1d8>
   16844:	cmp	r6, #0
   16848:	beq	1686c <cancelProcess@@Base+0x17c>
   1684c:	ldrb	r3, [r1, #10]
   16850:	tst	r3, #2
   16854:	beq	168a4 <cancelProcess@@Base+0x1b4>
   16858:	cmp	r2, #0
   1685c:	beq	1686c <cancelProcess@@Base+0x17c>
   16860:	ldrb	r3, [r2]
   16864:	cmp	r3, #0
   16868:	bne	16888 <cancelProcess@@Base+0x198>
   1686c:	mov	r0, #1
   16870:	ldr	r1, [sp, #12]
   16874:	ldr	r3, [r5]
   16878:	cmp	r1, r3
   1687c:	bne	169c4 <cancelProcess@@Base+0x2d4>
   16880:	add	sp, sp, #20
   16884:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16888:	mov	r1, r2
   1688c:	mov	r0, r6
   16890:	mov	r2, r9
   16894:	bl	16708 <cancelProcess@@Base+0x18>
   16898:	cmp	r0, #0
   1689c:	beq	16870 <cancelProcess@@Base+0x180>
   168a0:	b	1686c <cancelProcess@@Base+0x17c>
   168a4:	mov	r0, r2
   168a8:	bl	14e54 <__strdup@plt>
   168ac:	cmp	r0, #0
   168b0:	str	r0, [r6]
   168b4:	bne	1686c <cancelProcess@@Base+0x17c>
   168b8:	str	r0, [sp, #4]
   168bc:	bl	184dc <logMallocError@@Base>
   168c0:	ldr	r0, [sp, #4]
   168c4:	b	16870 <cancelProcess@@Base+0x180>
   168c8:	cmp	r6, #0
   168cc:	beq	1686c <cancelProcess@@Base+0x17c>
   168d0:	ldr	r1, [pc, #248]	; 169d0 <cancelProcess@@Base+0x2e0>
   168d4:	mov	r0, r2
   168d8:	add	r1, pc, r1
   168dc:	bl	14cec <strcasecmp@plt>
   168e0:	cmp	r0, #0
   168e4:	streq	r9, [r6]
   168e8:	moveq	r0, r9
   168ec:	beq	16870 <cancelProcess@@Base+0x180>
   168f0:	ldr	r1, [pc, #220]	; 169d4 <cancelProcess@@Base+0x2e4>
   168f4:	mov	r0, r8
   168f8:	add	r1, pc, r1
   168fc:	bl	14cec <strcasecmp@plt>
   16900:	cmp	r0, #0
   16904:	streq	r0, [r6]
   16908:	moveq	r0, r9
   1690c:	beq	16870 <cancelProcess@@Base+0x180>
   16910:	ldrb	r3, [r4, #10]
   16914:	and	r3, r3, #2
   16918:	ands	r0, r3, #255	; 0xff
   1691c:	beq	1694c <cancelProcess@@Base+0x25c>
   16920:	add	r0, sp, #8
   16924:	mov	r1, r8
   16928:	bl	19b98 <isInteger@@Base>
   1692c:	cmp	r0, #0
   16930:	beq	16988 <cancelProcess@@Base+0x298>
   16934:	ldr	r3, [sp, #8]
   16938:	cmp	r3, #0
   1693c:	blt	16988 <cancelProcess@@Base+0x298>
   16940:	ldr	r2, [r4, #12]
   16944:	str	r3, [r2]
   16948:	b	1686c <cancelProcess@@Base+0x17c>
   1694c:	ldr	r1, [pc, #132]	; 169d8 <cancelProcess@@Base+0x2e8>
   16950:	mov	r2, #5
   16954:	add	r1, pc, r1
   16958:	bl	14fec <dcgettext@plt>
   1695c:	ldr	r1, [pc, #120]	; 169dc <cancelProcess@@Base+0x2ec>
   16960:	mov	r3, r8
   16964:	add	r1, pc, r1
   16968:	mov	r2, r0
   1696c:	mov	r0, #3
   16970:	bl	183d0 <logMessage@@Base>
   16974:	ldrb	r3, [r7, #264]	; 0x108
   16978:	mov	r0, r9
   1697c:	orr	r3, r3, #2
   16980:	strb	r3, [r7, #264]	; 0x108
   16984:	b	16870 <cancelProcess@@Base+0x180>
   16988:	ldr	r1, [pc, #80]	; 169e0 <cancelProcess@@Base+0x2f0>
   1698c:	mov	r2, #5
   16990:	mov	r0, #0
   16994:	add	r1, pc, r1
   16998:	bl	14fec <dcgettext@plt>
   1699c:	ldr	r1, [pc, #64]	; 169e4 <cancelProcess@@Base+0x2f4>
   169a0:	mov	r3, r8
   169a4:	add	r1, pc, r1
   169a8:	mov	r2, r0
   169ac:	mov	r0, #3
   169b0:	bl	183d0 <logMessage@@Base>
   169b4:	ldrb	r3, [r7, #264]	; 0x108
   169b8:	orr	r3, r3, #2
   169bc:	strb	r3, [r7, #264]	; 0x108
   169c0:	b	1686c <cancelProcess@@Base+0x17c>
   169c4:	bl	14fbc <__stack_chk_fail@plt>
   169c8:	andeq	r4, r2, r4, lsl #16
   169cc:	andeq	r0, r0, r8, asr #4
   169d0:	muleq	r1, ip, sl
   169d4:	andeq	pc, r0, r4, ror #14
   169d8:	andeq	pc, r0, ip, lsl #14
   169dc:			; <UNDEFINED> instruction: 0x0000feb4
   169e0:	andeq	pc, r0, r4, ror #13
   169e4:	andeq	pc, r0, r4, ror lr	; <UNPREDICTABLE>
   169e8:	push	{r4, r5, r6, r7, r8, lr}
   169ec:	mov	r5, r0
   169f0:	ldr	ip, [r0, #4]
   169f4:	cmp	ip, #0
   169f8:	popeq	{r4, r5, r6, r7, r8, pc}
   169fc:	ldr	r7, [pc, #120]	; 16a7c <cancelProcess@@Base+0x38c>
   16a00:	rsbs	r8, r1, #1
   16a04:	ldr	r6, [pc, #116]	; 16a80 <cancelProcess@@Base+0x390>
   16a08:	mov	r3, #0
   16a0c:	add	r7, pc, r7
   16a10:	movcc	r8, #0
   16a14:	add	r6, pc, r6
   16a18:	mov	r4, r3
   16a1c:	ldr	r2, [r5]
   16a20:	rsb	r3, r3, r3, lsl #3
   16a24:	mov	r0, r5
   16a28:	add	r4, r4, #1
   16a2c:	add	r3, r2, r3, lsl #2
   16a30:	ldrb	r2, [r3, #10]
   16a34:	mov	r1, r3
   16a38:	ubfx	r2, r2, #2, #1
   16a3c:	cmp	r8, r2
   16a40:	beq	16a58 <cancelProcess@@Base+0x368>
   16a44:	ldr	r2, [r3, #16]
   16a48:	cmp	r2, #0
   16a4c:	beq	16a68 <cancelProcess@@Base+0x378>
   16a50:	bl	167ec <cancelProcess@@Base+0xfc>
   16a54:	ldr	ip, [r5, #4]
   16a58:	cmp	r4, ip
   16a5c:	mov	r3, r4
   16a60:	bcc	16a1c <cancelProcess@@Base+0x32c>
   16a64:	pop	{r4, r5, r6, r7, r8, pc}
   16a68:	ldr	r3, [r3, #4]
   16a6c:	cmp	r3, #0
   16a70:	moveq	r2, r7
   16a74:	movne	r2, r6
   16a78:	b	16a50 <cancelProcess@@Base+0x360>
   16a7c:	andeq	pc, r0, r0, asr r6	; <UNPREDICTABLE>
   16a80:	andeq	pc, r0, r4, asr #15
   16a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a88:	mov	r9, r1
   16a8c:	sub	sp, sp, #12
   16a90:	mov	r1, #35	; 0x23
   16a94:	mov	r8, r0
   16a98:	bl	152a4 <strchr@plt>
   16a9c:	ldr	r1, [pc, #620]	; 16d10 <cancelProcess@@Base+0x620>
   16aa0:	add	r1, pc, r1
   16aa4:	cmp	r0, #0
   16aa8:	movne	r3, #0
   16aac:	strbne	r3, [r0]
   16ab0:	mov	r0, r8
   16ab4:	bl	14da0 <strtok@plt>
   16ab8:	subs	fp, r0, #0
   16abc:	beq	16c28 <cancelProcess@@Base+0x538>
   16ac0:	ldr	r3, [r9]
   16ac4:	ldr	sl, [r3, #4]
   16ac8:	cmp	sl, #0
   16acc:	beq	16b1c <cancelProcess@@Base+0x42c>
   16ad0:	ldr	r7, [r3]
   16ad4:	mov	r5, #0
   16ad8:	mov	r4, r5
   16adc:	rsb	r2, r5, r5, lsl #3
   16ae0:	mov	r0, fp
   16ae4:	add	r4, r4, #1
   16ae8:	add	r6, r7, r2, lsl #2
   16aec:	ldrb	ip, [r6, #10]
   16af0:	tst	ip, #4
   16af4:	beq	16b10 <cancelProcess@@Base+0x420>
   16af8:	ldr	r1, [r7, r2, lsl #2]
   16afc:	cmp	r1, #0
   16b00:	beq	16b10 <cancelProcess@@Base+0x420>
   16b04:	bl	14cec <strcasecmp@plt>
   16b08:	subs	ip, r0, #0
   16b0c:	beq	16b70 <cancelProcess@@Base+0x480>
   16b10:	cmp	r4, sl
   16b14:	mov	r5, r4
   16b18:	bne	16adc <cancelProcess@@Base+0x3ec>
   16b1c:	ldr	r1, [pc, #496]	; 16d14 <cancelProcess@@Base+0x624>
   16b20:	mov	r2, #5
   16b24:	mov	r0, #0
   16b28:	mov	ip, #1
   16b2c:	add	r1, pc, r1
   16b30:	str	ip, [sp, #4]
   16b34:	bl	14fec <dcgettext@plt>
   16b38:	ldr	r1, [pc, #472]	; 16d18 <cancelProcess@@Base+0x628>
   16b3c:	mov	r3, r8
   16b40:	add	r1, pc, r1
   16b44:	mov	r2, r0
   16b48:	mov	r0, #3
   16b4c:	bl	183d0 <logMessage@@Base>
   16b50:	ldr	r3, [r9]
   16b54:	ldrb	r2, [r3, #264]	; 0x108
   16b58:	orr	r2, r2, #2
   16b5c:	strb	r2, [r3, #264]	; 0x108
   16b60:	ldr	ip, [sp, #4]
   16b64:	mov	r0, ip
   16b68:	add	sp, sp, #12
   16b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b70:	ldr	r4, [pc, #420]	; 16d1c <cancelProcess@@Base+0x62c>
   16b74:	str	ip, [sp, #4]
   16b78:	add	r4, pc, r4
   16b7c:	mov	r1, r4
   16b80:	bl	14da0 <strtok@plt>
   16b84:	ldr	ip, [sp, #4]
   16b88:	subs	r7, r0, #0
   16b8c:	beq	16ce8 <cancelProcess@@Base+0x5f8>
   16b90:	mov	r0, ip
   16b94:	mov	r1, r4
   16b98:	str	ip, [sp, #4]
   16b9c:	bl	14da0 <strtok@plt>
   16ba0:	ldr	ip, [sp, #4]
   16ba4:	cmp	r0, #0
   16ba8:	beq	16c38 <cancelProcess@@Base+0x548>
   16bac:	mov	r0, #0
   16bb0:	mov	r1, r4
   16bb4:	bl	14da0 <strtok@plt>
   16bb8:	cmp	r0, #0
   16bbc:	bne	16bac <cancelProcess@@Base+0x4bc>
   16bc0:	ldr	r1, [pc, #344]	; 16d20 <cancelProcess@@Base+0x630>
   16bc4:	mov	r2, #5
   16bc8:	add	r1, pc, r1
   16bcc:	bl	14fec <dcgettext@plt>
   16bd0:	ldr	r1, [pc, #332]	; 16d24 <cancelProcess@@Base+0x634>
   16bd4:	mov	r3, r8
   16bd8:	add	r1, pc, r1
   16bdc:	mov	r2, r0
   16be0:	mov	r0, #3
   16be4:	bl	183d0 <logMessage@@Base>
   16be8:	ldr	r3, [r9]
   16bec:	mov	ip, #1
   16bf0:	mov	r0, ip
   16bf4:	ldrb	r2, [r3, #264]	; 0x108
   16bf8:	orr	r2, r2, #2
   16bfc:	strb	r2, [r3, #264]	; 0x108
   16c00:	add	sp, sp, #12
   16c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c08:	ldrb	r3, [r7]
   16c0c:	cmp	r3, #0
   16c10:	beq	16c28 <cancelProcess@@Base+0x538>
   16c14:	mov	r2, ip
   16c18:	mov	r1, r7
   16c1c:	bl	16708 <cancelProcess@@Base+0x18>
   16c20:	subs	ip, r0, #0
   16c24:	beq	16b64 <cancelProcess@@Base+0x474>
   16c28:	mov	ip, #1
   16c2c:	mov	r0, ip
   16c30:	add	sp, sp, #12
   16c34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c38:	ldr	r4, [r9, #4]
   16c3c:	lsl	sl, r5, #2
   16c40:	add	r0, r4, sl
   16c44:	ldr	r3, [r4, r5, lsl #2]
   16c48:	cmp	r3, #0
   16c4c:	beq	16cbc <cancelProcess@@Base+0x5cc>
   16c50:	ldr	r3, [r6, #4]
   16c54:	cmp	r3, #0
   16c58:	beq	16c68 <cancelProcess@@Base+0x578>
   16c5c:	ldrb	r3, [r6, #10]
   16c60:	tst	r3, #2
   16c64:	bne	16c08 <cancelProcess@@Base+0x518>
   16c68:	ldr	r1, [pc, #184]	; 16d28 <cancelProcess@@Base+0x638>
   16c6c:	mov	r2, #5
   16c70:	mov	r0, #0
   16c74:	str	ip, [sp, #4]
   16c78:	add	r1, pc, r1
   16c7c:	bl	14fec <dcgettext@plt>
   16c80:	ldr	r1, [pc, #164]	; 16d2c <cancelProcess@@Base+0x63c>
   16c84:	mov	r3, r8
   16c88:	add	r1, pc, r1
   16c8c:	mov	r2, r0
   16c90:	mov	r0, #3
   16c94:	bl	183d0 <logMessage@@Base>
   16c98:	ldr	r3, [r9]
   16c9c:	ldrb	r2, [r3, #264]	; 0x108
   16ca0:	orr	r2, r2, #2
   16ca4:	strb	r2, [r3, #264]	; 0x108
   16ca8:	ldr	r0, [r4, sl]
   16cac:	bl	14d10 <free@plt>
   16cb0:	mov	r3, #0
   16cb4:	str	r3, [r4, sl]
   16cb8:	ldr	ip, [sp, #4]
   16cbc:	mov	r0, r7
   16cc0:	str	ip, [sp, #4]
   16cc4:	bl	14e54 <__strdup@plt>
   16cc8:	cmp	r0, #0
   16ccc:	str	r0, [r4, sl]
   16cd0:	ldr	ip, [sp, #4]
   16cd4:	bne	16c28 <cancelProcess@@Base+0x538>
   16cd8:	str	ip, [sp, #4]
   16cdc:	bl	184dc <logMallocError@@Base>
   16ce0:	ldr	ip, [sp, #4]
   16ce4:	b	16b64 <cancelProcess@@Base+0x474>
   16ce8:	ldr	r1, [pc, #64]	; 16d30 <cancelProcess@@Base+0x640>
   16cec:	mov	r2, #5
   16cf0:	add	r1, pc, r1
   16cf4:	bl	14fec <dcgettext@plt>
   16cf8:	ldr	r1, [pc, #52]	; 16d34 <cancelProcess@@Base+0x644>
   16cfc:	mov	r3, r8
   16d00:	add	r1, pc, r1
   16d04:	mov	r2, r0
   16d08:	mov	r0, #3
   16d0c:	b	16be4 <cancelProcess@@Base+0x4f4>
   16d10:	strdeq	pc, [r0], -r0
   16d14:	andeq	pc, r0, r0, lsl #12
   16d18:	ldrdeq	pc, [r0], -r8
   16d1c:	andeq	pc, r0, r8, lsl r5	; <UNPREDICTABLE>
   16d20:	andeq	pc, r0, r0, lsl #10
   16d24:	andeq	pc, r0, r0, asr #24
   16d28:	andeq	pc, r0, r0, lsl #9
   16d2c:	muleq	r0, r0, fp
   16d30:	andeq	pc, r0, r4, lsr #7
   16d34:	andeq	pc, r0, r8, lsl fp	; <UNPREDICTABLE>

00016d38 <processOptions@@Base>:
   16d38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d3c:	add	fp, sp, #32
   16d40:	ldr	r8, [pc, #4068]	; 17d2c <processOptions@@Base+0xff4>
   16d44:	sub	sp, sp, #1680	; 0x690
   16d48:	sub	sp, sp, #4
   16d4c:	ldr	r3, [pc, #4060]	; 17d30 <processOptions@@Base+0xff8>
   16d50:	add	r8, pc, r8
   16d54:	sub	r5, fp, #1584	; 0x630
   16d58:	str	r0, [fp, #-1648]	; 0xfffff990
   16d5c:	sub	r5, r5, #4
   16d60:	str	r5, [fp, #-1652]	; 0xfffff98c
   16d64:	ldr	r3, [r8, r3]
   16d68:	mov	r9, r1
   16d6c:	mov	r0, r5
   16d70:	mov	r1, #0
   16d74:	mov	sl, r2
   16d78:	mov	r2, #268	; 0x10c
   16d7c:	str	r3, [fp, #-1668]	; 0xfffff97c
   16d80:	ldr	r3, [r3]
   16d84:	str	r3, [fp, #-40]	; 0xffffffd8
   16d88:	bl	14e0c <memset@plt>
   16d8c:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16d90:	sub	r2, fp, #1328	; 0x530
   16d94:	sub	r1, fp, #1584	; 0x630
   16d98:	add	r2, r2, #3
   16d9c:	sub	r1, r1, #4
   16da0:	ldr	ip, [r5]
   16da4:	add	r3, r1, #7
   16da8:	ldr	r0, [r5, #4]
   16dac:	mov	r1, #0
   16db0:	str	ip, [fp, #-1588]	; 0xfffff9cc
   16db4:	str	r0, [fp, #-1584]	; 0xfffff9d0
   16db8:	strb	r1, [r3, #1]!
   16dbc:	cmp	r3, r2
   16dc0:	bne	16db8 <processOptions@@Base+0x80>
   16dc4:	ldr	r1, [sl]
   16dc8:	ldr	r0, [r9]
   16dcc:	str	sp, [fp, #-1672]	; 0xfffff978
   16dd0:	bl	15db8 <beginProgram@@Base>
   16dd4:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16dd8:	ldr	r5, [fp, #-1648]	; 0xfffff990
   16ddc:	add	r2, r3, #1
   16de0:	cmp	r3, #0
   16de4:	lsl	r2, r2, #1
   16de8:	ldr	r5, [r5, #24]
   16dec:	add	r1, r2, #7
   16df0:	bic	r1, r1, #7
   16df4:	lsl	r2, r2, #4
   16df8:	sub	sp, sp, r1
   16dfc:	sub	r2, r2, #8
   16e00:	add	ip, sp, #24
   16e04:	sub	sp, sp, r2
   16e08:	str	r5, [fp, #-1660]	; 0xfffff984
   16e0c:	add	r5, sp, #24
   16e10:	str	ip, [fp, #-1632]	; 0xfffff9a0
   16e14:	str	r5, [fp, #-1664]	; 0xfffff980
   16e18:	beq	17de4 <processOptions@@Base+0x10ac>
   16e1c:	ldr	r5, [pc, #3856]	; 17d34 <processOptions@@Base+0xffc>
   16e20:	sub	r2, fp, #1600	; 0x640
   16e24:	ldr	ip, [pc, #3852]	; 17d38 <processOptions@@Base+0x1000>
   16e28:	sub	r2, r2, #4
   16e2c:	add	r5, pc, r5
   16e30:	str	r5, [fp, #-1644]	; 0xfffff994
   16e34:	mov	r5, #0
   16e38:	add	ip, pc, ip
   16e3c:	sub	r2, r2, #8
   16e40:	str	ip, [fp, #-1624]	; 0xfffff9a8
   16e44:	str	r2, [fp, #-1628]	; 0xfffff9a4
   16e48:	mov	r1, r5
   16e4c:	ldr	r4, [fp, #-1664]	; 0xfffff980
   16e50:	mov	ip, r5
   16e54:	str	r9, [fp, #-1636]	; 0xfffff99c
   16e58:	str	r8, [fp, #-1640]	; 0xfffff998
   16e5c:	b	16e78 <processOptions@@Base+0x140>
   16e60:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16e64:	add	r5, r5, #1
   16e68:	cmp	r5, r3
   16e6c:	mov	r1, r5
   16e70:	bcs	16f38 <processOptions@@Base+0x200>
   16e74:	mov	r4, r7
   16e78:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   16e7c:	rsb	r1, r1, r1, lsl #3
   16e80:	add	r6, r2, r1, lsl #2
   16e84:	ldr	r0, [r2, r1, lsl #2]
   16e88:	cmp	r0, #0
   16e8c:	moveq	r7, r4
   16e90:	beq	16e64 <processOptions@@Base+0x12c>
   16e94:	str	r0, [r4]
   16e98:	add	r7, r4, #16
   16e9c:	ldr	r3, [r6, #4]
   16ea0:	str	ip, [r4, #8]
   16ea4:	adds	r3, r3, #0
   16ea8:	movne	r3, #1
   16eac:	str	r3, [r4, #4]
   16eb0:	ldrb	r3, [r6, #8]
   16eb4:	str	r3, [r4, #12]
   16eb8:	ldr	r3, [r6, #4]
   16ebc:	cmp	r3, #0
   16ec0:	bne	16e60 <processOptions@@Base+0x128>
   16ec4:	ldr	r3, [r6, #12]
   16ec8:	cmp	r3, #0
   16ecc:	beq	16e60 <processOptions@@Base+0x128>
   16ed0:	ldr	r8, [r2, r1, lsl #2]
   16ed4:	mov	r2, #3
   16ed8:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   16edc:	str	ip, [fp, #-1688]	; 0xfffff968
   16ee0:	mov	r1, r8
   16ee4:	bl	15010 <strncasecmp@plt>
   16ee8:	ldr	ip, [fp, #-1688]	; 0xfffff968
   16eec:	cmp	r0, #0
   16ef0:	bne	17530 <processOptions@@Base+0x7f8>
   16ef4:	add	r0, r8, #3
   16ef8:	bl	14e54 <__strdup@plt>
   16efc:	ldr	ip, [fp, #-1688]	; 0xfffff968
   16f00:	subs	r9, r0, #0
   16f04:	beq	17c98 <processOptions@@Base+0xf60>
   16f08:	ldr	r0, [fp, #-1628]	; 0xfffff9a4
   16f0c:	add	r5, r5, #1
   16f10:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16f14:	add	r7, r4, #32
   16f18:	str	r9, [r4, #16]
   16f1c:	mov	r1, r5
   16f20:	str	ip, [r4, #20]
   16f24:	cmp	r5, r3
   16f28:	str	r0, [r4, #24]
   16f2c:	ldrb	r2, [r6, #8]
   16f30:	str	r2, [r4, #28]
   16f34:	bcc	16e74 <processOptions@@Base+0x13c>
   16f38:	ldr	r9, [fp, #-1636]	; 0xfffff99c
   16f3c:	ldr	r8, [fp, #-1640]	; 0xfffff998
   16f40:	mov	r1, #0
   16f44:	mov	r2, #16
   16f48:	mov	r0, r7
   16f4c:	bl	14e0c <memset@plt>
   16f50:	sub	r3, fp, #1312	; 0x520
   16f54:	sub	r3, r3, #4
   16f58:	sub	r1, fp, #300	; 0x12c
   16f5c:	sub	r3, r3, #8
   16f60:	mov	r2, #0
   16f64:	str	r2, [r3, #4]!
   16f68:	cmp	r3, r1
   16f6c:	bne	16f64 <processOptions@@Base+0x22c>
   16f70:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16f74:	mov	r2, #43	; 0x2b
   16f78:	ldr	r5, [fp, #-1632]	; 0xfffff9a0
   16f7c:	cmp	r3, #0
   16f80:	add	r1, r5, #1
   16f84:	strb	r2, [r5]
   16f88:	beq	16ff0 <processOptions@@Base+0x2b8>
   16f8c:	mov	r2, #0
   16f90:	mov	lr, #58	; 0x3a
   16f94:	mov	r3, r2
   16f98:	mov	r4, r2
   16f9c:	ldr	r0, [fp, #-1588]	; 0xfffff9cc
   16fa0:	rsb	r3, r3, r3, lsl #3
   16fa4:	sub	r5, fp, #36	; 0x24
   16fa8:	add	r2, r2, #1
   16fac:	add	r3, r0, r3, lsl #2
   16fb0:	ldrb	r0, [r3, #8]
   16fb4:	add	ip, r5, r0, lsl #2
   16fb8:	str	r3, [ip, #-1284]	; 0xfffffafc
   16fbc:	strb	r0, [r1]
   16fc0:	ldr	r0, [r3, #4]
   16fc4:	cmp	r0, #0
   16fc8:	strbne	lr, [r1, #1]
   16fcc:	ldr	r3, [r3, #12]
   16fd0:	addne	r1, r1, #2
   16fd4:	addeq	r1, r1, #1
   16fd8:	cmp	r3, #0
   16fdc:	strne	r4, [r3]
   16fe0:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   16fe4:	cmp	r2, r3
   16fe8:	mov	r3, r2
   16fec:	bcc	16f9c <processOptions@@Base+0x264>
   16ff0:	mov	r3, #0
   16ff4:	strb	r3, [r1]
   16ff8:	ldr	r2, [r9]
   16ffc:	cmp	r2, #1
   17000:	ldrgt	r2, [pc, #3380]	; 17d3c <processOptions@@Base+0x1004>
   17004:	ldrgt	r2, [r8, r2]
   17008:	strgt	r3, [r2]
   1700c:	mov	ip, #0
   17010:	ldr	r2, [pc, #3368]	; 17d40 <processOptions@@Base+0x1008>
   17014:	str	ip, [fp, #-1640]	; 0xfffff998
   17018:	mov	r5, ip
   1701c:	str	ip, [fp, #-1624]	; 0xfffff9a8
   17020:	mov	r3, #1
   17024:	ldr	ip, [pc, #3352]	; 17d44 <processOptions@@Base+0x100c>
   17028:	mov	r4, r3
   1702c:	ldr	r6, [r8, r2]
   17030:	mvn	r7, #0
   17034:	add	ip, pc, ip
   17038:	str	ip, [fp, #-1628]	; 0xfffff9a4
   1703c:	ldr	ip, [pc, #3332]	; 17d48 <processOptions@@Base+0x1010>
   17040:	str	r3, [r6]
   17044:	add	ip, pc, ip
   17048:	str	ip, [fp, #-1636]	; 0xfffff99c
   1704c:	ldr	ip, [pc, #3320]	; 17d4c <processOptions@@Base+0x1014>
   17050:	ldr	r0, [r9]
   17054:	ldr	r1, [sl]
   17058:	add	ip, pc, ip
   1705c:	str	ip, [fp, #-1644]	; 0xfffff994
   17060:	ldr	ip, [pc, #3304]	; 17d50 <processOptions@@Base+0x1018>
   17064:	add	ip, pc, ip
   17068:	str	ip, [fp, #-1656]	; 0xfffff988
   1706c:	cmp	r4, r0
   17070:	beq	170a8 <processOptions@@Base+0x370>
   17074:	cmp	r5, #0
   17078:	ldr	r3, [r1, r4, lsl #2]
   1707c:	beq	173d4 <processOptions@@Base+0x69c>
   17080:	ldrb	r3, [r5]
   17084:	cmp	r3, #0
   17088:	bne	17308 <processOptions@@Base+0x5d0>
   1708c:	add	r4, r4, #1
   17090:	str	r4, [r6]
   17094:	ldr	r0, [r9]
   17098:	mov	r5, r3
   1709c:	ldr	r1, [sl]
   170a0:	cmp	r4, r0
   170a4:	bne	17074 <processOptions@@Base+0x33c>
   170a8:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   170ac:	add	r1, r1, r4, lsl #2
   170b0:	str	r1, [sl]
   170b4:	cmp	r5, #0
   170b8:	ldr	r3, [r6]
   170bc:	ldr	r2, [r9]
   170c0:	rsb	r3, r3, r2
   170c4:	str	r3, [r9]
   170c8:	bne	175b4 <processOptions@@Base+0x87c>
   170cc:	ldr	r5, [fp, #-1664]	; 0xfffff980
   170d0:	ldr	r0, [r5]
   170d4:	cmp	r0, #0
   170d8:	ldrne	r4, [fp, #-1664]	; 0xfffff980
   170dc:	beq	170fc <processOptions@@Base+0x3c4>
   170e0:	ldr	r3, [r4, #8]
   170e4:	cmp	r3, #0
   170e8:	beq	170f0 <processOptions@@Base+0x3b8>
   170ec:	bl	14d10 <free@plt>
   170f0:	ldr	r0, [r4, #16]!
   170f4:	cmp	r0, #0
   170f8:	bne	170e0 <processOptions@@Base+0x3a8>
   170fc:	ldr	ip, [fp, #-1648]	; 0xfffff990
   17100:	ldr	sp, [fp, #-1672]	; 0xfffff978
   17104:	ldr	sl, [ip, #16]
   17108:	cmp	sl, #0
   1710c:	beq	1711c <processOptions@@Base+0x3e4>
   17110:	ldr	sl, [sl]
   17114:	adds	sl, sl, #0
   17118:	movne	sl, #1
   1711c:	ldr	r5, [fp, #-1648]	; 0xfffff990
   17120:	str	sl, [fp, #-1624]	; 0xfffff9a8
   17124:	ldr	r3, [r5, #8]
   17128:	cmp	r3, #0
   1712c:	beq	1713c <processOptions@@Base+0x404>
   17130:	ldr	r3, [r3]
   17134:	cmp	r3, #0
   17138:	bne	17ba4 <processOptions@@Base+0xe6c>
   1713c:	ldr	ip, [fp, #-1648]	; 0xfffff990
   17140:	ldr	r3, [ip, #12]
   17144:	cmp	r3, #0
   17148:	beq	17158 <processOptions@@Base+0x420>
   1714c:	ldr	r3, [r3]
   17150:	cmp	r3, #0
   17154:	bne	17a70 <processOptions@@Base+0xd38>
   17158:	sub	r0, fp, #1584	; 0x630
   1715c:	mov	r1, #0
   17160:	sub	r0, r0, #4
   17164:	bl	169e8 <cancelProcess@@Base+0x2f8>
   17168:	ldr	r5, [fp, #-1648]	; 0xfffff990
   1716c:	ldr	r3, [r5, #16]
   17170:	cmp	r3, #0
   17174:	beq	172c0 <processOptions@@Base+0x588>
   17178:	ldr	r3, [r3]
   1717c:	cmp	r3, #0
   17180:	beq	172c0 <processOptions@@Base+0x588>
   17184:	sub	r4, fp, #1600	; 0x640
   17188:	ldr	r5, [fp, #-1624]	; 0xfffff9a8
   1718c:	sub	r4, r4, #4
   17190:	str	r3, [fp, #-1616]	; 0xfffff9b0
   17194:	sub	r0, r4, #12
   17198:	eor	sl, r5, #1
   1719c:	bl	16228 <fixInstallPath@@Base>
   171a0:	ldr	r5, [fp, #-1616]	; 0xfffff9b0
   171a4:	ldr	r1, [pc, #2984]	; 17d54 <processOptions@@Base+0x101c>
   171a8:	mov	r2, sl
   171ac:	add	r1, pc, r1
   171b0:	mov	r0, r5
   171b4:	bl	18f5c <openDataFile@@Base>
   171b8:	subs	r6, r0, #0
   171bc:	beq	17588 <processOptions@@Base+0x850>
   171c0:	ldr	r7, [fp, #-1584]	; 0xfffff9d0
   171c4:	sub	ip, fp, #1584	; 0x630
   171c8:	sub	ip, ip, #4
   171cc:	str	ip, [fp, #-1612]	; 0xfffff9b4
   171d0:	lsl	r0, r7, #2
   171d4:	bl	150dc <malloc@plt>
   171d8:	cmp	r0, #0
   171dc:	str	r0, [fp, #-1608]	; 0xfffff9b8
   171e0:	beq	17dec <processOptions@@Base+0x10b4>
   171e4:	cmp	r7, #0
   171e8:	movne	r3, #0
   171ec:	movne	r2, r0
   171f0:	movne	r1, r3
   171f4:	bne	17200 <processOptions@@Base+0x4c8>
   171f8:	b	17214 <processOptions@@Base+0x4dc>
   171fc:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   17200:	str	r1, [r2, r3, lsl #2]
   17204:	add	r3, r3, #1
   17208:	ldr	r2, [fp, #-1584]	; 0xfffff9d0
   1720c:	cmp	r3, r2
   17210:	bcc	171fc <processOptions@@Base+0x4c4>
   17214:	ldr	r1, [pc, #2876]	; 17d58 <processOptions@@Base+0x1020>
   17218:	sub	r2, r4, #8
   1721c:	mov	r0, r6
   17220:	add	r1, pc, r1
   17224:	bl	19238 <processLines@@Base>
   17228:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1722c:	cmp	r3, #0
   17230:	subne	sl, fp, #1584	; 0x630
   17234:	movne	r4, #0
   17238:	subne	sl, sl, #4
   1723c:	movne	r9, r4
   17240:	mov	r7, r0
   17244:	beq	1728c <processOptions@@Base+0x554>
   17248:	ldr	r2, [fp, #-1608]	; 0xfffff9b8
   1724c:	ldr	r8, [r2, r4]
   17250:	cmp	r8, #0
   17254:	beq	1727c <processOptions@@Base+0x544>
   17258:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   1725c:	rsb	r3, r4, r4, lsl #3
   17260:	mov	r2, r8
   17264:	mov	r0, sl
   17268:	add	r1, r1, r3
   1726c:	bl	167ec <cancelProcess@@Base+0xfc>
   17270:	mov	r0, r8
   17274:	bl	14d10 <free@plt>
   17278:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   1727c:	add	r9, r9, #1
   17280:	add	r4, r4, #4
   17284:	cmp	r9, r3
   17288:	bcc	17248 <processOptions@@Base+0x510>
   1728c:	cmp	r7, #0
   17290:	beq	17cf8 <processOptions@@Base+0xfc0>
   17294:	ldr	r0, [fp, #-1608]	; 0xfffff9b8
   17298:	bl	14d10 <free@plt>
   1729c:	mov	r0, r6
   172a0:	bl	15124 <fclose@plt>
   172a4:	ldr	r5, [fp, #-1648]	; 0xfffff990
   172a8:	ldr	r0, [fp, #-1616]	; 0xfffff9b0
   172ac:	ldr	r3, [r5, #16]
   172b0:	ldr	r3, [r3]
   172b4:	cmp	r3, r0
   172b8:	beq	172c0 <processOptions@@Base+0x588>
   172bc:	bl	14d10 <free@plt>
   172c0:	sub	r0, fp, #1584	; 0x630
   172c4:	mov	r1, #1
   172c8:	sub	r0, r0, #4
   172cc:	bl	169e8 <cancelProcess@@Base+0x2f8>
   172d0:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   172d4:	tst	r3, #1
   172d8:	movne	r0, #1
   172dc:	bne	172ec <processOptions@@Base+0x5b4>
   172e0:	tst	r3, #4
   172e4:	moveq	r0, #0
   172e8:	movne	r0, #2
   172ec:	ldr	ip, [fp, #-1668]	; 0xfffff97c
   172f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   172f4:	ldr	r3, [ip]
   172f8:	cmp	r2, r3
   172fc:	bne	17e20 <processOptions@@Base+0x10e8>
   17300:	sub	sp, fp, #32
   17304:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17308:	sub	r0, fp, #36	; 0x24
   1730c:	add	r2, r0, r3, lsl #2
   17310:	ldr	r2, [r2, #-1284]	; 0xfffffafc
   17314:	cmp	r2, #0
   17318:	beq	17328 <processOptions@@Base+0x5f0>
   1731c:	ldr	ip, [r2, #4]
   17320:	cmp	ip, #0
   17324:	beq	1751c <processOptions@@Base+0x7e4>
   17328:	ldr	r2, [pc, #2604]	; 17d5c <processOptions@@Base+0x1024>
   1732c:	mov	ip, #63	; 0x3f
   17330:	ldr	r2, [r8, r2]
   17334:	str	r3, [r2]
   17338:	cmp	ip, #63	; 0x3f
   1733c:	add	r5, r5, #1
   17340:	mov	r4, #43	; 0x2b
   17344:	beq	17418 <processOptions@@Base+0x6e0>
   17348:	bgt	173ac <processOptions@@Base+0x674>
   1734c:	cmp	ip, #0
   17350:	beq	17488 <processOptions@@Base+0x750>
   17354:	cmp	ip, #58	; 0x3a
   17358:	bne	17440 <processOptions@@Base+0x708>
   1735c:	ldr	r1, [fp, #-1644]	; 0xfffff994
   17360:	mov	r2, #5
   17364:	mov	r0, #0
   17368:	bl	14fec <dcgettext@plt>
   1736c:	ldr	ip, [pc, #2536]	; 17d5c <processOptions@@Base+0x1024>
   17370:	ldr	r1, [fp, #-1656]	; 0xfffff988
   17374:	mov	r3, r4
   17378:	mov	r2, r0
   1737c:	mov	r0, #3
   17380:	ldr	ip, [r8, ip]
   17384:	ldr	ip, [ip]
   17388:	str	ip, [sp]
   1738c:	bl	183d0 <logMessage@@Base>
   17390:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   17394:	ldr	r0, [r9]
   17398:	orr	r3, r3, #4
   1739c:	ldr	r4, [r6]
   173a0:	strb	r3, [fp, #-1324]	; 0xfffffad4
   173a4:	ldr	r1, [sl]
   173a8:	b	1706c <processOptions@@Base+0x334>
   173ac:	cmp	ip, #72	; 0x48
   173b0:	beq	174c4 <processOptions@@Base+0x78c>
   173b4:	cmp	ip, #104	; 0x68
   173b8:	bne	17440 <processOptions@@Base+0x708>
   173bc:	mov	ip, #1
   173c0:	ldr	r0, [r9]
   173c4:	str	ip, [fp, #-1624]	; 0xfffff9a8
   173c8:	ldr	r4, [r6]
   173cc:	ldr	r1, [sl]
   173d0:	b	1706c <processOptions@@Base+0x334>
   173d4:	cmp	r7, r4
   173d8:	beq	173e8 <processOptions@@Base+0x6b0>
   173dc:	ldrb	r2, [r3]
   173e0:	cmp	r2, #43	; 0x2b
   173e4:	beq	175a0 <processOptions@@Base+0x868>
   173e8:	mov	r2, #0
   173ec:	str	r2, [sp]
   173f0:	ldr	r2, [fp, #-1632]	; 0xfffff9a0
   173f4:	ldr	r3, [fp, #-1664]	; 0xfffff980
   173f8:	bl	1501c <getopt_long@plt>
   173fc:	cmn	r0, #1
   17400:	mov	ip, r0
   17404:	beq	17e14 <processOptions@@Base+0x10dc>
   17408:	cmp	ip, #63	; 0x3f
   1740c:	mov	r7, r4
   17410:	mov	r4, #45	; 0x2d
   17414:	bne	17348 <processOptions@@Base+0x610>
   17418:	ldr	r1, [fp, #-1628]	; 0xfffff9a4
   1741c:	mov	r2, #5
   17420:	mov	r0, #0
   17424:	bl	14fec <dcgettext@plt>
   17428:	ldr	ip, [pc, #2348]	; 17d5c <processOptions@@Base+0x1024>
   1742c:	mov	r3, r4
   17430:	ldr	r1, [fp, #-1636]	; 0xfffff99c
   17434:	mov	r2, r0
   17438:	mov	r0, #3
   1743c:	b	17380 <processOptions@@Base+0x648>
   17440:	sub	r0, fp, #36	; 0x24
   17444:	add	r3, r0, ip, lsl #2
   17448:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   1744c:	ldr	r2, [r3, #4]
   17450:	cmp	r2, #0
   17454:	beq	17a48 <processOptions@@Base+0xd10>
   17458:	ldr	r2, [pc, #2304]	; 17d60 <processOptions@@Base+0x1028>
   1745c:	ldr	r2, [r8, r2]
   17460:	ldr	r1, [r2]
   17464:	ldrb	r2, [r1]
   17468:	cmp	r2, #0
   1746c:	bne	174e0 <processOptions@@Base+0x7a8>
   17470:	add	ip, r0, ip
   17474:	ldr	r4, [r6]
   17478:	ldr	r0, [r9]
   1747c:	strb	r2, [ip, #-1544]	; 0xfffff9f8
   17480:	ldr	r1, [sl]
   17484:	b	1706c <processOptions@@Base+0x334>
   17488:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   1748c:	sub	r0, fp, #36	; 0x24
   17490:	sub	r1, fp, #36	; 0x24
   17494:	mov	r2, #1
   17498:	add	r3, r0, r3, lsl #2
   1749c:	ldr	r3, [r3, #-1284]	; 0xfffffafc
   174a0:	ldr	r3, [r3, #12]
   174a4:	str	ip, [r3]
   174a8:	ldr	r3, [fp, #-1612]	; 0xfffff9b4
   174ac:	ldr	r0, [r9]
   174b0:	add	r3, r1, r3
   174b4:	ldr	r4, [r6]
   174b8:	ldr	r1, [sl]
   174bc:	strb	r2, [r3, #-1544]	; 0xfffff9f8
   174c0:	b	1706c <processOptions@@Base+0x334>
   174c4:	mov	ip, #1
   174c8:	ldr	r0, [r9]
   174cc:	str	ip, [fp, #-1640]	; 0xfffff998
   174d0:	str	ip, [fp, #-1624]	; 0xfffff9a8
   174d4:	ldr	r4, [r6]
   174d8:	ldr	r1, [sl]
   174dc:	b	1706c <processOptions@@Base+0x334>
   174e0:	ldr	r0, [r3, #12]
   174e4:	cmp	r0, #0
   174e8:	beq	174fc <processOptions@@Base+0x7c4>
   174ec:	ldrb	r3, [r3, #10]
   174f0:	tst	r3, #2
   174f4:	streq	r1, [r0]
   174f8:	bne	17cac <processOptions@@Base+0xf74>
   174fc:	sub	r2, fp, #36	; 0x24
   17500:	mov	r3, #1
   17504:	add	ip, r2, ip
   17508:	ldr	r0, [r9]
   1750c:	ldr	r4, [r6]
   17510:	strb	r3, [ip, #-1544]	; 0xfffff9f8
   17514:	ldr	r1, [sl]
   17518:	b	1706c <processOptions@@Base+0x334>
   1751c:	ldr	r2, [r2, #12]
   17520:	cmp	r2, #0
   17524:	strne	r3, [fp, #-1612]	; 0xfffff9b4
   17528:	bne	17338 <processOptions@@Base+0x600>
   1752c:	b	17328 <processOptions@@Base+0x5f0>
   17530:	mov	r0, r8
   17534:	str	ip, [fp, #-1688]	; 0xfffff968
   17538:	bl	150e8 <strlen@plt>
   1753c:	add	r1, r0, #4
   17540:	str	r1, [fp, #-1684]	; 0xfffff96c
   17544:	mov	r0, r1
   17548:	bl	150dc <malloc@plt>
   1754c:	ldr	r1, [fp, #-1684]	; 0xfffff96c
   17550:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17554:	subs	r9, r0, #0
   17558:	beq	17c98 <processOptions@@Base+0xf60>
   1755c:	ldr	r2, [fp, #-1644]	; 0xfffff994
   17560:	str	r2, [sp]
   17564:	mov	r2, #1
   17568:	ldr	r3, [fp, #-1624]	; 0xfffff9a8
   1756c:	str	r8, [sp, #8]
   17570:	str	r3, [sp, #4]
   17574:	mvn	r3, #0
   17578:	str	ip, [fp, #-1688]	; 0xfffff968
   1757c:	bl	150f4 <__snprintf_chk@plt>
   17580:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17584:	b	16f08 <processOptions@@Base+0x1d0>
   17588:	cmp	sl, #0
   1758c:	bne	17cc0 <processOptions@@Base+0xf88>
   17590:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   17594:	orr	r3, r3, #2
   17598:	strb	r3, [fp, #-1324]	; 0xfffffad4
   1759c:	b	172a4 <processOptions@@Base+0x56c>
   175a0:	adds	r3, r3, #1
   175a4:	movne	r5, r3
   175a8:	movne	r7, r4
   175ac:	bne	1706c <processOptions@@Base+0x334>
   175b0:	b	173e8 <processOptions@@Base+0x6b0>
   175b4:	ldr	r3, [pc, #1960]	; 17d64 <processOptions@@Base+0x102c>
   175b8:	str	sp, [fp, #-1680]	; 0xfffff970
   175bc:	sub	sp, sp, #80	; 0x50
   175c0:	ldr	r6, [fp, #-1584]	; 0xfffff9d0
   175c4:	add	sl, sp, #24
   175c8:	ldr	r3, [r8, r3]
   175cc:	cmp	r6, #0
   175d0:	ldr	r3, [r3]
   175d4:	str	r3, [fp, #-1632]	; 0xfffff9a0
   175d8:	beq	17df4 <processOptions@@Base+0x10bc>
   175dc:	ldr	r5, [fp, #-1588]	; 0xfffff9cc
   175e0:	mov	r7, #0
   175e4:	mov	r4, r7
   175e8:	mov	r3, r7
   175ec:	mov	r9, r7
   175f0:	str	r7, [fp, #-1656]	; 0xfffff988
   175f4:	str	r8, [fp, #-1624]	; 0xfffff9a8
   175f8:	rsb	r3, r3, r3, lsl #3
   175fc:	ldr	r0, [r5, r3, lsl #2]
   17600:	add	r8, r5, r3, lsl #2
   17604:	cmp	r0, #0
   17608:	beq	17618 <processOptions@@Base+0x8e0>
   1760c:	bl	150e8 <strlen@plt>
   17610:	cmp	r4, r0
   17614:	movcc	r4, r0
   17618:	ldr	r0, [r8, #4]
   1761c:	cmp	r0, #0
   17620:	beq	17630 <processOptions@@Base+0x8f8>
   17624:	bl	150e8 <strlen@plt>
   17628:	cmp	r9, r0
   1762c:	movcc	r9, r0
   17630:	add	r7, r7, #1
   17634:	cmp	r7, r6
   17638:	mov	r3, r7
   1763c:	bne	175f8 <processOptions@@Base+0x8c0>
   17640:	ldr	r8, [fp, #-1624]	; 0xfffff9a8
   17644:	str	r9, [fp, #-1656]	; 0xfffff988
   17648:	ldr	r1, [pc, #1816]	; 17d68 <processOptions@@Base+0x1030>
   1764c:	mov	r2, #5
   17650:	mov	r0, #0
   17654:	add	r1, pc, r1
   17658:	bl	14fec <dcgettext@plt>
   1765c:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   17660:	bl	15250 <fputs@plt>
   17664:	ldr	r3, [pc, #1792]	; 17d6c <processOptions@@Base+0x1034>
   17668:	ldr	r2, [pc, #1792]	; 17d70 <processOptions@@Base+0x1038>
   1766c:	mov	r1, #1
   17670:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   17674:	ldr	r3, [r8, r3]
   17678:	add	r2, pc, r2
   1767c:	ldr	r3, [r3]
   17680:	bl	14ddc <__fprintf_chk@plt>
   17684:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17688:	cmp	r3, #0
   1768c:	bne	17d94 <processOptions@@Base+0x105c>
   17690:	ldr	ip, [fp, #-1660]	; 0xfffff984
   17694:	cmp	ip, #0
   17698:	beq	176a8 <processOptions@@Base+0x970>
   1769c:	ldrb	r3, [ip]
   176a0:	cmp	r3, #0
   176a4:	bne	17cd4 <processOptions@@Base+0xf9c>
   176a8:	mov	r0, #10
   176ac:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   176b0:	bl	150b8 <fputc@plt>
   176b4:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   176b8:	cmp	r3, #0
   176bc:	beq	17a10 <processOptions@@Base+0xcd8>
   176c0:	ldr	r5, [pc, #1708]	; 17d74 <processOptions@@Base+0x103c>
   176c4:	add	r4, r4, #3
   176c8:	ldr	ip, [pc, #1704]	; 17d78 <processOptions@@Base+0x1040>
   176cc:	add	r5, pc, r5
   176d0:	str	r5, [fp, #-1628]	; 0xfffff9a4
   176d4:	add	ip, pc, ip
   176d8:	mov	r5, #0
   176dc:	str	ip, [fp, #-1676]	; 0xfffff974
   176e0:	mov	r7, r5
   176e4:	ldr	ip, [fp, #-1656]	; 0xfffff988
   176e8:	str	r5, [fp, #-1636]	; 0xfffff99c
   176ec:	mov	r5, #32
   176f0:	add	ip, ip, #3
   176f4:	str	r4, [fp, #-1660]	; 0xfffff984
   176f8:	str	ip, [fp, #-1644]	; 0xfffff994
   176fc:	ldr	ip, [fp, #-1640]	; 0xfffff998
   17700:	rsb	r7, r7, r7, lsl #3
   17704:	ldr	r6, [fp, #-1588]	; 0xfffff9cc
   17708:	cmp	ip, #0
   1770c:	add	r8, r6, r7, lsl #2
   17710:	bne	17720 <processOptions@@Base+0x9e8>
   17714:	ldrb	r2, [r8, #10]
   17718:	tst	r2, #1
   1771c:	bne	179f8 <processOptions@@Base+0xcc0>
   17720:	mov	r0, #45	; 0x2d
   17724:	strb	r0, [sl]
   17728:	ldrb	r3, [r8, #8]
   1772c:	strb	r5, [sl, #2]
   17730:	ldr	ip, [fp, #-1644]	; 0xfffff994
   17734:	strb	r3, [sl, #1]
   17738:	ldr	r9, [r8, #4]
   1773c:	cmp	r9, #0
   17740:	beq	17a2c <processOptions@@Base+0xcf4>
   17744:	mov	r0, r9
   17748:	str	ip, [fp, #-1688]	; 0xfffff968
   1774c:	bl	150e8 <strlen@plt>
   17750:	mov	r1, r9
   17754:	mov	r3, #77	; 0x4d
   17758:	mov	r4, r0
   1775c:	mov	r2, r0
   17760:	add	r0, sl, #3
   17764:	bl	14cb0 <__memcpy_chk@plt>
   17768:	ldr	r1, [fp, #-1644]	; 0xfffff994
   1776c:	add	r3, r4, #3
   17770:	add	r2, r4, #4
   17774:	cmp	r1, r3
   17778:	ldr	ip, [fp, #-1688]	; 0xfffff968
   1777c:	bls	17a40 <processOptions@@Base+0xd08>
   17780:	mov	r2, r1
   17784:	strb	r5, [sl, r3]
   17788:	add	r3, r3, #1
   1778c:	cmp	r2, r3
   17790:	bne	17784 <processOptions@@Base+0xa4c>
   17794:	ldr	r3, [fp, #-1656]	; 0xfffff988
   17798:	add	r2, r3, #4
   1779c:	ldr	r0, [fp, #-1660]	; 0xfffff984
   177a0:	strb	r5, [sl, ip]
   177a4:	add	r4, r0, r2
   177a8:	ldr	r0, [r6, r7, lsl #2]
   177ac:	cmp	r0, #0
   177b0:	beq	17810 <processOptions@@Base+0xad8>
   177b4:	add	r9, ip, #3
   177b8:	str	r2, [fp, #-1684]	; 0xfffff96c
   177bc:	str	ip, [fp, #-1688]	; 0xfffff968
   177c0:	bl	150e8 <strlen@plt>
   177c4:	ldr	ip, [fp, #-1688]	; 0xfffff968
   177c8:	mov	r1, #45	; 0x2d
   177cc:	ldr	r2, [fp, #-1684]	; 0xfffff96c
   177d0:	add	ip, sl, ip
   177d4:	strb	r1, [sl, r2]
   177d8:	strb	r1, [ip, #2]
   177dc:	ldr	r1, [r6, r7, lsl #2]
   177e0:	mov	r3, r0
   177e4:	add	r0, sl, r9
   177e8:	mov	r2, r3
   177ec:	str	r3, [fp, #-1684]	; 0xfffff96c
   177f0:	bl	150d0 <memcpy@plt>
   177f4:	ldr	r3, [fp, #-1684]	; 0xfffff96c
   177f8:	ldr	r1, [r8, #4]
   177fc:	add	r2, r3, r9
   17800:	cmp	r1, #0
   17804:	movne	r3, #61	; 0x3d
   17808:	strbne	r3, [sl, r2]
   1780c:	addne	r2, r2, #1
   17810:	cmp	r4, r2
   17814:	bls	17c90 <processOptions@@Base+0xf58>
   17818:	mov	r3, r2
   1781c:	strb	r5, [sl, r3]
   17820:	add	r3, r3, #1
   17824:	cmp	r3, r4
   17828:	bne	1781c <processOptions@@Base+0xae4>
   1782c:	mov	r3, sl
   17830:	add	r6, r4, #2
   17834:	strb	r5, [r3, r4]!
   17838:	rsb	r9, r4, #77	; 0x4d
   1783c:	strb	r5, [r3, #1]
   17840:	ldr	r1, [r8, #20]
   17844:	cmp	r1, #0
   17848:	beq	17a24 <processOptions@@Base+0xcec>
   1784c:	mov	r0, #0
   17850:	mov	r2, #5
   17854:	bl	14fec <dcgettext@plt>
   17858:	mov	r7, r0
   1785c:	ldr	r0, [r8, #24]
   17860:	cmp	r0, #0
   17864:	beq	17900 <processOptions@@Base+0xbc8>
   17868:	ldr	r2, [r0]
   1786c:	sub	lr, fp, #1600	; 0x640
   17870:	sub	lr, lr, #4
   17874:	mov	r4, sp
   17878:	cmp	r2, #0
   1787c:	subne	r1, lr, #4
   17880:	movne	r3, #0
   17884:	beq	17cf0 <processOptions@@Base+0xfb8>
   17888:	str	r2, [r1, #4]!
   1788c:	add	r3, r3, #1
   17890:	ldr	r2, [r0, #4]!
   17894:	cmp	r2, #0
   17898:	bne	17888 <processOptions@@Base+0xb50>
   1789c:	cmp	r3, #3
   178a0:	bgt	178c0 <processOptions@@Base+0xb88>
   178a4:	sub	r2, r3, #1
   178a8:	mov	r1, #0
   178ac:	add	r2, lr, r2, lsl #2
   178b0:	add	r3, r3, #1
   178b4:	str	r1, [r2, #4]!
   178b8:	cmp	r3, #3
   178bc:	ble	178b0 <processOptions@@Base+0xb78>
   178c0:	str	r7, [sp]
   178c4:	sub	r7, fp, #296	; 0x128
   178c8:	ldr	lr, [fp, #-1604]	; 0xfffff9bc
   178cc:	mov	r1, #256	; 0x100
   178d0:	mov	r0, r7
   178d4:	mov	r3, r1
   178d8:	mov	r2, #1
   178dc:	str	lr, [sp, #4]
   178e0:	ldr	lr, [fp, #-1600]	; 0xfffff9c0
   178e4:	str	lr, [sp, #8]
   178e8:	ldr	lr, [fp, #-1596]	; 0xfffff9c4
   178ec:	str	lr, [sp, #12]
   178f0:	ldr	lr, [fp, #-1592]	; 0xfffff9c8
   178f4:	str	lr, [sp, #16]
   178f8:	bl	150f4 <__snprintf_chk@plt>
   178fc:	mov	sp, r4
   17900:	mov	r0, r7
   17904:	add	ip, sl, r6
   17908:	str	ip, [fp, #-1624]	; 0xfffff9a8
   1790c:	bl	150e8 <strlen@plt>
   17910:	mov	r8, r0
   17914:	cmp	r9, r8
   17918:	movcs	r4, r8
   1791c:	bcs	17960 <processOptions@@Base+0xc28>
   17920:	ldrb	r2, [r7, r9]
   17924:	add	r3, r7, r9
   17928:	mov	r4, r9
   1792c:	cmp	r2, #32
   17930:	beq	17944 <processOptions@@Base+0xc0c>
   17934:	ldrb	r2, [r3, #-1]!
   17938:	sub	r4, r4, #1
   1793c:	cmp	r2, #32
   17940:	bne	17934 <processOptions@@Base+0xbfc>
   17944:	add	r3, r7, r4
   17948:	b	17950 <processOptions@@Base+0xc18>
   1794c:	mov	r4, r1
   17950:	ldrb	r2, [r3, #-1]!
   17954:	sub	r1, r4, #1
   17958:	cmp	r2, #32
   1795c:	beq	1794c <processOptions@@Base+0xc14>
   17960:	mov	r1, r7
   17964:	mov	r2, r4
   17968:	ldr	r0, [fp, #-1624]	; 0xfffff9a8
   1796c:	bl	150d0 <memcpy@plt>
   17970:	ldr	ip, [fp, #-1624]	; 0xfffff9a8
   17974:	mov	r0, #0
   17978:	ldr	r2, [fp, #-1628]	; 0xfffff9a4
   1797c:	mov	r3, sl
   17980:	mov	r1, #1
   17984:	strb	r0, [ip, r4]
   17988:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   1798c:	bl	14ddc <__fprintf_chk@plt>
   17990:	ldrb	r3, [r7, r4]
   17994:	add	r2, r7, r4
   17998:	cmp	r3, #32
   1799c:	bne	179c8 <processOptions@@Base+0xc90>
   179a0:	rsb	r7, r7, #1
   179a4:	mov	r4, r2
   179a8:	b	179b0 <processOptions@@Base+0xc78>
   179ac:	mov	r4, r3
   179b0:	ldrb	r2, [r4, #1]
   179b4:	add	r3, r4, #1
   179b8:	add	r4, r7, r4
   179bc:	cmp	r2, #32
   179c0:	mov	r2, r3
   179c4:	beq	179ac <processOptions@@Base+0xc74>
   179c8:	subs	r8, r8, r4
   179cc:	beq	179f4 <processOptions@@Base+0xcbc>
   179d0:	cmp	r6, #0
   179d4:	beq	179ec <processOptions@@Base+0xcb4>
   179d8:	mov	r3, #0
   179dc:	strb	r5, [sl, r3]
   179e0:	add	r3, r3, #1
   179e4:	cmp	r3, r6
   179e8:	bne	179dc <processOptions@@Base+0xca4>
   179ec:	mov	r7, r2
   179f0:	b	17914 <processOptions@@Base+0xbdc>
   179f4:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   179f8:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   179fc:	add	ip, ip, #1
   17a00:	str	ip, [fp, #-1636]	; 0xfffff99c
   17a04:	cmp	ip, r3
   17a08:	mov	r7, ip
   17a0c:	bcc	176fc <processOptions@@Base+0x9c4>
   17a10:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   17a14:	ldr	sp, [fp, #-1680]	; 0xfffff970
   17a18:	orr	r3, r3, #1
   17a1c:	strb	r3, [fp, #-1324]	; 0xfffffad4
   17a20:	b	170cc <processOptions@@Base+0x394>
   17a24:	ldr	r7, [fp, #-1676]	; 0xfffff974
   17a28:	b	1785c <processOptions@@Base+0xb24>
   17a2c:	ldr	r1, [fp, #-1644]	; 0xfffff994
   17a30:	mov	r3, #3
   17a34:	mov	r2, #4
   17a38:	cmp	r1, r3
   17a3c:	bhi	17780 <processOptions@@Base+0xa48>
   17a40:	mov	ip, r3
   17a44:	b	1779c <processOptions@@Base+0xa64>
   17a48:	ldr	r2, [r3, #12]
   17a4c:	cmp	r2, #0
   17a50:	beq	174fc <processOptions@@Base+0x7c4>
   17a54:	ldrb	r3, [r3, #10]
   17a58:	tst	r3, #2
   17a5c:	ldrne	r3, [r2]
   17a60:	moveq	r3, #1
   17a64:	addne	r3, r3, #1
   17a68:	str	r3, [r2]
   17a6c:	b	174fc <processOptions@@Base+0x7c4>
   17a70:	ldr	ip, [fp, #-1648]	; 0xfffff990
   17a74:	ldr	ip, [ip, #20]
   17a78:	mov	r0, ip
   17a7c:	str	ip, [fp, #-1628]	; 0xfffff9a4
   17a80:	bl	150e8 <strlen@plt>
   17a84:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17a88:	cmp	r3, #0
   17a8c:	beq	17158 <processOptions@@Base+0x420>
   17a90:	ldr	r5, [pc, #740]	; 17d7c <processOptions@@Base+0x1044>
   17a94:	mov	r4, #0
   17a98:	mov	r7, #95	; 0x5f
   17a9c:	add	r0, r0, #2
   17aa0:	add	r5, pc, r5
   17aa4:	str	r5, [fp, #-1640]	; 0xfffff998
   17aa8:	mov	r5, r4
   17aac:	str	r0, [fp, #-1636]	; 0xfffff99c
   17ab0:	ldr	r2, [fp, #-1588]	; 0xfffff9cc
   17ab4:	add	r6, r2, r4
   17ab8:	ldrb	r1, [r6, #10]
   17abc:	tst	r1, #8
   17ac0:	beq	17b90 <processOptions@@Base+0xe58>
   17ac4:	ldr	r9, [r2, r4]
   17ac8:	cmp	r9, #0
   17acc:	beq	17b90 <processOptions@@Base+0xe58>
   17ad0:	mov	r0, r9
   17ad4:	str	sp, [fp, #-1632]	; 0xfffff9a0
   17ad8:	bl	150e8 <strlen@plt>
   17adc:	ldr	ip, [fp, #-1636]	; 0xfffff99c
   17ae0:	mov	r2, #1
   17ae4:	mvn	r3, #0
   17ae8:	add	r1, ip, r0
   17aec:	ldr	ip, [fp, #-1640]	; 0xfffff998
   17af0:	add	r0, r1, #7
   17af4:	bic	r0, r0, #7
   17af8:	sub	sp, sp, r0
   17afc:	add	r8, sp, #24
   17b00:	str	ip, [sp]
   17b04:	ldr	ip, [fp, #-1628]	; 0xfffff9a4
   17b08:	mov	r0, r8
   17b0c:	str	r9, [sp, #8]
   17b10:	str	ip, [sp, #4]
   17b14:	bl	150f4 <__snprintf_chk@plt>
   17b18:	ldrb	r9, [sp, #24]
   17b1c:	cmp	r9, #0
   17b20:	addne	sl, sp, #25
   17b24:	beq	17b6c <processOptions@@Base+0xe34>
   17b28:	cmp	r9, #45	; 0x2d
   17b2c:	strbeq	r7, [sl, #-1]
   17b30:	beq	17b60 <processOptions@@Base+0xe28>
   17b34:	bl	15040 <__ctype_b_loc@plt>
   17b38:	sxth	r9, r9
   17b3c:	lsl	r3, r9, #1
   17b40:	ldr	r2, [r0]
   17b44:	ldrh	r3, [r2, r3]
   17b48:	tst	r3, #512	; 0x200
   17b4c:	beq	17b60 <processOptions@@Base+0xe28>
   17b50:	bl	14ecc <__ctype_toupper_loc@plt>
   17b54:	ldr	r3, [r0]
   17b58:	ldr	r3, [r3, r9, lsl #2]
   17b5c:	strb	r3, [sl, #-1]
   17b60:	ldrb	r9, [sl], #1
   17b64:	cmp	r9, #0
   17b68:	bne	17b28 <processOptions@@Base+0xdf0>
   17b6c:	mov	r0, r8
   17b70:	bl	1525c <getenv@plt>
   17b74:	subs	r2, r0, #0
   17b78:	beq	17b88 <processOptions@@Base+0xe50>
   17b7c:	ldrb	r3, [r2]
   17b80:	cmp	r3, #0
   17b84:	bne	17c7c <processOptions@@Base+0xf44>
   17b88:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17b8c:	ldr	sp, [fp, #-1632]	; 0xfffff9a0
   17b90:	add	r5, r5, #1
   17b94:	add	r4, r4, #28
   17b98:	cmp	r5, r3
   17b9c:	bcc	17ab0 <processOptions@@Base+0xd78>
   17ba0:	b	17158 <processOptions@@Base+0x420>
   17ba4:	ldr	r4, [r5, #20]
   17ba8:	mov	r0, r4
   17bac:	bl	1b0c4 <getBootParameters@@Base>
   17bb0:	subs	r5, r0, #0
   17bb4:	movne	r0, r5
   17bb8:	beq	17e00 <processOptions@@Base+0x10c8>
   17bbc:	sub	r2, fp, #1600	; 0x640
   17bc0:	mov	r1, #44	; 0x2c
   17bc4:	sub	r2, r2, #4
   17bc8:	mov	r4, #0
   17bcc:	sub	r2, r2, #8
   17bd0:	str	r4, [fp, #-1612]	; 0xfffff9b4
   17bd4:	bl	19958 <splitString@@Base>
   17bd8:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17bdc:	cmp	r3, r4
   17be0:	movne	r7, #44	; 0x2c
   17be4:	movne	r2, r4
   17be8:	mov	r6, r0
   17bec:	beq	17c60 <processOptions@@Base+0xf28>
   17bf0:	rsb	r2, r2, r2, lsl #3
   17bf4:	ldr	r1, [fp, #-1588]	; 0xfffff9cc
   17bf8:	add	r1, r1, r2, lsl #2
   17bfc:	ldrb	r2, [r1, #9]
   17c00:	cmp	r2, #0
   17c04:	beq	17c50 <processOptions@@Base+0xf18>
   17c08:	ldr	r0, [fp, #-1612]	; 0xfffff9b4
   17c0c:	cmp	r2, r0
   17c10:	bgt	17c50 <processOptions@@Base+0xf18>
   17c14:	sub	r2, r2, #-1073741823	; 0xc0000001
   17c18:	ldr	r2, [r6, r2, lsl #2]
   17c1c:	ldrb	r0, [r2]
   17c20:	cmp	r0, #0
   17c24:	beq	17c50 <processOptions@@Base+0xf18>
   17c28:	add	r3, r2, #1
   17c2c:	cmp	r0, #43	; 0x2b
   17c30:	strbeq	r7, [r3, #-1]
   17c34:	ldrb	r0, [r3], #1
   17c38:	cmp	r0, #0
   17c3c:	bne	17c2c <processOptions@@Base+0xef4>
   17c40:	sub	r0, fp, #1584	; 0x630
   17c44:	sub	r0, r0, #4
   17c48:	bl	167ec <cancelProcess@@Base+0xfc>
   17c4c:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17c50:	add	r4, r4, #1
   17c54:	cmp	r4, r3
   17c58:	mov	r2, r4
   17c5c:	bcc	17bf0 <processOptions@@Base+0xeb8>
   17c60:	mov	r0, r6
   17c64:	bl	19924 <deallocateStrings@@Base>
   17c68:	cmp	r5, #0
   17c6c:	beq	1713c <processOptions@@Base+0x404>
   17c70:	mov	r0, r5
   17c74:	bl	14d10 <free@plt>
   17c78:	b	1713c <processOptions@@Base+0x404>
   17c7c:	sub	r0, fp, #1584	; 0x630
   17c80:	mov	r1, r6
   17c84:	sub	r0, r0, #4
   17c88:	bl	167ec <cancelProcess@@Base+0xfc>
   17c8c:	b	17b88 <processOptions@@Base+0xe50>
   17c90:	mov	r4, r2
   17c94:	b	1782c <processOptions@@Base+0xaf4>
   17c98:	str	ip, [fp, #-1688]	; 0xfffff968
   17c9c:	bl	184dc <logMallocError@@Base>
   17ca0:	ldr	r3, [fp, #-1584]	; 0xfffff9d0
   17ca4:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17ca8:	b	16e64 <processOptions@@Base+0x12c>
   17cac:	mov	r2, #0
   17cb0:	str	ip, [fp, #-1688]	; 0xfffff968
   17cb4:	bl	16708 <cancelProcess@@Base+0x18>
   17cb8:	ldr	ip, [fp, #-1688]	; 0xfffff968
   17cbc:	b	174fc <processOptions@@Base+0x7c4>
   17cc0:	bl	151b4 <__errno_location@plt>
   17cc4:	ldr	r3, [r0]
   17cc8:	cmp	r3, #2
   17ccc:	bne	17590 <processOptions@@Base+0x858>
   17cd0:	b	172a4 <processOptions@@Base+0x56c>
   17cd4:	ldr	r2, [pc, #164]	; 17d80 <processOptions@@Base+0x1048>
   17cd8:	mov	r3, ip
   17cdc:	ldr	r0, [fp, #-1632]	; 0xfffff9a0
   17ce0:	mov	r1, #1
   17ce4:	add	r2, pc, r2
   17ce8:	bl	14ddc <__fprintf_chk@plt>
   17cec:	b	176a8 <processOptions@@Base+0x970>
   17cf0:	mov	r3, r2
   17cf4:	b	178a4 <processOptions@@Base+0xb6c>
   17cf8:	ldr	r1, [pc, #132]	; 17d84 <processOptions@@Base+0x104c>
   17cfc:	mov	r2, #5
   17d00:	mov	r0, r7
   17d04:	add	r1, pc, r1
   17d08:	bl	14fec <dcgettext@plt>
   17d0c:	mov	r2, r5
   17d10:	mov	r1, r0
   17d14:	mov	r0, #3
   17d18:	bl	183d0 <logMessage@@Base>
   17d1c:	ldrb	r3, [fp, #-1324]	; 0xfffffad4
   17d20:	orr	r3, r3, #2
   17d24:	strb	r3, [fp, #-1324]	; 0xfffffad4
   17d28:	b	17294 <processOptions@@Base+0x55c>
   17d2c:	andeq	r4, r2, r8, lsr #5
   17d30:	andeq	r0, r0, r8, asr #4
   17d34:	andeq	pc, r0, r4, lsr #6
   17d38:	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
   17d3c:	andeq	r0, r0, r4, asr #4
   17d40:	andeq	r0, r0, ip, asr #4
   17d44:	andeq	pc, r0, r4, lsr #2
   17d48:	andeq	pc, r0, r4, lsr #2
   17d4c:	andeq	pc, r0, ip, lsl r1	; <UNPREDICTABLE>
   17d50:	andeq	pc, r0, r4, lsl #2
   17d54:	andeq	r0, r1, r0, lsr #7
   17d58:			; <UNDEFINED> instruction: 0xfffff85c
   17d5c:	andeq	r0, r0, r4, ror r2
   17d60:	andeq	r0, r0, r0, ror #4
   17d64:	muleq	r0, r8, r2
   17d68:	andeq	lr, r0, r0, lsr fp
   17d6c:	andeq	r0, r0, r0, lsl #5
   17d70:	andeq	pc, r0, r0, ror r4	; <UNPREDICTABLE>
   17d74:	andeq	lr, r0, ip, asr #21
   17d78:	andeq	lr, r0, r4, lsl #22
   17d7c:	strdeq	lr, [r0], -ip
   17d80:	strdeq	lr, [r0], -r0
   17d84:	andeq	lr, r0, r0, lsr #9
   17d88:	andeq	lr, r0, r8, ror #7
   17d8c:	andeq	lr, r0, r8, lsr #7
   17d90:			; <UNDEFINED> instruction: 0x0000e3b8
   17d94:	ldr	r0, [pc, #-20]	; 17d88 <processOptions@@Base+0x1050>
   17d98:	mov	r1, #1
   17d9c:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   17da0:	mov	r2, #2
   17da4:	add	r0, pc, r0
   17da8:	bl	150c4 <fwrite@plt>
   17dac:	ldr	r1, [pc, #-40]	; 17d8c <processOptions@@Base+0x1054>
   17db0:	mov	r2, #5
   17db4:	mov	r0, #0
   17db8:	add	r1, pc, r1
   17dbc:	bl	14fec <dcgettext@plt>
   17dc0:	ldr	r1, [fp, #-1632]	; 0xfffff9a0
   17dc4:	bl	15250 <fputs@plt>
   17dc8:	ldr	r0, [pc, #-64]	; 17d90 <processOptions@@Base+0x1058>
   17dcc:	mov	r1, #1
   17dd0:	mov	r2, #5
   17dd4:	ldr	r3, [fp, #-1632]	; 0xfffff9a0
   17dd8:	add	r0, pc, r0
   17ddc:	bl	150c4 <fwrite@plt>
   17de0:	b	17690 <processOptions@@Base+0x958>
   17de4:	ldr	r7, [fp, #-1664]	; 0xfffff980
   17de8:	b	16f40 <processOptions@@Base+0x208>
   17dec:	bl	184dc <logMallocError@@Base>
   17df0:	b	1729c <processOptions@@Base+0x564>
   17df4:	str	r6, [fp, #-1656]	; 0xfffff988
   17df8:	mov	r4, r6
   17dfc:	b	17648 <processOptions@@Base+0x910>
   17e00:	mov	r0, r4
   17e04:	bl	1525c <getenv@plt>
   17e08:	cmp	r0, #0
   17e0c:	bne	17bbc <processOptions@@Base+0xe84>
   17e10:	b	1713c <processOptions@@Base+0x404>
   17e14:	ldr	r4, [r6]
   17e18:	ldr	r1, [sl]
   17e1c:	b	170a8 <processOptions@@Base+0x370>
   17e20:	bl	14fbc <__stack_chk_fail@plt>
   17e24:	push	{r4, r5, r6, r7, r8, r9, lr}
   17e28:	sub	sp, sp, #12
   17e2c:	ldr	ip, [r2]
   17e30:	add	r6, r0, r1
   17e34:	ldr	r3, [pc, #140]	; 17ec8 <processOptions@@Base+0x1190>
   17e38:	rsb	r1, r0, r6
   17e3c:	ldr	r5, [r2, #4]
   17e40:	mov	r9, r0
   17e44:	ldr	r7, [r2, #8]
   17e48:	add	r3, pc, r3
   17e4c:	str	ip, [sp, #4]
   17e50:	mov	r2, #1
   17e54:	str	r3, [sp]
   17e58:	mvn	r3, #0
   17e5c:	bl	150f4 <__snprintf_chk@plt>
   17e60:	add	r7, r5, r7
   17e64:	add	r0, r9, r0
   17e68:	cmp	r0, r6
   17e6c:	movcc	r4, r0
   17e70:	movcs	r4, r6
   17e74:	cmp	r5, r7
   17e78:	bcs	17ebc <processOptions@@Base+0x1184>
   17e7c:	ldr	r8, [pc, #72]	; 17ecc <processOptions@@Base+0x1194>
   17e80:	add	r8, pc, r8
   17e84:	str	r8, [sp]
   17e88:	mov	r0, r4
   17e8c:	ldrb	ip, [r5], #1
   17e90:	rsb	r1, r4, r6
   17e94:	mov	r2, #1
   17e98:	mvn	r3, #0
   17e9c:	str	ip, [sp, #4]
   17ea0:	bl	150f4 <__snprintf_chk@plt>
   17ea4:	add	r0, r4, r0
   17ea8:	cmp	r0, r6
   17eac:	movcc	r4, r0
   17eb0:	movcs	r4, r6
   17eb4:	cmp	r5, r7
   17eb8:	bne	17e84 <processOptions@@Base+0x114c>
   17ebc:	rsb	r0, r9, r4
   17ec0:	add	sp, sp, #12
   17ec4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17ec8:	andeq	lr, r0, ip, ror r3
   17ecc:	andeq	lr, r0, r8, asr #6
   17ed0:	push	{r4, r5, lr}
   17ed4:	mov	ip, r2
   17ed8:	ldr	r4, [r2, #4]
   17edc:	sub	sp, sp, #12
   17ee0:	ldr	lr, [ip]
   17ee4:	mvn	r3, #0
   17ee8:	mov	r2, #1
   17eec:	mov	r5, r1
   17ef0:	ldr	ip, [r4]
   17ef4:	str	lr, [sp]
   17ef8:	str	ip, [sp, #4]
   17efc:	bl	14d7c <__vsnprintf_chk@plt>
   17f00:	cmp	r0, #0
   17f04:	movlt	r0, #0
   17f08:	blt	17f14 <processOptions@@Base+0x11dc>
   17f0c:	cmp	r0, r5
   17f10:	movcs	r0, r5
   17f14:	add	sp, sp, #12
   17f18:	pop	{r4, r5, pc}

00017f1c <enableLogCategory@@Base>:
   17f1c:	push	{r3, r4, r5, r6, r7, lr}
   17f20:	mov	r5, r0
   17f24:	ldr	r6, [pc, #104]	; 17f94 <enableLogCategory@@Base+0x78>
   17f28:	ldr	r4, [pc, #104]	; 17f98 <enableLogCategory@@Base+0x7c>
   17f2c:	ldr	r7, [pc, #104]	; 17f9c <enableLogCategory@@Base+0x80>
   17f30:	add	r6, pc, r6
   17f34:	add	r4, pc, r4
   17f38:	add	r6, r6, #56	; 0x38
   17f3c:	add	r7, pc, r7
   17f40:	ldr	r1, [r4]
   17f44:	mov	r0, r5
   17f48:	cmp	r1, #0
   17f4c:	beq	17f5c <enableLogCategory@@Base+0x40>
   17f50:	bl	14cec <strcasecmp@plt>
   17f54:	cmp	r0, #0
   17f58:	beq	17f70 <enableLogCategory@@Base+0x54>
   17f5c:	add	r4, r4, #8
   17f60:	cmp	r4, r6
   17f64:	bcc	17f40 <enableLogCategory@@Base+0x24>
   17f68:	mov	r0, #0
   17f6c:	pop	{r3, r4, r5, r6, r7, pc}
   17f70:	ldr	r2, [pc, #40]	; 17fa0 <enableLogCategory@@Base+0x84>
   17f74:	mov	r3, #1
   17f78:	ldr	r1, [pc, #36]	; 17fa4 <enableLogCategory@@Base+0x88>
   17f7c:	mov	r0, r3
   17f80:	add	r1, pc, r1
   17f84:	ldr	r2, [r7, r2]
   17f88:	rsb	r4, r1, r4
   17f8c:	strb	r3, [r2, r4, asr #3]
   17f90:	pop	{r3, r4, r5, r6, r7, pc}
   17f94:	ldrdeq	r2, [r2], -r0
   17f98:	andeq	r2, r2, ip, asr #13
   17f9c:	strheq	r3, [r2], -ip
   17fa0:	andeq	r0, r0, r4, lsr r2
   17fa4:	andeq	r2, r2, r0, lsl #13

00017fa8 <setLogPrefix@@Base>:
   17fa8:	ldr	r3, [pc, #16]	; 17fc0 <setLogPrefix@@Base+0x18>
   17fac:	add	r3, pc, r3
   17fb0:	ldr	r2, [r3]
   17fb4:	str	r0, [r3]
   17fb8:	mov	r0, r2
   17fbc:	bx	lr
   17fc0:	andeq	r3, r2, r4, ror r3

00017fc4 <closeLogFile@@Base>:
   17fc4:	push	{r4, lr}
   17fc8:	ldr	r4, [pc, #28]	; 17fec <closeLogFile@@Base+0x28>
   17fcc:	add	r4, pc, r4
   17fd0:	ldr	r0, [r4, #4]
   17fd4:	cmp	r0, #0
   17fd8:	popeq	{r4, pc}
   17fdc:	bl	15124 <fclose@plt>
   17fe0:	mov	r3, #0
   17fe4:	str	r3, [r4, #4]
   17fe8:	pop	{r4, pc}
   17fec:	andeq	r3, r2, r4, asr r3

00017ff0 <openLogFile@@Base>:
   17ff0:	push	{r4, lr}
   17ff4:	mov	r4, r0
   17ff8:	bl	17fc4 <closeLogFile@@Base>
   17ffc:	ldr	r1, [pc, #24]	; 1801c <openLogFile@@Base+0x2c>
   18000:	mov	r0, r4
   18004:	add	r1, pc, r1
   18008:	bl	14e84 <fopen@plt>
   1800c:	ldr	r3, [pc, #12]	; 18020 <openLogFile@@Base+0x30>
   18010:	add	r3, pc, r3
   18014:	str	r0, [r3, #4]
   18018:	pop	{r4, pc}
   1801c:	andeq	lr, r0, ip, asr #3
   18020:	andeq	r3, r2, r0, lsl r3

00018024 <openSystemLog@@Base>:
   18024:	push	{r4, lr}
   18028:	ldr	r4, [pc, #44]	; 1805c <openSystemLog@@Base+0x38>
   1802c:	add	r4, pc, r4
   18030:	ldr	r3, [r4, #8]
   18034:	cmp	r3, #0
   18038:	popne	{r4, pc}
   1803c:	ldr	r0, [pc, #28]	; 18060 <openSystemLog@@Base+0x3c>
   18040:	mov	r1, #1
   18044:	mov	r2, #24
   18048:	add	r0, pc, r0
   1804c:	bl	15244 <openlog@plt>
   18050:	mov	r3, #1
   18054:	str	r3, [r4, #8]
   18058:	pop	{r4, pc}
   1805c:	strdeq	r3, [r2], -r4
   18060:	muleq	r0, r4, lr

00018064 <closeSystemLog@@Base>:
   18064:	push	{r4, lr}
   18068:	ldr	r4, [pc, #28]	; 1808c <closeSystemLog@@Base+0x28>
   1806c:	add	r4, pc, r4
   18070:	ldr	r3, [r4, #8]
   18074:	cmp	r3, #0
   18078:	popeq	{r4, pc}
   1807c:	bl	14e18 <closelog@plt>
   18080:	mov	r3, #0
   18084:	str	r3, [r4, #8]
   18088:	pop	{r4, pc}
   1808c:			; <UNDEFINED> instruction: 0x000232b4

00018090 <logData@@Base>:
   18090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18094:	sub	sp, sp, #4160	; 0x1040
   18098:	ldr	r4, [pc, #660]	; 18334 <logData@@Base+0x2a4>
   1809c:	sub	sp, sp, #12
   180a0:	ldr	r3, [pc, #656]	; 18338 <logData@@Base+0x2a8>
   180a4:	mov	r5, r0
   180a8:	add	r4, pc, r4
   180ac:	mov	r8, r1
   180b0:	ands	r0, r0, #128	; 0x80
   180b4:	add	r1, sp, #8192	; 0x2000
   180b8:	ldr	r3, [r4, r3]
   180bc:	mov	r9, r2
   180c0:	str	r3, [sp, #12]
   180c4:	ldr	r3, [r3]
   180c8:	str	r3, [r1, #-4028]	; 0xfffff044
   180cc:	beq	18108 <logData@@Base+0x78>
   180d0:	ldr	r3, [pc, #612]	; 1833c <logData@@Base+0x2ac>
   180d4:	and	r5, r5, #127	; 0x7f
   180d8:	ldr	r3, [r4, r3]
   180dc:	ldrb	r3, [r3, r5]
   180e0:	cmp	r3, #0
   180e4:	beq	1822c <logData@@Base+0x19c>
   180e8:	ldr	r2, [pc, #592]	; 18340 <logData@@Base+0x2b0>
   180ec:	ldr	r3, [pc, #592]	; 18344 <logData@@Base+0x2b4>
   180f0:	ldr	r2, [r4, r2]
   180f4:	add	r3, pc, r3
   180f8:	add	r5, r3, r5, lsl #3
   180fc:	ldr	r3, [r5, #4]
   18100:	ldrb	r5, [r2]
   18104:	b	1810c <logData@@Base+0x7c>
   18108:	mov	r3, r0
   1810c:	ldr	r1, [pc, #564]	; 18348 <logData@@Base+0x2b8>
   18110:	ldr	r2, [pc, #564]	; 1834c <logData@@Base+0x2bc>
   18114:	ldr	r1, [r4, r1]
   18118:	ldr	r2, [r4, r2]
   1811c:	ldrb	r7, [r1]
   18120:	ldrb	r6, [r2]
   18124:	cmp	r7, r5
   18128:	movlt	r7, #0
   1812c:	movge	r7, #1
   18130:	cmp	r6, r5
   18134:	movlt	r6, #0
   18138:	movge	r6, #1
   1813c:	orrs	r2, r6, r7
   18140:	beq	1822c <logData@@Base+0x19c>
   18144:	str	r3, [sp, #8]
   18148:	bl	151b4 <__errno_location@plt>
   1814c:	ldr	r3, [sp, #8]
   18150:	add	fp, sp, #72	; 0x48
   18154:	cmp	r3, #0
   18158:	ldr	ip, [r0]
   1815c:	str	r0, [sp, #16]
   18160:	str	ip, [sp, #20]
   18164:	beq	18250 <logData@@Base+0x1c0>
   18168:	sub	sl, fp, #4
   1816c:	ldr	r2, [pc, #476]	; 18350 <logData@@Base+0x2c0>
   18170:	mov	r1, #4096	; 0x1000
   18174:	str	r3, [sp, #4]
   18178:	add	r2, pc, r2
   1817c:	mov	r3, r1
   18180:	str	r2, [sp]
   18184:	mov	r0, sl
   18188:	mov	r2, #1
   1818c:	bl	150f4 <__snprintf_chk@plt>
   18190:	add	r3, sl, #4096	; 0x1000
   18194:	add	r0, sl, r0
   18198:	cmp	r0, r3
   1819c:	movcs	r0, r3
   181a0:	add	r1, sl, #4096	; 0x1000
   181a4:	mov	r2, r9
   181a8:	rsb	r1, r0, r1
   181ac:	blx	r8
   181b0:	cmp	r7, #0
   181b4:	bne	1825c <logData@@Base+0x1cc>
   181b8:	cmp	r6, #0
   181bc:	beq	18220 <logData@@Base+0x190>
   181c0:	ldr	r2, [pc, #396]	; 18354 <logData@@Base+0x2c4>
   181c4:	ldr	r3, [pc, #396]	; 18358 <logData@@Base+0x2c8>
   181c8:	add	r2, pc, r2
   181cc:	ldr	r0, [r2]
   181d0:	ldr	r3, [r4, r3]
   181d4:	cmp	r0, #0
   181d8:	ldr	r4, [r3]
   181dc:	beq	18200 <logData@@Base+0x170>
   181e0:	mov	r1, r4
   181e4:	bl	15250 <fputs@plt>
   181e8:	ldr	r0, [pc, #364]	; 1835c <logData@@Base+0x2cc>
   181ec:	mov	r1, #1
   181f0:	mov	r2, #2
   181f4:	add	r0, pc, r0
   181f8:	mov	r3, r4
   181fc:	bl	150c4 <fwrite@plt>
   18200:	mov	r1, r4
   18204:	mov	r0, sl
   18208:	bl	15250 <fputs@plt>
   1820c:	mov	r0, #10
   18210:	mov	r1, r4
   18214:	bl	150b8 <fputc@plt>
   18218:	mov	r0, r4
   1821c:	bl	151fc <fflush@plt>
   18220:	ldr	ip, [sp, #20]
   18224:	ldr	r1, [sp, #16]
   18228:	str	ip, [r1]
   1822c:	ldr	ip, [sp, #12]
   18230:	add	r3, sp, #8192	; 0x2000
   18234:	ldr	r2, [r3, #-4028]	; 0xfffff044
   18238:	ldr	r3, [ip]
   1823c:	cmp	r2, r3
   18240:	bne	18330 <logData@@Base+0x2a0>
   18244:	add	sp, sp, #4160	; 0x1040
   18248:	add	sp, sp, #12
   1824c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18250:	add	sl, sp, #68	; 0x44
   18254:	mov	r0, sl
   18258:	b	181a0 <logData@@Base+0x110>
   1825c:	ldr	r7, [pc, #252]	; 18360 <logData@@Base+0x2d0>
   18260:	add	r7, pc, r7
   18264:	ldr	r3, [r7, #4]
   18268:	cmp	r3, #0
   1826c:	beq	18300 <logData@@Base+0x270>
   18270:	sub	r8, fp, #44	; 0x2c
   18274:	sub	fp, fp, #36	; 0x24
   18278:	mov	r0, r8
   1827c:	bl	1a498 <getCurrentTime@@Base>
   18280:	add	ip, sp, #4160	; 0x1040
   18284:	add	ip, ip, #8
   18288:	movw	r3, #61396	; 0xefd4
   1828c:	ldr	r2, [pc, #208]	; 18364 <logData@@Base+0x2d4>
   18290:	movt	r3, #65535	; 0xffff
   18294:	mov	r1, #32
   18298:	mov	r0, fp
   1829c:	ldr	r3, [ip, r3]
   182a0:	add	r2, pc, r2
   182a4:	bl	1a654 <formatSeconds@@Base>
   182a8:	ldr	r2, [r8, #4]
   182ac:	movw	lr, #56963	; 0xde83
   182b0:	movt	lr, #17179	; 0x431b
   182b4:	smull	r1, lr, lr, r2
   182b8:	asr	r8, r2, #31
   182bc:	ldr	r2, [pc, #164]	; 18368 <logData@@Base+0x2d8>
   182c0:	mov	r1, #1
   182c4:	add	r2, pc, r2
   182c8:	rsb	lr, r8, lr, asr #18
   182cc:	mov	r3, r0
   182d0:	ldr	r0, [r7, #4]
   182d4:	str	lr, [sp, #4]
   182d8:	str	fp, [sp]
   182dc:	bl	14ddc <__fprintf_chk@plt>
   182e0:	ldr	r1, [r7, #4]
   182e4:	mov	r0, sl
   182e8:	bl	15250 <fputs@plt>
   182ec:	mov	r0, #10
   182f0:	ldr	r1, [r7, #4]
   182f4:	bl	150b8 <fputc@plt>
   182f8:	ldr	r0, [r7, #4]
   182fc:	bl	151fc <fflush@plt>
   18300:	ldr	r3, [pc, #100]	; 1836c <logData@@Base+0x2dc>
   18304:	add	r3, pc, r3
   18308:	ldr	r3, [r3, #8]
   1830c:	cmp	r3, #0
   18310:	beq	181b8 <logData@@Base+0x128>
   18314:	ldr	r2, [pc, #84]	; 18370 <logData@@Base+0x2e0>
   18318:	mov	r0, r5
   1831c:	mov	r1, #1
   18320:	mov	r3, sl
   18324:	add	r2, pc, r2
   18328:	bl	14fa4 <__syslog_chk@plt>
   1832c:	b	181b8 <logData@@Base+0x128>
   18330:	bl	14fbc <__stack_chk_fail@plt>
   18334:	andeq	r2, r2, r0, asr pc
   18338:	andeq	r0, r0, r8, asr #4
   1833c:	andeq	r0, r0, r4, lsr r2
   18340:	andeq	r0, r0, ip, lsr r2
   18344:	andeq	r2, r2, ip, lsl #10
   18348:	andeq	r0, r0, ip, ror r2
   1834c:	andeq	r0, r0, r0, asr #4
   18350:	andeq	lr, r0, ip, asr r0
   18354:	andeq	r3, r2, r8, asr r1
   18358:	andeq	r0, r0, r0, ror r2
   1835c:	andeq	lr, r0, r8
   18360:	andeq	r3, r2, r0, asr #1
   18364:	andeq	sp, r0, ip, lsr pc
   18368:	andeq	sp, r0, ip, lsr #30
   1836c:	andeq	r3, r2, ip, lsl r0
   18370:	andeq	r0, r1, r0, asr #13

00018374 <vlogMessage@@Base>:
   18374:	ldr	r3, [pc, #72]	; 183c4 <vlogMessage@@Base+0x50>
   18378:	ldr	ip, [pc, #72]	; 183c8 <vlogMessage@@Base+0x54>
   1837c:	add	r3, pc, r3
   18380:	push	{r4, lr}
   18384:	sub	sp, sp, #16
   18388:	ldr	r4, [r3, ip]
   1838c:	stmib	sp, {r1, r2}
   18390:	add	r2, sp, #4
   18394:	ldr	r1, [pc, #48]	; 183cc <vlogMessage@@Base+0x58>
   18398:	ldr	r3, [r4]
   1839c:	add	r1, pc, r1
   183a0:	str	r3, [sp, #12]
   183a4:	bl	18090 <logData@@Base>
   183a8:	ldr	r2, [sp, #12]
   183ac:	ldr	r3, [r4]
   183b0:	cmp	r2, r3
   183b4:	bne	183c0 <vlogMessage@@Base+0x4c>
   183b8:	add	sp, sp, #16
   183bc:	pop	{r4, pc}
   183c0:	bl	14fbc <__stack_chk_fail@plt>
   183c4:	andeq	r2, r2, ip, ror ip
   183c8:	andeq	r0, r0, r8, asr #4
   183cc:			; <UNDEFINED> instruction: 0xfffffb2c

000183d0 <logMessage@@Base>:
   183d0:	push	{r1, r2, r3}
   183d4:	ldr	r3, [pc, #84]	; 18430 <logMessage@@Base+0x60>
   183d8:	push	{r4, lr}
   183dc:	add	r3, pc, r3
   183e0:	ldr	lr, [pc, #76]	; 18434 <logMessage@@Base+0x64>
   183e4:	sub	sp, sp, #12
   183e8:	add	r2, sp, #8
   183ec:	add	ip, sp, #24
   183f0:	ldr	r1, [sp, #20]
   183f4:	ldr	r4, [r3, lr]
   183f8:	str	ip, [r2, #-8]!
   183fc:	mov	r2, sp
   18400:	ldr	r3, [r4]
   18404:	str	r3, [sp, #4]
   18408:	bl	18374 <vlogMessage@@Base>
   1840c:	ldr	r2, [sp, #4]
   18410:	ldr	r3, [r4]
   18414:	cmp	r2, r3
   18418:	bne	1842c <logMessage@@Base+0x5c>
   1841c:	add	sp, sp, #12
   18420:	pop	{r4, lr}
   18424:	add	sp, sp, #12
   18428:	bx	lr
   1842c:	bl	14fbc <__stack_chk_fail@plt>
   18430:	andeq	r2, r2, ip, lsl ip
   18434:	andeq	r0, r0, r8, asr #4

00018438 <logBytes@@Base>:
   18438:	ldr	ip, [pc, #76]	; 1848c <logBytes@@Base+0x54>
   1843c:	push	{r4, lr}
   18440:	add	ip, pc, ip
   18444:	ldr	lr, [pc, #68]	; 18490 <logBytes@@Base+0x58>
   18448:	sub	sp, sp, #16
   1844c:	ldr	r4, [ip, lr]
   18450:	stm	sp, {r1, r2}
   18454:	mov	r2, sp
   18458:	ldr	r1, [pc, #52]	; 18494 <logBytes@@Base+0x5c>
   1845c:	ldr	ip, [r4]
   18460:	add	r1, pc, r1
   18464:	str	r3, [sp, #8]
   18468:	str	ip, [sp, #12]
   1846c:	bl	18090 <logData@@Base>
   18470:	ldr	r2, [sp, #12]
   18474:	ldr	r3, [r4]
   18478:	cmp	r2, r3
   1847c:	bne	18488 <logBytes@@Base+0x50>
   18480:	add	sp, sp, #16
   18484:	pop	{r4, pc}
   18488:	bl	14fbc <__stack_chk_fail@plt>
   1848c:			; <UNDEFINED> instruction: 0x00022bb8
   18490:	andeq	r0, r0, r8, asr #4
   18494:			; <UNDEFINED> instruction: 0xfffff9bc

00018498 <logSystemError@@Base>:
   18498:	push	{r4, r5, lr}
   1849c:	sub	sp, sp, #12
   184a0:	mov	r5, r0
   184a4:	bl	151b4 <__errno_location@plt>
   184a8:	ldr	r4, [r0]
   184ac:	mov	r0, r4
   184b0:	bl	14d64 <strerror@plt>
   184b4:	ldr	r1, [pc, #28]	; 184d8 <logSystemError@@Base+0x40>
   184b8:	mov	r3, r4
   184bc:	mov	r2, r5
   184c0:	add	r1, pc, r1
   184c4:	str	r0, [sp]
   184c8:	mov	r0, #3
   184cc:	bl	183d0 <logMessage@@Base>
   184d0:	add	sp, sp, #12
   184d4:	pop	{r4, r5, pc}
   184d8:	andeq	sp, r0, r0, asr #26

000184dc <logMallocError@@Base>:
   184dc:	ldr	r0, [pc, #4]	; 184e8 <logMallocError@@Base+0xc>
   184e0:	add	r0, pc, r0
   184e4:	b	18498 <logSystemError@@Base>
   184e8:	andeq	sp, r0, r4, lsr sp
   184ec:	ldr	r3, [pc, #196]	; 185b8 <logMallocError@@Base+0xdc>
   184f0:	push	{r4, r5, r6, r7, lr}
   184f4:	add	r3, pc, r3
   184f8:	mov	r6, r0
   184fc:	ldr	r0, [pc, #184]	; 185bc <logMallocError@@Base+0xe0>
   18500:	mov	r5, r1
   18504:	mov	r1, r3
   18508:	sub	sp, sp, #28
   1850c:	mov	r3, #0
   18510:	ldr	r7, [r1, r0]
   18514:	add	r4, sp, #24
   18518:	str	r3, [sp, #4]
   1851c:	str	r3, [sp, #8]
   18520:	ldr	r1, [r7]
   18524:	str	r3, [sp, #12]
   18528:	str	r3, [sp, #16]
   1852c:	str	r1, [sp, #20]
   18530:	strh	r2, [r4, #-20]!	; 0xffffffec
   18534:	b	18548 <logMallocError@@Base+0x6c>
   18538:	bl	151b4 <__errno_location@plt>
   1853c:	ldr	r3, [r0]
   18540:	cmp	r3, #4
   18544:	bne	18580 <logMallocError@@Base+0xa4>
   18548:	mov	r0, r6
   1854c:	mov	r1, r5
   18550:	mov	r2, r4
   18554:	bl	14e24 <fcntl@plt>
   18558:	cmn	r0, #1
   1855c:	beq	18538 <logMallocError@@Base+0x5c>
   18560:	mov	r3, #1
   18564:	ldr	r2, [sp, #20]
   18568:	mov	r0, r3
   1856c:	ldr	r3, [r7]
   18570:	cmp	r2, r3
   18574:	bne	185b4 <logMallocError@@Base+0xd8>
   18578:	add	sp, sp, #28
   1857c:	pop	{r4, r5, r6, r7, pc}
   18580:	cmp	r3, #13
   18584:	moveq	r2, #11
   18588:	moveq	r3, #0
   1858c:	streq	r2, [r0]
   18590:	beq	18564 <logMallocError@@Base+0x88>
   18594:	cmp	r3, #11
   18598:	moveq	r3, #0
   1859c:	beq	18564 <logMallocError@@Base+0x88>
   185a0:	ldr	r0, [pc, #24]	; 185c0 <logMallocError@@Base+0xe4>
   185a4:	add	r0, pc, r0
   185a8:	bl	18498 <logSystemError@@Base>
   185ac:	mov	r3, #0
   185b0:	b	18564 <logMallocError@@Base+0x88>
   185b4:	bl	14fbc <__stack_chk_fail@plt>
   185b8:	andeq	r2, r2, r4, lsl #22
   185bc:	andeq	r0, r0, r8, asr #4
   185c0:	andeq	sp, r0, r4, ror sp

000185c4 <isPathDelimiter@@Base>:
   185c4:	subs	r3, r0, #47	; 0x2f
   185c8:	rsbs	r0, r3, #0
   185cc:	adcs	r0, r0, r3
   185d0:	bx	lr

000185d4 <isAbsolutePath@@Base>:
   185d4:	push	{r3, lr}
   185d8:	ldrb	r0, [r0]
   185dc:	bl	185c4 <isPathDelimiter@@Base>
   185e0:	adds	r0, r0, #0
   185e4:	movne	r0, #1
   185e8:	pop	{r3, pc}

000185ec <getPathDirectory@@Base>:
   185ec:	push	{r4, r5, r6, r7, r8, lr}
   185f0:	mov	r8, r0
   185f4:	bl	150e8 <strlen@plt>
   185f8:	subs	r7, r0, #0
   185fc:	addne	r6, r8, r7
   18600:	movne	r5, r7
   18604:	bne	18618 <getPathDirectory@@Base+0x2c>
   18608:	b	18658 <getPathDirectory@@Base+0x6c>
   1860c:	cmp	r4, #0
   18610:	mov	r5, r4
   18614:	beq	18688 <getPathDirectory@@Base+0x9c>
   18618:	ldrb	r0, [r6, #-1]!
   1861c:	sub	r4, r5, #1
   18620:	bl	185c4 <isPathDelimiter@@Base>
   18624:	cmp	r0, #0
   18628:	bne	1860c <getPathDirectory@@Base+0x20>
   1862c:	add	r6, r8, r5
   18630:	b	18648 <getPathDirectory@@Base+0x5c>
   18634:	ldrb	r0, [r6, #-2]
   18638:	sub	r6, r6, #1
   1863c:	bl	185c4 <isPathDelimiter@@Base>
   18640:	cmp	r0, #0
   18644:	bne	186b4 <getPathDirectory@@Base+0xc8>
   18648:	cmp	r4, #0
   1864c:	mov	r5, r4
   18650:	sub	r4, r4, #1
   18654:	bne	18634 <getPathDirectory@@Base+0x48>
   18658:	mov	r0, #2
   1865c:	ldr	r8, [pc, #124]	; 186e0 <getPathDirectory@@Base+0xf4>
   18660:	bl	150dc <malloc@plt>
   18664:	mov	r7, #1
   18668:	add	r8, pc, r8
   1866c:	subs	r4, r0, #0
   18670:	bne	18698 <getPathDirectory@@Base+0xac>
   18674:	bl	184dc <logMallocError@@Base>
   18678:	mov	r0, r4
   1867c:	pop	{r4, r5, r6, r7, r8, pc}
   18680:	mov	r5, r6
   18684:	mov	r7, r5
   18688:	add	r0, r7, #1
   1868c:	bl	150dc <malloc@plt>
   18690:	subs	r4, r0, #0
   18694:	beq	18674 <getPathDirectory@@Base+0x88>
   18698:	mov	r1, r8
   1869c:	mov	r2, r7
   186a0:	bl	150d0 <memcpy@plt>
   186a4:	mov	r3, #0
   186a8:	mov	r0, r4
   186ac:	strb	r3, [r4, r7]
   186b0:	pop	{r4, r5, r6, r7, r8, pc}
   186b4:	add	r7, r8, r5
   186b8:	mov	r6, r5
   186bc:	ldrb	r0, [r7, #-1]!
   186c0:	sub	r4, r6, #1
   186c4:	bl	185c4 <isPathDelimiter@@Base>
   186c8:	cmp	r0, #0
   186cc:	beq	18680 <getPathDirectory@@Base+0x94>
   186d0:	cmp	r4, #0
   186d4:	mov	r6, r4
   186d8:	bne	186bc <getPathDirectory@@Base+0xd0>
   186dc:	b	18684 <getPathDirectory@@Base+0x98>
   186e0:	andeq	sp, r0, ip, ror r7

000186e4 <locatePathName@@Base>:
   186e4:	push	{r4, r5, r6, lr}
   186e8:	mov	r6, r0
   186ec:	bl	150e8 <strlen@plt>
   186f0:	add	r4, r6, r0
   186f4:	cmp	r6, r4
   186f8:	beq	18724 <locatePathName@@Base+0x40>
   186fc:	mov	r5, r4
   18700:	b	1870c <locatePathName@@Base+0x28>
   18704:	cmp	r6, r5
   18708:	beq	1872c <locatePathName@@Base+0x48>
   1870c:	mov	r4, r5
   18710:	sub	r5, r5, #1
   18714:	ldrb	r0, [r4, #-1]
   18718:	bl	185c4 <isPathDelimiter@@Base>
   1871c:	cmp	r0, #0
   18720:	beq	18704 <locatePathName@@Base+0x20>
   18724:	mov	r0, r4
   18728:	pop	{r4, r5, r6, pc}
   1872c:	mov	r4, r6
   18730:	mov	r0, r4
   18734:	pop	{r4, r5, r6, pc}

00018738 <locatePathExtension@@Base>:
   18738:	push	{r3, lr}
   1873c:	bl	186e4 <locatePathName@@Base>
   18740:	mov	r1, #46	; 0x2e
   18744:	pop	{r3, lr}
   18748:	b	1522c <strrchr@plt>

0001874c <isExplicitPath@@Base>:
   1874c:	push	{r4, lr}
   18750:	mov	r4, r0
   18754:	bl	186e4 <locatePathName@@Base>
   18758:	subs	r0, r4, r0
   1875c:	movne	r0, #1
   18760:	pop	{r4, pc}

00018764 <makePath@@Base>:
   18764:	ldr	r3, [pc, #192]	; 1882c <makePath@@Base+0xc8>
   18768:	ldr	r2, [pc, #192]	; 18830 <makePath@@Base+0xcc>
   1876c:	add	r3, pc, r3
   18770:	push	{r4, r5, lr}
   18774:	sub	sp, sp, #20
   18778:	ldr	r4, [r3, r2]
   1877c:	mov	r5, r0
   18780:	mov	r0, r1
   18784:	str	r1, [sp, #8]
   18788:	ldr	r3, [r4]
   1878c:	str	r3, [sp, #12]
   18790:	bl	185d4 <isAbsolutePath@@Base>
   18794:	cmp	r0, #0
   18798:	bne	187b0 <makePath@@Base+0x4c>
   1879c:	cmp	r5, #0
   187a0:	beq	187b0 <makePath@@Base+0x4c>
   187a4:	ldrb	r3, [r5]
   187a8:	cmp	r3, #0
   187ac:	bne	187d8 <makePath@@Base+0x74>
   187b0:	mov	r1, #1
   187b4:	mov	r3, #8
   187b8:	add	r0, sp, r3
   187bc:	bl	19a6c <joinStrings@@Base>
   187c0:	ldr	r2, [sp, #12]
   187c4:	ldr	r3, [r4]
   187c8:	cmp	r2, r3
   187cc:	bne	18824 <makePath@@Base+0xc0>
   187d0:	add	sp, sp, #20
   187d4:	pop	{r4, r5, pc}
   187d8:	mov	r0, r5
   187dc:	bl	150e8 <strlen@plt>
   187e0:	add	r0, r5, r0
   187e4:	ldrb	r0, [r0, #-1]
   187e8:	bl	185c4 <isPathDelimiter@@Base>
   187ec:	cmp	r0, #0
   187f0:	movne	r1, #2
   187f4:	movne	r3, #1
   187f8:	bne	18810 <makePath@@Base+0xac>
   187fc:	ldr	r2, [pc, #48]	; 18834 <makePath@@Base+0xd0>
   18800:	mov	r3, r0
   18804:	mov	r1, #3
   18808:	add	r2, pc, r2
   1880c:	str	r2, [sp, #4]
   18810:	lsl	r3, r3, #2
   18814:	add	r0, sp, #16
   18818:	add	r2, r0, r3
   1881c:	str	r5, [r2, #-16]
   18820:	b	187b8 <makePath@@Base+0x54>
   18824:	bl	14fbc <__stack_chk_fail@plt>
   18828:	bl	15208 <_Unwind_Resume@plt>
   1882c:	andeq	r2, r2, ip, lsl #17
   18830:	andeq	r0, r0, r8, asr #4
   18834:	andeq	sp, r0, r8, lsr #22

00018838 <ensureFileExtension@@Base>:
   18838:	ldr	r3, [pc, #144]	; 188d0 <ensureFileExtension@@Base+0x98>
   1883c:	ldr	r2, [pc, #144]	; 188d4 <ensureFileExtension@@Base+0x9c>
   18840:	add	r3, pc, r3
   18844:	push	{r4, r5, r6, r7, lr}
   18848:	sub	sp, sp, #20
   1884c:	ldr	r4, [r3, r2]
   18850:	mov	r5, r1
   18854:	mov	r6, r0
   18858:	ldr	r3, [r4]
   1885c:	str	r3, [sp, #12]
   18860:	bl	150e8 <strlen@plt>
   18864:	mov	r7, r0
   18868:	mov	r0, r5
   1886c:	bl	150e8 <strlen@plt>
   18870:	str	r6, [sp, #4]
   18874:	cmp	r0, #0
   18878:	beq	188a8 <ensureFileExtension@@Base+0x70>
   1887c:	cmp	r7, r0
   18880:	bcs	18890 <ensureFileExtension@@Base+0x58>
   18884:	str	r5, [sp, #8]
   18888:	mov	r1, #2
   1888c:	b	188ac <ensureFileExtension@@Base+0x74>
   18890:	rsb	r0, r0, r7
   18894:	mov	r1, r5
   18898:	add	r0, r6, r0
   1889c:	bl	1519c <strcmp@plt>
   188a0:	cmp	r0, #0
   188a4:	bne	18884 <ensureFileExtension@@Base+0x4c>
   188a8:	mov	r1, #1
   188ac:	add	r0, sp, #4
   188b0:	bl	19a6c <joinStrings@@Base>
   188b4:	ldr	r2, [sp, #12]
   188b8:	ldr	r3, [r4]
   188bc:	cmp	r2, r3
   188c0:	bne	188cc <ensureFileExtension@@Base+0x94>
   188c4:	add	sp, sp, #20
   188c8:	pop	{r4, r5, r6, r7, pc}
   188cc:	bl	14fbc <__stack_chk_fail@plt>
   188d0:			; <UNDEFINED> instruction: 0x000227b8
   188d4:	andeq	r0, r0, r8, asr #4

000188d8 <makeFilePath@@Base>:
   188d8:	push	{r3, r4, r5, lr}
   188dc:	mov	r5, r0
   188e0:	mov	r0, r1
   188e4:	mov	r1, r2
   188e8:	bl	18838 <ensureFileExtension@@Base>
   188ec:	subs	r4, r0, #0
   188f0:	beq	18914 <makeFilePath@@Base+0x3c>
   188f4:	mov	r0, r5
   188f8:	mov	r1, r4
   188fc:	bl	18764 <makePath@@Base>
   18900:	mov	r5, r0
   18904:	mov	r0, r4
   18908:	bl	14d10 <free@plt>
   1890c:	mov	r0, r5
   18910:	pop	{r3, r4, r5, pc}
   18914:	mov	r5, r4
   18918:	b	1890c <makeFilePath@@Base+0x34>

0001891c <testPath@@Base>:
   1891c:	push	{r3, lr}
   18920:	mov	r1, #0
   18924:	bl	14fe0 <access@plt>
   18928:	adds	r0, r0, #1
   1892c:	movne	r0, #1
   18930:	pop	{r3, pc}

00018934 <testFilePath@@Base>:
   18934:	ldr	r3, [pc, #120]	; 189b4 <testFilePath@@Base+0x80>
   18938:	mov	r1, r0
   1893c:	ldr	ip, [pc, #116]	; 189b8 <testFilePath@@Base+0x84>
   18940:	mov	r0, #3
   18944:	add	r3, pc, r3
   18948:	push	{r4, lr}
   1894c:	sub	sp, sp, #96	; 0x60
   18950:	ldr	r4, [r3, ip]
   18954:	mov	r2, sp
   18958:	ldr	r3, [r4]
   1895c:	str	r3, [sp, #92]	; 0x5c
   18960:	bl	15154 <__xstat@plt>
   18964:	cmn	r0, #1
   18968:	moveq	r3, #0
   1896c:	beq	18994 <testFilePath@@Base+0x60>
   18970:	ldr	r3, [sp, #16]
   18974:	and	r3, r3, #61440	; 0xf000
   18978:	cmp	r3, #32768	; 0x8000
   1897c:	moveq	r3, #1
   18980:	beq	18994 <testFilePath@@Base+0x60>
   18984:	bl	151b4 <__errno_location@plt>
   18988:	mov	r3, #0
   1898c:	mov	r2, #17
   18990:	str	r2, [r0]
   18994:	ldr	r2, [sp, #92]	; 0x5c
   18998:	mov	r0, r3
   1899c:	ldr	r3, [r4]
   189a0:	cmp	r2, r3
   189a4:	bne	189b0 <testFilePath@@Base+0x7c>
   189a8:	add	sp, sp, #96	; 0x60
   189ac:	pop	{r4, pc}
   189b0:	bl	14fbc <__stack_chk_fail@plt>
   189b4:			; <UNDEFINED> instruction: 0x000226b4
   189b8:	andeq	r0, r0, r8, asr #4

000189bc <testProgramPath@@Base>:
   189bc:	push	{r3, lr}
   189c0:	mov	r1, #1
   189c4:	bl	14fe0 <access@plt>
   189c8:	adds	r0, r0, #1
   189cc:	movne	r0, #1
   189d0:	pop	{r3, pc}

000189d4 <testDirectoryPath@@Base>:
   189d4:	ldr	r3, [pc, #120]	; 18a54 <testDirectoryPath@@Base+0x80>
   189d8:	mov	r1, r0
   189dc:	ldr	ip, [pc, #116]	; 18a58 <testDirectoryPath@@Base+0x84>
   189e0:	mov	r0, #3
   189e4:	add	r3, pc, r3
   189e8:	push	{r4, lr}
   189ec:	sub	sp, sp, #96	; 0x60
   189f0:	ldr	r4, [r3, ip]
   189f4:	mov	r2, sp
   189f8:	ldr	r3, [r4]
   189fc:	str	r3, [sp, #92]	; 0x5c
   18a00:	bl	15154 <__xstat@plt>
   18a04:	cmn	r0, #1
   18a08:	moveq	r3, #0
   18a0c:	beq	18a34 <testDirectoryPath@@Base+0x60>
   18a10:	ldr	r3, [sp, #16]
   18a14:	and	r3, r3, #61440	; 0xf000
   18a18:	cmp	r3, #16384	; 0x4000
   18a1c:	moveq	r3, #1
   18a20:	beq	18a34 <testDirectoryPath@@Base+0x60>
   18a24:	bl	151b4 <__errno_location@plt>
   18a28:	mov	r3, #0
   18a2c:	mov	r2, #17
   18a30:	str	r2, [r0]
   18a34:	ldr	r2, [sp, #92]	; 0x5c
   18a38:	mov	r0, r3
   18a3c:	ldr	r3, [r4]
   18a40:	cmp	r2, r3
   18a44:	bne	18a50 <testDirectoryPath@@Base+0x7c>
   18a48:	add	sp, sp, #96	; 0x60
   18a4c:	pop	{r4, pc}
   18a50:	bl	14fbc <__stack_chk_fail@plt>
   18a54:	andeq	r2, r2, r4, lsl r6
   18a58:	andeq	r0, r0, r8, asr #4

00018a5c <createDirectory@@Base>:
   18a5c:	push	{r4, r5, lr}
   18a60:	movw	r1, #493	; 0x1ed
   18a64:	sub	sp, sp, #12
   18a68:	mov	r4, r0
   18a6c:	bl	14ff8 <mkdir@plt>
   18a70:	cmn	r0, #1
   18a74:	movne	r0, #1
   18a78:	beq	18a84 <createDirectory@@Base+0x28>
   18a7c:	add	sp, sp, #12
   18a80:	pop	{r4, r5, pc}
   18a84:	ldr	r1, [pc, #68]	; 18ad0 <createDirectory@@Base+0x74>
   18a88:	mov	r2, #5
   18a8c:	mov	r0, #0
   18a90:	add	r1, pc, r1
   18a94:	bl	14fec <dcgettext@plt>
   18a98:	mov	r5, r0
   18a9c:	bl	151b4 <__errno_location@plt>
   18aa0:	ldr	r0, [r0]
   18aa4:	bl	14d64 <strerror@plt>
   18aa8:	ldr	r1, [pc, #36]	; 18ad4 <createDirectory@@Base+0x78>
   18aac:	mov	r2, r5
   18ab0:	mov	r3, r4
   18ab4:	add	r1, pc, r1
   18ab8:	str	r0, [sp]
   18abc:	mov	r0, #4
   18ac0:	bl	183d0 <logMessage@@Base>
   18ac4:	mov	r0, #0
   18ac8:	add	sp, sp, #12
   18acc:	pop	{r4, r5, pc}
   18ad0:	andeq	sp, r0, r4, lsr #17
   18ad4:	andeq	sp, r0, r0, ror #10

00018ad8 <ensureDirectory@@Base>:
   18ad8:	push	{r3, r4, r5, r6, r7, lr}
   18adc:	mov	r5, r0
   18ae0:	bl	189d4 <testDirectoryPath@@Base>
   18ae4:	subs	r4, r0, #0
   18ae8:	movne	r4, #1
   18aec:	bne	18b24 <ensureDirectory@@Base+0x4c>
   18af0:	bl	151b4 <__errno_location@plt>
   18af4:	ldr	r0, [r0]
   18af8:	cmp	r0, #17
   18afc:	beq	18b80 <ensureDirectory@@Base+0xa8>
   18b00:	cmp	r0, #2
   18b04:	beq	18b2c <ensureDirectory@@Base+0x54>
   18b08:	bl	14d64 <strerror@plt>
   18b0c:	ldr	r1, [pc, #132]	; 18b98 <ensureDirectory@@Base+0xc0>
   18b10:	mov	r2, r5
   18b14:	add	r1, pc, r1
   18b18:	mov	r3, r0
   18b1c:	mov	r0, #3
   18b20:	bl	183d0 <logMessage@@Base>
   18b24:	mov	r0, r4
   18b28:	pop	{r3, r4, r5, r6, r7, pc}
   18b2c:	mov	r0, r5
   18b30:	bl	185ec <getPathDirectory@@Base>
   18b34:	subs	r6, r0, #0
   18b38:	beq	18b24 <ensureDirectory@@Base+0x4c>
   18b3c:	bl	18ad8 <ensureDirectory@@Base>
   18b40:	mov	r7, r0
   18b44:	mov	r0, r6
   18b48:	bl	14d10 <free@plt>
   18b4c:	cmp	r7, #0
   18b50:	beq	18b24 <ensureDirectory@@Base+0x4c>
   18b54:	mov	r0, r5
   18b58:	bl	18a5c <createDirectory@@Base>
   18b5c:	cmp	r0, #0
   18b60:	beq	18b24 <ensureDirectory@@Base+0x4c>
   18b64:	ldr	r1, [pc, #48]	; 18b9c <ensureDirectory@@Base+0xc4>
   18b68:	mov	r2, r5
   18b6c:	mov	r0, #5
   18b70:	mov	r4, #1
   18b74:	add	r1, pc, r1
   18b78:	bl	183d0 <logMessage@@Base>
   18b7c:	b	18b24 <ensureDirectory@@Base+0x4c>
   18b80:	ldr	r1, [pc, #24]	; 18ba0 <ensureDirectory@@Base+0xc8>
   18b84:	mov	r2, r5
   18b88:	mov	r0, #3
   18b8c:	add	r1, pc, r1
   18b90:	bl	183d0 <logMessage@@Base>
   18b94:	b	18b24 <ensureDirectory@@Base+0x4c>
   18b98:	andeq	sp, r0, ip, asr #16
   18b9c:	andeq	sp, r0, ip, lsl #16
   18ba0:	andeq	sp, r0, r0, asr #15

00018ba4 <getWritableDirectory@@Base>:
   18ba4:	ldr	r3, [pc, #64]	; 18bec <getWritableDirectory@@Base+0x48>
   18ba8:	ldr	r2, [pc, #64]	; 18bf0 <getWritableDirectory@@Base+0x4c>
   18bac:	add	r3, pc, r3
   18bb0:	push	{r4, lr}
   18bb4:	ldr	r4, [r3, r2]
   18bb8:	ldr	r0, [r4]
   18bbc:	cmp	r0, #0
   18bc0:	beq	18be4 <getWritableDirectory@@Base+0x40>
   18bc4:	ldrb	r3, [r0]
   18bc8:	cmp	r3, #0
   18bcc:	beq	18be4 <getWritableDirectory@@Base+0x40>
   18bd0:	bl	18ad8 <ensureDirectory@@Base>
   18bd4:	cmp	r0, #0
   18bd8:	beq	18be4 <getWritableDirectory@@Base+0x40>
   18bdc:	ldr	r0, [r4]
   18be0:	pop	{r4, pc}
   18be4:	mov	r0, #0
   18be8:	pop	{r4, pc}
   18bec:	andeq	r2, r2, ip, asr #8
   18bf0:	andeq	r0, r0, r4, lsr #5

00018bf4 <makeWritablePath@@Base>:
   18bf4:	push	{r4, lr}
   18bf8:	mov	r4, r0
   18bfc:	bl	18ba4 <getWritableDirectory@@Base>
   18c00:	cmp	r0, #0
   18c04:	popeq	{r4, pc}
   18c08:	mov	r1, r4
   18c0c:	pop	{r4, lr}
   18c10:	b	18764 <makePath@@Base>

00018c14 <getWorkingDirectory@@Base>:
   18c14:	push	{r3, r4, r5, r6, r7, lr}
   18c18:	mov	r5, #0
   18c1c:	mov	r4, #128	; 0x80
   18c20:	b	18c48 <getWorkingDirectory@@Base+0x34>
   18c24:	bl	15118 <getcwd@plt>
   18c28:	mov	r5, r6
   18c2c:	cmp	r0, #0
   18c30:	bne	18cb8 <getWorkingDirectory@@Base+0xa4>
   18c34:	bl	151b4 <__errno_location@plt>
   18c38:	ldr	r3, [r0]
   18c3c:	mov	r7, r0
   18c40:	cmp	r3, #34	; 0x22
   18c44:	bne	18cc0 <getWorkingDirectory@@Base+0xac>
   18c48:	lsl	r4, r4, #1
   18c4c:	mov	r0, r5
   18c50:	mov	r1, r4
   18c54:	bl	14f2c <realloc@plt>
   18c58:	mov	r1, r4
   18c5c:	subs	r6, r0, #0
   18c60:	bne	18c24 <getWorkingDirectory@@Base+0x10>
   18c64:	bl	184dc <logMallocError@@Base>
   18c68:	cmp	r5, #0
   18c6c:	bne	18cd8 <getWorkingDirectory@@Base+0xc4>
   18c70:	bl	151b4 <__errno_location@plt>
   18c74:	mov	r7, r0
   18c78:	ldr	r1, [pc, #104]	; 18ce8 <getWorkingDirectory@@Base+0xd4>
   18c7c:	mov	r2, #5
   18c80:	mov	r0, #0
   18c84:	add	r1, pc, r1
   18c88:	bl	14fec <dcgettext@plt>
   18c8c:	mov	r4, r0
   18c90:	ldr	r0, [r7]
   18c94:	bl	14d64 <strerror@plt>
   18c98:	ldr	r1, [pc, #76]	; 18cec <getWorkingDirectory@@Base+0xd8>
   18c9c:	mov	r2, r4
   18ca0:	add	r1, pc, r1
   18ca4:	mov	r3, r0
   18ca8:	mov	r0, #4
   18cac:	bl	183d0 <logMessage@@Base>
   18cb0:	mov	r0, #0
   18cb4:	pop	{r3, r4, r5, r6, r7, pc}
   18cb8:	mov	r0, r6
   18cbc:	pop	{r3, r4, r5, r6, r7, pc}
   18cc0:	ldr	r0, [pc, #40]	; 18cf0 <getWorkingDirectory@@Base+0xdc>
   18cc4:	add	r0, pc, r0
   18cc8:	bl	18498 <logSystemError@@Base>
   18ccc:	mov	r0, r6
   18cd0:	bl	14d10 <free@plt>
   18cd4:	b	18c78 <getWorkingDirectory@@Base+0x64>
   18cd8:	bl	151b4 <__errno_location@plt>
   18cdc:	mov	r6, r5
   18ce0:	mov	r7, r0
   18ce4:	b	18ccc <getWorkingDirectory@@Base+0xb8>
   18ce8:	andeq	sp, r0, ip, lsl r7
   18cec:	andeq	sp, r0, r8, ror fp
   18cf0:	ldrdeq	sp, [r0], -r4

00018cf4 <setWorkingDirectory@@Base>:
   18cf4:	push	{r4, r5, lr}
   18cf8:	sub	sp, sp, #12
   18cfc:	mov	r4, r0
   18d00:	bl	14c50 <chdir@plt>
   18d04:	cmn	r0, #1
   18d08:	movne	r0, #1
   18d0c:	beq	18d18 <setWorkingDirectory@@Base+0x24>
   18d10:	add	sp, sp, #12
   18d14:	pop	{r4, r5, pc}
   18d18:	ldr	r1, [pc, #68]	; 18d64 <setWorkingDirectory@@Base+0x70>
   18d1c:	mov	r2, #5
   18d20:	mov	r0, #0
   18d24:	add	r1, pc, r1
   18d28:	bl	14fec <dcgettext@plt>
   18d2c:	mov	r5, r0
   18d30:	bl	151b4 <__errno_location@plt>
   18d34:	ldr	r0, [r0]
   18d38:	bl	14d64 <strerror@plt>
   18d3c:	ldr	r1, [pc, #36]	; 18d68 <setWorkingDirectory@@Base+0x74>
   18d40:	mov	r2, r5
   18d44:	mov	r3, r4
   18d48:	add	r1, pc, r1
   18d4c:	str	r0, [sp]
   18d50:	mov	r0, #4
   18d54:	bl	183d0 <logMessage@@Base>
   18d58:	mov	r0, #0
   18d5c:	add	sp, sp, #12
   18d60:	pop	{r4, r5, pc}
   18d64:	muleq	r0, ip, r6
   18d68:	andeq	sp, r0, ip, asr #5

00018d6c <getHomeDirectory@@Base>:
   18d6c:	ldr	r0, [pc, #80]	; 18dc4 <getHomeDirectory@@Base+0x58>
   18d70:	push	{lr}		; (str lr, [sp, #-4]!)
   18d74:	add	r0, pc, r0
   18d78:	sub	sp, sp, #12
   18d7c:	bl	1525c <getenv@plt>
   18d80:	subs	r3, r0, #0
   18d84:	beq	18da8 <getHomeDirectory@@Base+0x3c>
   18d88:	ldrb	r3, [r3]
   18d8c:	cmp	r3, #0
   18d90:	beq	18da8 <getHomeDirectory@@Base+0x3c>
   18d94:	bl	14e54 <__strdup@plt>
   18d98:	cmp	r0, #0
   18d9c:	beq	18db4 <getHomeDirectory@@Base+0x48>
   18da0:	add	sp, sp, #12
   18da4:	pop	{pc}		; (ldr pc, [sp], #4)
   18da8:	mov	r0, r3
   18dac:	add	sp, sp, #12
   18db0:	pop	{pc}		; (ldr pc, [sp], #4)
   18db4:	str	r0, [sp, #4]
   18db8:	bl	184dc <logMallocError@@Base>
   18dbc:	ldr	r0, [sp, #4]
   18dc0:	b	18da0 <getHomeDirectory@@Base+0x34>
   18dc4:	andeq	sp, r0, ip, ror #12

00018dc8 <getOverrideDirectory@@Base>:
   18dc8:	push	{r4, r5, r6, lr}
   18dcc:	ldr	r4, [pc, #208]	; 18ea4 <getOverrideDirectory@@Base+0xdc>
   18dd0:	add	r4, pc, r4
   18dd4:	ldr	r0, [r4]
   18dd8:	cmp	r0, #0
   18ddc:	beq	18df0 <getOverrideDirectory@@Base+0x28>
   18de0:	ldrb	r3, [r0]
   18de4:	cmp	r3, #0
   18de8:	moveq	r0, #0
   18dec:	pop	{r4, r5, r6, pc}
   18df0:	bl	18d6c <getHomeDirectory@@Base>
   18df4:	subs	r6, r0, #0
   18df8:	beq	18e40 <getOverrideDirectory@@Base+0x78>
   18dfc:	ldr	r1, [pc, #164]	; 18ea8 <getOverrideDirectory@@Base+0xe0>
   18e00:	add	r1, pc, r1
   18e04:	bl	18764 <makePath@@Base>
   18e08:	mov	r5, r0
   18e0c:	mov	r0, r6
   18e10:	str	r5, [r4]
   18e14:	bl	14d10 <free@plt>
   18e18:	cmp	r5, #0
   18e1c:	beq	18e40 <getOverrideDirectory@@Base+0x78>
   18e20:	ldr	r1, [pc, #132]	; 18eac <getOverrideDirectory@@Base+0xe4>
   18e24:	mov	r0, #6
   18e28:	mov	r2, r5
   18e2c:	add	r1, pc, r1
   18e30:	bl	183d0 <logMessage@@Base>
   18e34:	ldr	r3, [pc, #116]	; 18eb0 <getOverrideDirectory@@Base+0xe8>
   18e38:	ldr	r0, [pc, r3]
   18e3c:	b	18de0 <getOverrideDirectory@@Base+0x18>
   18e40:	bl	18c14 <getWorkingDirectory@@Base>
   18e44:	subs	r4, r0, #0
   18e48:	beq	18e78 <getOverrideDirectory@@Base+0xb0>
   18e4c:	ldr	r1, [pc, #96]	; 18eb4 <getOverrideDirectory@@Base+0xec>
   18e50:	add	r1, pc, r1
   18e54:	bl	18764 <makePath@@Base>
   18e58:	ldr	r3, [pc, #88]	; 18eb8 <getOverrideDirectory@@Base+0xf0>
   18e5c:	add	r3, pc, r3
   18e60:	mov	r5, r0
   18e64:	mov	r0, r4
   18e68:	str	r5, [r3]
   18e6c:	bl	14d10 <free@plt>
   18e70:	cmp	r5, #0
   18e74:	bne	18e20 <getOverrideDirectory@@Base+0x58>
   18e78:	ldr	r4, [pc, #60]	; 18ebc <getOverrideDirectory@@Base+0xf4>
   18e7c:	mov	r0, #4
   18e80:	ldr	r1, [pc, #56]	; 18ec0 <getOverrideDirectory@@Base+0xf8>
   18e84:	add	r4, pc, r4
   18e88:	ldr	r3, [pc, #52]	; 18ec4 <getOverrideDirectory@@Base+0xfc>
   18e8c:	add	r1, pc, r1
   18e90:	add	r3, pc, r3
   18e94:	str	r3, [r4]
   18e98:	bl	183d0 <logMessage@@Base>
   18e9c:	ldr	r0, [r4]
   18ea0:	b	18de0 <getOverrideDirectory@@Base+0x18>
   18ea4:	andeq	r2, r2, ip, asr r5
   18ea8:	andeq	sp, r0, ip, lsl #10
   18eac:	ldrdeq	sp, [r0], -r4
   18eb0:	strdeq	r2, [r2], -r4
   18eb4:			; <UNDEFINED> instruction: 0x0000d4bc
   18eb8:	ldrdeq	r2, [r2], -r0
   18ebc:	andeq	r2, r2, r8, lsr #9
   18ec0:	andeq	sp, r0, ip, asr r5
   18ec4:	andeq	sp, r0, r8, asr #6

00018ec8 <openFile@@Base>:
   18ec8:	push	{r4, r5, r6, lr}
   18ecc:	mov	r6, r2
   18ed0:	mov	r5, r0
   18ed4:	bl	14e84 <fopen@plt>
   18ed8:	subs	r4, r0, #0
   18edc:	beq	18f04 <openFile@@Base+0x3c>
   18ee0:	bl	14f8c <fileno@plt>
   18ee4:	ldr	r1, [pc, #104]	; 18f54 <openFile@@Base+0x8c>
   18ee8:	mov	r2, r5
   18eec:	add	r1, pc, r1
   18ef0:	mov	r3, r0
   18ef4:	mov	r0, #7
   18ef8:	bl	183d0 <logMessage@@Base>
   18efc:	mov	r0, r4
   18f00:	pop	{r4, r5, r6, pc}
   18f04:	cmp	r6, #0
   18f08:	bne	18f3c <openFile@@Base+0x74>
   18f0c:	bl	151b4 <__errno_location@plt>
   18f10:	ldr	r0, [r0]
   18f14:	mov	r6, #3
   18f18:	bl	14d64 <strerror@plt>
   18f1c:	ldr	r1, [pc, #52]	; 18f58 <openFile@@Base+0x90>
   18f20:	mov	r2, r5
   18f24:	add	r1, pc, r1
   18f28:	mov	r3, r0
   18f2c:	mov	r0, r6
   18f30:	bl	183d0 <logMessage@@Base>
   18f34:	mov	r0, r4
   18f38:	pop	{r4, r5, r6, pc}
   18f3c:	bl	151b4 <__errno_location@plt>
   18f40:	ldr	r0, [r0]
   18f44:	cmp	r0, #2
   18f48:	moveq	r6, #7
   18f4c:	bne	18f14 <openFile@@Base+0x4c>
   18f50:	b	18f18 <openFile@@Base+0x50>
   18f54:	andeq	sp, r0, ip, lsr #10
   18f58:	andeq	sp, r0, ip, lsl #10

00018f5c <openDataFile@@Base>:
   18f5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f60:	sub	sp, sp, #12
   18f64:	mov	r5, r1
   18f68:	mov	r6, r2
   18f6c:	mov	r8, r0
   18f70:	bl	186e4 <locatePathName@@Base>
   18f74:	mov	r4, r0
   18f78:	bl	18dc8 <getOverrideDirectory@@Base>
   18f7c:	subs	r9, r0, #0
   18f80:	beq	18fd4 <openDataFile@@Base+0x78>
   18f84:	mov	r1, r4
   18f88:	bl	18764 <makePath@@Base>
   18f8c:	subs	r4, r0, #0
   18f90:	beq	18fd4 <openDataFile@@Base+0x78>
   18f94:	bl	18934 <testFilePath@@Base>
   18f98:	cmp	r0, #0
   18f9c:	bne	19024 <openDataFile@@Base+0xc8>
   18fa0:	mov	r0, r8
   18fa4:	mov	r1, r5
   18fa8:	mov	r2, r6
   18fac:	bl	18ec8 <openFile@@Base>
   18fb0:	subs	r7, r0, #0
   18fb4:	beq	18fdc <openDataFile@@Base+0x80>
   18fb8:	cmp	r4, #0
   18fbc:	beq	18fc8 <openDataFile@@Base+0x6c>
   18fc0:	mov	r0, r4
   18fc4:	bl	14d10 <free@plt>
   18fc8:	mov	r0, r7
   18fcc:	add	sp, sp, #12
   18fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fd4:	mov	r4, #0
   18fd8:	b	18fa0 <openDataFile@@Base+0x44>
   18fdc:	ldrb	r3, [r5]
   18fe0:	cmp	r3, #119	; 0x77
   18fe4:	cmpne	r3, #97	; 0x61
   18fe8:	bne	18fb8 <openDataFile@@Base+0x5c>
   18fec:	bl	151b4 <__errno_location@plt>
   18ff0:	ldr	r3, [r0]
   18ff4:	mov	sl, r0
   18ff8:	cmp	r3, #2
   18ffc:	beq	1903c <openDataFile@@Base+0xe0>
   19000:	cmp	r3, #13
   19004:	cmpne	r3, #30
   19008:	bne	18fb8 <openDataFile@@Base+0x5c>
   1900c:	cmp	r4, #0
   19010:	beq	18fc8 <openDataFile@@Base+0x6c>
   19014:	mov	r0, r9
   19018:	bl	18ad8 <ensureDirectory@@Base>
   1901c:	cmp	r0, #0
   19020:	beq	18fc0 <openDataFile@@Base+0x64>
   19024:	mov	r1, r5
   19028:	mov	r2, r6
   1902c:	mov	r0, r4
   19030:	bl	18ec8 <openFile@@Base>
   19034:	mov	r7, r0
   19038:	b	18fc0 <openDataFile@@Base+0x64>
   1903c:	mov	r0, r8
   19040:	bl	185ec <getPathDirectory@@Base>
   19044:	subs	fp, r0, #0
   19048:	beq	1906c <openDataFile@@Base+0x110>
   1904c:	bl	18ad8 <ensureDirectory@@Base>
   19050:	mov	r3, r0
   19054:	mov	r0, fp
   19058:	str	r3, [sp, #4]
   1905c:	bl	14d10 <free@plt>
   19060:	ldr	r3, [sp, #4]
   19064:	cmp	r3, #0
   19068:	bne	19074 <openDataFile@@Base+0x118>
   1906c:	ldr	r3, [sl]
   19070:	b	19000 <openDataFile@@Base+0xa4>
   19074:	mov	r0, r8
   19078:	mov	r1, r5
   1907c:	mov	r2, r6
   19080:	bl	18ec8 <openFile@@Base>
   19084:	mov	r7, r0
   19088:	b	18fb8 <openDataFile@@Base+0x5c>

0001908c <acquireFileLock@@Base>:
   1908c:	adds	r2, r1, #0
   19090:	mov	r1, #7
   19094:	movne	r2, #1
   19098:	b	184ec <logMallocError@@Base+0x10>

0001909c <attemptFileLock@@Base>:
   1909c:	adds	r2, r1, #0
   190a0:	mov	r1, #6
   190a4:	movne	r2, #1
   190a8:	b	184ec <logMallocError@@Base+0x10>

000190ac <releaseFileLock@@Base>:
   190ac:	mov	r1, #6
   190b0:	mov	r2, #2
   190b4:	b	184ec <logMallocError@@Base+0x10>

000190b8 <readLine@@Base>:
   190b8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   190bc:	mov	r6, r1
   190c0:	mov	r7, r2
   190c4:	mov	r8, r0
   190c8:	bl	15088 <ferror@plt>
   190cc:	cmp	r0, #0
   190d0:	beq	190e0 <readLine@@Base+0x28>
   190d4:	mov	r9, #0
   190d8:	mov	r0, r9
   190dc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   190e0:	mov	r0, r8
   190e4:	bl	14d94 <feof@plt>
   190e8:	subs	r9, r0, #0
   190ec:	bne	190d4 <readLine@@Base+0x1c>
   190f0:	ldr	r1, [r7]
   190f4:	cmp	r1, #0
   190f8:	ldrne	r0, [r6]
   190fc:	beq	191a0 <readLine@@Base+0xe8>
   19100:	mov	r2, r8
   19104:	bl	150a0 <fgets@plt>
   19108:	subs	r5, r0, #0
   1910c:	beq	19220 <readLine@@Base+0x168>
   19110:	bl	150e8 <strlen@plt>
   19114:	sub	r2, r0, #1
   19118:	mov	r4, r0
   1911c:	ldrb	r3, [r5, r2]
   19120:	cmp	r3, #10
   19124:	beq	191c0 <readLine@@Base+0x108>
   19128:	ldr	r3, [r6]
   1912c:	b	19164 <readLine@@Base+0xac>
   19130:	mov	r2, r8
   19134:	add	r0, r3, r4
   19138:	bl	150a0 <fgets@plt>
   1913c:	cmp	r0, #0
   19140:	beq	191f4 <readLine@@Base+0x13c>
   19144:	bl	150e8 <strlen@plt>
   19148:	ldr	r5, [r6]
   1914c:	mov	r3, r5
   19150:	add	r4, r4, r0
   19154:	sub	r2, r4, #1
   19158:	ldrb	r1, [r5, r2]
   1915c:	cmp	r1, #10
   19160:	beq	191c0 <readLine@@Base+0x108>
   19164:	ldr	r2, [r7]
   19168:	rsb	r1, r4, r2
   1916c:	cmp	r1, #1
   19170:	bne	19130 <readLine@@Base+0x78>
   19174:	lsl	r5, r2, #1
   19178:	mov	r0, r3
   1917c:	mov	r1, r5
   19180:	bl	14f2c <realloc@plt>
   19184:	rsb	r1, r4, r5
   19188:	cmp	r0, #0
   1918c:	beq	19218 <readLine@@Base+0x160>
   19190:	str	r0, [r6]
   19194:	str	r5, [r7]
   19198:	ldr	r3, [r6]
   1919c:	b	19130 <readLine@@Base+0x78>
   191a0:	mov	r0, #128	; 0x80
   191a4:	str	r0, [r7]
   191a8:	bl	150dc <malloc@plt>
   191ac:	cmp	r0, #0
   191b0:	str	r0, [r6]
   191b4:	beq	19218 <readLine@@Base+0x160>
   191b8:	ldr	r1, [r7]
   191bc:	b	19100 <readLine@@Base+0x48>
   191c0:	cmp	r2, #0
   191c4:	moveq	r3, r5
   191c8:	beq	191e0 <readLine@@Base+0x128>
   191cc:	sub	r4, r4, #2
   191d0:	add	r3, r5, r4
   191d4:	ldrb	r1, [r5, r4]
   191d8:	cmp	r1, #13
   191dc:	addne	r3, r5, r2
   191e0:	mov	r9, #1
   191e4:	mov	r2, #0
   191e8:	mov	r0, r9
   191ec:	strb	r2, [r3]
   191f0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   191f4:	mov	r0, r8
   191f8:	bl	15088 <ferror@plt>
   191fc:	cmp	r0, #0
   19200:	moveq	r9, #1
   19204:	beq	190d8 <readLine@@Base+0x20>
   19208:	ldr	r0, [pc, #36]	; 19234 <readLine@@Base+0x17c>
   1920c:	add	r0, pc, r0
   19210:	bl	18498 <logSystemError@@Base>
   19214:	b	190d8 <readLine@@Base+0x20>
   19218:	bl	184dc <logMallocError@@Base>
   1921c:	b	190d8 <readLine@@Base+0x20>
   19220:	mov	r0, r8
   19224:	bl	15088 <ferror@plt>
   19228:	cmp	r0, #0
   1922c:	beq	190d4 <readLine@@Base+0x1c>
   19230:	b	19208 <readLine@@Base+0x150>
   19234:	andeq	ip, r0, r4, asr #27

00019238 <processLines@@Base>:
   19238:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1923c:	sub	sp, sp, #28
   19240:	ldr	lr, [pc, #224]	; 19328 <processLines@@Base+0xf0>
   19244:	mov	r3, #0
   19248:	ldr	ip, [pc, #220]	; 1932c <processLines@@Base+0xf4>
   1924c:	mov	r4, r3
   19250:	add	lr, pc, lr
   19254:	ldr	sl, [pc, #212]	; 19330 <processLines@@Base+0xf8>
   19258:	mov	r8, r2
   1925c:	mov	r5, r0
   19260:	ldr	ip, [lr, ip]
   19264:	add	sl, pc, sl
   19268:	str	r3, [sp, #12]
   1926c:	mov	r2, lr
   19270:	str	r3, [sp, #16]
   19274:	mov	r9, r1
   19278:	ldr	r3, [ip]
   1927c:	add	sl, sl, #8
   19280:	str	ip, [sp, #4]
   19284:	add	r7, sp, #12
   19288:	add	r6, sp, #16
   1928c:	str	r3, [sp, #20]
   19290:	b	192d0 <processLines@@Base+0x98>
   19294:	cmp	r4, #0
   19298:	ldr	fp, [sp, #12]
   1929c:	bne	192b8 <processLines@@Base+0x80>
   192a0:	mov	r0, fp
   192a4:	mov	r1, sl
   192a8:	mov	r2, #3
   192ac:	bl	14d40 <strncmp@plt>
   192b0:	cmp	r0, #0
   192b4:	addeq	fp, fp, #3
   192b8:	mov	r0, fp
   192bc:	mov	r1, r8
   192c0:	blx	r9
   192c4:	add	r4, r4, #1
   192c8:	cmp	r0, #0
   192cc:	beq	192e8 <processLines@@Base+0xb0>
   192d0:	mov	r0, r5
   192d4:	mov	r1, r7
   192d8:	mov	r2, r6
   192dc:	bl	190b8 <readLine@@Base>
   192e0:	cmp	r0, #0
   192e4:	bne	19294 <processLines@@Base+0x5c>
   192e8:	ldr	r0, [sp, #12]
   192ec:	cmp	r0, #0
   192f0:	beq	192f8 <processLines@@Base+0xc0>
   192f4:	bl	14d10 <free@plt>
   192f8:	mov	r0, r5
   192fc:	bl	15088 <ferror@plt>
   19300:	ldr	r1, [sp, #4]
   19304:	ldr	r2, [sp, #20]
   19308:	ldr	r3, [r1]
   1930c:	rsbs	r0, r0, #1
   19310:	movcc	r0, #0
   19314:	cmp	r2, r3
   19318:	bne	19324 <processLines@@Base+0xec>
   1931c:	add	sp, sp, #28
   19320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19324:	bl	14fbc <__stack_chk_fail@plt>
   19328:	andeq	r1, r2, r8, lsr #27
   1932c:	andeq	r0, r0, r8, asr #4
   19330:	andeq	sp, r0, r8, lsr #1

00019334 <formatInputError@@Base>:
   19334:	push	{r4, r5, r6, r7, r8, r9, lr}
   19338:	cmp	r2, #0
   1933c:	sub	sp, sp, #12
   19340:	mov	r7, r3
   19344:	mov	r4, r0
   19348:	add	r5, r0, r1
   1934c:	ldr	r9, [sp, #40]	; 0x28
   19350:	moveq	r6, r0
   19354:	ldr	r8, [sp, #44]	; 0x2c
   19358:	beq	19384 <formatInputError@@Base+0x50>
   1935c:	mov	r3, r2
   19360:	ldr	r2, [pc, #184]	; 19420 <formatInputError@@Base+0xec>
   19364:	rsb	r1, r0, r5
   19368:	mov	r6, r4
   1936c:	add	r2, pc, r2
   19370:	bl	14e48 <snprintf@plt>
   19374:	add	r0, r4, r0
   19378:	cmp	r0, r5
   1937c:	movcc	r4, r0
   19380:	movcs	r4, r5
   19384:	cmp	r7, #0
   19388:	beq	193c0 <formatInputError@@Base+0x8c>
   1938c:	ldr	lr, [r7]
   19390:	mov	r0, r4
   19394:	ldr	ip, [pc, #136]	; 19424 <formatInputError@@Base+0xf0>
   19398:	rsb	r1, r4, r5
   1939c:	mov	r2, #1
   193a0:	mvn	r3, #0
   193a4:	add	ip, pc, ip
   193a8:	stm	sp, {ip, lr}
   193ac:	bl	150f4 <__snprintf_chk@plt>
   193b0:	add	r0, r4, r0
   193b4:	cmp	r0, r5
   193b8:	movcc	r4, r0
   193bc:	movcs	r4, r5
   193c0:	cmp	r6, r4
   193c4:	beq	193ec <formatInputError@@Base+0xb8>
   193c8:	ldr	r2, [pc, #88]	; 19428 <formatInputError@@Base+0xf4>
   193cc:	mov	r0, r4
   193d0:	rsb	r1, r4, r5
   193d4:	add	r2, pc, r2
   193d8:	bl	14e48 <snprintf@plt>
   193dc:	add	r0, r4, r0
   193e0:	cmp	r0, r5
   193e4:	movcc	r4, r0
   193e8:	movcs	r4, r5
   193ec:	str	r9, [sp]
   193f0:	mov	r0, r4
   193f4:	str	r8, [sp, #4]
   193f8:	rsb	r1, r4, r5
   193fc:	mov	r2, #1
   19400:	mvn	r3, #0
   19404:	bl	14d7c <__vsnprintf_chk@plt>
   19408:	add	r0, r4, r0
   1940c:	cmp	r0, r5
   19410:	rsbls	r0, r6, r0
   19414:	rsbhi	r0, r6, r5
   19418:	add	sp, sp, #12
   1941c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   19420:	andeq	pc, r0, r8, ror r6	; <UNPREDICTABLE>
   19424:	andeq	sp, r0, r8, lsr #1
   19428:	andeq	ip, r0, r8, lsr #28

0001942c <getConsole@@Base>:
   1942c:	push	{r4, lr}
   19430:	ldr	r4, [pc, #96]	; 19498 <getConsole@@Base+0x6c>
   19434:	add	r4, pc, r4
   19438:	ldr	r0, [r4]
   1943c:	cmp	r0, #0
   19440:	popne	{r4, pc}
   19444:	ldr	r0, [pc, #80]	; 1949c <getConsole@@Base+0x70>
   19448:	ldr	r1, [pc, #80]	; 194a0 <getConsole@@Base+0x74>
   1944c:	add	r0, pc, r0
   19450:	add	r1, pc, r1
   19454:	bl	14e84 <fopen@plt>
   19458:	cmp	r0, #0
   1945c:	str	r0, [r4]
   19460:	beq	19484 <getConsole@@Base+0x58>
   19464:	bl	14f8c <fileno@plt>
   19468:	ldr	r1, [pc, #52]	; 194a4 <getConsole@@Base+0x78>
   1946c:	add	r1, pc, r1
   19470:	mov	r2, r0
   19474:	mov	r0, #7
   19478:	bl	183d0 <logMessage@@Base>
   1947c:	ldr	r0, [r4]
   19480:	pop	{r4, pc}
   19484:	ldr	r0, [pc, #28]	; 194a8 <getConsole@@Base+0x7c>
   19488:	add	r0, pc, r0
   1948c:	bl	18498 <logSystemError@@Base>
   19490:	ldr	r0, [r4]
   19494:	pop	{r4, pc}
   19498:	andeq	r1, r2, r0, lsl #30
   1949c:	andeq	sp, r0, r8
   194a0:	andeq	sp, r0, r4, lsl r0
   194a4:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   194a8:	strdeq	ip, [r0], -r8

000194ac <writeConsole@@Base>:
   194ac:	push	{r3, r4, r5, r6, r7, lr}
   194b0:	mov	r7, r0
   194b4:	mov	r4, r1
   194b8:	bl	1942c <getConsole@@Base>
   194bc:	subs	r6, r0, #0
   194c0:	beq	19538 <writeConsole@@Base+0x8c>
   194c4:	cmp	r4, #0
   194c8:	bne	194e8 <writeConsole@@Base+0x3c>
   194cc:	b	19540 <writeConsole@@Base+0x94>
   194d0:	mov	r0, r6
   194d4:	bl	15088 <ferror@plt>
   194d8:	cmp	r0, #0
   194dc:	bne	1952c <writeConsole@@Base+0x80>
   194e0:	subs	r4, r4, r5
   194e4:	beq	19540 <writeConsole@@Base+0x94>
   194e8:	mov	r0, r7
   194ec:	mov	r1, #1
   194f0:	mov	r2, r4
   194f4:	mov	r3, r6
   194f8:	bl	150c4 <fwrite@plt>
   194fc:	mov	r5, r0
   19500:	mov	r0, r6
   19504:	bl	15088 <ferror@plt>
   19508:	add	r7, r7, r5
   1950c:	cmp	r0, #0
   19510:	bne	194d0 <writeConsole@@Base+0x24>
   19514:	mov	r0, r6
   19518:	bl	151fc <fflush@plt>
   1951c:	mov	r0, r6
   19520:	bl	15088 <ferror@plt>
   19524:	cmp	r0, #0
   19528:	beq	194e0 <writeConsole@@Base+0x34>
   1952c:	ldr	r0, [pc, #20]	; 19548 <writeConsole@@Base+0x9c>
   19530:	add	r0, pc, r0
   19534:	bl	18498 <logSystemError@@Base>
   19538:	mov	r0, #0
   1953c:	pop	{r3, r4, r5, r6, r7, pc}
   19540:	mov	r0, #1
   19544:	pop	{r3, r4, r5, r6, r7, pc}
   19548:	andeq	ip, r0, r0, ror #30

0001954c <ringBell@@Base>:
   1954c:	ldr	r0, [pc, #8]	; 1955c <ringBell@@Base+0x10>
   19550:	mov	r1, #1
   19554:	add	r0, pc, r0
   19558:	b	194ac <writeConsole@@Base>
   1955c:	andeq	r1, r2, r8, asr sp

00019560 <getDeviceDirectory@@Base>:
   19560:	ldr	r3, [pc, #408]	; 19700 <getDeviceDirectory@@Base+0x1a0>
   19564:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19568:	add	fp, sp, #32
   1956c:	ldr	r1, [pc, #400]	; 19704 <getDeviceDirectory@@Base+0x1a4>
   19570:	sub	sp, sp, #36	; 0x24
   19574:	add	r3, pc, r3
   19578:	ldr	r2, [pc, #392]	; 19708 <getDeviceDirectory@@Base+0x1a8>
   1957c:	ldr	r6, [r3, r1]
   19580:	add	r2, pc, r2
   19584:	ldr	r0, [r2, #4]
   19588:	ldr	r3, [r6]
   1958c:	cmp	r0, #0
   19590:	str	r3, [fp, #-40]	; 0xffffffd8
   19594:	beq	195b0 <getDeviceDirectory@@Base+0x50>
   19598:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1959c:	ldr	r3, [r6]
   195a0:	cmp	r2, r3
   195a4:	bne	196fc <getDeviceDirectory@@Base+0x19c>
   195a8:	sub	sp, fp, #32
   195ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195b0:	ldr	r3, [pc, #340]	; 1970c <getDeviceDirectory@@Base+0x1ac>
   195b4:	ldr	r4, [pc, #340]	; 19710 <getDeviceDirectory@@Base+0x1b0>
   195b8:	add	r3, pc, r3
   195bc:	ldr	r0, [pc, #336]	; 19714 <getDeviceDirectory@@Base+0x1b4>
   195c0:	ldr	r9, [pc, #336]	; 19718 <getDeviceDirectory@@Base+0x1b8>
   195c4:	add	r4, pc, r4
   195c8:	ldr	r8, [pc, #332]	; 1971c <getDeviceDirectory@@Base+0x1bc>
   195cc:	add	r0, pc, r0
   195d0:	str	r3, [fp, #-48]	; 0xffffffd0
   195d4:	add	r9, pc, r9
   195d8:	ldr	r3, [pc, #320]	; 19720 <getDeviceDirectory@@Base+0x1c0>
   195dc:	add	r4, r4, #4
   195e0:	add	r8, pc, r8
   195e4:	add	r3, pc, r3
   195e8:	str	r3, [fp, #-52]	; 0xffffffcc
   195ec:	b	195fc <getDeviceDirectory@@Base+0x9c>
   195f0:	ldr	r0, [r4], #4
   195f4:	cmp	r0, #0
   195f8:	beq	19698 <getDeviceDirectory@@Base+0x138>
   195fc:	bl	1525c <getenv@plt>
   19600:	subs	sl, r0, #0
   19604:	beq	195f0 <getDeviceDirectory@@Base+0x90>
   19608:	ldrb	r3, [sl]
   1960c:	cmp	r3, #0
   19610:	beq	195f0 <getDeviceDirectory@@Base+0x90>
   19614:	bl	150e8 <strlen@plt>
   19618:	mov	r7, sp
   1961c:	mov	r2, #1
   19620:	add	r3, r0, #12
   19624:	add	r1, r0, #5
   19628:	bic	r3, r3, #7
   1962c:	sub	sp, sp, r3
   19630:	mvn	r3, #0
   19634:	add	r5, sp, #16
   19638:	stm	sp, {r9, sl}
   1963c:	mov	r0, r5
   19640:	str	r8, [sp, #8]
   19644:	bl	150f4 <__snprintf_chk@plt>
   19648:	mov	r0, r5
   1964c:	bl	189d4 <testDirectoryPath@@Base>
   19650:	cmp	r0, #0
   19654:	bne	196d0 <getDeviceDirectory@@Base+0x170>
   19658:	bl	151b4 <__errno_location@plt>
   1965c:	ldr	r0, [r0]
   19660:	cmp	r0, #2
   19664:	beq	19688 <getDeviceDirectory@@Base+0x128>
   19668:	ldr	sl, [r4, #-4]
   1966c:	bl	14d64 <strerror@plt>
   19670:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19674:	mov	r2, r5
   19678:	mov	r3, sl
   1967c:	str	r0, [sp]
   19680:	mov	r0, #3
   19684:	bl	183d0 <logMessage@@Base>
   19688:	ldr	r0, [r4], #4
   1968c:	mov	sp, r7
   19690:	cmp	r0, #0
   19694:	bne	195fc <getDeviceDirectory@@Base+0x9c>
   19698:	ldr	r3, [pc, #132]	; 19724 <getDeviceDirectory@@Base+0x1c4>
   1969c:	ldr	r1, [pc, #132]	; 19728 <getDeviceDirectory@@Base+0x1c8>
   196a0:	add	r3, pc, r3
   196a4:	add	r1, pc, r1
   196a8:	mov	r2, r3
   196ac:	str	r3, [r1, #4]
   196b0:	ldr	r1, [pc, #116]	; 1972c <getDeviceDirectory@@Base+0x1cc>
   196b4:	mov	r0, #7
   196b8:	add	r1, pc, r1
   196bc:	bl	183d0 <logMessage@@Base>
   196c0:	ldr	r3, [pc, #104]	; 19730 <getDeviceDirectory@@Base+0x1d0>
   196c4:	add	r3, pc, r3
   196c8:	ldr	r0, [r3, #4]
   196cc:	b	19598 <getDeviceDirectory@@Base+0x38>
   196d0:	mov	r0, r5
   196d4:	bl	14e54 <__strdup@plt>
   196d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   196dc:	cmp	r0, #0
   196e0:	str	r0, [r3, #4]
   196e4:	bne	196f0 <getDeviceDirectory@@Base+0x190>
   196e8:	bl	184dc <logMallocError@@Base>
   196ec:	b	19688 <getDeviceDirectory@@Base+0x128>
   196f0:	mov	r2, r0
   196f4:	mov	sp, r7
   196f8:	b	196b0 <getDeviceDirectory@@Base+0x150>
   196fc:	bl	14fbc <__stack_chk_fail@plt>
   19700:	andeq	r1, r2, r4, lsl #21
   19704:	andeq	r0, r0, r8, asr #4
   19708:			; <UNDEFINED> instruction: 0x00021db4
   1970c:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   19710:	muleq	r2, r4, r0
   19714:	ldrdeq	ip, [r0], -r4
   19718:	andeq	ip, r0, ip, ror fp
   1971c:	andeq	ip, r0, ip, asr #29
   19720:	andeq	r1, r2, r0, asr sp
   19724:	andeq	ip, r0, ip, lsl #28
   19728:	muleq	r2, r0, ip
   1972c:	andeq	ip, r0, r0, lsr #28
   19730:	andeq	r1, r2, r0, ror ip

00019734 <getDevicePath@@Base>:
   19734:	push	{r4, lr}
   19738:	mov	r4, r0
   1973c:	bl	19560 <getDeviceDirectory@@Base>
   19740:	mov	r1, r4
   19744:	pop	{r4, lr}
   19748:	b	18764 <makePath@@Base>

0001974c <resolveDeviceName@@Base>:
   1974c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19750:	sub	sp, sp, #20
   19754:	ldr	r3, [r0]
   19758:	mov	r7, r1
   1975c:	cmp	r3, #0
   19760:	str	r3, [sp, #12]
   19764:	beq	1984c <resolveDeviceName@@Base+0x100>
   19768:	ldr	r9, [pc, #248]	; 19868 <resolveDeviceName@@Base+0x11c>
   1976c:	mov	r8, r0
   19770:	ldr	sl, [pc, #244]	; 1986c <resolveDeviceName@@Base+0x120>
   19774:	mov	r6, #0
   19778:	add	r9, pc, r9
   1977c:	ldr	r5, [sp, #12]
   19780:	add	sl, pc, sl
   19784:	b	197ec <resolveDeviceName@@Base+0xa0>
   19788:	bl	183d0 <logMessage@@Base>
   1978c:	mov	r0, r4
   19790:	bl	1891c <testPath@@Base>
   19794:	cmp	r0, #0
   19798:	bne	1983c <resolveDeviceName@@Base+0xf0>
   1979c:	bl	151b4 <__errno_location@plt>
   197a0:	mov	fp, r0
   197a4:	ldr	r0, [r0]
   197a8:	bl	14d64 <strerror@plt>
   197ac:	mov	r3, r4
   197b0:	mov	r1, sl
   197b4:	mov	r2, r7
   197b8:	str	r0, [sp]
   197bc:	mov	r0, #7
   197c0:	bl	183d0 <logMessage@@Base>
   197c4:	ldr	r3, [fp]
   197c8:	mov	r0, r4
   197cc:	cmp	r3, #2
   197d0:	beq	197dc <resolveDeviceName@@Base+0x90>
   197d4:	cmp	r6, #0
   197d8:	moveq	r6, r5
   197dc:	bl	14d10 <free@plt>
   197e0:	ldr	r5, [r8, #4]!
   197e4:	cmp	r5, #0
   197e8:	beq	1980c <resolveDeviceName@@Base+0xc0>
   197ec:	mov	r0, r5
   197f0:	bl	19734 <getDevicePath@@Base>
   197f4:	mov	r1, r9
   197f8:	mov	r2, r7
   197fc:	subs	r4, r0, #0
   19800:	mov	r0, #7
   19804:	mov	r3, r4
   19808:	bne	19788 <resolveDeviceName@@Base+0x3c>
   1980c:	ldr	r3, [sp, #12]
   19810:	cmp	r6, #0
   19814:	moveq	r6, r3
   19818:	ldr	r1, [pc, #80]	; 19870 <resolveDeviceName@@Base+0x124>
   1981c:	mov	r2, r7
   19820:	mov	r0, #6
   19824:	mov	r3, r6
   19828:	add	r1, pc, r1
   1982c:	bl	183d0 <logMessage@@Base>
   19830:	mov	r0, r6
   19834:	add	sp, sp, #20
   19838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1983c:	mov	r0, r4
   19840:	mov	r6, r5
   19844:	bl	14d10 <free@plt>
   19848:	b	19818 <resolveDeviceName@@Base+0xcc>
   1984c:	mov	r2, r1
   19850:	ldr	r1, [pc, #28]	; 19874 <resolveDeviceName@@Base+0x128>
   19854:	mov	r0, #3
   19858:	mov	r6, r3
   1985c:	add	r1, pc, r1
   19860:	bl	183d0 <logMessage@@Base>
   19864:	b	19830 <resolveDeviceName@@Base+0xe4>
   19868:	muleq	r0, r4, sp
   1986c:	andeq	ip, r0, r4, lsr #27
   19870:	andeq	ip, r0, ip, lsl sp
   19874:	muleq	r0, r4, ip

00019878 <isQualifiedDevice@@Base>:
   19878:	push	{r3, r4, r5, r6, r7, lr}
   1987c:	mov	r7, r0
   19880:	ldr	r5, [r0]
   19884:	mov	r6, r1
   19888:	ldrb	r4, [r5]
   1988c:	cmp	r4, #0
   19890:	beq	198c0 <isQualifiedDevice@@Base+0x48>
   19894:	cmp	r4, #58	; 0x3a
   19898:	beq	1991c <isQualifiedDevice@@Base+0xa4>
   1989c:	mov	r2, r5
   198a0:	mov	r4, #0
   198a4:	b	198b0 <isQualifiedDevice@@Base+0x38>
   198a8:	cmp	r3, #58	; 0x3a
   198ac:	beq	198c0 <isQualifiedDevice@@Base+0x48>
   198b0:	ldrb	r3, [r2, #1]!
   198b4:	add	r4, r4, #1
   198b8:	cmp	r3, #0
   198bc:	bne	198a8 <isQualifiedDevice@@Base+0x30>
   198c0:	mov	r0, r5
   198c4:	bl	150e8 <strlen@plt>
   198c8:	cmp	r0, r4
   198cc:	beq	1990c <isQualifiedDevice@@Base+0x94>
   198d0:	cmp	r6, #0
   198d4:	beq	19914 <isQualifiedDevice@@Base+0x9c>
   198d8:	cmp	r4, #0
   198dc:	beq	1990c <isQualifiedDevice@@Base+0x94>
   198e0:	mov	r1, r6
   198e4:	mov	r0, r5
   198e8:	mov	r2, r4
   198ec:	bl	15010 <strncasecmp@plt>
   198f0:	cmp	r0, #0
   198f4:	bne	1990c <isQualifiedDevice@@Base+0x94>
   198f8:	add	r4, r4, #1
   198fc:	mov	r0, #1
   19900:	add	r5, r5, r4
   19904:	str	r5, [r7]
   19908:	pop	{r3, r4, r5, r6, r7, pc}
   1990c:	mov	r0, #0
   19910:	pop	{r3, r4, r5, r6, r7, pc}
   19914:	mov	r0, #1
   19918:	pop	{r3, r4, r5, r6, r7, pc}
   1991c:	mov	r4, #0
   19920:	b	198c0 <isQualifiedDevice@@Base+0x48>

00019924 <deallocateStrings@@Base>:
   19924:	push	{r3, r4, r5, lr}
   19928:	mov	r5, r0
   1992c:	ldr	r0, [r0]
   19930:	cmp	r0, #0
   19934:	movne	r4, r5
   19938:	beq	1994c <deallocateStrings@@Base+0x28>
   1993c:	bl	14d10 <free@plt>
   19940:	ldr	r0, [r4, #4]!
   19944:	cmp	r0, #0
   19948:	bne	1993c <deallocateStrings@@Base+0x18>
   1994c:	mov	r0, r5
   19950:	pop	{r3, r4, r5, lr}
   19954:	b	14d10 <free@plt>

00019958 <splitString@@Base>:
   19958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1995c:	cmp	r0, #0
   19960:	sub	sp, sp, #12
   19964:	mov	r8, r1
   19968:	str	r0, [sp]
   1996c:	str	r2, [sp, #4]
   19970:	beq	19a20 <splitString@@Base+0xc8>
   19974:	mov	r7, #0
   19978:	mov	r9, r7
   1997c:	ldr	r3, [sp]
   19980:	ldrb	r6, [r3]
   19984:	cmp	r6, #0
   19988:	beq	19a00 <splitString@@Base+0xa8>
   1998c:	mov	r5, r3
   19990:	mov	r6, #0
   19994:	b	199d8 <splitString@@Base+0x80>
   19998:	cmp	r7, #0
   1999c:	add	r0, fp, #1
   199a0:	beq	199c8 <splitString@@Base+0x70>
   199a4:	bl	150dc <malloc@plt>
   199a8:	mov	r1, r5
   199ac:	mov	r2, fp
   199b0:	cmp	r0, #0
   199b4:	mov	sl, r0
   199b8:	str	r0, [r7, r6, lsl #2]
   199bc:	beq	19a40 <splitString@@Base+0xe8>
   199c0:	bl	150d0 <memcpy@plt>
   199c4:	strb	r9, [sl, fp]
   199c8:	cmp	r4, #0
   199cc:	add	r5, r4, #1
   199d0:	add	r6, r6, #1
   199d4:	beq	19a00 <splitString@@Base+0xa8>
   199d8:	mov	r0, r5
   199dc:	mov	r1, r8
   199e0:	bl	152a4 <strchr@plt>
   199e4:	subs	r4, r0, #0
   199e8:	rsb	fp, r5, r4
   199ec:	bne	19998 <splitString@@Base+0x40>
   199f0:	mov	r0, r5
   199f4:	bl	150e8 <strlen@plt>
   199f8:	mov	fp, r0
   199fc:	b	19998 <splitString@@Base+0x40>
   19a00:	cmp	r7, #0
   19a04:	bne	19a50 <splitString@@Base+0xf8>
   19a08:	add	r0, r6, #1
   19a0c:	lsl	r0, r0, #2
   19a10:	bl	150dc <malloc@plt>
   19a14:	subs	r7, r0, #0
   19a18:	bne	1997c <splitString@@Base+0x24>
   19a1c:	bl	184dc <logMallocError@@Base>
   19a20:	ldr	r3, [sp, #4]
   19a24:	cmp	r3, #0
   19a28:	ldreq	r7, [sp, #4]
   19a2c:	movne	r7, #0
   19a30:	strne	r7, [r3]
   19a34:	mov	r0, r7
   19a38:	add	sp, sp, #12
   19a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a40:	bl	184dc <logMallocError@@Base>
   19a44:	mov	r0, r7
   19a48:	bl	19924 <deallocateStrings@@Base>
   19a4c:	b	19a20 <splitString@@Base+0xc8>
   19a50:	ldr	r3, [sp, #4]
   19a54:	cmp	r3, #0
   19a58:	mov	r3, #0
   19a5c:	str	r3, [r7, r6, lsl #2]
   19a60:	ldrne	r3, [sp, #4]
   19a64:	strne	r6, [r3]
   19a68:	b	19a34 <splitString@@Base+0xdc>

00019a6c <joinStrings@@Base>:
   19a6c:	ldr	r3, [pc, #236]	; 19b60 <joinStrings@@Base+0xf4>
   19a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a74:	mov	r7, r1
   19a78:	add	fp, sp, #32
   19a7c:	ldr	r1, [pc, #224]	; 19b64 <joinStrings@@Base+0xf8>
   19a80:	sub	sp, sp, #20
   19a84:	add	r3, pc, r3
   19a88:	lsl	r9, r7, #2
   19a8c:	add	r2, r9, #10
   19a90:	cmp	r7, #0
   19a94:	ldr	r1, [r3, r1]
   19a98:	bic	r2, r2, #7
   19a9c:	sub	sp, sp, r2
   19aa0:	mov	r6, r0
   19aa4:	ldr	r3, [r1]
   19aa8:	mov	r5, sp
   19aac:	str	r1, [fp, #-48]	; 0xffffffd0
   19ab0:	str	r3, [fp, #-40]	; 0xffffffd8
   19ab4:	ble	19b48 <joinStrings@@Base+0xdc>
   19ab8:	mov	r4, #0
   19abc:	mov	sl, r4
   19ac0:	ldr	r0, [r6, r4]
   19ac4:	bl	150e8 <strlen@plt>
   19ac8:	str	r0, [r5, r4]
   19acc:	add	r4, r4, #4
   19ad0:	cmp	r9, r4
   19ad4:	add	sl, sl, r0
   19ad8:	bne	19ac0 <joinStrings@@Base+0x54>
   19adc:	add	r0, sl, #1
   19ae0:	bl	150dc <malloc@plt>
   19ae4:	subs	sl, r0, #0
   19ae8:	beq	19b24 <joinStrings@@Base+0xb8>
   19aec:	mov	r4, #0
   19af0:	mov	r9, sl
   19af4:	mov	r8, r4
   19af8:	ldr	r2, [r5, r4]
   19afc:	mov	r0, r9
   19b00:	ldr	r1, [r6, r4]
   19b04:	add	r8, r8, #1
   19b08:	add	r9, r9, r2
   19b0c:	bl	150d0 <memcpy@plt>
   19b10:	cmp	r8, r7
   19b14:	add	r4, r4, #4
   19b18:	bne	19af8 <joinStrings@@Base+0x8c>
   19b1c:	mov	r3, #0
   19b20:	strb	r3, [r9]
   19b24:	ldr	r1, [fp, #-48]	; 0xffffffd0
   19b28:	mov	r0, sl
   19b2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19b30:	ldr	r3, [r1]
   19b34:	cmp	r2, r3
   19b38:	bne	19b44 <joinStrings@@Base+0xd8>
   19b3c:	sub	sp, fp, #32
   19b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19b44:	bl	14fbc <__stack_chk_fail@plt>
   19b48:	mov	r0, #1
   19b4c:	bl	150dc <malloc@plt>
   19b50:	subs	r9, r0, #0
   19b54:	mov	sl, r9
   19b58:	bne	19b1c <joinStrings@@Base+0xb0>
   19b5c:	b	19b24 <joinStrings@@Base+0xb8>
   19b60:	andeq	r1, r2, r4, ror r5
   19b64:	andeq	r0, r0, r8, asr #4

00019b68 <rescaleInteger@@Base>:
   19b68:	push	{r4, r5, r6, lr}
   19b6c:	mov	r4, r1
   19b70:	mov	r6, r0
   19b74:	lsl	r1, r2, #1
   19b78:	mov	r0, r4
   19b7c:	mov	r5, r2
   19b80:	bl	258a8 <handleBestCharacter@@Base+0x26c>
   19b84:	mov	r1, r4
   19b88:	add	r0, r0, r6
   19b8c:	mul	r0, r5, r0
   19b90:	bl	258a8 <handleBestCharacter@@Base+0x26c>
   19b94:	pop	{r4, r5, r6, pc}

00019b98 <isInteger@@Base>:
   19b98:	ldr	r3, [pc, #112]	; 19c10 <isInteger@@Base+0x78>
   19b9c:	ldr	ip, [pc, #112]	; 19c14 <isInteger@@Base+0x7c>
   19ba0:	add	r3, pc, r3
   19ba4:	push	{r4, r5, lr}
   19ba8:	sub	sp, sp, #12
   19bac:	ldr	r4, [r3, ip]
   19bb0:	mov	r5, r0
   19bb4:	ldrb	r2, [r1]
   19bb8:	ldr	r3, [r4]
   19bbc:	cmp	r2, #0
   19bc0:	moveq	r0, r2
   19bc4:	str	r3, [sp, #4]
   19bc8:	beq	19bf4 <isInteger@@Base+0x5c>
   19bcc:	mov	r0, r1
   19bd0:	mov	r2, #0
   19bd4:	mov	r1, sp
   19bd8:	bl	14d04 <strtol@plt>
   19bdc:	ldr	r3, [sp]
   19be0:	ldrb	r3, [r3]
   19be4:	cmp	r3, #0
   19be8:	movne	r0, #0
   19bec:	streq	r0, [r5]
   19bf0:	moveq	r0, #1
   19bf4:	ldr	r1, [sp, #4]
   19bf8:	ldr	r3, [r4]
   19bfc:	cmp	r1, r3
   19c00:	bne	19c0c <isInteger@@Base+0x74>
   19c04:	add	sp, sp, #12
   19c08:	pop	{r4, r5, pc}
   19c0c:	bl	14fbc <__stack_chk_fail@plt>
   19c10:	andeq	r1, r2, r8, asr r4
   19c14:	andeq	r0, r0, r8, asr #4

00019c18 <isUnsignedInteger@@Base>:
   19c18:	ldr	r3, [pc, #112]	; 19c90 <isUnsignedInteger@@Base+0x78>
   19c1c:	ldr	ip, [pc, #112]	; 19c94 <isUnsignedInteger@@Base+0x7c>
   19c20:	add	r3, pc, r3
   19c24:	push	{r4, r5, lr}
   19c28:	sub	sp, sp, #12
   19c2c:	ldr	r4, [r3, ip]
   19c30:	mov	r5, r0
   19c34:	ldrb	r2, [r1]
   19c38:	ldr	r3, [r4]
   19c3c:	cmp	r2, #0
   19c40:	moveq	r0, r2
   19c44:	str	r3, [sp, #4]
   19c48:	beq	19c74 <isUnsignedInteger@@Base+0x5c>
   19c4c:	mov	r0, r1
   19c50:	mov	r2, #0
   19c54:	mov	r1, sp
   19c58:	bl	14de8 <strtoul@plt>
   19c5c:	ldr	r3, [sp]
   19c60:	ldrb	r3, [r3]
   19c64:	cmp	r3, #0
   19c68:	movne	r0, #0
   19c6c:	streq	r0, [r5]
   19c70:	moveq	r0, #1
   19c74:	ldr	r1, [sp, #4]
   19c78:	ldr	r3, [r4]
   19c7c:	cmp	r1, r3
   19c80:	bne	19c8c <isUnsignedInteger@@Base+0x74>
   19c84:	add	sp, sp, #12
   19c88:	pop	{r4, r5, pc}
   19c8c:	bl	14fbc <__stack_chk_fail@plt>
   19c90:	ldrdeq	r1, [r2], -r8
   19c94:	andeq	r0, r0, r8, asr #4

00019c98 <isLogLevel@@Base>:
   19c98:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19c9c:	sub	sp, sp, #8
   19ca0:	ldr	r5, [pc, #220]	; 19d84 <isLogLevel@@Base+0xec>
   19ca4:	mov	sl, r0
   19ca8:	ldr	r3, [pc, #216]	; 19d88 <isLogLevel@@Base+0xf0>
   19cac:	mov	r6, r1
   19cb0:	add	r5, pc, r5
   19cb4:	ldrb	r2, [r1]
   19cb8:	ldr	r9, [r5, r3]
   19cbc:	cmp	r2, #0
   19cc0:	moveq	r0, #1
   19cc4:	ldr	r3, [r9]
   19cc8:	str	r3, [sp, #4]
   19ccc:	beq	19d30 <isLogLevel@@Base+0x98>
   19cd0:	mov	r0, r1
   19cd4:	bl	150e8 <strlen@plt>
   19cd8:	ldr	r3, [pc, #172]	; 19d8c <isLogLevel@@Base+0xf4>
   19cdc:	ldr	r3, [r5, r3]
   19ce0:	ldr	r7, [r3]
   19ce4:	cmp	r7, #0
   19ce8:	mov	r8, r0
   19cec:	beq	19d48 <isLogLevel@@Base+0xb0>
   19cf0:	ldr	r3, [pc, #152]	; 19d90 <isLogLevel@@Base+0xf8>
   19cf4:	mov	r4, #0
   19cf8:	ldr	r5, [r5, r3]
   19cfc:	sub	r5, r5, #4
   19d00:	b	19d10 <isLogLevel@@Base+0x78>
   19d04:	add	r4, r4, #1
   19d08:	cmp	r4, r7
   19d0c:	beq	19d48 <isLogLevel@@Base+0xb0>
   19d10:	mov	r0, r6
   19d14:	ldr	r1, [r5, #4]!
   19d18:	mov	r2, r8
   19d1c:	bl	15010 <strncasecmp@plt>
   19d20:	cmp	r0, #0
   19d24:	bne	19d04 <isLogLevel@@Base+0x6c>
   19d28:	mov	r0, #1
   19d2c:	str	r4, [sl]
   19d30:	ldr	r2, [sp, #4]
   19d34:	ldr	r3, [r9]
   19d38:	cmp	r2, r3
   19d3c:	bne	19d80 <isLogLevel@@Base+0xe8>
   19d40:	add	sp, sp, #8
   19d44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d48:	mov	r1, r6
   19d4c:	mov	r0, sp
   19d50:	bl	19b98 <isInteger@@Base>
   19d54:	cmp	r0, #0
   19d58:	beq	19d78 <isLogLevel@@Base+0xe0>
   19d5c:	ldr	r3, [sp]
   19d60:	cmp	r3, #0
   19d64:	blt	19d78 <isLogLevel@@Base+0xe0>
   19d68:	cmp	r3, r7
   19d6c:	strcc	r3, [sl]
   19d70:	movcc	r0, #1
   19d74:	bcc	19d30 <isLogLevel@@Base+0x98>
   19d78:	mov	r0, #0
   19d7c:	b	19d30 <isLogLevel@@Base+0x98>
   19d80:	bl	14fbc <__stack_chk_fail@plt>
   19d84:	andeq	r1, r2, r8, asr #6
   19d88:	andeq	r0, r0, r8, asr #4
   19d8c:	andeq	r0, r0, r8, lsr r2
   19d90:	andeq	r0, r0, r4, ror #4

00019d94 <validateInteger@@Base>:
   19d94:	ldr	ip, [pc, #164]	; 19e40 <validateInteger@@Base+0xac>
   19d98:	push	{r4, r5, r6, r7, r8, lr}
   19d9c:	add	ip, pc, ip
   19da0:	ldr	r4, [pc, #156]	; 19e44 <validateInteger@@Base+0xb0>
   19da4:	sub	sp, sp, #8
   19da8:	ldrb	r5, [r1]
   19dac:	mov	r7, r0
   19db0:	mov	r6, r2
   19db4:	mov	r8, r3
   19db8:	ldr	r4, [ip, r4]
   19dbc:	cmp	r5, #0
   19dc0:	moveq	r0, #1
   19dc4:	ldr	ip, [r4]
   19dc8:	str	ip, [sp, #4]
   19dcc:	bne	19de8 <validateInteger@@Base+0x54>
   19dd0:	ldr	r2, [sp, #4]
   19dd4:	ldr	r3, [r4]
   19dd8:	cmp	r2, r3
   19ddc:	bne	19e3c <validateInteger@@Base+0xa8>
   19de0:	add	sp, sp, #8
   19de4:	pop	{r4, r5, r6, r7, r8, pc}
   19de8:	mov	r0, sp
   19dec:	bl	19b98 <isInteger@@Base>
   19df0:	cmp	r0, #0
   19df4:	beq	19e28 <validateInteger@@Base+0x94>
   19df8:	cmp	r6, #0
   19dfc:	ldreq	r3, [sp]
   19e00:	beq	19e14 <validateInteger@@Base+0x80>
   19e04:	ldr	r2, [r6]
   19e08:	ldr	r3, [sp]
   19e0c:	cmp	r2, r3
   19e10:	bgt	19e28 <validateInteger@@Base+0x94>
   19e14:	cmp	r8, #0
   19e18:	beq	19e30 <validateInteger@@Base+0x9c>
   19e1c:	ldr	r2, [r8]
   19e20:	cmp	r2, r3
   19e24:	bge	19e30 <validateInteger@@Base+0x9c>
   19e28:	mov	r0, #0
   19e2c:	b	19dd0 <validateInteger@@Base+0x3c>
   19e30:	str	r3, [r7]
   19e34:	mov	r0, #1
   19e38:	b	19dd0 <validateInteger@@Base+0x3c>
   19e3c:	bl	14fbc <__stack_chk_fail@plt>
   19e40:	andeq	r1, r2, ip, asr r2
   19e44:	andeq	r0, r0, r8, asr #4

00019e48 <validateChoice@@Base>:
   19e48:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19e4c:	mov	r9, r0
   19e50:	mov	r0, r1
   19e54:	mov	r6, r1
   19e58:	mov	r5, r2
   19e5c:	bl	150e8 <strlen@plt>
   19e60:	mov	r7, #0
   19e64:	str	r7, [r9]
   19e68:	subs	r8, r0, #0
   19e6c:	beq	19eb8 <validateChoice@@Base+0x70>
   19e70:	ldr	r1, [r5]
   19e74:	cmp	r1, r7
   19e78:	beq	19ec0 <validateChoice@@Base+0x78>
   19e7c:	mov	r4, r7
   19e80:	b	19e94 <validateChoice@@Base+0x4c>
   19e84:	ldr	r1, [r5, #4]!
   19e88:	mov	r7, r4
   19e8c:	cmp	r1, #0
   19e90:	beq	19ec0 <validateChoice@@Base+0x78>
   19e94:	mov	r0, r6
   19e98:	mov	r2, r8
   19e9c:	bl	15010 <strncasecmp@plt>
   19ea0:	add	r4, r4, #1
   19ea4:	cmp	r0, #0
   19ea8:	bne	19e84 <validateChoice@@Base+0x3c>
   19eac:	str	r7, [r9]
   19eb0:	mov	r0, #1
   19eb4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19eb8:	mov	r0, #1
   19ebc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19ec0:	mov	r0, r1
   19ec4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

00019ec8 <validateFlag@@Base>:
   19ec8:	ldr	ip, [pc, #76]	; 19f1c <validateFlag@@Base+0x54>
   19ecc:	push	{r4, lr}
   19ed0:	add	ip, pc, ip
   19ed4:	ldr	r4, [pc, #68]	; 19f20 <validateFlag@@Base+0x58>
   19ed8:	sub	sp, sp, #16
   19edc:	mov	lr, #0
   19ee0:	ldr	r4, [ip, r4]
   19ee4:	str	r3, [sp]
   19ee8:	str	r2, [sp, #4]
   19eec:	mov	r2, sp
   19ef0:	ldr	r3, [r4]
   19ef4:	str	lr, [sp, #8]
   19ef8:	str	r3, [sp, #12]
   19efc:	bl	19e48 <validateChoice@@Base>
   19f00:	ldr	r2, [sp, #12]
   19f04:	ldr	r3, [r4]
   19f08:	cmp	r2, r3
   19f0c:	bne	19f18 <validateFlag@@Base+0x50>
   19f10:	add	sp, sp, #16
   19f14:	pop	{r4, pc}
   19f18:	bl	14fbc <__stack_chk_fail@plt>
   19f1c:	andeq	r1, r2, r8, lsr #2
   19f20:	andeq	r0, r0, r8, asr #4

00019f24 <validateOnOff@@Base>:
   19f24:	ldr	r2, [pc, #12]	; 19f38 <validateOnOff@@Base+0x14>
   19f28:	ldr	r3, [pc, #12]	; 19f3c <validateOnOff@@Base+0x18>
   19f2c:	add	r2, pc, r2
   19f30:	add	r3, pc, r3
   19f34:	b	19ec8 <validateFlag@@Base>
   19f38:	andeq	sp, r0, r8, asr #8
   19f3c:	andeq	ip, r0, ip, lsr #2

00019f40 <validateYesNo@@Base>:
   19f40:	ldr	r2, [pc, #12]	; 19f54 <validateYesNo@@Base+0x14>
   19f44:	ldr	r3, [pc, #12]	; 19f58 <validateYesNo@@Base+0x18>
   19f48:	add	r2, pc, r2
   19f4c:	add	r3, pc, r3
   19f50:	b	19ec8 <validateFlag@@Base>
   19f54:	andeq	ip, r0, ip, lsl r6
   19f58:	andeq	ip, r0, ip, lsl r6

00019f5c <isFloat@@Base>:
   19f5c:	ldr	r3, [pc, #112]	; 19fd4 <isFloat@@Base+0x78>
   19f60:	ldr	ip, [pc, #112]	; 19fd8 <isFloat@@Base+0x7c>
   19f64:	add	r3, pc, r3
   19f68:	push	{r4, r5, lr}
   19f6c:	sub	sp, sp, #12
   19f70:	ldr	r4, [r3, ip]
   19f74:	mov	r5, r0
   19f78:	ldrb	r2, [r1]
   19f7c:	ldr	r3, [r4]
   19f80:	cmp	r2, #0
   19f84:	moveq	r0, r2
   19f88:	str	r3, [sp, #4]
   19f8c:	beq	19fb8 <isFloat@@Base+0x5c>
   19f90:	mov	r0, r1
   19f94:	mov	r1, sp
   19f98:	bl	14f50 <strtod@plt>
   19f9c:	ldr	r3, [sp]
   19fa0:	ldrb	r3, [r3]
   19fa4:	cmp	r3, #0
   19fa8:	moveq	r0, #1
   19fac:	movne	r0, #0
   19fb0:	vcvteq.f32.f64	s0, d0
   19fb4:	vstreq	s0, [r5]
   19fb8:	ldr	r1, [sp, #4]
   19fbc:	ldr	r3, [r4]
   19fc0:	cmp	r1, r3
   19fc4:	bne	19fd0 <isFloat@@Base+0x74>
   19fc8:	add	sp, sp, #12
   19fcc:	pop	{r4, r5, pc}
   19fd0:	bl	14fbc <__stack_chk_fail@plt>
   19fd4:	muleq	r2, r4, r0
   19fd8:	andeq	r0, r0, r8, asr #4

00019fdc <validateFloat@@Base>:
   19fdc:	ldr	ip, [pc, #168]	; 1a08c <validateFloat@@Base+0xb0>
   19fe0:	push	{r4, r5, r6, r7, r8, lr}
   19fe4:	add	ip, pc, ip
   19fe8:	ldr	r4, [pc, #160]	; 1a090 <validateFloat@@Base+0xb4>
   19fec:	sub	sp, sp, #8
   19ff0:	ldrb	r5, [r1]
   19ff4:	mov	r7, r0
   19ff8:	mov	r6, r2
   19ffc:	mov	r8, r3
   1a000:	ldr	r4, [ip, r4]
   1a004:	cmp	r5, #0
   1a008:	moveq	r0, #1
   1a00c:	ldr	ip, [r4]
   1a010:	str	ip, [sp, #4]
   1a014:	bne	1a030 <validateFloat@@Base+0x54>
   1a018:	ldr	r2, [sp, #4]
   1a01c:	ldr	r3, [r4]
   1a020:	cmp	r2, r3
   1a024:	bne	1a088 <validateFloat@@Base+0xac>
   1a028:	add	sp, sp, #8
   1a02c:	pop	{r4, r5, r6, r7, r8, pc}
   1a030:	mov	r0, sp
   1a034:	bl	19f5c <isFloat@@Base>
   1a038:	cmp	r0, #0
   1a03c:	beq	1a074 <validateFloat@@Base+0x98>
   1a040:	cmp	r6, #0
   1a044:	vldr	s15, [sp]
   1a048:	beq	1a05c <validateFloat@@Base+0x80>
   1a04c:	vldr	s14, [r6]
   1a050:	vcmpe.f32	s14, s15
   1a054:	vmrs	APSR_nzcv, fpscr
   1a058:	bgt	1a074 <validateFloat@@Base+0x98>
   1a05c:	cmp	r8, #0
   1a060:	beq	1a07c <validateFloat@@Base+0xa0>
   1a064:	vldr	s14, [r8]
   1a068:	vcmpe.f32	s14, s15
   1a06c:	vmrs	APSR_nzcv, fpscr
   1a070:	bpl	1a07c <validateFloat@@Base+0xa0>
   1a074:	mov	r0, #0
   1a078:	b	1a018 <validateFloat@@Base+0x3c>
   1a07c:	vstr	s15, [r7]
   1a080:	mov	r0, #1
   1a084:	b	1a018 <validateFloat@@Base+0x3c>
   1a088:	bl	14fbc <__stack_chk_fail@plt>
   1a08c:	andeq	r1, r2, r4, lsl r0
   1a090:	andeq	r0, r0, r8, asr #4

0001a094 <getParameters@@Base>:
   1a094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a098:	subs	r8, r0, #0
   1a09c:	sub	sp, sp, #44	; 0x2c
   1a0a0:	mov	r7, r2
   1a0a4:	str	r1, [sp, #8]
   1a0a8:	beq	1a3c4 <getParameters@@Base+0x330>
   1a0ac:	ldr	r4, [r8]
   1a0b0:	cmp	r4, #0
   1a0b4:	beq	1a3d0 <getParameters@@Base+0x33c>
   1a0b8:	mov	r3, r8
   1a0bc:	mov	r4, #0
   1a0c0:	ldr	r5, [r3, #4]!
   1a0c4:	add	r4, r4, #1
   1a0c8:	cmp	r5, #0
   1a0cc:	bne	1a0c0 <getParameters@@Base+0x2c>
   1a0d0:	add	r0, r4, #1
   1a0d4:	lsl	r0, r0, #2
   1a0d8:	bl	150dc <malloc@plt>
   1a0dc:	cmp	r0, #0
   1a0e0:	str	r0, [sp, #4]
   1a0e4:	beq	1a404 <getParameters@@Base+0x370>
   1a0e8:	cmp	r4, #0
   1a0ec:	beq	1a3e4 <getParameters@@Base+0x350>
   1a0f0:	sub	r6, r0, #4
   1a0f4:	b	1a104 <getParameters@@Base+0x70>
   1a0f8:	add	r5, r5, #1
   1a0fc:	cmp	r4, r5
   1a100:	beq	1a13c <getParameters@@Base+0xa8>
   1a104:	mov	r0, #1
   1a108:	mov	r1, r0
   1a10c:	bl	15070 <calloc@plt>
   1a110:	cmp	r0, #0
   1a114:	str	r0, [r6, #4]!
   1a118:	bne	1a0f8 <getParameters@@Base+0x64>
   1a11c:	bl	184dc <logMallocError@@Base>
   1a120:	cmp	r4, r5
   1a124:	beq	1a13c <getParameters@@Base+0xa8>
   1a128:	ldr	r0, [sp, #4]
   1a12c:	bl	19924 <deallocateStrings@@Base>
   1a130:	mov	r0, #0
   1a134:	add	sp, sp, #44	; 0x2c
   1a138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a13c:	lsl	r5, r5, #2
   1a140:	ldr	r2, [sp, #4]
   1a144:	cmp	r7, #0
   1a148:	mov	r3, #0
   1a14c:	str	r3, [r2, r5]
   1a150:	beq	1a160 <getParameters@@Base+0xcc>
   1a154:	ldrb	r3, [r7]
   1a158:	cmp	r3, #0
   1a15c:	bne	1a16c <getParameters@@Base+0xd8>
   1a160:	ldr	r0, [sp, #4]
   1a164:	add	sp, sp, #44	; 0x2c
   1a168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a16c:	mov	r0, r7
   1a170:	bl	14e54 <__strdup@plt>
   1a174:	cmp	r0, #0
   1a178:	str	r0, [sp, #20]
   1a17c:	beq	1a3fc <getParameters@@Base+0x368>
   1a180:	ldr	r3, [pc, #648]	; 1a410 <getParameters@@Base+0x37c>
   1a184:	mov	r4, r0
   1a188:	ldr	r2, [pc, #644]	; 1a414 <getParameters@@Base+0x380>
   1a18c:	add	r3, pc, r3
   1a190:	str	r3, [sp, #32]
   1a194:	add	r2, pc, r2
   1a198:	ldr	r3, [pc, #632]	; 1a418 <getParameters@@Base+0x384>
   1a19c:	str	r2, [sp, #36]	; 0x24
   1a1a0:	ldr	r2, [pc, #628]	; 1a41c <getParameters@@Base+0x388>
   1a1a4:	add	r3, pc, r3
   1a1a8:	str	r3, [sp, #24]
   1a1ac:	add	r2, pc, r2
   1a1b0:	ldr	r3, [pc, #616]	; 1a420 <getParameters@@Base+0x38c>
   1a1b4:	str	r2, [sp, #28]
   1a1b8:	ldr	r2, [pc, #612]	; 1a424 <getParameters@@Base+0x390>
   1a1bc:	add	r3, pc, r3
   1a1c0:	str	r3, [sp, #12]
   1a1c4:	add	r2, pc, r2
   1a1c8:	str	r2, [sp, #16]
   1a1cc:	b	1a1ec <getParameters@@Base+0x158>
   1a1d0:	ldr	r0, [sp, #8]
   1a1d4:	bl	150e8 <strlen@plt>
   1a1d8:	cmp	r9, r0
   1a1dc:	beq	1a2b4 <getParameters@@Base+0x220>
   1a1e0:	cmp	r5, #0
   1a1e4:	bne	1a2a8 <getParameters@@Base+0x214>
   1a1e8:	add	r4, r6, #1
   1a1ec:	mov	r0, r4
   1a1f0:	mov	r1, #44	; 0x2c
   1a1f4:	bl	152a4 <strchr@plt>
   1a1f8:	rsbs	r5, r0, #1
   1a1fc:	mov	r6, r0
   1a200:	movcc	r5, #0
   1a204:	cmp	r5, #0
   1a208:	strbeq	r5, [r0]
   1a20c:	ldrb	r3, [r4]
   1a210:	cmp	r3, #0
   1a214:	beq	1a1e0 <getParameters@@Base+0x14c>
   1a218:	mov	r0, r4
   1a21c:	mov	r1, #61	; 0x3d
   1a220:	bl	152a4 <strchr@plt>
   1a224:	subs	r3, r0, #0
   1a228:	str	r3, [sp]
   1a22c:	beq	1a398 <getParameters@@Base+0x304>
   1a230:	ldr	r3, [sp]
   1a234:	cmp	r4, r3
   1a238:	beq	1a27c <getParameters@@Base+0x1e8>
   1a23c:	ldr	r2, [sp, #8]
   1a240:	ldr	r3, [sp]
   1a244:	cmp	r2, #0
   1a248:	rsb	r7, r4, r3
   1a24c:	beq	1a2d0 <getParameters@@Base+0x23c>
   1a250:	mov	r0, r4
   1a254:	mov	r1, #58	; 0x3a
   1a258:	mov	r2, r7
   1a25c:	bl	151cc <memchr@plt>
   1a260:	cmp	r0, #0
   1a264:	beq	1a2d0 <getParameters@@Base+0x23c>
   1a268:	subs	r9, r0, r4
   1a26c:	beq	1a370 <getParameters@@Base+0x2dc>
   1a270:	add	sl, r9, #1
   1a274:	subs	r7, r7, sl
   1a278:	bne	1a1d0 <getParameters@@Base+0x13c>
   1a27c:	ldr	r1, [sp, #12]
   1a280:	mov	r2, #5
   1a284:	mov	r0, #0
   1a288:	bl	14fec <dcgettext@plt>
   1a28c:	mov	r3, r4
   1a290:	ldr	r1, [sp, #16]
   1a294:	mov	r2, r0
   1a298:	mov	r0, #3
   1a29c:	bl	183d0 <logMessage@@Base>
   1a2a0:	cmp	r5, #0
   1a2a4:	beq	1a1e8 <getParameters@@Base+0x154>
   1a2a8:	ldr	r0, [sp, #20]
   1a2ac:	bl	14d10 <free@plt>
   1a2b0:	b	1a160 <getParameters@@Base+0xcc>
   1a2b4:	mov	r0, r4
   1a2b8:	mov	r2, r9
   1a2bc:	ldr	r1, [sp, #8]
   1a2c0:	bl	15214 <memcmp@plt>
   1a2c4:	cmp	r0, #0
   1a2c8:	addeq	r4, r4, sl
   1a2cc:	bne	1a1e0 <getParameters@@Base+0x14c>
   1a2d0:	ldr	r1, [r8]
   1a2d4:	cmp	r1, #0
   1a2d8:	beq	1a348 <getParameters@@Base+0x2b4>
   1a2dc:	add	fp, r8, #4
   1a2e0:	mov	sl, r8
   1a2e4:	mov	r9, #0
   1a2e8:	b	1a300 <getParameters@@Base+0x26c>
   1a2ec:	rsb	r9, r8, fp
   1a2f0:	mov	sl, fp
   1a2f4:	ldr	r1, [fp], #4
   1a2f8:	cmp	r1, #0
   1a2fc:	beq	1a348 <getParameters@@Base+0x2b4>
   1a300:	mov	r0, r4
   1a304:	mov	r2, r7
   1a308:	bl	15010 <strncasecmp@plt>
   1a30c:	cmp	r0, #0
   1a310:	bne	1a2ec <getParameters@@Base+0x258>
   1a314:	ldr	r3, [sp]
   1a318:	add	r0, r3, #1
   1a31c:	bl	14e54 <__strdup@plt>
   1a320:	subs	r7, r0, #0
   1a324:	beq	1a3ec <getParameters@@Base+0x358>
   1a328:	ldr	r2, [sp, #4]
   1a32c:	ldr	r0, [r2, r9]
   1a330:	bl	14d10 <free@plt>
   1a334:	ldr	r3, [sp, #4]
   1a338:	str	r7, [r3, r9]
   1a33c:	ldr	r3, [sl]
   1a340:	cmp	r3, #0
   1a344:	bne	1a1e0 <getParameters@@Base+0x14c>
   1a348:	ldr	r1, [sp, #32]
   1a34c:	mov	r2, #5
   1a350:	mov	r0, #0
   1a354:	bl	14fec <dcgettext@plt>
   1a358:	mov	r3, r4
   1a35c:	ldr	r1, [sp, #36]	; 0x24
   1a360:	mov	r2, r0
   1a364:	mov	r0, #3
   1a368:	bl	183d0 <logMessage@@Base>
   1a36c:	b	1a1e0 <getParameters@@Base+0x14c>
   1a370:	ldr	r1, [sp, #24]
   1a374:	mov	r0, r9
   1a378:	mov	r2, #5
   1a37c:	bl	14fec <dcgettext@plt>
   1a380:	mov	r3, r4
   1a384:	ldr	r1, [sp, #28]
   1a388:	mov	r2, r0
   1a38c:	mov	r0, #3
   1a390:	bl	183d0 <logMessage@@Base>
   1a394:	b	1a1e0 <getParameters@@Base+0x14c>
   1a398:	ldr	r1, [pc, #136]	; 1a428 <getParameters@@Base+0x394>
   1a39c:	mov	r2, #5
   1a3a0:	add	r1, pc, r1
   1a3a4:	bl	14fec <dcgettext@plt>
   1a3a8:	ldr	r1, [pc, #124]	; 1a42c <getParameters@@Base+0x398>
   1a3ac:	mov	r3, r4
   1a3b0:	add	r1, pc, r1
   1a3b4:	mov	r2, r0
   1a3b8:	mov	r0, #3
   1a3bc:	bl	183d0 <logMessage@@Base>
   1a3c0:	b	1a1e0 <getParameters@@Base+0x14c>
   1a3c4:	ldr	r8, [pc, #100]	; 1a430 <getParameters@@Base+0x39c>
   1a3c8:	add	r8, pc, r8
   1a3cc:	b	1a0ac <getParameters@@Base+0x18>
   1a3d0:	mov	r0, #4
   1a3d4:	bl	150dc <malloc@plt>
   1a3d8:	cmp	r0, #0
   1a3dc:	str	r0, [sp, #4]
   1a3e0:	beq	1a404 <getParameters@@Base+0x370>
   1a3e4:	mov	r5, r4
   1a3e8:	b	1a140 <getParameters@@Base+0xac>
   1a3ec:	bl	184dc <logMallocError@@Base>
   1a3f0:	ldr	r0, [sp, #20]
   1a3f4:	bl	14d10 <free@plt>
   1a3f8:	b	1a128 <getParameters@@Base+0x94>
   1a3fc:	bl	184dc <logMallocError@@Base>
   1a400:	b	1a128 <getParameters@@Base+0x94>
   1a404:	bl	184dc <logMallocError@@Base>
   1a408:	mov	r0, #0
   1a40c:	b	1a164 <getParameters@@Base+0xd0>
   1a410:	andeq	ip, r0, ip, lsr #8
   1a414:	andeq	ip, r0, r4, lsl #13
   1a418:	strdeq	ip, [r0], -r8
   1a41c:	andeq	ip, r0, ip, ror #12
   1a420:	andeq	ip, r0, r8, asr #7
   1a424:	andeq	ip, r0, r4, asr r6
   1a428:	andeq	ip, r0, ip, asr #3
   1a42c:	andeq	ip, r0, r8, ror #8
   1a430:	muleq	r0, r8, r1

0001a434 <logParameters@@Base>:
   1a434:	cmp	r0, #0
   1a438:	cmpne	r1, #0
   1a43c:	push	{r4, r5, r6, r7, lr}
   1a440:	mov	r4, r1
   1a444:	sub	sp, sp, #12
   1a448:	mov	r6, r2
   1a44c:	beq	1a48c <logParameters@@Base+0x58>
   1a450:	ldr	r3, [r0]
   1a454:	cmp	r3, #0
   1a458:	beq	1a48c <logParameters@@Base+0x58>
   1a45c:	ldr	r7, [pc, #48]	; 1a494 <logParameters@@Base+0x60>
   1a460:	mov	r5, r0
   1a464:	add	r7, pc, r7
   1a468:	ldr	ip, [r4], #4
   1a46c:	mov	r0, #6
   1a470:	mov	r1, r7
   1a474:	mov	r2, r6
   1a478:	str	ip, [sp]
   1a47c:	bl	183d0 <logMessage@@Base>
   1a480:	ldr	r3, [r5, #4]!
   1a484:	cmp	r3, #0
   1a488:	bne	1a468 <logParameters@@Base+0x34>
   1a48c:	add	sp, sp, #12
   1a490:	pop	{r4, r5, r6, r7, pc}
   1a494:	andeq	ip, r0, ip, ror #2

0001a498 <getCurrentTime@@Base>:
   1a498:	ldr	r3, [pc, #84]	; 1a4f4 <getCurrentTime@@Base+0x5c>
   1a49c:	ldr	r2, [pc, #84]	; 1a4f8 <getCurrentTime@@Base+0x60>
   1a4a0:	add	r3, pc, r3
   1a4a4:	push	{r4, r5, lr}
   1a4a8:	sub	sp, sp, #20
   1a4ac:	ldr	r4, [r3, r2]
   1a4b0:	mov	r5, r0
   1a4b4:	add	r1, sp, #4
   1a4b8:	mov	r0, #0
   1a4bc:	ldr	r3, [r4]
   1a4c0:	str	r3, [sp, #12]
   1a4c4:	bl	14f20 <clock_gettime@plt>
   1a4c8:	ldr	r3, [sp, #4]
   1a4cc:	ldr	r2, [sp, #12]
   1a4d0:	ldr	r1, [sp, #8]
   1a4d4:	str	r3, [r5]
   1a4d8:	ldr	r3, [r4]
   1a4dc:	str	r1, [r5, #4]
   1a4e0:	cmp	r2, r3
   1a4e4:	bne	1a4f0 <getCurrentTime@@Base+0x58>
   1a4e8:	add	sp, sp, #20
   1a4ec:	pop	{r4, r5, pc}
   1a4f0:	bl	14fbc <__stack_chk_fail@plt>
   1a4f4:	andeq	r0, r2, r8, asr fp
   1a4f8:	andeq	r0, r0, r8, asr #4

0001a4fc <makeTimeValue@@Base>:
   1a4fc:	ldr	r2, [pc, #164]	; 1a5a8 <makeTimeValue@@Base+0xac>
   1a500:	mov	r3, #0
   1a504:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a508:	add	r2, pc, r2
   1a50c:	ldr	r4, [pc, #152]	; 1a5ac <makeTimeValue@@Base+0xb0>
   1a510:	mov	r5, r0
   1a514:	ldr	lr, [r1, #8]
   1a518:	sub	sp, sp, #52	; 0x34
   1a51c:	mvn	ip, #0
   1a520:	ldr	r4, [r2, r4]
   1a524:	mov	r0, sp
   1a528:	str	lr, [r5, #4]
   1a52c:	ldrh	r9, [r1]
   1a530:	ldrb	r8, [r1, #6]
   1a534:	ldrb	r7, [r1, #5]
   1a538:	sub	r9, r9, #1888	; 0x760
   1a53c:	ldrb	r6, [r1, #4]
   1a540:	sub	r9, r9, #12
   1a544:	ldrb	lr, [r1, #2]
   1a548:	ldr	r2, [r4]
   1a54c:	ldrb	r1, [r1, #3]
   1a550:	str	r3, [sp, #24]
   1a554:	add	r1, r1, #1
   1a558:	str	r2, [sp, #44]	; 0x2c
   1a55c:	str	r3, [sp, #28]
   1a560:	str	r3, [sp, #36]	; 0x24
   1a564:	str	r3, [sp, #40]	; 0x28
   1a568:	str	r9, [sp, #20]
   1a56c:	str	r8, [sp]
   1a570:	str	r1, [sp, #12]
   1a574:	str	r7, [sp, #4]
   1a578:	str	r6, [sp, #8]
   1a57c:	str	lr, [sp, #16]
   1a580:	str	ip, [sp, #32]
   1a584:	bl	15238 <mktime@plt>
   1a588:	ldr	r3, [sp, #44]	; 0x2c
   1a58c:	str	r0, [r5]
   1a590:	ldr	r2, [r4]
   1a594:	cmp	r3, r2
   1a598:	bne	1a5a4 <makeTimeValue@@Base+0xa8>
   1a59c:	add	sp, sp, #52	; 0x34
   1a5a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a5a4:	bl	14fbc <__stack_chk_fail@plt>
   1a5a8:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1a5ac:	andeq	r0, r0, r8, asr #4

0001a5b0 <expandTimeValue@@Base>:
   1a5b0:	ldr	r2, [pc, #148]	; 1a64c <expandTimeValue@@Base+0x9c>
   1a5b4:	ldr	ip, [pc, #148]	; 1a650 <expandTimeValue@@Base+0xa0>
   1a5b8:	add	r2, pc, r2
   1a5bc:	push	{r4, r5, r6, lr}
   1a5c0:	mov	r6, r0
   1a5c4:	sub	sp, sp, #56	; 0x38
   1a5c8:	ldr	r5, [r2, ip]
   1a5cc:	ldr	r3, [r6]
   1a5d0:	add	r0, sp, #56	; 0x38
   1a5d4:	mov	r4, r1
   1a5d8:	add	r1, sp, #8
   1a5dc:	str	r3, [r0, #-52]!	; 0xffffffcc
   1a5e0:	ldr	r3, [r5]
   1a5e4:	str	r3, [sp, #52]	; 0x34
   1a5e8:	bl	14c68 <localtime_r@plt>
   1a5ec:	ldr	r1, [sp, #24]
   1a5f0:	ldr	r3, [sp, #28]
   1a5f4:	ldr	r2, [sp, #20]
   1a5f8:	add	r3, r3, #1888	; 0x760
   1a5fc:	ldr	r0, [r6, #4]
   1a600:	add	r3, r3, #12
   1a604:	strb	r1, [r4, #2]
   1a608:	sub	r2, r2, #1
   1a60c:	ldr	ip, [sp, #52]	; 0x34
   1a610:	strb	r2, [r4, #3]
   1a614:	strh	r3, [r4]
   1a618:	ldr	r3, [r5]
   1a61c:	ldr	r1, [sp, #16]
   1a620:	ldr	r2, [sp, #12]
   1a624:	cmp	ip, r3
   1a628:	ldr	r3, [sp, #8]
   1a62c:	str	r0, [r4, #8]
   1a630:	strb	r1, [r4, #4]
   1a634:	strb	r2, [r4, #5]
   1a638:	strb	r3, [r4, #6]
   1a63c:	bne	1a648 <expandTimeValue@@Base+0x98>
   1a640:	add	sp, sp, #56	; 0x38
   1a644:	pop	{r4, r5, r6, pc}
   1a648:	bl	14fbc <__stack_chk_fail@plt>
   1a64c:	andeq	r0, r2, r0, asr #20
   1a650:	andeq	r0, r0, r8, asr #4

0001a654 <formatSeconds@@Base>:
   1a654:	push	{r4, r5, r6, r7, r8, lr}
   1a658:	sub	sp, sp, #56	; 0x38
   1a65c:	ldr	lr, [pc, #100]	; 1a6c8 <formatSeconds@@Base+0x74>
   1a660:	add	ip, sp, #56	; 0x38
   1a664:	ldr	r4, [pc, #96]	; 1a6cc <formatSeconds@@Base+0x78>
   1a668:	add	r5, sp, #8
   1a66c:	add	lr, pc, lr
   1a670:	mov	r7, r0
   1a674:	mov	r6, r1
   1a678:	mov	r8, r2
   1a67c:	ldr	r4, [lr, r4]
   1a680:	mov	r1, r5
   1a684:	str	r3, [ip, #-52]!	; 0xffffffcc
   1a688:	mov	r0, ip
   1a68c:	ldr	r3, [r4]
   1a690:	str	r3, [sp, #52]	; 0x34
   1a694:	bl	14c68 <localtime_r@plt>
   1a698:	mov	r2, r8
   1a69c:	mov	r3, r5
   1a6a0:	mov	r0, r7
   1a6a4:	mov	r1, r6
   1a6a8:	bl	14e00 <strftime@plt>
   1a6ac:	ldr	r2, [sp, #52]	; 0x34
   1a6b0:	ldr	r3, [r4]
   1a6b4:	cmp	r2, r3
   1a6b8:	bne	1a6c4 <formatSeconds@@Base+0x70>
   1a6bc:	add	sp, sp, #56	; 0x38
   1a6c0:	pop	{r4, r5, r6, r7, r8, pc}
   1a6c4:	bl	14fbc <__stack_chk_fail@plt>
   1a6c8:	andeq	r0, r2, ip, lsl #19
   1a6cc:	andeq	r0, r0, r8, asr #4

0001a6d0 <normalizeTimeValue@@Base>:
   1a6d0:	ldr	r3, [r0, #4]
   1a6d4:	cmp	r3, #0
   1a6d8:	bge	1a704 <normalizeTimeValue@@Base+0x34>
   1a6dc:	ldr	r2, [r0]
   1a6e0:	sub	r2, r2, #1
   1a6e4:	add	r3, r3, #998244352	; 0x3b800000
   1a6e8:	mov	r1, r2
   1a6ec:	add	r3, r3, #1753088	; 0x1ac000
   1a6f0:	sub	r2, r2, #1
   1a6f4:	add	r3, r3, #2560	; 0xa00
   1a6f8:	cmp	r3, #0
   1a6fc:	blt	1a6e4 <normalizeTimeValue@@Base+0x14>
   1a700:	stm	r0, {r1, r3}
   1a704:	movw	r1, #51711	; 0xc9ff
   1a708:	movt	r1, #15258	; 0x3b9a
   1a70c:	cmp	r3, r1
   1a710:	bxle	lr
   1a714:	mov	r2, #13824	; 0x3600
   1a718:	movt	r2, #50277	; 0xc465
   1a71c:	add	r2, r3, r2
   1a720:	ldr	ip, [r0]
   1a724:	cmp	r2, r1
   1a728:	add	r1, ip, #1
   1a72c:	addgt	ip, ip, #2
   1a730:	movgt	r2, #27648	; 0x6c00
   1a734:	movtgt	r2, #35018	; 0x88ca
   1a738:	addgt	r2, r3, r2
   1a73c:	movle	ip, r1
   1a740:	str	r2, [r0, #4]
   1a744:	str	ip, [r0]
   1a748:	bx	lr

0001a74c <adjustTimeValue@@Base>:
   1a74c:	movw	r3, #19923	; 0x4dd3
   1a750:	movt	r3, #4194	; 0x1062
   1a754:	ldr	ip, [pc, #148]	; 1a7f0 <adjustTimeValue@@Base+0xa4>
   1a758:	smull	r2, r3, r3, r1
   1a75c:	add	ip, pc, ip
   1a760:	push	{r4, r5, r6, lr}
   1a764:	asr	r6, r1, #31
   1a768:	ldr	r5, [pc, #132]	; 1a7f4 <adjustTimeValue@@Base+0xa8>
   1a76c:	sub	sp, sp, #16
   1a770:	mov	lr, #1000	; 0x3e8
   1a774:	movw	r2, #16960	; 0x4240
   1a778:	rsb	r3, r6, r3, asr #6
   1a77c:	movt	r2, #15
   1a780:	ldr	r5, [ip, r5]
   1a784:	mov	r4, r0
   1a788:	str	r3, [sp, #4]
   1a78c:	mls	r3, lr, r3, r1
   1a790:	ldr	r1, [r5]
   1a794:	str	r1, [sp, #12]
   1a798:	mul	r2, r2, r3
   1a79c:	str	r2, [sp, #8]
   1a7a0:	bl	1a6d0 <normalizeTimeValue@@Base>
   1a7a4:	add	r0, sp, #4
   1a7a8:	bl	1a6d0 <normalizeTimeValue@@Base>
   1a7ac:	ldr	r2, [r4, #4]
   1a7b0:	ldr	ip, [r4]
   1a7b4:	mov	r0, r4
   1a7b8:	ldr	r1, [sp, #4]
   1a7bc:	ldr	r3, [sp, #8]
   1a7c0:	add	r1, ip, r1
   1a7c4:	str	r1, [r4]
   1a7c8:	add	r3, r2, r3
   1a7cc:	str	r3, [r4, #4]
   1a7d0:	bl	1a6d0 <normalizeTimeValue@@Base>
   1a7d4:	ldr	r2, [sp, #12]
   1a7d8:	ldr	r3, [r5]
   1a7dc:	cmp	r2, r3
   1a7e0:	bne	1a7ec <adjustTimeValue@@Base+0xa0>
   1a7e4:	add	sp, sp, #16
   1a7e8:	pop	{r4, r5, r6, pc}
   1a7ec:	bl	14fbc <__stack_chk_fail@plt>
   1a7f0:	muleq	r2, ip, r8
   1a7f4:	andeq	r0, r0, r8, asr #4

0001a7f8 <compareTimeValues@@Base>:
   1a7f8:	ldr	r2, [r0]
   1a7fc:	ldr	r3, [r1]
   1a800:	cmp	r2, r3
   1a804:	blt	1a830 <compareTimeValues@@Base+0x38>
   1a808:	bgt	1a828 <compareTimeValues@@Base+0x30>
   1a80c:	ldr	r2, [r0, #4]
   1a810:	ldr	r3, [r1, #4]
   1a814:	cmp	r2, r3
   1a818:	blt	1a830 <compareTimeValues@@Base+0x38>
   1a81c:	movle	r0, #0
   1a820:	movgt	r0, #1
   1a824:	bx	lr
   1a828:	mov	r0, #1
   1a82c:	bx	lr
   1a830:	mvn	r0, #0
   1a834:	bx	lr

0001a838 <millisecondsBetween@@Base>:
   1a838:	ldr	r2, [pc, #124]	; 1a8bc <millisecondsBetween@@Base+0x84>
   1a83c:	mov	r3, r0
   1a840:	ldr	ip, [pc, #120]	; 1a8c0 <millisecondsBetween@@Base+0x88>
   1a844:	add	r2, pc, r2
   1a848:	push	{r4, r5, lr}
   1a84c:	sub	sp, sp, #20
   1a850:	ldr	r4, [r2, ip]
   1a854:	add	r0, sp, #4
   1a858:	ldr	r5, [r1]
   1a85c:	ldr	lr, [r1, #4]
   1a860:	ldm	r3, {r1, r2}
   1a864:	ldr	r3, [r4]
   1a868:	rsb	r1, r1, r5
   1a86c:	rsb	r2, r2, lr
   1a870:	stmib	sp, {r1, r2}
   1a874:	str	r3, [sp, #12]
   1a878:	bl	1a6d0 <normalizeTimeValue@@Base>
   1a87c:	ldr	r3, [sp, #8]
   1a880:	movw	r2, #56963	; 0xde83
   1a884:	movt	r2, #17179	; 0x431b
   1a888:	ldr	r5, [sp, #12]
   1a88c:	ldr	ip, [r4]
   1a890:	mov	r0, #1000	; 0x3e8
   1a894:	smull	r1, r2, r2, r3
   1a898:	asr	r3, r3, #31
   1a89c:	ldr	r1, [sp, #4]
   1a8a0:	cmp	r5, ip
   1a8a4:	rsb	r3, r3, r2, asr #18
   1a8a8:	mla	r0, r0, r1, r3
   1a8ac:	bne	1a8b8 <millisecondsBetween@@Base+0x80>
   1a8b0:	add	sp, sp, #20
   1a8b4:	pop	{r4, r5, pc}
   1a8b8:	bl	14fbc <__stack_chk_fail@plt>
   1a8bc:			; <UNDEFINED> instruction: 0x000207b4
   1a8c0:	andeq	r0, r0, r8, asr #4

0001a8c4 <getMonotonicTime@@Base>:
   1a8c4:	ldr	r3, [pc, #84]	; 1a920 <getMonotonicTime@@Base+0x5c>
   1a8c8:	ldr	r2, [pc, #84]	; 1a924 <getMonotonicTime@@Base+0x60>
   1a8cc:	add	r3, pc, r3
   1a8d0:	push	{r4, r5, lr}
   1a8d4:	sub	sp, sp, #20
   1a8d8:	ldr	r4, [r3, r2]
   1a8dc:	mov	r5, r0
   1a8e0:	add	r1, sp, #4
   1a8e4:	mov	r0, #1
   1a8e8:	ldr	r3, [r4]
   1a8ec:	str	r3, [sp, #12]
   1a8f0:	bl	14f20 <clock_gettime@plt>
   1a8f4:	ldr	r3, [sp, #4]
   1a8f8:	ldr	r2, [sp, #12]
   1a8fc:	ldr	r1, [sp, #8]
   1a900:	str	r3, [r5]
   1a904:	ldr	r3, [r4]
   1a908:	str	r1, [r5, #4]
   1a90c:	cmp	r2, r3
   1a910:	bne	1a91c <getMonotonicTime@@Base+0x58>
   1a914:	add	sp, sp, #20
   1a918:	pop	{r4, r5, pc}
   1a91c:	bl	14fbc <__stack_chk_fail@plt>
   1a920:	andeq	r0, r2, ip, lsr #14
   1a924:	andeq	r0, r0, r8, asr #4

0001a928 <getMonotonicElapsed@@Base>:
   1a928:	ldr	r3, [pc, #80]	; 1a980 <getMonotonicElapsed@@Base+0x58>
   1a92c:	ldr	r2, [pc, #80]	; 1a984 <getMonotonicElapsed@@Base+0x5c>
   1a930:	add	r3, pc, r3
   1a934:	push	{r4, r5, r6, lr}
   1a938:	sub	sp, sp, #16
   1a93c:	ldr	r4, [r3, r2]
   1a940:	add	r5, sp, #4
   1a944:	mov	r6, r0
   1a948:	mov	r0, r5
   1a94c:	ldr	r3, [r4]
   1a950:	str	r3, [sp, #12]
   1a954:	bl	1a8c4 <getMonotonicTime@@Base>
   1a958:	mov	r0, r6
   1a95c:	mov	r1, r5
   1a960:	bl	1a838 <millisecondsBetween@@Base>
   1a964:	ldr	r2, [sp, #12]
   1a968:	ldr	r3, [r4]
   1a96c:	cmp	r2, r3
   1a970:	bne	1a97c <getMonotonicElapsed@@Base+0x54>
   1a974:	add	sp, sp, #16
   1a978:	pop	{r4, r5, r6, pc}
   1a97c:	bl	14fbc <__stack_chk_fail@plt>
   1a980:	andeq	r0, r2, r8, asr #13
   1a984:	andeq	r0, r0, r8, asr #4

0001a988 <restartTimePeriod@@Base>:
   1a988:	b	1a8c4 <getMonotonicTime@@Base>

0001a98c <startTimePeriod@@Base>:
   1a98c:	str	r1, [r0, #8]
   1a990:	b	1a988 <restartTimePeriod@@Base>

0001a994 <afterTimePeriod@@Base>:
   1a994:	push	{r3, r4, r5, lr}
   1a998:	mov	r4, r1
   1a99c:	mov	r5, r0
   1a9a0:	bl	1a928 <getMonotonicElapsed@@Base>
   1a9a4:	cmp	r4, #0
   1a9a8:	strne	r0, [r4]
   1a9ac:	ldr	r3, [r5, #8]
   1a9b0:	cmp	r0, r3
   1a9b4:	movlt	r0, #0
   1a9b8:	movge	r0, #1
   1a9bc:	pop	{r3, r4, r5, pc}

0001a9c0 <approximateDelay@@Base>:
   1a9c0:	ldr	r3, [pc, #160]	; 1aa68 <approximateDelay@@Base+0xa8>
   1a9c4:	subs	r2, r0, #0
   1a9c8:	ldr	r1, [pc, #156]	; 1aa6c <approximateDelay@@Base+0xac>
   1a9cc:	add	r3, pc, r3
   1a9d0:	push	{r4, r5, lr}
   1a9d4:	sub	sp, sp, #20
   1a9d8:	ldr	r4, [r3, r1]
   1a9dc:	ldr	r3, [r4]
   1a9e0:	str	r3, [sp, #12]
   1a9e4:	ble	1aa2c <approximateDelay@@Base+0x6c>
   1a9e8:	movw	r1, #19923	; 0x4dd3
   1a9ec:	movt	r1, #4194	; 0x1062
   1a9f0:	asr	r5, r2, #31
   1a9f4:	mov	lr, #1000	; 0x3e8
   1a9f8:	smull	r3, ip, r1, r2
   1a9fc:	movw	r3, #16960	; 0x4240
   1aa00:	movt	r3, #15
   1aa04:	add	r0, sp, #4
   1aa08:	mov	r1, #0
   1aa0c:	rsb	ip, r5, ip, asr #6
   1aa10:	str	ip, [sp, #4]
   1aa14:	mls	r2, lr, ip, r2
   1aa18:	mul	r3, r3, r2
   1aa1c:	str	r3, [sp, #8]
   1aa20:	bl	14df4 <nanosleep@plt>
   1aa24:	cmn	r0, #1
   1aa28:	beq	1aa44 <approximateDelay@@Base+0x84>
   1aa2c:	ldr	r2, [sp, #12]
   1aa30:	ldr	r3, [r4]
   1aa34:	cmp	r2, r3
   1aa38:	bne	1aa64 <approximateDelay@@Base+0xa4>
   1aa3c:	add	sp, sp, #20
   1aa40:	pop	{r4, r5, pc}
   1aa44:	bl	151b4 <__errno_location@plt>
   1aa48:	ldr	r3, [r0]
   1aa4c:	cmp	r3, #4
   1aa50:	beq	1aa2c <approximateDelay@@Base+0x6c>
   1aa54:	ldr	r0, [pc, #20]	; 1aa70 <approximateDelay@@Base+0xb0>
   1aa58:	add	r0, pc, r0
   1aa5c:	bl	18498 <logSystemError@@Base>
   1aa60:	b	1aa2c <approximateDelay@@Base+0x6c>
   1aa64:	bl	14fbc <__stack_chk_fail@plt>
   1aa68:	andeq	r0, r2, ip, lsr #12
   1aa6c:	andeq	r0, r0, r8, asr #4
   1aa70:	andeq	fp, r0, r4, lsl #23

0001aa74 <accurateDelay@@Base>:
   1aa74:	ldr	r3, [pc, #184]	; 1ab34 <accurateDelay@@Base+0xc0>
   1aa78:	ldr	r2, [pc, #184]	; 1ab38 <accurateDelay@@Base+0xc4>
   1aa7c:	push	{r4, r5, r6, r7, lr}
   1aa80:	add	r3, pc, r3
   1aa84:	ldr	r4, [pc, #176]	; 1ab3c <accurateDelay@@Base+0xc8>
   1aa88:	sub	sp, sp, #20
   1aa8c:	ldr	r6, [r3, r2]
   1aa90:	mov	r5, r0
   1aa94:	add	r4, pc, r4
   1aa98:	ldr	r1, [r4]
   1aa9c:	ldr	r3, [r6]
   1aaa0:	cmp	r1, #0
   1aaa4:	str	r3, [sp, #12]
   1aaa8:	movne	r7, r1
   1aaac:	bne	1aad8 <accurateDelay@@Base+0x64>
   1aab0:	mov	r0, #2
   1aab4:	bl	15064 <sysconf@plt>
   1aab8:	mov	r1, r0
   1aabc:	mov	r0, #1000	; 0x3e8
   1aac0:	bl	258a8 <handleBestCharacter@@Base+0x26c>
   1aac4:	cmp	r0, #0
   1aac8:	strne	r0, [r4]
   1aacc:	movne	r7, r0
   1aad0:	moveq	r7, #1
   1aad4:	streq	r7, [r4]
   1aad8:	mov	r1, r5
   1aadc:	mov	r0, sp
   1aae0:	bl	1a98c <startTimePeriod@@Base>
   1aae4:	cmp	r7, r5
   1aae8:	ble	1ab18 <accurateDelay@@Base+0xa4>
   1aaec:	mov	r0, sp
   1aaf0:	mov	r1, #0
   1aaf4:	bl	1a994 <afterTimePeriod@@Base>
   1aaf8:	cmp	r0, #0
   1aafc:	beq	1aaec <accurateDelay@@Base+0x78>
   1ab00:	ldr	r2, [sp, #12]
   1ab04:	ldr	r3, [r6]
   1ab08:	cmp	r2, r3
   1ab0c:	bne	1ab30 <accurateDelay@@Base+0xbc>
   1ab10:	add	sp, sp, #20
   1ab14:	pop	{r4, r5, r6, r7, pc}
   1ab18:	mov	r0, r5
   1ab1c:	mov	r1, r7
   1ab20:	bl	258a8 <handleBestCharacter@@Base+0x26c>
   1ab24:	mul	r0, r0, r7
   1ab28:	bl	1a9c0 <approximateDelay@@Base>
   1ab2c:	b	1aaec <accurateDelay@@Base+0x78>
   1ab30:	bl	14fbc <__stack_chk_fail@plt>
   1ab34:	andeq	r0, r2, r8, ror r5
   1ab38:	andeq	r0, r0, r8, asr #4
   1ab3c:	andeq	r0, r2, r8, lsr #17
   1ab40:	ldr	r3, [pc, #236]	; 1ac34 <accurateDelay@@Base+0x1c0>
   1ab44:	ldr	ip, [pc, #236]	; 1ac38 <accurateDelay@@Base+0x1c4>
   1ab48:	add	r3, pc, r3
   1ab4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ab50:	sub	sp, sp, #16
   1ab54:	ldr	r5, [r3, ip]
   1ab58:	add	sl, sp, #4
   1ab5c:	mov	r9, r0
   1ab60:	mov	r6, r1
   1ab64:	mov	r8, r2
   1ab68:	mov	r7, #0
   1ab6c:	ldr	r3, [r5]
   1ab70:	str	r3, [sp, #12]
   1ab74:	cmp	r8, #0
   1ab78:	mov	r1, #1
   1ab7c:	mov	r0, sl
   1ab80:	mov	r2, r6
   1ab84:	moveq	r3, r1
   1ab88:	movne	r3, #4
   1ab8c:	str	r7, [sp, #8]
   1ab90:	str	r9, [sp, #4]
   1ab94:	strh	r3, [sp, #8]
   1ab98:	bl	14ec0 <poll@plt>
   1ab9c:	cmn	r0, #1
   1aba0:	mov	r4, r0
   1aba4:	bne	1abe4 <accurateDelay@@Base+0x170>
   1aba8:	bl	151b4 <__errno_location@plt>
   1abac:	ldr	r3, [r0]
   1abb0:	cmp	r3, #4
   1abb4:	beq	1ab74 <accurateDelay@@Base+0x100>
   1abb8:	ldr	r0, [pc, #124]	; 1ac3c <accurateDelay@@Base+0x1c8>
   1abbc:	mov	r4, #0
   1abc0:	add	r0, pc, r0
   1abc4:	bl	18498 <logSystemError@@Base>
   1abc8:	ldr	r2, [sp, #12]
   1abcc:	mov	r0, r4
   1abd0:	ldr	r3, [r5]
   1abd4:	cmp	r2, r3
   1abd8:	bne	1ac30 <accurateDelay@@Base+0x1bc>
   1abdc:	add	sp, sp, #16
   1abe0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1abe4:	cmp	r0, #0
   1abe8:	movne	r4, #1
   1abec:	bne	1abc8 <accurateDelay@@Base+0x154>
   1abf0:	cmp	r6, #0
   1abf4:	ble	1ac20 <accurateDelay@@Base+0x1ac>
   1abf8:	ldr	r3, [pc, #64]	; 1ac40 <accurateDelay@@Base+0x1cc>
   1abfc:	cmp	r6, #1
   1ac00:	add	r3, pc, r3
   1ac04:	ldrne	r3, [pc, #56]	; 1ac44 <accurateDelay@@Base+0x1d0>
   1ac08:	addne	r3, pc, r3
   1ac0c:	ldr	r1, [pc, #52]	; 1ac48 <accurateDelay@@Base+0x1d4>
   1ac10:	mov	r2, r6
   1ac14:	mov	r0, #7
   1ac18:	add	r1, pc, r1
   1ac1c:	bl	183d0 <logMessage@@Base>
   1ac20:	bl	151b4 <__errno_location@plt>
   1ac24:	mov	r3, #11
   1ac28:	str	r3, [r0]
   1ac2c:	b	1abc8 <accurateDelay@@Base+0x154>
   1ac30:	bl	14fbc <__stack_chk_fail@plt>
   1ac34:			; <UNDEFINED> instruction: 0x000204b0
   1ac38:	andeq	r0, r0, r8, asr #4
   1ac3c:	andeq	fp, r0, r4, asr #20
   1ac40:	andeq	fp, r0, r8, ror #19
   1ac44:	andeq	fp, r0, ip, ror #19
   1ac48:	strdeq	fp, [r0], -r4

0001ac4c <awaitInput@@Base>:
   1ac4c:	mov	r2, #0
   1ac50:	b	1ab40 <accurateDelay@@Base+0xcc>

0001ac54 <readChunk@@Base>:
   1ac54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ac58:	subs	r4, r3, #0
   1ac5c:	mov	r6, r0
   1ac60:	mov	r7, r1
   1ac64:	mov	r5, r2
   1ac68:	ldr	r9, [sp, #32]
   1ac6c:	ldr	r8, [sp, #36]	; 0x24
   1ac70:	bne	1ac90 <readChunk@@Base+0x3c>
   1ac74:	b	1ad28 <readChunk@@Base+0xd4>
   1ac78:	ldr	r3, [r5]
   1ac7c:	rsb	r4, r0, r4
   1ac80:	add	r0, r3, r0
   1ac84:	str	r0, [r5]
   1ac88:	cmp	r4, #0
   1ac8c:	beq	1ad28 <readChunk@@Base+0xd4>
   1ac90:	ldr	r1, [r5]
   1ac94:	mov	r0, r6
   1ac98:	mov	r2, r4
   1ac9c:	add	r1, r7, r1
   1aca0:	bl	14e90 <read@plt>
   1aca4:	cmn	r0, #1
   1aca8:	beq	1acfc <readChunk@@Base+0xa8>
   1acac:	cmp	r0, #0
   1acb0:	bne	1ac78 <readChunk@@Base+0x24>
   1acb4:	ldr	sl, [r5]
   1acb8:	mov	r0, r6
   1acbc:	cmp	sl, #0
   1acc0:	moveq	sl, r9
   1acc4:	movne	sl, r8
   1acc8:	cmp	sl, #0
   1accc:	mov	r1, sl
   1acd0:	beq	1ad34 <readChunk@@Base+0xe0>
   1acd4:	bl	1ac4c <awaitInput@@Base>
   1acd8:	subs	sl, r0, #0
   1acdc:	bne	1ac88 <readChunk@@Base+0x34>
   1ace0:	ldr	r1, [pc, #92]	; 1ad44 <readChunk@@Base+0xf0>
   1ace4:	mov	r0, #4
   1ace8:	ldr	r2, [r5]
   1acec:	add	r1, pc, r1
   1acf0:	bl	183d0 <logMessage@@Base>
   1acf4:	mov	r0, sl
   1acf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1acfc:	bl	151b4 <__errno_location@plt>
   1ad00:	ldr	r3, [r0]
   1ad04:	cmp	r3, #4
   1ad08:	beq	1ac88 <readChunk@@Base+0x34>
   1ad0c:	cmp	r3, #11
   1ad10:	beq	1acb4 <readChunk@@Base+0x60>
   1ad14:	ldr	r0, [pc, #44]	; 1ad48 <readChunk@@Base+0xf4>
   1ad18:	mov	sl, #0
   1ad1c:	add	r0, pc, r0
   1ad20:	bl	18498 <logSystemError@@Base>
   1ad24:	b	1acf4 <readChunk@@Base+0xa0>
   1ad28:	mov	sl, #1
   1ad2c:	mov	r0, sl
   1ad30:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ad34:	bl	151b4 <__errno_location@plt>
   1ad38:	mov	r3, #11
   1ad3c:	str	r3, [r0]
   1ad40:	b	1acf4 <readChunk@@Base+0xa0>
   1ad44:	andeq	fp, r0, r4, lsr r9
   1ad48:			; <UNDEFINED> instruction: 0x0000b2b4

0001ad4c <readData@@Base>:
   1ad4c:	push	{r4, r5, r6, lr}
   1ad50:	sub	sp, sp, #16
   1ad54:	ldr	lr, [pc, #116]	; 1add0 <readData@@Base+0x84>
   1ad58:	add	ip, sp, #16
   1ad5c:	ldr	r4, [pc, #112]	; 1add4 <readData@@Base+0x88>
   1ad60:	mov	r5, r2
   1ad64:	add	lr, pc, lr
   1ad68:	ldr	r6, [sp, #32]
   1ad6c:	mov	r2, #0
   1ad70:	ldr	r4, [lr, r4]
   1ad74:	str	r3, [sp]
   1ad78:	mov	r3, r5
   1ad7c:	str	r2, [ip, #-8]!
   1ad80:	mov	r2, ip
   1ad84:	ldr	ip, [r4]
   1ad88:	str	r6, [sp, #4]
   1ad8c:	str	ip, [sp, #12]
   1ad90:	bl	1ac54 <readChunk@@Base>
   1ad94:	cmp	r0, #0
   1ad98:	movne	r0, r5
   1ad9c:	bne	1adb4 <readData@@Base+0x68>
   1ada0:	bl	151b4 <__errno_location@plt>
   1ada4:	ldr	r3, [r0]
   1ada8:	cmp	r3, #11
   1adac:	ldreq	r0, [sp, #8]
   1adb0:	mvnne	r0, #0
   1adb4:	ldr	r2, [sp, #12]
   1adb8:	ldr	r3, [r4]
   1adbc:	cmp	r2, r3
   1adc0:	bne	1adcc <readData@@Base+0x80>
   1adc4:	add	sp, sp, #16
   1adc8:	pop	{r4, r5, r6, pc}
   1adcc:	bl	14fbc <__stack_chk_fail@plt>
   1add0:	muleq	r2, r4, r2
   1add4:	andeq	r0, r0, r8, asr #4

0001add8 <awaitOutput@@Base>:
   1add8:	mov	r2, #1
   1addc:	b	1ab40 <accurateDelay@@Base+0xcc>

0001ade0 <writeData@@Base>:
   1ade0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1ade4:	subs	r6, r2, #0
   1ade8:	mov	r4, r0
   1adec:	mov	r9, r1
   1adf0:	beq	1aea8 <writeData@@Base+0xc8>
   1adf4:	mov	r7, r1
   1adf8:	mov	r8, #11
   1adfc:	mov	r0, r4
   1ae00:	mov	r1, r7
   1ae04:	mov	r2, r6
   1ae08:	bl	15130 <write@plt>
   1ae0c:	cmn	r0, #1
   1ae10:	mov	r5, r0
   1ae14:	beq	1ae74 <writeData@@Base+0x94>
   1ae18:	cmp	r0, #0
   1ae1c:	bne	1ae60 <writeData@@Base+0x80>
   1ae20:	bl	151b4 <__errno_location@plt>
   1ae24:	str	r8, [r0]
   1ae28:	b	1ae3c <writeData@@Base+0x5c>
   1ae2c:	bl	151b4 <__errno_location@plt>
   1ae30:	ldr	r3, [r0]
   1ae34:	cmp	r3, #11
   1ae38:	bne	1aea0 <writeData@@Base+0xc0>
   1ae3c:	mov	r0, r4
   1ae40:	movw	r1, #15000	; 0x3a98
   1ae44:	bl	1add8 <awaitOutput@@Base>
   1ae48:	cmp	r0, #0
   1ae4c:	beq	1ae2c <writeData@@Base+0x4c>
   1ae50:	cmp	r6, #0
   1ae54:	bne	1adfc <writeData@@Base+0x1c>
   1ae58:	rsb	r0, r9, r7
   1ae5c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ae60:	rsb	r6, r0, r6
   1ae64:	add	r7, r7, r0
   1ae68:	cmp	r6, #0
   1ae6c:	bne	1adfc <writeData@@Base+0x1c>
   1ae70:	b	1ae58 <writeData@@Base+0x78>
   1ae74:	bl	151b4 <__errno_location@plt>
   1ae78:	ldr	r3, [r0]
   1ae7c:	cmp	r3, #4
   1ae80:	beq	1ae50 <writeData@@Base+0x70>
   1ae84:	cmp	r3, #11
   1ae88:	beq	1ae3c <writeData@@Base+0x5c>
   1ae8c:	ldr	r0, [pc, #28]	; 1aeb0 <writeData@@Base+0xd0>
   1ae90:	add	r0, pc, r0
   1ae94:	bl	18498 <logSystemError@@Base>
   1ae98:	mov	r0, r5
   1ae9c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1aea0:	mvn	r0, #0
   1aea4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1aea8:	mov	r0, r6
   1aeac:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1aeb0:			; <UNDEFINED> instruction: 0x0000b7b0

0001aeb4 <changeOpenFlags@@Base>:
   1aeb4:	push	{r4, r5, r6, lr}
   1aeb8:	mov	r5, r1
   1aebc:	mov	r1, #3
   1aec0:	mov	r6, r2
   1aec4:	mov	r4, r0
   1aec8:	bl	14e24 <fcntl@plt>
   1aecc:	cmn	r0, #1
   1aed0:	beq	1aef8 <changeOpenFlags@@Base+0x44>
   1aed4:	bic	r2, r0, r5
   1aed8:	mov	r1, #4
   1aedc:	mov	r0, r4
   1aee0:	orr	r2, r2, r6
   1aee4:	bl	14e24 <fcntl@plt>
   1aee8:	cmn	r0, #1
   1aeec:	beq	1af0c <changeOpenFlags@@Base+0x58>
   1aef0:	mov	r0, #1
   1aef4:	pop	{r4, r5, r6, pc}
   1aef8:	ldr	r0, [pc, #32]	; 1af20 <changeOpenFlags@@Base+0x6c>
   1aefc:	add	r0, pc, r0
   1af00:	bl	18498 <logSystemError@@Base>
   1af04:	mov	r0, #0
   1af08:	pop	{r4, r5, r6, pc}
   1af0c:	ldr	r0, [pc, #16]	; 1af24 <changeOpenFlags@@Base+0x70>
   1af10:	add	r0, pc, r0
   1af14:	bl	18498 <logSystemError@@Base>
   1af18:	mov	r0, #0
   1af1c:	pop	{r4, r5, r6, pc}
   1af20:	andeq	fp, r0, r4, asr r7
   1af24:	andeq	fp, r0, r8, lsr r7

0001af28 <setOpenFlags@@Base>:
   1af28:	subs	r3, r1, #0
   1af2c:	mov	r1, r2
   1af30:	bne	1af3c <setOpenFlags@@Base+0x14>
   1af34:	mov	r2, r3
   1af38:	b	1aeb4 <changeOpenFlags@@Base>
   1af3c:	mov	r1, #0
   1af40:	b	1aeb4 <changeOpenFlags@@Base>

0001af44 <setBlockingIo@@Base>:
   1af44:	rsbs	r1, r1, #1
   1af48:	mov	r2, #2048	; 0x800
   1af4c:	push	{r3, lr}
   1af50:	movcc	r1, #0
   1af54:	bl	1af28 <setOpenFlags@@Base>
   1af58:	adds	r0, r0, #0
   1af5c:	movne	r0, #1
   1af60:	pop	{r3, pc}

0001af64 <setCloseOnExec@@Base>:
   1af64:	adds	r2, r1, #0
   1af68:	mov	r1, #2
   1af6c:	push	{r3, lr}
   1af70:	movne	r2, #1
   1af74:	bl	14e24 <fcntl@plt>
   1af78:	adds	r0, r0, #1
   1af7c:	movne	r0, #1
   1af80:	pop	{r3, pc}
   1af84:	push	{lr}		; (str lr, [sp, #-4]!)
   1af88:	sub	sp, sp, #12
   1af8c:	add	r2, sp, #8
   1af90:	str	r1, [r2, #-4]!
   1af94:	movw	r1, #20485	; 0x5005
   1af98:	movt	r1, #49156	; 0xc004
   1af9c:	bl	14f14 <ioctl@plt>
   1afa0:	cmn	r0, #1
   1afa4:	moveq	r0, #8
   1afa8:	beq	1afe0 <setCloseOnExec@@Base+0x7c>
   1afac:	ldr	r1, [sp, #4]
   1afb0:	cmp	r1, #8
   1afb4:	beq	1afe8 <setCloseOnExec@@Base+0x84>
   1afb8:	ldr	r3, [pc, #48]	; 1aff0 <setCloseOnExec@@Base+0x8c>
   1afbc:	add	r3, pc, r3
   1afc0:	b	1afd0 <setCloseOnExec@@Base+0x6c>
   1afc4:	ldr	r2, [r3, #4]
   1afc8:	cmp	r2, r1
   1afcc:	beq	1afe0 <setCloseOnExec@@Base+0x7c>
   1afd0:	ldr	r0, [r3, #8]
   1afd4:	add	r3, r3, #8
   1afd8:	cmp	r0, #8
   1afdc:	bne	1afc4 <setCloseOnExec@@Base+0x60>
   1afe0:	add	sp, sp, #12
   1afe4:	pop	{pc}		; (ldr pc, [sp], #4)
   1afe8:	mov	r0, #0
   1afec:	b	1afe0 <setCloseOnExec@@Base+0x7c>
   1aff0:	muleq	r0, ip, r6

0001aff4 <getProgramPath@@Base>:
   1aff4:	push	{r3, r4, r5, r6, r7, lr}
   1aff8:	mov	r6, #0
   1affc:	ldr	r7, [pc, #184]	; 1b0bc <getProgramPath@@Base+0xc8>
   1b000:	mov	r4, #128	; 0x80
   1b004:	add	r7, pc, r7
   1b008:	b	1b028 <getProgramPath@@Base+0x34>
   1b00c:	bl	14dd0 <readlink@plt>
   1b010:	mov	r6, r5
   1b014:	cmn	r0, #1
   1b018:	mov	r3, r0
   1b01c:	beq	1b060 <getProgramPath@@Base+0x6c>
   1b020:	cmp	r4, r0
   1b024:	bhi	1b09c <getProgramPath@@Base+0xa8>
   1b028:	lsl	r4, r4, #1
   1b02c:	mov	r0, r6
   1b030:	mov	r1, r4
   1b034:	bl	14f2c <realloc@plt>
   1b038:	mov	r2, r4
   1b03c:	subs	r5, r0, #0
   1b040:	mov	r0, r7
   1b044:	mov	r1, r5
   1b048:	bne	1b00c <getProgramPath@@Base+0x18>
   1b04c:	bl	184dc <logMallocError@@Base>
   1b050:	cmp	r6, #0
   1b054:	bne	1b084 <getProgramPath@@Base+0x90>
   1b058:	mov	r0, r6
   1b05c:	pop	{r3, r4, r5, r6, r7, pc}
   1b060:	bl	151b4 <__errno_location@plt>
   1b064:	ldr	r3, [r0]
   1b068:	cmp	r3, #2
   1b06c:	beq	1b088 <getProgramPath@@Base+0x94>
   1b070:	ldr	r0, [pc, #72]	; 1b0c0 <getProgramPath@@Base+0xcc>
   1b074:	mov	r6, #0
   1b078:	add	r0, pc, r0
   1b07c:	bl	18498 <logSystemError@@Base>
   1b080:	b	1b08c <getProgramPath@@Base+0x98>
   1b084:	mov	r5, r6
   1b088:	mov	r6, #0
   1b08c:	mov	r0, r5
   1b090:	bl	14d10 <free@plt>
   1b094:	mov	r0, r6
   1b098:	pop	{r3, r4, r5, r6, r7, pc}
   1b09c:	mov	r2, #0
   1b0a0:	mov	r0, r5
   1b0a4:	strb	r2, [r5, r3]
   1b0a8:	bl	14e54 <__strdup@plt>
   1b0ac:	subs	r6, r0, #0
   1b0b0:	bne	1b08c <getProgramPath@@Base+0x98>
   1b0b4:	bl	184dc <logMallocError@@Base>
   1b0b8:	b	1b08c <getProgramPath@@Base+0x98>
   1b0bc:	muleq	r0, ip, r6
   1b0c0:	andeq	fp, r0, r8, lsr r6

0001b0c4 <getBootParameters@@Base>:
   1b0c4:	ldr	r3, [pc, #280]	; 1b1e4 <getBootParameters@@Base+0x120>
   1b0c8:	ldr	r2, [pc, #280]	; 1b1e8 <getBootParameters@@Base+0x124>
   1b0cc:	add	r3, pc, r3
   1b0d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b0d4:	sub	sp, sp, #4096	; 0x1000
   1b0d8:	ldr	r7, [r3, r2]
   1b0dc:	sub	sp, sp, #12
   1b0e0:	add	r2, sp, #8192	; 0x2000
   1b0e4:	mov	r6, r0
   1b0e8:	ldr	r3, [r7]
   1b0ec:	str	r3, [r2, #-4092]	; 0xfffff004
   1b0f0:	bl	150e8 <strlen@plt>
   1b0f4:	mov	r4, r0
   1b0f8:	mov	r0, #1
   1b0fc:	mov	r1, r0
   1b100:	bl	15070 <calloc@plt>
   1b104:	subs	r8, r0, #0
   1b108:	beq	1b1d0 <getBootParameters@@Base+0x10c>
   1b10c:	ldr	r0, [pc, #216]	; 1b1ec <getBootParameters@@Base+0x128>
   1b110:	ldr	r1, [pc, #216]	; 1b1f0 <getBootParameters@@Base+0x12c>
   1b114:	add	r0, pc, r0
   1b118:	add	r1, pc, r1
   1b11c:	bl	14e84 <fopen@plt>
   1b120:	subs	r9, r0, #0
   1b124:	beq	1b18c <getBootParameters@@Base+0xc8>
   1b128:	mov	r1, #4096	; 0x1000
   1b12c:	add	r0, sp, #4
   1b130:	mov	r2, r9
   1b134:	bl	150a0 <fgets@plt>
   1b138:	cmp	r0, #0
   1b13c:	beq	1b184 <getBootParameters@@Base+0xc0>
   1b140:	ldr	r5, [pc, #172]	; 1b1f4 <getBootParameters@@Base+0x130>
   1b144:	add	sl, r4, #1
   1b148:	add	r5, pc, r5
   1b14c:	b	1b174 <getBootParameters@@Base+0xb0>
   1b150:	mov	r1, r6
   1b154:	mov	r2, r4
   1b158:	bl	14d40 <strncmp@plt>
   1b15c:	cmp	r0, #0
   1b160:	bne	1b170 <getBootParameters@@Base+0xac>
   1b164:	ldrb	r3, [fp, r4]
   1b168:	cmp	r3, #61	; 0x3d
   1b16c:	beq	1b1b0 <getBootParameters@@Base+0xec>
   1b170:	mov	r0, #0
   1b174:	mov	r1, r5
   1b178:	bl	14da0 <strtok@plt>
   1b17c:	subs	fp, r0, #0
   1b180:	bne	1b150 <getBootParameters@@Base+0x8c>
   1b184:	mov	r0, r9
   1b188:	bl	15124 <fclose@plt>
   1b18c:	add	r3, sp, #8192	; 0x2000
   1b190:	mov	r0, r8
   1b194:	ldr	r2, [r3, #-4092]	; 0xfffff004
   1b198:	ldr	r3, [r7]
   1b19c:	cmp	r2, r3
   1b1a0:	bne	1b1e0 <getBootParameters@@Base+0x11c>
   1b1a4:	add	sp, sp, #4096	; 0x1000
   1b1a8:	add	sp, sp, #12
   1b1ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1b0:	add	r0, fp, sl
   1b1b4:	bl	14e54 <__strdup@plt>
   1b1b8:	subs	r3, r0, #0
   1b1bc:	beq	1b1d8 <getBootParameters@@Base+0x114>
   1b1c0:	mov	r0, r8
   1b1c4:	mov	r8, r3
   1b1c8:	bl	14d10 <free@plt>
   1b1cc:	b	1b170 <getBootParameters@@Base+0xac>
   1b1d0:	bl	184dc <logMallocError@@Base>
   1b1d4:	b	1b18c <getBootParameters@@Base+0xc8>
   1b1d8:	bl	184dc <logMallocError@@Base>
   1b1dc:	b	1b170 <getBootParameters@@Base+0xac>
   1b1e0:	bl	14fbc <__stack_chk_fail@plt>
   1b1e4:	andeq	pc, r1, ip, lsr #30
   1b1e8:	andeq	r0, r0, r8, asr #4
   1b1ec:	andeq	fp, r0, r8, lsr #11
   1b1f0:	andeq	ip, r0, r4, lsr r4
   1b1f4:	andeq	fp, r0, r4, lsl #11

0001b1f8 <executeHostCommand@@Base>:
   1b1f8:	ldr	r3, [pc, #392]	; 1b388 <executeHostCommand@@Base+0x190>
   1b1fc:	ldr	r2, [pc, #392]	; 1b38c <executeHostCommand@@Base+0x194>
   1b200:	add	r3, pc, r3
   1b204:	push	{r4, r5, r6, r7, lr}
   1b208:	sub	sp, sp, #268	; 0x10c
   1b20c:	ldr	r6, [r3, r2]
   1b210:	add	r4, sp, #4
   1b214:	mov	r7, r0
   1b218:	add	r5, sp, #132	; 0x84
   1b21c:	mov	r0, r4
   1b220:	ldr	r3, [r6]
   1b224:	str	r3, [sp, #260]	; 0x104
   1b228:	bl	15220 <sigemptyset@plt>
   1b22c:	mov	r1, #17
   1b230:	mov	r0, r4
   1b234:	bl	14e60 <sigaddset@plt>
   1b238:	mov	r2, r5
   1b23c:	mov	r1, r4
   1b240:	mov	r0, #0
   1b244:	bl	15298 <sigprocmask@plt>
   1b248:	bl	14fd4 <fork@plt>
   1b24c:	cmn	r0, #1
   1b250:	mov	r2, r0
   1b254:	beq	1b2d8 <executeHostCommand@@Base+0xe0>
   1b258:	cmp	r0, #0
   1b25c:	beq	1b2ac <executeHostCommand@@Base+0xb4>
   1b260:	mov	r1, sp
   1b264:	mov	r2, #0
   1b268:	bl	14f74 <waitpid@plt>
   1b26c:	cmn	r0, #1
   1b270:	beq	1b354 <executeHostCommand@@Base+0x15c>
   1b274:	ldr	r2, [sp]
   1b278:	ands	r4, r2, #127	; 0x7f
   1b27c:	beq	1b338 <executeHostCommand@@Base+0x140>
   1b280:	add	r3, r4, #1
   1b284:	sbfx	r3, r3, #1, #7
   1b288:	cmp	r3, #0
   1b28c:	ble	1b314 <executeHostCommand@@Base+0x11c>
   1b290:	ldr	r1, [pc, #248]	; 1b390 <executeHostCommand@@Base+0x198>
   1b294:	mov	r2, r4
   1b298:	mov	r0, #7
   1b29c:	add	r4, r4, #128	; 0x80
   1b2a0:	add	r1, pc, r1
   1b2a4:	bl	183d0 <logMessage@@Base>
   1b2a8:	b	1b2e8 <executeHostCommand@@Base+0xf0>
   1b2ac:	mov	r1, r5
   1b2b0:	mov	r0, #2
   1b2b4:	bl	15298 <sigprocmask@plt>
   1b2b8:	mov	r1, r7
   1b2bc:	ldr	r0, [r7]
   1b2c0:	bl	15280 <execvp@plt>
   1b2c4:	ldr	r0, [pc, #200]	; 1b394 <executeHostCommand@@Base+0x19c>
   1b2c8:	add	r0, pc, r0
   1b2cc:	bl	18498 <logSystemError@@Base>
   1b2d0:	mov	r0, #1
   1b2d4:	bl	15190 <_exit@plt>
   1b2d8:	ldr	r0, [pc, #184]	; 1b398 <executeHostCommand@@Base+0x1a0>
   1b2dc:	mov	r4, #255	; 0xff
   1b2e0:	add	r0, pc, r0
   1b2e4:	bl	18498 <logSystemError@@Base>
   1b2e8:	mov	r2, #0
   1b2ec:	mov	r1, r5
   1b2f0:	mov	r0, #2
   1b2f4:	bl	15298 <sigprocmask@plt>
   1b2f8:	ldr	r2, [sp, #260]	; 0x104
   1b2fc:	ldr	r3, [r6]
   1b300:	mov	r0, r4
   1b304:	cmp	r2, r3
   1b308:	bne	1b384 <executeHostCommand@@Base+0x18c>
   1b30c:	add	sp, sp, #268	; 0x10c
   1b310:	pop	{r4, r5, r6, r7, pc}
   1b314:	uxtb	r3, r2
   1b318:	cmp	r3, #127	; 0x7f
   1b31c:	beq	1b368 <executeHostCommand@@Base+0x170>
   1b320:	ldr	r1, [pc, #116]	; 1b39c <executeHostCommand@@Base+0x1a4>
   1b324:	mov	r0, #7
   1b328:	mov	r4, #255	; 0xff
   1b32c:	add	r1, pc, r1
   1b330:	bl	183d0 <logMessage@@Base>
   1b334:	b	1b2e8 <executeHostCommand@@Base+0xf0>
   1b338:	ubfx	r4, r2, #8, #8
   1b33c:	ldr	r1, [pc, #92]	; 1b3a0 <executeHostCommand@@Base+0x1a8>
   1b340:	mov	r0, #7
   1b344:	add	r1, pc, r1
   1b348:	mov	r2, r4
   1b34c:	bl	183d0 <logMessage@@Base>
   1b350:	b	1b2e8 <executeHostCommand@@Base+0xf0>
   1b354:	ldr	r0, [pc, #72]	; 1b3a4 <executeHostCommand@@Base+0x1ac>
   1b358:	mov	r4, #255	; 0xff
   1b35c:	add	r0, pc, r0
   1b360:	bl	18498 <logSystemError@@Base>
   1b364:	b	1b2e8 <executeHostCommand@@Base+0xf0>
   1b368:	ldr	r1, [pc, #56]	; 1b3a8 <executeHostCommand@@Base+0x1b0>
   1b36c:	ubfx	r2, r2, #8, #8
   1b370:	mov	r0, #7
   1b374:	add	r4, r2, #128	; 0x80
   1b378:	add	r1, pc, r1
   1b37c:	bl	183d0 <logMessage@@Base>
   1b380:	b	1b2e8 <executeHostCommand@@Base+0xf0>
   1b384:	bl	14fbc <__stack_chk_fail@plt>
   1b388:	strdeq	pc, [r1], -r8
   1b38c:	andeq	r0, r0, r8, asr #4
   1b390:	andeq	fp, r0, r8, asr r4
   1b394:	andeq	fp, r0, r0, lsl r4
   1b398:	strdeq	fp, [r0], -r0
   1b39c:	strdeq	fp, [r0], -r4
   1b3a0:	andeq	fp, r0, r4, lsr #7
   1b3a4:	andeq	fp, r0, r4, lsl #7
   1b3a8:	muleq	r0, r8, r3
   1b3ac:	ldr	r3, [pc, #332]	; 1b500 <executeHostCommand@@Base+0x308>
   1b3b0:	ldr	r2, [pc, #332]	; 1b504 <executeHostCommand@@Base+0x30c>
   1b3b4:	add	r3, pc, r3
   1b3b8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1b3bc:	subs	r4, r1, #0
   1b3c0:	ldr	r5, [r3, r2]
   1b3c4:	sub	sp, sp, #284	; 0x11c
   1b3c8:	ldr	r9, [pc, #312]	; 1b508 <executeHostCommand@@Base+0x310>
   1b3cc:	mov	r8, r0
   1b3d0:	ldr	r1, [pc, #308]	; 1b50c <executeHostCommand@@Base+0x314>
   1b3d4:	ldr	r3, [r5]
   1b3d8:	add	r9, pc, r9
   1b3dc:	add	r1, pc, r1
   1b3e0:	mov	r0, r9
   1b3e4:	str	r3, [sp, #276]	; 0x114
   1b3e8:	ldrne	r3, [r4]
   1b3ec:	addne	r3, r3, #1
   1b3f0:	strne	r3, [r4]
   1b3f4:	bl	14e84 <fopen@plt>
   1b3f8:	subs	r7, r0, #0
   1b3fc:	beq	1b4cc <executeHostCommand@@Base+0x2d4>
   1b400:	add	r0, sp, #20
   1b404:	mov	r1, #256	; 0x100
   1b408:	mov	r2, r7
   1b40c:	bl	150a0 <fgets@plt>
   1b410:	subs	r6, r0, #0
   1b414:	beq	1b424 <executeHostCommand@@Base+0x22c>
   1b418:	bl	150e8 <strlen@plt>
   1b41c:	cmp	r0, #0
   1b420:	bne	1b48c <executeHostCommand@@Base+0x294>
   1b424:	ldr	r6, [pc, #228]	; 1b510 <executeHostCommand@@Base+0x318>
   1b428:	add	r6, pc, r6
   1b42c:	mov	r0, r7
   1b430:	bl	15124 <fclose@plt>
   1b434:	ldr	r3, [pc, #216]	; 1b514 <executeHostCommand@@Base+0x31c>
   1b438:	add	r0, sp, #4
   1b43c:	str	r6, [sp, #4]
   1b440:	mov	r6, #0
   1b444:	add	r3, pc, r3
   1b448:	str	r8, [sp, #12]
   1b44c:	str	r3, [sp, #8]
   1b450:	str	r6, [sp, #16]
   1b454:	bl	1b1f8 <executeHostCommand@@Base>
   1b458:	cmp	r0, r6
   1b45c:	bne	1b4b0 <executeHostCommand@@Base+0x2b8>
   1b460:	cmp	r4, #0
   1b464:	mov	r0, #1
   1b468:	ldrne	r3, [r4]
   1b46c:	addne	r3, r3, #1
   1b470:	strne	r3, [r4]
   1b474:	ldr	r2, [sp, #276]	; 0x114
   1b478:	ldr	r3, [r5]
   1b47c:	cmp	r2, r3
   1b480:	bne	1b4fc <executeHostCommand@@Base+0x304>
   1b484:	add	sp, sp, #284	; 0x11c
   1b488:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1b48c:	sub	r0, r0, #1
   1b490:	ldrb	r3, [r6, r0]
   1b494:	cmp	r3, #10
   1b498:	bne	1b42c <executeHostCommand@@Base+0x234>
   1b49c:	cmp	r0, #0
   1b4a0:	mov	r3, #0
   1b4a4:	strb	r3, [r6, r0]
   1b4a8:	bne	1b42c <executeHostCommand@@Base+0x234>
   1b4ac:	b	1b424 <executeHostCommand@@Base+0x22c>
   1b4b0:	ldr	r1, [pc, #96]	; 1b518 <executeHostCommand@@Base+0x320>
   1b4b4:	mov	r0, #4
   1b4b8:	mov	r2, r8
   1b4bc:	add	r1, pc, r1
   1b4c0:	bl	183d0 <logMessage@@Base>
   1b4c4:	mov	r0, r6
   1b4c8:	b	1b474 <executeHostCommand@@Base+0x27c>
   1b4cc:	bl	151b4 <__errno_location@plt>
   1b4d0:	ldr	r6, [pc, #68]	; 1b51c <executeHostCommand@@Base+0x324>
   1b4d4:	add	r6, pc, r6
   1b4d8:	ldr	r0, [r0]
   1b4dc:	bl	14d64 <strerror@plt>
   1b4e0:	ldr	r1, [pc, #56]	; 1b520 <executeHostCommand@@Base+0x328>
   1b4e4:	mov	r2, r9
   1b4e8:	add	r1, pc, r1
   1b4ec:	mov	r3, r0
   1b4f0:	mov	r0, #4
   1b4f4:	bl	183d0 <logMessage@@Base>
   1b4f8:	b	1b434 <executeHostCommand@@Base+0x23c>
   1b4fc:	bl	14fbc <__stack_chk_fail@plt>
   1b500:	andeq	pc, r1, r4, asr #24
   1b504:	andeq	r0, r0, r8, asr #4
   1b508:	andeq	fp, r0, ip, ror #6
   1b50c:	andeq	ip, r0, r0, ror r1
   1b510:	andeq	fp, r0, r0, lsl r3
   1b514:	andeq	fp, r0, r0, lsr r3
   1b518:			; <UNDEFINED> instruction: 0x0000b2bc
   1b51c:	andeq	fp, r0, r4, ror #4
   1b520:	andeq	fp, r0, r8, ror r2

0001b524 <mountFileSystem@@Base>:
   1b524:	push	{lr}		; (str lr, [sp, #-4]!)
   1b528:	sub	sp, sp, #12
   1b52c:	mov	ip, r0
   1b530:	mov	r3, #0
   1b534:	mov	r0, r1
   1b538:	str	r3, [sp]
   1b53c:	mov	r1, ip
   1b540:	bl	151c0 <mount@plt>
   1b544:	adds	r0, r0, #1
   1b548:	movne	r0, #1
   1b54c:	add	sp, sp, #12
   1b550:	pop	{pc}		; (ldr pc, [sp], #4)

0001b554 <loadSharedObject@@Base>:
   1b554:	push	{r4, lr}
   1b558:	movw	r1, #258	; 0x102
   1b55c:	bl	14ef0 <dlopen@plt>
   1b560:	subs	r4, r0, #0
   1b564:	beq	1b570 <loadSharedObject@@Base+0x1c>
   1b568:	mov	r0, r4
   1b56c:	pop	{r4, pc}
   1b570:	bl	14cc8 <dlerror@plt>
   1b574:	ldr	r1, [pc, #16]	; 1b58c <loadSharedObject@@Base+0x38>
   1b578:	add	r1, pc, r1
   1b57c:	mov	r2, r0
   1b580:	mov	r0, #3
   1b584:	bl	183d0 <logMessage@@Base>
   1b588:	b	1b568 <loadSharedObject@@Base+0x14>
   1b58c:	andeq	sp, r0, ip, ror #8

0001b590 <unloadSharedObject@@Base>:
   1b590:	b	14d88 <dlclose@plt>

0001b594 <findSharedSymbol@@Base>:
   1b594:	push	{r4, r5, r6, lr}
   1b598:	mov	r4, r0
   1b59c:	mov	r6, r1
   1b5a0:	mov	r5, r2
   1b5a4:	bl	14cc8 <dlerror@plt>
   1b5a8:	mov	r1, r6
   1b5ac:	mov	r0, r4
   1b5b0:	bl	15274 <dlsym@plt>
   1b5b4:	str	r0, [r5]
   1b5b8:	bl	14cc8 <dlerror@plt>
   1b5bc:	subs	r2, r0, #0
   1b5c0:	beq	1b5dc <findSharedSymbol@@Base+0x48>
   1b5c4:	ldr	r1, [pc, #24]	; 1b5e4 <findSharedSymbol@@Base+0x50>
   1b5c8:	mov	r0, #3
   1b5cc:	add	r1, pc, r1
   1b5d0:	bl	183d0 <logMessage@@Base>
   1b5d4:	mov	r0, #0
   1b5d8:	pop	{r4, r5, r6, pc}
   1b5dc:	mov	r0, #1
   1b5e0:	pop	{r4, r5, r6, pc}
   1b5e4:	andeq	sp, r0, r8, lsl r4

0001b5e8 <synchronousBeep@@Base>:
   1b5e8:	mov	r0, #0
   1b5ec:	bx	lr

0001b5f0 <asynchronousBeep@@Base>:
   1b5f0:	push	{r4, r5, r6, lr}
   1b5f4:	mov	r5, r0
   1b5f8:	mov	r4, r1
   1b5fc:	bl	1942c <getConsole@@Base>
   1b600:	subs	r3, r0, #0
   1b604:	beq	1b650 <asynchronousBeep@@Base+0x60>
   1b608:	bl	14f8c <fileno@plt>
   1b60c:	mov	r1, r5
   1b610:	lsl	r4, r4, #16
   1b614:	mov	r6, r0
   1b618:	movw	r0, #13532	; 0x34dc
   1b61c:	movt	r0, #18
   1b620:	bl	258a8 <handleBestCharacter@@Base+0x26c>
   1b624:	movw	r1, #19248	; 0x4b30
   1b628:	orr	r2, r4, r0
   1b62c:	mov	r0, r6
   1b630:	bl	14f14 <ioctl@plt>
   1b634:	cmn	r0, #1
   1b638:	beq	1b644 <asynchronousBeep@@Base+0x54>
   1b63c:	mov	r0, #1
   1b640:	pop	{r4, r5, r6, pc}
   1b644:	ldr	r0, [pc, #12]	; 1b658 <asynchronousBeep@@Base+0x68>
   1b648:	add	r0, pc, r0
   1b64c:	bl	18498 <logSystemError@@Base>
   1b650:	mov	r0, #0
   1b654:	pop	{r4, r5, r6, pc}
   1b658:	andeq	fp, r0, r0, asr r1

0001b65c <startBeep@@Base>:
   1b65c:	push	{r3, r4, r5, lr}
   1b660:	mov	r4, r0
   1b664:	bl	1942c <getConsole@@Base>
   1b668:	subs	r3, r0, #0
   1b66c:	beq	1b6b4 <startBeep@@Base+0x58>
   1b670:	bl	14f8c <fileno@plt>
   1b674:	mov	r1, r4
   1b678:	mov	r5, r0
   1b67c:	movw	r0, #13532	; 0x34dc
   1b680:	movt	r0, #18
   1b684:	bl	258a8 <handleBestCharacter@@Base+0x26c>
   1b688:	movw	r1, #19247	; 0x4b2f
   1b68c:	mov	r2, r0
   1b690:	mov	r0, r5
   1b694:	bl	14f14 <ioctl@plt>
   1b698:	cmn	r0, #1
   1b69c:	beq	1b6a8 <startBeep@@Base+0x4c>
   1b6a0:	mov	r0, #1
   1b6a4:	pop	{r3, r4, r5, pc}
   1b6a8:	ldr	r0, [pc, #12]	; 1b6bc <startBeep@@Base+0x60>
   1b6ac:	add	r0, pc, r0
   1b6b0:	bl	18498 <logSystemError@@Base>
   1b6b4:	mov	r0, #0
   1b6b8:	pop	{r3, r4, r5, pc}
   1b6bc:	strdeq	fp, [r0], -ip

0001b6c0 <stopBeep@@Base>:
   1b6c0:	push	{r3, lr}
   1b6c4:	bl	1942c <getConsole@@Base>
   1b6c8:	subs	r3, r0, #0
   1b6cc:	beq	1b6fc <stopBeep@@Base+0x3c>
   1b6d0:	bl	14f8c <fileno@plt>
   1b6d4:	movw	r1, #19247	; 0x4b2f
   1b6d8:	mov	r2, #0
   1b6dc:	bl	14f14 <ioctl@plt>
   1b6e0:	cmn	r0, #1
   1b6e4:	beq	1b6f0 <stopBeep@@Base+0x30>
   1b6e8:	mov	r0, #1
   1b6ec:	pop	{r3, pc}
   1b6f0:	ldr	r0, [pc, #12]	; 1b704 <stopBeep@@Base+0x44>
   1b6f4:	add	r0, pc, r0
   1b6f8:	bl	18498 <logSystemError@@Base>
   1b6fc:	mov	r0, #0
   1b700:	pop	{r3, pc}
   1b704:	strheq	fp, [r0], -r4

0001b708 <endBeep@@Base>:
   1b708:	bx	lr

0001b70c <closePcmDevice@@Base>:
   1b70c:	push	{r4, lr}
   1b710:	mov	r4, r0
   1b714:	ldr	r0, [r0]
   1b718:	bl	14e6c <close@plt>
   1b71c:	mov	r0, r4
   1b720:	pop	{r4, lr}
   1b724:	b	14d10 <free@plt>

0001b728 <writePcmData@@Base>:
   1b728:	push	{r3, lr}
   1b72c:	ldr	r0, [r0]
   1b730:	bl	1ade0 <writeData@@Base>
   1b734:	adds	r0, r0, #1
   1b738:	movne	r0, #1
   1b73c:	pop	{r3, pc}

0001b740 <getPcmBlockSize@@Base>:
   1b740:	ldr	r3, [pc, #120]	; 1b7c0 <getPcmBlockSize@@Base+0x80>
   1b744:	mov	ip, #7
   1b748:	push	{r4, r5, lr}
   1b74c:	add	r3, pc, r3
   1b750:	ldr	lr, [pc, #108]	; 1b7c4 <getPcmBlockSize@@Base+0x84>
   1b754:	sub	sp, sp, #20
   1b758:	add	r2, sp, #16
   1b75c:	movt	ip, #65535	; 0xffff
   1b760:	mov	r5, r0
   1b764:	movw	r1, #20490	; 0x500a
   1b768:	ldr	r4, [r3, lr]
   1b76c:	movt	r1, #49156	; 0xc004
   1b770:	str	ip, [r2, #-12]!
   1b774:	ldr	r0, [r0]
   1b778:	ldr	r3, [r4]
   1b77c:	str	r3, [sp, #12]
   1b780:	bl	14f14 <ioctl@plt>
   1b784:	add	r2, sp, #8
   1b788:	ldr	r0, [r5]
   1b78c:	movw	r1, #20484	; 0x5004
   1b790:	movt	r1, #49156	; 0xc004
   1b794:	bl	14f14 <ioctl@plt>
   1b798:	ldr	r2, [sp, #12]
   1b79c:	ldr	r3, [r4]
   1b7a0:	cmn	r0, #1
   1b7a4:	ldrne	r0, [sp, #8]
   1b7a8:	moveq	r0, #128	; 0x80
   1b7ac:	cmp	r2, r3
   1b7b0:	bne	1b7bc <getPcmBlockSize@@Base+0x7c>
   1b7b4:	add	sp, sp, #20
   1b7b8:	pop	{r4, r5, pc}
   1b7bc:	bl	14fbc <__stack_chk_fail@plt>
   1b7c0:	andeq	pc, r1, ip, lsr #17
   1b7c4:	andeq	r0, r0, r8, asr #4

0001b7c8 <getPcmSampleRate@@Base>:
   1b7c8:	ldr	r0, [r0, #8]
   1b7cc:	bx	lr

0001b7d0 <setPcmSampleRate@@Base>:
   1b7d0:	push	{r4, lr}
   1b7d4:	sub	sp, sp, #8
   1b7d8:	add	r2, sp, #8
   1b7dc:	mov	r4, r0
   1b7e0:	ldr	r0, [r0]
   1b7e4:	str	r1, [r2, #-4]!
   1b7e8:	movw	r1, #20482	; 0x5002
   1b7ec:	movt	r1, #49156	; 0xc004
   1b7f0:	bl	14f14 <ioctl@plt>
   1b7f4:	cmn	r0, #1
   1b7f8:	mov	r0, r4
   1b7fc:	ldrne	r3, [sp, #4]
   1b800:	strne	r3, [r4, #8]
   1b804:	bl	1b7c8 <getPcmSampleRate@@Base>
   1b808:	add	sp, sp, #8
   1b80c:	pop	{r4, pc}

0001b810 <getPcmChannelCount@@Base>:
   1b810:	ldr	r0, [r0, #12]
   1b814:	bx	lr

0001b818 <setPcmChannelCount@@Base>:
   1b818:	push	{r4, lr}
   1b81c:	sub	sp, sp, #8
   1b820:	add	r2, sp, #8
   1b824:	mov	r4, r0
   1b828:	ldr	r0, [r0]
   1b82c:	str	r1, [r2, #-4]!
   1b830:	movw	r1, #20486	; 0x5006
   1b834:	movt	r1, #49156	; 0xc004
   1b838:	bl	14f14 <ioctl@plt>
   1b83c:	cmn	r0, #1
   1b840:	mov	r0, r4
   1b844:	ldrne	r3, [sp, #4]
   1b848:	strne	r3, [r4, #12]
   1b84c:	bl	1b810 <getPcmChannelCount@@Base>
   1b850:	add	sp, sp, #8
   1b854:	pop	{r4, pc}

0001b858 <openPcmDevice@@Base>:
   1b858:	push	{r4, r5, r6, lr}
   1b85c:	mov	r6, r0
   1b860:	mov	r0, #16
   1b864:	mov	r5, r1
   1b868:	bl	150dc <malloc@plt>
   1b86c:	subs	r4, r0, #0
   1b870:	beq	1b94c <openPcmDevice@@Base+0xf4>
   1b874:	ldrb	r3, [r5]
   1b878:	cmp	r3, #0
   1b87c:	beq	1b8f8 <openPcmDevice@@Base+0xa0>
   1b880:	mov	r0, r5
   1b884:	movw	r1, #2049	; 0x801
   1b888:	bl	14f68 <open@plt>
   1b88c:	cmn	r0, #1
   1b890:	str	r0, [r4]
   1b894:	beq	1b918 <openPcmDevice@@Base+0xc0>
   1b898:	mov	r1, #1
   1b89c:	bl	1af44 <setBlockingIo@@Base>
   1b8a0:	mov	r2, r4
   1b8a4:	mov	r3, #196608	; 0x30000
   1b8a8:	movw	r1, #19830	; 0x4d76
   1b8ac:	str	r3, [r4, #4]
   1b8b0:	movt	r1, #32772	; 0x8004
   1b8b4:	ldr	r0, [r2], #4
   1b8b8:	bl	14f14 <ioctl@plt>
   1b8bc:	cmn	r0, #1
   1b8c0:	beq	1b904 <openPcmDevice@@Base+0xac>
   1b8c4:	ldr	r1, [pc, #148]	; 1b960 <openPcmDevice@@Base+0x108>
   1b8c8:	mov	r0, #7
   1b8cc:	ldr	r2, [r4, #4]
   1b8d0:	add	r1, pc, r1
   1b8d4:	bl	183d0 <logMessage@@Base>
   1b8d8:	mov	r0, r4
   1b8dc:	mov	r1, #8000	; 0x1f40
   1b8e0:	bl	1b7d0 <setPcmSampleRate@@Base>
   1b8e4:	mov	r0, r4
   1b8e8:	mov	r1, #1
   1b8ec:	bl	1b818 <setPcmChannelCount@@Base>
   1b8f0:	mov	r0, r4
   1b8f4:	pop	{r4, r5, r6, pc}
   1b8f8:	ldr	r5, [pc, #100]	; 1b964 <openPcmDevice@@Base+0x10c>
   1b8fc:	add	r5, pc, r5
   1b900:	b	1b880 <openPcmDevice@@Base+0x28>
   1b904:	ldr	r1, [pc, #92]	; 1b968 <openPcmDevice@@Base+0x110>
   1b908:	mov	r0, r6
   1b90c:	add	r1, pc, r1
   1b910:	bl	183d0 <logMessage@@Base>
   1b914:	b	1b8c4 <openPcmDevice@@Base+0x6c>
   1b918:	bl	151b4 <__errno_location@plt>
   1b91c:	ldr	r0, [r0]
   1b920:	bl	14d64 <strerror@plt>
   1b924:	ldr	r1, [pc, #64]	; 1b96c <openPcmDevice@@Base+0x114>
   1b928:	mov	r2, r5
   1b92c:	add	r1, pc, r1
   1b930:	mov	r3, r0
   1b934:	mov	r0, r6
   1b938:	bl	183d0 <logMessage@@Base>
   1b93c:	mov	r0, r4
   1b940:	bl	14d10 <free@plt>
   1b944:	mov	r0, #0
   1b948:	pop	{r4, r5, r6, pc}
   1b94c:	ldr	r0, [pc, #28]	; 1b970 <openPcmDevice@@Base+0x118>
   1b950:	add	r0, pc, r0
   1b954:	bl	18498 <logSystemError@@Base>
   1b958:	mov	r0, r4
   1b95c:	pop	{r4, r5, r6, pc}
   1b960:	andeq	sl, r0, r4, lsl pc
   1b964:			; <UNDEFINED> instruction: 0x0000aebc
   1b968:			; <UNDEFINED> instruction: 0x0000aeb8
   1b96c:	ldrdeq	sl, [r0], -r4
   1b970:	ldrdeq	sl, [r0], -r0

0001b974 <getPcmAmplitudeFormat@@Base>:
   1b974:	ldr	r0, [r0]
   1b978:	mov	r1, #0
   1b97c:	b	1af84 <setCloseOnExec@@Base+0x20>

0001b980 <setPcmAmplitudeFormat@@Base>:
   1b980:	cmp	r1, #0
   1b984:	beq	1b9c0 <setPcmAmplitudeFormat@@Base+0x40>
   1b988:	ldr	r3, [pc, #60]	; 1b9cc <setPcmAmplitudeFormat@@Base+0x4c>
   1b98c:	add	r3, pc, r3
   1b990:	add	r3, r3, #8
   1b994:	b	1b9a0 <setPcmAmplitudeFormat@@Base+0x20>
   1b998:	cmp	r2, r1
   1b99c:	beq	1b9b4 <setPcmAmplitudeFormat@@Base+0x34>
   1b9a0:	ldr	r2, [r3]
   1b9a4:	mov	ip, r3
   1b9a8:	add	r3, r3, #8
   1b9ac:	cmp	r2, #8
   1b9b0:	bne	1b998 <setPcmAmplitudeFormat@@Base+0x18>
   1b9b4:	ldr	r0, [r0]
   1b9b8:	ldr	r1, [ip, #4]
   1b9bc:	b	1af84 <setCloseOnExec@@Base+0x20>
   1b9c0:	ldr	ip, [pc, #8]	; 1b9d0 <setPcmAmplitudeFormat@@Base+0x50>
   1b9c4:	add	ip, pc, ip
   1b9c8:	b	1b9b4 <setPcmAmplitudeFormat@@Base+0x34>
   1b9cc:	andeq	sl, r0, ip, asr #25
   1b9d0:	muleq	r0, r4, ip

0001b9d4 <forcePcmOutput@@Base>:
   1b9d4:	ldr	r0, [r0]
   1b9d8:	movw	r1, #20488	; 0x5008
   1b9dc:	mov	r2, #0
   1b9e0:	b	14f14 <ioctl@plt>

0001b9e4 <awaitPcmOutput@@Base>:
   1b9e4:	ldr	r0, [r0]
   1b9e8:	movw	r1, #20481	; 0x5001
   1b9ec:	mov	r2, #0
   1b9f0:	b	14f14 <ioctl@plt>

0001b9f4 <cancelPcmOutput@@Base>:
   1b9f4:	ldr	r0, [r0]
   1b9f8:	mov	r1, #20480	; 0x5000
   1b9fc:	mov	r2, #0
   1ba00:	b	14f14 <ioctl@plt>

0001ba04 <seqbuf_dump@@Base>:
   1ba04:	push	{r4, lr}
   1ba08:	ldr	r4, [pc, #68]	; 1ba54 <seqbuf_dump@@Base+0x50>
   1ba0c:	add	r4, pc, r4
   1ba10:	ldr	r1, [r4]
   1ba14:	ldr	r2, [r1, #140]	; 0x8c
   1ba18:	cmp	r2, #0
   1ba1c:	bne	1ba2c <seqbuf_dump@@Base+0x28>
   1ba20:	mov	r3, #0
   1ba24:	str	r3, [r1, #140]	; 0x8c
   1ba28:	pop	{r4, pc}
   1ba2c:	ldr	r0, [r1], #8
   1ba30:	bl	1ade0 <writeData@@Base>
   1ba34:	cmn	r0, #1
   1ba38:	beq	1ba44 <seqbuf_dump@@Base+0x40>
   1ba3c:	ldr	r1, [r4]
   1ba40:	b	1ba20 <seqbuf_dump@@Base+0x1c>
   1ba44:	ldr	r0, [pc, #12]	; 1ba58 <seqbuf_dump@@Base+0x54>
   1ba48:	add	r0, pc, r0
   1ba4c:	bl	18498 <logSystemError@@Base>
   1ba50:	b	1ba3c <seqbuf_dump@@Base+0x38>
   1ba54:	andeq	pc, r1, r4, lsr r9	; <UNPREDICTABLE>
   1ba58:	strdeq	sl, [r0], -r0

0001ba5c <openMidiDevice@@Base>:
   1ba5c:	ldr	r3, [pc, #744]	; 1bd4c <openMidiDevice@@Base+0x2f0>
   1ba60:	ldr	r2, [pc, #744]	; 1bd50 <openMidiDevice@@Base+0x2f4>
   1ba64:	add	r3, pc, r3
   1ba68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba6c:	sub	sp, sp, #172	; 0xac
   1ba70:	ldr	r2, [r3, r2]
   1ba74:	mov	sl, r0
   1ba78:	mov	r0, #144	; 0x90
   1ba7c:	mov	r5, r1
   1ba80:	ldr	r3, [r2]
   1ba84:	str	r2, [sp, #8]
   1ba88:	str	r3, [sp, #164]	; 0xa4
   1ba8c:	bl	150dc <malloc@plt>
   1ba90:	subs	r4, r0, #0
   1ba94:	beq	1bd34 <openMidiDevice@@Base+0x2d8>
   1ba98:	ldrb	r3, [r5]
   1ba9c:	cmp	r3, #0
   1baa0:	beq	1bc4c <openMidiDevice@@Base+0x1f0>
   1baa4:	mov	r0, r5
   1baa8:	mov	r1, #1
   1baac:	bl	14f68 <open@plt>
   1bab0:	cmn	r0, #1
   1bab4:	str	r0, [r4]
   1bab8:	beq	1bd00 <openMidiDevice@@Base+0x2a4>
   1babc:	add	r9, sp, #16
   1bac0:	movw	r1, #20746	; 0x510a
   1bac4:	movt	r1, #32772	; 0x8004
   1bac8:	mvn	r6, #0
   1bacc:	mov	r2, r9
   1bad0:	str	r6, [sp, #20]
   1bad4:	bl	14f14 <ioctl@plt>
   1bad8:	cmp	r0, r6
   1badc:	mov	r5, r0
   1bae0:	beq	1bca8 <openMidiDevice@@Base+0x24c>
   1bae4:	ldr	r3, [sp, #16]
   1bae8:	cmp	r3, #0
   1baec:	ble	1bcf8 <openMidiDevice@@Base+0x29c>
   1baf0:	ldr	r1, [pc, #604]	; 1bd54 <openMidiDevice@@Base+0x2f8>
   1baf4:	add	r5, sp, #24
   1baf8:	ldr	r7, [pc, #600]	; 1bd58 <openMidiDevice@@Base+0x2fc>
   1bafc:	mov	r8, r6
   1bb00:	add	r1, pc, r1
   1bb04:	mov	fp, #0
   1bb08:	str	r1, [sp, #12]
   1bb0c:	add	r7, pc, r7
   1bb10:	b	1bb68 <openMidiDevice@@Base+0x10c>
   1bb14:	ldr	r2, [sp, #60]	; 0x3c
   1bb18:	cmp	r2, #0
   1bb1c:	moveq	r6, fp
   1bb20:	beq	1bb58 <openMidiDevice@@Base+0xfc>
   1bb24:	cmp	r2, #1
   1bb28:	ldr	r3, [sp, #64]	; 0x40
   1bb2c:	bne	1bb48 <openMidiDevice@@Base+0xec>
   1bb30:	cmp	r3, #16
   1bb34:	streq	fp, [sp, #20]
   1bb38:	beq	1bb58 <openMidiDevice@@Base+0xfc>
   1bb3c:	cmp	r3, #32
   1bb40:	moveq	r8, fp
   1bb44:	beq	1bb58 <openMidiDevice@@Base+0xfc>
   1bb48:	str	r5, [sp]
   1bb4c:	mov	r0, #7
   1bb50:	mov	r1, r7
   1bb54:	bl	183d0 <logMessage@@Base>
   1bb58:	ldr	r3, [sp, #16]
   1bb5c:	add	fp, fp, #1
   1bb60:	cmp	r3, fp
   1bb64:	ble	1bbb8 <openMidiDevice@@Base+0x15c>
   1bb68:	movw	r1, #20738	; 0x5102
   1bb6c:	ldr	r0, [r4]
   1bb70:	movt	r1, #49292	; 0xc08c
   1bb74:	mov	r2, r5
   1bb78:	str	fp, [sp, #56]	; 0x38
   1bb7c:	bl	14f14 <ioctl@plt>
   1bb80:	cmn	r0, #1
   1bb84:	bne	1bb14 <openMidiDevice@@Base+0xb8>
   1bb88:	bl	151b4 <__errno_location@plt>
   1bb8c:	ldr	r0, [r0]
   1bb90:	bl	14d64 <strerror@plt>
   1bb94:	mov	r2, fp
   1bb98:	ldr	r1, [sp, #12]
   1bb9c:	add	fp, fp, #1
   1bba0:	mov	r3, r0
   1bba4:	mov	r0, sl
   1bba8:	bl	183d0 <logMessage@@Base>
   1bbac:	ldr	r3, [sp, #16]
   1bbb0:	cmp	r3, fp
   1bbb4:	bgt	1bb68 <openMidiDevice@@Base+0x10c>
   1bbb8:	ldr	r3, [sp, #20]
   1bbbc:	cmp	r3, #0
   1bbc0:	blt	1bbe0 <openMidiDevice@@Base+0x184>
   1bbc4:	movw	r1, #20745	; 0x5109
   1bbc8:	ldr	r0, [r4]
   1bbcc:	movt	r1, #16388	; 0x4004
   1bbd0:	add	r2, sp, #20
   1bbd4:	bl	14f14 <ioctl@plt>
   1bbd8:	cmn	r0, #1
   1bbdc:	beq	1bc7c <openMidiDevice@@Base+0x220>
   1bbe0:	mov	r2, r9
   1bbe4:	movw	r1, #20747	; 0x510b
   1bbe8:	ldr	r0, [r4]
   1bbec:	movt	r1, #32772	; 0x8004
   1bbf0:	bl	14f14 <ioctl@plt>
   1bbf4:	cmn	r0, #1
   1bbf8:	mov	r5, r0
   1bbfc:	beq	1bcd4 <openMidiDevice@@Base+0x278>
   1bc00:	ldr	r0, [sp, #16]
   1bc04:	cmp	r0, #0
   1bc08:	subgt	r5, r0, #1
   1bc0c:	ble	1bc74 <openMidiDevice@@Base+0x218>
   1bc10:	cmn	r8, #1
   1bc14:	beq	1bc58 <openMidiDevice@@Base+0x1fc>
   1bc18:	mov	r0, r4
   1bc1c:	mov	r2, #128	; 0x80
   1bc20:	mov	r3, #0
   1bc24:	str	r8, [r4, #4]
   1bc28:	str	r2, [r4, #136]	; 0x88
   1bc2c:	str	r3, [r4, #140]	; 0x8c
   1bc30:	ldr	r1, [sp, #8]
   1bc34:	ldr	r2, [sp, #164]	; 0xa4
   1bc38:	ldr	r3, [r1]
   1bc3c:	cmp	r2, r3
   1bc40:	bne	1bd48 <openMidiDevice@@Base+0x2ec>
   1bc44:	add	sp, sp, #172	; 0xac
   1bc48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc4c:	ldr	r5, [pc, #264]	; 1bd5c <openMidiDevice@@Base+0x300>
   1bc50:	add	r5, pc, r5
   1bc54:	b	1baa4 <openMidiDevice@@Base+0x48>
   1bc58:	ldr	r8, [sp, #20]
   1bc5c:	cmp	r8, #0
   1bc60:	bge	1bc18 <openMidiDevice@@Base+0x1bc>
   1bc64:	cmn	r6, #1
   1bc68:	biceq	r8, r5, r5, asr #31
   1bc6c:	movne	r8, r6
   1bc70:	b	1bc18 <openMidiDevice@@Base+0x1bc>
   1bc74:	mvn	r5, #0
   1bc78:	b	1bc10 <openMidiDevice@@Base+0x1b4>
   1bc7c:	bl	151b4 <__errno_location@plt>
   1bc80:	ldr	r5, [sp, #20]
   1bc84:	ldr	r0, [r0]
   1bc88:	bl	14d64 <strerror@plt>
   1bc8c:	ldr	r1, [pc, #204]	; 1bd60 <openMidiDevice@@Base+0x304>
   1bc90:	mov	r2, r5
   1bc94:	add	r1, pc, r1
   1bc98:	mov	r3, r0
   1bc9c:	mov	r0, sl
   1bca0:	bl	183d0 <logMessage@@Base>
   1bca4:	b	1bbe0 <openMidiDevice@@Base+0x184>
   1bca8:	bl	151b4 <__errno_location@plt>
   1bcac:	mov	r6, r5
   1bcb0:	mov	r8, r5
   1bcb4:	ldr	r0, [r0]
   1bcb8:	bl	14d64 <strerror@plt>
   1bcbc:	ldr	r1, [pc, #160]	; 1bd64 <openMidiDevice@@Base+0x308>
   1bcc0:	add	r1, pc, r1
   1bcc4:	mov	r2, r0
   1bcc8:	mov	r0, sl
   1bccc:	bl	183d0 <logMessage@@Base>
   1bcd0:	b	1bbe0 <openMidiDevice@@Base+0x184>
   1bcd4:	bl	151b4 <__errno_location@plt>
   1bcd8:	ldr	r0, [r0]
   1bcdc:	bl	14d64 <strerror@plt>
   1bce0:	ldr	r1, [pc, #128]	; 1bd68 <openMidiDevice@@Base+0x30c>
   1bce4:	add	r1, pc, r1
   1bce8:	mov	r2, r0
   1bcec:	mov	r0, sl
   1bcf0:	bl	183d0 <logMessage@@Base>
   1bcf4:	b	1bc10 <openMidiDevice@@Base+0x1b4>
   1bcf8:	mov	r8, r6
   1bcfc:	b	1bbb8 <openMidiDevice@@Base+0x15c>
   1bd00:	bl	151b4 <__errno_location@plt>
   1bd04:	ldr	r0, [r0]
   1bd08:	bl	14d64 <strerror@plt>
   1bd0c:	ldr	r1, [pc, #88]	; 1bd6c <openMidiDevice@@Base+0x310>
   1bd10:	mov	r2, r5
   1bd14:	add	r1, pc, r1
   1bd18:	mov	r3, r0
   1bd1c:	mov	r0, sl
   1bd20:	bl	183d0 <logMessage@@Base>
   1bd24:	mov	r0, r4
   1bd28:	bl	14d10 <free@plt>
   1bd2c:	mov	r0, #0
   1bd30:	b	1bc30 <openMidiDevice@@Base+0x1d4>
   1bd34:	ldr	r0, [pc, #52]	; 1bd70 <openMidiDevice@@Base+0x314>
   1bd38:	add	r0, pc, r0
   1bd3c:	bl	18498 <logSystemError@@Base>
   1bd40:	mov	r0, r4
   1bd44:	b	1bc30 <openMidiDevice@@Base+0x1d4>
   1bd48:	bl	14fbc <__stack_chk_fail@plt>
   1bd4c:	muleq	r1, r4, r5
   1bd50:	andeq	r0, r0, r8, asr #4
   1bd54:	andeq	sl, r0, r4, ror sp
   1bd58:	andeq	sl, r0, r8, asr #26
   1bd5c:	strdeq	sl, [r0], -r4
   1bd60:	andeq	sl, r0, r0, lsl ip
   1bd64:	andeq	sl, r0, r4, lsl ip
   1bd68:	andeq	sl, r0, r8, lsl ip
   1bd6c:	andeq	sl, r0, ip, lsl #24
   1bd70:	andeq	sl, r0, r8, lsl #24

0001bd74 <closeMidiDevice@@Base>:
   1bd74:	push	{r4, lr}
   1bd78:	mov	r4, r0
   1bd7c:	ldr	r0, [r0]
   1bd80:	bl	14e6c <close@plt>
   1bd84:	mov	r0, r4
   1bd88:	pop	{r4, lr}
   1bd8c:	b	14d10 <free@plt>

0001bd90 <flushMidiDevice@@Base>:
   1bd90:	push	{r4, lr}
   1bd94:	ldr	r4, [pc, #24]	; 1bdb4 <flushMidiDevice@@Base+0x24>
   1bd98:	add	r4, pc, r4
   1bd9c:	str	r0, [r4]
   1bda0:	bl	1ba04 <seqbuf_dump@@Base>
   1bda4:	mov	r3, #0
   1bda8:	mov	r0, #1
   1bdac:	str	r3, [r4]
   1bdb0:	pop	{r4, pc}
   1bdb4:	andeq	pc, r1, r8, lsr #11

0001bdb8 <setMidiInstrument@@Base>:
   1bdb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bdbc:	mov	r4, r0
   1bdc0:	ldr	r0, [r0, #140]	; 0x8c
   1bdc4:	mov	r9, r2
   1bdc8:	ldr	r5, [pc, #124]	; 1be4c <setMidiInstrument@@Base+0x94>
   1bdcc:	mov	sl, r1
   1bdd0:	ldr	r3, [r4, #136]	; 0x88
   1bdd4:	add	r2, r0, #7
   1bdd8:	add	r5, pc, r5
   1bddc:	cmp	r2, r3
   1bde0:	str	r4, [r5]
   1bde4:	movlt	ip, r4
   1bde8:	blt	1bdf8 <setMidiInstrument@@Base+0x40>
   1bdec:	bl	1ba04 <seqbuf_dump@@Base>
   1bdf0:	ldr	ip, [r5]
   1bdf4:	ldr	r0, [ip, #140]	; 0x8c
   1bdf8:	add	r3, ip, r0
   1bdfc:	mvn	r2, #109	; 0x6d
   1be00:	add	r6, r0, #14
   1be04:	ldr	r5, [pc, #68]	; 1be50 <setMidiInstrument@@Base+0x98>
   1be08:	strb	r2, [r3, #8]
   1be0c:	mvn	r7, #63	; 0x3f
   1be10:	ldr	r8, [r4, #4]
   1be14:	add	r5, pc, r5
   1be18:	mov	r4, #0
   1be1c:	strb	sl, [r3, #11]
   1be20:	strb	r9, [r3, #12]
   1be24:	mov	r0, #1
   1be28:	strb	r8, [r3, #9]
   1be2c:	strb	r7, [r3, #10]
   1be30:	strb	r4, [r3, #13]
   1be34:	strh	r4, [ip, r6]
   1be38:	ldr	r3, [ip, #140]	; 0x8c
   1be3c:	str	r4, [r5]
   1be40:	add	r3, r3, #8
   1be44:	str	r3, [ip, #140]	; 0x8c
   1be48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1be4c:	andeq	pc, r1, r8, ror #10
   1be50:	andeq	pc, r1, ip, lsr #10

0001be54 <beginMidiBlock@@Base>:
   1be54:	push	{r4, lr}
   1be58:	ldr	r2, [r0, #140]	; 0x8c
   1be5c:	ldr	r3, [r0, #136]	; 0x88
   1be60:	ldr	r4, [pc, #104]	; 1bed0 <beginMidiBlock@@Base+0x7c>
   1be64:	add	r1, r2, #7
   1be68:	cmp	r1, r3
   1be6c:	add	r4, pc, r4
   1be70:	movlt	r3, r0
   1be74:	str	r0, [r4]
   1be78:	blt	1be88 <beginMidiBlock@@Base+0x34>
   1be7c:	bl	1ba04 <seqbuf_dump@@Base>
   1be80:	ldr	r3, [r4]
   1be84:	ldr	r2, [r3, #140]	; 0x8c
   1be88:	add	r1, r3, r2
   1be8c:	add	r4, r2, #12
   1be90:	ldr	ip, [pc, #60]	; 1bed4 <beginMidiBlock@@Base+0x80>
   1be94:	mvn	r0, #126	; 0x7e
   1be98:	mov	r2, #4
   1be9c:	strb	r0, [r1, #8]
   1bea0:	strb	r2, [r1, #9]
   1bea4:	add	ip, pc, ip
   1bea8:	mov	r2, #0
   1beac:	strb	r2, [r1, #10]
   1beb0:	strb	r2, [r1, #11]
   1beb4:	mov	r0, #1
   1beb8:	str	r2, [r3, r4]
   1bebc:	ldr	r1, [r3, #140]	; 0x8c
   1bec0:	str	r2, [ip]
   1bec4:	add	r2, r1, #8
   1bec8:	str	r2, [r3, #140]	; 0x8c
   1becc:	pop	{r4, pc}
   1bed0:	ldrdeq	pc, [r1], -r4
   1bed4:	muleq	r1, ip, r4

0001bed8 <endMidiBlock@@Base>:
   1bed8:	push	{r3, r4, r5, lr}
   1bedc:	mov	r4, r0
   1bee0:	ldr	r1, [r0, #140]	; 0x8c
   1bee4:	ldr	r3, [r0, #136]	; 0x88
   1bee8:	ldr	r5, [pc, #120]	; 1bf68 <endMidiBlock@@Base+0x90>
   1beec:	add	r2, r1, #7
   1bef0:	cmp	r2, r3
   1bef4:	add	r5, pc, r5
   1bef8:	movlt	r3, r0
   1befc:	str	r0, [r5]
   1bf00:	blt	1bf10 <endMidiBlock@@Base+0x38>
   1bf04:	bl	1ba04 <seqbuf_dump@@Base>
   1bf08:	ldr	r3, [r5]
   1bf0c:	ldr	r1, [r3, #140]	; 0x8c
   1bf10:	add	r2, r3, r1
   1bf14:	add	r1, r1, #12
   1bf18:	mov	r5, #0
   1bf1c:	mvn	ip, #126	; 0x7e
   1bf20:	strb	r5, [r2, #10]
   1bf24:	mov	r0, #3
   1bf28:	strb	ip, [r2, #8]
   1bf2c:	strb	r0, [r2, #9]
   1bf30:	strb	r5, [r2, #11]
   1bf34:	str	r5, [r3, r1]
   1bf38:	ldr	r2, [r3, #140]	; 0x8c
   1bf3c:	add	r2, r2, #8
   1bf40:	str	r2, [r3, #140]	; 0x8c
   1bf44:	bl	1ba04 <seqbuf_dump@@Base>
   1bf48:	ldr	r0, [r4]
   1bf4c:	movw	r1, #20737	; 0x5101
   1bf50:	bl	14f14 <ioctl@plt>
   1bf54:	ldr	r3, [pc, #16]	; 1bf6c <endMidiBlock@@Base+0x94>
   1bf58:	mov	r0, #1
   1bf5c:	add	r3, pc, r3
   1bf60:	str	r5, [r3]
   1bf64:	pop	{r3, r4, r5, pc}
   1bf68:	andeq	pc, r1, ip, asr #8
   1bf6c:	andeq	pc, r1, r4, ror #7

0001bf70 <startMidiNote@@Base>:
   1bf70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bf74:	mov	r4, r0
   1bf78:	ldr	r0, [r0, #140]	; 0x8c
   1bf7c:	mov	r8, r1
   1bf80:	ldr	r5, [pc, #156]	; 1c024 <startMidiNote@@Base+0xb4>
   1bf84:	mov	r9, r2
   1bf88:	ldr	r1, [r4, #136]	; 0x88
   1bf8c:	add	r6, r0, #7
   1bf90:	add	r5, pc, r5
   1bf94:	mov	r7, r3
   1bf98:	cmp	r6, r1
   1bf9c:	str	r4, [r5]
   1bfa0:	movlt	r5, r4
   1bfa4:	blt	1bfb8 <startMidiNote@@Base+0x48>
   1bfa8:	bl	1ba04 <seqbuf_dump@@Base>
   1bfac:	ldr	r5, [r5]
   1bfb0:	ldr	r0, [r5, #140]	; 0x8c
   1bfb4:	add	r6, r0, #7
   1bfb8:	rsb	r3, r7, r7, lsl #7
   1bfbc:	movw	r7, #34079	; 0x851f
   1bfc0:	movt	r7, #20971	; 0x51eb
   1bfc4:	add	ip, r5, r0
   1bfc8:	ldr	sl, [pc, #88]	; 1c028 <startMidiNote@@Base+0xb8>
   1bfcc:	mvn	r2, #108	; 0x6c
   1bfd0:	smull	r1, r7, r7, r3
   1bfd4:	strb	r2, [ip, #8]
   1bfd8:	ldr	r1, [r4, #4]
   1bfdc:	add	sl, pc, sl
   1bfe0:	add	r6, r5, r6
   1bfe4:	asr	r3, r3, #31
   1bfe8:	add	r2, r0, #8
   1bfec:	strb	r8, [ip, #11]
   1bff0:	strb	r1, [ip, #9]
   1bff4:	mvn	r4, #111	; 0x6f
   1bff8:	mov	r1, #0
   1bffc:	strb	r9, [ip, #12]
   1c000:	strb	r4, [ip, #10]
   1c004:	rsb	r7, r3, r7, asr #5
   1c008:	strb	r1, [ip, #14]
   1c00c:	mov	r0, #1
   1c010:	strb	r7, [ip, #13]
   1c014:	str	r1, [sl]
   1c018:	strb	r1, [r6, #8]
   1c01c:	str	r2, [r5, #140]	; 0x8c
   1c020:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c024:			; <UNDEFINED> instruction: 0x0001f3b0
   1c028:	andeq	pc, r1, r4, ror #6

0001c02c <stopMidiNote@@Base>:
   1c02c:	push	{r4, r5, r6, r7, r8, lr}
   1c030:	mov	r4, r0
   1c034:	ldr	r2, [r0, #140]	; 0x8c
   1c038:	mov	r8, r1
   1c03c:	ldr	r3, [r0, #136]	; 0x88
   1c040:	ldr	r5, [pc, #120]	; 1c0c0 <stopMidiNote@@Base+0x94>
   1c044:	add	r0, r2, #7
   1c048:	cmp	r0, r3
   1c04c:	add	r5, pc, r5
   1c050:	movlt	ip, r4
   1c054:	str	r4, [r5]
   1c058:	blt	1c06c <stopMidiNote@@Base+0x40>
   1c05c:	bl	1ba04 <seqbuf_dump@@Base>
   1c060:	ldr	ip, [r5]
   1c064:	ldr	r2, [ip, #140]	; 0x8c
   1c068:	add	r0, r2, #7
   1c06c:	add	r3, ip, r2
   1c070:	ldr	r7, [pc, #76]	; 1c0c4 <stopMidiNote@@Base+0x98>
   1c074:	mvn	r1, #108	; 0x6c
   1c078:	add	r6, ip, r0
   1c07c:	strb	r1, [r3, #8]
   1c080:	add	r7, pc, r7
   1c084:	ldr	r4, [r4, #4]
   1c088:	add	r5, r2, #8
   1c08c:	strb	r8, [r3, #11]
   1c090:	mov	r2, #0
   1c094:	mvn	r0, #127	; 0x7f
   1c098:	strb	r2, [r3, #12]
   1c09c:	strb	r0, [r3, #10]
   1c0a0:	mov	r0, #1
   1c0a4:	strb	r4, [r3, #9]
   1c0a8:	strb	r2, [r3, #13]
   1c0ac:	strb	r2, [r3, #14]
   1c0b0:	str	r2, [r7]
   1c0b4:	strb	r2, [r6, #8]
   1c0b8:	str	r5, [ip, #140]	; 0x8c
   1c0bc:	pop	{r4, r5, r6, r7, r8, pc}
   1c0c0:	strdeq	pc, [r1], -r4
   1c0c4:	andeq	pc, r1, r0, asr #5

0001c0c8 <insertMidiWait@@Base>:
   1c0c8:	push	{r4, r5, r6, lr}
   1c0cc:	mov	r5, r1
   1c0d0:	ldr	ip, [r0, #140]	; 0x8c
   1c0d4:	ldr	r3, [r0, #136]	; 0x88
   1c0d8:	ldr	r4, [pc, #124]	; 1c15c <insertMidiWait@@Base+0x94>
   1c0dc:	add	r2, ip, #7
   1c0e0:	cmp	r2, r3
   1c0e4:	add	r4, pc, r4
   1c0e8:	movlt	r3, r0
   1c0ec:	str	r0, [r4]
   1c0f0:	blt	1c100 <insertMidiWait@@Base+0x38>
   1c0f4:	bl	1ba04 <seqbuf_dump@@Base>
   1c0f8:	ldr	r3, [r4]
   1c0fc:	ldr	ip, [r3, #140]	; 0x8c
   1c100:	add	r1, r5, #9
   1c104:	movw	r0, #26215	; 0x6667
   1c108:	movt	r0, #26214	; 0x6666
   1c10c:	add	r2, r3, ip
   1c110:	asr	r5, r1, #31
   1c114:	add	ip, ip, #12
   1c118:	smull	r4, r6, r0, r1
   1c11c:	ldr	r1, [pc, #60]	; 1c160 <insertMidiWait@@Base+0x98>
   1c120:	mvn	r4, #126	; 0x7e
   1c124:	mov	r0, #1
   1c128:	strb	r4, [r2, #8]
   1c12c:	add	r1, pc, r1
   1c130:	mov	r4, #0
   1c134:	strb	r0, [r2, #9]
   1c138:	strb	r4, [r2, #10]
   1c13c:	strb	r4, [r2, #11]
   1c140:	rsb	r5, r5, r6, asr #2
   1c144:	str	r5, [r3, ip]
   1c148:	ldr	r2, [r3, #140]	; 0x8c
   1c14c:	str	r4, [r1]
   1c150:	add	r2, r2, #8
   1c154:	str	r2, [r3, #140]	; 0x8c
   1c158:	pop	{r4, r5, r6, pc}
   1c15c:	andeq	pc, r1, ip, asr r2	; <UNPREDICTABLE>
   1c160:	andeq	pc, r1, r4, lsl r2	; <UNPREDICTABLE>

0001c164 <enablePorts@@Base>:
   1c164:	push	{r4, r5, r6, lr}
   1c168:	mov	r5, r1
   1c16c:	sub	sp, sp, #8
   1c170:	mov	r1, r2
   1c174:	mov	r4, r2
   1c178:	mov	r6, r0
   1c17c:	mov	r2, #1
   1c180:	mov	r0, r5
   1c184:	bl	15100 <ioperm@plt>
   1c188:	cmn	r0, #1
   1c18c:	movne	r0, #1
   1c190:	beq	1c19c <enablePorts@@Base+0x38>
   1c194:	add	sp, sp, #8
   1c198:	pop	{r4, r5, r6, pc}
   1c19c:	bl	151b4 <__errno_location@plt>
   1c1a0:	ldr	r0, [r0]
   1c1a4:	bl	14d64 <strerror@plt>
   1c1a8:	ldr	r1, [pc, #32]	; 1c1d0 <enablePorts@@Base+0x6c>
   1c1ac:	mov	r2, r5
   1c1b0:	mov	r3, r4
   1c1b4:	add	r1, pc, r1
   1c1b8:	str	r0, [sp]
   1c1bc:	mov	r0, r6
   1c1c0:	bl	183d0 <logMessage@@Base>
   1c1c4:	mov	r0, #0
   1c1c8:	add	sp, sp, #8
   1c1cc:	pop	{r4, r5, r6, pc}
   1c1d0:	andeq	sl, r0, r4, lsr #15

0001c1d4 <disablePorts@@Base>:
   1c1d4:	push	{r4, r5, lr}
   1c1d8:	mov	r2, #0
   1c1dc:	sub	sp, sp, #12
   1c1e0:	mov	r5, r0
   1c1e4:	mov	r4, r1
   1c1e8:	bl	15100 <ioperm@plt>
   1c1ec:	cmn	r0, #1
   1c1f0:	movne	r0, #1
   1c1f4:	beq	1c200 <disablePorts@@Base+0x2c>
   1c1f8:	add	sp, sp, #12
   1c1fc:	pop	{r4, r5, pc}
   1c200:	bl	151b4 <__errno_location@plt>
   1c204:	ldr	r0, [r0]
   1c208:	bl	14d64 <strerror@plt>
   1c20c:	ldr	r1, [pc, #32]	; 1c234 <disablePorts@@Base+0x60>
   1c210:	mov	r2, r5
   1c214:	mov	r3, r4
   1c218:	add	r1, pc, r1
   1c21c:	str	r0, [sp]
   1c220:	mov	r0, #3
   1c224:	bl	183d0 <logMessage@@Base>
   1c228:	mov	r0, #0
   1c22c:	add	sp, sp, #12
   1c230:	pop	{r4, r5, pc}
   1c234:	andeq	sl, r0, r0, ror #14

0001c238 <readPort1@@Base>:
   1c238:	b	1513c <inb@plt>

0001c23c <writePort1@@Base>:
   1c23c:	mov	r3, r0
   1c240:	mov	r0, r1
   1c244:	mov	r1, r3
   1c248:	b	1510c <outb@plt>

0001c24c <installKernelModule@@Base>:
   1c24c:	cmp	r1, #0
   1c250:	beq	1c260 <installKernelModule@@Base+0x14>
   1c254:	ldr	r3, [r1]
   1c258:	cmp	r3, #0
   1c25c:	bne	1c264 <installKernelModule@@Base+0x18>
   1c260:	b	1b3ac <executeHostCommand@@Base+0x1b4>
   1c264:	subs	r3, r3, #2
   1c268:	rsbs	r0, r3, #0
   1c26c:	adcs	r0, r0, r3
   1c270:	bx	lr

0001c274 <canBeep@@Base>:
   1c274:	ldr	r1, [pc, #36]	; 1c2a0 <canBeep@@Base+0x2c>
   1c278:	ldr	r0, [pc, #36]	; 1c2a4 <canBeep@@Base+0x30>
   1c27c:	add	r1, pc, r1
   1c280:	push	{r3, lr}
   1c284:	add	r1, r1, #4
   1c288:	add	r0, pc, r0
   1c28c:	bl	1c24c <installKernelModule@@Base>
   1c290:	bl	1942c <getConsole@@Base>
   1c294:	adds	r0, r0, #0
   1c298:	movne	r0, #1
   1c29c:	pop	{r3, pc}
   1c2a0:	andeq	pc, r1, r4, asr #1
   1c2a4:	andeq	sl, r0, r0, lsl r7

0001c2a8 <openCharacterDevice@@Base>:
   1c2a8:	ldr	ip, [pc, #716]	; 1c57c <openCharacterDevice@@Base+0x2d4>
   1c2ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c2b0:	mov	r7, r1
   1c2b4:	ldr	r1, [pc, #708]	; 1c580 <openCharacterDevice@@Base+0x2d8>
   1c2b8:	add	ip, pc, ip
   1c2bc:	mov	r9, r3
   1c2c0:	sub	sp, sp, #124	; 0x7c
   1c2c4:	mov	r3, ip
   1c2c8:	mov	sl, r2
   1c2cc:	ldr	r6, [ip, r1]
   1c2d0:	mov	r8, r0
   1c2d4:	ldr	r3, [r6]
   1c2d8:	str	r3, [sp, #116]	; 0x74
   1c2dc:	bl	19734 <getDevicePath@@Base>
   1c2e0:	subs	r5, r0, #0
   1c2e4:	beq	1c3e4 <openCharacterDevice@@Base+0x13c>
   1c2e8:	mov	r1, r7
   1c2ec:	bl	14d58 <__open_2@plt>
   1c2f0:	cmn	r0, #1
   1c2f4:	mov	r4, r0
   1c2f8:	beq	1c39c <openCharacterDevice@@Base+0xf4>
   1c2fc:	ldr	r1, [pc, #640]	; 1c584 <openCharacterDevice@@Base+0x2dc>
   1c300:	mov	r0, #7
   1c304:	mov	r2, r5
   1c308:	mov	r3, r4
   1c30c:	add	r1, pc, r1
   1c310:	bl	183d0 <logMessage@@Base>
   1c314:	mov	r0, #3
   1c318:	mov	r1, r4
   1c31c:	add	r2, sp, #24
   1c320:	bl	150ac <__fxstat@plt>
   1c324:	cmn	r0, #1
   1c328:	beq	1c3ec <openCharacterDevice@@Base+0x144>
   1c32c:	ldr	r3, [sp, #40]	; 0x28
   1c330:	and	r3, r3, #61440	; 0xf000
   1c334:	cmp	r3, #8192	; 0x2000
   1c338:	beq	1c378 <openCharacterDevice@@Base+0xd0>
   1c33c:	ldr	r1, [pc, #580]	; 1c588 <openCharacterDevice@@Base+0x2e0>
   1c340:	mov	r0, #7
   1c344:	mov	r2, r5
   1c348:	mov	r3, r4
   1c34c:	add	r1, pc, r1
   1c350:	bl	183d0 <logMessage@@Base>
   1c354:	mov	r0, r4
   1c358:	bl	14e6c <close@plt>
   1c35c:	ldr	r1, [pc, #552]	; 1c58c <openCharacterDevice@@Base+0x2e4>
   1c360:	mov	r3, r4
   1c364:	mov	r0, #7
   1c368:	add	r1, pc, r1
   1c36c:	mov	r2, r5
   1c370:	mvn	r4, #0
   1c374:	bl	183d0 <logMessage@@Base>
   1c378:	mov	r0, r5
   1c37c:	bl	14d10 <free@plt>
   1c380:	ldr	r2, [sp, #116]	; 0x74
   1c384:	mov	r0, r4
   1c388:	ldr	r3, [r6]
   1c38c:	cmp	r2, r3
   1c390:	bne	1c534 <openCharacterDevice@@Base+0x28c>
   1c394:	add	sp, sp, #124	; 0x7c
   1c398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c39c:	bl	151b4 <__errno_location@plt>
   1c3a0:	ldr	r3, [pc, #488]	; 1c590 <openCharacterDevice@@Base+0x2e8>
   1c3a4:	add	r3, pc, r3
   1c3a8:	str	r3, [sp, #12]
   1c3ac:	mov	fp, r0
   1c3b0:	ldr	r0, [r0]
   1c3b4:	bl	14d64 <strerror@plt>
   1c3b8:	ldr	r1, [sp, #12]
   1c3bc:	mov	r2, r5
   1c3c0:	mov	r3, r0
   1c3c4:	mov	r0, #7
   1c3c8:	bl	183d0 <logMessage@@Base>
   1c3cc:	ldr	r3, [fp]
   1c3d0:	cmp	r3, #2
   1c3d4:	beq	1c418 <openCharacterDevice@@Base+0x170>
   1c3d8:	cmp	r5, #0
   1c3dc:	mvnne	r4, #0
   1c3e0:	bne	1c378 <openCharacterDevice@@Base+0xd0>
   1c3e4:	mvn	r4, #0
   1c3e8:	b	1c380 <openCharacterDevice@@Base+0xd8>
   1c3ec:	bl	151b4 <__errno_location@plt>
   1c3f0:	ldr	r0, [r0]
   1c3f4:	bl	14d64 <strerror@plt>
   1c3f8:	ldr	r1, [pc, #404]	; 1c594 <openCharacterDevice@@Base+0x2ec>
   1c3fc:	mov	r2, r4
   1c400:	mov	r3, r5
   1c404:	add	r1, pc, r1
   1c408:	str	r0, [sp]
   1c40c:	mov	r0, #7
   1c410:	bl	183d0 <logMessage@@Base>
   1c414:	b	1c354 <openCharacterDevice@@Base+0xac>
   1c418:	mov	r0, r5
   1c41c:	bl	14d10 <free@plt>
   1c420:	mov	r0, r8
   1c424:	bl	186e4 <locatePathName@@Base>
   1c428:	bl	18bf4 <makeWritablePath@@Base>
   1c42c:	subs	r5, r0, #0
   1c430:	beq	1c3e4 <openCharacterDevice@@Base+0x13c>
   1c434:	mov	r1, r7
   1c438:	bl	14d58 <__open_2@plt>
   1c43c:	cmn	r0, #1
   1c440:	mov	r4, r0
   1c444:	beq	1c464 <openCharacterDevice@@Base+0x1bc>
   1c448:	ldr	r1, [pc, #328]	; 1c598 <openCharacterDevice@@Base+0x2f0>
   1c44c:	mov	r0, #7
   1c450:	mov	r2, r5
   1c454:	mov	r3, r4
   1c458:	add	r1, pc, r1
   1c45c:	bl	183d0 <logMessage@@Base>
   1c460:	b	1c314 <openCharacterDevice@@Base+0x6c>
   1c464:	ldr	r0, [fp]
   1c468:	bl	14d64 <strerror@plt>
   1c46c:	ldr	r1, [sp, #12]
   1c470:	mov	r2, r5
   1c474:	mov	r3, r0
   1c478:	mov	r0, #7
   1c47c:	bl	183d0 <logMessage@@Base>
   1c480:	ldr	r3, [fp]
   1c484:	cmp	r3, #2
   1c488:	bne	1c3d8 <openCharacterDevice@@Base+0x130>
   1c48c:	bic	lr, r9, #255	; 0xff
   1c490:	ubfx	r8, sl, #0, #12
   1c494:	bic	r3, sl, #4080	; 0xff0
   1c498:	uxtb	r4, r9
   1c49c:	lsr	r1, lr, #20
   1c4a0:	lsl	r0, lr, #12
   1c4a4:	add	lr, sp, #120	; 0x78
   1c4a8:	bic	r3, r3, #15
   1c4ac:	mov	r2, #0
   1c4b0:	orr	r4, r4, r8, lsl #8
   1c4b4:	orr	r2, r2, r0
   1c4b8:	orr	r3, r3, r1
   1c4bc:	orr	r2, r2, r4
   1c4c0:	mov	r0, #1
   1c4c4:	strd	r2, [lr, #-104]!	; 0xffffff98
   1c4c8:	mov	r1, r5
   1c4cc:	mov	r2, #8576	; 0x2180
   1c4d0:	mov	r3, lr
   1c4d4:	bl	14d70 <__xmknod@plt>
   1c4d8:	cmn	r0, #1
   1c4dc:	beq	1c538 <openCharacterDevice@@Base+0x290>
   1c4e0:	ldr	r1, [pc, #180]	; 1c59c <openCharacterDevice@@Base+0x2f4>
   1c4e4:	mov	r0, #7
   1c4e8:	mov	r2, r5
   1c4ec:	mov	r3, #8576	; 0x2180
   1c4f0:	add	r1, pc, r1
   1c4f4:	str	sl, [sp]
   1c4f8:	str	r9, [sp, #4]
   1c4fc:	bl	183d0 <logMessage@@Base>
   1c500:	mov	r0, r5
   1c504:	mov	r1, r7
   1c508:	bl	14d58 <__open_2@plt>
   1c50c:	cmn	r0, #1
   1c510:	mov	r4, r0
   1c514:	beq	1c55c <openCharacterDevice@@Base+0x2b4>
   1c518:	ldr	r1, [pc, #128]	; 1c5a0 <openCharacterDevice@@Base+0x2f8>
   1c51c:	mov	r0, #7
   1c520:	mov	r2, r5
   1c524:	mov	r3, r4
   1c528:	add	r1, pc, r1
   1c52c:	bl	183d0 <logMessage@@Base>
   1c530:	b	1c314 <openCharacterDevice@@Base+0x6c>
   1c534:	bl	14fbc <__stack_chk_fail@plt>
   1c538:	ldr	r0, [fp]
   1c53c:	bl	14d64 <strerror@plt>
   1c540:	ldr	r1, [pc, #92]	; 1c5a4 <openCharacterDevice@@Base+0x2fc>
   1c544:	mov	r2, r5
   1c548:	add	r1, pc, r1
   1c54c:	mov	r3, r0
   1c550:	mov	r0, #7
   1c554:	bl	183d0 <logMessage@@Base>
   1c558:	b	1c3d8 <openCharacterDevice@@Base+0x130>
   1c55c:	ldr	r0, [fp]
   1c560:	bl	14d64 <strerror@plt>
   1c564:	ldr	r1, [sp, #12]
   1c568:	mov	r2, r5
   1c56c:	mov	r3, r0
   1c570:	mov	r0, #7
   1c574:	bl	183d0 <logMessage@@Base>
   1c578:	b	1c3d8 <openCharacterDevice@@Base+0x130>
   1c57c:	andeq	lr, r1, r0, asr #26
   1c580:	andeq	r0, r0, r8, asr #4
   1c584:	muleq	r0, r4, r6
   1c588:	andeq	sl, r0, r0, lsl #14
   1c58c:	andeq	sl, r0, r8, lsl #14
   1c590:	andeq	sl, r0, r8, lsl r6
   1c594:	andeq	sl, r0, r4, lsr #12
   1c598:	andeq	sl, r0, r8, asr #10
   1c59c:	andeq	sl, r0, r8, lsl #10
   1c5a0:	andeq	sl, r0, r8, ror r4
   1c5a4:	muleq	r0, r0, r4

0001c5a8 <getUinputDevice@@Base>:
   1c5a8:	ldr	r3, [pc, #616]	; 1c818 <getUinputDevice@@Base+0x270>
   1c5ac:	ldr	r1, [pc, #616]	; 1c81c <getUinputDevice@@Base+0x274>
   1c5b0:	add	r3, pc, r3
   1c5b4:	ldr	r2, [pc, #612]	; 1c820 <getUinputDevice@@Base+0x278>
   1c5b8:	push	{r4, r5, r6, r7, lr}
   1c5bc:	add	r2, pc, r2
   1c5c0:	ldr	r6, [r3, r1]
   1c5c4:	sub	sp, sp, #1120	; 0x460
   1c5c8:	ldr	r0, [r2]
   1c5cc:	sub	sp, sp, #4
   1c5d0:	ldr	r3, [r6]
   1c5d4:	cmn	r0, #1
   1c5d8:	str	r3, [sp, #1116]	; 0x45c
   1c5dc:	beq	1c5fc <getUinputDevice@@Base+0x54>
   1c5e0:	ldr	r2, [sp, #1116]	; 0x45c
   1c5e4:	ldr	r3, [r6]
   1c5e8:	cmp	r2, r3
   1c5ec:	bne	1c814 <getUinputDevice@@Base+0x26c>
   1c5f0:	add	sp, sp, #1120	; 0x460
   1c5f4:	add	sp, sp, #4
   1c5f8:	pop	{r4, r5, r6, r7, pc}
   1c5fc:	ldr	r1, [pc, #544]	; 1c824 <getUinputDevice@@Base+0x27c>
   1c600:	ldr	r0, [pc, #544]	; 1c828 <getUinputDevice@@Base+0x280>
   1c604:	add	r1, pc, r1
   1c608:	add	r0, pc, r0
   1c60c:	ldr	r4, [r1, #8]!
   1c610:	bl	1c24c <installKernelModule@@Base>
   1c614:	cmp	r0, #0
   1c618:	beq	1c62c <getUinputDevice@@Base+0x84>
   1c61c:	cmp	r4, #0
   1c620:	bne	1c62c <getUinputDevice@@Base+0x84>
   1c624:	mov	r0, #500	; 0x1f4
   1c628:	bl	1a9c0 <approximateDelay@@Base>
   1c62c:	ldr	r0, [pc, #504]	; 1c82c <getUinputDevice@@Base+0x284>
   1c630:	ldr	r1, [pc, #504]	; 1c830 <getUinputDevice@@Base+0x288>
   1c634:	add	r0, pc, r0
   1c638:	add	r1, pc, r1
   1c63c:	bl	1974c <resolveDeviceName@@Base>
   1c640:	subs	r4, r0, #0
   1c644:	beq	1c7d8 <getUinputDevice@@Base+0x230>
   1c648:	mov	r1, #1
   1c64c:	mov	r2, #10
   1c650:	mov	r3, #223	; 0xdf
   1c654:	bl	1c2a8 <openCharacterDevice@@Base>
   1c658:	cmn	r0, #1
   1c65c:	mov	r5, r0
   1c660:	beq	1c7bc <getUinputDevice@@Base+0x214>
   1c664:	ldr	r1, [pc, #456]	; 1c834 <getUinputDevice@@Base+0x28c>
   1c668:	mov	r3, r5
   1c66c:	mov	r2, r4
   1c670:	mov	r0, #7
   1c674:	add	r1, pc, r1
   1c678:	bl	183d0 <logMessage@@Base>
   1c67c:	mov	r1, #0
   1c680:	movw	r2, #1116	; 0x45c
   1c684:	mov	r0, sp
   1c688:	bl	14e0c <memset@plt>
   1c68c:	ldr	r3, [pc, #420]	; 1c838 <getUinputDevice@@Base+0x290>
   1c690:	movw	r2, #1116	; 0x45c
   1c694:	add	r3, pc, r3
   1c698:	ldm	r3, {r0, r1}
   1c69c:	lsr	r3, r1, #16
   1c6a0:	strb	r3, [sp, #6]
   1c6a4:	str	r0, [sp]
   1c6a8:	mov	r0, r5
   1c6ac:	strh	r1, [sp, #4]
   1c6b0:	mov	r1, sp
   1c6b4:	bl	15130 <write@plt>
   1c6b8:	cmn	r0, #1
   1c6bc:	beq	1c7e4 <getUinputDevice@@Base+0x23c>
   1c6c0:	movw	r1, #21860	; 0x5564
   1c6c4:	mov	r0, r5
   1c6c8:	movt	r1, #16388	; 0x4004
   1c6cc:	mov	r2, #1
   1c6d0:	bl	14f14 <ioctl@plt>
   1c6d4:	ldr	r7, [pc, #352]	; 1c83c <getUinputDevice@@Base+0x294>
   1c6d8:	mov	r4, #0
   1c6dc:	add	r7, pc, r7
   1c6e0:	cmn	r0, #1
   1c6e4:	bne	1c6f8 <getUinputDevice@@Base+0x150>
   1c6e8:	b	1c7f4 <getUinputDevice@@Base+0x24c>
   1c6ec:	add	r4, r4, #1
   1c6f0:	cmp	r4, #768	; 0x300
   1c6f4:	beq	1c738 <getUinputDevice@@Base+0x190>
   1c6f8:	movw	r1, #21861	; 0x5565
   1c6fc:	mov	r0, r5
   1c700:	movt	r1, #16388	; 0x4004
   1c704:	mov	r2, r4
   1c708:	bl	14f14 <ioctl@plt>
   1c70c:	cmn	r0, #1
   1c710:	bne	1c6ec <getUinputDevice@@Base+0x144>
   1c714:	bl	151b4 <__errno_location@plt>
   1c718:	ldr	r0, [r0]
   1c71c:	bl	14d64 <strerror@plt>
   1c720:	mov	r1, r7
   1c724:	mov	r2, r4
   1c728:	mov	r3, r0
   1c72c:	mov	r0, #4
   1c730:	bl	183d0 <logMessage@@Base>
   1c734:	b	1c6ec <getUinputDevice@@Base+0x144>
   1c738:	movw	r1, #21860	; 0x5564
   1c73c:	mov	r0, r5
   1c740:	movt	r1, #16388	; 0x4004
   1c744:	mov	r2, #20
   1c748:	bl	14f14 <ioctl@plt>
   1c74c:	cmn	r0, #1
   1c750:	beq	1c804 <getUinputDevice@@Base+0x25c>
   1c754:	mov	r0, r5
   1c758:	movw	r1, #21761	; 0x5501
   1c75c:	bl	14f14 <ioctl@plt>
   1c760:	cmn	r0, #1
   1c764:	beq	1c77c <getUinputDevice@@Base+0x1d4>
   1c768:	ldr	r3, [pc, #208]	; 1c840 <getUinputDevice@@Base+0x298>
   1c76c:	mov	r0, r5
   1c770:	add	r3, pc, r3
   1c774:	str	r5, [r3]
   1c778:	b	1c5e0 <getUinputDevice@@Base+0x38>
   1c77c:	ldr	r0, [pc, #192]	; 1c844 <getUinputDevice@@Base+0x29c>
   1c780:	add	r0, pc, r0
   1c784:	bl	18498 <logSystemError@@Base>
   1c788:	ldr	r4, [pc, #184]	; 1c848 <getUinputDevice@@Base+0x2a0>
   1c78c:	mov	r0, r5
   1c790:	add	r4, pc, r4
   1c794:	ldr	r3, [r4]
   1c798:	cmp	r5, r3
   1c79c:	beq	1c5e0 <getUinputDevice@@Base+0x38>
   1c7a0:	bl	14e6c <close@plt>
   1c7a4:	ldr	r1, [pc, #160]	; 1c84c <getUinputDevice@@Base+0x2a4>
   1c7a8:	mov	r0, #7
   1c7ac:	add	r1, pc, r1
   1c7b0:	bl	183d0 <logMessage@@Base>
   1c7b4:	ldr	r0, [r4]
   1c7b8:	b	1c5e0 <getUinputDevice@@Base+0x38>
   1c7bc:	ldr	r1, [pc, #140]	; 1c850 <getUinputDevice@@Base+0x2a8>
   1c7c0:	mov	r0, #7
   1c7c4:	add	r1, pc, r1
   1c7c8:	bl	183d0 <logMessage@@Base>
   1c7cc:	ldr	r3, [pc, #128]	; 1c854 <getUinputDevice@@Base+0x2ac>
   1c7d0:	ldr	r0, [pc, r3]
   1c7d4:	b	1c5e0 <getUinputDevice@@Base+0x38>
   1c7d8:	ldr	r3, [pc, #120]	; 1c858 <getUinputDevice@@Base+0x2b0>
   1c7dc:	ldr	r0, [pc, r3]
   1c7e0:	b	1c5e0 <getUinputDevice@@Base+0x38>
   1c7e4:	ldr	r0, [pc, #112]	; 1c85c <getUinputDevice@@Base+0x2b4>
   1c7e8:	add	r0, pc, r0
   1c7ec:	bl	18498 <logSystemError@@Base>
   1c7f0:	b	1c788 <getUinputDevice@@Base+0x1e0>
   1c7f4:	ldr	r0, [pc, #100]	; 1c860 <getUinputDevice@@Base+0x2b8>
   1c7f8:	add	r0, pc, r0
   1c7fc:	bl	18498 <logSystemError@@Base>
   1c800:	b	1c788 <getUinputDevice@@Base+0x1e0>
   1c804:	ldr	r0, [pc, #88]	; 1c864 <getUinputDevice@@Base+0x2bc>
   1c808:	add	r0, pc, r0
   1c80c:	bl	18498 <logSystemError@@Base>
   1c810:	b	1c788 <getUinputDevice@@Base+0x1e0>
   1c814:	bl	14fbc <__stack_chk_fail@plt>
   1c818:	andeq	lr, r1, r8, asr #20
   1c81c:	andeq	r0, r0, r8, asr #4
   1c820:	strdeq	lr, [r1], -r4
   1c824:	andeq	lr, r1, ip, lsr sp
   1c828:	andeq	sl, r0, r8, asr r5
   1c82c:	andeq	lr, r1, r0, lsr r0
   1c830:	andeq	sl, r0, r8, lsr #10
   1c834:	andeq	sl, r0, r8, lsl r4
   1c838:	andeq	r9, r0, r8, asr #16
   1c83c:	andeq	sl, r0, r4, ror #7
   1c840:	andeq	lr, r1, r0, asr #22
   1c844:	andeq	sl, r0, ip, lsl #7
   1c848:	andeq	lr, r1, r0, lsr #22
   1c84c:	muleq	r0, r8, r3
   1c850:	muleq	r0, r0, r3
   1c854:	andeq	lr, r1, r0, ror #21
   1c858:	ldrdeq	lr, [r1], -r4
   1c85c:	andeq	sl, r0, ip, lsr r3
   1c860:	andeq	sl, r0, ip, lsr #5
   1c864:	andeq	sl, r0, r8, ror #5

0001c868 <hasInputEvent@@Base>:
   1c868:	push	{r4, r5, r6, fp, lr}
   1c86c:	lsr	r3, r3, #5
   1c870:	ldr	lr, [pc, #132]	; 1c8fc <hasInputEvent@@Base+0x94>
   1c874:	add	fp, sp, #16
   1c878:	ldr	r4, [pc, #128]	; 1c900 <hasInputEvent@@Base+0x98>
   1c87c:	sub	sp, sp, #12
   1c880:	add	lr, pc, lr
   1c884:	add	r3, r3, #1
   1c888:	add	r1, r1, #32
   1c88c:	ldr	r4, [lr, r4]
   1c890:	orr	r1, r1, #-2147483648	; 0x80000000
   1c894:	lsl	r5, r3, #2
   1c898:	movw	ip, #32760	; 0x7ff8
   1c89c:	add	r5, r5, #10
   1c8a0:	orr	r1, r1, #17664	; 0x4500
   1c8a4:	and	ip, r5, ip
   1c8a8:	orr	r1, r1, r3, lsl #18
   1c8ac:	sub	sp, sp, ip
   1c8b0:	ldr	r3, [r4]
   1c8b4:	mov	r6, r2
   1c8b8:	mov	r2, sp
   1c8bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1c8c0:	bl	14f14 <ioctl@plt>
   1c8c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c8c8:	cmn	r0, #1
   1c8cc:	lsrne	r3, r6, #5
   1c8d0:	andne	r6, r6, #31
   1c8d4:	moveq	r0, #0
   1c8d8:	ldrne	r0, [sp, r3, lsl #2]
   1c8dc:	ldr	r3, [r4]
   1c8e0:	lsrne	r0, r0, r6
   1c8e4:	andne	r0, r0, #1
   1c8e8:	cmp	r2, r3
   1c8ec:	bne	1c8f8 <hasInputEvent@@Base+0x90>
   1c8f0:	sub	sp, fp, #16
   1c8f4:	pop	{r4, r5, r6, fp, pc}
   1c8f8:	bl	14fbc <__stack_chk_fail@plt>
   1c8fc:	andeq	lr, r1, r8, ror r7
   1c900:	andeq	r0, r0, r8, asr #4

0001c904 <writeInputEvent@@Base>:
   1c904:	ldr	r3, [pc, #180]	; 1c9c0 <writeInputEvent@@Base+0xbc>
   1c908:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c90c:	mov	r9, r0
   1c910:	ldr	r0, [pc, #172]	; 1c9c4 <writeInputEvent@@Base+0xc0>
   1c914:	add	r3, pc, r3
   1c918:	sub	sp, sp, #24
   1c91c:	mov	r8, r1
   1c920:	mov	r7, r2
   1c924:	ldr	r5, [r3, r0]
   1c928:	ldr	r3, [r5]
   1c92c:	str	r3, [sp, #20]
   1c930:	bl	1c5a8 <getUinputDevice@@Base>
   1c934:	cmn	r0, #1
   1c938:	mov	r6, r0
   1c93c:	moveq	r0, #0
   1c940:	beq	1c990 <writeInputEvent@@Base+0x8c>
   1c944:	add	sl, sp, #4
   1c948:	mov	r4, #0
   1c94c:	mov	r1, r4
   1c950:	str	r4, [sp, #4]
   1c954:	mov	r0, sl
   1c958:	str	r4, [sp, #8]
   1c95c:	str	r4, [sp, #12]
   1c960:	str	r4, [sp, #16]
   1c964:	bl	14cd4 <gettimeofday@plt>
   1c968:	mov	r1, sl
   1c96c:	mov	r0, r6
   1c970:	mov	r2, #16
   1c974:	strh	r9, [sp, #12]
   1c978:	strh	r8, [sp, #14]
   1c97c:	str	r7, [sp, #16]
   1c980:	bl	15130 <write@plt>
   1c984:	cmn	r0, #1
   1c988:	movne	r0, #1
   1c98c:	beq	1c9a8 <writeInputEvent@@Base+0xa4>
   1c990:	ldr	r2, [sp, #20]
   1c994:	ldr	r3, [r5]
   1c998:	cmp	r2, r3
   1c99c:	bne	1c9bc <writeInputEvent@@Base+0xb8>
   1c9a0:	add	sp, sp, #24
   1c9a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c9a8:	ldr	r0, [pc, #24]	; 1c9c8 <writeInputEvent@@Base+0xc4>
   1c9ac:	add	r0, pc, r0
   1c9b0:	bl	18498 <logSystemError@@Base>
   1c9b4:	mov	r0, r4
   1c9b8:	b	1c990 <writeInputEvent@@Base+0x8c>
   1c9bc:	bl	14fbc <__stack_chk_fail@plt>
   1c9c0:	andeq	lr, r1, r4, ror #13
   1c9c4:	andeq	r0, r0, r8, asr #4
   1c9c8:			; <UNDEFINED> instruction: 0x0000a1bc

0001c9cc <writeKeyEvent@@Base>:
   1c9cc:	push	{r3, r4, r5, lr}
   1c9d0:	mov	r2, r1
   1c9d4:	mov	r4, r0
   1c9d8:	mov	r5, r1
   1c9dc:	uxth	r1, r0
   1c9e0:	mov	r0, #1
   1c9e4:	bl	1c904 <writeInputEvent@@Base>
   1c9e8:	cmp	r0, #0
   1c9ec:	popeq	{r3, r4, r5, pc}
   1c9f0:	cmp	r5, #0
   1c9f4:	bne	1ca30 <writeKeyEvent@@Base+0x64>
   1c9f8:	ldr	r2, [pc, #84]	; 1ca54 <writeKeyEvent@@Base+0x88>
   1c9fc:	and	r3, r4, #7
   1ca00:	mov	r1, #1
   1ca04:	add	r2, pc, r2
   1ca08:	add	r4, r2, r4, lsr #3
   1ca0c:	ldrb	r2, [r4, #12]
   1ca10:	bic	r3, r2, r1, lsl r3
   1ca14:	strb	r3, [r4, #12]
   1ca18:	mov	r0, #0
   1ca1c:	mov	r1, r0
   1ca20:	mov	r2, r0
   1ca24:	bl	1c904 <writeInputEvent@@Base>
   1ca28:	mov	r0, #1
   1ca2c:	pop	{r3, r4, r5, pc}
   1ca30:	ldr	r2, [pc, #32]	; 1ca58 <writeKeyEvent@@Base+0x8c>
   1ca34:	and	r3, r4, #7
   1ca38:	mov	r1, #1
   1ca3c:	add	r2, pc, r2
   1ca40:	add	r4, r2, r4, lsr #3
   1ca44:	ldrb	r2, [r4, #12]
   1ca48:	orr	r3, r2, r1, lsl r3
   1ca4c:	strb	r3, [r4, #12]
   1ca50:	b	1ca18 <writeKeyEvent@@Base+0x4c>
   1ca54:	andeq	lr, r1, ip, lsr r9
   1ca58:	andeq	lr, r1, r4, lsl #18

0001ca5c <releaseAllKeys@@Base>:
   1ca5c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1ca60:	mov	r6, #1
   1ca64:	ldr	r9, [pc, #88]	; 1cac4 <releaseAllKeys@@Base+0x68>
   1ca68:	mov	r7, #0
   1ca6c:	mov	r8, #0
   1ca70:	add	r9, pc, r9
   1ca74:	b	1ca84 <releaseAllKeys@@Base+0x28>
   1ca78:	add	r8, r8, #1
   1ca7c:	cmp	r8, #768	; 0x300
   1ca80:	beq	1cac0 <releaseAllKeys@@Base+0x64>
   1ca84:	add	r3, r9, r8, lsr #3
   1ca88:	and	r1, r8, #7
   1ca8c:	mov	r5, #0
   1ca90:	ldrb	r2, [r3, #12]
   1ca94:	and	r3, r5, r7
   1ca98:	lsr	r4, r2, r1
   1ca9c:	and	r2, r4, r6
   1caa0:	orrs	r1, r2, r3
   1caa4:	beq	1ca78 <releaseAllKeys@@Base+0x1c>
   1caa8:	mov	r0, r8
   1caac:	mov	r1, r5
   1cab0:	bl	1c9cc <writeKeyEvent@@Base>
   1cab4:	cmp	r0, #0
   1cab8:	bne	1ca78 <releaseAllKeys@@Base+0x1c>
   1cabc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1cac0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1cac4:	ldrdeq	lr, [r1], -r0
   1cac8:	push	{r4, lr}
   1cacc:	mov	r4, r0
   1cad0:	ldrb	r2, [r0, #13]
   1cad4:	cmp	r2, #0
   1cad8:	beq	1cafc <releaseAllKeys@@Base+0xa0>
   1cadc:	ldr	r0, [r0, #16]
   1cae0:	ldrb	r1, [r4, #12]
   1cae4:	bl	14e0c <memset@plt>
   1cae8:	ldr	r3, [r4, #4]
   1caec:	cmp	r3, #0
   1caf0:	movne	r2, #0
   1caf4:	strbne	r2, [r3]
   1caf8:	pop	{r4, pc}
   1cafc:	ldr	r3, [r0, #16]
   1cb00:	ldrb	r2, [r0, #12]
   1cb04:	strb	r2, [r3]
   1cb08:	b	1cae8 <releaseAllKeys@@Base+0x8c>
   1cb0c:	ldr	r3, [r1]
   1cb10:	ldr	r1, [r3]
   1cb14:	b	1519c <strcmp@plt>
   1cb18:	ldr	r2, [r0]
   1cb1c:	ldr	r3, [r1]
   1cb20:	ldr	r0, [r2]
   1cb24:	ldr	r1, [r3]
   1cb28:	b	1519c <strcmp@plt>
   1cb2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cb30:	mov	r4, r3
   1cb34:	ldr	lr, [pc, #212]	; 1cc10 <releaseAllKeys@@Base+0x1b4>
   1cb38:	sub	sp, sp, #8
   1cb3c:	ldr	ip, [pc, #208]	; 1cc14 <releaseAllKeys@@Base+0x1b8>
   1cb40:	mov	r9, r0
   1cb44:	add	lr, pc, lr
   1cb48:	mov	r0, sp
   1cb4c:	mov	sl, r2
   1cb50:	mov	r6, r1
   1cb54:	ldr	r8, [lr, ip]
   1cb58:	mov	r2, lr
   1cb5c:	ldr	r3, [r8]
   1cb60:	str	r3, [sp, #4]
   1cb64:	bl	19b98 <isInteger@@Base>
   1cb68:	cmp	r0, #0
   1cb6c:	beq	1cbb8 <releaseAllKeys@@Base+0x15c>
   1cb70:	ldr	r3, [sp]
   1cb74:	cmp	r3, #255	; 0xff
   1cb78:	strbls	r3, [sl]
   1cb7c:	movls	r0, #1
   1cb80:	bls	1cba0 <releaseAllKeys@@Base+0x144>
   1cb84:	ldr	r1, [pc, #140]	; 1cc18 <releaseAllKeys@@Base+0x1bc>
   1cb88:	mov	r0, #4
   1cb8c:	mov	r2, r9
   1cb90:	mov	r3, r6
   1cb94:	add	r1, pc, r1
   1cb98:	bl	183d0 <logMessage@@Base>
   1cb9c:	mov	r0, #0
   1cba0:	ldr	r2, [sp, #4]
   1cba4:	ldr	r3, [r8]
   1cba8:	cmp	r2, r3
   1cbac:	bne	1cc0c <releaseAllKeys@@Base+0x1b0>
   1cbb0:	add	sp, sp, #8
   1cbb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cbb8:	ldrb	r7, [r4, #4]
   1cbbc:	str	r0, [sp]
   1cbc0:	cmp	r7, #0
   1cbc4:	beq	1cb84 <releaseAllKeys@@Base+0x128>
   1cbc8:	ldr	r4, [r4]
   1cbcc:	mov	r5, r0
   1cbd0:	sub	r4, r4, #4
   1cbd4:	b	1cbec <releaseAllKeys@@Base+0x190>
   1cbd8:	add	ip, r5, #1
   1cbdc:	str	ip, [sp]
   1cbe0:	cmp	ip, r7
   1cbe4:	bge	1cb84 <releaseAllKeys@@Base+0x128>
   1cbe8:	mov	r5, ip
   1cbec:	mov	r0, r6
   1cbf0:	ldr	r1, [r4, #4]!
   1cbf4:	bl	1519c <strcmp@plt>
   1cbf8:	cmp	r0, #0
   1cbfc:	bne	1cbd8 <releaseAllKeys@@Base+0x17c>
   1cc00:	strb	r5, [sl]
   1cc04:	mov	r0, #1
   1cc08:	b	1cba0 <releaseAllKeys@@Base+0x144>
   1cc0c:	bl	14fbc <__stack_chk_fail@plt>
   1cc10:			; <UNDEFINED> instruction: 0x0001e4b4
   1cc14:	andeq	r0, r0, r8, asr #4
   1cc18:	andeq	sl, r0, r4, lsr #32
   1cc1c:	ldr	r1, [pc, #456]	; 1cdec <releaseAllKeys@@Base+0x390>
   1cc20:	push	{r4, r5, r6, r7, r8, r9, lr}
   1cc24:	add	r1, pc, r1
   1cc28:	sub	sp, sp, #12
   1cc2c:	ldr	r4, [pc, #444]	; 1cdf0 <releaseAllKeys@@Base+0x394>
   1cc30:	bl	14da0 <strtok@plt>
   1cc34:	add	r4, pc, r4
   1cc38:	subs	r6, r0, #0
   1cc3c:	beq	1cd00 <releaseAllKeys@@Base+0x2a4>
   1cc40:	ldr	r7, [pc, #428]	; 1cdf4 <releaseAllKeys@@Base+0x398>
   1cc44:	ldr	r3, [pc, #428]	; 1cdf8 <releaseAllKeys@@Base+0x39c>
   1cc48:	add	r7, pc, r7
   1cc4c:	ldr	r1, [r7]
   1cc50:	ldr	r3, [r4, r3]
   1cc54:	cmp	r1, #0
   1cc58:	ldrb	r5, [r3]
   1cc5c:	beq	1cd50 <releaseAllKeys@@Base+0x2f4>
   1cc60:	ldr	ip, [pc, #404]	; 1cdfc <releaseAllKeys@@Base+0x3a0>
   1cc64:	mov	r2, r5
   1cc68:	mov	r0, r6
   1cc6c:	mov	r3, #4
   1cc70:	add	ip, pc, ip
   1cc74:	str	ip, [sp]
   1cc78:	bl	14eb4 <bsearch@plt>
   1cc7c:	cmp	r0, #0
   1cc80:	beq	1cdbc <releaseAllKeys@@Base+0x360>
   1cc84:	ldr	r4, [r0]
   1cc88:	cmp	r4, #0
   1cc8c:	beq	1cdbc <releaseAllKeys@@Base+0x360>
   1cc90:	ldr	r3, [r4, #4]
   1cc94:	cmp	r3, #0
   1cc98:	movne	r2, #1
   1cc9c:	strbne	r2, [r3]
   1cca0:	ldrb	r0, [r4, #13]
   1cca4:	cmp	r0, #0
   1cca8:	beq	1cd20 <releaseAllKeys@@Base+0x2c4>
   1ccac:	sub	r8, r0, #1
   1ccb0:	ldr	r5, [r4, #16]
   1ccb4:	ldr	r7, [pc, #324]	; 1ce00 <releaseAllKeys@@Base+0x3a4>
   1ccb8:	uxtb	r8, r8
   1ccbc:	add	r8, r8, #1
   1ccc0:	add	r7, pc, r7
   1ccc4:	add	r8, r5, r8
   1ccc8:	mov	r1, r7
   1cccc:	mov	r0, #0
   1ccd0:	bl	14da0 <strtok@plt>
   1ccd4:	mov	r2, r5
   1ccd8:	subs	r1, r0, #0
   1ccdc:	mov	r0, r6
   1cce0:	beq	1cd0c <releaseAllKeys@@Base+0x2b0>
   1cce4:	ldr	r3, [r4, #8]
   1cce8:	bl	1cb2c <releaseAllKeys@@Base+0xd0>
   1ccec:	cmp	r0, #0
   1ccf0:	beq	1cd0c <releaseAllKeys@@Base+0x2b0>
   1ccf4:	add	r5, r5, #1
   1ccf8:	cmp	r5, r8
   1ccfc:	bne	1ccc8 <releaseAllKeys@@Base+0x26c>
   1cd00:	mov	r0, #1
   1cd04:	add	sp, sp, #12
   1cd08:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1cd0c:	mov	r3, #0
   1cd10:	mov	r0, #1
   1cd14:	strb	r3, [r5]
   1cd18:	add	sp, sp, #12
   1cd1c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1cd20:	ldr	r1, [pc, #220]	; 1ce04 <releaseAllKeys@@Base+0x3a8>
   1cd24:	add	r1, pc, r1
   1cd28:	bl	14da0 <strtok@plt>
   1cd2c:	subs	r1, r0, #0
   1cd30:	beq	1cdd4 <releaseAllKeys@@Base+0x378>
   1cd34:	mov	r0, r6
   1cd38:	ldr	r2, [r4, #16]
   1cd3c:	ldr	r3, [r4, #8]
   1cd40:	bl	1cb2c <releaseAllKeys@@Base+0xd0>
   1cd44:	mov	r0, #1
   1cd48:	add	sp, sp, #12
   1cd4c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1cd50:	sxth	r8, r5
   1cd54:	lsl	r9, r8, #2
   1cd58:	mov	r0, r9
   1cd5c:	bl	150dc <malloc@plt>
   1cd60:	cmp	r0, #0
   1cd64:	str	r0, [r7]
   1cd68:	beq	1cdb8 <releaseAllKeys@@Base+0x35c>
   1cd6c:	cmp	r5, #0
   1cd70:	beq	1cd98 <releaseAllKeys@@Base+0x33c>
   1cd74:	ldr	r3, [pc, #140]	; 1ce08 <releaseAllKeys@@Base+0x3ac>
   1cd78:	add	r2, r9, r8
   1cd7c:	sub	ip, r0, #4
   1cd80:	ldr	r3, [r4, r3]
   1cd84:	add	r2, r3, r2, lsl #2
   1cd88:	str	r3, [ip, #4]!
   1cd8c:	add	r3, r3, #20
   1cd90:	cmp	r3, r2
   1cd94:	bne	1cd88 <releaseAllKeys@@Base+0x32c>
   1cd98:	ldr	r3, [pc, #108]	; 1ce0c <releaseAllKeys@@Base+0x3b0>
   1cd9c:	mov	r1, r5
   1cda0:	mov	r2, #4
   1cda4:	add	r3, pc, r3
   1cda8:	bl	14d34 <qsort@plt>
   1cdac:	ldr	r3, [pc, #92]	; 1ce10 <releaseAllKeys@@Base+0x3b4>
   1cdb0:	ldr	r1, [pc, r3]
   1cdb4:	b	1cc60 <releaseAllKeys@@Base+0x204>
   1cdb8:	bl	184dc <logMallocError@@Base>
   1cdbc:	ldr	r1, [pc, #80]	; 1ce14 <releaseAllKeys@@Base+0x3b8>
   1cdc0:	mov	r2, r6
   1cdc4:	mov	r0, #4
   1cdc8:	add	r1, pc, r1
   1cdcc:	bl	183d0 <logMessage@@Base>
   1cdd0:	b	1cd00 <releaseAllKeys@@Base+0x2a4>
   1cdd4:	ldr	r1, [pc, #60]	; 1ce18 <releaseAllKeys@@Base+0x3bc>
   1cdd8:	mov	r2, r6
   1cddc:	mov	r0, #4
   1cde0:	add	r1, pc, r1
   1cde4:	bl	183d0 <logMessage@@Base>
   1cde8:	b	1cd00 <releaseAllKeys@@Base+0x2a4>
   1cdec:	andeq	r9, r0, r0, ror pc
   1cdf0:	andeq	lr, r1, r4, asr #7
   1cdf4:	andeq	lr, r1, r4, ror #14
   1cdf8:	andeq	r0, r0, r0, asr r2
   1cdfc:			; <UNDEFINED> instruction: 0xfffffe94
   1ce00:	ldrdeq	r9, [r0], -r4
   1ce04:	andeq	r9, r0, r0, ror lr
   1ce08:	andeq	r0, r0, r8, ror #4
   1ce0c:			; <UNDEFINED> instruction: 0xfffffd6c
   1ce10:	strdeq	lr, [r1], -ip
   1ce14:	andeq	r9, r0, r4, lsr lr
   1ce18:	strdeq	r9, [r0], -ip
   1ce1c:	push	{r4, r5, r6, lr}
   1ce20:	mov	r4, r0
   1ce24:	mov	r6, r1
   1ce28:	mov	r0, #32
   1ce2c:	mov	r1, r4
   1ce30:	mov	r5, r2
   1ce34:	bl	150b8 <fputc@plt>
   1ce38:	cmn	r0, #1
   1ce3c:	beq	1ce94 <releaseAllKeys@@Base+0x438>
   1ce40:	cmp	r5, #0
   1ce44:	beq	1ce54 <releaseAllKeys@@Base+0x3f8>
   1ce48:	ldrb	r3, [r5, #4]
   1ce4c:	cmp	r3, r6
   1ce50:	bhi	1ce78 <releaseAllKeys@@Base+0x41c>
   1ce54:	ldr	r2, [pc, #64]	; 1ce9c <releaseAllKeys@@Base+0x440>
   1ce58:	mov	r0, r4
   1ce5c:	mov	r3, r6
   1ce60:	mov	r1, #1
   1ce64:	add	r2, pc, r2
   1ce68:	bl	14ddc <__fprintf_chk@plt>
   1ce6c:	mvn	r0, r0
   1ce70:	lsr	r0, r0, #31
   1ce74:	pop	{r4, r5, r6, pc}
   1ce78:	ldr	r3, [r5]
   1ce7c:	mov	r1, r4
   1ce80:	ldr	r0, [r3, r6, lsl #2]
   1ce84:	bl	15250 <fputs@plt>
   1ce88:	adds	r0, r0, #1
   1ce8c:	movne	r0, #1
   1ce90:	pop	{r4, r5, r6, pc}
   1ce94:	mov	r0, #0
   1ce98:	pop	{r4, r5, r6, pc}
   1ce9c:			; <UNDEFINED> instruction: 0x00009db0

0001cea0 <setStatusFields@@Base>:
   1cea0:	ldr	r3, [pc, #84]	; 1cefc <setStatusFields@@Base+0x5c>
   1cea4:	ldr	r2, [pc, #84]	; 1cf00 <setStatusFields@@Base+0x60>
   1cea8:	add	r3, pc, r3
   1ceac:	ldr	ip, [r3, r2]
   1ceb0:	ldrb	r2, [ip]
   1ceb4:	cmp	r2, #0
   1ceb8:	bxne	lr
   1cebc:	cmp	r0, #0
   1cec0:	bxeq	lr
   1cec4:	ldr	r2, [pc, #56]	; 1cf04 <setStatusFields@@Base+0x64>
   1cec8:	sub	r0, r0, #1
   1cecc:	ldr	r1, [r3, r2]
   1ced0:	add	r3, r1, #47	; 0x2f
   1ced4:	add	r1, r1, #56	; 0x38
   1ced8:	ldrb	r2, [r0, #1]!
   1cedc:	cmp	r2, #0
   1cee0:	beq	1cef0 <setStatusFields@@Base+0x50>
   1cee4:	strb	r2, [r3, #1]!
   1cee8:	cmp	r3, r1
   1ceec:	bne	1ced8 <setStatusFields@@Base+0x38>
   1cef0:	mov	r3, #1
   1cef4:	strb	r3, [ip]
   1cef8:	bx	lr
   1cefc:	andeq	lr, r1, r0, asr r1
   1cf00:	andeq	r0, r0, r4, lsl #5
   1cf04:	muleq	r0, ip, r2

0001cf08 <resetPreferences@@Base>:
   1cf08:	push	{r3, r4, r5, lr}
   1cf0c:	mov	r1, #0
   1cf10:	ldr	r4, [pc, #104]	; 1cf80 <resetPreferences@@Base+0x78>
   1cf14:	mov	r2, #82	; 0x52
   1cf18:	ldr	r3, [pc, #100]	; 1cf84 <resetPreferences@@Base+0x7c>
   1cf1c:	add	r4, pc, r4
   1cf20:	ldr	r5, [r4, r3]
   1cf24:	mov	r0, r5
   1cf28:	bl	14e0c <memset@plt>
   1cf2c:	ldr	r3, [pc, #84]	; 1cf88 <resetPreferences@@Base+0x80>
   1cf30:	mov	r2, #5
   1cf34:	mov	r1, #64	; 0x40
   1cf38:	strb	r2, [r5]
   1cf3c:	mov	r2, #6
   1cf40:	strb	r1, [r5, #1]
   1cf44:	strb	r2, [r5, #3]
   1cf48:	ldr	r2, [r4, r3]
   1cf4c:	ldr	r3, [pc, #56]	; 1cf8c <resetPreferences@@Base+0x84>
   1cf50:	ldrb	r5, [r2]
   1cf54:	ldr	r0, [r4, r3]
   1cf58:	add	r5, r5, r5, lsl #2
   1cf5c:	add	r5, r0, r5, lsl #2
   1cf60:	cmp	r5, r0
   1cf64:	popls	{r3, r4, r5, pc}
   1cf68:	add	r4, r0, #20
   1cf6c:	bl	1cac8 <releaseAllKeys@@Base+0x6c>
   1cf70:	cmp	r5, r4
   1cf74:	mov	r0, r4
   1cf78:	bhi	1cf68 <resetPreferences@@Base+0x60>
   1cf7c:	pop	{r3, r4, r5, pc}
   1cf80:	ldrdeq	lr, [r1], -ip
   1cf84:	muleq	r0, ip, r2
   1cf88:	andeq	r0, r0, r0, asr r2
   1cf8c:	andeq	r0, r0, r8, ror #4

0001cf90 <makePreferencesFilePath@@Base>:
   1cf90:	subs	r1, r0, #0
   1cf94:	beq	1cfa4 <makePreferencesFilePath@@Base+0x14>
   1cf98:	ldr	r0, [pc, #16]	; 1cfb0 <makePreferencesFilePath@@Base+0x20>
   1cf9c:	add	r0, pc, r0
   1cfa0:	b	18764 <makePath@@Base>
   1cfa4:	ldr	r1, [pc, #8]	; 1cfb4 <makePreferencesFilePath@@Base+0x24>
   1cfa8:	add	r1, pc, r1
   1cfac:	b	1cf98 <makePreferencesFilePath@@Base+0x8>
   1cfb0:	andeq	r9, r0, ip, lsl #25
   1cfb4:	andeq	r9, r0, r0, ror ip

0001cfb8 <loadPreferencesFile@@Base>:
   1cfb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cfbc:	sub	sp, sp, #100	; 0x64
   1cfc0:	ldr	r5, [pc, #716]	; 1d294 <loadPreferencesFile@@Base+0x2dc>
   1cfc4:	mov	r2, #1
   1cfc8:	ldr	ip, [pc, #712]	; 1d298 <loadPreferencesFile@@Base+0x2e0>
   1cfcc:	mov	r7, r0
   1cfd0:	add	r5, pc, r5
   1cfd4:	ldr	r1, [pc, #704]	; 1d29c <loadPreferencesFile@@Base+0x2e4>
   1cfd8:	ldr	r6, [r5, ip]
   1cfdc:	add	r1, pc, r1
   1cfe0:	ldr	ip, [r6]
   1cfe4:	str	ip, [sp, #92]	; 0x5c
   1cfe8:	bl	18f5c <openDataFile@@Base>
   1cfec:	subs	r4, r0, #0
   1cff0:	beq	1d09c <loadPreferencesFile@@Base+0xe4>
   1cff4:	add	r8, sp, #8
   1cff8:	mov	r1, #1
   1cffc:	mov	r2, #82	; 0x52
   1d000:	mov	r3, r4
   1d004:	mov	r0, r8
   1d008:	bl	14f80 <fread@plt>
   1d00c:	mov	r9, r0
   1d010:	mov	r0, r4
   1d014:	bl	15088 <ferror@plt>
   1d018:	cmp	r0, #0
   1d01c:	bne	1d0a4 <loadPreferencesFile@@Base+0xec>
   1d020:	cmp	r9, #39	; 0x27
   1d024:	bls	1d034 <loadPreferencesFile@@Base+0x7c>
   1d028:	ldrb	r3, [sp, #8]
   1d02c:	cmp	r3, #5
   1d030:	beq	1d0ec <loadPreferencesFile@@Base+0x134>
   1d034:	mov	r0, r4
   1d038:	bl	15124 <fclose@plt>
   1d03c:	ldr	r1, [pc, #604]	; 1d2a0 <loadPreferencesFile@@Base+0x2e8>
   1d040:	mov	r0, r7
   1d044:	mov	r2, #1
   1d048:	add	r1, pc, r1
   1d04c:	bl	18f5c <openDataFile@@Base>
   1d050:	subs	r4, r0, #0
   1d054:	beq	1d09c <loadPreferencesFile@@Base+0xe4>
   1d058:	bl	1cf08 <resetPreferences@@Base>
   1d05c:	ldr	r1, [pc, #576]	; 1d2a4 <loadPreferencesFile@@Base+0x2ec>
   1d060:	mov	r0, r4
   1d064:	mov	r2, #0
   1d068:	add	r1, pc, r1
   1d06c:	bl	19238 <processLines@@Base>
   1d070:	adds	r5, r0, #0
   1d074:	movne	r5, #1
   1d078:	mov	r0, r4
   1d07c:	bl	15124 <fclose@plt>
   1d080:	ldr	r2, [sp, #92]	; 0x5c
   1d084:	mov	r0, r5
   1d088:	ldr	r3, [r6]
   1d08c:	cmp	r2, r3
   1d090:	bne	1d290 <loadPreferencesFile@@Base+0x2d8>
   1d094:	add	sp, sp, #100	; 0x64
   1d098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d09c:	mov	r5, r4
   1d0a0:	b	1d080 <loadPreferencesFile@@Base+0xc8>
   1d0a4:	ldr	r1, [pc, #508]	; 1d2a8 <loadPreferencesFile@@Base+0x2f0>
   1d0a8:	mov	r2, #5
   1d0ac:	mov	r0, #0
   1d0b0:	add	r1, pc, r1
   1d0b4:	mov	r5, r0
   1d0b8:	bl	14fec <dcgettext@plt>
   1d0bc:	mov	r8, r0
   1d0c0:	bl	151b4 <__errno_location@plt>
   1d0c4:	ldr	r0, [r0]
   1d0c8:	bl	14d64 <strerror@plt>
   1d0cc:	ldr	r1, [pc, #472]	; 1d2ac <loadPreferencesFile@@Base+0x2f4>
   1d0d0:	mov	r2, r8
   1d0d4:	mov	r3, r7
   1d0d8:	add	r1, pc, r1
   1d0dc:	str	r0, [sp]
   1d0e0:	mov	r0, #3
   1d0e4:	bl	183d0 <logMessage@@Base>
   1d0e8:	b	1d078 <loadPreferencesFile@@Base+0xc0>
   1d0ec:	ldrb	r3, [sp, #9]
   1d0f0:	cmp	r3, #64	; 0x40
   1d0f4:	bne	1d034 <loadPreferencesFile@@Base+0x7c>
   1d0f8:	ldr	r3, [pc, #432]	; 1d2b0 <loadPreferencesFile@@Base+0x2f8>
   1d0fc:	mov	r1, r8
   1d100:	mov	r2, #82	; 0x52
   1d104:	ldr	fp, [r5, r3]
   1d108:	add	sl, fp, r9
   1d10c:	mov	r0, fp
   1d110:	bl	150d0 <memcpy@plt>
   1d114:	ldr	r3, [pc, #408]	; 1d2b4 <loadPreferencesFile@@Base+0x2fc>
   1d118:	ldr	r2, [pc, #408]	; 1d2b8 <loadPreferencesFile@@Base+0x300>
   1d11c:	ldr	r3, [r5, r3]
   1d120:	ldr	r7, [r5, r2]
   1d124:	ldrb	r8, [r3]
   1d128:	add	r8, r8, r8, lsl #2
   1d12c:	add	r8, r7, r8, lsl #2
   1d130:	cmp	r8, r7
   1d134:	bls	1d170 <loadPreferencesFile@@Base+0x1b8>
   1d138:	ldrb	r3, [r7, #13]
   1d13c:	ldr	r2, [r7, #16]
   1d140:	cmp	r3, #0
   1d144:	moveq	r3, #1
   1d148:	cmp	r2, fp
   1d14c:	bcc	1d15c <loadPreferencesFile@@Base+0x1a4>
   1d150:	add	r3, r2, r3
   1d154:	cmp	sl, r3
   1d158:	bcs	1d164 <loadPreferencesFile@@Base+0x1ac>
   1d15c:	mov	r0, r7
   1d160:	bl	1cac8 <releaseAllKeys@@Base+0x6c>
   1d164:	add	r7, r7, #20
   1d168:	cmp	r8, r7
   1d16c:	bhi	1d138 <loadPreferencesFile@@Base+0x180>
   1d170:	cmp	r9, #57	; 0x39
   1d174:	bls	1d264 <loadPreferencesFile@@Base+0x2ac>
   1d178:	ldr	r3, [pc, #316]	; 1d2bc <loadPreferencesFile@@Base+0x304>
   1d17c:	mov	r2, #1
   1d180:	ldr	r3, [r5, r3]
   1d184:	strb	r2, [r3]
   1d188:	ldrb	r3, [fp, #3]
   1d18c:	cmp	r3, #0
   1d190:	bne	1d234 <loadPreferencesFile@@Base+0x27c>
   1d194:	mov	r3, #70	; 0x46
   1d198:	strb	r3, [fp, #17]
   1d19c:	strb	r3, [fp, #19]
   1d1a0:	strb	r3, [fp, #21]
   1d1a4:	mov	r3, #0
   1d1a8:	strb	r3, [fp, #13]
   1d1ac:	strb	r3, [fp, #15]
   1d1b0:	ldrb	r8, [fp, #14]
   1d1b4:	mov	r1, #1
   1d1b8:	ldrb	r7, [fp, #16]
   1d1bc:	mov	r2, #50	; 0x32
   1d1c0:	ldrb	r5, [fp, #22]
   1d1c4:	mov	r3, #10
   1d1c8:	ldrb	lr, [fp, #24]
   1d1cc:	lsl	r8, r8, #2
   1d1d0:	ldrb	ip, [fp, #18]
   1d1d4:	lsl	r7, r7, #2
   1d1d8:	ldrb	r0, [fp, #20]
   1d1dc:	lsl	r5, r5, #2
   1d1e0:	lsl	lr, lr, #2
   1d1e4:	strb	r8, [fp, #14]
   1d1e8:	lsl	ip, ip, #2
   1d1ec:	strb	r7, [fp, #16]
   1d1f0:	lsl	r0, r0, #2
   1d1f4:	strb	r5, [fp, #22]
   1d1f8:	strb	lr, [fp, #24]
   1d1fc:	strb	ip, [fp, #18]
   1d200:	strb	r0, [fp, #20]
   1d204:	strb	r1, [fp, #7]
   1d208:	strb	r2, [fp, #9]
   1d20c:	strb	r3, [fp, #11]
   1d210:	mov	r3, #0
   1d214:	strb	r3, [fp, #27]
   1d218:	mov	r3, #2
   1d21c:	strb	r3, [fp, #5]
   1d220:	mov	r5, #1
   1d224:	mov	r3, #6
   1d228:	strb	r5, [fp, #38]	; 0x26
   1d22c:	strb	r3, [fp, #3]
   1d230:	b	1d078 <loadPreferencesFile@@Base+0xc0>
   1d234:	cmp	r3, #1
   1d238:	beq	1d1a4 <loadPreferencesFile@@Base+0x1ec>
   1d23c:	cmp	r3, #2
   1d240:	beq	1d1b0 <loadPreferencesFile@@Base+0x1f8>
   1d244:	cmp	r3, #3
   1d248:	beq	1d210 <loadPreferencesFile@@Base+0x258>
   1d24c:	cmp	r3, #4
   1d250:	beq	1d218 <loadPreferencesFile@@Base+0x260>
   1d254:	cmp	r3, #5
   1d258:	movne	r5, #1
   1d25c:	bne	1d078 <loadPreferencesFile@@Base+0xc0>
   1d260:	b	1d220 <loadPreferencesFile@@Base+0x268>
   1d264:	ldrb	r3, [fp, #38]	; 0x26
   1d268:	cmp	r3, #7
   1d26c:	bhi	1d188 <loadPreferencesFile@@Base+0x1d0>
   1d270:	ldr	r2, [pc, #72]	; 1d2c0 <loadPreferencesFile@@Base+0x308>
   1d274:	add	r2, pc, r2
   1d278:	ldr	r0, [r2, r3, lsl #2]
   1d27c:	ldrb	r3, [r0]
   1d280:	cmp	r3, #0
   1d284:	beq	1d188 <loadPreferencesFile@@Base+0x1d0>
   1d288:	bl	1cea0 <setStatusFields@@Base>
   1d28c:	b	1d188 <loadPreferencesFile@@Base+0x1d0>
   1d290:	bl	14fbc <__stack_chk_fail@plt>
   1d294:	andeq	lr, r1, r8, lsr #32
   1d298:	andeq	r0, r0, r8, asr #4
   1d29c:	andeq	r9, r0, ip, asr ip
   1d2a0:	andeq	sl, r0, r4, lsl #10
   1d2a4:			; <UNDEFINED> instruction: 0xfffffbac
   1d2a8:	andeq	r9, r0, ip, lsl #23
   1d2ac:	andeq	r8, r0, ip, lsr pc
   1d2b0:	muleq	r0, ip, r2
   1d2b4:	andeq	r0, r0, r0, asr r2
   1d2b8:	andeq	r0, r0, r8, ror #4
   1d2bc:	andeq	r0, r0, r4, lsl #5
   1d2c0:	strdeq	sp, [r1], -ip

0001d2c4 <savePreferencesFile@@Base>:
   1d2c4:	ldr	r1, [pc, #384]	; 1d44c <savePreferencesFile@@Base+0x188>
   1d2c8:	mov	r2, #0
   1d2cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1d2d0:	add	r1, pc, r1
   1d2d4:	sub	sp, sp, #12
   1d2d8:	mov	r9, r0
   1d2dc:	bl	18f5c <openDataFile@@Base>
   1d2e0:	ldr	r3, [pc, #360]	; 1d450 <savePreferencesFile@@Base+0x18c>
   1d2e4:	add	r3, pc, r3
   1d2e8:	subs	r6, r0, #0
   1d2ec:	beq	1d434 <savePreferencesFile@@Base+0x170>
   1d2f0:	ldr	r2, [pc, #348]	; 1d454 <savePreferencesFile@@Base+0x190>
   1d2f4:	ldr	r1, [pc, #348]	; 1d458 <savePreferencesFile@@Base+0x194>
   1d2f8:	ldr	r2, [r3, r2]
   1d2fc:	ldr	r5, [r3, r1]
   1d300:	ldrb	r8, [r2]
   1d304:	add	r8, r8, r8, lsl #2
   1d308:	add	r8, r5, r8, lsl #2
   1d30c:	cmp	r8, r5
   1d310:	bls	1d38c <savePreferencesFile@@Base+0xc8>
   1d314:	ldr	r0, [r5]
   1d318:	mov	r1, r6
   1d31c:	bl	15250 <fputs@plt>
   1d320:	cmn	r0, #1
   1d324:	beq	1d38c <savePreferencesFile@@Base+0xc8>
   1d328:	ldrb	r7, [r5, #13]
   1d32c:	cmp	r7, #0
   1d330:	beq	1d400 <savePreferencesFile@@Base+0x13c>
   1d334:	ldr	r4, [r5, #16]
   1d338:	sub	r7, r7, #1
   1d33c:	uxtab	r7, r4, r7
   1d340:	sub	r4, r4, #1
   1d344:	ldrb	r1, [r4, #1]!
   1d348:	mov	r0, r6
   1d34c:	cmp	r1, #0
   1d350:	beq	1d36c <savePreferencesFile@@Base+0xa8>
   1d354:	ldr	r2, [r5, #8]
   1d358:	bl	1ce1c <releaseAllKeys@@Base+0x3c0>
   1d35c:	cmp	r0, #0
   1d360:	beq	1d394 <savePreferencesFile@@Base+0xd0>
   1d364:	cmp	r4, r7
   1d368:	bne	1d344 <savePreferencesFile@@Base+0x80>
   1d36c:	mov	r0, #10
   1d370:	mov	r1, r6
   1d374:	bl	150b8 <fputc@plt>
   1d378:	cmn	r0, #1
   1d37c:	beq	1d38c <savePreferencesFile@@Base+0xc8>
   1d380:	add	r5, r5, #20
   1d384:	cmp	r8, r5
   1d388:	bhi	1d314 <savePreferencesFile@@Base+0x50>
   1d38c:	cmp	r5, r8
   1d390:	beq	1d444 <savePreferencesFile@@Base+0x180>
   1d394:	mov	r0, r6
   1d398:	bl	15088 <ferror@plt>
   1d39c:	cmp	r0, #0
   1d3a0:	beq	1d420 <savePreferencesFile@@Base+0x15c>
   1d3a4:	bl	151b4 <__errno_location@plt>
   1d3a8:	mov	r5, r0
   1d3ac:	ldr	r1, [pc, #168]	; 1d45c <savePreferencesFile@@Base+0x198>
   1d3b0:	mov	r2, #5
   1d3b4:	mov	r0, #0
   1d3b8:	add	r1, pc, r1
   1d3bc:	mov	r4, r0
   1d3c0:	bl	14fec <dcgettext@plt>
   1d3c4:	mov	r7, r0
   1d3c8:	ldr	r0, [r5]
   1d3cc:	bl	14d64 <strerror@plt>
   1d3d0:	ldr	r1, [pc, #136]	; 1d460 <savePreferencesFile@@Base+0x19c>
   1d3d4:	mov	r2, r7
   1d3d8:	mov	r3, r9
   1d3dc:	add	r1, pc, r1
   1d3e0:	str	r0, [sp]
   1d3e4:	mov	r0, #3
   1d3e8:	bl	183d0 <logMessage@@Base>
   1d3ec:	mov	r0, r6
   1d3f0:	bl	15124 <fclose@plt>
   1d3f4:	mov	r0, r4
   1d3f8:	add	sp, sp, #12
   1d3fc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d400:	ldr	r3, [r5, #16]
   1d404:	mov	r0, r6
   1d408:	ldr	r2, [r5, #8]
   1d40c:	ldrb	r1, [r3]
   1d410:	bl	1ce1c <releaseAllKeys@@Base+0x3c0>
   1d414:	cmp	r0, #0
   1d418:	bne	1d36c <savePreferencesFile@@Base+0xa8>
   1d41c:	b	1d38c <savePreferencesFile@@Base+0xc8>
   1d420:	bl	151b4 <__errno_location@plt>
   1d424:	mov	r3, #5
   1d428:	mov	r5, r0
   1d42c:	str	r3, [r0]
   1d430:	b	1d3ac <savePreferencesFile@@Base+0xe8>
   1d434:	mov	r4, r6
   1d438:	mov	r0, r4
   1d43c:	add	sp, sp, #12
   1d440:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1d444:	mov	r4, #1
   1d448:	b	1d3ec <savePreferencesFile@@Base+0x128>
   1d44c:	andeq	r8, r0, r0, lsl #30
   1d450:	andeq	sp, r1, r4, lsl sp
   1d454:	andeq	r0, r0, r0, asr r2
   1d458:	andeq	r0, r0, r8, ror #4
   1d45c:	andeq	r9, r0, r4, lsr #17
   1d460:	andeq	r8, r0, r8, lsr ip

0001d464 <isHexadecimalDigit@@Base>:
   1d464:	sub	r3, r0, #48	; 0x30
   1d468:	cmp	r3, #9
   1d46c:	strls	r3, [r1]
   1d470:	bls	1d49c <isHexadecimalDigit@@Base+0x38>
   1d474:	sub	r3, r0, #97	; 0x61
   1d478:	cmp	r3, #5
   1d47c:	subls	r0, r0, #87	; 0x57
   1d480:	strls	r0, [r1]
   1d484:	bls	1d49c <isHexadecimalDigit@@Base+0x38>
   1d488:	sub	r3, r0, #65	; 0x41
   1d48c:	cmp	r3, #5
   1d490:	bhi	1d4ac <isHexadecimalDigit@@Base+0x48>
   1d494:	sub	r0, r0, #55	; 0x37
   1d498:	str	r0, [r1]
   1d49c:	mov	r3, #4
   1d4a0:	mov	r0, #1
   1d4a4:	str	r3, [r2]
   1d4a8:	bx	lr
   1d4ac:	mov	r0, #0
   1d4b0:	bx	lr

0001d4b4 <isOctalDigit@@Base>:
   1d4b4:	sub	r0, r0, #48	; 0x30
   1d4b8:	cmp	r0, #7
   1d4bc:	strls	r0, [r1]
   1d4c0:	movls	r3, #3
   1d4c4:	movls	r0, #1
   1d4c8:	strls	r3, [r2]
   1d4cc:	movhi	r0, #0
   1d4d0:	bx	lr
   1d4d4:	push	{r4, lr}
   1d4d8:	mov	r4, r0
   1d4dc:	ldr	r0, [r0]
   1d4e0:	cmp	r0, #0
   1d4e4:	beq	1d4ec <isOctalDigit@@Base+0x38>
   1d4e8:	bl	14d10 <free@plt>
   1d4ec:	ldr	r0, [r4, #8]
   1d4f0:	cmp	r0, #0
   1d4f4:	beq	1d4fc <isOctalDigit@@Base+0x48>
   1d4f8:	bl	14d10 <free@plt>
   1d4fc:	mov	r0, r4
   1d500:	pop	{r4, lr}
   1d504:	b	14d10 <free@plt>
   1d508:	push	{r3, lr}
   1d50c:	ldr	r2, [r0, #4]
   1d510:	ldr	r3, [r1, #4]
   1d514:	cmp	r2, r3
   1d518:	beq	1d524 <isOctalDigit@@Base+0x70>
   1d51c:	mov	r0, #0
   1d520:	pop	{r3, pc}
   1d524:	ldr	r0, [r0]
   1d528:	ldr	r1, [r1]
   1d52c:	bl	14e78 <wmemcmp@plt>
   1d530:	rsbs	r0, r0, #1
   1d534:	movcc	r0, #0
   1d538:	pop	{r3, pc}
   1d53c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1d540:	mov	r8, r0
   1d544:	mov	r0, #16
   1d548:	mov	r6, r1
   1d54c:	bl	150dc <malloc@plt>
   1d550:	subs	r4, r0, #0
   1d554:	beq	1d5c4 <isOctalDigit@@Base+0x110>
   1d558:	mov	r3, r4
   1d55c:	mov	r5, #0
   1d560:	str	r5, [r3], #4
   1d564:	add	r3, r3, #4
   1d568:	str	r5, [r4, #4]
   1d56c:	str	r5, [r3], #4
   1d570:	str	r5, [r3]
   1d574:	ldr	r7, [r6, #4]
   1d578:	lsl	r0, r7, #2
   1d57c:	bl	150dc <malloc@plt>
   1d580:	subs	r9, r0, #0
   1d584:	beq	1d5e8 <isOctalDigit@@Base+0x134>
   1d588:	mov	r2, r7
   1d58c:	ldr	r1, [r6]
   1d590:	bl	14db8 <wmemcpy@plt>
   1d594:	mov	r1, r4
   1d598:	str	r0, [r4]
   1d59c:	mov	r0, r8
   1d5a0:	ldr	r3, [r6, #4]
   1d5a4:	str	r5, [r4, #8]
   1d5a8:	str	r5, [r4, #12]
   1d5ac:	str	r3, [r4, #4]
   1d5b0:	bl	1eca4 <enqueueItem@@Base>
   1d5b4:	cmp	r0, r5
   1d5b8:	beq	1d5d0 <isOctalDigit@@Base+0x11c>
   1d5bc:	mov	r0, r4
   1d5c0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d5c4:	bl	184dc <logMallocError@@Base>
   1d5c8:	mov	r0, r4
   1d5cc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d5d0:	mov	r0, r9
   1d5d4:	bl	14d10 <free@plt>
   1d5d8:	mov	r0, r4
   1d5dc:	bl	14d10 <free@plt>
   1d5e0:	mov	r0, #0
   1d5e4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d5e8:	bl	184dc <logMallocError@@Base>
   1d5ec:	b	1d5d8 <isOctalDigit@@Base+0x124>
   1d5f0:	push	{r4, r5, r6, r7, r8, lr}
   1d5f4:	subs	r4, r3, #0
   1d5f8:	mov	r5, r0
   1d5fc:	mov	r7, r1
   1d600:	mov	r8, r2
   1d604:	moveq	r6, r4
   1d608:	bne	1d62c <isOctalDigit@@Base+0x178>
   1d60c:	ldr	r0, [r5]
   1d610:	cmp	r0, #0
   1d614:	beq	1d61c <isOctalDigit@@Base+0x168>
   1d618:	bl	14d10 <free@plt>
   1d61c:	str	r6, [r5]
   1d620:	mov	r0, #1
   1d624:	str	r4, [r7]
   1d628:	pop	{r4, r5, r6, r7, r8, pc}
   1d62c:	lsl	r0, r4, #2
   1d630:	bl	150dc <malloc@plt>
   1d634:	subs	r6, r0, #0
   1d638:	beq	1d64c <isOctalDigit@@Base+0x198>
   1d63c:	mov	r1, r8
   1d640:	mov	r2, r4
   1d644:	bl	14db8 <wmemcpy@plt>
   1d648:	b	1d60c <isOctalDigit@@Base+0x158>
   1d64c:	bl	184dc <logMallocError@@Base>
   1d650:	mov	r0, r6
   1d654:	pop	{r4, r5, r6, r7, r8, pc}
   1d658:	push	{r3, r4, r5, lr}
   1d65c:	ldr	r3, [pc, #68]	; 1d6a8 <isOctalDigit@@Base+0x1f4>
   1d660:	ldr	r4, [pc, r3]
   1d664:	cmp	r4, #0
   1d668:	beq	1d674 <isOctalDigit@@Base+0x1c0>
   1d66c:	mov	r0, r4
   1d670:	pop	{r3, r4, r5, pc}
   1d674:	ldr	r0, [pc, #48]	; 1d6ac <isOctalDigit@@Base+0x1f8>
   1d678:	mov	r1, r4
   1d67c:	add	r0, pc, r0
   1d680:	bl	1eab4 <newQueue@@Base>
   1d684:	subs	r5, r0, #0
   1d688:	beq	1d694 <isOctalDigit@@Base+0x1e0>
   1d68c:	mov	r1, r4
   1d690:	bl	1eb5c <setQueueData@@Base>
   1d694:	ldr	r3, [pc, #20]	; 1d6b0 <isOctalDigit@@Base+0x1fc>
   1d698:	mov	r0, r5
   1d69c:	add	r3, pc, r3
   1d6a0:	str	r5, [r3]
   1d6a4:	pop	{r3, r4, r5, pc}
   1d6a8:	andeq	sp, r1, r0, asr sp
   1d6ac:			; <UNDEFINED> instruction: 0xfffffe50
   1d6b0:	andeq	sp, r1, r4, lsl sp

0001d6b4 <brlDotNumberToIndex@@Base>:
   1d6b4:	push	{r3, r4, r5, lr}
   1d6b8:	mov	r2, #8
   1d6bc:	ldr	r3, [pc, #48]	; 1d6f4 <brlDotNumberToIndex@@Base+0x40>
   1d6c0:	mov	r5, r1
   1d6c4:	ldr	ip, [pc, #44]	; 1d6f8 <brlDotNumberToIndex@@Base+0x44>
   1d6c8:	mov	r1, r0
   1d6cc:	add	r3, pc, r3
   1d6d0:	ldr	r4, [r3, ip]
   1d6d4:	mov	r0, r4
   1d6d8:	bl	14e9c <wmemchr@plt>
   1d6dc:	cmp	r0, #0
   1d6e0:	rsbne	r4, r4, r0
   1d6e4:	movne	r0, #1
   1d6e8:	asrne	r4, r4, #2
   1d6ec:	strne	r4, [r5]
   1d6f0:	pop	{r3, r4, r5, pc}
   1d6f4:	andeq	sp, r1, ip, lsr #18
   1d6f8:	andeq	r0, r0, ip, lsl #5

0001d6fc <brlDotBitToIndex@@Base>:
   1d6fc:	push	{r3, r4, r5, lr}
   1d700:	mov	r2, #8
   1d704:	ldr	r3, [pc, #44]	; 1d738 <brlDotBitToIndex@@Base+0x3c>
   1d708:	mov	r5, r1
   1d70c:	ldr	ip, [pc, #40]	; 1d73c <brlDotBitToIndex@@Base+0x40>
   1d710:	mov	r1, r0
   1d714:	add	r3, pc, r3
   1d718:	ldr	r4, [r3, ip]
   1d71c:	mov	r0, r4
   1d720:	bl	151cc <memchr@plt>
   1d724:	cmp	r0, #0
   1d728:	rsbne	r4, r4, r0
   1d72c:	strne	r4, [r5]
   1d730:	movne	r0, #1
   1d734:	pop	{r3, r4, r5, pc}
   1d738:	andeq	sp, r1, r4, ror #17
   1d73c:	andeq	r0, r0, ip, ror #4

0001d740 <reportDataError@@Base>:
   1d740:	push	{r1, r2, r3}
   1d744:	cmp	r0, #0
   1d748:	ldr	r3, [pc, #144]	; 1d7e0 <reportDataError@@Base+0xa0>
   1d74c:	ldr	r2, [pc, #144]	; 1d7e4 <reportDataError@@Base+0xa4>
   1d750:	add	r3, pc, r3
   1d754:	push	{r4, r5, lr}
   1d758:	sub	sp, sp, #272	; 0x110
   1d75c:	ldr	r4, [r3, r2]
   1d760:	ldr	r1, [sp, #284]	; 0x11c
   1d764:	ldr	r3, [r4]
   1d768:	str	r3, [sp, #268]	; 0x10c
   1d76c:	beq	1d7d0 <reportDataError@@Base+0x90>
   1d770:	ldm	r0, {r2, r3}
   1d774:	cmp	r3, #0
   1d778:	addne	r3, r0, #4
   1d77c:	add	r5, sp, #12
   1d780:	add	ip, sp, #288	; 0x120
   1d784:	str	r1, [sp]
   1d788:	mov	r1, #256	; 0x100
   1d78c:	str	ip, [sp, #4]
   1d790:	mov	r0, r5
   1d794:	str	ip, [sp, #8]
   1d798:	bl	19334 <formatInputError@@Base>
   1d79c:	ldr	r1, [pc, #68]	; 1d7e8 <reportDataError@@Base+0xa8>
   1d7a0:	mov	r2, r5
   1d7a4:	mov	r0, #4
   1d7a8:	add	r1, pc, r1
   1d7ac:	bl	183d0 <logMessage@@Base>
   1d7b0:	ldr	r2, [sp, #268]	; 0x10c
   1d7b4:	ldr	r3, [r4]
   1d7b8:	cmp	r2, r3
   1d7bc:	bne	1d7dc <reportDataError@@Base+0x9c>
   1d7c0:	add	sp, sp, #272	; 0x110
   1d7c4:	pop	{r4, r5, lr}
   1d7c8:	add	sp, sp, #12
   1d7cc:	bx	lr
   1d7d0:	mov	r3, r0
   1d7d4:	mov	r2, r0
   1d7d8:	b	1d77c <reportDataError@@Base+0x3c>
   1d7dc:	bl	14fbc <__stack_chk_fail@plt>
   1d7e0:	andeq	sp, r1, r8, lsr #17
   1d7e4:	andeq	r0, r0, r8, asr #4
   1d7e8:	andeq	fp, r0, ip, lsr r2

0001d7ec <isKeyword@@Base>:
   1d7ec:	push	{r3, r4, r5, r6, r7, lr}
   1d7f0:	mov	r7, r2
   1d7f4:	mov	r6, r1
   1d7f8:	mov	r5, r0
   1d7fc:	bl	14c74 <wcslen@plt>
   1d800:	cmp	r0, r7
   1d804:	mov	r4, r0
   1d808:	beq	1d814 <isKeyword@@Base+0x28>
   1d80c:	mov	r0, #0
   1d810:	pop	{r3, r4, r5, r6, r7, pc}
   1d814:	cmp	r0, #0
   1d818:	beq	1d840 <isKeyword@@Base+0x54>
   1d81c:	ldr	r0, [r6], #4
   1d820:	bl	14c80 <towlower@plt>
   1d824:	mov	r7, r0
   1d828:	ldr	r0, [r5], #4
   1d82c:	bl	14c80 <towlower@plt>
   1d830:	cmp	r7, r0
   1d834:	bne	1d80c <isKeyword@@Base+0x20>
   1d838:	subs	r4, r4, #1
   1d83c:	bne	1d81c <isKeyword@@Base+0x30>
   1d840:	mov	r0, #1
   1d844:	pop	{r3, r4, r5, r6, r7, pc}

0001d848 <isNumber@@Base>:
   1d848:	ldr	r3, [pc, #196]	; 1d914 <isNumber@@Base+0xcc>
   1d84c:	cmp	r2, #0
   1d850:	push	{r4, r5, r6, r7, fp, lr}
   1d854:	add	fp, sp, #20
   1d858:	ldr	ip, [pc, #184]	; 1d918 <isNumber@@Base+0xd0>
   1d85c:	sub	sp, sp, #8
   1d860:	add	r3, pc, r3
   1d864:	mov	r5, r0
   1d868:	movle	r0, #0
   1d86c:	ldr	r4, [r3, ip]
   1d870:	ldr	r3, [r4]
   1d874:	str	r3, [fp, #-24]	; 0xffffffe8
   1d878:	ble	1d8e4 <isNumber@@Base+0x9c>
   1d87c:	add	r3, r2, #8
   1d880:	mov	r6, sp
   1d884:	bic	r3, r3, #7
   1d888:	sub	r1, r1, #4
   1d88c:	sub	sp, sp, r3
   1d890:	mov	r7, #0
   1d894:	add	ip, sp, r2
   1d898:	mov	r0, sp
   1d89c:	mov	r3, sp
   1d8a0:	strb	r7, [sp, r2]
   1d8a4:	ldr	r2, [r1, #4]!
   1d8a8:	cmp	r2, #255	; 0xff
   1d8ac:	bhi	1d8fc <isNumber@@Base+0xb4>
   1d8b0:	strb	r2, [r3], #1
   1d8b4:	cmp	r3, ip
   1d8b8:	bne	1d8a4 <isNumber@@Base+0x5c>
   1d8bc:	sub	r1, fp, #28
   1d8c0:	mov	r2, #0
   1d8c4:	bl	14d04 <strtol@plt>
   1d8c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8cc:	ldrb	r3, [r3]
   1d8d0:	cmp	r3, #0
   1d8d4:	bne	1d904 <isNumber@@Base+0xbc>
   1d8d8:	str	r0, [r5]
   1d8dc:	mov	r0, #1
   1d8e0:	mov	sp, r6
   1d8e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d8e8:	ldr	r3, [r4]
   1d8ec:	cmp	r2, r3
   1d8f0:	bne	1d910 <isNumber@@Base+0xc8>
   1d8f4:	sub	sp, fp, #20
   1d8f8:	pop	{r4, r5, r6, r7, fp, pc}
   1d8fc:	mov	r0, #0
   1d900:	b	1d8e0 <isNumber@@Base+0x98>
   1d904:	mov	r0, #0
   1d908:	mov	sp, r6
   1d90c:	b	1d8e4 <isNumber@@Base+0x9c>
   1d910:	bl	14fbc <__stack_chk_fail@plt>
   1d914:	muleq	r1, r8, r7
   1d918:	andeq	r0, r0, r8, asr #4

0001d91c <setGlobalDataVariable@@Base>:
   1d91c:	ldr	r3, [pc, #316]	; 1da60 <setGlobalDataVariable@@Base+0x144>
   1d920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d924:	add	fp, sp, #32
   1d928:	ldr	r2, [pc, #308]	; 1da64 <setGlobalDataVariable@@Base+0x148>
   1d92c:	sub	sp, sp, #28
   1d930:	add	r3, pc, r3
   1d934:	mov	r6, r1
   1d938:	mov	sl, r0
   1d93c:	ldr	r2, [r3, r2]
   1d940:	sub	r4, fp, #48	; 0x30
   1d944:	ldr	r3, [r2]
   1d948:	str	r2, [fp, #-56]	; 0xffffffc8
   1d94c:	str	r3, [fp, #-40]	; 0xffffffd8
   1d950:	bl	2441c <getUtf8Length@@Base>
   1d954:	add	r7, r0, #1
   1d958:	mov	r5, r0
   1d95c:	mov	r0, r6
   1d960:	lsl	r7, r7, #2
   1d964:	add	r2, r7, #10
   1d968:	bic	r2, r2, #7
   1d96c:	sub	sp, sp, r2
   1d970:	bl	2441c <getUtf8Length@@Base>
   1d974:	lsr	r2, r7, #2
   1d978:	sub	r7, fp, #52	; 0x34
   1d97c:	mov	ip, sp
   1d980:	mov	r1, r4
   1d984:	str	sp, [fp, #-48]	; 0xffffffd0
   1d988:	str	ip, [fp, #-60]	; 0xffffffc4
   1d98c:	str	sl, [fp, #-52]	; 0xffffffcc
   1d990:	add	r8, r0, #1
   1d994:	mov	r9, r0
   1d998:	mov	r0, r7
   1d99c:	lsl	r8, r8, #2
   1d9a0:	add	lr, r8, #10
   1d9a4:	bic	lr, lr, #7
   1d9a8:	sub	sp, sp, lr
   1d9ac:	bl	244b4 <convertUtf8ToWchars@@Base>
   1d9b0:	mov	r0, r7
   1d9b4:	lsr	r2, r8, #2
   1d9b8:	mov	r1, r4
   1d9bc:	str	r6, [fp, #-52]	; 0xffffffcc
   1d9c0:	mov	r6, sp
   1d9c4:	str	sp, [fp, #-48]	; 0xffffffd0
   1d9c8:	bl	244b4 <convertUtf8ToWchars@@Base>
   1d9cc:	bl	1d658 <isOctalDigit@@Base+0x1a4>
   1d9d0:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1d9d4:	subs	r7, r0, #0
   1d9d8:	moveq	r0, r7
   1d9dc:	beq	1da28 <setGlobalDataVariable@@Base+0x10c>
   1d9e0:	ldr	r1, [pc, #128]	; 1da68 <setGlobalDataVariable@@Base+0x14c>
   1d9e4:	mov	r2, r4
   1d9e8:	str	ip, [fp, #-48]	; 0xffffffd0
   1d9ec:	add	r1, pc, r1
   1d9f0:	str	r5, [fp, #-44]	; 0xffffffd4
   1d9f4:	bl	1ed7c <findItem@@Base>
   1d9f8:	cmp	r0, #0
   1d9fc:	movne	r1, r0
   1da00:	beq	1da44 <setGlobalDataVariable@@Base+0x128>
   1da04:	add	r0, r1, #8
   1da08:	mov	r2, r6
   1da0c:	mov	r3, r9
   1da10:	add	r1, r1, #12
   1da14:	bl	1d5f0 <isOctalDigit@@Base+0x13c>
   1da18:	cmp	r0, #0
   1da1c:	movne	r0, #1
   1da20:	bne	1da28 <setGlobalDataVariable@@Base+0x10c>
   1da24:	mov	r0, #0
   1da28:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1da2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1da30:	ldr	r3, [r1]
   1da34:	cmp	r2, r3
   1da38:	bne	1da5c <setGlobalDataVariable@@Base+0x140>
   1da3c:	sub	sp, fp, #32
   1da40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1da44:	mov	r1, r4
   1da48:	mov	r0, r7
   1da4c:	bl	1d53c <isOctalDigit@@Base+0x88>
   1da50:	subs	r1, r0, #0
   1da54:	beq	1da24 <setGlobalDataVariable@@Base+0x108>
   1da58:	b	1da04 <setGlobalDataVariable@@Base+0xe8>
   1da5c:	bl	14fbc <__stack_chk_fail@plt>
   1da60:	andeq	sp, r1, r8, asr #13
   1da64:	andeq	r0, r0, r8, asr #4
   1da68:			; <UNDEFINED> instruction: 0xfffffb14

0001da6c <setGlobalTableVariables@@Base>:
   1da6c:	mov	r3, r0
   1da70:	ldr	r0, [pc, #52]	; 1daac <setGlobalTableVariables@@Base+0x40>
   1da74:	push	{r4, lr}
   1da78:	add	r0, pc, r0
   1da7c:	mov	r4, r1
   1da80:	mov	r1, r3
   1da84:	bl	1d91c <setGlobalDataVariable@@Base>
   1da88:	cmp	r0, #0
   1da8c:	popeq	{r4, pc}
   1da90:	ldr	r0, [pc, #24]	; 1dab0 <setGlobalTableVariables@@Base+0x44>
   1da94:	mov	r1, r4
   1da98:	add	r0, pc, r0
   1da9c:	bl	1d91c <setGlobalDataVariable@@Base>
   1daa0:	adds	r0, r0, #0
   1daa4:	movne	r0, #1
   1daa8:	pop	{r4, pc}
   1daac:	strdeq	r9, [r0], -r0
   1dab0:	andeq	r9, r0, r0, ror #17

0001dab4 <findDataOperand@@Base>:
   1dab4:	push	{r4, r5, r6, r7, r8, lr}
   1dab8:	mov	r6, r0
   1dabc:	ldr	r4, [r0, #24]
   1dac0:	mov	r8, r1
   1dac4:	str	r4, [r0, #20]
   1dac8:	b	1dad0 <findDataOperand@@Base+0x1c>
   1dacc:	str	r4, [r6, #20]
   1dad0:	mov	r5, r4
   1dad4:	add	r4, r4, #4
   1dad8:	ldr	r0, [r5]
   1dadc:	bl	14c98 <iswspace@plt>
   1dae0:	subs	r7, r0, #0
   1dae4:	bne	1dacc <findDataOperand@@Base+0x18>
   1dae8:	str	r5, [r6, #24]
   1daec:	ldr	r3, [r5]
   1daf0:	cmp	r3, #0
   1daf4:	movne	r7, #1
   1daf8:	bne	1db18 <findDataOperand@@Base+0x64>
   1dafc:	cmp	r8, #0
   1db00:	beq	1db18 <findDataOperand@@Base+0x64>
   1db04:	ldr	r1, [pc, #20]	; 1db20 <findDataOperand@@Base+0x6c>
   1db08:	mov	r0, r6
   1db0c:	mov	r2, r8
   1db10:	add	r1, pc, r1
   1db14:	bl	1d740 <reportDataError@@Base>
   1db18:	mov	r0, r7
   1db1c:	pop	{r4, r5, r6, r7, r8, pc}
   1db20:	andeq	r9, r0, ip, ror r8
   1db24:	ldr	r3, [pc, #228]	; 1dc10 <findDataOperand@@Base+0x15c>
   1db28:	push	{r4, r5, r6, r7, fp, lr}
   1db2c:	add	fp, sp, #20
   1db30:	ldr	r2, [pc, #220]	; 1dc14 <findDataOperand@@Base+0x160>
   1db34:	sub	sp, sp, #16
   1db38:	add	r3, pc, r3
   1db3c:	mov	r4, r1
   1db40:	mov	r7, r0
   1db44:	ldr	r6, [r3, r2]
   1db48:	ldr	r3, [r6]
   1db4c:	str	r3, [fp, #-24]	; 0xffffffe8
   1db50:	bl	150e8 <strlen@plt>
   1db54:	ldr	r3, [r4, #4]
   1db58:	sub	r1, fp, #28
   1db5c:	str	r7, [fp, #-32]	; 0xffffffe0
   1db60:	add	r3, r3, #1
   1db64:	str	r3, [r4, #4]
   1db68:	add	r2, r0, #1
   1db6c:	sub	r0, fp, #32
   1db70:	lsl	r3, r2, #2
   1db74:	add	r3, r3, #10
   1db78:	bic	r3, r3, #7
   1db7c:	sub	sp, sp, r3
   1db80:	str	sp, [fp, #-28]	; 0xffffffe4
   1db84:	bl	244b4 <convertUtf8ToWchars@@Base>
   1db88:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1db8c:	ldrb	r1, [r2]
   1db90:	cmp	r1, #0
   1db94:	bne	1dbf0 <findDataOperand@@Base+0x13c>
   1db98:	str	sp, [r4, #20]
   1db9c:	mov	r0, r4
   1dba0:	str	sp, [r4, #24]
   1dba4:	bl	1dab4 <findDataOperand@@Base>
   1dba8:	cmp	r0, #0
   1dbac:	beq	1dbe8 <findDataOperand@@Base+0x134>
   1dbb0:	ldr	r3, [r4, #20]
   1dbb4:	ldr	r3, [r3]
   1dbb8:	cmp	r3, #35	; 0x23
   1dbbc:	beq	1dbe8 <findDataOperand@@Base+0x134>
   1dbc0:	mov	r0, r4
   1dbc4:	ldr	r3, [r4, #8]
   1dbc8:	ldr	r1, [r4, #12]
   1dbcc:	blx	r3
   1dbd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dbd4:	ldr	r3, [r6]
   1dbd8:	cmp	r2, r3
   1dbdc:	bne	1dc0c <findDataOperand@@Base+0x158>
   1dbe0:	sub	sp, fp, #20
   1dbe4:	pop	{r4, r5, r6, r7, fp, pc}
   1dbe8:	mov	r0, #1
   1dbec:	b	1dbd0 <findDataOperand@@Base+0x11c>
   1dbf0:	ldr	r1, [pc, #32]	; 1dc18 <findDataOperand@@Base+0x164>
   1dbf4:	mov	r0, r4
   1dbf8:	rsb	r2, r7, r2
   1dbfc:	add	r1, pc, r1
   1dc00:	bl	1d740 <reportDataError@@Base>
   1dc04:	mov	r0, #1
   1dc08:	b	1dbd0 <findDataOperand@@Base+0x11c>
   1dc0c:	bl	14fbc <__stack_chk_fail@plt>
   1dc10:	andeq	sp, r1, r0, asr #9
   1dc14:	andeq	r0, r0, r8, asr #4
   1dc18:	andeq	r9, r0, r4, lsr #15

0001dc1c <getDataCharacter@@Base>:
   1dc1c:	ldr	r3, [r0, #24]
   1dc20:	ldr	r2, [r3]
   1dc24:	cmp	r2, #0
   1dc28:	addne	r2, r3, #4
   1dc2c:	strne	r2, [r0, #24]
   1dc30:	ldrne	r3, [r3]
   1dc34:	movne	r0, #1
   1dc38:	moveq	r0, r2
   1dc3c:	strne	r3, [r1]
   1dc40:	bx	lr

0001dc44 <ungetDataCharacters@@Base>:
   1dc44:	push	{r3, lr}
   1dc48:	mov	ip, r0
   1dc4c:	ldr	r2, [r0, #24]
   1dc50:	ldr	r3, [r0, #20]
   1dc54:	rsb	r3, r3, r2
   1dc58:	asr	r3, r3, #2
   1dc5c:	cmp	r3, r1
   1dc60:	bcc	1dc74 <ungetDataCharacters@@Base+0x30>
   1dc64:	sub	r1, r2, r1, lsl #2
   1dc68:	mov	r0, #1
   1dc6c:	str	r1, [ip, #24]
   1dc70:	pop	{r3, pc}
   1dc74:	mov	r2, r1
   1dc78:	ldr	r1, [pc, #12]	; 1dc8c <ungetDataCharacters@@Base+0x48>
   1dc7c:	add	r1, pc, r1
   1dc80:	bl	1d740 <reportDataError@@Base>
   1dc84:	mov	r0, #0
   1dc88:	pop	{r3, pc}
   1dc8c:	andeq	r9, r0, ip, asr #14

0001dc90 <getDataOperand@@Base>:
   1dc90:	push	{r4, r5, r6, lr}
   1dc94:	mov	r6, r1
   1dc98:	mov	r1, r2
   1dc9c:	mov	r5, r0
   1dca0:	bl	1dab4 <findDataOperand@@Base>
   1dca4:	cmp	r0, #0
   1dca8:	popeq	{r4, r5, r6, pc}
   1dcac:	ldr	r3, [r5, #24]
   1dcb0:	b	1dcc4 <getDataOperand@@Base+0x34>
   1dcb4:	bl	14c98 <iswspace@plt>
   1dcb8:	mov	r3, r4
   1dcbc:	cmp	r0, #0
   1dcc0:	bne	1dcd8 <getDataOperand@@Base+0x48>
   1dcc4:	add	r4, r3, #4
   1dcc8:	str	r4, [r5, #24]
   1dccc:	ldr	r0, [r3, #4]
   1dcd0:	cmp	r0, #0
   1dcd4:	bne	1dcb4 <getDataOperand@@Base+0x24>
   1dcd8:	ldr	r3, [r5, #20]
   1dcdc:	mov	r0, #1
   1dce0:	str	r3, [r6]
   1dce4:	ldr	r2, [r5, #24]
   1dce8:	ldr	r3, [r5, #20]
   1dcec:	rsb	r3, r3, r2
   1dcf0:	asr	r3, r3, #2
   1dcf4:	str	r3, [r6, #4]
   1dcf8:	pop	{r4, r5, r6, pc}

0001dcfc <getDataText@@Base>:
   1dcfc:	push	{r4, r5, r6, lr}
   1dd00:	mov	r6, r1
   1dd04:	mov	r1, r2
   1dd08:	mov	r4, r0
   1dd0c:	bl	1dab4 <findDataOperand@@Base>
   1dd10:	cmp	r0, #0
   1dd14:	popeq	{r4, r5, r6, pc}
   1dd18:	ldr	r5, [r4, #20]
   1dd1c:	mov	r0, r5
   1dd20:	bl	14c74 <wcslen@plt>
   1dd24:	add	r0, r5, r0, lsl #2
   1dd28:	str	r0, [r4, #24]
   1dd2c:	str	r5, [r6]
   1dd30:	ldr	r2, [r4, #24]
   1dd34:	ldr	r3, [r4, #20]
   1dd38:	rsb	r3, r3, r2
   1dd3c:	asr	r3, r3, #2
   1dd40:	str	r3, [r6, #4]
   1dd44:	cmp	r3, #0
   1dd48:	addne	r5, r5, r3, lsl #2
   1dd4c:	bne	1dd60 <getDataText@@Base+0x64>
   1dd50:	b	1dd78 <getDataText@@Base+0x7c>
   1dd54:	cmp	r4, #0
   1dd58:	str	r4, [r6, #4]
   1dd5c:	beq	1dd78 <getDataText@@Base+0x7c>
   1dd60:	ldr	r0, [r5, #-4]!
   1dd64:	sub	r4, r3, #1
   1dd68:	bl	14c98 <iswspace@plt>
   1dd6c:	mov	r3, r4
   1dd70:	cmp	r0, #0
   1dd74:	bne	1dd54 <getDataText@@Base+0x58>
   1dd78:	mov	r0, #1
   1dd7c:	pop	{r4, r5, r6, pc}

0001dd80 <parseDataString@@Base>:
   1dd80:	ldr	ip, [pc, #1444]	; 1e32c <parseDataString@@Base+0x5ac>
   1dd84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd88:	subs	sl, r3, #0
   1dd8c:	add	fp, sp, #32
   1dd90:	ldr	r3, [pc, #1432]	; 1e330 <parseDataString@@Base+0x5b0>
   1dd94:	sub	sp, sp, #76	; 0x4c
   1dd98:	add	ip, pc, ip
   1dd9c:	str	ip, [fp, #-80]	; 0xffffffb0
   1dda0:	str	r0, [fp, #-92]	; 0xffffffa4
   1dda4:	mov	r4, #0
   1dda8:	ldr	r3, [ip, r3]
   1ddac:	mov	r6, r1
   1ddb0:	mov	r7, r2
   1ddb4:	str	r3, [fp, #-84]	; 0xffffffac
   1ddb8:	ldr	r3, [r3]
   1ddbc:	strb	r4, [r1]
   1ddc0:	str	r3, [fp, #-40]	; 0xffffffd8
   1ddc4:	ble	1e2b8 <parseDataString@@Base+0x538>
   1ddc8:	ldr	r1, [pc, #1380]	; 1e334 <parseDataString@@Base+0x5b4>
   1ddcc:	sub	r2, fp, #48	; 0x30
   1ddd0:	str	r2, [fp, #-68]	; 0xffffffbc
   1ddd4:	add	r1, pc, r1
   1ddd8:	str	r1, [fp, #-76]	; 0xffffffb4
   1dddc:	b	1de18 <parseDataString@@Base+0x98>
   1dde0:	sub	r1, fp, #56	; 0x38
   1dde4:	mov	r2, #1
   1dde8:	ldrb	r0, [r6]
   1ddec:	add	r4, r4, #1
   1ddf0:	add	r5, r2, r0
   1ddf4:	cmp	r5, #254	; 0xfe
   1ddf8:	bhi	1e2e8 <parseDataString@@Base+0x568>
   1ddfc:	add	r0, r6, r0, lsl #2
   1de00:	uxtb	r5, r5
   1de04:	add	r0, r0, #4
   1de08:	bl	14db8 <wmemcpy@plt>
   1de0c:	cmp	sl, r4
   1de10:	strb	r5, [r6]
   1de14:	ble	1e2bc <parseDataString@@Base+0x53c>
   1de18:	ldr	r3, [r7, r4, lsl #2]
   1de1c:	lsl	r2, r4, #2
   1de20:	add	ip, r7, r2
   1de24:	str	ip, [fp, #-64]	; 0xffffffc0
   1de28:	cmp	r3, #92	; 0x5c
   1de2c:	str	r3, [fp, #-56]	; 0xffffffc8
   1de30:	bne	1dde0 <parseDataString@@Base+0x60>
   1de34:	add	r5, r4, #1
   1de38:	cmp	sl, r5
   1de3c:	ble	1e044 <parseDataString@@Base+0x2c4>
   1de40:	add	r1, r2, #4
   1de44:	add	r3, r7, r1
   1de48:	ldr	r0, [r7, r1]
   1de4c:	sub	r1, r0, #35	; 0x23
   1de50:	str	r0, [fp, #-56]	; 0xffffffc8
   1de54:	cmp	r1, #88	; 0x58
   1de58:	addls	pc, pc, r1, lsl #2
   1de5c:	b	1e03c <parseDataString@@Base+0x2bc>
   1de60:	b	1e07c <parseDataString@@Base+0x2fc>
   1de64:	b	1e03c <parseDataString@@Base+0x2bc>
   1de68:	b	1e03c <parseDataString@@Base+0x2bc>
   1de6c:	b	1e03c <parseDataString@@Base+0x2bc>
   1de70:	b	1e03c <parseDataString@@Base+0x2bc>
   1de74:	b	1e03c <parseDataString@@Base+0x2bc>
   1de78:	b	1e03c <parseDataString@@Base+0x2bc>
   1de7c:	b	1e03c <parseDataString@@Base+0x2bc>
   1de80:	b	1e03c <parseDataString@@Base+0x2bc>
   1de84:	b	1e03c <parseDataString@@Base+0x2bc>
   1de88:	b	1e03c <parseDataString@@Base+0x2bc>
   1de8c:	b	1e03c <parseDataString@@Base+0x2bc>
   1de90:	b	1e03c <parseDataString@@Base+0x2bc>
   1de94:	b	1e03c <parseDataString@@Base+0x2bc>
   1de98:	b	1e03c <parseDataString@@Base+0x2bc>
   1de9c:	b	1e03c <parseDataString@@Base+0x2bc>
   1dea0:	b	1e03c <parseDataString@@Base+0x2bc>
   1dea4:	b	1e03c <parseDataString@@Base+0x2bc>
   1dea8:	b	1e03c <parseDataString@@Base+0x2bc>
   1deac:	b	1e03c <parseDataString@@Base+0x2bc>
   1deb0:	b	1e03c <parseDataString@@Base+0x2bc>
   1deb4:	b	1e03c <parseDataString@@Base+0x2bc>
   1deb8:	b	1e03c <parseDataString@@Base+0x2bc>
   1debc:	b	1e03c <parseDataString@@Base+0x2bc>
   1dec0:	b	1e03c <parseDataString@@Base+0x2bc>
   1dec4:	b	1e0a8 <parseDataString@@Base+0x328>
   1dec8:	b	1e03c <parseDataString@@Base+0x2bc>
   1decc:	b	1e03c <parseDataString@@Base+0x2bc>
   1ded0:	b	1e03c <parseDataString@@Base+0x2bc>
   1ded4:	b	1e03c <parseDataString@@Base+0x2bc>
   1ded8:	b	1e03c <parseDataString@@Base+0x2bc>
   1dedc:	b	1e03c <parseDataString@@Base+0x2bc>
   1dee0:	b	1e03c <parseDataString@@Base+0x2bc>
   1dee4:	b	1e03c <parseDataString@@Base+0x2bc>
   1dee8:	b	1e03c <parseDataString@@Base+0x2bc>
   1deec:	b	1e03c <parseDataString@@Base+0x2bc>
   1def0:	b	1e03c <parseDataString@@Base+0x2bc>
   1def4:	b	1e03c <parseDataString@@Base+0x2bc>
   1def8:	b	1e03c <parseDataString@@Base+0x2bc>
   1defc:	b	1e03c <parseDataString@@Base+0x2bc>
   1df00:	b	1e03c <parseDataString@@Base+0x2bc>
   1df04:	b	1e03c <parseDataString@@Base+0x2bc>
   1df08:	b	1e03c <parseDataString@@Base+0x2bc>
   1df0c:	b	1e03c <parseDataString@@Base+0x2bc>
   1df10:	b	1e03c <parseDataString@@Base+0x2bc>
   1df14:	b	1e03c <parseDataString@@Base+0x2bc>
   1df18:	b	1e03c <parseDataString@@Base+0x2bc>
   1df1c:	b	1e03c <parseDataString@@Base+0x2bc>
   1df20:	b	1e03c <parseDataString@@Base+0x2bc>
   1df24:	b	1e03c <parseDataString@@Base+0x2bc>
   1df28:	b	1e084 <parseDataString@@Base+0x304>
   1df2c:	b	1e03c <parseDataString@@Base+0x2bc>
   1df30:	b	1e03c <parseDataString@@Base+0x2bc>
   1df34:	b	1dfc4 <parseDataString@@Base+0x244>
   1df38:	b	1e03c <parseDataString@@Base+0x2bc>
   1df3c:	b	1e03c <parseDataString@@Base+0x2bc>
   1df40:	b	1e03c <parseDataString@@Base+0x2bc>
   1df44:	b	1e07c <parseDataString@@Base+0x2fc>
   1df48:	b	1e03c <parseDataString@@Base+0x2bc>
   1df4c:	b	1e03c <parseDataString@@Base+0x2bc>
   1df50:	b	1e03c <parseDataString@@Base+0x2bc>
   1df54:	b	1e03c <parseDataString@@Base+0x2bc>
   1df58:	b	1e03c <parseDataString@@Base+0x2bc>
   1df5c:	b	1e28c <parseDataString@@Base+0x50c>
   1df60:	b	1e03c <parseDataString@@Base+0x2bc>
   1df64:	b	1e03c <parseDataString@@Base+0x2bc>
   1df68:	b	1e03c <parseDataString@@Base+0x2bc>
   1df6c:	b	1e27c <parseDataString@@Base+0x4fc>
   1df70:	b	1e03c <parseDataString@@Base+0x2bc>
   1df74:	b	1e03c <parseDataString@@Base+0x2bc>
   1df78:	b	1e03c <parseDataString@@Base+0x2bc>
   1df7c:	b	1e03c <parseDataString@@Base+0x2bc>
   1df80:	b	1e03c <parseDataString@@Base+0x2bc>
   1df84:	b	1e03c <parseDataString@@Base+0x2bc>
   1df88:	b	1e03c <parseDataString@@Base+0x2bc>
   1df8c:	b	1e26c <parseDataString@@Base+0x4ec>
   1df90:	b	1e254 <parseDataString@@Base+0x4d4>
   1df94:	b	1e03c <parseDataString@@Base+0x2bc>
   1df98:	b	1e03c <parseDataString@@Base+0x2bc>
   1df9c:	b	1e244 <parseDataString@@Base+0x4c4>
   1dfa0:	b	1e234 <parseDataString@@Base+0x4b4>
   1dfa4:	b	1e224 <parseDataString@@Base+0x4a4>
   1dfa8:	b	1e200 <parseDataString@@Base+0x480>
   1dfac:	b	1e1f0 <parseDataString@@Base+0x470>
   1dfb0:	b	1e03c <parseDataString@@Base+0x2bc>
   1dfb4:	b	1dfc4 <parseDataString@@Base+0x244>
   1dfb8:	b	1e03c <parseDataString@@Base+0x2bc>
   1dfbc:	b	1e03c <parseDataString@@Base+0x2bc>
   1dfc0:	b	1e180 <parseDataString@@Base+0x400>
   1dfc4:	ldr	r2, [pc, #876]	; 1e338 <parseDataString@@Base+0x5b8>
   1dfc8:	mov	r8, #2
   1dfcc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1dfd0:	ldr	r2, [r1, r2]
   1dfd4:	str	r2, [fp, #-72]	; 0xffffffb8
   1dfd8:	sub	ip, fp, #52	; 0x34
   1dfdc:	mov	r9, #0
   1dfe0:	str	r4, [fp, #-88]	; 0xffffffa8
   1dfe4:	mov	r4, r9
   1dfe8:	str	r6, [fp, #-96]	; 0xffffffa0
   1dfec:	mov	r9, r3
   1dff0:	ldr	r6, [fp, #-72]	; 0xffffffb8
   1dff4:	str	r7, [fp, #-72]	; 0xffffffb8
   1dff8:	mov	r7, ip
   1dffc:	b	1e02c <parseDataString@@Base+0x2ac>
   1e000:	ldr	r0, [r9, #4]!
   1e004:	mov	r1, r7
   1e008:	sub	r2, fp, #48	; 0x30
   1e00c:	blx	r6
   1e010:	cmp	r0, #0
   1e014:	beq	1e038 <parseDataString@@Base+0x2b8>
   1e018:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1e01c:	subs	r8, r8, #1
   1e020:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e024:	orr	r4, r2, r4, lsl r1
   1e028:	beq	1e300 <parseDataString@@Base+0x580>
   1e02c:	add	r5, r5, #1
   1e030:	cmp	r5, sl
   1e034:	bne	1e000 <parseDataString@@Base+0x280>
   1e038:	ldr	r4, [fp, #-88]	; 0xffffffa8
   1e03c:	cmp	sl, r5
   1e040:	addgt	r5, r5, #1
   1e044:	ldr	r1, [pc, #752]	; 1e33c <parseDataString@@Base+0x5bc>
   1e048:	mov	r2, #5
   1e04c:	mov	r0, #0
   1e050:	add	r1, pc, r1
   1e054:	bl	14fec <dcgettext@plt>
   1e058:	ldr	ip, [fp, #-64]	; 0xffffffc0
   1e05c:	ldr	r1, [pc, #732]	; 1e340 <parseDataString@@Base+0x5c0>
   1e060:	rsb	r3, r4, r5
   1e064:	str	ip, [sp]
   1e068:	add	r1, pc, r1
   1e06c:	mov	r2, r0
   1e070:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1e074:	bl	1d740 <reportDataError@@Base>
   1e078:	b	1e2f8 <parseDataString@@Base+0x578>
   1e07c:	mov	r4, r5
   1e080:	b	1dde0 <parseDataString@@Base+0x60>
   1e084:	ldr	ip, [fp, #4]
   1e088:	cmp	ip, #0
   1e08c:	bne	1e03c <parseDataString@@Base+0x2bc>
   1e090:	ldr	r2, [pc, #672]	; 1e338 <parseDataString@@Base+0x5b8>
   1e094:	mov	r8, #8
   1e098:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1e09c:	ldr	r2, [r1, r2]
   1e0a0:	str	r2, [fp, #-72]	; 0xffffffb8
   1e0a4:	b	1dfd8 <parseDataString@@Base+0x258>
   1e0a8:	add	r2, r2, #8
   1e0ac:	add	r5, r4, #2
   1e0b0:	add	r9, r7, r2
   1e0b4:	mov	r1, #62	; 0x3e
   1e0b8:	rsb	r2, r5, sl
   1e0bc:	mov	r0, r9
   1e0c0:	bl	14e9c <wmemchr@plt>
   1e0c4:	ldr	r3, [fp, #4]
   1e0c8:	cmp	r3, #0
   1e0cc:	bne	1e03c <parseDataString@@Base+0x2bc>
   1e0d0:	cmp	r0, #0
   1e0d4:	beq	1e31c <parseDataString@@Base+0x59c>
   1e0d8:	rsb	ip, r9, r0
   1e0dc:	mov	r8, sp
   1e0e0:	asr	lr, ip, #2
   1e0e4:	add	r3, lr, #8
   1e0e8:	cmp	lr, #0
   1e0ec:	bic	r3, r3, #7
   1e0f0:	add	r5, r5, lr
   1e0f4:	sub	sp, sp, r3
   1e0f8:	subgt	r0, r9, #4
   1e0fc:	add	r1, sp, #8
   1e100:	addgt	lr, r1, lr
   1e104:	movgt	r2, r1
   1e108:	bgt	1e128 <parseDataString@@Base+0x3a8>
   1e10c:	b	1e144 <parseDataString@@Base+0x3c4>
   1e110:	cmp	r3, #255	; 0xff
   1e114:	bhi	1e314 <parseDataString@@Base+0x594>
   1e118:	uxtb	r3, r3
   1e11c:	strb	r3, [r2], #1
   1e120:	cmp	r2, lr
   1e124:	beq	1e144 <parseDataString@@Base+0x3c4>
   1e128:	ldr	r3, [r0, #4]!
   1e12c:	cmp	r3, #95	; 0x5f
   1e130:	bne	1e110 <parseDataString@@Base+0x390>
   1e134:	mov	r3, #32
   1e138:	strb	r3, [r2], #1
   1e13c:	cmp	r2, lr
   1e140:	bne	1e128 <parseDataString@@Base+0x3a8>
   1e144:	mov	r2, #0
   1e148:	mov	r0, #2
   1e14c:	strb	r2, [r1, ip, asr #2]
   1e150:	sub	r2, fp, #48	; 0x30
   1e154:	mov	r3, #0
   1e158:	str	r3, [fp, #-48]	; 0xffffffd0
   1e15c:	bl	14f38 <u_charFromName_50@plt>
   1e160:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e164:	mov	r2, #1
   1e168:	str	r0, [fp, #-56]	; 0xffffffc8
   1e16c:	sub	r1, fp, #56	; 0x38
   1e170:	cmp	r3, #0
   1e174:	mov	sp, r8
   1e178:	ble	1e1e8 <parseDataString@@Base+0x468>
   1e17c:	b	1e03c <parseDataString@@Base+0x2bc>
   1e180:	add	r2, r2, #8
   1e184:	add	r9, r4, #2
   1e188:	add	r5, r7, r2
   1e18c:	mov	r1, #125	; 0x7d
   1e190:	rsb	r2, r9, sl
   1e194:	mov	r0, r5
   1e198:	bl	14e9c <wmemchr@plt>
   1e19c:	cmp	r0, #0
   1e1a0:	beq	1e31c <parseDataString@@Base+0x59c>
   1e1a4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1e1a8:	rsb	r0, r5, r0
   1e1ac:	str	r4, [fp, #-72]	; 0xffffffb8
   1e1b0:	sub	r4, fp, #48	; 0x30
   1e1b4:	str	r5, [fp, #-48]	; 0xffffffd0
   1e1b8:	asr	r5, r0, #2
   1e1bc:	ldr	r8, [r2, #16]
   1e1c0:	str	r5, [fp, #-44]	; 0xffffffd4
   1e1c4:	mov	r0, r8
   1e1c8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1e1cc:	mov	r2, r4
   1e1d0:	bl	1ed7c <findItem@@Base>
   1e1d4:	cmp	r0, #0
   1e1d8:	beq	1e29c <parseDataString@@Base+0x51c>
   1e1dc:	ldr	r1, [r0, #8]
   1e1e0:	add	r5, r9, r5
   1e1e4:	ldr	r2, [r0, #12]
   1e1e8:	mov	r4, r5
   1e1ec:	b	1dde8 <parseDataString@@Base+0x68>
   1e1f0:	mov	r3, #11
   1e1f4:	mov	r4, r5
   1e1f8:	str	r3, [fp, #-56]	; 0xffffffc8
   1e1fc:	b	1dde0 <parseDataString@@Base+0x60>
   1e200:	ldr	r2, [fp, #4]
   1e204:	cmp	r2, #0
   1e208:	bne	1e03c <parseDataString@@Base+0x2bc>
   1e20c:	ldr	r2, [pc, #292]	; 1e338 <parseDataString@@Base+0x5b8>
   1e210:	mov	r8, #4
   1e214:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1e218:	ldr	r2, [ip, r2]
   1e21c:	str	r2, [fp, #-72]	; 0xffffffb8
   1e220:	b	1dfd8 <parseDataString@@Base+0x258>
   1e224:	mov	r3, #9
   1e228:	mov	r4, r5
   1e22c:	str	r3, [fp, #-56]	; 0xffffffc8
   1e230:	b	1dde0 <parseDataString@@Base+0x60>
   1e234:	mov	r2, #32
   1e238:	mov	r4, r5
   1e23c:	str	r2, [fp, #-56]	; 0xffffffc8
   1e240:	b	1dde0 <parseDataString@@Base+0x60>
   1e244:	mov	r3, #13
   1e248:	mov	r4, r5
   1e24c:	str	r3, [fp, #-56]	; 0xffffffc8
   1e250:	b	1dde0 <parseDataString@@Base+0x60>
   1e254:	ldr	r2, [pc, #232]	; 1e344 <parseDataString@@Base+0x5c4>
   1e258:	mov	r8, #3
   1e25c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1e260:	ldr	r2, [r1, r2]
   1e264:	str	r2, [fp, #-72]	; 0xffffffb8
   1e268:	b	1dfd8 <parseDataString@@Base+0x258>
   1e26c:	mov	r3, #10
   1e270:	mov	r4, r5
   1e274:	str	r3, [fp, #-56]	; 0xffffffc8
   1e278:	b	1dde0 <parseDataString@@Base+0x60>
   1e27c:	mov	r3, #12
   1e280:	mov	r4, r5
   1e284:	str	r3, [fp, #-56]	; 0xffffffc8
   1e288:	b	1dde0 <parseDataString@@Base+0x60>
   1e28c:	mov	r3, #8
   1e290:	mov	r4, r5
   1e294:	str	r3, [fp, #-56]	; 0xffffffc8
   1e298:	b	1dde0 <parseDataString@@Base+0x60>
   1e29c:	mov	r0, r8
   1e2a0:	bl	1eb54 <getQueueData@@Base>
   1e2a4:	subs	r8, r0, #0
   1e2a8:	bne	1e1c4 <parseDataString@@Base+0x444>
   1e2ac:	ldr	r4, [fp, #-72]	; 0xffffffb8
   1e2b0:	add	r5, r9, r5
   1e2b4:	b	1e03c <parseDataString@@Base+0x2bc>
   1e2b8:	mov	r5, r4
   1e2bc:	add	r6, r6, r5, lsl #2
   1e2c0:	mov	r0, #1
   1e2c4:	mov	r3, #0
   1e2c8:	str	r3, [r6, #4]
   1e2cc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1e2d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e2d4:	ldr	r3, [r1]
   1e2d8:	cmp	r2, r3
   1e2dc:	bne	1e324 <parseDataString@@Base+0x5a4>
   1e2e0:	sub	sp, fp, #32
   1e2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e2e8:	ldr	r1, [pc, #88]	; 1e348 <parseDataString@@Base+0x5c8>
   1e2ec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1e2f0:	add	r1, pc, r1
   1e2f4:	bl	1d740 <reportDataError@@Base>
   1e2f8:	mov	r0, #0
   1e2fc:	b	1e2cc <parseDataString@@Base+0x54c>
   1e300:	str	r4, [fp, #-56]	; 0xffffffc8
   1e304:	mov	r4, r5
   1e308:	ldr	r6, [fp, #-96]	; 0xffffffa0
   1e30c:	ldr	r7, [fp, #-72]	; 0xffffffb8
   1e310:	b	1dde0 <parseDataString@@Base+0x60>
   1e314:	mov	sp, r8
   1e318:	b	1e03c <parseDataString@@Base+0x2bc>
   1e31c:	sub	r5, sl, #1
   1e320:	b	1e03c <parseDataString@@Base+0x2bc>
   1e324:	bl	14fbc <__stack_chk_fail@plt>
   1e328:	bl	15208 <_Unwind_Resume@plt>
   1e32c:	andeq	sp, r1, r0, ror #4
   1e330:	andeq	r0, r0, r8, asr #4
   1e334:			; <UNDEFINED> instruction: 0xfffff72c
   1e338:	andeq	r0, r0, ip, asr r2
   1e33c:	andeq	r9, r0, r4, lsr #7
   1e340:	andeq	r9, r0, r8, asr #9
   1e344:	muleq	r0, r0, r2
   1e348:	andeq	r9, r0, ip, lsl r1

0001e34c <getDataString@@Base>:
   1e34c:	push	{r4, r5, r6, r7, lr}
   1e350:	mov	r5, r2
   1e354:	ldr	lr, [pc, #112]	; 1e3cc <getDataString@@Base+0x80>
   1e358:	mov	r2, r3
   1e35c:	ldr	ip, [pc, #108]	; 1e3d0 <getDataString@@Base+0x84>
   1e360:	sub	sp, sp, #28
   1e364:	add	lr, pc, lr
   1e368:	mov	r6, r1
   1e36c:	add	r1, sp, #12
   1e370:	mov	r7, r0
   1e374:	ldr	r4, [lr, ip]
   1e378:	mov	r3, lr
   1e37c:	ldr	r3, [r4]
   1e380:	str	r3, [sp, #20]
   1e384:	bl	1dc90 <getDataOperand@@Base>
   1e388:	cmp	r0, #0
   1e38c:	beq	1e3b0 <getDataString@@Base+0x64>
   1e390:	ldr	r2, [sp, #12]
   1e394:	mov	r0, r7
   1e398:	ldr	r3, [sp, #16]
   1e39c:	mov	r1, r6
   1e3a0:	str	r5, [sp]
   1e3a4:	bl	1dd80 <parseDataString@@Base>
   1e3a8:	adds	r0, r0, #0
   1e3ac:	movne	r0, #1
   1e3b0:	ldr	r2, [sp, #20]
   1e3b4:	ldr	r3, [r4]
   1e3b8:	cmp	r2, r3
   1e3bc:	bne	1e3c8 <getDataString@@Base+0x7c>
   1e3c0:	add	sp, sp, #28
   1e3c4:	pop	{r4, r5, r6, r7, pc}
   1e3c8:	bl	14fbc <__stack_chk_fail@plt>
   1e3cc:	muleq	r1, r4, ip
   1e3d0:	andeq	r0, r0, r8, asr #4

0001e3d4 <getDotOperand@@Base>:
   1e3d4:	ldr	r3, [pc, #160]	; 1e47c <getDotOperand@@Base+0xa8>
   1e3d8:	ldr	ip, [pc, #160]	; 1e480 <getDotOperand@@Base+0xac>
   1e3dc:	add	r3, pc, r3
   1e3e0:	ldr	r2, [pc, #156]	; 1e484 <getDotOperand@@Base+0xb0>
   1e3e4:	push	{r4, r5, r6, r7, r8, lr}
   1e3e8:	sub	sp, sp, #16
   1e3ec:	ldr	r5, [r3, ip]
   1e3f0:	mov	r6, r1
   1e3f4:	add	r2, pc, r2
   1e3f8:	add	r1, sp, #4
   1e3fc:	mov	r7, r0
   1e400:	ldr	r3, [r5]
   1e404:	str	r3, [sp, #12]
   1e408:	bl	1dc90 <getDataOperand@@Base>
   1e40c:	subs	r4, r0, #0
   1e410:	bne	1e430 <getDotOperand@@Base+0x5c>
   1e414:	ldr	r2, [sp, #12]
   1e418:	mov	r0, r4
   1e41c:	ldr	r3, [r5]
   1e420:	cmp	r2, r3
   1e424:	bne	1e478 <getDotOperand@@Base+0xa4>
   1e428:	add	sp, sp, #16
   1e42c:	pop	{r4, r5, r6, r7, r8, pc}
   1e430:	ldr	r4, [sp, #8]
   1e434:	ldr	r8, [sp, #4]
   1e438:	cmp	r4, #1
   1e43c:	beq	1e460 <getDotOperand@@Base+0x8c>
   1e440:	ldr	r1, [pc, #64]	; 1e488 <getDotOperand@@Base+0xb4>
   1e444:	mov	r2, r4
   1e448:	mov	r0, r7
   1e44c:	mov	r3, r8
   1e450:	add	r1, pc, r1
   1e454:	mov	r4, #0
   1e458:	bl	1d740 <reportDataError@@Base>
   1e45c:	b	1e414 <getDotOperand@@Base+0x40>
   1e460:	mov	r1, r6
   1e464:	ldr	r0, [r8]
   1e468:	bl	1d6b4 <brlDotNumberToIndex@@Base>
   1e46c:	cmp	r0, #0
   1e470:	beq	1e440 <getDotOperand@@Base+0x6c>
   1e474:	b	1e414 <getDotOperand@@Base+0x40>
   1e478:	bl	14fbc <__stack_chk_fail@plt>
   1e47c:	andeq	ip, r1, ip, lsl ip
   1e480:	andeq	r0, r0, r8, asr #4
   1e484:	andeq	r9, r0, r0, lsr r0
   1e488:	andeq	r8, r0, r0, ror #31

0001e48c <processAssignOperands@@Base>:
   1e48c:	ldr	r3, [pc, #200]	; 1e55c <processAssignOperands@@Base+0xd0>
   1e490:	ldr	ip, [pc, #200]	; 1e560 <processAssignOperands@@Base+0xd4>
   1e494:	add	r3, pc, r3
   1e498:	ldr	r2, [pc, #196]	; 1e564 <processAssignOperands@@Base+0xd8>
   1e49c:	push	{r4, r5, r6, lr}
   1e4a0:	sub	sp, sp, #24
   1e4a4:	ldr	r4, [r3, ip]
   1e4a8:	add	r5, sp, #4
   1e4ac:	add	r2, pc, r2
   1e4b0:	mov	r6, r0
   1e4b4:	mov	r1, r5
   1e4b8:	ldr	r3, [r4]
   1e4bc:	str	r3, [sp, #20]
   1e4c0:	bl	1dc90 <getDataOperand@@Base>
   1e4c4:	cmp	r0, #0
   1e4c8:	bne	1e4e8 <processAssignOperands@@Base+0x5c>
   1e4cc:	ldr	r2, [sp, #20]
   1e4d0:	mov	r0, #1
   1e4d4:	ldr	r3, [r4]
   1e4d8:	cmp	r2, r3
   1e4dc:	bne	1e558 <processAssignOperands@@Base+0xcc>
   1e4e0:	add	sp, sp, #24
   1e4e4:	pop	{r4, r5, r6, pc}
   1e4e8:	mov	r0, r6
   1e4ec:	add	r1, sp, #12
   1e4f0:	mov	r2, #0
   1e4f4:	bl	1dc90 <getDataOperand@@Base>
   1e4f8:	ldr	r6, [r6, #16]
   1e4fc:	ldr	r1, [pc, #100]	; 1e568 <processAssignOperands@@Base+0xdc>
   1e500:	mov	r2, r5
   1e504:	add	r1, pc, r1
   1e508:	cmp	r0, #0
   1e50c:	streq	r0, [sp, #12]
   1e510:	streq	r0, [sp, #16]
   1e514:	mov	r0, r6
   1e518:	bl	1ed7c <findItem@@Base>
   1e51c:	cmp	r0, #0
   1e520:	movne	r1, r0
   1e524:	beq	1e540 <processAssignOperands@@Base+0xb4>
   1e528:	add	r0, r1, #8
   1e52c:	ldr	r2, [sp, #12]
   1e530:	add	r1, r1, #12
   1e534:	ldr	r3, [sp, #16]
   1e538:	bl	1d5f0 <isOctalDigit@@Base+0x13c>
   1e53c:	b	1e4cc <processAssignOperands@@Base+0x40>
   1e540:	mov	r1, r5
   1e544:	mov	r0, r6
   1e548:	bl	1d53c <isOctalDigit@@Base+0x88>
   1e54c:	subs	r1, r0, #0
   1e550:	beq	1e4cc <processAssignOperands@@Base+0x40>
   1e554:	b	1e528 <processAssignOperands@@Base+0x9c>
   1e558:	bl	14fbc <__stack_chk_fail@plt>
   1e55c:	andeq	ip, r1, r4, ror #22
   1e560:	andeq	r0, r0, r8, asr #4
   1e564:	andeq	r8, r0, r8, lsr #31
   1e568:			; <UNDEFINED> instruction: 0xffffeffc

0001e56c <processPropertyOperand@@Base>:
   1e56c:	ldr	ip, [pc, #220]	; 1e650 <processPropertyOperand@@Base+0xe4>
   1e570:	push	{r4, r5, r6, r7, r8, lr}
   1e574:	add	ip, pc, ip
   1e578:	ldr	lr, [pc, #212]	; 1e654 <processPropertyOperand@@Base+0xe8>
   1e57c:	mov	r7, r3
   1e580:	sub	sp, sp, #24
   1e584:	mov	r4, r1
   1e588:	add	r1, sp, #12
   1e58c:	mov	r6, r0
   1e590:	ldr	r5, [ip, lr]
   1e594:	mov	r8, r2
   1e598:	ldr	r3, [r5]
   1e59c:	str	r3, [sp, #20]
   1e5a0:	bl	1dc90 <getDataOperand@@Base>
   1e5a4:	cmp	r0, #0
   1e5a8:	moveq	r0, #1
   1e5ac:	beq	1e5f0 <processPropertyOperand@@Base+0x84>
   1e5b0:	ldr	r0, [r4]
   1e5b4:	cmp	r0, #0
   1e5b8:	bne	1e5cc <processPropertyOperand@@Base+0x60>
   1e5bc:	b	1e608 <processPropertyOperand@@Base+0x9c>
   1e5c0:	ldr	r0, [r4, #8]!
   1e5c4:	cmp	r0, #0
   1e5c8:	beq	1e608 <processPropertyOperand@@Base+0x9c>
   1e5cc:	ldr	r1, [sp, #12]
   1e5d0:	ldr	r2, [sp, #16]
   1e5d4:	bl	1d7ec <isKeyword@@Base>
   1e5d8:	cmp	r0, #0
   1e5dc:	beq	1e5c0 <processPropertyOperand@@Base+0x54>
   1e5e0:	ldr	r3, [r4, #4]
   1e5e4:	mov	r0, r6
   1e5e8:	mov	r1, r7
   1e5ec:	blx	r3
   1e5f0:	ldr	r2, [sp, #20]
   1e5f4:	ldr	r3, [r5]
   1e5f8:	cmp	r2, r3
   1e5fc:	bne	1e64c <processPropertyOperand@@Base+0xe0>
   1e600:	add	sp, sp, #24
   1e604:	pop	{r4, r5, r6, r7, r8, pc}
   1e608:	ldr	r3, [r4, #4]
   1e60c:	cmp	r3, #0
   1e610:	beq	1e624 <processPropertyOperand@@Base+0xb8>
   1e614:	mov	r0, r6
   1e618:	ldr	r1, [sp, #16]
   1e61c:	bl	1dc44 <ungetDataCharacters@@Base>
   1e620:	b	1e5e0 <processPropertyOperand@@Base+0x74>
   1e624:	ldr	ip, [sp, #12]
   1e628:	mov	r0, r6
   1e62c:	ldr	r1, [pc, #36]	; 1e658 <processPropertyOperand@@Base+0xec>
   1e630:	mov	r2, r8
   1e634:	ldr	r3, [sp, #16]
   1e638:	add	r1, pc, r1
   1e63c:	str	ip, [sp]
   1e640:	bl	1d740 <reportDataError@@Base>
   1e644:	mov	r0, #1
   1e648:	b	1e5f0 <processPropertyOperand@@Base+0x84>
   1e64c:	bl	14fbc <__stack_chk_fail@plt>
   1e650:	andeq	ip, r1, r4, lsl #21
   1e654:	andeq	r0, r0, r8, asr #4
   1e658:	andeq	r8, r0, ip, lsr #28

0001e65c <processDataStream@@Base>:
   1e65c:	ldr	ip, [pc, #204]	; 1e730 <processDataStream@@Base+0xd4>
   1e660:	push	{r4, r5, r6, r7, lr}
   1e664:	add	ip, pc, ip
   1e668:	ldr	lr, [pc, #196]	; 1e734 <processDataStream@@Base+0xd8>
   1e66c:	sub	sp, sp, #36	; 0x24
   1e670:	subs	r6, r0, #0
   1e674:	mov	r7, r1
   1e678:	ldr	r5, [sp, #56]	; 0x38
   1e67c:	mov	r1, #0
   1e680:	ldr	r4, [ip, lr]
   1e684:	str	r3, [sp, #8]
   1e688:	str	r2, [sp]
   1e68c:	ldr	r3, [r4]
   1e690:	str	r5, [sp, #12]
   1e694:	str	r1, [sp, #4]
   1e698:	str	r3, [sp, #28]
   1e69c:	beq	1e714 <processDataStream@@Base+0xb8>
   1e6a0:	ldr	r1, [pc, #144]	; 1e738 <processDataStream@@Base+0xdc>
   1e6a4:	mov	r0, #7
   1e6a8:	add	r1, pc, r1
   1e6ac:	bl	183d0 <logMessage@@Base>
   1e6b0:	ldr	r0, [pc, #132]	; 1e73c <processDataStream@@Base+0xe0>
   1e6b4:	mov	r1, #0
   1e6b8:	add	r0, pc, r0
   1e6bc:	bl	1eab4 <newQueue@@Base>
   1e6c0:	subs	r5, r0, #0
   1e6c4:	beq	1e724 <processDataStream@@Base+0xc8>
   1e6c8:	mov	r1, r6
   1e6cc:	bl	1eb5c <setQueueData@@Base>
   1e6d0:	ldr	r1, [pc, #104]	; 1e740 <processDataStream@@Base+0xe4>
   1e6d4:	mov	r0, r7
   1e6d8:	mov	r2, sp
   1e6dc:	add	r1, pc, r1
   1e6e0:	str	r5, [sp, #16]
   1e6e4:	bl	19238 <processLines@@Base>
   1e6e8:	adds	r5, r0, #0
   1e6ec:	ldr	r0, [sp, #16]
   1e6f0:	movne	r5, #1
   1e6f4:	bl	1eb2c <deallocateQueue@@Base>
   1e6f8:	ldr	r2, [sp, #28]
   1e6fc:	mov	r0, r5
   1e700:	ldr	r3, [r4]
   1e704:	cmp	r2, r3
   1e708:	bne	1e72c <processDataStream@@Base+0xd0>
   1e70c:	add	sp, sp, #36	; 0x24
   1e710:	pop	{r4, r5, r6, r7, pc}
   1e714:	bl	1d658 <isOctalDigit@@Base+0x1a4>
   1e718:	subs	r6, r0, #0
   1e71c:	ldrne	r2, [sp]
   1e720:	bne	1e6a0 <processDataStream@@Base+0x44>
   1e724:	mov	r5, #0
   1e728:	b	1e6f8 <processDataStream@@Base+0x9c>
   1e72c:	bl	14fbc <__stack_chk_fail@plt>
   1e730:	muleq	r1, r4, r9
   1e734:	andeq	r0, r0, r8, asr #4
   1e738:	ldrdeq	r8, [r0], -r0
   1e73c:			; <UNDEFINED> instruction: 0xffffee14
   1e740:			; <UNDEFINED> instruction: 0xfffff440

0001e744 <includeDataFile@@Base>:
   1e744:	ldr	r3, [pc, #320]	; 1e88c <includeDataFile@@Base+0x148>
   1e748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e74c:	add	fp, sp, #32
   1e750:	ldr	ip, [pc, #312]	; 1e890 <includeDataFile@@Base+0x14c>
   1e754:	sub	sp, sp, #36	; 0x24
   1e758:	add	r3, pc, r3
   1e75c:	mov	r4, r0
   1e760:	mov	r0, r1
   1e764:	ldr	r7, [r3, ip]
   1e768:	mov	r1, r2
   1e76c:	sub	r2, fp, #44	; 0x2c
   1e770:	ldr	r9, [r4]
   1e774:	ldr	r3, [r7]
   1e778:	str	r3, [fp, #-40]	; 0xffffffd8
   1e77c:	bl	24580 <makeUtf8FromWchars@@Base>
   1e780:	subs	r8, r0, #0
   1e784:	beq	1e87c <includeDataFile@@Base+0x138>
   1e788:	bl	185d4 <isAbsolutePath@@Base>
   1e78c:	subs	r5, r0, #0
   1e790:	movne	r5, #0
   1e794:	movne	lr, r5
   1e798:	beq	1e85c <includeDataFile@@Base+0x118>
   1e79c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1e7a0:	mov	r2, #1
   1e7a4:	mov	sl, sp
   1e7a8:	ldr	ip, [pc, #228]	; 1e894 <includeDataFile@@Base+0x150>
   1e7ac:	add	r1, r0, r2
   1e7b0:	mvn	r3, #0
   1e7b4:	add	r1, r1, lr
   1e7b8:	add	ip, pc, ip
   1e7bc:	add	lr, r1, #7
   1e7c0:	bic	lr, lr, #7
   1e7c4:	sub	sp, sp, lr
   1e7c8:	add	r6, sp, #24
   1e7cc:	str	r0, [sp, #12]
   1e7d0:	str	r5, [sp, #4]
   1e7d4:	mov	r0, r6
   1e7d8:	str	ip, [sp]
   1e7dc:	str	r9, [sp, #8]
   1e7e0:	str	r8, [sp, #16]
   1e7e4:	bl	150f4 <__snprintf_chk@plt>
   1e7e8:	ldr	r1, [pc, #168]	; 1e898 <includeDataFile@@Base+0x154>
   1e7ec:	mov	r0, r6
   1e7f0:	mov	r2, #0
   1e7f4:	add	r1, pc, r1
   1e7f8:	bl	18f5c <openDataFile@@Base>
   1e7fc:	subs	r5, r0, #0
   1e800:	moveq	r4, r5
   1e804:	beq	1e834 <includeDataFile@@Base+0xf0>
   1e808:	ldr	ip, [r4, #12]
   1e80c:	mov	r2, r6
   1e810:	ldr	r0, [r4, #16]
   1e814:	mov	r1, r5
   1e818:	ldr	r3, [r4, #8]
   1e81c:	str	ip, [sp]
   1e820:	bl	1e65c <processDataStream@@Base>
   1e824:	adds	r4, r0, #0
   1e828:	mov	r0, r5
   1e82c:	movne	r4, #1
   1e830:	bl	15124 <fclose@plt>
   1e834:	mov	r0, r8
   1e838:	mov	sp, sl
   1e83c:	bl	14d10 <free@plt>
   1e840:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e844:	mov	r0, r4
   1e848:	ldr	r3, [r7]
   1e84c:	cmp	r2, r3
   1e850:	bne	1e888 <includeDataFile@@Base+0x144>
   1e854:	sub	sp, fp, #32
   1e858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e85c:	mov	r0, r9
   1e860:	mov	r1, #47	; 0x2f
   1e864:	bl	1522c <strrchr@plt>
   1e868:	cmp	r0, #0
   1e86c:	rsbne	r5, r9, r0
   1e870:	addne	r5, r5, #1
   1e874:	mov	lr, r5
   1e878:	b	1e79c <includeDataFile@@Base+0x58>
   1e87c:	bl	184dc <logMallocError@@Base>
   1e880:	mov	r4, r8
   1e884:	b	1e840 <includeDataFile@@Base+0xfc>
   1e888:	bl	14fbc <__stack_chk_fail@plt>
   1e88c:	andeq	ip, r1, r0, lsr #17
   1e890:	andeq	r0, r0, r8, asr #4
   1e894:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   1e898:	andeq	r8, r0, r8, asr sp

0001e89c <processIncludeOperands@@Base>:
   1e89c:	ldr	ip, [pc, #124]	; 1e920 <processIncludeOperands@@Base+0x84>
   1e8a0:	mov	r2, #0
   1e8a4:	push	{r4, r5, r6, lr}
   1e8a8:	add	ip, pc, ip
   1e8ac:	ldr	lr, [pc, #112]	; 1e924 <processIncludeOperands@@Base+0x88>
   1e8b0:	sub	sp, sp, #1024	; 0x400
   1e8b4:	ldr	r3, [pc, #108]	; 1e928 <processIncludeOperands@@Base+0x8c>
   1e8b8:	sub	sp, sp, #8
   1e8bc:	add	r1, sp, #4
   1e8c0:	mov	r6, r0
   1e8c4:	ldr	r4, [ip, lr]
   1e8c8:	add	r3, pc, r3
   1e8cc:	add	r5, sp, #8
   1e8d0:	ldr	ip, [r4]
   1e8d4:	str	ip, [sp, #1028]	; 0x404
   1e8d8:	bl	1e34c <getDataString@@Base>
   1e8dc:	cmp	r0, #0
   1e8e0:	moveq	r0, #1
   1e8e4:	beq	1e900 <processIncludeOperands@@Base+0x64>
   1e8e8:	mov	r0, r6
   1e8ec:	mov	r1, r5
   1e8f0:	ldrb	r2, [sp, #4]
   1e8f4:	bl	1e744 <includeDataFile@@Base>
   1e8f8:	adds	r0, r0, #0
   1e8fc:	movne	r0, #1
   1e900:	ldr	r2, [sp, #1028]	; 0x404
   1e904:	ldr	r3, [r4]
   1e908:	cmp	r2, r3
   1e90c:	bne	1e91c <processIncludeOperands@@Base+0x80>
   1e910:	add	sp, sp, #1024	; 0x400
   1e914:	add	sp, sp, #8
   1e918:	pop	{r4, r5, r6, pc}
   1e91c:	bl	14fbc <__stack_chk_fail@plt>
   1e920:	andeq	ip, r1, r0, asr r7
   1e924:	andeq	r0, r0, r8, asr #4
   1e928:	ldrdeq	r8, [r0], -r4

0001e92c <processDataFile@@Base>:
   1e92c:	push	{r4, r5, r6, r7, lr}
   1e930:	mov	r7, r1
   1e934:	ldr	r1, [pc, #84]	; 1e990 <processDataFile@@Base+0x64>
   1e938:	sub	sp, sp, #12
   1e93c:	mov	r6, r2
   1e940:	mov	r2, #0
   1e944:	add	r1, pc, r1
   1e948:	mov	r5, r0
   1e94c:	bl	18f5c <openDataFile@@Base>
   1e950:	subs	r4, r0, #0
   1e954:	moveq	r5, r4
   1e958:	beq	1e984 <processDataFile@@Base+0x58>
   1e95c:	mov	r2, r5
   1e960:	str	r6, [sp]
   1e964:	mov	r3, r7
   1e968:	mov	r0, #0
   1e96c:	mov	r1, r4
   1e970:	bl	1e65c <processDataStream@@Base>
   1e974:	adds	r5, r0, #0
   1e978:	mov	r0, r4
   1e97c:	movne	r5, #1
   1e980:	bl	15124 <fclose@plt>
   1e984:	mov	r0, r5
   1e988:	add	sp, sp, #12
   1e98c:	pop	{r4, r5, r6, r7, pc}
   1e990:	andeq	r8, r0, r8, lsl #24
   1e994:	mov	r2, r1
   1e998:	mov	r1, r0
   1e99c:	push	{r3, lr}
   1e9a0:	ldr	r3, [r2]
   1e9a4:	ldr	r0, [r2, #4]
   1e9a8:	ldr	ip, [r3, #16]
   1e9ac:	ldr	r2, [r3, #8]
   1e9b0:	blx	ip
   1e9b4:	pop	{r3, pc}
   1e9b8:	subs	r3, r1, r0
   1e9bc:	rsbs	r0, r3, #0
   1e9c0:	adcs	r0, r0, r3
   1e9c4:	bx	lr

0001e9c8 <deleteElement@@Base>:
   1e9c8:	push	{r3, r4, r5, lr}
   1e9cc:	mov	r4, r0
   1e9d0:	ldr	r3, [r0]
   1e9d4:	ldr	r2, [r0, #8]
   1e9d8:	cmp	r0, r3
   1e9dc:	moveq	r3, #0
   1e9e0:	streq	r3, [r2]
   1e9e4:	beq	1ea08 <deleteElement@@Base+0x40>
   1e9e8:	ldr	r1, [r2]
   1e9ec:	cmp	r0, r1
   1e9f0:	streq	r3, [r2]
   1e9f4:	ldr	r2, [r0, #4]
   1e9f8:	ldreq	r3, [r0]
   1e9fc:	str	r2, [r3, #4]
   1ea00:	ldm	r0, {r2, r3}
   1ea04:	str	r2, [r3]
   1ea08:	ldr	r0, [r4, #12]
   1ea0c:	mov	r3, #0
   1ea10:	ldr	r5, [r4, #8]
   1ea14:	cmp	r0, r3
   1ea18:	str	r3, [r4]
   1ea1c:	str	r3, [r4, #4]
   1ea20:	beq	1ea40 <deleteElement@@Base+0x78>
   1ea24:	ldr	r3, [r5, #12]
   1ea28:	cmp	r3, #0
   1ea2c:	beq	1ea38 <deleteElement@@Base+0x70>
   1ea30:	ldr	r1, [r5, #8]
   1ea34:	blx	r3
   1ea38:	mov	r3, #0
   1ea3c:	str	r3, [r4, #12]
   1ea40:	ldr	r3, [pc, #36]	; 1ea6c <deleteElement@@Base+0xa4>
   1ea44:	mov	r2, #0
   1ea48:	str	r2, [r4, #8]
   1ea4c:	add	r3, pc, r3
   1ea50:	ldr	r1, [r5, #4]
   1ea54:	ldr	r2, [r3]
   1ea58:	sub	r1, r1, #1
   1ea5c:	str	r4, [r3]
   1ea60:	str	r1, [r5, #4]
   1ea64:	str	r2, [r4]
   1ea68:	pop	{r3, r4, r5, pc}
   1ea6c:	andeq	ip, r1, r8, ror #18

0001ea70 <dequeueItem@@Base>:
   1ea70:	push	{r4, lr}
   1ea74:	ldr	r3, [r0]
   1ea78:	cmp	r3, #0
   1ea7c:	beq	1ea9c <dequeueItem@@Base+0x2c>
   1ea80:	ldr	r4, [r3, #12]
   1ea84:	mov	r2, #0
   1ea88:	mov	r0, r3
   1ea8c:	str	r2, [r3, #12]
   1ea90:	bl	1e9c8 <deleteElement@@Base>
   1ea94:	mov	r0, r4
   1ea98:	pop	{r4, pc}
   1ea9c:	mov	r0, r3
   1eaa0:	pop	{r4, pc}

0001eaa4 <getElementQueue@@Base>:
   1eaa4:	ldr	r0, [r0, #8]
   1eaa8:	bx	lr

0001eaac <getElementItem@@Base>:
   1eaac:	ldr	r0, [r0, #12]
   1eab0:	bx	lr

0001eab4 <newQueue@@Base>:
   1eab4:	push	{r4, r5, lr}
   1eab8:	mov	r4, r0
   1eabc:	sub	sp, sp, #12
   1eac0:	mov	r0, #20
   1eac4:	mov	r5, r1
   1eac8:	bl	150dc <malloc@plt>
   1eacc:	cmp	r0, #0
   1ead0:	beq	1eaf4 <newQueue@@Base+0x40>
   1ead4:	mov	r3, #0
   1ead8:	str	r4, [r0, #12]
   1eadc:	str	r5, [r0, #16]
   1eae0:	str	r3, [r0]
   1eae4:	str	r3, [r0, #4]
   1eae8:	str	r3, [r0, #8]
   1eaec:	add	sp, sp, #12
   1eaf0:	pop	{r4, r5, pc}
   1eaf4:	str	r0, [sp, #4]
   1eaf8:	bl	184dc <logMallocError@@Base>
   1eafc:	ldr	r0, [sp, #4]
   1eb00:	b	1eaec <newQueue@@Base+0x38>

0001eb04 <deleteElements@@Base>:
   1eb04:	push	{r4, lr}
   1eb08:	mov	r4, r0
   1eb0c:	ldr	r0, [r0]
   1eb10:	cmp	r0, #0
   1eb14:	popeq	{r4, pc}
   1eb18:	bl	1e9c8 <deleteElement@@Base>
   1eb1c:	ldr	r0, [r4]
   1eb20:	cmp	r0, #0
   1eb24:	bne	1eb18 <deleteElements@@Base+0x14>
   1eb28:	pop	{r4, pc}

0001eb2c <deallocateQueue@@Base>:
   1eb2c:	push	{r4, lr}
   1eb30:	mov	r4, r0
   1eb34:	bl	1eb04 <deleteElements@@Base>
   1eb38:	mov	r0, r4
   1eb3c:	pop	{r4, lr}
   1eb40:	b	14d10 <free@plt>

0001eb44 <getQueueHead@@Base>:
   1eb44:	ldr	r0, [r0]
   1eb48:	bx	lr

0001eb4c <getQueueSize@@Base>:
   1eb4c:	ldr	r0, [r0, #4]
   1eb50:	bx	lr

0001eb54 <getQueueData@@Base>:
   1eb54:	ldr	r0, [r0, #8]
   1eb58:	bx	lr

0001eb5c <setQueueData@@Base>:
   1eb5c:	mov	r3, r0
   1eb60:	ldr	r0, [r0, #8]
   1eb64:	str	r1, [r3, #8]
   1eb68:	bx	lr

0001eb6c <findElement@@Base>:
   1eb6c:	push	{r3, r4, r5, r6, r7, lr}
   1eb70:	mov	r5, r0
   1eb74:	ldr	r4, [r0]
   1eb78:	mov	r7, r1
   1eb7c:	mov	r6, r2
   1eb80:	cmp	r4, #0
   1eb84:	bne	1eb9c <findElement@@Base+0x30>
   1eb88:	b	1ebb8 <findElement@@Base+0x4c>
   1eb8c:	ldr	r4, [r4]
   1eb90:	ldr	r3, [r5]
   1eb94:	cmp	r4, r3
   1eb98:	beq	1ebb8 <findElement@@Base+0x4c>
   1eb9c:	ldr	r0, [r4, #12]
   1eba0:	mov	r1, r6
   1eba4:	blx	r7
   1eba8:	cmp	r0, #0
   1ebac:	beq	1eb8c <findElement@@Base+0x20>
   1ebb0:	mov	r0, r4
   1ebb4:	pop	{r3, r4, r5, r6, r7, pc}
   1ebb8:	mov	r0, #0
   1ebbc:	pop	{r3, r4, r5, r6, r7, pc}
   1ebc0:	ldr	r3, [pc, #208]	; 1ec98 <findElement@@Base+0x12c>
   1ebc4:	ldr	r2, [pc, #208]	; 1ec9c <findElement@@Base+0x130>
   1ebc8:	add	r3, pc, r3
   1ebcc:	push	{r4, r5, r6, lr}
   1ebd0:	sub	sp, sp, #16
   1ebd4:	ldr	r5, [r0, #8]
   1ebd8:	mov	r4, r0
   1ebdc:	ldr	r6, [r3, r2]
   1ebe0:	ldr	r3, [r5]
   1ebe4:	ldr	r2, [r6]
   1ebe8:	cmp	r3, #0
   1ebec:	str	r2, [sp, #12]
   1ebf0:	beq	1ec88 <findElement@@Base+0x11c>
   1ebf4:	ldr	r2, [r5, #16]
   1ebf8:	cmp	r2, #0
   1ebfc:	beq	1ec6c <findElement@@Base+0x100>
   1ec00:	ldr	r3, [r0, #12]
   1ec04:	add	r2, sp, #4
   1ec08:	ldr	r1, [pc, #144]	; 1eca0 <findElement@@Base+0x134>
   1ec0c:	mov	r0, r5
   1ec10:	str	r5, [sp, #4]
   1ec14:	add	r1, pc, r1
   1ec18:	str	r3, [sp, #8]
   1ec1c:	bl	1eb6c <findElement@@Base>
   1ec20:	cmp	r0, #0
   1ec24:	ldreq	r3, [r5]
   1ec28:	beq	1ec6c <findElement@@Base+0x100>
   1ec2c:	ldr	r2, [r5]
   1ec30:	str	r0, [r4]
   1ec34:	ldr	r3, [r0, #4]
   1ec38:	cmp	r0, r2
   1ec3c:	str	r3, [r4, #4]
   1ec40:	str	r4, [r0, #4]
   1ec44:	ldr	r3, [r4, #4]
   1ec48:	str	r4, [r3]
   1ec4c:	bne	1ec54 <findElement@@Base+0xe8>
   1ec50:	str	r4, [r5]
   1ec54:	ldr	r2, [sp, #12]
   1ec58:	ldr	r3, [r6]
   1ec5c:	cmp	r2, r3
   1ec60:	bne	1ec94 <findElement@@Base+0x128>
   1ec64:	add	sp, sp, #16
   1ec68:	pop	{r4, r5, r6, pc}
   1ec6c:	str	r3, [r4]
   1ec70:	ldr	r2, [r3, #4]
   1ec74:	str	r2, [r4, #4]
   1ec78:	str	r4, [r3, #4]
   1ec7c:	ldr	r3, [r4, #4]
   1ec80:	str	r4, [r3]
   1ec84:	b	1ec54 <findElement@@Base+0xe8>
   1ec88:	str	r0, [r4]
   1ec8c:	str	r0, [r4, #4]
   1ec90:	b	1ec50 <findElement@@Base+0xe4>
   1ec94:	bl	14fbc <__stack_chk_fail@plt>
   1ec98:	andeq	ip, r1, r0, lsr r4
   1ec9c:	andeq	r0, r0, r8, asr #4
   1eca0:			; <UNDEFINED> instruction: 0xfffffd78

0001eca4 <enqueueItem@@Base>:
   1eca4:	ldr	r3, [pc, #124]	; 1ed28 <enqueueItem@@Base+0x84>
   1eca8:	push	{r4, r5, lr}
   1ecac:	add	r3, pc, r3
   1ecb0:	sub	sp, sp, #12
   1ecb4:	mov	r5, r0
   1ecb8:	ldr	r4, [r3]
   1ecbc:	cmp	r4, #0
   1ecc0:	beq	1ecfc <enqueueItem@@Base+0x58>
   1ecc4:	ldr	r2, [r4]
   1ecc8:	mov	r0, #0
   1eccc:	str	r0, [r4]
   1ecd0:	str	r2, [r3]
   1ecd4:	str	r5, [r4, #8]
   1ecd8:	mov	r0, r4
   1ecdc:	ldr	r3, [r5, #4]
   1ece0:	add	r3, r3, #1
   1ece4:	str	r3, [r5, #4]
   1ece8:	str	r1, [r4, #12]
   1ecec:	bl	1ebc0 <findElement@@Base+0x54>
   1ecf0:	mov	r0, r4
   1ecf4:	add	sp, sp, #12
   1ecf8:	pop	{r4, r5, pc}
   1ecfc:	mov	r0, #16
   1ed00:	str	r1, [sp, #4]
   1ed04:	bl	150dc <malloc@plt>
   1ed08:	ldr	r1, [sp, #4]
   1ed0c:	subs	r4, r0, #0
   1ed10:	movne	r3, #0
   1ed14:	strne	r3, [r4]
   1ed18:	strne	r3, [r4, #4]
   1ed1c:	bne	1ecd4 <enqueueItem@@Base+0x30>
   1ed20:	bl	184dc <logMallocError@@Base>
   1ed24:	b	1ecf0 <enqueueItem@@Base+0x4c>
   1ed28:	andeq	ip, r1, r8, lsl #14

0001ed2c <requeueElement@@Base>:
   1ed2c:	ldr	r2, [r0]
   1ed30:	mov	r3, r0
   1ed34:	ldr	r1, [r0, #8]
   1ed38:	cmp	r0, r2
   1ed3c:	moveq	r2, #0
   1ed40:	streq	r2, [r1]
   1ed44:	beq	1ed68 <requeueElement@@Base+0x3c>
   1ed48:	ldr	r0, [r1]
   1ed4c:	cmp	r3, r0
   1ed50:	streq	r2, [r1]
   1ed54:	ldr	r1, [r3, #4]
   1ed58:	ldreq	r2, [r3]
   1ed5c:	str	r1, [r2, #4]
   1ed60:	ldm	r3, {r1, r2}
   1ed64:	str	r1, [r2]
   1ed68:	mov	r2, #0
   1ed6c:	mov	r0, r3
   1ed70:	str	r2, [r3]
   1ed74:	str	r2, [r3, #4]
   1ed78:	b	1ebc0 <findElement@@Base+0x54>

0001ed7c <findItem@@Base>:
   1ed7c:	push	{r3, lr}
   1ed80:	bl	1eb6c <findElement@@Base>
   1ed84:	cmp	r0, #0
   1ed88:	ldrne	r0, [r0, #12]
   1ed8c:	pop	{r3, pc}

0001ed90 <processQueue@@Base>:
   1ed90:	push	{r4, r5, r6, r7, r8, lr}
   1ed94:	mov	r6, r0
   1ed98:	ldr	r5, [r0]
   1ed9c:	mov	r7, r1
   1eda0:	mov	r8, r2
   1eda4:	cmp	r5, #0
   1eda8:	movne	r3, r5
   1edac:	bne	1edd4 <processQueue@@Base+0x44>
   1edb0:	b	1edf8 <processQueue@@Base+0x68>
   1edb4:	ldr	r0, [r5, #12]
   1edb8:	blx	r7
   1edbc:	cmp	r0, #0
   1edc0:	bne	1ee00 <processQueue@@Base+0x70>
   1edc4:	cmp	r4, #0
   1edc8:	mov	r5, r4
   1edcc:	beq	1edf8 <processQueue@@Base+0x68>
   1edd0:	ldr	r3, [r6]
   1edd4:	ldr	r4, [r5]
   1edd8:	mov	r1, r8
   1eddc:	cmp	r3, r4
   1ede0:	bne	1edb4 <processQueue@@Base+0x24>
   1ede4:	mov	r1, r8
   1ede8:	ldr	r0, [r5, #12]
   1edec:	blx	r7
   1edf0:	cmp	r0, #0
   1edf4:	bne	1ee00 <processQueue@@Base+0x70>
   1edf8:	mov	r0, #0
   1edfc:	pop	{r4, r5, r6, r7, r8, pc}
   1ee00:	mov	r0, r5
   1ee04:	pop	{r4, r5, r6, r7, r8, pc}

0001ee08 <deleteItem@@Base>:
   1ee08:	mov	r2, r1
   1ee0c:	ldr	r1, [pc, #44]	; 1ee40 <deleteItem@@Base+0x38>
   1ee10:	push	{r3, lr}
   1ee14:	add	r1, pc, r1
   1ee18:	bl	1eb6c <findElement@@Base>
   1ee1c:	subs	r3, r0, #0
   1ee20:	beq	1ee38 <deleteItem@@Base+0x30>
   1ee24:	mov	r2, #0
   1ee28:	str	r2, [r3, #12]
   1ee2c:	bl	1e9c8 <deleteElement@@Base>
   1ee30:	mov	r0, #1
   1ee34:	pop	{r3, pc}
   1ee38:	mov	r0, r3
   1ee3c:	pop	{r3, pc}
   1ee40:			; <UNDEFINED> instruction: 0xfffffb9c

0001ee44 <resetDataArea@@Base>:
   1ee44:	mov	r3, #0
   1ee48:	str	r3, [r0]
   1ee4c:	str	r3, [r0, #4]
   1ee50:	str	r3, [r0, #8]
   1ee54:	bx	lr

0001ee58 <newDataArea@@Base>:
   1ee58:	push	{r4, lr}
   1ee5c:	mov	r0, #12
   1ee60:	bl	150dc <malloc@plt>
   1ee64:	subs	r4, r0, #0
   1ee68:	beq	1ee70 <newDataArea@@Base+0x18>
   1ee6c:	bl	1ee44 <resetDataArea@@Base>
   1ee70:	mov	r0, r4
   1ee74:	pop	{r4, pc}

0001ee78 <destroyDataArea@@Base>:
   1ee78:	push	{r4, lr}
   1ee7c:	mov	r4, r0
   1ee80:	ldr	r0, [r0]
   1ee84:	cmp	r0, #0
   1ee88:	beq	1ee90 <destroyDataArea@@Base+0x18>
   1ee8c:	bl	14d10 <free@plt>
   1ee90:	mov	r0, r4
   1ee94:	pop	{r4, lr}
   1ee98:	b	14d10 <free@plt>

0001ee9c <allocateDataItem@@Base>:
   1ee9c:	push	{r4, r5, r6, r7, r8, lr}
   1eea0:	mov	r4, r0
   1eea4:	ldr	r0, [r0, #8]
   1eea8:	mov	r7, r1
   1eeac:	mov	r1, r3
   1eeb0:	mov	r5, r3
   1eeb4:	sub	r0, r0, #1
   1eeb8:	mov	r6, r2
   1eebc:	add	r0, r0, r3
   1eec0:	bl	2569c <handleBestCharacter@@Base+0x60>
   1eec4:	ldr	r3, [r4, #4]
   1eec8:	mul	r0, r5, r0
   1eecc:	add	r6, r0, r6
   1eed0:	cmp	r6, r3
   1eed4:	str	r0, [r4, #8]
   1eed8:	bhi	1eef4 <allocateDataItem@@Base+0x58>
   1eedc:	cmp	r7, #0
   1eee0:	mov	r0, #1
   1eee4:	ldrne	r3, [r4, #8]
   1eee8:	strne	r3, [r7]
   1eeec:	str	r6, [r4, #8]
   1eef0:	pop	{r4, r5, r6, r7, r8, pc}
   1eef4:	mvn	r5, r6, lsr #12
   1eef8:	ldr	r0, [r4]
   1eefc:	mvn	r5, r5, lsl #12
   1ef00:	mov	r1, r5
   1ef04:	bl	14f2c <realloc@plt>
   1ef08:	subs	r8, r0, #0
   1ef0c:	beq	1ef30 <allocateDataItem@@Base+0x94>
   1ef10:	ldr	r2, [r4, #4]
   1ef14:	mov	r1, #0
   1ef18:	add	r0, r8, r2
   1ef1c:	rsb	r2, r2, r5
   1ef20:	bl	14e0c <memset@plt>
   1ef24:	str	r8, [r4]
   1ef28:	str	r5, [r4, #4]
   1ef2c:	b	1eedc <allocateDataItem@@Base+0x40>
   1ef30:	ldr	r1, [pc, #16]	; 1ef48 <allocateDataItem@@Base+0xac>
   1ef34:	mov	r0, #3
   1ef38:	add	r1, pc, r1
   1ef3c:	bl	183d0 <logMessage@@Base>
   1ef40:	mov	r0, r8
   1ef44:	pop	{r4, r5, r6, r7, r8, pc}
   1ef48:	andeq	r8, r0, r8, ror r5

0001ef4c <getDataItem@@Base>:
   1ef4c:	ldr	r0, [r0]
   1ef50:	add	r0, r0, r1
   1ef54:	bx	lr

0001ef58 <getDataSize@@Base>:
   1ef58:	ldr	r0, [r0, #8]
   1ef5c:	bx	lr

0001ef60 <saveDataItem@@Base>:
   1ef60:	push	{r3, r4, r5, r6, r7, lr}
   1ef64:	mov	r4, r3
   1ef68:	mov	r5, r2
   1ef6c:	ldr	r3, [sp, #24]
   1ef70:	mov	r2, r4
   1ef74:	mov	r7, r0
   1ef78:	mov	r6, r1
   1ef7c:	bl	1ee9c <allocateDataItem@@Base>
   1ef80:	cmp	r0, #0
   1ef84:	popeq	{r3, r4, r5, r6, r7, pc}
   1ef88:	ldr	r1, [r6]
   1ef8c:	mov	r0, r7
   1ef90:	bl	1ef4c <getDataItem@@Base>
   1ef94:	mov	r1, r5
   1ef98:	mov	r2, r4
   1ef9c:	bl	150d0 <memcpy@plt>
   1efa0:	mov	r0, #1
   1efa4:	pop	{r3, r4, r5, r6, r7, pc}

0001efa8 <getTextTableItem@@Base>:
   1efa8:	ldr	r0, [r0]
   1efac:	b	1ef4c <getDataItem@@Base>

0001efb0 <getTextTableHeader@@Base>:
   1efb0:	mov	r1, #0
   1efb4:	b	1efa8 <getTextTableItem@@Base>
   1efb8:	ldr	r3, [pc, #412]	; 1f15c <getTextTableHeader@@Base+0x1ac>
   1efbc:	push	{r4, r5, r6, r7, r8, r9, lr}
   1efc0:	mov	r7, r1
   1efc4:	ldr	r1, [pc, #404]	; 1f160 <getTextTableHeader@@Base+0x1b0>
   1efc8:	add	r3, pc, r3
   1efcc:	adds	r6, r2, #0
   1efd0:	sub	sp, sp, #12
   1efd4:	mov	r4, r0
   1efd8:	ubfx	r8, r7, #24, #7
   1efdc:	ldr	r5, [r3, r1]
   1efe0:	movne	r6, #1
   1efe4:	ldr	r3, [r5]
   1efe8:	str	r3, [sp, #4]
   1efec:	bl	1efb0 <getTextTableHeader@@Base>
   1eff0:	ldr	r3, [r0, r8, lsl #2]
   1eff4:	cmp	r3, #0
   1eff8:	movne	r2, #0
   1effc:	andeq	r2, r6, #1
   1f000:	cmp	r2, #0
   1f004:	str	r3, [sp]
   1f008:	moveq	r8, r3
   1f00c:	bne	1f0b4 <getTextTableHeader@@Base+0x104>
   1f010:	cmp	r8, #0
   1f014:	bne	1f034 <getTextTableHeader@@Base+0x84>
   1f018:	mov	r0, #0
   1f01c:	ldr	r2, [sp, #4]
   1f020:	ldr	r3, [r5]
   1f024:	cmp	r2, r3
   1f028:	bne	1f158 <getTextTableHeader@@Base+0x1a8>
   1f02c:	add	sp, sp, #12
   1f030:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1f034:	mov	r1, r8
   1f038:	ldr	r0, [r4]
   1f03c:	bl	1ef4c <getDataItem@@Base>
   1f040:	ubfx	r9, r7, #16, #8
   1f044:	ldr	r1, [r0, r9, lsl #2]
   1f048:	cmp	r1, #0
   1f04c:	movne	r3, #0
   1f050:	andeq	r3, r6, #1
   1f054:	cmp	r3, #0
   1f058:	str	r1, [sp]
   1f05c:	moveq	r8, r1
   1f060:	bne	1f120 <getTextTableHeader@@Base+0x170>
   1f064:	cmp	r8, #0
   1f068:	beq	1f018 <getTextTableHeader@@Base+0x68>
   1f06c:	mov	r1, r8
   1f070:	ldr	r0, [r4]
   1f074:	bl	1ef4c <getDataItem@@Base>
   1f078:	ubfx	r7, r7, #8, #8
   1f07c:	ldr	r0, [r0, r7, lsl #2]
   1f080:	cmp	r0, #0
   1f084:	movne	r6, #0
   1f088:	andeq	r6, r6, #1
   1f08c:	cmp	r6, #0
   1f090:	str	r0, [sp]
   1f094:	moveq	r1, r0
   1f098:	bne	1f0e8 <getTextTableHeader@@Base+0x138>
   1f09c:	cmp	r1, #0
   1f0a0:	moveq	r0, r1
   1f0a4:	beq	1f01c <getTextTableHeader@@Base+0x6c>
   1f0a8:	ldr	r0, [r4]
   1f0ac:	bl	1ef4c <getDataItem@@Base>
   1f0b0:	b	1f01c <getTextTableHeader@@Base+0x6c>
   1f0b4:	ldr	r0, [r4]
   1f0b8:	mov	r1, sp
   1f0bc:	mov	r2, #1024	; 0x400
   1f0c0:	mov	r3, #4
   1f0c4:	bl	1ee9c <allocateDataItem@@Base>
   1f0c8:	cmp	r0, #0
   1f0cc:	beq	1f018 <getTextTableHeader@@Base+0x68>
   1f0d0:	mov	r0, r4
   1f0d4:	bl	1efb0 <getTextTableHeader@@Base>
   1f0d8:	ldr	r3, [sp]
   1f0dc:	str	r3, [r0, r8, lsl #2]
   1f0e0:	ldr	r8, [sp]
   1f0e4:	b	1f010 <getTextTableHeader@@Base+0x60>
   1f0e8:	ldr	r0, [r4]
   1f0ec:	mov	r1, sp
   1f0f0:	mov	r2, #288	; 0x120
   1f0f4:	mov	r3, #1
   1f0f8:	bl	1ee9c <allocateDataItem@@Base>
   1f0fc:	cmp	r0, #0
   1f100:	beq	1f01c <getTextTableHeader@@Base+0x6c>
   1f104:	mov	r1, r8
   1f108:	ldr	r0, [r4]
   1f10c:	bl	1ef4c <getDataItem@@Base>
   1f110:	ldr	r3, [sp]
   1f114:	str	r3, [r0, r7, lsl #2]
   1f118:	ldr	r1, [sp]
   1f11c:	b	1f09c <getTextTableHeader@@Base+0xec>
   1f120:	ldr	r0, [r4]
   1f124:	mov	r1, sp
   1f128:	mov	r2, #1024	; 0x400
   1f12c:	mov	r3, #4
   1f130:	bl	1ee9c <allocateDataItem@@Base>
   1f134:	cmp	r0, #0
   1f138:	beq	1f018 <getTextTableHeader@@Base+0x68>
   1f13c:	mov	r1, r8
   1f140:	ldr	r0, [r4]
   1f144:	bl	1ef4c <getDataItem@@Base>
   1f148:	ldr	r3, [sp]
   1f14c:	str	r3, [r0, r9, lsl #2]
   1f150:	ldr	r8, [sp]
   1f154:	b	1f064 <getTextTableHeader@@Base+0xb4>
   1f158:	bl	14fbc <__stack_chk_fail@plt>
   1f15c:	andeq	ip, r1, r0, lsr r0
   1f160:	andeq	r0, r0, r8, asr #4
   1f164:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f168:	mov	r8, r1
   1f16c:	mov	r9, r2
   1f170:	bl	1efb0 <getTextTableHeader@@Base>
   1f174:	and	r1, r8, #7
   1f178:	mov	r6, #1
   1f17c:	mov	r7, #0
   1f180:	mov	r5, #0
   1f184:	and	r7, r7, r5
   1f188:	add	r3, r0, r8, lsr #3
   1f18c:	ldrb	r2, [r3, #1536]	; 0x600
   1f190:	lsr	r4, r2, r1
   1f194:	and	r6, r6, r4
   1f198:	orrs	ip, r6, r7
   1f19c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1f1a0:	add	r8, r0, r8, lsl #2
   1f1a4:	ldr	r0, [r8, #512]	; 0x200
   1f1a8:	cmp	r0, r9
   1f1ac:	streq	r5, [r8, #512]	; 0x200
   1f1b0:	moveq	r0, #1
   1f1b4:	biceq	r2, r2, r0, lsl r1
   1f1b8:	strbeq	r2, [r3, #1536]	; 0x600
   1f1bc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

0001f1c0 <getUnicodeCellEntry@@Base>:
   1f1c0:	push	{r3, r4, r5, r6, r7, lr}
   1f1c4:	mov	r2, #0
   1f1c8:	mov	r4, r1
   1f1cc:	bl	1efb8 <getTextTableHeader@@Base+0x8>
   1f1d0:	cmp	r0, #0
   1f1d4:	popeq	{r3, r4, r5, r6, r7, pc}
   1f1d8:	uxtb	r1, r4
   1f1dc:	mov	r3, #0
   1f1e0:	and	ip, r1, #7
   1f1e4:	mov	r4, #1
   1f1e8:	add	r6, r0, r1, lsr #3
   1f1ec:	mov	r5, #0
   1f1f0:	and	r5, r5, r3
   1f1f4:	mov	r7, #0
   1f1f8:	ldrb	r6, [r6, #256]	; 0x100
   1f1fc:	lsr	r2, r6, ip
   1f200:	and	r4, r4, r2
   1f204:	orrs	ip, r4, r5
   1f208:	addne	r0, r0, r1
   1f20c:	moveq	r0, r3
   1f210:	pop	{r3, r4, r5, r6, r7, pc}

0001f214 <setTextTableGlyph@@Base>:
   1f214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f218:	sub	sp, sp, #12
   1f21c:	mov	r9, r2
   1f220:	mov	r2, #1
   1f224:	str	r0, [sp, #4]
   1f228:	mov	fp, r1
   1f22c:	bl	1efb8 <getTextTableHeader@@Base+0x8>
   1f230:	subs	sl, r0, #0
   1f234:	beq	1f2a0 <setTextTableGlyph@@Base+0x8c>
   1f238:	uxtb	r8, fp
   1f23c:	mov	r6, #1
   1f240:	and	r1, r8, #7
   1f244:	mov	r7, #0
   1f248:	add	r3, sl, r8, lsr #3
   1f24c:	mov	r5, #0
   1f250:	and	r5, r5, r7
   1f254:	ldrb	r2, [r3, #256]	; 0x100
   1f258:	lsr	r4, r2, r1
   1f25c:	and	r4, r4, r6
   1f260:	orrs	r0, r4, r5
   1f264:	beq	1f290 <setTextTableGlyph@@Base+0x7c>
   1f268:	ldrb	r1, [sl, r8]
   1f26c:	cmp	r1, r9
   1f270:	beq	1f280 <setTextTableGlyph@@Base+0x6c>
   1f274:	ldr	r0, [sp, #4]
   1f278:	mov	r2, fp
   1f27c:	bl	1f164 <getTextTableHeader@@Base+0x1b4>
   1f280:	mov	r0, #1
   1f284:	strb	r9, [sl, r8]
   1f288:	add	sp, sp, #12
   1f28c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f290:	mov	r0, #1
   1f294:	orr	r2, r2, r0, lsl r1
   1f298:	strb	r2, [r3, #256]	; 0x100
   1f29c:	b	1f280 <setTextTableGlyph@@Base+0x6c>
   1f2a0:	mov	r0, sl
   1f2a4:	add	sp, sp, #12
   1f2a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f2ac <setTextTableCharacter@@Base>:
   1f2ac:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1f2b0:	mov	r4, r0
   1f2b4:	mov	r9, r1
   1f2b8:	mov	r8, r2
   1f2bc:	bl	1f214 <setTextTableGlyph@@Base>
   1f2c0:	subs	r3, r0, #0
   1f2c4:	beq	1f310 <setTextTableCharacter@@Base+0x64>
   1f2c8:	mov	r0, r4
   1f2cc:	mov	r6, #1
   1f2d0:	bl	1efb0 <getTextTableHeader@@Base>
   1f2d4:	and	ip, r8, #7
   1f2d8:	mov	r7, #0
   1f2dc:	mov	r5, #0
   1f2e0:	and	r5, r5, r7
   1f2e4:	add	r2, r0, r8, lsr #3
   1f2e8:	ldrb	r1, [r2, #1536]	; 0x600
   1f2ec:	lsr	r4, r1, ip
   1f2f0:	and	r4, r4, r6
   1f2f4:	orrs	r3, r4, r5
   1f2f8:	addeq	r8, r8, #128	; 0x80
   1f2fc:	moveq	r3, #1
   1f300:	movne	r3, #1
   1f304:	orreq	r1, r1, r3, lsl ip
   1f308:	streq	r9, [r0, r8, lsl #2]
   1f30c:	strbeq	r1, [r2, #1536]	; 0x600
   1f310:	mov	r0, r3
   1f314:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}

0001f318 <unsetTextTableCharacter@@Base>:
   1f318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f31c:	sub	sp, sp, #12
   1f320:	mov	r2, #0
   1f324:	mov	fp, r1
   1f328:	str	r0, [sp, #4]
   1f32c:	bl	1efb8 <getTextTableHeader@@Base+0x8>
   1f330:	subs	r9, r0, #0
   1f334:	beq	1f394 <unsetTextTableCharacter@@Base+0x7c>
   1f338:	uxtb	r8, fp
   1f33c:	mov	r0, #1
   1f340:	and	r3, r8, #7
   1f344:	mov	r1, #0
   1f348:	add	sl, r9, r8, lsr #3
   1f34c:	mov	r5, #0
   1f350:	and	r1, r1, r5
   1f354:	ldrb	r6, [sl, #256]	; 0x100
   1f358:	lsr	r4, r6, r3
   1f35c:	and	r0, r0, r4
   1f360:	orrs	r2, r0, r1
   1f364:	beq	1f394 <unsetTextTableCharacter@@Base+0x7c>
   1f368:	ldrb	r1, [r9, r8]
   1f36c:	mov	r2, fp
   1f370:	ldr	r0, [sp, #4]
   1f374:	str	r3, [sp]
   1f378:	bl	1f164 <getTextTableHeader@@Base+0x1b4>
   1f37c:	strb	r5, [r9, r8]
   1f380:	mov	r1, #1
   1f384:	ldr	r3, [sp]
   1f388:	ldrb	r2, [sl, #256]	; 0x100
   1f38c:	bic	r3, r2, r1, lsl r3
   1f390:	strb	r3, [sl, #256]	; 0x100
   1f394:	add	sp, sp, #12
   1f398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001f39c <setTextTableByte@@Base>:
   1f39c:	push	{r3, r4, r5, lr}
   1f3a0:	mov	r4, r0
   1f3a4:	mov	r0, r1
   1f3a8:	mov	r5, r2
   1f3ac:	bl	248dc <convertCharToWchar@@Base>
   1f3b0:	cmn	r0, #1
   1f3b4:	mov	r1, r0
   1f3b8:	beq	1f3d4 <setTextTableByte@@Base+0x38>
   1f3bc:	mov	r0, r4
   1f3c0:	mov	r2, r5
   1f3c4:	bl	1f2ac <setTextTableCharacter@@Base>
   1f3c8:	adds	r0, r0, #0
   1f3cc:	movne	r0, #1
   1f3d0:	pop	{r3, r4, r5, pc}
   1f3d4:	mov	r0, #1
   1f3d8:	pop	{r3, r4, r5, pc}

0001f3dc <newTextTableData@@Base>:
   1f3dc:	push	{r3, r4, r5, lr}
   1f3e0:	mov	r0, #4
   1f3e4:	bl	150dc <malloc@plt>
   1f3e8:	subs	r4, r0, #0
   1f3ec:	beq	1f438 <newTextTableData@@Base+0x5c>
   1f3f0:	mov	r5, #0
   1f3f4:	str	r5, [r4]
   1f3f8:	bl	1ee58 <newDataArea@@Base>
   1f3fc:	cmp	r0, r5
   1f400:	str	r0, [r4]
   1f404:	beq	1f430 <newTextTableData@@Base+0x54>
   1f408:	mov	r1, r5
   1f40c:	mov	r2, #1568	; 0x620
   1f410:	mov	r3, #4
   1f414:	bl	1ee9c <allocateDataItem@@Base>
   1f418:	cmp	r0, r5
   1f41c:	beq	1f428 <newTextTableData@@Base+0x4c>
   1f420:	mov	r0, r4
   1f424:	pop	{r3, r4, r5, pc}
   1f428:	ldr	r0, [r4]
   1f42c:	bl	1ee78 <destroyDataArea@@Base>
   1f430:	mov	r0, r4
   1f434:	bl	14d10 <free@plt>
   1f438:	mov	r0, #0
   1f43c:	pop	{r3, r4, r5, pc}

0001f440 <destroyTextTableData@@Base>:
   1f440:	push	{r4, lr}
   1f444:	mov	r4, r0
   1f448:	ldr	r0, [r0]
   1f44c:	bl	1ee78 <destroyDataArea@@Base>
   1f450:	mov	r0, r4
   1f454:	pop	{r4, lr}
   1f458:	b	14d10 <free@plt>

0001f45c <processTextTableLines@@Base>:
   1f45c:	push	{r4, r5, r6, r7, lr}
   1f460:	mov	r7, r0
   1f464:	mov	r6, r1
   1f468:	ldr	r0, [pc, #108]	; 1f4dc <processTextTableLines@@Base+0x80>
   1f46c:	ldr	r1, [pc, #108]	; 1f4e0 <processTextTableLines@@Base+0x84>
   1f470:	sub	sp, sp, #12
   1f474:	add	r0, pc, r0
   1f478:	mov	r5, r2
   1f47c:	add	r1, pc, r1
   1f480:	bl	1da6c <setGlobalTableVariables@@Base>
   1f484:	cmp	r0, #0
   1f488:	beq	1f4c4 <processTextTableLines@@Base+0x68>
   1f48c:	bl	1f3dc <newTextTableData@@Base>
   1f490:	subs	r4, r0, #0
   1f494:	beq	1f4c4 <processTextTableLines@@Base+0x68>
   1f498:	mov	r3, r5
   1f49c:	str	r4, [sp]
   1f4a0:	mov	r1, r7
   1f4a4:	mov	r2, r6
   1f4a8:	mov	r0, #0
   1f4ac:	bl	1e65c <processDataStream@@Base>
   1f4b0:	subs	r5, r0, #0
   1f4b4:	mov	r0, r4
   1f4b8:	beq	1f4d0 <processTextTableLines@@Base+0x74>
   1f4bc:	add	sp, sp, #12
   1f4c0:	pop	{r4, r5, r6, r7, pc}
   1f4c4:	mov	r0, #0
   1f4c8:	add	sp, sp, #12
   1f4cc:	pop	{r4, r5, r6, r7, pc}
   1f4d0:	bl	1f440 <destroyTextTableData@@Base>
   1f4d4:	mov	r0, r5
   1f4d8:	b	1f4bc <processTextTableLines@@Base+0x60>
   1f4dc:	andeq	r8, r0, r0, rrx
   1f4e0:	andeq	r8, r0, r0, rrx

0001f4e4 <makeTextTable@@Base>:
   1f4e4:	push	{r3, r4, r5, lr}
   1f4e8:	mov	r5, r0
   1f4ec:	mov	r0, #8
   1f4f0:	bl	150dc <malloc@plt>
   1f4f4:	subs	r4, r0, #0
   1f4f8:	beq	1f51c <makeTextTable@@Base+0x38>
   1f4fc:	mov	r0, r5
   1f500:	bl	1efb0 <getTextTableHeader@@Base>
   1f504:	str	r0, [r4]
   1f508:	ldr	r0, [r5]
   1f50c:	bl	1ef58 <getDataSize@@Base>
   1f510:	str	r0, [r4, #4]
   1f514:	ldr	r0, [r5]
   1f518:	bl	1ee44 <resetDataArea@@Base>
   1f51c:	mov	r0, r4
   1f520:	pop	{r3, r4, r5, pc}

0001f524 <destroyTextTable@@Base>:
   1f524:	push	{r4, lr}
   1f528:	mov	r4, r0
   1f52c:	ldr	r3, [r0, #4]
   1f530:	cmp	r3, #0
   1f534:	popeq	{r4, pc}
   1f538:	ldr	r0, [r0]
   1f53c:	bl	14d10 <free@plt>
   1f540:	mov	r0, r4
   1f544:	pop	{r4, lr}
   1f548:	b	14d10 <free@plt>

0001f54c <ensureTextTableExtension@@Base>:
   1f54c:	ldr	r1, [pc, #4]	; 1f558 <ensureTextTableExtension@@Base+0xc>
   1f550:	add	r1, pc, r1
   1f554:	b	18838 <ensureFileExtension@@Base>
   1f558:	andeq	r7, r0, r4, lsl #31

0001f55c <makeTextTablePath@@Base>:
   1f55c:	ldr	r2, [pc, #4]	; 1f568 <makeTextTablePath@@Base+0xc>
   1f560:	add	r2, pc, r2
   1f564:	b	188d8 <makeFilePath@@Base>
   1f568:	andeq	r7, r0, r4, ror pc
   1f56c:	push	{r3, r4, r5, lr}
   1f570:	bl	1f55c <makeTextTablePath@@Base>
   1f574:	subs	r4, r0, #0
   1f578:	moveq	r5, r4
   1f57c:	beq	1f5ac <makeTextTablePath@@Base+0x50>
   1f580:	ldr	r1, [pc, #44]	; 1f5b4 <makeTextTablePath@@Base+0x58>
   1f584:	mov	r0, #7
   1f588:	mov	r2, r4
   1f58c:	add	r1, pc, r1
   1f590:	bl	183d0 <logMessage@@Base>
   1f594:	mov	r0, r4
   1f598:	bl	18934 <testFilePath@@Base>
   1f59c:	adds	r5, r0, #0
   1f5a0:	mov	r0, r4
   1f5a4:	movne	r5, #1
   1f5a8:	bl	14d10 <free@plt>
   1f5ac:	mov	r0, r5
   1f5b0:	pop	{r3, r4, r5, pc}
   1f5b4:	andeq	r7, r0, r8, asr pc

0001f5b8 <selectTextTable@@Base>:
   1f5b8:	ldr	r3, [pc, #368]	; 1f730 <selectTextTable@@Base+0x178>
   1f5bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f5c0:	add	fp, sp, #28
   1f5c4:	ldr	r2, [pc, #360]	; 1f734 <selectTextTable@@Base+0x17c>
   1f5c8:	sub	sp, sp, #8
   1f5cc:	add	r3, pc, r3
   1f5d0:	mov	r8, r0
   1f5d4:	mov	r0, #0
   1f5d8:	ldr	r6, [r3, r2]
   1f5dc:	mov	r1, r0
   1f5e0:	ldr	r3, [r6]
   1f5e4:	str	r3, [fp, #-32]	; 0xffffffe0
   1f5e8:	bl	1507c <setlocale@plt>
   1f5ec:	subs	r9, r0, #0
   1f5f0:	beq	1f71c <selectTextTable@@Base+0x164>
   1f5f4:	bl	150e8 <strlen@plt>
   1f5f8:	ldrb	r4, [r9]
   1f5fc:	mov	r7, sp
   1f600:	cmp	r4, #0
   1f604:	add	r0, r0, #8
   1f608:	bic	r3, r0, #7
   1f60c:	sub	sp, sp, r3
   1f610:	mov	r5, sp
   1f614:	beq	1f654 <selectTextTable@@Base+0x9c>
   1f618:	cmp	r4, #46	; 0x2e
   1f61c:	beq	1f714 <selectTextTable@@Base+0x15c>
   1f620:	cmp	r4, #64	; 0x40
   1f624:	beq	1f714 <selectTextTable@@Base+0x15c>
   1f628:	mov	r2, r9
   1f62c:	mov	r4, #0
   1f630:	b	1f644 <selectTextTable@@Base+0x8c>
   1f634:	cmp	r3, #46	; 0x2e
   1f638:	beq	1f654 <selectTextTable@@Base+0x9c>
   1f63c:	cmp	r3, #64	; 0x40
   1f640:	beq	1f654 <selectTextTable@@Base+0x9c>
   1f644:	ldrb	r3, [r2, #1]!
   1f648:	add	r4, r4, #1
   1f64c:	cmp	r3, #0
   1f650:	bne	1f634 <selectTextTable@@Base+0x7c>
   1f654:	mov	r1, r9
   1f658:	mov	r0, r5
   1f65c:	mov	r2, r4
   1f660:	bl	151e4 <strncpy@plt>
   1f664:	mov	r3, #0
   1f668:	strb	r3, [r5, r4]
   1f66c:	ldrb	r3, [r5]
   1f670:	cmp	r3, #67	; 0x43
   1f674:	bne	1f694 <selectTextTable@@Base+0xdc>
   1f678:	ldrb	r3, [r5, #1]
   1f67c:	cmp	r3, #0
   1f680:	bne	1f694 <selectTextTable@@Base+0xdc>
   1f684:	strb	r3, [r5]
   1f688:	mov	r0, #0
   1f68c:	mov	sp, r7
   1f690:	b	1f6c8 <selectTextTable@@Base+0x110>
   1f694:	mov	r0, r8
   1f698:	mov	r1, r5
   1f69c:	bl	1f56c <makeTextTablePath@@Base+0x10>
   1f6a0:	subs	r4, r0, #0
   1f6a4:	beq	1f6e0 <selectTextTable@@Base+0x128>
   1f6a8:	ldrb	r3, [r5]
   1f6ac:	cmp	r3, #0
   1f6b0:	beq	1f688 <selectTextTable@@Base+0xd0>
   1f6b4:	mov	r0, r5
   1f6b8:	bl	14e54 <__strdup@plt>
   1f6bc:	cmp	r0, #0
   1f6c0:	beq	1f724 <selectTextTable@@Base+0x16c>
   1f6c4:	mov	sp, r7
   1f6c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f6cc:	ldr	r3, [r6]
   1f6d0:	cmp	r2, r3
   1f6d4:	bne	1f72c <selectTextTable@@Base+0x174>
   1f6d8:	sub	sp, fp, #28
   1f6dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1f6e0:	mov	r0, r5
   1f6e4:	mov	r1, #95	; 0x5f
   1f6e8:	bl	152a4 <strchr@plt>
   1f6ec:	cmp	r0, #0
   1f6f0:	beq	1f6a8 <selectTextTable@@Base+0xf0>
   1f6f4:	strb	r4, [r0]
   1f6f8:	mov	r1, r5
   1f6fc:	mov	r0, r8
   1f700:	bl	1f56c <makeTextTablePath@@Base+0x10>
   1f704:	cmp	r0, #0
   1f708:	strbeq	r0, [r5]
   1f70c:	beq	1f688 <selectTextTable@@Base+0xd0>
   1f710:	b	1f6a8 <selectTextTable@@Base+0xf0>
   1f714:	mov	r4, #0
   1f718:	b	1f654 <selectTextTable@@Base+0x9c>
   1f71c:	mov	r0, r9
   1f720:	b	1f6c8 <selectTextTable@@Base+0x110>
   1f724:	bl	184dc <logMallocError@@Base>
   1f728:	b	1f688 <selectTextTable@@Base+0xd0>
   1f72c:	bl	14fbc <__stack_chk_fail@plt>
   1f730:	andeq	fp, r1, ip, lsr #20
   1f734:	andeq	r0, r0, r8, asr #4
   1f738:	mov	r3, r1
   1f73c:	ldr	r2, [pc, #12]	; 1f750 <selectTextTable@@Base+0x198>
   1f740:	ldr	r1, [pc, #12]	; 1f754 <selectTextTable@@Base+0x19c>
   1f744:	add	r2, pc, r2
   1f748:	add	r1, pc, r1
   1f74c:	b	1e56c <processPropertyOperand@@Base>
   1f750:			; <UNDEFINED> instruction: 0x00007dbc
   1f754:	andeq	fp, r1, r4, asr r7
   1f758:	ldr	ip, [pc, #168]	; 1f808 <selectTextTable@@Base+0x250>
   1f75c:	mov	r2, #1
   1f760:	push	{r4, r5, r6, r7, lr}
   1f764:	add	ip, pc, ip
   1f768:	ldr	lr, [pc, #156]	; 1f80c <selectTextTable@@Base+0x254>
   1f76c:	sub	sp, sp, #1040	; 0x410
   1f770:	sub	sp, sp, #4
   1f774:	ldr	r3, [pc, #148]	; 1f810 <selectTextTable@@Base+0x258>
   1f778:	add	r5, sp, #16
   1f77c:	mov	r7, r1
   1f780:	ldr	r4, [ip, lr]
   1f784:	sub	r1, r5, #4
   1f788:	add	r3, pc, r3
   1f78c:	mov	r6, r0
   1f790:	ldr	ip, [r4]
   1f794:	str	ip, [sp, #1036]	; 0x40c
   1f798:	bl	1e34c <getDataString@@Base>
   1f79c:	cmp	r0, #0
   1f7a0:	beq	1f7d0 <selectTextTable@@Base+0x218>
   1f7a4:	ldrb	r3, [sp, #12]
   1f7a8:	cmp	r3, #1
   1f7ac:	beq	1f7ec <selectTextTable@@Base+0x234>
   1f7b0:	ldr	r1, [pc, #92]	; 1f814 <selectTextTable@@Base+0x25c>
   1f7b4:	mov	r0, r6
   1f7b8:	ldr	r2, [pc, #88]	; 1f818 <selectTextTable@@Base+0x260>
   1f7bc:	str	r5, [sp]
   1f7c0:	add	r1, pc, r1
   1f7c4:	add	r2, pc, r2
   1f7c8:	bl	1d740 <reportDataError@@Base>
   1f7cc:	mov	r0, #0
   1f7d0:	ldr	r2, [sp, #1036]	; 0x40c
   1f7d4:	ldr	r3, [r4]
   1f7d8:	cmp	r2, r3
   1f7dc:	bne	1f804 <selectTextTable@@Base+0x24c>
   1f7e0:	add	sp, sp, #1040	; 0x410
   1f7e4:	add	sp, sp, #4
   1f7e8:	pop	{r4, r5, r6, r7, pc}
   1f7ec:	ldr	r2, [sp, #16]
   1f7f0:	cmp	r2, #255	; 0xff
   1f7f4:	strbls	r2, [r7]
   1f7f8:	movls	r0, r3
   1f7fc:	bhi	1f7b0 <selectTextTable@@Base+0x1f8>
   1f800:	b	1f7d0 <selectTextTable@@Base+0x218>
   1f804:	bl	14fbc <__stack_chk_fail@plt>
   1f808:	muleq	r1, r4, r8
   1f80c:	andeq	r0, r0, r8, asr #4
   1f810:	muleq	r0, r0, sp
   1f814:	andeq	r7, r0, r8, ror #26
   1f818:	andeq	r7, r0, r4, asr sp
   1f81c:	ldr	ip, [pc, #152]	; 1f8bc <selectTextTable@@Base+0x304>
   1f820:	mov	r2, #0
   1f824:	ldr	r3, [pc, #148]	; 1f8c0 <selectTextTable@@Base+0x308>
   1f828:	add	ip, pc, ip
   1f82c:	push	{r4, r5, r6, r7, r8, lr}
   1f830:	sub	sp, sp, #1040	; 0x410
   1f834:	ldr	r4, [ip, r3]
   1f838:	add	r6, sp, #16
   1f83c:	ldr	r5, [pc, #128]	; 1f8c4 <selectTextTable@@Base+0x30c>
   1f840:	mov	r7, r1
   1f844:	sub	r1, r6, #4
   1f848:	mov	r8, r0
   1f84c:	ldr	ip, [r4]
   1f850:	add	r5, pc, r5
   1f854:	mov	r3, r5
   1f858:	str	ip, [sp, #1036]	; 0x40c
   1f85c:	bl	1e34c <getDataString@@Base>
   1f860:	cmp	r0, #0
   1f864:	beq	1f87c <selectTextTable@@Base+0x2c4>
   1f868:	ldr	r3, [sp, #16]
   1f86c:	cmp	r3, #0
   1f870:	blt	1f894 <selectTextTable@@Base+0x2dc>
   1f874:	mov	r0, #1
   1f878:	str	r3, [r7]
   1f87c:	ldr	r2, [sp, #1036]	; 0x40c
   1f880:	ldr	r3, [r4]
   1f884:	cmp	r2, r3
   1f888:	bne	1f8b8 <selectTextTable@@Base+0x300>
   1f88c:	add	sp, sp, #1040	; 0x410
   1f890:	pop	{r4, r5, r6, r7, r8, pc}
   1f894:	ldr	r1, [pc, #44]	; 1f8c8 <selectTextTable@@Base+0x310>
   1f898:	mov	r0, r8
   1f89c:	ldrb	r3, [sp, #12]
   1f8a0:	mov	r2, r5
   1f8a4:	str	r6, [sp]
   1f8a8:	add	r1, pc, r1
   1f8ac:	bl	1d740 <reportDataError@@Base>
   1f8b0:	mov	r0, #0
   1f8b4:	b	1f87c <selectTextTable@@Base+0x2c4>
   1f8b8:	bl	14fbc <__stack_chk_fail@plt>
   1f8bc:	ldrdeq	fp, [r1], -r0
   1f8c0:	andeq	r0, r0, r8, asr #4
   1f8c4:	andeq	r7, r0, ip, ror #25
   1f8c8:	andeq	r7, r0, r0, lsl #25
   1f8cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f8d0:	sub	sp, sp, #28
   1f8d4:	ldr	r5, [pc, #436]	; 1fa90 <selectTextTable@@Base+0x4d8>
   1f8d8:	mov	r4, r1
   1f8dc:	ldr	r3, [pc, #432]	; 1fa94 <selectTextTable@@Base+0x4dc>
   1f8e0:	mov	r7, r0
   1f8e4:	add	r5, pc, r5
   1f8e8:	ldr	r1, [pc, #424]	; 1fa98 <selectTextTable@@Base+0x4e0>
   1f8ec:	ldr	r3, [r5, r3]
   1f8f0:	add	r1, pc, r1
   1f8f4:	str	r3, [sp, #4]
   1f8f8:	ldr	r3, [r3]
   1f8fc:	str	r3, [sp, #20]
   1f900:	bl	1dab4 <findDataOperand@@Base>
   1f904:	subs	r3, r0, #0
   1f908:	bne	1f92c <selectTextTable@@Base+0x374>
   1f90c:	ldr	r1, [sp, #4]
   1f910:	mov	r0, r3
   1f914:	ldr	r2, [sp, #20]
   1f918:	ldr	r3, [r1]
   1f91c:	cmp	r2, r3
   1f920:	bne	1fa8c <selectTextTable@@Base+0x4d4>
   1f924:	add	sp, sp, #28
   1f928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f92c:	add	r8, sp, #12
   1f930:	mov	r0, r7
   1f934:	mov	r1, r8
   1f938:	bl	1dc1c <getDataCharacter@@Base>
   1f93c:	subs	r3, r0, #0
   1f940:	beq	1f90c <selectTextTable@@Base+0x354>
   1f944:	ldr	r1, [sp, #12]
   1f948:	cmp	r1, #40	; 0x28
   1f94c:	beq	1f9f0 <selectTextTable@@Base+0x438>
   1f950:	ldr	r0, [pc, #324]	; 1fa9c <selectTextTable@@Base+0x4e4>
   1f954:	mov	r6, #0
   1f958:	strb	r6, [r4]
   1f95c:	add	r0, pc, r0
   1f960:	bl	14e3c <wcschr@plt>
   1f964:	cmp	r0, #0
   1f968:	movne	sl, #1
   1f96c:	beq	1fa74 <selectTextTable@@Base+0x4bc>
   1f970:	add	fp, sp, #16
   1f974:	mov	r0, r7
   1f978:	mov	r1, r8
   1f97c:	bl	1dc1c <getDataCharacter@@Base>
   1f980:	subs	r3, r0, #0
   1f984:	beq	1fa38 <selectTextTable@@Base+0x480>
   1f988:	ldr	r9, [sp, #12]
   1f98c:	mov	r0, r9
   1f990:	bl	14c98 <iswspace@plt>
   1f994:	cmp	r6, #0
   1f998:	beq	1fa00 <selectTextTable@@Base+0x448>
   1f99c:	cmp	r6, r9
   1f9a0:	beq	1fa14 <selectTextTable@@Base+0x45c>
   1f9a4:	cmp	r0, #0
   1f9a8:	bne	1f974 <selectTextTable@@Base+0x3bc>
   1f9ac:	cmp	sl, #0
   1f9b0:	bne	1fa1c <selectTextTable@@Base+0x464>
   1f9b4:	mov	r0, r9
   1f9b8:	mov	r1, fp
   1f9bc:	bl	1d6b4 <brlDotNumberToIndex@@Base>
   1f9c0:	cmp	r0, #0
   1f9c4:	beq	1fa1c <selectTextTable@@Base+0x464>
   1f9c8:	ldr	r1, [pc, #208]	; 1faa0 <selectTextTable@@Base+0x4e8>
   1f9cc:	ldr	r3, [sp, #16]
   1f9d0:	ldrb	r2, [r4]
   1f9d4:	ldr	r1, [r5, r1]
   1f9d8:	ldrb	r3, [r1, r3]
   1f9dc:	tst	r2, r3
   1f9e0:	bne	1fa5c <selectTextTable@@Base+0x4a4>
   1f9e4:	orr	r3, r2, r3
   1f9e8:	strb	r3, [r4]
   1f9ec:	b	1f974 <selectTextTable@@Base+0x3bc>
   1f9f0:	mov	sl, #0
   1f9f4:	mov	r6, #41	; 0x29
   1f9f8:	strb	sl, [r4]
   1f9fc:	b	1f970 <selectTextTable@@Base+0x3b8>
   1fa00:	cmp	r0, #0
   1fa04:	beq	1f9ac <selectTextTable@@Base+0x3f4>
   1fa08:	mov	r0, r7
   1fa0c:	mov	r1, #1
   1fa10:	bl	1dc44 <ungetDataCharacters@@Base>
   1fa14:	mov	r3, #1
   1fa18:	b	1f90c <selectTextTable@@Base+0x354>
   1fa1c:	ldr	r1, [pc, #128]	; 1faa4 <selectTextTable@@Base+0x4ec>
   1fa20:	mov	r0, r7
   1fa24:	mov	r2, r8
   1fa28:	add	r1, pc, r1
   1fa2c:	bl	1d740 <reportDataError@@Base>
   1fa30:	mov	r3, #0
   1fa34:	b	1f90c <selectTextTable@@Base+0x354>
   1fa38:	cmp	r6, #0
   1fa3c:	beq	1fa14 <selectTextTable@@Base+0x45c>
   1fa40:	ldr	r1, [pc, #96]	; 1faa8 <selectTextTable@@Base+0x4f0>
   1fa44:	mov	r0, r7
   1fa48:	str	r3, [sp]
   1fa4c:	add	r1, pc, r1
   1fa50:	bl	1d740 <reportDataError@@Base>
   1fa54:	ldr	r3, [sp]
   1fa58:	b	1f90c <selectTextTable@@Base+0x354>
   1fa5c:	ldr	r1, [pc, #72]	; 1faac <selectTextTable@@Base+0x4f4>
   1fa60:	mov	r0, r7
   1fa64:	mov	r2, r8
   1fa68:	add	r1, pc, r1
   1fa6c:	bl	1d740 <reportDataError@@Base>
   1fa70:	b	1fa30 <selectTextTable@@Base+0x478>
   1fa74:	mov	r6, r0
   1fa78:	mov	r1, #1
   1fa7c:	mov	r0, r7
   1fa80:	mov	sl, r6
   1fa84:	bl	1dc44 <ungetDataCharacters@@Base>
   1fa88:	b	1f970 <selectTextTable@@Base+0x3b8>
   1fa8c:	bl	14fbc <__stack_chk_fail@plt>
   1fa90:	andeq	fp, r1, r4, lsl r7
   1fa94:	andeq	r0, r0, r8, asr #4
   1fa98:	andeq	r7, r0, r0, ror #24
   1fa9c:	andeq	r7, r0, r4, asr #24
   1faa0:	andeq	r0, r0, ip, ror #4
   1faa4:	andeq	r7, r0, r0, lsr fp
   1faa8:	andeq	r7, r0, r4, asr #22
   1faac:	andeq	r7, r0, ip, lsl #22
   1fab0:	ldr	r3, [pc, #128]	; 1fb38 <selectTextTable@@Base+0x580>
   1fab4:	ldr	r2, [pc, #128]	; 1fb3c <selectTextTable@@Base+0x584>
   1fab8:	add	r3, pc, r3
   1fabc:	push	{r4, r5, r6, lr}
   1fac0:	sub	sp, sp, #8
   1fac4:	ldr	r4, [r3, r2]
   1fac8:	mov	r6, r1
   1facc:	add	r1, sp, #2
   1fad0:	mov	r5, r0
   1fad4:	ldr	r3, [r4]
   1fad8:	str	r3, [sp, #4]
   1fadc:	bl	1f758 <selectTextTable@@Base+0x1a0>
   1fae0:	cmp	r0, #0
   1fae4:	bne	1fb04 <selectTextTable@@Base+0x54c>
   1fae8:	mov	r0, #1
   1faec:	ldr	r2, [sp, #4]
   1faf0:	ldr	r3, [r4]
   1faf4:	cmp	r2, r3
   1faf8:	bne	1fb34 <selectTextTable@@Base+0x57c>
   1fafc:	add	sp, sp, #8
   1fb00:	pop	{r4, r5, r6, pc}
   1fb04:	mov	r0, r5
   1fb08:	add	r1, sp, #3
   1fb0c:	bl	1f8cc <selectTextTable@@Base+0x314>
   1fb10:	cmp	r0, #0
   1fb14:	beq	1fae8 <selectTextTable@@Base+0x530>
   1fb18:	mov	r0, r6
   1fb1c:	ldrb	r1, [sp, #2]
   1fb20:	ldrb	r2, [sp, #3]
   1fb24:	bl	1f39c <setTextTableByte@@Base>
   1fb28:	cmp	r0, #0
   1fb2c:	bne	1fae8 <selectTextTable@@Base+0x530>
   1fb30:	b	1faec <selectTextTable@@Base+0x534>
   1fb34:	bl	14fbc <__stack_chk_fail@plt>
   1fb38:	andeq	fp, r1, r0, asr #10
   1fb3c:	andeq	r0, r0, r8, asr #4
   1fb40:	ldr	r3, [pc, #128]	; 1fbc8 <selectTextTable@@Base+0x610>
   1fb44:	ldr	r2, [pc, #128]	; 1fbcc <selectTextTable@@Base+0x614>
   1fb48:	add	r3, pc, r3
   1fb4c:	push	{r4, r5, r6, lr}
   1fb50:	sub	sp, sp, #16
   1fb54:	ldr	r4, [r3, r2]
   1fb58:	mov	r6, r1
   1fb5c:	add	r1, sp, #8
   1fb60:	mov	r5, r0
   1fb64:	ldr	r3, [r4]
   1fb68:	str	r3, [sp, #12]
   1fb6c:	bl	1f81c <selectTextTable@@Base+0x264>
   1fb70:	cmp	r0, #0
   1fb74:	bne	1fb94 <selectTextTable@@Base+0x5dc>
   1fb78:	mov	r0, #1
   1fb7c:	ldr	r2, [sp, #12]
   1fb80:	ldr	r3, [r4]
   1fb84:	cmp	r2, r3
   1fb88:	bne	1fbc4 <selectTextTable@@Base+0x60c>
   1fb8c:	add	sp, sp, #16
   1fb90:	pop	{r4, r5, r6, pc}
   1fb94:	mov	r0, r5
   1fb98:	add	r1, sp, #7
   1fb9c:	bl	1f8cc <selectTextTable@@Base+0x314>
   1fba0:	cmp	r0, #0
   1fba4:	beq	1fb78 <selectTextTable@@Base+0x5c0>
   1fba8:	mov	r0, r6
   1fbac:	ldr	r1, [sp, #8]
   1fbb0:	ldrb	r2, [sp, #7]
   1fbb4:	bl	1f214 <setTextTableGlyph@@Base>
   1fbb8:	cmp	r0, #0
   1fbbc:	bne	1fb78 <selectTextTable@@Base+0x5c0>
   1fbc0:	b	1fb7c <selectTextTable@@Base+0x5c4>
   1fbc4:	bl	14fbc <__stack_chk_fail@plt>
   1fbc8:			; <UNDEFINED> instruction: 0x0001b4b0
   1fbcc:	andeq	r0, r0, r8, asr #4
   1fbd0:	ldr	r3, [pc, #128]	; 1fc58 <selectTextTable@@Base+0x6a0>
   1fbd4:	ldr	r2, [pc, #128]	; 1fc5c <selectTextTable@@Base+0x6a4>
   1fbd8:	add	r3, pc, r3
   1fbdc:	push	{r4, r5, r6, lr}
   1fbe0:	sub	sp, sp, #16
   1fbe4:	ldr	r4, [r3, r2]
   1fbe8:	mov	r6, r1
   1fbec:	add	r1, sp, #8
   1fbf0:	mov	r5, r0
   1fbf4:	ldr	r3, [r4]
   1fbf8:	str	r3, [sp, #12]
   1fbfc:	bl	1f81c <selectTextTable@@Base+0x264>
   1fc00:	cmp	r0, #0
   1fc04:	bne	1fc24 <selectTextTable@@Base+0x66c>
   1fc08:	mov	r0, #1
   1fc0c:	ldr	r2, [sp, #12]
   1fc10:	ldr	r3, [r4]
   1fc14:	cmp	r2, r3
   1fc18:	bne	1fc54 <selectTextTable@@Base+0x69c>
   1fc1c:	add	sp, sp, #16
   1fc20:	pop	{r4, r5, r6, pc}
   1fc24:	mov	r0, r5
   1fc28:	add	r1, sp, #7
   1fc2c:	bl	1f8cc <selectTextTable@@Base+0x314>
   1fc30:	cmp	r0, #0
   1fc34:	beq	1fc08 <selectTextTable@@Base+0x650>
   1fc38:	mov	r0, r6
   1fc3c:	ldr	r1, [sp, #8]
   1fc40:	ldrb	r2, [sp, #7]
   1fc44:	bl	1f2ac <setTextTableCharacter@@Base>
   1fc48:	cmp	r0, #0
   1fc4c:	bne	1fc08 <selectTextTable@@Base+0x650>
   1fc50:	b	1fc0c <selectTextTable@@Base+0x654>
   1fc54:	bl	14fbc <__stack_chk_fail@plt>
   1fc58:	andeq	fp, r1, r0, lsr #8
   1fc5c:	andeq	r0, r0, r8, asr #4

0001fc60 <processTextTableStream@@Base>:
   1fc60:	ldr	r2, [pc, #4]	; 1fc6c <processTextTableStream@@Base+0xc>
   1fc64:	add	r2, pc, r2
   1fc68:	b	1f45c <processTextTableLines@@Base>
   1fc6c:			; <UNDEFINED> instruction: 0xfffffacc

0001fc70 <compileTextTable@@Base>:
   1fc70:	ldr	r1, [pc, #84]	; 1fccc <compileTextTable@@Base+0x5c>
   1fc74:	mov	r2, #0
   1fc78:	push	{r4, r5, r6, lr}
   1fc7c:	add	r1, pc, r1
   1fc80:	mov	r5, r0
   1fc84:	bl	18f5c <openDataFile@@Base>
   1fc88:	subs	r4, r0, #0
   1fc8c:	beq	1fcc4 <compileTextTable@@Base+0x54>
   1fc90:	mov	r1, r5
   1fc94:	bl	1fc60 <processTextTableStream@@Base>
   1fc98:	subs	r6, r0, #0
   1fc9c:	moveq	r5, r6
   1fca0:	beq	1fcb4 <compileTextTable@@Base+0x44>
   1fca4:	bl	1f4e4 <makeTextTable@@Base>
   1fca8:	mov	r5, r0
   1fcac:	mov	r0, r6
   1fcb0:	bl	1f440 <destroyTextTableData@@Base>
   1fcb4:	mov	r0, r4
   1fcb8:	bl	15124 <fclose@plt>
   1fcbc:	mov	r0, r5
   1fcc0:	pop	{r4, r5, r6, pc}
   1fcc4:	mov	r5, r4
   1fcc8:	b	1fcbc <compileTextTable@@Base+0x4c>
   1fccc:	ldrdeq	r7, [r0], -r0
   1fcd0:	ldr	r3, [r1]
   1fcd4:	ubfx	r2, r0, #24, #7
   1fcd8:	push	{r4, r5, r6, r7, r8}
   1fcdc:	ldr	r3, [r3]
   1fce0:	ldr	r2, [r3, r2, lsl #2]
   1fce4:	cmp	r2, #0
   1fce8:	beq	1fd6c <compileTextTable@@Base+0xfc>
   1fcec:	adds	r2, r3, r2
   1fcf0:	beq	1fd6c <compileTextTable@@Base+0xfc>
   1fcf4:	ubfx	ip, r0, #16, #8
   1fcf8:	ldr	r2, [r2, ip, lsl #2]
   1fcfc:	cmp	r2, #0
   1fd00:	beq	1fd6c <compileTextTable@@Base+0xfc>
   1fd04:	adds	r2, r3, r2
   1fd08:	beq	1fd6c <compileTextTable@@Base+0xfc>
   1fd0c:	ubfx	ip, r0, #8, #8
   1fd10:	ldr	r2, [r2, ip, lsl #2]
   1fd14:	cmp	r2, #0
   1fd18:	beq	1fd6c <compileTextTable@@Base+0xfc>
   1fd1c:	adds	ip, r3, r2
   1fd20:	moveq	r0, ip
   1fd24:	beq	1fd70 <compileTextTable@@Base+0x100>
   1fd28:	uxtb	r0, r0
   1fd2c:	mov	r4, #1
   1fd30:	and	r8, r0, #7
   1fd34:	mov	r5, #0
   1fd38:	add	r6, ip, r0, lsr #3
   1fd3c:	mov	r3, #0
   1fd40:	and	r5, r5, r3
   1fd44:	ldrb	r6, [r6, #256]	; 0x100
   1fd48:	lsr	r2, r6, r8
   1fd4c:	and	r4, r4, r2
   1fd50:	orrs	r6, r4, r5
   1fd54:	beq	1fd78 <compileTextTable@@Base+0x108>
   1fd58:	ldrb	r3, [ip, r0]
   1fd5c:	mov	r0, #1
   1fd60:	strb	r3, [r1, #4]
   1fd64:	pop	{r4, r5, r6, r7, r8}
   1fd68:	bx	lr
   1fd6c:	mov	r0, r2
   1fd70:	pop	{r4, r5, r6, r7, r8}
   1fd74:	bx	lr
   1fd78:	mov	r0, r3
   1fd7c:	b	1fd70 <compileTextTable@@Base+0x100>

0001fd80 <convertCharacterToDots@@Base>:
   1fd80:	ldr	r3, [pc, #320]	; 1fec8 <convertCharacterToDots@@Base+0x148>
   1fd84:	bic	r2, r1, #255	; 0xff
   1fd88:	ldr	ip, [pc, #316]	; 1fecc <convertCharacterToDots@@Base+0x14c>
   1fd8c:	cmp	r2, #10240	; 0x2800
   1fd90:	add	r3, pc, r3
   1fd94:	push	{r4, r5, r6, r7, r8, r9, lr}
   1fd98:	sub	sp, sp, #20
   1fd9c:	ldr	r4, [r3, ip]
   1fda0:	mov	r5, r0
   1fda4:	uxtbeq	r0, r1
   1fda8:	ldr	r3, [r4]
   1fdac:	str	r3, [sp, #12]
   1fdb0:	beq	1fe64 <convertCharacterToDots@@Base+0xe4>
   1fdb4:	cmp	r2, #61440	; 0xf000
   1fdb8:	bne	1fdd0 <convertCharacterToDots@@Base+0x50>
   1fdbc:	uxtb	r0, r1
   1fdc0:	bl	248dc <convertCharToWchar@@Base>
   1fdc4:	cmn	r0, #1
   1fdc8:	mov	r1, r0
   1fdcc:	beq	1fdf8 <convertCharacterToDots@@Base+0x78>
   1fdd0:	mov	r0, r1
   1fdd4:	ldr	r1, [pc, #244]	; 1fed0 <convertCharacterToDots@@Base+0x150>
   1fdd8:	add	r2, sp, #4
   1fddc:	mov	r3, #0
   1fde0:	add	r1, pc, r1
   1fde4:	str	r5, [sp, #4]
   1fde8:	strb	r3, [sp, #8]
   1fdec:	bl	2563c <handleBestCharacter@@Base>
   1fdf0:	cmp	r0, #0
   1fdf4:	bne	1fe7c <convertCharacterToDots@@Base+0xfc>
   1fdf8:	ldr	ip, [r5]
   1fdfc:	ldr	r3, [ip]
   1fe00:	cmp	r3, #0
   1fe04:	beq	1fe84 <convertCharacterToDots@@Base+0x104>
   1fe08:	add	r2, ip, r3
   1fe0c:	cmp	r2, #0
   1fe10:	beq	1fe84 <convertCharacterToDots@@Base+0x104>
   1fe14:	ldr	r5, [ip, r3]
   1fe18:	cmp	r5, #0
   1fe1c:	beq	1fe84 <convertCharacterToDots@@Base+0x104>
   1fe20:	adds	r8, ip, r5
   1fe24:	beq	1fe84 <convertCharacterToDots@@Base+0x104>
   1fe28:	ldr	r3, [r8, #1020]	; 0x3fc
   1fe2c:	cmp	r3, #0
   1fe30:	beq	1fe8c <convertCharacterToDots@@Base+0x10c>
   1fe34:	adds	r9, ip, r3
   1fe38:	beq	1fe8c <convertCharacterToDots@@Base+0x10c>
   1fe3c:	ldrb	r6, [r9, #287]	; 0x11f
   1fe40:	mov	r1, #0
   1fe44:	mov	r0, #1
   1fe48:	mov	r3, #0
   1fe4c:	and	r3, r3, r1
   1fe50:	lsr	r2, r6, #5
   1fe54:	and	r2, r2, r0
   1fe58:	orrs	r1, r2, r3
   1fe5c:	beq	1fe8c <convertCharacterToDots@@Base+0x10c>
   1fe60:	ldrb	r0, [r9, #253]	; 0xfd
   1fe64:	ldr	r2, [sp, #12]
   1fe68:	ldr	r3, [r4]
   1fe6c:	cmp	r2, r3
   1fe70:	bne	1fec4 <convertCharacterToDots@@Base+0x144>
   1fe74:	add	sp, sp, #20
   1fe78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1fe7c:	ldrb	r0, [sp, #8]
   1fe80:	b	1fe64 <convertCharacterToDots@@Base+0xe4>
   1fe84:	mov	r0, #255	; 0xff
   1fe88:	b	1fe64 <convertCharacterToDots@@Base+0xe4>
   1fe8c:	cmp	r8, #0
   1fe90:	beq	1fe84 <convertCharacterToDots@@Base+0x104>
   1fe94:	ldr	r3, [ip, r5]
   1fe98:	cmp	r3, #0
   1fe9c:	beq	1fe84 <convertCharacterToDots@@Base+0x104>
   1fea0:	adds	ip, ip, r3
   1fea4:	beq	1fe84 <convertCharacterToDots@@Base+0x104>
   1fea8:	ldrb	r0, [ip, #263]	; 0x107
   1feac:	mov	r3, #0
   1feb0:	lsr	r2, r0, #7
   1feb4:	orrs	r1, r2, r3
   1feb8:	beq	1fe84 <convertCharacterToDots@@Base+0x104>
   1febc:	ldrb	r0, [ip, #63]	; 0x3f
   1fec0:	b	1fe64 <convertCharacterToDots@@Base+0xe4>
   1fec4:	bl	14fbc <__stack_chk_fail@plt>
   1fec8:	andeq	fp, r1, r8, ror #4
   1fecc:	andeq	r0, r0, r8, asr #4
   1fed0:			; <UNDEFINED> instruction: 0xfffffee8

0001fed4 <convertDotsToCharacter@@Base>:
   1fed4:	push	{r4, r5, r6, r7}
   1fed8:	and	r7, r1, #7
   1fedc:	ldr	r6, [r0]
   1fee0:	mov	ip, r1
   1fee4:	mov	r0, #1
   1fee8:	mov	r3, #0
   1feec:	add	r4, r6, r1, lsr #3
   1fef0:	mov	r1, #0
   1fef4:	and	r3, r3, r1
   1fef8:	ldrb	r4, [r4, #1536]	; 0x600
   1fefc:	lsr	r2, r4, r7
   1ff00:	and	r2, r2, r0
   1ff04:	orrs	r1, r2, r3
   1ff08:	addne	ip, ip, #128	; 0x80
   1ff0c:	movweq	r0, #65533	; 0xfffd
   1ff10:	ldrne	r0, [r6, ip, lsl #2]
   1ff14:	pop	{r4, r5, r6, r7}
   1ff18:	bx	lr

0001ff1c <replaceTextTable@@Base>:
   1ff1c:	push	{r4, r5, r6, lr}
   1ff20:	mov	r6, r1
   1ff24:	bl	1f55c <makeTextTablePath@@Base>
   1ff28:	ldr	r5, [pc, #180]	; 1ffe4 <replaceTextTable@@Base+0xc8>
   1ff2c:	add	r5, pc, r5
   1ff30:	subs	r4, r0, #0
   1ff34:	beq	1ffb0 <replaceTextTable@@Base+0x94>
   1ff38:	ldr	r1, [pc, #168]	; 1ffe8 <replaceTextTable@@Base+0xcc>
   1ff3c:	mov	r2, r4
   1ff40:	mov	r0, #7
   1ff44:	add	r1, pc, r1
   1ff48:	bl	183d0 <logMessage@@Base>
   1ff4c:	mov	r0, r4
   1ff50:	bl	1fc70 <compileTextTable@@Base>
   1ff54:	subs	r2, r0, #0
   1ff58:	beq	1ff80 <replaceTextTable@@Base+0x64>
   1ff5c:	ldr	r3, [pc, #136]	; 1ffec <replaceTextTable@@Base+0xd0>
   1ff60:	ldr	r3, [r5, r3]
   1ff64:	ldr	r0, [r3]
   1ff68:	str	r2, [r3]
   1ff6c:	bl	1f524 <destroyTextTable@@Base>
   1ff70:	mov	r0, r4
   1ff74:	bl	14d10 <free@plt>
   1ff78:	mov	r0, #1
   1ff7c:	pop	{r4, r5, r6, pc}
   1ff80:	ldr	r1, [pc, #104]	; 1fff0 <replaceTextTable@@Base+0xd4>
   1ff84:	mov	r2, #5
   1ff88:	add	r1, pc, r1
   1ff8c:	bl	14fec <dcgettext@plt>
   1ff90:	ldr	r1, [pc, #92]	; 1fff4 <replaceTextTable@@Base+0xd8>
   1ff94:	mov	r3, r4
   1ff98:	add	r1, pc, r1
   1ff9c:	mov	r2, r0
   1ffa0:	mov	r0, #3
   1ffa4:	bl	183d0 <logMessage@@Base>
   1ffa8:	mov	r0, r4
   1ffac:	bl	14d10 <free@plt>
   1ffb0:	ldr	r1, [pc, #64]	; 1fff8 <replaceTextTable@@Base+0xdc>
   1ffb4:	mov	r2, #5
   1ffb8:	mov	r0, #0
   1ffbc:	add	r1, pc, r1
   1ffc0:	bl	14fec <dcgettext@plt>
   1ffc4:	ldr	r1, [pc, #48]	; 1fffc <replaceTextTable@@Base+0xe0>
   1ffc8:	mov	r3, r6
   1ffcc:	add	r1, pc, r1
   1ffd0:	mov	r2, r0
   1ffd4:	mov	r0, #3
   1ffd8:	bl	183d0 <logMessage@@Base>
   1ffdc:	mov	r0, #0
   1ffe0:	pop	{r4, r5, r6, pc}
   1ffe4:	andeq	fp, r1, ip, asr #1
   1ffe8:	andeq	r8, r0, r4, asr #16
   1ffec:	andeq	r0, r0, r8, asr r2
   1fff0:	andeq	r8, r0, ip, lsl r8
   1fff4:	andeq	r6, r0, r0, lsl #17
   1fff8:	andeq	r8, r0, r4, lsl #16
   1fffc:	andeq	r6, r0, ip, asr #16
   20000:	ldr	ip, [pc, #476]	; 201e4 <replaceTextTable@@Base+0x2c8>
   20004:	cmp	r3, #0
   20008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2000c:	add	ip, pc, ip
   20010:	ldr	r4, [pc, #464]	; 201e8 <replaceTextTable@@Base+0x2cc>
   20014:	sub	sp, sp, #12
   20018:	mov	fp, #0
   2001c:	ldr	r9, [ip, r4]
   20020:	movgt	r4, fp
   20024:	ldr	ip, [r9]
   20028:	strb	fp, [r1]
   2002c:	str	ip, [sp, #4]
   20030:	movgt	ip, #1
   20034:	ble	201a4 <replaceTextTable@@Base+0x288>
   20038:	mov	sl, r2
   2003c:	sub	r7, ip, #1
   20040:	ldr	r6, [r2], #4
   20044:	subs	r8, fp, r7
   20048:	sub	r5, r6, #45	; 0x2d
   2004c:	movne	r8, #1
   20050:	str	r6, [sp]
   20054:	cmp	r5, #11
   20058:	addls	pc, pc, r5, lsl #2
   2005c:	b	20164 <replaceTextTable@@Base+0x248>
   20060:	b	200fc <replaceTextTable@@Base+0x1e0>
   20064:	b	20164 <replaceTextTable@@Base+0x248>
   20068:	b	20164 <replaceTextTable@@Base+0x248>
   2006c:	b	200ec <replaceTextTable@@Base+0x1d0>
   20070:	b	200e4 <replaceTextTable@@Base+0x1c8>
   20074:	b	20090 <replaceTextTable@@Base+0x174>
   20078:	b	2015c <replaceTextTable@@Base+0x240>
   2007c:	b	20154 <replaceTextTable@@Base+0x238>
   20080:	b	2014c <replaceTextTable@@Base+0x230>
   20084:	b	20144 <replaceTextTable@@Base+0x228>
   20088:	b	2013c <replaceTextTable@@Base+0x220>
   2008c:	b	20134 <replaceTextTable@@Base+0x218>
   20090:	mov	r5, #2
   20094:	cmp	r4, #0
   20098:	movne	r8, #0
   2009c:	andeq	r8, r8, #1
   200a0:	cmp	r8, #0
   200a4:	bne	20164 <replaceTextTable@@Base+0x248>
   200a8:	tst	r5, r4
   200ac:	bne	20190 <replaceTextTable@@Base+0x274>
   200b0:	orr	r4, r5, r4
   200b4:	mov	r5, ip
   200b8:	cmp	r3, r5
   200bc:	add	ip, ip, #1
   200c0:	bgt	20038 <replaceTextTable@@Base+0x11c>
   200c4:	cmp	fp, r5
   200c8:	beq	201a4 <replaceTextTable@@Base+0x288>
   200cc:	ldrb	r2, [r1]
   200d0:	mov	r0, #1
   200d4:	add	r3, r2, r0
   200d8:	strb	r3, [r1], r2
   200dc:	strb	r4, [r1, #1]
   200e0:	b	20178 <replaceTextTable@@Base+0x25c>
   200e4:	mov	r5, #1
   200e8:	b	20094 <replaceTextTable@@Base+0x178>
   200ec:	cmp	r8, #0
   200f0:	bne	20164 <replaceTextTable@@Base+0x248>
   200f4:	mov	r5, ip
   200f8:	b	200b8 <replaceTextTable@@Base+0x19c>
   200fc:	cmp	r8, #0
   20100:	beq	201b8 <replaceTextTable@@Base+0x29c>
   20104:	ldrb	r7, [r1]
   20108:	mov	r5, r1
   2010c:	add	r6, r7, #1
   20110:	uxtb	r6, r6
   20114:	strb	r6, [r5], r7
   20118:	cmp	r6, #255	; 0xff
   2011c:	strb	r4, [r5, #1]
   20120:	beq	201d0 <replaceTextTable@@Base+0x2b4>
   20124:	mov	fp, ip
   20128:	mov	r5, ip
   2012c:	mov	r4, #0
   20130:	b	200b8 <replaceTextTable@@Base+0x19c>
   20134:	mov	r5, #128	; 0x80
   20138:	b	20094 <replaceTextTable@@Base+0x178>
   2013c:	mov	r5, #64	; 0x40
   20140:	b	20094 <replaceTextTable@@Base+0x178>
   20144:	mov	r5, #32
   20148:	b	20094 <replaceTextTable@@Base+0x178>
   2014c:	mov	r5, #16
   20150:	b	20094 <replaceTextTable@@Base+0x178>
   20154:	mov	r5, #8
   20158:	b	20094 <replaceTextTable@@Base+0x178>
   2015c:	mov	r5, #4
   20160:	b	20094 <replaceTextTable@@Base+0x178>
   20164:	ldr	r1, [pc, #128]	; 201ec <replaceTextTable@@Base+0x2d0>
   20168:	mov	r2, sp
   2016c:	add	r1, pc, r1
   20170:	bl	1d740 <reportDataError@@Base>
   20174:	mov	r0, #0
   20178:	ldr	r2, [sp, #4]
   2017c:	ldr	r3, [r9]
   20180:	cmp	r2, r3
   20184:	bne	201e0 <replaceTextTable@@Base+0x2c4>
   20188:	add	sp, sp, #12
   2018c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20190:	ldr	r1, [pc, #88]	; 201f0 <replaceTextTable@@Base+0x2d4>
   20194:	mov	r2, sp
   20198:	add	r1, pc, r1
   2019c:	bl	1d740 <reportDataError@@Base>
   201a0:	b	20174 <replaceTextTable@@Base+0x258>
   201a4:	ldr	r1, [pc, #72]	; 201f4 <replaceTextTable@@Base+0x2d8>
   201a8:	add	r1, pc, r1
   201ac:	bl	1d740 <reportDataError@@Base>
   201b0:	mov	r0, #0
   201b4:	b	20178 <replaceTextTable@@Base+0x25c>
   201b8:	ldr	r1, [pc, #56]	; 201f8 <replaceTextTable@@Base+0x2dc>
   201bc:	rsb	r2, r7, r3
   201c0:	mov	r3, sl
   201c4:	add	r1, pc, r1
   201c8:	bl	1d740 <reportDataError@@Base>
   201cc:	b	20174 <replaceTextTable@@Base+0x258>
   201d0:	ldr	r1, [pc, #36]	; 201fc <replaceTextTable@@Base+0x2e0>
   201d4:	add	r1, pc, r1
   201d8:	bl	1d740 <reportDataError@@Base>
   201dc:	b	20174 <replaceTextTable@@Base+0x258>
   201e0:	bl	14fbc <__stack_chk_fail@plt>
   201e4:	andeq	sl, r1, ip, ror #31
   201e8:	andeq	r0, r0, r8, asr #4
   201ec:	andeq	r7, r0, ip, ror #7
   201f0:	andeq	r8, r0, ip, asr r6
   201f4:	andeq	r8, r0, r0, lsr r6
   201f8:	andeq	r8, r0, r4, asr r6
   201fc:	andeq	r8, r0, r8, ror #12
   20200:	ldr	r3, [pc, #100]	; 2026c <replaceTextTable@@Base+0x350>
   20204:	ldr	ip, [pc, #100]	; 20270 <replaceTextTable@@Base+0x354>
   20208:	add	r3, pc, r3
   2020c:	push	{r4, r5, r6, lr}
   20210:	sub	sp, sp, #16
   20214:	ldr	r4, [r3, ip]
   20218:	mov	r5, r1
   2021c:	add	r1, sp, #4
   20220:	mov	r6, r0
   20224:	ldr	r3, [r4]
   20228:	str	r3, [sp, #12]
   2022c:	bl	1dc90 <getDataOperand@@Base>
   20230:	cmp	r0, #0
   20234:	beq	20250 <replaceTextTable@@Base+0x334>
   20238:	mov	r0, r6
   2023c:	mov	r1, r5
   20240:	ldmib	sp, {r2, r3}
   20244:	bl	20000 <replaceTextTable@@Base+0xe4>
   20248:	adds	r0, r0, #0
   2024c:	movne	r0, #1
   20250:	ldr	r2, [sp, #12]
   20254:	ldr	r3, [r4]
   20258:	cmp	r2, r3
   2025c:	bne	20268 <replaceTextTable@@Base+0x34c>
   20260:	add	sp, sp, #16
   20264:	pop	{r4, r5, r6, pc}
   20268:	bl	14fbc <__stack_chk_fail@plt>
   2026c:	strdeq	sl, [r1], -r0
   20270:	andeq	r0, r0, r8, asr #4
   20274:	push	{r4, r5, r6, r7, r8, lr}
   20278:	mov	r7, r1
   2027c:	ldr	r1, [r1, #12]
   20280:	mov	r6, r0
   20284:	ldr	ip, [r7, #4]
   20288:	mov	r4, #0
   2028c:	subs	r2, r1, #1
   20290:	bmi	202c4 <replaceTextTable@@Base+0x3a8>
   20294:	add	r3, r4, r2
   20298:	add	r3, r3, r3, lsr #31
   2029c:	asr	r3, r3, #1
   202a0:	ldr	r5, [ip, r3, lsl #4]
   202a4:	add	r0, ip, r3, lsl #4
   202a8:	cmp	r5, r6
   202ac:	addcc	r4, r3, #1
   202b0:	bcc	202bc <replaceTextTable@@Base+0x3a0>
   202b4:	sub	r2, r3, #1
   202b8:	popls	{r4, r5, r6, r7, r8, pc}
   202bc:	cmp	r2, r4
   202c0:	bge	20294 <replaceTextTable@@Base+0x378>
   202c4:	ldr	r3, [r7, #8]
   202c8:	cmp	r1, r3
   202cc:	beq	20320 <replaceTextTable@@Base+0x404>
   202d0:	add	r0, r4, #1
   202d4:	rsb	r2, r4, r1
   202d8:	lsl	r0, r0, #4
   202dc:	lsl	r2, r2, #4
   202e0:	sub	r4, r0, #16
   202e4:	add	r0, ip, r0
   202e8:	add	r1, ip, r4
   202ec:	bl	14ed8 <memmove@plt>
   202f0:	ldr	r8, [r7, #4]
   202f4:	ldr	r3, [r7, #12]
   202f8:	mov	r1, #0
   202fc:	add	r5, r8, r4
   20300:	mov	r2, #16
   20304:	add	r3, r3, #1
   20308:	str	r3, [r7, #12]
   2030c:	mov	r0, r5
   20310:	bl	14e0c <memset@plt>
   20314:	str	r6, [r8, r4]
   20318:	mov	r0, r5
   2031c:	pop	{r4, r5, r6, r7, r8, pc}
   20320:	cmp	r1, #0
   20324:	mov	r0, ip
   20328:	lslne	r5, r1, #1
   2032c:	lslne	r1, r1, #5
   20330:	moveq	r1, #2048	; 0x800
   20334:	moveq	r5, #128	; 0x80
   20338:	bl	14f2c <realloc@plt>
   2033c:	cmp	r0, #0
   20340:	popeq	{r4, r5, r6, r7, r8, pc}
   20344:	ldr	r1, [r7, #12]
   20348:	mov	ip, r0
   2034c:	stmib	r7, {r0, r5}
   20350:	b	202d0 <replaceTextTable@@Base+0x3b4>
   20354:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   20358:	mov	r5, r2
   2035c:	ldr	r6, [sp, #32]
   20360:	mov	r9, r0
   20364:	mov	r8, r1
   20368:	mov	r7, r3
   2036c:	ldr	r2, [r6]
   20370:	cmp	r2, #0
   20374:	beq	203e0 <replaceTextTable@@Base+0x4c4>
   20378:	add	r0, r5, #3
   2037c:	lsl	r0, r0, #2
   20380:	bl	150dc <malloc@plt>
   20384:	subs	r4, r0, #0
   20388:	beq	203e0 <replaceTextTable@@Base+0x4c4>
   2038c:	mov	ip, r4
   20390:	mov	lr, #0
   20394:	str	lr, [ip], #4
   20398:	add	ip, ip, #4
   2039c:	str	lr, [r4, #4]
   203a0:	mov	r1, r8
   203a4:	str	lr, [ip], #4
   203a8:	uxtb	r2, r5
   203ac:	str	lr, [ip]
   203b0:	add	r0, r4, #12
   203b4:	strb	r5, [r4, #8]
   203b8:	bl	14db8 <wmemcpy@plt>
   203bc:	ldr	r3, [r6]
   203c0:	mov	r0, r4
   203c4:	str	r3, [r4, #4]
   203c8:	lsl	r3, r3, #1
   203cc:	str	r3, [r6]
   203d0:	ldr	r3, [r7]
   203d4:	str	r3, [r4]
   203d8:	str	r4, [r7]
   203dc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   203e0:	ldr	r1, [pc, #24]	; 20400 <replaceTextTable@@Base+0x4e4>
   203e4:	mov	r0, r9
   203e8:	mov	r2, r5
   203ec:	mov	r3, r8
   203f0:	add	r1, pc, r1
   203f4:	bl	1d740 <reportDataError@@Base>
   203f8:	mov	r0, #0
   203fc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   20400:	andeq	r8, r0, r4, ror #8
   20404:	push	{r4, r5, r6, lr}
   20408:	mov	r5, r0
   2040c:	ldrb	r3, [r1]
   20410:	mov	r4, r1
   20414:	ldr	r0, [r2]
   20418:	mov	r6, r2
   2041c:	mov	r1, r5
   20420:	add	r2, r3, #1
   20424:	mov	r3, #1
   20428:	bl	1ee9c <allocateDataItem@@Base>
   2042c:	cmp	r0, #0
   20430:	popeq	{r4, r5, r6, pc}
   20434:	ldr	r1, [r5]
   20438:	ldr	r0, [r6]
   2043c:	bl	1ef4c <getDataItem@@Base>
   20440:	mov	r1, r4
   20444:	ldrb	r3, [r1], #1
   20448:	mov	r2, r3
   2044c:	strb	r3, [r0], #1
   20450:	bl	150d0 <memcpy@plt>
   20454:	mov	r0, #1
   20458:	pop	{r4, r5, r6, pc}
   2045c:	ldr	ip, [pc, #540]	; 20680 <replaceTextTable@@Base+0x764>
   20460:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20464:	subs	r5, r1, #0
   20468:	ldr	r1, [pc, #532]	; 20684 <replaceTextTable@@Base+0x768>
   2046c:	add	ip, pc, ip
   20470:	mov	r4, r2
   20474:	mov	r9, r3
   20478:	ldrbne	r2, [r5]
   2047c:	mov	r3, ip
   20480:	ldr	r8, [ip, r1]
   20484:	sub	sp, sp, #12
   20488:	moveq	r2, #20
   2048c:	mov	sl, r0
   20490:	ldr	r7, [sp, #52]	; 0x34
   20494:	mov	r1, sp
   20498:	ldr	r3, [r8]
   2049c:	ldr	r0, [r7]
   204a0:	str	r3, [sp, #4]
   204a4:	movne	r3, #20
   204a8:	addne	r2, r3, r2, lsl #2
   204ac:	cmp	r4, #0
   204b0:	ldrbne	r3, [r4]
   204b4:	addne	r2, r2, r3
   204b8:	mov	r3, #4
   204bc:	bl	1ee9c <allocateDataItem@@Base>
   204c0:	cmp	r0, #0
   204c4:	beq	20668 <replaceTextTable@@Base+0x74c>
   204c8:	ldr	r1, [sp]
   204cc:	ldr	r0, [r7]
   204d0:	bl	1ef4c <getDataItem@@Base>
   204d4:	ldr	r1, [sp, #48]	; 0x30
   204d8:	cmp	r5, #0
   204dc:	mov	r6, r0
   204e0:	str	sl, [r0, #4]
   204e4:	str	r9, [r0, #8]
   204e8:	str	r1, [r0, #12]
   204ec:	beq	20670 <replaceTextTable@@Base+0x754>
   204f0:	mov	r1, r5
   204f4:	add	r0, r0, #20
   204f8:	ldrb	r2, [r1], #4
   204fc:	strb	r2, [r6, #16]
   20500:	bl	14db8 <wmemcpy@plt>
   20504:	ldrb	r3, [r6, #16]
   20508:	cmp	r4, #0
   2050c:	strbeq	r4, [r6, #17]
   20510:	beq	20530 <replaceTextTable@@Base+0x614>
   20514:	mov	r1, r4
   20518:	add	r0, r6, r3, lsl #2
   2051c:	ldrb	r2, [r1], #1
   20520:	add	r0, r0, #20
   20524:	strb	r2, [r6, #17]
   20528:	bl	150d0 <memcpy@plt>
   2052c:	ldrb	r3, [r6, #16]
   20530:	cmp	r3, #1
   20534:	beq	2063c <replaceTextTable@@Base+0x720>
   20538:	mov	r1, #0
   2053c:	ldr	r0, [r7]
   20540:	bl	1ef4c <getDataItem@@Base>
   20544:	ldr	r1, [r6, #20]
   20548:	ldr	r2, [r6, #24]
   2054c:	movw	r3, #44917	; 0xaf75
   20550:	movt	r3, #61737	; 0xf129
   20554:	add	r2, r2, r1, lsl #8
   20558:	umull	r1, r3, r3, r2
   2055c:	lsr	r3, r3, #10
   20560:	add	r1, r3, r3, lsl #4
   20564:	rsb	r3, r3, r1, lsl #6
   20568:	rsb	r2, r3, r2
   2056c:	add	r0, r0, r2, lsl #2
   20570:	add	r5, r0, #28
   20574:	ldr	r1, [r5]
   20578:	cmp	r1, #0
   2057c:	addne	r9, r6, #20
   20580:	bne	20598 <replaceTextTable@@Base+0x67c>
   20584:	b	205dc <replaceTextTable@@Base+0x6c0>
   20588:	ldr	r1, [r4]
   2058c:	mov	r5, r4
   20590:	cmp	r1, #0
   20594:	beq	205dc <replaceTextTable@@Base+0x6c0>
   20598:	ldr	r0, [r7]
   2059c:	bl	1ef4c <getDataItem@@Base>
   205a0:	ldrb	r2, [r6, #16]
   205a4:	ldrb	r3, [r0, #16]
   205a8:	mov	r4, r0
   205ac:	cmp	r2, r3
   205b0:	bhi	205d8 <replaceTextTable@@Base+0x6bc>
   205b4:	bne	20588 <replaceTextTable@@Base+0x66c>
   205b8:	ldr	fp, [r6, #4]
   205bc:	ldr	sl, [r0, #4]
   205c0:	cmp	fp, sl
   205c4:	beq	20604 <replaceTextTable@@Base+0x6e8>
   205c8:	cmp	sl, #6
   205cc:	bne	20588 <replaceTextTable@@Base+0x66c>
   205d0:	cmp	fp, #6
   205d4:	beq	20588 <replaceTextTable@@Base+0x66c>
   205d8:	ldr	r1, [r5]
   205dc:	str	r1, [r6]
   205e0:	mov	r0, r6
   205e4:	ldr	r3, [sp]
   205e8:	str	r3, [r5]
   205ec:	ldr	r2, [sp, #4]
   205f0:	ldr	r3, [r8]
   205f4:	cmp	r2, r3
   205f8:	bne	2067c <replaceTextTable@@Base+0x760>
   205fc:	add	sp, sp, #12
   20600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20604:	ldr	r1, [r6, #8]
   20608:	ldr	r3, [r0, #8]
   2060c:	cmp	r1, r3
   20610:	bne	205c8 <replaceTextTable@@Base+0x6ac>
   20614:	ldr	r1, [r6, #12]
   20618:	ldr	r3, [r0, #12]
   2061c:	cmp	r1, r3
   20620:	bne	205c8 <replaceTextTable@@Base+0x6ac>
   20624:	mov	r0, r9
   20628:	add	r1, r4, #20
   2062c:	bl	14e78 <wmemcmp@plt>
   20630:	cmp	r0, #0
   20634:	bne	205c8 <replaceTextTable@@Base+0x6ac>
   20638:	b	205d8 <replaceTextTable@@Base+0x6bc>
   2063c:	ldr	r0, [r6, #20]
   20640:	mov	r1, r7
   20644:	bl	20274 <replaceTextTable@@Base+0x358>
   20648:	cmp	r0, #0
   2064c:	beq	20668 <replaceTextTable@@Base+0x74c>
   20650:	ldr	r3, [r6, #4]
   20654:	add	r5, r0, #4
   20658:	cmp	r3, #6
   2065c:	ldreq	r3, [sp]
   20660:	streq	r3, [r0, #8]
   20664:	b	20574 <replaceTextTable@@Base+0x658>
   20668:	mov	r0, #0
   2066c:	b	205ec <replaceTextTable@@Base+0x6d0>
   20670:	mov	r3, r5
   20674:	strb	r5, [r0, #16]
   20678:	b	20508 <replaceTextTable@@Base+0x5ec>
   2067c:	bl	14fbc <__stack_chk_fail@plt>
   20680:	andeq	sl, r1, ip, lsl #23
   20684:	andeq	r0, r0, r8, asr #4
   20688:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2068c:	sub	sp, sp, #1328	; 0x530
   20690:	sub	sp, sp, #12
   20694:	ldr	r3, [pc, #1624]	; 20cf4 <replaceTextTable@@Base+0xdd8>
   20698:	add	r2, sp, #56	; 0x38
   2069c:	ldr	sl, [pc, #1620]	; 20cf8 <replaceTextTable@@Base+0xddc>
   206a0:	str	r2, [sp, #28]
   206a4:	add	r3, pc, r3
   206a8:	ldr	r2, [pc, #1612]	; 20cfc <replaceTextTable@@Base+0xde0>
   206ac:	add	r8, sp, #44	; 0x2c
   206b0:	str	r1, [sp, #24]
   206b4:	add	sl, pc, sl
   206b8:	ldr	r7, [pc, #1600]	; 20d00 <replaceTextTable@@Base+0xde4>
   206bc:	mov	r6, r0
   206c0:	ldr	r2, [r3, r2]
   206c4:	mov	r3, #0
   206c8:	ldr	lr, [pc, #1588]	; 20d04 <replaceTextTable@@Base+0xde8>
   206cc:	add	r7, pc, r7
   206d0:	str	r3, [sp, #36]	; 0x24
   206d4:	str	r2, [sp, #16]
   206d8:	add	lr, pc, lr
   206dc:	ldr	r2, [r2]
   206e0:	str	lr, [sp, #20]
   206e4:	str	r3, [sp, #40]	; 0x28
   206e8:	str	r2, [sp, #1332]	; 0x534
   206ec:	mov	r0, r6
   206f0:	mov	r1, r8
   206f4:	mov	r2, sl
   206f8:	bl	1dc90 <getDataOperand@@Base>
   206fc:	cmp	r0, #0
   20700:	bne	2072c <replaceTextTable@@Base+0x810>
   20704:	mov	ip, #1
   20708:	ldr	r1, [sp, #16]
   2070c:	mov	r0, ip
   20710:	ldr	r2, [sp, #1332]	; 0x534
   20714:	ldr	r3, [r1]
   20718:	cmp	r2, r3
   2071c:	bne	20cf0 <replaceTextTable@@Base+0xdd4>
   20720:	add	sp, sp, #1328	; 0x530
   20724:	add	sp, sp, #12
   20728:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2072c:	ldr	r1, [sp, #24]
   20730:	mov	r4, #0
   20734:	ldr	fp, [sp, #48]	; 0x30
   20738:	add	r5, r1, #23
   2073c:	ldr	r9, [sp, #44]	; 0x2c
   20740:	b	20750 <replaceTextTable@@Base+0x834>
   20744:	add	r4, r4, #1
   20748:	cmp	r4, #30
   2074c:	beq	207f8 <replaceTextTable@@Base+0x8dc>
   20750:	ldrb	r3, [r5, #1]!
   20754:	cmp	r3, fp
   20758:	bne	20744 <replaceTextTable@@Base+0x828>
   2075c:	mov	r0, r9
   20760:	ldr	r1, [r7, r4, lsl #2]
   20764:	mov	r2, fp
   20768:	bl	14e78 <wmemcmp@plt>
   2076c:	cmp	r0, #0
   20770:	bne	20744 <replaceTextTable@@Base+0x828>
   20774:	sub	r3, r4, #1
   20778:	cmp	r3, #28
   2077c:	addls	pc, pc, r3, lsl #2
   20780:	b	20b18 <replaceTextTable@@Base+0xbfc>
   20784:	b	20ac4 <replaceTextTable@@Base+0xba8>
   20788:	b	20a70 <replaceTextTable@@Base+0xb54>
   2078c:	b	20a1c <replaceTextTable@@Base+0xb00>
   20790:	b	209c8 <replaceTextTable@@Base+0xaac>
   20794:	b	20968 <replaceTextTable@@Base+0xa4c>
   20798:	b	208a8 <replaceTextTable@@Base+0x98c>
   2079c:	b	208a8 <replaceTextTable@@Base+0x98c>
   207a0:	b	208a8 <replaceTextTable@@Base+0x98c>
   207a4:	b	208a8 <replaceTextTable@@Base+0x98c>
   207a8:	b	208a8 <replaceTextTable@@Base+0x98c>
   207ac:	b	208a8 <replaceTextTable@@Base+0x98c>
   207b0:	b	208a8 <replaceTextTable@@Base+0x98c>
   207b4:	b	20968 <replaceTextTable@@Base+0xa4c>
   207b8:	b	208a8 <replaceTextTable@@Base+0x98c>
   207bc:	b	208a8 <replaceTextTable@@Base+0x98c>
   207c0:	b	208a8 <replaceTextTable@@Base+0x98c>
   207c4:	b	208a8 <replaceTextTable@@Base+0x98c>
   207c8:	b	208a8 <replaceTextTable@@Base+0x98c>
   207cc:	b	208a8 <replaceTextTable@@Base+0x98c>
   207d0:	b	208a8 <replaceTextTable@@Base+0x98c>
   207d4:	b	208a8 <replaceTextTable@@Base+0x98c>
   207d8:	b	208a8 <replaceTextTable@@Base+0x98c>
   207dc:	b	208a8 <replaceTextTable@@Base+0x98c>
   207e0:	b	208a8 <replaceTextTable@@Base+0x98c>
   207e4:	b	208a8 <replaceTextTable@@Base+0x98c>
   207e8:	b	20814 <replaceTextTable@@Base+0x8f8>
   207ec:	b	20c00 <replaceTextTable@@Base+0xce4>
   207f0:	b	20b84 <replaceTextTable@@Base+0xc68>
   207f4:	b	20b6c <replaceTextTable@@Base+0xc50>
   207f8:	ldr	r1, [pc, #1288]	; 20d08 <replaceTextTable@@Base+0xdec>
   207fc:	mov	r0, r6
   20800:	mov	r2, fp
   20804:	mov	r3, r9
   20808:	add	r1, pc, r1
   2080c:	bl	1d740 <reportDataError@@Base>
   20810:	b	20704 <replaceTextTable@@Base+0x7e8>
   20814:	ldr	r2, [pc, #1264]	; 20d0c <replaceTextTable@@Base+0xdf0>
   20818:	mov	ip, r0
   2081c:	mov	r1, r8
   20820:	mov	r0, r6
   20824:	add	r2, pc, r2
   20828:	str	ip, [sp, #12]
   2082c:	bl	1dc90 <getDataOperand@@Base>
   20830:	ldr	ip, [sp, #12]
   20834:	cmp	r0, #0
   20838:	beq	20704 <replaceTextTable@@Base+0x7e8>
   2083c:	ldr	lr, [sp, #24]
   20840:	ldr	r7, [sp, #44]	; 0x2c
   20844:	ldr	r5, [sp, #48]	; 0x30
   20848:	ldr	r4, [lr, #16]
   2084c:	cmp	r4, #0
   20850:	beq	20c28 <replaceTextTable@@Base+0xd0c>
   20854:	mov	r8, ip
   20858:	b	20868 <replaceTextTable@@Base+0x94c>
   2085c:	ldr	r4, [r4]
   20860:	cmp	r4, #0
   20864:	beq	20c24 <replaceTextTable@@Base+0xd08>
   20868:	ldrb	r3, [r4, #8]
   2086c:	cmp	r5, r3
   20870:	bne	2085c <replaceTextTable@@Base+0x940>
   20874:	mov	r0, r7
   20878:	add	r1, r4, #12
   2087c:	mov	r2, r5
   20880:	bl	14e78 <wmemcmp@plt>
   20884:	cmp	r0, #0
   20888:	bne	2085c <replaceTextTable@@Base+0x940>
   2088c:	ldr	r1, [pc, #1148]	; 20d10 <replaceTextTable@@Base+0xdf4>
   20890:	mov	r0, r6
   20894:	mov	r2, r5
   20898:	mov	r3, r7
   2089c:	add	r1, pc, r1
   208a0:	bl	1d740 <reportDataError@@Base>
   208a4:	b	20704 <replaceTextTable@@Base+0x7e8>
   208a8:	add	r5, sp, #308	; 0x134
   208ac:	ldr	r3, [pc, #1120]	; 20d14 <replaceTextTable@@Base+0xdf8>
   208b0:	mov	ip, r0
   208b4:	mov	r2, #0
   208b8:	mov	r0, r6
   208bc:	add	r3, pc, r3
   208c0:	mov	r1, r5
   208c4:	str	ip, [sp, #12]
   208c8:	bl	1e34c <getDataString@@Base>
   208cc:	cmp	r0, #0
   208d0:	beq	20704 <replaceTextTable@@Base+0x7e8>
   208d4:	ldr	r2, [pc, #1084]	; 20d18 <replaceTextTable@@Base+0xdfc>
   208d8:	mov	r1, r8
   208dc:	mov	r0, r6
   208e0:	add	r2, pc, r2
   208e4:	bl	1dc90 <getDataOperand@@Base>
   208e8:	ldr	ip, [sp, #12]
   208ec:	cmp	r0, #0
   208f0:	beq	20704 <replaceTextTable@@Base+0x7e8>
   208f4:	ldr	r3, [sp, #48]	; 0x30
   208f8:	ldr	r2, [sp, #44]	; 0x2c
   208fc:	cmp	r3, #1
   20900:	bne	20910 <replaceTextTable@@Base+0x9f4>
   20904:	ldr	r1, [r2]
   20908:	cmp	r1, #61	; 0x3d
   2090c:	beq	20cdc <replaceTextTable@@Base+0xdc0>
   20910:	add	r7, sp, #52	; 0x34
   20914:	mov	r0, r6
   20918:	str	ip, [sp, #12]
   2091c:	mov	r1, r7
   20920:	bl	20000 <replaceTextTable@@Base+0xe4>
   20924:	ldr	ip, [sp, #12]
   20928:	cmp	r0, #0
   2092c:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20930:	ldr	r2, [sp, #24]
   20934:	mov	r0, r4
   20938:	ldr	lr, [sp, #40]	; 0x28
   2093c:	mov	r1, r5
   20940:	ldr	r3, [sp, #36]	; 0x24
   20944:	str	r2, [sp, #4]
   20948:	mov	r2, r7
   2094c:	str	lr, [sp]
   20950:	str	ip, [sp, #12]
   20954:	bl	2045c <replaceTextTable@@Base+0x540>
   20958:	ldr	ip, [sp, #12]
   2095c:	cmp	r0, #0
   20960:	bne	20704 <replaceTextTable@@Base+0x7e8>
   20964:	b	20708 <replaceTextTable@@Base+0x7ec>
   20968:	add	r5, sp, #308	; 0x134
   2096c:	ldr	r3, [pc, #936]	; 20d1c <replaceTextTable@@Base+0xe00>
   20970:	mov	ip, r0
   20974:	mov	r2, #0
   20978:	mov	r0, r6
   2097c:	add	r3, pc, r3
   20980:	mov	r1, r5
   20984:	str	ip, [sp, #12]
   20988:	bl	1e34c <getDataString@@Base>
   2098c:	cmp	r0, #0
   20990:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20994:	ldr	r2, [sp, #24]
   20998:	mov	r0, r4
   2099c:	ldr	lr, [sp, #40]	; 0x28
   209a0:	mov	r1, r5
   209a4:	ldr	r3, [sp, #36]	; 0x24
   209a8:	str	r2, [sp, #4]
   209ac:	mov	r2, #0
   209b0:	str	lr, [sp]
   209b4:	bl	2045c <replaceTextTable@@Base+0x540>
   209b8:	ldr	ip, [sp, #12]
   209bc:	cmp	r0, #0
   209c0:	bne	20704 <replaceTextTable@@Base+0x7e8>
   209c4:	b	20708 <replaceTextTable@@Base+0x7ec>
   209c8:	add	r4, sp, #308	; 0x134
   209cc:	ldr	r2, [pc, #844]	; 20d20 <replaceTextTable@@Base+0xe04>
   209d0:	mov	r0, r6
   209d4:	add	r2, pc, r2
   209d8:	mov	r1, r4
   209dc:	bl	20200 <replaceTextTable@@Base+0x2e4>
   209e0:	cmp	r0, #0
   209e4:	beq	20704 <replaceTextTable@@Base+0x7e8>
   209e8:	mov	r0, r8
   209ec:	mov	r1, r4
   209f0:	ldr	r2, [sp, #24]
   209f4:	bl	20404 <replaceTextTable@@Base+0x4e8>
   209f8:	subs	ip, r0, #0
   209fc:	beq	20708 <replaceTextTable@@Base+0x7ec>
   20a00:	ldr	r3, [sp, #24]
   20a04:	mov	r1, #0
   20a08:	ldr	r0, [r3]
   20a0c:	bl	1ef4c <getDataItem@@Base>
   20a10:	ldr	r3, [sp, #44]	; 0x2c
   20a14:	str	r3, [r0, #16]
   20a18:	b	20704 <replaceTextTable@@Base+0x7e8>
   20a1c:	add	r4, sp, #308	; 0x134
   20a20:	ldr	r2, [pc, #764]	; 20d24 <replaceTextTable@@Base+0xe08>
   20a24:	mov	r0, r6
   20a28:	add	r2, pc, r2
   20a2c:	mov	r1, r4
   20a30:	bl	20200 <replaceTextTable@@Base+0x2e4>
   20a34:	cmp	r0, #0
   20a38:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20a3c:	mov	r0, r8
   20a40:	mov	r1, r4
   20a44:	ldr	r2, [sp, #24]
   20a48:	bl	20404 <replaceTextTable@@Base+0x4e8>
   20a4c:	subs	ip, r0, #0
   20a50:	beq	20708 <replaceTextTable@@Base+0x7ec>
   20a54:	ldr	r2, [sp, #24]
   20a58:	mov	r1, #0
   20a5c:	ldr	r0, [r2]
   20a60:	bl	1ef4c <getDataItem@@Base>
   20a64:	ldr	r3, [sp, #44]	; 0x2c
   20a68:	str	r3, [r0, #12]
   20a6c:	b	20704 <replaceTextTable@@Base+0x7e8>
   20a70:	add	r4, sp, #308	; 0x134
   20a74:	ldr	r2, [pc, #684]	; 20d28 <replaceTextTable@@Base+0xe0c>
   20a78:	mov	r0, r6
   20a7c:	add	r2, pc, r2
   20a80:	mov	r1, r4
   20a84:	bl	20200 <replaceTextTable@@Base+0x2e4>
   20a88:	cmp	r0, #0
   20a8c:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20a90:	mov	r0, r8
   20a94:	mov	r1, r4
   20a98:	ldr	r2, [sp, #24]
   20a9c:	bl	20404 <replaceTextTable@@Base+0x4e8>
   20aa0:	subs	ip, r0, #0
   20aa4:	beq	20708 <replaceTextTable@@Base+0x7ec>
   20aa8:	ldr	r1, [sp, #24]
   20aac:	ldr	r0, [r1]
   20ab0:	mov	r1, #0
   20ab4:	bl	1ef4c <getDataItem@@Base>
   20ab8:	ldr	r3, [sp, #44]	; 0x2c
   20abc:	str	r3, [r0, #8]
   20ac0:	b	20704 <replaceTextTable@@Base+0x7e8>
   20ac4:	add	r4, sp, #308	; 0x134
   20ac8:	ldr	r2, [pc, #604]	; 20d2c <replaceTextTable@@Base+0xe10>
   20acc:	mov	r0, r6
   20ad0:	add	r2, pc, r2
   20ad4:	mov	r1, r4
   20ad8:	bl	20200 <replaceTextTable@@Base+0x2e4>
   20adc:	cmp	r0, #0
   20ae0:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20ae4:	mov	r0, r8
   20ae8:	mov	r1, r4
   20aec:	ldr	r2, [sp, #24]
   20af0:	bl	20404 <replaceTextTable@@Base+0x4e8>
   20af4:	subs	ip, r0, #0
   20af8:	beq	20708 <replaceTextTable@@Base+0x7ec>
   20afc:	ldr	lr, [sp, #24]
   20b00:	mov	r1, #0
   20b04:	ldr	r0, [lr]
   20b08:	bl	1ef4c <getDataItem@@Base>
   20b0c:	ldr	r3, [sp, #44]	; 0x2c
   20b10:	str	r3, [r0, #4]
   20b14:	b	20704 <replaceTextTable@@Base+0x7e8>
   20b18:	add	r4, sp, #308	; 0x134
   20b1c:	ldr	r2, [pc, #524]	; 20d30 <replaceTextTable@@Base+0xe14>
   20b20:	mov	r0, r6
   20b24:	add	r2, pc, r2
   20b28:	mov	r1, r4
   20b2c:	bl	20200 <replaceTextTable@@Base+0x2e4>
   20b30:	cmp	r0, #0
   20b34:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20b38:	mov	r0, r8
   20b3c:	mov	r1, r4
   20b40:	ldr	r2, [sp, #24]
   20b44:	bl	20404 <replaceTextTable@@Base+0x4e8>
   20b48:	subs	ip, r0, #0
   20b4c:	beq	20708 <replaceTextTable@@Base+0x7ec>
   20b50:	ldr	r3, [sp, #24]
   20b54:	mov	r1, #0
   20b58:	ldr	r0, [r3]
   20b5c:	bl	1ef4c <getDataItem@@Base>
   20b60:	ldr	r3, [sp, #44]	; 0x2c
   20b64:	str	r3, [r0]
   20b68:	b	20704 <replaceTextTable@@Base+0x7e8>
   20b6c:	mov	r0, r6
   20b70:	ldr	r1, [sp, #24]
   20b74:	bl	1e89c <processIncludeOperands@@Base>
   20b78:	adds	ip, r0, #0
   20b7c:	movne	ip, #1
   20b80:	b	20708 <replaceTextTable@@Base+0x7ec>
   20b84:	add	fp, sp, #40	; 0x28
   20b88:	mov	r0, r6
   20b8c:	mov	r1, r8
   20b90:	ldr	r2, [sp, #20]
   20b94:	bl	1dc90 <getDataOperand@@Base>
   20b98:	cmp	r0, #0
   20b9c:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20ba0:	ldr	r0, [sp, #24]
   20ba4:	ldr	r4, [sp, #44]	; 0x2c
   20ba8:	ldr	r5, [sp, #48]	; 0x30
   20bac:	ldr	r9, [r0, #16]
   20bb0:	cmp	r9, #0
   20bb4:	bne	20bc8 <replaceTextTable@@Base+0xcac>
   20bb8:	b	20c08 <replaceTextTable@@Base+0xcec>
   20bbc:	ldr	r9, [r9]
   20bc0:	cmp	r9, #0
   20bc4:	beq	20c08 <replaceTextTable@@Base+0xcec>
   20bc8:	ldrb	r3, [r9, #8]
   20bcc:	cmp	r5, r3
   20bd0:	bne	20bbc <replaceTextTable@@Base+0xca0>
   20bd4:	mov	r0, r4
   20bd8:	add	r1, r9, #12
   20bdc:	mov	r2, r5
   20be0:	bl	14e78 <wmemcmp@plt>
   20be4:	cmp	r0, #0
   20be8:	bne	20bbc <replaceTextTable@@Base+0xca0>
   20bec:	ldr	r2, [fp]
   20bf0:	ldr	r3, [r9, #4]
   20bf4:	orr	r3, r2, r3
   20bf8:	str	r3, [fp]
   20bfc:	b	206ec <replaceTextTable@@Base+0x7d0>
   20c00:	add	fp, sp, #36	; 0x24
   20c04:	b	20b88 <replaceTextTable@@Base+0xc6c>
   20c08:	ldr	r1, [pc, #292]	; 20d34 <replaceTextTable@@Base+0xe18>
   20c0c:	mov	r0, r6
   20c10:	mov	r2, r5
   20c14:	mov	r3, r4
   20c18:	add	r1, pc, r1
   20c1c:	bl	1d740 <reportDataError@@Base>
   20c20:	b	20704 <replaceTextTable@@Base+0x7e8>
   20c24:	mov	ip, r8
   20c28:	ldr	lr, [sp, #24]
   20c2c:	mov	r2, r5
   20c30:	mov	r1, r7
   20c34:	mov	r0, r6
   20c38:	add	r3, lr, #20
   20c3c:	str	r3, [sp]
   20c40:	add	r3, lr, #16
   20c44:	str	ip, [sp, #12]
   20c48:	bl	20354 <replaceTextTable@@Base+0x438>
   20c4c:	ldr	ip, [sp, #12]
   20c50:	subs	r5, r0, #0
   20c54:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20c58:	mov	r0, r6
   20c5c:	ldr	r3, [pc, #212]	; 20d38 <replaceTextTable@@Base+0xe1c>
   20c60:	add	r6, sp, #308	; 0x134
   20c64:	mov	r2, #0
   20c68:	add	r3, pc, r3
   20c6c:	str	ip, [sp, #12]
   20c70:	mov	r1, r6
   20c74:	bl	1e34c <getDataString@@Base>
   20c78:	ldr	ip, [sp, #12]
   20c7c:	cmp	r0, #0
   20c80:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20c84:	ldrb	r3, [sp, #308]	; 0x134
   20c88:	cmp	r3, #0
   20c8c:	beq	20704 <replaceTextTable@@Base+0x7e8>
   20c90:	mov	r4, #0
   20c94:	mov	r8, ip
   20c98:	ldr	r7, [sp, #24]
   20c9c:	b	20cc0 <replaceTextTable@@Base+0xda4>
   20ca0:	ldr	r2, [r0, #12]
   20ca4:	add	r4, r4, #1
   20ca8:	ldr	r3, [r5, #4]
   20cac:	orr	r3, r2, r3
   20cb0:	str	r3, [r0, #12]
   20cb4:	ldrb	r3, [sp, #308]	; 0x134
   20cb8:	cmp	r3, r4
   20cbc:	ble	20704 <replaceTextTable@@Base+0x7e8>
   20cc0:	ldr	r0, [r6, #4]!
   20cc4:	mov	r1, r7
   20cc8:	bl	20274 <replaceTextTable@@Base+0x358>
   20ccc:	cmp	r0, #0
   20cd0:	bne	20ca0 <replaceTextTable@@Base+0xd84>
   20cd4:	mov	ip, r8
   20cd8:	b	20708 <replaceTextTable@@Base+0x7ec>
   20cdc:	add	r7, sp, #1328	; 0x530
   20ce0:	mov	r3, #0
   20ce4:	add	r7, r7, #8
   20ce8:	strb	r3, [r7, #-1284]!	; 0xfffffafc
   20cec:	b	20930 <replaceTextTable@@Base+0xa14>
   20cf0:	bl	14fbc <__stack_chk_fail@plt>
   20cf4:	andeq	sl, r1, r4, asr r9
   20cf8:	andeq	r8, r0, r8, asr #3
   20cfc:	andeq	r0, r0, r8, asr #4
   20d00:	muleq	r1, r4, r1
   20d04:	andeq	r8, r0, r8, lsr #4
   20d08:	andeq	r8, r0, ip, ror r0
   20d0c:	ldrdeq	r8, [r0], -ip
   20d10:	andeq	r8, r0, r8, lsl #1
   20d14:	andeq	r7, r0, r4, ror #31
   20d18:	andeq	r7, r0, ip, asr #31
   20d1c:	andeq	r7, r0, r4, lsr #30
   20d20:	andeq	r7, r0, r0, lsr #30
   20d24:	andeq	r7, r0, r0, asr #29
   20d28:	andeq	r7, r0, r8, asr lr
   20d2c:	strdeq	r7, [r0], -r0
   20d30:			; <UNDEFINED> instruction: 0x00007db4
   20d34:	andeq	r7, r0, r4, lsr sp
   20d38:			; <UNDEFINED> instruction: 0x00007cb0

00020d3c <startContractionCommand@@Base>:
   20d3c:	ldr	r3, [pc, #208]	; 20e14 <startContractionCommand@@Base+0xd8>
   20d40:	ldr	r2, [pc, #208]	; 20e18 <startContractionCommand@@Base+0xdc>
   20d44:	add	r3, pc, r3
   20d48:	push	{r4, r5, r6, r7, lr}
   20d4c:	mov	r4, r0
   20d50:	ldr	r5, [r3, r2]
   20d54:	sub	sp, sp, #36	; 0x24
   20d58:	ldrb	r0, [r0, #68]	; 0x44
   20d5c:	ldr	r3, [r5]
   20d60:	ands	r6, r0, #1
   20d64:	movne	r0, #1
   20d68:	str	r3, [sp, #28]
   20d6c:	beq	20d88 <startContractionCommand@@Base+0x4c>
   20d70:	ldr	r2, [sp, #28]
   20d74:	ldr	r3, [r5]
   20d78:	cmp	r2, r3
   20d7c:	bne	20e10 <startContractionCommand@@Base+0xd4>
   20d80:	add	sp, sp, #36	; 0x24
   20d84:	pop	{r4, r5, r6, r7, pc}
   20d88:	ldr	r3, [r4, #64]	; 0x40
   20d8c:	add	r7, sp, #12
   20d90:	str	r6, [sp, #8]
   20d94:	mov	r0, r7
   20d98:	str	r3, [sp, #4]
   20d9c:	bl	24d68 <initializeHostCommandOptions@@Base>
   20da0:	ldr	r1, [pc, #116]	; 20e1c <startContractionCommand@@Base+0xe0>
   20da4:	mov	r0, #7
   20da8:	ldrb	ip, [sp, #12]
   20dac:	add	r3, r4, #72	; 0x48
   20db0:	add	r1, pc, r1
   20db4:	ldr	r2, [r4, #64]	; 0x40
   20db8:	orr	ip, ip, #1
   20dbc:	str	r3, [sp, #16]
   20dc0:	strb	ip, [sp, #12]
   20dc4:	add	r3, r4, #76	; 0x4c
   20dc8:	str	r3, [sp, #20]
   20dcc:	bl	183d0 <logMessage@@Base>
   20dd0:	mov	r1, r7
   20dd4:	add	r0, sp, #4
   20dd8:	bl	24d88 <runHostCommand@@Base>
   20ddc:	cmp	r0, #0
   20de0:	movne	r0, r6
   20de4:	bne	20d70 <startContractionCommand@@Base+0x34>
   20de8:	ldr	r1, [pc, #48]	; 20e20 <startContractionCommand@@Base+0xe4>
   20dec:	mov	r0, #7
   20df0:	ldr	r2, [r4, #64]	; 0x40
   20df4:	add	r1, pc, r1
   20df8:	bl	183d0 <logMessage@@Base>
   20dfc:	ldrb	r3, [r4, #68]	; 0x44
   20e00:	mov	r0, #1
   20e04:	orr	r3, r3, r0
   20e08:	strb	r3, [r4, #68]	; 0x44
   20e0c:	b	20d70 <startContractionCommand@@Base+0x34>
   20e10:	bl	14fbc <__stack_chk_fail@plt>
   20e14:			; <UNDEFINED> instruction: 0x0001a2b4
   20e18:	andeq	r0, r0, r8, asr #4
   20e1c:	andeq	r7, r0, r0, asr #23
   20e20:	andeq	r7, r0, r4, lsr #23

00020e24 <stopContractionCommand@@Base>:
   20e24:	push	{r4, lr}
   20e28:	mov	r4, r0
   20e2c:	ldrb	r3, [r0, #68]	; 0x44
   20e30:	tst	r3, #1
   20e34:	popeq	{r4, pc}
   20e38:	ldr	r0, [r0, #72]	; 0x48
   20e3c:	bl	15124 <fclose@plt>
   20e40:	ldr	r0, [r4, #76]	; 0x4c
   20e44:	bl	15124 <fclose@plt>
   20e48:	ldr	r1, [pc, #28]	; 20e6c <stopContractionCommand@@Base+0x48>
   20e4c:	mov	r0, #7
   20e50:	ldr	r2, [r4, #64]	; 0x40
   20e54:	add	r1, pc, r1
   20e58:	bl	183d0 <logMessage@@Base>
   20e5c:	ldrb	r3, [r4, #68]	; 0x44
   20e60:	bfc	r3, #0, #1
   20e64:	strb	r3, [r4, #68]	; 0x44
   20e68:	pop	{r4, pc}
   20e6c:	andeq	r7, r0, ip, ror #22

00020e70 <compileContractionTable@@Base>:
   20e70:	ldr	r3, [pc, #836]	; 211bc <compileContractionTable@@Base+0x34c>
   20e74:	ldr	r2, [pc, #836]	; 211c0 <compileContractionTable@@Base+0x350>
   20e78:	add	r3, pc, r3
   20e7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   20e80:	sub	sp, sp, #72	; 0x48
   20e84:	ldr	r7, [r3, r2]
   20e88:	mov	r9, r0
   20e8c:	ldr	r3, [r7]
   20e90:	str	r3, [sp, #68]	; 0x44
   20e94:	bl	24ff4 <isHostCommand@@Base>
   20e98:	subs	r8, r0, #0
   20e9c:	beq	20f3c <compileContractionTable@@Base+0xcc>
   20ea0:	mov	r0, #80	; 0x50
   20ea4:	bl	150dc <malloc@plt>
   20ea8:	subs	r4, r0, #0
   20eac:	beq	21008 <compileContractionTable@@Base+0x198>
   20eb0:	mov	r1, #0
   20eb4:	mov	r2, #80	; 0x50
   20eb8:	bl	14e0c <memset@plt>
   20ebc:	mov	r0, r9
   20ec0:	bl	14e54 <__strdup@plt>
   20ec4:	cmp	r0, #0
   20ec8:	str	r0, [r4, #64]	; 0x40
   20ecc:	beq	210e8 <compileContractionTable@@Base+0x278>
   20ed0:	ldrb	r2, [r4, #68]	; 0x44
   20ed4:	mov	r3, #0
   20ed8:	mov	r0, r4
   20edc:	str	r3, [r4]
   20ee0:	bfi	r2, r3, #0, #1
   20ee4:	str	r3, [r4, #4]
   20ee8:	strb	r2, [r4, #68]	; 0x44
   20eec:	str	r3, [r4, #8]
   20ef0:	str	r3, [r4, #12]
   20ef4:	str	r3, [r4, #16]
   20ef8:	str	r3, [r4, #20]
   20efc:	str	r3, [r4, #28]
   20f00:	str	r3, [r4, #32]
   20f04:	str	r3, [r4, #36]	; 0x24
   20f08:	str	r3, [r4, #44]	; 0x2c
   20f0c:	str	r3, [r4, #48]	; 0x30
   20f10:	str	r3, [r4, #52]	; 0x34
   20f14:	bl	20d3c <startContractionCommand@@Base>
   20f18:	cmp	r0, #0
   20f1c:	beq	21094 <compileContractionTable@@Base+0x224>
   20f20:	mov	r0, r4
   20f24:	ldr	r2, [sp, #68]	; 0x44
   20f28:	ldr	r3, [r7]
   20f2c:	cmp	r2, r3
   20f30:	bne	2116c <compileContractionTable@@Base+0x2fc>
   20f34:	add	sp, sp, #72	; 0x48
   20f38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   20f3c:	ldr	r0, [pc, #640]	; 211c4 <compileContractionTable@@Base+0x354>
   20f40:	ldr	r1, [pc, #640]	; 211c8 <compileContractionTable@@Base+0x358>
   20f44:	add	r0, pc, r0
   20f48:	add	r1, pc, r1
   20f4c:	bl	1da6c <setGlobalTableVariables@@Base>
   20f50:	cmp	r0, #0
   20f54:	beq	20f24 <compileContractionTable@@Base+0xb4>
   20f58:	ldr	r6, [pc, #620]	; 211cc <compileContractionTable@@Base+0x35c>
   20f5c:	add	r5, sp, #35	; 0x23
   20f60:	mov	r3, #1
   20f64:	str	r8, [sp, #12]
   20f68:	add	r6, pc, r6
   20f6c:	str	r8, [sp, #16]
   20f70:	sub	r4, r6, #4
   20f74:	add	r6, r6, #116	; 0x74
   20f78:	str	r8, [sp, #20]
   20f7c:	str	r8, [sp, #24]
   20f80:	str	r8, [sp, #28]
   20f84:	str	r8, [sp, #36]	; 0x24
   20f88:	str	r8, [sp, #40]	; 0x28
   20f8c:	str	r8, [sp, #44]	; 0x2c
   20f90:	str	r8, [sp, #48]	; 0x30
   20f94:	str	r8, [sp, #52]	; 0x34
   20f98:	str	r8, [sp, #56]	; 0x38
   20f9c:	str	r8, [sp, #60]	; 0x3c
   20fa0:	str	r8, [sp, #64]	; 0x40
   20fa4:	str	r3, [sp, #32]
   20fa8:	ldr	r0, [r4, #4]!
   20fac:	bl	14c74 <wcslen@plt>
   20fb0:	cmp	r4, r6
   20fb4:	strb	r0, [r5, #1]!
   20fb8:	bne	20fa8 <compileContractionTable@@Base+0x138>
   20fbc:	bl	1ee58 <newDataArea@@Base>
   20fc0:	cmp	r0, #0
   20fc4:	mov	r4, r0
   20fc8:	str	r0, [sp, #12]
   20fcc:	beq	20ff4 <compileContractionTable@@Base+0x184>
   20fd0:	mov	r1, #0
   20fd4:	movw	r2, #4376	; 0x1118
   20fd8:	mov	r3, #4
   20fdc:	bl	1ee9c <allocateDataItem@@Base>
   20fe0:	cmp	r0, #0
   20fe4:	bne	21014 <compileContractionTable@@Base+0x1a4>
   20fe8:	mov	r4, #0
   20fec:	ldr	r0, [sp, #12]
   20ff0:	bl	1ee78 <destroyDataArea@@Base>
   20ff4:	ldr	r0, [sp, #16]
   20ff8:	cmp	r0, #0
   20ffc:	beq	20f20 <compileContractionTable@@Base+0xb0>
   21000:	bl	14d10 <free@plt>
   21004:	b	20f20 <compileContractionTable@@Base+0xb0>
   21008:	bl	184dc <logMallocError@@Base>
   2100c:	mov	r0, r4
   21010:	b	20f24 <compileContractionTable@@Base+0xb4>
   21014:	ldr	r5, [pc, #436]	; 211d0 <compileContractionTable@@Base+0x360>
   21018:	add	sl, sp, #12
   2101c:	ldr	r4, [pc, #432]	; 211d4 <compileContractionTable@@Base+0x364>
   21020:	add	r8, sp, #28
   21024:	add	r5, pc, r5
   21028:	add	r6, sp, #32
   2102c:	add	r4, pc, r4
   21030:	add	r5, r5, #120	; 0x78
   21034:	b	21044 <compileContractionTable@@Base+0x1d4>
   21038:	ldr	r4, [r5, #4]!
   2103c:	cmp	r4, #0
   21040:	beq	210ac <compileContractionTable@@Base+0x23c>
   21044:	mov	r0, r4
   21048:	bl	14c74 <wcslen@plt>
   2104c:	str	r6, [sp]
   21050:	mov	r1, r4
   21054:	mov	r3, r8
   21058:	mov	r2, r0
   2105c:	mov	r0, #0
   21060:	bl	20354 <replaceTextTable@@Base+0x438>
   21064:	cmp	r0, #0
   21068:	bne	21038 <compileContractionTable@@Base+0x1c8>
   2106c:	ldr	r0, [sp, #28]
   21070:	cmp	r0, #0
   21074:	beq	20fe8 <compileContractionTable@@Base+0x178>
   21078:	ldr	r3, [r0]
   2107c:	str	r3, [sp, #28]
   21080:	bl	14d10 <free@plt>
   21084:	ldr	r0, [sp, #28]
   21088:	cmp	r0, #0
   2108c:	bne	21078 <compileContractionTable@@Base+0x208>
   21090:	b	20fe8 <compileContractionTable@@Base+0x178>
   21094:	ldr	r0, [r4, #64]	; 0x40
   21098:	bl	14d10 <free@plt>
   2109c:	mov	r0, r4
   210a0:	bl	14d10 <free@plt>
   210a4:	mov	r0, #0
   210a8:	b	20f24 <compileContractionTable@@Base+0xb4>
   210ac:	ldr	r1, [pc, #292]	; 211d8 <compileContractionTable@@Base+0x368>
   210b0:	mov	r0, r9
   210b4:	mov	r2, sl
   210b8:	add	r1, pc, r1
   210bc:	bl	1e92c <processDataFile@@Base>
   210c0:	cmp	r0, #0
   210c4:	beq	210d8 <compileContractionTable@@Base+0x268>
   210c8:	b	210f0 <compileContractionTable@@Base+0x280>
   210cc:	ldr	r3, [r0]
   210d0:	str	r3, [sp, #28]
   210d4:	bl	14d10 <free@plt>
   210d8:	ldr	r0, [sp, #28]
   210dc:	cmp	r0, #0
   210e0:	bne	210cc <compileContractionTable@@Base+0x25c>
   210e4:	b	20fec <compileContractionTable@@Base+0x17c>
   210e8:	bl	184dc <logMallocError@@Base>
   210ec:	b	2109c <compileContractionTable@@Base+0x22c>
   210f0:	ldr	r3, [sp, #24]
   210f4:	cmp	r3, #0
   210f8:	bne	21170 <compileContractionTable@@Base+0x300>
   210fc:	mov	r0, #80	; 0x50
   21100:	bl	150dc <malloc@plt>
   21104:	subs	r4, r0, #0
   21108:	beq	211b4 <compileContractionTable@@Base+0x344>
   2110c:	mov	r3, #0
   21110:	ldr	r0, [sp, #12]
   21114:	str	r3, [r4]
   21118:	mov	r1, r3
   2111c:	str	r3, [r4, #4]
   21120:	str	r3, [r4, #8]
   21124:	str	r3, [r4, #12]
   21128:	str	r3, [r4, #16]
   2112c:	str	r3, [r4, #20]
   21130:	str	r3, [r4, #28]
   21134:	str	r3, [r4, #32]
   21138:	str	r3, [r4, #36]	; 0x24
   2113c:	str	r3, [r4, #44]	; 0x2c
   21140:	str	r3, [r4, #48]	; 0x30
   21144:	str	r3, [r4, #52]	; 0x34
   21148:	str	r3, [r4, #64]	; 0x40
   2114c:	bl	1ef4c <getDataItem@@Base>
   21150:	str	r0, [r4, #68]	; 0x44
   21154:	ldr	r0, [sp, #12]
   21158:	bl	1ef58 <getDataSize@@Base>
   2115c:	str	r0, [r4, #72]	; 0x48
   21160:	ldr	r0, [sp, #12]
   21164:	bl	1ee44 <resetDataArea@@Base>
   21168:	b	210d8 <compileContractionTable@@Base+0x268>
   2116c:	bl	14fbc <__stack_chk_fail@plt>
   21170:	mov	ip, #4
   21174:	ldr	r0, [sp, #12]
   21178:	lsl	r3, r3, #4
   2117c:	ldr	r2, [sp, #16]
   21180:	add	r1, sp, #8
   21184:	str	ip, [sp]
   21188:	bl	1ef60 <saveDataItem@@Base>
   2118c:	cmp	r0, #0
   21190:	beq	210d8 <compileContractionTable@@Base+0x268>
   21194:	mov	r1, r4
   21198:	ldr	r0, [sp, #12]
   2119c:	bl	1ef4c <getDataItem@@Base>
   211a0:	ldr	r2, [sp, #8]
   211a4:	ldr	r3, [sp, #24]
   211a8:	str	r2, [r0, #20]
   211ac:	str	r3, [r0, #24]
   211b0:	b	210fc <compileContractionTable@@Base+0x28c>
   211b4:	bl	184dc <logMallocError@@Base>
   211b8:	b	210d8 <compileContractionTable@@Base+0x268>
   211bc:	andeq	sl, r1, r0, lsl #3
   211c0:	andeq	r0, r0, r8, asr #4
   211c4:	andeq	r7, r0, r4, lsr #21
   211c8:	andeq	r7, r0, r8, lsr #21
   211cc:	strdeq	r9, [r1], -r8
   211d0:	andeq	r9, r1, ip, lsr r8
   211d4:	andeq	r7, r0, ip, asr #19
   211d8:			; <UNDEFINED> instruction: 0xfffff5c8

000211dc <destroyContractionTable@@Base>:
   211dc:	push	{r4, lr}
   211e0:	mov	r4, r0
   211e4:	ldr	r0, [r0]
   211e8:	cmp	r0, #0
   211ec:	beq	211fc <destroyContractionTable@@Base+0x20>
   211f0:	bl	14d10 <free@plt>
   211f4:	mov	r3, #0
   211f8:	str	r3, [r4]
   211fc:	ldr	r0, [r4, #12]
   21200:	cmp	r0, #0
   21204:	beq	21214 <destroyContractionTable@@Base+0x38>
   21208:	bl	14d10 <free@plt>
   2120c:	mov	r3, #0
   21210:	str	r3, [r4, #12]
   21214:	ldr	r0, [r4, #28]
   21218:	cmp	r0, #0
   2121c:	beq	2122c <destroyContractionTable@@Base+0x50>
   21220:	bl	14d10 <free@plt>
   21224:	mov	r3, #0
   21228:	str	r3, [r4, #28]
   2122c:	ldr	r0, [r4, #44]	; 0x2c
   21230:	cmp	r0, #0
   21234:	beq	21244 <destroyContractionTable@@Base+0x68>
   21238:	bl	14d10 <free@plt>
   2123c:	mov	r3, #0
   21240:	str	r3, [r4, #44]	; 0x2c
   21244:	ldr	r3, [r4, #64]	; 0x40
   21248:	cmp	r3, #0
   2124c:	beq	2126c <destroyContractionTable@@Base+0x90>
   21250:	mov	r0, r4
   21254:	bl	20e24 <stopContractionCommand@@Base>
   21258:	ldr	r0, [r4, #64]	; 0x40
   2125c:	bl	14d10 <free@plt>
   21260:	mov	r0, r4
   21264:	pop	{r4, lr}
   21268:	b	14d10 <free@plt>
   2126c:	ldr	r3, [r4, #72]	; 0x48
   21270:	cmp	r3, #0
   21274:	popeq	{r4, pc}
   21278:	ldr	r0, [r4, #68]	; 0x44
   2127c:	bl	14d10 <free@plt>
   21280:	mov	r0, r4
   21284:	pop	{r4, lr}
   21288:	b	14d10 <free@plt>

0002128c <ensureContractionTableExtension@@Base>:
   2128c:	ldr	r1, [pc, #4]	; 21298 <ensureContractionTableExtension@@Base+0xc>
   21290:	add	r1, pc, r1
   21294:	b	18838 <ensureFileExtension@@Base>
   21298:	andeq	r7, r0, r8, asr r7

0002129c <makeContractionTablePath@@Base>:
   2129c:	ldr	r2, [pc, #4]	; 212a8 <makeContractionTablePath@@Base+0xc>
   212a0:	add	r2, pc, r2
   212a4:	b	188d8 <makeFilePath@@Base>
   212a8:	andeq	r7, r0, r8, asr #14
   212ac:	ldr	r3, [pc, #108]	; 21320 <makeContractionTablePath@@Base+0x84>
   212b0:	push	{r4, r5}
   212b4:	add	r3, pc, r3
   212b8:	ldr	r3, [r3]
   212bc:	ldr	r3, [r3, #68]	; 0x44
   212c0:	ldr	r2, [r3, #24]
   212c4:	ldr	ip, [r3, #20]
   212c8:	subs	r2, r2, #1
   212cc:	add	ip, r3, ip
   212d0:	bmi	21308 <makeContractionTablePath@@Base+0x6c>
   212d4:	mov	r1, #0
   212d8:	add	r3, r1, r2
   212dc:	add	r3, r3, r3, lsr #31
   212e0:	asr	r3, r3, #1
   212e4:	ldr	r4, [ip, r3, lsl #4]
   212e8:	add	r5, ip, r3, lsl #4
   212ec:	cmp	r4, r0
   212f0:	addcc	r1, r3, #1
   212f4:	bcc	21300 <makeContractionTablePath@@Base+0x64>
   212f8:	sub	r2, r3, #1
   212fc:	bls	21314 <makeContractionTablePath@@Base+0x78>
   21300:	cmp	r1, r2
   21304:	ble	212d8 <makeContractionTablePath@@Base+0x3c>
   21308:	mov	r0, #0
   2130c:	pop	{r4, r5}
   21310:	bx	lr
   21314:	mov	r0, r5
   21318:	pop	{r4, r5}
   2131c:	bx	lr
   21320:	andeq	sl, r1, r4, lsl #2
   21324:	push	{r3, lr}
   21328:	bl	212ac <makeContractionTablePath@@Base+0x10>
   2132c:	cmp	r0, #0
   21330:	popeq	{r3, pc}
   21334:	ldr	r0, [r0, #8]
   21338:	cmp	r0, #0
   2133c:	popeq	{r3, pc}
   21340:	ldr	r3, [pc, #28]	; 21364 <makeContractionTablePath@@Base+0xc8>
   21344:	add	r3, pc, r3
   21348:	ldr	r3, [r3]
   2134c:	ldr	r3, [r3, #68]	; 0x44
   21350:	add	r0, r3, r0
   21354:	ldrb	r3, [r0, #17]
   21358:	cmp	r3, #0
   2135c:	moveq	r0, #0
   21360:	pop	{r3, pc}
   21364:	andeq	sl, r1, r4, ror r0
   21368:	push	{r4, lr}
   2136c:	mov	r4, r1
   21370:	bl	21324 <makeContractionTablePath@@Base+0x88>
   21374:	cmp	r0, #0
   21378:	strne	r0, [r4]
   2137c:	movne	r0, #1
   21380:	pop	{r4, pc}
   21384:	ldr	r2, [pc, #220]	; 21468 <makeContractionTablePath@@Base+0x1cc>
   21388:	ldr	r1, [pc, #220]	; 2146c <makeContractionTablePath@@Base+0x1d0>
   2138c:	add	r2, pc, r2
   21390:	push	{r4, r5, r6, r7}
   21394:	ldrb	r3, [r0]
   21398:	ldr	r2, [r2, r1]
   2139c:	cmp	r3, #0
   213a0:	ldrb	r6, [r2, #58]	; 0x3a
   213a4:	beq	21444 <makeContractionTablePath@@Base+0x1a8>
   213a8:	ldr	r1, [pc, #192]	; 21470 <makeContractionTablePath@@Base+0x1d4>
   213ac:	add	r1, pc, r1
   213b0:	ldmib	r1, {r2, r5}
   213b4:	cmp	r2, r5
   213b8:	bcs	21444 <makeContractionTablePath@@Base+0x1a8>
   213bc:	ldr	r4, [pc, #176]	; 21474 <makeContractionTablePath@@Base+0x1d8>
   213c0:	add	r2, r2, #1
   213c4:	add	r5, r5, #1
   213c8:	add	r4, pc, r4
   213cc:	b	213dc <makeContractionTablePath@@Base+0x140>
   213d0:	add	r2, r2, #1
   213d4:	cmp	r2, r5
   213d8:	beq	21450 <makeContractionTablePath@@Base+0x1b4>
   213dc:	sub	r1, r3, #96	; 0x60
   213e0:	sub	r7, r3, #32
   213e4:	cmp	r1, #31
   213e8:	sub	ip, r3, #65	; 0x41
   213ec:	mov	r1, #0
   213f0:	uxtbls	r3, r7
   213f4:	bls	2140c <makeContractionTablePath@@Base+0x170>
   213f8:	cmp	ip, #25
   213fc:	mov	r1, #0
   21400:	bhi	2140c <makeContractionTablePath@@Base+0x170>
   21404:	cmp	r6, #2
   21408:	moveq	r1, #64	; 0x40
   2140c:	add	ip, r4, r3
   21410:	sub	r3, r3, #32
   21414:	cmp	r3, #63	; 0x3f
   21418:	mov	r3, #0
   2141c:	ldrbls	r3, [ip, #-32]	; 0xffffffe0
   21420:	orrls	r3, r1, r3
   21424:	mov	r1, r2
   21428:	strb	r3, [r2, #-1]
   2142c:	ldrb	r3, [r0, #1]!
   21430:	cmp	r3, #0
   21434:	bne	213d0 <makeContractionTablePath@@Base+0x134>
   21438:	ldr	r3, [pc, #56]	; 21478 <makeContractionTablePath@@Base+0x1dc>
   2143c:	add	r3, pc, r3
   21440:	str	r2, [r3, #4]
   21444:	mov	r0, #1
   21448:	pop	{r4, r5, r6, r7}
   2144c:	bx	lr
   21450:	ldr	r3, [pc, #36]	; 2147c <makeContractionTablePath@@Base+0x1e0>
   21454:	mov	r0, #1
   21458:	add	r3, pc, r3
   2145c:	str	r1, [r3, #4]
   21460:	pop	{r4, r5, r6, r7}
   21464:	bx	lr
   21468:	andeq	r9, r1, ip, ror #24
   2146c:	muleq	r0, ip, r2
   21470:	andeq	sl, r1, ip
   21474:	andeq	r7, r0, ip, asr #20
   21478:	andeq	r9, r1, ip, ror pc
   2147c:	andeq	r9, r1, r0, ror #30
   21480:	push	{r3, r4, r5, lr}
   21484:	mov	r2, r1
   21488:	ldr	r4, [pc, #44]	; 214bc <makeContractionTablePath@@Base+0x220>
   2148c:	mov	r1, r0
   21490:	add	r4, pc, r4
   21494:	ldmib	r4, {r0, ip}
   21498:	add	r5, r0, r2
   2149c:	cmp	r5, ip
   214a0:	bls	214ac <makeContractionTablePath@@Base+0x210>
   214a4:	mov	r0, #0
   214a8:	pop	{r3, r4, r5, pc}
   214ac:	bl	150d0 <memcpy@plt>
   214b0:	str	r5, [r4, #4]
   214b4:	mov	r0, #1
   214b8:	pop	{r3, r4, r5, pc}
   214bc:	andeq	r9, r1, r8, lsr #30
   214c0:	ldr	r2, [pc, #28]	; 214e4 <makeContractionTablePath@@Base+0x248>
   214c4:	mov	r3, r0
   214c8:	add	r2, pc, r2
   214cc:	ldr	r2, [r2]
   214d0:	ldr	r2, [r2, #68]	; 0x44
   214d4:	add	r0, r2, r0
   214d8:	add	r0, r0, #1
   214dc:	ldrb	r1, [r2, r3]
   214e0:	b	21480 <makeContractionTablePath@@Base+0x1e4>
   214e4:	strdeq	r9, [r1], -r0
   214e8:	ldr	r3, [pc, #132]	; 21574 <makeContractionTablePath@@Base+0x2d8>
   214ec:	mov	r1, r0
   214f0:	ldr	r2, [pc, #128]	; 21578 <makeContractionTablePath@@Base+0x2dc>
   214f4:	add	r3, pc, r3
   214f8:	push	{r4, lr}
   214fc:	sub	sp, sp, #8
   21500:	ldr	r4, [r3, r2]
   21504:	mov	r0, sp
   21508:	ldr	r3, [r4]
   2150c:	str	r3, [sp, #4]
   21510:	bl	19b98 <isInteger@@Base>
   21514:	cmp	r0, #0
   21518:	beq	21550 <makeContractionTablePath@@Base+0x2b4>
   2151c:	ldr	r3, [sp]
   21520:	cmp	r3, #0
   21524:	ble	21568 <makeContractionTablePath@@Base+0x2cc>
   21528:	ldr	r2, [pc, #76]	; 2157c <makeContractionTablePath@@Base+0x2e0>
   2152c:	add	r2, pc, r2
   21530:	ldr	r1, [r2, #12]
   21534:	ldr	r0, [r2, #16]
   21538:	rsb	r0, r1, r0
   2153c:	cmp	r3, r0, asr #2
   21540:	bgt	21568 <makeContractionTablePath@@Base+0x2cc>
   21544:	mov	r0, #1
   21548:	add	r3, r1, r3, lsl #2
   2154c:	str	r3, [r2, #20]
   21550:	ldr	r2, [sp, #4]
   21554:	ldr	r3, [r4]
   21558:	cmp	r2, r3
   2155c:	bne	21570 <makeContractionTablePath@@Base+0x2d4>
   21560:	add	sp, sp, #8
   21564:	pop	{r4, pc}
   21568:	mov	r0, #0
   2156c:	b	21550 <makeContractionTablePath@@Base+0x2b4>
   21570:	bl	14fbc <__stack_chk_fail@plt>
   21574:	andeq	r9, r1, r4, lsl #22
   21578:	andeq	r0, r0, r8, asr #4
   2157c:	andeq	r9, r1, ip, lsl #29
   21580:	ldr	r2, [pc, #344]	; 216e0 <makeContractionTablePath@@Base+0x444>
   21584:	ldr	r1, [pc, #344]	; 216e4 <makeContractionTablePath@@Base+0x448>
   21588:	add	r2, pc, r2
   2158c:	ldr	r3, [pc, #340]	; 216e8 <makeContractionTablePath@@Base+0x44c>
   21590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21594:	sub	sp, sp, #20
   21598:	ldr	r1, [r2, r1]
   2159c:	mov	r5, r0
   215a0:	add	r3, pc, r3
   215a4:	str	r1, [sp, #4]
   215a8:	ldr	r0, [sp, #4]
   215ac:	ldr	r1, [r3, #24]
   215b0:	ldr	r2, [r0]
   215b4:	cmp	r1, #0
   215b8:	str	r2, [sp, #12]
   215bc:	beq	216d4 <makeContractionTablePath@@Base+0x438>
   215c0:	ldr	r7, [r3, #16]
   215c4:	ldr	r2, [r3, #12]
   215c8:	ldrb	r3, [r5]
   215cc:	rsb	r7, r2, r7
   215d0:	cmp	r3, #0
   215d4:	asr	r7, r7, #2
   215d8:	beq	216d4 <makeContractionTablePath@@Base+0x438>
   215dc:	cmp	r7, #0
   215e0:	beq	216d4 <makeContractionTablePath@@Base+0x438>
   215e4:	ldr	sl, [pc, #256]	; 216ec <makeContractionTablePath@@Base+0x450>
   215e8:	mov	r4, #0
   215ec:	add	r8, sp, #8
   215f0:	mov	r9, r4
   215f4:	add	sl, pc, sl
   215f8:	mvn	r6, #0
   215fc:	b	2167c <makeContractionTablePath@@Base+0x3e0>
   21600:	mov	r1, r5
   21604:	mov	r0, r8
   21608:	ldrb	r5, [fp]
   2160c:	strb	r9, [fp]
   21610:	bl	19b98 <isInteger@@Base>
   21614:	strb	r5, [fp]
   21618:	cmp	r0, #0
   2161c:	beq	216b4 <makeContractionTablePath@@Base+0x418>
   21620:	add	r5, fp, #1
   21624:	cmp	r4, #0
   21628:	ldr	r3, [sp, #8]
   2162c:	movne	r1, r6
   21630:	moveq	r1, #0
   21634:	cmp	r1, r3
   21638:	bgt	216b4 <makeContractionTablePath@@Base+0x418>
   2163c:	ldr	r0, [sl, #8]
   21640:	ldr	r1, [sl, #28]
   21644:	rsb	r1, r1, r0
   21648:	cmp	r3, r1
   2164c:	bge	216b4 <makeContractionTablePath@@Base+0x418>
   21650:	ldr	r1, [sl, #24]
   21654:	cmp	r6, r3
   21658:	mvneq	r3, #0
   2165c:	str	r3, [r1, r4, lsl #2]
   21660:	ldrb	r3, [r5]
   21664:	ldr	r6, [sp, #8]
   21668:	cmp	r3, #0
   2166c:	beq	216d4 <makeContractionTablePath@@Base+0x438>
   21670:	add	r4, r4, #1
   21674:	cmp	r4, r7
   21678:	beq	216d4 <makeContractionTablePath@@Base+0x438>
   2167c:	mov	r0, r5
   21680:	mov	r1, #44	; 0x2c
   21684:	bl	152a4 <strchr@plt>
   21688:	subs	fp, r0, #0
   2168c:	bne	21600 <makeContractionTablePath@@Base+0x364>
   21690:	mov	r0, r8
   21694:	mov	r1, r5
   21698:	bl	19b98 <isInteger@@Base>
   2169c:	cmp	r0, #0
   216a0:	beq	216b4 <makeContractionTablePath@@Base+0x418>
   216a4:	mov	r0, r5
   216a8:	bl	150e8 <strlen@plt>
   216ac:	add	r5, r5, r0
   216b0:	b	21624 <makeContractionTablePath@@Base+0x388>
   216b4:	mov	r0, #0
   216b8:	ldr	r1, [sp, #4]
   216bc:	ldr	r2, [sp, #12]
   216c0:	ldr	r3, [r1]
   216c4:	cmp	r2, r3
   216c8:	bne	216dc <makeContractionTablePath@@Base+0x440>
   216cc:	add	sp, sp, #20
   216d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   216d4:	mov	r0, #1
   216d8:	b	216b8 <makeContractionTablePath@@Base+0x41c>
   216dc:	bl	14fbc <__stack_chk_fail@plt>
   216e0:	andeq	r9, r1, r0, ror sl
   216e4:	andeq	r0, r0, r8, asr #4
   216e8:	andeq	r9, r1, r8, lsl lr
   216ec:	andeq	r9, r1, r4, asr #27
   216f0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   216f4:	mov	r5, r0
   216f8:	ldr	r3, [pc, #480]	; 218e0 <makeContractionTablePath@@Base+0x644>
   216fc:	mov	r4, #0
   21700:	add	r3, pc, r3
   21704:	ldr	r6, [r3]
   21708:	ldr	r7, [r6, #8]
   2170c:	ldr	ip, [r6]
   21710:	subs	r2, r7, #1
   21714:	bmi	21748 <makeContractionTablePath@@Base+0x4ac>
   21718:	add	r3, r4, r2
   2171c:	add	r3, r3, r3, lsr #31
   21720:	asr	r3, r3, #1
   21724:	ldr	r1, [ip, r3, lsl #4]
   21728:	add	r0, ip, r3, lsl #4
   2172c:	cmp	r1, r5
   21730:	addcc	r4, r3, #1
   21734:	bcc	21740 <makeContractionTablePath@@Base+0x4a4>
   21738:	sub	r2, r3, #1
   2173c:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   21740:	cmp	r4, r2
   21744:	ble	21718 <makeContractionTablePath@@Base+0x47c>
   21748:	ldr	r3, [r6, #4]
   2174c:	cmp	r7, r3
   21750:	beq	21840 <makeContractionTablePath@@Base+0x5a4>
   21754:	add	r0, r4, #1
   21758:	rsb	r2, r4, r7
   2175c:	lsl	r0, r0, #4
   21760:	lsl	r2, r2, #4
   21764:	sub	r7, r0, #16
   21768:	add	r0, ip, r0
   2176c:	add	r1, ip, r7
   21770:	bl	14ed8 <memmove@plt>
   21774:	ldr	r8, [r6]
   21778:	ldr	r3, [r6, #8]
   2177c:	mov	r1, #0
   21780:	add	r4, r8, r7
   21784:	mov	r2, #16
   21788:	add	r3, r3, #1
   2178c:	str	r3, [r6, #8]
   21790:	mov	r0, r4
   21794:	bl	14e0c <memset@plt>
   21798:	str	r5, [r4, #8]
   2179c:	str	r5, [r4, #4]
   217a0:	mov	r0, r5
   217a4:	str	r5, [r8, r7]
   217a8:	bl	14c98 <iswspace@plt>
   217ac:	cmp	r0, #0
   217b0:	beq	217d4 <makeContractionTablePath@@Base+0x538>
   217b4:	ldr	r3, [r4, #12]
   217b8:	orr	r3, r3, #1
   217bc:	str	r3, [r4, #12]
   217c0:	ldr	r3, [r6, #64]	; 0x40
   217c4:	cmp	r3, #0
   217c8:	beq	218ac <makeContractionTablePath@@Base+0x610>
   217cc:	mov	r0, r4
   217d0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   217d4:	mov	r0, r5
   217d8:	bl	14d1c <iswalpha@plt>
   217dc:	cmp	r0, #0
   217e0:	beq	21874 <makeContractionTablePath@@Base+0x5d8>
   217e4:	ldr	r7, [r4, #12]
   217e8:	mov	r0, r5
   217ec:	orr	r3, r7, #2
   217f0:	str	r3, [r4, #12]
   217f4:	bl	14ce0 <iswupper@plt>
   217f8:	cmp	r0, #0
   217fc:	beq	21814 <makeContractionTablePath@@Base+0x578>
   21800:	orr	r7, r7, #18
   21804:	mov	r0, r5
   21808:	str	r7, [r4, #12]
   2180c:	bl	14c80 <towlower@plt>
   21810:	str	r0, [r4, #8]
   21814:	mov	r0, r5
   21818:	bl	14ee4 <iswlower@plt>
   2181c:	cmp	r0, #0
   21820:	beq	217c0 <makeContractionTablePath@@Base+0x524>
   21824:	ldr	r3, [r4, #12]
   21828:	mov	r0, r5
   2182c:	orr	r3, r3, #32
   21830:	str	r3, [r4, #12]
   21834:	bl	151f0 <towupper@plt>
   21838:	str	r0, [r4, #4]
   2183c:	b	217c0 <makeContractionTablePath@@Base+0x524>
   21840:	cmp	r7, #0
   21844:	mov	r0, ip
   21848:	lslne	r1, r7, #5
   2184c:	lslne	r9, r7, #1
   21850:	moveq	r1, #2048	; 0x800
   21854:	moveq	r9, #128	; 0x80
   21858:	bl	14f2c <realloc@plt>
   2185c:	subs	r8, r0, #0
   21860:	beq	218d4 <makeContractionTablePath@@Base+0x638>
   21864:	ldr	r7, [r6, #8]
   21868:	mov	ip, r8
   2186c:	stm	r6, {r8, r9}
   21870:	b	21754 <makeContractionTablePath@@Base+0x4b8>
   21874:	mov	r0, r5
   21878:	bl	15058 <iswdigit@plt>
   2187c:	cmp	r0, #0
   21880:	ldrne	r3, [r4, #12]
   21884:	orrne	r3, r3, #4
   21888:	strne	r3, [r4, #12]
   2188c:	bne	217c0 <makeContractionTablePath@@Base+0x524>
   21890:	mov	r0, r5
   21894:	bl	14f5c <iswpunct@plt>
   21898:	cmp	r0, #0
   2189c:	ldrne	r3, [r4, #12]
   218a0:	orrne	r3, r3, #8
   218a4:	strne	r3, [r4, #12]
   218a8:	b	217c0 <makeContractionTablePath@@Base+0x524>
   218ac:	mov	r0, r5
   218b0:	bl	212ac <makeContractionTablePath@@Base+0x10>
   218b4:	cmp	r0, #0
   218b8:	beq	217cc <makeContractionTablePath@@Base+0x530>
   218bc:	ldr	r3, [r0, #12]
   218c0:	mov	r0, r4
   218c4:	ldr	r2, [r4, #12]
   218c8:	orr	r3, r2, r3
   218cc:	str	r3, [r4, #12]
   218d0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   218d4:	bl	184dc <logMallocError@@Base>
   218d8:	mov	r0, r8
   218dc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   218e0:			; <UNDEFINED> instruction: 0x00019cb8
   218e4:	ldr	r3, [pc, #108]	; 21958 <makeContractionTablePath@@Base+0x6bc>
   218e8:	push	{r4, r5, r6, r7, r8, lr}
   218ec:	add	r3, pc, r3
   218f0:	ldr	r4, [r3, #36]	; 0x24
   218f4:	ldr	r6, [r3, #32]
   218f8:	cmp	r4, #0
   218fc:	subne	r7, r0, #4
   21900:	addne	r6, r6, #16
   21904:	bne	21914 <makeContractionTablePath@@Base+0x678>
   21908:	b	21950 <makeContractionTablePath@@Base+0x6b4>
   2190c:	subs	r4, r4, #1
   21910:	beq	21950 <makeContractionTablePath@@Base+0x6b4>
   21914:	ldr	r5, [r7, #4]!
   21918:	mov	r0, r5
   2191c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21920:	cmp	r0, #0
   21924:	moveq	r8, r5
   21928:	ldr	r5, [r6, #4]!
   2192c:	ldrne	r8, [r0, #8]
   21930:	mov	r0, r5
   21934:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21938:	cmp	r0, #0
   2193c:	ldrne	r5, [r0, #8]
   21940:	cmp	r8, r5
   21944:	beq	2190c <makeContractionTablePath@@Base+0x670>
   21948:	mov	r0, #0
   2194c:	pop	{r4, r5, r6, r7, r8, pc}
   21950:	mov	r0, #1
   21954:	pop	{r4, r5, r6, r7, r8, pc}
   21958:	andeq	r9, r1, ip, asr #21
   2195c:	push	{r3, r4, r5, lr}
   21960:	ldr	r5, [pc, #92]	; 219c4 <makeContractionTablePath@@Base+0x728>
   21964:	add	r5, pc, r5
   21968:	ldr	r4, [r5, #20]
   2196c:	ldr	r3, [r5, #12]
   21970:	mov	r2, r4
   21974:	cmp	r4, r3
   21978:	sub	r4, r4, #4
   2197c:	bls	219b8 <makeContractionTablePath@@Base+0x71c>
   21980:	ldr	r0, [r2, #-4]
   21984:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21988:	cmp	r0, #0
   2198c:	beq	2199c <makeContractionTablePath@@Base+0x700>
   21990:	ldr	r3, [r0, #12]
   21994:	tst	r3, #8
   21998:	bne	2196c <makeContractionTablePath@@Base+0x6d0>
   2199c:	ldr	r0, [r4]
   219a0:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   219a4:	cmp	r0, #0
   219a8:	beq	219c0 <makeContractionTablePath@@Base+0x724>
   219ac:	ldr	r0, [r0, #12]
   219b0:	ands	r0, r0, #1
   219b4:	popeq	{r3, r4, r5, pc}
   219b8:	mov	r0, #1
   219bc:	pop	{r3, r4, r5, pc}
   219c0:	pop	{r3, r4, r5, pc}
   219c4:	andeq	r9, r1, r4, asr sl
   219c8:	ldr	r3, [pc, #124]	; 21a4c <makeContractionTablePath@@Base+0x7b0>
   219cc:	push	{r4, r5, r6, lr}
   219d0:	add	r3, pc, r3
   219d4:	ldr	r4, [r3, #36]	; 0x24
   219d8:	ldr	r2, [r3, #20]
   219dc:	ldr	r3, [r3, #16]
   219e0:	add	r4, r2, r4, lsl #2
   219e4:	cmp	r4, r3
   219e8:	bcs	21a24 <makeContractionTablePath@@Base+0x788>
   219ec:	ldr	r6, [pc, #92]	; 21a50 <makeContractionTablePath@@Base+0x7b4>
   219f0:	add	r6, pc, r6
   219f4:	mov	r5, r4
   219f8:	add	r4, r4, #4
   219fc:	ldr	r0, [r5]
   21a00:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21a04:	cmp	r0, #0
   21a08:	beq	21a2c <makeContractionTablePath@@Base+0x790>
   21a0c:	ldr	r3, [r0, #12]
   21a10:	tst	r3, #8
   21a14:	beq	21a2c <makeContractionTablePath@@Base+0x790>
   21a18:	ldr	r3, [r6, #16]
   21a1c:	cmp	r3, r4
   21a20:	bhi	219f4 <makeContractionTablePath@@Base+0x758>
   21a24:	mov	r0, #1
   21a28:	pop	{r4, r5, r6, pc}
   21a2c:	ldr	r0, [r5]
   21a30:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21a34:	cmp	r0, #0
   21a38:	beq	21a48 <makeContractionTablePath@@Base+0x7ac>
   21a3c:	ldr	r0, [r0, #12]
   21a40:	and	r0, r0, #1
   21a44:	pop	{r4, r5, r6, pc}
   21a48:	pop	{r4, r5, r6, pc}
   21a4c:	andeq	r9, r1, r8, ror #19
   21a50:	andeq	r9, r1, r8, asr #19
   21a54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a58:	subs	r5, r0, #0
   21a5c:	sub	sp, sp, #36	; 0x24
   21a60:	ldr	r3, [pc, #2340]	; 2238c <makeContractionTablePath@@Base+0x10f0>
   21a64:	add	r3, pc, r3
   21a68:	str	r3, [sp, #12]
   21a6c:	ble	21eb8 <makeContractionTablePath@@Base+0xc1c>
   21a70:	cmp	r5, #1
   21a74:	beq	21ec4 <makeContractionTablePath@@Base+0xc28>
   21a78:	ldr	r3, [pc, #2320]	; 22390 <makeContractionTablePath@@Base+0x10f4>
   21a7c:	add	r3, pc, r3
   21a80:	ldr	r3, [r3, #20]
   21a84:	ldr	r4, [r3]
   21a88:	mov	r0, r4
   21a8c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21a90:	ldr	r3, [pc, #2300]	; 22394 <makeContractionTablePath@@Base+0x10f8>
   21a94:	add	r3, pc, r3
   21a98:	ldr	r3, [r3, #20]
   21a9c:	cmp	r0, #0
   21aa0:	moveq	r6, r4
   21aa4:	ldr	r4, [r3, #4]
   21aa8:	ldrne	r6, [r0, #8]
   21aac:	mov	r0, r4
   21ab0:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21ab4:	movw	r3, #44917	; 0xaf75
   21ab8:	movt	r3, #61737	; 0xf129
   21abc:	ldr	r1, [pc, #2260]	; 22398 <makeContractionTablePath@@Base+0x10fc>
   21ac0:	add	r1, pc, r1
   21ac4:	ldr	r1, [r1]
   21ac8:	ldr	r1, [r1, #68]	; 0x44
   21acc:	cmp	r0, #0
   21ad0:	ldrne	r4, [r0, #8]
   21ad4:	add	r2, r4, r6, lsl #8
   21ad8:	mov	r4, #0
   21adc:	umull	r0, r3, r3, r2
   21ae0:	lsr	r3, r3, #10
   21ae4:	add	r0, r3, r3, lsl #4
   21ae8:	rsb	r3, r3, r0, lsl #6
   21aec:	rsb	r2, r3, r2
   21af0:	add	r2, r1, r2, lsl #2
   21af4:	ldr	r0, [r2, #28]
   21af8:	cmp	r0, #0
   21afc:	beq	21eb8 <makeContractionTablePath@@Base+0xc1c>
   21b00:	ldr	r3, [pc, #2196]	; 2239c <makeContractionTablePath@@Base+0x1100>
   21b04:	ldr	fp, [pc, #2196]	; 223a0 <makeContractionTablePath@@Base+0x1104>
   21b08:	add	r3, pc, r3
   21b0c:	str	r3, [sp, #4]
   21b10:	ldr	r3, [pc, #2188]	; 223a4 <makeContractionTablePath@@Base+0x1108>
   21b14:	add	fp, pc, fp
   21b18:	ldr	sl, [pc, #2184]	; 223a8 <makeContractionTablePath@@Base+0x110c>
   21b1c:	add	r3, pc, r3
   21b20:	str	r3, [sp, #8]
   21b24:	ldr	r3, [pc, #2176]	; 223ac <makeContractionTablePath@@Base+0x1110>
   21b28:	add	sl, pc, sl
   21b2c:	add	r3, pc, r3
   21b30:	str	r3, [sp, #24]
   21b34:	ldr	r3, [pc, #2164]	; 223b0 <makeContractionTablePath@@Base+0x1114>
   21b38:	add	r3, pc, r3
   21b3c:	str	r3, [sp, #16]
   21b40:	b	21b58 <makeContractionTablePath@@Base+0x8bc>
   21b44:	cmp	r5, r6
   21b48:	bge	21c4c <makeContractionTablePath@@Base+0x9b0>
   21b4c:	ldr	r0, [r0]
   21b50:	cmp	r0, #0
   21b54:	beq	21c6c <makeContractionTablePath@@Base+0x9d0>
   21b58:	ldr	r2, [fp]
   21b5c:	cmp	r5, #1
   21b60:	ldr	r2, [r2, #68]	; 0x44
   21b64:	add	r0, r2, r0
   21b68:	str	r0, [fp, #32]
   21b6c:	ldr	r2, [r0, #4]
   21b70:	ldrb	r6, [r0, #16]
   21b74:	str	r2, [fp, #40]	; 0x28
   21b78:	str	r6, [fp, #36]	; 0x24
   21b7c:	bne	21b44 <makeContractionTablePath@@Base+0x8a8>
   21b80:	ldr	r2, [sl, #20]
   21b84:	ldr	r1, [sl, #16]
   21b88:	add	r0, r2, r6, lsl #2
   21b8c:	ldr	r3, [sp, #4]
   21b90:	cmp	r0, r1
   21b94:	ldrcc	r2, [r2, r6, lsl #2]
   21b98:	movcs	r2, #32
   21b9c:	cmp	r4, #0
   21ba0:	str	r2, [r3, #44]	; 0x2c
   21ba4:	bne	21c74 <makeContractionTablePath@@Base+0x9d8>
   21ba8:	ldr	r2, [pc, #2052]	; 223b4 <makeContractionTablePath@@Base+0x1118>
   21bac:	ldr	r3, [sp, #12]
   21bb0:	ldr	r9, [r3, r2]
   21bb4:	ldrb	r2, [r9, #58]	; 0x3a
   21bb8:	cmp	r2, #0
   21bbc:	bne	21cf8 <makeContractionTablePath@@Base+0xa5c>
   21bc0:	ldr	r3, [sp, #8]
   21bc4:	ldr	r2, [r3, #32]
   21bc8:	ldr	r4, [r2, #8]
   21bcc:	cmp	r4, #0
   21bd0:	bne	21c98 <makeContractionTablePath@@Base+0x9fc>
   21bd4:	ldr	r4, [r2, #12]
   21bd8:	cmp	r4, #0
   21bdc:	bne	21cc8 <makeContractionTablePath@@Base+0xa2c>
   21be0:	ldr	r3, [sp, #16]
   21be4:	ldr	r2, [r3, #40]	; 0x28
   21be8:	sub	r2, r2, #5
   21bec:	cmp	r2, #20
   21bf0:	addls	pc, pc, r2, lsl #2
   21bf4:	b	2230c <makeContractionTablePath@@Base+0x1070>
   21bf8:	b	21e84 <makeContractionTablePath@@Base+0xbe8>
   21bfc:	b	21e84 <makeContractionTablePath@@Base+0xbe8>
   21c00:	b	21e84 <makeContractionTablePath@@Base+0xbe8>
   21c04:	b	21f60 <makeContractionTablePath@@Base+0xcc4>
   21c08:	b	21f60 <makeContractionTablePath@@Base+0xcc4>
   21c0c:	b	21f88 <makeContractionTablePath@@Base+0xcec>
   21c10:	b	21fb0 <makeContractionTablePath@@Base+0xd14>
   21c14:	b	2205c <makeContractionTablePath@@Base+0xdc0>
   21c18:	b	21f88 <makeContractionTablePath@@Base+0xcec>
   21c1c:	b	22134 <makeContractionTablePath@@Base+0xe98>
   21c20:	b	220c8 <makeContractionTablePath@@Base+0xe2c>
   21c24:	b	220f0 <makeContractionTablePath@@Base+0xe54>
   21c28:	b	22178 <makeContractionTablePath@@Base+0xedc>
   21c2c:	b	221a0 <makeContractionTablePath@@Base+0xf04>
   21c30:	b	221c8 <makeContractionTablePath@@Base+0xf2c>
   21c34:	b	221f0 <makeContractionTablePath@@Base+0xf54>
   21c38:	b	22218 <makeContractionTablePath@@Base+0xf7c>
   21c3c:	b	2225c <makeContractionTablePath@@Base+0xfc0>
   21c40:	b	222a0 <makeContractionTablePath@@Base+0x1004>
   21c44:	b	222e4 <makeContractionTablePath@@Base+0x1048>
   21c48:	b	21f14 <makeContractionTablePath@@Base+0xc78>
   21c4c:	ldr	r0, [fp, #20]
   21c50:	bl	218e4 <makeContractionTablePath@@Base+0x648>
   21c54:	cmp	r0, #0
   21c58:	bne	21c90 <makeContractionTablePath@@Base+0x9f4>
   21c5c:	ldr	r0, [fp, #32]
   21c60:	ldr	r0, [r0]
   21c64:	cmp	r0, #0
   21c68:	bne	21b58 <makeContractionTablePath@@Base+0x8bc>
   21c6c:	add	sp, sp, #36	; 0x24
   21c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21c74:	mov	r1, r6
   21c78:	cmp	r4, r1
   21c7c:	bge	21e60 <makeContractionTablePath@@Base+0xbc4>
   21c80:	ldr	r2, [pc, #1840]	; 223b8 <makeContractionTablePath@@Base+0x111c>
   21c84:	add	r2, pc, r2
   21c88:	ldr	r0, [r2, #32]
   21c8c:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   21c90:	ldr	r6, [fp, #36]	; 0x24
   21c94:	b	21b80 <makeContractionTablePath@@Base+0x8e4>
   21c98:	ldr	r0, [r3, #48]	; 0x30
   21c9c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21ca0:	cmp	r0, #0
   21ca4:	beq	21e68 <makeContractionTablePath@@Base+0xbcc>
   21ca8:	ldr	r2, [r0, #12]
   21cac:	tst	r4, r2
   21cb0:	beq	21e68 <makeContractionTablePath@@Base+0xbcc>
   21cb4:	ldr	r3, [sp, #8]
   21cb8:	ldr	r2, [r3, #32]
   21cbc:	ldr	r4, [r2, #12]
   21cc0:	cmp	r4, #0
   21cc4:	beq	21be0 <makeContractionTablePath@@Base+0x944>
   21cc8:	ldr	r3, [sp, #24]
   21ccc:	ldr	r0, [r3, #44]	; 0x2c
   21cd0:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21cd4:	cmp	r0, #0
   21cd8:	beq	21ce8 <makeContractionTablePath@@Base+0xa4c>
   21cdc:	ldr	r2, [r0, #12]
   21ce0:	tst	r4, r2
   21ce4:	bne	21be0 <makeContractionTablePath@@Base+0x944>
   21ce8:	ldr	r3, [sp, #24]
   21cec:	mov	r4, r6
   21cf0:	ldr	r0, [r3, #32]
   21cf4:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   21cf8:	ldr	r3, [sp, #4]
   21cfc:	ldr	r0, [r3, #48]	; 0x30
   21d00:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21d04:	cmp	r0, #0
   21d08:	beq	21d1c <makeContractionTablePath@@Base+0xa80>
   21d0c:	ldr	r2, [r0, #12]
   21d10:	tst	r2, #16
   21d14:	movne	r7, #2
   21d18:	bne	21d3c <makeContractionTablePath@@Base+0xaa0>
   21d1c:	ldr	r2, [pc, #1688]	; 223bc <makeContractionTablePath@@Base+0x1120>
   21d20:	add	r2, pc, r2
   21d24:	ldr	r0, [r2, #48]	; 0x30
   21d28:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21d2c:	cmp	r0, #0
   21d30:	moveq	r7, r0
   21d34:	ldrne	r2, [r0, #12]
   21d38:	ubfxne	r7, r2, #5, #1
   21d3c:	ldr	r8, [pc, #1660]	; 223c0 <makeContractionTablePath@@Base+0x1124>
   21d40:	add	r8, pc, r8
   21d44:	ldr	r1, [r8, #36]	; 0x24
   21d48:	cmp	r1, #0
   21d4c:	ble	21e54 <makeContractionTablePath@@Base+0xbb8>
   21d50:	ldr	r3, [pc, #1644]	; 223c4 <makeContractionTablePath@@Base+0x1128>
   21d54:	str	r6, [sp, #28]
   21d58:	mov	r6, r7
   21d5c:	add	r3, pc, r3
   21d60:	str	r5, [sp, #20]
   21d64:	mov	r7, r3
   21d68:	b	21dc8 <makeContractionTablePath@@Base+0xb2c>
   21d6c:	subs	r1, r0, #2
   21d70:	rsbs	r2, r1, #0
   21d74:	adcs	r2, r2, r1
   21d78:	cmp	r6, #1
   21d7c:	cmpeq	r0, #2
   21d80:	beq	21e90 <makeContractionTablePath@@Base+0xbf4>
   21d84:	cmp	r0, #1
   21d88:	cmpeq	r6, #3
   21d8c:	beq	21ea4 <makeContractionTablePath@@Base+0xc08>
   21d90:	ldrb	r1, [r9, #58]	; 0x3a
   21d94:	cmp	r1, #1
   21d98:	beq	21e24 <makeContractionTablePath@@Base+0xb88>
   21d9c:	cmp	r2, #0
   21da0:	bne	21f00 <makeContractionTablePath@@Base+0xc64>
   21da4:	cmp	r0, #0
   21da8:	movne	r6, r0
   21dac:	bne	21db8 <makeContractionTablePath@@Base+0xb1c>
   21db0:	cmp	r6, #0
   21db4:	moveq	r6, #1
   21db8:	ldr	r1, [r7, #36]	; 0x24
   21dbc:	add	r4, r4, #1
   21dc0:	cmp	r1, r4
   21dc4:	ble	21e4c <makeContractionTablePath@@Base+0xbb0>
   21dc8:	ldr	r2, [r8, #20]
   21dcc:	ldr	r5, [r2, r4, lsl #2]
   21dd0:	mov	r0, r5
   21dd4:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21dd8:	cmp	r0, #0
   21ddc:	beq	21df0 <makeContractionTablePath@@Base+0xb54>
   21de0:	ldr	r1, [r0, #12]
   21de4:	tst	r1, #16
   21de8:	movne	r0, #2
   21dec:	bne	21e04 <makeContractionTablePath@@Base+0xb68>
   21df0:	mov	r0, r5
   21df4:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21df8:	cmp	r0, #0
   21dfc:	ldrne	r0, [r0, #12]
   21e00:	ubfxne	r0, r0, #5, #1
   21e04:	cmp	r4, #0
   21e08:	bne	21d6c <makeContractionTablePath@@Base+0xad0>
   21e0c:	ldrb	r2, [r9, #58]	; 0x3a
   21e10:	cmp	r2, #1
   21e14:	bne	21da4 <makeContractionTablePath@@Base+0xb08>
   21e18:	subs	r3, r0, #2
   21e1c:	rsbs	r2, r3, #0
   21e20:	adcs	r2, r2, r3
   21e24:	cmp	r6, #1
   21e28:	movls	r2, #0
   21e2c:	andhi	r2, r2, #1
   21e30:	cmp	r2, #0
   21e34:	movne	r6, #3
   21e38:	beq	21da4 <makeContractionTablePath@@Base+0xb08>
   21e3c:	ldr	r1, [r7, #36]	; 0x24
   21e40:	add	r4, r4, #1
   21e44:	cmp	r1, r4
   21e48:	bgt	21dc8 <makeContractionTablePath@@Base+0xb2c>
   21e4c:	ldr	r6, [sp, #28]
   21e50:	ldr	r5, [sp, #20]
   21e54:	mov	r4, r6
   21e58:	cmp	r4, r1
   21e5c:	blt	21c80 <makeContractionTablePath@@Base+0x9e4>
   21e60:	mov	r6, r4
   21e64:	b	21bc0 <makeContractionTablePath@@Base+0x924>
   21e68:	ldr	r3, [sp, #8]
   21e6c:	mov	r4, r6
   21e70:	ldr	r0, [r3, #32]
   21e74:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   21e78:	bl	219c8 <makeContractionTablePath@@Base+0x72c>
   21e7c:	cmp	r0, #0
   21e80:	beq	21f6c <makeContractionTablePath@@Base+0xcd0>
   21e84:	mov	r0, #1
   21e88:	add	sp, sp, #36	; 0x24
   21e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e90:	ldr	r2, [pc, #1328]	; 223c8 <makeContractionTablePath@@Base+0x112c>
   21e94:	ldr	r5, [sp, #20]
   21e98:	add	r2, pc, r2
   21e9c:	ldr	r1, [r2, #36]	; 0x24
   21ea0:	b	21c78 <makeContractionTablePath@@Base+0x9dc>
   21ea4:	ldr	r2, [pc, #1312]	; 223cc <makeContractionTablePath@@Base+0x1130>
   21ea8:	ldr	r5, [sp, #20]
   21eac:	add	r2, pc, r2
   21eb0:	ldr	r1, [r2, #36]	; 0x24
   21eb4:	b	21c78 <makeContractionTablePath@@Base+0x9dc>
   21eb8:	mov	r0, #0
   21ebc:	add	sp, sp, #36	; 0x24
   21ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21ec4:	ldr	r3, [pc, #1284]	; 223d0 <makeContractionTablePath@@Base+0x1134>
   21ec8:	add	r3, pc, r3
   21ecc:	ldr	r3, [r3, #20]
   21ed0:	ldr	r4, [r3]
   21ed4:	mov	r0, r4
   21ed8:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21edc:	cmp	r0, #0
   21ee0:	ldrne	r0, [r0, #8]
   21ee4:	moveq	r0, r4
   21ee8:	bl	212ac <makeContractionTablePath@@Base+0x10>
   21eec:	cmp	r0, #0
   21ef0:	beq	21eb8 <makeContractionTablePath@@Base+0xc1c>
   21ef4:	ldr	r0, [r0, #4]
   21ef8:	mov	r4, #1
   21efc:	b	21af8 <makeContractionTablePath@@Base+0x85c>
   21f00:	ldr	r2, [pc, #1228]	; 223d4 <makeContractionTablePath@@Base+0x1138>
   21f04:	ldr	r5, [sp, #20]
   21f08:	add	r2, pc, r2
   21f0c:	ldr	r1, [r2, #36]	; 0x24
   21f10:	b	21c78 <makeContractionTablePath@@Base+0x9dc>
   21f14:	ldr	r4, [pc, #1212]	; 223d8 <makeContractionTablePath@@Base+0x113c>
   21f18:	add	r4, pc, r4
   21f1c:	ldr	r0, [r4, #48]	; 0x30
   21f20:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21f24:	cmp	r0, #0
   21f28:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   21f2c:	ldr	r2, [r0, #12]
   21f30:	tst	r2, #4
   21f34:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   21f38:	ldr	r0, [r4, #44]	; 0x2c
   21f3c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21f40:	cmp	r0, #0
   21f44:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   21f48:	ldr	r2, [r0, #12]
   21f4c:	tst	r2, #9
   21f50:	bne	21e84 <makeContractionTablePath@@Base+0xbe8>
   21f54:	ldr	r0, [r4, #32]
   21f58:	mov	r4, r6
   21f5c:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   21f60:	bl	2195c <makeContractionTablePath@@Base+0x6c0>
   21f64:	cmp	r0, #0
   21f68:	bne	21e78 <makeContractionTablePath@@Base+0xbdc>
   21f6c:	ldr	r3, [pc, #1128]	; 223dc <makeContractionTablePath@@Base+0x1140>
   21f70:	mov	r2, #6
   21f74:	mov	r0, #1
   21f78:	add	r3, pc, r3
   21f7c:	str	r2, [r3, #40]	; 0x28
   21f80:	add	sp, sp, #36	; 0x24
   21f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f88:	ldr	r4, [pc, #1104]	; 223e0 <makeContractionTablePath@@Base+0x1144>
   21f8c:	add	r4, pc, r4
   21f90:	ldr	r0, [r4, #48]	; 0x30
   21f94:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21f98:	cmp	r0, #0
   21f9c:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   21fa0:	ldr	r2, [r0, #12]
   21fa4:	tst	r2, #9
   21fa8:	bne	21f38 <makeContractionTablePath@@Base+0xc9c>
   21fac:	b	21f54 <makeContractionTablePath@@Base+0xcb8>
   21fb0:	ldr	r7, [pc, #1068]	; 223e4 <makeContractionTablePath@@Base+0x1148>
   21fb4:	add	r7, pc, r7
   21fb8:	ldr	r0, [r7, #48]	; 0x30
   21fbc:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   21fc0:	cmp	r0, #0
   21fc4:	beq	22050 <makeContractionTablePath@@Base+0xdb4>
   21fc8:	ldr	r2, [r0, #12]
   21fcc:	tst	r2, #9
   21fd0:	beq	22050 <makeContractionTablePath@@Base+0xdb4>
   21fd4:	ldr	r2, [r7, #48]	; 0x30
   21fd8:	cmp	r2, #45	; 0x2d
   21fdc:	beq	22050 <makeContractionTablePath@@Base+0xdb4>
   21fe0:	ldr	r0, [r7, #32]
   21fe4:	ldr	ip, [r7, #4]
   21fe8:	ldr	r1, [r7, #8]
   21fec:	ldrb	r2, [r0, #17]
   21ff0:	add	r2, ip, r2
   21ff4:	cmp	r1, r2
   21ff8:	bls	22320 <makeContractionTablePath@@Base+0x1084>
   21ffc:	ldr	r3, [r7, #36]	; 0x24
   22000:	mov	r8, r7
   22004:	ldr	r2, [r7, #20]
   22008:	add	r2, r2, r3, lsl #2
   2200c:	str	r2, [sp, #20]
   22010:	mov	r9, r2
   22014:	ldr	r3, [r8, #16]
   22018:	mov	r4, r9
   2201c:	cmp	r9, r3
   22020:	add	r9, r9, #4
   22024:	bcs	22050 <makeContractionTablePath@@Base+0xdb4>
   22028:	ldr	r0, [r4]
   2202c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22030:	cmp	r0, #0
   22034:	beq	22328 <makeContractionTablePath@@Base+0x108c>
   22038:	ldr	r3, [r0, #12]
   2203c:	tst	r3, #1
   22040:	beq	22328 <makeContractionTablePath@@Base+0x108c>
   22044:	ldr	r3, [r8, #56]	; 0x38
   22048:	cmp	r4, r3
   2204c:	bne	22014 <makeContractionTablePath@@Base+0xd78>
   22050:	ldr	r0, [r7, #32]
   22054:	mov	r4, r6
   22058:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   2205c:	ldr	r4, [pc, #900]	; 223e8 <makeContractionTablePath@@Base+0x114c>
   22060:	add	r4, pc, r4
   22064:	ldr	r0, [r4, #48]	; 0x30
   22068:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   2206c:	cmp	r0, #0
   22070:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22074:	ldr	r2, [r0, #12]
   22078:	tst	r2, #1
   2207c:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22080:	ldr	r0, [r4, #44]	; 0x2c
   22084:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22088:	cmp	r0, #0
   2208c:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22090:	ldr	r2, [r0, #12]
   22094:	tst	r2, #1
   22098:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   2209c:	ldr	r2, [r4, #52]	; 0x34
   220a0:	cmp	r2, #11
   220a4:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   220a8:	ldr	r2, [r4, #4]
   220ac:	ldr	r1, [r4, #28]
   220b0:	cmp	r2, r1
   220b4:	beq	21e84 <makeContractionTablePath@@Base+0xbe8>
   220b8:	ldrb	r2, [r2, #-1]
   220bc:	cmp	r2, #0
   220c0:	bne	21f54 <makeContractionTablePath@@Base+0xcb8>
   220c4:	b	21e84 <makeContractionTablePath@@Base+0xbe8>
   220c8:	ldr	r4, [pc, #796]	; 223ec <makeContractionTablePath@@Base+0x1150>
   220cc:	add	r4, pc, r4
   220d0:	ldr	r0, [r4, #48]	; 0x30
   220d4:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   220d8:	cmp	r0, #0
   220dc:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   220e0:	ldr	r2, [r0, #12]
   220e4:	tst	r2, #11
   220e8:	bne	21f38 <makeContractionTablePath@@Base+0xc9c>
   220ec:	b	21f54 <makeContractionTablePath@@Base+0xcb8>
   220f0:	ldr	r4, [pc, #760]	; 223f0 <makeContractionTablePath@@Base+0x1154>
   220f4:	add	r4, pc, r4
   220f8:	ldr	r0, [r4, #48]	; 0x30
   220fc:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22100:	cmp	r0, #0
   22104:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22108:	ldr	r2, [r0, #12]
   2210c:	tst	r2, #9
   22110:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22114:	ldr	r0, [r4, #44]	; 0x2c
   22118:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   2211c:	cmp	r0, #0
   22120:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22124:	ldr	r2, [r0, #12]
   22128:	tst	r2, #2
   2212c:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22130:	b	21e84 <makeContractionTablePath@@Base+0xbe8>
   22134:	ldr	r4, [pc, #696]	; 223f4 <makeContractionTablePath@@Base+0x1158>
   22138:	add	r4, pc, r4
   2213c:	ldr	r0, [r4, #48]	; 0x30
   22140:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22144:	cmp	r0, #0
   22148:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   2214c:	ldr	r2, [r0, #12]
   22150:	tst	r2, #9
   22154:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22158:	ldr	r0, [r4, #44]	; 0x2c
   2215c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22160:	cmp	r0, #0
   22164:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22168:	ldr	r2, [r0, #12]
   2216c:	tst	r2, #11
   22170:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22174:	b	21e84 <makeContractionTablePath@@Base+0xbe8>
   22178:	ldr	r4, [pc, #632]	; 223f8 <makeContractionTablePath@@Base+0x115c>
   2217c:	add	r4, pc, r4
   22180:	ldr	r0, [r4, #48]	; 0x30
   22184:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22188:	cmp	r0, #0
   2218c:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22190:	ldr	r2, [r0, #12]
   22194:	tst	r2, #11
   22198:	bne	22114 <makeContractionTablePath@@Base+0xe78>
   2219c:	b	21f54 <makeContractionTablePath@@Base+0xcb8>
   221a0:	ldr	r4, [pc, #596]	; 223fc <makeContractionTablePath@@Base+0x1160>
   221a4:	add	r4, pc, r4
   221a8:	ldr	r0, [r4, #48]	; 0x30
   221ac:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   221b0:	cmp	r0, #0
   221b4:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   221b8:	ldr	r2, [r0, #12]
   221bc:	tst	r2, #2
   221c0:	bne	22114 <makeContractionTablePath@@Base+0xe78>
   221c4:	b	21f54 <makeContractionTablePath@@Base+0xcb8>
   221c8:	ldr	r4, [pc, #560]	; 22400 <makeContractionTablePath@@Base+0x1164>
   221cc:	add	r4, pc, r4
   221d0:	ldr	r0, [r4, #48]	; 0x30
   221d4:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   221d8:	cmp	r0, #0
   221dc:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   221e0:	ldr	r2, [r0, #12]
   221e4:	tst	r2, #2
   221e8:	bne	22158 <makeContractionTablePath@@Base+0xebc>
   221ec:	b	21f54 <makeContractionTablePath@@Base+0xcb8>
   221f0:	ldr	r4, [pc, #524]	; 22404 <makeContractionTablePath@@Base+0x1168>
   221f4:	add	r4, pc, r4
   221f8:	ldr	r0, [r4, #48]	; 0x30
   221fc:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22200:	cmp	r0, #0
   22204:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22208:	ldr	r2, [r0, #12]
   2220c:	tst	r2, #2
   22210:	bne	21f38 <makeContractionTablePath@@Base+0xc9c>
   22214:	b	21f54 <makeContractionTablePath@@Base+0xcb8>
   22218:	ldr	r4, [pc, #488]	; 22408 <makeContractionTablePath@@Base+0x116c>
   2221c:	add	r4, pc, r4
   22220:	ldr	r2, [r4, #20]
   22224:	ldr	r0, [r2]
   22228:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   2222c:	cmp	r0, #0
   22230:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22234:	ldr	r2, [r0, #12]
   22238:	tst	r2, #8
   2223c:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22240:	bl	2195c <makeContractionTablePath@@Base+0x6c0>
   22244:	cmp	r0, #0
   22248:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   2224c:	bl	219c8 <makeContractionTablePath@@Base+0x72c>
   22250:	cmp	r0, #0
   22254:	bne	21f54 <makeContractionTablePath@@Base+0xcb8>
   22258:	b	21e84 <makeContractionTablePath@@Base+0xbe8>
   2225c:	ldr	r4, [pc, #424]	; 2240c <makeContractionTablePath@@Base+0x1170>
   22260:	add	r4, pc, r4
   22264:	ldr	r2, [r4, #20]
   22268:	ldr	r0, [r2]
   2226c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22270:	cmp	r0, #0
   22274:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22278:	ldr	r2, [r0, #12]
   2227c:	tst	r2, #8
   22280:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   22284:	bl	2195c <makeContractionTablePath@@Base+0x6c0>
   22288:	cmp	r0, #0
   2228c:	bne	21f54 <makeContractionTablePath@@Base+0xcb8>
   22290:	bl	219c8 <makeContractionTablePath@@Base+0x72c>
   22294:	cmp	r0, #0
   22298:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   2229c:	b	21e84 <makeContractionTablePath@@Base+0xbe8>
   222a0:	ldr	r4, [pc, #360]	; 22410 <makeContractionTablePath@@Base+0x1174>
   222a4:	add	r4, pc, r4
   222a8:	ldr	r0, [r4, #48]	; 0x30
   222ac:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   222b0:	cmp	r0, #0
   222b4:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   222b8:	ldr	r2, [r0, #12]
   222bc:	tst	r2, #9
   222c0:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   222c4:	ldr	r0, [r4, #44]	; 0x2c
   222c8:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   222cc:	cmp	r0, #0
   222d0:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   222d4:	ldr	r2, [r0, #12]
   222d8:	tst	r2, #4
   222dc:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   222e0:	b	21e84 <makeContractionTablePath@@Base+0xbe8>
   222e4:	ldr	r4, [pc, #296]	; 22414 <makeContractionTablePath@@Base+0x1178>
   222e8:	add	r4, pc, r4
   222ec:	ldr	r0, [r4, #48]	; 0x30
   222f0:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   222f4:	cmp	r0, #0
   222f8:	beq	21f54 <makeContractionTablePath@@Base+0xcb8>
   222fc:	ldr	r2, [r0, #12]
   22300:	tst	r2, #4
   22304:	bne	222c4 <makeContractionTablePath@@Base+0x1028>
   22308:	b	21f54 <makeContractionTablePath@@Base+0xcb8>
   2230c:	ldr	r2, [pc, #260]	; 22418 <makeContractionTablePath@@Base+0x117c>
   22310:	mov	r4, r6
   22314:	add	r2, pc, r2
   22318:	ldr	r0, [r2, #32]
   2231c:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   22320:	mov	r4, r6
   22324:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   22328:	ldr	r0, [r4]
   2232c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22330:	cmp	r0, #0
   22334:	beq	22358 <makeContractionTablePath@@Base+0x10bc>
   22338:	ldr	r2, [r0, #12]
   2233c:	tst	r2, #2
   22340:	bne	2236c <makeContractionTablePath@@Base+0x10d0>
   22344:	ldr	r2, [pc, #208]	; 2241c <makeContractionTablePath@@Base+0x1180>
   22348:	mov	r4, r6
   2234c:	add	r2, pc, r2
   22350:	ldr	r0, [r2, #32]
   22354:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   22358:	ldr	r2, [pc, #192]	; 22420 <makeContractionTablePath@@Base+0x1184>
   2235c:	mov	r4, r6
   22360:	add	r2, pc, r2
   22364:	ldr	r0, [r2, #32]
   22368:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   2236c:	ldr	r3, [sp, #20]
   22370:	cmp	r4, r3
   22374:	bne	21e84 <makeContractionTablePath@@Base+0xbe8>
   22378:	ldr	r2, [pc, #164]	; 22424 <makeContractionTablePath@@Base+0x1188>
   2237c:	mov	r4, r6
   22380:	add	r2, pc, r2
   22384:	ldr	r0, [r2, #32]
   22388:	b	21b4c <makeContractionTablePath@@Base+0x8b0>
   2238c:	muleq	r1, r4, r5
   22390:	andeq	r9, r1, ip, lsr r9
   22394:	andeq	r9, r1, r4, lsr #18
   22398:	strdeq	r9, [r1], -r8
   2239c:			; <UNDEFINED> instruction: 0x000198b0
   223a0:	andeq	r9, r1, r4, lsr #17
   223a4:	muleq	r1, ip, r8
   223a8:	muleq	r1, r0, r8
   223ac:	andeq	r9, r1, ip, lsl #17
   223b0:	andeq	r9, r1, r0, lsl #17
   223b4:	muleq	r0, ip, r2
   223b8:	andeq	r9, r1, r4, lsr r7
   223bc:	muleq	r1, r8, r6
   223c0:	andeq	r9, r1, r8, ror r6
   223c4:	andeq	r9, r1, ip, asr r6
   223c8:	andeq	r9, r1, r0, lsr #10
   223cc:	andeq	r9, r1, ip, lsl #10
   223d0:	strdeq	r9, [r1], -r0
   223d4:			; <UNDEFINED> instruction: 0x000194b0
   223d8:	andeq	r9, r1, r0, lsr #9
   223dc:	andeq	r9, r1, r0, asr #8
   223e0:	andeq	r9, r1, ip, lsr #8
   223e4:	andeq	r9, r1, r4, lsl #8
   223e8:	andeq	r9, r1, r8, asr r3
   223ec:	andeq	r9, r1, ip, ror #5
   223f0:	andeq	r9, r1, r4, asr #5
   223f4:	andeq	r9, r1, r0, lsl #5
   223f8:	andeq	r9, r1, ip, lsr r2
   223fc:	andeq	r9, r1, r4, lsl r2
   22400:	andeq	r9, r1, ip, ror #3
   22404:	andeq	r9, r1, r4, asr #3
   22408:	muleq	r1, ip, r1
   2240c:	andeq	r9, r1, r8, asr r1
   22410:	andeq	r9, r1, r4, lsl r1
   22414:	ldrdeq	r9, [r1], -r0
   22418:	andeq	r9, r1, r4, lsr #1
   2241c:	andeq	r9, r1, ip, rrx
   22420:	andeq	r9, r1, r8, asr r0
   22424:	andeq	r9, r1, r8, lsr r0
   22428:	ldr	r3, [pc, #184]	; 224e8 <makeContractionTablePath@@Base+0x124c>
   2242c:	ldr	r2, [pc, #184]	; 224ec <makeContractionTablePath@@Base+0x1250>
   22430:	add	r3, pc, r3
   22434:	ldr	ip, [pc, #180]	; 224f0 <makeContractionTablePath@@Base+0x1254>
   22438:	push	{r4, r5, r6, r7, lr}
   2243c:	sub	sp, sp, #12
   22440:	ldr	r4, [r3, r2]
   22444:	ldrb	r5, [r0, #16]
   22448:	ldrb	r6, [r0, #17]
   2244c:	ldr	r2, [r4]
   22450:	add	r5, r5, #4
   22454:	add	r5, r0, r5, lsl #2
   22458:	str	r2, [sp, #4]
   2245c:	add	r7, r5, #4
   22460:	ldr	r3, [r3, ip]
   22464:	ldrb	r3, [r3, #58]	; 0x3a
   22468:	cmp	r3, #2
   2246c:	beq	22494 <makeContractionTablePath@@Base+0x11f8>
   22470:	mov	r0, r7
   22474:	mov	r1, r6
   22478:	bl	21480 <makeContractionTablePath@@Base+0x1e4>
   2247c:	ldr	r2, [sp, #4]
   22480:	ldr	r3, [r4]
   22484:	cmp	r2, r3
   22488:	bne	224e4 <makeContractionTablePath@@Base+0x1248>
   2248c:	add	sp, sp, #12
   22490:	pop	{r4, r5, r6, r7, pc}
   22494:	mov	r0, r1
   22498:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   2249c:	cmp	r0, #0
   224a0:	beq	22470 <makeContractionTablePath@@Base+0x11d4>
   224a4:	ldr	r3, [r0, #12]
   224a8:	tst	r3, #16
   224ac:	beq	22470 <makeContractionTablePath@@Base+0x11d4>
   224b0:	ldrb	r3, [r5, #4]
   224b4:	add	r0, sp, #8
   224b8:	mov	r1, #1
   224bc:	orr	r3, r3, #64	; 0x40
   224c0:	strb	r3, [r0, #-5]!
   224c4:	bl	21480 <makeContractionTablePath@@Base+0x1e4>
   224c8:	cmp	r0, #0
   224cc:	beq	2247c <makeContractionTablePath@@Base+0x11e0>
   224d0:	subs	r6, r6, #1
   224d4:	moveq	r0, #1
   224d8:	beq	2247c <makeContractionTablePath@@Base+0x11e0>
   224dc:	add	r7, r5, #5
   224e0:	b	22470 <makeContractionTablePath@@Base+0x11d4>
   224e4:	bl	14fbc <__stack_chk_fail@plt>
   224e8:	andeq	r8, r1, r8, asr #23
   224ec:	andeq	r0, r0, r8, asr #4
   224f0:	muleq	r0, ip, r2
   224f4:	ldr	r3, [pc, #184]	; 225b4 <makeContractionTablePath@@Base+0x1318>
   224f8:	mov	r2, #0
   224fc:	ldr	ip, [pc, #180]	; 225b8 <makeContractionTablePath@@Base+0x131c>
   22500:	add	r3, pc, r3
   22504:	ldr	r1, [pc, #176]	; 225bc <makeContractionTablePath@@Base+0x1320>
   22508:	push	{r4, r5, r6, lr}
   2250c:	sub	sp, sp, #8
   22510:	ldr	r5, [r3, ip]
   22514:	add	r4, sp, #8
   22518:	add	r1, pc, r1
   2251c:	mov	r6, r0
   22520:	str	r2, [r4, #-8]!
   22524:	mov	r2, sp
   22528:	ldr	r3, [r5]
   2252c:	str	r3, [sp, #4]
   22530:	bl	2563c <handleBestCharacter@@Base>
   22534:	cmp	r0, #0
   22538:	bne	225a0 <makeContractionTablePath@@Base+0x1304>
   2253c:	mov	r0, r6
   22540:	bl	25554 <getCharacterWidth@@Base>
   22544:	cmp	r0, #0
   22548:	moveq	r0, #1
   2254c:	beq	22570 <makeContractionTablePath@@Base+0x12d4>
   22550:	movw	r0, #65533	; 0xfffd
   22554:	cmp	r6, r0
   22558:	beq	22588 <makeContractionTablePath@@Base+0x12ec>
   2255c:	bl	21324 <makeContractionTablePath@@Base+0x88>
   22560:	cmp	r0, #0
   22564:	beq	22588 <makeContractionTablePath@@Base+0x12ec>
   22568:	mov	r1, r6
   2256c:	bl	22428 <makeContractionTablePath@@Base+0x118c>
   22570:	ldr	r2, [sp, #4]
   22574:	ldr	r3, [r5]
   22578:	cmp	r2, r3
   2257c:	bne	225b0 <makeContractionTablePath@@Base+0x1314>
   22580:	add	sp, sp, #8
   22584:	pop	{r4, r5, r6, pc}
   22588:	mov	r0, sp
   2258c:	mov	r1, #1
   22590:	mvn	r3, #0
   22594:	strb	r3, [sp]
   22598:	bl	21480 <makeContractionTablePath@@Base+0x1e4>
   2259c:	b	22570 <makeContractionTablePath@@Base+0x12d4>
   225a0:	mov	r1, r6
   225a4:	ldr	r0, [sp]
   225a8:	bl	22428 <makeContractionTablePath@@Base+0x118c>
   225ac:	b	22570 <makeContractionTablePath@@Base+0x12d4>
   225b0:	bl	14fbc <__stack_chk_fail@plt>
   225b4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   225b8:	andeq	r0, r0, r8, asr #4
   225bc:			; <UNDEFINED> instruction: 0xffffee48

000225c0 <contractText@@Base>:
   225c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   225c4:	add	fp, sp, #32
   225c8:	sub	sp, sp, #236	; 0xec
   225cc:	ldr	r6, [pc, #4080]	; 235c4 <contractText@@Base+0x1004>
   225d0:	ldr	ip, [pc, #4080]	; 235c8 <contractText@@Base+0x1008>
   225d4:	ldr	sl, [fp, #4]
   225d8:	add	r6, pc, r6
   225dc:	str	r2, [fp, #-184]	; 0xffffff48
   225e0:	mov	r9, r3
   225e4:	ldr	r3, [pc, #4064]	; 235cc <contractText@@Base+0x100c>
   225e8:	mov	r5, r1
   225ec:	str	sl, [fp, #-188]	; 0xffffff44
   225f0:	mov	r8, r0
   225f4:	ldr	ip, [r6, ip]
   225f8:	add	r3, pc, r3
   225fc:	ldr	r4, [fp, #8]
   22600:	ldr	r2, [fp, #12]
   22604:	str	ip, [fp, #-192]	; 0xffffff40
   22608:	ldr	ip, [fp, #-184]	; 0xffffff48
   2260c:	cmn	r2, #1
   22610:	ldr	sl, [fp, #-192]	; 0xffffff40
   22614:	addne	r2, r5, r2, lsl #2
   22618:	str	r8, [r3]
   2261c:	moveq	r2, #0
   22620:	ldr	r7, [ip]
   22624:	ldr	ip, [fp, #-188]	; 0xffffff44
   22628:	ldr	r1, [sl]
   2262c:	add	r7, r5, r7, lsl #2
   22630:	str	r5, [r3, #20]
   22634:	ldr	r0, [ip]
   22638:	str	r7, [r3, #16]
   2263c:	add	r0, r9, r0
   22640:	str	r5, [r3, #12]
   22644:	str	r9, [r3, #4]
   22648:	str	r9, [r3, #28]
   2264c:	str	r1, [fp, #-40]	; 0xffffffd8
   22650:	str	r0, [r3, #8]
   22654:	str	r4, [r3, #24]
   22658:	ldr	r1, [r8, #12]
   2265c:	ldr	r3, [pc, #3948]	; 235d0 <contractText@@Base+0x1010>
   22660:	cmp	r1, #0
   22664:	add	r3, pc, r3
   22668:	str	r2, [r3, #56]	; 0x38
   2266c:	beq	226a0 <contractText@@Base+0xe0>
   22670:	ldr	sl, [r8, #28]
   22674:	cmp	sl, #0
   22678:	beq	226a0 <contractText@@Base+0xe0>
   2267c:	cmp	r4, #0
   22680:	beq	22690 <contractText@@Base+0xd0>
   22684:	ldr	r3, [r8, #52]	; 0x34
   22688:	cmp	r3, #0
   2268c:	beq	23ae0 <contractText@@Base+0x1520>
   22690:	ldr	r3, [r8, #40]	; 0x28
   22694:	rsb	r0, r9, r0
   22698:	cmp	r3, r0
   2269c:	beq	22970 <contractText@@Base+0x3b0>
   226a0:	ldr	r3, [pc, #3884]	; 235d4 <contractText@@Base+0x1014>
   226a4:	ldr	r3, [r6, r3]
   226a8:	str	r3, [fp, #-200]	; 0xffffff38
   226ac:	ldr	r3, [r8, #64]	; 0x40
   226b0:	cmp	r3, #0
   226b4:	beq	229a4 <contractText@@Base+0x3e4>
   226b8:	cmp	r4, #0
   226bc:	beq	226c8 <contractText@@Base+0x108>
   226c0:	mov	r3, #0
   226c4:	str	r3, [r4]
   226c8:	mov	r2, r5
   226cc:	mvn	r1, #0
   226d0:	add	r3, r2, #4
   226d4:	b	226e4 <contractText@@Base+0x124>
   226d8:	cmp	r4, #0
   226dc:	add	r3, r3, #4
   226e0:	bne	22d14 <contractText@@Base+0x754>
   226e4:	cmp	r7, r3
   226e8:	mov	r2, r3
   226ec:	bhi	226d8 <contractText@@Base+0x118>
   226f0:	ldr	r4, [pc, #3808]	; 235d8 <contractText@@Base+0x1018>
   226f4:	mov	r0, r8
   226f8:	add	r4, pc, r4
   226fc:	str	r3, [r4, #20]
   22700:	bl	20d3c <startContractionCommand@@Base>
   22704:	cmp	r0, #0
   22708:	beq	22d4c <contractText@@Base+0x78c>
   2270c:	sub	r9, fp, #144	; 0x90
   22710:	mov	r1, #0
   22714:	mov	r2, #96	; 0x60
   22718:	ldr	r7, [pc, #3772]	; 235dc <contractText@@Base+0x101c>
   2271c:	mov	r0, r9
   22720:	sub	r5, fp, #48	; 0x30
   22724:	bl	14e0c <memset@plt>
   22728:	ldr	ip, [r4, #56]	; 0x38
   2272c:	ldr	r3, [pc, #3756]	; 235e0 <contractText@@Base+0x1020>
   22730:	add	r7, pc, r7
   22734:	cmp	ip, #0
   22738:	ldr	sl, [fp, #-200]	; 0xffffff38
   2273c:	add	r3, pc, r3
   22740:	str	r3, [fp, #-144]	; 0xffffff70
   22744:	ldr	r3, [pc, #3736]	; 235e4 <contractText@@Base+0x1024>
   22748:	mov	r2, #1
   2274c:	ldrne	r8, [r4, #12]
   22750:	add	r3, pc, r3
   22754:	ldreq	r1, [r4, #12]
   22758:	rsbne	ip, r8, ip
   2275c:	ldrb	r4, [sl, #38]	; 0x26
   22760:	ldr	r0, [r3, #16]
   22764:	movne	r1, r8
   22768:	asrne	ip, ip, #2
   2276c:	str	r7, [fp, #-128]	; 0xffffff80
   22770:	addne	ip, ip, #1
   22774:	str	ip, [fp, #-136]	; 0xffffff78
   22778:	ldr	ip, [r3]
   2277c:	ldr	lr, [pc, #3684]	; 235e8 <contractText@@Base+0x1028>
   22780:	ldr	r7, [pc, #3684]	; 235ec <contractText@@Base+0x102c>
   22784:	strb	r2, [fp, #-140]	; 0xffffff74
   22788:	add	lr, pc, lr
   2278c:	mov	r2, #1
   22790:	add	r7, pc, r7
   22794:	str	r4, [fp, #-120]	; 0xffffff88
   22798:	str	lr, [fp, #-112]	; 0xffffff90
   2279c:	str	r7, [fp, #-80]	; 0xffffffb0
   227a0:	strb	r2, [fp, #-124]	; 0xffffff84
   227a4:	strb	r2, [fp, #-108]	; 0xffffff94
   227a8:	strb	r2, [fp, #-92]	; 0xffffffa4
   227ac:	moveq	r8, r1
   227b0:	rsb	r8, r8, r0
   227b4:	ldrb	r0, [sl, #58]	; 0x3a
   227b8:	asr	r8, r8, #2
   227bc:	str	r1, [fp, #-72]	; 0xffffffb8
   227c0:	str	r8, [fp, #-68]	; 0xffffffbc
   227c4:	ldr	r1, [pc, #3620]	; 235f0 <contractText@@Base+0x1030>
   227c8:	ldr	r8, [r3, #8]
   227cc:	ldr	r3, [r3, #28]
   227d0:	add	r1, pc, r1
   227d4:	str	r0, [fp, #-104]	; 0xffffff98
   227d8:	ldr	sl, [pc, #3604]	; 235f4 <contractText@@Base+0x1034>
   227dc:	rsb	r3, r3, r8
   227e0:	ldr	r0, [pc, #3600]	; 235f8 <contractText@@Base+0x1038>
   227e4:	str	r3, [fp, #-88]	; 0xffffffa8
   227e8:	add	sl, pc, sl
   227ec:	str	r1, [fp, #-96]	; 0xffffffa0
   227f0:	add	r0, pc, r0
   227f4:	ldr	r7, [ip, #72]	; 0x48
   227f8:	mov	r1, r7
   227fc:	bl	15250 <fputs@plt>
   22800:	cmn	r0, #1
   22804:	beq	239f8 <contractText@@Base+0x1438>
   22808:	mov	r0, #61	; 0x3d
   2280c:	mov	r1, r7
   22810:	bl	150b8 <fputc@plt>
   22814:	cmn	r0, #1
   22818:	beq	239f8 <contractText@@Base+0x1438>
   2281c:	ldrb	r1, [r9, #4]
   22820:	cmp	r1, #0
   22824:	beq	22f50 <contractText@@Base+0x990>
   22828:	cmp	r1, #1
   2282c:	bne	22d20 <contractText@@Base+0x760>
   22830:	mov	r0, r7
   22834:	mov	r2, sl
   22838:	ldr	r3, [r9, #8]
   2283c:	bl	14ddc <__fprintf_chk@plt>
   22840:	cmn	r0, #1
   22844:	beq	239f8 <contractText@@Base+0x1438>
   22848:	mov	r0, #10
   2284c:	mov	r1, r7
   22850:	bl	150b8 <fputc@plt>
   22854:	cmn	r0, #1
   22858:	beq	239f8 <contractText@@Base+0x1438>
   2285c:	ldr	r0, [r9, #16]!
   22860:	cmp	r0, #0
   22864:	bne	227f8 <contractText@@Base+0x238>
   22868:	mov	r0, r7
   2286c:	bl	151fc <fflush@plt>
   22870:	cmn	r0, #1
   22874:	beq	239f8 <contractText@@Base+0x1438>
   22878:	ldr	r7, [pc, #3452]	; 235fc <contractText@@Base+0x103c>
   2287c:	ldr	sl, [pc, #3452]	; 23600 <contractText@@Base+0x1040>
   22880:	add	r7, pc, r7
   22884:	ldr	ip, [pc, #3448]	; 23604 <contractText@@Base+0x1044>
   22888:	add	sl, pc, sl
   2288c:	str	sl, [fp, #-204]	; 0xffffff34
   22890:	ldr	r3, [r7]
   22894:	add	ip, pc, ip
   22898:	ldr	sl, [pc, #3432]	; 23608 <contractText@@Base+0x1048>
   2289c:	str	ip, [fp, #-208]	; 0xffffff30
   228a0:	ldr	r8, [r3, #76]	; 0x4c
   228a4:	add	sl, pc, sl
   228a8:	ldr	ip, [pc, #3420]	; 2360c <contractText@@Base+0x104c>
   228ac:	str	sl, [fp, #-196]	; 0xffffff3c
   228b0:	add	sl, r7, #60	; 0x3c
   228b4:	add	ip, pc, ip
   228b8:	str	r6, [fp, #-212]	; 0xffffff2c
   228bc:	str	ip, [fp, #-216]	; 0xffffff28
   228c0:	mov	r0, r8
   228c4:	mov	r1, sl
   228c8:	add	r2, r7, #64	; 0x40
   228cc:	bl	190b8 <readLine@@Base>
   228d0:	cmp	r0, #0
   228d4:	beq	23c58 <contractText@@Base+0x1698>
   228d8:	ldr	r4, [r7, #60]	; 0x3c
   228dc:	mov	r1, #61	; 0x3d
   228e0:	mov	r0, r4
   228e4:	bl	152a4 <strchr@plt>
   228e8:	subs	r5, r0, #0
   228ec:	beq	23b88 <contractText@@Base+0x15c8>
   228f0:	ldr	r1, [pc, #3352]	; 23610 <contractText@@Base+0x1050>
   228f4:	mov	r2, #0
   228f8:	ldrb	r6, [r5]
   228fc:	add	r1, pc, r1
   22900:	strb	r2, [r5]
   22904:	ldr	r9, [fp, #-196]	; 0xffffff3c
   22908:	ldr	r4, [r7, #60]	; 0x3c
   2290c:	b	2291c <contractText@@Base+0x35c>
   22910:	ldr	r1, [r9, #12]!
   22914:	cmp	r1, #0
   22918:	beq	23b58 <contractText@@Base+0x1598>
   2291c:	mov	r0, r4
   22920:	bl	1519c <strcmp@plt>
   22924:	cmp	r0, #0
   22928:	bne	22910 <contractText@@Base+0x350>
   2292c:	ldr	r2, [r9, #4]
   22930:	add	r0, r5, #1
   22934:	blx	r2
   22938:	ldrb	r4, [r9, #8]
   2293c:	strb	r6, [r5]
   22940:	and	r4, r4, #1
   22944:	cmp	r0, #0
   22948:	ldreq	ip, [fp, #-216]	; 0xffffff28
   2294c:	ldreq	r3, [ip, #60]	; 0x3c
   22950:	beq	23b6c <contractText@@Base+0x15ac>
   22954:	cmp	r4, #0
   22958:	beq	228c0 <contractText@@Base+0x300>
   2295c:	ldr	r3, [pc, #3248]	; 23614 <contractText@@Base+0x1054>
   22960:	add	r3, pc, r3
   22964:	ldr	ip, [r3, #16]
   22968:	ldr	r5, [r3, #20]
   2296c:	b	22ba0 <contractText@@Base+0x5e0>
   22970:	cmp	r2, #0
   22974:	ldr	r3, [r8, #56]	; 0x38
   22978:	rsbne	r2, r5, r2
   2297c:	mvneq	r2, #0
   22980:	asrne	r2, r2, #2
   22984:	cmp	r3, r2
   22988:	ldr	r3, [pc, #3140]	; 235d4 <contractText@@Base+0x1014>
   2298c:	beq	22e70 <contractText@@Base+0x8b0>
   22990:	ldr	r3, [r6, r3]
   22994:	str	r3, [fp, #-200]	; 0xffffff38
   22998:	ldr	r3, [r8, #64]	; 0x40
   2299c:	cmp	r3, #0
   229a0:	bne	226b8 <contractText@@Base+0xf8>
   229a4:	ldr	r1, [pc, #3180]	; 23618 <contractText@@Base+0x1058>
   229a8:	rsb	r0, r5, r7
   229ac:	mov	r3, #0
   229b0:	mov	r2, #26
   229b4:	add	r1, pc, r1
   229b8:	asr	r0, r0, #2
   229bc:	mov	r9, r3
   229c0:	str	r2, [fp, #-196]	; 0xffffff3c
   229c4:	str	r3, [fp, #-176]	; 0xffffff50
   229c8:	mov	r4, r3
   229cc:	str	r3, [fp, #-172]	; 0xffffff54
   229d0:	mov	sl, r2
   229d4:	str	r3, [fp, #-224]	; 0xffffff20
   229d8:	mov	r8, r2
   229dc:	str	r3, [fp, #-168]	; 0xffffff58
   229e0:	add	r0, r0, #7
   229e4:	str	r3, [fp, #-228]	; 0xffffff1c
   229e8:	bic	r0, r0, #7
   229ec:	str	r2, [fp, #-152]	; 0xffffff68
   229f0:	mov	r2, #30
   229f4:	ldr	r3, [pc, #3104]	; 2361c <contractText@@Base+0x105c>
   229f8:	mov	ip, r7
   229fc:	str	r2, [r1, #52]	; 0x34
   22a00:	ldr	r2, [pc, #3096]	; 23620 <contractText@@Base+0x1060>
   22a04:	add	r3, pc, r3
   22a08:	str	r3, [fp, #-204]	; 0xffffff34
   22a0c:	add	r2, pc, r2
   22a10:	ldr	r3, [pc, #3084]	; 23624 <contractText@@Base+0x1064>
   22a14:	str	r2, [fp, #-216]	; 0xffffff28
   22a18:	ldr	r2, [pc, #3080]	; 23628 <contractText@@Base+0x1068>
   22a1c:	add	r3, pc, r3
   22a20:	str	sp, [fp, #-232]	; 0xffffff18
   22a24:	sub	sp, sp, r0
   22a28:	add	r2, pc, r2
   22a2c:	str	r3, [fp, #-220]	; 0xffffff24
   22a30:	str	r2, [fp, #-240]	; 0xffffff10
   22a34:	add	r7, sp, #8
   22a38:	ldr	r3, [pc, #3052]	; 2362c <contractText@@Base+0x106c>
   22a3c:	ldr	r2, [pc, #3052]	; 23630 <contractText@@Base+0x1070>
   22a40:	add	r3, pc, r3
   22a44:	str	r3, [fp, #-256]	; 0xffffff00
   22a48:	add	r2, pc, r2
   22a4c:	str	r2, [fp, #-244]	; 0xffffff0c
   22a50:	cmp	ip, r5
   22a54:	bls	22b9c <contractText@@Base+0x5dc>
   22a58:	ldr	r3, [fp, #-204]	; 0xffffff34
   22a5c:	ldr	r0, [fp, #-204]	; 0xffffff34
   22a60:	ldr	r2, [r3, #24]
   22a64:	ldr	r1, [r0, #28]
   22a68:	cmp	r2, #0
   22a6c:	ldr	r3, [r3, #4]
   22a70:	ldrne	r0, [fp, #-204]	; 0xffffff34
   22a74:	str	r3, [fp, #-168]	; 0xffffff58
   22a78:	rsb	r3, r1, r3
   22a7c:	ldreq	r1, [r0, #12]
   22a80:	ldrne	r1, [r0, #12]
   22a84:	rsbne	r0, r1, r5
   22a88:	strne	r3, [r2, r0]
   22a8c:	cmp	r1, r5
   22a90:	ldr	r2, [fp, #-216]	; 0xffffff28
   22a94:	ldrne	r3, [r5, #-4]
   22a98:	moveq	r3, #32
   22a9c:	cmp	r4, #0
   22aa0:	str	r3, [r2, #48]	; 0x30
   22aa4:	beq	23b94 <contractText@@Base+0x15d4>
   22aa8:	cmp	r4, r5
   22aac:	bls	238a0 <contractText@@Base+0x12e0>
   22ab0:	mov	r0, #1
   22ab4:	bl	21a54 <makeContractionTablePath@@Base+0x7b8>
   22ab8:	cmp	r0, #0
   22abc:	strne	r4, [fp, #-212]	; 0xffffff2c
   22ac0:	beq	23868 <contractText@@Base+0x12a8>
   22ac4:	ldr	r6, [pc, #2920]	; 23634 <contractText@@Base+0x1074>
   22ac8:	add	r6, pc, r6
   22acc:	ldr	r3, [r6]
   22ad0:	ldr	r3, [r3, #68]	; 0x44
   22ad4:	ldr	r2, [r3, #16]
   22ad8:	cmp	r2, #0
   22adc:	beq	230cc <contractText@@Base+0xb0c>
   22ae0:	ldr	r2, [r6, #52]	; 0x34
   22ae4:	cmp	r2, #24
   22ae8:	beq	230cc <contractText@@Base+0xb0c>
   22aec:	ldr	r0, [r6, #48]	; 0x30
   22af0:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22af4:	cmp	r0, #0
   22af8:	beq	22b08 <contractText@@Base+0x548>
   22afc:	ldr	r3, [r0, #12]
   22b00:	tst	r3, #4
   22b04:	bne	230c4 <contractText@@Base+0xb04>
   22b08:	ldr	r6, [pc, #2856]	; 23638 <contractText@@Base+0x1078>
   22b0c:	add	r6, pc, r6
   22b10:	ldr	r3, [r6, #20]
   22b14:	ldr	r0, [r3]
   22b18:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   22b1c:	cmp	r0, #0
   22b20:	beq	230c4 <contractText@@Base+0xb04>
   22b24:	ldr	r3, [r0, #12]
   22b28:	tst	r3, #4
   22b2c:	ldr	r3, [r6]
   22b30:	ldr	r3, [r3, #68]	; 0x44
   22b34:	beq	230cc <contractText@@Base+0xb0c>
   22b38:	ldr	r0, [r3, #16]
   22b3c:	bl	214c0 <makeContractionTablePath@@Base+0x224>
   22b40:	cmp	r0, #0
   22b44:	bne	230d8 <contractText@@Base+0xb18>
   22b48:	ldr	r3, [pc, #2796]	; 2363c <contractText@@Base+0x107c>
   22b4c:	add	r3, pc, r3
   22b50:	ldr	r7, [r3, #16]
   22b54:	ldr	r5, [r3, #20]
   22b58:	cmp	r5, r7
   22b5c:	movcs	ip, r7
   22b60:	bcs	22b9c <contractText@@Base+0x5dc>
   22b64:	ldr	r2, [fp, #-176]	; 0xffffff50
   22b68:	cmp	r2, #0
   22b6c:	beq	22b7c <contractText@@Base+0x5bc>
   22b70:	ldr	r3, [r3, #28]
   22b74:	cmp	r2, r3
   22b78:	bhi	23e94 <contractText@@Base+0x18d4>
   22b7c:	ldr	r2, [fp, #-168]	; 0xffffff58
   22b80:	cmp	r2, #0
   22b84:	beq	23f80 <contractText@@Base+0x19c0>
   22b88:	ldr	r3, [pc, #2736]	; 23640 <contractText@@Base+0x1080>
   22b8c:	add	r3, pc, r3
   22b90:	ldr	r5, [r3, #20]
   22b94:	ldr	ip, [r3, #16]
   22b98:	str	r2, [r3, #4]
   22b9c:	ldr	sp, [fp, #-232]	; 0xffffff18
   22ba0:	cmp	r5, ip
   22ba4:	bcc	23804 <contractText@@Base+0x1244>
   22ba8:	ldr	r3, [pc, #2708]	; 23644 <contractText@@Base+0x1084>
   22bac:	add	r3, pc, r3
   22bb0:	ldr	r6, [r3, #12]
   22bb4:	ldr	r8, [pc, #2700]	; 23648 <contractText@@Base+0x1088>
   22bb8:	rsb	r7, r6, ip
   22bbc:	add	r8, pc, r8
   22bc0:	asr	r7, r7, #2
   22bc4:	ldr	r5, [r8]
   22bc8:	ldr	r3, [r5, #16]
   22bcc:	cmp	r7, r3
   22bd0:	bhi	22f1c <contractText@@Base+0x95c>
   22bd4:	ldr	r0, [r5, #12]
   22bd8:	mov	r1, r6
   22bdc:	mov	r2, r7
   22be0:	bl	14db8 <wmemcpy@plt>
   22be4:	ldr	r3, [pc, #2656]	; 2364c <contractText@@Base+0x108c>
   22be8:	mov	r4, r5
   22bec:	str	r7, [r5, #20]
   22bf0:	add	r3, pc, r3
   22bf4:	ldr	r3, [r3, #20]
   22bf8:	rsb	r6, r6, r3
   22bfc:	asr	r6, r6, #2
   22c00:	str	r6, [r5, #24]
   22c04:	ldr	r8, [pc, #2628]	; 23650 <contractText@@Base+0x1090>
   22c08:	ldr	r3, [r4, #32]
   22c0c:	add	r8, pc, r8
   22c10:	ldr	r7, [r8, #28]
   22c14:	ldr	r5, [r8, #4]
   22c18:	rsb	r5, r7, r5
   22c1c:	cmp	r5, r3
   22c20:	bhi	22e08 <contractText@@Base+0x848>
   22c24:	ldr	r0, [r4, #28]
   22c28:	mov	r1, r7
   22c2c:	mov	r2, r5
   22c30:	bl	150d0 <memcpy@plt>
   22c34:	ldr	r3, [pc, #2584]	; 23654 <contractText@@Base+0x1094>
   22c38:	str	r5, [r4, #36]	; 0x24
   22c3c:	add	r3, pc, r3
   22c40:	ldr	r3, [r3, #8]
   22c44:	rsb	r7, r7, r3
   22c48:	str	r7, [r4, #40]	; 0x28
   22c4c:	ldr	sl, [pc, #2564]	; 23658 <contractText@@Base+0x1098>
   22c50:	add	sl, pc, sl
   22c54:	ldr	r8, [sl, #24]
   22c58:	ldr	r5, [sl, #12]
   22c5c:	cmp	r8, #0
   22c60:	streq	r8, [r4, #52]	; 0x34
   22c64:	beq	22c94 <contractText@@Base+0x6d4>
   22c68:	ldr	r7, [sl, #16]
   22c6c:	ldr	r3, [r4, #48]	; 0x30
   22c70:	rsb	r7, r5, r7
   22c74:	asr	r7, r7, #2
   22c78:	cmp	r7, r3
   22c7c:	bhi	22e3c <contractText@@Base+0x87c>
   22c80:	ldr	r0, [r4, #44]	; 0x2c
   22c84:	mov	r1, r8
   22c88:	lsl	r2, r7, #2
   22c8c:	bl	150d0 <memcpy@plt>
   22c90:	str	r7, [r4, #52]	; 0x34
   22c94:	ldr	r3, [pc, #2496]	; 2365c <contractText@@Base+0x109c>
   22c98:	ldr	r2, [pc, #2496]	; 23660 <contractText@@Base+0x10a0>
   22c9c:	add	r3, pc, r3
   22ca0:	ldr	sl, [fp, #-200]	; 0xffffff38
   22ca4:	add	r2, pc, r2
   22ca8:	ldr	r3, [r3, #56]	; 0x38
   22cac:	ldrb	r1, [sl, #38]	; 0x26
   22cb0:	cmp	r3, #0
   22cb4:	ldr	r6, [r2, #20]
   22cb8:	rsbne	r3, r5, r3
   22cbc:	ldr	r9, [r2, #28]
   22cc0:	mvneq	r3, #0
   22cc4:	strb	r1, [r4, #60]	; 0x3c
   22cc8:	asrne	r3, r3, #2
   22ccc:	str	r3, [r4, #56]	; 0x38
   22cd0:	ldr	r3, [r2, #4]
   22cd4:	ldrb	r0, [sl, #58]	; 0x3a
   22cd8:	strb	r0, [r4, #61]	; 0x3d
   22cdc:	ldr	ip, [fp, #-184]	; 0xffffff48
   22ce0:	rsb	r5, r5, r6
   22ce4:	ldr	sl, [fp, #-188]	; 0xffffff44
   22ce8:	rsb	r9, r9, r3
   22cec:	asr	r5, r5, #2
   22cf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22cf4:	str	r5, [ip]
   22cf8:	ldr	ip, [fp, #-192]	; 0xffffff40
   22cfc:	str	r9, [sl]
   22d00:	ldr	r3, [ip]
   22d04:	cmp	r2, r3
   22d08:	bne	2409c <contractText@@Base+0x1adc>
   22d0c:	sub	sp, fp, #32
   22d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22d14:	rsb	r3, r5, r2
   22d18:	str	r1, [r4, r3]
   22d1c:	b	226d0 <contractText@@Base+0x110>
   22d20:	ldr	r2, [pc, #2364]	; 23664 <contractText@@Base+0x10a4>
   22d24:	mov	r3, r1
   22d28:	ldr	ip, [r9]
   22d2c:	mov	r0, #4
   22d30:	add	r2, pc, r2
   22d34:	ldr	r1, [pc, #2348]	; 23668 <contractText@@Base+0x10a8>
   22d38:	ldr	r2, [r2]
   22d3c:	add	r1, pc, r1
   22d40:	ldr	r2, [r2, #64]	; 0x40
   22d44:	str	ip, [sp]
   22d48:	bl	183d0 <logMessage@@Base>
   22d4c:	ldr	r9, [pc, #2328]	; 2366c <contractText@@Base+0x10ac>
   22d50:	add	r9, pc, r9
   22d54:	ldr	r0, [r9]
   22d58:	bl	20e24 <stopContractionCommand@@Base>
   22d5c:	ldr	r5, [r9, #12]
   22d60:	ldr	r7, [r9, #16]
   22d64:	ldr	r2, [r9, #28]
   22d68:	cmp	r5, r7
   22d6c:	str	r5, [r9, #20]
   22d70:	str	r2, [r9, #4]
   22d74:	movcs	r6, r5
   22d78:	movcs	ip, r7
   22d7c:	bcs	22bb4 <contractText@@Base+0x5f4>
   22d80:	ldr	r3, [r9, #8]
   22d84:	cmp	r2, r3
   22d88:	bcs	23ee4 <contractText@@Base+0x1924>
   22d8c:	ldr	r3, [pc, #2268]	; 23670 <contractText@@Base+0x10b0>
   22d90:	mov	r8, r2
   22d94:	mov	r4, r9
   22d98:	ldr	r6, [r6, r3]
   22d9c:	b	22db4 <contractText@@Base+0x7f4>
   22da0:	ldr	r8, [r4, #4]
   22da4:	ldr	r3, [r4, #8]
   22da8:	cmp	r8, r3
   22dac:	bcs	22f9c <contractText@@Base+0x9dc>
   22db0:	ldr	r2, [r4, #28]
   22db4:	ldr	r3, [r9, #24]
   22db8:	rsb	r2, r2, r8
   22dbc:	cmp	r3, #0
   22dc0:	ldrne	r1, [r9, #12]
   22dc4:	rsbne	r1, r1, r5
   22dc8:	add	r5, r5, #4
   22dcc:	strne	r2, [r3, r1]
   22dd0:	add	r3, r8, #1
   22dd4:	ldr	r1, [r5, #-4]
   22dd8:	ldr	r0, [r6]
   22ddc:	str	r5, [r4, #20]
   22de0:	str	r3, [r4, #4]
   22de4:	bl	1fd80 <convertCharacterToDots@@Base>
   22de8:	ldr	r5, [r4, #20]
   22dec:	ldr	r7, [r4, #16]
   22df0:	cmp	r5, r7
   22df4:	strb	r0, [r8]
   22df8:	bcc	22da0 <contractText@@Base+0x7e0>
   22dfc:	ldr	r6, [r4, #12]
   22e00:	mov	ip, r7
   22e04:	b	22bb4 <contractText@@Base+0x5f4>
   22e08:	orr	r6, r5, #127	; 0x7f
   22e0c:	mov	r0, r6
   22e10:	bl	150dc <malloc@plt>
   22e14:	subs	r9, r0, #0
   22e18:	beq	23e60 <contractText@@Base+0x18a0>
   22e1c:	ldr	r0, [r4, #28]
   22e20:	cmp	r0, #0
   22e24:	beq	22e2c <contractText@@Base+0x86c>
   22e28:	bl	14d10 <free@plt>
   22e2c:	mov	r0, r9
   22e30:	str	r9, [r4, #28]
   22e34:	str	r6, [r4, #32]
   22e38:	b	22c28 <contractText@@Base+0x668>
   22e3c:	orr	r6, r7, #127	; 0x7f
   22e40:	lsl	r0, r6, #2
   22e44:	bl	150dc <malloc@plt>
   22e48:	subs	r9, r0, #0
   22e4c:	beq	23b44 <contractText@@Base+0x1584>
   22e50:	ldr	r0, [r4, #44]	; 0x2c
   22e54:	cmp	r0, #0
   22e58:	beq	22e60 <contractText@@Base+0x8a0>
   22e5c:	bl	14d10 <free@plt>
   22e60:	mov	r0, r9
   22e64:	str	r9, [r4, #44]	; 0x2c
   22e68:	str	r6, [r4, #48]	; 0x30
   22e6c:	b	22c84 <contractText@@Base+0x6c4>
   22e70:	ldr	r3, [r6, r3]
   22e74:	ldrb	r2, [r8, #60]	; 0x3c
   22e78:	str	r3, [fp, #-200]	; 0xffffff38
   22e7c:	ldrb	r3, [r3, #38]	; 0x26
   22e80:	cmp	r2, r3
   22e84:	bne	226ac <contractText@@Base+0xec>
   22e88:	ldr	ip, [fp, #-200]	; 0xffffff38
   22e8c:	ldrb	r2, [r8, #61]	; 0x3d
   22e90:	ldrb	r3, [ip, #58]	; 0x3a
   22e94:	cmp	r2, r3
   22e98:	bne	226ac <contractText@@Base+0xec>
   22e9c:	rsb	r2, r5, r7
   22ea0:	ldr	r3, [r8, #20]
   22ea4:	asr	r2, r2, #2
   22ea8:	cmp	r2, r3
   22eac:	bne	226ac <contractText@@Base+0xec>
   22eb0:	mov	r0, r5
   22eb4:	bl	14e78 <wmemcmp@plt>
   22eb8:	cmp	r0, #0
   22ebc:	bne	226ac <contractText@@Base+0xec>
   22ec0:	ldr	r3, [pc, #1964]	; 23674 <contractText@@Base+0x10b4>
   22ec4:	cmp	r4, #0
   22ec8:	ldr	r6, [r8, #24]
   22ecc:	add	r3, pc, r3
   22ed0:	add	r6, r5, r6, lsl #2
   22ed4:	str	r6, [r3, #20]
   22ed8:	beq	22ef4 <contractText@@Base+0x934>
   22edc:	ldr	r2, [r8, #52]	; 0x34
   22ee0:	mov	r0, r4
   22ee4:	ldr	r1, [r8, #44]	; 0x2c
   22ee8:	lsl	r2, r2, #2
   22eec:	bl	150d0 <memcpy@plt>
   22ef0:	ldr	sl, [r8, #28]
   22ef4:	ldr	r2, [r8, #36]	; 0x24
   22ef8:	mov	r1, sl
   22efc:	ldr	r3, [pc, #1908]	; 23678 <contractText@@Base+0x10b8>
   22f00:	mov	r0, r9
   22f04:	add	r4, r9, r2
   22f08:	add	r3, pc, r3
   22f0c:	str	r4, [r3, #4]
   22f10:	bl	150d0 <memcpy@plt>
   22f14:	mov	r3, r4
   22f18:	b	22cdc <contractText@@Base+0x71c>
   22f1c:	orr	r4, r7, #127	; 0x7f
   22f20:	lsl	r0, r4, #2
   22f24:	bl	150dc <malloc@plt>
   22f28:	subs	r9, r0, #0
   22f2c:	beq	23eec <contractText@@Base+0x192c>
   22f30:	ldr	r0, [r5, #12]
   22f34:	cmp	r0, #0
   22f38:	beq	22f40 <contractText@@Base+0x980>
   22f3c:	bl	14d10 <free@plt>
   22f40:	mov	r0, r9
   22f44:	str	r9, [r5, #12]
   22f48:	str	r4, [r5, #16]
   22f4c:	b	22bd8 <contractText@@Base+0x618>
   22f50:	ldr	r8, [r9, #12]
   22f54:	ldr	r4, [r9, #8]
   22f58:	add	r8, r4, r8, lsl #2
   22f5c:	cmp	r4, r8
   22f60:	bcc	22f84 <contractText@@Base+0x9c4>
   22f64:	b	22848 <contractText@@Base+0x288>
   22f68:	mov	r0, r5
   22f6c:	mov	r1, r7
   22f70:	bl	15250 <fputs@plt>
   22f74:	cmn	r0, #1
   22f78:	beq	239f8 <contractText@@Base+0x1438>
   22f7c:	cmp	r8, r4
   22f80:	bls	22848 <contractText@@Base+0x288>
   22f84:	ldr	r0, [r4], #4
   22f88:	mov	r1, r5
   22f8c:	bl	241e0 <convertWcharToUtf8@@Base>
   22f90:	cmp	r0, #0
   22f94:	bne	22f68 <contractText@@Base+0x9a8>
   22f98:	b	22d4c <contractText@@Base+0x78c>
   22f9c:	ldr	r3, [r4, #28]
   22fa0:	rsb	r8, r3, r8
   22fa4:	ldr	r2, [pc, #1744]	; 2367c <contractText@@Base+0x10bc>
   22fa8:	mov	r0, #1
   22fac:	ldr	r4, [pc, #1740]	; 23680 <contractText@@Base+0x10c0>
   22fb0:	add	r2, pc, r2
   22fb4:	ldr	r6, [pc, #1736]	; 23684 <contractText@@Base+0x10c4>
   22fb8:	add	r4, pc, r4
   22fbc:	ldr	sl, [pc, #1732]	; 23688 <contractText@@Base+0x10c8>
   22fc0:	ldr	r3, [r2, #24]
   22fc4:	add	r6, pc, r6
   22fc8:	ldr	r9, [pc, #1724]	; 2368c <contractText@@Base+0x10cc>
   22fcc:	add	sl, pc, sl
   22fd0:	cmp	r3, #0
   22fd4:	ldr	r7, [r4, #20]
   22fd8:	add	r9, pc, r9
   22fdc:	ldrne	r2, [r2, #12]
   22fe0:	rsbne	r2, r2, r5
   22fe4:	strne	r8, [r3, r2]
   22fe8:	ldr	r8, [pc, #1696]	; 23690 <contractText@@Base+0x10d0>
   22fec:	add	r8, pc, r8
   22ff0:	cmp	r0, #0
   22ff4:	bne	23030 <contractText@@Base+0xa70>
   22ff8:	ldr	r3, [r4, #16]
   22ffc:	add	r7, r7, #4
   23000:	str	r7, [r4, #20]
   23004:	cmp	r7, r3
   23008:	beq	230a8 <contractText@@Base+0xae8>
   2300c:	ldr	r3, [r4, #24]
   23010:	cmp	r3, #0
   23014:	beq	22ff0 <contractText@@Base+0xa30>
   23018:	ldr	r2, [r4, #12]
   2301c:	cmp	r0, #0
   23020:	mvn	r1, #0
   23024:	rsb	r2, r2, r7
   23028:	str	r1, [r3, r2]
   2302c:	beq	22ff8 <contractText@@Base+0xa38>
   23030:	ldr	r0, [r7]
   23034:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23038:	cmp	r0, #0
   2303c:	beq	23054 <contractText@@Base+0xa94>
   23040:	ldr	r3, [r0, #12]
   23044:	tst	r3, #1
   23048:	ldrne	r7, [r8, #20]
   2304c:	movne	r0, #1
   23050:	bne	22ff8 <contractText@@Base+0xa38>
   23054:	ldr	r3, [r6, #56]	; 0x38
   23058:	cmp	r3, #0
   2305c:	beq	230bc <contractText@@Base+0xafc>
   23060:	cmp	r5, r3
   23064:	bhi	230bc <contractText@@Base+0xafc>
   23068:	ldr	r7, [r6, #20]
   2306c:	cmp	r3, r7
   23070:	movcc	r0, #0
   23074:	bcc	22ff8 <contractText@@Base+0xa38>
   23078:	mov	r5, r7
   2307c:	ldr	r3, [sl, #24]
   23080:	mov	r7, r5
   23084:	ldr	r1, [sl, #4]
   23088:	mov	r0, #0
   2308c:	cmp	r3, #0
   23090:	ldr	r2, [sl, #28]
   23094:	rsb	r2, r2, r1
   23098:	ldrne	r1, [sl, #12]
   2309c:	rsbne	r1, r1, r5
   230a0:	strne	r2, [r3, r1]
   230a4:	b	22ff8 <contractText@@Base+0xa38>
   230a8:	cmp	r0, #0
   230ac:	ldr	r6, [r4, #12]
   230b0:	mov	ip, r7
   230b4:	streq	r5, [r4, #20]
   230b8:	b	22bb4 <contractText@@Base+0x5f4>
   230bc:	ldr	r5, [r9, #20]
   230c0:	b	2307c <contractText@@Base+0xabc>
   230c4:	ldr	r3, [r6]
   230c8:	ldr	r3, [r3, #68]	; 0x44
   230cc:	ldr	r3, [r3, #12]
   230d0:	cmp	r3, #0
   230d4:	bne	23974 <contractText@@Base+0x13b4>
   230d8:	ldr	ip, [fp, #-200]	; 0xffffff38
   230dc:	ldrb	r3, [ip, #58]	; 0x3a
   230e0:	cmp	r3, #1
   230e4:	beq	23c78 <contractText@@Base+0x16b8>
   230e8:	ldr	r3, [pc, #1444]	; 23694 <contractText@@Base+0x10d4>
   230ec:	add	r3, pc, r3
   230f0:	ldr	r2, [r3, #20]
   230f4:	ldr	r3, [pc, #1436]	; 23698 <contractText@@Base+0x10d8>
   230f8:	add	r3, pc, r3
   230fc:	ldr	ip, [r3, #40]	; 0x28
   23100:	sub	r1, ip, #8
   23104:	cmp	r1, #1
   23108:	bhi	23118 <contractText@@Base+0xb58>
   2310c:	ldr	r1, [r3, #52]	; 0x34
   23110:	cmp	r1, #8
   23114:	beq	23b9c <contractText@@Base+0x15dc>
   23118:	ldr	r3, [pc, #1404]	; 2369c <contractText@@Base+0x10dc>
   2311c:	add	r3, pc, r3
   23120:	ldr	r0, [r3, #32]
   23124:	ldr	r4, [r3, #36]	; 0x24
   23128:	ldrb	r1, [r0, #17]
   2312c:	cmp	r1, #0
   23130:	beq	234bc <contractText@@Base+0xefc>
   23134:	cmp	ip, #6
   23138:	bne	23144 <contractText@@Base+0xb84>
   2313c:	cmp	r4, #1
   23140:	beq	234bc <contractText@@Base+0xefc>
   23144:	ldr	r1, [r2]
   23148:	add	r4, r2, r4, lsl #2
   2314c:	bl	22428 <makeContractionTablePath@@Base+0x118c>
   23150:	cmp	r0, #0
   23154:	beq	22b48 <contractText@@Base+0x588>
   23158:	ldr	r1, [pc, #1344]	; 236a0 <contractText@@Base+0x10e0>
   2315c:	mvn	r0, #0
   23160:	add	r1, pc, r1
   23164:	ldr	r3, [r1, #20]
   23168:	ldr	r2, [r1, #24]
   2316c:	ldr	r1, [r1, #12]
   23170:	b	23180 <contractText@@Base+0xbc0>
   23174:	cmp	r2, #0
   23178:	rsbne	ip, r1, r3
   2317c:	strne	r0, [r2, ip]
   23180:	add	r3, r3, #4
   23184:	cmp	r4, r3
   23188:	bne	23174 <contractText@@Base+0xbb4>
   2318c:	ldr	r3, [pc, #1296]	; 236a4 <contractText@@Base+0x10e4>
   23190:	str	r4, [fp, #-208]	; 0xffffff30
   23194:	add	r3, pc, r3
   23198:	str	r4, [r3, #20]
   2319c:	ldr	r3, [pc, #1284]	; 236a8 <contractText@@Base+0x10e8>
   231a0:	add	r3, pc, r3
   231a4:	ldr	r2, [r3, #40]	; 0x28
   231a8:	cmp	r2, #7
   231ac:	beq	23a38 <contractText@@Base+0x1478>
   231b0:	cmp	r2, #11
   231b4:	bne	23a30 <contractText@@Base+0x1470>
   231b8:	ldr	r2, [r3, #16]
   231bc:	ldr	r1, [fp, #-208]	; 0xffffff30
   231c0:	ldr	r3, [r3, #4]
   231c4:	cmp	r1, r2
   231c8:	str	r3, [fp, #-236]	; 0xffffff14
   231cc:	movcs	r3, r1
   231d0:	movcs	r4, r3
   231d4:	bcs	2321c <contractText@@Base+0xc5c>
   231d8:	ldr	r5, [pc, #1228]	; 236ac <contractText@@Base+0x10ec>
   231dc:	mvn	r4, #0
   231e0:	ldr	r6, [pc, #1224]	; 236b0 <contractText@@Base+0x10f0>
   231e4:	ldr	r3, [fp, #-208]	; 0xffffff30
   231e8:	add	r5, pc, r5
   231ec:	add	r6, pc, r6
   231f0:	ldr	r0, [r3]
   231f4:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   231f8:	cmp	r0, #0
   231fc:	beq	23840 <contractText@@Base+0x1280>
   23200:	ldr	r3, [r0, #12]
   23204:	tst	r3, #1
   23208:	bne	237d0 <contractText@@Base+0x1210>
   2320c:	ldr	r3, [pc, #1184]	; 236b4 <contractText@@Base+0x10f4>
   23210:	ldr	r4, [fp, #-208]	; 0xffffff30
   23214:	add	r3, pc, r3
   23218:	ldr	r3, [r3, #20]
   2321c:	cmp	r4, #0
   23220:	beq	23240 <contractText@@Base+0xc80>
   23224:	ldr	r1, [pc, #1164]	; 236b8 <contractText@@Base+0x10f8>
   23228:	add	r1, pc, r1
   2322c:	ldr	r2, [r1, #56]	; 0x38
   23230:	cmp	r4, r2
   23234:	bhi	23240 <contractText@@Base+0xc80>
   23238:	cmp	r2, r3
   2323c:	bcc	23b14 <contractText@@Base+0x1554>
   23240:	mov	r4, r3
   23244:	ldr	r3, [pc, #1136]	; 236bc <contractText@@Base+0x10fc>
   23248:	sub	r6, r9, #-1073741823	; 0xc0000001
   2324c:	mov	r5, #1
   23250:	add	r3, pc, r3
   23254:	ldr	r3, [r3, #12]
   23258:	rsb	r4, r3, r4
   2325c:	add	r6, r3, r6, lsl #2
   23260:	asr	r4, r4, #2
   23264:	cmp	r4, r9
   23268:	bcc	2355c <contractText@@Base+0xf9c>
   2326c:	ldr	r0, [r6, #4]!
   23270:	movw	r1, #4104	; 0x1008
   23274:	str	sl, [fp, #-152]	; 0xffffff68
   23278:	bl	14f08 <u_getIntPropertyValue_50@plt>
   2327c:	cmp	r0, #9
   23280:	beq	2351c <contractText@@Base+0xf5c>
   23284:	cmp	r8, #26
   23288:	add	r2, r7, r9
   2328c:	beq	237b4 <contractText@@Base+0x11f4>
   23290:	cmp	r7, r2
   23294:	str	r8, [fp, #-196]	; 0xffffff3c
   23298:	beq	237bc <contractText@@Base+0x11fc>
   2329c:	cmp	r8, #6
   232a0:	beq	23768 <contractText@@Base+0x11a8>
   232a4:	cmp	r8, #10
   232a8:	beq	23778 <contractText@@Base+0x11b8>
   232ac:	cmp	r8, #17
   232b0:	beq	23750 <contractText@@Base+0x1190>
   232b4:	cmp	r8, #29
   232b8:	beq	23750 <contractText@@Base+0x1190>
   232bc:	cmp	r0, #10
   232c0:	cmpne	r0, #6
   232c4:	movne	r2, #0
   232c8:	moveq	r2, #1
   232cc:	beq	237a0 <contractText@@Base+0x11e0>
   232d0:	cmp	r0, #17
   232d4:	beq	237a0 <contractText@@Base+0x11e0>
   232d8:	cmp	r0, #29
   232dc:	beq	237a0 <contractText@@Base+0x11e0>
   232e0:	cmp	r0, #26
   232e4:	cmpne	r0, #28
   232e8:	movne	r1, #0
   232ec:	moveq	r1, #1
   232f0:	beq	23b04 <contractText@@Base+0x1544>
   232f4:	cmp	r8, #28
   232f8:	beq	23750 <contractText@@Base+0x1190>
   232fc:	cmp	r8, #30
   23300:	beq	237a0 <contractText@@Base+0x11e0>
   23304:	cmp	r0, #30
   23308:	beq	237a0 <contractText@@Base+0x11e0>
   2330c:	cmp	r8, #26
   23310:	beq	23330 <contractText@@Base+0xd70>
   23314:	cmp	r0, #12
   23318:	strbeq	r1, [r7, r9]
   2331c:	moveq	sl, r8
   23320:	moveq	r8, r0
   23324:	beq	23550 <contractText@@Base+0xf90>
   23328:	cmp	r8, #12
   2332c:	beq	237a0 <contractText@@Base+0x11e0>
   23330:	bic	r2, r0, #16
   23334:	cmp	r2, #11
   23338:	cmpne	r0, #8
   2333c:	movne	r2, #0
   23340:	moveq	r2, #1
   23344:	beq	237a0 <contractText@@Base+0x11e0>
   23348:	cmp	r0, #16
   2334c:	beq	237a0 <contractText@@Base+0x11e0>
   23350:	ldr	r3, [fp, #-196]	; 0xffffff3c
   23354:	cmp	r3, #20
   23358:	beq	23b04 <contractText@@Base+0x1544>
   2335c:	ldr	ip, [fp, #-196]	; 0xffffff3c
   23360:	cmp	ip, #23
   23364:	beq	23afc <contractText@@Base+0x153c>
   23368:	ldr	r3, [fp, #-196]	; 0xffffff3c
   2336c:	cmp	r3, #8
   23370:	bne	2406c <contractText@@Base+0x1aac>
   23374:	cmp	r0, #18
   23378:	beq	23b04 <contractText@@Base+0x1544>
   2337c:	cmp	r8, #26
   23380:	beq	23750 <contractText@@Base+0x1190>
   23384:	cmp	r8, #23
   23388:	beq	237a0 <contractText@@Base+0x11e0>
   2338c:	cmp	r0, #23
   23390:	beq	237a0 <contractText@@Base+0x11e0>
   23394:	cmp	r0, #7
   23398:	beq	23750 <contractText@@Base+0x1190>
   2339c:	cmp	r8, #7
   233a0:	beq	23750 <contractText@@Base+0x1190>
   233a4:	cmp	r0, #13
   233a8:	cmpne	r0, #4
   233ac:	beq	237a0 <contractText@@Base+0x11e0>
   233b0:	cmp	r0, #18
   233b4:	beq	237a0 <contractText@@Base+0x11e0>
   233b8:	cmp	r8, #5
   233bc:	beq	237a0 <contractText@@Base+0x11e0>
   233c0:	cmp	r0, #15
   233c4:	beq	240a0 <contractText@@Base+0x1ae0>
   233c8:	cmp	r8, #14
   233cc:	beq	241c4 <contractText@@Base+0x1c04>
   233d0:	cmp	r8, #2
   233d4:	beq	241b8 <contractText@@Base+0x1bf8>
   233d8:	cmp	r8, #19
   233dc:	beq	24160 <contractText@@Base+0x1ba0>
   233e0:	cmp	r8, #22
   233e4:	beq	241a8 <contractText@@Base+0x1be8>
   233e8:	cmp	r8, #21
   233ec:	beq	24180 <contractText@@Base+0x1bc0>
   233f0:	cmp	r8, #8
   233f4:	beq	24198 <contractText@@Base+0x1bd8>
   233f8:	cmp	r8, #19
   233fc:	beq	24168 <contractText@@Base+0x1ba8>
   23400:	cmp	r8, #22
   23404:	beq	24188 <contractText@@Base+0x1bc8>
   23408:	cmp	r8, #13
   2340c:	beq	241b8 <contractText@@Base+0x1bf8>
   23410:	cmp	r8, #16
   23414:	beq	24174 <contractText@@Base+0x1bb4>
   23418:	cmp	r8, #19
   2341c:	beq	24174 <contractText@@Base+0x1bb4>
   23420:	cmp	r8, #27
   23424:	beq	24174 <contractText@@Base+0x1bb4>
   23428:	cmp	r8, #33	; 0x21
   2342c:	beq	24138 <contractText@@Base+0x1b78>
   23430:	cmp	r8, #35	; 0x23
   23434:	cmpne	r8, #31
   23438:	bne	23448 <contractText@@Base+0xe88>
   2343c:	sub	r2, r0, #34	; 0x22
   23440:	cmp	r2, #1
   23444:	bls	237a0 <contractText@@Base+0x11e0>
   23448:	bic	r2, r8, #2
   2344c:	cmp	r2, #32
   23450:	bne	2411c <contractText@@Base+0x1b5c>
   23454:	cmp	r0, #34	; 0x22
   23458:	beq	237a0 <contractText@@Base+0x11e0>
   2345c:	cmp	r8, #34	; 0x22
   23460:	beq	24124 <contractText@@Base+0x1b64>
   23464:	sub	r2, r8, #31
   23468:	cmp	r2, #1
   2346c:	bls	24124 <contractText@@Base+0x1b64>
   23470:	cmp	r8, #22
   23474:	beq	2410c <contractText@@Base+0x1b4c>
   23478:	cmp	r8, #2
   2347c:	beq	240f4 <contractText@@Base+0x1b34>
   23480:	cmp	r8, #16
   23484:	beq	240cc <contractText@@Base+0x1b0c>
   23488:	cmp	r8, #2
   2348c:	cmpne	r8, #19
   23490:	bne	2349c <contractText@@Base+0xedc>
   23494:	cmp	r0, #20
   23498:	beq	237a0 <contractText@@Base+0x11e0>
   2349c:	cmp	r8, #8
   234a0:	beq	23794 <contractText@@Base+0x11d4>
   234a4:	cmp	r8, #13
   234a8:	beq	24090 <contractText@@Base+0x1ad0>
   234ac:	mov	sl, r8
   234b0:	strb	r5, [r7, r9]
   234b4:	mov	r8, r0
   234b8:	b	23550 <contractText@@Base+0xf90>
   234bc:	ldr	r5, [pc, #508]	; 236c0 <contractText@@Base+0x1100>
   234c0:	add	r4, r2, r4, lsl #2
   234c4:	add	r5, pc, r5
   234c8:	b	23508 <contractText@@Base+0xf48>
   234cc:	ldr	r3, [r5, #20]
   234d0:	add	r3, r3, #4
   234d4:	str	r3, [r5, #20]
   234d8:	cmp	r4, r3
   234dc:	beq	239f0 <contractText@@Base+0x1430>
   234e0:	ldr	r1, [r5, #24]
   234e4:	ldr	r2, [r5, #28]
   234e8:	cmp	r1, #0
   234ec:	ldr	r0, [r5, #4]
   234f0:	ldrne	ip, [r5, #12]
   234f4:	rsbne	r0, r2, r0
   234f8:	movne	r2, r3
   234fc:	moveq	r2, r3
   23500:	rsbne	r3, ip, r3
   23504:	strne	r0, [r1, r3]
   23508:	ldr	r0, [r2]
   2350c:	bl	224f4 <makeContractionTablePath@@Base+0x1258>
   23510:	cmp	r0, #0
   23514:	bne	234cc <contractText@@Base+0xf0c>
   23518:	b	22b48 <contractText@@Base+0x588>
   2351c:	bic	r2, r8, #16
   23520:	cmp	r2, #10
   23524:	cmpne	r8, #6
   23528:	beq	23760 <contractText@@Base+0x11a0>
   2352c:	cmp	r8, #17
   23530:	beq	23760 <contractText@@Base+0x11a0>
   23534:	sub	sl, r8, #28
   23538:	cmp	sl, #1
   2353c:	movhi	sl, r8
   23540:	movls	sl, #2
   23544:	mov	r8, sl
   23548:	mov	r2, #0
   2354c:	strb	r2, [r7, r9]
   23550:	add	r9, r9, #1
   23554:	cmp	r4, r9
   23558:	bcs	2326c <contractText@@Base+0xcac>
   2355c:	ldr	r3, [pc, #352]	; 236c4 <contractText@@Base+0x1104>
   23560:	add	r3, pc, r3
   23564:	ldr	r5, [r3, #20]
   23568:	ldr	r2, [r3, #12]
   2356c:	rsb	r2, r2, r5
   23570:	ldrb	r2, [r7, r2, asr #2]
   23574:	cmp	r2, #0
   23578:	bne	2381c <contractText@@Base+0x125c>
   2357c:	ldr	r3, [r3, #4]
   23580:	ldr	r2, [pc, #320]	; 236c8 <contractText@@Base+0x1108>
   23584:	add	r2, pc, r2
   23588:	ldr	r2, [r2, #28]
   2358c:	cmp	r2, r3
   23590:	beq	235a0 <contractText@@Base+0xfe0>
   23594:	ldrb	r3, [r3, #-1]
   23598:	cmp	r3, #0
   2359c:	beq	235b0 <contractText@@Base+0xff0>
   235a0:	ldr	r3, [pc, #292]	; 236cc <contractText@@Base+0x110c>
   235a4:	add	r3, pc, r3
   235a8:	ldr	r2, [r3, #40]	; 0x28
   235ac:	str	r2, [r3, #52]	; 0x34
   235b0:	ldr	r3, [pc, #280]	; 236d0 <contractText@@Base+0x1110>
   235b4:	ldr	r4, [fp, #-212]	; 0xffffff2c
   235b8:	add	r3, pc, r3
   235bc:	ldr	ip, [r3, #16]
   235c0:	b	22a50 <contractText@@Base+0x490>
   235c4:	andeq	r8, r1, r0, lsr #20
   235c8:	andeq	r0, r0, r8, asr #4
   235cc:	andeq	r8, r1, r0, asr #27
   235d0:	andeq	r8, r1, r4, asr sp
   235d4:	muleq	r0, ip, r2
   235d8:	andeq	r8, r1, r0, asr #25
   235dc:	andeq	r4, r0, r8, lsr #11
   235e0:	andeq	r6, r0, r8, lsl r7
   235e4:	andeq	r8, r1, r8, ror #24
   235e8:	andeq	r4, r0, r4, ror #10
   235ec:	andeq	r4, r0, r8, lsr #21
   235f0:	muleq	r0, r8, r6
   235f4:	andeq	r4, r0, ip, lsr #8
   235f8:	andeq	r6, r0, r4, ror #12
   235fc:	andeq	r8, r1, r8, lsr fp
   23600:	andeq	r6, r0, r4, ror #12
   23604:	andeq	r8, r1, r4, lsr #22
   23608:	andeq	r8, r1, r0, asr r0
   2360c:	andeq	r8, r1, r4, lsl #22
   23610:	andeq	r6, r0, r8, ror #10
   23614:	andeq	r8, r1, r8, asr sl
   23618:	andeq	r8, r1, r4, lsl #20
   2361c:			; <UNDEFINED> instruction: 0x000189b4
   23620:	andeq	r8, r1, ip, lsr #19
   23624:	muleq	r1, ip, r9
   23628:	muleq	r1, r0, r9
   2362c:	andeq	r8, r1, r8, ror r9
   23630:	andeq	r8, r1, r0, ror r9
   23634:	strdeq	r8, [r1], -r0
   23638:	andeq	r8, r1, ip, lsr #17
   2363c:	andeq	r8, r1, ip, ror #16
   23640:	andeq	r8, r1, ip, lsr #16
   23644:	andeq	r8, r1, ip, lsl #16
   23648:	strdeq	r8, [r1], -ip
   2364c:	andeq	r8, r1, r8, asr #15
   23650:	andeq	r8, r1, ip, lsr #15
   23654:	andeq	r8, r1, ip, ror r7
   23658:	andeq	r8, r1, r8, ror #14
   2365c:	andeq	r8, r1, ip, lsl r7
   23660:	andeq	r8, r1, r4, lsl r7
   23664:	andeq	r8, r1, r8, lsl #13
   23668:	andeq	r6, r0, ip, lsr r1
   2366c:	andeq	r8, r1, r8, ror #12
   23670:	andeq	r0, r0, r8, asr r2
   23674:	andeq	r8, r1, ip, ror #9
   23678:			; <UNDEFINED> instruction: 0x000184b0
   2367c:	andeq	r8, r1, r8, lsl #8
   23680:	andeq	r8, r1, r0, lsl #8
   23684:	strdeq	r8, [r1], -r4
   23688:	andeq	r8, r1, ip, ror #7
   2368c:	andeq	r8, r1, r0, ror #7
   23690:	andeq	r8, r1, ip, asr #7
   23694:	andeq	r8, r1, ip, asr #5
   23698:	andeq	r8, r1, r0, asr #5
   2369c:	muleq	r1, ip, r2
   236a0:	andeq	r8, r1, r8, asr r2
   236a4:	andeq	r8, r1, r4, lsr #4
   236a8:	andeq	r8, r1, r8, lsl r2
   236ac:	ldrdeq	r8, [r1], -r0
   236b0:	andeq	r8, r1, ip, asr #3
   236b4:	andeq	r8, r1, r4, lsr #3
   236b8:	muleq	r1, r0, r1
   236bc:	andeq	r8, r1, r8, ror #2
   236c0:	strdeq	r7, [r1], -r4
   236c4:	andeq	r7, r1, r8, asr lr
   236c8:	andeq	r7, r1, r4, lsr lr
   236cc:	andeq	r7, r1, r4, lsl lr
   236d0:	andeq	r7, r1, r0, lsl #28
   236d4:			; <UNDEFINED> instruction: 0x00017bb0
   236d8:	andeq	r7, r1, r0, ror fp
   236dc:	andeq	r7, r1, r8, asr #22
   236e0:	strdeq	r7, [r1], -r8
   236e4:	andeq	r7, r1, r0, asr sl
   236e8:	andeq	r7, r1, r0, asr #20
   236ec:	andeq	r7, r1, r8, ror #19
   236f0:			; <UNDEFINED> instruction: 0x000179bc
   236f4:	andeq	r5, r0, r4, lsr #9
   236f8:	andeq	r7, r1, r8, asr r9
   236fc:	andeq	r7, r1, r4, asr r9
   23700:	muleq	r0, ip, r2
   23704:	andeq	r7, r1, r4, asr r8
   23708:	ldrdeq	r7, [r1], -r0
   2370c:	andeq	r7, r1, r0, asr #15
   23710:			; <UNDEFINED> instruction: 0x000052b8
   23714:	andeq	r7, r1, ip, lsr r7
   23718:	ldrdeq	r7, [r1], -ip
   2371c:	andeq	r7, r1, r8, asr #13
   23720:	andeq	r7, r1, ip, ror #11
   23724:	andeq	r7, r1, r4, asr #10
   23728:	andeq	r7, r1, r0, lsr r5
   2372c:	andeq	r7, r1, r4, lsl #10
   23730:	andeq	r7, r1, r8, ror #9
   23734:			; <UNDEFINED> instruction: 0x000174b8
   23738:	andeq	r7, r1, ip, ror r4
   2373c:	andeq	r7, r1, r0, ror #8
   23740:	andeq	r7, r1, r4, lsr r4
   23744:	andeq	r7, r1, r0, lsl r4
   23748:	andeq	r7, r1, r4, asr #7
   2374c:	andeq	r7, r1, r8, asr r3
   23750:	mov	sl, r8
   23754:	strb	r5, [r7, r9]
   23758:	mov	r8, r0
   2375c:	b	23550 <contractText@@Base+0xf90>
   23760:	mov	sl, #2
   23764:	b	23544 <contractText@@Base+0xf84>
   23768:	strb	r5, [r7, r9]
   2376c:	mov	r8, r0
   23770:	ldr	sl, [fp, #-196]	; 0xffffff3c
   23774:	b	23550 <contractText@@Base+0xf90>
   23778:	cmp	r0, #17
   2377c:	bne	23750 <contractText@@Base+0x1190>
   23780:	mov	r2, #0
   23784:	mov	r8, r0
   23788:	ldr	sl, [fp, #-196]	; 0xffffff3c
   2378c:	strb	r2, [r7, r9]
   23790:	b	23550 <contractText@@Base+0xf90>
   23794:	cmp	r0, #2
   23798:	cmpne	r0, #19
   2379c:	bne	234ac <contractText@@Base+0xeec>
   237a0:	mov	sl, r8
   237a4:	mov	r2, #0
   237a8:	mov	r8, r0
   237ac:	strb	r2, [r7, r9]
   237b0:	b	23550 <contractText@@Base+0xf90>
   237b4:	cmp	r7, r2
   237b8:	bne	232bc <contractText@@Base+0xcfc>
   237bc:	mov	sl, r8
   237c0:	mov	r2, #0
   237c4:	mov	r8, r0
   237c8:	strb	r2, [r7]
   237cc:	b	23550 <contractText@@Base+0xf90>
   237d0:	ldr	r2, [r5, #24]
   237d4:	ldr	r3, [r5, #20]
   237d8:	cmp	r2, #0
   237dc:	ldrne	r1, [r5, #12]
   237e0:	rsbne	r1, r1, r3
   237e4:	strne	r4, [r2, r1]
   237e8:	ldr	r2, [r6, #16]
   237ec:	add	r3, r3, #4
   237f0:	str	r3, [r6, #20]
   237f4:	cmp	r3, r2
   237f8:	bcc	231f0 <contractText@@Base+0xc30>
   237fc:	ldr	r4, [fp, #-208]	; 0xffffff30
   23800:	b	2321c <contractText@@Base+0xc5c>
   23804:	ldr	r3, [pc, #-312]	; 236d4 <contractText@@Base+0x1114>
   23808:	add	r3, pc, r3
   2380c:	ldr	r8, [r3, #4]
   23810:	ldr	r3, [r3, #28]
   23814:	rsb	r8, r3, r8
   23818:	b	22fa4 <contractText@@Base+0x9e4>
   2381c:	ldr	r2, [r3, #40]	; 0x28
   23820:	ldr	r3, [r3, #4]
   23824:	cmp	r2, #11
   23828:	str	r5, [fp, #-224]	; 0xffffff20
   2382c:	movne	r2, r5
   23830:	str	r3, [fp, #-172]	; 0xffffff54
   23834:	strne	r3, [fp, #-176]	; 0xffffff50
   23838:	strne	r2, [fp, #-228]	; 0xffffff1c
   2383c:	b	23580 <contractText@@Base+0xfc0>
   23840:	ldr	r3, [pc, #-368]	; 236d8 <contractText@@Base+0x1118>
   23844:	ldr	r4, [fp, #-208]	; 0xffffff30
   23848:	add	r3, pc, r3
   2384c:	ldr	r3, [r3, #20]
   23850:	b	2321c <contractText@@Base+0xc5c>
   23854:	mov	r0, #1
   23858:	bl	21a54 <makeContractionTablePath@@Base+0x7b8>
   2385c:	cmp	r0, #0
   23860:	bne	23900 <contractText@@Base+0x1340>
   23864:	mov	r4, r0
   23868:	ldr	r5, [pc, #-404]	; 236dc <contractText@@Base+0x111c>
   2386c:	mov	r2, #6
   23870:	add	r5, pc, r5
   23874:	ldr	r3, [r5, #20]
   23878:	str	r2, [r5, #40]	; 0x28
   2387c:	ldr	r0, [r3]
   23880:	bl	224f4 <makeContractionTablePath@@Base+0x1258>
   23884:	cmp	r0, #0
   23888:	beq	22b48 <contractText@@Base+0x588>
   2388c:	ldr	r3, [r5, #20]
   23890:	str	r4, [fp, #-212]	; 0xffffff2c
   23894:	add	r4, r3, #4
   23898:	str	r4, [r5, #20]
   2389c:	b	23244 <contractText@@Base+0xc84>
   238a0:	ldr	r0, [r5]
   238a4:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   238a8:	cmp	r0, #0
   238ac:	beq	238bc <contractText@@Base+0x12fc>
   238b0:	ldr	r3, [r0, #12]
   238b4:	tst	r3, #1
   238b8:	bne	23b34 <contractText@@Base+0x1574>
   238bc:	ldr	r6, [pc, #-484]	; 236e0 <contractText@@Base+0x1120>
   238c0:	add	r6, pc, r6
   238c4:	ldr	r3, [r6, #20]
   238c8:	ldr	r0, [r3, #-4]
   238cc:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   238d0:	cmp	r0, #0
   238d4:	beq	22ab0 <contractText@@Base+0x4f0>
   238d8:	ldr	r3, [r0, #12]
   238dc:	tst	r3, #1
   238e0:	beq	22ab0 <contractText@@Base+0x4f0>
   238e4:	ldr	ip, [r6, #16]
   238e8:	ldr	r0, [r6, #20]
   238ec:	rsb	r0, r0, ip
   238f0:	asr	r0, r0, #2
   238f4:	bl	21a54 <makeContractionTablePath@@Base+0x7b8>
   238f8:	cmp	r0, #0
   238fc:	beq	23854 <contractText@@Base+0x1294>
   23900:	ldr	ip, [fp, #-220]	; 0xffffff24
   23904:	ldr	r3, [ip, #40]	; 0x28
   23908:	cmp	r3, #5
   2390c:	beq	23fb8 <contractText@@Base+0x19f8>
   23910:	ldr	ip, [fp, #-200]	; 0xffffff38
   23914:	ldrb	r3, [ip, #38]	; 0x26
   23918:	cmp	r3, #0
   2391c:	beq	23dc0 <contractText@@Base+0x1800>
   23920:	ldr	r2, [fp, #-220]	; 0xffffff24
   23924:	ldr	r1, [r2, #56]	; 0x38
   23928:	ldr	r3, [r2, #20]
   2392c:	cmp	r1, r3
   23930:	bcc	23f48 <contractText@@Base+0x1988>
   23934:	ldr	r2, [r2, #36]	; 0x24
   23938:	add	r2, r3, r2, lsl #2
   2393c:	cmp	r1, r2
   23940:	bcs	23dbc <contractText@@Base+0x17fc>
   23944:	str	r2, [fp, #-212]	; 0xffffff2c
   23948:	ldr	r0, [r3]
   2394c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23950:	cmp	r0, #0
   23954:	beq	23f94 <contractText@@Base+0x19d4>
   23958:	ldr	r3, [r0, #12]
   2395c:	tst	r3, #1
   23960:	beq	23f94 <contractText@@Base+0x19d4>
   23964:	ldr	r3, [pc, #-648]	; 236e4 <contractText@@Base+0x1124>
   23968:	add	r3, pc, r3
   2396c:	ldr	r5, [r3, #20]
   23970:	b	235b0 <contractText@@Base+0xff0>
   23974:	ldr	r6, [pc, #-660]	; 236e8 <contractText@@Base+0x1128>
   23978:	add	r6, pc, r6
   2397c:	ldr	r3, [r6, #20]
   23980:	ldr	r0, [r3]
   23984:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23988:	cmp	r0, #0
   2398c:	beq	230d8 <contractText@@Base+0xb18>
   23990:	ldr	r3, [r0, #12]
   23994:	tst	r3, #2
   23998:	beq	230d8 <contractText@@Base+0xb18>
   2399c:	ldr	r3, [r6, #40]	; 0x28
   239a0:	cmp	r3, #13
   239a4:	beq	239cc <contractText@@Base+0x140c>
   239a8:	cmp	r3, #25
   239ac:	beq	23cec <contractText@@Base+0x172c>
   239b0:	ldr	r0, [r6, #48]	; 0x30
   239b4:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   239b8:	cmp	r0, #0
   239bc:	beq	23cec <contractText@@Base+0x172c>
   239c0:	ldr	r3, [r0, #12]
   239c4:	tst	r3, #4
   239c8:	beq	23cec <contractText@@Base+0x172c>
   239cc:	ldr	r3, [pc, #-744]	; 236ec <contractText@@Base+0x112c>
   239d0:	add	r3, pc, r3
   239d4:	ldr	r3, [r3]
   239d8:	ldr	r3, [r3, #68]	; 0x44
   239dc:	ldr	r0, [r3, #12]
   239e0:	bl	214c0 <makeContractionTablePath@@Base+0x224>
   239e4:	cmp	r0, #0
   239e8:	bne	230d8 <contractText@@Base+0xb18>
   239ec:	b	22b48 <contractText@@Base+0x588>
   239f0:	str	r4, [fp, #-208]	; 0xffffff30
   239f4:	b	2319c <contractText@@Base+0xbdc>
   239f8:	ldr	r3, [pc, #-784]	; 236f0 <contractText@@Base+0x1130>
   239fc:	add	r3, pc, r3
   23a00:	ldr	r3, [r3]
   23a04:	ldr	r4, [r3, #64]	; 0x40
   23a08:	bl	151b4 <__errno_location@plt>
   23a0c:	ldr	r0, [r0]
   23a10:	bl	14d64 <strerror@plt>
   23a14:	ldr	r1, [pc, #-808]	; 236f4 <contractText@@Base+0x1134>
   23a18:	mov	r2, r4
   23a1c:	add	r1, pc, r1
   23a20:	mov	r3, r0
   23a24:	mov	r0, #4
   23a28:	bl	183d0 <logMessage@@Base>
   23a2c:	b	22d4c <contractText@@Base+0x78c>
   23a30:	ldr	r4, [fp, #-208]	; 0xffffff30
   23a34:	b	23244 <contractText@@Base+0xc84>
   23a38:	ldr	r4, [r3, #36]	; 0x24
   23a3c:	mvn	r5, #0
   23a40:	ldr	r3, [r3, #16]
   23a44:	ldr	r2, [pc, #-852]	; 236f8 <contractText@@Base+0x1138>
   23a48:	lsl	r4, r4, #2
   23a4c:	ldr	r6, [pc, #-856]	; 236fc <contractText@@Base+0x113c>
   23a50:	rsb	r4, r4, #0
   23a54:	ldr	r0, [fp, #-208]	; 0xffffff30
   23a58:	add	r3, r3, r4
   23a5c:	ldr	ip, [fp, #-168]	; 0xffffff58
   23a60:	add	r2, pc, r2
   23a64:	add	r6, pc, r6
   23a68:	add	r4, r0, r4
   23a6c:	str	sl, [fp, #-252]	; 0xffffff04
   23a70:	str	r4, [fp, #-248]	; 0xffffff08
   23a74:	mov	sl, r2
   23a78:	mov	r4, r3
   23a7c:	str	ip, [fp, #-236]	; 0xffffff14
   23a80:	cmp	r0, r4
   23a84:	bhi	23cc4 <contractText@@Base+0x1704>
   23a88:	bl	218e4 <makeContractionTablePath@@Base+0x648>
   23a8c:	cmp	r0, #0
   23a90:	beq	23cd4 <contractText@@Base+0x1714>
   23a94:	ldr	ip, [r6, #36]	; 0x24
   23a98:	ldr	r0, [r6, #20]
   23a9c:	ldr	r2, [r6, #24]
   23aa0:	ldr	lr, [r6, #12]
   23aa4:	add	ip, r0, ip, lsl #2
   23aa8:	mov	r3, r0
   23aac:	cmp	r2, #0
   23ab0:	rsbne	r1, lr, r3
   23ab4:	add	r3, r3, #4
   23ab8:	strne	r5, [r2, r1]
   23abc:	cmp	ip, r3
   23ac0:	bne	23aac <contractText@@Base+0x14ec>
   23ac4:	add	r3, r0, #4
   23ac8:	rsb	r3, r3, ip
   23acc:	bic	r3, r3, #3
   23ad0:	add	r3, r3, #4
   23ad4:	add	r0, r0, r3
   23ad8:	str	r0, [sl, #20]
   23adc:	b	23a80 <contractText@@Base+0x14c0>
   23ae0:	ldr	r3, [r8, #64]	; 0x40
   23ae4:	cmp	r3, #0
   23ae8:	ldr	r3, [pc, #-1008]	; 23700 <contractText@@Base+0x1140>
   23aec:	ldr	r3, [r6, r3]
   23af0:	str	r3, [fp, #-200]	; 0xffffff38
   23af4:	bne	226c0 <contractText@@Base+0x100>
   23af8:	b	229a4 <contractText@@Base+0x3e4>
   23afc:	cmp	r0, #20
   23b00:	bne	2337c <contractText@@Base+0xdbc>
   23b04:	mov	sl, r8
   23b08:	strb	r2, [r7, r9]
   23b0c:	mov	r8, r0
   23b10:	b	23550 <contractText@@Base+0xf90>
   23b14:	ldr	r2, [fp, #-212]	; 0xffffff2c
   23b18:	cmp	r2, #0
   23b1c:	beq	23fcc <contractText@@Base+0x1a0c>
   23b20:	ldr	r2, [fp, #-208]	; 0xffffff30
   23b24:	str	r3, [fp, #-212]	; 0xffffff2c
   23b28:	str	r2, [r1, #20]
   23b2c:	mov	r4, r2
   23b30:	b	23244 <contractText@@Base+0xc84>
   23b34:	ldr	r3, [fp, #-216]	; 0xffffff28
   23b38:	ldr	ip, [r3, #16]
   23b3c:	ldr	r0, [r3, #20]
   23b40:	b	238ec <contractText@@Base+0x132c>
   23b44:	bl	184dc <logMallocError@@Base>
   23b48:	ldr	r4, [sl]
   23b4c:	ldr	r5, [sl, #12]
   23b50:	str	r9, [r4, #52]	; 0x34
   23b54:	b	22c94 <contractText@@Base+0x6d4>
   23b58:	ldr	r3, [pc, #-1116]	; 23704 <contractText@@Base+0x1144>
   23b5c:	mov	r4, r1
   23b60:	strb	r6, [r5]
   23b64:	add	r3, pc, r3
   23b68:	ldr	r3, [r3, #60]	; 0x3c
   23b6c:	ldr	ip, [fp, #-208]	; 0xffffff30
   23b70:	mov	r0, #4
   23b74:	ldr	r1, [fp, #-204]	; 0xffffff34
   23b78:	ldr	r2, [ip]
   23b7c:	ldr	r2, [r2, #64]	; 0x40
   23b80:	bl	183d0 <logMessage@@Base>
   23b84:	b	22954 <contractText@@Base+0x394>
   23b88:	mov	r3, r4
   23b8c:	mov	r4, r5
   23b90:	b	23b6c <contractText@@Base+0x15ac>
   23b94:	mov	r0, r5
   23b98:	b	238ec <contractText@@Base+0x132c>
   23b9c:	cmp	r4, r5
   23ba0:	beq	23118 <contractText@@Base+0xb58>
   23ba4:	ldr	r1, [r3, #4]
   23ba8:	ldr	r0, [r3, #28]
   23bac:	cmp	r0, r1
   23bb0:	bcs	23bf0 <contractText@@Base+0x1630>
   23bb4:	ldrb	r3, [r1, #-1]
   23bb8:	cmp	r3, #0
   23bbc:	bne	23bf0 <contractText@@Base+0x1630>
   23bc0:	mov	r3, r1
   23bc4:	b	23bd4 <contractText@@Base+0x1614>
   23bc8:	ldrb	r1, [r3, #-1]
   23bcc:	cmp	r1, #0
   23bd0:	bne	23e80 <contractText@@Base+0x18c0>
   23bd4:	sub	r3, r3, #1
   23bd8:	cmp	r3, r0
   23bdc:	bne	23bc8 <contractText@@Base+0x1608>
   23be0:	ldr	r3, [pc, #-1248]	; 23708 <contractText@@Base+0x1148>
   23be4:	mov	r1, r0
   23be8:	add	r3, pc, r3
   23bec:	str	r0, [r3, #4]
   23bf0:	ldr	lr, [pc, #-1260]	; 2370c <contractText@@Base+0x114c>
   23bf4:	rsb	r0, r0, r1
   23bf8:	add	lr, pc, lr
   23bfc:	ldr	r3, [lr, #24]
   23c00:	cmp	r3, #0
   23c04:	ldrne	lr, [lr, #12]
   23c08:	rsbne	lr, lr, r2
   23c0c:	strne	r0, [r3, lr]
   23c10:	sub	lr, fp, #144	; 0x90
   23c14:	sub	r0, fp, #172	; 0xac
   23c18:	sub	r3, fp, #176	; 0xb0
   23c1c:	str	r0, [fp, #-140]	; 0xffffff74
   23c20:	sub	r0, fp, #168	; 0xa8
   23c24:	str	r3, [fp, #-144]	; 0xffffff70
   23c28:	str	r0, [fp, #-136]	; 0xffffff78
   23c2c:	mov	r0, #0
   23c30:	str	r0, [fp, #-132]	; 0xffffff7c
   23c34:	ldr	r0, [r3]
   23c38:	cmp	r0, #0
   23c3c:	beq	23c48 <contractText@@Base+0x1688>
   23c40:	cmp	r0, r1
   23c44:	strhi	r1, [r3]
   23c48:	ldr	r3, [lr, #4]!
   23c4c:	cmp	r3, #0
   23c50:	bne	23c34 <contractText@@Base+0x1674>
   23c54:	b	23118 <contractText@@Base+0xb58>
   23c58:	ldr	r3, [r7]
   23c5c:	mov	r0, #4
   23c60:	ldr	r1, [pc, #-1368]	; 23710 <contractText@@Base+0x1150>
   23c64:	ldr	r6, [fp, #-212]	; 0xffffff2c
   23c68:	add	r1, pc, r1
   23c6c:	ldr	r2, [r3, #64]	; 0x40
   23c70:	bl	183d0 <logMessage@@Base>
   23c74:	b	22d4c <contractText@@Base+0x78c>
   23c78:	ldr	r6, [pc, #-1388]	; 23714 <contractText@@Base+0x1154>
   23c7c:	add	r6, pc, r6
   23c80:	ldr	r3, [r6, #20]
   23c84:	ldr	r0, [r3]
   23c88:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23c8c:	cmp	r0, #0
   23c90:	beq	23dc8 <contractText@@Base+0x1808>
   23c94:	ldr	r3, [r0, #12]
   23c98:	tst	r3, #16
   23c9c:	beq	23dc8 <contractText@@Base+0x1808>
   23ca0:	ldr	r0, [r6, #48]	; 0x30
   23ca4:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23ca8:	cmp	r0, #0
   23cac:	beq	23efc <contractText@@Base+0x193c>
   23cb0:	ldr	r3, [r0, #12]
   23cb4:	tst	r3, #16
   23cb8:	beq	23efc <contractText@@Base+0x193c>
   23cbc:	ldr	r2, [r6, #20]
   23cc0:	b	230f4 <contractText@@Base+0xb34>
   23cc4:	ldr	r4, [fp, #-248]	; 0xffffff08
   23cc8:	mov	r3, r0
   23ccc:	ldr	sl, [fp, #-252]	; 0xffffff04
   23cd0:	b	2321c <contractText@@Base+0xc5c>
   23cd4:	ldr	r3, [pc, #-1476]	; 23718 <contractText@@Base+0x1158>
   23cd8:	ldr	r4, [fp, #-248]	; 0xffffff08
   23cdc:	add	r3, pc, r3
   23ce0:	ldr	sl, [fp, #-252]	; 0xffffff04
   23ce4:	ldr	r3, [r3, #20]
   23ce8:	b	2321c <contractText@@Base+0xc5c>
   23cec:	ldr	r6, [pc, #-1496]	; 2371c <contractText@@Base+0x115c>
   23cf0:	add	r6, pc, r6
   23cf4:	ldr	r3, [r6, #20]
   23cf8:	ldr	r0, [r3]
   23cfc:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23d00:	cmp	r0, #0
   23d04:	beq	230d8 <contractText@@Base+0xb18>
   23d08:	ldr	r3, [r0, #12]
   23d0c:	tst	r3, #2
   23d10:	beq	230d8 <contractText@@Base+0xb18>
   23d14:	ldr	r3, [r6, #40]	; 0x28
   23d18:	cmp	r3, #6
   23d1c:	bne	230d8 <contractText@@Base+0xb18>
   23d20:	ldr	r3, [r6, #36]	; 0x24
   23d24:	cmp	r3, #1
   23d28:	bne	230d8 <contractText@@Base+0xb18>
   23d2c:	ldr	r0, [r6, #48]	; 0x30
   23d30:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23d34:	cmp	r0, #0
   23d38:	beq	230d8 <contractText@@Base+0xb18>
   23d3c:	ldr	r3, [r0, #12]
   23d40:	tst	r3, #1
   23d44:	beq	230d8 <contractText@@Base+0xb18>
   23d48:	ldr	r3, [r6, #20]
   23d4c:	ldr	r1, [r6, #16]
   23d50:	add	r2, r3, #4
   23d54:	cmp	r1, r2
   23d58:	beq	239cc <contractText@@Base+0x140c>
   23d5c:	ldr	r0, [r3, #4]
   23d60:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23d64:	cmp	r0, #0
   23d68:	beq	23d78 <contractText@@Base+0x17b8>
   23d6c:	ldr	r3, [r0, #12]
   23d70:	tst	r3, #1
   23d74:	bne	239cc <contractText@@Base+0x140c>
   23d78:	ldr	r2, [fp, #-244]	; 0xffffff0c
   23d7c:	ldr	r3, [r2, #20]
   23d80:	ldr	r0, [r3, #4]
   23d84:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23d88:	cmp	r0, #0
   23d8c:	beq	230d8 <contractText@@Base+0xb18>
   23d90:	ldr	r3, [r0, #12]
   23d94:	tst	r3, #8
   23d98:	beq	230d8 <contractText@@Base+0xb18>
   23d9c:	ldr	ip, [fp, #-244]	; 0xffffff0c
   23da0:	ldr	r3, [ip, #20]
   23da4:	ldr	r3, [r3, #4]
   23da8:	cmp	r3, #46	; 0x2e
   23dac:	beq	230d8 <contractText@@Base+0xb18>
   23db0:	cmp	r3, #39	; 0x27
   23db4:	bne	239cc <contractText@@Base+0x140c>
   23db8:	b	230d8 <contractText@@Base+0xb18>
   23dbc:	mov	r3, #0
   23dc0:	str	r3, [fp, #-212]	; 0xffffff2c
   23dc4:	b	22ac4 <contractText@@Base+0x504>
   23dc8:	ldr	r6, [pc, #-1712]	; 23720 <contractText@@Base+0x1160>
   23dcc:	add	r6, pc, r6
   23dd0:	ldr	r3, [r6, #20]
   23dd4:	ldr	r0, [r3]
   23dd8:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23ddc:	cmp	r0, #0
   23de0:	beq	23e70 <contractText@@Base+0x18b0>
   23de4:	ldr	r3, [r0, #12]
   23de8:	tst	r3, #32
   23dec:	beq	23e70 <contractText@@Base+0x18b0>
   23df0:	ldr	r3, [r6]
   23df4:	ldr	r3, [r3, #68]	; 0x44
   23df8:	ldr	r3, [r3, #8]
   23dfc:	cmp	r3, #0
   23e00:	beq	23e70 <contractText@@Base+0x18b0>
   23e04:	ldr	r2, [r6, #20]
   23e08:	ldr	r1, [r6, #12]
   23e0c:	sub	r3, r2, #8
   23e10:	cmp	r1, r3
   23e14:	bhi	230f4 <contractText@@Base+0xb34>
   23e18:	ldr	r0, [r2, #-4]
   23e1c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23e20:	cmp	r0, #0
   23e24:	beq	2405c <contractText@@Base+0x1a9c>
   23e28:	ldr	r3, [r0, #12]
   23e2c:	tst	r3, #16
   23e30:	beq	2405c <contractText@@Base+0x1a9c>
   23e34:	ldr	r3, [r6, #20]
   23e38:	ldr	r0, [r3, #-8]
   23e3c:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23e40:	cmp	r0, #0
   23e44:	beq	23e54 <contractText@@Base+0x1894>
   23e48:	ldr	r3, [r0, #12]
   23e4c:	tst	r3, #16
   23e50:	bne	240d8 <contractText@@Base+0x1b18>
   23e54:	ldr	r3, [fp, #-256]	; 0xffffff00
   23e58:	ldr	r2, [r3, #20]
   23e5c:	b	230f4 <contractText@@Base+0xb34>
   23e60:	bl	184dc <logMallocError@@Base>
   23e64:	ldr	r4, [r8]
   23e68:	str	r9, [r4, #36]	; 0x24
   23e6c:	b	22c4c <contractText@@Base+0x68c>
   23e70:	ldr	r3, [pc, #-1876]	; 23724 <contractText@@Base+0x1164>
   23e74:	add	r3, pc, r3
   23e78:	ldr	r2, [r3, #20]
   23e7c:	b	230f4 <contractText@@Base+0xb34>
   23e80:	ldr	lr, [pc, #-1888]	; 23728 <contractText@@Base+0x1168>
   23e84:	mov	r1, r3
   23e88:	add	lr, pc, lr
   23e8c:	str	r3, [lr, #4]
   23e90:	b	23bf0 <contractText@@Base+0x1630>
   23e94:	ldr	r0, [r5, #-4]
   23e98:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23e9c:	cmp	r0, #0
   23ea0:	beq	23f54 <contractText@@Base+0x1994>
   23ea4:	ldr	r3, [r0, #12]
   23ea8:	tst	r3, #1
   23eac:	beq	23f54 <contractText@@Base+0x1994>
   23eb0:	ldr	r3, [pc, #-1932]	; 2372c <contractText@@Base+0x116c>
   23eb4:	add	r3, pc, r3
   23eb8:	ldr	r3, [r3, #52]	; 0x34
   23ebc:	cmp	r3, #11
   23ec0:	bne	22b7c <contractText@@Base+0x5bc>
   23ec4:	ldr	r3, [pc, #-1948]	; 23730 <contractText@@Base+0x1170>
   23ec8:	ldr	r5, [fp, #-228]	; 0xffffff1c
   23ecc:	ldr	r2, [fp, #-176]	; 0xffffff50
   23ed0:	add	r3, pc, r3
   23ed4:	str	r5, [r3, #20]
   23ed8:	str	r2, [r3, #4]
   23edc:	ldr	ip, [r3, #16]
   23ee0:	b	22b9c <contractText@@Base+0x5dc>
   23ee4:	mov	r8, #0
   23ee8:	b	22fa4 <contractText@@Base+0x9e4>
   23eec:	bl	184dc <logMallocError@@Base>
   23ef0:	ldr	r4, [r8]
   23ef4:	str	r9, [r4, #20]
   23ef8:	b	22c04 <contractText@@Base+0x644>
   23efc:	ldr	r6, [pc, #-2000]	; 23734 <contractText@@Base+0x1174>
   23f00:	add	r6, pc, r6
   23f04:	ldr	r3, [r6]
   23f08:	ldr	r3, [r3, #68]	; 0x44
   23f0c:	ldr	r2, [r3, #4]
   23f10:	cmp	r2, #0
   23f14:	beq	23f2c <contractText@@Base+0x196c>
   23f18:	ldr	r2, [r6, #20]
   23f1c:	ldr	r0, [r6, #16]
   23f20:	add	r1, r2, #4
   23f24:	cmp	r0, r1
   23f28:	bhi	24000 <contractText@@Base+0x1a40>
   23f2c:	ldr	r0, [r3]
   23f30:	cmp	r0, #0
   23f34:	bne	23fe4 <contractText@@Base+0x1a24>
   23f38:	ldr	r3, [pc, #-2056]	; 23738 <contractText@@Base+0x1178>
   23f3c:	add	r3, pc, r3
   23f40:	ldr	r2, [r3, #20]
   23f44:	b	230f4 <contractText@@Base+0xb34>
   23f48:	mov	r2, #0
   23f4c:	str	r2, [fp, #-212]	; 0xffffff2c
   23f50:	b	22ac4 <contractText@@Base+0x504>
   23f54:	ldr	r3, [pc, #-2080]	; 2373c <contractText@@Base+0x117c>
   23f58:	add	r3, pc, r3
   23f5c:	ldr	r3, [r3, #20]
   23f60:	ldr	r0, [r3]
   23f64:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   23f68:	cmp	r0, #0
   23f6c:	beq	23ec4 <contractText@@Base+0x1904>
   23f70:	ldr	r3, [r0, #12]
   23f74:	tst	r3, #1
   23f78:	bne	23eb0 <contractText@@Base+0x18f0>
   23f7c:	b	23ec4 <contractText@@Base+0x1904>
   23f80:	ldr	r3, [pc, #-2120]	; 23740 <contractText@@Base+0x1180>
   23f84:	add	r3, pc, r3
   23f88:	ldr	r5, [r3, #20]
   23f8c:	ldr	ip, [r3, #16]
   23f90:	b	22b9c <contractText@@Base+0x5dc>
   23f94:	ldr	r3, [fp, #-172]	; 0xffffff54
   23f98:	cmp	r3, #0
   23f9c:	beq	24040 <contractText@@Base+0x1a80>
   23fa0:	ldr	r2, [pc, #-2148]	; 23744 <contractText@@Base+0x1184>
   23fa4:	ldr	r5, [fp, #-224]	; 0xffffff20
   23fa8:	add	r2, pc, r2
   23fac:	str	r5, [r2, #20]
   23fb0:	str	r3, [r2, #4]
   23fb4:	b	235b0 <contractText@@Base+0xff0>
   23fb8:	ldr	r2, [ip, #36]	; 0x24
   23fbc:	ldr	r3, [ip, #20]
   23fc0:	add	r2, r3, r2, lsl #2
   23fc4:	str	r2, [fp, #-212]	; 0xffffff2c
   23fc8:	b	23948 <contractText@@Base+0x1388>
   23fcc:	ldr	ip, [fp, #-236]	; 0xffffff14
   23fd0:	mov	r5, r4
   23fd4:	str	r4, [r1, #20]
   23fd8:	str	r3, [fp, #-212]	; 0xffffff2c
   23fdc:	str	ip, [r1, #4]
   23fe0:	b	235b0 <contractText@@Base+0xff0>
   23fe4:	bl	214c0 <makeContractionTablePath@@Base+0x224>
   23fe8:	cmp	r0, #0
   23fec:	beq	22b48 <contractText@@Base+0x588>
   23ff0:	ldr	r3, [pc, #-2224]	; 23748 <contractText@@Base+0x1188>
   23ff4:	add	r3, pc, r3
   23ff8:	ldr	r2, [r3, #20]
   23ffc:	b	230f4 <contractText@@Base+0xb34>
   24000:	ldr	r0, [r2, #4]
   24004:	bl	216f0 <makeContractionTablePath@@Base+0x454>
   24008:	cmp	r0, #0
   2400c:	ldreq	r3, [r6]
   24010:	ldreq	r3, [r3, #68]	; 0x44
   24014:	beq	23f2c <contractText@@Base+0x196c>
   24018:	ldr	r3, [r0, #12]
   2401c:	tst	r3, #16
   24020:	ldr	r3, [r6]
   24024:	ldr	r3, [r3, #68]	; 0x44
   24028:	beq	23f2c <contractText@@Base+0x196c>
   2402c:	ldr	r0, [r3, #4]
   24030:	bl	214c0 <makeContractionTablePath@@Base+0x224>
   24034:	cmp	r0, #0
   24038:	bne	23cbc <contractText@@Base+0x16fc>
   2403c:	b	22b48 <contractText@@Base+0x588>
   24040:	ldr	r3, [fp, #-240]	; 0xffffff10
   24044:	ldr	ip, [fp, #-240]	; 0xffffff10
   24048:	ldr	r5, [r3, #12]
   2404c:	ldr	r3, [r3, #28]
   24050:	str	r5, [ip, #20]
   24054:	str	r3, [ip, #4]
   24058:	b	235b0 <contractText@@Base+0xff0>
   2405c:	ldr	r3, [pc, #-2328]	; 2374c <contractText@@Base+0x118c>
   24060:	add	r3, pc, r3
   24064:	ldr	r2, [r3, #20]
   24068:	b	230f4 <contractText@@Base+0xb34>
   2406c:	ldr	ip, [fp, #-196]	; 0xffffff3c
   24070:	cmp	ip, #3
   24074:	bne	2337c <contractText@@Base+0xdbc>
   24078:	cmp	r0, #3
   2407c:	strbeq	r2, [r7, r9]
   24080:	moveq	sl, r8
   24084:	moveq	r8, ip
   24088:	bne	2337c <contractText@@Base+0xdbc>
   2408c:	b	23550 <contractText@@Base+0xf90>
   24090:	cmp	sl, #26
   24094:	bne	234ac <contractText@@Base+0xeec>
   24098:	b	237a0 <contractText@@Base+0x11e0>
   2409c:	bl	14fbc <__stack_chk_fail@plt>
   240a0:	sub	r2, r8, #14
   240a4:	cmp	r8, #2
   240a8:	cmpne	r2, #1
   240ac:	bls	240b8 <contractText@@Base+0x1af8>
   240b0:	cmp	r8, #19
   240b4:	bne	233e0 <contractText@@Base+0xe20>
   240b8:	mov	sl, r8
   240bc:	mov	r2, #0
   240c0:	mov	r8, #15
   240c4:	strb	r2, [r7, r9]
   240c8:	b	23550 <contractText@@Base+0xf90>
   240cc:	cmp	r0, #2
   240d0:	bne	234ac <contractText@@Base+0xeec>
   240d4:	b	237a0 <contractText@@Base+0x11e0>
   240d8:	ldr	r3, [r6]
   240dc:	ldr	r3, [r3, #68]	; 0x44
   240e0:	ldr	r0, [r3, #8]
   240e4:	bl	214c0 <makeContractionTablePath@@Base+0x224>
   240e8:	cmp	r0, #0
   240ec:	bne	23cbc <contractText@@Base+0x16fc>
   240f0:	b	22b48 <contractText@@Base+0x588>
   240f4:	cmp	r0, #2
   240f8:	moveq	r2, #0
   240fc:	moveq	sl, r8
   24100:	strbeq	r2, [r7, r9]
   24104:	bne	23494 <contractText@@Base+0xed4>
   24108:	b	23550 <contractText@@Base+0xf90>
   2410c:	sub	r2, r0, #31
   24110:	cmp	r2, #4
   24114:	bhi	234ac <contractText@@Base+0xeec>
   24118:	b	237a0 <contractText@@Base+0x11e0>
   2411c:	cmp	r2, #33	; 0x21
   24120:	bne	2345c <contractText@@Base+0xe9c>
   24124:	cmp	r0, #15
   24128:	beq	240b8 <contractText@@Base+0x1af8>
   2412c:	cmp	r0, #21
   24130:	bne	23470 <contractText@@Base+0xeb0>
   24134:	b	237a0 <contractText@@Base+0x11e0>
   24138:	cmp	r0, #35	; 0x23
   2413c:	beq	2414c <contractText@@Base+0x1b8c>
   24140:	sub	r2, r0, #31
   24144:	cmp	r2, #2
   24148:	bhi	23448 <contractText@@Base+0xe88>
   2414c:	mov	r2, #0
   24150:	mov	r8, r0
   24154:	strb	r2, [r7, r9]
   24158:	mov	sl, #33	; 0x21
   2415c:	b	23550 <contractText@@Base+0xf90>
   24160:	cmp	r0, #2
   24164:	beq	237a0 <contractText@@Base+0x11e0>
   24168:	sub	r2, r0, #21
   2416c:	cmp	r2, #1
   24170:	bls	237a0 <contractText@@Base+0x11e0>
   24174:	cmp	r0, #19
   24178:	bne	23448 <contractText@@Base+0xe88>
   2417c:	b	237a0 <contractText@@Base+0x11e0>
   24180:	cmp	r0, #2
   24184:	beq	237a0 <contractText@@Base+0x11e0>
   24188:	sub	r2, r0, #19
   2418c:	cmp	r2, #1
   24190:	bhi	23430 <contractText@@Base+0xe70>
   24194:	b	237a0 <contractText@@Base+0x11e0>
   24198:	sub	r2, r0, #21
   2419c:	cmp	r2, #1
   241a0:	bhi	23430 <contractText@@Base+0xe70>
   241a4:	b	237a0 <contractText@@Base+0x11e0>
   241a8:	cmp	r0, #14
   241ac:	cmpne	r0, #2
   241b0:	beq	237a0 <contractText@@Base+0x11e0>
   241b4:	b	24188 <contractText@@Base+0x1bc8>
   241b8:	cmp	r0, #19
   241bc:	bne	23430 <contractText@@Base+0xe70>
   241c0:	b	237a0 <contractText@@Base+0x11e0>
   241c4:	cmp	r0, #21
   241c8:	bne	23430 <contractText@@Base+0xe70>
   241cc:	b	237a0 <contractText@@Base+0x11e0>

000241d0 <getTextLength@@Base>:
   241d0:	mov	r1, r0
   241d4:	mov	r0, #0
   241d8:	mov	r2, r0
   241dc:	b	14d4c <mbstowcs@plt>

000241e0 <convertWcharToUtf8@@Base>:
   241e0:	ldr	r2, [pc, #196]	; 242ac <convertWcharToUtf8@@Base+0xcc>
   241e4:	mov	r3, r0
   241e8:	ldr	r0, [pc, #192]	; 242b0 <convertWcharToUtf8@@Base+0xd0>
   241ec:	bics	ip, r3, #127	; 0x7f
   241f0:	add	r2, pc, r2
   241f4:	push	{r4, r5, r6, r7, r8, lr}
   241f8:	sub	sp, sp, #16
   241fc:	ldr	r7, [r2, r0]
   24200:	mov	r8, r1
   24204:	moveq	r6, #1
   24208:	ldr	r2, [r7]
   2420c:	strbeq	r3, [r1]
   24210:	str	r2, [sp, #12]
   24214:	beq	24284 <convertWcharToUtf8@@Base+0xa4>
   24218:	add	lr, sp, #11
   2421c:	and	r4, r3, #63	; 0x3f
   24220:	lsrs	r3, r3, #6
   24224:	mov	ip, lr
   24228:	orr	r5, r4, #128	; 0x80
   2422c:	sub	lr, lr, #1
   24230:	strb	r5, [ip]
   24234:	bne	2421c <convertWcharToUtf8@@Base+0x3c>
   24238:	add	r6, sp, #12
   2423c:	mov	r1, #1
   24240:	rsb	r6, ip, r6
   24244:	mov	r0, ip
   24248:	rsb	r2, r6, #7
   2424c:	cmp	r4, r1, lsl r2
   24250:	strbge	r3, [r0, #-1]
   24254:	addge	r6, r6, #1
   24258:	uxtblt	r2, r5
   2425c:	movge	r2, r3
   24260:	movge	ip, lr
   24264:	rsb	r5, r6, #8
   24268:	mvn	r3, #0
   2426c:	orr	r5, r2, r3, lsl r5
   24270:	mov	r1, ip
   24274:	strb	r5, [ip]
   24278:	mov	r0, r8
   2427c:	mov	r2, r6
   24280:	bl	150d0 <memcpy@plt>
   24284:	mov	r3, #0
   24288:	ldr	r2, [sp, #12]
   2428c:	strb	r3, [r8, r6]
   24290:	mov	r0, r6
   24294:	ldr	r3, [r7]
   24298:	cmp	r2, r3
   2429c:	bne	242a8 <convertWcharToUtf8@@Base+0xc8>
   242a0:	add	sp, sp, #16
   242a4:	pop	{r4, r5, r6, r7, r8, pc}
   242a8:	bl	14fbc <__stack_chk_fail@plt>
   242ac:	andeq	r6, r1, r8, lsl #28
   242b0:	andeq	r0, r0, r8, asr #4

000242b4 <convertUtf8ToWchar@@Base>:
   242b4:	ldr	ip, [r1]
   242b8:	mov	r2, r0
   242bc:	push	{r4, r5}
   242c0:	mvn	r0, #0
   242c4:	mov	r4, #0
   242c8:	mov	r5, #1
   242cc:	cmp	ip, #0
   242d0:	beq	2436c <convertUtf8ToWchar@@Base+0xb8>
   242d4:	ldr	r3, [r2]
   242d8:	add	ip, r3, #1
   242dc:	str	ip, [r2]
   242e0:	ldrb	r3, [r3]
   242e4:	ldr	ip, [r1]
   242e8:	tst	r3, #128	; 0x80
   242ec:	sub	ip, ip, #1
   242f0:	str	ip, [r1]
   242f4:	beq	243cc <convertUtf8ToWchar@@Base+0x118>
   242f8:	tst	r3, #64	; 0x40
   242fc:	bne	24374 <convertUtf8ToWchar@@Base+0xc0>
   24300:	cmn	r0, #1
   24304:	beq	24318 <convertUtf8ToWchar@@Base+0x64>
   24308:	subs	r4, r4, #1
   2430c:	and	r3, r3, #63	; 0x3f
   24310:	orr	r0, r3, r0, lsl #6
   24314:	bne	242cc <convertUtf8ToWchar@@Base+0x18>
   24318:	cmp	ip, #0
   2431c:	beq	2436c <convertUtf8ToWchar@@Base+0xb8>
   24320:	ldr	r3, [r2]
   24324:	ldrb	ip, [r3]
   24328:	and	ip, ip, #192	; 0xc0
   2432c:	cmp	ip, #128	; 0x80
   24330:	beq	2434c <convertUtf8ToWchar@@Base+0x98>
   24334:	b	2436c <convertUtf8ToWchar@@Base+0xb8>
   24338:	ldr	r3, [r2]
   2433c:	ldrb	r0, [r3]
   24340:	and	r0, r0, #192	; 0xc0
   24344:	cmp	r0, #128	; 0x80
   24348:	bne	24368 <convertUtf8ToWchar@@Base+0xb4>
   2434c:	add	r3, r3, #1
   24350:	str	r3, [r2]
   24354:	ldr	r3, [r1]
   24358:	sub	r3, r3, #1
   2435c:	str	r3, [r1]
   24360:	cmp	r3, #0
   24364:	bne	24338 <convertUtf8ToWchar@@Base+0x84>
   24368:	mvn	r0, #0
   2436c:	pop	{r4, r5}
   24370:	bx	lr
   24374:	tst	r3, #32
   24378:	beq	243b4 <convertUtf8ToWchar@@Base+0x100>
   2437c:	tst	r3, #16
   24380:	beq	243bc <convertUtf8ToWchar@@Base+0x108>
   24384:	tst	r3, #8
   24388:	beq	243c4 <convertUtf8ToWchar@@Base+0x110>
   2438c:	tst	r3, #4
   24390:	moveq	r4, #4
   24394:	bne	243f8 <convertUtf8ToWchar@@Base+0x144>
   24398:	cmn	r0, #1
   2439c:	bne	243d4 <convertUtf8ToWchar@@Base+0x120>
   243a0:	rsb	r0, r4, #6
   243a4:	lsl	r0, r5, r0
   243a8:	sub	r0, r0, #1
   243ac:	and	r0, r0, r3
   243b0:	b	242cc <convertUtf8ToWchar@@Base+0x18>
   243b4:	mov	r4, #1
   243b8:	b	24398 <convertUtf8ToWchar@@Base+0xe4>
   243bc:	mov	r4, #2
   243c0:	b	24398 <convertUtf8ToWchar@@Base+0xe4>
   243c4:	mov	r4, #3
   243c8:	b	24398 <convertUtf8ToWchar@@Base+0xe4>
   243cc:	cmn	r0, #1
   243d0:	beq	24408 <convertUtf8ToWchar@@Base+0x154>
   243d4:	ldr	r3, [r2]
   243d8:	mvn	r0, #0
   243dc:	add	r3, r3, r0
   243e0:	str	r3, [r2]
   243e4:	ldr	r3, [r1]
   243e8:	pop	{r4, r5}
   243ec:	add	r3, r3, #1
   243f0:	str	r3, [r1]
   243f4:	bx	lr
   243f8:	tst	r3, #2
   243fc:	bne	24410 <convertUtf8ToWchar@@Base+0x15c>
   24400:	mov	r4, #5
   24404:	b	24398 <convertUtf8ToWchar@@Base+0xe4>
   24408:	mov	r0, r3
   2440c:	b	24318 <convertUtf8ToWchar@@Base+0x64>
   24410:	cmn	r0, #1
   24414:	beq	24318 <convertUtf8ToWchar@@Base+0x64>
   24418:	b	243d4 <convertUtf8ToWchar@@Base+0x120>

0002441c <getUtf8Length@@Base>:
   2441c:	ldr	r3, [pc, #136]	; 244ac <getUtf8Length@@Base+0x90>
   24420:	ldr	r2, [pc, #136]	; 244b0 <getUtf8Length@@Base+0x94>
   24424:	push	{r4, r5, r6, r7, r8, lr}
   24428:	add	r3, pc, r3
   2442c:	sub	sp, sp, #16
   24430:	str	r0, [sp, #4]
   24434:	ldr	r8, [r3, r2]
   24438:	ldrb	r4, [r0]
   2443c:	ldr	r3, [r8]
   24440:	cmp	r4, #0
   24444:	str	r3, [sp, #12]
   24448:	beq	2448c <getUtf8Length@@Base+0x70>
   2444c:	add	r7, sp, #4
   24450:	add	r6, sp, #8
   24454:	mov	r4, #0
   24458:	mov	r5, #7
   2445c:	b	24474 <getUtf8Length@@Base+0x58>
   24460:	ldr	r3, [sp, #4]
   24464:	add	r4, r4, #1
   24468:	ldrb	r3, [r3]
   2446c:	cmp	r3, #0
   24470:	beq	2448c <getUtf8Length@@Base+0x70>
   24474:	mov	r0, r7
   24478:	mov	r1, r6
   2447c:	str	r5, [sp, #8]
   24480:	bl	242b4 <convertUtf8ToWchar@@Base>
   24484:	cmn	r0, #1
   24488:	bne	24460 <getUtf8Length@@Base+0x44>
   2448c:	ldr	r2, [sp, #12]
   24490:	mov	r0, r4
   24494:	ldr	r3, [r8]
   24498:	cmp	r2, r3
   2449c:	bne	244a8 <getUtf8Length@@Base+0x8c>
   244a0:	add	sp, sp, #16
   244a4:	pop	{r4, r5, r6, r7, r8, pc}
   244a8:	bl	14fbc <__stack_chk_fail@plt>
   244ac:	ldrdeq	r6, [r1], -r0
   244b0:	andeq	r0, r0, r8, asr #4

000244b4 <convertUtf8ToWchars@@Base>:
   244b4:	ldr	r3, [pc, #188]	; 24578 <convertUtf8ToWchars@@Base+0xc4>
   244b8:	push	{r4, r5, r6, r7, r8, r9, lr}
   244bc:	mov	r5, r0
   244c0:	ldr	r0, [pc, #180]	; 2457c <convertUtf8ToWchars@@Base+0xc8>
   244c4:	add	r3, pc, r3
   244c8:	mov	r6, r1
   244cc:	ldr	r1, [r5]
   244d0:	mov	r4, r2
   244d4:	sub	sp, sp, #12
   244d8:	ldr	r9, [r3, r0]
   244dc:	ldrb	r2, [r1]
   244e0:	ldr	r3, [r9]
   244e4:	cmp	r2, #0
   244e8:	str	r3, [sp, #4]
   244ec:	beq	24568 <convertUtf8ToWchars@@Base+0xb4>
   244f0:	cmp	r4, #1
   244f4:	movhi	r7, #7
   244f8:	bhi	2452c <convertUtf8ToWchars@@Base+0x78>
   244fc:	b	24568 <convertUtf8ToWchars@@Base+0xb4>
   24500:	ldr	r3, [r6]
   24504:	sub	r4, r4, #1
   24508:	add	r2, r3, #4
   2450c:	str	r2, [r6]
   24510:	str	r0, [r3]
   24514:	ldr	r3, [r5]
   24518:	ldrb	r3, [r3]
   2451c:	cmp	r3, #0
   24520:	beq	24568 <convertUtf8ToWchars@@Base+0xb4>
   24524:	cmp	r4, #1
   24528:	beq	24544 <convertUtf8ToWchars@@Base+0x90>
   2452c:	mov	r0, r5
   24530:	mov	r1, sp
   24534:	str	r7, [sp]
   24538:	bl	242b4 <convertUtf8ToWchar@@Base>
   2453c:	cmn	r0, #1
   24540:	bne	24500 <convertUtf8ToWchars@@Base+0x4c>
   24544:	ldr	r3, [r6]
   24548:	mov	r2, #0
   2454c:	str	r2, [r3]
   24550:	ldr	r2, [sp, #4]
   24554:	ldr	r3, [r9]
   24558:	cmp	r2, r3
   2455c:	bne	24574 <convertUtf8ToWchars@@Base+0xc0>
   24560:	add	sp, sp, #12
   24564:	pop	{r4, r5, r6, r7, r8, r9, pc}
   24568:	cmp	r4, #0
   2456c:	beq	24550 <convertUtf8ToWchars@@Base+0x9c>
   24570:	b	24544 <convertUtf8ToWchars@@Base+0x90>
   24574:	bl	14fbc <__stack_chk_fail@plt>
   24578:	andeq	r6, r1, r4, lsr fp
   2457c:	andeq	r0, r0, r8, asr #4

00024580 <makeUtf8FromWchars@@Base>:
   24580:	ldr	r3, [pc, #232]	; 24670 <makeUtf8FromWchars@@Base+0xf0>
   24584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24588:	mov	r6, r1
   2458c:	ldr	r1, [pc, #224]	; 24674 <makeUtf8FromWchars@@Base+0xf4>
   24590:	add	r3, pc, r3
   24594:	sub	sp, sp, #28
   24598:	rsb	ip, r6, r6, lsl #3
   2459c:	mov	r5, r0
   245a0:	add	r0, ip, #1
   245a4:	ldr	r1, [r3, r1]
   245a8:	mov	fp, r2
   245ac:	ldr	r3, [r1]
   245b0:	str	r1, [sp, #4]
   245b4:	str	r3, [sp, #20]
   245b8:	bl	150dc <malloc@plt>
   245bc:	subs	r9, r0, #0
   245c0:	beq	24664 <makeUtf8FromWchars@@Base+0xe4>
   245c4:	cmp	r6, #0
   245c8:	beq	2465c <makeUtf8FromWchars@@Base+0xdc>
   245cc:	sub	r5, r5, #4
   245d0:	add	r7, sp, #12
   245d4:	mov	sl, r9
   245d8:	mov	r4, #0
   245dc:	mov	r8, #32
   245e0:	b	245f0 <makeUtf8FromWchars@@Base+0x70>
   245e4:	add	r4, r4, #1
   245e8:	cmp	r4, r6
   245ec:	beq	24628 <makeUtf8FromWchars@@Base+0xa8>
   245f0:	ldr	r0, [r5, #4]!
   245f4:	mov	r1, r7
   245f8:	bl	241e0 <convertWcharToUtf8@@Base>
   245fc:	subs	r2, r0, #0
   24600:	strbeq	r8, [sl]
   24604:	addeq	sl, sl, #1
   24608:	beq	245e4 <makeUtf8FromWchars@@Base+0x64>
   2460c:	mov	r0, sl
   24610:	mov	r1, r7
   24614:	bl	15148 <mempcpy@plt>
   24618:	add	r4, r4, #1
   2461c:	cmp	r4, r6
   24620:	mov	sl, r0
   24624:	bne	245f0 <makeUtf8FromWchars@@Base+0x70>
   24628:	cmp	fp, #0
   2462c:	mov	r2, #0
   24630:	strb	r2, [sl]
   24634:	rsbne	r3, r9, sl
   24638:	strne	r3, [fp]
   2463c:	ldr	r1, [sp, #4]
   24640:	mov	r0, r9
   24644:	ldr	r2, [sp, #20]
   24648:	ldr	r3, [r1]
   2464c:	cmp	r2, r3
   24650:	bne	2466c <makeUtf8FromWchars@@Base+0xec>
   24654:	add	sp, sp, #28
   24658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2465c:	mov	sl, r9
   24660:	b	24628 <makeUtf8FromWchars@@Base+0xa8>
   24664:	bl	184dc <logMallocError@@Base>
   24668:	b	2463c <makeUtf8FromWchars@@Base+0xbc>
   2466c:	bl	14fbc <__stack_chk_fail@plt>
   24670:	andeq	r6, r1, r8, ror #20
   24674:	andeq	r0, r0, r8, asr #4

00024678 <convertCharToUtf8@@Base>:
   24678:	push	{r4, lr}
   2467c:	mov	r4, r1
   24680:	bl	248dc <convertCharToWchar@@Base>
   24684:	cmn	r0, #1
   24688:	beq	24698 <convertCharToUtf8@@Base+0x20>
   2468c:	mov	r1, r4
   24690:	pop	{r4, lr}
   24694:	b	241e0 <convertWcharToUtf8@@Base>
   24698:	mov	r0, #0
   2469c:	pop	{r4, pc}

000246a0 <convertUtf8ToChar@@Base>:
   246a0:	push	{r3, lr}
   246a4:	bl	242b4 <convertUtf8ToWchar@@Base>
   246a8:	cmn	r0, #1
   246ac:	popeq	{r3, pc}
   246b0:	pop	{r3, lr}
   246b4:	b	249b8 <convertWcharToChar@@Base>

000246b8 <getWcharCharset@@Base>:
   246b8:	ldr	r3, [pc, #156]	; 2475c <getWcharCharset@@Base+0xa4>
   246bc:	ldr	r2, [pc, #156]	; 24760 <getWcharCharset@@Base+0xa8>
   246c0:	push	{r4, r5, r6, lr}
   246c4:	add	r3, pc, r3
   246c8:	ldr	r5, [pc, #148]	; 24764 <getWcharCharset@@Base+0xac>
   246cc:	sub	sp, sp, #40	; 0x28
   246d0:	ldr	r4, [r3, r2]
   246d4:	add	r5, pc, r5
   246d8:	ldr	r0, [r5]
   246dc:	ldr	r3, [r4]
   246e0:	cmp	r0, #0
   246e4:	str	r3, [sp, #36]	; 0x24
   246e8:	beq	24704 <getWcharCharset@@Base+0x4c>
   246ec:	ldr	r2, [sp, #36]	; 0x24
   246f0:	ldr	r3, [r4]
   246f4:	cmp	r2, r3
   246f8:	bne	24758 <getWcharCharset@@Base+0xa0>
   246fc:	add	sp, sp, #40	; 0x28
   24700:	pop	{r4, r5, r6, pc}
   24704:	add	r6, sp, #20
   24708:	ldr	ip, [pc, #88]	; 24768 <getWcharCharset@@Base+0xb0>
   2470c:	mov	r1, #16
   24710:	mov	r2, #4
   24714:	add	ip, pc, ip
   24718:	mov	r3, r1
   2471c:	str	ip, [sp]
   24720:	mov	r0, r6
   24724:	mov	ip, #76	; 0x4c
   24728:	str	r2, [sp, #4]
   2472c:	str	ip, [sp, #8]
   24730:	mov	r2, #1
   24734:	bl	150f4 <__snprintf_chk@plt>
   24738:	mov	r0, r6
   2473c:	bl	14e54 <__strdup@plt>
   24740:	cmp	r0, #0
   24744:	str	r0, [r5]
   24748:	bne	246ec <getWcharCharset@@Base+0x34>
   2474c:	bl	184dc <logMallocError@@Base>
   24750:	ldr	r0, [r5]
   24754:	b	246ec <getWcharCharset@@Base+0x34>
   24758:	bl	14fbc <__stack_chk_fail@plt>
   2475c:	andeq	r6, r1, r4, lsr r9
   24760:	andeq	r0, r0, r8, asr #4
   24764:	andeq	r6, r1, r8, lsr #26
   24768:	andeq	r4, r0, r8, ror #16

0002476c <setCharset@@Base>:
   2476c:	push	{r3, r4, r5, lr}
   24770:	subs	r5, r0, #0
   24774:	beq	247f0 <setCharset@@Base+0x84>
   24778:	ldr	r3, [pc, #172]	; 2482c <setCharset@@Base+0xc0>
   2477c:	add	r3, pc, r3
   24780:	ldr	r4, [r3, #4]
   24784:	cmp	r4, #0
   24788:	beq	247a0 <setCharset@@Base+0x34>
   2478c:	mov	r0, r4
   24790:	mov	r1, r5
   24794:	bl	1519c <strcmp@plt>
   24798:	cmp	r0, #0
   2479c:	beq	247e8 <setCharset@@Base+0x7c>
   247a0:	mov	r0, r5
   247a4:	bl	14e54 <__strdup@plt>
   247a8:	subs	r5, r0, #0
   247ac:	beq	24820 <setCharset@@Base+0xb4>
   247b0:	bl	24aec <registerCharacterSet@@Base>
   247b4:	subs	r4, r0, #0
   247b8:	beq	24810 <setCharset@@Base+0xa4>
   247bc:	ldr	r3, [pc, #108]	; 24830 <setCharset@@Base+0xc4>
   247c0:	add	r3, pc, r3
   247c4:	ldr	r0, [r3, #4]
   247c8:	cmp	r0, #0
   247cc:	beq	247d4 <setCharset@@Base+0x68>
   247d0:	bl	14d10 <free@plt>
   247d4:	ldr	r3, [pc, #88]	; 24834 <setCharset@@Base+0xc8>
   247d8:	mov	r0, r5
   247dc:	add	r3, pc, r3
   247e0:	str	r5, [r3, #4]
   247e4:	pop	{r3, r4, r5, pc}
   247e8:	mov	r0, r4
   247ec:	pop	{r3, r4, r5, pc}
   247f0:	ldr	r3, [pc, #64]	; 24838 <setCharset@@Base+0xcc>
   247f4:	add	r3, pc, r3
   247f8:	ldr	r0, [r3, #4]
   247fc:	cmp	r0, #0
   24800:	popne	{r3, r4, r5, pc}
   24804:	bl	24a98 <getLocaleCharset@@Base>
   24808:	mov	r5, r0
   2480c:	b	247a0 <setCharset@@Base+0x34>
   24810:	mov	r0, r5
   24814:	bl	14d10 <free@plt>
   24818:	mov	r0, r4
   2481c:	pop	{r3, r4, r5, pc}
   24820:	bl	184dc <logMallocError@@Base>
   24824:	mov	r0, r5
   24828:	pop	{r3, r4, r5, pc}
   2482c:	andeq	r6, r1, r0, lsl #25
   24830:	andeq	r6, r1, ip, lsr ip
   24834:	andeq	r6, r1, r0, lsr #24
   24838:	andeq	r6, r1, r8, lsl #24

0002483c <getCharset@@Base>:
   2483c:	mov	r0, #0
   24840:	b	2476c <setCharset@@Base>

00024844 <lockCharset@@Base>:
   24844:	ldr	r3, [pc, #36]	; 24870 <lockCharset@@Base+0x2c>
   24848:	push	{r4, lr}
   2484c:	add	r3, pc, r3
   24850:	mov	r4, r0
   24854:	add	r0, r3, #8
   24858:	bl	25378 <getLockDescriptor@@Base>
   2485c:	cmp	r0, #0
   24860:	popeq	{r4, pc}
   24864:	mov	r1, r4
   24868:	pop	{r4, lr}
   2486c:	b	25320 <obtainLock@@Base>
   24870:			; <UNDEFINED> instruction: 0x00016bb0

00024874 <unlockCharset@@Base>:
   24874:	ldr	r0, [pc, #28]	; 24898 <unlockCharset@@Base+0x24>
   24878:	push	{r3, lr}
   2487c:	add	r0, pc, r0
   24880:	add	r0, r0, #8
   24884:	bl	25378 <getLockDescriptor@@Base>
   24888:	cmp	r0, #0
   2488c:	popeq	{r3, pc}
   24890:	pop	{r3, lr}
   24894:	b	25374 <releaseLock@@Base>
   24898:	andeq	r6, r1, r0, lsl #23

0002489c <isPosixLocale@@Base>:
   2489c:	push	{r3, lr}
   248a0:	ldrb	r3, [r0]
   248a4:	cmp	r3, #67	; 0x43
   248a8:	bne	248c0 <isPosixLocale@@Base+0x24>
   248ac:	ldrb	r3, [r0, #1]
   248b0:	cmp	r3, #0
   248b4:	bne	248c0 <isPosixLocale@@Base+0x24>
   248b8:	mov	r0, #1
   248bc:	pop	{r3, pc}
   248c0:	ldr	r1, [pc, #16]	; 248d8 <isPosixLocale@@Base+0x3c>
   248c4:	add	r1, pc, r1
   248c8:	bl	1519c <strcmp@plt>
   248cc:	rsbs	r0, r0, #1
   248d0:	movcc	r0, #0
   248d4:	pop	{r3, pc}
   248d8:	andeq	r4, r0, r4, asr #13

000248dc <convertCharToWchar@@Base>:
   248dc:	ldr	r3, [pc, #196]	; 249a8 <convertCharToWchar@@Base+0xcc>
   248e0:	ldr	r2, [pc, #196]	; 249ac <convertCharToWchar@@Base+0xd0>
   248e4:	push	{r4, r5, lr}
   248e8:	add	r3, pc, r3
   248ec:	sub	sp, sp, #44	; 0x2c
   248f0:	strb	r0, [sp, #15]
   248f4:	ldr	r4, [r3, r2]
   248f8:	ldr	r3, [r4]
   248fc:	str	r3, [sp, #36]	; 0x24
   24900:	bl	2483c <getCharset@@Base>
   24904:	cmp	r0, #0
   24908:	mvneq	r0, #0
   2490c:	beq	24964 <convertCharToWchar@@Base+0x88>
   24910:	ldr	r0, [pc, #152]	; 249b0 <convertCharToWchar@@Base+0xd4>
   24914:	add	r3, sp, #32
   24918:	add	r1, sp, #16
   2491c:	str	r3, [sp]
   24920:	add	r0, pc, r0
   24924:	add	r2, sp, #20
   24928:	add	r3, sp, #28
   2492c:	mov	ip, #1
   24930:	ldr	r0, [r0]
   24934:	add	lr, sp, #15
   24938:	str	ip, [sp, #20]
   2493c:	add	ip, sp, #24
   24940:	str	lr, [sp, #16]
   24944:	str	ip, [sp, #28]
   24948:	mov	ip, #4
   2494c:	str	ip, [sp, #32]
   24950:	bl	151a8 <iconv@plt>
   24954:	cmn	r0, #1
   24958:	mov	r5, r0
   2495c:	beq	2497c <convertCharToWchar@@Base+0xa0>
   24960:	ldr	r0, [sp, #24]
   24964:	ldr	r2, [sp, #36]	; 0x24
   24968:	ldr	r3, [r4]
   2496c:	cmp	r2, r3
   24970:	bne	249a4 <convertCharToWchar@@Base+0xc8>
   24974:	add	sp, sp, #44	; 0x2c
   24978:	pop	{r4, r5, pc}
   2497c:	bl	151b4 <__errno_location@plt>
   24980:	ldr	r0, [r0]
   24984:	bl	14d64 <strerror@plt>
   24988:	ldr	r1, [pc, #36]	; 249b4 <convertCharToWchar@@Base+0xd8>
   2498c:	add	r1, pc, r1
   24990:	mov	r2, r0
   24994:	mov	r0, #7
   24998:	bl	183d0 <logMessage@@Base>
   2499c:	mov	r0, r5
   249a0:	b	24964 <convertCharToWchar@@Base+0x88>
   249a4:	bl	14fbc <__stack_chk_fail@plt>
   249a8:	andeq	r6, r1, r0, lsl r7
   249ac:	andeq	r0, r0, r8, asr #4
   249b0:	andeq	r6, r1, r0, lsr #19
   249b4:	andeq	r4, r0, r4, lsl #12

000249b8 <convertWcharToChar@@Base>:
   249b8:	ldr	r3, [pc, #200]	; 24a88 <convertWcharToChar@@Base+0xd0>
   249bc:	ldr	r2, [pc, #200]	; 24a8c <convertWcharToChar@@Base+0xd4>
   249c0:	push	{r4, r5, lr}
   249c4:	add	r3, pc, r3
   249c8:	sub	sp, sp, #44	; 0x2c
   249cc:	str	r0, [sp, #12]
   249d0:	ldr	r4, [r3, r2]
   249d4:	ldr	r3, [r4]
   249d8:	str	r3, [sp, #36]	; 0x24
   249dc:	bl	2483c <getCharset@@Base>
   249e0:	cmp	r0, #0
   249e4:	beq	24a54 <convertWcharToChar@@Base+0x9c>
   249e8:	ldr	r0, [pc, #160]	; 24a90 <convertWcharToChar@@Base+0xd8>
   249ec:	add	r3, sp, #32
   249f0:	add	r1, sp, #20
   249f4:	str	r3, [sp]
   249f8:	add	r0, pc, r0
   249fc:	add	r2, sp, #24
   24a00:	add	r3, sp, #28
   24a04:	mov	ip, #4
   24a08:	ldr	r0, [r0, #4]
   24a0c:	add	lr, sp, #12
   24a10:	str	ip, [sp, #24]
   24a14:	add	ip, sp, #19
   24a18:	str	lr, [sp, #20]
   24a1c:	str	ip, [sp, #28]
   24a20:	mov	ip, #1
   24a24:	str	ip, [sp, #32]
   24a28:	bl	151a8 <iconv@plt>
   24a2c:	cmn	r0, #1
   24a30:	mov	r5, r0
   24a34:	beq	24a5c <convertWcharToChar@@Base+0xa4>
   24a38:	ldrb	r0, [sp, #19]
   24a3c:	ldr	r2, [sp, #36]	; 0x24
   24a40:	ldr	r3, [r4]
   24a44:	cmp	r2, r3
   24a48:	bne	24a84 <convertWcharToChar@@Base+0xcc>
   24a4c:	add	sp, sp, #44	; 0x2c
   24a50:	pop	{r4, r5, pc}
   24a54:	mvn	r0, #0
   24a58:	b	24a3c <convertWcharToChar@@Base+0x84>
   24a5c:	bl	151b4 <__errno_location@plt>
   24a60:	ldr	r0, [r0]
   24a64:	bl	14d64 <strerror@plt>
   24a68:	ldr	r1, [pc, #36]	; 24a94 <convertWcharToChar@@Base+0xdc>
   24a6c:	add	r1, pc, r1
   24a70:	mov	r2, r0
   24a74:	mov	r0, #7
   24a78:	bl	183d0 <logMessage@@Base>
   24a7c:	mov	r0, r5
   24a80:	b	24a3c <convertWcharToChar@@Base+0x84>
   24a84:	bl	14fbc <__stack_chk_fail@plt>
   24a88:	andeq	r6, r1, r4, lsr r6
   24a8c:	andeq	r0, r0, r8, asr #4
   24a90:	andeq	r6, r1, r8, asr #17
   24a94:	andeq	r4, r0, r8, asr #10

00024a98 <getLocaleCharset@@Base>:
   24a98:	ldr	r1, [pc, #64]	; 24ae0 <getLocaleCharset@@Base+0x48>
   24a9c:	mov	r0, #6
   24aa0:	push	{r4, lr}
   24aa4:	add	r1, pc, r1
   24aa8:	bl	1507c <setlocale@plt>
   24aac:	ldr	r4, [pc, #48]	; 24ae4 <getLocaleCharset@@Base+0x4c>
   24ab0:	add	r4, pc, r4
   24ab4:	cmp	r0, #0
   24ab8:	beq	24ac8 <getLocaleCharset@@Base+0x30>
   24abc:	bl	2489c <isPosixLocale@@Base>
   24ac0:	cmp	r0, #0
   24ac4:	beq	24ad4 <getLocaleCharset@@Base+0x3c>
   24ac8:	ldr	r3, [pc, #24]	; 24ae8 <getLocaleCharset@@Base+0x50>
   24acc:	ldr	r0, [r4, r3]
   24ad0:	pop	{r4, pc}
   24ad4:	mov	r0, #14
   24ad8:	pop	{r4, lr}
   24adc:	b	14dac <nl_langinfo@plt>
   24ae0:	andeq	r1, r0, r4, lsr r7
   24ae4:	andeq	r6, r1, r8, asr #10
   24ae8:	andeq	r0, r0, r0, lsr #5

00024aec <registerCharacterSet@@Base>:
   24aec:	ldr	r3, [pc, #444]	; 24cb0 <registerCharacterSet@@Base+0x1c4>
   24af0:	ldr	r2, [pc, #444]	; 24cb4 <registerCharacterSet@@Base+0x1c8>
   24af4:	add	r3, pc, r3
   24af8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   24afc:	sub	sp, sp, #64	; 0x40
   24b00:	ldr	r8, [r3, r2]
   24b04:	mov	r6, r0
   24b08:	add	r4, sp, #20
   24b0c:	ldr	r3, [r8]
   24b10:	str	r3, [sp, #60]	; 0x3c
   24b14:	bl	246b8 <getWcharCharset@@Base>
   24b18:	ldr	r3, [pc, #408]	; 24cb8 <registerCharacterSet@@Base+0x1cc>
   24b1c:	mvn	r1, #0
   24b20:	ldrb	r9, [sp, #52]	; 0x34
   24b24:	mov	r2, #0
   24b28:	add	r3, pc, r3
   24b2c:	ldrb	r7, [sp, #12]
   24b30:	ldrb	ip, [sp, #32]
   24b34:	add	sl, r3, #4
   24b38:	mov	r5, r3
   24b3c:	bfc	r7, #0, #1
   24b40:	bfc	ip, #0, #1
   24b44:	str	r3, [sp]
   24b48:	str	r6, [sp, #4]
   24b4c:	mov	r3, r2
   24b50:	str	r6, [sp, #28]
   24b54:	str	sl, [sp, #20]
   24b58:	strb	r7, [sp, #12]
   24b5c:	strb	ip, [sp, #32]
   24b60:	str	r1, [sp, #16]
   24b64:	str	r1, [sp, #36]	; 0x24
   24b68:	str	r1, [sp, #56]	; 0x38
   24b6c:	str	r2, [sp, #40]	; 0x28
   24b70:	str	r2, [sp, #44]	; 0x2c
   24b74:	str	r2, [sp, #48]	; 0x30
   24b78:	str	r0, [sp, #8]
   24b7c:	str	r0, [sp, #24]
   24b80:	orr	r0, r9, #1
   24b84:	mov	r9, r1
   24b88:	strb	r0, [sp, #52]	; 0x34
   24b8c:	b	24bb8 <registerCharacterSet@@Base+0xcc>
   24b90:	ldr	r6, [r5]
   24b94:	cmn	r6, #1
   24b98:	strne	r9, [r4, #-4]
   24b9c:	beq	24c8c <registerCharacterSet@@Base+0x1a0>
   24ba0:	mov	r6, r4
   24ba4:	ldr	r5, [r4], #20
   24ba8:	cmp	r5, #0
   24bac:	beq	24c28 <registerCharacterSet@@Base+0x13c>
   24bb0:	ldrb	r3, [r7, #32]
   24bb4:	and	r3, r3, #1
   24bb8:	cmp	r3, #0
   24bbc:	sub	r7, r4, #20
   24bc0:	bne	24b90 <registerCharacterSet@@Base+0xa4>
   24bc4:	ldr	r0, [r4, #-12]
   24bc8:	ldr	r1, [r4, #-16]
   24bcc:	bl	15178 <iconv_open@plt>
   24bd0:	cmn	r0, #1
   24bd4:	str	r0, [r4, #-4]
   24bd8:	bne	24ba0 <registerCharacterSet@@Base+0xb4>
   24bdc:	ldr	r0, [pc, #216]	; 24cbc <registerCharacterSet@@Base+0x1d0>
   24be0:	mov	r9, sp
   24be4:	add	r0, pc, r0
   24be8:	bl	18498 <logSystemError@@Base>
   24bec:	cmp	r7, r9
   24bf0:	subne	r5, r7, #20
   24bf4:	movne	r4, r5
   24bf8:	beq	24c20 <registerCharacterSet@@Base+0x134>
   24bfc:	rsb	r3, r7, r4
   24c00:	add	r3, r3, r5
   24c04:	ldr	r0, [r3, #36]	; 0x24
   24c08:	cmn	r0, #1
   24c0c:	beq	24c14 <registerCharacterSet@@Base+0x128>
   24c10:	bl	15094 <iconv_close@plt>
   24c14:	cmp	r9, r4
   24c18:	sub	r4, r4, #20
   24c1c:	bne	24bfc <registerCharacterSet@@Base+0x110>
   24c20:	mov	r0, #0
   24c24:	b	24c70 <registerCharacterSet@@Base+0x184>
   24c28:	mov	r9, sp
   24c2c:	cmp	r6, r9
   24c30:	beq	24c6c <registerCharacterSet@@Base+0x180>
   24c34:	sub	r4, r6, #4
   24c38:	ldr	r5, [r4]
   24c3c:	sub	r6, r6, #20
   24c40:	cmn	r5, #1
   24c44:	beq	24c60 <registerCharacterSet@@Base+0x174>
   24c48:	ldr	r7, [r4, #-16]
   24c4c:	ldr	r0, [r7]
   24c50:	cmn	r0, #1
   24c54:	beq	24c5c <registerCharacterSet@@Base+0x170>
   24c58:	bl	15094 <iconv_close@plt>
   24c5c:	str	r5, [r7]
   24c60:	cmp	r6, r9
   24c64:	sub	r4, r4, #20
   24c68:	bne	24c38 <registerCharacterSet@@Base+0x14c>
   24c6c:	mov	r0, #1
   24c70:	ldr	r2, [sp, #60]	; 0x3c
   24c74:	ldr	r3, [r8]
   24c78:	cmp	r2, r3
   24c7c:	bne	24c88 <registerCharacterSet@@Base+0x19c>
   24c80:	add	sp, sp, #64	; 0x40
   24c84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24c88:	bl	14fbc <__stack_chk_fail@plt>
   24c8c:	ldr	r0, [r4, #-12]
   24c90:	ldr	r1, [r4, #-16]
   24c94:	bl	15178 <iconv_open@plt>
   24c98:	cmn	r0, #1
   24c9c:	str	r0, [r4, #-4]
   24ca0:	beq	24bdc <registerCharacterSet@@Base+0xf0>
   24ca4:	str	r0, [r5]
   24ca8:	str	r6, [r4, #-4]
   24cac:	b	24ba0 <registerCharacterSet@@Base+0xb4>
   24cb0:	andeq	r6, r1, r4, lsl #10
   24cb4:	andeq	r0, r0, r8, asr #4
   24cb8:	muleq	r1, r8, r7
   24cbc:	strdeq	r4, [r0], -ip
   24cc0:	push	{r4, lr}
   24cc4:	mov	r4, r0
   24cc8:	bl	2501c <subdestructHostCommandStream@@Base>
   24ccc:	ldr	r3, [r4]
   24cd0:	ldr	r3, [r3]
   24cd4:	ldr	r0, [r3]
   24cd8:	cmp	r0, #0
   24cdc:	beq	24cf4 <registerCharacterSet@@Base+0x208>
   24ce0:	bl	15124 <fclose@plt>
   24ce4:	ldr	r3, [r4]
   24ce8:	mov	r2, #0
   24cec:	ldr	r3, [r3]
   24cf0:	str	r2, [r3]
   24cf4:	mov	r0, #1
   24cf8:	pop	{r4, pc}
   24cfc:	push	{r3, lr}
   24d00:	mov	r2, #0
   24d04:	ldr	r3, [r0]
   24d08:	ldr	r3, [r3]
   24d0c:	str	r2, [r3]
   24d10:	bl	2500c <subconstructHostCommandStream@@Base>
   24d14:	mov	r0, #1
   24d18:	pop	{r3, pc}

00024d1c <processHostCommandStreams@@Base>:
   24d1c:	push	{r3, r4, r5, lr}
   24d20:	mov	r5, r0
   24d24:	ldr	r3, [r1]
   24d28:	cmp	r3, #0
   24d2c:	movne	r4, r1
   24d30:	beq	24d5c <processHostCommandStreams@@Base+0x40>
   24d34:	ldr	r3, [r3]
   24d38:	mov	r0, r4
   24d3c:	cmp	r3, #0
   24d40:	beq	24d50 <processHostCommandStreams@@Base+0x34>
   24d44:	blx	r5
   24d48:	cmp	r0, #0
   24d4c:	beq	24d64 <processHostCommandStreams@@Base+0x48>
   24d50:	ldr	r3, [r4, #20]!
   24d54:	cmp	r3, #0
   24d58:	bne	24d34 <processHostCommandStreams@@Base+0x18>
   24d5c:	mov	r0, #1
   24d60:	pop	{r3, r4, r5, pc}
   24d64:	pop	{r3, r4, r5, pc}

00024d68 <initializeHostCommandOptions@@Base>:
   24d68:	ldrb	r2, [r0]
   24d6c:	mov	r3, #0
   24d70:	str	r3, [r0, #4]
   24d74:	bfc	r2, #0, #1
   24d78:	str	r3, [r0, #8]
   24d7c:	strb	r2, [r0]
   24d80:	str	r3, [r0, #12]
   24d84:	bx	lr

00024d88 <runHostCommand@@Base>:
   24d88:	push	{r4, r5, r6, r7, r8, lr}
   24d8c:	subs	r4, r1, #0
   24d90:	ldr	r6, [pc, #272]	; 24ea8 <runHostCommand@@Base+0x120>
   24d94:	sub	sp, sp, #104	; 0x68
   24d98:	ldr	r3, [pc, #268]	; 24eac <runHostCommand@@Base+0x124>
   24d9c:	mov	r2, #255	; 0xff
   24da0:	add	r6, pc, r6
   24da4:	mov	r8, r0
   24da8:	ldr	r7, [r6, r3]
   24dac:	str	r2, [sp]
   24db0:	ldr	r3, [r7]
   24db4:	str	r3, [sp, #100]	; 0x64
   24db8:	beq	24e94 <runHostCommand@@Base+0x10c>
   24dbc:	ldr	r1, [pc, #236]	; 24eb0 <runHostCommand@@Base+0x128>
   24dc0:	add	r5, sp, #20
   24dc4:	mov	r0, #7
   24dc8:	ldr	r2, [r8]
   24dcc:	add	r1, pc, r1
   24dd0:	bl	183d0 <logMessage@@Base>
   24dd4:	mov	r1, #0
   24dd8:	mov	r2, #80	; 0x50
   24ddc:	mov	r0, r5
   24de0:	bl	14e0c <memset@plt>
   24de4:	ldr	r0, [pc, #200]	; 24eb4 <runHostCommand@@Base+0x12c>
   24de8:	mov	r1, r5
   24dec:	mov	r3, #1
   24df0:	add	r0, pc, r0
   24df4:	add	r2, r4, #4
   24df8:	strb	r3, [sp, #28]
   24dfc:	str	r2, [sp, #20]
   24e00:	add	r2, r4, #8
   24e04:	str	r3, [sp, #44]	; 0x2c
   24e08:	mov	r3, #2
   24e0c:	str	r2, [sp, #40]	; 0x28
   24e10:	add	r2, r4, #12
   24e14:	str	r3, [sp, #64]	; 0x40
   24e18:	str	r2, [sp, #60]	; 0x3c
   24e1c:	bl	24d1c <processHostCommandStreams@@Base>
   24e20:	cmp	r0, #0
   24e24:	bne	24e44 <runHostCommand@@Base+0xbc>
   24e28:	ldr	r2, [sp, #100]	; 0x64
   24e2c:	ldr	r3, [r7]
   24e30:	ldr	r0, [sp]
   24e34:	cmp	r2, r3
   24e38:	bne	24ea4 <runHostCommand@@Base+0x11c>
   24e3c:	add	sp, sp, #104	; 0x68
   24e40:	pop	{r4, r5, r6, r7, r8, pc}
   24e44:	ldr	r3, [pc, #108]	; 24eb8 <runHostCommand@@Base+0x130>
   24e48:	mov	r1, r5
   24e4c:	ldr	r0, [r6, r3]
   24e50:	bl	24d1c <processHostCommandStreams@@Base>
   24e54:	cmp	r0, #0
   24e58:	bne	24e70 <runHostCommand@@Base+0xe8>
   24e5c:	ldr	r0, [pc, #88]	; 24ebc <runHostCommand@@Base+0x134>
   24e60:	mov	r1, r5
   24e64:	add	r0, pc, r0
   24e68:	bl	24d1c <processHostCommandStreams@@Base>
   24e6c:	b	24e28 <runHostCommand@@Base+0xa0>
   24e70:	ldrb	r3, [r4]
   24e74:	mov	r1, r8
   24e78:	mov	r0, sp
   24e7c:	mov	r2, r5
   24e80:	and	r3, r3, #1
   24e84:	bl	25088 <runCommand@@Base>
   24e88:	cmp	r0, #0
   24e8c:	beq	24e5c <runHostCommand@@Base+0xd4>
   24e90:	b	24e28 <runHostCommand@@Base+0xa0>
   24e94:	add	r4, sp, #4
   24e98:	mov	r0, r4
   24e9c:	bl	24d68 <initializeHostCommandOptions@@Base>
   24ea0:	b	24dbc <runHostCommand@@Base+0x34>
   24ea4:	bl	14fbc <__stack_chk_fail@plt>
   24ea8:	andeq	r6, r1, r8, asr r2
   24eac:	andeq	r0, r0, r8, asr #4
   24eb0:	andeq	r4, r0, r0, lsr #4
   24eb4:			; <UNDEFINED> instruction: 0xffffff04
   24eb8:	andeq	r0, r0, r8, lsl #5
   24ebc:			; <UNDEFINED> instruction: 0xfffffe54
   24ec0:	push	{r4, r5, r6, r7, r8, lr}
   24ec4:	mov	r4, r0
   24ec8:	ldrb	r3, [r0, #8]
   24ecc:	tst	r3, #1
   24ed0:	beq	24f24 <runHostCommand@@Base+0x19c>
   24ed4:	ldr	r8, [pc, #112]	; 24f4c <runHostCommand@@Base+0x1c4>
   24ed8:	add	r6, r0, #16
   24edc:	add	r5, r0, #12
   24ee0:	add	r8, pc, r8
   24ee4:	ldr	r0, [r5]
   24ee8:	mvn	r7, #0
   24eec:	bl	14e6c <close@plt>
   24ef0:	str	r7, [r5]
   24ef4:	ldr	r3, [r4]
   24ef8:	mov	r1, r8
   24efc:	ldr	r0, [r6]
   24f00:	ldr	r5, [r3]
   24f04:	bl	14cf8 <fdopen@plt>
   24f08:	cmp	r0, #0
   24f0c:	mov	r4, r0
   24f10:	str	r0, [r5]
   24f14:	beq	24f38 <runHostCommand@@Base+0x1b0>
   24f18:	mov	r0, #1
   24f1c:	str	r7, [r6]
   24f20:	pop	{r4, r5, r6, r7, r8, pc}
   24f24:	ldr	r8, [pc, #36]	; 24f50 <runHostCommand@@Base+0x1c8>
   24f28:	add	r6, r0, #12
   24f2c:	add	r5, r0, #16
   24f30:	add	r8, pc, r8
   24f34:	b	24ee4 <runHostCommand@@Base+0x15c>
   24f38:	ldr	r0, [pc, #20]	; 24f54 <runHostCommand@@Base+0x1cc>
   24f3c:	add	r0, pc, r0
   24f40:	bl	18498 <logSystemError@@Base>
   24f44:	mov	r0, r4
   24f48:	pop	{r4, r5, r6, r7, r8, pc}
   24f4c:	strdeq	r1, [r0], -r0
   24f50:	andeq	r2, r0, ip, lsl r6
   24f54:	andeq	r4, r0, ip, asr #1
   24f58:	push	{r3, r4, r5, r6, r7, lr}
   24f5c:	mov	r4, r0
   24f60:	ldrb	r3, [r0, #8]
   24f64:	mvn	r7, #0
   24f68:	tst	r3, #1
   24f6c:	addne	r6, r0, #16
   24f70:	addeq	r6, r0, #12
   24f74:	addne	r5, r0, #12
   24f78:	addeq	r5, r0, #16
   24f7c:	ldr	r0, [r6]
   24f80:	bl	14e6c <close@plt>
   24f84:	str	r7, [r6]
   24f88:	ldr	r0, [r4, #4]
   24f8c:	bl	14e6c <close@plt>
   24f90:	cmp	r0, r7
   24f94:	beq	24fc4 <runHostCommand@@Base+0x23c>
   24f98:	ldr	r2, [r4, #4]
   24f9c:	mov	r1, #0
   24fa0:	ldr	r0, [r5]
   24fa4:	bl	14e24 <fcntl@plt>
   24fa8:	cmn	r0, #1
   24fac:	beq	24fd8 <runHostCommand@@Base+0x250>
   24fb0:	ldr	r0, [r5]
   24fb4:	bl	14e6c <close@plt>
   24fb8:	mov	r0, #1
   24fbc:	str	r7, [r5]
   24fc0:	pop	{r3, r4, r5, r6, r7, pc}
   24fc4:	ldr	r0, [pc, #32]	; 24fec <runHostCommand@@Base+0x264>
   24fc8:	add	r0, pc, r0
   24fcc:	bl	18498 <logSystemError@@Base>
   24fd0:	mov	r0, #0
   24fd4:	pop	{r3, r4, r5, r6, r7, pc}
   24fd8:	ldr	r0, [pc, #16]	; 24ff0 <runHostCommand@@Base+0x268>
   24fdc:	add	r0, pc, r0
   24fe0:	bl	18498 <logSystemError@@Base>
   24fe4:	mov	r0, #0
   24fe8:	pop	{r3, r4, r5, r6, r7, pc}
   24fec:	andeq	r4, r0, r8, asr #32
   24ff0:	andeq	r4, r0, ip, lsr r0

00024ff4 <isHostCommand@@Base>:
   24ff4:	push	{r3, lr}
   24ff8:	mov	r1, #1
   24ffc:	bl	14fe0 <access@plt>
   25000:	adds	r0, r0, #1
   25004:	movne	r0, #1
   25008:	pop	{r3, pc}

0002500c <subconstructHostCommandStream@@Base>:
   2500c:	mvn	r3, #0
   25010:	str	r3, [r0, #16]
   25014:	str	r3, [r0, #12]
   25018:	bx	lr

0002501c <subdestructHostCommandStream@@Base>:
   2501c:	push	{r4, r5, r6, lr}
   25020:	add	r4, r0, #12
   25024:	add	r5, r0, #20
   25028:	cmp	r4, r5
   2502c:	popcs	{r4, r5, r6, pc}
   25030:	mvn	r6, #0
   25034:	ldr	r0, [r4], #4
   25038:	cmn	r0, #1
   2503c:	beq	25048 <subdestructHostCommandStream@@Base+0x2c>
   25040:	bl	14e6c <close@plt>
   25044:	str	r6, [r4, #-4]
   25048:	cmp	r5, r4
   2504c:	bhi	25034 <subdestructHostCommandStream@@Base+0x18>
   25050:	pop	{r4, r5, r6, pc}

00025054 <prepareHostCommandStream@@Base>:
   25054:	push	{r3, lr}
   25058:	add	r0, r0, #12
   2505c:	bl	152bc <pipe@plt>
   25060:	cmn	r0, #1
   25064:	beq	25070 <prepareHostCommandStream@@Base+0x1c>
   25068:	mov	r0, #1
   2506c:	pop	{r3, pc}
   25070:	ldr	r0, [pc, #12]	; 25084 <prepareHostCommandStream@@Base+0x30>
   25074:	add	r0, pc, r0
   25078:	bl	18498 <logSystemError@@Base>
   2507c:	mov	r0, #0
   25080:	pop	{r3, pc}
   25084:			; <UNDEFINED> instruction: 0x00003fb4

00025088 <runCommand@@Base>:
   25088:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2508c:	sub	sp, sp, #264	; 0x108
   25090:	ldr	lr, [pc, #524]	; 252a4 <runCommand@@Base+0x21c>
   25094:	add	r4, sp, #4
   25098:	ldr	ip, [pc, #520]	; 252a8 <runCommand@@Base+0x220>
   2509c:	mov	r8, r3
   250a0:	add	lr, pc, lr
   250a4:	mov	sl, r0
   250a8:	add	r5, sp, #132	; 0x84
   250ac:	mov	r0, r4
   250b0:	ldr	r6, [lr, ip]
   250b4:	mov	r9, r1
   250b8:	mov	r7, r2
   250bc:	mov	r2, lr
   250c0:	ldr	r3, [r6]
   250c4:	str	r3, [sp, #260]	; 0x104
   250c8:	bl	15220 <sigemptyset@plt>
   250cc:	mov	r0, r4
   250d0:	mov	r1, #17
   250d4:	bl	14e60 <sigaddset@plt>
   250d8:	mov	r1, r4
   250dc:	mov	r2, r5
   250e0:	mov	r0, #0
   250e4:	bl	15298 <sigprocmask@plt>
   250e8:	bl	14fd4 <fork@plt>
   250ec:	cmn	r0, #1
   250f0:	mov	r4, r0
   250f4:	beq	2518c <runCommand@@Base+0x104>
   250f8:	cmp	r0, #0
   250fc:	bne	25130 <runCommand@@Base+0xa8>
   25100:	mov	r2, r0
   25104:	mov	r1, r5
   25108:	mov	r0, #2
   2510c:	bl	15298 <sigprocmask@plt>
   25110:	ldr	r0, [pc, #404]	; 252ac <runCommand@@Base+0x224>
   25114:	mov	r1, r7
   25118:	add	r0, pc, r0
   2511c:	bl	24d1c <processHostCommandStreams@@Base>
   25120:	cmp	r0, #0
   25124:	bne	25200 <runCommand@@Base+0x178>
   25128:	mov	r0, #1
   2512c:	bl	15190 <_exit@plt>
   25130:	ldr	r0, [pc, #376]	; 252b0 <runCommand@@Base+0x228>
   25134:	mov	r1, r7
   25138:	add	r0, pc, r0
   2513c:	bl	24d1c <processHostCommandStreams@@Base>
   25140:	cmp	r0, #0
   25144:	moveq	r4, r0
   25148:	beq	25160 <runCommand@@Base+0xd8>
   2514c:	cmp	r8, #0
   25150:	beq	251a0 <runCommand@@Base+0x118>
   25154:	mov	r4, #1
   25158:	mov	r3, #0
   2515c:	str	r3, [sl]
   25160:	mov	r2, #0
   25164:	mov	r1, r5
   25168:	mov	r0, #2
   2516c:	bl	15298 <sigprocmask@plt>
   25170:	ldr	r2, [sp, #260]	; 0x104
   25174:	ldr	r3, [r6]
   25178:	mov	r0, r4
   2517c:	cmp	r2, r3
   25180:	bne	252a0 <runCommand@@Base+0x218>
   25184:	add	sp, sp, #264	; 0x108
   25188:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2518c:	ldr	r0, [pc, #288]	; 252b4 <runCommand@@Base+0x22c>
   25190:	mov	r4, #0
   25194:	add	r0, pc, r0
   25198:	bl	18498 <logSystemError@@Base>
   2519c:	b	25160 <runCommand@@Base+0xd8>
   251a0:	mov	r0, r4
   251a4:	mov	r2, r8
   251a8:	mov	r1, sp
   251ac:	bl	14f74 <waitpid@plt>
   251b0:	cmn	r0, #1
   251b4:	beq	25264 <runCommand@@Base+0x1dc>
   251b8:	ldr	r3, [sp]
   251bc:	ands	r2, r3, #127	; 0x7f
   251c0:	beq	2521c <runCommand@@Base+0x194>
   251c4:	add	r1, r2, #1
   251c8:	sbfx	r1, r1, #1, #7
   251cc:	cmp	r1, #0
   251d0:	ble	2523c <runCommand@@Base+0x1b4>
   251d4:	ldr	r1, [pc, #220]	; 252b8 <runCommand@@Base+0x230>
   251d8:	mov	r0, #7
   251dc:	str	r2, [sl]
   251e0:	add	r1, pc, r1
   251e4:	ldr	r3, [r9]
   251e8:	bl	183d0 <logMessage@@Base>
   251ec:	ldr	r3, [sl]
   251f0:	add	r3, r3, #128	; 0x80
   251f4:	str	r3, [sl]
   251f8:	mov	r4, #1
   251fc:	b	25160 <runCommand@@Base+0xd8>
   25200:	ldr	r0, [r9]
   25204:	mov	r1, r9
   25208:	bl	15280 <execvp@plt>
   2520c:	ldr	r0, [pc, #168]	; 252bc <runCommand@@Base+0x234>
   25210:	add	r0, pc, r0
   25214:	bl	18498 <logSystemError@@Base>
   25218:	b	25128 <runCommand@@Base+0xa0>
   2521c:	ldr	r1, [pc, #156]	; 252c0 <runCommand@@Base+0x238>
   25220:	ubfx	r2, r3, #8, #8
   25224:	mov	r0, #7
   25228:	str	r2, [sl]
   2522c:	add	r1, pc, r1
   25230:	ldr	r3, [r9]
   25234:	bl	183d0 <logMessage@@Base>
   25238:	b	251f8 <runCommand@@Base+0x170>
   2523c:	uxtb	r2, r3
   25240:	cmp	r2, #127	; 0x7f
   25244:	beq	25274 <runCommand@@Base+0x1ec>
   25248:	ldr	r1, [pc, #116]	; 252c4 <runCommand@@Base+0x23c>
   2524c:	mov	r2, r3
   25250:	mov	r0, #7
   25254:	ldr	r3, [r9]
   25258:	add	r1, pc, r1
   2525c:	bl	183d0 <logMessage@@Base>
   25260:	b	251f8 <runCommand@@Base+0x170>
   25264:	ldr	r0, [pc, #92]	; 252c8 <runCommand@@Base+0x240>
   25268:	add	r0, pc, r0
   2526c:	bl	18498 <logSystemError@@Base>
   25270:	b	251f8 <runCommand@@Base+0x170>
   25274:	ldr	r1, [pc, #80]	; 252cc <runCommand@@Base+0x244>
   25278:	ubfx	r2, r3, #8, #8
   2527c:	mov	r0, #7
   25280:	str	r2, [sl]
   25284:	add	r1, pc, r1
   25288:	ldr	r3, [r9]
   2528c:	bl	183d0 <logMessage@@Base>
   25290:	ldr	r3, [sl]
   25294:	add	r3, r3, #128	; 0x80
   25298:	str	r3, [sl]
   2529c:	b	251f8 <runCommand@@Base+0x170>
   252a0:	bl	14fbc <__stack_chk_fail@plt>
   252a4:	andeq	r5, r1, r8, asr pc
   252a8:	andeq	r0, r0, r8, asr #4
   252ac:			; <UNDEFINED> instruction: 0xfffffe38
   252b0:			; <UNDEFINED> instruction: 0xfffffd80
   252b4:	andeq	r1, r0, ip, lsr r5
   252b8:	andeq	r3, r0, r4, ror lr
   252bc:	andeq	r1, r0, r8, asr #9
   252c0:	andeq	r3, r0, r4, lsl #28
   252c4:	andeq	r3, r0, r8, asr #28
   252c8:	andeq	r1, r0, r8, ror r4
   252cc:	strdeq	r3, [r0], -r8

000252d0 <newLockDescriptor@@Base>:
   252d0:	push	{r4, lr}
   252d4:	mov	r0, #32
   252d8:	bl	150dc <malloc@plt>
   252dc:	subs	r4, r0, #0
   252e0:	beq	25300 <newLockDescriptor@@Base+0x30>
   252e4:	mov	r1, #0
   252e8:	bl	15184 <pthread_rwlock_init@plt>
   252ec:	cmp	r0, #0
   252f0:	mov	r0, r4
   252f4:	bne	252fc <newLockDescriptor@@Base+0x2c>
   252f8:	pop	{r4, pc}
   252fc:	bl	14d10 <free@plt>
   25300:	mov	r0, #0
   25304:	pop	{r4, pc}

00025308 <freeLockDescriptor@@Base>:
   25308:	push	{r4, lr}
   2530c:	mov	r4, r0
   25310:	bl	14cbc <pthread_rwlock_destroy@plt>
   25314:	mov	r0, r4
   25318:	pop	{r4, lr}
   2531c:	b	14d10 <free@plt>

00025320 <obtainLock@@Base>:
   25320:	tst	r1, #1
   25324:	push	{r3, lr}
   25328:	beq	25344 <obtainLock@@Base+0x24>
   2532c:	tst	r1, #2
   25330:	beq	25358 <obtainLock@@Base+0x38>
   25334:	bl	15160 <pthread_rwlock_trywrlock@plt>
   25338:	rsbs	r0, r0, #1
   2533c:	movcc	r0, #0
   25340:	pop	{r3, pc}
   25344:	tst	r1, #2
   25348:	bne	25364 <obtainLock@@Base+0x44>
   2534c:	bl	14e30 <pthread_rwlock_rdlock@plt>
   25350:	mov	r0, #1
   25354:	pop	{r3, pc}
   25358:	bl	14fb0 <pthread_rwlock_wrlock@plt>
   2535c:	mov	r0, #1
   25360:	pop	{r3, pc}
   25364:	bl	14fc8 <pthread_rwlock_tryrdlock@plt>
   25368:	rsbs	r0, r0, #1
   2536c:	movcc	r0, #0
   25370:	pop	{r3, pc}

00025374 <releaseLock@@Base>:
   25374:	b	14f98 <pthread_rwlock_unlock@plt>

00025378 <getLockDescriptor@@Base>:
   25378:	push	{r4, lr}
   2537c:	mov	r4, r0
   25380:	ldr	r0, [r0]
   25384:	cmp	r0, #0
   25388:	popne	{r4, pc}
   2538c:	ldr	r0, [pc, #48]	; 253c4 <getLockDescriptor@@Base+0x4c>
   25390:	add	r0, pc, r0
   25394:	bl	14c5c <pthread_mutex_lock@plt>
   25398:	ldr	r3, [r4]
   2539c:	cmp	r3, #0
   253a0:	beq	253b8 <getLockDescriptor@@Base+0x40>
   253a4:	ldr	r0, [pc, #28]	; 253c8 <getLockDescriptor@@Base+0x50>
   253a8:	add	r0, pc, r0
   253ac:	bl	152b0 <pthread_mutex_unlock@plt>
   253b0:	ldr	r0, [r4]
   253b4:	pop	{r4, pc}
   253b8:	bl	252d0 <newLockDescriptor@@Base>
   253bc:	str	r0, [r4]
   253c0:	b	253a4 <getLockDescriptor@@Base+0x2c>
   253c4:	andeq	r6, r1, r8, ror r0
   253c8:	andeq	r6, r1, r0, rrx

000253cc <getBaseCharacter@@Base>:
   253cc:	ldr	ip, [pc, #124]	; 25450 <getBaseCharacter@@Base+0x84>
   253d0:	mov	r1, #1
   253d4:	ldr	r2, [pc, #120]	; 25454 <getBaseCharacter@@Base+0x88>
   253d8:	add	ip, pc, ip
   253dc:	push	{r4, r5, r6, lr}
   253e0:	sub	sp, sp, #64	; 0x40
   253e4:	ldr	r5, [ip, r2]
   253e8:	add	r6, sp, #28
   253ec:	str	r6, [sp]
   253f0:	mov	r4, #0
   253f4:	mov	r3, r4
   253f8:	mov	lr, #16
   253fc:	ldr	ip, [r5]
   25400:	mov	r2, #2
   25404:	strh	r0, [sp, #20]
   25408:	add	r0, sp, #20
   2540c:	str	lr, [sp, #4]
   25410:	add	lr, sp, #24
   25414:	str	lr, [sp, #8]
   25418:	str	ip, [sp, #60]	; 0x3c
   2541c:	str	r4, [sp, #24]
   25420:	bl	14f44 <unorm_normalize_50@plt>
   25424:	ldr	r3, [sp, #24]
   25428:	ldr	r2, [sp, #60]	; 0x3c
   2542c:	cmp	r3, r4
   25430:	ldr	r3, [r5]
   25434:	ldrhle	r0, [sp, #28]
   25438:	movgt	r0, r4
   2543c:	cmp	r2, r3
   25440:	bne	2544c <getBaseCharacter@@Base+0x80>
   25444:	add	sp, sp, #64	; 0x40
   25448:	pop	{r4, r5, r6, pc}
   2544c:	bl	14fbc <__stack_chk_fail@plt>
   25450:	andeq	r5, r1, r0, lsr #24
   25454:	andeq	r0, r0, r8, asr #4

00025458 <getTransliteratedCharacter@@Base>:
   25458:	ldr	r3, [pc, #224]	; 25540 <getTransliteratedCharacter@@Base+0xe8>
   2545c:	push	{r4, r5, fp, lr}
   25460:	add	fp, sp, #12
   25464:	ldr	r2, [pc, #216]	; 25544 <getTransliteratedCharacter@@Base+0xec>
   25468:	sub	sp, sp, #56	; 0x38
   2546c:	add	r3, pc, r3
   25470:	ldr	r5, [pc, #208]	; 25548 <getTransliteratedCharacter@@Base+0xf0>
   25474:	str	r0, [fp, #-56]	; 0xffffffc8
   25478:	add	r5, pc, r5
   2547c:	ldr	r4, [r3, r2]
   25480:	ldr	r0, [r5]
   25484:	ldr	r3, [r4]
   25488:	cmp	r0, #0
   2548c:	str	r3, [fp, #-16]
   25490:	beq	25514 <getTransliteratedCharacter@@Base+0xbc>
   25494:	cmn	r0, #1
   25498:	moveq	r0, #0
   2549c:	beq	254fc <getTransliteratedCharacter@@Base+0xa4>
   254a0:	sub	r3, fp, #56	; 0x38
   254a4:	mov	r2, #4
   254a8:	str	r3, [fp, #-48]	; 0xffffffd0
   254ac:	sub	r5, fp, #32
   254b0:	str	r2, [fp, #-44]	; 0xffffffd4
   254b4:	mov	r3, #16
   254b8:	str	r5, [fp, #-36]	; 0xffffffdc
   254bc:	sub	r1, fp, #48	; 0x30
   254c0:	str	r3, [fp, #-40]	; 0xffffffd8
   254c4:	sub	r2, fp, #44	; 0x2c
   254c8:	sub	r3, fp, #40	; 0x28
   254cc:	str	r3, [sp]
   254d0:	sub	r3, fp, #36	; 0x24
   254d4:	bl	151a8 <iconv@plt>
   254d8:	mov	r3, sp
   254dc:	cmn	r0, #1
   254e0:	beq	254f4 <getTransliteratedCharacter@@Base+0x9c>
   254e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   254e8:	rsb	r5, r5, r2
   254ec:	cmp	r5, #1
   254f0:	beq	25534 <getTransliteratedCharacter@@Base+0xdc>
   254f4:	mov	r0, #0
   254f8:	mov	sp, r3
   254fc:	ldr	r2, [fp, #-16]
   25500:	ldr	r3, [r4]
   25504:	cmp	r2, r3
   25508:	bne	2553c <getTransliteratedCharacter@@Base+0xe4>
   2550c:	sub	sp, fp, #12
   25510:	pop	{r4, r5, fp, pc}
   25514:	ldr	r0, [pc, #48]	; 2554c <getTransliteratedCharacter@@Base+0xf4>
   25518:	ldr	r1, [pc, #48]	; 25550 <getTransliteratedCharacter@@Base+0xf8>
   2551c:	add	r0, pc, r0
   25520:	add	r1, pc, r1
   25524:	bl	15178 <iconv_open@plt>
   25528:	mov	r3, r0
   2552c:	str	r3, [r5]
   25530:	b	25494 <getTransliteratedCharacter@@Base+0x3c>
   25534:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   25538:	b	254fc <getTransliteratedCharacter@@Base+0xa4>
   2553c:	bl	14fbc <__stack_chk_fail@plt>
   25540:	andeq	r5, r1, ip, lsl #23
   25544:	andeq	r0, r0, r8, asr #4
   25548:	andeq	r5, r1, r8, lsr #31
   2554c:	andeq	r3, r0, ip, lsr #23
   25550:			; <UNDEFINED> instruction: 0x00003bb8

00025554 <getCharacterWidth@@Base>:
   25554:	push	{r3, r4, r5, lr}
   25558:	movw	r1, #4101	; 0x1005
   2555c:	mov	r4, r0
   25560:	bl	14f08 <u_getIntPropertyValue_50@plt>
   25564:	movw	r1, #4100	; 0x1004
   25568:	mov	r5, r0
   2556c:	mov	r0, r4
   25570:	bl	14f08 <u_getIntPropertyValue_50@plt>
   25574:	cmp	r4, #0
   25578:	beq	255f8 <getCharacterWidth@@Base+0xa4>
   2557c:	cmp	r5, #15
   25580:	beq	25634 <getCharacterWidth@@Base+0xe0>
   25584:	sub	r3, r5, #6
   25588:	cmp	r3, #1
   2558c:	bls	255f0 <getCharacterWidth@@Base+0x9c>
   25590:	sub	r3, r4, #4416	; 0x1140
   25594:	sub	r3, r3, #32
   25598:	cmp	r3, #159	; 0x9f
   2559c:	bls	255e8 <getCharacterWidth@@Base+0x94>
   255a0:	cmp	r4, #173	; 0xad
   255a4:	beq	25600 <getCharacterWidth@@Base+0xac>
   255a8:	cmp	r5, #16
   255ac:	beq	255f0 <getCharacterWidth@@Base+0x9c>
   255b0:	cmp	r0, #3
   255b4:	beq	2562c <getCharacterWidth@@Base+0xd8>
   255b8:	cmp	r0, #2
   255bc:	beq	25600 <getCharacterWidth@@Base+0xac>
   255c0:	cmp	r0, #5
   255c4:	beq	2562c <getCharacterWidth@@Base+0xd8>
   255c8:	cmp	r0, #4
   255cc:	beq	25600 <getCharacterWidth@@Base+0xac>
   255d0:	cmp	r0, #1
   255d4:	beq	25608 <getCharacterWidth@@Base+0xb4>
   255d8:	cmp	r5, #0
   255dc:	movne	r0, #1
   255e0:	mvneq	r0, #0
   255e4:	pop	{r3, r4, r5, pc}
   255e8:	cmp	r5, #5
   255ec:	bne	255a8 <getCharacterWidth@@Base+0x54>
   255f0:	mov	r0, #0
   255f4:	pop	{r3, r4, r5, pc}
   255f8:	mov	r0, r4
   255fc:	pop	{r3, r4, r5, pc}
   25600:	mov	r0, #1
   25604:	pop	{r3, r4, r5, pc}
   25608:	sub	r3, r4, #19968	; 0x4e00
   2560c:	cmp	r3, #20992	; 0x5200
   25610:	bcc	2562c <getCharacterWidth@@Base+0xd8>
   25614:	sub	r3, r4, #13312	; 0x3400
   25618:	cmp	r3, #6592	; 0x19c0
   2561c:	bcc	2562c <getCharacterWidth@@Base+0xd8>
   25620:	sub	r4, r4, #63744	; 0xf900
   25624:	cmp	r4, #512	; 0x200
   25628:	bcs	255d8 <getCharacterWidth@@Base+0x84>
   2562c:	mov	r0, #2
   25630:	pop	{r3, r4, r5, pc}
   25634:	mvn	r0, #0
   25638:	pop	{r3, r4, r5, pc}

0002563c <handleBestCharacter@@Base>:
   2563c:	push	{r3, r4, r5, r6, r7, lr}
   25640:	mov	r4, r0
   25644:	ldr	r5, [pc, #76]	; 25698 <handleBestCharacter@@Base+0x5c>
   25648:	mov	r7, r1
   2564c:	mov	r6, r2
   25650:	add	r5, pc, r5
   25654:	sub	r5, r5, #4
   25658:	b	25674 <handleBestCharacter@@Base+0x38>
   2565c:	ldr	r3, [r5, #4]!
   25660:	cmp	r3, #0
   25664:	beq	25690 <handleBestCharacter@@Base+0x54>
   25668:	blx	r3
   2566c:	cmp	r0, #0
   25670:	movne	r4, r0
   25674:	mov	r0, r4
   25678:	mov	r1, r6
   2567c:	blx	r7
   25680:	subs	ip, r0, #0
   25684:	mov	r0, r4
   25688:	beq	2565c <handleBestCharacter@@Base+0x20>
   2568c:	mov	ip, #1
   25690:	mov	r0, ip
   25694:	pop	{r3, r4, r5, r6, r7, pc}
   25698:	andeq	r5, r1, r4, ror r8
   2569c:	subs	r2, r1, #1
   256a0:	bxeq	lr
   256a4:	bcc	2587c <handleBestCharacter@@Base+0x240>
   256a8:	cmp	r0, r1
   256ac:	bls	25860 <handleBestCharacter@@Base+0x224>
   256b0:	tst	r1, r2
   256b4:	beq	2586c <handleBestCharacter@@Base+0x230>
   256b8:	clz	r3, r0
   256bc:	clz	r2, r1
   256c0:	sub	r3, r2, r3
   256c4:	rsbs	r3, r3, #31
   256c8:	addne	r3, r3, r3, lsl #1
   256cc:	mov	r2, #0
   256d0:	addne	pc, pc, r3, lsl #2
   256d4:	nop	{0}
   256d8:	cmp	r0, r1, lsl #31
   256dc:	adc	r2, r2, r2
   256e0:	subcs	r0, r0, r1, lsl #31
   256e4:	cmp	r0, r1, lsl #30
   256e8:	adc	r2, r2, r2
   256ec:	subcs	r0, r0, r1, lsl #30
   256f0:	cmp	r0, r1, lsl #29
   256f4:	adc	r2, r2, r2
   256f8:	subcs	r0, r0, r1, lsl #29
   256fc:	cmp	r0, r1, lsl #28
   25700:	adc	r2, r2, r2
   25704:	subcs	r0, r0, r1, lsl #28
   25708:	cmp	r0, r1, lsl #27
   2570c:	adc	r2, r2, r2
   25710:	subcs	r0, r0, r1, lsl #27
   25714:	cmp	r0, r1, lsl #26
   25718:	adc	r2, r2, r2
   2571c:	subcs	r0, r0, r1, lsl #26
   25720:	cmp	r0, r1, lsl #25
   25724:	adc	r2, r2, r2
   25728:	subcs	r0, r0, r1, lsl #25
   2572c:	cmp	r0, r1, lsl #24
   25730:	adc	r2, r2, r2
   25734:	subcs	r0, r0, r1, lsl #24
   25738:	cmp	r0, r1, lsl #23
   2573c:	adc	r2, r2, r2
   25740:	subcs	r0, r0, r1, lsl #23
   25744:	cmp	r0, r1, lsl #22
   25748:	adc	r2, r2, r2
   2574c:	subcs	r0, r0, r1, lsl #22
   25750:	cmp	r0, r1, lsl #21
   25754:	adc	r2, r2, r2
   25758:	subcs	r0, r0, r1, lsl #21
   2575c:	cmp	r0, r1, lsl #20
   25760:	adc	r2, r2, r2
   25764:	subcs	r0, r0, r1, lsl #20
   25768:	cmp	r0, r1, lsl #19
   2576c:	adc	r2, r2, r2
   25770:	subcs	r0, r0, r1, lsl #19
   25774:	cmp	r0, r1, lsl #18
   25778:	adc	r2, r2, r2
   2577c:	subcs	r0, r0, r1, lsl #18
   25780:	cmp	r0, r1, lsl #17
   25784:	adc	r2, r2, r2
   25788:	subcs	r0, r0, r1, lsl #17
   2578c:	cmp	r0, r1, lsl #16
   25790:	adc	r2, r2, r2
   25794:	subcs	r0, r0, r1, lsl #16
   25798:	cmp	r0, r1, lsl #15
   2579c:	adc	r2, r2, r2
   257a0:	subcs	r0, r0, r1, lsl #15
   257a4:	cmp	r0, r1, lsl #14
   257a8:	adc	r2, r2, r2
   257ac:	subcs	r0, r0, r1, lsl #14
   257b0:	cmp	r0, r1, lsl #13
   257b4:	adc	r2, r2, r2
   257b8:	subcs	r0, r0, r1, lsl #13
   257bc:	cmp	r0, r1, lsl #12
   257c0:	adc	r2, r2, r2
   257c4:	subcs	r0, r0, r1, lsl #12
   257c8:	cmp	r0, r1, lsl #11
   257cc:	adc	r2, r2, r2
   257d0:	subcs	r0, r0, r1, lsl #11
   257d4:	cmp	r0, r1, lsl #10
   257d8:	adc	r2, r2, r2
   257dc:	subcs	r0, r0, r1, lsl #10
   257e0:	cmp	r0, r1, lsl #9
   257e4:	adc	r2, r2, r2
   257e8:	subcs	r0, r0, r1, lsl #9
   257ec:	cmp	r0, r1, lsl #8
   257f0:	adc	r2, r2, r2
   257f4:	subcs	r0, r0, r1, lsl #8
   257f8:	cmp	r0, r1, lsl #7
   257fc:	adc	r2, r2, r2
   25800:	subcs	r0, r0, r1, lsl #7
   25804:	cmp	r0, r1, lsl #6
   25808:	adc	r2, r2, r2
   2580c:	subcs	r0, r0, r1, lsl #6
   25810:	cmp	r0, r1, lsl #5
   25814:	adc	r2, r2, r2
   25818:	subcs	r0, r0, r1, lsl #5
   2581c:	cmp	r0, r1, lsl #4
   25820:	adc	r2, r2, r2
   25824:	subcs	r0, r0, r1, lsl #4
   25828:	cmp	r0, r1, lsl #3
   2582c:	adc	r2, r2, r2
   25830:	subcs	r0, r0, r1, lsl #3
   25834:	cmp	r0, r1, lsl #2
   25838:	adc	r2, r2, r2
   2583c:	subcs	r0, r0, r1, lsl #2
   25840:	cmp	r0, r1, lsl #1
   25844:	adc	r2, r2, r2
   25848:	subcs	r0, r0, r1, lsl #1
   2584c:	cmp	r0, r1
   25850:	adc	r2, r2, r2
   25854:	subcs	r0, r0, r1
   25858:	mov	r0, r2
   2585c:	bx	lr
   25860:	moveq	r0, #1
   25864:	movne	r0, #0
   25868:	bx	lr
   2586c:	clz	r2, r1
   25870:	rsb	r2, r2, #31
   25874:	lsr	r0, r0, r2
   25878:	bx	lr
   2587c:	cmp	r0, #0
   25880:	mvnne	r0, #0
   25884:	b	25ae8 <handleBestCharacter@@Base+0x4ac>
   25888:	cmp	r1, #0
   2588c:	beq	2587c <handleBestCharacter@@Base+0x240>
   25890:	push	{r0, r1, lr}
   25894:	bl	2569c <handleBestCharacter@@Base+0x60>
   25898:	pop	{r1, r2, lr}
   2589c:	mul	r3, r2, r0
   258a0:	sub	r1, r1, r3
   258a4:	bx	lr
   258a8:	cmp	r1, #0
   258ac:	beq	25ab8 <handleBestCharacter@@Base+0x47c>
   258b0:	eor	ip, r0, r1
   258b4:	rsbmi	r1, r1, #0
   258b8:	subs	r2, r1, #1
   258bc:	beq	25a84 <handleBestCharacter@@Base+0x448>
   258c0:	movs	r3, r0
   258c4:	rsbmi	r3, r0, #0
   258c8:	cmp	r3, r1
   258cc:	bls	25a90 <handleBestCharacter@@Base+0x454>
   258d0:	tst	r1, r2
   258d4:	beq	25aa0 <handleBestCharacter@@Base+0x464>
   258d8:	clz	r2, r3
   258dc:	clz	r0, r1
   258e0:	sub	r2, r0, r2
   258e4:	rsbs	r2, r2, #31
   258e8:	addne	r2, r2, r2, lsl #1
   258ec:	mov	r0, #0
   258f0:	addne	pc, pc, r2, lsl #2
   258f4:	nop	{0}
   258f8:	cmp	r3, r1, lsl #31
   258fc:	adc	r0, r0, r0
   25900:	subcs	r3, r3, r1, lsl #31
   25904:	cmp	r3, r1, lsl #30
   25908:	adc	r0, r0, r0
   2590c:	subcs	r3, r3, r1, lsl #30
   25910:	cmp	r3, r1, lsl #29
   25914:	adc	r0, r0, r0
   25918:	subcs	r3, r3, r1, lsl #29
   2591c:	cmp	r3, r1, lsl #28
   25920:	adc	r0, r0, r0
   25924:	subcs	r3, r3, r1, lsl #28
   25928:	cmp	r3, r1, lsl #27
   2592c:	adc	r0, r0, r0
   25930:	subcs	r3, r3, r1, lsl #27
   25934:	cmp	r3, r1, lsl #26
   25938:	adc	r0, r0, r0
   2593c:	subcs	r3, r3, r1, lsl #26
   25940:	cmp	r3, r1, lsl #25
   25944:	adc	r0, r0, r0
   25948:	subcs	r3, r3, r1, lsl #25
   2594c:	cmp	r3, r1, lsl #24
   25950:	adc	r0, r0, r0
   25954:	subcs	r3, r3, r1, lsl #24
   25958:	cmp	r3, r1, lsl #23
   2595c:	adc	r0, r0, r0
   25960:	subcs	r3, r3, r1, lsl #23
   25964:	cmp	r3, r1, lsl #22
   25968:	adc	r0, r0, r0
   2596c:	subcs	r3, r3, r1, lsl #22
   25970:	cmp	r3, r1, lsl #21
   25974:	adc	r0, r0, r0
   25978:	subcs	r3, r3, r1, lsl #21
   2597c:	cmp	r3, r1, lsl #20
   25980:	adc	r0, r0, r0
   25984:	subcs	r3, r3, r1, lsl #20
   25988:	cmp	r3, r1, lsl #19
   2598c:	adc	r0, r0, r0
   25990:	subcs	r3, r3, r1, lsl #19
   25994:	cmp	r3, r1, lsl #18
   25998:	adc	r0, r0, r0
   2599c:	subcs	r3, r3, r1, lsl #18
   259a0:	cmp	r3, r1, lsl #17
   259a4:	adc	r0, r0, r0
   259a8:	subcs	r3, r3, r1, lsl #17
   259ac:	cmp	r3, r1, lsl #16
   259b0:	adc	r0, r0, r0
   259b4:	subcs	r3, r3, r1, lsl #16
   259b8:	cmp	r3, r1, lsl #15
   259bc:	adc	r0, r0, r0
   259c0:	subcs	r3, r3, r1, lsl #15
   259c4:	cmp	r3, r1, lsl #14
   259c8:	adc	r0, r0, r0
   259cc:	subcs	r3, r3, r1, lsl #14
   259d0:	cmp	r3, r1, lsl #13
   259d4:	adc	r0, r0, r0
   259d8:	subcs	r3, r3, r1, lsl #13
   259dc:	cmp	r3, r1, lsl #12
   259e0:	adc	r0, r0, r0
   259e4:	subcs	r3, r3, r1, lsl #12
   259e8:	cmp	r3, r1, lsl #11
   259ec:	adc	r0, r0, r0
   259f0:	subcs	r3, r3, r1, lsl #11
   259f4:	cmp	r3, r1, lsl #10
   259f8:	adc	r0, r0, r0
   259fc:	subcs	r3, r3, r1, lsl #10
   25a00:	cmp	r3, r1, lsl #9
   25a04:	adc	r0, r0, r0
   25a08:	subcs	r3, r3, r1, lsl #9
   25a0c:	cmp	r3, r1, lsl #8
   25a10:	adc	r0, r0, r0
   25a14:	subcs	r3, r3, r1, lsl #8
   25a18:	cmp	r3, r1, lsl #7
   25a1c:	adc	r0, r0, r0
   25a20:	subcs	r3, r3, r1, lsl #7
   25a24:	cmp	r3, r1, lsl #6
   25a28:	adc	r0, r0, r0
   25a2c:	subcs	r3, r3, r1, lsl #6
   25a30:	cmp	r3, r1, lsl #5
   25a34:	adc	r0, r0, r0
   25a38:	subcs	r3, r3, r1, lsl #5
   25a3c:	cmp	r3, r1, lsl #4
   25a40:	adc	r0, r0, r0
   25a44:	subcs	r3, r3, r1, lsl #4
   25a48:	cmp	r3, r1, lsl #3
   25a4c:	adc	r0, r0, r0
   25a50:	subcs	r3, r3, r1, lsl #3
   25a54:	cmp	r3, r1, lsl #2
   25a58:	adc	r0, r0, r0
   25a5c:	subcs	r3, r3, r1, lsl #2
   25a60:	cmp	r3, r1, lsl #1
   25a64:	adc	r0, r0, r0
   25a68:	subcs	r3, r3, r1, lsl #1
   25a6c:	cmp	r3, r1
   25a70:	adc	r0, r0, r0
   25a74:	subcs	r3, r3, r1
   25a78:	cmp	ip, #0
   25a7c:	rsbmi	r0, r0, #0
   25a80:	bx	lr
   25a84:	teq	ip, r0
   25a88:	rsbmi	r0, r0, #0
   25a8c:	bx	lr
   25a90:	movcc	r0, #0
   25a94:	asreq	r0, ip, #31
   25a98:	orreq	r0, r0, #1
   25a9c:	bx	lr
   25aa0:	clz	r2, r1
   25aa4:	rsb	r2, r2, #31
   25aa8:	cmp	ip, #0
   25aac:	lsr	r0, r3, r2
   25ab0:	rsbmi	r0, r0, #0
   25ab4:	bx	lr
   25ab8:	cmp	r0, #0
   25abc:	mvngt	r0, #-2147483648	; 0x80000000
   25ac0:	movlt	r0, #-2147483648	; 0x80000000
   25ac4:	b	25ae8 <handleBestCharacter@@Base+0x4ac>
   25ac8:	cmp	r1, #0
   25acc:	beq	25ab8 <handleBestCharacter@@Base+0x47c>
   25ad0:	push	{r0, r1, lr}
   25ad4:	bl	258b0 <handleBestCharacter@@Base+0x274>
   25ad8:	pop	{r1, r2, lr}
   25adc:	mul	r3, r2, r0
   25ae0:	sub	r1, r1, r3
   25ae4:	bx	lr
   25ae8:	push	{r1, lr}
   25aec:	mov	r0, #8
   25af0:	bl	15034 <raise@plt>
   25af4:	pop	{r1, pc}

00025af8 <__libc_csu_init@@Base>:
   25af8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   25afc:	mov	r7, r0
   25b00:	ldr	r6, [pc, #76]	; 25b54 <__libc_csu_init@@Base+0x5c>
   25b04:	mov	r8, r1
   25b08:	ldr	r5, [pc, #72]	; 25b58 <__libc_csu_init@@Base+0x60>
   25b0c:	mov	r9, r2
   25b10:	add	r6, pc, r6
   25b14:	bl	14c30 <_init@@Base>
   25b18:	add	r5, pc, r5
   25b1c:	rsb	r6, r5, r6
   25b20:	asrs	r6, r6, #2
   25b24:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   25b28:	sub	r5, r5, #4
   25b2c:	mov	r4, #0
   25b30:	add	r4, r4, #1
   25b34:	ldr	r3, [r5, #4]!
   25b38:	mov	r0, r7
   25b3c:	mov	r1, r8
   25b40:	mov	r2, r9
   25b44:	blx	r3
   25b48:	cmp	r4, r6
   25b4c:	bne	25b30 <__libc_csu_init@@Base+0x38>
   25b50:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   25b54:	andeq	r4, r1, r8, ror #21
   25b58:	ldrdeq	r4, [r1], -ip

00025b5c <__libc_csu_fini@@Base>:
   25b5c:	bx	lr
   25b60:	ldr	r3, [pc, #28]	; 25b84 <__libc_csu_fini@@Base+0x28>
   25b64:	mov	r1, #0
   25b68:	ldr	r2, [pc, #24]	; 25b88 <__libc_csu_fini@@Base+0x2c>
   25b6c:	add	r3, pc, r3
   25b70:	ldr	r3, [r3, r2]
   25b74:	cmp	r3, #0
   25b78:	ldrne	r2, [r3]
   25b7c:	moveq	r2, r3
   25b80:	b	15004 <__cxa_atexit@plt>
   25b84:	andeq	r5, r1, ip, lsl #9
   25b88:	andeq	r0, r0, r4, asr r2

Disassembly of section .fini:

00025b8c <_fini@@Base>:
   25b8c:	push	{r3, lr}
   25b90:	pop	{r3, pc}
