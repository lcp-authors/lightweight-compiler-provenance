
centos-preinstalled/rmdir:     file format elf32-littlearm


Disassembly of section .init:

00010f40 <.init>:
   10f40:	push	{r3, lr}
   10f44:	bl	116d4 <__snprintf_chk@plt+0x4bc>
   10f48:	pop	{r3, pc}

Disassembly of section .plt:

00010f4c <fdopen@plt-0x14>:
   10f4c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f50:	ldr	lr, [pc, #4]	; 10f5c <fdopen@plt-0x4>
   10f54:	add	lr, pc, lr
   10f58:	ldr	pc, [lr, #8]!
   10f5c:	andeq	r6, r1, r4, lsr #1

00010f60 <fdopen@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #90112	; 0x16000
   10f68:	ldr	pc, [ip, #164]!	; 0xa4

00010f6c <calloc@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #90112	; 0x16000
   10f74:	ldr	pc, [ip, #156]!	; 0x9c

00010f78 <fputs_unlocked@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #90112	; 0x16000
   10f80:	ldr	pc, [ip, #148]!	; 0x94

00010f84 <raise@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #90112	; 0x16000
   10f8c:	ldr	pc, [ip, #140]!	; 0x8c

00010f90 <strcmp@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #90112	; 0x16000
   10f98:	ldr	pc, [ip, #132]!	; 0x84

00010f9c <fflush@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #90112	; 0x16000
   10fa4:	ldr	pc, [ip, #124]!	; 0x7c

00010fa8 <free@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #90112	; 0x16000
   10fb0:	ldr	pc, [ip, #116]!	; 0x74

00010fb4 <_exit@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #90112	; 0x16000
   10fbc:	ldr	pc, [ip, #108]!	; 0x6c

00010fc0 <memcpy@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #90112	; 0x16000
   10fc8:	ldr	pc, [ip, #100]!	; 0x64

00010fcc <mbsinit@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #90112	; 0x16000
   10fd4:	ldr	pc, [ip, #92]!	; 0x5c

00010fd8 <rmdir@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #90112	; 0x16000
   10fe0:	ldr	pc, [ip, #84]!	; 0x54

00010fe4 <fwrite_unlocked@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #90112	; 0x16000
   10fec:	ldr	pc, [ip, #76]!	; 0x4c

00010ff0 <memcmp@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #90112	; 0x16000
   10ff8:	ldr	pc, [ip, #68]!	; 0x44

00010ffc <dcgettext@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #90112	; 0x16000
   11004:	ldr	pc, [ip, #60]!	; 0x3c

00011008 <__stack_chk_fail@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #90112	; 0x16000
   11010:	ldr	pc, [ip, #52]!	; 0x34

00011014 <realloc@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #90112	; 0x16000
   1101c:	ldr	pc, [ip, #44]!	; 0x2c

00011020 <textdomain@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #90112	; 0x16000
   11028:	ldr	pc, [ip, #36]!	; 0x24

0001102c <iswprint@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #90112	; 0x16000
   11034:	ldr	pc, [ip, #28]!

00011038 <fwrite@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #90112	; 0x16000
   11040:	ldr	pc, [ip, #20]!

00011044 <lseek64@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #90112	; 0x16000
   1104c:	ldr	pc, [ip, #12]!

00011050 <__ctype_get_mb_cur_max@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #90112	; 0x16000
   11058:	ldr	pc, [ip, #4]!

0001105c <strcpy@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #86016	; 0x15000
   11064:	ldr	pc, [ip, #4092]!	; 0xffc

00011068 <__fpending@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #86016	; 0x15000
   11070:	ldr	pc, [ip, #4084]!	; 0xff4

00011074 <mbrtowc@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #86016	; 0x15000
   1107c:	ldr	pc, [ip, #4076]!	; 0xfec

00011080 <error@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #86016	; 0x15000
   11088:	ldr	pc, [ip, #4068]!	; 0xfe4

0001108c <open64@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #86016	; 0x15000
   11094:	ldr	pc, [ip, #4060]!	; 0xfdc

00011098 <getenv@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #86016	; 0x15000
   110a0:	ldr	pc, [ip, #4052]!	; 0xfd4

000110a4 <malloc@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #86016	; 0x15000
   110ac:	ldr	pc, [ip, #4044]!	; 0xfcc

000110b0 <__libc_start_main@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #86016	; 0x15000
   110b8:	ldr	pc, [ip, #4036]!	; 0xfc4

000110bc <__freading@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #86016	; 0x15000
   110c4:	ldr	pc, [ip, #4028]!	; 0xfbc

000110c8 <__gmon_start__@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #86016	; 0x15000
   110d0:	ldr	pc, [ip, #4020]!	; 0xfb4

000110d4 <getopt_long@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #86016	; 0x15000
   110dc:	ldr	pc, [ip, #4012]!	; 0xfac

000110e0 <__ctype_b_loc@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #86016	; 0x15000
   110e8:	ldr	pc, [ip, #4004]!	; 0xfa4

000110ec <exit@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #86016	; 0x15000
   110f4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110f8 <strlen@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #86016	; 0x15000
   11100:	ldr	pc, [ip, #3988]!	; 0xf94

00011104 <openat64@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #86016	; 0x15000
   1110c:	ldr	pc, [ip, #3980]!	; 0xf8c

00011110 <ungetc@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #86016	; 0x15000
   11118:	ldr	pc, [ip, #3972]!	; 0xf84

0001111c <__errno_location@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #86016	; 0x15000
   11124:	ldr	pc, [ip, #3964]!	; 0xf7c

00011128 <__cxa_atexit@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #86016	; 0x15000
   11130:	ldr	pc, [ip, #3956]!	; 0xf74

00011134 <memset@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #86016	; 0x15000
   1113c:	ldr	pc, [ip, #3948]!	; 0xf6c

00011140 <fscanf@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #86016	; 0x15000
   11148:	ldr	pc, [ip, #3940]!	; 0xf64

0001114c <__printf_chk@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #86016	; 0x15000
   11154:	ldr	pc, [ip, #3932]!	; 0xf5c

00011158 <fileno@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #86016	; 0x15000
   11160:	ldr	pc, [ip, #3924]!	; 0xf54

00011164 <__fprintf_chk@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #86016	; 0x15000
   1116c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011170 <fclose@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #86016	; 0x15000
   11178:	ldr	pc, [ip, #3908]!	; 0xf44

0001117c <fseeko64@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #86016	; 0x15000
   11184:	ldr	pc, [ip, #3900]!	; 0xf3c

00011188 <__uflow@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #86016	; 0x15000
   11190:	ldr	pc, [ip, #3892]!	; 0xf34

00011194 <__overflow@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #86016	; 0x15000
   1119c:	ldr	pc, [ip, #3884]!	; 0xf2c

000111a0 <setlocale@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #86016	; 0x15000
   111a8:	ldr	pc, [ip, #3876]!	; 0xf24

000111ac <strrchr@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #86016	; 0x15000
   111b4:	ldr	pc, [ip, #3868]!	; 0xf1c

000111b8 <nl_langinfo@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #86016	; 0x15000
   111c0:	ldr	pc, [ip, #3860]!	; 0xf14

000111c4 <readdir64@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #86016	; 0x15000
   111cc:	ldr	pc, [ip, #3852]!	; 0xf0c

000111d0 <fdopendir@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #86016	; 0x15000
   111d8:	ldr	pc, [ip, #3844]!	; 0xf04

000111dc <bindtextdomain@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #86016	; 0x15000
   111e4:	ldr	pc, [ip, #3836]!	; 0xefc

000111e8 <strncmp@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #86016	; 0x15000
   111f0:	ldr	pc, [ip, #3828]!	; 0xef4

000111f4 <abort@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #86016	; 0x15000
   111fc:	ldr	pc, [ip, #3820]!	; 0xeec

00011200 <close@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #86016	; 0x15000
   11208:	ldr	pc, [ip, #3812]!	; 0xee4

0001120c <closedir@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #86016	; 0x15000
   11214:	ldr	pc, [ip, #3804]!	; 0xedc

00011218 <__snprintf_chk@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #86016	; 0x15000
   11220:	ldr	pc, [ip, #3796]!	; 0xed4

Disassembly of section .text:

00011224 <close_stdout@@Base-0x99c>:
   11224:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11228:	mov	sl, r0
   1122c:	sub	sp, sp, #44	; 0x2c
   11230:	ldr	r0, [r1]
   11234:	mov	r4, r1
   11238:	bl	11db4 <close_stdout@@Base+0x1f4>
   1123c:	ldr	r1, [pc, #1008]	; 11634 <__snprintf_chk@plt+0x41c>
   11240:	mov	r0, #6
   11244:	ldr	r5, [pc, #1004]	; 11638 <__snprintf_chk@plt+0x420>
   11248:	mov	r8, #1
   1124c:	add	r1, pc, r1
   11250:	ldr	r7, [pc, #996]	; 1163c <__snprintf_chk@plt+0x424>
   11254:	bl	111a0 <setlocale@plt>
   11258:	add	r5, pc, r5
   1125c:	ldr	r1, [pc, #988]	; 11640 <__snprintf_chk@plt+0x428>
   11260:	add	r7, pc, r7
   11264:	mov	r0, r5
   11268:	ldr	r6, [pc, #980]	; 11644 <__snprintf_chk@plt+0x42c>
   1126c:	add	r1, pc, r1
   11270:	ldr	fp, [pc, #976]	; 11648 <__snprintf_chk@plt+0x430>
   11274:	bl	111dc <bindtextdomain@plt>
   11278:	mov	r0, r5
   1127c:	ldr	r5, [pc, #968]	; 1164c <__snprintf_chk@plt+0x434>
   11280:	bl	11020 <textdomain@plt>
   11284:	ldr	r3, [pc, #964]	; 11650 <__snprintf_chk@plt+0x438>
   11288:	add	r6, pc, r6
   1128c:	add	r5, pc, r5
   11290:	ldr	r1, [pc, #956]	; 11654 <__snprintf_chk@plt+0x43c>
   11294:	ldr	r2, [pc, #956]	; 11658 <__snprintf_chk@plt+0x440>
   11298:	add	fp, pc, fp
   1129c:	ldr	r0, [r5, r3]
   112a0:	add	r1, pc, r1
   112a4:	add	r2, pc, r2
   112a8:	str	r1, [sp, #16]
   112ac:	str	r2, [sp, #20]
   112b0:	bl	163d4 <close_stdout@@Base+0x4814>
   112b4:	ldr	r3, [pc, #928]	; 1165c <__snprintf_chk@plt+0x444>
   112b8:	mov	r2, #0
   112bc:	add	r3, pc, r3
   112c0:	strb	r2, [r3, #1]
   112c4:	mov	r9, #0
   112c8:	mov	r0, sl
   112cc:	str	r9, [sp]
   112d0:	mov	r1, r4
   112d4:	mov	r2, r7
   112d8:	mov	r3, r6
   112dc:	bl	110d4 <getopt_long@plt>
   112e0:	cmn	r0, #1
   112e4:	beq	113a8 <__snprintf_chk@plt+0x190>
   112e8:	cmp	r0, #112	; 0x70
   112ec:	beq	113a0 <__snprintf_chk@plt+0x188>
   112f0:	bgt	1130c <__snprintf_chk@plt+0xf4>
   112f4:	cmn	r0, #3
   112f8:	beq	11328 <__snprintf_chk@plt+0x110>
   112fc:	cmn	r0, #2
   11300:	bne	11398 <__snprintf_chk@plt+0x180>
   11304:	mov	r0, r9
   11308:	bl	118c8 <__snprintf_chk@plt+0x6b0>
   1130c:	cmp	r0, #118	; 0x76
   11310:	beq	11368 <__snprintf_chk@plt+0x150>
   11314:	cmp	r0, #256	; 0x100
   11318:	bne	11398 <__snprintf_chk@plt+0x180>
   1131c:	ldr	r3, [sp, #20]
   11320:	strb	r8, [r3]
   11324:	b	112c4 <__snprintf_chk@plt+0xac>
   11328:	ldr	r1, [pc, #816]	; 11660 <__snprintf_chk@plt+0x448>
   1132c:	ldr	r3, [pc, #816]	; 11664 <__snprintf_chk@plt+0x44c>
   11330:	ldr	r2, [pc, #816]	; 11668 <__snprintf_chk@plt+0x450>
   11334:	ldr	r0, [r5, r1]
   11338:	ldr	r3, [r5, r3]
   1133c:	add	r2, pc, r2
   11340:	ldr	r1, [pc, #804]	; 1166c <__snprintf_chk@plt+0x454>
   11344:	ldr	r0, [r0]
   11348:	ldr	r3, [r3]
   1134c:	add	r1, pc, r1
   11350:	stm	sp, {r2, r9}
   11354:	ldr	r2, [pc, #788]	; 11670 <__snprintf_chk@plt+0x458>
   11358:	add	r2, pc, r2
   1135c:	bl	13aa0 <close_stdout@@Base+0x1ee0>
   11360:	mov	r0, r9
   11364:	bl	110ec <exit@plt>
   11368:	ldr	r1, [sp, #16]
   1136c:	strb	r8, [r1, #2]
   11370:	b	112c4 <__snprintf_chk@plt+0xac>
   11374:	ldr	r1, [pc, #760]	; 11674 <__snprintf_chk@plt+0x45c>
   11378:	mov	r2, #5
   1137c:	mov	r0, r9
   11380:	add	r1, pc, r1
   11384:	bl	10ffc <dcgettext@plt>
   11388:	mov	r1, r9
   1138c:	mov	r2, r0
   11390:	mov	r0, r9
   11394:	bl	11080 <error@plt>
   11398:	mov	r0, #1
   1139c:	bl	118c8 <__snprintf_chk@plt+0x6b0>
   113a0:	strb	r8, [fp, #1]
   113a4:	b	112c4 <__snprintf_chk@plt+0xac>
   113a8:	ldr	r3, [pc, #712]	; 11678 <__snprintf_chk@plt+0x460>
   113ac:	ldr	r6, [r5, r3]
   113b0:	ldr	r3, [r6]
   113b4:	cmp	r3, sl
   113b8:	beq	11374 <__snprintf_chk@plt+0x15c>
   113bc:	ldr	r3, [pc, #696]	; 1167c <__snprintf_chk@plt+0x464>
   113c0:	mov	r2, #1
   113c4:	ldr	r1, [pc, #692]	; 11680 <__snprintf_chk@plt+0x468>
   113c8:	add	r3, pc, r3
   113cc:	str	r2, [sp, #32]
   113d0:	str	r3, [sp, #16]
   113d4:	add	r1, pc, r1
   113d8:	ldr	r2, [pc, #676]	; 11684 <__snprintf_chk@plt+0x46c>
   113dc:	ldr	r8, [pc, #676]	; 11688 <__snprintf_chk@plt+0x470>
   113e0:	ldr	r3, [pc, #676]	; 1168c <__snprintf_chk@plt+0x474>
   113e4:	add	r2, pc, r2
   113e8:	str	r1, [sp, #36]	; 0x24
   113ec:	add	r8, pc, r8
   113f0:	add	r3, pc, r3
   113f4:	str	r2, [sp, #24]
   113f8:	str	r3, [sp, #28]
   113fc:	str	r4, [sp, #20]
   11400:	b	11430 <__snprintf_chk@plt+0x218>
   11404:	mov	r0, fp
   11408:	bl	10fd8 <rmdir@plt>
   1140c:	subs	r7, r0, #0
   11410:	bne	11494 <__snprintf_chk@plt+0x27c>
   11414:	ldr	r3, [sp, #24]
   11418:	ldrb	r2, [r3, #1]
   1141c:	cmp	r2, #0
   11420:	bne	114f8 <__snprintf_chk@plt+0x2e0>
   11424:	ldr	r3, [r6]
   11428:	add	r3, r3, #1
   1142c:	str	r3, [r6]
   11430:	ldr	r3, [r6]
   11434:	cmp	sl, r3
   11438:	ble	115dc <__snprintf_chk@plt+0x3c4>
   1143c:	ldr	r1, [sp, #16]
   11440:	ldrb	r2, [r1, #2]
   11444:	ldr	r1, [sp, #20]
   11448:	cmp	r2, #0
   1144c:	ldr	fp, [r1, r3, lsl #2]
   11450:	beq	11404 <__snprintf_chk@plt+0x1ec>
   11454:	ldr	ip, [pc, #516]	; 11660 <__snprintf_chk@plt+0x448>
   11458:	mov	r2, #5
   1145c:	ldr	r1, [sp, #36]	; 0x24
   11460:	mov	r0, #0
   11464:	ldr	ip, [r5, ip]
   11468:	ldr	r7, [ip]
   1146c:	bl	10ffc <dcgettext@plt>
   11470:	mov	r1, r0
   11474:	mov	r0, fp
   11478:	str	r1, [sp, #12]
   1147c:	bl	13604 <close_stdout@@Base+0x1a44>
   11480:	ldr	r1, [sp, #12]
   11484:	mov	r2, r0
   11488:	mov	r0, r7
   1148c:	bl	11ac4 <__snprintf_chk@plt+0x8ac>
   11490:	b	11404 <__snprintf_chk@plt+0x1ec>
   11494:	bl	1111c <__errno_location@plt>
   11498:	mov	r1, fp
   1149c:	mov	r7, r0
   114a0:	ldr	r0, [r0]
   114a4:	bl	117cc <__snprintf_chk@plt+0x5b4>
   114a8:	subs	r4, r0, #0
   114ac:	bne	11424 <__snprintf_chk@plt+0x20c>
   114b0:	ldr	ip, [r7]
   114b4:	mov	r2, #5
   114b8:	ldr	r1, [pc, #464]	; 11690 <__snprintf_chk@plt+0x478>
   114bc:	add	r1, pc, r1
   114c0:	str	ip, [sp, #8]
   114c4:	bl	10ffc <dcgettext@plt>
   114c8:	mov	r2, r0
   114cc:	mov	r0, fp
   114d0:	str	r2, [sp, #12]
   114d4:	bl	13604 <close_stdout@@Base+0x1a44>
   114d8:	ldr	ip, [sp, #8]
   114dc:	ldr	r2, [sp, #12]
   114e0:	mov	r1, ip
   114e4:	mov	r3, r0
   114e8:	mov	r0, r4
   114ec:	bl	11080 <error@plt>
   114f0:	str	r4, [sp, #32]
   114f4:	b	11424 <__snprintf_chk@plt+0x20c>
   114f8:	mov	r0, fp
   114fc:	bl	11d7c <close_stdout@@Base+0x1bc>
   11500:	mov	r0, fp
   11504:	mov	r1, #47	; 0x2f
   11508:	bl	111ac <strrchr@plt>
   1150c:	cmp	r0, #0
   11510:	beq	11588 <__snprintf_chk@plt+0x370>
   11514:	cmp	fp, r0
   11518:	bcs	1154c <__snprintf_chk@plt+0x334>
   1151c:	ldrb	r3, [r0]
   11520:	cmp	r3, #47	; 0x2f
   11524:	bne	1154c <__snprintf_chk@plt+0x334>
   11528:	sub	r3, r0, #1
   1152c:	b	11540 <__snprintf_chk@plt+0x328>
   11530:	ldrb	r2, [r3]
   11534:	sub	r3, r3, #1
   11538:	cmp	r2, #47	; 0x2f
   1153c:	bne	1154c <__snprintf_chk@plt+0x334>
   11540:	cmp	r3, fp
   11544:	mov	r0, r3
   11548:	bne	11530 <__snprintf_chk@plt+0x318>
   1154c:	ldrb	r3, [r8, #2]
   11550:	strb	r7, [r0, #1]
   11554:	cmp	r3, #0
   11558:	bne	115a0 <__snprintf_chk@plt+0x388>
   1155c:	mov	r0, fp
   11560:	bl	10fd8 <rmdir@plt>
   11564:	cmp	r0, #0
   11568:	beq	11500 <__snprintf_chk@plt+0x2e8>
   1156c:	bl	1111c <__errno_location@plt>
   11570:	mov	r1, fp
   11574:	mov	r7, r0
   11578:	ldr	r0, [r0]
   1157c:	bl	117cc <__snprintf_chk@plt+0x5b4>
   11580:	subs	r4, r0, #0
   11584:	beq	115ec <__snprintf_chk@plt+0x3d4>
   11588:	mov	r3, #1
   1158c:	ldr	r1, [sp, #32]
   11590:	and	r3, r3, r1
   11594:	uxtb	r3, r3
   11598:	str	r3, [sp, #32]
   1159c:	b	11424 <__snprintf_chk@plt+0x20c>
   115a0:	ldr	r3, [pc, #184]	; 11660 <__snprintf_chk@plt+0x448>
   115a4:	mov	r2, #5
   115a8:	ldr	r1, [sp, #28]
   115ac:	mov	r0, #0
   115b0:	ldr	r3, [r5, r3]
   115b4:	ldr	r9, [r3]
   115b8:	bl	10ffc <dcgettext@plt>
   115bc:	mov	r4, r0
   115c0:	mov	r0, fp
   115c4:	bl	13604 <close_stdout@@Base+0x1a44>
   115c8:	mov	r1, r4
   115cc:	mov	r2, r0
   115d0:	mov	r0, r9
   115d4:	bl	11ac4 <__snprintf_chk@plt+0x8ac>
   115d8:	b	1155c <__snprintf_chk@plt+0x344>
   115dc:	ldr	r2, [sp, #32]
   115e0:	rsbs	r0, r2, #1
   115e4:	movcc	r0, #0
   115e8:	bl	110ec <exit@plt>
   115ec:	ldr	ip, [r7]
   115f0:	mov	r2, #5
   115f4:	ldr	r1, [pc, #152]	; 11694 <__snprintf_chk@plt+0x47c>
   115f8:	add	r1, pc, r1
   115fc:	str	ip, [sp, #8]
   11600:	bl	10ffc <dcgettext@plt>
   11604:	mov	r2, r0
   11608:	mov	r0, fp
   1160c:	str	r2, [sp, #12]
   11610:	bl	13604 <close_stdout@@Base+0x1a44>
   11614:	ldr	ip, [sp, #8]
   11618:	ldr	r2, [sp, #12]
   1161c:	mov	r1, ip
   11620:	mov	r3, r0
   11624:	mov	r0, r4
   11628:	bl	11080 <error@plt>
   1162c:	mov	r3, r4
   11630:	b	1158c <__snprintf_chk@plt+0x374>
   11634:	ldrdeq	r5, [r0], -r0
   11638:	andeq	r5, r0, r4, lsl #8
   1163c:	andeq	r5, r0, ip, ror #9
   11640:			; <UNDEFINED> instruction: 0x000054b4
   11644:	andeq	r5, r1, r4, ror #23
   11648:	ldrdeq	r5, [r1], -sp
   1164c:	andeq	r5, r1, ip, ror #26
   11650:	andeq	r0, r0, ip, lsl #2
   11654:	ldrdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   11658:	ldrdeq	r5, [r1], -r1
   1165c:			; <UNDEFINED> instruction: 0x00015eb9
   11660:	andeq	r0, r0, r8, lsl r1
   11664:	andeq	r0, r0, r4, lsl #2
   11668:	andeq	r5, r0, r0, lsl #8
   1166c:	andeq	r5, r0, r8, ror #7
   11670:	andeq	r5, r0, r0, lsl #6
   11674:	ldrdeq	r5, [r0], -r0
   11678:	andeq	r0, r0, r0, lsl #2
   1167c:	andeq	r5, r1, sp, lsr #27
   11680:	andeq	r5, r0, ip, lsl #7
   11684:	muleq	r1, r1, sp
   11688:	andeq	r5, r1, r9, lsl #27
   1168c:	andeq	r5, r0, r0, ror r3
   11690:			; <UNDEFINED> instruction: 0x000052bc
   11694:	muleq	r0, r4, r1
   11698:	mov	fp, #0
   1169c:	mov	lr, #0
   116a0:	pop	{r1}		; (ldr r1, [sp], #4)
   116a4:	mov	r2, sp
   116a8:	push	{r2}		; (str r2, [sp, #-4]!)
   116ac:	push	{r0}		; (str r0, [sp, #-4]!)
   116b0:	ldr	ip, [pc, #16]	; 116c8 <__snprintf_chk@plt+0x4b0>
   116b4:	push	{ip}		; (str ip, [sp, #-4]!)
   116b8:	ldr	r0, [pc, #12]	; 116cc <__snprintf_chk@plt+0x4b4>
   116bc:	ldr	r3, [pc, #12]	; 116d0 <__snprintf_chk@plt+0x4b8>
   116c0:	bl	110b0 <__libc_start_main@plt>
   116c4:	bl	111f4 <abort@plt>
   116c8:	ldrdeq	r6, [r1], -r0
   116cc:	andeq	r1, r1, r4, lsr #4
   116d0:	andeq	r6, r1, ip, ror #6
   116d4:	ldr	r3, [pc, #20]	; 116f0 <__snprintf_chk@plt+0x4d8>
   116d8:	ldr	r2, [pc, #20]	; 116f4 <__snprintf_chk@plt+0x4dc>
   116dc:	add	r3, pc, r3
   116e0:	ldr	r2, [r3, r2]
   116e4:	cmp	r2, #0
   116e8:	bxeq	lr
   116ec:	b	110c8 <__gmon_start__@plt>
   116f0:	andeq	r5, r1, ip, lsl r9
   116f4:	andeq	r0, r0, r0, lsl r1
   116f8:	push	{r3, lr}
   116fc:	movw	r0, #29052	; 0x717c
   11700:	ldr	r3, [pc, #36]	; 1172c <__snprintf_chk@plt+0x514>
   11704:	movt	r0, #2
   11708:	rsb	r3, r0, r3
   1170c:	cmp	r3, #6
   11710:	popls	{r3, pc}
   11714:	movw	r3, #0
   11718:	movt	r3, #0
   1171c:	cmp	r3, #0
   11720:	popeq	{r3, pc}
   11724:	blx	r3
   11728:	pop	{r3, pc}
   1172c:	andeq	r7, r2, pc, ror r1
   11730:	push	{r3, lr}
   11734:	movw	r0, #29052	; 0x717c
   11738:	movw	r3, #29052	; 0x717c
   1173c:	movt	r0, #2
   11740:	movt	r3, #2
   11744:	rsb	r3, r0, r3
   11748:	asr	r3, r3, #2
   1174c:	add	r3, r3, r3, lsr #31
   11750:	asrs	r1, r3, #1
   11754:	popeq	{r3, pc}
   11758:	movw	r2, #0
   1175c:	movt	r2, #0
   11760:	cmp	r2, #0
   11764:	popeq	{r3, pc}
   11768:	blx	r2
   1176c:	pop	{r3, pc}
   11770:	push	{r4, lr}
   11774:	movw	r4, #29052	; 0x717c
   11778:	movt	r4, #2
   1177c:	ldrb	r3, [r4]
   11780:	cmp	r3, #0
   11784:	popne	{r4, pc}
   11788:	bl	116f8 <__snprintf_chk@plt+0x4e0>
   1178c:	mov	r3, #1
   11790:	strb	r3, [r4]
   11794:	pop	{r4, pc}
   11798:	movw	r0, #28272	; 0x6e70
   1179c:	movt	r0, #2
   117a0:	push	{r3, lr}
   117a4:	ldr	r3, [r0]
   117a8:	cmp	r3, #0
   117ac:	beq	117c4 <__snprintf_chk@plt+0x5ac>
   117b0:	movw	r3, #0
   117b4:	movt	r3, #0
   117b8:	cmp	r3, #0
   117bc:	beq	117c4 <__snprintf_chk@plt+0x5ac>
   117c0:	blx	r3
   117c4:	pop	{r3, lr}
   117c8:	b	11730 <__snprintf_chk@plt+0x518>
   117cc:	ldr	r2, [pc, #240]	; 118c4 <__snprintf_chk@plt+0x6ac>
   117d0:	push	{r4, r5, r6, lr}
   117d4:	add	r2, pc, r2
   117d8:	ldrb	r4, [r2]
   117dc:	cmp	r4, #0
   117e0:	beq	11898 <__snprintf_chk@plt+0x680>
   117e4:	cmp	r0, #39	; 0x27
   117e8:	cmpne	r0, #17
   117ec:	movne	r4, #0
   117f0:	moveq	r4, #1
   117f4:	beq	11898 <__snprintf_chk@plt+0x680>
   117f8:	sub	r3, r0, #1
   117fc:	cmp	r3, #29
   11800:	bhi	11898 <__snprintf_chk@plt+0x680>
   11804:	mov	r0, #1
   11808:	movw	r2, #36865	; 0x9001
   1180c:	lsl	r3, r0, r3
   11810:	movt	r2, #8193	; 0x2001
   11814:	and	r2, r3, r2
   11818:	cmp	r2, #0
   1181c:	beq	11898 <__snprintf_chk@plt+0x680>
   11820:	mvn	r0, #99	; 0x63
   11824:	mov	r2, #51456	; 0xc900
   11828:	bl	11104 <openat64@plt>
   1182c:	subs	r6, r0, #0
   11830:	blt	11898 <__snprintf_chk@plt+0x680>
   11834:	bl	111d0 <fdopendir@plt>
   11838:	subs	r5, r0, #0
   1183c:	beq	118b8 <__snprintf_chk@plt+0x6a0>
   11840:	bl	1111c <__errno_location@plt>
   11844:	mov	r6, r0
   11848:	str	r4, [r0]
   1184c:	b	11870 <__snprintf_chk@plt+0x658>
   11850:	ldrb	r3, [r0, #20]
   11854:	cmp	r3, #46	; 0x2e
   11858:	movne	r3, #1
   1185c:	moveq	r3, #2
   11860:	ldrb	r3, [r1, r3]
   11864:	cmp	r3, #0
   11868:	cmpne	r3, #47	; 0x2f
   1186c:	bne	11890 <__snprintf_chk@plt+0x678>
   11870:	mov	r0, r5
   11874:	bl	111c4 <readdir64@plt>
   11878:	cmp	r0, #0
   1187c:	add	r1, r0, #19
   11880:	beq	118a0 <__snprintf_chk@plt+0x688>
   11884:	ldrb	r2, [r0, #19]
   11888:	cmp	r2, #46	; 0x2e
   1188c:	beq	11850 <__snprintf_chk@plt+0x638>
   11890:	mov	r0, r5
   11894:	bl	1120c <closedir@plt>
   11898:	mov	r0, r4
   1189c:	pop	{r4, r5, r6, pc}
   118a0:	ldr	r4, [r6]
   118a4:	mov	r0, r5
   118a8:	bl	1120c <closedir@plt>
   118ac:	rsbs	r4, r4, #1
   118b0:	movcc	r4, #0
   118b4:	b	11898 <__snprintf_chk@plt+0x680>
   118b8:	mov	r0, r6
   118bc:	bl	11200 <close@plt>
   118c0:	b	11898 <__snprintf_chk@plt+0x680>
   118c4:	andeq	r5, r1, r1, lsr #19
   118c8:	push	{r4, r5, r6, lr}
   118cc:	subs	r4, r0, #0
   118d0:	ldr	r5, [pc, #428]	; 11a84 <__snprintf_chk@plt+0x86c>
   118d4:	add	r5, pc, r5
   118d8:	beq	11920 <__snprintf_chk@plt+0x708>
   118dc:	ldr	r3, [pc, #420]	; 11a88 <__snprintf_chk@plt+0x870>
   118e0:	mov	r2, #5
   118e4:	ldr	r1, [pc, #416]	; 11a8c <__snprintf_chk@plt+0x874>
   118e8:	mov	r0, #0
   118ec:	ldr	r3, [r5, r3]
   118f0:	add	r1, pc, r1
   118f4:	ldr	r6, [r3]
   118f8:	bl	10ffc <dcgettext@plt>
   118fc:	ldr	r3, [pc, #396]	; 11a90 <__snprintf_chk@plt+0x878>
   11900:	mov	r1, #1
   11904:	ldr	r3, [r5, r3]
   11908:	ldr	r3, [r3]
   1190c:	mov	r2, r0
   11910:	mov	r0, r6
   11914:	bl	11164 <__fprintf_chk@plt>
   11918:	mov	r0, r4
   1191c:	bl	110ec <exit@plt>
   11920:	ldr	r1, [pc, #364]	; 11a94 <__snprintf_chk@plt+0x87c>
   11924:	mov	r2, #5
   11928:	add	r1, pc, r1
   1192c:	bl	10ffc <dcgettext@plt>
   11930:	ldr	r3, [pc, #344]	; 11a90 <__snprintf_chk@plt+0x878>
   11934:	ldr	r6, [r5, r3]
   11938:	ldr	r2, [r6]
   1193c:	mov	r1, r0
   11940:	mov	r0, #1
   11944:	bl	1114c <__printf_chk@plt>
   11948:	ldr	r1, [pc, #328]	; 11a98 <__snprintf_chk@plt+0x880>
   1194c:	mov	r2, #5
   11950:	mov	r0, r4
   11954:	add	r1, pc, r1
   11958:	bl	10ffc <dcgettext@plt>
   1195c:	ldr	r3, [pc, #312]	; 11a9c <__snprintf_chk@plt+0x884>
   11960:	ldr	r5, [r5, r3]
   11964:	ldr	r1, [r5]
   11968:	bl	10f78 <fputs_unlocked@plt>
   1196c:	ldr	r1, [pc, #300]	; 11aa0 <__snprintf_chk@plt+0x888>
   11970:	mov	r2, #5
   11974:	mov	r0, r4
   11978:	add	r1, pc, r1
   1197c:	bl	10ffc <dcgettext@plt>
   11980:	ldr	r1, [r5]
   11984:	bl	10f78 <fputs_unlocked@plt>
   11988:	ldr	r1, [pc, #276]	; 11aa4 <__snprintf_chk@plt+0x88c>
   1198c:	mov	r2, #5
   11990:	mov	r0, r4
   11994:	add	r1, pc, r1
   11998:	bl	10ffc <dcgettext@plt>
   1199c:	ldr	r1, [r5]
   119a0:	bl	10f78 <fputs_unlocked@plt>
   119a4:	ldr	r1, [pc, #252]	; 11aa8 <__snprintf_chk@plt+0x890>
   119a8:	mov	r2, #5
   119ac:	mov	r0, r4
   119b0:	add	r1, pc, r1
   119b4:	bl	10ffc <dcgettext@plt>
   119b8:	ldr	r1, [r5]
   119bc:	bl	10f78 <fputs_unlocked@plt>
   119c0:	ldr	r1, [pc, #228]	; 11aac <__snprintf_chk@plt+0x894>
   119c4:	mov	r2, #5
   119c8:	mov	r0, r4
   119cc:	add	r1, pc, r1
   119d0:	bl	10ffc <dcgettext@plt>
   119d4:	ldr	r2, [pc, #212]	; 11ab0 <__snprintf_chk@plt+0x898>
   119d8:	ldr	r3, [pc, #212]	; 11ab4 <__snprintf_chk@plt+0x89c>
   119dc:	add	r2, pc, r2
   119e0:	add	r3, pc, r3
   119e4:	mov	r1, r0
   119e8:	mov	r0, #1
   119ec:	bl	1114c <__printf_chk@plt>
   119f0:	mov	r0, #5
   119f4:	mov	r1, r4
   119f8:	bl	111a0 <setlocale@plt>
   119fc:	cmp	r0, #0
   11a00:	beq	11a1c <__snprintf_chk@plt+0x804>
   11a04:	ldr	r1, [pc, #172]	; 11ab8 <__snprintf_chk@plt+0x8a0>
   11a08:	mov	r2, #3
   11a0c:	add	r1, pc, r1
   11a10:	bl	111e8 <strncmp@plt>
   11a14:	cmp	r0, #0
   11a18:	bne	11a50 <__snprintf_chk@plt+0x838>
   11a1c:	ldr	r1, [pc, #152]	; 11abc <__snprintf_chk@plt+0x8a4>
   11a20:	mov	r2, #5
   11a24:	mov	r0, #0
   11a28:	add	r1, pc, r1
   11a2c:	bl	10ffc <dcgettext@plt>
   11a30:	mov	r5, r0
   11a34:	ldr	r0, [r6]
   11a38:	bl	11cd8 <close_stdout@@Base+0x118>
   11a3c:	mov	r1, r5
   11a40:	mov	r2, r0
   11a44:	mov	r0, #1
   11a48:	bl	1114c <__printf_chk@plt>
   11a4c:	b	11918 <__snprintf_chk@plt+0x700>
   11a50:	ldr	r1, [pc, #104]	; 11ac0 <__snprintf_chk@plt+0x8a8>
   11a54:	mov	r2, #5
   11a58:	mov	r0, r4
   11a5c:	add	r1, pc, r1
   11a60:	bl	10ffc <dcgettext@plt>
   11a64:	mov	r5, r0
   11a68:	ldr	r0, [r6]
   11a6c:	bl	11cd8 <close_stdout@@Base+0x118>
   11a70:	mov	r1, r5
   11a74:	mov	r2, r0
   11a78:	mov	r0, #1
   11a7c:	bl	1114c <__printf_chk@plt>
   11a80:	b	11a1c <__snprintf_chk@plt+0x804>
   11a84:	andeq	r5, r1, r4, lsr #14
   11a88:	andeq	r0, r0, r8, lsl #2
   11a8c:	andeq	r4, r0, r8, lsl fp
   11a90:	andeq	r0, r0, r4, lsr #2
   11a94:	andeq	r4, r0, r8, lsl #22
   11a98:	andeq	r4, r0, r0, lsl #22
   11a9c:	andeq	r0, r0, r8, lsl r1
   11aa0:	muleq	r0, r8, fp
   11aa4:	andeq	r4, r0, r4, asr #24
   11aa8:	andeq	r4, r0, r8, asr ip
   11aac:	andeq	r4, r0, r4, ror ip
   11ab0:	andeq	r4, r0, ip, ror ip
   11ab4:	andeq	r4, r0, r8, lsl #25
   11ab8:	andeq	r4, r0, r4, lsl #25
   11abc:			; <UNDEFINED> instruction: 0x00004cb4
   11ac0:	andeq	r4, r0, r8, lsr ip
   11ac4:	push	{r1, r2, r3}
   11ac8:	ldr	r3, [pc, #184]	; 11b88 <__snprintf_chk@plt+0x970>
   11acc:	push	{r4, r5, r6, lr}
   11ad0:	mov	r4, r0
   11ad4:	ldr	r0, [pc, #176]	; 11b8c <__snprintf_chk@plt+0x974>
   11ad8:	add	r3, pc, r3
   11adc:	ldr	r2, [pc, #172]	; 11b90 <__snprintf_chk@plt+0x978>
   11ae0:	sub	sp, sp, #12
   11ae4:	mov	r1, r4
   11ae8:	ldr	r5, [r3, r0]
   11aec:	ldr	r6, [sp, #28]
   11af0:	ldr	r0, [r5]
   11af4:	str	r0, [sp, #4]
   11af8:	ldr	r3, [r3, r2]
   11afc:	ldr	r0, [r3]
   11b00:	bl	10f78 <fputs_unlocked@plt>
   11b04:	ldr	r0, [pc, #136]	; 11b94 <__snprintf_chk@plt+0x97c>
   11b08:	mov	r3, r4
   11b0c:	mov	r1, #1
   11b10:	mov	r2, #2
   11b14:	add	r0, pc, r0
   11b18:	bl	10fe4 <fwrite_unlocked@plt>
   11b1c:	add	r3, sp, #32
   11b20:	mov	r1, r6
   11b24:	mov	r0, r4
   11b28:	mov	r2, r3
   11b2c:	str	r3, [sp]
   11b30:	bl	13e1c <close_stdout@@Base+0x225c>
   11b34:	ldr	r3, [r4, #20]
   11b38:	ldr	r2, [r4, #24]
   11b3c:	cmp	r3, r2
   11b40:	addcc	r1, r3, #1
   11b44:	movcc	r2, #10
   11b48:	strcc	r1, [r4, #20]
   11b4c:	strbcc	r2, [r3]
   11b50:	bcs	11b74 <__snprintf_chk@plt+0x95c>
   11b54:	ldr	r2, [sp, #4]
   11b58:	ldr	r3, [r5]
   11b5c:	cmp	r2, r3
   11b60:	bne	11b84 <__snprintf_chk@plt+0x96c>
   11b64:	add	sp, sp, #12
   11b68:	pop	{r4, r5, r6, lr}
   11b6c:	add	sp, sp, #12
   11b70:	bx	lr
   11b74:	mov	r0, r4
   11b78:	mov	r1, #10
   11b7c:	bl	11194 <__overflow@plt>
   11b80:	b	11b54 <__snprintf_chk@plt+0x93c>
   11b84:	bl	11008 <__stack_chk_fail@plt>
   11b88:	andeq	r5, r1, r0, lsr #10
   11b8c:	strdeq	r0, [r0], -ip
   11b90:	andeq	r0, r0, r4, lsr #2
   11b94:	ldrdeq	r4, [r0], -ip
   11b98:	ldr	r3, [pc, #8]	; 11ba8 <__snprintf_chk@plt+0x990>
   11b9c:	add	r3, pc, r3
   11ba0:	str	r0, [r3]
   11ba4:	bx	lr
   11ba8:	ldrdeq	r5, [r1], -ip
   11bac:	ldr	r3, [pc, #8]	; 11bbc <__snprintf_chk@plt+0x9a4>
   11bb0:	add	r3, pc, r3
   11bb4:	strb	r0, [r3, #4]
   11bb8:	bx	lr
   11bbc:	andeq	r5, r1, r8, asr #11

00011bc0 <close_stdout@@Base>:
   11bc0:	push	{r4, r5, r6, r7, lr}
   11bc4:	sub	sp, sp, #12
   11bc8:	ldr	r4, [pc, #228]	; 11cb4 <close_stdout@@Base+0xf4>
   11bcc:	ldr	r3, [pc, #228]	; 11cb8 <close_stdout@@Base+0xf8>
   11bd0:	add	r4, pc, r4
   11bd4:	ldr	r3, [r4, r3]
   11bd8:	ldr	r0, [r3]
   11bdc:	bl	13f10 <close_stdout@@Base+0x2350>
   11be0:	cmp	r0, #0
   11be4:	beq	11c0c <close_stdout@@Base+0x4c>
   11be8:	ldr	r3, [pc, #204]	; 11cbc <close_stdout@@Base+0xfc>
   11bec:	add	r3, pc, r3
   11bf0:	ldrb	r3, [r3, #4]
   11bf4:	cmp	r3, #0
   11bf8:	beq	11c2c <close_stdout@@Base+0x6c>
   11bfc:	bl	1111c <__errno_location@plt>
   11c00:	ldr	r3, [r0]
   11c04:	cmp	r3, #32
   11c08:	bne	11c2c <close_stdout@@Base+0x6c>
   11c0c:	ldr	r3, [pc, #172]	; 11cc0 <close_stdout@@Base+0x100>
   11c10:	ldr	r3, [r4, r3]
   11c14:	ldr	r0, [r3]
   11c18:	bl	13f10 <close_stdout@@Base+0x2350>
   11c1c:	cmp	r0, #0
   11c20:	bne	11c80 <close_stdout@@Base+0xc0>
   11c24:	add	sp, sp, #12
   11c28:	pop	{r4, r5, r6, r7, pc}
   11c2c:	ldr	r1, [pc, #144]	; 11cc4 <close_stdout@@Base+0x104>
   11c30:	mov	r0, #0
   11c34:	mov	r2, #5
   11c38:	add	r1, pc, r1
   11c3c:	bl	10ffc <dcgettext@plt>
   11c40:	ldr	r3, [pc, #128]	; 11cc8 <close_stdout@@Base+0x108>
   11c44:	ldr	r5, [pc, r3]
   11c48:	cmp	r5, #0
   11c4c:	mov	r6, r0
   11c50:	beq	11c90 <close_stdout@@Base+0xd0>
   11c54:	bl	1111c <__errno_location@plt>
   11c58:	ldr	r7, [r0]
   11c5c:	mov	r0, r5
   11c60:	bl	134b0 <close_stdout@@Base+0x18f0>
   11c64:	ldr	r2, [pc, #96]	; 11ccc <close_stdout@@Base+0x10c>
   11c68:	str	r6, [sp]
   11c6c:	mov	r1, r7
   11c70:	add	r2, pc, r2
   11c74:	mov	r3, r0
   11c78:	mov	r0, #0
   11c7c:	bl	11080 <error@plt>
   11c80:	ldr	r3, [pc, #72]	; 11cd0 <close_stdout@@Base+0x110>
   11c84:	ldr	r3, [r4, r3]
   11c88:	ldr	r0, [r3]
   11c8c:	bl	10fb4 <_exit@plt>
   11c90:	bl	1111c <__errno_location@plt>
   11c94:	ldr	r2, [pc, #56]	; 11cd4 <close_stdout@@Base+0x114>
   11c98:	add	r2, pc, r2
   11c9c:	mov	r3, r0
   11ca0:	mov	r0, r5
   11ca4:	ldr	r1, [r3]
   11ca8:	mov	r3, r6
   11cac:	bl	11080 <error@plt>
   11cb0:	b	11c80 <close_stdout@@Base+0xc0>
   11cb4:	andeq	r5, r1, r8, lsr #8
   11cb8:	andeq	r0, r0, r8, lsl r1
   11cbc:	andeq	r5, r1, ip, lsl #11
   11cc0:	andeq	r0, r0, r8, lsl #2
   11cc4:	andeq	r4, r0, r4, asr #23
   11cc8:	andeq	r5, r1, r4, lsr r5
   11ccc:	muleq	r0, r8, fp
   11cd0:	andeq	r0, r0, ip, lsl r1
   11cd4:	ldrdeq	r4, [r0], -ip
   11cd8:	ldrb	r3, [r0]
   11cdc:	cmp	r3, #47	; 0x2f
   11ce0:	bne	11cfc <close_stdout@@Base+0x13c>
   11ce4:	add	r2, r0, #1
   11ce8:	mov	r0, r2
   11cec:	add	r2, r2, #1
   11cf0:	ldrb	r3, [r0]
   11cf4:	cmp	r3, #47	; 0x2f
   11cf8:	beq	11ce8 <close_stdout@@Base+0x128>
   11cfc:	cmp	r3, #0
   11d00:	bxeq	lr
   11d04:	mov	r2, r0
   11d08:	mov	r1, #0
   11d0c:	cmp	r3, #47	; 0x2f
   11d10:	moveq	r1, #1
   11d14:	beq	11d24 <close_stdout@@Base+0x164>
   11d18:	cmp	r1, #0
   11d1c:	movne	r0, r2
   11d20:	movne	r1, #0
   11d24:	ldrb	r3, [r2, #1]!
   11d28:	cmp	r3, #0
   11d2c:	bne	11d0c <close_stdout@@Base+0x14c>
   11d30:	bx	lr
   11d34:	push	{r4, lr}
   11d38:	mov	r4, r0
   11d3c:	bl	110f8 <strlen@plt>
   11d40:	cmp	r0, #1
   11d44:	popls	{r4, pc}
   11d48:	sub	r3, r0, #1
   11d4c:	ldrb	r2, [r4, r3]
   11d50:	cmp	r2, #47	; 0x2f
   11d54:	popne	{r4, pc}
   11d58:	mov	r0, r3
   11d5c:	cmp	r0, #1
   11d60:	sub	r3, r3, #1
   11d64:	beq	11d78 <close_stdout@@Base+0x1b8>
   11d68:	ldrb	r2, [r4, r3]
   11d6c:	cmp	r2, #47	; 0x2f
   11d70:	popne	{r4, pc}
   11d74:	b	11d58 <close_stdout@@Base+0x198>
   11d78:	pop	{r4, pc}
   11d7c:	push	{r4, lr}
   11d80:	mov	r4, r0
   11d84:	bl	11cd8 <close_stdout@@Base+0x118>
   11d88:	ldrb	r3, [r0]
   11d8c:	cmp	r3, #0
   11d90:	movne	r4, r0
   11d94:	mov	r0, r4
   11d98:	bl	11d34 <close_stdout@@Base+0x174>
   11d9c:	mov	r2, #0
   11da0:	ldrb	r3, [r4, r0]
   11da4:	strb	r2, [r4, r0]
   11da8:	subs	r0, r3, r2
   11dac:	movne	r0, #1
   11db0:	pop	{r4, pc}
   11db4:	push	{r3, r4, r5, r6, r7, lr}
   11db8:	subs	r4, r0, #0
   11dbc:	ldr	r5, [pc, #172]	; 11e70 <close_stdout@@Base+0x2b0>
   11dc0:	add	r5, pc, r5
   11dc4:	beq	11e4c <close_stdout@@Base+0x28c>
   11dc8:	mov	r1, #47	; 0x2f
   11dcc:	bl	111ac <strrchr@plt>
   11dd0:	subs	r6, r0, #0
   11dd4:	beq	11e30 <close_stdout@@Base+0x270>
   11dd8:	add	r7, r6, #1
   11ddc:	rsb	r3, r4, r7
   11de0:	cmp	r3, #6
   11de4:	ble	11e30 <close_stdout@@Base+0x270>
   11de8:	ldr	r1, [pc, #132]	; 11e74 <close_stdout@@Base+0x2b4>
   11dec:	sub	r0, r6, #6
   11df0:	mov	r2, #7
   11df4:	add	r1, pc, r1
   11df8:	bl	111e8 <strncmp@plt>
   11dfc:	cmp	r0, #0
   11e00:	bne	11e30 <close_stdout@@Base+0x270>
   11e04:	ldr	r1, [pc, #108]	; 11e78 <close_stdout@@Base+0x2b8>
   11e08:	mov	r0, r7
   11e0c:	mov	r2, #3
   11e10:	add	r1, pc, r1
   11e14:	bl	111e8 <strncmp@plt>
   11e18:	cmp	r0, #0
   11e1c:	movne	r4, r7
   11e20:	ldreq	r3, [pc, #84]	; 11e7c <close_stdout@@Base+0x2bc>
   11e24:	addeq	r4, r6, #4
   11e28:	ldreq	r3, [r5, r3]
   11e2c:	streq	r4, [r3]
   11e30:	ldr	r2, [pc, #72]	; 11e80 <close_stdout@@Base+0x2c0>
   11e34:	ldr	r3, [pc, #72]	; 11e84 <close_stdout@@Base+0x2c4>
   11e38:	ldr	r2, [r5, r2]
   11e3c:	str	r4, [r2]
   11e40:	ldr	r3, [r5, r3]
   11e44:	str	r4, [r3]
   11e48:	pop	{r3, r4, r5, r6, r7, pc}
   11e4c:	ldr	r3, [pc, #52]	; 11e88 <close_stdout@@Base+0x2c8>
   11e50:	mov	r1, #1
   11e54:	ldr	r0, [pc, #48]	; 11e8c <close_stdout@@Base+0x2cc>
   11e58:	mov	r2, #55	; 0x37
   11e5c:	ldr	r3, [r5, r3]
   11e60:	add	r0, pc, r0
   11e64:	ldr	r3, [r3]
   11e68:	bl	11038 <fwrite@plt>
   11e6c:	bl	111f4 <abort@plt>
   11e70:	andeq	r5, r1, r8, lsr r2
   11e74:	andeq	r4, r0, r4, asr sl
   11e78:	andeq	r4, r0, r0, asr #20
   11e7c:	andeq	r0, r0, ip, lsr #2
   11e80:	andeq	r0, r0, r4, lsr #2
   11e84:	andeq	r0, r0, r0, lsr #2
   11e88:	andeq	r0, r0, r8, lsl #2
   11e8c:			; <UNDEFINED> instruction: 0x000049b0
   11e90:	push	{r3, lr}
   11e94:	mov	r3, r0
   11e98:	mov	r2, #0
   11e9c:	cmp	r1, #8
   11ea0:	str	r2, [r3], #4
   11ea4:	add	r3, r3, #4
   11ea8:	str	r2, [r0, #4]
   11eac:	str	r2, [r3], #4
   11eb0:	str	r2, [r3], #4
   11eb4:	str	r2, [r3], #4
   11eb8:	str	r2, [r3], #4
   11ebc:	str	r2, [r3], #4
   11ec0:	str	r2, [r3], #4
   11ec4:	str	r2, [r3], #4
   11ec8:	str	r2, [r3], #4
   11ecc:	str	r2, [r3], #4
   11ed0:	str	r2, [r3]
   11ed4:	beq	11ee0 <close_stdout@@Base+0x320>
   11ed8:	str	r1, [r0]
   11edc:	pop	{r3, pc}
   11ee0:	bl	111f4 <abort@plt>
   11ee4:	push	{r4, r5, r6, lr}
   11ee8:	mov	r4, r0
   11eec:	mov	r6, r1
   11ef0:	mov	r0, #0
   11ef4:	mov	r1, r4
   11ef8:	mov	r2, #5
   11efc:	bl	10ffc <dcgettext@plt>
   11f00:	cmp	r0, r4
   11f04:	mov	r5, r0
   11f08:	beq	11f10 <close_stdout@@Base+0x350>
   11f0c:	pop	{r4, r5, r6, pc}
   11f10:	bl	13f90 <close_stdout@@Base+0x23d0>
   11f14:	ldrb	r3, [r0]
   11f18:	bic	r3, r3, #32
   11f1c:	cmp	r3, #85	; 0x55
   11f20:	bne	11f94 <close_stdout@@Base+0x3d4>
   11f24:	ldrb	r3, [r0, #1]
   11f28:	bic	r3, r3, #32
   11f2c:	cmp	r3, #84	; 0x54
   11f30:	bne	11f80 <close_stdout@@Base+0x3c0>
   11f34:	ldrb	r3, [r0, #2]
   11f38:	bic	r3, r3, #32
   11f3c:	cmp	r3, #70	; 0x46
   11f40:	bne	11f80 <close_stdout@@Base+0x3c0>
   11f44:	ldrb	r3, [r0, #3]
   11f48:	cmp	r3, #45	; 0x2d
   11f4c:	bne	11f80 <close_stdout@@Base+0x3c0>
   11f50:	ldrb	r3, [r0, #4]
   11f54:	cmp	r3, #56	; 0x38
   11f58:	bne	11f80 <close_stdout@@Base+0x3c0>
   11f5c:	ldrb	r3, [r0, #5]
   11f60:	cmp	r3, #0
   11f64:	bne	11f80 <close_stdout@@Base+0x3c0>
   11f68:	ldrb	r3, [r5]
   11f6c:	cmp	r3, #96	; 0x60
   11f70:	beq	1200c <close_stdout@@Base+0x44c>
   11f74:	ldr	r0, [pc, #180]	; 12030 <close_stdout@@Base+0x470>
   11f78:	add	r0, pc, r0
   11f7c:	pop	{r4, r5, r6, pc}
   11f80:	cmp	r6, #7
   11f84:	beq	12018 <close_stdout@@Base+0x458>
   11f88:	ldr	r0, [pc, #164]	; 12034 <close_stdout@@Base+0x474>
   11f8c:	add	r0, pc, r0
   11f90:	pop	{r4, r5, r6, pc}
   11f94:	cmp	r3, #71	; 0x47
   11f98:	bne	11f80 <close_stdout@@Base+0x3c0>
   11f9c:	ldrb	r3, [r0, #1]
   11fa0:	bic	r3, r3, #32
   11fa4:	cmp	r3, #66	; 0x42
   11fa8:	bne	11f80 <close_stdout@@Base+0x3c0>
   11fac:	ldrb	r3, [r0, #2]
   11fb0:	cmp	r3, #49	; 0x31
   11fb4:	bne	11f80 <close_stdout@@Base+0x3c0>
   11fb8:	ldrb	r3, [r0, #3]
   11fbc:	cmp	r3, #56	; 0x38
   11fc0:	bne	11f80 <close_stdout@@Base+0x3c0>
   11fc4:	ldrb	r3, [r0, #4]
   11fc8:	cmp	r3, #48	; 0x30
   11fcc:	bne	11f80 <close_stdout@@Base+0x3c0>
   11fd0:	ldrb	r3, [r0, #5]
   11fd4:	cmp	r3, #51	; 0x33
   11fd8:	bne	11f80 <close_stdout@@Base+0x3c0>
   11fdc:	ldrb	r3, [r0, #6]
   11fe0:	cmp	r3, #48	; 0x30
   11fe4:	bne	11f80 <close_stdout@@Base+0x3c0>
   11fe8:	ldrb	r3, [r0, #7]
   11fec:	cmp	r3, #0
   11ff0:	bne	11f80 <close_stdout@@Base+0x3c0>
   11ff4:	ldrb	r3, [r5]
   11ff8:	cmp	r3, #96	; 0x60
   11ffc:	beq	12024 <close_stdout@@Base+0x464>
   12000:	ldr	r0, [pc, #48]	; 12038 <close_stdout@@Base+0x478>
   12004:	add	r0, pc, r0
   12008:	pop	{r4, r5, r6, pc}
   1200c:	ldr	r0, [pc, #40]	; 1203c <close_stdout@@Base+0x47c>
   12010:	add	r0, pc, r0
   12014:	pop	{r4, r5, r6, pc}
   12018:	ldr	r0, [pc, #32]	; 12040 <close_stdout@@Base+0x480>
   1201c:	add	r0, pc, r0
   12020:	pop	{r4, r5, r6, pc}
   12024:	ldr	r0, [pc, #24]	; 12044 <close_stdout@@Base+0x484>
   12028:	add	r0, pc, r0
   1202c:	pop	{r4, r5, r6, pc}
   12030:	strdeq	r4, [r0], -ip
   12034:	strdeq	r4, [r0], -r0
   12038:	andeq	r4, r0, r4, ror r8
   1203c:	andeq	r4, r0, r8, ror r8
   12040:	andeq	r4, r0, r4, ror #16
   12044:	andeq	r4, r0, ip, asr r8
   12048:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1204c:	sub	sp, sp, #124	; 0x7c
   12050:	ldr	ip, [pc, #3304]	; 12d40 <close_stdout@@Base+0x1180>
   12054:	mov	sl, r1
   12058:	str	r0, [sp, #40]	; 0x28
   1205c:	mov	r8, r3
   12060:	ldr	r0, [pc, #3292]	; 12d44 <close_stdout@@Base+0x1184>
   12064:	add	ip, pc, ip
   12068:	str	r2, [sp, #32]
   1206c:	ldr	r1, [sp, #164]	; 0xa4
   12070:	mov	r3, ip
   12074:	ldr	r0, [ip, r0]
   12078:	ldr	r2, [sp, #172]	; 0xac
   1207c:	ubfx	r1, r1, #1, #1
   12080:	str	r1, [sp, #36]	; 0x24
   12084:	str	r0, [sp, #56]	; 0x38
   12088:	ldr	r0, [sp, #168]	; 0xa8
   1208c:	ldr	r1, [sp, #176]	; 0xb0
   12090:	str	r2, [sp, #72]	; 0x48
   12094:	str	r0, [sp, #48]	; 0x30
   12098:	ldr	r0, [sp, #56]	; 0x38
   1209c:	str	r1, [sp, #68]	; 0x44
   120a0:	ldr	r3, [r0]
   120a4:	str	r3, [sp, #116]	; 0x74
   120a8:	bl	11050 <__ctype_get_mb_cur_max@plt>
   120ac:	ldr	r2, [sp, #160]	; 0xa0
   120b0:	str	r0, [sp, #64]	; 0x40
   120b4:	cmp	r2, #8
   120b8:	addls	pc, pc, r2, lsl #2
   120bc:	b	12c1c <close_stdout@@Base+0x105c>
   120c0:	b	120e4 <close_stdout@@Base+0x524>
   120c4:	b	12934 <close_stdout@@Base+0xd74>
   120c8:	b	12964 <close_stdout@@Base+0xda4>
   120cc:	b	12814 <close_stdout@@Base+0xc54>
   120d0:	b	12854 <close_stdout@@Base+0xc94>
   120d4:	b	12880 <close_stdout@@Base+0xcc0>
   120d8:	b	128a0 <close_stdout@@Base+0xce0>
   120dc:	b	128a0 <close_stdout@@Base+0xce0>
   120e0:	b	128a0 <close_stdout@@Base+0xce0>
   120e4:	mov	r2, #0
   120e8:	str	r2, [sp, #36]	; 0x24
   120ec:	mov	r9, r2
   120f0:	str	r2, [sp, #24]
   120f4:	str	r2, [sp, #28]
   120f8:	str	r2, [sp, #52]	; 0x34
   120fc:	ldr	r0, [sp, #36]	; 0x24
   12100:	mov	fp, #0
   12104:	ldr	r1, [sp, #24]
   12108:	eor	r2, r0, #1
   1210c:	eor	r3, r1, #1
   12110:	and	r3, r2, r3
   12114:	and	r2, r1, r0
   12118:	str	r3, [sp, #44]	; 0x2c
   1211c:	str	r2, [sp, #76]	; 0x4c
   12120:	cmn	r8, #1
   12124:	beq	124a4 <close_stdout@@Base+0x8e4>
   12128:	subs	r3, fp, r8
   1212c:	movne	r3, #1
   12130:	cmp	r3, #0
   12134:	beq	124bc <close_stdout@@Base+0x8fc>
   12138:	ldr	r3, [sp, #28]
   1213c:	ldr	r0, [sp, #24]
   12140:	adds	r7, r3, #0
   12144:	movne	r7, #1
   12148:	ands	r6, r7, r0
   1214c:	bne	129a8 <close_stdout@@Base+0xde8>
   12150:	ldr	r1, [sp, #32]
   12154:	add	r5, r1, fp
   12158:	ldrb	r4, [r5]
   1215c:	cmp	r4, #126	; 0x7e
   12160:	addls	pc, pc, r4, lsl #2
   12164:	b	12728 <close_stdout@@Base+0xb68>
   12168:	b	12634 <close_stdout@@Base+0xa74>
   1216c:	b	12728 <close_stdout@@Base+0xb68>
   12170:	b	12728 <close_stdout@@Base+0xb68>
   12174:	b	12728 <close_stdout@@Base+0xb68>
   12178:	b	12728 <close_stdout@@Base+0xb68>
   1217c:	b	12728 <close_stdout@@Base+0xb68>
   12180:	b	12728 <close_stdout@@Base+0xb68>
   12184:	b	1261c <close_stdout@@Base+0xa5c>
   12188:	b	12604 <close_stdout@@Base+0xa44>
   1218c:	b	1262c <close_stdout@@Base+0xa6c>
   12190:	b	12624 <close_stdout@@Base+0xa64>
   12194:	b	12614 <close_stdout@@Base+0xa54>
   12198:	b	1260c <close_stdout@@Base+0xa4c>
   1219c:	b	125d0 <close_stdout@@Base+0xa10>
   121a0:	b	12728 <close_stdout@@Base+0xb68>
   121a4:	b	12728 <close_stdout@@Base+0xb68>
   121a8:	b	12728 <close_stdout@@Base+0xb68>
   121ac:	b	12728 <close_stdout@@Base+0xb68>
   121b0:	b	12728 <close_stdout@@Base+0xb68>
   121b4:	b	12728 <close_stdout@@Base+0xb68>
   121b8:	b	12728 <close_stdout@@Base+0xb68>
   121bc:	b	12728 <close_stdout@@Base+0xb68>
   121c0:	b	12728 <close_stdout@@Base+0xb68>
   121c4:	b	12728 <close_stdout@@Base+0xb68>
   121c8:	b	12728 <close_stdout@@Base+0xb68>
   121cc:	b	12728 <close_stdout@@Base+0xb68>
   121d0:	b	12728 <close_stdout@@Base+0xb68>
   121d4:	b	12728 <close_stdout@@Base+0xb68>
   121d8:	b	12728 <close_stdout@@Base+0xb68>
   121dc:	b	12728 <close_stdout@@Base+0xb68>
   121e0:	b	12728 <close_stdout@@Base+0xb68>
   121e4:	b	12728 <close_stdout@@Base+0xb68>
   121e8:	b	1255c <close_stdout@@Base+0x99c>
   121ec:	b	1255c <close_stdout@@Base+0x99c>
   121f0:	b	1255c <close_stdout@@Base+0x99c>
   121f4:	b	12554 <close_stdout@@Base+0x994>
   121f8:	b	1255c <close_stdout@@Base+0x99c>
   121fc:	b	12430 <close_stdout@@Base+0x870>
   12200:	b	1255c <close_stdout@@Base+0x99c>
   12204:	b	126d0 <close_stdout@@Base+0xb10>
   12208:	b	1255c <close_stdout@@Base+0x99c>
   1220c:	b	1255c <close_stdout@@Base+0x99c>
   12210:	b	1255c <close_stdout@@Base+0x99c>
   12214:	b	12430 <close_stdout@@Base+0x870>
   12218:	b	12430 <close_stdout@@Base+0x870>
   1221c:	b	12430 <close_stdout@@Base+0x870>
   12220:	b	12430 <close_stdout@@Base+0x870>
   12224:	b	12430 <close_stdout@@Base+0x870>
   12228:	b	12430 <close_stdout@@Base+0x870>
   1222c:	b	12430 <close_stdout@@Base+0x870>
   12230:	b	12430 <close_stdout@@Base+0x870>
   12234:	b	12430 <close_stdout@@Base+0x870>
   12238:	b	12430 <close_stdout@@Base+0x870>
   1223c:	b	12430 <close_stdout@@Base+0x870>
   12240:	b	12430 <close_stdout@@Base+0x870>
   12244:	b	12430 <close_stdout@@Base+0x870>
   12248:	b	12430 <close_stdout@@Base+0x870>
   1224c:	b	12430 <close_stdout@@Base+0x870>
   12250:	b	12430 <close_stdout@@Base+0x870>
   12254:	b	1255c <close_stdout@@Base+0x99c>
   12258:	b	1255c <close_stdout@@Base+0x99c>
   1225c:	b	1255c <close_stdout@@Base+0x99c>
   12260:	b	1255c <close_stdout@@Base+0x99c>
   12264:	b	12364 <close_stdout@@Base+0x7a4>
   12268:	b	12728 <close_stdout@@Base+0xb68>
   1226c:	b	12430 <close_stdout@@Base+0x870>
   12270:	b	12430 <close_stdout@@Base+0x870>
   12274:	b	12430 <close_stdout@@Base+0x870>
   12278:	b	12430 <close_stdout@@Base+0x870>
   1227c:	b	12430 <close_stdout@@Base+0x870>
   12280:	b	12430 <close_stdout@@Base+0x870>
   12284:	b	12430 <close_stdout@@Base+0x870>
   12288:	b	12430 <close_stdout@@Base+0x870>
   1228c:	b	12430 <close_stdout@@Base+0x870>
   12290:	b	12430 <close_stdout@@Base+0x870>
   12294:	b	12430 <close_stdout@@Base+0x870>
   12298:	b	12430 <close_stdout@@Base+0x870>
   1229c:	b	12430 <close_stdout@@Base+0x870>
   122a0:	b	12430 <close_stdout@@Base+0x870>
   122a4:	b	12430 <close_stdout@@Base+0x870>
   122a8:	b	12430 <close_stdout@@Base+0x870>
   122ac:	b	12430 <close_stdout@@Base+0x870>
   122b0:	b	12430 <close_stdout@@Base+0x870>
   122b4:	b	12430 <close_stdout@@Base+0x870>
   122b8:	b	12430 <close_stdout@@Base+0x870>
   122bc:	b	12430 <close_stdout@@Base+0x870>
   122c0:	b	12430 <close_stdout@@Base+0x870>
   122c4:	b	12430 <close_stdout@@Base+0x870>
   122c8:	b	12430 <close_stdout@@Base+0x870>
   122cc:	b	12430 <close_stdout@@Base+0x870>
   122d0:	b	12430 <close_stdout@@Base+0x870>
   122d4:	b	1255c <close_stdout@@Base+0x99c>
   122d8:	b	126b4 <close_stdout@@Base+0xaf4>
   122dc:	b	12430 <close_stdout@@Base+0x870>
   122e0:	b	1255c <close_stdout@@Base+0x99c>
   122e4:	b	12430 <close_stdout@@Base+0x870>
   122e8:	b	1255c <close_stdout@@Base+0x99c>
   122ec:	b	12430 <close_stdout@@Base+0x870>
   122f0:	b	12430 <close_stdout@@Base+0x870>
   122f4:	b	12430 <close_stdout@@Base+0x870>
   122f8:	b	12430 <close_stdout@@Base+0x870>
   122fc:	b	12430 <close_stdout@@Base+0x870>
   12300:	b	12430 <close_stdout@@Base+0x870>
   12304:	b	12430 <close_stdout@@Base+0x870>
   12308:	b	12430 <close_stdout@@Base+0x870>
   1230c:	b	12430 <close_stdout@@Base+0x870>
   12310:	b	12430 <close_stdout@@Base+0x870>
   12314:	b	12430 <close_stdout@@Base+0x870>
   12318:	b	12430 <close_stdout@@Base+0x870>
   1231c:	b	12430 <close_stdout@@Base+0x870>
   12320:	b	12430 <close_stdout@@Base+0x870>
   12324:	b	12430 <close_stdout@@Base+0x870>
   12328:	b	12430 <close_stdout@@Base+0x870>
   1232c:	b	12430 <close_stdout@@Base+0x870>
   12330:	b	12430 <close_stdout@@Base+0x870>
   12334:	b	12430 <close_stdout@@Base+0x870>
   12338:	b	12430 <close_stdout@@Base+0x870>
   1233c:	b	12430 <close_stdout@@Base+0x870>
   12340:	b	12430 <close_stdout@@Base+0x870>
   12344:	b	12430 <close_stdout@@Base+0x870>
   12348:	b	12430 <close_stdout@@Base+0x870>
   1234c:	b	12430 <close_stdout@@Base+0x870>
   12350:	b	12430 <close_stdout@@Base+0x870>
   12354:	b	1253c <close_stdout@@Base+0x97c>
   12358:	b	1255c <close_stdout@@Base+0x99c>
   1235c:	b	1253c <close_stdout@@Base+0x97c>
   12360:	b	12554 <close_stdout@@Base+0x994>
   12364:	ldr	r3, [sp, #160]	; 0xa0
   12368:	cmp	r3, #2
   1236c:	beq	12bf8 <close_stdout@@Base+0x1038>
   12370:	cmp	r3, #3
   12374:	bne	12430 <close_stdout@@Base+0x870>
   12378:	ldr	r1, [sp, #164]	; 0xa4
   1237c:	tst	r1, #4
   12380:	beq	12430 <close_stdout@@Base+0x870>
   12384:	add	r3, fp, #2
   12388:	cmp	r8, r3
   1238c:	bls	12430 <close_stdout@@Base+0x870>
   12390:	ldrb	r2, [r5, #1]
   12394:	mov	r1, #1
   12398:	cmp	r2, #63	; 0x3f
   1239c:	bne	12430 <close_stdout@@Base+0x870>
   123a0:	ldr	r0, [sp, #32]
   123a4:	ldrb	ip, [r0, r3]
   123a8:	sub	r0, ip, #33	; 0x21
   123ac:	uxtb	r0, r0
   123b0:	cmp	r0, #29
   123b4:	bhi	12430 <close_stdout@@Base+0x870>
   123b8:	lsl	r1, r1, r0
   123bc:	movw	r0, #20929	; 0x51c1
   123c0:	movt	r0, #14336	; 0x3800
   123c4:	and	r0, r1, r0
   123c8:	cmp	r0, #0
   123cc:	beq	12430 <close_stdout@@Base+0x870>
   123d0:	ldr	r1, [sp, #36]	; 0x24
   123d4:	cmp	r1, #0
   123d8:	bne	12578 <close_stdout@@Base+0x9b8>
   123dc:	cmp	r9, sl
   123e0:	mov	r4, ip
   123e4:	mov	fp, r3
   123e8:	ldrcc	r0, [sp, #40]	; 0x28
   123ec:	strbcc	r2, [r0, r9]
   123f0:	add	r2, r9, #1
   123f4:	cmp	sl, r2
   123f8:	ldrhi	r0, [sp, #40]	; 0x28
   123fc:	movhi	r1, #34	; 0x22
   12400:	strbhi	r1, [r0, r2]
   12404:	add	r2, r9, #2
   12408:	cmp	sl, r2
   1240c:	ldrhi	r0, [sp, #40]	; 0x28
   12410:	movhi	r1, #34	; 0x22
   12414:	strbhi	r1, [r0, r2]
   12418:	add	r2, r9, #3
   1241c:	cmp	sl, r2
   12420:	add	r9, r9, #4
   12424:	ldrhi	r0, [sp, #40]	; 0x28
   12428:	movhi	r1, #63	; 0x3f
   1242c:	strbhi	r1, [r0, r2]
   12430:	ldr	r0, [sp, #44]	; 0x2c
   12434:	cmp	r0, #0
   12438:	bne	12460 <close_stdout@@Base+0x8a0>
   1243c:	ldr	r1, [sp, #48]	; 0x30
   12440:	cmp	r1, #0
   12444:	beq	12460 <close_stdout@@Base+0x8a0>
   12448:	ubfx	r2, r4, #5, #8
   1244c:	and	r3, r4, #31
   12450:	ldr	r2, [r1, r2, lsl #2]
   12454:	lsr	r3, r2, r3
   12458:	tst	r3, #1
   1245c:	bne	12468 <close_stdout@@Base+0x8a8>
   12460:	cmp	r6, #0
   12464:	beq	12488 <close_stdout@@Base+0x8c8>
   12468:	ldr	r2, [sp, #36]	; 0x24
   1246c:	cmp	r2, #0
   12470:	bne	12578 <close_stdout@@Base+0x9b8>
   12474:	cmp	r9, sl
   12478:	ldrcc	r0, [sp, #40]	; 0x28
   1247c:	movcc	r3, #92	; 0x5c
   12480:	strbcc	r3, [r0, r9]
   12484:	add	r9, r9, #1
   12488:	add	fp, fp, #1
   1248c:	cmp	r9, sl
   12490:	ldrcc	r1, [sp, #40]	; 0x28
   12494:	strbcc	r4, [r1, r9]
   12498:	cmn	r8, #1
   1249c:	add	r9, r9, #1
   124a0:	bne	12128 <close_stdout@@Base+0x568>
   124a4:	ldr	r2, [sp, #32]
   124a8:	ldrb	r3, [r2, fp]
   124ac:	adds	r3, r3, #0
   124b0:	movne	r3, #1
   124b4:	cmp	r3, #0
   124b8:	bne	12138 <close_stdout@@Base+0x578>
   124bc:	ldr	r3, [sp, #160]	; 0xa0
   124c0:	cmp	r9, #0
   124c4:	cmpeq	r3, #2
   124c8:	bne	124d8 <close_stdout@@Base+0x918>
   124cc:	ldr	r0, [sp, #36]	; 0x24
   124d0:	cmp	r0, #0
   124d4:	bne	12578 <close_stdout@@Base+0x9b8>
   124d8:	ldr	r1, [sp, #36]	; 0x24
   124dc:	ldr	r2, [sp, #52]	; 0x34
   124e0:	eor	r3, r1, #1
   124e4:	cmp	r2, #0
   124e8:	moveq	r3, #0
   124ec:	andne	r3, r3, #1
   124f0:	cmp	r3, #0
   124f4:	beq	12520 <close_stdout@@Base+0x960>
   124f8:	ldrb	r3, [r2]
   124fc:	cmp	r3, #0
   12500:	beq	12520 <close_stdout@@Base+0x960>
   12504:	ldr	r1, [sp, #40]	; 0x28
   12508:	cmp	sl, r9
   1250c:	strbhi	r3, [r1, r9]
   12510:	ldrb	r3, [r2, #1]!
   12514:	add	r9, r9, #1
   12518:	cmp	r3, #0
   1251c:	bne	12508 <close_stdout@@Base+0x948>
   12520:	cmp	r9, sl
   12524:	movcs	r0, r9
   12528:	ldrcc	r1, [sp, #40]	; 0x28
   1252c:	movcc	r3, #0
   12530:	movcc	r0, r9
   12534:	strbcc	r3, [r1, r9]
   12538:	b	125b4 <close_stdout@@Base+0x9f4>
   1253c:	cmn	r8, #1
   12540:	beq	12c08 <close_stdout@@Base+0x1048>
   12544:	subs	r3, r8, #1
   12548:	movne	r3, #1
   1254c:	cmp	r3, #0
   12550:	bne	12430 <close_stdout@@Base+0x870>
   12554:	cmp	fp, #0
   12558:	bne	12430 <close_stdout@@Base+0x870>
   1255c:	ldr	r3, [sp, #36]	; 0x24
   12560:	ldr	r0, [sp, #160]	; 0xa0
   12564:	cmp	r0, #2
   12568:	movne	r3, #0
   1256c:	andeq	r3, r3, #1
   12570:	cmp	r3, #0
   12574:	beq	12430 <close_stdout@@Base+0x870>
   12578:	ldr	r2, [sp, #164]	; 0xa4
   1257c:	mov	ip, #0
   12580:	ldr	r0, [sp, #160]	; 0xa0
   12584:	bic	r3, r2, #2
   12588:	ldr	r1, [sp, #72]	; 0x48
   1258c:	ldr	r2, [sp, #68]	; 0x44
   12590:	stm	sp, {r0, r3}
   12594:	mov	r3, r8
   12598:	str	r1, [sp, #12]
   1259c:	mov	r1, sl
   125a0:	str	r2, [sp, #16]
   125a4:	ldr	r0, [sp, #40]	; 0x28
   125a8:	ldr	r2, [sp, #32]
   125ac:	str	ip, [sp, #8]
   125b0:	bl	12048 <close_stdout@@Base+0x488>
   125b4:	ldr	r1, [sp, #56]	; 0x38
   125b8:	ldr	r2, [sp, #116]	; 0x74
   125bc:	ldr	r3, [r1]
   125c0:	cmp	r2, r3
   125c4:	bne	12cf8 <close_stdout@@Base+0x1138>
   125c8:	add	sp, sp, #124	; 0x7c
   125cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125d0:	mov	r3, #114	; 0x72
   125d4:	ldr	r2, [sp, #36]	; 0x24
   125d8:	ldr	r0, [sp, #160]	; 0xa0
   125dc:	cmp	r0, #2
   125e0:	movne	r2, #0
   125e4:	andeq	r2, r2, #1
   125e8:	cmp	r2, #0
   125ec:	bne	12578 <close_stdout@@Base+0x9b8>
   125f0:	ldr	r1, [sp, #24]
   125f4:	cmp	r1, #0
   125f8:	beq	12430 <close_stdout@@Base+0x870>
   125fc:	mov	r4, r3
   12600:	b	12468 <close_stdout@@Base+0x8a8>
   12604:	mov	r3, #98	; 0x62
   12608:	b	125f0 <close_stdout@@Base+0xa30>
   1260c:	mov	r3, #102	; 0x66
   12610:	b	125f0 <close_stdout@@Base+0xa30>
   12614:	mov	r3, #118	; 0x76
   12618:	b	125f0 <close_stdout@@Base+0xa30>
   1261c:	mov	r3, #97	; 0x61
   12620:	b	125f0 <close_stdout@@Base+0xa30>
   12624:	mov	r3, #110	; 0x6e
   12628:	b	125d4 <close_stdout@@Base+0xa14>
   1262c:	mov	r3, #116	; 0x74
   12630:	b	125d4 <close_stdout@@Base+0xa14>
   12634:	ldr	r2, [sp, #24]
   12638:	cmp	r2, #0
   1263c:	beq	12be4 <close_stdout@@Base+0x1024>
   12640:	ldr	r3, [sp, #36]	; 0x24
   12644:	cmp	r3, #0
   12648:	bne	12578 <close_stdout@@Base+0x9b8>
   1264c:	cmp	r9, sl
   12650:	add	r2, r9, #1
   12654:	ldrcc	r0, [sp, #40]	; 0x28
   12658:	movcc	r3, #92	; 0x5c
   1265c:	strbcc	r3, [r0, r9]
   12660:	add	r3, fp, #1
   12664:	cmp	r8, r3
   12668:	bls	126a8 <close_stdout@@Base+0xae8>
   1266c:	ldr	r1, [sp, #32]
   12670:	ldrb	r3, [r1, r3]
   12674:	sub	r3, r3, #48	; 0x30
   12678:	cmp	r3, #9
   1267c:	bhi	126a8 <close_stdout@@Base+0xae8>
   12680:	cmp	sl, r2
   12684:	ldrhi	r0, [sp, #40]	; 0x28
   12688:	movhi	r3, #48	; 0x30
   1268c:	strbhi	r3, [r0, r2]
   12690:	add	r3, r9, #2
   12694:	cmp	sl, r3
   12698:	ldrhi	r1, [sp, #40]	; 0x28
   1269c:	movhi	r2, #48	; 0x30
   126a0:	strbhi	r2, [r1, r3]
   126a4:	add	r2, r9, #3
   126a8:	mov	r9, r2
   126ac:	mov	r4, #48	; 0x30
   126b0:	b	1243c <close_stdout@@Base+0x87c>
   126b4:	ldr	r1, [sp, #76]	; 0x4c
   126b8:	cmp	r1, #0
   126bc:	beq	126c8 <close_stdout@@Base+0xb08>
   126c0:	cmp	r7, #0
   126c4:	bne	12488 <close_stdout@@Base+0x8c8>
   126c8:	mov	r3, r4
   126cc:	b	125d4 <close_stdout@@Base+0xa14>
   126d0:	ldr	r1, [sp, #160]	; 0xa0
   126d4:	cmp	r1, #2
   126d8:	bne	12430 <close_stdout@@Base+0x870>
   126dc:	ldr	r2, [sp, #36]	; 0x24
   126e0:	cmp	r2, #0
   126e4:	bne	12578 <close_stdout@@Base+0x9b8>
   126e8:	cmp	r9, sl
   126ec:	ldrcc	r0, [sp, #40]	; 0x28
   126f0:	movcc	r3, #39	; 0x27
   126f4:	strbcc	r3, [r0, r9]
   126f8:	add	r3, r9, #1
   126fc:	cmp	sl, r3
   12700:	ldrhi	r1, [sp, #40]	; 0x28
   12704:	movhi	r2, #92	; 0x5c
   12708:	strbhi	r2, [r1, r3]
   1270c:	add	r3, r9, #2
   12710:	cmp	sl, r3
   12714:	add	r9, r9, #3
   12718:	ldrhi	r0, [sp, #40]	; 0x28
   1271c:	movhi	r2, #39	; 0x27
   12720:	strbhi	r2, [r0, r3]
   12724:	b	12430 <close_stdout@@Base+0x870>
   12728:	ldr	r1, [sp, #64]	; 0x40
   1272c:	cmp	r1, #1
   12730:	bne	12a28 <close_stdout@@Base+0xe68>
   12734:	bl	110e0 <__ctype_b_loc@plt>
   12738:	ldr	r2, [sp, #64]	; 0x40
   1273c:	sxth	r3, r4
   12740:	str	r2, [sp, #60]	; 0x3c
   12744:	lsl	r3, r3, #1
   12748:	ldr	r2, [r0]
   1274c:	ldrh	r2, [r2, r3]
   12750:	eor	r2, r2, #16384	; 0x4000
   12754:	ubfx	r2, r2, #14, #1
   12758:	ldr	r1, [sp, #24]
   1275c:	ands	r2, r2, r1
   12760:	beq	12430 <close_stdout@@Base+0x870>
   12764:	ldr	r3, [sp, #60]	; 0x3c
   12768:	mov	r0, #92	; 0x5c
   1276c:	ldr	r7, [sp, #36]	; 0x24
   12770:	add	r1, r3, fp
   12774:	str	r8, [sp, #60]	; 0x3c
   12778:	ldr	r3, [sp, #40]	; 0x28
   1277c:	b	127e0 <close_stdout@@Base+0xc20>
   12780:	cmp	r7, #0
   12784:	bne	12c20 <close_stdout@@Base+0x1060>
   12788:	add	ip, r9, #1
   1278c:	cmp	r9, sl
   12790:	strbcc	r0, [r3, r9]
   12794:	cmp	sl, ip
   12798:	lsrhi	r8, r4, #6
   1279c:	addhi	r8, r8, #48	; 0x30
   127a0:	strbhi	r8, [r3, ip]
   127a4:	add	ip, r9, #2
   127a8:	add	r9, r9, #3
   127ac:	cmp	sl, ip
   127b0:	ubfxhi	r8, r4, #3, #3
   127b4:	and	r4, r4, #7
   127b8:	add	r4, r4, #48	; 0x30
   127bc:	addhi	r8, r8, #48	; 0x30
   127c0:	strbhi	r8, [r3, ip]
   127c4:	add	fp, fp, #1
   127c8:	cmp	r1, fp
   127cc:	bls	1280c <close_stdout@@Base+0xc4c>
   127d0:	cmp	r9, sl
   127d4:	strbcc	r4, [r3, r9]
   127d8:	ldrb	r4, [r5, #1]!
   127dc:	add	r9, r9, #1
   127e0:	cmp	r2, #0
   127e4:	bne	12780 <close_stdout@@Base+0xbc0>
   127e8:	cmp	r6, #0
   127ec:	beq	127c4 <close_stdout@@Base+0xc04>
   127f0:	add	fp, fp, #1
   127f4:	cmp	r9, sl
   127f8:	strbcc	r0, [r3, r9]
   127fc:	cmp	r1, fp
   12800:	add	r9, r9, #1
   12804:	mov	r6, #0
   12808:	bhi	127d0 <close_stdout@@Base+0xc10>
   1280c:	ldr	r8, [sp, #60]	; 0x3c
   12810:	b	1248c <close_stdout@@Base+0x8cc>
   12814:	ldr	r3, [sp, #36]	; 0x24
   12818:	cmp	r3, #0
   1281c:	bne	12d20 <close_stdout@@Base+0x1160>
   12820:	cmp	sl, #0
   12824:	beq	12c38 <close_stdout@@Base+0x1078>
   12828:	ldr	r1, [sp, #40]	; 0x28
   1282c:	mov	r0, #1
   12830:	ldr	r2, [pc, #1296]	; 12d48 <close_stdout@@Base+0x1188>
   12834:	mov	r3, #34	; 0x22
   12838:	str	r0, [sp, #24]
   1283c:	mov	r9, r0
   12840:	add	r2, pc, r2
   12844:	str	r0, [sp, #28]
   12848:	strb	r3, [r1]
   1284c:	str	r2, [sp, #52]	; 0x34
   12850:	b	120fc <close_stdout@@Base+0x53c>
   12854:	ldr	r3, [pc, #1264]	; 12d4c <close_stdout@@Base+0x118c>
   12858:	mov	r2, #1
   1285c:	mov	r0, #3
   12860:	str	r2, [sp, #36]	; 0x24
   12864:	add	r3, pc, r3
   12868:	str	r2, [sp, #24]
   1286c:	str	r3, [sp, #52]	; 0x34
   12870:	mov	r9, #0
   12874:	str	r2, [sp, #28]
   12878:	str	r0, [sp, #160]	; 0xa0
   1287c:	b	120fc <close_stdout@@Base+0x53c>
   12880:	mov	r0, #0
   12884:	mov	r1, #1
   12888:	str	r0, [sp, #36]	; 0x24
   1288c:	mov	r9, r0
   12890:	str	r1, [sp, #24]
   12894:	str	r0, [sp, #28]
   12898:	str	r0, [sp, #52]	; 0x34
   1289c:	b	120fc <close_stdout@@Base+0x53c>
   128a0:	ldr	r3, [sp, #160]	; 0xa0
   128a4:	cmp	r3, #8
   128a8:	beq	128d4 <close_stdout@@Base+0xd14>
   128ac:	ldr	r0, [pc, #1180]	; 12d50 <close_stdout@@Base+0x1190>
   128b0:	mov	r1, r3
   128b4:	add	r0, pc, r0
   128b8:	bl	11ee4 <close_stdout@@Base+0x324>
   128bc:	ldr	r1, [sp, #160]	; 0xa0
   128c0:	str	r0, [sp, #72]	; 0x48
   128c4:	ldr	r0, [pc, #1160]	; 12d54 <close_stdout@@Base+0x1194>
   128c8:	add	r0, pc, r0
   128cc:	bl	11ee4 <close_stdout@@Base+0x324>
   128d0:	str	r0, [sp, #68]	; 0x44
   128d4:	ldr	r0, [sp, #36]	; 0x24
   128d8:	cmp	r0, #0
   128dc:	movne	r9, #0
   128e0:	bne	12918 <close_stdout@@Base+0xd58>
   128e4:	ldr	r1, [sp, #72]	; 0x48
   128e8:	ldrb	r3, [r1]
   128ec:	cmp	r3, #0
   128f0:	beq	12cf0 <close_stdout@@Base+0x1130>
   128f4:	mov	r2, r1
   128f8:	ldr	r1, [sp, #40]	; 0x28
   128fc:	mov	r9, r0
   12900:	cmp	r9, sl
   12904:	strbcc	r3, [r1, r9]
   12908:	ldrb	r3, [r2, #1]!
   1290c:	add	r9, r9, #1
   12910:	cmp	r3, #0
   12914:	bne	12900 <close_stdout@@Base+0xd40>
   12918:	ldr	r0, [sp, #68]	; 0x44
   1291c:	str	r0, [sp, #52]	; 0x34
   12920:	bl	110f8 <strlen@plt>
   12924:	mov	r2, #1
   12928:	str	r2, [sp, #24]
   1292c:	str	r0, [sp, #28]
   12930:	b	120fc <close_stdout@@Base+0x53c>
   12934:	ldr	r3, [pc, #1052]	; 12d58 <close_stdout@@Base+0x1198>
   12938:	mov	r2, #0
   1293c:	mov	r1, #1
   12940:	mov	r0, #2
   12944:	add	r3, pc, r3
   12948:	str	r1, [sp, #36]	; 0x24
   1294c:	str	r2, [sp, #24]
   12950:	mov	r9, r2
   12954:	str	r1, [sp, #28]
   12958:	str	r3, [sp, #52]	; 0x34
   1295c:	str	r0, [sp, #160]	; 0xa0
   12960:	b	120fc <close_stdout@@Base+0x53c>
   12964:	ldr	r3, [sp, #36]	; 0x24
   12968:	cmp	r3, #0
   1296c:	bne	12cfc <close_stdout@@Base+0x113c>
   12970:	cmp	sl, #0
   12974:	beq	12c58 <close_stdout@@Base+0x1098>
   12978:	ldr	r1, [sp, #40]	; 0x28
   1297c:	mov	r3, #39	; 0x27
   12980:	ldr	r2, [sp, #36]	; 0x24
   12984:	mov	r0, #1
   12988:	mov	r9, r0
   1298c:	str	r0, [sp, #28]
   12990:	strb	r3, [r1]
   12994:	ldr	r3, [pc, #960]	; 12d5c <close_stdout@@Base+0x119c>
   12998:	str	r2, [sp, #24]
   1299c:	add	r3, pc, r3
   129a0:	str	r3, [sp, #52]	; 0x34
   129a4:	b	120fc <close_stdout@@Base+0x53c>
   129a8:	ldr	r2, [sp, #28]
   129ac:	cmp	r2, #1
   129b0:	add	r4, fp, r2
   129b4:	movls	r3, #0
   129b8:	movhi	r3, #1
   129bc:	cmn	r8, #1
   129c0:	movne	r3, #0
   129c4:	cmp	r3, #0
   129c8:	beq	129d8 <close_stdout@@Base+0xe18>
   129cc:	ldr	r0, [sp, #32]
   129d0:	bl	110f8 <strlen@plt>
   129d4:	mov	r8, r0
   129d8:	cmp	r8, r4
   129dc:	ldrcc	r3, [sp, #32]
   129e0:	movcc	r6, #0
   129e4:	addcc	r5, r3, fp
   129e8:	bcc	12158 <close_stdout@@Base+0x598>
   129ec:	ldr	r0, [sp, #32]
   129f0:	ldr	r1, [sp, #52]	; 0x34
   129f4:	add	r5, r0, fp
   129f8:	ldr	r2, [sp, #28]
   129fc:	mov	r0, r5
   12a00:	bl	10ff0 <memcmp@plt>
   12a04:	cmp	r0, #0
   12a08:	bne	12a20 <close_stdout@@Base+0xe60>
   12a0c:	ldr	r1, [sp, #36]	; 0x24
   12a10:	cmp	r1, #0
   12a14:	bne	12578 <close_stdout@@Base+0x9b8>
   12a18:	mov	r6, #1
   12a1c:	b	12158 <close_stdout@@Base+0x598>
   12a20:	mov	r6, #0
   12a24:	b	12158 <close_stdout@@Base+0x598>
   12a28:	add	r7, sp, #108	; 0x6c
   12a2c:	cmn	r8, #1
   12a30:	mov	r3, #0
   12a34:	str	r3, [sp, #108]	; 0x6c
   12a38:	str	r3, [r7, #4]
   12a3c:	beq	12c28 <close_stdout@@Base+0x1068>
   12a40:	mov	r1, #0
   12a44:	ldr	r0, [sp, #32]
   12a48:	mov	ip, #1
   12a4c:	str	r9, [sp, #88]	; 0x58
   12a50:	str	r6, [sp, #96]	; 0x60
   12a54:	mov	r9, r1
   12a58:	str	r5, [sp, #100]	; 0x64
   12a5c:	mov	r6, ip
   12a60:	mov	r5, r7
   12a64:	add	r3, sp, #104	; 0x68
   12a68:	sub	r0, r0, #1
   12a6c:	str	r3, [sp, #80]	; 0x50
   12a70:	str	r0, [sp, #84]	; 0x54
   12a74:	str	r1, [sp, #60]	; 0x3c
   12a78:	str	r4, [sp, #92]	; 0x5c
   12a7c:	ldr	r2, [sp, #32]
   12a80:	add	r7, r9, fp
   12a84:	add	r0, sp, #104	; 0x68
   12a88:	mov	r3, r5
   12a8c:	add	r4, r2, r7
   12a90:	rsb	r2, r7, r8
   12a94:	mov	r1, r4
   12a98:	bl	11074 <mbrtowc@plt>
   12a9c:	subs	r2, r0, #0
   12aa0:	beq	12bac <close_stdout@@Base+0xfec>
   12aa4:	cmn	r2, #1
   12aa8:	beq	12cd4 <close_stdout@@Base+0x1114>
   12aac:	cmn	r2, #2
   12ab0:	beq	12c78 <close_stdout@@Base+0x10b8>
   12ab4:	ldr	r3, [sp, #36]	; 0x24
   12ab8:	ldr	r0, [sp, #160]	; 0xa0
   12abc:	cmp	r0, #2
   12ac0:	movne	r3, #0
   12ac4:	andeq	r3, r3, #1
   12ac8:	cmp	r3, #0
   12acc:	beq	12b88 <close_stdout@@Base+0xfc8>
   12ad0:	cmp	r2, #1
   12ad4:	beq	12b88 <close_stdout@@Base+0xfc8>
   12ad8:	ldr	r1, [sp, #84]	; 0x54
   12adc:	add	r3, r1, r2
   12ae0:	add	r7, r3, r7
   12ae4:	ldrb	r3, [r4, #1]!
   12ae8:	sub	r3, r3, #91	; 0x5b
   12aec:	cmp	r3, #33	; 0x21
   12af0:	addls	pc, pc, r3, lsl #2
   12af4:	b	12b80 <close_stdout@@Base+0xfc0>
   12af8:	b	12578 <close_stdout@@Base+0x9b8>
   12afc:	b	12578 <close_stdout@@Base+0x9b8>
   12b00:	b	12b80 <close_stdout@@Base+0xfc0>
   12b04:	b	12578 <close_stdout@@Base+0x9b8>
   12b08:	b	12b80 <close_stdout@@Base+0xfc0>
   12b0c:	b	12578 <close_stdout@@Base+0x9b8>
   12b10:	b	12b80 <close_stdout@@Base+0xfc0>
   12b14:	b	12b80 <close_stdout@@Base+0xfc0>
   12b18:	b	12b80 <close_stdout@@Base+0xfc0>
   12b1c:	b	12b80 <close_stdout@@Base+0xfc0>
   12b20:	b	12b80 <close_stdout@@Base+0xfc0>
   12b24:	b	12b80 <close_stdout@@Base+0xfc0>
   12b28:	b	12b80 <close_stdout@@Base+0xfc0>
   12b2c:	b	12b80 <close_stdout@@Base+0xfc0>
   12b30:	b	12b80 <close_stdout@@Base+0xfc0>
   12b34:	b	12b80 <close_stdout@@Base+0xfc0>
   12b38:	b	12b80 <close_stdout@@Base+0xfc0>
   12b3c:	b	12b80 <close_stdout@@Base+0xfc0>
   12b40:	b	12b80 <close_stdout@@Base+0xfc0>
   12b44:	b	12b80 <close_stdout@@Base+0xfc0>
   12b48:	b	12b80 <close_stdout@@Base+0xfc0>
   12b4c:	b	12b80 <close_stdout@@Base+0xfc0>
   12b50:	b	12b80 <close_stdout@@Base+0xfc0>
   12b54:	b	12b80 <close_stdout@@Base+0xfc0>
   12b58:	b	12b80 <close_stdout@@Base+0xfc0>
   12b5c:	b	12b80 <close_stdout@@Base+0xfc0>
   12b60:	b	12b80 <close_stdout@@Base+0xfc0>
   12b64:	b	12b80 <close_stdout@@Base+0xfc0>
   12b68:	b	12b80 <close_stdout@@Base+0xfc0>
   12b6c:	b	12b80 <close_stdout@@Base+0xfc0>
   12b70:	b	12b80 <close_stdout@@Base+0xfc0>
   12b74:	b	12b80 <close_stdout@@Base+0xfc0>
   12b78:	b	12b80 <close_stdout@@Base+0xfc0>
   12b7c:	b	12578 <close_stdout@@Base+0x9b8>
   12b80:	cmp	r4, r7
   12b84:	bne	12ae4 <close_stdout@@Base+0xf24>
   12b88:	ldr	r0, [sp, #104]	; 0x68
   12b8c:	add	r9, r9, r2
   12b90:	bl	1102c <iswprint@plt>
   12b94:	cmp	r0, #0
   12b98:	mov	r0, r5
   12b9c:	moveq	r6, #0
   12ba0:	bl	10fcc <mbsinit@plt>
   12ba4:	cmp	r0, #0
   12ba8:	beq	12a7c <close_stdout@@Base+0xebc>
   12bac:	mov	ip, r6
   12bb0:	eor	r2, ip, #1
   12bb4:	str	r9, [sp, #60]	; 0x3c
   12bb8:	ldr	r4, [sp, #92]	; 0x5c
   12bbc:	uxtb	r2, r2
   12bc0:	ldr	r9, [sp, #88]	; 0x58
   12bc4:	ldr	r6, [sp, #96]	; 0x60
   12bc8:	ldr	r5, [sp, #100]	; 0x64
   12bcc:	ldr	r3, [sp, #60]	; 0x3c
   12bd0:	cmp	r3, #1
   12bd4:	bls	12758 <close_stdout@@Base+0xb98>
   12bd8:	ldr	r0, [sp, #24]
   12bdc:	and	r2, r2, r0
   12be0:	b	12764 <close_stdout@@Base+0xba4>
   12be4:	ldr	r2, [sp, #164]	; 0xa4
   12be8:	tst	r2, #1
   12bec:	addne	fp, fp, #1
   12bf0:	bne	12120 <close_stdout@@Base+0x560>
   12bf4:	b	12430 <close_stdout@@Base+0x870>
   12bf8:	ldr	r0, [sp, #36]	; 0x24
   12bfc:	cmp	r0, #0
   12c00:	beq	12430 <close_stdout@@Base+0x870>
   12c04:	b	12578 <close_stdout@@Base+0x9b8>
   12c08:	ldr	r2, [sp, #32]
   12c0c:	ldrb	r3, [r2, #1]
   12c10:	adds	r3, r3, #0
   12c14:	movne	r3, #1
   12c18:	b	1254c <close_stdout@@Base+0x98c>
   12c1c:	bl	111f4 <abort@plt>
   12c20:	ldr	r8, [sp, #60]	; 0x3c
   12c24:	b	12578 <close_stdout@@Base+0x9b8>
   12c28:	ldr	r0, [sp, #32]
   12c2c:	bl	110f8 <strlen@plt>
   12c30:	mov	r8, r0
   12c34:	b	12a40 <close_stdout@@Base+0xe80>
   12c38:	ldr	r2, [pc, #288]	; 12d60 <close_stdout@@Base+0x11a0>
   12c3c:	mov	r1, #1
   12c40:	mov	r9, r1
   12c44:	str	r1, [sp, #24]
   12c48:	add	r2, pc, r2
   12c4c:	str	r1, [sp, #28]
   12c50:	str	r2, [sp, #52]	; 0x34
   12c54:	b	120fc <close_stdout@@Base+0x53c>
   12c58:	ldr	r2, [pc, #260]	; 12d64 <close_stdout@@Base+0x11a4>
   12c5c:	mov	r3, #1
   12c60:	mov	r9, r3
   12c64:	str	r3, [sp, #28]
   12c68:	add	r2, pc, r2
   12c6c:	str	sl, [sp, #24]
   12c70:	str	r2, [sp, #52]	; 0x34
   12c74:	b	120fc <close_stdout@@Base+0x53c>
   12c78:	cmp	r8, r7
   12c7c:	str	r9, [sp, #60]	; 0x3c
   12c80:	mov	ip, r4
   12c84:	ldr	r6, [sp, #96]	; 0x60
   12c88:	ldr	r9, [sp, #88]	; 0x58
   12c8c:	ldr	r4, [sp, #92]	; 0x5c
   12c90:	ldr	r5, [sp, #100]	; 0x64
   12c94:	bls	12ccc <close_stdout@@Base+0x110c>
   12c98:	ldrb	r3, [ip]
   12c9c:	cmp	r3, #0
   12ca0:	beq	12ccc <close_stdout@@Base+0x110c>
   12ca4:	ldr	r3, [sp, #60]	; 0x3c
   12ca8:	b	12cb8 <close_stdout@@Base+0x10f8>
   12cac:	ldrb	r2, [r5, r3]
   12cb0:	cmp	r2, #0
   12cb4:	beq	12cc8 <close_stdout@@Base+0x1108>
   12cb8:	add	r3, r3, #1
   12cbc:	add	r2, fp, r3
   12cc0:	cmp	r8, r2
   12cc4:	bhi	12cac <close_stdout@@Base+0x10ec>
   12cc8:	str	r3, [sp, #60]	; 0x3c
   12ccc:	mov	r2, #1
   12cd0:	b	12bcc <close_stdout@@Base+0x100c>
   12cd4:	str	r9, [sp, #60]	; 0x3c
   12cd8:	mov	r2, #1
   12cdc:	ldr	r4, [sp, #92]	; 0x5c
   12ce0:	ldr	r6, [sp, #96]	; 0x60
   12ce4:	ldr	r9, [sp, #88]	; 0x58
   12ce8:	ldr	r5, [sp, #100]	; 0x64
   12cec:	b	12bcc <close_stdout@@Base+0x100c>
   12cf0:	ldr	r9, [sp, #36]	; 0x24
   12cf4:	b	12918 <close_stdout@@Base+0xd58>
   12cf8:	bl	11008 <__stack_chk_fail@plt>
   12cfc:	ldr	r1, [pc, #100]	; 12d68 <close_stdout@@Base+0x11a8>
   12d00:	mov	r3, #0
   12d04:	mov	r0, #1
   12d08:	str	r3, [sp, #24]
   12d0c:	add	r1, pc, r1
   12d10:	str	r0, [sp, #28]
   12d14:	mov	r9, r3
   12d18:	str	r1, [sp, #52]	; 0x34
   12d1c:	b	120fc <close_stdout@@Base+0x53c>
   12d20:	ldr	r0, [pc, #68]	; 12d6c <close_stdout@@Base+0x11ac>
   12d24:	mov	r3, #1
   12d28:	mov	r9, #0
   12d2c:	str	r3, [sp, #24]
   12d30:	add	r0, pc, r0
   12d34:	str	r3, [sp, #28]
   12d38:	str	r0, [sp, #52]	; 0x34
   12d3c:	b	120fc <close_stdout@@Base+0x53c>
   12d40:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   12d44:	strdeq	r0, [r0], -ip
   12d48:	andeq	r4, r0, r0, asr #32
   12d4c:	andeq	r4, r0, ip, lsl r0
   12d50:	ldrdeq	r3, [r0], -r8
   12d54:			; <UNDEFINED> instruction: 0x00003fb4
   12d58:	andeq	r3, r0, r8, lsr pc
   12d5c:	andeq	r3, r0, r0, ror #29
   12d60:	andeq	r3, r0, r8, lsr ip
   12d64:	andeq	r3, r0, r4, lsl ip
   12d68:	andeq	r3, r0, r0, ror fp
   12d6c:	andeq	r3, r0, r0, asr fp
   12d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d74:	sub	sp, sp, #44	; 0x2c
   12d78:	mov	r6, r0
   12d7c:	mov	r9, r1
   12d80:	mov	sl, r2
   12d84:	mov	r4, r3
   12d88:	bl	1111c <__errno_location@plt>
   12d8c:	ldr	fp, [pc, #412]	; 12f30 <close_stdout@@Base+0x1370>
   12d90:	cmp	r6, #0
   12d94:	add	fp, pc, fp
   12d98:	ldr	r5, [fp]
   12d9c:	ldr	r1, [r0]
   12da0:	mov	r8, r0
   12da4:	str	r1, [sp, #36]	; 0x24
   12da8:	blt	12f28 <close_stdout@@Base+0x1368>
   12dac:	ldr	r3, [pc, #384]	; 12f34 <close_stdout@@Base+0x1374>
   12db0:	add	r3, pc, r3
   12db4:	ldr	r3, [r3]
   12db8:	cmp	r6, r3
   12dbc:	bcc	12e10 <close_stdout@@Base+0x1250>
   12dc0:	add	r7, r6, #1
   12dc4:	cmn	r7, #-536870911	; 0xe0000001
   12dc8:	bhi	12f2c <close_stdout@@Base+0x136c>
   12dcc:	add	r3, fp, #4
   12dd0:	cmp	r5, r3
   12dd4:	beq	12f00 <close_stdout@@Base+0x1340>
   12dd8:	mov	r0, r5
   12ddc:	lsl	r1, r7, #3
   12de0:	bl	13c08 <close_stdout@@Base+0x2048>
   12de4:	mov	r5, r0
   12de8:	str	r0, [fp]
   12dec:	ldr	fp, [pc, #324]	; 12f38 <close_stdout@@Base+0x1378>
   12df0:	mov	r1, #0
   12df4:	add	fp, pc, fp
   12df8:	ldr	r0, [fp]
   12dfc:	rsb	r2, r0, r7
   12e00:	add	r0, r5, r0, lsl #3
   12e04:	lsl	r2, r2, #3
   12e08:	bl	11134 <memset@plt>
   12e0c:	str	r7, [fp]
   12e10:	add	r2, r4, #8
   12e14:	str	r2, [sp, #32]
   12e18:	ldr	r1, [r4]
   12e1c:	add	fp, r5, r6, lsl #3
   12e20:	ldr	lr, [sp, #32]
   12e24:	mov	r2, r9
   12e28:	ldr	r3, [r4, #4]
   12e2c:	ldr	ip, [r5, r6, lsl #3]
   12e30:	ldr	r7, [fp, #4]
   12e34:	orr	r3, r3, #1
   12e38:	str	r1, [sp]
   12e3c:	str	r3, [sp, #4]
   12e40:	mov	r1, ip
   12e44:	str	lr, [sp, #8]
   12e48:	mov	r0, r7
   12e4c:	ldr	lr, [r4, #40]	; 0x28
   12e50:	str	r3, [sp, #28]
   12e54:	mov	r3, sl
   12e58:	str	lr, [sp, #12]
   12e5c:	ldr	lr, [r4, #44]	; 0x2c
   12e60:	str	ip, [sp, #24]
   12e64:	str	lr, [sp, #16]
   12e68:	bl	12048 <close_stdout@@Base+0x488>
   12e6c:	ldr	ip, [sp, #24]
   12e70:	cmp	ip, r0
   12e74:	bhi	12eec <close_stdout@@Base+0x132c>
   12e78:	ldr	r3, [pc, #188]	; 12f3c <close_stdout@@Base+0x137c>
   12e7c:	add	r1, r0, #1
   12e80:	str	r1, [r5, r6, lsl #3]
   12e84:	add	r3, pc, r3
   12e88:	cmp	r7, r3
   12e8c:	beq	12ea0 <close_stdout@@Base+0x12e0>
   12e90:	mov	r0, r7
   12e94:	str	r1, [sp, #24]
   12e98:	bl	10fa8 <free@plt>
   12e9c:	ldr	r1, [sp, #24]
   12ea0:	mov	r0, r1
   12ea4:	str	r1, [sp, #24]
   12ea8:	bl	13bb0 <close_stdout@@Base+0x1ff0>
   12eac:	ldr	r3, [sp, #28]
   12eb0:	ldr	lr, [sp, #32]
   12eb4:	mov	r2, r9
   12eb8:	str	r0, [fp, #4]
   12ebc:	mov	r7, r0
   12ec0:	ldr	ip, [r4]
   12ec4:	str	r3, [sp, #4]
   12ec8:	mov	r3, sl
   12ecc:	str	lr, [sp, #8]
   12ed0:	str	ip, [sp]
   12ed4:	ldr	ip, [r4, #40]	; 0x28
   12ed8:	ldr	r1, [sp, #24]
   12edc:	str	ip, [sp, #12]
   12ee0:	ldr	ip, [r4, #44]	; 0x2c
   12ee4:	str	ip, [sp, #16]
   12ee8:	bl	12048 <close_stdout@@Base+0x488>
   12eec:	ldr	r1, [sp, #36]	; 0x24
   12ef0:	mov	r0, r7
   12ef4:	str	r1, [r8]
   12ef8:	add	sp, sp, #44	; 0x2c
   12efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f00:	lsl	r1, r7, #3
   12f04:	mov	r0, #0
   12f08:	str	r3, [sp, #24]
   12f0c:	bl	13c08 <close_stdout@@Base+0x2048>
   12f10:	ldr	r3, [sp, #24]
   12f14:	mov	r5, r0
   12f18:	ldm	r3, {r0, r1}
   12f1c:	str	r5, [fp]
   12f20:	stm	r5, {r0, r1}
   12f24:	b	12dec <close_stdout@@Base+0x122c>
   12f28:	bl	111f4 <abort@plt>
   12f2c:	bl	13dc4 <close_stdout@@Base+0x2204>
   12f30:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12f34:	andeq	r4, r1, r4, lsl #7
   12f38:	andeq	r4, r1, r0, asr #6
   12f3c:	andeq	r4, r1, r0, lsl #6
   12f40:	push	{r4, r5, r6, lr}
   12f44:	mov	r5, r0
   12f48:	bl	1111c <__errno_location@plt>
   12f4c:	cmp	r5, #0
   12f50:	mov	r1, #48	; 0x30
   12f54:	mov	r4, r0
   12f58:	ldr	r0, [pc, #24]	; 12f78 <close_stdout@@Base+0x13b8>
   12f5c:	ldr	r6, [r4]
   12f60:	add	r0, pc, r0
   12f64:	add	r0, r0, #256	; 0x100
   12f68:	movne	r0, r5
   12f6c:	bl	13d84 <close_stdout@@Base+0x21c4>
   12f70:	str	r6, [r4]
   12f74:	pop	{r4, r5, r6, pc}
   12f78:	andeq	r4, r1, r4, lsr #4
   12f7c:	cmp	r0, #0
   12f80:	beq	12f8c <close_stdout@@Base+0x13cc>
   12f84:	ldr	r0, [r0]
   12f88:	bx	lr
   12f8c:	ldr	r0, [pc, #12]	; 12fa0 <close_stdout@@Base+0x13e0>
   12f90:	add	r0, pc, r0
   12f94:	add	r0, r0, #256	; 0x100
   12f98:	ldr	r0, [r0]
   12f9c:	bx	lr
   12fa0:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12fa4:	cmp	r0, #0
   12fa8:	beq	12fb4 <close_stdout@@Base+0x13f4>
   12fac:	str	r1, [r0]
   12fb0:	bx	lr
   12fb4:	ldr	r0, [pc, #12]	; 12fc8 <close_stdout@@Base+0x1408>
   12fb8:	add	r0, pc, r0
   12fbc:	add	r0, r0, #256	; 0x100
   12fc0:	str	r1, [r0]
   12fc4:	bx	lr
   12fc8:	andeq	r4, r1, ip, asr #3
   12fcc:	cmp	r0, #0
   12fd0:	movne	r3, r0
   12fd4:	beq	13004 <close_stdout@@Base+0x1444>
   12fd8:	lsr	ip, r1, #5
   12fdc:	and	r1, r1, #31
   12fe0:	add	r3, r3, ip, lsl #2
   12fe4:	ldr	ip, [r3, #8]
   12fe8:	lsr	r0, ip, r1
   12fec:	eor	r2, r0, r2
   12ff0:	and	r0, r0, #1
   12ff4:	and	r2, r2, #1
   12ff8:	eor	ip, ip, r2, lsl r1
   12ffc:	str	ip, [r3, #8]
   13000:	bx	lr
   13004:	ldr	r3, [pc, #8]	; 13014 <close_stdout@@Base+0x1454>
   13008:	add	r3, pc, r3
   1300c:	add	r3, r3, #256	; 0x100
   13010:	b	12fd8 <close_stdout@@Base+0x1418>
   13014:	andeq	r4, r1, ip, ror r1
   13018:	subs	r3, r0, #0
   1301c:	beq	1302c <close_stdout@@Base+0x146c>
   13020:	ldr	r0, [r3, #4]
   13024:	str	r1, [r3, #4]
   13028:	bx	lr
   1302c:	ldr	r3, [pc, #8]	; 1303c <close_stdout@@Base+0x147c>
   13030:	add	r3, pc, r3
   13034:	add	r3, r3, #256	; 0x100
   13038:	b	13020 <close_stdout@@Base+0x1460>
   1303c:	andeq	r4, r1, r4, asr r1
   13040:	cmp	r0, #0
   13044:	push	{r3, lr}
   13048:	beq	1306c <close_stdout@@Base+0x14ac>
   1304c:	cmp	r2, #0
   13050:	cmpne	r1, #0
   13054:	mov	r3, #8
   13058:	strne	r1, [r0, #40]	; 0x28
   1305c:	str	r3, [r0]
   13060:	strne	r2, [r0, #44]	; 0x2c
   13064:	popne	{r3, pc}
   13068:	bl	111f4 <abort@plt>
   1306c:	ldr	r0, [pc, #8]	; 1307c <close_stdout@@Base+0x14bc>
   13070:	add	r0, pc, r0
   13074:	add	r0, r0, #256	; 0x100
   13078:	b	1304c <close_stdout@@Base+0x148c>
   1307c:	andeq	r4, r1, r4, lsl r1
   13080:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13084:	sub	sp, sp, #24
   13088:	mov	r7, r0
   1308c:	mov	sl, r1
   13090:	ldr	r4, [sp, #56]	; 0x38
   13094:	mov	r9, r2
   13098:	mov	r8, r3
   1309c:	cmp	r4, #0
   130a0:	beq	130f4 <close_stdout@@Base+0x1534>
   130a4:	bl	1111c <__errno_location@plt>
   130a8:	ldr	r3, [r4]
   130ac:	add	lr, r4, #8
   130b0:	mov	r1, sl
   130b4:	mov	r2, r9
   130b8:	ldr	r6, [r0]
   130bc:	mov	r5, r0
   130c0:	str	r3, [sp]
   130c4:	mov	r0, r7
   130c8:	ldr	ip, [r4, #4]
   130cc:	mov	r3, r8
   130d0:	stmib	sp, {ip, lr}
   130d4:	ldr	ip, [r4, #40]	; 0x28
   130d8:	str	ip, [sp, #12]
   130dc:	ldr	ip, [r4, #44]	; 0x2c
   130e0:	str	ip, [sp, #16]
   130e4:	bl	12048 <close_stdout@@Base+0x488>
   130e8:	str	r6, [r5]
   130ec:	add	sp, sp, #24
   130f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   130f4:	ldr	r4, [pc, #8]	; 13104 <close_stdout@@Base+0x1544>
   130f8:	add	r4, pc, r4
   130fc:	add	r4, r4, #256	; 0x100
   13100:	b	130a4 <close_stdout@@Base+0x14e4>
   13104:	andeq	r4, r1, ip, lsl #1
   13108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1310c:	subs	r4, r3, #0
   13110:	sub	sp, sp, #36	; 0x24
   13114:	mov	r7, r0
   13118:	mov	r6, r1
   1311c:	mov	r5, r2
   13120:	beq	131dc <close_stdout@@Base+0x161c>
   13124:	bl	1111c <__errno_location@plt>
   13128:	ldr	r3, [r4]
   1312c:	ldr	sl, [r4, #4]
   13130:	add	r9, r4, #8
   13134:	mov	r8, r0
   13138:	mov	r0, #0
   1313c:	ldr	r2, [r8]
   13140:	cmp	r5, r0
   13144:	orreq	sl, sl, #1
   13148:	str	r9, [sp, #8]
   1314c:	mov	r1, r0
   13150:	stm	sp, {r3, sl}
   13154:	mov	r3, r6
   13158:	ldr	ip, [r4, #40]	; 0x28
   1315c:	str	r2, [sp, #28]
   13160:	mov	r2, r7
   13164:	str	ip, [sp, #12]
   13168:	ldr	ip, [r4, #44]	; 0x2c
   1316c:	str	ip, [sp, #16]
   13170:	bl	12048 <close_stdout@@Base+0x488>
   13174:	add	r1, r0, #1
   13178:	mov	fp, r0
   1317c:	str	r1, [sp, #24]
   13180:	mov	r0, r1
   13184:	bl	13bb0 <close_stdout@@Base+0x1ff0>
   13188:	ldr	lr, [r4]
   1318c:	str	sl, [sp, #4]
   13190:	mov	r3, r6
   13194:	str	r9, [sp, #8]
   13198:	mov	r2, r7
   1319c:	str	lr, [sp]
   131a0:	ldr	lr, [r4, #40]	; 0x28
   131a4:	ldr	r1, [sp, #24]
   131a8:	str	lr, [sp, #12]
   131ac:	ldr	lr, [r4, #44]	; 0x2c
   131b0:	str	lr, [sp, #16]
   131b4:	str	r0, [sp, #24]
   131b8:	bl	12048 <close_stdout@@Base+0x488>
   131bc:	ldr	r3, [sp, #28]
   131c0:	cmp	r5, #0
   131c4:	str	r3, [r8]
   131c8:	ldr	ip, [sp, #24]
   131cc:	strne	fp, [r5]
   131d0:	mov	r0, ip
   131d4:	add	sp, sp, #36	; 0x24
   131d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131dc:	ldr	r4, [pc, #8]	; 131ec <close_stdout@@Base+0x162c>
   131e0:	add	r4, pc, r4
   131e4:	add	r4, r4, #256	; 0x100
   131e8:	b	13124 <close_stdout@@Base+0x1564>
   131ec:	andeq	r3, r1, r4, lsr #31
   131f0:	mov	r3, r2
   131f4:	mov	r2, #0
   131f8:	b	13108 <close_stdout@@Base+0x1548>
   131fc:	ldr	r2, [pc, #152]	; 1329c <close_stdout@@Base+0x16dc>
   13200:	push	{r3, r4, r5, r6, r7, lr}
   13204:	add	r2, pc, r2
   13208:	ldr	r3, [pc, #144]	; 132a0 <close_stdout@@Base+0x16e0>
   1320c:	ldr	r6, [r2]
   13210:	add	r3, pc, r3
   13214:	cmp	r6, #1
   13218:	ldr	r7, [r3]
   1321c:	movhi	r4, #1
   13220:	movhi	r5, r7
   13224:	bls	13240 <close_stdout@@Base+0x1680>
   13228:	ldr	r0, [r5, #12]
   1322c:	add	r4, r4, #1
   13230:	bl	10fa8 <free@plt>
   13234:	cmp	r4, r6
   13238:	add	r5, r5, #8
   1323c:	bne	13228 <close_stdout@@Base+0x1668>
   13240:	ldr	r4, [pc, #92]	; 132a4 <close_stdout@@Base+0x16e4>
   13244:	ldr	r0, [r7, #4]
   13248:	add	r4, pc, r4
   1324c:	cmp	r0, r4
   13250:	beq	13268 <close_stdout@@Base+0x16a8>
   13254:	bl	10fa8 <free@plt>
   13258:	ldr	r3, [pc, #72]	; 132a8 <close_stdout@@Base+0x16e8>
   1325c:	mov	r2, #256	; 0x100
   13260:	add	r3, pc, r3
   13264:	stmib	r3, {r2, r4}
   13268:	ldr	r4, [pc, #60]	; 132ac <close_stdout@@Base+0x16ec>
   1326c:	add	r4, pc, r4
   13270:	add	r5, r4, #4
   13274:	cmp	r7, r5
   13278:	beq	13288 <close_stdout@@Base+0x16c8>
   1327c:	mov	r0, r7
   13280:	bl	10fa8 <free@plt>
   13284:	str	r5, [r4]
   13288:	ldr	r3, [pc, #32]	; 132b0 <close_stdout@@Base+0x16f0>
   1328c:	mov	r2, #1
   13290:	add	r3, pc, r3
   13294:	str	r2, [r3]
   13298:	pop	{r3, r4, r5, r6, r7, pc}
   1329c:	andeq	r3, r1, r0, lsr pc
   132a0:	andeq	r3, r1, r8, asr pc
   132a4:	andeq	r3, r1, ip, lsr pc
   132a8:	andeq	r3, r1, r8, lsl #30
   132ac:	strdeq	r3, [r1], -ip
   132b0:	andeq	r3, r1, r4, lsr #29
   132b4:	ldr	r3, [pc, #12]	; 132c8 <close_stdout@@Base+0x1708>
   132b8:	mvn	r2, #0
   132bc:	add	r3, pc, r3
   132c0:	add	r3, r3, #256	; 0x100
   132c4:	b	12d70 <close_stdout@@Base+0x11b0>
   132c8:	andeq	r3, r1, r8, asr #29
   132cc:	ldr	r3, [pc, #8]	; 132dc <close_stdout@@Base+0x171c>
   132d0:	add	r3, pc, r3
   132d4:	add	r3, r3, #256	; 0x100
   132d8:	b	12d70 <close_stdout@@Base+0x11b0>
   132dc:			; <UNDEFINED> instruction: 0x00013eb4
   132e0:	mov	r1, r0
   132e4:	mov	r0, #0
   132e8:	b	132b4 <close_stdout@@Base+0x16f4>
   132ec:	mov	r2, r1
   132f0:	mov	r1, r0
   132f4:	mov	r0, #0
   132f8:	b	132cc <close_stdout@@Base+0x170c>
   132fc:	ldr	r3, [pc, #92]	; 13360 <close_stdout@@Base+0x17a0>
   13300:	ldr	ip, [pc, #92]	; 13364 <close_stdout@@Base+0x17a4>
   13304:	add	r3, pc, r3
   13308:	push	{r4, r5, r6, r7, lr}
   1330c:	sub	sp, sp, #60	; 0x3c
   13310:	ldr	r4, [r3, ip]
   13314:	add	r5, sp, #4
   13318:	mov	r7, r2
   1331c:	mov	r6, r0
   13320:	mov	r0, r5
   13324:	ldr	r3, [r4]
   13328:	str	r3, [sp, #52]	; 0x34
   1332c:	bl	11e90 <close_stdout@@Base+0x2d0>
   13330:	mov	r3, r5
   13334:	mvn	r2, #0
   13338:	mov	r0, r6
   1333c:	mov	r1, r7
   13340:	bl	12d70 <close_stdout@@Base+0x11b0>
   13344:	ldr	r2, [sp, #52]	; 0x34
   13348:	ldr	r3, [r4]
   1334c:	cmp	r2, r3
   13350:	bne	1335c <close_stdout@@Base+0x179c>
   13354:	add	sp, sp, #60	; 0x3c
   13358:	pop	{r4, r5, r6, r7, pc}
   1335c:	bl	11008 <__stack_chk_fail@plt>
   13360:	strdeq	r3, [r1], -r4
   13364:	strdeq	r0, [r0], -ip
   13368:	ldr	ip, [pc, #96]	; 133d0 <close_stdout@@Base+0x1810>
   1336c:	push	{r4, r5, r6, r7, r8, lr}
   13370:	add	ip, pc, ip
   13374:	ldr	lr, [pc, #88]	; 133d4 <close_stdout@@Base+0x1814>
   13378:	sub	sp, sp, #56	; 0x38
   1337c:	mov	r8, r3
   13380:	add	r5, sp, #4
   13384:	mov	r7, r2
   13388:	mov	r6, r0
   1338c:	ldr	r4, [ip, lr]
   13390:	mov	r0, r5
   13394:	ldr	r3, [r4]
   13398:	str	r3, [sp, #52]	; 0x34
   1339c:	bl	11e90 <close_stdout@@Base+0x2d0>
   133a0:	mov	r2, r8
   133a4:	mov	r3, r5
   133a8:	mov	r0, r6
   133ac:	mov	r1, r7
   133b0:	bl	12d70 <close_stdout@@Base+0x11b0>
   133b4:	ldr	r2, [sp, #52]	; 0x34
   133b8:	ldr	r3, [r4]
   133bc:	cmp	r2, r3
   133c0:	bne	133cc <close_stdout@@Base+0x180c>
   133c4:	add	sp, sp, #56	; 0x38
   133c8:	pop	{r4, r5, r6, r7, r8, pc}
   133cc:	bl	11008 <__stack_chk_fail@plt>
   133d0:	andeq	r3, r1, r8, lsl #25
   133d4:	strdeq	r0, [r0], -ip
   133d8:	mov	r2, r1
   133dc:	mov	r1, r0
   133e0:	mov	r0, #0
   133e4:	b	132fc <close_stdout@@Base+0x173c>
   133e8:	mov	ip, r1
   133ec:	mov	r3, r2
   133f0:	mov	r1, r0
   133f4:	mov	r2, ip
   133f8:	mov	r0, #0
   133fc:	b	13368 <close_stdout@@Base+0x17a8>
   13400:	push	{r4, r5, r6, r7, r8, lr}
   13404:	mov	r5, r2
   13408:	ldr	lr, [pc, #136]	; 13498 <close_stdout@@Base+0x18d8>
   1340c:	mov	r7, r0
   13410:	mov	r6, r1
   13414:	ldr	r4, [pc, #128]	; 1349c <close_stdout@@Base+0x18dc>
   13418:	add	lr, pc, lr
   1341c:	sub	sp, sp, #56	; 0x38
   13420:	add	lr, lr, #256	; 0x100
   13424:	ldr	r8, [pc, #116]	; 134a0 <close_stdout@@Base+0x18e0>
   13428:	add	r4, pc, r4
   1342c:	add	ip, sp, #4
   13430:	ldm	lr!, {r0, r1, r2, r3}
   13434:	ldr	r4, [r4, r8]
   13438:	stmia	ip!, {r0, r1, r2, r3}
   1343c:	ldm	lr!, {r0, r1, r2, r3}
   13440:	ldr	r8, [r4]
   13444:	stmia	ip!, {r0, r1, r2, r3}
   13448:	ldm	lr, {r0, r1, r2, r3}
   1344c:	str	r8, [sp, #52]	; 0x34
   13450:	stm	ip, {r0, r1, r2, r3}
   13454:	mov	r1, r5
   13458:	add	r5, sp, #4
   1345c:	mov	r2, #1
   13460:	mov	r0, r5
   13464:	bl	12fcc <close_stdout@@Base+0x140c>
   13468:	mov	r2, r6
   1346c:	mov	r3, r5
   13470:	mov	r1, r7
   13474:	mov	r0, #0
   13478:	bl	12d70 <close_stdout@@Base+0x11b0>
   1347c:	ldr	r2, [sp, #52]	; 0x34
   13480:	ldr	r3, [r4]
   13484:	cmp	r2, r3
   13488:	bne	13494 <close_stdout@@Base+0x18d4>
   1348c:	add	sp, sp, #56	; 0x38
   13490:	pop	{r4, r5, r6, r7, r8, pc}
   13494:	bl	11008 <__stack_chk_fail@plt>
   13498:	andeq	r3, r1, ip, ror #26
   1349c:	ldrdeq	r3, [r1], -r0
   134a0:	strdeq	r0, [r0], -ip
   134a4:	mov	r2, r1
   134a8:	mvn	r1, #0
   134ac:	b	13400 <close_stdout@@Base+0x1840>
   134b0:	mov	r1, #58	; 0x3a
   134b4:	b	134a4 <close_stdout@@Base+0x18e4>
   134b8:	mov	r2, #58	; 0x3a
   134bc:	b	13400 <close_stdout@@Base+0x1840>
   134c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134c4:	mov	r5, r2
   134c8:	ldr	lr, [pc, #144]	; 13560 <close_stdout@@Base+0x19a0>
   134cc:	mov	r8, r0
   134d0:	mov	r9, r1
   134d4:	mov	r7, r3
   134d8:	add	lr, pc, lr
   134dc:	ldr	r4, [pc, #128]	; 13564 <close_stdout@@Base+0x19a4>
   134e0:	add	lr, lr, #256	; 0x100
   134e4:	sub	sp, sp, #56	; 0x38
   134e8:	ldr	sl, [pc, #120]	; 13568 <close_stdout@@Base+0x19a8>
   134ec:	add	r4, pc, r4
   134f0:	ldm	lr!, {r0, r1, r2, r3}
   134f4:	add	ip, sp, #4
   134f8:	ldr	r4, [r4, sl]
   134fc:	ldr	r6, [sp, #88]	; 0x58
   13500:	stmia	ip!, {r0, r1, r2, r3}
   13504:	ldm	lr!, {r0, r1, r2, r3}
   13508:	ldr	sl, [r4]
   1350c:	stmia	ip!, {r0, r1, r2, r3}
   13510:	ldm	lr, {r0, r1, r2, r3}
   13514:	str	sl, [sp, #52]	; 0x34
   13518:	stm	ip, {r0, r1, r2, r3}
   1351c:	mov	r2, r5
   13520:	add	r5, sp, #4
   13524:	mov	r1, r9
   13528:	mov	r0, r5
   1352c:	bl	13040 <close_stdout@@Base+0x1480>
   13530:	mov	r2, r6
   13534:	mov	r3, r5
   13538:	mov	r0, r8
   1353c:	mov	r1, r7
   13540:	bl	12d70 <close_stdout@@Base+0x11b0>
   13544:	ldr	r2, [sp, #52]	; 0x34
   13548:	ldr	r3, [r4]
   1354c:	cmp	r2, r3
   13550:	bne	1355c <close_stdout@@Base+0x199c>
   13554:	add	sp, sp, #56	; 0x38
   13558:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1355c:	bl	11008 <__stack_chk_fail@plt>
   13560:	andeq	r3, r1, ip, lsr #25
   13564:	andeq	r3, r1, ip, lsl #22
   13568:	strdeq	r0, [r0], -ip
   1356c:	push	{lr}		; (str lr, [sp, #-4]!)
   13570:	sub	sp, sp, #12
   13574:	mvn	ip, #0
   13578:	str	ip, [sp]
   1357c:	bl	134c0 <close_stdout@@Base+0x1900>
   13580:	add	sp, sp, #12
   13584:	pop	{pc}		; (ldr pc, [sp], #4)
   13588:	mov	ip, r1
   1358c:	mov	r3, r2
   13590:	mov	r1, r0
   13594:	mov	r2, ip
   13598:	mov	r0, #0
   1359c:	b	1356c <close_stdout@@Base+0x19ac>
   135a0:	push	{lr}		; (str lr, [sp, #-4]!)
   135a4:	sub	sp, sp, #12
   135a8:	mov	lr, r1
   135ac:	mov	ip, r2
   135b0:	mov	r1, r0
   135b4:	str	r3, [sp]
   135b8:	mov	r2, lr
   135bc:	mov	r3, ip
   135c0:	mov	r0, #0
   135c4:	bl	134c0 <close_stdout@@Base+0x1900>
   135c8:	add	sp, sp, #12
   135cc:	pop	{pc}		; (ldr pc, [sp], #4)
   135d0:	ldr	r3, [pc, #12]	; 135e4 <close_stdout@@Base+0x1a24>
   135d4:	ldr	ip, [pc, #12]	; 135e8 <close_stdout@@Base+0x1a28>
   135d8:	add	r3, pc, r3
   135dc:	ldr	r3, [r3, ip]
   135e0:	b	12d70 <close_stdout@@Base+0x11b0>
   135e4:	andeq	r3, r1, r0, lsr #20
   135e8:	strdeq	r0, [r0], -r8
   135ec:	mov	r2, r1
   135f0:	mov	r1, r0
   135f4:	mov	r0, #0
   135f8:	b	135d0 <close_stdout@@Base+0x1a10>
   135fc:	mvn	r2, #0
   13600:	b	135d0 <close_stdout@@Base+0x1a10>
   13604:	mov	r1, r0
   13608:	mov	r0, #0
   1360c:	b	135fc <close_stdout@@Base+0x1a3c>
   13610:	push	{r4, r5, r6, r7, lr}
   13614:	cmp	r1, #0
   13618:	sub	sp, sp, #36	; 0x24
   1361c:	ldr	r7, [pc, #896]	; 139a4 <close_stdout@@Base+0x1de4>
   13620:	mov	ip, r3
   13624:	mov	r5, r0
   13628:	add	r7, pc, r7
   1362c:	ldr	r4, [sp, #56]	; 0x38
   13630:	ldr	r6, [sp, #60]	; 0x3c
   13634:	beq	13978 <close_stdout@@Base+0x1db8>
   13638:	str	r2, [sp]
   1363c:	mov	r3, r1
   13640:	ldr	r2, [pc, #864]	; 139a8 <close_stdout@@Base+0x1de8>
   13644:	mov	r1, #1
   13648:	str	ip, [sp, #4]
   1364c:	add	r2, pc, r2
   13650:	bl	11164 <__fprintf_chk@plt>
   13654:	ldr	r1, [pc, #848]	; 139ac <close_stdout@@Base+0x1dec>
   13658:	mov	r2, #5
   1365c:	mov	r0, #0
   13660:	add	r1, pc, r1
   13664:	bl	10ffc <dcgettext@plt>
   13668:	ldr	r2, [pc, #832]	; 139b0 <close_stdout@@Base+0x1df0>
   1366c:	movw	ip, #2013	; 0x7dd
   13670:	mov	r1, #1
   13674:	ldr	r2, [r7, r2]
   13678:	str	ip, [sp]
   1367c:	mov	r3, r0
   13680:	mov	r0, r5
   13684:	bl	11164 <__fprintf_chk@plt>
   13688:	ldr	r1, [pc, #804]	; 139b4 <close_stdout@@Base+0x1df4>
   1368c:	mov	r0, #0
   13690:	mov	r2, #5
   13694:	add	r1, pc, r1
   13698:	bl	10ffc <dcgettext@plt>
   1369c:	mov	r1, r5
   136a0:	bl	10f78 <fputs_unlocked@plt>
   136a4:	cmp	r6, #9
   136a8:	addls	pc, pc, r6, lsl #2
   136ac:	b	13994 <close_stdout@@Base+0x1dd4>
   136b0:	b	13744 <close_stdout@@Base+0x1b84>
   136b4:	b	13748 <close_stdout@@Base+0x1b88>
   136b8:	b	13778 <close_stdout@@Base+0x1bb8>
   136bc:	b	137ac <close_stdout@@Base+0x1bec>
   136c0:	b	137e8 <close_stdout@@Base+0x1c28>
   136c4:	b	13828 <close_stdout@@Base+0x1c68>
   136c8:	b	13870 <close_stdout@@Base+0x1cb0>
   136cc:	b	138c0 <close_stdout@@Base+0x1d00>
   136d0:	b	13918 <close_stdout@@Base+0x1d58>
   136d4:	b	136d8 <close_stdout@@Base+0x1b18>
   136d8:	ldr	r1, [pc, #728]	; 139b8 <close_stdout@@Base+0x1df8>
   136dc:	mov	r0, #0
   136e0:	add	r1, pc, r1
   136e4:	mov	r2, #5
   136e8:	bl	10ffc <dcgettext@plt>
   136ec:	ldm	r4, {r3, ip}
   136f0:	mov	r1, #1
   136f4:	str	ip, [sp]
   136f8:	ldr	ip, [r4, #8]
   136fc:	str	ip, [sp, #4]
   13700:	ldr	ip, [r4, #12]
   13704:	str	ip, [sp, #8]
   13708:	ldr	ip, [r4, #16]
   1370c:	str	ip, [sp, #12]
   13710:	ldr	ip, [r4, #20]
   13714:	str	ip, [sp, #16]
   13718:	ldr	ip, [r4, #24]
   1371c:	str	ip, [sp, #20]
   13720:	ldr	ip, [r4, #28]
   13724:	str	ip, [sp, #24]
   13728:	ldr	ip, [r4, #32]
   1372c:	str	ip, [sp, #28]
   13730:	mov	r2, r0
   13734:	mov	r0, r5
   13738:	bl	11164 <__fprintf_chk@plt>
   1373c:	add	sp, sp, #36	; 0x24
   13740:	pop	{r4, r5, r6, r7, pc}
   13744:	bl	111f4 <abort@plt>
   13748:	ldr	r1, [pc, #620]	; 139bc <close_stdout@@Base+0x1dfc>
   1374c:	mov	r2, #5
   13750:	mov	r0, #0
   13754:	add	r1, pc, r1
   13758:	bl	10ffc <dcgettext@plt>
   1375c:	ldr	r3, [r4]
   13760:	mov	r1, #1
   13764:	mov	r2, r0
   13768:	mov	r0, r5
   1376c:	add	sp, sp, #36	; 0x24
   13770:	pop	{r4, r5, r6, r7, lr}
   13774:	b	11164 <__fprintf_chk@plt>
   13778:	ldr	r1, [pc, #576]	; 139c0 <close_stdout@@Base+0x1e00>
   1377c:	mov	r2, #5
   13780:	mov	r0, #0
   13784:	add	r1, pc, r1
   13788:	bl	10ffc <dcgettext@plt>
   1378c:	ldm	r4, {r3, ip}
   13790:	mov	r1, #1
   13794:	str	ip, [sp, #56]	; 0x38
   13798:	mov	r2, r0
   1379c:	mov	r0, r5
   137a0:	add	sp, sp, #36	; 0x24
   137a4:	pop	{r4, r5, r6, r7, lr}
   137a8:	b	11164 <__fprintf_chk@plt>
   137ac:	ldr	r1, [pc, #528]	; 139c4 <close_stdout@@Base+0x1e04>
   137b0:	mov	r2, #5
   137b4:	mov	r0, #0
   137b8:	add	r1, pc, r1
   137bc:	bl	10ffc <dcgettext@plt>
   137c0:	ldm	r4, {r3, ip}
   137c4:	mov	r1, #1
   137c8:	str	ip, [sp, #56]	; 0x38
   137cc:	ldr	ip, [r4, #8]
   137d0:	str	ip, [sp, #60]	; 0x3c
   137d4:	mov	r2, r0
   137d8:	mov	r0, r5
   137dc:	add	sp, sp, #36	; 0x24
   137e0:	pop	{r4, r5, r6, r7, lr}
   137e4:	b	11164 <__fprintf_chk@plt>
   137e8:	ldr	r1, [pc, #472]	; 139c8 <close_stdout@@Base+0x1e08>
   137ec:	mov	r2, #5
   137f0:	mov	r0, #0
   137f4:	add	r1, pc, r1
   137f8:	bl	10ffc <dcgettext@plt>
   137fc:	ldm	r4, {r3, ip}
   13800:	mov	r1, #1
   13804:	str	ip, [sp]
   13808:	ldr	ip, [r4, #8]
   1380c:	str	ip, [sp, #4]
   13810:	ldr	ip, [r4, #12]
   13814:	str	ip, [sp, #8]
   13818:	mov	r2, r0
   1381c:	mov	r0, r5
   13820:	bl	11164 <__fprintf_chk@plt>
   13824:	b	1373c <close_stdout@@Base+0x1b7c>
   13828:	ldr	r1, [pc, #412]	; 139cc <close_stdout@@Base+0x1e0c>
   1382c:	mov	r2, #5
   13830:	mov	r0, #0
   13834:	add	r1, pc, r1
   13838:	bl	10ffc <dcgettext@plt>
   1383c:	ldm	r4, {r3, ip}
   13840:	mov	r1, #1
   13844:	str	ip, [sp]
   13848:	ldr	ip, [r4, #8]
   1384c:	str	ip, [sp, #4]
   13850:	ldr	ip, [r4, #12]
   13854:	str	ip, [sp, #8]
   13858:	ldr	ip, [r4, #16]
   1385c:	str	ip, [sp, #12]
   13860:	mov	r2, r0
   13864:	mov	r0, r5
   13868:	bl	11164 <__fprintf_chk@plt>
   1386c:	b	1373c <close_stdout@@Base+0x1b7c>
   13870:	ldr	r1, [pc, #344]	; 139d0 <close_stdout@@Base+0x1e10>
   13874:	mov	r2, #5
   13878:	mov	r0, #0
   1387c:	add	r1, pc, r1
   13880:	bl	10ffc <dcgettext@plt>
   13884:	ldm	r4, {r3, ip}
   13888:	mov	r1, #1
   1388c:	str	ip, [sp]
   13890:	ldr	ip, [r4, #8]
   13894:	str	ip, [sp, #4]
   13898:	ldr	ip, [r4, #12]
   1389c:	str	ip, [sp, #8]
   138a0:	ldr	ip, [r4, #16]
   138a4:	str	ip, [sp, #12]
   138a8:	ldr	ip, [r4, #20]
   138ac:	str	ip, [sp, #16]
   138b0:	mov	r2, r0
   138b4:	mov	r0, r5
   138b8:	bl	11164 <__fprintf_chk@plt>
   138bc:	b	1373c <close_stdout@@Base+0x1b7c>
   138c0:	ldr	r1, [pc, #268]	; 139d4 <close_stdout@@Base+0x1e14>
   138c4:	mov	r2, #5
   138c8:	mov	r0, #0
   138cc:	add	r1, pc, r1
   138d0:	bl	10ffc <dcgettext@plt>
   138d4:	ldm	r4, {r3, ip}
   138d8:	mov	r1, #1
   138dc:	str	ip, [sp]
   138e0:	ldr	ip, [r4, #8]
   138e4:	str	ip, [sp, #4]
   138e8:	ldr	ip, [r4, #12]
   138ec:	str	ip, [sp, #8]
   138f0:	ldr	ip, [r4, #16]
   138f4:	str	ip, [sp, #12]
   138f8:	ldr	ip, [r4, #20]
   138fc:	str	ip, [sp, #16]
   13900:	ldr	ip, [r4, #24]
   13904:	str	ip, [sp, #20]
   13908:	mov	r2, r0
   1390c:	mov	r0, r5
   13910:	bl	11164 <__fprintf_chk@plt>
   13914:	b	1373c <close_stdout@@Base+0x1b7c>
   13918:	ldr	r1, [pc, #184]	; 139d8 <close_stdout@@Base+0x1e18>
   1391c:	mov	r2, #5
   13920:	mov	r0, #0
   13924:	add	r1, pc, r1
   13928:	bl	10ffc <dcgettext@plt>
   1392c:	ldm	r4, {r3, ip}
   13930:	mov	r1, #1
   13934:	str	ip, [sp]
   13938:	ldr	ip, [r4, #8]
   1393c:	str	ip, [sp, #4]
   13940:	ldr	ip, [r4, #12]
   13944:	str	ip, [sp, #8]
   13948:	ldr	ip, [r4, #16]
   1394c:	str	ip, [sp, #12]
   13950:	ldr	ip, [r4, #20]
   13954:	str	ip, [sp, #16]
   13958:	ldr	ip, [r4, #24]
   1395c:	str	ip, [sp, #20]
   13960:	ldr	ip, [r4, #28]
   13964:	str	ip, [sp, #24]
   13968:	mov	r2, r0
   1396c:	mov	r0, r5
   13970:	bl	11164 <__fprintf_chk@plt>
   13974:	b	1373c <close_stdout@@Base+0x1b7c>
   13978:	str	r3, [sp]
   1397c:	mov	r3, r2
   13980:	ldr	r2, [pc, #84]	; 139dc <close_stdout@@Base+0x1e1c>
   13984:	mov	r1, #1
   13988:	add	r2, pc, r2
   1398c:	bl	11164 <__fprintf_chk@plt>
   13990:	b	13654 <close_stdout@@Base+0x1a94>
   13994:	ldr	r1, [pc, #68]	; 139e0 <close_stdout@@Base+0x1e20>
   13998:	mov	r0, #0
   1399c:	add	r1, pc, r1
   139a0:	b	136e4 <close_stdout@@Base+0x1b24>
   139a4:	ldrdeq	r3, [r1], -r0
   139a8:	andeq	r3, r0, r8, lsl #5
   139ac:	andeq	r3, r0, r8, lsl #5
   139b0:	andeq	r0, r0, r8, lsr #2
   139b4:	andeq	r3, r0, r8, asr r2
   139b8:	andeq	r3, r0, r4, ror #7
   139bc:	andeq	r3, r0, r4, ror #4
   139c0:	andeq	r3, r0, r4, asr #4
   139c4:	andeq	r3, r0, r8, lsr #4
   139c8:	andeq	r3, r0, r8, lsl #4
   139cc:	andeq	r3, r0, r8, ror #3
   139d0:	andeq	r3, r0, r4, asr #3
   139d4:	muleq	r0, ip, r1
   139d8:	andeq	r3, r0, r0, ror r1
   139dc:	andeq	r2, r0, r8, asr pc
   139e0:	andeq	r3, r0, ip, asr r1
   139e4:	push	{r4, r5, lr}
   139e8:	sub	sp, sp, #12
   139ec:	ldr	r5, [sp, #24]
   139f0:	ldr	ip, [r5]
   139f4:	cmp	ip, #0
   139f8:	beq	13a14 <close_stdout@@Base+0x1e54>
   139fc:	mov	lr, r5
   13a00:	mov	ip, #0
   13a04:	ldr	r4, [lr, #4]!
   13a08:	add	ip, ip, #1
   13a0c:	cmp	r4, #0
   13a10:	bne	13a04 <close_stdout@@Base+0x1e44>
   13a14:	stm	sp, {r5, ip}
   13a18:	bl	13610 <close_stdout@@Base+0x1a50>
   13a1c:	add	sp, sp, #12
   13a20:	pop	{r4, r5, pc}
   13a24:	push	{r4, r5, r6, r7, lr}
   13a28:	sub	sp, sp, #60	; 0x3c
   13a2c:	ldr	r4, [pc, #100]	; 13a98 <close_stdout@@Base+0x1ed8>
   13a30:	mov	ip, #0
   13a34:	ldr	r5, [pc, #96]	; 13a9c <close_stdout@@Base+0x1edc>
   13a38:	mov	lr, ip
   13a3c:	add	r4, pc, r4
   13a40:	ldr	r6, [sp, #80]	; 0x50
   13a44:	ldr	r7, [r4, r5]
   13a48:	add	r5, sp, #12
   13a4c:	ldr	r4, [r7]
   13a50:	str	r4, [sp, #52]	; 0x34
   13a54:	ldr	r4, [r6, ip]
   13a58:	cmp	r4, #0
   13a5c:	str	r4, [r5, ip]
   13a60:	beq	13a74 <close_stdout@@Base+0x1eb4>
   13a64:	add	lr, lr, #1
   13a68:	add	ip, ip, #4
   13a6c:	cmp	lr, #10
   13a70:	bne	13a54 <close_stdout@@Base+0x1e94>
   13a74:	stm	sp, {r5, lr}
   13a78:	bl	13610 <close_stdout@@Base+0x1a50>
   13a7c:	ldr	r2, [sp, #52]	; 0x34
   13a80:	ldr	r3, [r7]
   13a84:	cmp	r2, r3
   13a88:	bne	13a94 <close_stdout@@Base+0x1ed4>
   13a8c:	add	sp, sp, #60	; 0x3c
   13a90:	pop	{r4, r5, r6, r7, pc}
   13a94:	bl	11008 <__stack_chk_fail@plt>
   13a98:			; <UNDEFINED> instruction: 0x000135bc
   13a9c:	strdeq	r0, [r0], -ip
   13aa0:	push	{r3}		; (str r3, [sp, #-4]!)
   13aa4:	push	{r4, lr}
   13aa8:	sub	sp, sp, #20
   13aac:	ldr	lr, [pc, #72]	; 13afc <close_stdout@@Base+0x1f3c>
   13ab0:	add	ip, sp, #32
   13ab4:	ldr	r4, [pc, #68]	; 13b00 <close_stdout@@Base+0x1f40>
   13ab8:	add	lr, pc, lr
   13abc:	ldr	r3, [sp, #28]
   13ac0:	ldr	r4, [lr, r4]
   13ac4:	str	ip, [sp]
   13ac8:	str	ip, [sp, #8]
   13acc:	ldr	ip, [r4]
   13ad0:	str	ip, [sp, #12]
   13ad4:	bl	13a24 <close_stdout@@Base+0x1e64>
   13ad8:	ldr	r2, [sp, #12]
   13adc:	ldr	r3, [r4]
   13ae0:	cmp	r2, r3
   13ae4:	bne	13af8 <close_stdout@@Base+0x1f38>
   13ae8:	add	sp, sp, #20
   13aec:	pop	{r4, lr}
   13af0:	add	sp, sp, #4
   13af4:	bx	lr
   13af8:	bl	11008 <__stack_chk_fail@plt>
   13afc:	andeq	r3, r1, r0, asr #10
   13b00:	strdeq	r0, [r0], -ip
   13b04:	ldr	r1, [pc, #132]	; 13b90 <close_stdout@@Base+0x1fd0>
   13b08:	mov	r2, #5
   13b0c:	push	{r4, lr}
   13b10:	add	r1, pc, r1
   13b14:	mov	r0, #0
   13b18:	ldr	r4, [pc, #116]	; 13b94 <close_stdout@@Base+0x1fd4>
   13b1c:	bl	10ffc <dcgettext@plt>
   13b20:	ldr	r2, [pc, #112]	; 13b98 <close_stdout@@Base+0x1fd8>
   13b24:	add	r4, pc, r4
   13b28:	add	r2, pc, r2
   13b2c:	mov	r1, r0
   13b30:	mov	r0, #1
   13b34:	bl	1114c <__printf_chk@plt>
   13b38:	ldr	r1, [pc, #92]	; 13b9c <close_stdout@@Base+0x1fdc>
   13b3c:	mov	r2, #5
   13b40:	mov	r0, #0
   13b44:	add	r1, pc, r1
   13b48:	bl	10ffc <dcgettext@plt>
   13b4c:	ldr	r2, [pc, #76]	; 13ba0 <close_stdout@@Base+0x1fe0>
   13b50:	ldr	r3, [pc, #76]	; 13ba4 <close_stdout@@Base+0x1fe4>
   13b54:	add	r2, pc, r2
   13b58:	add	r3, pc, r3
   13b5c:	mov	r1, r0
   13b60:	mov	r0, #1
   13b64:	bl	1114c <__printf_chk@plt>
   13b68:	ldr	r1, [pc, #56]	; 13ba8 <close_stdout@@Base+0x1fe8>
   13b6c:	mov	r0, #0
   13b70:	mov	r2, #5
   13b74:	add	r1, pc, r1
   13b78:	bl	10ffc <dcgettext@plt>
   13b7c:	ldr	r3, [pc, #40]	; 13bac <close_stdout@@Base+0x1fec>
   13b80:	ldr	r3, [r4, r3]
   13b84:	pop	{r4, lr}
   13b88:	ldr	r1, [r3]
   13b8c:	b	10f78 <fputs_unlocked@plt>
   13b90:	andeq	r3, r0, r4, lsr #32
   13b94:	ldrdeq	r3, [r1], -r4
   13b98:	andeq	r3, r0, r4, lsr #32
   13b9c:	andeq	r3, r0, r0, lsr #32
   13ba0:	andeq	r2, r0, r4, lsl #22
   13ba4:	andeq	r2, r0, r0, lsl fp
   13ba8:	andeq	r3, r0, r4
   13bac:	andeq	r0, r0, r8, lsl r1
   13bb0:	push	{r4, lr}
   13bb4:	mov	r4, r0
   13bb8:	bl	110a4 <malloc@plt>
   13bbc:	rsbs	r3, r0, #1
   13bc0:	movcc	r3, #0
   13bc4:	cmp	r4, #0
   13bc8:	moveq	r3, #0
   13bcc:	cmp	r3, #0
   13bd0:	popeq	{r4, pc}
   13bd4:	bl	13dc4 <close_stdout@@Base+0x2204>
   13bd8:	push	{r3, r4, r5, lr}
   13bdc:	mov	r4, r0
   13be0:	mvn	r0, #0
   13be4:	mov	r5, r1
   13be8:	bl	16150 <close_stdout@@Base+0x4590>
   13bec:	cmp	r0, r4
   13bf0:	bcc	13c00 <close_stdout@@Base+0x2040>
   13bf4:	mul	r0, r4, r5
   13bf8:	pop	{r3, r4, r5, lr}
   13bfc:	b	13bb0 <close_stdout@@Base+0x1ff0>
   13c00:	bl	13dc4 <close_stdout@@Base+0x2204>
   13c04:	b	13bb0 <close_stdout@@Base+0x1ff0>
   13c08:	rsbs	r3, r1, #1
   13c0c:	push	{r4, lr}
   13c10:	movcc	r3, #0
   13c14:	cmp	r0, #0
   13c18:	mov	r4, r1
   13c1c:	moveq	r3, #0
   13c20:	cmp	r3, #0
   13c24:	bne	13c48 <close_stdout@@Base+0x2088>
   13c28:	bl	11014 <realloc@plt>
   13c2c:	rsbs	r3, r0, #1
   13c30:	movcc	r3, #0
   13c34:	cmp	r4, #0
   13c38:	moveq	r3, #0
   13c3c:	cmp	r3, #0
   13c40:	popeq	{r4, pc}
   13c44:	bl	13dc4 <close_stdout@@Base+0x2204>
   13c48:	bl	10fa8 <free@plt>
   13c4c:	mov	r0, #0
   13c50:	pop	{r4, pc}
   13c54:	push	{r4, r5, r6, lr}
   13c58:	mov	r5, r1
   13c5c:	mov	r6, r0
   13c60:	mov	r1, r2
   13c64:	mvn	r0, #0
   13c68:	mov	r4, r2
   13c6c:	bl	16150 <close_stdout@@Base+0x4590>
   13c70:	cmp	r0, r5
   13c74:	bcc	13c88 <close_stdout@@Base+0x20c8>
   13c78:	mov	r0, r6
   13c7c:	mul	r1, r5, r4
   13c80:	pop	{r4, r5, r6, lr}
   13c84:	b	13c08 <close_stdout@@Base+0x2048>
   13c88:	bl	13dc4 <close_stdout@@Base+0x2204>
   13c8c:	push	{r3, r4, r5, r6, r7, lr}
   13c90:	subs	r7, r0, #0
   13c94:	mov	r5, r1
   13c98:	mov	r6, r2
   13c9c:	ldr	r4, [r1]
   13ca0:	beq	13cd8 <close_stdout@@Base+0x2118>
   13ca4:	movw	r0, #43690	; 0xaaaa
   13ca8:	mov	r1, r2
   13cac:	bfi	r0, r0, #16, #16
   13cb0:	bl	16150 <close_stdout@@Base+0x4590>
   13cb4:	cmp	r4, r0
   13cb8:	addcc	r3, r4, #1
   13cbc:	addcc	r4, r4, r3, lsr #1
   13cc0:	bcs	13cfc <close_stdout@@Base+0x213c>
   13cc4:	str	r4, [r5]
   13cc8:	mov	r0, r7
   13ccc:	mul	r1, r6, r4
   13cd0:	pop	{r3, r4, r5, r6, r7, lr}
   13cd4:	b	13c08 <close_stdout@@Base+0x2048>
   13cd8:	cmp	r4, #0
   13cdc:	bne	13cc4 <close_stdout@@Base+0x2104>
   13ce0:	mov	r0, #64	; 0x40
   13ce4:	mov	r1, r2
   13ce8:	bl	16150 <close_stdout@@Base+0x4590>
   13cec:	cmp	r0, #0
   13cf0:	movne	r4, r0
   13cf4:	addeq	r4, r0, #1
   13cf8:	b	13cc4 <close_stdout@@Base+0x2104>
   13cfc:	bl	13dc4 <close_stdout@@Base+0x2204>
   13d00:	cmp	r0, #0
   13d04:	push	{r3, lr}
   13d08:	ldr	r3, [r1]
   13d0c:	beq	13d38 <close_stdout@@Base+0x2178>
   13d10:	movw	r2, #43689	; 0xaaa9
   13d14:	movt	r2, #43690	; 0xaaaa
   13d18:	cmp	r3, r2
   13d1c:	addls	r2, r3, #1
   13d20:	addls	r3, r3, r2, lsr #1
   13d24:	bhi	13d50 <close_stdout@@Base+0x2190>
   13d28:	str	r3, [r1]
   13d2c:	mov	r1, r3
   13d30:	pop	{r3, lr}
   13d34:	b	13c08 <close_stdout@@Base+0x2048>
   13d38:	cmp	r3, #0
   13d3c:	moveq	r3, #64	; 0x40
   13d40:	str	r3, [r1]
   13d44:	mov	r1, r3
   13d48:	pop	{r3, lr}
   13d4c:	b	13c08 <close_stdout@@Base+0x2048>
   13d50:	bl	13dc4 <close_stdout@@Base+0x2204>
   13d54:	push	{r4, lr}
   13d58:	mov	r4, r0
   13d5c:	bl	13bb0 <close_stdout@@Base+0x1ff0>
   13d60:	mov	r2, r4
   13d64:	mov	r1, #0
   13d68:	pop	{r4, lr}
   13d6c:	b	11134 <memset@plt>
   13d70:	push	{r3, lr}
   13d74:	bl	10f6c <calloc@plt>
   13d78:	cmp	r0, #0
   13d7c:	popne	{r3, pc}
   13d80:	bl	13dc4 <close_stdout@@Base+0x2204>
   13d84:	push	{r3, r4, r5, lr}
   13d88:	mov	r4, r1
   13d8c:	mov	r5, r0
   13d90:	mov	r0, r1
   13d94:	bl	13bb0 <close_stdout@@Base+0x1ff0>
   13d98:	mov	r1, r5
   13d9c:	mov	r2, r4
   13da0:	pop	{r3, r4, r5, lr}
   13da4:	b	10fc0 <memcpy@plt>
   13da8:	push	{r4, lr}
   13dac:	mov	r4, r0
   13db0:	bl	110f8 <strlen@plt>
   13db4:	add	r1, r0, #1
   13db8:	mov	r0, r4
   13dbc:	pop	{r4, lr}
   13dc0:	b	13d84 <close_stdout@@Base+0x21c4>
   13dc4:	ldr	r3, [pc, #64]	; 13e0c <close_stdout@@Base+0x224c>
   13dc8:	mov	r2, #5
   13dcc:	ldr	ip, [pc, #60]	; 13e10 <close_stdout@@Base+0x2250>
   13dd0:	mov	r0, #0
   13dd4:	add	r3, pc, r3
   13dd8:	ldr	r1, [pc, #52]	; 13e14 <close_stdout@@Base+0x2254>
   13ddc:	push	{r4, lr}
   13de0:	add	r1, pc, r1
   13de4:	ldr	r3, [r3, ip]
   13de8:	ldr	r4, [r3]
   13dec:	bl	10ffc <dcgettext@plt>
   13df0:	ldr	r2, [pc, #32]	; 13e18 <close_stdout@@Base+0x2258>
   13df4:	mov	r1, #0
   13df8:	add	r2, pc, r2
   13dfc:	mov	r3, r0
   13e00:	mov	r0, r4
   13e04:	bl	11080 <error@plt>
   13e08:	bl	111f4 <abort@plt>
   13e0c:	andeq	r3, r1, r4, lsr #4
   13e10:	andeq	r0, r0, ip, lsl r1
   13e14:	andeq	r2, r0, r8, lsl #28
   13e18:	andeq	r2, r0, ip, ror r9
   13e1c:	ldr	ip, [pc, #228]	; 13f08 <close_stdout@@Base+0x2348>
   13e20:	mov	r3, r2
   13e24:	push	{r4, r5, r6, r7, r8, lr}
   13e28:	add	ip, pc, ip
   13e2c:	ldr	r4, [pc, #216]	; 13f0c <close_stdout@@Base+0x234c>
   13e30:	sub	sp, sp, #2000	; 0x7d0
   13e34:	sub	sp, sp, #8
   13e38:	mov	r2, r1
   13e3c:	add	r6, sp, #4
   13e40:	mov	r8, r0
   13e44:	ldr	r5, [ip, r4]
   13e48:	mov	ip, #2000	; 0x7d0
   13e4c:	str	ip, [sp]
   13e50:	mov	r1, sp
   13e54:	mov	r0, r6
   13e58:	ldr	ip, [r5]
   13e5c:	str	ip, [sp, #2004]	; 0x7d4
   13e60:	bl	14568 <close_stdout@@Base+0x29a8>
   13e64:	ldr	r4, [sp]
   13e68:	subs	r7, r0, #0
   13e6c:	beq	13ef4 <close_stdout@@Base+0x2334>
   13e70:	mov	r1, #1
   13e74:	mov	r2, r4
   13e78:	mov	r3, r8
   13e7c:	bl	11038 <fwrite@plt>
   13e80:	cmp	r4, r0
   13e84:	bhi	13ec0 <close_stdout@@Base+0x2300>
   13e88:	cmp	r7, r6
   13e8c:	beq	13e98 <close_stdout@@Base+0x22d8>
   13e90:	mov	r0, r7
   13e94:	bl	10fa8 <free@plt>
   13e98:	cmp	r4, #0
   13e9c:	movge	r0, r4
   13ea0:	blt	13ee8 <close_stdout@@Base+0x2328>
   13ea4:	ldr	r2, [sp, #2004]	; 0x7d4
   13ea8:	ldr	r3, [r5]
   13eac:	cmp	r2, r3
   13eb0:	bne	13f04 <close_stdout@@Base+0x2344>
   13eb4:	add	sp, sp, #2000	; 0x7d0
   13eb8:	add	sp, sp, #8
   13ebc:	pop	{r4, r5, r6, r7, r8, pc}
   13ec0:	cmp	r7, r6
   13ec4:	beq	13efc <close_stdout@@Base+0x233c>
   13ec8:	bl	1111c <__errno_location@plt>
   13ecc:	ldr	r6, [r0]
   13ed0:	mov	r4, r0
   13ed4:	mov	r0, r7
   13ed8:	bl	10fa8 <free@plt>
   13edc:	mvn	r0, #0
   13ee0:	str	r6, [r4]
   13ee4:	b	13ea4 <close_stdout@@Base+0x22e4>
   13ee8:	bl	1111c <__errno_location@plt>
   13eec:	mov	r3, #75	; 0x4b
   13ef0:	str	r3, [r0]
   13ef4:	mov	r0, r8
   13ef8:	bl	14558 <close_stdout@@Base+0x2998>
   13efc:	mvn	r0, #0
   13f00:	b	13ea4 <close_stdout@@Base+0x22e4>
   13f04:	bl	11008 <__stack_chk_fail@plt>
   13f08:	ldrdeq	r3, [r1], -r0
   13f0c:	strdeq	r0, [r0], -ip
   13f10:	push	{r4, r5, r6, lr}
   13f14:	mov	r4, r0
   13f18:	bl	11068 <__fpending@plt>
   13f1c:	mov	r6, r0
   13f20:	mov	r0, r4
   13f24:	ldr	r4, [r4]
   13f28:	bl	143b0 <close_stdout@@Base+0x27f0>
   13f2c:	and	r4, r4, #32
   13f30:	adds	r5, r0, #0
   13f34:	movne	r5, #1
   13f38:	cmp	r4, #0
   13f3c:	bne	13f5c <close_stdout@@Base+0x239c>
   13f40:	cmp	r5, #0
   13f44:	beq	13f54 <close_stdout@@Base+0x2394>
   13f48:	cmp	r6, #0
   13f4c:	beq	13f78 <close_stdout@@Base+0x23b8>
   13f50:	mvn	r4, #0
   13f54:	mov	r0, r4
   13f58:	pop	{r4, r5, r6, pc}
   13f5c:	cmp	r5, #0
   13f60:	bne	13f50 <close_stdout@@Base+0x2390>
   13f64:	bl	1111c <__errno_location@plt>
   13f68:	mvn	r4, #0
   13f6c:	str	r5, [r0]
   13f70:	mov	r0, r4
   13f74:	pop	{r4, r5, r6, pc}
   13f78:	bl	1111c <__errno_location@plt>
   13f7c:	ldr	r4, [r0]
   13f80:	subs	r4, r4, #9
   13f84:	mvnne	r4, #0
   13f88:	mov	r0, r4
   13f8c:	pop	{r4, r5, r6, pc}
   13f90:	ldr	r3, [pc, #984]	; 14370 <close_stdout@@Base+0x27b0>
   13f94:	mov	r0, #14
   13f98:	ldr	r2, [pc, #980]	; 14374 <close_stdout@@Base+0x27b4>
   13f9c:	add	r3, pc, r3
   13fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fa4:	sub	sp, sp, #132	; 0x84
   13fa8:	ldr	r6, [r3, r2]
   13fac:	ldr	r3, [r6]
   13fb0:	str	r3, [sp, #124]	; 0x7c
   13fb4:	bl	111b8 <nl_langinfo@plt>
   13fb8:	subs	r5, r0, #0
   13fbc:	beq	14070 <close_stdout@@Base+0x24b0>
   13fc0:	ldr	r3, [pc, #944]	; 14378 <close_stdout@@Base+0x27b8>
   13fc4:	ldr	r4, [pc, r3]
   13fc8:	cmp	r4, #0
   13fcc:	beq	1407c <close_stdout@@Base+0x24bc>
   13fd0:	ldrb	r7, [r4]
   13fd4:	cmp	r7, #0
   13fd8:	bne	1400c <close_stdout@@Base+0x244c>
   13fdc:	b	14044 <close_stdout@@Base+0x2484>
   13fe0:	mov	r0, r4
   13fe4:	bl	110f8 <strlen@plt>
   13fe8:	add	r0, r0, #1
   13fec:	add	r7, r4, r0
   13ff0:	mov	r0, r7
   13ff4:	bl	110f8 <strlen@plt>
   13ff8:	add	r0, r0, #1
   13ffc:	add	r4, r7, r0
   14000:	ldrb	r7, [r7, r0]
   14004:	cmp	r7, #0
   14008:	beq	14044 <close_stdout@@Base+0x2484>
   1400c:	mov	r0, r5
   14010:	mov	r1, r4
   14014:	bl	10f90 <strcmp@plt>
   14018:	cmp	r0, #0
   1401c:	beq	14034 <close_stdout@@Base+0x2474>
   14020:	cmp	r7, #42	; 0x2a
   14024:	bne	13fe0 <close_stdout@@Base+0x2420>
   14028:	ldrb	r3, [r4, #1]
   1402c:	cmp	r3, #0
   14030:	bne	13fe0 <close_stdout@@Base+0x2420>
   14034:	mov	r0, r4
   14038:	bl	110f8 <strlen@plt>
   1403c:	add	r0, r0, #1
   14040:	add	r5, r4, r0
   14044:	ldrb	r3, [r5]
   14048:	cmp	r3, #0
   1404c:	ldreq	r5, [pc, #808]	; 1437c <close_stdout@@Base+0x27bc>
   14050:	addeq	r5, pc, r5
   14054:	ldr	r2, [sp, #124]	; 0x7c
   14058:	mov	r0, r5
   1405c:	ldr	r3, [r6]
   14060:	cmp	r2, r3
   14064:	bne	14344 <close_stdout@@Base+0x2784>
   14068:	add	sp, sp, #132	; 0x84
   1406c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14070:	ldr	r5, [pc, #776]	; 14380 <close_stdout@@Base+0x27c0>
   14074:	add	r5, pc, r5
   14078:	b	13fc0 <close_stdout@@Base+0x2400>
   1407c:	ldr	r0, [pc, #768]	; 14384 <close_stdout@@Base+0x27c4>
   14080:	add	r0, pc, r0
   14084:	bl	11098 <getenv@plt>
   14088:	subs	r8, r0, #0
   1408c:	beq	1431c <close_stdout@@Base+0x275c>
   14090:	ldrb	r3, [r8]
   14094:	cmp	r3, #0
   14098:	beq	142b0 <close_stdout@@Base+0x26f0>
   1409c:	bl	110f8 <strlen@plt>
   140a0:	subs	sl, r0, #0
   140a4:	subne	r3, sl, #1
   140a8:	bne	142c0 <close_stdout@@Base+0x2700>
   140ac:	mov	r9, #0
   140b0:	mov	fp, r9
   140b4:	add	r9, sl, r9
   140b8:	add	r0, r9, #14
   140bc:	bl	110a4 <malloc@plt>
   140c0:	subs	r7, r0, #0
   140c4:	beq	14310 <close_stdout@@Base+0x2750>
   140c8:	mov	r1, r8
   140cc:	mov	r2, sl
   140d0:	bl	10fc0 <memcpy@plt>
   140d4:	cmp	fp, #0
   140d8:	add	ip, r7, r9
   140dc:	movne	r3, #47	; 0x2f
   140e0:	strbne	r3, [r7, sl]
   140e4:	ldr	r3, [pc, #668]	; 14388 <close_stdout@@Base+0x27c8>
   140e8:	add	r3, pc, r3
   140ec:	ldm	r3!, {r0, r1, r2}
   140f0:	ldrh	r3, [r3]
   140f4:	str	r0, [r7, r9]
   140f8:	mov	r0, r7
   140fc:	str	r1, [ip, #4]
   14100:	mov	r1, #32768	; 0x8000
   14104:	strh	r3, [ip, #12]
   14108:	str	r2, [ip, #8]
   1410c:	bl	1108c <open64@plt>
   14110:	subs	r8, r0, #0
   14114:	blt	142d8 <close_stdout@@Base+0x2718>
   14118:	ldr	r1, [pc, #620]	; 1438c <close_stdout@@Base+0x27cc>
   1411c:	add	r1, pc, r1
   14120:	bl	10f60 <fdopen@plt>
   14124:	subs	fp, r0, #0
   14128:	beq	14330 <close_stdout@@Base+0x2770>
   1412c:	ldr	r0, [pc, #604]	; 14390 <close_stdout@@Base+0x27d0>
   14130:	add	sl, sp, #20
   14134:	add	r9, sp, #72	; 0x48
   14138:	mov	r8, #0
   1413c:	add	r0, pc, r0
   14140:	str	r0, [sp, #12]
   14144:	ldr	r3, [fp, #4]
   14148:	ldr	r2, [fp, #8]
   1414c:	cmp	r3, r2
   14150:	bcs	1423c <close_stdout@@Base+0x267c>
   14154:	add	r2, r3, #1
   14158:	str	r2, [fp, #4]
   1415c:	ldrb	r0, [r3]
   14160:	cmp	r0, #32
   14164:	beq	14144 <close_stdout@@Base+0x2584>
   14168:	sub	r3, r0, #9
   1416c:	cmp	r3, #1
   14170:	bls	14144 <close_stdout@@Base+0x2584>
   14174:	cmp	r0, #35	; 0x23
   14178:	beq	14250 <close_stdout@@Base+0x2690>
   1417c:	mov	r1, fp
   14180:	bl	11110 <ungetc@plt>
   14184:	mov	r0, fp
   14188:	ldr	r1, [sp, #12]
   1418c:	mov	r2, sl
   14190:	mov	r3, r9
   14194:	bl	11140 <fscanf@plt>
   14198:	cmp	r0, #1
   1419c:	ble	14280 <close_stdout@@Base+0x26c0>
   141a0:	mov	r0, sl
   141a4:	bl	110f8 <strlen@plt>
   141a8:	str	r0, [sp, #8]
   141ac:	mov	r0, r9
   141b0:	bl	110f8 <strlen@plt>
   141b4:	cmp	r8, #0
   141b8:	mov	r2, r0
   141bc:	bne	142e4 <close_stdout@@Base+0x2724>
   141c0:	ldr	r3, [sp, #8]
   141c4:	str	r2, [sp]
   141c8:	add	r8, r0, r3
   141cc:	add	r0, r8, #3
   141d0:	add	r8, r8, #2
   141d4:	bl	110a4 <malloc@plt>
   141d8:	ldr	r2, [sp]
   141dc:	mov	r3, r0
   141e0:	cmp	r3, #0
   141e4:	beq	14348 <close_stdout@@Base+0x2788>
   141e8:	ldr	r0, [sp, #8]
   141ec:	movw	r1, #65534	; 0xfffe
   141f0:	movt	r1, #65535	; 0xffff
   141f4:	rsb	r2, r2, r8
   141f8:	rsb	r1, r0, r1
   141fc:	stm	sp, {r2, r3}
   14200:	add	r0, r1, r2
   14204:	mov	r1, sl
   14208:	add	r0, r3, r0
   1420c:	mov	r4, r3
   14210:	bl	1105c <strcpy@plt>
   14214:	ldr	r2, [sp]
   14218:	ldr	r3, [sp, #4]
   1421c:	mov	r1, r9
   14220:	sub	r0, r2, #1
   14224:	add	r0, r3, r0
   14228:	bl	1105c <strcpy@plt>
   1422c:	ldr	r3, [fp, #4]
   14230:	ldr	r2, [fp, #8]
   14234:	cmp	r3, r2
   14238:	bcc	14154 <close_stdout@@Base+0x2594>
   1423c:	mov	r0, fp
   14240:	bl	11188 <__uflow@plt>
   14244:	cmn	r0, #1
   14248:	beq	14280 <close_stdout@@Base+0x26c0>
   1424c:	b	14160 <close_stdout@@Base+0x25a0>
   14250:	ldr	r3, [fp, #4]
   14254:	ldr	r2, [fp, #8]
   14258:	cmp	r3, r2
   1425c:	bcs	14364 <close_stdout@@Base+0x27a4>
   14260:	add	r2, r3, #1
   14264:	str	r2, [fp, #4]
   14268:	ldrb	r0, [r3]
   1426c:	cmp	r0, #10
   14270:	cmnne	r0, #1
   14274:	bne	14250 <close_stdout@@Base+0x2690>
   14278:	cmn	r0, #1
   1427c:	bne	14144 <close_stdout@@Base+0x2584>
   14280:	mov	r0, fp
   14284:	bl	143b0 <close_stdout@@Base+0x27f0>
   14288:	cmp	r8, #0
   1428c:	beq	142d8 <close_stdout@@Base+0x2718>
   14290:	mov	r3, #0
   14294:	strb	r3, [r4, r8]
   14298:	mov	r0, r7
   1429c:	bl	10fa8 <free@plt>
   142a0:	ldr	r3, [pc, #236]	; 14394 <close_stdout@@Base+0x27d4>
   142a4:	add	r3, pc, r3
   142a8:	str	r4, [r3]
   142ac:	b	13fd0 <close_stdout@@Base+0x2410>
   142b0:	ldr	r8, [pc, #224]	; 14398 <close_stdout@@Base+0x27d8>
   142b4:	mov	r3, #7
   142b8:	mov	sl, #8
   142bc:	add	r8, pc, r8
   142c0:	ldrb	r3, [r8, r3]
   142c4:	cmp	r3, #47	; 0x2f
   142c8:	movne	r9, #1
   142cc:	movne	fp, r9
   142d0:	bne	140b4 <close_stdout@@Base+0x24f4>
   142d4:	b	140ac <close_stdout@@Base+0x24ec>
   142d8:	ldr	r4, [pc, #188]	; 1439c <close_stdout@@Base+0x27dc>
   142dc:	add	r4, pc, r4
   142e0:	b	14298 <close_stdout@@Base+0x26d8>
   142e4:	ldr	r0, [sp, #8]
   142e8:	str	r2, [sp]
   142ec:	add	r3, r0, r2
   142f0:	mov	r0, r4
   142f4:	add	r8, r3, r8
   142f8:	add	r1, r8, #3
   142fc:	add	r8, r8, #2
   14300:	bl	11014 <realloc@plt>
   14304:	ldr	r2, [sp]
   14308:	mov	r3, r0
   1430c:	b	141e0 <close_stdout@@Base+0x2620>
   14310:	ldr	r4, [pc, #136]	; 143a0 <close_stdout@@Base+0x27e0>
   14314:	add	r4, pc, r4
   14318:	b	142a0 <close_stdout@@Base+0x26e0>
   1431c:	ldr	r8, [pc, #128]	; 143a4 <close_stdout@@Base+0x27e4>
   14320:	mov	r3, #7
   14324:	mov	sl, #8
   14328:	add	r8, pc, r8
   1432c:	b	142c0 <close_stdout@@Base+0x2700>
   14330:	ldr	r4, [pc, #112]	; 143a8 <close_stdout@@Base+0x27e8>
   14334:	mov	r0, r8
   14338:	add	r4, pc, r4
   1433c:	bl	11200 <close@plt>
   14340:	b	14298 <close_stdout@@Base+0x26d8>
   14344:	bl	11008 <__stack_chk_fail@plt>
   14348:	mov	r0, r4
   1434c:	ldr	r4, [pc, #88]	; 143ac <close_stdout@@Base+0x27ec>
   14350:	bl	10fa8 <free@plt>
   14354:	mov	r0, fp
   14358:	add	r4, pc, r4
   1435c:	bl	143b0 <close_stdout@@Base+0x27f0>
   14360:	b	14298 <close_stdout@@Base+0x26d8>
   14364:	mov	r0, fp
   14368:	bl	11188 <__uflow@plt>
   1436c:	b	1426c <close_stdout@@Base+0x26ac>
   14370:	andeq	r3, r1, ip, asr r0
   14374:	strdeq	r0, [r0], -ip
   14378:	strdeq	r3, [r1], -r0
   1437c:			; <UNDEFINED> instruction: 0x00002bb8
   14380:	andeq	r2, r0, r8, lsr #13
   14384:	muleq	r0, r0, fp
   14388:	andeq	r2, r0, r8, lsr fp
   1438c:	andeq	r2, r0, ip, lsl r6
   14390:	strdeq	r2, [r0], -r4
   14394:	andeq	r3, r1, r0, lsl r0
   14398:	andeq	r2, r0, r0, asr #18
   1439c:	andeq	r2, r0, r0, asr #8
   143a0:	andeq	r2, r0, r8, lsl #8
   143a4:	ldrdeq	r2, [r0], -r4
   143a8:	andeq	r2, r0, r4, ror #7
   143ac:	andeq	r2, r0, r4, asr #7
   143b0:	push	{r4, r5, r6, lr}
   143b4:	sub	sp, sp, #8
   143b8:	mov	r4, r0
   143bc:	bl	11158 <fileno@plt>
   143c0:	cmp	r0, #0
   143c4:	mov	r0, r4
   143c8:	blt	14444 <close_stdout@@Base+0x2884>
   143cc:	bl	110bc <__freading@plt>
   143d0:	cmp	r0, #0
   143d4:	bne	14410 <close_stdout@@Base+0x2850>
   143d8:	mov	r0, r4
   143dc:	bl	14450 <close_stdout@@Base+0x2890>
   143e0:	cmp	r0, #0
   143e4:	beq	14440 <close_stdout@@Base+0x2880>
   143e8:	bl	1111c <__errno_location@plt>
   143ec:	ldr	r6, [r0]
   143f0:	mov	r5, r0
   143f4:	mov	r0, r4
   143f8:	bl	11170 <fclose@plt>
   143fc:	cmp	r6, #0
   14400:	mvnne	r0, #0
   14404:	strne	r6, [r5]
   14408:	add	sp, sp, #8
   1440c:	pop	{r4, r5, r6, pc}
   14410:	mov	r0, r4
   14414:	bl	11158 <fileno@plt>
   14418:	mov	r1, #1
   1441c:	mov	r2, #0
   14420:	mov	r3, #0
   14424:	str	r1, [sp]
   14428:	bl	11044 <lseek64@plt>
   1442c:	mvn	r2, #0
   14430:	mvn	r3, #0
   14434:	cmp	r1, r3
   14438:	cmpeq	r0, r2
   1443c:	bne	143d8 <close_stdout@@Base+0x2818>
   14440:	mov	r0, r4
   14444:	add	sp, sp, #8
   14448:	pop	{r4, r5, r6, lr}
   1444c:	b	11170 <fclose@plt>
   14450:	push	{r4, lr}
   14454:	subs	r4, r0, #0
   14458:	sub	sp, sp, #8
   1445c:	beq	1446c <close_stdout@@Base+0x28ac>
   14460:	bl	110bc <__freading@plt>
   14464:	cmp	r0, #0
   14468:	bne	1447c <close_stdout@@Base+0x28bc>
   1446c:	mov	r0, r4
   14470:	add	sp, sp, #8
   14474:	pop	{r4, lr}
   14478:	b	10f9c <fflush@plt>
   1447c:	ldr	r3, [r4]
   14480:	tst	r3, #256	; 0x100
   14484:	beq	1446c <close_stdout@@Base+0x28ac>
   14488:	mov	r3, #1
   1448c:	mov	r0, r4
   14490:	str	r3, [sp]
   14494:	mov	r2, #0
   14498:	mov	r3, #0
   1449c:	bl	144b0 <close_stdout@@Base+0x28f0>
   144a0:	mov	r0, r4
   144a4:	add	sp, sp, #8
   144a8:	pop	{r4, lr}
   144ac:	b	10f9c <fflush@plt>
   144b0:	push	{r4, r5, r6, r7, lr}
   144b4:	sub	sp, sp, #20
   144b8:	ldmib	r0, {r1, ip}
   144bc:	mov	r6, r0
   144c0:	ldr	r4, [sp, #40]	; 0x28
   144c4:	cmp	ip, r1
   144c8:	beq	144e0 <close_stdout@@Base+0x2920>
   144cc:	str	r4, [sp, #40]	; 0x28
   144d0:	mov	r0, r6
   144d4:	add	sp, sp, #20
   144d8:	pop	{r4, r5, r6, r7, lr}
   144dc:	b	1117c <fseeko64@plt>
   144e0:	ldr	ip, [r0, #20]
   144e4:	ldr	r1, [r0, #16]
   144e8:	cmp	ip, r1
   144ec:	bne	144cc <close_stdout@@Base+0x290c>
   144f0:	ldr	r7, [r0, #36]	; 0x24
   144f4:	cmp	r7, #0
   144f8:	bne	144cc <close_stdout@@Base+0x290c>
   144fc:	str	r2, [sp, #12]
   14500:	mvn	r5, #0
   14504:	str	r3, [sp, #8]
   14508:	bl	11158 <fileno@plt>
   1450c:	str	r4, [sp]
   14510:	mvn	r4, #0
   14514:	ldr	r2, [sp, #12]
   14518:	ldr	r3, [sp, #8]
   1451c:	bl	11044 <lseek64@plt>
   14520:	mov	r2, r0
   14524:	mov	r3, r1
   14528:	cmp	r3, r5
   1452c:	cmpeq	r2, r4
   14530:	beq	14550 <close_stdout@@Base+0x2990>
   14534:	ldr	r1, [r6]
   14538:	mov	r0, r7
   1453c:	strd	r2, [r6, #80]	; 0x50
   14540:	bic	r3, r1, #16
   14544:	str	r3, [r6]
   14548:	add	sp, sp, #20
   1454c:	pop	{r4, r5, r6, r7, pc}
   14550:	mvn	r0, #0
   14554:	b	14548 <close_stdout@@Base+0x2988>
   14558:	ldr	r3, [r0]
   1455c:	orr	r3, r3, #32
   14560:	str	r3, [r0]
   14564:	bx	lr
   14568:	ldr	ip, [pc, #3636]	; 153a4 <close_stdout@@Base+0x37e4>
   1456c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14570:	add	fp, sp, #32
   14574:	ldr	lr, [pc, #3628]	; 153a8 <close_stdout@@Base+0x37e8>
   14578:	sub	sp, sp, #564	; 0x234
   1457c:	add	ip, pc, ip
   14580:	str	r0, [fp, #-504]	; 0xfffffe08
   14584:	sub	r4, fp, #484	; 0x1e4
   14588:	str	r1, [fp, #-536]	; 0xfffffde8
   1458c:	mov	r0, r2
   14590:	ldr	lr, [ip, lr]
   14594:	mov	r5, r2
   14598:	sub	r1, fp, #364	; 0x16c
   1459c:	mov	r2, r4
   145a0:	mov	r6, r3
   145a4:	ldr	ip, [lr]
   145a8:	str	lr, [fp, #-528]	; 0xfffffdf0
   145ac:	str	ip, [fp, #-40]	; 0xffffffd8
   145b0:	bl	154fc <close_stdout@@Base+0x393c>
   145b4:	cmp	r0, #0
   145b8:	blt	150a8 <close_stdout@@Base+0x34e8>
   145bc:	mov	r0, r6
   145c0:	mov	r1, r4
   145c4:	bl	153ac <close_stdout@@Base+0x37ec>
   145c8:	cmp	r0, #0
   145cc:	blt	15168 <close_stdout@@Base+0x35a8>
   145d0:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   145d4:	ldr	r2, [fp, #-352]	; 0xfffffea0
   145d8:	add	r3, r3, #7
   145dc:	cmp	r3, #6
   145e0:	mvnls	r3, #0
   145e4:	adds	r3, r3, r2
   145e8:	bcs	14904 <close_stdout@@Base+0x2d44>
   145ec:	adds	r0, r3, #6
   145f0:	bcs	14904 <close_stdout@@Base+0x2d44>
   145f4:	cmp	r0, #4000	; 0xfa0
   145f8:	bcs	1504c <close_stdout@@Base+0x348c>
   145fc:	add	r3, r3, #20
   14600:	mov	r1, #0
   14604:	bic	r3, r3, #7
   14608:	str	r1, [fp, #-548]	; 0xfffffddc
   1460c:	sub	sp, sp, r3
   14610:	add	r2, sp, #32
   14614:	str	r2, [fp, #-512]	; 0xfffffe00
   14618:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1461c:	sub	r2, fp, #496	; 0x1f0
   14620:	str	r2, [fp, #-532]	; 0xfffffdec
   14624:	mov	ip, #0
   14628:	cmp	r3, #0
   1462c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   14630:	ldr	r2, [fp, #-504]	; 0xfffffe08
   14634:	mov	r6, ip
   14638:	ldrne	r1, [fp, #-536]	; 0xfffffde8
   1463c:	add	r7, r3, #44	; 0x2c
   14640:	ldreq	r4, [fp, #-504]	; 0xfffffe08
   14644:	str	ip, [fp, #-520]	; 0xfffffdf8
   14648:	ldrne	r4, [r1]
   1464c:	ldr	sl, [r7, #-44]	; 0xffffffd4
   14650:	sub	r3, r7, #44	; 0x2c
   14654:	str	r3, [fp, #-540]	; 0xfffffde4
   14658:	cmp	sl, r5
   1465c:	beq	14f18 <close_stdout@@Base+0x3358>
   14660:	rsb	r3, r5, sl
   14664:	adds	r9, r3, r6
   14668:	mvncs	r9, #0
   1466c:	cmp	r4, r9
   14670:	bcs	14ea8 <close_stdout@@Base+0x32e8>
   14674:	cmp	r4, #0
   14678:	beq	14d74 <close_stdout@@Base+0x31b4>
   1467c:	blt	151a4 <close_stdout@@Base+0x35e4>
   14680:	lsl	r4, r4, #1
   14684:	cmp	r4, r9
   14688:	movcc	r4, r9
   1468c:	cmn	r4, #1
   14690:	beq	151a4 <close_stdout@@Base+0x35e4>
   14694:	ldr	r1, [fp, #-504]	; 0xfffffe08
   14698:	subs	lr, r2, r1
   1469c:	rsbs	r8, lr, #0
   146a0:	adcs	r8, r8, lr
   146a4:	cmp	r2, r1
   146a8:	cmpne	r2, #0
   146ac:	bne	14d7c <close_stdout@@Base+0x31bc>
   146b0:	mov	r0, r4
   146b4:	str	r2, [fp, #-560]	; 0xfffffdd0
   146b8:	str	r3, [fp, #-556]	; 0xfffffdd4
   146bc:	bl	110a4 <malloc@plt>
   146c0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   146c4:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   146c8:	mov	sl, r0
   146cc:	cmp	sl, #0
   146d0:	beq	151a4 <close_stdout@@Base+0x35e4>
   146d4:	cmp	r6, #0
   146d8:	moveq	r8, #0
   146dc:	andne	r8, r8, #1
   146e0:	cmp	r8, #0
   146e4:	bne	14efc <close_stdout@@Base+0x333c>
   146e8:	add	r0, sl, r6
   146ec:	mov	r1, r5
   146f0:	mov	r2, r3
   146f4:	bl	10fc0 <memcpy@plt>
   146f8:	ldr	r3, [fp, #-364]	; 0xfffffe94
   146fc:	ldr	r2, [fp, #-520]	; 0xfffffdf8
   14700:	cmp	r3, r2
   14704:	beq	151b8 <close_stdout@@Base+0x35f8>
   14708:	ldrb	r3, [r7, #-8]
   1470c:	cmp	r3, #37	; 0x25
   14710:	beq	14da0 <close_stdout@@Base+0x31e0>
   14714:	ldr	r2, [r7, #-4]
   14718:	cmn	r2, #1
   1471c:	beq	15088 <close_stdout@@Base+0x34c8>
   14720:	cmp	r3, #110	; 0x6e
   14724:	beq	14ecc <close_stdout@@Base+0x330c>
   14728:	ldr	r1, [fp, #-480]	; 0xfffffe20
   1472c:	ldr	r3, [r7, #-36]	; 0xffffffdc
   14730:	ldr	r8, [r1, r2, lsl #4]
   14734:	tst	r3, #1
   14738:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1473c:	mov	r2, #37	; 0x25
   14740:	addeq	r5, r1, #1
   14744:	strb	r2, [r1]
   14748:	ldrne	r2, [fp, #-512]	; 0xfffffe00
   1474c:	ldrne	r1, [fp, #-512]	; 0xfffffe00
   14750:	addne	r5, r2, #2
   14754:	movne	r2, #39	; 0x27
   14758:	strbne	r2, [r1, #1]
   1475c:	tst	r3, #2
   14760:	movne	r2, #45	; 0x2d
   14764:	strbne	r2, [r5]
   14768:	addne	r5, r5, #1
   1476c:	tst	r3, #4
   14770:	movne	r2, #43	; 0x2b
   14774:	strbne	r2, [r5]
   14778:	addne	r5, r5, #1
   1477c:	tst	r3, #8
   14780:	movne	r2, #32
   14784:	strbne	r2, [r5]
   14788:	addne	r5, r5, #1
   1478c:	tst	r3, #16
   14790:	movne	r2, #35	; 0x23
   14794:	strbne	r2, [r5]
   14798:	addne	r5, r5, #1
   1479c:	tst	r3, #64	; 0x40
   147a0:	movne	r2, #73	; 0x49
   147a4:	strbne	r2, [r5]
   147a8:	addne	r5, r5, #1
   147ac:	tst	r3, #32
   147b0:	movne	r3, #48	; 0x30
   147b4:	strbne	r3, [r5]
   147b8:	ldr	r1, [r7, #-32]	; 0xffffffe0
   147bc:	addne	r5, r5, #1
   147c0:	ldr	r2, [r7, #-28]	; 0xffffffe4
   147c4:	cmp	r1, r2
   147c8:	beq	147dc <close_stdout@@Base+0x2c1c>
   147cc:	rsb	r2, r1, r2
   147d0:	mov	r0, r5
   147d4:	add	r5, r5, r2
   147d8:	bl	10fc0 <memcpy@plt>
   147dc:	ldr	r1, [r7, #-20]	; 0xffffffec
   147e0:	ldr	r2, [r7, #-16]
   147e4:	cmp	r1, r2
   147e8:	beq	147fc <close_stdout@@Base+0x2c3c>
   147ec:	rsb	r2, r1, r2
   147f0:	mov	r0, r5
   147f4:	add	r5, r5, r2
   147f8:	bl	10fc0 <memcpy@plt>
   147fc:	sub	r3, r8, #7
   14800:	cmp	r3, #9
   14804:	bhi	1482c <close_stdout@@Base+0x2c6c>
   14808:	mov	r2, #1
   1480c:	lsl	r3, r2, r3
   14810:	movw	r2, #643	; 0x283
   14814:	and	r2, r3, r2
   14818:	cmp	r2, #0
   1481c:	beq	14f24 <close_stdout@@Base+0x3364>
   14820:	mov	r3, #108	; 0x6c
   14824:	add	r5, r5, #1
   14828:	strb	r3, [r5, #-1]
   1482c:	ldrb	r3, [r7, #-8]
   14830:	mov	r1, #0
   14834:	strb	r1, [r5, #1]
   14838:	strb	r3, [r5]
   1483c:	ldr	r3, [r7, #-24]	; 0xffffffe8
   14840:	cmn	r3, #1
   14844:	beq	15044 <close_stdout@@Base+0x3484>
   14848:	ldr	r2, [fp, #-480]	; 0xfffffe20
   1484c:	add	r1, r2, r3, lsl #4
   14850:	ldr	r3, [r2, r3, lsl #4]
   14854:	cmp	r3, #5
   14858:	bne	15088 <close_stdout@@Base+0x34c8>
   1485c:	ldr	r3, [r1, #8]
   14860:	mov	r6, #1
   14864:	str	r3, [fp, #-492]	; 0xfffffe14
   14868:	ldr	r3, [r7, #-12]
   1486c:	cmn	r3, #1
   14870:	beq	1489c <close_stdout@@Base+0x2cdc>
   14874:	ldr	r2, [fp, #-480]	; 0xfffffe20
   14878:	add	r1, r2, r3, lsl #4
   1487c:	ldr	r3, [r2, r3, lsl #4]
   14880:	cmp	r3, #5
   14884:	bne	15088 <close_stdout@@Base+0x34c8>
   14888:	ldr	r2, [r1, #8]
   1488c:	sub	r1, fp, #36	; 0x24
   14890:	add	r3, r1, r6, lsl #2
   14894:	add	r6, r6, #1
   14898:	str	r2, [r3, #-456]	; 0xfffffe38
   1489c:	adds	r2, r9, #2
   148a0:	str	r2, [fp, #-524]	; 0xfffffdf4
   148a4:	mov	r3, r2
   148a8:	mvncs	r3, #0
   148ac:	cmp	r4, r3
   148b0:	bcs	149ec <close_stdout@@Base+0x2e2c>
   148b4:	cmp	r4, #0
   148b8:	beq	14964 <close_stdout@@Base+0x2da4>
   148bc:	blt	15390 <close_stdout@@Base+0x37d0>
   148c0:	cmp	r9, r2
   148c4:	lsl	r4, r4, #1
   148c8:	bls	14974 <close_stdout@@Base+0x2db4>
   148cc:	str	sl, [fp, #-560]	; 0xfffffdd0
   148d0:	bl	1111c <__errno_location@plt>
   148d4:	str	r0, [fp, #-516]	; 0xfffffdfc
   148d8:	mov	r2, sl
   148dc:	ldr	r3, [fp, #-504]	; 0xfffffe08
   148e0:	cmp	r2, #0
   148e4:	cmpne	r2, r3
   148e8:	bne	15330 <close_stdout@@Base+0x3770>
   148ec:	ldr	r1, [fp, #-548]	; 0xfffffddc
   148f0:	cmp	r1, #0
   148f4:	beq	14904 <close_stdout@@Base+0x2d44>
   148f8:	mov	r0, r1
   148fc:	bl	10fa8 <free@plt>
   14900:	b	1490c <close_stdout@@Base+0x2d4c>
   14904:	bl	1111c <__errno_location@plt>
   14908:	str	r0, [fp, #-516]	; 0xfffffdfc
   1490c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   14910:	sub	r3, fp, #348	; 0x15c
   14914:	cmp	r0, r3
   14918:	beq	14920 <close_stdout@@Base+0x2d60>
   1491c:	bl	10fa8 <free@plt>
   14920:	ldr	r0, [fp, #-480]	; 0xfffffe20
   14924:	sub	r3, fp, #476	; 0x1dc
   14928:	cmp	r0, r3
   1492c:	beq	14934 <close_stdout@@Base+0x2d74>
   14930:	bl	10fa8 <free@plt>
   14934:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   14938:	mov	r3, #0
   1493c:	mov	r2, #12
   14940:	str	r2, [r1]
   14944:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   14948:	mov	r0, r3
   1494c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14950:	ldr	r3, [r1]
   14954:	cmp	r2, r3
   14958:	bne	1538c <close_stdout@@Base+0x37cc>
   1495c:	sub	sp, fp, #32
   14960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14964:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   14968:	cmp	r9, r3
   1496c:	bhi	148cc <close_stdout@@Base+0x2d0c>
   14970:	mov	r4, #12
   14974:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   14978:	cmp	r3, r4
   1497c:	movcs	r4, r3
   14980:	cmn	r4, #1
   14984:	beq	148cc <close_stdout@@Base+0x2d0c>
   14988:	ldr	r1, [fp, #-504]	; 0xfffffe08
   1498c:	subs	r0, sl, r1
   14990:	rsbs	r2, r0, #0
   14994:	adcs	r2, r2, r0
   14998:	cmp	sl, r1
   1499c:	cmpne	sl, #0
   149a0:	bne	1506c <close_stdout@@Base+0x34ac>
   149a4:	mov	r0, r4
   149a8:	str	r2, [fp, #-560]	; 0xfffffdd0
   149ac:	bl	110a4 <malloc@plt>
   149b0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   149b4:	mov	r3, r0
   149b8:	cmp	r3, #0
   149bc:	beq	148cc <close_stdout@@Base+0x2d0c>
   149c0:	cmp	r9, #0
   149c4:	moveq	r2, #0
   149c8:	andne	r2, r2, #1
   149cc:	cmp	r2, #0
   149d0:	moveq	sl, r3
   149d4:	beq	149ec <close_stdout@@Base+0x2e2c>
   149d8:	mov	r1, sl
   149dc:	mov	r0, r3
   149e0:	mov	r2, r9
   149e4:	mov	sl, r3
   149e8:	bl	10fc0 <memcpy@plt>
   149ec:	mov	r2, #0
   149f0:	strb	r2, [sl, r9]
   149f4:	sub	r8, r8, #1
   149f8:	str	r8, [fp, #-508]	; 0xfffffe04
   149fc:	bl	1111c <__errno_location@plt>
   14a00:	rsb	ip, r9, r4
   14a04:	str	r5, [fp, #-544]	; 0xfffffde0
   14a08:	mov	r5, ip
   14a0c:	ldr	r3, [r0]
   14a10:	str	r0, [fp, #-516]	; 0xfffffdfc
   14a14:	str	r3, [fp, #-552]	; 0xfffffdd8
   14a18:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   14a1c:	mvn	r1, #0
   14a20:	cmp	r5, #0
   14a24:	str	r1, [fp, #-496]	; 0xfffffe10
   14a28:	ldr	r1, [fp, #-508]	; 0xfffffe04
   14a2c:	mov	r3, #0
   14a30:	movge	r8, r5
   14a34:	mvnlt	r8, #-2147483648	; 0x80000000
   14a38:	str	r3, [r2]
   14a3c:	cmp	r1, #16
   14a40:	addls	pc, pc, r1, lsl #2
   14a44:	b	15088 <close_stdout@@Base+0x34c8>
   14a48:	b	14f7c <close_stdout@@Base+0x33bc>
   14a4c:	b	14e5c <close_stdout@@Base+0x329c>
   14a50:	b	14f60 <close_stdout@@Base+0x33a0>
   14a54:	b	14f44 <close_stdout@@Base+0x3384>
   14a58:	b	14a8c <close_stdout@@Base+0x2ecc>
   14a5c:	b	14a8c <close_stdout@@Base+0x2ecc>
   14a60:	b	14a8c <close_stdout@@Base+0x2ecc>
   14a64:	b	14a8c <close_stdout@@Base+0x2ecc>
   14a68:	b	14be4 <close_stdout@@Base+0x3024>
   14a6c:	b	14be4 <close_stdout@@Base+0x3024>
   14a70:	b	14c40 <close_stdout@@Base+0x3080>
   14a74:	b	14c40 <close_stdout@@Base+0x3080>
   14a78:	b	14a8c <close_stdout@@Base+0x2ecc>
   14a7c:	b	14a8c <close_stdout@@Base+0x2ecc>
   14a80:	b	14a8c <close_stdout@@Base+0x2ecc>
   14a84:	b	14a8c <close_stdout@@Base+0x2ecc>
   14a88:	b	14a8c <close_stdout@@Base+0x2ecc>
   14a8c:	ldr	r2, [r7, #-4]
   14a90:	cmp	r6, #1
   14a94:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14a98:	add	r3, r3, r2, lsl #4
   14a9c:	ldr	r3, [r3, #8]
   14aa0:	beq	14e74 <close_stdout@@Base+0x32b4>
   14aa4:	cmp	r6, #2
   14aa8:	bne	14c9c <close_stdout@@Base+0x30dc>
   14aac:	ldr	r2, [fp, #-512]	; 0xfffffe00
   14ab0:	add	r0, sl, r9
   14ab4:	ldr	lr, [fp, #-492]	; 0xfffffe14
   14ab8:	mov	r1, r8
   14abc:	ldr	ip, [fp, #-488]	; 0xfffffe18
   14ac0:	str	r2, [sp]
   14ac4:	mov	r2, #1
   14ac8:	str	r3, [sp, #12]
   14acc:	sub	r3, fp, #496	; 0x1f0
   14ad0:	str	lr, [sp, #4]
   14ad4:	str	r3, [sp, #16]
   14ad8:	mvn	r3, #0
   14adc:	str	ip, [sp, #8]
   14ae0:	bl	11218 <__snprintf_chk@plt>
   14ae4:	ldr	r3, [fp, #-496]	; 0xfffffe10
   14ae8:	cmp	r3, #0
   14aec:	blt	14cd0 <close_stdout@@Base+0x3110>
   14af0:	cmp	r8, r3
   14af4:	bls	14b08 <close_stdout@@Base+0x2f48>
   14af8:	add	r2, sl, r3
   14afc:	ldrb	r2, [r2, r9]
   14b00:	cmp	r2, #0
   14b04:	bne	15088 <close_stdout@@Base+0x34c8>
   14b08:	cmp	r0, r3
   14b0c:	movle	r0, r3
   14b10:	ble	14b18 <close_stdout@@Base+0x2f58>
   14b14:	str	r0, [fp, #-496]	; 0xfffffe10
   14b18:	add	r3, r0, #1
   14b1c:	cmp	r8, r3
   14b20:	bhi	152b8 <close_stdout@@Base+0x36f8>
   14b24:	cmn	r8, #-2147483647	; 0x80000001
   14b28:	beq	152d0 <close_stdout@@Base+0x3710>
   14b2c:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   14b30:	add	r0, r0, r2
   14b34:	cmp	r9, r0
   14b38:	mvnhi	r0, #0
   14b3c:	cmp	r4, #0
   14b40:	mvnlt	r0, #0
   14b44:	blt	14b54 <close_stdout@@Base+0x2f94>
   14b48:	lsl	r3, r4, #1
   14b4c:	cmp	r0, r3
   14b50:	movcc	r0, r3
   14b54:	cmp	r4, r0
   14b58:	bcs	14a18 <close_stdout@@Base+0x2e58>
   14b5c:	cmp	r4, #0
   14b60:	beq	14eb0 <close_stdout@@Base+0x32f0>
   14b64:	blt	148d8 <close_stdout@@Base+0x2d18>
   14b68:	lsl	r4, r4, #1
   14b6c:	cmp	r4, r0
   14b70:	movcc	r4, r0
   14b74:	cmn	r4, #1
   14b78:	beq	148d8 <close_stdout@@Base+0x2d18>
   14b7c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14b80:	subs	r2, sl, r3
   14b84:	rsbs	r5, r2, #0
   14b88:	adcs	r5, r5, r2
   14b8c:	cmp	sl, r3
   14b90:	cmpne	sl, #0
   14b94:	bne	14eb8 <close_stdout@@Base+0x32f8>
   14b98:	mov	r0, r4
   14b9c:	bl	110a4 <malloc@plt>
   14ba0:	mov	r3, r0
   14ba4:	cmp	r3, #0
   14ba8:	beq	148d8 <close_stdout@@Base+0x2d18>
   14bac:	cmp	r9, #0
   14bb0:	moveq	r5, #0
   14bb4:	andne	r5, r5, #1
   14bb8:	cmp	r5, #0
   14bbc:	rsbeq	r5, r9, r4
   14bc0:	moveq	sl, r3
   14bc4:	beq	14a18 <close_stdout@@Base+0x2e58>
   14bc8:	mov	r1, sl
   14bcc:	mov	r0, r3
   14bd0:	mov	r2, r9
   14bd4:	mov	sl, r3
   14bd8:	rsb	r5, r9, r4
   14bdc:	bl	10fc0 <memcpy@plt>
   14be0:	b	14a18 <close_stdout@@Base+0x2e58>
   14be4:	ldr	r2, [r7, #-4]
   14be8:	cmp	r6, #1
   14bec:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14bf0:	add	r3, r3, r2, lsl #4
   14bf4:	ldrd	r2, [r3, #8]
   14bf8:	beq	15010 <close_stdout@@Base+0x3450>
   14bfc:	cmp	r6, #2
   14c00:	bne	150ec <close_stdout@@Base+0x352c>
   14c04:	ldr	r1, [fp, #-512]	; 0xfffffe00
   14c08:	add	r0, sl, r9
   14c0c:	ldr	lr, [fp, #-492]	; 0xfffffe14
   14c10:	ldr	ip, [fp, #-488]	; 0xfffffe18
   14c14:	strd	r2, [sp, #16]
   14c18:	sub	r2, fp, #496	; 0x1f0
   14c1c:	str	r1, [sp]
   14c20:	mvn	r3, #0
   14c24:	str	r2, [sp, #24]
   14c28:	mov	r1, r8
   14c2c:	mov	r2, #1
   14c30:	str	lr, [sp, #4]
   14c34:	str	ip, [sp, #8]
   14c38:	bl	11218 <__snprintf_chk@plt>
   14c3c:	b	14ae4 <close_stdout@@Base+0x2f24>
   14c40:	ldr	r2, [r7, #-4]
   14c44:	cmp	r6, #1
   14c48:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14c4c:	add	r3, r3, r2, lsl #4
   14c50:	ldrd	r0, [r3, #8]
   14c54:	beq	14fdc <close_stdout@@Base+0x341c>
   14c58:	cmp	r6, #2
   14c5c:	bne	150c0 <close_stdout@@Base+0x3500>
   14c60:	ldr	r3, [fp, #-492]	; 0xfffffe14
   14c64:	ldr	r2, [fp, #-512]	; 0xfffffe00
   14c68:	ldr	lr, [fp, #-488]	; 0xfffffe18
   14c6c:	strd	r0, [sp, #16]
   14c70:	add	r0, sl, r9
   14c74:	str	r2, [sp]
   14c78:	mov	r1, r8
   14c7c:	sub	r2, fp, #496	; 0x1f0
   14c80:	str	r3, [sp, #4]
   14c84:	str	r2, [sp, #24]
   14c88:	mvn	r3, #0
   14c8c:	mov	r2, #1
   14c90:	str	lr, [sp, #8]
   14c94:	bl	11218 <__snprintf_chk@plt>
   14c98:	b	14ae4 <close_stdout@@Base+0x2f24>
   14c9c:	ldr	r1, [fp, #-512]	; 0xfffffe00
   14ca0:	sub	r2, fp, #496	; 0x1f0
   14ca4:	str	r3, [sp, #4]
   14ca8:	add	r0, sl, r9
   14cac:	str	r2, [sp, #8]
   14cb0:	mvn	r3, #0
   14cb4:	str	r1, [sp]
   14cb8:	mov	r2, #1
   14cbc:	mov	r1, r8
   14cc0:	bl	11218 <__snprintf_chk@plt>
   14cc4:	ldr	r3, [fp, #-496]	; 0xfffffe10
   14cc8:	cmp	r3, #0
   14ccc:	bge	14af0 <close_stdout@@Base+0x2f30>
   14cd0:	ldr	r1, [fp, #-544]	; 0xfffffde0
   14cd4:	ldrb	r3, [r1, #1]
   14cd8:	cmp	r3, #0
   14cdc:	movne	r2, #0
   14ce0:	strbne	r2, [r1, #1]
   14ce4:	bne	14a18 <close_stdout@@Base+0x2e58>
   14ce8:	cmp	r0, #0
   14cec:	bge	14b14 <close_stdout@@Base+0x2f54>
   14cf0:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14cf4:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   14cf8:	cmp	sl, #0
   14cfc:	cmpne	r3, sl
   14d00:	ldr	r4, [r1]
   14d04:	bne	1515c <close_stdout@@Base+0x359c>
   14d08:	ldr	r2, [fp, #-548]	; 0xfffffddc
   14d0c:	cmp	r2, #0
   14d10:	beq	14d1c <close_stdout@@Base+0x315c>
   14d14:	mov	r0, r2
   14d18:	bl	10fa8 <free@plt>
   14d1c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   14d20:	sub	r3, fp, #348	; 0x15c
   14d24:	cmp	r0, r3
   14d28:	beq	14d30 <close_stdout@@Base+0x3170>
   14d2c:	bl	10fa8 <free@plt>
   14d30:	ldr	r0, [fp, #-480]	; 0xfffffe20
   14d34:	sub	r3, fp, #476	; 0x1dc
   14d38:	cmp	r0, r3
   14d3c:	beq	14d44 <close_stdout@@Base+0x3184>
   14d40:	bl	10fa8 <free@plt>
   14d44:	cmp	r4, #0
   14d48:	bne	14d64 <close_stdout@@Base+0x31a4>
   14d4c:	ldr	r3, [fp, #-540]	; 0xfffffde4
   14d50:	ldrb	r4, [r3, #36]	; 0x24
   14d54:	and	r4, r4, #239	; 0xef
   14d58:	cmp	r4, #99	; 0x63
   14d5c:	movne	r4, #22
   14d60:	moveq	r4, #84	; 0x54
   14d64:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   14d68:	mov	r3, #0
   14d6c:	str	r4, [r1]
   14d70:	b	14944 <close_stdout@@Base+0x2d84>
   14d74:	mov	r4, #12
   14d78:	b	14684 <close_stdout@@Base+0x2ac4>
   14d7c:	mov	r0, r2
   14d80:	mov	r1, r4
   14d84:	str	r2, [fp, #-560]	; 0xfffffdd0
   14d88:	str	r3, [fp, #-556]	; 0xfffffdd4
   14d8c:	bl	11014 <realloc@plt>
   14d90:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   14d94:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   14d98:	mov	sl, r0
   14d9c:	b	146cc <close_stdout@@Base+0x2b0c>
   14da0:	ldr	r3, [r7, #-4]
   14da4:	cmn	r3, #1
   14da8:	bne	15088 <close_stdout@@Base+0x34c8>
   14dac:	adds	r6, r9, #1
   14db0:	mvncs	r6, #0
   14db4:	cmp	r4, r6
   14db8:	bcs	14e38 <close_stdout@@Base+0x3278>
   14dbc:	cmp	r4, #0
   14dc0:	beq	1508c <close_stdout@@Base+0x34cc>
   14dc4:	blt	148cc <close_stdout@@Base+0x2d0c>
   14dc8:	lsl	r4, r4, #1
   14dcc:	cmp	r4, r6
   14dd0:	movcc	r4, r6
   14dd4:	cmn	r4, #1
   14dd8:	beq	148cc <close_stdout@@Base+0x2d0c>
   14ddc:	ldr	r3, [fp, #-504]	; 0xfffffe08
   14de0:	subs	ip, sl, r3
   14de4:	rsbs	r5, ip, #0
   14de8:	adcs	r5, r5, ip
   14dec:	cmp	sl, r3
   14df0:	cmpne	sl, #0
   14df4:	bne	15094 <close_stdout@@Base+0x34d4>
   14df8:	mov	r0, r4
   14dfc:	bl	110a4 <malloc@plt>
   14e00:	mov	r3, r0
   14e04:	cmp	r3, #0
   14e08:	beq	148cc <close_stdout@@Base+0x2d0c>
   14e0c:	cmp	r9, #0
   14e10:	moveq	r5, #0
   14e14:	andne	r5, r5, #1
   14e18:	cmp	r5, #0
   14e1c:	moveq	sl, r3
   14e20:	beq	14e38 <close_stdout@@Base+0x3278>
   14e24:	mov	r1, sl
   14e28:	mov	r0, r3
   14e2c:	mov	r2, r9
   14e30:	mov	sl, r3
   14e34:	bl	10fc0 <memcpy@plt>
   14e38:	mov	r2, sl
   14e3c:	mov	r1, #37	; 0x25
   14e40:	strb	r1, [sl, r9]
   14e44:	ldr	r1, [fp, #-520]	; 0xfffffdf8
   14e48:	add	r7, r7, #44	; 0x2c
   14e4c:	ldr	r5, [r7, #-84]	; 0xffffffac
   14e50:	add	r1, r1, #1
   14e54:	str	r1, [fp, #-520]	; 0xfffffdf8
   14e58:	b	1464c <close_stdout@@Base+0x2a8c>
   14e5c:	ldr	r2, [r7, #-4]
   14e60:	cmp	r6, #1
   14e64:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14e68:	add	r3, r3, r2, lsl #4
   14e6c:	ldrb	r3, [r3, #8]
   14e70:	bne	14aa4 <close_stdout@@Base+0x2ee4>
   14e74:	ldr	r1, [fp, #-512]	; 0xfffffe00
   14e78:	add	r0, sl, r9
   14e7c:	ldr	lr, [fp, #-492]	; 0xfffffe14
   14e80:	mov	r2, r6
   14e84:	str	r3, [sp, #8]
   14e88:	sub	r3, fp, #496	; 0x1f0
   14e8c:	str	r1, [sp]
   14e90:	mov	r1, r8
   14e94:	str	r3, [sp, #12]
   14e98:	mvn	r3, #0
   14e9c:	str	lr, [sp, #4]
   14ea0:	bl	11218 <__snprintf_chk@plt>
   14ea4:	b	14ae4 <close_stdout@@Base+0x2f24>
   14ea8:	mov	sl, r2
   14eac:	b	146e8 <close_stdout@@Base+0x2b28>
   14eb0:	mov	r4, #12
   14eb4:	b	14b6c <close_stdout@@Base+0x2fac>
   14eb8:	mov	r0, sl
   14ebc:	mov	r1, r4
   14ec0:	bl	11014 <realloc@plt>
   14ec4:	mov	r3, r0
   14ec8:	b	14ba4 <close_stdout@@Base+0x2fe4>
   14ecc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14ed0:	add	r1, r3, r2, lsl #4
   14ed4:	ldr	r3, [r3, r2, lsl #4]
   14ed8:	sub	r3, r3, #18
   14edc:	cmp	r3, #4
   14ee0:	addls	pc, pc, r3, lsl #2
   14ee4:	b	15088 <close_stdout@@Base+0x34c8>
   14ee8:	b	15118 <close_stdout@@Base+0x3558>
   14eec:	b	1512c <close_stdout@@Base+0x356c>
   14ef0:	b	14fc8 <close_stdout@@Base+0x3408>
   14ef4:	b	14fc8 <close_stdout@@Base+0x3408>
   14ef8:	b	15140 <close_stdout@@Base+0x3580>
   14efc:	mov	r1, r2
   14f00:	mov	r0, sl
   14f04:	mov	r2, r6
   14f08:	str	r3, [fp, #-556]	; 0xfffffdd4
   14f0c:	bl	10fc0 <memcpy@plt>
   14f10:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   14f14:	b	146e8 <close_stdout@@Base+0x2b28>
   14f18:	mov	r9, r6
   14f1c:	mov	sl, r2
   14f20:	b	146f8 <close_stdout@@Base+0x2b38>
   14f24:	tst	r3, #32
   14f28:	bne	150b0 <close_stdout@@Base+0x34f0>
   14f2c:	tst	r3, #12
   14f30:	beq	1482c <close_stdout@@Base+0x2c6c>
   14f34:	mov	r3, #108	; 0x6c
   14f38:	add	r5, r5, #1
   14f3c:	strb	r3, [r5, #-1]
   14f40:	b	14820 <close_stdout@@Base+0x2c60>
   14f44:	ldr	r2, [r7, #-4]
   14f48:	cmp	r6, #1
   14f4c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14f50:	add	r3, r3, r2, lsl #4
   14f54:	ldrh	r3, [r3, #8]
   14f58:	bne	14aa4 <close_stdout@@Base+0x2ee4>
   14f5c:	b	14e74 <close_stdout@@Base+0x32b4>
   14f60:	ldr	r2, [r7, #-4]
   14f64:	cmp	r6, #1
   14f68:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14f6c:	add	r3, r3, r2, lsl #4
   14f70:	ldrsh	r3, [r3, #8]
   14f74:	bne	14aa4 <close_stdout@@Base+0x2ee4>
   14f78:	b	14e74 <close_stdout@@Base+0x32b4>
   14f7c:	ldr	r2, [r7, #-4]
   14f80:	cmp	r6, #1
   14f84:	ldr	r3, [fp, #-480]	; 0xfffffe20
   14f88:	add	r3, r3, r2, lsl #4
   14f8c:	ldrsb	r3, [r3, #8]
   14f90:	beq	14e74 <close_stdout@@Base+0x32b4>
   14f94:	cmp	r6, #2
   14f98:	beq	14aac <close_stdout@@Base+0x2eec>
   14f9c:	ldr	r2, [fp, #-512]	; 0xfffffe00
   14fa0:	add	r0, sl, r9
   14fa4:	str	r3, [sp, #4]
   14fa8:	mov	r1, r8
   14fac:	sub	r3, fp, #496	; 0x1f0
   14fb0:	str	r3, [sp, #8]
   14fb4:	str	r2, [sp]
   14fb8:	mvn	r3, #0
   14fbc:	mov	r2, #1
   14fc0:	bl	11218 <__snprintf_chk@plt>
   14fc4:	b	14ae4 <close_stdout@@Base+0x2f24>
   14fc8:	ldr	r3, [r1, #8]
   14fcc:	mov	r2, sl
   14fd0:	mov	r6, r9
   14fd4:	str	r9, [r3]
   14fd8:	b	14e44 <close_stdout@@Base+0x3284>
   14fdc:	ldr	r3, [fp, #-492]	; 0xfffffe14
   14fe0:	ldr	r2, [fp, #-512]	; 0xfffffe00
   14fe4:	strd	r0, [sp, #8]
   14fe8:	sub	r1, fp, #496	; 0x1f0
   14fec:	str	r3, [sp, #4]
   14ff0:	add	r0, sl, r9
   14ff4:	str	r2, [sp]
   14ff8:	mvn	r3, #0
   14ffc:	str	r1, [sp, #16]
   15000:	mov	r2, r6
   15004:	mov	r1, r8
   15008:	bl	11218 <__snprintf_chk@plt>
   1500c:	b	14ae4 <close_stdout@@Base+0x2f24>
   15010:	ldr	r1, [fp, #-512]	; 0xfffffe00
   15014:	add	r0, sl, r9
   15018:	ldr	lr, [fp, #-492]	; 0xfffffe14
   1501c:	strd	r2, [sp, #8]
   15020:	sub	r3, fp, #496	; 0x1f0
   15024:	str	r1, [sp]
   15028:	mov	r2, r6
   1502c:	str	r3, [sp, #16]
   15030:	mov	r1, r8
   15034:	mvn	r3, #0
   15038:	str	lr, [sp, #4]
   1503c:	bl	11218 <__snprintf_chk@plt>
   15040:	b	14ae4 <close_stdout@@Base+0x2f24>
   15044:	mov	r6, #0
   15048:	b	14868 <close_stdout@@Base+0x2ca8>
   1504c:	cmn	r0, #1
   15050:	beq	14904 <close_stdout@@Base+0x2d44>
   15054:	bl	110a4 <malloc@plt>
   15058:	cmp	r0, #0
   1505c:	str	r0, [fp, #-512]	; 0xfffffe00
   15060:	beq	14904 <close_stdout@@Base+0x2d44>
   15064:	str	r0, [fp, #-548]	; 0xfffffddc
   15068:	b	14618 <close_stdout@@Base+0x2a58>
   1506c:	mov	r0, sl
   15070:	mov	r1, r4
   15074:	str	r2, [fp, #-560]	; 0xfffffdd0
   15078:	bl	11014 <realloc@plt>
   1507c:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   15080:	mov	r3, r0
   15084:	b	149b8 <close_stdout@@Base+0x2df8>
   15088:	bl	111f4 <abort@plt>
   1508c:	mov	r4, #12
   15090:	b	14dcc <close_stdout@@Base+0x320c>
   15094:	mov	r0, sl
   15098:	mov	r1, r4
   1509c:	bl	11014 <realloc@plt>
   150a0:	mov	r3, r0
   150a4:	b	14e04 <close_stdout@@Base+0x3244>
   150a8:	mov	r3, #0
   150ac:	b	14944 <close_stdout@@Base+0x2d84>
   150b0:	mov	r3, #76	; 0x4c
   150b4:	add	r5, r5, #1
   150b8:	strb	r3, [r5, #-1]
   150bc:	b	1482c <close_stdout@@Base+0x2c6c>
   150c0:	ldr	r3, [fp, #-512]	; 0xfffffe00
   150c4:	mov	r2, #1
   150c8:	strd	r0, [sp, #8]
   150cc:	sub	r1, fp, #496	; 0x1f0
   150d0:	add	r0, sl, r9
   150d4:	str	r1, [sp, #16]
   150d8:	str	r3, [sp]
   150dc:	mov	r1, r8
   150e0:	mvn	r3, #0
   150e4:	bl	11218 <__snprintf_chk@plt>
   150e8:	b	14ae4 <close_stdout@@Base+0x2f24>
   150ec:	ldr	r1, [fp, #-512]	; 0xfffffe00
   150f0:	add	r0, sl, r9
   150f4:	strd	r2, [sp, #8]
   150f8:	sub	r2, fp, #496	; 0x1f0
   150fc:	mvn	r3, #0
   15100:	str	r2, [sp, #16]
   15104:	str	r1, [sp]
   15108:	mov	r2, #1
   1510c:	mov	r1, r8
   15110:	bl	11218 <__snprintf_chk@plt>
   15114:	b	14ae4 <close_stdout@@Base+0x2f24>
   15118:	ldr	r3, [r1, #8]
   1511c:	mov	r2, sl
   15120:	mov	r6, r9
   15124:	strb	r9, [r3]
   15128:	b	14e44 <close_stdout@@Base+0x3284>
   1512c:	ldr	r3, [r1, #8]
   15130:	mov	r2, sl
   15134:	mov	r6, r9
   15138:	strh	r9, [r3]
   1513c:	b	14e44 <close_stdout@@Base+0x3284>
   15140:	ldr	r3, [r1, #8]
   15144:	mov	r2, sl
   15148:	mov	r1, #0
   1514c:	mov	r6, r9
   15150:	str	r9, [r3]
   15154:	str	r1, [r3, #4]
   15158:	b	14e44 <close_stdout@@Base+0x3284>
   1515c:	mov	r0, sl
   15160:	bl	10fa8 <free@plt>
   15164:	b	14d08 <close_stdout@@Base+0x3148>
   15168:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1516c:	sub	r3, fp, #348	; 0x15c
   15170:	cmp	r0, r3
   15174:	beq	1517c <close_stdout@@Base+0x35bc>
   15178:	bl	10fa8 <free@plt>
   1517c:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15180:	sub	r3, fp, #476	; 0x1dc
   15184:	cmp	r0, r3
   15188:	beq	15190 <close_stdout@@Base+0x35d0>
   1518c:	bl	10fa8 <free@plt>
   15190:	bl	1111c <__errno_location@plt>
   15194:	mov	r2, #22
   15198:	mov	r3, #0
   1519c:	str	r2, [r0]
   151a0:	b	14944 <close_stdout@@Base+0x2d84>
   151a4:	str	r2, [fp, #-560]	; 0xfffffdd0
   151a8:	bl	1111c <__errno_location@plt>
   151ac:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   151b0:	str	r0, [fp, #-516]	; 0xfffffdfc
   151b4:	b	148dc <close_stdout@@Base+0x2d1c>
   151b8:	adds	r5, r9, #1
   151bc:	movcc	r3, r5
   151c0:	mvncs	r3, #0
   151c4:	cmp	r3, r4
   151c8:	bls	15250 <close_stdout@@Base+0x3690>
   151cc:	cmp	r4, #0
   151d0:	moveq	r4, #12
   151d4:	beq	151e0 <close_stdout@@Base+0x3620>
   151d8:	lslge	r4, r4, #1
   151dc:	mvnlt	r4, #0
   151e0:	cmp	r5, r9
   151e4:	movcs	r3, r5
   151e8:	mvncc	r3, #0
   151ec:	cmp	r4, r3
   151f0:	bcs	15200 <close_stdout@@Base+0x3640>
   151f4:	cmp	r5, r9
   151f8:	bcc	148cc <close_stdout@@Base+0x2d0c>
   151fc:	mov	r4, r5
   15200:	cmn	r4, #1
   15204:	beq	148cc <close_stdout@@Base+0x2d0c>
   15208:	ldr	r2, [fp, #-504]	; 0xfffffe08
   1520c:	subs	r3, sl, r2
   15210:	rsbs	r6, r3, #0
   15214:	adcs	r6, r6, r3
   15218:	cmp	sl, r2
   1521c:	cmpne	sl, #0
   15220:	bne	15360 <close_stdout@@Base+0x37a0>
   15224:	mov	r0, r4
   15228:	bl	110a4 <malloc@plt>
   1522c:	mov	r3, r0
   15230:	cmp	r3, #0
   15234:	beq	148cc <close_stdout@@Base+0x2d0c>
   15238:	cmp	r9, #0
   1523c:	moveq	r6, #0
   15240:	andne	r6, r6, #1
   15244:	cmp	r6, #0
   15248:	moveq	sl, r3
   1524c:	bne	15374 <close_stdout@@Base+0x37b4>
   15250:	ldr	r3, [fp, #-504]	; 0xfffffe08
   15254:	cmp	sl, r3
   15258:	mov	r3, #0
   1525c:	strb	r3, [sl, r9]
   15260:	beq	1526c <close_stdout@@Base+0x36ac>
   15264:	cmp	r4, r5
   15268:	bhi	15348 <close_stdout@@Base+0x3788>
   1526c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   15270:	cmp	r1, #0
   15274:	beq	15280 <close_stdout@@Base+0x36c0>
   15278:	mov	r0, r1
   1527c:	bl	10fa8 <free@plt>
   15280:	ldr	r0, [fp, #-360]	; 0xfffffe98
   15284:	sub	r3, fp, #348	; 0x15c
   15288:	cmp	r0, r3
   1528c:	beq	15294 <close_stdout@@Base+0x36d4>
   15290:	bl	10fa8 <free@plt>
   15294:	ldr	r0, [fp, #-480]	; 0xfffffe20
   15298:	sub	r3, fp, #476	; 0x1dc
   1529c:	cmp	r0, r3
   152a0:	beq	152a8 <close_stdout@@Base+0x36e8>
   152a4:	bl	10fa8 <free@plt>
   152a8:	ldr	r2, [fp, #-536]	; 0xfffffde8
   152ac:	mov	r3, sl
   152b0:	str	r9, [r2]
   152b4:	b	14944 <close_stdout@@Base+0x2d84>
   152b8:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   152bc:	add	r6, r0, r9
   152c0:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   152c4:	str	r1, [r2]
   152c8:	mov	r2, sl
   152cc:	b	14e44 <close_stdout@@Base+0x3284>
   152d0:	ldr	r3, [fp, #-504]	; 0xfffffe08
   152d4:	cmp	sl, #0
   152d8:	cmpne	sl, r3
   152dc:	bne	1533c <close_stdout@@Base+0x377c>
   152e0:	ldr	r3, [fp, #-548]	; 0xfffffddc
   152e4:	cmp	r3, #0
   152e8:	beq	152f4 <close_stdout@@Base+0x3734>
   152ec:	mov	r0, r3
   152f0:	bl	10fa8 <free@plt>
   152f4:	ldr	r0, [fp, #-360]	; 0xfffffe98
   152f8:	sub	r3, fp, #348	; 0x15c
   152fc:	cmp	r0, r3
   15300:	beq	15308 <close_stdout@@Base+0x3748>
   15304:	bl	10fa8 <free@plt>
   15308:	ldr	r0, [fp, #-480]	; 0xfffffe20
   1530c:	sub	r3, fp, #476	; 0x1dc
   15310:	cmp	r0, r3
   15314:	beq	1531c <close_stdout@@Base+0x375c>
   15318:	bl	10fa8 <free@plt>
   1531c:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   15320:	mov	r2, #75	; 0x4b
   15324:	mov	r3, #0
   15328:	str	r2, [r1]
   1532c:	b	14944 <close_stdout@@Base+0x2d84>
   15330:	mov	r0, r2
   15334:	bl	10fa8 <free@plt>
   15338:	b	148ec <close_stdout@@Base+0x2d2c>
   1533c:	mov	r0, sl
   15340:	bl	10fa8 <free@plt>
   15344:	b	152e0 <close_stdout@@Base+0x3720>
   15348:	mov	r0, sl
   1534c:	mov	r1, r5
   15350:	bl	11014 <realloc@plt>
   15354:	cmp	r0, #0
   15358:	movne	sl, r0
   1535c:	b	1526c <close_stdout@@Base+0x36ac>
   15360:	mov	r0, sl
   15364:	mov	r1, r4
   15368:	bl	11014 <realloc@plt>
   1536c:	mov	r3, r0
   15370:	b	15230 <close_stdout@@Base+0x3670>
   15374:	mov	r1, sl
   15378:	mov	r0, r3
   1537c:	mov	r2, r9
   15380:	mov	sl, r3
   15384:	bl	10fc0 <memcpy@plt>
   15388:	b	15250 <close_stdout@@Base+0x3690>
   1538c:	bl	11008 <__stack_chk_fail@plt>
   15390:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   15394:	cmp	r9, r2
   15398:	bhi	148cc <close_stdout@@Base+0x2d0c>
   1539c:	mvn	r4, #0
   153a0:	b	14974 <close_stdout@@Base+0x2db4>
   153a4:	andeq	r2, r1, ip, ror sl
   153a8:	strdeq	r0, [r0], -ip
   153ac:	push	{r4, r5, r6}
   153b0:	ldm	r1, {r3, ip}
   153b4:	cmp	r3, #0
   153b8:	beq	15460 <close_stdout@@Base+0x38a0>
   153bc:	ldr	r6, [pc, #304]	; 154f4 <close_stdout@@Base+0x3934>
   153c0:	add	ip, ip, #16
   153c4:	ldr	r5, [pc, #300]	; 154f8 <close_stdout@@Base+0x3938>
   153c8:	mov	r4, #0
   153cc:	add	r6, pc, r6
   153d0:	add	r5, pc, r5
   153d4:	ldr	r3, [ip, #-16]
   153d8:	sub	r3, r3, #1
   153dc:	cmp	r3, #21
   153e0:	addls	pc, pc, r3, lsl #2
   153e4:	b	154ec <close_stdout@@Base+0x392c>
   153e8:	b	154ac <close_stdout@@Base+0x38ec>
   153ec:	b	154ac <close_stdout@@Base+0x38ec>
   153f0:	b	1549c <close_stdout@@Base+0x38dc>
   153f4:	b	1549c <close_stdout@@Base+0x38dc>
   153f8:	b	15440 <close_stdout@@Base+0x3880>
   153fc:	b	15440 <close_stdout@@Base+0x3880>
   15400:	b	15440 <close_stdout@@Base+0x3880>
   15404:	b	15440 <close_stdout@@Base+0x3880>
   15408:	b	1546c <close_stdout@@Base+0x38ac>
   1540c:	b	1546c <close_stdout@@Base+0x38ac>
   15410:	b	15484 <close_stdout@@Base+0x38c4>
   15414:	b	15484 <close_stdout@@Base+0x38c4>
   15418:	b	15440 <close_stdout@@Base+0x3880>
   1541c:	b	15440 <close_stdout@@Base+0x3880>
   15420:	b	154bc <close_stdout@@Base+0x38fc>
   15424:	b	154d4 <close_stdout@@Base+0x3914>
   15428:	b	15440 <close_stdout@@Base+0x3880>
   1542c:	b	15440 <close_stdout@@Base+0x3880>
   15430:	b	15440 <close_stdout@@Base+0x3880>
   15434:	b	15440 <close_stdout@@Base+0x3880>
   15438:	b	15440 <close_stdout@@Base+0x3880>
   1543c:	b	15440 <close_stdout@@Base+0x3880>
   15440:	ldr	r3, [r0]
   15444:	add	r0, r0, #4
   15448:	str	r3, [ip, #-8]
   1544c:	ldr	r3, [r1]
   15450:	add	r4, r4, #1
   15454:	add	ip, ip, #16
   15458:	cmp	r3, r4
   1545c:	bhi	153d4 <close_stdout@@Base+0x3814>
   15460:	mov	r0, #0
   15464:	pop	{r4, r5, r6}
   15468:	bx	lr
   1546c:	add	r3, r0, #7
   15470:	bic	r3, r3, #7
   15474:	add	r0, r3, #8
   15478:	ldrd	r2, [r3]
   1547c:	strd	r2, [ip, #-8]
   15480:	b	1544c <close_stdout@@Base+0x388c>
   15484:	add	r0, r0, #7
   15488:	bic	r0, r0, #7
   1548c:	add	r0, r0, #8
   15490:	ldrd	r2, [r0, #-8]
   15494:	strd	r2, [ip, #-8]
   15498:	b	1544c <close_stdout@@Base+0x388c>
   1549c:	ldr	r3, [r0]
   154a0:	add	r0, r0, #4
   154a4:	strh	r3, [ip, #-8]
   154a8:	b	1544c <close_stdout@@Base+0x388c>
   154ac:	ldr	r3, [r0]
   154b0:	add	r0, r0, #4
   154b4:	strb	r3, [ip, #-8]
   154b8:	b	1544c <close_stdout@@Base+0x388c>
   154bc:	ldr	r3, [r0]
   154c0:	add	r0, r0, #4
   154c4:	cmp	r3, #0
   154c8:	str	r3, [ip, #-8]
   154cc:	streq	r5, [ip, #-8]
   154d0:	b	1544c <close_stdout@@Base+0x388c>
   154d4:	ldr	r3, [r0]
   154d8:	add	r0, r0, #4
   154dc:	cmp	r3, #0
   154e0:	str	r3, [ip, #-8]
   154e4:	streq	r6, [ip, #-8]
   154e8:	b	1544c <close_stdout@@Base+0x388c>
   154ec:	mvn	r0, #0
   154f0:	b	15464 <close_stdout@@Base+0x38a4>
   154f4:	andeq	r1, r0, r0, ror r8
   154f8:	andeq	r1, r0, r8, lsl #17
   154fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15500:	mov	r7, r1
   15504:	sub	sp, sp, #44	; 0x2c
   15508:	mov	r5, r2
   1550c:	movw	sl, #39321	; 0x9999
   15510:	mov	r2, r7
   15514:	movt	sl, #6553	; 0x1999
   15518:	mov	r3, #0
   1551c:	str	r3, [r2], #16
   15520:	mov	r1, #7
   15524:	str	r2, [r7, #4]
   15528:	mov	r9, r0
   1552c:	str	r2, [sp, #16]
   15530:	mov	r2, r5
   15534:	str	r3, [r2], #8
   15538:	mov	r6, r3
   1553c:	str	r2, [r5, #4]
   15540:	movw	r0, #29789	; 0x745d
   15544:	str	r3, [sp, #8]
   15548:	movt	r0, #1489	; 0x5d1
   1554c:	str	r1, [sp, #20]
   15550:	mov	ip, sl
   15554:	str	r3, [sp, #24]
   15558:	str	r3, [sp, #36]	; 0x24
   1555c:	mov	r3, #7
   15560:	str	r2, [sp, #12]
   15564:	str	r3, [sp, #28]
   15568:	ldr	r1, [r7]
   1556c:	ldr	r3, [r7, #4]
   15570:	str	r0, [sp, #32]
   15574:	b	15580 <close_stdout@@Base+0x39c0>
   15578:	cmp	r0, #37	; 0x25
   1557c:	beq	155c0 <close_stdout@@Base+0x3a00>
   15580:	mov	r8, r9
   15584:	ldrb	r0, [r9], #1
   15588:	cmp	r0, #0
   1558c:	mov	r2, r9
   15590:	bne	15578 <close_stdout@@Base+0x39b8>
   15594:	mov	r4, #44	; 0x2c
   15598:	mov	r2, r0
   1559c:	mul	r1, r4, r1
   155a0:	str	r8, [r3, r1]
   155a4:	ldr	r3, [sp, #24]
   155a8:	str	r3, [r7, #8]
   155ac:	ldr	r3, [sp, #8]
   155b0:	str	r3, [r7, #12]
   155b4:	mov	r0, r2
   155b8:	add	sp, sp, #44	; 0x2c
   155bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   155c0:	mov	r0, #44	; 0x2c
   155c4:	mul	r1, r0, r1
   155c8:	add	r4, r3, r1
   155cc:	str	r8, [r3, r1]
   155d0:	mvn	r1, #0
   155d4:	str	r6, [r4, #8]
   155d8:	str	r1, [r4, #20]
   155dc:	str	r1, [r4, #32]
   155e0:	str	r1, [r4, #40]	; 0x28
   155e4:	str	r6, [r4, #12]
   155e8:	str	r6, [r4, #16]
   155ec:	str	r6, [r4, #24]
   155f0:	str	r6, [r4, #28]
   155f4:	ldrb	r3, [r8, #1]
   155f8:	sub	sl, r3, #48	; 0x30
   155fc:	uxtb	r1, sl
   15600:	cmp	r1, #9
   15604:	bls	15998 <close_stdout@@Base+0x3dd8>
   15608:	mvn	r8, #0
   1560c:	b	15650 <close_stdout@@Base+0x3a90>
   15610:	cmp	r3, #45	; 0x2d
   15614:	beq	1566c <close_stdout@@Base+0x3aac>
   15618:	cmp	r3, #43	; 0x2b
   1561c:	beq	1567c <close_stdout@@Base+0x3abc>
   15620:	cmp	r3, #32
   15624:	beq	1568c <close_stdout@@Base+0x3acc>
   15628:	cmp	r3, #35	; 0x23
   1562c:	beq	1569c <close_stdout@@Base+0x3adc>
   15630:	cmp	r3, #48	; 0x30
   15634:	beq	156ac <close_stdout@@Base+0x3aec>
   15638:	cmp	r3, #73	; 0x49
   1563c:	bne	156bc <close_stdout@@Base+0x3afc>
   15640:	ldr	r3, [r4, #8]
   15644:	orr	r3, r3, #64	; 0x40
   15648:	str	r3, [r4, #8]
   1564c:	ldrb	r3, [r2, #1]!
   15650:	cmp	r3, #39	; 0x27
   15654:	mov	r9, r2
   15658:	bne	15610 <close_stdout@@Base+0x3a50>
   1565c:	ldr	r3, [r4, #8]
   15660:	orr	r3, r3, #1
   15664:	str	r3, [r4, #8]
   15668:	b	1564c <close_stdout@@Base+0x3a8c>
   1566c:	ldr	r3, [r4, #8]
   15670:	orr	r3, r3, #2
   15674:	str	r3, [r4, #8]
   15678:	b	1564c <close_stdout@@Base+0x3a8c>
   1567c:	ldr	r3, [r4, #8]
   15680:	orr	r3, r3, #4
   15684:	str	r3, [r4, #8]
   15688:	b	1564c <close_stdout@@Base+0x3a8c>
   1568c:	ldr	r3, [r4, #8]
   15690:	orr	r3, r3, #8
   15694:	str	r3, [r4, #8]
   15698:	b	1564c <close_stdout@@Base+0x3a8c>
   1569c:	ldr	r3, [r4, #8]
   156a0:	orr	r3, r3, #16
   156a4:	str	r3, [r4, #8]
   156a8:	b	1564c <close_stdout@@Base+0x3a8c>
   156ac:	ldr	r3, [r4, #8]
   156b0:	orr	r3, r3, #32
   156b4:	str	r3, [r4, #8]
   156b8:	b	1564c <close_stdout@@Base+0x3a8c>
   156bc:	cmp	r3, #42	; 0x2a
   156c0:	beq	15b34 <close_stdout@@Base+0x3f74>
   156c4:	sub	r1, r3, #48	; 0x30
   156c8:	uxtb	r1, r1
   156cc:	cmp	r1, #9
   156d0:	bls	15a10 <close_stdout@@Base+0x3e50>
   156d4:	cmp	r3, #46	; 0x2e
   156d8:	beq	15a64 <close_stdout@@Base+0x3ea4>
   156dc:	mov	sl, #0
   156e0:	mov	r0, #1
   156e4:	b	156f0 <close_stdout@@Base+0x3b30>
   156e8:	ldrb	r3, [r2, #1]
   156ec:	add	r9, r9, #1
   156f0:	cmp	r3, #104	; 0x68
   156f4:	mov	r2, r9
   156f8:	andeq	r3, sl, #1
   156fc:	orreq	sl, sl, r0, lsl r3
   15700:	beq	156e8 <close_stdout@@Base+0x3b28>
   15704:	cmp	r3, #76	; 0x4c
   15708:	orreq	sl, sl, #4
   1570c:	beq	156e8 <close_stdout@@Base+0x3b28>
   15710:	cmp	r3, #108	; 0x6c
   15714:	addeq	sl, sl, #8
   15718:	beq	156e8 <close_stdout@@Base+0x3b28>
   1571c:	cmp	r3, #106	; 0x6a
   15720:	addeq	sl, sl, #16
   15724:	beq	156e8 <close_stdout@@Base+0x3b28>
   15728:	and	r1, r3, #223	; 0xdf
   1572c:	cmp	r1, #90	; 0x5a
   15730:	beq	156e8 <close_stdout@@Base+0x3b28>
   15734:	cmp	r3, #116	; 0x74
   15738:	beq	156e8 <close_stdout@@Base+0x3b28>
   1573c:	sub	r2, r3, #37	; 0x25
   15740:	add	r9, r9, #1
   15744:	mov	fp, r3
   15748:	cmp	r2, #83	; 0x53
   1574c:	addls	pc, pc, r2, lsl #2
   15750:	b	15e74 <close_stdout@@Base+0x42b4>
   15754:	b	15904 <close_stdout@@Base+0x3d44>
   15758:	b	15e74 <close_stdout@@Base+0x42b4>
   1575c:	b	15e74 <close_stdout@@Base+0x42b4>
   15760:	b	15e74 <close_stdout@@Base+0x42b4>
   15764:	b	15e74 <close_stdout@@Base+0x42b4>
   15768:	b	15e74 <close_stdout@@Base+0x42b4>
   1576c:	b	15e74 <close_stdout@@Base+0x42b4>
   15770:	b	15e74 <close_stdout@@Base+0x42b4>
   15774:	b	15e74 <close_stdout@@Base+0x42b4>
   15778:	b	15e74 <close_stdout@@Base+0x42b4>
   1577c:	b	15e74 <close_stdout@@Base+0x42b4>
   15780:	b	15e74 <close_stdout@@Base+0x42b4>
   15784:	b	15e74 <close_stdout@@Base+0x42b4>
   15788:	b	15e74 <close_stdout@@Base+0x42b4>
   1578c:	b	15e74 <close_stdout@@Base+0x42b4>
   15790:	b	15e74 <close_stdout@@Base+0x42b4>
   15794:	b	15e74 <close_stdout@@Base+0x42b4>
   15798:	b	15e74 <close_stdout@@Base+0x42b4>
   1579c:	b	15e74 <close_stdout@@Base+0x42b4>
   157a0:	b	15e74 <close_stdout@@Base+0x42b4>
   157a4:	b	15e74 <close_stdout@@Base+0x42b4>
   157a8:	b	15e74 <close_stdout@@Base+0x42b4>
   157ac:	b	15e74 <close_stdout@@Base+0x42b4>
   157b0:	b	15e74 <close_stdout@@Base+0x42b4>
   157b4:	b	15e74 <close_stdout@@Base+0x42b4>
   157b8:	b	15e74 <close_stdout@@Base+0x42b4>
   157bc:	b	15e74 <close_stdout@@Base+0x42b4>
   157c0:	b	15e74 <close_stdout@@Base+0x42b4>
   157c4:	b	15c50 <close_stdout@@Base+0x4090>
   157c8:	b	15e74 <close_stdout@@Base+0x42b4>
   157cc:	b	15c74 <close_stdout@@Base+0x40b4>
   157d0:	b	15e74 <close_stdout@@Base+0x42b4>
   157d4:	b	15c50 <close_stdout@@Base+0x4090>
   157d8:	b	15c50 <close_stdout@@Base+0x4090>
   157dc:	b	15c50 <close_stdout@@Base+0x4090>
   157e0:	b	15e74 <close_stdout@@Base+0x42b4>
   157e4:	b	15e74 <close_stdout@@Base+0x42b4>
   157e8:	b	15e74 <close_stdout@@Base+0x42b4>
   157ec:	b	15e74 <close_stdout@@Base+0x42b4>
   157f0:	b	15e74 <close_stdout@@Base+0x42b4>
   157f4:	b	15e74 <close_stdout@@Base+0x42b4>
   157f8:	b	15e74 <close_stdout@@Base+0x42b4>
   157fc:	b	15e74 <close_stdout@@Base+0x42b4>
   15800:	b	15e74 <close_stdout@@Base+0x42b4>
   15804:	b	15e74 <close_stdout@@Base+0x42b4>
   15808:	b	15e74 <close_stdout@@Base+0x42b4>
   1580c:	b	15c80 <close_stdout@@Base+0x40c0>
   15810:	b	15e74 <close_stdout@@Base+0x42b4>
   15814:	b	15e74 <close_stdout@@Base+0x42b4>
   15818:	b	15e74 <close_stdout@@Base+0x42b4>
   1581c:	b	15e74 <close_stdout@@Base+0x42b4>
   15820:	b	15c8c <close_stdout@@Base+0x40cc>
   15824:	b	15e74 <close_stdout@@Base+0x42b4>
   15828:	b	15e74 <close_stdout@@Base+0x42b4>
   1582c:	b	15e74 <close_stdout@@Base+0x42b4>
   15830:	b	15e74 <close_stdout@@Base+0x42b4>
   15834:	b	15e74 <close_stdout@@Base+0x42b4>
   15838:	b	15e74 <close_stdout@@Base+0x42b4>
   1583c:	b	15e74 <close_stdout@@Base+0x42b4>
   15840:	b	15e74 <close_stdout@@Base+0x42b4>
   15844:	b	15c50 <close_stdout@@Base+0x4090>
   15848:	b	15e74 <close_stdout@@Base+0x42b4>
   1584c:	b	15d14 <close_stdout@@Base+0x4154>
   15850:	b	15cd0 <close_stdout@@Base+0x4110>
   15854:	b	15c50 <close_stdout@@Base+0x4090>
   15858:	b	15c50 <close_stdout@@Base+0x4090>
   1585c:	b	15c50 <close_stdout@@Base+0x4090>
   15860:	b	15e74 <close_stdout@@Base+0x42b4>
   15864:	b	15cd0 <close_stdout@@Base+0x4110>
   15868:	b	15e74 <close_stdout@@Base+0x42b4>
   1586c:	b	15e74 <close_stdout@@Base+0x42b4>
   15870:	b	15e74 <close_stdout@@Base+0x42b4>
   15874:	b	15e74 <close_stdout@@Base+0x42b4>
   15878:	b	15d24 <close_stdout@@Base+0x4164>
   1587c:	b	15c8c <close_stdout@@Base+0x40cc>
   15880:	b	158a4 <close_stdout@@Base+0x3ce4>
   15884:	b	15e74 <close_stdout@@Base+0x42b4>
   15888:	b	15e74 <close_stdout@@Base+0x42b4>
   1588c:	b	15c40 <close_stdout@@Base+0x4080>
   15890:	b	15e74 <close_stdout@@Base+0x42b4>
   15894:	b	15c8c <close_stdout@@Base+0x40cc>
   15898:	b	15e74 <close_stdout@@Base+0x42b4>
   1589c:	b	15e74 <close_stdout@@Base+0x42b4>
   158a0:	b	15c8c <close_stdout@@Base+0x40cc>
   158a4:	mov	sl, #17
   158a8:	cmn	r8, #1
   158ac:	strne	r8, [r4, #40]	; 0x28
   158b0:	beq	15fd0 <close_stdout@@Base+0x4410>
   158b4:	ldr	r3, [sp, #20]
   158b8:	cmp	r3, r8
   158bc:	bls	15efc <close_stdout@@Base+0x433c>
   158c0:	ldr	r0, [r5, #4]
   158c4:	ldr	r3, [r5]
   158c8:	cmp	r3, r8
   158cc:	bhi	158ec <close_stdout@@Base+0x3d2c>
   158d0:	add	r2, r3, #1
   158d4:	str	r2, [r5]
   158d8:	str	r6, [r0, r3, lsl #4]
   158dc:	ldr	r3, [r5]
   158e0:	ldr	r0, [r5, #4]
   158e4:	cmp	r3, r8
   158e8:	bls	158d0 <close_stdout@@Base+0x3d10>
   158ec:	ldr	r3, [r0, r8, lsl #4]
   158f0:	cmp	r3, #0
   158f4:	streq	sl, [r0, r8, lsl #4]
   158f8:	beq	15904 <close_stdout@@Base+0x3d44>
   158fc:	cmp	sl, r3
   15900:	bne	15e78 <close_stdout@@Base+0x42b8>
   15904:	strb	fp, [r4, #36]	; 0x24
   15908:	str	r9, [r4, #4]
   1590c:	ldr	r1, [r7]
   15910:	ldr	r3, [sp, #28]
   15914:	add	r1, r1, #1
   15918:	str	r1, [r7]
   1591c:	cmp	r3, r1
   15920:	bhi	15a08 <close_stdout@@Base+0x3e48>
   15924:	ldr	r3, [sp, #28]
   15928:	cmp	r3, #0
   1592c:	blt	15af4 <close_stdout@@Base+0x3f34>
   15930:	ldr	r3, [sp, #28]
   15934:	ldr	r0, [sp, #32]
   15938:	lsl	r3, r3, #1
   1593c:	str	r3, [sp, #28]
   15940:	cmp	r3, r0
   15944:	bhi	15af4 <close_stdout@@Base+0x3f34>
   15948:	mov	r2, #44	; 0x2c
   1594c:	ldr	r0, [r7, #4]
   15950:	mul	r1, r2, r3
   15954:	ldr	r3, [sp, #16]
   15958:	cmp	r3, r0
   1595c:	beq	15ff0 <close_stdout@@Base+0x4430>
   15960:	str	ip, [sp, #4]
   15964:	bl	11014 <realloc@plt>
   15968:	ldr	ip, [sp, #4]
   1596c:	mov	r4, r0
   15970:	cmp	r4, #0
   15974:	beq	15af4 <close_stdout@@Base+0x3f34>
   15978:	ldr	r3, [r7, #4]
   1597c:	ldr	r0, [sp, #16]
   15980:	cmp	r0, r3
   15984:	beq	160ac <close_stdout@@Base+0x44ec>
   15988:	ldr	r1, [r7]
   1598c:	mov	r3, r4
   15990:	str	r4, [r7, #4]
   15994:	b	15580 <close_stdout@@Base+0x39c0>
   15998:	mov	r0, r9
   1599c:	ldrb	r1, [r0, #1]!
   159a0:	sub	r8, r1, #48	; 0x30
   159a4:	cmp	r8, #9
   159a8:	bls	1599c <close_stdout@@Base+0x3ddc>
   159ac:	cmp	r1, #36	; 0x24
   159b0:	bne	15608 <close_stdout@@Base+0x3a48>
   159b4:	mov	r8, #0
   159b8:	b	159c0 <close_stdout@@Base+0x3e00>
   159bc:	mov	r9, r2
   159c0:	add	r3, r8, r8, lsl #2
   159c4:	cmp	r8, ip
   159c8:	mvn	r8, #0
   159cc:	add	r2, r9, #1
   159d0:	lslls	r8, r3, #1
   159d4:	adds	r8, r8, sl
   159d8:	ldrb	sl, [r9, #1]
   159dc:	sub	sl, sl, #48	; 0x30
   159e0:	mvncs	r8, #0
   159e4:	uxtb	r3, sl
   159e8:	cmp	r3, #9
   159ec:	bls	159bc <close_stdout@@Base+0x3dfc>
   159f0:	sub	r8, r8, #1
   159f4:	cmn	r8, #3
   159f8:	bhi	15e74 <close_stdout@@Base+0x42b4>
   159fc:	add	r2, r2, #1
   15a00:	ldrb	r3, [r9, #2]
   15a04:	b	15650 <close_stdout@@Base+0x3a90>
   15a08:	ldr	r3, [r7, #4]
   15a0c:	b	15580 <close_stdout@@Base+0x39c0>
   15a10:	str	r2, [r4, #12]
   15a14:	ldrb	r3, [r2]
   15a18:	sub	r3, r3, #48	; 0x30
   15a1c:	cmp	r3, #9
   15a20:	bhi	160a4 <close_stdout@@Base+0x44e4>
   15a24:	add	r3, r2, #1
   15a28:	mov	r9, r3
   15a2c:	add	r3, r3, #1
   15a30:	ldrb	r1, [r9]
   15a34:	sub	r1, r1, #48	; 0x30
   15a38:	cmp	r1, #9
   15a3c:	bls	15a28 <close_stdout@@Base+0x3e68>
   15a40:	rsb	r2, r2, r9
   15a44:	ldr	r3, [sp, #24]
   15a48:	str	r9, [r4, #16]
   15a4c:	cmp	r3, r2
   15a50:	movcc	r3, r2
   15a54:	str	r3, [sp, #24]
   15a58:	ldrb	r3, [r9]
   15a5c:	cmp	r3, #46	; 0x2e
   15a60:	bne	156dc <close_stdout@@Base+0x3b1c>
   15a64:	ldrb	r3, [r9, #1]
   15a68:	str	r9, [r4, #24]
   15a6c:	cmp	r3, #42	; 0x2a
   15a70:	beq	15d5c <close_stdout@@Base+0x419c>
   15a74:	ldrb	r3, [r9, #1]
   15a78:	add	r2, r9, #1
   15a7c:	sub	r3, r3, #48	; 0x30
   15a80:	cmp	r3, #9
   15a84:	bhi	15aa4 <close_stdout@@Base+0x3ee4>
   15a88:	add	r3, r9, #2
   15a8c:	mov	r2, r3
   15a90:	add	r3, r3, #1
   15a94:	ldrb	r1, [r2]
   15a98:	sub	r1, r1, #48	; 0x30
   15a9c:	cmp	r1, #9
   15aa0:	bls	15a8c <close_stdout@@Base+0x3ecc>
   15aa4:	ldr	r0, [sp, #8]
   15aa8:	rsb	r9, r9, r2
   15aac:	str	r2, [r4, #28]
   15ab0:	cmp	r0, r9
   15ab4:	movcc	r0, r9
   15ab8:	ldrb	r3, [r2]
   15abc:	str	r0, [sp, #8]
   15ac0:	mov	r9, r2
   15ac4:	b	156dc <close_stdout@@Base+0x3b1c>
   15ac8:	ldr	r3, [sp, #20]
   15acc:	cmp	r3, #0
   15ad0:	lslge	r3, r3, #1
   15ad4:	mvnlt	r3, #0
   15ad8:	str	r3, [sp, #20]
   15adc:	ldr	r3, [sp, #20]
   15ae0:	cmp	r3, sl
   15ae4:	bhi	15f80 <close_stdout@@Base+0x43c0>
   15ae8:	adds	r3, sl, #1
   15aec:	str	r3, [sp, #20]
   15af0:	bcc	15f80 <close_stdout@@Base+0x43c0>
   15af4:	ldr	r2, [r5, #4]
   15af8:	ldr	r3, [sp, #12]
   15afc:	cmp	r3, r2
   15b00:	beq	15b0c <close_stdout@@Base+0x3f4c>
   15b04:	mov	r0, r2
   15b08:	bl	10fa8 <free@plt>
   15b0c:	ldr	r0, [r7, #4]
   15b10:	ldr	r3, [sp, #16]
   15b14:	cmp	r3, r0
   15b18:	beq	15b20 <close_stdout@@Base+0x3f60>
   15b1c:	bl	10fa8 <free@plt>
   15b20:	bl	1111c <__errno_location@plt>
   15b24:	mov	r3, #12
   15b28:	mvn	r2, #0
   15b2c:	str	r3, [r0]
   15b30:	b	155b4 <close_stdout@@Base+0x39f4>
   15b34:	ldr	r3, [sp, #24]
   15b38:	add	r9, r2, #1
   15b3c:	str	r2, [r4, #12]
   15b40:	str	r9, [r4, #16]
   15b44:	cmp	r3, #0
   15b48:	ldrb	sl, [r2, #1]
   15b4c:	moveq	r3, #1
   15b50:	str	r3, [sp, #24]
   15b54:	sub	sl, sl, #48	; 0x30
   15b58:	uxtb	r3, sl
   15b5c:	cmp	r3, #9
   15b60:	bls	15bd4 <close_stdout@@Base+0x4014>
   15b64:	ldr	r3, [sp, #36]	; 0x24
   15b68:	cmn	r3, #1
   15b6c:	str	r3, [r4, #20]
   15b70:	add	r3, r3, #1
   15b74:	beq	15e74 <close_stdout@@Base+0x42b4>
   15b78:	ldr	sl, [sp, #36]	; 0x24
   15b7c:	str	r3, [sp, #36]	; 0x24
   15b80:	ldr	r3, [sp, #20]
   15b84:	cmp	r3, sl
   15b88:	bls	15ac8 <close_stdout@@Base+0x3f08>
   15b8c:	ldr	r0, [r5, #4]
   15b90:	ldr	r3, [r5]
   15b94:	cmp	r3, sl
   15b98:	bhi	15bb8 <close_stdout@@Base+0x3ff8>
   15b9c:	add	r2, r3, #1
   15ba0:	str	r2, [r5]
   15ba4:	str	r6, [r0, r3, lsl #4]
   15ba8:	ldr	r3, [r5]
   15bac:	ldr	r0, [r5, #4]
   15bb0:	cmp	r3, sl
   15bb4:	bls	15b9c <close_stdout@@Base+0x3fdc>
   15bb8:	ldr	r3, [r0, sl, lsl #4]
   15bbc:	cmp	r3, #0
   15bc0:	bne	15f74 <close_stdout@@Base+0x43b4>
   15bc4:	mov	r1, #5
   15bc8:	str	r1, [r0, sl, lsl #4]
   15bcc:	ldrb	r3, [r9]
   15bd0:	b	156d4 <close_stdout@@Base+0x3b14>
   15bd4:	mov	r1, r9
   15bd8:	ldrb	r3, [r1, #1]!
   15bdc:	sub	r0, r3, #48	; 0x30
   15be0:	cmp	r0, #9
   15be4:	bls	15bd8 <close_stdout@@Base+0x4018>
   15be8:	cmp	r3, #36	; 0x24
   15bec:	bne	15b64 <close_stdout@@Base+0x3fa4>
   15bf0:	add	r2, r2, #2
   15bf4:	mov	r3, #0
   15bf8:	add	r1, r3, r3, lsl #2
   15bfc:	cmp	r3, ip
   15c00:	mvn	r3, #0
   15c04:	lslls	r3, r1, #1
   15c08:	adds	r3, r3, sl
   15c0c:	ldrb	sl, [r2], #1
   15c10:	sub	sl, sl, #48	; 0x30
   15c14:	mvncs	r3, #0
   15c18:	uxtb	r1, sl
   15c1c:	cmp	r1, #9
   15c20:	bls	15bf8 <close_stdout@@Base+0x4038>
   15c24:	sub	r3, r3, #1
   15c28:	cmn	r3, #3
   15c2c:	bhi	15e74 <close_stdout@@Base+0x42b4>
   15c30:	str	r3, [r4, #20]
   15c34:	mov	r9, r2
   15c38:	mov	sl, r3
   15c3c:	b	15b80 <close_stdout@@Base+0x3fc0>
   15c40:	cmp	sl, #7
   15c44:	movle	sl, #15
   15c48:	movgt	sl, #16
   15c4c:	b	158a8 <close_stdout@@Base+0x3ce8>
   15c50:	cmp	sl, #15
   15c54:	movgt	fp, r3
   15c58:	movgt	sl, #12
   15c5c:	bgt	158a8 <close_stdout@@Base+0x3ce8>
   15c60:	tst	sl, #4
   15c64:	mov	fp, r3
   15c68:	moveq	sl, #11
   15c6c:	movne	sl, #12
   15c70:	b	158a8 <close_stdout@@Base+0x3ce8>
   15c74:	mov	sl, #14
   15c78:	mov	fp, #99	; 0x63
   15c7c:	b	158a8 <close_stdout@@Base+0x3ce8>
   15c80:	mov	sl, #16
   15c84:	mov	fp, #115	; 0x73
   15c88:	b	158a8 <close_stdout@@Base+0x3ce8>
   15c8c:	cmp	sl, #15
   15c90:	bgt	15eb0 <close_stdout@@Base+0x42f0>
   15c94:	tst	sl, #4
   15c98:	bne	15eb0 <close_stdout@@Base+0x42f0>
   15c9c:	cmp	sl, #7
   15ca0:	movgt	fp, r3
   15ca4:	movgt	sl, #8
   15ca8:	bgt	158a8 <close_stdout@@Base+0x3ce8>
   15cac:	tst	sl, #2
   15cb0:	movne	fp, r3
   15cb4:	movne	sl, #2
   15cb8:	bne	158a8 <close_stdout@@Base+0x3ce8>
   15cbc:	tst	sl, #1
   15cc0:	mov	fp, r3
   15cc4:	moveq	sl, #6
   15cc8:	movne	sl, #4
   15ccc:	b	158a8 <close_stdout@@Base+0x3ce8>
   15cd0:	cmp	sl, #15
   15cd4:	bgt	15ebc <close_stdout@@Base+0x42fc>
   15cd8:	tst	sl, #4
   15cdc:	bne	15ebc <close_stdout@@Base+0x42fc>
   15ce0:	cmp	sl, #7
   15ce4:	movgt	fp, r3
   15ce8:	movgt	sl, #7
   15cec:	bgt	158a8 <close_stdout@@Base+0x3ce8>
   15cf0:	tst	sl, #2
   15cf4:	movne	fp, r3
   15cf8:	movne	sl, #1
   15cfc:	bne	158a8 <close_stdout@@Base+0x3ce8>
   15d00:	tst	sl, #1
   15d04:	mov	fp, r3
   15d08:	moveq	sl, #5
   15d0c:	movne	sl, #3
   15d10:	b	158a8 <close_stdout@@Base+0x3ce8>
   15d14:	cmp	sl, #7
   15d18:	movle	sl, #13
   15d1c:	movgt	sl, #14
   15d20:	b	158a8 <close_stdout@@Base+0x3ce8>
   15d24:	cmp	sl, #15
   15d28:	bgt	15ec8 <close_stdout@@Base+0x4308>
   15d2c:	tst	sl, #4
   15d30:	bne	15ec8 <close_stdout@@Base+0x4308>
   15d34:	cmp	sl, #7
   15d38:	movgt	sl, #21
   15d3c:	bgt	158a8 <close_stdout@@Base+0x3ce8>
   15d40:	tst	sl, #2
   15d44:	movne	sl, #18
   15d48:	bne	158a8 <close_stdout@@Base+0x3ce8>
   15d4c:	tst	sl, #1
   15d50:	moveq	sl, #20
   15d54:	movne	sl, #19
   15d58:	b	158a8 <close_stdout@@Base+0x3ce8>
   15d5c:	ldr	r3, [sp, #8]
   15d60:	add	sl, r9, #2
   15d64:	str	sl, [r4, #28]
   15d68:	ldrb	r0, [r9, #2]
   15d6c:	cmp	r3, #1
   15d70:	sub	r0, r0, #48	; 0x30
   15d74:	movls	r3, #2
   15d78:	str	r3, [sp, #8]
   15d7c:	uxtb	r3, r0
   15d80:	cmp	r3, #9
   15d84:	bhi	15ed0 <close_stdout@@Base+0x4310>
   15d88:	mov	r2, sl
   15d8c:	ldrb	r3, [r2, #1]!
   15d90:	sub	r1, r3, #48	; 0x30
   15d94:	cmp	r1, #9
   15d98:	bls	15d8c <close_stdout@@Base+0x41cc>
   15d9c:	cmp	r3, #36	; 0x24
   15da0:	bne	15ed0 <close_stdout@@Base+0x4310>
   15da4:	add	r9, r9, #3
   15da8:	mov	r3, #0
   15dac:	add	r2, r3, r3, lsl #2
   15db0:	cmp	r3, ip
   15db4:	mvn	r3, #0
   15db8:	lslls	r3, r2, #1
   15dbc:	adds	r3, r3, r0
   15dc0:	ldrb	r0, [r9], #1
   15dc4:	sub	r0, r0, #48	; 0x30
   15dc8:	mvncs	r3, #0
   15dcc:	uxtb	r2, r0
   15dd0:	cmp	r2, #9
   15dd4:	bls	15dac <close_stdout@@Base+0x41ec>
   15dd8:	sub	r3, r3, #1
   15ddc:	cmn	r3, #3
   15de0:	bhi	15e74 <close_stdout@@Base+0x42b4>
   15de4:	mov	sl, r9
   15de8:	mov	r9, r3
   15dec:	str	r3, [r4, #32]
   15df0:	ldr	r3, [sp, #20]
   15df4:	cmp	r3, r9
   15df8:	bhi	16008 <close_stdout@@Base+0x4448>
   15dfc:	ldr	r3, [sp, #20]
   15e00:	cmp	r3, #0
   15e04:	blt	15af4 <close_stdout@@Base+0x3f34>
   15e08:	lsl	r3, r3, #1
   15e0c:	str	r3, [sp, #20]
   15e10:	cmp	r3, r9
   15e14:	bhi	15e24 <close_stdout@@Base+0x4264>
   15e18:	adds	r3, r9, #1
   15e1c:	str	r3, [sp, #20]
   15e20:	bcs	15af4 <close_stdout@@Base+0x3f34>
   15e24:	ldr	r3, [sp, #20]
   15e28:	cmn	r3, #-268435455	; 0xf0000001
   15e2c:	bhi	15af4 <close_stdout@@Base+0x3f34>
   15e30:	ldr	r0, [r5, #4]
   15e34:	lsl	r1, r3, #4
   15e38:	ldr	r3, [sp, #12]
   15e3c:	cmp	r3, r0
   15e40:	beq	1610c <close_stdout@@Base+0x454c>
   15e44:	str	ip, [sp, #4]
   15e48:	bl	11014 <realloc@plt>
   15e4c:	ldr	r2, [r5, #4]
   15e50:	ldr	ip, [sp, #4]
   15e54:	subs	r3, r0, #0
   15e58:	beq	15af8 <close_stdout@@Base+0x3f38>
   15e5c:	ldr	r0, [sp, #12]
   15e60:	cmp	r0, r2
   15e64:	beq	16124 <close_stdout@@Base+0x4564>
   15e68:	mov	r0, r3
   15e6c:	str	r3, [r5, #4]
   15e70:	b	1600c <close_stdout@@Base+0x444c>
   15e74:	ldr	r0, [r5, #4]
   15e78:	ldr	r3, [sp, #12]
   15e7c:	cmp	r3, r0
   15e80:	beq	15e88 <close_stdout@@Base+0x42c8>
   15e84:	bl	10fa8 <free@plt>
   15e88:	ldr	r0, [r7, #4]
   15e8c:	ldr	r3, [sp, #16]
   15e90:	cmp	r3, r0
   15e94:	beq	15e9c <close_stdout@@Base+0x42dc>
   15e98:	bl	10fa8 <free@plt>
   15e9c:	bl	1111c <__errno_location@plt>
   15ea0:	mov	r3, #22
   15ea4:	mvn	r2, #0
   15ea8:	str	r3, [r0]
   15eac:	b	155b4 <close_stdout@@Base+0x39f4>
   15eb0:	mov	fp, r3
   15eb4:	mov	sl, #10
   15eb8:	b	158a8 <close_stdout@@Base+0x3ce8>
   15ebc:	mov	fp, r3
   15ec0:	mov	sl, #9
   15ec4:	b	158a8 <close_stdout@@Base+0x3ce8>
   15ec8:	mov	sl, #22
   15ecc:	b	158a8 <close_stdout@@Base+0x3ce8>
   15ed0:	ldr	r9, [r4, #32]
   15ed4:	cmn	r9, #1
   15ed8:	bne	15df0 <close_stdout@@Base+0x4230>
   15edc:	ldr	r3, [sp, #36]	; 0x24
   15ee0:	cmn	r3, #1
   15ee4:	str	r3, [r4, #32]
   15ee8:	add	r3, r3, #1
   15eec:	beq	15e74 <close_stdout@@Base+0x42b4>
   15ef0:	ldr	r9, [sp, #36]	; 0x24
   15ef4:	str	r3, [sp, #36]	; 0x24
   15ef8:	b	15df0 <close_stdout@@Base+0x4230>
   15efc:	ldr	r3, [sp, #20]
   15f00:	cmp	r3, #0
   15f04:	blt	15af4 <close_stdout@@Base+0x3f34>
   15f08:	lsl	r3, r3, #1
   15f0c:	str	r3, [sp, #20]
   15f10:	cmp	r3, r8
   15f14:	bhi	15f24 <close_stdout@@Base+0x4364>
   15f18:	adds	r3, r8, #1
   15f1c:	str	r3, [sp, #20]
   15f20:	bcs	15af4 <close_stdout@@Base+0x3f34>
   15f24:	ldr	r3, [sp, #20]
   15f28:	cmn	r3, #-268435455	; 0xf0000001
   15f2c:	bhi	15af4 <close_stdout@@Base+0x3f34>
   15f30:	ldr	r0, [r5, #4]
   15f34:	lsl	r1, r3, #4
   15f38:	ldr	r3, [sp, #12]
   15f3c:	cmp	r3, r0
   15f40:	beq	16068 <close_stdout@@Base+0x44a8>
   15f44:	str	ip, [sp, #4]
   15f48:	bl	11014 <realloc@plt>
   15f4c:	ldr	r2, [r5, #4]
   15f50:	ldr	ip, [sp, #4]
   15f54:	subs	r3, r0, #0
   15f58:	beq	15af8 <close_stdout@@Base+0x3f38>
   15f5c:	ldr	r0, [sp, #12]
   15f60:	cmp	r0, r2
   15f64:	beq	16080 <close_stdout@@Base+0x44c0>
   15f68:	mov	r0, r3
   15f6c:	str	r3, [r5, #4]
   15f70:	b	158c4 <close_stdout@@Base+0x3d04>
   15f74:	cmp	r3, #5
   15f78:	beq	15a58 <close_stdout@@Base+0x3e98>
   15f7c:	b	15e78 <close_stdout@@Base+0x42b8>
   15f80:	ldr	r3, [sp, #20]
   15f84:	cmn	r3, #-268435455	; 0xf0000001
   15f88:	bhi	15af4 <close_stdout@@Base+0x3f34>
   15f8c:	ldr	r0, [r5, #4]
   15f90:	lsl	r1, r3, #4
   15f94:	ldr	r3, [sp, #12]
   15f98:	cmp	r3, r0
   15f9c:	beq	160d0 <close_stdout@@Base+0x4510>
   15fa0:	str	ip, [sp, #4]
   15fa4:	bl	11014 <realloc@plt>
   15fa8:	ldr	r2, [r5, #4]
   15fac:	ldr	ip, [sp, #4]
   15fb0:	subs	r3, r0, #0
   15fb4:	beq	15af8 <close_stdout@@Base+0x3f38>
   15fb8:	ldr	r0, [sp, #12]
   15fbc:	cmp	r0, r2
   15fc0:	beq	160e8 <close_stdout@@Base+0x4528>
   15fc4:	mov	r0, r3
   15fc8:	str	r3, [r5, #4]
   15fcc:	b	15b90 <close_stdout@@Base+0x3fd0>
   15fd0:	ldr	r3, [sp, #36]	; 0x24
   15fd4:	cmn	r3, #1
   15fd8:	str	r3, [r4, #40]	; 0x28
   15fdc:	add	r3, r3, #1
   15fe0:	beq	15e74 <close_stdout@@Base+0x42b4>
   15fe4:	ldr	r8, [sp, #36]	; 0x24
   15fe8:	str	r3, [sp, #36]	; 0x24
   15fec:	b	158b4 <close_stdout@@Base+0x3cf4>
   15ff0:	mov	r0, r1
   15ff4:	str	ip, [sp, #4]
   15ff8:	bl	110a4 <malloc@plt>
   15ffc:	ldr	ip, [sp, #4]
   16000:	mov	r4, r0
   16004:	b	15970 <close_stdout@@Base+0x3db0>
   16008:	ldr	r0, [r5, #4]
   1600c:	ldr	r3, [r5]
   16010:	cmp	r3, r9
   16014:	bhi	16034 <close_stdout@@Base+0x4474>
   16018:	add	r2, r3, #1
   1601c:	str	r2, [r5]
   16020:	str	r6, [r0, r3, lsl #4]
   16024:	ldr	r3, [r5]
   16028:	ldr	r0, [r5, #4]
   1602c:	cmp	r3, r9
   16030:	bls	16018 <close_stdout@@Base+0x4458>
   16034:	ldr	r3, [r0, r9, lsl #4]
   16038:	cmp	r3, #0
   1603c:	bne	16054 <close_stdout@@Base+0x4494>
   16040:	mov	r1, #5
   16044:	str	r1, [r0, r9, lsl #4]
   16048:	mov	r9, sl
   1604c:	ldrb	r3, [sl]
   16050:	b	156dc <close_stdout@@Base+0x3b1c>
   16054:	cmp	r3, #5
   16058:	bne	15e78 <close_stdout@@Base+0x42b8>
   1605c:	ldrb	r3, [sl]
   16060:	mov	r9, sl
   16064:	b	156dc <close_stdout@@Base+0x3b1c>
   16068:	mov	r0, r1
   1606c:	str	ip, [sp, #4]
   16070:	bl	110a4 <malloc@plt>
   16074:	ldr	ip, [sp, #4]
   16078:	subs	r3, r0, #0
   1607c:	beq	16148 <close_stdout@@Base+0x4588>
   16080:	ldr	r2, [r5]
   16084:	mov	r0, r3
   16088:	ldr	r1, [sp, #12]
   1608c:	str	ip, [sp, #4]
   16090:	lsl	r2, r2, #4
   16094:	bl	10fc0 <memcpy@plt>
   16098:	ldr	ip, [sp, #4]
   1609c:	mov	r3, r0
   160a0:	b	15f68 <close_stdout@@Base+0x43a8>
   160a4:	mov	r2, #0
   160a8:	b	15a44 <close_stdout@@Base+0x3e84>
   160ac:	ldr	r2, [r7]
   160b0:	mov	r3, #44	; 0x2c
   160b4:	mov	r0, r4
   160b8:	ldr	r1, [sp, #16]
   160bc:	str	ip, [sp, #4]
   160c0:	mul	r2, r3, r2
   160c4:	bl	10fc0 <memcpy@plt>
   160c8:	ldr	ip, [sp, #4]
   160cc:	b	15988 <close_stdout@@Base+0x3dc8>
   160d0:	mov	r0, r1
   160d4:	str	ip, [sp, #4]
   160d8:	bl	110a4 <malloc@plt>
   160dc:	ldr	ip, [sp, #4]
   160e0:	subs	r3, r0, #0
   160e4:	beq	16148 <close_stdout@@Base+0x4588>
   160e8:	ldr	r2, [r5]
   160ec:	mov	r0, r3
   160f0:	ldr	r1, [sp, #12]
   160f4:	str	ip, [sp, #4]
   160f8:	lsl	r2, r2, #4
   160fc:	bl	10fc0 <memcpy@plt>
   16100:	ldr	ip, [sp, #4]
   16104:	mov	r3, r0
   16108:	b	15fc4 <close_stdout@@Base+0x4404>
   1610c:	mov	r0, r1
   16110:	str	ip, [sp, #4]
   16114:	bl	110a4 <malloc@plt>
   16118:	ldr	ip, [sp, #4]
   1611c:	subs	r3, r0, #0
   16120:	beq	16148 <close_stdout@@Base+0x4588>
   16124:	ldr	r2, [r5]
   16128:	mov	r0, r3
   1612c:	ldr	r1, [sp, #12]
   16130:	str	ip, [sp, #4]
   16134:	lsl	r2, r2, #4
   16138:	bl	10fc0 <memcpy@plt>
   1613c:	ldr	ip, [sp, #4]
   16140:	mov	r3, r0
   16144:	b	15e68 <close_stdout@@Base+0x42a8>
   16148:	ldr	r2, [sp, #12]
   1614c:	b	15af8 <close_stdout@@Base+0x3f38>
   16150:	subs	r2, r1, #1
   16154:	bxeq	lr
   16158:	bcc	16330 <close_stdout@@Base+0x4770>
   1615c:	cmp	r0, r1
   16160:	bls	16314 <close_stdout@@Base+0x4754>
   16164:	tst	r1, r2
   16168:	beq	16320 <close_stdout@@Base+0x4760>
   1616c:	clz	r3, r0
   16170:	clz	r2, r1
   16174:	sub	r3, r2, r3
   16178:	rsbs	r3, r3, #31
   1617c:	addne	r3, r3, r3, lsl #1
   16180:	mov	r2, #0
   16184:	addne	pc, pc, r3, lsl #2
   16188:	nop	{0}
   1618c:	cmp	r0, r1, lsl #31
   16190:	adc	r2, r2, r2
   16194:	subcs	r0, r0, r1, lsl #31
   16198:	cmp	r0, r1, lsl #30
   1619c:	adc	r2, r2, r2
   161a0:	subcs	r0, r0, r1, lsl #30
   161a4:	cmp	r0, r1, lsl #29
   161a8:	adc	r2, r2, r2
   161ac:	subcs	r0, r0, r1, lsl #29
   161b0:	cmp	r0, r1, lsl #28
   161b4:	adc	r2, r2, r2
   161b8:	subcs	r0, r0, r1, lsl #28
   161bc:	cmp	r0, r1, lsl #27
   161c0:	adc	r2, r2, r2
   161c4:	subcs	r0, r0, r1, lsl #27
   161c8:	cmp	r0, r1, lsl #26
   161cc:	adc	r2, r2, r2
   161d0:	subcs	r0, r0, r1, lsl #26
   161d4:	cmp	r0, r1, lsl #25
   161d8:	adc	r2, r2, r2
   161dc:	subcs	r0, r0, r1, lsl #25
   161e0:	cmp	r0, r1, lsl #24
   161e4:	adc	r2, r2, r2
   161e8:	subcs	r0, r0, r1, lsl #24
   161ec:	cmp	r0, r1, lsl #23
   161f0:	adc	r2, r2, r2
   161f4:	subcs	r0, r0, r1, lsl #23
   161f8:	cmp	r0, r1, lsl #22
   161fc:	adc	r2, r2, r2
   16200:	subcs	r0, r0, r1, lsl #22
   16204:	cmp	r0, r1, lsl #21
   16208:	adc	r2, r2, r2
   1620c:	subcs	r0, r0, r1, lsl #21
   16210:	cmp	r0, r1, lsl #20
   16214:	adc	r2, r2, r2
   16218:	subcs	r0, r0, r1, lsl #20
   1621c:	cmp	r0, r1, lsl #19
   16220:	adc	r2, r2, r2
   16224:	subcs	r0, r0, r1, lsl #19
   16228:	cmp	r0, r1, lsl #18
   1622c:	adc	r2, r2, r2
   16230:	subcs	r0, r0, r1, lsl #18
   16234:	cmp	r0, r1, lsl #17
   16238:	adc	r2, r2, r2
   1623c:	subcs	r0, r0, r1, lsl #17
   16240:	cmp	r0, r1, lsl #16
   16244:	adc	r2, r2, r2
   16248:	subcs	r0, r0, r1, lsl #16
   1624c:	cmp	r0, r1, lsl #15
   16250:	adc	r2, r2, r2
   16254:	subcs	r0, r0, r1, lsl #15
   16258:	cmp	r0, r1, lsl #14
   1625c:	adc	r2, r2, r2
   16260:	subcs	r0, r0, r1, lsl #14
   16264:	cmp	r0, r1, lsl #13
   16268:	adc	r2, r2, r2
   1626c:	subcs	r0, r0, r1, lsl #13
   16270:	cmp	r0, r1, lsl #12
   16274:	adc	r2, r2, r2
   16278:	subcs	r0, r0, r1, lsl #12
   1627c:	cmp	r0, r1, lsl #11
   16280:	adc	r2, r2, r2
   16284:	subcs	r0, r0, r1, lsl #11
   16288:	cmp	r0, r1, lsl #10
   1628c:	adc	r2, r2, r2
   16290:	subcs	r0, r0, r1, lsl #10
   16294:	cmp	r0, r1, lsl #9
   16298:	adc	r2, r2, r2
   1629c:	subcs	r0, r0, r1, lsl #9
   162a0:	cmp	r0, r1, lsl #8
   162a4:	adc	r2, r2, r2
   162a8:	subcs	r0, r0, r1, lsl #8
   162ac:	cmp	r0, r1, lsl #7
   162b0:	adc	r2, r2, r2
   162b4:	subcs	r0, r0, r1, lsl #7
   162b8:	cmp	r0, r1, lsl #6
   162bc:	adc	r2, r2, r2
   162c0:	subcs	r0, r0, r1, lsl #6
   162c4:	cmp	r0, r1, lsl #5
   162c8:	adc	r2, r2, r2
   162cc:	subcs	r0, r0, r1, lsl #5
   162d0:	cmp	r0, r1, lsl #4
   162d4:	adc	r2, r2, r2
   162d8:	subcs	r0, r0, r1, lsl #4
   162dc:	cmp	r0, r1, lsl #3
   162e0:	adc	r2, r2, r2
   162e4:	subcs	r0, r0, r1, lsl #3
   162e8:	cmp	r0, r1, lsl #2
   162ec:	adc	r2, r2, r2
   162f0:	subcs	r0, r0, r1, lsl #2
   162f4:	cmp	r0, r1, lsl #1
   162f8:	adc	r2, r2, r2
   162fc:	subcs	r0, r0, r1, lsl #1
   16300:	cmp	r0, r1
   16304:	adc	r2, r2, r2
   16308:	subcs	r0, r0, r1
   1630c:	mov	r0, r2
   16310:	bx	lr
   16314:	moveq	r0, #1
   16318:	movne	r0, #0
   1631c:	bx	lr
   16320:	clz	r2, r1
   16324:	rsb	r2, r2, #31
   16328:	lsr	r0, r0, r2
   1632c:	bx	lr
   16330:	cmp	r0, #0
   16334:	mvnne	r0, #0
   16338:	b	1635c <close_stdout@@Base+0x479c>
   1633c:	cmp	r1, #0
   16340:	beq	16330 <close_stdout@@Base+0x4770>
   16344:	push	{r0, r1, lr}
   16348:	bl	16150 <close_stdout@@Base+0x4590>
   1634c:	pop	{r1, r2, lr}
   16350:	mul	r3, r2, r0
   16354:	sub	r1, r1, r3
   16358:	bx	lr
   1635c:	push	{r1, lr}
   16360:	mov	r0, #8
   16364:	bl	10f84 <raise@plt>
   16368:	pop	{r1, pc}
   1636c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   16370:	mov	r7, r0
   16374:	ldr	r6, [pc, #76]	; 163c8 <close_stdout@@Base+0x4808>
   16378:	mov	r8, r1
   1637c:	ldr	r5, [pc, #72]	; 163cc <close_stdout@@Base+0x480c>
   16380:	mov	r9, r2
   16384:	add	r6, pc, r6
   16388:	bl	10f40 <fdopen@plt-0x20>
   1638c:	add	r5, pc, r5
   16390:	rsb	r6, r5, r6
   16394:	asrs	r6, r6, #2
   16398:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1639c:	sub	r5, r5, #4
   163a0:	mov	r4, #0
   163a4:	add	r4, r4, #1
   163a8:	ldr	r3, [r5, #4]!
   163ac:	mov	r0, r7
   163b0:	mov	r1, r8
   163b4:	mov	r2, r9
   163b8:	blx	r3
   163bc:	cmp	r4, r6
   163c0:	bne	163a4 <close_stdout@@Base+0x47e4>
   163c4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   163c8:	andeq	r0, r1, r0, ror #21
   163cc:	ldrdeq	r0, [r1], -r4
   163d0:	bx	lr
   163d4:	ldr	r3, [pc, #28]	; 163f8 <close_stdout@@Base+0x4838>
   163d8:	mov	r1, #0
   163dc:	ldr	r2, [pc, #24]	; 163fc <close_stdout@@Base+0x483c>
   163e0:	add	r3, pc, r3
   163e4:	ldr	r3, [r3, r2]
   163e8:	cmp	r3, #0
   163ec:	ldrne	r2, [r3]
   163f0:	moveq	r2, r3
   163f4:	b	11128 <__cxa_atexit@plt>
   163f8:	andeq	r0, r1, r8, lsl ip
   163fc:	andeq	r0, r0, r4, lsl r1

Disassembly of section .fini:

00016400 <.fini>:
   16400:	push	{r3, lr}
   16404:	pop	{r3, pc}
