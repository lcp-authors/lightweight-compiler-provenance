
centos-preinstalled/mknod:     file format elf32-littlearm


Disassembly of section .init:

00011838 <_init@@Base>:
   11838:	push	{r3, lr}
   1183c:	bl	1250c <__assert_fail@plt+0x864>
   11840:	pop	{r3, pc}

Disassembly of section .plt:

00011844 <fdopen@plt-0x14>:
   11844:	push	{lr}		; (str lr, [sp, #-4]!)
   11848:	ldr	lr, [pc, #4]	; 11854 <_init@@Base+0x1c>
   1184c:	add	lr, pc, lr
   11850:	ldr	pc, [lr, #8]!
   11854:	andeq	fp, r1, ip, lsr #15

00011858 <fdopen@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #110592	; 0x1b000
   11860:	ldr	pc, [ip, #1964]!	; 0x7ac

00011864 <fstatfs64@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #110592	; 0x1b000
   1186c:	ldr	pc, [ip, #1956]!	; 0x7a4

00011870 <calloc@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #110592	; 0x1b000
   11878:	ldr	pc, [ip, #1948]!	; 0x79c

0001187c <fputs_unlocked@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #110592	; 0x1b000
   11884:	ldr	pc, [ip, #1940]!	; 0x794

00011888 <raise@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #110592	; 0x1b000
   11890:	ldr	pc, [ip, #1932]!	; 0x78c

00011894 <is_selinux_enabled@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #110592	; 0x1b000
   1189c:	ldr	pc, [ip, #1924]!	; 0x784

000118a0 <strcmp@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #110592	; 0x1b000
   118a8:	ldr	pc, [ip, #1916]!	; 0x77c

000118ac <context_type_get@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #110592	; 0x1b000
   118b4:	ldr	pc, [ip, #1908]!	; 0x774

000118b8 <fflush@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #110592	; 0x1b000
   118c0:	ldr	pc, [ip, #1900]!	; 0x76c

000118c4 <lsetfilecon@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #110592	; 0x1b000
   118cc:	ldr	pc, [ip, #1892]!	; 0x764

000118d0 <memmove@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #110592	; 0x1b000
   118d8:	ldr	pc, [ip, #1884]!	; 0x75c

000118dc <free@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #110592	; 0x1b000
   118e4:	ldr	pc, [ip, #1876]!	; 0x754

000118e8 <_exit@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #110592	; 0x1b000
   118f0:	ldr	pc, [ip, #1868]!	; 0x74c

000118f4 <memcpy@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #110592	; 0x1b000
   118fc:	ldr	pc, [ip, #1860]!	; 0x744

00011900 <__strtoull_internal@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #110592	; 0x1b000
   11908:	ldr	pc, [ip, #1852]!	; 0x73c

0001190c <mbsinit@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #110592	; 0x1b000
   11914:	ldr	pc, [ip, #1844]!	; 0x734

00011918 <context_new@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #110592	; 0x1b000
   11920:	ldr	pc, [ip, #1836]!	; 0x72c

00011924 <memcmp@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #110592	; 0x1b000
   1192c:	ldr	pc, [ip, #1828]!	; 0x724

00011930 <dcgettext@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #110592	; 0x1b000
   11938:	ldr	pc, [ip, #1820]!	; 0x71c

0001193c <__stack_chk_fail@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #110592	; 0x1b000
   11944:	ldr	pc, [ip, #1812]!	; 0x714

00011948 <context_type_set@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #110592	; 0x1b000
   11950:	ldr	pc, [ip, #1804]!	; 0x70c

00011954 <realloc@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #110592	; 0x1b000
   1195c:	ldr	pc, [ip, #1796]!	; 0x704

00011960 <fgetfilecon@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #110592	; 0x1b000
   11968:	ldr	pc, [ip, #1788]!	; 0x6fc

0001196c <textdomain@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #110592	; 0x1b000
   11974:	ldr	pc, [ip, #1780]!	; 0x6f4

00011978 <__rawmemchr@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #110592	; 0x1b000
   11980:	ldr	pc, [ip, #1772]!	; 0x6ec

00011984 <__fxstatat64@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #110592	; 0x1b000
   1198c:	ldr	pc, [ip, #1764]!	; 0x6e4

00011990 <iswprint@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #110592	; 0x1b000
   11998:	ldr	pc, [ip, #1756]!	; 0x6dc

0001199c <__fxstat64@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #110592	; 0x1b000
   119a4:	ldr	pc, [ip, #1748]!	; 0x6d4

000119a8 <readlink@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #110592	; 0x1b000
   119b0:	ldr	pc, [ip, #1740]!	; 0x6cc

000119b4 <fwrite@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #110592	; 0x1b000
   119bc:	ldr	pc, [ip, #1732]!	; 0x6c4

000119c0 <lseek64@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #110592	; 0x1b000
   119c8:	ldr	pc, [ip, #1724]!	; 0x6bc

000119cc <__ctype_get_mb_cur_max@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #110592	; 0x1b000
   119d4:	ldr	pc, [ip, #1716]!	; 0x6b4

000119d8 <strcpy@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #110592	; 0x1b000
   119e0:	ldr	pc, [ip, #1708]!	; 0x6ac

000119e4 <matchpathcon@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #110592	; 0x1b000
   119ec:	ldr	pc, [ip, #1700]!	; 0x6a4

000119f0 <getcon@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #110592	; 0x1b000
   119f8:	ldr	pc, [ip, #1692]!	; 0x69c

000119fc <__fpending@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #110592	; 0x1b000
   11a04:	ldr	pc, [ip, #1684]!	; 0x694

00011a08 <mbrtowc@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #110592	; 0x1b000
   11a10:	ldr	pc, [ip, #1676]!	; 0x68c

00011a14 <error@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #110592	; 0x1b000
   11a1c:	ldr	pc, [ip, #1668]!	; 0x684

00011a20 <open64@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #110592	; 0x1b000
   11a28:	ldr	pc, [ip, #1660]!	; 0x67c

00011a2c <getenv@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #110592	; 0x1b000
   11a34:	ldr	pc, [ip, #1652]!	; 0x674

00011a38 <lgetfilecon@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #110592	; 0x1b000
   11a40:	ldr	pc, [ip, #1644]!	; 0x66c

00011a44 <malloc@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #110592	; 0x1b000
   11a4c:	ldr	pc, [ip, #1636]!	; 0x664

00011a50 <__libc_start_main@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #110592	; 0x1b000
   11a58:	ldr	pc, [ip, #1628]!	; 0x65c

00011a5c <__freading@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #110592	; 0x1b000
   11a64:	ldr	pc, [ip, #1620]!	; 0x654

00011a68 <__gmon_start__@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #110592	; 0x1b000
   11a70:	ldr	pc, [ip, #1612]!	; 0x64c

00011a74 <context_free@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #110592	; 0x1b000
   11a7c:	ldr	pc, [ip, #1604]!	; 0x644

00011a80 <getopt_long@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #110592	; 0x1b000
   11a88:	ldr	pc, [ip, #1596]!	; 0x63c

00011a8c <__ctype_b_loc@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #110592	; 0x1b000
   11a94:	ldr	pc, [ip, #1588]!	; 0x634

00011a98 <getcwd@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #110592	; 0x1b000
   11aa0:	ldr	pc, [ip, #1580]!	; 0x62c

00011aa4 <exit@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #110592	; 0x1b000
   11aac:	ldr	pc, [ip, #1572]!	; 0x624

00011ab0 <getfilecon@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #110592	; 0x1b000
   11ab8:	ldr	pc, [ip, #1564]!	; 0x61c

00011abc <strlen@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #110592	; 0x1b000
   11ac4:	ldr	pc, [ip, #1556]!	; 0x614

00011ac8 <strchr@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #110592	; 0x1b000
   11ad0:	ldr	pc, [ip, #1548]!	; 0x60c

00011ad4 <openat64@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #110592	; 0x1b000
   11adc:	ldr	pc, [ip, #1540]!	; 0x604

00011ae0 <setfscreatecon@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #110592	; 0x1b000
   11ae8:	ldr	pc, [ip, #1532]!	; 0x5fc

00011aec <ungetc@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #110592	; 0x1b000
   11af4:	ldr	pc, [ip, #1524]!	; 0x5f4

00011af8 <fcntl@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #110592	; 0x1b000
   11b00:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b04 <__errno_location@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #110592	; 0x1b000
   11b0c:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b10 <__cxa_atexit@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #110592	; 0x1b000
   11b18:	ldr	pc, [ip, #1500]!	; 0x5dc

00011b1c <memset@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #110592	; 0x1b000
   11b24:	ldr	pc, [ip, #1492]!	; 0x5d4

00011b28 <fscanf@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #110592	; 0x1b000
   11b30:	ldr	pc, [ip, #1484]!	; 0x5cc

00011b34 <__printf_chk@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #110592	; 0x1b000
   11b3c:	ldr	pc, [ip, #1476]!	; 0x5c4

00011b40 <fileno@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #110592	; 0x1b000
   11b48:	ldr	pc, [ip, #1468]!	; 0x5bc

00011b4c <__fprintf_chk@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #110592	; 0x1b000
   11b54:	ldr	pc, [ip, #1460]!	; 0x5b4

00011b58 <fclose@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #110592	; 0x1b000
   11b60:	ldr	pc, [ip, #1452]!	; 0x5ac

00011b64 <fseeko64@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #110592	; 0x1b000
   11b6c:	ldr	pc, [ip, #1444]!	; 0x5a4

00011b70 <__uflow@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #110592	; 0x1b000
   11b78:	ldr	pc, [ip, #1436]!	; 0x59c

00011b7c <setlocale@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #110592	; 0x1b000
   11b84:	ldr	pc, [ip, #1428]!	; 0x594

00011b88 <fsetfilecon@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #110592	; 0x1b000
   11b90:	ldr	pc, [ip, #1420]!	; 0x58c

00011b94 <strrchr@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #110592	; 0x1b000
   11b9c:	ldr	pc, [ip, #1412]!	; 0x584

00011ba0 <nl_langinfo@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #110592	; 0x1b000
   11ba8:	ldr	pc, [ip, #1404]!	; 0x57c

00011bac <readdir64@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #110592	; 0x1b000
   11bb4:	ldr	pc, [ip, #1396]!	; 0x574

00011bb8 <fdopendir@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #110592	; 0x1b000
   11bc0:	ldr	pc, [ip, #1388]!	; 0x56c

00011bc4 <security_compute_create@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #110592	; 0x1b000
   11bcc:	ldr	pc, [ip, #1380]!	; 0x564

00011bd0 <dirfd@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #110592	; 0x1b000
   11bd8:	ldr	pc, [ip, #1372]!	; 0x55c

00011bdc <fchdir@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #110592	; 0x1b000
   11be4:	ldr	pc, [ip, #1364]!	; 0x554

00011be8 <qsort@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #110592	; 0x1b000
   11bf0:	ldr	pc, [ip, #1356]!	; 0x54c

00011bf4 <freecon@plt>:
   11bf4:	add	ip, pc, #0, 12
   11bf8:	add	ip, ip, #110592	; 0x1b000
   11bfc:	ldr	pc, [ip, #1348]!	; 0x544

00011c00 <bindtextdomain@plt>:
   11c00:	add	ip, pc, #0, 12
   11c04:	add	ip, ip, #110592	; 0x1b000
   11c08:	ldr	pc, [ip, #1340]!	; 0x53c

00011c0c <getfscreatecon@plt>:
   11c0c:	add	ip, pc, #0, 12
   11c10:	add	ip, ip, #110592	; 0x1b000
   11c14:	ldr	pc, [ip, #1332]!	; 0x534

00011c18 <umask@plt>:
   11c18:	add	ip, pc, #0, 12
   11c1c:	add	ip, ip, #110592	; 0x1b000
   11c20:	ldr	pc, [ip, #1324]!	; 0x52c

00011c24 <context_str@plt>:
   11c24:	add	ip, pc, #0, 12
   11c28:	add	ip, ip, #110592	; 0x1b000
   11c2c:	ldr	pc, [ip, #1316]!	; 0x524

00011c30 <chmod@plt>:
   11c30:	add	ip, pc, #0, 12
   11c34:	add	ip, ip, #110592	; 0x1b000
   11c38:	ldr	pc, [ip, #1308]!	; 0x51c

00011c3c <__xstat64@plt>:
   11c3c:	add	ip, pc, #0, 12
   11c40:	add	ip, ip, #110592	; 0x1b000
   11c44:	ldr	pc, [ip, #1300]!	; 0x514

00011c48 <__xmknod@plt>:
   11c48:	add	ip, pc, #0, 12
   11c4c:	add	ip, ip, #110592	; 0x1b000
   11c50:	ldr	pc, [ip, #1292]!	; 0x50c

00011c54 <strncmp@plt>:
   11c54:	add	ip, pc, #0, 12
   11c58:	add	ip, ip, #110592	; 0x1b000
   11c5c:	ldr	pc, [ip, #1284]!	; 0x504

00011c60 <abort@plt>:
   11c60:	add	ip, pc, #0, 12
   11c64:	add	ip, ip, #110592	; 0x1b000
   11c68:	ldr	pc, [ip, #1276]!	; 0x4fc

00011c6c <close@plt>:
   11c6c:	add	ip, pc, #0, 12
   11c70:	add	ip, ip, #110592	; 0x1b000
   11c74:	ldr	pc, [ip, #1268]!	; 0x4f4

00011c78 <__lxstat64@plt>:
   11c78:	add	ip, pc, #0, 12
   11c7c:	add	ip, ip, #110592	; 0x1b000
   11c80:	ldr	pc, [ip, #1260]!	; 0x4ec

00011c84 <mkfifo@plt>:
   11c84:	add	ip, pc, #0, 12
   11c88:	add	ip, ip, #110592	; 0x1b000
   11c8c:	ldr	pc, [ip, #1252]!	; 0x4e4

00011c90 <mode_to_security_class@plt>:
   11c90:	add	ip, pc, #0, 12
   11c94:	add	ip, ip, #110592	; 0x1b000
   11c98:	ldr	pc, [ip, #1244]!	; 0x4dc

00011c9c <closedir@plt>:
   11c9c:	add	ip, pc, #0, 12
   11ca0:	add	ip, ip, #110592	; 0x1b000
   11ca4:	ldr	pc, [ip, #1236]!	; 0x4d4

00011ca8 <__assert_fail@plt>:
   11ca8:	add	ip, pc, #0, 12
   11cac:	add	ip, ip, #110592	; 0x1b000
   11cb0:	ldr	pc, [ip, #1228]!	; 0x4cc

Disassembly of section .text:

00011cb8 <close_stdout@@Base-0x18bc>:
   11cb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cbc:	sub	sp, sp, #60	; 0x3c
   11cc0:	ldr	r4, [pc, #1920]	; 12448 <__assert_fail@plt+0x7a0>
   11cc4:	mov	fp, #0
   11cc8:	ldr	r3, [pc, #1916]	; 1244c <__assert_fail@plt+0x7a4>
   11ccc:	mov	sl, r1
   11cd0:	add	r4, pc, r4
   11cd4:	str	fp, [sp, #8]
   11cd8:	mov	r6, r0
   11cdc:	ldr	r0, [r1]
   11ce0:	ldr	r3, [r4, r3]
   11ce4:	mov	r9, fp
   11ce8:	ldr	r1, [pc, #1888]	; 12450 <__assert_fail@plt+0x7a8>
   11cec:	str	fp, [sp, #16]
   11cf0:	ldr	r3, [r3]
   11cf4:	add	r1, pc, r1
   11cf8:	str	r1, [sp, #20]
   11cfc:	ldr	r5, [pc, #1872]	; 12454 <__assert_fail@plt+0x7ac>
   11d00:	str	r3, [sp, #52]	; 0x34
   11d04:	bl	15008 <triple_free@@Base+0x56c>
   11d08:	ldr	r1, [pc, #1864]	; 12458 <__assert_fail@plt+0x7b0>
   11d0c:	mov	r0, #6
   11d10:	add	r5, pc, r5
   11d14:	ldr	r8, [pc, #1856]	; 1245c <__assert_fail@plt+0x7b4>
   11d18:	add	r1, pc, r1
   11d1c:	ldr	r7, [pc, #1852]	; 12460 <__assert_fail@plt+0x7b8>
   11d20:	bl	11b7c <setlocale@plt>
   11d24:	ldr	r1, [pc, #1848]	; 12464 <__assert_fail@plt+0x7bc>
   11d28:	mov	r0, r5
   11d2c:	add	r8, pc, r8
   11d30:	add	r1, pc, r1
   11d34:	add	r7, pc, r7
   11d38:	bl	11c00 <bindtextdomain@plt>
   11d3c:	mov	r0, r5
   11d40:	bl	1196c <textdomain@plt>
   11d44:	ldr	r3, [pc, #1820]	; 12468 <__assert_fail@plt+0x7c0>
   11d48:	ldr	r0, [r4, r3]
   11d4c:	bl	1b4d0 <fts_children@@Base+0x1a0c>
   11d50:	str	r9, [sp]
   11d54:	mov	r0, r6
   11d58:	mov	r1, sl
   11d5c:	mov	r2, r8
   11d60:	mov	r3, r7
   11d64:	mov	r5, #0
   11d68:	bl	11a80 <getopt_long@plt>
   11d6c:	cmn	r0, #1
   11d70:	beq	11f10 <__assert_fail@plt+0x268>
   11d74:	cmn	r0, #2
   11d78:	beq	11edc <__assert_fail@plt+0x234>
   11d7c:	ble	11dd4 <__assert_fail@plt+0x12c>
   11d80:	cmp	r0, #90	; 0x5a
   11d84:	beq	11da4 <__assert_fail@plt+0xfc>
   11d88:	cmp	r0, #109	; 0x6d
   11d8c:	bne	11ed4 <__assert_fail@plt+0x22c>
   11d90:	ldr	r3, [pc, #1748]	; 1246c <__assert_fail@plt+0x7c4>
   11d94:	ldr	r3, [r4, r3]
   11d98:	ldr	r3, [r3]
   11d9c:	str	r3, [sp, #16]
   11da0:	b	11d50 <__assert_fail@plt+0xa8>
   11da4:	bl	11894 <is_selinux_enabled@plt>
   11da8:	ldr	r3, [pc, #1724]	; 1246c <__assert_fail@plt+0x7c4>
   11dac:	ldr	r3, [r4, r3]
   11db0:	ldr	r3, [r3]
   11db4:	cmp	r0, #0
   11db8:	ble	11ee4 <__assert_fail@plt+0x23c>
   11dbc:	ldr	r2, [sp, #8]
   11dc0:	cmp	r3, #0
   11dc4:	moveq	fp, #1
   11dc8:	movne	r2, r3
   11dcc:	str	r2, [sp, #8]
   11dd0:	b	11d50 <__assert_fail@plt+0xa8>
   11dd4:	cmn	r0, #3
   11dd8:	bne	11ed4 <__assert_fail@plt+0x22c>
   11ddc:	ldr	r1, [pc, #1676]	; 12470 <__assert_fail@plt+0x7c8>
   11de0:	ldr	r3, [pc, #1676]	; 12474 <__assert_fail@plt+0x7cc>
   11de4:	ldr	r2, [pc, #1676]	; 12478 <__assert_fail@plt+0x7d0>
   11de8:	ldr	r0, [r4, r1]
   11dec:	ldr	r3, [r4, r3]
   11df0:	add	r2, pc, r2
   11df4:	ldr	r1, [pc, #1664]	; 1247c <__assert_fail@plt+0x7d4>
   11df8:	ldr	r0, [r0]
   11dfc:	ldr	r3, [r3]
   11e00:	add	r1, pc, r1
   11e04:	stm	sp, {r2, r5}
   11e08:	ldr	r2, [pc, #1648]	; 12480 <__assert_fail@plt+0x7d8>
   11e0c:	add	r2, pc, r2
   11e10:	bl	16e64 <triple_free@@Base+0x23c8>
   11e14:	mov	r0, r5
   11e18:	bl	11aa4 <exit@plt>
   11e1c:	add	r2, r3, #1
   11e20:	cmp	r6, r2
   11e24:	movle	r7, #4
   11e28:	ble	11e40 <__assert_fail@plt+0x198>
   11e2c:	ldr	r2, [sl, r2, lsl #2]
   11e30:	ldrb	r7, [r2]
   11e34:	cmp	r7, #112	; 0x70
   11e38:	moveq	r7, #2
   11e3c:	movne	r7, #4
   11e40:	rsb	r3, r3, r6
   11e44:	cmp	r3, r7
   11e48:	bge	11fc0 <__assert_fail@plt+0x318>
   11e4c:	ldr	r1, [pc, #1584]	; 12484 <__assert_fail@plt+0x7dc>
   11e50:	mov	r2, #5
   11e54:	mov	r0, #0
   11e58:	add	r1, pc, r1
   11e5c:	bl	11930 <dcgettext@plt>
   11e60:	sub	r3, r6, #-1073741823	; 0xc0000001
   11e64:	mov	r8, r0
   11e68:	ldr	r0, [sl, r3, lsl #2]
   11e6c:	bl	16858 <triple_free@@Base+0x1dbc>
   11e70:	mov	r2, r8
   11e74:	mov	r3, r0
   11e78:	mov	r0, #0
   11e7c:	mov	r1, r0
   11e80:	bl	11a14 <error@plt>
   11e84:	cmp	r7, #4
   11e88:	bne	11ed4 <__assert_fail@plt+0x22c>
   11e8c:	ldr	r3, [r5]
   11e90:	rsb	r6, r3, r6
   11e94:	cmp	r6, #2
   11e98:	bne	11ed4 <__assert_fail@plt+0x22c>
   11e9c:	ldr	r3, [pc, #1508]	; 12488 <__assert_fail@plt+0x7e0>
   11ea0:	mov	r2, #5
   11ea4:	ldr	r1, [pc, #1504]	; 1248c <__assert_fail@plt+0x7e4>
   11ea8:	mov	r0, #0
   11eac:	ldr	r3, [r4, r3]
   11eb0:	add	r1, pc, r1
   11eb4:	ldr	r4, [r3]
   11eb8:	bl	11930 <dcgettext@plt>
   11ebc:	ldr	r2, [pc, #1484]	; 12490 <__assert_fail@plt+0x7e8>
   11ec0:	mov	r1, #1
   11ec4:	add	r2, pc, r2
   11ec8:	mov	r3, r0
   11ecc:	mov	r0, r4
   11ed0:	bl	11b4c <__fprintf_chk@plt>
   11ed4:	mov	r0, #1
   11ed8:	bl	12604 <__assert_fail@plt+0x95c>
   11edc:	mov	r0, r5
   11ee0:	bl	12604 <__assert_fail@plt+0x95c>
   11ee4:	cmp	r3, #0
   11ee8:	beq	11d50 <__assert_fail@plt+0xa8>
   11eec:	ldr	r1, [sp, #20]
   11ef0:	mov	r0, r5
   11ef4:	mov	r2, #5
   11ef8:	bl	11930 <dcgettext@plt>
   11efc:	mov	r1, r5
   11f00:	mov	r2, r0
   11f04:	mov	r0, r5
   11f08:	bl	11a14 <error@plt>
   11f0c:	b	11d50 <__assert_fail@plt+0xa8>
   11f10:	ldr	r3, [sp, #16]
   11f14:	cmp	r3, r5
   11f18:	beq	121b8 <__assert_fail@plt+0x510>
   11f1c:	mov	r0, r3
   11f20:	bl	14ab8 <triple_free@@Base+0x1c>
   11f24:	subs	r7, r0, #0
   11f28:	beq	123a0 <__assert_fail@plt+0x6f8>
   11f2c:	mov	r0, #0
   11f30:	mov	r5, r0
   11f34:	bl	11c18 <umask@plt>
   11f38:	mov	r8, r0
   11f3c:	bl	11c18 <umask@plt>
   11f40:	mov	r2, r8
   11f44:	mov	r3, r7
   11f48:	mov	r1, r5
   11f4c:	str	r5, [sp]
   11f50:	movw	r0, #438	; 0x1b6
   11f54:	bl	14ed8 <triple_free@@Base+0x43c>
   11f58:	mov	r8, r0
   11f5c:	mov	r0, r7
   11f60:	bl	118dc <free@plt>
   11f64:	bic	r3, r8, #508	; 0x1fc
   11f68:	bic	r3, r3, #3
   11f6c:	cmp	r3, r5
   11f70:	bne	121c0 <__assert_fail@plt+0x518>
   11f74:	ldr	r3, [pc, #1304]	; 12494 <__assert_fail@plt+0x7ec>
   11f78:	ldr	r5, [r4, r3]
   11f7c:	ldr	r3, [r5]
   11f80:	cmp	r6, r3
   11f84:	bgt	11e1c <__assert_fail@plt+0x174>
   11f88:	rsb	r3, r3, r6
   11f8c:	cmp	r3, #1
   11f90:	movgt	r7, #2
   11f94:	bgt	11fc0 <__assert_fail@plt+0x318>
   11f98:	ldr	r1, [pc, #1272]	; 12498 <__assert_fail@plt+0x7f0>
   11f9c:	mov	r2, #5
   11fa0:	mov	r0, #0
   11fa4:	add	r1, pc, r1
   11fa8:	bl	11930 <dcgettext@plt>
   11fac:	mov	r2, r0
   11fb0:	mov	r0, #0
   11fb4:	mov	r1, r0
   11fb8:	bl	11a14 <error@plt>
   11fbc:	b	11ed4 <__assert_fail@plt+0x22c>
   11fc0:	cmp	r7, r3
   11fc4:	blt	121e8 <__assert_fail@plt+0x540>
   11fc8:	ldr	r0, [sp, #8]
   11fcc:	cmp	r0, #0
   11fd0:	beq	11fe0 <__assert_fail@plt+0x338>
   11fd4:	bl	11ae0 <setfscreatecon@plt>
   11fd8:	cmp	r0, #0
   11fdc:	blt	123c4 <__assert_fail@plt+0x71c>
   11fe0:	ldr	r3, [r5]
   11fe4:	add	r3, r3, #1
   11fe8:	ldr	r2, [sl, r3, lsl #2]
   11fec:	lsl	r1, r3, #2
   11ff0:	ldrb	r3, [r2]
   11ff4:	cmp	r3, #99	; 0x63
   11ff8:	beq	12010 <__assert_fail@plt+0x368>
   11ffc:	bls	12278 <__assert_fail@plt+0x5d0>
   12000:	cmp	r3, #112	; 0x70
   12004:	beq	122c8 <__assert_fail@plt+0x620>
   12008:	cmp	r3, #117	; 0x75
   1200c:	bne	12288 <__assert_fail@plt+0x5e0>
   12010:	mov	r3, #8192	; 0x2000
   12014:	str	r3, [sp, #20]
   12018:	add	ip, sl, r1
   1201c:	mov	r0, #0
   12020:	mov	r1, r0
   12024:	mov	r2, r0
   12028:	ldr	r4, [ip, #4]
   1202c:	add	r3, sp, #24
   12030:	ldr	r9, [ip, #8]
   12034:	str	r0, [sp]
   12038:	mov	r0, r4
   1203c:	bl	172a0 <triple_free@@Base+0x2804>
   12040:	cmp	r0, #0
   12044:	bne	12060 <__assert_fail@plt+0x3b8>
   12048:	ldrd	r2, [sp, #24]
   1204c:	mov	r1, #0
   12050:	mov	r0, r2
   12054:	cmp	r3, r1
   12058:	cmpeq	r2, r0
   1205c:	beq	12094 <__assert_fail@plt+0x3ec>
   12060:	ldr	r1, [pc, #1076]	; 1249c <__assert_fail@plt+0x7f4>
   12064:	mov	r2, #5
   12068:	mov	r0, #0
   1206c:	add	r1, pc, r1
   12070:	bl	11930 <dcgettext@plt>
   12074:	mov	r6, r0
   12078:	mov	r0, r4
   1207c:	bl	16858 <triple_free@@Base+0x1dbc>
   12080:	mov	r2, r6
   12084:	mov	r1, #0
   12088:	mov	r3, r0
   1208c:	mov	r0, #1
   12090:	bl	11a14 <error@plt>
   12094:	mov	r3, #0
   12098:	mov	r0, r9
   1209c:	mov	r1, r3
   120a0:	str	r3, [sp]
   120a4:	mov	r2, r3
   120a8:	add	r3, sp, #32
   120ac:	bl	172a0 <triple_free@@Base+0x2804>
   120b0:	cmp	r0, #0
   120b4:	bne	120d0 <__assert_fail@plt+0x428>
   120b8:	ldrd	r2, [sp, #32]
   120bc:	mov	r1, #0
   120c0:	mov	r0, r2
   120c4:	cmp	r3, r1
   120c8:	cmpeq	r2, r0
   120cc:	beq	12104 <__assert_fail@plt+0x45c>
   120d0:	ldr	r1, [pc, #968]	; 124a0 <__assert_fail@plt+0x7f8>
   120d4:	mov	r2, #5
   120d8:	mov	r0, #0
   120dc:	add	r1, pc, r1
   120e0:	bl	11930 <dcgettext@plt>
   120e4:	mov	r6, r0
   120e8:	mov	r0, r9
   120ec:	bl	16858 <triple_free@@Base+0x1dbc>
   120f0:	mov	r2, r6
   120f4:	mov	r1, #0
   120f8:	mov	r3, r0
   120fc:	mov	r0, #1
   12100:	bl	11a14 <error@plt>
   12104:	ldr	r3, [sp, #24]
   12108:	ldr	r1, [sp, #32]
   1210c:	bic	r2, r3, #4080	; 0xff0
   12110:	ubfx	r3, r3, #0, #12
   12114:	bic	r0, r2, #15
   12118:	bic	r2, r1, #255	; 0xff
   1211c:	str	r0, [sp, #12]
   12120:	uxtb	r1, r1
   12124:	mov	r0, #0
   12128:	str	r0, [sp, #8]
   1212c:	orr	ip, r1, r3, lsl #8
   12130:	lsr	r7, r2, #20
   12134:	lsl	r6, r2, #12
   12138:	ldrd	r2, [sp, #8]
   1213c:	mvn	r0, #0
   12140:	mvn	r1, #0
   12144:	orr	r6, r6, r2
   12148:	orr	r7, r7, r3
   1214c:	orr	r6, r6, ip
   12150:	cmp	r7, r1
   12154:	cmpeq	r6, r0
   12158:	beq	12418 <__assert_fail@plt+0x770>
   1215c:	cmp	fp, #0
   12160:	bne	1238c <__assert_fail@plt+0x6e4>
   12164:	ldr	r1, [r5]
   12168:	add	r3, sp, #56	; 0x38
   1216c:	ldr	r0, [sp, #20]
   12170:	strd	r6, [r3, #-16]!
   12174:	orr	r2, r0, r8
   12178:	ldr	r1, [sl, r1, lsl #2]
   1217c:	mov	r0, #1
   12180:	bl	11c48 <__xmknod@plt>
   12184:	cmp	r0, #0
   12188:	bne	12318 <__assert_fail@plt+0x670>
   1218c:	ldr	r1, [sp, #16]
   12190:	cmp	r1, #0
   12194:	beq	121b0 <__assert_fail@plt+0x508>
   12198:	ldr	r3, [r5]
   1219c:	mov	r1, r8
   121a0:	ldr	r0, [sl, r3, lsl #2]
   121a4:	bl	11c30 <chmod@plt>
   121a8:	cmp	r0, #0
   121ac:	bne	12348 <__assert_fail@plt+0x6a0>
   121b0:	mov	r0, #0
   121b4:	bl	11aa4 <exit@plt>
   121b8:	movw	r8, #438	; 0x1b6
   121bc:	b	11f74 <__assert_fail@plt+0x2cc>
   121c0:	ldr	r1, [pc, #732]	; 124a4 <__assert_fail@plt+0x7fc>
   121c4:	mov	r0, r5
   121c8:	mov	r2, #5
   121cc:	add	r1, pc, r1
   121d0:	bl	11930 <dcgettext@plt>
   121d4:	mov	r1, r5
   121d8:	mov	r2, r0
   121dc:	mov	r0, #1
   121e0:	bl	11a14 <error@plt>
   121e4:	b	11f74 <__assert_fail@plt+0x2cc>
   121e8:	ldr	r1, [pc, #696]	; 124a8 <__assert_fail@plt+0x800>
   121ec:	mov	r2, #5
   121f0:	mov	r0, #0
   121f4:	add	r1, pc, r1
   121f8:	bl	11930 <dcgettext@plt>
   121fc:	ldr	r3, [r5]
   12200:	add	r3, r7, r3
   12204:	mov	r8, r0
   12208:	ldr	r0, [sl, r3, lsl #2]
   1220c:	bl	16858 <triple_free@@Base+0x1dbc>
   12210:	mov	r2, r8
   12214:	mov	r3, r0
   12218:	mov	r0, #0
   1221c:	mov	r1, r0
   12220:	bl	11a14 <error@plt>
   12224:	cmp	r7, #2
   12228:	bne	11ed4 <__assert_fail@plt+0x22c>
   1222c:	ldr	r3, [r5]
   12230:	rsb	r6, r3, r6
   12234:	cmp	r6, #4
   12238:	bne	11ed4 <__assert_fail@plt+0x22c>
   1223c:	ldr	r3, [pc, #580]	; 12488 <__assert_fail@plt+0x7e0>
   12240:	mov	r2, #5
   12244:	ldr	r1, [pc, #608]	; 124ac <__assert_fail@plt+0x804>
   12248:	mov	r0, #0
   1224c:	ldr	r3, [r4, r3]
   12250:	add	r1, pc, r1
   12254:	ldr	r4, [r3]
   12258:	bl	11930 <dcgettext@plt>
   1225c:	ldr	r2, [pc, #588]	; 124b0 <__assert_fail@plt+0x808>
   12260:	mov	r1, #1
   12264:	add	r2, pc, r2
   12268:	mov	r3, r0
   1226c:	mov	r0, r4
   12270:	bl	11b4c <__fprintf_chk@plt>
   12274:	b	11ed4 <__assert_fail@plt+0x22c>
   12278:	cmp	r3, #98	; 0x62
   1227c:	moveq	r2, #24576	; 0x6000
   12280:	streq	r2, [sp, #20]
   12284:	beq	12018 <__assert_fail@plt+0x370>
   12288:	ldr	r1, [pc, #548]	; 124b4 <__assert_fail@plt+0x80c>
   1228c:	mov	r2, #5
   12290:	mov	r0, #0
   12294:	add	r1, pc, r1
   12298:	bl	11930 <dcgettext@plt>
   1229c:	ldr	r3, [r5]
   122a0:	add	r3, r3, #1
   122a4:	mov	r4, r0
   122a8:	ldr	r0, [sl, r3, lsl #2]
   122ac:	bl	16858 <triple_free@@Base+0x1dbc>
   122b0:	mov	r2, r4
   122b4:	mov	r3, r0
   122b8:	mov	r0, #0
   122bc:	mov	r1, r0
   122c0:	bl	11a14 <error@plt>
   122c4:	b	11ed4 <__assert_fail@plt+0x22c>
   122c8:	cmp	fp, #0
   122cc:	bne	12404 <__assert_fail@plt+0x75c>
   122d0:	ldr	r3, [r5]
   122d4:	mov	r1, r8
   122d8:	ldr	r0, [sl, r3, lsl #2]
   122dc:	bl	11c84 <mkfifo@plt>
   122e0:	cmp	r0, #0
   122e4:	beq	1218c <__assert_fail@plt+0x4e4>
   122e8:	bl	11b04 <__errno_location@plt>
   122ec:	ldr	r3, [r5]
   122f0:	ldr	r4, [r0]
   122f4:	ldr	r0, [sl, r3, lsl #2]
   122f8:	bl	16858 <triple_free@@Base+0x1dbc>
   122fc:	ldr	r2, [pc, #436]	; 124b8 <__assert_fail@plt+0x810>
   12300:	mov	r1, r4
   12304:	add	r2, pc, r2
   12308:	mov	r3, r0
   1230c:	mov	r0, #1
   12310:	bl	11a14 <error@plt>
   12314:	b	1218c <__assert_fail@plt+0x4e4>
   12318:	bl	11b04 <__errno_location@plt>
   1231c:	ldr	r3, [r5]
   12320:	ldr	r4, [r0]
   12324:	ldr	r0, [sl, r3, lsl #2]
   12328:	bl	16858 <triple_free@@Base+0x1dbc>
   1232c:	ldr	r2, [pc, #392]	; 124bc <__assert_fail@plt+0x814>
   12330:	mov	r1, r4
   12334:	add	r2, pc, r2
   12338:	mov	r3, r0
   1233c:	mov	r0, #1
   12340:	bl	11a14 <error@plt>
   12344:	b	1218c <__assert_fail@plt+0x4e4>
   12348:	bl	11b04 <__errno_location@plt>
   1234c:	ldr	r1, [pc, #364]	; 124c0 <__assert_fail@plt+0x818>
   12350:	mov	r2, #5
   12354:	add	r1, pc, r1
   12358:	ldr	r4, [r0]
   1235c:	mov	r0, #0
   12360:	bl	11930 <dcgettext@plt>
   12364:	ldr	r3, [r5]
   12368:	mov	r6, r0
   1236c:	ldr	r0, [sl, r3, lsl #2]
   12370:	bl	16858 <triple_free@@Base+0x1dbc>
   12374:	mov	r1, r4
   12378:	mov	r2, r6
   1237c:	mov	r3, r0
   12380:	mov	r0, #1
   12384:	bl	11a14 <error@plt>
   12388:	b	121b0 <__assert_fail@plt+0x508>
   1238c:	ldr	r3, [r5]
   12390:	ldr	r1, [sp, #20]
   12394:	ldr	r0, [sl, r3, lsl #2]
   12398:	bl	12b18 <__assert_fail@plt+0xe70>
   1239c:	b	12164 <__assert_fail@plt+0x4bc>
   123a0:	ldr	r1, [pc, #284]	; 124c4 <__assert_fail@plt+0x81c>
   123a4:	mov	r2, #5
   123a8:	add	r1, pc, r1
   123ac:	bl	11930 <dcgettext@plt>
   123b0:	mov	r1, r7
   123b4:	mov	r2, r0
   123b8:	mov	r0, #1
   123bc:	bl	11a14 <error@plt>
   123c0:	b	11f2c <__assert_fail@plt+0x284>
   123c4:	bl	11b04 <__errno_location@plt>
   123c8:	ldr	r1, [pc, #248]	; 124c8 <__assert_fail@plt+0x820>
   123cc:	mov	r2, #5
   123d0:	add	r1, pc, r1
   123d4:	ldr	r4, [r0]
   123d8:	mov	r0, #0
   123dc:	bl	11930 <dcgettext@plt>
   123e0:	mov	r6, r0
   123e4:	ldr	r0, [sp, #8]
   123e8:	bl	16858 <triple_free@@Base+0x1dbc>
   123ec:	mov	r1, r4
   123f0:	mov	r2, r6
   123f4:	mov	r3, r0
   123f8:	mov	r0, #1
   123fc:	bl	11a14 <error@plt>
   12400:	b	11fe0 <__assert_fail@plt+0x338>
   12404:	add	r3, sl, r1
   12408:	mov	r1, #4096	; 0x1000
   1240c:	ldr	r0, [r3, #-4]
   12410:	bl	12b18 <__assert_fail@plt+0xe70>
   12414:	b	122d0 <__assert_fail@plt+0x628>
   12418:	ldr	r1, [pc, #172]	; 124cc <__assert_fail@plt+0x824>
   1241c:	mov	r2, #5
   12420:	mov	r0, #0
   12424:	add	r1, pc, r1
   12428:	bl	11930 <dcgettext@plt>
   1242c:	str	r9, [sp]
   12430:	ldr	r1, [sp, #8]
   12434:	mov	r3, r4
   12438:	mov	r2, r0
   1243c:	mov	r0, #1
   12440:	bl	11a14 <error@plt>
   12444:	b	1215c <__assert_fail@plt+0x4b4>
   12448:	andeq	fp, r1, r8, lsr #6
   1244c:	andeq	r0, r0, r8, lsl #3
   12450:			; <UNDEFINED> instruction: 0x00009db0
   12454:			; <UNDEFINED> instruction: 0x00009cbc
   12458:	andeq	r9, r0, r4, ror sp
   1245c:	ldrdeq	r9, [r0], -r4
   12460:	andeq	fp, r1, r0, asr r1
   12464:	andeq	r9, r0, r0, ror #26
   12468:	muleq	r0, ip, r1
   1246c:	andeq	r0, r0, r8, asr #3
   12470:			; <UNDEFINED> instruction: 0x000001b0
   12474:	muleq	r0, r4, r1
   12478:	andeq	r9, r0, r0, lsl #26
   1247c:	andeq	r9, r0, r8, lsr #23
   12480:			; <UNDEFINED> instruction: 0x00009bbc
   12484:	strdeq	r9, [r0], -r8
   12488:	muleq	r0, r8, r1
   1248c:			; <UNDEFINED> instruction: 0x00009cbc
   12490:	andeq	r9, r0, r4, lsr #31
   12494:	muleq	r0, r0, r1
   12498:	muleq	r0, ip, fp
   1249c:			; <UNDEFINED> instruction: 0x00009bb4
   124a0:	andeq	r9, r0, r4, ror #22
   124a4:	andeq	r9, r0, r8, asr #18
   124a8:			; <UNDEFINED> instruction: 0x000099b0
   124ac:	andeq	r9, r0, r8, ror #18
   124b0:	andeq	r9, r0, r4, lsl #24
   124b4:	andeq	r9, r0, r4, ror #19
   124b8:	andeq	r9, r0, r8, lsl sl
   124bc:	andeq	r9, r0, r8, ror #19
   124c0:	andeq	r9, r0, ip, lsr r9
   124c4:	andeq	r9, r0, ip, asr r7
   124c8:	andeq	r9, r0, ip, lsl r8
   124cc:	andeq	r9, r0, ip, lsr r8
   124d0:	mov	fp, #0
   124d4:	mov	lr, #0
   124d8:	pop	{r1}		; (ldr r1, [sp], #4)
   124dc:	mov	r2, sp
   124e0:	push	{r2}		; (str r2, [sp, #-4]!)
   124e4:	push	{r0}		; (str r0, [sp, #-4]!)
   124e8:	ldr	ip, [pc, #16]	; 12500 <__assert_fail@plt+0x858>
   124ec:	push	{ip}		; (str ip, [sp, #-4]!)
   124f0:	ldr	r0, [pc, #12]	; 12504 <__assert_fail@plt+0x85c>
   124f4:	ldr	r3, [pc, #12]	; 12508 <__assert_fail@plt+0x860>
   124f8:	bl	11a50 <__libc_start_main@plt>
   124fc:	bl	11c60 <abort@plt>
   12500:	andeq	fp, r1, ip, asr #9
   12504:			; <UNDEFINED> instruction: 0x00011cb8
   12508:	andeq	fp, r1, r8, ror #8
   1250c:	ldr	r3, [pc, #20]	; 12528 <__assert_fail@plt+0x880>
   12510:	ldr	r2, [pc, #20]	; 1252c <__assert_fail@plt+0x884>
   12514:	add	r3, pc, r3
   12518:	ldr	r2, [r3, r2]
   1251c:	cmp	r2, #0
   12520:	bxeq	lr
   12524:	b	11a68 <__gmon_start__@plt>
   12528:	andeq	sl, r1, r4, ror #21
   1252c:	andeq	r0, r0, r4, lsr #3
   12530:	push	{r3, lr}
   12534:	movw	r0, #53784	; 0xd218
   12538:	ldr	r3, [pc, #36]	; 12564 <__assert_fail@plt+0x8bc>
   1253c:	movt	r0, #2
   12540:	rsb	r3, r0, r3
   12544:	cmp	r3, #6
   12548:	popls	{r3, pc}
   1254c:	movw	r3, #0
   12550:	movt	r3, #0
   12554:	cmp	r3, #0
   12558:	popeq	{r3, pc}
   1255c:	blx	r3
   12560:	pop	{r3, pc}
   12564:	andeq	sp, r2, fp, lsl r2
   12568:	push	{r3, lr}
   1256c:	movw	r0, #53784	; 0xd218
   12570:	movw	r3, #53784	; 0xd218
   12574:	movt	r0, #2
   12578:	movt	r3, #2
   1257c:	rsb	r3, r0, r3
   12580:	asr	r3, r3, #2
   12584:	add	r3, r3, r3, lsr #31
   12588:	asrs	r1, r3, #1
   1258c:	popeq	{r3, pc}
   12590:	movw	r2, #0
   12594:	movt	r2, #0
   12598:	cmp	r2, #0
   1259c:	popeq	{r3, pc}
   125a0:	blx	r2
   125a4:	pop	{r3, pc}
   125a8:	push	{r4, lr}
   125ac:	movw	r4, #53784	; 0xd218
   125b0:	movt	r4, #2
   125b4:	ldrb	r3, [r4]
   125b8:	cmp	r3, #0
   125bc:	popne	{r4, pc}
   125c0:	bl	12530 <__assert_fail@plt+0x888>
   125c4:	mov	r3, #1
   125c8:	strb	r3, [r4]
   125cc:	pop	{r4, pc}
   125d0:	movw	r0, #52872	; 0xce88
   125d4:	movt	r0, #2
   125d8:	push	{r3, lr}
   125dc:	ldr	r3, [r0]
   125e0:	cmp	r3, #0
   125e4:	beq	125fc <__assert_fail@plt+0x954>
   125e8:	movw	r3, #0
   125ec:	movt	r3, #0
   125f0:	cmp	r3, #0
   125f4:	beq	125fc <__assert_fail@plt+0x954>
   125f8:	blx	r3
   125fc:	pop	{r3, lr}
   12600:	b	12568 <__assert_fail@plt+0x8c0>
   12604:	push	{r4, r5, r6, lr}
   12608:	subs	r4, r0, #0
   1260c:	ldr	r5, [pc, #580]	; 12858 <__assert_fail@plt+0xbb0>
   12610:	add	r5, pc, r5
   12614:	beq	1265c <__assert_fail@plt+0x9b4>
   12618:	ldr	r3, [pc, #572]	; 1285c <__assert_fail@plt+0xbb4>
   1261c:	mov	r2, #5
   12620:	ldr	r1, [pc, #568]	; 12860 <__assert_fail@plt+0xbb8>
   12624:	mov	r0, #0
   12628:	ldr	r3, [r5, r3]
   1262c:	add	r1, pc, r1
   12630:	ldr	r6, [r3]
   12634:	bl	11930 <dcgettext@plt>
   12638:	ldr	r3, [pc, #548]	; 12864 <__assert_fail@plt+0xbbc>
   1263c:	mov	r1, #1
   12640:	ldr	r3, [r5, r3]
   12644:	ldr	r3, [r3]
   12648:	mov	r2, r0
   1264c:	mov	r0, r6
   12650:	bl	11b4c <__fprintf_chk@plt>
   12654:	mov	r0, r4
   12658:	bl	11aa4 <exit@plt>
   1265c:	ldr	r1, [pc, #516]	; 12868 <__assert_fail@plt+0xbc0>
   12660:	mov	r2, #5
   12664:	add	r1, pc, r1
   12668:	bl	11930 <dcgettext@plt>
   1266c:	ldr	r3, [pc, #496]	; 12864 <__assert_fail@plt+0xbbc>
   12670:	ldr	r6, [r5, r3]
   12674:	ldr	r2, [r6]
   12678:	mov	r1, r0
   1267c:	mov	r0, #1
   12680:	bl	11b34 <__printf_chk@plt>
   12684:	ldr	r1, [pc, #480]	; 1286c <__assert_fail@plt+0xbc4>
   12688:	mov	r2, #5
   1268c:	mov	r0, r4
   12690:	add	r1, pc, r1
   12694:	bl	11930 <dcgettext@plt>
   12698:	ldr	r3, [pc, #464]	; 12870 <__assert_fail@plt+0xbc8>
   1269c:	ldr	r5, [r5, r3]
   126a0:	ldr	r1, [r5]
   126a4:	bl	1187c <fputs_unlocked@plt>
   126a8:	ldr	r1, [pc, #452]	; 12874 <__assert_fail@plt+0xbcc>
   126ac:	mov	r2, #5
   126b0:	mov	r0, r4
   126b4:	add	r1, pc, r1
   126b8:	bl	11930 <dcgettext@plt>
   126bc:	ldr	r1, [r5]
   126c0:	bl	1187c <fputs_unlocked@plt>
   126c4:	ldr	r1, [pc, #428]	; 12878 <__assert_fail@plt+0xbd0>
   126c8:	mov	r2, #5
   126cc:	mov	r0, r4
   126d0:	add	r1, pc, r1
   126d4:	bl	11930 <dcgettext@plt>
   126d8:	ldr	r1, [r5]
   126dc:	bl	1187c <fputs_unlocked@plt>
   126e0:	ldr	r1, [pc, #404]	; 1287c <__assert_fail@plt+0xbd4>
   126e4:	mov	r2, #5
   126e8:	mov	r0, r4
   126ec:	add	r1, pc, r1
   126f0:	bl	11930 <dcgettext@plt>
   126f4:	ldr	r1, [r5]
   126f8:	bl	1187c <fputs_unlocked@plt>
   126fc:	ldr	r1, [pc, #380]	; 12880 <__assert_fail@plt+0xbd8>
   12700:	mov	r2, #5
   12704:	mov	r0, r4
   12708:	add	r1, pc, r1
   1270c:	bl	11930 <dcgettext@plt>
   12710:	ldr	r1, [r5]
   12714:	bl	1187c <fputs_unlocked@plt>
   12718:	ldr	r1, [pc, #356]	; 12884 <__assert_fail@plt+0xbdc>
   1271c:	mov	r2, #5
   12720:	mov	r0, r4
   12724:	add	r1, pc, r1
   12728:	bl	11930 <dcgettext@plt>
   1272c:	ldr	r1, [r5]
   12730:	bl	1187c <fputs_unlocked@plt>
   12734:	ldr	r1, [pc, #332]	; 12888 <__assert_fail@plt+0xbe0>
   12738:	mov	r2, #5
   1273c:	mov	r0, r4
   12740:	add	r1, pc, r1
   12744:	bl	11930 <dcgettext@plt>
   12748:	ldr	r1, [r5]
   1274c:	bl	1187c <fputs_unlocked@plt>
   12750:	ldr	r1, [pc, #308]	; 1288c <__assert_fail@plt+0xbe4>
   12754:	mov	r2, #5
   12758:	mov	r0, r4
   1275c:	add	r1, pc, r1
   12760:	bl	11930 <dcgettext@plt>
   12764:	ldr	r1, [r5]
   12768:	bl	1187c <fputs_unlocked@plt>
   1276c:	ldr	r1, [pc, #284]	; 12890 <__assert_fail@plt+0xbe8>
   12770:	mov	r2, #5
   12774:	mov	r0, r4
   12778:	add	r1, pc, r1
   1277c:	bl	11930 <dcgettext@plt>
   12780:	ldr	r2, [pc, #268]	; 12894 <__assert_fail@plt+0xbec>
   12784:	add	r2, pc, r2
   12788:	mov	r1, r0
   1278c:	mov	r0, #1
   12790:	bl	11b34 <__printf_chk@plt>
   12794:	ldr	r1, [pc, #252]	; 12898 <__assert_fail@plt+0xbf0>
   12798:	mov	r2, #5
   1279c:	mov	r0, r4
   127a0:	add	r1, pc, r1
   127a4:	bl	11930 <dcgettext@plt>
   127a8:	ldr	r2, [pc, #236]	; 1289c <__assert_fail@plt+0xbf4>
   127ac:	ldr	r3, [pc, #236]	; 128a0 <__assert_fail@plt+0xbf8>
   127b0:	add	r2, pc, r2
   127b4:	add	r3, pc, r3
   127b8:	mov	r1, r0
   127bc:	mov	r0, #1
   127c0:	bl	11b34 <__printf_chk@plt>
   127c4:	mov	r0, #5
   127c8:	mov	r1, r4
   127cc:	bl	11b7c <setlocale@plt>
   127d0:	cmp	r0, #0
   127d4:	beq	127f0 <__assert_fail@plt+0xb48>
   127d8:	ldr	r1, [pc, #196]	; 128a4 <__assert_fail@plt+0xbfc>
   127dc:	mov	r2, #3
   127e0:	add	r1, pc, r1
   127e4:	bl	11c54 <strncmp@plt>
   127e8:	cmp	r0, #0
   127ec:	bne	12824 <__assert_fail@plt+0xb7c>
   127f0:	ldr	r1, [pc, #176]	; 128a8 <__assert_fail@plt+0xc00>
   127f4:	mov	r2, #5
   127f8:	mov	r0, #0
   127fc:	add	r1, pc, r1
   12800:	bl	11930 <dcgettext@plt>
   12804:	mov	r5, r0
   12808:	ldr	r0, [r6]
   1280c:	bl	1375c <close_stdout@@Base+0x1e8>
   12810:	mov	r1, r5
   12814:	mov	r2, r0
   12818:	mov	r0, #1
   1281c:	bl	11b34 <__printf_chk@plt>
   12820:	b	12654 <__assert_fail@plt+0x9ac>
   12824:	ldr	r1, [pc, #128]	; 128ac <__assert_fail@plt+0xc04>
   12828:	mov	r2, #5
   1282c:	mov	r0, r4
   12830:	add	r1, pc, r1
   12834:	bl	11930 <dcgettext@plt>
   12838:	mov	r5, r0
   1283c:	ldr	r0, [r6]
   12840:	bl	1375c <close_stdout@@Base+0x1e8>
   12844:	mov	r1, r5
   12848:	mov	r2, r0
   1284c:	mov	r0, #1
   12850:	bl	11b34 <__printf_chk@plt>
   12854:	b	127f0 <__assert_fail@plt+0xb48>
   12858:	andeq	sl, r1, r8, ror #19
   1285c:	muleq	r0, r8, r1
   12860:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   12864:			; <UNDEFINED> instruction: 0x000001bc
   12868:	andeq	r8, r0, r8, asr #29
   1286c:	andeq	r8, r0, ip, asr #29
   12870:			; <UNDEFINED> instruction: 0x000001b0
   12874:	ldrdeq	r8, [r0], -ip
   12878:	andeq	r8, r0, ip, lsl #30
   1287c:	andeq	r8, r0, ip, lsr pc
   12880:	strdeq	r8, [r0], -r0
   12884:	andeq	r9, r0, r4
   12888:	andeq	r9, r0, r0, lsr #32
   1288c:	andeq	r9, r0, ip, lsl #2
   12890:	andeq	r9, r0, r0, ror r1
   12894:	andeq	r9, r0, r4, lsr #4
   12898:	andeq	r9, r0, r0, lsl r2
   1289c:	andeq	r9, r0, r8, lsl r2
   128a0:	andeq	r9, r0, r4, lsr #4
   128a4:	andeq	r9, r0, r0, lsr #4
   128a8:	andeq	r9, r0, r0, asr r2
   128ac:	ldrdeq	r9, [r0], -r4
   128b0:	ldr	r2, [pc, #600]	; 12b10 <__assert_fail@plt+0xe68>
   128b4:	mov	r3, #0
   128b8:	ldr	ip, [pc, #596]	; 12b14 <__assert_fail@plt+0xe6c>
   128bc:	add	r2, pc, r2
   128c0:	push	{r4, r5, r6, r7, r8, lr}
   128c4:	sub	sp, sp, #120	; 0x78
   128c8:	ldr	r4, [r2, ip]
   128cc:	subs	r6, r1, #0
   128d0:	str	r3, [sp]
   128d4:	mov	r7, r0
   128d8:	str	r3, [sp, #4]
   128dc:	ldr	r3, [r4]
   128e0:	str	r3, [sp, #116]	; 0x74
   128e4:	beq	12938 <__assert_fail@plt+0xc90>
   128e8:	add	r0, sp, #4
   128ec:	bl	11c0c <getfscreatecon@plt>
   128f0:	cmp	r0, #0
   128f4:	blt	12aa0 <__assert_fail@plt+0xdf8>
   128f8:	ldr	r1, [sp, #4]
   128fc:	cmp	r1, #0
   12900:	beq	12ae8 <__assert_fail@plt+0xe40>
   12904:	mov	r0, r7
   12908:	bl	118c4 <lsetfilecon@plt>
   1290c:	mov	r5, r0
   12910:	ldr	r0, [sp, #4]
   12914:	bl	11bf4 <freecon@plt>
   12918:	mov	r3, r5
   1291c:	ldr	r2, [sp, #116]	; 0x74
   12920:	mov	r0, r3
   12924:	ldr	r3, [r4]
   12928:	cmp	r2, r3
   1292c:	bne	12b0c <__assert_fail@plt+0xe64>
   12930:	add	sp, sp, #120	; 0x78
   12934:	pop	{r4, r5, r6, r7, r8, pc}
   12938:	mov	r1, #32768	; 0x8000
   1293c:	bl	11a20 <open64@plt>
   12940:	cmn	r0, #1
   12944:	mov	r5, r0
   12948:	beq	12a00 <__assert_fail@plt+0xd58>
   1294c:	mov	r0, #3
   12950:	mov	r1, r5
   12954:	add	r2, sp, #8
   12958:	bl	1199c <__fxstat64@plt>
   1295c:	cmp	r0, #0
   12960:	blt	12a94 <__assert_fail@plt+0xdec>
   12964:	mov	r0, r7
   12968:	ldr	r1, [sp, #24]
   1296c:	mov	r2, sp
   12970:	bl	119e4 <matchpathcon@plt>
   12974:	cmp	r0, #0
   12978:	blt	12a44 <__assert_fail@plt+0xd9c>
   1297c:	ldr	r0, [sp]
   12980:	bl	11918 <context_new@plt>
   12984:	subs	r8, r0, #0
   12988:	beq	12a54 <__assert_fail@plt+0xdac>
   1298c:	cmn	r5, #1
   12990:	beq	12abc <__assert_fail@plt+0xe14>
   12994:	mov	r0, r5
   12998:	add	r1, sp, #4
   1299c:	bl	19cc4 <fts_children@@Base+0x200>
   129a0:	cmp	r0, #0
   129a4:	blt	12adc <__assert_fail@plt+0xe34>
   129a8:	ldr	r0, [sp, #4]
   129ac:	bl	11918 <context_new@plt>
   129b0:	subs	r6, r0, #0
   129b4:	beq	12a5c <__assert_fail@plt+0xdb4>
   129b8:	mov	r0, r8
   129bc:	bl	118ac <context_type_get@plt>
   129c0:	subs	r1, r0, #0
   129c4:	beq	12a5c <__assert_fail@plt+0xdb4>
   129c8:	mov	r0, r6
   129cc:	bl	11948 <context_type_set@plt>
   129d0:	cmp	r0, #0
   129d4:	bne	12a5c <__assert_fail@plt+0xdb4>
   129d8:	mov	r0, r6
   129dc:	bl	11c24 <context_str@plt>
   129e0:	subs	r1, r0, #0
   129e4:	beq	12a5c <__assert_fail@plt+0xdb4>
   129e8:	cmn	r5, #1
   129ec:	beq	12afc <__assert_fail@plt+0xe54>
   129f0:	mov	r0, r5
   129f4:	bl	11b88 <fsetfilecon@plt>
   129f8:	mov	r7, r0
   129fc:	b	12a6c <__assert_fail@plt+0xdc4>
   12a00:	bl	11b04 <__errno_location@plt>
   12a04:	ldr	r3, [r0]
   12a08:	cmp	r3, #40	; 0x28
   12a0c:	beq	12a78 <__assert_fail@plt+0xdd0>
   12a10:	mov	r6, #0
   12a14:	mvn	r7, #0
   12a18:	mov	r8, r6
   12a1c:	mov	r0, r8
   12a20:	bl	11a74 <context_free@plt>
   12a24:	mov	r0, r6
   12a28:	bl	11a74 <context_free@plt>
   12a2c:	ldr	r0, [sp]
   12a30:	bl	11bf4 <freecon@plt>
   12a34:	ldr	r0, [sp, #4]
   12a38:	bl	11bf4 <freecon@plt>
   12a3c:	mov	r3, r7
   12a40:	b	1291c <__assert_fail@plt+0xc74>
   12a44:	bl	11b04 <__errno_location@plt>
   12a48:	ldr	r3, [r0]
   12a4c:	cmp	r3, #2
   12a50:	beq	12aa8 <__assert_fail@plt+0xe00>
   12a54:	mov	r6, #0
   12a58:	mov	r8, r6
   12a5c:	cmn	r5, #1
   12a60:	moveq	r7, r5
   12a64:	beq	12a1c <__assert_fail@plt+0xd74>
   12a68:	mvn	r7, #0
   12a6c:	mov	r0, r5
   12a70:	bl	11c6c <close@plt>
   12a74:	b	12a1c <__assert_fail@plt+0xd74>
   12a78:	mov	r0, #3
   12a7c:	mov	r1, r7
   12a80:	add	r2, sp, #8
   12a84:	bl	11c78 <__lxstat64@plt>
   12a88:	cmp	r0, #0
   12a8c:	bge	12964 <__assert_fail@plt+0xcbc>
   12a90:	b	12a10 <__assert_fail@plt+0xd68>
   12a94:	mvn	r7, #0
   12a98:	mov	r8, r6
   12a9c:	b	12a6c <__assert_fail@plt+0xdc4>
   12aa0:	mvn	r3, #0
   12aa4:	b	1291c <__assert_fail@plt+0xc74>
   12aa8:	mov	r6, #0
   12aac:	mov	r3, #61	; 0x3d
   12ab0:	mov	r8, r6
   12ab4:	str	r3, [r0]
   12ab8:	b	12a5c <__assert_fail@plt+0xdb4>
   12abc:	mov	r0, r7
   12ac0:	add	r1, sp, #4
   12ac4:	bl	19cac <fts_children@@Base+0x1e8>
   12ac8:	cmp	r0, #0
   12acc:	bge	129a8 <__assert_fail@plt+0xd00>
   12ad0:	mov	r7, r5
   12ad4:	mov	r6, #0
   12ad8:	b	12a1c <__assert_fail@plt+0xd74>
   12adc:	mov	r6, #0
   12ae0:	mvn	r7, #0
   12ae4:	b	12a6c <__assert_fail@plt+0xdc4>
   12ae8:	bl	11b04 <__errno_location@plt>
   12aec:	mov	r2, #61	; 0x3d
   12af0:	mvn	r3, #0
   12af4:	str	r2, [r0]
   12af8:	b	1291c <__assert_fail@plt+0xc74>
   12afc:	mov	r0, r7
   12b00:	bl	118c4 <lsetfilecon@plt>
   12b04:	mov	r7, r0
   12b08:	b	12a1c <__assert_fail@plt+0xd74>
   12b0c:	bl	1193c <__stack_chk_fail@plt>
   12b10:	andeq	sl, r1, ip, lsr r7
   12b14:	andeq	r0, r0, r8, lsl #3
   12b18:	ldr	r2, [pc, #572]	; 12d5c <__assert_fail@plt+0x10b4>
   12b1c:	mov	r3, #0
   12b20:	ldr	ip, [pc, #568]	; 12d60 <__assert_fail@plt+0x10b8>
   12b24:	add	r2, pc, r2
   12b28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b2c:	mov	r7, r1
   12b30:	ldr	r5, [r2, ip]
   12b34:	sub	sp, sp, #24
   12b38:	ldrb	r1, [r0]
   12b3c:	mov	r6, r0
   12b40:	str	r3, [sp, #4]
   12b44:	ldr	r2, [r5]
   12b48:	cmp	r1, #47	; 0x2f
   12b4c:	str	r3, [sp, #8]
   12b50:	moveq	r4, r0
   12b54:	moveq	r8, r3
   12b58:	str	r2, [sp, #20]
   12b5c:	beq	12b74 <__assert_fail@plt+0xecc>
   12b60:	mov	r1, #2
   12b64:	bl	12f44 <__assert_fail@plt+0x129c>
   12b68:	subs	r4, r0, #0
   12b6c:	movne	r8, r4
   12b70:	beq	12d14 <__assert_fail@plt+0x106c>
   12b74:	mov	r0, r4
   12b78:	mov	r1, r7
   12b7c:	add	r2, sp, #4
   12b80:	bl	119e4 <matchpathcon@plt>
   12b84:	cmp	r0, #0
   12b88:	blt	12cac <__assert_fail@plt+0x1004>
   12b8c:	mov	r0, r4
   12b90:	mov	r3, #0
   12b94:	str	r3, [sp, #12]
   12b98:	str	r3, [sp, #16]
   12b9c:	bl	1368c <close_stdout@@Base+0x118>
   12ba0:	subs	r4, r0, #0
   12ba4:	beq	12ccc <__assert_fail@plt+0x1024>
   12ba8:	add	r0, sp, #12
   12bac:	bl	119f0 <getcon@plt>
   12bb0:	cmp	r0, #0
   12bb4:	blt	12ccc <__assert_fail@plt+0x1024>
   12bb8:	mov	r0, r4
   12bbc:	add	r1, sp, #16
   12bc0:	bl	19c94 <fts_children@@Base+0x1d0>
   12bc4:	cmp	r0, #0
   12bc8:	blt	12ccc <__assert_fail@plt+0x1024>
   12bcc:	mov	r0, r7
   12bd0:	bl	11c90 <mode_to_security_class@plt>
   12bd4:	subs	r2, r0, #0
   12bd8:	beq	12ccc <__assert_fail@plt+0x1024>
   12bdc:	ldr	r1, [sp, #16]
   12be0:	add	r3, sp, #8
   12be4:	ldr	r0, [sp, #12]
   12be8:	bl	11bc4 <security_compute_create@plt>
   12bec:	mov	r6, r0
   12bf0:	mov	r0, r4
   12bf4:	bl	118dc <free@plt>
   12bf8:	ldr	r0, [sp, #12]
   12bfc:	bl	11bf4 <freecon@plt>
   12c00:	ldr	r0, [sp, #16]
   12c04:	bl	11bf4 <freecon@plt>
   12c08:	cmp	r6, #0
   12c0c:	blt	12cbc <__assert_fail@plt+0x1014>
   12c10:	ldr	r0, [sp, #4]
   12c14:	bl	11918 <context_new@plt>
   12c18:	subs	r6, r0, #0
   12c1c:	beq	12cbc <__assert_fail@plt+0x1014>
   12c20:	ldr	r0, [sp, #8]
   12c24:	bl	11918 <context_new@plt>
   12c28:	subs	r4, r0, #0
   12c2c:	beq	12d0c <__assert_fail@plt+0x1064>
   12c30:	mov	r0, r6
   12c34:	bl	118ac <context_type_get@plt>
   12c38:	subs	r1, r0, #0
   12c3c:	beq	12d0c <__assert_fail@plt+0x1064>
   12c40:	mov	r0, r4
   12c44:	bl	11948 <context_type_set@plt>
   12c48:	cmp	r0, #0
   12c4c:	bne	12d0c <__assert_fail@plt+0x1064>
   12c50:	mov	r0, r4
   12c54:	bl	11c24 <context_str@plt>
   12c58:	cmp	r0, #0
   12c5c:	beq	12d0c <__assert_fail@plt+0x1064>
   12c60:	bl	11ae0 <setfscreatecon@plt>
   12c64:	mov	r7, r0
   12c68:	mov	r0, r6
   12c6c:	bl	11a74 <context_free@plt>
   12c70:	mov	r0, r4
   12c74:	bl	11a74 <context_free@plt>
   12c78:	ldr	r0, [sp, #4]
   12c7c:	bl	11bf4 <freecon@plt>
   12c80:	ldr	r0, [sp, #8]
   12c84:	bl	11bf4 <freecon@plt>
   12c88:	mov	r0, r8
   12c8c:	bl	118dc <free@plt>
   12c90:	ldr	r2, [sp, #20]
   12c94:	ldr	r3, [r5]
   12c98:	mov	r0, r7
   12c9c:	cmp	r2, r3
   12ca0:	bne	12d58 <__assert_fail@plt+0x10b0>
   12ca4:	add	sp, sp, #24
   12ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12cac:	bl	11b04 <__errno_location@plt>
   12cb0:	ldr	r3, [r0]
   12cb4:	cmp	r3, #2
   12cb8:	beq	12cf4 <__assert_fail@plt+0x104c>
   12cbc:	mov	r4, #0
   12cc0:	mvn	r7, #0
   12cc4:	mov	r6, r4
   12cc8:	b	12c68 <__assert_fail@plt+0xfc0>
   12ccc:	mov	r0, r4
   12cd0:	mov	r4, #0
   12cd4:	bl	118dc <free@plt>
   12cd8:	ldr	r0, [sp, #12]
   12cdc:	bl	11bf4 <freecon@plt>
   12ce0:	ldr	r0, [sp, #16]
   12ce4:	bl	11bf4 <freecon@plt>
   12ce8:	mov	r6, r4
   12cec:	mvn	r7, #0
   12cf0:	b	12c68 <__assert_fail@plt+0xfc0>
   12cf4:	mov	r4, #0
   12cf8:	mov	r3, #61	; 0x3d
   12cfc:	mov	r6, r4
   12d00:	str	r3, [r0]
   12d04:	mvn	r7, #0
   12d08:	b	12c68 <__assert_fail@plt+0xfc0>
   12d0c:	mvn	r7, #0
   12d10:	b	12c68 <__assert_fail@plt+0xfc0>
   12d14:	bl	11b04 <__errno_location@plt>
   12d18:	ldr	r1, [pc, #68]	; 12d64 <__assert_fail@plt+0x10bc>
   12d1c:	mov	r2, #5
   12d20:	mov	r8, r4
   12d24:	add	r1, pc, r1
   12d28:	ldr	r9, [r0]
   12d2c:	mov	r0, r4
   12d30:	bl	11930 <dcgettext@plt>
   12d34:	mov	sl, r0
   12d38:	mov	r0, r6
   12d3c:	bl	16858 <triple_free@@Base+0x1dbc>
   12d40:	mov	r1, r9
   12d44:	mov	r2, sl
   12d48:	mov	r3, r0
   12d4c:	mov	r0, #1
   12d50:	bl	11a14 <error@plt>
   12d54:	b	12b74 <__assert_fail@plt+0xecc>
   12d58:	bl	1193c <__stack_chk_fail@plt>
   12d5c:	ldrdeq	sl, [r1], -r4
   12d60:	andeq	r0, r0, r8, lsl #3
   12d64:	andeq	r8, r0, r4, lsr #31
   12d68:	ldr	r3, [pc, #448]	; 12f30 <__assert_fail@plt+0x1288>
   12d6c:	ldr	ip, [pc, #448]	; 12f34 <__assert_fail@plt+0x128c>
   12d70:	add	r3, pc, r3
   12d74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12d78:	mov	r5, r1
   12d7c:	ldr	r8, [r3, ip]
   12d80:	sub	sp, sp, #16
   12d84:	ldrb	r1, [r0]
   12d88:	mov	r4, r0
   12d8c:	mov	r6, r2
   12d90:	ldr	r3, [r8]
   12d94:	cmp	r1, #47	; 0x2f
   12d98:	str	r3, [sp, #12]
   12d9c:	beq	12da8 <__assert_fail@plt+0x1100>
   12da0:	cmp	r2, #0
   12da4:	beq	12e6c <__assert_fail@plt+0x11c4>
   12da8:	mov	r0, r4
   12dac:	mov	r9, #0
   12db0:	cmp	r5, #0
   12db4:	mov	r2, #0
   12db8:	str	r0, [sp, #4]
   12dbc:	str	r2, [sp, #8]
   12dc0:	beq	12e4c <__assert_fail@plt+0x11a4>
   12dc4:	add	r0, sp, #4
   12dc8:	mov	r1, #16
   12dcc:	bl	171e0 <triple_free@@Base+0x2744>
   12dd0:	mov	r5, #1
   12dd4:	mov	r4, r0
   12dd8:	b	12df4 <__assert_fail@plt+0x114c>
   12ddc:	ldr	r0, [r4, #24]
   12de0:	mov	r1, r6
   12de4:	bl	128b0 <__assert_fail@plt+0xc08>
   12de8:	adds	r0, r0, #1
   12dec:	movne	r0, #1
   12df0:	and	r5, r5, r0
   12df4:	mov	r0, r4
   12df8:	bl	19234 <fts_read@@Base>
   12dfc:	subs	r7, r0, #0
   12e00:	bne	12ddc <__assert_fail@plt+0x1134>
   12e04:	bl	11b04 <__errno_location@plt>
   12e08:	ldr	sl, [r0]
   12e0c:	mov	r6, r0
   12e10:	cmp	sl, #0
   12e14:	bne	12ef0 <__assert_fail@plt+0x1248>
   12e18:	mov	r0, r4
   12e1c:	bl	190bc <fts_close@@Base>
   12e20:	cmp	r0, #0
   12e24:	bne	12ec0 <__assert_fail@plt+0x1218>
   12e28:	mov	r0, r9
   12e2c:	bl	118dc <free@plt>
   12e30:	mov	r0, r5
   12e34:	ldr	r2, [sp, #12]
   12e38:	ldr	r3, [r8]
   12e3c:	cmp	r2, r3
   12e40:	bne	12f2c <__assert_fail@plt+0x1284>
   12e44:	add	sp, sp, #16
   12e48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e4c:	mov	r1, r6
   12e50:	bl	128b0 <__assert_fail@plt+0xc08>
   12e54:	adds	r5, r0, #1
   12e58:	mov	r0, r9
   12e5c:	movne	r5, #1
   12e60:	bl	118dc <free@plt>
   12e64:	mov	r0, r5
   12e68:	b	12e34 <__assert_fail@plt+0x118c>
   12e6c:	mov	r1, #2
   12e70:	bl	12f44 <__assert_fail@plt+0x129c>
   12e74:	subs	r9, r0, #0
   12e78:	movne	r0, r9
   12e7c:	bne	12db0 <__assert_fail@plt+0x1108>
   12e80:	bl	11b04 <__errno_location@plt>
   12e84:	ldr	r1, [pc, #172]	; 12f38 <__assert_fail@plt+0x1290>
   12e88:	mov	r2, #5
   12e8c:	add	r1, pc, r1
   12e90:	ldr	r7, [r0]
   12e94:	mov	r0, r6
   12e98:	bl	11930 <dcgettext@plt>
   12e9c:	mov	r9, r0
   12ea0:	mov	r0, r4
   12ea4:	bl	16858 <triple_free@@Base+0x1dbc>
   12ea8:	mov	r1, r7
   12eac:	mov	r2, r9
   12eb0:	mov	r3, r0
   12eb4:	mov	r0, #1
   12eb8:	bl	11a14 <error@plt>
   12ebc:	b	12da8 <__assert_fail@plt+0x1100>
   12ec0:	ldr	r1, [pc, #116]	; 12f3c <__assert_fail@plt+0x1294>
   12ec4:	mov	r2, #5
   12ec8:	mov	r0, #0
   12ecc:	ldr	r4, [r6]
   12ed0:	add	r1, pc, r1
   12ed4:	bl	11930 <dcgettext@plt>
   12ed8:	mov	r1, r4
   12edc:	mov	r2, r0
   12ee0:	mov	r0, #0
   12ee4:	mov	r5, r0
   12ee8:	bl	11a14 <error@plt>
   12eec:	b	12e28 <__assert_fail@plt+0x1180>
   12ef0:	ldr	r1, [pc, #72]	; 12f40 <__assert_fail@plt+0x1298>
   12ef4:	mov	r2, #5
   12ef8:	mov	r0, r7
   12efc:	mov	r5, r7
   12f00:	add	r1, pc, r1
   12f04:	bl	11930 <dcgettext@plt>
   12f08:	mov	r1, sl
   12f0c:	mov	r2, r0
   12f10:	mov	r0, r7
   12f14:	bl	11a14 <error@plt>
   12f18:	mov	r0, r4
   12f1c:	bl	190bc <fts_close@@Base>
   12f20:	cmp	r0, #0
   12f24:	beq	12e28 <__assert_fail@plt+0x1180>
   12f28:	b	12ec0 <__assert_fail@plt+0x1218>
   12f2c:	bl	1193c <__stack_chk_fail@plt>
   12f30:	andeq	sl, r1, r8, lsl #5
   12f34:	andeq	r0, r0, r8, lsl #3
   12f38:	andeq	r8, r0, ip, lsr lr
   12f3c:	andeq	r8, r0, r0, lsr #28
   12f40:	andeq	r8, r0, r0, ror #27
   12f44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f48:	sub	sp, sp, #164	; 0xa4
   12f4c:	ldr	r3, [pc, #1508]	; 13538 <__assert_fail@plt+0x1890>
   12f50:	and	r8, r1, #3
   12f54:	ldr	r2, [pc, #1504]	; 1353c <__assert_fail@plt+0x1894>
   12f58:	ubfx	r1, r1, #2, #1
   12f5c:	add	r3, pc, r3
   12f60:	str	r3, [sp, #32]
   12f64:	ldr	lr, [sp, #32]
   12f68:	sub	r3, r8, #1
   12f6c:	str	r0, [sp, #28]
   12f70:	ands	r5, r3, r8
   12f74:	str	r1, [sp, #16]
   12f78:	ldr	r2, [lr, r2]
   12f7c:	str	r2, [sp, #36]	; 0x24
   12f80:	ldr	r2, [r2]
   12f84:	str	r2, [sp, #156]	; 0x9c
   12f88:	bne	13498 <__assert_fail@plt+0x17f0>
   12f8c:	ldr	r1, [sp, #28]
   12f90:	cmp	r1, #0
   12f94:	beq	13504 <__assert_fail@plt+0x185c>
   12f98:	ldr	r3, [sp, #28]
   12f9c:	ldrb	r4, [r3]
   12fa0:	cmp	r4, #0
   12fa4:	beq	134ac <__assert_fail@plt+0x1804>
   12fa8:	cmp	r4, #47	; 0x2f
   12fac:	beq	133f0 <__assert_fail@plt+0x1748>
   12fb0:	bl	1726c <triple_free@@Base+0x27d0>
   12fb4:	subs	r6, r0, #0
   12fb8:	beq	131c4 <__assert_fail@plt+0x151c>
   12fbc:	mov	r1, r5
   12fc0:	bl	11978 <__rawmemchr@plt>
   12fc4:	rsb	r5, r6, r0
   12fc8:	mov	r7, r0
   12fcc:	cmp	r5, #4096	; 0x1000
   12fd0:	movge	r5, r0
   12fd4:	blt	1341c <__assert_fail@plt+0x1774>
   12fd8:	ldr	r4, [sp, #28]
   12fdc:	mov	r3, #0
   12fe0:	mov	sl, r3
   12fe4:	add	lr, sp, #48	; 0x30
   12fe8:	str	r3, [sp, #20]
   12fec:	str	r3, [sp, #44]	; 0x2c
   12ff0:	str	r3, [sp, #40]	; 0x28
   12ff4:	str	lr, [sp, #24]
   12ff8:	ldrb	r1, [r4]
   12ffc:	cmp	r1, #0
   13000:	beq	13174 <__assert_fail@plt+0x14cc>
   13004:	cmp	r1, #47	; 0x2f
   13008:	addeq	r4, r4, #1
   1300c:	bne	132b4 <__assert_fail@plt+0x160c>
   13010:	mov	r9, r4
   13014:	add	r4, r4, #1
   13018:	ldrb	r1, [r9]
   1301c:	cmp	r1, #47	; 0x2f
   13020:	beq	13010 <__assert_fail@plt+0x1368>
   13024:	cmp	r1, #0
   13028:	moveq	r4, r9
   1302c:	beq	13048 <__assert_fail@plt+0x13a0>
   13030:	add	r3, r9, #1
   13034:	mov	r4, r3
   13038:	ldrb	r2, [r3], #1
   1303c:	cmp	r2, #47	; 0x2f
   13040:	cmpne	r2, #0
   13044:	bne	13034 <__assert_fail@plt+0x138c>
   13048:	cmp	r4, r9
   1304c:	beq	13174 <__assert_fail@plt+0x14cc>
   13050:	rsb	fp, r9, r4
   13054:	cmp	fp, #1
   13058:	beq	131e4 <__assert_fail@plt+0x153c>
   1305c:	cmp	fp, #2
   13060:	beq	131f0 <__assert_fail@plt+0x1548>
   13064:	ldrb	r3, [r5, #-1]
   13068:	cmp	r3, #47	; 0x2f
   1306c:	addne	r0, r5, #1
   13070:	moveq	r0, r5
   13074:	add	r3, r0, fp
   13078:	movne	r1, #47	; 0x2f
   1307c:	strbne	r1, [r5]
   13080:	cmp	r7, r3
   13084:	bhi	130b8 <__assert_fail@plt+0x1410>
   13088:	rsb	r7, r6, r7
   1308c:	cmp	fp, #4096	; 0x1000
   13090:	addge	r7, r7, #1
   13094:	addlt	r7, r7, #4096	; 0x1000
   13098:	addge	r7, r7, fp
   1309c:	rsb	r5, r6, r0
   130a0:	mov	r0, r6
   130a4:	mov	r1, r7
   130a8:	bl	16fcc <triple_free@@Base+0x2530>
   130ac:	mov	r6, r0
   130b0:	add	r7, r0, r7
   130b4:	add	r0, r0, r5
   130b8:	subs	r3, r8, #2
   130bc:	mov	r1, r9
   130c0:	mov	r2, fp
   130c4:	rsbs	r9, r3, #0
   130c8:	adcs	r9, r9, r3
   130cc:	bl	118f4 <memcpy@plt>
   130d0:	ldr	r3, [sp, #16]
   130d4:	tst	r3, r9
   130d8:	strb	sl, [r0, fp]
   130dc:	add	r5, r0, fp
   130e0:	bne	13128 <__assert_fail@plt+0x1480>
   130e4:	ldr	lr, [sp, #16]
   130e8:	mov	r0, #3
   130ec:	mov	r1, r6
   130f0:	add	r2, sp, #48	; 0x30
   130f4:	cmp	lr, #0
   130f8:	beq	13248 <__assert_fail@plt+0x15a0>
   130fc:	bl	11c3c <__xstat64@plt>
   13100:	adds	r0, r0, #0
   13104:	movne	r0, #1
   13108:	cmp	r0, #0
   1310c:	beq	13150 <__assert_fail@plt+0x14a8>
   13110:	bl	11b04 <__errno_location@plt>
   13114:	cmp	r8, #0
   13118:	ldr	fp, [r0]
   1311c:	beq	132e8 <__assert_fail@plt+0x1640>
   13120:	cmp	r8, #1
   13124:	beq	132bc <__assert_fail@plt+0x1614>
   13128:	str	sl, [sp, #64]	; 0x40
   1312c:	ldrb	r3, [r4]
   13130:	cmp	r3, #0
   13134:	beq	12ff8 <__assert_fail@plt+0x1350>
   13138:	cmp	r8, #2
   1313c:	beq	12ff8 <__assert_fail@plt+0x1350>
   13140:	bl	11b04 <__errno_location@plt>
   13144:	mov	fp, #20
   13148:	mov	r9, r0
   1314c:	b	132ec <__assert_fail@plt+0x1644>
   13150:	ldr	r3, [sp, #64]	; 0x40
   13154:	and	r3, r3, #61440	; 0xf000
   13158:	cmp	r3, #40960	; 0xa000
   1315c:	beq	13258 <__assert_fail@plt+0x15b0>
   13160:	cmp	r3, #16384	; 0x4000
   13164:	bne	1312c <__assert_fail@plt+0x1484>
   13168:	ldrb	r1, [r4]
   1316c:	cmp	r1, #0
   13170:	bne	13004 <__assert_fail@plt+0x135c>
   13174:	add	r3, r6, #1
   13178:	cmp	r5, r3
   1317c:	bhi	1340c <__assert_fail@plt+0x1764>
   13180:	mov	r3, r5
   13184:	mov	r2, #0
   13188:	strb	r2, [r3], #1
   1318c:	cmp	r7, r3
   13190:	beq	131a8 <__assert_fail@plt+0x1500>
   13194:	rsb	r1, r6, r5
   13198:	mov	r0, r6
   1319c:	add	r1, r1, #1
   131a0:	bl	16fcc <triple_free@@Base+0x2530>
   131a4:	mov	r6, r0
   131a8:	ldr	r0, [sp, #40]	; 0x28
   131ac:	bl	118dc <free@plt>
   131b0:	ldr	r3, [sp, #20]
   131b4:	cmp	r3, #0
   131b8:	beq	131c4 <__assert_fail@plt+0x151c>
   131bc:	mov	r0, r3
   131c0:	bl	143b8 <close_stdout@@Base+0xe44>
   131c4:	ldr	r1, [sp, #36]	; 0x24
   131c8:	mov	r0, r6
   131cc:	ldr	r2, [sp, #156]	; 0x9c
   131d0:	ldr	r3, [r1]
   131d4:	cmp	r2, r3
   131d8:	bne	13534 <__assert_fail@plt+0x188c>
   131dc:	add	sp, sp, #164	; 0xa4
   131e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e4:	cmp	r1, #46	; 0x2e
   131e8:	bne	13064 <__assert_fail@plt+0x13bc>
   131ec:	b	12ff8 <__assert_fail@plt+0x1350>
   131f0:	cmp	r1, #46	; 0x2e
   131f4:	bne	13064 <__assert_fail@plt+0x13bc>
   131f8:	ldrb	r3, [r9, #1]
   131fc:	cmp	r3, #46	; 0x2e
   13200:	bne	13064 <__assert_fail@plt+0x13bc>
   13204:	add	r3, r6, #1
   13208:	cmp	r5, r3
   1320c:	bls	12ff8 <__assert_fail@plt+0x1350>
   13210:	sub	r3, r5, #1
   13214:	cmp	r6, r3
   13218:	bcs	13524 <__assert_fail@plt+0x187c>
   1321c:	ldrb	r2, [r5, #-2]
   13220:	mov	r5, r3
   13224:	cmp	r2, #47	; 0x2f
   13228:	beq	12ff8 <__assert_fail@plt+0x1350>
   1322c:	sub	r5, r5, #1
   13230:	cmp	r5, r6
   13234:	beq	12ff8 <__assert_fail@plt+0x1350>
   13238:	ldrb	r3, [r5, #-1]
   1323c:	cmp	r3, #47	; 0x2f
   13240:	bne	1322c <__assert_fail@plt+0x1584>
   13244:	b	12ff8 <__assert_fail@plt+0x1350>
   13248:	bl	11c78 <__lxstat64@plt>
   1324c:	adds	r0, r0, #0
   13250:	movne	r0, #1
   13254:	b	13108 <__assert_fail@plt+0x1460>
   13258:	ldr	r3, [sp, #20]
   1325c:	cmp	r3, #0
   13260:	beq	1345c <__assert_fail@plt+0x17b4>
   13264:	ldr	r0, [sp, #20]
   13268:	add	r2, sp, #48	; 0x30
   1326c:	ldr	r1, [sp, #28]
   13270:	bl	13868 <close_stdout@@Base+0x2f4>
   13274:	cmp	r0, #0
   13278:	beq	1330c <__assert_fail@plt+0x1664>
   1327c:	cmp	r9, #0
   13280:	bne	12ff8 <__assert_fail@plt+0x1350>
   13284:	mov	fp, #40	; 0x28
   13288:	ldr	r0, [sp, #40]	; 0x28
   1328c:	bl	118dc <free@plt>
   13290:	mov	r0, r6
   13294:	bl	118dc <free@plt>
   13298:	ldr	r0, [sp, #20]
   1329c:	bl	143b8 <close_stdout@@Base+0xe44>
   132a0:	bl	11b04 <__errno_location@plt>
   132a4:	mov	r9, r0
   132a8:	str	fp, [r9]
   132ac:	mov	r6, #0
   132b0:	b	131c4 <__assert_fail@plt+0x151c>
   132b4:	mov	r9, r4
   132b8:	b	13030 <__assert_fail@plt+0x1388>
   132bc:	ldrb	r3, [r4]
   132c0:	cmp	r3, #47	; 0x2f
   132c4:	bne	132d8 <__assert_fail@plt+0x1630>
   132c8:	mov	r2, r4
   132cc:	ldrb	r3, [r2, #1]!
   132d0:	cmp	r3, #47	; 0x2f
   132d4:	beq	132cc <__assert_fail@plt+0x1624>
   132d8:	cmp	r3, #0
   132dc:	bne	132e8 <__assert_fail@plt+0x1640>
   132e0:	cmp	fp, #2
   132e4:	beq	12ff8 <__assert_fail@plt+0x1350>
   132e8:	mov	r9, r0
   132ec:	ldr	r0, [sp, #40]	; 0x28
   132f0:	bl	118dc <free@plt>
   132f4:	mov	r0, r6
   132f8:	bl	118dc <free@plt>
   132fc:	ldr	r3, [sp, #20]
   13300:	cmp	r3, #0
   13304:	beq	132a8 <__assert_fail@plt+0x1600>
   13308:	b	13298 <__assert_fail@plt+0x15f0>
   1330c:	ldr	r0, [sp, #20]
   13310:	add	r2, sp, #48	; 0x30
   13314:	ldr	r1, [sp, #28]
   13318:	bl	13800 <close_stdout@@Base+0x28c>
   1331c:	mov	r0, r6
   13320:	ldr	r1, [sp, #96]	; 0x60
   13324:	bl	19cdc <fts_children@@Base+0x218>
   13328:	subs	fp, r0, #0
   1332c:	beq	134e8 <__assert_fail@plt+0x1840>
   13330:	bl	11abc <strlen@plt>
   13334:	mov	r9, r0
   13338:	mov	r0, r4
   1333c:	bl	11abc <strlen@plt>
   13340:	ldr	r1, [sp, #44]	; 0x2c
   13344:	cmp	r1, #0
   13348:	add	r3, r9, r0
   1334c:	mov	r2, r0
   13350:	add	r3, r3, #1
   13354:	beq	13438 <__assert_fail@plt+0x1790>
   13358:	ldr	lr, [sp, #44]	; 0x2c
   1335c:	cmp	lr, r3
   13360:	bcc	134c0 <__assert_fail@plt+0x1818>
   13364:	ldr	r3, [sp, #40]	; 0x28
   13368:	mov	r1, r4
   1336c:	add	r2, r2, #1
   13370:	add	r0, r3, r9
   13374:	bl	118d0 <memmove@plt>
   13378:	ldr	r0, [sp, #40]	; 0x28
   1337c:	mov	r1, fp
   13380:	mov	r2, r9
   13384:	bl	118f4 <memcpy@plt>
   13388:	ldrb	r3, [fp]
   1338c:	cmp	r3, #47	; 0x2f
   13390:	addeq	r5, r6, #1
   13394:	strbeq	r3, [r6]
   13398:	str	r0, [sp, #28]
   1339c:	beq	133e0 <__assert_fail@plt+0x1738>
   133a0:	add	r3, r6, #1
   133a4:	cmp	r5, r3
   133a8:	bls	133e0 <__assert_fail@plt+0x1738>
   133ac:	sub	r3, r5, #1
   133b0:	cmp	r6, r3
   133b4:	bcs	1352c <__assert_fail@plt+0x1884>
   133b8:	ldrb	r2, [r5, #-2]
   133bc:	mov	r5, r3
   133c0:	cmp	r2, #47	; 0x2f
   133c4:	beq	133e0 <__assert_fail@plt+0x1738>
   133c8:	sub	r5, r5, #1
   133cc:	cmp	r5, r6
   133d0:	beq	133e0 <__assert_fail@plt+0x1738>
   133d4:	ldrb	r3, [r5, #-1]
   133d8:	cmp	r3, #47	; 0x2f
   133dc:	bne	133c8 <__assert_fail@plt+0x1720>
   133e0:	mov	r0, fp
   133e4:	ldr	r4, [sp, #28]
   133e8:	bl	118dc <free@plt>
   133ec:	b	12ff8 <__assert_fail@plt+0x1350>
   133f0:	mov	r0, #4096	; 0x1000
   133f4:	bl	16f74 <triple_free@@Base+0x24d8>
   133f8:	mov	r6, r0
   133fc:	strb	r4, [r0]
   13400:	add	r7, r0, #4096	; 0x1000
   13404:	add	r5, r0, #1
   13408:	b	12fd8 <__assert_fail@plt+0x1330>
   1340c:	ldrb	r3, [r5, #-1]
   13410:	cmp	r3, #47	; 0x2f
   13414:	subeq	r5, r5, #1
   13418:	b	13180 <__assert_fail@plt+0x14d8>
   1341c:	mov	r0, r6
   13420:	mov	r1, #4096	; 0x1000
   13424:	bl	16fcc <triple_free@@Base+0x2530>
   13428:	mov	r6, r0
   1342c:	add	r5, r0, r5
   13430:	add	r7, r0, #4096	; 0x1000
   13434:	b	12fd8 <__assert_fail@plt+0x1330>
   13438:	cmp	r3, #4096	; 0x1000
   1343c:	movcc	r3, #4096	; 0x1000
   13440:	str	r2, [sp, #8]
   13444:	str	r3, [sp, #44]	; 0x2c
   13448:	mov	r0, r3
   1344c:	bl	16f74 <triple_free@@Base+0x24d8>
   13450:	ldr	r2, [sp, #8]
   13454:	str	r0, [sp, #40]	; 0x28
   13458:	b	13364 <__assert_fail@plt+0x16bc>
   1345c:	ldr	lr, [sp, #32]
   13460:	mov	r1, r3
   13464:	ldr	ip, [pc, #212]	; 13540 <__assert_fail@plt+0x1898>
   13468:	mov	r0, #7
   1346c:	ldr	r2, [pc, #208]	; 13544 <__assert_fail@plt+0x189c>
   13470:	ldr	r3, [pc, #208]	; 13548 <__assert_fail@plt+0x18a0>
   13474:	ldr	ip, [lr, ip]
   13478:	ldr	r2, [lr, r2]
   1347c:	ldr	r3, [lr, r3]
   13480:	str	ip, [sp]
   13484:	bl	141d4 <close_stdout@@Base+0xc60>
   13488:	cmp	r0, #0
   1348c:	str	r0, [sp, #20]
   13490:	bne	13264 <__assert_fail@plt+0x15bc>
   13494:	bl	17188 <triple_free@@Base+0x26ec>
   13498:	bl	11b04 <__errno_location@plt>
   1349c:	mov	r6, #0
   134a0:	mov	r3, #22
   134a4:	str	r3, [r0]
   134a8:	b	131c4 <__assert_fail@plt+0x151c>
   134ac:	bl	11b04 <__errno_location@plt>
   134b0:	mov	r6, r4
   134b4:	mov	r3, #2
   134b8:	str	r3, [r0]
   134bc:	b	131c4 <__assert_fail@plt+0x151c>
   134c0:	mov	r1, r3
   134c4:	ldr	r0, [sp, #40]	; 0x28
   134c8:	str	r2, [sp, #8]
   134cc:	str	r3, [sp, #12]
   134d0:	bl	16fcc <triple_free@@Base+0x2530>
   134d4:	ldr	r3, [sp, #12]
   134d8:	ldr	r2, [sp, #8]
   134dc:	str	r3, [sp, #44]	; 0x2c
   134e0:	str	r0, [sp, #40]	; 0x28
   134e4:	b	13364 <__assert_fail@plt+0x16bc>
   134e8:	cmp	r9, #0
   134ec:	beq	13518 <__assert_fail@plt+0x1870>
   134f0:	bl	11b04 <__errno_location@plt>
   134f4:	ldr	fp, [r0]
   134f8:	cmp	fp, #12
   134fc:	bne	12ff8 <__assert_fail@plt+0x1350>
   13500:	b	13288 <__assert_fail@plt+0x15e0>
   13504:	bl	11b04 <__errno_location@plt>
   13508:	ldr	r6, [sp, #28]
   1350c:	mov	r3, #22
   13510:	str	r3, [r0]
   13514:	b	131c4 <__assert_fail@plt+0x151c>
   13518:	bl	11b04 <__errno_location@plt>
   1351c:	ldr	fp, [r0]
   13520:	b	13288 <__assert_fail@plt+0x15e0>
   13524:	mov	r5, r3
   13528:	b	12ff8 <__assert_fail@plt+0x1350>
   1352c:	mov	r5, r3
   13530:	b	133e0 <__assert_fail@plt+0x1738>
   13534:	bl	1193c <__stack_chk_fail@plt>
   13538:	muleq	r1, ip, r0
   1353c:	andeq	r0, r0, r8, lsl #3
   13540:	andeq	r0, r0, ip, lsl #3
   13544:	andeq	r0, r0, r0, lsr #3
   13548:	andeq	r0, r0, ip, lsr #3
   1354c:	ldr	r3, [pc, #8]	; 1355c <__assert_fail@plt+0x18b4>
   13550:	add	r3, pc, r3
   13554:	str	r0, [r3]
   13558:	bx	lr
   1355c:	andeq	r9, r1, r4, asr #25
   13560:	ldr	r3, [pc, #8]	; 13570 <__assert_fail@plt+0x18c8>
   13564:	add	r3, pc, r3
   13568:	strb	r0, [r3, #4]
   1356c:	bx	lr
   13570:			; <UNDEFINED> instruction: 0x00019cb0

00013574 <close_stdout@@Base>:
   13574:	push	{r4, r5, r6, r7, lr}
   13578:	sub	sp, sp, #12
   1357c:	ldr	r4, [pc, #228]	; 13668 <close_stdout@@Base+0xf4>
   13580:	ldr	r3, [pc, #228]	; 1366c <close_stdout@@Base+0xf8>
   13584:	add	r4, pc, r4
   13588:	ldr	r3, [r4, r3]
   1358c:	ldr	r0, [r3]
   13590:	bl	19e10 <fts_children@@Base+0x34c>
   13594:	cmp	r0, #0
   13598:	beq	135c0 <close_stdout@@Base+0x4c>
   1359c:	ldr	r3, [pc, #204]	; 13670 <close_stdout@@Base+0xfc>
   135a0:	add	r3, pc, r3
   135a4:	ldrb	r3, [r3, #4]
   135a8:	cmp	r3, #0
   135ac:	beq	135e0 <close_stdout@@Base+0x6c>
   135b0:	bl	11b04 <__errno_location@plt>
   135b4:	ldr	r3, [r0]
   135b8:	cmp	r3, #32
   135bc:	bne	135e0 <close_stdout@@Base+0x6c>
   135c0:	ldr	r3, [pc, #172]	; 13674 <close_stdout@@Base+0x100>
   135c4:	ldr	r3, [r4, r3]
   135c8:	ldr	r0, [r3]
   135cc:	bl	19e10 <fts_children@@Base+0x34c>
   135d0:	cmp	r0, #0
   135d4:	bne	13634 <close_stdout@@Base+0xc0>
   135d8:	add	sp, sp, #12
   135dc:	pop	{r4, r5, r6, r7, pc}
   135e0:	ldr	r1, [pc, #144]	; 13678 <close_stdout@@Base+0x104>
   135e4:	mov	r0, #0
   135e8:	mov	r2, #5
   135ec:	add	r1, pc, r1
   135f0:	bl	11930 <dcgettext@plt>
   135f4:	ldr	r3, [pc, #128]	; 1367c <close_stdout@@Base+0x108>
   135f8:	ldr	r5, [pc, r3]
   135fc:	cmp	r5, #0
   13600:	mov	r6, r0
   13604:	beq	13644 <close_stdout@@Base+0xd0>
   13608:	bl	11b04 <__errno_location@plt>
   1360c:	ldr	r7, [r0]
   13610:	mov	r0, r5
   13614:	bl	16704 <triple_free@@Base+0x1c68>
   13618:	ldr	r2, [pc, #96]	; 13680 <close_stdout@@Base+0x10c>
   1361c:	str	r6, [sp]
   13620:	mov	r1, r7
   13624:	add	r2, pc, r2
   13628:	mov	r3, r0
   1362c:	mov	r0, #0
   13630:	bl	11a14 <error@plt>
   13634:	ldr	r3, [pc, #72]	; 13684 <close_stdout@@Base+0x110>
   13638:	ldr	r3, [r4, r3]
   1363c:	ldr	r0, [r3]
   13640:	bl	118e8 <_exit@plt>
   13644:	bl	11b04 <__errno_location@plt>
   13648:	ldr	r2, [pc, #56]	; 13688 <close_stdout@@Base+0x114>
   1364c:	add	r2, pc, r2
   13650:	mov	r3, r0
   13654:	mov	r0, r5
   13658:	ldr	r1, [r3]
   1365c:	mov	r3, r6
   13660:	bl	11a14 <error@plt>
   13664:	b	13634 <close_stdout@@Base+0xc0>
   13668:	andeq	r9, r1, r4, ror sl
   1366c:			; <UNDEFINED> instruction: 0x000001b0
   13670:	andeq	r9, r1, r4, ror ip
   13674:	muleq	r0, r8, r1
   13678:	andeq	r8, r0, r0, lsr #14
   1367c:	andeq	r9, r1, ip, lsl ip
   13680:	strdeq	r8, [r0], -r4
   13684:			; <UNDEFINED> instruction: 0x000001b4
   13688:	ldrdeq	r8, [r0], -r0
   1368c:	push	{r3, lr}
   13690:	bl	13704 <close_stdout@@Base+0x190>
   13694:	cmp	r0, #0
   13698:	popne	{r3, pc}
   1369c:	bl	17188 <triple_free@@Base+0x26ec>
   136a0:	push	{r3, r4, r5, lr}
   136a4:	mov	r4, r0
   136a8:	ldrb	r5, [r0]
   136ac:	subs	r3, r5, #47	; 0x2f
   136b0:	rsbs	r5, r3, #0
   136b4:	adcs	r5, r5, r3
   136b8:	bl	1375c <close_stdout@@Base+0x1e8>
   136bc:	rsb	r3, r4, r0
   136c0:	cmp	r3, r5
   136c4:	bls	136fc <close_stdout@@Base+0x188>
   136c8:	sub	r0, r3, #1
   136cc:	ldrb	r2, [r4, r0]
   136d0:	cmp	r2, #47	; 0x2f
   136d4:	beq	136ec <close_stdout@@Base+0x178>
   136d8:	b	136fc <close_stdout@@Base+0x188>
   136dc:	ldrb	r2, [r4, r3]
   136e0:	cmp	r2, #47	; 0x2f
   136e4:	popne	{r3, r4, r5, pc}
   136e8:	mov	r0, r3
   136ec:	cmp	r5, r0
   136f0:	sub	r3, r0, #1
   136f4:	bcc	136dc <close_stdout@@Base+0x168>
   136f8:	pop	{r3, r4, r5, pc}
   136fc:	mov	r0, r3
   13700:	pop	{r3, r4, r5, pc}
   13704:	push	{r4, r5, r6, r7, r8, lr}
   13708:	mov	r8, r0
   1370c:	bl	136a0 <close_stdout@@Base+0x12c>
   13710:	rsbs	r6, r0, #1
   13714:	add	r7, r0, #1
   13718:	mov	r4, r0
   1371c:	movcc	r6, #0
   13720:	add	r0, r6, r7
   13724:	bl	11a44 <malloc@plt>
   13728:	subs	r5, r0, #0
   1372c:	beq	13754 <close_stdout@@Base+0x1e0>
   13730:	mov	r2, r4
   13734:	mov	r1, r8
   13738:	bl	118f4 <memcpy@plt>
   1373c:	cmp	r6, #0
   13740:	movne	r3, #46	; 0x2e
   13744:	strbne	r3, [r5, r4]
   13748:	movne	r4, r7
   1374c:	mov	r3, #0
   13750:	strb	r3, [r5, r4]
   13754:	mov	r0, r5
   13758:	pop	{r4, r5, r6, r7, r8, pc}
   1375c:	ldrb	r3, [r0]
   13760:	cmp	r3, #47	; 0x2f
   13764:	bne	13780 <close_stdout@@Base+0x20c>
   13768:	add	r2, r0, #1
   1376c:	mov	r0, r2
   13770:	add	r2, r2, #1
   13774:	ldrb	r3, [r0]
   13778:	cmp	r3, #47	; 0x2f
   1377c:	beq	1376c <close_stdout@@Base+0x1f8>
   13780:	cmp	r3, #0
   13784:	bxeq	lr
   13788:	mov	r2, r0
   1378c:	mov	r1, #0
   13790:	cmp	r3, #47	; 0x2f
   13794:	moveq	r1, #1
   13798:	beq	137a8 <close_stdout@@Base+0x234>
   1379c:	cmp	r1, #0
   137a0:	movne	r0, r2
   137a4:	movne	r1, #0
   137a8:	ldrb	r3, [r2, #1]!
   137ac:	cmp	r3, #0
   137b0:	bne	13790 <close_stdout@@Base+0x21c>
   137b4:	bx	lr
   137b8:	push	{r4, lr}
   137bc:	mov	r4, r0
   137c0:	bl	11abc <strlen@plt>
   137c4:	cmp	r0, #1
   137c8:	popls	{r4, pc}
   137cc:	sub	r3, r0, #1
   137d0:	ldrb	r2, [r4, r3]
   137d4:	cmp	r2, #47	; 0x2f
   137d8:	popne	{r4, pc}
   137dc:	mov	r0, r3
   137e0:	cmp	r0, #1
   137e4:	sub	r3, r3, #1
   137e8:	beq	137fc <close_stdout@@Base+0x288>
   137ec:	ldrb	r2, [r4, r3]
   137f0:	cmp	r2, #47	; 0x2f
   137f4:	popne	{r4, pc}
   137f8:	b	137dc <close_stdout@@Base+0x268>
   137fc:	pop	{r4, pc}
   13800:	push	{r4, r5, r6, r7, r8, lr}
   13804:	subs	r8, r0, #0
   13808:	mov	r4, r1
   1380c:	mov	r7, r2
   13810:	popeq	{r4, r5, r6, r7, r8, pc}
   13814:	mov	r0, #24
   13818:	bl	16f74 <triple_free@@Base+0x24d8>
   1381c:	mov	r6, r0
   13820:	mov	r0, r4
   13824:	bl	1716c <triple_free@@Base+0x26d0>
   13828:	ldrd	r4, [r7]
   1382c:	mov	r1, r6
   13830:	str	r0, [r6]
   13834:	mov	r0, r8
   13838:	ldrd	r2, [r7, #96]	; 0x60
   1383c:	strd	r4, [r6, #16]
   13840:	strd	r2, [r6, #8]
   13844:	bl	147fc <close_stdout@@Base+0x1288>
   13848:	cmp	r0, #0
   1384c:	beq	13864 <close_stdout@@Base+0x2f0>
   13850:	cmp	r6, r0
   13854:	popeq	{r4, r5, r6, r7, r8, pc}
   13858:	mov	r0, r6
   1385c:	pop	{r4, r5, r6, r7, r8, lr}
   13860:	b	14a9c <triple_free@@Base>
   13864:	bl	17188 <triple_free@@Base+0x26ec>
   13868:	ldr	r3, [pc, #104]	; 138d8 <close_stdout@@Base+0x364>
   1386c:	ldr	ip, [pc, #104]	; 138dc <close_stdout@@Base+0x368>
   13870:	add	r3, pc, r3
   13874:	push	{r4, r5, r6, r7, lr}
   13878:	subs	r4, r0, #0
   1387c:	ldr	r6, [r3, ip]
   13880:	sub	sp, sp, #36	; 0x24
   13884:	mov	r7, r1
   13888:	moveq	r0, r4
   1388c:	ldr	r3, [r6]
   13890:	str	r3, [sp, #28]
   13894:	beq	138bc <close_stdout@@Base+0x348>
   13898:	ldrd	r4, [r2, #96]	; 0x60
   1389c:	mov	r1, sp
   138a0:	ldrd	r2, [r2]
   138a4:	str	r7, [sp]
   138a8:	strd	r4, [sp, #8]
   138ac:	strd	r2, [sp, #16]
   138b0:	bl	13f20 <close_stdout@@Base+0x9ac>
   138b4:	adds	r0, r0, #0
   138b8:	movne	r0, #1
   138bc:	ldr	r2, [sp, #28]
   138c0:	ldr	r3, [r6]
   138c4:	cmp	r2, r3
   138c8:	bne	138d4 <close_stdout@@Base+0x360>
   138cc:	add	sp, sp, #36	; 0x24
   138d0:	pop	{r4, r5, r6, r7, pc}
   138d4:	bl	1193c <__stack_chk_fail@plt>
   138d8:	andeq	r9, r1, r8, lsl #15
   138dc:	andeq	r0, r0, r8, lsl #3
   138e0:	cmp	r0, #9
   138e4:	push	{r4, r5, r6, r7, r8, lr}
   138e8:	bhi	1397c <close_stdout@@Base+0x408>
   138ec:	mov	r7, #11
   138f0:	movw	r8, #43691	; 0xaaab
   138f4:	movt	r8, #43690	; 0xaaaa
   138f8:	cmp	r7, #9
   138fc:	bls	13974 <close_stdout@@Base+0x400>
   13900:	umull	r2, r3, r8, r7
   13904:	lsr	r3, r3, #1
   13908:	add	r3, r3, r3, lsl #1
   1390c:	cmp	r7, r3
   13910:	beq	13960 <close_stdout@@Base+0x3ec>
   13914:	mov	r6, #16
   13918:	mov	r5, #9
   1391c:	mov	r4, #3
   13920:	b	13930 <close_stdout@@Base+0x3bc>
   13924:	bl	1aac8 <fts_children@@Base+0x1004>
   13928:	cmp	r1, #0
   1392c:	beq	13960 <close_stdout@@Base+0x3ec>
   13930:	add	r5, r5, r6
   13934:	add	r4, r4, #2
   13938:	cmp	r5, r7
   1393c:	mov	r0, r7
   13940:	add	r6, r6, #8
   13944:	mov	r1, r4
   13948:	bcc	13924 <close_stdout@@Base+0x3b0>
   1394c:	mov	r1, r4
   13950:	mov	r0, r7
   13954:	bl	1aac8 <fts_children@@Base+0x1004>
   13958:	cmp	r1, #0
   1395c:	bne	1396c <close_stdout@@Base+0x3f8>
   13960:	add	r7, r7, #2
   13964:	cmn	r7, #1
   13968:	bne	138f8 <close_stdout@@Base+0x384>
   1396c:	mov	r0, r7
   13970:	pop	{r4, r5, r6, r7, r8, pc}
   13974:	mov	r4, #3
   13978:	b	1394c <close_stdout@@Base+0x3d8>
   1397c:	orr	r7, r0, #1
   13980:	cmn	r7, #1
   13984:	bne	138f0 <close_stdout@@Base+0x37c>
   13988:	b	1396c <close_stdout@@Base+0x3f8>
   1398c:	push	{r3, lr}
   13990:	ror	r0, r0, #3
   13994:	bl	1aac8 <fts_children@@Base+0x1004>
   13998:	mov	r0, r1
   1399c:	pop	{r3, pc}
   139a0:	subs	r3, r1, r0
   139a4:	rsbs	r0, r3, #0
   139a8:	adcs	r0, r0, r3
   139ac:	bx	lr
   139b0:	push	{r4, lr}
   139b4:	mov	r4, r0
   139b8:	ldr	r3, [r4, #24]
   139bc:	mov	r0, r1
   139c0:	ldr	r1, [r4, #8]
   139c4:	blx	r3
   139c8:	ldr	r3, [r4, #8]
   139cc:	cmp	r0, r3
   139d0:	bcs	139e0 <close_stdout@@Base+0x46c>
   139d4:	ldr	r3, [r4]
   139d8:	add	r0, r3, r0, lsl #3
   139dc:	pop	{r4, pc}
   139e0:	bl	11c60 <abort@plt>
   139e4:	push	{r4, r5, r6, r7, r8, lr}
   139e8:	mov	r7, r2
   139ec:	mov	r8, r3
   139f0:	mov	r6, r0
   139f4:	mov	r5, r1
   139f8:	bl	139b0 <close_stdout@@Base+0x43c>
   139fc:	str	r0, [r7]
   13a00:	mov	r4, r0
   13a04:	ldr	r2, [r0]
   13a08:	cmp	r2, #0
   13a0c:	beq	13aa0 <close_stdout@@Base+0x52c>
   13a10:	cmp	r5, r2
   13a14:	beq	13a34 <close_stdout@@Base+0x4c0>
   13a18:	mov	r1, r2
   13a1c:	ldr	r3, [r6, #28]
   13a20:	mov	r0, r5
   13a24:	blx	r3
   13a28:	cmp	r0, #0
   13a2c:	beq	13a94 <close_stdout@@Base+0x520>
   13a30:	ldr	r2, [r4]
   13a34:	cmp	r8, #0
   13a38:	beq	13a64 <close_stdout@@Base+0x4f0>
   13a3c:	ldr	r3, [r4, #4]
   13a40:	cmp	r3, #0
   13a44:	streq	r3, [r4]
   13a48:	ldmne	r3, {r0, r1}
   13a4c:	movne	ip, #0
   13a50:	stmne	r4, {r0, r1}
   13a54:	strne	ip, [r3]
   13a58:	ldrne	r1, [r6, #36]	; 0x24
   13a5c:	strne	r1, [r3, #4]
   13a60:	strne	r3, [r6, #36]	; 0x24
   13a64:	mov	r0, r2
   13a68:	pop	{r4, r5, r6, r7, r8, pc}
   13a6c:	ldr	r2, [ip]
   13a70:	cmp	r2, r5
   13a74:	beq	13ab4 <close_stdout@@Base+0x540>
   13a78:	mov	r1, r2
   13a7c:	mov	r0, r5
   13a80:	ldr	r2, [r6, #28]
   13a84:	blx	r2
   13a88:	cmp	r0, #0
   13a8c:	bne	13aac <close_stdout@@Base+0x538>
   13a90:	ldr	r4, [r4, #4]
   13a94:	ldr	ip, [r4, #4]
   13a98:	cmp	ip, #0
   13a9c:	bne	13a6c <close_stdout@@Base+0x4f8>
   13aa0:	mov	r2, #0
   13aa4:	mov	r0, r2
   13aa8:	pop	{r4, r5, r6, r7, r8, pc}
   13aac:	ldr	ip, [r4, #4]
   13ab0:	ldr	r2, [ip]
   13ab4:	cmp	r8, #0
   13ab8:	beq	13a64 <close_stdout@@Base+0x4f0>
   13abc:	ldr	r1, [ip, #4]
   13ac0:	mov	r3, #0
   13ac4:	mov	r0, r2
   13ac8:	str	r1, [r4, #4]
   13acc:	str	r3, [ip]
   13ad0:	ldr	r3, [r6, #36]	; 0x24
   13ad4:	str	r3, [ip, #4]
   13ad8:	str	ip, [r6, #36]	; 0x24
   13adc:	pop	{r4, r5, r6, r7, r8, pc}
   13ae0:	ldr	r1, [pc, #176]	; 13b98 <close_stdout@@Base+0x624>
   13ae4:	mov	r2, r0
   13ae8:	ldr	r3, [r0]
   13aec:	add	r1, pc, r1
   13af0:	cmp	r3, r1
   13af4:	beq	13b84 <close_stdout@@Base+0x610>
   13af8:	vldr	s15, [r3, #8]
   13afc:	vldr	s14, [pc, #136]	; 13b8c <close_stdout@@Base+0x618>
   13b00:	vcmpe.f32	s15, s14
   13b04:	vmrs	APSR_nzcv, fpscr
   13b08:	ble	13b70 <close_stdout@@Base+0x5fc>
   13b0c:	vldr	s13, [pc, #124]	; 13b90 <close_stdout@@Base+0x61c>
   13b10:	vcmpe.f32	s15, s13
   13b14:	vmrs	APSR_nzcv, fpscr
   13b18:	bpl	13b70 <close_stdout@@Base+0x5fc>
   13b1c:	vldr	s13, [pc, #112]	; 13b94 <close_stdout@@Base+0x620>
   13b20:	vldr	s12, [r3, #12]
   13b24:	vcmpe.f32	s12, s13
   13b28:	vmrs	APSR_nzcv, fpscr
   13b2c:	ble	13b70 <close_stdout@@Base+0x5fc>
   13b30:	vldr	s13, [r3]
   13b34:	vcmpe.f32	s13, #0.0
   13b38:	vmrs	APSR_nzcv, fpscr
   13b3c:	blt	13b70 <close_stdout@@Base+0x5fc>
   13b40:	vadd.f32	s14, s13, s14
   13b44:	vldr	s12, [r3, #4]
   13b48:	vcmpe.f32	s14, s12
   13b4c:	vmrs	APSR_nzcv, fpscr
   13b50:	bpl	13b70 <close_stdout@@Base+0x5fc>
   13b54:	vmov.f32	s13, #112	; 0x3f800000  1.0
   13b58:	vcmpe.f32	s12, s13
   13b5c:	vmrs	APSR_nzcv, fpscr
   13b60:	bhi	13b70 <close_stdout@@Base+0x5fc>
   13b64:	vcmpe.f32	s15, s14
   13b68:	vmrs	APSR_nzcv, fpscr
   13b6c:	bgt	13b84 <close_stdout@@Base+0x610>
   13b70:	ldr	r3, [pc, #36]	; 13b9c <close_stdout@@Base+0x628>
   13b74:	mov	r0, #0
   13b78:	add	r3, pc, r3
   13b7c:	str	r3, [r2]
   13b80:	bx	lr
   13b84:	mov	r0, #1
   13b88:	bx	lr
   13b8c:	stclcc	12, cr12, [ip, #820]	; 0x334
   13b90:	svccc	0x00666666
   13b94:	svccc	0x008ccccd
   13b98:	andeq	r8, r0, r4, lsr r2
   13b9c:	andeq	r8, r0, r8, lsr #3
   13ba0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ba4:	mov	r8, r1
   13ba8:	ldr	r6, [r1]
   13bac:	mov	r5, r0
   13bb0:	ldr	r3, [r1, #4]
   13bb4:	mov	sl, r2
   13bb8:	cmp	r6, r3
   13bbc:	addcc	r6, r6, #8
   13bc0:	movcc	r9, #0
   13bc4:	bcs	13c6c <close_stdout@@Base+0x6f8>
   13bc8:	ldr	fp, [r6, #-8]
   13bcc:	mov	r7, r6
   13bd0:	cmp	fp, #0
   13bd4:	beq	13c60 <close_stdout@@Base+0x6ec>
   13bd8:	ldr	r4, [r6, #-4]
   13bdc:	cmp	r4, #0
   13be0:	bne	13c00 <close_stdout@@Base+0x68c>
   13be4:	b	13c50 <close_stdout@@Base+0x6dc>
   13be8:	ldr	r2, [r0, #4]
   13bec:	cmp	r3, #0
   13bf0:	str	r2, [r4, #4]
   13bf4:	str	r4, [r0, #4]
   13bf8:	mov	r4, r3
   13bfc:	beq	13c4c <close_stdout@@Base+0x6d8>
   13c00:	ldr	fp, [r4]
   13c04:	mov	r0, r5
   13c08:	mov	r1, fp
   13c0c:	bl	139b0 <close_stdout@@Base+0x43c>
   13c10:	ldr	r3, [r4, #4]
   13c14:	ldr	r2, [r0]
   13c18:	cmp	r2, #0
   13c1c:	bne	13be8 <close_stdout@@Base+0x674>
   13c20:	str	fp, [r0]
   13c24:	cmp	r3, #0
   13c28:	ldr	r1, [r5, #12]
   13c2c:	add	r1, r1, #1
   13c30:	str	r1, [r5, #12]
   13c34:	str	r2, [r4]
   13c38:	ldr	r2, [r5, #36]	; 0x24
   13c3c:	str	r2, [r4, #4]
   13c40:	str	r4, [r5, #36]	; 0x24
   13c44:	mov	r4, r3
   13c48:	bne	13c00 <close_stdout@@Base+0x68c>
   13c4c:	ldr	fp, [r6, #-8]
   13c50:	cmp	sl, #0
   13c54:	str	r9, [r6, #-4]
   13c58:	beq	13c74 <close_stdout@@Base+0x700>
   13c5c:	ldr	r3, [r8, #4]
   13c60:	cmp	r3, r7
   13c64:	add	r6, r6, #8
   13c68:	bhi	13bc8 <close_stdout@@Base+0x654>
   13c6c:	mov	r0, #1
   13c70:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c74:	mov	r0, r5
   13c78:	mov	r1, fp
   13c7c:	bl	139b0 <close_stdout@@Base+0x43c>
   13c80:	ldr	r3, [r0]
   13c84:	mov	r4, r0
   13c88:	cmp	r3, #0
   13c8c:	beq	13cd8 <close_stdout@@Base+0x764>
   13c90:	ldr	r0, [r5, #36]	; 0x24
   13c94:	cmp	r0, #0
   13c98:	beq	13cec <close_stdout@@Base+0x778>
   13c9c:	ldr	r2, [r0, #4]
   13ca0:	str	r2, [r5, #36]	; 0x24
   13ca4:	str	fp, [r0]
   13ca8:	ldr	r2, [r4, #4]
   13cac:	str	r2, [r0, #4]
   13cb0:	str	r0, [r4, #4]
   13cb4:	str	r9, [r6, #-8]
   13cb8:	add	r6, r6, #8
   13cbc:	ldr	r3, [r8, #4]
   13cc0:	ldr	r2, [r8, #12]
   13cc4:	cmp	r3, r7
   13cc8:	sub	r2, r2, #1
   13ccc:	str	r2, [r8, #12]
   13cd0:	bhi	13bc8 <close_stdout@@Base+0x654>
   13cd4:	b	13c6c <close_stdout@@Base+0x6f8>
   13cd8:	str	fp, [r0]
   13cdc:	ldr	r3, [r5, #12]
   13ce0:	add	r3, r3, #1
   13ce4:	str	r3, [r5, #12]
   13ce8:	b	13cb4 <close_stdout@@Base+0x740>
   13cec:	mov	r0, #8
   13cf0:	bl	11a44 <malloc@plt>
   13cf4:	cmp	r0, #0
   13cf8:	bne	13ca4 <close_stdout@@Base+0x730>
   13cfc:	mov	r0, sl
   13d00:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13d04:	ldr	r0, [r0, #8]
   13d08:	bx	lr
   13d0c:	ldr	r0, [r0, #12]
   13d10:	bx	lr
   13d14:	ldr	r0, [r0, #16]
   13d18:	bx	lr
   13d1c:	ldr	r3, [r0]
   13d20:	ldr	r2, [r0, #4]
   13d24:	cmp	r3, r2
   13d28:	bcs	13d8c <close_stdout@@Base+0x818>
   13d2c:	add	r1, r3, #8
   13d30:	add	r2, r2, #7
   13d34:	rsb	r2, r1, r2
   13d38:	add	r3, r3, #16
   13d3c:	bic	r2, r2, #7
   13d40:	mov	r0, #0
   13d44:	add	ip, r3, r2
   13d48:	ldr	r3, [r1, #-8]
   13d4c:	cmp	r3, #0
   13d50:	beq	13d7c <close_stdout@@Base+0x808>
   13d54:	ldr	r3, [r1, #-4]
   13d58:	mov	r2, #1
   13d5c:	cmp	r3, #0
   13d60:	beq	13d74 <close_stdout@@Base+0x800>
   13d64:	ldr	r3, [r3, #4]
   13d68:	add	r2, r2, #1
   13d6c:	cmp	r3, #0
   13d70:	bne	13d64 <close_stdout@@Base+0x7f0>
   13d74:	cmp	r0, r2
   13d78:	movcc	r0, r2
   13d7c:	add	r1, r1, #8
   13d80:	cmp	r1, ip
   13d84:	bne	13d48 <close_stdout@@Base+0x7d4>
   13d88:	bx	lr
   13d8c:	mov	r0, #0
   13d90:	bx	lr
   13d94:	push	{r4}		; (str r4, [sp, #-4]!)
   13d98:	ldr	r3, [r0]
   13d9c:	ldr	r2, [r0, #4]
   13da0:	cmp	r3, r2
   13da4:	bcs	13e34 <close_stdout@@Base+0x8c0>
   13da8:	add	r2, r2, #7
   13dac:	add	r1, r3, #8
   13db0:	rsb	ip, r1, r2
   13db4:	add	r3, r3, #16
   13db8:	bic	ip, ip, #7
   13dbc:	mov	r2, #0
   13dc0:	add	r4, r3, ip
   13dc4:	mov	ip, r2
   13dc8:	ldr	r3, [r1, #-8]
   13dcc:	cmp	r3, #0
   13dd0:	beq	13df8 <close_stdout@@Base+0x884>
   13dd4:	ldr	r3, [r1, #-4]
   13dd8:	add	ip, ip, #1
   13ddc:	add	r2, r2, #1
   13de0:	cmp	r3, #0
   13de4:	beq	13df8 <close_stdout@@Base+0x884>
   13de8:	ldr	r3, [r3, #4]
   13dec:	add	r2, r2, #1
   13df0:	cmp	r3, #0
   13df4:	bne	13de8 <close_stdout@@Base+0x874>
   13df8:	add	r1, r1, #8
   13dfc:	cmp	r1, r4
   13e00:	bne	13dc8 <close_stdout@@Base+0x854>
   13e04:	ldr	r3, [r0, #12]
   13e08:	cmp	r3, ip
   13e0c:	movne	r0, #0
   13e10:	beq	13e1c <close_stdout@@Base+0x8a8>
   13e14:	pop	{r4}		; (ldr r4, [sp], #4)
   13e18:	bx	lr
   13e1c:	ldr	r0, [r0, #16]
   13e20:	pop	{r4}		; (ldr r4, [sp], #4)
   13e24:	subs	r3, r0, r2
   13e28:	rsbs	r0, r3, #0
   13e2c:	adcs	r0, r0, r3
   13e30:	bx	lr
   13e34:	mov	r2, #0
   13e38:	mov	ip, r2
   13e3c:	b	13e04 <close_stdout@@Base+0x890>
   13e40:	push	{r4, r5, r6, r7, r8, lr}
   13e44:	sub	sp, sp, #8
   13e48:	mov	r4, r1
   13e4c:	mov	r5, r0
   13e50:	bl	13d14 <close_stdout@@Base+0x7a0>
   13e54:	mov	r8, r0
   13e58:	mov	r0, r5
   13e5c:	bl	13d04 <close_stdout@@Base+0x790>
   13e60:	mov	r6, r0
   13e64:	mov	r0, r5
   13e68:	bl	13d0c <close_stdout@@Base+0x798>
   13e6c:	mov	r7, r0
   13e70:	mov	r0, r5
   13e74:	bl	13d1c <close_stdout@@Base+0x7a8>
   13e78:	ldr	r2, [pc, #144]	; 13f10 <close_stdout@@Base+0x99c>
   13e7c:	mov	r3, r8
   13e80:	mov	r1, #1
   13e84:	add	r2, pc, r2
   13e88:	mov	r5, r0
   13e8c:	mov	r0, r4
   13e90:	bl	11b4c <__fprintf_chk@plt>
   13e94:	ldr	r2, [pc, #120]	; 13f14 <close_stdout@@Base+0x9a0>
   13e98:	mov	r3, r6
   13e9c:	mov	r0, r4
   13ea0:	mov	r1, #1
   13ea4:	add	r2, pc, r2
   13ea8:	bl	11b4c <__fprintf_chk@plt>
   13eac:	vmov	s15, r7
   13eb0:	vldr	d5, [pc, #80]	; 13f08 <close_stdout@@Base+0x994>
   13eb4:	ldr	r2, [pc, #92]	; 13f18 <close_stdout@@Base+0x9a4>
   13eb8:	vcvt.f64.u32	d4, s15
   13ebc:	mov	r3, r7
   13ec0:	vmov	s15, r6
   13ec4:	mov	r0, r4
   13ec8:	mov	r1, #1
   13ecc:	add	r2, pc, r2
   13ed0:	vmul.f64	d5, d4, d5
   13ed4:	vcvt.f64.u32	d6, s15
   13ed8:	vdiv.f64	d7, d5, d6
   13edc:	vstr	d7, [sp]
   13ee0:	bl	11b4c <__fprintf_chk@plt>
   13ee4:	ldr	r2, [pc, #48]	; 13f1c <close_stdout@@Base+0x9a8>
   13ee8:	mov	r0, r4
   13eec:	mov	r3, r5
   13ef0:	mov	r1, #1
   13ef4:	add	r2, pc, r2
   13ef8:	add	sp, sp, #8
   13efc:	pop	{r4, r5, r6, r7, r8, lr}
   13f00:	b	11b4c <__fprintf_chk@plt>
   13f04:	nop	{0}
   13f08:	andeq	r0, r0, r0
   13f0c:	subsmi	r0, r9, r0
   13f10:			; <UNDEFINED> instruction: 0x00007eb0
   13f14:	andeq	r7, r0, r8, lsr #29
   13f18:	muleq	r0, r8, lr
   13f1c:	muleq	r0, r4, lr
   13f20:	push	{r4, r5, r6, lr}
   13f24:	mov	r6, r0
   13f28:	mov	r5, r1
   13f2c:	bl	139b0 <close_stdout@@Base+0x43c>
   13f30:	ldr	r3, [r0]
   13f34:	mov	r4, r0
   13f38:	cmp	r3, #0
   13f3c:	bne	13f48 <close_stdout@@Base+0x9d4>
   13f40:	b	13f74 <close_stdout@@Base+0xa00>
   13f44:	ldr	r3, [r4]
   13f48:	cmp	r5, r3
   13f4c:	mov	r1, r3
   13f50:	mov	r0, r5
   13f54:	beq	13f80 <close_stdout@@Base+0xa0c>
   13f58:	ldr	r3, [r6, #28]
   13f5c:	blx	r3
   13f60:	cmp	r0, #0
   13f64:	bne	13f7c <close_stdout@@Base+0xa08>
   13f68:	ldr	r4, [r4, #4]
   13f6c:	cmp	r4, #0
   13f70:	bne	13f44 <close_stdout@@Base+0x9d0>
   13f74:	mov	r0, #0
   13f78:	pop	{r4, r5, r6, pc}
   13f7c:	ldr	r3, [r4]
   13f80:	mov	r0, r3
   13f84:	pop	{r4, r5, r6, pc}
   13f88:	push	{r3, lr}
   13f8c:	ldr	r3, [r0, #16]
   13f90:	cmp	r3, #0
   13f94:	beq	13fd4 <close_stdout@@Base+0xa60>
   13f98:	ldr	r3, [r0]
   13f9c:	ldr	r2, [r0, #4]
   13fa0:	cmp	r3, r2
   13fa4:	bcs	13fd0 <close_stdout@@Base+0xa5c>
   13fa8:	ldr	r0, [r3]
   13fac:	cmp	r0, #0
   13fb0:	beq	13fc4 <close_stdout@@Base+0xa50>
   13fb4:	b	13fdc <close_stdout@@Base+0xa68>
   13fb8:	ldr	r0, [r3]
   13fbc:	cmp	r0, #0
   13fc0:	popne	{r3, pc}
   13fc4:	add	r3, r3, #8
   13fc8:	cmp	r3, r2
   13fcc:	bcc	13fb8 <close_stdout@@Base+0xa44>
   13fd0:	bl	11c60 <abort@plt>
   13fd4:	mov	r0, r3
   13fd8:	pop	{r3, pc}
   13fdc:	pop	{r3, pc}
   13fe0:	push	{r3, r4, r5, lr}
   13fe4:	mov	r5, r0
   13fe8:	mov	r4, r1
   13fec:	bl	139b0 <close_stdout@@Base+0x43c>
   13ff0:	mov	r2, r0
   13ff4:	mov	r3, r0
   13ff8:	b	14004 <close_stdout@@Base+0xa90>
   13ffc:	cmp	r3, #0
   14000:	beq	1401c <close_stdout@@Base+0xaa8>
   14004:	ldr	ip, [r3]
   14008:	ldr	r3, [r3, #4]
   1400c:	cmp	ip, r4
   14010:	bne	13ffc <close_stdout@@Base+0xa88>
   14014:	cmp	r3, #0
   14018:	bne	14044 <close_stdout@@Base+0xad0>
   1401c:	ldr	r3, [r5, #4]
   14020:	b	14030 <close_stdout@@Base+0xabc>
   14024:	ldr	r0, [r2]
   14028:	cmp	r0, #0
   1402c:	popne	{r3, r4, r5, pc}
   14030:	add	r2, r2, #8
   14034:	cmp	r2, r3
   14038:	bcc	14024 <close_stdout@@Base+0xab0>
   1403c:	mov	r0, #0
   14040:	pop	{r3, r4, r5, pc}
   14044:	ldr	r0, [r3]
   14048:	pop	{r3, r4, r5, pc}
   1404c:	push	{r4, r5, r6, r7}
   14050:	mov	r6, r0
   14054:	ldm	r0, {r5, ip}
   14058:	cmp	ip, r5
   1405c:	bls	140e0 <close_stdout@@Base+0xb6c>
   14060:	add	r5, r5, #8
   14064:	mov	r0, #0
   14068:	ldr	r3, [r5, #-8]
   1406c:	mov	r7, r5
   14070:	cmp	r3, #0
   14074:	beq	140c0 <close_stdout@@Base+0xb4c>
   14078:	cmp	r2, r0
   1407c:	bls	140cc <close_stdout@@Base+0xb58>
   14080:	str	r3, [r1, r0, lsl #2]
   14084:	add	r4, r0, #1
   14088:	ldr	r3, [r5, #-4]
   1408c:	add	ip, r1, r0, lsl #2
   14090:	cmp	r3, #0
   14094:	beq	140d4 <close_stdout@@Base+0xb60>
   14098:	mov	r0, r4
   1409c:	cmp	r0, r2
   140a0:	beq	140cc <close_stdout@@Base+0xb58>
   140a4:	ldr	r4, [r3]
   140a8:	add	r0, r0, #1
   140ac:	str	r4, [ip, #4]!
   140b0:	ldr	r3, [r3, #4]
   140b4:	cmp	r3, #0
   140b8:	bne	1409c <close_stdout@@Base+0xb28>
   140bc:	ldr	ip, [r6, #4]
   140c0:	cmp	ip, r7
   140c4:	add	r5, r5, #8
   140c8:	bhi	14068 <close_stdout@@Base+0xaf4>
   140cc:	pop	{r4, r5, r6, r7}
   140d0:	bx	lr
   140d4:	ldr	ip, [r6, #4]
   140d8:	mov	r0, r4
   140dc:	b	140c0 <close_stdout@@Base+0xb4c>
   140e0:	mov	r0, #0
   140e4:	b	140cc <close_stdout@@Base+0xb58>
   140e8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   140ec:	mov	r7, r2
   140f0:	ldr	r8, [r0]
   140f4:	mov	r9, r0
   140f8:	ldr	r2, [r0, #4]
   140fc:	mov	r6, r1
   14100:	mov	r5, #0
   14104:	cmp	r2, r8
   14108:	bls	14158 <close_stdout@@Base+0xbe4>
   1410c:	ldr	r3, [r8]
   14110:	cmp	r3, #0
   14114:	beq	1414c <close_stdout@@Base+0xbd8>
   14118:	mov	r0, r3
   1411c:	mov	r4, r8
   14120:	b	14128 <close_stdout@@Base+0xbb4>
   14124:	ldr	r0, [r4]
   14128:	mov	r1, r7
   1412c:	blx	r6
   14130:	cmp	r0, #0
   14134:	beq	14158 <close_stdout@@Base+0xbe4>
   14138:	ldr	r4, [r4, #4]
   1413c:	add	r5, r5, #1
   14140:	cmp	r4, #0
   14144:	bne	14124 <close_stdout@@Base+0xbb0>
   14148:	ldr	r2, [r9, #4]
   1414c:	add	r8, r8, #8
   14150:	cmp	r2, r8
   14154:	bhi	1410c <close_stdout@@Base+0xb98>
   14158:	mov	r0, r5
   1415c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   14160:	push	{r3, r4, r5, lr}
   14164:	mov	r5, r1
   14168:	ldrb	r3, [r0]
   1416c:	cmp	r3, #0
   14170:	beq	141a0 <close_stdout@@Base+0xc2c>
   14174:	mov	r4, r0
   14178:	mov	r1, #0
   1417c:	rsb	r0, r1, r1, lsl #5
   14180:	mov	r1, r5
   14184:	add	r0, r3, r0
   14188:	bl	1aac8 <fts_children@@Base+0x1004>
   1418c:	ldrb	r3, [r4, #1]!
   14190:	cmp	r3, #0
   14194:	bne	1417c <close_stdout@@Base+0xc08>
   14198:	mov	r0, r1
   1419c:	pop	{r3, r4, r5, pc}
   141a0:	mov	r1, r3
   141a4:	b	14198 <close_stdout@@Base+0xc24>
   141a8:	push	{r4}		; (str r4, [sp, #-4]!)
   141ac:	mov	ip, r0
   141b0:	ldr	r4, [pc, #24]	; 141d0 <close_stdout@@Base+0xc5c>
   141b4:	add	r4, pc, r4
   141b8:	ldm	r4!, {r0, r1, r2, r3}
   141bc:	ldr	r4, [r4]
   141c0:	stmia	ip!, {r0, r1, r2, r3}
   141c4:	str	r4, [ip]
   141c8:	pop	{r4}		; (ldr r4, [sp], #4)
   141cc:	bx	lr
   141d0:	andeq	r7, r0, ip, ror #22
   141d4:	push	{r4, r5, r6, r7, r8, lr}
   141d8:	subs	r8, r2, #0
   141dc:	mov	r7, r0
   141e0:	mov	r5, r1
   141e4:	mov	r6, r3
   141e8:	beq	142dc <close_stdout@@Base+0xd68>
   141ec:	cmp	r6, #0
   141f0:	beq	142d0 <close_stdout@@Base+0xd5c>
   141f4:	mov	r0, #40	; 0x28
   141f8:	bl	11a44 <malloc@plt>
   141fc:	subs	r4, r0, #0
   14200:	beq	142f4 <close_stdout@@Base+0xd80>
   14204:	cmp	r5, #0
   14208:	beq	142e8 <close_stdout@@Base+0xd74>
   1420c:	mov	r0, r4
   14210:	str	r5, [r0, #20]!
   14214:	bl	13ae0 <close_stdout@@Base+0x56c>
   14218:	cmp	r0, #0
   1421c:	beq	142c0 <close_stdout@@Base+0xd4c>
   14220:	ldrb	r3, [r5, #16]
   14224:	vldr	s15, [r5, #8]
   14228:	cmp	r3, #0
   1422c:	bne	14254 <close_stdout@@Base+0xce0>
   14230:	vmov	s14, r7
   14234:	vcvt.f32.u32	s13, s14
   14238:	vldr	s14, [pc, #188]	; 142fc <close_stdout@@Base+0xd88>
   1423c:	vdiv.f32	s15, s13, s15
   14240:	vcmpe.f32	s15, s14
   14244:	vmrs	APSR_nzcv, fpscr
   14248:	bge	142b8 <close_stdout@@Base+0xd44>
   1424c:	vcvt.u32.f32	s15, s15
   14250:	vmov	r7, s15
   14254:	mov	r0, r7
   14258:	bl	138e0 <close_stdout@@Base+0x36c>
   1425c:	cmn	r0, #-1073741823	; 0xc0000001
   14260:	mov	r5, r0
   14264:	bhi	142b8 <close_stdout@@Base+0xd44>
   14268:	cmp	r0, #0
   1426c:	str	r0, [r4, #8]
   14270:	beq	142c0 <close_stdout@@Base+0xd4c>
   14274:	mov	r1, #8
   14278:	bl	11870 <calloc@plt>
   1427c:	cmp	r0, #0
   14280:	str	r0, [r4]
   14284:	beq	142c0 <close_stdout@@Base+0xd4c>
   14288:	ldr	r3, [sp, #24]
   1428c:	mov	r2, #0
   14290:	add	r5, r0, r5, lsl #3
   14294:	str	r8, [r4, #24]
   14298:	str	r5, [r4, #4]
   1429c:	mov	r0, r4
   142a0:	str	r6, [r4, #28]
   142a4:	str	r3, [r4, #32]
   142a8:	str	r2, [r4, #12]
   142ac:	str	r2, [r4, #16]
   142b0:	str	r2, [r4, #36]	; 0x24
   142b4:	pop	{r4, r5, r6, r7, r8, pc}
   142b8:	mov	r3, #0
   142bc:	str	r3, [r4, #8]
   142c0:	mov	r0, r4
   142c4:	bl	118dc <free@plt>
   142c8:	mov	r0, #0
   142cc:	pop	{r4, r5, r6, r7, r8, pc}
   142d0:	ldr	r6, [pc, #40]	; 14300 <close_stdout@@Base+0xd8c>
   142d4:	add	r6, pc, r6
   142d8:	b	141f4 <close_stdout@@Base+0xc80>
   142dc:	ldr	r8, [pc, #32]	; 14304 <close_stdout@@Base+0xd90>
   142e0:	add	r8, pc, r8
   142e4:	b	141ec <close_stdout@@Base+0xc78>
   142e8:	ldr	r5, [pc, #24]	; 14308 <close_stdout@@Base+0xd94>
   142ec:	add	r5, pc, r5
   142f0:	b	1420c <close_stdout@@Base+0xc98>
   142f4:	mov	r0, r4
   142f8:	pop	{r4, r5, r6, r7, r8, pc}
   142fc:	svcmi	0x00800000
   14300:			; <UNDEFINED> instruction: 0xfffff6c4
   14304:			; <UNDEFINED> instruction: 0xfffff6a4
   14308:	andeq	r7, r0, r4, lsr sl
   1430c:	push	{r4, r5, r6, r7, r8, lr}
   14310:	mov	r5, r0
   14314:	ldr	r7, [r0]
   14318:	ldr	r3, [r0, #4]
   1431c:	cmp	r7, r3
   14320:	addcc	r7, r7, #8
   14324:	movcc	r6, #0
   14328:	bcs	143a8 <close_stdout@@Base+0xe34>
   1432c:	ldr	r2, [r7, #-8]
   14330:	mov	r8, r7
   14334:	cmp	r2, #0
   14338:	beq	1439c <close_stdout@@Base+0xe28>
   1433c:	ldr	r4, [r7, #-4]
   14340:	cmp	r4, #0
   14344:	beq	1437c <close_stdout@@Base+0xe08>
   14348:	ldr	r3, [r5, #32]
   1434c:	cmp	r3, #0
   14350:	beq	1435c <close_stdout@@Base+0xde8>
   14354:	ldr	r0, [r4]
   14358:	blx	r3
   1435c:	ldr	r3, [r4, #4]
   14360:	str	r6, [r4]
   14364:	ldr	r2, [r5, #36]	; 0x24
   14368:	cmp	r3, #0
   1436c:	str	r2, [r4, #4]
   14370:	str	r4, [r5, #36]	; 0x24
   14374:	mov	r4, r3
   14378:	bne	14348 <close_stdout@@Base+0xdd4>
   1437c:	ldr	r3, [r5, #32]
   14380:	cmp	r3, #0
   14384:	beq	14390 <close_stdout@@Base+0xe1c>
   14388:	ldr	r0, [r7, #-8]
   1438c:	blx	r3
   14390:	str	r6, [r7, #-8]
   14394:	str	r6, [r7, #-4]
   14398:	ldr	r3, [r5, #4]
   1439c:	cmp	r3, r8
   143a0:	add	r7, r7, #8
   143a4:	bhi	1432c <close_stdout@@Base+0xdb8>
   143a8:	mov	r3, #0
   143ac:	str	r3, [r5, #12]
   143b0:	str	r3, [r5, #16]
   143b4:	pop	{r4, r5, r6, r7, r8, pc}
   143b8:	push	{r3, r4, r5, r6, r7, lr}
   143bc:	mov	r5, r0
   143c0:	ldr	r3, [r0, #32]
   143c4:	cmp	r3, #0
   143c8:	beq	143d8 <close_stdout@@Base+0xe64>
   143cc:	ldr	r3, [r0, #16]
   143d0:	cmp	r3, #0
   143d4:	bne	14454 <close_stdout@@Base+0xee0>
   143d8:	ldr	r3, [r5, #4]
   143dc:	ldr	r6, [r5]
   143e0:	cmp	r6, r3
   143e4:	bcs	14420 <close_stdout@@Base+0xeac>
   143e8:	add	r6, r6, #8
   143ec:	ldr	r0, [r6, #-4]
   143f0:	mov	r7, r6
   143f4:	cmp	r0, #0
   143f8:	beq	14414 <close_stdout@@Base+0xea0>
   143fc:	ldr	r4, [r0, #4]
   14400:	bl	118dc <free@plt>
   14404:	cmp	r4, #0
   14408:	mov	r0, r4
   1440c:	bne	143fc <close_stdout@@Base+0xe88>
   14410:	ldr	r3, [r5, #4]
   14414:	cmp	r7, r3
   14418:	add	r6, r6, #8
   1441c:	bcc	143ec <close_stdout@@Base+0xe78>
   14420:	ldr	r0, [r5, #36]	; 0x24
   14424:	cmp	r0, #0
   14428:	beq	14440 <close_stdout@@Base+0xecc>
   1442c:	ldr	r4, [r0, #4]
   14430:	bl	118dc <free@plt>
   14434:	cmp	r4, #0
   14438:	mov	r0, r4
   1443c:	bne	1442c <close_stdout@@Base+0xeb8>
   14440:	ldr	r0, [r5]
   14444:	bl	118dc <free@plt>
   14448:	mov	r0, r5
   1444c:	pop	{r3, r4, r5, r6, r7, lr}
   14450:	b	118dc <free@plt>
   14454:	ldr	r6, [r0]
   14458:	ldr	r3, [r0, #4]
   1445c:	cmp	r6, r3
   14460:	bcs	14420 <close_stdout@@Base+0xeac>
   14464:	ldr	r0, [r6]
   14468:	cmp	r0, #0
   1446c:	movne	r4, r6
   14470:	bne	1447c <close_stdout@@Base+0xf08>
   14474:	b	14494 <close_stdout@@Base+0xf20>
   14478:	ldr	r0, [r4]
   1447c:	ldr	r3, [r5, #32]
   14480:	blx	r3
   14484:	ldr	r4, [r4, #4]
   14488:	cmp	r4, #0
   1448c:	bne	14478 <close_stdout@@Base+0xf04>
   14490:	ldr	r3, [r5, #4]
   14494:	add	r6, r6, #8
   14498:	cmp	r3, r6
   1449c:	bhi	14464 <close_stdout@@Base+0xef0>
   144a0:	b	143dc <close_stdout@@Base+0xe68>
   144a4:	ldr	r3, [pc, #392]	; 14634 <close_stdout@@Base+0x10c0>
   144a8:	ldr	r2, [pc, #392]	; 14638 <close_stdout@@Base+0x10c4>
   144ac:	add	r3, pc, r3
   144b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144b4:	sub	sp, sp, #52	; 0x34
   144b8:	ldr	r5, [r0, #20]
   144bc:	mov	r4, r0
   144c0:	ldr	r6, [r3, r2]
   144c4:	vldr	s15, [r5, #8]
   144c8:	ldrb	r2, [r5, #16]
   144cc:	ldr	r3, [r6]
   144d0:	cmp	r2, #0
   144d4:	str	r3, [sp, #44]	; 0x2c
   144d8:	bne	14500 <close_stdout@@Base+0xf8c>
   144dc:	vmov	s14, r1
   144e0:	vcvt.f32.u32	s13, s14
   144e4:	vldr	s14, [pc, #324]	; 14630 <close_stdout@@Base+0x10bc>
   144e8:	vdiv.f32	s15, s13, s15
   144ec:	vcmpe.f32	s15, s14
   144f0:	vmrs	APSR_nzcv, fpscr
   144f4:	bge	145f8 <close_stdout@@Base+0x1084>
   144f8:	vcvt.u32.f32	s15, s15
   144fc:	vmov	r1, s15
   14500:	mov	r0, r1
   14504:	bl	138e0 <close_stdout@@Base+0x36c>
   14508:	sub	r3, r0, #1
   1450c:	mov	r7, r0
   14510:	cmn	r3, #-1073741822	; 0xc0000002
   14514:	bhi	145f8 <close_stdout@@Base+0x1084>
   14518:	ldr	r3, [r4, #8]
   1451c:	cmp	r3, r0
   14520:	beq	145d8 <close_stdout@@Base+0x1064>
   14524:	mov	r1, #8
   14528:	bl	11870 <calloc@plt>
   1452c:	cmp	r0, #0
   14530:	mov	r3, r0
   14534:	str	r0, [sp, #4]
   14538:	beq	145f8 <close_stdout@@Base+0x1084>
   1453c:	ldr	fp, [r4, #24]
   14540:	add	r8, sp, #4
   14544:	ldr	sl, [r4, #28]
   14548:	mov	ip, #0
   1454c:	ldr	r9, [r4, #32]
   14550:	mov	r0, r8
   14554:	ldr	lr, [r4, #36]	; 0x24
   14558:	mov	r2, ip
   1455c:	mov	r1, r4
   14560:	add	r3, r3, r7, lsl #3
   14564:	str	r5, [sp, #24]
   14568:	str	r7, [sp, #12]
   1456c:	str	r3, [sp, #8]
   14570:	str	fp, [sp, #28]
   14574:	str	sl, [sp, #32]
   14578:	str	r9, [sp, #36]	; 0x24
   1457c:	str	lr, [sp, #40]	; 0x28
   14580:	str	ip, [sp, #16]
   14584:	str	ip, [sp, #20]
   14588:	bl	13ba0 <close_stdout@@Base+0x62c>
   1458c:	subs	r5, r0, #0
   14590:	bne	14600 <close_stdout@@Base+0x108c>
   14594:	ldr	r3, [sp, #40]	; 0x28
   14598:	mov	r0, r4
   1459c:	mov	r1, r8
   145a0:	mov	r2, #1
   145a4:	str	r3, [r4, #36]	; 0x24
   145a8:	bl	13ba0 <close_stdout@@Base+0x62c>
   145ac:	cmp	r0, #0
   145b0:	beq	1462c <close_stdout@@Base+0x10b8>
   145b4:	mov	r0, r4
   145b8:	mov	r1, r8
   145bc:	mov	r2, r5
   145c0:	bl	13ba0 <close_stdout@@Base+0x62c>
   145c4:	cmp	r0, #0
   145c8:	beq	1462c <close_stdout@@Base+0x10b8>
   145cc:	ldr	r0, [sp, #4]
   145d0:	bl	118dc <free@plt>
   145d4:	b	145dc <close_stdout@@Base+0x1068>
   145d8:	mov	r5, #1
   145dc:	ldr	r1, [sp, #44]	; 0x2c
   145e0:	mov	r0, r5
   145e4:	ldr	r3, [r6]
   145e8:	cmp	r1, r3
   145ec:	bne	14628 <close_stdout@@Base+0x10b4>
   145f0:	add	sp, sp, #52	; 0x34
   145f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145f8:	mov	r5, #0
   145fc:	b	145dc <close_stdout@@Base+0x1068>
   14600:	ldr	r0, [r4]
   14604:	bl	118dc <free@plt>
   14608:	add	r0, sp, #8
   1460c:	ldr	ip, [sp, #4]
   14610:	ldm	r0, {r0, r1, r2}
   14614:	ldr	r3, [sp, #40]	; 0x28
   14618:	str	ip, [r4]
   1461c:	stmib	r4, {r0, r1, r2}
   14620:	str	r3, [r4, #36]	; 0x24
   14624:	b	145dc <close_stdout@@Base+0x1068>
   14628:	bl	1193c <__stack_chk_fail@plt>
   1462c:	bl	11c60 <abort@plt>
   14630:	svcmi	0x00800000
   14634:	andeq	r8, r1, ip, asr #22
   14638:	andeq	r0, r0, r8, lsl #3
   1463c:	ldr	r3, [pc, #428]	; 147f0 <close_stdout@@Base+0x127c>
   14640:	ldr	ip, [pc, #428]	; 147f4 <close_stdout@@Base+0x1280>
   14644:	add	r3, pc, r3
   14648:	push	{r4, r5, r6, r7, r8, lr}
   1464c:	subs	r8, r1, #0
   14650:	ldr	r4, [r3, ip]
   14654:	sub	sp, sp, #8
   14658:	mov	r5, r2
   1465c:	mov	r6, r0
   14660:	ldr	r3, [r4]
   14664:	str	r3, [sp, #4]
   14668:	beq	147a8 <close_stdout@@Base+0x1234>
   1466c:	mov	r3, #0
   14670:	mov	r2, sp
   14674:	bl	139e4 <close_stdout@@Base+0x470>
   14678:	cmp	r0, #0
   1467c:	beq	146a8 <close_stdout@@Base+0x1134>
   14680:	cmp	r5, #0
   14684:	moveq	r0, r5
   14688:	strne	r0, [r5]
   1468c:	movne	r0, #0
   14690:	ldr	r2, [sp, #4]
   14694:	ldr	r3, [r4]
   14698:	cmp	r2, r3
   1469c:	bne	147e8 <close_stdout@@Base+0x1274>
   146a0:	add	sp, sp, #8
   146a4:	pop	{r4, r5, r6, r7, r8, pc}
   146a8:	vldr	s11, [r6, #8]
   146ac:	vcvt.f32.u32	s14, s11
   146b0:	ldr	r3, [r6, #20]
   146b4:	vldr	s15, [r3, #8]
   146b8:	vldr	s13, [r6, #12]
   146bc:	vmul.f32	s15, s14, s15
   146c0:	vcvt.f32.u32	s14, s13
   146c4:	vcmpe.f32	s14, s15
   146c8:	vmrs	APSR_nzcv, fpscr
   146cc:	bgt	1471c <close_stdout@@Base+0x11a8>
   146d0:	ldr	r3, [sp]
   146d4:	ldr	r2, [r3]
   146d8:	cmp	r2, #0
   146dc:	beq	147ac <close_stdout@@Base+0x1238>
   146e0:	ldr	r3, [r6, #36]	; 0x24
   146e4:	cmp	r3, #0
   146e8:	beq	147d0 <close_stdout@@Base+0x125c>
   146ec:	ldr	r2, [r3, #4]
   146f0:	str	r2, [r6, #36]	; 0x24
   146f4:	str	r8, [r3]
   146f8:	mov	r0, #1
   146fc:	ldr	r2, [sp]
   14700:	ldr	r1, [r2, #4]
   14704:	str	r1, [r3, #4]
   14708:	str	r3, [r2, #4]
   1470c:	ldr	r3, [r6, #16]
   14710:	add	r3, r3, r0
   14714:	str	r3, [r6, #16]
   14718:	b	14690 <close_stdout@@Base+0x111c>
   1471c:	add	r0, r6, #20
   14720:	bl	13ae0 <close_stdout@@Base+0x56c>
   14724:	vldr	s11, [r6, #8]
   14728:	vcvt.f32.u32	s15, s11
   1472c:	ldr	r3, [r6, #20]
   14730:	vldr	s14, [r3, #8]
   14734:	vldr	s11, [r6, #12]
   14738:	vmul.f32	s13, s14, s15
   1473c:	vcvt.f32.u32	s12, s11
   14740:	vcmpe.f32	s12, s13
   14744:	vmrs	APSR_nzcv, fpscr
   14748:	ble	146d0 <close_stdout@@Base+0x115c>
   1474c:	ldrb	r2, [r3, #16]
   14750:	cmp	r2, #0
   14754:	vldreq	s13, [r3, #12]
   14758:	vldrne	s14, [r3, #12]
   1475c:	vmuleq.f32	s15, s15, s13
   14760:	vmul.f32	s15, s14, s15
   14764:	vldr	s14, [pc, #128]	; 147ec <close_stdout@@Base+0x1278>
   14768:	vcmpe.f32	s15, s14
   1476c:	vmrs	APSR_nzcv, fpscr
   14770:	bge	147e0 <close_stdout@@Base+0x126c>
   14774:	vcvt.u32.f32	s15, s15
   14778:	mov	r0, r6
   1477c:	vmov	r1, s15
   14780:	bl	144a4 <close_stdout@@Base+0xf30>
   14784:	cmp	r0, #0
   14788:	beq	147e0 <close_stdout@@Base+0x126c>
   1478c:	mov	r2, sp
   14790:	mov	r0, r6
   14794:	mov	r1, r8
   14798:	mov	r3, #0
   1479c:	bl	139e4 <close_stdout@@Base+0x470>
   147a0:	cmp	r0, #0
   147a4:	beq	146d0 <close_stdout@@Base+0x115c>
   147a8:	bl	11c60 <abort@plt>
   147ac:	str	r8, [r3]
   147b0:	mov	r0, #1
   147b4:	ldr	r2, [r6, #16]
   147b8:	ldr	r3, [r6, #12]
   147bc:	add	r2, r2, r0
   147c0:	str	r2, [r6, #16]
   147c4:	add	r3, r3, r0
   147c8:	str	r3, [r6, #12]
   147cc:	b	14690 <close_stdout@@Base+0x111c>
   147d0:	mov	r0, #8
   147d4:	bl	11a44 <malloc@plt>
   147d8:	subs	r3, r0, #0
   147dc:	bne	146f4 <close_stdout@@Base+0x1180>
   147e0:	mvn	r0, #0
   147e4:	b	14690 <close_stdout@@Base+0x111c>
   147e8:	bl	1193c <__stack_chk_fail@plt>
   147ec:	svcmi	0x00800000
   147f0:			; <UNDEFINED> instruction: 0x000189b4
   147f4:	andeq	r0, r0, r8, lsl #3
   147f8:	b	1463c <close_stdout@@Base+0x10c8>
   147fc:	ldr	r3, [pc, #100]	; 14868 <close_stdout@@Base+0x12f4>
   14800:	ldr	ip, [pc, #100]	; 1486c <close_stdout@@Base+0x12f8>
   14804:	add	r3, pc, r3
   14808:	push	{r4, r5, lr}
   1480c:	sub	sp, sp, #12
   14810:	ldr	r4, [r3, ip]
   14814:	mov	r5, r1
   14818:	mov	r2, sp
   1481c:	ldr	r3, [r4]
   14820:	str	r3, [sp, #4]
   14824:	bl	1463c <close_stdout@@Base+0x10c8>
   14828:	cmn	r0, #1
   1482c:	beq	1485c <close_stdout@@Base+0x12e8>
   14830:	cmp	r0, #0
   14834:	movne	r0, r5
   14838:	beq	14854 <close_stdout@@Base+0x12e0>
   1483c:	ldr	r2, [sp, #4]
   14840:	ldr	r3, [r4]
   14844:	cmp	r2, r3
   14848:	bne	14864 <close_stdout@@Base+0x12f0>
   1484c:	add	sp, sp, #12
   14850:	pop	{r4, r5, pc}
   14854:	ldr	r0, [sp]
   14858:	b	1483c <close_stdout@@Base+0x12c8>
   1485c:	mov	r0, #0
   14860:	b	1483c <close_stdout@@Base+0x12c8>
   14864:	bl	1193c <__stack_chk_fail@plt>
   14868:	strdeq	r8, [r1], -r4
   1486c:	andeq	r0, r0, r8, lsl #3
   14870:	ldr	ip, [pc, #304]	; 149a8 <close_stdout@@Base+0x1434>
   14874:	mov	r3, #1
   14878:	push	{r4, r5, r6, r7, lr}
   1487c:	add	ip, pc, ip
   14880:	ldr	lr, [pc, #292]	; 149ac <close_stdout@@Base+0x1438>
   14884:	sub	sp, sp, #12
   14888:	mov	r4, r0
   1488c:	mov	r2, sp
   14890:	ldr	r5, [ip, lr]
   14894:	ldr	ip, [r5]
   14898:	str	ip, [sp, #4]
   1489c:	bl	139e4 <close_stdout@@Base+0x470>
   148a0:	subs	r6, r0, #0
   148a4:	beq	148c4 <close_stdout@@Base+0x1350>
   148a8:	ldr	r3, [sp]
   148ac:	ldr	r2, [r4, #16]
   148b0:	sub	r2, r2, #1
   148b4:	str	r2, [r4, #16]
   148b8:	ldr	r3, [r3]
   148bc:	cmp	r3, #0
   148c0:	beq	148e0 <close_stdout@@Base+0x136c>
   148c4:	ldr	r2, [sp, #4]
   148c8:	mov	r0, r6
   148cc:	ldr	r3, [r5]
   148d0:	cmp	r2, r3
   148d4:	bne	149a4 <close_stdout@@Base+0x1430>
   148d8:	add	sp, sp, #12
   148dc:	pop	{r4, r5, r6, r7, pc}
   148e0:	vldr	s12, [r4, #8]
   148e4:	vcvt.f32.u32	s14, s12
   148e8:	ldr	r3, [r4, #12]
   148ec:	ldr	r2, [r4, #20]
   148f0:	sub	r3, r3, #1
   148f4:	str	r3, [r4, #12]
   148f8:	vldr	s15, [r2]
   148fc:	vmov	s13, r3
   14900:	vmul.f32	s15, s14, s15
   14904:	vcvt.f32.u32	s14, s13
   14908:	vcmpe.f32	s14, s15
   1490c:	vmrs	APSR_nzcv, fpscr
   14910:	bpl	148c4 <close_stdout@@Base+0x1350>
   14914:	add	r0, r4, #20
   14918:	bl	13ae0 <close_stdout@@Base+0x56c>
   1491c:	vldr	s12, [r4, #8]
   14920:	vcvt.f32.u32	s15, s12
   14924:	ldr	r3, [r4, #20]
   14928:	vldr	s14, [r3]
   1492c:	vldr	s12, [r4, #12]
   14930:	vmul.f32	s14, s15, s14
   14934:	vcvt.f32.u32	s13, s12
   14938:	vcmpe.f32	s13, s14
   1493c:	vmrs	APSR_nzcv, fpscr
   14940:	bpl	148c4 <close_stdout@@Base+0x1350>
   14944:	vldr	s14, [r3, #4]
   14948:	vmul.f32	s15, s15, s14
   1494c:	ldrb	r2, [r3, #16]
   14950:	mov	r0, r4
   14954:	cmp	r2, #0
   14958:	vldreq	s14, [r3, #8]
   1495c:	vmuleq.f32	s15, s15, s14
   14960:	vcvt.u32.f32	s15, s15
   14964:	vmov	r1, s15
   14968:	bl	144a4 <close_stdout@@Base+0xf30>
   1496c:	cmp	r0, #0
   14970:	bne	148c4 <close_stdout@@Base+0x1350>
   14974:	ldr	r0, [r4, #36]	; 0x24
   14978:	cmp	r0, #0
   1497c:	bne	14988 <close_stdout@@Base+0x1414>
   14980:	b	14998 <close_stdout@@Base+0x1424>
   14984:	mov	r0, r7
   14988:	ldr	r7, [r0, #4]
   1498c:	bl	118dc <free@plt>
   14990:	cmp	r7, #0
   14994:	bne	14984 <close_stdout@@Base+0x1410>
   14998:	mov	r3, #0
   1499c:	str	r3, [r4, #36]	; 0x24
   149a0:	b	148c4 <close_stdout@@Base+0x1350>
   149a4:	bl	1193c <__stack_chk_fail@plt>
   149a8:	andeq	r8, r1, ip, ror r7
   149ac:	andeq	r0, r0, r8, lsl #3

000149b0 <triple_hash@@Base>:
   149b0:	push	{r3, r4, r5, r6, r7, lr}
   149b4:	mov	r4, r0
   149b8:	ldr	r0, [r0]
   149bc:	mov	r6, r1
   149c0:	bl	19ff0 <fts_children@@Base+0x52c>
   149c4:	ldrd	r4, [r4, #8]
   149c8:	mov	r2, r6
   149cc:	mov	r3, #0
   149d0:	mov	r1, r5
   149d4:	mov	r7, r5
   149d8:	eor	r6, r4, r0
   149dc:	mov	r0, r6
   149e0:	bl	1aae8 <fts_children@@Base+0x1024>
   149e4:	mov	r0, r2
   149e8:	pop	{r3, r4, r5, r6, r7, pc}
   149ec:	push	{r3, lr}
   149f0:	mov	r2, r1
   149f4:	mov	r3, #0
   149f8:	ldrd	r0, [r0, #8]
   149fc:	bl	1aae8 <fts_children@@Base+0x1024>
   14a00:	mov	r0, r2
   14a04:	pop	{r3, pc}
   14a08:	push	{r4, r5}
   14a0c:	ldrd	r4, [r0, #8]
   14a10:	ldrd	r2, [r1, #8]
   14a14:	cmp	r5, r3
   14a18:	cmpeq	r4, r2
   14a1c:	beq	14a2c <triple_hash@@Base+0x7c>
   14a20:	mov	r0, #0
   14a24:	pop	{r4, r5}
   14a28:	bx	lr
   14a2c:	ldrd	r4, [r0, #16]
   14a30:	ldrd	r2, [r1, #16]
   14a34:	cmp	r5, r3
   14a38:	cmpeq	r4, r2
   14a3c:	bne	14a20 <triple_hash@@Base+0x70>
   14a40:	ldr	r0, [r0]
   14a44:	ldr	r1, [r1]
   14a48:	pop	{r4, r5}
   14a4c:	b	16864 <triple_free@@Base+0x1dc8>

00014a50 <triple_compare_ino_str@@Base>:
   14a50:	push	{r3, r4, r5, lr}
   14a54:	ldrd	r4, [r0, #8]
   14a58:	ldrd	r2, [r1, #8]
   14a5c:	cmp	r5, r3
   14a60:	cmpeq	r4, r2
   14a64:	beq	14a70 <triple_compare_ino_str@@Base+0x20>
   14a68:	mov	r0, #0
   14a6c:	pop	{r3, r4, r5, pc}
   14a70:	ldrd	r4, [r0, #16]
   14a74:	ldrd	r2, [r1, #16]
   14a78:	cmp	r5, r3
   14a7c:	cmpeq	r4, r2
   14a80:	bne	14a68 <triple_compare_ino_str@@Base+0x18>
   14a84:	ldr	r0, [r0]
   14a88:	ldr	r1, [r1]
   14a8c:	bl	118a0 <strcmp@plt>
   14a90:	rsbs	r0, r0, #1
   14a94:	movcc	r0, #0
   14a98:	pop	{r3, r4, r5, pc}

00014a9c <triple_free@@Base>:
   14a9c:	push	{r4, lr}
   14aa0:	mov	r4, r0
   14aa4:	ldr	r0, [r0]
   14aa8:	bl	118dc <free@plt>
   14aac:	mov	r0, r4
   14ab0:	pop	{r4, lr}
   14ab4:	b	118dc <free@plt>
   14ab8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14abc:	mov	r5, r0
   14ac0:	ldrb	r2, [r0]
   14ac4:	sub	r3, r2, #48	; 0x30
   14ac8:	cmp	r3, #7
   14acc:	bls	14b6c <triple_free@@Base+0xd0>
   14ad0:	cmp	r2, #0
   14ad4:	moveq	r0, #16
   14ad8:	beq	14b1c <triple_free@@Base+0x80>
   14adc:	mov	lr, r5
   14ae0:	mov	r1, #1
   14ae4:	cmp	r2, #43	; 0x2b
   14ae8:	moveq	r3, #1
   14aec:	beq	14b00 <triple_free@@Base+0x64>
   14af0:	and	r2, r2, #239	; 0xef
   14af4:	subs	r2, r2, #45	; 0x2d
   14af8:	rsbs	r3, r2, #0
   14afc:	adcs	r3, r3, r2
   14b00:	ldrb	r2, [lr, #1]!
   14b04:	add	r1, r1, r3
   14b08:	cmp	r2, #0
   14b0c:	bne	14ae4 <triple_free@@Base+0x48>
   14b10:	cmn	r1, #-268435455	; 0xf0000001
   14b14:	bhi	14e40 <triple_free@@Base+0x3a4>
   14b18:	lsl	r0, r1, #4
   14b1c:	bl	16f74 <triple_free@@Base+0x24d8>
   14b20:	mov	r7, #0
   14b24:	movw	r9, #4095	; 0xfff
   14b28:	mov	r8, #1
   14b2c:	mov	r6, #0
   14b30:	mov	r3, r5
   14b34:	add	r5, r5, #1
   14b38:	ldrb	sl, [r3]
   14b3c:	cmp	sl, #97	; 0x61
   14b40:	beq	14d70 <triple_free@@Base+0x2d4>
   14b44:	bls	14ba4 <triple_free@@Base+0x108>
   14b48:	cmp	sl, #111	; 0x6f
   14b4c:	beq	14d8c <triple_free@@Base+0x2f0>
   14b50:	cmp	sl, #117	; 0x75
   14b54:	beq	14d84 <triple_free@@Base+0x2e8>
   14b58:	cmp	sl, #103	; 0x67
   14b5c:	beq	14d78 <triple_free@@Base+0x2dc>
   14b60:	bl	118dc <free@plt>
   14b64:	mov	r0, #0
   14b68:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b6c:	mov	r1, r0
   14b70:	mov	r4, #0
   14b74:	b	14b8c <triple_free@@Base+0xf0>
   14b78:	ldrb	r2, [r1, #1]
   14b7c:	sub	r1, r2, #48	; 0x30
   14b80:	cmp	r1, #7
   14b84:	bhi	14d98 <triple_free@@Base+0x2fc>
   14b88:	mov	r1, ip
   14b8c:	add	r4, r2, r4, lsl #3
   14b90:	add	ip, r1, #1
   14b94:	sub	r4, r4, #48	; 0x30
   14b98:	cmp	r4, #4096	; 0x1000
   14b9c:	bcc	14b78 <triple_free@@Base+0xdc>
   14ba0:	b	14b64 <triple_free@@Base+0xc8>
   14ba4:	cmp	sl, #45	; 0x2d
   14ba8:	beq	14bbc <triple_free@@Base+0x120>
   14bac:	cmp	sl, #61	; 0x3d
   14bb0:	beq	14bbc <triple_free@@Base+0x120>
   14bb4:	cmp	sl, #43	; 0x2b
   14bb8:	bne	14b60 <triple_free@@Base+0xc4>
   14bbc:	add	r5, r0, r7, lsl #4
   14bc0:	add	r7, r7, #1
   14bc4:	add	r4, r5, #8
   14bc8:	b	14c28 <triple_free@@Base+0x18c>
   14bcc:	cmp	ip, #111	; 0x6f
   14bd0:	beq	14d60 <triple_free@@Base+0x2c4>
   14bd4:	cmp	ip, #117	; 0x75
   14bd8:	addeq	r3, r3, #2
   14bdc:	moveq	r2, #3
   14be0:	moveq	fp, #448	; 0x1c0
   14be4:	bne	14c7c <triple_free@@Base+0x1e0>
   14be8:	cmp	r6, #0
   14bec:	strb	sl, [r4, #-8]
   14bf0:	strb	r2, [r4, #-7]
   14bf4:	str	r6, [r4, #-4]
   14bf8:	str	fp, [r5, #8]
   14bfc:	andne	fp, fp, r6
   14c00:	str	fp, [r5, #12]
   14c04:	ldrb	sl, [r3]
   14c08:	cmp	sl, #43	; 0x2b
   14c0c:	beq	14c1c <triple_free@@Base+0x180>
   14c10:	and	r2, sl, #239	; 0xef
   14c14:	cmp	r2, #45	; 0x2d
   14c18:	bne	14e20 <triple_free@@Base+0x384>
   14c1c:	add	r5, r5, #16
   14c20:	add	r4, r4, #16
   14c24:	add	r7, r7, #1
   14c28:	ldrb	ip, [r3, #1]
   14c2c:	add	r1, r3, #1
   14c30:	cmp	ip, #103	; 0x67
   14c34:	beq	14d50 <triple_free@@Base+0x2b4>
   14c38:	bhi	14bcc <triple_free@@Base+0x130>
   14c3c:	sub	r3, ip, #48	; 0x30
   14c40:	cmp	r3, #7
   14c44:	movls	r2, #0
   14c48:	bls	14c64 <triple_free@@Base+0x1c8>
   14c4c:	b	14c7c <triple_free@@Base+0x1e0>
   14c50:	ldrb	ip, [r1, #1]
   14c54:	sub	r1, ip, #48	; 0x30
   14c58:	cmp	r1, #7
   14c5c:	bhi	14df0 <triple_free@@Base+0x354>
   14c60:	mov	r1, r3
   14c64:	add	r2, ip, r2, lsl #3
   14c68:	add	r3, r1, #1
   14c6c:	sub	r2, r2, #48	; 0x30
   14c70:	cmp	r2, #4096	; 0x1000
   14c74:	bcc	14c50 <triple_free@@Base+0x1b4>
   14c78:	b	14b64 <triple_free@@Base+0xc8>
   14c7c:	mov	r2, #1
   14c80:	mov	fp, #0
   14c84:	sub	ip, ip, #88	; 0x58
   14c88:	mov	r3, r1
   14c8c:	cmp	ip, #32
   14c90:	addls	pc, pc, ip, lsl #2
   14c94:	b	14be8 <triple_free@@Base+0x14c>
   14c98:	b	14d1c <triple_free@@Base+0x280>
   14c9c:	b	14be8 <triple_free@@Base+0x14c>
   14ca0:	b	14be8 <triple_free@@Base+0x14c>
   14ca4:	b	14be8 <triple_free@@Base+0x14c>
   14ca8:	b	14be8 <triple_free@@Base+0x14c>
   14cac:	b	14be8 <triple_free@@Base+0x14c>
   14cb0:	b	14be8 <triple_free@@Base+0x14c>
   14cb4:	b	14be8 <triple_free@@Base+0x14c>
   14cb8:	b	14be8 <triple_free@@Base+0x14c>
   14cbc:	b	14be8 <triple_free@@Base+0x14c>
   14cc0:	b	14be8 <triple_free@@Base+0x14c>
   14cc4:	b	14be8 <triple_free@@Base+0x14c>
   14cc8:	b	14be8 <triple_free@@Base+0x14c>
   14ccc:	b	14be8 <triple_free@@Base+0x14c>
   14cd0:	b	14be8 <triple_free@@Base+0x14c>
   14cd4:	b	14be8 <triple_free@@Base+0x14c>
   14cd8:	b	14be8 <triple_free@@Base+0x14c>
   14cdc:	b	14be8 <triple_free@@Base+0x14c>
   14ce0:	b	14be8 <triple_free@@Base+0x14c>
   14ce4:	b	14be8 <triple_free@@Base+0x14c>
   14ce8:	b	14be8 <triple_free@@Base+0x14c>
   14cec:	b	14be8 <triple_free@@Base+0x14c>
   14cf0:	b	14be8 <triple_free@@Base+0x14c>
   14cf4:	b	14be8 <triple_free@@Base+0x14c>
   14cf8:	b	14be8 <triple_free@@Base+0x14c>
   14cfc:	b	14be8 <triple_free@@Base+0x14c>
   14d00:	b	14d48 <triple_free@@Base+0x2ac>
   14d04:	b	14d40 <triple_free@@Base+0x2a4>
   14d08:	b	14d38 <triple_free@@Base+0x29c>
   14d0c:	b	14be8 <triple_free@@Base+0x14c>
   14d10:	b	14be8 <triple_free@@Base+0x14c>
   14d14:	b	14d30 <triple_free@@Base+0x294>
   14d18:	b	14d28 <triple_free@@Base+0x28c>
   14d1c:	mov	r2, #2
   14d20:	ldrb	ip, [r1, #1]!
   14d24:	b	14c84 <triple_free@@Base+0x1e8>
   14d28:	orr	fp, fp, #73	; 0x49
   14d2c:	b	14d20 <triple_free@@Base+0x284>
   14d30:	orr	fp, fp, #146	; 0x92
   14d34:	b	14d20 <triple_free@@Base+0x284>
   14d38:	orr	fp, fp, #512	; 0x200
   14d3c:	b	14d20 <triple_free@@Base+0x284>
   14d40:	orr	fp, fp, #3072	; 0xc00
   14d44:	b	14d20 <triple_free@@Base+0x284>
   14d48:	orr	fp, fp, #292	; 0x124
   14d4c:	b	14d20 <triple_free@@Base+0x284>
   14d50:	add	r3, r3, #2
   14d54:	mov	r2, #3
   14d58:	mov	fp, #56	; 0x38
   14d5c:	b	14be8 <triple_free@@Base+0x14c>
   14d60:	add	r3, r3, #2
   14d64:	mov	r2, #3
   14d68:	mov	fp, #7
   14d6c:	b	14be8 <triple_free@@Base+0x14c>
   14d70:	movw	r6, #4095	; 0xfff
   14d74:	b	14b30 <triple_free@@Base+0x94>
   14d78:	orr	r6, r6, #1072	; 0x430
   14d7c:	orr	r6, r6, #8
   14d80:	b	14b30 <triple_free@@Base+0x94>
   14d84:	orr	r6, r6, #2496	; 0x9c0
   14d88:	b	14b30 <triple_free@@Base+0x94>
   14d8c:	orr	r6, r6, #516	; 0x204
   14d90:	orr	r6, r6, #3
   14d94:	b	14b30 <triple_free@@Base+0x94>
   14d98:	cmp	r2, #0
   14d9c:	bne	14b64 <triple_free@@Base+0xc8>
   14da0:	rsb	ip, r5, ip
   14da4:	mov	r0, #32
   14da8:	cmp	ip, #4
   14dac:	andle	r5, r4, #3072	; 0xc00
   14db0:	movwgt	r5, #4095	; 0xfff
   14db4:	mvnle	r5, r5, lsr #10
   14db8:	mvnle	r5, r5, lsl #10
   14dbc:	bl	16f74 <triple_free@@Base+0x24d8>
   14dc0:	mov	r1, #61	; 0x3d
   14dc4:	mov	r2, #1
   14dc8:	mov	r3, r0
   14dcc:	strb	r1, [r0]
   14dd0:	strb	r2, [r0, #1]
   14dd4:	movw	r1, #4095	; 0xfff
   14dd8:	str	r4, [r0, #8]
   14ddc:	mov	r2, #0
   14de0:	str	r5, [r0, #12]
   14de4:	str	r1, [r0, #4]
   14de8:	strb	r2, [r3, #17]
   14dec:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14df0:	cmp	r6, #0
   14df4:	bne	14b64 <triple_free@@Base+0xc8>
   14df8:	cmp	ip, #44	; 0x2c
   14dfc:	cmpne	ip, #0
   14e00:	bne	14b64 <triple_free@@Base+0xc8>
   14e04:	movw	r6, #4095	; 0xfff
   14e08:	strb	sl, [r4, #-8]
   14e0c:	strb	r8, [r4, #-7]
   14e10:	mov	fp, r6
   14e14:	str	r9, [r4, #-4]
   14e18:	str	r2, [r5, #8]
   14e1c:	b	14c00 <triple_free@@Base+0x164>
   14e20:	cmp	sl, #44	; 0x2c
   14e24:	addeq	r5, r3, #1
   14e28:	beq	14b2c <triple_free@@Base+0x90>
   14e2c:	cmp	sl, #0
   14e30:	bne	14b60 <triple_free@@Base+0xc4>
   14e34:	add	r7, r0, r7, lsl #4
   14e38:	strb	sl, [r7, #1]
   14e3c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e40:	bl	17188 <triple_free@@Base+0x26ec>
   14e44:	ldr	r3, [pc, #132]	; 14ed0 <triple_free@@Base+0x434>
   14e48:	mov	r1, r0
   14e4c:	ldr	ip, [pc, #128]	; 14ed4 <triple_free@@Base+0x438>
   14e50:	mov	r0, #3
   14e54:	add	r3, pc, r3
   14e58:	push	{r4, r5, r6, lr}
   14e5c:	sub	sp, sp, #112	; 0x70
   14e60:	ldr	r4, [r3, ip]
   14e64:	mov	r2, sp
   14e68:	ldr	r3, [r4]
   14e6c:	str	r3, [sp, #108]	; 0x6c
   14e70:	bl	11c3c <__xstat64@plt>
   14e74:	subs	r5, r0, #0
   14e78:	movne	r0, #0
   14e7c:	bne	14eb4 <triple_free@@Base+0x418>
   14e80:	mov	r0, #32
   14e84:	ldr	r6, [sp, #16]
   14e88:	bl	16f74 <triple_free@@Base+0x24d8>
   14e8c:	mov	r2, #61	; 0x3d
   14e90:	mov	r1, #1
   14e94:	mov	r3, r0
   14e98:	strb	r2, [r0]
   14e9c:	strb	r5, [r0, #17]
   14ea0:	movw	r2, #4095	; 0xfff
   14ea4:	str	r6, [r0, #8]
   14ea8:	strb	r1, [r0, #1]
   14eac:	str	r2, [r3, #4]
   14eb0:	str	r2, [r3, #12]
   14eb4:	ldr	r2, [sp, #108]	; 0x6c
   14eb8:	ldr	r3, [r4]
   14ebc:	cmp	r2, r3
   14ec0:	bne	14ecc <triple_free@@Base+0x430>
   14ec4:	add	sp, sp, #112	; 0x70
   14ec8:	pop	{r4, r5, r6, pc}
   14ecc:	bl	1193c <__stack_chk_fail@plt>
   14ed0:	andeq	r8, r1, r4, lsr #3
   14ed4:	andeq	r0, r0, r8, lsl #3
   14ed8:	push	{r4, r5, r6, r7, r8, r9}
   14edc:	ubfx	r0, r0, #0, #12
   14ee0:	ldrb	ip, [r3, #1]
   14ee4:	ldr	r8, [sp, #24]
   14ee8:	cmp	ip, #0
   14eec:	beq	15000 <triple_free@@Base+0x564>
   14ef0:	add	r3, r3, #16
   14ef4:	mvn	r2, r2
   14ef8:	mov	r7, #0
   14efc:	b	14f80 <triple_free@@Base+0x4e4>
   14f00:	cmp	ip, #3
   14f04:	bne	14f3c <triple_free@@Base+0x4a0>
   14f08:	and	r5, r5, r0
   14f0c:	tst	r5, #292	; 0x124
   14f10:	moveq	ip, #0
   14f14:	movne	ip, #292	; 0x124
   14f18:	tst	r5, #146	; 0x92
   14f1c:	moveq	r9, #0
   14f20:	movne	r9, #146	; 0x92
   14f24:	tst	r5, #73	; 0x49
   14f28:	orr	ip, r9, ip
   14f2c:	moveq	r9, #0
   14f30:	movne	r9, #73	; 0x49
   14f34:	orr	ip, ip, r9
   14f38:	orr	r5, ip, r5
   14f3c:	cmp	r4, #0
   14f40:	ldrb	ip, [r3, #-16]
   14f44:	bic	r5, r5, r6
   14f48:	movne	r9, r4
   14f4c:	moveq	r9, r2
   14f50:	cmp	ip, #45	; 0x2d
   14f54:	and	r5, r5, r9
   14f58:	beq	14ff4 <triple_free@@Base+0x558>
   14f5c:	cmp	ip, #61	; 0x3d
   14f60:	beq	14fb4 <triple_free@@Base+0x518>
   14f64:	cmp	ip, #43	; 0x2b
   14f68:	orreq	r7, r7, r5
   14f6c:	orreq	r0, r0, r5
   14f70:	add	r3, r3, #16
   14f74:	ldrb	ip, [r3, #-15]
   14f78:	cmp	ip, #0
   14f7c:	beq	14fe4 <triple_free@@Base+0x548>
   14f80:	cmp	r1, #0
   14f84:	ldr	r6, [r3, #-4]
   14f88:	ldr	r4, [r3, #-12]
   14f8c:	movne	r5, #3072	; 0xc00
   14f90:	moveq	r5, #0
   14f94:	cmp	ip, #2
   14f98:	bic	r6, r5, r6
   14f9c:	ldr	r5, [r3, #-8]
   14fa0:	bne	14f00 <triple_free@@Base+0x464>
   14fa4:	and	ip, r0, #73	; 0x49
   14fa8:	orrs	ip, ip, r1
   14fac:	orrne	r5, r5, #73	; 0x49
   14fb0:	b	14f3c <triple_free@@Base+0x4a0>
   14fb4:	add	r3, r3, #16
   14fb8:	cmp	r4, #0
   14fbc:	ldrb	ip, [r3, #-15]
   14fc0:	mvnne	r4, r4
   14fc4:	orr	r6, r4, r6
   14fc8:	cmp	ip, #0
   14fcc:	and	r0, r6, r0
   14fd0:	mvn	r6, r6
   14fd4:	ubfx	r6, r6, #0, #12
   14fd8:	orr	r7, r7, r6
   14fdc:	orr	r0, r0, r5
   14fe0:	bne	14f80 <triple_free@@Base+0x4e4>
   14fe4:	cmp	r8, #0
   14fe8:	strne	r7, [r8]
   14fec:	pop	{r4, r5, r6, r7, r8, r9}
   14ff0:	bx	lr
   14ff4:	orr	r7, r7, r5
   14ff8:	bic	r0, r0, r5
   14ffc:	b	14f70 <triple_free@@Base+0x4d4>
   15000:	mov	r7, ip
   15004:	b	14fe4 <triple_free@@Base+0x548>
   15008:	push	{r3, r4, r5, r6, r7, lr}
   1500c:	subs	r4, r0, #0
   15010:	ldr	r5, [pc, #172]	; 150c4 <triple_free@@Base+0x628>
   15014:	add	r5, pc, r5
   15018:	beq	150a0 <triple_free@@Base+0x604>
   1501c:	mov	r1, #47	; 0x2f
   15020:	bl	11b94 <strrchr@plt>
   15024:	subs	r6, r0, #0
   15028:	beq	15084 <triple_free@@Base+0x5e8>
   1502c:	add	r7, r6, #1
   15030:	rsb	r3, r4, r7
   15034:	cmp	r3, #6
   15038:	ble	15084 <triple_free@@Base+0x5e8>
   1503c:	ldr	r1, [pc, #132]	; 150c8 <triple_free@@Base+0x62c>
   15040:	sub	r0, r6, #6
   15044:	mov	r2, #7
   15048:	add	r1, pc, r1
   1504c:	bl	11c54 <strncmp@plt>
   15050:	cmp	r0, #0
   15054:	bne	15084 <triple_free@@Base+0x5e8>
   15058:	ldr	r1, [pc, #108]	; 150cc <triple_free@@Base+0x630>
   1505c:	mov	r0, r7
   15060:	mov	r2, #3
   15064:	add	r1, pc, r1
   15068:	bl	11c54 <strncmp@plt>
   1506c:	cmp	r0, #0
   15070:	movne	r4, r7
   15074:	ldreq	r3, [pc, #84]	; 150d0 <triple_free@@Base+0x634>
   15078:	addeq	r4, r6, #4
   1507c:	ldreq	r3, [r5, r3]
   15080:	streq	r4, [r3]
   15084:	ldr	r2, [pc, #72]	; 150d4 <triple_free@@Base+0x638>
   15088:	ldr	r3, [pc, #72]	; 150d8 <triple_free@@Base+0x63c>
   1508c:	ldr	r2, [r5, r2]
   15090:	str	r4, [r2]
   15094:	ldr	r3, [r5, r3]
   15098:	str	r4, [r3]
   1509c:	pop	{r3, r4, r5, r6, r7, pc}
   150a0:	ldr	r3, [pc, #52]	; 150dc <triple_free@@Base+0x640>
   150a4:	mov	r1, #1
   150a8:	ldr	r0, [pc, #48]	; 150e0 <triple_free@@Base+0x644>
   150ac:	mov	r2, #55	; 0x37
   150b0:	ldr	r3, [r5, r3]
   150b4:	add	r0, pc, r0
   150b8:	ldr	r3, [r3]
   150bc:	bl	119b4 <fwrite@plt>
   150c0:	bl	11c60 <abort@plt>
   150c4:	andeq	r7, r1, r4, ror #31
   150c8:	muleq	r0, r0, sp
   150cc:	andeq	r6, r0, ip, ror sp
   150d0:	andeq	r0, r0, r4, asr #3
   150d4:			; <UNDEFINED> instruction: 0x000001bc
   150d8:			; <UNDEFINED> instruction: 0x000001b8
   150dc:	muleq	r0, r8, r1
   150e0:	andeq	r6, r0, ip, ror #25
   150e4:	push	{r3, lr}
   150e8:	mov	r3, r0
   150ec:	mov	r2, #0
   150f0:	cmp	r1, #8
   150f4:	str	r2, [r3], #4
   150f8:	add	r3, r3, #4
   150fc:	str	r2, [r0, #4]
   15100:	str	r2, [r3], #4
   15104:	str	r2, [r3], #4
   15108:	str	r2, [r3], #4
   1510c:	str	r2, [r3], #4
   15110:	str	r2, [r3], #4
   15114:	str	r2, [r3], #4
   15118:	str	r2, [r3], #4
   1511c:	str	r2, [r3], #4
   15120:	str	r2, [r3], #4
   15124:	str	r2, [r3]
   15128:	beq	15134 <triple_free@@Base+0x698>
   1512c:	str	r1, [r0]
   15130:	pop	{r3, pc}
   15134:	bl	11c60 <abort@plt>
   15138:	push	{r4, r5, r6, lr}
   1513c:	mov	r4, r0
   15140:	mov	r6, r1
   15144:	mov	r0, #0
   15148:	mov	r1, r4
   1514c:	mov	r2, #5
   15150:	bl	11930 <dcgettext@plt>
   15154:	cmp	r0, r4
   15158:	mov	r5, r0
   1515c:	beq	15164 <triple_free@@Base+0x6c8>
   15160:	pop	{r4, r5, r6, pc}
   15164:	bl	1a0ec <fts_children@@Base+0x628>
   15168:	ldrb	r3, [r0]
   1516c:	bic	r3, r3, #32
   15170:	cmp	r3, #85	; 0x55
   15174:	bne	151e8 <triple_free@@Base+0x74c>
   15178:	ldrb	r3, [r0, #1]
   1517c:	bic	r3, r3, #32
   15180:	cmp	r3, #84	; 0x54
   15184:	bne	151d4 <triple_free@@Base+0x738>
   15188:	ldrb	r3, [r0, #2]
   1518c:	bic	r3, r3, #32
   15190:	cmp	r3, #70	; 0x46
   15194:	bne	151d4 <triple_free@@Base+0x738>
   15198:	ldrb	r3, [r0, #3]
   1519c:	cmp	r3, #45	; 0x2d
   151a0:	bne	151d4 <triple_free@@Base+0x738>
   151a4:	ldrb	r3, [r0, #4]
   151a8:	cmp	r3, #56	; 0x38
   151ac:	bne	151d4 <triple_free@@Base+0x738>
   151b0:	ldrb	r3, [r0, #5]
   151b4:	cmp	r3, #0
   151b8:	bne	151d4 <triple_free@@Base+0x738>
   151bc:	ldrb	r3, [r5]
   151c0:	cmp	r3, #96	; 0x60
   151c4:	beq	15260 <triple_free@@Base+0x7c4>
   151c8:	ldr	r0, [pc, #180]	; 15284 <triple_free@@Base+0x7e8>
   151cc:	add	r0, pc, r0
   151d0:	pop	{r4, r5, r6, pc}
   151d4:	cmp	r6, #7
   151d8:	beq	1526c <triple_free@@Base+0x7d0>
   151dc:	ldr	r0, [pc, #164]	; 15288 <triple_free@@Base+0x7ec>
   151e0:	add	r0, pc, r0
   151e4:	pop	{r4, r5, r6, pc}
   151e8:	cmp	r3, #71	; 0x47
   151ec:	bne	151d4 <triple_free@@Base+0x738>
   151f0:	ldrb	r3, [r0, #1]
   151f4:	bic	r3, r3, #32
   151f8:	cmp	r3, #66	; 0x42
   151fc:	bne	151d4 <triple_free@@Base+0x738>
   15200:	ldrb	r3, [r0, #2]
   15204:	cmp	r3, #49	; 0x31
   15208:	bne	151d4 <triple_free@@Base+0x738>
   1520c:	ldrb	r3, [r0, #3]
   15210:	cmp	r3, #56	; 0x38
   15214:	bne	151d4 <triple_free@@Base+0x738>
   15218:	ldrb	r3, [r0, #4]
   1521c:	cmp	r3, #48	; 0x30
   15220:	bne	151d4 <triple_free@@Base+0x738>
   15224:	ldrb	r3, [r0, #5]
   15228:	cmp	r3, #51	; 0x33
   1522c:	bne	151d4 <triple_free@@Base+0x738>
   15230:	ldrb	r3, [r0, #6]
   15234:	cmp	r3, #48	; 0x30
   15238:	bne	151d4 <triple_free@@Base+0x738>
   1523c:	ldrb	r3, [r0, #7]
   15240:	cmp	r3, #0
   15244:	bne	151d4 <triple_free@@Base+0x738>
   15248:	ldrb	r3, [r5]
   1524c:	cmp	r3, #96	; 0x60
   15250:	beq	15278 <triple_free@@Base+0x7dc>
   15254:	ldr	r0, [pc, #48]	; 1528c <triple_free@@Base+0x7f0>
   15258:	add	r0, pc, r0
   1525c:	pop	{r4, r5, r6, pc}
   15260:	ldr	r0, [pc, #40]	; 15290 <triple_free@@Base+0x7f4>
   15264:	add	r0, pc, r0
   15268:	pop	{r4, r5, r6, pc}
   1526c:	ldr	r0, [pc, #32]	; 15294 <triple_free@@Base+0x7f8>
   15270:	add	r0, pc, r0
   15274:	pop	{r4, r5, r6, pc}
   15278:	ldr	r0, [pc, #24]	; 15298 <triple_free@@Base+0x7fc>
   1527c:	add	r0, pc, r0
   15280:	pop	{r4, r5, r6, pc}
   15284:	andeq	r6, r0, r8, lsr ip
   15288:	andeq	r6, r0, ip, lsr #24
   1528c:			; <UNDEFINED> instruction: 0x00006bb0
   15290:			; <UNDEFINED> instruction: 0x00006bb4
   15294:	andeq	r6, r0, r0, lsr #23
   15298:	muleq	r0, r8, fp
   1529c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152a0:	sub	sp, sp, #124	; 0x7c
   152a4:	ldr	ip, [pc, #3304]	; 15f94 <triple_free@@Base+0x14f8>
   152a8:	mov	sl, r1
   152ac:	str	r0, [sp, #40]	; 0x28
   152b0:	mov	r8, r3
   152b4:	ldr	r0, [pc, #3292]	; 15f98 <triple_free@@Base+0x14fc>
   152b8:	add	ip, pc, ip
   152bc:	str	r2, [sp, #32]
   152c0:	ldr	r1, [sp, #164]	; 0xa4
   152c4:	mov	r3, ip
   152c8:	ldr	r0, [ip, r0]
   152cc:	ldr	r2, [sp, #172]	; 0xac
   152d0:	ubfx	r1, r1, #1, #1
   152d4:	str	r1, [sp, #36]	; 0x24
   152d8:	str	r0, [sp, #56]	; 0x38
   152dc:	ldr	r0, [sp, #168]	; 0xa8
   152e0:	ldr	r1, [sp, #176]	; 0xb0
   152e4:	str	r2, [sp, #72]	; 0x48
   152e8:	str	r0, [sp, #48]	; 0x30
   152ec:	ldr	r0, [sp, #56]	; 0x38
   152f0:	str	r1, [sp, #68]	; 0x44
   152f4:	ldr	r3, [r0]
   152f8:	str	r3, [sp, #116]	; 0x74
   152fc:	bl	119cc <__ctype_get_mb_cur_max@plt>
   15300:	ldr	r2, [sp, #160]	; 0xa0
   15304:	str	r0, [sp, #64]	; 0x40
   15308:	cmp	r2, #8
   1530c:	addls	pc, pc, r2, lsl #2
   15310:	b	15e70 <triple_free@@Base+0x13d4>
   15314:	b	15338 <triple_free@@Base+0x89c>
   15318:	b	15b88 <triple_free@@Base+0x10ec>
   1531c:	b	15bb8 <triple_free@@Base+0x111c>
   15320:	b	15a68 <triple_free@@Base+0xfcc>
   15324:	b	15aa8 <triple_free@@Base+0x100c>
   15328:	b	15ad4 <triple_free@@Base+0x1038>
   1532c:	b	15af4 <triple_free@@Base+0x1058>
   15330:	b	15af4 <triple_free@@Base+0x1058>
   15334:	b	15af4 <triple_free@@Base+0x1058>
   15338:	mov	r2, #0
   1533c:	str	r2, [sp, #36]	; 0x24
   15340:	mov	r9, r2
   15344:	str	r2, [sp, #24]
   15348:	str	r2, [sp, #28]
   1534c:	str	r2, [sp, #52]	; 0x34
   15350:	ldr	r0, [sp, #36]	; 0x24
   15354:	mov	fp, #0
   15358:	ldr	r1, [sp, #24]
   1535c:	eor	r2, r0, #1
   15360:	eor	r3, r1, #1
   15364:	and	r3, r2, r3
   15368:	and	r2, r1, r0
   1536c:	str	r3, [sp, #44]	; 0x2c
   15370:	str	r2, [sp, #76]	; 0x4c
   15374:	cmn	r8, #1
   15378:	beq	156f8 <triple_free@@Base+0xc5c>
   1537c:	subs	r3, fp, r8
   15380:	movne	r3, #1
   15384:	cmp	r3, #0
   15388:	beq	15710 <triple_free@@Base+0xc74>
   1538c:	ldr	r3, [sp, #28]
   15390:	ldr	r0, [sp, #24]
   15394:	adds	r7, r3, #0
   15398:	movne	r7, #1
   1539c:	ands	r6, r7, r0
   153a0:	bne	15bfc <triple_free@@Base+0x1160>
   153a4:	ldr	r1, [sp, #32]
   153a8:	add	r5, r1, fp
   153ac:	ldrb	r4, [r5]
   153b0:	cmp	r4, #126	; 0x7e
   153b4:	addls	pc, pc, r4, lsl #2
   153b8:	b	1597c <triple_free@@Base+0xee0>
   153bc:	b	15888 <triple_free@@Base+0xdec>
   153c0:	b	1597c <triple_free@@Base+0xee0>
   153c4:	b	1597c <triple_free@@Base+0xee0>
   153c8:	b	1597c <triple_free@@Base+0xee0>
   153cc:	b	1597c <triple_free@@Base+0xee0>
   153d0:	b	1597c <triple_free@@Base+0xee0>
   153d4:	b	1597c <triple_free@@Base+0xee0>
   153d8:	b	15870 <triple_free@@Base+0xdd4>
   153dc:	b	15858 <triple_free@@Base+0xdbc>
   153e0:	b	15880 <triple_free@@Base+0xde4>
   153e4:	b	15878 <triple_free@@Base+0xddc>
   153e8:	b	15868 <triple_free@@Base+0xdcc>
   153ec:	b	15860 <triple_free@@Base+0xdc4>
   153f0:	b	15824 <triple_free@@Base+0xd88>
   153f4:	b	1597c <triple_free@@Base+0xee0>
   153f8:	b	1597c <triple_free@@Base+0xee0>
   153fc:	b	1597c <triple_free@@Base+0xee0>
   15400:	b	1597c <triple_free@@Base+0xee0>
   15404:	b	1597c <triple_free@@Base+0xee0>
   15408:	b	1597c <triple_free@@Base+0xee0>
   1540c:	b	1597c <triple_free@@Base+0xee0>
   15410:	b	1597c <triple_free@@Base+0xee0>
   15414:	b	1597c <triple_free@@Base+0xee0>
   15418:	b	1597c <triple_free@@Base+0xee0>
   1541c:	b	1597c <triple_free@@Base+0xee0>
   15420:	b	1597c <triple_free@@Base+0xee0>
   15424:	b	1597c <triple_free@@Base+0xee0>
   15428:	b	1597c <triple_free@@Base+0xee0>
   1542c:	b	1597c <triple_free@@Base+0xee0>
   15430:	b	1597c <triple_free@@Base+0xee0>
   15434:	b	1597c <triple_free@@Base+0xee0>
   15438:	b	1597c <triple_free@@Base+0xee0>
   1543c:	b	157b0 <triple_free@@Base+0xd14>
   15440:	b	157b0 <triple_free@@Base+0xd14>
   15444:	b	157b0 <triple_free@@Base+0xd14>
   15448:	b	157a8 <triple_free@@Base+0xd0c>
   1544c:	b	157b0 <triple_free@@Base+0xd14>
   15450:	b	15684 <triple_free@@Base+0xbe8>
   15454:	b	157b0 <triple_free@@Base+0xd14>
   15458:	b	15924 <triple_free@@Base+0xe88>
   1545c:	b	157b0 <triple_free@@Base+0xd14>
   15460:	b	157b0 <triple_free@@Base+0xd14>
   15464:	b	157b0 <triple_free@@Base+0xd14>
   15468:	b	15684 <triple_free@@Base+0xbe8>
   1546c:	b	15684 <triple_free@@Base+0xbe8>
   15470:	b	15684 <triple_free@@Base+0xbe8>
   15474:	b	15684 <triple_free@@Base+0xbe8>
   15478:	b	15684 <triple_free@@Base+0xbe8>
   1547c:	b	15684 <triple_free@@Base+0xbe8>
   15480:	b	15684 <triple_free@@Base+0xbe8>
   15484:	b	15684 <triple_free@@Base+0xbe8>
   15488:	b	15684 <triple_free@@Base+0xbe8>
   1548c:	b	15684 <triple_free@@Base+0xbe8>
   15490:	b	15684 <triple_free@@Base+0xbe8>
   15494:	b	15684 <triple_free@@Base+0xbe8>
   15498:	b	15684 <triple_free@@Base+0xbe8>
   1549c:	b	15684 <triple_free@@Base+0xbe8>
   154a0:	b	15684 <triple_free@@Base+0xbe8>
   154a4:	b	15684 <triple_free@@Base+0xbe8>
   154a8:	b	157b0 <triple_free@@Base+0xd14>
   154ac:	b	157b0 <triple_free@@Base+0xd14>
   154b0:	b	157b0 <triple_free@@Base+0xd14>
   154b4:	b	157b0 <triple_free@@Base+0xd14>
   154b8:	b	155b8 <triple_free@@Base+0xb1c>
   154bc:	b	1597c <triple_free@@Base+0xee0>
   154c0:	b	15684 <triple_free@@Base+0xbe8>
   154c4:	b	15684 <triple_free@@Base+0xbe8>
   154c8:	b	15684 <triple_free@@Base+0xbe8>
   154cc:	b	15684 <triple_free@@Base+0xbe8>
   154d0:	b	15684 <triple_free@@Base+0xbe8>
   154d4:	b	15684 <triple_free@@Base+0xbe8>
   154d8:	b	15684 <triple_free@@Base+0xbe8>
   154dc:	b	15684 <triple_free@@Base+0xbe8>
   154e0:	b	15684 <triple_free@@Base+0xbe8>
   154e4:	b	15684 <triple_free@@Base+0xbe8>
   154e8:	b	15684 <triple_free@@Base+0xbe8>
   154ec:	b	15684 <triple_free@@Base+0xbe8>
   154f0:	b	15684 <triple_free@@Base+0xbe8>
   154f4:	b	15684 <triple_free@@Base+0xbe8>
   154f8:	b	15684 <triple_free@@Base+0xbe8>
   154fc:	b	15684 <triple_free@@Base+0xbe8>
   15500:	b	15684 <triple_free@@Base+0xbe8>
   15504:	b	15684 <triple_free@@Base+0xbe8>
   15508:	b	15684 <triple_free@@Base+0xbe8>
   1550c:	b	15684 <triple_free@@Base+0xbe8>
   15510:	b	15684 <triple_free@@Base+0xbe8>
   15514:	b	15684 <triple_free@@Base+0xbe8>
   15518:	b	15684 <triple_free@@Base+0xbe8>
   1551c:	b	15684 <triple_free@@Base+0xbe8>
   15520:	b	15684 <triple_free@@Base+0xbe8>
   15524:	b	15684 <triple_free@@Base+0xbe8>
   15528:	b	157b0 <triple_free@@Base+0xd14>
   1552c:	b	15908 <triple_free@@Base+0xe6c>
   15530:	b	15684 <triple_free@@Base+0xbe8>
   15534:	b	157b0 <triple_free@@Base+0xd14>
   15538:	b	15684 <triple_free@@Base+0xbe8>
   1553c:	b	157b0 <triple_free@@Base+0xd14>
   15540:	b	15684 <triple_free@@Base+0xbe8>
   15544:	b	15684 <triple_free@@Base+0xbe8>
   15548:	b	15684 <triple_free@@Base+0xbe8>
   1554c:	b	15684 <triple_free@@Base+0xbe8>
   15550:	b	15684 <triple_free@@Base+0xbe8>
   15554:	b	15684 <triple_free@@Base+0xbe8>
   15558:	b	15684 <triple_free@@Base+0xbe8>
   1555c:	b	15684 <triple_free@@Base+0xbe8>
   15560:	b	15684 <triple_free@@Base+0xbe8>
   15564:	b	15684 <triple_free@@Base+0xbe8>
   15568:	b	15684 <triple_free@@Base+0xbe8>
   1556c:	b	15684 <triple_free@@Base+0xbe8>
   15570:	b	15684 <triple_free@@Base+0xbe8>
   15574:	b	15684 <triple_free@@Base+0xbe8>
   15578:	b	15684 <triple_free@@Base+0xbe8>
   1557c:	b	15684 <triple_free@@Base+0xbe8>
   15580:	b	15684 <triple_free@@Base+0xbe8>
   15584:	b	15684 <triple_free@@Base+0xbe8>
   15588:	b	15684 <triple_free@@Base+0xbe8>
   1558c:	b	15684 <triple_free@@Base+0xbe8>
   15590:	b	15684 <triple_free@@Base+0xbe8>
   15594:	b	15684 <triple_free@@Base+0xbe8>
   15598:	b	15684 <triple_free@@Base+0xbe8>
   1559c:	b	15684 <triple_free@@Base+0xbe8>
   155a0:	b	15684 <triple_free@@Base+0xbe8>
   155a4:	b	15684 <triple_free@@Base+0xbe8>
   155a8:	b	15790 <triple_free@@Base+0xcf4>
   155ac:	b	157b0 <triple_free@@Base+0xd14>
   155b0:	b	15790 <triple_free@@Base+0xcf4>
   155b4:	b	157a8 <triple_free@@Base+0xd0c>
   155b8:	ldr	r3, [sp, #160]	; 0xa0
   155bc:	cmp	r3, #2
   155c0:	beq	15e4c <triple_free@@Base+0x13b0>
   155c4:	cmp	r3, #3
   155c8:	bne	15684 <triple_free@@Base+0xbe8>
   155cc:	ldr	r1, [sp, #164]	; 0xa4
   155d0:	tst	r1, #4
   155d4:	beq	15684 <triple_free@@Base+0xbe8>
   155d8:	add	r3, fp, #2
   155dc:	cmp	r8, r3
   155e0:	bls	15684 <triple_free@@Base+0xbe8>
   155e4:	ldrb	r2, [r5, #1]
   155e8:	mov	r1, #1
   155ec:	cmp	r2, #63	; 0x3f
   155f0:	bne	15684 <triple_free@@Base+0xbe8>
   155f4:	ldr	r0, [sp, #32]
   155f8:	ldrb	ip, [r0, r3]
   155fc:	sub	r0, ip, #33	; 0x21
   15600:	uxtb	r0, r0
   15604:	cmp	r0, #29
   15608:	bhi	15684 <triple_free@@Base+0xbe8>
   1560c:	lsl	r1, r1, r0
   15610:	movw	r0, #20929	; 0x51c1
   15614:	movt	r0, #14336	; 0x3800
   15618:	and	r0, r1, r0
   1561c:	cmp	r0, #0
   15620:	beq	15684 <triple_free@@Base+0xbe8>
   15624:	ldr	r1, [sp, #36]	; 0x24
   15628:	cmp	r1, #0
   1562c:	bne	157cc <triple_free@@Base+0xd30>
   15630:	cmp	r9, sl
   15634:	mov	r4, ip
   15638:	mov	fp, r3
   1563c:	ldrcc	r0, [sp, #40]	; 0x28
   15640:	strbcc	r2, [r0, r9]
   15644:	add	r2, r9, #1
   15648:	cmp	sl, r2
   1564c:	ldrhi	r0, [sp, #40]	; 0x28
   15650:	movhi	r1, #34	; 0x22
   15654:	strbhi	r1, [r0, r2]
   15658:	add	r2, r9, #2
   1565c:	cmp	sl, r2
   15660:	ldrhi	r0, [sp, #40]	; 0x28
   15664:	movhi	r1, #34	; 0x22
   15668:	strbhi	r1, [r0, r2]
   1566c:	add	r2, r9, #3
   15670:	cmp	sl, r2
   15674:	add	r9, r9, #4
   15678:	ldrhi	r0, [sp, #40]	; 0x28
   1567c:	movhi	r1, #63	; 0x3f
   15680:	strbhi	r1, [r0, r2]
   15684:	ldr	r0, [sp, #44]	; 0x2c
   15688:	cmp	r0, #0
   1568c:	bne	156b4 <triple_free@@Base+0xc18>
   15690:	ldr	r1, [sp, #48]	; 0x30
   15694:	cmp	r1, #0
   15698:	beq	156b4 <triple_free@@Base+0xc18>
   1569c:	ubfx	r2, r4, #5, #8
   156a0:	and	r3, r4, #31
   156a4:	ldr	r2, [r1, r2, lsl #2]
   156a8:	lsr	r3, r2, r3
   156ac:	tst	r3, #1
   156b0:	bne	156bc <triple_free@@Base+0xc20>
   156b4:	cmp	r6, #0
   156b8:	beq	156dc <triple_free@@Base+0xc40>
   156bc:	ldr	r2, [sp, #36]	; 0x24
   156c0:	cmp	r2, #0
   156c4:	bne	157cc <triple_free@@Base+0xd30>
   156c8:	cmp	r9, sl
   156cc:	ldrcc	r0, [sp, #40]	; 0x28
   156d0:	movcc	r3, #92	; 0x5c
   156d4:	strbcc	r3, [r0, r9]
   156d8:	add	r9, r9, #1
   156dc:	add	fp, fp, #1
   156e0:	cmp	r9, sl
   156e4:	ldrcc	r1, [sp, #40]	; 0x28
   156e8:	strbcc	r4, [r1, r9]
   156ec:	cmn	r8, #1
   156f0:	add	r9, r9, #1
   156f4:	bne	1537c <triple_free@@Base+0x8e0>
   156f8:	ldr	r2, [sp, #32]
   156fc:	ldrb	r3, [r2, fp]
   15700:	adds	r3, r3, #0
   15704:	movne	r3, #1
   15708:	cmp	r3, #0
   1570c:	bne	1538c <triple_free@@Base+0x8f0>
   15710:	ldr	r3, [sp, #160]	; 0xa0
   15714:	cmp	r9, #0
   15718:	cmpeq	r3, #2
   1571c:	bne	1572c <triple_free@@Base+0xc90>
   15720:	ldr	r0, [sp, #36]	; 0x24
   15724:	cmp	r0, #0
   15728:	bne	157cc <triple_free@@Base+0xd30>
   1572c:	ldr	r1, [sp, #36]	; 0x24
   15730:	ldr	r2, [sp, #52]	; 0x34
   15734:	eor	r3, r1, #1
   15738:	cmp	r2, #0
   1573c:	moveq	r3, #0
   15740:	andne	r3, r3, #1
   15744:	cmp	r3, #0
   15748:	beq	15774 <triple_free@@Base+0xcd8>
   1574c:	ldrb	r3, [r2]
   15750:	cmp	r3, #0
   15754:	beq	15774 <triple_free@@Base+0xcd8>
   15758:	ldr	r1, [sp, #40]	; 0x28
   1575c:	cmp	sl, r9
   15760:	strbhi	r3, [r1, r9]
   15764:	ldrb	r3, [r2, #1]!
   15768:	add	r9, r9, #1
   1576c:	cmp	r3, #0
   15770:	bne	1575c <triple_free@@Base+0xcc0>
   15774:	cmp	r9, sl
   15778:	movcs	r0, r9
   1577c:	ldrcc	r1, [sp, #40]	; 0x28
   15780:	movcc	r3, #0
   15784:	movcc	r0, r9
   15788:	strbcc	r3, [r1, r9]
   1578c:	b	15808 <triple_free@@Base+0xd6c>
   15790:	cmn	r8, #1
   15794:	beq	15e5c <triple_free@@Base+0x13c0>
   15798:	subs	r3, r8, #1
   1579c:	movne	r3, #1
   157a0:	cmp	r3, #0
   157a4:	bne	15684 <triple_free@@Base+0xbe8>
   157a8:	cmp	fp, #0
   157ac:	bne	15684 <triple_free@@Base+0xbe8>
   157b0:	ldr	r3, [sp, #36]	; 0x24
   157b4:	ldr	r0, [sp, #160]	; 0xa0
   157b8:	cmp	r0, #2
   157bc:	movne	r3, #0
   157c0:	andeq	r3, r3, #1
   157c4:	cmp	r3, #0
   157c8:	beq	15684 <triple_free@@Base+0xbe8>
   157cc:	ldr	r2, [sp, #164]	; 0xa4
   157d0:	mov	ip, #0
   157d4:	ldr	r0, [sp, #160]	; 0xa0
   157d8:	bic	r3, r2, #2
   157dc:	ldr	r1, [sp, #72]	; 0x48
   157e0:	ldr	r2, [sp, #68]	; 0x44
   157e4:	stm	sp, {r0, r3}
   157e8:	mov	r3, r8
   157ec:	str	r1, [sp, #12]
   157f0:	mov	r1, sl
   157f4:	str	r2, [sp, #16]
   157f8:	ldr	r0, [sp, #40]	; 0x28
   157fc:	ldr	r2, [sp, #32]
   15800:	str	ip, [sp, #8]
   15804:	bl	1529c <triple_free@@Base+0x800>
   15808:	ldr	r1, [sp, #56]	; 0x38
   1580c:	ldr	r2, [sp, #116]	; 0x74
   15810:	ldr	r3, [r1]
   15814:	cmp	r2, r3
   15818:	bne	15f4c <triple_free@@Base+0x14b0>
   1581c:	add	sp, sp, #124	; 0x7c
   15820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15824:	mov	r3, #114	; 0x72
   15828:	ldr	r2, [sp, #36]	; 0x24
   1582c:	ldr	r0, [sp, #160]	; 0xa0
   15830:	cmp	r0, #2
   15834:	movne	r2, #0
   15838:	andeq	r2, r2, #1
   1583c:	cmp	r2, #0
   15840:	bne	157cc <triple_free@@Base+0xd30>
   15844:	ldr	r1, [sp, #24]
   15848:	cmp	r1, #0
   1584c:	beq	15684 <triple_free@@Base+0xbe8>
   15850:	mov	r4, r3
   15854:	b	156bc <triple_free@@Base+0xc20>
   15858:	mov	r3, #98	; 0x62
   1585c:	b	15844 <triple_free@@Base+0xda8>
   15860:	mov	r3, #102	; 0x66
   15864:	b	15844 <triple_free@@Base+0xda8>
   15868:	mov	r3, #118	; 0x76
   1586c:	b	15844 <triple_free@@Base+0xda8>
   15870:	mov	r3, #97	; 0x61
   15874:	b	15844 <triple_free@@Base+0xda8>
   15878:	mov	r3, #110	; 0x6e
   1587c:	b	15828 <triple_free@@Base+0xd8c>
   15880:	mov	r3, #116	; 0x74
   15884:	b	15828 <triple_free@@Base+0xd8c>
   15888:	ldr	r2, [sp, #24]
   1588c:	cmp	r2, #0
   15890:	beq	15e38 <triple_free@@Base+0x139c>
   15894:	ldr	r3, [sp, #36]	; 0x24
   15898:	cmp	r3, #0
   1589c:	bne	157cc <triple_free@@Base+0xd30>
   158a0:	cmp	r9, sl
   158a4:	add	r2, r9, #1
   158a8:	ldrcc	r0, [sp, #40]	; 0x28
   158ac:	movcc	r3, #92	; 0x5c
   158b0:	strbcc	r3, [r0, r9]
   158b4:	add	r3, fp, #1
   158b8:	cmp	r8, r3
   158bc:	bls	158fc <triple_free@@Base+0xe60>
   158c0:	ldr	r1, [sp, #32]
   158c4:	ldrb	r3, [r1, r3]
   158c8:	sub	r3, r3, #48	; 0x30
   158cc:	cmp	r3, #9
   158d0:	bhi	158fc <triple_free@@Base+0xe60>
   158d4:	cmp	sl, r2
   158d8:	ldrhi	r0, [sp, #40]	; 0x28
   158dc:	movhi	r3, #48	; 0x30
   158e0:	strbhi	r3, [r0, r2]
   158e4:	add	r3, r9, #2
   158e8:	cmp	sl, r3
   158ec:	ldrhi	r1, [sp, #40]	; 0x28
   158f0:	movhi	r2, #48	; 0x30
   158f4:	strbhi	r2, [r1, r3]
   158f8:	add	r2, r9, #3
   158fc:	mov	r9, r2
   15900:	mov	r4, #48	; 0x30
   15904:	b	15690 <triple_free@@Base+0xbf4>
   15908:	ldr	r1, [sp, #76]	; 0x4c
   1590c:	cmp	r1, #0
   15910:	beq	1591c <triple_free@@Base+0xe80>
   15914:	cmp	r7, #0
   15918:	bne	156dc <triple_free@@Base+0xc40>
   1591c:	mov	r3, r4
   15920:	b	15828 <triple_free@@Base+0xd8c>
   15924:	ldr	r1, [sp, #160]	; 0xa0
   15928:	cmp	r1, #2
   1592c:	bne	15684 <triple_free@@Base+0xbe8>
   15930:	ldr	r2, [sp, #36]	; 0x24
   15934:	cmp	r2, #0
   15938:	bne	157cc <triple_free@@Base+0xd30>
   1593c:	cmp	r9, sl
   15940:	ldrcc	r0, [sp, #40]	; 0x28
   15944:	movcc	r3, #39	; 0x27
   15948:	strbcc	r3, [r0, r9]
   1594c:	add	r3, r9, #1
   15950:	cmp	sl, r3
   15954:	ldrhi	r1, [sp, #40]	; 0x28
   15958:	movhi	r2, #92	; 0x5c
   1595c:	strbhi	r2, [r1, r3]
   15960:	add	r3, r9, #2
   15964:	cmp	sl, r3
   15968:	add	r9, r9, #3
   1596c:	ldrhi	r0, [sp, #40]	; 0x28
   15970:	movhi	r2, #39	; 0x27
   15974:	strbhi	r2, [r0, r3]
   15978:	b	15684 <triple_free@@Base+0xbe8>
   1597c:	ldr	r1, [sp, #64]	; 0x40
   15980:	cmp	r1, #1
   15984:	bne	15c7c <triple_free@@Base+0x11e0>
   15988:	bl	11a8c <__ctype_b_loc@plt>
   1598c:	ldr	r2, [sp, #64]	; 0x40
   15990:	sxth	r3, r4
   15994:	str	r2, [sp, #60]	; 0x3c
   15998:	lsl	r3, r3, #1
   1599c:	ldr	r2, [r0]
   159a0:	ldrh	r2, [r2, r3]
   159a4:	eor	r2, r2, #16384	; 0x4000
   159a8:	ubfx	r2, r2, #14, #1
   159ac:	ldr	r1, [sp, #24]
   159b0:	ands	r2, r2, r1
   159b4:	beq	15684 <triple_free@@Base+0xbe8>
   159b8:	ldr	r3, [sp, #60]	; 0x3c
   159bc:	mov	r0, #92	; 0x5c
   159c0:	ldr	r7, [sp, #36]	; 0x24
   159c4:	add	r1, r3, fp
   159c8:	str	r8, [sp, #60]	; 0x3c
   159cc:	ldr	r3, [sp, #40]	; 0x28
   159d0:	b	15a34 <triple_free@@Base+0xf98>
   159d4:	cmp	r7, #0
   159d8:	bne	15e74 <triple_free@@Base+0x13d8>
   159dc:	add	ip, r9, #1
   159e0:	cmp	r9, sl
   159e4:	strbcc	r0, [r3, r9]
   159e8:	cmp	sl, ip
   159ec:	lsrhi	r8, r4, #6
   159f0:	addhi	r8, r8, #48	; 0x30
   159f4:	strbhi	r8, [r3, ip]
   159f8:	add	ip, r9, #2
   159fc:	add	r9, r9, #3
   15a00:	cmp	sl, ip
   15a04:	ubfxhi	r8, r4, #3, #3
   15a08:	and	r4, r4, #7
   15a0c:	add	r4, r4, #48	; 0x30
   15a10:	addhi	r8, r8, #48	; 0x30
   15a14:	strbhi	r8, [r3, ip]
   15a18:	add	fp, fp, #1
   15a1c:	cmp	r1, fp
   15a20:	bls	15a60 <triple_free@@Base+0xfc4>
   15a24:	cmp	r9, sl
   15a28:	strbcc	r4, [r3, r9]
   15a2c:	ldrb	r4, [r5, #1]!
   15a30:	add	r9, r9, #1
   15a34:	cmp	r2, #0
   15a38:	bne	159d4 <triple_free@@Base+0xf38>
   15a3c:	cmp	r6, #0
   15a40:	beq	15a18 <triple_free@@Base+0xf7c>
   15a44:	add	fp, fp, #1
   15a48:	cmp	r9, sl
   15a4c:	strbcc	r0, [r3, r9]
   15a50:	cmp	r1, fp
   15a54:	add	r9, r9, #1
   15a58:	mov	r6, #0
   15a5c:	bhi	15a24 <triple_free@@Base+0xf88>
   15a60:	ldr	r8, [sp, #60]	; 0x3c
   15a64:	b	156e0 <triple_free@@Base+0xc44>
   15a68:	ldr	r3, [sp, #36]	; 0x24
   15a6c:	cmp	r3, #0
   15a70:	bne	15f74 <triple_free@@Base+0x14d8>
   15a74:	cmp	sl, #0
   15a78:	beq	15e8c <triple_free@@Base+0x13f0>
   15a7c:	ldr	r1, [sp, #40]	; 0x28
   15a80:	mov	r0, #1
   15a84:	ldr	r2, [pc, #1296]	; 15f9c <triple_free@@Base+0x1500>
   15a88:	mov	r3, #34	; 0x22
   15a8c:	str	r0, [sp, #24]
   15a90:	mov	r9, r0
   15a94:	add	r2, pc, r2
   15a98:	str	r0, [sp, #28]
   15a9c:	strb	r3, [r1]
   15aa0:	str	r2, [sp, #52]	; 0x34
   15aa4:	b	15350 <triple_free@@Base+0x8b4>
   15aa8:	ldr	r3, [pc, #1264]	; 15fa0 <triple_free@@Base+0x1504>
   15aac:	mov	r2, #1
   15ab0:	mov	r0, #3
   15ab4:	str	r2, [sp, #36]	; 0x24
   15ab8:	add	r3, pc, r3
   15abc:	str	r2, [sp, #24]
   15ac0:	str	r3, [sp, #52]	; 0x34
   15ac4:	mov	r9, #0
   15ac8:	str	r2, [sp, #28]
   15acc:	str	r0, [sp, #160]	; 0xa0
   15ad0:	b	15350 <triple_free@@Base+0x8b4>
   15ad4:	mov	r0, #0
   15ad8:	mov	r1, #1
   15adc:	str	r0, [sp, #36]	; 0x24
   15ae0:	mov	r9, r0
   15ae4:	str	r1, [sp, #24]
   15ae8:	str	r0, [sp, #28]
   15aec:	str	r0, [sp, #52]	; 0x34
   15af0:	b	15350 <triple_free@@Base+0x8b4>
   15af4:	ldr	r3, [sp, #160]	; 0xa0
   15af8:	cmp	r3, #8
   15afc:	beq	15b28 <triple_free@@Base+0x108c>
   15b00:	ldr	r0, [pc, #1180]	; 15fa4 <triple_free@@Base+0x1508>
   15b04:	mov	r1, r3
   15b08:	add	r0, pc, r0
   15b0c:	bl	15138 <triple_free@@Base+0x69c>
   15b10:	ldr	r1, [sp, #160]	; 0xa0
   15b14:	str	r0, [sp, #72]	; 0x48
   15b18:	ldr	r0, [pc, #1160]	; 15fa8 <triple_free@@Base+0x150c>
   15b1c:	add	r0, pc, r0
   15b20:	bl	15138 <triple_free@@Base+0x69c>
   15b24:	str	r0, [sp, #68]	; 0x44
   15b28:	ldr	r0, [sp, #36]	; 0x24
   15b2c:	cmp	r0, #0
   15b30:	movne	r9, #0
   15b34:	bne	15b6c <triple_free@@Base+0x10d0>
   15b38:	ldr	r1, [sp, #72]	; 0x48
   15b3c:	ldrb	r3, [r1]
   15b40:	cmp	r3, #0
   15b44:	beq	15f44 <triple_free@@Base+0x14a8>
   15b48:	mov	r2, r1
   15b4c:	ldr	r1, [sp, #40]	; 0x28
   15b50:	mov	r9, r0
   15b54:	cmp	r9, sl
   15b58:	strbcc	r3, [r1, r9]
   15b5c:	ldrb	r3, [r2, #1]!
   15b60:	add	r9, r9, #1
   15b64:	cmp	r3, #0
   15b68:	bne	15b54 <triple_free@@Base+0x10b8>
   15b6c:	ldr	r0, [sp, #68]	; 0x44
   15b70:	str	r0, [sp, #52]	; 0x34
   15b74:	bl	11abc <strlen@plt>
   15b78:	mov	r2, #1
   15b7c:	str	r2, [sp, #24]
   15b80:	str	r0, [sp, #28]
   15b84:	b	15350 <triple_free@@Base+0x8b4>
   15b88:	ldr	r3, [pc, #1052]	; 15fac <triple_free@@Base+0x1510>
   15b8c:	mov	r2, #0
   15b90:	mov	r1, #1
   15b94:	mov	r0, #2
   15b98:	add	r3, pc, r3
   15b9c:	str	r1, [sp, #36]	; 0x24
   15ba0:	str	r2, [sp, #24]
   15ba4:	mov	r9, r2
   15ba8:	str	r1, [sp, #28]
   15bac:	str	r3, [sp, #52]	; 0x34
   15bb0:	str	r0, [sp, #160]	; 0xa0
   15bb4:	b	15350 <triple_free@@Base+0x8b4>
   15bb8:	ldr	r3, [sp, #36]	; 0x24
   15bbc:	cmp	r3, #0
   15bc0:	bne	15f50 <triple_free@@Base+0x14b4>
   15bc4:	cmp	sl, #0
   15bc8:	beq	15eac <triple_free@@Base+0x1410>
   15bcc:	ldr	r1, [sp, #40]	; 0x28
   15bd0:	mov	r3, #39	; 0x27
   15bd4:	ldr	r2, [sp, #36]	; 0x24
   15bd8:	mov	r0, #1
   15bdc:	mov	r9, r0
   15be0:	str	r0, [sp, #28]
   15be4:	strb	r3, [r1]
   15be8:	ldr	r3, [pc, #960]	; 15fb0 <triple_free@@Base+0x1514>
   15bec:	str	r2, [sp, #24]
   15bf0:	add	r3, pc, r3
   15bf4:	str	r3, [sp, #52]	; 0x34
   15bf8:	b	15350 <triple_free@@Base+0x8b4>
   15bfc:	ldr	r2, [sp, #28]
   15c00:	cmp	r2, #1
   15c04:	add	r4, fp, r2
   15c08:	movls	r3, #0
   15c0c:	movhi	r3, #1
   15c10:	cmn	r8, #1
   15c14:	movne	r3, #0
   15c18:	cmp	r3, #0
   15c1c:	beq	15c2c <triple_free@@Base+0x1190>
   15c20:	ldr	r0, [sp, #32]
   15c24:	bl	11abc <strlen@plt>
   15c28:	mov	r8, r0
   15c2c:	cmp	r8, r4
   15c30:	ldrcc	r3, [sp, #32]
   15c34:	movcc	r6, #0
   15c38:	addcc	r5, r3, fp
   15c3c:	bcc	153ac <triple_free@@Base+0x910>
   15c40:	ldr	r0, [sp, #32]
   15c44:	ldr	r1, [sp, #52]	; 0x34
   15c48:	add	r5, r0, fp
   15c4c:	ldr	r2, [sp, #28]
   15c50:	mov	r0, r5
   15c54:	bl	11924 <memcmp@plt>
   15c58:	cmp	r0, #0
   15c5c:	bne	15c74 <triple_free@@Base+0x11d8>
   15c60:	ldr	r1, [sp, #36]	; 0x24
   15c64:	cmp	r1, #0
   15c68:	bne	157cc <triple_free@@Base+0xd30>
   15c6c:	mov	r6, #1
   15c70:	b	153ac <triple_free@@Base+0x910>
   15c74:	mov	r6, #0
   15c78:	b	153ac <triple_free@@Base+0x910>
   15c7c:	add	r7, sp, #108	; 0x6c
   15c80:	cmn	r8, #1
   15c84:	mov	r3, #0
   15c88:	str	r3, [sp, #108]	; 0x6c
   15c8c:	str	r3, [r7, #4]
   15c90:	beq	15e7c <triple_free@@Base+0x13e0>
   15c94:	mov	r1, #0
   15c98:	ldr	r0, [sp, #32]
   15c9c:	mov	ip, #1
   15ca0:	str	r9, [sp, #88]	; 0x58
   15ca4:	str	r6, [sp, #96]	; 0x60
   15ca8:	mov	r9, r1
   15cac:	str	r5, [sp, #100]	; 0x64
   15cb0:	mov	r6, ip
   15cb4:	mov	r5, r7
   15cb8:	add	r3, sp, #104	; 0x68
   15cbc:	sub	r0, r0, #1
   15cc0:	str	r3, [sp, #80]	; 0x50
   15cc4:	str	r0, [sp, #84]	; 0x54
   15cc8:	str	r1, [sp, #60]	; 0x3c
   15ccc:	str	r4, [sp, #92]	; 0x5c
   15cd0:	ldr	r2, [sp, #32]
   15cd4:	add	r7, r9, fp
   15cd8:	add	r0, sp, #104	; 0x68
   15cdc:	mov	r3, r5
   15ce0:	add	r4, r2, r7
   15ce4:	rsb	r2, r7, r8
   15ce8:	mov	r1, r4
   15cec:	bl	11a08 <mbrtowc@plt>
   15cf0:	subs	r2, r0, #0
   15cf4:	beq	15e00 <triple_free@@Base+0x1364>
   15cf8:	cmn	r2, #1
   15cfc:	beq	15f28 <triple_free@@Base+0x148c>
   15d00:	cmn	r2, #2
   15d04:	beq	15ecc <triple_free@@Base+0x1430>
   15d08:	ldr	r3, [sp, #36]	; 0x24
   15d0c:	ldr	r0, [sp, #160]	; 0xa0
   15d10:	cmp	r0, #2
   15d14:	movne	r3, #0
   15d18:	andeq	r3, r3, #1
   15d1c:	cmp	r3, #0
   15d20:	beq	15ddc <triple_free@@Base+0x1340>
   15d24:	cmp	r2, #1
   15d28:	beq	15ddc <triple_free@@Base+0x1340>
   15d2c:	ldr	r1, [sp, #84]	; 0x54
   15d30:	add	r3, r1, r2
   15d34:	add	r7, r3, r7
   15d38:	ldrb	r3, [r4, #1]!
   15d3c:	sub	r3, r3, #91	; 0x5b
   15d40:	cmp	r3, #33	; 0x21
   15d44:	addls	pc, pc, r3, lsl #2
   15d48:	b	15dd4 <triple_free@@Base+0x1338>
   15d4c:	b	157cc <triple_free@@Base+0xd30>
   15d50:	b	157cc <triple_free@@Base+0xd30>
   15d54:	b	15dd4 <triple_free@@Base+0x1338>
   15d58:	b	157cc <triple_free@@Base+0xd30>
   15d5c:	b	15dd4 <triple_free@@Base+0x1338>
   15d60:	b	157cc <triple_free@@Base+0xd30>
   15d64:	b	15dd4 <triple_free@@Base+0x1338>
   15d68:	b	15dd4 <triple_free@@Base+0x1338>
   15d6c:	b	15dd4 <triple_free@@Base+0x1338>
   15d70:	b	15dd4 <triple_free@@Base+0x1338>
   15d74:	b	15dd4 <triple_free@@Base+0x1338>
   15d78:	b	15dd4 <triple_free@@Base+0x1338>
   15d7c:	b	15dd4 <triple_free@@Base+0x1338>
   15d80:	b	15dd4 <triple_free@@Base+0x1338>
   15d84:	b	15dd4 <triple_free@@Base+0x1338>
   15d88:	b	15dd4 <triple_free@@Base+0x1338>
   15d8c:	b	15dd4 <triple_free@@Base+0x1338>
   15d90:	b	15dd4 <triple_free@@Base+0x1338>
   15d94:	b	15dd4 <triple_free@@Base+0x1338>
   15d98:	b	15dd4 <triple_free@@Base+0x1338>
   15d9c:	b	15dd4 <triple_free@@Base+0x1338>
   15da0:	b	15dd4 <triple_free@@Base+0x1338>
   15da4:	b	15dd4 <triple_free@@Base+0x1338>
   15da8:	b	15dd4 <triple_free@@Base+0x1338>
   15dac:	b	15dd4 <triple_free@@Base+0x1338>
   15db0:	b	15dd4 <triple_free@@Base+0x1338>
   15db4:	b	15dd4 <triple_free@@Base+0x1338>
   15db8:	b	15dd4 <triple_free@@Base+0x1338>
   15dbc:	b	15dd4 <triple_free@@Base+0x1338>
   15dc0:	b	15dd4 <triple_free@@Base+0x1338>
   15dc4:	b	15dd4 <triple_free@@Base+0x1338>
   15dc8:	b	15dd4 <triple_free@@Base+0x1338>
   15dcc:	b	15dd4 <triple_free@@Base+0x1338>
   15dd0:	b	157cc <triple_free@@Base+0xd30>
   15dd4:	cmp	r4, r7
   15dd8:	bne	15d38 <triple_free@@Base+0x129c>
   15ddc:	ldr	r0, [sp, #104]	; 0x68
   15de0:	add	r9, r9, r2
   15de4:	bl	11990 <iswprint@plt>
   15de8:	cmp	r0, #0
   15dec:	mov	r0, r5
   15df0:	moveq	r6, #0
   15df4:	bl	1190c <mbsinit@plt>
   15df8:	cmp	r0, #0
   15dfc:	beq	15cd0 <triple_free@@Base+0x1234>
   15e00:	mov	ip, r6
   15e04:	eor	r2, ip, #1
   15e08:	str	r9, [sp, #60]	; 0x3c
   15e0c:	ldr	r4, [sp, #92]	; 0x5c
   15e10:	uxtb	r2, r2
   15e14:	ldr	r9, [sp, #88]	; 0x58
   15e18:	ldr	r6, [sp, #96]	; 0x60
   15e1c:	ldr	r5, [sp, #100]	; 0x64
   15e20:	ldr	r3, [sp, #60]	; 0x3c
   15e24:	cmp	r3, #1
   15e28:	bls	159ac <triple_free@@Base+0xf10>
   15e2c:	ldr	r0, [sp, #24]
   15e30:	and	r2, r2, r0
   15e34:	b	159b8 <triple_free@@Base+0xf1c>
   15e38:	ldr	r2, [sp, #164]	; 0xa4
   15e3c:	tst	r2, #1
   15e40:	addne	fp, fp, #1
   15e44:	bne	15374 <triple_free@@Base+0x8d8>
   15e48:	b	15684 <triple_free@@Base+0xbe8>
   15e4c:	ldr	r0, [sp, #36]	; 0x24
   15e50:	cmp	r0, #0
   15e54:	beq	15684 <triple_free@@Base+0xbe8>
   15e58:	b	157cc <triple_free@@Base+0xd30>
   15e5c:	ldr	r2, [sp, #32]
   15e60:	ldrb	r3, [r2, #1]
   15e64:	adds	r3, r3, #0
   15e68:	movne	r3, #1
   15e6c:	b	157a0 <triple_free@@Base+0xd04>
   15e70:	bl	11c60 <abort@plt>
   15e74:	ldr	r8, [sp, #60]	; 0x3c
   15e78:	b	157cc <triple_free@@Base+0xd30>
   15e7c:	ldr	r0, [sp, #32]
   15e80:	bl	11abc <strlen@plt>
   15e84:	mov	r8, r0
   15e88:	b	15c94 <triple_free@@Base+0x11f8>
   15e8c:	ldr	r2, [pc, #288]	; 15fb4 <triple_free@@Base+0x1518>
   15e90:	mov	r1, #1
   15e94:	mov	r9, r1
   15e98:	str	r1, [sp, #24]
   15e9c:	add	r2, pc, r2
   15ea0:	str	r1, [sp, #28]
   15ea4:	str	r2, [sp, #52]	; 0x34
   15ea8:	b	15350 <triple_free@@Base+0x8b4>
   15eac:	ldr	r2, [pc, #260]	; 15fb8 <triple_free@@Base+0x151c>
   15eb0:	mov	r3, #1
   15eb4:	mov	r9, r3
   15eb8:	str	r3, [sp, #28]
   15ebc:	add	r2, pc, r2
   15ec0:	str	sl, [sp, #24]
   15ec4:	str	r2, [sp, #52]	; 0x34
   15ec8:	b	15350 <triple_free@@Base+0x8b4>
   15ecc:	cmp	r8, r7
   15ed0:	str	r9, [sp, #60]	; 0x3c
   15ed4:	mov	ip, r4
   15ed8:	ldr	r6, [sp, #96]	; 0x60
   15edc:	ldr	r9, [sp, #88]	; 0x58
   15ee0:	ldr	r4, [sp, #92]	; 0x5c
   15ee4:	ldr	r5, [sp, #100]	; 0x64
   15ee8:	bls	15f20 <triple_free@@Base+0x1484>
   15eec:	ldrb	r3, [ip]
   15ef0:	cmp	r3, #0
   15ef4:	beq	15f20 <triple_free@@Base+0x1484>
   15ef8:	ldr	r3, [sp, #60]	; 0x3c
   15efc:	b	15f0c <triple_free@@Base+0x1470>
   15f00:	ldrb	r2, [r5, r3]
   15f04:	cmp	r2, #0
   15f08:	beq	15f1c <triple_free@@Base+0x1480>
   15f0c:	add	r3, r3, #1
   15f10:	add	r2, fp, r3
   15f14:	cmp	r8, r2
   15f18:	bhi	15f00 <triple_free@@Base+0x1464>
   15f1c:	str	r3, [sp, #60]	; 0x3c
   15f20:	mov	r2, #1
   15f24:	b	15e20 <triple_free@@Base+0x1384>
   15f28:	str	r9, [sp, #60]	; 0x3c
   15f2c:	mov	r2, #1
   15f30:	ldr	r4, [sp, #92]	; 0x5c
   15f34:	ldr	r6, [sp, #96]	; 0x60
   15f38:	ldr	r9, [sp, #88]	; 0x58
   15f3c:	ldr	r5, [sp, #100]	; 0x64
   15f40:	b	15e20 <triple_free@@Base+0x1384>
   15f44:	ldr	r9, [sp, #36]	; 0x24
   15f48:	b	15b6c <triple_free@@Base+0x10d0>
   15f4c:	bl	1193c <__stack_chk_fail@plt>
   15f50:	ldr	r1, [pc, #100]	; 15fbc <triple_free@@Base+0x1520>
   15f54:	mov	r3, #0
   15f58:	mov	r0, #1
   15f5c:	str	r3, [sp, #24]
   15f60:	add	r1, pc, r1
   15f64:	str	r0, [sp, #28]
   15f68:	mov	r9, r3
   15f6c:	str	r1, [sp, #52]	; 0x34
   15f70:	b	15350 <triple_free@@Base+0x8b4>
   15f74:	ldr	r0, [pc, #68]	; 15fc0 <triple_free@@Base+0x1524>
   15f78:	mov	r3, #1
   15f7c:	mov	r9, #0
   15f80:	str	r3, [sp, #24]
   15f84:	add	r0, pc, r0
   15f88:	str	r3, [sp, #28]
   15f8c:	str	r0, [sp, #52]	; 0x34
   15f90:	b	15350 <triple_free@@Base+0x8b4>
   15f94:	andeq	r7, r1, r0, asr #26
   15f98:	andeq	r0, r0, r8, lsl #3
   15f9c:	andeq	r6, r0, ip, ror r3
   15fa0:	andeq	r6, r0, r8, asr r3
   15fa4:	andeq	r6, r0, r4, lsl r3
   15fa8:	strdeq	r6, [r0], -r0
   15fac:	andeq	r6, r0, r4, ror r2
   15fb0:	andeq	r6, r0, ip, lsl r2
   15fb4:	andeq	r5, r0, r4, ror pc
   15fb8:	andeq	r5, r0, r0, asr pc
   15fbc:	andeq	r5, r0, ip, lsr #29
   15fc0:	andeq	r5, r0, ip, lsl #29
   15fc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fc8:	sub	sp, sp, #44	; 0x2c
   15fcc:	mov	r6, r0
   15fd0:	mov	r9, r1
   15fd4:	mov	sl, r2
   15fd8:	mov	r4, r3
   15fdc:	bl	11b04 <__errno_location@plt>
   15fe0:	ldr	fp, [pc, #412]	; 16184 <triple_free@@Base+0x16e8>
   15fe4:	cmp	r6, #0
   15fe8:	add	fp, pc, fp
   15fec:	ldr	r5, [fp]
   15ff0:	ldr	r1, [r0]
   15ff4:	mov	r8, r0
   15ff8:	str	r1, [sp, #36]	; 0x24
   15ffc:	blt	1617c <triple_free@@Base+0x16e0>
   16000:	ldr	r3, [pc, #384]	; 16188 <triple_free@@Base+0x16ec>
   16004:	add	r3, pc, r3
   16008:	ldr	r3, [r3]
   1600c:	cmp	r6, r3
   16010:	bcc	16064 <triple_free@@Base+0x15c8>
   16014:	add	r7, r6, #1
   16018:	cmn	r7, #-536870911	; 0xe0000001
   1601c:	bhi	16180 <triple_free@@Base+0x16e4>
   16020:	add	r3, fp, #4
   16024:	cmp	r5, r3
   16028:	beq	16154 <triple_free@@Base+0x16b8>
   1602c:	mov	r0, r5
   16030:	lsl	r1, r7, #3
   16034:	bl	16fcc <triple_free@@Base+0x2530>
   16038:	mov	r5, r0
   1603c:	str	r0, [fp]
   16040:	ldr	fp, [pc, #324]	; 1618c <triple_free@@Base+0x16f0>
   16044:	mov	r1, #0
   16048:	add	fp, pc, fp
   1604c:	ldr	r0, [fp]
   16050:	rsb	r2, r0, r7
   16054:	add	r0, r5, r0, lsl #3
   16058:	lsl	r2, r2, #3
   1605c:	bl	11b1c <memset@plt>
   16060:	str	r7, [fp]
   16064:	add	r2, r4, #8
   16068:	str	r2, [sp, #32]
   1606c:	ldr	r1, [r4]
   16070:	add	fp, r5, r6, lsl #3
   16074:	ldr	lr, [sp, #32]
   16078:	mov	r2, r9
   1607c:	ldr	r3, [r4, #4]
   16080:	ldr	ip, [r5, r6, lsl #3]
   16084:	ldr	r7, [fp, #4]
   16088:	orr	r3, r3, #1
   1608c:	str	r1, [sp]
   16090:	str	r3, [sp, #4]
   16094:	mov	r1, ip
   16098:	str	lr, [sp, #8]
   1609c:	mov	r0, r7
   160a0:	ldr	lr, [r4, #40]	; 0x28
   160a4:	str	r3, [sp, #28]
   160a8:	mov	r3, sl
   160ac:	str	lr, [sp, #12]
   160b0:	ldr	lr, [r4, #44]	; 0x2c
   160b4:	str	ip, [sp, #24]
   160b8:	str	lr, [sp, #16]
   160bc:	bl	1529c <triple_free@@Base+0x800>
   160c0:	ldr	ip, [sp, #24]
   160c4:	cmp	ip, r0
   160c8:	bhi	16140 <triple_free@@Base+0x16a4>
   160cc:	ldr	r3, [pc, #188]	; 16190 <triple_free@@Base+0x16f4>
   160d0:	add	r1, r0, #1
   160d4:	str	r1, [r5, r6, lsl #3]
   160d8:	add	r3, pc, r3
   160dc:	cmp	r7, r3
   160e0:	beq	160f4 <triple_free@@Base+0x1658>
   160e4:	mov	r0, r7
   160e8:	str	r1, [sp, #24]
   160ec:	bl	118dc <free@plt>
   160f0:	ldr	r1, [sp, #24]
   160f4:	mov	r0, r1
   160f8:	str	r1, [sp, #24]
   160fc:	bl	16f74 <triple_free@@Base+0x24d8>
   16100:	ldr	r3, [sp, #28]
   16104:	ldr	lr, [sp, #32]
   16108:	mov	r2, r9
   1610c:	str	r0, [fp, #4]
   16110:	mov	r7, r0
   16114:	ldr	ip, [r4]
   16118:	str	r3, [sp, #4]
   1611c:	mov	r3, sl
   16120:	str	lr, [sp, #8]
   16124:	str	ip, [sp]
   16128:	ldr	ip, [r4, #40]	; 0x28
   1612c:	ldr	r1, [sp, #24]
   16130:	str	ip, [sp, #12]
   16134:	ldr	ip, [r4, #44]	; 0x2c
   16138:	str	ip, [sp, #16]
   1613c:	bl	1529c <triple_free@@Base+0x800>
   16140:	ldr	r1, [sp, #36]	; 0x24
   16144:	mov	r0, r7
   16148:	str	r1, [r8]
   1614c:	add	sp, sp, #44	; 0x2c
   16150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16154:	lsl	r1, r7, #3
   16158:	mov	r0, #0
   1615c:	str	r3, [sp, #24]
   16160:	bl	16fcc <triple_free@@Base+0x2530>
   16164:	ldr	r3, [sp, #24]
   16168:	mov	r5, r0
   1616c:	ldm	r3, {r0, r1}
   16170:	str	r5, [fp]
   16174:	stm	r5, {r0, r1}
   16178:	b	16040 <triple_free@@Base+0x15a4>
   1617c:	bl	11c60 <abort@plt>
   16180:	bl	17188 <triple_free@@Base+0x26ec>
   16184:	andeq	r7, r1, ip, lsl r2
   16188:	andeq	r7, r1, ip, asr #3
   1618c:	andeq	r7, r1, r8, lsl #3
   16190:	andeq	r7, r1, r8, asr #2
   16194:	push	{r4, r5, r6, lr}
   16198:	mov	r5, r0
   1619c:	bl	11b04 <__errno_location@plt>
   161a0:	cmp	r5, #0
   161a4:	mov	r1, #48	; 0x30
   161a8:	mov	r4, r0
   161ac:	ldr	r0, [pc, #24]	; 161cc <triple_free@@Base+0x1730>
   161b0:	ldr	r6, [r4]
   161b4:	add	r0, pc, r0
   161b8:	add	r0, r0, #256	; 0x100
   161bc:	movne	r0, r5
   161c0:	bl	17148 <triple_free@@Base+0x26ac>
   161c4:	str	r6, [r4]
   161c8:	pop	{r4, r5, r6, pc}
   161cc:	andeq	r7, r1, ip, rrx
   161d0:	cmp	r0, #0
   161d4:	beq	161e0 <triple_free@@Base+0x1744>
   161d8:	ldr	r0, [r0]
   161dc:	bx	lr
   161e0:	ldr	r0, [pc, #12]	; 161f4 <triple_free@@Base+0x1758>
   161e4:	add	r0, pc, r0
   161e8:	add	r0, r0, #256	; 0x100
   161ec:	ldr	r0, [r0]
   161f0:	bx	lr
   161f4:	andeq	r7, r1, ip, lsr r0
   161f8:	cmp	r0, #0
   161fc:	beq	16208 <triple_free@@Base+0x176c>
   16200:	str	r1, [r0]
   16204:	bx	lr
   16208:	ldr	r0, [pc, #12]	; 1621c <triple_free@@Base+0x1780>
   1620c:	add	r0, pc, r0
   16210:	add	r0, r0, #256	; 0x100
   16214:	str	r1, [r0]
   16218:	bx	lr
   1621c:	andeq	r7, r1, r4, lsl r0
   16220:	cmp	r0, #0
   16224:	movne	r3, r0
   16228:	beq	16258 <triple_free@@Base+0x17bc>
   1622c:	lsr	ip, r1, #5
   16230:	and	r1, r1, #31
   16234:	add	r3, r3, ip, lsl #2
   16238:	ldr	ip, [r3, #8]
   1623c:	lsr	r0, ip, r1
   16240:	eor	r2, r0, r2
   16244:	and	r0, r0, #1
   16248:	and	r2, r2, #1
   1624c:	eor	ip, ip, r2, lsl r1
   16250:	str	ip, [r3, #8]
   16254:	bx	lr
   16258:	ldr	r3, [pc, #8]	; 16268 <triple_free@@Base+0x17cc>
   1625c:	add	r3, pc, r3
   16260:	add	r3, r3, #256	; 0x100
   16264:	b	1622c <triple_free@@Base+0x1790>
   16268:	andeq	r6, r1, r4, asr #31
   1626c:	subs	r3, r0, #0
   16270:	beq	16280 <triple_free@@Base+0x17e4>
   16274:	ldr	r0, [r3, #4]
   16278:	str	r1, [r3, #4]
   1627c:	bx	lr
   16280:	ldr	r3, [pc, #8]	; 16290 <triple_free@@Base+0x17f4>
   16284:	add	r3, pc, r3
   16288:	add	r3, r3, #256	; 0x100
   1628c:	b	16274 <triple_free@@Base+0x17d8>
   16290:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   16294:	cmp	r0, #0
   16298:	push	{r3, lr}
   1629c:	beq	162c0 <triple_free@@Base+0x1824>
   162a0:	cmp	r2, #0
   162a4:	cmpne	r1, #0
   162a8:	mov	r3, #8
   162ac:	strne	r1, [r0, #40]	; 0x28
   162b0:	str	r3, [r0]
   162b4:	strne	r2, [r0, #44]	; 0x2c
   162b8:	popne	{r3, pc}
   162bc:	bl	11c60 <abort@plt>
   162c0:	ldr	r0, [pc, #8]	; 162d0 <triple_free@@Base+0x1834>
   162c4:	add	r0, pc, r0
   162c8:	add	r0, r0, #256	; 0x100
   162cc:	b	162a0 <triple_free@@Base+0x1804>
   162d0:	andeq	r6, r1, ip, asr pc
   162d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   162d8:	sub	sp, sp, #24
   162dc:	mov	r7, r0
   162e0:	mov	sl, r1
   162e4:	ldr	r4, [sp, #56]	; 0x38
   162e8:	mov	r9, r2
   162ec:	mov	r8, r3
   162f0:	cmp	r4, #0
   162f4:	beq	16348 <triple_free@@Base+0x18ac>
   162f8:	bl	11b04 <__errno_location@plt>
   162fc:	ldr	r3, [r4]
   16300:	add	lr, r4, #8
   16304:	mov	r1, sl
   16308:	mov	r2, r9
   1630c:	ldr	r6, [r0]
   16310:	mov	r5, r0
   16314:	str	r3, [sp]
   16318:	mov	r0, r7
   1631c:	ldr	ip, [r4, #4]
   16320:	mov	r3, r8
   16324:	stmib	sp, {ip, lr}
   16328:	ldr	ip, [r4, #40]	; 0x28
   1632c:	str	ip, [sp, #12]
   16330:	ldr	ip, [r4, #44]	; 0x2c
   16334:	str	ip, [sp, #16]
   16338:	bl	1529c <triple_free@@Base+0x800>
   1633c:	str	r6, [r5]
   16340:	add	sp, sp, #24
   16344:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16348:	ldr	r4, [pc, #8]	; 16358 <triple_free@@Base+0x18bc>
   1634c:	add	r4, pc, r4
   16350:	add	r4, r4, #256	; 0x100
   16354:	b	162f8 <triple_free@@Base+0x185c>
   16358:	ldrdeq	r6, [r1], -r4
   1635c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16360:	subs	r4, r3, #0
   16364:	sub	sp, sp, #36	; 0x24
   16368:	mov	r7, r0
   1636c:	mov	r6, r1
   16370:	mov	r5, r2
   16374:	beq	16430 <triple_free@@Base+0x1994>
   16378:	bl	11b04 <__errno_location@plt>
   1637c:	ldr	r3, [r4]
   16380:	ldr	sl, [r4, #4]
   16384:	add	r9, r4, #8
   16388:	mov	r8, r0
   1638c:	mov	r0, #0
   16390:	ldr	r2, [r8]
   16394:	cmp	r5, r0
   16398:	orreq	sl, sl, #1
   1639c:	str	r9, [sp, #8]
   163a0:	mov	r1, r0
   163a4:	stm	sp, {r3, sl}
   163a8:	mov	r3, r6
   163ac:	ldr	ip, [r4, #40]	; 0x28
   163b0:	str	r2, [sp, #28]
   163b4:	mov	r2, r7
   163b8:	str	ip, [sp, #12]
   163bc:	ldr	ip, [r4, #44]	; 0x2c
   163c0:	str	ip, [sp, #16]
   163c4:	bl	1529c <triple_free@@Base+0x800>
   163c8:	add	r1, r0, #1
   163cc:	mov	fp, r0
   163d0:	str	r1, [sp, #24]
   163d4:	mov	r0, r1
   163d8:	bl	16f74 <triple_free@@Base+0x24d8>
   163dc:	ldr	lr, [r4]
   163e0:	str	sl, [sp, #4]
   163e4:	mov	r3, r6
   163e8:	str	r9, [sp, #8]
   163ec:	mov	r2, r7
   163f0:	str	lr, [sp]
   163f4:	ldr	lr, [r4, #40]	; 0x28
   163f8:	ldr	r1, [sp, #24]
   163fc:	str	lr, [sp, #12]
   16400:	ldr	lr, [r4, #44]	; 0x2c
   16404:	str	lr, [sp, #16]
   16408:	str	r0, [sp, #24]
   1640c:	bl	1529c <triple_free@@Base+0x800>
   16410:	ldr	r3, [sp, #28]
   16414:	cmp	r5, #0
   16418:	str	r3, [r8]
   1641c:	ldr	ip, [sp, #24]
   16420:	strne	fp, [r5]
   16424:	mov	r0, ip
   16428:	add	sp, sp, #36	; 0x24
   1642c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16430:	ldr	r4, [pc, #8]	; 16440 <triple_free@@Base+0x19a4>
   16434:	add	r4, pc, r4
   16438:	add	r4, r4, #256	; 0x100
   1643c:	b	16378 <triple_free@@Base+0x18dc>
   16440:	andeq	r6, r1, ip, ror #27
   16444:	mov	r3, r2
   16448:	mov	r2, #0
   1644c:	b	1635c <triple_free@@Base+0x18c0>
   16450:	ldr	r2, [pc, #152]	; 164f0 <triple_free@@Base+0x1a54>
   16454:	push	{r3, r4, r5, r6, r7, lr}
   16458:	add	r2, pc, r2
   1645c:	ldr	r3, [pc, #144]	; 164f4 <triple_free@@Base+0x1a58>
   16460:	ldr	r6, [r2]
   16464:	add	r3, pc, r3
   16468:	cmp	r6, #1
   1646c:	ldr	r7, [r3]
   16470:	movhi	r4, #1
   16474:	movhi	r5, r7
   16478:	bls	16494 <triple_free@@Base+0x19f8>
   1647c:	ldr	r0, [r5, #12]
   16480:	add	r4, r4, #1
   16484:	bl	118dc <free@plt>
   16488:	cmp	r4, r6
   1648c:	add	r5, r5, #8
   16490:	bne	1647c <triple_free@@Base+0x19e0>
   16494:	ldr	r4, [pc, #92]	; 164f8 <triple_free@@Base+0x1a5c>
   16498:	ldr	r0, [r7, #4]
   1649c:	add	r4, pc, r4
   164a0:	cmp	r0, r4
   164a4:	beq	164bc <triple_free@@Base+0x1a20>
   164a8:	bl	118dc <free@plt>
   164ac:	ldr	r3, [pc, #72]	; 164fc <triple_free@@Base+0x1a60>
   164b0:	mov	r2, #256	; 0x100
   164b4:	add	r3, pc, r3
   164b8:	stmib	r3, {r2, r4}
   164bc:	ldr	r4, [pc, #60]	; 16500 <triple_free@@Base+0x1a64>
   164c0:	add	r4, pc, r4
   164c4:	add	r5, r4, #4
   164c8:	cmp	r7, r5
   164cc:	beq	164dc <triple_free@@Base+0x1a40>
   164d0:	mov	r0, r7
   164d4:	bl	118dc <free@plt>
   164d8:	str	r5, [r4]
   164dc:	ldr	r3, [pc, #32]	; 16504 <triple_free@@Base+0x1a68>
   164e0:	mov	r2, #1
   164e4:	add	r3, pc, r3
   164e8:	str	r2, [r3]
   164ec:	pop	{r3, r4, r5, r6, r7, pc}
   164f0:	andeq	r6, r1, r8, ror sp
   164f4:	andeq	r6, r1, r0, lsr #27
   164f8:	andeq	r6, r1, r4, lsl #27
   164fc:	andeq	r6, r1, r0, asr sp
   16500:	andeq	r6, r1, r4, asr #26
   16504:	andeq	r6, r1, ip, ror #25
   16508:	ldr	r3, [pc, #12]	; 1651c <triple_free@@Base+0x1a80>
   1650c:	mvn	r2, #0
   16510:	add	r3, pc, r3
   16514:	add	r3, r3, #256	; 0x100
   16518:	b	15fc4 <triple_free@@Base+0x1528>
   1651c:	andeq	r6, r1, r0, lsl sp
   16520:	ldr	r3, [pc, #8]	; 16530 <triple_free@@Base+0x1a94>
   16524:	add	r3, pc, r3
   16528:	add	r3, r3, #256	; 0x100
   1652c:	b	15fc4 <triple_free@@Base+0x1528>
   16530:	strdeq	r6, [r1], -ip
   16534:	mov	r1, r0
   16538:	mov	r0, #0
   1653c:	b	16508 <triple_free@@Base+0x1a6c>
   16540:	mov	r2, r1
   16544:	mov	r1, r0
   16548:	mov	r0, #0
   1654c:	b	16520 <triple_free@@Base+0x1a84>
   16550:	ldr	r3, [pc, #92]	; 165b4 <triple_free@@Base+0x1b18>
   16554:	ldr	ip, [pc, #92]	; 165b8 <triple_free@@Base+0x1b1c>
   16558:	add	r3, pc, r3
   1655c:	push	{r4, r5, r6, r7, lr}
   16560:	sub	sp, sp, #60	; 0x3c
   16564:	ldr	r4, [r3, ip]
   16568:	add	r5, sp, #4
   1656c:	mov	r7, r2
   16570:	mov	r6, r0
   16574:	mov	r0, r5
   16578:	ldr	r3, [r4]
   1657c:	str	r3, [sp, #52]	; 0x34
   16580:	bl	150e4 <triple_free@@Base+0x648>
   16584:	mov	r3, r5
   16588:	mvn	r2, #0
   1658c:	mov	r0, r6
   16590:	mov	r1, r7
   16594:	bl	15fc4 <triple_free@@Base+0x1528>
   16598:	ldr	r2, [sp, #52]	; 0x34
   1659c:	ldr	r3, [r4]
   165a0:	cmp	r2, r3
   165a4:	bne	165b0 <triple_free@@Base+0x1b14>
   165a8:	add	sp, sp, #60	; 0x3c
   165ac:	pop	{r4, r5, r6, r7, pc}
   165b0:	bl	1193c <__stack_chk_fail@plt>
   165b4:	andeq	r6, r1, r0, lsr #21
   165b8:	andeq	r0, r0, r8, lsl #3
   165bc:	ldr	ip, [pc, #96]	; 16624 <triple_free@@Base+0x1b88>
   165c0:	push	{r4, r5, r6, r7, r8, lr}
   165c4:	add	ip, pc, ip
   165c8:	ldr	lr, [pc, #88]	; 16628 <triple_free@@Base+0x1b8c>
   165cc:	sub	sp, sp, #56	; 0x38
   165d0:	mov	r8, r3
   165d4:	add	r5, sp, #4
   165d8:	mov	r7, r2
   165dc:	mov	r6, r0
   165e0:	ldr	r4, [ip, lr]
   165e4:	mov	r0, r5
   165e8:	ldr	r3, [r4]
   165ec:	str	r3, [sp, #52]	; 0x34
   165f0:	bl	150e4 <triple_free@@Base+0x648>
   165f4:	mov	r2, r8
   165f8:	mov	r3, r5
   165fc:	mov	r0, r6
   16600:	mov	r1, r7
   16604:	bl	15fc4 <triple_free@@Base+0x1528>
   16608:	ldr	r2, [sp, #52]	; 0x34
   1660c:	ldr	r3, [r4]
   16610:	cmp	r2, r3
   16614:	bne	16620 <triple_free@@Base+0x1b84>
   16618:	add	sp, sp, #56	; 0x38
   1661c:	pop	{r4, r5, r6, r7, r8, pc}
   16620:	bl	1193c <__stack_chk_fail@plt>
   16624:	andeq	r6, r1, r4, lsr sl
   16628:	andeq	r0, r0, r8, lsl #3
   1662c:	mov	r2, r1
   16630:	mov	r1, r0
   16634:	mov	r0, #0
   16638:	b	16550 <triple_free@@Base+0x1ab4>
   1663c:	mov	ip, r1
   16640:	mov	r3, r2
   16644:	mov	r1, r0
   16648:	mov	r2, ip
   1664c:	mov	r0, #0
   16650:	b	165bc <triple_free@@Base+0x1b20>
   16654:	push	{r4, r5, r6, r7, r8, lr}
   16658:	mov	r5, r2
   1665c:	ldr	lr, [pc, #136]	; 166ec <triple_free@@Base+0x1c50>
   16660:	mov	r7, r0
   16664:	mov	r6, r1
   16668:	ldr	r4, [pc, #128]	; 166f0 <triple_free@@Base+0x1c54>
   1666c:	add	lr, pc, lr
   16670:	sub	sp, sp, #56	; 0x38
   16674:	add	lr, lr, #256	; 0x100
   16678:	ldr	r8, [pc, #116]	; 166f4 <triple_free@@Base+0x1c58>
   1667c:	add	r4, pc, r4
   16680:	add	ip, sp, #4
   16684:	ldm	lr!, {r0, r1, r2, r3}
   16688:	ldr	r4, [r4, r8]
   1668c:	stmia	ip!, {r0, r1, r2, r3}
   16690:	ldm	lr!, {r0, r1, r2, r3}
   16694:	ldr	r8, [r4]
   16698:	stmia	ip!, {r0, r1, r2, r3}
   1669c:	ldm	lr, {r0, r1, r2, r3}
   166a0:	str	r8, [sp, #52]	; 0x34
   166a4:	stm	ip, {r0, r1, r2, r3}
   166a8:	mov	r1, r5
   166ac:	add	r5, sp, #4
   166b0:	mov	r2, #1
   166b4:	mov	r0, r5
   166b8:	bl	16220 <triple_free@@Base+0x1784>
   166bc:	mov	r2, r6
   166c0:	mov	r3, r5
   166c4:	mov	r1, r7
   166c8:	mov	r0, #0
   166cc:	bl	15fc4 <triple_free@@Base+0x1528>
   166d0:	ldr	r2, [sp, #52]	; 0x34
   166d4:	ldr	r3, [r4]
   166d8:	cmp	r2, r3
   166dc:	bne	166e8 <triple_free@@Base+0x1c4c>
   166e0:	add	sp, sp, #56	; 0x38
   166e4:	pop	{r4, r5, r6, r7, r8, pc}
   166e8:	bl	1193c <__stack_chk_fail@plt>
   166ec:			; <UNDEFINED> instruction: 0x00016bb4
   166f0:	andeq	r6, r1, ip, ror r9
   166f4:	andeq	r0, r0, r8, lsl #3
   166f8:	mov	r2, r1
   166fc:	mvn	r1, #0
   16700:	b	16654 <triple_free@@Base+0x1bb8>
   16704:	mov	r1, #58	; 0x3a
   16708:	b	166f8 <triple_free@@Base+0x1c5c>
   1670c:	mov	r2, #58	; 0x3a
   16710:	b	16654 <triple_free@@Base+0x1bb8>
   16714:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16718:	mov	r5, r2
   1671c:	ldr	lr, [pc, #144]	; 167b4 <triple_free@@Base+0x1d18>
   16720:	mov	r8, r0
   16724:	mov	r9, r1
   16728:	mov	r7, r3
   1672c:	add	lr, pc, lr
   16730:	ldr	r4, [pc, #128]	; 167b8 <triple_free@@Base+0x1d1c>
   16734:	add	lr, lr, #256	; 0x100
   16738:	sub	sp, sp, #56	; 0x38
   1673c:	ldr	sl, [pc, #120]	; 167bc <triple_free@@Base+0x1d20>
   16740:	add	r4, pc, r4
   16744:	ldm	lr!, {r0, r1, r2, r3}
   16748:	add	ip, sp, #4
   1674c:	ldr	r4, [r4, sl]
   16750:	ldr	r6, [sp, #88]	; 0x58
   16754:	stmia	ip!, {r0, r1, r2, r3}
   16758:	ldm	lr!, {r0, r1, r2, r3}
   1675c:	ldr	sl, [r4]
   16760:	stmia	ip!, {r0, r1, r2, r3}
   16764:	ldm	lr, {r0, r1, r2, r3}
   16768:	str	sl, [sp, #52]	; 0x34
   1676c:	stm	ip, {r0, r1, r2, r3}
   16770:	mov	r2, r5
   16774:	add	r5, sp, #4
   16778:	mov	r1, r9
   1677c:	mov	r0, r5
   16780:	bl	16294 <triple_free@@Base+0x17f8>
   16784:	mov	r2, r6
   16788:	mov	r3, r5
   1678c:	mov	r0, r8
   16790:	mov	r1, r7
   16794:	bl	15fc4 <triple_free@@Base+0x1528>
   16798:	ldr	r2, [sp, #52]	; 0x34
   1679c:	ldr	r3, [r4]
   167a0:	cmp	r2, r3
   167a4:	bne	167b0 <triple_free@@Base+0x1d14>
   167a8:	add	sp, sp, #56	; 0x38
   167ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   167b0:	bl	1193c <__stack_chk_fail@plt>
   167b4:	strdeq	r6, [r1], -r4
   167b8:			; <UNDEFINED> instruction: 0x000168b8
   167bc:	andeq	r0, r0, r8, lsl #3
   167c0:	push	{lr}		; (str lr, [sp, #-4]!)
   167c4:	sub	sp, sp, #12
   167c8:	mvn	ip, #0
   167cc:	str	ip, [sp]
   167d0:	bl	16714 <triple_free@@Base+0x1c78>
   167d4:	add	sp, sp, #12
   167d8:	pop	{pc}		; (ldr pc, [sp], #4)
   167dc:	mov	ip, r1
   167e0:	mov	r3, r2
   167e4:	mov	r1, r0
   167e8:	mov	r2, ip
   167ec:	mov	r0, #0
   167f0:	b	167c0 <triple_free@@Base+0x1d24>
   167f4:	push	{lr}		; (str lr, [sp, #-4]!)
   167f8:	sub	sp, sp, #12
   167fc:	mov	lr, r1
   16800:	mov	ip, r2
   16804:	mov	r1, r0
   16808:	str	r3, [sp]
   1680c:	mov	r2, lr
   16810:	mov	r3, ip
   16814:	mov	r0, #0
   16818:	bl	16714 <triple_free@@Base+0x1c78>
   1681c:	add	sp, sp, #12
   16820:	pop	{pc}		; (ldr pc, [sp], #4)
   16824:	ldr	r3, [pc, #12]	; 16838 <triple_free@@Base+0x1d9c>
   16828:	ldr	ip, [pc, #12]	; 1683c <triple_free@@Base+0x1da0>
   1682c:	add	r3, pc, r3
   16830:	ldr	r3, [r3, ip]
   16834:	b	15fc4 <triple_free@@Base+0x1528>
   16838:	andeq	r6, r1, ip, asr #15
   1683c:	andeq	r0, r0, r0, lsl #3
   16840:	mov	r2, r1
   16844:	mov	r1, r0
   16848:	mov	r0, #0
   1684c:	b	16824 <triple_free@@Base+0x1d88>
   16850:	mvn	r2, #0
   16854:	b	16824 <triple_free@@Base+0x1d88>
   16858:	mov	r1, r0
   1685c:	mov	r0, #0
   16860:	b	16850 <triple_free@@Base+0x1db4>
   16864:	ldr	r3, [pc, #344]	; 169c4 <triple_free@@Base+0x1f28>
   16868:	ldr	r2, [pc, #344]	; 169c8 <triple_free@@Base+0x1f2c>
   1686c:	add	r3, pc, r3
   16870:	push	{r4, r5, r6, r7, r8, r9, lr}
   16874:	sub	sp, sp, #220	; 0xdc
   16878:	ldr	r7, [r3, r2]
   1687c:	mov	r9, r1
   16880:	mov	r8, r0
   16884:	ldr	r3, [r7]
   16888:	str	r3, [sp, #212]	; 0xd4
   1688c:	bl	1375c <close_stdout@@Base+0x1e8>
   16890:	mov	r5, r0
   16894:	mov	r0, r9
   16898:	bl	1375c <close_stdout@@Base+0x1e8>
   1689c:	mov	r4, r0
   168a0:	mov	r0, r5
   168a4:	bl	137b8 <close_stdout@@Base+0x244>
   168a8:	mov	r6, r0
   168ac:	mov	r0, r4
   168b0:	bl	137b8 <close_stdout@@Base+0x244>
   168b4:	cmp	r6, r0
   168b8:	beq	168dc <triple_free@@Base+0x1e40>
   168bc:	mov	r4, #0
   168c0:	ldr	r2, [sp, #212]	; 0xd4
   168c4:	mov	r0, r4
   168c8:	ldr	r3, [r7]
   168cc:	cmp	r2, r3
   168d0:	bne	169c0 <triple_free@@Base+0x1f24>
   168d4:	add	sp, sp, #220	; 0xdc
   168d8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   168dc:	mov	r0, r5
   168e0:	mov	r1, r4
   168e4:	mov	r2, r6
   168e8:	bl	11924 <memcmp@plt>
   168ec:	cmp	r0, #0
   168f0:	bne	168bc <triple_free@@Base+0x1e20>
   168f4:	mov	r0, r8
   168f8:	bl	1368c <close_stdout@@Base+0x118>
   168fc:	mov	r8, r0
   16900:	mov	r0, r9
   16904:	bl	1368c <close_stdout@@Base+0x118>
   16908:	mov	r1, r8
   1690c:	mov	r2, sp
   16910:	mov	r6, r0
   16914:	mov	r0, #3
   16918:	bl	11c3c <__xstat64@plt>
   1691c:	cmp	r0, #0
   16920:	beq	16940 <triple_free@@Base+0x1ea4>
   16924:	bl	11b04 <__errno_location@plt>
   16928:	ldr	r2, [pc, #156]	; 169cc <triple_free@@Base+0x1f30>
   1692c:	mov	r3, r8
   16930:	add	r2, pc, r2
   16934:	ldr	r1, [r0]
   16938:	mov	r0, #1
   1693c:	bl	11a14 <error@plt>
   16940:	mov	r0, #3
   16944:	mov	r1, r6
   16948:	add	r2, sp, #104	; 0x68
   1694c:	bl	11c3c <__xstat64@plt>
   16950:	cmp	r0, #0
   16954:	bne	16984 <triple_free@@Base+0x1ee8>
   16958:	ldrd	r4, [sp, #96]	; 0x60
   1695c:	ldrd	r2, [sp, #200]	; 0xc8
   16960:	cmp	r5, r3
   16964:	cmpeq	r4, r2
   16968:	movne	r4, #0
   1696c:	beq	169a4 <triple_free@@Base+0x1f08>
   16970:	mov	r0, r8
   16974:	bl	118dc <free@plt>
   16978:	mov	r0, r6
   1697c:	bl	118dc <free@plt>
   16980:	b	168c0 <triple_free@@Base+0x1e24>
   16984:	bl	11b04 <__errno_location@plt>
   16988:	ldr	r2, [pc, #64]	; 169d0 <triple_free@@Base+0x1f34>
   1698c:	mov	r3, r6
   16990:	add	r2, pc, r2
   16994:	ldr	r1, [r0]
   16998:	mov	r0, #1
   1699c:	bl	11a14 <error@plt>
   169a0:	b	16958 <triple_free@@Base+0x1ebc>
   169a4:	ldrd	r0, [sp]
   169a8:	ldrd	r2, [sp, #104]	; 0x68
   169ac:	cmp	r1, r3
   169b0:	cmpeq	r0, r2
   169b4:	movne	r4, #0
   169b8:	moveq	r4, #1
   169bc:	b	16970 <triple_free@@Base+0x1ed4>
   169c0:	bl	1193c <__stack_chk_fail@plt>
   169c4:	andeq	r6, r1, ip, lsl #15
   169c8:	andeq	r0, r0, r8, lsl #3
   169cc:	andeq	r5, r0, ip, ror #7
   169d0:	andeq	r5, r0, ip, lsl #7
   169d4:	push	{r4, r5, r6, r7, lr}
   169d8:	cmp	r1, #0
   169dc:	sub	sp, sp, #36	; 0x24
   169e0:	ldr	r7, [pc, #896]	; 16d68 <triple_free@@Base+0x22cc>
   169e4:	mov	ip, r3
   169e8:	mov	r5, r0
   169ec:	add	r7, pc, r7
   169f0:	ldr	r4, [sp, #56]	; 0x38
   169f4:	ldr	r6, [sp, #60]	; 0x3c
   169f8:	beq	16d3c <triple_free@@Base+0x22a0>
   169fc:	str	r2, [sp]
   16a00:	mov	r3, r1
   16a04:	ldr	r2, [pc, #864]	; 16d6c <triple_free@@Base+0x22d0>
   16a08:	mov	r1, #1
   16a0c:	str	ip, [sp, #4]
   16a10:	add	r2, pc, r2
   16a14:	bl	11b4c <__fprintf_chk@plt>
   16a18:	ldr	r1, [pc, #848]	; 16d70 <triple_free@@Base+0x22d4>
   16a1c:	mov	r2, #5
   16a20:	mov	r0, #0
   16a24:	add	r1, pc, r1
   16a28:	bl	11930 <dcgettext@plt>
   16a2c:	ldr	r2, [pc, #832]	; 16d74 <triple_free@@Base+0x22d8>
   16a30:	movw	ip, #2013	; 0x7dd
   16a34:	mov	r1, #1
   16a38:	ldr	r2, [r7, r2]
   16a3c:	str	ip, [sp]
   16a40:	mov	r3, r0
   16a44:	mov	r0, r5
   16a48:	bl	11b4c <__fprintf_chk@plt>
   16a4c:	ldr	r1, [pc, #804]	; 16d78 <triple_free@@Base+0x22dc>
   16a50:	mov	r0, #0
   16a54:	mov	r2, #5
   16a58:	add	r1, pc, r1
   16a5c:	bl	11930 <dcgettext@plt>
   16a60:	mov	r1, r5
   16a64:	bl	1187c <fputs_unlocked@plt>
   16a68:	cmp	r6, #9
   16a6c:	addls	pc, pc, r6, lsl #2
   16a70:	b	16d58 <triple_free@@Base+0x22bc>
   16a74:	b	16b08 <triple_free@@Base+0x206c>
   16a78:	b	16b0c <triple_free@@Base+0x2070>
   16a7c:	b	16b3c <triple_free@@Base+0x20a0>
   16a80:	b	16b70 <triple_free@@Base+0x20d4>
   16a84:	b	16bac <triple_free@@Base+0x2110>
   16a88:	b	16bec <triple_free@@Base+0x2150>
   16a8c:	b	16c34 <triple_free@@Base+0x2198>
   16a90:	b	16c84 <triple_free@@Base+0x21e8>
   16a94:	b	16cdc <triple_free@@Base+0x2240>
   16a98:	b	16a9c <triple_free@@Base+0x2000>
   16a9c:	ldr	r1, [pc, #728]	; 16d7c <triple_free@@Base+0x22e0>
   16aa0:	mov	r0, #0
   16aa4:	add	r1, pc, r1
   16aa8:	mov	r2, #5
   16aac:	bl	11930 <dcgettext@plt>
   16ab0:	ldm	r4, {r3, ip}
   16ab4:	mov	r1, #1
   16ab8:	str	ip, [sp]
   16abc:	ldr	ip, [r4, #8]
   16ac0:	str	ip, [sp, #4]
   16ac4:	ldr	ip, [r4, #12]
   16ac8:	str	ip, [sp, #8]
   16acc:	ldr	ip, [r4, #16]
   16ad0:	str	ip, [sp, #12]
   16ad4:	ldr	ip, [r4, #20]
   16ad8:	str	ip, [sp, #16]
   16adc:	ldr	ip, [r4, #24]
   16ae0:	str	ip, [sp, #20]
   16ae4:	ldr	ip, [r4, #28]
   16ae8:	str	ip, [sp, #24]
   16aec:	ldr	ip, [r4, #32]
   16af0:	str	ip, [sp, #28]
   16af4:	mov	r2, r0
   16af8:	mov	r0, r5
   16afc:	bl	11b4c <__fprintf_chk@plt>
   16b00:	add	sp, sp, #36	; 0x24
   16b04:	pop	{r4, r5, r6, r7, pc}
   16b08:	bl	11c60 <abort@plt>
   16b0c:	ldr	r1, [pc, #620]	; 16d80 <triple_free@@Base+0x22e4>
   16b10:	mov	r2, #5
   16b14:	mov	r0, #0
   16b18:	add	r1, pc, r1
   16b1c:	bl	11930 <dcgettext@plt>
   16b20:	ldr	r3, [r4]
   16b24:	mov	r1, #1
   16b28:	mov	r2, r0
   16b2c:	mov	r0, r5
   16b30:	add	sp, sp, #36	; 0x24
   16b34:	pop	{r4, r5, r6, r7, lr}
   16b38:	b	11b4c <__fprintf_chk@plt>
   16b3c:	ldr	r1, [pc, #576]	; 16d84 <triple_free@@Base+0x22e8>
   16b40:	mov	r2, #5
   16b44:	mov	r0, #0
   16b48:	add	r1, pc, r1
   16b4c:	bl	11930 <dcgettext@plt>
   16b50:	ldm	r4, {r3, ip}
   16b54:	mov	r1, #1
   16b58:	str	ip, [sp, #56]	; 0x38
   16b5c:	mov	r2, r0
   16b60:	mov	r0, r5
   16b64:	add	sp, sp, #36	; 0x24
   16b68:	pop	{r4, r5, r6, r7, lr}
   16b6c:	b	11b4c <__fprintf_chk@plt>
   16b70:	ldr	r1, [pc, #528]	; 16d88 <triple_free@@Base+0x22ec>
   16b74:	mov	r2, #5
   16b78:	mov	r0, #0
   16b7c:	add	r1, pc, r1
   16b80:	bl	11930 <dcgettext@plt>
   16b84:	ldm	r4, {r3, ip}
   16b88:	mov	r1, #1
   16b8c:	str	ip, [sp, #56]	; 0x38
   16b90:	ldr	ip, [r4, #8]
   16b94:	str	ip, [sp, #60]	; 0x3c
   16b98:	mov	r2, r0
   16b9c:	mov	r0, r5
   16ba0:	add	sp, sp, #36	; 0x24
   16ba4:	pop	{r4, r5, r6, r7, lr}
   16ba8:	b	11b4c <__fprintf_chk@plt>
   16bac:	ldr	r1, [pc, #472]	; 16d8c <triple_free@@Base+0x22f0>
   16bb0:	mov	r2, #5
   16bb4:	mov	r0, #0
   16bb8:	add	r1, pc, r1
   16bbc:	bl	11930 <dcgettext@plt>
   16bc0:	ldm	r4, {r3, ip}
   16bc4:	mov	r1, #1
   16bc8:	str	ip, [sp]
   16bcc:	ldr	ip, [r4, #8]
   16bd0:	str	ip, [sp, #4]
   16bd4:	ldr	ip, [r4, #12]
   16bd8:	str	ip, [sp, #8]
   16bdc:	mov	r2, r0
   16be0:	mov	r0, r5
   16be4:	bl	11b4c <__fprintf_chk@plt>
   16be8:	b	16b00 <triple_free@@Base+0x2064>
   16bec:	ldr	r1, [pc, #412]	; 16d90 <triple_free@@Base+0x22f4>
   16bf0:	mov	r2, #5
   16bf4:	mov	r0, #0
   16bf8:	add	r1, pc, r1
   16bfc:	bl	11930 <dcgettext@plt>
   16c00:	ldm	r4, {r3, ip}
   16c04:	mov	r1, #1
   16c08:	str	ip, [sp]
   16c0c:	ldr	ip, [r4, #8]
   16c10:	str	ip, [sp, #4]
   16c14:	ldr	ip, [r4, #12]
   16c18:	str	ip, [sp, #8]
   16c1c:	ldr	ip, [r4, #16]
   16c20:	str	ip, [sp, #12]
   16c24:	mov	r2, r0
   16c28:	mov	r0, r5
   16c2c:	bl	11b4c <__fprintf_chk@plt>
   16c30:	b	16b00 <triple_free@@Base+0x2064>
   16c34:	ldr	r1, [pc, #344]	; 16d94 <triple_free@@Base+0x22f8>
   16c38:	mov	r2, #5
   16c3c:	mov	r0, #0
   16c40:	add	r1, pc, r1
   16c44:	bl	11930 <dcgettext@plt>
   16c48:	ldm	r4, {r3, ip}
   16c4c:	mov	r1, #1
   16c50:	str	ip, [sp]
   16c54:	ldr	ip, [r4, #8]
   16c58:	str	ip, [sp, #4]
   16c5c:	ldr	ip, [r4, #12]
   16c60:	str	ip, [sp, #8]
   16c64:	ldr	ip, [r4, #16]
   16c68:	str	ip, [sp, #12]
   16c6c:	ldr	ip, [r4, #20]
   16c70:	str	ip, [sp, #16]
   16c74:	mov	r2, r0
   16c78:	mov	r0, r5
   16c7c:	bl	11b4c <__fprintf_chk@plt>
   16c80:	b	16b00 <triple_free@@Base+0x2064>
   16c84:	ldr	r1, [pc, #268]	; 16d98 <triple_free@@Base+0x22fc>
   16c88:	mov	r2, #5
   16c8c:	mov	r0, #0
   16c90:	add	r1, pc, r1
   16c94:	bl	11930 <dcgettext@plt>
   16c98:	ldm	r4, {r3, ip}
   16c9c:	mov	r1, #1
   16ca0:	str	ip, [sp]
   16ca4:	ldr	ip, [r4, #8]
   16ca8:	str	ip, [sp, #4]
   16cac:	ldr	ip, [r4, #12]
   16cb0:	str	ip, [sp, #8]
   16cb4:	ldr	ip, [r4, #16]
   16cb8:	str	ip, [sp, #12]
   16cbc:	ldr	ip, [r4, #20]
   16cc0:	str	ip, [sp, #16]
   16cc4:	ldr	ip, [r4, #24]
   16cc8:	str	ip, [sp, #20]
   16ccc:	mov	r2, r0
   16cd0:	mov	r0, r5
   16cd4:	bl	11b4c <__fprintf_chk@plt>
   16cd8:	b	16b00 <triple_free@@Base+0x2064>
   16cdc:	ldr	r1, [pc, #184]	; 16d9c <triple_free@@Base+0x2300>
   16ce0:	mov	r2, #5
   16ce4:	mov	r0, #0
   16ce8:	add	r1, pc, r1
   16cec:	bl	11930 <dcgettext@plt>
   16cf0:	ldm	r4, {r3, ip}
   16cf4:	mov	r1, #1
   16cf8:	str	ip, [sp]
   16cfc:	ldr	ip, [r4, #8]
   16d00:	str	ip, [sp, #4]
   16d04:	ldr	ip, [r4, #12]
   16d08:	str	ip, [sp, #8]
   16d0c:	ldr	ip, [r4, #16]
   16d10:	str	ip, [sp, #12]
   16d14:	ldr	ip, [r4, #20]
   16d18:	str	ip, [sp, #16]
   16d1c:	ldr	ip, [r4, #24]
   16d20:	str	ip, [sp, #20]
   16d24:	ldr	ip, [r4, #28]
   16d28:	str	ip, [sp, #24]
   16d2c:	mov	r2, r0
   16d30:	mov	r0, r5
   16d34:	bl	11b4c <__fprintf_chk@plt>
   16d38:	b	16b00 <triple_free@@Base+0x2064>
   16d3c:	str	r3, [sp]
   16d40:	mov	r3, r2
   16d44:	ldr	r2, [pc, #84]	; 16da0 <triple_free@@Base+0x2304>
   16d48:	mov	r1, #1
   16d4c:	add	r2, pc, r2
   16d50:	bl	11b4c <__fprintf_chk@plt>
   16d54:	b	16a18 <triple_free@@Base+0x1f7c>
   16d58:	ldr	r1, [pc, #68]	; 16da4 <triple_free@@Base+0x2308>
   16d5c:	mov	r0, #0
   16d60:	add	r1, pc, r1
   16d64:	b	16aa8 <triple_free@@Base+0x200c>
   16d68:	andeq	r6, r1, ip, lsl #12
   16d6c:	andeq	r5, r0, r0, asr r4
   16d70:	andeq	r5, r0, r0, asr r4
   16d74:	andeq	r0, r0, r0, asr #3
   16d78:	andeq	r5, r0, r0, lsr #8
   16d7c:	andeq	r5, r0, ip, lsr #11
   16d80:	andeq	r5, r0, ip, lsr #8
   16d84:	andeq	r5, r0, ip, lsl #8
   16d88:	strdeq	r5, [r0], -r0
   16d8c:	ldrdeq	r5, [r0], -r0
   16d90:			; <UNDEFINED> instruction: 0x000053b0
   16d94:	andeq	r5, r0, ip, lsl #7
   16d98:	andeq	r5, r0, r4, ror #6
   16d9c:	andeq	r5, r0, r8, lsr r3
   16da0:	andeq	r5, r0, r0, lsr #2
   16da4:	andeq	r5, r0, r4, lsr #6
   16da8:	push	{r4, r5, lr}
   16dac:	sub	sp, sp, #12
   16db0:	ldr	r5, [sp, #24]
   16db4:	ldr	ip, [r5]
   16db8:	cmp	ip, #0
   16dbc:	beq	16dd8 <triple_free@@Base+0x233c>
   16dc0:	mov	lr, r5
   16dc4:	mov	ip, #0
   16dc8:	ldr	r4, [lr, #4]!
   16dcc:	add	ip, ip, #1
   16dd0:	cmp	r4, #0
   16dd4:	bne	16dc8 <triple_free@@Base+0x232c>
   16dd8:	stm	sp, {r5, ip}
   16ddc:	bl	169d4 <triple_free@@Base+0x1f38>
   16de0:	add	sp, sp, #12
   16de4:	pop	{r4, r5, pc}
   16de8:	push	{r4, r5, r6, r7, lr}
   16dec:	sub	sp, sp, #60	; 0x3c
   16df0:	ldr	r4, [pc, #100]	; 16e5c <triple_free@@Base+0x23c0>
   16df4:	mov	ip, #0
   16df8:	ldr	r5, [pc, #96]	; 16e60 <triple_free@@Base+0x23c4>
   16dfc:	mov	lr, ip
   16e00:	add	r4, pc, r4
   16e04:	ldr	r6, [sp, #80]	; 0x50
   16e08:	ldr	r7, [r4, r5]
   16e0c:	add	r5, sp, #12
   16e10:	ldr	r4, [r7]
   16e14:	str	r4, [sp, #52]	; 0x34
   16e18:	ldr	r4, [r6, ip]
   16e1c:	cmp	r4, #0
   16e20:	str	r4, [r5, ip]
   16e24:	beq	16e38 <triple_free@@Base+0x239c>
   16e28:	add	lr, lr, #1
   16e2c:	add	ip, ip, #4
   16e30:	cmp	lr, #10
   16e34:	bne	16e18 <triple_free@@Base+0x237c>
   16e38:	stm	sp, {r5, lr}
   16e3c:	bl	169d4 <triple_free@@Base+0x1f38>
   16e40:	ldr	r2, [sp, #52]	; 0x34
   16e44:	ldr	r3, [r7]
   16e48:	cmp	r2, r3
   16e4c:	bne	16e58 <triple_free@@Base+0x23bc>
   16e50:	add	sp, sp, #60	; 0x3c
   16e54:	pop	{r4, r5, r6, r7, pc}
   16e58:	bl	1193c <__stack_chk_fail@plt>
   16e5c:	strdeq	r6, [r1], -r8
   16e60:	andeq	r0, r0, r8, lsl #3
   16e64:	push	{r3}		; (str r3, [sp, #-4]!)
   16e68:	push	{r4, lr}
   16e6c:	sub	sp, sp, #20
   16e70:	ldr	lr, [pc, #72]	; 16ec0 <triple_free@@Base+0x2424>
   16e74:	add	ip, sp, #32
   16e78:	ldr	r4, [pc, #68]	; 16ec4 <triple_free@@Base+0x2428>
   16e7c:	add	lr, pc, lr
   16e80:	ldr	r3, [sp, #28]
   16e84:	ldr	r4, [lr, r4]
   16e88:	str	ip, [sp]
   16e8c:	str	ip, [sp, #8]
   16e90:	ldr	ip, [r4]
   16e94:	str	ip, [sp, #12]
   16e98:	bl	16de8 <triple_free@@Base+0x234c>
   16e9c:	ldr	r2, [sp, #12]
   16ea0:	ldr	r3, [r4]
   16ea4:	cmp	r2, r3
   16ea8:	bne	16ebc <triple_free@@Base+0x2420>
   16eac:	add	sp, sp, #20
   16eb0:	pop	{r4, lr}
   16eb4:	add	sp, sp, #4
   16eb8:	bx	lr
   16ebc:	bl	1193c <__stack_chk_fail@plt>
   16ec0:	andeq	r6, r1, ip, ror r1
   16ec4:	andeq	r0, r0, r8, lsl #3
   16ec8:	ldr	r1, [pc, #132]	; 16f54 <triple_free@@Base+0x24b8>
   16ecc:	mov	r2, #5
   16ed0:	push	{r4, lr}
   16ed4:	add	r1, pc, r1
   16ed8:	mov	r0, #0
   16edc:	ldr	r4, [pc, #116]	; 16f58 <triple_free@@Base+0x24bc>
   16ee0:	bl	11930 <dcgettext@plt>
   16ee4:	ldr	r2, [pc, #112]	; 16f5c <triple_free@@Base+0x24c0>
   16ee8:	add	r4, pc, r4
   16eec:	add	r2, pc, r2
   16ef0:	mov	r1, r0
   16ef4:	mov	r0, #1
   16ef8:	bl	11b34 <__printf_chk@plt>
   16efc:	ldr	r1, [pc, #92]	; 16f60 <triple_free@@Base+0x24c4>
   16f00:	mov	r2, #5
   16f04:	mov	r0, #0
   16f08:	add	r1, pc, r1
   16f0c:	bl	11930 <dcgettext@plt>
   16f10:	ldr	r2, [pc, #76]	; 16f64 <triple_free@@Base+0x24c8>
   16f14:	ldr	r3, [pc, #76]	; 16f68 <triple_free@@Base+0x24cc>
   16f18:	add	r2, pc, r2
   16f1c:	add	r3, pc, r3
   16f20:	mov	r1, r0
   16f24:	mov	r0, #1
   16f28:	bl	11b34 <__printf_chk@plt>
   16f2c:	ldr	r1, [pc, #56]	; 16f6c <triple_free@@Base+0x24d0>
   16f30:	mov	r0, #0
   16f34:	mov	r2, #5
   16f38:	add	r1, pc, r1
   16f3c:	bl	11930 <dcgettext@plt>
   16f40:	ldr	r3, [pc, #40]	; 16f70 <triple_free@@Base+0x24d4>
   16f44:	ldr	r3, [r4, r3]
   16f48:	pop	{r4, lr}
   16f4c:	ldr	r1, [r3]
   16f50:	b	1187c <fputs_unlocked@plt>
   16f54:	andeq	r5, r0, ip, ror #3
   16f58:	andeq	r6, r1, r0, lsl r1
   16f5c:	andeq	r5, r0, ip, ror #3
   16f60:	andeq	r5, r0, r8, ror #3
   16f64:			; <UNDEFINED> instruction: 0x00004ab0
   16f68:			; <UNDEFINED> instruction: 0x00004abc
   16f6c:	andeq	r5, r0, ip, asr #3
   16f70:			; <UNDEFINED> instruction: 0x000001b0
   16f74:	push	{r4, lr}
   16f78:	mov	r4, r0
   16f7c:	bl	11a44 <malloc@plt>
   16f80:	rsbs	r3, r0, #1
   16f84:	movcc	r3, #0
   16f88:	cmp	r4, #0
   16f8c:	moveq	r3, #0
   16f90:	cmp	r3, #0
   16f94:	popeq	{r4, pc}
   16f98:	bl	17188 <triple_free@@Base+0x26ec>
   16f9c:	push	{r3, r4, r5, lr}
   16fa0:	mov	r4, r0
   16fa4:	mvn	r0, #0
   16fa8:	mov	r5, r1
   16fac:	bl	1a8dc <fts_children@@Base+0xe18>
   16fb0:	cmp	r0, r4
   16fb4:	bcc	16fc4 <triple_free@@Base+0x2528>
   16fb8:	mul	r0, r4, r5
   16fbc:	pop	{r3, r4, r5, lr}
   16fc0:	b	16f74 <triple_free@@Base+0x24d8>
   16fc4:	bl	17188 <triple_free@@Base+0x26ec>
   16fc8:	b	16f74 <triple_free@@Base+0x24d8>
   16fcc:	rsbs	r3, r1, #1
   16fd0:	push	{r4, lr}
   16fd4:	movcc	r3, #0
   16fd8:	cmp	r0, #0
   16fdc:	mov	r4, r1
   16fe0:	moveq	r3, #0
   16fe4:	cmp	r3, #0
   16fe8:	bne	1700c <triple_free@@Base+0x2570>
   16fec:	bl	11954 <realloc@plt>
   16ff0:	rsbs	r3, r0, #1
   16ff4:	movcc	r3, #0
   16ff8:	cmp	r4, #0
   16ffc:	moveq	r3, #0
   17000:	cmp	r3, #0
   17004:	popeq	{r4, pc}
   17008:	bl	17188 <triple_free@@Base+0x26ec>
   1700c:	bl	118dc <free@plt>
   17010:	mov	r0, #0
   17014:	pop	{r4, pc}
   17018:	push	{r4, r5, r6, lr}
   1701c:	mov	r5, r1
   17020:	mov	r6, r0
   17024:	mov	r1, r2
   17028:	mvn	r0, #0
   1702c:	mov	r4, r2
   17030:	bl	1a8dc <fts_children@@Base+0xe18>
   17034:	cmp	r0, r5
   17038:	bcc	1704c <triple_free@@Base+0x25b0>
   1703c:	mov	r0, r6
   17040:	mul	r1, r5, r4
   17044:	pop	{r4, r5, r6, lr}
   17048:	b	16fcc <triple_free@@Base+0x2530>
   1704c:	bl	17188 <triple_free@@Base+0x26ec>
   17050:	push	{r3, r4, r5, r6, r7, lr}
   17054:	subs	r7, r0, #0
   17058:	mov	r5, r1
   1705c:	mov	r6, r2
   17060:	ldr	r4, [r1]
   17064:	beq	1709c <triple_free@@Base+0x2600>
   17068:	movw	r0, #43690	; 0xaaaa
   1706c:	mov	r1, r2
   17070:	bfi	r0, r0, #16, #16
   17074:	bl	1a8dc <fts_children@@Base+0xe18>
   17078:	cmp	r4, r0
   1707c:	addcc	r3, r4, #1
   17080:	addcc	r4, r4, r3, lsr #1
   17084:	bcs	170c0 <triple_free@@Base+0x2624>
   17088:	str	r4, [r5]
   1708c:	mov	r0, r7
   17090:	mul	r1, r6, r4
   17094:	pop	{r3, r4, r5, r6, r7, lr}
   17098:	b	16fcc <triple_free@@Base+0x2530>
   1709c:	cmp	r4, #0
   170a0:	bne	17088 <triple_free@@Base+0x25ec>
   170a4:	mov	r0, #64	; 0x40
   170a8:	mov	r1, r2
   170ac:	bl	1a8dc <fts_children@@Base+0xe18>
   170b0:	cmp	r0, #0
   170b4:	movne	r4, r0
   170b8:	addeq	r4, r0, #1
   170bc:	b	17088 <triple_free@@Base+0x25ec>
   170c0:	bl	17188 <triple_free@@Base+0x26ec>
   170c4:	cmp	r0, #0
   170c8:	push	{r3, lr}
   170cc:	ldr	r3, [r1]
   170d0:	beq	170fc <triple_free@@Base+0x2660>
   170d4:	movw	r2, #43689	; 0xaaa9
   170d8:	movt	r2, #43690	; 0xaaaa
   170dc:	cmp	r3, r2
   170e0:	addls	r2, r3, #1
   170e4:	addls	r3, r3, r2, lsr #1
   170e8:	bhi	17114 <triple_free@@Base+0x2678>
   170ec:	str	r3, [r1]
   170f0:	mov	r1, r3
   170f4:	pop	{r3, lr}
   170f8:	b	16fcc <triple_free@@Base+0x2530>
   170fc:	cmp	r3, #0
   17100:	moveq	r3, #64	; 0x40
   17104:	str	r3, [r1]
   17108:	mov	r1, r3
   1710c:	pop	{r3, lr}
   17110:	b	16fcc <triple_free@@Base+0x2530>
   17114:	bl	17188 <triple_free@@Base+0x26ec>
   17118:	push	{r4, lr}
   1711c:	mov	r4, r0
   17120:	bl	16f74 <triple_free@@Base+0x24d8>
   17124:	mov	r2, r4
   17128:	mov	r1, #0
   1712c:	pop	{r4, lr}
   17130:	b	11b1c <memset@plt>
   17134:	push	{r3, lr}
   17138:	bl	11870 <calloc@plt>
   1713c:	cmp	r0, #0
   17140:	popne	{r3, pc}
   17144:	bl	17188 <triple_free@@Base+0x26ec>
   17148:	push	{r3, r4, r5, lr}
   1714c:	mov	r4, r1
   17150:	mov	r5, r0
   17154:	mov	r0, r1
   17158:	bl	16f74 <triple_free@@Base+0x24d8>
   1715c:	mov	r1, r5
   17160:	mov	r2, r4
   17164:	pop	{r3, r4, r5, lr}
   17168:	b	118f4 <memcpy@plt>
   1716c:	push	{r4, lr}
   17170:	mov	r4, r0
   17174:	bl	11abc <strlen@plt>
   17178:	add	r1, r0, #1
   1717c:	mov	r0, r4
   17180:	pop	{r4, lr}
   17184:	b	17148 <triple_free@@Base+0x26ac>
   17188:	ldr	r3, [pc, #64]	; 171d0 <triple_free@@Base+0x2734>
   1718c:	mov	r2, #5
   17190:	ldr	ip, [pc, #60]	; 171d4 <triple_free@@Base+0x2738>
   17194:	mov	r0, #0
   17198:	add	r3, pc, r3
   1719c:	ldr	r1, [pc, #52]	; 171d8 <triple_free@@Base+0x273c>
   171a0:	push	{r4, lr}
   171a4:	add	r1, pc, r1
   171a8:	ldr	r3, [r3, ip]
   171ac:	ldr	r4, [r3]
   171b0:	bl	11930 <dcgettext@plt>
   171b4:	ldr	r2, [pc, #32]	; 171dc <triple_free@@Base+0x2740>
   171b8:	mov	r1, #0
   171bc:	add	r2, pc, r2
   171c0:	mov	r3, r0
   171c4:	mov	r0, r4
   171c8:	bl	11a14 <error@plt>
   171cc:	bl	11c60 <abort@plt>
   171d0:	andeq	r5, r1, r0, ror #28
   171d4:			; <UNDEFINED> instruction: 0x000001b4
   171d8:	ldrdeq	r4, [r0], -r0
   171dc:	andeq	r4, r0, r0, ror #22
   171e0:	push	{r3, lr}
   171e4:	orr	r1, r1, #512	; 0x200
   171e8:	bl	18d24 <fts_open@@Base>
   171ec:	cmp	r0, #0
   171f0:	popne	{r3, pc}
   171f4:	bl	11b04 <__errno_location@plt>
   171f8:	ldr	r3, [r0]
   171fc:	cmp	r3, #22
   17200:	beq	17208 <triple_free@@Base+0x276c>
   17204:	bl	17188 <triple_free@@Base+0x26ec>
   17208:	ldr	r0, [pc, #24]	; 17228 <triple_free@@Base+0x278c>
   1720c:	mov	r2, #41	; 0x29
   17210:	ldr	r1, [pc, #20]	; 1722c <triple_free@@Base+0x2790>
   17214:	ldr	r3, [pc, #20]	; 17230 <triple_free@@Base+0x2794>
   17218:	add	r0, pc, r0
   1721c:	add	r1, pc, r1
   17220:	add	r3, pc, r3
   17224:	bl	11ca8 <__assert_fail@plt>
   17228:	andeq	r4, r0, ip, ror pc
   1722c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   17230:	andeq	r4, r0, r8, ror #30
   17234:	ldr	r3, [r0, #48]	; 0x30
   17238:	and	r3, r3, #17
   1723c:	cmp	r3, #16
   17240:	beq	17264 <triple_free@@Base+0x27c8>
   17244:	cmp	r3, #17
   17248:	beq	17254 <triple_free@@Base+0x27b8>
   1724c:	mov	r0, #0
   17250:	bx	lr
   17254:	ldr	r0, [r1, #48]	; 0x30
   17258:	adds	r0, r0, #0
   1725c:	movne	r0, #1
   17260:	bx	lr
   17264:	mov	r0, #1
   17268:	bx	lr
   1726c:	mov	r0, #0
   17270:	push	{r4, lr}
   17274:	mov	r1, r0
   17278:	bl	11a98 <getcwd@plt>
   1727c:	subs	r4, r0, #0
   17280:	beq	1728c <triple_free@@Base+0x27f0>
   17284:	mov	r0, r4
   17288:	pop	{r4, pc}
   1728c:	bl	11b04 <__errno_location@plt>
   17290:	ldr	r3, [r0]
   17294:	cmp	r3, #12
   17298:	bne	17284 <triple_free@@Base+0x27e8>
   1729c:	bl	17188 <triple_free@@Base+0x26ec>
   172a0:	ldr	ip, [pc, #1852]	; 179e4 <triple_free@@Base+0x2f48>
   172a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   172a8:	mov	fp, r2
   172ac:	ldr	r2, [pc, #1844]	; 179e8 <triple_free@@Base+0x2f4c>
   172b0:	add	ip, pc, ip
   172b4:	mov	r9, r3
   172b8:	sub	sp, sp, #36	; 0x24
   172bc:	mov	r3, ip
   172c0:	cmp	fp, #36	; 0x24
   172c4:	ldr	sl, [ip, r2]
   172c8:	mov	r5, r0
   172cc:	mov	r8, r1
   172d0:	ldr	r6, [sp, #72]	; 0x48
   172d4:	ldr	r3, [sl]
   172d8:	str	r3, [sp, #28]
   172dc:	bhi	179c4 <triple_free@@Base+0x2f28>
   172e0:	cmp	r1, #0
   172e4:	addeq	r8, sp, #24
   172e8:	bl	11a8c <__ctype_b_loc@plt>
   172ec:	ldrb	r3, [r5]
   172f0:	mov	r1, r5
   172f4:	ldr	r0, [r0]
   172f8:	b	17300 <triple_free@@Base+0x2864>
   172fc:	ldrb	r3, [r1, #1]!
   17300:	lsl	r2, r3, #1
   17304:	ldrh	r4, [r0, r2]
   17308:	and	r4, r4, #8192	; 0x2000
   1730c:	uxth	r4, r4
   17310:	cmp	r4, #0
   17314:	bne	172fc <triple_free@@Base+0x2860>
   17318:	cmp	r3, #45	; 0x2d
   1731c:	bne	1733c <triple_free@@Base+0x28a0>
   17320:	mov	r0, #4
   17324:	ldr	r2, [sp, #28]
   17328:	ldr	r3, [sl]
   1732c:	cmp	r2, r3
   17330:	bne	179c0 <triple_free@@Base+0x2f24>
   17334:	add	sp, sp, #36	; 0x24
   17338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1733c:	bl	11b04 <__errno_location@plt>
   17340:	mov	r2, fp
   17344:	mov	r1, r8
   17348:	mov	r3, r4
   1734c:	str	r4, [r0]
   17350:	mov	r7, r0
   17354:	mov	r0, r5
   17358:	bl	11900 <__strtoull_internal@plt>
   1735c:	ldr	fp, [r8]
   17360:	cmp	fp, r5
   17364:	strd	r0, [sp]
   17368:	beq	174e4 <triple_free@@Base+0x2a48>
   1736c:	ldr	ip, [r7]
   17370:	cmp	ip, #0
   17374:	bne	173a0 <triple_free@@Base+0x2904>
   17378:	mov	r7, ip
   1737c:	cmp	r6, #0
   17380:	beq	17950 <triple_free@@Base+0x2eb4>
   17384:	ldrb	r5, [fp]
   17388:	cmp	r5, #0
   1738c:	bne	173b0 <triple_free@@Base+0x2914>
   17390:	ldrd	r2, [sp]
   17394:	mov	r0, r7
   17398:	strd	r2, [r9]
   1739c:	b	17324 <triple_free@@Base+0x2888>
   173a0:	cmp	ip, #34	; 0x22
   173a4:	moveq	r7, #1
   173a8:	bne	17320 <triple_free@@Base+0x2884>
   173ac:	b	1737c <triple_free@@Base+0x28e0>
   173b0:	mov	r0, r6
   173b4:	mov	r1, r5
   173b8:	bl	11ac8 <strchr@plt>
   173bc:	cmp	r0, #0
   173c0:	beq	17520 <triple_free@@Base+0x2a84>
   173c4:	mov	r0, r6
   173c8:	mov	r1, #48	; 0x30
   173cc:	bl	11ac8 <strchr@plt>
   173d0:	cmp	r0, #0
   173d4:	beq	173f4 <triple_free@@Base+0x2958>
   173d8:	ldrb	r3, [fp, #1]
   173dc:	cmp	r3, #68	; 0x44
   173e0:	beq	17978 <triple_free@@Base+0x2edc>
   173e4:	cmp	r3, #105	; 0x69
   173e8:	beq	17960 <triple_free@@Base+0x2ec4>
   173ec:	cmp	r3, #66	; 0x42
   173f0:	beq	17978 <triple_free@@Base+0x2edc>
   173f4:	mov	r6, #1
   173f8:	mov	r4, #1024	; 0x400
   173fc:	sub	r5, r5, #66	; 0x42
   17400:	cmp	r5, #53	; 0x35
   17404:	addls	pc, pc, r5, lsl #2
   17408:	b	17520 <triple_free@@Base+0x2a84>
   1740c:	b	177c8 <triple_free@@Base+0x2d2c>
   17410:	b	17520 <triple_free@@Base+0x2a84>
   17414:	b	17520 <triple_free@@Base+0x2a84>
   17418:	b	1775c <triple_free@@Base+0x2cc0>
   1741c:	b	17520 <triple_free@@Base+0x2a84>
   17420:	b	176f0 <triple_free@@Base+0x2c54>
   17424:	b	17520 <triple_free@@Base+0x2a84>
   17428:	b	17520 <triple_free@@Base+0x2a84>
   1742c:	b	17520 <triple_free@@Base+0x2a84>
   17430:	b	17698 <triple_free@@Base+0x2bfc>
   17434:	b	17520 <triple_free@@Base+0x2a84>
   17438:	b	17870 <triple_free@@Base+0x2dd4>
   1743c:	b	17520 <triple_free@@Base+0x2a84>
   17440:	b	17520 <triple_free@@Base+0x2a84>
   17444:	b	17804 <triple_free@@Base+0x2d68>
   17448:	b	17520 <triple_free@@Base+0x2a84>
   1744c:	b	17520 <triple_free@@Base+0x2a84>
   17450:	b	17520 <triple_free@@Base+0x2a84>
   17454:	b	178e4 <triple_free@@Base+0x2e48>
   17458:	b	17520 <triple_free@@Base+0x2a84>
   1745c:	b	17520 <triple_free@@Base+0x2a84>
   17460:	b	17520 <triple_free@@Base+0x2a84>
   17464:	b	17520 <triple_free@@Base+0x2a84>
   17468:	b	1762c <triple_free@@Base+0x2b90>
   1746c:	b	175b4 <triple_free@@Base+0x2b18>
   17470:	b	17520 <triple_free@@Base+0x2a84>
   17474:	b	17520 <triple_free@@Base+0x2a84>
   17478:	b	17520 <triple_free@@Base+0x2a84>
   1747c:	b	17520 <triple_free@@Base+0x2a84>
   17480:	b	17520 <triple_free@@Base+0x2a84>
   17484:	b	17520 <triple_free@@Base+0x2a84>
   17488:	b	17520 <triple_free@@Base+0x2a84>
   1748c:	b	17578 <triple_free@@Base+0x2adc>
   17490:	b	17530 <triple_free@@Base+0x2a94>
   17494:	b	17520 <triple_free@@Base+0x2a84>
   17498:	b	17520 <triple_free@@Base+0x2a84>
   1749c:	b	17520 <triple_free@@Base+0x2a84>
   174a0:	b	176f0 <triple_free@@Base+0x2c54>
   174a4:	b	17520 <triple_free@@Base+0x2a84>
   174a8:	b	17520 <triple_free@@Base+0x2a84>
   174ac:	b	17520 <triple_free@@Base+0x2a84>
   174b0:	b	17698 <triple_free@@Base+0x2bfc>
   174b4:	b	17520 <triple_free@@Base+0x2a84>
   174b8:	b	17870 <triple_free@@Base+0x2dd4>
   174bc:	b	17520 <triple_free@@Base+0x2a84>
   174c0:	b	17520 <triple_free@@Base+0x2a84>
   174c4:	b	17520 <triple_free@@Base+0x2a84>
   174c8:	b	17520 <triple_free@@Base+0x2a84>
   174cc:	b	17520 <triple_free@@Base+0x2a84>
   174d0:	b	17520 <triple_free@@Base+0x2a84>
   174d4:	b	178e4 <triple_free@@Base+0x2e48>
   174d8:	b	17520 <triple_free@@Base+0x2a84>
   174dc:	b	17520 <triple_free@@Base+0x2a84>
   174e0:	b	17550 <triple_free@@Base+0x2ab4>
   174e4:	cmp	r6, #0
   174e8:	beq	17320 <triple_free@@Base+0x2884>
   174ec:	ldrb	r5, [r5]
   174f0:	cmp	r5, #0
   174f4:	beq	17320 <triple_free@@Base+0x2884>
   174f8:	mov	r0, r6
   174fc:	mov	r1, r5
   17500:	bl	11ac8 <strchr@plt>
   17504:	cmp	r0, #0
   17508:	beq	17320 <triple_free@@Base+0x2884>
   1750c:	mov	r0, #1
   17510:	mov	r1, #0
   17514:	mov	r7, r4
   17518:	strd	r0, [sp]
   1751c:	b	173c4 <triple_free@@Base+0x2928>
   17520:	ldrd	r2, [sp]
   17524:	orr	r0, r7, #2
   17528:	strd	r2, [r9]
   1752c:	b	17324 <triple_free@@Base+0x2888>
   17530:	mov	r3, #0
   17534:	add	r2, fp, r6
   17538:	str	r2, [r8]
   1753c:	ldrb	r2, [fp, r6]
   17540:	orr	r7, r7, r3
   17544:	cmp	r2, #0
   17548:	orrne	r7, r7, #2
   1754c:	b	17390 <triple_free@@Base+0x28f4>
   17550:	ldrd	r2, [sp]
   17554:	cmp	r2, #0
   17558:	sbcs	r3, r3, #0
   1755c:	blt	17998 <triple_free@@Base+0x2efc>
   17560:	ldrd	r0, [sp]
   17564:	mov	r3, #0
   17568:	adds	r0, r0, r0
   1756c:	adc	r1, r1, r1
   17570:	strd	r0, [sp]
   17574:	b	17534 <triple_free@@Base+0x2a98>
   17578:	ldrd	r0, [sp]
   1757c:	movw	r3, #65535	; 0xffff
   17580:	movt	r3, #127	; 0x7f
   17584:	mvn	r2, #0
   17588:	cmp	r1, r3
   1758c:	cmpeq	r0, r2
   17590:	bhi	17998 <triple_free@@Base+0x2efc>
   17594:	lsl	r2, r1, #9
   17598:	ldr	r1, [sp]
   1759c:	lsl	r3, r0, #9
   175a0:	str	r3, [sp]
   175a4:	mov	r3, #0
   175a8:	orr	r2, r2, r1, lsr #23
   175ac:	str	r2, [sp, #4]
   175b0:	b	17534 <triple_free@@Base+0x2a98>
   175b4:	asr	r5, r4, #31
   175b8:	mov	r2, r4
   175bc:	mvn	r0, #0
   175c0:	mvn	r1, #0
   175c4:	mov	r3, r5
   175c8:	bl	1aae8 <fts_children@@Base+0x1024>
   175cc:	mov	ip, r7
   175d0:	str	r6, [sp, #20]
   175d4:	mov	r2, #7
   175d8:	ldrd	r6, [sp]
   175dc:	mov	r3, #0
   175e0:	strd	r0, [sp, #8]
   175e4:	ldrd	r0, [sp, #8]
   175e8:	cmp	r1, r7
   175ec:	cmpeq	r0, r6
   175f0:	mulcs	r0, r6, r5
   175f4:	movcs	r1, #0
   175f8:	mlacs	r0, r4, r7, r0
   175fc:	movcc	r1, #1
   17600:	umullcs	r6, r7, r6, r4
   17604:	mvncc	r6, #0
   17608:	mvncc	r7, #0
   1760c:	orr	r3, r3, r1
   17610:	addcs	r7, r0, r7
   17614:	subs	r2, r2, #1
   17618:	bne	175e4 <triple_free@@Base+0x2b48>
   1761c:	strd	r6, [sp]
   17620:	mov	r7, ip
   17624:	ldr	r6, [sp, #20]
   17628:	b	17534 <triple_free@@Base+0x2a98>
   1762c:	asr	r5, r4, #31
   17630:	mov	r2, r4
   17634:	mvn	r0, #0
   17638:	mvn	r1, #0
   1763c:	mov	r3, r5
   17640:	bl	1aae8 <fts_children@@Base+0x1024>
   17644:	mov	ip, r7
   17648:	str	r6, [sp, #20]
   1764c:	mov	r2, #8
   17650:	ldrd	r6, [sp]
   17654:	mov	r3, #0
   17658:	strd	r0, [sp, #8]
   1765c:	ldrd	r0, [sp, #8]
   17660:	cmp	r1, r7
   17664:	cmpeq	r0, r6
   17668:	mulcs	r0, r6, r5
   1766c:	movcs	r1, #0
   17670:	mlacs	r0, r4, r7, r0
   17674:	movcc	r1, #1
   17678:	umullcs	r6, r7, r6, r4
   1767c:	mvncc	r6, #0
   17680:	mvncc	r7, #0
   17684:	orr	r3, r3, r1
   17688:	addcs	r7, r0, r7
   1768c:	subs	r2, r2, #1
   17690:	bne	1765c <triple_free@@Base+0x2bc0>
   17694:	b	1761c <triple_free@@Base+0x2b80>
   17698:	mov	r2, r4
   1769c:	asr	r3, r4, #31
   176a0:	mvn	r0, #0
   176a4:	mvn	r1, #0
   176a8:	strd	r2, [sp, #8]
   176ac:	bl	1aae8 <fts_children@@Base+0x1024>
   176b0:	ldrd	r2, [sp]
   176b4:	cmp	r3, r1
   176b8:	cmpeq	r2, r0
   176bc:	bhi	17984 <triple_free@@Base+0x2ee8>
   176c0:	ldr	r3, [sp]
   176c4:	ldr	ip, [sp, #12]
   176c8:	ldr	r0, [sp, #4]
   176cc:	ldr	r1, [sp]
   176d0:	mul	r2, r3, ip
   176d4:	mov	r3, #0
   176d8:	mla	r2, r4, r0, r2
   176dc:	umull	r0, r1, r1, r4
   176e0:	add	r2, r2, r1
   176e4:	strd	r0, [sp]
   176e8:	str	r2, [sp, #4]
   176ec:	b	17534 <triple_free@@Base+0x2a98>
   176f0:	asr	r5, r4, #31
   176f4:	mov	r2, r4
   176f8:	mvn	r0, #0
   176fc:	mvn	r1, #0
   17700:	mov	r3, r5
   17704:	bl	1aae8 <fts_children@@Base+0x1024>
   17708:	mov	ip, r7
   1770c:	str	r6, [sp, #20]
   17710:	mov	r2, #3
   17714:	ldrd	r6, [sp]
   17718:	mov	r3, #0
   1771c:	strd	r0, [sp, #8]
   17720:	ldrd	r0, [sp, #8]
   17724:	cmp	r1, r7
   17728:	cmpeq	r0, r6
   1772c:	mulcs	r0, r6, r5
   17730:	movcs	r1, #0
   17734:	mlacs	r0, r4, r7, r0
   17738:	movcc	r1, #1
   1773c:	umullcs	r6, r7, r6, r4
   17740:	mvncc	r6, #0
   17744:	mvncc	r7, #0
   17748:	orr	r3, r3, r1
   1774c:	addcs	r7, r0, r7
   17750:	subs	r2, r2, #1
   17754:	bne	17720 <triple_free@@Base+0x2c84>
   17758:	b	1761c <triple_free@@Base+0x2b80>
   1775c:	asr	r5, r4, #31
   17760:	mov	r2, r4
   17764:	mvn	r0, #0
   17768:	mvn	r1, #0
   1776c:	mov	r3, r5
   17770:	bl	1aae8 <fts_children@@Base+0x1024>
   17774:	mov	ip, r7
   17778:	str	r6, [sp, #20]
   1777c:	mov	r2, #6
   17780:	ldrd	r6, [sp]
   17784:	mov	r3, #0
   17788:	strd	r0, [sp, #8]
   1778c:	ldrd	r0, [sp, #8]
   17790:	cmp	r1, r7
   17794:	cmpeq	r0, r6
   17798:	mulcs	r0, r6, r5
   1779c:	movcs	r1, #0
   177a0:	mlacs	r0, r4, r7, r0
   177a4:	movcc	r1, #1
   177a8:	umullcs	r6, r7, r6, r4
   177ac:	mvncc	r6, #0
   177b0:	mvncc	r7, #0
   177b4:	orr	r3, r3, r1
   177b8:	addcs	r7, r0, r7
   177bc:	subs	r2, r2, #1
   177c0:	bne	1778c <triple_free@@Base+0x2cf0>
   177c4:	b	1761c <triple_free@@Base+0x2b80>
   177c8:	ldrd	r0, [sp]
   177cc:	movw	r3, #65535	; 0xffff
   177d0:	movt	r3, #63	; 0x3f
   177d4:	mvn	r2, #0
   177d8:	cmp	r1, r3
   177dc:	cmpeq	r0, r2
   177e0:	bhi	17984 <triple_free@@Base+0x2ee8>
   177e4:	lsl	r2, r1, #10
   177e8:	ldr	r1, [sp]
   177ec:	lsl	r3, r0, #10
   177f0:	str	r3, [sp]
   177f4:	mov	r3, #0
   177f8:	orr	r2, r2, r1, lsr #22
   177fc:	str	r2, [sp, #4]
   17800:	b	17534 <triple_free@@Base+0x2a98>
   17804:	asr	r5, r4, #31
   17808:	mov	r2, r4
   1780c:	mvn	r0, #0
   17810:	mvn	r1, #0
   17814:	mov	r3, r5
   17818:	bl	1aae8 <fts_children@@Base+0x1024>
   1781c:	mov	ip, r7
   17820:	str	r6, [sp, #20]
   17824:	mov	r2, #5
   17828:	ldrd	r6, [sp]
   1782c:	mov	r3, #0
   17830:	strd	r0, [sp, #8]
   17834:	ldrd	r0, [sp, #8]
   17838:	cmp	r1, r7
   1783c:	cmpeq	r0, r6
   17840:	mulcs	r0, r6, r5
   17844:	movcs	r1, #0
   17848:	mlacs	r0, r4, r7, r0
   1784c:	movcc	r1, #1
   17850:	umullcs	r6, r7, r6, r4
   17854:	mvncc	r6, #0
   17858:	mvncc	r7, #0
   1785c:	orr	r3, r3, r1
   17860:	addcs	r7, r0, r7
   17864:	subs	r2, r2, #1
   17868:	bne	17834 <triple_free@@Base+0x2d98>
   1786c:	b	1761c <triple_free@@Base+0x2b80>
   17870:	mov	r2, r4
   17874:	asr	r3, r4, #31
   17878:	mvn	r0, #0
   1787c:	mvn	r1, #0
   17880:	strd	r2, [sp, #8]
   17884:	bl	1aae8 <fts_children@@Base+0x1024>
   17888:	ldrd	r2, [sp]
   1788c:	cmp	r3, r1
   17890:	cmpeq	r2, r0
   17894:	bhi	179ac <triple_free@@Base+0x2f10>
   17898:	ldr	ip, [sp, #4]
   1789c:	mul	r3, r4, ip
   178a0:	ldr	ip, [sp, #12]
   178a4:	mla	r3, r2, ip, r3
   178a8:	ldr	r2, [sp]
   178ac:	umull	r4, r5, r4, r2
   178b0:	add	r5, r3, r5
   178b4:	cmp	r1, r5
   178b8:	cmpeq	r0, r4
   178bc:	bcc	179ac <triple_free@@Base+0x2f10>
   178c0:	mul	r2, r4, ip
   178c4:	ldr	ip, [sp, #8]
   178c8:	mov	r3, #0
   178cc:	umull	r0, r1, r4, ip
   178d0:	mla	r2, ip, r5, r2
   178d4:	strd	r0, [sp]
   178d8:	add	r2, r2, r1
   178dc:	str	r2, [sp, #4]
   178e0:	b	17534 <triple_free@@Base+0x2a98>
   178e4:	asr	r5, r4, #31
   178e8:	mov	r2, r4
   178ec:	mvn	r0, #0
   178f0:	mvn	r1, #0
   178f4:	mov	r3, r5
   178f8:	bl	1aae8 <fts_children@@Base+0x1024>
   178fc:	mov	ip, r7
   17900:	str	r6, [sp, #20]
   17904:	mov	r2, #4
   17908:	ldrd	r6, [sp]
   1790c:	mov	r3, #0
   17910:	strd	r0, [sp, #8]
   17914:	ldrd	r0, [sp, #8]
   17918:	cmp	r1, r7
   1791c:	cmpeq	r0, r6
   17920:	mulcs	r0, r6, r5
   17924:	movcs	r1, #0
   17928:	mlacs	r0, r4, r7, r0
   1792c:	movcc	r1, #1
   17930:	umullcs	r6, r7, r6, r4
   17934:	mvncc	r6, #0
   17938:	mvncc	r7, #0
   1793c:	orr	r3, r3, r1
   17940:	addcs	r7, r0, r7
   17944:	subs	r2, r2, #1
   17948:	bne	17914 <triple_free@@Base+0x2e78>
   1794c:	b	1761c <triple_free@@Base+0x2b80>
   17950:	ldrd	r0, [sp]
   17954:	strd	r0, [r9]
   17958:	mov	r0, r7
   1795c:	b	17324 <triple_free@@Base+0x2888>
   17960:	ldrb	r3, [fp, #2]
   17964:	mov	r4, #1024	; 0x400
   17968:	cmp	r3, #66	; 0x42
   1796c:	moveq	r6, #3
   17970:	movne	r6, #1
   17974:	b	173fc <triple_free@@Base+0x2960>
   17978:	mov	r6, #2
   1797c:	mov	r4, #1000	; 0x3e8
   17980:	b	173fc <triple_free@@Base+0x2960>
   17984:	mvn	r3, #0
   17988:	mvn	r2, #0
   1798c:	strd	r2, [sp]
   17990:	mov	r3, #1
   17994:	b	17534 <triple_free@@Base+0x2a98>
   17998:	mvn	r0, #0
   1799c:	mvn	r1, #0
   179a0:	mov	r3, #1
   179a4:	strd	r0, [sp]
   179a8:	b	17534 <triple_free@@Base+0x2a98>
   179ac:	mvn	r0, #0
   179b0:	mvn	r1, #0
   179b4:	mov	r3, #1
   179b8:	strd	r0, [sp]
   179bc:	b	17534 <triple_free@@Base+0x2a98>
   179c0:	bl	1193c <__stack_chk_fail@plt>
   179c4:	ldr	r0, [pc, #32]	; 179ec <triple_free@@Base+0x2f50>
   179c8:	mov	r2, #96	; 0x60
   179cc:	ldr	r1, [pc, #28]	; 179f0 <triple_free@@Base+0x2f54>
   179d0:	ldr	r3, [pc, #28]	; 179f4 <triple_free@@Base+0x2f58>
   179d4:	add	r0, pc, r0
   179d8:	add	r1, pc, r1
   179dc:	add	r3, pc, r3
   179e0:	bl	11ca8 <__assert_fail@plt>
   179e4:	andeq	r5, r1, r8, asr #26
   179e8:	andeq	r0, r0, r8, lsl #3
   179ec:	strdeq	r4, [r0], -r8
   179f0:	andeq	r4, r0, ip, lsl r8
   179f4:	andeq	r4, r0, r4, ror #15
   179f8:	push	{r4, r5}
   179fc:	mov	ip, r1
   17a00:	ldrd	r4, [r0, #8]
   17a04:	ldrd	r2, [r1, #8]
   17a08:	cmp	r5, r3
   17a0c:	cmpeq	r4, r2
   17a10:	movne	r0, #0
   17a14:	beq	17a20 <triple_free@@Base+0x2f84>
   17a18:	pop	{r4, r5}
   17a1c:	bx	lr
   17a20:	ldrd	r0, [r0]
   17a24:	ldrd	r2, [ip]
   17a28:	pop	{r4, r5}
   17a2c:	cmp	r1, r3
   17a30:	cmpeq	r0, r2
   17a34:	movne	r0, #0
   17a38:	moveq	r0, #1
   17a3c:	bx	lr
   17a40:	push	{r3, lr}
   17a44:	mov	r2, r1
   17a48:	mov	r3, #0
   17a4c:	ldrd	r0, [r0, #8]
   17a50:	bl	1aae8 <fts_children@@Base+0x1024>
   17a54:	mov	r0, r2
   17a58:	pop	{r3, pc}
   17a5c:	push	{r3, lr}
   17a60:	mov	r2, r1
   17a64:	mov	r3, #0
   17a68:	ldrd	r0, [r0]
   17a6c:	bl	1aae8 <fts_children@@Base+0x1024>
   17a70:	mov	r0, r2
   17a74:	pop	{r3, pc}
   17a78:	ldrd	r2, [r0]
   17a7c:	ldrd	r0, [r1]
   17a80:	cmp	r3, r1
   17a84:	cmpeq	r2, r0
   17a88:	movne	r0, #0
   17a8c:	moveq	r0, #1
   17a90:	bx	lr
   17a94:	ldr	r3, [r0]
   17a98:	ldr	r2, [r1]
   17a9c:	ldrd	r0, [r3, #168]	; 0xa8
   17aa0:	ldrd	r2, [r2, #168]	; 0xa8
   17aa4:	cmp	r1, r3
   17aa8:	cmpeq	r0, r2
   17aac:	bcc	17abc <triple_free@@Base+0x3020>
   17ab0:	movls	r0, #0
   17ab4:	movhi	r0, #1
   17ab8:	bx	lr
   17abc:	mvn	r0, #0
   17ac0:	bx	lr
   17ac4:	push	{r3, r4, r5, r6, r7, lr}
   17ac8:	mov	r7, r2
   17acc:	ldr	r2, [r0, #40]	; 0x28
   17ad0:	mov	r5, r0
   17ad4:	mov	r4, r1
   17ad8:	ldr	r6, [r0, #44]	; 0x2c
   17adc:	cmp	r2, r7
   17ae0:	bcc	17b5c <triple_free@@Base+0x30c0>
   17ae4:	ldr	ip, [r0, #8]
   17ae8:	cmp	r4, #0
   17aec:	beq	17bac <triple_free@@Base+0x3110>
   17af0:	str	r4, [ip], #4
   17af4:	ldr	r4, [r4, #8]
   17af8:	cmp	r4, #0
   17afc:	bne	17af0 <triple_free@@Base+0x3054>
   17b00:	ldr	r0, [r5, #8]
   17b04:	mov	r3, r6
   17b08:	mov	r2, #4
   17b0c:	mov	r1, r7
   17b10:	bl	11be8 <qsort@plt>
   17b14:	ldr	r2, [r5, #8]
   17b18:	subs	r3, r7, #1
   17b1c:	ldr	r4, [r2]
   17b20:	beq	17ba4 <triple_free@@Base+0x3108>
   17b24:	add	ip, r2, #4
   17b28:	mov	r6, r4
   17b2c:	b	17b34 <triple_free@@Base+0x3098>
   17b30:	ldr	r6, [ip, #-4]
   17b34:	ldr	r5, [ip], #4
   17b38:	subs	r3, r3, #1
   17b3c:	str	r5, [r6, #8]
   17b40:	bne	17b30 <triple_free@@Base+0x3094>
   17b44:	add	r7, r2, r7, lsl #2
   17b48:	ldr	r2, [r7, #-4]
   17b4c:	mov	r3, #0
   17b50:	mov	r0, r4
   17b54:	str	r3, [r2, #8]
   17b58:	pop	{r3, r4, r5, r6, r7, pc}
   17b5c:	add	r1, r7, #40	; 0x28
   17b60:	str	r1, [r0, #40]	; 0x28
   17b64:	cmn	r1, #-1073741823	; 0xc0000001
   17b68:	bhi	17b88 <triple_free@@Base+0x30ec>
   17b6c:	lsl	r1, r1, #2
   17b70:	ldr	r0, [r0, #8]
   17b74:	bl	11954 <realloc@plt>
   17b78:	cmp	r0, #0
   17b7c:	movne	ip, r0
   17b80:	strne	r0, [r5, #8]
   17b84:	bne	17ae8 <triple_free@@Base+0x304c>
   17b88:	ldr	r0, [r5, #8]
   17b8c:	bl	118dc <free@plt>
   17b90:	mov	r3, #0
   17b94:	mov	r0, r4
   17b98:	str	r3, [r5, #8]
   17b9c:	str	r3, [r5, #40]	; 0x28
   17ba0:	pop	{r3, r4, r5, r6, r7, pc}
   17ba4:	mov	r2, r4
   17ba8:	b	17b4c <triple_free@@Base+0x30b0>
   17bac:	mov	r0, ip
   17bb0:	b	17b04 <triple_free@@Base+0x3068>
   17bb4:	push	{r3, r4, r5, r6, r7, lr}
   17bb8:	mov	r6, r0
   17bbc:	add	r0, r2, #184	; 0xb8
   17bc0:	mov	r5, r2
   17bc4:	mov	r7, r1
   17bc8:	bl	11a44 <malloc@plt>
   17bcc:	subs	r4, r0, #0
   17bd0:	beq	17c1c <triple_free@@Base+0x3180>
   17bd4:	mov	r1, r7
   17bd8:	mov	r2, r5
   17bdc:	add	r0, r4, #176	; 0xb0
   17be0:	bl	118f4 <memcpy@plt>
   17be4:	add	r1, r4, r5
   17be8:	mov	r3, #0
   17bec:	mov	r2, #3
   17bf0:	strb	r3, [r1, #176]	; 0xb0
   17bf4:	str	r5, [r4, #52]	; 0x34
   17bf8:	str	r6, [r4, #44]	; 0x2c
   17bfc:	ldr	r1, [r6, #24]
   17c00:	str	r3, [r4, #32]
   17c04:	str	r3, [r4, #12]
   17c08:	str	r1, [r4, #28]
   17c0c:	strh	r3, [r4, #62]	; 0x3e
   17c10:	str	r3, [r4, #16]
   17c14:	str	r3, [r4, #20]
   17c18:	strh	r2, [r4, #64]	; 0x40
   17c1c:	mov	r0, r4
   17c20:	pop	{r3, r4, r5, r6, r7, pc}
   17c24:	push	{r3, r4, r5, lr}
   17c28:	subs	r4, r0, #0
   17c2c:	popeq	{r3, r4, r5, pc}
   17c30:	ldr	r0, [r4, #12]
   17c34:	ldr	r5, [r4, #8]
   17c38:	cmp	r0, #0
   17c3c:	beq	17c44 <triple_free@@Base+0x31a8>
   17c40:	bl	11c9c <closedir@plt>
   17c44:	mov	r0, r4
   17c48:	mov	r4, r5
   17c4c:	bl	118dc <free@plt>
   17c50:	cmp	r5, #0
   17c54:	bne	17c30 <triple_free@@Base+0x3194>
   17c58:	pop	{r3, r4, r5, pc}
   17c5c:	push	{r4, lr}
   17c60:	mov	r4, r0
   17c64:	b	17c74 <triple_free@@Base+0x31d8>
   17c68:	bl	1a0a4 <fts_children@@Base+0x5e0>
   17c6c:	cmp	r0, #0
   17c70:	bge	17c8c <triple_free@@Base+0x31f0>
   17c74:	mov	r0, r4
   17c78:	bl	1a058 <fts_children@@Base+0x594>
   17c7c:	cmp	r0, #0
   17c80:	mov	r0, r4
   17c84:	beq	17c68 <triple_free@@Base+0x31cc>
   17c88:	pop	{r4, pc}
   17c8c:	bl	11c6c <close@plt>
   17c90:	b	17c74 <triple_free@@Base+0x31d8>
   17c94:	push	{r3, r4, r5, lr}
   17c98:	mov	r5, r1
   17c9c:	ldr	r1, [r0, #32]
   17ca0:	mov	r4, r0
   17ca4:	subs	r0, r1, r5
   17ca8:	rsbs	r3, r0, #0
   17cac:	adcs	r3, r3, r0
   17cb0:	cmn	r1, #100	; 0x64
   17cb4:	moveq	r3, #0
   17cb8:	cmp	r3, #0
   17cbc:	bne	17d04 <triple_free@@Base+0x3268>
   17cc0:	cmp	r2, #0
   17cc4:	bne	17cec <triple_free@@Base+0x3250>
   17cc8:	ldr	r3, [r4, #48]	; 0x30
   17ccc:	tst	r3, #4
   17cd0:	bne	17ce4 <triple_free@@Base+0x3248>
   17cd4:	cmp	r1, #0
   17cd8:	blt	17ce4 <triple_free@@Base+0x3248>
   17cdc:	mov	r0, r1
   17ce0:	bl	11c6c <close@plt>
   17ce4:	str	r5, [r4, #32]
   17ce8:	pop	{r3, r4, r5, pc}
   17cec:	add	r0, r4, #60	; 0x3c
   17cf0:	bl	1a060 <fts_children@@Base+0x59c>
   17cf4:	cmp	r0, #0
   17cf8:	bge	17ce0 <triple_free@@Base+0x3244>
   17cfc:	str	r5, [r4, #32]
   17d00:	pop	{r3, r4, r5, pc}
   17d04:	bl	11c60 <abort@plt>
   17d08:	push	{r3, r4, r5, lr}
   17d0c:	mov	r4, r0
   17d10:	ldr	r3, [r0, #48]	; 0x30
   17d14:	ands	r5, r3, #4
   17d18:	movne	r5, #0
   17d1c:	bne	17d34 <triple_free@@Base+0x3298>
   17d20:	tst	r3, #512	; 0x200
   17d24:	beq	17d44 <triple_free@@Base+0x32a8>
   17d28:	mvn	r1, #99	; 0x63
   17d2c:	mov	r2, #1
   17d30:	bl	17c94 <triple_free@@Base+0x31f8>
   17d34:	add	r0, r4, #60	; 0x3c
   17d38:	bl	17c5c <triple_free@@Base+0x31c0>
   17d3c:	mov	r0, r5
   17d40:	pop	{r3, r4, r5, pc}
   17d44:	ldr	r0, [r0, #28]
   17d48:	bl	11bdc <fchdir@plt>
   17d4c:	adds	r5, r0, #0
   17d50:	movne	r5, #1
   17d54:	b	17d34 <triple_free@@Base+0x3298>
   17d58:	push	{r4, r5, r6, r7, lr}
   17d5c:	mov	r4, r2
   17d60:	ldr	r2, [r2, #48]	; 0x30
   17d64:	sub	sp, sp, #12
   17d68:	mov	r6, r1
   17d6c:	add	r5, r4, #72	; 0x48
   17d70:	cmp	r2, #0
   17d74:	ldr	r2, [r1]
   17d78:	bne	17d84 <triple_free@@Base+0x32e8>
   17d7c:	tst	r2, #1
   17d80:	bne	17d94 <triple_free@@Base+0x32f8>
   17d84:	tst	r2, #2
   17d88:	bne	17d94 <triple_free@@Base+0x32f8>
   17d8c:	cmp	r3, #0
   17d90:	beq	17de0 <triple_free@@Base+0x3344>
   17d94:	mov	r0, #3
   17d98:	ldr	r1, [r4, #24]
   17d9c:	mov	r2, r5
   17da0:	bl	11c3c <__xstat64@plt>
   17da4:	cmp	r0, #0
   17da8:	beq	17e04 <triple_free@@Base+0x3368>
   17dac:	bl	11b04 <__errno_location@plt>
   17db0:	ldr	r6, [r0]
   17db4:	mov	r7, r0
   17db8:	cmp	r6, #2
   17dbc:	beq	17ea8 <triple_free@@Base+0x340c>
   17dc0:	str	r6, [r4, #32]
   17dc4:	mov	r0, r5
   17dc8:	mov	r1, #0
   17dcc:	mov	r2, #104	; 0x68
   17dd0:	bl	11b1c <memset@plt>
   17dd4:	mov	r0, #10
   17dd8:	add	sp, sp, #12
   17ddc:	pop	{r4, r5, r6, r7, pc}
   17de0:	ldr	r2, [r4, #24]
   17de4:	mov	r1, r0
   17de8:	mov	r3, #256	; 0x100
   17dec:	mov	r0, #3
   17df0:	str	r3, [sp]
   17df4:	mov	r3, r5
   17df8:	bl	11984 <__fxstatat64@plt>
   17dfc:	cmp	r0, #0
   17e00:	bne	17e34 <triple_free@@Base+0x3398>
   17e04:	ldr	r0, [r4, #88]	; 0x58
   17e08:	and	r0, r0, #61440	; 0xf000
   17e0c:	cmp	r0, #16384	; 0x4000
   17e10:	beq	17e44 <triple_free@@Base+0x33a8>
   17e14:	cmp	r0, #40960	; 0xa000
   17e18:	moveq	r0, #12
   17e1c:	beq	17dd8 <triple_free@@Base+0x333c>
   17e20:	cmp	r0, #32768	; 0x8000
   17e24:	movne	r0, #3
   17e28:	moveq	r0, #8
   17e2c:	add	sp, sp, #12
   17e30:	pop	{r4, r5, r6, r7, pc}
   17e34:	bl	11b04 <__errno_location@plt>
   17e38:	ldr	r3, [r0]
   17e3c:	str	r3, [r4, #32]
   17e40:	b	17dc4 <triple_free@@Base+0x3328>
   17e44:	ldr	r3, [r6]
   17e48:	ldrb	r1, [r4, #176]	; 0xb0
   17e4c:	tst	r3, #32
   17e50:	ldr	r2, [r4, #92]	; 0x5c
   17e54:	moveq	r3, #2
   17e58:	movne	r3, #0
   17e5c:	cmp	r1, #46	; 0x2e
   17e60:	rsb	r3, r3, r2
   17e64:	str	r3, [r4, #56]	; 0x38
   17e68:	beq	17e74 <triple_free@@Base+0x33d8>
   17e6c:	mov	r0, #1
   17e70:	b	17dd8 <triple_free@@Base+0x333c>
   17e74:	ldrb	r3, [r4, #177]	; 0xb1
   17e78:	cmp	r3, #0
   17e7c:	beq	17e94 <triple_free@@Base+0x33f8>
   17e80:	ldr	r3, [r4, #176]	; 0xb0
   17e84:	bic	r3, r3, #-16777216	; 0xff000000
   17e88:	bic	r3, r3, #255	; 0xff
   17e8c:	cmp	r3, #11776	; 0x2e00
   17e90:	bne	17e6c <triple_free@@Base+0x33d0>
   17e94:	ldr	r0, [r4, #48]	; 0x30
   17e98:	cmp	r0, #0
   17e9c:	movne	r0, #5
   17ea0:	moveq	r0, #1
   17ea4:	b	17dd8 <triple_free@@Base+0x333c>
   17ea8:	mov	r0, #3
   17eac:	ldr	r1, [r4, #24]
   17eb0:	mov	r2, r5
   17eb4:	bl	11c78 <__lxstat64@plt>
   17eb8:	cmp	r0, #0
   17ebc:	streq	r0, [r7]
   17ec0:	moveq	r0, #13
   17ec4:	beq	17dd8 <triple_free@@Base+0x333c>
   17ec8:	b	17dc0 <triple_free@@Base+0x3324>
   17ecc:	push	{r3, r4, r5, lr}
   17ed0:	mov	r4, r0
   17ed4:	ldr	r3, [r1]
   17ed8:	add	r0, r3, #256	; 0x100
   17edc:	add	r2, r0, r2
   17ee0:	cmp	r3, r2
   17ee4:	bhi	17f10 <triple_free@@Base+0x3474>
   17ee8:	str	r2, [r1]
   17eec:	mov	r1, r2
   17ef0:	ldr	r0, [r4]
   17ef4:	bl	11954 <realloc@plt>
   17ef8:	subs	r5, r0, #0
   17efc:	strne	r5, [r4]
   17f00:	movne	r3, #1
   17f04:	beq	17f38 <triple_free@@Base+0x349c>
   17f08:	mov	r0, r3
   17f0c:	pop	{r3, r4, r5, pc}
   17f10:	ldr	r0, [r4]
   17f14:	mov	r5, #0
   17f18:	bl	118dc <free@plt>
   17f1c:	str	r5, [r4]
   17f20:	bl	11b04 <__errno_location@plt>
   17f24:	mov	r3, r5
   17f28:	mov	r2, #36	; 0x24
   17f2c:	str	r2, [r0]
   17f30:	mov	r0, r3
   17f34:	pop	{r3, r4, r5, pc}
   17f38:	ldr	r0, [r4]
   17f3c:	bl	118dc <free@plt>
   17f40:	str	r5, [r4]
   17f44:	mov	r3, r5
   17f48:	b	17f08 <triple_free@@Base+0x346c>
   17f4c:	movw	r3, #258	; 0x102
   17f50:	and	r3, r0, r3
   17f54:	cmp	r3, #0
   17f58:	ldr	ip, [pc, #116]	; 17fd4 <triple_free@@Base+0x3538>
   17f5c:	push	{r4, lr}
   17f60:	add	ip, pc, ip
   17f64:	sub	sp, sp, #8
   17f68:	mov	r4, r1
   17f6c:	beq	17fac <triple_free@@Base+0x3510>
   17f70:	ldr	lr, [pc, #96]	; 17fd8 <triple_free@@Base+0x353c>
   17f74:	mov	r0, #31
   17f78:	ldr	r2, [pc, #92]	; 17fdc <triple_free@@Base+0x3540>
   17f7c:	mov	r1, #0
   17f80:	ldr	r3, [pc, #88]	; 17fe0 <triple_free@@Base+0x3544>
   17f84:	ldr	ip, [ip, lr]
   17f88:	add	r2, pc, r2
   17f8c:	add	r3, pc, r3
   17f90:	str	ip, [sp]
   17f94:	bl	141d4 <close_stdout@@Base+0xc60>
   17f98:	str	r0, [r4]
   17f9c:	adds	r0, r0, #0
   17fa0:	movne	r0, #1
   17fa4:	add	sp, sp, #8
   17fa8:	pop	{r4, pc}
   17fac:	mov	r0, #32
   17fb0:	bl	11a44 <malloc@plt>
   17fb4:	cmp	r0, #0
   17fb8:	str	r0, [r4]
   17fbc:	moveq	r0, r0
   17fc0:	beq	17fa4 <triple_free@@Base+0x3508>
   17fc4:	bl	19e90 <fts_children@@Base+0x3cc>
   17fc8:	mov	r0, #1
   17fcc:	add	sp, sp, #8
   17fd0:	pop	{r4, pc}
   17fd4:	muleq	r1, r8, r0
   17fd8:	andeq	r0, r0, r4, lsl #3
   17fdc:			; <UNDEFINED> instruction: 0xfffffab0
   17fe0:			; <UNDEFINED> instruction: 0xfffffa64
   17fe4:	tst	r1, #16
   17fe8:	push	{r4, lr}
   17fec:	moveq	r3, #18688	; 0x4900
   17ff0:	movne	r3, #51456	; 0xc900
   17ff4:	tst	r1, #2048	; 0x800
   17ff8:	moveq	ip, #0
   17ffc:	movne	ip, #262144	; 0x40000
   18000:	tst	r1, #512	; 0x200
   18004:	orr	r3, ip, r3
   18008:	beq	18038 <triple_free@@Base+0x359c>
   1800c:	mov	r1, r2
   18010:	mov	r2, r3
   18014:	bl	1a50c <fts_children@@Base+0xa48>
   18018:	mov	r4, r0
   1801c:	cmp	r4, #0
   18020:	blt	18030 <triple_free@@Base+0x3594>
   18024:	mov	r0, r4
   18028:	mov	r1, #1
   1802c:	bl	19da0 <fts_children@@Base+0x2dc>
   18030:	mov	r0, r4
   18034:	pop	{r4, pc}
   18038:	mov	r0, r2
   1803c:	mov	r1, r3
   18040:	bl	19f84 <fts_children@@Base+0x4c0>
   18044:	mov	r4, r0
   18048:	b	1801c <triple_free@@Base+0x3580>
   1804c:	movw	r3, #258	; 0x102
   18050:	and	r3, r0, r3
   18054:	cmp	r3, #0
   18058:	push	{r4, r5, r6, r7, r8, lr}
   1805c:	mov	r8, r1
   18060:	mov	r6, r2
   18064:	beq	180cc <triple_free@@Base+0x3630>
   18068:	mov	r0, #24
   1806c:	bl	11a44 <malloc@plt>
   18070:	subs	r7, r0, #0
   18074:	beq	180f8 <triple_free@@Base+0x365c>
   18078:	ldrd	r4, [r6, #72]	; 0x48
   1807c:	mov	r1, r7
   18080:	strd	r4, [r7]
   18084:	ldrd	r4, [r6, #168]	; 0xa8
   18088:	str	r6, [r7, #16]
   1808c:	strd	r4, [r7, #8]
   18090:	ldr	r0, [r8]
   18094:	bl	147fc <close_stdout@@Base+0x1288>
   18098:	cmp	r7, r0
   1809c:	mov	r4, r0
   180a0:	beq	180f0 <triple_free@@Base+0x3654>
   180a4:	mov	r0, r7
   180a8:	bl	118dc <free@plt>
   180ac:	cmp	r4, #0
   180b0:	beq	180f8 <triple_free@@Base+0x365c>
   180b4:	ldr	r3, [r4, #16]
   180b8:	mov	r2, #2
   180bc:	mov	r0, #1
   180c0:	strh	r2, [r6, #60]	; 0x3c
   180c4:	str	r3, [r6]
   180c8:	pop	{r4, r5, r6, r7, r8, pc}
   180cc:	ldr	r0, [r1]
   180d0:	add	r1, r2, #72	; 0x48
   180d4:	bl	19eac <fts_children@@Base+0x3e8>
   180d8:	cmp	r0, #0
   180dc:	beq	180f0 <triple_free@@Base+0x3654>
   180e0:	mov	r3, #2
   180e4:	str	r6, [r6]
   180e8:	strh	r3, [r6, #60]	; 0x3c
   180ec:	pop	{r4, r5, r6, r7, r8, pc}
   180f0:	mov	r0, #1
   180f4:	pop	{r4, r5, r6, r7, r8, pc}
   180f8:	mov	r0, #0
   180fc:	pop	{r4, r5, r6, r7, r8, pc}
   18100:	ldr	ip, [pc, #568]	; 18340 <triple_free@@Base+0x38a4>
   18104:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18108:	mov	sl, r0
   1810c:	ldr	r0, [pc, #560]	; 18344 <triple_free@@Base+0x38a8>
   18110:	add	ip, pc, ip
   18114:	sub	sp, sp, #124	; 0x7c
   18118:	mov	r9, r3
   1811c:	mov	r3, ip
   18120:	mov	r5, r1
   18124:	ldr	r0, [ip, r0]
   18128:	mov	fp, r2
   1812c:	ldr	r4, [sp, #160]	; 0xa0
   18130:	ldr	r3, [r0]
   18134:	cmp	r4, #0
   18138:	str	r0, [sp]
   1813c:	moveq	r7, r4
   18140:	str	r3, [sp, #116]	; 0x74
   18144:	beq	18158 <triple_free@@Base+0x36bc>
   18148:	ldrb	r3, [r4]
   1814c:	cmp	r3, #46	; 0x2e
   18150:	beq	18230 <triple_free@@Base+0x3794>
   18154:	mov	r7, #0
   18158:	ldr	r6, [sl, #48]	; 0x30
   1815c:	ands	r8, r6, #4
   18160:	beq	181a4 <triple_free@@Base+0x3708>
   18164:	ands	r8, r6, #512	; 0x200
   18168:	beq	18184 <triple_free@@Base+0x36e8>
   1816c:	cmp	r9, #0
   18170:	movlt	r8, #0
   18174:	blt	18184 <triple_free@@Base+0x36e8>
   18178:	mov	r0, r9
   1817c:	mov	r8, #0
   18180:	bl	11c6c <close@plt>
   18184:	ldr	r1, [sp]
   18188:	mov	r0, r8
   1818c:	ldr	r2, [sp, #116]	; 0x74
   18190:	ldr	r3, [r1]
   18194:	cmp	r2, r3
   18198:	bne	18334 <triple_free@@Base+0x3898>
   1819c:	add	sp, sp, #124	; 0x7c
   181a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   181a4:	lsr	r2, r9, #31
   181a8:	tst	r7, r2
   181ac:	bne	1824c <triple_free@@Base+0x37b0>
   181b0:	cmp	r2, #0
   181b4:	streq	r9, [sp, #4]
   181b8:	bne	18338 <triple_free@@Base+0x389c>
   181bc:	tst	r6, #2
   181c0:	bne	181f0 <triple_free@@Base+0x3754>
   181c4:	cmp	r4, #0
   181c8:	beq	18294 <triple_free@@Base+0x37f8>
   181cc:	ldrb	r2, [r4]
   181d0:	cmp	r2, #46	; 0x2e
   181d4:	bne	18294 <triple_free@@Base+0x37f8>
   181d8:	ldrb	r2, [r4, #1]
   181dc:	cmp	r2, #46	; 0x2e
   181e0:	bne	18294 <triple_free@@Base+0x37f8>
   181e4:	ldrb	r2, [r4, #2]
   181e8:	cmp	r2, #0
   181ec:	bne	18294 <triple_free@@Base+0x37f8>
   181f0:	mov	r0, #3
   181f4:	ldr	r1, [sp, #4]
   181f8:	add	r2, sp, #8
   181fc:	bl	1199c <__fxstat64@plt>
   18200:	cmp	r0, #0
   18204:	beq	182ac <triple_free@@Base+0x3810>
   18208:	mvn	r8, #0
   1820c:	cmp	r9, #0
   18210:	bge	18184 <triple_free@@Base+0x36e8>
   18214:	bl	11b04 <__errno_location@plt>
   18218:	ldr	r5, [r0]
   1821c:	mov	r4, r0
   18220:	ldr	r0, [sp, #4]
   18224:	bl	11c6c <close@plt>
   18228:	str	r5, [r4]
   1822c:	b	18184 <triple_free@@Base+0x36e8>
   18230:	ldrb	r3, [r4, #1]
   18234:	cmp	r3, #46	; 0x2e
   18238:	bne	18154 <triple_free@@Base+0x36b8>
   1823c:	ldrb	r3, [r4, #2]
   18240:	rsbs	r7, r3, #1
   18244:	movcc	r7, #0
   18248:	b	18158 <triple_free@@Base+0x36bc>
   1824c:	tst	r6, #512	; 0x200
   18250:	bne	182d0 <triple_free@@Base+0x3834>
   18254:	mov	r1, r6
   18258:	mov	r7, #1
   1825c:	ldr	r0, [sl, #32]
   18260:	mov	r2, r4
   18264:	bl	17fe4 <triple_free@@Base+0x3548>
   18268:	cmp	r0, #0
   1826c:	str	r0, [sp, #4]
   18270:	blt	1832c <triple_free@@Base+0x3890>
   18274:	ldr	r6, [sl, #48]	; 0x30
   18278:	b	181bc <triple_free@@Base+0x3720>
   1827c:	ldrd	r4, [fp]
   18280:	ldrd	r0, [sp, #104]	; 0x68
   18284:	cmp	r5, r1
   18288:	cmpeq	r4, r0
   1828c:	bne	182c0 <triple_free@@Base+0x3824>
   18290:	ldr	r6, [sl, #48]	; 0x30
   18294:	tst	r6, #512	; 0x200
   18298:	bne	18314 <triple_free@@Base+0x3878>
   1829c:	ldr	r0, [sp, #4]
   182a0:	bl	11bdc <fchdir@plt>
   182a4:	mov	r8, r0
   182a8:	b	1820c <triple_free@@Base+0x3770>
   182ac:	ldrd	r2, [r5]
   182b0:	ldrd	r4, [sp, #8]
   182b4:	cmp	r3, r5
   182b8:	cmpeq	r2, r4
   182bc:	beq	1827c <triple_free@@Base+0x37e0>
   182c0:	bl	11b04 <__errno_location@plt>
   182c4:	mov	r3, #2
   182c8:	str	r3, [r0]
   182cc:	b	18208 <triple_free@@Base+0x376c>
   182d0:	add	r7, sl, #60	; 0x3c
   182d4:	mov	r0, r7
   182d8:	bl	1a058 <fts_children@@Base+0x594>
   182dc:	cmp	r0, #0
   182e0:	bne	18254 <triple_free@@Base+0x37b8>
   182e4:	mov	r0, r7
   182e8:	bl	1a0a4 <fts_children@@Base+0x5e0>
   182ec:	cmp	r0, #0
   182f0:	str	r0, [sp, #4]
   182f4:	ldrlt	r1, [sl, #48]	; 0x30
   182f8:	blt	18258 <triple_free@@Base+0x37bc>
   182fc:	ldr	r6, [sl, #48]	; 0x30
   18300:	mov	r7, #1
   18304:	ldr	r9, [sp, #4]
   18308:	tst	r6, #2
   1830c:	beq	18294 <triple_free@@Base+0x37f8>
   18310:	b	181f0 <triple_free@@Base+0x3754>
   18314:	eor	r2, r7, #1
   18318:	mov	r0, sl
   1831c:	ldr	r1, [sp, #4]
   18320:	uxtb	r2, r2
   18324:	bl	17c94 <triple_free@@Base+0x31f8>
   18328:	b	18184 <triple_free@@Base+0x36e8>
   1832c:	mvn	r8, #0
   18330:	b	18184 <triple_free@@Base+0x36e8>
   18334:	bl	1193c <__stack_chk_fail@plt>
   18338:	mov	r1, r6
   1833c:	b	1825c <triple_free@@Base+0x37c0>
   18340:	andeq	r4, r1, r8, ror #29
   18344:	andeq	r0, r0, r8, lsl #3
   18348:	push	{r4, r5, r6, r7, lr}
   1834c:	movw	r3, #258	; 0x102
   18350:	ldr	r5, [pc, #216]	; 18430 <triple_free@@Base+0x3994>
   18354:	and	r3, r0, r3
   18358:	ldr	r4, [pc, #212]	; 18434 <triple_free@@Base+0x3998>
   1835c:	cmp	r3, #0
   18360:	add	r5, pc, r5
   18364:	sub	sp, sp, #36	; 0x24
   18368:	mov	ip, r1
   1836c:	ldr	r6, [r5, r4]
   18370:	mov	r3, r5
   18374:	ldr	r3, [r6]
   18378:	str	r3, [sp, #28]
   1837c:	bne	183d4 <triple_free@@Base+0x3938>
   18380:	ldr	r3, [r2, #4]
   18384:	cmp	r3, #0
   18388:	beq	183bc <triple_free@@Base+0x3920>
   1838c:	ldr	r1, [r3, #48]	; 0x30
   18390:	cmp	r1, #0
   18394:	blt	183bc <triple_free@@Base+0x3920>
   18398:	ldr	r7, [ip]
   1839c:	ldrd	r0, [r7, #16]
   183a0:	orrs	r4, r0, r1
   183a4:	beq	1842c <triple_free@@Base+0x3990>
   183a8:	ldrd	r4, [r7]
   183ac:	ldrd	r0, [r2, #168]	; 0xa8
   183b0:	cmp	r5, r1
   183b4:	cmpeq	r4, r0
   183b8:	beq	18400 <triple_free@@Base+0x3964>
   183bc:	ldr	r2, [sp, #28]
   183c0:	ldr	r3, [r6]
   183c4:	cmp	r2, r3
   183c8:	bne	18428 <triple_free@@Base+0x398c>
   183cc:	add	sp, sp, #36	; 0x24
   183d0:	pop	{r4, r5, r6, r7, pc}
   183d4:	ldrd	r4, [r2, #72]	; 0x48
   183d8:	mov	r1, sp
   183dc:	ldrd	r2, [r2, #168]	; 0xa8
   183e0:	ldr	r0, [ip]
   183e4:	strd	r4, [sp]
   183e8:	strd	r2, [sp, #8]
   183ec:	bl	14870 <close_stdout@@Base+0x12fc>
   183f0:	cmp	r0, #0
   183f4:	beq	1842c <triple_free@@Base+0x3990>
   183f8:	bl	118dc <free@plt>
   183fc:	b	183bc <triple_free@@Base+0x3920>
   18400:	ldrd	r0, [r7, #8]
   18404:	ldrd	r4, [r2, #72]	; 0x48
   18408:	cmp	r1, r5
   1840c:	cmpeq	r0, r4
   18410:	ldrdeq	r0, [r3, #72]	; 0x48
   18414:	strdeq	r0, [r7, #8]
   18418:	ldreq	r1, [ip]
   1841c:	ldrdeq	r2, [r3, #168]	; 0xa8
   18420:	strdeq	r2, [r1]
   18424:	b	183bc <triple_free@@Base+0x3920>
   18428:	bl	1193c <__stack_chk_fail@plt>
   1842c:	bl	11c60 <abort@plt>
   18430:	muleq	r1, r8, ip
   18434:	andeq	r0, r0, r8, lsl #3
   18438:	ldr	r3, [pc, #2256]	; 18d10 <triple_free@@Base+0x4274>
   1843c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18440:	add	r3, pc, r3
   18444:	ldr	r2, [pc, #2248]	; 18d14 <triple_free@@Base+0x4278>
   18448:	sub	sp, sp, #164	; 0xa4
   1844c:	ldr	r9, [r0]
   18450:	mov	r5, r0
   18454:	str	r1, [sp, #52]	; 0x34
   18458:	ldr	r2, [r3, r2]
   1845c:	ldr	r0, [r9, #12]
   18460:	adds	r1, r0, #0
   18464:	ldr	r3, [r2]
   18468:	str	r2, [sp, #48]	; 0x30
   1846c:	movne	r1, #1
   18470:	cmp	r1, #0
   18474:	str	r1, [sp, #44]	; 0x2c
   18478:	str	r3, [sp, #156]	; 0x9c
   1847c:	bne	189b0 <triple_free@@Base+0x3f14>
   18480:	ldr	r3, [r5, #48]	; 0x30
   18484:	ldr	r1, [r9, #24]
   18488:	and	r3, r3, #516	; 0x204
   1848c:	cmp	r3, #512	; 0x200
   18490:	ldr	r3, [r5, #48]	; 0x30
   18494:	ldreq	r0, [r5, #32]
   18498:	mvnne	r0, #99	; 0x63
   1849c:	tst	r3, #16
   184a0:	moveq	r2, #18688	; 0x4900
   184a4:	bne	1893c <triple_free@@Base+0x3ea0>
   184a8:	tst	r3, #2048	; 0x800
   184ac:	moveq	r3, #0
   184b0:	movne	r3, #262144	; 0x40000
   184b4:	orr	r2, r3, r2
   184b8:	bl	1a50c <fts_children@@Base+0xa48>
   184bc:	subs	r4, r0, #0
   184c0:	blt	18bdc <triple_free@@Base+0x4140>
   184c4:	mov	r1, #1
   184c8:	bl	19da0 <fts_children@@Base+0x2dc>
   184cc:	mov	r0, r4
   184d0:	bl	11bb8 <fdopendir@plt>
   184d4:	cmp	r0, #0
   184d8:	beq	18bc4 <triple_free@@Base+0x4128>
   184dc:	ldrh	r3, [r9, #60]	; 0x3c
   184e0:	str	r0, [r9, #12]
   184e4:	cmp	r3, #11
   184e8:	beq	18bf8 <triple_free@@Base+0x415c>
   184ec:	ldr	r0, [r5, #48]	; 0x30
   184f0:	tst	r0, #256	; 0x100
   184f4:	bne	18a20 <triple_free@@Base+0x3f84>
   184f8:	ldr	r2, [r5, #44]	; 0x2c
   184fc:	movw	r3, #34464	; 0x86a0
   18500:	movt	r3, #1
   18504:	cmp	r2, #0
   18508:	mvnne	r3, #0
   1850c:	str	r3, [sp, #20]
   18510:	ldr	r3, [sp, #52]	; 0x34
   18514:	cmp	r3, #2
   18518:	moveq	r6, #0
   1851c:	beq	18534 <triple_free@@Base+0x3a98>
   18520:	ldr	r3, [r5, #48]	; 0x30
   18524:	and	r3, r3, #24
   18528:	cmp	r3, #24
   1852c:	mvnne	r6, #0
   18530:	beq	18a08 <triple_free@@Base+0x3f6c>
   18534:	ldr	r1, [sp, #44]	; 0x2c
   18538:	cmp	r1, #0
   1853c:	movne	r1, #1
   18540:	strne	r1, [sp, #60]	; 0x3c
   18544:	beq	188e0 <triple_free@@Base+0x3e44>
   18548:	ldr	r3, [r9, #40]	; 0x28
   1854c:	ldr	r2, [r9, #28]
   18550:	str	r3, [sp, #28]
   18554:	sub	r3, r3, #1
   18558:	ldr	r1, [sp, #28]
   1855c:	ldrb	r2, [r2, r3]
   18560:	cmp	r2, #47	; 0x2f
   18564:	moveq	r1, r3
   18568:	ands	r0, r0, #4
   1856c:	str	r1, [sp, #28]
   18570:	ldrne	r3, [r5, #24]
   18574:	movne	r1, #47	; 0x2f
   18578:	ldrne	r0, [sp, #28]
   1857c:	streq	r0, [sp, #36]	; 0x24
   18580:	addne	r2, r3, r0
   18584:	strbne	r1, [r3, r0]
   18588:	addne	r2, r2, #1
   1858c:	ldr	r3, [r9, #48]	; 0x30
   18590:	add	r0, r5, #48	; 0x30
   18594:	ldr	r1, [sp, #28]
   18598:	add	r3, r3, #1
   1859c:	ldr	fp, [r5, #36]	; 0x24
   185a0:	str	r3, [sp, #24]
   185a4:	add	r1, r1, #1
   185a8:	ldr	r3, [pc, #1896]	; 18d18 <triple_free@@Base+0x427c>
   185ac:	rsb	fp, r1, fp
   185b0:	strne	r2, [sp, #36]	; 0x24
   185b4:	mov	r2, #0
   185b8:	add	r3, pc, r3
   185bc:	str	r1, [sp, #12]
   185c0:	str	r2, [sp, #32]
   185c4:	mov	sl, r2
   185c8:	mov	r7, r2
   185cc:	str	r2, [sp, #16]
   185d0:	str	r3, [sp, #40]	; 0x28
   185d4:	str	r0, [sp, #56]	; 0x38
   185d8:	b	186a8 <triple_free@@Base+0x3c0c>
   185dc:	ldr	r2, [sp, #12]
   185e0:	adds	r0, r0, r2
   185e4:	bcs	18784 <triple_free@@Base+0x3ce8>
   185e8:	ldr	r3, [sp, #24]
   185ec:	str	r3, [r4, #48]	; 0x30
   185f0:	ldr	r3, [r5]
   185f4:	str	r0, [r4, #40]	; 0x28
   185f8:	str	r3, [r4, #4]
   185fc:	ldrd	r2, [r8]
   18600:	strd	r2, [r4, #168]	; 0xa8
   18604:	ldr	r3, [r5, #48]	; 0x30
   18608:	tst	r3, #4
   1860c:	addeq	r3, r4, #176	; 0xb0
   18610:	streq	r3, [r4, #24]
   18614:	bne	187cc <triple_free@@Base+0x3d30>
   18618:	ldr	r3, [r5, #44]	; 0x2c
   1861c:	cmp	r3, #0
   18620:	beq	18630 <triple_free@@Base+0x3b94>
   18624:	ldr	r3, [r5, #48]	; 0x30
   18628:	ands	r3, r3, #1024	; 0x400
   1862c:	beq	187ec <triple_free@@Base+0x3d50>
   18630:	ldr	r3, [r5, #48]	; 0x30
   18634:	and	r3, r3, #24
   18638:	cmp	r3, #24
   1863c:	movne	r2, #0
   18640:	beq	18824 <triple_free@@Base+0x3d88>
   18644:	mov	r0, #11
   18648:	strh	r0, [r4, #60]	; 0x3c
   1864c:	ldrb	r3, [r8, #18]
   18650:	sub	r3, r3, #1
   18654:	cmp	r3, #11
   18658:	ldrls	r1, [sp, #40]	; 0x28
   1865c:	movhi	r3, #0
   18660:	ldrls	r3, [r1, r3, lsl #2]
   18664:	cmp	r2, #0
   18668:	moveq	r2, #2
   1866c:	movne	r2, #1
   18670:	str	r3, [r4, #88]	; 0x58
   18674:	mov	r3, #0
   18678:	strd	r2, [r4, #120]	; 0x78
   1867c:	ldr	r2, [sp, #16]
   18680:	add	r7, r7, #1
   18684:	ldr	r0, [sp, #20]
   18688:	mov	r3, #0
   1868c:	cmp	r2, #0
   18690:	str	r3, [r4, #8]
   18694:	streq	r4, [sp, #16]
   18698:	strne	r4, [sl, #8]
   1869c:	cmp	r0, r7
   186a0:	bls	1884c <triple_free@@Base+0x3db0>
   186a4:	mov	sl, r4
   186a8:	ldr	r0, [r9, #12]
   186ac:	cmp	r0, #0
   186b0:	beq	1884c <triple_free@@Base+0x3db0>
   186b4:	bl	11bac <readdir64@plt>
   186b8:	subs	r8, r0, #0
   186bc:	beq	18838 <triple_free@@Base+0x3d9c>
   186c0:	ldr	r3, [r5, #48]	; 0x30
   186c4:	tst	r3, #32
   186c8:	bne	186d8 <triple_free@@Base+0x3c3c>
   186cc:	ldrb	r3, [r8, #19]
   186d0:	cmp	r3, #46	; 0x2e
   186d4:	beq	18804 <triple_free@@Base+0x3d68>
   186d8:	add	r6, r8, #19
   186dc:	mov	r0, r6
   186e0:	bl	11abc <strlen@plt>
   186e4:	mov	r1, r6
   186e8:	mov	r2, r0
   186ec:	mov	r0, r5
   186f0:	bl	17bb4 <triple_free@@Base+0x3118>
   186f4:	subs	r4, r0, #0
   186f8:	beq	18b7c <triple_free@@Base+0x40e0>
   186fc:	mov	r0, r6
   18700:	bl	11abc <strlen@plt>
   18704:	cmp	fp, r0
   18708:	bhi	185dc <triple_free@@Base+0x3b40>
   1870c:	mov	r3, r5
   18710:	ldr	r1, [sp, #28]
   18714:	ldr	fp, [r3, #24]!
   18718:	add	r2, r1, #2
   1871c:	add	r1, r5, #36	; 0x24
   18720:	add	r2, r2, r0
   18724:	mov	r0, r3
   18728:	bl	17ecc <triple_free@@Base+0x3430>
   1872c:	cmp	r0, #0
   18730:	beq	18b7c <triple_free@@Base+0x40e0>
   18734:	ldr	r3, [r5, #24]
   18738:	cmp	r3, fp
   1873c:	beq	18764 <triple_free@@Base+0x3cc8>
   18740:	ldr	r2, [r5, #48]	; 0x30
   18744:	tst	r2, #4
   18748:	ldrne	r2, [sp, #12]
   1874c:	moveq	r0, #1
   18750:	streq	r0, [sp, #32]
   18754:	addne	r3, r3, r2
   18758:	strne	r3, [sp, #36]	; 0x24
   1875c:	movne	r3, #1
   18760:	strne	r3, [sp, #32]
   18764:	ldr	r1, [sp, #12]
   18768:	mov	r0, r6
   1876c:	ldr	fp, [r5, #36]	; 0x24
   18770:	rsb	fp, r1, fp
   18774:	bl	11abc <strlen@plt>
   18778:	ldr	r2, [sp, #12]
   1877c:	adds	r0, r0, r2
   18780:	bcc	185e8 <triple_free@@Base+0x3b4c>
   18784:	mov	r0, r4
   18788:	mov	r4, #0
   1878c:	bl	118dc <free@plt>
   18790:	ldr	r0, [sp, #16]
   18794:	bl	17c24 <triple_free@@Base+0x3188>
   18798:	ldr	r0, [r9, #12]
   1879c:	bl	11c9c <closedir@plt>
   187a0:	str	r4, [r9, #12]
   187a4:	mov	r3, #7
   187a8:	strh	r3, [r9, #60]	; 0x3c
   187ac:	ldr	r3, [r5, #48]	; 0x30
   187b0:	orr	r3, r3, #16384	; 0x4000
   187b4:	str	r3, [r5, #48]	; 0x30
   187b8:	bl	11b04 <__errno_location@plt>
   187bc:	mov	r2, #36	; 0x24
   187c0:	mov	r3, r4
   187c4:	str	r2, [r0]
   187c8:	b	189dc <triple_free@@Base+0x3f40>
   187cc:	ldr	r3, [r4, #28]
   187d0:	add	r1, r4, #176	; 0xb0
   187d4:	ldr	r2, [r4, #52]	; 0x34
   187d8:	ldr	r0, [sp, #36]	; 0x24
   187dc:	str	r3, [r4, #24]
   187e0:	add	r2, r2, #1
   187e4:	bl	118d0 <memmove@plt>
   187e8:	b	18618 <triple_free@@Base+0x3b7c>
   187ec:	ldr	r0, [r5, #32]
   187f0:	mov	r2, r4
   187f4:	ldr	r1, [sp, #56]	; 0x38
   187f8:	bl	17d58 <triple_free@@Base+0x32bc>
   187fc:	strh	r0, [r4, #60]	; 0x3c
   18800:	b	1867c <triple_free@@Base+0x3be0>
   18804:	ldrb	r3, [r8, #20]
   18808:	cmp	r3, #0
   1880c:	beq	1881c <triple_free@@Base+0x3d80>
   18810:	ldrh	r3, [r8, #20]
   18814:	cmp	r3, #46	; 0x2e
   18818:	bne	186d8 <triple_free@@Base+0x3c3c>
   1881c:	mov	r4, sl
   18820:	b	186a4 <triple_free@@Base+0x3c08>
   18824:	ldrb	r3, [r8, #18]
   18828:	tst	r3, #251	; 0xfb
   1882c:	moveq	r2, #0
   18830:	movne	r2, #1
   18834:	b	18644 <triple_free@@Base+0x3ba8>
   18838:	ldr	r0, [r9, #12]
   1883c:	cmp	r0, #0
   18840:	beq	1884c <triple_free@@Base+0x3db0>
   18844:	bl	11c9c <closedir@plt>
   18848:	str	r8, [r9, #12]
   1884c:	ldr	r1, [sp, #32]
   18850:	cmp	r1, #0
   18854:	bne	18a70 <triple_free@@Base+0x3fd4>
   18858:	ldr	r3, [r5, #48]	; 0x30
   1885c:	tst	r3, #4
   18860:	beq	18894 <triple_free@@Base+0x3df8>
   18864:	ldr	r3, [r5, #36]	; 0x24
   18868:	ldr	r2, [sp, #12]
   1886c:	cmp	r3, r2
   18870:	beq	1887c <triple_free@@Base+0x3de0>
   18874:	cmp	r7, #0
   18878:	bne	18888 <triple_free@@Base+0x3dec>
   1887c:	ldr	r3, [sp, #36]	; 0x24
   18880:	sub	r3, r3, #1
   18884:	str	r3, [sp, #36]	; 0x24
   18888:	ldr	r0, [sp, #36]	; 0x24
   1888c:	mov	r3, #0
   18890:	strb	r3, [r0]
   18894:	ldr	r1, [sp, #44]	; 0x2c
   18898:	ldr	r2, [sp, #60]	; 0x3c
   1889c:	eor	r3, r1, #1
   188a0:	tst	r2, r3
   188a4:	bne	1895c <triple_free@@Base+0x3ec0>
   188a8:	cmp	r7, #0
   188ac:	beq	18c48 <triple_free@@Base+0x41ac>
   188b0:	movw	r3, #10000	; 0x2710
   188b4:	cmp	r7, r3
   188b8:	bls	189c4 <triple_free@@Base+0x3f28>
   188bc:	ldr	r3, [r5, #44]	; 0x2c
   188c0:	cmp	r3, #0
   188c4:	beq	18c68 <triple_free@@Base+0x41cc>
   188c8:	mov	r0, r5
   188cc:	ldr	r1, [sp, #16]
   188d0:	mov	r2, r7
   188d4:	bl	17ac4 <triple_free@@Base+0x3028>
   188d8:	mov	r3, r0
   188dc:	b	189dc <triple_free@@Base+0x3f40>
   188e0:	adds	r6, r6, #0
   188e4:	ldr	r2, [sp, #52]	; 0x34
   188e8:	movne	r6, #1
   188ec:	subs	r3, r2, #3
   188f0:	rsbs	r7, r3, #0
   188f4:	adcs	r7, r7, r3
   188f8:	orrs	r3, r6, r7
   188fc:	beq	189fc <triple_free@@Base+0x3f60>
   18900:	tst	r0, #512	; 0x200
   18904:	bne	18b00 <triple_free@@Base+0x4064>
   18908:	mov	r3, #0
   1890c:	mov	r0, r5
   18910:	str	r3, [sp]
   18914:	add	r1, r9, #72	; 0x48
   18918:	add	r2, r9, #168	; 0xa8
   1891c:	mov	r3, r4
   18920:	bl	18100 <triple_free@@Base+0x3664>
   18924:	cmp	r0, #0
   18928:	bne	18b1c <triple_free@@Base+0x4080>
   1892c:	mov	r3, #1
   18930:	ldr	r0, [r5, #48]	; 0x30
   18934:	str	r3, [sp, #60]	; 0x3c
   18938:	b	18548 <triple_free@@Base+0x3aac>
   1893c:	tst	r3, #1
   18940:	moveq	r2, #51456	; 0xc900
   18944:	beq	184a8 <triple_free@@Base+0x3a0c>
   18948:	ldr	r2, [r9, #48]	; 0x30
   1894c:	cmp	r2, #0
   18950:	movne	r2, #51456	; 0xc900
   18954:	moveq	r2, #18688	; 0x4900
   18958:	b	184a8 <triple_free@@Base+0x3a0c>
   1895c:	ldr	r3, [sp, #52]	; 0x34
   18960:	cmp	r3, #1
   18964:	cmpne	r7, #0
   18968:	bne	188b0 <triple_free@@Base+0x3e14>
   1896c:	ldr	r3, [r9, #48]	; 0x30
   18970:	cmp	r3, #0
   18974:	bne	18c18 <triple_free@@Base+0x417c>
   18978:	mov	r0, r5
   1897c:	bl	17d08 <triple_free@@Base+0x326c>
   18980:	adds	r0, r0, #0
   18984:	movne	r0, #1
   18988:	cmp	r0, #0
   1898c:	beq	188a8 <triple_free@@Base+0x3e0c>
   18990:	mov	r3, #7
   18994:	strh	r3, [r9, #60]	; 0x3c
   18998:	ldr	r3, [r5, #48]	; 0x30
   1899c:	ldr	r0, [sp, #16]
   189a0:	orr	r3, r3, #16384	; 0x4000
   189a4:	str	r3, [r5, #48]	; 0x30
   189a8:	bl	17c24 <triple_free@@Base+0x3188>
   189ac:	b	18bf0 <triple_free@@Base+0x4154>
   189b0:	bl	11bd0 <dirfd@plt>
   189b4:	subs	r4, r0, #0
   189b8:	blt	18cd4 <triple_free@@Base+0x4238>
   189bc:	ldr	r0, [r5, #48]	; 0x30
   189c0:	b	184f8 <triple_free@@Base+0x3a5c>
   189c4:	ldr	r3, [r5, #44]	; 0x2c
   189c8:	cmp	r3, #0
   189cc:	beq	189d8 <triple_free@@Base+0x3f3c>
   189d0:	cmp	r7, #1
   189d4:	bhi	188c8 <triple_free@@Base+0x3e2c>
   189d8:	ldr	r3, [sp, #16]
   189dc:	ldr	r1, [sp, #48]	; 0x30
   189e0:	mov	r0, r3
   189e4:	ldr	r2, [sp, #156]	; 0x9c
   189e8:	ldr	r3, [r1]
   189ec:	cmp	r2, r3
   189f0:	bne	18d0c <triple_free@@Base+0x4270>
   189f4:	add	sp, sp, #164	; 0xa4
   189f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189fc:	ldr	r2, [sp, #44]	; 0x2c
   18a00:	str	r2, [sp, #60]	; 0x3c
   18a04:	b	18548 <triple_free@@Base+0x3aac>
   18a08:	tst	r0, #32
   18a0c:	ldr	r6, [r9, #92]	; 0x5c
   18a10:	movne	r3, #0
   18a14:	moveq	r3, #2
   18a18:	rsb	r6, r3, r6
   18a1c:	b	18534 <triple_free@@Base+0x3a98>
   18a20:	add	r6, r5, #56	; 0x38
   18a24:	mov	r2, r9
   18a28:	mov	r1, r6
   18a2c:	bl	18348 <triple_free@@Base+0x38ac>
   18a30:	add	r1, r5, #48	; 0x30
   18a34:	mov	r2, r9
   18a38:	mov	r3, #0
   18a3c:	ldr	r0, [r5, #32]
   18a40:	bl	17d58 <triple_free@@Base+0x32bc>
   18a44:	mov	r1, r6
   18a48:	ldr	r0, [r5, #48]	; 0x30
   18a4c:	mov	r2, r9
   18a50:	bl	1804c <triple_free@@Base+0x35b0>
   18a54:	subs	r6, r0, #0
   18a58:	bne	189bc <triple_free@@Base+0x3f20>
   18a5c:	bl	11b04 <__errno_location@plt>
   18a60:	mov	r2, #12
   18a64:	mov	r3, r6
   18a68:	str	r2, [r0]
   18a6c:	b	189dc <triple_free@@Base+0x3f40>
   18a70:	ldr	r3, [r5, #4]
   18a74:	ldr	r2, [r5, #24]
   18a78:	cmp	r3, #0
   18a7c:	beq	18aac <triple_free@@Base+0x4010>
   18a80:	ldr	r1, [r3, #24]
   18a84:	add	r0, r3, #176	; 0xb0
   18a88:	cmp	r1, r0
   18a8c:	ldrne	r0, [r3, #28]
   18a90:	str	r2, [r3, #28]
   18a94:	rsbne	r1, r0, r1
   18a98:	addne	r1, r2, r1
   18a9c:	strne	r1, [r3, #24]
   18aa0:	ldr	r3, [r3, #8]
   18aa4:	cmp	r3, #0
   18aa8:	bne	18a80 <triple_free@@Base+0x3fe4>
   18aac:	ldr	r3, [sp, #16]
   18ab0:	b	18ae4 <triple_free@@Base+0x4048>
   18ab4:	ldr	r1, [r3, #24]
   18ab8:	add	r0, r3, #176	; 0xb0
   18abc:	cmp	r1, r0
   18ac0:	ldrne	r0, [r3, #28]
   18ac4:	str	r2, [r3, #28]
   18ac8:	rsbne	r1, r0, r1
   18acc:	addne	r1, r2, r1
   18ad0:	strne	r1, [r3, #24]
   18ad4:	ldr	r1, [r3, #8]
   18ad8:	cmp	r1, #0
   18adc:	ldreq	r1, [r3, #4]
   18ae0:	mov	r3, r1
   18ae4:	ldr	r1, [r3, #48]	; 0x30
   18ae8:	cmp	r1, #0
   18aec:	bge	18ab4 <triple_free@@Base+0x4018>
   18af0:	ldr	r3, [r5, #48]	; 0x30
   18af4:	tst	r3, #4
   18af8:	bne	18864 <triple_free@@Base+0x3dc8>
   18afc:	b	18894 <triple_free@@Base+0x3df8>
   18b00:	mov	r0, r4
   18b04:	bl	1a578 <fts_children@@Base+0xab4>
   18b08:	subs	r4, r0, #0
   18b0c:	blt	18b1c <triple_free@@Base+0x4080>
   18b10:	mov	r1, #1
   18b14:	bl	19da0 <fts_children@@Base+0x2dc>
   18b18:	b	18908 <triple_free@@Base+0x3e6c>
   18b1c:	tst	r6, r7
   18b20:	beq	18b30 <triple_free@@Base+0x4094>
   18b24:	bl	11b04 <__errno_location@plt>
   18b28:	ldr	r3, [r0]
   18b2c:	str	r3, [r9, #32]
   18b30:	ldrh	r3, [r9, #62]	; 0x3e
   18b34:	ldr	r0, [r9, #12]
   18b38:	orr	r3, r3, #1
   18b3c:	strh	r3, [r9, #62]	; 0x3e
   18b40:	bl	11c9c <closedir@plt>
   18b44:	mov	r3, #0
   18b48:	str	r3, [r9, #12]
   18b4c:	ldr	r3, [r5, #48]	; 0x30
   18b50:	tst	r3, #512	; 0x200
   18b54:	beq	18b68 <triple_free@@Base+0x40cc>
   18b58:	cmp	r4, #0
   18b5c:	blt	18b68 <triple_free@@Base+0x40cc>
   18b60:	mov	r0, r4
   18b64:	bl	11c6c <close@plt>
   18b68:	mov	r3, #0
   18b6c:	str	r3, [r9, #12]
   18b70:	str	r3, [sp, #60]	; 0x3c
   18b74:	ldr	r0, [r5, #48]	; 0x30
   18b78:	b	18548 <triple_free@@Base+0x3aac>
   18b7c:	bl	11b04 <__errno_location@plt>
   18b80:	mov	r6, r0
   18b84:	mov	r0, r4
   18b88:	ldr	r4, [r6]
   18b8c:	bl	118dc <free@plt>
   18b90:	ldr	r0, [sp, #16]
   18b94:	bl	17c24 <triple_free@@Base+0x3188>
   18b98:	ldr	r0, [r9, #12]
   18b9c:	bl	11c9c <closedir@plt>
   18ba0:	mov	r2, #7
   18ba4:	mov	r3, #0
   18ba8:	strh	r2, [r9, #60]	; 0x3c
   18bac:	str	r3, [r9, #12]
   18bb0:	ldr	r2, [r5, #48]	; 0x30
   18bb4:	orr	r2, r2, #16384	; 0x4000
   18bb8:	str	r2, [r5, #48]	; 0x30
   18bbc:	str	r4, [r6]
   18bc0:	b	189dc <triple_free@@Base+0x3f40>
   18bc4:	bl	11b04 <__errno_location@plt>
   18bc8:	ldr	r6, [r0]
   18bcc:	mov	r5, r0
   18bd0:	mov	r0, r4
   18bd4:	bl	11c6c <close@plt>
   18bd8:	str	r6, [r5]
   18bdc:	ldr	r2, [sp, #52]	; 0x34
   18be0:	mov	r4, #0
   18be4:	str	r4, [r9, #12]
   18be8:	cmp	r2, #3
   18bec:	beq	18cf0 <triple_free@@Base+0x4254>
   18bf0:	mov	r3, #0
   18bf4:	b	189dc <triple_free@@Base+0x3f40>
   18bf8:	ldr	r0, [r5, #32]
   18bfc:	add	r1, r5, #48	; 0x30
   18c00:	mov	r2, r9
   18c04:	mov	r3, #0
   18c08:	bl	17d58 <triple_free@@Base+0x32bc>
   18c0c:	strh	r0, [r9, #60]	; 0x3c
   18c10:	ldr	r0, [r5, #48]	; 0x30
   18c14:	b	184f8 <triple_free@@Base+0x3a5c>
   18c18:	ldr	r2, [r9, #4]
   18c1c:	mov	r0, r5
   18c20:	ldr	r1, [pc, #244]	; 18d1c <triple_free@@Base+0x4280>
   18c24:	mvn	r3, #0
   18c28:	add	r1, pc, r1
   18c2c:	str	r1, [sp]
   18c30:	add	r1, r2, #72	; 0x48
   18c34:	add	r2, r2, #168	; 0xa8
   18c38:	bl	18100 <triple_free@@Base+0x3664>
   18c3c:	adds	r0, r0, #0
   18c40:	movne	r0, #1
   18c44:	b	18988 <triple_free@@Base+0x3eec>
   18c48:	ldr	r0, [sp, #52]	; 0x34
   18c4c:	cmp	r0, #3
   18c50:	ldr	r0, [sp, #16]
   18c54:	moveq	r3, #6
   18c58:	strheq	r3, [r9, #60]	; 0x3c
   18c5c:	bl	17c24 <triple_free@@Base+0x3188>
   18c60:	mov	r3, #0
   18c64:	b	189dc <triple_free@@Base+0x3f40>
   18c68:	ldr	r3, [r5, #48]	; 0x30
   18c6c:	tst	r3, #512	; 0x200
   18c70:	beq	189d8 <triple_free@@Base+0x3f3c>
   18c74:	ldr	r0, [r5, #32]
   18c78:	add	r1, sp, #64	; 0x40
   18c7c:	bl	11864 <fstatfs64@plt>
   18c80:	cmp	r0, #0
   18c84:	bne	18ca8 <triple_free@@Base+0x420c>
   18c88:	ldr	r2, [sp, #64]	; 0x40
   18c8c:	movw	r3, #26985	; 0x6969
   18c90:	cmp	r2, r3
   18c94:	beq	189c4 <triple_free@@Base+0x3f28>
   18c98:	movw	r3, #6548	; 0x1994
   18c9c:	movt	r3, #258	; 0x102
   18ca0:	cmp	r2, r3
   18ca4:	beq	189c4 <triple_free@@Base+0x3f28>
   18ca8:	ldr	r3, [pc, #112]	; 18d20 <triple_free@@Base+0x4284>
   18cac:	mov	r2, r7
   18cb0:	ldr	r1, [sp, #16]
   18cb4:	mov	r0, r5
   18cb8:	add	r3, pc, r3
   18cbc:	str	r3, [r5, #44]	; 0x2c
   18cc0:	bl	17ac4 <triple_free@@Base+0x3028>
   18cc4:	mov	r3, #0
   18cc8:	str	r3, [r5, #44]	; 0x2c
   18ccc:	str	r0, [sp, #16]
   18cd0:	b	189d8 <triple_free@@Base+0x3f3c>
   18cd4:	ldr	r0, [r9, #12]
   18cd8:	mov	r4, #0
   18cdc:	bl	11c9c <closedir@plt>
   18ce0:	ldr	r2, [sp, #52]	; 0x34
   18ce4:	str	r4, [r9, #12]
   18ce8:	cmp	r2, #3
   18cec:	bne	18bf0 <triple_free@@Base+0x4154>
   18cf0:	mov	r3, #4
   18cf4:	strh	r3, [r9, #60]	; 0x3c
   18cf8:	bl	11b04 <__errno_location@plt>
   18cfc:	mov	r3, r4
   18d00:	ldr	r2, [r0]
   18d04:	str	r2, [r9, #32]
   18d08:	b	189dc <triple_free@@Base+0x3f40>
   18d0c:	bl	1193c <__stack_chk_fail@plt>
   18d10:			; <UNDEFINED> instruction: 0x00014bb8
   18d14:	andeq	r0, r0, r8, lsl #3
   18d18:	andeq	r3, r0, ip, asr #24
   18d1c:	andeq	r3, r0, ip, lsl #12
   18d20:			; <UNDEFINED> instruction: 0xffffedd4

00018d24 <fts_open@@Base>:
   18d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d28:	mov	fp, r1
   18d2c:	bic	r1, r1, #8128	; 0x1fc0
   18d30:	sub	sp, sp, #20
   18d34:	bics	r4, r1, #63	; 0x3f
   18d38:	mov	r7, r0
   18d3c:	mov	r8, r2
   18d40:	bne	19070 <fts_open@@Base+0x34c>
   18d44:	and	r3, fp, #516	; 0x204
   18d48:	cmp	r3, #516	; 0x204
   18d4c:	beq	19094 <fts_open@@Base+0x370>
   18d50:	ands	r5, fp, #18
   18d54:	beq	19058 <fts_open@@Base+0x334>
   18d58:	mov	r0, #96	; 0x60
   18d5c:	bl	11a44 <malloc@plt>
   18d60:	subs	r5, r0, #0
   18d64:	beq	18fa8 <fts_open@@Base+0x284>
   18d68:	mov	r1, r4
   18d6c:	mov	r2, #96	; 0x60
   18d70:	bl	11b1c <memset@plt>
   18d74:	tst	fp, #2
   18d78:	bicne	r3, fp, #512	; 0x200
   18d7c:	streq	fp, [r5, #48]	; 0x30
   18d80:	str	r8, [r5, #44]	; 0x2c
   18d84:	orrne	r3, r3, #4
   18d88:	strne	r3, [r5, #48]	; 0x30
   18d8c:	mvn	r3, #99	; 0x63
   18d90:	str	r3, [r5, #32]
   18d94:	ldr	r3, [r7]
   18d98:	cmp	r3, #0
   18d9c:	beq	1908c <fts_open@@Base+0x368>
   18da0:	mov	r6, r7
   18da4:	mov	r4, #0
   18da8:	mov	r0, r3
   18dac:	bl	11abc <strlen@plt>
   18db0:	ldr	r3, [r6, #4]!
   18db4:	cmp	r4, r0
   18db8:	movcc	r4, r0
   18dbc:	cmp	r3, #0
   18dc0:	bne	18da8 <fts_open@@Base+0x84>
   18dc4:	add	r2, r4, #1
   18dc8:	cmp	r2, #4096	; 0x1000
   18dcc:	movcc	r2, #4096	; 0x1000
   18dd0:	add	r0, r5, #24
   18dd4:	add	r1, r5, #36	; 0x24
   18dd8:	bl	17ecc <triple_free@@Base+0x3430>
   18ddc:	subs	sl, r0, #0
   18de0:	beq	18fec <fts_open@@Base+0x2c8>
   18de4:	ldr	r1, [r7]
   18de8:	cmp	r1, #0
   18dec:	beq	19004 <fts_open@@Base+0x2e0>
   18df0:	ldr	r1, [pc, #696]	; 190b0 <fts_open@@Base+0x38c>
   18df4:	mov	r0, r5
   18df8:	mov	r2, #0
   18dfc:	add	r1, pc, r1
   18e00:	bl	17bb4 <triple_free@@Base+0x3118>
   18e04:	subs	r9, r0, #0
   18e08:	beq	18fe4 <fts_open@@Base+0x2c0>
   18e0c:	mvn	r3, #0
   18e10:	str	r3, [r9, #48]	; 0x30
   18e14:	ldr	r1, [r7]
   18e18:	cmp	r8, #0
   18e1c:	ldrne	sl, [r5, #48]	; 0x30
   18e20:	ubfxne	sl, sl, #10, #1
   18e24:	cmp	r1, #0
   18e28:	beq	190a8 <fts_open@@Base+0x384>
   18e2c:	mov	r2, #0
   18e30:	and	fp, fp, #4096	; 0x1000
   18e34:	add	r3, r5, #48	; 0x30
   18e38:	str	fp, [sp, #4]
   18e3c:	str	r2, [sp, #8]
   18e40:	mov	fp, sl
   18e44:	str	r3, [sp, #12]
   18e48:	mov	r6, r2
   18e4c:	mov	r4, r2
   18e50:	mov	sl, r1
   18e54:	b	18e8c <fts_open@@Base+0x168>
   18e58:	cmp	r8, #0
   18e5c:	mov	r3, #11
   18e60:	mov	r2, #2
   18e64:	strh	r3, [sl, #60]	; 0x3c
   18e68:	mov	r3, #0
   18e6c:	strd	r2, [sl, #120]	; 0x78
   18e70:	beq	18f14 <fts_open@@Base+0x1f0>
   18e74:	str	r4, [sl, #8]
   18e78:	mov	r4, sl
   18e7c:	ldr	sl, [r7, #4]!
   18e80:	add	r6, r6, #1
   18e84:	cmp	sl, #0
   18e88:	beq	18f40 <fts_open@@Base+0x21c>
   18e8c:	mov	r0, sl
   18e90:	bl	11abc <strlen@plt>
   18e94:	ldr	r3, [sp, #4]
   18e98:	cmp	r3, #0
   18e9c:	mov	r2, r0
   18ea0:	bne	18ebc <fts_open@@Base+0x198>
   18ea4:	cmp	r0, #2
   18ea8:	bls	18ebc <fts_open@@Base+0x198>
   18eac:	add	r3, sl, r0
   18eb0:	ldrb	r0, [r3, #-1]
   18eb4:	cmp	r0, #47	; 0x2f
   18eb8:	beq	18fb4 <fts_open@@Base+0x290>
   18ebc:	mov	r1, sl
   18ec0:	mov	r0, r5
   18ec4:	bl	17bb4 <triple_free@@Base+0x3118>
   18ec8:	subs	sl, r0, #0
   18ecc:	beq	18fd4 <fts_open@@Base+0x2b0>
   18ed0:	cmp	r4, #0
   18ed4:	moveq	r3, #0
   18ed8:	andne	r3, fp, #1
   18edc:	mov	r2, #0
   18ee0:	cmp	r3, r2
   18ee4:	str	r2, [sl, #48]	; 0x30
   18ee8:	str	r9, [sl, #4]
   18eec:	add	r2, sl, #176	; 0xb0
   18ef0:	str	r2, [sl, #24]
   18ef4:	bne	18e58 <fts_open@@Base+0x134>
   18ef8:	ldr	r0, [r5, #32]
   18efc:	mov	r2, sl
   18f00:	ldr	r1, [sp, #12]
   18f04:	bl	17d58 <triple_free@@Base+0x32bc>
   18f08:	cmp	r8, #0
   18f0c:	strh	r0, [sl, #60]	; 0x3c
   18f10:	bne	18e74 <fts_open@@Base+0x150>
   18f14:	cmp	r4, #0
   18f18:	str	r8, [sl, #8]
   18f1c:	streq	sl, [sp, #8]
   18f20:	add	r6, r6, #1
   18f24:	ldrne	r3, [sp, #8]
   18f28:	moveq	r4, sl
   18f2c:	strne	sl, [sp, #8]
   18f30:	strne	sl, [r3, #8]
   18f34:	ldr	sl, [r7, #4]!
   18f38:	cmp	sl, #0
   18f3c:	bne	18e8c <fts_open@@Base+0x168>
   18f40:	cmp	r8, #0
   18f44:	cmpne	r6, #1
   18f48:	bhi	19040 <fts_open@@Base+0x31c>
   18f4c:	ldr	r1, [pc, #352]	; 190b4 <fts_open@@Base+0x390>
   18f50:	mov	r0, r5
   18f54:	mov	r2, #0
   18f58:	add	r1, pc, r1
   18f5c:	bl	17bb4 <triple_free@@Base+0x3118>
   18f60:	cmp	r0, #0
   18f64:	str	r0, [r5]
   18f68:	beq	18fd4 <fts_open@@Base+0x2b0>
   18f6c:	str	r4, [r0, #8]
   18f70:	mov	r2, #9
   18f74:	ldr	r3, [r5]
   18f78:	add	r1, r5, #56	; 0x38
   18f7c:	strh	r2, [r3, #60]	; 0x3c
   18f80:	ldr	r0, [r5, #48]	; 0x30
   18f84:	bl	17f4c <triple_free@@Base+0x34b0>
   18f88:	cmp	r0, #0
   18f8c:	beq	18fd4 <fts_open@@Base+0x2b0>
   18f90:	ldr	r1, [r5, #48]	; 0x30
   18f94:	tst	r1, #516	; 0x204
   18f98:	beq	1900c <fts_open@@Base+0x2e8>
   18f9c:	add	r0, r5, #60	; 0x3c
   18fa0:	mvn	r1, #0
   18fa4:	bl	1a02c <fts_children@@Base+0x568>
   18fa8:	mov	r0, r5
   18fac:	add	sp, sp, #20
   18fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18fb4:	ldrb	r1, [r3, #-2]
   18fb8:	sub	r3, r3, #1
   18fbc:	cmp	r1, #47	; 0x2f
   18fc0:	bne	18ebc <fts_open@@Base+0x198>
   18fc4:	sub	r2, r2, #1
   18fc8:	cmp	r2, #1
   18fcc:	bne	18fb4 <fts_open@@Base+0x290>
   18fd0:	b	18ebc <fts_open@@Base+0x198>
   18fd4:	mov	r0, r4
   18fd8:	bl	17c24 <triple_free@@Base+0x3188>
   18fdc:	mov	r0, r9
   18fe0:	bl	118dc <free@plt>
   18fe4:	ldr	r0, [r5, #24]
   18fe8:	bl	118dc <free@plt>
   18fec:	mov	r0, r5
   18ff0:	mov	r5, #0
   18ff4:	bl	118dc <free@plt>
   18ff8:	mov	r0, r5
   18ffc:	add	sp, sp, #20
   19000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19004:	mov	r9, r1
   19008:	b	18e18 <fts_open@@Base+0xf4>
   1900c:	ldr	r2, [pc, #164]	; 190b8 <fts_open@@Base+0x394>
   19010:	ldr	r0, [r5, #32]
   19014:	add	r2, pc, r2
   19018:	bl	17fe4 <triple_free@@Base+0x3548>
   1901c:	mvn	r1, #0
   19020:	cmp	r0, #0
   19024:	str	r0, [r5, #28]
   19028:	add	r0, r5, #60	; 0x3c
   1902c:	ldrlt	r3, [r5, #48]	; 0x30
   19030:	orrlt	r3, r3, #4
   19034:	strlt	r3, [r5, #48]	; 0x30
   19038:	bl	1a02c <fts_children@@Base+0x568>
   1903c:	b	18fa8 <fts_open@@Base+0x284>
   19040:	mov	r1, r4
   19044:	mov	r2, r6
   19048:	mov	r0, r5
   1904c:	bl	17ac4 <triple_free@@Base+0x3028>
   19050:	mov	r4, r0
   19054:	b	18f4c <fts_open@@Base+0x228>
   19058:	bl	11b04 <__errno_location@plt>
   1905c:	mov	r3, #22
   19060:	str	r3, [r0]
   19064:	mov	r0, r5
   19068:	add	sp, sp, #20
   1906c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19070:	bl	11b04 <__errno_location@plt>
   19074:	mov	r5, #0
   19078:	mov	r3, #22
   1907c:	str	r3, [r0]
   19080:	mov	r0, r5
   19084:	add	sp, sp, #20
   19088:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1908c:	mov	r2, #4096	; 0x1000
   19090:	b	18dd0 <fts_open@@Base+0xac>
   19094:	bl	11b04 <__errno_location@plt>
   19098:	mov	r5, r4
   1909c:	mov	r3, #22
   190a0:	str	r3, [r0]
   190a4:	b	18fa8 <fts_open@@Base+0x284>
   190a8:	mov	r4, r1
   190ac:	b	18f4c <fts_open@@Base+0x228>
   190b0:	muleq	r0, r0, ip
   190b4:	andeq	r2, r0, r4, lsr fp
   190b8:	andeq	r2, r0, ip, lsl #23

000190bc <fts_close@@Base>:
   190bc:	push	{r4, r5, r6, lr}
   190c0:	mov	r5, r0
   190c4:	ldr	r3, [r0]
   190c8:	cmp	r3, #0
   190cc:	beq	19108 <fts_close@@Base+0x4c>
   190d0:	ldr	r2, [r3, #48]	; 0x30
   190d4:	cmp	r2, #0
   190d8:	blt	191f4 <fts_close@@Base+0x138>
   190dc:	ldr	r4, [r3, #8]
   190e0:	mov	r0, r3
   190e4:	cmp	r4, #0
   190e8:	ldreq	r4, [r3, #4]
   190ec:	bl	118dc <free@plt>
   190f0:	ldr	r2, [r4, #48]	; 0x30
   190f4:	mov	r3, r4
   190f8:	cmp	r2, #0
   190fc:	bge	190dc <fts_close@@Base+0x20>
   19100:	mov	r0, r4
   19104:	bl	118dc <free@plt>
   19108:	ldr	r0, [r5, #4]
   1910c:	cmp	r0, #0
   19110:	beq	19118 <fts_close@@Base+0x5c>
   19114:	bl	17c24 <triple_free@@Base+0x3188>
   19118:	ldr	r0, [r5, #8]
   1911c:	bl	118dc <free@plt>
   19120:	ldr	r0, [r5, #24]
   19124:	bl	118dc <free@plt>
   19128:	ldr	r3, [r5, #48]	; 0x30
   1912c:	tst	r3, #512	; 0x200
   19130:	beq	191a8 <fts_close@@Base+0xec>
   19134:	ldr	r0, [r5, #32]
   19138:	cmp	r0, #0
   1913c:	blt	1914c <fts_close@@Base+0x90>
   19140:	bl	11c6c <close@plt>
   19144:	cmp	r0, #0
   19148:	bne	191e8 <fts_close@@Base+0x12c>
   1914c:	mov	r4, #0
   19150:	add	r0, r5, #60	; 0x3c
   19154:	bl	17c5c <triple_free@@Base+0x31c0>
   19158:	ldr	r0, [r5, #52]	; 0x34
   1915c:	cmp	r0, #0
   19160:	beq	19168 <fts_close@@Base+0xac>
   19164:	bl	143b8 <close_stdout@@Base+0xe44>
   19168:	ldr	r2, [r5, #48]	; 0x30
   1916c:	movw	r3, #258	; 0x102
   19170:	ldr	r0, [r5, #56]	; 0x38
   19174:	and	r3, r2, r3
   19178:	cmp	r3, #0
   1917c:	beq	191e0 <fts_close@@Base+0x124>
   19180:	cmp	r0, #0
   19184:	beq	1918c <fts_close@@Base+0xd0>
   19188:	bl	143b8 <close_stdout@@Base+0xe44>
   1918c:	mov	r0, r5
   19190:	bl	118dc <free@plt>
   19194:	cmp	r4, #0
   19198:	moveq	r3, r4
   1919c:	bne	19224 <fts_close@@Base+0x168>
   191a0:	mov	r0, r3
   191a4:	pop	{r4, r5, r6, pc}
   191a8:	tst	r3, #4
   191ac:	bne	1914c <fts_close@@Base+0x90>
   191b0:	ldr	r0, [r5, #28]
   191b4:	bl	11bdc <fchdir@plt>
   191b8:	cmp	r0, #0
   191bc:	bne	191fc <fts_close@@Base+0x140>
   191c0:	ldr	r0, [r5, #28]
   191c4:	bl	11c6c <close@plt>
   191c8:	cmp	r0, #0
   191cc:	beq	1914c <fts_close@@Base+0x90>
   191d0:	bl	11b04 <__errno_location@plt>
   191d4:	mov	r6, r0
   191d8:	ldr	r4, [r6]
   191dc:	b	19150 <fts_close@@Base+0x94>
   191e0:	bl	118dc <free@plt>
   191e4:	b	1918c <fts_close@@Base+0xd0>
   191e8:	bl	11b04 <__errno_location@plt>
   191ec:	ldr	r4, [r0]
   191f0:	b	19150 <fts_close@@Base+0x94>
   191f4:	mov	r4, r3
   191f8:	b	19100 <fts_close@@Base+0x44>
   191fc:	bl	11b04 <__errno_location@plt>
   19200:	mov	r6, r0
   19204:	ldr	r0, [r5, #28]
   19208:	ldr	r4, [r6]
   1920c:	bl	11c6c <close@plt>
   19210:	cmp	r0, #0
   19214:	beq	19150 <fts_close@@Base+0x94>
   19218:	cmp	r4, #0
   1921c:	bne	19150 <fts_close@@Base+0x94>
   19220:	b	191d8 <fts_close@@Base+0x11c>
   19224:	bl	11b04 <__errno_location@plt>
   19228:	mvn	r3, #0
   1922c:	str	r4, [r0]
   19230:	b	191a0 <fts_close@@Base+0xe4>

00019234 <fts_read@@Base>:
   19234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19238:	sub	sp, sp, #124	; 0x7c
   1923c:	ldr	r9, [pc, #2100]	; 19a78 <fts_read@@Base+0x844>
   19240:	mov	r8, r0
   19244:	ldr	r3, [pc, #2096]	; 19a7c <fts_read@@Base+0x848>
   19248:	add	r9, pc, r9
   1924c:	ldr	fp, [r0]
   19250:	ldr	sl, [r9, r3]
   19254:	cmp	fp, #0
   19258:	ldr	r3, [sl]
   1925c:	str	r3, [sp, #116]	; 0x74
   19260:	beq	19404 <fts_read@@Base+0x1d0>
   19264:	ldr	r3, [r0, #48]	; 0x30
   19268:	ands	r3, r3, #16384	; 0x4000
   1926c:	bne	19404 <fts_read@@Base+0x1d0>
   19270:	ldrh	r2, [fp, #64]	; 0x40
   19274:	mov	r1, #3
   19278:	strh	r1, [fp, #64]	; 0x40
   1927c:	cmp	r2, #1
   19280:	beq	1961c <fts_read@@Base+0x3e8>
   19284:	cmp	r2, #2
   19288:	ldrh	r3, [fp, #60]	; 0x3c
   1928c:	beq	19380 <fts_read@@Base+0x14c>
   19290:	cmp	r3, #1
   19294:	bne	192c4 <fts_read@@Base+0x90>
   19298:	b	193f8 <fts_read@@Base+0x1c4>
   1929c:	str	r6, [r8]
   192a0:	mov	r0, fp
   192a4:	bl	118dc <free@plt>
   192a8:	ldr	r4, [r6, #48]	; 0x30
   192ac:	cmp	r4, #0
   192b0:	beq	19424 <fts_read@@Base+0x1f0>
   192b4:	ldrh	r3, [r6, #64]	; 0x40
   192b8:	cmp	r3, #4
   192bc:	bne	19520 <fts_read@@Base+0x2ec>
   192c0:	mov	fp, r6
   192c4:	ldr	r6, [fp, #8]
   192c8:	cmp	r6, #0
   192cc:	bne	1929c <fts_read@@Base+0x68>
   192d0:	ldr	r4, [fp, #4]
   192d4:	ldr	r3, [r4, #12]
   192d8:	cmp	r3, #0
   192dc:	bne	19824 <fts_read@@Base+0x5f0>
   192e0:	str	r4, [r8]
   192e4:	mov	r0, fp
   192e8:	bl	118dc <free@plt>
   192ec:	ldr	r3, [r4, #48]	; 0x30
   192f0:	cmn	r3, #1
   192f4:	beq	196e0 <fts_read@@Base+0x4ac>
   192f8:	ldrh	r3, [r4, #60]	; 0x3c
   192fc:	cmp	r3, #11
   19300:	beq	19594 <fts_read@@Base+0x360>
   19304:	ldr	r3, [r4, #40]	; 0x28
   19308:	mov	r1, #0
   1930c:	ldr	r2, [r8, #24]
   19310:	strb	r1, [r2, r3]
   19314:	ldr	r3, [r4, #48]	; 0x30
   19318:	cmp	r3, r1
   1931c:	beq	19688 <fts_read@@Base+0x454>
   19320:	ldrh	r3, [r4, #62]	; 0x3e
   19324:	tst	r3, #2
   19328:	beq	19638 <fts_read@@Base+0x404>
   1932c:	ldr	r3, [r8, #48]	; 0x30
   19330:	tst	r3, #4
   19334:	beq	1969c <fts_read@@Base+0x468>
   19338:	ldr	r0, [r4, #36]	; 0x24
   1933c:	bl	11c6c <close@plt>
   19340:	ldr	r3, [r4, #32]
   19344:	cmp	r3, #0
   19348:	movne	r3, #7
   1934c:	strhne	r3, [r4, #60]	; 0x3c
   19350:	bne	1936c <fts_read@@Base+0x138>
   19354:	mov	r3, #6
   19358:	add	r1, r8, #56	; 0x38
   1935c:	strh	r3, [r4, #60]	; 0x3c
   19360:	mov	r2, r4
   19364:	ldr	r0, [r8, #48]	; 0x30
   19368:	bl	18348 <triple_free@@Base+0x38ac>
   1936c:	ldr	r3, [r8, #48]	; 0x30
   19370:	tst	r3, #16384	; 0x4000
   19374:	bne	19404 <fts_read@@Base+0x1d0>
   19378:	mov	r6, r4
   1937c:	b	19408 <fts_read@@Base+0x1d4>
   19380:	sub	r2, r3, #12
   19384:	cmp	r2, #1
   19388:	bls	196b8 <fts_read@@Base+0x484>
   1938c:	cmp	r3, #1
   19390:	bne	192c4 <fts_read@@Base+0x90>
   19394:	ldr	r3, [r8, #48]	; 0x30
   19398:	tst	r3, #64	; 0x40
   1939c:	beq	19598 <fts_read@@Base+0x364>
   193a0:	ldrd	r6, [fp, #72]	; 0x48
   193a4:	ldrd	r4, [r8, #16]
   193a8:	cmp	r7, r5
   193ac:	cmpeq	r6, r4
   193b0:	beq	19598 <fts_read@@Base+0x364>
   193b4:	ldrh	r3, [fp, #62]	; 0x3e
   193b8:	tst	r3, #2
   193bc:	bne	19818 <fts_read@@Base+0x5e4>
   193c0:	ldr	r0, [r8, #4]
   193c4:	cmp	r0, #0
   193c8:	beq	193d8 <fts_read@@Base+0x1a4>
   193cc:	bl	17c24 <triple_free@@Base+0x3188>
   193d0:	mov	r3, #0
   193d4:	str	r3, [r8, #4]
   193d8:	mov	r3, #6
   193dc:	add	r1, r8, #56	; 0x38
   193e0:	strh	r3, [fp, #60]	; 0x3c
   193e4:	mov	r2, fp
   193e8:	ldr	r0, [r8, #48]	; 0x30
   193ec:	mov	r6, fp
   193f0:	bl	18348 <triple_free@@Base+0x38ac>
   193f4:	b	19408 <fts_read@@Base+0x1d4>
   193f8:	cmp	r2, #4
   193fc:	bne	19394 <fts_read@@Base+0x160>
   19400:	b	193b4 <fts_read@@Base+0x180>
   19404:	mov	r6, #0
   19408:	ldr	r2, [sp, #116]	; 0x74
   1940c:	mov	r0, r6
   19410:	ldr	r3, [sl]
   19414:	cmp	r2, r3
   19418:	bne	1998c <fts_read@@Base+0x758>
   1941c:	add	sp, sp, #124	; 0x7c
   19420:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19424:	mov	r0, r8
   19428:	bl	17d08 <triple_free@@Base+0x326c>
   1942c:	cmp	r0, #0
   19430:	bne	19788 <fts_read@@Base+0x554>
   19434:	ldr	r2, [r8, #48]	; 0x30
   19438:	movw	r3, #258	; 0x102
   1943c:	ldr	r0, [r8, #56]	; 0x38
   19440:	and	r3, r2, r3
   19444:	cmp	r3, #0
   19448:	beq	19770 <fts_read@@Base+0x53c>
   1944c:	cmp	r0, #0
   19450:	beq	19458 <fts_read@@Base+0x224>
   19454:	bl	143b8 <close_stdout@@Base+0xe44>
   19458:	ldr	r3, [r6, #52]	; 0x34
   1945c:	add	r4, r6, #176	; 0xb0
   19460:	add	r2, r3, #1
   19464:	mov	r1, r4
   19468:	str	r3, [r6, #40]	; 0x28
   1946c:	ldr	r0, [r8, #24]
   19470:	bl	118d0 <memmove@plt>
   19474:	mov	r0, r4
   19478:	mov	r1, #47	; 0x2f
   1947c:	bl	11b94 <strrchr@plt>
   19480:	cmp	r0, #0
   19484:	beq	194b4 <fts_read@@Base+0x280>
   19488:	cmp	r4, r0
   1948c:	beq	19778 <fts_read@@Base+0x544>
   19490:	add	r7, r0, #1
   19494:	mov	r0, r7
   19498:	bl	11abc <strlen@plt>
   1949c:	mov	r1, r7
   194a0:	mov	r5, r0
   194a4:	mov	r0, r4
   194a8:	add	r2, r5, #1
   194ac:	bl	118d0 <memmove@plt>
   194b0:	str	r5, [r6, #52]	; 0x34
   194b4:	ldr	r3, [r8, #24]
   194b8:	add	r1, r8, #56	; 0x38
   194bc:	str	r3, [r6, #28]
   194c0:	str	r3, [r6, #24]
   194c4:	ldr	r0, [r8, #48]	; 0x30
   194c8:	bl	17f4c <triple_free@@Base+0x34b0>
   194cc:	str	r6, [r8]
   194d0:	ldrh	r0, [r6, #60]	; 0x3c
   194d4:	cmp	r0, #11
   194d8:	beq	19578 <fts_read@@Base+0x344>
   194dc:	cmp	r0, #1
   194e0:	bne	19408 <fts_read@@Base+0x1d4>
   194e4:	ldr	r3, [r6, #48]	; 0x30
   194e8:	add	r1, r8, #56	; 0x38
   194ec:	ldr	r0, [r8, #48]	; 0x30
   194f0:	mov	r2, r6
   194f4:	cmp	r3, #0
   194f8:	ldrdeq	r4, [r6, #72]	; 0x48
   194fc:	strdeq	r4, [r8, #16]
   19500:	bl	1804c <triple_free@@Base+0x35b0>
   19504:	subs	r4, r0, #0
   19508:	bne	19408 <fts_read@@Base+0x1d4>
   1950c:	bl	11b04 <__errno_location@plt>
   19510:	mov	r6, r4
   19514:	mov	r3, #12
   19518:	str	r3, [r0]
   1951c:	b	19408 <fts_read@@Base+0x1d4>
   19520:	cmp	r3, #2
   19524:	beq	19854 <fts_read@@Base+0x620>
   19528:	ldr	r0, [r6, #4]
   1952c:	mov	ip, #47	; 0x2f
   19530:	ldr	r2, [r8, #24]
   19534:	add	r1, r6, #176	; 0xb0
   19538:	ldr	r3, [r0, #40]	; 0x28
   1953c:	ldr	lr, [r0, #28]
   19540:	sub	r0, r3, #1
   19544:	ldrb	lr, [lr, r0]
   19548:	cmp	lr, ip
   1954c:	moveq	r3, r0
   19550:	add	r0, r2, r3
   19554:	strb	ip, [r2, r3]
   19558:	add	r0, r0, #1
   1955c:	ldr	r2, [r6, #52]	; 0x34
   19560:	add	r2, r2, #1
   19564:	bl	118d0 <memmove@plt>
   19568:	str	r6, [r8]
   1956c:	ldrh	r0, [r6, #60]	; 0x3c
   19570:	cmp	r0, #11
   19574:	bne	194dc <fts_read@@Base+0x2a8>
   19578:	ldrd	r4, [r6, #120]	; 0x78
   1957c:	cmp	r5, #0
   19580:	cmpeq	r4, #2
   19584:	beq	1979c <fts_read@@Base+0x568>
   19588:	cmp	r5, #0
   1958c:	cmpeq	r4, #1
   19590:	beq	19408 <fts_read@@Base+0x1d4>
   19594:	bl	11c60 <abort@plt>
   19598:	ldr	r0, [r8, #4]
   1959c:	cmp	r0, #0
   195a0:	beq	19714 <fts_read@@Base+0x4e0>
   195a4:	tst	r3, #8192	; 0x2000
   195a8:	bne	19700 <fts_read@@Base+0x4cc>
   195ac:	ldr	ip, [fp, #24]
   195b0:	mov	r0, r8
   195b4:	add	r1, fp, #72	; 0x48
   195b8:	add	r2, fp, #168	; 0xa8
   195bc:	mvn	r3, #0
   195c0:	str	ip, [sp]
   195c4:	bl	18100 <triple_free@@Base+0x3664>
   195c8:	cmp	r0, #0
   195cc:	beq	1960c <fts_read@@Base+0x3d8>
   195d0:	bl	11b04 <__errno_location@plt>
   195d4:	ldrh	r3, [fp, #62]	; 0x3e
   195d8:	orr	r3, r3, #1
   195dc:	ldr	r2, [r0]
   195e0:	strh	r3, [fp, #62]	; 0x3e
   195e4:	str	r2, [fp, #32]
   195e8:	ldr	r6, [r8, #4]
   195ec:	cmp	r6, #0
   195f0:	beq	19610 <fts_read@@Base+0x3dc>
   195f4:	ldr	r3, [r6, #4]
   195f8:	ldr	r3, [r3, #24]
   195fc:	str	r3, [r6, #24]
   19600:	ldr	r6, [r6, #8]
   19604:	cmp	r6, #0
   19608:	bne	195f4 <fts_read@@Base+0x3c0>
   1960c:	ldr	r6, [r8, #4]
   19610:	mov	r3, #0
   19614:	str	r3, [r8, #4]
   19618:	b	19528 <fts_read@@Base+0x2f4>
   1961c:	ldr	r0, [r0, #32]
   19620:	add	r1, r8, #48	; 0x30
   19624:	mov	r2, fp
   19628:	mov	r6, fp
   1962c:	bl	17d58 <triple_free@@Base+0x32bc>
   19630:	strh	r0, [fp, #60]	; 0x3c
   19634:	b	19408 <fts_read@@Base+0x1d4>
   19638:	tst	r3, #1
   1963c:	bne	19340 <fts_read@@Base+0x10c>
   19640:	ldr	r2, [r4, #4]
   19644:	mov	r0, r8
   19648:	ldr	r1, [pc, #1072]	; 19a80 <fts_read@@Base+0x84c>
   1964c:	mvn	r3, #0
   19650:	add	r1, pc, r1
   19654:	str	r1, [sp]
   19658:	add	r1, r2, #72	; 0x48
   1965c:	add	r2, r2, #168	; 0xa8
   19660:	bl	18100 <triple_free@@Base+0x3664>
   19664:	cmp	r0, #0
   19668:	beq	19340 <fts_read@@Base+0x10c>
   1966c:	bl	11b04 <__errno_location@plt>
   19670:	ldr	r3, [r0]
   19674:	str	r3, [r4, #32]
   19678:	ldr	r3, [r8, #48]	; 0x30
   1967c:	orr	r3, r3, #16384	; 0x4000
   19680:	str	r3, [r8, #48]	; 0x30
   19684:	b	19340 <fts_read@@Base+0x10c>
   19688:	mov	r0, r8
   1968c:	bl	17d08 <triple_free@@Base+0x326c>
   19690:	cmp	r0, #0
   19694:	beq	19340 <fts_read@@Base+0x10c>
   19698:	b	1966c <fts_read@@Base+0x438>
   1969c:	tst	r3, #512	; 0x200
   196a0:	beq	19880 <fts_read@@Base+0x64c>
   196a4:	mov	r0, r8
   196a8:	ldr	r1, [r4, #36]	; 0x24
   196ac:	mov	r2, #1
   196b0:	bl	17c94 <triple_free@@Base+0x31f8>
   196b4:	b	19338 <fts_read@@Base+0x104>
   196b8:	ldr	r0, [r0, #32]
   196bc:	add	r1, r8, #48	; 0x30
   196c0:	mov	r2, fp
   196c4:	mov	r3, #1
   196c8:	bl	17d58 <triple_free@@Base+0x32bc>
   196cc:	cmp	r0, #1
   196d0:	strh	r0, [fp, #60]	; 0x3c
   196d4:	beq	198bc <fts_read@@Base+0x688>
   196d8:	mov	r6, fp
   196dc:	b	194cc <fts_read@@Base+0x298>
   196e0:	mov	r0, r4
   196e4:	bl	118dc <free@plt>
   196e8:	bl	11b04 <__errno_location@plt>
   196ec:	mov	r3, #0
   196f0:	mov	r6, r3
   196f4:	str	r3, [r0]
   196f8:	str	r3, [r8]
   196fc:	b	19408 <fts_read@@Base+0x1d4>
   19700:	bic	r3, r3, #8192	; 0x2000
   19704:	str	r3, [r8, #48]	; 0x30
   19708:	bl	17c24 <triple_free@@Base+0x3188>
   1970c:	mov	r3, #0
   19710:	str	r3, [r8, #4]
   19714:	mov	r0, r8
   19718:	mov	r1, #3
   1971c:	bl	18438 <triple_free@@Base+0x399c>
   19720:	cmp	r0, #0
   19724:	str	r0, [r8, #4]
   19728:	movne	r6, r0
   1972c:	bne	19610 <fts_read@@Base+0x3dc>
   19730:	ldr	r0, [r8, #48]	; 0x30
   19734:	tst	r0, #16384	; 0x4000
   19738:	bne	19404 <fts_read@@Base+0x1d0>
   1973c:	ldr	r3, [fp, #32]
   19740:	cmp	r3, #0
   19744:	beq	1975c <fts_read@@Base+0x528>
   19748:	ldrh	r3, [fp, #60]	; 0x3c
   1974c:	cmp	r3, #4
   19750:	movne	r3, #7
   19754:	strhne	r3, [fp, #60]	; 0x3c
   19758:	ldrne	r0, [r8, #48]	; 0x30
   1975c:	add	r1, r8, #56	; 0x38
   19760:	mov	r2, fp
   19764:	bl	18348 <triple_free@@Base+0x38ac>
   19768:	mov	r6, fp
   1976c:	b	19408 <fts_read@@Base+0x1d4>
   19770:	bl	118dc <free@plt>
   19774:	b	19458 <fts_read@@Base+0x224>
   19778:	ldrb	r3, [r6, #177]	; 0xb1
   1977c:	cmp	r3, #0
   19780:	bne	19490 <fts_read@@Base+0x25c>
   19784:	b	194b4 <fts_read@@Base+0x280>
   19788:	ldr	r3, [r8, #48]	; 0x30
   1978c:	mov	r6, r4
   19790:	orr	r3, r3, #16384	; 0x4000
   19794:	str	r3, [r8, #48]	; 0x30
   19798:	b	19408 <fts_read@@Base+0x1d4>
   1979c:	ldr	r3, [r6, #48]	; 0x30
   197a0:	ldr	r4, [r6, #4]
   197a4:	cmp	r3, #0
   197a8:	ble	197c8 <fts_read@@Base+0x594>
   197ac:	ldr	r3, [r4, #56]	; 0x38
   197b0:	cmp	r3, #0
   197b4:	bne	197c8 <fts_read@@Base+0x594>
   197b8:	ldr	r3, [r8, #48]	; 0x30
   197bc:	and	r3, r3, #24
   197c0:	cmp	r3, #24
   197c4:	beq	19944 <fts_read@@Base+0x710>
   197c8:	mov	r3, #0
   197cc:	ldr	r0, [r8, #32]
   197d0:	add	r1, r8, #48	; 0x30
   197d4:	mov	r2, r6
   197d8:	bl	17d58 <triple_free@@Base+0x32bc>
   197dc:	ldr	r3, [r6, #88]	; 0x58
   197e0:	and	r3, r3, #61440	; 0xf000
   197e4:	cmp	r3, #16384	; 0x4000
   197e8:	strh	r0, [r6, #60]	; 0x3c
   197ec:	bne	194dc <fts_read@@Base+0x2a8>
   197f0:	ldr	r3, [r6, #48]	; 0x30
   197f4:	cmp	r3, #0
   197f8:	beq	194dc <fts_read@@Base+0x2a8>
   197fc:	ldr	r3, [r4, #56]	; 0x38
   19800:	cmp	r3, #0
   19804:	beq	194dc <fts_read@@Base+0x2a8>
   19808:	sub	r3, r3, #1
   1980c:	str	r3, [r4, #56]	; 0x38
   19810:	ldrh	r0, [r6, #60]	; 0x3c
   19814:	b	194dc <fts_read@@Base+0x2a8>
   19818:	ldr	r0, [fp, #36]	; 0x24
   1981c:	bl	11c6c <close@plt>
   19820:	b	193c0 <fts_read@@Base+0x18c>
   19824:	str	r4, [r8]
   19828:	mov	r0, r8
   1982c:	ldr	r3, [r4, #40]	; 0x28
   19830:	mov	r1, #3
   19834:	ldr	r2, [r8, #24]
   19838:	strb	r6, [r2, r3]
   1983c:	bl	18438 <triple_free@@Base+0x399c>
   19840:	subs	r6, r0, #0
   19844:	beq	198f8 <fts_read@@Base+0x6c4>
   19848:	mov	r0, fp
   1984c:	bl	118dc <free@plt>
   19850:	b	19528 <fts_read@@Base+0x2f4>
   19854:	ldr	r0, [r8, #32]
   19858:	add	r1, r8, #48	; 0x30
   1985c:	mov	r2, r6
   19860:	mov	r3, #1
   19864:	bl	17d58 <triple_free@@Base+0x32bc>
   19868:	cmp	r0, #1
   1986c:	strh	r0, [r6, #60]	; 0x3c
   19870:	beq	1990c <fts_read@@Base+0x6d8>
   19874:	mov	r3, #3
   19878:	strh	r3, [r6, #64]	; 0x40
   1987c:	b	19528 <fts_read@@Base+0x2f4>
   19880:	ldr	r0, [r4, #36]	; 0x24
   19884:	bl	11bdc <fchdir@plt>
   19888:	cmp	r0, #0
   1988c:	beq	19338 <fts_read@@Base+0x104>
   19890:	bl	11b04 <__errno_location@plt>
   19894:	ldr	r5, [r0]
   19898:	mov	r6, r0
   1989c:	ldr	r0, [r4, #36]	; 0x24
   198a0:	bl	11c6c <close@plt>
   198a4:	str	r5, [r6]
   198a8:	str	r5, [r4, #32]
   198ac:	ldr	r3, [r8, #48]	; 0x30
   198b0:	orr	r3, r3, #16384	; 0x4000
   198b4:	str	r3, [r8, #48]	; 0x30
   198b8:	b	19338 <fts_read@@Base+0x104>
   198bc:	ldr	r1, [r8, #48]	; 0x30
   198c0:	tst	r1, #4
   198c4:	bne	196d8 <fts_read@@Base+0x4a4>
   198c8:	ldr	r2, [pc, #436]	; 19a84 <fts_read@@Base+0x850>
   198cc:	ldr	r0, [r8, #32]
   198d0:	add	r2, pc, r2
   198d4:	bl	17fe4 <triple_free@@Base+0x3548>
   198d8:	cmp	r0, #0
   198dc:	str	r0, [fp, #36]	; 0x24
   198e0:	blt	19990 <fts_read@@Base+0x75c>
   198e4:	ldrh	r3, [fp, #62]	; 0x3e
   198e8:	mov	r6, fp
   198ec:	orr	r3, r3, #2
   198f0:	strh	r3, [fp, #62]	; 0x3e
   198f4:	b	194cc <fts_read@@Base+0x298>
   198f8:	ldr	r3, [r8, #48]	; 0x30
   198fc:	tst	r3, #16384	; 0x4000
   19900:	bne	19404 <fts_read@@Base+0x1d0>
   19904:	ldr	r4, [fp, #4]
   19908:	b	192e0 <fts_read@@Base+0xac>
   1990c:	ldr	r1, [r8, #48]	; 0x30
   19910:	tst	r1, #4
   19914:	bne	19874 <fts_read@@Base+0x640>
   19918:	ldr	r2, [pc, #360]	; 19a88 <fts_read@@Base+0x854>
   1991c:	ldr	r0, [r8, #32]
   19920:	add	r2, pc, r2
   19924:	bl	17fe4 <triple_free@@Base+0x3548>
   19928:	cmp	r0, #0
   1992c:	str	r0, [r6, #36]	; 0x24
   19930:	blt	199ac <fts_read@@Base+0x778>
   19934:	ldrh	r3, [r6, #62]	; 0x3e
   19938:	orr	r3, r3, #2
   1993c:	strh	r3, [r6, #62]	; 0x3e
   19940:	b	19874 <fts_read@@Base+0x640>
   19944:	ldr	r7, [r4, #44]	; 0x2c
   19948:	ldr	r3, [r7, #48]	; 0x30
   1994c:	ldr	r5, [r7, #52]	; 0x34
   19950:	tst	r3, #512	; 0x200
   19954:	beq	197c8 <fts_read@@Base+0x594>
   19958:	cmp	r5, #0
   1995c:	beq	19a30 <fts_read@@Base+0x7fc>
   19960:	ldrd	r2, [r4, #72]	; 0x48
   19964:	add	r1, sp, #120	; 0x78
   19968:	mov	r0, r5
   1996c:	strd	r2, [r1, #-112]!	; 0xffffff90
   19970:	bl	13f20 <close_stdout@@Base+0x9ac>
   19974:	subs	fp, r0, #0
   19978:	beq	199c4 <fts_read@@Base+0x790>
   1997c:	ldrb	r7, [fp, #8]
   19980:	cmp	r7, #0
   19984:	bne	19810 <fts_read@@Base+0x5dc>
   19988:	b	197c8 <fts_read@@Base+0x594>
   1998c:	bl	1193c <__stack_chk_fail@plt>
   19990:	bl	11b04 <__errno_location@plt>
   19994:	mov	r6, fp
   19998:	mov	r3, #7
   1999c:	ldr	r2, [r0]
   199a0:	strh	r3, [fp, #60]	; 0x3c
   199a4:	str	r2, [fp, #32]
   199a8:	b	194cc <fts_read@@Base+0x298>
   199ac:	bl	11b04 <__errno_location@plt>
   199b0:	mov	r3, #7
   199b4:	ldr	r2, [r0]
   199b8:	strh	r3, [r6, #60]	; 0x3c
   199bc:	str	r2, [r6, #32]
   199c0:	b	19874 <fts_read@@Base+0x640>
   199c4:	mov	r0, #16
   199c8:	bl	11a44 <malloc@plt>
   199cc:	subs	r9, r0, #0
   199d0:	beq	197c8 <fts_read@@Base+0x594>
   199d4:	ldr	r0, [r7, #32]
   199d8:	add	r1, sp, #24
   199dc:	bl	11864 <fstatfs64@plt>
   199e0:	cmp	r0, #0
   199e4:	movne	r7, fp
   199e8:	bne	19a04 <fts_read@@Base+0x7d0>
   199ec:	ldr	r7, [sp, #24]
   199f0:	movw	r3, #18803	; 0x4973
   199f4:	movt	r3, #21093	; 0x5265
   199f8:	subs	r3, r7, r3
   199fc:	rsbs	r7, r3, #0
   19a00:	adcs	r7, r7, r3
   19a04:	strb	r7, [r9, #8]
   19a08:	mov	r0, r5
   19a0c:	ldrd	r2, [r4, #72]	; 0x48
   19a10:	mov	r1, r9
   19a14:	strd	r2, [r9]
   19a18:	bl	147fc <close_stdout@@Base+0x1288>
   19a1c:	cmp	r0, #0
   19a20:	beq	19a6c <fts_read@@Base+0x838>
   19a24:	cmp	r9, r0
   19a28:	beq	19980 <fts_read@@Base+0x74c>
   19a2c:	b	19594 <fts_read@@Base+0x360>
   19a30:	ldr	ip, [pc, #84]	; 19a8c <fts_read@@Base+0x858>
   19a34:	mov	r1, r5
   19a38:	ldr	r2, [pc, #80]	; 19a90 <fts_read@@Base+0x85c>
   19a3c:	mov	r0, #13
   19a40:	ldr	r3, [pc, #76]	; 19a94 <fts_read@@Base+0x860>
   19a44:	ldr	ip, [r9, ip]
   19a48:	add	r2, pc, r2
   19a4c:	add	r3, pc, r3
   19a50:	str	ip, [sp]
   19a54:	bl	141d4 <close_stdout@@Base+0xc60>
   19a58:	cmp	r0, #0
   19a5c:	mov	r5, r0
   19a60:	str	r0, [r7, #52]	; 0x34
   19a64:	bne	19960 <fts_read@@Base+0x72c>
   19a68:	b	197c8 <fts_read@@Base+0x594>
   19a6c:	mov	r0, r9
   19a70:	bl	118dc <free@plt>
   19a74:	b	197c8 <fts_read@@Base+0x594>
   19a78:			; <UNDEFINED> instruction: 0x00013db0
   19a7c:	andeq	r0, r0, r8, lsl #3
   19a80:	andeq	r2, r0, r4, ror #23
   19a84:	ldrdeq	r2, [r0], -r0
   19a88:	andeq	r2, r0, r0, lsl #5
   19a8c:	andeq	r0, r0, r4, lsl #3
   19a90:			; <UNDEFINED> instruction: 0xffffe00c
   19a94:			; <UNDEFINED> instruction: 0xffffe024

00019a98 <fts_set@@Base>:
   19a98:	cmp	r2, #4
   19a9c:	push	{r3, lr}
   19aa0:	movls	r3, #0
   19aa4:	strhls	r2, [r1, #64]	; 0x40
   19aa8:	bls	19abc <fts_set@@Base+0x24>
   19aac:	bl	11b04 <__errno_location@plt>
   19ab0:	mov	r3, #1
   19ab4:	mov	r2, #22
   19ab8:	str	r2, [r0]
   19abc:	mov	r0, r3
   19ac0:	pop	{r3, pc}

00019ac4 <fts_children@@Base>:
   19ac4:	push	{r4, r5, r6, r7, r8, lr}
   19ac8:	bics	r7, r1, #8192	; 0x2000
   19acc:	mov	r5, r1
   19ad0:	mov	r4, r0
   19ad4:	bne	19bd0 <fts_children@@Base+0x10c>
   19ad8:	bl	11b04 <__errno_location@plt>
   19adc:	ldr	r6, [r4]
   19ae0:	str	r7, [r0]
   19ae4:	mov	r8, r0
   19ae8:	ldr	r3, [r4, #48]	; 0x30
   19aec:	ands	r3, r3, #16384	; 0x4000
   19af0:	bne	19be8 <fts_children@@Base+0x124>
   19af4:	ldrh	r2, [r6, #60]	; 0x3c
   19af8:	cmp	r2, #9
   19afc:	ldreq	r3, [r6, #8]
   19b00:	beq	19b70 <fts_children@@Base+0xac>
   19b04:	cmp	r2, #1
   19b08:	bne	19b70 <fts_children@@Base+0xac>
   19b0c:	ldr	r0, [r4, #4]
   19b10:	cmp	r0, #0
   19b14:	beq	19b1c <fts_children@@Base+0x58>
   19b18:	bl	17c24 <triple_free@@Base+0x3188>
   19b1c:	cmp	r5, #8192	; 0x2000
   19b20:	ldreq	r3, [r4, #48]	; 0x30
   19b24:	moveq	r5, #2
   19b28:	movne	r5, #1
   19b2c:	orreq	r3, r3, #8192	; 0x2000
   19b30:	streq	r3, [r4, #48]	; 0x30
   19b34:	ldr	r3, [r6, #48]	; 0x30
   19b38:	cmp	r3, #0
   19b3c:	bne	19b5c <fts_children@@Base+0x98>
   19b40:	ldr	r3, [r6, #24]
   19b44:	ldrb	r3, [r3]
   19b48:	cmp	r3, #47	; 0x2f
   19b4c:	beq	19b5c <fts_children@@Base+0x98>
   19b50:	ldr	r1, [r4, #48]	; 0x30
   19b54:	ands	r6, r1, #4
   19b58:	beq	19b78 <fts_children@@Base+0xb4>
   19b5c:	mov	r1, r5
   19b60:	mov	r0, r4
   19b64:	bl	18438 <triple_free@@Base+0x399c>
   19b68:	mov	r3, r0
   19b6c:	str	r0, [r4, #4]
   19b70:	mov	r0, r3
   19b74:	pop	{r4, r5, r6, r7, r8, pc}
   19b78:	ldr	r2, [pc, #164]	; 19c24 <fts_children@@Base+0x160>
   19b7c:	ldr	r0, [r4, #32]
   19b80:	add	r2, pc, r2
   19b84:	bl	17fe4 <triple_free@@Base+0x3548>
   19b88:	subs	r7, r0, #0
   19b8c:	strlt	r6, [r4, #4]
   19b90:	movlt	r3, r6
   19b94:	blt	19b70 <fts_children@@Base+0xac>
   19b98:	mov	r1, r5
   19b9c:	mov	r0, r4
   19ba0:	bl	18438 <triple_free@@Base+0x399c>
   19ba4:	ldr	r3, [r4, #48]	; 0x30
   19ba8:	ands	r5, r3, #512	; 0x200
   19bac:	str	r0, [r4, #4]
   19bb0:	beq	19bf0 <fts_children@@Base+0x12c>
   19bb4:	mov	r1, r7
   19bb8:	mov	r0, r4
   19bbc:	mov	r2, #1
   19bc0:	bl	17c94 <triple_free@@Base+0x31f8>
   19bc4:	ldr	r3, [r4, #4]
   19bc8:	mov	r0, r3
   19bcc:	pop	{r4, r5, r6, r7, r8, pc}
   19bd0:	bl	11b04 <__errno_location@plt>
   19bd4:	mov	r3, #0
   19bd8:	mov	r2, #22
   19bdc:	str	r2, [r0]
   19be0:	mov	r0, r3
   19be4:	pop	{r4, r5, r6, r7, r8, pc}
   19be8:	mov	r3, r7
   19bec:	b	19b70 <fts_children@@Base+0xac>
   19bf0:	mov	r0, r7
   19bf4:	bl	11bdc <fchdir@plt>
   19bf8:	cmp	r0, #0
   19bfc:	bne	19c0c <fts_children@@Base+0x148>
   19c00:	mov	r0, r7
   19c04:	bl	11c6c <close@plt>
   19c08:	b	19bc4 <fts_children@@Base+0x100>
   19c0c:	ldr	r4, [r8]
   19c10:	mov	r0, r7
   19c14:	bl	11c6c <close@plt>
   19c18:	mov	r3, r5
   19c1c:	str	r4, [r8]
   19c20:	b	19b70 <fts_children@@Base+0xac>
   19c24:	andeq	r2, r0, r0, lsr #32
   19c28:	push	{r3, r4, r5, lr}
   19c2c:	subs	r4, r0, #0
   19c30:	beq	19c7c <fts_children@@Base+0x1b8>
   19c34:	cmp	r4, #10
   19c38:	beq	19c44 <fts_children@@Base+0x180>
   19c3c:	mov	r0, r4
   19c40:	pop	{r3, r4, r5, pc}
   19c44:	ldr	r5, [r1]
   19c48:	ldr	r1, [pc, #64]	; 19c90 <fts_children@@Base+0x1cc>
   19c4c:	mov	r0, r5
   19c50:	add	r1, pc, r1
   19c54:	bl	118a0 <strcmp@plt>
   19c58:	cmp	r0, #0
   19c5c:	bne	19c3c <fts_children@@Base+0x178>
   19c60:	mov	r0, r5
   19c64:	mvn	r4, #0
   19c68:	bl	11bf4 <freecon@plt>
   19c6c:	bl	11b04 <__errno_location@plt>
   19c70:	mov	r3, #61	; 0x3d
   19c74:	str	r3, [r0]
   19c78:	b	19c3c <fts_children@@Base+0x178>
   19c7c:	bl	11b04 <__errno_location@plt>
   19c80:	mvn	r4, #0
   19c84:	mov	r3, #95	; 0x5f
   19c88:	str	r3, [r0]
   19c8c:	b	19c3c <fts_children@@Base+0x178>
   19c90:	andeq	r2, r0, r8, ror #11
   19c94:	push	{r4, lr}
   19c98:	mov	r4, r1
   19c9c:	bl	11ab0 <getfilecon@plt>
   19ca0:	mov	r1, r4
   19ca4:	pop	{r4, lr}
   19ca8:	b	19c28 <fts_children@@Base+0x164>
   19cac:	push	{r4, lr}
   19cb0:	mov	r4, r1
   19cb4:	bl	11a38 <lgetfilecon@plt>
   19cb8:	mov	r1, r4
   19cbc:	pop	{r4, lr}
   19cc0:	b	19c28 <fts_children@@Base+0x164>
   19cc4:	push	{r4, lr}
   19cc8:	mov	r4, r1
   19ccc:	bl	11960 <fgetfilecon@plt>
   19cd0:	mov	r1, r4
   19cd4:	pop	{r4, lr}
   19cd8:	b	19c28 <fts_children@@Base+0x164>
   19cdc:	cmp	r1, #1024	; 0x400
   19ce0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19ce4:	addls	r4, r1, #1
   19ce8:	mov	r7, r0
   19cec:	movwhi	r4, #1025	; 0x401
   19cf0:	mov	r0, r4
   19cf4:	bl	11a44 <malloc@plt>
   19cf8:	mov	r2, r4
   19cfc:	subs	r5, r0, #0
   19d00:	mov	r0, r7
   19d04:	mov	r1, r5
   19d08:	beq	19d80 <fts_children@@Base+0x2bc>
   19d0c:	bl	119a8 <readlink@plt>
   19d10:	subs	r6, r0, #0
   19d14:	blt	19d58 <fts_children@@Base+0x294>
   19d18:	cmp	r4, r6
   19d1c:	mov	r0, r5
   19d20:	bhi	19d8c <fts_children@@Base+0x2c8>
   19d24:	bl	118dc <free@plt>
   19d28:	cmn	r4, #-1073741823	; 0xc0000001
   19d2c:	lslls	r4, r4, #1
   19d30:	bls	19cf0 <fts_children@@Base+0x22c>
   19d34:	cmn	r4, #-2147483646	; 0x80000002
   19d38:	mvn	r4, #-2147483648	; 0x80000000
   19d3c:	bls	19cf0 <fts_children@@Base+0x22c>
   19d40:	bl	11b04 <__errno_location@plt>
   19d44:	mov	r3, #0
   19d48:	mov	r2, #12
   19d4c:	str	r2, [r0]
   19d50:	mov	r0, r3
   19d54:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19d58:	bl	11b04 <__errno_location@plt>
   19d5c:	ldr	r9, [r0]
   19d60:	mov	r8, r0
   19d64:	cmp	r9, #34	; 0x22
   19d68:	beq	19d18 <fts_children@@Base+0x254>
   19d6c:	mov	r0, r5
   19d70:	bl	118dc <free@plt>
   19d74:	str	r9, [r8]
   19d78:	mov	r3, #0
   19d7c:	b	19d84 <fts_children@@Base+0x2c0>
   19d80:	mov	r3, r5
   19d84:	mov	r0, r3
   19d88:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19d8c:	mov	r3, r5
   19d90:	mov	r2, #0
   19d94:	mov	r0, r3
   19d98:	strb	r2, [r5, r6]
   19d9c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19da0:	push	{r3, r4, r5, lr}
   19da4:	mov	r2, #0
   19da8:	mov	r4, r1
   19dac:	mov	r1, #1
   19db0:	mov	r5, r0
   19db4:	bl	1a660 <fts_children@@Base+0xb9c>
   19db8:	cmp	r0, #0
   19dbc:	blt	19dfc <fts_children@@Base+0x338>
   19dc0:	cmp	r4, #0
   19dc4:	orrne	r2, r0, #1
   19dc8:	biceq	r2, r0, #1
   19dcc:	cmp	r2, r0
   19dd0:	beq	19df4 <fts_children@@Base+0x330>
   19dd4:	mov	r0, r5
   19dd8:	mov	r1, #2
   19ddc:	bl	1a660 <fts_children@@Base+0xb9c>
   19de0:	cmn	r0, #1
   19de4:	movne	r0, #0
   19de8:	moveq	r0, #1
   19dec:	rsb	r0, r0, #0
   19df0:	pop	{r3, r4, r5, pc}
   19df4:	mov	r0, #0
   19df8:	pop	{r3, r4, r5, pc}
   19dfc:	mvn	r0, #0
   19e00:	pop	{r3, r4, r5, pc}
   19e04:	movw	r1, #1030	; 0x406
   19e08:	mov	r2, #0
   19e0c:	b	1a660 <fts_children@@Base+0xb9c>
   19e10:	push	{r4, r5, r6, lr}
   19e14:	mov	r4, r0
   19e18:	bl	119fc <__fpending@plt>
   19e1c:	mov	r6, r0
   19e20:	mov	r0, r4
   19e24:	ldr	r4, [r4]
   19e28:	bl	1a5c0 <fts_children@@Base+0xafc>
   19e2c:	and	r4, r4, #32
   19e30:	adds	r5, r0, #0
   19e34:	movne	r5, #1
   19e38:	cmp	r4, #0
   19e3c:	bne	19e5c <fts_children@@Base+0x398>
   19e40:	cmp	r5, #0
   19e44:	beq	19e54 <fts_children@@Base+0x390>
   19e48:	cmp	r6, #0
   19e4c:	beq	19e78 <fts_children@@Base+0x3b4>
   19e50:	mvn	r4, #0
   19e54:	mov	r0, r4
   19e58:	pop	{r4, r5, r6, pc}
   19e5c:	cmp	r5, #0
   19e60:	bne	19e50 <fts_children@@Base+0x38c>
   19e64:	bl	11b04 <__errno_location@plt>
   19e68:	mvn	r4, #0
   19e6c:	str	r5, [r0]
   19e70:	mov	r0, r4
   19e74:	pop	{r4, r5, r6, pc}
   19e78:	bl	11b04 <__errno_location@plt>
   19e7c:	ldr	r4, [r0]
   19e80:	subs	r4, r4, #9
   19e84:	mvnne	r4, #0
   19e88:	mov	r0, r4
   19e8c:	pop	{r4, r5, r6, pc}
   19e90:	mov	r2, #0
   19e94:	mov	r3, #0
   19e98:	movw	r1, #62998	; 0xf616
   19e9c:	strd	r2, [r0, #16]
   19ea0:	movt	r1, #149	; 0x95
   19ea4:	str	r1, [r0, #24]
   19ea8:	bx	lr
   19eac:	push	{r3, r4, r5, r6, r7, lr}
   19eb0:	movw	r3, #62998	; 0xf616
   19eb4:	ldr	r2, [r0, #24]
   19eb8:	movt	r3, #149	; 0x95
   19ebc:	mov	ip, r0
   19ec0:	cmp	r2, r3
   19ec4:	bne	19f58 <fts_children@@Base+0x494>
   19ec8:	ldrd	r6, [r0, #16]
   19ecc:	orrs	r0, r6, r7
   19ed0:	beq	19f14 <fts_children@@Base+0x450>
   19ed4:	ldrd	r4, [r1, #96]	; 0x60
   19ed8:	ldrd	r2, [ip]
   19edc:	cmp	r5, r3
   19ee0:	cmpeq	r4, r2
   19ee4:	beq	19f40 <fts_children@@Base+0x47c>
   19ee8:	adds	r2, r6, #1
   19eec:	adc	r3, r7, #0
   19ef0:	and	r6, r6, r2
   19ef4:	and	r7, r7, r3
   19ef8:	strd	r2, [ip, #16]
   19efc:	orrs	r0, r6, r7
   19f00:	bne	19f38 <fts_children@@Base+0x474>
   19f04:	orrs	r0, r2, r3
   19f08:	bne	19f20 <fts_children@@Base+0x45c>
   19f0c:	mov	r0, #1
   19f10:	pop	{r3, r4, r5, r6, r7, pc}
   19f14:	mov	r2, #1
   19f18:	mov	r3, #0
   19f1c:	strd	r2, [ip, #16]
   19f20:	ldrd	r2, [r1]
   19f24:	mov	r0, #0
   19f28:	strd	r2, [ip, #8]
   19f2c:	ldrd	r2, [r1, #96]	; 0x60
   19f30:	strd	r2, [ip]
   19f34:	pop	{r3, r4, r5, r6, r7, pc}
   19f38:	mov	r0, #0
   19f3c:	pop	{r3, r4, r5, r6, r7, pc}
   19f40:	ldrd	r4, [r1]
   19f44:	ldrd	r2, [ip, #8]
   19f48:	cmp	r5, r3
   19f4c:	cmpeq	r4, r2
   19f50:	bne	19ee8 <fts_children@@Base+0x424>
   19f54:	b	19f0c <fts_children@@Base+0x448>
   19f58:	ldr	r0, [pc, #24]	; 19f78 <fts_children@@Base+0x4b4>
   19f5c:	mov	r2, #60	; 0x3c
   19f60:	ldr	r1, [pc, #20]	; 19f7c <fts_children@@Base+0x4b8>
   19f64:	ldr	r3, [pc, #20]	; 19f80 <fts_children@@Base+0x4bc>
   19f68:	add	r0, pc, r0
   19f6c:	add	r1, pc, r1
   19f70:	add	r3, pc, r3
   19f74:	bl	11ca8 <__assert_fail@plt>
   19f78:	andeq	r2, r0, r8, ror #5
   19f7c:	strdeq	r2, [r0], -ip
   19f80:	ldrdeq	r2, [r0], -r4
   19f84:	push	{r1, r2, r3}
   19f88:	ldr	r3, [pc, #88]	; 19fe8 <fts_children@@Base+0x524>
   19f8c:	ldr	r2, [pc, #88]	; 19fec <fts_children@@Base+0x528>
   19f90:	add	r3, pc, r3
   19f94:	push	{r4, lr}
   19f98:	sub	sp, sp, #12
   19f9c:	ldr	r4, [r3, r2]
   19fa0:	ldr	r1, [sp, #20]
   19fa4:	ldr	r3, [r4]
   19fa8:	ands	r2, r1, #64	; 0x40
   19fac:	ldrne	r2, [sp, #24]
   19fb0:	str	r3, [sp, #4]
   19fb4:	addne	r3, sp, #24
   19fb8:	strne	r3, [sp]
   19fbc:	bl	11a20 <open64@plt>
   19fc0:	bl	1a584 <fts_children@@Base+0xac0>
   19fc4:	ldr	r2, [sp, #4]
   19fc8:	ldr	r3, [r4]
   19fcc:	cmp	r2, r3
   19fd0:	bne	19fe4 <fts_children@@Base+0x520>
   19fd4:	add	sp, sp, #12
   19fd8:	pop	{r4, lr}
   19fdc:	add	sp, sp, #12
   19fe0:	bx	lr
   19fe4:	bl	1193c <__stack_chk_fail@plt>
   19fe8:	andeq	r3, r1, r8, rrx
   19fec:	andeq	r0, r0, r8, lsl #3
   19ff0:	push	{r3, lr}
   19ff4:	ldrb	r3, [r0]
   19ff8:	cmp	r3, #0
   19ffc:	beq	1a024 <fts_children@@Base+0x560>
   1a000:	mov	r2, r0
   1a004:	mov	r0, #0
   1a008:	add	r0, r3, r0, ror #23
   1a00c:	ldrb	r3, [r2, #1]!
   1a010:	cmp	r3, #0
   1a014:	bne	1a008 <fts_children@@Base+0x544>
   1a018:	bl	1aac8 <fts_children@@Base+0x1004>
   1a01c:	mov	r0, r1
   1a020:	pop	{r3, pc}
   1a024:	mov	r0, r3
   1a028:	pop	{r3, pc}
   1a02c:	mov	r3, #0
   1a030:	mov	r2, #1
   1a034:	str	r1, [r0]
   1a038:	str	r1, [r0, #4]
   1a03c:	str	r1, [r0, #8]
   1a040:	str	r1, [r0, #12]
   1a044:	str	r1, [r0, #16]
   1a048:	strb	r2, [r0, #28]
   1a04c:	str	r3, [r0, #20]
   1a050:	str	r3, [r0, #24]
   1a054:	bx	lr
   1a058:	ldrb	r0, [r0, #28]
   1a05c:	bx	lr
   1a060:	ldrb	ip, [r0, #28]
   1a064:	mov	r3, r0
   1a068:	ldr	r2, [r0, #20]
   1a06c:	eor	ip, ip, #1
   1a070:	add	r2, ip, r2
   1a074:	and	r2, r2, #3
   1a078:	ldr	r0, [r0, r2, lsl #2]
   1a07c:	str	r1, [r3, r2, lsl #2]
   1a080:	ldr	r1, [r3, #24]
   1a084:	str	r2, [r3, #20]
   1a088:	cmp	r1, r2
   1a08c:	mov	r2, #0
   1a090:	addeq	r1, ip, r1
   1a094:	strb	r2, [r3, #28]
   1a098:	andeq	r1, r1, #3
   1a09c:	streq	r1, [r3, #24]
   1a0a0:	bx	lr
   1a0a4:	push	{r4, lr}
   1a0a8:	mov	r4, r0
   1a0ac:	bl	1a058 <fts_children@@Base+0x594>
   1a0b0:	cmp	r0, #0
   1a0b4:	bne	1a0e8 <fts_children@@Base+0x624>
   1a0b8:	ldr	r3, [r4, #20]
   1a0bc:	ldr	r2, [r4, #16]
   1a0c0:	ldr	r0, [r4, r3, lsl #2]
   1a0c4:	str	r2, [r4, r3, lsl #2]
   1a0c8:	ldr	r2, [r4, #24]
   1a0cc:	cmp	r3, r2
   1a0d0:	addne	r3, r3, #3
   1a0d4:	moveq	r3, #1
   1a0d8:	andne	r3, r3, #3
   1a0dc:	strbeq	r3, [r4, #28]
   1a0e0:	strne	r3, [r4, #20]
   1a0e4:	pop	{r4, pc}
   1a0e8:	bl	11c60 <abort@plt>
   1a0ec:	ldr	r3, [pc, #984]	; 1a4cc <fts_children@@Base+0xa08>
   1a0f0:	mov	r0, #14
   1a0f4:	ldr	r2, [pc, #980]	; 1a4d0 <fts_children@@Base+0xa0c>
   1a0f8:	add	r3, pc, r3
   1a0fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a100:	sub	sp, sp, #132	; 0x84
   1a104:	ldr	r6, [r3, r2]
   1a108:	ldr	r3, [r6]
   1a10c:	str	r3, [sp, #124]	; 0x7c
   1a110:	bl	11ba0 <nl_langinfo@plt>
   1a114:	subs	r5, r0, #0
   1a118:	beq	1a1cc <fts_children@@Base+0x708>
   1a11c:	ldr	r3, [pc, #944]	; 1a4d4 <fts_children@@Base+0xa10>
   1a120:	ldr	r4, [pc, r3]
   1a124:	cmp	r4, #0
   1a128:	beq	1a1d8 <fts_children@@Base+0x714>
   1a12c:	ldrb	r7, [r4]
   1a130:	cmp	r7, #0
   1a134:	bne	1a168 <fts_children@@Base+0x6a4>
   1a138:	b	1a1a0 <fts_children@@Base+0x6dc>
   1a13c:	mov	r0, r4
   1a140:	bl	11abc <strlen@plt>
   1a144:	add	r0, r0, #1
   1a148:	add	r7, r4, r0
   1a14c:	mov	r0, r7
   1a150:	bl	11abc <strlen@plt>
   1a154:	add	r0, r0, #1
   1a158:	add	r4, r7, r0
   1a15c:	ldrb	r7, [r7, r0]
   1a160:	cmp	r7, #0
   1a164:	beq	1a1a0 <fts_children@@Base+0x6dc>
   1a168:	mov	r0, r5
   1a16c:	mov	r1, r4
   1a170:	bl	118a0 <strcmp@plt>
   1a174:	cmp	r0, #0
   1a178:	beq	1a190 <fts_children@@Base+0x6cc>
   1a17c:	cmp	r7, #42	; 0x2a
   1a180:	bne	1a13c <fts_children@@Base+0x678>
   1a184:	ldrb	r3, [r4, #1]
   1a188:	cmp	r3, #0
   1a18c:	bne	1a13c <fts_children@@Base+0x678>
   1a190:	mov	r0, r4
   1a194:	bl	11abc <strlen@plt>
   1a198:	add	r0, r0, #1
   1a19c:	add	r5, r4, r0
   1a1a0:	ldrb	r3, [r5]
   1a1a4:	cmp	r3, #0
   1a1a8:	ldreq	r5, [pc, #808]	; 1a4d8 <fts_children@@Base+0xa14>
   1a1ac:	addeq	r5, pc, r5
   1a1b0:	ldr	r2, [sp, #124]	; 0x7c
   1a1b4:	mov	r0, r5
   1a1b8:	ldr	r3, [r6]
   1a1bc:	cmp	r2, r3
   1a1c0:	bne	1a4a0 <fts_children@@Base+0x9dc>
   1a1c4:	add	sp, sp, #132	; 0x84
   1a1c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a1cc:	ldr	r5, [pc, #776]	; 1a4dc <fts_children@@Base+0xa18>
   1a1d0:	add	r5, pc, r5
   1a1d4:	b	1a11c <fts_children@@Base+0x658>
   1a1d8:	ldr	r0, [pc, #768]	; 1a4e0 <fts_children@@Base+0xa1c>
   1a1dc:	add	r0, pc, r0
   1a1e0:	bl	11a2c <getenv@plt>
   1a1e4:	subs	r8, r0, #0
   1a1e8:	beq	1a478 <fts_children@@Base+0x9b4>
   1a1ec:	ldrb	r3, [r8]
   1a1f0:	cmp	r3, #0
   1a1f4:	beq	1a40c <fts_children@@Base+0x948>
   1a1f8:	bl	11abc <strlen@plt>
   1a1fc:	subs	sl, r0, #0
   1a200:	subne	r3, sl, #1
   1a204:	bne	1a41c <fts_children@@Base+0x958>
   1a208:	mov	r9, #0
   1a20c:	mov	fp, r9
   1a210:	add	r9, sl, r9
   1a214:	add	r0, r9, #14
   1a218:	bl	11a44 <malloc@plt>
   1a21c:	subs	r7, r0, #0
   1a220:	beq	1a46c <fts_children@@Base+0x9a8>
   1a224:	mov	r1, r8
   1a228:	mov	r2, sl
   1a22c:	bl	118f4 <memcpy@plt>
   1a230:	cmp	fp, #0
   1a234:	add	ip, r7, r9
   1a238:	movne	r3, #47	; 0x2f
   1a23c:	strbne	r3, [r7, sl]
   1a240:	ldr	r3, [pc, #668]	; 1a4e4 <fts_children@@Base+0xa20>
   1a244:	add	r3, pc, r3
   1a248:	ldm	r3!, {r0, r1, r2}
   1a24c:	ldrh	r3, [r3]
   1a250:	str	r0, [r7, r9]
   1a254:	mov	r0, r7
   1a258:	str	r1, [ip, #4]
   1a25c:	mov	r1, #32768	; 0x8000
   1a260:	strh	r3, [ip, #12]
   1a264:	str	r2, [ip, #8]
   1a268:	bl	11a20 <open64@plt>
   1a26c:	subs	r8, r0, #0
   1a270:	blt	1a434 <fts_children@@Base+0x970>
   1a274:	ldr	r1, [pc, #620]	; 1a4e8 <fts_children@@Base+0xa24>
   1a278:	add	r1, pc, r1
   1a27c:	bl	11858 <fdopen@plt>
   1a280:	subs	fp, r0, #0
   1a284:	beq	1a48c <fts_children@@Base+0x9c8>
   1a288:	ldr	r0, [pc, #604]	; 1a4ec <fts_children@@Base+0xa28>
   1a28c:	add	sl, sp, #20
   1a290:	add	r9, sp, #72	; 0x48
   1a294:	mov	r8, #0
   1a298:	add	r0, pc, r0
   1a29c:	str	r0, [sp, #12]
   1a2a0:	ldr	r3, [fp, #4]
   1a2a4:	ldr	r2, [fp, #8]
   1a2a8:	cmp	r3, r2
   1a2ac:	bcs	1a398 <fts_children@@Base+0x8d4>
   1a2b0:	add	r2, r3, #1
   1a2b4:	str	r2, [fp, #4]
   1a2b8:	ldrb	r0, [r3]
   1a2bc:	cmp	r0, #32
   1a2c0:	beq	1a2a0 <fts_children@@Base+0x7dc>
   1a2c4:	sub	r3, r0, #9
   1a2c8:	cmp	r3, #1
   1a2cc:	bls	1a2a0 <fts_children@@Base+0x7dc>
   1a2d0:	cmp	r0, #35	; 0x23
   1a2d4:	beq	1a3ac <fts_children@@Base+0x8e8>
   1a2d8:	mov	r1, fp
   1a2dc:	bl	11aec <ungetc@plt>
   1a2e0:	mov	r0, fp
   1a2e4:	ldr	r1, [sp, #12]
   1a2e8:	mov	r2, sl
   1a2ec:	mov	r3, r9
   1a2f0:	bl	11b28 <fscanf@plt>
   1a2f4:	cmp	r0, #1
   1a2f8:	ble	1a3dc <fts_children@@Base+0x918>
   1a2fc:	mov	r0, sl
   1a300:	bl	11abc <strlen@plt>
   1a304:	str	r0, [sp, #8]
   1a308:	mov	r0, r9
   1a30c:	bl	11abc <strlen@plt>
   1a310:	cmp	r8, #0
   1a314:	mov	r2, r0
   1a318:	bne	1a440 <fts_children@@Base+0x97c>
   1a31c:	ldr	r3, [sp, #8]
   1a320:	str	r2, [sp]
   1a324:	add	r8, r0, r3
   1a328:	add	r0, r8, #3
   1a32c:	add	r8, r8, #2
   1a330:	bl	11a44 <malloc@plt>
   1a334:	ldr	r2, [sp]
   1a338:	mov	r3, r0
   1a33c:	cmp	r3, #0
   1a340:	beq	1a4a4 <fts_children@@Base+0x9e0>
   1a344:	ldr	r0, [sp, #8]
   1a348:	movw	r1, #65534	; 0xfffe
   1a34c:	movt	r1, #65535	; 0xffff
   1a350:	rsb	r2, r2, r8
   1a354:	rsb	r1, r0, r1
   1a358:	stm	sp, {r2, r3}
   1a35c:	add	r0, r1, r2
   1a360:	mov	r1, sl
   1a364:	add	r0, r3, r0
   1a368:	mov	r4, r3
   1a36c:	bl	119d8 <strcpy@plt>
   1a370:	ldr	r2, [sp]
   1a374:	ldr	r3, [sp, #4]
   1a378:	mov	r1, r9
   1a37c:	sub	r0, r2, #1
   1a380:	add	r0, r3, r0
   1a384:	bl	119d8 <strcpy@plt>
   1a388:	ldr	r3, [fp, #4]
   1a38c:	ldr	r2, [fp, #8]
   1a390:	cmp	r3, r2
   1a394:	bcc	1a2b0 <fts_children@@Base+0x7ec>
   1a398:	mov	r0, fp
   1a39c:	bl	11b70 <__uflow@plt>
   1a3a0:	cmn	r0, #1
   1a3a4:	beq	1a3dc <fts_children@@Base+0x918>
   1a3a8:	b	1a2bc <fts_children@@Base+0x7f8>
   1a3ac:	ldr	r3, [fp, #4]
   1a3b0:	ldr	r2, [fp, #8]
   1a3b4:	cmp	r3, r2
   1a3b8:	bcs	1a4c0 <fts_children@@Base+0x9fc>
   1a3bc:	add	r2, r3, #1
   1a3c0:	str	r2, [fp, #4]
   1a3c4:	ldrb	r0, [r3]
   1a3c8:	cmp	r0, #10
   1a3cc:	cmnne	r0, #1
   1a3d0:	bne	1a3ac <fts_children@@Base+0x8e8>
   1a3d4:	cmn	r0, #1
   1a3d8:	bne	1a2a0 <fts_children@@Base+0x7dc>
   1a3dc:	mov	r0, fp
   1a3e0:	bl	1a5c0 <fts_children@@Base+0xafc>
   1a3e4:	cmp	r8, #0
   1a3e8:	beq	1a434 <fts_children@@Base+0x970>
   1a3ec:	mov	r3, #0
   1a3f0:	strb	r3, [r4, r8]
   1a3f4:	mov	r0, r7
   1a3f8:	bl	118dc <free@plt>
   1a3fc:	ldr	r3, [pc, #236]	; 1a4f0 <fts_children@@Base+0xa2c>
   1a400:	add	r3, pc, r3
   1a404:	str	r4, [r3]
   1a408:	b	1a12c <fts_children@@Base+0x668>
   1a40c:	ldr	r8, [pc, #224]	; 1a4f4 <fts_children@@Base+0xa30>
   1a410:	mov	r3, #7
   1a414:	mov	sl, #8
   1a418:	add	r8, pc, r8
   1a41c:	ldrb	r3, [r8, r3]
   1a420:	cmp	r3, #47	; 0x2f
   1a424:	movne	r9, #1
   1a428:	movne	fp, r9
   1a42c:	bne	1a210 <fts_children@@Base+0x74c>
   1a430:	b	1a208 <fts_children@@Base+0x744>
   1a434:	ldr	r4, [pc, #188]	; 1a4f8 <fts_children@@Base+0xa34>
   1a438:	add	r4, pc, r4
   1a43c:	b	1a3f4 <fts_children@@Base+0x930>
   1a440:	ldr	r0, [sp, #8]
   1a444:	str	r2, [sp]
   1a448:	add	r3, r0, r2
   1a44c:	mov	r0, r4
   1a450:	add	r8, r3, r8
   1a454:	add	r1, r8, #3
   1a458:	add	r8, r8, #2
   1a45c:	bl	11954 <realloc@plt>
   1a460:	ldr	r2, [sp]
   1a464:	mov	r3, r0
   1a468:	b	1a33c <fts_children@@Base+0x878>
   1a46c:	ldr	r4, [pc, #136]	; 1a4fc <fts_children@@Base+0xa38>
   1a470:	add	r4, pc, r4
   1a474:	b	1a3fc <fts_children@@Base+0x938>
   1a478:	ldr	r8, [pc, #128]	; 1a500 <fts_children@@Base+0xa3c>
   1a47c:	mov	r3, #7
   1a480:	mov	sl, #8
   1a484:	add	r8, pc, r8
   1a488:	b	1a41c <fts_children@@Base+0x958>
   1a48c:	ldr	r4, [pc, #112]	; 1a504 <fts_children@@Base+0xa40>
   1a490:	mov	r0, r8
   1a494:	add	r4, pc, r4
   1a498:	bl	11c6c <close@plt>
   1a49c:	b	1a3f4 <fts_children@@Base+0x930>
   1a4a0:	bl	1193c <__stack_chk_fail@plt>
   1a4a4:	mov	r0, r4
   1a4a8:	ldr	r4, [pc, #88]	; 1a508 <fts_children@@Base+0xa44>
   1a4ac:	bl	118dc <free@plt>
   1a4b0:	mov	r0, fp
   1a4b4:	add	r4, pc, r4
   1a4b8:	bl	1a5c0 <fts_children@@Base+0xafc>
   1a4bc:	b	1a3f4 <fts_children@@Base+0x930>
   1a4c0:	mov	r0, fp
   1a4c4:	bl	11b70 <__uflow@plt>
   1a4c8:	b	1a3c8 <fts_children@@Base+0x904>
   1a4cc:	andeq	r2, r1, r0, lsl #30
   1a4d0:	andeq	r0, r0, r8, lsl #3
   1a4d4:	andeq	r3, r1, r0, lsr r2
   1a4d8:	ldrdeq	r2, [r0], -ip
   1a4dc:			; <UNDEFINED> instruction: 0x000018bc
   1a4e0:	strheq	r2, [r0], -r4
   1a4e4:	andeq	r2, r0, ip, asr r0
   1a4e8:	andeq	r2, r0, r8, lsr r0
   1a4ec:	andeq	r2, r0, ip, lsl r0
   1a4f0:	andeq	r2, r1, r0, asr pc
   1a4f4:	andeq	r1, r0, r4, ror #28
   1a4f8:	andeq	r1, r0, r4, asr r6
   1a4fc:	andeq	r1, r0, ip, lsl r6
   1a500:	strdeq	r1, [r0], -r8
   1a504:	strdeq	r1, [r0], -r8
   1a508:	ldrdeq	r1, [r0], -r8
   1a50c:	push	{r2, r3}
   1a510:	ldr	r3, [pc, #88]	; 1a570 <fts_children@@Base+0xaac>
   1a514:	ldr	ip, [pc, #88]	; 1a574 <fts_children@@Base+0xab0>
   1a518:	add	r3, pc, r3
   1a51c:	push	{r4, lr}
   1a520:	sub	sp, sp, #8
   1a524:	ldr	r4, [r3, ip]
   1a528:	ldr	r2, [sp, #16]
   1a52c:	ldr	ip, [r4]
   1a530:	ands	r3, r2, #64	; 0x40
   1a534:	ldrne	r3, [sp, #20]
   1a538:	str	ip, [sp, #4]
   1a53c:	addne	ip, sp, #20
   1a540:	strne	ip, [sp]
   1a544:	bl	11ad4 <openat64@plt>
   1a548:	bl	1a584 <fts_children@@Base+0xac0>
   1a54c:	ldr	r2, [sp, #4]
   1a550:	ldr	r3, [r4]
   1a554:	cmp	r2, r3
   1a558:	bne	1a56c <fts_children@@Base+0xaa8>
   1a55c:	add	sp, sp, #8
   1a560:	pop	{r4, lr}
   1a564:	add	sp, sp, #8
   1a568:	bx	lr
   1a56c:	bl	1193c <__stack_chk_fail@plt>
   1a570:	andeq	r2, r1, r0, ror #21
   1a574:	andeq	r0, r0, r8, lsl #3
   1a578:	mov	r1, #0
   1a57c:	mov	r2, #3
   1a580:	b	1a660 <fts_children@@Base+0xb9c>
   1a584:	cmp	r0, #2
   1a588:	push	{r3, r4, r5, r6, r7, lr}
   1a58c:	mov	r4, r0
   1a590:	bhi	1a5b8 <fts_children@@Base+0xaf4>
   1a594:	bl	1a578 <fts_children@@Base+0xab4>
   1a598:	mov	r7, r0
   1a59c:	bl	11b04 <__errno_location@plt>
   1a5a0:	ldr	r6, [r0]
   1a5a4:	mov	r5, r0
   1a5a8:	mov	r0, r4
   1a5ac:	mov	r4, r7
   1a5b0:	bl	11c6c <close@plt>
   1a5b4:	str	r6, [r5]
   1a5b8:	mov	r0, r4
   1a5bc:	pop	{r3, r4, r5, r6, r7, pc}
   1a5c0:	push	{r4, r5, r6, lr}
   1a5c4:	sub	sp, sp, #8
   1a5c8:	mov	r4, r0
   1a5cc:	bl	11b40 <fileno@plt>
   1a5d0:	cmp	r0, #0
   1a5d4:	mov	r0, r4
   1a5d8:	blt	1a654 <fts_children@@Base+0xb90>
   1a5dc:	bl	11a5c <__freading@plt>
   1a5e0:	cmp	r0, #0
   1a5e4:	bne	1a620 <fts_children@@Base+0xb5c>
   1a5e8:	mov	r0, r4
   1a5ec:	bl	1a7d4 <fts_children@@Base+0xd10>
   1a5f0:	cmp	r0, #0
   1a5f4:	beq	1a650 <fts_children@@Base+0xb8c>
   1a5f8:	bl	11b04 <__errno_location@plt>
   1a5fc:	ldr	r6, [r0]
   1a600:	mov	r5, r0
   1a604:	mov	r0, r4
   1a608:	bl	11b58 <fclose@plt>
   1a60c:	cmp	r6, #0
   1a610:	mvnne	r0, #0
   1a614:	strne	r6, [r5]
   1a618:	add	sp, sp, #8
   1a61c:	pop	{r4, r5, r6, pc}
   1a620:	mov	r0, r4
   1a624:	bl	11b40 <fileno@plt>
   1a628:	mov	r1, #1
   1a62c:	mov	r2, #0
   1a630:	mov	r3, #0
   1a634:	str	r1, [sp]
   1a638:	bl	119c0 <lseek64@plt>
   1a63c:	mvn	r2, #0
   1a640:	mvn	r3, #0
   1a644:	cmp	r1, r3
   1a648:	cmpeq	r0, r2
   1a64c:	bne	1a5e8 <fts_children@@Base+0xb24>
   1a650:	mov	r0, r4
   1a654:	add	sp, sp, #8
   1a658:	pop	{r4, r5, r6, lr}
   1a65c:	b	11b58 <fclose@plt>
   1a660:	push	{r1, r2, r3}
   1a664:	movw	ip, #1030	; 0x406
   1a668:	ldr	r3, [pc, #336]	; 1a7c0 <fts_children@@Base+0xcfc>
   1a66c:	push	{r4, r5, r6, r7, r8, lr}
   1a670:	add	r3, pc, r3
   1a674:	ldr	lr, [pc, #328]	; 1a7c4 <fts_children@@Base+0xd00>
   1a678:	sub	sp, sp, #12
   1a67c:	add	r2, sp, #40	; 0x28
   1a680:	mov	r6, r0
   1a684:	ldr	r1, [sp, #36]	; 0x24
   1a688:	ldr	r4, [r3, lr]
   1a68c:	cmp	r1, ip
   1a690:	str	r2, [sp]
   1a694:	ldr	r3, [r4]
   1a698:	str	r3, [sp, #4]
   1a69c:	bne	1a720 <fts_children@@Base+0xc5c>
   1a6a0:	ldr	r8, [pc, #288]	; 1a7c8 <fts_children@@Base+0xd04>
   1a6a4:	add	r3, sp, #44	; 0x2c
   1a6a8:	str	r3, [sp]
   1a6ac:	add	r8, pc, r8
   1a6b0:	ldr	r7, [sp, #40]	; 0x28
   1a6b4:	ldr	r3, [r8]
   1a6b8:	mov	r2, r7
   1a6bc:	cmp	r3, #0
   1a6c0:	blt	1a7ac <fts_children@@Base+0xce8>
   1a6c4:	bl	11af8 <fcntl@plt>
   1a6c8:	subs	r5, r0, #0
   1a6cc:	blt	1a730 <fts_children@@Base+0xc6c>
   1a6d0:	ldr	r3, [pc, #244]	; 1a7cc <fts_children@@Base+0xd08>
   1a6d4:	mov	r2, #1
   1a6d8:	add	r3, pc, r3
   1a6dc:	str	r2, [r3]
   1a6e0:	cmp	r5, #0
   1a6e4:	blt	1a6fc <fts_children@@Base+0xc38>
   1a6e8:	ldr	r3, [pc, #224]	; 1a7d0 <fts_children@@Base+0xd0c>
   1a6ec:	add	r3, pc, r3
   1a6f0:	ldr	r3, [r3]
   1a6f4:	cmn	r3, #1
   1a6f8:	beq	1a760 <fts_children@@Base+0xc9c>
   1a6fc:	ldr	r2, [sp, #4]
   1a700:	mov	r0, r5
   1a704:	ldr	r3, [r4]
   1a708:	cmp	r2, r3
   1a70c:	bne	1a7bc <fts_children@@Base+0xcf8>
   1a710:	add	sp, sp, #12
   1a714:	pop	{r4, r5, r6, r7, r8, lr}
   1a718:	add	sp, sp, #12
   1a71c:	bx	lr
   1a720:	ldr	r2, [sp, #40]	; 0x28
   1a724:	bl	11af8 <fcntl@plt>
   1a728:	mov	r5, r0
   1a72c:	b	1a6fc <fts_children@@Base+0xc38>
   1a730:	bl	11b04 <__errno_location@plt>
   1a734:	ldr	r3, [r0]
   1a738:	cmp	r3, #22
   1a73c:	bne	1a6d0 <fts_children@@Base+0xc0c>
   1a740:	mov	r0, r6
   1a744:	mov	r2, r7
   1a748:	mov	r1, #0
   1a74c:	bl	1a660 <fts_children@@Base+0xb9c>
   1a750:	subs	r5, r0, #0
   1a754:	blt	1a6fc <fts_children@@Base+0xc38>
   1a758:	mvn	r3, #0
   1a75c:	str	r3, [r8]
   1a760:	mov	r0, r5
   1a764:	mov	r1, #1
   1a768:	bl	11af8 <fcntl@plt>
   1a76c:	subs	r2, r0, #0
   1a770:	blt	1a78c <fts_children@@Base+0xcc8>
   1a774:	orr	r2, r2, #1
   1a778:	mov	r0, r5
   1a77c:	mov	r1, #2
   1a780:	bl	11af8 <fcntl@plt>
   1a784:	cmn	r0, #1
   1a788:	bne	1a6fc <fts_children@@Base+0xc38>
   1a78c:	bl	11b04 <__errno_location@plt>
   1a790:	ldr	r7, [r0]
   1a794:	mov	r6, r0
   1a798:	mov	r0, r5
   1a79c:	mvn	r5, #0
   1a7a0:	bl	11c6c <close@plt>
   1a7a4:	str	r7, [r6]
   1a7a8:	b	1a6fc <fts_children@@Base+0xc38>
   1a7ac:	mov	r1, #0
   1a7b0:	bl	1a660 <fts_children@@Base+0xb9c>
   1a7b4:	mov	r5, r0
   1a7b8:	b	1a6e0 <fts_children@@Base+0xc1c>
   1a7bc:	bl	1193c <__stack_chk_fail@plt>
   1a7c0:	andeq	r2, r1, r8, lsl #19
   1a7c4:	andeq	r0, r0, r8, lsl #3
   1a7c8:	andeq	r2, r1, r8, lsr #25
   1a7cc:	andeq	r2, r1, ip, ror ip
   1a7d0:	andeq	r2, r1, r8, ror #24
   1a7d4:	push	{r4, lr}
   1a7d8:	subs	r4, r0, #0
   1a7dc:	sub	sp, sp, #8
   1a7e0:	beq	1a7f0 <fts_children@@Base+0xd2c>
   1a7e4:	bl	11a5c <__freading@plt>
   1a7e8:	cmp	r0, #0
   1a7ec:	bne	1a800 <fts_children@@Base+0xd3c>
   1a7f0:	mov	r0, r4
   1a7f4:	add	sp, sp, #8
   1a7f8:	pop	{r4, lr}
   1a7fc:	b	118b8 <fflush@plt>
   1a800:	ldr	r3, [r4]
   1a804:	tst	r3, #256	; 0x100
   1a808:	beq	1a7f0 <fts_children@@Base+0xd2c>
   1a80c:	mov	r3, #1
   1a810:	mov	r0, r4
   1a814:	str	r3, [sp]
   1a818:	mov	r2, #0
   1a81c:	mov	r3, #0
   1a820:	bl	1a834 <fts_children@@Base+0xd70>
   1a824:	mov	r0, r4
   1a828:	add	sp, sp, #8
   1a82c:	pop	{r4, lr}
   1a830:	b	118b8 <fflush@plt>
   1a834:	push	{r4, r5, r6, r7, lr}
   1a838:	sub	sp, sp, #20
   1a83c:	ldmib	r0, {r1, ip}
   1a840:	mov	r6, r0
   1a844:	ldr	r4, [sp, #40]	; 0x28
   1a848:	cmp	ip, r1
   1a84c:	beq	1a864 <fts_children@@Base+0xda0>
   1a850:	str	r4, [sp, #40]	; 0x28
   1a854:	mov	r0, r6
   1a858:	add	sp, sp, #20
   1a85c:	pop	{r4, r5, r6, r7, lr}
   1a860:	b	11b64 <fseeko64@plt>
   1a864:	ldr	ip, [r0, #20]
   1a868:	ldr	r1, [r0, #16]
   1a86c:	cmp	ip, r1
   1a870:	bne	1a850 <fts_children@@Base+0xd8c>
   1a874:	ldr	r7, [r0, #36]	; 0x24
   1a878:	cmp	r7, #0
   1a87c:	bne	1a850 <fts_children@@Base+0xd8c>
   1a880:	str	r2, [sp, #12]
   1a884:	mvn	r5, #0
   1a888:	str	r3, [sp, #8]
   1a88c:	bl	11b40 <fileno@plt>
   1a890:	str	r4, [sp]
   1a894:	mvn	r4, #0
   1a898:	ldr	r2, [sp, #12]
   1a89c:	ldr	r3, [sp, #8]
   1a8a0:	bl	119c0 <lseek64@plt>
   1a8a4:	mov	r2, r0
   1a8a8:	mov	r3, r1
   1a8ac:	cmp	r3, r5
   1a8b0:	cmpeq	r2, r4
   1a8b4:	beq	1a8d4 <fts_children@@Base+0xe10>
   1a8b8:	ldr	r1, [r6]
   1a8bc:	mov	r0, r7
   1a8c0:	strd	r2, [r6, #80]	; 0x50
   1a8c4:	bic	r3, r1, #16
   1a8c8:	str	r3, [r6]
   1a8cc:	add	sp, sp, #20
   1a8d0:	pop	{r4, r5, r6, r7, pc}
   1a8d4:	mvn	r0, #0
   1a8d8:	b	1a8cc <fts_children@@Base+0xe08>
   1a8dc:	subs	r2, r1, #1
   1a8e0:	bxeq	lr
   1a8e4:	bcc	1aabc <fts_children@@Base+0xff8>
   1a8e8:	cmp	r0, r1
   1a8ec:	bls	1aaa0 <fts_children@@Base+0xfdc>
   1a8f0:	tst	r1, r2
   1a8f4:	beq	1aaac <fts_children@@Base+0xfe8>
   1a8f8:	clz	r3, r0
   1a8fc:	clz	r2, r1
   1a900:	sub	r3, r2, r3
   1a904:	rsbs	r3, r3, #31
   1a908:	addne	r3, r3, r3, lsl #1
   1a90c:	mov	r2, #0
   1a910:	addne	pc, pc, r3, lsl #2
   1a914:	nop	{0}
   1a918:	cmp	r0, r1, lsl #31
   1a91c:	adc	r2, r2, r2
   1a920:	subcs	r0, r0, r1, lsl #31
   1a924:	cmp	r0, r1, lsl #30
   1a928:	adc	r2, r2, r2
   1a92c:	subcs	r0, r0, r1, lsl #30
   1a930:	cmp	r0, r1, lsl #29
   1a934:	adc	r2, r2, r2
   1a938:	subcs	r0, r0, r1, lsl #29
   1a93c:	cmp	r0, r1, lsl #28
   1a940:	adc	r2, r2, r2
   1a944:	subcs	r0, r0, r1, lsl #28
   1a948:	cmp	r0, r1, lsl #27
   1a94c:	adc	r2, r2, r2
   1a950:	subcs	r0, r0, r1, lsl #27
   1a954:	cmp	r0, r1, lsl #26
   1a958:	adc	r2, r2, r2
   1a95c:	subcs	r0, r0, r1, lsl #26
   1a960:	cmp	r0, r1, lsl #25
   1a964:	adc	r2, r2, r2
   1a968:	subcs	r0, r0, r1, lsl #25
   1a96c:	cmp	r0, r1, lsl #24
   1a970:	adc	r2, r2, r2
   1a974:	subcs	r0, r0, r1, lsl #24
   1a978:	cmp	r0, r1, lsl #23
   1a97c:	adc	r2, r2, r2
   1a980:	subcs	r0, r0, r1, lsl #23
   1a984:	cmp	r0, r1, lsl #22
   1a988:	adc	r2, r2, r2
   1a98c:	subcs	r0, r0, r1, lsl #22
   1a990:	cmp	r0, r1, lsl #21
   1a994:	adc	r2, r2, r2
   1a998:	subcs	r0, r0, r1, lsl #21
   1a99c:	cmp	r0, r1, lsl #20
   1a9a0:	adc	r2, r2, r2
   1a9a4:	subcs	r0, r0, r1, lsl #20
   1a9a8:	cmp	r0, r1, lsl #19
   1a9ac:	adc	r2, r2, r2
   1a9b0:	subcs	r0, r0, r1, lsl #19
   1a9b4:	cmp	r0, r1, lsl #18
   1a9b8:	adc	r2, r2, r2
   1a9bc:	subcs	r0, r0, r1, lsl #18
   1a9c0:	cmp	r0, r1, lsl #17
   1a9c4:	adc	r2, r2, r2
   1a9c8:	subcs	r0, r0, r1, lsl #17
   1a9cc:	cmp	r0, r1, lsl #16
   1a9d0:	adc	r2, r2, r2
   1a9d4:	subcs	r0, r0, r1, lsl #16
   1a9d8:	cmp	r0, r1, lsl #15
   1a9dc:	adc	r2, r2, r2
   1a9e0:	subcs	r0, r0, r1, lsl #15
   1a9e4:	cmp	r0, r1, lsl #14
   1a9e8:	adc	r2, r2, r2
   1a9ec:	subcs	r0, r0, r1, lsl #14
   1a9f0:	cmp	r0, r1, lsl #13
   1a9f4:	adc	r2, r2, r2
   1a9f8:	subcs	r0, r0, r1, lsl #13
   1a9fc:	cmp	r0, r1, lsl #12
   1aa00:	adc	r2, r2, r2
   1aa04:	subcs	r0, r0, r1, lsl #12
   1aa08:	cmp	r0, r1, lsl #11
   1aa0c:	adc	r2, r2, r2
   1aa10:	subcs	r0, r0, r1, lsl #11
   1aa14:	cmp	r0, r1, lsl #10
   1aa18:	adc	r2, r2, r2
   1aa1c:	subcs	r0, r0, r1, lsl #10
   1aa20:	cmp	r0, r1, lsl #9
   1aa24:	adc	r2, r2, r2
   1aa28:	subcs	r0, r0, r1, lsl #9
   1aa2c:	cmp	r0, r1, lsl #8
   1aa30:	adc	r2, r2, r2
   1aa34:	subcs	r0, r0, r1, lsl #8
   1aa38:	cmp	r0, r1, lsl #7
   1aa3c:	adc	r2, r2, r2
   1aa40:	subcs	r0, r0, r1, lsl #7
   1aa44:	cmp	r0, r1, lsl #6
   1aa48:	adc	r2, r2, r2
   1aa4c:	subcs	r0, r0, r1, lsl #6
   1aa50:	cmp	r0, r1, lsl #5
   1aa54:	adc	r2, r2, r2
   1aa58:	subcs	r0, r0, r1, lsl #5
   1aa5c:	cmp	r0, r1, lsl #4
   1aa60:	adc	r2, r2, r2
   1aa64:	subcs	r0, r0, r1, lsl #4
   1aa68:	cmp	r0, r1, lsl #3
   1aa6c:	adc	r2, r2, r2
   1aa70:	subcs	r0, r0, r1, lsl #3
   1aa74:	cmp	r0, r1, lsl #2
   1aa78:	adc	r2, r2, r2
   1aa7c:	subcs	r0, r0, r1, lsl #2
   1aa80:	cmp	r0, r1, lsl #1
   1aa84:	adc	r2, r2, r2
   1aa88:	subcs	r0, r0, r1, lsl #1
   1aa8c:	cmp	r0, r1
   1aa90:	adc	r2, r2, r2
   1aa94:	subcs	r0, r0, r1
   1aa98:	mov	r0, r2
   1aa9c:	bx	lr
   1aaa0:	moveq	r0, #1
   1aaa4:	movne	r0, #0
   1aaa8:	bx	lr
   1aaac:	clz	r2, r1
   1aab0:	rsb	r2, r2, #31
   1aab4:	lsr	r0, r0, r2
   1aab8:	bx	lr
   1aabc:	cmp	r0, #0
   1aac0:	mvnne	r0, #0
   1aac4:	b	1ab24 <fts_children@@Base+0x1060>
   1aac8:	cmp	r1, #0
   1aacc:	beq	1aabc <fts_children@@Base+0xff8>
   1aad0:	push	{r0, r1, lr}
   1aad4:	bl	1a8dc <fts_children@@Base+0xe18>
   1aad8:	pop	{r1, r2, lr}
   1aadc:	mul	r3, r2, r0
   1aae0:	sub	r1, r1, r3
   1aae4:	bx	lr
   1aae8:	cmp	r3, #0
   1aaec:	cmpeq	r2, #0
   1aaf0:	bne	1ab08 <fts_children@@Base+0x1044>
   1aaf4:	cmp	r1, #0
   1aaf8:	cmpeq	r0, #0
   1aafc:	mvnne	r1, #0
   1ab00:	mvnne	r0, #0
   1ab04:	b	1ab24 <fts_children@@Base+0x1060>
   1ab08:	sub	sp, sp, #8
   1ab0c:	push	{sp, lr}
   1ab10:	bl	1ab70 <fts_children@@Base+0x10ac>
   1ab14:	ldr	lr, [sp, #4]
   1ab18:	add	sp, sp, #8
   1ab1c:	pop	{r2, r3}
   1ab20:	bx	lr
   1ab24:	push	{r1, lr}
   1ab28:	mov	r0, #8
   1ab2c:	bl	11888 <raise@plt>
   1ab30:	pop	{r1, pc}
   1ab34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ab38:	mov	r8, r2
   1ab3c:	mov	r6, r0
   1ab40:	mov	r7, r1
   1ab44:	mov	sl, r3
   1ab48:	ldr	r9, [sp, #32]
   1ab4c:	bl	1abac <fts_children@@Base+0x10e8>
   1ab50:	umull	r4, r5, r8, r0
   1ab54:	mul	r8, r8, r1
   1ab58:	mla	r2, r0, sl, r8
   1ab5c:	add	r5, r2, r5
   1ab60:	subs	r4, r6, r4
   1ab64:	sbc	r5, r7, r5
   1ab68:	strd	r4, [r9]
   1ab6c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ab70:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1ab74:	mov	r8, r2
   1ab78:	mov	r6, r0
   1ab7c:	mov	r7, r1
   1ab80:	mov	r5, r3
   1ab84:	ldr	r9, [sp, #32]
   1ab88:	bl	1b038 <fts_children@@Base+0x1574>
   1ab8c:	mul	r3, r0, r5
   1ab90:	umull	r4, r5, r0, r8
   1ab94:	mla	r8, r8, r1, r3
   1ab98:	add	r5, r8, r5
   1ab9c:	subs	r4, r6, r4
   1aba0:	sbc	r5, r7, r5
   1aba4:	strd	r4, [r9]
   1aba8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1abac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1abb0:	rsbs	r4, r0, #0
   1abb4:	rsc	r5, r1, #0
   1abb8:	cmp	r1, #0
   1abbc:	mvn	r6, #0
   1abc0:	sub	sp, sp, #12
   1abc4:	movge	r4, r0
   1abc8:	movge	r5, r1
   1abcc:	movge	r6, #0
   1abd0:	cmp	r3, #0
   1abd4:	blt	1ae0c <fts_children@@Base+0x1348>
   1abd8:	cmp	r3, #0
   1abdc:	mov	sl, r4
   1abe0:	mov	ip, r5
   1abe4:	mov	r0, r2
   1abe8:	mov	r1, r3
   1abec:	mov	r8, r2
   1abf0:	mov	r7, r4
   1abf4:	mov	r9, r5
   1abf8:	bne	1acf0 <fts_children@@Base+0x122c>
   1abfc:	cmp	r2, r5
   1ac00:	bls	1ad2c <fts_children@@Base+0x1268>
   1ac04:	clz	r3, r2
   1ac08:	cmp	r3, #0
   1ac0c:	rsbne	r2, r3, #32
   1ac10:	lslne	r8, r0, r3
   1ac14:	lsrne	r2, r4, r2
   1ac18:	lslne	r7, r4, r3
   1ac1c:	orrne	r9, r2, r5, lsl r3
   1ac20:	lsr	r4, r8, #16
   1ac24:	uxth	sl, r8
   1ac28:	mov	r1, r4
   1ac2c:	mov	r0, r9
   1ac30:	bl	1a8dc <fts_children@@Base+0xe18>
   1ac34:	mov	r1, r4
   1ac38:	mov	fp, r0
   1ac3c:	mov	r0, r9
   1ac40:	bl	1aac8 <fts_children@@Base+0x1004>
   1ac44:	mul	r0, sl, fp
   1ac48:	lsr	r2, r7, #16
   1ac4c:	orr	r1, r2, r1, lsl #16
   1ac50:	cmp	r0, r1
   1ac54:	bls	1ac78 <fts_children@@Base+0x11b4>
   1ac58:	adds	r1, r1, r8
   1ac5c:	sub	r3, fp, #1
   1ac60:	bcs	1ac74 <fts_children@@Base+0x11b0>
   1ac64:	cmp	r0, r1
   1ac68:	subhi	fp, fp, #2
   1ac6c:	addhi	r1, r1, r8
   1ac70:	bhi	1ac78 <fts_children@@Base+0x11b4>
   1ac74:	mov	fp, r3
   1ac78:	rsb	r9, r0, r1
   1ac7c:	mov	r1, r4
   1ac80:	uxth	r7, r7
   1ac84:	mov	r0, r9
   1ac88:	bl	1a8dc <fts_children@@Base+0xe18>
   1ac8c:	mov	r1, r4
   1ac90:	mov	r5, r0
   1ac94:	mov	r0, r9
   1ac98:	bl	1aac8 <fts_children@@Base+0x1004>
   1ac9c:	mul	sl, sl, r5
   1aca0:	orr	r1, r7, r1, lsl #16
   1aca4:	cmp	sl, r1
   1aca8:	bls	1acc8 <fts_children@@Base+0x1204>
   1acac:	adds	r8, r1, r8
   1acb0:	sub	r3, r5, #1
   1acb4:	bcs	1acc4 <fts_children@@Base+0x1200>
   1acb8:	cmp	sl, r8
   1acbc:	subhi	r5, r5, #2
   1acc0:	bhi	1acc8 <fts_children@@Base+0x1204>
   1acc4:	mov	r5, r3
   1acc8:	orr	r3, r5, fp, lsl #16
   1accc:	mov	r4, #0
   1acd0:	cmp	r6, #0
   1acd4:	mov	r0, r3
   1acd8:	mov	r1, r4
   1acdc:	beq	1ace8 <fts_children@@Base+0x1224>
   1ace0:	rsbs	r0, r0, #0
   1ace4:	rsc	r1, r1, #0
   1ace8:	add	sp, sp, #12
   1acec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1acf0:	cmp	r3, r5
   1acf4:	movhi	r4, #0
   1acf8:	movhi	r3, r4
   1acfc:	bhi	1acd0 <fts_children@@Base+0x120c>
   1ad00:	clz	r5, r1
   1ad04:	cmp	r5, #0
   1ad08:	bne	1aef8 <fts_children@@Base+0x1434>
   1ad0c:	cmp	r1, ip
   1ad10:	cmpcs	r2, sl
   1ad14:	movhi	r4, #0
   1ad18:	movls	r4, #1
   1ad1c:	movls	r3, #1
   1ad20:	movls	r4, r5
   1ad24:	movhi	r3, r4
   1ad28:	b	1acd0 <fts_children@@Base+0x120c>
   1ad2c:	cmp	r2, #0
   1ad30:	bne	1ad44 <fts_children@@Base+0x1280>
   1ad34:	mov	r1, r2
   1ad38:	mov	r0, #1
   1ad3c:	bl	1a8dc <fts_children@@Base+0xe18>
   1ad40:	mov	r8, r0
   1ad44:	clz	r3, r8
   1ad48:	cmp	r3, #0
   1ad4c:	bne	1ae1c <fts_children@@Base+0x1358>
   1ad50:	rsb	r9, r8, r9
   1ad54:	lsr	r5, r8, #16
   1ad58:	uxth	sl, r8
   1ad5c:	mov	r4, #1
   1ad60:	mov	r1, r5
   1ad64:	mov	r0, r9
   1ad68:	bl	1a8dc <fts_children@@Base+0xe18>
   1ad6c:	mov	r1, r5
   1ad70:	mov	fp, r0
   1ad74:	mov	r0, r9
   1ad78:	bl	1aac8 <fts_children@@Base+0x1004>
   1ad7c:	mul	r0, sl, fp
   1ad80:	lsr	r2, r7, #16
   1ad84:	orr	r1, r2, r1, lsl #16
   1ad88:	cmp	r0, r1
   1ad8c:	bls	1adac <fts_children@@Base+0x12e8>
   1ad90:	adds	r1, r1, r8
   1ad94:	sub	r3, fp, #1
   1ad98:	bcs	1b018 <fts_children@@Base+0x1554>
   1ad9c:	cmp	r0, r1
   1ada0:	subhi	fp, fp, #2
   1ada4:	addhi	r1, r1, r8
   1ada8:	bls	1b018 <fts_children@@Base+0x1554>
   1adac:	rsb	r2, r0, r1
   1adb0:	mov	r1, r5
   1adb4:	str	r2, [sp]
   1adb8:	uxth	r7, r7
   1adbc:	mov	r0, r2
   1adc0:	bl	1a8dc <fts_children@@Base+0xe18>
   1adc4:	ldr	r2, [sp]
   1adc8:	mov	r1, r5
   1adcc:	mov	r9, r0
   1add0:	mov	r0, r2
   1add4:	bl	1aac8 <fts_children@@Base+0x1004>
   1add8:	mul	sl, sl, r9
   1addc:	orr	r1, r7, r1, lsl #16
   1ade0:	cmp	sl, r1
   1ade4:	bls	1ae04 <fts_children@@Base+0x1340>
   1ade8:	adds	r8, r1, r8
   1adec:	sub	r3, r9, #1
   1adf0:	bcs	1ae00 <fts_children@@Base+0x133c>
   1adf4:	cmp	sl, r8
   1adf8:	subhi	r9, r9, #2
   1adfc:	bhi	1ae04 <fts_children@@Base+0x1340>
   1ae00:	mov	r9, r3
   1ae04:	orr	r3, r9, fp, lsl #16
   1ae08:	b	1acd0 <fts_children@@Base+0x120c>
   1ae0c:	mvn	r6, r6
   1ae10:	rsbs	r2, r2, #0
   1ae14:	rsc	r3, r3, #0
   1ae18:	b	1abd8 <fts_children@@Base+0x1114>
   1ae1c:	lsl	r8, r8, r3
   1ae20:	rsb	fp, r3, #32
   1ae24:	lsr	r4, r9, fp
   1ae28:	lsr	fp, r7, fp
   1ae2c:	lsr	r5, r8, #16
   1ae30:	orr	fp, fp, r9, lsl r3
   1ae34:	mov	r0, r4
   1ae38:	lsl	r7, r7, r3
   1ae3c:	mov	r1, r5
   1ae40:	uxth	sl, r8
   1ae44:	bl	1a8dc <fts_children@@Base+0xe18>
   1ae48:	mov	r1, r5
   1ae4c:	mov	r3, r0
   1ae50:	mov	r0, r4
   1ae54:	str	r3, [sp]
   1ae58:	bl	1aac8 <fts_children@@Base+0x1004>
   1ae5c:	ldr	r3, [sp]
   1ae60:	lsr	r2, fp, #16
   1ae64:	mul	r0, sl, r3
   1ae68:	orr	r1, r2, r1, lsl #16
   1ae6c:	cmp	r0, r1
   1ae70:	bls	1ae90 <fts_children@@Base+0x13cc>
   1ae74:	adds	r1, r1, r8
   1ae78:	sub	r2, r3, #1
   1ae7c:	bcs	1b030 <fts_children@@Base+0x156c>
   1ae80:	cmp	r0, r1
   1ae84:	subhi	r3, r3, #2
   1ae88:	addhi	r1, r1, r8
   1ae8c:	bls	1b030 <fts_children@@Base+0x156c>
   1ae90:	rsb	r9, r0, r1
   1ae94:	mov	r1, r5
   1ae98:	str	r3, [sp]
   1ae9c:	uxth	fp, fp
   1aea0:	mov	r0, r9
   1aea4:	bl	1a8dc <fts_children@@Base+0xe18>
   1aea8:	mov	r1, r5
   1aeac:	mov	r4, r0
   1aeb0:	mov	r0, r9
   1aeb4:	bl	1aac8 <fts_children@@Base+0x1004>
   1aeb8:	mul	r9, sl, r4
   1aebc:	ldr	r3, [sp]
   1aec0:	orr	r1, fp, r1, lsl #16
   1aec4:	cmp	r9, r1
   1aec8:	bls	1aeec <fts_children@@Base+0x1428>
   1aecc:	adds	r1, r1, r8
   1aed0:	sub	r2, r4, #1
   1aed4:	bcs	1aee8 <fts_children@@Base+0x1424>
   1aed8:	cmp	r9, r1
   1aedc:	subhi	r4, r4, #2
   1aee0:	addhi	r1, r1, r8
   1aee4:	bhi	1aeec <fts_children@@Base+0x1428>
   1aee8:	mov	r4, r2
   1aeec:	rsb	r9, r9, r1
   1aef0:	orr	r4, r4, r3, lsl #16
   1aef4:	b	1ad60 <fts_children@@Base+0x129c>
   1aef8:	rsb	sl, r5, #32
   1aefc:	lsl	r3, r2, r5
   1af00:	lsr	r0, r2, sl
   1af04:	lsr	r2, ip, sl
   1af08:	orr	r4, r0, r1, lsl r5
   1af0c:	lsr	sl, r7, sl
   1af10:	mov	r0, r2
   1af14:	orr	sl, sl, ip, lsl r5
   1af18:	lsr	r9, r4, #16
   1af1c:	str	r3, [sp, #4]
   1af20:	str	r2, [sp]
   1af24:	uxth	fp, r4
   1af28:	mov	r1, r9
   1af2c:	bl	1a8dc <fts_children@@Base+0xe18>
   1af30:	ldr	r2, [sp]
   1af34:	mov	r1, r9
   1af38:	mov	r8, r0
   1af3c:	mov	r0, r2
   1af40:	bl	1aac8 <fts_children@@Base+0x1004>
   1af44:	mul	r0, fp, r8
   1af48:	lsr	r2, sl, #16
   1af4c:	orr	r1, r2, r1, lsl #16
   1af50:	cmp	r0, r1
   1af54:	bls	1af74 <fts_children@@Base+0x14b0>
   1af58:	adds	r1, r1, r4
   1af5c:	sub	r2, r8, #1
   1af60:	bcs	1b028 <fts_children@@Base+0x1564>
   1af64:	cmp	r0, r1
   1af68:	subhi	r8, r8, #2
   1af6c:	addhi	r1, r1, r4
   1af70:	bls	1b028 <fts_children@@Base+0x1564>
   1af74:	rsb	ip, r0, r1
   1af78:	mov	r1, r9
   1af7c:	str	ip, [sp]
   1af80:	mov	r0, ip
   1af84:	bl	1a8dc <fts_children@@Base+0xe18>
   1af88:	ldr	ip, [sp]
   1af8c:	mov	r1, r9
   1af90:	mov	r2, r0
   1af94:	mov	r0, ip
   1af98:	str	r2, [sp]
   1af9c:	bl	1aac8 <fts_children@@Base+0x1004>
   1afa0:	ldr	r2, [sp]
   1afa4:	uxth	ip, sl
   1afa8:	mul	fp, fp, r2
   1afac:	orr	ip, ip, r1, lsl #16
   1afb0:	cmp	fp, ip
   1afb4:	bls	1afd4 <fts_children@@Base+0x1510>
   1afb8:	adds	ip, ip, r4
   1afbc:	sub	r1, r2, #1
   1afc0:	bcs	1b020 <fts_children@@Base+0x155c>
   1afc4:	cmp	fp, ip
   1afc8:	subhi	r2, r2, #2
   1afcc:	addhi	ip, ip, r4
   1afd0:	bls	1b020 <fts_children@@Base+0x155c>
   1afd4:	ldr	r0, [sp, #4]
   1afd8:	orr	r1, r2, r8, lsl #16
   1afdc:	rsb	fp, fp, ip
   1afe0:	umull	r2, r3, r1, r0
   1afe4:	cmp	fp, r3
   1afe8:	bcc	1b00c <fts_children@@Base+0x1548>
   1afec:	movne	r4, #0
   1aff0:	moveq	r4, #1
   1aff4:	cmp	r2, r7, lsl r5
   1aff8:	movls	r4, #0
   1affc:	andhi	r4, r4, #1
   1b000:	cmp	r4, #0
   1b004:	moveq	r3, r1
   1b008:	beq	1acd0 <fts_children@@Base+0x120c>
   1b00c:	sub	r3, r1, #1
   1b010:	mov	r4, #0
   1b014:	b	1acd0 <fts_children@@Base+0x120c>
   1b018:	mov	fp, r3
   1b01c:	b	1adac <fts_children@@Base+0x12e8>
   1b020:	mov	r2, r1
   1b024:	b	1afd4 <fts_children@@Base+0x1510>
   1b028:	mov	r8, r2
   1b02c:	b	1af74 <fts_children@@Base+0x14b0>
   1b030:	mov	r3, r2
   1b034:	b	1ae90 <fts_children@@Base+0x13cc>
   1b038:	cmp	r3, #0
   1b03c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b040:	mov	r6, r0
   1b044:	sub	sp, sp, #12
   1b048:	mov	r5, r1
   1b04c:	mov	r7, r0
   1b050:	mov	r4, r2
   1b054:	mov	r8, r1
   1b058:	bne	1b138 <fts_children@@Base+0x1674>
   1b05c:	cmp	r2, r1
   1b060:	bls	1b174 <fts_children@@Base+0x16b0>
   1b064:	clz	r3, r2
   1b068:	cmp	r3, #0
   1b06c:	rsbne	r8, r3, #32
   1b070:	lslne	r4, r2, r3
   1b074:	lsrne	r8, r0, r8
   1b078:	lslne	r7, r0, r3
   1b07c:	orrne	r8, r8, r1, lsl r3
   1b080:	lsr	r5, r4, #16
   1b084:	uxth	sl, r4
   1b088:	mov	r1, r5
   1b08c:	mov	r0, r8
   1b090:	bl	1a8dc <fts_children@@Base+0xe18>
   1b094:	mov	r1, r5
   1b098:	mov	r9, r0
   1b09c:	mov	r0, r8
   1b0a0:	bl	1aac8 <fts_children@@Base+0x1004>
   1b0a4:	mul	r0, sl, r9
   1b0a8:	lsr	r3, r7, #16
   1b0ac:	orr	r1, r3, r1, lsl #16
   1b0b0:	cmp	r0, r1
   1b0b4:	bls	1b0d8 <fts_children@@Base+0x1614>
   1b0b8:	adds	r1, r1, r4
   1b0bc:	sub	r2, r9, #1
   1b0c0:	bcs	1b0d4 <fts_children@@Base+0x1610>
   1b0c4:	cmp	r0, r1
   1b0c8:	subhi	r9, r9, #2
   1b0cc:	addhi	r1, r1, r4
   1b0d0:	bhi	1b0d8 <fts_children@@Base+0x1614>
   1b0d4:	mov	r9, r2
   1b0d8:	rsb	r8, r0, r1
   1b0dc:	mov	r1, r5
   1b0e0:	uxth	r7, r7
   1b0e4:	mov	r0, r8
   1b0e8:	bl	1a8dc <fts_children@@Base+0xe18>
   1b0ec:	mov	r1, r5
   1b0f0:	mov	r6, r0
   1b0f4:	mov	r0, r8
   1b0f8:	bl	1aac8 <fts_children@@Base+0x1004>
   1b0fc:	mul	sl, sl, r6
   1b100:	orr	r1, r7, r1, lsl #16
   1b104:	cmp	sl, r1
   1b108:	bls	1b124 <fts_children@@Base+0x1660>
   1b10c:	adds	r4, r1, r4
   1b110:	sub	r3, r6, #1
   1b114:	bcs	1b420 <fts_children@@Base+0x195c>
   1b118:	cmp	sl, r4
   1b11c:	subhi	r6, r6, #2
   1b120:	bls	1b420 <fts_children@@Base+0x195c>
   1b124:	orr	r0, r6, r9, lsl #16
   1b128:	mov	r6, #0
   1b12c:	mov	r1, r6
   1b130:	add	sp, sp, #12
   1b134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b138:	cmp	r3, r1
   1b13c:	movhi	r6, #0
   1b140:	movhi	r0, r6
   1b144:	bhi	1b12c <fts_children@@Base+0x1668>
   1b148:	clz	r7, r3
   1b14c:	cmp	r7, #0
   1b150:	bne	1b250 <fts_children@@Base+0x178c>
   1b154:	cmp	r3, r1
   1b158:	cmpcs	r2, r6
   1b15c:	movhi	r6, #0
   1b160:	movls	r6, #1
   1b164:	movls	r0, #1
   1b168:	movls	r6, r7
   1b16c:	movhi	r0, r6
   1b170:	b	1b12c <fts_children@@Base+0x1668>
   1b174:	cmp	r2, #0
   1b178:	bne	1b18c <fts_children@@Base+0x16c8>
   1b17c:	mov	r1, r2
   1b180:	mov	r0, #1
   1b184:	bl	1a8dc <fts_children@@Base+0xe18>
   1b188:	mov	r4, r0
   1b18c:	clz	r3, r4
   1b190:	cmp	r3, #0
   1b194:	bne	1b34c <fts_children@@Base+0x1888>
   1b198:	rsb	r5, r4, r5
   1b19c:	lsr	r8, r4, #16
   1b1a0:	uxth	sl, r4
   1b1a4:	mov	r6, #1
   1b1a8:	mov	r1, r8
   1b1ac:	mov	r0, r5
   1b1b0:	bl	1a8dc <fts_children@@Base+0xe18>
   1b1b4:	mov	r1, r8
   1b1b8:	mov	r9, r0
   1b1bc:	mov	r0, r5
   1b1c0:	bl	1aac8 <fts_children@@Base+0x1004>
   1b1c4:	mul	r0, sl, r9
   1b1c8:	lsr	r3, r7, #16
   1b1cc:	orr	r1, r3, r1, lsl #16
   1b1d0:	cmp	r0, r1
   1b1d4:	bls	1b1f4 <fts_children@@Base+0x1730>
   1b1d8:	adds	r1, r1, r4
   1b1dc:	sub	r2, r9, #1
   1b1e0:	bcs	1b428 <fts_children@@Base+0x1964>
   1b1e4:	cmp	r0, r1
   1b1e8:	subhi	r9, r9, #2
   1b1ec:	addhi	r1, r1, r4
   1b1f0:	bls	1b428 <fts_children@@Base+0x1964>
   1b1f4:	rsb	fp, r0, r1
   1b1f8:	mov	r1, r8
   1b1fc:	uxth	r7, r7
   1b200:	mov	r0, fp
   1b204:	bl	1a8dc <fts_children@@Base+0xe18>
   1b208:	mov	r1, r8
   1b20c:	mov	r5, r0
   1b210:	mov	r0, fp
   1b214:	bl	1aac8 <fts_children@@Base+0x1004>
   1b218:	mul	sl, sl, r5
   1b21c:	orr	r1, r7, r1, lsl #16
   1b220:	cmp	sl, r1
   1b224:	bls	1b240 <fts_children@@Base+0x177c>
   1b228:	adds	r4, r1, r4
   1b22c:	sub	r3, r5, #1
   1b230:	bcs	1b430 <fts_children@@Base+0x196c>
   1b234:	cmp	sl, r4
   1b238:	subhi	r5, r5, #2
   1b23c:	bls	1b430 <fts_children@@Base+0x196c>
   1b240:	orr	r0, r5, r9, lsl #16
   1b244:	mov	r1, r6
   1b248:	add	sp, sp, #12
   1b24c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b250:	rsb	r1, r7, #32
   1b254:	lsl	r0, r2, r7
   1b258:	lsr	r2, r2, r1
   1b25c:	lsr	fp, r5, r1
   1b260:	orr	r8, r2, r3, lsl r7
   1b264:	lsr	r1, r6, r1
   1b268:	str	r0, [sp, #4]
   1b26c:	orr	r5, r1, r5, lsl r7
   1b270:	lsr	r9, r8, #16
   1b274:	mov	r0, fp
   1b278:	uxth	sl, r8
   1b27c:	mov	r1, r9
   1b280:	bl	1a8dc <fts_children@@Base+0xe18>
   1b284:	mov	r1, r9
   1b288:	mov	r4, r0
   1b28c:	mov	r0, fp
   1b290:	bl	1aac8 <fts_children@@Base+0x1004>
   1b294:	mul	r0, sl, r4
   1b298:	lsr	ip, r5, #16
   1b29c:	orr	r1, ip, r1, lsl #16
   1b2a0:	cmp	r0, r1
   1b2a4:	bls	1b2b8 <fts_children@@Base+0x17f4>
   1b2a8:	adds	r1, r1, r8
   1b2ac:	sub	r2, r4, #1
   1b2b0:	bcc	1b44c <fts_children@@Base+0x1988>
   1b2b4:	mov	r4, r2
   1b2b8:	rsb	ip, r0, r1
   1b2bc:	mov	r1, r9
   1b2c0:	str	ip, [sp]
   1b2c4:	uxth	r5, r5
   1b2c8:	mov	r0, ip
   1b2cc:	bl	1a8dc <fts_children@@Base+0xe18>
   1b2d0:	ldr	ip, [sp]
   1b2d4:	mov	r1, r9
   1b2d8:	mov	fp, r0
   1b2dc:	mov	r0, ip
   1b2e0:	bl	1aac8 <fts_children@@Base+0x1004>
   1b2e4:	mul	sl, sl, fp
   1b2e8:	orr	r1, r5, r1, lsl #16
   1b2ec:	cmp	sl, r1
   1b2f0:	bls	1b304 <fts_children@@Base+0x1840>
   1b2f4:	adds	r1, r1, r8
   1b2f8:	sub	r2, fp, #1
   1b2fc:	bcc	1b438 <fts_children@@Base+0x1974>
   1b300:	mov	fp, r2
   1b304:	ldr	r3, [sp, #4]
   1b308:	orr	r0, fp, r4, lsl #16
   1b30c:	rsb	sl, sl, r1
   1b310:	umull	r4, r5, r0, r3
   1b314:	cmp	sl, r5
   1b318:	bcc	1b338 <fts_children@@Base+0x1874>
   1b31c:	movne	r3, #0
   1b320:	moveq	r3, #1
   1b324:	cmp	r4, r6, lsl r7
   1b328:	movls	r6, #0
   1b32c:	andhi	r6, r3, #1
   1b330:	cmp	r6, #0
   1b334:	beq	1b12c <fts_children@@Base+0x1668>
   1b338:	mov	r6, #0
   1b33c:	sub	r0, r0, #1
   1b340:	mov	r1, r6
   1b344:	add	sp, sp, #12
   1b348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b34c:	lsl	r4, r4, r3
   1b350:	rsb	r9, r3, #32
   1b354:	lsr	r2, r5, r9
   1b358:	lsr	r9, r6, r9
   1b35c:	lsr	r8, r4, #16
   1b360:	orr	r9, r9, r5, lsl r3
   1b364:	mov	r0, r2
   1b368:	lsl	r7, r6, r3
   1b36c:	mov	r1, r8
   1b370:	str	r2, [sp]
   1b374:	bl	1a8dc <fts_children@@Base+0xe18>
   1b378:	ldr	r2, [sp]
   1b37c:	mov	r1, r8
   1b380:	uxth	sl, r4
   1b384:	mov	fp, r0
   1b388:	mov	r0, r2
   1b38c:	bl	1aac8 <fts_children@@Base+0x1004>
   1b390:	mul	r0, sl, fp
   1b394:	lsr	r3, r9, #16
   1b398:	orr	r1, r3, r1, lsl #16
   1b39c:	cmp	r0, r1
   1b3a0:	bls	1b3c0 <fts_children@@Base+0x18fc>
   1b3a4:	adds	r1, r1, r4
   1b3a8:	sub	r3, fp, #1
   1b3ac:	bcs	1b460 <fts_children@@Base+0x199c>
   1b3b0:	cmp	r0, r1
   1b3b4:	subhi	fp, fp, #2
   1b3b8:	addhi	r1, r1, r4
   1b3bc:	bls	1b460 <fts_children@@Base+0x199c>
   1b3c0:	rsb	r5, r0, r1
   1b3c4:	mov	r1, r8
   1b3c8:	uxth	r9, r9
   1b3cc:	mov	r0, r5
   1b3d0:	bl	1a8dc <fts_children@@Base+0xe18>
   1b3d4:	mov	r1, r8
   1b3d8:	mov	r6, r0
   1b3dc:	mov	r0, r5
   1b3e0:	bl	1aac8 <fts_children@@Base+0x1004>
   1b3e4:	mul	r5, sl, r6
   1b3e8:	orr	r1, r9, r1, lsl #16
   1b3ec:	cmp	r5, r1
   1b3f0:	bls	1b414 <fts_children@@Base+0x1950>
   1b3f4:	adds	r1, r1, r4
   1b3f8:	sub	r3, r6, #1
   1b3fc:	bcs	1b410 <fts_children@@Base+0x194c>
   1b400:	cmp	r5, r1
   1b404:	subhi	r6, r6, #2
   1b408:	addhi	r1, r1, r4
   1b40c:	bhi	1b414 <fts_children@@Base+0x1950>
   1b410:	mov	r6, r3
   1b414:	rsb	r5, r5, r1
   1b418:	orr	r6, r6, fp, lsl #16
   1b41c:	b	1b1a8 <fts_children@@Base+0x16e4>
   1b420:	mov	r6, r3
   1b424:	b	1b124 <fts_children@@Base+0x1660>
   1b428:	mov	r9, r2
   1b42c:	b	1b1f4 <fts_children@@Base+0x1730>
   1b430:	mov	r5, r3
   1b434:	b	1b240 <fts_children@@Base+0x177c>
   1b438:	cmp	sl, r1
   1b43c:	subhi	fp, fp, #2
   1b440:	addhi	r1, r1, r8
   1b444:	bhi	1b304 <fts_children@@Base+0x1840>
   1b448:	b	1b300 <fts_children@@Base+0x183c>
   1b44c:	cmp	r0, r1
   1b450:	subhi	r4, r4, #2
   1b454:	addhi	r1, r1, r8
   1b458:	bhi	1b2b8 <fts_children@@Base+0x17f4>
   1b45c:	b	1b2b4 <fts_children@@Base+0x17f0>
   1b460:	mov	fp, r3
   1b464:	b	1b3c0 <fts_children@@Base+0x18fc>
   1b468:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1b46c:	mov	r7, r0
   1b470:	ldr	r6, [pc, #76]	; 1b4c4 <fts_children@@Base+0x1a00>
   1b474:	mov	r8, r1
   1b478:	ldr	r5, [pc, #72]	; 1b4c8 <fts_children@@Base+0x1a04>
   1b47c:	mov	r9, r2
   1b480:	add	r6, pc, r6
   1b484:	bl	11838 <_init@@Base>
   1b488:	add	r5, pc, r5
   1b48c:	rsb	r6, r5, r6
   1b490:	asrs	r6, r6, #2
   1b494:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1b498:	sub	r5, r5, #4
   1b49c:	mov	r4, #0
   1b4a0:	add	r4, r4, #1
   1b4a4:	ldr	r3, [r5, #4]!
   1b4a8:	mov	r0, r7
   1b4ac:	mov	r1, r8
   1b4b0:	mov	r2, r9
   1b4b4:	blx	r3
   1b4b8:	cmp	r4, r6
   1b4bc:	bne	1b4a0 <fts_children@@Base+0x19dc>
   1b4c0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1b4c4:	strdeq	r1, [r1], -ip
   1b4c8:	strdeq	r1, [r1], -r0
   1b4cc:	bx	lr
   1b4d0:	ldr	r3, [pc, #28]	; 1b4f4 <fts_children@@Base+0x1a30>
   1b4d4:	mov	r1, #0
   1b4d8:	ldr	r2, [pc, #24]	; 1b4f8 <fts_children@@Base+0x1a34>
   1b4dc:	add	r3, pc, r3
   1b4e0:	ldr	r3, [r3, r2]
   1b4e4:	cmp	r3, #0
   1b4e8:	ldrne	r2, [r3]
   1b4ec:	moveq	r2, r3
   1b4f0:	b	11b10 <__cxa_atexit@plt>
   1b4f4:	andeq	r1, r1, ip, lsl fp
   1b4f8:	andeq	r0, r0, r8, lsr #3

Disassembly of section .fini:

0001b4fc <_fini@@Base>:
   1b4fc:	push	{r3, lr}
   1b500:	pop	{r3, pc}
