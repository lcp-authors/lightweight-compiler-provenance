
centos-preinstalled/mkfifo:     file format elf32-littlearm


Disassembly of section .init:

000117b8 <_init@@Base>:
   117b8:	push	{r3, lr}
   117bc:	bl	120a8 <__assert_fail@plt+0x4a4>
   117c0:	pop	{r3, pc}

Disassembly of section .plt:

000117c4 <fdopen@plt-0x14>:
   117c4:	push	{lr}		; (str lr, [sp, #-4]!)
   117c8:	ldr	lr, [pc, #4]	; 117d4 <_init@@Base+0x1c>
   117cc:	add	lr, pc, lr
   117d0:	ldr	pc, [lr, #8]!
   117d4:	andeq	sl, r1, ip, lsr #16

000117d8 <fdopen@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #106496	; 0x1a000
   117e0:	ldr	pc, [ip, #2092]!	; 0x82c

000117e4 <fstatfs64@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #106496	; 0x1a000
   117ec:	ldr	pc, [ip, #2084]!	; 0x824

000117f0 <calloc@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #106496	; 0x1a000
   117f8:	ldr	pc, [ip, #2076]!	; 0x81c

000117fc <fputs_unlocked@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #106496	; 0x1a000
   11804:	ldr	pc, [ip, #2068]!	; 0x814

00011808 <raise@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #106496	; 0x1a000
   11810:	ldr	pc, [ip, #2060]!	; 0x80c

00011814 <is_selinux_enabled@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #106496	; 0x1a000
   1181c:	ldr	pc, [ip, #2052]!	; 0x804

00011820 <strcmp@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #106496	; 0x1a000
   11828:	ldr	pc, [ip, #2044]!	; 0x7fc

0001182c <context_type_get@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #106496	; 0x1a000
   11834:	ldr	pc, [ip, #2036]!	; 0x7f4

00011838 <fflush@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #106496	; 0x1a000
   11840:	ldr	pc, [ip, #2028]!	; 0x7ec

00011844 <lsetfilecon@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #106496	; 0x1a000
   1184c:	ldr	pc, [ip, #2020]!	; 0x7e4

00011850 <memmove@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #106496	; 0x1a000
   11858:	ldr	pc, [ip, #2012]!	; 0x7dc

0001185c <free@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #106496	; 0x1a000
   11864:	ldr	pc, [ip, #2004]!	; 0x7d4

00011868 <_exit@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #106496	; 0x1a000
   11870:	ldr	pc, [ip, #1996]!	; 0x7cc

00011874 <memcpy@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #106496	; 0x1a000
   1187c:	ldr	pc, [ip, #1988]!	; 0x7c4

00011880 <mbsinit@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #106496	; 0x1a000
   11888:	ldr	pc, [ip, #1980]!	; 0x7bc

0001188c <context_new@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #106496	; 0x1a000
   11894:	ldr	pc, [ip, #1972]!	; 0x7b4

00011898 <memcmp@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #106496	; 0x1a000
   118a0:	ldr	pc, [ip, #1964]!	; 0x7ac

000118a4 <dcgettext@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #106496	; 0x1a000
   118ac:	ldr	pc, [ip, #1956]!	; 0x7a4

000118b0 <__stack_chk_fail@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #106496	; 0x1a000
   118b8:	ldr	pc, [ip, #1948]!	; 0x79c

000118bc <context_type_set@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #106496	; 0x1a000
   118c4:	ldr	pc, [ip, #1940]!	; 0x794

000118c8 <realloc@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #106496	; 0x1a000
   118d0:	ldr	pc, [ip, #1932]!	; 0x78c

000118d4 <fgetfilecon@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #106496	; 0x1a000
   118dc:	ldr	pc, [ip, #1924]!	; 0x784

000118e0 <textdomain@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #106496	; 0x1a000
   118e8:	ldr	pc, [ip, #1916]!	; 0x77c

000118ec <__rawmemchr@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #106496	; 0x1a000
   118f4:	ldr	pc, [ip, #1908]!	; 0x774

000118f8 <__fxstatat64@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #106496	; 0x1a000
   11900:	ldr	pc, [ip, #1900]!	; 0x76c

00011904 <iswprint@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #106496	; 0x1a000
   1190c:	ldr	pc, [ip, #1892]!	; 0x764

00011910 <__fxstat64@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #106496	; 0x1a000
   11918:	ldr	pc, [ip, #1884]!	; 0x75c

0001191c <readlink@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #106496	; 0x1a000
   11924:	ldr	pc, [ip, #1876]!	; 0x754

00011928 <fwrite@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #106496	; 0x1a000
   11930:	ldr	pc, [ip, #1868]!	; 0x74c

00011934 <lseek64@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #106496	; 0x1a000
   1193c:	ldr	pc, [ip, #1860]!	; 0x744

00011940 <__ctype_get_mb_cur_max@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #106496	; 0x1a000
   11948:	ldr	pc, [ip, #1852]!	; 0x73c

0001194c <strcpy@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #106496	; 0x1a000
   11954:	ldr	pc, [ip, #1844]!	; 0x734

00011958 <matchpathcon@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #106496	; 0x1a000
   11960:	ldr	pc, [ip, #1836]!	; 0x72c

00011964 <getcon@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #106496	; 0x1a000
   1196c:	ldr	pc, [ip, #1828]!	; 0x724

00011970 <__fpending@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #106496	; 0x1a000
   11978:	ldr	pc, [ip, #1820]!	; 0x71c

0001197c <mbrtowc@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #106496	; 0x1a000
   11984:	ldr	pc, [ip, #1812]!	; 0x714

00011988 <error@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #106496	; 0x1a000
   11990:	ldr	pc, [ip, #1804]!	; 0x70c

00011994 <open64@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #106496	; 0x1a000
   1199c:	ldr	pc, [ip, #1796]!	; 0x704

000119a0 <getenv@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #106496	; 0x1a000
   119a8:	ldr	pc, [ip, #1788]!	; 0x6fc

000119ac <lgetfilecon@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #106496	; 0x1a000
   119b4:	ldr	pc, [ip, #1780]!	; 0x6f4

000119b8 <malloc@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #106496	; 0x1a000
   119c0:	ldr	pc, [ip, #1772]!	; 0x6ec

000119c4 <__libc_start_main@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #106496	; 0x1a000
   119cc:	ldr	pc, [ip, #1764]!	; 0x6e4

000119d0 <__freading@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #106496	; 0x1a000
   119d8:	ldr	pc, [ip, #1756]!	; 0x6dc

000119dc <__gmon_start__@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #106496	; 0x1a000
   119e4:	ldr	pc, [ip, #1748]!	; 0x6d4

000119e8 <context_free@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #106496	; 0x1a000
   119f0:	ldr	pc, [ip, #1740]!	; 0x6cc

000119f4 <getopt_long@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #106496	; 0x1a000
   119fc:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a00 <__ctype_b_loc@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #106496	; 0x1a000
   11a08:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a0c <getcwd@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #106496	; 0x1a000
   11a14:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a18 <exit@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #106496	; 0x1a000
   11a20:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a24 <getfilecon@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #106496	; 0x1a000
   11a2c:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a30 <strlen@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #106496	; 0x1a000
   11a38:	ldr	pc, [ip, #1692]!	; 0x69c

00011a3c <openat64@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #106496	; 0x1a000
   11a44:	ldr	pc, [ip, #1684]!	; 0x694

00011a48 <setfscreatecon@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #106496	; 0x1a000
   11a50:	ldr	pc, [ip, #1676]!	; 0x68c

00011a54 <ungetc@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #106496	; 0x1a000
   11a5c:	ldr	pc, [ip, #1668]!	; 0x684

00011a60 <fcntl@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #106496	; 0x1a000
   11a68:	ldr	pc, [ip, #1660]!	; 0x67c

00011a6c <__errno_location@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #106496	; 0x1a000
   11a74:	ldr	pc, [ip, #1652]!	; 0x674

00011a78 <__cxa_atexit@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #106496	; 0x1a000
   11a80:	ldr	pc, [ip, #1644]!	; 0x66c

00011a84 <memset@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #106496	; 0x1a000
   11a8c:	ldr	pc, [ip, #1636]!	; 0x664

00011a90 <fscanf@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #106496	; 0x1a000
   11a98:	ldr	pc, [ip, #1628]!	; 0x65c

00011a9c <__printf_chk@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #106496	; 0x1a000
   11aa4:	ldr	pc, [ip, #1620]!	; 0x654

00011aa8 <fileno@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #106496	; 0x1a000
   11ab0:	ldr	pc, [ip, #1612]!	; 0x64c

00011ab4 <__fprintf_chk@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #106496	; 0x1a000
   11abc:	ldr	pc, [ip, #1604]!	; 0x644

00011ac0 <fclose@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #106496	; 0x1a000
   11ac8:	ldr	pc, [ip, #1596]!	; 0x63c

00011acc <fseeko64@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #106496	; 0x1a000
   11ad4:	ldr	pc, [ip, #1588]!	; 0x634

00011ad8 <__uflow@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #106496	; 0x1a000
   11ae0:	ldr	pc, [ip, #1580]!	; 0x62c

00011ae4 <setlocale@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #106496	; 0x1a000
   11aec:	ldr	pc, [ip, #1572]!	; 0x624

00011af0 <fsetfilecon@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #106496	; 0x1a000
   11af8:	ldr	pc, [ip, #1564]!	; 0x61c

00011afc <strrchr@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #106496	; 0x1a000
   11b04:	ldr	pc, [ip, #1556]!	; 0x614

00011b08 <nl_langinfo@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #106496	; 0x1a000
   11b10:	ldr	pc, [ip, #1548]!	; 0x60c

00011b14 <readdir64@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #106496	; 0x1a000
   11b1c:	ldr	pc, [ip, #1540]!	; 0x604

00011b20 <fdopendir@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #106496	; 0x1a000
   11b28:	ldr	pc, [ip, #1532]!	; 0x5fc

00011b2c <security_compute_create@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #106496	; 0x1a000
   11b34:	ldr	pc, [ip, #1524]!	; 0x5f4

00011b38 <dirfd@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #106496	; 0x1a000
   11b40:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b44 <fchdir@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #106496	; 0x1a000
   11b4c:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b50 <qsort@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #106496	; 0x1a000
   11b58:	ldr	pc, [ip, #1500]!	; 0x5dc

00011b5c <freecon@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #106496	; 0x1a000
   11b64:	ldr	pc, [ip, #1492]!	; 0x5d4

00011b68 <bindtextdomain@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #106496	; 0x1a000
   11b70:	ldr	pc, [ip, #1484]!	; 0x5cc

00011b74 <getfscreatecon@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #106496	; 0x1a000
   11b7c:	ldr	pc, [ip, #1476]!	; 0x5c4

00011b80 <umask@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #106496	; 0x1a000
   11b88:	ldr	pc, [ip, #1468]!	; 0x5bc

00011b8c <context_str@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #106496	; 0x1a000
   11b94:	ldr	pc, [ip, #1460]!	; 0x5b4

00011b98 <chmod@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #106496	; 0x1a000
   11ba0:	ldr	pc, [ip, #1452]!	; 0x5ac

00011ba4 <__xstat64@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #106496	; 0x1a000
   11bac:	ldr	pc, [ip, #1444]!	; 0x5a4

00011bb0 <strncmp@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #106496	; 0x1a000
   11bb8:	ldr	pc, [ip, #1436]!	; 0x59c

00011bbc <abort@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #106496	; 0x1a000
   11bc4:	ldr	pc, [ip, #1428]!	; 0x594

00011bc8 <close@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #106496	; 0x1a000
   11bd0:	ldr	pc, [ip, #1420]!	; 0x58c

00011bd4 <__lxstat64@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #106496	; 0x1a000
   11bdc:	ldr	pc, [ip, #1412]!	; 0x584

00011be0 <mkfifo@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #106496	; 0x1a000
   11be8:	ldr	pc, [ip, #1404]!	; 0x57c

00011bec <mode_to_security_class@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #106496	; 0x1a000
   11bf4:	ldr	pc, [ip, #1396]!	; 0x574

00011bf8 <closedir@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #106496	; 0x1a000
   11c00:	ldr	pc, [ip, #1388]!	; 0x56c

00011c04 <__assert_fail@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #106496	; 0x1a000
   11c0c:	ldr	pc, [ip, #1380]!	; 0x564

Disassembly of section .text:

00011c10 <close_stdout@@Base-0x1490>:
   11c10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c14:	mov	r7, r0
   11c18:	sub	sp, sp, #36	; 0x24
   11c1c:	ldr	r0, [r1]
   11c20:	mov	r5, r1
   11c24:	bl	14b38 <triple_free@@Base+0x56c>
   11c28:	ldr	r1, [pc, #1000]	; 12018 <__assert_fail@plt+0x414>
   11c2c:	mov	r0, #6
   11c30:	ldr	r6, [pc, #996]	; 1201c <__assert_fail@plt+0x418>
   11c34:	mov	r4, #0
   11c38:	add	r1, pc, r1
   11c3c:	ldr	sl, [pc, #988]	; 12020 <__assert_fail@plt+0x41c>
   11c40:	bl	11ae4 <setlocale@plt>
   11c44:	add	r6, pc, r6
   11c48:	ldr	r1, [pc, #980]	; 12024 <__assert_fail@plt+0x420>
   11c4c:	mov	fp, r4
   11c50:	mov	r0, r6
   11c54:	str	r4, [sp, #20]
   11c58:	add	r1, pc, r1
   11c5c:	ldr	r9, [pc, #964]	; 12028 <__assert_fail@plt+0x424>
   11c60:	bl	11b68 <bindtextdomain@plt>
   11c64:	mov	r0, r6
   11c68:	ldr	r6, [pc, #956]	; 1202c <__assert_fail@plt+0x428>
   11c6c:	bl	118e0 <textdomain@plt>
   11c70:	ldr	r3, [pc, #952]	; 12030 <__assert_fail@plt+0x42c>
   11c74:	add	sl, pc, sl
   11c78:	add	r6, pc, r6
   11c7c:	ldr	r2, [pc, #944]	; 12034 <__assert_fail@plt+0x430>
   11c80:	str	r4, [sp, #24]
   11c84:	add	r9, pc, r9
   11c88:	ldr	r0, [r6, r3]
   11c8c:	add	r2, pc, r2
   11c90:	str	r2, [sp, #28]
   11c94:	bl	1a8a8 <fts_children@@Base+0x1a0c>
   11c98:	str	fp, [sp]
   11c9c:	mov	r0, r7
   11ca0:	mov	r1, r5
   11ca4:	mov	r2, sl
   11ca8:	mov	r3, r9
   11cac:	mov	r8, #0
   11cb0:	bl	119f4 <getopt_long@plt>
   11cb4:	cmn	r0, #1
   11cb8:	beq	11dc4 <__assert_fail@plt+0x1c0>
   11cbc:	cmn	r0, #2
   11cc0:	beq	11d90 <__assert_fail@plt+0x18c>
   11cc4:	ble	11d1c <__assert_fail@plt+0x118>
   11cc8:	cmp	r0, #90	; 0x5a
   11ccc:	beq	11cec <__assert_fail@plt+0xe8>
   11cd0:	cmp	r0, #109	; 0x6d
   11cd4:	bne	11d88 <__assert_fail@plt+0x184>
   11cd8:	ldr	r3, [pc, #856]	; 12038 <__assert_fail@plt+0x434>
   11cdc:	ldr	r3, [r6, r3]
   11ce0:	ldr	r3, [r3]
   11ce4:	str	r3, [sp, #24]
   11ce8:	b	11c98 <__assert_fail@plt+0x94>
   11cec:	bl	11814 <is_selinux_enabled@plt>
   11cf0:	ldr	r3, [pc, #832]	; 12038 <__assert_fail@plt+0x434>
   11cf4:	ldr	r3, [r6, r3]
   11cf8:	ldr	r3, [r3]
   11cfc:	cmp	r0, #0
   11d00:	ble	11d98 <__assert_fail@plt+0x194>
   11d04:	ldr	r2, [sp, #20]
   11d08:	cmp	r3, #0
   11d0c:	moveq	r4, #1
   11d10:	movne	r2, r3
   11d14:	str	r2, [sp, #20]
   11d18:	b	11c98 <__assert_fail@plt+0x94>
   11d1c:	cmn	r0, #3
   11d20:	bne	11d88 <__assert_fail@plt+0x184>
   11d24:	ldr	r1, [pc, #784]	; 1203c <__assert_fail@plt+0x438>
   11d28:	ldr	r3, [pc, #784]	; 12040 <__assert_fail@plt+0x43c>
   11d2c:	ldr	r2, [pc, #784]	; 12044 <__assert_fail@plt+0x440>
   11d30:	ldr	r0, [r6, r1]
   11d34:	ldr	r3, [r6, r3]
   11d38:	add	r2, pc, r2
   11d3c:	ldr	r1, [pc, #772]	; 12048 <__assert_fail@plt+0x444>
   11d40:	ldr	r0, [r0]
   11d44:	ldr	r3, [r3]
   11d48:	add	r1, pc, r1
   11d4c:	stm	sp, {r2, r8}
   11d50:	ldr	r2, [pc, #756]	; 1204c <__assert_fail@plt+0x448>
   11d54:	add	r2, pc, r2
   11d58:	bl	16994 <triple_free@@Base+0x23c8>
   11d5c:	mov	r0, r8
   11d60:	bl	11a18 <exit@plt>
   11d64:	ldr	r1, [pc, #740]	; 12050 <__assert_fail@plt+0x44c>
   11d68:	mov	r2, #5
   11d6c:	mov	r0, r8
   11d70:	add	r1, pc, r1
   11d74:	bl	118a4 <dcgettext@plt>
   11d78:	mov	r1, r8
   11d7c:	mov	r2, r0
   11d80:	mov	r0, r8
   11d84:	bl	11988 <error@plt>
   11d88:	mov	r0, #1
   11d8c:	bl	121a0 <__assert_fail@plt+0x59c>
   11d90:	mov	r0, r8
   11d94:	bl	121a0 <__assert_fail@plt+0x59c>
   11d98:	cmp	r3, #0
   11d9c:	beq	11c98 <__assert_fail@plt+0x94>
   11da0:	ldr	r1, [sp, #28]
   11da4:	mov	r0, r8
   11da8:	mov	r2, #5
   11dac:	bl	118a4 <dcgettext@plt>
   11db0:	mov	r1, r8
   11db4:	mov	r2, r0
   11db8:	mov	r0, r8
   11dbc:	bl	11988 <error@plt>
   11dc0:	b	11c98 <__assert_fail@plt+0x94>
   11dc4:	ldr	r3, [pc, #648]	; 12054 <__assert_fail@plt+0x450>
   11dc8:	ldr	fp, [r6, r3]
   11dcc:	ldr	r3, [fp]
   11dd0:	cmp	r3, r7
   11dd4:	beq	11d64 <__assert_fail@plt+0x160>
   11dd8:	ldr	r3, [sp, #20]
   11ddc:	cmp	r3, #0
   11de0:	beq	11df4 <__assert_fail@plt+0x1f0>
   11de4:	mov	r0, r3
   11de8:	bl	11a48 <setfscreatecon@plt>
   11dec:	cmp	r0, #0
   11df0:	blt	11fb4 <__assert_fail@plt+0x3b0>
   11df4:	ldr	r2, [sp, #24]
   11df8:	cmp	r2, #0
   11dfc:	beq	11f84 <__assert_fail@plt+0x380>
   11e00:	mov	r0, r2
   11e04:	bl	145e8 <triple_free@@Base+0x1c>
   11e08:	subs	r9, r0, #0
   11e0c:	beq	11ff4 <__assert_fail@plt+0x3f0>
   11e10:	mov	r0, #0
   11e14:	mov	r8, r0
   11e18:	bl	11b80 <umask@plt>
   11e1c:	mov	r6, r0
   11e20:	bl	11b80 <umask@plt>
   11e24:	mov	r2, r6
   11e28:	mov	r3, r9
   11e2c:	mov	r1, r8
   11e30:	str	r8, [sp]
   11e34:	movw	r0, #438	; 0x1b6
   11e38:	bl	14a08 <triple_free@@Base+0x43c>
   11e3c:	mov	r6, r0
   11e40:	mov	r0, r9
   11e44:	bl	1185c <free@plt>
   11e48:	bic	r3, r6, #508	; 0x1fc
   11e4c:	bic	r3, r3, #3
   11e50:	cmp	r3, r8
   11e54:	bne	11f8c <__assert_fail@plt+0x388>
   11e58:	ldr	r3, [pc, #504]	; 12058 <__assert_fail@plt+0x454>
   11e5c:	mov	r9, #0
   11e60:	ldr	r2, [pc, #500]	; 1205c <__assert_fail@plt+0x458>
   11e64:	add	r3, pc, r3
   11e68:	ldr	sl, [sp, #24]
   11e6c:	add	r2, pc, r2
   11e70:	str	r3, [sp, #28]
   11e74:	str	r2, [sp, #20]
   11e78:	b	11ec0 <__assert_fail@plt+0x2bc>
   11e7c:	ldr	r3, [fp]
   11e80:	mov	r1, r6
   11e84:	ldr	r0, [r5, r3, lsl #2]
   11e88:	bl	11be0 <mkfifo@plt>
   11e8c:	subs	r8, r0, #0
   11e90:	bne	11ee4 <__assert_fail@plt+0x2e0>
   11e94:	cmp	sl, #0
   11e98:	beq	11eb4 <__assert_fail@plt+0x2b0>
   11e9c:	ldr	r3, [fp]
   11ea0:	mov	r1, r6
   11ea4:	ldr	r0, [r5, r3, lsl #2]
   11ea8:	bl	11b98 <chmod@plt>
   11eac:	cmp	r0, #0
   11eb0:	bne	11f2c <__assert_fail@plt+0x328>
   11eb4:	ldr	r3, [fp]
   11eb8:	add	r3, r3, #1
   11ebc:	str	r3, [fp]
   11ec0:	ldr	r3, [fp]
   11ec4:	cmp	r7, r3
   11ec8:	ble	11f7c <__assert_fail@plt+0x378>
   11ecc:	cmp	r4, #0
   11ed0:	beq	11e7c <__assert_fail@plt+0x278>
   11ed4:	ldr	r0, [r5, r3, lsl #2]
   11ed8:	mov	r1, #4096	; 0x1000
   11edc:	bl	12644 <__assert_fail@plt+0xa40>
   11ee0:	b	11e7c <__assert_fail@plt+0x278>
   11ee4:	bl	11a6c <__errno_location@plt>
   11ee8:	ldr	r1, [sp, #20]
   11eec:	mov	r2, #5
   11ef0:	mov	r9, #1
   11ef4:	ldr	r8, [r0]
   11ef8:	mov	r0, #0
   11efc:	bl	118a4 <dcgettext@plt>
   11f00:	ldr	r3, [fp]
   11f04:	mov	r2, r0
   11f08:	ldr	r0, [r5, r3, lsl #2]
   11f0c:	str	r2, [sp, #12]
   11f10:	bl	16388 <triple_free@@Base+0x1dbc>
   11f14:	mov	r1, r8
   11f18:	ldr	r2, [sp, #12]
   11f1c:	mov	r3, r0
   11f20:	mov	r0, #0
   11f24:	bl	11988 <error@plt>
   11f28:	b	11eb4 <__assert_fail@plt+0x2b0>
   11f2c:	bl	11a6c <__errno_location@plt>
   11f30:	ldr	r1, [sp, #28]
   11f34:	mov	r2, #5
   11f38:	mov	r9, #1
   11f3c:	ldr	ip, [r0]
   11f40:	mov	r0, r8
   11f44:	str	ip, [sp, #16]
   11f48:	bl	118a4 <dcgettext@plt>
   11f4c:	ldr	r3, [fp]
   11f50:	mov	r2, r0
   11f54:	ldr	r0, [r5, r3, lsl #2]
   11f58:	str	r2, [sp, #12]
   11f5c:	bl	16388 <triple_free@@Base+0x1dbc>
   11f60:	ldr	ip, [sp, #16]
   11f64:	ldr	r2, [sp, #12]
   11f68:	mov	r1, ip
   11f6c:	mov	r3, r0
   11f70:	mov	r0, r8
   11f74:	bl	11988 <error@plt>
   11f78:	b	11eb4 <__assert_fail@plt+0x2b0>
   11f7c:	mov	r0, r9
   11f80:	bl	11a18 <exit@plt>
   11f84:	movw	r6, #438	; 0x1b6
   11f88:	b	11e58 <__assert_fail@plt+0x254>
   11f8c:	ldr	r1, [pc, #204]	; 12060 <__assert_fail@plt+0x45c>
   11f90:	mov	r0, r8
   11f94:	mov	r2, #5
   11f98:	add	r1, pc, r1
   11f9c:	bl	118a4 <dcgettext@plt>
   11fa0:	mov	r1, r8
   11fa4:	mov	r2, r0
   11fa8:	mov	r0, #1
   11fac:	bl	11988 <error@plt>
   11fb0:	b	11e58 <__assert_fail@plt+0x254>
   11fb4:	bl	11a6c <__errno_location@plt>
   11fb8:	ldr	r1, [pc, #164]	; 12064 <__assert_fail@plt+0x460>
   11fbc:	mov	r2, #5
   11fc0:	add	r1, pc, r1
   11fc4:	ldr	r6, [r0]
   11fc8:	mov	r0, r8
   11fcc:	bl	118a4 <dcgettext@plt>
   11fd0:	mov	r8, r0
   11fd4:	ldr	r0, [sp, #20]
   11fd8:	bl	16388 <triple_free@@Base+0x1dbc>
   11fdc:	mov	r1, r6
   11fe0:	mov	r2, r8
   11fe4:	mov	r3, r0
   11fe8:	mov	r0, #1
   11fec:	bl	11988 <error@plt>
   11ff0:	b	11df4 <__assert_fail@plt+0x1f0>
   11ff4:	ldr	r1, [pc, #108]	; 12068 <__assert_fail@plt+0x464>
   11ff8:	mov	r2, #5
   11ffc:	add	r1, pc, r1
   12000:	bl	118a4 <dcgettext@plt>
   12004:	mov	r1, r9
   12008:	mov	r2, r0
   1200c:	mov	r0, #1
   12010:	bl	11988 <error@plt>
   12014:	b	11e10 <__assert_fail@plt+0x20c>
   12018:	andeq	r8, r0, ip, asr #31
   1201c:	andeq	r8, r0, r0, lsl #30
   12020:	andeq	r9, r0, ip
   12024:			; <UNDEFINED> instruction: 0x00008fb0
   12028:	andeq	sl, r1, r0, lsl #4
   1202c:	andeq	sl, r1, r0, lsl #7
   12030:	muleq	r0, r0, r1
   12034:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   12038:			; <UNDEFINED> instruction: 0x000001bc
   1203c:	andeq	r0, r0, r4, lsr #3
   12040:	andeq	r0, r0, r8, lsl #3
   12044:	andeq	r8, r0, r8, lsr pc
   12048:	andeq	r8, r0, r0, lsr #30
   1204c:	andeq	r8, r0, ip, ror #27
   12050:	andeq	r8, r0, r4, lsl pc
   12054:	andeq	r0, r0, r4, lsl #3
   12058:			; <UNDEFINED> instruction: 0x00008eb8
   1205c:	muleq	r0, r8, lr
   12060:	andeq	r8, r0, r0, asr #26
   12064:	ldrdeq	r8, [r0], -r4
   12068:	andeq	r8, r0, ip, asr #25
   1206c:	mov	fp, #0
   12070:	mov	lr, #0
   12074:	pop	{r1}		; (ldr r1, [sp], #4)
   12078:	mov	r2, sp
   1207c:	push	{r2}		; (str r2, [sp, #-4]!)
   12080:	push	{r0}		; (str r0, [sp, #-4]!)
   12084:	ldr	ip, [pc, #16]	; 1209c <__assert_fail@plt+0x498>
   12088:	push	{ip}		; (str ip, [sp, #-4]!)
   1208c:	ldr	r0, [pc, #12]	; 120a0 <__assert_fail@plt+0x49c>
   12090:	ldr	r3, [pc, #12]	; 120a4 <__assert_fail@plt+0x4a0>
   12094:	bl	119c4 <__libc_start_main@plt>
   12098:	bl	11bbc <abort@plt>
   1209c:	andeq	sl, r1, r4, lsr #17
   120a0:	andeq	r1, r1, r0, lsl ip
   120a4:	andeq	sl, r1, r0, asr #16
   120a8:	ldr	r3, [pc, #20]	; 120c4 <__assert_fail@plt+0x4c0>
   120ac:	ldr	r2, [pc, #20]	; 120c8 <__assert_fail@plt+0x4c4>
   120b0:	add	r3, pc, r3
   120b4:	ldr	r2, [r3, r2]
   120b8:	cmp	r2, #0
   120bc:	bxeq	lr
   120c0:	b	119dc <__gmon_start__@plt>
   120c4:	andeq	r9, r1, r8, asr #30
   120c8:	muleq	r0, r8, r1
   120cc:	push	{r3, lr}
   120d0:	movw	r0, #49676	; 0xc20c
   120d4:	ldr	r3, [pc, #36]	; 12100 <__assert_fail@plt+0x4fc>
   120d8:	movt	r0, #2
   120dc:	rsb	r3, r0, r3
   120e0:	cmp	r3, #6
   120e4:	popls	{r3, pc}
   120e8:	movw	r3, #0
   120ec:	movt	r3, #0
   120f0:	cmp	r3, #0
   120f4:	popeq	{r3, pc}
   120f8:	blx	r3
   120fc:	pop	{r3, pc}
   12100:	andeq	ip, r2, pc, lsl #4
   12104:	push	{r3, lr}
   12108:	movw	r0, #49676	; 0xc20c
   1210c:	movw	r3, #49676	; 0xc20c
   12110:	movt	r0, #2
   12114:	movt	r3, #2
   12118:	rsb	r3, r0, r3
   1211c:	asr	r3, r3, #2
   12120:	add	r3, r3, r3, lsr #31
   12124:	asrs	r1, r3, #1
   12128:	popeq	{r3, pc}
   1212c:	movw	r2, #0
   12130:	movt	r2, #0
   12134:	cmp	r2, #0
   12138:	popeq	{r3, pc}
   1213c:	blx	r2
   12140:	pop	{r3, pc}
   12144:	push	{r4, lr}
   12148:	movw	r4, #49676	; 0xc20c
   1214c:	movt	r4, #2
   12150:	ldrb	r3, [r4]
   12154:	cmp	r3, #0
   12158:	popne	{r4, pc}
   1215c:	bl	120cc <__assert_fail@plt+0x4c8>
   12160:	mov	r3, #1
   12164:	strb	r3, [r4]
   12168:	pop	{r4, pc}
   1216c:	movw	r0, #48776	; 0xbe88
   12170:	movt	r0, #2
   12174:	push	{r3, lr}
   12178:	ldr	r3, [r0]
   1217c:	cmp	r3, #0
   12180:	beq	12198 <__assert_fail@plt+0x594>
   12184:	movw	r3, #0
   12188:	movt	r3, #0
   1218c:	cmp	r3, #0
   12190:	beq	12198 <__assert_fail@plt+0x594>
   12194:	blx	r3
   12198:	pop	{r3, lr}
   1219c:	b	12104 <__assert_fail@plt+0x500>
   121a0:	push	{r4, r5, r6, lr}
   121a4:	subs	r4, r0, #0
   121a8:	ldr	r5, [pc, #484]	; 12394 <__assert_fail@plt+0x790>
   121ac:	add	r5, pc, r5
   121b0:	beq	121f8 <__assert_fail@plt+0x5f4>
   121b4:	ldr	r3, [pc, #476]	; 12398 <__assert_fail@plt+0x794>
   121b8:	mov	r2, #5
   121bc:	ldr	r1, [pc, #472]	; 1239c <__assert_fail@plt+0x798>
   121c0:	mov	r0, #0
   121c4:	ldr	r3, [r5, r3]
   121c8:	add	r1, pc, r1
   121cc:	ldr	r6, [r3]
   121d0:	bl	118a4 <dcgettext@plt>
   121d4:	ldr	r3, [pc, #452]	; 123a0 <__assert_fail@plt+0x79c>
   121d8:	mov	r1, #1
   121dc:	ldr	r3, [r5, r3]
   121e0:	ldr	r3, [r3]
   121e4:	mov	r2, r0
   121e8:	mov	r0, r6
   121ec:	bl	11ab4 <__fprintf_chk@plt>
   121f0:	mov	r0, r4
   121f4:	bl	11a18 <exit@plt>
   121f8:	ldr	r1, [pc, #420]	; 123a4 <__assert_fail@plt+0x7a0>
   121fc:	mov	r2, #5
   12200:	add	r1, pc, r1
   12204:	bl	118a4 <dcgettext@plt>
   12208:	ldr	r3, [pc, #400]	; 123a0 <__assert_fail@plt+0x79c>
   1220c:	ldr	r6, [r5, r3]
   12210:	ldr	r2, [r6]
   12214:	mov	r1, r0
   12218:	mov	r0, #1
   1221c:	bl	11a9c <__printf_chk@plt>
   12220:	ldr	r1, [pc, #384]	; 123a8 <__assert_fail@plt+0x7a4>
   12224:	mov	r2, #5
   12228:	mov	r0, r4
   1222c:	add	r1, pc, r1
   12230:	bl	118a4 <dcgettext@plt>
   12234:	ldr	r3, [pc, #368]	; 123ac <__assert_fail@plt+0x7a8>
   12238:	ldr	r5, [r5, r3]
   1223c:	ldr	r1, [r5]
   12240:	bl	117fc <fputs_unlocked@plt>
   12244:	ldr	r1, [pc, #356]	; 123b0 <__assert_fail@plt+0x7ac>
   12248:	mov	r2, #5
   1224c:	mov	r0, r4
   12250:	add	r1, pc, r1
   12254:	bl	118a4 <dcgettext@plt>
   12258:	ldr	r1, [r5]
   1225c:	bl	117fc <fputs_unlocked@plt>
   12260:	ldr	r1, [pc, #332]	; 123b4 <__assert_fail@plt+0x7b0>
   12264:	mov	r2, #5
   12268:	mov	r0, r4
   1226c:	add	r1, pc, r1
   12270:	bl	118a4 <dcgettext@plt>
   12274:	ldr	r1, [r5]
   12278:	bl	117fc <fputs_unlocked@plt>
   1227c:	ldr	r1, [pc, #308]	; 123b8 <__assert_fail@plt+0x7b4>
   12280:	mov	r2, #5
   12284:	mov	r0, r4
   12288:	add	r1, pc, r1
   1228c:	bl	118a4 <dcgettext@plt>
   12290:	ldr	r1, [r5]
   12294:	bl	117fc <fputs_unlocked@plt>
   12298:	ldr	r1, [pc, #284]	; 123bc <__assert_fail@plt+0x7b8>
   1229c:	mov	r2, #5
   122a0:	mov	r0, r4
   122a4:	add	r1, pc, r1
   122a8:	bl	118a4 <dcgettext@plt>
   122ac:	ldr	r1, [r5]
   122b0:	bl	117fc <fputs_unlocked@plt>
   122b4:	ldr	r1, [pc, #260]	; 123c0 <__assert_fail@plt+0x7bc>
   122b8:	mov	r2, #5
   122bc:	mov	r0, r4
   122c0:	add	r1, pc, r1
   122c4:	bl	118a4 <dcgettext@plt>
   122c8:	ldr	r1, [r5]
   122cc:	bl	117fc <fputs_unlocked@plt>
   122d0:	ldr	r1, [pc, #236]	; 123c4 <__assert_fail@plt+0x7c0>
   122d4:	mov	r2, #5
   122d8:	mov	r0, r4
   122dc:	add	r1, pc, r1
   122e0:	bl	118a4 <dcgettext@plt>
   122e4:	ldr	r2, [pc, #220]	; 123c8 <__assert_fail@plt+0x7c4>
   122e8:	ldr	r3, [pc, #220]	; 123cc <__assert_fail@plt+0x7c8>
   122ec:	add	r2, pc, r2
   122f0:	add	r3, pc, r3
   122f4:	mov	r1, r0
   122f8:	mov	r0, #1
   122fc:	bl	11a9c <__printf_chk@plt>
   12300:	mov	r0, #5
   12304:	mov	r1, r4
   12308:	bl	11ae4 <setlocale@plt>
   1230c:	cmp	r0, #0
   12310:	beq	1232c <__assert_fail@plt+0x728>
   12314:	ldr	r1, [pc, #180]	; 123d0 <__assert_fail@plt+0x7cc>
   12318:	mov	r2, #3
   1231c:	add	r1, pc, r1
   12320:	bl	11bb0 <strncmp@plt>
   12324:	cmp	r0, #0
   12328:	bne	12360 <__assert_fail@plt+0x75c>
   1232c:	ldr	r1, [pc, #160]	; 123d4 <__assert_fail@plt+0x7d0>
   12330:	mov	r2, #5
   12334:	mov	r0, #0
   12338:	add	r1, pc, r1
   1233c:	bl	118a4 <dcgettext@plt>
   12340:	mov	r5, r0
   12344:	ldr	r0, [r6]
   12348:	bl	13288 <close_stdout@@Base+0x1e8>
   1234c:	mov	r1, r5
   12350:	mov	r2, r0
   12354:	mov	r0, #1
   12358:	bl	11a9c <__printf_chk@plt>
   1235c:	b	121f0 <__assert_fail@plt+0x5ec>
   12360:	ldr	r1, [pc, #112]	; 123d8 <__assert_fail@plt+0x7d4>
   12364:	mov	r2, #5
   12368:	mov	r0, r4
   1236c:	add	r1, pc, r1
   12370:	bl	118a4 <dcgettext@plt>
   12374:	mov	r5, r0
   12378:	ldr	r0, [r6]
   1237c:	bl	13288 <close_stdout@@Base+0x1e8>
   12380:	mov	r1, r5
   12384:	mov	r2, r0
   12388:	mov	r0, #1
   1238c:	bl	11a9c <__printf_chk@plt>
   12390:	b	1232c <__assert_fail@plt+0x728>
   12394:	andeq	r9, r1, ip, asr #28
   12398:	andeq	r0, r0, ip, lsl #3
   1239c:	andeq	r8, r0, r4, lsl r7
   123a0:			; <UNDEFINED> instruction: 0x000001b0
   123a4:	andeq	r8, r0, r4, lsl #14
   123a8:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   123ac:	andeq	r0, r0, r4, lsr #3
   123b0:	andeq	r8, r0, r8, lsl #14
   123b4:	andeq	r8, r0, r8, lsr r7
   123b8:	andeq	r8, r0, r8, ror #14
   123bc:	andeq	r8, r0, ip, lsl r8
   123c0:	andeq	r8, r0, r0, lsr r8
   123c4:	andeq	r8, r0, ip, asr #16
   123c8:	andeq	r8, r0, r4, asr r8
   123cc:	andeq	r8, r0, r0, ror #16
   123d0:	andeq	r8, r0, ip, asr r8
   123d4:	andeq	r8, r0, ip, lsl #17
   123d8:	andeq	r8, r0, r0, lsl r8
   123dc:	ldr	r2, [pc, #600]	; 1263c <__assert_fail@plt+0xa38>
   123e0:	mov	r3, #0
   123e4:	ldr	ip, [pc, #596]	; 12640 <__assert_fail@plt+0xa3c>
   123e8:	add	r2, pc, r2
   123ec:	push	{r4, r5, r6, r7, r8, lr}
   123f0:	sub	sp, sp, #120	; 0x78
   123f4:	ldr	r4, [r2, ip]
   123f8:	subs	r6, r1, #0
   123fc:	str	r3, [sp]
   12400:	mov	r7, r0
   12404:	str	r3, [sp, #4]
   12408:	ldr	r3, [r4]
   1240c:	str	r3, [sp, #116]	; 0x74
   12410:	beq	12464 <__assert_fail@plt+0x860>
   12414:	add	r0, sp, #4
   12418:	bl	11b74 <getfscreatecon@plt>
   1241c:	cmp	r0, #0
   12420:	blt	125cc <__assert_fail@plt+0x9c8>
   12424:	ldr	r1, [sp, #4]
   12428:	cmp	r1, #0
   1242c:	beq	12614 <__assert_fail@plt+0xa10>
   12430:	mov	r0, r7
   12434:	bl	11844 <lsetfilecon@plt>
   12438:	mov	r5, r0
   1243c:	ldr	r0, [sp, #4]
   12440:	bl	11b5c <freecon@plt>
   12444:	mov	r3, r5
   12448:	ldr	r2, [sp, #116]	; 0x74
   1244c:	mov	r0, r3
   12450:	ldr	r3, [r4]
   12454:	cmp	r2, r3
   12458:	bne	12638 <__assert_fail@plt+0xa34>
   1245c:	add	sp, sp, #120	; 0x78
   12460:	pop	{r4, r5, r6, r7, r8, pc}
   12464:	mov	r1, #32768	; 0x8000
   12468:	bl	11994 <open64@plt>
   1246c:	cmn	r0, #1
   12470:	mov	r5, r0
   12474:	beq	1252c <__assert_fail@plt+0x928>
   12478:	mov	r0, #3
   1247c:	mov	r1, r5
   12480:	add	r2, sp, #8
   12484:	bl	11910 <__fxstat64@plt>
   12488:	cmp	r0, #0
   1248c:	blt	125c0 <__assert_fail@plt+0x9bc>
   12490:	mov	r0, r7
   12494:	ldr	r1, [sp, #24]
   12498:	mov	r2, sp
   1249c:	bl	11958 <matchpathcon@plt>
   124a0:	cmp	r0, #0
   124a4:	blt	12570 <__assert_fail@plt+0x96c>
   124a8:	ldr	r0, [sp]
   124ac:	bl	1188c <context_new@plt>
   124b0:	subs	r8, r0, #0
   124b4:	beq	12580 <__assert_fail@plt+0x97c>
   124b8:	cmn	r5, #1
   124bc:	beq	125e8 <__assert_fail@plt+0x9e4>
   124c0:	mov	r0, r5
   124c4:	add	r1, sp, #4
   124c8:	bl	1909c <fts_children@@Base+0x200>
   124cc:	cmp	r0, #0
   124d0:	blt	12608 <__assert_fail@plt+0xa04>
   124d4:	ldr	r0, [sp, #4]
   124d8:	bl	1188c <context_new@plt>
   124dc:	subs	r6, r0, #0
   124e0:	beq	12588 <__assert_fail@plt+0x984>
   124e4:	mov	r0, r8
   124e8:	bl	1182c <context_type_get@plt>
   124ec:	subs	r1, r0, #0
   124f0:	beq	12588 <__assert_fail@plt+0x984>
   124f4:	mov	r0, r6
   124f8:	bl	118bc <context_type_set@plt>
   124fc:	cmp	r0, #0
   12500:	bne	12588 <__assert_fail@plt+0x984>
   12504:	mov	r0, r6
   12508:	bl	11b8c <context_str@plt>
   1250c:	subs	r1, r0, #0
   12510:	beq	12588 <__assert_fail@plt+0x984>
   12514:	cmn	r5, #1
   12518:	beq	12628 <__assert_fail@plt+0xa24>
   1251c:	mov	r0, r5
   12520:	bl	11af0 <fsetfilecon@plt>
   12524:	mov	r7, r0
   12528:	b	12598 <__assert_fail@plt+0x994>
   1252c:	bl	11a6c <__errno_location@plt>
   12530:	ldr	r3, [r0]
   12534:	cmp	r3, #40	; 0x28
   12538:	beq	125a4 <__assert_fail@plt+0x9a0>
   1253c:	mov	r6, #0
   12540:	mvn	r7, #0
   12544:	mov	r8, r6
   12548:	mov	r0, r8
   1254c:	bl	119e8 <context_free@plt>
   12550:	mov	r0, r6
   12554:	bl	119e8 <context_free@plt>
   12558:	ldr	r0, [sp]
   1255c:	bl	11b5c <freecon@plt>
   12560:	ldr	r0, [sp, #4]
   12564:	bl	11b5c <freecon@plt>
   12568:	mov	r3, r7
   1256c:	b	12448 <__assert_fail@plt+0x844>
   12570:	bl	11a6c <__errno_location@plt>
   12574:	ldr	r3, [r0]
   12578:	cmp	r3, #2
   1257c:	beq	125d4 <__assert_fail@plt+0x9d0>
   12580:	mov	r6, #0
   12584:	mov	r8, r6
   12588:	cmn	r5, #1
   1258c:	moveq	r7, r5
   12590:	beq	12548 <__assert_fail@plt+0x944>
   12594:	mvn	r7, #0
   12598:	mov	r0, r5
   1259c:	bl	11bc8 <close@plt>
   125a0:	b	12548 <__assert_fail@plt+0x944>
   125a4:	mov	r0, #3
   125a8:	mov	r1, r7
   125ac:	add	r2, sp, #8
   125b0:	bl	11bd4 <__lxstat64@plt>
   125b4:	cmp	r0, #0
   125b8:	bge	12490 <__assert_fail@plt+0x88c>
   125bc:	b	1253c <__assert_fail@plt+0x938>
   125c0:	mvn	r7, #0
   125c4:	mov	r8, r6
   125c8:	b	12598 <__assert_fail@plt+0x994>
   125cc:	mvn	r3, #0
   125d0:	b	12448 <__assert_fail@plt+0x844>
   125d4:	mov	r6, #0
   125d8:	mov	r3, #61	; 0x3d
   125dc:	mov	r8, r6
   125e0:	str	r3, [r0]
   125e4:	b	12588 <__assert_fail@plt+0x984>
   125e8:	mov	r0, r7
   125ec:	add	r1, sp, #4
   125f0:	bl	19084 <fts_children@@Base+0x1e8>
   125f4:	cmp	r0, #0
   125f8:	bge	124d4 <__assert_fail@plt+0x8d0>
   125fc:	mov	r7, r5
   12600:	mov	r6, #0
   12604:	b	12548 <__assert_fail@plt+0x944>
   12608:	mov	r6, #0
   1260c:	mvn	r7, #0
   12610:	b	12598 <__assert_fail@plt+0x994>
   12614:	bl	11a6c <__errno_location@plt>
   12618:	mov	r2, #61	; 0x3d
   1261c:	mvn	r3, #0
   12620:	str	r2, [r0]
   12624:	b	12448 <__assert_fail@plt+0x844>
   12628:	mov	r0, r7
   1262c:	bl	11844 <lsetfilecon@plt>
   12630:	mov	r7, r0
   12634:	b	12548 <__assert_fail@plt+0x944>
   12638:	bl	118b0 <__stack_chk_fail@plt>
   1263c:	andeq	r9, r1, r0, lsl ip
   12640:	andeq	r0, r0, ip, ror r1
   12644:	ldr	r2, [pc, #572]	; 12888 <__assert_fail@plt+0xc84>
   12648:	mov	r3, #0
   1264c:	ldr	ip, [pc, #568]	; 1288c <__assert_fail@plt+0xc88>
   12650:	add	r2, pc, r2
   12654:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12658:	mov	r7, r1
   1265c:	ldr	r5, [r2, ip]
   12660:	sub	sp, sp, #24
   12664:	ldrb	r1, [r0]
   12668:	mov	r6, r0
   1266c:	str	r3, [sp, #4]
   12670:	ldr	r2, [r5]
   12674:	cmp	r1, #47	; 0x2f
   12678:	str	r3, [sp, #8]
   1267c:	moveq	r4, r0
   12680:	moveq	r8, r3
   12684:	str	r2, [sp, #20]
   12688:	beq	126a0 <__assert_fail@plt+0xa9c>
   1268c:	mov	r1, #2
   12690:	bl	12a70 <__assert_fail@plt+0xe6c>
   12694:	subs	r4, r0, #0
   12698:	movne	r8, r4
   1269c:	beq	12840 <__assert_fail@plt+0xc3c>
   126a0:	mov	r0, r4
   126a4:	mov	r1, r7
   126a8:	add	r2, sp, #4
   126ac:	bl	11958 <matchpathcon@plt>
   126b0:	cmp	r0, #0
   126b4:	blt	127d8 <__assert_fail@plt+0xbd4>
   126b8:	mov	r0, r4
   126bc:	mov	r3, #0
   126c0:	str	r3, [sp, #12]
   126c4:	str	r3, [sp, #16]
   126c8:	bl	131b8 <close_stdout@@Base+0x118>
   126cc:	subs	r4, r0, #0
   126d0:	beq	127f8 <__assert_fail@plt+0xbf4>
   126d4:	add	r0, sp, #12
   126d8:	bl	11964 <getcon@plt>
   126dc:	cmp	r0, #0
   126e0:	blt	127f8 <__assert_fail@plt+0xbf4>
   126e4:	mov	r0, r4
   126e8:	add	r1, sp, #16
   126ec:	bl	1906c <fts_children@@Base+0x1d0>
   126f0:	cmp	r0, #0
   126f4:	blt	127f8 <__assert_fail@plt+0xbf4>
   126f8:	mov	r0, r7
   126fc:	bl	11bec <mode_to_security_class@plt>
   12700:	subs	r2, r0, #0
   12704:	beq	127f8 <__assert_fail@plt+0xbf4>
   12708:	ldr	r1, [sp, #16]
   1270c:	add	r3, sp, #8
   12710:	ldr	r0, [sp, #12]
   12714:	bl	11b2c <security_compute_create@plt>
   12718:	mov	r6, r0
   1271c:	mov	r0, r4
   12720:	bl	1185c <free@plt>
   12724:	ldr	r0, [sp, #12]
   12728:	bl	11b5c <freecon@plt>
   1272c:	ldr	r0, [sp, #16]
   12730:	bl	11b5c <freecon@plt>
   12734:	cmp	r6, #0
   12738:	blt	127e8 <__assert_fail@plt+0xbe4>
   1273c:	ldr	r0, [sp, #4]
   12740:	bl	1188c <context_new@plt>
   12744:	subs	r6, r0, #0
   12748:	beq	127e8 <__assert_fail@plt+0xbe4>
   1274c:	ldr	r0, [sp, #8]
   12750:	bl	1188c <context_new@plt>
   12754:	subs	r4, r0, #0
   12758:	beq	12838 <__assert_fail@plt+0xc34>
   1275c:	mov	r0, r6
   12760:	bl	1182c <context_type_get@plt>
   12764:	subs	r1, r0, #0
   12768:	beq	12838 <__assert_fail@plt+0xc34>
   1276c:	mov	r0, r4
   12770:	bl	118bc <context_type_set@plt>
   12774:	cmp	r0, #0
   12778:	bne	12838 <__assert_fail@plt+0xc34>
   1277c:	mov	r0, r4
   12780:	bl	11b8c <context_str@plt>
   12784:	cmp	r0, #0
   12788:	beq	12838 <__assert_fail@plt+0xc34>
   1278c:	bl	11a48 <setfscreatecon@plt>
   12790:	mov	r7, r0
   12794:	mov	r0, r6
   12798:	bl	119e8 <context_free@plt>
   1279c:	mov	r0, r4
   127a0:	bl	119e8 <context_free@plt>
   127a4:	ldr	r0, [sp, #4]
   127a8:	bl	11b5c <freecon@plt>
   127ac:	ldr	r0, [sp, #8]
   127b0:	bl	11b5c <freecon@plt>
   127b4:	mov	r0, r8
   127b8:	bl	1185c <free@plt>
   127bc:	ldr	r2, [sp, #20]
   127c0:	ldr	r3, [r5]
   127c4:	mov	r0, r7
   127c8:	cmp	r2, r3
   127cc:	bne	12884 <__assert_fail@plt+0xc80>
   127d0:	add	sp, sp, #24
   127d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127d8:	bl	11a6c <__errno_location@plt>
   127dc:	ldr	r3, [r0]
   127e0:	cmp	r3, #2
   127e4:	beq	12820 <__assert_fail@plt+0xc1c>
   127e8:	mov	r4, #0
   127ec:	mvn	r7, #0
   127f0:	mov	r6, r4
   127f4:	b	12794 <__assert_fail@plt+0xb90>
   127f8:	mov	r0, r4
   127fc:	mov	r4, #0
   12800:	bl	1185c <free@plt>
   12804:	ldr	r0, [sp, #12]
   12808:	bl	11b5c <freecon@plt>
   1280c:	ldr	r0, [sp, #16]
   12810:	bl	11b5c <freecon@plt>
   12814:	mov	r6, r4
   12818:	mvn	r7, #0
   1281c:	b	12794 <__assert_fail@plt+0xb90>
   12820:	mov	r4, #0
   12824:	mov	r3, #61	; 0x3d
   12828:	mov	r6, r4
   1282c:	str	r3, [r0]
   12830:	mvn	r7, #0
   12834:	b	12794 <__assert_fail@plt+0xb90>
   12838:	mvn	r7, #0
   1283c:	b	12794 <__assert_fail@plt+0xb90>
   12840:	bl	11a6c <__errno_location@plt>
   12844:	ldr	r1, [pc, #68]	; 12890 <__assert_fail@plt+0xc8c>
   12848:	mov	r2, #5
   1284c:	mov	r8, r4
   12850:	add	r1, pc, r1
   12854:	ldr	r9, [r0]
   12858:	mov	r0, r4
   1285c:	bl	118a4 <dcgettext@plt>
   12860:	mov	sl, r0
   12864:	mov	r0, r6
   12868:	bl	16388 <triple_free@@Base+0x1dbc>
   1286c:	mov	r1, r9
   12870:	mov	r2, sl
   12874:	mov	r3, r0
   12878:	mov	r0, #1
   1287c:	bl	11988 <error@plt>
   12880:	b	126a0 <__assert_fail@plt+0xa9c>
   12884:	bl	118b0 <__stack_chk_fail@plt>
   12888:	andeq	r9, r1, r8, lsr #19
   1288c:	andeq	r0, r0, ip, ror r1
   12890:	andeq	r8, r0, r4, lsl #10
   12894:	ldr	r3, [pc, #448]	; 12a5c <__assert_fail@plt+0xe58>
   12898:	ldr	ip, [pc, #448]	; 12a60 <__assert_fail@plt+0xe5c>
   1289c:	add	r3, pc, r3
   128a0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128a4:	mov	r5, r1
   128a8:	ldr	r8, [r3, ip]
   128ac:	sub	sp, sp, #16
   128b0:	ldrb	r1, [r0]
   128b4:	mov	r4, r0
   128b8:	mov	r6, r2
   128bc:	ldr	r3, [r8]
   128c0:	cmp	r1, #47	; 0x2f
   128c4:	str	r3, [sp, #12]
   128c8:	beq	128d4 <__assert_fail@plt+0xcd0>
   128cc:	cmp	r2, #0
   128d0:	beq	12998 <__assert_fail@plt+0xd94>
   128d4:	mov	r0, r4
   128d8:	mov	r9, #0
   128dc:	cmp	r5, #0
   128e0:	mov	r2, #0
   128e4:	str	r0, [sp, #4]
   128e8:	str	r2, [sp, #8]
   128ec:	beq	12978 <__assert_fail@plt+0xd74>
   128f0:	add	r0, sp, #4
   128f4:	mov	r1, #16
   128f8:	bl	16d10 <triple_free@@Base+0x2744>
   128fc:	mov	r5, #1
   12900:	mov	r4, r0
   12904:	b	12920 <__assert_fail@plt+0xd1c>
   12908:	ldr	r0, [r4, #24]
   1290c:	mov	r1, r6
   12910:	bl	123dc <__assert_fail@plt+0x7d8>
   12914:	adds	r0, r0, #1
   12918:	movne	r0, #1
   1291c:	and	r5, r5, r0
   12920:	mov	r0, r4
   12924:	bl	1860c <fts_read@@Base>
   12928:	subs	r7, r0, #0
   1292c:	bne	12908 <__assert_fail@plt+0xd04>
   12930:	bl	11a6c <__errno_location@plt>
   12934:	ldr	sl, [r0]
   12938:	mov	r6, r0
   1293c:	cmp	sl, #0
   12940:	bne	12a1c <__assert_fail@plt+0xe18>
   12944:	mov	r0, r4
   12948:	bl	18494 <fts_close@@Base>
   1294c:	cmp	r0, #0
   12950:	bne	129ec <__assert_fail@plt+0xde8>
   12954:	mov	r0, r9
   12958:	bl	1185c <free@plt>
   1295c:	mov	r0, r5
   12960:	ldr	r2, [sp, #12]
   12964:	ldr	r3, [r8]
   12968:	cmp	r2, r3
   1296c:	bne	12a58 <__assert_fail@plt+0xe54>
   12970:	add	sp, sp, #16
   12974:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12978:	mov	r1, r6
   1297c:	bl	123dc <__assert_fail@plt+0x7d8>
   12980:	adds	r5, r0, #1
   12984:	mov	r0, r9
   12988:	movne	r5, #1
   1298c:	bl	1185c <free@plt>
   12990:	mov	r0, r5
   12994:	b	12960 <__assert_fail@plt+0xd5c>
   12998:	mov	r1, #2
   1299c:	bl	12a70 <__assert_fail@plt+0xe6c>
   129a0:	subs	r9, r0, #0
   129a4:	movne	r0, r9
   129a8:	bne	128dc <__assert_fail@plt+0xcd8>
   129ac:	bl	11a6c <__errno_location@plt>
   129b0:	ldr	r1, [pc, #172]	; 12a64 <__assert_fail@plt+0xe60>
   129b4:	mov	r2, #5
   129b8:	add	r1, pc, r1
   129bc:	ldr	r7, [r0]
   129c0:	mov	r0, r6
   129c4:	bl	118a4 <dcgettext@plt>
   129c8:	mov	r9, r0
   129cc:	mov	r0, r4
   129d0:	bl	16388 <triple_free@@Base+0x1dbc>
   129d4:	mov	r1, r7
   129d8:	mov	r2, r9
   129dc:	mov	r3, r0
   129e0:	mov	r0, #1
   129e4:	bl	11988 <error@plt>
   129e8:	b	128d4 <__assert_fail@plt+0xcd0>
   129ec:	ldr	r1, [pc, #116]	; 12a68 <__assert_fail@plt+0xe64>
   129f0:	mov	r2, #5
   129f4:	mov	r0, #0
   129f8:	ldr	r4, [r6]
   129fc:	add	r1, pc, r1
   12a00:	bl	118a4 <dcgettext@plt>
   12a04:	mov	r1, r4
   12a08:	mov	r2, r0
   12a0c:	mov	r0, #0
   12a10:	mov	r5, r0
   12a14:	bl	11988 <error@plt>
   12a18:	b	12954 <__assert_fail@plt+0xd50>
   12a1c:	ldr	r1, [pc, #72]	; 12a6c <__assert_fail@plt+0xe68>
   12a20:	mov	r2, #5
   12a24:	mov	r0, r7
   12a28:	mov	r5, r7
   12a2c:	add	r1, pc, r1
   12a30:	bl	118a4 <dcgettext@plt>
   12a34:	mov	r1, sl
   12a38:	mov	r2, r0
   12a3c:	mov	r0, r7
   12a40:	bl	11988 <error@plt>
   12a44:	mov	r0, r4
   12a48:	bl	18494 <fts_close@@Base>
   12a4c:	cmp	r0, #0
   12a50:	beq	12954 <__assert_fail@plt+0xd50>
   12a54:	b	129ec <__assert_fail@plt+0xde8>
   12a58:	bl	118b0 <__stack_chk_fail@plt>
   12a5c:	andeq	r9, r1, ip, asr r7
   12a60:	andeq	r0, r0, ip, ror r1
   12a64:	muleq	r0, ip, r3
   12a68:	andeq	r8, r0, r0, lsl #7
   12a6c:	andeq	r8, r0, r0, asr #6
   12a70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a74:	sub	sp, sp, #164	; 0xa4
   12a78:	ldr	r3, [pc, #1508]	; 13064 <__assert_fail@plt+0x1460>
   12a7c:	and	r8, r1, #3
   12a80:	ldr	r2, [pc, #1504]	; 13068 <__assert_fail@plt+0x1464>
   12a84:	ubfx	r1, r1, #2, #1
   12a88:	add	r3, pc, r3
   12a8c:	str	r3, [sp, #32]
   12a90:	ldr	lr, [sp, #32]
   12a94:	sub	r3, r8, #1
   12a98:	str	r0, [sp, #28]
   12a9c:	ands	r5, r3, r8
   12aa0:	str	r1, [sp, #16]
   12aa4:	ldr	r2, [lr, r2]
   12aa8:	str	r2, [sp, #36]	; 0x24
   12aac:	ldr	r2, [r2]
   12ab0:	str	r2, [sp, #156]	; 0x9c
   12ab4:	bne	12fc4 <__assert_fail@plt+0x13c0>
   12ab8:	ldr	r1, [sp, #28]
   12abc:	cmp	r1, #0
   12ac0:	beq	13030 <__assert_fail@plt+0x142c>
   12ac4:	ldr	r3, [sp, #28]
   12ac8:	ldrb	r4, [r3]
   12acc:	cmp	r4, #0
   12ad0:	beq	12fd8 <__assert_fail@plt+0x13d4>
   12ad4:	cmp	r4, #47	; 0x2f
   12ad8:	beq	12f1c <__assert_fail@plt+0x1318>
   12adc:	bl	16d9c <triple_free@@Base+0x27d0>
   12ae0:	subs	r6, r0, #0
   12ae4:	beq	12cf0 <__assert_fail@plt+0x10ec>
   12ae8:	mov	r1, r5
   12aec:	bl	118ec <__rawmemchr@plt>
   12af0:	rsb	r5, r6, r0
   12af4:	mov	r7, r0
   12af8:	cmp	r5, #4096	; 0x1000
   12afc:	movge	r5, r0
   12b00:	blt	12f48 <__assert_fail@plt+0x1344>
   12b04:	ldr	r4, [sp, #28]
   12b08:	mov	r3, #0
   12b0c:	mov	sl, r3
   12b10:	add	lr, sp, #48	; 0x30
   12b14:	str	r3, [sp, #20]
   12b18:	str	r3, [sp, #44]	; 0x2c
   12b1c:	str	r3, [sp, #40]	; 0x28
   12b20:	str	lr, [sp, #24]
   12b24:	ldrb	r1, [r4]
   12b28:	cmp	r1, #0
   12b2c:	beq	12ca0 <__assert_fail@plt+0x109c>
   12b30:	cmp	r1, #47	; 0x2f
   12b34:	addeq	r4, r4, #1
   12b38:	bne	12de0 <__assert_fail@plt+0x11dc>
   12b3c:	mov	r9, r4
   12b40:	add	r4, r4, #1
   12b44:	ldrb	r1, [r9]
   12b48:	cmp	r1, #47	; 0x2f
   12b4c:	beq	12b3c <__assert_fail@plt+0xf38>
   12b50:	cmp	r1, #0
   12b54:	moveq	r4, r9
   12b58:	beq	12b74 <__assert_fail@plt+0xf70>
   12b5c:	add	r3, r9, #1
   12b60:	mov	r4, r3
   12b64:	ldrb	r2, [r3], #1
   12b68:	cmp	r2, #47	; 0x2f
   12b6c:	cmpne	r2, #0
   12b70:	bne	12b60 <__assert_fail@plt+0xf5c>
   12b74:	cmp	r4, r9
   12b78:	beq	12ca0 <__assert_fail@plt+0x109c>
   12b7c:	rsb	fp, r9, r4
   12b80:	cmp	fp, #1
   12b84:	beq	12d10 <__assert_fail@plt+0x110c>
   12b88:	cmp	fp, #2
   12b8c:	beq	12d1c <__assert_fail@plt+0x1118>
   12b90:	ldrb	r3, [r5, #-1]
   12b94:	cmp	r3, #47	; 0x2f
   12b98:	addne	r0, r5, #1
   12b9c:	moveq	r0, r5
   12ba0:	add	r3, r0, fp
   12ba4:	movne	r1, #47	; 0x2f
   12ba8:	strbne	r1, [r5]
   12bac:	cmp	r7, r3
   12bb0:	bhi	12be4 <__assert_fail@plt+0xfe0>
   12bb4:	rsb	r7, r6, r7
   12bb8:	cmp	fp, #4096	; 0x1000
   12bbc:	addge	r7, r7, #1
   12bc0:	addlt	r7, r7, #4096	; 0x1000
   12bc4:	addge	r7, r7, fp
   12bc8:	rsb	r5, r6, r0
   12bcc:	mov	r0, r6
   12bd0:	mov	r1, r7
   12bd4:	bl	16afc <triple_free@@Base+0x2530>
   12bd8:	mov	r6, r0
   12bdc:	add	r7, r0, r7
   12be0:	add	r0, r0, r5
   12be4:	subs	r3, r8, #2
   12be8:	mov	r1, r9
   12bec:	mov	r2, fp
   12bf0:	rsbs	r9, r3, #0
   12bf4:	adcs	r9, r9, r3
   12bf8:	bl	11874 <memcpy@plt>
   12bfc:	ldr	r3, [sp, #16]
   12c00:	tst	r3, r9
   12c04:	strb	sl, [r0, fp]
   12c08:	add	r5, r0, fp
   12c0c:	bne	12c54 <__assert_fail@plt+0x1050>
   12c10:	ldr	lr, [sp, #16]
   12c14:	mov	r0, #3
   12c18:	mov	r1, r6
   12c1c:	add	r2, sp, #48	; 0x30
   12c20:	cmp	lr, #0
   12c24:	beq	12d74 <__assert_fail@plt+0x1170>
   12c28:	bl	11ba4 <__xstat64@plt>
   12c2c:	adds	r0, r0, #0
   12c30:	movne	r0, #1
   12c34:	cmp	r0, #0
   12c38:	beq	12c7c <__assert_fail@plt+0x1078>
   12c3c:	bl	11a6c <__errno_location@plt>
   12c40:	cmp	r8, #0
   12c44:	ldr	fp, [r0]
   12c48:	beq	12e14 <__assert_fail@plt+0x1210>
   12c4c:	cmp	r8, #1
   12c50:	beq	12de8 <__assert_fail@plt+0x11e4>
   12c54:	str	sl, [sp, #64]	; 0x40
   12c58:	ldrb	r3, [r4]
   12c5c:	cmp	r3, #0
   12c60:	beq	12b24 <__assert_fail@plt+0xf20>
   12c64:	cmp	r8, #2
   12c68:	beq	12b24 <__assert_fail@plt+0xf20>
   12c6c:	bl	11a6c <__errno_location@plt>
   12c70:	mov	fp, #20
   12c74:	mov	r9, r0
   12c78:	b	12e18 <__assert_fail@plt+0x1214>
   12c7c:	ldr	r3, [sp, #64]	; 0x40
   12c80:	and	r3, r3, #61440	; 0xf000
   12c84:	cmp	r3, #40960	; 0xa000
   12c88:	beq	12d84 <__assert_fail@plt+0x1180>
   12c8c:	cmp	r3, #16384	; 0x4000
   12c90:	bne	12c58 <__assert_fail@plt+0x1054>
   12c94:	ldrb	r1, [r4]
   12c98:	cmp	r1, #0
   12c9c:	bne	12b30 <__assert_fail@plt+0xf2c>
   12ca0:	add	r3, r6, #1
   12ca4:	cmp	r5, r3
   12ca8:	bhi	12f38 <__assert_fail@plt+0x1334>
   12cac:	mov	r3, r5
   12cb0:	mov	r2, #0
   12cb4:	strb	r2, [r3], #1
   12cb8:	cmp	r7, r3
   12cbc:	beq	12cd4 <__assert_fail@plt+0x10d0>
   12cc0:	rsb	r1, r6, r5
   12cc4:	mov	r0, r6
   12cc8:	add	r1, r1, #1
   12ccc:	bl	16afc <triple_free@@Base+0x2530>
   12cd0:	mov	r6, r0
   12cd4:	ldr	r0, [sp, #40]	; 0x28
   12cd8:	bl	1185c <free@plt>
   12cdc:	ldr	r3, [sp, #20]
   12ce0:	cmp	r3, #0
   12ce4:	beq	12cf0 <__assert_fail@plt+0x10ec>
   12ce8:	mov	r0, r3
   12cec:	bl	13ee8 <close_stdout@@Base+0xe48>
   12cf0:	ldr	r1, [sp, #36]	; 0x24
   12cf4:	mov	r0, r6
   12cf8:	ldr	r2, [sp, #156]	; 0x9c
   12cfc:	ldr	r3, [r1]
   12d00:	cmp	r2, r3
   12d04:	bne	13060 <__assert_fail@plt+0x145c>
   12d08:	add	sp, sp, #164	; 0xa4
   12d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d10:	cmp	r1, #46	; 0x2e
   12d14:	bne	12b90 <__assert_fail@plt+0xf8c>
   12d18:	b	12b24 <__assert_fail@plt+0xf20>
   12d1c:	cmp	r1, #46	; 0x2e
   12d20:	bne	12b90 <__assert_fail@plt+0xf8c>
   12d24:	ldrb	r3, [r9, #1]
   12d28:	cmp	r3, #46	; 0x2e
   12d2c:	bne	12b90 <__assert_fail@plt+0xf8c>
   12d30:	add	r3, r6, #1
   12d34:	cmp	r5, r3
   12d38:	bls	12b24 <__assert_fail@plt+0xf20>
   12d3c:	sub	r3, r5, #1
   12d40:	cmp	r6, r3
   12d44:	bcs	13050 <__assert_fail@plt+0x144c>
   12d48:	ldrb	r2, [r5, #-2]
   12d4c:	mov	r5, r3
   12d50:	cmp	r2, #47	; 0x2f
   12d54:	beq	12b24 <__assert_fail@plt+0xf20>
   12d58:	sub	r5, r5, #1
   12d5c:	cmp	r5, r6
   12d60:	beq	12b24 <__assert_fail@plt+0xf20>
   12d64:	ldrb	r3, [r5, #-1]
   12d68:	cmp	r3, #47	; 0x2f
   12d6c:	bne	12d58 <__assert_fail@plt+0x1154>
   12d70:	b	12b24 <__assert_fail@plt+0xf20>
   12d74:	bl	11bd4 <__lxstat64@plt>
   12d78:	adds	r0, r0, #0
   12d7c:	movne	r0, #1
   12d80:	b	12c34 <__assert_fail@plt+0x1030>
   12d84:	ldr	r3, [sp, #20]
   12d88:	cmp	r3, #0
   12d8c:	beq	12f88 <__assert_fail@plt+0x1384>
   12d90:	ldr	r0, [sp, #20]
   12d94:	add	r2, sp, #48	; 0x30
   12d98:	ldr	r1, [sp, #28]
   12d9c:	bl	13394 <close_stdout@@Base+0x2f4>
   12da0:	cmp	r0, #0
   12da4:	beq	12e38 <__assert_fail@plt+0x1234>
   12da8:	cmp	r9, #0
   12dac:	bne	12b24 <__assert_fail@plt+0xf20>
   12db0:	mov	fp, #40	; 0x28
   12db4:	ldr	r0, [sp, #40]	; 0x28
   12db8:	bl	1185c <free@plt>
   12dbc:	mov	r0, r6
   12dc0:	bl	1185c <free@plt>
   12dc4:	ldr	r0, [sp, #20]
   12dc8:	bl	13ee8 <close_stdout@@Base+0xe48>
   12dcc:	bl	11a6c <__errno_location@plt>
   12dd0:	mov	r9, r0
   12dd4:	str	fp, [r9]
   12dd8:	mov	r6, #0
   12ddc:	b	12cf0 <__assert_fail@plt+0x10ec>
   12de0:	mov	r9, r4
   12de4:	b	12b5c <__assert_fail@plt+0xf58>
   12de8:	ldrb	r3, [r4]
   12dec:	cmp	r3, #47	; 0x2f
   12df0:	bne	12e04 <__assert_fail@plt+0x1200>
   12df4:	mov	r2, r4
   12df8:	ldrb	r3, [r2, #1]!
   12dfc:	cmp	r3, #47	; 0x2f
   12e00:	beq	12df8 <__assert_fail@plt+0x11f4>
   12e04:	cmp	r3, #0
   12e08:	bne	12e14 <__assert_fail@plt+0x1210>
   12e0c:	cmp	fp, #2
   12e10:	beq	12b24 <__assert_fail@plt+0xf20>
   12e14:	mov	r9, r0
   12e18:	ldr	r0, [sp, #40]	; 0x28
   12e1c:	bl	1185c <free@plt>
   12e20:	mov	r0, r6
   12e24:	bl	1185c <free@plt>
   12e28:	ldr	r3, [sp, #20]
   12e2c:	cmp	r3, #0
   12e30:	beq	12dd4 <__assert_fail@plt+0x11d0>
   12e34:	b	12dc4 <__assert_fail@plt+0x11c0>
   12e38:	ldr	r0, [sp, #20]
   12e3c:	add	r2, sp, #48	; 0x30
   12e40:	ldr	r1, [sp, #28]
   12e44:	bl	1332c <close_stdout@@Base+0x28c>
   12e48:	mov	r0, r6
   12e4c:	ldr	r1, [sp, #96]	; 0x60
   12e50:	bl	190b4 <fts_children@@Base+0x218>
   12e54:	subs	fp, r0, #0
   12e58:	beq	13014 <__assert_fail@plt+0x1410>
   12e5c:	bl	11a30 <strlen@plt>
   12e60:	mov	r9, r0
   12e64:	mov	r0, r4
   12e68:	bl	11a30 <strlen@plt>
   12e6c:	ldr	r1, [sp, #44]	; 0x2c
   12e70:	cmp	r1, #0
   12e74:	add	r3, r9, r0
   12e78:	mov	r2, r0
   12e7c:	add	r3, r3, #1
   12e80:	beq	12f64 <__assert_fail@plt+0x1360>
   12e84:	ldr	lr, [sp, #44]	; 0x2c
   12e88:	cmp	lr, r3
   12e8c:	bcc	12fec <__assert_fail@plt+0x13e8>
   12e90:	ldr	r3, [sp, #40]	; 0x28
   12e94:	mov	r1, r4
   12e98:	add	r2, r2, #1
   12e9c:	add	r0, r3, r9
   12ea0:	bl	11850 <memmove@plt>
   12ea4:	ldr	r0, [sp, #40]	; 0x28
   12ea8:	mov	r1, fp
   12eac:	mov	r2, r9
   12eb0:	bl	11874 <memcpy@plt>
   12eb4:	ldrb	r3, [fp]
   12eb8:	cmp	r3, #47	; 0x2f
   12ebc:	addeq	r5, r6, #1
   12ec0:	strbeq	r3, [r6]
   12ec4:	str	r0, [sp, #28]
   12ec8:	beq	12f0c <__assert_fail@plt+0x1308>
   12ecc:	add	r3, r6, #1
   12ed0:	cmp	r5, r3
   12ed4:	bls	12f0c <__assert_fail@plt+0x1308>
   12ed8:	sub	r3, r5, #1
   12edc:	cmp	r6, r3
   12ee0:	bcs	13058 <__assert_fail@plt+0x1454>
   12ee4:	ldrb	r2, [r5, #-2]
   12ee8:	mov	r5, r3
   12eec:	cmp	r2, #47	; 0x2f
   12ef0:	beq	12f0c <__assert_fail@plt+0x1308>
   12ef4:	sub	r5, r5, #1
   12ef8:	cmp	r5, r6
   12efc:	beq	12f0c <__assert_fail@plt+0x1308>
   12f00:	ldrb	r3, [r5, #-1]
   12f04:	cmp	r3, #47	; 0x2f
   12f08:	bne	12ef4 <__assert_fail@plt+0x12f0>
   12f0c:	mov	r0, fp
   12f10:	ldr	r4, [sp, #28]
   12f14:	bl	1185c <free@plt>
   12f18:	b	12b24 <__assert_fail@plt+0xf20>
   12f1c:	mov	r0, #4096	; 0x1000
   12f20:	bl	16aa4 <triple_free@@Base+0x24d8>
   12f24:	mov	r6, r0
   12f28:	strb	r4, [r0]
   12f2c:	add	r7, r0, #4096	; 0x1000
   12f30:	add	r5, r0, #1
   12f34:	b	12b04 <__assert_fail@plt+0xf00>
   12f38:	ldrb	r3, [r5, #-1]
   12f3c:	cmp	r3, #47	; 0x2f
   12f40:	subeq	r5, r5, #1
   12f44:	b	12cac <__assert_fail@plt+0x10a8>
   12f48:	mov	r0, r6
   12f4c:	mov	r1, #4096	; 0x1000
   12f50:	bl	16afc <triple_free@@Base+0x2530>
   12f54:	mov	r6, r0
   12f58:	add	r5, r0, r5
   12f5c:	add	r7, r0, #4096	; 0x1000
   12f60:	b	12b04 <__assert_fail@plt+0xf00>
   12f64:	cmp	r3, #4096	; 0x1000
   12f68:	movcc	r3, #4096	; 0x1000
   12f6c:	str	r2, [sp, #8]
   12f70:	str	r3, [sp, #44]	; 0x2c
   12f74:	mov	r0, r3
   12f78:	bl	16aa4 <triple_free@@Base+0x24d8>
   12f7c:	ldr	r2, [sp, #8]
   12f80:	str	r0, [sp, #40]	; 0x28
   12f84:	b	12e90 <__assert_fail@plt+0x128c>
   12f88:	ldr	lr, [sp, #32]
   12f8c:	mov	r1, r3
   12f90:	ldr	ip, [pc, #212]	; 1306c <__assert_fail@plt+0x1468>
   12f94:	mov	r0, #7
   12f98:	ldr	r2, [pc, #208]	; 13070 <__assert_fail@plt+0x146c>
   12f9c:	ldr	r3, [pc, #208]	; 13074 <__assert_fail@plt+0x1470>
   12fa0:	ldr	ip, [lr, ip]
   12fa4:	ldr	r2, [lr, r2]
   12fa8:	ldr	r3, [lr, r3]
   12fac:	str	ip, [sp]
   12fb0:	bl	13d04 <close_stdout@@Base+0xc64>
   12fb4:	cmp	r0, #0
   12fb8:	str	r0, [sp, #20]
   12fbc:	bne	12d90 <__assert_fail@plt+0x118c>
   12fc0:	bl	16cb8 <triple_free@@Base+0x26ec>
   12fc4:	bl	11a6c <__errno_location@plt>
   12fc8:	mov	r6, #0
   12fcc:	mov	r3, #22
   12fd0:	str	r3, [r0]
   12fd4:	b	12cf0 <__assert_fail@plt+0x10ec>
   12fd8:	bl	11a6c <__errno_location@plt>
   12fdc:	mov	r6, r4
   12fe0:	mov	r3, #2
   12fe4:	str	r3, [r0]
   12fe8:	b	12cf0 <__assert_fail@plt+0x10ec>
   12fec:	mov	r1, r3
   12ff0:	ldr	r0, [sp, #40]	; 0x28
   12ff4:	str	r2, [sp, #8]
   12ff8:	str	r3, [sp, #12]
   12ffc:	bl	16afc <triple_free@@Base+0x2530>
   13000:	ldr	r3, [sp, #12]
   13004:	ldr	r2, [sp, #8]
   13008:	str	r3, [sp, #44]	; 0x2c
   1300c:	str	r0, [sp, #40]	; 0x28
   13010:	b	12e90 <__assert_fail@plt+0x128c>
   13014:	cmp	r9, #0
   13018:	beq	13044 <__assert_fail@plt+0x1440>
   1301c:	bl	11a6c <__errno_location@plt>
   13020:	ldr	fp, [r0]
   13024:	cmp	fp, #12
   13028:	bne	12b24 <__assert_fail@plt+0xf20>
   1302c:	b	12db4 <__assert_fail@plt+0x11b0>
   13030:	bl	11a6c <__errno_location@plt>
   13034:	ldr	r6, [sp, #28]
   13038:	mov	r3, #22
   1303c:	str	r3, [r0]
   13040:	b	12cf0 <__assert_fail@plt+0x10ec>
   13044:	bl	11a6c <__errno_location@plt>
   13048:	ldr	fp, [r0]
   1304c:	b	12db4 <__assert_fail@plt+0x11b0>
   13050:	mov	r5, r3
   13054:	b	12b24 <__assert_fail@plt+0xf20>
   13058:	mov	r5, r3
   1305c:	b	12f0c <__assert_fail@plt+0x1308>
   13060:	bl	118b0 <__stack_chk_fail@plt>
   13064:	andeq	r9, r1, r0, ror r5
   13068:	andeq	r0, r0, ip, ror r1
   1306c:	andeq	r0, r0, r0, lsl #3
   13070:	muleq	r0, r4, r1
   13074:	andeq	r0, r0, r0, lsr #3
   13078:	ldr	r3, [pc, #8]	; 13088 <__assert_fail@plt+0x1484>
   1307c:	add	r3, pc, r3
   13080:	str	r0, [r3]
   13084:	bx	lr
   13088:	andeq	r9, r1, ip, lsl #3
   1308c:	ldr	r3, [pc, #8]	; 1309c <__assert_fail@plt+0x1498>
   13090:	add	r3, pc, r3
   13094:	strb	r0, [r3, #4]
   13098:	bx	lr
   1309c:	andeq	r9, r1, r8, ror r1

000130a0 <close_stdout@@Base>:
   130a0:	push	{r4, r5, r6, r7, lr}
   130a4:	sub	sp, sp, #12
   130a8:	ldr	r4, [pc, #228]	; 13194 <close_stdout@@Base+0xf4>
   130ac:	ldr	r3, [pc, #228]	; 13198 <close_stdout@@Base+0xf8>
   130b0:	add	r4, pc, r4
   130b4:	ldr	r3, [r4, r3]
   130b8:	ldr	r0, [r3]
   130bc:	bl	191e8 <fts_children@@Base+0x34c>
   130c0:	cmp	r0, #0
   130c4:	beq	130ec <close_stdout@@Base+0x4c>
   130c8:	ldr	r3, [pc, #204]	; 1319c <close_stdout@@Base+0xfc>
   130cc:	add	r3, pc, r3
   130d0:	ldrb	r3, [r3, #4]
   130d4:	cmp	r3, #0
   130d8:	beq	1310c <close_stdout@@Base+0x6c>
   130dc:	bl	11a6c <__errno_location@plt>
   130e0:	ldr	r3, [r0]
   130e4:	cmp	r3, #32
   130e8:	bne	1310c <close_stdout@@Base+0x6c>
   130ec:	ldr	r3, [pc, #172]	; 131a0 <close_stdout@@Base+0x100>
   130f0:	ldr	r3, [r4, r3]
   130f4:	ldr	r0, [r3]
   130f8:	bl	191e8 <fts_children@@Base+0x34c>
   130fc:	cmp	r0, #0
   13100:	bne	13160 <close_stdout@@Base+0xc0>
   13104:	add	sp, sp, #12
   13108:	pop	{r4, r5, r6, r7, pc}
   1310c:	ldr	r1, [pc, #144]	; 131a4 <close_stdout@@Base+0x104>
   13110:	mov	r0, #0
   13114:	mov	r2, #5
   13118:	add	r1, pc, r1
   1311c:	bl	118a4 <dcgettext@plt>
   13120:	ldr	r3, [pc, #128]	; 131a8 <close_stdout@@Base+0x108>
   13124:	ldr	r5, [pc, r3]
   13128:	cmp	r5, #0
   1312c:	mov	r6, r0
   13130:	beq	13170 <close_stdout@@Base+0xd0>
   13134:	bl	11a6c <__errno_location@plt>
   13138:	ldr	r7, [r0]
   1313c:	mov	r0, r5
   13140:	bl	16234 <triple_free@@Base+0x1c68>
   13144:	ldr	r2, [pc, #96]	; 131ac <close_stdout@@Base+0x10c>
   13148:	str	r6, [sp]
   1314c:	mov	r1, r7
   13150:	add	r2, pc, r2
   13154:	mov	r3, r0
   13158:	mov	r0, #0
   1315c:	bl	11988 <error@plt>
   13160:	ldr	r3, [pc, #72]	; 131b0 <close_stdout@@Base+0x110>
   13164:	ldr	r3, [r4, r3]
   13168:	ldr	r0, [r3]
   1316c:	bl	11868 <_exit@plt>
   13170:	bl	11a6c <__errno_location@plt>
   13174:	ldr	r2, [pc, #56]	; 131b4 <close_stdout@@Base+0x114>
   13178:	add	r2, pc, r2
   1317c:	mov	r3, r0
   13180:	mov	r0, r5
   13184:	ldr	r1, [r3]
   13188:	mov	r3, r6
   1318c:	bl	11988 <error@plt>
   13190:	b	13160 <close_stdout@@Base+0xc0>
   13194:	andeq	r8, r1, r8, asr #30
   13198:	andeq	r0, r0, r4, lsr #3
   1319c:	andeq	r9, r1, ip, lsr r1
   131a0:	andeq	r0, r0, ip, lsl #3
   131a4:	andeq	r7, r0, r0, lsl #25
   131a8:	andeq	r9, r1, r4, ror #1
   131ac:	andeq	r7, r0, r4, asr ip
   131b0:	andeq	r0, r0, r8, lsr #3
   131b4:	andeq	r7, r0, r0, lsr ip
   131b8:	push	{r3, lr}
   131bc:	bl	13230 <close_stdout@@Base+0x190>
   131c0:	cmp	r0, #0
   131c4:	popne	{r3, pc}
   131c8:	bl	16cb8 <triple_free@@Base+0x26ec>
   131cc:	push	{r3, r4, r5, lr}
   131d0:	mov	r4, r0
   131d4:	ldrb	r5, [r0]
   131d8:	subs	r3, r5, #47	; 0x2f
   131dc:	rsbs	r5, r3, #0
   131e0:	adcs	r5, r5, r3
   131e4:	bl	13288 <close_stdout@@Base+0x1e8>
   131e8:	rsb	r3, r4, r0
   131ec:	cmp	r3, r5
   131f0:	bls	13228 <close_stdout@@Base+0x188>
   131f4:	sub	r0, r3, #1
   131f8:	ldrb	r2, [r4, r0]
   131fc:	cmp	r2, #47	; 0x2f
   13200:	beq	13218 <close_stdout@@Base+0x178>
   13204:	b	13228 <close_stdout@@Base+0x188>
   13208:	ldrb	r2, [r4, r3]
   1320c:	cmp	r2, #47	; 0x2f
   13210:	popne	{r3, r4, r5, pc}
   13214:	mov	r0, r3
   13218:	cmp	r5, r0
   1321c:	sub	r3, r0, #1
   13220:	bcc	13208 <close_stdout@@Base+0x168>
   13224:	pop	{r3, r4, r5, pc}
   13228:	mov	r0, r3
   1322c:	pop	{r3, r4, r5, pc}
   13230:	push	{r4, r5, r6, r7, r8, lr}
   13234:	mov	r8, r0
   13238:	bl	131cc <close_stdout@@Base+0x12c>
   1323c:	rsbs	r6, r0, #1
   13240:	add	r7, r0, #1
   13244:	mov	r4, r0
   13248:	movcc	r6, #0
   1324c:	add	r0, r6, r7
   13250:	bl	119b8 <malloc@plt>
   13254:	subs	r5, r0, #0
   13258:	beq	13280 <close_stdout@@Base+0x1e0>
   1325c:	mov	r2, r4
   13260:	mov	r1, r8
   13264:	bl	11874 <memcpy@plt>
   13268:	cmp	r6, #0
   1326c:	movne	r3, #46	; 0x2e
   13270:	strbne	r3, [r5, r4]
   13274:	movne	r4, r7
   13278:	mov	r3, #0
   1327c:	strb	r3, [r5, r4]
   13280:	mov	r0, r5
   13284:	pop	{r4, r5, r6, r7, r8, pc}
   13288:	ldrb	r3, [r0]
   1328c:	cmp	r3, #47	; 0x2f
   13290:	bne	132ac <close_stdout@@Base+0x20c>
   13294:	add	r2, r0, #1
   13298:	mov	r0, r2
   1329c:	add	r2, r2, #1
   132a0:	ldrb	r3, [r0]
   132a4:	cmp	r3, #47	; 0x2f
   132a8:	beq	13298 <close_stdout@@Base+0x1f8>
   132ac:	cmp	r3, #0
   132b0:	bxeq	lr
   132b4:	mov	r2, r0
   132b8:	mov	r1, #0
   132bc:	cmp	r3, #47	; 0x2f
   132c0:	moveq	r1, #1
   132c4:	beq	132d4 <close_stdout@@Base+0x234>
   132c8:	cmp	r1, #0
   132cc:	movne	r0, r2
   132d0:	movne	r1, #0
   132d4:	ldrb	r3, [r2, #1]!
   132d8:	cmp	r3, #0
   132dc:	bne	132bc <close_stdout@@Base+0x21c>
   132e0:	bx	lr
   132e4:	push	{r4, lr}
   132e8:	mov	r4, r0
   132ec:	bl	11a30 <strlen@plt>
   132f0:	cmp	r0, #1
   132f4:	popls	{r4, pc}
   132f8:	sub	r3, r0, #1
   132fc:	ldrb	r2, [r4, r3]
   13300:	cmp	r2, #47	; 0x2f
   13304:	popne	{r4, pc}
   13308:	mov	r0, r3
   1330c:	cmp	r0, #1
   13310:	sub	r3, r3, #1
   13314:	beq	13328 <close_stdout@@Base+0x288>
   13318:	ldrb	r2, [r4, r3]
   1331c:	cmp	r2, #47	; 0x2f
   13320:	popne	{r4, pc}
   13324:	b	13308 <close_stdout@@Base+0x268>
   13328:	pop	{r4, pc}
   1332c:	push	{r4, r5, r6, r7, r8, lr}
   13330:	subs	r8, r0, #0
   13334:	mov	r4, r1
   13338:	mov	r7, r2
   1333c:	popeq	{r4, r5, r6, r7, r8, pc}
   13340:	mov	r0, #24
   13344:	bl	16aa4 <triple_free@@Base+0x24d8>
   13348:	mov	r6, r0
   1334c:	mov	r0, r4
   13350:	bl	16c9c <triple_free@@Base+0x26d0>
   13354:	ldrd	r4, [r7]
   13358:	mov	r1, r6
   1335c:	str	r0, [r6]
   13360:	mov	r0, r8
   13364:	ldrd	r2, [r7, #96]	; 0x60
   13368:	strd	r4, [r6, #16]
   1336c:	strd	r2, [r6, #8]
   13370:	bl	1432c <close_stdout@@Base+0x128c>
   13374:	cmp	r0, #0
   13378:	beq	13390 <close_stdout@@Base+0x2f0>
   1337c:	cmp	r6, r0
   13380:	popeq	{r4, r5, r6, r7, r8, pc}
   13384:	mov	r0, r6
   13388:	pop	{r4, r5, r6, r7, r8, lr}
   1338c:	b	145cc <triple_free@@Base>
   13390:	bl	16cb8 <triple_free@@Base+0x26ec>
   13394:	ldr	r3, [pc, #104]	; 13404 <close_stdout@@Base+0x364>
   13398:	ldr	ip, [pc, #104]	; 13408 <close_stdout@@Base+0x368>
   1339c:	add	r3, pc, r3
   133a0:	push	{r4, r5, r6, r7, lr}
   133a4:	subs	r4, r0, #0
   133a8:	ldr	r6, [r3, ip]
   133ac:	sub	sp, sp, #36	; 0x24
   133b0:	mov	r7, r1
   133b4:	moveq	r0, r4
   133b8:	ldr	r3, [r6]
   133bc:	str	r3, [sp, #28]
   133c0:	beq	133e8 <close_stdout@@Base+0x348>
   133c4:	ldrd	r4, [r2, #96]	; 0x60
   133c8:	mov	r1, sp
   133cc:	ldrd	r2, [r2]
   133d0:	str	r7, [sp]
   133d4:	strd	r4, [sp, #8]
   133d8:	strd	r2, [sp, #16]
   133dc:	bl	13a50 <close_stdout@@Base+0x9b0>
   133e0:	adds	r0, r0, #0
   133e4:	movne	r0, #1
   133e8:	ldr	r2, [sp, #28]
   133ec:	ldr	r3, [r6]
   133f0:	cmp	r2, r3
   133f4:	bne	13400 <close_stdout@@Base+0x360>
   133f8:	add	sp, sp, #36	; 0x24
   133fc:	pop	{r4, r5, r6, r7, pc}
   13400:	bl	118b0 <__stack_chk_fail@plt>
   13404:	andeq	r8, r1, ip, asr ip
   13408:	andeq	r0, r0, ip, ror r1
   1340c:	andeq	r0, r0, r0
   13410:	cmp	r0, #9
   13414:	push	{r4, r5, r6, r7, r8, lr}
   13418:	bhi	134ac <close_stdout@@Base+0x40c>
   1341c:	mov	r7, #11
   13420:	movw	r8, #43691	; 0xaaab
   13424:	movt	r8, #43690	; 0xaaaa
   13428:	cmp	r7, #9
   1342c:	bls	134a4 <close_stdout@@Base+0x404>
   13430:	umull	r2, r3, r8, r7
   13434:	lsr	r3, r3, #1
   13438:	add	r3, r3, r3, lsl #1
   1343c:	cmp	r7, r3
   13440:	beq	13490 <close_stdout@@Base+0x3f0>
   13444:	mov	r6, #16
   13448:	mov	r5, #9
   1344c:	mov	r4, #3
   13450:	b	13460 <close_stdout@@Base+0x3c0>
   13454:	bl	19ea0 <fts_children@@Base+0x1004>
   13458:	cmp	r1, #0
   1345c:	beq	13490 <close_stdout@@Base+0x3f0>
   13460:	add	r5, r5, r6
   13464:	add	r4, r4, #2
   13468:	cmp	r5, r7
   1346c:	mov	r0, r7
   13470:	add	r6, r6, #8
   13474:	mov	r1, r4
   13478:	bcc	13454 <close_stdout@@Base+0x3b4>
   1347c:	mov	r1, r4
   13480:	mov	r0, r7
   13484:	bl	19ea0 <fts_children@@Base+0x1004>
   13488:	cmp	r1, #0
   1348c:	bne	1349c <close_stdout@@Base+0x3fc>
   13490:	add	r7, r7, #2
   13494:	cmn	r7, #1
   13498:	bne	13428 <close_stdout@@Base+0x388>
   1349c:	mov	r0, r7
   134a0:	pop	{r4, r5, r6, r7, r8, pc}
   134a4:	mov	r4, #3
   134a8:	b	1347c <close_stdout@@Base+0x3dc>
   134ac:	orr	r7, r0, #1
   134b0:	cmn	r7, #1
   134b4:	bne	13420 <close_stdout@@Base+0x380>
   134b8:	b	1349c <close_stdout@@Base+0x3fc>
   134bc:	push	{r3, lr}
   134c0:	ror	r0, r0, #3
   134c4:	bl	19ea0 <fts_children@@Base+0x1004>
   134c8:	mov	r0, r1
   134cc:	pop	{r3, pc}
   134d0:	subs	r3, r1, r0
   134d4:	rsbs	r0, r3, #0
   134d8:	adcs	r0, r0, r3
   134dc:	bx	lr
   134e0:	push	{r4, lr}
   134e4:	mov	r4, r0
   134e8:	ldr	r3, [r4, #24]
   134ec:	mov	r0, r1
   134f0:	ldr	r1, [r4, #8]
   134f4:	blx	r3
   134f8:	ldr	r3, [r4, #8]
   134fc:	cmp	r0, r3
   13500:	bcs	13510 <close_stdout@@Base+0x470>
   13504:	ldr	r3, [r4]
   13508:	add	r0, r3, r0, lsl #3
   1350c:	pop	{r4, pc}
   13510:	bl	11bbc <abort@plt>
   13514:	push	{r4, r5, r6, r7, r8, lr}
   13518:	mov	r7, r2
   1351c:	mov	r8, r3
   13520:	mov	r6, r0
   13524:	mov	r5, r1
   13528:	bl	134e0 <close_stdout@@Base+0x440>
   1352c:	str	r0, [r7]
   13530:	mov	r4, r0
   13534:	ldr	r2, [r0]
   13538:	cmp	r2, #0
   1353c:	beq	135d0 <close_stdout@@Base+0x530>
   13540:	cmp	r5, r2
   13544:	beq	13564 <close_stdout@@Base+0x4c4>
   13548:	mov	r1, r2
   1354c:	ldr	r3, [r6, #28]
   13550:	mov	r0, r5
   13554:	blx	r3
   13558:	cmp	r0, #0
   1355c:	beq	135c4 <close_stdout@@Base+0x524>
   13560:	ldr	r2, [r4]
   13564:	cmp	r8, #0
   13568:	beq	13594 <close_stdout@@Base+0x4f4>
   1356c:	ldr	r3, [r4, #4]
   13570:	cmp	r3, #0
   13574:	streq	r3, [r4]
   13578:	ldmne	r3, {r0, r1}
   1357c:	movne	ip, #0
   13580:	stmne	r4, {r0, r1}
   13584:	strne	ip, [r3]
   13588:	ldrne	r1, [r6, #36]	; 0x24
   1358c:	strne	r1, [r3, #4]
   13590:	strne	r3, [r6, #36]	; 0x24
   13594:	mov	r0, r2
   13598:	pop	{r4, r5, r6, r7, r8, pc}
   1359c:	ldr	r2, [ip]
   135a0:	cmp	r2, r5
   135a4:	beq	135e4 <close_stdout@@Base+0x544>
   135a8:	mov	r1, r2
   135ac:	mov	r0, r5
   135b0:	ldr	r2, [r6, #28]
   135b4:	blx	r2
   135b8:	cmp	r0, #0
   135bc:	bne	135dc <close_stdout@@Base+0x53c>
   135c0:	ldr	r4, [r4, #4]
   135c4:	ldr	ip, [r4, #4]
   135c8:	cmp	ip, #0
   135cc:	bne	1359c <close_stdout@@Base+0x4fc>
   135d0:	mov	r2, #0
   135d4:	mov	r0, r2
   135d8:	pop	{r4, r5, r6, r7, r8, pc}
   135dc:	ldr	ip, [r4, #4]
   135e0:	ldr	r2, [ip]
   135e4:	cmp	r8, #0
   135e8:	beq	13594 <close_stdout@@Base+0x4f4>
   135ec:	ldr	r1, [ip, #4]
   135f0:	mov	r3, #0
   135f4:	mov	r0, r2
   135f8:	str	r1, [r4, #4]
   135fc:	str	r3, [ip]
   13600:	ldr	r3, [r6, #36]	; 0x24
   13604:	str	r3, [ip, #4]
   13608:	str	ip, [r6, #36]	; 0x24
   1360c:	pop	{r4, r5, r6, r7, r8, pc}
   13610:	ldr	r1, [pc, #176]	; 136c8 <close_stdout@@Base+0x628>
   13614:	mov	r2, r0
   13618:	ldr	r3, [r0]
   1361c:	add	r1, pc, r1
   13620:	cmp	r3, r1
   13624:	beq	136b4 <close_stdout@@Base+0x614>
   13628:	vldr	s15, [r3, #8]
   1362c:	vldr	s14, [pc, #136]	; 136bc <close_stdout@@Base+0x61c>
   13630:	vcmpe.f32	s15, s14
   13634:	vmrs	APSR_nzcv, fpscr
   13638:	ble	136a0 <close_stdout@@Base+0x600>
   1363c:	vldr	s13, [pc, #124]	; 136c0 <close_stdout@@Base+0x620>
   13640:	vcmpe.f32	s15, s13
   13644:	vmrs	APSR_nzcv, fpscr
   13648:	bpl	136a0 <close_stdout@@Base+0x600>
   1364c:	vldr	s13, [pc, #112]	; 136c4 <close_stdout@@Base+0x624>
   13650:	vldr	s12, [r3, #12]
   13654:	vcmpe.f32	s12, s13
   13658:	vmrs	APSR_nzcv, fpscr
   1365c:	ble	136a0 <close_stdout@@Base+0x600>
   13660:	vldr	s13, [r3]
   13664:	vcmpe.f32	s13, #0.0
   13668:	vmrs	APSR_nzcv, fpscr
   1366c:	blt	136a0 <close_stdout@@Base+0x600>
   13670:	vadd.f32	s14, s13, s14
   13674:	vldr	s12, [r3, #4]
   13678:	vcmpe.f32	s14, s12
   1367c:	vmrs	APSR_nzcv, fpscr
   13680:	bpl	136a0 <close_stdout@@Base+0x600>
   13684:	vmov.f32	s13, #112	; 0x3f800000  1.0
   13688:	vcmpe.f32	s12, s13
   1368c:	vmrs	APSR_nzcv, fpscr
   13690:	bhi	136a0 <close_stdout@@Base+0x600>
   13694:	vcmpe.f32	s15, s14
   13698:	vmrs	APSR_nzcv, fpscr
   1369c:	bgt	136b4 <close_stdout@@Base+0x614>
   136a0:	ldr	r3, [pc, #36]	; 136cc <close_stdout@@Base+0x62c>
   136a4:	mov	r0, #0
   136a8:	add	r3, pc, r3
   136ac:	str	r3, [r2]
   136b0:	bx	lr
   136b4:	mov	r0, #1
   136b8:	bx	lr
   136bc:	stclcc	12, cr12, [ip, #820]	; 0x334
   136c0:	svccc	0x00666666
   136c4:	svccc	0x008ccccd
   136c8:	muleq	r0, r0, r7
   136cc:	andeq	r7, r0, r4, lsl #14
   136d0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136d4:	mov	r8, r1
   136d8:	ldr	r6, [r1]
   136dc:	mov	r5, r0
   136e0:	ldr	r3, [r1, #4]
   136e4:	mov	sl, r2
   136e8:	cmp	r6, r3
   136ec:	addcc	r6, r6, #8
   136f0:	movcc	r9, #0
   136f4:	bcs	1379c <close_stdout@@Base+0x6fc>
   136f8:	ldr	fp, [r6, #-8]
   136fc:	mov	r7, r6
   13700:	cmp	fp, #0
   13704:	beq	13790 <close_stdout@@Base+0x6f0>
   13708:	ldr	r4, [r6, #-4]
   1370c:	cmp	r4, #0
   13710:	bne	13730 <close_stdout@@Base+0x690>
   13714:	b	13780 <close_stdout@@Base+0x6e0>
   13718:	ldr	r2, [r0, #4]
   1371c:	cmp	r3, #0
   13720:	str	r2, [r4, #4]
   13724:	str	r4, [r0, #4]
   13728:	mov	r4, r3
   1372c:	beq	1377c <close_stdout@@Base+0x6dc>
   13730:	ldr	fp, [r4]
   13734:	mov	r0, r5
   13738:	mov	r1, fp
   1373c:	bl	134e0 <close_stdout@@Base+0x440>
   13740:	ldr	r3, [r4, #4]
   13744:	ldr	r2, [r0]
   13748:	cmp	r2, #0
   1374c:	bne	13718 <close_stdout@@Base+0x678>
   13750:	str	fp, [r0]
   13754:	cmp	r3, #0
   13758:	ldr	r1, [r5, #12]
   1375c:	add	r1, r1, #1
   13760:	str	r1, [r5, #12]
   13764:	str	r2, [r4]
   13768:	ldr	r2, [r5, #36]	; 0x24
   1376c:	str	r2, [r4, #4]
   13770:	str	r4, [r5, #36]	; 0x24
   13774:	mov	r4, r3
   13778:	bne	13730 <close_stdout@@Base+0x690>
   1377c:	ldr	fp, [r6, #-8]
   13780:	cmp	sl, #0
   13784:	str	r9, [r6, #-4]
   13788:	beq	137a4 <close_stdout@@Base+0x704>
   1378c:	ldr	r3, [r8, #4]
   13790:	cmp	r3, r7
   13794:	add	r6, r6, #8
   13798:	bhi	136f8 <close_stdout@@Base+0x658>
   1379c:	mov	r0, #1
   137a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137a4:	mov	r0, r5
   137a8:	mov	r1, fp
   137ac:	bl	134e0 <close_stdout@@Base+0x440>
   137b0:	ldr	r3, [r0]
   137b4:	mov	r4, r0
   137b8:	cmp	r3, #0
   137bc:	beq	13808 <close_stdout@@Base+0x768>
   137c0:	ldr	r0, [r5, #36]	; 0x24
   137c4:	cmp	r0, #0
   137c8:	beq	1381c <close_stdout@@Base+0x77c>
   137cc:	ldr	r2, [r0, #4]
   137d0:	str	r2, [r5, #36]	; 0x24
   137d4:	str	fp, [r0]
   137d8:	ldr	r2, [r4, #4]
   137dc:	str	r2, [r0, #4]
   137e0:	str	r0, [r4, #4]
   137e4:	str	r9, [r6, #-8]
   137e8:	add	r6, r6, #8
   137ec:	ldr	r3, [r8, #4]
   137f0:	ldr	r2, [r8, #12]
   137f4:	cmp	r3, r7
   137f8:	sub	r2, r2, #1
   137fc:	str	r2, [r8, #12]
   13800:	bhi	136f8 <close_stdout@@Base+0x658>
   13804:	b	1379c <close_stdout@@Base+0x6fc>
   13808:	str	fp, [r0]
   1380c:	ldr	r3, [r5, #12]
   13810:	add	r3, r3, #1
   13814:	str	r3, [r5, #12]
   13818:	b	137e4 <close_stdout@@Base+0x744>
   1381c:	mov	r0, #8
   13820:	bl	119b8 <malloc@plt>
   13824:	cmp	r0, #0
   13828:	bne	137d4 <close_stdout@@Base+0x734>
   1382c:	mov	r0, sl
   13830:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13834:	ldr	r0, [r0, #8]
   13838:	bx	lr
   1383c:	ldr	r0, [r0, #12]
   13840:	bx	lr
   13844:	ldr	r0, [r0, #16]
   13848:	bx	lr
   1384c:	ldr	r3, [r0]
   13850:	ldr	r2, [r0, #4]
   13854:	cmp	r3, r2
   13858:	bcs	138bc <close_stdout@@Base+0x81c>
   1385c:	add	r1, r3, #8
   13860:	add	r2, r2, #7
   13864:	rsb	r2, r1, r2
   13868:	add	r3, r3, #16
   1386c:	bic	r2, r2, #7
   13870:	mov	r0, #0
   13874:	add	ip, r3, r2
   13878:	ldr	r3, [r1, #-8]
   1387c:	cmp	r3, #0
   13880:	beq	138ac <close_stdout@@Base+0x80c>
   13884:	ldr	r3, [r1, #-4]
   13888:	mov	r2, #1
   1388c:	cmp	r3, #0
   13890:	beq	138a4 <close_stdout@@Base+0x804>
   13894:	ldr	r3, [r3, #4]
   13898:	add	r2, r2, #1
   1389c:	cmp	r3, #0
   138a0:	bne	13894 <close_stdout@@Base+0x7f4>
   138a4:	cmp	r0, r2
   138a8:	movcc	r0, r2
   138ac:	add	r1, r1, #8
   138b0:	cmp	r1, ip
   138b4:	bne	13878 <close_stdout@@Base+0x7d8>
   138b8:	bx	lr
   138bc:	mov	r0, #0
   138c0:	bx	lr
   138c4:	push	{r4}		; (str r4, [sp, #-4]!)
   138c8:	ldr	r3, [r0]
   138cc:	ldr	r2, [r0, #4]
   138d0:	cmp	r3, r2
   138d4:	bcs	13964 <close_stdout@@Base+0x8c4>
   138d8:	add	r2, r2, #7
   138dc:	add	r1, r3, #8
   138e0:	rsb	ip, r1, r2
   138e4:	add	r3, r3, #16
   138e8:	bic	ip, ip, #7
   138ec:	mov	r2, #0
   138f0:	add	r4, r3, ip
   138f4:	mov	ip, r2
   138f8:	ldr	r3, [r1, #-8]
   138fc:	cmp	r3, #0
   13900:	beq	13928 <close_stdout@@Base+0x888>
   13904:	ldr	r3, [r1, #-4]
   13908:	add	ip, ip, #1
   1390c:	add	r2, r2, #1
   13910:	cmp	r3, #0
   13914:	beq	13928 <close_stdout@@Base+0x888>
   13918:	ldr	r3, [r3, #4]
   1391c:	add	r2, r2, #1
   13920:	cmp	r3, #0
   13924:	bne	13918 <close_stdout@@Base+0x878>
   13928:	add	r1, r1, #8
   1392c:	cmp	r1, r4
   13930:	bne	138f8 <close_stdout@@Base+0x858>
   13934:	ldr	r3, [r0, #12]
   13938:	cmp	r3, ip
   1393c:	movne	r0, #0
   13940:	beq	1394c <close_stdout@@Base+0x8ac>
   13944:	pop	{r4}		; (ldr r4, [sp], #4)
   13948:	bx	lr
   1394c:	ldr	r0, [r0, #16]
   13950:	pop	{r4}		; (ldr r4, [sp], #4)
   13954:	subs	r3, r0, r2
   13958:	rsbs	r0, r3, #0
   1395c:	adcs	r0, r0, r3
   13960:	bx	lr
   13964:	mov	r2, #0
   13968:	mov	ip, r2
   1396c:	b	13934 <close_stdout@@Base+0x894>
   13970:	push	{r4, r5, r6, r7, r8, lr}
   13974:	sub	sp, sp, #8
   13978:	mov	r4, r1
   1397c:	mov	r5, r0
   13980:	bl	13844 <close_stdout@@Base+0x7a4>
   13984:	mov	r8, r0
   13988:	mov	r0, r5
   1398c:	bl	13834 <close_stdout@@Base+0x794>
   13990:	mov	r6, r0
   13994:	mov	r0, r5
   13998:	bl	1383c <close_stdout@@Base+0x79c>
   1399c:	mov	r7, r0
   139a0:	mov	r0, r5
   139a4:	bl	1384c <close_stdout@@Base+0x7ac>
   139a8:	ldr	r2, [pc, #144]	; 13a40 <close_stdout@@Base+0x9a0>
   139ac:	mov	r3, r8
   139b0:	mov	r1, #1
   139b4:	add	r2, pc, r2
   139b8:	mov	r5, r0
   139bc:	mov	r0, r4
   139c0:	bl	11ab4 <__fprintf_chk@plt>
   139c4:	ldr	r2, [pc, #120]	; 13a44 <close_stdout@@Base+0x9a4>
   139c8:	mov	r3, r6
   139cc:	mov	r0, r4
   139d0:	mov	r1, #1
   139d4:	add	r2, pc, r2
   139d8:	bl	11ab4 <__fprintf_chk@plt>
   139dc:	vmov	s15, r7
   139e0:	vldr	d5, [pc, #80]	; 13a38 <close_stdout@@Base+0x998>
   139e4:	ldr	r2, [pc, #92]	; 13a48 <close_stdout@@Base+0x9a8>
   139e8:	vcvt.f64.u32	d4, s15
   139ec:	mov	r3, r7
   139f0:	vmov	s15, r6
   139f4:	mov	r0, r4
   139f8:	mov	r1, #1
   139fc:	add	r2, pc, r2
   13a00:	vmul.f64	d5, d4, d5
   13a04:	vcvt.f64.u32	d6, s15
   13a08:	vdiv.f64	d7, d5, d6
   13a0c:	vstr	d7, [sp]
   13a10:	bl	11ab4 <__fprintf_chk@plt>
   13a14:	ldr	r2, [pc, #48]	; 13a4c <close_stdout@@Base+0x9ac>
   13a18:	mov	r0, r4
   13a1c:	mov	r3, r5
   13a20:	mov	r1, #1
   13a24:	add	r2, pc, r2
   13a28:	add	sp, sp, #8
   13a2c:	pop	{r4, r5, r6, r7, r8, lr}
   13a30:	b	11ab4 <__fprintf_chk@plt>
   13a34:	nop	{0}
   13a38:	andeq	r0, r0, r0
   13a3c:	subsmi	r0, r9, r0
   13a40:	andeq	r7, r0, ip, lsl #8
   13a44:	andeq	r7, r0, r4, lsl #8
   13a48:	strdeq	r7, [r0], -r4
   13a4c:	strdeq	r7, [r0], -r0
   13a50:	push	{r4, r5, r6, lr}
   13a54:	mov	r6, r0
   13a58:	mov	r5, r1
   13a5c:	bl	134e0 <close_stdout@@Base+0x440>
   13a60:	ldr	r3, [r0]
   13a64:	mov	r4, r0
   13a68:	cmp	r3, #0
   13a6c:	bne	13a78 <close_stdout@@Base+0x9d8>
   13a70:	b	13aa4 <close_stdout@@Base+0xa04>
   13a74:	ldr	r3, [r4]
   13a78:	cmp	r5, r3
   13a7c:	mov	r1, r3
   13a80:	mov	r0, r5
   13a84:	beq	13ab0 <close_stdout@@Base+0xa10>
   13a88:	ldr	r3, [r6, #28]
   13a8c:	blx	r3
   13a90:	cmp	r0, #0
   13a94:	bne	13aac <close_stdout@@Base+0xa0c>
   13a98:	ldr	r4, [r4, #4]
   13a9c:	cmp	r4, #0
   13aa0:	bne	13a74 <close_stdout@@Base+0x9d4>
   13aa4:	mov	r0, #0
   13aa8:	pop	{r4, r5, r6, pc}
   13aac:	ldr	r3, [r4]
   13ab0:	mov	r0, r3
   13ab4:	pop	{r4, r5, r6, pc}
   13ab8:	push	{r3, lr}
   13abc:	ldr	r3, [r0, #16]
   13ac0:	cmp	r3, #0
   13ac4:	beq	13b04 <close_stdout@@Base+0xa64>
   13ac8:	ldr	r3, [r0]
   13acc:	ldr	r2, [r0, #4]
   13ad0:	cmp	r3, r2
   13ad4:	bcs	13b00 <close_stdout@@Base+0xa60>
   13ad8:	ldr	r0, [r3]
   13adc:	cmp	r0, #0
   13ae0:	beq	13af4 <close_stdout@@Base+0xa54>
   13ae4:	b	13b0c <close_stdout@@Base+0xa6c>
   13ae8:	ldr	r0, [r3]
   13aec:	cmp	r0, #0
   13af0:	popne	{r3, pc}
   13af4:	add	r3, r3, #8
   13af8:	cmp	r3, r2
   13afc:	bcc	13ae8 <close_stdout@@Base+0xa48>
   13b00:	bl	11bbc <abort@plt>
   13b04:	mov	r0, r3
   13b08:	pop	{r3, pc}
   13b0c:	pop	{r3, pc}
   13b10:	push	{r3, r4, r5, lr}
   13b14:	mov	r5, r0
   13b18:	mov	r4, r1
   13b1c:	bl	134e0 <close_stdout@@Base+0x440>
   13b20:	mov	r2, r0
   13b24:	mov	r3, r0
   13b28:	b	13b34 <close_stdout@@Base+0xa94>
   13b2c:	cmp	r3, #0
   13b30:	beq	13b4c <close_stdout@@Base+0xaac>
   13b34:	ldr	ip, [r3]
   13b38:	ldr	r3, [r3, #4]
   13b3c:	cmp	ip, r4
   13b40:	bne	13b2c <close_stdout@@Base+0xa8c>
   13b44:	cmp	r3, #0
   13b48:	bne	13b74 <close_stdout@@Base+0xad4>
   13b4c:	ldr	r3, [r5, #4]
   13b50:	b	13b60 <close_stdout@@Base+0xac0>
   13b54:	ldr	r0, [r2]
   13b58:	cmp	r0, #0
   13b5c:	popne	{r3, r4, r5, pc}
   13b60:	add	r2, r2, #8
   13b64:	cmp	r2, r3
   13b68:	bcc	13b54 <close_stdout@@Base+0xab4>
   13b6c:	mov	r0, #0
   13b70:	pop	{r3, r4, r5, pc}
   13b74:	ldr	r0, [r3]
   13b78:	pop	{r3, r4, r5, pc}
   13b7c:	push	{r4, r5, r6, r7}
   13b80:	mov	r6, r0
   13b84:	ldm	r0, {r5, ip}
   13b88:	cmp	ip, r5
   13b8c:	bls	13c10 <close_stdout@@Base+0xb70>
   13b90:	add	r5, r5, #8
   13b94:	mov	r0, #0
   13b98:	ldr	r3, [r5, #-8]
   13b9c:	mov	r7, r5
   13ba0:	cmp	r3, #0
   13ba4:	beq	13bf0 <close_stdout@@Base+0xb50>
   13ba8:	cmp	r2, r0
   13bac:	bls	13bfc <close_stdout@@Base+0xb5c>
   13bb0:	str	r3, [r1, r0, lsl #2]
   13bb4:	add	r4, r0, #1
   13bb8:	ldr	r3, [r5, #-4]
   13bbc:	add	ip, r1, r0, lsl #2
   13bc0:	cmp	r3, #0
   13bc4:	beq	13c04 <close_stdout@@Base+0xb64>
   13bc8:	mov	r0, r4
   13bcc:	cmp	r0, r2
   13bd0:	beq	13bfc <close_stdout@@Base+0xb5c>
   13bd4:	ldr	r4, [r3]
   13bd8:	add	r0, r0, #1
   13bdc:	str	r4, [ip, #4]!
   13be0:	ldr	r3, [r3, #4]
   13be4:	cmp	r3, #0
   13be8:	bne	13bcc <close_stdout@@Base+0xb2c>
   13bec:	ldr	ip, [r6, #4]
   13bf0:	cmp	ip, r7
   13bf4:	add	r5, r5, #8
   13bf8:	bhi	13b98 <close_stdout@@Base+0xaf8>
   13bfc:	pop	{r4, r5, r6, r7}
   13c00:	bx	lr
   13c04:	ldr	ip, [r6, #4]
   13c08:	mov	r0, r4
   13c0c:	b	13bf0 <close_stdout@@Base+0xb50>
   13c10:	mov	r0, #0
   13c14:	b	13bfc <close_stdout@@Base+0xb5c>
   13c18:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   13c1c:	mov	r7, r2
   13c20:	ldr	r8, [r0]
   13c24:	mov	r9, r0
   13c28:	ldr	r2, [r0, #4]
   13c2c:	mov	r6, r1
   13c30:	mov	r5, #0
   13c34:	cmp	r2, r8
   13c38:	bls	13c88 <close_stdout@@Base+0xbe8>
   13c3c:	ldr	r3, [r8]
   13c40:	cmp	r3, #0
   13c44:	beq	13c7c <close_stdout@@Base+0xbdc>
   13c48:	mov	r0, r3
   13c4c:	mov	r4, r8
   13c50:	b	13c58 <close_stdout@@Base+0xbb8>
   13c54:	ldr	r0, [r4]
   13c58:	mov	r1, r7
   13c5c:	blx	r6
   13c60:	cmp	r0, #0
   13c64:	beq	13c88 <close_stdout@@Base+0xbe8>
   13c68:	ldr	r4, [r4, #4]
   13c6c:	add	r5, r5, #1
   13c70:	cmp	r4, #0
   13c74:	bne	13c54 <close_stdout@@Base+0xbb4>
   13c78:	ldr	r2, [r9, #4]
   13c7c:	add	r8, r8, #8
   13c80:	cmp	r2, r8
   13c84:	bhi	13c3c <close_stdout@@Base+0xb9c>
   13c88:	mov	r0, r5
   13c8c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13c90:	push	{r3, r4, r5, lr}
   13c94:	mov	r5, r1
   13c98:	ldrb	r3, [r0]
   13c9c:	cmp	r3, #0
   13ca0:	beq	13cd0 <close_stdout@@Base+0xc30>
   13ca4:	mov	r4, r0
   13ca8:	mov	r1, #0
   13cac:	rsb	r0, r1, r1, lsl #5
   13cb0:	mov	r1, r5
   13cb4:	add	r0, r3, r0
   13cb8:	bl	19ea0 <fts_children@@Base+0x1004>
   13cbc:	ldrb	r3, [r4, #1]!
   13cc0:	cmp	r3, #0
   13cc4:	bne	13cac <close_stdout@@Base+0xc0c>
   13cc8:	mov	r0, r1
   13ccc:	pop	{r3, r4, r5, pc}
   13cd0:	mov	r1, r3
   13cd4:	b	13cc8 <close_stdout@@Base+0xc28>
   13cd8:	push	{r4}		; (str r4, [sp, #-4]!)
   13cdc:	mov	ip, r0
   13ce0:	ldr	r4, [pc, #24]	; 13d00 <close_stdout@@Base+0xc60>
   13ce4:	add	r4, pc, r4
   13ce8:	ldm	r4!, {r0, r1, r2, r3}
   13cec:	ldr	r4, [r4]
   13cf0:	stmia	ip!, {r0, r1, r2, r3}
   13cf4:	str	r4, [ip]
   13cf8:	pop	{r4}		; (ldr r4, [sp], #4)
   13cfc:	bx	lr
   13d00:	andeq	r7, r0, r8, asr #1
   13d04:	push	{r4, r5, r6, r7, r8, lr}
   13d08:	subs	r8, r2, #0
   13d0c:	mov	r7, r0
   13d10:	mov	r5, r1
   13d14:	mov	r6, r3
   13d18:	beq	13e0c <close_stdout@@Base+0xd6c>
   13d1c:	cmp	r6, #0
   13d20:	beq	13e00 <close_stdout@@Base+0xd60>
   13d24:	mov	r0, #40	; 0x28
   13d28:	bl	119b8 <malloc@plt>
   13d2c:	subs	r4, r0, #0
   13d30:	beq	13e24 <close_stdout@@Base+0xd84>
   13d34:	cmp	r5, #0
   13d38:	beq	13e18 <close_stdout@@Base+0xd78>
   13d3c:	mov	r0, r4
   13d40:	str	r5, [r0, #20]!
   13d44:	bl	13610 <close_stdout@@Base+0x570>
   13d48:	cmp	r0, #0
   13d4c:	beq	13df0 <close_stdout@@Base+0xd50>
   13d50:	ldrb	r3, [r5, #16]
   13d54:	vldr	s15, [r5, #8]
   13d58:	cmp	r3, #0
   13d5c:	bne	13d84 <close_stdout@@Base+0xce4>
   13d60:	vmov	s14, r7
   13d64:	vcvt.f32.u32	s13, s14
   13d68:	vldr	s14, [pc, #188]	; 13e2c <close_stdout@@Base+0xd8c>
   13d6c:	vdiv.f32	s15, s13, s15
   13d70:	vcmpe.f32	s15, s14
   13d74:	vmrs	APSR_nzcv, fpscr
   13d78:	bge	13de8 <close_stdout@@Base+0xd48>
   13d7c:	vcvt.u32.f32	s15, s15
   13d80:	vmov	r7, s15
   13d84:	mov	r0, r7
   13d88:	bl	13410 <close_stdout@@Base+0x370>
   13d8c:	cmn	r0, #-1073741823	; 0xc0000001
   13d90:	mov	r5, r0
   13d94:	bhi	13de8 <close_stdout@@Base+0xd48>
   13d98:	cmp	r0, #0
   13d9c:	str	r0, [r4, #8]
   13da0:	beq	13df0 <close_stdout@@Base+0xd50>
   13da4:	mov	r1, #8
   13da8:	bl	117f0 <calloc@plt>
   13dac:	cmp	r0, #0
   13db0:	str	r0, [r4]
   13db4:	beq	13df0 <close_stdout@@Base+0xd50>
   13db8:	ldr	r3, [sp, #24]
   13dbc:	mov	r2, #0
   13dc0:	add	r5, r0, r5, lsl #3
   13dc4:	str	r8, [r4, #24]
   13dc8:	str	r5, [r4, #4]
   13dcc:	mov	r0, r4
   13dd0:	str	r6, [r4, #28]
   13dd4:	str	r3, [r4, #32]
   13dd8:	str	r2, [r4, #12]
   13ddc:	str	r2, [r4, #16]
   13de0:	str	r2, [r4, #36]	; 0x24
   13de4:	pop	{r4, r5, r6, r7, r8, pc}
   13de8:	mov	r3, #0
   13dec:	str	r3, [r4, #8]
   13df0:	mov	r0, r4
   13df4:	bl	1185c <free@plt>
   13df8:	mov	r0, #0
   13dfc:	pop	{r4, r5, r6, r7, r8, pc}
   13e00:	ldr	r6, [pc, #40]	; 13e30 <close_stdout@@Base+0xd90>
   13e04:	add	r6, pc, r6
   13e08:	b	13d24 <close_stdout@@Base+0xc84>
   13e0c:	ldr	r8, [pc, #32]	; 13e34 <close_stdout@@Base+0xd94>
   13e10:	add	r8, pc, r8
   13e14:	b	13d1c <close_stdout@@Base+0xc7c>
   13e18:	ldr	r5, [pc, #24]	; 13e38 <close_stdout@@Base+0xd98>
   13e1c:	add	r5, pc, r5
   13e20:	b	13d3c <close_stdout@@Base+0xc9c>
   13e24:	mov	r0, r4
   13e28:	pop	{r4, r5, r6, r7, r8, pc}
   13e2c:	svcmi	0x00800000
   13e30:			; <UNDEFINED> instruction: 0xfffff6c4
   13e34:			; <UNDEFINED> instruction: 0xfffff6a4
   13e38:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   13e3c:	push	{r4, r5, r6, r7, r8, lr}
   13e40:	mov	r5, r0
   13e44:	ldr	r7, [r0]
   13e48:	ldr	r3, [r0, #4]
   13e4c:	cmp	r7, r3
   13e50:	addcc	r7, r7, #8
   13e54:	movcc	r6, #0
   13e58:	bcs	13ed8 <close_stdout@@Base+0xe38>
   13e5c:	ldr	r2, [r7, #-8]
   13e60:	mov	r8, r7
   13e64:	cmp	r2, #0
   13e68:	beq	13ecc <close_stdout@@Base+0xe2c>
   13e6c:	ldr	r4, [r7, #-4]
   13e70:	cmp	r4, #0
   13e74:	beq	13eac <close_stdout@@Base+0xe0c>
   13e78:	ldr	r3, [r5, #32]
   13e7c:	cmp	r3, #0
   13e80:	beq	13e8c <close_stdout@@Base+0xdec>
   13e84:	ldr	r0, [r4]
   13e88:	blx	r3
   13e8c:	ldr	r3, [r4, #4]
   13e90:	str	r6, [r4]
   13e94:	ldr	r2, [r5, #36]	; 0x24
   13e98:	cmp	r3, #0
   13e9c:	str	r2, [r4, #4]
   13ea0:	str	r4, [r5, #36]	; 0x24
   13ea4:	mov	r4, r3
   13ea8:	bne	13e78 <close_stdout@@Base+0xdd8>
   13eac:	ldr	r3, [r5, #32]
   13eb0:	cmp	r3, #0
   13eb4:	beq	13ec0 <close_stdout@@Base+0xe20>
   13eb8:	ldr	r0, [r7, #-8]
   13ebc:	blx	r3
   13ec0:	str	r6, [r7, #-8]
   13ec4:	str	r6, [r7, #-4]
   13ec8:	ldr	r3, [r5, #4]
   13ecc:	cmp	r3, r8
   13ed0:	add	r7, r7, #8
   13ed4:	bhi	13e5c <close_stdout@@Base+0xdbc>
   13ed8:	mov	r3, #0
   13edc:	str	r3, [r5, #12]
   13ee0:	str	r3, [r5, #16]
   13ee4:	pop	{r4, r5, r6, r7, r8, pc}
   13ee8:	push	{r3, r4, r5, r6, r7, lr}
   13eec:	mov	r5, r0
   13ef0:	ldr	r3, [r0, #32]
   13ef4:	cmp	r3, #0
   13ef8:	beq	13f08 <close_stdout@@Base+0xe68>
   13efc:	ldr	r3, [r0, #16]
   13f00:	cmp	r3, #0
   13f04:	bne	13f84 <close_stdout@@Base+0xee4>
   13f08:	ldr	r3, [r5, #4]
   13f0c:	ldr	r6, [r5]
   13f10:	cmp	r6, r3
   13f14:	bcs	13f50 <close_stdout@@Base+0xeb0>
   13f18:	add	r6, r6, #8
   13f1c:	ldr	r0, [r6, #-4]
   13f20:	mov	r7, r6
   13f24:	cmp	r0, #0
   13f28:	beq	13f44 <close_stdout@@Base+0xea4>
   13f2c:	ldr	r4, [r0, #4]
   13f30:	bl	1185c <free@plt>
   13f34:	cmp	r4, #0
   13f38:	mov	r0, r4
   13f3c:	bne	13f2c <close_stdout@@Base+0xe8c>
   13f40:	ldr	r3, [r5, #4]
   13f44:	cmp	r7, r3
   13f48:	add	r6, r6, #8
   13f4c:	bcc	13f1c <close_stdout@@Base+0xe7c>
   13f50:	ldr	r0, [r5, #36]	; 0x24
   13f54:	cmp	r0, #0
   13f58:	beq	13f70 <close_stdout@@Base+0xed0>
   13f5c:	ldr	r4, [r0, #4]
   13f60:	bl	1185c <free@plt>
   13f64:	cmp	r4, #0
   13f68:	mov	r0, r4
   13f6c:	bne	13f5c <close_stdout@@Base+0xebc>
   13f70:	ldr	r0, [r5]
   13f74:	bl	1185c <free@plt>
   13f78:	mov	r0, r5
   13f7c:	pop	{r3, r4, r5, r6, r7, lr}
   13f80:	b	1185c <free@plt>
   13f84:	ldr	r6, [r0]
   13f88:	ldr	r3, [r0, #4]
   13f8c:	cmp	r6, r3
   13f90:	bcs	13f50 <close_stdout@@Base+0xeb0>
   13f94:	ldr	r0, [r6]
   13f98:	cmp	r0, #0
   13f9c:	movne	r4, r6
   13fa0:	bne	13fac <close_stdout@@Base+0xf0c>
   13fa4:	b	13fc4 <close_stdout@@Base+0xf24>
   13fa8:	ldr	r0, [r4]
   13fac:	ldr	r3, [r5, #32]
   13fb0:	blx	r3
   13fb4:	ldr	r4, [r4, #4]
   13fb8:	cmp	r4, #0
   13fbc:	bne	13fa8 <close_stdout@@Base+0xf08>
   13fc0:	ldr	r3, [r5, #4]
   13fc4:	add	r6, r6, #8
   13fc8:	cmp	r3, r6
   13fcc:	bhi	13f94 <close_stdout@@Base+0xef4>
   13fd0:	b	13f0c <close_stdout@@Base+0xe6c>
   13fd4:	ldr	r3, [pc, #392]	; 14164 <close_stdout@@Base+0x10c4>
   13fd8:	ldr	r2, [pc, #392]	; 14168 <close_stdout@@Base+0x10c8>
   13fdc:	add	r3, pc, r3
   13fe0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fe4:	sub	sp, sp, #52	; 0x34
   13fe8:	ldr	r5, [r0, #20]
   13fec:	mov	r4, r0
   13ff0:	ldr	r6, [r3, r2]
   13ff4:	vldr	s15, [r5, #8]
   13ff8:	ldrb	r2, [r5, #16]
   13ffc:	ldr	r3, [r6]
   14000:	cmp	r2, #0
   14004:	str	r3, [sp, #44]	; 0x2c
   14008:	bne	14030 <close_stdout@@Base+0xf90>
   1400c:	vmov	s14, r1
   14010:	vcvt.f32.u32	s13, s14
   14014:	vldr	s14, [pc, #324]	; 14160 <close_stdout@@Base+0x10c0>
   14018:	vdiv.f32	s15, s13, s15
   1401c:	vcmpe.f32	s15, s14
   14020:	vmrs	APSR_nzcv, fpscr
   14024:	bge	14128 <close_stdout@@Base+0x1088>
   14028:	vcvt.u32.f32	s15, s15
   1402c:	vmov	r1, s15
   14030:	mov	r0, r1
   14034:	bl	13410 <close_stdout@@Base+0x370>
   14038:	sub	r3, r0, #1
   1403c:	mov	r7, r0
   14040:	cmn	r3, #-1073741822	; 0xc0000002
   14044:	bhi	14128 <close_stdout@@Base+0x1088>
   14048:	ldr	r3, [r4, #8]
   1404c:	cmp	r3, r0
   14050:	beq	14108 <close_stdout@@Base+0x1068>
   14054:	mov	r1, #8
   14058:	bl	117f0 <calloc@plt>
   1405c:	cmp	r0, #0
   14060:	mov	r3, r0
   14064:	str	r0, [sp, #4]
   14068:	beq	14128 <close_stdout@@Base+0x1088>
   1406c:	ldr	fp, [r4, #24]
   14070:	add	r8, sp, #4
   14074:	ldr	sl, [r4, #28]
   14078:	mov	ip, #0
   1407c:	ldr	r9, [r4, #32]
   14080:	mov	r0, r8
   14084:	ldr	lr, [r4, #36]	; 0x24
   14088:	mov	r2, ip
   1408c:	mov	r1, r4
   14090:	add	r3, r3, r7, lsl #3
   14094:	str	r5, [sp, #24]
   14098:	str	r7, [sp, #12]
   1409c:	str	r3, [sp, #8]
   140a0:	str	fp, [sp, #28]
   140a4:	str	sl, [sp, #32]
   140a8:	str	r9, [sp, #36]	; 0x24
   140ac:	str	lr, [sp, #40]	; 0x28
   140b0:	str	ip, [sp, #16]
   140b4:	str	ip, [sp, #20]
   140b8:	bl	136d0 <close_stdout@@Base+0x630>
   140bc:	subs	r5, r0, #0
   140c0:	bne	14130 <close_stdout@@Base+0x1090>
   140c4:	ldr	r3, [sp, #40]	; 0x28
   140c8:	mov	r0, r4
   140cc:	mov	r1, r8
   140d0:	mov	r2, #1
   140d4:	str	r3, [r4, #36]	; 0x24
   140d8:	bl	136d0 <close_stdout@@Base+0x630>
   140dc:	cmp	r0, #0
   140e0:	beq	1415c <close_stdout@@Base+0x10bc>
   140e4:	mov	r0, r4
   140e8:	mov	r1, r8
   140ec:	mov	r2, r5
   140f0:	bl	136d0 <close_stdout@@Base+0x630>
   140f4:	cmp	r0, #0
   140f8:	beq	1415c <close_stdout@@Base+0x10bc>
   140fc:	ldr	r0, [sp, #4]
   14100:	bl	1185c <free@plt>
   14104:	b	1410c <close_stdout@@Base+0x106c>
   14108:	mov	r5, #1
   1410c:	ldr	r1, [sp, #44]	; 0x2c
   14110:	mov	r0, r5
   14114:	ldr	r3, [r6]
   14118:	cmp	r1, r3
   1411c:	bne	14158 <close_stdout@@Base+0x10b8>
   14120:	add	sp, sp, #52	; 0x34
   14124:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14128:	mov	r5, #0
   1412c:	b	1410c <close_stdout@@Base+0x106c>
   14130:	ldr	r0, [r4]
   14134:	bl	1185c <free@plt>
   14138:	add	r0, sp, #8
   1413c:	ldr	ip, [sp, #4]
   14140:	ldm	r0, {r0, r1, r2}
   14144:	ldr	r3, [sp, #40]	; 0x28
   14148:	str	ip, [r4]
   1414c:	stmib	r4, {r0, r1, r2}
   14150:	str	r3, [r4, #36]	; 0x24
   14154:	b	1410c <close_stdout@@Base+0x106c>
   14158:	bl	118b0 <__stack_chk_fail@plt>
   1415c:	bl	11bbc <abort@plt>
   14160:	svcmi	0x00800000
   14164:	andeq	r8, r1, ip, lsl r0
   14168:	andeq	r0, r0, ip, ror r1
   1416c:	ldr	r3, [pc, #428]	; 14320 <close_stdout@@Base+0x1280>
   14170:	ldr	ip, [pc, #428]	; 14324 <close_stdout@@Base+0x1284>
   14174:	add	r3, pc, r3
   14178:	push	{r4, r5, r6, r7, r8, lr}
   1417c:	subs	r8, r1, #0
   14180:	ldr	r4, [r3, ip]
   14184:	sub	sp, sp, #8
   14188:	mov	r5, r2
   1418c:	mov	r6, r0
   14190:	ldr	r3, [r4]
   14194:	str	r3, [sp, #4]
   14198:	beq	142d8 <close_stdout@@Base+0x1238>
   1419c:	mov	r3, #0
   141a0:	mov	r2, sp
   141a4:	bl	13514 <close_stdout@@Base+0x474>
   141a8:	cmp	r0, #0
   141ac:	beq	141d8 <close_stdout@@Base+0x1138>
   141b0:	cmp	r5, #0
   141b4:	moveq	r0, r5
   141b8:	strne	r0, [r5]
   141bc:	movne	r0, #0
   141c0:	ldr	r2, [sp, #4]
   141c4:	ldr	r3, [r4]
   141c8:	cmp	r2, r3
   141cc:	bne	14318 <close_stdout@@Base+0x1278>
   141d0:	add	sp, sp, #8
   141d4:	pop	{r4, r5, r6, r7, r8, pc}
   141d8:	vldr	s11, [r6, #8]
   141dc:	vcvt.f32.u32	s14, s11
   141e0:	ldr	r3, [r6, #20]
   141e4:	vldr	s15, [r3, #8]
   141e8:	vldr	s13, [r6, #12]
   141ec:	vmul.f32	s15, s14, s15
   141f0:	vcvt.f32.u32	s14, s13
   141f4:	vcmpe.f32	s14, s15
   141f8:	vmrs	APSR_nzcv, fpscr
   141fc:	bgt	1424c <close_stdout@@Base+0x11ac>
   14200:	ldr	r3, [sp]
   14204:	ldr	r2, [r3]
   14208:	cmp	r2, #0
   1420c:	beq	142dc <close_stdout@@Base+0x123c>
   14210:	ldr	r3, [r6, #36]	; 0x24
   14214:	cmp	r3, #0
   14218:	beq	14300 <close_stdout@@Base+0x1260>
   1421c:	ldr	r2, [r3, #4]
   14220:	str	r2, [r6, #36]	; 0x24
   14224:	str	r8, [r3]
   14228:	mov	r0, #1
   1422c:	ldr	r2, [sp]
   14230:	ldr	r1, [r2, #4]
   14234:	str	r1, [r3, #4]
   14238:	str	r3, [r2, #4]
   1423c:	ldr	r3, [r6, #16]
   14240:	add	r3, r3, r0
   14244:	str	r3, [r6, #16]
   14248:	b	141c0 <close_stdout@@Base+0x1120>
   1424c:	add	r0, r6, #20
   14250:	bl	13610 <close_stdout@@Base+0x570>
   14254:	vldr	s11, [r6, #8]
   14258:	vcvt.f32.u32	s15, s11
   1425c:	ldr	r3, [r6, #20]
   14260:	vldr	s14, [r3, #8]
   14264:	vldr	s11, [r6, #12]
   14268:	vmul.f32	s13, s14, s15
   1426c:	vcvt.f32.u32	s12, s11
   14270:	vcmpe.f32	s12, s13
   14274:	vmrs	APSR_nzcv, fpscr
   14278:	ble	14200 <close_stdout@@Base+0x1160>
   1427c:	ldrb	r2, [r3, #16]
   14280:	cmp	r2, #0
   14284:	vldreq	s13, [r3, #12]
   14288:	vldrne	s14, [r3, #12]
   1428c:	vmuleq.f32	s15, s15, s13
   14290:	vmul.f32	s15, s14, s15
   14294:	vldr	s14, [pc, #128]	; 1431c <close_stdout@@Base+0x127c>
   14298:	vcmpe.f32	s15, s14
   1429c:	vmrs	APSR_nzcv, fpscr
   142a0:	bge	14310 <close_stdout@@Base+0x1270>
   142a4:	vcvt.u32.f32	s15, s15
   142a8:	mov	r0, r6
   142ac:	vmov	r1, s15
   142b0:	bl	13fd4 <close_stdout@@Base+0xf34>
   142b4:	cmp	r0, #0
   142b8:	beq	14310 <close_stdout@@Base+0x1270>
   142bc:	mov	r2, sp
   142c0:	mov	r0, r6
   142c4:	mov	r1, r8
   142c8:	mov	r3, #0
   142cc:	bl	13514 <close_stdout@@Base+0x474>
   142d0:	cmp	r0, #0
   142d4:	beq	14200 <close_stdout@@Base+0x1160>
   142d8:	bl	11bbc <abort@plt>
   142dc:	str	r8, [r3]
   142e0:	mov	r0, #1
   142e4:	ldr	r2, [r6, #16]
   142e8:	ldr	r3, [r6, #12]
   142ec:	add	r2, r2, r0
   142f0:	str	r2, [r6, #16]
   142f4:	add	r3, r3, r0
   142f8:	str	r3, [r6, #12]
   142fc:	b	141c0 <close_stdout@@Base+0x1120>
   14300:	mov	r0, #8
   14304:	bl	119b8 <malloc@plt>
   14308:	subs	r3, r0, #0
   1430c:	bne	14224 <close_stdout@@Base+0x1184>
   14310:	mvn	r0, #0
   14314:	b	141c0 <close_stdout@@Base+0x1120>
   14318:	bl	118b0 <__stack_chk_fail@plt>
   1431c:	svcmi	0x00800000
   14320:	andeq	r7, r1, r4, lsl #29
   14324:	andeq	r0, r0, ip, ror r1
   14328:	b	1416c <close_stdout@@Base+0x10cc>
   1432c:	ldr	r3, [pc, #100]	; 14398 <close_stdout@@Base+0x12f8>
   14330:	ldr	ip, [pc, #100]	; 1439c <close_stdout@@Base+0x12fc>
   14334:	add	r3, pc, r3
   14338:	push	{r4, r5, lr}
   1433c:	sub	sp, sp, #12
   14340:	ldr	r4, [r3, ip]
   14344:	mov	r5, r1
   14348:	mov	r2, sp
   1434c:	ldr	r3, [r4]
   14350:	str	r3, [sp, #4]
   14354:	bl	1416c <close_stdout@@Base+0x10cc>
   14358:	cmn	r0, #1
   1435c:	beq	1438c <close_stdout@@Base+0x12ec>
   14360:	cmp	r0, #0
   14364:	movne	r0, r5
   14368:	beq	14384 <close_stdout@@Base+0x12e4>
   1436c:	ldr	r2, [sp, #4]
   14370:	ldr	r3, [r4]
   14374:	cmp	r2, r3
   14378:	bne	14394 <close_stdout@@Base+0x12f4>
   1437c:	add	sp, sp, #12
   14380:	pop	{r4, r5, pc}
   14384:	ldr	r0, [sp]
   14388:	b	1436c <close_stdout@@Base+0x12cc>
   1438c:	mov	r0, #0
   14390:	b	1436c <close_stdout@@Base+0x12cc>
   14394:	bl	118b0 <__stack_chk_fail@plt>
   14398:	andeq	r7, r1, r4, asr #25
   1439c:	andeq	r0, r0, ip, ror r1
   143a0:	ldr	ip, [pc, #304]	; 144d8 <close_stdout@@Base+0x1438>
   143a4:	mov	r3, #1
   143a8:	push	{r4, r5, r6, r7, lr}
   143ac:	add	ip, pc, ip
   143b0:	ldr	lr, [pc, #292]	; 144dc <close_stdout@@Base+0x143c>
   143b4:	sub	sp, sp, #12
   143b8:	mov	r4, r0
   143bc:	mov	r2, sp
   143c0:	ldr	r5, [ip, lr]
   143c4:	ldr	ip, [r5]
   143c8:	str	ip, [sp, #4]
   143cc:	bl	13514 <close_stdout@@Base+0x474>
   143d0:	subs	r6, r0, #0
   143d4:	beq	143f4 <close_stdout@@Base+0x1354>
   143d8:	ldr	r3, [sp]
   143dc:	ldr	r2, [r4, #16]
   143e0:	sub	r2, r2, #1
   143e4:	str	r2, [r4, #16]
   143e8:	ldr	r3, [r3]
   143ec:	cmp	r3, #0
   143f0:	beq	14410 <close_stdout@@Base+0x1370>
   143f4:	ldr	r2, [sp, #4]
   143f8:	mov	r0, r6
   143fc:	ldr	r3, [r5]
   14400:	cmp	r2, r3
   14404:	bne	144d4 <close_stdout@@Base+0x1434>
   14408:	add	sp, sp, #12
   1440c:	pop	{r4, r5, r6, r7, pc}
   14410:	vldr	s12, [r4, #8]
   14414:	vcvt.f32.u32	s14, s12
   14418:	ldr	r3, [r4, #12]
   1441c:	ldr	r2, [r4, #20]
   14420:	sub	r3, r3, #1
   14424:	str	r3, [r4, #12]
   14428:	vldr	s15, [r2]
   1442c:	vmov	s13, r3
   14430:	vmul.f32	s15, s14, s15
   14434:	vcvt.f32.u32	s14, s13
   14438:	vcmpe.f32	s14, s15
   1443c:	vmrs	APSR_nzcv, fpscr
   14440:	bpl	143f4 <close_stdout@@Base+0x1354>
   14444:	add	r0, r4, #20
   14448:	bl	13610 <close_stdout@@Base+0x570>
   1444c:	vldr	s12, [r4, #8]
   14450:	vcvt.f32.u32	s15, s12
   14454:	ldr	r3, [r4, #20]
   14458:	vldr	s14, [r3]
   1445c:	vldr	s12, [r4, #12]
   14460:	vmul.f32	s14, s15, s14
   14464:	vcvt.f32.u32	s13, s12
   14468:	vcmpe.f32	s13, s14
   1446c:	vmrs	APSR_nzcv, fpscr
   14470:	bpl	143f4 <close_stdout@@Base+0x1354>
   14474:	vldr	s14, [r3, #4]
   14478:	vmul.f32	s15, s15, s14
   1447c:	ldrb	r2, [r3, #16]
   14480:	mov	r0, r4
   14484:	cmp	r2, #0
   14488:	vldreq	s14, [r3, #8]
   1448c:	vmuleq.f32	s15, s15, s14
   14490:	vcvt.u32.f32	s15, s15
   14494:	vmov	r1, s15
   14498:	bl	13fd4 <close_stdout@@Base+0xf34>
   1449c:	cmp	r0, #0
   144a0:	bne	143f4 <close_stdout@@Base+0x1354>
   144a4:	ldr	r0, [r4, #36]	; 0x24
   144a8:	cmp	r0, #0
   144ac:	bne	144b8 <close_stdout@@Base+0x1418>
   144b0:	b	144c8 <close_stdout@@Base+0x1428>
   144b4:	mov	r0, r7
   144b8:	ldr	r7, [r0, #4]
   144bc:	bl	1185c <free@plt>
   144c0:	cmp	r7, #0
   144c4:	bne	144b4 <close_stdout@@Base+0x1414>
   144c8:	mov	r3, #0
   144cc:	str	r3, [r4, #36]	; 0x24
   144d0:	b	143f4 <close_stdout@@Base+0x1354>
   144d4:	bl	118b0 <__stack_chk_fail@plt>
   144d8:	andeq	r7, r1, ip, asr #24
   144dc:	andeq	r0, r0, ip, ror r1

000144e0 <triple_hash@@Base>:
   144e0:	push	{r3, r4, r5, r6, r7, lr}
   144e4:	mov	r4, r0
   144e8:	ldr	r0, [r0]
   144ec:	mov	r6, r1
   144f0:	bl	193c8 <fts_children@@Base+0x52c>
   144f4:	ldrd	r4, [r4, #8]
   144f8:	mov	r2, r6
   144fc:	mov	r3, #0
   14500:	mov	r1, r5
   14504:	mov	r7, r5
   14508:	eor	r6, r4, r0
   1450c:	mov	r0, r6
   14510:	bl	19ec0 <fts_children@@Base+0x1024>
   14514:	mov	r0, r2
   14518:	pop	{r3, r4, r5, r6, r7, pc}
   1451c:	push	{r3, lr}
   14520:	mov	r2, r1
   14524:	mov	r3, #0
   14528:	ldrd	r0, [r0, #8]
   1452c:	bl	19ec0 <fts_children@@Base+0x1024>
   14530:	mov	r0, r2
   14534:	pop	{r3, pc}
   14538:	push	{r4, r5}
   1453c:	ldrd	r4, [r0, #8]
   14540:	ldrd	r2, [r1, #8]
   14544:	cmp	r5, r3
   14548:	cmpeq	r4, r2
   1454c:	beq	1455c <triple_hash@@Base+0x7c>
   14550:	mov	r0, #0
   14554:	pop	{r4, r5}
   14558:	bx	lr
   1455c:	ldrd	r4, [r0, #16]
   14560:	ldrd	r2, [r1, #16]
   14564:	cmp	r5, r3
   14568:	cmpeq	r4, r2
   1456c:	bne	14550 <triple_hash@@Base+0x70>
   14570:	ldr	r0, [r0]
   14574:	ldr	r1, [r1]
   14578:	pop	{r4, r5}
   1457c:	b	16394 <triple_free@@Base+0x1dc8>

00014580 <triple_compare_ino_str@@Base>:
   14580:	push	{r3, r4, r5, lr}
   14584:	ldrd	r4, [r0, #8]
   14588:	ldrd	r2, [r1, #8]
   1458c:	cmp	r5, r3
   14590:	cmpeq	r4, r2
   14594:	beq	145a0 <triple_compare_ino_str@@Base+0x20>
   14598:	mov	r0, #0
   1459c:	pop	{r3, r4, r5, pc}
   145a0:	ldrd	r4, [r0, #16]
   145a4:	ldrd	r2, [r1, #16]
   145a8:	cmp	r5, r3
   145ac:	cmpeq	r4, r2
   145b0:	bne	14598 <triple_compare_ino_str@@Base+0x18>
   145b4:	ldr	r0, [r0]
   145b8:	ldr	r1, [r1]
   145bc:	bl	11820 <strcmp@plt>
   145c0:	rsbs	r0, r0, #1
   145c4:	movcc	r0, #0
   145c8:	pop	{r3, r4, r5, pc}

000145cc <triple_free@@Base>:
   145cc:	push	{r4, lr}
   145d0:	mov	r4, r0
   145d4:	ldr	r0, [r0]
   145d8:	bl	1185c <free@plt>
   145dc:	mov	r0, r4
   145e0:	pop	{r4, lr}
   145e4:	b	1185c <free@plt>
   145e8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145ec:	mov	r5, r0
   145f0:	ldrb	r2, [r0]
   145f4:	sub	r3, r2, #48	; 0x30
   145f8:	cmp	r3, #7
   145fc:	bls	1469c <triple_free@@Base+0xd0>
   14600:	cmp	r2, #0
   14604:	moveq	r0, #16
   14608:	beq	1464c <triple_free@@Base+0x80>
   1460c:	mov	lr, r5
   14610:	mov	r1, #1
   14614:	cmp	r2, #43	; 0x2b
   14618:	moveq	r3, #1
   1461c:	beq	14630 <triple_free@@Base+0x64>
   14620:	and	r2, r2, #239	; 0xef
   14624:	subs	r2, r2, #45	; 0x2d
   14628:	rsbs	r3, r2, #0
   1462c:	adcs	r3, r3, r2
   14630:	ldrb	r2, [lr, #1]!
   14634:	add	r1, r1, r3
   14638:	cmp	r2, #0
   1463c:	bne	14614 <triple_free@@Base+0x48>
   14640:	cmn	r1, #-268435455	; 0xf0000001
   14644:	bhi	14970 <triple_free@@Base+0x3a4>
   14648:	lsl	r0, r1, #4
   1464c:	bl	16aa4 <triple_free@@Base+0x24d8>
   14650:	mov	r7, #0
   14654:	movw	r9, #4095	; 0xfff
   14658:	mov	r8, #1
   1465c:	mov	r6, #0
   14660:	mov	r3, r5
   14664:	add	r5, r5, #1
   14668:	ldrb	sl, [r3]
   1466c:	cmp	sl, #97	; 0x61
   14670:	beq	148a0 <triple_free@@Base+0x2d4>
   14674:	bls	146d4 <triple_free@@Base+0x108>
   14678:	cmp	sl, #111	; 0x6f
   1467c:	beq	148bc <triple_free@@Base+0x2f0>
   14680:	cmp	sl, #117	; 0x75
   14684:	beq	148b4 <triple_free@@Base+0x2e8>
   14688:	cmp	sl, #103	; 0x67
   1468c:	beq	148a8 <triple_free@@Base+0x2dc>
   14690:	bl	1185c <free@plt>
   14694:	mov	r0, #0
   14698:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1469c:	mov	r1, r0
   146a0:	mov	r4, #0
   146a4:	b	146bc <triple_free@@Base+0xf0>
   146a8:	ldrb	r2, [r1, #1]
   146ac:	sub	r1, r2, #48	; 0x30
   146b0:	cmp	r1, #7
   146b4:	bhi	148c8 <triple_free@@Base+0x2fc>
   146b8:	mov	r1, ip
   146bc:	add	r4, r2, r4, lsl #3
   146c0:	add	ip, r1, #1
   146c4:	sub	r4, r4, #48	; 0x30
   146c8:	cmp	r4, #4096	; 0x1000
   146cc:	bcc	146a8 <triple_free@@Base+0xdc>
   146d0:	b	14694 <triple_free@@Base+0xc8>
   146d4:	cmp	sl, #45	; 0x2d
   146d8:	beq	146ec <triple_free@@Base+0x120>
   146dc:	cmp	sl, #61	; 0x3d
   146e0:	beq	146ec <triple_free@@Base+0x120>
   146e4:	cmp	sl, #43	; 0x2b
   146e8:	bne	14690 <triple_free@@Base+0xc4>
   146ec:	add	r5, r0, r7, lsl #4
   146f0:	add	r7, r7, #1
   146f4:	add	r4, r5, #8
   146f8:	b	14758 <triple_free@@Base+0x18c>
   146fc:	cmp	ip, #111	; 0x6f
   14700:	beq	14890 <triple_free@@Base+0x2c4>
   14704:	cmp	ip, #117	; 0x75
   14708:	addeq	r3, r3, #2
   1470c:	moveq	r2, #3
   14710:	moveq	fp, #448	; 0x1c0
   14714:	bne	147ac <triple_free@@Base+0x1e0>
   14718:	cmp	r6, #0
   1471c:	strb	sl, [r4, #-8]
   14720:	strb	r2, [r4, #-7]
   14724:	str	r6, [r4, #-4]
   14728:	str	fp, [r5, #8]
   1472c:	andne	fp, fp, r6
   14730:	str	fp, [r5, #12]
   14734:	ldrb	sl, [r3]
   14738:	cmp	sl, #43	; 0x2b
   1473c:	beq	1474c <triple_free@@Base+0x180>
   14740:	and	r2, sl, #239	; 0xef
   14744:	cmp	r2, #45	; 0x2d
   14748:	bne	14950 <triple_free@@Base+0x384>
   1474c:	add	r5, r5, #16
   14750:	add	r4, r4, #16
   14754:	add	r7, r7, #1
   14758:	ldrb	ip, [r3, #1]
   1475c:	add	r1, r3, #1
   14760:	cmp	ip, #103	; 0x67
   14764:	beq	14880 <triple_free@@Base+0x2b4>
   14768:	bhi	146fc <triple_free@@Base+0x130>
   1476c:	sub	r3, ip, #48	; 0x30
   14770:	cmp	r3, #7
   14774:	movls	r2, #0
   14778:	bls	14794 <triple_free@@Base+0x1c8>
   1477c:	b	147ac <triple_free@@Base+0x1e0>
   14780:	ldrb	ip, [r1, #1]
   14784:	sub	r1, ip, #48	; 0x30
   14788:	cmp	r1, #7
   1478c:	bhi	14920 <triple_free@@Base+0x354>
   14790:	mov	r1, r3
   14794:	add	r2, ip, r2, lsl #3
   14798:	add	r3, r1, #1
   1479c:	sub	r2, r2, #48	; 0x30
   147a0:	cmp	r2, #4096	; 0x1000
   147a4:	bcc	14780 <triple_free@@Base+0x1b4>
   147a8:	b	14694 <triple_free@@Base+0xc8>
   147ac:	mov	r2, #1
   147b0:	mov	fp, #0
   147b4:	sub	ip, ip, #88	; 0x58
   147b8:	mov	r3, r1
   147bc:	cmp	ip, #32
   147c0:	addls	pc, pc, ip, lsl #2
   147c4:	b	14718 <triple_free@@Base+0x14c>
   147c8:	b	1484c <triple_free@@Base+0x280>
   147cc:	b	14718 <triple_free@@Base+0x14c>
   147d0:	b	14718 <triple_free@@Base+0x14c>
   147d4:	b	14718 <triple_free@@Base+0x14c>
   147d8:	b	14718 <triple_free@@Base+0x14c>
   147dc:	b	14718 <triple_free@@Base+0x14c>
   147e0:	b	14718 <triple_free@@Base+0x14c>
   147e4:	b	14718 <triple_free@@Base+0x14c>
   147e8:	b	14718 <triple_free@@Base+0x14c>
   147ec:	b	14718 <triple_free@@Base+0x14c>
   147f0:	b	14718 <triple_free@@Base+0x14c>
   147f4:	b	14718 <triple_free@@Base+0x14c>
   147f8:	b	14718 <triple_free@@Base+0x14c>
   147fc:	b	14718 <triple_free@@Base+0x14c>
   14800:	b	14718 <triple_free@@Base+0x14c>
   14804:	b	14718 <triple_free@@Base+0x14c>
   14808:	b	14718 <triple_free@@Base+0x14c>
   1480c:	b	14718 <triple_free@@Base+0x14c>
   14810:	b	14718 <triple_free@@Base+0x14c>
   14814:	b	14718 <triple_free@@Base+0x14c>
   14818:	b	14718 <triple_free@@Base+0x14c>
   1481c:	b	14718 <triple_free@@Base+0x14c>
   14820:	b	14718 <triple_free@@Base+0x14c>
   14824:	b	14718 <triple_free@@Base+0x14c>
   14828:	b	14718 <triple_free@@Base+0x14c>
   1482c:	b	14718 <triple_free@@Base+0x14c>
   14830:	b	14878 <triple_free@@Base+0x2ac>
   14834:	b	14870 <triple_free@@Base+0x2a4>
   14838:	b	14868 <triple_free@@Base+0x29c>
   1483c:	b	14718 <triple_free@@Base+0x14c>
   14840:	b	14718 <triple_free@@Base+0x14c>
   14844:	b	14860 <triple_free@@Base+0x294>
   14848:	b	14858 <triple_free@@Base+0x28c>
   1484c:	mov	r2, #2
   14850:	ldrb	ip, [r1, #1]!
   14854:	b	147b4 <triple_free@@Base+0x1e8>
   14858:	orr	fp, fp, #73	; 0x49
   1485c:	b	14850 <triple_free@@Base+0x284>
   14860:	orr	fp, fp, #146	; 0x92
   14864:	b	14850 <triple_free@@Base+0x284>
   14868:	orr	fp, fp, #512	; 0x200
   1486c:	b	14850 <triple_free@@Base+0x284>
   14870:	orr	fp, fp, #3072	; 0xc00
   14874:	b	14850 <triple_free@@Base+0x284>
   14878:	orr	fp, fp, #292	; 0x124
   1487c:	b	14850 <triple_free@@Base+0x284>
   14880:	add	r3, r3, #2
   14884:	mov	r2, #3
   14888:	mov	fp, #56	; 0x38
   1488c:	b	14718 <triple_free@@Base+0x14c>
   14890:	add	r3, r3, #2
   14894:	mov	r2, #3
   14898:	mov	fp, #7
   1489c:	b	14718 <triple_free@@Base+0x14c>
   148a0:	movw	r6, #4095	; 0xfff
   148a4:	b	14660 <triple_free@@Base+0x94>
   148a8:	orr	r6, r6, #1072	; 0x430
   148ac:	orr	r6, r6, #8
   148b0:	b	14660 <triple_free@@Base+0x94>
   148b4:	orr	r6, r6, #2496	; 0x9c0
   148b8:	b	14660 <triple_free@@Base+0x94>
   148bc:	orr	r6, r6, #516	; 0x204
   148c0:	orr	r6, r6, #3
   148c4:	b	14660 <triple_free@@Base+0x94>
   148c8:	cmp	r2, #0
   148cc:	bne	14694 <triple_free@@Base+0xc8>
   148d0:	rsb	ip, r5, ip
   148d4:	mov	r0, #32
   148d8:	cmp	ip, #4
   148dc:	andle	r5, r4, #3072	; 0xc00
   148e0:	movwgt	r5, #4095	; 0xfff
   148e4:	mvnle	r5, r5, lsr #10
   148e8:	mvnle	r5, r5, lsl #10
   148ec:	bl	16aa4 <triple_free@@Base+0x24d8>
   148f0:	mov	r1, #61	; 0x3d
   148f4:	mov	r2, #1
   148f8:	mov	r3, r0
   148fc:	strb	r1, [r0]
   14900:	strb	r2, [r0, #1]
   14904:	movw	r1, #4095	; 0xfff
   14908:	str	r4, [r0, #8]
   1490c:	mov	r2, #0
   14910:	str	r5, [r0, #12]
   14914:	str	r1, [r0, #4]
   14918:	strb	r2, [r3, #17]
   1491c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14920:	cmp	r6, #0
   14924:	bne	14694 <triple_free@@Base+0xc8>
   14928:	cmp	ip, #44	; 0x2c
   1492c:	cmpne	ip, #0
   14930:	bne	14694 <triple_free@@Base+0xc8>
   14934:	movw	r6, #4095	; 0xfff
   14938:	strb	sl, [r4, #-8]
   1493c:	strb	r8, [r4, #-7]
   14940:	mov	fp, r6
   14944:	str	r9, [r4, #-4]
   14948:	str	r2, [r5, #8]
   1494c:	b	14730 <triple_free@@Base+0x164>
   14950:	cmp	sl, #44	; 0x2c
   14954:	addeq	r5, r3, #1
   14958:	beq	1465c <triple_free@@Base+0x90>
   1495c:	cmp	sl, #0
   14960:	bne	14690 <triple_free@@Base+0xc4>
   14964:	add	r7, r0, r7, lsl #4
   14968:	strb	sl, [r7, #1]
   1496c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14970:	bl	16cb8 <triple_free@@Base+0x26ec>
   14974:	ldr	r3, [pc, #132]	; 14a00 <triple_free@@Base+0x434>
   14978:	mov	r1, r0
   1497c:	ldr	ip, [pc, #128]	; 14a04 <triple_free@@Base+0x438>
   14980:	mov	r0, #3
   14984:	add	r3, pc, r3
   14988:	push	{r4, r5, r6, lr}
   1498c:	sub	sp, sp, #112	; 0x70
   14990:	ldr	r4, [r3, ip]
   14994:	mov	r2, sp
   14998:	ldr	r3, [r4]
   1499c:	str	r3, [sp, #108]	; 0x6c
   149a0:	bl	11ba4 <__xstat64@plt>
   149a4:	subs	r5, r0, #0
   149a8:	movne	r0, #0
   149ac:	bne	149e4 <triple_free@@Base+0x418>
   149b0:	mov	r0, #32
   149b4:	ldr	r6, [sp, #16]
   149b8:	bl	16aa4 <triple_free@@Base+0x24d8>
   149bc:	mov	r2, #61	; 0x3d
   149c0:	mov	r1, #1
   149c4:	mov	r3, r0
   149c8:	strb	r2, [r0]
   149cc:	strb	r5, [r0, #17]
   149d0:	movw	r2, #4095	; 0xfff
   149d4:	str	r6, [r0, #8]
   149d8:	strb	r1, [r0, #1]
   149dc:	str	r2, [r3, #4]
   149e0:	str	r2, [r3, #12]
   149e4:	ldr	r2, [sp, #108]	; 0x6c
   149e8:	ldr	r3, [r4]
   149ec:	cmp	r2, r3
   149f0:	bne	149fc <triple_free@@Base+0x430>
   149f4:	add	sp, sp, #112	; 0x70
   149f8:	pop	{r4, r5, r6, pc}
   149fc:	bl	118b0 <__stack_chk_fail@plt>
   14a00:	andeq	r7, r1, r4, ror r6
   14a04:	andeq	r0, r0, ip, ror r1
   14a08:	push	{r4, r5, r6, r7, r8, r9}
   14a0c:	ubfx	r0, r0, #0, #12
   14a10:	ldrb	ip, [r3, #1]
   14a14:	ldr	r8, [sp, #24]
   14a18:	cmp	ip, #0
   14a1c:	beq	14b30 <triple_free@@Base+0x564>
   14a20:	add	r3, r3, #16
   14a24:	mvn	r2, r2
   14a28:	mov	r7, #0
   14a2c:	b	14ab0 <triple_free@@Base+0x4e4>
   14a30:	cmp	ip, #3
   14a34:	bne	14a6c <triple_free@@Base+0x4a0>
   14a38:	and	r5, r5, r0
   14a3c:	tst	r5, #292	; 0x124
   14a40:	moveq	ip, #0
   14a44:	movne	ip, #292	; 0x124
   14a48:	tst	r5, #146	; 0x92
   14a4c:	moveq	r9, #0
   14a50:	movne	r9, #146	; 0x92
   14a54:	tst	r5, #73	; 0x49
   14a58:	orr	ip, r9, ip
   14a5c:	moveq	r9, #0
   14a60:	movne	r9, #73	; 0x49
   14a64:	orr	ip, ip, r9
   14a68:	orr	r5, ip, r5
   14a6c:	cmp	r4, #0
   14a70:	ldrb	ip, [r3, #-16]
   14a74:	bic	r5, r5, r6
   14a78:	movne	r9, r4
   14a7c:	moveq	r9, r2
   14a80:	cmp	ip, #45	; 0x2d
   14a84:	and	r5, r5, r9
   14a88:	beq	14b24 <triple_free@@Base+0x558>
   14a8c:	cmp	ip, #61	; 0x3d
   14a90:	beq	14ae4 <triple_free@@Base+0x518>
   14a94:	cmp	ip, #43	; 0x2b
   14a98:	orreq	r7, r7, r5
   14a9c:	orreq	r0, r0, r5
   14aa0:	add	r3, r3, #16
   14aa4:	ldrb	ip, [r3, #-15]
   14aa8:	cmp	ip, #0
   14aac:	beq	14b14 <triple_free@@Base+0x548>
   14ab0:	cmp	r1, #0
   14ab4:	ldr	r6, [r3, #-4]
   14ab8:	ldr	r4, [r3, #-12]
   14abc:	movne	r5, #3072	; 0xc00
   14ac0:	moveq	r5, #0
   14ac4:	cmp	ip, #2
   14ac8:	bic	r6, r5, r6
   14acc:	ldr	r5, [r3, #-8]
   14ad0:	bne	14a30 <triple_free@@Base+0x464>
   14ad4:	and	ip, r0, #73	; 0x49
   14ad8:	orrs	ip, ip, r1
   14adc:	orrne	r5, r5, #73	; 0x49
   14ae0:	b	14a6c <triple_free@@Base+0x4a0>
   14ae4:	add	r3, r3, #16
   14ae8:	cmp	r4, #0
   14aec:	ldrb	ip, [r3, #-15]
   14af0:	mvnne	r4, r4
   14af4:	orr	r6, r4, r6
   14af8:	cmp	ip, #0
   14afc:	and	r0, r6, r0
   14b00:	mvn	r6, r6
   14b04:	ubfx	r6, r6, #0, #12
   14b08:	orr	r7, r7, r6
   14b0c:	orr	r0, r0, r5
   14b10:	bne	14ab0 <triple_free@@Base+0x4e4>
   14b14:	cmp	r8, #0
   14b18:	strne	r7, [r8]
   14b1c:	pop	{r4, r5, r6, r7, r8, r9}
   14b20:	bx	lr
   14b24:	orr	r7, r7, r5
   14b28:	bic	r0, r0, r5
   14b2c:	b	14aa0 <triple_free@@Base+0x4d4>
   14b30:	mov	r7, ip
   14b34:	b	14b14 <triple_free@@Base+0x548>
   14b38:	push	{r3, r4, r5, r6, r7, lr}
   14b3c:	subs	r4, r0, #0
   14b40:	ldr	r5, [pc, #172]	; 14bf4 <triple_free@@Base+0x628>
   14b44:	add	r5, pc, r5
   14b48:	beq	14bd0 <triple_free@@Base+0x604>
   14b4c:	mov	r1, #47	; 0x2f
   14b50:	bl	11afc <strrchr@plt>
   14b54:	subs	r6, r0, #0
   14b58:	beq	14bb4 <triple_free@@Base+0x5e8>
   14b5c:	add	r7, r6, #1
   14b60:	rsb	r3, r4, r7
   14b64:	cmp	r3, #6
   14b68:	ble	14bb4 <triple_free@@Base+0x5e8>
   14b6c:	ldr	r1, [pc, #132]	; 14bf8 <triple_free@@Base+0x62c>
   14b70:	sub	r0, r6, #6
   14b74:	mov	r2, #7
   14b78:	add	r1, pc, r1
   14b7c:	bl	11bb0 <strncmp@plt>
   14b80:	cmp	r0, #0
   14b84:	bne	14bb4 <triple_free@@Base+0x5e8>
   14b88:	ldr	r1, [pc, #108]	; 14bfc <triple_free@@Base+0x630>
   14b8c:	mov	r0, r7
   14b90:	mov	r2, #3
   14b94:	add	r1, pc, r1
   14b98:	bl	11bb0 <strncmp@plt>
   14b9c:	cmp	r0, #0
   14ba0:	movne	r4, r7
   14ba4:	ldreq	r3, [pc, #84]	; 14c00 <triple_free@@Base+0x634>
   14ba8:	addeq	r4, r6, #4
   14bac:	ldreq	r3, [r5, r3]
   14bb0:	streq	r4, [r3]
   14bb4:	ldr	r2, [pc, #72]	; 14c04 <triple_free@@Base+0x638>
   14bb8:	ldr	r3, [pc, #72]	; 14c08 <triple_free@@Base+0x63c>
   14bbc:	ldr	r2, [r5, r2]
   14bc0:	str	r4, [r2]
   14bc4:	ldr	r3, [r5, r3]
   14bc8:	str	r4, [r3]
   14bcc:	pop	{r3, r4, r5, r6, r7, pc}
   14bd0:	ldr	r3, [pc, #52]	; 14c0c <triple_free@@Base+0x640>
   14bd4:	mov	r1, #1
   14bd8:	ldr	r0, [pc, #48]	; 14c10 <triple_free@@Base+0x644>
   14bdc:	mov	r2, #55	; 0x37
   14be0:	ldr	r3, [r5, r3]
   14be4:	add	r0, pc, r0
   14be8:	ldr	r3, [r3]
   14bec:	bl	11928 <fwrite@plt>
   14bf0:	bl	11bbc <abort@plt>
   14bf4:			; <UNDEFINED> instruction: 0x000174b4
   14bf8:	andeq	r6, r0, ip, ror #5
   14bfc:	ldrdeq	r6, [r0], -r8
   14c00:			; <UNDEFINED> instruction: 0x000001b8
   14c04:			; <UNDEFINED> instruction: 0x000001b0
   14c08:	andeq	r0, r0, ip, lsr #3
   14c0c:	andeq	r0, r0, ip, lsl #3
   14c10:	andeq	r6, r0, r8, asr #4
   14c14:	push	{r3, lr}
   14c18:	mov	r3, r0
   14c1c:	mov	r2, #0
   14c20:	cmp	r1, #8
   14c24:	str	r2, [r3], #4
   14c28:	add	r3, r3, #4
   14c2c:	str	r2, [r0, #4]
   14c30:	str	r2, [r3], #4
   14c34:	str	r2, [r3], #4
   14c38:	str	r2, [r3], #4
   14c3c:	str	r2, [r3], #4
   14c40:	str	r2, [r3], #4
   14c44:	str	r2, [r3], #4
   14c48:	str	r2, [r3], #4
   14c4c:	str	r2, [r3], #4
   14c50:	str	r2, [r3], #4
   14c54:	str	r2, [r3]
   14c58:	beq	14c64 <triple_free@@Base+0x698>
   14c5c:	str	r1, [r0]
   14c60:	pop	{r3, pc}
   14c64:	bl	11bbc <abort@plt>
   14c68:	push	{r4, r5, r6, lr}
   14c6c:	mov	r4, r0
   14c70:	mov	r6, r1
   14c74:	mov	r0, #0
   14c78:	mov	r1, r4
   14c7c:	mov	r2, #5
   14c80:	bl	118a4 <dcgettext@plt>
   14c84:	cmp	r0, r4
   14c88:	mov	r5, r0
   14c8c:	beq	14c94 <triple_free@@Base+0x6c8>
   14c90:	pop	{r4, r5, r6, pc}
   14c94:	bl	194c4 <fts_children@@Base+0x628>
   14c98:	ldrb	r3, [r0]
   14c9c:	bic	r3, r3, #32
   14ca0:	cmp	r3, #85	; 0x55
   14ca4:	bne	14d18 <triple_free@@Base+0x74c>
   14ca8:	ldrb	r3, [r0, #1]
   14cac:	bic	r3, r3, #32
   14cb0:	cmp	r3, #84	; 0x54
   14cb4:	bne	14d04 <triple_free@@Base+0x738>
   14cb8:	ldrb	r3, [r0, #2]
   14cbc:	bic	r3, r3, #32
   14cc0:	cmp	r3, #70	; 0x46
   14cc4:	bne	14d04 <triple_free@@Base+0x738>
   14cc8:	ldrb	r3, [r0, #3]
   14ccc:	cmp	r3, #45	; 0x2d
   14cd0:	bne	14d04 <triple_free@@Base+0x738>
   14cd4:	ldrb	r3, [r0, #4]
   14cd8:	cmp	r3, #56	; 0x38
   14cdc:	bne	14d04 <triple_free@@Base+0x738>
   14ce0:	ldrb	r3, [r0, #5]
   14ce4:	cmp	r3, #0
   14ce8:	bne	14d04 <triple_free@@Base+0x738>
   14cec:	ldrb	r3, [r5]
   14cf0:	cmp	r3, #96	; 0x60
   14cf4:	beq	14d90 <triple_free@@Base+0x7c4>
   14cf8:	ldr	r0, [pc, #180]	; 14db4 <triple_free@@Base+0x7e8>
   14cfc:	add	r0, pc, r0
   14d00:	pop	{r4, r5, r6, pc}
   14d04:	cmp	r6, #7
   14d08:	beq	14d9c <triple_free@@Base+0x7d0>
   14d0c:	ldr	r0, [pc, #164]	; 14db8 <triple_free@@Base+0x7ec>
   14d10:	add	r0, pc, r0
   14d14:	pop	{r4, r5, r6, pc}
   14d18:	cmp	r3, #71	; 0x47
   14d1c:	bne	14d04 <triple_free@@Base+0x738>
   14d20:	ldrb	r3, [r0, #1]
   14d24:	bic	r3, r3, #32
   14d28:	cmp	r3, #66	; 0x42
   14d2c:	bne	14d04 <triple_free@@Base+0x738>
   14d30:	ldrb	r3, [r0, #2]
   14d34:	cmp	r3, #49	; 0x31
   14d38:	bne	14d04 <triple_free@@Base+0x738>
   14d3c:	ldrb	r3, [r0, #3]
   14d40:	cmp	r3, #56	; 0x38
   14d44:	bne	14d04 <triple_free@@Base+0x738>
   14d48:	ldrb	r3, [r0, #4]
   14d4c:	cmp	r3, #48	; 0x30
   14d50:	bne	14d04 <triple_free@@Base+0x738>
   14d54:	ldrb	r3, [r0, #5]
   14d58:	cmp	r3, #51	; 0x33
   14d5c:	bne	14d04 <triple_free@@Base+0x738>
   14d60:	ldrb	r3, [r0, #6]
   14d64:	cmp	r3, #48	; 0x30
   14d68:	bne	14d04 <triple_free@@Base+0x738>
   14d6c:	ldrb	r3, [r0, #7]
   14d70:	cmp	r3, #0
   14d74:	bne	14d04 <triple_free@@Base+0x738>
   14d78:	ldrb	r3, [r5]
   14d7c:	cmp	r3, #96	; 0x60
   14d80:	beq	14da8 <triple_free@@Base+0x7dc>
   14d84:	ldr	r0, [pc, #48]	; 14dbc <triple_free@@Base+0x7f0>
   14d88:	add	r0, pc, r0
   14d8c:	pop	{r4, r5, r6, pc}
   14d90:	ldr	r0, [pc, #40]	; 14dc0 <triple_free@@Base+0x7f4>
   14d94:	add	r0, pc, r0
   14d98:	pop	{r4, r5, r6, pc}
   14d9c:	ldr	r0, [pc, #32]	; 14dc4 <triple_free@@Base+0x7f8>
   14da0:	add	r0, pc, r0
   14da4:	pop	{r4, r5, r6, pc}
   14da8:	ldr	r0, [pc, #24]	; 14dc8 <triple_free@@Base+0x7fc>
   14dac:	add	r0, pc, r0
   14db0:	pop	{r4, r5, r6, pc}
   14db4:	muleq	r0, r4, r1
   14db8:	andeq	r6, r0, r8, lsl #3
   14dbc:	andeq	r6, r0, ip, lsl #2
   14dc0:	andeq	r6, r0, r0, lsl r1
   14dc4:	strdeq	r6, [r0], -ip
   14dc8:	strdeq	r6, [r0], -r4
   14dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dd0:	sub	sp, sp, #124	; 0x7c
   14dd4:	ldr	ip, [pc, #3304]	; 15ac4 <triple_free@@Base+0x14f8>
   14dd8:	mov	sl, r1
   14ddc:	str	r0, [sp, #40]	; 0x28
   14de0:	mov	r8, r3
   14de4:	ldr	r0, [pc, #3292]	; 15ac8 <triple_free@@Base+0x14fc>
   14de8:	add	ip, pc, ip
   14dec:	str	r2, [sp, #32]
   14df0:	ldr	r1, [sp, #164]	; 0xa4
   14df4:	mov	r3, ip
   14df8:	ldr	r0, [ip, r0]
   14dfc:	ldr	r2, [sp, #172]	; 0xac
   14e00:	ubfx	r1, r1, #1, #1
   14e04:	str	r1, [sp, #36]	; 0x24
   14e08:	str	r0, [sp, #56]	; 0x38
   14e0c:	ldr	r0, [sp, #168]	; 0xa8
   14e10:	ldr	r1, [sp, #176]	; 0xb0
   14e14:	str	r2, [sp, #72]	; 0x48
   14e18:	str	r0, [sp, #48]	; 0x30
   14e1c:	ldr	r0, [sp, #56]	; 0x38
   14e20:	str	r1, [sp, #68]	; 0x44
   14e24:	ldr	r3, [r0]
   14e28:	str	r3, [sp, #116]	; 0x74
   14e2c:	bl	11940 <__ctype_get_mb_cur_max@plt>
   14e30:	ldr	r2, [sp, #160]	; 0xa0
   14e34:	str	r0, [sp, #64]	; 0x40
   14e38:	cmp	r2, #8
   14e3c:	addls	pc, pc, r2, lsl #2
   14e40:	b	159a0 <triple_free@@Base+0x13d4>
   14e44:	b	14e68 <triple_free@@Base+0x89c>
   14e48:	b	156b8 <triple_free@@Base+0x10ec>
   14e4c:	b	156e8 <triple_free@@Base+0x111c>
   14e50:	b	15598 <triple_free@@Base+0xfcc>
   14e54:	b	155d8 <triple_free@@Base+0x100c>
   14e58:	b	15604 <triple_free@@Base+0x1038>
   14e5c:	b	15624 <triple_free@@Base+0x1058>
   14e60:	b	15624 <triple_free@@Base+0x1058>
   14e64:	b	15624 <triple_free@@Base+0x1058>
   14e68:	mov	r2, #0
   14e6c:	str	r2, [sp, #36]	; 0x24
   14e70:	mov	r9, r2
   14e74:	str	r2, [sp, #24]
   14e78:	str	r2, [sp, #28]
   14e7c:	str	r2, [sp, #52]	; 0x34
   14e80:	ldr	r0, [sp, #36]	; 0x24
   14e84:	mov	fp, #0
   14e88:	ldr	r1, [sp, #24]
   14e8c:	eor	r2, r0, #1
   14e90:	eor	r3, r1, #1
   14e94:	and	r3, r2, r3
   14e98:	and	r2, r1, r0
   14e9c:	str	r3, [sp, #44]	; 0x2c
   14ea0:	str	r2, [sp, #76]	; 0x4c
   14ea4:	cmn	r8, #1
   14ea8:	beq	15228 <triple_free@@Base+0xc5c>
   14eac:	subs	r3, fp, r8
   14eb0:	movne	r3, #1
   14eb4:	cmp	r3, #0
   14eb8:	beq	15240 <triple_free@@Base+0xc74>
   14ebc:	ldr	r3, [sp, #28]
   14ec0:	ldr	r0, [sp, #24]
   14ec4:	adds	r7, r3, #0
   14ec8:	movne	r7, #1
   14ecc:	ands	r6, r7, r0
   14ed0:	bne	1572c <triple_free@@Base+0x1160>
   14ed4:	ldr	r1, [sp, #32]
   14ed8:	add	r5, r1, fp
   14edc:	ldrb	r4, [r5]
   14ee0:	cmp	r4, #126	; 0x7e
   14ee4:	addls	pc, pc, r4, lsl #2
   14ee8:	b	154ac <triple_free@@Base+0xee0>
   14eec:	b	153b8 <triple_free@@Base+0xdec>
   14ef0:	b	154ac <triple_free@@Base+0xee0>
   14ef4:	b	154ac <triple_free@@Base+0xee0>
   14ef8:	b	154ac <triple_free@@Base+0xee0>
   14efc:	b	154ac <triple_free@@Base+0xee0>
   14f00:	b	154ac <triple_free@@Base+0xee0>
   14f04:	b	154ac <triple_free@@Base+0xee0>
   14f08:	b	153a0 <triple_free@@Base+0xdd4>
   14f0c:	b	15388 <triple_free@@Base+0xdbc>
   14f10:	b	153b0 <triple_free@@Base+0xde4>
   14f14:	b	153a8 <triple_free@@Base+0xddc>
   14f18:	b	15398 <triple_free@@Base+0xdcc>
   14f1c:	b	15390 <triple_free@@Base+0xdc4>
   14f20:	b	15354 <triple_free@@Base+0xd88>
   14f24:	b	154ac <triple_free@@Base+0xee0>
   14f28:	b	154ac <triple_free@@Base+0xee0>
   14f2c:	b	154ac <triple_free@@Base+0xee0>
   14f30:	b	154ac <triple_free@@Base+0xee0>
   14f34:	b	154ac <triple_free@@Base+0xee0>
   14f38:	b	154ac <triple_free@@Base+0xee0>
   14f3c:	b	154ac <triple_free@@Base+0xee0>
   14f40:	b	154ac <triple_free@@Base+0xee0>
   14f44:	b	154ac <triple_free@@Base+0xee0>
   14f48:	b	154ac <triple_free@@Base+0xee0>
   14f4c:	b	154ac <triple_free@@Base+0xee0>
   14f50:	b	154ac <triple_free@@Base+0xee0>
   14f54:	b	154ac <triple_free@@Base+0xee0>
   14f58:	b	154ac <triple_free@@Base+0xee0>
   14f5c:	b	154ac <triple_free@@Base+0xee0>
   14f60:	b	154ac <triple_free@@Base+0xee0>
   14f64:	b	154ac <triple_free@@Base+0xee0>
   14f68:	b	154ac <triple_free@@Base+0xee0>
   14f6c:	b	152e0 <triple_free@@Base+0xd14>
   14f70:	b	152e0 <triple_free@@Base+0xd14>
   14f74:	b	152e0 <triple_free@@Base+0xd14>
   14f78:	b	152d8 <triple_free@@Base+0xd0c>
   14f7c:	b	152e0 <triple_free@@Base+0xd14>
   14f80:	b	151b4 <triple_free@@Base+0xbe8>
   14f84:	b	152e0 <triple_free@@Base+0xd14>
   14f88:	b	15454 <triple_free@@Base+0xe88>
   14f8c:	b	152e0 <triple_free@@Base+0xd14>
   14f90:	b	152e0 <triple_free@@Base+0xd14>
   14f94:	b	152e0 <triple_free@@Base+0xd14>
   14f98:	b	151b4 <triple_free@@Base+0xbe8>
   14f9c:	b	151b4 <triple_free@@Base+0xbe8>
   14fa0:	b	151b4 <triple_free@@Base+0xbe8>
   14fa4:	b	151b4 <triple_free@@Base+0xbe8>
   14fa8:	b	151b4 <triple_free@@Base+0xbe8>
   14fac:	b	151b4 <triple_free@@Base+0xbe8>
   14fb0:	b	151b4 <triple_free@@Base+0xbe8>
   14fb4:	b	151b4 <triple_free@@Base+0xbe8>
   14fb8:	b	151b4 <triple_free@@Base+0xbe8>
   14fbc:	b	151b4 <triple_free@@Base+0xbe8>
   14fc0:	b	151b4 <triple_free@@Base+0xbe8>
   14fc4:	b	151b4 <triple_free@@Base+0xbe8>
   14fc8:	b	151b4 <triple_free@@Base+0xbe8>
   14fcc:	b	151b4 <triple_free@@Base+0xbe8>
   14fd0:	b	151b4 <triple_free@@Base+0xbe8>
   14fd4:	b	151b4 <triple_free@@Base+0xbe8>
   14fd8:	b	152e0 <triple_free@@Base+0xd14>
   14fdc:	b	152e0 <triple_free@@Base+0xd14>
   14fe0:	b	152e0 <triple_free@@Base+0xd14>
   14fe4:	b	152e0 <triple_free@@Base+0xd14>
   14fe8:	b	150e8 <triple_free@@Base+0xb1c>
   14fec:	b	154ac <triple_free@@Base+0xee0>
   14ff0:	b	151b4 <triple_free@@Base+0xbe8>
   14ff4:	b	151b4 <triple_free@@Base+0xbe8>
   14ff8:	b	151b4 <triple_free@@Base+0xbe8>
   14ffc:	b	151b4 <triple_free@@Base+0xbe8>
   15000:	b	151b4 <triple_free@@Base+0xbe8>
   15004:	b	151b4 <triple_free@@Base+0xbe8>
   15008:	b	151b4 <triple_free@@Base+0xbe8>
   1500c:	b	151b4 <triple_free@@Base+0xbe8>
   15010:	b	151b4 <triple_free@@Base+0xbe8>
   15014:	b	151b4 <triple_free@@Base+0xbe8>
   15018:	b	151b4 <triple_free@@Base+0xbe8>
   1501c:	b	151b4 <triple_free@@Base+0xbe8>
   15020:	b	151b4 <triple_free@@Base+0xbe8>
   15024:	b	151b4 <triple_free@@Base+0xbe8>
   15028:	b	151b4 <triple_free@@Base+0xbe8>
   1502c:	b	151b4 <triple_free@@Base+0xbe8>
   15030:	b	151b4 <triple_free@@Base+0xbe8>
   15034:	b	151b4 <triple_free@@Base+0xbe8>
   15038:	b	151b4 <triple_free@@Base+0xbe8>
   1503c:	b	151b4 <triple_free@@Base+0xbe8>
   15040:	b	151b4 <triple_free@@Base+0xbe8>
   15044:	b	151b4 <triple_free@@Base+0xbe8>
   15048:	b	151b4 <triple_free@@Base+0xbe8>
   1504c:	b	151b4 <triple_free@@Base+0xbe8>
   15050:	b	151b4 <triple_free@@Base+0xbe8>
   15054:	b	151b4 <triple_free@@Base+0xbe8>
   15058:	b	152e0 <triple_free@@Base+0xd14>
   1505c:	b	15438 <triple_free@@Base+0xe6c>
   15060:	b	151b4 <triple_free@@Base+0xbe8>
   15064:	b	152e0 <triple_free@@Base+0xd14>
   15068:	b	151b4 <triple_free@@Base+0xbe8>
   1506c:	b	152e0 <triple_free@@Base+0xd14>
   15070:	b	151b4 <triple_free@@Base+0xbe8>
   15074:	b	151b4 <triple_free@@Base+0xbe8>
   15078:	b	151b4 <triple_free@@Base+0xbe8>
   1507c:	b	151b4 <triple_free@@Base+0xbe8>
   15080:	b	151b4 <triple_free@@Base+0xbe8>
   15084:	b	151b4 <triple_free@@Base+0xbe8>
   15088:	b	151b4 <triple_free@@Base+0xbe8>
   1508c:	b	151b4 <triple_free@@Base+0xbe8>
   15090:	b	151b4 <triple_free@@Base+0xbe8>
   15094:	b	151b4 <triple_free@@Base+0xbe8>
   15098:	b	151b4 <triple_free@@Base+0xbe8>
   1509c:	b	151b4 <triple_free@@Base+0xbe8>
   150a0:	b	151b4 <triple_free@@Base+0xbe8>
   150a4:	b	151b4 <triple_free@@Base+0xbe8>
   150a8:	b	151b4 <triple_free@@Base+0xbe8>
   150ac:	b	151b4 <triple_free@@Base+0xbe8>
   150b0:	b	151b4 <triple_free@@Base+0xbe8>
   150b4:	b	151b4 <triple_free@@Base+0xbe8>
   150b8:	b	151b4 <triple_free@@Base+0xbe8>
   150bc:	b	151b4 <triple_free@@Base+0xbe8>
   150c0:	b	151b4 <triple_free@@Base+0xbe8>
   150c4:	b	151b4 <triple_free@@Base+0xbe8>
   150c8:	b	151b4 <triple_free@@Base+0xbe8>
   150cc:	b	151b4 <triple_free@@Base+0xbe8>
   150d0:	b	151b4 <triple_free@@Base+0xbe8>
   150d4:	b	151b4 <triple_free@@Base+0xbe8>
   150d8:	b	152c0 <triple_free@@Base+0xcf4>
   150dc:	b	152e0 <triple_free@@Base+0xd14>
   150e0:	b	152c0 <triple_free@@Base+0xcf4>
   150e4:	b	152d8 <triple_free@@Base+0xd0c>
   150e8:	ldr	r3, [sp, #160]	; 0xa0
   150ec:	cmp	r3, #2
   150f0:	beq	1597c <triple_free@@Base+0x13b0>
   150f4:	cmp	r3, #3
   150f8:	bne	151b4 <triple_free@@Base+0xbe8>
   150fc:	ldr	r1, [sp, #164]	; 0xa4
   15100:	tst	r1, #4
   15104:	beq	151b4 <triple_free@@Base+0xbe8>
   15108:	add	r3, fp, #2
   1510c:	cmp	r8, r3
   15110:	bls	151b4 <triple_free@@Base+0xbe8>
   15114:	ldrb	r2, [r5, #1]
   15118:	mov	r1, #1
   1511c:	cmp	r2, #63	; 0x3f
   15120:	bne	151b4 <triple_free@@Base+0xbe8>
   15124:	ldr	r0, [sp, #32]
   15128:	ldrb	ip, [r0, r3]
   1512c:	sub	r0, ip, #33	; 0x21
   15130:	uxtb	r0, r0
   15134:	cmp	r0, #29
   15138:	bhi	151b4 <triple_free@@Base+0xbe8>
   1513c:	lsl	r1, r1, r0
   15140:	movw	r0, #20929	; 0x51c1
   15144:	movt	r0, #14336	; 0x3800
   15148:	and	r0, r1, r0
   1514c:	cmp	r0, #0
   15150:	beq	151b4 <triple_free@@Base+0xbe8>
   15154:	ldr	r1, [sp, #36]	; 0x24
   15158:	cmp	r1, #0
   1515c:	bne	152fc <triple_free@@Base+0xd30>
   15160:	cmp	r9, sl
   15164:	mov	r4, ip
   15168:	mov	fp, r3
   1516c:	ldrcc	r0, [sp, #40]	; 0x28
   15170:	strbcc	r2, [r0, r9]
   15174:	add	r2, r9, #1
   15178:	cmp	sl, r2
   1517c:	ldrhi	r0, [sp, #40]	; 0x28
   15180:	movhi	r1, #34	; 0x22
   15184:	strbhi	r1, [r0, r2]
   15188:	add	r2, r9, #2
   1518c:	cmp	sl, r2
   15190:	ldrhi	r0, [sp, #40]	; 0x28
   15194:	movhi	r1, #34	; 0x22
   15198:	strbhi	r1, [r0, r2]
   1519c:	add	r2, r9, #3
   151a0:	cmp	sl, r2
   151a4:	add	r9, r9, #4
   151a8:	ldrhi	r0, [sp, #40]	; 0x28
   151ac:	movhi	r1, #63	; 0x3f
   151b0:	strbhi	r1, [r0, r2]
   151b4:	ldr	r0, [sp, #44]	; 0x2c
   151b8:	cmp	r0, #0
   151bc:	bne	151e4 <triple_free@@Base+0xc18>
   151c0:	ldr	r1, [sp, #48]	; 0x30
   151c4:	cmp	r1, #0
   151c8:	beq	151e4 <triple_free@@Base+0xc18>
   151cc:	ubfx	r2, r4, #5, #8
   151d0:	and	r3, r4, #31
   151d4:	ldr	r2, [r1, r2, lsl #2]
   151d8:	lsr	r3, r2, r3
   151dc:	tst	r3, #1
   151e0:	bne	151ec <triple_free@@Base+0xc20>
   151e4:	cmp	r6, #0
   151e8:	beq	1520c <triple_free@@Base+0xc40>
   151ec:	ldr	r2, [sp, #36]	; 0x24
   151f0:	cmp	r2, #0
   151f4:	bne	152fc <triple_free@@Base+0xd30>
   151f8:	cmp	r9, sl
   151fc:	ldrcc	r0, [sp, #40]	; 0x28
   15200:	movcc	r3, #92	; 0x5c
   15204:	strbcc	r3, [r0, r9]
   15208:	add	r9, r9, #1
   1520c:	add	fp, fp, #1
   15210:	cmp	r9, sl
   15214:	ldrcc	r1, [sp, #40]	; 0x28
   15218:	strbcc	r4, [r1, r9]
   1521c:	cmn	r8, #1
   15220:	add	r9, r9, #1
   15224:	bne	14eac <triple_free@@Base+0x8e0>
   15228:	ldr	r2, [sp, #32]
   1522c:	ldrb	r3, [r2, fp]
   15230:	adds	r3, r3, #0
   15234:	movne	r3, #1
   15238:	cmp	r3, #0
   1523c:	bne	14ebc <triple_free@@Base+0x8f0>
   15240:	ldr	r3, [sp, #160]	; 0xa0
   15244:	cmp	r9, #0
   15248:	cmpeq	r3, #2
   1524c:	bne	1525c <triple_free@@Base+0xc90>
   15250:	ldr	r0, [sp, #36]	; 0x24
   15254:	cmp	r0, #0
   15258:	bne	152fc <triple_free@@Base+0xd30>
   1525c:	ldr	r1, [sp, #36]	; 0x24
   15260:	ldr	r2, [sp, #52]	; 0x34
   15264:	eor	r3, r1, #1
   15268:	cmp	r2, #0
   1526c:	moveq	r3, #0
   15270:	andne	r3, r3, #1
   15274:	cmp	r3, #0
   15278:	beq	152a4 <triple_free@@Base+0xcd8>
   1527c:	ldrb	r3, [r2]
   15280:	cmp	r3, #0
   15284:	beq	152a4 <triple_free@@Base+0xcd8>
   15288:	ldr	r1, [sp, #40]	; 0x28
   1528c:	cmp	sl, r9
   15290:	strbhi	r3, [r1, r9]
   15294:	ldrb	r3, [r2, #1]!
   15298:	add	r9, r9, #1
   1529c:	cmp	r3, #0
   152a0:	bne	1528c <triple_free@@Base+0xcc0>
   152a4:	cmp	r9, sl
   152a8:	movcs	r0, r9
   152ac:	ldrcc	r1, [sp, #40]	; 0x28
   152b0:	movcc	r3, #0
   152b4:	movcc	r0, r9
   152b8:	strbcc	r3, [r1, r9]
   152bc:	b	15338 <triple_free@@Base+0xd6c>
   152c0:	cmn	r8, #1
   152c4:	beq	1598c <triple_free@@Base+0x13c0>
   152c8:	subs	r3, r8, #1
   152cc:	movne	r3, #1
   152d0:	cmp	r3, #0
   152d4:	bne	151b4 <triple_free@@Base+0xbe8>
   152d8:	cmp	fp, #0
   152dc:	bne	151b4 <triple_free@@Base+0xbe8>
   152e0:	ldr	r3, [sp, #36]	; 0x24
   152e4:	ldr	r0, [sp, #160]	; 0xa0
   152e8:	cmp	r0, #2
   152ec:	movne	r3, #0
   152f0:	andeq	r3, r3, #1
   152f4:	cmp	r3, #0
   152f8:	beq	151b4 <triple_free@@Base+0xbe8>
   152fc:	ldr	r2, [sp, #164]	; 0xa4
   15300:	mov	ip, #0
   15304:	ldr	r0, [sp, #160]	; 0xa0
   15308:	bic	r3, r2, #2
   1530c:	ldr	r1, [sp, #72]	; 0x48
   15310:	ldr	r2, [sp, #68]	; 0x44
   15314:	stm	sp, {r0, r3}
   15318:	mov	r3, r8
   1531c:	str	r1, [sp, #12]
   15320:	mov	r1, sl
   15324:	str	r2, [sp, #16]
   15328:	ldr	r0, [sp, #40]	; 0x28
   1532c:	ldr	r2, [sp, #32]
   15330:	str	ip, [sp, #8]
   15334:	bl	14dcc <triple_free@@Base+0x800>
   15338:	ldr	r1, [sp, #56]	; 0x38
   1533c:	ldr	r2, [sp, #116]	; 0x74
   15340:	ldr	r3, [r1]
   15344:	cmp	r2, r3
   15348:	bne	15a7c <triple_free@@Base+0x14b0>
   1534c:	add	sp, sp, #124	; 0x7c
   15350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15354:	mov	r3, #114	; 0x72
   15358:	ldr	r2, [sp, #36]	; 0x24
   1535c:	ldr	r0, [sp, #160]	; 0xa0
   15360:	cmp	r0, #2
   15364:	movne	r2, #0
   15368:	andeq	r2, r2, #1
   1536c:	cmp	r2, #0
   15370:	bne	152fc <triple_free@@Base+0xd30>
   15374:	ldr	r1, [sp, #24]
   15378:	cmp	r1, #0
   1537c:	beq	151b4 <triple_free@@Base+0xbe8>
   15380:	mov	r4, r3
   15384:	b	151ec <triple_free@@Base+0xc20>
   15388:	mov	r3, #98	; 0x62
   1538c:	b	15374 <triple_free@@Base+0xda8>
   15390:	mov	r3, #102	; 0x66
   15394:	b	15374 <triple_free@@Base+0xda8>
   15398:	mov	r3, #118	; 0x76
   1539c:	b	15374 <triple_free@@Base+0xda8>
   153a0:	mov	r3, #97	; 0x61
   153a4:	b	15374 <triple_free@@Base+0xda8>
   153a8:	mov	r3, #110	; 0x6e
   153ac:	b	15358 <triple_free@@Base+0xd8c>
   153b0:	mov	r3, #116	; 0x74
   153b4:	b	15358 <triple_free@@Base+0xd8c>
   153b8:	ldr	r2, [sp, #24]
   153bc:	cmp	r2, #0
   153c0:	beq	15968 <triple_free@@Base+0x139c>
   153c4:	ldr	r3, [sp, #36]	; 0x24
   153c8:	cmp	r3, #0
   153cc:	bne	152fc <triple_free@@Base+0xd30>
   153d0:	cmp	r9, sl
   153d4:	add	r2, r9, #1
   153d8:	ldrcc	r0, [sp, #40]	; 0x28
   153dc:	movcc	r3, #92	; 0x5c
   153e0:	strbcc	r3, [r0, r9]
   153e4:	add	r3, fp, #1
   153e8:	cmp	r8, r3
   153ec:	bls	1542c <triple_free@@Base+0xe60>
   153f0:	ldr	r1, [sp, #32]
   153f4:	ldrb	r3, [r1, r3]
   153f8:	sub	r3, r3, #48	; 0x30
   153fc:	cmp	r3, #9
   15400:	bhi	1542c <triple_free@@Base+0xe60>
   15404:	cmp	sl, r2
   15408:	ldrhi	r0, [sp, #40]	; 0x28
   1540c:	movhi	r3, #48	; 0x30
   15410:	strbhi	r3, [r0, r2]
   15414:	add	r3, r9, #2
   15418:	cmp	sl, r3
   1541c:	ldrhi	r1, [sp, #40]	; 0x28
   15420:	movhi	r2, #48	; 0x30
   15424:	strbhi	r2, [r1, r3]
   15428:	add	r2, r9, #3
   1542c:	mov	r9, r2
   15430:	mov	r4, #48	; 0x30
   15434:	b	151c0 <triple_free@@Base+0xbf4>
   15438:	ldr	r1, [sp, #76]	; 0x4c
   1543c:	cmp	r1, #0
   15440:	beq	1544c <triple_free@@Base+0xe80>
   15444:	cmp	r7, #0
   15448:	bne	1520c <triple_free@@Base+0xc40>
   1544c:	mov	r3, r4
   15450:	b	15358 <triple_free@@Base+0xd8c>
   15454:	ldr	r1, [sp, #160]	; 0xa0
   15458:	cmp	r1, #2
   1545c:	bne	151b4 <triple_free@@Base+0xbe8>
   15460:	ldr	r2, [sp, #36]	; 0x24
   15464:	cmp	r2, #0
   15468:	bne	152fc <triple_free@@Base+0xd30>
   1546c:	cmp	r9, sl
   15470:	ldrcc	r0, [sp, #40]	; 0x28
   15474:	movcc	r3, #39	; 0x27
   15478:	strbcc	r3, [r0, r9]
   1547c:	add	r3, r9, #1
   15480:	cmp	sl, r3
   15484:	ldrhi	r1, [sp, #40]	; 0x28
   15488:	movhi	r2, #92	; 0x5c
   1548c:	strbhi	r2, [r1, r3]
   15490:	add	r3, r9, #2
   15494:	cmp	sl, r3
   15498:	add	r9, r9, #3
   1549c:	ldrhi	r0, [sp, #40]	; 0x28
   154a0:	movhi	r2, #39	; 0x27
   154a4:	strbhi	r2, [r0, r3]
   154a8:	b	151b4 <triple_free@@Base+0xbe8>
   154ac:	ldr	r1, [sp, #64]	; 0x40
   154b0:	cmp	r1, #1
   154b4:	bne	157ac <triple_free@@Base+0x11e0>
   154b8:	bl	11a00 <__ctype_b_loc@plt>
   154bc:	ldr	r2, [sp, #64]	; 0x40
   154c0:	sxth	r3, r4
   154c4:	str	r2, [sp, #60]	; 0x3c
   154c8:	lsl	r3, r3, #1
   154cc:	ldr	r2, [r0]
   154d0:	ldrh	r2, [r2, r3]
   154d4:	eor	r2, r2, #16384	; 0x4000
   154d8:	ubfx	r2, r2, #14, #1
   154dc:	ldr	r1, [sp, #24]
   154e0:	ands	r2, r2, r1
   154e4:	beq	151b4 <triple_free@@Base+0xbe8>
   154e8:	ldr	r3, [sp, #60]	; 0x3c
   154ec:	mov	r0, #92	; 0x5c
   154f0:	ldr	r7, [sp, #36]	; 0x24
   154f4:	add	r1, r3, fp
   154f8:	str	r8, [sp, #60]	; 0x3c
   154fc:	ldr	r3, [sp, #40]	; 0x28
   15500:	b	15564 <triple_free@@Base+0xf98>
   15504:	cmp	r7, #0
   15508:	bne	159a4 <triple_free@@Base+0x13d8>
   1550c:	add	ip, r9, #1
   15510:	cmp	r9, sl
   15514:	strbcc	r0, [r3, r9]
   15518:	cmp	sl, ip
   1551c:	lsrhi	r8, r4, #6
   15520:	addhi	r8, r8, #48	; 0x30
   15524:	strbhi	r8, [r3, ip]
   15528:	add	ip, r9, #2
   1552c:	add	r9, r9, #3
   15530:	cmp	sl, ip
   15534:	ubfxhi	r8, r4, #3, #3
   15538:	and	r4, r4, #7
   1553c:	add	r4, r4, #48	; 0x30
   15540:	addhi	r8, r8, #48	; 0x30
   15544:	strbhi	r8, [r3, ip]
   15548:	add	fp, fp, #1
   1554c:	cmp	r1, fp
   15550:	bls	15590 <triple_free@@Base+0xfc4>
   15554:	cmp	r9, sl
   15558:	strbcc	r4, [r3, r9]
   1555c:	ldrb	r4, [r5, #1]!
   15560:	add	r9, r9, #1
   15564:	cmp	r2, #0
   15568:	bne	15504 <triple_free@@Base+0xf38>
   1556c:	cmp	r6, #0
   15570:	beq	15548 <triple_free@@Base+0xf7c>
   15574:	add	fp, fp, #1
   15578:	cmp	r9, sl
   1557c:	strbcc	r0, [r3, r9]
   15580:	cmp	r1, fp
   15584:	add	r9, r9, #1
   15588:	mov	r6, #0
   1558c:	bhi	15554 <triple_free@@Base+0xf88>
   15590:	ldr	r8, [sp, #60]	; 0x3c
   15594:	b	15210 <triple_free@@Base+0xc44>
   15598:	ldr	r3, [sp, #36]	; 0x24
   1559c:	cmp	r3, #0
   155a0:	bne	15aa4 <triple_free@@Base+0x14d8>
   155a4:	cmp	sl, #0
   155a8:	beq	159bc <triple_free@@Base+0x13f0>
   155ac:	ldr	r1, [sp, #40]	; 0x28
   155b0:	mov	r0, #1
   155b4:	ldr	r2, [pc, #1296]	; 15acc <triple_free@@Base+0x1500>
   155b8:	mov	r3, #34	; 0x22
   155bc:	str	r0, [sp, #24]
   155c0:	mov	r9, r0
   155c4:	add	r2, pc, r2
   155c8:	str	r0, [sp, #28]
   155cc:	strb	r3, [r1]
   155d0:	str	r2, [sp, #52]	; 0x34
   155d4:	b	14e80 <triple_free@@Base+0x8b4>
   155d8:	ldr	r3, [pc, #1264]	; 15ad0 <triple_free@@Base+0x1504>
   155dc:	mov	r2, #1
   155e0:	mov	r0, #3
   155e4:	str	r2, [sp, #36]	; 0x24
   155e8:	add	r3, pc, r3
   155ec:	str	r2, [sp, #24]
   155f0:	str	r3, [sp, #52]	; 0x34
   155f4:	mov	r9, #0
   155f8:	str	r2, [sp, #28]
   155fc:	str	r0, [sp, #160]	; 0xa0
   15600:	b	14e80 <triple_free@@Base+0x8b4>
   15604:	mov	r0, #0
   15608:	mov	r1, #1
   1560c:	str	r0, [sp, #36]	; 0x24
   15610:	mov	r9, r0
   15614:	str	r1, [sp, #24]
   15618:	str	r0, [sp, #28]
   1561c:	str	r0, [sp, #52]	; 0x34
   15620:	b	14e80 <triple_free@@Base+0x8b4>
   15624:	ldr	r3, [sp, #160]	; 0xa0
   15628:	cmp	r3, #8
   1562c:	beq	15658 <triple_free@@Base+0x108c>
   15630:	ldr	r0, [pc, #1180]	; 15ad4 <triple_free@@Base+0x1508>
   15634:	mov	r1, r3
   15638:	add	r0, pc, r0
   1563c:	bl	14c68 <triple_free@@Base+0x69c>
   15640:	ldr	r1, [sp, #160]	; 0xa0
   15644:	str	r0, [sp, #72]	; 0x48
   15648:	ldr	r0, [pc, #1160]	; 15ad8 <triple_free@@Base+0x150c>
   1564c:	add	r0, pc, r0
   15650:	bl	14c68 <triple_free@@Base+0x69c>
   15654:	str	r0, [sp, #68]	; 0x44
   15658:	ldr	r0, [sp, #36]	; 0x24
   1565c:	cmp	r0, #0
   15660:	movne	r9, #0
   15664:	bne	1569c <triple_free@@Base+0x10d0>
   15668:	ldr	r1, [sp, #72]	; 0x48
   1566c:	ldrb	r3, [r1]
   15670:	cmp	r3, #0
   15674:	beq	15a74 <triple_free@@Base+0x14a8>
   15678:	mov	r2, r1
   1567c:	ldr	r1, [sp, #40]	; 0x28
   15680:	mov	r9, r0
   15684:	cmp	r9, sl
   15688:	strbcc	r3, [r1, r9]
   1568c:	ldrb	r3, [r2, #1]!
   15690:	add	r9, r9, #1
   15694:	cmp	r3, #0
   15698:	bne	15684 <triple_free@@Base+0x10b8>
   1569c:	ldr	r0, [sp, #68]	; 0x44
   156a0:	str	r0, [sp, #52]	; 0x34
   156a4:	bl	11a30 <strlen@plt>
   156a8:	mov	r2, #1
   156ac:	str	r2, [sp, #24]
   156b0:	str	r0, [sp, #28]
   156b4:	b	14e80 <triple_free@@Base+0x8b4>
   156b8:	ldr	r3, [pc, #1052]	; 15adc <triple_free@@Base+0x1510>
   156bc:	mov	r2, #0
   156c0:	mov	r1, #1
   156c4:	mov	r0, #2
   156c8:	add	r3, pc, r3
   156cc:	str	r1, [sp, #36]	; 0x24
   156d0:	str	r2, [sp, #24]
   156d4:	mov	r9, r2
   156d8:	str	r1, [sp, #28]
   156dc:	str	r3, [sp, #52]	; 0x34
   156e0:	str	r0, [sp, #160]	; 0xa0
   156e4:	b	14e80 <triple_free@@Base+0x8b4>
   156e8:	ldr	r3, [sp, #36]	; 0x24
   156ec:	cmp	r3, #0
   156f0:	bne	15a80 <triple_free@@Base+0x14b4>
   156f4:	cmp	sl, #0
   156f8:	beq	159dc <triple_free@@Base+0x1410>
   156fc:	ldr	r1, [sp, #40]	; 0x28
   15700:	mov	r3, #39	; 0x27
   15704:	ldr	r2, [sp, #36]	; 0x24
   15708:	mov	r0, #1
   1570c:	mov	r9, r0
   15710:	str	r0, [sp, #28]
   15714:	strb	r3, [r1]
   15718:	ldr	r3, [pc, #960]	; 15ae0 <triple_free@@Base+0x1514>
   1571c:	str	r2, [sp, #24]
   15720:	add	r3, pc, r3
   15724:	str	r3, [sp, #52]	; 0x34
   15728:	b	14e80 <triple_free@@Base+0x8b4>
   1572c:	ldr	r2, [sp, #28]
   15730:	cmp	r2, #1
   15734:	add	r4, fp, r2
   15738:	movls	r3, #0
   1573c:	movhi	r3, #1
   15740:	cmn	r8, #1
   15744:	movne	r3, #0
   15748:	cmp	r3, #0
   1574c:	beq	1575c <triple_free@@Base+0x1190>
   15750:	ldr	r0, [sp, #32]
   15754:	bl	11a30 <strlen@plt>
   15758:	mov	r8, r0
   1575c:	cmp	r8, r4
   15760:	ldrcc	r3, [sp, #32]
   15764:	movcc	r6, #0
   15768:	addcc	r5, r3, fp
   1576c:	bcc	14edc <triple_free@@Base+0x910>
   15770:	ldr	r0, [sp, #32]
   15774:	ldr	r1, [sp, #52]	; 0x34
   15778:	add	r5, r0, fp
   1577c:	ldr	r2, [sp, #28]
   15780:	mov	r0, r5
   15784:	bl	11898 <memcmp@plt>
   15788:	cmp	r0, #0
   1578c:	bne	157a4 <triple_free@@Base+0x11d8>
   15790:	ldr	r1, [sp, #36]	; 0x24
   15794:	cmp	r1, #0
   15798:	bne	152fc <triple_free@@Base+0xd30>
   1579c:	mov	r6, #1
   157a0:	b	14edc <triple_free@@Base+0x910>
   157a4:	mov	r6, #0
   157a8:	b	14edc <triple_free@@Base+0x910>
   157ac:	add	r7, sp, #108	; 0x6c
   157b0:	cmn	r8, #1
   157b4:	mov	r3, #0
   157b8:	str	r3, [sp, #108]	; 0x6c
   157bc:	str	r3, [r7, #4]
   157c0:	beq	159ac <triple_free@@Base+0x13e0>
   157c4:	mov	r1, #0
   157c8:	ldr	r0, [sp, #32]
   157cc:	mov	ip, #1
   157d0:	str	r9, [sp, #88]	; 0x58
   157d4:	str	r6, [sp, #96]	; 0x60
   157d8:	mov	r9, r1
   157dc:	str	r5, [sp, #100]	; 0x64
   157e0:	mov	r6, ip
   157e4:	mov	r5, r7
   157e8:	add	r3, sp, #104	; 0x68
   157ec:	sub	r0, r0, #1
   157f0:	str	r3, [sp, #80]	; 0x50
   157f4:	str	r0, [sp, #84]	; 0x54
   157f8:	str	r1, [sp, #60]	; 0x3c
   157fc:	str	r4, [sp, #92]	; 0x5c
   15800:	ldr	r2, [sp, #32]
   15804:	add	r7, r9, fp
   15808:	add	r0, sp, #104	; 0x68
   1580c:	mov	r3, r5
   15810:	add	r4, r2, r7
   15814:	rsb	r2, r7, r8
   15818:	mov	r1, r4
   1581c:	bl	1197c <mbrtowc@plt>
   15820:	subs	r2, r0, #0
   15824:	beq	15930 <triple_free@@Base+0x1364>
   15828:	cmn	r2, #1
   1582c:	beq	15a58 <triple_free@@Base+0x148c>
   15830:	cmn	r2, #2
   15834:	beq	159fc <triple_free@@Base+0x1430>
   15838:	ldr	r3, [sp, #36]	; 0x24
   1583c:	ldr	r0, [sp, #160]	; 0xa0
   15840:	cmp	r0, #2
   15844:	movne	r3, #0
   15848:	andeq	r3, r3, #1
   1584c:	cmp	r3, #0
   15850:	beq	1590c <triple_free@@Base+0x1340>
   15854:	cmp	r2, #1
   15858:	beq	1590c <triple_free@@Base+0x1340>
   1585c:	ldr	r1, [sp, #84]	; 0x54
   15860:	add	r3, r1, r2
   15864:	add	r7, r3, r7
   15868:	ldrb	r3, [r4, #1]!
   1586c:	sub	r3, r3, #91	; 0x5b
   15870:	cmp	r3, #33	; 0x21
   15874:	addls	pc, pc, r3, lsl #2
   15878:	b	15904 <triple_free@@Base+0x1338>
   1587c:	b	152fc <triple_free@@Base+0xd30>
   15880:	b	152fc <triple_free@@Base+0xd30>
   15884:	b	15904 <triple_free@@Base+0x1338>
   15888:	b	152fc <triple_free@@Base+0xd30>
   1588c:	b	15904 <triple_free@@Base+0x1338>
   15890:	b	152fc <triple_free@@Base+0xd30>
   15894:	b	15904 <triple_free@@Base+0x1338>
   15898:	b	15904 <triple_free@@Base+0x1338>
   1589c:	b	15904 <triple_free@@Base+0x1338>
   158a0:	b	15904 <triple_free@@Base+0x1338>
   158a4:	b	15904 <triple_free@@Base+0x1338>
   158a8:	b	15904 <triple_free@@Base+0x1338>
   158ac:	b	15904 <triple_free@@Base+0x1338>
   158b0:	b	15904 <triple_free@@Base+0x1338>
   158b4:	b	15904 <triple_free@@Base+0x1338>
   158b8:	b	15904 <triple_free@@Base+0x1338>
   158bc:	b	15904 <triple_free@@Base+0x1338>
   158c0:	b	15904 <triple_free@@Base+0x1338>
   158c4:	b	15904 <triple_free@@Base+0x1338>
   158c8:	b	15904 <triple_free@@Base+0x1338>
   158cc:	b	15904 <triple_free@@Base+0x1338>
   158d0:	b	15904 <triple_free@@Base+0x1338>
   158d4:	b	15904 <triple_free@@Base+0x1338>
   158d8:	b	15904 <triple_free@@Base+0x1338>
   158dc:	b	15904 <triple_free@@Base+0x1338>
   158e0:	b	15904 <triple_free@@Base+0x1338>
   158e4:	b	15904 <triple_free@@Base+0x1338>
   158e8:	b	15904 <triple_free@@Base+0x1338>
   158ec:	b	15904 <triple_free@@Base+0x1338>
   158f0:	b	15904 <triple_free@@Base+0x1338>
   158f4:	b	15904 <triple_free@@Base+0x1338>
   158f8:	b	15904 <triple_free@@Base+0x1338>
   158fc:	b	15904 <triple_free@@Base+0x1338>
   15900:	b	152fc <triple_free@@Base+0xd30>
   15904:	cmp	r4, r7
   15908:	bne	15868 <triple_free@@Base+0x129c>
   1590c:	ldr	r0, [sp, #104]	; 0x68
   15910:	add	r9, r9, r2
   15914:	bl	11904 <iswprint@plt>
   15918:	cmp	r0, #0
   1591c:	mov	r0, r5
   15920:	moveq	r6, #0
   15924:	bl	11880 <mbsinit@plt>
   15928:	cmp	r0, #0
   1592c:	beq	15800 <triple_free@@Base+0x1234>
   15930:	mov	ip, r6
   15934:	eor	r2, ip, #1
   15938:	str	r9, [sp, #60]	; 0x3c
   1593c:	ldr	r4, [sp, #92]	; 0x5c
   15940:	uxtb	r2, r2
   15944:	ldr	r9, [sp, #88]	; 0x58
   15948:	ldr	r6, [sp, #96]	; 0x60
   1594c:	ldr	r5, [sp, #100]	; 0x64
   15950:	ldr	r3, [sp, #60]	; 0x3c
   15954:	cmp	r3, #1
   15958:	bls	154dc <triple_free@@Base+0xf10>
   1595c:	ldr	r0, [sp, #24]
   15960:	and	r2, r2, r0
   15964:	b	154e8 <triple_free@@Base+0xf1c>
   15968:	ldr	r2, [sp, #164]	; 0xa4
   1596c:	tst	r2, #1
   15970:	addne	fp, fp, #1
   15974:	bne	14ea4 <triple_free@@Base+0x8d8>
   15978:	b	151b4 <triple_free@@Base+0xbe8>
   1597c:	ldr	r0, [sp, #36]	; 0x24
   15980:	cmp	r0, #0
   15984:	beq	151b4 <triple_free@@Base+0xbe8>
   15988:	b	152fc <triple_free@@Base+0xd30>
   1598c:	ldr	r2, [sp, #32]
   15990:	ldrb	r3, [r2, #1]
   15994:	adds	r3, r3, #0
   15998:	movne	r3, #1
   1599c:	b	152d0 <triple_free@@Base+0xd04>
   159a0:	bl	11bbc <abort@plt>
   159a4:	ldr	r8, [sp, #60]	; 0x3c
   159a8:	b	152fc <triple_free@@Base+0xd30>
   159ac:	ldr	r0, [sp, #32]
   159b0:	bl	11a30 <strlen@plt>
   159b4:	mov	r8, r0
   159b8:	b	157c4 <triple_free@@Base+0x11f8>
   159bc:	ldr	r2, [pc, #288]	; 15ae4 <triple_free@@Base+0x1518>
   159c0:	mov	r1, #1
   159c4:	mov	r9, r1
   159c8:	str	r1, [sp, #24]
   159cc:	add	r2, pc, r2
   159d0:	str	r1, [sp, #28]
   159d4:	str	r2, [sp, #52]	; 0x34
   159d8:	b	14e80 <triple_free@@Base+0x8b4>
   159dc:	ldr	r2, [pc, #260]	; 15ae8 <triple_free@@Base+0x151c>
   159e0:	mov	r3, #1
   159e4:	mov	r9, r3
   159e8:	str	r3, [sp, #28]
   159ec:	add	r2, pc, r2
   159f0:	str	sl, [sp, #24]
   159f4:	str	r2, [sp, #52]	; 0x34
   159f8:	b	14e80 <triple_free@@Base+0x8b4>
   159fc:	cmp	r8, r7
   15a00:	str	r9, [sp, #60]	; 0x3c
   15a04:	mov	ip, r4
   15a08:	ldr	r6, [sp, #96]	; 0x60
   15a0c:	ldr	r9, [sp, #88]	; 0x58
   15a10:	ldr	r4, [sp, #92]	; 0x5c
   15a14:	ldr	r5, [sp, #100]	; 0x64
   15a18:	bls	15a50 <triple_free@@Base+0x1484>
   15a1c:	ldrb	r3, [ip]
   15a20:	cmp	r3, #0
   15a24:	beq	15a50 <triple_free@@Base+0x1484>
   15a28:	ldr	r3, [sp, #60]	; 0x3c
   15a2c:	b	15a3c <triple_free@@Base+0x1470>
   15a30:	ldrb	r2, [r5, r3]
   15a34:	cmp	r2, #0
   15a38:	beq	15a4c <triple_free@@Base+0x1480>
   15a3c:	add	r3, r3, #1
   15a40:	add	r2, fp, r3
   15a44:	cmp	r8, r2
   15a48:	bhi	15a30 <triple_free@@Base+0x1464>
   15a4c:	str	r3, [sp, #60]	; 0x3c
   15a50:	mov	r2, #1
   15a54:	b	15950 <triple_free@@Base+0x1384>
   15a58:	str	r9, [sp, #60]	; 0x3c
   15a5c:	mov	r2, #1
   15a60:	ldr	r4, [sp, #92]	; 0x5c
   15a64:	ldr	r6, [sp, #96]	; 0x60
   15a68:	ldr	r9, [sp, #88]	; 0x58
   15a6c:	ldr	r5, [sp, #100]	; 0x64
   15a70:	b	15950 <triple_free@@Base+0x1384>
   15a74:	ldr	r9, [sp, #36]	; 0x24
   15a78:	b	1569c <triple_free@@Base+0x10d0>
   15a7c:	bl	118b0 <__stack_chk_fail@plt>
   15a80:	ldr	r1, [pc, #100]	; 15aec <triple_free@@Base+0x1520>
   15a84:	mov	r3, #0
   15a88:	mov	r0, #1
   15a8c:	str	r3, [sp, #24]
   15a90:	add	r1, pc, r1
   15a94:	str	r0, [sp, #28]
   15a98:	mov	r9, r3
   15a9c:	str	r1, [sp, #52]	; 0x34
   15aa0:	b	14e80 <triple_free@@Base+0x8b4>
   15aa4:	ldr	r0, [pc, #68]	; 15af0 <triple_free@@Base+0x1524>
   15aa8:	mov	r3, #1
   15aac:	mov	r9, #0
   15ab0:	str	r3, [sp, #24]
   15ab4:	add	r0, pc, r0
   15ab8:	str	r3, [sp, #28]
   15abc:	str	r0, [sp, #52]	; 0x34
   15ac0:	b	14e80 <triple_free@@Base+0x8b4>
   15ac4:	andeq	r7, r1, r0, lsl r2
   15ac8:	andeq	r0, r0, ip, ror r1
   15acc:	ldrdeq	r5, [r0], -r8
   15ad0:			; <UNDEFINED> instruction: 0x000058b4
   15ad4:	andeq	r5, r0, r0, ror r8
   15ad8:	andeq	r5, r0, ip, asr #16
   15adc:	ldrdeq	r5, [r0], -r0
   15ae0:	andeq	r5, r0, r8, ror r7
   15ae4:	ldrdeq	r5, [r0], -r0
   15ae8:	andeq	r5, r0, ip, lsr #9
   15aec:	andeq	r5, r0, r8, lsl #8
   15af0:	andeq	r5, r0, r8, ror #7
   15af4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15af8:	sub	sp, sp, #44	; 0x2c
   15afc:	mov	r6, r0
   15b00:	mov	r9, r1
   15b04:	mov	sl, r2
   15b08:	mov	r4, r3
   15b0c:	bl	11a6c <__errno_location@plt>
   15b10:	ldr	fp, [pc, #412]	; 15cb4 <triple_free@@Base+0x16e8>
   15b14:	cmp	r6, #0
   15b18:	add	fp, pc, fp
   15b1c:	ldr	r5, [fp]
   15b20:	ldr	r1, [r0]
   15b24:	mov	r8, r0
   15b28:	str	r1, [sp, #36]	; 0x24
   15b2c:	blt	15cac <triple_free@@Base+0x16e0>
   15b30:	ldr	r3, [pc, #384]	; 15cb8 <triple_free@@Base+0x16ec>
   15b34:	add	r3, pc, r3
   15b38:	ldr	r3, [r3]
   15b3c:	cmp	r6, r3
   15b40:	bcc	15b94 <triple_free@@Base+0x15c8>
   15b44:	add	r7, r6, #1
   15b48:	cmn	r7, #-536870911	; 0xe0000001
   15b4c:	bhi	15cb0 <triple_free@@Base+0x16e4>
   15b50:	add	r3, fp, #4
   15b54:	cmp	r5, r3
   15b58:	beq	15c84 <triple_free@@Base+0x16b8>
   15b5c:	mov	r0, r5
   15b60:	lsl	r1, r7, #3
   15b64:	bl	16afc <triple_free@@Base+0x2530>
   15b68:	mov	r5, r0
   15b6c:	str	r0, [fp]
   15b70:	ldr	fp, [pc, #324]	; 15cbc <triple_free@@Base+0x16f0>
   15b74:	mov	r1, #0
   15b78:	add	fp, pc, fp
   15b7c:	ldr	r0, [fp]
   15b80:	rsb	r2, r0, r7
   15b84:	add	r0, r5, r0, lsl #3
   15b88:	lsl	r2, r2, #3
   15b8c:	bl	11a84 <memset@plt>
   15b90:	str	r7, [fp]
   15b94:	add	r2, r4, #8
   15b98:	str	r2, [sp, #32]
   15b9c:	ldr	r1, [r4]
   15ba0:	add	fp, r5, r6, lsl #3
   15ba4:	ldr	lr, [sp, #32]
   15ba8:	mov	r2, r9
   15bac:	ldr	r3, [r4, #4]
   15bb0:	ldr	ip, [r5, r6, lsl #3]
   15bb4:	ldr	r7, [fp, #4]
   15bb8:	orr	r3, r3, #1
   15bbc:	str	r1, [sp]
   15bc0:	str	r3, [sp, #4]
   15bc4:	mov	r1, ip
   15bc8:	str	lr, [sp, #8]
   15bcc:	mov	r0, r7
   15bd0:	ldr	lr, [r4, #40]	; 0x28
   15bd4:	str	r3, [sp, #28]
   15bd8:	mov	r3, sl
   15bdc:	str	lr, [sp, #12]
   15be0:	ldr	lr, [r4, #44]	; 0x2c
   15be4:	str	ip, [sp, #24]
   15be8:	str	lr, [sp, #16]
   15bec:	bl	14dcc <triple_free@@Base+0x800>
   15bf0:	ldr	ip, [sp, #24]
   15bf4:	cmp	ip, r0
   15bf8:	bhi	15c70 <triple_free@@Base+0x16a4>
   15bfc:	ldr	r3, [pc, #188]	; 15cc0 <triple_free@@Base+0x16f4>
   15c00:	add	r1, r0, #1
   15c04:	str	r1, [r5, r6, lsl #3]
   15c08:	add	r3, pc, r3
   15c0c:	cmp	r7, r3
   15c10:	beq	15c24 <triple_free@@Base+0x1658>
   15c14:	mov	r0, r7
   15c18:	str	r1, [sp, #24]
   15c1c:	bl	1185c <free@plt>
   15c20:	ldr	r1, [sp, #24]
   15c24:	mov	r0, r1
   15c28:	str	r1, [sp, #24]
   15c2c:	bl	16aa4 <triple_free@@Base+0x24d8>
   15c30:	ldr	r3, [sp, #28]
   15c34:	ldr	lr, [sp, #32]
   15c38:	mov	r2, r9
   15c3c:	str	r0, [fp, #4]
   15c40:	mov	r7, r0
   15c44:	ldr	ip, [r4]
   15c48:	str	r3, [sp, #4]
   15c4c:	mov	r3, sl
   15c50:	str	lr, [sp, #8]
   15c54:	str	ip, [sp]
   15c58:	ldr	ip, [r4, #40]	; 0x28
   15c5c:	ldr	r1, [sp, #24]
   15c60:	str	ip, [sp, #12]
   15c64:	ldr	ip, [r4, #44]	; 0x2c
   15c68:	str	ip, [sp, #16]
   15c6c:	bl	14dcc <triple_free@@Base+0x800>
   15c70:	ldr	r1, [sp, #36]	; 0x24
   15c74:	mov	r0, r7
   15c78:	str	r1, [r8]
   15c7c:	add	sp, sp, #44	; 0x2c
   15c80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c84:	lsl	r1, r7, #3
   15c88:	mov	r0, #0
   15c8c:	str	r3, [sp, #24]
   15c90:	bl	16afc <triple_free@@Base+0x2530>
   15c94:	ldr	r3, [sp, #24]
   15c98:	mov	r5, r0
   15c9c:	ldm	r3, {r0, r1}
   15ca0:	str	r5, [fp]
   15ca4:	stm	r5, {r0, r1}
   15ca8:	b	15b70 <triple_free@@Base+0x15a4>
   15cac:	bl	11bbc <abort@plt>
   15cb0:	bl	16cb8 <triple_free@@Base+0x26ec>
   15cb4:	andeq	r6, r1, r0, ror #13
   15cb8:	muleq	r1, r0, r6
   15cbc:	andeq	r6, r1, ip, asr #12
   15cc0:	andeq	r6, r1, ip, lsl #12
   15cc4:	push	{r4, r5, r6, lr}
   15cc8:	mov	r5, r0
   15ccc:	bl	11a6c <__errno_location@plt>
   15cd0:	cmp	r5, #0
   15cd4:	mov	r1, #48	; 0x30
   15cd8:	mov	r4, r0
   15cdc:	ldr	r0, [pc, #24]	; 15cfc <triple_free@@Base+0x1730>
   15ce0:	ldr	r6, [r4]
   15ce4:	add	r0, pc, r0
   15ce8:	add	r0, r0, #256	; 0x100
   15cec:	movne	r0, r5
   15cf0:	bl	16c78 <triple_free@@Base+0x26ac>
   15cf4:	str	r6, [r4]
   15cf8:	pop	{r4, r5, r6, pc}
   15cfc:	andeq	r6, r1, r0, lsr r5
   15d00:	cmp	r0, #0
   15d04:	beq	15d10 <triple_free@@Base+0x1744>
   15d08:	ldr	r0, [r0]
   15d0c:	bx	lr
   15d10:	ldr	r0, [pc, #12]	; 15d24 <triple_free@@Base+0x1758>
   15d14:	add	r0, pc, r0
   15d18:	add	r0, r0, #256	; 0x100
   15d1c:	ldr	r0, [r0]
   15d20:	bx	lr
   15d24:	andeq	r6, r1, r0, lsl #10
   15d28:	cmp	r0, #0
   15d2c:	beq	15d38 <triple_free@@Base+0x176c>
   15d30:	str	r1, [r0]
   15d34:	bx	lr
   15d38:	ldr	r0, [pc, #12]	; 15d4c <triple_free@@Base+0x1780>
   15d3c:	add	r0, pc, r0
   15d40:	add	r0, r0, #256	; 0x100
   15d44:	str	r1, [r0]
   15d48:	bx	lr
   15d4c:	ldrdeq	r6, [r1], -r8
   15d50:	cmp	r0, #0
   15d54:	movne	r3, r0
   15d58:	beq	15d88 <triple_free@@Base+0x17bc>
   15d5c:	lsr	ip, r1, #5
   15d60:	and	r1, r1, #31
   15d64:	add	r3, r3, ip, lsl #2
   15d68:	ldr	ip, [r3, #8]
   15d6c:	lsr	r0, ip, r1
   15d70:	eor	r2, r0, r2
   15d74:	and	r0, r0, #1
   15d78:	and	r2, r2, #1
   15d7c:	eor	ip, ip, r2, lsl r1
   15d80:	str	ip, [r3, #8]
   15d84:	bx	lr
   15d88:	ldr	r3, [pc, #8]	; 15d98 <triple_free@@Base+0x17cc>
   15d8c:	add	r3, pc, r3
   15d90:	add	r3, r3, #256	; 0x100
   15d94:	b	15d5c <triple_free@@Base+0x1790>
   15d98:	andeq	r6, r1, r8, lsl #9
   15d9c:	subs	r3, r0, #0
   15da0:	beq	15db0 <triple_free@@Base+0x17e4>
   15da4:	ldr	r0, [r3, #4]
   15da8:	str	r1, [r3, #4]
   15dac:	bx	lr
   15db0:	ldr	r3, [pc, #8]	; 15dc0 <triple_free@@Base+0x17f4>
   15db4:	add	r3, pc, r3
   15db8:	add	r3, r3, #256	; 0x100
   15dbc:	b	15da4 <triple_free@@Base+0x17d8>
   15dc0:	andeq	r6, r1, r0, ror #8
   15dc4:	cmp	r0, #0
   15dc8:	push	{r3, lr}
   15dcc:	beq	15df0 <triple_free@@Base+0x1824>
   15dd0:	cmp	r2, #0
   15dd4:	cmpne	r1, #0
   15dd8:	mov	r3, #8
   15ddc:	strne	r1, [r0, #40]	; 0x28
   15de0:	str	r3, [r0]
   15de4:	strne	r2, [r0, #44]	; 0x2c
   15de8:	popne	{r3, pc}
   15dec:	bl	11bbc <abort@plt>
   15df0:	ldr	r0, [pc, #8]	; 15e00 <triple_free@@Base+0x1834>
   15df4:	add	r0, pc, r0
   15df8:	add	r0, r0, #256	; 0x100
   15dfc:	b	15dd0 <triple_free@@Base+0x1804>
   15e00:	andeq	r6, r1, r0, lsr #8
   15e04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15e08:	sub	sp, sp, #24
   15e0c:	mov	r7, r0
   15e10:	mov	sl, r1
   15e14:	ldr	r4, [sp, #56]	; 0x38
   15e18:	mov	r9, r2
   15e1c:	mov	r8, r3
   15e20:	cmp	r4, #0
   15e24:	beq	15e78 <triple_free@@Base+0x18ac>
   15e28:	bl	11a6c <__errno_location@plt>
   15e2c:	ldr	r3, [r4]
   15e30:	add	lr, r4, #8
   15e34:	mov	r1, sl
   15e38:	mov	r2, r9
   15e3c:	ldr	r6, [r0]
   15e40:	mov	r5, r0
   15e44:	str	r3, [sp]
   15e48:	mov	r0, r7
   15e4c:	ldr	ip, [r4, #4]
   15e50:	mov	r3, r8
   15e54:	stmib	sp, {ip, lr}
   15e58:	ldr	ip, [r4, #40]	; 0x28
   15e5c:	str	ip, [sp, #12]
   15e60:	ldr	ip, [r4, #44]	; 0x2c
   15e64:	str	ip, [sp, #16]
   15e68:	bl	14dcc <triple_free@@Base+0x800>
   15e6c:	str	r6, [r5]
   15e70:	add	sp, sp, #24
   15e74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e78:	ldr	r4, [pc, #8]	; 15e88 <triple_free@@Base+0x18bc>
   15e7c:	add	r4, pc, r4
   15e80:	add	r4, r4, #256	; 0x100
   15e84:	b	15e28 <triple_free@@Base+0x185c>
   15e88:	muleq	r1, r8, r3
   15e8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e90:	subs	r4, r3, #0
   15e94:	sub	sp, sp, #36	; 0x24
   15e98:	mov	r7, r0
   15e9c:	mov	r6, r1
   15ea0:	mov	r5, r2
   15ea4:	beq	15f60 <triple_free@@Base+0x1994>
   15ea8:	bl	11a6c <__errno_location@plt>
   15eac:	ldr	r3, [r4]
   15eb0:	ldr	sl, [r4, #4]
   15eb4:	add	r9, r4, #8
   15eb8:	mov	r8, r0
   15ebc:	mov	r0, #0
   15ec0:	ldr	r2, [r8]
   15ec4:	cmp	r5, r0
   15ec8:	orreq	sl, sl, #1
   15ecc:	str	r9, [sp, #8]
   15ed0:	mov	r1, r0
   15ed4:	stm	sp, {r3, sl}
   15ed8:	mov	r3, r6
   15edc:	ldr	ip, [r4, #40]	; 0x28
   15ee0:	str	r2, [sp, #28]
   15ee4:	mov	r2, r7
   15ee8:	str	ip, [sp, #12]
   15eec:	ldr	ip, [r4, #44]	; 0x2c
   15ef0:	str	ip, [sp, #16]
   15ef4:	bl	14dcc <triple_free@@Base+0x800>
   15ef8:	add	r1, r0, #1
   15efc:	mov	fp, r0
   15f00:	str	r1, [sp, #24]
   15f04:	mov	r0, r1
   15f08:	bl	16aa4 <triple_free@@Base+0x24d8>
   15f0c:	ldr	lr, [r4]
   15f10:	str	sl, [sp, #4]
   15f14:	mov	r3, r6
   15f18:	str	r9, [sp, #8]
   15f1c:	mov	r2, r7
   15f20:	str	lr, [sp]
   15f24:	ldr	lr, [r4, #40]	; 0x28
   15f28:	ldr	r1, [sp, #24]
   15f2c:	str	lr, [sp, #12]
   15f30:	ldr	lr, [r4, #44]	; 0x2c
   15f34:	str	lr, [sp, #16]
   15f38:	str	r0, [sp, #24]
   15f3c:	bl	14dcc <triple_free@@Base+0x800>
   15f40:	ldr	r3, [sp, #28]
   15f44:	cmp	r5, #0
   15f48:	str	r3, [r8]
   15f4c:	ldr	ip, [sp, #24]
   15f50:	strne	fp, [r5]
   15f54:	mov	r0, ip
   15f58:	add	sp, sp, #36	; 0x24
   15f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f60:	ldr	r4, [pc, #8]	; 15f70 <triple_free@@Base+0x19a4>
   15f64:	add	r4, pc, r4
   15f68:	add	r4, r4, #256	; 0x100
   15f6c:	b	15ea8 <triple_free@@Base+0x18dc>
   15f70:			; <UNDEFINED> instruction: 0x000162b0
   15f74:	mov	r3, r2
   15f78:	mov	r2, #0
   15f7c:	b	15e8c <triple_free@@Base+0x18c0>
   15f80:	ldr	r2, [pc, #152]	; 16020 <triple_free@@Base+0x1a54>
   15f84:	push	{r3, r4, r5, r6, r7, lr}
   15f88:	add	r2, pc, r2
   15f8c:	ldr	r3, [pc, #144]	; 16024 <triple_free@@Base+0x1a58>
   15f90:	ldr	r6, [r2]
   15f94:	add	r3, pc, r3
   15f98:	cmp	r6, #1
   15f9c:	ldr	r7, [r3]
   15fa0:	movhi	r4, #1
   15fa4:	movhi	r5, r7
   15fa8:	bls	15fc4 <triple_free@@Base+0x19f8>
   15fac:	ldr	r0, [r5, #12]
   15fb0:	add	r4, r4, #1
   15fb4:	bl	1185c <free@plt>
   15fb8:	cmp	r4, r6
   15fbc:	add	r5, r5, #8
   15fc0:	bne	15fac <triple_free@@Base+0x19e0>
   15fc4:	ldr	r4, [pc, #92]	; 16028 <triple_free@@Base+0x1a5c>
   15fc8:	ldr	r0, [r7, #4]
   15fcc:	add	r4, pc, r4
   15fd0:	cmp	r0, r4
   15fd4:	beq	15fec <triple_free@@Base+0x1a20>
   15fd8:	bl	1185c <free@plt>
   15fdc:	ldr	r3, [pc, #72]	; 1602c <triple_free@@Base+0x1a60>
   15fe0:	mov	r2, #256	; 0x100
   15fe4:	add	r3, pc, r3
   15fe8:	stmib	r3, {r2, r4}
   15fec:	ldr	r4, [pc, #60]	; 16030 <triple_free@@Base+0x1a64>
   15ff0:	add	r4, pc, r4
   15ff4:	add	r5, r4, #4
   15ff8:	cmp	r7, r5
   15ffc:	beq	1600c <triple_free@@Base+0x1a40>
   16000:	mov	r0, r7
   16004:	bl	1185c <free@plt>
   16008:	str	r5, [r4]
   1600c:	ldr	r3, [pc, #32]	; 16034 <triple_free@@Base+0x1a68>
   16010:	mov	r2, #1
   16014:	add	r3, pc, r3
   16018:	str	r2, [r3]
   1601c:	pop	{r3, r4, r5, r6, r7, pc}
   16020:	andeq	r6, r1, ip, lsr r2
   16024:	andeq	r6, r1, r4, ror #4
   16028:	andeq	r6, r1, r8, asr #4
   1602c:	andeq	r6, r1, r4, lsl r2
   16030:	andeq	r6, r1, r8, lsl #4
   16034:			; <UNDEFINED> instruction: 0x000161b0
   16038:	ldr	r3, [pc, #12]	; 1604c <triple_free@@Base+0x1a80>
   1603c:	mvn	r2, #0
   16040:	add	r3, pc, r3
   16044:	add	r3, r3, #256	; 0x100
   16048:	b	15af4 <triple_free@@Base+0x1528>
   1604c:	ldrdeq	r6, [r1], -r4
   16050:	ldr	r3, [pc, #8]	; 16060 <triple_free@@Base+0x1a94>
   16054:	add	r3, pc, r3
   16058:	add	r3, r3, #256	; 0x100
   1605c:	b	15af4 <triple_free@@Base+0x1528>
   16060:	andeq	r6, r1, r0, asr #3
   16064:	mov	r1, r0
   16068:	mov	r0, #0
   1606c:	b	16038 <triple_free@@Base+0x1a6c>
   16070:	mov	r2, r1
   16074:	mov	r1, r0
   16078:	mov	r0, #0
   1607c:	b	16050 <triple_free@@Base+0x1a84>
   16080:	ldr	r3, [pc, #92]	; 160e4 <triple_free@@Base+0x1b18>
   16084:	ldr	ip, [pc, #92]	; 160e8 <triple_free@@Base+0x1b1c>
   16088:	add	r3, pc, r3
   1608c:	push	{r4, r5, r6, r7, lr}
   16090:	sub	sp, sp, #60	; 0x3c
   16094:	ldr	r4, [r3, ip]
   16098:	add	r5, sp, #4
   1609c:	mov	r7, r2
   160a0:	mov	r6, r0
   160a4:	mov	r0, r5
   160a8:	ldr	r3, [r4]
   160ac:	str	r3, [sp, #52]	; 0x34
   160b0:	bl	14c14 <triple_free@@Base+0x648>
   160b4:	mov	r3, r5
   160b8:	mvn	r2, #0
   160bc:	mov	r0, r6
   160c0:	mov	r1, r7
   160c4:	bl	15af4 <triple_free@@Base+0x1528>
   160c8:	ldr	r2, [sp, #52]	; 0x34
   160cc:	ldr	r3, [r4]
   160d0:	cmp	r2, r3
   160d4:	bne	160e0 <triple_free@@Base+0x1b14>
   160d8:	add	sp, sp, #60	; 0x3c
   160dc:	pop	{r4, r5, r6, r7, pc}
   160e0:	bl	118b0 <__stack_chk_fail@plt>
   160e4:	andeq	r5, r1, r0, ror pc
   160e8:	andeq	r0, r0, ip, ror r1
   160ec:	ldr	ip, [pc, #96]	; 16154 <triple_free@@Base+0x1b88>
   160f0:	push	{r4, r5, r6, r7, r8, lr}
   160f4:	add	ip, pc, ip
   160f8:	ldr	lr, [pc, #88]	; 16158 <triple_free@@Base+0x1b8c>
   160fc:	sub	sp, sp, #56	; 0x38
   16100:	mov	r8, r3
   16104:	add	r5, sp, #4
   16108:	mov	r7, r2
   1610c:	mov	r6, r0
   16110:	ldr	r4, [ip, lr]
   16114:	mov	r0, r5
   16118:	ldr	r3, [r4]
   1611c:	str	r3, [sp, #52]	; 0x34
   16120:	bl	14c14 <triple_free@@Base+0x648>
   16124:	mov	r2, r8
   16128:	mov	r3, r5
   1612c:	mov	r0, r6
   16130:	mov	r1, r7
   16134:	bl	15af4 <triple_free@@Base+0x1528>
   16138:	ldr	r2, [sp, #52]	; 0x34
   1613c:	ldr	r3, [r4]
   16140:	cmp	r2, r3
   16144:	bne	16150 <triple_free@@Base+0x1b84>
   16148:	add	sp, sp, #56	; 0x38
   1614c:	pop	{r4, r5, r6, r7, r8, pc}
   16150:	bl	118b0 <__stack_chk_fail@plt>
   16154:	andeq	r5, r1, r4, lsl #30
   16158:	andeq	r0, r0, ip, ror r1
   1615c:	mov	r2, r1
   16160:	mov	r1, r0
   16164:	mov	r0, #0
   16168:	b	16080 <triple_free@@Base+0x1ab4>
   1616c:	mov	ip, r1
   16170:	mov	r3, r2
   16174:	mov	r1, r0
   16178:	mov	r2, ip
   1617c:	mov	r0, #0
   16180:	b	160ec <triple_free@@Base+0x1b20>
   16184:	push	{r4, r5, r6, r7, r8, lr}
   16188:	mov	r5, r2
   1618c:	ldr	lr, [pc, #136]	; 1621c <triple_free@@Base+0x1c50>
   16190:	mov	r7, r0
   16194:	mov	r6, r1
   16198:	ldr	r4, [pc, #128]	; 16220 <triple_free@@Base+0x1c54>
   1619c:	add	lr, pc, lr
   161a0:	sub	sp, sp, #56	; 0x38
   161a4:	add	lr, lr, #256	; 0x100
   161a8:	ldr	r8, [pc, #116]	; 16224 <triple_free@@Base+0x1c58>
   161ac:	add	r4, pc, r4
   161b0:	add	ip, sp, #4
   161b4:	ldm	lr!, {r0, r1, r2, r3}
   161b8:	ldr	r4, [r4, r8]
   161bc:	stmia	ip!, {r0, r1, r2, r3}
   161c0:	ldm	lr!, {r0, r1, r2, r3}
   161c4:	ldr	r8, [r4]
   161c8:	stmia	ip!, {r0, r1, r2, r3}
   161cc:	ldm	lr, {r0, r1, r2, r3}
   161d0:	str	r8, [sp, #52]	; 0x34
   161d4:	stm	ip, {r0, r1, r2, r3}
   161d8:	mov	r1, r5
   161dc:	add	r5, sp, #4
   161e0:	mov	r2, #1
   161e4:	mov	r0, r5
   161e8:	bl	15d50 <triple_free@@Base+0x1784>
   161ec:	mov	r2, r6
   161f0:	mov	r3, r5
   161f4:	mov	r1, r7
   161f8:	mov	r0, #0
   161fc:	bl	15af4 <triple_free@@Base+0x1528>
   16200:	ldr	r2, [sp, #52]	; 0x34
   16204:	ldr	r3, [r4]
   16208:	cmp	r2, r3
   1620c:	bne	16218 <triple_free@@Base+0x1c4c>
   16210:	add	sp, sp, #56	; 0x38
   16214:	pop	{r4, r5, r6, r7, r8, pc}
   16218:	bl	118b0 <__stack_chk_fail@plt>
   1621c:	andeq	r6, r1, r8, ror r0
   16220:	andeq	r5, r1, ip, asr #28
   16224:	andeq	r0, r0, ip, ror r1
   16228:	mov	r2, r1
   1622c:	mvn	r1, #0
   16230:	b	16184 <triple_free@@Base+0x1bb8>
   16234:	mov	r1, #58	; 0x3a
   16238:	b	16228 <triple_free@@Base+0x1c5c>
   1623c:	mov	r2, #58	; 0x3a
   16240:	b	16184 <triple_free@@Base+0x1bb8>
   16244:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16248:	mov	r5, r2
   1624c:	ldr	lr, [pc, #144]	; 162e4 <triple_free@@Base+0x1d18>
   16250:	mov	r8, r0
   16254:	mov	r9, r1
   16258:	mov	r7, r3
   1625c:	add	lr, pc, lr
   16260:	ldr	r4, [pc, #128]	; 162e8 <triple_free@@Base+0x1d1c>
   16264:	add	lr, lr, #256	; 0x100
   16268:	sub	sp, sp, #56	; 0x38
   1626c:	ldr	sl, [pc, #120]	; 162ec <triple_free@@Base+0x1d20>
   16270:	add	r4, pc, r4
   16274:	ldm	lr!, {r0, r1, r2, r3}
   16278:	add	ip, sp, #4
   1627c:	ldr	r4, [r4, sl]
   16280:	ldr	r6, [sp, #88]	; 0x58
   16284:	stmia	ip!, {r0, r1, r2, r3}
   16288:	ldm	lr!, {r0, r1, r2, r3}
   1628c:	ldr	sl, [r4]
   16290:	stmia	ip!, {r0, r1, r2, r3}
   16294:	ldm	lr, {r0, r1, r2, r3}
   16298:	str	sl, [sp, #52]	; 0x34
   1629c:	stm	ip, {r0, r1, r2, r3}
   162a0:	mov	r2, r5
   162a4:	add	r5, sp, #4
   162a8:	mov	r1, r9
   162ac:	mov	r0, r5
   162b0:	bl	15dc4 <triple_free@@Base+0x17f8>
   162b4:	mov	r2, r6
   162b8:	mov	r3, r5
   162bc:	mov	r0, r8
   162c0:	mov	r1, r7
   162c4:	bl	15af4 <triple_free@@Base+0x1528>
   162c8:	ldr	r2, [sp, #52]	; 0x34
   162cc:	ldr	r3, [r4]
   162d0:	cmp	r2, r3
   162d4:	bne	162e0 <triple_free@@Base+0x1d14>
   162d8:	add	sp, sp, #56	; 0x38
   162dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   162e0:	bl	118b0 <__stack_chk_fail@plt>
   162e4:			; <UNDEFINED> instruction: 0x00015fb8
   162e8:	andeq	r5, r1, r8, lsl #27
   162ec:	andeq	r0, r0, ip, ror r1
   162f0:	push	{lr}		; (str lr, [sp, #-4]!)
   162f4:	sub	sp, sp, #12
   162f8:	mvn	ip, #0
   162fc:	str	ip, [sp]
   16300:	bl	16244 <triple_free@@Base+0x1c78>
   16304:	add	sp, sp, #12
   16308:	pop	{pc}		; (ldr pc, [sp], #4)
   1630c:	mov	ip, r1
   16310:	mov	r3, r2
   16314:	mov	r1, r0
   16318:	mov	r2, ip
   1631c:	mov	r0, #0
   16320:	b	162f0 <triple_free@@Base+0x1d24>
   16324:	push	{lr}		; (str lr, [sp, #-4]!)
   16328:	sub	sp, sp, #12
   1632c:	mov	lr, r1
   16330:	mov	ip, r2
   16334:	mov	r1, r0
   16338:	str	r3, [sp]
   1633c:	mov	r2, lr
   16340:	mov	r3, ip
   16344:	mov	r0, #0
   16348:	bl	16244 <triple_free@@Base+0x1c78>
   1634c:	add	sp, sp, #12
   16350:	pop	{pc}		; (ldr pc, [sp], #4)
   16354:	ldr	r3, [pc, #12]	; 16368 <triple_free@@Base+0x1d9c>
   16358:	ldr	ip, [pc, #12]	; 1636c <triple_free@@Base+0x1da0>
   1635c:	add	r3, pc, r3
   16360:	ldr	r3, [r3, ip]
   16364:	b	15af4 <triple_free@@Base+0x1528>
   16368:	muleq	r1, ip, ip
   1636c:	andeq	r0, r0, r4, ror r1
   16370:	mov	r2, r1
   16374:	mov	r1, r0
   16378:	mov	r0, #0
   1637c:	b	16354 <triple_free@@Base+0x1d88>
   16380:	mvn	r2, #0
   16384:	b	16354 <triple_free@@Base+0x1d88>
   16388:	mov	r1, r0
   1638c:	mov	r0, #0
   16390:	b	16380 <triple_free@@Base+0x1db4>
   16394:	ldr	r3, [pc, #344]	; 164f4 <triple_free@@Base+0x1f28>
   16398:	ldr	r2, [pc, #344]	; 164f8 <triple_free@@Base+0x1f2c>
   1639c:	add	r3, pc, r3
   163a0:	push	{r4, r5, r6, r7, r8, r9, lr}
   163a4:	sub	sp, sp, #220	; 0xdc
   163a8:	ldr	r7, [r3, r2]
   163ac:	mov	r9, r1
   163b0:	mov	r8, r0
   163b4:	ldr	r3, [r7]
   163b8:	str	r3, [sp, #212]	; 0xd4
   163bc:	bl	13288 <close_stdout@@Base+0x1e8>
   163c0:	mov	r5, r0
   163c4:	mov	r0, r9
   163c8:	bl	13288 <close_stdout@@Base+0x1e8>
   163cc:	mov	r4, r0
   163d0:	mov	r0, r5
   163d4:	bl	132e4 <close_stdout@@Base+0x244>
   163d8:	mov	r6, r0
   163dc:	mov	r0, r4
   163e0:	bl	132e4 <close_stdout@@Base+0x244>
   163e4:	cmp	r6, r0
   163e8:	beq	1640c <triple_free@@Base+0x1e40>
   163ec:	mov	r4, #0
   163f0:	ldr	r2, [sp, #212]	; 0xd4
   163f4:	mov	r0, r4
   163f8:	ldr	r3, [r7]
   163fc:	cmp	r2, r3
   16400:	bne	164f0 <triple_free@@Base+0x1f24>
   16404:	add	sp, sp, #220	; 0xdc
   16408:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1640c:	mov	r0, r5
   16410:	mov	r1, r4
   16414:	mov	r2, r6
   16418:	bl	11898 <memcmp@plt>
   1641c:	cmp	r0, #0
   16420:	bne	163ec <triple_free@@Base+0x1e20>
   16424:	mov	r0, r8
   16428:	bl	131b8 <close_stdout@@Base+0x118>
   1642c:	mov	r8, r0
   16430:	mov	r0, r9
   16434:	bl	131b8 <close_stdout@@Base+0x118>
   16438:	mov	r1, r8
   1643c:	mov	r2, sp
   16440:	mov	r6, r0
   16444:	mov	r0, #3
   16448:	bl	11ba4 <__xstat64@plt>
   1644c:	cmp	r0, #0
   16450:	beq	16470 <triple_free@@Base+0x1ea4>
   16454:	bl	11a6c <__errno_location@plt>
   16458:	ldr	r2, [pc, #156]	; 164fc <triple_free@@Base+0x1f30>
   1645c:	mov	r3, r8
   16460:	add	r2, pc, r2
   16464:	ldr	r1, [r0]
   16468:	mov	r0, #1
   1646c:	bl	11988 <error@plt>
   16470:	mov	r0, #3
   16474:	mov	r1, r6
   16478:	add	r2, sp, #104	; 0x68
   1647c:	bl	11ba4 <__xstat64@plt>
   16480:	cmp	r0, #0
   16484:	bne	164b4 <triple_free@@Base+0x1ee8>
   16488:	ldrd	r4, [sp, #96]	; 0x60
   1648c:	ldrd	r2, [sp, #200]	; 0xc8
   16490:	cmp	r5, r3
   16494:	cmpeq	r4, r2
   16498:	movne	r4, #0
   1649c:	beq	164d4 <triple_free@@Base+0x1f08>
   164a0:	mov	r0, r8
   164a4:	bl	1185c <free@plt>
   164a8:	mov	r0, r6
   164ac:	bl	1185c <free@plt>
   164b0:	b	163f0 <triple_free@@Base+0x1e24>
   164b4:	bl	11a6c <__errno_location@plt>
   164b8:	ldr	r2, [pc, #64]	; 16500 <triple_free@@Base+0x1f34>
   164bc:	mov	r3, r6
   164c0:	add	r2, pc, r2
   164c4:	ldr	r1, [r0]
   164c8:	mov	r0, #1
   164cc:	bl	11988 <error@plt>
   164d0:	b	16488 <triple_free@@Base+0x1ebc>
   164d4:	ldrd	r0, [sp]
   164d8:	ldrd	r2, [sp, #104]	; 0x68
   164dc:	cmp	r1, r3
   164e0:	cmpeq	r0, r2
   164e4:	movne	r4, #0
   164e8:	moveq	r4, #1
   164ec:	b	164a0 <triple_free@@Base+0x1ed4>
   164f0:	bl	118b0 <__stack_chk_fail@plt>
   164f4:	andeq	r5, r1, ip, asr ip
   164f8:	andeq	r0, r0, ip, ror r1
   164fc:	andeq	r4, r0, r8, asr #18
   16500:	andeq	r4, r0, r8, ror #17
   16504:	push	{r4, r5, r6, r7, lr}
   16508:	cmp	r1, #0
   1650c:	sub	sp, sp, #36	; 0x24
   16510:	ldr	r7, [pc, #896]	; 16898 <triple_free@@Base+0x22cc>
   16514:	mov	ip, r3
   16518:	mov	r5, r0
   1651c:	add	r7, pc, r7
   16520:	ldr	r4, [sp, #56]	; 0x38
   16524:	ldr	r6, [sp, #60]	; 0x3c
   16528:	beq	1686c <triple_free@@Base+0x22a0>
   1652c:	str	r2, [sp]
   16530:	mov	r3, r1
   16534:	ldr	r2, [pc, #864]	; 1689c <triple_free@@Base+0x22d0>
   16538:	mov	r1, #1
   1653c:	str	ip, [sp, #4]
   16540:	add	r2, pc, r2
   16544:	bl	11ab4 <__fprintf_chk@plt>
   16548:	ldr	r1, [pc, #848]	; 168a0 <triple_free@@Base+0x22d4>
   1654c:	mov	r2, #5
   16550:	mov	r0, #0
   16554:	add	r1, pc, r1
   16558:	bl	118a4 <dcgettext@plt>
   1655c:	ldr	r2, [pc, #832]	; 168a4 <triple_free@@Base+0x22d8>
   16560:	movw	ip, #2013	; 0x7dd
   16564:	mov	r1, #1
   16568:	ldr	r2, [r7, r2]
   1656c:	str	ip, [sp]
   16570:	mov	r3, r0
   16574:	mov	r0, r5
   16578:	bl	11ab4 <__fprintf_chk@plt>
   1657c:	ldr	r1, [pc, #804]	; 168a8 <triple_free@@Base+0x22dc>
   16580:	mov	r0, #0
   16584:	mov	r2, #5
   16588:	add	r1, pc, r1
   1658c:	bl	118a4 <dcgettext@plt>
   16590:	mov	r1, r5
   16594:	bl	117fc <fputs_unlocked@plt>
   16598:	cmp	r6, #9
   1659c:	addls	pc, pc, r6, lsl #2
   165a0:	b	16888 <triple_free@@Base+0x22bc>
   165a4:	b	16638 <triple_free@@Base+0x206c>
   165a8:	b	1663c <triple_free@@Base+0x2070>
   165ac:	b	1666c <triple_free@@Base+0x20a0>
   165b0:	b	166a0 <triple_free@@Base+0x20d4>
   165b4:	b	166dc <triple_free@@Base+0x2110>
   165b8:	b	1671c <triple_free@@Base+0x2150>
   165bc:	b	16764 <triple_free@@Base+0x2198>
   165c0:	b	167b4 <triple_free@@Base+0x21e8>
   165c4:	b	1680c <triple_free@@Base+0x2240>
   165c8:	b	165cc <triple_free@@Base+0x2000>
   165cc:	ldr	r1, [pc, #728]	; 168ac <triple_free@@Base+0x22e0>
   165d0:	mov	r0, #0
   165d4:	add	r1, pc, r1
   165d8:	mov	r2, #5
   165dc:	bl	118a4 <dcgettext@plt>
   165e0:	ldm	r4, {r3, ip}
   165e4:	mov	r1, #1
   165e8:	str	ip, [sp]
   165ec:	ldr	ip, [r4, #8]
   165f0:	str	ip, [sp, #4]
   165f4:	ldr	ip, [r4, #12]
   165f8:	str	ip, [sp, #8]
   165fc:	ldr	ip, [r4, #16]
   16600:	str	ip, [sp, #12]
   16604:	ldr	ip, [r4, #20]
   16608:	str	ip, [sp, #16]
   1660c:	ldr	ip, [r4, #24]
   16610:	str	ip, [sp, #20]
   16614:	ldr	ip, [r4, #28]
   16618:	str	ip, [sp, #24]
   1661c:	ldr	ip, [r4, #32]
   16620:	str	ip, [sp, #28]
   16624:	mov	r2, r0
   16628:	mov	r0, r5
   1662c:	bl	11ab4 <__fprintf_chk@plt>
   16630:	add	sp, sp, #36	; 0x24
   16634:	pop	{r4, r5, r6, r7, pc}
   16638:	bl	11bbc <abort@plt>
   1663c:	ldr	r1, [pc, #620]	; 168b0 <triple_free@@Base+0x22e4>
   16640:	mov	r2, #5
   16644:	mov	r0, #0
   16648:	add	r1, pc, r1
   1664c:	bl	118a4 <dcgettext@plt>
   16650:	ldr	r3, [r4]
   16654:	mov	r1, #1
   16658:	mov	r2, r0
   1665c:	mov	r0, r5
   16660:	add	sp, sp, #36	; 0x24
   16664:	pop	{r4, r5, r6, r7, lr}
   16668:	b	11ab4 <__fprintf_chk@plt>
   1666c:	ldr	r1, [pc, #576]	; 168b4 <triple_free@@Base+0x22e8>
   16670:	mov	r2, #5
   16674:	mov	r0, #0
   16678:	add	r1, pc, r1
   1667c:	bl	118a4 <dcgettext@plt>
   16680:	ldm	r4, {r3, ip}
   16684:	mov	r1, #1
   16688:	str	ip, [sp, #56]	; 0x38
   1668c:	mov	r2, r0
   16690:	mov	r0, r5
   16694:	add	sp, sp, #36	; 0x24
   16698:	pop	{r4, r5, r6, r7, lr}
   1669c:	b	11ab4 <__fprintf_chk@plt>
   166a0:	ldr	r1, [pc, #528]	; 168b8 <triple_free@@Base+0x22ec>
   166a4:	mov	r2, #5
   166a8:	mov	r0, #0
   166ac:	add	r1, pc, r1
   166b0:	bl	118a4 <dcgettext@plt>
   166b4:	ldm	r4, {r3, ip}
   166b8:	mov	r1, #1
   166bc:	str	ip, [sp, #56]	; 0x38
   166c0:	ldr	ip, [r4, #8]
   166c4:	str	ip, [sp, #60]	; 0x3c
   166c8:	mov	r2, r0
   166cc:	mov	r0, r5
   166d0:	add	sp, sp, #36	; 0x24
   166d4:	pop	{r4, r5, r6, r7, lr}
   166d8:	b	11ab4 <__fprintf_chk@plt>
   166dc:	ldr	r1, [pc, #472]	; 168bc <triple_free@@Base+0x22f0>
   166e0:	mov	r2, #5
   166e4:	mov	r0, #0
   166e8:	add	r1, pc, r1
   166ec:	bl	118a4 <dcgettext@plt>
   166f0:	ldm	r4, {r3, ip}
   166f4:	mov	r1, #1
   166f8:	str	ip, [sp]
   166fc:	ldr	ip, [r4, #8]
   16700:	str	ip, [sp, #4]
   16704:	ldr	ip, [r4, #12]
   16708:	str	ip, [sp, #8]
   1670c:	mov	r2, r0
   16710:	mov	r0, r5
   16714:	bl	11ab4 <__fprintf_chk@plt>
   16718:	b	16630 <triple_free@@Base+0x2064>
   1671c:	ldr	r1, [pc, #412]	; 168c0 <triple_free@@Base+0x22f4>
   16720:	mov	r2, #5
   16724:	mov	r0, #0
   16728:	add	r1, pc, r1
   1672c:	bl	118a4 <dcgettext@plt>
   16730:	ldm	r4, {r3, ip}
   16734:	mov	r1, #1
   16738:	str	ip, [sp]
   1673c:	ldr	ip, [r4, #8]
   16740:	str	ip, [sp, #4]
   16744:	ldr	ip, [r4, #12]
   16748:	str	ip, [sp, #8]
   1674c:	ldr	ip, [r4, #16]
   16750:	str	ip, [sp, #12]
   16754:	mov	r2, r0
   16758:	mov	r0, r5
   1675c:	bl	11ab4 <__fprintf_chk@plt>
   16760:	b	16630 <triple_free@@Base+0x2064>
   16764:	ldr	r1, [pc, #344]	; 168c4 <triple_free@@Base+0x22f8>
   16768:	mov	r2, #5
   1676c:	mov	r0, #0
   16770:	add	r1, pc, r1
   16774:	bl	118a4 <dcgettext@plt>
   16778:	ldm	r4, {r3, ip}
   1677c:	mov	r1, #1
   16780:	str	ip, [sp]
   16784:	ldr	ip, [r4, #8]
   16788:	str	ip, [sp, #4]
   1678c:	ldr	ip, [r4, #12]
   16790:	str	ip, [sp, #8]
   16794:	ldr	ip, [r4, #16]
   16798:	str	ip, [sp, #12]
   1679c:	ldr	ip, [r4, #20]
   167a0:	str	ip, [sp, #16]
   167a4:	mov	r2, r0
   167a8:	mov	r0, r5
   167ac:	bl	11ab4 <__fprintf_chk@plt>
   167b0:	b	16630 <triple_free@@Base+0x2064>
   167b4:	ldr	r1, [pc, #268]	; 168c8 <triple_free@@Base+0x22fc>
   167b8:	mov	r2, #5
   167bc:	mov	r0, #0
   167c0:	add	r1, pc, r1
   167c4:	bl	118a4 <dcgettext@plt>
   167c8:	ldm	r4, {r3, ip}
   167cc:	mov	r1, #1
   167d0:	str	ip, [sp]
   167d4:	ldr	ip, [r4, #8]
   167d8:	str	ip, [sp, #4]
   167dc:	ldr	ip, [r4, #12]
   167e0:	str	ip, [sp, #8]
   167e4:	ldr	ip, [r4, #16]
   167e8:	str	ip, [sp, #12]
   167ec:	ldr	ip, [r4, #20]
   167f0:	str	ip, [sp, #16]
   167f4:	ldr	ip, [r4, #24]
   167f8:	str	ip, [sp, #20]
   167fc:	mov	r2, r0
   16800:	mov	r0, r5
   16804:	bl	11ab4 <__fprintf_chk@plt>
   16808:	b	16630 <triple_free@@Base+0x2064>
   1680c:	ldr	r1, [pc, #184]	; 168cc <triple_free@@Base+0x2300>
   16810:	mov	r2, #5
   16814:	mov	r0, #0
   16818:	add	r1, pc, r1
   1681c:	bl	118a4 <dcgettext@plt>
   16820:	ldm	r4, {r3, ip}
   16824:	mov	r1, #1
   16828:	str	ip, [sp]
   1682c:	ldr	ip, [r4, #8]
   16830:	str	ip, [sp, #4]
   16834:	ldr	ip, [r4, #12]
   16838:	str	ip, [sp, #8]
   1683c:	ldr	ip, [r4, #16]
   16840:	str	ip, [sp, #12]
   16844:	ldr	ip, [r4, #20]
   16848:	str	ip, [sp, #16]
   1684c:	ldr	ip, [r4, #24]
   16850:	str	ip, [sp, #20]
   16854:	ldr	ip, [r4, #28]
   16858:	str	ip, [sp, #24]
   1685c:	mov	r2, r0
   16860:	mov	r0, r5
   16864:	bl	11ab4 <__fprintf_chk@plt>
   16868:	b	16630 <triple_free@@Base+0x2064>
   1686c:	str	r3, [sp]
   16870:	mov	r3, r2
   16874:	ldr	r2, [pc, #84]	; 168d0 <triple_free@@Base+0x2304>
   16878:	mov	r1, #1
   1687c:	add	r2, pc, r2
   16880:	bl	11ab4 <__fprintf_chk@plt>
   16884:	b	16548 <triple_free@@Base+0x1f7c>
   16888:	ldr	r1, [pc, #68]	; 168d4 <triple_free@@Base+0x2308>
   1688c:	mov	r0, #0
   16890:	add	r1, pc, r1
   16894:	b	165d8 <triple_free@@Base+0x200c>
   16898:	ldrdeq	r5, [r1], -ip
   1689c:	andeq	r4, r0, ip, lsr #19
   168a0:	andeq	r4, r0, ip, lsr #19
   168a4:			; <UNDEFINED> instruction: 0x000001b4
   168a8:	andeq	r4, r0, ip, ror r9
   168ac:	andeq	r4, r0, r8, lsl #22
   168b0:	andeq	r4, r0, r8, lsl #19
   168b4:	andeq	r4, r0, r8, ror #18
   168b8:	andeq	r4, r0, ip, asr #18
   168bc:	andeq	r4, r0, ip, lsr #18
   168c0:	andeq	r4, r0, ip, lsl #18
   168c4:	andeq	r4, r0, r8, ror #17
   168c8:	andeq	r4, r0, r0, asr #17
   168cc:	muleq	r0, r4, r8
   168d0:	andeq	r4, r0, ip, ror r6
   168d4:	andeq	r4, r0, r0, lsl #17
   168d8:	push	{r4, r5, lr}
   168dc:	sub	sp, sp, #12
   168e0:	ldr	r5, [sp, #24]
   168e4:	ldr	ip, [r5]
   168e8:	cmp	ip, #0
   168ec:	beq	16908 <triple_free@@Base+0x233c>
   168f0:	mov	lr, r5
   168f4:	mov	ip, #0
   168f8:	ldr	r4, [lr, #4]!
   168fc:	add	ip, ip, #1
   16900:	cmp	r4, #0
   16904:	bne	168f8 <triple_free@@Base+0x232c>
   16908:	stm	sp, {r5, ip}
   1690c:	bl	16504 <triple_free@@Base+0x1f38>
   16910:	add	sp, sp, #12
   16914:	pop	{r4, r5, pc}
   16918:	push	{r4, r5, r6, r7, lr}
   1691c:	sub	sp, sp, #60	; 0x3c
   16920:	ldr	r4, [pc, #100]	; 1698c <triple_free@@Base+0x23c0>
   16924:	mov	ip, #0
   16928:	ldr	r5, [pc, #96]	; 16990 <triple_free@@Base+0x23c4>
   1692c:	mov	lr, ip
   16930:	add	r4, pc, r4
   16934:	ldr	r6, [sp, #80]	; 0x50
   16938:	ldr	r7, [r4, r5]
   1693c:	add	r5, sp, #12
   16940:	ldr	r4, [r7]
   16944:	str	r4, [sp, #52]	; 0x34
   16948:	ldr	r4, [r6, ip]
   1694c:	cmp	r4, #0
   16950:	str	r4, [r5, ip]
   16954:	beq	16968 <triple_free@@Base+0x239c>
   16958:	add	lr, lr, #1
   1695c:	add	ip, ip, #4
   16960:	cmp	lr, #10
   16964:	bne	16948 <triple_free@@Base+0x237c>
   16968:	stm	sp, {r5, lr}
   1696c:	bl	16504 <triple_free@@Base+0x1f38>
   16970:	ldr	r2, [sp, #52]	; 0x34
   16974:	ldr	r3, [r7]
   16978:	cmp	r2, r3
   1697c:	bne	16988 <triple_free@@Base+0x23bc>
   16980:	add	sp, sp, #60	; 0x3c
   16984:	pop	{r4, r5, r6, r7, pc}
   16988:	bl	118b0 <__stack_chk_fail@plt>
   1698c:	andeq	r5, r1, r8, asr #13
   16990:	andeq	r0, r0, ip, ror r1
   16994:	push	{r3}		; (str r3, [sp, #-4]!)
   16998:	push	{r4, lr}
   1699c:	sub	sp, sp, #20
   169a0:	ldr	lr, [pc, #72]	; 169f0 <triple_free@@Base+0x2424>
   169a4:	add	ip, sp, #32
   169a8:	ldr	r4, [pc, #68]	; 169f4 <triple_free@@Base+0x2428>
   169ac:	add	lr, pc, lr
   169b0:	ldr	r3, [sp, #28]
   169b4:	ldr	r4, [lr, r4]
   169b8:	str	ip, [sp]
   169bc:	str	ip, [sp, #8]
   169c0:	ldr	ip, [r4]
   169c4:	str	ip, [sp, #12]
   169c8:	bl	16918 <triple_free@@Base+0x234c>
   169cc:	ldr	r2, [sp, #12]
   169d0:	ldr	r3, [r4]
   169d4:	cmp	r2, r3
   169d8:	bne	169ec <triple_free@@Base+0x2420>
   169dc:	add	sp, sp, #20
   169e0:	pop	{r4, lr}
   169e4:	add	sp, sp, #4
   169e8:	bx	lr
   169ec:	bl	118b0 <__stack_chk_fail@plt>
   169f0:	andeq	r5, r1, ip, asr #12
   169f4:	andeq	r0, r0, ip, ror r1
   169f8:	ldr	r1, [pc, #132]	; 16a84 <triple_free@@Base+0x24b8>
   169fc:	mov	r2, #5
   16a00:	push	{r4, lr}
   16a04:	add	r1, pc, r1
   16a08:	mov	r0, #0
   16a0c:	ldr	r4, [pc, #116]	; 16a88 <triple_free@@Base+0x24bc>
   16a10:	bl	118a4 <dcgettext@plt>
   16a14:	ldr	r2, [pc, #112]	; 16a8c <triple_free@@Base+0x24c0>
   16a18:	add	r4, pc, r4
   16a1c:	add	r2, pc, r2
   16a20:	mov	r1, r0
   16a24:	mov	r0, #1
   16a28:	bl	11a9c <__printf_chk@plt>
   16a2c:	ldr	r1, [pc, #92]	; 16a90 <triple_free@@Base+0x24c4>
   16a30:	mov	r2, #5
   16a34:	mov	r0, #0
   16a38:	add	r1, pc, r1
   16a3c:	bl	118a4 <dcgettext@plt>
   16a40:	ldr	r2, [pc, #76]	; 16a94 <triple_free@@Base+0x24c8>
   16a44:	ldr	r3, [pc, #76]	; 16a98 <triple_free@@Base+0x24cc>
   16a48:	add	r2, pc, r2
   16a4c:	add	r3, pc, r3
   16a50:	mov	r1, r0
   16a54:	mov	r0, #1
   16a58:	bl	11a9c <__printf_chk@plt>
   16a5c:	ldr	r1, [pc, #56]	; 16a9c <triple_free@@Base+0x24d0>
   16a60:	mov	r0, #0
   16a64:	mov	r2, #5
   16a68:	add	r1, pc, r1
   16a6c:	bl	118a4 <dcgettext@plt>
   16a70:	ldr	r3, [pc, #40]	; 16aa0 <triple_free@@Base+0x24d4>
   16a74:	ldr	r3, [r4, r3]
   16a78:	pop	{r4, lr}
   16a7c:	ldr	r1, [r3]
   16a80:	b	117fc <fputs_unlocked@plt>
   16a84:	andeq	r4, r0, r8, asr #14
   16a88:	andeq	r5, r1, r0, ror #11
   16a8c:	andeq	r4, r0, r8, asr #14
   16a90:	andeq	r4, r0, r4, asr #14
   16a94:	strdeq	r4, [r0], -r8
   16a98:	andeq	r4, r0, r4, lsl #2
   16a9c:	andeq	r4, r0, r8, lsr #14
   16aa0:	andeq	r0, r0, r4, lsr #3
   16aa4:	push	{r4, lr}
   16aa8:	mov	r4, r0
   16aac:	bl	119b8 <malloc@plt>
   16ab0:	rsbs	r3, r0, #1
   16ab4:	movcc	r3, #0
   16ab8:	cmp	r4, #0
   16abc:	moveq	r3, #0
   16ac0:	cmp	r3, #0
   16ac4:	popeq	{r4, pc}
   16ac8:	bl	16cb8 <triple_free@@Base+0x26ec>
   16acc:	push	{r3, r4, r5, lr}
   16ad0:	mov	r4, r0
   16ad4:	mvn	r0, #0
   16ad8:	mov	r5, r1
   16adc:	bl	19cb4 <fts_children@@Base+0xe18>
   16ae0:	cmp	r0, r4
   16ae4:	bcc	16af4 <triple_free@@Base+0x2528>
   16ae8:	mul	r0, r4, r5
   16aec:	pop	{r3, r4, r5, lr}
   16af0:	b	16aa4 <triple_free@@Base+0x24d8>
   16af4:	bl	16cb8 <triple_free@@Base+0x26ec>
   16af8:	b	16aa4 <triple_free@@Base+0x24d8>
   16afc:	rsbs	r3, r1, #1
   16b00:	push	{r4, lr}
   16b04:	movcc	r3, #0
   16b08:	cmp	r0, #0
   16b0c:	mov	r4, r1
   16b10:	moveq	r3, #0
   16b14:	cmp	r3, #0
   16b18:	bne	16b3c <triple_free@@Base+0x2570>
   16b1c:	bl	118c8 <realloc@plt>
   16b20:	rsbs	r3, r0, #1
   16b24:	movcc	r3, #0
   16b28:	cmp	r4, #0
   16b2c:	moveq	r3, #0
   16b30:	cmp	r3, #0
   16b34:	popeq	{r4, pc}
   16b38:	bl	16cb8 <triple_free@@Base+0x26ec>
   16b3c:	bl	1185c <free@plt>
   16b40:	mov	r0, #0
   16b44:	pop	{r4, pc}
   16b48:	push	{r4, r5, r6, lr}
   16b4c:	mov	r5, r1
   16b50:	mov	r6, r0
   16b54:	mov	r1, r2
   16b58:	mvn	r0, #0
   16b5c:	mov	r4, r2
   16b60:	bl	19cb4 <fts_children@@Base+0xe18>
   16b64:	cmp	r0, r5
   16b68:	bcc	16b7c <triple_free@@Base+0x25b0>
   16b6c:	mov	r0, r6
   16b70:	mul	r1, r5, r4
   16b74:	pop	{r4, r5, r6, lr}
   16b78:	b	16afc <triple_free@@Base+0x2530>
   16b7c:	bl	16cb8 <triple_free@@Base+0x26ec>
   16b80:	push	{r3, r4, r5, r6, r7, lr}
   16b84:	subs	r7, r0, #0
   16b88:	mov	r5, r1
   16b8c:	mov	r6, r2
   16b90:	ldr	r4, [r1]
   16b94:	beq	16bcc <triple_free@@Base+0x2600>
   16b98:	movw	r0, #43690	; 0xaaaa
   16b9c:	mov	r1, r2
   16ba0:	bfi	r0, r0, #16, #16
   16ba4:	bl	19cb4 <fts_children@@Base+0xe18>
   16ba8:	cmp	r4, r0
   16bac:	addcc	r3, r4, #1
   16bb0:	addcc	r4, r4, r3, lsr #1
   16bb4:	bcs	16bf0 <triple_free@@Base+0x2624>
   16bb8:	str	r4, [r5]
   16bbc:	mov	r0, r7
   16bc0:	mul	r1, r6, r4
   16bc4:	pop	{r3, r4, r5, r6, r7, lr}
   16bc8:	b	16afc <triple_free@@Base+0x2530>
   16bcc:	cmp	r4, #0
   16bd0:	bne	16bb8 <triple_free@@Base+0x25ec>
   16bd4:	mov	r0, #64	; 0x40
   16bd8:	mov	r1, r2
   16bdc:	bl	19cb4 <fts_children@@Base+0xe18>
   16be0:	cmp	r0, #0
   16be4:	movne	r4, r0
   16be8:	addeq	r4, r0, #1
   16bec:	b	16bb8 <triple_free@@Base+0x25ec>
   16bf0:	bl	16cb8 <triple_free@@Base+0x26ec>
   16bf4:	cmp	r0, #0
   16bf8:	push	{r3, lr}
   16bfc:	ldr	r3, [r1]
   16c00:	beq	16c2c <triple_free@@Base+0x2660>
   16c04:	movw	r2, #43689	; 0xaaa9
   16c08:	movt	r2, #43690	; 0xaaaa
   16c0c:	cmp	r3, r2
   16c10:	addls	r2, r3, #1
   16c14:	addls	r3, r3, r2, lsr #1
   16c18:	bhi	16c44 <triple_free@@Base+0x2678>
   16c1c:	str	r3, [r1]
   16c20:	mov	r1, r3
   16c24:	pop	{r3, lr}
   16c28:	b	16afc <triple_free@@Base+0x2530>
   16c2c:	cmp	r3, #0
   16c30:	moveq	r3, #64	; 0x40
   16c34:	str	r3, [r1]
   16c38:	mov	r1, r3
   16c3c:	pop	{r3, lr}
   16c40:	b	16afc <triple_free@@Base+0x2530>
   16c44:	bl	16cb8 <triple_free@@Base+0x26ec>
   16c48:	push	{r4, lr}
   16c4c:	mov	r4, r0
   16c50:	bl	16aa4 <triple_free@@Base+0x24d8>
   16c54:	mov	r2, r4
   16c58:	mov	r1, #0
   16c5c:	pop	{r4, lr}
   16c60:	b	11a84 <memset@plt>
   16c64:	push	{r3, lr}
   16c68:	bl	117f0 <calloc@plt>
   16c6c:	cmp	r0, #0
   16c70:	popne	{r3, pc}
   16c74:	bl	16cb8 <triple_free@@Base+0x26ec>
   16c78:	push	{r3, r4, r5, lr}
   16c7c:	mov	r4, r1
   16c80:	mov	r5, r0
   16c84:	mov	r0, r1
   16c88:	bl	16aa4 <triple_free@@Base+0x24d8>
   16c8c:	mov	r1, r5
   16c90:	mov	r2, r4
   16c94:	pop	{r3, r4, r5, lr}
   16c98:	b	11874 <memcpy@plt>
   16c9c:	push	{r4, lr}
   16ca0:	mov	r4, r0
   16ca4:	bl	11a30 <strlen@plt>
   16ca8:	add	r1, r0, #1
   16cac:	mov	r0, r4
   16cb0:	pop	{r4, lr}
   16cb4:	b	16c78 <triple_free@@Base+0x26ac>
   16cb8:	ldr	r3, [pc, #64]	; 16d00 <triple_free@@Base+0x2734>
   16cbc:	mov	r2, #5
   16cc0:	ldr	ip, [pc, #60]	; 16d04 <triple_free@@Base+0x2738>
   16cc4:	mov	r0, #0
   16cc8:	add	r3, pc, r3
   16ccc:	ldr	r1, [pc, #52]	; 16d08 <triple_free@@Base+0x273c>
   16cd0:	push	{r4, lr}
   16cd4:	add	r1, pc, r1
   16cd8:	ldr	r3, [r3, ip]
   16cdc:	ldr	r4, [r3]
   16ce0:	bl	118a4 <dcgettext@plt>
   16ce4:	ldr	r2, [pc, #32]	; 16d0c <triple_free@@Base+0x2740>
   16ce8:	mov	r1, #0
   16cec:	add	r2, pc, r2
   16cf0:	mov	r3, r0
   16cf4:	mov	r0, r4
   16cf8:	bl	11988 <error@plt>
   16cfc:	bl	11bbc <abort@plt>
   16d00:	andeq	r5, r1, r0, lsr r3
   16d04:	andeq	r0, r0, r8, lsr #3
   16d08:	andeq	r4, r0, ip, lsr #10
   16d0c:	strheq	r4, [r0], -ip
   16d10:	push	{r3, lr}
   16d14:	orr	r1, r1, #512	; 0x200
   16d18:	bl	180fc <fts_open@@Base>
   16d1c:	cmp	r0, #0
   16d20:	popne	{r3, pc}
   16d24:	bl	11a6c <__errno_location@plt>
   16d28:	ldr	r3, [r0]
   16d2c:	cmp	r3, #22
   16d30:	beq	16d38 <triple_free@@Base+0x276c>
   16d34:	bl	16cb8 <triple_free@@Base+0x26ec>
   16d38:	ldr	r0, [pc, #24]	; 16d58 <triple_free@@Base+0x278c>
   16d3c:	mov	r2, #41	; 0x29
   16d40:	ldr	r1, [pc, #20]	; 16d5c <triple_free@@Base+0x2790>
   16d44:	ldr	r3, [pc, #20]	; 16d60 <triple_free@@Base+0x2794>
   16d48:	add	r0, pc, r0
   16d4c:	add	r1, pc, r1
   16d50:	add	r3, pc, r3
   16d54:	bl	11c04 <__assert_fail@plt>
   16d58:	ldrdeq	r4, [r0], -r8
   16d5c:	strdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   16d60:	andeq	r4, r0, r4, asr #9
   16d64:	ldr	r3, [r0, #48]	; 0x30
   16d68:	and	r3, r3, #17
   16d6c:	cmp	r3, #16
   16d70:	beq	16d94 <triple_free@@Base+0x27c8>
   16d74:	cmp	r3, #17
   16d78:	beq	16d84 <triple_free@@Base+0x27b8>
   16d7c:	mov	r0, #0
   16d80:	bx	lr
   16d84:	ldr	r0, [r1, #48]	; 0x30
   16d88:	adds	r0, r0, #0
   16d8c:	movne	r0, #1
   16d90:	bx	lr
   16d94:	mov	r0, #1
   16d98:	bx	lr
   16d9c:	mov	r0, #0
   16da0:	push	{r4, lr}
   16da4:	mov	r1, r0
   16da8:	bl	11a0c <getcwd@plt>
   16dac:	subs	r4, r0, #0
   16db0:	beq	16dbc <triple_free@@Base+0x27f0>
   16db4:	mov	r0, r4
   16db8:	pop	{r4, pc}
   16dbc:	bl	11a6c <__errno_location@plt>
   16dc0:	ldr	r3, [r0]
   16dc4:	cmp	r3, #12
   16dc8:	bne	16db4 <triple_free@@Base+0x27e8>
   16dcc:	bl	16cb8 <triple_free@@Base+0x26ec>
   16dd0:	push	{r4, r5}
   16dd4:	mov	ip, r1
   16dd8:	ldrd	r4, [r0, #8]
   16ddc:	ldrd	r2, [r1, #8]
   16de0:	cmp	r5, r3
   16de4:	cmpeq	r4, r2
   16de8:	movne	r0, #0
   16dec:	beq	16df8 <triple_free@@Base+0x282c>
   16df0:	pop	{r4, r5}
   16df4:	bx	lr
   16df8:	ldrd	r0, [r0]
   16dfc:	ldrd	r2, [ip]
   16e00:	pop	{r4, r5}
   16e04:	cmp	r1, r3
   16e08:	cmpeq	r0, r2
   16e0c:	movne	r0, #0
   16e10:	moveq	r0, #1
   16e14:	bx	lr
   16e18:	push	{r3, lr}
   16e1c:	mov	r2, r1
   16e20:	mov	r3, #0
   16e24:	ldrd	r0, [r0, #8]
   16e28:	bl	19ec0 <fts_children@@Base+0x1024>
   16e2c:	mov	r0, r2
   16e30:	pop	{r3, pc}
   16e34:	push	{r3, lr}
   16e38:	mov	r2, r1
   16e3c:	mov	r3, #0
   16e40:	ldrd	r0, [r0]
   16e44:	bl	19ec0 <fts_children@@Base+0x1024>
   16e48:	mov	r0, r2
   16e4c:	pop	{r3, pc}
   16e50:	ldrd	r2, [r0]
   16e54:	ldrd	r0, [r1]
   16e58:	cmp	r3, r1
   16e5c:	cmpeq	r2, r0
   16e60:	movne	r0, #0
   16e64:	moveq	r0, #1
   16e68:	bx	lr
   16e6c:	ldr	r3, [r0]
   16e70:	ldr	r2, [r1]
   16e74:	ldrd	r0, [r3, #168]	; 0xa8
   16e78:	ldrd	r2, [r2, #168]	; 0xa8
   16e7c:	cmp	r1, r3
   16e80:	cmpeq	r0, r2
   16e84:	bcc	16e94 <triple_free@@Base+0x28c8>
   16e88:	movls	r0, #0
   16e8c:	movhi	r0, #1
   16e90:	bx	lr
   16e94:	mvn	r0, #0
   16e98:	bx	lr
   16e9c:	push	{r3, r4, r5, r6, r7, lr}
   16ea0:	mov	r7, r2
   16ea4:	ldr	r2, [r0, #40]	; 0x28
   16ea8:	mov	r5, r0
   16eac:	mov	r4, r1
   16eb0:	ldr	r6, [r0, #44]	; 0x2c
   16eb4:	cmp	r2, r7
   16eb8:	bcc	16f34 <triple_free@@Base+0x2968>
   16ebc:	ldr	ip, [r0, #8]
   16ec0:	cmp	r4, #0
   16ec4:	beq	16f84 <triple_free@@Base+0x29b8>
   16ec8:	str	r4, [ip], #4
   16ecc:	ldr	r4, [r4, #8]
   16ed0:	cmp	r4, #0
   16ed4:	bne	16ec8 <triple_free@@Base+0x28fc>
   16ed8:	ldr	r0, [r5, #8]
   16edc:	mov	r3, r6
   16ee0:	mov	r2, #4
   16ee4:	mov	r1, r7
   16ee8:	bl	11b50 <qsort@plt>
   16eec:	ldr	r2, [r5, #8]
   16ef0:	subs	r3, r7, #1
   16ef4:	ldr	r4, [r2]
   16ef8:	beq	16f7c <triple_free@@Base+0x29b0>
   16efc:	add	ip, r2, #4
   16f00:	mov	r6, r4
   16f04:	b	16f0c <triple_free@@Base+0x2940>
   16f08:	ldr	r6, [ip, #-4]
   16f0c:	ldr	r5, [ip], #4
   16f10:	subs	r3, r3, #1
   16f14:	str	r5, [r6, #8]
   16f18:	bne	16f08 <triple_free@@Base+0x293c>
   16f1c:	add	r7, r2, r7, lsl #2
   16f20:	ldr	r2, [r7, #-4]
   16f24:	mov	r3, #0
   16f28:	mov	r0, r4
   16f2c:	str	r3, [r2, #8]
   16f30:	pop	{r3, r4, r5, r6, r7, pc}
   16f34:	add	r1, r7, #40	; 0x28
   16f38:	str	r1, [r0, #40]	; 0x28
   16f3c:	cmn	r1, #-1073741823	; 0xc0000001
   16f40:	bhi	16f60 <triple_free@@Base+0x2994>
   16f44:	lsl	r1, r1, #2
   16f48:	ldr	r0, [r0, #8]
   16f4c:	bl	118c8 <realloc@plt>
   16f50:	cmp	r0, #0
   16f54:	movne	ip, r0
   16f58:	strne	r0, [r5, #8]
   16f5c:	bne	16ec0 <triple_free@@Base+0x28f4>
   16f60:	ldr	r0, [r5, #8]
   16f64:	bl	1185c <free@plt>
   16f68:	mov	r3, #0
   16f6c:	mov	r0, r4
   16f70:	str	r3, [r5, #8]
   16f74:	str	r3, [r5, #40]	; 0x28
   16f78:	pop	{r3, r4, r5, r6, r7, pc}
   16f7c:	mov	r2, r4
   16f80:	b	16f24 <triple_free@@Base+0x2958>
   16f84:	mov	r0, ip
   16f88:	b	16edc <triple_free@@Base+0x2910>
   16f8c:	push	{r3, r4, r5, r6, r7, lr}
   16f90:	mov	r6, r0
   16f94:	add	r0, r2, #184	; 0xb8
   16f98:	mov	r5, r2
   16f9c:	mov	r7, r1
   16fa0:	bl	119b8 <malloc@plt>
   16fa4:	subs	r4, r0, #0
   16fa8:	beq	16ff4 <triple_free@@Base+0x2a28>
   16fac:	mov	r1, r7
   16fb0:	mov	r2, r5
   16fb4:	add	r0, r4, #176	; 0xb0
   16fb8:	bl	11874 <memcpy@plt>
   16fbc:	add	r1, r4, r5
   16fc0:	mov	r3, #0
   16fc4:	mov	r2, #3
   16fc8:	strb	r3, [r1, #176]	; 0xb0
   16fcc:	str	r5, [r4, #52]	; 0x34
   16fd0:	str	r6, [r4, #44]	; 0x2c
   16fd4:	ldr	r1, [r6, #24]
   16fd8:	str	r3, [r4, #32]
   16fdc:	str	r3, [r4, #12]
   16fe0:	str	r1, [r4, #28]
   16fe4:	strh	r3, [r4, #62]	; 0x3e
   16fe8:	str	r3, [r4, #16]
   16fec:	str	r3, [r4, #20]
   16ff0:	strh	r2, [r4, #64]	; 0x40
   16ff4:	mov	r0, r4
   16ff8:	pop	{r3, r4, r5, r6, r7, pc}
   16ffc:	push	{r3, r4, r5, lr}
   17000:	subs	r4, r0, #0
   17004:	popeq	{r3, r4, r5, pc}
   17008:	ldr	r0, [r4, #12]
   1700c:	ldr	r5, [r4, #8]
   17010:	cmp	r0, #0
   17014:	beq	1701c <triple_free@@Base+0x2a50>
   17018:	bl	11bf8 <closedir@plt>
   1701c:	mov	r0, r4
   17020:	mov	r4, r5
   17024:	bl	1185c <free@plt>
   17028:	cmp	r5, #0
   1702c:	bne	17008 <triple_free@@Base+0x2a3c>
   17030:	pop	{r3, r4, r5, pc}
   17034:	push	{r4, lr}
   17038:	mov	r4, r0
   1703c:	b	1704c <triple_free@@Base+0x2a80>
   17040:	bl	1947c <fts_children@@Base+0x5e0>
   17044:	cmp	r0, #0
   17048:	bge	17064 <triple_free@@Base+0x2a98>
   1704c:	mov	r0, r4
   17050:	bl	19430 <fts_children@@Base+0x594>
   17054:	cmp	r0, #0
   17058:	mov	r0, r4
   1705c:	beq	17040 <triple_free@@Base+0x2a74>
   17060:	pop	{r4, pc}
   17064:	bl	11bc8 <close@plt>
   17068:	b	1704c <triple_free@@Base+0x2a80>
   1706c:	push	{r3, r4, r5, lr}
   17070:	mov	r5, r1
   17074:	ldr	r1, [r0, #32]
   17078:	mov	r4, r0
   1707c:	subs	r0, r1, r5
   17080:	rsbs	r3, r0, #0
   17084:	adcs	r3, r3, r0
   17088:	cmn	r1, #100	; 0x64
   1708c:	moveq	r3, #0
   17090:	cmp	r3, #0
   17094:	bne	170dc <triple_free@@Base+0x2b10>
   17098:	cmp	r2, #0
   1709c:	bne	170c4 <triple_free@@Base+0x2af8>
   170a0:	ldr	r3, [r4, #48]	; 0x30
   170a4:	tst	r3, #4
   170a8:	bne	170bc <triple_free@@Base+0x2af0>
   170ac:	cmp	r1, #0
   170b0:	blt	170bc <triple_free@@Base+0x2af0>
   170b4:	mov	r0, r1
   170b8:	bl	11bc8 <close@plt>
   170bc:	str	r5, [r4, #32]
   170c0:	pop	{r3, r4, r5, pc}
   170c4:	add	r0, r4, #60	; 0x3c
   170c8:	bl	19438 <fts_children@@Base+0x59c>
   170cc:	cmp	r0, #0
   170d0:	bge	170b8 <triple_free@@Base+0x2aec>
   170d4:	str	r5, [r4, #32]
   170d8:	pop	{r3, r4, r5, pc}
   170dc:	bl	11bbc <abort@plt>
   170e0:	push	{r3, r4, r5, lr}
   170e4:	mov	r4, r0
   170e8:	ldr	r3, [r0, #48]	; 0x30
   170ec:	ands	r5, r3, #4
   170f0:	movne	r5, #0
   170f4:	bne	1710c <triple_free@@Base+0x2b40>
   170f8:	tst	r3, #512	; 0x200
   170fc:	beq	1711c <triple_free@@Base+0x2b50>
   17100:	mvn	r1, #99	; 0x63
   17104:	mov	r2, #1
   17108:	bl	1706c <triple_free@@Base+0x2aa0>
   1710c:	add	r0, r4, #60	; 0x3c
   17110:	bl	17034 <triple_free@@Base+0x2a68>
   17114:	mov	r0, r5
   17118:	pop	{r3, r4, r5, pc}
   1711c:	ldr	r0, [r0, #28]
   17120:	bl	11b44 <fchdir@plt>
   17124:	adds	r5, r0, #0
   17128:	movne	r5, #1
   1712c:	b	1710c <triple_free@@Base+0x2b40>
   17130:	push	{r4, r5, r6, r7, lr}
   17134:	mov	r4, r2
   17138:	ldr	r2, [r2, #48]	; 0x30
   1713c:	sub	sp, sp, #12
   17140:	mov	r6, r1
   17144:	add	r5, r4, #72	; 0x48
   17148:	cmp	r2, #0
   1714c:	ldr	r2, [r1]
   17150:	bne	1715c <triple_free@@Base+0x2b90>
   17154:	tst	r2, #1
   17158:	bne	1716c <triple_free@@Base+0x2ba0>
   1715c:	tst	r2, #2
   17160:	bne	1716c <triple_free@@Base+0x2ba0>
   17164:	cmp	r3, #0
   17168:	beq	171b8 <triple_free@@Base+0x2bec>
   1716c:	mov	r0, #3
   17170:	ldr	r1, [r4, #24]
   17174:	mov	r2, r5
   17178:	bl	11ba4 <__xstat64@plt>
   1717c:	cmp	r0, #0
   17180:	beq	171dc <triple_free@@Base+0x2c10>
   17184:	bl	11a6c <__errno_location@plt>
   17188:	ldr	r6, [r0]
   1718c:	mov	r7, r0
   17190:	cmp	r6, #2
   17194:	beq	17280 <triple_free@@Base+0x2cb4>
   17198:	str	r6, [r4, #32]
   1719c:	mov	r0, r5
   171a0:	mov	r1, #0
   171a4:	mov	r2, #104	; 0x68
   171a8:	bl	11a84 <memset@plt>
   171ac:	mov	r0, #10
   171b0:	add	sp, sp, #12
   171b4:	pop	{r4, r5, r6, r7, pc}
   171b8:	ldr	r2, [r4, #24]
   171bc:	mov	r1, r0
   171c0:	mov	r3, #256	; 0x100
   171c4:	mov	r0, #3
   171c8:	str	r3, [sp]
   171cc:	mov	r3, r5
   171d0:	bl	118f8 <__fxstatat64@plt>
   171d4:	cmp	r0, #0
   171d8:	bne	1720c <triple_free@@Base+0x2c40>
   171dc:	ldr	r0, [r4, #88]	; 0x58
   171e0:	and	r0, r0, #61440	; 0xf000
   171e4:	cmp	r0, #16384	; 0x4000
   171e8:	beq	1721c <triple_free@@Base+0x2c50>
   171ec:	cmp	r0, #40960	; 0xa000
   171f0:	moveq	r0, #12
   171f4:	beq	171b0 <triple_free@@Base+0x2be4>
   171f8:	cmp	r0, #32768	; 0x8000
   171fc:	movne	r0, #3
   17200:	moveq	r0, #8
   17204:	add	sp, sp, #12
   17208:	pop	{r4, r5, r6, r7, pc}
   1720c:	bl	11a6c <__errno_location@plt>
   17210:	ldr	r3, [r0]
   17214:	str	r3, [r4, #32]
   17218:	b	1719c <triple_free@@Base+0x2bd0>
   1721c:	ldr	r3, [r6]
   17220:	ldrb	r1, [r4, #176]	; 0xb0
   17224:	tst	r3, #32
   17228:	ldr	r2, [r4, #92]	; 0x5c
   1722c:	moveq	r3, #2
   17230:	movne	r3, #0
   17234:	cmp	r1, #46	; 0x2e
   17238:	rsb	r3, r3, r2
   1723c:	str	r3, [r4, #56]	; 0x38
   17240:	beq	1724c <triple_free@@Base+0x2c80>
   17244:	mov	r0, #1
   17248:	b	171b0 <triple_free@@Base+0x2be4>
   1724c:	ldrb	r3, [r4, #177]	; 0xb1
   17250:	cmp	r3, #0
   17254:	beq	1726c <triple_free@@Base+0x2ca0>
   17258:	ldr	r3, [r4, #176]	; 0xb0
   1725c:	bic	r3, r3, #-16777216	; 0xff000000
   17260:	bic	r3, r3, #255	; 0xff
   17264:	cmp	r3, #11776	; 0x2e00
   17268:	bne	17244 <triple_free@@Base+0x2c78>
   1726c:	ldr	r0, [r4, #48]	; 0x30
   17270:	cmp	r0, #0
   17274:	movne	r0, #5
   17278:	moveq	r0, #1
   1727c:	b	171b0 <triple_free@@Base+0x2be4>
   17280:	mov	r0, #3
   17284:	ldr	r1, [r4, #24]
   17288:	mov	r2, r5
   1728c:	bl	11bd4 <__lxstat64@plt>
   17290:	cmp	r0, #0
   17294:	streq	r0, [r7]
   17298:	moveq	r0, #13
   1729c:	beq	171b0 <triple_free@@Base+0x2be4>
   172a0:	b	17198 <triple_free@@Base+0x2bcc>
   172a4:	push	{r3, r4, r5, lr}
   172a8:	mov	r4, r0
   172ac:	ldr	r3, [r1]
   172b0:	add	r0, r3, #256	; 0x100
   172b4:	add	r2, r0, r2
   172b8:	cmp	r3, r2
   172bc:	bhi	172e8 <triple_free@@Base+0x2d1c>
   172c0:	str	r2, [r1]
   172c4:	mov	r1, r2
   172c8:	ldr	r0, [r4]
   172cc:	bl	118c8 <realloc@plt>
   172d0:	subs	r5, r0, #0
   172d4:	strne	r5, [r4]
   172d8:	movne	r3, #1
   172dc:	beq	17310 <triple_free@@Base+0x2d44>
   172e0:	mov	r0, r3
   172e4:	pop	{r3, r4, r5, pc}
   172e8:	ldr	r0, [r4]
   172ec:	mov	r5, #0
   172f0:	bl	1185c <free@plt>
   172f4:	str	r5, [r4]
   172f8:	bl	11a6c <__errno_location@plt>
   172fc:	mov	r3, r5
   17300:	mov	r2, #36	; 0x24
   17304:	str	r2, [r0]
   17308:	mov	r0, r3
   1730c:	pop	{r3, r4, r5, pc}
   17310:	ldr	r0, [r4]
   17314:	bl	1185c <free@plt>
   17318:	str	r5, [r4]
   1731c:	mov	r3, r5
   17320:	b	172e0 <triple_free@@Base+0x2d14>
   17324:	movw	r3, #258	; 0x102
   17328:	and	r3, r0, r3
   1732c:	cmp	r3, #0
   17330:	ldr	ip, [pc, #116]	; 173ac <triple_free@@Base+0x2de0>
   17334:	push	{r4, lr}
   17338:	add	ip, pc, ip
   1733c:	sub	sp, sp, #8
   17340:	mov	r4, r1
   17344:	beq	17384 <triple_free@@Base+0x2db8>
   17348:	ldr	lr, [pc, #96]	; 173b0 <triple_free@@Base+0x2de4>
   1734c:	mov	r0, #31
   17350:	ldr	r2, [pc, #92]	; 173b4 <triple_free@@Base+0x2de8>
   17354:	mov	r1, #0
   17358:	ldr	r3, [pc, #88]	; 173b8 <triple_free@@Base+0x2dec>
   1735c:	ldr	ip, [ip, lr]
   17360:	add	r2, pc, r2
   17364:	add	r3, pc, r3
   17368:	str	ip, [sp]
   1736c:	bl	13d04 <close_stdout@@Base+0xc64>
   17370:	str	r0, [r4]
   17374:	adds	r0, r0, #0
   17378:	movne	r0, #1
   1737c:	add	sp, sp, #8
   17380:	pop	{r4, pc}
   17384:	mov	r0, #32
   17388:	bl	119b8 <malloc@plt>
   1738c:	cmp	r0, #0
   17390:	str	r0, [r4]
   17394:	moveq	r0, r0
   17398:	beq	1737c <triple_free@@Base+0x2db0>
   1739c:	bl	19268 <fts_children@@Base+0x3cc>
   173a0:	mov	r0, #1
   173a4:	add	sp, sp, #8
   173a8:	pop	{r4, pc}
   173ac:	andeq	r4, r1, r0, asr #25
   173b0:	andeq	r0, r0, r8, ror r1
   173b4:			; <UNDEFINED> instruction: 0xfffffab0
   173b8:			; <UNDEFINED> instruction: 0xfffffa64
   173bc:	tst	r1, #16
   173c0:	push	{r4, lr}
   173c4:	moveq	r3, #18688	; 0x4900
   173c8:	movne	r3, #51456	; 0xc900
   173cc:	tst	r1, #2048	; 0x800
   173d0:	moveq	ip, #0
   173d4:	movne	ip, #262144	; 0x40000
   173d8:	tst	r1, #512	; 0x200
   173dc:	orr	r3, ip, r3
   173e0:	beq	17410 <triple_free@@Base+0x2e44>
   173e4:	mov	r1, r2
   173e8:	mov	r2, r3
   173ec:	bl	198e4 <fts_children@@Base+0xa48>
   173f0:	mov	r4, r0
   173f4:	cmp	r4, #0
   173f8:	blt	17408 <triple_free@@Base+0x2e3c>
   173fc:	mov	r0, r4
   17400:	mov	r1, #1
   17404:	bl	19178 <fts_children@@Base+0x2dc>
   17408:	mov	r0, r4
   1740c:	pop	{r4, pc}
   17410:	mov	r0, r2
   17414:	mov	r1, r3
   17418:	bl	1935c <fts_children@@Base+0x4c0>
   1741c:	mov	r4, r0
   17420:	b	173f4 <triple_free@@Base+0x2e28>
   17424:	movw	r3, #258	; 0x102
   17428:	and	r3, r0, r3
   1742c:	cmp	r3, #0
   17430:	push	{r4, r5, r6, r7, r8, lr}
   17434:	mov	r8, r1
   17438:	mov	r6, r2
   1743c:	beq	174a4 <triple_free@@Base+0x2ed8>
   17440:	mov	r0, #24
   17444:	bl	119b8 <malloc@plt>
   17448:	subs	r7, r0, #0
   1744c:	beq	174d0 <triple_free@@Base+0x2f04>
   17450:	ldrd	r4, [r6, #72]	; 0x48
   17454:	mov	r1, r7
   17458:	strd	r4, [r7]
   1745c:	ldrd	r4, [r6, #168]	; 0xa8
   17460:	str	r6, [r7, #16]
   17464:	strd	r4, [r7, #8]
   17468:	ldr	r0, [r8]
   1746c:	bl	1432c <close_stdout@@Base+0x128c>
   17470:	cmp	r7, r0
   17474:	mov	r4, r0
   17478:	beq	174c8 <triple_free@@Base+0x2efc>
   1747c:	mov	r0, r7
   17480:	bl	1185c <free@plt>
   17484:	cmp	r4, #0
   17488:	beq	174d0 <triple_free@@Base+0x2f04>
   1748c:	ldr	r3, [r4, #16]
   17490:	mov	r2, #2
   17494:	mov	r0, #1
   17498:	strh	r2, [r6, #60]	; 0x3c
   1749c:	str	r3, [r6]
   174a0:	pop	{r4, r5, r6, r7, r8, pc}
   174a4:	ldr	r0, [r1]
   174a8:	add	r1, r2, #72	; 0x48
   174ac:	bl	19284 <fts_children@@Base+0x3e8>
   174b0:	cmp	r0, #0
   174b4:	beq	174c8 <triple_free@@Base+0x2efc>
   174b8:	mov	r3, #2
   174bc:	str	r6, [r6]
   174c0:	strh	r3, [r6, #60]	; 0x3c
   174c4:	pop	{r4, r5, r6, r7, r8, pc}
   174c8:	mov	r0, #1
   174cc:	pop	{r4, r5, r6, r7, r8, pc}
   174d0:	mov	r0, #0
   174d4:	pop	{r4, r5, r6, r7, r8, pc}
   174d8:	ldr	ip, [pc, #568]	; 17718 <triple_free@@Base+0x314c>
   174dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   174e0:	mov	sl, r0
   174e4:	ldr	r0, [pc, #560]	; 1771c <triple_free@@Base+0x3150>
   174e8:	add	ip, pc, ip
   174ec:	sub	sp, sp, #124	; 0x7c
   174f0:	mov	r9, r3
   174f4:	mov	r3, ip
   174f8:	mov	r5, r1
   174fc:	ldr	r0, [ip, r0]
   17500:	mov	fp, r2
   17504:	ldr	r4, [sp, #160]	; 0xa0
   17508:	ldr	r3, [r0]
   1750c:	cmp	r4, #0
   17510:	str	r0, [sp]
   17514:	moveq	r7, r4
   17518:	str	r3, [sp, #116]	; 0x74
   1751c:	beq	17530 <triple_free@@Base+0x2f64>
   17520:	ldrb	r3, [r4]
   17524:	cmp	r3, #46	; 0x2e
   17528:	beq	17608 <triple_free@@Base+0x303c>
   1752c:	mov	r7, #0
   17530:	ldr	r6, [sl, #48]	; 0x30
   17534:	ands	r8, r6, #4
   17538:	beq	1757c <triple_free@@Base+0x2fb0>
   1753c:	ands	r8, r6, #512	; 0x200
   17540:	beq	1755c <triple_free@@Base+0x2f90>
   17544:	cmp	r9, #0
   17548:	movlt	r8, #0
   1754c:	blt	1755c <triple_free@@Base+0x2f90>
   17550:	mov	r0, r9
   17554:	mov	r8, #0
   17558:	bl	11bc8 <close@plt>
   1755c:	ldr	r1, [sp]
   17560:	mov	r0, r8
   17564:	ldr	r2, [sp, #116]	; 0x74
   17568:	ldr	r3, [r1]
   1756c:	cmp	r2, r3
   17570:	bne	1770c <triple_free@@Base+0x3140>
   17574:	add	sp, sp, #124	; 0x7c
   17578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1757c:	lsr	r2, r9, #31
   17580:	tst	r7, r2
   17584:	bne	17624 <triple_free@@Base+0x3058>
   17588:	cmp	r2, #0
   1758c:	streq	r9, [sp, #4]
   17590:	bne	17710 <triple_free@@Base+0x3144>
   17594:	tst	r6, #2
   17598:	bne	175c8 <triple_free@@Base+0x2ffc>
   1759c:	cmp	r4, #0
   175a0:	beq	1766c <triple_free@@Base+0x30a0>
   175a4:	ldrb	r2, [r4]
   175a8:	cmp	r2, #46	; 0x2e
   175ac:	bne	1766c <triple_free@@Base+0x30a0>
   175b0:	ldrb	r2, [r4, #1]
   175b4:	cmp	r2, #46	; 0x2e
   175b8:	bne	1766c <triple_free@@Base+0x30a0>
   175bc:	ldrb	r2, [r4, #2]
   175c0:	cmp	r2, #0
   175c4:	bne	1766c <triple_free@@Base+0x30a0>
   175c8:	mov	r0, #3
   175cc:	ldr	r1, [sp, #4]
   175d0:	add	r2, sp, #8
   175d4:	bl	11910 <__fxstat64@plt>
   175d8:	cmp	r0, #0
   175dc:	beq	17684 <triple_free@@Base+0x30b8>
   175e0:	mvn	r8, #0
   175e4:	cmp	r9, #0
   175e8:	bge	1755c <triple_free@@Base+0x2f90>
   175ec:	bl	11a6c <__errno_location@plt>
   175f0:	ldr	r5, [r0]
   175f4:	mov	r4, r0
   175f8:	ldr	r0, [sp, #4]
   175fc:	bl	11bc8 <close@plt>
   17600:	str	r5, [r4]
   17604:	b	1755c <triple_free@@Base+0x2f90>
   17608:	ldrb	r3, [r4, #1]
   1760c:	cmp	r3, #46	; 0x2e
   17610:	bne	1752c <triple_free@@Base+0x2f60>
   17614:	ldrb	r3, [r4, #2]
   17618:	rsbs	r7, r3, #1
   1761c:	movcc	r7, #0
   17620:	b	17530 <triple_free@@Base+0x2f64>
   17624:	tst	r6, #512	; 0x200
   17628:	bne	176a8 <triple_free@@Base+0x30dc>
   1762c:	mov	r1, r6
   17630:	mov	r7, #1
   17634:	ldr	r0, [sl, #32]
   17638:	mov	r2, r4
   1763c:	bl	173bc <triple_free@@Base+0x2df0>
   17640:	cmp	r0, #0
   17644:	str	r0, [sp, #4]
   17648:	blt	17704 <triple_free@@Base+0x3138>
   1764c:	ldr	r6, [sl, #48]	; 0x30
   17650:	b	17594 <triple_free@@Base+0x2fc8>
   17654:	ldrd	r4, [fp]
   17658:	ldrd	r0, [sp, #104]	; 0x68
   1765c:	cmp	r5, r1
   17660:	cmpeq	r4, r0
   17664:	bne	17698 <triple_free@@Base+0x30cc>
   17668:	ldr	r6, [sl, #48]	; 0x30
   1766c:	tst	r6, #512	; 0x200
   17670:	bne	176ec <triple_free@@Base+0x3120>
   17674:	ldr	r0, [sp, #4]
   17678:	bl	11b44 <fchdir@plt>
   1767c:	mov	r8, r0
   17680:	b	175e4 <triple_free@@Base+0x3018>
   17684:	ldrd	r2, [r5]
   17688:	ldrd	r4, [sp, #8]
   1768c:	cmp	r3, r5
   17690:	cmpeq	r2, r4
   17694:	beq	17654 <triple_free@@Base+0x3088>
   17698:	bl	11a6c <__errno_location@plt>
   1769c:	mov	r3, #2
   176a0:	str	r3, [r0]
   176a4:	b	175e0 <triple_free@@Base+0x3014>
   176a8:	add	r7, sl, #60	; 0x3c
   176ac:	mov	r0, r7
   176b0:	bl	19430 <fts_children@@Base+0x594>
   176b4:	cmp	r0, #0
   176b8:	bne	1762c <triple_free@@Base+0x3060>
   176bc:	mov	r0, r7
   176c0:	bl	1947c <fts_children@@Base+0x5e0>
   176c4:	cmp	r0, #0
   176c8:	str	r0, [sp, #4]
   176cc:	ldrlt	r1, [sl, #48]	; 0x30
   176d0:	blt	17630 <triple_free@@Base+0x3064>
   176d4:	ldr	r6, [sl, #48]	; 0x30
   176d8:	mov	r7, #1
   176dc:	ldr	r9, [sp, #4]
   176e0:	tst	r6, #2
   176e4:	beq	1766c <triple_free@@Base+0x30a0>
   176e8:	b	175c8 <triple_free@@Base+0x2ffc>
   176ec:	eor	r2, r7, #1
   176f0:	mov	r0, sl
   176f4:	ldr	r1, [sp, #4]
   176f8:	uxtb	r2, r2
   176fc:	bl	1706c <triple_free@@Base+0x2aa0>
   17700:	b	1755c <triple_free@@Base+0x2f90>
   17704:	mvn	r8, #0
   17708:	b	1755c <triple_free@@Base+0x2f90>
   1770c:	bl	118b0 <__stack_chk_fail@plt>
   17710:	mov	r1, r6
   17714:	b	17634 <triple_free@@Base+0x3068>
   17718:	andeq	r4, r1, r0, lsl fp
   1771c:	andeq	r0, r0, ip, ror r1
   17720:	push	{r4, r5, r6, r7, lr}
   17724:	movw	r3, #258	; 0x102
   17728:	ldr	r5, [pc, #216]	; 17808 <triple_free@@Base+0x323c>
   1772c:	and	r3, r0, r3
   17730:	ldr	r4, [pc, #212]	; 1780c <triple_free@@Base+0x3240>
   17734:	cmp	r3, #0
   17738:	add	r5, pc, r5
   1773c:	sub	sp, sp, #36	; 0x24
   17740:	mov	ip, r1
   17744:	ldr	r6, [r5, r4]
   17748:	mov	r3, r5
   1774c:	ldr	r3, [r6]
   17750:	str	r3, [sp, #28]
   17754:	bne	177ac <triple_free@@Base+0x31e0>
   17758:	ldr	r3, [r2, #4]
   1775c:	cmp	r3, #0
   17760:	beq	17794 <triple_free@@Base+0x31c8>
   17764:	ldr	r1, [r3, #48]	; 0x30
   17768:	cmp	r1, #0
   1776c:	blt	17794 <triple_free@@Base+0x31c8>
   17770:	ldr	r7, [ip]
   17774:	ldrd	r0, [r7, #16]
   17778:	orrs	r4, r0, r1
   1777c:	beq	17804 <triple_free@@Base+0x3238>
   17780:	ldrd	r4, [r7]
   17784:	ldrd	r0, [r2, #168]	; 0xa8
   17788:	cmp	r5, r1
   1778c:	cmpeq	r4, r0
   17790:	beq	177d8 <triple_free@@Base+0x320c>
   17794:	ldr	r2, [sp, #28]
   17798:	ldr	r3, [r6]
   1779c:	cmp	r2, r3
   177a0:	bne	17800 <triple_free@@Base+0x3234>
   177a4:	add	sp, sp, #36	; 0x24
   177a8:	pop	{r4, r5, r6, r7, pc}
   177ac:	ldrd	r4, [r2, #72]	; 0x48
   177b0:	mov	r1, sp
   177b4:	ldrd	r2, [r2, #168]	; 0xa8
   177b8:	ldr	r0, [ip]
   177bc:	strd	r4, [sp]
   177c0:	strd	r2, [sp, #8]
   177c4:	bl	143a0 <close_stdout@@Base+0x1300>
   177c8:	cmp	r0, #0
   177cc:	beq	17804 <triple_free@@Base+0x3238>
   177d0:	bl	1185c <free@plt>
   177d4:	b	17794 <triple_free@@Base+0x31c8>
   177d8:	ldrd	r0, [r7, #8]
   177dc:	ldrd	r4, [r2, #72]	; 0x48
   177e0:	cmp	r1, r5
   177e4:	cmpeq	r0, r4
   177e8:	ldrdeq	r0, [r3, #72]	; 0x48
   177ec:	strdeq	r0, [r7, #8]
   177f0:	ldreq	r1, [ip]
   177f4:	ldrdeq	r2, [r3, #168]	; 0xa8
   177f8:	strdeq	r2, [r1]
   177fc:	b	17794 <triple_free@@Base+0x31c8>
   17800:	bl	118b0 <__stack_chk_fail@plt>
   17804:	bl	11bbc <abort@plt>
   17808:	andeq	r4, r1, r0, asr #17
   1780c:	andeq	r0, r0, ip, ror r1
   17810:	ldr	r3, [pc, #2256]	; 180e8 <triple_free@@Base+0x3b1c>
   17814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17818:	add	r3, pc, r3
   1781c:	ldr	r2, [pc, #2248]	; 180ec <triple_free@@Base+0x3b20>
   17820:	sub	sp, sp, #164	; 0xa4
   17824:	ldr	r9, [r0]
   17828:	mov	r5, r0
   1782c:	str	r1, [sp, #52]	; 0x34
   17830:	ldr	r2, [r3, r2]
   17834:	ldr	r0, [r9, #12]
   17838:	adds	r1, r0, #0
   1783c:	ldr	r3, [r2]
   17840:	str	r2, [sp, #48]	; 0x30
   17844:	movne	r1, #1
   17848:	cmp	r1, #0
   1784c:	str	r1, [sp, #44]	; 0x2c
   17850:	str	r3, [sp, #156]	; 0x9c
   17854:	bne	17d88 <triple_free@@Base+0x37bc>
   17858:	ldr	r3, [r5, #48]	; 0x30
   1785c:	ldr	r1, [r9, #24]
   17860:	and	r3, r3, #516	; 0x204
   17864:	cmp	r3, #512	; 0x200
   17868:	ldr	r3, [r5, #48]	; 0x30
   1786c:	ldreq	r0, [r5, #32]
   17870:	mvnne	r0, #99	; 0x63
   17874:	tst	r3, #16
   17878:	moveq	r2, #18688	; 0x4900
   1787c:	bne	17d14 <triple_free@@Base+0x3748>
   17880:	tst	r3, #2048	; 0x800
   17884:	moveq	r3, #0
   17888:	movne	r3, #262144	; 0x40000
   1788c:	orr	r2, r3, r2
   17890:	bl	198e4 <fts_children@@Base+0xa48>
   17894:	subs	r4, r0, #0
   17898:	blt	17fb4 <triple_free@@Base+0x39e8>
   1789c:	mov	r1, #1
   178a0:	bl	19178 <fts_children@@Base+0x2dc>
   178a4:	mov	r0, r4
   178a8:	bl	11b20 <fdopendir@plt>
   178ac:	cmp	r0, #0
   178b0:	beq	17f9c <triple_free@@Base+0x39d0>
   178b4:	ldrh	r3, [r9, #60]	; 0x3c
   178b8:	str	r0, [r9, #12]
   178bc:	cmp	r3, #11
   178c0:	beq	17fd0 <triple_free@@Base+0x3a04>
   178c4:	ldr	r0, [r5, #48]	; 0x30
   178c8:	tst	r0, #256	; 0x100
   178cc:	bne	17df8 <triple_free@@Base+0x382c>
   178d0:	ldr	r2, [r5, #44]	; 0x2c
   178d4:	movw	r3, #34464	; 0x86a0
   178d8:	movt	r3, #1
   178dc:	cmp	r2, #0
   178e0:	mvnne	r3, #0
   178e4:	str	r3, [sp, #20]
   178e8:	ldr	r3, [sp, #52]	; 0x34
   178ec:	cmp	r3, #2
   178f0:	moveq	r6, #0
   178f4:	beq	1790c <triple_free@@Base+0x3340>
   178f8:	ldr	r3, [r5, #48]	; 0x30
   178fc:	and	r3, r3, #24
   17900:	cmp	r3, #24
   17904:	mvnne	r6, #0
   17908:	beq	17de0 <triple_free@@Base+0x3814>
   1790c:	ldr	r1, [sp, #44]	; 0x2c
   17910:	cmp	r1, #0
   17914:	movne	r1, #1
   17918:	strne	r1, [sp, #60]	; 0x3c
   1791c:	beq	17cb8 <triple_free@@Base+0x36ec>
   17920:	ldr	r3, [r9, #40]	; 0x28
   17924:	ldr	r2, [r9, #28]
   17928:	str	r3, [sp, #28]
   1792c:	sub	r3, r3, #1
   17930:	ldr	r1, [sp, #28]
   17934:	ldrb	r2, [r2, r3]
   17938:	cmp	r2, #47	; 0x2f
   1793c:	moveq	r1, r3
   17940:	ands	r0, r0, #4
   17944:	str	r1, [sp, #28]
   17948:	ldrne	r3, [r5, #24]
   1794c:	movne	r1, #47	; 0x2f
   17950:	ldrne	r0, [sp, #28]
   17954:	streq	r0, [sp, #36]	; 0x24
   17958:	addne	r2, r3, r0
   1795c:	strbne	r1, [r3, r0]
   17960:	addne	r2, r2, #1
   17964:	ldr	r3, [r9, #48]	; 0x30
   17968:	add	r0, r5, #48	; 0x30
   1796c:	ldr	r1, [sp, #28]
   17970:	add	r3, r3, #1
   17974:	ldr	fp, [r5, #36]	; 0x24
   17978:	str	r3, [sp, #24]
   1797c:	add	r1, r1, #1
   17980:	ldr	r3, [pc, #1896]	; 180f0 <triple_free@@Base+0x3b24>
   17984:	rsb	fp, r1, fp
   17988:	strne	r2, [sp, #36]	; 0x24
   1798c:	mov	r2, #0
   17990:	add	r3, pc, r3
   17994:	str	r1, [sp, #12]
   17998:	str	r2, [sp, #32]
   1799c:	mov	sl, r2
   179a0:	mov	r7, r2
   179a4:	str	r2, [sp, #16]
   179a8:	str	r3, [sp, #40]	; 0x28
   179ac:	str	r0, [sp, #56]	; 0x38
   179b0:	b	17a80 <triple_free@@Base+0x34b4>
   179b4:	ldr	r2, [sp, #12]
   179b8:	adds	r0, r0, r2
   179bc:	bcs	17b5c <triple_free@@Base+0x3590>
   179c0:	ldr	r3, [sp, #24]
   179c4:	str	r3, [r4, #48]	; 0x30
   179c8:	ldr	r3, [r5]
   179cc:	str	r0, [r4, #40]	; 0x28
   179d0:	str	r3, [r4, #4]
   179d4:	ldrd	r2, [r8]
   179d8:	strd	r2, [r4, #168]	; 0xa8
   179dc:	ldr	r3, [r5, #48]	; 0x30
   179e0:	tst	r3, #4
   179e4:	addeq	r3, r4, #176	; 0xb0
   179e8:	streq	r3, [r4, #24]
   179ec:	bne	17ba4 <triple_free@@Base+0x35d8>
   179f0:	ldr	r3, [r5, #44]	; 0x2c
   179f4:	cmp	r3, #0
   179f8:	beq	17a08 <triple_free@@Base+0x343c>
   179fc:	ldr	r3, [r5, #48]	; 0x30
   17a00:	ands	r3, r3, #1024	; 0x400
   17a04:	beq	17bc4 <triple_free@@Base+0x35f8>
   17a08:	ldr	r3, [r5, #48]	; 0x30
   17a0c:	and	r3, r3, #24
   17a10:	cmp	r3, #24
   17a14:	movne	r2, #0
   17a18:	beq	17bfc <triple_free@@Base+0x3630>
   17a1c:	mov	r0, #11
   17a20:	strh	r0, [r4, #60]	; 0x3c
   17a24:	ldrb	r3, [r8, #18]
   17a28:	sub	r3, r3, #1
   17a2c:	cmp	r3, #11
   17a30:	ldrls	r1, [sp, #40]	; 0x28
   17a34:	movhi	r3, #0
   17a38:	ldrls	r3, [r1, r3, lsl #2]
   17a3c:	cmp	r2, #0
   17a40:	moveq	r2, #2
   17a44:	movne	r2, #1
   17a48:	str	r3, [r4, #88]	; 0x58
   17a4c:	mov	r3, #0
   17a50:	strd	r2, [r4, #120]	; 0x78
   17a54:	ldr	r2, [sp, #16]
   17a58:	add	r7, r7, #1
   17a5c:	ldr	r0, [sp, #20]
   17a60:	mov	r3, #0
   17a64:	cmp	r2, #0
   17a68:	str	r3, [r4, #8]
   17a6c:	streq	r4, [sp, #16]
   17a70:	strne	r4, [sl, #8]
   17a74:	cmp	r0, r7
   17a78:	bls	17c24 <triple_free@@Base+0x3658>
   17a7c:	mov	sl, r4
   17a80:	ldr	r0, [r9, #12]
   17a84:	cmp	r0, #0
   17a88:	beq	17c24 <triple_free@@Base+0x3658>
   17a8c:	bl	11b14 <readdir64@plt>
   17a90:	subs	r8, r0, #0
   17a94:	beq	17c10 <triple_free@@Base+0x3644>
   17a98:	ldr	r3, [r5, #48]	; 0x30
   17a9c:	tst	r3, #32
   17aa0:	bne	17ab0 <triple_free@@Base+0x34e4>
   17aa4:	ldrb	r3, [r8, #19]
   17aa8:	cmp	r3, #46	; 0x2e
   17aac:	beq	17bdc <triple_free@@Base+0x3610>
   17ab0:	add	r6, r8, #19
   17ab4:	mov	r0, r6
   17ab8:	bl	11a30 <strlen@plt>
   17abc:	mov	r1, r6
   17ac0:	mov	r2, r0
   17ac4:	mov	r0, r5
   17ac8:	bl	16f8c <triple_free@@Base+0x29c0>
   17acc:	subs	r4, r0, #0
   17ad0:	beq	17f54 <triple_free@@Base+0x3988>
   17ad4:	mov	r0, r6
   17ad8:	bl	11a30 <strlen@plt>
   17adc:	cmp	fp, r0
   17ae0:	bhi	179b4 <triple_free@@Base+0x33e8>
   17ae4:	mov	r3, r5
   17ae8:	ldr	r1, [sp, #28]
   17aec:	ldr	fp, [r3, #24]!
   17af0:	add	r2, r1, #2
   17af4:	add	r1, r5, #36	; 0x24
   17af8:	add	r2, r2, r0
   17afc:	mov	r0, r3
   17b00:	bl	172a4 <triple_free@@Base+0x2cd8>
   17b04:	cmp	r0, #0
   17b08:	beq	17f54 <triple_free@@Base+0x3988>
   17b0c:	ldr	r3, [r5, #24]
   17b10:	cmp	r3, fp
   17b14:	beq	17b3c <triple_free@@Base+0x3570>
   17b18:	ldr	r2, [r5, #48]	; 0x30
   17b1c:	tst	r2, #4
   17b20:	ldrne	r2, [sp, #12]
   17b24:	moveq	r0, #1
   17b28:	streq	r0, [sp, #32]
   17b2c:	addne	r3, r3, r2
   17b30:	strne	r3, [sp, #36]	; 0x24
   17b34:	movne	r3, #1
   17b38:	strne	r3, [sp, #32]
   17b3c:	ldr	r1, [sp, #12]
   17b40:	mov	r0, r6
   17b44:	ldr	fp, [r5, #36]	; 0x24
   17b48:	rsb	fp, r1, fp
   17b4c:	bl	11a30 <strlen@plt>
   17b50:	ldr	r2, [sp, #12]
   17b54:	adds	r0, r0, r2
   17b58:	bcc	179c0 <triple_free@@Base+0x33f4>
   17b5c:	mov	r0, r4
   17b60:	mov	r4, #0
   17b64:	bl	1185c <free@plt>
   17b68:	ldr	r0, [sp, #16]
   17b6c:	bl	16ffc <triple_free@@Base+0x2a30>
   17b70:	ldr	r0, [r9, #12]
   17b74:	bl	11bf8 <closedir@plt>
   17b78:	str	r4, [r9, #12]
   17b7c:	mov	r3, #7
   17b80:	strh	r3, [r9, #60]	; 0x3c
   17b84:	ldr	r3, [r5, #48]	; 0x30
   17b88:	orr	r3, r3, #16384	; 0x4000
   17b8c:	str	r3, [r5, #48]	; 0x30
   17b90:	bl	11a6c <__errno_location@plt>
   17b94:	mov	r2, #36	; 0x24
   17b98:	mov	r3, r4
   17b9c:	str	r2, [r0]
   17ba0:	b	17db4 <triple_free@@Base+0x37e8>
   17ba4:	ldr	r3, [r4, #28]
   17ba8:	add	r1, r4, #176	; 0xb0
   17bac:	ldr	r2, [r4, #52]	; 0x34
   17bb0:	ldr	r0, [sp, #36]	; 0x24
   17bb4:	str	r3, [r4, #24]
   17bb8:	add	r2, r2, #1
   17bbc:	bl	11850 <memmove@plt>
   17bc0:	b	179f0 <triple_free@@Base+0x3424>
   17bc4:	ldr	r0, [r5, #32]
   17bc8:	mov	r2, r4
   17bcc:	ldr	r1, [sp, #56]	; 0x38
   17bd0:	bl	17130 <triple_free@@Base+0x2b64>
   17bd4:	strh	r0, [r4, #60]	; 0x3c
   17bd8:	b	17a54 <triple_free@@Base+0x3488>
   17bdc:	ldrb	r3, [r8, #20]
   17be0:	cmp	r3, #0
   17be4:	beq	17bf4 <triple_free@@Base+0x3628>
   17be8:	ldrh	r3, [r8, #20]
   17bec:	cmp	r3, #46	; 0x2e
   17bf0:	bne	17ab0 <triple_free@@Base+0x34e4>
   17bf4:	mov	r4, sl
   17bf8:	b	17a7c <triple_free@@Base+0x34b0>
   17bfc:	ldrb	r3, [r8, #18]
   17c00:	tst	r3, #251	; 0xfb
   17c04:	moveq	r2, #0
   17c08:	movne	r2, #1
   17c0c:	b	17a1c <triple_free@@Base+0x3450>
   17c10:	ldr	r0, [r9, #12]
   17c14:	cmp	r0, #0
   17c18:	beq	17c24 <triple_free@@Base+0x3658>
   17c1c:	bl	11bf8 <closedir@plt>
   17c20:	str	r8, [r9, #12]
   17c24:	ldr	r1, [sp, #32]
   17c28:	cmp	r1, #0
   17c2c:	bne	17e48 <triple_free@@Base+0x387c>
   17c30:	ldr	r3, [r5, #48]	; 0x30
   17c34:	tst	r3, #4
   17c38:	beq	17c6c <triple_free@@Base+0x36a0>
   17c3c:	ldr	r3, [r5, #36]	; 0x24
   17c40:	ldr	r2, [sp, #12]
   17c44:	cmp	r3, r2
   17c48:	beq	17c54 <triple_free@@Base+0x3688>
   17c4c:	cmp	r7, #0
   17c50:	bne	17c60 <triple_free@@Base+0x3694>
   17c54:	ldr	r3, [sp, #36]	; 0x24
   17c58:	sub	r3, r3, #1
   17c5c:	str	r3, [sp, #36]	; 0x24
   17c60:	ldr	r0, [sp, #36]	; 0x24
   17c64:	mov	r3, #0
   17c68:	strb	r3, [r0]
   17c6c:	ldr	r1, [sp, #44]	; 0x2c
   17c70:	ldr	r2, [sp, #60]	; 0x3c
   17c74:	eor	r3, r1, #1
   17c78:	tst	r2, r3
   17c7c:	bne	17d34 <triple_free@@Base+0x3768>
   17c80:	cmp	r7, #0
   17c84:	beq	18020 <triple_free@@Base+0x3a54>
   17c88:	movw	r3, #10000	; 0x2710
   17c8c:	cmp	r7, r3
   17c90:	bls	17d9c <triple_free@@Base+0x37d0>
   17c94:	ldr	r3, [r5, #44]	; 0x2c
   17c98:	cmp	r3, #0
   17c9c:	beq	18040 <triple_free@@Base+0x3a74>
   17ca0:	mov	r0, r5
   17ca4:	ldr	r1, [sp, #16]
   17ca8:	mov	r2, r7
   17cac:	bl	16e9c <triple_free@@Base+0x28d0>
   17cb0:	mov	r3, r0
   17cb4:	b	17db4 <triple_free@@Base+0x37e8>
   17cb8:	adds	r6, r6, #0
   17cbc:	ldr	r2, [sp, #52]	; 0x34
   17cc0:	movne	r6, #1
   17cc4:	subs	r3, r2, #3
   17cc8:	rsbs	r7, r3, #0
   17ccc:	adcs	r7, r7, r3
   17cd0:	orrs	r3, r6, r7
   17cd4:	beq	17dd4 <triple_free@@Base+0x3808>
   17cd8:	tst	r0, #512	; 0x200
   17cdc:	bne	17ed8 <triple_free@@Base+0x390c>
   17ce0:	mov	r3, #0
   17ce4:	mov	r0, r5
   17ce8:	str	r3, [sp]
   17cec:	add	r1, r9, #72	; 0x48
   17cf0:	add	r2, r9, #168	; 0xa8
   17cf4:	mov	r3, r4
   17cf8:	bl	174d8 <triple_free@@Base+0x2f0c>
   17cfc:	cmp	r0, #0
   17d00:	bne	17ef4 <triple_free@@Base+0x3928>
   17d04:	mov	r3, #1
   17d08:	ldr	r0, [r5, #48]	; 0x30
   17d0c:	str	r3, [sp, #60]	; 0x3c
   17d10:	b	17920 <triple_free@@Base+0x3354>
   17d14:	tst	r3, #1
   17d18:	moveq	r2, #51456	; 0xc900
   17d1c:	beq	17880 <triple_free@@Base+0x32b4>
   17d20:	ldr	r2, [r9, #48]	; 0x30
   17d24:	cmp	r2, #0
   17d28:	movne	r2, #51456	; 0xc900
   17d2c:	moveq	r2, #18688	; 0x4900
   17d30:	b	17880 <triple_free@@Base+0x32b4>
   17d34:	ldr	r3, [sp, #52]	; 0x34
   17d38:	cmp	r3, #1
   17d3c:	cmpne	r7, #0
   17d40:	bne	17c88 <triple_free@@Base+0x36bc>
   17d44:	ldr	r3, [r9, #48]	; 0x30
   17d48:	cmp	r3, #0
   17d4c:	bne	17ff0 <triple_free@@Base+0x3a24>
   17d50:	mov	r0, r5
   17d54:	bl	170e0 <triple_free@@Base+0x2b14>
   17d58:	adds	r0, r0, #0
   17d5c:	movne	r0, #1
   17d60:	cmp	r0, #0
   17d64:	beq	17c80 <triple_free@@Base+0x36b4>
   17d68:	mov	r3, #7
   17d6c:	strh	r3, [r9, #60]	; 0x3c
   17d70:	ldr	r3, [r5, #48]	; 0x30
   17d74:	ldr	r0, [sp, #16]
   17d78:	orr	r3, r3, #16384	; 0x4000
   17d7c:	str	r3, [r5, #48]	; 0x30
   17d80:	bl	16ffc <triple_free@@Base+0x2a30>
   17d84:	b	17fc8 <triple_free@@Base+0x39fc>
   17d88:	bl	11b38 <dirfd@plt>
   17d8c:	subs	r4, r0, #0
   17d90:	blt	180ac <triple_free@@Base+0x3ae0>
   17d94:	ldr	r0, [r5, #48]	; 0x30
   17d98:	b	178d0 <triple_free@@Base+0x3304>
   17d9c:	ldr	r3, [r5, #44]	; 0x2c
   17da0:	cmp	r3, #0
   17da4:	beq	17db0 <triple_free@@Base+0x37e4>
   17da8:	cmp	r7, #1
   17dac:	bhi	17ca0 <triple_free@@Base+0x36d4>
   17db0:	ldr	r3, [sp, #16]
   17db4:	ldr	r1, [sp, #48]	; 0x30
   17db8:	mov	r0, r3
   17dbc:	ldr	r2, [sp, #156]	; 0x9c
   17dc0:	ldr	r3, [r1]
   17dc4:	cmp	r2, r3
   17dc8:	bne	180e4 <triple_free@@Base+0x3b18>
   17dcc:	add	sp, sp, #164	; 0xa4
   17dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17dd4:	ldr	r2, [sp, #44]	; 0x2c
   17dd8:	str	r2, [sp, #60]	; 0x3c
   17ddc:	b	17920 <triple_free@@Base+0x3354>
   17de0:	tst	r0, #32
   17de4:	ldr	r6, [r9, #92]	; 0x5c
   17de8:	movne	r3, #0
   17dec:	moveq	r3, #2
   17df0:	rsb	r6, r3, r6
   17df4:	b	1790c <triple_free@@Base+0x3340>
   17df8:	add	r6, r5, #56	; 0x38
   17dfc:	mov	r2, r9
   17e00:	mov	r1, r6
   17e04:	bl	17720 <triple_free@@Base+0x3154>
   17e08:	add	r1, r5, #48	; 0x30
   17e0c:	mov	r2, r9
   17e10:	mov	r3, #0
   17e14:	ldr	r0, [r5, #32]
   17e18:	bl	17130 <triple_free@@Base+0x2b64>
   17e1c:	mov	r1, r6
   17e20:	ldr	r0, [r5, #48]	; 0x30
   17e24:	mov	r2, r9
   17e28:	bl	17424 <triple_free@@Base+0x2e58>
   17e2c:	subs	r6, r0, #0
   17e30:	bne	17d94 <triple_free@@Base+0x37c8>
   17e34:	bl	11a6c <__errno_location@plt>
   17e38:	mov	r2, #12
   17e3c:	mov	r3, r6
   17e40:	str	r2, [r0]
   17e44:	b	17db4 <triple_free@@Base+0x37e8>
   17e48:	ldr	r3, [r5, #4]
   17e4c:	ldr	r2, [r5, #24]
   17e50:	cmp	r3, #0
   17e54:	beq	17e84 <triple_free@@Base+0x38b8>
   17e58:	ldr	r1, [r3, #24]
   17e5c:	add	r0, r3, #176	; 0xb0
   17e60:	cmp	r1, r0
   17e64:	ldrne	r0, [r3, #28]
   17e68:	str	r2, [r3, #28]
   17e6c:	rsbne	r1, r0, r1
   17e70:	addne	r1, r2, r1
   17e74:	strne	r1, [r3, #24]
   17e78:	ldr	r3, [r3, #8]
   17e7c:	cmp	r3, #0
   17e80:	bne	17e58 <triple_free@@Base+0x388c>
   17e84:	ldr	r3, [sp, #16]
   17e88:	b	17ebc <triple_free@@Base+0x38f0>
   17e8c:	ldr	r1, [r3, #24]
   17e90:	add	r0, r3, #176	; 0xb0
   17e94:	cmp	r1, r0
   17e98:	ldrne	r0, [r3, #28]
   17e9c:	str	r2, [r3, #28]
   17ea0:	rsbne	r1, r0, r1
   17ea4:	addne	r1, r2, r1
   17ea8:	strne	r1, [r3, #24]
   17eac:	ldr	r1, [r3, #8]
   17eb0:	cmp	r1, #0
   17eb4:	ldreq	r1, [r3, #4]
   17eb8:	mov	r3, r1
   17ebc:	ldr	r1, [r3, #48]	; 0x30
   17ec0:	cmp	r1, #0
   17ec4:	bge	17e8c <triple_free@@Base+0x38c0>
   17ec8:	ldr	r3, [r5, #48]	; 0x30
   17ecc:	tst	r3, #4
   17ed0:	bne	17c3c <triple_free@@Base+0x3670>
   17ed4:	b	17c6c <triple_free@@Base+0x36a0>
   17ed8:	mov	r0, r4
   17edc:	bl	19950 <fts_children@@Base+0xab4>
   17ee0:	subs	r4, r0, #0
   17ee4:	blt	17ef4 <triple_free@@Base+0x3928>
   17ee8:	mov	r1, #1
   17eec:	bl	19178 <fts_children@@Base+0x2dc>
   17ef0:	b	17ce0 <triple_free@@Base+0x3714>
   17ef4:	tst	r6, r7
   17ef8:	beq	17f08 <triple_free@@Base+0x393c>
   17efc:	bl	11a6c <__errno_location@plt>
   17f00:	ldr	r3, [r0]
   17f04:	str	r3, [r9, #32]
   17f08:	ldrh	r3, [r9, #62]	; 0x3e
   17f0c:	ldr	r0, [r9, #12]
   17f10:	orr	r3, r3, #1
   17f14:	strh	r3, [r9, #62]	; 0x3e
   17f18:	bl	11bf8 <closedir@plt>
   17f1c:	mov	r3, #0
   17f20:	str	r3, [r9, #12]
   17f24:	ldr	r3, [r5, #48]	; 0x30
   17f28:	tst	r3, #512	; 0x200
   17f2c:	beq	17f40 <triple_free@@Base+0x3974>
   17f30:	cmp	r4, #0
   17f34:	blt	17f40 <triple_free@@Base+0x3974>
   17f38:	mov	r0, r4
   17f3c:	bl	11bc8 <close@plt>
   17f40:	mov	r3, #0
   17f44:	str	r3, [r9, #12]
   17f48:	str	r3, [sp, #60]	; 0x3c
   17f4c:	ldr	r0, [r5, #48]	; 0x30
   17f50:	b	17920 <triple_free@@Base+0x3354>
   17f54:	bl	11a6c <__errno_location@plt>
   17f58:	mov	r6, r0
   17f5c:	mov	r0, r4
   17f60:	ldr	r4, [r6]
   17f64:	bl	1185c <free@plt>
   17f68:	ldr	r0, [sp, #16]
   17f6c:	bl	16ffc <triple_free@@Base+0x2a30>
   17f70:	ldr	r0, [r9, #12]
   17f74:	bl	11bf8 <closedir@plt>
   17f78:	mov	r2, #7
   17f7c:	mov	r3, #0
   17f80:	strh	r2, [r9, #60]	; 0x3c
   17f84:	str	r3, [r9, #12]
   17f88:	ldr	r2, [r5, #48]	; 0x30
   17f8c:	orr	r2, r2, #16384	; 0x4000
   17f90:	str	r2, [r5, #48]	; 0x30
   17f94:	str	r4, [r6]
   17f98:	b	17db4 <triple_free@@Base+0x37e8>
   17f9c:	bl	11a6c <__errno_location@plt>
   17fa0:	ldr	r6, [r0]
   17fa4:	mov	r5, r0
   17fa8:	mov	r0, r4
   17fac:	bl	11bc8 <close@plt>
   17fb0:	str	r6, [r5]
   17fb4:	ldr	r2, [sp, #52]	; 0x34
   17fb8:	mov	r4, #0
   17fbc:	str	r4, [r9, #12]
   17fc0:	cmp	r2, #3
   17fc4:	beq	180c8 <triple_free@@Base+0x3afc>
   17fc8:	mov	r3, #0
   17fcc:	b	17db4 <triple_free@@Base+0x37e8>
   17fd0:	ldr	r0, [r5, #32]
   17fd4:	add	r1, r5, #48	; 0x30
   17fd8:	mov	r2, r9
   17fdc:	mov	r3, #0
   17fe0:	bl	17130 <triple_free@@Base+0x2b64>
   17fe4:	strh	r0, [r9, #60]	; 0x3c
   17fe8:	ldr	r0, [r5, #48]	; 0x30
   17fec:	b	178d0 <triple_free@@Base+0x3304>
   17ff0:	ldr	r2, [r9, #4]
   17ff4:	mov	r0, r5
   17ff8:	ldr	r1, [pc, #244]	; 180f4 <triple_free@@Base+0x3b28>
   17ffc:	mvn	r3, #0
   18000:	add	r1, pc, r1
   18004:	str	r1, [sp]
   18008:	add	r1, r2, #72	; 0x48
   1800c:	add	r2, r2, #168	; 0xa8
   18010:	bl	174d8 <triple_free@@Base+0x2f0c>
   18014:	adds	r0, r0, #0
   18018:	movne	r0, #1
   1801c:	b	17d60 <triple_free@@Base+0x3794>
   18020:	ldr	r0, [sp, #52]	; 0x34
   18024:	cmp	r0, #3
   18028:	ldr	r0, [sp, #16]
   1802c:	moveq	r3, #6
   18030:	strheq	r3, [r9, #60]	; 0x3c
   18034:	bl	16ffc <triple_free@@Base+0x2a30>
   18038:	mov	r3, #0
   1803c:	b	17db4 <triple_free@@Base+0x37e8>
   18040:	ldr	r3, [r5, #48]	; 0x30
   18044:	tst	r3, #512	; 0x200
   18048:	beq	17db0 <triple_free@@Base+0x37e4>
   1804c:	ldr	r0, [r5, #32]
   18050:	add	r1, sp, #64	; 0x40
   18054:	bl	117e4 <fstatfs64@plt>
   18058:	cmp	r0, #0
   1805c:	bne	18080 <triple_free@@Base+0x3ab4>
   18060:	ldr	r2, [sp, #64]	; 0x40
   18064:	movw	r3, #26985	; 0x6969
   18068:	cmp	r2, r3
   1806c:	beq	17d9c <triple_free@@Base+0x37d0>
   18070:	movw	r3, #6548	; 0x1994
   18074:	movt	r3, #258	; 0x102
   18078:	cmp	r2, r3
   1807c:	beq	17d9c <triple_free@@Base+0x37d0>
   18080:	ldr	r3, [pc, #112]	; 180f8 <triple_free@@Base+0x3b2c>
   18084:	mov	r2, r7
   18088:	ldr	r1, [sp, #16]
   1808c:	mov	r0, r5
   18090:	add	r3, pc, r3
   18094:	str	r3, [r5, #44]	; 0x2c
   18098:	bl	16e9c <triple_free@@Base+0x28d0>
   1809c:	mov	r3, #0
   180a0:	str	r3, [r5, #44]	; 0x2c
   180a4:	str	r0, [sp, #16]
   180a8:	b	17db0 <triple_free@@Base+0x37e4>
   180ac:	ldr	r0, [r9, #12]
   180b0:	mov	r4, #0
   180b4:	bl	11bf8 <closedir@plt>
   180b8:	ldr	r2, [sp, #52]	; 0x34
   180bc:	str	r4, [r9, #12]
   180c0:	cmp	r2, #3
   180c4:	bne	17fc8 <triple_free@@Base+0x39fc>
   180c8:	mov	r3, #4
   180cc:	strh	r3, [r9, #60]	; 0x3c
   180d0:	bl	11a6c <__errno_location@plt>
   180d4:	mov	r3, r4
   180d8:	ldr	r2, [r0]
   180dc:	str	r2, [r9, #32]
   180e0:	b	17db4 <triple_free@@Base+0x37e8>
   180e4:	bl	118b0 <__stack_chk_fail@plt>
   180e8:	andeq	r4, r1, r0, ror #15
   180ec:	andeq	r0, r0, ip, ror r1
   180f0:			; <UNDEFINED> instruction: 0x000038bc
   180f4:	andeq	r3, r0, ip, ror r2
   180f8:			; <UNDEFINED> instruction: 0xffffedd4

000180fc <fts_open@@Base>:
   180fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18100:	mov	fp, r1
   18104:	bic	r1, r1, #8128	; 0x1fc0
   18108:	sub	sp, sp, #20
   1810c:	bics	r4, r1, #63	; 0x3f
   18110:	mov	r7, r0
   18114:	mov	r8, r2
   18118:	bne	18448 <fts_open@@Base+0x34c>
   1811c:	and	r3, fp, #516	; 0x204
   18120:	cmp	r3, #516	; 0x204
   18124:	beq	1846c <fts_open@@Base+0x370>
   18128:	ands	r5, fp, #18
   1812c:	beq	18430 <fts_open@@Base+0x334>
   18130:	mov	r0, #96	; 0x60
   18134:	bl	119b8 <malloc@plt>
   18138:	subs	r5, r0, #0
   1813c:	beq	18380 <fts_open@@Base+0x284>
   18140:	mov	r1, r4
   18144:	mov	r2, #96	; 0x60
   18148:	bl	11a84 <memset@plt>
   1814c:	tst	fp, #2
   18150:	bicne	r3, fp, #512	; 0x200
   18154:	streq	fp, [r5, #48]	; 0x30
   18158:	str	r8, [r5, #44]	; 0x2c
   1815c:	orrne	r3, r3, #4
   18160:	strne	r3, [r5, #48]	; 0x30
   18164:	mvn	r3, #99	; 0x63
   18168:	str	r3, [r5, #32]
   1816c:	ldr	r3, [r7]
   18170:	cmp	r3, #0
   18174:	beq	18464 <fts_open@@Base+0x368>
   18178:	mov	r6, r7
   1817c:	mov	r4, #0
   18180:	mov	r0, r3
   18184:	bl	11a30 <strlen@plt>
   18188:	ldr	r3, [r6, #4]!
   1818c:	cmp	r4, r0
   18190:	movcc	r4, r0
   18194:	cmp	r3, #0
   18198:	bne	18180 <fts_open@@Base+0x84>
   1819c:	add	r2, r4, #1
   181a0:	cmp	r2, #4096	; 0x1000
   181a4:	movcc	r2, #4096	; 0x1000
   181a8:	add	r0, r5, #24
   181ac:	add	r1, r5, #36	; 0x24
   181b0:	bl	172a4 <triple_free@@Base+0x2cd8>
   181b4:	subs	sl, r0, #0
   181b8:	beq	183c4 <fts_open@@Base+0x2c8>
   181bc:	ldr	r1, [r7]
   181c0:	cmp	r1, #0
   181c4:	beq	183dc <fts_open@@Base+0x2e0>
   181c8:	ldr	r1, [pc, #696]	; 18488 <fts_open@@Base+0x38c>
   181cc:	mov	r0, r5
   181d0:	mov	r2, #0
   181d4:	add	r1, pc, r1
   181d8:	bl	16f8c <triple_free@@Base+0x29c0>
   181dc:	subs	r9, r0, #0
   181e0:	beq	183bc <fts_open@@Base+0x2c0>
   181e4:	mvn	r3, #0
   181e8:	str	r3, [r9, #48]	; 0x30
   181ec:	ldr	r1, [r7]
   181f0:	cmp	r8, #0
   181f4:	ldrne	sl, [r5, #48]	; 0x30
   181f8:	ubfxne	sl, sl, #10, #1
   181fc:	cmp	r1, #0
   18200:	beq	18480 <fts_open@@Base+0x384>
   18204:	mov	r2, #0
   18208:	and	fp, fp, #4096	; 0x1000
   1820c:	add	r3, r5, #48	; 0x30
   18210:	str	fp, [sp, #4]
   18214:	str	r2, [sp, #8]
   18218:	mov	fp, sl
   1821c:	str	r3, [sp, #12]
   18220:	mov	r6, r2
   18224:	mov	r4, r2
   18228:	mov	sl, r1
   1822c:	b	18264 <fts_open@@Base+0x168>
   18230:	cmp	r8, #0
   18234:	mov	r3, #11
   18238:	mov	r2, #2
   1823c:	strh	r3, [sl, #60]	; 0x3c
   18240:	mov	r3, #0
   18244:	strd	r2, [sl, #120]	; 0x78
   18248:	beq	182ec <fts_open@@Base+0x1f0>
   1824c:	str	r4, [sl, #8]
   18250:	mov	r4, sl
   18254:	ldr	sl, [r7, #4]!
   18258:	add	r6, r6, #1
   1825c:	cmp	sl, #0
   18260:	beq	18318 <fts_open@@Base+0x21c>
   18264:	mov	r0, sl
   18268:	bl	11a30 <strlen@plt>
   1826c:	ldr	r3, [sp, #4]
   18270:	cmp	r3, #0
   18274:	mov	r2, r0
   18278:	bne	18294 <fts_open@@Base+0x198>
   1827c:	cmp	r0, #2
   18280:	bls	18294 <fts_open@@Base+0x198>
   18284:	add	r3, sl, r0
   18288:	ldrb	r0, [r3, #-1]
   1828c:	cmp	r0, #47	; 0x2f
   18290:	beq	1838c <fts_open@@Base+0x290>
   18294:	mov	r1, sl
   18298:	mov	r0, r5
   1829c:	bl	16f8c <triple_free@@Base+0x29c0>
   182a0:	subs	sl, r0, #0
   182a4:	beq	183ac <fts_open@@Base+0x2b0>
   182a8:	cmp	r4, #0
   182ac:	moveq	r3, #0
   182b0:	andne	r3, fp, #1
   182b4:	mov	r2, #0
   182b8:	cmp	r3, r2
   182bc:	str	r2, [sl, #48]	; 0x30
   182c0:	str	r9, [sl, #4]
   182c4:	add	r2, sl, #176	; 0xb0
   182c8:	str	r2, [sl, #24]
   182cc:	bne	18230 <fts_open@@Base+0x134>
   182d0:	ldr	r0, [r5, #32]
   182d4:	mov	r2, sl
   182d8:	ldr	r1, [sp, #12]
   182dc:	bl	17130 <triple_free@@Base+0x2b64>
   182e0:	cmp	r8, #0
   182e4:	strh	r0, [sl, #60]	; 0x3c
   182e8:	bne	1824c <fts_open@@Base+0x150>
   182ec:	cmp	r4, #0
   182f0:	str	r8, [sl, #8]
   182f4:	streq	sl, [sp, #8]
   182f8:	add	r6, r6, #1
   182fc:	ldrne	r3, [sp, #8]
   18300:	moveq	r4, sl
   18304:	strne	sl, [sp, #8]
   18308:	strne	sl, [r3, #8]
   1830c:	ldr	sl, [r7, #4]!
   18310:	cmp	sl, #0
   18314:	bne	18264 <fts_open@@Base+0x168>
   18318:	cmp	r8, #0
   1831c:	cmpne	r6, #1
   18320:	bhi	18418 <fts_open@@Base+0x31c>
   18324:	ldr	r1, [pc, #352]	; 1848c <fts_open@@Base+0x390>
   18328:	mov	r0, r5
   1832c:	mov	r2, #0
   18330:	add	r1, pc, r1
   18334:	bl	16f8c <triple_free@@Base+0x29c0>
   18338:	cmp	r0, #0
   1833c:	str	r0, [r5]
   18340:	beq	183ac <fts_open@@Base+0x2b0>
   18344:	str	r4, [r0, #8]
   18348:	mov	r2, #9
   1834c:	ldr	r3, [r5]
   18350:	add	r1, r5, #56	; 0x38
   18354:	strh	r2, [r3, #60]	; 0x3c
   18358:	ldr	r0, [r5, #48]	; 0x30
   1835c:	bl	17324 <triple_free@@Base+0x2d58>
   18360:	cmp	r0, #0
   18364:	beq	183ac <fts_open@@Base+0x2b0>
   18368:	ldr	r1, [r5, #48]	; 0x30
   1836c:	tst	r1, #516	; 0x204
   18370:	beq	183e4 <fts_open@@Base+0x2e8>
   18374:	add	r0, r5, #60	; 0x3c
   18378:	mvn	r1, #0
   1837c:	bl	19404 <fts_children@@Base+0x568>
   18380:	mov	r0, r5
   18384:	add	sp, sp, #20
   18388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1838c:	ldrb	r1, [r3, #-2]
   18390:	sub	r3, r3, #1
   18394:	cmp	r1, #47	; 0x2f
   18398:	bne	18294 <fts_open@@Base+0x198>
   1839c:	sub	r2, r2, #1
   183a0:	cmp	r2, #1
   183a4:	bne	1838c <fts_open@@Base+0x290>
   183a8:	b	18294 <fts_open@@Base+0x198>
   183ac:	mov	r0, r4
   183b0:	bl	16ffc <triple_free@@Base+0x2a30>
   183b4:	mov	r0, r9
   183b8:	bl	1185c <free@plt>
   183bc:	ldr	r0, [r5, #24]
   183c0:	bl	1185c <free@plt>
   183c4:	mov	r0, r5
   183c8:	mov	r5, #0
   183cc:	bl	1185c <free@plt>
   183d0:	mov	r0, r5
   183d4:	add	sp, sp, #20
   183d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   183dc:	mov	r9, r1
   183e0:	b	181f0 <fts_open@@Base+0xf4>
   183e4:	ldr	r2, [pc, #164]	; 18490 <fts_open@@Base+0x394>
   183e8:	ldr	r0, [r5, #32]
   183ec:	add	r2, pc, r2
   183f0:	bl	173bc <triple_free@@Base+0x2df0>
   183f4:	mvn	r1, #0
   183f8:	cmp	r0, #0
   183fc:	str	r0, [r5, #28]
   18400:	add	r0, r5, #60	; 0x3c
   18404:	ldrlt	r3, [r5, #48]	; 0x30
   18408:	orrlt	r3, r3, #4
   1840c:	strlt	r3, [r5, #48]	; 0x30
   18410:	bl	19404 <fts_children@@Base+0x568>
   18414:	b	18380 <fts_open@@Base+0x284>
   18418:	mov	r1, r4
   1841c:	mov	r2, r6
   18420:	mov	r0, r5
   18424:	bl	16e9c <triple_free@@Base+0x28d0>
   18428:	mov	r4, r0
   1842c:	b	18324 <fts_open@@Base+0x228>
   18430:	bl	11a6c <__errno_location@plt>
   18434:	mov	r3, #22
   18438:	str	r3, [r0]
   1843c:	mov	r0, r5
   18440:	add	sp, sp, #20
   18444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18448:	bl	11a6c <__errno_location@plt>
   1844c:	mov	r5, #0
   18450:	mov	r3, #22
   18454:	str	r3, [r0]
   18458:	mov	r0, r5
   1845c:	add	sp, sp, #20
   18460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18464:	mov	r2, #4096	; 0x1000
   18468:	b	181a8 <fts_open@@Base+0xac>
   1846c:	bl	11a6c <__errno_location@plt>
   18470:	mov	r5, r4
   18474:	mov	r3, #22
   18478:	str	r3, [r0]
   1847c:	b	18380 <fts_open@@Base+0x284>
   18480:	mov	r4, r1
   18484:	b	18324 <fts_open@@Base+0x228>
   18488:	andeq	r2, r0, r0, lsr sl
   1848c:	ldrdeq	r2, [r0], -r4
   18490:	muleq	r0, r4, lr

00018494 <fts_close@@Base>:
   18494:	push	{r4, r5, r6, lr}
   18498:	mov	r5, r0
   1849c:	ldr	r3, [r0]
   184a0:	cmp	r3, #0
   184a4:	beq	184e0 <fts_close@@Base+0x4c>
   184a8:	ldr	r2, [r3, #48]	; 0x30
   184ac:	cmp	r2, #0
   184b0:	blt	185cc <fts_close@@Base+0x138>
   184b4:	ldr	r4, [r3, #8]
   184b8:	mov	r0, r3
   184bc:	cmp	r4, #0
   184c0:	ldreq	r4, [r3, #4]
   184c4:	bl	1185c <free@plt>
   184c8:	ldr	r2, [r4, #48]	; 0x30
   184cc:	mov	r3, r4
   184d0:	cmp	r2, #0
   184d4:	bge	184b4 <fts_close@@Base+0x20>
   184d8:	mov	r0, r4
   184dc:	bl	1185c <free@plt>
   184e0:	ldr	r0, [r5, #4]
   184e4:	cmp	r0, #0
   184e8:	beq	184f0 <fts_close@@Base+0x5c>
   184ec:	bl	16ffc <triple_free@@Base+0x2a30>
   184f0:	ldr	r0, [r5, #8]
   184f4:	bl	1185c <free@plt>
   184f8:	ldr	r0, [r5, #24]
   184fc:	bl	1185c <free@plt>
   18500:	ldr	r3, [r5, #48]	; 0x30
   18504:	tst	r3, #512	; 0x200
   18508:	beq	18580 <fts_close@@Base+0xec>
   1850c:	ldr	r0, [r5, #32]
   18510:	cmp	r0, #0
   18514:	blt	18524 <fts_close@@Base+0x90>
   18518:	bl	11bc8 <close@plt>
   1851c:	cmp	r0, #0
   18520:	bne	185c0 <fts_close@@Base+0x12c>
   18524:	mov	r4, #0
   18528:	add	r0, r5, #60	; 0x3c
   1852c:	bl	17034 <triple_free@@Base+0x2a68>
   18530:	ldr	r0, [r5, #52]	; 0x34
   18534:	cmp	r0, #0
   18538:	beq	18540 <fts_close@@Base+0xac>
   1853c:	bl	13ee8 <close_stdout@@Base+0xe48>
   18540:	ldr	r2, [r5, #48]	; 0x30
   18544:	movw	r3, #258	; 0x102
   18548:	ldr	r0, [r5, #56]	; 0x38
   1854c:	and	r3, r2, r3
   18550:	cmp	r3, #0
   18554:	beq	185b8 <fts_close@@Base+0x124>
   18558:	cmp	r0, #0
   1855c:	beq	18564 <fts_close@@Base+0xd0>
   18560:	bl	13ee8 <close_stdout@@Base+0xe48>
   18564:	mov	r0, r5
   18568:	bl	1185c <free@plt>
   1856c:	cmp	r4, #0
   18570:	moveq	r3, r4
   18574:	bne	185fc <fts_close@@Base+0x168>
   18578:	mov	r0, r3
   1857c:	pop	{r4, r5, r6, pc}
   18580:	tst	r3, #4
   18584:	bne	18524 <fts_close@@Base+0x90>
   18588:	ldr	r0, [r5, #28]
   1858c:	bl	11b44 <fchdir@plt>
   18590:	cmp	r0, #0
   18594:	bne	185d4 <fts_close@@Base+0x140>
   18598:	ldr	r0, [r5, #28]
   1859c:	bl	11bc8 <close@plt>
   185a0:	cmp	r0, #0
   185a4:	beq	18524 <fts_close@@Base+0x90>
   185a8:	bl	11a6c <__errno_location@plt>
   185ac:	mov	r6, r0
   185b0:	ldr	r4, [r6]
   185b4:	b	18528 <fts_close@@Base+0x94>
   185b8:	bl	1185c <free@plt>
   185bc:	b	18564 <fts_close@@Base+0xd0>
   185c0:	bl	11a6c <__errno_location@plt>
   185c4:	ldr	r4, [r0]
   185c8:	b	18528 <fts_close@@Base+0x94>
   185cc:	mov	r4, r3
   185d0:	b	184d8 <fts_close@@Base+0x44>
   185d4:	bl	11a6c <__errno_location@plt>
   185d8:	mov	r6, r0
   185dc:	ldr	r0, [r5, #28]
   185e0:	ldr	r4, [r6]
   185e4:	bl	11bc8 <close@plt>
   185e8:	cmp	r0, #0
   185ec:	beq	18528 <fts_close@@Base+0x94>
   185f0:	cmp	r4, #0
   185f4:	bne	18528 <fts_close@@Base+0x94>
   185f8:	b	185b0 <fts_close@@Base+0x11c>
   185fc:	bl	11a6c <__errno_location@plt>
   18600:	mvn	r3, #0
   18604:	str	r4, [r0]
   18608:	b	18578 <fts_close@@Base+0xe4>

0001860c <fts_read@@Base>:
   1860c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18610:	sub	sp, sp, #124	; 0x7c
   18614:	ldr	r9, [pc, #2100]	; 18e50 <fts_read@@Base+0x844>
   18618:	mov	r8, r0
   1861c:	ldr	r3, [pc, #2096]	; 18e54 <fts_read@@Base+0x848>
   18620:	add	r9, pc, r9
   18624:	ldr	fp, [r0]
   18628:	ldr	sl, [r9, r3]
   1862c:	cmp	fp, #0
   18630:	ldr	r3, [sl]
   18634:	str	r3, [sp, #116]	; 0x74
   18638:	beq	187dc <fts_read@@Base+0x1d0>
   1863c:	ldr	r3, [r0, #48]	; 0x30
   18640:	ands	r3, r3, #16384	; 0x4000
   18644:	bne	187dc <fts_read@@Base+0x1d0>
   18648:	ldrh	r2, [fp, #64]	; 0x40
   1864c:	mov	r1, #3
   18650:	strh	r1, [fp, #64]	; 0x40
   18654:	cmp	r2, #1
   18658:	beq	189f4 <fts_read@@Base+0x3e8>
   1865c:	cmp	r2, #2
   18660:	ldrh	r3, [fp, #60]	; 0x3c
   18664:	beq	18758 <fts_read@@Base+0x14c>
   18668:	cmp	r3, #1
   1866c:	bne	1869c <fts_read@@Base+0x90>
   18670:	b	187d0 <fts_read@@Base+0x1c4>
   18674:	str	r6, [r8]
   18678:	mov	r0, fp
   1867c:	bl	1185c <free@plt>
   18680:	ldr	r4, [r6, #48]	; 0x30
   18684:	cmp	r4, #0
   18688:	beq	187fc <fts_read@@Base+0x1f0>
   1868c:	ldrh	r3, [r6, #64]	; 0x40
   18690:	cmp	r3, #4
   18694:	bne	188f8 <fts_read@@Base+0x2ec>
   18698:	mov	fp, r6
   1869c:	ldr	r6, [fp, #8]
   186a0:	cmp	r6, #0
   186a4:	bne	18674 <fts_read@@Base+0x68>
   186a8:	ldr	r4, [fp, #4]
   186ac:	ldr	r3, [r4, #12]
   186b0:	cmp	r3, #0
   186b4:	bne	18bfc <fts_read@@Base+0x5f0>
   186b8:	str	r4, [r8]
   186bc:	mov	r0, fp
   186c0:	bl	1185c <free@plt>
   186c4:	ldr	r3, [r4, #48]	; 0x30
   186c8:	cmn	r3, #1
   186cc:	beq	18ab8 <fts_read@@Base+0x4ac>
   186d0:	ldrh	r3, [r4, #60]	; 0x3c
   186d4:	cmp	r3, #11
   186d8:	beq	1896c <fts_read@@Base+0x360>
   186dc:	ldr	r3, [r4, #40]	; 0x28
   186e0:	mov	r1, #0
   186e4:	ldr	r2, [r8, #24]
   186e8:	strb	r1, [r2, r3]
   186ec:	ldr	r3, [r4, #48]	; 0x30
   186f0:	cmp	r3, r1
   186f4:	beq	18a60 <fts_read@@Base+0x454>
   186f8:	ldrh	r3, [r4, #62]	; 0x3e
   186fc:	tst	r3, #2
   18700:	beq	18a10 <fts_read@@Base+0x404>
   18704:	ldr	r3, [r8, #48]	; 0x30
   18708:	tst	r3, #4
   1870c:	beq	18a74 <fts_read@@Base+0x468>
   18710:	ldr	r0, [r4, #36]	; 0x24
   18714:	bl	11bc8 <close@plt>
   18718:	ldr	r3, [r4, #32]
   1871c:	cmp	r3, #0
   18720:	movne	r3, #7
   18724:	strhne	r3, [r4, #60]	; 0x3c
   18728:	bne	18744 <fts_read@@Base+0x138>
   1872c:	mov	r3, #6
   18730:	add	r1, r8, #56	; 0x38
   18734:	strh	r3, [r4, #60]	; 0x3c
   18738:	mov	r2, r4
   1873c:	ldr	r0, [r8, #48]	; 0x30
   18740:	bl	17720 <triple_free@@Base+0x3154>
   18744:	ldr	r3, [r8, #48]	; 0x30
   18748:	tst	r3, #16384	; 0x4000
   1874c:	bne	187dc <fts_read@@Base+0x1d0>
   18750:	mov	r6, r4
   18754:	b	187e0 <fts_read@@Base+0x1d4>
   18758:	sub	r2, r3, #12
   1875c:	cmp	r2, #1
   18760:	bls	18a90 <fts_read@@Base+0x484>
   18764:	cmp	r3, #1
   18768:	bne	1869c <fts_read@@Base+0x90>
   1876c:	ldr	r3, [r8, #48]	; 0x30
   18770:	tst	r3, #64	; 0x40
   18774:	beq	18970 <fts_read@@Base+0x364>
   18778:	ldrd	r6, [fp, #72]	; 0x48
   1877c:	ldrd	r4, [r8, #16]
   18780:	cmp	r7, r5
   18784:	cmpeq	r6, r4
   18788:	beq	18970 <fts_read@@Base+0x364>
   1878c:	ldrh	r3, [fp, #62]	; 0x3e
   18790:	tst	r3, #2
   18794:	bne	18bf0 <fts_read@@Base+0x5e4>
   18798:	ldr	r0, [r8, #4]
   1879c:	cmp	r0, #0
   187a0:	beq	187b0 <fts_read@@Base+0x1a4>
   187a4:	bl	16ffc <triple_free@@Base+0x2a30>
   187a8:	mov	r3, #0
   187ac:	str	r3, [r8, #4]
   187b0:	mov	r3, #6
   187b4:	add	r1, r8, #56	; 0x38
   187b8:	strh	r3, [fp, #60]	; 0x3c
   187bc:	mov	r2, fp
   187c0:	ldr	r0, [r8, #48]	; 0x30
   187c4:	mov	r6, fp
   187c8:	bl	17720 <triple_free@@Base+0x3154>
   187cc:	b	187e0 <fts_read@@Base+0x1d4>
   187d0:	cmp	r2, #4
   187d4:	bne	1876c <fts_read@@Base+0x160>
   187d8:	b	1878c <fts_read@@Base+0x180>
   187dc:	mov	r6, #0
   187e0:	ldr	r2, [sp, #116]	; 0x74
   187e4:	mov	r0, r6
   187e8:	ldr	r3, [sl]
   187ec:	cmp	r2, r3
   187f0:	bne	18d64 <fts_read@@Base+0x758>
   187f4:	add	sp, sp, #124	; 0x7c
   187f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   187fc:	mov	r0, r8
   18800:	bl	170e0 <triple_free@@Base+0x2b14>
   18804:	cmp	r0, #0
   18808:	bne	18b60 <fts_read@@Base+0x554>
   1880c:	ldr	r2, [r8, #48]	; 0x30
   18810:	movw	r3, #258	; 0x102
   18814:	ldr	r0, [r8, #56]	; 0x38
   18818:	and	r3, r2, r3
   1881c:	cmp	r3, #0
   18820:	beq	18b48 <fts_read@@Base+0x53c>
   18824:	cmp	r0, #0
   18828:	beq	18830 <fts_read@@Base+0x224>
   1882c:	bl	13ee8 <close_stdout@@Base+0xe48>
   18830:	ldr	r3, [r6, #52]	; 0x34
   18834:	add	r4, r6, #176	; 0xb0
   18838:	add	r2, r3, #1
   1883c:	mov	r1, r4
   18840:	str	r3, [r6, #40]	; 0x28
   18844:	ldr	r0, [r8, #24]
   18848:	bl	11850 <memmove@plt>
   1884c:	mov	r0, r4
   18850:	mov	r1, #47	; 0x2f
   18854:	bl	11afc <strrchr@plt>
   18858:	cmp	r0, #0
   1885c:	beq	1888c <fts_read@@Base+0x280>
   18860:	cmp	r4, r0
   18864:	beq	18b50 <fts_read@@Base+0x544>
   18868:	add	r7, r0, #1
   1886c:	mov	r0, r7
   18870:	bl	11a30 <strlen@plt>
   18874:	mov	r1, r7
   18878:	mov	r5, r0
   1887c:	mov	r0, r4
   18880:	add	r2, r5, #1
   18884:	bl	11850 <memmove@plt>
   18888:	str	r5, [r6, #52]	; 0x34
   1888c:	ldr	r3, [r8, #24]
   18890:	add	r1, r8, #56	; 0x38
   18894:	str	r3, [r6, #28]
   18898:	str	r3, [r6, #24]
   1889c:	ldr	r0, [r8, #48]	; 0x30
   188a0:	bl	17324 <triple_free@@Base+0x2d58>
   188a4:	str	r6, [r8]
   188a8:	ldrh	r0, [r6, #60]	; 0x3c
   188ac:	cmp	r0, #11
   188b0:	beq	18950 <fts_read@@Base+0x344>
   188b4:	cmp	r0, #1
   188b8:	bne	187e0 <fts_read@@Base+0x1d4>
   188bc:	ldr	r3, [r6, #48]	; 0x30
   188c0:	add	r1, r8, #56	; 0x38
   188c4:	ldr	r0, [r8, #48]	; 0x30
   188c8:	mov	r2, r6
   188cc:	cmp	r3, #0
   188d0:	ldrdeq	r4, [r6, #72]	; 0x48
   188d4:	strdeq	r4, [r8, #16]
   188d8:	bl	17424 <triple_free@@Base+0x2e58>
   188dc:	subs	r4, r0, #0
   188e0:	bne	187e0 <fts_read@@Base+0x1d4>
   188e4:	bl	11a6c <__errno_location@plt>
   188e8:	mov	r6, r4
   188ec:	mov	r3, #12
   188f0:	str	r3, [r0]
   188f4:	b	187e0 <fts_read@@Base+0x1d4>
   188f8:	cmp	r3, #2
   188fc:	beq	18c2c <fts_read@@Base+0x620>
   18900:	ldr	r0, [r6, #4]
   18904:	mov	ip, #47	; 0x2f
   18908:	ldr	r2, [r8, #24]
   1890c:	add	r1, r6, #176	; 0xb0
   18910:	ldr	r3, [r0, #40]	; 0x28
   18914:	ldr	lr, [r0, #28]
   18918:	sub	r0, r3, #1
   1891c:	ldrb	lr, [lr, r0]
   18920:	cmp	lr, ip
   18924:	moveq	r3, r0
   18928:	add	r0, r2, r3
   1892c:	strb	ip, [r2, r3]
   18930:	add	r0, r0, #1
   18934:	ldr	r2, [r6, #52]	; 0x34
   18938:	add	r2, r2, #1
   1893c:	bl	11850 <memmove@plt>
   18940:	str	r6, [r8]
   18944:	ldrh	r0, [r6, #60]	; 0x3c
   18948:	cmp	r0, #11
   1894c:	bne	188b4 <fts_read@@Base+0x2a8>
   18950:	ldrd	r4, [r6, #120]	; 0x78
   18954:	cmp	r5, #0
   18958:	cmpeq	r4, #2
   1895c:	beq	18b74 <fts_read@@Base+0x568>
   18960:	cmp	r5, #0
   18964:	cmpeq	r4, #1
   18968:	beq	187e0 <fts_read@@Base+0x1d4>
   1896c:	bl	11bbc <abort@plt>
   18970:	ldr	r0, [r8, #4]
   18974:	cmp	r0, #0
   18978:	beq	18aec <fts_read@@Base+0x4e0>
   1897c:	tst	r3, #8192	; 0x2000
   18980:	bne	18ad8 <fts_read@@Base+0x4cc>
   18984:	ldr	ip, [fp, #24]
   18988:	mov	r0, r8
   1898c:	add	r1, fp, #72	; 0x48
   18990:	add	r2, fp, #168	; 0xa8
   18994:	mvn	r3, #0
   18998:	str	ip, [sp]
   1899c:	bl	174d8 <triple_free@@Base+0x2f0c>
   189a0:	cmp	r0, #0
   189a4:	beq	189e4 <fts_read@@Base+0x3d8>
   189a8:	bl	11a6c <__errno_location@plt>
   189ac:	ldrh	r3, [fp, #62]	; 0x3e
   189b0:	orr	r3, r3, #1
   189b4:	ldr	r2, [r0]
   189b8:	strh	r3, [fp, #62]	; 0x3e
   189bc:	str	r2, [fp, #32]
   189c0:	ldr	r6, [r8, #4]
   189c4:	cmp	r6, #0
   189c8:	beq	189e8 <fts_read@@Base+0x3dc>
   189cc:	ldr	r3, [r6, #4]
   189d0:	ldr	r3, [r3, #24]
   189d4:	str	r3, [r6, #24]
   189d8:	ldr	r6, [r6, #8]
   189dc:	cmp	r6, #0
   189e0:	bne	189cc <fts_read@@Base+0x3c0>
   189e4:	ldr	r6, [r8, #4]
   189e8:	mov	r3, #0
   189ec:	str	r3, [r8, #4]
   189f0:	b	18900 <fts_read@@Base+0x2f4>
   189f4:	ldr	r0, [r0, #32]
   189f8:	add	r1, r8, #48	; 0x30
   189fc:	mov	r2, fp
   18a00:	mov	r6, fp
   18a04:	bl	17130 <triple_free@@Base+0x2b64>
   18a08:	strh	r0, [fp, #60]	; 0x3c
   18a0c:	b	187e0 <fts_read@@Base+0x1d4>
   18a10:	tst	r3, #1
   18a14:	bne	18718 <fts_read@@Base+0x10c>
   18a18:	ldr	r2, [r4, #4]
   18a1c:	mov	r0, r8
   18a20:	ldr	r1, [pc, #1072]	; 18e58 <fts_read@@Base+0x84c>
   18a24:	mvn	r3, #0
   18a28:	add	r1, pc, r1
   18a2c:	str	r1, [sp]
   18a30:	add	r1, r2, #72	; 0x48
   18a34:	add	r2, r2, #168	; 0xa8
   18a38:	bl	174d8 <triple_free@@Base+0x2f0c>
   18a3c:	cmp	r0, #0
   18a40:	beq	18718 <fts_read@@Base+0x10c>
   18a44:	bl	11a6c <__errno_location@plt>
   18a48:	ldr	r3, [r0]
   18a4c:	str	r3, [r4, #32]
   18a50:	ldr	r3, [r8, #48]	; 0x30
   18a54:	orr	r3, r3, #16384	; 0x4000
   18a58:	str	r3, [r8, #48]	; 0x30
   18a5c:	b	18718 <fts_read@@Base+0x10c>
   18a60:	mov	r0, r8
   18a64:	bl	170e0 <triple_free@@Base+0x2b14>
   18a68:	cmp	r0, #0
   18a6c:	beq	18718 <fts_read@@Base+0x10c>
   18a70:	b	18a44 <fts_read@@Base+0x438>
   18a74:	tst	r3, #512	; 0x200
   18a78:	beq	18c58 <fts_read@@Base+0x64c>
   18a7c:	mov	r0, r8
   18a80:	ldr	r1, [r4, #36]	; 0x24
   18a84:	mov	r2, #1
   18a88:	bl	1706c <triple_free@@Base+0x2aa0>
   18a8c:	b	18710 <fts_read@@Base+0x104>
   18a90:	ldr	r0, [r0, #32]
   18a94:	add	r1, r8, #48	; 0x30
   18a98:	mov	r2, fp
   18a9c:	mov	r3, #1
   18aa0:	bl	17130 <triple_free@@Base+0x2b64>
   18aa4:	cmp	r0, #1
   18aa8:	strh	r0, [fp, #60]	; 0x3c
   18aac:	beq	18c94 <fts_read@@Base+0x688>
   18ab0:	mov	r6, fp
   18ab4:	b	188a4 <fts_read@@Base+0x298>
   18ab8:	mov	r0, r4
   18abc:	bl	1185c <free@plt>
   18ac0:	bl	11a6c <__errno_location@plt>
   18ac4:	mov	r3, #0
   18ac8:	mov	r6, r3
   18acc:	str	r3, [r0]
   18ad0:	str	r3, [r8]
   18ad4:	b	187e0 <fts_read@@Base+0x1d4>
   18ad8:	bic	r3, r3, #8192	; 0x2000
   18adc:	str	r3, [r8, #48]	; 0x30
   18ae0:	bl	16ffc <triple_free@@Base+0x2a30>
   18ae4:	mov	r3, #0
   18ae8:	str	r3, [r8, #4]
   18aec:	mov	r0, r8
   18af0:	mov	r1, #3
   18af4:	bl	17810 <triple_free@@Base+0x3244>
   18af8:	cmp	r0, #0
   18afc:	str	r0, [r8, #4]
   18b00:	movne	r6, r0
   18b04:	bne	189e8 <fts_read@@Base+0x3dc>
   18b08:	ldr	r0, [r8, #48]	; 0x30
   18b0c:	tst	r0, #16384	; 0x4000
   18b10:	bne	187dc <fts_read@@Base+0x1d0>
   18b14:	ldr	r3, [fp, #32]
   18b18:	cmp	r3, #0
   18b1c:	beq	18b34 <fts_read@@Base+0x528>
   18b20:	ldrh	r3, [fp, #60]	; 0x3c
   18b24:	cmp	r3, #4
   18b28:	movne	r3, #7
   18b2c:	strhne	r3, [fp, #60]	; 0x3c
   18b30:	ldrne	r0, [r8, #48]	; 0x30
   18b34:	add	r1, r8, #56	; 0x38
   18b38:	mov	r2, fp
   18b3c:	bl	17720 <triple_free@@Base+0x3154>
   18b40:	mov	r6, fp
   18b44:	b	187e0 <fts_read@@Base+0x1d4>
   18b48:	bl	1185c <free@plt>
   18b4c:	b	18830 <fts_read@@Base+0x224>
   18b50:	ldrb	r3, [r6, #177]	; 0xb1
   18b54:	cmp	r3, #0
   18b58:	bne	18868 <fts_read@@Base+0x25c>
   18b5c:	b	1888c <fts_read@@Base+0x280>
   18b60:	ldr	r3, [r8, #48]	; 0x30
   18b64:	mov	r6, r4
   18b68:	orr	r3, r3, #16384	; 0x4000
   18b6c:	str	r3, [r8, #48]	; 0x30
   18b70:	b	187e0 <fts_read@@Base+0x1d4>
   18b74:	ldr	r3, [r6, #48]	; 0x30
   18b78:	ldr	r4, [r6, #4]
   18b7c:	cmp	r3, #0
   18b80:	ble	18ba0 <fts_read@@Base+0x594>
   18b84:	ldr	r3, [r4, #56]	; 0x38
   18b88:	cmp	r3, #0
   18b8c:	bne	18ba0 <fts_read@@Base+0x594>
   18b90:	ldr	r3, [r8, #48]	; 0x30
   18b94:	and	r3, r3, #24
   18b98:	cmp	r3, #24
   18b9c:	beq	18d1c <fts_read@@Base+0x710>
   18ba0:	mov	r3, #0
   18ba4:	ldr	r0, [r8, #32]
   18ba8:	add	r1, r8, #48	; 0x30
   18bac:	mov	r2, r6
   18bb0:	bl	17130 <triple_free@@Base+0x2b64>
   18bb4:	ldr	r3, [r6, #88]	; 0x58
   18bb8:	and	r3, r3, #61440	; 0xf000
   18bbc:	cmp	r3, #16384	; 0x4000
   18bc0:	strh	r0, [r6, #60]	; 0x3c
   18bc4:	bne	188b4 <fts_read@@Base+0x2a8>
   18bc8:	ldr	r3, [r6, #48]	; 0x30
   18bcc:	cmp	r3, #0
   18bd0:	beq	188b4 <fts_read@@Base+0x2a8>
   18bd4:	ldr	r3, [r4, #56]	; 0x38
   18bd8:	cmp	r3, #0
   18bdc:	beq	188b4 <fts_read@@Base+0x2a8>
   18be0:	sub	r3, r3, #1
   18be4:	str	r3, [r4, #56]	; 0x38
   18be8:	ldrh	r0, [r6, #60]	; 0x3c
   18bec:	b	188b4 <fts_read@@Base+0x2a8>
   18bf0:	ldr	r0, [fp, #36]	; 0x24
   18bf4:	bl	11bc8 <close@plt>
   18bf8:	b	18798 <fts_read@@Base+0x18c>
   18bfc:	str	r4, [r8]
   18c00:	mov	r0, r8
   18c04:	ldr	r3, [r4, #40]	; 0x28
   18c08:	mov	r1, #3
   18c0c:	ldr	r2, [r8, #24]
   18c10:	strb	r6, [r2, r3]
   18c14:	bl	17810 <triple_free@@Base+0x3244>
   18c18:	subs	r6, r0, #0
   18c1c:	beq	18cd0 <fts_read@@Base+0x6c4>
   18c20:	mov	r0, fp
   18c24:	bl	1185c <free@plt>
   18c28:	b	18900 <fts_read@@Base+0x2f4>
   18c2c:	ldr	r0, [r8, #32]
   18c30:	add	r1, r8, #48	; 0x30
   18c34:	mov	r2, r6
   18c38:	mov	r3, #1
   18c3c:	bl	17130 <triple_free@@Base+0x2b64>
   18c40:	cmp	r0, #1
   18c44:	strh	r0, [r6, #60]	; 0x3c
   18c48:	beq	18ce4 <fts_read@@Base+0x6d8>
   18c4c:	mov	r3, #3
   18c50:	strh	r3, [r6, #64]	; 0x40
   18c54:	b	18900 <fts_read@@Base+0x2f4>
   18c58:	ldr	r0, [r4, #36]	; 0x24
   18c5c:	bl	11b44 <fchdir@plt>
   18c60:	cmp	r0, #0
   18c64:	beq	18710 <fts_read@@Base+0x104>
   18c68:	bl	11a6c <__errno_location@plt>
   18c6c:	ldr	r5, [r0]
   18c70:	mov	r6, r0
   18c74:	ldr	r0, [r4, #36]	; 0x24
   18c78:	bl	11bc8 <close@plt>
   18c7c:	str	r5, [r6]
   18c80:	str	r5, [r4, #32]
   18c84:	ldr	r3, [r8, #48]	; 0x30
   18c88:	orr	r3, r3, #16384	; 0x4000
   18c8c:	str	r3, [r8, #48]	; 0x30
   18c90:	b	18710 <fts_read@@Base+0x104>
   18c94:	ldr	r1, [r8, #48]	; 0x30
   18c98:	tst	r1, #4
   18c9c:	bne	18ab0 <fts_read@@Base+0x4a4>
   18ca0:	ldr	r2, [pc, #436]	; 18e5c <fts_read@@Base+0x850>
   18ca4:	ldr	r0, [r8, #32]
   18ca8:	add	r2, pc, r2
   18cac:	bl	173bc <triple_free@@Base+0x2df0>
   18cb0:	cmp	r0, #0
   18cb4:	str	r0, [fp, #36]	; 0x24
   18cb8:	blt	18d68 <fts_read@@Base+0x75c>
   18cbc:	ldrh	r3, [fp, #62]	; 0x3e
   18cc0:	mov	r6, fp
   18cc4:	orr	r3, r3, #2
   18cc8:	strh	r3, [fp, #62]	; 0x3e
   18ccc:	b	188a4 <fts_read@@Base+0x298>
   18cd0:	ldr	r3, [r8, #48]	; 0x30
   18cd4:	tst	r3, #16384	; 0x4000
   18cd8:	bne	187dc <fts_read@@Base+0x1d0>
   18cdc:	ldr	r4, [fp, #4]
   18ce0:	b	186b8 <fts_read@@Base+0xac>
   18ce4:	ldr	r1, [r8, #48]	; 0x30
   18ce8:	tst	r1, #4
   18cec:	bne	18c4c <fts_read@@Base+0x640>
   18cf0:	ldr	r2, [pc, #360]	; 18e60 <fts_read@@Base+0x854>
   18cf4:	ldr	r0, [r8, #32]
   18cf8:	add	r2, pc, r2
   18cfc:	bl	173bc <triple_free@@Base+0x2df0>
   18d00:	cmp	r0, #0
   18d04:	str	r0, [r6, #36]	; 0x24
   18d08:	blt	18d84 <fts_read@@Base+0x778>
   18d0c:	ldrh	r3, [r6, #62]	; 0x3e
   18d10:	orr	r3, r3, #2
   18d14:	strh	r3, [r6, #62]	; 0x3e
   18d18:	b	18c4c <fts_read@@Base+0x640>
   18d1c:	ldr	r7, [r4, #44]	; 0x2c
   18d20:	ldr	r3, [r7, #48]	; 0x30
   18d24:	ldr	r5, [r7, #52]	; 0x34
   18d28:	tst	r3, #512	; 0x200
   18d2c:	beq	18ba0 <fts_read@@Base+0x594>
   18d30:	cmp	r5, #0
   18d34:	beq	18e08 <fts_read@@Base+0x7fc>
   18d38:	ldrd	r2, [r4, #72]	; 0x48
   18d3c:	add	r1, sp, #120	; 0x78
   18d40:	mov	r0, r5
   18d44:	strd	r2, [r1, #-112]!	; 0xffffff90
   18d48:	bl	13a50 <close_stdout@@Base+0x9b0>
   18d4c:	subs	fp, r0, #0
   18d50:	beq	18d9c <fts_read@@Base+0x790>
   18d54:	ldrb	r7, [fp, #8]
   18d58:	cmp	r7, #0
   18d5c:	bne	18be8 <fts_read@@Base+0x5dc>
   18d60:	b	18ba0 <fts_read@@Base+0x594>
   18d64:	bl	118b0 <__stack_chk_fail@plt>
   18d68:	bl	11a6c <__errno_location@plt>
   18d6c:	mov	r6, fp
   18d70:	mov	r3, #7
   18d74:	ldr	r2, [r0]
   18d78:	strh	r3, [fp, #60]	; 0x3c
   18d7c:	str	r2, [fp, #32]
   18d80:	b	188a4 <fts_read@@Base+0x298>
   18d84:	bl	11a6c <__errno_location@plt>
   18d88:	mov	r3, #7
   18d8c:	ldr	r2, [r0]
   18d90:	strh	r3, [r6, #60]	; 0x3c
   18d94:	str	r2, [r6, #32]
   18d98:	b	18c4c <fts_read@@Base+0x640>
   18d9c:	mov	r0, #16
   18da0:	bl	119b8 <malloc@plt>
   18da4:	subs	r9, r0, #0
   18da8:	beq	18ba0 <fts_read@@Base+0x594>
   18dac:	ldr	r0, [r7, #32]
   18db0:	add	r1, sp, #24
   18db4:	bl	117e4 <fstatfs64@plt>
   18db8:	cmp	r0, #0
   18dbc:	movne	r7, fp
   18dc0:	bne	18ddc <fts_read@@Base+0x7d0>
   18dc4:	ldr	r7, [sp, #24]
   18dc8:	movw	r3, #18803	; 0x4973
   18dcc:	movt	r3, #21093	; 0x5265
   18dd0:	subs	r3, r7, r3
   18dd4:	rsbs	r7, r3, #0
   18dd8:	adcs	r7, r7, r3
   18ddc:	strb	r7, [r9, #8]
   18de0:	mov	r0, r5
   18de4:	ldrd	r2, [r4, #72]	; 0x48
   18de8:	mov	r1, r9
   18dec:	strd	r2, [r9]
   18df0:	bl	1432c <close_stdout@@Base+0x128c>
   18df4:	cmp	r0, #0
   18df8:	beq	18e44 <fts_read@@Base+0x838>
   18dfc:	cmp	r9, r0
   18e00:	beq	18d58 <fts_read@@Base+0x74c>
   18e04:	b	1896c <fts_read@@Base+0x360>
   18e08:	ldr	ip, [pc, #84]	; 18e64 <fts_read@@Base+0x858>
   18e0c:	mov	r1, r5
   18e10:	ldr	r2, [pc, #80]	; 18e68 <fts_read@@Base+0x85c>
   18e14:	mov	r0, #13
   18e18:	ldr	r3, [pc, #76]	; 18e6c <fts_read@@Base+0x860>
   18e1c:	ldr	ip, [r9, ip]
   18e20:	add	r2, pc, r2
   18e24:	add	r3, pc, r3
   18e28:	str	ip, [sp]
   18e2c:	bl	13d04 <close_stdout@@Base+0xc64>
   18e30:	cmp	r0, #0
   18e34:	mov	r5, r0
   18e38:	str	r0, [r7, #52]	; 0x34
   18e3c:	bne	18d38 <fts_read@@Base+0x72c>
   18e40:	b	18ba0 <fts_read@@Base+0x594>
   18e44:	mov	r0, r9
   18e48:	bl	1185c <free@plt>
   18e4c:	b	18ba0 <fts_read@@Base+0x594>
   18e50:	ldrdeq	r3, [r1], -r8
   18e54:	andeq	r0, r0, ip, ror r1
   18e58:	andeq	r2, r0, r4, asr r8
   18e5c:	ldrdeq	r2, [r0], -r8
   18e60:	andeq	r2, r0, r8, lsl #11
   18e64:	andeq	r0, r0, r8, ror r1
   18e68:			; <UNDEFINED> instruction: 0xffffe00c
   18e6c:			; <UNDEFINED> instruction: 0xffffe024

00018e70 <fts_set@@Base>:
   18e70:	cmp	r2, #4
   18e74:	push	{r3, lr}
   18e78:	movls	r3, #0
   18e7c:	strhls	r2, [r1, #64]	; 0x40
   18e80:	bls	18e94 <fts_set@@Base+0x24>
   18e84:	bl	11a6c <__errno_location@plt>
   18e88:	mov	r3, #1
   18e8c:	mov	r2, #22
   18e90:	str	r2, [r0]
   18e94:	mov	r0, r3
   18e98:	pop	{r3, pc}

00018e9c <fts_children@@Base>:
   18e9c:	push	{r4, r5, r6, r7, r8, lr}
   18ea0:	bics	r7, r1, #8192	; 0x2000
   18ea4:	mov	r5, r1
   18ea8:	mov	r4, r0
   18eac:	bne	18fa8 <fts_children@@Base+0x10c>
   18eb0:	bl	11a6c <__errno_location@plt>
   18eb4:	ldr	r6, [r4]
   18eb8:	str	r7, [r0]
   18ebc:	mov	r8, r0
   18ec0:	ldr	r3, [r4, #48]	; 0x30
   18ec4:	ands	r3, r3, #16384	; 0x4000
   18ec8:	bne	18fc0 <fts_children@@Base+0x124>
   18ecc:	ldrh	r2, [r6, #60]	; 0x3c
   18ed0:	cmp	r2, #9
   18ed4:	ldreq	r3, [r6, #8]
   18ed8:	beq	18f48 <fts_children@@Base+0xac>
   18edc:	cmp	r2, #1
   18ee0:	bne	18f48 <fts_children@@Base+0xac>
   18ee4:	ldr	r0, [r4, #4]
   18ee8:	cmp	r0, #0
   18eec:	beq	18ef4 <fts_children@@Base+0x58>
   18ef0:	bl	16ffc <triple_free@@Base+0x2a30>
   18ef4:	cmp	r5, #8192	; 0x2000
   18ef8:	ldreq	r3, [r4, #48]	; 0x30
   18efc:	moveq	r5, #2
   18f00:	movne	r5, #1
   18f04:	orreq	r3, r3, #8192	; 0x2000
   18f08:	streq	r3, [r4, #48]	; 0x30
   18f0c:	ldr	r3, [r6, #48]	; 0x30
   18f10:	cmp	r3, #0
   18f14:	bne	18f34 <fts_children@@Base+0x98>
   18f18:	ldr	r3, [r6, #24]
   18f1c:	ldrb	r3, [r3]
   18f20:	cmp	r3, #47	; 0x2f
   18f24:	beq	18f34 <fts_children@@Base+0x98>
   18f28:	ldr	r1, [r4, #48]	; 0x30
   18f2c:	ands	r6, r1, #4
   18f30:	beq	18f50 <fts_children@@Base+0xb4>
   18f34:	mov	r1, r5
   18f38:	mov	r0, r4
   18f3c:	bl	17810 <triple_free@@Base+0x3244>
   18f40:	mov	r3, r0
   18f44:	str	r0, [r4, #4]
   18f48:	mov	r0, r3
   18f4c:	pop	{r4, r5, r6, r7, r8, pc}
   18f50:	ldr	r2, [pc, #164]	; 18ffc <fts_children@@Base+0x160>
   18f54:	ldr	r0, [r4, #32]
   18f58:	add	r2, pc, r2
   18f5c:	bl	173bc <triple_free@@Base+0x2df0>
   18f60:	subs	r7, r0, #0
   18f64:	strlt	r6, [r4, #4]
   18f68:	movlt	r3, r6
   18f6c:	blt	18f48 <fts_children@@Base+0xac>
   18f70:	mov	r1, r5
   18f74:	mov	r0, r4
   18f78:	bl	17810 <triple_free@@Base+0x3244>
   18f7c:	ldr	r3, [r4, #48]	; 0x30
   18f80:	ands	r5, r3, #512	; 0x200
   18f84:	str	r0, [r4, #4]
   18f88:	beq	18fc8 <fts_children@@Base+0x12c>
   18f8c:	mov	r1, r7
   18f90:	mov	r0, r4
   18f94:	mov	r2, #1
   18f98:	bl	1706c <triple_free@@Base+0x2aa0>
   18f9c:	ldr	r3, [r4, #4]
   18fa0:	mov	r0, r3
   18fa4:	pop	{r4, r5, r6, r7, r8, pc}
   18fa8:	bl	11a6c <__errno_location@plt>
   18fac:	mov	r3, #0
   18fb0:	mov	r2, #22
   18fb4:	str	r2, [r0]
   18fb8:	mov	r0, r3
   18fbc:	pop	{r4, r5, r6, r7, r8, pc}
   18fc0:	mov	r3, r7
   18fc4:	b	18f48 <fts_children@@Base+0xac>
   18fc8:	mov	r0, r7
   18fcc:	bl	11b44 <fchdir@plt>
   18fd0:	cmp	r0, #0
   18fd4:	bne	18fe4 <fts_children@@Base+0x148>
   18fd8:	mov	r0, r7
   18fdc:	bl	11bc8 <close@plt>
   18fe0:	b	18f9c <fts_children@@Base+0x100>
   18fe4:	ldr	r4, [r8]
   18fe8:	mov	r0, r7
   18fec:	bl	11bc8 <close@plt>
   18ff0:	mov	r3, r5
   18ff4:	str	r4, [r8]
   18ff8:	b	18f48 <fts_children@@Base+0xac>
   18ffc:	andeq	r2, r0, r8, lsr #6
   19000:	push	{r3, r4, r5, lr}
   19004:	subs	r4, r0, #0
   19008:	beq	19054 <fts_children@@Base+0x1b8>
   1900c:	cmp	r4, #10
   19010:	beq	1901c <fts_children@@Base+0x180>
   19014:	mov	r0, r4
   19018:	pop	{r3, r4, r5, pc}
   1901c:	ldr	r5, [r1]
   19020:	ldr	r1, [pc, #64]	; 19068 <fts_children@@Base+0x1cc>
   19024:	mov	r0, r5
   19028:	add	r1, pc, r1
   1902c:	bl	11820 <strcmp@plt>
   19030:	cmp	r0, #0
   19034:	bne	19014 <fts_children@@Base+0x178>
   19038:	mov	r0, r5
   1903c:	mvn	r4, #0
   19040:	bl	11b5c <freecon@plt>
   19044:	bl	11a6c <__errno_location@plt>
   19048:	mov	r3, #61	; 0x3d
   1904c:	str	r3, [r0]
   19050:	b	19014 <fts_children@@Base+0x178>
   19054:	bl	11a6c <__errno_location@plt>
   19058:	mvn	r4, #0
   1905c:	mov	r3, #95	; 0x5f
   19060:	str	r3, [r0]
   19064:	b	19014 <fts_children@@Base+0x178>
   19068:	andeq	r2, r0, ip, asr r2
   1906c:	push	{r4, lr}
   19070:	mov	r4, r1
   19074:	bl	11a24 <getfilecon@plt>
   19078:	mov	r1, r4
   1907c:	pop	{r4, lr}
   19080:	b	19000 <fts_children@@Base+0x164>
   19084:	push	{r4, lr}
   19088:	mov	r4, r1
   1908c:	bl	119ac <lgetfilecon@plt>
   19090:	mov	r1, r4
   19094:	pop	{r4, lr}
   19098:	b	19000 <fts_children@@Base+0x164>
   1909c:	push	{r4, lr}
   190a0:	mov	r4, r1
   190a4:	bl	118d4 <fgetfilecon@plt>
   190a8:	mov	r1, r4
   190ac:	pop	{r4, lr}
   190b0:	b	19000 <fts_children@@Base+0x164>
   190b4:	cmp	r1, #1024	; 0x400
   190b8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   190bc:	addls	r4, r1, #1
   190c0:	mov	r7, r0
   190c4:	movwhi	r4, #1025	; 0x401
   190c8:	mov	r0, r4
   190cc:	bl	119b8 <malloc@plt>
   190d0:	mov	r2, r4
   190d4:	subs	r5, r0, #0
   190d8:	mov	r0, r7
   190dc:	mov	r1, r5
   190e0:	beq	19158 <fts_children@@Base+0x2bc>
   190e4:	bl	1191c <readlink@plt>
   190e8:	subs	r6, r0, #0
   190ec:	blt	19130 <fts_children@@Base+0x294>
   190f0:	cmp	r4, r6
   190f4:	mov	r0, r5
   190f8:	bhi	19164 <fts_children@@Base+0x2c8>
   190fc:	bl	1185c <free@plt>
   19100:	cmn	r4, #-1073741823	; 0xc0000001
   19104:	lslls	r4, r4, #1
   19108:	bls	190c8 <fts_children@@Base+0x22c>
   1910c:	cmn	r4, #-2147483646	; 0x80000002
   19110:	mvn	r4, #-2147483648	; 0x80000000
   19114:	bls	190c8 <fts_children@@Base+0x22c>
   19118:	bl	11a6c <__errno_location@plt>
   1911c:	mov	r3, #0
   19120:	mov	r2, #12
   19124:	str	r2, [r0]
   19128:	mov	r0, r3
   1912c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19130:	bl	11a6c <__errno_location@plt>
   19134:	ldr	r9, [r0]
   19138:	mov	r8, r0
   1913c:	cmp	r9, #34	; 0x22
   19140:	beq	190f0 <fts_children@@Base+0x254>
   19144:	mov	r0, r5
   19148:	bl	1185c <free@plt>
   1914c:	str	r9, [r8]
   19150:	mov	r3, #0
   19154:	b	1915c <fts_children@@Base+0x2c0>
   19158:	mov	r3, r5
   1915c:	mov	r0, r3
   19160:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19164:	mov	r3, r5
   19168:	mov	r2, #0
   1916c:	mov	r0, r3
   19170:	strb	r2, [r5, r6]
   19174:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19178:	push	{r3, r4, r5, lr}
   1917c:	mov	r2, #0
   19180:	mov	r4, r1
   19184:	mov	r1, #1
   19188:	mov	r5, r0
   1918c:	bl	19a38 <fts_children@@Base+0xb9c>
   19190:	cmp	r0, #0
   19194:	blt	191d4 <fts_children@@Base+0x338>
   19198:	cmp	r4, #0
   1919c:	orrne	r2, r0, #1
   191a0:	biceq	r2, r0, #1
   191a4:	cmp	r2, r0
   191a8:	beq	191cc <fts_children@@Base+0x330>
   191ac:	mov	r0, r5
   191b0:	mov	r1, #2
   191b4:	bl	19a38 <fts_children@@Base+0xb9c>
   191b8:	cmn	r0, #1
   191bc:	movne	r0, #0
   191c0:	moveq	r0, #1
   191c4:	rsb	r0, r0, #0
   191c8:	pop	{r3, r4, r5, pc}
   191cc:	mov	r0, #0
   191d0:	pop	{r3, r4, r5, pc}
   191d4:	mvn	r0, #0
   191d8:	pop	{r3, r4, r5, pc}
   191dc:	movw	r1, #1030	; 0x406
   191e0:	mov	r2, #0
   191e4:	b	19a38 <fts_children@@Base+0xb9c>
   191e8:	push	{r4, r5, r6, lr}
   191ec:	mov	r4, r0
   191f0:	bl	11970 <__fpending@plt>
   191f4:	mov	r6, r0
   191f8:	mov	r0, r4
   191fc:	ldr	r4, [r4]
   19200:	bl	19998 <fts_children@@Base+0xafc>
   19204:	and	r4, r4, #32
   19208:	adds	r5, r0, #0
   1920c:	movne	r5, #1
   19210:	cmp	r4, #0
   19214:	bne	19234 <fts_children@@Base+0x398>
   19218:	cmp	r5, #0
   1921c:	beq	1922c <fts_children@@Base+0x390>
   19220:	cmp	r6, #0
   19224:	beq	19250 <fts_children@@Base+0x3b4>
   19228:	mvn	r4, #0
   1922c:	mov	r0, r4
   19230:	pop	{r4, r5, r6, pc}
   19234:	cmp	r5, #0
   19238:	bne	19228 <fts_children@@Base+0x38c>
   1923c:	bl	11a6c <__errno_location@plt>
   19240:	mvn	r4, #0
   19244:	str	r5, [r0]
   19248:	mov	r0, r4
   1924c:	pop	{r4, r5, r6, pc}
   19250:	bl	11a6c <__errno_location@plt>
   19254:	ldr	r4, [r0]
   19258:	subs	r4, r4, #9
   1925c:	mvnne	r4, #0
   19260:	mov	r0, r4
   19264:	pop	{r4, r5, r6, pc}
   19268:	mov	r2, #0
   1926c:	mov	r3, #0
   19270:	movw	r1, #62998	; 0xf616
   19274:	strd	r2, [r0, #16]
   19278:	movt	r1, #149	; 0x95
   1927c:	str	r1, [r0, #24]
   19280:	bx	lr
   19284:	push	{r3, r4, r5, r6, r7, lr}
   19288:	movw	r3, #62998	; 0xf616
   1928c:	ldr	r2, [r0, #24]
   19290:	movt	r3, #149	; 0x95
   19294:	mov	ip, r0
   19298:	cmp	r2, r3
   1929c:	bne	19330 <fts_children@@Base+0x494>
   192a0:	ldrd	r6, [r0, #16]
   192a4:	orrs	r0, r6, r7
   192a8:	beq	192ec <fts_children@@Base+0x450>
   192ac:	ldrd	r4, [r1, #96]	; 0x60
   192b0:	ldrd	r2, [ip]
   192b4:	cmp	r5, r3
   192b8:	cmpeq	r4, r2
   192bc:	beq	19318 <fts_children@@Base+0x47c>
   192c0:	adds	r2, r6, #1
   192c4:	adc	r3, r7, #0
   192c8:	and	r6, r6, r2
   192cc:	and	r7, r7, r3
   192d0:	strd	r2, [ip, #16]
   192d4:	orrs	r0, r6, r7
   192d8:	bne	19310 <fts_children@@Base+0x474>
   192dc:	orrs	r0, r2, r3
   192e0:	bne	192f8 <fts_children@@Base+0x45c>
   192e4:	mov	r0, #1
   192e8:	pop	{r3, r4, r5, r6, r7, pc}
   192ec:	mov	r2, #1
   192f0:	mov	r3, #0
   192f4:	strd	r2, [ip, #16]
   192f8:	ldrd	r2, [r1]
   192fc:	mov	r0, #0
   19300:	strd	r2, [ip, #8]
   19304:	ldrd	r2, [r1, #96]	; 0x60
   19308:	strd	r2, [ip]
   1930c:	pop	{r3, r4, r5, r6, r7, pc}
   19310:	mov	r0, #0
   19314:	pop	{r3, r4, r5, r6, r7, pc}
   19318:	ldrd	r4, [r1]
   1931c:	ldrd	r2, [ip, #8]
   19320:	cmp	r5, r3
   19324:	cmpeq	r4, r2
   19328:	bne	192c0 <fts_children@@Base+0x424>
   1932c:	b	192e4 <fts_children@@Base+0x448>
   19330:	ldr	r0, [pc, #24]	; 19350 <fts_children@@Base+0x4b4>
   19334:	mov	r2, #60	; 0x3c
   19338:	ldr	r1, [pc, #20]	; 19354 <fts_children@@Base+0x4b8>
   1933c:	ldr	r3, [pc, #20]	; 19358 <fts_children@@Base+0x4bc>
   19340:	add	r0, pc, r0
   19344:	add	r1, pc, r1
   19348:	add	r3, pc, r3
   1934c:	bl	11c04 <__assert_fail@plt>
   19350:	andeq	r1, r0, ip, asr pc
   19354:	andeq	r1, r0, r0, ror pc
   19358:	andeq	r1, r0, r8, asr #30
   1935c:	push	{r1, r2, r3}
   19360:	ldr	r3, [pc, #88]	; 193c0 <fts_children@@Base+0x524>
   19364:	ldr	r2, [pc, #88]	; 193c4 <fts_children@@Base+0x528>
   19368:	add	r3, pc, r3
   1936c:	push	{r4, lr}
   19370:	sub	sp, sp, #12
   19374:	ldr	r4, [r3, r2]
   19378:	ldr	r1, [sp, #20]
   1937c:	ldr	r3, [r4]
   19380:	ands	r2, r1, #64	; 0x40
   19384:	ldrne	r2, [sp, #24]
   19388:	str	r3, [sp, #4]
   1938c:	addne	r3, sp, #24
   19390:	strne	r3, [sp]
   19394:	bl	11994 <open64@plt>
   19398:	bl	1995c <fts_children@@Base+0xac0>
   1939c:	ldr	r2, [sp, #4]
   193a0:	ldr	r3, [r4]
   193a4:	cmp	r2, r3
   193a8:	bne	193bc <fts_children@@Base+0x520>
   193ac:	add	sp, sp, #12
   193b0:	pop	{r4, lr}
   193b4:	add	sp, sp, #12
   193b8:	bx	lr
   193bc:	bl	118b0 <__stack_chk_fail@plt>
   193c0:	muleq	r1, r0, ip
   193c4:	andeq	r0, r0, ip, ror r1
   193c8:	push	{r3, lr}
   193cc:	ldrb	r3, [r0]
   193d0:	cmp	r3, #0
   193d4:	beq	193fc <fts_children@@Base+0x560>
   193d8:	mov	r2, r0
   193dc:	mov	r0, #0
   193e0:	add	r0, r3, r0, ror #23
   193e4:	ldrb	r3, [r2, #1]!
   193e8:	cmp	r3, #0
   193ec:	bne	193e0 <fts_children@@Base+0x544>
   193f0:	bl	19ea0 <fts_children@@Base+0x1004>
   193f4:	mov	r0, r1
   193f8:	pop	{r3, pc}
   193fc:	mov	r0, r3
   19400:	pop	{r3, pc}
   19404:	mov	r3, #0
   19408:	mov	r2, #1
   1940c:	str	r1, [r0]
   19410:	str	r1, [r0, #4]
   19414:	str	r1, [r0, #8]
   19418:	str	r1, [r0, #12]
   1941c:	str	r1, [r0, #16]
   19420:	strb	r2, [r0, #28]
   19424:	str	r3, [r0, #20]
   19428:	str	r3, [r0, #24]
   1942c:	bx	lr
   19430:	ldrb	r0, [r0, #28]
   19434:	bx	lr
   19438:	ldrb	ip, [r0, #28]
   1943c:	mov	r3, r0
   19440:	ldr	r2, [r0, #20]
   19444:	eor	ip, ip, #1
   19448:	add	r2, ip, r2
   1944c:	and	r2, r2, #3
   19450:	ldr	r0, [r0, r2, lsl #2]
   19454:	str	r1, [r3, r2, lsl #2]
   19458:	ldr	r1, [r3, #24]
   1945c:	str	r2, [r3, #20]
   19460:	cmp	r1, r2
   19464:	mov	r2, #0
   19468:	addeq	r1, ip, r1
   1946c:	strb	r2, [r3, #28]
   19470:	andeq	r1, r1, #3
   19474:	streq	r1, [r3, #24]
   19478:	bx	lr
   1947c:	push	{r4, lr}
   19480:	mov	r4, r0
   19484:	bl	19430 <fts_children@@Base+0x594>
   19488:	cmp	r0, #0
   1948c:	bne	194c0 <fts_children@@Base+0x624>
   19490:	ldr	r3, [r4, #20]
   19494:	ldr	r2, [r4, #16]
   19498:	ldr	r0, [r4, r3, lsl #2]
   1949c:	str	r2, [r4, r3, lsl #2]
   194a0:	ldr	r2, [r4, #24]
   194a4:	cmp	r3, r2
   194a8:	addne	r3, r3, #3
   194ac:	moveq	r3, #1
   194b0:	andne	r3, r3, #3
   194b4:	strbeq	r3, [r4, #28]
   194b8:	strne	r3, [r4, #20]
   194bc:	pop	{r4, pc}
   194c0:	bl	11bbc <abort@plt>
   194c4:	ldr	r3, [pc, #984]	; 198a4 <fts_children@@Base+0xa08>
   194c8:	mov	r0, #14
   194cc:	ldr	r2, [pc, #980]	; 198a8 <fts_children@@Base+0xa0c>
   194d0:	add	r3, pc, r3
   194d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   194d8:	sub	sp, sp, #132	; 0x84
   194dc:	ldr	r6, [r3, r2]
   194e0:	ldr	r3, [r6]
   194e4:	str	r3, [sp, #124]	; 0x7c
   194e8:	bl	11b08 <nl_langinfo@plt>
   194ec:	subs	r5, r0, #0
   194f0:	beq	195a4 <fts_children@@Base+0x708>
   194f4:	ldr	r3, [pc, #944]	; 198ac <fts_children@@Base+0xa10>
   194f8:	ldr	r4, [pc, r3]
   194fc:	cmp	r4, #0
   19500:	beq	195b0 <fts_children@@Base+0x714>
   19504:	ldrb	r7, [r4]
   19508:	cmp	r7, #0
   1950c:	bne	19540 <fts_children@@Base+0x6a4>
   19510:	b	19578 <fts_children@@Base+0x6dc>
   19514:	mov	r0, r4
   19518:	bl	11a30 <strlen@plt>
   1951c:	add	r0, r0, #1
   19520:	add	r7, r4, r0
   19524:	mov	r0, r7
   19528:	bl	11a30 <strlen@plt>
   1952c:	add	r0, r0, #1
   19530:	add	r4, r7, r0
   19534:	ldrb	r7, [r7, r0]
   19538:	cmp	r7, #0
   1953c:	beq	19578 <fts_children@@Base+0x6dc>
   19540:	mov	r0, r5
   19544:	mov	r1, r4
   19548:	bl	11820 <strcmp@plt>
   1954c:	cmp	r0, #0
   19550:	beq	19568 <fts_children@@Base+0x6cc>
   19554:	cmp	r7, #42	; 0x2a
   19558:	bne	19514 <fts_children@@Base+0x678>
   1955c:	ldrb	r3, [r4, #1]
   19560:	cmp	r3, #0
   19564:	bne	19514 <fts_children@@Base+0x678>
   19568:	mov	r0, r4
   1956c:	bl	11a30 <strlen@plt>
   19570:	add	r0, r0, #1
   19574:	add	r5, r4, r0
   19578:	ldrb	r3, [r5]
   1957c:	cmp	r3, #0
   19580:	ldreq	r5, [pc, #808]	; 198b0 <fts_children@@Base+0xa14>
   19584:	addeq	r5, pc, r5
   19588:	ldr	r2, [sp, #124]	; 0x7c
   1958c:	mov	r0, r5
   19590:	ldr	r3, [r6]
   19594:	cmp	r2, r3
   19598:	bne	19878 <fts_children@@Base+0x9dc>
   1959c:	add	sp, sp, #132	; 0x84
   195a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   195a4:	ldr	r5, [pc, #776]	; 198b4 <fts_children@@Base+0xa18>
   195a8:	add	r5, pc, r5
   195ac:	b	194f4 <fts_children@@Base+0x658>
   195b0:	ldr	r0, [pc, #768]	; 198b8 <fts_children@@Base+0xa1c>
   195b4:	add	r0, pc, r0
   195b8:	bl	119a0 <getenv@plt>
   195bc:	subs	r8, r0, #0
   195c0:	beq	19850 <fts_children@@Base+0x9b4>
   195c4:	ldrb	r3, [r8]
   195c8:	cmp	r3, #0
   195cc:	beq	197e4 <fts_children@@Base+0x948>
   195d0:	bl	11a30 <strlen@plt>
   195d4:	subs	sl, r0, #0
   195d8:	subne	r3, sl, #1
   195dc:	bne	197f4 <fts_children@@Base+0x958>
   195e0:	mov	r9, #0
   195e4:	mov	fp, r9
   195e8:	add	r9, sl, r9
   195ec:	add	r0, r9, #14
   195f0:	bl	119b8 <malloc@plt>
   195f4:	subs	r7, r0, #0
   195f8:	beq	19844 <fts_children@@Base+0x9a8>
   195fc:	mov	r1, r8
   19600:	mov	r2, sl
   19604:	bl	11874 <memcpy@plt>
   19608:	cmp	fp, #0
   1960c:	add	ip, r7, r9
   19610:	movne	r3, #47	; 0x2f
   19614:	strbne	r3, [r7, sl]
   19618:	ldr	r3, [pc, #668]	; 198bc <fts_children@@Base+0xa20>
   1961c:	add	r3, pc, r3
   19620:	ldm	r3!, {r0, r1, r2}
   19624:	ldrh	r3, [r3]
   19628:	str	r0, [r7, r9]
   1962c:	mov	r0, r7
   19630:	str	r1, [ip, #4]
   19634:	mov	r1, #32768	; 0x8000
   19638:	strh	r3, [ip, #12]
   1963c:	str	r2, [ip, #8]
   19640:	bl	11994 <open64@plt>
   19644:	subs	r8, r0, #0
   19648:	blt	1980c <fts_children@@Base+0x970>
   1964c:	ldr	r1, [pc, #620]	; 198c0 <fts_children@@Base+0xa24>
   19650:	add	r1, pc, r1
   19654:	bl	117d8 <fdopen@plt>
   19658:	subs	fp, r0, #0
   1965c:	beq	19864 <fts_children@@Base+0x9c8>
   19660:	ldr	r0, [pc, #604]	; 198c4 <fts_children@@Base+0xa28>
   19664:	add	sl, sp, #20
   19668:	add	r9, sp, #72	; 0x48
   1966c:	mov	r8, #0
   19670:	add	r0, pc, r0
   19674:	str	r0, [sp, #12]
   19678:	ldr	r3, [fp, #4]
   1967c:	ldr	r2, [fp, #8]
   19680:	cmp	r3, r2
   19684:	bcs	19770 <fts_children@@Base+0x8d4>
   19688:	add	r2, r3, #1
   1968c:	str	r2, [fp, #4]
   19690:	ldrb	r0, [r3]
   19694:	cmp	r0, #32
   19698:	beq	19678 <fts_children@@Base+0x7dc>
   1969c:	sub	r3, r0, #9
   196a0:	cmp	r3, #1
   196a4:	bls	19678 <fts_children@@Base+0x7dc>
   196a8:	cmp	r0, #35	; 0x23
   196ac:	beq	19784 <fts_children@@Base+0x8e8>
   196b0:	mov	r1, fp
   196b4:	bl	11a54 <ungetc@plt>
   196b8:	mov	r0, fp
   196bc:	ldr	r1, [sp, #12]
   196c0:	mov	r2, sl
   196c4:	mov	r3, r9
   196c8:	bl	11a90 <fscanf@plt>
   196cc:	cmp	r0, #1
   196d0:	ble	197b4 <fts_children@@Base+0x918>
   196d4:	mov	r0, sl
   196d8:	bl	11a30 <strlen@plt>
   196dc:	str	r0, [sp, #8]
   196e0:	mov	r0, r9
   196e4:	bl	11a30 <strlen@plt>
   196e8:	cmp	r8, #0
   196ec:	mov	r2, r0
   196f0:	bne	19818 <fts_children@@Base+0x97c>
   196f4:	ldr	r3, [sp, #8]
   196f8:	str	r2, [sp]
   196fc:	add	r8, r0, r3
   19700:	add	r0, r8, #3
   19704:	add	r8, r8, #2
   19708:	bl	119b8 <malloc@plt>
   1970c:	ldr	r2, [sp]
   19710:	mov	r3, r0
   19714:	cmp	r3, #0
   19718:	beq	1987c <fts_children@@Base+0x9e0>
   1971c:	ldr	r0, [sp, #8]
   19720:	movw	r1, #65534	; 0xfffe
   19724:	movt	r1, #65535	; 0xffff
   19728:	rsb	r2, r2, r8
   1972c:	rsb	r1, r0, r1
   19730:	stm	sp, {r2, r3}
   19734:	add	r0, r1, r2
   19738:	mov	r1, sl
   1973c:	add	r0, r3, r0
   19740:	mov	r4, r3
   19744:	bl	1194c <strcpy@plt>
   19748:	ldr	r2, [sp]
   1974c:	ldr	r3, [sp, #4]
   19750:	mov	r1, r9
   19754:	sub	r0, r2, #1
   19758:	add	r0, r3, r0
   1975c:	bl	1194c <strcpy@plt>
   19760:	ldr	r3, [fp, #4]
   19764:	ldr	r2, [fp, #8]
   19768:	cmp	r3, r2
   1976c:	bcc	19688 <fts_children@@Base+0x7ec>
   19770:	mov	r0, fp
   19774:	bl	11ad8 <__uflow@plt>
   19778:	cmn	r0, #1
   1977c:	beq	197b4 <fts_children@@Base+0x918>
   19780:	b	19694 <fts_children@@Base+0x7f8>
   19784:	ldr	r3, [fp, #4]
   19788:	ldr	r2, [fp, #8]
   1978c:	cmp	r3, r2
   19790:	bcs	19898 <fts_children@@Base+0x9fc>
   19794:	add	r2, r3, #1
   19798:	str	r2, [fp, #4]
   1979c:	ldrb	r0, [r3]
   197a0:	cmp	r0, #10
   197a4:	cmnne	r0, #1
   197a8:	bne	19784 <fts_children@@Base+0x8e8>
   197ac:	cmn	r0, #1
   197b0:	bne	19678 <fts_children@@Base+0x7dc>
   197b4:	mov	r0, fp
   197b8:	bl	19998 <fts_children@@Base+0xafc>
   197bc:	cmp	r8, #0
   197c0:	beq	1980c <fts_children@@Base+0x970>
   197c4:	mov	r3, #0
   197c8:	strb	r3, [r4, r8]
   197cc:	mov	r0, r7
   197d0:	bl	1185c <free@plt>
   197d4:	ldr	r3, [pc, #236]	; 198c8 <fts_children@@Base+0xa2c>
   197d8:	add	r3, pc, r3
   197dc:	str	r4, [r3]
   197e0:	b	19504 <fts_children@@Base+0x668>
   197e4:	ldr	r8, [pc, #224]	; 198cc <fts_children@@Base+0xa30>
   197e8:	mov	r3, #7
   197ec:	mov	sl, #8
   197f0:	add	r8, pc, r8
   197f4:	ldrb	r3, [r8, r3]
   197f8:	cmp	r3, #47	; 0x2f
   197fc:	movne	r9, #1
   19800:	movne	fp, r9
   19804:	bne	195e8 <fts_children@@Base+0x74c>
   19808:	b	195e0 <fts_children@@Base+0x744>
   1980c:	ldr	r4, [pc, #188]	; 198d0 <fts_children@@Base+0xa34>
   19810:	add	r4, pc, r4
   19814:	b	197cc <fts_children@@Base+0x930>
   19818:	ldr	r0, [sp, #8]
   1981c:	str	r2, [sp]
   19820:	add	r3, r0, r2
   19824:	mov	r0, r4
   19828:	add	r8, r3, r8
   1982c:	add	r1, r8, #3
   19830:	add	r8, r8, #2
   19834:	bl	118c8 <realloc@plt>
   19838:	ldr	r2, [sp]
   1983c:	mov	r3, r0
   19840:	b	19714 <fts_children@@Base+0x878>
   19844:	ldr	r4, [pc, #136]	; 198d4 <fts_children@@Base+0xa38>
   19848:	add	r4, pc, r4
   1984c:	b	197d4 <fts_children@@Base+0x938>
   19850:	ldr	r8, [pc, #128]	; 198d8 <fts_children@@Base+0xa3c>
   19854:	mov	r3, #7
   19858:	mov	sl, #8
   1985c:	add	r8, pc, r8
   19860:	b	197f4 <fts_children@@Base+0x958>
   19864:	ldr	r4, [pc, #112]	; 198dc <fts_children@@Base+0xa40>
   19868:	mov	r0, r8
   1986c:	add	r4, pc, r4
   19870:	bl	11bc8 <close@plt>
   19874:	b	197cc <fts_children@@Base+0x930>
   19878:	bl	118b0 <__stack_chk_fail@plt>
   1987c:	mov	r0, r4
   19880:	ldr	r4, [pc, #88]	; 198e0 <fts_children@@Base+0xa44>
   19884:	bl	1185c <free@plt>
   19888:	mov	r0, fp
   1988c:	add	r4, pc, r4
   19890:	bl	19998 <fts_children@@Base+0xafc>
   19894:	b	197cc <fts_children@@Base+0x930>
   19898:	mov	r0, fp
   1989c:	bl	11ad8 <__uflow@plt>
   198a0:	b	197a0 <fts_children@@Base+0x904>
   198a4:	andeq	r2, r1, r8, lsr #22
   198a8:	andeq	r0, r0, ip, ror r1
   198ac:	andeq	r2, r1, ip, asr #28
   198b0:	andeq	r1, r0, r0, asr sp
   198b4:	andeq	r1, r0, ip, asr r6
   198b8:	andeq	r1, r0, r8, lsr #26
   198bc:	ldrdeq	r1, [r0], -r0
   198c0:	andeq	r1, r0, ip, lsr #25
   198c4:	muleq	r0, r0, ip
   198c8:	andeq	r2, r1, ip, ror #22
   198cc:	ldrdeq	r1, [r0], -r8
   198d0:	strdeq	r1, [r0], -r4
   198d4:			; <UNDEFINED> instruction: 0x000013bc
   198d8:	andeq	r1, r0, ip, ror #20
   198dc:	muleq	r0, r8, r3
   198e0:	andeq	r1, r0, r8, ror r3
   198e4:	push	{r2, r3}
   198e8:	ldr	r3, [pc, #88]	; 19948 <fts_children@@Base+0xaac>
   198ec:	ldr	ip, [pc, #88]	; 1994c <fts_children@@Base+0xab0>
   198f0:	add	r3, pc, r3
   198f4:	push	{r4, lr}
   198f8:	sub	sp, sp, #8
   198fc:	ldr	r4, [r3, ip]
   19900:	ldr	r2, [sp, #16]
   19904:	ldr	ip, [r4]
   19908:	ands	r3, r2, #64	; 0x40
   1990c:	ldrne	r3, [sp, #20]
   19910:	str	ip, [sp, #4]
   19914:	addne	ip, sp, #20
   19918:	strne	ip, [sp]
   1991c:	bl	11a3c <openat64@plt>
   19920:	bl	1995c <fts_children@@Base+0xac0>
   19924:	ldr	r2, [sp, #4]
   19928:	ldr	r3, [r4]
   1992c:	cmp	r2, r3
   19930:	bne	19944 <fts_children@@Base+0xaa8>
   19934:	add	sp, sp, #8
   19938:	pop	{r4, lr}
   1993c:	add	sp, sp, #8
   19940:	bx	lr
   19944:	bl	118b0 <__stack_chk_fail@plt>
   19948:	andeq	r2, r1, r8, lsl #14
   1994c:	andeq	r0, r0, ip, ror r1
   19950:	mov	r1, #0
   19954:	mov	r2, #3
   19958:	b	19a38 <fts_children@@Base+0xb9c>
   1995c:	cmp	r0, #2
   19960:	push	{r3, r4, r5, r6, r7, lr}
   19964:	mov	r4, r0
   19968:	bhi	19990 <fts_children@@Base+0xaf4>
   1996c:	bl	19950 <fts_children@@Base+0xab4>
   19970:	mov	r7, r0
   19974:	bl	11a6c <__errno_location@plt>
   19978:	ldr	r6, [r0]
   1997c:	mov	r5, r0
   19980:	mov	r0, r4
   19984:	mov	r4, r7
   19988:	bl	11bc8 <close@plt>
   1998c:	str	r6, [r5]
   19990:	mov	r0, r4
   19994:	pop	{r3, r4, r5, r6, r7, pc}
   19998:	push	{r4, r5, r6, lr}
   1999c:	sub	sp, sp, #8
   199a0:	mov	r4, r0
   199a4:	bl	11aa8 <fileno@plt>
   199a8:	cmp	r0, #0
   199ac:	mov	r0, r4
   199b0:	blt	19a2c <fts_children@@Base+0xb90>
   199b4:	bl	119d0 <__freading@plt>
   199b8:	cmp	r0, #0
   199bc:	bne	199f8 <fts_children@@Base+0xb5c>
   199c0:	mov	r0, r4
   199c4:	bl	19bac <fts_children@@Base+0xd10>
   199c8:	cmp	r0, #0
   199cc:	beq	19a28 <fts_children@@Base+0xb8c>
   199d0:	bl	11a6c <__errno_location@plt>
   199d4:	ldr	r6, [r0]
   199d8:	mov	r5, r0
   199dc:	mov	r0, r4
   199e0:	bl	11ac0 <fclose@plt>
   199e4:	cmp	r6, #0
   199e8:	mvnne	r0, #0
   199ec:	strne	r6, [r5]
   199f0:	add	sp, sp, #8
   199f4:	pop	{r4, r5, r6, pc}
   199f8:	mov	r0, r4
   199fc:	bl	11aa8 <fileno@plt>
   19a00:	mov	r1, #1
   19a04:	mov	r2, #0
   19a08:	mov	r3, #0
   19a0c:	str	r1, [sp]
   19a10:	bl	11934 <lseek64@plt>
   19a14:	mvn	r2, #0
   19a18:	mvn	r3, #0
   19a1c:	cmp	r1, r3
   19a20:	cmpeq	r0, r2
   19a24:	bne	199c0 <fts_children@@Base+0xb24>
   19a28:	mov	r0, r4
   19a2c:	add	sp, sp, #8
   19a30:	pop	{r4, r5, r6, lr}
   19a34:	b	11ac0 <fclose@plt>
   19a38:	push	{r1, r2, r3}
   19a3c:	movw	ip, #1030	; 0x406
   19a40:	ldr	r3, [pc, #336]	; 19b98 <fts_children@@Base+0xcfc>
   19a44:	push	{r4, r5, r6, r7, r8, lr}
   19a48:	add	r3, pc, r3
   19a4c:	ldr	lr, [pc, #328]	; 19b9c <fts_children@@Base+0xd00>
   19a50:	sub	sp, sp, #12
   19a54:	add	r2, sp, #40	; 0x28
   19a58:	mov	r6, r0
   19a5c:	ldr	r1, [sp, #36]	; 0x24
   19a60:	ldr	r4, [r3, lr]
   19a64:	cmp	r1, ip
   19a68:	str	r2, [sp]
   19a6c:	ldr	r3, [r4]
   19a70:	str	r3, [sp, #4]
   19a74:	bne	19af8 <fts_children@@Base+0xc5c>
   19a78:	ldr	r8, [pc, #288]	; 19ba0 <fts_children@@Base+0xd04>
   19a7c:	add	r3, sp, #44	; 0x2c
   19a80:	str	r3, [sp]
   19a84:	add	r8, pc, r8
   19a88:	ldr	r7, [sp, #40]	; 0x28
   19a8c:	ldr	r3, [r8]
   19a90:	mov	r2, r7
   19a94:	cmp	r3, #0
   19a98:	blt	19b84 <fts_children@@Base+0xce8>
   19a9c:	bl	11a60 <fcntl@plt>
   19aa0:	subs	r5, r0, #0
   19aa4:	blt	19b08 <fts_children@@Base+0xc6c>
   19aa8:	ldr	r3, [pc, #244]	; 19ba4 <fts_children@@Base+0xd08>
   19aac:	mov	r2, #1
   19ab0:	add	r3, pc, r3
   19ab4:	str	r2, [r3]
   19ab8:	cmp	r5, #0
   19abc:	blt	19ad4 <fts_children@@Base+0xc38>
   19ac0:	ldr	r3, [pc, #224]	; 19ba8 <fts_children@@Base+0xd0c>
   19ac4:	add	r3, pc, r3
   19ac8:	ldr	r3, [r3]
   19acc:	cmn	r3, #1
   19ad0:	beq	19b38 <fts_children@@Base+0xc9c>
   19ad4:	ldr	r2, [sp, #4]
   19ad8:	mov	r0, r5
   19adc:	ldr	r3, [r4]
   19ae0:	cmp	r2, r3
   19ae4:	bne	19b94 <fts_children@@Base+0xcf8>
   19ae8:	add	sp, sp, #12
   19aec:	pop	{r4, r5, r6, r7, r8, lr}
   19af0:	add	sp, sp, #12
   19af4:	bx	lr
   19af8:	ldr	r2, [sp, #40]	; 0x28
   19afc:	bl	11a60 <fcntl@plt>
   19b00:	mov	r5, r0
   19b04:	b	19ad4 <fts_children@@Base+0xc38>
   19b08:	bl	11a6c <__errno_location@plt>
   19b0c:	ldr	r3, [r0]
   19b10:	cmp	r3, #22
   19b14:	bne	19aa8 <fts_children@@Base+0xc0c>
   19b18:	mov	r0, r6
   19b1c:	mov	r2, r7
   19b20:	mov	r1, #0
   19b24:	bl	19a38 <fts_children@@Base+0xb9c>
   19b28:	subs	r5, r0, #0
   19b2c:	blt	19ad4 <fts_children@@Base+0xc38>
   19b30:	mvn	r3, #0
   19b34:	str	r3, [r8]
   19b38:	mov	r0, r5
   19b3c:	mov	r1, #1
   19b40:	bl	11a60 <fcntl@plt>
   19b44:	subs	r2, r0, #0
   19b48:	blt	19b64 <fts_children@@Base+0xcc8>
   19b4c:	orr	r2, r2, #1
   19b50:	mov	r0, r5
   19b54:	mov	r1, #2
   19b58:	bl	11a60 <fcntl@plt>
   19b5c:	cmn	r0, #1
   19b60:	bne	19ad4 <fts_children@@Base+0xc38>
   19b64:	bl	11a6c <__errno_location@plt>
   19b68:	ldr	r7, [r0]
   19b6c:	mov	r6, r0
   19b70:	mov	r0, r5
   19b74:	mvn	r5, #0
   19b78:	bl	11bc8 <close@plt>
   19b7c:	str	r7, [r6]
   19b80:	b	19ad4 <fts_children@@Base+0xc38>
   19b84:	mov	r1, #0
   19b88:	bl	19a38 <fts_children@@Base+0xb9c>
   19b8c:	mov	r5, r0
   19b90:	b	19ab8 <fts_children@@Base+0xc1c>
   19b94:	bl	118b0 <__stack_chk_fail@plt>
   19b98:			; <UNDEFINED> instruction: 0x000125b0
   19b9c:	andeq	r0, r0, ip, ror r1
   19ba0:	andeq	r2, r1, r4, asr #17
   19ba4:	muleq	r1, r8, r8
   19ba8:	andeq	r2, r1, r4, lsl #17
   19bac:	push	{r4, lr}
   19bb0:	subs	r4, r0, #0
   19bb4:	sub	sp, sp, #8
   19bb8:	beq	19bc8 <fts_children@@Base+0xd2c>
   19bbc:	bl	119d0 <__freading@plt>
   19bc0:	cmp	r0, #0
   19bc4:	bne	19bd8 <fts_children@@Base+0xd3c>
   19bc8:	mov	r0, r4
   19bcc:	add	sp, sp, #8
   19bd0:	pop	{r4, lr}
   19bd4:	b	11838 <fflush@plt>
   19bd8:	ldr	r3, [r4]
   19bdc:	tst	r3, #256	; 0x100
   19be0:	beq	19bc8 <fts_children@@Base+0xd2c>
   19be4:	mov	r3, #1
   19be8:	mov	r0, r4
   19bec:	str	r3, [sp]
   19bf0:	mov	r2, #0
   19bf4:	mov	r3, #0
   19bf8:	bl	19c0c <fts_children@@Base+0xd70>
   19bfc:	mov	r0, r4
   19c00:	add	sp, sp, #8
   19c04:	pop	{r4, lr}
   19c08:	b	11838 <fflush@plt>
   19c0c:	push	{r4, r5, r6, r7, lr}
   19c10:	sub	sp, sp, #20
   19c14:	ldmib	r0, {r1, ip}
   19c18:	mov	r6, r0
   19c1c:	ldr	r4, [sp, #40]	; 0x28
   19c20:	cmp	ip, r1
   19c24:	beq	19c3c <fts_children@@Base+0xda0>
   19c28:	str	r4, [sp, #40]	; 0x28
   19c2c:	mov	r0, r6
   19c30:	add	sp, sp, #20
   19c34:	pop	{r4, r5, r6, r7, lr}
   19c38:	b	11acc <fseeko64@plt>
   19c3c:	ldr	ip, [r0, #20]
   19c40:	ldr	r1, [r0, #16]
   19c44:	cmp	ip, r1
   19c48:	bne	19c28 <fts_children@@Base+0xd8c>
   19c4c:	ldr	r7, [r0, #36]	; 0x24
   19c50:	cmp	r7, #0
   19c54:	bne	19c28 <fts_children@@Base+0xd8c>
   19c58:	str	r2, [sp, #12]
   19c5c:	mvn	r5, #0
   19c60:	str	r3, [sp, #8]
   19c64:	bl	11aa8 <fileno@plt>
   19c68:	str	r4, [sp]
   19c6c:	mvn	r4, #0
   19c70:	ldr	r2, [sp, #12]
   19c74:	ldr	r3, [sp, #8]
   19c78:	bl	11934 <lseek64@plt>
   19c7c:	mov	r2, r0
   19c80:	mov	r3, r1
   19c84:	cmp	r3, r5
   19c88:	cmpeq	r2, r4
   19c8c:	beq	19cac <fts_children@@Base+0xe10>
   19c90:	ldr	r1, [r6]
   19c94:	mov	r0, r7
   19c98:	strd	r2, [r6, #80]	; 0x50
   19c9c:	bic	r3, r1, #16
   19ca0:	str	r3, [r6]
   19ca4:	add	sp, sp, #20
   19ca8:	pop	{r4, r5, r6, r7, pc}
   19cac:	mvn	r0, #0
   19cb0:	b	19ca4 <fts_children@@Base+0xe08>
   19cb4:	subs	r2, r1, #1
   19cb8:	bxeq	lr
   19cbc:	bcc	19e94 <fts_children@@Base+0xff8>
   19cc0:	cmp	r0, r1
   19cc4:	bls	19e78 <fts_children@@Base+0xfdc>
   19cc8:	tst	r1, r2
   19ccc:	beq	19e84 <fts_children@@Base+0xfe8>
   19cd0:	clz	r3, r0
   19cd4:	clz	r2, r1
   19cd8:	sub	r3, r2, r3
   19cdc:	rsbs	r3, r3, #31
   19ce0:	addne	r3, r3, r3, lsl #1
   19ce4:	mov	r2, #0
   19ce8:	addne	pc, pc, r3, lsl #2
   19cec:	nop	{0}
   19cf0:	cmp	r0, r1, lsl #31
   19cf4:	adc	r2, r2, r2
   19cf8:	subcs	r0, r0, r1, lsl #31
   19cfc:	cmp	r0, r1, lsl #30
   19d00:	adc	r2, r2, r2
   19d04:	subcs	r0, r0, r1, lsl #30
   19d08:	cmp	r0, r1, lsl #29
   19d0c:	adc	r2, r2, r2
   19d10:	subcs	r0, r0, r1, lsl #29
   19d14:	cmp	r0, r1, lsl #28
   19d18:	adc	r2, r2, r2
   19d1c:	subcs	r0, r0, r1, lsl #28
   19d20:	cmp	r0, r1, lsl #27
   19d24:	adc	r2, r2, r2
   19d28:	subcs	r0, r0, r1, lsl #27
   19d2c:	cmp	r0, r1, lsl #26
   19d30:	adc	r2, r2, r2
   19d34:	subcs	r0, r0, r1, lsl #26
   19d38:	cmp	r0, r1, lsl #25
   19d3c:	adc	r2, r2, r2
   19d40:	subcs	r0, r0, r1, lsl #25
   19d44:	cmp	r0, r1, lsl #24
   19d48:	adc	r2, r2, r2
   19d4c:	subcs	r0, r0, r1, lsl #24
   19d50:	cmp	r0, r1, lsl #23
   19d54:	adc	r2, r2, r2
   19d58:	subcs	r0, r0, r1, lsl #23
   19d5c:	cmp	r0, r1, lsl #22
   19d60:	adc	r2, r2, r2
   19d64:	subcs	r0, r0, r1, lsl #22
   19d68:	cmp	r0, r1, lsl #21
   19d6c:	adc	r2, r2, r2
   19d70:	subcs	r0, r0, r1, lsl #21
   19d74:	cmp	r0, r1, lsl #20
   19d78:	adc	r2, r2, r2
   19d7c:	subcs	r0, r0, r1, lsl #20
   19d80:	cmp	r0, r1, lsl #19
   19d84:	adc	r2, r2, r2
   19d88:	subcs	r0, r0, r1, lsl #19
   19d8c:	cmp	r0, r1, lsl #18
   19d90:	adc	r2, r2, r2
   19d94:	subcs	r0, r0, r1, lsl #18
   19d98:	cmp	r0, r1, lsl #17
   19d9c:	adc	r2, r2, r2
   19da0:	subcs	r0, r0, r1, lsl #17
   19da4:	cmp	r0, r1, lsl #16
   19da8:	adc	r2, r2, r2
   19dac:	subcs	r0, r0, r1, lsl #16
   19db0:	cmp	r0, r1, lsl #15
   19db4:	adc	r2, r2, r2
   19db8:	subcs	r0, r0, r1, lsl #15
   19dbc:	cmp	r0, r1, lsl #14
   19dc0:	adc	r2, r2, r2
   19dc4:	subcs	r0, r0, r1, lsl #14
   19dc8:	cmp	r0, r1, lsl #13
   19dcc:	adc	r2, r2, r2
   19dd0:	subcs	r0, r0, r1, lsl #13
   19dd4:	cmp	r0, r1, lsl #12
   19dd8:	adc	r2, r2, r2
   19ddc:	subcs	r0, r0, r1, lsl #12
   19de0:	cmp	r0, r1, lsl #11
   19de4:	adc	r2, r2, r2
   19de8:	subcs	r0, r0, r1, lsl #11
   19dec:	cmp	r0, r1, lsl #10
   19df0:	adc	r2, r2, r2
   19df4:	subcs	r0, r0, r1, lsl #10
   19df8:	cmp	r0, r1, lsl #9
   19dfc:	adc	r2, r2, r2
   19e00:	subcs	r0, r0, r1, lsl #9
   19e04:	cmp	r0, r1, lsl #8
   19e08:	adc	r2, r2, r2
   19e0c:	subcs	r0, r0, r1, lsl #8
   19e10:	cmp	r0, r1, lsl #7
   19e14:	adc	r2, r2, r2
   19e18:	subcs	r0, r0, r1, lsl #7
   19e1c:	cmp	r0, r1, lsl #6
   19e20:	adc	r2, r2, r2
   19e24:	subcs	r0, r0, r1, lsl #6
   19e28:	cmp	r0, r1, lsl #5
   19e2c:	adc	r2, r2, r2
   19e30:	subcs	r0, r0, r1, lsl #5
   19e34:	cmp	r0, r1, lsl #4
   19e38:	adc	r2, r2, r2
   19e3c:	subcs	r0, r0, r1, lsl #4
   19e40:	cmp	r0, r1, lsl #3
   19e44:	adc	r2, r2, r2
   19e48:	subcs	r0, r0, r1, lsl #3
   19e4c:	cmp	r0, r1, lsl #2
   19e50:	adc	r2, r2, r2
   19e54:	subcs	r0, r0, r1, lsl #2
   19e58:	cmp	r0, r1, lsl #1
   19e5c:	adc	r2, r2, r2
   19e60:	subcs	r0, r0, r1, lsl #1
   19e64:	cmp	r0, r1
   19e68:	adc	r2, r2, r2
   19e6c:	subcs	r0, r0, r1
   19e70:	mov	r0, r2
   19e74:	bx	lr
   19e78:	moveq	r0, #1
   19e7c:	movne	r0, #0
   19e80:	bx	lr
   19e84:	clz	r2, r1
   19e88:	rsb	r2, r2, #31
   19e8c:	lsr	r0, r0, r2
   19e90:	bx	lr
   19e94:	cmp	r0, #0
   19e98:	mvnne	r0, #0
   19e9c:	b	19efc <fts_children@@Base+0x1060>
   19ea0:	cmp	r1, #0
   19ea4:	beq	19e94 <fts_children@@Base+0xff8>
   19ea8:	push	{r0, r1, lr}
   19eac:	bl	19cb4 <fts_children@@Base+0xe18>
   19eb0:	pop	{r1, r2, lr}
   19eb4:	mul	r3, r2, r0
   19eb8:	sub	r1, r1, r3
   19ebc:	bx	lr
   19ec0:	cmp	r3, #0
   19ec4:	cmpeq	r2, #0
   19ec8:	bne	19ee0 <fts_children@@Base+0x1044>
   19ecc:	cmp	r1, #0
   19ed0:	cmpeq	r0, #0
   19ed4:	mvnne	r1, #0
   19ed8:	mvnne	r0, #0
   19edc:	b	19efc <fts_children@@Base+0x1060>
   19ee0:	sub	sp, sp, #8
   19ee4:	push	{sp, lr}
   19ee8:	bl	19f48 <fts_children@@Base+0x10ac>
   19eec:	ldr	lr, [sp, #4]
   19ef0:	add	sp, sp, #8
   19ef4:	pop	{r2, r3}
   19ef8:	bx	lr
   19efc:	push	{r1, lr}
   19f00:	mov	r0, #8
   19f04:	bl	11808 <raise@plt>
   19f08:	pop	{r1, pc}
   19f0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19f10:	mov	r8, r2
   19f14:	mov	r6, r0
   19f18:	mov	r7, r1
   19f1c:	mov	sl, r3
   19f20:	ldr	r9, [sp, #32]
   19f24:	bl	19f84 <fts_children@@Base+0x10e8>
   19f28:	umull	r4, r5, r8, r0
   19f2c:	mul	r8, r8, r1
   19f30:	mla	r2, r0, sl, r8
   19f34:	add	r5, r2, r5
   19f38:	subs	r4, r6, r4
   19f3c:	sbc	r5, r7, r5
   19f40:	strd	r4, [r9]
   19f44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f48:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19f4c:	mov	r8, r2
   19f50:	mov	r6, r0
   19f54:	mov	r7, r1
   19f58:	mov	r5, r3
   19f5c:	ldr	r9, [sp, #32]
   19f60:	bl	1a410 <fts_children@@Base+0x1574>
   19f64:	mul	r3, r0, r5
   19f68:	umull	r4, r5, r0, r8
   19f6c:	mla	r8, r8, r1, r3
   19f70:	add	r5, r8, r5
   19f74:	subs	r4, r6, r4
   19f78:	sbc	r5, r7, r5
   19f7c:	strd	r4, [r9]
   19f80:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19f84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f88:	rsbs	r4, r0, #0
   19f8c:	rsc	r5, r1, #0
   19f90:	cmp	r1, #0
   19f94:	mvn	r6, #0
   19f98:	sub	sp, sp, #12
   19f9c:	movge	r4, r0
   19fa0:	movge	r5, r1
   19fa4:	movge	r6, #0
   19fa8:	cmp	r3, #0
   19fac:	blt	1a1e4 <fts_children@@Base+0x1348>
   19fb0:	cmp	r3, #0
   19fb4:	mov	sl, r4
   19fb8:	mov	ip, r5
   19fbc:	mov	r0, r2
   19fc0:	mov	r1, r3
   19fc4:	mov	r8, r2
   19fc8:	mov	r7, r4
   19fcc:	mov	r9, r5
   19fd0:	bne	1a0c8 <fts_children@@Base+0x122c>
   19fd4:	cmp	r2, r5
   19fd8:	bls	1a104 <fts_children@@Base+0x1268>
   19fdc:	clz	r3, r2
   19fe0:	cmp	r3, #0
   19fe4:	rsbne	r2, r3, #32
   19fe8:	lslne	r8, r0, r3
   19fec:	lsrne	r2, r4, r2
   19ff0:	lslne	r7, r4, r3
   19ff4:	orrne	r9, r2, r5, lsl r3
   19ff8:	lsr	r4, r8, #16
   19ffc:	uxth	sl, r8
   1a000:	mov	r1, r4
   1a004:	mov	r0, r9
   1a008:	bl	19cb4 <fts_children@@Base+0xe18>
   1a00c:	mov	r1, r4
   1a010:	mov	fp, r0
   1a014:	mov	r0, r9
   1a018:	bl	19ea0 <fts_children@@Base+0x1004>
   1a01c:	mul	r0, sl, fp
   1a020:	lsr	r2, r7, #16
   1a024:	orr	r1, r2, r1, lsl #16
   1a028:	cmp	r0, r1
   1a02c:	bls	1a050 <fts_children@@Base+0x11b4>
   1a030:	adds	r1, r1, r8
   1a034:	sub	r3, fp, #1
   1a038:	bcs	1a04c <fts_children@@Base+0x11b0>
   1a03c:	cmp	r0, r1
   1a040:	subhi	fp, fp, #2
   1a044:	addhi	r1, r1, r8
   1a048:	bhi	1a050 <fts_children@@Base+0x11b4>
   1a04c:	mov	fp, r3
   1a050:	rsb	r9, r0, r1
   1a054:	mov	r1, r4
   1a058:	uxth	r7, r7
   1a05c:	mov	r0, r9
   1a060:	bl	19cb4 <fts_children@@Base+0xe18>
   1a064:	mov	r1, r4
   1a068:	mov	r5, r0
   1a06c:	mov	r0, r9
   1a070:	bl	19ea0 <fts_children@@Base+0x1004>
   1a074:	mul	sl, sl, r5
   1a078:	orr	r1, r7, r1, lsl #16
   1a07c:	cmp	sl, r1
   1a080:	bls	1a0a0 <fts_children@@Base+0x1204>
   1a084:	adds	r8, r1, r8
   1a088:	sub	r3, r5, #1
   1a08c:	bcs	1a09c <fts_children@@Base+0x1200>
   1a090:	cmp	sl, r8
   1a094:	subhi	r5, r5, #2
   1a098:	bhi	1a0a0 <fts_children@@Base+0x1204>
   1a09c:	mov	r5, r3
   1a0a0:	orr	r3, r5, fp, lsl #16
   1a0a4:	mov	r4, #0
   1a0a8:	cmp	r6, #0
   1a0ac:	mov	r0, r3
   1a0b0:	mov	r1, r4
   1a0b4:	beq	1a0c0 <fts_children@@Base+0x1224>
   1a0b8:	rsbs	r0, r0, #0
   1a0bc:	rsc	r1, r1, #0
   1a0c0:	add	sp, sp, #12
   1a0c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a0c8:	cmp	r3, r5
   1a0cc:	movhi	r4, #0
   1a0d0:	movhi	r3, r4
   1a0d4:	bhi	1a0a8 <fts_children@@Base+0x120c>
   1a0d8:	clz	r5, r1
   1a0dc:	cmp	r5, #0
   1a0e0:	bne	1a2d0 <fts_children@@Base+0x1434>
   1a0e4:	cmp	r1, ip
   1a0e8:	cmpcs	r2, sl
   1a0ec:	movhi	r4, #0
   1a0f0:	movls	r4, #1
   1a0f4:	movls	r3, #1
   1a0f8:	movls	r4, r5
   1a0fc:	movhi	r3, r4
   1a100:	b	1a0a8 <fts_children@@Base+0x120c>
   1a104:	cmp	r2, #0
   1a108:	bne	1a11c <fts_children@@Base+0x1280>
   1a10c:	mov	r1, r2
   1a110:	mov	r0, #1
   1a114:	bl	19cb4 <fts_children@@Base+0xe18>
   1a118:	mov	r8, r0
   1a11c:	clz	r3, r8
   1a120:	cmp	r3, #0
   1a124:	bne	1a1f4 <fts_children@@Base+0x1358>
   1a128:	rsb	r9, r8, r9
   1a12c:	lsr	r5, r8, #16
   1a130:	uxth	sl, r8
   1a134:	mov	r4, #1
   1a138:	mov	r1, r5
   1a13c:	mov	r0, r9
   1a140:	bl	19cb4 <fts_children@@Base+0xe18>
   1a144:	mov	r1, r5
   1a148:	mov	fp, r0
   1a14c:	mov	r0, r9
   1a150:	bl	19ea0 <fts_children@@Base+0x1004>
   1a154:	mul	r0, sl, fp
   1a158:	lsr	r2, r7, #16
   1a15c:	orr	r1, r2, r1, lsl #16
   1a160:	cmp	r0, r1
   1a164:	bls	1a184 <fts_children@@Base+0x12e8>
   1a168:	adds	r1, r1, r8
   1a16c:	sub	r3, fp, #1
   1a170:	bcs	1a3f0 <fts_children@@Base+0x1554>
   1a174:	cmp	r0, r1
   1a178:	subhi	fp, fp, #2
   1a17c:	addhi	r1, r1, r8
   1a180:	bls	1a3f0 <fts_children@@Base+0x1554>
   1a184:	rsb	r2, r0, r1
   1a188:	mov	r1, r5
   1a18c:	str	r2, [sp]
   1a190:	uxth	r7, r7
   1a194:	mov	r0, r2
   1a198:	bl	19cb4 <fts_children@@Base+0xe18>
   1a19c:	ldr	r2, [sp]
   1a1a0:	mov	r1, r5
   1a1a4:	mov	r9, r0
   1a1a8:	mov	r0, r2
   1a1ac:	bl	19ea0 <fts_children@@Base+0x1004>
   1a1b0:	mul	sl, sl, r9
   1a1b4:	orr	r1, r7, r1, lsl #16
   1a1b8:	cmp	sl, r1
   1a1bc:	bls	1a1dc <fts_children@@Base+0x1340>
   1a1c0:	adds	r8, r1, r8
   1a1c4:	sub	r3, r9, #1
   1a1c8:	bcs	1a1d8 <fts_children@@Base+0x133c>
   1a1cc:	cmp	sl, r8
   1a1d0:	subhi	r9, r9, #2
   1a1d4:	bhi	1a1dc <fts_children@@Base+0x1340>
   1a1d8:	mov	r9, r3
   1a1dc:	orr	r3, r9, fp, lsl #16
   1a1e0:	b	1a0a8 <fts_children@@Base+0x120c>
   1a1e4:	mvn	r6, r6
   1a1e8:	rsbs	r2, r2, #0
   1a1ec:	rsc	r3, r3, #0
   1a1f0:	b	19fb0 <fts_children@@Base+0x1114>
   1a1f4:	lsl	r8, r8, r3
   1a1f8:	rsb	fp, r3, #32
   1a1fc:	lsr	r4, r9, fp
   1a200:	lsr	fp, r7, fp
   1a204:	lsr	r5, r8, #16
   1a208:	orr	fp, fp, r9, lsl r3
   1a20c:	mov	r0, r4
   1a210:	lsl	r7, r7, r3
   1a214:	mov	r1, r5
   1a218:	uxth	sl, r8
   1a21c:	bl	19cb4 <fts_children@@Base+0xe18>
   1a220:	mov	r1, r5
   1a224:	mov	r3, r0
   1a228:	mov	r0, r4
   1a22c:	str	r3, [sp]
   1a230:	bl	19ea0 <fts_children@@Base+0x1004>
   1a234:	ldr	r3, [sp]
   1a238:	lsr	r2, fp, #16
   1a23c:	mul	r0, sl, r3
   1a240:	orr	r1, r2, r1, lsl #16
   1a244:	cmp	r0, r1
   1a248:	bls	1a268 <fts_children@@Base+0x13cc>
   1a24c:	adds	r1, r1, r8
   1a250:	sub	r2, r3, #1
   1a254:	bcs	1a408 <fts_children@@Base+0x156c>
   1a258:	cmp	r0, r1
   1a25c:	subhi	r3, r3, #2
   1a260:	addhi	r1, r1, r8
   1a264:	bls	1a408 <fts_children@@Base+0x156c>
   1a268:	rsb	r9, r0, r1
   1a26c:	mov	r1, r5
   1a270:	str	r3, [sp]
   1a274:	uxth	fp, fp
   1a278:	mov	r0, r9
   1a27c:	bl	19cb4 <fts_children@@Base+0xe18>
   1a280:	mov	r1, r5
   1a284:	mov	r4, r0
   1a288:	mov	r0, r9
   1a28c:	bl	19ea0 <fts_children@@Base+0x1004>
   1a290:	mul	r9, sl, r4
   1a294:	ldr	r3, [sp]
   1a298:	orr	r1, fp, r1, lsl #16
   1a29c:	cmp	r9, r1
   1a2a0:	bls	1a2c4 <fts_children@@Base+0x1428>
   1a2a4:	adds	r1, r1, r8
   1a2a8:	sub	r2, r4, #1
   1a2ac:	bcs	1a2c0 <fts_children@@Base+0x1424>
   1a2b0:	cmp	r9, r1
   1a2b4:	subhi	r4, r4, #2
   1a2b8:	addhi	r1, r1, r8
   1a2bc:	bhi	1a2c4 <fts_children@@Base+0x1428>
   1a2c0:	mov	r4, r2
   1a2c4:	rsb	r9, r9, r1
   1a2c8:	orr	r4, r4, r3, lsl #16
   1a2cc:	b	1a138 <fts_children@@Base+0x129c>
   1a2d0:	rsb	sl, r5, #32
   1a2d4:	lsl	r3, r2, r5
   1a2d8:	lsr	r0, r2, sl
   1a2dc:	lsr	r2, ip, sl
   1a2e0:	orr	r4, r0, r1, lsl r5
   1a2e4:	lsr	sl, r7, sl
   1a2e8:	mov	r0, r2
   1a2ec:	orr	sl, sl, ip, lsl r5
   1a2f0:	lsr	r9, r4, #16
   1a2f4:	str	r3, [sp, #4]
   1a2f8:	str	r2, [sp]
   1a2fc:	uxth	fp, r4
   1a300:	mov	r1, r9
   1a304:	bl	19cb4 <fts_children@@Base+0xe18>
   1a308:	ldr	r2, [sp]
   1a30c:	mov	r1, r9
   1a310:	mov	r8, r0
   1a314:	mov	r0, r2
   1a318:	bl	19ea0 <fts_children@@Base+0x1004>
   1a31c:	mul	r0, fp, r8
   1a320:	lsr	r2, sl, #16
   1a324:	orr	r1, r2, r1, lsl #16
   1a328:	cmp	r0, r1
   1a32c:	bls	1a34c <fts_children@@Base+0x14b0>
   1a330:	adds	r1, r1, r4
   1a334:	sub	r2, r8, #1
   1a338:	bcs	1a400 <fts_children@@Base+0x1564>
   1a33c:	cmp	r0, r1
   1a340:	subhi	r8, r8, #2
   1a344:	addhi	r1, r1, r4
   1a348:	bls	1a400 <fts_children@@Base+0x1564>
   1a34c:	rsb	ip, r0, r1
   1a350:	mov	r1, r9
   1a354:	str	ip, [sp]
   1a358:	mov	r0, ip
   1a35c:	bl	19cb4 <fts_children@@Base+0xe18>
   1a360:	ldr	ip, [sp]
   1a364:	mov	r1, r9
   1a368:	mov	r2, r0
   1a36c:	mov	r0, ip
   1a370:	str	r2, [sp]
   1a374:	bl	19ea0 <fts_children@@Base+0x1004>
   1a378:	ldr	r2, [sp]
   1a37c:	uxth	ip, sl
   1a380:	mul	fp, fp, r2
   1a384:	orr	ip, ip, r1, lsl #16
   1a388:	cmp	fp, ip
   1a38c:	bls	1a3ac <fts_children@@Base+0x1510>
   1a390:	adds	ip, ip, r4
   1a394:	sub	r1, r2, #1
   1a398:	bcs	1a3f8 <fts_children@@Base+0x155c>
   1a39c:	cmp	fp, ip
   1a3a0:	subhi	r2, r2, #2
   1a3a4:	addhi	ip, ip, r4
   1a3a8:	bls	1a3f8 <fts_children@@Base+0x155c>
   1a3ac:	ldr	r0, [sp, #4]
   1a3b0:	orr	r1, r2, r8, lsl #16
   1a3b4:	rsb	fp, fp, ip
   1a3b8:	umull	r2, r3, r1, r0
   1a3bc:	cmp	fp, r3
   1a3c0:	bcc	1a3e4 <fts_children@@Base+0x1548>
   1a3c4:	movne	r4, #0
   1a3c8:	moveq	r4, #1
   1a3cc:	cmp	r2, r7, lsl r5
   1a3d0:	movls	r4, #0
   1a3d4:	andhi	r4, r4, #1
   1a3d8:	cmp	r4, #0
   1a3dc:	moveq	r3, r1
   1a3e0:	beq	1a0a8 <fts_children@@Base+0x120c>
   1a3e4:	sub	r3, r1, #1
   1a3e8:	mov	r4, #0
   1a3ec:	b	1a0a8 <fts_children@@Base+0x120c>
   1a3f0:	mov	fp, r3
   1a3f4:	b	1a184 <fts_children@@Base+0x12e8>
   1a3f8:	mov	r2, r1
   1a3fc:	b	1a3ac <fts_children@@Base+0x1510>
   1a400:	mov	r8, r2
   1a404:	b	1a34c <fts_children@@Base+0x14b0>
   1a408:	mov	r3, r2
   1a40c:	b	1a268 <fts_children@@Base+0x13cc>
   1a410:	cmp	r3, #0
   1a414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a418:	mov	r6, r0
   1a41c:	sub	sp, sp, #12
   1a420:	mov	r5, r1
   1a424:	mov	r7, r0
   1a428:	mov	r4, r2
   1a42c:	mov	r8, r1
   1a430:	bne	1a510 <fts_children@@Base+0x1674>
   1a434:	cmp	r2, r1
   1a438:	bls	1a54c <fts_children@@Base+0x16b0>
   1a43c:	clz	r3, r2
   1a440:	cmp	r3, #0
   1a444:	rsbne	r8, r3, #32
   1a448:	lslne	r4, r2, r3
   1a44c:	lsrne	r8, r0, r8
   1a450:	lslne	r7, r0, r3
   1a454:	orrne	r8, r8, r1, lsl r3
   1a458:	lsr	r5, r4, #16
   1a45c:	uxth	sl, r4
   1a460:	mov	r1, r5
   1a464:	mov	r0, r8
   1a468:	bl	19cb4 <fts_children@@Base+0xe18>
   1a46c:	mov	r1, r5
   1a470:	mov	r9, r0
   1a474:	mov	r0, r8
   1a478:	bl	19ea0 <fts_children@@Base+0x1004>
   1a47c:	mul	r0, sl, r9
   1a480:	lsr	r3, r7, #16
   1a484:	orr	r1, r3, r1, lsl #16
   1a488:	cmp	r0, r1
   1a48c:	bls	1a4b0 <fts_children@@Base+0x1614>
   1a490:	adds	r1, r1, r4
   1a494:	sub	r2, r9, #1
   1a498:	bcs	1a4ac <fts_children@@Base+0x1610>
   1a49c:	cmp	r0, r1
   1a4a0:	subhi	r9, r9, #2
   1a4a4:	addhi	r1, r1, r4
   1a4a8:	bhi	1a4b0 <fts_children@@Base+0x1614>
   1a4ac:	mov	r9, r2
   1a4b0:	rsb	r8, r0, r1
   1a4b4:	mov	r1, r5
   1a4b8:	uxth	r7, r7
   1a4bc:	mov	r0, r8
   1a4c0:	bl	19cb4 <fts_children@@Base+0xe18>
   1a4c4:	mov	r1, r5
   1a4c8:	mov	r6, r0
   1a4cc:	mov	r0, r8
   1a4d0:	bl	19ea0 <fts_children@@Base+0x1004>
   1a4d4:	mul	sl, sl, r6
   1a4d8:	orr	r1, r7, r1, lsl #16
   1a4dc:	cmp	sl, r1
   1a4e0:	bls	1a4fc <fts_children@@Base+0x1660>
   1a4e4:	adds	r4, r1, r4
   1a4e8:	sub	r3, r6, #1
   1a4ec:	bcs	1a7f8 <fts_children@@Base+0x195c>
   1a4f0:	cmp	sl, r4
   1a4f4:	subhi	r6, r6, #2
   1a4f8:	bls	1a7f8 <fts_children@@Base+0x195c>
   1a4fc:	orr	r0, r6, r9, lsl #16
   1a500:	mov	r6, #0
   1a504:	mov	r1, r6
   1a508:	add	sp, sp, #12
   1a50c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a510:	cmp	r3, r1
   1a514:	movhi	r6, #0
   1a518:	movhi	r0, r6
   1a51c:	bhi	1a504 <fts_children@@Base+0x1668>
   1a520:	clz	r7, r3
   1a524:	cmp	r7, #0
   1a528:	bne	1a628 <fts_children@@Base+0x178c>
   1a52c:	cmp	r3, r1
   1a530:	cmpcs	r2, r6
   1a534:	movhi	r6, #0
   1a538:	movls	r6, #1
   1a53c:	movls	r0, #1
   1a540:	movls	r6, r7
   1a544:	movhi	r0, r6
   1a548:	b	1a504 <fts_children@@Base+0x1668>
   1a54c:	cmp	r2, #0
   1a550:	bne	1a564 <fts_children@@Base+0x16c8>
   1a554:	mov	r1, r2
   1a558:	mov	r0, #1
   1a55c:	bl	19cb4 <fts_children@@Base+0xe18>
   1a560:	mov	r4, r0
   1a564:	clz	r3, r4
   1a568:	cmp	r3, #0
   1a56c:	bne	1a724 <fts_children@@Base+0x1888>
   1a570:	rsb	r5, r4, r5
   1a574:	lsr	r8, r4, #16
   1a578:	uxth	sl, r4
   1a57c:	mov	r6, #1
   1a580:	mov	r1, r8
   1a584:	mov	r0, r5
   1a588:	bl	19cb4 <fts_children@@Base+0xe18>
   1a58c:	mov	r1, r8
   1a590:	mov	r9, r0
   1a594:	mov	r0, r5
   1a598:	bl	19ea0 <fts_children@@Base+0x1004>
   1a59c:	mul	r0, sl, r9
   1a5a0:	lsr	r3, r7, #16
   1a5a4:	orr	r1, r3, r1, lsl #16
   1a5a8:	cmp	r0, r1
   1a5ac:	bls	1a5cc <fts_children@@Base+0x1730>
   1a5b0:	adds	r1, r1, r4
   1a5b4:	sub	r2, r9, #1
   1a5b8:	bcs	1a800 <fts_children@@Base+0x1964>
   1a5bc:	cmp	r0, r1
   1a5c0:	subhi	r9, r9, #2
   1a5c4:	addhi	r1, r1, r4
   1a5c8:	bls	1a800 <fts_children@@Base+0x1964>
   1a5cc:	rsb	fp, r0, r1
   1a5d0:	mov	r1, r8
   1a5d4:	uxth	r7, r7
   1a5d8:	mov	r0, fp
   1a5dc:	bl	19cb4 <fts_children@@Base+0xe18>
   1a5e0:	mov	r1, r8
   1a5e4:	mov	r5, r0
   1a5e8:	mov	r0, fp
   1a5ec:	bl	19ea0 <fts_children@@Base+0x1004>
   1a5f0:	mul	sl, sl, r5
   1a5f4:	orr	r1, r7, r1, lsl #16
   1a5f8:	cmp	sl, r1
   1a5fc:	bls	1a618 <fts_children@@Base+0x177c>
   1a600:	adds	r4, r1, r4
   1a604:	sub	r3, r5, #1
   1a608:	bcs	1a808 <fts_children@@Base+0x196c>
   1a60c:	cmp	sl, r4
   1a610:	subhi	r5, r5, #2
   1a614:	bls	1a808 <fts_children@@Base+0x196c>
   1a618:	orr	r0, r5, r9, lsl #16
   1a61c:	mov	r1, r6
   1a620:	add	sp, sp, #12
   1a624:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a628:	rsb	r1, r7, #32
   1a62c:	lsl	r0, r2, r7
   1a630:	lsr	r2, r2, r1
   1a634:	lsr	fp, r5, r1
   1a638:	orr	r8, r2, r3, lsl r7
   1a63c:	lsr	r1, r6, r1
   1a640:	str	r0, [sp, #4]
   1a644:	orr	r5, r1, r5, lsl r7
   1a648:	lsr	r9, r8, #16
   1a64c:	mov	r0, fp
   1a650:	uxth	sl, r8
   1a654:	mov	r1, r9
   1a658:	bl	19cb4 <fts_children@@Base+0xe18>
   1a65c:	mov	r1, r9
   1a660:	mov	r4, r0
   1a664:	mov	r0, fp
   1a668:	bl	19ea0 <fts_children@@Base+0x1004>
   1a66c:	mul	r0, sl, r4
   1a670:	lsr	ip, r5, #16
   1a674:	orr	r1, ip, r1, lsl #16
   1a678:	cmp	r0, r1
   1a67c:	bls	1a690 <fts_children@@Base+0x17f4>
   1a680:	adds	r1, r1, r8
   1a684:	sub	r2, r4, #1
   1a688:	bcc	1a824 <fts_children@@Base+0x1988>
   1a68c:	mov	r4, r2
   1a690:	rsb	ip, r0, r1
   1a694:	mov	r1, r9
   1a698:	str	ip, [sp]
   1a69c:	uxth	r5, r5
   1a6a0:	mov	r0, ip
   1a6a4:	bl	19cb4 <fts_children@@Base+0xe18>
   1a6a8:	ldr	ip, [sp]
   1a6ac:	mov	r1, r9
   1a6b0:	mov	fp, r0
   1a6b4:	mov	r0, ip
   1a6b8:	bl	19ea0 <fts_children@@Base+0x1004>
   1a6bc:	mul	sl, sl, fp
   1a6c0:	orr	r1, r5, r1, lsl #16
   1a6c4:	cmp	sl, r1
   1a6c8:	bls	1a6dc <fts_children@@Base+0x1840>
   1a6cc:	adds	r1, r1, r8
   1a6d0:	sub	r2, fp, #1
   1a6d4:	bcc	1a810 <fts_children@@Base+0x1974>
   1a6d8:	mov	fp, r2
   1a6dc:	ldr	r3, [sp, #4]
   1a6e0:	orr	r0, fp, r4, lsl #16
   1a6e4:	rsb	sl, sl, r1
   1a6e8:	umull	r4, r5, r0, r3
   1a6ec:	cmp	sl, r5
   1a6f0:	bcc	1a710 <fts_children@@Base+0x1874>
   1a6f4:	movne	r3, #0
   1a6f8:	moveq	r3, #1
   1a6fc:	cmp	r4, r6, lsl r7
   1a700:	movls	r6, #0
   1a704:	andhi	r6, r3, #1
   1a708:	cmp	r6, #0
   1a70c:	beq	1a504 <fts_children@@Base+0x1668>
   1a710:	mov	r6, #0
   1a714:	sub	r0, r0, #1
   1a718:	mov	r1, r6
   1a71c:	add	sp, sp, #12
   1a720:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a724:	lsl	r4, r4, r3
   1a728:	rsb	r9, r3, #32
   1a72c:	lsr	r2, r5, r9
   1a730:	lsr	r9, r6, r9
   1a734:	lsr	r8, r4, #16
   1a738:	orr	r9, r9, r5, lsl r3
   1a73c:	mov	r0, r2
   1a740:	lsl	r7, r6, r3
   1a744:	mov	r1, r8
   1a748:	str	r2, [sp]
   1a74c:	bl	19cb4 <fts_children@@Base+0xe18>
   1a750:	ldr	r2, [sp]
   1a754:	mov	r1, r8
   1a758:	uxth	sl, r4
   1a75c:	mov	fp, r0
   1a760:	mov	r0, r2
   1a764:	bl	19ea0 <fts_children@@Base+0x1004>
   1a768:	mul	r0, sl, fp
   1a76c:	lsr	r3, r9, #16
   1a770:	orr	r1, r3, r1, lsl #16
   1a774:	cmp	r0, r1
   1a778:	bls	1a798 <fts_children@@Base+0x18fc>
   1a77c:	adds	r1, r1, r4
   1a780:	sub	r3, fp, #1
   1a784:	bcs	1a838 <fts_children@@Base+0x199c>
   1a788:	cmp	r0, r1
   1a78c:	subhi	fp, fp, #2
   1a790:	addhi	r1, r1, r4
   1a794:	bls	1a838 <fts_children@@Base+0x199c>
   1a798:	rsb	r5, r0, r1
   1a79c:	mov	r1, r8
   1a7a0:	uxth	r9, r9
   1a7a4:	mov	r0, r5
   1a7a8:	bl	19cb4 <fts_children@@Base+0xe18>
   1a7ac:	mov	r1, r8
   1a7b0:	mov	r6, r0
   1a7b4:	mov	r0, r5
   1a7b8:	bl	19ea0 <fts_children@@Base+0x1004>
   1a7bc:	mul	r5, sl, r6
   1a7c0:	orr	r1, r9, r1, lsl #16
   1a7c4:	cmp	r5, r1
   1a7c8:	bls	1a7ec <fts_children@@Base+0x1950>
   1a7cc:	adds	r1, r1, r4
   1a7d0:	sub	r3, r6, #1
   1a7d4:	bcs	1a7e8 <fts_children@@Base+0x194c>
   1a7d8:	cmp	r5, r1
   1a7dc:	subhi	r6, r6, #2
   1a7e0:	addhi	r1, r1, r4
   1a7e4:	bhi	1a7ec <fts_children@@Base+0x1950>
   1a7e8:	mov	r6, r3
   1a7ec:	rsb	r5, r5, r1
   1a7f0:	orr	r6, r6, fp, lsl #16
   1a7f4:	b	1a580 <fts_children@@Base+0x16e4>
   1a7f8:	mov	r6, r3
   1a7fc:	b	1a4fc <fts_children@@Base+0x1660>
   1a800:	mov	r9, r2
   1a804:	b	1a5cc <fts_children@@Base+0x1730>
   1a808:	mov	r5, r3
   1a80c:	b	1a618 <fts_children@@Base+0x177c>
   1a810:	cmp	sl, r1
   1a814:	subhi	fp, fp, #2
   1a818:	addhi	r1, r1, r8
   1a81c:	bhi	1a6dc <fts_children@@Base+0x1840>
   1a820:	b	1a6d8 <fts_children@@Base+0x183c>
   1a824:	cmp	r0, r1
   1a828:	subhi	r4, r4, #2
   1a82c:	addhi	r1, r1, r8
   1a830:	bhi	1a690 <fts_children@@Base+0x17f4>
   1a834:	b	1a68c <fts_children@@Base+0x17f0>
   1a838:	mov	fp, r3
   1a83c:	b	1a798 <fts_children@@Base+0x18fc>
   1a840:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a844:	mov	r7, r0
   1a848:	ldr	r6, [pc, #76]	; 1a89c <fts_children@@Base+0x1a00>
   1a84c:	mov	r8, r1
   1a850:	ldr	r5, [pc, #72]	; 1a8a0 <fts_children@@Base+0x1a04>
   1a854:	mov	r9, r2
   1a858:	add	r6, pc, r6
   1a85c:	bl	117b8 <_init@@Base>
   1a860:	add	r5, pc, r5
   1a864:	rsb	r6, r5, r6
   1a868:	asrs	r6, r6, #2
   1a86c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a870:	sub	r5, r5, #4
   1a874:	mov	r4, #0
   1a878:	add	r4, r4, #1
   1a87c:	ldr	r3, [r5, #4]!
   1a880:	mov	r0, r7
   1a884:	mov	r1, r8
   1a888:	mov	r2, r9
   1a88c:	blx	r3
   1a890:	cmp	r4, r6
   1a894:	bne	1a878 <fts_children@@Base+0x19dc>
   1a898:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a89c:	andeq	r1, r1, r4, lsr #12
   1a8a0:	andeq	r1, r1, r8, lsl r6
   1a8a4:	bx	lr
   1a8a8:	ldr	r3, [pc, #28]	; 1a8cc <fts_children@@Base+0x1a30>
   1a8ac:	mov	r1, #0
   1a8b0:	ldr	r2, [pc, #24]	; 1a8d0 <fts_children@@Base+0x1a34>
   1a8b4:	add	r3, pc, r3
   1a8b8:	ldr	r3, [r3, r2]
   1a8bc:	cmp	r3, #0
   1a8c0:	ldrne	r2, [r3]
   1a8c4:	moveq	r2, r3
   1a8c8:	b	11a78 <__cxa_atexit@plt>
   1a8cc:	andeq	r1, r1, r4, asr #14
   1a8d0:	muleq	r0, ip, r1

Disassembly of section .fini:

0001a8d4 <_fini@@Base>:
   1a8d4:	push	{r3, lr}
   1a8d8:	pop	{r3, pc}
