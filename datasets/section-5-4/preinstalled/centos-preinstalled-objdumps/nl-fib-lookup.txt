
centos-preinstalled/nl-fib-lookup:     file format elf32-littlearm


Disassembly of section .init:

00010964 <.init>:
   10964:	push	{r3, lr}
   10968:	bl	10e00 <exit@plt+0x374>
   1096c:	pop	{r3, pc}

Disassembly of section .plt:

00010970 <abort@plt-0x14>:
   10970:	push	{lr}		; (str lr, [sp, #-4]!)
   10974:	ldr	lr, [pc, #4]	; 10980 <abort@plt-0x4>
   10978:	add	lr, pc, lr
   1097c:	ldr	pc, [lr, #8]!
   10980:	andeq	r1, r1, r0, lsl #13

00010984 <abort@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #69632	; 0x11000
   1098c:	ldr	pc, [ip, #1664]!	; 0x680

00010990 <nl_cli_fatal@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #69632	; 0x11000
   10998:	ldr	pc, [ip, #1656]!	; 0x678

0001099c <__libc_start_main@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #69632	; 0x11000
   109a4:	ldr	pc, [ip, #1648]!	; 0x670

000109a8 <flnl_result_alloc_cache@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #69632	; 0x11000
   109b0:	ldr	pc, [ip, #1640]!	; 0x668

000109b4 <flnl_request_set_fwmark@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #69632	; 0x11000
   109bc:	ldr	pc, [ip, #1632]!	; 0x660

000109c0 <nl_addr_parse@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #69632	; 0x11000
   109c8:	ldr	pc, [ip, #1624]!	; 0x658

000109cc <__gmon_start__@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #69632	; 0x11000
   109d4:	ldr	pc, [ip, #1616]!	; 0x650

000109d8 <nl_cli_alloc_socket@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #69632	; 0x11000
   109e0:	ldr	pc, [ip, #1608]!	; 0x648

000109e4 <nl_cache_dump@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #69632	; 0x11000
   109ec:	ldr	pc, [ip, #1600]!	; 0x640

000109f0 <getopt_long@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #69632	; 0x11000
   109f8:	ldr	pc, [ip, #1592]!	; 0x638

000109fc <flnl_request_set_tos@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #69632	; 0x11000
   10a04:	ldr	pc, [ip, #1584]!	; 0x630

00010a08 <flnl_request_set_scope@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #69632	; 0x11000
   10a10:	ldr	pc, [ip, #1576]!	; 0x628

00010a14 <strtoul@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #69632	; 0x11000
   10a1c:	ldr	pc, [ip, #1568]!	; 0x620

00010a20 <flnl_request_set_addr@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #69632	; 0x11000
   10a28:	ldr	pc, [ip, #1560]!	; 0x618

00010a2c <flnl_request_alloc@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #69632	; 0x11000
   10a34:	ldr	pc, [ip, #1552]!	; 0x610

00010a38 <nl_addr_put@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #69632	; 0x11000
   10a40:	ldr	pc, [ip, #1544]!	; 0x608

00010a44 <__stack_chk_fail@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1536]!	; 0x600

00010a50 <puts@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a5c <nl_geterror@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a68 <flnl_request_set_table@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a74 <nl_cli_connect@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a80 <flnl_lookup@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a8c <exit@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1488]!	; 0x5d0

Disassembly of section .text:

00010a98 <.text>:
   10a98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a9c:	movw	r2, #8412	; 0x20dc
   10aa0:	movw	sl, #8408	; 0x20d8
   10aa4:	movt	r2, #2
   10aa8:	movt	sl, #2
   10aac:	sub	sp, sp, #84	; 0x54
   10ab0:	ldr	r2, [r2]
   10ab4:	mov	r3, #0
   10ab8:	ldr	ip, [sl]
   10abc:	movw	r4, #8416	; 0x20e0
   10ac0:	add	r7, sp, #20
   10ac4:	movt	r4, #2
   10ac8:	mov	r5, r3
   10acc:	mov	r8, r0
   10ad0:	mov	r6, r1
   10ad4:	mov	fp, r3
   10ad8:	mov	r9, r3
   10adc:	str	r2, [sp, #52]	; 0x34
   10ae0:	str	r3, [sp, #12]
   10ae4:	mov	r2, #1
   10ae8:	str	r3, [sp, #8]
   10aec:	str	ip, [sp, #76]	; 0x4c
   10af0:	str	r3, [sp, #28]
   10af4:	str	r3, [sp, #32]
   10af8:	str	r3, [sp, #36]	; 0x24
   10afc:	str	r3, [sp, #40]	; 0x28
   10b00:	str	r3, [sp, #44]	; 0x2c
   10b04:	str	r3, [sp, #48]	; 0x30
   10b08:	str	r3, [sp, #56]	; 0x38
   10b0c:	str	r3, [sp, #60]	; 0x3c
   10b10:	str	r3, [sp, #64]	; 0x40
   10b14:	str	r3, [sp, #68]	; 0x44
   10b18:	str	r3, [sp, #72]	; 0x48
   10b1c:	str	r2, [sp, #24]
   10b20:	str	r7, [sp]
   10b24:	movw	r2, #4168	; 0x1048
   10b28:	movw	r3, #8304	; 0x2070
   10b2c:	movt	r2, #1
   10b30:	movt	r3, #2
   10b34:	mov	r0, r8
   10b38:	mov	r1, r6
   10b3c:	str	r9, [sp, #20]
   10b40:	bl	109f0 <getopt_long@plt>
   10b44:	cmn	r0, #1
   10b48:	beq	10c44 <exit@plt+0x1b8>
   10b4c:	sub	r0, r0, #84	; 0x54
   10b50:	cmp	r0, #32
   10b54:	ldrls	pc, [pc, r0, lsl #2]
   10b58:	b	10c40 <exit@plt+0x1b4>
   10b5c:	andeq	r0, r1, r8, lsr #24
   10b60:	andeq	r0, r1, r0, asr #24
   10b64:	andeq	r0, r1, r0, asr #24
   10b68:	andeq	r0, r1, r0, asr #24
   10b6c:	andeq	r0, r1, r0, asr #24
   10b70:	andeq	r0, r1, r0, asr #24
   10b74:	andeq	r0, r1, r0, asr #24
   10b78:	andeq	r0, r1, r0, asr #24
   10b7c:	andeq	r0, r1, r0, asr #24
   10b80:	andeq	r0, r1, r0, asr #24
   10b84:	andeq	r0, r1, r0, asr #24
   10b88:	andeq	r0, r1, r0, asr #24
   10b8c:	andeq	r0, r1, r0, asr #24
   10b90:	andeq	r0, r1, r0, asr #24
   10b94:	andeq	r0, r1, r0, asr #24
   10b98:	andeq	r0, r1, r0, asr #24
   10b9c:	andeq	r0, r1, r0, asr #24
   10ba0:	andeq	r0, r1, r0, asr #24
   10ba4:	andeq	r0, r1, r0, lsl ip
   10ba8:	andeq	r0, r1, r0, asr #24
   10bac:	andeq	r0, r1, r0, asr #24
   10bb0:	andeq	r0, r1, r0, asr #24
   10bb4:	andeq	r0, r1, r0, asr #24
   10bb8:	andeq	r0, r1, r0, asr #24
   10bbc:	andeq	r0, r1, r0, asr #24
   10bc0:	andeq	r0, r1, r0, asr #24
   10bc4:	andeq	r0, r1, r0, asr #24
   10bc8:	andeq	r0, r1, r0, asr #24
   10bcc:	andeq	r0, r1, r0, asr #24
   10bd0:	andeq	r0, r1, r0, asr #24
   10bd4:	andeq	r0, r1, r0, asr #24
   10bd8:	strdeq	r0, [r1], -r8
   10bdc:	andeq	r0, r1, r0, ror #23
   10be0:	mov	r1, #0
   10be4:	ldr	r0, [r4]
   10be8:	mov	r2, r1
   10bec:	bl	10a14 <strtoul@plt>
   10bf0:	mov	fp, r0
   10bf4:	b	10b20 <exit@plt+0x94>
   10bf8:	mov	r1, #0
   10bfc:	ldr	r0, [r4]
   10c00:	mov	r2, r1
   10c04:	bl	10a14 <strtoul@plt>
   10c08:	str	r0, [sp, #8]
   10c0c:	b	10b20 <exit@plt+0x94>
   10c10:	mov	r1, #0
   10c14:	ldr	r0, [r4]
   10c18:	mov	r2, r1
   10c1c:	bl	10a14 <strtoul@plt>
   10c20:	mov	r5, r0
   10c24:	b	10b20 <exit@plt+0x94>
   10c28:	mov	r1, #0
   10c2c:	ldr	r0, [r4]
   10c30:	mov	r2, r1
   10c34:	bl	10a14 <strtoul@plt>
   10c38:	str	r0, [sp, #12]
   10c3c:	b	10b20 <exit@plt+0x94>
   10c40:	bl	10ef8 <exit@plt+0x46c>
   10c44:	movw	r9, #8400	; 0x20d0
   10c48:	movt	r9, #2
   10c4c:	ldr	r3, [r9]
   10c50:	cmp	r8, r3
   10c54:	ble	10c40 <exit@plt+0x1b4>
   10c58:	bl	109d8 <nl_cli_alloc_socket@plt>
   10c5c:	ldr	r3, [r9]
   10c60:	mov	r2, r7
   10c64:	mov	r1, #2
   10c68:	mov	r4, r0
   10c6c:	ldr	r0, [r6, r3, lsl #2]
   10c70:	bl	109c0 <nl_addr_parse@plt>
   10c74:	subs	r7, r0, #0
   10c78:	blt	10d70 <exit@plt+0x2e4>
   10c7c:	bl	109a8 <flnl_result_alloc_cache@plt>
   10c80:	subs	r7, r0, #0
   10c84:	beq	10dac <exit@plt+0x320>
   10c88:	bl	10a2c <flnl_request_alloc@plt>
   10c8c:	subs	r6, r0, #0
   10c90:	beq	10d98 <exit@plt+0x30c>
   10c94:	mov	r1, fp
   10c98:	mov	r0, r6
   10c9c:	bl	10a68 <flnl_request_set_table@plt>
   10ca0:	mov	r2, r5
   10ca4:	mov	r3, #0
   10ca8:	mov	r0, r6
   10cac:	bl	109b4 <flnl_request_set_fwmark@plt>
   10cb0:	mov	r0, r6
   10cb4:	ldr	r1, [sp, #8]
   10cb8:	bl	10a08 <flnl_request_set_scope@plt>
   10cbc:	mov	r0, r6
   10cc0:	ldr	r1, [sp, #12]
   10cc4:	bl	109fc <flnl_request_set_tos@plt>
   10cc8:	ldr	r1, [sp, #20]
   10ccc:	mov	r0, r6
   10cd0:	bl	10a20 <flnl_request_set_addr@plt>
   10cd4:	mov	r5, r0
   10cd8:	ldr	r0, [sp, #20]
   10cdc:	bl	10a38 <nl_addr_put@plt>
   10ce0:	cmp	r5, #0
   10ce4:	blt	10d50 <exit@plt+0x2c4>
   10ce8:	mov	r0, r4
   10cec:	mov	r1, #10
   10cf0:	bl	10a74 <nl_cli_connect@plt>
   10cf4:	mov	r0, r4
   10cf8:	mov	r1, r6
   10cfc:	mov	r2, r7
   10d00:	bl	10a80 <flnl_lookup@plt>
   10d04:	subs	r4, r0, #0
   10d08:	blt	10d34 <exit@plt+0x2a8>
   10d0c:	mov	r0, r7
   10d10:	add	r1, sp, #24
   10d14:	bl	109e4 <nl_cache_dump@plt>
   10d18:	ldr	r2, [sp, #76]	; 0x4c
   10d1c:	ldr	r3, [sl]
   10d20:	mov	r0, #0
   10d24:	cmp	r2, r3
   10d28:	bne	10dc0 <exit@plt+0x334>
   10d2c:	add	sp, sp, #84	; 0x54
   10d30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d34:	bl	10a5c <nl_geterror@plt>
   10d38:	movw	r1, #4300	; 0x10cc
   10d3c:	movt	r1, #1
   10d40:	mov	r2, r0
   10d44:	mov	r0, r4
   10d48:	bl	10990 <nl_cli_fatal@plt>
   10d4c:	b	10d0c <exit@plt+0x280>
   10d50:	mov	r0, r5
   10d54:	bl	10a5c <nl_geterror@plt>
   10d58:	movw	r1, #4272	; 0x10b0
   10d5c:	movt	r1, #1
   10d60:	mov	r2, r0
   10d64:	mov	r0, r5
   10d68:	bl	10990 <nl_cli_fatal@plt>
   10d6c:	b	10ce8 <exit@plt+0x25c>
   10d70:	ldr	r3, [r9]
   10d74:	ldr	r6, [r6, r3, lsl #2]
   10d78:	bl	10a5c <nl_geterror@plt>
   10d7c:	movw	r1, #4180	; 0x1054
   10d80:	movt	r1, #1
   10d84:	mov	r2, r6
   10d88:	mov	r3, r0
   10d8c:	mov	r0, r7
   10d90:	bl	10990 <nl_cli_fatal@plt>
   10d94:	b	10c7c <exit@plt+0x1f0>
   10d98:	movw	r1, #4244	; 0x1094
   10d9c:	mov	r0, #12
   10da0:	movt	r1, #1
   10da4:	bl	10990 <nl_cli_fatal@plt>
   10da8:	b	10c94 <exit@plt+0x208>
   10dac:	movw	r1, #4216	; 0x1078
   10db0:	mov	r0, #12
   10db4:	movt	r1, #1
   10db8:	bl	10990 <nl_cli_fatal@plt>
   10dbc:	b	10c88 <exit@plt+0x1fc>
   10dc0:	bl	10a44 <__stack_chk_fail@plt>
   10dc4:	mov	fp, #0
   10dc8:	mov	lr, #0
   10dcc:	pop	{r1}		; (ldr r1, [sp], #4)
   10dd0:	mov	r2, sp
   10dd4:	push	{r2}		; (str r2, [sp, #-4]!)
   10dd8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ddc:	ldr	ip, [pc, #16]	; 10df4 <exit@plt+0x368>
   10de0:	push	{ip}		; (str ip, [sp, #-4]!)
   10de4:	ldr	r0, [pc, #12]	; 10df8 <exit@plt+0x36c>
   10de8:	ldr	r3, [pc, #12]	; 10dfc <exit@plt+0x370>
   10dec:	bl	1099c <__libc_start_main@plt>
   10df0:	bl	10984 <abort@plt>
   10df4:	andeq	r0, r1, r4, ror pc
   10df8:	muleq	r1, r8, sl
   10dfc:	andeq	r0, r1, r0, lsl pc
   10e00:	ldr	r3, [pc, #20]	; 10e1c <exit@plt+0x390>
   10e04:	ldr	r2, [pc, #20]	; 10e20 <exit@plt+0x394>
   10e08:	add	r3, pc, r3
   10e0c:	ldr	r2, [r3, r2]
   10e10:	cmp	r2, #0
   10e14:	bxeq	lr
   10e18:	b	109cc <__gmon_start__@plt>
   10e1c:	strdeq	r1, [r1], -r0
   10e20:	andeq	r0, r0, r8, rrx
   10e24:	push	{r3, lr}
   10e28:	movw	r0, #8400	; 0x20d0
   10e2c:	ldr	r3, [pc, #36]	; 10e58 <exit@plt+0x3cc>
   10e30:	movt	r0, #2
   10e34:	rsb	r3, r0, r3
   10e38:	cmp	r3, #6
   10e3c:	popls	{r3, pc}
   10e40:	movw	r3, #0
   10e44:	movt	r3, #0
   10e48:	cmp	r3, #0
   10e4c:	popeq	{r3, pc}
   10e50:	blx	r3
   10e54:	pop	{r3, pc}
   10e58:	ldrdeq	r2, [r2], -r3
   10e5c:	push	{r3, lr}
   10e60:	movw	r0, #8400	; 0x20d0
   10e64:	movw	r3, #8400	; 0x20d0
   10e68:	movt	r0, #2
   10e6c:	movt	r3, #2
   10e70:	rsb	r3, r0, r3
   10e74:	asr	r3, r3, #2
   10e78:	add	r3, r3, r3, lsr #31
   10e7c:	asrs	r1, r3, #1
   10e80:	popeq	{r3, pc}
   10e84:	movw	r2, #0
   10e88:	movt	r2, #0
   10e8c:	cmp	r2, #0
   10e90:	popeq	{r3, pc}
   10e94:	blx	r2
   10e98:	pop	{r3, pc}
   10e9c:	push	{r4, lr}
   10ea0:	movw	r4, #8420	; 0x20e4
   10ea4:	movt	r4, #2
   10ea8:	ldrb	r3, [r4]
   10eac:	cmp	r3, #0
   10eb0:	popne	{r4, pc}
   10eb4:	bl	10e24 <exit@plt+0x398>
   10eb8:	mov	r3, #1
   10ebc:	strb	r3, [r4]
   10ec0:	pop	{r4, pc}
   10ec4:	movw	r0, #7868	; 0x1ebc
   10ec8:	movt	r0, #2
   10ecc:	push	{r3, lr}
   10ed0:	ldr	r3, [r0]
   10ed4:	cmp	r3, #0
   10ed8:	beq	10ef0 <exit@plt+0x464>
   10edc:	movw	r3, #0
   10ee0:	movt	r3, #0
   10ee4:	cmp	r3, #0
   10ee8:	beq	10ef0 <exit@plt+0x464>
   10eec:	blx	r3
   10ef0:	pop	{r3, lr}
   10ef4:	b	10e5c <exit@plt+0x3d0>
   10ef8:	push	{r3, lr}
   10efc:	movw	r0, #3976	; 0xf88
   10f00:	movt	r0, #1
   10f04:	bl	10a50 <puts@plt>
   10f08:	mov	r0, #1
   10f0c:	bl	10a8c <exit@plt>
   10f10:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10f14:	mov	r7, r0
   10f18:	ldr	r6, [pc, #76]	; 10f6c <exit@plt+0x4e0>
   10f1c:	mov	r8, r1
   10f20:	ldr	r5, [pc, #72]	; 10f70 <exit@plt+0x4e4>
   10f24:	mov	r9, r2
   10f28:	add	r6, pc, r6
   10f2c:	bl	10964 <abort@plt-0x20>
   10f30:	add	r5, pc, r5
   10f34:	rsb	r6, r5, r6
   10f38:	asrs	r6, r6, #2
   10f3c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f40:	sub	r5, r5, #4
   10f44:	mov	r4, #0
   10f48:	add	r4, r4, #1
   10f4c:	ldr	r3, [r5, #4]!
   10f50:	mov	r0, r7
   10f54:	mov	r1, r8
   10f58:	mov	r2, r9
   10f5c:	blx	r3
   10f60:	cmp	r4, r6
   10f64:	bne	10f48 <exit@plt+0x4bc>
   10f68:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10f6c:	andeq	r0, r1, r8, lsl #31
   10f70:	andeq	r0, r1, ip, ror pc
   10f74:	bx	lr

Disassembly of section .fini:

00010f78 <.fini>:
   10f78:	push	{r3, lr}
   10f7c:	pop	{r3, pc}
