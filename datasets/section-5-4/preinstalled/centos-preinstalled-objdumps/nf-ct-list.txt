
centos-preinstalled/nf-ct-list:     file format elf32-littlearm


Disassembly of section .init:

00010a24 <.init>:
   10a24:	push	{r3, lr}
   10a28:	bl	1119c <nl_cli_ct_parse_use@plt+0x620>
   10a2c:	pop	{r3, pc}

Disassembly of section .plt:

00010a30 <abort@plt-0x14>:
   10a30:	push	{lr}		; (str lr, [sp, #-4]!)
   10a34:	ldr	lr, [pc, #4]	; 10a40 <abort@plt-0x4>
   10a38:	add	lr, pc, lr
   10a3c:	ldr	pc, [lr, #8]!
   10a40:	andeq	r1, r1, r0, asr #11

00010a44 <abort@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a50 <nl_cli_ct_parse_status@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a5c <nl_cache_dump_filter@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a68 <nl_cli_ct_parse_mark@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a74 <__libc_start_main@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a80 <nl_cli_ct_alloc@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1432]!	; 0x598

00010a8c <__gmon_start__@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1424]!	; 0x590

00010a98 <nl_cli_ct_parse_src_port@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1416]!	; 0x588

00010aa4 <nl_cli_print_version@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1408]!	; 0x580

00010ab0 <nl_cli_alloc_socket@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1400]!	; 0x578

00010abc <nfnl_ct_set_family@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1392]!	; 0x570

00010ac8 <nl_cli_ct_parse_timeout@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1384]!	; 0x568

00010ad4 <nl_cli_ct_parse_protocol@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1376]!	; 0x560

00010ae0 <nl_cli_ct_alloc_cache@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1368]!	; 0x558

00010aec <nl_cli_ct_parse_tcp_state@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1360]!	; 0x550

00010af8 <getopt_long@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1352]!	; 0x548

00010b04 <nl_cli_ct_parse_dst@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1344]!	; 0x540

00010b10 <nl_cli_parse_dumptype@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1336]!	; 0x538

00010b1c <nl_cli_ct_parse_family@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1328]!	; 0x530

00010b28 <nl_cli_ct_parse_id@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1320]!	; 0x528

00010b34 <__stack_chk_fail@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1312]!	; 0x520

00010b40 <puts@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1304]!	; 0x518

00010b4c <nl_cli_ct_parse_src@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1296]!	; 0x510

00010b58 <nl_cli_ct_parse_dst_port@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1288]!	; 0x508

00010b64 <nl_cli_connect@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1280]!	; 0x500

00010b70 <exit@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b7c <nl_cli_ct_parse_use@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1264]!	; 0x4f0

Disassembly of section .text:

00010b88 <.text>:
   10b88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b8c:	movw	r2, #8628	; 0x21b4
   10b90:	movw	sl, #8624	; 0x21b0
   10b94:	movt	r2, #2
   10b98:	movt	sl, #2
   10b9c:	sub	sp, sp, #72	; 0x48
   10ba0:	ldr	r2, [r2]
   10ba4:	mov	r3, #0
   10ba8:	ldr	ip, [sl]
   10bac:	mov	r6, r0
   10bb0:	mov	r5, r1
   10bb4:	mov	r4, r3
   10bb8:	str	r2, [sp, #44]	; 0x2c
   10bbc:	movw	r8, #8632	; 0x21b8
   10bc0:	str	ip, [sp, #68]	; 0x44
   10bc4:	movt	r8, #2
   10bc8:	str	r3, [sp, #16]
   10bcc:	add	r7, sp, #12
   10bd0:	str	r3, [sp, #20]
   10bd4:	str	r3, [sp, #24]
   10bd8:	str	r3, [sp, #28]
   10bdc:	str	r3, [sp, #32]
   10be0:	str	r3, [sp, #36]	; 0x24
   10be4:	str	r3, [sp, #40]	; 0x28
   10be8:	str	r3, [sp, #48]	; 0x30
   10bec:	str	r3, [sp, #52]	; 0x34
   10bf0:	str	r3, [sp, #56]	; 0x38
   10bf4:	str	r3, [sp, #60]	; 0x3c
   10bf8:	str	r3, [sp, #64]	; 0x40
   10bfc:	bl	10a80 <nl_cli_ct_alloc@plt>
   10c00:	mov	r9, r0
   10c04:	str	r7, [sp]
   10c08:	movw	r2, #4876	; 0x130c
   10c0c:	movw	r3, #8320	; 0x2080
   10c10:	movt	r2, #1
   10c14:	movt	r3, #2
   10c18:	mov	r0, r6
   10c1c:	mov	r1, r5
   10c20:	str	r4, [sp, #12]
   10c24:	bl	10af8 <getopt_long@plt>
   10c28:	cmn	r0, #1
   10c2c:	beq	1111c <nl_cli_ct_parse_use@plt+0x5a0>
   10c30:	sub	r3, r0, #52	; 0x34
   10c34:	cmp	r3, #217	; 0xd9
   10c38:	ldrls	pc, [pc, r3, lsl #2]
   10c3c:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   10c40:	andeq	r1, r1, ip, lsl #2
   10c44:	andeq	r0, r1, r4, lsl #24
   10c48:	strdeq	r1, [r1], -ip
   10c4c:	andeq	r0, r1, r4, lsl #24
   10c50:	andeq	r0, r1, r4, lsl #24
   10c54:	andeq	r0, r1, r4, lsl #24
   10c58:	andeq	r0, r1, r4, lsl #24
   10c5c:	andeq	r0, r1, r4, lsl #24
   10c60:	andeq	r0, r1, r4, lsl #24
   10c64:	andeq	r0, r1, r4, lsl #24
   10c68:	andeq	r0, r1, r4, lsl #24
   10c6c:	strdeq	r1, [r1], -r4
   10c70:	andeq	r0, r1, r4, lsl #24
   10c74:	andeq	r0, r1, r4, lsl #24
   10c78:	andeq	r0, r1, r4, lsl #24
   10c7c:	andeq	r0, r1, r4, lsl #24
   10c80:	andeq	r0, r1, r4, lsl #24
   10c84:	andeq	r0, r1, r4, lsl #24
   10c88:	andeq	r1, r1, r4, ror #1
   10c8c:	andeq	r0, r1, r4, lsl #24
   10c90:	andeq	r0, r1, r4, lsl #24
   10c94:	andeq	r0, r1, r4, lsl #24
   10c98:	andeq	r0, r1, r4, lsl #24
   10c9c:	andeq	r0, r1, r4, lsl #24
   10ca0:	andeq	r0, r1, r4, lsl #24
   10ca4:	andeq	r0, r1, r4, lsl #24
   10ca8:	andeq	r0, r1, r4, lsl #24
   10cac:	andeq	r0, r1, r4, lsl #24
   10cb0:	andeq	r0, r1, r4, lsl #24
   10cb4:	andeq	r0, r1, r4, lsl #24
   10cb8:	andeq	r0, r1, r4, lsl #24
   10cbc:	andeq	r0, r1, r4, lsl #24
   10cc0:	andeq	r0, r1, r4, lsl #24
   10cc4:	andeq	r0, r1, r4, lsl #24
   10cc8:	andeq	r0, r1, r4, lsl #24
   10ccc:	andeq	r0, r1, r4, lsl #24
   10cd0:	andeq	r0, r1, r4, lsl #24
   10cd4:	andeq	r0, r1, r4, lsl #24
   10cd8:	andeq	r0, r1, r4, lsl #24
   10cdc:	andeq	r0, r1, r4, lsl #24
   10ce0:	andeq	r0, r1, r4, lsl #24
   10ce4:	andeq	r0, r1, r4, lsl #24
   10ce8:	andeq	r0, r1, r4, lsl #24
   10cec:	andeq	r0, r1, r4, lsl #24
   10cf0:	andeq	r0, r1, r4, lsl #24
   10cf4:	andeq	r0, r1, r4, lsl #24
   10cf8:	andeq	r0, r1, r4, lsl #24
   10cfc:	andeq	r0, r1, r4, lsl #24
   10d00:	andeq	r0, r1, r4, lsl #24
   10d04:	andeq	r0, r1, r4, lsl #24
   10d08:	ldrdeq	r1, [r1], -r4
   10d0c:	andeq	r0, r1, r4, lsl #24
   10d10:	andeq	r1, r1, r0, asr #1
   10d14:	strheq	r1, [r1], -r0
   10d18:	andeq	r0, r1, r4, lsl #24
   10d1c:	andeq	r0, r1, r4, lsl #24
   10d20:	andeq	r0, r1, r4, lsl #24
   10d24:	andeq	r0, r1, r4, lsl #24
   10d28:	andeq	r0, r1, r4, lsl #24
   10d2c:	andeq	r0, r1, r4, lsl #24
   10d30:	andeq	r1, r1, r0, lsr #1
   10d34:	andeq	r0, r1, r4, lsl #24
   10d38:	andeq	r0, r1, r4, lsl #24
   10d3c:	andeq	r0, r1, r4, lsl #24
   10d40:	andeq	r0, r1, r4, lsl #24
   10d44:	andeq	r0, r1, r4, lsl #24
   10d48:	muleq	r1, r8, r0
   10d4c:	andeq	r0, r1, r4, lsl #24
   10d50:	andeq	r0, r1, r4, lsl #24
   10d54:	andeq	r0, r1, r4, lsl #24
   10d58:	andeq	r0, r1, r4, lsl #24
   10d5c:	andeq	r0, r1, r4, lsl #24
   10d60:	andeq	r0, r1, r4, lsl #24
   10d64:	andeq	r0, r1, r4, lsl #24
   10d68:	andeq	r0, r1, r4, lsl #24
   10d6c:	andeq	r0, r1, r4, lsl #24
   10d70:	andeq	r0, r1, r4, lsl #24
   10d74:	andeq	r0, r1, r4, lsl #24
   10d78:	andeq	r0, r1, r4, lsl #24
   10d7c:	andeq	r0, r1, r4, lsl #24
   10d80:	andeq	r0, r1, r4, lsl #24
   10d84:	andeq	r0, r1, r4, lsl #24
   10d88:	andeq	r0, r1, r4, lsl #24
   10d8c:	andeq	r0, r1, r4, lsl #24
   10d90:	andeq	r0, r1, r4, lsl #24
   10d94:	andeq	r0, r1, r4, lsl #24
   10d98:	andeq	r0, r1, r4, lsl #24
   10d9c:	andeq	r0, r1, r4, lsl #24
   10da0:	andeq	r0, r1, r4, lsl #24
   10da4:	andeq	r0, r1, r4, lsl #24
   10da8:	andeq	r0, r1, r4, lsl #24
   10dac:	andeq	r0, r1, r4, lsl #24
   10db0:	andeq	r0, r1, r4, lsl #24
   10db4:	andeq	r0, r1, r4, lsl #24
   10db8:	andeq	r0, r1, r4, lsl #24
   10dbc:	andeq	r0, r1, r4, lsl #24
   10dc0:	andeq	r0, r1, r4, lsl #24
   10dc4:	andeq	r0, r1, r4, lsl #24
   10dc8:	andeq	r0, r1, r4, lsl #24
   10dcc:	andeq	r0, r1, r4, lsl #24
   10dd0:	andeq	r0, r1, r4, lsl #24
   10dd4:	andeq	r0, r1, r4, lsl #24
   10dd8:	andeq	r0, r1, r4, lsl #24
   10ddc:	andeq	r0, r1, r4, lsl #24
   10de0:	andeq	r0, r1, r4, lsl #24
   10de4:	andeq	r0, r1, r4, lsl #24
   10de8:	andeq	r0, r1, r4, lsl #24
   10dec:	andeq	r0, r1, r4, lsl #24
   10df0:	andeq	r0, r1, r4, lsl #24
   10df4:	andeq	r0, r1, r4, lsl #24
   10df8:	andeq	r0, r1, r4, lsl #24
   10dfc:	andeq	r0, r1, r4, lsl #24
   10e00:	andeq	r0, r1, r4, lsl #24
   10e04:	andeq	r0, r1, r4, lsl #24
   10e08:	andeq	r0, r1, r4, lsl #24
   10e0c:	andeq	r0, r1, r4, lsl #24
   10e10:	andeq	r0, r1, r4, lsl #24
   10e14:	andeq	r0, r1, r4, lsl #24
   10e18:	andeq	r0, r1, r4, lsl #24
   10e1c:	andeq	r0, r1, r4, lsl #24
   10e20:	andeq	r0, r1, r4, lsl #24
   10e24:	andeq	r0, r1, r4, lsl #24
   10e28:	andeq	r0, r1, r4, lsl #24
   10e2c:	andeq	r0, r1, r4, lsl #24
   10e30:	andeq	r0, r1, r4, lsl #24
   10e34:	andeq	r0, r1, r4, lsl #24
   10e38:	andeq	r0, r1, r4, lsl #24
   10e3c:	andeq	r0, r1, r4, lsl #24
   10e40:	andeq	r0, r1, r4, lsl #24
   10e44:	andeq	r0, r1, r4, lsl #24
   10e48:	andeq	r0, r1, r4, lsl #24
   10e4c:	andeq	r0, r1, r4, lsl #24
   10e50:	andeq	r0, r1, r4, lsl #24
   10e54:	andeq	r0, r1, r4, lsl #24
   10e58:	andeq	r0, r1, r4, lsl #24
   10e5c:	andeq	r0, r1, r4, lsl #24
   10e60:	andeq	r0, r1, r4, lsl #24
   10e64:	andeq	r0, r1, r4, lsl #24
   10e68:	andeq	r0, r1, r4, lsl #24
   10e6c:	andeq	r0, r1, r4, lsl #24
   10e70:	andeq	r0, r1, r4, lsl #24
   10e74:	andeq	r0, r1, r4, lsl #24
   10e78:	andeq	r0, r1, r4, lsl #24
   10e7c:	andeq	r0, r1, r4, lsl #24
   10e80:	andeq	r0, r1, r4, lsl #24
   10e84:	andeq	r0, r1, r4, lsl #24
   10e88:	andeq	r0, r1, r4, lsl #24
   10e8c:	andeq	r0, r1, r4, lsl #24
   10e90:	andeq	r0, r1, r4, lsl #24
   10e94:	andeq	r0, r1, r4, lsl #24
   10e98:	andeq	r0, r1, r4, lsl #24
   10e9c:	andeq	r0, r1, r4, lsl #24
   10ea0:	andeq	r0, r1, r4, lsl #24
   10ea4:	andeq	r0, r1, r4, lsl #24
   10ea8:	andeq	r0, r1, r4, lsl #24
   10eac:	andeq	r0, r1, r4, lsl #24
   10eb0:	andeq	r0, r1, r4, lsl #24
   10eb4:	andeq	r0, r1, r4, lsl #24
   10eb8:	andeq	r0, r1, r4, lsl #24
   10ebc:	andeq	r0, r1, r4, lsl #24
   10ec0:	andeq	r0, r1, r4, lsl #24
   10ec4:	andeq	r0, r1, r4, lsl #24
   10ec8:	andeq	r0, r1, r4, lsl #24
   10ecc:	andeq	r0, r1, r4, lsl #24
   10ed0:	andeq	r0, r1, r4, lsl #24
   10ed4:	andeq	r0, r1, r4, lsl #24
   10ed8:	andeq	r0, r1, r4, lsl #24
   10edc:	andeq	r0, r1, r4, lsl #24
   10ee0:	andeq	r0, r1, r4, lsl #24
   10ee4:	andeq	r0, r1, r4, lsl #24
   10ee8:	andeq	r0, r1, r4, lsl #24
   10eec:	andeq	r0, r1, r4, lsl #24
   10ef0:	andeq	r0, r1, r4, lsl #24
   10ef4:	andeq	r0, r1, r4, lsl #24
   10ef8:	andeq	r0, r1, r4, lsl #24
   10efc:	andeq	r0, r1, r4, lsl #24
   10f00:	andeq	r0, r1, r4, lsl #24
   10f04:	andeq	r0, r1, r4, lsl #24
   10f08:	andeq	r0, r1, r4, lsl #24
   10f0c:	andeq	r0, r1, r4, lsl #24
   10f10:	andeq	r0, r1, r4, lsl #24
   10f14:	andeq	r0, r1, r4, lsl #24
   10f18:	andeq	r0, r1, r4, lsl #24
   10f1c:	andeq	r0, r1, r4, lsl #24
   10f20:	andeq	r0, r1, r4, lsl #24
   10f24:	andeq	r0, r1, r4, lsl #24
   10f28:	andeq	r0, r1, r4, lsl #24
   10f2c:	andeq	r0, r1, r4, lsl #24
   10f30:	andeq	r0, r1, r4, lsl #24
   10f34:	andeq	r0, r1, r4, lsl #24
   10f38:	andeq	r0, r1, r4, lsl #24
   10f3c:	andeq	r0, r1, r4, lsl #24
   10f40:	andeq	r0, r1, r4, lsl #24
   10f44:	andeq	r0, r1, r4, lsl #24
   10f48:	andeq	r0, r1, r4, lsl #24
   10f4c:	andeq	r0, r1, r4, lsl #24
   10f50:	andeq	r0, r1, r4, lsl #24
   10f54:	andeq	r0, r1, r4, lsl #24
   10f58:	andeq	r0, r1, r4, lsl #24
   10f5c:	andeq	r0, r1, r4, lsl #24
   10f60:	andeq	r0, r1, r4, lsl #24
   10f64:	andeq	r0, r1, r4, lsl #24
   10f68:	andeq	r0, r1, r4, lsl #24
   10f6c:	andeq	r0, r1, r4, lsl #24
   10f70:	andeq	r0, r1, r4, lsl #24
   10f74:	andeq	r1, r1, r8, lsl #1
   10f78:	andeq	r1, r1, r8, ror r0
   10f7c:	andeq	r1, r1, r4, rrx
   10f80:	andeq	r1, r1, r0, asr r0
   10f84:	andeq	r1, r1, ip, lsr r0
   10f88:	andeq	r1, r1, r8, lsr #32
   10f8c:	andeq	r1, r1, r4, lsl r0
   10f90:	andeq	r1, r1, r0
   10f94:	andeq	r0, r1, ip, ror #31
   10f98:	ldrdeq	r0, [r1], -r8
   10f9c:	andeq	r0, r1, r8, asr #31
   10fa0:			; <UNDEFINED> instruction: 0x00010fb8
   10fa4:	andeq	r0, r1, r8, lsr #31
   10fa8:	mov	r0, r9
   10fac:	ldr	r1, [r8]
   10fb0:	bl	10a50 <nl_cli_ct_parse_status@plt>
   10fb4:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   10fb8:	mov	r0, r9
   10fbc:	ldr	r1, [r8]
   10fc0:	bl	10b7c <nl_cli_ct_parse_use@plt>
   10fc4:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   10fc8:	mov	r0, r9
   10fcc:	ldr	r1, [r8]
   10fd0:	bl	10ac8 <nl_cli_ct_parse_timeout@plt>
   10fd4:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   10fd8:	mov	r0, r9
   10fdc:	mov	r1, #1
   10fe0:	ldr	r2, [r8]
   10fe4:	bl	10b58 <nl_cli_ct_parse_dst_port@plt>
   10fe8:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   10fec:	mov	r0, r9
   10ff0:	mov	r1, #1
   10ff4:	ldr	r2, [r8]
   10ff8:	bl	10b04 <nl_cli_ct_parse_dst@plt>
   10ffc:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   11000:	mov	r0, r9
   11004:	mov	r1, #1
   11008:	ldr	r2, [r8]
   1100c:	bl	10a98 <nl_cli_ct_parse_src_port@plt>
   11010:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   11014:	mov	r0, r9
   11018:	mov	r1, #1
   1101c:	ldr	r2, [r8]
   11020:	bl	10b4c <nl_cli_ct_parse_src@plt>
   11024:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   11028:	mov	r0, r9
   1102c:	mov	r1, #0
   11030:	ldr	r2, [r8]
   11034:	bl	10b58 <nl_cli_ct_parse_dst_port@plt>
   11038:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   1103c:	mov	r0, r9
   11040:	mov	r1, #0
   11044:	ldr	r2, [r8]
   11048:	bl	10b04 <nl_cli_ct_parse_dst@plt>
   1104c:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   11050:	mov	r0, r9
   11054:	mov	r1, #0
   11058:	ldr	r2, [r8]
   1105c:	bl	10a98 <nl_cli_ct_parse_src_port@plt>
   11060:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   11064:	mov	r0, r9
   11068:	mov	r1, #0
   1106c:	ldr	r2, [r8]
   11070:	bl	10b4c <nl_cli_ct_parse_src@plt>
   11074:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   11078:	mov	r0, r9
   1107c:	ldr	r1, [r8]
   11080:	bl	10aec <nl_cli_ct_parse_tcp_state@plt>
   11084:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   11088:	mov	r0, r9
   1108c:	ldr	r1, [r8]
   11090:	bl	10a68 <nl_cli_ct_parse_mark@plt>
   11094:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   11098:	bl	10aa4 <nl_cli_print_version@plt>
   1109c:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   110a0:	mov	r0, r9
   110a4:	ldr	r1, [r8]
   110a8:	bl	10ad4 <nl_cli_ct_parse_protocol@plt>
   110ac:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   110b0:	mov	r0, r9
   110b4:	ldr	r1, [r8]
   110b8:	bl	10b28 <nl_cli_ct_parse_id@plt>
   110bc:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   110c0:	movw	r0, #4892	; 0x131c
   110c4:	movt	r0, #1
   110c8:	bl	10b40 <puts@plt>
   110cc:	mov	r0, #0
   110d0:	bl	10b70 <exit@plt>
   110d4:	ldr	r0, [r8]
   110d8:	bl	10b10 <nl_cli_parse_dumptype@plt>
   110dc:	str	r0, [sp, #16]
   110e0:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   110e4:	mov	r0, r9
   110e8:	ldr	r1, [r8]
   110ec:	bl	10b1c <nl_cli_ct_parse_family@plt>
   110f0:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   110f4:	mov	r0, #7
   110f8:	bl	10b70 <exit@plt>
   110fc:	mov	r0, r9
   11100:	mov	r1, #10
   11104:	bl	10abc <nfnl_ct_set_family@plt>
   11108:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   1110c:	mov	r0, r9
   11110:	mov	r1, #2
   11114:	bl	10abc <nfnl_ct_set_family@plt>
   11118:	b	10c04 <nl_cli_ct_parse_use@plt+0x88>
   1111c:	bl	10ab0 <nl_cli_alloc_socket@plt>
   11120:	mov	r1, #12
   11124:	mov	r4, r0
   11128:	bl	10b64 <nl_cli_connect@plt>
   1112c:	mov	r0, r4
   11130:	bl	10ae0 <nl_cli_ct_alloc_cache@plt>
   11134:	mov	r2, r9
   11138:	add	r1, sp, #16
   1113c:	bl	10a5c <nl_cache_dump_filter@plt>
   11140:	ldr	r2, [sp, #68]	; 0x44
   11144:	ldr	r3, [sl]
   11148:	mov	r0, #0
   1114c:	cmp	r2, r3
   11150:	bne	1115c <nl_cli_ct_parse_use@plt+0x5e0>
   11154:	add	sp, sp, #72	; 0x48
   11158:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1115c:	bl	10b34 <__stack_chk_fail@plt>
   11160:	mov	fp, #0
   11164:	mov	lr, #0
   11168:	pop	{r1}		; (ldr r1, [sp], #4)
   1116c:	mov	r2, sp
   11170:	push	{r2}		; (str r2, [sp, #-4]!)
   11174:	push	{r0}		; (str r0, [sp, #-4]!)
   11178:	ldr	ip, [pc, #16]	; 11190 <nl_cli_ct_parse_use@plt+0x614>
   1117c:	push	{ip}		; (str ip, [sp, #-4]!)
   11180:	ldr	r0, [pc, #12]	; 11194 <nl_cli_ct_parse_use@plt+0x618>
   11184:	ldr	r3, [pc, #12]	; 11198 <nl_cli_ct_parse_use@plt+0x61c>
   11188:	bl	10a74 <__libc_start_main@plt>
   1118c:	bl	10a44 <abort@plt>
   11190:	strdeq	r1, [r1], -r8
   11194:	andeq	r0, r1, r8, lsl #23
   11198:	muleq	r1, r4, r2
   1119c:	ldr	r3, [pc, #20]	; 111b8 <nl_cli_ct_parse_use@plt+0x63c>
   111a0:	ldr	r2, [pc, #20]	; 111bc <nl_cli_ct_parse_use@plt+0x640>
   111a4:	add	r3, pc, r3
   111a8:	ldr	r2, [r3, r2]
   111ac:	cmp	r2, #0
   111b0:	bxeq	lr
   111b4:	b	10a8c <__gmon_start__@plt>
   111b8:	andeq	r0, r1, r4, asr lr
   111bc:	andeq	r0, r0, r8, ror r0
   111c0:	push	{r3, lr}
   111c4:	movw	r0, #8624	; 0x21b0
   111c8:	ldr	r3, [pc, #36]	; 111f4 <nl_cli_ct_parse_use@plt+0x678>
   111cc:	movt	r0, #2
   111d0:	rsb	r3, r0, r3
   111d4:	cmp	r3, #6
   111d8:	popls	{r3, pc}
   111dc:	movw	r3, #0
   111e0:	movt	r3, #0
   111e4:	cmp	r3, #0
   111e8:	popeq	{r3, pc}
   111ec:	blx	r3
   111f0:	pop	{r3, pc}
   111f4:			; <UNDEFINED> instruction: 0x000221b3
   111f8:	push	{r3, lr}
   111fc:	movw	r0, #8624	; 0x21b0
   11200:	movw	r3, #8624	; 0x21b0
   11204:	movt	r0, #2
   11208:	movt	r3, #2
   1120c:	rsb	r3, r0, r3
   11210:	asr	r3, r3, #2
   11214:	add	r3, r3, r3, lsr #31
   11218:	asrs	r1, r3, #1
   1121c:	popeq	{r3, pc}
   11220:	movw	r2, #0
   11224:	movt	r2, #0
   11228:	cmp	r2, #0
   1122c:	popeq	{r3, pc}
   11230:	blx	r2
   11234:	pop	{r3, pc}
   11238:	push	{r4, lr}
   1123c:	movw	r4, #8636	; 0x21bc
   11240:	movt	r4, #2
   11244:	ldrb	r3, [r4]
   11248:	cmp	r3, #0
   1124c:	popne	{r4, pc}
   11250:	bl	111c0 <nl_cli_ct_parse_use@plt+0x644>
   11254:	mov	r3, #1
   11258:	strb	r3, [r4]
   1125c:	pop	{r4, pc}
   11260:	movw	r0, #7868	; 0x1ebc
   11264:	movt	r0, #2
   11268:	push	{r3, lr}
   1126c:	ldr	r3, [r0]
   11270:	cmp	r3, #0
   11274:	beq	1128c <nl_cli_ct_parse_use@plt+0x710>
   11278:	movw	r3, #0
   1127c:	movt	r3, #0
   11280:	cmp	r3, #0
   11284:	beq	1128c <nl_cli_ct_parse_use@plt+0x710>
   11288:	blx	r3
   1128c:	pop	{r3, lr}
   11290:	b	111f8 <nl_cli_ct_parse_use@plt+0x67c>
   11294:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11298:	mov	r7, r0
   1129c:	ldr	r6, [pc, #76]	; 112f0 <nl_cli_ct_parse_use@plt+0x774>
   112a0:	mov	r8, r1
   112a4:	ldr	r5, [pc, #72]	; 112f4 <nl_cli_ct_parse_use@plt+0x778>
   112a8:	mov	r9, r2
   112ac:	add	r6, pc, r6
   112b0:	bl	10a24 <abort@plt-0x20>
   112b4:	add	r5, pc, r5
   112b8:	rsb	r6, r5, r6
   112bc:	asrs	r6, r6, #2
   112c0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   112c4:	sub	r5, r5, #4
   112c8:	mov	r4, #0
   112cc:	add	r4, r4, #1
   112d0:	ldr	r3, [r5, #4]!
   112d4:	mov	r0, r7
   112d8:	mov	r1, r8
   112dc:	mov	r2, r9
   112e0:	blx	r3
   112e4:	cmp	r4, r6
   112e8:	bne	112cc <nl_cli_ct_parse_use@plt+0x750>
   112ec:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   112f0:	andeq	r0, r1, r4, lsl #24
   112f4:	strdeq	r0, [r1], -r8
   112f8:	bx	lr

Disassembly of section .fini:

000112fc <.fini>:
   112fc:	push	{r3, lr}
   11300:	pop	{r3, pc}
