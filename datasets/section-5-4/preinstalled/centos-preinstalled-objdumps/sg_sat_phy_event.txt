
centos-preinstalled/sg_sat_phy_event:     file format elf32-littlearm


Disassembly of section .init:

000109a4 <_init@@Base>:
   109a4:	push	{r3, lr}
   109a8:	bl	11754 <__snprintf_chk@plt+0xc70>
   109ac:	pop	{r3, pc}

Disassembly of section .plt:

000109b0 <sg_set_binary_mode@plt-0x14>:
   109b0:	push	{lr}		; (str lr, [sp, #-4]!)
   109b4:	ldr	lr, [pc, #4]	; 109c0 <_init@@Base+0x1c>
   109b8:	add	lr, pc, lr
   109bc:	ldr	pc, [lr, #8]!
   109c0:	andeq	r2, r1, r0, asr #12

000109c4 <sg_set_binary_mode@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #73728	; 0x12000
   109cc:	ldr	pc, [ip, #1600]!	; 0x640

000109d0 <sg_ll_ata_pt@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #73728	; 0x12000
   109d8:	ldr	pc, [ip, #1592]!	; 0x638

000109dc <dStrHex@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #73728	; 0x12000
   109e4:	ldr	pc, [ip, #1584]!	; 0x630

000109e8 <__stack_chk_fail@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #73728	; 0x12000
   109f0:	ldr	pc, [ip, #1576]!	; 0x628

000109f4 <dWordHex@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #73728	; 0x12000
   109fc:	ldr	pc, [ip, #1568]!	; 0x620

00010a00 <sg_print_sense@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #73728	; 0x12000
   10a08:	ldr	pc, [ip, #1560]!	; 0x618

00010a0c <perror@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #73728	; 0x12000
   10a14:	ldr	pc, [ip, #1552]!	; 0x610

00010a18 <fwrite@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #73728	; 0x12000
   10a20:	ldr	pc, [ip, #1544]!	; 0x608

00010a24 <open64@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #73728	; 0x12000
   10a2c:	ldr	pc, [ip, #1536]!	; 0x600

00010a30 <puts@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #73728	; 0x12000
   10a38:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a3c <__libc_start_main@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #73728	; 0x12000
   10a44:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a48 <__gmon_start__@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #73728	; 0x12000
   10a50:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a54 <getopt_long@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #73728	; 0x12000
   10a5c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a60 <exit@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #73728	; 0x12000
   10a68:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a6c <sg_scsi_normalize_sense@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #73728	; 0x12000
   10a74:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a78 <memset@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #73728	; 0x12000
   10a80:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a84 <putchar@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #73728	; 0x12000
   10a8c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a90 <__printf_chk@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #73728	; 0x12000
   10a98:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a9c <__fprintf_chk@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #73728	; 0x12000
   10aa4:	ldr	pc, [ip, #1456]!	; 0x5b0

00010aa8 <safe_strerror@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #73728	; 0x12000
   10ab0:	ldr	pc, [ip, #1448]!	; 0x5a8

00010ab4 <sg_is_big_endian@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #73728	; 0x12000
   10abc:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ac0 <sg_get_num@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #73728	; 0x12000
   10ac8:	ldr	pc, [ip, #1432]!	; 0x598

00010acc <abort@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #73728	; 0x12000
   10ad4:	ldr	pc, [ip, #1424]!	; 0x590

00010ad8 <close@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #73728	; 0x12000
   10ae0:	ldr	pc, [ip, #1416]!	; 0x588

00010ae4 <__snprintf_chk@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #73728	; 0x12000
   10aec:	ldr	pc, [ip, #1408]!	; 0x580

Disassembly of section .text:

00010af0 <.text>:
   10af0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10af4:	movw	r9, #12744	; 0x31c8
   10af8:	movt	r9, #2
   10afc:	sub	sp, sp, #908	; 0x38c
   10b00:	mov	r6, r1
   10b04:	mov	r1, #0
   10b08:	ldr	r3, [r9]
   10b0c:	mov	r4, r1
   10b10:	movw	sl, #12760	; 0x31d8
   10b14:	add	r7, sp, #80	; 0x50
   10b18:	movt	sl, #2
   10b1c:	mov	r5, r0
   10b20:	mov	r2, #512	; 0x200
   10b24:	add	r0, sp, #388	; 0x184
   10b28:	mov	r8, r4
   10b2c:	mov	fp, #16
   10b30:	str	r3, [sp, #900]	; 0x384
   10b34:	bl	10a78 <memset@plt>
   10b38:	str	r4, [sp, #60]	; 0x3c
   10b3c:	str	r4, [sp, #48]	; 0x30
   10b40:	str	r4, [sp, #52]	; 0x34
   10b44:	str	r4, [sp, #44]	; 0x2c
   10b48:	str	r4, [sp, #64]	; 0x40
   10b4c:	str	r4, [sp, #56]	; 0x38
   10b50:	str	r7, [sp]
   10b54:	movw	r2, #6340	; 0x18c4
   10b58:	movw	r3, #12408	; 0x3078
   10b5c:	movt	r2, #1
   10b60:	movt	r3, #2
   10b64:	mov	r0, r5
   10b68:	mov	r1, r6
   10b6c:	str	r8, [sp, #80]	; 0x50
   10b70:	bl	10a54 <getopt_long@plt>
   10b74:	cmn	r0, #1
   10b78:	beq	10dc0 <__snprintf_chk@plt+0x2dc>
   10b7c:	sub	r3, r0, #63	; 0x3f
   10b80:	cmp	r3, #55	; 0x37
   10b84:	ldrls	pc, [pc, r3, lsl #2]
   10b88:	b	10d64 <__snprintf_chk@plt+0x280>
   10b8c:	andeq	r0, r1, ip, lsr sp
   10b90:	andeq	r0, r1, r4, ror #26
   10b94:	andeq	r0, r1, r4, ror #26
   10b98:	andeq	r0, r1, r4, ror #26
   10b9c:	andeq	r0, r1, r4, ror #26
   10ba0:	andeq	r0, r1, r4, ror #26
   10ba4:	andeq	r0, r1, r4, ror #26
   10ba8:	andeq	r0, r1, r4, ror #26
   10bac:	andeq	r0, r1, r4, ror #26
   10bb0:	andeq	r0, r1, ip, lsr #26
   10bb4:	andeq	r0, r1, r4, ror #26
   10bb8:	andeq	r0, r1, r4, ror #26
   10bbc:	andeq	r0, r1, r4, ror #26
   10bc0:	andeq	r0, r1, r4, ror #26
   10bc4:	andeq	r0, r1, r4, ror #26
   10bc8:	andeq	r0, r1, r4, ror #26
   10bcc:	andeq	r0, r1, r4, ror #26
   10bd0:	andeq	r0, r1, r4, ror #26
   10bd4:	andeq	r0, r1, r4, ror #26
   10bd8:	andeq	r0, r1, ip, lsl sp
   10bdc:	andeq	r0, r1, r4, ror #26
   10be0:	andeq	r0, r1, r4, ror #26
   10be4:	andeq	r0, r1, r4, ror #26
   10be8:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10bec:	andeq	r0, r1, r4, ror #26
   10bf0:	andeq	r0, r1, r4, ror #26
   10bf4:	andeq	r0, r1, r4, ror #26
   10bf8:	andeq	r0, r1, r4, ror #26
   10bfc:	andeq	r0, r1, r4, ror #26
   10c00:	andeq	r0, r1, r4, ror #26
   10c04:	andeq	r0, r1, r4, ror #26
   10c08:	andeq	r0, r1, r4, ror #26
   10c0c:	andeq	r0, r1, r4, ror #26
   10c10:	andeq	r0, r1, r4, ror #26
   10c14:	andeq	r0, r1, r4, ror #26
   10c18:	andeq	r0, r1, r4, ror #26
   10c1c:	andeq	r0, r1, r0, ror #25
   10c20:	andeq	r0, r1, r4, ror #26
   10c24:	ldrdeq	r0, [r1], -r8
   10c28:	andeq	r0, r1, r4, ror #26
   10c2c:	andeq	r0, r1, r4, ror #26
   10c30:	andeq	r0, r1, ip, lsr sp
   10c34:	andeq	r0, r1, r8, asr #25
   10c38:	andeq	r0, r1, r4, ror #26
   10c3c:	andeq	r0, r1, r4, ror #26
   10c40:	andeq	r0, r1, ip, lsl #25
   10c44:	andeq	r0, r1, r4, ror #26
   10c48:	andeq	r0, r1, r4, ror #26
   10c4c:	andeq	r0, r1, r4, ror #26
   10c50:	andeq	r0, r1, r4, ror #26
   10c54:	andeq	r0, r1, r4, ror #26
   10c58:	andeq	r0, r1, ip, ror ip
   10c5c:	andeq	r0, r1, r4, ror #26
   10c60:	andeq	r0, r1, r4, ror #26
   10c64:	andeq	r0, r1, r4, ror #26
   10c68:	andeq	r0, r1, ip, ror #24
   10c6c:	ldr	ip, [sp, #48]	; 0x30
   10c70:	add	ip, ip, #1
   10c74:	str	ip, [sp, #48]	; 0x30
   10c78:	b	10b50 <__snprintf_chk@plt+0x6c>
   10c7c:	ldr	ip, [sp, #44]	; 0x2c
   10c80:	add	ip, ip, #1
   10c84:	str	ip, [sp, #44]	; 0x2c
   10c88:	b	10b50 <__snprintf_chk@plt+0x6c>
   10c8c:	ldr	r0, [sl]
   10c90:	bl	10ac0 <sg_get_num@plt>
   10c94:	cmp	r0, #16
   10c98:	cmpne	r0, #12
   10c9c:	mov	fp, r0
   10ca0:	beq	10b50 <__snprintf_chk@plt+0x6c>
   10ca4:	movw	r3, #12756	; 0x31d4
   10ca8:	movt	r3, #2
   10cac:	movw	r0, #7256	; 0x1c58
   10cb0:	mov	r1, #1
   10cb4:	ldr	r3, [r3]
   10cb8:	mov	r2, #39	; 0x27
   10cbc:	movt	r0, #1
   10cc0:	bl	10a18 <fwrite@plt>
   10cc4:	b	10da0 <__snprintf_chk@plt+0x2bc>
   10cc8:	ldr	ip, [sp, #64]	; 0x40
   10ccc:	add	ip, ip, #1
   10cd0:	str	ip, [sp, #64]	; 0x40
   10cd4:	b	10b50 <__snprintf_chk@plt+0x6c>
   10cd8:	add	r4, r4, #1
   10cdc:	b	10b50 <__snprintf_chk@plt+0x6c>
   10ce0:	ldr	ip, [sp, #60]	; 0x3c
   10ce4:	add	ip, ip, #1
   10ce8:	str	ip, [sp, #60]	; 0x3c
   10cec:	b	10b50 <__snprintf_chk@plt+0x6c>
   10cf0:	movw	r1, #12756	; 0x31d4
   10cf4:	movt	r1, #2
   10cf8:	movw	r2, #7296	; 0x1c80
   10cfc:	movw	r3, #7312	; 0x1c90
   10d00:	ldr	r0, [r1]
   10d04:	movt	r2, #1
   10d08:	movt	r3, #1
   10d0c:	mov	r1, #1
   10d10:	bl	10a9c <__fprintf_chk@plt>
   10d14:	mov	r0, #0
   10d18:	bl	10a60 <exit@plt>
   10d1c:	ldr	ip, [sp, #52]	; 0x34
   10d20:	add	ip, ip, #1
   10d24:	str	ip, [sp, #52]	; 0x34
   10d28:	b	10b50 <__snprintf_chk@plt+0x6c>
   10d2c:	ldr	ip, [sp, #56]	; 0x38
   10d30:	add	ip, ip, #1
   10d34:	str	ip, [sp, #56]	; 0x38
   10d38:	b	10b50 <__snprintf_chk@plt+0x6c>
   10d3c:	movw	r3, #12756	; 0x31d4
   10d40:	movt	r3, #2
   10d44:	movw	r0, #6352	; 0x18d0
   10d48:	mov	r1, #1
   10d4c:	ldr	r3, [r3]
   10d50:	movt	r0, #1
   10d54:	movw	r2, #902	; 0x386
   10d58:	bl	10a18 <fwrite@plt>
   10d5c:	mov	r0, #0
   10d60:	bl	10a60 <exit@plt>
   10d64:	movw	r4, #12756	; 0x31d4
   10d68:	movt	r4, #2
   10d6c:	mov	r3, r0
   10d70:	str	r0, [sp]
   10d74:	mov	r1, #1
   10d78:	ldr	r0, [r4]
   10d7c:	movw	r2, #7328	; 0x1ca0
   10d80:	movt	r2, #1
   10d84:	bl	10a9c <__fprintf_chk@plt>
   10d88:	movw	r0, #6352	; 0x18d0
   10d8c:	ldr	r3, [r4]
   10d90:	mov	r1, #1
   10d94:	movt	r0, #1
   10d98:	movw	r2, #902	; 0x386
   10d9c:	bl	10a18 <fwrite@plt>
   10da0:	mov	r8, #1
   10da4:	ldr	r2, [sp, #900]	; 0x384
   10da8:	mov	r0, r8
   10dac:	ldr	r3, [r9]
   10db0:	cmp	r2, r3
   10db4:	bne	1140c <__snprintf_chk@plt+0x928>
   10db8:	add	sp, sp, #908	; 0x38c
   10dbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10dc0:	movw	sl, #12752	; 0x31d0
   10dc4:	movt	sl, #2
   10dc8:	ldr	r2, [sl]
   10dcc:	cmp	r5, r2
   10dd0:	ble	10e44 <__snprintf_chk@plt+0x360>
   10dd4:	add	r3, r2, #1
   10dd8:	ldr	r8, [r6, r2, lsl #2]
   10ddc:	cmp	r5, r3
   10de0:	str	r3, [sl]
   10de4:	ble	10e84 <__snprintf_chk@plt+0x3a0>
   10de8:	movw	r7, #12756	; 0x31d4
   10dec:	movt	r7, #2
   10df0:	ldr	r3, [r6, r3, lsl #2]
   10df4:	movw	r2, #7392	; 0x1ce0
   10df8:	ldr	r0, [r7]
   10dfc:	movt	r2, #1
   10e00:	mov	r1, #1
   10e04:	movw	r4, #12756	; 0x31d4
   10e08:	bl	10a9c <__fprintf_chk@plt>
   10e0c:	ldr	r3, [sl]
   10e10:	movt	r4, #2
   10e14:	add	r3, r3, #1
   10e18:	str	r3, [sl]
   10e1c:	cmp	r5, r3
   10e20:	bgt	10df0 <__snprintf_chk@plt+0x30c>
   10e24:	mov	r1, #1
   10e28:	ldr	r3, [r4]
   10e2c:	movw	r0, #6352	; 0x18d0
   10e30:	movw	r2, #902	; 0x386
   10e34:	movt	r0, #1
   10e38:	mov	r8, r1
   10e3c:	bl	10a18 <fwrite@plt>
   10e40:	b	10da4 <__snprintf_chk@plt+0x2c0>
   10e44:	movw	r4, #12756	; 0x31d4
   10e48:	movt	r4, #2
   10e4c:	mov	r1, #1
   10e50:	mov	r2, #24
   10e54:	ldr	r3, [r4]
   10e58:	mov	r8, r1
   10e5c:	movw	r0, #7364	; 0x1cc4
   10e60:	movt	r0, #1
   10e64:	bl	10a18 <fwrite@plt>
   10e68:	ldr	r3, [r4]
   10e6c:	movw	r0, #6352	; 0x18d0
   10e70:	mov	r1, r8
   10e74:	movw	r2, #902	; 0x386
   10e78:	movt	r0, #1
   10e7c:	bl	10a18 <fwrite@plt>
   10e80:	b	10da4 <__snprintf_chk@plt+0x2c0>
   10e84:	cmp	r8, #0
   10e88:	beq	10e44 <__snprintf_chk@plt+0x360>
   10e8c:	ldr	ip, [sp, #44]	; 0x2c
   10e90:	cmp	ip, #0
   10e94:	beq	10ea8 <__snprintf_chk@plt+0x3c4>
   10e98:	mov	r0, #1
   10e9c:	bl	109c4 <sg_set_binary_mode@plt>
   10ea0:	cmp	r0, #0
   10ea4:	blt	11330 <__snprintf_chk@plt+0x84c>
   10ea8:	mov	r0, r8
   10eac:	mov	r1, #2
   10eb0:	bl	10a24 <open64@plt>
   10eb4:	cmp	r0, #0
   10eb8:	str	r0, [sp, #68]	; 0x44
   10ebc:	blt	11090 <__snprintf_chk@plt+0x5ac>
   10ec0:	ldr	ip, [sp, #52]	; 0x34
   10ec4:	add	r6, sp, #132	; 0x84
   10ec8:	mov	r5, #0
   10ecc:	mov	r8, #64	; 0x40
   10ed0:	subs	ip, ip, r5
   10ed4:	add	sl, sp, #100	; 0x64
   10ed8:	mov	r1, r5
   10edc:	mov	r2, r8
   10ee0:	mov	r0, r6
   10ee4:	movne	ip, #1
   10ee8:	mvn	r3, #122	; 0x7a
   10eec:	str	ip, [sp, #52]	; 0x34
   10ef0:	strb	r3, [sp, #116]	; 0x74
   10ef4:	mvn	r3, #94	; 0x5e
   10ef8:	str	r5, [sp, #76]	; 0x4c
   10efc:	strb	r3, [sp, #88]	; 0x58
   10f00:	strb	r5, [sp, #117]	; 0x75
   10f04:	strb	r5, [sp, #118]	; 0x76
   10f08:	strb	r5, [sp, #119]	; 0x77
   10f0c:	strb	r5, [sp, #120]	; 0x78
   10f10:	strb	r5, [sp, #121]	; 0x79
   10f14:	strb	r5, [sp, #122]	; 0x7a
   10f18:	strb	r5, [sp, #123]	; 0x7b
   10f1c:	strb	r5, [sp, #124]	; 0x7c
   10f20:	strb	r5, [sp, #125]	; 0x7d
   10f24:	strb	r5, [sp, #126]	; 0x7e
   10f28:	strb	r5, [sp, #127]	; 0x7f
   10f2c:	strb	r5, [sp, #128]	; 0x80
   10f30:	strb	r5, [sp, #129]	; 0x81
   10f34:	strb	r5, [sp, #130]	; 0x82
   10f38:	strb	r5, [sp, #131]	; 0x83
   10f3c:	strb	r5, [sp, #89]	; 0x59
   10f40:	strb	r5, [sp, #90]	; 0x5a
   10f44:	strb	r5, [sp, #91]	; 0x5b
   10f48:	strb	r5, [sp, #92]	; 0x5c
   10f4c:	strb	r5, [sp, #93]	; 0x5d
   10f50:	strb	r5, [sp, #94]	; 0x5e
   10f54:	strb	r5, [sp, #95]	; 0x5f
   10f58:	strb	r5, [sp, #96]	; 0x60
   10f5c:	strb	r5, [sp, #97]	; 0x61
   10f60:	strb	r5, [sp, #98]	; 0x62
   10f64:	strb	r5, [sp, #99]	; 0x63
   10f68:	bl	10a78 <memset@plt>
   10f6c:	mov	r1, r5
   10f70:	mov	r0, sl
   10f74:	mov	r2, #16
   10f78:	bl	10a78 <memset@plt>
   10f7c:	cmp	fp, #16
   10f80:	beq	112b0 <__snprintf_chk@plt+0x7cc>
   10f84:	ldr	ip, [sp, #60]	; 0x3c
   10f88:	add	r1, sp, #388	; 0x184
   10f8c:	ldr	r4, [sp, #48]	; 0x30
   10f90:	mov	r3, #512	; 0x200
   10f94:	mov	r2, #16
   10f98:	stm	sp, {r1, r5}
   10f9c:	lsl	lr, ip, #5
   10fa0:	str	r2, [sp, #24]
   10fa4:	orr	lr, lr, #14
   10fa8:	strb	lr, [sp, #90]	; 0x5a
   10fac:	ldr	lr, [sp, #52]	; 0x34
   10fb0:	add	ip, sp, #76	; 0x4c
   10fb4:	str	r4, [sp, #32]
   10fb8:	add	r1, sp, #88	; 0x58
   10fbc:	str	r3, [sp, #8]
   10fc0:	mov	r2, fp
   10fc4:	str	ip, [sp, #28]
   10fc8:	mov	r3, #20
   10fcc:	str	r6, [sp, #12]
   10fd0:	mov	ip, #1
   10fd4:	str	r8, [sp, #16]
   10fd8:	mov	r4, #17
   10fdc:	ldr	r0, [sp, #68]	; 0x44
   10fe0:	str	sl, [sp, #20]
   10fe4:	strb	lr, [sp, #91]	; 0x5b
   10fe8:	mov	lr, #47	; 0x2f
   10fec:	strb	ip, [sp, #92]	; 0x5c
   10ff0:	mov	ip, #8
   10ff4:	strb	r4, [sp, #93]	; 0x5d
   10ff8:	strb	lr, [sp, #97]	; 0x61
   10ffc:	strb	ip, [sp, #89]	; 0x59
   11000:	bl	109d0 <sg_ll_ata_pt@plt>
   11004:	cmp	r0, #0
   11008:	bne	110c4 <__snprintf_chk@plt+0x5e0>
   1100c:	ldr	r4, [sp, #48]	; 0x30
   11010:	cmp	r4, #2
   11014:	bgt	11344 <__snprintf_chk@plt+0x860>
   11018:	ldrb	r3, [sp, #100]	; 0x64
   1101c:	cmp	r3, #9
   11020:	beq	11478 <__snprintf_chk@plt+0x994>
   11024:	ldr	r4, [sp, #44]	; 0x2c
   11028:	cmp	r4, #0
   1102c:	bne	11260 <__snprintf_chk@plt+0x77c>
   11030:	ldr	r4, [sp, #56]	; 0x38
   11034:	cmp	r4, #1
   11038:	beq	11410 <__snprintf_chk@plt+0x92c>
   1103c:	ble	11280 <__snprintf_chk@plt+0x79c>
   11040:	bl	10ab4 <sg_is_big_endian@plt>
   11044:	mov	r1, #256	; 0x100
   11048:	ldr	r2, [sp, #44]	; 0x2c
   1104c:	mov	r3, r0
   11050:	add	r0, sp, #388	; 0x184
   11054:	bl	109f4 <dWordHex@plt>
   11058:	ldr	r3, [sp, #44]	; 0x2c
   1105c:	ldr	ip, [sp, #56]	; 0x38
   11060:	ldr	r4, [sp, #44]	; 0x2c
   11064:	orr	r8, ip, r4
   11068:	orrs	r8, r8, r3
   1106c:	movne	r8, r3
   11070:	beq	11154 <__snprintf_chk@plt+0x670>
   11074:	ldr	r0, [sp, #68]	; 0x44
   11078:	bl	10ad8 <close@plt>
   1107c:	cmp	r0, #0
   11080:	blt	11368 <__snprintf_chk@plt+0x884>
   11084:	cmn	r8, #1
   11088:	moveq	r8, #99	; 0x63
   1108c:	b	10da4 <__snprintf_chk@plt+0x2c0>
   11090:	mov	r1, #256	; 0x100
   11094:	str	r8, [sp, #4]
   11098:	add	r0, sp, #132	; 0x84
   1109c:	mov	r3, r1
   110a0:	movw	r2, #7444	; 0x1d14
   110a4:	movt	r2, #1
   110a8:	str	r2, [sp]
   110ac:	mov	r2, #1
   110b0:	bl	10ae4 <__snprintf_chk@plt>
   110b4:	add	r0, sp, #132	; 0x84
   110b8:	mov	r8, #15
   110bc:	bl	10a0c <perror@plt>
   110c0:	b	10da4 <__snprintf_chk@plt+0x2c0>
   110c4:	ble	113cc <__snprintf_chk@plt+0x8e8>
   110c8:	tst	r0, #2
   110cc:	beq	11288 <__snprintf_chk@plt+0x7a4>
   110d0:	ldr	ip, [sp, #48]	; 0x30
   110d4:	cmp	ip, #1
   110d8:	ble	110fc <__snprintf_chk@plt+0x618>
   110dc:	cmp	ip, #2
   110e0:	movw	r0, #7532	; 0x1d6c
   110e4:	mov	r1, r6
   110e8:	movt	r0, #1
   110ec:	mov	r2, #64	; 0x40
   110f0:	movle	r3, #0
   110f4:	movgt	r3, #1
   110f8:	bl	10a00 <sg_print_sense@plt>
   110fc:	mov	r0, r6
   11100:	mov	r2, r7
   11104:	mov	r1, #64	; 0x40
   11108:	bl	10a6c <sg_scsi_normalize_sense@plt>
   1110c:	cmp	r0, #0
   11110:	beq	113a4 <__snprintf_chk@plt+0x8c0>
   11114:	ldrb	r3, [sp, #81]	; 0x51
   11118:	cmp	r3, #11
   1111c:	ldrls	pc, [pc, r3, lsl #2]
   11120:	b	11444 <__snprintf_chk@plt+0x960>
   11124:	andeq	r1, r1, r0, ror #9
   11128:	andeq	r1, r1, r0, ror #9
   1112c:	andeq	r1, r1, r8, lsr #9
   11130:	muleq	r1, r8, r6
   11134:	muleq	r1, r8, r6
   11138:	andeq	r1, r1, r4, asr r6
   1113c:	andeq	r1, r1, ip, lsl r6
   11140:	andeq	r1, r1, r4, asr #8
   11144:	andeq	r1, r1, r4, asr #8
   11148:	andeq	r1, r1, r4, asr #8
   1114c:	andeq	r1, r1, r4, asr #8
   11150:	strdeq	r1, [r1], -r4
   11154:	movw	r0, #8244	; 0x2034
   11158:	movt	r0, #1
   1115c:	bl	10a30 <puts@plt>
   11160:	ldr	r6, [sp, #64]	; 0x40
   11164:	mov	sl, #4
   11168:	add	ip, sp, #904	; 0x388
   1116c:	add	r3, ip, sl
   11170:	ldrb	r2, [r3, #-515]	; 0xfffffdfd
   11174:	ldrb	r3, [r3, #-516]	; 0xfffffdfc
   11178:	adds	r2, r3, r2, lsl #8
   1117c:	beq	11074 <__snprintf_chk@plt+0x590>
   11180:	ubfx	r7, r2, #12, #3
   11184:	ubfx	r3, r2, #15, #1
   11188:	ubfx	r2, r2, #0, #12
   1118c:	lsl	r7, r7, #1
   11190:	subs	fp, r7, #1
   11194:	bcc	11400 <__snprintf_chk@plt+0x91c>
   11198:	add	lr, r7, sl
   1119c:	add	r4, sp, #388	; 0x184
   111a0:	add	lr, lr, #1
   111a4:	mov	ip, fp
   111a8:	mov	r0, #0
   111ac:	mov	r1, #0
   111b0:	add	lr, r4, lr
   111b4:	b	111d0 <__snprintf_chk@plt+0x6ec>
   111b8:	cmp	fp, ip
   111bc:	lslgt	r4, r1, #8
   111c0:	lslgt	r5, r0, #8
   111c4:	orrgt	r4, r4, r0, lsr #24
   111c8:	movgt	r0, r5
   111cc:	movgt	r1, r4
   111d0:	sub	ip, ip, #1
   111d4:	ldrb	r4, [lr], #-1
   111d8:	cmn	ip, #1
   111dc:	mov	r5, #0
   111e0:	orr	r0, r0, r4
   111e4:	orr	r1, r1, r5
   111e8:	bne	111b8 <__snprintf_chk@plt+0x6d4>
   111ec:	orrs	ip, r3, r6
   111f0:	ldreq	ip, [pc, #1308]	; 11714 <__snprintf_chk@plt+0xc30>
   111f4:	beq	11228 <__snprintf_chk@plt+0x744>
   111f8:	strd	r0, [sp, #8]
   111fc:	movw	r1, #8292	; 0x2064
   11200:	str	r7, [sp]
   11204:	mov	r0, #1
   11208:	movt	r1, #1
   1120c:	bl	10a90 <__printf_chk@plt>
   11210:	add	r7, r7, #2
   11214:	movw	lr, #511	; 0x1ff
   11218:	add	sl, sl, r7
   1121c:	cmp	sl, lr
   11220:	ble	11168 <__snprintf_chk@plt+0x684>
   11224:	b	11074 <__snprintf_chk@plt+0x590>
   11228:	ldr	lr, [ip, #-4]
   1122c:	cmp	lr, #0
   11230:	beq	111f8 <__snprintf_chk@plt+0x714>
   11234:	add	ip, ip, #8
   11238:	ldr	r4, [ip, #-16]
   1123c:	cmp	r2, r4
   11240:	bne	11228 <__snprintf_chk@plt+0x744>
   11244:	strd	r0, [sp]
   11248:	mov	r2, lr
   1124c:	movw	r1, #8340	; 0x2094
   11250:	mov	r0, #1
   11254:	movt	r1, #1
   11258:	bl	10a90 <__printf_chk@plt>
   1125c:	b	11210 <__snprintf_chk@plt+0x72c>
   11260:	mov	r4, #0
   11264:	add	ip, sp, #388	; 0x184
   11268:	ldrb	ip, [ip, r4]
   1126c:	add	r4, r4, #1
   11270:	uxtb	r0, ip
   11274:	bl	10a84 <putchar@plt>
   11278:	cmp	r4, #512	; 0x200
   1127c:	bne	11264 <__snprintf_chk@plt+0x780>
   11280:	mov	r3, #0
   11284:	b	1105c <__snprintf_chk@plt+0x578>
   11288:	movw	r1, #12756	; 0x31d4
   1128c:	movt	r1, #2
   11290:	mov	r3, r0
   11294:	movw	r2, #8016	; 0x1f50
   11298:	ldr	r0, [r1]
   1129c:	movt	r2, #1
   112a0:	mov	r1, #1
   112a4:	bl	10a9c <__fprintf_chk@plt>
   112a8:	mov	r3, #97	; 0x61
   112ac:	b	1105c <__snprintf_chk@plt+0x578>
   112b0:	ldr	lr, [sp, #60]	; 0x3c
   112b4:	orr	r4, r4, #8
   112b8:	ldr	r2, [sp, #48]	; 0x30
   112bc:	add	r1, sp, #388	; 0x184
   112c0:	strb	r4, [sp, #117]	; 0x75
   112c4:	mov	r3, #512	; 0x200
   112c8:	ldr	r4, [sp, #52]	; 0x34
   112cc:	lsl	ip, lr, #5
   112d0:	stm	sp, {r1, r5}
   112d4:	add	lr, sp, #76	; 0x4c
   112d8:	str	r2, [sp, #32]
   112dc:	add	r1, sp, #116	; 0x74
   112e0:	str	r3, [sp, #8]
   112e4:	mov	r2, fp
   112e8:	str	lr, [sp, #28]
   112ec:	mov	r3, #20
   112f0:	str	r6, [sp, #12]
   112f4:	orr	ip, ip, #14
   112f8:	str	r8, [sp, #16]
   112fc:	mov	r5, #1
   11300:	ldr	r0, [sp, #68]	; 0x44
   11304:	mov	lr, #17
   11308:	str	sl, [sp, #20]
   1130c:	str	fp, [sp, #24]
   11310:	strb	ip, [sp, #118]	; 0x76
   11314:	mov	ip, #47	; 0x2f
   11318:	strb	r4, [sp, #120]	; 0x78
   1131c:	strb	r5, [sp, #122]	; 0x7a
   11320:	strb	lr, [sp, #124]	; 0x7c
   11324:	strb	ip, [sp, #130]	; 0x82
   11328:	bl	109d0 <sg_ll_ata_pt@plt>
   1132c:	b	11004 <__snprintf_chk@plt+0x520>
   11330:	movw	r0, #7424	; 0x1d00
   11334:	movt	r0, #1
   11338:	bl	10a0c <perror@plt>
   1133c:	mov	r8, #15
   11340:	b	10da4 <__snprintf_chk@plt+0x2c0>
   11344:	movw	r3, #12756	; 0x31d4
   11348:	movt	r3, #2
   1134c:	movw	r0, #7488	; 0x1d40
   11350:	mov	r1, #1
   11354:	ldr	r3, [r3]
   11358:	mov	r2, #40	; 0x28
   1135c:	movt	r0, #1
   11360:	bl	10a18 <fwrite@plt>
   11364:	b	11018 <__snprintf_chk@plt+0x534>
   11368:	movw	r3, #12756	; 0x31d4
   1136c:	movt	r3, #2
   11370:	rsb	r0, r0, #0
   11374:	ldr	r4, [r3]
   11378:	bl	10aa8 <safe_strerror@plt>
   1137c:	movw	r2, #8272	; 0x2050
   11380:	mov	r1, #1
   11384:	movt	r2, #1
   11388:	mov	r3, r0
   1138c:	mov	r0, r4
   11390:	bl	10a9c <__fprintf_chk@plt>
   11394:	cmp	r8, #0
   11398:	bne	11084 <__snprintf_chk@plt+0x5a0>
   1139c:	mov	r8, #15
   113a0:	b	10da4 <__snprintf_chk@plt+0x2c0>
   113a4:	movw	r3, #12756	; 0x31d4
   113a8:	movt	r3, #2
   113ac:	movw	r0, #7916	; 0x1eec
   113b0:	mov	r1, #1
   113b4:	ldr	r3, [r3]
   113b8:	movt	r0, #1
   113bc:	mov	r2, #41	; 0x29
   113c0:	bl	10a18 <fwrite@plt>
   113c4:	mov	r3, #98	; 0x62
   113c8:	b	1105c <__snprintf_chk@plt+0x578>
   113cc:	movw	r4, #12756	; 0x31d4
   113d0:	movt	r4, #2
   113d4:	mov	r3, fp
   113d8:	movw	r2, #8048	; 0x1f70
   113dc:	ldr	r0, [r4]
   113e0:	movt	r2, #1
   113e4:	mov	r1, #1
   113e8:	bl	10a9c <__fprintf_chk@plt>
   113ec:	ldr	ip, [sp, #48]	; 0x30
   113f0:	cmp	ip, #1
   113f4:	ble	11428 <__snprintf_chk@plt+0x944>
   113f8:	mvn	r8, #0
   113fc:	b	11074 <__snprintf_chk@plt+0x590>
   11400:	mov	r0, #0
   11404:	mov	r1, #0
   11408:	b	111ec <__snprintf_chk@plt+0x708>
   1140c:	bl	109e8 <__stack_chk_fail@plt>
   11410:	ldr	r2, [sp, #44]	; 0x2c
   11414:	add	r0, sp, #388	; 0x184
   11418:	mov	r1, #512	; 0x200
   1141c:	mov	r8, r2
   11420:	bl	109dc <dStrHex@plt>
   11424:	b	11074 <__snprintf_chk@plt+0x590>
   11428:	ldr	r3, [r4]
   1142c:	movw	r0, #8080	; 0x1f90
   11430:	mov	r1, #1
   11434:	mov	r2, #41	; 0x29
   11438:	movt	r0, #1
   1143c:	bl	10a18 <fwrite@plt>
   11440:	b	113f8 <__snprintf_chk@plt+0x914>
   11444:	ldr	r4, [sp, #48]	; 0x30
   11448:	cmp	r4, #1
   1144c:	bgt	11470 <__snprintf_chk@plt+0x98c>
   11450:	movw	r1, #12756	; 0x31d4
   11454:	movt	r1, #2
   11458:	movw	r2, #7844	; 0x1ea4
   1145c:	mov	r3, fp
   11460:	ldr	r0, [r1]
   11464:	movt	r2, #1
   11468:	mov	r1, #1
   1146c:	bl	10a9c <__fprintf_chk@plt>
   11470:	mov	r3, #98	; 0x62
   11474:	b	1105c <__snprintf_chk@plt+0x578>
   11478:	mov	r4, #1
   1147c:	movw	r3, #12756	; 0x31d4
   11480:	movt	r3, #2
   11484:	movw	r0, #8124	; 0x1fbc
   11488:	mov	r1, #1
   1148c:	ldr	r3, [r3]
   11490:	movt	r0, #1
   11494:	mov	r2, #64	; 0x40
   11498:	bl	10a18 <fwrite@plt>
   1149c:	cmp	r4, #0
   114a0:	bne	11024 <__snprintf_chk@plt+0x540>
   114a4:	b	11280 <__snprintf_chk@plt+0x79c>
   114a8:	ldr	r4, [sp, #48]	; 0x30
   114ac:	cmp	r4, #1
   114b0:	movgt	r3, #2
   114b4:	bgt	1105c <__snprintf_chk@plt+0x578>
   114b8:	movw	r1, #12756	; 0x31d4
   114bc:	movt	r1, #2
   114c0:	mov	r3, fp
   114c4:	movw	r2, #7728	; 0x1e30
   114c8:	ldr	r0, [r1]
   114cc:	movt	r2, #1
   114d0:	mov	r1, #1
   114d4:	bl	10a9c <__fprintf_chk@plt>
   114d8:	mov	r3, #2
   114dc:	b	1105c <__snprintf_chk@plt+0x578>
   114e0:	ldrb	r2, [sp, #82]	; 0x52
   114e4:	cmp	r2, #0
   114e8:	bne	115dc <__snprintf_chk@plt+0xaf8>
   114ec:	ldrb	r2, [sp, #83]	; 0x53
   114f0:	cmp	r2, #29
   114f4:	beq	1159c <__snprintf_chk@plt+0xab8>
   114f8:	cmp	r3, #1
   114fc:	beq	11594 <__snprintf_chk@plt+0xab0>
   11500:	cmp	r2, #0
   11504:	bne	11470 <__snprintf_chk@plt+0x98c>
   11508:	ldrb	r3, [sp, #132]	; 0x84
   1150c:	and	r1, r3, #127	; 0x7f
   11510:	cmp	r1, #114	; 0x72
   11514:	beq	1153c <__snprintf_chk@plt+0xa58>
   11518:	movw	r1, #12756	; 0x31d4
   1151c:	movt	r1, #2
   11520:	movw	r2, #7960	; 0x1f18
   11524:	movt	r2, #1
   11528:	ldr	r0, [r1]
   1152c:	mov	r1, #1
   11530:	bl	10a9c <__fprintf_chk@plt>
   11534:	mov	r3, #97	; 0x61
   11538:	b	1105c <__snprintf_chk@plt+0x578>
   1153c:	ldrb	r3, [sp, #100]	; 0x64
   11540:	cmp	r3, #9
   11544:	beq	11584 <__snprintf_chk@plt+0xaa0>
   11548:	cmp	r2, #0
   1154c:	beq	11280 <__snprintf_chk@plt+0x79c>
   11550:	ldrb	r3, [sp, #103]	; 0x67
   11554:	tst	r3, #4
   11558:	beq	11024 <__snprintf_chk@plt+0x540>
   1155c:	movw	r3, #12756	; 0x31d4
   11560:	movt	r3, #2
   11564:	movw	r0, #8192	; 0x2000
   11568:	mov	r1, #1
   1156c:	ldr	r3, [r3]
   11570:	movt	r0, #1
   11574:	mov	r2, #50	; 0x32
   11578:	bl	10a18 <fwrite@plt>
   1157c:	mov	r3, #11
   11580:	b	1105c <__snprintf_chk@plt+0x578>
   11584:	cmp	r2, #0
   11588:	moveq	r4, r2
   1158c:	bne	11550 <__snprintf_chk@plt+0xa6c>
   11590:	b	1147c <__snprintf_chk@plt+0x998>
   11594:	mov	r3, #21
   11598:	b	1105c <__snprintf_chk@plt+0x578>
   1159c:	ldrb	r3, [sp, #100]	; 0x64
   115a0:	cmp	r3, #9
   115a4:	beq	115ec <__snprintf_chk@plt+0xb08>
   115a8:	ldr	r4, [sp, #48]	; 0x30
   115ac:	cmp	r4, #0
   115b0:	beq	11594 <__snprintf_chk@plt+0xab0>
   115b4:	movw	r3, #12756	; 0x31d4
   115b8:	movt	r3, #2
   115bc:	movw	r0, #7636	; 0x1dd4
   115c0:	mov	r1, #1
   115c4:	ldr	r3, [r3]
   115c8:	movt	r0, #1
   115cc:	mov	r2, #43	; 0x2b
   115d0:	bl	10a18 <fwrite@plt>
   115d4:	mov	r3, #21
   115d8:	b	1105c <__snprintf_chk@plt+0x578>
   115dc:	cmp	r3, #1
   115e0:	moveq	r3, #21
   115e4:	movne	r3, #98	; 0x62
   115e8:	b	1105c <__snprintf_chk@plt+0x578>
   115ec:	mov	r2, #1
   115f0:	b	11508 <__snprintf_chk@plt+0xa24>
   115f4:	movw	r3, #12756	; 0x31d4
   115f8:	movt	r3, #2
   115fc:	movw	r0, #7824	; 0x1e90
   11600:	mov	r1, #1
   11604:	ldr	r3, [r3]
   11608:	movt	r0, #1
   1160c:	mov	r2, #16
   11610:	bl	10a18 <fwrite@plt>
   11614:	mov	r3, #11
   11618:	b	1105c <__snprintf_chk@plt+0x578>
   1161c:	ldr	ip, [sp, #48]	; 0x30
   11620:	cmp	ip, #1
   11624:	movgt	r3, #6
   11628:	bgt	1105c <__snprintf_chk@plt+0x578>
   1162c:	movw	r1, #12756	; 0x31d4
   11630:	movt	r1, #2
   11634:	mov	r3, fp
   11638:	movw	r2, #7680	; 0x1e00
   1163c:	ldr	r0, [r1]
   11640:	movt	r2, #1
   11644:	mov	r1, #1
   11648:	bl	10a9c <__fprintf_chk@plt>
   1164c:	mov	r3, #6
   11650:	b	1105c <__snprintf_chk@plt+0x578>
   11654:	ldrb	r3, [sp, #82]	; 0x52
   11658:	cmp	r3, #32
   1165c:	beq	116d0 <__snprintf_chk@plt+0xbec>
   11660:	ldr	ip, [sp, #48]	; 0x30
   11664:	cmp	ip, #1
   11668:	movgt	r3, #5
   1166c:	bgt	1105c <__snprintf_chk@plt+0x578>
   11670:	movw	r1, #12756	; 0x31d4
   11674:	movt	r1, #2
   11678:	mov	r3, fp
   1167c:	movw	r2, #7592	; 0x1da8
   11680:	ldr	r0, [r1]
   11684:	movt	r2, #1
   11688:	mov	r1, #1
   1168c:	bl	10a9c <__fprintf_chk@plt>
   11690:	mov	r3, #5
   11694:	b	1105c <__snprintf_chk@plt+0x578>
   11698:	ldr	ip, [sp, #48]	; 0x30
   1169c:	cmp	ip, #1
   116a0:	movgt	r3, #3
   116a4:	bgt	1105c <__snprintf_chk@plt+0x578>
   116a8:	movw	r1, #12756	; 0x31d4
   116ac:	movt	r1, #2
   116b0:	mov	r3, fp
   116b4:	movw	r2, #7772	; 0x1e5c
   116b8:	ldr	r0, [r1]
   116bc:	movt	r2, #1
   116c0:	mov	r1, #1
   116c4:	bl	10a9c <__fprintf_chk@plt>
   116c8:	mov	r3, #3
   116cc:	b	1105c <__snprintf_chk@plt+0x578>
   116d0:	ldrb	r3, [sp, #83]	; 0x53
   116d4:	cmp	r3, #0
   116d8:	bne	11660 <__snprintf_chk@plt+0xb7c>
   116dc:	ldr	r4, [sp, #48]	; 0x30
   116e0:	cmp	r4, #1
   116e4:	movgt	r3, #9
   116e8:	bgt	1105c <__snprintf_chk@plt+0x578>
   116ec:	movw	r1, #12756	; 0x31d4
   116f0:	movt	r1, #2
   116f4:	mov	r3, fp
   116f8:	movw	r2, #7552	; 0x1d80
   116fc:	ldr	r0, [r1]
   11700:	movt	r2, #1
   11704:	mov	r1, #1
   11708:	bl	10a9c <__fprintf_chk@plt>
   1170c:	mov	r3, #9
   11710:	b	1105c <__snprintf_chk@plt+0x578>
   11714:	andeq	r3, r2, r0, lsr r1
   11718:	mov	fp, #0
   1171c:	mov	lr, #0
   11720:	pop	{r1}		; (ldr r1, [sp], #4)
   11724:	mov	r2, sp
   11728:	push	{r2}		; (str r2, [sp, #-4]!)
   1172c:	push	{r0}		; (str r0, [sp, #-4]!)
   11730:	ldr	ip, [pc, #16]	; 11748 <__snprintf_chk@plt+0xc64>
   11734:	push	{ip}		; (str ip, [sp, #-4]!)
   11738:	ldr	r0, [pc, #12]	; 1174c <__snprintf_chk@plt+0xc68>
   1173c:	ldr	r3, [pc, #12]	; 11750 <__snprintf_chk@plt+0xc6c>
   11740:	bl	10a3c <__libc_start_main@plt>
   11744:	bl	10acc <abort@plt>
   11748:			; <UNDEFINED> instruction: 0x000118b0
   1174c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11750:	andeq	r1, r1, ip, asr #16
   11754:	ldr	r3, [pc, #20]	; 11770 <__snprintf_chk@plt+0xc8c>
   11758:	ldr	r2, [pc, #20]	; 11774 <__snprintf_chk@plt+0xc90>
   1175c:	add	r3, pc, r3
   11760:	ldr	r2, [r3, r2]
   11764:	cmp	r2, #0
   11768:	bxeq	lr
   1176c:	b	10a48 <__gmon_start__@plt>
   11770:	muleq	r1, ip, r8
   11774:	andeq	r0, r0, r0, ror r0
   11778:	push	{r3, lr}
   1177c:	movw	r0, #12744	; 0x31c8
   11780:	ldr	r3, [pc, #36]	; 117ac <__snprintf_chk@plt+0xcc8>
   11784:	movt	r0, #2
   11788:	rsb	r3, r0, r3
   1178c:	cmp	r3, #6
   11790:	popls	{r3, pc}
   11794:	movw	r3, #0
   11798:	movt	r3, #0
   1179c:	cmp	r3, #0
   117a0:	popeq	{r3, pc}
   117a4:	blx	r3
   117a8:	pop	{r3, pc}
   117ac:	andeq	r3, r2, fp, asr #3
   117b0:	push	{r3, lr}
   117b4:	movw	r0, #12744	; 0x31c8
   117b8:	movw	r3, #12744	; 0x31c8
   117bc:	movt	r0, #2
   117c0:	movt	r3, #2
   117c4:	rsb	r3, r0, r3
   117c8:	asr	r3, r3, #2
   117cc:	add	r3, r3, r3, lsr #31
   117d0:	asrs	r1, r3, #1
   117d4:	popeq	{r3, pc}
   117d8:	movw	r2, #0
   117dc:	movt	r2, #0
   117e0:	cmp	r2, #0
   117e4:	popeq	{r3, pc}
   117e8:	blx	r2
   117ec:	pop	{r3, pc}
   117f0:	push	{r4, lr}
   117f4:	movw	r4, #12764	; 0x31dc
   117f8:	movt	r4, #2
   117fc:	ldrb	r3, [r4]
   11800:	cmp	r3, #0
   11804:	popne	{r4, pc}
   11808:	bl	11778 <__snprintf_chk@plt+0xc94>
   1180c:	mov	r3, #1
   11810:	strb	r3, [r4]
   11814:	pop	{r4, pc}
   11818:	movw	r0, #12028	; 0x2efc
   1181c:	movt	r0, #2
   11820:	push	{r3, lr}
   11824:	ldr	r3, [r0]
   11828:	cmp	r3, #0
   1182c:	beq	11844 <__snprintf_chk@plt+0xd60>
   11830:	movw	r3, #0
   11834:	movt	r3, #0
   11838:	cmp	r3, #0
   1183c:	beq	11844 <__snprintf_chk@plt+0xd60>
   11840:	blx	r3
   11844:	pop	{r3, lr}
   11848:	b	117b0 <__snprintf_chk@plt+0xccc>
   1184c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11850:	mov	r7, r0
   11854:	ldr	r6, [pc, #76]	; 118a8 <__snprintf_chk@plt+0xdc4>
   11858:	mov	r8, r1
   1185c:	ldr	r5, [pc, #72]	; 118ac <__snprintf_chk@plt+0xdc8>
   11860:	mov	r9, r2
   11864:	add	r6, pc, r6
   11868:	bl	109a4 <_init@@Base>
   1186c:	add	r5, pc, r5
   11870:	rsb	r6, r5, r6
   11874:	asrs	r6, r6, #2
   11878:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1187c:	sub	r5, r5, #4
   11880:	mov	r4, #0
   11884:	add	r4, r4, #1
   11888:	ldr	r3, [r5, #4]!
   1188c:	mov	r0, r7
   11890:	mov	r1, r8
   11894:	mov	r2, r9
   11898:	blx	r3
   1189c:	cmp	r4, r6
   118a0:	bne	11884 <__snprintf_chk@plt+0xda0>
   118a4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   118a8:	andeq	r1, r1, ip, lsl #13
   118ac:	andeq	r1, r1, r0, lsl #13
   118b0:	bx	lr

Disassembly of section .fini:

000118b4 <_fini@@Base>:
   118b4:	push	{r3, lr}
   118b8:	pop	{r3, pc}
