
centos-preinstalled/sg_write_long:     file format elf32-littlearm


Disassembly of section .init:

0001093c <_init@@Base>:
   1093c:	push	{r3, lr}
   10940:	bl	113bc <__snprintf_chk@plt+0x94c>
   10944:	pop	{r3, pc}

Disassembly of section .plt:

00010948 <sg_set_binary_mode@plt-0x14>:
   10948:	push	{lr}		; (str lr, [sp, #-4]!)
   1094c:	ldr	lr, [pc, #4]	; 10958 <_init@@Base+0x1c>
   10950:	add	lr, pc, lr
   10954:	ldr	pc, [lr, #8]!
   10958:	andeq	r1, r1, r8, lsr #13

0001095c <sg_set_binary_mode@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1704]!	; 0x6a8

00010968 <__read_chk@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1696]!	; 0x6a0

00010974 <free@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1688]!	; 0x698

00010980 <sg_cmds_close_device@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1680]!	; 0x690

0001098c <__stack_chk_fail@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1672]!	; 0x688

00010998 <perror@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1664]!	; 0x680

000109a4 <fwrite@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1656]!	; 0x678

000109b0 <open64@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1648]!	; 0x670

000109bc <malloc@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1640]!	; 0x668

000109c8 <__libc_start_main@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1632]!	; 0x660

000109d4 <__gmon_start__@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1624]!	; 0x658

000109e0 <getopt_long@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1616]!	; 0x650

000109ec <sg_ll_write_long16@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1608]!	; 0x648

000109f8 <sg_ll_write_long10@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1600]!	; 0x640

00010a04 <memset@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1592]!	; 0x638

00010a10 <strncpy@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1584]!	; 0x630

00010a1c <sg_get_llnum@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1576]!	; 0x628

00010a28 <__fprintf_chk@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1568]!	; 0x620

00010a34 <safe_strerror@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1560]!	; 0x618

00010a40 <sg_get_num@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1552]!	; 0x610

00010a4c <sg_cmds_open_device@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1544]!	; 0x608

00010a58 <abort@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1536]!	; 0x600

00010a64 <close@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a70 <__snprintf_chk@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1520]!	; 0x5f0

Disassembly of section .text:

00010a7c <.text>:
   10a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a80:	movw	r5, #8488	; 0x2128
   10a84:	movt	r5, #2
   10a88:	sub	sp, sp, #596	; 0x254
   10a8c:	mov	r7, r1
   10a90:	mov	r1, #0
   10a94:	ldr	r3, [r5]
   10a98:	mov	r4, r1
   10a9c:	movw	sl, #8504	; 0x2138
   10aa0:	add	r8, sp, #72	; 0x48
   10aa4:	movt	sl, #2
   10aa8:	mov	r6, r0
   10aac:	mov	r2, #256	; 0x100
   10ab0:	add	r0, sp, #76	; 0x4c
   10ab4:	mov	r9, r4
   10ab8:	mov	fp, #520	; 0x208
   10abc:	str	r3, [sp, #588]	; 0x24c
   10ac0:	bl	10a04 <memset@plt>
   10ac4:	str	r4, [sp, #56]	; 0x38
   10ac8:	str	r4, [sp, #64]	; 0x40
   10acc:	str	r4, [sp, #60]	; 0x3c
   10ad0:	str	r4, [sp, #44]	; 0x2c
   10ad4:	str	r4, [sp, #48]	; 0x30
   10ad8:	str	r4, [sp, #52]	; 0x34
   10adc:	str	r8, [sp]
   10ae0:	movw	r2, #5428	; 0x1534
   10ae4:	movw	r3, #8308	; 0x2074
   10ae8:	movt	r2, #1
   10aec:	movt	r3, #2
   10af0:	mov	r0, r6
   10af4:	mov	r1, r7
   10af8:	str	r9, [sp, #72]	; 0x48
   10afc:	bl	109e0 <getopt_long@plt>
   10b00:	cmn	r0, #1
   10b04:	beq	10d58 <__snprintf_chk@plt+0x2e8>
   10b08:	sub	r3, r0, #63	; 0x3f
   10b0c:	cmp	r3, #57	; 0x39
   10b10:	ldrls	pc, [pc, r3, lsl #2]
   10b14:	b	10d18 <__snprintf_chk@plt+0x2a8>
   10b18:	andeq	r0, r1, r0, lsr #25
   10b1c:	andeq	r0, r1, r8, lsl sp
   10b20:	andeq	r0, r1, r8, lsl sp
   10b24:	andeq	r0, r1, r8, lsl sp
   10b28:	andeq	r0, r1, r8, lsl sp
   10b2c:	andeq	r0, r1, r8, lsl sp
   10b30:	andeq	r0, r1, r8, lsl sp
   10b34:	andeq	r0, r1, r8, lsl sp
   10b38:	andeq	r0, r1, r8, lsl sp
   10b3c:	andeq	r0, r1, r8, lsl sp
   10b40:	andeq	r0, r1, r8, lsl sp
   10b44:	andeq	r0, r1, r8, lsl sp
   10b48:	andeq	r0, r1, r8, lsl sp
   10b4c:	andeq	r0, r1, r8, lsl sp
   10b50:	andeq	r0, r1, r8, lsl sp
   10b54:	andeq	r0, r1, r8, lsl sp
   10b58:	andeq	r0, r1, r8, lsl sp
   10b5c:	andeq	r0, r1, r8, lsl sp
   10b60:	andeq	r0, r1, r8, lsl sp
   10b64:	andeq	r0, r1, r8, lsl sp
   10b68:	muleq	r1, r4, ip
   10b6c:	andeq	r0, r1, r8, lsl sp
   10b70:	andeq	r0, r1, r8, lsl sp
   10b74:	andeq	r0, r1, r4, asr ip
   10b78:	andeq	r0, r1, r8, lsl sp
   10b7c:	andeq	r0, r1, r8, lsl sp
   10b80:	andeq	r0, r1, r8, lsl sp
   10b84:	andeq	r0, r1, r8, lsl sp
   10b88:	andeq	r0, r1, r8, lsl sp
   10b8c:	andeq	r0, r1, r8, lsl sp
   10b90:	andeq	r0, r1, r8, lsl sp
   10b94:	andeq	r0, r1, r8, lsl sp
   10b98:	andeq	r0, r1, r8, lsl sp
   10b9c:	andeq	r0, r1, r8, lsl sp
   10ba0:	andeq	r0, r1, r8, lsl sp
   10ba4:	andeq	r0, r1, r8, lsl sp
   10ba8:	andeq	r0, r1, r8, asr #24
   10bac:	andeq	r0, r1, r8, lsl sp
   10bb0:	andeq	r0, r1, r8, lsl sp
   10bb4:	andeq	r0, r1, r8, lsl sp
   10bb8:	andeq	r0, r1, r8, lsl sp
   10bbc:	andeq	r0, r1, r0, lsr #25
   10bc0:	andeq	r0, r1, r4, lsr ip
   10bc4:	andeq	r0, r1, r8, lsl sp
   10bc8:	andeq	r0, r1, r8, lsl sp
   10bcc:	andeq	r0, r1, ip, lsl #24
   10bd0:	andeq	r0, r1, r8, lsl sp
   10bd4:	andeq	r0, r1, r8, lsl sp
   10bd8:	andeq	r0, r1, r8, lsl sp
   10bdc:	andeq	r0, r1, r0, lsl #24
   10be0:	andeq	r0, r1, r8, lsl sp
   10be4:	andeq	r0, r1, r8, lsl sp
   10be8:	andeq	r0, r1, r8, lsl sp
   10bec:	andeq	r0, r1, r8, lsl sp
   10bf0:	andeq	r0, r1, r8, lsl sp
   10bf4:	andeq	r0, r1, r0, lsl sp
   10bf8:	andeq	r0, r1, r4, lsl #26
   10bfc:	andeq	r0, r1, r8, asr #25
   10c00:	mov	ip, #1
   10c04:	str	ip, [sp, #48]	; 0x30
   10c08:	b	10adc <__snprintf_chk@plt+0x6c>
   10c0c:	ldr	r0, [sl]
   10c10:	bl	10a1c <sg_get_llnum@plt>
   10c14:	mvn	r2, #0
   10c18:	mvn	r3, #0
   10c1c:	cmp	r1, r3
   10c20:	cmpeq	r0, r2
   10c24:	beq	11218 <__snprintf_chk@plt+0x7a8>
   10c28:	str	r0, [sp, #56]	; 0x38
   10c2c:	str	r1, [sp, #64]	; 0x40
   10c30:	b	10adc <__snprintf_chk@plt+0x6c>
   10c34:	add	r0, sp, #76	; 0x4c
   10c38:	ldr	r1, [sl]
   10c3c:	mov	r2, #256	; 0x100
   10c40:	bl	10a10 <strncpy@plt>
   10c44:	b	10adc <__snprintf_chk@plt+0x6c>
   10c48:	mov	ip, #1
   10c4c:	str	ip, [sp, #52]	; 0x34
   10c50:	b	10adc <__snprintf_chk@plt+0x6c>
   10c54:	movw	r1, #8500	; 0x2134
   10c58:	movt	r1, #2
   10c5c:	movw	r2, #6536	; 0x1988
   10c60:	movw	r3, #6564	; 0x19a4
   10c64:	ldr	r0, [r1]
   10c68:	movt	r2, #1
   10c6c:	movt	r3, #1
   10c70:	mov	r1, #1
   10c74:	bl	10a28 <__fprintf_chk@plt>
   10c78:	mov	r0, #0
   10c7c:	ldr	r2, [sp, #588]	; 0x24c
   10c80:	ldr	r3, [r5]
   10c84:	cmp	r2, r3
   10c88:	bne	112e4 <__snprintf_chk@plt+0x874>
   10c8c:	add	sp, sp, #596	; 0x254
   10c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c94:	mov	ip, #1
   10c98:	str	ip, [sp, #60]	; 0x3c
   10c9c:	b	10adc <__snprintf_chk@plt+0x6c>
   10ca0:	movw	r3, #8500	; 0x2134
   10ca4:	movt	r3, #2
   10ca8:	movw	r0, #5444	; 0x1544
   10cac:	mov	r1, #1
   10cb0:	ldr	r3, [r3]
   10cb4:	movt	r0, #1
   10cb8:	movw	r2, #1063	; 0x427
   10cbc:	bl	109a4 <fwrite@plt>
   10cc0:	mov	r0, #0
   10cc4:	b	10c7c <__snprintf_chk@plt+0x20c>
   10cc8:	ldr	r0, [sl]
   10ccc:	bl	10a40 <sg_get_num@plt>
   10cd0:	cmn	r0, #1
   10cd4:	mov	fp, r0
   10cd8:	bne	10adc <__snprintf_chk@plt+0x6c>
   10cdc:	movw	r3, #8500	; 0x2134
   10ce0:	movt	r3, #2
   10ce4:	movw	r0, #6580	; 0x19b4
   10ce8:	mov	r1, #1
   10cec:	ldr	r3, [r3]
   10cf0:	movt	r0, #1
   10cf4:	mov	r2, #29
   10cf8:	bl	109a4 <fwrite@plt>
   10cfc:	mov	r0, #1
   10d00:	b	10c7c <__snprintf_chk@plt+0x20c>
   10d04:	mov	ip, #1
   10d08:	str	ip, [sp, #44]	; 0x2c
   10d0c:	b	10adc <__snprintf_chk@plt+0x6c>
   10d10:	add	r4, r4, #1
   10d14:	b	10adc <__snprintf_chk@plt+0x6c>
   10d18:	movw	r4, #8500	; 0x2134
   10d1c:	movt	r4, #2
   10d20:	mov	r3, r0
   10d24:	movw	r2, #6612	; 0x19d4
   10d28:	ldr	r0, [r4]
   10d2c:	movt	r2, #1
   10d30:	mov	r1, #1
   10d34:	bl	10a28 <__fprintf_chk@plt>
   10d38:	ldr	r3, [r4]
   10d3c:	movw	r0, #5444	; 0x1544
   10d40:	mov	r1, #1
   10d44:	movt	r0, #1
   10d48:	movw	r2, #1063	; 0x427
   10d4c:	bl	109a4 <fwrite@plt>
   10d50:	mov	r0, #1
   10d54:	b	10c7c <__snprintf_chk@plt+0x20c>
   10d58:	movw	sl, #8496	; 0x2130
   10d5c:	movt	sl, #2
   10d60:	ldr	r2, [sl]
   10d64:	cmp	r6, r2
   10d68:	ble	10dc0 <__snprintf_chk@plt+0x350>
   10d6c:	add	r3, r2, #1
   10d70:	ldr	r9, [r7, r2, lsl #2]
   10d74:	cmp	r6, r3
   10d78:	str	r3, [sl]
   10d7c:	ble	10de4 <__snprintf_chk@plt+0x374>
   10d80:	movw	r8, #8500	; 0x2134
   10d84:	movt	r8, #2
   10d88:	ldr	r3, [r7, r3, lsl #2]
   10d8c:	movw	r2, #6672	; 0x1a10
   10d90:	ldr	r0, [r8]
   10d94:	movt	r2, #1
   10d98:	mov	r1, #1
   10d9c:	movw	r4, #8500	; 0x2134
   10da0:	bl	10a28 <__fprintf_chk@plt>
   10da4:	ldr	r3, [sl]
   10da8:	movt	r4, #2
   10dac:	add	r3, r3, #1
   10db0:	str	r3, [sl]
   10db4:	cmp	r6, r3
   10db8:	bgt	10d88 <__snprintf_chk@plt+0x318>
   10dbc:	b	10d38 <__snprintf_chk@plt+0x2c8>
   10dc0:	movw	r4, #8500	; 0x2134
   10dc4:	movt	r4, #2
   10dc8:	movw	r0, #6648	; 0x19f8
   10dcc:	mov	r1, #1
   10dd0:	ldr	r3, [r4]
   10dd4:	mov	r2, #21
   10dd8:	movt	r0, #1
   10ddc:	bl	109a4 <fwrite@plt>
   10de0:	b	10d38 <__snprintf_chk@plt+0x2c8>
   10de4:	cmp	r9, #0
   10de8:	beq	10dc0 <__snprintf_chk@plt+0x350>
   10dec:	ldr	ip, [sp, #44]	; 0x2c
   10df0:	cmp	ip, #0
   10df4:	bne	110b8 <__snprintf_chk@plt+0x648>
   10df8:	movw	r3, #9999	; 0x270f
   10dfc:	cmp	fp, r3
   10e00:	bgt	111ec <__snprintf_chk@plt+0x77c>
   10e04:	mov	r0, r9
   10e08:	ldr	r1, [sp, #44]	; 0x2c
   10e0c:	mov	r2, r4
   10e10:	bl	10a4c <sg_cmds_open_device@plt>
   10e14:	subs	r6, r0, #0
   10e18:	blt	11150 <__snprintf_chk@plt+0x6e0>
   10e1c:	movw	r0, #10000	; 0x2710
   10e20:	bl	109bc <malloc@plt>
   10e24:	subs	r7, r0, #0
   10e28:	beq	112bc <__snprintf_chk@plt+0x84c>
   10e2c:	mov	r1, #255	; 0xff
   10e30:	movw	r2, #10000	; 0x2710
   10e34:	bl	10a04 <memset@plt>
   10e38:	ldrb	r3, [sp, #76]	; 0x4c
   10e3c:	cmp	r3, #0
   10e40:	beq	10ef4 <__snprintf_chk@plt+0x484>
   10e44:	cmp	r3, #45	; 0x2d
   10e48:	bne	1127c <__snprintf_chk@plt+0x80c>
   10e4c:	ldrb	sl, [sp, #77]	; 0x4d
   10e50:	cmp	sl, #0
   10e54:	bne	1127c <__snprintf_chk@plt+0x80c>
   10e58:	mov	r0, sl
   10e5c:	bl	1095c <sg_set_binary_mode@plt>
   10e60:	cmp	r0, #0
   10e64:	movge	ip, #1
   10e68:	strge	ip, [sp, #68]	; 0x44
   10e6c:	blt	11368 <__snprintf_chk@plt+0x8f8>
   10e70:	mov	r0, sl
   10e74:	mov	r1, r7
   10e78:	mov	r2, fp
   10e7c:	movw	r3, #10000	; 0x2710
   10e80:	bl	10968 <__read_chk@plt>
   10e84:	cmp	r0, #0
   10e88:	blt	11320 <__snprintf_chk@plt+0x8b0>
   10e8c:	cmp	fp, r0
   10e90:	ble	10ee0 <__snprintf_chk@plt+0x470>
   10e94:	movw	ip, #8500	; 0x2134
   10e98:	movt	ip, #2
   10e9c:	add	r1, sp, #76	; 0x4c
   10ea0:	str	r0, [sp, #4]
   10ea4:	str	r1, [sp]
   10ea8:	mov	r3, fp
   10eac:	ldr	r0, [ip]
   10eb0:	mov	r1, #1
   10eb4:	movw	r2, #6976	; 0x1b40
   10eb8:	movt	r2, #1
   10ebc:	str	ip, [sp, #40]	; 0x28
   10ec0:	bl	10a28 <__fprintf_chk@plt>
   10ec4:	ldr	ip, [sp, #40]	; 0x28
   10ec8:	movw	r0, #7024	; 0x1b70
   10ecc:	mov	r1, #1
   10ed0:	movt	r0, #1
   10ed4:	mov	r2, #33	; 0x21
   10ed8:	ldr	r3, [ip]
   10edc:	bl	109a4 <fwrite@plt>
   10ee0:	ldr	ip, [sp, #68]	; 0x44
   10ee4:	cmp	ip, #0
   10ee8:	bne	10ef4 <__snprintf_chk@plt+0x484>
   10eec:	mov	r0, sl
   10ef0:	bl	10a64 <close@plt>
   10ef4:	cmp	r4, #0
   10ef8:	bne	11188 <__snprintf_chk@plt+0x718>
   10efc:	ldr	ip, [sp, #60]	; 0x3c
   10f00:	cmp	ip, #0
   10f04:	beq	1110c <__snprintf_chk@plt+0x69c>
   10f08:	ldr	ip, [sp, #56]	; 0x38
   10f0c:	mov	r0, r6
   10f10:	ldr	r3, [sp, #48]	; 0x30
   10f14:	str	r4, [sp, #24]
   10f18:	str	ip, [sp]
   10f1c:	ldr	ip, [sp, #64]	; 0x40
   10f20:	ldr	r1, [sp, #52]	; 0x34
   10f24:	ldr	r2, [sp, #44]	; 0x2c
   10f28:	str	ip, [sp, #4]
   10f2c:	mov	ip, #1
   10f30:	str	r7, [sp, #8]
   10f34:	str	fp, [sp, #12]
   10f38:	str	r8, [sp, #16]
   10f3c:	str	ip, [sp, #20]
   10f40:	bl	109ec <sg_ll_write_long16@plt>
   10f44:	movw	r3, #5420	; 0x152c
   10f48:	movt	r3, #1
   10f4c:	mov	r4, r0
   10f50:	cmp	r4, #17
   10f54:	ldrls	pc, [pc, r4, lsl #2]
   10f58:	b	10fa4 <__snprintf_chk@plt+0x534>
   10f5c:	andeq	r0, r1, r0, asr #31
   10f60:	andeq	r0, r1, r4, lsr #31
   10f64:	andeq	r1, r1, r8, ror r0
   10f68:	andeq	r0, r1, r4, lsr #31
   10f6c:	andeq	r0, r1, r4, lsr #31
   10f70:	andeq	r1, r1, r8, asr r0
   10f74:	andeq	r1, r1, r8, lsr r0
   10f78:	andeq	r0, r1, r4, lsr #31
   10f7c:	andeq	r0, r1, r4, lsr #31
   10f80:	andeq	r1, r1, r8, lsl r0
   10f84:	andeq	r0, r1, r4, lsr #31
   10f88:	muleq	r1, r8, r0
   10f8c:	andeq	r0, r1, r4, lsr #31
   10f90:	andeq	r0, r1, r4, lsr #31
   10f94:	andeq	r0, r1, r4, lsr #31
   10f98:	andeq	r0, r1, r4, lsr #31
   10f9c:	andeq	r0, r1, r4, lsr #31
   10fa0:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fa4:	movw	r1, #8500	; 0x2134
   10fa8:	movt	r1, #2
   10fac:	movw	r2, #7476	; 0x1d34
   10fb0:	movt	r2, #1
   10fb4:	ldr	r0, [r1]
   10fb8:	mov	r1, #1
   10fbc:	bl	10a28 <__fprintf_chk@plt>
   10fc0:	cmp	r7, #0
   10fc4:	beq	10fd0 <__snprintf_chk@plt+0x560>
   10fc8:	mov	r0, r7
   10fcc:	bl	10974 <free@plt>
   10fd0:	mov	r0, r6
   10fd4:	bl	10980 <sg_cmds_close_device@plt>
   10fd8:	cmp	r0, #0
   10fdc:	blt	11240 <__snprintf_chk@plt+0x7d0>
   10fe0:	cmp	r4, #0
   10fe4:	movge	r0, r4
   10fe8:	movlt	r0, #99	; 0x63
   10fec:	b	10c7c <__snprintf_chk@plt+0x20c>
   10ff0:	ldr	r3, [sp, #72]	; 0x48
   10ff4:	movw	r1, #8500	; 0x2134
   10ff8:	movt	r1, #2
   10ffc:	movw	r2, #7424	; 0x1d00
   11000:	rsb	r3, r3, fp
   11004:	movt	r2, #1
   11008:	ldr	r0, [r1]
   1100c:	mov	r1, #1
   11010:	bl	10a28 <__fprintf_chk@plt>
   11014:	b	10fc0 <__snprintf_chk@plt+0x550>
   11018:	movw	r1, #8500	; 0x2134
   1101c:	movt	r1, #2
   11020:	movw	r2, #7324	; 0x1c9c
   11024:	movt	r2, #1
   11028:	ldr	r0, [r1]
   1102c:	mov	r1, #1
   11030:	bl	10a28 <__fprintf_chk@plt>
   11034:	b	10fc0 <__snprintf_chk@plt+0x550>
   11038:	movw	r1, #8500	; 0x2134
   1103c:	movt	r1, #2
   11040:	movw	r2, #7240	; 0x1c48
   11044:	movt	r2, #1
   11048:	ldr	r0, [r1]
   1104c:	mov	r1, #1
   11050:	bl	10a28 <__fprintf_chk@plt>
   11054:	b	10fc0 <__snprintf_chk@plt+0x550>
   11058:	movw	r1, #8500	; 0x2134
   1105c:	movt	r1, #2
   11060:	movw	r2, #7372	; 0x1ccc
   11064:	movt	r2, #1
   11068:	ldr	r0, [r1]
   1106c:	mov	r1, #1
   11070:	bl	10a28 <__fprintf_chk@plt>
   11074:	b	10fc0 <__snprintf_chk@plt+0x550>
   11078:	movw	r1, #8500	; 0x2134
   1107c:	movt	r1, #2
   11080:	movw	r2, #7188	; 0x1c14
   11084:	movt	r2, #1
   11088:	ldr	r0, [r1]
   1108c:	mov	r1, #1
   11090:	bl	10a28 <__fprintf_chk@plt>
   11094:	b	10fc0 <__snprintf_chk@plt+0x550>
   11098:	movw	r1, #8500	; 0x2134
   1109c:	movt	r1, #2
   110a0:	movw	r2, #7280	; 0x1c70
   110a4:	movt	r2, #1
   110a8:	ldr	r0, [r1]
   110ac:	mov	r1, #1
   110b0:	bl	10a28 <__fprintf_chk@plt>
   110b4:	b	10fc0 <__snprintf_chk@plt+0x550>
   110b8:	mov	r0, r9
   110bc:	mov	r1, #0
   110c0:	mov	r2, r4
   110c4:	bl	10a4c <sg_cmds_open_device@plt>
   110c8:	subs	r6, r0, #0
   110cc:	blt	11150 <__snprintf_chk@plt+0x6e0>
   110d0:	ldrb	fp, [sp, #76]	; 0x4c
   110d4:	cmp	fp, #0
   110d8:	moveq	r7, fp
   110dc:	beq	10ef4 <__snprintf_chk@plt+0x484>
   110e0:	movw	r3, #8500	; 0x2134
   110e4:	movt	r3, #2
   110e8:	movw	r0, #6780	; 0x1a7c
   110ec:	mov	r1, #1
   110f0:	ldr	r3, [r3]
   110f4:	movt	r0, #1
   110f8:	mov	r2, #55	; 0x37
   110fc:	mov	fp, #0
   11100:	bl	109a4 <fwrite@plt>
   11104:	mov	r7, fp
   11108:	b	10ef4 <__snprintf_chk@plt+0x484>
   1110c:	ldr	ip, [sp, #56]	; 0x38
   11110:	mov	r0, r6
   11114:	ldr	r3, [sp, #48]	; 0x30
   11118:	str	r4, [sp, #20]
   1111c:	str	ip, [sp]
   11120:	mov	ip, #1
   11124:	ldr	r1, [sp, #52]	; 0x34
   11128:	str	r7, [sp, #4]
   1112c:	ldr	r2, [sp, #44]	; 0x2c
   11130:	str	fp, [sp, #8]
   11134:	str	r8, [sp, #12]
   11138:	str	ip, [sp, #16]
   1113c:	bl	109f8 <sg_ll_write_long10@plt>
   11140:	movw	r3, #5424	; 0x1530
   11144:	movt	r3, #1
   11148:	mov	r4, r0
   1114c:	b	10f50 <__snprintf_chk@plt+0x4e0>
   11150:	movw	r3, #8500	; 0x2134
   11154:	movt	r3, #2
   11158:	rsb	r0, r6, #0
   1115c:	ldr	r4, [r3]
   11160:	bl	10a34 <safe_strerror@plt>
   11164:	mov	r3, r9
   11168:	movw	r2, #6744	; 0x1a58
   1116c:	mov	r1, #1
   11170:	movt	r2, #1
   11174:	str	r0, [sp]
   11178:	mov	r0, r4
   1117c:	bl	10a28 <__fprintf_chk@plt>
   11180:	mov	r0, #15
   11184:	b	10c7c <__snprintf_chk@plt+0x20c>
   11188:	ldr	ip, [sp, #56]	; 0x38
   1118c:	movw	r0, #8500	; 0x2134
   11190:	movt	r0, #2
   11194:	str	fp, [sp]
   11198:	str	fp, [sp, #4]
   1119c:	mov	r3, r9
   111a0:	str	ip, [sp, #8]
   111a4:	movw	r2, #7060	; 0x1b94
   111a8:	ldr	ip, [sp, #64]	; 0x40
   111ac:	movt	r2, #1
   111b0:	mov	r1, #1
   111b4:	str	ip, [sp, #12]
   111b8:	ldr	ip, [sp, #56]	; 0x38
   111bc:	str	ip, [sp, #16]
   111c0:	ldr	ip, [sp, #64]	; 0x40
   111c4:	str	ip, [sp, #20]
   111c8:	ldr	ip, [sp, #52]	; 0x34
   111cc:	str	ip, [sp, #24]
   111d0:	ldr	ip, [sp, #44]	; 0x2c
   111d4:	str	ip, [sp, #28]
   111d8:	ldr	ip, [sp, #48]	; 0x30
   111dc:	str	ip, [sp, #32]
   111e0:	ldr	r0, [r0]
   111e4:	bl	10a28 <__fprintf_chk@plt>
   111e8:	b	10efc <__snprintf_chk@plt+0x48c>
   111ec:	movw	r4, #8500	; 0x2134
   111f0:	movt	r4, #2
   111f4:	movw	r1, #10000	; 0x2710
   111f8:	mov	r3, fp
   111fc:	ldr	r0, [r4]
   11200:	movw	r2, #6704	; 0x1a30
   11204:	str	r1, [sp]
   11208:	movt	r2, #1
   1120c:	mov	r1, #1
   11210:	bl	10a28 <__fprintf_chk@plt>
   11214:	b	10d38 <__snprintf_chk@plt+0x2c8>
   11218:	movw	r3, #8500	; 0x2134
   1121c:	movt	r3, #2
   11220:	movw	r0, #6508	; 0x196c
   11224:	mov	r1, #1
   11228:	ldr	r3, [r3]
   1122c:	movt	r0, #1
   11230:	mov	r2, #24
   11234:	bl	109a4 <fwrite@plt>
   11238:	mov	r0, #1
   1123c:	b	10c7c <__snprintf_chk@plt+0x20c>
   11240:	movw	r3, #8500	; 0x2134
   11244:	movt	r3, #2
   11248:	rsb	r0, r0, #0
   1124c:	ldr	r6, [r3]
   11250:	bl	10a34 <safe_strerror@plt>
   11254:	movw	r2, #7516	; 0x1d5c
   11258:	mov	r1, #1
   1125c:	movt	r2, #1
   11260:	mov	r3, r0
   11264:	mov	r0, r6
   11268:	bl	10a28 <__fprintf_chk@plt>
   1126c:	cmp	r4, #0
   11270:	bne	10fe0 <__snprintf_chk@plt+0x570>
   11274:	mov	r0, #15
   11278:	b	10c7c <__snprintf_chk@plt+0x20c>
   1127c:	add	r0, sp, #76	; 0x4c
   11280:	mov	r1, #0
   11284:	bl	109b0 <open64@plt>
   11288:	subs	sl, r0, #0
   1128c:	blt	112e8 <__snprintf_chk@plt+0x878>
   11290:	bl	1095c <sg_set_binary_mode@plt>
   11294:	cmp	r0, #0
   11298:	movge	ip, #0
   1129c:	strge	ip, [sp, #68]	; 0x44
   112a0:	bge	10e70 <__snprintf_chk@plt+0x400>
   112a4:	movw	r0, #6868	; 0x1ad4
   112a8:	movt	r0, #1
   112ac:	bl	10998 <perror@plt>
   112b0:	mov	ip, #0
   112b4:	str	ip, [sp, #68]	; 0x44
   112b8:	b	10e70 <__snprintf_chk@plt+0x400>
   112bc:	movw	r3, #8500	; 0x2134
   112c0:	movt	r3, #2
   112c4:	movw	r0, #6836	; 0x1ab4
   112c8:	mov	r1, #1
   112cc:	ldr	r3, [r3]
   112d0:	mov	r2, #29
   112d4:	movt	r0, #1
   112d8:	mov	r4, #15
   112dc:	bl	109a4 <fwrite@plt>
   112e0:	b	10fd0 <__snprintf_chk@plt+0x560>
   112e4:	bl	1098c <__stack_chk_fail@plt>
   112e8:	mov	r1, #256	; 0x100
   112ec:	add	r2, sp, #76	; 0x4c
   112f0:	add	r0, sp, #332	; 0x14c
   112f4:	str	r2, [sp, #4]
   112f8:	mov	r3, r1
   112fc:	movw	r2, #6888	; 0x1ae8
   11300:	movt	r2, #1
   11304:	str	r2, [sp]
   11308:	mov	r2, #1
   1130c:	bl	10a70 <__snprintf_chk@plt>
   11310:	add	r0, sp, #332	; 0x14c
   11314:	bl	10998 <perror@plt>
   11318:	mov	r4, #1
   1131c:	b	10fc8 <__snprintf_chk@plt+0x558>
   11320:	mov	r1, #256	; 0x100
   11324:	add	r2, sp, #76	; 0x4c
   11328:	mov	r3, r1
   1132c:	str	r2, [sp, #4]
   11330:	add	r0, sp, #332	; 0x14c
   11334:	movw	r2, #6936	; 0x1b18
   11338:	movt	r2, #1
   1133c:	str	r2, [sp]
   11340:	mov	r2, #1
   11344:	bl	10a70 <__snprintf_chk@plt>
   11348:	add	r0, sp, #332	; 0x14c
   1134c:	bl	10998 <perror@plt>
   11350:	ldr	ip, [sp, #68]	; 0x44
   11354:	cmp	ip, #0
   11358:	bne	11318 <__snprintf_chk@plt+0x8a8>
   1135c:	mov	r0, sl
   11360:	bl	10a64 <close@plt>
   11364:	b	11318 <__snprintf_chk@plt+0x8a8>
   11368:	movw	r0, #6868	; 0x1ad4
   1136c:	movt	r0, #1
   11370:	bl	10998 <perror@plt>
   11374:	mov	ip, #1
   11378:	str	ip, [sp, #68]	; 0x44
   1137c:	b	10e70 <__snprintf_chk@plt+0x400>
   11380:	mov	fp, #0
   11384:	mov	lr, #0
   11388:	pop	{r1}		; (ldr r1, [sp], #4)
   1138c:	mov	r2, sp
   11390:	push	{r2}		; (str r2, [sp, #-4]!)
   11394:	push	{r0}		; (str r0, [sp, #-4]!)
   11398:	ldr	ip, [pc, #16]	; 113b0 <__snprintf_chk@plt+0x940>
   1139c:	push	{ip}		; (str ip, [sp, #-4]!)
   113a0:	ldr	r0, [pc, #12]	; 113b4 <__snprintf_chk@plt+0x944>
   113a4:	ldr	r3, [pc, #12]	; 113b8 <__snprintf_chk@plt+0x948>
   113a8:	bl	109c8 <__libc_start_main@plt>
   113ac:	bl	10a58 <abort@plt>
   113b0:	andeq	r1, r1, r8, lsl r5
   113b4:	andeq	r0, r1, ip, ror sl
   113b8:			; <UNDEFINED> instruction: 0x000114b4
   113bc:	ldr	r3, [pc, #20]	; 113d8 <__snprintf_chk@plt+0x968>
   113c0:	ldr	r2, [pc, #20]	; 113dc <__snprintf_chk@plt+0x96c>
   113c4:	add	r3, pc, r3
   113c8:	ldr	r2, [r3, r2]
   113cc:	cmp	r2, #0
   113d0:	bxeq	lr
   113d4:	b	109d4 <__gmon_start__@plt>
   113d8:	andeq	r0, r1, r4, lsr ip
   113dc:	andeq	r0, r0, ip, rrx
   113e0:	push	{r3, lr}
   113e4:	movw	r0, #8484	; 0x2124
   113e8:	ldr	r3, [pc, #36]	; 11414 <__snprintf_chk@plt+0x9a4>
   113ec:	movt	r0, #2
   113f0:	rsb	r3, r0, r3
   113f4:	cmp	r3, #6
   113f8:	popls	{r3, pc}
   113fc:	movw	r3, #0
   11400:	movt	r3, #0
   11404:	cmp	r3, #0
   11408:	popeq	{r3, pc}
   1140c:	blx	r3
   11410:	pop	{r3, pc}
   11414:	andeq	r2, r2, r7, lsr #2
   11418:	push	{r3, lr}
   1141c:	movw	r0, #8484	; 0x2124
   11420:	movw	r3, #8484	; 0x2124
   11424:	movt	r0, #2
   11428:	movt	r3, #2
   1142c:	rsb	r3, r0, r3
   11430:	asr	r3, r3, #2
   11434:	add	r3, r3, r3, lsr #31
   11438:	asrs	r1, r3, #1
   1143c:	popeq	{r3, pc}
   11440:	movw	r2, #0
   11444:	movt	r2, #0
   11448:	cmp	r2, #0
   1144c:	popeq	{r3, pc}
   11450:	blx	r2
   11454:	pop	{r3, pc}
   11458:	push	{r4, lr}
   1145c:	movw	r4, #8508	; 0x213c
   11460:	movt	r4, #2
   11464:	ldrb	r3, [r4]
   11468:	cmp	r3, #0
   1146c:	popne	{r4, pc}
   11470:	bl	113e0 <__snprintf_chk@plt+0x970>
   11474:	mov	r3, #1
   11478:	strb	r3, [r4]
   1147c:	pop	{r4, pc}
   11480:	movw	r0, #7932	; 0x1efc
   11484:	movt	r0, #2
   11488:	push	{r3, lr}
   1148c:	ldr	r3, [r0]
   11490:	cmp	r3, #0
   11494:	beq	114ac <__snprintf_chk@plt+0xa3c>
   11498:	movw	r3, #0
   1149c:	movt	r3, #0
   114a0:	cmp	r3, #0
   114a4:	beq	114ac <__snprintf_chk@plt+0xa3c>
   114a8:	blx	r3
   114ac:	pop	{r3, lr}
   114b0:	b	11418 <__snprintf_chk@plt+0x9a8>
   114b4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   114b8:	mov	r7, r0
   114bc:	ldr	r6, [pc, #76]	; 11510 <__snprintf_chk@plt+0xaa0>
   114c0:	mov	r8, r1
   114c4:	ldr	r5, [pc, #72]	; 11514 <__snprintf_chk@plt+0xaa4>
   114c8:	mov	r9, r2
   114cc:	add	r6, pc, r6
   114d0:	bl	1093c <_init@@Base>
   114d4:	add	r5, pc, r5
   114d8:	rsb	r6, r5, r6
   114dc:	asrs	r6, r6, #2
   114e0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   114e4:	sub	r5, r5, #4
   114e8:	mov	r4, #0
   114ec:	add	r4, r4, #1
   114f0:	ldr	r3, [r5, #4]!
   114f4:	mov	r0, r7
   114f8:	mov	r1, r8
   114fc:	mov	r2, r9
   11500:	blx	r3
   11504:	cmp	r4, r6
   11508:	bne	114ec <__snprintf_chk@plt+0xa7c>
   1150c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11510:	andeq	r0, r1, r4, lsr #20
   11514:	andeq	r0, r1, r8, lsl sl
   11518:	bx	lr

Disassembly of section .fini:

0001151c <_fini@@Base>:
   1151c:	push	{r3, lr}
   11520:	pop	{r3, pc}
