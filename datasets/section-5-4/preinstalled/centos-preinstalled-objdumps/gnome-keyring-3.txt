
centos-preinstalled/gnome-keyring-3:     file format elf32-littlearm


Disassembly of section .init:

00001124 <_init@@Base>:
    1124:	push	{r3, lr}
    1128:	bl	1544 <main@@Base+0x154>
    112c:	pop	{r3, pc}

Disassembly of section .plt:

00001130 <gcr_pkcs11_initialize@plt-0x14>:
    1130:	push	{lr}		; (str lr, [sp, #-4]!)
    1134:	ldr	lr, [pc, #4]	; 1140 <_init@@Base+0x1c>
    1138:	add	lr, pc, lr
    113c:	ldr	pc, [lr, #8]!
    1140:	andeq	r1, r1, r8, lsr #27

00001144 <gcr_pkcs11_initialize@plt>:
    1144:	add	ip, pc, #0, 12
    1148:	add	ip, ip, #69632	; 0x11000
    114c:	ldr	pc, [ip, #3496]!	; 0xda8

00001150 <gcr_parser_parse_stream@plt>:
    1150:	add	ip, pc, #0, 12
    1154:	add	ip, ip, #69632	; 0x11000
    1158:	ldr	pc, [ip, #3488]!	; 0xda0

0000115c <g_option_context_parse@plt>:
    115c:	add	ip, pc, #0, 12
    1160:	add	ip, ip, #69632	; 0x11000
    1164:	ldr	pc, [ip, #3480]!	; 0xd98

00001168 <gcr_parser_new@plt>:
    1168:	add	ip, pc, #0, 12
    116c:	add	ip, ip, #69632	; 0x11000
    1170:	ldr	pc, [ip, #3472]!	; 0xd90

00001174 <g_return_if_fail_warning@plt>:
    1174:	add	ip, pc, #0, 12
    1178:	add	ip, ip, #69632	; 0x11000
    117c:	ldr	pc, [ip, #3464]!	; 0xd88

00001180 <g_file_new_for_commandline_arg@plt>:
    1180:	add	ip, pc, #0, 12
    1184:	add	ip, ip, #69632	; 0x11000
    1188:	ldr	pc, [ip, #3456]!	; 0xd80

0000118c <gcr_importer_import@plt>:
    118c:	add	ip, pc, #0, 12
    1190:	add	ip, ip, #69632	; 0x11000
    1194:	ldr	pc, [ip, #3448]!	; 0xd78

00001198 <gck_list_get_boxed_type@plt>:
    1198:	add	ip, pc, #0, 12
    119c:	add	ip, ip, #69632	; 0x11000
    11a0:	ldr	pc, [ip, #3440]!	; 0xd70

000011a4 <bind_textdomain_codeset@plt>:
    11a4:	add	ip, pc, #0, 12
    11a8:	add	ip, ip, #69632	; 0x11000
    11ac:	ldr	pc, [ip, #3432]!	; 0xd68

000011b0 <g_ascii_toupper@plt>:
    11b0:	add	ip, pc, #0, 12
    11b4:	add	ip, ip, #69632	; 0x11000
    11b8:	ldr	pc, [ip, #3424]!	; 0xd60

000011bc <g_type_check_instance_cast@plt>:
    11bc:	add	ip, pc, #0, 12
    11c0:	add	ip, ip, #69632	; 0x11000
    11c4:	ldr	pc, [ip, #3416]!	; 0xd58

000011c8 <g_option_context_new@plt>:
    11c8:	add	ip, pc, #0, 12
    11cc:	add	ip, ip, #69632	; 0x11000
    11d0:	ldr	pc, [ip, #3408]!	; 0xd50

000011d4 <g_printerr@plt>:
    11d4:	add	ip, pc, #0, 12
    11d8:	add	ip, ip, #69632	; 0x11000
    11dc:	ldr	pc, [ip, #3400]!	; 0xd48

000011e0 <g_file_read@plt>:
    11e0:	add	ip, pc, #0, 12
    11e4:	add	ip, ip, #69632	; 0x11000
    11e8:	ldr	pc, [ip, #3392]!	; 0xd40

000011ec <gck_attributes_find@plt>:
    11ec:	add	ip, pc, #0, 12
    11f0:	add	ip, ip, #69632	; 0x11000
    11f4:	ldr	pc, [ip, #3384]!	; 0xd38

000011f8 <textdomain@plt>:
    11f8:	add	ip, pc, #0, 12
    11fc:	add	ip, ip, #69632	; 0x11000
    1200:	ldr	pc, [ip, #3376]!	; 0xd30

00001204 <g_strdup@plt>:
    1204:	add	ip, pc, #0, 12
    1208:	add	ip, ip, #69632	; 0x11000
    120c:	ldr	pc, [ip, #3368]!	; 0xd28

00001210 <gck_attributes_find_ulong@plt>:
    1210:	add	ip, pc, #0, 12
    1214:	add	ip, ip, #69632	; 0x11000
    1218:	ldr	pc, [ip, #3360]!	; 0xd20

0000121c <gcr_parser_get_parsed@plt>:
    121c:	add	ip, pc, #0, 12
    1220:	add	ip, ip, #69632	; 0x11000
    1224:	ldr	pc, [ip, #3352]!	; 0xd18

00001228 <abort@plt>:
    1228:	add	ip, pc, #0, 12
    122c:	add	ip, ip, #69632	; 0x11000
    1230:	ldr	pc, [ip, #3344]!	; 0xd10

00001234 <gcr_importer_queue_and_filter_for_parsed@plt>:
    1234:	add	ip, pc, #0, 12
    1238:	add	ip, ip, #69632	; 0x11000
    123c:	ldr	pc, [ip, #3336]!	; 0xd08

00001240 <g_string_insert_c@plt>:
    1240:	add	ip, pc, #0, 12
    1244:	add	ip, ip, #69632	; 0x11000
    1248:	ldr	pc, [ip, #3328]!	; 0xd00

0000124c <g_signal_connect_data@plt>:
    124c:	add	ip, pc, #0, 12
    1250:	add	ip, ip, #69632	; 0x11000
    1254:	ldr	pc, [ip, #3320]!	; 0xcf8

00001258 <gck_attributes_unref@plt>:
    1258:	add	ip, pc, #0, 12
    125c:	add	ip, ip, #69632	; 0x11000
    1260:	ldr	pc, [ip, #3312]!	; 0xcf0

00001264 <gck_attributes_find_string@plt>:
    1264:	add	ip, pc, #0, 12
    1268:	add	ip, ip, #69632	; 0x11000
    126c:	ldr	pc, [ip, #3304]!	; 0xce8

00001270 <gck_object_get_full@plt>:
    1270:	add	ip, pc, #0, 12
    1274:	add	ip, ip, #69632	; 0x11000
    1278:	ldr	pc, [ip, #3296]!	; 0xce0

0000127c <g_strfreev@plt>:
    127c:	add	ip, pc, #0, 12
    1280:	add	ip, ip, #69632	; 0x11000
    1284:	ldr	pc, [ip, #3288]!	; 0xcd8

00001288 <g_string_sized_new@plt>:
    1288:	add	ip, pc, #0, 12
    128c:	add	ip, ip, #69632	; 0x11000
    1290:	ldr	pc, [ip, #3280]!	; 0xcd0

00001294 <g_option_context_free@plt>:
    1294:	add	ip, pc, #0, 12
    1298:	add	ip, ip, #69632	; 0x11000
    129c:	ldr	pc, [ip, #3272]!	; 0xcc8

000012a0 <__stack_chk_fail@plt>:
    12a0:	add	ip, pc, #0, 12
    12a4:	add	ip, ip, #69632	; 0x11000
    12a8:	ldr	pc, [ip, #3264]!	; 0xcc0

000012ac <gcr_importer_create_for_parsed@plt>:
    12ac:	add	ip, pc, #0, 12
    12b0:	add	ip, ip, #69632	; 0x11000
    12b4:	ldr	pc, [ip, #3256]!	; 0xcb8

000012b8 <g_free@plt>:
    12b8:	add	ip, pc, #0, 12
    12bc:	add	ip, ip, #69632	; 0x11000
    12c0:	ldr	pc, [ip, #3248]!	; 0xcb0

000012c4 <dcgettext@plt>:
    12c4:	add	ip, pc, #0, 12
    12c8:	add	ip, ip, #69632	; 0x11000
    12cc:	ldr	pc, [ip, #3240]!	; 0xca8

000012d0 <g_object_get@plt>:
    12d0:	add	ip, pc, #0, 12
    12d4:	add	ip, ip, #69632	; 0x11000
    12d8:	ldr	pc, [ip, #3232]!	; 0xca0

000012dc <raise@plt>:
    12dc:	add	ip, pc, #0, 12
    12e0:	add	ip, ip, #69632	; 0x11000
    12e4:	ldr	pc, [ip, #3224]!	; 0xc98

000012e8 <g_print@plt>:
    12e8:	add	ip, pc, #0, 12
    12ec:	add	ip, ip, #69632	; 0x11000
    12f0:	ldr	pc, [ip, #3216]!	; 0xc90

000012f4 <g_object_class_find_property@plt>:
    12f4:	add	ip, pc, #0, 12
    12f8:	add	ip, ip, #69632	; 0x11000
    12fc:	ldr	pc, [ip, #3208]!	; 0xc88

00001300 <bindtextdomain@plt>:
    1300:	add	ip, pc, #0, 12
    1304:	add	ip, ip, #69632	; 0x11000
    1308:	ldr	pc, [ip, #3200]!	; 0xc80

0000130c <setlocale@plt>:
    130c:	add	ip, pc, #0, 12
    1310:	add	ip, ip, #69632	; 0x11000
    1314:	ldr	pc, [ip, #3192]!	; 0xc78

00001318 <g_clear_error@plt>:
    1318:	add	ip, pc, #0, 12
    131c:	add	ip, ip, #69632	; 0x11000
    1320:	ldr	pc, [ip, #3184]!	; 0xc70

00001324 <g_option_context_add_main_entries@plt>:
    1324:	add	ip, pc, #0, 12
    1328:	add	ip, ip, #69632	; 0x11000
    132c:	ldr	pc, [ip, #3176]!	; 0xc68

00001330 <g_string_free@plt>:
    1330:	add	ip, pc, #0, 12
    1334:	add	ip, ip, #69632	; 0x11000
    1338:	ldr	pc, [ip, #3168]!	; 0xc60

0000133c <g_strv_get_type@plt>:
    133c:	add	ip, pc, #0, 12
    1340:	add	ip, ip, #69632	; 0x11000
    1344:	ldr	pc, [ip, #3160]!	; 0xc58

00001348 <g_object_unref@plt>:
    1348:	add	ip, pc, #0, 12
    134c:	add	ip, ip, #69632	; 0x11000
    1350:	ldr	pc, [ip, #3152]!	; 0xc50

00001354 <strlen@plt>:
    1354:	add	ip, pc, #0, 12
    1358:	add	ip, ip, #69632	; 0x11000
    135c:	ldr	pc, [ip, #3144]!	; 0xc48

00001360 <g_strdup_vprintf@plt>:
    1360:	add	ip, pc, #0, 12
    1364:	add	ip, ip, #69632	; 0x11000
    1368:	ldr	pc, [ip, #3136]!	; 0xc40

0000136c <g_malloc0@plt>:
    136c:	add	ip, pc, #0, 12
    1370:	add	ip, ip, #69632	; 0x11000
    1374:	ldr	pc, [ip, #3128]!	; 0xc38

00001378 <strcmp@plt>:
    1378:	add	ip, pc, #0, 12
    137c:	add	ip, ip, #69632	; 0x11000
    1380:	ldr	pc, [ip, #3120]!	; 0xc30

00001384 <g_input_stream_get_type@plt>:
    1384:	add	ip, pc, #0, 12
    1388:	add	ip, ip, #69632	; 0x11000
    138c:	ldr	pc, [ip, #3112]!	; 0xc28

00001390 <gck_list_unref_free@plt>:
    1390:	add	ip, pc, #0, 12
    1394:	add	ip, ip, #69632	; 0x11000
    1398:	ldr	pc, [ip, #3104]!	; 0xc20

0000139c <g_assertion_message_expr@plt>:
    139c:	add	ip, pc, #0, 12
    13a0:	add	ip, ip, #69632	; 0x11000
    13a4:	ldr	pc, [ip, #3096]!	; 0xc18

000013a8 <memcmp@plt>:
    13a8:	add	ip, pc, #0, 12
    13ac:	add	ip, ip, #69632	; 0x11000
    13b0:	ldr	pc, [ip, #3088]!	; 0xc10

000013b4 <g_string_append@plt>:
    13b4:	add	ip, pc, #0, 12
    13b8:	add	ip, ip, #69632	; 0x11000
    13bc:	ldr	pc, [ip, #3080]!	; 0xc08

000013c0 <__libc_start_main@plt>:
    13c0:	add	ip, pc, #0, 12
    13c4:	add	ip, ip, #69632	; 0x11000
    13c8:	ldr	pc, [ip, #3072]!	; 0xc00

000013cc <__gmon_start__@plt>:
    13cc:	add	ip, pc, #0, 12
    13d0:	add	ip, ip, #69632	; 0x11000
    13d4:	ldr	pc, [ip, #3064]!	; 0xbf8

000013d8 <strchr@plt>:
    13d8:	add	ip, pc, #0, 12
    13dc:	add	ip, ip, #69632	; 0x11000
    13e0:	ldr	pc, [ip, #3056]!	; 0xbf0

000013e4 <__cxa_finalize@plt>:
    13e4:	add	ip, pc, #0, 12
    13e8:	add	ip, ip, #69632	; 0x11000
    13ec:	ldr	pc, [ip, #3048]!	; 0xbe8

Disassembly of section .text:

000013f0 <main@@Base>:
    13f0:	push	{r3, r4, r5, r6, r7, lr}
    13f4:	mov	r6, r1
    13f8:	ldr	r1, [pc, #208]	; 14d0 <main@@Base+0xe0>
    13fc:	mov	r7, r0
    1400:	ldr	r4, [pc, #204]	; 14d4 <main@@Base+0xe4>
    1404:	mov	r0, #6
    1408:	add	r1, pc, r1
    140c:	bl	130c <setlocale@plt>
    1410:	add	r4, pc, r4
    1414:	ldr	r1, [pc, #188]	; 14d8 <main@@Base+0xe8>
    1418:	mov	r0, r4
    141c:	add	r1, pc, r1
    1420:	bl	1300 <bindtextdomain@plt>
    1424:	mov	r0, r4
    1428:	bl	11f8 <textdomain@plt>
    142c:	ldr	r1, [pc, #168]	; 14dc <main@@Base+0xec>
    1430:	mov	r0, r4
    1434:	add	r1, pc, r1
    1438:	bl	11a4 <bind_textdomain_codeset@plt>
    143c:	cmp	r7, #1
    1440:	ble	1480 <main@@Base+0x90>
    1444:	ldr	r4, [pc, #148]	; 14e0 <main@@Base+0xf0>
    1448:	add	r4, pc, r4
    144c:	ldr	r0, [r4]
    1450:	cmp	r0, #0
    1454:	beq	1480 <main@@Base+0x90>
    1458:	ldr	r5, [r6, #4]
    145c:	cmp	r5, #0
    1460:	beq	148c <main@@Base+0x9c>
    1464:	mov	r1, r5
    1468:	bl	1378 <strcmp@plt>
    146c:	cmp	r0, #0
    1470:	beq	14ac <main@@Base+0xbc>
    1474:	ldr	r0, [r4, #8]!
    1478:	cmp	r0, #0
    147c:	bne	1464 <main@@Base+0x74>
    1480:	bl	16c8 <main@@Base+0x2d8>
    1484:	mov	r0, #2
    1488:	pop	{r3, r4, r5, r6, r7, pc}
    148c:	ldr	r1, [pc, #80]	; 14e4 <main@@Base+0xf4>
    1490:	mov	r0, r5
    1494:	ldr	r2, [pc, #76]	; 14e8 <main@@Base+0xf8>
    1498:	add	r1, pc, r1
    149c:	add	r2, pc, r2
    14a0:	bl	1174 <g_return_if_fail_warning@plt>
    14a4:	mov	r0, #1
    14a8:	pop	{r3, r4, r5, r6, r7, pc}
    14ac:	ldr	r3, [r6]
    14b0:	mov	r1, r6
    14b4:	sub	r0, r7, #1
    14b8:	str	r3, [r1, #4]!
    14bc:	ldr	r3, [r4, #4]
    14c0:	blx	r3
    14c4:	cmn	r0, #1
    14c8:	beq	1480 <main@@Base+0x90>
    14cc:	pop	{r3, r4, r5, r6, r7, pc}
    14d0:			; <UNDEFINED> instruction: 0x000015b8
    14d4:			; <UNDEFINED> instruction: 0x000013b8
    14d8:			; <UNDEFINED> instruction: 0x000013bc
    14dc:			; <UNDEFINED> instruction: 0x000013b8
    14e0:			; <UNDEFINED> instruction: 0x00011bb4
    14e4:			; <UNDEFINED> instruction: 0x000012b0
    14e8:	andeq	r1, r0, r8, asr r3
    14ec:	mov	fp, #0
    14f0:	mov	lr, #0
    14f4:	pop	{r1}		; (ldr r1, [sp], #4)
    14f8:	mov	r2, sp
    14fc:	push	{r2}		; (str r2, [sp, #-4]!)
    1500:	push	{r0}		; (str r0, [sp, #-4]!)
    1504:	ldr	sl, [pc, #40]	; 1534 <main@@Base+0x144>
    1508:	add	r3, pc, #36	; 0x24
    150c:	add	sl, sl, r3
    1510:	ldr	ip, [pc, #32]	; 1538 <main@@Base+0x148>
    1514:	ldr	ip, [sl, ip]
    1518:	push	{ip}		; (str ip, [sp, #-4]!)
    151c:	ldr	r3, [pc, #24]	; 153c <main@@Base+0x14c>
    1520:	ldr	r3, [sl, r3]
    1524:	ldr	r0, [pc, #20]	; 1540 <main@@Base+0x150>
    1528:	ldr	r0, [sl, r0]
    152c:	bl	13c0 <__libc_start_main@plt>
    1530:	bl	1228 <abort@plt>
    1534:			; <UNDEFINED> instruction: 0x000119b4
    1538:	andeq	r0, r0, r8, lsl #2
    153c:	andeq	r0, r0, r0, lsl #2
    1540:	strdeq	r0, [r0], -r4
    1544:	ldr	r3, [pc, #20]	; 1560 <main@@Base+0x170>
    1548:	ldr	r2, [pc, #20]	; 1564 <main@@Base+0x174>
    154c:	add	r3, pc, r3
    1550:	ldr	r2, [r3, r2]
    1554:	cmp	r2, #0
    1558:	bxeq	lr
    155c:	b	13cc <__gmon_start__@plt>
    1560:	muleq	r1, r4, r9
    1564:	andeq	r0, r0, ip, lsl #2
    1568:	ldr	r2, [pc, #60]	; 15ac <main@@Base+0x1bc>
    156c:	ldr	r0, [pc, #60]	; 15b0 <main@@Base+0x1c0>
    1570:	add	r2, pc, r2
    1574:	add	r0, pc, r0
    1578:	add	r2, r2, #3
    157c:	rsb	r2, r0, r2
    1580:	push	{r3, lr}
    1584:	cmp	r2, #6
    1588:	ldr	r3, [pc, #36]	; 15b4 <main@@Base+0x1c4>
    158c:	add	r3, pc, r3
    1590:	popls	{r3, pc}
    1594:	ldr	r2, [pc, #28]	; 15b8 <main@@Base+0x1c8>
    1598:	ldr	r3, [r3, r2]
    159c:	cmp	r3, #0
    15a0:	popeq	{r3, pc}
    15a4:	blx	r3
    15a8:	pop	{r3, pc}
    15ac:	andeq	r1, r1, r0, lsl #22
    15b0:	strdeq	r1, [r1], -ip
    15b4:	andeq	r1, r1, r4, asr r9
    15b8:	andeq	r0, r0, r4, lsl #2
    15bc:	push	{r3, lr}
    15c0:	ldr	r0, [pc, #64]	; 1608 <main@@Base+0x218>
    15c4:	ldr	r3, [pc, #64]	; 160c <main@@Base+0x21c>
    15c8:	add	r0, pc, r0
    15cc:	ldr	r2, [pc, #60]	; 1610 <main@@Base+0x220>
    15d0:	add	r3, pc, r3
    15d4:	rsb	r3, r0, r3
    15d8:	add	r2, pc, r2
    15dc:	asr	r3, r3, #2
    15e0:	add	r3, r3, r3, lsr #31
    15e4:	asrs	r3, r3, #1
    15e8:	popeq	{r3, pc}
    15ec:	ldr	r1, [pc, #32]	; 1614 <main@@Base+0x224>
    15f0:	ldr	r2, [r2, r1]
    15f4:	cmp	r2, #0
    15f8:	popeq	{r3, pc}
    15fc:	mov	r1, r3
    1600:	blx	r2
    1604:	pop	{r3, pc}
    1608:	andeq	r1, r1, r8, lsr #21
    160c:	andeq	r1, r1, r0, lsr #21
    1610:	andeq	r1, r1, r8, lsl #18
    1614:	andeq	r0, r0, r0, lsl r1
    1618:	ldr	r2, [pc, #76]	; 166c <main@@Base+0x27c>
    161c:	push	{r3, lr}
    1620:	add	r2, pc, r2
    1624:	ldr	r3, [pc, #68]	; 1670 <main@@Base+0x280>
    1628:	ldrb	r2, [r2]
    162c:	add	r3, pc, r3
    1630:	cmp	r2, #0
    1634:	popne	{r3, pc}
    1638:	ldr	r2, [pc, #52]	; 1674 <main@@Base+0x284>
    163c:	ldr	r3, [r3, r2]
    1640:	cmp	r3, #0
    1644:	beq	1654 <main@@Base+0x264>
    1648:	ldr	r0, [pc, #40]	; 1678 <main@@Base+0x288>
    164c:	add	r0, pc, r0
    1650:	bl	13e4 <__cxa_finalize@plt>
    1654:	bl	1568 <main@@Base+0x178>
    1658:	ldr	r3, [pc, #28]	; 167c <main@@Base+0x28c>
    165c:	mov	r2, #1
    1660:	add	r3, pc, r3
    1664:	strb	r2, [r3]
    1668:	pop	{r3, pc}
    166c:	andeq	r1, r1, r0, asr sl
    1670:			; <UNDEFINED> instruction: 0x000118b4
    1674:	andeq	r0, r0, r4, lsl r1
    1678:	andeq	r1, r1, r8, ror #13
    167c:	andeq	r1, r1, r0, lsl sl
    1680:	ldr	r0, [pc, #52]	; 16bc <main@@Base+0x2cc>
    1684:	push	{r3, lr}
    1688:	add	r0, pc, r0
    168c:	ldr	r3, [pc, #44]	; 16c0 <main@@Base+0x2d0>
    1690:	ldr	r2, [r0]
    1694:	add	r3, pc, r3
    1698:	cmp	r2, #0
    169c:	beq	16b4 <main@@Base+0x2c4>
    16a0:	ldr	r2, [pc, #28]	; 16c4 <main@@Base+0x2d4>
    16a4:	ldr	r3, [r3, r2]
    16a8:	cmp	r3, #0
    16ac:	beq	16b4 <main@@Base+0x2c4>
    16b0:	blx	r3
    16b4:	pop	{r3, lr}
    16b8:	b	15bc <main@@Base+0x1cc>
    16bc:	andeq	r1, r1, r8, lsr #13
    16c0:	andeq	r1, r1, ip, asr #16
    16c4:	strdeq	r0, [r0], -r8
    16c8:	ldr	r1, [pc, #120]	; 1748 <main@@Base+0x358>
    16cc:	mov	r2, #5
    16d0:	push	{r4, r5, r6, lr}
    16d4:	add	r1, pc, r1
    16d8:	mov	r0, #0
    16dc:	ldr	r4, [pc, #104]	; 174c <main@@Base+0x35c>
    16e0:	bl	12c4 <dcgettext@plt>
    16e4:	bl	11d4 <g_printerr@plt>
    16e8:	ldr	r1, [pc, #96]	; 1750 <main@@Base+0x360>
    16ec:	add	r4, pc, r4
    16f0:	mov	r2, #5
    16f4:	mov	r0, #0
    16f8:	add	r1, pc, r1
    16fc:	bl	12c4 <dcgettext@plt>
    1700:	ldr	r2, [r4]
    1704:	cmp	r2, #0
    1708:	popeq	{r4, r5, r6, pc}
    170c:	ldr	r6, [pc, #64]	; 1754 <main@@Base+0x364>
    1710:	ldr	r5, [pc, #64]	; 1758 <main@@Base+0x368>
    1714:	add	r6, pc, r6
    1718:	add	r5, pc, r5
    171c:	mov	r1, r0
    1720:	mov	r0, r6
    1724:	bl	11d4 <g_printerr@plt>
    1728:	mov	r2, #5
    172c:	mov	r0, #0
    1730:	mov	r1, r5
    1734:	bl	12c4 <dcgettext@plt>
    1738:	ldr	r2, [r4, #8]!
    173c:	cmp	r2, #0
    1740:	bne	171c <main@@Base+0x32c>
    1744:	pop	{r4, r5, r6, pc}
    1748:	andeq	r1, r0, ip, ror r0
    174c:	andeq	r1, r1, r0, lsl r9
    1750:	andeq	r1, r0, r0, lsl #1
    1754:	andeq	r1, r0, r0, ror r0
    1758:	andeq	r1, r0, r4, ror r0
    175c:	push	{r1, r2, r3}
    1760:	ldr	r3, [pc, #280]	; 1880 <main@@Base+0x490>
    1764:	ldr	r2, [pc, #280]	; 1884 <main@@Base+0x494>
    1768:	add	r3, pc, r3
    176c:	push	{r4, r5, r6, r7, r8, lr}
    1770:	subs	r4, r0, #0
    1774:	ldr	r5, [r3, r2]
    1778:	sub	sp, sp, #12
    177c:	ldr	r0, [sp, #36]	; 0x24
    1780:	ldr	r3, [r5]
    1784:	str	r3, [sp, #4]
    1788:	beq	1858 <main@@Base+0x468>
    178c:	ldr	r7, [r4]
    1790:	adds	r8, r7, #0
    1794:	movne	r8, #1
    1798:	cmp	r0, #0
    179c:	beq	1824 <main@@Base+0x434>
    17a0:	add	r1, sp, #40	; 0x28
    17a4:	str	r1, [sp]
    17a8:	bl	1360 <g_strdup_vprintf@plt>
    17ac:	subs	r6, r0, #0
    17b0:	beq	1824 <main@@Base+0x434>
    17b4:	cmp	r8, #0
    17b8:	beq	1810 <main@@Base+0x420>
    17bc:	ldr	r3, [r7, #8]
    17c0:	mov	r1, r6
    17c4:	ldr	r2, [pc, #188]	; 1888 <main@@Base+0x498>
    17c8:	cmp	r3, #0
    17cc:	add	r2, pc, r2
    17d0:	beq	1848 <main@@Base+0x458>
    17d4:	ldr	r0, [pc, #176]	; 188c <main@@Base+0x49c>
    17d8:	add	r0, pc, r0
    17dc:	bl	11d4 <g_printerr@plt>
    17e0:	mov	r0, r6
    17e4:	bl	12b8 <g_free@plt>
    17e8:	mov	r0, r4
    17ec:	bl	1318 <g_clear_error@plt>
    17f0:	ldr	r2, [sp, #4]
    17f4:	ldr	r3, [r5]
    17f8:	cmp	r2, r3
    17fc:	bne	1864 <main@@Base+0x474>
    1800:	add	sp, sp, #12
    1804:	pop	{r4, r5, r6, r7, r8, lr}
    1808:	add	sp, sp, #12
    180c:	bx	lr
    1810:	ldr	r2, [pc, #120]	; 1890 <main@@Base+0x4a0>
    1814:	mov	r1, r6
    1818:	add	r2, pc, r2
    181c:	mov	r3, r2
    1820:	b	17d4 <main@@Base+0x3e4>
    1824:	cmp	r8, #0
    1828:	beq	1868 <main@@Base+0x478>
    182c:	ldr	r3, [r7, #8]
    1830:	mov	r6, #0
    1834:	ldr	r1, [pc, #88]	; 1894 <main@@Base+0x4a4>
    1838:	cmp	r3, r6
    183c:	add	r1, pc, r1
    1840:	movne	r2, r1
    1844:	bne	17d4 <main@@Base+0x3e4>
    1848:	ldr	r2, [pc, #72]	; 1898 <main@@Base+0x4a8>
    184c:	add	r2, pc, r2
    1850:	mov	r3, r2
    1854:	b	17d4 <main@@Base+0x3e4>
    1858:	mov	r8, r4
    185c:	mov	r7, r4
    1860:	b	1798 <main@@Base+0x3a8>
    1864:	bl	12a0 <__stack_chk_fail@plt>
    1868:	ldr	r1, [pc, #44]	; 189c <main@@Base+0x4ac>
    186c:	mov	r6, r8
    1870:	add	r1, pc, r1
    1874:	mov	r2, r1
    1878:	mov	r3, r1
    187c:	b	17d4 <main@@Base+0x3e4>
    1880:	andeq	r1, r1, r8, ror r7
    1884:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1888:			; <UNDEFINED> instruction: 0x00000fb4
    188c:	andeq	r0, r0, r0, asr #31
    1890:	andeq	r1, r0, r8, lsr #3
    1894:	andeq	r1, r0, r4, lsl #3
    1898:	andeq	r1, r0, r4, ror r1
    189c:	andeq	r1, r0, r0, asr r1
    18a0:	ldr	r3, [pc, #160]	; 1948 <main@@Base+0x558>
    18a4:	ldr	ip, [pc, #160]	; 194c <main@@Base+0x55c>
    18a8:	add	r3, pc, r3
    18ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    18b0:	mov	r9, r0
    18b4:	ldr	r5, [r3, ip]
    18b8:	sub	sp, sp, #8
    18bc:	ldr	r0, [pc, #140]	; 1950 <main@@Base+0x560>
    18c0:	add	r4, sp, #8
    18c4:	mov	sl, r2
    18c8:	mov	r8, r1
    18cc:	ldr	r3, [r5]
    18d0:	add	r0, pc, r0
    18d4:	mov	r7, #0
    18d8:	str	r7, [r4, #-8]!
    18dc:	str	r3, [sp, #4]
    18e0:	bl	11c8 <g_option_context_new@plt>
    18e4:	ldr	r2, [pc, #104]	; 1954 <main@@Base+0x564>
    18e8:	mov	r1, sl
    18ec:	add	r2, pc, r2
    18f0:	mov	r6, r0
    18f4:	bl	1324 <g_option_context_add_main_entries@plt>
    18f8:	mov	r1, r9
    18fc:	mov	r0, r6
    1900:	mov	r2, r8
    1904:	mov	r3, sp
    1908:	bl	115c <g_option_context_parse@plt>
    190c:	subs	r1, r0, #0
    1910:	bne	1920 <main@@Base+0x530>
    1914:	mov	r0, sp
    1918:	mov	r7, #2
    191c:	bl	175c <main@@Base+0x36c>
    1920:	mov	r0, r6
    1924:	bl	1294 <g_option_context_free@plt>
    1928:	ldr	r2, [sp, #4]
    192c:	ldr	r3, [r5]
    1930:	mov	r0, r7
    1934:	cmp	r2, r3
    1938:	bne	1944 <main@@Base+0x554>
    193c:	add	sp, sp, #8
    1940:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1944:	bl	12a0 <__stack_chk_fail@plt>
    1948:	andeq	r1, r1, r8, lsr r6
    194c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1950:	andeq	r0, r0, r0, ror #29
    1954:	ldrdeq	r0, [r0], -ip
    1958:	push	{r3, r4, r5, lr}
    195c:	mov	r4, r1
    1960:	bl	121c <gcr_parser_get_parsed@plt>
    1964:	ldr	r3, [r4, #4]
    1968:	cmp	r3, #0
    196c:	mov	r1, r0
    1970:	beq	199c <main@@Base+0x5ac>
    1974:	ldr	r0, [r4]
    1978:	bl	1234 <gcr_importer_queue_and_filter_for_parsed@plt>
    197c:	mov	r5, r0
    1980:	ldr	r0, [r4]
    1984:	bl	1390 <gck_list_unref_free@plt>
    1988:	str	r5, [r4]
    198c:	ldr	r3, [r4, #4]
    1990:	add	r3, r3, #1
    1994:	str	r3, [r4, #4]
    1998:	pop	{r3, r4, r5, pc}
    199c:	bl	12ac <gcr_importer_create_for_parsed@plt>
    19a0:	str	r0, [r4]
    19a4:	b	198c <main@@Base+0x59c>
    19a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    19ac:	sub	sp, sp, #132	; 0x84
    19b0:	ldr	sl, [pc, #1464]	; 1f70 <main@@Base+0xb80>
    19b4:	mov	r3, #0
    19b8:	ldr	r2, [pc, #1460]	; 1f74 <main@@Base+0xb84>
    19bc:	add	sl, pc, sl
    19c0:	str	r0, [sp, #84]	; 0x54
    19c4:	str	r1, [sp, #80]	; 0x50
    19c8:	add	r0, sp, #84	; 0x54
    19cc:	ldr	r2, [sl, r2]
    19d0:	add	r1, sp, #80	; 0x50
    19d4:	str	r3, [sp, #88]	; 0x58
    19d8:	str	r2, [sp, #12]
    19dc:	ldr	ip, [sp, #12]
    19e0:	ldr	r2, [pc, #1424]	; 1f78 <main@@Base+0xb88>
    19e4:	ldr	r3, [ip]
    19e8:	add	r2, pc, r2
    19ec:	str	r3, [sp, #124]	; 0x7c
    19f0:	bl	18a0 <main@@Base+0x4b0>
    19f4:	subs	r9, r0, #0
    19f8:	movne	r0, r9
    19fc:	bne	1c38 <main@@Base+0x848>
    1a00:	ldr	r4, [pc, #1396]	; 1f7c <main@@Base+0xb8c>
    1a04:	add	r4, pc, r4
    1a08:	ldr	r3, [r4]
    1a0c:	cmp	r3, #0
    1a10:	beq	1c54 <main@@Base+0x864>
    1a14:	ldr	r3, [r3]
    1a18:	cmp	r3, #0
    1a1c:	beq	1c54 <main@@Base+0x864>
    1a20:	add	r7, sp, #88	; 0x58
    1a24:	mov	r1, r7
    1a28:	bl	1144 <gcr_pkcs11_initialize@plt>
    1a2c:	cmp	r0, #0
    1a30:	beq	1c6c <main@@Base+0x87c>
    1a34:	bl	1168 <gcr_parser_new@plt>
    1a38:	mov	fp, r0
    1a3c:	mov	r0, #8
    1a40:	bl	136c <g_malloc0@plt>
    1a44:	ldr	r1, [pc, #1332]	; 1f80 <main@@Base+0xb90>
    1a48:	ldr	r2, [pc, #1332]	; 1f84 <main@@Base+0xb94>
    1a4c:	str	r9, [sp]
    1a50:	add	r1, pc, r1
    1a54:	str	r9, [sp, #4]
    1a58:	add	r2, pc, r2
    1a5c:	str	r0, [sp, #20]
    1a60:	mov	r0, fp
    1a64:	ldr	r3, [sp, #20]
    1a68:	bl	124c <g_signal_connect_data@plt>
    1a6c:	ldr	r5, [r4]
    1a70:	ldr	r0, [r5]
    1a74:	cmp	r0, #0
    1a78:	beq	1b4c <main@@Base+0x75c>
    1a7c:	ldr	r6, [pc, #1284]	; 1f88 <main@@Base+0xb98>
    1a80:	add	r5, r5, #4
    1a84:	ldr	ip, [pc, #1280]	; 1f8c <main@@Base+0xb9c>
    1a88:	add	r6, pc, r6
    1a8c:	add	ip, pc, ip
    1a90:	str	ip, [sp, #16]
    1a94:	b	1af0 <main@@Base+0x700>
    1a98:	mov	r0, fp
    1a9c:	mov	r1, r4
    1aa0:	mov	r2, #0
    1aa4:	mov	r3, r7
    1aa8:	bl	1150 <gcr_parser_parse_stream@plt>
    1aac:	cmp	r0, #0
    1ab0:	bne	1adc <main@@Base+0x6ec>
    1ab4:	ldr	r3, [sp, #88]	; 0x58
    1ab8:	ldr	r3, [r3, #4]
    1abc:	cmp	r3, #2
    1ac0:	moveq	r9, #1
    1ac4:	beq	1adc <main@@Base+0x6ec>
    1ac8:	mov	r0, r7
    1acc:	mov	r1, r6
    1ad0:	ldr	r2, [r5, #-4]
    1ad4:	mov	r9, #1
    1ad8:	bl	175c <main@@Base+0x36c>
    1adc:	mov	r0, r4
    1ae0:	bl	1348 <g_object_unref@plt>
    1ae4:	ldr	r0, [r5], #4
    1ae8:	cmp	r0, #0
    1aec:	beq	1b4c <main@@Base+0x75c>
    1af0:	bl	1180 <g_file_new_for_commandline_arg@plt>
    1af4:	mov	r2, r7
    1af8:	mov	r1, #0
    1afc:	mov	r8, r0
    1b00:	bl	11e0 <g_file_read@plt>
    1b04:	mov	r4, r0
    1b08:	bl	1384 <g_input_stream_get_type@plt>
    1b0c:	mov	r1, r0
    1b10:	mov	r0, r4
    1b14:	bl	11bc <g_type_check_instance_cast@plt>
    1b18:	mov	r4, r0
    1b1c:	mov	r0, r8
    1b20:	bl	1348 <g_object_unref@plt>
    1b24:	cmp	r4, #0
    1b28:	bne	1a98 <main@@Base+0x6a8>
    1b2c:	mov	r0, r7
    1b30:	ldr	r2, [r5, #-4]
    1b34:	ldr	r1, [sp, #16]
    1b38:	mov	r9, #1
    1b3c:	bl	175c <main@@Base+0x36c>
    1b40:	ldr	r0, [r5], #4
    1b44:	cmp	r0, #0
    1b48:	bne	1af0 <main@@Base+0x700>
    1b4c:	ldr	ip, [sp, #20]
    1b50:	ldr	r8, [ip]
    1b54:	cmp	r8, #0
    1b58:	beq	1f30 <main@@Base+0xb40>
    1b5c:	ldr	ip, [pc, #1068]	; 1f90 <main@@Base+0xba0>
    1b60:	str	fp, [sp, #32]
    1b64:	add	ip, pc, ip
    1b68:	str	ip, [sp, #16]
    1b6c:	ldr	ip, [pc, #1056]	; 1f94 <main@@Base+0xba4>
    1b70:	add	ip, pc, ip
    1b74:	str	ip, [sp, #24]
    1b78:	ldr	ip, [pc, #1048]	; 1f98 <main@@Base+0xba8>
    1b7c:	add	ip, pc, ip
    1b80:	str	ip, [sp, #28]
    1b84:	ldr	ip, [pc, #1040]	; 1f9c <main@@Base+0xbac>
    1b88:	add	ip, pc, ip
    1b8c:	str	ip, [sp, #36]	; 0x24
    1b90:	ldr	ip, [pc, #1032]	; 1fa0 <main@@Base+0xbb0>
    1b94:	add	ip, pc, ip
    1b98:	str	ip, [sp, #40]	; 0x28
    1b9c:	ldr	ip, [pc, #1024]	; 1fa4 <main@@Base+0xbb4>
    1ba0:	add	ip, pc, ip
    1ba4:	str	ip, [sp, #44]	; 0x2c
    1ba8:	b	1bcc <main@@Base+0x7dc>
    1bac:	ldr	r3, [pc, #1012]	; 1fa8 <main@@Base+0xbb8>
    1bb0:	ldr	r3, [sl, r3]
    1bb4:	ldr	r6, [r3]
    1bb8:	cmp	r6, #0
    1bbc:	beq	1c84 <main@@Base+0x894>
    1bc0:	ldr	r8, [r8, #4]
    1bc4:	cmp	r8, #0
    1bc8:	beq	1c14 <main@@Base+0x824>
    1bcc:	ldr	r0, [r8]
    1bd0:	mov	r1, #0
    1bd4:	mov	r2, r7
    1bd8:	bl	118c <gcr_importer_import@plt>
    1bdc:	cmp	r0, #0
    1be0:	bne	1bac <main@@Base+0x7bc>
    1be4:	ldr	r3, [sp, #88]	; 0x58
    1be8:	ldr	r3, [r3, #4]
    1bec:	cmp	r3, #2
    1bf0:	moveq	r9, #1
    1bf4:	beq	1bc0 <main@@Base+0x7d0>
    1bf8:	mov	r0, r7
    1bfc:	ldr	r1, [sp, #16]
    1c00:	bl	175c <main@@Base+0x36c>
    1c04:	ldr	r8, [r8, #4]
    1c08:	mov	r9, #1
    1c0c:	cmp	r8, #0
    1c10:	bne	1bcc <main@@Base+0x7dc>
    1c14:	ldr	ip, [sp, #20]
    1c18:	ldr	fp, [sp, #32]
    1c1c:	ldr	r0, [ip]
    1c20:	bl	1390 <gck_list_unref_free@plt>
    1c24:	ldr	r0, [sp, #20]
    1c28:	bl	12b8 <g_free@plt>
    1c2c:	mov	r0, fp
    1c30:	bl	1348 <g_object_unref@plt>
    1c34:	mov	r0, r9
    1c38:	ldr	ip, [sp, #12]
    1c3c:	ldr	r2, [sp, #124]	; 0x7c
    1c40:	ldr	r3, [ip]
    1c44:	cmp	r2, r3
    1c48:	bne	1f64 <main@@Base+0xb74>
    1c4c:	add	sp, sp, #132	; 0x84
    1c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1c54:	ldr	r1, [pc, #848]	; 1fac <main@@Base+0xbbc>
    1c58:	mov	r0, #0
    1c5c:	add	r1, pc, r1
    1c60:	bl	175c <main@@Base+0x36c>
    1c64:	mov	r0, #2
    1c68:	b	1c38 <main@@Base+0x848>
    1c6c:	ldr	r1, [pc, #828]	; 1fb0 <main@@Base+0xbc0>
    1c70:	mov	r0, r7
    1c74:	add	r1, pc, r1
    1c78:	bl	175c <main@@Base+0x36c>
    1c7c:	mov	r0, #1
    1c80:	b	1c38 <main@@Base+0x848>
    1c84:	ldr	r4, [r8]
    1c88:	ldr	r1, [sp, #24]
    1c8c:	str	r6, [sp, #92]	; 0x5c
    1c90:	ldr	r0, [r4]
    1c94:	bl	12f4 <g_object_class_find_property@plt>
    1c98:	subs	r5, r0, #0
    1c9c:	beq	1bc0 <main@@Base+0x7d0>
    1ca0:	mov	r0, r4
    1ca4:	ldr	r1, [sp, #28]
    1ca8:	add	r2, sp, #92	; 0x5c
    1cac:	mov	r3, r6
    1cb0:	bl	12d0 <g_object_get@plt>
    1cb4:	ldr	r5, [r5, #12]
    1cb8:	bl	1198 <gck_list_get_boxed_type@plt>
    1cbc:	cmp	r5, r0
    1cc0:	beq	1d4c <main@@Base+0x95c>
    1cc4:	bl	133c <g_strv_get_type@plt>
    1cc8:	cmp	r5, r0
    1ccc:	bne	1bc0 <main@@Base+0x7d0>
    1cd0:	mov	r0, r4
    1cd4:	mov	r3, r6
    1cd8:	ldr	r1, [sp, #24]
    1cdc:	add	r2, sp, #108	; 0x6c
    1ce0:	bl	12d0 <g_object_get@plt>
    1ce4:	ldr	r0, [sp, #108]	; 0x6c
    1ce8:	cmp	r0, #0
    1cec:	beq	1d40 <main@@Base+0x950>
    1cf0:	ldr	r4, [r0]
    1cf4:	cmp	r4, #0
    1cf8:	beq	1d44 <main@@Base+0x954>
    1cfc:	mov	r5, #4
    1d00:	ldr	r6, [sp, #36]	; 0x24
    1d04:	ldr	fp, [sp, #40]	; 0x28
    1d08:	b	1d1c <main@@Base+0x92c>
    1d0c:	ldr	r4, [r3, r5]
    1d10:	add	r5, r5, #4
    1d14:	cmp	r4, #0
    1d18:	beq	1f28 <main@@Base+0xb38>
    1d1c:	mov	r0, r6
    1d20:	ldr	r1, [sp, #92]	; 0x5c
    1d24:	bl	12e8 <g_print@plt>
    1d28:	mov	r0, fp
    1d2c:	mov	r1, r4
    1d30:	bl	12e8 <g_print@plt>
    1d34:	ldr	r3, [sp, #108]	; 0x6c
    1d38:	cmp	r3, #0
    1d3c:	bne	1d0c <main@@Base+0x91c>
    1d40:	mov	r0, #0
    1d44:	bl	127c <g_strfreev@plt>
    1d48:	b	1bc0 <main@@Base+0x7d0>
    1d4c:	mov	r0, r4
    1d50:	mov	r3, r6
    1d54:	ldr	r1, [sp, #24]
    1d58:	add	r2, sp, #96	; 0x60
    1d5c:	bl	12d0 <g_object_get@plt>
    1d60:	ldr	r4, [sp, #96]	; 0x60
    1d64:	cmp	r4, #0
    1d68:	beq	1f5c <main@@Base+0xb6c>
    1d6c:	ldr	ip, [pc, #576]	; 1fb4 <main@@Base+0xbc4>
    1d70:	add	r5, sp, #112	; 0x70
    1d74:	ldr	r1, [pc, #572]	; 1fb8 <main@@Base+0xbc8>
    1d78:	add	ip, pc, ip
    1d7c:	str	ip, [sp, #48]	; 0x30
    1d80:	ldr	ip, [pc, #564]	; 1fbc <main@@Base+0xbcc>
    1d84:	add	r1, pc, r1
    1d88:	str	r7, [sp, #76]	; 0x4c
    1d8c:	mov	fp, r5
    1d90:	add	ip, pc, ip
    1d94:	ldr	r7, [sp, #44]	; 0x2c
    1d98:	str	ip, [sp, #52]	; 0x34
    1d9c:	add	ip, sp, #104	; 0x68
    1da0:	str	r1, [sp, #56]	; 0x38
    1da4:	ldr	r3, [pc, #532]	; 1fc0 <main@@Base+0xbd0>
    1da8:	ldr	r1, [pc, #532]	; 1fc4 <main@@Base+0xbd4>
    1dac:	str	r9, [sp, #68]	; 0x44
    1db0:	mov	r9, ip
    1db4:	add	r3, pc, r3
    1db8:	add	r1, pc, r1
    1dbc:	str	r3, [sp, #60]	; 0x3c
    1dc0:	str	r1, [sp, #64]	; 0x40
    1dc4:	str	r8, [sp, #72]	; 0x48
    1dc8:	mov	lr, #0
    1dcc:	mov	r8, #3
    1dd0:	ldr	r0, [r4]
    1dd4:	mov	r3, lr
    1dd8:	str	r9, [sp]
    1ddc:	mov	r2, r8
    1de0:	mov	r1, fp
    1de4:	movw	r5, #258	; 0x102
    1de8:	str	lr, [sp, #104]	; 0x68
    1dec:	str	r5, [sp, #120]	; 0x78
    1df0:	str	lr, [sp, #116]	; 0x74
    1df4:	str	r8, [sp, #112]	; 0x70
    1df8:	ldr	r6, [sp, #92]	; 0x5c
    1dfc:	bl	1270 <gck_object_get_full@plt>
    1e00:	subs	r5, r0, #0
    1e04:	beq	1f14 <main@@Base+0xb24>
    1e08:	mov	r1, r8
    1e0c:	add	r2, sp, #108	; 0x6c
    1e10:	bl	1264 <gck_attributes_find_string@plt>
    1e14:	cmp	r0, #0
    1e18:	beq	1ef8 <main@@Base+0xb08>
    1e1c:	add	r2, sp, #100	; 0x64
    1e20:	mov	r1, #0
    1e24:	mov	r0, r5
    1e28:	bl	1210 <gck_attributes_find_ulong@plt>
    1e2c:	movw	r1, #258	; 0x102
    1e30:	cmp	r0, #0
    1e34:	streq	r0, [sp, #100]	; 0x64
    1e38:	mov	r0, r5
    1e3c:	bl	11ec <gck_attributes_find@plt>
    1e40:	ldr	r2, [sp, #100]	; 0x64
    1e44:	mov	r8, r0
    1e48:	cmp	r2, #4
    1e4c:	addls	pc, pc, r2, lsl #2
    1e50:	b	1f0c <main@@Base+0xb1c>
    1e54:	b	1e68 <main@@Base+0xa78>
    1e58:	b	1eec <main@@Base+0xafc>
    1e5c:	b	1ee4 <main@@Base+0xaf4>
    1e60:	b	1edc <main@@Base+0xaec>
    1e64:	b	1ed4 <main@@Base+0xae4>
    1e68:	ldr	r0, [sp, #48]	; 0x30
    1e6c:	mov	r1, r6
    1e70:	ldr	r2, [sp, #108]	; 0x6c
    1e74:	bl	12e8 <g_print@plt>
    1e78:	cmp	r8, #0
    1e7c:	beq	1ea0 <main@@Base+0xab0>
    1e80:	ldmib	r8, {r0, r1}
    1e84:	bl	24a0 <main@@Base+0x10b0>
    1e88:	mov	r6, r0
    1e8c:	mov	r0, r7
    1e90:	mov	r1, r6
    1e94:	bl	12e8 <g_print@plt>
    1e98:	mov	r0, r6
    1e9c:	bl	12b8 <g_free@plt>
    1ea0:	mov	r0, r5
    1ea4:	bl	1258 <gck_attributes_unref@plt>
    1ea8:	ldr	r0, [sp, #108]	; 0x6c
    1eac:	bl	12b8 <g_free@plt>
    1eb0:	ldr	r4, [r4, #4]
    1eb4:	cmp	r4, #0
    1eb8:	bne	1dc8 <main@@Base+0x9d8>
    1ebc:	ldr	r9, [sp, #68]	; 0x44
    1ec0:	ldr	r8, [sp, #72]	; 0x48
    1ec4:	ldr	r7, [sp, #76]	; 0x4c
    1ec8:	ldr	r0, [sp, #96]	; 0x60
    1ecc:	bl	1390 <gck_list_unref_free@plt>
    1ed0:	b	1bc0 <main@@Base+0x7d0>
    1ed4:	ldr	r0, [sp, #56]	; 0x38
    1ed8:	b	1e6c <main@@Base+0xa7c>
    1edc:	ldr	r0, [sp, #64]	; 0x40
    1ee0:	b	1e6c <main@@Base+0xa7c>
    1ee4:	ldr	r0, [sp, #60]	; 0x3c
    1ee8:	b	1e6c <main@@Base+0xa7c>
    1eec:	ldr	r0, [pc, #212]	; 1fc8 <main@@Base+0xbd8>
    1ef0:	add	r0, pc, r0
    1ef4:	b	1e6c <main@@Base+0xa7c>
    1ef8:	ldr	r0, [pc, #204]	; 1fcc <main@@Base+0xbdc>
    1efc:	add	r0, pc, r0
    1f00:	bl	1204 <g_strdup@plt>
    1f04:	str	r0, [sp, #108]	; 0x6c
    1f08:	b	1e1c <main@@Base+0xa2c>
    1f0c:	ldr	r0, [sp, #52]	; 0x34
    1f10:	b	1e6c <main@@Base+0xa7c>
    1f14:	ldr	r1, [pc, #180]	; 1fd0 <main@@Base+0xbe0>
    1f18:	mov	r0, r9
    1f1c:	add	r1, pc, r1
    1f20:	bl	175c <main@@Base+0x36c>
    1f24:	b	1eb0 <main@@Base+0xac0>
    1f28:	mov	r0, r3
    1f2c:	b	1d44 <main@@Base+0x954>
    1f30:	ldr	r1, [pc, #156]	; 1fd4 <main@@Base+0xbe4>
    1f34:	mov	r0, r8
    1f38:	add	r1, pc, r1
    1f3c:	bl	175c <main@@Base+0x36c>
    1f40:	ldr	ip, [sp, #20]
    1f44:	ldr	r8, [ip]
    1f48:	cmp	r8, #0
    1f4c:	bne	1f68 <main@@Base+0xb78>
    1f50:	mov	r0, r8
    1f54:	mov	r9, #1
    1f58:	b	1c20 <main@@Base+0x830>
    1f5c:	mov	r0, r4
    1f60:	b	1ecc <main@@Base+0xadc>
    1f64:	bl	12a0 <__stack_chk_fail@plt>
    1f68:	mov	r9, #1
    1f6c:	b	1b5c <main@@Base+0x76c>
    1f70:	andeq	r1, r1, r4, lsr #10
    1f74:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1f78:	andeq	r1, r1, r4, lsr r6
    1f7c:	andeq	r1, r1, r4, ror r6
    1f80:	andeq	r0, r0, r4, asr #29
    1f84:			; <UNDEFINED> instruction: 0xfffffef8
    1f88:	andeq	r0, r0, ip, lsr #29
    1f8c:	muleq	r0, r0, lr
    1f90:	andeq	r0, r0, ip, lsl #29
    1f94:	andeq	r0, r0, r0, lsl #28
    1f98:	andeq	r0, r0, r0, lsl #28
    1f9c:	andeq	r0, r0, ip, lsr lr
    1fa0:	andeq	r0, r0, r8, asr #28
    1fa4:	andeq	r0, r0, r0, lsl lr
    1fa8:	strdeq	r0, [r0], -ip
    1fac:	andeq	r0, r0, ip, ror ip
    1fb0:	andeq	r0, r0, ip, ror ip
    1fb4:	andeq	r0, r0, ip, asr #21
    1fb8:	andeq	r0, r0, r8, lsl fp
    1fbc:	andeq	r0, r0, ip, lsr #22
    1fc0:	andeq	r0, r0, r8, asr #21
    1fc4:	andeq	r0, r0, r4, lsr #21
    1fc8:	andeq	r0, r0, r4, lsr r9
    1fcc:	andeq	r0, r0, ip, lsr #21
    1fd0:	andeq	r0, r0, r8, ror #20
    1fd4:	andeq	r0, r0, r0, lsl sl
    1fd8:	push	{lr}		; (str lr, [sp, #-4]!)
    1fdc:	sub	sp, sp, #12
    1fe0:	ldr	r1, [pc, #24]	; 2000 <main@@Base+0xc10>
    1fe4:	mov	r0, #0
    1fe8:	ldr	r3, [pc, #20]	; 2004 <main@@Base+0xc14>
    1fec:	mov	r2, #164	; 0xa4
    1ff0:	add	r1, pc, r1
    1ff4:	str	r0, [sp]
    1ff8:	add	r3, pc, r3
    1ffc:	bl	139c <g_assertion_message_expr@plt>
    2000:	andeq	r0, r0, r4, asr sl
    2004:	andeq	r0, r0, ip, lsr sl
    2008:	push	{r4, lr}
    200c:	sub	sp, sp, #8
    2010:	ldr	r2, [pc, #60]	; 2054 <main@@Base+0xc64>
    2014:	str	r0, [sp, #4]
    2018:	add	r0, sp, #4
    201c:	str	r1, [sp]
    2020:	add	r2, pc, r2
    2024:	mov	r1, sp
    2028:	bl	18a0 <main@@Base+0x4b0>
    202c:	subs	r4, r0, #0
    2030:	bne	2048 <main@@Base+0xc58>
    2034:	ldr	r0, [pc, #28]	; 2058 <main@@Base+0xc68>
    2038:	ldr	r1, [pc, #28]	; 205c <main@@Base+0xc6c>
    203c:	add	r0, pc, r0
    2040:	add	r1, pc, r1
    2044:	bl	12e8 <g_print@plt>
    2048:	mov	r0, r4
    204c:	add	sp, sp, #8
    2050:	pop	{r4, pc}
    2054:	andeq	r1, r1, ip, asr r0
    2058:	andeq	r0, r0, r0, lsr #20
    205c:	andeq	r0, r0, r0, lsr sl
    2060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2064:	rsbs	r4, r1, #1
    2068:	sub	sp, sp, #20
    206c:	mov	fp, r1
    2070:	movcc	r4, #0
    2074:	cmp	r0, #0
    2078:	orrne	r4, r4, #1
    207c:	cmp	r4, #0
    2080:	str	r2, [sp, #8]
    2084:	mov	r9, r3
    2088:	mov	r5, r0
    208c:	beq	225c <main@@Base+0xe6c>
    2090:	ldr	r3, [sp, #56]	; 0x38
    2094:	cmp	r3, #0
    2098:	beq	22a4 <main@@Base+0xeb4>
    209c:	cmp	r9, #0
    20a0:	bne	20cc <main@@Base+0xcdc>
    20a4:	ldr	r1, [pc, #544]	; 22cc <main@@Base+0xedc>
    20a8:	mov	r0, r9
    20ac:	ldr	r2, [pc, #540]	; 22d0 <main@@Base+0xee0>
    20b0:	add	r1, pc, r1
    20b4:	add	r2, pc, r2
    20b8:	add	r1, r1, #20
    20bc:	bl	1174 <g_return_if_fail_warning@plt>
    20c0:	mov	r0, r9
    20c4:	add	sp, sp, #20
    20c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    20cc:	cmn	r1, #1
    20d0:	beq	2284 <main@@Base+0xe94>
    20d4:	ldr	r2, [sp, #8]
    20d8:	cmp	r2, #0
    20dc:	beq	2298 <main@@Base+0xea8>
    20e0:	mov	r0, r2
    20e4:	bl	1354 <strlen@plt>
    20e8:	str	r0, [sp, #4]
    20ec:	add	r0, fp, fp, lsr #31
    20f0:	ldr	r7, [pc, #476]	; 22d4 <main@@Base+0xee4>
    20f4:	asr	r0, r0, #1
    20f8:	add	r7, pc, r7
    20fc:	add	r0, r0, #1
    2100:	bl	136c <g_malloc0@plt>
    2104:	ldr	r2, [sp, #56]	; 0x38
    2108:	mov	r3, #0
    210c:	mov	r6, r3
    2110:	str	r3, [r2]
    2114:	mov	sl, r0
    2118:	str	r0, [sp, #12]
    211c:	rsbs	r2, r6, #1
    2120:	movcc	r2, #0
    2124:	cmp	fp, #0
    2128:	movle	r2, #0
    212c:	cmp	r2, #0
    2130:	beq	223c <main@@Base+0xe4c>
    2134:	ldr	r3, [sp, #12]
    2138:	ldr	r2, [sp, #8]
    213c:	cmp	sl, r3
    2140:	cmpne	r2, #0
    2144:	beq	2180 <main@@Base+0xd90>
    2148:	ldr	r3, [sp, #4]
    214c:	cmp	r3, fp
    2150:	bhi	2248 <main@@Base+0xe58>
    2154:	mov	r1, r2
    2158:	mov	r0, r5
    215c:	mov	r2, r3
    2160:	bl	13a8 <memcmp@plt>
    2164:	cmp	r0, #0
    2168:	bne	2248 <main@@Base+0xe58>
    216c:	ldr	r3, [sp, #4]
    2170:	rsb	fp, r3, fp
    2174:	add	r5, r5, r3
    2178:	cmp	fp, #0
    217c:	ble	2234 <main@@Base+0xe44>
    2180:	mov	r8, #0
    2184:	mov	r6, sl
    2188:	mov	r4, r5
    218c:	mov	sl, r8
    2190:	b	21ec <main@@Base+0xdfc>
    2194:	cmp	sl, #0
    2198:	lsl	r3, r3, #4
    219c:	addne	r8, r8, #1
    21a0:	strbeq	r3, [r6]
    21a4:	ldrne	r2, [sp, #56]	; 0x38
    21a8:	mov	sl, #1
    21ac:	ldrbne	r0, [r6]
    21b0:	movne	sl, #0
    21b4:	sub	fp, fp, #1
    21b8:	mov	r5, r4
    21bc:	ldrne	r3, [r2]
    21c0:	orrne	r1, r1, r0
    21c4:	strbne	r1, [r6], #1
    21c8:	addne	r3, r3, #1
    21cc:	strne	r3, [r2]
    21d0:	cmp	r8, r9
    21d4:	movcs	r3, #0
    21d8:	movcc	r3, #1
    21dc:	cmp	fp, #0
    21e0:	movle	r3, #0
    21e4:	cmp	r3, #0
    21e8:	beq	2224 <main@@Base+0xe34>
    21ec:	mov	r5, r4
    21f0:	add	r4, r4, #1
    21f4:	ldrb	r0, [r5]
    21f8:	bl	11b0 <g_ascii_toupper@plt>
    21fc:	mov	r1, r0
    2200:	mov	r0, r7
    2204:	bl	13d8 <strchr@plt>
    2208:	cmp	r0, #0
    220c:	rsb	r3, r7, r0
    2210:	and	r1, r3, #15
    2214:	bne	2194 <main@@Base+0xda4>
    2218:	mov	sl, r6
    221c:	mvn	r6, #0
    2220:	b	211c <main@@Base+0xd2c>
    2224:	mov	r3, sl
    2228:	mov	sl, r6
    222c:	mov	r6, r3
    2230:	b	211c <main@@Base+0xd2c>
    2234:	mov	r6, r0
    2238:	b	211c <main@@Base+0xd2c>
    223c:	cmp	r6, #0
    2240:	ldreq	r0, [sp, #12]
    2244:	beq	20c4 <main@@Base+0xcd4>
    2248:	ldr	r0, [sp, #12]
    224c:	bl	12b8 <g_free@plt>
    2250:	mov	r0, #0
    2254:	add	sp, sp, #20
    2258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    225c:	ldr	r1, [pc, #116]	; 22d8 <main@@Base+0xee8>
    2260:	mov	r0, r4
    2264:	ldr	r2, [pc, #112]	; 22dc <main@@Base+0xeec>
    2268:	add	r1, pc, r1
    226c:	add	r2, pc, r2
    2270:	add	r1, r1, #20
    2274:	bl	1174 <g_return_if_fail_warning@plt>
    2278:	mov	r0, r4
    227c:	add	sp, sp, #20
    2280:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2284:	bl	1354 <strlen@plt>
    2288:	ldr	r2, [sp, #8]
    228c:	cmp	r2, #0
    2290:	mov	fp, r0
    2294:	bne	20e0 <main@@Base+0xcf0>
    2298:	ldr	r3, [sp, #8]
    229c:	str	r3, [sp, #4]
    22a0:	b	20ec <main@@Base+0xcfc>
    22a4:	ldr	r1, [pc, #52]	; 22e0 <main@@Base+0xef0>
    22a8:	mov	r0, r3
    22ac:	ldr	r2, [pc, #48]	; 22e4 <main@@Base+0xef4>
    22b0:	add	r1, pc, r1
    22b4:	add	r2, pc, r2
    22b8:	add	r1, r1, #20
    22bc:	bl	1174 <g_return_if_fail_warning@plt>
    22c0:	ldr	r0, [sp, #56]	; 0x38
    22c4:	add	sp, sp, #20
    22c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    22cc:	andeq	r0, r0, r8, asr #19
    22d0:	andeq	r0, r0, r0, lsr sl
    22d4:	andeq	r0, r0, r0, lsl #19
    22d8:	andeq	r0, r0, r0, lsl r8
    22dc:	andeq	r0, r0, ip, asr r8
    22e0:	andeq	r0, r0, r8, asr #15
    22e4:	andeq	r0, r0, r4, lsr #16
    22e8:	push	{lr}		; (str lr, [sp, #-4]!)
    22ec:	sub	sp, sp, #12
    22f0:	mov	r3, #1
    22f4:	str	r2, [sp]
    22f8:	mov	r2, #0
    22fc:	bl	2060 <main@@Base+0xc70>
    2300:	add	sp, sp, #12
    2304:	pop	{pc}		; (ldr pc, [sp], #4)
    2308:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    230c:	rsbs	r4, r1, #1
    2310:	sub	sp, sp, #12
    2314:	mov	r7, r1
    2318:	movcc	r4, #0
    231c:	cmp	r0, #0
    2320:	orrne	r4, r4, #1
    2324:	cmp	r4, #0
    2328:	mov	r5, r0
    232c:	str	r3, [sp, #4]
    2330:	ldr	sl, [sp, #48]	; 0x30
    2334:	beq	2458 <main@@Base+0x1068>
    2338:	ldr	r6, [pc, #336]	; 2490 <main@@Base+0x10a0>
    233c:	cmp	r2, #0
    2340:	add	r6, pc, r6
    2344:	beq	2480 <main@@Base+0x1090>
    2348:	lsl	r0, r7, #1
    234c:	add	r0, r0, #1
    2350:	bl	1288 <g_string_sized_new@plt>
    2354:	cmp	r7, #0
    2358:	mov	r4, r0
    235c:	beq	2434 <main@@Base+0x1044>
    2360:	ldr	r3, [sp, #4]
    2364:	mov	fp, #0
    2368:	mov	r8, fp
    236c:	cmp	r3, fp
    2370:	cmpne	sl, fp
    2374:	moveq	r9, #0
    2378:	movne	r9, #1
    237c:	b	23d0 <main@@Base+0xfe0>
    2380:	ldr	ip, [r4]
    2384:	str	r0, [r4, #4]
    2388:	strb	r2, [ip, r1]
    238c:	ldm	r4, {r1, r2}
    2390:	strb	r8, [r1, r2]
    2394:	ldmib	r4, {r1, ip}
    2398:	ldrb	r2, [r5, fp]
    239c:	add	r0, r1, #1
    23a0:	and	r2, r2, #15
    23a4:	cmp	r0, ip
    23a8:	ldrb	r2, [r6, r2]
    23ac:	bcs	241c <main@@Base+0x102c>
    23b0:	ldr	ip, [r4]
    23b4:	add	fp, fp, #1
    23b8:	str	r0, [r4, #4]
    23bc:	cmp	r7, fp
    23c0:	strb	r2, [ip, r1]
    23c4:	ldm	r4, {r1, r2}
    23c8:	strb	r8, [r1, r2]
    23cc:	beq	2434 <main@@Base+0x1044>
    23d0:	cmp	r9, #0
    23d4:	beq	23f4 <main@@Base+0x1004>
    23d8:	cmp	fp, #0
    23dc:	beq	23f4 <main@@Base+0x1004>
    23e0:	mov	r0, fp
    23e4:	mov	r1, sl
    23e8:	bl	26ac <main@@Base+0x12bc>
    23ec:	cmp	r1, #0
    23f0:	beq	2448 <main@@Base+0x1058>
    23f4:	ldmib	r4, {r1, ip}
    23f8:	ldrb	r2, [r5, fp]
    23fc:	add	r0, r1, #1
    2400:	cmp	r0, ip
    2404:	ldrb	r2, [r6, r2, lsr #4]
    2408:	bcc	2380 <main@@Base+0xf90>
    240c:	mov	r0, r4
    2410:	mvn	r1, #0
    2414:	bl	1240 <g_string_insert_c@plt>
    2418:	b	2394 <main@@Base+0xfa4>
    241c:	mov	r0, r4
    2420:	mvn	r1, #0
    2424:	add	fp, fp, #1
    2428:	bl	1240 <g_string_insert_c@plt>
    242c:	cmp	r7, fp
    2430:	bne	23d0 <main@@Base+0xfe0>
    2434:	mov	r0, r4
    2438:	mov	r1, #0
    243c:	add	sp, sp, #12
    2440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2444:	b	1330 <g_string_free@plt>
    2448:	mov	r0, r4
    244c:	ldr	r1, [sp, #4]
    2450:	bl	13b4 <g_string_append@plt>
    2454:	b	23f4 <main@@Base+0x1004>
    2458:	ldr	r1, [pc, #52]	; 2494 <main@@Base+0x10a4>
    245c:	mov	r0, r4
    2460:	ldr	r2, [pc, #48]	; 2498 <main@@Base+0x10a8>
    2464:	add	r1, pc, r1
    2468:	add	r2, pc, r2
    246c:	add	r1, r1, #60	; 0x3c
    2470:	bl	1174 <g_return_if_fail_warning@plt>
    2474:	mov	r0, r4
    2478:	add	sp, sp, #12
    247c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2480:	ldr	r6, [pc, #20]	; 249c <main@@Base+0x10ac>
    2484:	add	r6, pc, r6
    2488:	add	r6, r6, #40	; 0x28
    248c:	b	2348 <main@@Base+0xf58>
    2490:	andeq	r0, r0, r8, lsr r7
    2494:	andeq	r0, r0, r4, lsl r6
    2498:	andeq	r0, r0, r0, ror #12
    249c:	strdeq	r0, [r0], -r4
    24a0:	push	{lr}		; (str lr, [sp, #-4]!)
    24a4:	sub	sp, sp, #12
    24a8:	mov	r3, #0
    24ac:	mov	r2, #1
    24b0:	str	r3, [sp]
    24b4:	bl	2308 <main@@Base+0xf18>
    24b8:	add	sp, sp, #12
    24bc:	pop	{pc}		; (ldr pc, [sp], #4)
    24c0:	subs	r2, r1, #1
    24c4:	bxeq	lr
    24c8:	bcc	26a0 <main@@Base+0x12b0>
    24cc:	cmp	r0, r1
    24d0:	bls	2684 <main@@Base+0x1294>
    24d4:	tst	r1, r2
    24d8:	beq	2690 <main@@Base+0x12a0>
    24dc:	clz	r3, r0
    24e0:	clz	r2, r1
    24e4:	sub	r3, r2, r3
    24e8:	rsbs	r3, r3, #31
    24ec:	addne	r3, r3, r3, lsl #1
    24f0:	mov	r2, #0
    24f4:	addne	pc, pc, r3, lsl #2
    24f8:	nop	{0}
    24fc:	cmp	r0, r1, lsl #31
    2500:	adc	r2, r2, r2
    2504:	subcs	r0, r0, r1, lsl #31
    2508:	cmp	r0, r1, lsl #30
    250c:	adc	r2, r2, r2
    2510:	subcs	r0, r0, r1, lsl #30
    2514:	cmp	r0, r1, lsl #29
    2518:	adc	r2, r2, r2
    251c:	subcs	r0, r0, r1, lsl #29
    2520:	cmp	r0, r1, lsl #28
    2524:	adc	r2, r2, r2
    2528:	subcs	r0, r0, r1, lsl #28
    252c:	cmp	r0, r1, lsl #27
    2530:	adc	r2, r2, r2
    2534:	subcs	r0, r0, r1, lsl #27
    2538:	cmp	r0, r1, lsl #26
    253c:	adc	r2, r2, r2
    2540:	subcs	r0, r0, r1, lsl #26
    2544:	cmp	r0, r1, lsl #25
    2548:	adc	r2, r2, r2
    254c:	subcs	r0, r0, r1, lsl #25
    2550:	cmp	r0, r1, lsl #24
    2554:	adc	r2, r2, r2
    2558:	subcs	r0, r0, r1, lsl #24
    255c:	cmp	r0, r1, lsl #23
    2560:	adc	r2, r2, r2
    2564:	subcs	r0, r0, r1, lsl #23
    2568:	cmp	r0, r1, lsl #22
    256c:	adc	r2, r2, r2
    2570:	subcs	r0, r0, r1, lsl #22
    2574:	cmp	r0, r1, lsl #21
    2578:	adc	r2, r2, r2
    257c:	subcs	r0, r0, r1, lsl #21
    2580:	cmp	r0, r1, lsl #20
    2584:	adc	r2, r2, r2
    2588:	subcs	r0, r0, r1, lsl #20
    258c:	cmp	r0, r1, lsl #19
    2590:	adc	r2, r2, r2
    2594:	subcs	r0, r0, r1, lsl #19
    2598:	cmp	r0, r1, lsl #18
    259c:	adc	r2, r2, r2
    25a0:	subcs	r0, r0, r1, lsl #18
    25a4:	cmp	r0, r1, lsl #17
    25a8:	adc	r2, r2, r2
    25ac:	subcs	r0, r0, r1, lsl #17
    25b0:	cmp	r0, r1, lsl #16
    25b4:	adc	r2, r2, r2
    25b8:	subcs	r0, r0, r1, lsl #16
    25bc:	cmp	r0, r1, lsl #15
    25c0:	adc	r2, r2, r2
    25c4:	subcs	r0, r0, r1, lsl #15
    25c8:	cmp	r0, r1, lsl #14
    25cc:	adc	r2, r2, r2
    25d0:	subcs	r0, r0, r1, lsl #14
    25d4:	cmp	r0, r1, lsl #13
    25d8:	adc	r2, r2, r2
    25dc:	subcs	r0, r0, r1, lsl #13
    25e0:	cmp	r0, r1, lsl #12
    25e4:	adc	r2, r2, r2
    25e8:	subcs	r0, r0, r1, lsl #12
    25ec:	cmp	r0, r1, lsl #11
    25f0:	adc	r2, r2, r2
    25f4:	subcs	r0, r0, r1, lsl #11
    25f8:	cmp	r0, r1, lsl #10
    25fc:	adc	r2, r2, r2
    2600:	subcs	r0, r0, r1, lsl #10
    2604:	cmp	r0, r1, lsl #9
    2608:	adc	r2, r2, r2
    260c:	subcs	r0, r0, r1, lsl #9
    2610:	cmp	r0, r1, lsl #8
    2614:	adc	r2, r2, r2
    2618:	subcs	r0, r0, r1, lsl #8
    261c:	cmp	r0, r1, lsl #7
    2620:	adc	r2, r2, r2
    2624:	subcs	r0, r0, r1, lsl #7
    2628:	cmp	r0, r1, lsl #6
    262c:	adc	r2, r2, r2
    2630:	subcs	r0, r0, r1, lsl #6
    2634:	cmp	r0, r1, lsl #5
    2638:	adc	r2, r2, r2
    263c:	subcs	r0, r0, r1, lsl #5
    2640:	cmp	r0, r1, lsl #4
    2644:	adc	r2, r2, r2
    2648:	subcs	r0, r0, r1, lsl #4
    264c:	cmp	r0, r1, lsl #3
    2650:	adc	r2, r2, r2
    2654:	subcs	r0, r0, r1, lsl #3
    2658:	cmp	r0, r1, lsl #2
    265c:	adc	r2, r2, r2
    2660:	subcs	r0, r0, r1, lsl #2
    2664:	cmp	r0, r1, lsl #1
    2668:	adc	r2, r2, r2
    266c:	subcs	r0, r0, r1, lsl #1
    2670:	cmp	r0, r1
    2674:	adc	r2, r2, r2
    2678:	subcs	r0, r0, r1
    267c:	mov	r0, r2
    2680:	bx	lr
    2684:	moveq	r0, #1
    2688:	movne	r0, #0
    268c:	bx	lr
    2690:	clz	r2, r1
    2694:	rsb	r2, r2, #31
    2698:	lsr	r0, r0, r2
    269c:	bx	lr
    26a0:	cmp	r0, #0
    26a4:	mvnne	r0, #0
    26a8:	b	26cc <main@@Base+0x12dc>
    26ac:	cmp	r1, #0
    26b0:	beq	26a0 <main@@Base+0x12b0>
    26b4:	push	{r0, r1, lr}
    26b8:	bl	24c0 <main@@Base+0x10d0>
    26bc:	pop	{r1, r2, lr}
    26c0:	mul	r3, r2, r0
    26c4:	sub	r1, r1, r3
    26c8:	bx	lr
    26cc:	push	{r1, lr}
    26d0:	mov	r0, #8
    26d4:	bl	12dc <raise@plt>
    26d8:	pop	{r1, pc}

000026dc <__libc_csu_init@@Base>:
    26dc:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
    26e0:	mov	r7, r0
    26e4:	ldr	r6, [pc, #76]	; 2738 <__libc_csu_init@@Base+0x5c>
    26e8:	mov	r8, r1
    26ec:	ldr	r5, [pc, #72]	; 273c <__libc_csu_init@@Base+0x60>
    26f0:	mov	r9, r2
    26f4:	add	r6, pc, r6
    26f8:	bl	1124 <_init@@Base>
    26fc:	add	r5, pc, r5
    2700:	rsb	r6, r5, r6
    2704:	asrs	r6, r6, #2
    2708:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
    270c:	sub	r5, r5, #4
    2710:	mov	r4, #0
    2714:	add	r4, r4, #1
    2718:	ldr	r3, [r5, #4]!
    271c:	mov	r0, r7
    2720:	mov	r1, r8
    2724:	mov	r2, r9
    2728:	blx	r3
    272c:	cmp	r4, r6
    2730:	bne	2714 <__libc_csu_init@@Base+0x38>
    2734:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
    2738:	andeq	r0, r1, r8, lsr r6
    273c:	andeq	r0, r1, ip, lsr #12

00002740 <__libc_csu_fini@@Base>:
    2740:	bx	lr

Disassembly of section .fini:

00002744 <_fini@@Base>:
    2744:	push	{r3, lr}
    2748:	pop	{r3, pc}
