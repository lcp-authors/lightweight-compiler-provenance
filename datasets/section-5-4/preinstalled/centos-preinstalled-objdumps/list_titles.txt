
centos-preinstalled/list_titles:     file format elf32-littlearm


Disassembly of section .init:

00010974 <_init@@Base>:
   10974:	push	{r3, lr}
   10978:	bl	10c88 <exit@plt+0x210>
   1097c:	pop	{r3, pc}

Disassembly of section .plt:

00010980 <abort@plt-0x14>:
   10980:	push	{lr}		; (str lr, [sp, #-4]!)
   10984:	ldr	lr, [pc, #4]	; 10990 <_init@@Base+0x1c>
   10988:	add	lr, pc, lr
   1098c:	ldr	pc, [lr, #8]!
   10990:	andeq	r1, r1, r0, ror r6

00010994 <abort@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1648]!	; 0x670

000109a0 <__libc_start_main@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1640]!	; 0x668

000109ac <__gmon_start__@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1632]!	; 0x660

000109b8 <getenv@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1624]!	; 0x658

000109c4 <__printf_chk@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1616]!	; 0x650

000109d0 <fopen@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1608]!	; 0x648

000109dc <__posix_getopt@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1600]!	; 0x640

000109e8 <bd_get_titles@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1592]!	; 0x638

000109f4 <strtol@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1584]!	; 0x630

00010a00 <bd_free_title_info@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1576]!	; 0x628

00010a0c <__vsnprintf_chk@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1568]!	; 0x620

00010a18 <raise@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #69632	; 0x11000
   10a20:	ldr	pc, [ip, #1560]!	; 0x618

00010a24 <setvbuf@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1552]!	; 0x610

00010a30 <__stack_chk_fail@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1544]!	; 0x608

00010a3c <__fprintf_chk@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1536]!	; 0x600

00010a48 <bd_close@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #69632	; 0x11000
   10a50:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a54 <bd_open@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #69632	; 0x11000
   10a5c:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a60 <bd_get_title_info@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #69632	; 0x11000
   10a68:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a6c <__sprintf_chk@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #69632	; 0x11000
   10a74:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a78 <exit@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #69632	; 0x11000
   10a80:	ldr	pc, [ip, #1496]!	; 0x5d8

Disassembly of section .text:

00010a84 <bd_set_debug_handler@@Base-0x328>:
   10a84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a88:	movw	r3, #7356	; 0x1cbc
   10a8c:	sub	sp, sp, #44	; 0x2c
   10a90:	mov	r5, r0
   10a94:	mov	r4, r1
   10a98:	movw	r0, #7340	; 0x1cac
   10a9c:	movt	r3, #1
   10aa0:	movt	r0, #1
   10aa4:	mov	r1, #53	; 0x35
   10aa8:	mov	r2, #64	; 0x40
   10aac:	bl	10e34 <bd_get_debug_mask@@Base+0x68>
   10ab0:	mov	r8, #0
   10ab4:	movw	r6, #8296	; 0x2068
   10ab8:	movw	r7, #8312	; 0x2078
   10abc:	movt	r6, #2
   10ac0:	movt	r7, #2
   10ac4:	mov	r9, r8
   10ac8:	movw	r2, #7376	; 0x1cd0
   10acc:	mov	r0, r5
   10ad0:	movt	r2, #1
   10ad4:	mov	r1, r4
   10ad8:	bl	109dc <__posix_getopt@plt>
   10adc:	cmn	r0, #1
   10ae0:	beq	10b04 <exit@plt+0x8c>
   10ae4:	cmp	r0, #115	; 0x73
   10ae8:	bne	10c2c <exit@plt+0x1b4>
   10aec:	mov	r1, #0
   10af0:	ldr	r0, [r7]
   10af4:	mov	r2, r1
   10af8:	bl	109f4 <strtol@plt>
   10afc:	mov	r9, r0
   10b00:	b	10ac8 <exit@plt+0x50>
   10b04:	ldr	r3, [r6]
   10b08:	cmp	r5, r3
   10b0c:	bgt	10c34 <exit@plt+0x1bc>
   10b10:	cmp	r8, #0
   10b14:	beq	10c2c <exit@plt+0x1b4>
   10b18:	mov	r1, #0
   10b1c:	mov	r0, r8
   10b20:	bl	10a54 <bd_open@plt>
   10b24:	mov	r2, r9
   10b28:	mov	r1, #3
   10b2c:	mov	sl, r0
   10b30:	bl	109e8 <bd_get_titles@plt>
   10b34:	subs	fp, r0, #0
   10b38:	ble	10c18 <exit@plt+0x1a0>
   10b3c:	mov	r9, #0
   10b40:	mov	r1, r9
   10b44:	mov	r2, #0
   10b48:	mov	r0, sl
   10b4c:	add	r9, r9, #1
   10b50:	bl	10a60 <bd_get_title_info@plt>
   10b54:	mov	r3, #0
   10b58:	movw	r2, #24464	; 0x5f90
   10b5c:	movt	r2, #1
   10b60:	ldrd	r6, [r0, #8]
   10b64:	mov	r8, r0
   10b68:	mov	r1, r7
   10b6c:	mov	r0, r6
   10b70:	bl	1100c <bd_get_debug_mask@@Base+0x240>
   10b74:	mov	r3, #0
   10b78:	mov	r2, #55552	; 0xd900
   10b7c:	movt	r2, #4943	; 0x134f
   10b80:	mov	r4, r0
   10b84:	mov	r5, r1
   10b88:	mov	r0, r6
   10b8c:	mov	r1, r7
   10b90:	bl	1100c <bd_get_debug_mask@@Base+0x240>
   10b94:	mov	r2, #3600	; 0xe10
   10b98:	mov	r3, #0
   10b9c:	strd	r0, [sp]
   10ba0:	mov	r0, r4
   10ba4:	mov	r1, r5
   10ba8:	bl	1100c <bd_get_debug_mask@@Base+0x240>
   10bac:	mov	r0, r2
   10bb0:	mov	r1, r3
   10bb4:	mov	r2, #60	; 0x3c
   10bb8:	mov	r3, #0
   10bbc:	bl	1100c <bd_get_debug_mask@@Base+0x240>
   10bc0:	mov	r2, #60	; 0x3c
   10bc4:	mov	r3, #0
   10bc8:	strd	r0, [sp, #8]
   10bcc:	mov	r0, r4
   10bd0:	mov	r1, r5
   10bd4:	bl	1100c <bd_get_debug_mask@@Base+0x240>
   10bd8:	movw	r1, #7380	; 0x1cd4
   10bdc:	mov	r0, #1
   10be0:	movt	r1, #1
   10be4:	strd	r2, [sp, #16]
   10be8:	mov	r2, r9
   10bec:	ldr	r3, [r8, #24]
   10bf0:	str	r3, [sp, #24]
   10bf4:	ldrb	r3, [r8, #20]
   10bf8:	str	r3, [sp, #28]
   10bfc:	ldr	r3, [r8, #16]
   10c00:	str	r3, [sp, #32]
   10c04:	bl	109c4 <__printf_chk@plt>
   10c08:	mov	r0, r8
   10c0c:	bl	10a00 <bd_free_title_info@plt>
   10c10:	cmp	fp, r9
   10c14:	bne	10b40 <exit@plt+0xc8>
   10c18:	mov	r0, sl
   10c1c:	bl	10a48 <bd_close@plt>
   10c20:	mov	r0, #0
   10c24:	add	sp, sp, #44	; 0x2c
   10c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c2c:	ldr	r0, [r4]
   10c30:	bl	10d80 <exit@plt+0x308>
   10c34:	cmp	r8, #0
   10c38:	bne	10b18 <exit@plt+0xa0>
   10c3c:	ldr	r8, [r4, r3, lsl #2]
   10c40:	add	r3, r3, #1
   10c44:	str	r3, [r6]
   10c48:	b	10ac8 <exit@plt+0x50>
   10c4c:	mov	fp, #0
   10c50:	mov	lr, #0
   10c54:	pop	{r1}		; (ldr r1, [sp], #4)
   10c58:	mov	r2, sp
   10c5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c60:	push	{r0}		; (str r0, [sp, #-4]!)
   10c64:	ldr	ip, [pc, #16]	; 10c7c <exit@plt+0x204>
   10c68:	push	{ip}		; (str ip, [sp, #-4]!)
   10c6c:	ldr	r0, [pc, #12]	; 10c80 <exit@plt+0x208>
   10c70:	ldr	r3, [pc, #12]	; 10c84 <exit@plt+0x20c>
   10c74:	bl	109a0 <__libc_start_main@plt>
   10c78:	bl	10994 <abort@plt>
   10c7c:	strdeq	r1, [r1], -ip
   10c80:	andeq	r0, r1, r4, lsl #21
   10c84:	muleq	r1, r8, fp
   10c88:	ldr	r3, [pc, #20]	; 10ca4 <exit@plt+0x22c>
   10c8c:	ldr	r2, [pc, #20]	; 10ca8 <exit@plt+0x230>
   10c90:	add	r3, pc, r3
   10c94:	ldr	r2, [r3, r2]
   10c98:	cmp	r2, #0
   10c9c:	bxeq	lr
   10ca0:	b	109ac <__gmon_start__@plt>
   10ca4:	andeq	r1, r1, r8, ror #6
   10ca8:	andeq	r0, r0, ip, asr r0
   10cac:	push	{r3, lr}
   10cb0:	movw	r0, #8296	; 0x2068
   10cb4:	ldr	r3, [pc, #36]	; 10ce0 <exit@plt+0x268>
   10cb8:	movt	r0, #2
   10cbc:	rsb	r3, r0, r3
   10cc0:	cmp	r3, #6
   10cc4:	popls	{r3, pc}
   10cc8:	movw	r3, #0
   10ccc:	movt	r3, #0
   10cd0:	cmp	r3, #0
   10cd4:	popeq	{r3, pc}
   10cd8:	blx	r3
   10cdc:	pop	{r3, pc}
   10ce0:	andeq	r2, r2, fp, rrx
   10ce4:	push	{r3, lr}
   10ce8:	movw	r0, #8296	; 0x2068
   10cec:	movw	r3, #8296	; 0x2068
   10cf0:	movt	r0, #2
   10cf4:	movt	r3, #2
   10cf8:	rsb	r3, r0, r3
   10cfc:	asr	r3, r3, #2
   10d00:	add	r3, r3, r3, lsr #31
   10d04:	asrs	r1, r3, #1
   10d08:	popeq	{r3, pc}
   10d0c:	movw	r2, #0
   10d10:	movt	r2, #0
   10d14:	cmp	r2, #0
   10d18:	popeq	{r3, pc}
   10d1c:	blx	r2
   10d20:	pop	{r3, pc}
   10d24:	push	{r4, lr}
   10d28:	movw	r4, #8316	; 0x207c
   10d2c:	movt	r4, #2
   10d30:	ldrb	r3, [r4]
   10d34:	cmp	r3, #0
   10d38:	popne	{r4, pc}
   10d3c:	bl	10cac <exit@plt+0x234>
   10d40:	mov	r3, #1
   10d44:	strb	r3, [r4]
   10d48:	pop	{r4, pc}
   10d4c:	movw	r0, #7924	; 0x1ef4
   10d50:	movt	r0, #2
   10d54:	push	{r3, lr}
   10d58:	ldr	r3, [r0]
   10d5c:	cmp	r3, #0
   10d60:	beq	10d78 <exit@plt+0x300>
   10d64:	movw	r3, #0
   10d68:	movt	r3, #0
   10d6c:	cmp	r3, #0
   10d70:	beq	10d78 <exit@plt+0x300>
   10d74:	blx	r3
   10d78:	pop	{r3, lr}
   10d7c:	b	10ce4 <exit@plt+0x26c>
   10d80:	movw	r1, #8308	; 0x2074
   10d84:	movt	r1, #2
   10d88:	push	{r3, lr}
   10d8c:	movw	r2, #7184	; 0x1c10
   10d90:	mov	r3, r0
   10d94:	movt	r2, #1
   10d98:	ldr	r0, [r1]
   10d9c:	mov	r1, #1
   10da0:	bl	10a3c <__fprintf_chk@plt>
   10da4:	mov	r0, #1
   10da8:	bl	10a78 <exit@plt>

00010dac <bd_set_debug_handler@@Base>:
   10dac:	movw	r3, #8320	; 0x2080
   10db0:	movt	r3, #2
   10db4:	str	r0, [r3]
   10db8:	bx	lr

00010dbc <bd_set_debug_mask@@Base>:
   10dbc:	movw	r3, #8292	; 0x2064
   10dc0:	movt	r3, #2
   10dc4:	str	r0, [r3]
   10dc8:	bx	lr

00010dcc <bd_get_debug_mask@@Base>:
   10dcc:	movw	r3, #8292	; 0x2064
   10dd0:	movt	r3, #2
   10dd4:	ldr	r0, [r3]
   10dd8:	bx	lr
   10ddc:	cmp	r2, #0
   10de0:	push	{r4, r5, r6, r7, lr}
   10de4:	mov	r7, r0
   10de8:	sub	sp, sp, #12
   10dec:	ble	10e28 <bd_get_debug_mask@@Base+0x5c>
   10df0:	sub	r5, r1, #1
   10df4:	add	r6, r0, r2, lsl #1
   10df8:	mov	r4, r0
   10dfc:	ldrb	r2, [r5, #1]!
   10e00:	mov	r0, r4
   10e04:	movw	r3, #7456	; 0x1d20
   10e08:	add	r4, r4, #2
   10e0c:	movt	r3, #1
   10e10:	mov	r1, #1
   10e14:	str	r2, [sp]
   10e18:	mvn	r2, #0
   10e1c:	bl	10a6c <__sprintf_chk@plt>
   10e20:	cmp	r4, r6
   10e24:	bne	10dfc <bd_get_debug_mask@@Base+0x30>
   10e28:	mov	r0, r7
   10e2c:	add	sp, sp, #12
   10e30:	pop	{r4, r5, r6, r7, pc}
   10e34:	push	{r3}		; (str r3, [sp, #-4]!)
   10e38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e3c:	movw	r4, #8320	; 0x2080
   10e40:	movt	r4, #2
   10e44:	movw	r5, #8304	; 0x2070
   10e48:	movt	r5, #2
   10e4c:	sub	sp, sp, #4096	; 0x1000
   10e50:	ldr	r6, [r4, #4]
   10e54:	sub	sp, sp, #16
   10e58:	ldr	r3, [r5]
   10e5c:	mov	r7, r2
   10e60:	cmp	r6, #0
   10e64:	add	r2, sp, #8192	; 0x2000
   10e68:	mov	sl, r0
   10e6c:	mov	r9, r1
   10e70:	ldr	r8, [r2, #-4044]	; 0xfffff034
   10e74:	str	r3, [r2, #-4084]	; 0xfffff00c
   10e78:	beq	10f38 <bd_get_debug_mask@@Base+0x16c>
   10e7c:	movw	r6, #8292	; 0x2064
   10e80:	movt	r6, #2
   10e84:	ldr	r3, [r6]
   10e88:	tst	r7, r3
   10e8c:	bne	10eb8 <bd_get_debug_mask@@Base+0xec>
   10e90:	add	r3, sp, #8192	; 0x2000
   10e94:	ldr	r2, [r3, #-4084]	; 0xfffff00c
   10e98:	ldr	r3, [r5]
   10e9c:	cmp	r2, r3
   10ea0:	bne	11008 <bd_get_debug_mask@@Base+0x23c>
   10ea4:	add	sp, sp, #4096	; 0x1000
   10ea8:	add	sp, sp, #16
   10eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10eb0:	add	sp, sp, #4
   10eb4:	bx	lr
   10eb8:	mov	r1, #1
   10ebc:	mov	r2, #4096	; 0x1000
   10ec0:	str	sl, [sp]
   10ec4:	movw	r3, #7556	; 0x1d84
   10ec8:	str	r9, [sp, #4]
   10ecc:	movt	r3, #1
   10ed0:	add	r0, sp, #12
   10ed4:	bl	10a6c <__sprintf_chk@plt>
   10ed8:	add	lr, sp, #4096	; 0x1000
   10edc:	add	lr, lr, #16
   10ee0:	movw	r1, #61432	; 0xeff8
   10ee4:	movt	r1, #65535	; 0xffff
   10ee8:	add	ip, sp, #4096	; 0x1000
   10eec:	add	ip, ip, #56	; 0x38
   10ef0:	str	r8, [sp]
   10ef4:	str	ip, [sp, #4]
   10ef8:	mov	r2, #1
   10efc:	str	ip, [lr, r1]
   10f00:	add	ip, sp, #12
   10f04:	mvn	r3, #0
   10f08:	rsb	r1, r0, #4080	; 0xff0
   10f0c:	add	r0, ip, r0
   10f10:	add	r1, r1, #15
   10f14:	bl	10a0c <__vsnprintf_chk@plt>
   10f18:	ldr	r2, [r4]
   10f1c:	movw	r3, #8320	; 0x2080
   10f20:	movt	r3, #2
   10f24:	cmp	r2, #0
   10f28:	beq	10fc0 <bd_get_debug_mask@@Base+0x1f4>
   10f2c:	add	r0, sp, #12
   10f30:	blx	r2
   10f34:	b	10e90 <bd_get_debug_mask@@Base+0xc4>
   10f38:	movw	r3, #8308	; 0x2074
   10f3c:	movt	r3, #2
   10f40:	movw	r0, #7464	; 0x1d28
   10f44:	movt	r0, #1
   10f48:	ldr	r3, [r3]
   10f4c:	mov	r2, #1
   10f50:	stmib	r4, {r2, r3}
   10f54:	bl	109b8 <getenv@plt>
   10f58:	cmp	r0, #0
   10f5c:	movweq	r6, #8292	; 0x2064
   10f60:	movteq	r6, #2
   10f64:	beq	10f80 <bd_get_debug_mask@@Base+0x1b4>
   10f68:	mov	r1, r6
   10f6c:	movw	r6, #8292	; 0x2064
   10f70:	mov	r2, r1
   10f74:	movt	r6, #2
   10f78:	bl	109f4 <strtol@plt>
   10f7c:	str	r0, [r6]
   10f80:	movw	r0, #7480	; 0x1d38
   10f84:	movt	r0, #1
   10f88:	bl	109b8 <getenv@plt>
   10f8c:	subs	fp, r0, #0
   10f90:	beq	10e84 <bd_get_debug_mask@@Base+0xb8>
   10f94:	movw	r1, #7496	; 0x1d48
   10f98:	movt	r1, #1
   10f9c:	bl	109d0 <fopen@plt>
   10fa0:	subs	ip, r0, #0
   10fa4:	beq	10fdc <bd_get_debug_mask@@Base+0x210>
   10fa8:	mov	r1, #0
   10fac:	mov	r2, #1
   10fb0:	mov	r3, r1
   10fb4:	str	ip, [r4, #8]
   10fb8:	bl	10a24 <setvbuf@plt>
   10fbc:	b	10e84 <bd_get_debug_mask@@Base+0xb8>
   10fc0:	ldr	r0, [r3, #8]
   10fc4:	movw	r2, #7564	; 0x1d8c
   10fc8:	add	r3, sp, #12
   10fcc:	mov	r1, #1
   10fd0:	movt	r2, #1
   10fd4:	bl	10a3c <__fprintf_chk@plt>
   10fd8:	b	10e90 <bd_get_debug_mask@@Base+0xc4>
   10fdc:	mov	r3, #77	; 0x4d
   10fe0:	ldr	r0, [r4, #8]
   10fe4:	str	r3, [sp]
   10fe8:	movw	r2, #7500	; 0x1d4c
   10fec:	str	fp, [sp, #4]
   10ff0:	movt	r2, #1
   10ff4:	movw	r3, #7536	; 0x1d70
   10ff8:	mov	r1, #1
   10ffc:	movt	r3, #1
   11000:	bl	10a3c <__fprintf_chk@plt>
   11004:	b	10e84 <bd_get_debug_mask@@Base+0xb8>
   11008:	bl	10a30 <__stack_chk_fail@plt>
   1100c:	cmp	r3, #0
   11010:	cmpeq	r2, #0
   11014:	bne	1102c <bd_get_debug_mask@@Base+0x260>
   11018:	cmp	r1, #0
   1101c:	cmpeq	r0, #0
   11020:	mvnne	r1, #0
   11024:	mvnne	r0, #0
   11028:	b	11048 <bd_get_debug_mask@@Base+0x27c>
   1102c:	sub	sp, sp, #8
   11030:	push	{sp, lr}
   11034:	bl	11094 <bd_get_debug_mask@@Base+0x2c8>
   11038:	ldr	lr, [sp, #4]
   1103c:	add	sp, sp, #8
   11040:	pop	{r2, r3}
   11044:	bx	lr
   11048:	push	{r1, lr}
   1104c:	mov	r0, #8
   11050:	bl	10a18 <raise@plt>
   11054:	pop	{r1, pc}
   11058:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1105c:	mov	r8, r2
   11060:	mov	r6, r0
   11064:	mov	r7, r1
   11068:	mov	sl, r3
   1106c:	ldr	r9, [sp, #32]
   11070:	bl	110d0 <bd_get_debug_mask@@Base+0x304>
   11074:	umull	r4, r5, r8, r0
   11078:	mul	r8, r8, r1
   1107c:	mla	r2, r0, sl, r8
   11080:	add	r5, r2, r5
   11084:	subs	r4, r6, r4
   11088:	sbc	r5, r7, r5
   1108c:	strd	r4, [r9]
   11090:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11094:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11098:	mov	r8, r2
   1109c:	mov	r6, r0
   110a0:	mov	r7, r1
   110a4:	mov	r5, r3
   110a8:	ldr	r9, [sp, #32]
   110ac:	bl	1155c <bd_get_debug_mask@@Base+0x790>
   110b0:	mul	r3, r0, r5
   110b4:	umull	r4, r5, r0, r8
   110b8:	mla	r8, r8, r1, r3
   110bc:	add	r5, r8, r5
   110c0:	subs	r4, r6, r4
   110c4:	sbc	r5, r7, r5
   110c8:	strd	r4, [r9]
   110cc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   110d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110d4:	rsbs	r4, r0, #0
   110d8:	rsc	r5, r1, #0
   110dc:	cmp	r1, #0
   110e0:	mvn	r6, #0
   110e4:	sub	sp, sp, #12
   110e8:	movge	r4, r0
   110ec:	movge	r5, r1
   110f0:	movge	r6, #0
   110f4:	cmp	r3, #0
   110f8:	blt	11330 <bd_get_debug_mask@@Base+0x564>
   110fc:	cmp	r3, #0
   11100:	mov	sl, r4
   11104:	mov	ip, r5
   11108:	mov	r0, r2
   1110c:	mov	r1, r3
   11110:	mov	r8, r2
   11114:	mov	r7, r4
   11118:	mov	r9, r5
   1111c:	bne	11214 <bd_get_debug_mask@@Base+0x448>
   11120:	cmp	r2, r5
   11124:	bls	11250 <bd_get_debug_mask@@Base+0x484>
   11128:	clz	r3, r2
   1112c:	cmp	r3, #0
   11130:	rsbne	r2, r3, #32
   11134:	lslne	r8, r0, r3
   11138:	lsrne	r2, r4, r2
   1113c:	lslne	r7, r4, r3
   11140:	orrne	r9, r2, r5, lsl r3
   11144:	lsr	r4, r8, #16
   11148:	uxth	sl, r8
   1114c:	mov	r1, r4
   11150:	mov	r0, r9
   11154:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   11158:	mov	r1, r4
   1115c:	mov	fp, r0
   11160:	mov	r0, r9
   11164:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   11168:	mul	r0, sl, fp
   1116c:	lsr	r2, r7, #16
   11170:	orr	r1, r2, r1, lsl #16
   11174:	cmp	r0, r1
   11178:	bls	1119c <bd_get_debug_mask@@Base+0x3d0>
   1117c:	adds	r1, r1, r8
   11180:	sub	r3, fp, #1
   11184:	bcs	11198 <bd_get_debug_mask@@Base+0x3cc>
   11188:	cmp	r0, r1
   1118c:	subhi	fp, fp, #2
   11190:	addhi	r1, r1, r8
   11194:	bhi	1119c <bd_get_debug_mask@@Base+0x3d0>
   11198:	mov	fp, r3
   1119c:	rsb	r9, r0, r1
   111a0:	mov	r1, r4
   111a4:	uxth	r7, r7
   111a8:	mov	r0, r9
   111ac:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   111b0:	mov	r1, r4
   111b4:	mov	r5, r0
   111b8:	mov	r0, r9
   111bc:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   111c0:	mul	sl, sl, r5
   111c4:	orr	r1, r7, r1, lsl #16
   111c8:	cmp	sl, r1
   111cc:	bls	111ec <bd_get_debug_mask@@Base+0x420>
   111d0:	adds	r8, r1, r8
   111d4:	sub	r3, r5, #1
   111d8:	bcs	111e8 <bd_get_debug_mask@@Base+0x41c>
   111dc:	cmp	sl, r8
   111e0:	subhi	r5, r5, #2
   111e4:	bhi	111ec <bd_get_debug_mask@@Base+0x420>
   111e8:	mov	r5, r3
   111ec:	orr	r3, r5, fp, lsl #16
   111f0:	mov	r4, #0
   111f4:	cmp	r6, #0
   111f8:	mov	r0, r3
   111fc:	mov	r1, r4
   11200:	beq	1120c <bd_get_debug_mask@@Base+0x440>
   11204:	rsbs	r0, r0, #0
   11208:	rsc	r1, r1, #0
   1120c:	add	sp, sp, #12
   11210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11214:	cmp	r3, r5
   11218:	movhi	r4, #0
   1121c:	movhi	r3, r4
   11220:	bhi	111f4 <bd_get_debug_mask@@Base+0x428>
   11224:	clz	r5, r1
   11228:	cmp	r5, #0
   1122c:	bne	1141c <bd_get_debug_mask@@Base+0x650>
   11230:	cmp	r1, ip
   11234:	cmpcs	r2, sl
   11238:	movhi	r4, #0
   1123c:	movls	r4, #1
   11240:	movls	r3, #1
   11244:	movls	r4, r5
   11248:	movhi	r3, r4
   1124c:	b	111f4 <bd_get_debug_mask@@Base+0x428>
   11250:	cmp	r2, #0
   11254:	bne	11268 <bd_get_debug_mask@@Base+0x49c>
   11258:	mov	r1, r2
   1125c:	mov	r0, #1
   11260:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   11264:	mov	r8, r0
   11268:	clz	r3, r8
   1126c:	cmp	r3, #0
   11270:	bne	11340 <bd_get_debug_mask@@Base+0x574>
   11274:	rsb	r9, r8, r9
   11278:	lsr	r5, r8, #16
   1127c:	uxth	sl, r8
   11280:	mov	r4, #1
   11284:	mov	r1, r5
   11288:	mov	r0, r9
   1128c:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   11290:	mov	r1, r5
   11294:	mov	fp, r0
   11298:	mov	r0, r9
   1129c:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   112a0:	mul	r0, sl, fp
   112a4:	lsr	r2, r7, #16
   112a8:	orr	r1, r2, r1, lsl #16
   112ac:	cmp	r0, r1
   112b0:	bls	112d0 <bd_get_debug_mask@@Base+0x504>
   112b4:	adds	r1, r1, r8
   112b8:	sub	r3, fp, #1
   112bc:	bcs	1153c <bd_get_debug_mask@@Base+0x770>
   112c0:	cmp	r0, r1
   112c4:	subhi	fp, fp, #2
   112c8:	addhi	r1, r1, r8
   112cc:	bls	1153c <bd_get_debug_mask@@Base+0x770>
   112d0:	rsb	r2, r0, r1
   112d4:	mov	r1, r5
   112d8:	str	r2, [sp]
   112dc:	uxth	r7, r7
   112e0:	mov	r0, r2
   112e4:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   112e8:	ldr	r2, [sp]
   112ec:	mov	r1, r5
   112f0:	mov	r9, r0
   112f4:	mov	r0, r2
   112f8:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   112fc:	mul	sl, sl, r9
   11300:	orr	r1, r7, r1, lsl #16
   11304:	cmp	sl, r1
   11308:	bls	11328 <bd_get_debug_mask@@Base+0x55c>
   1130c:	adds	r8, r1, r8
   11310:	sub	r3, r9, #1
   11314:	bcs	11324 <bd_get_debug_mask@@Base+0x558>
   11318:	cmp	sl, r8
   1131c:	subhi	r9, r9, #2
   11320:	bhi	11328 <bd_get_debug_mask@@Base+0x55c>
   11324:	mov	r9, r3
   11328:	orr	r3, r9, fp, lsl #16
   1132c:	b	111f4 <bd_get_debug_mask@@Base+0x428>
   11330:	mvn	r6, r6
   11334:	rsbs	r2, r2, #0
   11338:	rsc	r3, r3, #0
   1133c:	b	110fc <bd_get_debug_mask@@Base+0x330>
   11340:	lsl	r8, r8, r3
   11344:	rsb	fp, r3, #32
   11348:	lsr	r4, r9, fp
   1134c:	lsr	fp, r7, fp
   11350:	lsr	r5, r8, #16
   11354:	orr	fp, fp, r9, lsl r3
   11358:	mov	r0, r4
   1135c:	lsl	r7, r7, r3
   11360:	mov	r1, r5
   11364:	uxth	sl, r8
   11368:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   1136c:	mov	r1, r5
   11370:	mov	r3, r0
   11374:	mov	r0, r4
   11378:	str	r3, [sp]
   1137c:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   11380:	ldr	r3, [sp]
   11384:	lsr	r2, fp, #16
   11388:	mul	r0, sl, r3
   1138c:	orr	r1, r2, r1, lsl #16
   11390:	cmp	r0, r1
   11394:	bls	113b4 <bd_get_debug_mask@@Base+0x5e8>
   11398:	adds	r1, r1, r8
   1139c:	sub	r2, r3, #1
   113a0:	bcs	11554 <bd_get_debug_mask@@Base+0x788>
   113a4:	cmp	r0, r1
   113a8:	subhi	r3, r3, #2
   113ac:	addhi	r1, r1, r8
   113b0:	bls	11554 <bd_get_debug_mask@@Base+0x788>
   113b4:	rsb	r9, r0, r1
   113b8:	mov	r1, r5
   113bc:	str	r3, [sp]
   113c0:	uxth	fp, fp
   113c4:	mov	r0, r9
   113c8:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   113cc:	mov	r1, r5
   113d0:	mov	r4, r0
   113d4:	mov	r0, r9
   113d8:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   113dc:	mul	r9, sl, r4
   113e0:	ldr	r3, [sp]
   113e4:	orr	r1, fp, r1, lsl #16
   113e8:	cmp	r9, r1
   113ec:	bls	11410 <bd_get_debug_mask@@Base+0x644>
   113f0:	adds	r1, r1, r8
   113f4:	sub	r2, r4, #1
   113f8:	bcs	1140c <bd_get_debug_mask@@Base+0x640>
   113fc:	cmp	r9, r1
   11400:	subhi	r4, r4, #2
   11404:	addhi	r1, r1, r8
   11408:	bhi	11410 <bd_get_debug_mask@@Base+0x644>
   1140c:	mov	r4, r2
   11410:	rsb	r9, r9, r1
   11414:	orr	r4, r4, r3, lsl #16
   11418:	b	11284 <bd_get_debug_mask@@Base+0x4b8>
   1141c:	rsb	sl, r5, #32
   11420:	lsl	r3, r2, r5
   11424:	lsr	r0, r2, sl
   11428:	lsr	r2, ip, sl
   1142c:	orr	r4, r0, r1, lsl r5
   11430:	lsr	sl, r7, sl
   11434:	mov	r0, r2
   11438:	orr	sl, sl, ip, lsl r5
   1143c:	lsr	r9, r4, #16
   11440:	str	r3, [sp, #4]
   11444:	str	r2, [sp]
   11448:	uxth	fp, r4
   1144c:	mov	r1, r9
   11450:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   11454:	ldr	r2, [sp]
   11458:	mov	r1, r9
   1145c:	mov	r8, r0
   11460:	mov	r0, r2
   11464:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   11468:	mul	r0, fp, r8
   1146c:	lsr	r2, sl, #16
   11470:	orr	r1, r2, r1, lsl #16
   11474:	cmp	r0, r1
   11478:	bls	11498 <bd_get_debug_mask@@Base+0x6cc>
   1147c:	adds	r1, r1, r4
   11480:	sub	r2, r8, #1
   11484:	bcs	1154c <bd_get_debug_mask@@Base+0x780>
   11488:	cmp	r0, r1
   1148c:	subhi	r8, r8, #2
   11490:	addhi	r1, r1, r4
   11494:	bls	1154c <bd_get_debug_mask@@Base+0x780>
   11498:	rsb	ip, r0, r1
   1149c:	mov	r1, r9
   114a0:	str	ip, [sp]
   114a4:	mov	r0, ip
   114a8:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   114ac:	ldr	ip, [sp]
   114b0:	mov	r1, r9
   114b4:	mov	r2, r0
   114b8:	mov	r0, ip
   114bc:	str	r2, [sp]
   114c0:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   114c4:	ldr	r2, [sp]
   114c8:	uxth	ip, sl
   114cc:	mul	fp, fp, r2
   114d0:	orr	ip, ip, r1, lsl #16
   114d4:	cmp	fp, ip
   114d8:	bls	114f8 <bd_get_debug_mask@@Base+0x72c>
   114dc:	adds	ip, ip, r4
   114e0:	sub	r1, r2, #1
   114e4:	bcs	11544 <bd_get_debug_mask@@Base+0x778>
   114e8:	cmp	fp, ip
   114ec:	subhi	r2, r2, #2
   114f0:	addhi	ip, ip, r4
   114f4:	bls	11544 <bd_get_debug_mask@@Base+0x778>
   114f8:	ldr	r0, [sp, #4]
   114fc:	orr	r1, r2, r8, lsl #16
   11500:	rsb	fp, fp, ip
   11504:	umull	r2, r3, r1, r0
   11508:	cmp	fp, r3
   1150c:	bcc	11530 <bd_get_debug_mask@@Base+0x764>
   11510:	movne	r4, #0
   11514:	moveq	r4, #1
   11518:	cmp	r2, r7, lsl r5
   1151c:	movls	r4, #0
   11520:	andhi	r4, r4, #1
   11524:	cmp	r4, #0
   11528:	moveq	r3, r1
   1152c:	beq	111f4 <bd_get_debug_mask@@Base+0x428>
   11530:	sub	r3, r1, #1
   11534:	mov	r4, #0
   11538:	b	111f4 <bd_get_debug_mask@@Base+0x428>
   1153c:	mov	fp, r3
   11540:	b	112d0 <bd_get_debug_mask@@Base+0x504>
   11544:	mov	r2, r1
   11548:	b	114f8 <bd_get_debug_mask@@Base+0x72c>
   1154c:	mov	r8, r2
   11550:	b	11498 <bd_get_debug_mask@@Base+0x6cc>
   11554:	mov	r3, r2
   11558:	b	113b4 <bd_get_debug_mask@@Base+0x5e8>
   1155c:	cmp	r3, #0
   11560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11564:	mov	r6, r0
   11568:	sub	sp, sp, #12
   1156c:	mov	r5, r1
   11570:	mov	r7, r0
   11574:	mov	r4, r2
   11578:	mov	r8, r1
   1157c:	bne	1165c <bd_get_debug_mask@@Base+0x890>
   11580:	cmp	r2, r1
   11584:	bls	11698 <bd_get_debug_mask@@Base+0x8cc>
   11588:	clz	r3, r2
   1158c:	cmp	r3, #0
   11590:	rsbne	r8, r3, #32
   11594:	lslne	r4, r2, r3
   11598:	lsrne	r8, r0, r8
   1159c:	lslne	r7, r0, r3
   115a0:	orrne	r8, r8, r1, lsl r3
   115a4:	lsr	r5, r4, #16
   115a8:	uxth	sl, r4
   115ac:	mov	r1, r5
   115b0:	mov	r0, r8
   115b4:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   115b8:	mov	r1, r5
   115bc:	mov	r9, r0
   115c0:	mov	r0, r8
   115c4:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   115c8:	mul	r0, sl, r9
   115cc:	lsr	r3, r7, #16
   115d0:	orr	r1, r3, r1, lsl #16
   115d4:	cmp	r0, r1
   115d8:	bls	115fc <bd_get_debug_mask@@Base+0x830>
   115dc:	adds	r1, r1, r4
   115e0:	sub	r2, r9, #1
   115e4:	bcs	115f8 <bd_get_debug_mask@@Base+0x82c>
   115e8:	cmp	r0, r1
   115ec:	subhi	r9, r9, #2
   115f0:	addhi	r1, r1, r4
   115f4:	bhi	115fc <bd_get_debug_mask@@Base+0x830>
   115f8:	mov	r9, r2
   115fc:	rsb	r8, r0, r1
   11600:	mov	r1, r5
   11604:	uxth	r7, r7
   11608:	mov	r0, r8
   1160c:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   11610:	mov	r1, r5
   11614:	mov	r6, r0
   11618:	mov	r0, r8
   1161c:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   11620:	mul	sl, sl, r6
   11624:	orr	r1, r7, r1, lsl #16
   11628:	cmp	sl, r1
   1162c:	bls	11648 <bd_get_debug_mask@@Base+0x87c>
   11630:	adds	r4, r1, r4
   11634:	sub	r3, r6, #1
   11638:	bcs	11944 <bd_get_debug_mask@@Base+0xb78>
   1163c:	cmp	sl, r4
   11640:	subhi	r6, r6, #2
   11644:	bls	11944 <bd_get_debug_mask@@Base+0xb78>
   11648:	orr	r0, r6, r9, lsl #16
   1164c:	mov	r6, #0
   11650:	mov	r1, r6
   11654:	add	sp, sp, #12
   11658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1165c:	cmp	r3, r1
   11660:	movhi	r6, #0
   11664:	movhi	r0, r6
   11668:	bhi	11650 <bd_get_debug_mask@@Base+0x884>
   1166c:	clz	r7, r3
   11670:	cmp	r7, #0
   11674:	bne	11774 <bd_get_debug_mask@@Base+0x9a8>
   11678:	cmp	r3, r1
   1167c:	cmpcs	r2, r6
   11680:	movhi	r6, #0
   11684:	movls	r6, #1
   11688:	movls	r0, #1
   1168c:	movls	r6, r7
   11690:	movhi	r0, r6
   11694:	b	11650 <bd_get_debug_mask@@Base+0x884>
   11698:	cmp	r2, #0
   1169c:	bne	116b0 <bd_get_debug_mask@@Base+0x8e4>
   116a0:	mov	r1, r2
   116a4:	mov	r0, #1
   116a8:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   116ac:	mov	r4, r0
   116b0:	clz	r3, r4
   116b4:	cmp	r3, #0
   116b8:	bne	11870 <bd_get_debug_mask@@Base+0xaa4>
   116bc:	rsb	r5, r4, r5
   116c0:	lsr	r8, r4, #16
   116c4:	uxth	sl, r4
   116c8:	mov	r6, #1
   116cc:	mov	r1, r8
   116d0:	mov	r0, r5
   116d4:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   116d8:	mov	r1, r8
   116dc:	mov	r9, r0
   116e0:	mov	r0, r5
   116e4:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   116e8:	mul	r0, sl, r9
   116ec:	lsr	r3, r7, #16
   116f0:	orr	r1, r3, r1, lsl #16
   116f4:	cmp	r0, r1
   116f8:	bls	11718 <bd_get_debug_mask@@Base+0x94c>
   116fc:	adds	r1, r1, r4
   11700:	sub	r2, r9, #1
   11704:	bcs	1194c <bd_get_debug_mask@@Base+0xb80>
   11708:	cmp	r0, r1
   1170c:	subhi	r9, r9, #2
   11710:	addhi	r1, r1, r4
   11714:	bls	1194c <bd_get_debug_mask@@Base+0xb80>
   11718:	rsb	fp, r0, r1
   1171c:	mov	r1, r8
   11720:	uxth	r7, r7
   11724:	mov	r0, fp
   11728:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   1172c:	mov	r1, r8
   11730:	mov	r5, r0
   11734:	mov	r0, fp
   11738:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   1173c:	mul	sl, sl, r5
   11740:	orr	r1, r7, r1, lsl #16
   11744:	cmp	sl, r1
   11748:	bls	11764 <bd_get_debug_mask@@Base+0x998>
   1174c:	adds	r4, r1, r4
   11750:	sub	r3, r5, #1
   11754:	bcs	11954 <bd_get_debug_mask@@Base+0xb88>
   11758:	cmp	sl, r4
   1175c:	subhi	r5, r5, #2
   11760:	bls	11954 <bd_get_debug_mask@@Base+0xb88>
   11764:	orr	r0, r5, r9, lsl #16
   11768:	mov	r1, r6
   1176c:	add	sp, sp, #12
   11770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11774:	rsb	r1, r7, #32
   11778:	lsl	r0, r2, r7
   1177c:	lsr	r2, r2, r1
   11780:	lsr	fp, r5, r1
   11784:	orr	r8, r2, r3, lsl r7
   11788:	lsr	r1, r6, r1
   1178c:	str	r0, [sp, #4]
   11790:	orr	r5, r1, r5, lsl r7
   11794:	lsr	r9, r8, #16
   11798:	mov	r0, fp
   1179c:	uxth	sl, r8
   117a0:	mov	r1, r9
   117a4:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   117a8:	mov	r1, r9
   117ac:	mov	r4, r0
   117b0:	mov	r0, fp
   117b4:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   117b8:	mul	r0, sl, r4
   117bc:	lsr	ip, r5, #16
   117c0:	orr	r1, ip, r1, lsl #16
   117c4:	cmp	r0, r1
   117c8:	bls	117dc <bd_get_debug_mask@@Base+0xa10>
   117cc:	adds	r1, r1, r8
   117d0:	sub	r2, r4, #1
   117d4:	bcc	11970 <bd_get_debug_mask@@Base+0xba4>
   117d8:	mov	r4, r2
   117dc:	rsb	ip, r0, r1
   117e0:	mov	r1, r9
   117e4:	str	ip, [sp]
   117e8:	uxth	r5, r5
   117ec:	mov	r0, ip
   117f0:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   117f4:	ldr	ip, [sp]
   117f8:	mov	r1, r9
   117fc:	mov	fp, r0
   11800:	mov	r0, ip
   11804:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   11808:	mul	sl, sl, fp
   1180c:	orr	r1, r5, r1, lsl #16
   11810:	cmp	sl, r1
   11814:	bls	11828 <bd_get_debug_mask@@Base+0xa5c>
   11818:	adds	r1, r1, r8
   1181c:	sub	r2, fp, #1
   11820:	bcc	1195c <bd_get_debug_mask@@Base+0xb90>
   11824:	mov	fp, r2
   11828:	ldr	r3, [sp, #4]
   1182c:	orr	r0, fp, r4, lsl #16
   11830:	rsb	sl, sl, r1
   11834:	umull	r4, r5, r0, r3
   11838:	cmp	sl, r5
   1183c:	bcc	1185c <bd_get_debug_mask@@Base+0xa90>
   11840:	movne	r3, #0
   11844:	moveq	r3, #1
   11848:	cmp	r4, r6, lsl r7
   1184c:	movls	r6, #0
   11850:	andhi	r6, r3, #1
   11854:	cmp	r6, #0
   11858:	beq	11650 <bd_get_debug_mask@@Base+0x884>
   1185c:	mov	r6, #0
   11860:	sub	r0, r0, #1
   11864:	mov	r1, r6
   11868:	add	sp, sp, #12
   1186c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11870:	lsl	r4, r4, r3
   11874:	rsb	r9, r3, #32
   11878:	lsr	r2, r5, r9
   1187c:	lsr	r9, r6, r9
   11880:	lsr	r8, r4, #16
   11884:	orr	r9, r9, r5, lsl r3
   11888:	mov	r0, r2
   1188c:	lsl	r7, r6, r3
   11890:	mov	r1, r8
   11894:	str	r2, [sp]
   11898:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   1189c:	ldr	r2, [sp]
   118a0:	mov	r1, r8
   118a4:	uxth	sl, r4
   118a8:	mov	fp, r0
   118ac:	mov	r0, r2
   118b0:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   118b4:	mul	r0, sl, fp
   118b8:	lsr	r3, r9, #16
   118bc:	orr	r1, r3, r1, lsl #16
   118c0:	cmp	r0, r1
   118c4:	bls	118e4 <bd_get_debug_mask@@Base+0xb18>
   118c8:	adds	r1, r1, r4
   118cc:	sub	r3, fp, #1
   118d0:	bcs	11984 <bd_get_debug_mask@@Base+0xbb8>
   118d4:	cmp	r0, r1
   118d8:	subhi	fp, fp, #2
   118dc:	addhi	r1, r1, r4
   118e0:	bls	11984 <bd_get_debug_mask@@Base+0xbb8>
   118e4:	rsb	r5, r0, r1
   118e8:	mov	r1, r8
   118ec:	uxth	r9, r9
   118f0:	mov	r0, r5
   118f4:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   118f8:	mov	r1, r8
   118fc:	mov	r6, r0
   11900:	mov	r0, r5
   11904:	bl	11b78 <bd_get_debug_mask@@Base+0xdac>
   11908:	mul	r5, sl, r6
   1190c:	orr	r1, r9, r1, lsl #16
   11910:	cmp	r5, r1
   11914:	bls	11938 <bd_get_debug_mask@@Base+0xb6c>
   11918:	adds	r1, r1, r4
   1191c:	sub	r3, r6, #1
   11920:	bcs	11934 <bd_get_debug_mask@@Base+0xb68>
   11924:	cmp	r5, r1
   11928:	subhi	r6, r6, #2
   1192c:	addhi	r1, r1, r4
   11930:	bhi	11938 <bd_get_debug_mask@@Base+0xb6c>
   11934:	mov	r6, r3
   11938:	rsb	r5, r5, r1
   1193c:	orr	r6, r6, fp, lsl #16
   11940:	b	116cc <bd_get_debug_mask@@Base+0x900>
   11944:	mov	r6, r3
   11948:	b	11648 <bd_get_debug_mask@@Base+0x87c>
   1194c:	mov	r9, r2
   11950:	b	11718 <bd_get_debug_mask@@Base+0x94c>
   11954:	mov	r5, r3
   11958:	b	11764 <bd_get_debug_mask@@Base+0x998>
   1195c:	cmp	sl, r1
   11960:	subhi	fp, fp, #2
   11964:	addhi	r1, r1, r8
   11968:	bhi	11828 <bd_get_debug_mask@@Base+0xa5c>
   1196c:	b	11824 <bd_get_debug_mask@@Base+0xa58>
   11970:	cmp	r0, r1
   11974:	subhi	r4, r4, #2
   11978:	addhi	r1, r1, r8
   1197c:	bhi	117dc <bd_get_debug_mask@@Base+0xa10>
   11980:	b	117d8 <bd_get_debug_mask@@Base+0xa0c>
   11984:	mov	fp, r3
   11988:	b	118e4 <bd_get_debug_mask@@Base+0xb18>
   1198c:	subs	r2, r1, #1
   11990:	bxeq	lr
   11994:	bcc	11b6c <bd_get_debug_mask@@Base+0xda0>
   11998:	cmp	r0, r1
   1199c:	bls	11b50 <bd_get_debug_mask@@Base+0xd84>
   119a0:	tst	r1, r2
   119a4:	beq	11b5c <bd_get_debug_mask@@Base+0xd90>
   119a8:	clz	r3, r0
   119ac:	clz	r2, r1
   119b0:	sub	r3, r2, r3
   119b4:	rsbs	r3, r3, #31
   119b8:	addne	r3, r3, r3, lsl #1
   119bc:	mov	r2, #0
   119c0:	addne	pc, pc, r3, lsl #2
   119c4:	nop	{0}
   119c8:	cmp	r0, r1, lsl #31
   119cc:	adc	r2, r2, r2
   119d0:	subcs	r0, r0, r1, lsl #31
   119d4:	cmp	r0, r1, lsl #30
   119d8:	adc	r2, r2, r2
   119dc:	subcs	r0, r0, r1, lsl #30
   119e0:	cmp	r0, r1, lsl #29
   119e4:	adc	r2, r2, r2
   119e8:	subcs	r0, r0, r1, lsl #29
   119ec:	cmp	r0, r1, lsl #28
   119f0:	adc	r2, r2, r2
   119f4:	subcs	r0, r0, r1, lsl #28
   119f8:	cmp	r0, r1, lsl #27
   119fc:	adc	r2, r2, r2
   11a00:	subcs	r0, r0, r1, lsl #27
   11a04:	cmp	r0, r1, lsl #26
   11a08:	adc	r2, r2, r2
   11a0c:	subcs	r0, r0, r1, lsl #26
   11a10:	cmp	r0, r1, lsl #25
   11a14:	adc	r2, r2, r2
   11a18:	subcs	r0, r0, r1, lsl #25
   11a1c:	cmp	r0, r1, lsl #24
   11a20:	adc	r2, r2, r2
   11a24:	subcs	r0, r0, r1, lsl #24
   11a28:	cmp	r0, r1, lsl #23
   11a2c:	adc	r2, r2, r2
   11a30:	subcs	r0, r0, r1, lsl #23
   11a34:	cmp	r0, r1, lsl #22
   11a38:	adc	r2, r2, r2
   11a3c:	subcs	r0, r0, r1, lsl #22
   11a40:	cmp	r0, r1, lsl #21
   11a44:	adc	r2, r2, r2
   11a48:	subcs	r0, r0, r1, lsl #21
   11a4c:	cmp	r0, r1, lsl #20
   11a50:	adc	r2, r2, r2
   11a54:	subcs	r0, r0, r1, lsl #20
   11a58:	cmp	r0, r1, lsl #19
   11a5c:	adc	r2, r2, r2
   11a60:	subcs	r0, r0, r1, lsl #19
   11a64:	cmp	r0, r1, lsl #18
   11a68:	adc	r2, r2, r2
   11a6c:	subcs	r0, r0, r1, lsl #18
   11a70:	cmp	r0, r1, lsl #17
   11a74:	adc	r2, r2, r2
   11a78:	subcs	r0, r0, r1, lsl #17
   11a7c:	cmp	r0, r1, lsl #16
   11a80:	adc	r2, r2, r2
   11a84:	subcs	r0, r0, r1, lsl #16
   11a88:	cmp	r0, r1, lsl #15
   11a8c:	adc	r2, r2, r2
   11a90:	subcs	r0, r0, r1, lsl #15
   11a94:	cmp	r0, r1, lsl #14
   11a98:	adc	r2, r2, r2
   11a9c:	subcs	r0, r0, r1, lsl #14
   11aa0:	cmp	r0, r1, lsl #13
   11aa4:	adc	r2, r2, r2
   11aa8:	subcs	r0, r0, r1, lsl #13
   11aac:	cmp	r0, r1, lsl #12
   11ab0:	adc	r2, r2, r2
   11ab4:	subcs	r0, r0, r1, lsl #12
   11ab8:	cmp	r0, r1, lsl #11
   11abc:	adc	r2, r2, r2
   11ac0:	subcs	r0, r0, r1, lsl #11
   11ac4:	cmp	r0, r1, lsl #10
   11ac8:	adc	r2, r2, r2
   11acc:	subcs	r0, r0, r1, lsl #10
   11ad0:	cmp	r0, r1, lsl #9
   11ad4:	adc	r2, r2, r2
   11ad8:	subcs	r0, r0, r1, lsl #9
   11adc:	cmp	r0, r1, lsl #8
   11ae0:	adc	r2, r2, r2
   11ae4:	subcs	r0, r0, r1, lsl #8
   11ae8:	cmp	r0, r1, lsl #7
   11aec:	adc	r2, r2, r2
   11af0:	subcs	r0, r0, r1, lsl #7
   11af4:	cmp	r0, r1, lsl #6
   11af8:	adc	r2, r2, r2
   11afc:	subcs	r0, r0, r1, lsl #6
   11b00:	cmp	r0, r1, lsl #5
   11b04:	adc	r2, r2, r2
   11b08:	subcs	r0, r0, r1, lsl #5
   11b0c:	cmp	r0, r1, lsl #4
   11b10:	adc	r2, r2, r2
   11b14:	subcs	r0, r0, r1, lsl #4
   11b18:	cmp	r0, r1, lsl #3
   11b1c:	adc	r2, r2, r2
   11b20:	subcs	r0, r0, r1, lsl #3
   11b24:	cmp	r0, r1, lsl #2
   11b28:	adc	r2, r2, r2
   11b2c:	subcs	r0, r0, r1, lsl #2
   11b30:	cmp	r0, r1, lsl #1
   11b34:	adc	r2, r2, r2
   11b38:	subcs	r0, r0, r1, lsl #1
   11b3c:	cmp	r0, r1
   11b40:	adc	r2, r2, r2
   11b44:	subcs	r0, r0, r1
   11b48:	mov	r0, r2
   11b4c:	bx	lr
   11b50:	moveq	r0, #1
   11b54:	movne	r0, #0
   11b58:	bx	lr
   11b5c:	clz	r2, r1
   11b60:	rsb	r2, r2, #31
   11b64:	lsr	r0, r0, r2
   11b68:	bx	lr
   11b6c:	cmp	r0, #0
   11b70:	mvnne	r0, #0
   11b74:	b	11048 <bd_get_debug_mask@@Base+0x27c>
   11b78:	cmp	r1, #0
   11b7c:	beq	11b6c <bd_get_debug_mask@@Base+0xda0>
   11b80:	push	{r0, r1, lr}
   11b84:	bl	1198c <bd_get_debug_mask@@Base+0xbc0>
   11b88:	pop	{r1, r2, lr}
   11b8c:	mul	r3, r2, r0
   11b90:	sub	r1, r1, r3
   11b94:	bx	lr
   11b98:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11b9c:	mov	r7, r0
   11ba0:	ldr	r6, [pc, #76]	; 11bf4 <bd_get_debug_mask@@Base+0xe28>
   11ba4:	mov	r8, r1
   11ba8:	ldr	r5, [pc, #72]	; 11bf8 <bd_get_debug_mask@@Base+0xe2c>
   11bac:	mov	r9, r2
   11bb0:	add	r6, pc, r6
   11bb4:	bl	10974 <_init@@Base>
   11bb8:	add	r5, pc, r5
   11bbc:	rsb	r6, r5, r6
   11bc0:	asrs	r6, r6, #2
   11bc4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11bc8:	sub	r5, r5, #4
   11bcc:	mov	r4, #0
   11bd0:	add	r4, r4, #1
   11bd4:	ldr	r3, [r5, #4]!
   11bd8:	mov	r0, r7
   11bdc:	mov	r1, r8
   11be0:	mov	r2, r9
   11be4:	blx	r3
   11be8:	cmp	r4, r6
   11bec:	bne	11bd0 <bd_get_debug_mask@@Base+0xe04>
   11bf0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11bf4:	andeq	r0, r1, r8, lsr r3
   11bf8:	andeq	r0, r1, ip, lsr #6
   11bfc:	bx	lr

Disassembly of section .fini:

00011c00 <_fini@@Base>:
   11c00:	push	{r3, lr}
   11c04:	pop	{r3, pc}
