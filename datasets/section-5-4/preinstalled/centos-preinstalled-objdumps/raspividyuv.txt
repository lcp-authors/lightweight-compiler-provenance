
centos-preinstalled/raspividyuv:     file format elf32-littlearm


Disassembly of section .init:

00012710 <_init@@Base>:
   12710:	push	{r3, lr}
   12714:	bl	143d0 <_start@@Base+0x3c>
   12718:	pop	{r3, pc}

Disassembly of section .plt:

0001271c <pthread_mutex_unlock@plt-0x14>:
   1271c:	push	{lr}		; (str lr, [sp, #-4]!)
   12720:	ldr	lr, [pc, #4]	; 1272c <_init@@Base+0x1c>
   12724:	add	lr, pc, lr
   12728:	ldr	pc, [lr, #8]!
   1272c:	ldrdeq	fp, [r1], -r4

00012730 <pthread_mutex_unlock@plt>:
   12730:	add	ip, pc, #0, 12
   12734:	add	ip, ip, #110592	; 0x1b000
   12738:	ldr	pc, [ip, #2260]!	; 0x8d4

0001273c <mmal_connection_create@plt>:
   1273c:	add	ip, pc, #0, 12
   12740:	add	ip, ip, #110592	; 0x1b000
   12744:	ldr	pc, [ip, #2252]!	; 0x8cc

00012748 <fdopen@plt>:
   12748:	add	ip, pc, #0, 12
   1274c:	add	ip, ip, #110592	; 0x1b000
   12750:	ldr	pc, [ip, #2244]!	; 0x8c4

00012754 <vcos_log_impl@plt>:
   12754:	add	ip, pc, #0, 12
   12758:	add	ip, ip, #110592	; 0x1b000
   1275c:	ldr	pc, [ip, #2236]!	; 0x8bc

00012760 <raise@plt>:
   12760:	add	ip, pc, #0, 12
   12764:	add	ip, ip, #110592	; 0x1b000
   12768:	ldr	pc, [ip, #2228]!	; 0x8b4

0001276c <inet_aton@plt>:
   1276c:	add	ip, pc, #0, 12
   12770:	add	ip, ip, #110592	; 0x1b000
   12774:	ldr	pc, [ip, #2220]!	; 0x8ac

00012778 <__strncat_chk@plt>:
   12778:	add	ip, pc, #0, 12
   1277c:	add	ip, ip, #110592	; 0x1b000
   12780:	ldr	pc, [ip, #2212]!	; 0x8a4

00012784 <mmal_port_send_buffer@plt>:
   12784:	add	ip, pc, #0, 12
   12788:	add	ip, ip, #110592	; 0x1b000
   1278c:	ldr	pc, [ip, #2204]!	; 0x89c

00012790 <strcmp@plt>:
   12790:	add	ip, pc, #0, 12
   12794:	add	ip, ip, #110592	; 0x1b000
   12798:	ldr	pc, [ip, #2196]!	; 0x894

0001279c <basename@plt>:
   1279c:	add	ip, pc, #0, 12
   127a0:	add	ip, ip, #110592	; 0x1b000
   127a4:	ldr	pc, [ip, #2188]!	; 0x88c

000127a8 <setsockopt@plt>:
   127a8:	add	ip, pc, #0, 12
   127ac:	add	ip, ip, #110592	; 0x1b000
   127b0:	ldr	pc, [ip, #2180]!	; 0x884

000127b4 <mmal_component_create@plt>:
   127b4:	add	ip, pc, #0, 12
   127b8:	add	ip, ip, #110592	; 0x1b000
   127bc:	ldr	pc, [ip, #2172]!	; 0x87c

000127c0 <pthread_mutex_destroy@plt>:
   127c0:	add	ip, pc, #0, 12
   127c4:	add	ip, ip, #110592	; 0x1b000
   127c8:	ldr	pc, [ip, #2164]!	; 0x874

000127cc <mmal_buffer_header_mem_unlock@plt>:
   127cc:	add	ip, pc, #0, 12
   127d0:	add	ip, ip, #110592	; 0x1b000
   127d4:	ldr	pc, [ip, #2156]!	; 0x86c

000127d8 <vc_gencmd_number_property@plt>:
   127d8:	add	ip, pc, #0, 12
   127dc:	add	ip, ip, #110592	; 0x1b000
   127e0:	ldr	pc, [ip, #2148]!	; 0x864

000127e4 <free@plt>:
   127e4:	add	ip, pc, #0, 12
   127e8:	add	ip, ip, #110592	; 0x1b000
   127ec:	ldr	pc, [ip, #2140]!	; 0x85c

000127f0 <mmal_port_pool_create@plt>:
   127f0:	add	ip, pc, #0, 12
   127f4:	add	ip, ip, #110592	; 0x1b000
   127f8:	ldr	pc, [ip, #2132]!	; 0x854

000127fc <mmal_port_parameter_set_uint32@plt>:
   127fc:	add	ip, pc, #0, 12
   12800:	add	ip, ip, #110592	; 0x1b000
   12804:	ldr	pc, [ip, #2124]!	; 0x84c

00012808 <pthread_mutex_lock@plt>:
   12808:	add	ip, pc, #0, 12
   1280c:	add	ip, ip, #110592	; 0x1b000
   12810:	ldr	pc, [ip, #2116]!	; 0x844

00012814 <nanosleep@plt>:
   12814:	add	ip, pc, #0, 12
   12818:	add	ip, ip, #110592	; 0x1b000
   1281c:	ldr	pc, [ip, #2108]!	; 0x83c

00012820 <memcpy@plt>:
   12820:	add	ip, pc, #0, 12
   12824:	add	ip, ip, #110592	; 0x1b000
   12828:	ldr	pc, [ip, #2100]!	; 0x834

0001282c <mmal_port_disable@plt>:
   1282c:	add	ip, pc, #0, 12
   12830:	add	ip, ip, #110592	; 0x1b000
   12834:	ldr	pc, [ip, #2092]!	; 0x82c

00012838 <pthread_mutex_init@plt>:
   12838:	add	ip, pc, #0, 12
   1283c:	add	ip, ip, #110592	; 0x1b000
   12840:	ldr	pc, [ip, #2084]!	; 0x824

00012844 <sigwait@plt>:
   12844:	add	ip, pc, #0, 12
   12848:	add	ip, ip, #110592	; 0x1b000
   1284c:	ldr	pc, [ip, #2076]!	; 0x81c

00012850 <signal@plt>:
   12850:	add	ip, pc, #0, 12
   12854:	add	ip, ip, #110592	; 0x1b000
   12858:	ldr	pc, [ip, #2068]!	; 0x814

0001285c <time@plt>:
   1285c:	add	ip, pc, #0, 12
   12860:	add	ip, ip, #110592	; 0x1b000
   12864:	ldr	pc, [ip, #2060]!	; 0x80c

00012868 <_IO_getc@plt>:
   12868:	add	ip, pc, #0, 12
   1286c:	add	ip, ip, #110592	; 0x1b000
   12870:	ldr	pc, [ip, #2052]!	; 0x804

00012874 <inet_ntoa@plt>:
   12874:	add	ip, pc, #0, 12
   12878:	add	ip, ip, #110592	; 0x1b000
   1287c:	ldr	pc, [ip, #2044]!	; 0x7fc

00012880 <mmal_component_destroy@plt>:
   12880:	add	ip, pc, #0, 12
   12884:	add	ip, ip, #110592	; 0x1b000
   12888:	ldr	pc, [ip, #2036]!	; 0x7f4

0001288c <__stack_chk_fail@plt>:
   1288c:	add	ip, pc, #0, 12
   12890:	add	ip, ip, #110592	; 0x1b000
   12894:	ldr	pc, [ip, #2028]!	; 0x7ec

00012898 <dlclose@plt>:
   12898:	add	ip, pc, #0, 12
   1289c:	add	ip, ip, #110592	; 0x1b000
   128a0:	ldr	pc, [ip, #2020]!	; 0x7e4

000128a4 <dlerror@plt>:
   128a4:	add	ip, pc, #0, 12
   128a8:	add	ip, ip, #110592	; 0x1b000
   128ac:	ldr	pc, [ip, #2012]!	; 0x7dc

000128b0 <strcasecmp@plt>:
   128b0:	add	ip, pc, #0, 12
   128b4:	add	ip, ip, #110592	; 0x1b000
   128b8:	ldr	pc, [ip, #2004]!	; 0x7d4

000128bc <vc_gencmd@plt>:
   128bc:	add	ip, pc, #0, 12
   128c0:	add	ip, ip, #110592	; 0x1b000
   128c4:	ldr	pc, [ip, #1996]!	; 0x7cc

000128c8 <accept@plt>:
   128c8:	add	ip, pc, #0, 12
   128cc:	add	ip, ip, #110592	; 0x1b000
   128d0:	ldr	pc, [ip, #1988]!	; 0x7c4

000128d4 <mmal_port_enable@plt>:
   128d4:	add	ip, pc, #0, 12
   128d8:	add	ip, ip, #110592	; 0x1b000
   128dc:	ldr	pc, [ip, #1980]!	; 0x7bc

000128e0 <mmal_port_format_commit@plt>:
   128e0:	add	ip, pc, #0, 12
   128e4:	add	ip, ip, #110592	; 0x1b000
   128e8:	ldr	pc, [ip, #1972]!	; 0x7b4

000128ec <fwrite@plt>:
   128ec:	add	ip, pc, #0, 12
   128f0:	add	ip, ip, #110592	; 0x1b000
   128f4:	ldr	pc, [ip, #1964]!	; 0x7ac

000128f8 <mmal_queue_length@plt>:
   128f8:	add	ip, pc, #0, 12
   128fc:	add	ip, ip, #110592	; 0x1b000
   12900:	ldr	pc, [ip, #1956]!	; 0x7a4

00012904 <dlopen@plt>:
   12904:	add	ip, pc, #0, 12
   12908:	add	ip, ip, #110592	; 0x1b000
   1290c:	ldr	pc, [ip, #1948]!	; 0x79c

00012910 <pthread_sigmask@plt>:
   12910:	add	ip, pc, #0, 12
   12914:	add	ip, ip, #110592	; 0x1b000
   12918:	ldr	pc, [ip, #1940]!	; 0x794

0001291c <pthread_create@plt>:
   1291c:	add	ip, pc, #0, 12
   12920:	add	ip, ip, #110592	; 0x1b000
   12924:	ldr	pc, [ip, #1932]!	; 0x78c

00012928 <__asprintf_chk@plt>:
   12928:	add	ip, pc, #0, 12
   1292c:	add	ip, ip, #110592	; 0x1b000
   12930:	ldr	pc, [ip, #1924]!	; 0x784

00012934 <malloc@plt>:
   12934:	add	ip, pc, #0, 12
   12938:	add	ip, ip, #110592	; 0x1b000
   1293c:	ldr	pc, [ip, #1916]!	; 0x77c

00012940 <sigaddset@plt>:
   12940:	add	ip, pc, #0, 12
   12944:	add	ip, ip, #110592	; 0x1b000
   12948:	ldr	pc, [ip, #1908]!	; 0x774

0001294c <__libc_start_main@plt>:
   1294c:	add	ip, pc, #0, 12
   12950:	add	ip, ip, #110592	; 0x1b000
   12954:	ldr	pc, [ip, #1900]!	; 0x76c

00012958 <strerror@plt>:
   12958:	add	ip, pc, #0, 12
   1295c:	add	ip, ip, #110592	; 0x1b000
   12960:	ldr	pc, [ip, #1892]!	; 0x764

00012964 <strftime@plt>:
   12964:	add	ip, pc, #0, 12
   12968:	add	ip, ip, #110592	; 0x1b000
   1296c:	ldr	pc, [ip, #1884]!	; 0x75c

00012970 <mmal_connection_destroy@plt>:
   12970:	add	ip, pc, #0, 12
   12974:	add	ip, ip, #110592	; 0x1b000
   12978:	ldr	pc, [ip, #1876]!	; 0x754

0001297c <localtime@plt>:
   1297c:	add	ip, pc, #0, 12
   12980:	add	ip, ip, #110592	; 0x1b000
   12984:	ldr	pc, [ip, #1868]!	; 0x74c

00012988 <mmal_buffer_header_mem_lock@plt>:
   12988:	add	ip, pc, #0, 12
   1298c:	add	ip, ip, #110592	; 0x1b000
   12990:	ldr	pc, [ip, #1860]!	; 0x744

00012994 <modf@plt>:
   12994:	add	ip, pc, #0, 12
   12998:	add	ip, ip, #110592	; 0x1b000
   1299c:	ldr	pc, [ip, #1852]!	; 0x73c

000129a0 <__gmon_start__@plt>:
   129a0:	add	ip, pc, #0, 12
   129a4:	add	ip, ip, #110592	; 0x1b000
   129a8:	ldr	pc, [ip, #1844]!	; 0x734

000129ac <__ctype_b_loc@plt>:
   129ac:	add	ip, pc, #0, 12
   129b0:	add	ip, ip, #110592	; 0x1b000
   129b4:	ldr	pc, [ip, #1836]!	; 0x72c

000129b8 <exit@plt>:
   129b8:	add	ip, pc, #0, 12
   129bc:	add	ip, ip, #110592	; 0x1b000
   129c0:	ldr	pc, [ip, #1828]!	; 0x724

000129c4 <bcm_host_init@plt>:
   129c4:	add	ip, pc, #0, 12
   129c8:	add	ip, ip, #110592	; 0x1b000
   129cc:	ldr	pc, [ip, #1820]!	; 0x71c

000129d0 <mmal_connection_enable@plt>:
   129d0:	add	ip, pc, #0, 12
   129d4:	add	ip, ip, #110592	; 0x1b000
   129d8:	ldr	pc, [ip, #1812]!	; 0x714

000129dc <strlen@plt>:
   129dc:	add	ip, pc, #0, 12
   129e0:	add	ip, ip, #110592	; 0x1b000
   129e4:	ldr	pc, [ip, #1804]!	; 0x70c

000129e8 <strchr@plt>:
   129e8:	add	ip, pc, #0, 12
   129ec:	add	ip, ip, #110592	; 0x1b000
   129f0:	ldr	pc, [ip, #1796]!	; 0x704

000129f4 <mmal_port_parameter_set_int32@plt>:
   129f4:	add	ip, pc, #0, 12
   129f8:	add	ip, ip, #110592	; 0x1b000
   129fc:	ldr	pc, [ip, #1788]!	; 0x6fc

00012a00 <__errno_location@plt>:
   12a00:	add	ip, pc, #0, 12
   12a04:	add	ip, ip, #110592	; 0x1b000
   12a08:	ldr	pc, [ip, #1780]!	; 0x6f4

00012a0c <mmal_port_parameter_set@plt>:
   12a0c:	add	ip, pc, #0, 12
   12a10:	add	ip, ip, #110592	; 0x1b000
   12a14:	ldr	pc, [ip, #1772]!	; 0x6ec

00012a18 <vcos_log_register@plt>:
   12a18:	add	ip, pc, #0, 12
   12a1c:	add	ip, ip, #110592	; 0x1b000
   12a20:	ldr	pc, [ip, #1764]!	; 0x6e4

00012a24 <bind@plt>:
   12a24:	add	ip, pc, #0, 12
   12a28:	add	ip, ip, #110592	; 0x1b000
   12a2c:	ldr	pc, [ip, #1756]!	; 0x6dc

00012a30 <memset@plt>:
   12a30:	add	ip, pc, #0, 12
   12a34:	add	ip, ip, #110592	; 0x1b000
   12a38:	ldr	pc, [ip, #1748]!	; 0x6d4

00012a3c <strncpy@plt>:
   12a3c:	add	ip, pc, #0, 12
   12a40:	add	ip, ip, #110592	; 0x1b000
   12a44:	ldr	pc, [ip, #1740]!	; 0x6cc

00012a48 <mmal_component_enable@plt>:
   12a48:	add	ip, pc, #0, 12
   12a4c:	add	ip, ip, #110592	; 0x1b000
   12a50:	ldr	pc, [ip, #1732]!	; 0x6c4

00012a54 <mmal_util_rgb_order_fixed@plt>:
   12a54:	add	ip, pc, #0, 12
   12a58:	add	ip, ip, #110592	; 0x1b000
   12a5c:	ldr	pc, [ip, #1724]!	; 0x6bc

00012a60 <__isnan@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #110592	; 0x1b000
   12a68:	ldr	pc, [ip, #1716]!	; 0x6b4

00012a6c <__fprintf_chk@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #110592	; 0x1b000
   12a74:	ldr	pc, [ip, #1708]!	; 0x6ac

00012a78 <fclose@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #110592	; 0x1b000
   12a80:	ldr	pc, [ip, #1700]!	; 0x6a4

00012a84 <vcos_pthreads_logging_assert@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #110592	; 0x1b000
   12a8c:	ldr	pc, [ip, #1692]!	; 0x69c

00012a90 <sigemptyset@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #110592	; 0x1b000
   12a98:	ldr	pc, [ip, #1684]!	; 0x694

00012a9c <mmal_queue_get@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #110592	; 0x1b000
   12aa4:	ldr	pc, [ip, #1676]!	; 0x68c

00012aa8 <listen@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #110592	; 0x1b000
   12ab0:	ldr	pc, [ip, #1668]!	; 0x684

00012ab4 <pthread_join@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #110592	; 0x1b000
   12abc:	ldr	pc, [ip, #1660]!	; 0x67c

00012ac0 <fputc@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #110592	; 0x1b000
   12ac8:	ldr	pc, [ip, #1652]!	; 0x674

00012acc <sscanf@plt>:
   12acc:	add	ip, pc, #0, 12
   12ad0:	add	ip, ip, #110592	; 0x1b000
   12ad4:	ldr	pc, [ip, #1644]!	; 0x66c

00012ad8 <mmal_port_parameter_set_rational@plt>:
   12ad8:	add	ip, pc, #0, 12
   12adc:	add	ip, ip, #110592	; 0x1b000
   12ae0:	ldr	pc, [ip, #1636]!	; 0x664

00012ae4 <fopen64@plt>:
   12ae4:	add	ip, pc, #0, 12
   12ae8:	add	ip, ip, #110592	; 0x1b000
   12aec:	ldr	pc, [ip, #1628]!	; 0x65c

00012af0 <socket@plt>:
   12af0:	add	ip, pc, #0, 12
   12af4:	add	ip, ip, #110592	; 0x1b000
   12af8:	ldr	pc, [ip, #1620]!	; 0x654

00012afc <mmal_component_disable@plt>:
   12afc:	add	ip, pc, #0, 12
   12b00:	add	ip, ip, #110592	; 0x1b000
   12b04:	ldr	pc, [ip, #1612]!	; 0x64c

00012b08 <clock_gettime@plt>:
   12b08:	add	ip, pc, #0, 12
   12b0c:	add	ip, ip, #110592	; 0x1b000
   12b10:	ldr	pc, [ip, #1604]!	; 0x644

00012b14 <mmal_port_parameter_get@plt>:
   12b14:	add	ip, pc, #0, 12
   12b18:	add	ip, ip, #110592	; 0x1b000
   12b1c:	ldr	pc, [ip, #1596]!	; 0x63c

00012b20 <mmal_buffer_header_release@plt>:
   12b20:	add	ip, pc, #0, 12
   12b24:	add	ip, ip, #110592	; 0x1b000
   12b28:	ldr	pc, [ip, #1588]!	; 0x634

00012b2c <fputs@plt>:
   12b2c:	add	ip, pc, #0, 12
   12b30:	add	ip, ip, #110592	; 0x1b000
   12b34:	ldr	pc, [ip, #1580]!	; 0x62c

00012b38 <strncmp@plt>:
   12b38:	add	ip, pc, #0, 12
   12b3c:	add	ip, ip, #110592	; 0x1b000
   12b40:	ldr	pc, [ip, #1572]!	; 0x624

00012b44 <abort@plt>:
   12b44:	add	ip, pc, #0, 12
   12b48:	add	ip, ip, #110592	; 0x1b000
   12b4c:	ldr	pc, [ip, #1564]!	; 0x61c

00012b50 <close@plt>:
   12b50:	add	ip, pc, #0, 12
   12b54:	add	ip, ip, #110592	; 0x1b000
   12b58:	ldr	pc, [ip, #1556]!	; 0x614

00012b5c <dlsym@plt>:
   12b5c:	add	ip, pc, #0, 12
   12b60:	add	ip, ip, #110592	; 0x1b000
   12b64:	ldr	pc, [ip, #1548]!	; 0x60c

00012b68 <connect@plt>:
   12b68:	add	ip, pc, #0, 12
   12b6c:	add	ip, ip, #110592	; 0x1b000
   12b70:	ldr	pc, [ip, #1540]!	; 0x604

00012b74 <mmal_port_parameter_set_boolean@plt>:
   12b74:	add	ip, pc, #0, 12
   12b78:	add	ip, ip, #110592	; 0x1b000
   12b7c:	ldr	pc, [ip, #1532]!	; 0x5fc

00012b80 <__snprintf_chk@plt>:
   12b80:	add	ip, pc, #0, 12
   12b84:	add	ip, ip, #110592	; 0x1b000
   12b88:	ldr	pc, [ip, #1524]!	; 0x5f4

Disassembly of section .text:

00012b90 <main@@Base>:
   12b90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b94:	sub	sp, sp, #948	; 0x3b4
   12b98:	ldr	r5, [pc, #3448]	; 13918 <main@@Base+0xd88>
   12b9c:	mov	fp, r0
   12ba0:	ldr	r3, [pc, #3444]	; 1391c <main@@Base+0xd8c>
   12ba4:	mov	r7, r1
   12ba8:	add	r5, pc, r5
   12bac:	ldr	r3, [r5, r3]
   12bb0:	str	r3, [sp, #24]
   12bb4:	ldr	r3, [r3]
   12bb8:	str	r3, [sp, #940]	; 0x3ac
   12bbc:	bl	129c4 <bcm_host_init@plt>
   12bc0:	ldr	r3, [pc, #3416]	; 13920 <main@@Base+0xd90>
   12bc4:	ldr	r0, [pc, #3416]	; 13924 <main@@Base+0xd94>
   12bc8:	ldr	sl, [r5, r3]
   12bcc:	add	r0, pc, r0
   12bd0:	mov	r1, sl
   12bd4:	bl	12a18 <vcos_log_register@plt>
   12bd8:	ldr	r3, [pc, #3400]	; 13928 <main@@Base+0xd98>
   12bdc:	mov	r0, #2
   12be0:	ldr	r3, [r5, r3]
   12be4:	mov	r1, r3
   12be8:	str	r3, [sp, #36]	; 0x24
   12bec:	bl	12850 <signal@plt>
   12bf0:	mov	r1, #1
   12bf4:	mov	r0, #10
   12bf8:	bl	12850 <signal@plt>
   12bfc:	ldr	r0, [r7]
   12c00:	bl	17e04 <set_app_name@@Base>
   12c04:	cmp	fp, #1
   12c08:	beq	137e0 <main@@Base+0xc50>
   12c0c:	add	r6, sp, #248	; 0xf8
   12c10:	mov	r1, #0
   12c14:	mov	r2, #688	; 0x2b0
   12c18:	add	ip, sp, #328	; 0x148
   12c1c:	mov	r0, r6
   12c20:	str	ip, [sp, #32]
   12c24:	add	ip, sp, #360	; 0x168
   12c28:	str	ip, [sp, #28]
   12c2c:	bl	12a30 <memset@plt>
   12c30:	mov	r0, r6
   12c34:	bl	17768 <raspicommonsettings_set_defaults@@Base>
   12c38:	add	r0, sp, #328	; 0x148
   12c3c:	mov	r1, #250	; 0xfa
   12c40:	mvn	r3, #0
   12c44:	mov	r2, #1920	; 0x780
   12c48:	str	r3, [sp, #292]	; 0x124
   12c4c:	str	r2, [sp, #264]	; 0x108
   12c50:	movw	r3, #1080	; 0x438
   12c54:	mov	r2, #30
   12c58:	str	r3, [sp, #268]	; 0x10c
   12c5c:	str	r2, [sp, #296]	; 0x128
   12c60:	mov	r3, #0
   12c64:	movw	r2, #5000	; 0x1388
   12c68:	str	r3, [sp, #300]	; 0x12c
   12c6c:	str	r3, [sp, #308]	; 0x134
   12c70:	str	r3, [sp, #896]	; 0x380
   12c74:	str	r3, [sp, #320]	; 0x140
   12c78:	str	r1, [sp, #304]	; 0x130
   12c7c:	str	r2, [sp, #312]	; 0x138
   12c80:	str	r2, [sp, #316]	; 0x13c
   12c84:	bl	174cc <raspipreview_set_defaults@@Base>
   12c88:	add	r0, sp, #360	; 0x168
   12c8c:	bl	151e0 <raspicamcontrol_set_defaults@@Base>
   12c90:	cmp	fp, #1
   12c94:	ble	12db4 <main@@Base+0x224>
   12c98:	ldr	ip, [pc, #3212]	; 1392c <main@@Base+0xd9c>
   12c9c:	mov	r1, #1
   12ca0:	ldr	r2, [pc, #3208]	; 13930 <main@@Base+0xda0>
   12ca4:	mov	r4, r1
   12ca8:	ldr	r3, [pc, #3204]	; 13934 <main@@Base+0xda4>
   12cac:	add	ip, pc, ip
   12cb0:	str	ip, [sp, #40]	; 0x28
   12cb4:	add	r2, pc, r2
   12cb8:	ldr	ip, [pc, #3192]	; 13938 <main@@Base+0xda8>
   12cbc:	add	r3, pc, r3
   12cc0:	add	r2, r2, #24
   12cc4:	add	r3, r3, #220	; 0xdc
   12cc8:	add	ip, pc, ip
   12ccc:	str	r2, [sp, #48]	; 0x30
   12cd0:	str	ip, [sp, #44]	; 0x2c
   12cd4:	str	r3, [sp, #52]	; 0x34
   12cd8:	b	12d00 <main@@Base+0x170>
   12cdc:	ldrb	r3, [r2]
   12ce0:	cmp	r3, #45	; 0x2d
   12ce4:	beq	12d28 <main@@Base+0x198>
   12ce8:	mov	r1, #0
   12cec:	add	r3, r4, #1
   12cf0:	mov	r2, r1
   12cf4:	mov	r4, r3
   12cf8:	cmp	r2, #0
   12cfc:	beq	12dac <main@@Base+0x21c>
   12d00:	ldr	r2, [r7, r4, lsl #2]
   12d04:	lsl	r8, r4, #2
   12d08:	add	r9, r7, r8
   12d0c:	cmp	r2, #0
   12d10:	bne	12cdc <main@@Base+0x14c>
   12d14:	add	r3, r4, #1
   12d18:	cmp	fp, r3
   12d1c:	movle	r2, #0
   12d20:	andgt	r2, r1, #1
   12d24:	b	12cf4 <main@@Base+0x164>
   12d28:	ldr	r0, [pc, #3084]	; 1393c <main@@Base+0xdac>
   12d2c:	add	r2, r2, #1
   12d30:	mov	r1, #11
   12d34:	add	r3, sp, #72	; 0x48
   12d38:	add	r0, pc, r0
   12d3c:	bl	16f68 <raspicli_get_command_id@@Base>
   12d40:	cmn	r0, #1
   12d44:	addeq	ip, r4, #1
   12d48:	beq	13370 <main@@Base+0x7e0>
   12d4c:	ldr	r3, [sp, #72]	; 0x48
   12d50:	cmp	r3, #0
   12d54:	addle	ip, r4, #1
   12d58:	ble	12d74 <main@@Base+0x1e4>
   12d5c:	add	r3, r4, #1
   12d60:	cmp	fp, r3
   12d64:	mov	ip, r3
   12d68:	movle	r2, #0
   12d6c:	movle	r1, #1
   12d70:	ble	12cf4 <main@@Base+0x164>
   12d74:	cmp	r0, #10
   12d78:	addls	pc, pc, r0, lsl #2
   12d7c:	b	13370 <main@@Base+0x7e0>
   12d80:	b	13240 <main@@Base+0x6b0>
   12d84:	b	13270 <main@@Base+0x6e0>
   12d88:	b	132c8 <main@@Base+0x738>
   12d8c:	b	132f8 <main@@Base+0x768>
   12d90:	b	13138 <main@@Base+0x5a8>
   12d94:	b	13178 <main@@Base+0x5e8>
   12d98:	b	1319c <main@@Base+0x60c>
   12d9c:	b	131d0 <main@@Base+0x640>
   12da0:	b	131ec <main@@Base+0x65c>
   12da4:	b	13208 <main@@Base+0x678>
   12da8:	b	13234 <main@@Base+0x6a4>
   12dac:	cmp	r1, #0
   12db0:	beq	12f34 <main@@Base+0x3a4>
   12db4:	ldr	r3, [sp, #292]	; 0x124
   12db8:	cmn	r3, #1
   12dbc:	beq	12f28 <main@@Base+0x398>
   12dc0:	add	r3, sp, #268	; 0x10c
   12dc4:	ldr	r0, [sp, #276]	; 0x114
   12dc8:	mov	r1, r6
   12dcc:	add	r2, sp, #264	; 0x108
   12dd0:	bl	17c4c <get_sensor_defaults@@Base>
   12dd4:	ldr	r3, [sp, #284]	; 0x11c
   12dd8:	cmp	r3, #0
   12ddc:	bne	12f60 <main@@Base+0x3d0>
   12de0:	ldr	r3, [sp, #288]	; 0x120
   12de4:	cmp	r3, #0
   12de8:	bne	130e8 <main@@Base+0x558>
   12dec:	add	r1, sp, #944	; 0x3b0
   12df0:	ldr	r0, [pc, #2888]	; 13940 <main@@Base+0xdb0>
   12df4:	mov	r3, #0
   12df8:	add	r0, pc, r0
   12dfc:	str	r3, [r1, #-888]!	; 0xfffffc88
   12e00:	bl	127b4 <mmal_component_create@plt>
   12e04:	cmp	r0, #0
   12e08:	beq	1307c <main@@Base+0x4ec>
   12e0c:	ldr	r3, [sl]
   12e10:	cmp	r3, #1
   12e14:	bls	12f20 <main@@Base+0x390>
   12e18:	ldr	r2, [pc, #2852]	; 13944 <main@@Base+0xdb4>
   12e1c:	mov	r0, sl
   12e20:	mov	r1, #2
   12e24:	add	r2, pc, r2
   12e28:	bl	12754 <vcos_log_impl@plt>
   12e2c:	ldr	r0, [sp, #56]	; 0x38
   12e30:	cmp	r0, #0
   12e34:	beq	12e3c <main@@Base+0x2ac>
   12e38:	bl	12880 <mmal_component_destroy@plt>
   12e3c:	ldr	r3, [sl]
   12e40:	cmp	r3, #1
   12e44:	bls	12e68 <main@@Base+0x2d8>
   12e48:	ldr	r3, [pc, #2808]	; 13948 <main@@Base+0xdb8>
   12e4c:	mov	r0, sl
   12e50:	ldr	r2, [pc, #2804]	; 1394c <main@@Base+0xdbc>
   12e54:	mov	r1, #2
   12e58:	add	r3, pc, r3
   12e5c:	add	r2, pc, r2
   12e60:	add	r3, r3, #112	; 0x70
   12e64:	bl	12754 <vcos_log_impl@plt>
   12e68:	mov	fp, #70	; 0x46
   12e6c:	mov	r0, #128	; 0x80
   12e70:	bl	16c00 <raspicamcontrol_check_configuration@@Base>
   12e74:	ldr	r7, [sp, #24]
   12e78:	mov	r0, fp
   12e7c:	ldr	r2, [sp, #940]	; 0x3ac
   12e80:	ldr	r3, [r7]
   12e84:	cmp	r2, r3
   12e88:	bne	137fc <main@@Base+0xc6c>
   12e8c:	add	sp, sp, #948	; 0x3b4
   12e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e94:	ldr	r1, [r8, #20]
   12e98:	movw	lr, #20559	; 0x504f
   12e9c:	ldr	ip, [sp, #264]	; 0x108
   12ea0:	movt	lr, #22097	; 0x5651
   12ea4:	movw	r0, #13385	; 0x3449
   12ea8:	movt	r0, #12338	; 0x3032
   12eac:	ldr	r3, [r1, #12]
   12eb0:	add	r9, ip, #31
   12eb4:	str	lr, [r1, #4]
   12eb8:	bic	r9, r9, #31
   12ebc:	str	r0, [r1, #8]
   12ec0:	mov	lr, #1
   12ec4:	str	r9, [r3]
   12ec8:	mov	r0, r8
   12ecc:	ldr	r1, [sp, #268]	; 0x10c
   12ed0:	str	r2, [r3, #24]
   12ed4:	add	r9, r1, #15
   12ed8:	str	r2, [r3, #8]
   12edc:	str	r1, [r3, #20]
   12ee0:	bic	r9, r9, #15
   12ee4:	str	r2, [r3, #12]
   12ee8:	str	r9, [r3, #4]
   12eec:	str	ip, [r3, #16]
   12ef0:	str	lr, [r3, #28]
   12ef4:	bl	128e0 <mmal_port_format_commit@plt>
   12ef8:	cmp	r0, #0
   12efc:	beq	138c8 <main@@Base+0xd38>
   12f00:	ldr	r3, [sl]
   12f04:	cmp	r3, #1
   12f08:	bls	12f20 <main@@Base+0x390>
   12f0c:	ldr	r2, [pc, #2620]	; 13950 <main@@Base+0xdc0>
   12f10:	mov	r0, sl
   12f14:	mov	r1, #2
   12f18:	add	r2, pc, r2
   12f1c:	bl	12754 <vcos_log_impl@plt>
   12f20:	ldr	r0, [sp, #56]	; 0x38
   12f24:	b	12e30 <main@@Base+0x2a0>
   12f28:	movw	r3, #5000	; 0x1388
   12f2c:	str	r3, [sp, #292]	; 0x124
   12f30:	b	12dc0 <main@@Base+0x230>
   12f34:	ldr	r0, [pc, #2824]	; 13a44 <main@@Base+0xeb4>
   12f38:	sub	r4, r4, #-1073741823	; 0xc0000001
   12f3c:	ldr	r2, [pc, #2576]	; 13954 <main@@Base+0xdc4>
   12f40:	mov	r1, #1
   12f44:	ldr	r3, [r7, r4, lsl #2]
   12f48:	ldr	r0, [r5, r0]
   12f4c:	add	r2, pc, r2
   12f50:	ldr	r0, [r0]
   12f54:	bl	12a6c <__fprintf_chk@plt>
   12f58:	mov	r0, #64	; 0x40
   12f5c:	bl	129b8 <exit@plt>
   12f60:	ldr	r3, [pc, #2780]	; 13a44 <main@@Base+0xeb4>
   12f64:	mov	r4, #0
   12f68:	ldr	r8, [pc, #2536]	; 13958 <main@@Base+0xdc8>
   12f6c:	ldr	r7, [r5, r3]
   12f70:	add	r8, pc, r8
   12f74:	ldr	r0, [r7]
   12f78:	bl	17b7c <print_app_details@@Base>
   12f7c:	mov	r0, r6
   12f80:	bl	177a8 <raspicommonsettings_dump_parameters@@Base>
   12f84:	ldr	r3, [sp, #292]	; 0x124
   12f88:	ldr	r2, [pc, #2508]	; 1395c <main@@Base+0xdcc>
   12f8c:	mov	r1, #1
   12f90:	ldr	r0, [r7]
   12f94:	add	r2, pc, r2
   12f98:	str	r3, [sp]
   12f9c:	ldr	r3, [sp, #296]	; 0x128
   12fa0:	bl	12a6c <__fprintf_chk@plt>
   12fa4:	ldr	ip, [sp, #264]	; 0x108
   12fa8:	ldr	r2, [sp, #268]	; 0x10c
   12fac:	mov	r1, #1
   12fb0:	add	ip, ip, #31
   12fb4:	ldr	r0, [r7]
   12fb8:	add	r2, r2, #15
   12fbc:	bic	ip, ip, #31
   12fc0:	bic	r2, r2, #15
   12fc4:	str	r2, [sp, #4]
   12fc8:	str	ip, [sp]
   12fcc:	mul	r3, r2, ip
   12fd0:	asr	r2, r2, r1
   12fd4:	str	r2, [sp, #12]
   12fd8:	asr	ip, ip, r1
   12fdc:	ldr	r2, [pc, #2428]	; 13960 <main@@Base+0xdd0>
   12fe0:	str	ip, [sp, #8]
   12fe4:	add	r2, pc, r2
   12fe8:	add	r3, r3, r3, asr r1
   12fec:	bl	12a6c <__fprintf_chk@plt>
   12ff0:	ldr	r0, [pc, #2412]	; 13964 <main@@Base+0xdd4>
   12ff4:	ldr	r3, [r7]
   12ff8:	mov	r1, #1
   12ffc:	add	r0, pc, r0
   13000:	mov	r2, #14
   13004:	bl	128ec <fwrite@plt>
   13008:	add	r3, r8, r4
   1300c:	ldr	r2, [sp, #308]	; 0x134
   13010:	ldr	r3, [r3, #4]
   13014:	cmp	r2, r3
   13018:	beq	13100 <main@@Base+0x570>
   1301c:	add	r4, r4, #8
   13020:	cmp	r4, #40	; 0x28
   13024:	bne	13008 <main@@Base+0x478>
   13028:	ldr	r1, [pc, #2360]	; 13968 <main@@Base+0xdd8>
   1302c:	mov	r2, #2
   13030:	ldr	r0, [sp, #896]	; 0x380
   13034:	add	r1, pc, r1
   13038:	ldr	r4, [r7]
   1303c:	add	r1, r1, #220	; 0xdc
   13040:	bl	171e8 <raspicli_unmap_xref@@Base>
   13044:	ldr	r2, [pc, #2336]	; 1396c <main@@Base+0xddc>
   13048:	mov	r1, #1
   1304c:	add	r2, pc, r2
   13050:	mov	r3, r0
   13054:	mov	r0, r4
   13058:	bl	12a6c <__fprintf_chk@plt>
   1305c:	ldr	r1, [r7]
   13060:	mov	r0, #10
   13064:	bl	12ac0 <fputc@plt>
   13068:	add	r0, sp, #328	; 0x148
   1306c:	bl	17504 <raspipreview_dump_parameters@@Base>
   13070:	add	r0, sp, #360	; 0x168
   13074:	bl	14f7c <raspicamcontrol_dump_parameters@@Base>
   13078:	b	12de0 <main@@Base+0x250>
   1307c:	ldr	r0, [sp, #56]	; 0x38
   13080:	add	r1, sp, #60	; 0x3c
   13084:	ldr	ip, [sp, #276]	; 0x114
   13088:	mov	r2, #12
   1308c:	mov	r3, #16
   13090:	str	r2, [sp, #64]	; 0x40
   13094:	ldr	r0, [r0, #16]
   13098:	movt	r3, #1
   1309c:	str	ip, [sp, #68]	; 0x44
   130a0:	str	r3, [sp, #60]	; 0x3c
   130a4:	bl	12a0c <mmal_port_parameter_set@plt>
   130a8:	subs	r3, r0, #0
   130ac:	bne	13110 <main@@Base+0x580>
   130b0:	ldr	r0, [sp, #56]	; 0x38
   130b4:	ldr	r3, [r0, #28]
   130b8:	cmp	r3, #0
   130bc:	bne	133a8 <main@@Base+0x818>
   130c0:	ldr	r3, [sl]
   130c4:	cmp	r3, #1
   130c8:	bls	12e30 <main@@Base+0x2a0>
   130cc:	ldr	r2, [pc, #2204]	; 13970 <main@@Base+0xde0>
   130d0:	mov	r0, sl
   130d4:	mov	r1, #2
   130d8:	add	r2, pc, r2
   130dc:	bl	12754 <vcos_log_impl@plt>
   130e0:	ldr	r0, [sp, #56]	; 0x38
   130e4:	b	12e30 <main@@Base+0x2a0>
   130e8:	ldr	r0, [sp, #284]	; 0x11c
   130ec:	bl	185c8 <raspi_gps_setup@@Base>
   130f0:	cmp	r0, #0
   130f4:	movne	r3, #0
   130f8:	strne	r3, [sp, #288]	; 0x120
   130fc:	b	12dec <main@@Base+0x25c>
   13100:	ldr	r0, [r4, r8]
   13104:	ldr	r1, [r7]
   13108:	bl	12b2c <fputs@plt>
   1310c:	b	1301c <main@@Base+0x48c>
   13110:	ldr	r2, [sl]
   13114:	cmp	r2, #1
   13118:	bls	12f20 <main@@Base+0x390>
   1311c:	ldr	r2, [pc, #2128]	; 13974 <main@@Base+0xde4>
   13120:	mov	r0, sl
   13124:	mov	r1, #2
   13128:	add	r2, pc, r2
   1312c:	bl	12754 <vcos_log_impl@plt>
   13130:	ldr	r0, [sp, #56]	; 0x38
   13134:	b	12e30 <main@@Base+0x2a0>
   13138:	mov	r0, #10
   1313c:	ldr	r1, [sp, #36]	; 0x24
   13140:	mov	r3, #3
   13144:	str	ip, [sp, #20]
   13148:	str	r3, [sp, #308]	; 0x134
   1314c:	bl	12850 <signal@plt>
   13150:	ldr	r3, [sp, #292]	; 0x124
   13154:	ldr	ip, [sp, #20]
   13158:	cmn	r3, #1
   1315c:	beq	1318c <main@@Base+0x5fc>
   13160:	mov	r1, #1
   13164:	cmp	fp, ip
   13168:	movle	r2, #0
   1316c:	andgt	r2, r1, #1
   13170:	mov	r4, ip
   13174:	b	12cf8 <main@@Base+0x168>
   13178:	ldr	r3, [sp, #292]	; 0x124
   1317c:	mov	r2, #2
   13180:	str	r2, [sp, #308]	; 0x134
   13184:	cmn	r3, #1
   13188:	bne	13160 <main@@Base+0x5d0>
   1318c:	mov	r3, #0
   13190:	mov	r1, #1
   13194:	str	r3, [sp, #292]	; 0x124
   13198:	b	13164 <main@@Base+0x5d4>
   1319c:	ldr	r0, [r9, #4]
   131a0:	mov	r2, #2
   131a4:	ldr	r1, [sp, #52]	; 0x34
   131a8:	str	ip, [sp, #20]
   131ac:	bl	17198 <raspicli_map_xref@@Base>
   131b0:	ldr	ip, [sp, #20]
   131b4:	cmn	r0, #1
   131b8:	strne	r0, [sp, #896]	; 0x380
   131bc:	moveq	r3, #0
   131c0:	streq	r3, [sp, #896]	; 0x380
   131c4:	add	ip, ip, #1
   131c8:	mov	r1, #1
   131cc:	b	13164 <main@@Base+0x5d4>
   131d0:	ldr	r3, [sp, #324]	; 0x144
   131d4:	cmp	r3, #0
   131d8:	moveq	r1, #1
   131dc:	bne	134b0 <main@@Base+0x920>
   131e0:	mov	r3, #1
   131e4:	str	r3, [sp, #320]	; 0x140
   131e8:	b	13164 <main@@Base+0x5d4>
   131ec:	ldr	r3, [sp, #320]	; 0x140
   131f0:	cmp	r3, #0
   131f4:	moveq	r1, #1
   131f8:	bne	13480 <main@@Base+0x8f0>
   131fc:	mov	r3, #1
   13200:	str	r3, [sp, #324]	; 0x144
   13204:	b	13164 <main@@Base+0x5d4>
   13208:	add	r8, r8, #4
   1320c:	mov	r3, #1
   13210:	str	r3, [sp, #908]	; 0x38c
   13214:	ldr	r0, [r7, r8]
   13218:	str	ip, [sp, #20]
   1321c:	bl	129dc <strlen@plt>
   13220:	ldr	ip, [sp, #20]
   13224:	cmp	r0, #0
   13228:	bne	1344c <main@@Base+0x8bc>
   1322c:	mov	r1, r0
   13230:	b	13164 <main@@Base+0x5d4>
   13234:	mov	r1, #1
   13238:	strb	r1, [sp, #928]	; 0x3a0
   1323c:	b	13164 <main@@Base+0x5d4>
   13240:	ldr	r1, [pc, #1840]	; 13978 <main@@Base+0xde8>
   13244:	add	r2, sp, #292	; 0x124
   13248:	ldr	r0, [r9, #4]
   1324c:	mov	r4, #4
   13250:	add	r1, pc, r1
   13254:	str	ip, [sp, #20]
   13258:	bl	12acc <sscanf@plt>
   1325c:	ldr	ip, [sp, #20]
   13260:	cmp	r0, #1
   13264:	beq	13430 <main@@Base+0x8a0>
   13268:	mov	r1, #0
   1326c:	b	13164 <main@@Base+0x5d4>
   13270:	cmp	fp, ip
   13274:	ble	13364 <main@@Base+0x7d4>
   13278:	ldr	r0, [r9, #4]
   1327c:	ldrb	r3, [r0]
   13280:	cmp	r3, #45	; 0x2d
   13284:	beq	13364 <main@@Base+0x7d4>
   13288:	ldr	r1, [pc, #1772]	; 1397c <main@@Base+0xdec>
   1328c:	add	r2, sp, #304	; 0x130
   13290:	str	ip, [sp, #20]
   13294:	add	r1, pc, r1
   13298:	bl	12acc <sscanf@plt>
   1329c:	ldr	ip, [sp, #20]
   132a0:	cmp	r0, #1
   132a4:	bne	13268 <main@@Base+0x6d8>
   132a8:	ldr	r3, [sp, #304]	; 0x130
   132ac:	mov	r1, #1
   132b0:	add	ip, ip, r1
   132b4:	str	r1, [sp, #300]	; 0x12c
   132b8:	cmp	r3, #0
   132bc:	moveq	r3, #250	; 0xfa
   132c0:	streq	r3, [sp, #304]	; 0x130
   132c4:	b	13164 <main@@Base+0x5d4>
   132c8:	ldr	r1, [pc, #1712]	; 13980 <main@@Base+0xdf0>
   132cc:	add	r2, sp, #296	; 0x128
   132d0:	ldr	r0, [r9, #4]
   132d4:	add	r1, pc, r1
   132d8:	str	ip, [sp, #20]
   132dc:	bl	12acc <sscanf@plt>
   132e0:	ldr	ip, [sp, #20]
   132e4:	cmp	r0, #1
   132e8:	addeq	ip, ip, #1
   132ec:	moveq	r1, r0
   132f0:	bne	13268 <main@@Base+0x6d8>
   132f4:	b	13164 <main@@Base+0x5d4>
   132f8:	ldr	r1, [pc, #1668]	; 13984 <main@@Base+0xdf4>
   132fc:	add	r2, sp, #312	; 0x138
   13300:	ldr	r0, [r9, #4]
   13304:	add	r3, sp, #316	; 0x13c
   13308:	add	r1, pc, r1
   1330c:	str	ip, [sp, #20]
   13310:	bl	12acc <sscanf@plt>
   13314:	ldr	ip, [sp, #20]
   13318:	cmp	r0, #2
   1331c:	bne	13268 <main@@Base+0x6d8>
   13320:	ldr	r3, [sp, #312]	; 0x138
   13324:	mov	r1, #1
   13328:	str	r1, [sp, #308]	; 0x134
   1332c:	cmp	r3, #1000	; 0x3e8
   13330:	movlt	r3, #1000	; 0x3e8
   13334:	strlt	r3, [sp, #312]	; 0x138
   13338:	ldr	r3, [sp, #316]	; 0x13c
   1333c:	cmp	r3, #1000	; 0x3e8
   13340:	movlt	r3, #1000	; 0x3e8
   13344:	strlt	r3, [sp, #316]	; 0x13c
   13348:	ldr	r3, [sp, #292]	; 0x124
   1334c:	cmn	r3, #1
   13350:	addeq	ip, ip, r1
   13354:	moveq	r3, #0
   13358:	streq	r3, [sp, #292]	; 0x124
   1335c:	addne	ip, ip, #1
   13360:	b	13164 <main@@Base+0x5d4>
   13364:	mov	r1, #1
   13368:	str	r1, [sp, #300]	; 0x12c
   1336c:	b	13164 <main@@Base+0x5d4>
   13370:	cmp	fp, ip
   13374:	ldr	r1, [r7, r8]
   13378:	add	r0, sp, #360	; 0x168
   1337c:	ldrgt	r9, [r9, #4]
   13380:	movle	r9, #0
   13384:	add	r1, r1, #1
   13388:	str	ip, [sp, #20]
   1338c:	mov	r2, r9
   13390:	bl	1459c <raspicamcontrol_parse_cmdline@@Base>
   13394:	cmp	r0, #0
   13398:	beq	133ec <main@@Base+0x85c>
   1339c:	add	ip, r4, r0
   133a0:	mov	r1, #1
   133a4:	b	13164 <main@@Base+0x5d4>
   133a8:	ldr	r0, [r0, #16]
   133ac:	mov	r1, #55	; 0x37
   133b0:	ldr	r2, [sp, #280]	; 0x118
   133b4:	movt	r1, #1
   133b8:	bl	127fc <mmal_port_parameter_set_uint32@plt>
   133bc:	subs	r3, r0, #0
   133c0:	beq	134e0 <main@@Base+0x950>
   133c4:	ldr	r2, [sl]
   133c8:	cmp	r2, #1
   133cc:	bls	12f20 <main@@Base+0x390>
   133d0:	ldr	r2, [pc, #1456]	; 13988 <main@@Base+0xdf8>
   133d4:	mov	r0, sl
   133d8:	mov	r1, #2
   133dc:	add	r2, pc, r2
   133e0:	bl	12754 <vcos_log_impl@plt>
   133e4:	ldr	r0, [sp, #56]	; 0x38
   133e8:	b	12e30 <main@@Base+0x2a0>
   133ec:	ldr	r1, [r7, r8]
   133f0:	mov	r0, r6
   133f4:	mov	r2, r9
   133f8:	ldr	r3, [sp, #40]	; 0x28
   133fc:	add	r1, r1, #1
   13400:	bl	178d4 <raspicommonsettings_parse_cmdline@@Base>
   13404:	cmp	r0, #0
   13408:	bne	1339c <main@@Base+0x80c>
   1340c:	ldr	r1, [r7, r8]
   13410:	mov	r2, r9
   13414:	add	r0, sp, #328	; 0x148
   13418:	add	r1, r1, #1
   1341c:	bl	175d0 <raspipreview_parse_cmdline@@Base>
   13420:	ldr	ip, [sp, #20]
   13424:	cmp	r0, #0
   13428:	beq	1322c <main@@Base+0x69c>
   1342c:	b	1339c <main@@Base+0x80c>
   13430:	ldr	r3, [sp, #292]	; 0x124
   13434:	cmp	r3, #0
   13438:	bne	131c4 <main@@Base+0x634>
   1343c:	ldr	r3, [sp, #308]	; 0x134
   13440:	cmp	r3, #0
   13444:	streq	r4, [sp, #308]	; 0x134
   13448:	b	131c4 <main@@Base+0x634>
   1344c:	add	r4, r0, #1
   13450:	mov	r0, r4
   13454:	bl	12934 <malloc@plt>
   13458:	ldr	ip, [sp, #20]
   1345c:	cmp	r0, #0
   13460:	str	r0, [sp, #904]	; 0x388
   13464:	beq	137a8 <main@@Base+0xc18>
   13468:	ldr	r1, [r7, r8]
   1346c:	mov	r2, r4
   13470:	str	ip, [sp, #20]
   13474:	bl	12a3c <strncpy@plt>
   13478:	ldr	ip, [sp, #20]
   1347c:	b	131c4 <main@@Base+0x634>
   13480:	ldr	r3, [pc, #1468]	; 13a44 <main@@Base+0xeb4>
   13484:	mov	r1, #1
   13488:	ldr	r0, [pc, #1276]	; 1398c <main@@Base+0xdfc>
   1348c:	mov	r2, #40	; 0x28
   13490:	ldr	r3, [r5, r3]
   13494:	add	r0, pc, r0
   13498:	ldr	r3, [r3]
   1349c:	str	ip, [sp, #20]
   134a0:	bl	128ec <fwrite@plt>
   134a4:	mov	r1, #0
   134a8:	ldr	ip, [sp, #20]
   134ac:	b	131fc <main@@Base+0x66c>
   134b0:	ldr	r3, [pc, #1420]	; 13a44 <main@@Base+0xeb4>
   134b4:	mov	r1, #1
   134b8:	ldr	r0, [pc, #1232]	; 13990 <main@@Base+0xe00>
   134bc:	mov	r2, #40	; 0x28
   134c0:	ldr	r3, [r5, r3]
   134c4:	add	r0, pc, r0
   134c8:	ldr	r3, [r3]
   134cc:	str	ip, [sp, #20]
   134d0:	bl	128ec <fwrite@plt>
   134d4:	mov	r1, #0
   134d8:	ldr	ip, [sp, #20]
   134dc:	b	131e0 <main@@Base+0x650>
   134e0:	ldr	r2, [sp, #56]	; 0x38
   134e4:	ldr	r3, [pc, #1192]	; 13994 <main@@Base+0xe04>
   134e8:	ldr	r0, [r2, #16]
   134ec:	ldr	r1, [r5, r3]
   134f0:	ldr	r3, [r2, #32]
   134f4:	ldr	r9, [r3]
   134f8:	ldmib	r3, {r7, r8}
   134fc:	bl	128d4 <mmal_port_enable@plt>
   13500:	subs	r3, r0, #0
   13504:	beq	13530 <main@@Base+0x9a0>
   13508:	ldr	r2, [sl]
   1350c:	cmp	r2, #1
   13510:	bls	12f20 <main@@Base+0x390>
   13514:	ldr	r2, [pc, #1148]	; 13998 <main@@Base+0xe08>
   13518:	mov	r0, sl
   1351c:	mov	r1, #2
   13520:	add	r2, pc, r2
   13524:	bl	12754 <vcos_log_impl@plt>
   13528:	ldr	r0, [sp, #56]	; 0x38
   1352c:	b	12e30 <main@@Base+0x2a0>
   13530:	ldr	r1, [sp, #56]	; 0x38
   13534:	add	r4, sp, #72	; 0x48
   13538:	ldr	r2, [sp, #268]	; 0x10c
   1353c:	mov	lr, #21
   13540:	ldr	ip, [sp, #264]	; 0x108
   13544:	movt	lr, #1
   13548:	ldr	r0, [r1, #16]
   1354c:	mov	r1, r4
   13550:	str	r3, [sp, #88]	; 0x58
   13554:	str	r3, [sp, #92]	; 0x5c
   13558:	str	r3, [sp, #108]	; 0x6c
   1355c:	str	r3, [sp, #112]	; 0x70
   13560:	mov	r3, #48	; 0x30
   13564:	str	r2, [sp, #84]	; 0x54
   13568:	str	r2, [sp, #100]	; 0x64
   1356c:	mov	r2, #3
   13570:	str	r3, [sp, #76]	; 0x4c
   13574:	mov	r3, #2
   13578:	str	r2, [sp, #104]	; 0x68
   1357c:	str	r3, [sp, #116]	; 0x74
   13580:	str	lr, [sp, #72]	; 0x48
   13584:	str	ip, [sp, #80]	; 0x50
   13588:	str	ip, [sp, #96]	; 0x60
   1358c:	bl	12a0c <mmal_port_parameter_set@plt>
   13590:	ldr	r3, [sp, #504]	; 0x1f8
   13594:	movw	r2, #36224	; 0x8d80
   13598:	movt	r2, #91	; 0x5b
   1359c:	ldr	fp, [r9, #20]
   135a0:	cmp	r3, r2
   135a4:	bgt	13794 <main@@Base+0xc04>
   135a8:	movw	r2, #16960	; 0x4240
   135ac:	movt	r2, #15
   135b0:	cmp	r3, r2
   135b4:	bgt	1369c <main@@Base+0xb0c>
   135b8:	cmp	r3, #0
   135bc:	beq	13618 <main@@Base+0xa88>
   135c0:	vmov	s11, r3
   135c4:	vldr	d6, [pc, #836]	; 13910 <main@@Base+0xd80>
   135c8:	vcvt.f64.s32	d7, s11
   135cc:	vldr	s11, [sp, #296]	; 0x128
   135d0:	vdiv.f64	d7, d6, d7
   135d4:	vcvt.f64.s32	d6, s11
   135d8:	vcmpe.f64	d6, d7
   135dc:	vmrs	APSR_nzcv, fpscr
   135e0:	ble	13618 <main@@Base+0xa88>
   135e4:	ldr	r3, [sp, #284]	; 0x11c
   135e8:	mov	r2, #0
   135ec:	str	r2, [sp, #296]	; 0x128
   135f0:	cmp	r3, r2
   135f4:	beq	13618 <main@@Base+0xa88>
   135f8:	ldr	r3, [pc, #1092]	; 13a44 <main@@Base+0xeb4>
   135fc:	mov	r1, #1
   13600:	ldr	r0, [pc, #916]	; 1399c <main@@Base+0xe0c>
   13604:	mov	r2, #62	; 0x3e
   13608:	ldr	r3, [r5, r3]
   1360c:	add	r0, pc, r0
   13610:	ldr	r3, [r3]
   13614:	bl	128ec <fwrite@plt>
   13618:	ldr	ip, [sp, #264]	; 0x108
   1361c:	movw	r2, #20559	; 0x504f
   13620:	ldr	r3, [fp, #12]
   13624:	movt	r2, #22097	; 0x5651
   13628:	add	r1, ip, #31
   1362c:	str	r2, [fp, #4]
   13630:	bic	r2, r1, #31
   13634:	mov	lr, #1
   13638:	str	r2, [r3]
   1363c:	mov	r0, r9
   13640:	ldr	r1, [sp, #268]	; 0x10c
   13644:	mov	r2, #0
   13648:	str	ip, [r3, #16]
   1364c:	add	ip, r1, #15
   13650:	str	lr, [r3, #28]
   13654:	str	r1, [r3, #20]
   13658:	bic	r1, ip, #15
   1365c:	str	r2, [r3, #12]
   13660:	stmib	r3, {r1, r2}
   13664:	str	r2, [r3, #24]
   13668:	bl	128e0 <mmal_port_format_commit@plt>
   1366c:	cmp	r0, #0
   13670:	beq	136d0 <main@@Base+0xb40>
   13674:	ldr	r3, [sl]
   13678:	cmp	r3, #1
   1367c:	bls	12f20 <main@@Base+0x390>
   13680:	ldr	r2, [pc, #792]	; 139a0 <main@@Base+0xe10>
   13684:	mov	r0, sl
   13688:	mov	r1, #2
   1368c:	add	r2, pc, r2
   13690:	bl	12754 <vcos_log_impl@plt>
   13694:	ldr	r0, [sp, #56]	; 0x38
   13698:	b	12e30 <main@@Base+0x2a0>
   1369c:	ldr	lr, [pc, #768]	; 139a4 <main@@Base+0xe14>
   136a0:	mov	ip, r4
   136a4:	add	lr, pc, lr
   136a8:	add	lr, lr, #64	; 0x40
   136ac:	ldm	lr!, {r0, r1, r2, r3}
   136b0:	stmia	ip!, {r0, r1, r2, r3}
   136b4:	ldm	lr, {r0, r1}
   136b8:	stm	ip, {r0, r1}
   136bc:	mov	r0, r9
   136c0:	mov	r1, r4
   136c4:	bl	12a0c <mmal_port_parameter_set@plt>
   136c8:	ldr	r3, [sp, #504]	; 0x1f8
   136cc:	b	135b8 <main@@Base+0xa28>
   136d0:	ldr	r2, [sp, #504]	; 0x1f8
   136d4:	movw	r3, #36224	; 0x8d80
   136d8:	movt	r3, #91	; 0x5b
   136dc:	ldr	r9, [r7, #20]
   136e0:	cmp	r2, r3
   136e4:	bgt	138b4 <main@@Base+0xd24>
   136e8:	movw	r3, #16960	; 0x4240
   136ec:	movt	r3, #15
   136f0:	cmp	r2, r3
   136f4:	bgt	13884 <main@@Base+0xcf4>
   136f8:	ldr	r3, [sp, #324]	; 0x144
   136fc:	cmp	r3, #0
   13700:	bne	13850 <main@@Base+0xcc0>
   13704:	movw	r3, #13385	; 0x3449
   13708:	movt	r3, #12338	; 0x3032
   1370c:	str	r3, [r9, #4]
   13710:	str	r3, [r9, #8]
   13714:	ldr	r3, [r9, #12]
   13718:	mov	r2, #0
   1371c:	ldr	r0, [sp, #264]	; 0x108
   13720:	mov	ip, #1
   13724:	add	r1, r0, #31
   13728:	bic	r1, r1, #31
   1372c:	str	r1, [r3]
   13730:	ldr	r1, [sp, #268]	; 0x10c
   13734:	str	r0, [r3, #16]
   13738:	mov	r0, r7
   1373c:	add	lr, r1, #15
   13740:	str	r2, [r3, #8]
   13744:	str	r1, [r3, #20]
   13748:	bic	r1, lr, #15
   1374c:	str	r2, [r3, #12]
   13750:	str	r1, [r3, #4]
   13754:	ldr	r2, [sp, #296]	; 0x128
   13758:	str	ip, [r3, #28]
   1375c:	str	r2, [r3, #24]
   13760:	bl	128e0 <mmal_port_format_commit@plt>
   13764:	cmp	r0, #0
   13768:	beq	13800 <main@@Base+0xc70>
   1376c:	ldr	r3, [sl]
   13770:	cmp	r3, #1
   13774:	bls	12f20 <main@@Base+0x390>
   13778:	ldr	r2, [pc, #552]	; 139a8 <main@@Base+0xe18>
   1377c:	mov	r0, sl
   13780:	mov	r1, #2
   13784:	add	r2, pc, r2
   13788:	bl	12754 <vcos_log_impl@plt>
   1378c:	ldr	r0, [sp, #56]	; 0x38
   13790:	b	12e30 <main@@Base+0x2a0>
   13794:	ldr	lr, [pc, #528]	; 139ac <main@@Base+0xe1c>
   13798:	mov	ip, r4
   1379c:	add	lr, pc, lr
   137a0:	add	lr, lr, #40	; 0x28
   137a4:	b	136ac <main@@Base+0xb1c>
   137a8:	ldr	lr, [pc, #512]	; 139b0 <main@@Base+0xe20>
   137ac:	movw	r2, #510	; 0x1fe
   137b0:	ldr	r3, [pc, #508]	; 139b4 <main@@Base+0xe24>
   137b4:	add	lr, pc, lr
   137b8:	ldr	r0, [sp, #44]	; 0x2c
   137bc:	ldr	r1, [sp, #48]	; 0x30
   137c0:	add	r3, pc, r3
   137c4:	str	lr, [sp]
   137c8:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   137cc:	ldr	r0, [sp, #904]	; 0x388
   137d0:	ldr	ip, [sp, #20]
   137d4:	cmp	r0, #0
   137d8:	beq	131c4 <main@@Base+0x634>
   137dc:	b	13468 <main@@Base+0x8d8>
   137e0:	bl	17e18 <get_app_name@@Base>
   137e4:	bl	1279c <basename@plt>
   137e8:	ldr	r1, [pc, #456]	; 139b8 <main@@Base+0xe28>
   137ec:	add	r1, pc, r1
   137f0:	bl	17bf4 <display_valid_parameters@@Base>
   137f4:	mov	r0, #64	; 0x40
   137f8:	bl	129b8 <exit@plt>
   137fc:	bl	1288c <__stack_chk_fail@plt>
   13800:	ldr	r3, [r7, #44]	; 0x2c
   13804:	mov	r2, #1
   13808:	mov	r0, r7
   1380c:	mov	r1, #4
   13810:	cmp	r3, #2
   13814:	movls	r3, #3
   13818:	strls	r3, [r7, #44]	; 0x2c
   1381c:	bl	12b74 <mmal_port_parameter_set_boolean@plt>
   13820:	subs	r2, r0, #0
   13824:	beq	12e94 <main@@Base+0x304>
   13828:	ldr	r3, [sl]
   1382c:	cmp	r3, #1
   13830:	bls	12f20 <main@@Base+0x390>
   13834:	ldr	r2, [pc, #384]	; 139bc <main@@Base+0xe2c>
   13838:	mov	r0, sl
   1383c:	mov	r1, #2
   13840:	add	r2, pc, r2
   13844:	bl	12754 <vcos_log_impl@plt>
   13848:	ldr	r0, [sp, #56]	; 0x38
   1384c:	b	12e30 <main@@Base+0x2a0>
   13850:	mov	r0, r8
   13854:	bl	12a54 <mmal_util_rgb_order_fixed@plt>
   13858:	mov	r1, #0
   1385c:	movw	r2, #18242	; 0x4742
   13860:	movw	r3, #18258	; 0x4752
   13864:	movt	r2, #13138	; 0x3352
   13868:	movt	r3, #13122	; 0x3342
   1386c:	str	r1, [r9, #8]
   13870:	cmp	r0, r1
   13874:	moveq	r0, r2
   13878:	movne	r0, r3
   1387c:	str	r0, [r9, #4]
   13880:	b	13714 <main@@Base+0xb84>
   13884:	ldr	lr, [pc, #308]	; 139c0 <main@@Base+0xe30>
   13888:	mov	ip, r4
   1388c:	add	lr, pc, lr
   13890:	add	lr, lr, #88	; 0x58
   13894:	ldm	lr!, {r0, r1, r2, r3}
   13898:	stmia	ip!, {r0, r1, r2, r3}
   1389c:	ldm	lr, {r0, r1}
   138a0:	stm	ip, {r0, r1}
   138a4:	mov	r0, r7
   138a8:	mov	r1, r4
   138ac:	bl	12a0c <mmal_port_parameter_set@plt>
   138b0:	b	136f8 <main@@Base+0xb68>
   138b4:	ldr	lr, [pc, #264]	; 139c4 <main@@Base+0xe34>
   138b8:	mov	ip, r4
   138bc:	add	lr, pc, lr
   138c0:	add	lr, lr, #40	; 0x28
   138c4:	b	13894 <main@@Base+0xd04>
   138c8:	ldr	r3, [r8, #44]	; 0x2c
   138cc:	ldr	r0, [sp, #56]	; 0x38
   138d0:	cmp	r3, #2
   138d4:	movls	r3, #3
   138d8:	strls	r3, [r8, #44]	; 0x2c
   138dc:	bl	12a48 <mmal_component_enable@plt>
   138e0:	cmp	r0, #0
   138e4:	beq	13a58 <main@@Base+0xec8>
   138e8:	ldr	r3, [sl]
   138ec:	cmp	r3, #1
   138f0:	bls	12f20 <main@@Base+0x390>
   138f4:	ldr	r2, [pc, #204]	; 139c8 <main@@Base+0xe38>
   138f8:	mov	r0, sl
   138fc:	mov	r1, #2
   13900:	add	r2, pc, r2
   13904:	bl	12754 <vcos_log_impl@plt>
   13908:	ldr	r0, [sp, #56]	; 0x38
   1390c:	b	12e30 <main@@Base+0x2a0>
   13910:	andeq	r0, r0, r0
   13914:	smlawbmi	lr, r0, r4, r8
   13918:	andeq	fp, r1, r0, asr r4
   1391c:	andeq	r0, r0, r4, lsl #3
   13920:	andeq	r0, r0, r0, lsl #3
   13924:	andeq	sl, r0, ip, lsl #4
   13928:	andeq	r0, r0, r0, lsr #3
   1392c:	andeq	r6, r0, r8, ror #16
   13930:	andeq	r9, r0, r0, asr #20
   13934:	andeq	fp, r1, r4, lsl #20
   13938:	andeq	r9, r0, r8, lsr #21
   1393c:	andeq	fp, r1, r8, lsl #19
   13940:	strdeq	sl, [r0], -r0
   13944:	andeq	sl, r0, r4, asr #5
   13948:	muleq	r0, ip, r8
   1394c:	andeq	sl, r0, r8, lsl #5
   13950:	andeq	sl, r0, r8, lsr #2
   13954:	ldrdeq	r9, [r0], -r8
   13958:	andeq	sl, r1, r0, lsl pc
   1395c:			; <UNDEFINED> instruction: 0x00009eb4
   13960:	andeq	r9, r0, r4, lsl #29
   13964:	andeq	r9, r0, r4, asr #29
   13968:	andeq	fp, r1, ip, lsl #13
   1396c:	andeq	r9, r0, r4, lsl #29
   13970:	andeq	r9, r0, r4, asr #28
   13974:	ldrdeq	r9, [r0], -r0
   13978:	andeq	r9, r0, r8, asr #25
   1397c:	andeq	r8, r0, r4, rrx
   13980:	andeq	r8, r0, r4, lsr #32
   13984:	andeq	r7, r0, r0, lsl sl
   13988:	andeq	r9, r0, r4, ror #22
   1398c:	andeq	r9, r0, r0, asr r9
   13990:	andeq	r9, r0, r0, lsr #18
   13994:	muleq	r0, r0, r1
   13998:	andeq	r9, r0, r8, asr #20
   1399c:	andeq	r9, r0, r8, lsl #19
   139a0:	andeq	r9, r0, r8, asr #18
   139a4:	andeq	r9, r0, r0, asr r0
   139a8:	andeq	r9, r0, ip, ror r8
   139ac:	andeq	r8, r0, r8, asr pc
   139b0:	andeq	r9, r0, ip, asr r6
   139b4:	andeq	r7, r0, r0, asr r6
   139b8:	andeq	r5, r0, r8, lsr #26
   139bc:	andeq	r9, r0, r4, ror #15
   139c0:	andeq	r8, r0, r8, ror #28
   139c4:	andeq	r8, r0, r8, lsr lr
   139c8:	andeq	r9, r0, r4, ror #14
   139cc:	andeq	r9, r0, r4, lsr #12
   139d0:	andeq	r8, r0, r4, lsl ip
   139d4:	andeq	r9, r0, r8, lsr #12
   139d8:	andeq	r8, r0, r4, ror #22
   139dc:	ldrdeq	r9, [r0], -ip
   139e0:	muleq	r0, r8, r1
   139e4:			; <UNDEFINED> instruction: 0x000094b4
   139e8:	andeq	r5, r0, r4, asr #8
   139ec:	andeq	r9, r0, ip, asr r4
   139f0:	ldrdeq	r9, [r0], -ip
   139f4:	andeq	r9, r0, r0, lsl #6
   139f8:	andeq	r9, r0, ip, lsr r5
   139fc:	strdeq	r9, [r0], -ip
   13a00:	muleq	r0, ip, r2
   13a04:			; <UNDEFINED> instruction: 0x000092b8
   13a08:	andeq	r8, r0, ip, ror #15
   13a0c:	muleq	r0, ip, r2
   13a10:	andeq	r9, r0, ip, ror r2
   13a14:	andeq	r9, r0, r0, lsl #6
   13a18:	andeq	r9, r0, r4, lsr #6
   13a1c:	andeq	sl, r1, r4, lsr #13
   13a20:	andeq	r9, r0, ip, asr #5
   13a24:	andeq	r9, r0, ip, lsr #5
   13a28:	andeq	r9, r0, r0, lsl r3
   13a2c:	andeq	r9, r0, ip, ror #5
   13a30:	andeq	r8, r0, r8, lsr ip
   13a34:	andeq	r9, r0, ip, asr #2
   13a38:	andeq	r8, r0, r0, lsl #23
   13a3c:	andeq	r9, r0, r0, lsr #1
   13a40:	muleq	r0, r4, r1
   13a44:	andeq	r0, r0, r8, lsl #3
   13a48:	andeq	r8, r0, r0, lsr pc
   13a4c:	andeq	r8, r0, r0, lsl #21
   13a50:	andeq	r8, r0, r4, ror sl
   13a54:	andeq	r8, r0, ip, lsl #26
   13a58:	add	r1, sp, #360	; 0x168
   13a5c:	ldr	r0, [sp, #56]	; 0x38
   13a60:	bl	1699c <raspicamcontrol_set_all_parameters@@Base>
   13a64:	mov	r0, r7
   13a68:	ldr	r1, [r7, #44]	; 0x2c
   13a6c:	ldr	r2, [r7, #48]	; 0x30
   13a70:	bl	127f0 <mmal_port_pool_create@plt>
   13a74:	subs	r7, r0, #0
   13a78:	beq	14364 <main@@Base+0x17d4>
   13a7c:	ldr	r2, [sp, #284]	; 0x11c
   13a80:	ldr	r3, [sp, #56]	; 0x38
   13a84:	cmp	r2, #0
   13a88:	str	r7, [sp, #848]	; 0x350
   13a8c:	str	r3, [sp, #840]	; 0x348
   13a90:	beq	13ab4 <main@@Base+0xf24>
   13a94:	ldr	r3, [pc, #-88]	; 13a44 <main@@Base+0xeb4>
   13a98:	mov	r1, #1
   13a9c:	ldr	r0, [pc, #-216]	; 139cc <main@@Base+0xe3c>
   13aa0:	mov	r2, #22
   13aa4:	ldr	r3, [r5, r3]
   13aa8:	add	r0, pc, r0
   13aac:	ldr	r3, [r3]
   13ab0:	bl	128ec <fwrite@plt>
   13ab4:	add	r0, sp, #328	; 0x148
   13ab8:	bl	17248 <raspipreview_create@@Base>
   13abc:	cmp	r0, #0
   13ac0:	beq	13b0c <main@@Base+0xf7c>
   13ac4:	ldr	r3, [sl]
   13ac8:	cmp	r3, #1
   13acc:	bls	13af0 <main@@Base+0xf60>
   13ad0:	ldr	r3, [pc, #-264]	; 139d0 <main@@Base+0xe40>
   13ad4:	mov	r0, sl
   13ad8:	ldr	r2, [pc, #-268]	; 139d4 <main@@Base+0xe44>
   13adc:	mov	r1, #2
   13ae0:	add	r3, pc, r3
   13ae4:	add	r2, pc, r2
   13ae8:	add	r3, r3, #112	; 0x70
   13aec:	bl	12754 <vcos_log_impl@plt>
   13af0:	ldr	r0, [sp, #840]	; 0x348
   13af4:	cmp	r0, #0
   13af8:	beq	12e68 <main@@Base+0x2d8>
   13afc:	bl	12880 <mmal_component_destroy@plt>
   13b00:	mov	r3, #0
   13b04:	str	r3, [sp, #840]	; 0x348
   13b08:	b	12e68 <main@@Base+0x2d8>
   13b0c:	ldr	r3, [sp, #284]	; 0x11c
   13b10:	cmp	r3, #0
   13b14:	bne	13e20 <main@@Base+0x1290>
   13b18:	ldr	r3, [sp, #840]	; 0x348
   13b1c:	ldr	r2, [sp, #356]	; 0x164
   13b20:	ldr	r1, [sp, #328]	; 0x148
   13b24:	ldr	r3, [r3, #32]
   13b28:	ldr	r2, [r2, #24]
   13b2c:	cmp	r1, #0
   13b30:	ldr	r9, [r3]
   13b34:	ldr	r3, [r3, #4]
   13b38:	ldr	r8, [r2]
   13b3c:	str	r3, [sp, #28]
   13b40:	beq	13c88 <main@@Base+0x10f8>
   13b44:	ldr	r3, [sp, #284]	; 0x11c
   13b48:	cmp	r3, #0
   13b4c:	bne	13eac <main@@Base+0x131c>
   13b50:	mov	r0, r9
   13b54:	mov	r1, r8
   13b58:	add	r2, r6, #596	; 0x254
   13b5c:	bl	17e28 <connect_ports@@Base>
   13b60:	subs	fp, r0, #0
   13b64:	beq	13c88 <main@@Base+0x10f8>
   13b68:	mov	r3, #0
   13b6c:	str	r3, [sp, #844]	; 0x34c
   13b70:	bl	17edc <mmal_status_to_int@@Base>
   13b74:	ldr	r3, [sl]
   13b78:	cmp	r3, #1
   13b7c:	bls	13ba0 <main@@Base+0x1010>
   13b80:	ldr	r3, [pc, #-432]	; 139d8 <main@@Base+0xe48>
   13b84:	mov	r0, sl
   13b88:	ldr	r2, [pc, #-436]	; 139dc <main@@Base+0xe4c>
   13b8c:	mov	r1, #2
   13b90:	add	r3, pc, r3
   13b94:	add	r2, pc, r2
   13b98:	add	r3, r3, #112	; 0x70
   13b9c:	bl	12754 <vcos_log_impl@plt>
   13ba0:	mov	r0, fp
   13ba4:	bl	17edc <mmal_status_to_int@@Base>
   13ba8:	ldr	r3, [sp, #284]	; 0x11c
   13bac:	cmp	r3, #0
   13bb0:	bne	13e88 <main@@Base+0x12f8>
   13bb4:	ldr	r0, [sp, #28]
   13bb8:	bl	17e78 <check_disable_port@@Base>
   13bbc:	ldr	r3, [sp, #328]	; 0x148
   13bc0:	cmp	r3, #0
   13bc4:	beq	13bd8 <main@@Base+0x1048>
   13bc8:	ldr	r0, [sp, #844]	; 0x34c
   13bcc:	cmp	r0, #0
   13bd0:	beq	13bd8 <main@@Base+0x1048>
   13bd4:	bl	12970 <mmal_connection_destroy@plt>
   13bd8:	ldr	r0, [sp, #356]	; 0x164
   13bdc:	cmp	r0, #0
   13be0:	beq	13be8 <main@@Base+0x1058>
   13be4:	bl	12afc <mmal_component_disable@plt>
   13be8:	ldr	r0, [sp, #840]	; 0x348
   13bec:	cmp	r0, #0
   13bf0:	beq	13bf8 <main@@Base+0x1068>
   13bf4:	bl	12afc <mmal_component_disable@plt>
   13bf8:	ldr	r0, [sp, #856]	; 0x358
   13bfc:	cmp	r0, #0
   13c00:	beq	13c1c <main@@Base+0x108c>
   13c04:	ldr	r3, [pc, #-556]	; 139e0 <main@@Base+0xe50>
   13c08:	ldr	r3, [r5, r3]
   13c0c:	ldr	r3, [r3]
   13c10:	cmp	r0, r3
   13c14:	beq	13c1c <main@@Base+0x108c>
   13c18:	bl	12a78 <fclose@plt>
   13c1c:	ldr	r0, [sp, #868]	; 0x364
   13c20:	cmp	r0, #0
   13c24:	beq	13c40 <main@@Base+0x10b0>
   13c28:	ldr	r3, [pc, #-592]	; 139e0 <main@@Base+0xe50>
   13c2c:	ldr	r3, [r5, r3]
   13c30:	ldr	r3, [r3]
   13c34:	cmp	r0, r3
   13c38:	beq	13c40 <main@@Base+0x10b0>
   13c3c:	bl	12a78 <fclose@plt>
   13c40:	add	r0, sp, #328	; 0x148
   13c44:	bl	174a8 <raspipreview_destroy@@Base>
   13c48:	ldr	r0, [sp, #840]	; 0x348
   13c4c:	cmp	r0, #0
   13c50:	beq	13c60 <main@@Base+0x10d0>
   13c54:	bl	12880 <mmal_component_destroy@plt>
   13c58:	mov	r3, #0
   13c5c:	str	r3, [sp, #840]	; 0x348
   13c60:	ldr	r3, [sp, #288]	; 0x120
   13c64:	cmp	r3, #0
   13c68:	bne	13e7c <main@@Base+0x12ec>
   13c6c:	ldr	r3, [sp, #284]	; 0x11c
   13c70:	cmp	r3, #0
   13c74:	bne	13e58 <main@@Base+0x12c8>
   13c78:	cmp	fp, #0
   13c7c:	beq	12e74 <main@@Base+0x2e4>
   13c80:	mov	fp, #0
   13c84:	b	12e6c <main@@Base+0x2dc>
   13c88:	ldr	r2, [sp, #272]	; 0x110
   13c8c:	mov	r3, #0
   13c90:	str	r3, [sp, #856]	; 0x358
   13c94:	cmp	r2, r3
   13c98:	beq	13cc4 <main@@Base+0x1134>
   13c9c:	ldrb	r3, [r2]
   13ca0:	cmp	r3, #45	; 0x2d
   13ca4:	bne	13e44 <main@@Base+0x12b4>
   13ca8:	ldr	r3, [pc, #-720]	; 139e0 <main@@Base+0xe50>
   13cac:	ldr	r3, [r5, r3]
   13cb0:	ldr	r3, [r3]
   13cb4:	str	r3, [sp, #856]	; 0x358
   13cb8:	ldr	r3, [sp, #856]	; 0x358
   13cbc:	cmp	r3, #0
   13cc0:	beq	13ee8 <main@@Base+0x1358>
   13cc4:	ldr	r2, [sp, #904]	; 0x388
   13cc8:	mov	r3, #0
   13ccc:	str	r3, [sp, #868]	; 0x364
   13cd0:	cmp	r2, r3
   13cd4:	beq	13d00 <main@@Base+0x1170>
   13cd8:	ldrb	r3, [r2]
   13cdc:	cmp	r3, #45	; 0x2d
   13ce0:	bne	13dec <main@@Base+0x125c>
   13ce4:	ldr	r3, [pc, #-780]	; 139e0 <main@@Base+0xe50>
   13ce8:	ldr	r3, [r5, r3]
   13cec:	ldr	r3, [r3]
   13cf0:	str	r3, [sp, #868]	; 0x364
   13cf4:	ldr	r3, [sp, #868]	; 0x364
   13cf8:	cmp	r3, #0
   13cfc:	beq	13f20 <main@@Base+0x1390>
   13d00:	ldr	r1, [sp, #300]	; 0x12c
   13d04:	mov	r2, #0
   13d08:	ldr	r7, [sp, #28]
   13d0c:	add	r3, r6, #608	; 0x260
   13d10:	cmp	r1, r2
   13d14:	str	r6, [sp, #860]	; 0x35c
   13d18:	str	r2, [sp, #864]	; 0x360
   13d1c:	str	r3, [r7, #56]	; 0x38
   13d20:	beq	13d98 <main@@Base+0x1208>
   13d24:	ldr	r0, [sp, #292]	; 0x124
   13d28:	ldr	r1, [sp, #304]	; 0x130
   13d2c:	bl	19d0c <deg_to_str@@Base+0xc98>
   13d30:	ldr	r3, [sp, #284]	; 0x11c
   13d34:	cmp	r3, #0
   13d38:	mov	r6, r0
   13d3c:	beq	13d60 <main@@Base+0x11d0>
   13d40:	ldr	r3, [pc, #-772]	; 13a44 <main@@Base+0xeb4>
   13d44:	mov	r1, #1
   13d48:	ldr	r0, [pc, #-876]	; 139e4 <main@@Base+0xe54>
   13d4c:	mov	r2, #21
   13d50:	ldr	r3, [r5, r3]
   13d54:	add	r0, pc, r0
   13d58:	ldr	r3, [r3]
   13d5c:	bl	128ec <fwrite@plt>
   13d60:	mov	r4, #0
   13d64:	b	13d7c <main@@Base+0x11ec>
   13d68:	ldr	r0, [sp, #840]	; 0x348
   13d6c:	add	r4, r4, #1
   13d70:	bl	15bbc <raspicamcontrol_cycle_test@@Base>
   13d74:	ldr	r0, [sp, #304]	; 0x130
   13d78:	bl	19184 <deg_to_str@@Base+0x110>
   13d7c:	ldr	r3, [sp, #292]	; 0x124
   13d80:	cmp	r3, #0
   13d84:	beq	13d68 <main@@Base+0x11d8>
   13d88:	cmp	r4, r6
   13d8c:	blt	13d68 <main@@Base+0x11d8>
   13d90:	mov	fp, #0
   13d94:	b	13ba0 <main@@Base+0x1010>
   13d98:	ldr	fp, [sp, #856]	; 0x358
   13d9c:	cmp	fp, #0
   13da0:	beq	1431c <main@@Base+0x178c>
   13da4:	ldr	r3, [sp, #284]	; 0x11c
   13da8:	cmp	r3, #0
   13dac:	bne	142dc <main@@Base+0x174c>
   13db0:	ldr	r1, [pc, #-976]	; 139e8 <main@@Base+0xe58>
   13db4:	ldr	r0, [sp, #28]
   13db8:	add	r1, pc, r1
   13dbc:	bl	128d4 <mmal_port_enable@plt>
   13dc0:	subs	fp, r0, #0
   13dc4:	beq	13f4c <main@@Base+0x13bc>
   13dc8:	ldr	r3, [sl]
   13dcc:	cmp	r3, #1
   13dd0:	bls	13ba0 <main@@Base+0x1010>
   13dd4:	ldr	r2, [pc, #-1008]	; 139ec <main@@Base+0xe5c>
   13dd8:	mov	r0, sl
   13ddc:	mov	r1, #2
   13de0:	add	r2, pc, r2
   13de4:	bl	12754 <vcos_log_impl@plt>
   13de8:	b	13ba0 <main@@Base+0x1010>
   13dec:	add	r0, sp, #284	; 0x11c
   13df0:	add	r1, r6, #680	; 0x2a8
   13df4:	bl	19678 <deg_to_str@@Base+0x604>
   13df8:	cmp	r0, #0
   13dfc:	mov	r3, r0
   13e00:	str	r0, [sp, #868]	; 0x364
   13e04:	beq	13f20 <main@@Base+0x1390>
   13e08:	ldr	r0, [pc, #-1056]	; 139f0 <main@@Base+0xe60>
   13e0c:	mov	r1, #1
   13e10:	mov	r2, #21
   13e14:	add	r0, pc, r0
   13e18:	bl	128ec <fwrite@plt>
   13e1c:	b	13cf4 <main@@Base+0x1164>
   13e20:	ldr	r3, [pc, #-996]	; 13a44 <main@@Base+0xeb4>
   13e24:	mov	r1, #1
   13e28:	ldr	r0, [pc, #-1084]	; 139f4 <main@@Base+0xe64>
   13e2c:	mov	r2, #36	; 0x24
   13e30:	ldr	r3, [r5, r3]
   13e34:	add	r0, pc, r0
   13e38:	ldr	r3, [r3]
   13e3c:	bl	128ec <fwrite@plt>
   13e40:	b	13b18 <main@@Base+0xf88>
   13e44:	add	r0, sp, #284	; 0x11c
   13e48:	add	r1, r6, #680	; 0x2a8
   13e4c:	bl	19678 <deg_to_str@@Base+0x604>
   13e50:	str	r0, [sp, #856]	; 0x358
   13e54:	b	13cb8 <main@@Base+0x1128>
   13e58:	ldr	r3, [pc, #-1052]	; 13a44 <main@@Base+0xeb4>
   13e5c:	mov	r1, #1
   13e60:	ldr	r0, [pc, #-1136]	; 139f8 <main@@Base+0xe68>
   13e64:	mov	r2, #75	; 0x4b
   13e68:	ldr	r3, [r5, r3]
   13e6c:	add	r0, pc, r0
   13e70:	ldr	r3, [r3]
   13e74:	bl	128ec <fwrite@plt>
   13e78:	b	13c78 <main@@Base+0x10e8>
   13e7c:	ldr	r0, [sp, #284]	; 0x11c
   13e80:	bl	184cc <raspi_gps_shutdown@@Base>
   13e84:	b	13c6c <main@@Base+0x10dc>
   13e88:	ldr	r3, [pc, #-1100]	; 13a44 <main@@Base+0xeb4>
   13e8c:	mov	r1, #1
   13e90:	ldr	r0, [pc, #-1180]	; 139fc <main@@Base+0xe6c>
   13e94:	mov	r2, #13
   13e98:	ldr	r3, [r5, r3]
   13e9c:	add	r0, pc, r0
   13ea0:	ldr	r3, [r3]
   13ea4:	bl	128ec <fwrite@plt>
   13ea8:	b	13bb4 <main@@Base+0x1024>
   13eac:	ldr	r3, [pc, #-1136]	; 13a44 <main@@Base+0xeb4>
   13eb0:	mov	r1, #1
   13eb4:	ldr	r0, [pc, #-1212]	; 13a00 <main@@Base+0xe70>
   13eb8:	mov	r2, #53	; 0x35
   13ebc:	ldr	r7, [r5, r3]
   13ec0:	add	r0, pc, r0
   13ec4:	ldr	r3, [r7]
   13ec8:	bl	128ec <fwrite@plt>
   13ecc:	ldr	r0, [pc, #-1232]	; 13a04 <main@@Base+0xe74>
   13ed0:	ldr	r3, [r7]
   13ed4:	mov	r1, #1
   13ed8:	mov	r2, #23
   13edc:	add	r0, pc, r0
   13ee0:	bl	128ec <fwrite@plt>
   13ee4:	b	13b50 <main@@Base+0xfc0>
   13ee8:	ldr	r3, [sl]
   13eec:	cmp	r3, #1
   13ef0:	bls	13cc4 <main@@Base+0x1134>
   13ef4:	ldr	ip, [sp, #272]	; 0x110
   13ef8:	mov	r0, sl
   13efc:	ldr	r3, [pc, #-1276]	; 13a08 <main@@Base+0xe78>
   13f00:	mov	r1, #2
   13f04:	ldr	r2, [pc, #-1280]	; 13a0c <main@@Base+0xe7c>
   13f08:	add	r3, pc, r3
   13f0c:	str	ip, [sp]
   13f10:	add	r2, pc, r2
   13f14:	add	r3, r3, #112	; 0x70
   13f18:	bl	12754 <vcos_log_impl@plt>
   13f1c:	b	13cc4 <main@@Base+0x1134>
   13f20:	ldr	r0, [pc, #-1252]	; 13a44 <main@@Base+0xeb4>
   13f24:	mov	r1, #1
   13f28:	ldr	r2, [pc, #-1312]	; 13a10 <main@@Base+0xe80>
   13f2c:	ldr	r3, [sp, #904]	; 0x388
   13f30:	ldr	r0, [r5, r0]
   13f34:	add	r2, pc, r2
   13f38:	ldr	r0, [r0]
   13f3c:	bl	12a6c <__fprintf_chk@plt>
   13f40:	mov	r3, #0
   13f44:	str	r3, [sp, #908]	; 0x38c
   13f48:	b	13d00 <main@@Base+0x1170>
   13f4c:	ldr	r3, [sp, #848]	; 0x350
   13f50:	mov	r7, fp
   13f54:	ldr	ip, [pc, #-1352]	; 13a14 <main@@Base+0xe84>
   13f58:	mov	r9, sl
   13f5c:	add	ip, pc, ip
   13f60:	str	ip, [sp, #36]	; 0x24
   13f64:	ldr	ip, [pc, #-1364]	; 13a18 <main@@Base+0xe88>
   13f68:	ldr	r0, [r3]
   13f6c:	add	ip, pc, ip
   13f70:	str	ip, [sp, #40]	; 0x28
   13f74:	bl	128f8 <mmal_queue_length@plt>
   13f78:	mov	r8, r0
   13f7c:	b	13fb8 <main@@Base+0x1428>
   13f80:	mov	r1, ip
   13f84:	ldr	r0, [sp, #28]
   13f88:	bl	12784 <mmal_port_send_buffer@plt>
   13f8c:	cmp	r0, #0
   13f90:	beq	13fb4 <main@@Base+0x1424>
   13f94:	ldr	r3, [sl]
   13f98:	cmp	r3, #1
   13f9c:	bls	13fb4 <main@@Base+0x1424>
   13fa0:	mov	r0, r9
   13fa4:	mov	r1, #2
   13fa8:	ldr	r2, [sp, #40]	; 0x28
   13fac:	mov	r3, r7
   13fb0:	bl	12754 <vcos_log_impl@plt>
   13fb4:	add	r7, r7, #1
   13fb8:	cmp	r7, r8
   13fbc:	bge	14000 <main@@Base+0x1470>
   13fc0:	ldr	r3, [sp, #848]	; 0x350
   13fc4:	ldr	r0, [r3]
   13fc8:	bl	12a9c <mmal_queue_get@plt>
   13fcc:	subs	ip, r0, #0
   13fd0:	bne	13f80 <main@@Base+0x13f0>
   13fd4:	ldr	r3, [sl]
   13fd8:	cmp	r3, #1
   13fdc:	bls	13f80 <main@@Base+0x13f0>
   13fe0:	mov	r0, r9
   13fe4:	mov	r1, #2
   13fe8:	ldr	r2, [sp, #36]	; 0x24
   13fec:	mov	r3, r7
   13ff0:	str	ip, [sp, #20]
   13ff4:	bl	12754 <vcos_log_impl@plt>
   13ff8:	ldr	ip, [sp, #20]
   13ffc:	b	13f80 <main@@Base+0x13f0>
   14000:	ldr	sl, [pc, #-1516]	; 13a1c <main@@Base+0xe8c>
   14004:	ldr	r7, [pc, #-1516]	; 13a20 <main@@Base+0xe90>
   14008:	ldr	ip, [pc, #-1516]	; 13a24 <main@@Base+0xe94>
   1400c:	add	sl, pc, sl
   14010:	add	r7, pc, r7
   14014:	str	r7, [sp, #40]	; 0x28
   14018:	add	ip, pc, ip
   1401c:	ldr	r7, [pc, #-1532]	; 13a28 <main@@Base+0xe98>
   14020:	str	ip, [sp, #44]	; 0x2c
   14024:	mov	r9, sl
   14028:	ldr	ip, [pc, #-1540]	; 13a2c <main@@Base+0xe9c>
   1402c:	add	r7, pc, r7
   14030:	str	r6, [sp, #36]	; 0x24
   14034:	add	ip, pc, ip
   14038:	str	r7, [sp, #48]	; 0x30
   1403c:	str	ip, [sp, #52]	; 0x34
   14040:	ldr	r2, [sp, #896]	; 0x380
   14044:	mov	r1, #17
   14048:	ldr	r0, [sp, #28]
   1404c:	movt	r1, #1
   14050:	rsbs	r2, r2, #1
   14054:	movcc	r2, #0
   14058:	str	r2, [sp, #896]	; 0x380
   1405c:	bl	12b74 <mmal_port_parameter_set_boolean@plt>
   14060:	ldr	r3, [sp, #284]	; 0x11c
   14064:	cmp	r3, #0
   14068:	beq	1409c <main@@Base+0x150c>
   1406c:	ldr	r3, [sp, #896]	; 0x380
   14070:	cmp	r3, #0
   14074:	ldr	r3, [pc, #-1592]	; 13a44 <main@@Base+0xeb4>
   14078:	ldrne	r0, [sp, #44]	; 0x2c
   1407c:	movne	r1, #1
   14080:	ldr	r3, [r5, r3]
   14084:	movne	r2, #23
   14088:	ldreq	r0, [sp, #40]	; 0x28
   1408c:	moveq	r1, #1
   14090:	moveq	r2, #22
   14094:	ldr	r3, [r3]
   14098:	bl	128ec <fwrite@plt>
   1409c:	bl	18210 <get_microseconds64@@Base>
   140a0:	mov	r2, #1000	; 0x3e8
   140a4:	mov	r3, #0
   140a8:	bl	19f94 <deg_to_str@@Base+0xf20>
   140ac:	ldrd	r6, [sl, #8]
   140b0:	mov	r2, r0
   140b4:	mov	r3, r1
   140b8:	mvn	r0, #0
   140bc:	mvn	r1, #0
   140c0:	cmp	r7, r1
   140c4:	cmpeq	r6, r0
   140c8:	beq	142c8 <main@@Base+0x1738>
   140cc:	ldrd	r0, [r9, #8]
   140d0:	cmp	r2, r0
   140d4:	sbcs	r7, r3, r1
   140d8:	movlt	r7, #1
   140dc:	blt	140ec <main@@Base+0x155c>
   140e0:	ldr	r7, [sp, #292]	; 0x124
   140e4:	rsbs	r7, r7, #1
   140e8:	movcc	r7, #0
   140ec:	ldr	r3, [sp, #308]	; 0x134
   140f0:	cmp	r3, #4
   140f4:	addls	pc, pc, r3, lsl #2
   140f8:	b	141e8 <main@@Base+0x1658>
   140fc:	b	1427c <main@@Base+0x16ec>
   14100:	b	14298 <main@@Base+0x1708>
   14104:	b	14220 <main@@Base+0x1690>
   14108:	b	14140 <main@@Base+0x15b0>
   1410c:	b	14110 <main@@Base+0x1580>
   14110:	mov	r6, #57600	; 0xe100
   14114:	movt	r6, #1525	; 0x5f5
   14118:	b	14130 <main@@Base+0x15a0>
   1411c:	mov	r1, r3
   14120:	mov	r0, r4
   14124:	str	r3, [sp, #72]	; 0x48
   14128:	str	r6, [sp, #76]	; 0x4c
   1412c:	bl	12814 <nanosleep@plt>
   14130:	ldr	r3, [sp, #864]	; 0x360
   14134:	cmp	r3, #0
   14138:	beq	1411c <main@@Base+0x158c>
   1413c:	b	141f0 <main@@Base+0x1660>
   14140:	add	r8, sp, #120	; 0x78
   14144:	mov	r0, r8
   14148:	bl	12a90 <sigemptyset@plt>
   1414c:	mov	r1, #10
   14150:	mov	r0, r8
   14154:	bl	12940 <sigaddset@plt>
   14158:	mov	r0, #0
   1415c:	mov	r1, r8
   14160:	mov	r2, r0
   14164:	bl	12910 <pthread_sigmask@plt>
   14168:	ldr	r3, [sp, #284]	; 0x11c
   1416c:	cmp	r3, #0
   14170:	beq	141a0 <main@@Base+0x1610>
   14174:	ldr	r3, [pc, #-1848]	; 13a44 <main@@Base+0xeb4>
   14178:	ldr	r2, [sp, #896]	; 0x380
   1417c:	ldr	r3, [r5, r3]
   14180:	cmp	r2, #0
   14184:	ldr	r0, [r3]
   14188:	beq	1434c <main@@Base+0x17bc>
   1418c:	ldr	r3, [pc, #-1892]	; 13a30 <main@@Base+0xea0>
   14190:	add	r3, pc, r3
   14194:	mov	r1, #1
   14198:	ldr	r2, [sp, #52]	; 0x34
   1419c:	bl	12a6c <__fprintf_chk@plt>
   141a0:	mov	r0, r8
   141a4:	mov	r1, r4
   141a8:	bl	12844 <sigwait@plt>
   141ac:	ldr	r3, [sp, #284]	; 0x11c
   141b0:	cmp	r3, #0
   141b4:	beq	141e8 <main@@Base+0x1658>
   141b8:	cmp	r0, #0
   141bc:	beq	141e8 <main@@Base+0x1658>
   141c0:	ldr	r3, [pc, #-1924]	; 13a44 <main@@Base+0xeb4>
   141c4:	ldr	r3, [r5, r3]
   141c8:	ldr	r8, [r3]
   141cc:	bl	12a00 <__errno_location@plt>
   141d0:	mov	r1, #1
   141d4:	ldr	r2, [sp, #48]	; 0x30
   141d8:	mov	r3, r0
   141dc:	mov	r0, r8
   141e0:	ldr	r3, [r3]
   141e4:	bl	12a6c <__fprintf_chk@plt>
   141e8:	cmp	r7, #0
   141ec:	bne	14040 <main@@Base+0x14b0>
   141f0:	ldr	r3, [sp, #284]	; 0x11c
   141f4:	cmp	r3, #0
   141f8:	beq	13d90 <main@@Base+0x1200>
   141fc:	ldr	r3, [pc, #-1984]	; 13a44 <main@@Base+0xeb4>
   14200:	mov	r1, #1
   14204:	ldr	r0, [pc, #-2008]	; 13a34 <main@@Base+0xea4>
   14208:	mov	r2, #17
   1420c:	ldr	r3, [r5, r3]
   14210:	add	r0, pc, r0
   14214:	ldr	r3, [r3]
   14218:	bl	128ec <fwrite@plt>
   1421c:	b	13ba0 <main@@Base+0x1010>
   14220:	ldr	r3, [sp, #284]	; 0x11c
   14224:	cmp	r3, #0
   14228:	beq	1425c <main@@Base+0x16cc>
   1422c:	ldr	r3, [pc, #-2032]	; 13a44 <main@@Base+0xeb4>
   14230:	ldr	r2, [sp, #896]	; 0x380
   14234:	ldr	r3, [r5, r3]
   14238:	cmp	r2, #0
   1423c:	ldr	r0, [r3]
   14240:	beq	14358 <main@@Base+0x17c8>
   14244:	ldr	r3, [pc, #-2068]	; 13a38 <main@@Base+0xea8>
   14248:	add	r3, pc, r3
   1424c:	ldr	r2, [pc, #-2072]	; 13a3c <main@@Base+0xeac>
   14250:	mov	r1, #1
   14254:	add	r2, pc, r2
   14258:	bl	12a6c <__fprintf_chk@plt>
   1425c:	ldr	r3, [pc, #-2084]	; 13a40 <main@@Base+0xeb0>
   14260:	ldr	r3, [r5, r3]
   14264:	ldr	r0, [r3]
   14268:	bl	12868 <_IO_getc@plt>
   1426c:	and	r0, r0, #223	; 0xdf
   14270:	cmp	r0, #88	; 0x58
   14274:	beq	141f0 <main@@Base+0x1660>
   14278:	b	141e8 <main@@Base+0x1658>
   1427c:	ldr	r1, [sp, #292]	; 0x124
   14280:	ldr	r6, [sp, #36]	; 0x24
   14284:	cmp	r1, #0
   14288:	beq	141f0 <main@@Base+0x1660>
   1428c:	add	r0, r6, #616	; 0x268
   14290:	bl	19c6c <deg_to_str@@Base+0xbf8>
   14294:	b	141f0 <main@@Base+0x1660>
   14298:	ldr	r3, [sp, #896]	; 0x380
   1429c:	cmp	r3, #0
   142a0:	beq	14300 <main@@Base+0x1770>
   142a4:	ldr	r1, [sp, #312]	; 0x138
   142a8:	cmp	r1, #0
   142ac:	beq	141e8 <main@@Base+0x1658>
   142b0:	ldr	ip, [sp, #36]	; 0x24
   142b4:	add	r0, ip, #616	; 0x268
   142b8:	bl	19c6c <deg_to_str@@Base+0xbf8>
   142bc:	cmp	r0, #0
   142c0:	bne	141f0 <main@@Base+0x1660>
   142c4:	b	141e8 <main@@Base+0x1658>
   142c8:	ldr	ip, [sp, #292]	; 0x124
   142cc:	adds	r0, r2, ip
   142d0:	adc	r1, r3, ip, asr #31
   142d4:	strd	r0, [sl, #8]
   142d8:	b	140cc <main@@Base+0x153c>
   142dc:	ldr	r3, [pc, #-2208]	; 13a44 <main@@Base+0xeb4>
   142e0:	mov	r1, #1
   142e4:	ldr	r0, [pc, #-2212]	; 13a48 <main@@Base+0xeb8>
   142e8:	mov	r2, #27
   142ec:	ldr	r3, [r5, r3]
   142f0:	add	r0, pc, r0
   142f4:	ldr	r3, [r3]
   142f8:	bl	128ec <fwrite@plt>
   142fc:	b	13db0 <main@@Base+0x1220>
   14300:	ldr	r1, [sp, #316]	; 0x13c
   14304:	cmp	r1, #0
   14308:	beq	141e8 <main@@Base+0x1658>
   1430c:	ldr	r6, [sp, #36]	; 0x24
   14310:	add	r0, r6, #616	; 0x268
   14314:	bl	19c6c <deg_to_str@@Base+0xbf8>
   14318:	b	142bc <main@@Base+0x172c>
   1431c:	ldr	r0, [sp, #292]	; 0x124
   14320:	cmp	r0, #0
   14324:	bne	1438c <main@@Base+0x17fc>
   14328:	mov	r5, #57600	; 0xe100
   1432c:	movt	r5, #1525	; 0x5f5
   14330:	mov	r6, r0
   14334:	mov	r0, r4
   14338:	mov	r1, #0
   1433c:	str	r6, [sp, #72]	; 0x48
   14340:	str	r5, [sp, #76]	; 0x4c
   14344:	bl	12814 <nanosleep@plt>
   14348:	b	14334 <main@@Base+0x17a4>
   1434c:	ldr	r3, [pc, #-2312]	; 13a4c <main@@Base+0xebc>
   14350:	add	r3, pc, r3
   14354:	b	14194 <main@@Base+0x1604>
   14358:	ldr	r3, [pc, #-2320]	; 13a50 <main@@Base+0xec0>
   1435c:	add	r3, pc, r3
   14360:	b	1424c <main@@Base+0x16bc>
   14364:	ldr	r3, [sl]
   14368:	cmp	r3, #1
   1436c:	bls	13a7c <main@@Base+0xeec>
   14370:	ldr	r2, [pc, #-2340]	; 13a54 <main@@Base+0xec4>
   14374:	mov	r0, sl
   14378:	ldr	r3, [r8, #4]
   1437c:	mov	r1, #2
   14380:	add	r2, pc, r2
   14384:	bl	12754 <vcos_log_impl@plt>
   14388:	b	13a7c <main@@Base+0xeec>
   1438c:	bl	19184 <deg_to_str@@Base+0x110>
   14390:	b	13ba0 <main@@Base+0x1010>

00014394 <_start@@Base>:
   14394:	mov	fp, #0
   14398:	mov	lr, #0
   1439c:	pop	{r1}		; (ldr r1, [sp], #4)
   143a0:	mov	r2, sp
   143a4:	push	{r2}		; (str r2, [sp, #-4]!)
   143a8:	push	{r0}		; (str r0, [sp, #-4]!)
   143ac:	ldr	ip, [pc, #16]	; 143c4 <_start@@Base+0x30>
   143b0:	push	{ip}		; (str ip, [sp, #-4]!)
   143b4:	ldr	r0, [pc, #12]	; 143c8 <_start@@Base+0x34>
   143b8:	ldr	r3, [pc, #12]	; 143cc <_start@@Base+0x38>
   143bc:	bl	1294c <__libc_start_main@plt>
   143c0:	bl	12b44 <abort@plt>
   143c4:	andeq	sl, r1, r4, lsl #23
   143c8:	muleq	r1, r0, fp
   143cc:	andeq	sl, r1, r0, lsr #22
   143d0:	ldr	r3, [pc, #20]	; 143ec <_start@@Base+0x58>
   143d4:	ldr	r2, [pc, #20]	; 143f0 <_start@@Base+0x5c>
   143d8:	add	r3, pc, r3
   143dc:	ldr	r2, [r3, r2]
   143e0:	cmp	r2, #0
   143e4:	bxeq	lr
   143e8:	b	129a0 <__gmon_start__@plt>
   143ec:	andeq	r9, r1, r0, lsr #24
   143f0:	andeq	r0, r0, ip, lsl #3
   143f4:	push	{r3, lr}
   143f8:	movw	r0, #59316	; 0xe7b4
   143fc:	ldr	r3, [pc, #36]	; 14428 <_start@@Base+0x94>
   14400:	movt	r0, #2
   14404:	rsb	r3, r0, r3
   14408:	cmp	r3, #6
   1440c:	popls	{r3, pc}
   14410:	movw	r3, #0
   14414:	movt	r3, #0
   14418:	cmp	r3, #0
   1441c:	popeq	{r3, pc}
   14420:	blx	r3
   14424:	pop	{r3, pc}
   14428:			; <UNDEFINED> instruction: 0x0002e7b7
   1442c:	push	{r3, lr}
   14430:	movw	r0, #59316	; 0xe7b4
   14434:	movw	r3, #59316	; 0xe7b4
   14438:	movt	r0, #2
   1443c:	movt	r3, #2
   14440:	rsb	r3, r0, r3
   14444:	asr	r3, r3, #2
   14448:	add	r3, r3, r3, lsr #31
   1444c:	asrs	r1, r3, #1
   14450:	popeq	{r3, pc}
   14454:	movw	r2, #0
   14458:	movt	r2, #0
   1445c:	cmp	r2, #0
   14460:	popeq	{r3, pc}
   14464:	blx	r2
   14468:	pop	{r3, pc}
   1446c:	push	{r4, lr}
   14470:	movw	r4, #59320	; 0xe7b8
   14474:	movt	r4, #2
   14478:	ldrb	r3, [r4]
   1447c:	cmp	r3, #0
   14480:	popne	{r4, pc}
   14484:	bl	143f4 <_start@@Base+0x60>
   14488:	mov	r3, #1
   1448c:	strb	r3, [r4]
   14490:	pop	{r4, pc}
   14494:	movw	r0, #56964	; 0xde84
   14498:	movt	r0, #2
   1449c:	push	{r3, lr}
   144a0:	ldr	r3, [r0]
   144a4:	cmp	r3, #0
   144a8:	beq	144c0 <_start@@Base+0x12c>
   144ac:	movw	r3, #0
   144b0:	movt	r3, #0
   144b4:	cmp	r3, #0
   144b8:	beq	144c0 <_start@@Base+0x12c>
   144bc:	blx	r3
   144c0:	pop	{r3, lr}
   144c4:	b	1442c <_start@@Base+0x98>
   144c8:	ldr	r3, [pc, #80]	; 14520 <_start@@Base+0x18c>
   144cc:	movw	ip, #31073	; 0x7961
   144d0:	movt	ip, #65534	; 0xfffe
   144d4:	add	r3, pc, r3
   144d8:	ldr	r3, [r3]
   144dc:	cmp	r3, ip
   144e0:	rsbeq	r3, r2, r0
   144e4:	add	r3, r2, r3
   144e8:	cmp	r3, r1
   144ec:	ble	1450c <_start@@Base+0x178>
   144f0:	ldr	r2, [pc, #44]	; 14524 <_start@@Base+0x190>
   144f4:	mov	r0, #0
   144f8:	movw	r3, #31073	; 0x7961
   144fc:	movt	r3, #65534	; 0xfffe
   14500:	add	r2, pc, r2
   14504:	str	r3, [r2]
   14508:	bx	lr
   1450c:	ldr	r2, [pc, #20]	; 14528 <_start@@Base+0x194>
   14510:	mov	r0, #1
   14514:	add	r2, pc, r2
   14518:	str	r3, [r2]
   1451c:	bx	lr
   14520:	ldrdeq	r9, [r1], -r0
   14524:	andeq	r9, r1, r4, lsr #25
   14528:	muleq	r1, r0, ip

0001452c <imagefx_mode_from_string@@Base>:
   1452c:	ldr	r1, [pc, #88]	; 1458c <imagefx_mode_from_string@@Base+0x60>
   14530:	mov	r2, #20
   14534:	push	{r4, lr}
   14538:	add	r1, pc, r1
   1453c:	mov	r4, r0
   14540:	bl	17198 <raspicli_map_xref@@Base>
   14544:	ldr	r2, [pc, #68]	; 14590 <imagefx_mode_from_string@@Base+0x64>
   14548:	add	r2, pc, r2
   1454c:	cmn	r0, #1
   14550:	popne	{r4, pc}
   14554:	ldr	r3, [pc, #56]	; 14594 <imagefx_mode_from_string@@Base+0x68>
   14558:	ldr	r0, [r2, r3]
   1455c:	ldr	r3, [r0]
   14560:	cmp	r3, #1
   14564:	bls	14584 <imagefx_mode_from_string@@Base+0x58>
   14568:	ldr	r2, [pc, #40]	; 14598 <imagefx_mode_from_string@@Base+0x6c>
   1456c:	mov	r3, r4
   14570:	mov	r1, #2
   14574:	add	r2, pc, r2
   14578:	bl	12754 <vcos_log_impl@plt>
   1457c:	mov	r0, #0
   14580:	pop	{r4, pc}
   14584:	mov	r0, #0
   14588:	pop	{r4, pc}
   1458c:	andeq	r9, r1, r0, ror ip
   14590:			; <UNDEFINED> instruction: 0x00019ab0
   14594:	andeq	r0, r0, r0, lsl #3
   14598:	ldrdeq	r6, [r0], -r8

0001459c <raspicamcontrol_parse_cmdline@@Base>:
   1459c:	push	{r4, r5, r6, r7, lr}
   145a0:	cmp	r1, #0
   145a4:	ldr	r4, [pc, #1284]	; 14ab0 <raspicamcontrol_parse_cmdline@@Base+0x514>
   145a8:	sub	sp, sp, #68	; 0x44
   145ac:	ldr	ip, [pc, #1280]	; 14ab4 <raspicamcontrol_parse_cmdline@@Base+0x518>
   145b0:	mov	r7, r0
   145b4:	add	r4, pc, r4
   145b8:	mov	r6, r2
   145bc:	ldr	r5, [r4, ip]
   145c0:	ldr	ip, [r5]
   145c4:	str	ip, [sp, #60]	; 0x3c
   145c8:	beq	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   145cc:	ldr	r0, [pc, #1252]	; 14ab8 <raspicamcontrol_parse_cmdline@@Base+0x51c>
   145d0:	mov	r2, r1
   145d4:	add	r3, sp, #20
   145d8:	mov	r1, #29
   145dc:	add	r0, pc, r0
   145e0:	add	r0, r0, #160	; 0xa0
   145e4:	bl	16f68 <raspicli_get_command_id@@Base>
   145e8:	cmn	r0, #1
   145ec:	beq	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   145f0:	ldr	r3, [sp, #20]
   145f4:	cmp	r3, #0
   145f8:	ble	14604 <raspicamcontrol_parse_cmdline@@Base+0x68>
   145fc:	cmp	r6, #0
   14600:	beq	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   14604:	cmp	r0, #28
   14608:	addls	pc, pc, r0, lsl #2
   1460c:	b	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   14610:	b	14bd4 <raspicamcontrol_parse_cmdline@@Base+0x638>
   14614:	b	14bb8 <raspicamcontrol_parse_cmdline@@Base+0x61c>
   14618:	b	14bf0 <raspicamcontrol_parse_cmdline@@Base+0x654>
   1461c:	b	14b58 <raspicamcontrol_parse_cmdline@@Base+0x5bc>
   14620:	b	14b80 <raspicamcontrol_parse_cmdline@@Base+0x5e4>
   14624:	b	14b74 <raspicamcontrol_parse_cmdline@@Base+0x5d8>
   14628:	b	14b9c <raspicamcontrol_parse_cmdline@@Base+0x600>
   1462c:	b	14b2c <raspicamcontrol_parse_cmdline@@Base+0x590>
   14630:	b	14a7c <raspicamcontrol_parse_cmdline@@Base+0x4e0>
   14634:	b	14a68 <raspicamcontrol_parse_cmdline@@Base+0x4cc>
   14638:	b	14a40 <raspicamcontrol_parse_cmdline@@Base+0x4a4>
   1463c:	b	14a14 <raspicamcontrol_parse_cmdline@@Base+0x478>
   14640:	b	149f8 <raspicamcontrol_parse_cmdline@@Base+0x45c>
   14644:	b	149ec <raspicamcontrol_parse_cmdline@@Base+0x450>
   14648:	b	149e0 <raspicamcontrol_parse_cmdline@@Base+0x444>
   1464c:	b	14920 <raspicamcontrol_parse_cmdline@@Base+0x384>
   14650:	b	14904 <raspicamcontrol_parse_cmdline@@Base+0x368>
   14654:	b	148a8 <raspicamcontrol_parse_cmdline@@Base+0x30c>
   14658:	b	1487c <raspicamcontrol_parse_cmdline@@Base+0x2e0>
   1465c:	b	14870 <raspicamcontrol_parse_cmdline@@Base+0x2d4>
   14660:	b	147dc <raspicamcontrol_parse_cmdline@@Base+0x240>
   14664:	b	147b0 <raspicamcontrol_parse_cmdline@@Base+0x214>
   14668:	b	147a4 <raspicamcontrol_parse_cmdline@@Base+0x208>
   1466c:	b	14798 <raspicamcontrol_parse_cmdline@@Base+0x1fc>
   14670:	b	1475c <raspicamcontrol_parse_cmdline@@Base+0x1c0>
   14674:	b	14730 <raspicamcontrol_parse_cmdline@@Base+0x194>
   14678:	b	146f0 <raspicamcontrol_parse_cmdline@@Base+0x154>
   1467c:	b	146b0 <raspicamcontrol_parse_cmdline@@Base+0x114>
   14680:	b	146a4 <raspicamcontrol_parse_cmdline@@Base+0x108>
   14684:	mov	r3, #0
   14688:	ldr	r2, [sp, #60]	; 0x3c
   1468c:	mov	r0, r3
   14690:	ldr	r3, [r5]
   14694:	cmp	r2, r3
   14698:	bne	14d64 <raspicamcontrol_parse_cmdline@@Base+0x7c8>
   1469c:	add	sp, sp, #68	; 0x44
   146a0:	pop	{r4, r5, r6, r7, pc}
   146a4:	mov	r3, #1
   146a8:	str	r3, [r7, #476]	; 0x1dc
   146ac:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   146b0:	ldr	r1, [pc, #1028]	; 14abc <raspicamcontrol_parse_cmdline@@Base+0x520>
   146b4:	mov	r0, r6
   146b8:	add	r2, sp, #48	; 0x30
   146bc:	add	r1, pc, r1
   146c0:	bl	12acc <sscanf@plt>
   146c4:	cmp	r0, #1
   146c8:	bne	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   146cc:	vldr	d7, [sp, #48]	; 0x30
   146d0:	vldr	d6, [pc, #976]	; 14aa8 <raspicamcontrol_parse_cmdline@@Base+0x50c>
   146d4:	vcmpe.f64	d7, d6
   146d8:	vmrs	APSR_nzcv, fpscr
   146dc:	bgt	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   146e0:	vcvt.f32.f64	s14, d7
   146e4:	mov	r3, #2
   146e8:	vstr	s14, [r7, #472]	; 0x1d8
   146ec:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   146f0:	ldr	r1, [pc, #968]	; 14ac0 <raspicamcontrol_parse_cmdline@@Base+0x524>
   146f4:	mov	r0, r6
   146f8:	add	r2, sp, #48	; 0x30
   146fc:	add	r1, pc, r1
   14700:	bl	12acc <sscanf@plt>
   14704:	cmp	r0, #1
   14708:	bne	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   1470c:	vmov.f64	d6, #48	; 0x41800000  16.0
   14710:	vldr	d7, [sp, #48]	; 0x30
   14714:	vcmpe.f64	d7, d6
   14718:	vmrs	APSR_nzcv, fpscr
   1471c:	bgt	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   14720:	vcvt.f32.f64	s14, d7
   14724:	mov	r3, #2
   14728:	vstr	s14, [r7, #468]	; 0x1d4
   1472c:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14730:	ldr	r1, [pc, #908]	; 14ac4 <raspicamcontrol_parse_cmdline@@Base+0x528>
   14734:	mov	r0, r6
   14738:	mov	r2, #4
   1473c:	add	r1, pc, r1
   14740:	add	r1, r1, #844	; 0x34c
   14744:	bl	17198 <raspicli_map_xref@@Base>
   14748:	cmn	r0, #1
   1474c:	beq	14d1c <raspicamcontrol_parse_cmdline@@Base+0x780>
   14750:	str	r0, [r7, #96]	; 0x60
   14754:	mov	r3, #2
   14758:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   1475c:	ldr	r1, [pc, #868]	; 14ac8 <raspicamcontrol_parse_cmdline@@Base+0x52c>
   14760:	add	r2, r7, #432	; 0x1b0
   14764:	add	r3, r7, #436	; 0x1b4
   14768:	mov	r0, r6
   1476c:	stm	sp, {r2, r3}
   14770:	add	r1, pc, r1
   14774:	add	r2, r7, #440	; 0x1b8
   14778:	add	r3, r7, #444	; 0x1bc
   1477c:	str	r2, [sp, #8]
   14780:	add	r2, r7, #424	; 0x1a8
   14784:	str	r3, [sp, #12]
   14788:	add	r3, r7, #428	; 0x1ac
   1478c:	bl	12acc <sscanf@plt>
   14790:	mov	r3, #2
   14794:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14798:	mov	r3, #1
   1479c:	str	r3, [r7, #464]	; 0x1d0
   147a0:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   147a4:	mov	r3, #1
   147a8:	str	r3, [r7, #460]	; 0x1cc
   147ac:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   147b0:	ldr	r1, [pc, #788]	; 14acc <raspicamcontrol_parse_cmdline@@Base+0x530>
   147b4:	mov	r0, r6
   147b8:	mov	r2, #3
   147bc:	add	r1, pc, r1
   147c0:	add	r1, r1, #1020	; 0x3fc
   147c4:	bl	17198 <raspicli_map_xref@@Base>
   147c8:	cmn	r0, #1
   147cc:	beq	14ce8 <raspicamcontrol_parse_cmdline@@Base+0x74c>
   147d0:	str	r0, [r7, #456]	; 0x1c8
   147d4:	mov	r3, #2
   147d8:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   147dc:	ldr	r1, [pc, #748]	; 14ad0 <raspicamcontrol_parse_cmdline@@Base+0x534>
   147e0:	mov	r0, r6
   147e4:	add	r2, sp, #48	; 0x30
   147e8:	add	r3, sp, #40	; 0x28
   147ec:	add	r1, pc, r1
   147f0:	bl	12acc <sscanf@plt>
   147f4:	cmp	r0, #1
   147f8:	beq	14d50 <raspicamcontrol_parse_cmdline@@Base+0x7b4>
   147fc:	ldr	r3, [r7, #164]	; 0xa4
   14800:	add	r1, r7, #168	; 0xa8
   14804:	add	r2, r6, #1
   14808:	orr	r3, r3, #1
   1480c:	str	r3, [r7, #164]	; 0xa4
   14810:	ldrb	r3, [r6]
   14814:	cmp	r3, #0
   14818:	beq	14c0c <raspicamcontrol_parse_cmdline@@Base+0x670>
   1481c:	add	r7, r7, #420	; 0x1a4
   14820:	add	r7, r7, #3
   14824:	b	1484c <raspicamcontrol_parse_cmdline@@Base+0x2b0>
   14828:	strb	r3, [r1], #1
   1482c:	add	r0, r2, #1
   14830:	ldrb	r3, [r2]
   14834:	cmp	r3, #0
   14838:	beq	14c0c <raspicamcontrol_parse_cmdline@@Base+0x670>
   1483c:	cmp	r1, r7
   14840:	beq	14c0c <raspicamcontrol_parse_cmdline@@Base+0x670>
   14844:	mov	r6, r2
   14848:	mov	r2, r0
   1484c:	cmp	r3, #92	; 0x5c
   14850:	bne	14828 <raspicamcontrol_parse_cmdline@@Base+0x28c>
   14854:	ldrb	r0, [r6, #1]
   14858:	cmp	r0, #0
   1485c:	beq	14828 <raspicamcontrol_parse_cmdline@@Base+0x28c>
   14860:	cmp	r0, #110	; 0x6e
   14864:	addeq	r2, r6, #2
   14868:	moveq	r3, #10
   1486c:	b	14828 <raspicamcontrol_parse_cmdline@@Base+0x28c>
   14870:	mov	r3, #1
   14874:	str	r3, [r7, #160]	; 0xa0
   14878:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   1487c:	ldr	r1, [pc, #592]	; 14ad4 <raspicamcontrol_parse_cmdline@@Base+0x538>
   14880:	mov	r0, r6
   14884:	mov	r2, #4
   14888:	add	r1, pc, r1
   1488c:	add	r1, r1, #988	; 0x3dc
   14890:	bl	17198 <raspicli_map_xref@@Base>
   14894:	cmn	r0, #1
   14898:	beq	14c4c <raspicamcontrol_parse_cmdline@@Base+0x6b0>
   1489c:	str	r0, [r7, #156]	; 0x9c
   148a0:	mov	r3, #2
   148a4:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   148a8:	ldr	r1, [pc, #552]	; 14ad8 <raspicamcontrol_parse_cmdline@@Base+0x53c>
   148ac:	mov	r0, r6
   148b0:	add	r2, sp, #40	; 0x28
   148b4:	add	r3, sp, #48	; 0x30
   148b8:	add	r1, pc, r1
   148bc:	bl	12acc <sscanf@plt>
   148c0:	cmp	r0, #2
   148c4:	bne	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   148c8:	vmov.f64	d7, #32	; 0x41000000  8.0
   148cc:	vldr	d6, [sp, #40]	; 0x28
   148d0:	vcmpe.f64	d6, d7
   148d4:	vmrs	APSR_nzcv, fpscr
   148d8:	bgt	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   148dc:	vldr	d5, [sp, #48]	; 0x30
   148e0:	vcmpe.f64	d5, d7
   148e4:	vmrs	APSR_nzcv, fpscr
   148e8:	bgt	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   148ec:	vcvt.f32.f64	s12, d6
   148f0:	mov	r3, r0
   148f4:	vcvt.f32.f64	s10, d5
   148f8:	vstr	s12, [r7, #148]	; 0x94
   148fc:	vstr	s10, [r7, #152]	; 0x98
   14900:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14904:	ldr	r1, [pc, #464]	; 14adc <raspicamcontrol_parse_cmdline@@Base+0x540>
   14908:	mov	r0, r6
   1490c:	add	r2, r7, #144	; 0x90
   14910:	add	r1, pc, r1
   14914:	bl	12acc <sscanf@plt>
   14918:	mov	r3, #2
   1491c:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14920:	ldr	r1, [pc, #440]	; 14ae0 <raspicamcontrol_parse_cmdline@@Base+0x544>
   14924:	add	r3, sp, #40	; 0x28
   14928:	mov	r0, r6
   1492c:	str	r3, [sp]
   14930:	add	r2, sp, #24
   14934:	add	r3, sp, #48	; 0x30
   14938:	add	r1, pc, r1
   1493c:	str	r3, [sp, #4]
   14940:	add	r3, sp, #32
   14944:	bl	12acc <sscanf@plt>
   14948:	cmp	r0, #4
   1494c:	bne	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   14950:	vmov.f64	d7, #112	; 0x3f800000  1.0
   14954:	vldr	d6, [sp, #24]
   14958:	vcmpe.f64	d6, d7
   1495c:	vmrs	APSR_nzcv, fpscr
   14960:	bgt	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   14964:	vldr	d5, [sp, #32]
   14968:	vcmpe.f64	d5, d7
   1496c:	vmrs	APSR_nzcv, fpscr
   14970:	bgt	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   14974:	vldr	d3, [sp, #40]	; 0x28
   14978:	vcmpe.f64	d3, d7
   1497c:	vmrs	APSR_nzcv, fpscr
   14980:	bgt	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   14984:	vldr	d4, [sp, #48]	; 0x30
   14988:	vcmpe.f64	d4, d7
   1498c:	vmrs	APSR_nzcv, fpscr
   14990:	bgt	14684 <raspicamcontrol_parse_cmdline@@Base+0xe8>
   14994:	vadd.f64	d2, d6, d3
   14998:	vstr	d6, [r7, #112]	; 0x70
   1499c:	vstr	d5, [r7, #120]	; 0x78
   149a0:	mov	r3, #2
   149a4:	vcmpe.f64	d2, d7
   149a8:	vmrs	APSR_nzcv, fpscr
   149ac:	vsubgt.f64	d7, d7, d6
   149b0:	vadd.f64	d2, d5, d4
   149b4:	vstrgt	d7, [sp, #40]	; 0x28
   149b8:	vmovgt.f64	d3, d7
   149bc:	vstr	d3, [r7, #128]	; 0x80
   149c0:	vmov.f64	d7, #112	; 0x3f800000  1.0
   149c4:	vcmpe.f64	d2, d7
   149c8:	vmrs	APSR_nzcv, fpscr
   149cc:	vsubgt.f64	d7, d7, d5
   149d0:	vmovgt.f64	d4, d7
   149d4:	vstrgt	d7, [sp, #48]	; 0x30
   149d8:	vstr	d4, [r7, #136]	; 0x88
   149dc:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   149e0:	mov	r3, #1
   149e4:	str	r3, [r7, #108]	; 0x6c
   149e8:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   149ec:	mov	r3, #1
   149f0:	str	r3, [r7, #104]	; 0x68
   149f4:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   149f8:	ldr	r1, [pc, #228]	; 14ae4 <raspicamcontrol_parse_cmdline@@Base+0x548>
   149fc:	mov	r0, r6
   14a00:	add	r2, r7, #100	; 0x64
   14a04:	add	r1, pc, r1
   14a08:	bl	12acc <sscanf@plt>
   14a0c:	mov	r3, #2
   14a10:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14a14:	ldr	r1, [pc, #204]	; 14ae8 <raspicamcontrol_parse_cmdline@@Base+0x54c>
   14a18:	mov	r0, r6
   14a1c:	mov	r2, #4
   14a20:	add	r1, pc, r1
   14a24:	add	r1, r1, #956	; 0x3bc
   14a28:	bl	17198 <raspicli_map_xref@@Base>
   14a2c:	cmn	r0, #1
   14a30:	beq	14c80 <raspicamcontrol_parse_cmdline@@Base+0x6e4>
   14a34:	str	r0, [r7, #32]
   14a38:	mov	r3, #2
   14a3c:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14a40:	ldr	r1, [pc, #164]	; 14aec <raspicamcontrol_parse_cmdline@@Base+0x550>
   14a44:	add	r2, r7, #88	; 0x58
   14a48:	add	r3, r7, #92	; 0x5c
   14a4c:	mov	r0, r6
   14a50:	add	r1, pc, r1
   14a54:	bl	12acc <sscanf@plt>
   14a58:	mov	r2, #1
   14a5c:	mov	r3, #2
   14a60:	str	r2, [r7, #84]	; 0x54
   14a64:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14a68:	mov	r0, r6
   14a6c:	bl	1452c <imagefx_mode_from_string@@Base>
   14a70:	mov	r3, #2
   14a74:	str	r0, [r7, #40]	; 0x28
   14a78:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14a7c:	ldr	r1, [pc, #108]	; 14af0 <raspicamcontrol_parse_cmdline@@Base+0x554>
   14a80:	mov	r0, r6
   14a84:	mov	r2, #10
   14a88:	add	r1, pc, r1
   14a8c:	add	r1, r1, #876	; 0x36c
   14a90:	bl	17198 <raspicli_map_xref@@Base>
   14a94:	cmn	r0, #1
   14a98:	beq	14cb4 <raspicamcontrol_parse_cmdline@@Base+0x718>
   14a9c:	str	r0, [r7, #36]	; 0x24
   14aa0:	mov	r3, #2
   14aa4:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14aa8:	andeq	r0, r0, r0
   14aac:	subsmi	r0, r0, r0
   14ab0:	andeq	r9, r1, r4, asr #20
   14ab4:	andeq	r0, r0, r4, lsl #3
   14ab8:	andeq	r9, r1, ip, asr #23
   14abc:	andeq	r6, r0, ip, lsr #12
   14ac0:	andeq	r6, r0, ip, ror #11
   14ac4:	andeq	r9, r1, ip, ror #20
   14ac8:	muleq	r0, ip, r5
   14acc:	andeq	r9, r1, ip, ror #19
   14ad0:	andeq	r6, r0, r8, lsl r5
   14ad4:	andeq	r9, r1, r0, lsr #18
   14ad8:	andeq	r6, r0, ip, lsr #8
   14adc:	andeq	r8, r0, r8, lsl #12
   14ae0:	andeq	r6, r0, r4, lsr #7
   14ae4:	andeq	r8, r0, r4, lsl r5
   14ae8:	andeq	r9, r1, r8, lsl #15
   14aec:	andeq	r6, r0, r8, ror #4
   14af0:	andeq	r9, r1, r0, lsr #14
   14af4:	andeq	r9, r1, r0, ror r6
   14af8:			; <UNDEFINED> instruction: 0x000083b4
   14afc:	andeq	r8, r0, ip, lsl #7
   14b00:	andeq	r8, r0, r0, ror r3
   14b04:	andeq	r8, r0, r4, asr r3
   14b08:	andeq	r8, r0, r8, lsr r3
   14b0c:	andeq	r8, r0, ip, lsl r3
   14b10:	andeq	r6, r0, r8, lsr #32
   14b14:	andeq	r6, r0, ip, ror r0
   14b18:	andeq	r6, r0, ip, lsl r0
   14b1c:	andeq	r5, r0, r8, asr #31
   14b20:			; <UNDEFINED> instruction: 0x00005fb4
   14b24:	andeq	r0, r0, r0, lsl #3
   14b28:	andeq	r5, r0, r0, asr #30
   14b2c:	ldr	r1, [pc, #-64]	; 14af4 <raspicamcontrol_parse_cmdline@@Base+0x558>
   14b30:	mov	r0, r6
   14b34:	mov	r2, #13
   14b38:	add	r1, pc, r1
   14b3c:	add	r1, r1, #740	; 0x2e4
   14b40:	bl	17198 <raspicli_map_xref@@Base>
   14b44:	cmn	r0, #1
   14b48:	beq	14c18 <raspicamcontrol_parse_cmdline@@Base+0x67c>
   14b4c:	str	r0, [r7, #28]
   14b50:	mov	r3, #2
   14b54:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14b58:	ldr	r1, [pc, #-104]	; 14af8 <raspicamcontrol_parse_cmdline@@Base+0x55c>
   14b5c:	mov	r0, r6
   14b60:	add	r2, r7, #12
   14b64:	add	r1, pc, r1
   14b68:	bl	12acc <sscanf@plt>
   14b6c:	mov	r3, #2
   14b70:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14b74:	mov	r3, #1
   14b78:	str	r3, [r7, #20]
   14b7c:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14b80:	ldr	r1, [pc, #-140]	; 14afc <raspicamcontrol_parse_cmdline@@Base+0x560>
   14b84:	mov	r0, r6
   14b88:	add	r2, r7, #16
   14b8c:	add	r1, pc, r1
   14b90:	bl	12acc <sscanf@plt>
   14b94:	mov	r3, #2
   14b98:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14b9c:	ldr	r1, [pc, #-164]	; 14b00 <raspicamcontrol_parse_cmdline@@Base+0x564>
   14ba0:	mov	r0, r6
   14ba4:	add	r2, r7, #24
   14ba8:	add	r1, pc, r1
   14bac:	bl	12acc <sscanf@plt>
   14bb0:	mov	r3, #2
   14bb4:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14bb8:	ldr	r1, [pc, #-188]	; 14b04 <raspicamcontrol_parse_cmdline@@Base+0x568>
   14bbc:	mov	r0, r6
   14bc0:	add	r2, r7, #4
   14bc4:	add	r1, pc, r1
   14bc8:	bl	12acc <sscanf@plt>
   14bcc:	mov	r3, #2
   14bd0:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14bd4:	ldr	r1, [pc, #-212]	; 14b08 <raspicamcontrol_parse_cmdline@@Base+0x56c>
   14bd8:	mov	r0, r6
   14bdc:	mov	r2, r7
   14be0:	add	r1, pc, r1
   14be4:	bl	12acc <sscanf@plt>
   14be8:	mov	r3, #2
   14bec:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14bf0:	ldr	r1, [pc, #-236]	; 14b0c <raspicamcontrol_parse_cmdline@@Base+0x570>
   14bf4:	mov	r0, r6
   14bf8:	add	r2, r7, #8
   14bfc:	add	r1, pc, r1
   14c00:	bl	12acc <sscanf@plt>
   14c04:	mov	r3, #2
   14c08:	b	14688 <raspicamcontrol_parse_cmdline@@Base+0xec>
   14c0c:	mov	r3, #0
   14c10:	strb	r3, [r1]
   14c14:	b	147d4 <raspicamcontrol_parse_cmdline@@Base+0x238>
   14c18:	ldr	r3, [pc, #-252]	; 14b24 <raspicamcontrol_parse_cmdline@@Base+0x588>
   14c1c:	ldr	r0, [r4, r3]
   14c20:	ldr	r3, [r0]
   14c24:	cmp	r3, #1
   14c28:	movls	r0, #1
   14c2c:	bls	14b4c <raspicamcontrol_parse_cmdline@@Base+0x5b0>
   14c30:	ldr	r2, [pc, #-296]	; 14b10 <raspicamcontrol_parse_cmdline@@Base+0x574>
   14c34:	mov	r3, r6
   14c38:	mov	r1, #2
   14c3c:	add	r2, pc, r2
   14c40:	bl	12754 <vcos_log_impl@plt>
   14c44:	mov	r0, #1
   14c48:	b	14b4c <raspicamcontrol_parse_cmdline@@Base+0x5b0>
   14c4c:	ldr	r3, [pc, #-304]	; 14b24 <raspicamcontrol_parse_cmdline@@Base+0x588>
   14c50:	ldr	r0, [r4, r3]
   14c54:	ldr	r3, [r0]
   14c58:	cmp	r3, #1
   14c5c:	movls	r0, #0
   14c60:	bls	1489c <raspicamcontrol_parse_cmdline@@Base+0x300>
   14c64:	ldr	r2, [pc, #-344]	; 14b14 <raspicamcontrol_parse_cmdline@@Base+0x578>
   14c68:	mov	r3, r6
   14c6c:	mov	r1, #2
   14c70:	add	r2, pc, r2
   14c74:	bl	12754 <vcos_log_impl@plt>
   14c78:	mov	r0, #0
   14c7c:	b	1489c <raspicamcontrol_parse_cmdline@@Base+0x300>
   14c80:	ldr	r3, [pc, #-356]	; 14b24 <raspicamcontrol_parse_cmdline@@Base+0x588>
   14c84:	ldr	r0, [r4, r3]
   14c88:	ldr	r3, [r0]
   14c8c:	cmp	r3, #1
   14c90:	movls	r0, #0
   14c94:	bls	14a34 <raspicamcontrol_parse_cmdline@@Base+0x498>
   14c98:	ldr	r2, [pc, #-392]	; 14b18 <raspicamcontrol_parse_cmdline@@Base+0x57c>
   14c9c:	mov	r3, r6
   14ca0:	mov	r1, #2
   14ca4:	add	r2, pc, r2
   14ca8:	bl	12754 <vcos_log_impl@plt>
   14cac:	mov	r0, #0
   14cb0:	b	14a34 <raspicamcontrol_parse_cmdline@@Base+0x498>
   14cb4:	ldr	r3, [pc, #-408]	; 14b24 <raspicamcontrol_parse_cmdline@@Base+0x588>
   14cb8:	ldr	r0, [r4, r3]
   14cbc:	ldr	r3, [r0]
   14cc0:	cmp	r3, #1
   14cc4:	movls	r0, #1
   14cc8:	bls	14a9c <raspicamcontrol_parse_cmdline@@Base+0x500>
   14ccc:	ldr	r2, [pc, #-440]	; 14b1c <raspicamcontrol_parse_cmdline@@Base+0x580>
   14cd0:	mov	r3, r6
   14cd4:	mov	r1, #2
   14cd8:	add	r2, pc, r2
   14cdc:	bl	12754 <vcos_log_impl@plt>
   14ce0:	mov	r0, #1
   14ce4:	b	14a9c <raspicamcontrol_parse_cmdline@@Base+0x500>
   14ce8:	ldr	r3, [pc, #-460]	; 14b24 <raspicamcontrol_parse_cmdline@@Base+0x588>
   14cec:	ldr	r0, [r4, r3]
   14cf0:	ldr	r3, [r0]
   14cf4:	cmp	r3, #1
   14cf8:	movls	r0, #0
   14cfc:	bls	147d0 <raspicamcontrol_parse_cmdline@@Base+0x234>
   14d00:	ldr	r2, [pc, #-488]	; 14b20 <raspicamcontrol_parse_cmdline@@Base+0x584>
   14d04:	mov	r3, r6
   14d08:	mov	r1, #2
   14d0c:	add	r2, pc, r2
   14d10:	bl	12754 <vcos_log_impl@plt>
   14d14:	mov	r0, #0
   14d18:	b	147d0 <raspicamcontrol_parse_cmdline@@Base+0x234>
   14d1c:	ldr	r3, [pc, #-512]	; 14b24 <raspicamcontrol_parse_cmdline@@Base+0x588>
   14d20:	ldr	r0, [r4, r3]
   14d24:	ldr	r3, [r0]
   14d28:	cmp	r3, #1
   14d2c:	movls	r0, #0
   14d30:	bls	14750 <raspicamcontrol_parse_cmdline@@Base+0x1b4>
   14d34:	ldr	r2, [pc, #-532]	; 14b28 <raspicamcontrol_parse_cmdline@@Base+0x58c>
   14d38:	mov	r3, r6
   14d3c:	mov	r1, #2
   14d40:	add	r2, pc, r2
   14d44:	bl	12754 <vcos_log_impl@plt>
   14d48:	mov	r0, #0
   14d4c:	b	14750 <raspicamcontrol_parse_cmdline@@Base+0x1b4>
   14d50:	ldr	r2, [r7, #164]	; 0xa4
   14d54:	ldr	r3, [sp, #48]	; 0x30
   14d58:	orr	r3, r2, r3
   14d5c:	str	r3, [r7, #164]	; 0xa4
   14d60:	b	147d4 <raspicamcontrol_parse_cmdline@@Base+0x238>
   14d64:	bl	1288c <__stack_chk_fail@plt>

00014d68 <raspicamcontrol_display_help@@Base>:
   14d68:	ldr	r3, [pc, #460]	; 14f3c <raspicamcontrol_display_help@@Base+0x1d4>
   14d6c:	mov	r2, #27
   14d70:	ldr	ip, [pc, #456]	; 14f40 <raspicamcontrol_display_help@@Base+0x1d8>
   14d74:	mov	r1, #1
   14d78:	add	r3, pc, r3
   14d7c:	ldr	r0, [pc, #448]	; 14f44 <raspicamcontrol_display_help@@Base+0x1dc>
   14d80:	push	{r4, r5, r6, r7, r8, lr}
   14d84:	add	r0, pc, r0
   14d88:	ldr	r5, [r3, ip]
   14d8c:	ldr	r8, [pc, #436]	; 14f48 <raspicamcontrol_display_help@@Base+0x1e0>
   14d90:	ldr	r6, [pc, #436]	; 14f4c <raspicamcontrol_display_help@@Base+0x1e4>
   14d94:	add	r8, pc, r8
   14d98:	ldr	r3, [r5]
   14d9c:	bl	128ec <fwrite@plt>
   14da0:	add	r0, r8, #160	; 0xa0
   14da4:	mov	r1, #29
   14da8:	mov	r4, r8
   14dac:	bl	170d0 <raspicli_display_help@@Base>
   14db0:	ldr	r2, [pc, #408]	; 14f50 <raspicamcontrol_display_help@@Base+0x1e8>
   14db4:	ldr	r0, [r5]
   14db8:	mov	r1, #1
   14dbc:	ldr	r3, [r4, #740]!	; 0x2e4
   14dc0:	add	r2, pc, r2
   14dc4:	add	r7, r8, #836	; 0x344
   14dc8:	add	r6, pc, r6
   14dcc:	bl	12a6c <__fprintf_chk@plt>
   14dd0:	ldr	r3, [r4, #8]!
   14dd4:	mov	r1, #1
   14dd8:	ldr	r0, [r5]
   14ddc:	mov	r2, r6
   14de0:	bl	12a6c <__fprintf_chk@plt>
   14de4:	cmp	r4, r7
   14de8:	bne	14dd0 <raspicamcontrol_display_help@@Base+0x68>
   14dec:	ldr	r4, [pc, #352]	; 14f54 <raspicamcontrol_display_help@@Base+0x1ec>
   14df0:	mov	r1, #1
   14df4:	ldr	r2, [pc, #348]	; 14f58 <raspicamcontrol_display_help@@Base+0x1f0>
   14df8:	add	r4, pc, r4
   14dfc:	ldr	r0, [r5]
   14e00:	add	r7, r4, #868	; 0x364
   14e04:	add	r2, pc, r2
   14e08:	ldr	r3, [r4, #844]!	; 0x34c
   14e0c:	bl	12a6c <__fprintf_chk@plt>
   14e10:	ldr	r3, [r4, #8]!
   14e14:	mov	r1, #1
   14e18:	ldr	r0, [r5]
   14e1c:	mov	r2, r6
   14e20:	bl	12a6c <__fprintf_chk@plt>
   14e24:	cmp	r4, r7
   14e28:	bne	14e10 <raspicamcontrol_display_help@@Base+0xa8>
   14e2c:	ldr	r4, [pc, #296]	; 14f5c <raspicamcontrol_display_help@@Base+0x1f4>
   14e30:	mov	r1, #1
   14e34:	ldr	r2, [pc, #292]	; 14f60 <raspicamcontrol_display_help@@Base+0x1f8>
   14e38:	add	r4, pc, r4
   14e3c:	ldr	r0, [r5]
   14e40:	add	r7, r4, #948	; 0x3b4
   14e44:	add	r2, pc, r2
   14e48:	ldr	r3, [r4, #876]!	; 0x36c
   14e4c:	bl	12a6c <__fprintf_chk@plt>
   14e50:	ldr	r3, [r4, #8]!
   14e54:	mov	r1, #1
   14e58:	ldr	r0, [r5]
   14e5c:	mov	r2, r6
   14e60:	bl	12a6c <__fprintf_chk@plt>
   14e64:	cmp	r4, r7
   14e68:	bne	14e50 <raspicamcontrol_display_help@@Base+0xe8>
   14e6c:	ldr	r4, [pc, #240]	; 14f64 <raspicamcontrol_display_help@@Base+0x1fc>
   14e70:	mov	r1, #1
   14e74:	ldr	r2, [pc, #236]	; 14f68 <raspicamcontrol_display_help@@Base+0x200>
   14e78:	add	r4, pc, r4
   14e7c:	ldr	r0, [r5]
   14e80:	add	r2, pc, r2
   14e84:	add	r7, r4, #152	; 0x98
   14e88:	ldr	r3, [r4]
   14e8c:	bl	12a6c <__fprintf_chk@plt>
   14e90:	ldr	r3, [r4, #8]!
   14e94:	mov	r1, #1
   14e98:	ldr	r0, [r5]
   14e9c:	mov	r2, r6
   14ea0:	bl	12a6c <__fprintf_chk@plt>
   14ea4:	cmp	r4, r7
   14ea8:	bne	14e90 <raspicamcontrol_display_help@@Base+0x128>
   14eac:	ldr	r4, [pc, #184]	; 14f6c <raspicamcontrol_display_help@@Base+0x204>
   14eb0:	mov	r1, #1
   14eb4:	ldr	r2, [pc, #180]	; 14f70 <raspicamcontrol_display_help@@Base+0x208>
   14eb8:	add	r4, pc, r4
   14ebc:	ldr	r0, [r5]
   14ec0:	add	r7, r4, #980	; 0x3d4
   14ec4:	add	r2, pc, r2
   14ec8:	ldr	r3, [r4, #956]!	; 0x3bc
   14ecc:	bl	12a6c <__fprintf_chk@plt>
   14ed0:	ldr	r3, [r4, #8]!
   14ed4:	mov	r1, #1
   14ed8:	ldr	r0, [r5]
   14edc:	mov	r2, r6
   14ee0:	bl	12a6c <__fprintf_chk@plt>
   14ee4:	cmp	r4, r7
   14ee8:	bne	14ed0 <raspicamcontrol_display_help@@Base+0x168>
   14eec:	ldr	r4, [pc, #128]	; 14f74 <raspicamcontrol_display_help@@Base+0x20c>
   14ef0:	mov	r1, #1
   14ef4:	ldr	r2, [pc, #124]	; 14f78 <raspicamcontrol_display_help@@Base+0x210>
   14ef8:	add	r4, pc, r4
   14efc:	ldr	r0, [r5]
   14f00:	add	r7, r4, #1012	; 0x3f4
   14f04:	add	r2, pc, r2
   14f08:	ldr	r3, [r4, #988]!	; 0x3dc
   14f0c:	bl	12a6c <__fprintf_chk@plt>
   14f10:	ldr	r3, [r4, #8]!
   14f14:	mov	r1, #1
   14f18:	ldr	r0, [r5]
   14f1c:	mov	r2, r6
   14f20:	bl	12a6c <__fprintf_chk@plt>
   14f24:	cmp	r4, r7
   14f28:	bne	14f10 <raspicamcontrol_display_help@@Base+0x1a8>
   14f2c:	ldr	r1, [r5]
   14f30:	mov	r0, #10
   14f34:	pop	{r4, r5, r6, r7, r8, lr}
   14f38:	b	12ac0 <fputc@plt>
   14f3c:	andeq	r9, r1, r0, lsl #5
   14f40:	muleq	r0, r8, r1
   14f44:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   14f48:	andeq	r9, r1, r4, lsl r4
   14f4c:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   14f50:	andeq	r5, r0, ip, ror pc
   14f54:			; <UNDEFINED> instruction: 0x000193b0
   14f58:	andeq	r5, r0, r0, ror #30
   14f5c:	andeq	r9, r1, r0, ror r3
   14f60:	andeq	r5, r0, r4, asr #30
   14f64:	andeq	r9, r1, r0, lsr r3
   14f68:	andeq	r5, r0, r0, lsr #30
   14f6c:	strdeq	r9, [r1], -r0
   14f70:	andeq	r5, r0, r0, lsl #30
   14f74:			; <UNDEFINED> instruction: 0x000192b0
   14f78:	andeq	r5, r0, r0, ror #29

00014f7c <raspicamcontrol_dump_parameters@@Base>:
   14f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f80:	mov	r2, #13
   14f84:	ldr	r4, [pc, #524]	; 15198 <raspicamcontrol_dump_parameters@@Base+0x21c>
   14f88:	mov	r6, r0
   14f8c:	sub	sp, sp, #36	; 0x24
   14f90:	ldr	r0, [r0, #28]
   14f94:	add	r4, pc, r4
   14f98:	ldr	r5, [pc, #508]	; 1519c <raspicamcontrol_dump_parameters@@Base+0x220>
   14f9c:	add	r1, r4, #740	; 0x2e4
   14fa0:	bl	171e8 <raspicli_unmap_xref@@Base>
   14fa4:	add	r1, r4, #844	; 0x34c
   14fa8:	mov	r2, #4
   14fac:	add	r5, pc, r5
   14fb0:	mov	r9, r0
   14fb4:	ldr	r0, [r6, #96]	; 0x60
   14fb8:	bl	171e8 <raspicli_unmap_xref@@Base>
   14fbc:	add	r1, r4, #876	; 0x36c
   14fc0:	mov	r2, #10
   14fc4:	mov	r7, r0
   14fc8:	ldr	r0, [r6, #36]	; 0x24
   14fcc:	bl	171e8 <raspicli_unmap_xref@@Base>
   14fd0:	mov	r1, r4
   14fd4:	mov	r2, #20
   14fd8:	mov	sl, r0
   14fdc:	ldr	r0, [r6, #40]	; 0x28
   14fe0:	bl	171e8 <raspicli_unmap_xref@@Base>
   14fe4:	add	r1, r4, #956	; 0x3bc
   14fe8:	mov	r2, #4
   14fec:	mov	r8, r0
   14ff0:	ldr	r0, [r6, #32]
   14ff4:	bl	171e8 <raspicli_unmap_xref@@Base>
   14ff8:	ldr	r2, [r6, #4]
   14ffc:	ldr	r3, [r6]
   15000:	mov	r1, #1
   15004:	mov	fp, r0
   15008:	ldr	r0, [pc, #400]	; 151a0 <raspicamcontrol_dump_parameters@@Base+0x224>
   1500c:	ldr	r4, [r5, r0]
   15010:	str	r2, [sp]
   15014:	ldr	ip, [r6, #8]
   15018:	ldr	r2, [pc, #388]	; 151a4 <raspicamcontrol_dump_parameters@@Base+0x228>
   1501c:	ldr	r0, [r4]
   15020:	add	r2, pc, r2
   15024:	str	ip, [sp, #4]
   15028:	bl	12a6c <__fprintf_chk@plt>
   1502c:	ldr	r3, [r6, #20]
   15030:	ldr	r0, [r4]
   15034:	cmp	r3, #0
   15038:	ldr	r1, [r6, #16]
   1503c:	ldr	r3, [r6, #12]
   15040:	beq	15160 <raspicamcontrol_dump_parameters@@Base+0x1e4>
   15044:	ldr	r2, [pc, #348]	; 151a8 <raspicamcontrol_dump_parameters@@Base+0x22c>
   15048:	add	r2, pc, r2
   1504c:	stm	sp, {r1, r2}
   15050:	mov	r1, #1
   15054:	ldr	ip, [r6, #24]
   15058:	ldr	r2, [pc, #332]	; 151ac <raspicamcontrol_dump_parameters@@Base+0x230>
   1505c:	str	ip, [sp, #8]
   15060:	add	r2, pc, r2
   15064:	bl	12a6c <__fprintf_chk@plt>
   15068:	ldr	r2, [pc, #320]	; 151b0 <raspicamcontrol_dump_parameters@@Base+0x234>
   1506c:	ldr	r0, [r4]
   15070:	mov	r3, r9
   15074:	mov	r1, #1
   15078:	add	r2, pc, r2
   1507c:	str	sl, [sp]
   15080:	str	r8, [sp, #4]
   15084:	bl	12a6c <__fprintf_chk@plt>
   15088:	ldr	r2, [pc, #292]	; 151b4 <raspicamcontrol_dump_parameters@@Base+0x238>
   1508c:	mov	r3, r7
   15090:	ldr	r0, [r4]
   15094:	mov	r1, #1
   15098:	add	r2, pc, r2
   1509c:	bl	12a6c <__fprintf_chk@plt>
   150a0:	ldr	r3, [r6, #84]	; 0x54
   150a4:	ldr	r0, [r4]
   150a8:	cmp	r3, #0
   150ac:	beq	1518c <raspicamcontrol_dump_parameters@@Base+0x210>
   150b0:	ldr	r3, [pc, #256]	; 151b8 <raspicamcontrol_dump_parameters@@Base+0x23c>
   150b4:	add	r3, pc, r3
   150b8:	str	r3, [sp]
   150bc:	mov	r1, #1
   150c0:	ldr	ip, [r6, #88]	; 0x58
   150c4:	mov	r3, fp
   150c8:	ldr	r2, [pc, #236]	; 151bc <raspicamcontrol_dump_parameters@@Base+0x240>
   150cc:	str	ip, [sp, #4]
   150d0:	add	r2, pc, r2
   150d4:	ldr	ip, [r6, #92]	; 0x5c
   150d8:	str	ip, [sp, #8]
   150dc:	bl	12a6c <__fprintf_chk@plt>
   150e0:	ldr	r3, [r6, #104]	; 0x68
   150e4:	ldr	r0, [r4]
   150e8:	cmp	r3, #0
   150ec:	ldr	r3, [r6, #100]	; 0x64
   150f0:	beq	1516c <raspicamcontrol_dump_parameters@@Base+0x1f0>
   150f4:	ldr	r2, [r6, #108]	; 0x6c
   150f8:	ldr	r1, [pc, #192]	; 151c0 <raspicamcontrol_dump_parameters@@Base+0x244>
   150fc:	cmp	r2, #0
   15100:	add	r1, pc, r1
   15104:	bne	15180 <raspicamcontrol_dump_parameters@@Base+0x204>
   15108:	ldr	r2, [pc, #180]	; 151c4 <raspicamcontrol_dump_parameters@@Base+0x248>
   1510c:	add	r2, pc, r2
   15110:	stm	sp, {r1, r2}
   15114:	mov	r1, #1
   15118:	ldr	r2, [pc, #168]	; 151c8 <raspicamcontrol_dump_parameters@@Base+0x24c>
   1511c:	add	r2, pc, r2
   15120:	bl	12a6c <__fprintf_chk@plt>
   15124:	ldrd	r2, [r6, #112]	; 0x70
   15128:	ldr	r0, [r4]
   1512c:	mov	r1, #1
   15130:	strd	r2, [sp]
   15134:	ldrd	r4, [r6, #120]	; 0x78
   15138:	ldr	r2, [pc, #140]	; 151cc <raspicamcontrol_dump_parameters@@Base+0x250>
   1513c:	strd	r4, [sp, #8]
   15140:	add	r2, pc, r2
   15144:	ldrd	r4, [r6, #128]	; 0x80
   15148:	strd	r4, [sp, #16]
   1514c:	ldrd	r4, [r6, #136]	; 0x88
   15150:	strd	r4, [sp, #24]
   15154:	bl	12a6c <__fprintf_chk@plt>
   15158:	add	sp, sp, #36	; 0x24
   1515c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15160:	ldr	r2, [pc, #104]	; 151d0 <raspicamcontrol_dump_parameters@@Base+0x254>
   15164:	add	r2, pc, r2
   15168:	b	1504c <raspicamcontrol_dump_parameters@@Base+0xd0>
   1516c:	ldr	r2, [r6, #108]	; 0x6c
   15170:	ldr	r1, [pc, #92]	; 151d4 <raspicamcontrol_dump_parameters@@Base+0x258>
   15174:	cmp	r2, #0
   15178:	add	r1, pc, r1
   1517c:	beq	15108 <raspicamcontrol_dump_parameters@@Base+0x18c>
   15180:	ldr	r2, [pc, #80]	; 151d8 <raspicamcontrol_dump_parameters@@Base+0x25c>
   15184:	add	r2, pc, r2
   15188:	b	15110 <raspicamcontrol_dump_parameters@@Base+0x194>
   1518c:	ldr	r3, [pc, #72]	; 151dc <raspicamcontrol_dump_parameters@@Base+0x260>
   15190:	add	r3, pc, r3
   15194:	b	150b8 <raspicamcontrol_dump_parameters@@Base+0x13c>
   15198:	andeq	r9, r1, r4, lsl r2
   1519c:	andeq	r9, r1, ip, asr #32
   151a0:	andeq	r0, r0, r8, lsl #3
   151a4:	strdeq	r5, [r0], -ip
   151a8:	andeq	r5, r0, ip, asr #27
   151ac:	andeq	r5, r0, r8, ror #27
   151b0:	andeq	r5, r0, ip, lsl lr
   151b4:	andeq	r5, r0, r4, lsr lr
   151b8:	andeq	r5, r0, r0, ror #26
   151bc:	andeq	r5, r0, r8, lsl lr
   151c0:	andeq	r5, r0, r4, lsl sp
   151c4:	andeq	r5, r0, ip, lsl #26
   151c8:	andeq	r5, r0, r0, lsl lr
   151cc:	andeq	r5, r0, r0, lsl lr
   151d0:			; <UNDEFINED> instruction: 0x00005cb4
   151d4:	andeq	r5, r0, r0, lsr #25
   151d8:	muleq	r0, r0, ip
   151dc:	andeq	r5, r0, r8, lsl #25

000151e0 <raspicamcontrol_set_defaults@@Base>:
   151e0:	push	{r4, r5, r6, r7, lr}
   151e4:	subs	r6, r0, #0
   151e8:	sub	sp, sp, #12
   151ec:	beq	152b0 <raspicamcontrol_set_defaults@@Base+0xd0>
   151f0:	mov	r1, #0
   151f4:	mov	r2, #0
   151f8:	mov	ip, #1
   151fc:	mov	r0, #128	; 0x80
   15200:	mov	r4, #0
   15204:	mov	r5, #0
   15208:	mov	r7, #50	; 0x32
   1520c:	strd	r4, [r6, #120]	; 0x78
   15210:	strd	r4, [r6, #112]	; 0x70
   15214:	mov	r3, #0
   15218:	mov	r4, #0
   1521c:	movt	r3, #16368	; 0x3ff0
   15220:	str	r1, [r6]
   15224:	strd	r2, [r6, #136]	; 0x88
   15228:	strd	r2, [r6, #128]	; 0x80
   1522c:	mvn	r3, #0
   15230:	str	r1, [r6, #4]
   15234:	str	r1, [r6, #12]
   15238:	str	r1, [r6, #16]
   1523c:	str	r1, [r6, #20]
   15240:	str	r1, [r6, #24]
   15244:	str	r1, [r6, #96]	; 0x60
   15248:	str	r1, [r6, #32]
   1524c:	str	r4, [r6, #148]	; 0x94
   15250:	str	r1, [r6, #40]	; 0x28
   15254:	str	r4, [r6, #152]	; 0x98
   15258:	str	r1, [r6, #84]	; 0x54
   1525c:	str	r1, [r6, #100]	; 0x64
   15260:	str	r1, [r6, #108]	; 0x6c
   15264:	str	r1, [r6, #104]	; 0x68
   15268:	str	r1, [r6, #144]	; 0x90
   1526c:	str	r1, [r6, #156]	; 0x9c
   15270:	str	r1, [r6, #160]	; 0xa0
   15274:	str	r1, [r6, #164]	; 0xa4
   15278:	strb	r1, [r6, #168]	; 0xa8
   1527c:	str	r1, [r6, #424]	; 0x1a8
   15280:	str	r1, [r6, #456]	; 0x1c8
   15284:	str	r7, [r6, #8]
   15288:	str	ip, [r6, #28]
   1528c:	str	ip, [r6, #36]	; 0x24
   15290:	str	r0, [r6, #88]	; 0x58
   15294:	str	r0, [r6, #92]	; 0x5c
   15298:	str	r3, [r6, #428]	; 0x1ac
   1529c:	str	r3, [r6, #432]	; 0x1b0
   152a0:	str	r1, [r6, #460]	; 0x1cc
   152a4:	str	r1, [r6, #464]	; 0x1d0
   152a8:	add	sp, sp, #12
   152ac:	pop	{r4, r5, r6, r7, pc}
   152b0:	ldr	r3, [pc, #40]	; 152e0 <raspicamcontrol_set_defaults@@Base+0x100>
   152b4:	movw	r2, #942	; 0x3ae
   152b8:	ldr	r0, [pc, #36]	; 152e4 <raspicamcontrol_set_defaults@@Base+0x104>
   152bc:	add	r3, pc, r3
   152c0:	ldr	r1, [pc, #32]	; 152e8 <raspicamcontrol_set_defaults@@Base+0x108>
   152c4:	str	r3, [sp]
   152c8:	add	r0, pc, r0
   152cc:	ldr	r3, [pc, #24]	; 152ec <raspicamcontrol_set_defaults@@Base+0x10c>
   152d0:	add	r1, pc, r1
   152d4:	add	r3, pc, r3
   152d8:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   152dc:	b	151f0 <raspicamcontrol_set_defaults@@Base+0x10>
   152e0:	andeq	r5, r0, ip, lsl sp
   152e4:	andeq	r5, r0, r4, lsr #25
   152e8:	andeq	r5, r0, r0, asr #17
   152ec:	andeq	r5, r0, ip, lsr fp

000152f0 <raspicamcontrol_get_all_parameters@@Base>:
   152f0:	push	{r4, r5, lr}
   152f4:	subs	r5, r0, #0
   152f8:	sub	sp, sp, #12
   152fc:	mov	r4, r1
   15300:	beq	15324 <raspicamcontrol_get_all_parameters@@Base+0x34>
   15304:	cmp	r4, #0
   15308:	beq	15358 <raspicamcontrol_get_all_parameters@@Base+0x68>
   1530c:	cmp	r4, #0
   15310:	cmpne	r5, #0
   15314:	movne	r0, #0
   15318:	moveq	r0, #1
   1531c:	add	sp, sp, #12
   15320:	pop	{r4, r5, pc}
   15324:	ldr	r3, [pc, #96]	; 1538c <raspicamcontrol_get_all_parameters@@Base+0x9c>
   15328:	movw	r2, #986	; 0x3da
   1532c:	ldr	r1, [pc, #92]	; 15390 <raspicamcontrol_get_all_parameters@@Base+0xa0>
   15330:	add	r3, pc, r3
   15334:	ldr	r0, [pc, #88]	; 15394 <raspicamcontrol_get_all_parameters@@Base+0xa4>
   15338:	str	r3, [sp]
   1533c:	add	r1, pc, r1
   15340:	ldr	r3, [pc, #80]	; 15398 <raspicamcontrol_get_all_parameters@@Base+0xa8>
   15344:	add	r0, pc, r0
   15348:	add	r1, r1, #32
   1534c:	add	r3, pc, r3
   15350:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   15354:	b	15304 <raspicamcontrol_get_all_parameters@@Base+0x14>
   15358:	ldr	r3, [pc, #60]	; 1539c <raspicamcontrol_get_all_parameters@@Base+0xac>
   1535c:	movw	r2, #987	; 0x3db
   15360:	ldr	r1, [pc, #56]	; 153a0 <raspicamcontrol_get_all_parameters@@Base+0xb0>
   15364:	add	r3, pc, r3
   15368:	ldr	r0, [pc, #52]	; 153a4 <raspicamcontrol_get_all_parameters@@Base+0xb4>
   1536c:	str	r3, [sp]
   15370:	add	r1, pc, r1
   15374:	ldr	r3, [pc, #44]	; 153a8 <raspicamcontrol_get_all_parameters@@Base+0xb8>
   15378:	add	r0, pc, r0
   1537c:	add	r1, r1, #32
   15380:	add	r3, pc, r3
   15384:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   15388:	b	1530c <raspicamcontrol_get_all_parameters@@Base+0x1c>
   1538c:	andeq	r5, r0, r4, asr #27
   15390:	andeq	r5, r0, r4, asr r8
   15394:	andeq	r5, r0, r8, lsr #24
   15398:	andeq	r5, r0, r4, asr #21
   1539c:	andeq	r5, r0, r4, ror ip
   153a0:	andeq	r5, r0, r0, lsr #16
   153a4:	strdeq	r5, [r0], -r4
   153a8:	muleq	r0, r0, sl

000153ac <raspicamcontrol_set_saturation@@Base>:
   153ac:	cmp	r0, #0
   153b0:	ldr	r3, [pc, #120]	; 15430 <raspicamcontrol_set_saturation@@Base+0x84>
   153b4:	push	{lr}		; (str lr, [sp, #-4]!)
   153b8:	add	r3, pc, r3
   153bc:	sub	sp, sp, #12
   153c0:	beq	153f4 <raspicamcontrol_set_saturation@@Base+0x48>
   153c4:	add	r2, r1, #100	; 0x64
   153c8:	cmp	r2, #200	; 0xc8
   153cc:	bls	15400 <raspicamcontrol_set_saturation@@Base+0x54>
   153d0:	ldr	r2, [pc, #92]	; 15434 <raspicamcontrol_set_saturation@@Base+0x88>
   153d4:	ldr	r0, [r3, r2]
   153d8:	ldr	r3, [r0]
   153dc:	cmp	r3, #1
   153e0:	bls	153f4 <raspicamcontrol_set_saturation@@Base+0x48>
   153e4:	ldr	r2, [pc, #76]	; 15438 <raspicamcontrol_set_saturation@@Base+0x8c>
   153e8:	mov	r1, #2
   153ec:	add	r2, pc, r2
   153f0:	bl	12754 <vcos_log_impl@plt>
   153f4:	mov	r0, #1
   153f8:	add	sp, sp, #12
   153fc:	pop	{pc}		; (ldr pc, [sp], #4)
   15400:	add	ip, sp, #8
   15404:	str	r1, [sp]
   15408:	mov	r3, #100	; 0x64
   1540c:	ldr	r0, [r0, #16]
   15410:	str	r3, [sp, #4]
   15414:	mov	r1, #47	; 0x2f
   15418:	ldmdb	ip, {r2, r3}
   1541c:	movt	r1, #1
   15420:	bl	12ad8 <mmal_port_parameter_set_rational@plt>
   15424:	add	sp, sp, #12
   15428:	pop	{lr}		; (ldr lr, [sp], #4)
   1542c:	b	17edc <mmal_status_to_int@@Base>
   15430:	andeq	r8, r1, r0, asr #24
   15434:	andeq	r0, r0, r0, lsl #3
   15438:	strdeq	r5, [r0], -r4

0001543c <raspicamcontrol_set_sharpness@@Base>:
   1543c:	cmp	r0, #0
   15440:	ldr	r3, [pc, #120]	; 154c0 <raspicamcontrol_set_sharpness@@Base+0x84>
   15444:	push	{lr}		; (str lr, [sp, #-4]!)
   15448:	add	r3, pc, r3
   1544c:	sub	sp, sp, #12
   15450:	beq	15484 <raspicamcontrol_set_sharpness@@Base+0x48>
   15454:	add	r2, r1, #100	; 0x64
   15458:	cmp	r2, #200	; 0xc8
   1545c:	bls	15490 <raspicamcontrol_set_sharpness@@Base+0x54>
   15460:	ldr	r2, [pc, #92]	; 154c4 <raspicamcontrol_set_sharpness@@Base+0x88>
   15464:	ldr	r0, [r3, r2]
   15468:	ldr	r3, [r0]
   1546c:	cmp	r3, #1
   15470:	bls	15484 <raspicamcontrol_set_sharpness@@Base+0x48>
   15474:	ldr	r2, [pc, #76]	; 154c8 <raspicamcontrol_set_sharpness@@Base+0x8c>
   15478:	mov	r1, #2
   1547c:	add	r2, pc, r2
   15480:	bl	12754 <vcos_log_impl@plt>
   15484:	mov	r0, #1
   15488:	add	sp, sp, #12
   1548c:	pop	{pc}		; (ldr pc, [sp], #4)
   15490:	add	ip, sp, #8
   15494:	str	r1, [sp]
   15498:	mov	r3, #100	; 0x64
   1549c:	ldr	r0, [r0, #16]
   154a0:	str	r3, [sp, #4]
   154a4:	mov	r1, #44	; 0x2c
   154a8:	ldmdb	ip, {r2, r3}
   154ac:	movt	r1, #1
   154b0:	bl	12ad8 <mmal_port_parameter_set_rational@plt>
   154b4:	add	sp, sp, #12
   154b8:	pop	{lr}		; (ldr lr, [sp], #4)
   154bc:	b	17edc <mmal_status_to_int@@Base>
   154c0:			; <UNDEFINED> instruction: 0x00018bb0
   154c4:	andeq	r0, r0, r0, lsl #3
   154c8:	andeq	r5, r0, r0, lsl #23

000154cc <raspicamcontrol_set_contrast@@Base>:
   154cc:	cmp	r0, #0
   154d0:	ldr	r3, [pc, #120]	; 15550 <raspicamcontrol_set_contrast@@Base+0x84>
   154d4:	push	{lr}		; (str lr, [sp, #-4]!)
   154d8:	add	r3, pc, r3
   154dc:	sub	sp, sp, #12
   154e0:	beq	15514 <raspicamcontrol_set_contrast@@Base+0x48>
   154e4:	add	r2, r1, #100	; 0x64
   154e8:	cmp	r2, #200	; 0xc8
   154ec:	bls	15520 <raspicamcontrol_set_contrast@@Base+0x54>
   154f0:	ldr	r2, [pc, #92]	; 15554 <raspicamcontrol_set_contrast@@Base+0x88>
   154f4:	ldr	r0, [r3, r2]
   154f8:	ldr	r3, [r0]
   154fc:	cmp	r3, #1
   15500:	bls	15514 <raspicamcontrol_set_contrast@@Base+0x48>
   15504:	ldr	r2, [pc, #76]	; 15558 <raspicamcontrol_set_contrast@@Base+0x8c>
   15508:	mov	r1, #2
   1550c:	add	r2, pc, r2
   15510:	bl	12754 <vcos_log_impl@plt>
   15514:	mov	r0, #1
   15518:	add	sp, sp, #12
   1551c:	pop	{pc}		; (ldr pc, [sp], #4)
   15520:	add	ip, sp, #8
   15524:	str	r1, [sp]
   15528:	mov	r3, #100	; 0x64
   1552c:	ldr	r0, [r0, #16]
   15530:	str	r3, [sp, #4]
   15534:	mov	r1, #45	; 0x2d
   15538:	ldmdb	ip, {r2, r3}
   1553c:	movt	r1, #1
   15540:	bl	12ad8 <mmal_port_parameter_set_rational@plt>
   15544:	add	sp, sp, #12
   15548:	pop	{lr}		; (ldr lr, [sp], #4)
   1554c:	b	17edc <mmal_status_to_int@@Base>
   15550:	andeq	r8, r1, r0, lsr #22
   15554:	andeq	r0, r0, r0, lsl #3
   15558:	andeq	r5, r0, r8, lsl #22

0001555c <raspicamcontrol_set_brightness@@Base>:
   1555c:	cmp	r0, #0
   15560:	ldr	r3, [pc, #116]	; 155dc <raspicamcontrol_set_brightness@@Base+0x80>
   15564:	push	{lr}		; (str lr, [sp, #-4]!)
   15568:	add	r3, pc, r3
   1556c:	sub	sp, sp, #12
   15570:	beq	155a0 <raspicamcontrol_set_brightness@@Base+0x44>
   15574:	cmp	r1, #100	; 0x64
   15578:	bls	155ac <raspicamcontrol_set_brightness@@Base+0x50>
   1557c:	ldr	r2, [pc, #92]	; 155e0 <raspicamcontrol_set_brightness@@Base+0x84>
   15580:	ldr	r0, [r3, r2]
   15584:	ldr	r3, [r0]
   15588:	cmp	r3, #1
   1558c:	bls	155a0 <raspicamcontrol_set_brightness@@Base+0x44>
   15590:	ldr	r2, [pc, #76]	; 155e4 <raspicamcontrol_set_brightness@@Base+0x88>
   15594:	mov	r1, #2
   15598:	add	r2, pc, r2
   1559c:	bl	12754 <vcos_log_impl@plt>
   155a0:	mov	r0, #1
   155a4:	add	sp, sp, #12
   155a8:	pop	{pc}		; (ldr pc, [sp], #4)
   155ac:	add	ip, sp, #8
   155b0:	str	r1, [sp]
   155b4:	mov	r3, #100	; 0x64
   155b8:	ldr	r0, [r0, #16]
   155bc:	str	r3, [sp, #4]
   155c0:	mov	r1, #46	; 0x2e
   155c4:	ldmdb	ip, {r2, r3}
   155c8:	movt	r1, #1
   155cc:	bl	12ad8 <mmal_port_parameter_set_rational@plt>
   155d0:	add	sp, sp, #12
   155d4:	pop	{lr}		; (ldr lr, [sp], #4)
   155d8:	b	17edc <mmal_status_to_int@@Base>
   155dc:	muleq	r1, r0, sl
   155e0:	andeq	r0, r0, r0, lsl #3
   155e4:	muleq	r0, r4, sl

000155e8 <raspicamcontrol_set_ISO@@Base>:
   155e8:	cmp	r0, #0
   155ec:	push	{r3, lr}
   155f0:	beq	15610 <raspicamcontrol_set_ISO@@Base+0x28>
   155f4:	mov	r2, r1
   155f8:	ldr	r0, [r0, #16]
   155fc:	mov	r1, #48	; 0x30
   15600:	movt	r1, #1
   15604:	bl	127fc <mmal_port_parameter_set_uint32@plt>
   15608:	pop	{r3, lr}
   1560c:	b	17edc <mmal_status_to_int@@Base>
   15610:	mov	r0, #1
   15614:	pop	{r3, pc}

00015618 <raspicamcontrol_set_metering_mode@@Base>:
   15618:	ldr	r2, [pc, #104]	; 15688 <raspicamcontrol_set_metering_mode@@Base+0x70>
   1561c:	mov	r3, #19
   15620:	push	{r4, lr}
   15624:	add	r2, pc, r2
   15628:	ldr	r4, [pc, #92]	; 1568c <raspicamcontrol_set_metering_mode@@Base+0x74>
   1562c:	sub	sp, sp, #16
   15630:	movt	r3, #1
   15634:	cmp	r0, #0
   15638:	mov	ip, #12
   1563c:	ldr	r4, [r2, r4]
   15640:	moveq	r0, #1
   15644:	str	r3, [sp]
   15648:	str	r1, [sp, #8]
   1564c:	ldr	r3, [r4]
   15650:	str	ip, [sp, #4]
   15654:	str	r3, [sp, #12]
   15658:	beq	1566c <raspicamcontrol_set_metering_mode@@Base+0x54>
   1565c:	mov	r1, sp
   15660:	ldr	r0, [r0, #16]
   15664:	bl	12a0c <mmal_port_parameter_set@plt>
   15668:	bl	17edc <mmal_status_to_int@@Base>
   1566c:	ldr	r2, [sp, #12]
   15670:	ldr	r3, [r4]
   15674:	cmp	r2, r3
   15678:	bne	15684 <raspicamcontrol_set_metering_mode@@Base+0x6c>
   1567c:	add	sp, sp, #16
   15680:	pop	{r4, pc}
   15684:	bl	1288c <__stack_chk_fail@plt>
   15688:	ldrdeq	r8, [r1], -r4
   1568c:	andeq	r0, r0, r4, lsl #3

00015690 <raspicamcontrol_set_video_stabilisation@@Base>:
   15690:	cmp	r0, #0
   15694:	push	{r3, lr}
   15698:	beq	156b8 <raspicamcontrol_set_video_stabilisation@@Base+0x28>
   1569c:	mov	r2, r1
   156a0:	ldr	r0, [r0, #16]
   156a4:	mov	r1, #29
   156a8:	movt	r1, #1
   156ac:	bl	12b74 <mmal_port_parameter_set_boolean@plt>
   156b0:	pop	{r3, lr}
   156b4:	b	17edc <mmal_status_to_int@@Base>
   156b8:	mov	r0, #1
   156bc:	pop	{r3, pc}

000156c0 <raspicamcontrol_set_exposure_compensation@@Base>:
   156c0:	cmp	r0, #0
   156c4:	push	{r3, lr}
   156c8:	beq	156e8 <raspicamcontrol_set_exposure_compensation@@Base+0x28>
   156cc:	mov	r2, r1
   156d0:	ldr	r0, [r0, #16]
   156d4:	mov	r1, #13
   156d8:	movt	r1, #1
   156dc:	bl	129f4 <mmal_port_parameter_set_int32@plt>
   156e0:	pop	{r3, lr}
   156e4:	b	17edc <mmal_status_to_int@@Base>
   156e8:	mov	r0, #1
   156ec:	pop	{r3, pc}

000156f0 <raspicamcontrol_set_exposure_mode@@Base>:
   156f0:	ldr	r2, [pc, #104]	; 15760 <raspicamcontrol_set_exposure_mode@@Base+0x70>
   156f4:	mov	r3, #18
   156f8:	push	{r4, lr}
   156fc:	add	r2, pc, r2
   15700:	ldr	r4, [pc, #92]	; 15764 <raspicamcontrol_set_exposure_mode@@Base+0x74>
   15704:	sub	sp, sp, #16
   15708:	movt	r3, #1
   1570c:	cmp	r0, #0
   15710:	mov	ip, #12
   15714:	ldr	r4, [r2, r4]
   15718:	moveq	r0, #1
   1571c:	str	r3, [sp]
   15720:	str	r1, [sp, #8]
   15724:	ldr	r3, [r4]
   15728:	str	ip, [sp, #4]
   1572c:	str	r3, [sp, #12]
   15730:	beq	15744 <raspicamcontrol_set_exposure_mode@@Base+0x54>
   15734:	mov	r1, sp
   15738:	ldr	r0, [r0, #16]
   1573c:	bl	12a0c <mmal_port_parameter_set@plt>
   15740:	bl	17edc <mmal_status_to_int@@Base>
   15744:	ldr	r2, [sp, #12]
   15748:	ldr	r3, [r4]
   1574c:	cmp	r2, r3
   15750:	bne	1575c <raspicamcontrol_set_exposure_mode@@Base+0x6c>
   15754:	add	sp, sp, #16
   15758:	pop	{r4, pc}
   1575c:	bl	1288c <__stack_chk_fail@plt>
   15760:	strdeq	r8, [r1], -ip
   15764:	andeq	r0, r0, r4, lsl #3

00015768 <raspicamcontrol_set_flicker_avoid_mode@@Base>:
   15768:	ldr	r2, [pc, #104]	; 157d8 <raspicamcontrol_set_flicker_avoid_mode@@Base+0x70>
   1576c:	mov	r3, #8
   15770:	push	{r4, lr}
   15774:	add	r2, pc, r2
   15778:	ldr	r4, [pc, #92]	; 157dc <raspicamcontrol_set_flicker_avoid_mode@@Base+0x74>
   1577c:	sub	sp, sp, #16
   15780:	movt	r3, #1
   15784:	cmp	r0, #0
   15788:	mov	ip, #12
   1578c:	ldr	r4, [r2, r4]
   15790:	moveq	r0, #1
   15794:	str	r3, [sp]
   15798:	str	r1, [sp, #8]
   1579c:	ldr	r3, [r4]
   157a0:	str	ip, [sp, #4]
   157a4:	str	r3, [sp, #12]
   157a8:	beq	157bc <raspicamcontrol_set_flicker_avoid_mode@@Base+0x54>
   157ac:	mov	r1, sp
   157b0:	ldr	r0, [r0, #16]
   157b4:	bl	12a0c <mmal_port_parameter_set@plt>
   157b8:	bl	17edc <mmal_status_to_int@@Base>
   157bc:	ldr	r2, [sp, #12]
   157c0:	ldr	r3, [r4]
   157c4:	cmp	r2, r3
   157c8:	bne	157d4 <raspicamcontrol_set_flicker_avoid_mode@@Base+0x6c>
   157cc:	add	sp, sp, #16
   157d0:	pop	{r4, pc}
   157d4:	bl	1288c <__stack_chk_fail@plt>
   157d8:	andeq	r8, r1, r4, lsl #17
   157dc:	andeq	r0, r0, r4, lsl #3

000157e0 <raspicamcontrol_set_awb_mode@@Base>:
   157e0:	ldr	r2, [pc, #104]	; 15850 <raspicamcontrol_set_awb_mode@@Base+0x70>
   157e4:	mov	r3, #5
   157e8:	push	{r4, lr}
   157ec:	add	r2, pc, r2
   157f0:	ldr	r4, [pc, #92]	; 15854 <raspicamcontrol_set_awb_mode@@Base+0x74>
   157f4:	sub	sp, sp, #16
   157f8:	movt	r3, #1
   157fc:	cmp	r0, #0
   15800:	mov	ip, #12
   15804:	ldr	r4, [r2, r4]
   15808:	moveq	r0, #1
   1580c:	str	r3, [sp]
   15810:	str	r1, [sp, #8]
   15814:	ldr	r3, [r4]
   15818:	str	ip, [sp, #4]
   1581c:	str	r3, [sp, #12]
   15820:	beq	15834 <raspicamcontrol_set_awb_mode@@Base+0x54>
   15824:	mov	r1, sp
   15828:	ldr	r0, [r0, #16]
   1582c:	bl	12a0c <mmal_port_parameter_set@plt>
   15830:	bl	17edc <mmal_status_to_int@@Base>
   15834:	ldr	r2, [sp, #12]
   15838:	ldr	r3, [r4]
   1583c:	cmp	r2, r3
   15840:	bne	1584c <raspicamcontrol_set_awb_mode@@Base+0x6c>
   15844:	add	sp, sp, #16
   15848:	pop	{r4, pc}
   1584c:	bl	1288c <__stack_chk_fail@plt>
   15850:	andeq	r8, r1, ip, lsl #16
   15854:	andeq	r0, r0, r4, lsl #3

00015858 <raspicamcontrol_set_awb_gains@@Base>:
   15858:	push	{r4, r5, r6, r7, r8, lr}
   1585c:	cmp	r0, #0
   15860:	ldr	r4, [pc, #200]	; 15930 <raspicamcontrol_set_awb_gains@@Base+0xd8>
   15864:	mov	r7, r0
   15868:	ldr	r5, [pc, #196]	; 15934 <raspicamcontrol_set_awb_gains@@Base+0xdc>
   1586c:	sub	sp, sp, #32
   15870:	add	r4, pc, r4
   15874:	ldr	r8, [pc, #188]	; 15938 <raspicamcontrol_set_awb_gains@@Base+0xe0>
   15878:	add	r4, r4, #68	; 0x44
   1587c:	add	r5, pc, r5
   15880:	add	r6, sp, #4
   15884:	ldm	r4!, {r0, r1, r2, r3}
   15888:	mov	ip, r6
   1588c:	ldr	r5, [r5, r8]
   15890:	stmia	ip!, {r0, r1, r2, r3}
   15894:	ldr	r3, [r5]
   15898:	ldm	r4, {r0, r1}
   1589c:	str	r3, [sp, #28]
   158a0:	stm	ip, {r0, r1}
   158a4:	beq	15920 <raspicamcontrol_set_awb_gains@@Base+0xc8>
   158a8:	vcmp.f32	s0, #0.0
   158ac:	vmrs	APSR_nzcv, fpscr
   158b0:	vcmp.f32	s1, #0.0
   158b4:	movne	r3, #0
   158b8:	moveq	r3, #1
   158bc:	vmrs	APSR_nzcv, fpscr
   158c0:	orreq	r3, r3, #1
   158c4:	cmp	r3, #0
   158c8:	movne	r0, #0
   158cc:	bne	15908 <raspicamcontrol_set_awb_gains@@Base+0xb0>
   158d0:	vldr	s15, [pc, #84]	; 1592c <raspicamcontrol_set_awb_gains@@Base+0xd4>
   158d4:	vmul.f32	s0, s0, s15
   158d8:	mov	r1, r6
   158dc:	ldr	r0, [r7, #16]
   158e0:	mov	r3, #65536	; 0x10000
   158e4:	str	r3, [sp, #24]
   158e8:	str	r3, [sp, #16]
   158ec:	vmul.f32	s1, s1, s15
   158f0:	vcvt.u32.f32	s0, s0
   158f4:	vcvt.u32.f32	s1, s1
   158f8:	vstr	s0, [sp, #12]
   158fc:	vstr	s1, [sp, #20]
   15900:	bl	12a0c <mmal_port_parameter_set@plt>
   15904:	bl	17edc <mmal_status_to_int@@Base>
   15908:	ldr	r2, [sp, #28]
   1590c:	ldr	r3, [r5]
   15910:	cmp	r2, r3
   15914:	bne	15928 <raspicamcontrol_set_awb_gains@@Base+0xd0>
   15918:	add	sp, sp, #32
   1591c:	pop	{r4, r5, r6, r7, r8, pc}
   15920:	mov	r0, #1
   15924:	b	15908 <raspicamcontrol_set_awb_gains@@Base+0xb0>
   15928:	bl	1288c <__stack_chk_fail@plt>
   1592c:	strmi	r0, [r0, r0]
   15930:	andeq	r5, r0, r0, lsr #6
   15934:	andeq	r8, r1, ip, ror r7
   15938:	andeq	r0, r0, r4, lsl #3

0001593c <raspicamcontrol_set_imageFX@@Base>:
   1593c:	ldr	r2, [pc, #104]	; 159ac <raspicamcontrol_set_imageFX@@Base+0x70>
   15940:	mov	r3, #6
   15944:	push	{r4, lr}
   15948:	add	r2, pc, r2
   1594c:	ldr	r4, [pc, #92]	; 159b0 <raspicamcontrol_set_imageFX@@Base+0x74>
   15950:	sub	sp, sp, #16
   15954:	movt	r3, #1
   15958:	cmp	r0, #0
   1595c:	mov	ip, #12
   15960:	ldr	r4, [r2, r4]
   15964:	moveq	r0, #1
   15968:	str	r3, [sp]
   1596c:	str	r1, [sp, #8]
   15970:	ldr	r3, [r4]
   15974:	str	ip, [sp, #4]
   15978:	str	r3, [sp, #12]
   1597c:	beq	15990 <raspicamcontrol_set_imageFX@@Base+0x54>
   15980:	mov	r1, sp
   15984:	ldr	r0, [r0, #16]
   15988:	bl	12a0c <mmal_port_parameter_set@plt>
   1598c:	bl	17edc <mmal_status_to_int@@Base>
   15990:	ldr	r2, [sp, #12]
   15994:	ldr	r3, [r4]
   15998:	cmp	r2, r3
   1599c:	bne	159a8 <raspicamcontrol_set_imageFX@@Base+0x6c>
   159a0:	add	sp, sp, #16
   159a4:	pop	{r4, pc}
   159a8:	bl	1288c <__stack_chk_fail@plt>
   159ac:			; <UNDEFINED> instruction: 0x000186b0
   159b0:	andeq	r0, r0, r4, lsl #3

000159b4 <raspicamcontrol_set_colourFX@@Base>:
   159b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   159b8:	cmp	r0, #0
   159bc:	ldr	r4, [pc, #132]	; 15a48 <raspicamcontrol_set_colourFX@@Base+0x94>
   159c0:	mov	r7, r0
   159c4:	ldr	r6, [pc, #128]	; 15a4c <raspicamcontrol_set_colourFX@@Base+0x98>
   159c8:	mov	r5, r1
   159cc:	add	r4, pc, r4
   159d0:	ldr	r9, [pc, #120]	; 15a50 <raspicamcontrol_set_colourFX@@Base+0x9c>
   159d4:	add	r4, r4, #92	; 0x5c
   159d8:	add	r6, pc, r6
   159dc:	sub	sp, sp, #28
   159e0:	ldm	r4!, {r0, r1, r2, r3}
   159e4:	mov	ip, sp
   159e8:	ldr	r6, [r6, r9]
   159ec:	ldr	r4, [r4]
   159f0:	ldr	r9, [r6]
   159f4:	stmia	ip!, {r0, r1, r2, r3}
   159f8:	moveq	r0, #1
   159fc:	str	r9, [sp, #20]
   15a00:	str	r4, [ip]
   15a04:	beq	15a2c <raspicamcontrol_set_colourFX@@Base+0x78>
   15a08:	ldmib	r5, {r2, r3}
   15a0c:	mov	r1, sp
   15a10:	ldr	ip, [r5]
   15a14:	ldr	r0, [r7, #16]
   15a18:	str	r2, [sp, #12]
   15a1c:	str	ip, [sp, #8]
   15a20:	str	r3, [sp, #16]
   15a24:	bl	12a0c <mmal_port_parameter_set@plt>
   15a28:	bl	17edc <mmal_status_to_int@@Base>
   15a2c:	ldr	r2, [sp, #20]
   15a30:	ldr	r3, [r6]
   15a34:	cmp	r2, r3
   15a38:	bne	15a44 <raspicamcontrol_set_colourFX@@Base+0x90>
   15a3c:	add	sp, sp, #28
   15a40:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15a44:	bl	1288c <__stack_chk_fail@plt>
   15a48:	andeq	r5, r0, r4, asr #3
   15a4c:	andeq	r8, r1, r0, lsr #12
   15a50:	andeq	r0, r0, r4, lsl #3

00015a54 <raspicamcontrol_set_rotation@@Base>:
   15a54:	movw	r2, #24759	; 0x60b7
   15a58:	movt	r2, #46603	; 0xb60b
   15a5c:	push	{r3, r4, r5, r6, r7, lr}
   15a60:	mov	r3, r1
   15a64:	smull	r1, ip, r2, r3
   15a68:	asr	r1, r3, #31
   15a6c:	mov	lr, #360	; 0x168
   15a70:	mov	r5, #90	; 0x5a
   15a74:	add	ip, ip, r3
   15a78:	mov	r6, r0
   15a7c:	ldr	r0, [r0, #32]
   15a80:	mov	r4, #2
   15a84:	rsb	ip, r1, ip, asr #8
   15a88:	movt	r4, #1
   15a8c:	mls	r3, lr, ip, r3
   15a90:	mov	r1, r4
   15a94:	ldr	r0, [r0]
   15a98:	smull	ip, r2, r2, r3
   15a9c:	asr	ip, r3, #31
   15aa0:	add	r3, r2, r3
   15aa4:	rsb	r3, ip, r3, asr #6
   15aa8:	mul	r5, r5, r3
   15aac:	mov	r2, r5
   15ab0:	bl	129f4 <mmal_port_parameter_set_int32@plt>
   15ab4:	ldr	r3, [r6, #32]
   15ab8:	mov	r2, r5
   15abc:	mov	r1, r4
   15ac0:	mov	r7, r0
   15ac4:	ldr	r0, [r3, #4]
   15ac8:	bl	129f4 <mmal_port_parameter_set_int32@plt>
   15acc:	ldr	r3, [r6, #32]
   15ad0:	mov	r2, r5
   15ad4:	mov	r1, r4
   15ad8:	ldr	r0, [r3, #8]
   15adc:	bl	129f4 <mmal_port_parameter_set_int32@plt>
   15ae0:	mov	r0, r7
   15ae4:	pop	{r3, r4, r5, r6, r7, lr}
   15ae8:	b	17edc <mmal_status_to_int@@Base>

00015aec <raspicamcontrol_set_flips@@Base>:
   15aec:	ldr	ip, [pc, #188]	; 15bb0 <raspicamcontrol_set_flips@@Base+0xc4>
   15af0:	ldr	r3, [pc, #188]	; 15bb4 <raspicamcontrol_set_flips@@Base+0xc8>
   15af4:	push	{r4, r5, r6, r7, lr}
   15af8:	mov	r5, r0
   15afc:	ldr	r0, [pc, #180]	; 15bb8 <raspicamcontrol_set_flips@@Base+0xcc>
   15b00:	add	ip, pc, ip
   15b04:	add	r3, pc, r3
   15b08:	adds	lr, r1, #0
   15b0c:	add	r3, r3, #112	; 0x70
   15b10:	sub	sp, sp, #20
   15b14:	ldr	r6, [ip, r0]
   15b18:	movne	lr, #1
   15b1c:	adds	r7, r2, #0
   15b20:	ldm	r3, {r0, r1, r2}
   15b24:	movne	r7, #1
   15b28:	ldr	r3, [r6]
   15b2c:	tst	lr, r7
   15b30:	stm	sp, {r0, r1, r2}
   15b34:	str	r3, [sp, #12]
   15b38:	movne	r3, #3
   15b3c:	strne	r3, [sp, #8]
   15b40:	bne	15b60 <raspicamcontrol_set_flips@@Base+0x74>
   15b44:	cmp	lr, #0
   15b48:	movne	r3, #2
   15b4c:	strne	r3, [sp, #8]
   15b50:	bne	15b60 <raspicamcontrol_set_flips@@Base+0x74>
   15b54:	cmp	r7, #0
   15b58:	movne	r3, #1
   15b5c:	strne	r3, [sp, #8]
   15b60:	ldr	r3, [r5, #32]
   15b64:	mov	r1, sp
   15b68:	ldr	r0, [r3]
   15b6c:	bl	12a0c <mmal_port_parameter_set@plt>
   15b70:	ldr	r3, [r5, #32]
   15b74:	mov	r1, sp
   15b78:	ldr	r0, [r3, #4]
   15b7c:	bl	12a0c <mmal_port_parameter_set@plt>
   15b80:	ldr	r3, [r5, #32]
   15b84:	mov	r1, sp
   15b88:	ldr	r0, [r3, #8]
   15b8c:	bl	12a0c <mmal_port_parameter_set@plt>
   15b90:	bl	17edc <mmal_status_to_int@@Base>
   15b94:	ldr	r2, [sp, #12]
   15b98:	ldr	r3, [r6]
   15b9c:	cmp	r2, r3
   15ba0:	bne	15bac <raspicamcontrol_set_flips@@Base+0xc0>
   15ba4:	add	sp, sp, #20
   15ba8:	pop	{r4, r5, r6, r7, pc}
   15bac:	bl	1288c <__stack_chk_fail@plt>
   15bb0:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   15bb4:	andeq	r5, r0, ip, lsl #1
   15bb8:	andeq	r0, r0, r4, lsl #3

00015bbc <raspicamcontrol_cycle_test@@Base>:
   15bbc:	ldr	r3, [pc, #1452]	; 16170 <raspicamcontrol_cycle_test@@Base+0x5b4>
   15bc0:	ldr	r2, [pc, #1452]	; 16174 <raspicamcontrol_cycle_test@@Base+0x5b8>
   15bc4:	add	r3, pc, r3
   15bc8:	push	{r4, r5, r6, lr}
   15bcc:	subs	r6, r0, #0
   15bd0:	ldr	r5, [r3, r2]
   15bd4:	sub	sp, sp, #24
   15bd8:	ldr	r3, [r5]
   15bdc:	str	r3, [sp, #20]
   15be0:	beq	15f14 <raspicamcontrol_cycle_test@@Base+0x358>
   15be4:	ldr	r4, [pc, #1420]	; 16178 <raspicamcontrol_cycle_test@@Base+0x5bc>
   15be8:	add	r4, pc, r4
   15bec:	ldr	r2, [r4]
   15bf0:	cmp	r2, #0
   15bf4:	beq	15c7c <raspicamcontrol_cycle_test@@Base+0xc0>
   15bf8:	cmp	r2, #1
   15bfc:	beq	15e70 <raspicamcontrol_cycle_test@@Base+0x2b4>
   15c00:	cmp	r2, #2
   15c04:	beq	15ea4 <raspicamcontrol_cycle_test@@Base+0x2e8>
   15c08:	cmp	r2, #3
   15c0c:	beq	15e1c <raspicamcontrol_cycle_test@@Base+0x260>
   15c10:	cmp	r2, #4
   15c14:	beq	15f48 <raspicamcontrol_cycle_test@@Base+0x38c>
   15c18:	cmp	r2, #5
   15c1c:	beq	15f78 <raspicamcontrol_cycle_test@@Base+0x3bc>
   15c20:	cmp	r2, #6
   15c24:	beq	16040 <raspicamcontrol_cycle_test@@Base+0x484>
   15c28:	cmp	r2, #7
   15c2c:	beq	15cb4 <raspicamcontrol_cycle_test@@Base+0xf8>
   15c30:	cmp	r2, #8
   15c34:	beq	15d5c <raspicamcontrol_cycle_test@@Base+0x1a0>
   15c38:	cmp	r2, #9
   15c3c:	beq	15cfc <raspicamcontrol_cycle_test@@Base+0x140>
   15c40:	cmp	r2, #10
   15c44:	beq	15c64 <raspicamcontrol_cycle_test@@Base+0xa8>
   15c48:	mov	r0, #1
   15c4c:	ldr	r2, [sp, #20]
   15c50:	ldr	r3, [r5]
   15c54:	cmp	r2, r3
   15c58:	bne	1616c <raspicamcontrol_cycle_test@@Base+0x5b0>
   15c5c:	add	sp, sp, #24
   15c60:	pop	{r4, r5, r6, pc}
   15c64:	ldr	r3, [pc, #1296]	; 1617c <raspicamcontrol_cycle_test@@Base+0x5c0>
   15c68:	mov	r2, #1
   15c6c:	mov	r0, #0
   15c70:	add	r3, pc, r3
   15c74:	str	r2, [r3]
   15c78:	b	15c4c <raspicamcontrol_cycle_test@@Base+0x90>
   15c7c:	mov	r1, #100	; 0x64
   15c80:	mvn	r0, #99	; 0x63
   15c84:	mov	r2, #10
   15c88:	bl	144c8 <_start@@Base+0x134>
   15c8c:	subs	r1, r0, #0
   15c90:	beq	15dc4 <raspicamcontrol_cycle_test@@Base+0x208>
   15c94:	ldr	r3, [pc, #1252]	; 16180 <raspicamcontrol_cycle_test@@Base+0x5c4>
   15c98:	mov	r0, r6
   15c9c:	add	r3, pc, r3
   15ca0:	ldr	r1, [r3]
   15ca4:	bl	1543c <raspicamcontrol_set_sharpness@@Base>
   15ca8:	ldr	r2, [r4]
   15cac:	cmp	r2, #7
   15cb0:	bne	15c30 <raspicamcontrol_cycle_test@@Base+0x74>
   15cb4:	mov	r1, #20
   15cb8:	mov	r0, #0
   15cbc:	mov	r2, #1
   15cc0:	bl	144c8 <_start@@Base+0x134>
   15cc4:	subs	r1, r0, #0
   15cc8:	beq	15ef4 <raspicamcontrol_cycle_test@@Base+0x338>
   15ccc:	ldr	r2, [pc, #1200]	; 16184 <raspicamcontrol_cycle_test@@Base+0x5c8>
   15cd0:	mov	r0, r6
   15cd4:	ldr	r3, [pc, #1196]	; 16188 <raspicamcontrol_cycle_test@@Base+0x5cc>
   15cd8:	add	r2, pc, r2
   15cdc:	add	r3, pc, r3
   15ce0:	ldr	r2, [r2]
   15ce4:	add	r3, r3, r2, lsl #3
   15ce8:	ldr	r1, [r3, #4]
   15cec:	bl	1593c <raspicamcontrol_set_imageFX@@Base>
   15cf0:	ldr	r3, [pc, #1172]	; 1618c <raspicamcontrol_cycle_test@@Base+0x5d0>
   15cf4:	ldr	r2, [pc, r3]
   15cf8:	b	15c30 <raspicamcontrol_cycle_test@@Base+0x74>
   15cfc:	ldr	r4, [pc, #1164]	; 16190 <raspicamcontrol_cycle_test@@Base+0x5d4>
   15d00:	add	r4, pc, r4
   15d04:	ldr	r3, [r4]
   15d08:	cmp	r3, #3
   15d0c:	beq	160a8 <raspicamcontrol_cycle_test@@Base+0x4ec>
   15d10:	ble	15ddc <raspicamcontrol_cycle_test@@Base+0x220>
   15d14:	cmp	r3, #5
   15d18:	beq	16128 <raspicamcontrol_cycle_test@@Base+0x56c>
   15d1c:	blt	16100 <raspicamcontrol_cycle_test@@Base+0x544>
   15d20:	cmp	r3, #6
   15d24:	bne	15c48 <raspicamcontrol_cycle_test@@Base+0x8c>
   15d28:	mov	r1, #0
   15d2c:	mov	r0, r6
   15d30:	mov	r2, r1
   15d34:	bl	15aec <raspicamcontrol_set_flips@@Base>
   15d38:	ldr	r3, [pc, #1108]	; 16194 <raspicamcontrol_cycle_test@@Base+0x5d8>
   15d3c:	movw	r2, #31073	; 0x7961
   15d40:	movt	r2, #65534	; 0xfffe
   15d44:	add	r3, pc, r3
   15d48:	str	r2, [r4]
   15d4c:	ldr	r2, [r3]
   15d50:	add	r2, r2, #1
   15d54:	str	r2, [r3]
   15d58:	b	15c40 <raspicamcontrol_cycle_test@@Base+0x84>
   15d5c:	ldr	r1, [pc, #1076]	; 16198 <raspicamcontrol_cycle_test@@Base+0x5dc>
   15d60:	mov	r3, #0
   15d64:	str	r3, [sp, #8]
   15d68:	add	r1, pc, r1
   15d6c:	str	r3, [sp, #12]
   15d70:	str	r3, [sp, #16]
   15d74:	ldr	r2, [r1]
   15d78:	cmp	r2, #1
   15d7c:	beq	15ed8 <raspicamcontrol_cycle_test@@Base+0x31c>
   15d80:	cmp	r2, #2
   15d84:	beq	15e50 <raspicamcontrol_cycle_test@@Base+0x294>
   15d88:	movw	r3, #31073	; 0x7961
   15d8c:	movt	r3, #65534	; 0xfffe
   15d90:	cmp	r2, r3
   15d94:	bne	15dac <raspicamcontrol_cycle_test@@Base+0x1f0>
   15d98:	mov	r3, #128	; 0x80
   15d9c:	mov	r2, #1
   15da0:	str	r3, [sp, #12]
   15da4:	str	r2, [r1]
   15da8:	str	r3, [sp, #16]
   15dac:	mov	r0, r6
   15db0:	add	r1, sp, #8
   15db4:	bl	159b4 <raspicamcontrol_set_colourFX@@Base>
   15db8:	ldr	r3, [pc, #988]	; 1619c <raspicamcontrol_cycle_test@@Base+0x5e0>
   15dbc:	ldr	r2, [pc, r3]
   15dc0:	b	15c38 <raspicamcontrol_cycle_test@@Base+0x7c>
   15dc4:	mov	r0, r6
   15dc8:	bl	1543c <raspicamcontrol_set_sharpness@@Base>
   15dcc:	ldr	r2, [r4]
   15dd0:	add	r2, r2, #1
   15dd4:	str	r2, [r4]
   15dd8:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   15ddc:	cmp	r3, #1
   15de0:	beq	160dc <raspicamcontrol_cycle_test@@Base+0x520>
   15de4:	bgt	16084 <raspicamcontrol_cycle_test@@Base+0x4c8>
   15de8:	movw	r2, #31073	; 0x7961
   15dec:	movt	r2, #65534	; 0xfffe
   15df0:	cmp	r3, r2
   15df4:	bne	15c48 <raspicamcontrol_cycle_test@@Base+0x8c>
   15df8:	mov	r0, r6
   15dfc:	mov	r1, #90	; 0x5a
   15e00:	bl	15a54 <raspicamcontrol_set_rotation@@Base>
   15e04:	ldr	r3, [pc, #916]	; 161a0 <raspicamcontrol_cycle_test@@Base+0x5e4>
   15e08:	mov	r2, #1
   15e0c:	str	r2, [r4]
   15e10:	add	r3, pc, r3
   15e14:	ldr	r2, [r3]
   15e18:	b	15c40 <raspicamcontrol_cycle_test@@Base+0x84>
   15e1c:	mov	r1, #100	; 0x64
   15e20:	mvn	r0, #99	; 0x63
   15e24:	mov	r2, #10
   15e28:	bl	144c8 <_start@@Base+0x134>
   15e2c:	subs	r1, r0, #0
   15e30:	beq	15ff0 <raspicamcontrol_cycle_test@@Base+0x434>
   15e34:	ldr	r3, [pc, #872]	; 161a4 <raspicamcontrol_cycle_test@@Base+0x5e8>
   15e38:	mov	r0, r6
   15e3c:	add	r3, pc, r3
   15e40:	ldr	r1, [r3]
   15e44:	bl	153ac <raspicamcontrol_set_saturation@@Base>
   15e48:	ldr	r2, [r4]
   15e4c:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   15e50:	ldr	r0, [pc, #848]	; 161a8 <raspicamcontrol_cycle_test@@Base+0x5ec>
   15e54:	movw	r3, #31073	; 0x7961
   15e58:	mov	r2, #9
   15e5c:	movt	r3, #65534	; 0xfffe
   15e60:	add	r0, pc, r0
   15e64:	str	r3, [r1]
   15e68:	str	r2, [r0]
   15e6c:	b	15dac <raspicamcontrol_cycle_test@@Base+0x1f0>
   15e70:	mov	r1, #100	; 0x64
   15e74:	mvn	r0, #99	; 0x63
   15e78:	mov	r2, #10
   15e7c:	bl	144c8 <_start@@Base+0x134>
   15e80:	subs	r1, r0, #0
   15e84:	beq	15fbc <raspicamcontrol_cycle_test@@Base+0x400>
   15e88:	ldr	r3, [pc, #796]	; 161ac <raspicamcontrol_cycle_test@@Base+0x5f0>
   15e8c:	mov	r0, r6
   15e90:	add	r3, pc, r3
   15e94:	ldr	r1, [r3]
   15e98:	bl	154cc <raspicamcontrol_set_contrast@@Base>
   15e9c:	ldr	r2, [r4]
   15ea0:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   15ea4:	mov	r0, #0
   15ea8:	mov	r1, #100	; 0x64
   15eac:	mov	r2, #10
   15eb0:	bl	144c8 <_start@@Base+0x134>
   15eb4:	cmp	r0, #0
   15eb8:	beq	15fd4 <raspicamcontrol_cycle_test@@Base+0x418>
   15ebc:	ldr	r3, [pc, #748]	; 161b0 <raspicamcontrol_cycle_test@@Base+0x5f4>
   15ec0:	mov	r0, r6
   15ec4:	add	r3, pc, r3
   15ec8:	ldr	r1, [r3]
   15ecc:	bl	1555c <raspicamcontrol_set_brightness@@Base>
   15ed0:	ldr	r2, [r4]
   15ed4:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   15ed8:	mov	r3, #2
   15edc:	mov	r2, #100	; 0x64
   15ee0:	str	r3, [r1]
   15ee4:	mov	r3, #200	; 0xc8
   15ee8:	str	r2, [sp, #12]
   15eec:	str	r3, [sp, #16]
   15ef0:	b	15dac <raspicamcontrol_cycle_test@@Base+0x1f0>
   15ef4:	mov	r0, r6
   15ef8:	bl	1593c <raspicamcontrol_set_imageFX@@Base>
   15efc:	ldr	r3, [pc, #688]	; 161b4 <raspicamcontrol_cycle_test@@Base+0x5f8>
   15f00:	add	r3, pc, r3
   15f04:	ldr	r2, [r3]
   15f08:	add	r2, r2, #1
   15f0c:	str	r2, [r3]
   15f10:	b	15c30 <raspicamcontrol_cycle_test@@Base+0x74>
   15f14:	ldr	r3, [pc, #668]	; 161b8 <raspicamcontrol_cycle_test@@Base+0x5fc>
   15f18:	movw	r2, #271	; 0x10f
   15f1c:	ldr	r1, [pc, #664]	; 161bc <raspicamcontrol_cycle_test@@Base+0x600>
   15f20:	add	r3, pc, r3
   15f24:	ldr	r0, [pc, #660]	; 161c0 <raspicamcontrol_cycle_test@@Base+0x604>
   15f28:	str	r3, [sp]
   15f2c:	add	r1, pc, r1
   15f30:	ldr	r3, [pc, #652]	; 161c4 <raspicamcontrol_cycle_test@@Base+0x608>
   15f34:	add	r0, pc, r0
   15f38:	add	r1, r1, #124	; 0x7c
   15f3c:	add	r3, pc, r3
   15f40:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   15f44:	b	15be4 <raspicamcontrol_cycle_test@@Base+0x28>
   15f48:	mov	r1, #10
   15f4c:	mvn	r0, #9
   15f50:	bl	144c8 <_start@@Base+0x134>
   15f54:	subs	r1, r0, #0
   15f58:	beq	1600c <raspicamcontrol_cycle_test@@Base+0x450>
   15f5c:	ldr	r3, [pc, #612]	; 161c8 <raspicamcontrol_cycle_test@@Base+0x60c>
   15f60:	mov	r0, r6
   15f64:	add	r3, pc, r3
   15f68:	ldr	r1, [r3]
   15f6c:	bl	156c0 <raspicamcontrol_set_exposure_compensation@@Base>
   15f70:	ldr	r2, [r4]
   15f74:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   15f78:	mov	r0, #0
   15f7c:	mov	r1, #13
   15f80:	mov	r2, #1
   15f84:	bl	144c8 <_start@@Base+0x134>
   15f88:	cmp	r0, #0
   15f8c:	beq	16024 <raspicamcontrol_cycle_test@@Base+0x468>
   15f90:	ldr	r2, [pc, #564]	; 161cc <raspicamcontrol_cycle_test@@Base+0x610>
   15f94:	mov	r0, r6
   15f98:	ldr	r3, [pc, #560]	; 161d0 <raspicamcontrol_cycle_test@@Base+0x614>
   15f9c:	add	r2, pc, r2
   15fa0:	add	r3, pc, r3
   15fa4:	ldr	r2, [r2]
   15fa8:	add	r3, r3, r2, lsl #3
   15fac:	ldr	r1, [r3, #744]	; 0x2e8
   15fb0:	bl	156f0 <raspicamcontrol_set_exposure_mode@@Base>
   15fb4:	ldr	r2, [r4]
   15fb8:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   15fbc:	mov	r0, r6
   15fc0:	bl	154cc <raspicamcontrol_set_contrast@@Base>
   15fc4:	ldr	r2, [r4]
   15fc8:	add	r2, r2, #1
   15fcc:	str	r2, [r4]
   15fd0:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   15fd4:	mov	r0, r6
   15fd8:	mov	r1, #50	; 0x32
   15fdc:	bl	1555c <raspicamcontrol_set_brightness@@Base>
   15fe0:	ldr	r2, [r4]
   15fe4:	add	r2, r2, #1
   15fe8:	str	r2, [r4]
   15fec:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   15ff0:	ldr	r3, [r4]
   15ff4:	mov	r0, r6
   15ff8:	add	r3, r3, #1
   15ffc:	str	r3, [r4]
   16000:	bl	153ac <raspicamcontrol_set_saturation@@Base>
   16004:	ldr	r2, [r4]
   16008:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   1600c:	mov	r0, r6
   16010:	bl	156c0 <raspicamcontrol_set_exposure_compensation@@Base>
   16014:	ldr	r2, [r4]
   16018:	add	r2, r2, #1
   1601c:	str	r2, [r4]
   16020:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   16024:	mov	r0, r6
   16028:	mov	r1, #1
   1602c:	bl	156f0 <raspicamcontrol_set_exposure_mode@@Base>
   16030:	ldr	r2, [r4]
   16034:	add	r2, r2, #1
   16038:	str	r2, [r4]
   1603c:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   16040:	mov	r0, #0
   16044:	mov	r1, #10
   16048:	mov	r2, #1
   1604c:	bl	144c8 <_start@@Base+0x134>
   16050:	cmp	r0, #0
   16054:	beq	16150 <raspicamcontrol_cycle_test@@Base+0x594>
   16058:	ldr	r2, [pc, #372]	; 161d4 <raspicamcontrol_cycle_test@@Base+0x618>
   1605c:	mov	r0, r6
   16060:	ldr	r3, [pc, #368]	; 161d8 <raspicamcontrol_cycle_test@@Base+0x61c>
   16064:	add	r2, pc, r2
   16068:	add	r3, pc, r3
   1606c:	ldr	r2, [r2]
   16070:	add	r3, r3, r2, lsl #3
   16074:	ldr	r1, [r3, #880]	; 0x370
   16078:	bl	157e0 <raspicamcontrol_set_awb_mode@@Base>
   1607c:	ldr	r2, [r4]
   16080:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   16084:	mov	r0, r6
   16088:	movw	r1, #270	; 0x10e
   1608c:	bl	15a54 <raspicamcontrol_set_rotation@@Base>
   16090:	ldr	r3, [pc, #324]	; 161dc <raspicamcontrol_cycle_test@@Base+0x620>
   16094:	mov	r2, #3
   16098:	str	r2, [r4]
   1609c:	add	r3, pc, r3
   160a0:	ldr	r2, [r3]
   160a4:	b	15c40 <raspicamcontrol_cycle_test@@Base+0x84>
   160a8:	mov	r1, #0
   160ac:	mov	r0, r6
   160b0:	bl	15a54 <raspicamcontrol_set_rotation@@Base>
   160b4:	mov	r2, #0
   160b8:	mov	r0, r6
   160bc:	mov	r1, #1
   160c0:	bl	15aec <raspicamcontrol_set_flips@@Base>
   160c4:	ldr	r3, [pc, #276]	; 161e0 <raspicamcontrol_cycle_test@@Base+0x624>
   160c8:	mov	r2, #4
   160cc:	str	r2, [r4]
   160d0:	add	r3, pc, r3
   160d4:	ldr	r2, [r3]
   160d8:	b	15c40 <raspicamcontrol_cycle_test@@Base+0x84>
   160dc:	mov	r0, r6
   160e0:	mov	r1, #180	; 0xb4
   160e4:	bl	15a54 <raspicamcontrol_set_rotation@@Base>
   160e8:	ldr	r3, [pc, #244]	; 161e4 <raspicamcontrol_cycle_test@@Base+0x628>
   160ec:	mov	r2, #2
   160f0:	str	r2, [r4]
   160f4:	add	r3, pc, r3
   160f8:	ldr	r2, [r3]
   160fc:	b	15c40 <raspicamcontrol_cycle_test@@Base+0x84>
   16100:	mov	r2, #1
   16104:	mov	r0, r6
   16108:	mov	r1, #0
   1610c:	bl	15aec <raspicamcontrol_set_flips@@Base>
   16110:	ldr	r3, [pc, #208]	; 161e8 <raspicamcontrol_cycle_test@@Base+0x62c>
   16114:	mov	r2, #5
   16118:	str	r2, [r4]
   1611c:	add	r3, pc, r3
   16120:	ldr	r2, [r3]
   16124:	b	15c40 <raspicamcontrol_cycle_test@@Base+0x84>
   16128:	mov	r1, #1
   1612c:	mov	r0, r6
   16130:	mov	r2, r1
   16134:	bl	15aec <raspicamcontrol_set_flips@@Base>
   16138:	ldr	r3, [pc, #172]	; 161ec <raspicamcontrol_cycle_test@@Base+0x630>
   1613c:	mov	r2, #6
   16140:	str	r2, [r4]
   16144:	add	r3, pc, r3
   16148:	ldr	r2, [r3]
   1614c:	b	15c40 <raspicamcontrol_cycle_test@@Base+0x84>
   16150:	mov	r0, r6
   16154:	mov	r1, #1
   16158:	bl	157e0 <raspicamcontrol_set_awb_mode@@Base>
   1615c:	ldr	r2, [r4]
   16160:	add	r2, r2, #1
   16164:	str	r2, [r4]
   16168:	b	15c28 <raspicamcontrol_cycle_test@@Base+0x6c>
   1616c:	bl	1288c <__stack_chk_fail@plt>
   16170:	andeq	r8, r1, r4, lsr r4
   16174:	andeq	r0, r0, r4, lsl #3
   16178:	andeq	r8, r1, ip, asr #23
   1617c:	andeq	r8, r1, r4, asr #22
   16180:	andeq	r8, r1, r8, lsl #10
   16184:	andeq	r8, r1, ip, asr #9
   16188:	andeq	r8, r1, ip, asr #9
   1618c:	andeq	r8, r1, r0, asr #21
   16190:	andeq	r8, r1, r4, lsr #9
   16194:	andeq	r8, r1, r0, ror sl
   16198:	andeq	r8, r1, ip, lsr r4
   1619c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   161a0:	andeq	r8, r1, r4, lsr #19
   161a4:	andeq	r8, r1, r8, ror #6
   161a8:	andeq	r8, r1, r4, asr r9
   161ac:	andeq	r8, r1, r4, lsl r3
   161b0:	andeq	r8, r1, r0, ror #5
   161b4:			; <UNDEFINED> instruction: 0x000188b4
   161b8:	ldrdeq	r5, [r0], -r4
   161bc:	andeq	r4, r0, r4, ror #24
   161c0:	andeq	r5, r0, r8, lsr r0
   161c4:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   161c8:	andeq	r8, r1, r0, asr #4
   161cc:	andeq	r8, r1, r8, lsl #4
   161d0:	andeq	r8, r1, r8, lsl #4
   161d4:	andeq	r8, r1, r0, asr #2
   161d8:	andeq	r8, r1, r0, asr #2
   161dc:	andeq	r8, r1, r8, lsl r7
   161e0:	andeq	r8, r1, r4, ror #13
   161e4:	andeq	r8, r1, r0, asr #13
   161e8:	muleq	r1, r8, r6
   161ec:	andeq	r8, r1, r0, ror r6

000161f0 <raspicamcontrol_set_ROI@@Base>:
   161f0:	push	{r4, lr}
   161f4:	vldr	d7, [pc, #156]	; 16298 <raspicamcontrol_set_ROI@@Base+0xa8>
   161f8:	sub	sp, sp, #64	; 0x40
   161fc:	vstr	d1, [sp, #8]
   16200:	vmul.f64	d6, d0, d7
   16204:	vstr	d2, [sp, #16]
   16208:	ldr	r2, [pc, #144]	; 162a0 <raspicamcontrol_set_ROI@@Base+0xb0>
   1620c:	vstr	d0, [sp]
   16210:	ldr	lr, [pc, #140]	; 162a4 <raspicamcontrol_set_ROI@@Base+0xb4>
   16214:	vstr	d3, [sp, #24]
   16218:	add	r2, pc, r2
   1621c:	mov	r3, #37	; 0x25
   16220:	movt	r3, #1
   16224:	add	r1, sp, #36	; 0x24
   16228:	ldr	r4, [r2, lr]
   1622c:	mov	ip, #24
   16230:	str	r3, [sp, #36]	; 0x24
   16234:	ldr	r0, [r0, #16]
   16238:	ldr	r3, [r4]
   1623c:	str	ip, [sp, #40]	; 0x28
   16240:	str	r3, [sp, #60]	; 0x3c
   16244:	vmul.f64	d1, d1, d7
   16248:	vmul.f64	d2, d2, d7
   1624c:	vmul.f64	d7, d3, d7
   16250:	vcvt.s32.f64	s12, d6
   16254:	vcvt.s32.f64	s2, d1
   16258:	vstr	s12, [sp, #44]	; 0x2c
   1625c:	vcvt.s32.f64	s4, d2
   16260:	vstr	s2, [sp, #48]	; 0x30
   16264:	vcvt.s32.f64	s14, d7
   16268:	vstr	s4, [sp, #52]	; 0x34
   1626c:	vstr	s14, [sp, #56]	; 0x38
   16270:	bl	12a0c <mmal_port_parameter_set@plt>
   16274:	bl	17edc <mmal_status_to_int@@Base>
   16278:	ldr	r2, [sp, #60]	; 0x3c
   1627c:	ldr	r3, [r4]
   16280:	cmp	r2, r3
   16284:	bne	16290 <raspicamcontrol_set_ROI@@Base+0xa0>
   16288:	add	sp, sp, #64	; 0x40
   1628c:	pop	{r4, pc}
   16290:	bl	1288c <__stack_chk_fail@plt>
   16294:	nop	{0}
   16298:	andeq	r0, r0, r0
   1629c:	rscsmi	r0, r0, r0
   162a0:	andeq	r7, r1, r0, ror #27
   162a4:	andeq	r0, r0, r4, lsl #3

000162a8 <raspicamcontrol_zoom_in_zoom_out@@Base>:
   162a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   162ac:	sub	sp, sp, #44	; 0x2c
   162b0:	ldr	r4, [pc, #488]	; 164a0 <raspicamcontrol_zoom_in_zoom_out@@Base+0x1f8>
   162b4:	add	r6, sp, #12
   162b8:	ldr	r3, [pc, #484]	; 164a4 <raspicamcontrol_zoom_in_zoom_out@@Base+0x1fc>
   162bc:	mov	r8, r2
   162c0:	add	r4, pc, r4
   162c4:	mov	r2, #24
   162c8:	mov	r7, r0
   162cc:	mov	r9, r1
   162d0:	ldr	r5, [r4, r3]
   162d4:	mov	r1, r6
   162d8:	str	r2, [sp, #16]
   162dc:	mov	r3, #37	; 0x25
   162e0:	ldr	r0, [r0, #16]
   162e4:	movt	r3, #1
   162e8:	ldr	r2, [r5]
   162ec:	str	r3, [sp, #12]
   162f0:	str	r2, [sp, #36]	; 0x24
   162f4:	bl	12b14 <mmal_port_parameter_get@plt>
   162f8:	cmp	r0, #0
   162fc:	beq	16344 <raspicamcontrol_zoom_in_zoom_out@@Base+0x9c>
   16300:	ldr	r3, [pc, #416]	; 164a8 <raspicamcontrol_zoom_in_zoom_out@@Base+0x200>
   16304:	ldr	r0, [r4, r3]
   16308:	ldr	r3, [r0]
   1630c:	cmp	r3, #1
   16310:	movls	r0, #0
   16314:	bls	1632c <raspicamcontrol_zoom_in_zoom_out@@Base+0x84>
   16318:	ldr	r2, [pc, #396]	; 164ac <raspicamcontrol_zoom_in_zoom_out@@Base+0x204>
   1631c:	mov	r1, #2
   16320:	add	r2, pc, r2
   16324:	bl	12754 <vcos_log_impl@plt>
   16328:	mov	r0, #0
   1632c:	ldr	r2, [sp, #36]	; 0x24
   16330:	ldr	r3, [r5]
   16334:	cmp	r2, r3
   16338:	bne	16490 <raspicamcontrol_zoom_in_zoom_out@@Base+0x1e8>
   1633c:	add	sp, sp, #44	; 0x2c
   16340:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16344:	cmp	r9, #0
   16348:	bne	1638c <raspicamcontrol_zoom_in_zoom_out@@Base+0xe4>
   1634c:	ldr	r3, [sp, #28]
   16350:	cmp	r3, #16384	; 0x4000
   16354:	bcc	163f8 <raspicamcontrol_zoom_in_zoom_out@@Base+0x150>
   16358:	sub	r0, r3, #6528	; 0x1980
   1635c:	ldr	r3, [sp, #32]
   16360:	sub	r0, r0, #25
   16364:	str	r0, [sp, #28]
   16368:	rsb	r0, r0, #65536	; 0x10000
   1636c:	sub	r3, r3, #6528	; 0x1980
   16370:	sub	r3, r3, #25
   16374:	str	r3, [sp, #32]
   16378:	add	r0, r0, r0, lsr #31
   1637c:	asr	r0, r0, #1
   16380:	str	r0, [sp, #20]
   16384:	str	r0, [sp, #24]
   16388:	b	163b0 <raspicamcontrol_zoom_in_zoom_out@@Base+0x108>
   1638c:	cmp	r9, #1
   16390:	beq	1640c <raspicamcontrol_zoom_in_zoom_out@@Base+0x164>
   16394:	cmp	r9, #2
   16398:	bne	1647c <raspicamcontrol_zoom_in_zoom_out@@Base+0x1d4>
   1639c:	mov	r3, #65536	; 0x10000
   163a0:	str	r0, [sp, #20]
   163a4:	str	r0, [sp, #24]
   163a8:	str	r3, [sp, #28]
   163ac:	str	r3, [sp, #32]
   163b0:	mov	r1, r6
   163b4:	ldr	r0, [r7, #16]
   163b8:	bl	12a0c <mmal_port_parameter_set@plt>
   163bc:	bl	17edc <mmal_status_to_int@@Base>
   163c0:	cmp	r0, #0
   163c4:	bne	16440 <raspicamcontrol_zoom_in_zoom_out@@Base+0x198>
   163c8:	vldr	s9, [sp, #20]
   163cc:	vcvt.f64.s32	d6, s9
   163d0:	vldr	s9, [sp, #28]
   163d4:	vldr	d7, [pc, #188]	; 16498 <raspicamcontrol_zoom_in_zoom_out@@Base+0x1f0>
   163d8:	vcvt.f64.s32	d5, s9
   163dc:	vmul.f64	d6, d6, d7
   163e0:	vmul.f64	d7, d5, d7
   163e4:	vstr	d6, [r8, #8]
   163e8:	vstr	d6, [r8]
   163ec:	vstr	d7, [r8, #24]
   163f0:	vstr	d7, [r8, #16]
   163f4:	b	1632c <raspicamcontrol_zoom_in_zoom_out@@Base+0x84>
   163f8:	movw	r3, #9830	; 0x2666
   163fc:	movw	r0, #27853	; 0x6ccd
   16400:	str	r3, [sp, #28]
   16404:	str	r3, [sp, #32]
   16408:	b	16380 <raspicamcontrol_zoom_in_zoom_out@@Base+0xd8>
   1640c:	ldr	r2, [sp, #28]
   16410:	add	r3, r2, #6528	; 0x1980
   16414:	add	r3, r3, #25
   16418:	cmp	r2, r3
   1641c:	strls	r3, [sp, #28]
   16420:	rsbls	r0, r3, #65536	; 0x10000
   16424:	strls	r3, [sp, #32]
   16428:	movhi	r3, #65536	; 0x10000
   1642c:	strhi	r3, [sp, #28]
   16430:	addls	r0, r0, r0, lsr #31
   16434:	strhi	r3, [sp, #32]
   16438:	asrls	r0, r0, #1
   1643c:	b	16380 <raspicamcontrol_zoom_in_zoom_out@@Base+0xd8>
   16440:	ldr	r3, [pc, #96]	; 164a8 <raspicamcontrol_zoom_in_zoom_out@@Base+0x200>
   16444:	ldr	r0, [r4, r3]
   16448:	ldr	r3, [r0]
   1644c:	cmp	r3, #1
   16450:	movls	r0, #1
   16454:	bls	1632c <raspicamcontrol_zoom_in_zoom_out@@Base+0x84>
   16458:	ldr	ip, [sp, #28]
   1645c:	mov	r1, #2
   16460:	ldr	r2, [pc, #72]	; 164b0 <raspicamcontrol_zoom_in_zoom_out@@Base+0x208>
   16464:	ldr	r3, [sp, #20]
   16468:	add	r2, pc, r2
   1646c:	str	ip, [sp]
   16470:	bl	12754 <vcos_log_impl@plt>
   16474:	mov	r0, #1
   16478:	b	1632c <raspicamcontrol_zoom_in_zoom_out@@Base+0x84>
   1647c:	ldr	r0, [sp, #28]
   16480:	rsb	r0, r0, #65536	; 0x10000
   16484:	add	r0, r0, r0, lsr #31
   16488:	asr	r0, r0, #1
   1648c:	b	16380 <raspicamcontrol_zoom_in_zoom_out@@Base+0xd8>
   16490:	bl	1288c <__stack_chk_fail@plt>
   16494:	nop	{0}
   16498:	andeq	r0, r0, r0
   1649c:	cdpcc	0, 15, cr0, cr0, cr0, {0}
   164a0:	andeq	r7, r1, r8, lsr sp
   164a4:	andeq	r0, r0, r4, lsl #3
   164a8:	andeq	r0, r0, r0, lsl #3
   164ac:	andeq	r4, r0, r8, lsr #26
   164b0:	andeq	r4, r0, r4, lsr #24

000164b4 <raspicamcontrol_set_shutter_speed@@Base>:
   164b4:	cmp	r0, #0
   164b8:	push	{r3, lr}
   164bc:	beq	164dc <raspicamcontrol_set_shutter_speed@@Base+0x28>
   164c0:	mov	r2, r1
   164c4:	ldr	r0, [r0, #16]
   164c8:	mov	r1, #67	; 0x43
   164cc:	movt	r1, #1
   164d0:	bl	127fc <mmal_port_parameter_set_uint32@plt>
   164d4:	pop	{r3, lr}
   164d8:	b	17edc <mmal_status_to_int@@Base>
   164dc:	mov	r0, #1
   164e0:	pop	{r3, pc}

000164e4 <raspicamcontrol_set_DRC@@Base>:
   164e4:	ldr	r2, [pc, #104]	; 16554 <raspicamcontrol_set_DRC@@Base+0x70>
   164e8:	mov	r3, #42	; 0x2a
   164ec:	push	{r4, lr}
   164f0:	add	r2, pc, r2
   164f4:	ldr	r4, [pc, #92]	; 16558 <raspicamcontrol_set_DRC@@Base+0x74>
   164f8:	sub	sp, sp, #16
   164fc:	movt	r3, #1
   16500:	cmp	r0, #0
   16504:	mov	ip, #12
   16508:	ldr	r4, [r2, r4]
   1650c:	moveq	r0, #1
   16510:	str	r3, [sp]
   16514:	str	r1, [sp, #8]
   16518:	ldr	r3, [r4]
   1651c:	str	ip, [sp, #4]
   16520:	str	r3, [sp, #12]
   16524:	beq	16538 <raspicamcontrol_set_DRC@@Base+0x54>
   16528:	mov	r1, sp
   1652c:	ldr	r0, [r0, #16]
   16530:	bl	12a0c <mmal_port_parameter_set@plt>
   16534:	bl	17edc <mmal_status_to_int@@Base>
   16538:	ldr	r2, [sp, #12]
   1653c:	ldr	r3, [r4]
   16540:	cmp	r2, r3
   16544:	bne	16550 <raspicamcontrol_set_DRC@@Base+0x6c>
   16548:	add	sp, sp, #16
   1654c:	pop	{r4, pc}
   16550:	bl	1288c <__stack_chk_fail@plt>
   16554:	andeq	r7, r1, r8, lsl #22
   16558:	andeq	r0, r0, r4, lsl #3

0001655c <raspicamcontrol_set_stats_pass@@Base>:
   1655c:	cmp	r0, #0
   16560:	push	{r3, lr}
   16564:	beq	16584 <raspicamcontrol_set_stats_pass@@Base+0x28>
   16568:	mov	r2, r1
   1656c:	ldr	r0, [r0, #16]
   16570:	mov	r1, #54	; 0x36
   16574:	movt	r1, #1
   16578:	bl	12b74 <mmal_port_parameter_set_boolean@plt>
   1657c:	pop	{r3, lr}
   16580:	b	17edc <mmal_status_to_int@@Base>
   16584:	mov	r0, #1
   16588:	pop	{r3, pc}

0001658c <raspicamcontrol_set_annotate@@Base>:
   1658c:	ldr	ip, [pc, #700]	; 16850 <raspicamcontrol_set_annotate@@Base+0x2c4>
   16590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16594:	add	ip, pc, ip
   16598:	ldr	lr, [pc, #692]	; 16854 <raspicamcontrol_set_annotate@@Base+0x2c8>
   1659c:	sub	sp, sp, #636	; 0x27c
   165a0:	add	r4, sp, #48	; 0x30
   165a4:	mov	r7, r3
   165a8:	mov	r9, #324	; 0x144
   165ac:	mov	sl, r1
   165b0:	ldr	r5, [ip, lr]
   165b4:	mov	r6, r0
   165b8:	mov	r8, r2
   165bc:	mov	r0, r4
   165c0:	mov	r2, r9
   165c4:	mov	r1, #0
   165c8:	ldr	r3, [r5]
   165cc:	str	r3, [sp, #628]	; 0x274
   165d0:	bl	12a30 <memset@plt>
   165d4:	cmp	sl, #0
   165d8:	mov	r3, #73	; 0x49
   165dc:	str	r9, [sp, #52]	; 0x34
   165e0:	movt	r3, #1
   165e4:	str	r3, [sp, #48]	; 0x30
   165e8:	bne	16614 <raspicamcontrol_set_annotate@@Base+0x88>
   165ec:	mov	r1, r4
   165f0:	ldr	r0, [r6, #16]
   165f4:	bl	12a0c <mmal_port_parameter_set@plt>
   165f8:	bl	17edc <mmal_status_to_int@@Base>
   165fc:	ldr	r2, [sp, #628]	; 0x274
   16600:	ldr	r3, [r5]
   16604:	cmp	r2, r3
   16608:	bne	1684c <raspicamcontrol_set_annotate@@Base+0x2c0>
   1660c:	add	sp, sp, #636	; 0x27c
   16610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16614:	mov	r0, #0
   16618:	add	r9, sp, #4
   1661c:	bl	1285c <time@plt>
   16620:	add	r3, sp, #632	; 0x278
   16624:	mov	fp, #1
   16628:	str	r0, [r3, #-632]!	; 0xfffffd88
   1662c:	mov	r0, sp
   16630:	bl	1297c <localtime@plt>
   16634:	mov	ip, r9
   16638:	tst	sl, #3
   1663c:	mov	lr, r0
   16640:	ldm	lr!, {r0, r1, r2, r3}
   16644:	str	fp, [sp, #56]	; 0x38
   16648:	stmia	ip!, {r0, r1, r2, r3}
   1664c:	ldm	lr!, {r0, r1, r2, r3}
   16650:	stmia	ip!, {r0, r1, r2, r3}
   16654:	ldm	lr, {r0, r1, r2}
   16658:	stm	ip, {r0, r1, r2}
   1665c:	beq	1677c <raspicamcontrol_set_annotate@@Base+0x1f0>
   16660:	tst	sl, #12
   16664:	beq	16764 <raspicamcontrol_set_annotate@@Base+0x1d8>
   16668:	mov	r0, r8
   1666c:	mov	r1, #37	; 0x25
   16670:	bl	129e8 <strchr@plt>
   16674:	cmp	r0, #0
   16678:	beq	16764 <raspicamcontrol_set_annotate@@Base+0x1d8>
   1667c:	mov	r3, r9
   16680:	mov	r2, r8
   16684:	add	r0, sp, #104	; 0x68
   16688:	mov	r1, #256	; 0x100
   1668c:	bl	12964 <strftime@plt>
   16690:	mov	r3, #0
   16694:	strb	r3, [sp, #359]	; 0x167
   16698:	tst	sl, #16
   1669c:	ldr	ip, [sp, #672]	; 0x2a0
   166a0:	ldr	r1, [sp, #680]	; 0x2a8
   166a4:	movne	r3, #1
   166a8:	strne	r3, [sp, #60]	; 0x3c
   166ac:	tst	sl, #64	; 0x40
   166b0:	strb	r7, [sp, #103]	; 0x67
   166b4:	str	r1, [sp, #360]	; 0x168
   166b8:	movne	r3, #1
   166bc:	strne	r3, [sp, #64]	; 0x40
   166c0:	tst	sl, #128	; 0x80
   166c4:	movne	r3, #1
   166c8:	strne	r3, [sp, #68]	; 0x44
   166cc:	tst	sl, #32
   166d0:	movne	r3, #1
   166d4:	strne	r3, [sp, #72]	; 0x48
   166d8:	tst	sl, #256	; 0x100
   166dc:	movne	r3, #1
   166e0:	strne	r3, [sp, #76]	; 0x4c
   166e4:	tst	sl, #512	; 0x200
   166e8:	movne	r3, #1
   166ec:	strne	r3, [sp, #80]	; 0x50
   166f0:	tst	sl, #1024	; 0x400
   166f4:	movne	r3, #1
   166f8:	strne	r3, [sp, #84]	; 0x54
   166fc:	cmn	ip, #1
   16700:	strbne	ip, [sp, #100]	; 0x64
   16704:	asrne	r3, ip, #8
   16708:	strbne	r3, [sp, #101]	; 0x65
   1670c:	asrne	r3, ip, #16
   16710:	ldr	ip, [sp, #676]	; 0x2a4
   16714:	movne	r2, #1
   16718:	moveq	r3, #0
   1671c:	strbne	r3, [sp, #102]	; 0x66
   16720:	strne	r2, [sp, #96]	; 0x60
   16724:	streq	r3, [sp, #96]	; 0x60
   16728:	cmn	ip, #1
   1672c:	asrne	r3, ip, #8
   16730:	strbne	r3, [sp, #93]	; 0x5d
   16734:	movne	r2, #1
   16738:	asrne	r3, ip, #16
   1673c:	moveq	r3, #0
   16740:	strne	r2, [sp, #88]	; 0x58
   16744:	strbne	r3, [sp, #94]	; 0x5e
   16748:	streq	r3, [sp, #88]	; 0x58
   1674c:	ldr	r2, [sp, #684]	; 0x2ac
   16750:	ldr	r3, [sp, #688]	; 0x2b0
   16754:	strbne	ip, [sp, #92]	; 0x5c
   16758:	str	r2, [sp, #364]	; 0x16c
   1675c:	str	r3, [sp, #368]	; 0x170
   16760:	b	165ec <raspicamcontrol_set_annotate@@Base+0x60>
   16764:	mov	r1, r8
   16768:	add	r0, sp, #104	; 0x68
   1676c:	mov	r2, #256	; 0x100
   16770:	bl	12a3c <strncpy@plt>
   16774:	mov	r3, #0
   16778:	strb	r3, [sp, #359]	; 0x167
   1677c:	tst	sl, #8
   16780:	beq	167cc <raspicamcontrol_set_annotate@@Base+0x240>
   16784:	ldrb	r3, [sp, #104]	; 0x68
   16788:	add	r8, sp, #372	; 0x174
   1678c:	mov	r1, #32
   16790:	cmp	r3, #0
   16794:	bne	16834 <raspicamcontrol_set_annotate@@Base+0x2a8>
   16798:	ldr	r2, [pc, #184]	; 16858 <raspicamcontrol_set_annotate@@Base+0x2cc>
   1679c:	mov	r3, r9
   167a0:	mov	r0, r8
   167a4:	add	r2, pc, r2
   167a8:	bl	12964 <strftime@plt>
   167ac:	add	fp, sp, #104	; 0x68
   167b0:	mov	r0, fp
   167b4:	bl	129dc <strlen@plt>
   167b8:	mov	r1, r8
   167bc:	mov	r3, #256	; 0x100
   167c0:	rsb	r2, r0, #255	; 0xff
   167c4:	mov	r0, fp
   167c8:	bl	12778 <__strncat_chk@plt>
   167cc:	tst	sl, #4
   167d0:	beq	16698 <raspicamcontrol_set_annotate@@Base+0x10c>
   167d4:	ldrb	r3, [sp, #104]	; 0x68
   167d8:	add	r8, sp, #372	; 0x174
   167dc:	mov	r1, #32
   167e0:	cmp	r3, #0
   167e4:	mov	r3, r9
   167e8:	bne	16820 <raspicamcontrol_set_annotate@@Base+0x294>
   167ec:	ldr	r2, [pc, #104]	; 1685c <raspicamcontrol_set_annotate@@Base+0x2d0>
   167f0:	mov	r0, r8
   167f4:	add	r2, pc, r2
   167f8:	bl	12964 <strftime@plt>
   167fc:	add	r9, sp, #104	; 0x68
   16800:	mov	r0, r9
   16804:	bl	129dc <strlen@plt>
   16808:	mov	r1, r8
   1680c:	mov	r3, #256	; 0x100
   16810:	rsb	r2, r0, #255	; 0xff
   16814:	mov	r0, r9
   16818:	bl	12778 <__strncat_chk@plt>
   1681c:	b	16698 <raspicamcontrol_set_annotate@@Base+0x10c>
   16820:	ldr	r2, [pc, #56]	; 16860 <raspicamcontrol_set_annotate@@Base+0x2d4>
   16824:	mov	r0, r8
   16828:	add	r2, pc, r2
   1682c:	bl	12964 <strftime@plt>
   16830:	b	167fc <raspicamcontrol_set_annotate@@Base+0x270>
   16834:	ldr	r2, [pc, #40]	; 16864 <raspicamcontrol_set_annotate@@Base+0x2d8>
   16838:	mov	r3, r9
   1683c:	mov	r0, r8
   16840:	add	r2, pc, r2
   16844:	bl	12964 <strftime@plt>
   16848:	b	167ac <raspicamcontrol_set_annotate@@Base+0x220>
   1684c:	bl	1288c <__stack_chk_fail@plt>
   16850:	andeq	r7, r1, r4, ror #20
   16854:	andeq	r0, r0, r4, lsl #3
   16858:	andeq	r4, r0, r8, lsl r9
   1685c:	ldrdeq	r4, [r0], -r0
   16860:	muleq	r0, r8, r8
   16864:	andeq	r4, r0, r8, ror r8

00016868 <raspicamcontrol_set_stereo_mode@@Base>:
   16868:	push	{r4, r5, r6, r7, r8, r9, lr}
   1686c:	mov	r4, r1
   16870:	ldr	lr, [pc, #128]	; 168f8 <raspicamcontrol_set_stereo_mode@@Base+0x90>
   16874:	mov	r8, r0
   16878:	ldr	ip, [pc, #124]	; 168fc <raspicamcontrol_set_stereo_mode@@Base+0x94>
   1687c:	sub	sp, sp, #28
   16880:	add	lr, pc, lr
   16884:	ldr	r5, [pc, #116]	; 16900 <raspicamcontrol_set_stereo_mode@@Base+0x98>
   16888:	add	lr, lr, #152	; 0x98
   1688c:	ldr	r7, [r1, #8]
   16890:	add	ip, pc, ip
   16894:	ldm	lr!, {r0, r1, r2, r3}
   16898:	cmp	r7, #0
   1689c:	ldr	r5, [ip, r5]
   168a0:	mov	ip, sp
   168a4:	stmia	ip!, {r0, r1, r2, r3}
   168a8:	mov	r1, sp
   168ac:	ldrne	r2, [r4, #12]
   168b0:	mov	r0, r8
   168b4:	ldrne	r3, [r4, #16]
   168b8:	ldr	lr, [lr]
   168bc:	ldr	r9, [r5]
   168c0:	strne	r2, [sp, #12]
   168c4:	str	lr, [ip]
   168c8:	strne	r7, [sp, #8]
   168cc:	strne	r3, [sp, #16]
   168d0:	str	r9, [sp, #20]
   168d4:	bl	12a0c <mmal_port_parameter_set@plt>
   168d8:	bl	17edc <mmal_status_to_int@@Base>
   168dc:	ldr	r2, [sp, #20]
   168e0:	ldr	r3, [r5]
   168e4:	cmp	r2, r3
   168e8:	bne	168f4 <raspicamcontrol_set_stereo_mode@@Base+0x8c>
   168ec:	add	sp, sp, #28
   168f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   168f4:	bl	1288c <__stack_chk_fail@plt>
   168f8:	andeq	r4, r0, r0, lsl r3
   168fc:	andeq	r7, r1, r8, ror #14
   16900:	andeq	r0, r0, r4, lsl #3

00016904 <raspicamcontrol_set_gains@@Base>:
   16904:	push	{r4, r5, lr}
   16908:	vpush	{d8}
   1690c:	subs	r5, r0, #0
   16910:	sub	sp, sp, #12
   16914:	mov	r3, #65536	; 0x10000
   16918:	vmov.f32	s17, s1
   1691c:	str	r3, [sp, #4]
   16920:	beq	16988 <raspicamcontrol_set_gains@@Base+0x84>
   16924:	vldr	s16, [pc, #108]	; 16998 <raspicamcontrol_set_gains@@Base+0x94>
   16928:	add	r4, sp, #8
   1692c:	mov	r1, #89	; 0x59
   16930:	ldr	r0, [r5, #16]
   16934:	vmul.f32	s0, s0, s16
   16938:	movt	r1, #1
   1693c:	vcvt.u32.f32	s0, s0
   16940:	vmov	r3, s0
   16944:	str	r3, [r4, #-8]!
   16948:	ldm	r4, {r2, r3}
   1694c:	bl	12ad8 <mmal_port_parameter_set_rational@plt>
   16950:	cmp	r0, #0
   16954:	bne	16978 <raspicamcontrol_set_gains@@Base+0x74>
   16958:	vmul.f32	s16, s17, s16
   1695c:	mov	r1, #90	; 0x5a
   16960:	ldr	r0, [r5, #16]
   16964:	movt	r1, #1
   16968:	vcvt.u32.f32	s16, s16
   1696c:	vstr	s16, [sp]
   16970:	ldm	r4, {r2, r3}
   16974:	bl	12ad8 <mmal_port_parameter_set_rational@plt>
   16978:	add	sp, sp, #12
   1697c:	vpop	{d8}
   16980:	pop	{r4, r5, lr}
   16984:	b	17edc <mmal_status_to_int@@Base>
   16988:	mov	r0, #1
   1698c:	add	sp, sp, #12
   16990:	vpop	{d8}
   16994:	pop	{r4, r5, pc}
   16998:	strmi	r0, [r0, r0]

0001699c <raspicamcontrol_set_all_parameters@@Base>:
   1699c:	push	{r4, r5, r6, r7, r8, lr}
   169a0:	sub	sp, sp, #48	; 0x30
   169a4:	ldr	r6, [pc, #576]	; 16bec <raspicamcontrol_set_all_parameters@@Base+0x250>
   169a8:	mov	r4, r1
   169ac:	ldr	r3, [pc, #572]	; 16bf0 <raspicamcontrol_set_all_parameters@@Base+0x254>
   169b0:	mov	r5, r0
   169b4:	add	r6, pc, r6
   169b8:	ldr	r1, [r1, #12]
   169bc:	ldr	r7, [r6, r3]
   169c0:	ldr	r3, [r7]
   169c4:	str	r3, [sp, #44]	; 0x2c
   169c8:	bl	153ac <raspicamcontrol_set_saturation@@Base>
   169cc:	ldr	r1, [r4]
   169d0:	mov	r8, r0
   169d4:	mov	r0, r5
   169d8:	bl	1543c <raspicamcontrol_set_sharpness@@Base>
   169dc:	ldr	r1, [r4, #4]
   169e0:	add	r8, r8, r0
   169e4:	mov	r0, r5
   169e8:	bl	154cc <raspicamcontrol_set_contrast@@Base>
   169ec:	ldr	r1, [r4, #8]
   169f0:	add	r8, r8, r0
   169f4:	mov	r0, r5
   169f8:	bl	1555c <raspicamcontrol_set_brightness@@Base>
   169fc:	ldr	r1, [r4, #16]
   16a00:	add	r8, r8, r0
   16a04:	mov	r0, r5
   16a08:	bl	155e8 <raspicamcontrol_set_ISO@@Base>
   16a0c:	ldr	r1, [r4, #20]
   16a10:	add	r8, r8, r0
   16a14:	mov	r0, r5
   16a18:	bl	15690 <raspicamcontrol_set_video_stabilisation@@Base>
   16a1c:	ldr	r1, [r4, #24]
   16a20:	add	r8, r8, r0
   16a24:	mov	r0, r5
   16a28:	bl	156c0 <raspicamcontrol_set_exposure_compensation@@Base>
   16a2c:	ldr	r1, [r4, #28]
   16a30:	add	r8, r8, r0
   16a34:	mov	r0, r5
   16a38:	bl	156f0 <raspicamcontrol_set_exposure_mode@@Base>
   16a3c:	ldr	r1, [r4, #96]	; 0x60
   16a40:	add	r8, r8, r0
   16a44:	mov	r0, r5
   16a48:	bl	15768 <raspicamcontrol_set_flicker_avoid_mode@@Base>
   16a4c:	ldr	r1, [r4, #32]
   16a50:	add	r8, r8, r0
   16a54:	mov	r0, r5
   16a58:	bl	15618 <raspicamcontrol_set_metering_mode@@Base>
   16a5c:	ldr	r1, [r4, #36]	; 0x24
   16a60:	add	r8, r8, r0
   16a64:	mov	r0, r5
   16a68:	bl	157e0 <raspicamcontrol_set_awb_mode@@Base>
   16a6c:	vldr	s0, [r4, #148]	; 0x94
   16a70:	vldr	s1, [r4, #152]	; 0x98
   16a74:	add	r8, r8, r0
   16a78:	mov	r0, r5
   16a7c:	bl	15858 <raspicamcontrol_set_awb_gains@@Base>
   16a80:	ldr	r1, [r4, #40]	; 0x28
   16a84:	add	r8, r8, r0
   16a88:	mov	r0, r5
   16a8c:	bl	1593c <raspicamcontrol_set_imageFX@@Base>
   16a90:	add	r1, r4, #84	; 0x54
   16a94:	add	r8, r8, r0
   16a98:	mov	r0, r5
   16a9c:	bl	159b4 <raspicamcontrol_set_colourFX@@Base>
   16aa0:	ldr	r1, [r4, #100]	; 0x64
   16aa4:	add	r8, r8, r0
   16aa8:	mov	r0, r5
   16aac:	bl	15a54 <raspicamcontrol_set_rotation@@Base>
   16ab0:	ldr	r2, [r4, #108]	; 0x6c
   16ab4:	ldr	r1, [r4, #104]	; 0x68
   16ab8:	add	r8, r8, r0
   16abc:	mov	r0, r5
   16ac0:	bl	15aec <raspicamcontrol_set_flips@@Base>
   16ac4:	vldr	d0, [r4, #112]	; 0x70
   16ac8:	vldr	d1, [r4, #120]	; 0x78
   16acc:	vldr	d2, [r4, #128]	; 0x80
   16ad0:	vldr	d3, [r4, #136]	; 0x88
   16ad4:	add	r8, r8, r0
   16ad8:	mov	r0, r5
   16adc:	bl	161f0 <raspicamcontrol_set_ROI@@Base>
   16ae0:	ldr	r1, [r4, #144]	; 0x90
   16ae4:	add	r8, r8, r0
   16ae8:	mov	r0, r5
   16aec:	bl	164b4 <raspicamcontrol_set_shutter_speed@@Base>
   16af0:	ldr	r1, [r4, #156]	; 0x9c
   16af4:	add	r8, r8, r0
   16af8:	mov	r0, r5
   16afc:	bl	164e4 <raspicamcontrol_set_DRC@@Base>
   16b00:	ldr	r1, [r4, #160]	; 0xa0
   16b04:	add	r8, r8, r0
   16b08:	mov	r0, r5
   16b0c:	bl	1655c <raspicamcontrol_set_stats_pass@@Base>
   16b10:	ldr	ip, [r4, #428]	; 0x1ac
   16b14:	ldr	r3, [r4, #424]	; 0x1a8
   16b18:	add	r2, r4, #168	; 0xa8
   16b1c:	ldr	r1, [r4, #164]	; 0xa4
   16b20:	str	ip, [sp]
   16b24:	ldr	ip, [r4, #432]	; 0x1b0
   16b28:	str	ip, [sp, #4]
   16b2c:	ldr	ip, [r4, #436]	; 0x1b4
   16b30:	str	ip, [sp, #8]
   16b34:	ldr	ip, [r4, #440]	; 0x1b8
   16b38:	str	ip, [sp, #12]
   16b3c:	ldr	ip, [r4, #444]	; 0x1bc
   16b40:	str	ip, [sp, #16]
   16b44:	add	r8, r8, r0
   16b48:	mov	r0, r5
   16b4c:	bl	1658c <raspicamcontrol_set_annotate@@Base>
   16b50:	vldr	s0, [r4, #468]	; 0x1d4
   16b54:	vldr	s1, [r4, #472]	; 0x1d8
   16b58:	add	r8, r8, r0
   16b5c:	mov	r0, r5
   16b60:	bl	16904 <raspicamcontrol_set_gains@@Base>
   16b64:	ldr	r3, [r4, #476]	; 0x1dc
   16b68:	cmp	r3, #0
   16b6c:	add	r4, r8, r0
   16b70:	bne	16b90 <raspicamcontrol_set_all_parameters@@Base+0x1f4>
   16b74:	ldr	r2, [sp, #44]	; 0x2c
   16b78:	mov	r0, r4
   16b7c:	ldr	r3, [r7]
   16b80:	cmp	r2, r3
   16b84:	bne	16be8 <raspicamcontrol_set_all_parameters@@Base+0x24c>
   16b88:	add	sp, sp, #48	; 0x30
   16b8c:	pop	{r4, r5, r6, r7, r8, pc}
   16b90:	ldr	r3, [pc, #92]	; 16bf4 <raspicamcontrol_set_all_parameters@@Base+0x258>
   16b94:	add	ip, sp, #28
   16b98:	add	r3, pc, r3
   16b9c:	add	r3, r3, #172	; 0xac
   16ba0:	ldm	r3, {r0, r1, r2, r3}
   16ba4:	stm	ip, {r0, r1, r2, r3}
   16ba8:	mov	r1, ip
   16bac:	ldr	r0, [r5, #16]
   16bb0:	bl	12a0c <mmal_port_parameter_set@plt>
   16bb4:	subs	r5, r0, #0
   16bb8:	beq	16be0 <raspicamcontrol_set_all_parameters@@Base+0x244>
   16bbc:	ldr	r3, [pc, #52]	; 16bf8 <raspicamcontrol_set_all_parameters@@Base+0x25c>
   16bc0:	ldr	r0, [r6, r3]
   16bc4:	ldr	r3, [r0]
   16bc8:	cmp	r3, #1
   16bcc:	bls	16be0 <raspicamcontrol_set_all_parameters@@Base+0x244>
   16bd0:	ldr	r2, [pc, #36]	; 16bfc <raspicamcontrol_set_all_parameters@@Base+0x260>
   16bd4:	mov	r1, #2
   16bd8:	add	r2, pc, r2
   16bdc:	bl	12754 <vcos_log_impl@plt>
   16be0:	add	r4, r5, r4
   16be4:	b	16b74 <raspicamcontrol_set_all_parameters@@Base+0x1d8>
   16be8:	bl	1288c <__stack_chk_fail@plt>
   16bec:	andeq	r7, r1, r4, asr #12
   16bf0:	andeq	r0, r0, r4, lsl #3
   16bf4:	strdeq	r3, [r0], -r8
   16bf8:	andeq	r0, r0, r0, lsl #3
   16bfc:	strdeq	r4, [r0], -r0

00016c00 <raspicamcontrol_check_configuration@@Base>:
   16c00:	push	{r4, r5, r6, r7, r8, r9, lr}
   16c04:	sub	sp, sp, #108	; 0x6c
   16c08:	ldr	r5, [pc, #420]	; 16db4 <raspicamcontrol_check_configuration@@Base+0x1b4>
   16c0c:	add	r8, sp, #24
   16c10:	ldr	r3, [pc, #416]	; 16db8 <raspicamcontrol_check_configuration@@Base+0x1b8>
   16c14:	mov	r6, #0
   16c18:	add	r5, pc, r5
   16c1c:	mov	r1, r6
   16c20:	mov	r2, #76	; 0x4c
   16c24:	mov	r9, r0
   16c28:	ldr	r7, [r5, r3]
   16c2c:	mov	r0, r8
   16c30:	add	r4, sp, #20
   16c34:	str	r6, [sp, #20]
   16c38:	ldr	r3, [r7]
   16c3c:	str	r3, [sp, #100]	; 0x64
   16c40:	bl	12a30 <memset@plt>
   16c44:	ldr	r2, [pc, #368]	; 16dbc <raspicamcontrol_check_configuration@@Base+0x1bc>
   16c48:	mov	r0, r4
   16c4c:	mov	r1, #80	; 0x50
   16c50:	str	r6, [sp, #16]
   16c54:	add	r2, pc, r2
   16c58:	bl	128bc <vc_gencmd@plt>
   16c5c:	cmp	r0, r6
   16c60:	bne	16c78 <raspicamcontrol_check_configuration@@Base+0x78>
   16c64:	ldr	r1, [pc, #340]	; 16dc0 <raspicamcontrol_check_configuration@@Base+0x1c0>
   16c68:	mov	r0, r4
   16c6c:	add	r2, sp, #16
   16c70:	add	r1, pc, r1
   16c74:	bl	127d8 <vc_gencmd_number_property@plt>
   16c78:	mov	ip, #0
   16c7c:	mov	r2, #76	; 0x4c
   16c80:	mov	r1, ip
   16c84:	mov	r0, r8
   16c88:	str	ip, [sp, #12]
   16c8c:	str	ip, [sp, #20]
   16c90:	ldr	r6, [sp, #16]
   16c94:	str	ip, [sp, #16]
   16c98:	bl	12a30 <memset@plt>
   16c9c:	ldr	r2, [pc, #288]	; 16dc4 <raspicamcontrol_check_configuration@@Base+0x1c4>
   16ca0:	mov	r0, r4
   16ca4:	mov	r1, #80	; 0x50
   16ca8:	add	r2, pc, r2
   16cac:	bl	128bc <vc_gencmd@plt>
   16cb0:	cmp	r0, #0
   16cb4:	bne	16ce0 <raspicamcontrol_check_configuration@@Base+0xe0>
   16cb8:	ldr	r1, [pc, #264]	; 16dc8 <raspicamcontrol_check_configuration@@Base+0x1c8>
   16cbc:	add	r2, sp, #12
   16cc0:	mov	r0, r4
   16cc4:	add	r1, pc, r1
   16cc8:	bl	127d8 <vc_gencmd_number_property@plt>
   16ccc:	ldr	r1, [pc, #248]	; 16dcc <raspicamcontrol_check_configuration@@Base+0x1cc>
   16cd0:	mov	r0, r4
   16cd4:	add	r2, sp, #16
   16cd8:	add	r1, pc, r1
   16cdc:	bl	127d8 <vc_gencmd_number_property@plt>
   16ce0:	ldr	r2, [sp, #12]
   16ce4:	cmp	r2, #0
   16ce8:	bne	16d28 <raspicamcontrol_check_configuration@@Base+0x128>
   16cec:	ldr	r3, [pc, #220]	; 16dd0 <raspicamcontrol_check_configuration@@Base+0x1d0>
   16cf0:	ldr	r0, [r5, r3]
   16cf4:	ldr	r3, [r0]
   16cf8:	cmp	r3, #1
   16cfc:	bls	16d10 <raspicamcontrol_check_configuration@@Base+0x110>
   16d00:	ldr	r2, [pc, #204]	; 16dd4 <raspicamcontrol_check_configuration@@Base+0x1d4>
   16d04:	mov	r1, #2
   16d08:	add	r2, pc, r2
   16d0c:	bl	12754 <vcos_log_impl@plt>
   16d10:	ldr	r2, [sp, #100]	; 0x64
   16d14:	ldr	r3, [r7]
   16d18:	cmp	r2, r3
   16d1c:	bne	16db0 <raspicamcontrol_check_configuration@@Base+0x1b0>
   16d20:	add	sp, sp, #108	; 0x6c
   16d24:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16d28:	cmp	r9, r6
   16d2c:	ble	16d60 <raspicamcontrol_check_configuration@@Base+0x160>
   16d30:	ldr	r3, [pc, #152]	; 16dd0 <raspicamcontrol_check_configuration@@Base+0x1d0>
   16d34:	ldr	r0, [r5, r3]
   16d38:	ldr	r3, [r0]
   16d3c:	cmp	r3, #1
   16d40:	bls	16d10 <raspicamcontrol_check_configuration@@Base+0x110>
   16d44:	ldr	r2, [pc, #140]	; 16dd8 <raspicamcontrol_check_configuration@@Base+0x1d8>
   16d48:	mov	r3, r6
   16d4c:	str	r9, [sp]
   16d50:	mov	r1, #2
   16d54:	add	r2, pc, r2
   16d58:	bl	12754 <vcos_log_impl@plt>
   16d5c:	b	16d10 <raspicamcontrol_check_configuration@@Base+0x110>
   16d60:	ldr	r3, [sp, #16]
   16d64:	cmp	r3, #0
   16d68:	ldr	r3, [pc, #96]	; 16dd0 <raspicamcontrol_check_configuration@@Base+0x1d0>
   16d6c:	ldr	r0, [r5, r3]
   16d70:	ldr	r3, [r0]
   16d74:	bne	16d94 <raspicamcontrol_check_configuration@@Base+0x194>
   16d78:	cmp	r3, #1
   16d7c:	bls	16d10 <raspicamcontrol_check_configuration@@Base+0x110>
   16d80:	ldr	r2, [pc, #84]	; 16ddc <raspicamcontrol_check_configuration@@Base+0x1dc>
   16d84:	mov	r1, #2
   16d88:	add	r2, pc, r2
   16d8c:	bl	12754 <vcos_log_impl@plt>
   16d90:	b	16d10 <raspicamcontrol_check_configuration@@Base+0x110>
   16d94:	cmp	r3, #1
   16d98:	bls	16d10 <raspicamcontrol_check_configuration@@Base+0x110>
   16d9c:	ldr	r2, [pc, #60]	; 16de0 <raspicamcontrol_check_configuration@@Base+0x1e0>
   16da0:	mov	r1, #2
   16da4:	add	r2, pc, r2
   16da8:	bl	12754 <vcos_log_impl@plt>
   16dac:	b	16d10 <raspicamcontrol_check_configuration@@Base+0x110>
   16db0:	bl	1288c <__stack_chk_fail@plt>
   16db4:	andeq	r7, r1, r0, ror #7
   16db8:	andeq	r0, r0, r4, lsl #3
   16dbc:	muleq	r0, r0, r4
   16dc0:	andeq	r4, r0, ip, ror r4
   16dc4:	andeq	r4, r0, r8, asr #8
   16dc8:	andeq	r4, r0, r8, lsr r4
   16dcc:	andeq	r4, r0, r0, lsr r4
   16dd0:	andeq	r0, r0, r0, lsl #3
   16dd4:	andeq	r4, r0, ip, lsl #8
   16dd8:	andeq	r4, r0, r0, lsr r4
   16ddc:	andeq	r4, r0, ip, ror r4
   16de0:			; <UNDEFINED> instruction: 0x000044bc

00016de4 <default_camera_control_callback@@Base>:
   16de4:	push	{r4, r5, r6, lr}
   16de8:	mov	r4, r1
   16dec:	ldr	r5, [pc, #340]	; 16f48 <default_camera_control_callback@@Base+0x164>
   16df0:	sub	sp, sp, #16
   16df4:	ldr	r0, [pc, #336]	; 16f4c <default_camera_control_callback@@Base+0x168>
   16df8:	mov	r1, #1
   16dfc:	add	r5, pc, r5
   16e00:	ldr	r2, [pc, #328]	; 16f50 <default_camera_control_callback@@Base+0x16c>
   16e04:	ldr	r3, [r4, #8]
   16e08:	ldr	r0, [r5, r0]
   16e0c:	add	r2, pc, r2
   16e10:	ldr	r0, [r0]
   16e14:	bl	12a6c <__fprintf_chk@plt>
   16e18:	ldr	r3, [r4, #8]
   16e1c:	movw	r2, #20549	; 0x5045
   16e20:	movt	r2, #18499	; 0x4843
   16e24:	cmp	r3, r2
   16e28:	beq	16e70 <default_camera_control_callback@@Base+0x8c>
   16e2c:	movw	r2, #21061	; 0x5245
   16e30:	movt	r2, #20306	; 0x4f52
   16e34:	cmp	r3, r2
   16e38:	beq	16f14 <default_camera_control_callback@@Base+0x130>
   16e3c:	ldr	r2, [pc, #272]	; 16f54 <default_camera_control_callback@@Base+0x170>
   16e40:	ldr	r0, [r5, r2]
   16e44:	ldr	r2, [r0]
   16e48:	cmp	r2, #1
   16e4c:	bls	16e60 <default_camera_control_callback@@Base+0x7c>
   16e50:	ldr	r2, [pc, #256]	; 16f58 <default_camera_control_callback@@Base+0x174>
   16e54:	mov	r1, #2
   16e58:	add	r2, pc, r2
   16e5c:	bl	12754 <vcos_log_impl@plt>
   16e60:	mov	r0, r4
   16e64:	add	sp, sp, #16
   16e68:	pop	{r4, r5, r6, lr}
   16e6c:	b	12b20 <mmal_buffer_header_release@plt>
   16e70:	ldr	r6, [r4, #12]
   16e74:	mov	r3, #69	; 0x45
   16e78:	movt	r3, #1
   16e7c:	ldr	r2, [r6]
   16e80:	cmp	r2, r3
   16e84:	bne	16e60 <default_camera_control_callback@@Base+0x7c>
   16e88:	ldr	r3, [pc, #196]	; 16f54 <default_camera_control_callback@@Base+0x170>
   16e8c:	ldr	r5, [r5, r3]
   16e90:	ldr	r3, [r5]
   16e94:	cmp	r3, #1
   16e98:	bls	16e60 <default_camera_control_callback@@Base+0x7c>
   16e9c:	ldr	ip, [r6, #12]
   16ea0:	mov	r0, r5
   16ea4:	ldr	r3, [r6, #8]
   16ea8:	mov	r1, #2
   16eac:	ldr	r2, [pc, #168]	; 16f5c <default_camera_control_callback@@Base+0x178>
   16eb0:	str	ip, [sp]
   16eb4:	ldr	ip, [r6, #16]
   16eb8:	add	r2, pc, r2
   16ebc:	str	ip, [sp, #4]
   16ec0:	ldr	ip, [r6, #20]
   16ec4:	str	ip, [sp, #8]
   16ec8:	ldr	ip, [r6, #24]
   16ecc:	str	ip, [sp, #12]
   16ed0:	bl	12754 <vcos_log_impl@plt>
   16ed4:	ldr	r3, [r5]
   16ed8:	cmp	r3, #1
   16edc:	bls	16e60 <default_camera_control_callback@@Base+0x7c>
   16ee0:	ldr	ip, [r6, #32]
   16ee4:	mov	r0, r5
   16ee8:	ldr	r3, [r6, #28]
   16eec:	mov	r1, #2
   16ef0:	ldr	r2, [pc, #104]	; 16f60 <default_camera_control_callback@@Base+0x17c>
   16ef4:	str	ip, [sp]
   16ef8:	ldr	ip, [r6, #36]	; 0x24
   16efc:	add	r2, pc, r2
   16f00:	str	ip, [sp, #4]
   16f04:	ldr	ip, [r6, #40]	; 0x28
   16f08:	str	ip, [sp, #8]
   16f0c:	bl	12754 <vcos_log_impl@plt>
   16f10:	b	16e60 <default_camera_control_callback@@Base+0x7c>
   16f14:	ldr	r3, [pc, #56]	; 16f54 <default_camera_control_callback@@Base+0x170>
   16f18:	ldr	r0, [r5, r3]
   16f1c:	ldr	r3, [r0]
   16f20:	cmp	r3, #1
   16f24:	bls	16e60 <default_camera_control_callback@@Base+0x7c>
   16f28:	ldr	r2, [pc, #52]	; 16f64 <default_camera_control_callback@@Base+0x180>
   16f2c:	mov	r1, #2
   16f30:	add	r2, pc, r2
   16f34:	bl	12754 <vcos_log_impl@plt>
   16f38:	mov	r0, r4
   16f3c:	add	sp, sp, #16
   16f40:	pop	{r4, r5, r6, lr}
   16f44:	b	12b20 <mmal_buffer_header_release@plt>
   16f48:	strdeq	r7, [r1], -ip
   16f4c:	andeq	r0, r0, r8, lsl #3
   16f50:	muleq	r0, r4, r4
   16f54:	andeq	r0, r0, r0, lsl #3
   16f58:	andeq	r4, r0, r0, lsr #10
   16f5c:	andeq	r4, r0, ip, lsl #8
   16f60:	andeq	r4, r0, r0, lsl #8
   16f64:	andeq	r4, r0, r4, ror #7

00016f68 <raspicli_get_command_id@@Base>:
   16f68:	push	{r4, r5, r6, r7, r8, lr}
   16f6c:	subs	r4, r0, #0
   16f70:	sub	sp, sp, #8
   16f74:	mov	r7, r1
   16f78:	mov	r6, r2
   16f7c:	mov	r8, r3
   16f80:	beq	17040 <raspicli_get_command_id@@Base+0xd8>
   16f84:	cmp	r8, #0
   16f88:	beq	17070 <raspicli_get_command_id@@Base+0x108>
   16f8c:	cmp	r6, #0
   16f90:	beq	1700c <raspicli_get_command_id@@Base+0xa4>
   16f94:	cmp	r8, #0
   16f98:	cmpne	r4, #0
   16f9c:	movne	r5, #0
   16fa0:	moveq	r5, #1
   16fa4:	beq	17000 <raspicli_get_command_id@@Base+0x98>
   16fa8:	cmp	r7, #0
   16fac:	bgt	16fd0 <raspicli_get_command_id@@Base+0x68>
   16fb0:	b	17000 <raspicli_get_command_id@@Base+0x98>
   16fb4:	ldr	r1, [r4, #8]
   16fb8:	bl	12790 <strcmp@plt>
   16fbc:	cmp	r0, #0
   16fc0:	beq	16fec <raspicli_get_command_id@@Base+0x84>
   16fc4:	cmp	r5, r7
   16fc8:	add	r4, r4, #20
   16fcc:	beq	17000 <raspicli_get_command_id@@Base+0x98>
   16fd0:	mov	r0, r6
   16fd4:	ldr	r1, [r4, #4]
   16fd8:	bl	12790 <strcmp@plt>
   16fdc:	add	r5, r5, #1
   16fe0:	cmp	r0, #0
   16fe4:	mov	r0, r6
   16fe8:	bne	16fb4 <raspicli_get_command_id@@Base+0x4c>
   16fec:	ldr	r3, [r4, #16]
   16ff0:	ldr	r0, [r4]
   16ff4:	str	r3, [r8]
   16ff8:	add	sp, sp, #8
   16ffc:	pop	{r4, r5, r6, r7, r8, pc}
   17000:	mvn	r0, #0
   17004:	add	sp, sp, #8
   17008:	pop	{r4, r5, r6, r7, r8, pc}
   1700c:	ldr	r3, [pc, #140]	; 170a0 <raspicli_get_command_id@@Base+0x138>
   17010:	mov	r2, #69	; 0x45
   17014:	ldr	r0, [pc, #136]	; 170a4 <raspicli_get_command_id@@Base+0x13c>
   17018:	add	r3, pc, r3
   1701c:	ldr	r1, [pc, #132]	; 170a8 <raspicli_get_command_id@@Base+0x140>
   17020:	str	r3, [sp]
   17024:	add	r0, pc, r0
   17028:	ldr	r3, [pc, #124]	; 170ac <raspicli_get_command_id@@Base+0x144>
   1702c:	add	r1, pc, r1
   17030:	add	r3, pc, r3
   17034:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   17038:	mvn	r0, #0
   1703c:	b	16ff8 <raspicli_get_command_id@@Base+0x90>
   17040:	ldr	r3, [pc, #104]	; 170b0 <raspicli_get_command_id@@Base+0x148>
   17044:	mov	r2, #67	; 0x43
   17048:	ldr	r0, [pc, #100]	; 170b4 <raspicli_get_command_id@@Base+0x14c>
   1704c:	add	r3, pc, r3
   17050:	ldr	r1, [pc, #96]	; 170b8 <raspicli_get_command_id@@Base+0x150>
   17054:	str	r3, [sp]
   17058:	add	r0, pc, r0
   1705c:	ldr	r3, [pc, #88]	; 170bc <raspicli_get_command_id@@Base+0x154>
   17060:	add	r1, pc, r1
   17064:	add	r3, pc, r3
   17068:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   1706c:	b	16f84 <raspicli_get_command_id@@Base+0x1c>
   17070:	ldr	r3, [pc, #72]	; 170c0 <raspicli_get_command_id@@Base+0x158>
   17074:	mov	r2, #68	; 0x44
   17078:	ldr	r0, [pc, #68]	; 170c4 <raspicli_get_command_id@@Base+0x15c>
   1707c:	add	r3, pc, r3
   17080:	ldr	r1, [pc, #64]	; 170c8 <raspicli_get_command_id@@Base+0x160>
   17084:	str	r3, [sp]
   17088:	add	r0, pc, r0
   1708c:	ldr	r3, [pc, #56]	; 170cc <raspicli_get_command_id@@Base+0x164>
   17090:	add	r1, pc, r1
   17094:	add	r3, pc, r3
   17098:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   1709c:	b	16f8c <raspicli_get_command_id@@Base+0x24>
   170a0:	strdeq	r4, [r0], -ip
   170a4:	andeq	r4, r0, r0, ror fp
   170a8:	andeq	r4, r0, r8, lsr fp
   170ac:	andeq	r3, r0, r0, ror #27
   170b0:	andeq	r4, r0, ip, lsr #23
   170b4:	andeq	r4, r0, ip, lsr fp
   170b8:	andeq	r4, r0, r4, lsl #22
   170bc:	andeq	r3, r0, ip, lsr #27
   170c0:	andeq	r4, r0, r8, lsl #23
   170c4:	andeq	r4, r0, ip, lsl #22
   170c8:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   170cc:	andeq	r3, r0, ip, ror sp

000170d0 <raspicli_display_help@@Base>:
   170d0:	cmp	r0, #0
   170d4:	ldr	r3, [pc, #160]	; 1717c <raspicli_display_help@@Base+0xac>
   170d8:	push	{r4, r5, r6, r7, r8, lr}
   170dc:	add	r3, pc, r3
   170e0:	sub	sp, sp, #8
   170e4:	mov	r6, r1
   170e8:	beq	17148 <raspicli_display_help@@Base+0x78>
   170ec:	cmp	r1, #0
   170f0:	ble	17140 <raspicli_display_help@@Base+0x70>
   170f4:	ldr	r2, [pc, #132]	; 17180 <raspicli_display_help@@Base+0xb0>
   170f8:	mov	r4, r0
   170fc:	ldr	r8, [pc, #128]	; 17184 <raspicli_display_help@@Base+0xb4>
   17100:	mov	r5, #0
   17104:	ldr	r7, [r3, r2]
   17108:	add	r8, pc, r8
   1710c:	ldr	ip, [r4, #4]
   17110:	add	r5, r5, #1
   17114:	ldr	r3, [r4, #8]
   17118:	mov	r1, #1
   1711c:	ldr	r0, [r7]
   17120:	mov	r2, r8
   17124:	str	ip, [sp]
   17128:	add	r4, r4, #20
   1712c:	ldr	ip, [r4, #-8]
   17130:	str	ip, [sp, #4]
   17134:	bl	12a6c <__fprintf_chk@plt>
   17138:	cmp	r5, r6
   1713c:	bne	1710c <raspicli_display_help@@Base+0x3c>
   17140:	add	sp, sp, #8
   17144:	pop	{r4, r5, r6, r7, r8, pc}
   17148:	ldr	r3, [pc, #56]	; 17188 <raspicli_display_help@@Base+0xb8>
   1714c:	mov	r2, #102	; 0x66
   17150:	ldr	r1, [pc, #52]	; 1718c <raspicli_display_help@@Base+0xbc>
   17154:	add	r3, pc, r3
   17158:	ldr	r0, [pc, #48]	; 17190 <raspicli_display_help@@Base+0xc0>
   1715c:	str	r3, [sp]
   17160:	add	r1, pc, r1
   17164:	ldr	r3, [pc, #40]	; 17194 <raspicli_display_help@@Base+0xc4>
   17168:	add	r0, pc, r0
   1716c:	add	r1, r1, #24
   17170:	add	r3, pc, r3
   17174:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   17178:	b	17140 <raspicli_display_help@@Base+0x70>
   1717c:	andeq	r6, r1, ip, lsl pc
   17180:	muleq	r0, r8, r1
   17184:	andeq	r4, r0, r0, lsl fp
   17188:	andeq	r4, r0, r4, lsr #21
   1718c:	andeq	r4, r0, r4, lsl #20
   17190:	andeq	r4, r0, ip, lsr #20
   17194:	andeq	r3, r0, r0, lsr #25

00017198 <raspicli_map_xref@@Base>:
   17198:	push	{r3, r4, r5, r6, r7, lr}
   1719c:	subs	r7, r2, #0
   171a0:	mov	r6, r0
   171a4:	ble	171e0 <raspicli_map_xref@@Base+0x48>
   171a8:	mov	r4, r1
   171ac:	mov	r5, #0
   171b0:	b	171c0 <raspicli_map_xref@@Base+0x28>
   171b4:	cmp	r5, r7
   171b8:	add	r4, r4, #8
   171bc:	beq	171e0 <raspicli_map_xref@@Base+0x48>
   171c0:	mov	r0, r6
   171c4:	ldr	r1, [r4]
   171c8:	bl	128b0 <strcasecmp@plt>
   171cc:	add	r5, r5, #1
   171d0:	cmp	r0, #0
   171d4:	bne	171b4 <raspicli_map_xref@@Base+0x1c>
   171d8:	ldr	r0, [r4, #4]
   171dc:	pop	{r3, r4, r5, r6, r7, pc}
   171e0:	mvn	r0, #0
   171e4:	pop	{r3, r4, r5, r6, r7, pc}

000171e8 <raspicli_unmap_xref@@Base>:
   171e8:	cmp	r2, #0
   171ec:	push	{r4}		; (str r4, [sp, #-4]!)
   171f0:	ble	1722c <raspicli_unmap_xref@@Base+0x44>
   171f4:	ldr	r3, [r1, #4]
   171f8:	cmp	r3, r0
   171fc:	addne	r1, r1, #8
   17200:	movne	r3, #0
   17204:	bne	17218 <raspicli_unmap_xref@@Base+0x30>
   17208:	b	17238 <raspicli_unmap_xref@@Base+0x50>
   1720c:	ldr	ip, [r1, #-4]
   17210:	cmp	ip, r0
   17214:	beq	1723c <raspicli_unmap_xref@@Base+0x54>
   17218:	add	r3, r3, #1
   1721c:	mov	r4, r1
   17220:	cmp	r3, r2
   17224:	add	r1, r1, #8
   17228:	bne	1720c <raspicli_unmap_xref@@Base+0x24>
   1722c:	mov	r0, #0
   17230:	pop	{r4}		; (ldr r4, [sp], #4)
   17234:	bx	lr
   17238:	mov	r4, r1
   1723c:	ldr	r0, [r4]
   17240:	pop	{r4}		; (ldr r4, [sp], #4)
   17244:	bx	lr

00017248 <raspipreview_create@@Base>:
   17248:	push	{r4, r5, r6, r7, lr}
   1724c:	sub	sp, sp, #100	; 0x64
   17250:	ldr	r4, [pc, #552]	; 17480 <raspipreview_create@@Base+0x238>
   17254:	mov	r3, #0
   17258:	ldr	r1, [pc, #548]	; 17484 <raspipreview_create@@Base+0x23c>
   1725c:	mov	r7, r0
   17260:	add	r4, pc, r4
   17264:	ldr	r2, [r0]
   17268:	ldr	r5, [r4, r1]
   1726c:	cmp	r2, r3
   17270:	str	r3, [sp, #4]
   17274:	ldr	r3, [r5]
   17278:	str	r3, [sp, #92]	; 0x5c
   1727c:	bne	172c4 <raspipreview_create@@Base+0x7c>
   17280:	ldr	r0, [pc, #512]	; 17488 <raspipreview_create@@Base+0x240>
   17284:	add	r1, sp, #4
   17288:	add	r0, pc, r0
   1728c:	bl	127b4 <mmal_component_create@plt>
   17290:	subs	r6, r0, #0
   17294:	beq	17308 <raspipreview_create@@Base+0xc0>
   17298:	ldr	r3, [pc, #492]	; 1748c <raspipreview_create@@Base+0x244>
   1729c:	ldr	r0, [r4, r3]
   172a0:	ldr	r3, [r0]
   172a4:	cmp	r3, #1
   172a8:	bls	173ec <raspipreview_create@@Base+0x1a4>
   172ac:	ldr	r2, [pc, #476]	; 17490 <raspipreview_create@@Base+0x248>
   172b0:	mov	r1, #2
   172b4:	add	r2, pc, r2
   172b8:	bl	12754 <vcos_log_impl@plt>
   172bc:	ldr	r0, [sp, #4]
   172c0:	b	173f0 <raspipreview_create@@Base+0x1a8>
   172c4:	ldr	r0, [pc, #456]	; 17494 <raspipreview_create@@Base+0x24c>
   172c8:	add	r1, sp, #4
   172cc:	add	r0, pc, r0
   172d0:	bl	127b4 <mmal_component_create@plt>
   172d4:	subs	r6, r0, #0
   172d8:	beq	17348 <raspipreview_create@@Base+0x100>
   172dc:	ldr	r3, [pc, #424]	; 1748c <raspipreview_create@@Base+0x244>
   172e0:	ldr	r0, [r4, r3]
   172e4:	ldr	r3, [r0]
   172e8:	cmp	r3, #1
   172ec:	bls	173ec <raspipreview_create@@Base+0x1a4>
   172f0:	ldr	r2, [pc, #416]	; 17498 <raspipreview_create@@Base+0x250>
   172f4:	mov	r1, #2
   172f8:	add	r2, pc, r2
   172fc:	bl	12754 <vcos_log_impl@plt>
   17300:	ldr	r0, [sp, #4]
   17304:	b	173f0 <raspipreview_create@@Base+0x1a8>
   17308:	ldr	r0, [sp, #4]
   1730c:	bl	12a48 <mmal_component_enable@plt>
   17310:	subs	r6, r0, #0
   17314:	beq	17450 <raspipreview_create@@Base+0x208>
   17318:	ldr	r3, [pc, #364]	; 1748c <raspipreview_create@@Base+0x244>
   1731c:	ldr	r0, [r4, r3]
   17320:	ldr	r3, [r0]
   17324:	cmp	r3, #1
   17328:	bls	173ec <raspipreview_create@@Base+0x1a4>
   1732c:	ldr	r2, [pc, #360]	; 1749c <raspipreview_create@@Base+0x254>
   17330:	mov	r1, #2
   17334:	mov	r3, r6
   17338:	add	r2, pc, r2
   1733c:	bl	12754 <vcos_log_impl@plt>
   17340:	ldr	r0, [sp, #4]
   17344:	b	173f0 <raspipreview_create@@Base+0x1a8>
   17348:	ldr	r3, [sp, #4]
   1734c:	ldr	r2, [r3, #20]
   17350:	cmp	r2, #0
   17354:	beq	17418 <raspipreview_create@@Base+0x1d0>
   17358:	ldr	r2, [r7, #4]
   1735c:	mov	ip, #131072	; 0x20000
   17360:	ldr	lr, [r3, #24]
   17364:	mov	r0, #84	; 0x54
   17368:	ldr	r6, [r7, #8]
   1736c:	cmp	r2, #0
   17370:	mov	r1, #2
   17374:	mov	r3, #1280	; 0x500
   17378:	ldr	lr, [lr]
   1737c:	str	r6, [sp, #88]	; 0x58
   17380:	str	ip, [sp, #8]
   17384:	str	r0, [sp, #12]
   17388:	str	r1, [sp, #80]	; 0x50
   1738c:	str	r3, [sp, #16]
   17390:	beq	1745c <raspipreview_create@@Base+0x214>
   17394:	movw	r2, #1282	; 0x502
   17398:	mov	r3, #1
   1739c:	str	r2, [sp, #16]
   173a0:	str	r3, [sp, #24]
   173a4:	mov	r0, lr
   173a8:	add	r1, sp, #8
   173ac:	bl	12a0c <mmal_port_parameter_set@plt>
   173b0:	bics	r3, r0, #4
   173b4:	mov	r6, r0
   173b8:	beq	17308 <raspipreview_create@@Base+0xc0>
   173bc:	ldr	r3, [pc, #200]	; 1748c <raspipreview_create@@Base+0x244>
   173c0:	ldr	r0, [r4, r3]
   173c4:	ldr	r3, [r0]
   173c8:	cmp	r3, #1
   173cc:	bls	173ec <raspipreview_create@@Base+0x1a4>
   173d0:	ldr	r2, [pc, #200]	; 174a0 <raspipreview_create@@Base+0x258>
   173d4:	mov	r1, #2
   173d8:	mov	r3, r6
   173dc:	add	r2, pc, r2
   173e0:	bl	12754 <vcos_log_impl@plt>
   173e4:	ldr	r0, [sp, #4]
   173e8:	b	173f0 <raspipreview_create@@Base+0x1a8>
   173ec:	ldr	r0, [sp, #4]
   173f0:	cmp	r0, #0
   173f4:	beq	173fc <raspipreview_create@@Base+0x1b4>
   173f8:	bl	12880 <mmal_component_destroy@plt>
   173fc:	ldr	r2, [sp, #92]	; 0x5c
   17400:	mov	r0, r6
   17404:	ldr	r3, [r5]
   17408:	cmp	r2, r3
   1740c:	bne	1747c <raspipreview_create@@Base+0x234>
   17410:	add	sp, sp, #100	; 0x64
   17414:	pop	{r4, r5, r6, r7, pc}
   17418:	ldr	r2, [pc, #108]	; 1748c <raspipreview_create@@Base+0x244>
   1741c:	ldr	r0, [r4, r2]
   17420:	ldr	r2, [r0]
   17424:	cmp	r2, #1
   17428:	movls	r0, r3
   1742c:	movls	r6, #4
   17430:	bls	173f0 <raspipreview_create@@Base+0x1a8>
   17434:	ldr	r2, [pc, #104]	; 174a4 <raspipreview_create@@Base+0x25c>
   17438:	mov	r1, #2
   1743c:	mov	r6, #4
   17440:	add	r2, pc, r2
   17444:	bl	12754 <vcos_log_impl@plt>
   17448:	ldr	r0, [sp, #4]
   1744c:	b	173f0 <raspipreview_create@@Base+0x1a8>
   17450:	ldr	r3, [sp, #4]
   17454:	str	r3, [r7, #28]
   17458:	b	173fc <raspipreview_create@@Base+0x1b4>
   1745c:	add	r3, r7, #12
   17460:	str	r2, [sp, #24]
   17464:	movw	ip, #1290	; 0x50a
   17468:	str	ip, [sp, #16]
   1746c:	ldm	r3, {r0, r1, r2, r3}
   17470:	add	ip, sp, #32
   17474:	stm	ip, {r0, r1, r2, r3}
   17478:	b	173a4 <raspipreview_create@@Base+0x15c>
   1747c:	bl	1288c <__stack_chk_fail@plt>
   17480:	muleq	r1, r8, sp
   17484:	andeq	r0, r0, r4, lsl #3
   17488:	andeq	r4, r0, r0, lsr #19
   1748c:	andeq	r0, r0, r0, lsl #3
   17490:	andeq	r4, r0, r4, lsl #19
   17494:	muleq	r0, r4, r9
   17498:	andeq	r4, r0, ip, ror r9
   1749c:			; <UNDEFINED> instruction: 0x000049b0
   174a0:	andeq	r4, r0, r0, ror #17
   174a4:	andeq	r4, r0, r8, asr r8

000174a8 <raspipreview_destroy@@Base>:
   174a8:	push	{r4, lr}
   174ac:	mov	r4, r0
   174b0:	ldr	r0, [r0, #28]
   174b4:	cmp	r0, #0
   174b8:	popeq	{r4, pc}
   174bc:	bl	12880 <mmal_component_destroy@plt>
   174c0:	mov	r3, #0
   174c4:	str	r3, [r4, #28]
   174c8:	pop	{r4, pc}

000174cc <raspipreview_set_defaults@@Base>:
   174cc:	mov	r2, #255	; 0xff
   174d0:	mov	r3, #1024	; 0x400
   174d4:	str	r2, [r0, #8]
   174d8:	mov	r2, #1
   174dc:	str	r3, [r0, #20]
   174e0:	mov	r3, #768	; 0x300
   174e4:	str	r2, [r0]
   174e8:	str	r3, [r0, #24]
   174ec:	mov	r3, #0
   174f0:	str	r2, [r0, #4]
   174f4:	str	r3, [r0, #12]
   174f8:	str	r3, [r0, #16]
   174fc:	str	r3, [r0, #28]
   17500:	bx	lr

00017504 <raspipreview_dump_parameters@@Base>:
   17504:	ldr	r3, [pc, #164]	; 175b0 <raspipreview_dump_parameters@@Base+0xac>
   17508:	ldr	r1, [pc, #164]	; 175b4 <raspipreview_dump_parameters@@Base+0xb0>
   1750c:	add	r3, pc, r3
   17510:	ldr	r2, [r0]
   17514:	push	{r4, r5, lr}
   17518:	cmp	r2, #0
   1751c:	ldr	r5, [r3, r1]
   17520:	mov	r4, r0
   17524:	ldr	r3, [pc, #140]	; 175b8 <raspipreview_dump_parameters@@Base+0xb4>
   17528:	sub	sp, sp, #20
   1752c:	add	r3, pc, r3
   17530:	ldr	r0, [r5]
   17534:	ldreq	r3, [pc, #128]	; 175bc <raspipreview_dump_parameters@@Base+0xb8>
   17538:	addeq	r3, pc, r3
   1753c:	ldr	r2, [r4, #4]
   17540:	cmp	r2, #0
   17544:	bne	175a4 <raspipreview_dump_parameters@@Base+0xa0>
   17548:	ldr	r2, [pc, #112]	; 175c0 <raspipreview_dump_parameters@@Base+0xbc>
   1754c:	add	r2, pc, r2
   17550:	str	r2, [sp]
   17554:	mov	r1, #1
   17558:	ldr	r2, [pc, #100]	; 175c4 <raspipreview_dump_parameters@@Base+0xc0>
   1755c:	add	r2, pc, r2
   17560:	bl	12a6c <__fprintf_chk@plt>
   17564:	ldr	r2, [r4, #16]
   17568:	ldr	r3, [r4, #12]
   1756c:	mov	r1, #1
   17570:	ldr	r0, [r5]
   17574:	str	r2, [sp]
   17578:	ldr	ip, [r4, #20]
   1757c:	ldr	r2, [pc, #68]	; 175c8 <raspipreview_dump_parameters@@Base+0xc4>
   17580:	str	ip, [sp, #4]
   17584:	add	r2, pc, r2
   17588:	ldr	ip, [r4, #24]
   1758c:	str	ip, [sp, #8]
   17590:	ldr	ip, [r4, #8]
   17594:	str	ip, [sp, #12]
   17598:	bl	12a6c <__fprintf_chk@plt>
   1759c:	add	sp, sp, #20
   175a0:	pop	{r4, r5, pc}
   175a4:	ldr	r2, [pc, #32]	; 175cc <raspipreview_dump_parameters@@Base+0xc8>
   175a8:	add	r2, pc, r2
   175ac:	b	17550 <raspipreview_dump_parameters@@Base+0x4c>
   175b0:	andeq	r6, r1, ip, ror #21
   175b4:	andeq	r0, r0, r8, lsl #3
   175b8:	andeq	r3, r0, r8, ror #17
   175bc:	andeq	r3, r0, r0, ror #17
   175c0:	andeq	r3, r0, ip, asr #17
   175c4:	andeq	r4, r0, r0, asr #15
   175c8:			; <UNDEFINED> instruction: 0x000047b4
   175cc:	andeq	r3, r0, ip, ror #16

000175d0 <raspipreview_parse_cmdline@@Base>:
   175d0:	ldr	r3, [pc, #300]	; 17704 <raspipreview_parse_cmdline@@Base+0x134>
   175d4:	cmp	r1, #0
   175d8:	ldr	ip, [pc, #296]	; 17708 <raspipreview_parse_cmdline@@Base+0x138>
   175dc:	add	r3, pc, r3
   175e0:	push	{r4, r5, r6, lr}
   175e4:	sub	sp, sp, #16
   175e8:	ldr	r4, [r3, ip]
   175ec:	mov	r5, r0
   175f0:	mov	r6, r2
   175f4:	ldr	r3, [r4]
   175f8:	str	r3, [sp, #12]
   175fc:	beq	17650 <raspipreview_parse_cmdline@@Base+0x80>
   17600:	ldr	r0, [pc, #260]	; 1770c <raspipreview_parse_cmdline@@Base+0x13c>
   17604:	mov	r2, r1
   17608:	add	r3, sp, #8
   1760c:	mov	r1, #4
   17610:	add	r0, pc, r0
   17614:	bl	16f68 <raspicli_get_command_id@@Base>
   17618:	cmn	r0, #1
   1761c:	beq	17650 <raspipreview_parse_cmdline@@Base+0x80>
   17620:	ldr	r2, [sp, #8]
   17624:	cmp	r2, #0
   17628:	ble	17634 <raspipreview_parse_cmdline@@Base+0x64>
   1762c:	cmp	r6, #0
   17630:	beq	17650 <raspipreview_parse_cmdline@@Base+0x80>
   17634:	cmp	r0, #3
   17638:	addls	pc, pc, r0, lsl #2
   1763c:	b	17650 <raspipreview_parse_cmdline@@Base+0x80>
   17640:	b	1767c <raspipreview_parse_cmdline@@Base+0xac>
   17644:	b	176c4 <raspipreview_parse_cmdline@@Base+0xf4>
   17648:	b	176d4 <raspipreview_parse_cmdline@@Base+0x104>
   1764c:	b	1766c <raspipreview_parse_cmdline@@Base+0x9c>
   17650:	mov	r0, #0
   17654:	ldr	r2, [sp, #12]
   17658:	ldr	r3, [r4]
   1765c:	cmp	r2, r3
   17660:	bne	17700 <raspipreview_parse_cmdline@@Base+0x130>
   17664:	add	sp, sp, #16
   17668:	pop	{r4, r5, r6, pc}
   1766c:	mov	r3, #0
   17670:	mov	r0, #1
   17674:	str	r3, [r5]
   17678:	b	17654 <raspipreview_parse_cmdline@@Base+0x84>
   1767c:	mov	r2, r5
   17680:	mov	r0, r6
   17684:	add	r1, r5, #20
   17688:	mov	r6, #1
   1768c:	add	r3, r5, #24
   17690:	str	r6, [r2], #12
   17694:	stm	sp, {r1, r3}
   17698:	add	r3, r5, #16
   1769c:	ldr	r1, [pc, #108]	; 17710 <raspipreview_parse_cmdline@@Base+0x140>
   176a0:	add	r1, pc, r1
   176a4:	bl	12acc <sscanf@plt>
   176a8:	cmp	r0, #0
   176ac:	streq	r6, [r5, #4]
   176b0:	movne	r3, #0
   176b4:	moveq	r0, #2
   176b8:	movne	r0, #2
   176bc:	strne	r3, [r5, #4]
   176c0:	b	17654 <raspipreview_parse_cmdline@@Base+0x84>
   176c4:	mov	r0, #1
   176c8:	str	r0, [r5]
   176cc:	str	r0, [r5, #4]
   176d0:	b	17654 <raspipreview_parse_cmdline@@Base+0x84>
   176d4:	ldr	r1, [pc, #56]	; 17714 <raspipreview_parse_cmdline@@Base+0x144>
   176d8:	mov	r0, r6
   176dc:	add	r2, r5, #8
   176e0:	add	r1, pc, r1
   176e4:	bl	12acc <sscanf@plt>
   176e8:	cmp	r0, #1
   176ec:	moveq	r0, #2
   176f0:	movne	r3, #255	; 0xff
   176f4:	movne	r0, #0
   176f8:	strne	r3, [r5, #8]
   176fc:	b	17654 <raspipreview_parse_cmdline@@Base+0x84>
   17700:	bl	1288c <__stack_chk_fail@plt>
   17704:	andeq	r6, r1, ip, lsl sl
   17708:	andeq	r0, r0, r4, lsl #3
   1770c:	andeq	r6, r1, ip, lsr #31
   17710:	andeq	r4, r0, r0, asr #13
   17714:	andeq	r3, r0, r8, lsl ip

00017718 <raspipreview_display_help@@Base>:
   17718:	push	{r3, lr}
   1771c:	mov	r1, #1
   17720:	ldr	r3, [pc, #48]	; 17758 <raspipreview_display_help@@Base+0x40>
   17724:	mov	r2, #29
   17728:	ldr	ip, [pc, #44]	; 1775c <raspipreview_display_help@@Base+0x44>
   1772c:	add	r3, pc, r3
   17730:	ldr	r0, [pc, #40]	; 17760 <raspipreview_display_help@@Base+0x48>
   17734:	ldr	r3, [r3, ip]
   17738:	add	r0, pc, r0
   1773c:	ldr	r3, [r3]
   17740:	bl	128ec <fwrite@plt>
   17744:	ldr	r0, [pc, #24]	; 17764 <raspipreview_display_help@@Base+0x4c>
   17748:	mov	r1, #4
   1774c:	add	r0, pc, r0
   17750:	pop	{r3, lr}
   17754:	b	170d0 <raspicli_display_help@@Base>
   17758:	andeq	r6, r1, ip, asr #17
   1775c:	muleq	r0, r8, r1
   17760:	andeq	r4, r0, r4, lsr r6
   17764:	andeq	r6, r1, r0, ror lr

00017768 <raspicommonsettings_set_defaults@@Base>:
   17768:	ldr	r1, [pc, #52]	; 177a4 <raspicommonsettings_set_defaults@@Base+0x3c>
   1776c:	mov	r2, #16
   17770:	push	{r4, lr}
   17774:	add	r1, pc, r1
   17778:	mov	r4, r0
   1777c:	bl	12a3c <strncpy@plt>
   17780:	mov	r3, #0
   17784:	str	r3, [r4, #16]
   17788:	str	r3, [r4, #20]
   1778c:	str	r3, [r4, #24]
   17790:	str	r3, [r4, #36]	; 0x24
   17794:	str	r3, [r4, #28]
   17798:	str	r3, [r4, #32]
   1779c:	str	r3, [r4, #40]	; 0x28
   177a0:	pop	{r4, pc}
   177a4:	andeq	r4, r0, ip, ror #13

000177a8 <raspicommonsettings_dump_parameters@@Base>:
   177a8:	ldr	ip, [pc, #180]	; 17864 <raspicommonsettings_dump_parameters@@Base+0xbc>
   177ac:	mov	r3, r0
   177b0:	push	{r4, r5, lr}
   177b4:	add	ip, pc, ip
   177b8:	ldr	lr, [pc, #168]	; 17868 <raspicommonsettings_dump_parameters@@Base+0xc0>
   177bc:	mov	r4, r0
   177c0:	mov	r0, ip
   177c4:	ldr	r2, [pc, #160]	; 1786c <raspicommonsettings_dump_parameters@@Base+0xc4>
   177c8:	sub	sp, sp, #12
   177cc:	mov	r1, #1
   177d0:	ldr	r5, [r0, lr]
   177d4:	add	r2, pc, r2
   177d8:	ldr	r0, [r5]
   177dc:	bl	12a6c <__fprintf_chk@plt>
   177e0:	ldr	r2, [r4, #20]
   177e4:	ldr	r3, [r4, #16]
   177e8:	mov	r1, #1
   177ec:	ldr	r0, [r5]
   177f0:	str	r2, [sp]
   177f4:	ldr	ip, [r4, #24]
   177f8:	ldr	r2, [pc, #112]	; 17870 <raspicommonsettings_dump_parameters@@Base+0xc8>
   177fc:	str	ip, [sp, #4]
   17800:	add	r2, pc, r2
   17804:	bl	12a6c <__fprintf_chk@plt>
   17808:	ldr	ip, [r4, #32]
   1780c:	ldr	r2, [pc, #96]	; 17874 <raspicommonsettings_dump_parameters@@Base+0xcc>
   17810:	mov	r1, #1
   17814:	ldr	r3, [r4, #28]
   17818:	ldr	r0, [r5]
   1781c:	add	r2, pc, r2
   17820:	str	ip, [sp]
   17824:	bl	12a6c <__fprintf_chk@plt>
   17828:	ldr	r3, [r4, #40]	; 0x28
   1782c:	ldr	r0, [r5]
   17830:	cmp	r3, #0
   17834:	bne	17858 <raspicommonsettings_dump_parameters@@Base+0xb0>
   17838:	ldr	r3, [pc, #56]	; 17878 <raspicommonsettings_dump_parameters@@Base+0xd0>
   1783c:	add	r3, pc, r3
   17840:	ldr	r2, [pc, #52]	; 1787c <raspicommonsettings_dump_parameters@@Base+0xd4>
   17844:	mov	r1, #1
   17848:	add	r2, pc, r2
   1784c:	add	sp, sp, #12
   17850:	pop	{r4, r5, lr}
   17854:	b	12a6c <__fprintf_chk@plt>
   17858:	ldr	r3, [pc, #32]	; 17880 <raspicommonsettings_dump_parameters@@Base+0xd8>
   1785c:	add	r3, pc, r3
   17860:	b	17840 <raspicommonsettings_dump_parameters@@Base+0x98>
   17864:	andeq	r6, r1, r4, asr #16
   17868:	andeq	r0, r0, r8, lsl #3
   1786c:	andeq	r4, r0, ip, lsr #13
   17870:	muleq	r0, r0, r6
   17874:	muleq	r0, r8, r6
   17878:	andeq	r4, r0, r8, lsr r6
   1787c:	muleq	r0, r0, r6
   17880:	andeq	r4, r0, r0, lsl r6

00017884 <raspicommonsettings_display_help@@Base>:
   17884:	push	{r3, lr}
   17888:	mov	r1, #1
   1788c:	ldr	r3, [pc, #48]	; 178c4 <raspicommonsettings_display_help@@Base+0x40>
   17890:	mov	r2, #27
   17894:	ldr	ip, [pc, #44]	; 178c8 <raspicommonsettings_display_help@@Base+0x44>
   17898:	add	r3, pc, r3
   1789c:	ldr	r0, [pc, #40]	; 178cc <raspicommonsettings_display_help@@Base+0x48>
   178a0:	ldr	r3, [r3, ip]
   178a4:	add	r0, pc, r0
   178a8:	ldr	r3, [r3]
   178ac:	bl	128ec <fwrite@plt>
   178b0:	ldr	r0, [pc, #24]	; 178d0 <raspicommonsettings_display_help@@Base+0x4c>
   178b4:	mov	r1, #8
   178b8:	add	r0, pc, r0
   178bc:	pop	{r3, lr}
   178c0:	b	170d0 <raspicli_display_help@@Base>
   178c4:	andeq	r6, r1, r0, ror #14
   178c8:	muleq	r0, r8, r1
   178cc:	andeq	r4, r0, r4, asr #12
   178d0:	andeq	r6, r1, r4, asr sp

000178d4 <raspicommonsettings_parse_cmdline@@Base>:
   178d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   178d8:	mov	r7, r0
   178dc:	ldr	r4, [pc, #612]	; 17b48 <raspicommonsettings_parse_cmdline@@Base+0x274>
   178e0:	sub	sp, sp, #20
   178e4:	ldr	ip, [pc, #608]	; 17b4c <raspicommonsettings_parse_cmdline@@Base+0x278>
   178e8:	cmp	r1, #0
   178ec:	add	r4, pc, r4
   178f0:	mov	r6, r2
   178f4:	mov	r8, r3
   178f8:	ldr	r5, [r4, ip]
   178fc:	ldr	r0, [r5]
   17900:	str	r0, [sp, #12]
   17904:	beq	17984 <raspicommonsettings_parse_cmdline@@Base+0xb0>
   17908:	ldr	r0, [pc, #576]	; 17b50 <raspicommonsettings_parse_cmdline@@Base+0x27c>
   1790c:	mov	r2, r1
   17910:	mov	r1, #8
   17914:	add	r3, sp, r1
   17918:	add	r0, pc, r0
   1791c:	bl	16f68 <raspicli_get_command_id@@Base>
   17920:	cmn	r0, #1
   17924:	beq	17984 <raspicommonsettings_parse_cmdline@@Base+0xb0>
   17928:	ldr	r3, [sp, #8]
   1792c:	cmp	r3, #0
   17930:	ble	1793c <raspicommonsettings_parse_cmdline@@Base+0x68>
   17934:	cmp	r6, #0
   17938:	beq	17984 <raspicommonsettings_parse_cmdline@@Base+0xb0>
   1793c:	cmp	r0, #7
   17940:	addls	pc, pc, r0, lsl #2
   17944:	b	17984 <raspicommonsettings_parse_cmdline@@Base+0xb0>
   17948:	b	179ac <raspicommonsettings_parse_cmdline@@Base+0xd8>
   1794c:	b	17968 <raspicommonsettings_parse_cmdline@@Base+0x94>
   17950:	b	179c4 <raspicommonsettings_parse_cmdline@@Base+0xf0>
   17954:	b	179e8 <raspicommonsettings_parse_cmdline@@Base+0x114>
   17958:	b	17a94 <raspicommonsettings_parse_cmdline@@Base+0x1c0>
   1795c:	b	17aa0 <raspicommonsettings_parse_cmdline@@Base+0x1cc>
   17960:	b	17ac0 <raspicommonsettings_parse_cmdline@@Base+0x1ec>
   17964:	b	179a0 <raspicommonsettings_parse_cmdline@@Base+0xcc>
   17968:	ldr	r1, [pc, #484]	; 17b54 <raspicommonsettings_parse_cmdline@@Base+0x280>
   1796c:	mov	r0, r6
   17970:	add	r2, r7, #16
   17974:	add	r1, pc, r1
   17978:	bl	12acc <sscanf@plt>
   1797c:	cmp	r0, #1
   17980:	beq	179e0 <raspicommonsettings_parse_cmdline@@Base+0x10c>
   17984:	mov	r0, #0
   17988:	ldr	r2, [sp, #12]
   1798c:	ldr	r3, [r5]
   17990:	cmp	r2, r3
   17994:	bne	17b44 <raspicommonsettings_parse_cmdline@@Base+0x270>
   17998:	add	sp, sp, #20
   1799c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   179a0:	mov	r0, #1
   179a4:	str	r0, [r7, #40]	; 0x28
   179a8:	b	17988 <raspicommonsettings_parse_cmdline@@Base+0xb4>
   179ac:	bl	17e18 <get_app_name@@Base>
   179b0:	bl	1279c <basename@plt>
   179b4:	mov	r1, r8
   179b8:	bl	17bf4 <display_valid_parameters@@Base>
   179bc:	mov	r0, #0
   179c0:	bl	129b8 <exit@plt>
   179c4:	ldr	r1, [pc, #396]	; 17b58 <raspicommonsettings_parse_cmdline@@Base+0x284>
   179c8:	mov	r0, r6
   179cc:	add	r2, r7, #20
   179d0:	add	r1, pc, r1
   179d4:	bl	12acc <sscanf@plt>
   179d8:	cmp	r0, #1
   179dc:	bne	17984 <raspicommonsettings_parse_cmdline@@Base+0xb0>
   179e0:	mov	r0, #2
   179e4:	b	17988 <raspicommonsettings_parse_cmdline@@Base+0xb4>
   179e8:	mov	r0, r6
   179ec:	bl	129dc <strlen@plt>
   179f0:	subs	r8, r0, #0
   179f4:	beq	17984 <raspicommonsettings_parse_cmdline@@Base+0xb0>
   179f8:	ldrb	r3, [r6]
   179fc:	cmp	r3, #0
   17a00:	beq	17a6c <raspicommonsettings_parse_cmdline@@Base+0x198>
   17a04:	mov	r0, r6
   17a08:	mov	r1, #37	; 0x25
   17a0c:	bl	129e8 <strchr@plt>
   17a10:	subs	r9, r0, #0
   17a14:	beq	17a6c <raspicommonsettings_parse_cmdline@@Base+0x198>
   17a18:	bl	129ac <__ctype_b_loc@plt>
   17a1c:	add	lr, r9, #1
   17a20:	mov	r1, #0
   17a24:	ldr	r0, [r0]
   17a28:	b	17a30 <raspicommonsettings_parse_cmdline@@Base+0x15c>
   17a2c:	add	r1, r1, #1
   17a30:	mov	r3, lr
   17a34:	add	lr, lr, #1
   17a38:	ldrb	ip, [r3]
   17a3c:	lsl	r2, ip, #1
   17a40:	ldrh	r2, [r0, r2]
   17a44:	tst	r2, #2048	; 0x800
   17a48:	bne	17a2c <raspicommonsettings_parse_cmdline@@Base+0x158>
   17a4c:	cmp	ip, #37	; 0x25
   17a50:	beq	17ae0 <raspicommonsettings_parse_cmdline@@Base+0x20c>
   17a54:	cmp	ip, #100	; 0x64
   17a58:	bne	17ae8 <raspicommonsettings_parse_cmdline@@Base+0x214>
   17a5c:	ldrb	r2, [r3, #1]
   17a60:	add	r0, r3, #1
   17a64:	cmp	r2, #0
   17a68:	bne	17a08 <raspicommonsettings_parse_cmdline@@Base+0x134>
   17a6c:	add	r0, r8, #10
   17a70:	bl	12934 <malloc@plt>
   17a74:	cmp	r0, #0
   17a78:	str	r0, [r7, #24]
   17a7c:	beq	17b08 <raspicommonsettings_parse_cmdline@@Base+0x234>
   17a80:	mov	r1, r6
   17a84:	add	r2, r8, #1
   17a88:	bl	12a3c <strncpy@plt>
   17a8c:	mov	r0, #2
   17a90:	b	17988 <raspicommonsettings_parse_cmdline@@Base+0xb4>
   17a94:	mov	r0, #1
   17a98:	str	r0, [r7, #36]	; 0x24
   17a9c:	b	17988 <raspicommonsettings_parse_cmdline@@Base+0xb4>
   17aa0:	ldr	r1, [pc, #180]	; 17b5c <raspicommonsettings_parse_cmdline@@Base+0x288>
   17aa4:	mov	r0, r6
   17aa8:	add	r2, r7, #28
   17aac:	add	r1, pc, r1
   17ab0:	bl	12acc <sscanf@plt>
   17ab4:	cmp	r0, #1
   17ab8:	bne	17984 <raspicommonsettings_parse_cmdline@@Base+0xb0>
   17abc:	b	179e0 <raspicommonsettings_parse_cmdline@@Base+0x10c>
   17ac0:	ldr	r1, [pc, #152]	; 17b60 <raspicommonsettings_parse_cmdline@@Base+0x28c>
   17ac4:	mov	r0, r6
   17ac8:	add	r2, r7, #32
   17acc:	add	r1, pc, r1
   17ad0:	bl	12acc <sscanf@plt>
   17ad4:	cmp	r0, #1
   17ad8:	bne	17984 <raspicommonsettings_parse_cmdline@@Base+0xb0>
   17adc:	b	179e0 <raspicommonsettings_parse_cmdline@@Base+0x10c>
   17ae0:	cmp	r1, #0
   17ae4:	beq	17a5c <raspicommonsettings_parse_cmdline@@Base+0x188>
   17ae8:	ldr	r3, [pc, #116]	; 17b64 <raspicommonsettings_parse_cmdline@@Base+0x290>
   17aec:	mov	r1, #1
   17af0:	ldr	r2, [pc, #112]	; 17b68 <raspicommonsettings_parse_cmdline@@Base+0x294>
   17af4:	ldr	r3, [r4, r3]
   17af8:	add	r2, pc, r2
   17afc:	ldr	r0, [r3]
   17b00:	bl	12a6c <__fprintf_chk@plt>
   17b04:	b	17a6c <raspicommonsettings_parse_cmdline@@Base+0x198>
   17b08:	ldr	r3, [pc, #92]	; 17b6c <raspicommonsettings_parse_cmdline@@Base+0x298>
   17b0c:	mov	r2, #190	; 0xbe
   17b10:	ldr	r0, [pc, #88]	; 17b70 <raspicommonsettings_parse_cmdline@@Base+0x29c>
   17b14:	add	r3, pc, r3
   17b18:	ldr	r1, [pc, #84]	; 17b74 <raspicommonsettings_parse_cmdline@@Base+0x2a0>
   17b1c:	str	r3, [sp]
   17b20:	add	r0, pc, r0
   17b24:	ldr	r3, [pc, #76]	; 17b78 <raspicommonsettings_parse_cmdline@@Base+0x2a4>
   17b28:	add	r1, pc, r1
   17b2c:	add	r3, pc, r3
   17b30:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   17b34:	ldr	r0, [r7, #24]
   17b38:	cmp	r0, #0
   17b3c:	beq	179e0 <raspicommonsettings_parse_cmdline@@Base+0x10c>
   17b40:	b	17a80 <raspicommonsettings_parse_cmdline@@Base+0x1ac>
   17b44:	bl	1288c <__stack_chk_fail@plt>
   17b48:	andeq	r6, r1, ip, lsl #14
   17b4c:	andeq	r0, r0, r4, lsl #3
   17b50:	strdeq	r6, [r1], -r4
   17b54:	andeq	r3, r0, r4, lsl #19
   17b58:	andeq	r3, r0, r8, lsr #18
   17b5c:	andeq	r3, r0, ip, asr #16
   17b60:	andeq	r3, r0, ip, lsr #16
   17b64:	andeq	r0, r0, r8, lsl #3
   17b68:	andeq	r4, r0, ip, lsl #8
   17b6c:	andeq	r4, r0, ip, lsr #9
   17b70:	andeq	r4, r0, r0, lsr r4
   17b74:	andeq	r4, r0, r4, lsl r3
   17b78:	andeq	r3, r0, r4, ror #5

00017b7c <print_app_details@@Base>:
   17b7c:	ldr	r2, [pc, #96]	; 17be4 <print_app_details@@Base+0x68>
   17b80:	push	{r4, lr}
   17b84:	add	r2, pc, r2
   17b88:	mov	r4, r0
   17b8c:	sub	sp, sp, #8
   17b90:	ldr	r3, [r2]
   17b94:	cmp	r3, #0
   17b98:	movne	r0, r3
   17b9c:	beq	17bd4 <print_app_details@@Base+0x58>
   17ba0:	bl	1279c <basename@plt>
   17ba4:	ldr	ip, [pc, #60]	; 17be8 <print_app_details@@Base+0x6c>
   17ba8:	ldr	r2, [pc, #60]	; 17bec <print_app_details@@Base+0x70>
   17bac:	mov	r1, #1
   17bb0:	add	ip, pc, ip
   17bb4:	str	ip, [sp]
   17bb8:	add	r2, pc, r2
   17bbc:	str	ip, [sp, #4]
   17bc0:	mov	r3, r0
   17bc4:	mov	r0, r4
   17bc8:	bl	12a6c <__fprintf_chk@plt>
   17bcc:	add	sp, sp, #8
   17bd0:	pop	{r4, pc}
   17bd4:	ldr	r0, [pc, #20]	; 17bf0 <print_app_details@@Base+0x74>
   17bd8:	add	r0, pc, r0
   17bdc:	str	r0, [r2]
   17be0:	b	17ba0 <print_app_details@@Base+0x24>
   17be4:	andeq	r6, r1, r4, lsr ip
   17be8:	andeq	r4, r0, ip, lsl #26
   17bec:	andeq	r4, r0, r8, lsr #12
   17bf0:	strdeq	r4, [r0], -ip

00017bf4 <display_valid_parameters@@Base>:
   17bf4:	ldr	r3, [pc, #72]	; 17c44 <display_valid_parameters@@Base+0x50>
   17bf8:	ldr	r2, [pc, #72]	; 17c48 <display_valid_parameters@@Base+0x54>
   17bfc:	add	r3, pc, r3
   17c00:	push	{r4, r5, r6, lr}
   17c04:	mov	r6, r0
   17c08:	ldr	r4, [r3, r2]
   17c0c:	mov	r5, r1
   17c10:	ldr	r0, [r4]
   17c14:	bl	17b7c <print_app_details@@Base>
   17c18:	cmp	r5, #0
   17c1c:	beq	17c28 <display_valid_parameters@@Base+0x34>
   17c20:	mov	r0, r6
   17c24:	blx	r5
   17c28:	bl	17884 <raspicommonsettings_display_help@@Base>
   17c2c:	bl	17718 <raspipreview_display_help@@Base>
   17c30:	bl	14d68 <raspicamcontrol_display_help@@Base>
   17c34:	ldr	r1, [r4]
   17c38:	mov	r0, #10
   17c3c:	pop	{r4, r5, r6, lr}
   17c40:	b	12ac0 <fputc@plt>
   17c44:	strdeq	r6, [r1], -ip
   17c48:	muleq	r0, r8, r1

00017c4c <get_sensor_defaults@@Base>:
   17c4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17c50:	mov	r8, r1
   17c54:	ldr	r4, [pc, #396]	; 17de8 <get_sensor_defaults@@Base+0x19c>
   17c58:	mov	r9, r0
   17c5c:	ldr	ip, [pc, #392]	; 17dec <get_sensor_defaults@@Base+0x1a0>
   17c60:	mov	r0, r1
   17c64:	add	r4, pc, r4
   17c68:	ldr	r1, [pc, #384]	; 17df0 <get_sensor_defaults@@Base+0x1a4>
   17c6c:	mov	r6, r3
   17c70:	sub	sp, sp, #160	; 0xa0
   17c74:	ldr	r5, [r4, ip]
   17c78:	add	r1, pc, r1
   17c7c:	mov	r7, r2
   17c80:	mov	r2, #16
   17c84:	ldr	r3, [r5]
   17c88:	str	r3, [sp, #156]	; 0x9c
   17c8c:	bl	12a3c <strncpy@plt>
   17c90:	ldr	r0, [pc, #348]	; 17df4 <get_sensor_defaults@@Base+0x1a8>
   17c94:	mov	r1, sp
   17c98:	add	r0, pc, r0
   17c9c:	bl	127b4 <mmal_component_create@plt>
   17ca0:	cmp	r0, #0
   17ca4:	beq	17d04 <get_sensor_defaults@@Base+0xb8>
   17ca8:	ldr	r3, [pc, #328]	; 17df8 <get_sensor_defaults@@Base+0x1ac>
   17cac:	ldr	r0, [r4, r3]
   17cb0:	ldr	r3, [r0]
   17cb4:	cmp	r3, #1
   17cb8:	bls	17ccc <get_sensor_defaults@@Base+0x80>
   17cbc:	ldr	r2, [pc, #312]	; 17dfc <get_sensor_defaults@@Base+0x1b0>
   17cc0:	mov	r1, #2
   17cc4:	add	r2, pc, r2
   17cc8:	bl	12754 <vcos_log_impl@plt>
   17ccc:	ldr	r3, [r7]
   17cd0:	ldr	r2, [sp, #156]	; 0x9c
   17cd4:	cmp	r3, #0
   17cd8:	moveq	r3, #2592	; 0xa20
   17cdc:	streq	r3, [r7]
   17ce0:	ldr	r3, [r6]
   17ce4:	cmp	r3, #0
   17ce8:	movweq	r3, #1944	; 0x798
   17cec:	streq	r3, [r6]
   17cf0:	ldr	r3, [r5]
   17cf4:	cmp	r2, r3
   17cf8:	bne	17de4 <get_sensor_defaults@@Base+0x198>
   17cfc:	add	sp, sp, #160	; 0xa0
   17d00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17d04:	ldr	r0, [sp]
   17d08:	add	sl, sp, #4
   17d0c:	mov	r2, #148	; 0x94
   17d10:	mov	r3, #28
   17d14:	mov	r1, sl
   17d18:	movt	r3, #1
   17d1c:	ldr	r0, [r0, #16]
   17d20:	str	r3, [sp, #4]
   17d24:	str	r2, [sp, #8]
   17d28:	bl	12b14 <mmal_port_parameter_get@plt>
   17d2c:	cmp	r0, #0
   17d30:	bne	17d40 <get_sensor_defaults@@Base+0xf4>
   17d34:	ldr	r0, [sp]
   17d38:	bl	12880 <mmal_component_destroy@plt>
   17d3c:	b	17ccc <get_sensor_defaults@@Base+0x80>
   17d40:	ldr	r3, [sp]
   17d44:	mov	r1, sl
   17d48:	mov	r2, #152	; 0x98
   17d4c:	str	r2, [sp, #8]
   17d50:	ldr	r0, [r3, #16]
   17d54:	bl	12b14 <mmal_port_parameter_get@plt>
   17d58:	cmp	r0, #0
   17d5c:	bne	17dbc <get_sensor_defaults@@Base+0x170>
   17d60:	ldr	r3, [sp, #12]
   17d64:	cmp	r3, r9
   17d68:	bls	17dbc <get_sensor_defaults@@Base+0x170>
   17d6c:	ldr	r3, [r7]
   17d70:	add	r1, r9, #1
   17d74:	mov	r0, r8
   17d78:	cmp	r3, #0
   17d7c:	add	r1, sl, r1, lsl #5
   17d80:	addeq	r2, sp, #160	; 0xa0
   17d84:	addeq	r3, r2, r9, lsl #5
   17d88:	ldreq	r3, [r3, #-136]	; 0xffffff78
   17d8c:	streq	r3, [r7]
   17d90:	ldr	r3, [r6]
   17d94:	cmp	r3, #0
   17d98:	addeq	r2, sp, #160	; 0xa0
   17d9c:	addeq	r3, r2, r9, lsl #5
   17da0:	mov	r2, #16
   17da4:	ldreq	r3, [r3, #-132]	; 0xffffff7c
   17da8:	streq	r3, [r6]
   17dac:	bl	12a3c <strncpy@plt>
   17db0:	mov	r3, #0
   17db4:	strb	r3, [r8, #15]
   17db8:	b	17d34 <get_sensor_defaults@@Base+0xe8>
   17dbc:	ldr	r3, [pc, #52]	; 17df8 <get_sensor_defaults@@Base+0x1ac>
   17dc0:	ldr	r0, [r4, r3]
   17dc4:	ldr	r3, [r0]
   17dc8:	cmp	r3, #1
   17dcc:	bls	17d34 <get_sensor_defaults@@Base+0xe8>
   17dd0:	ldr	r2, [pc, #40]	; 17e00 <get_sensor_defaults@@Base+0x1b4>
   17dd4:	mov	r1, #2
   17dd8:	add	r2, pc, r2
   17ddc:	bl	12754 <vcos_log_impl@plt>
   17de0:	b	17d34 <get_sensor_defaults@@Base+0xe8>
   17de4:	bl	1288c <__stack_chk_fail@plt>
   17de8:	muleq	r1, r4, r3
   17dec:	andeq	r0, r0, r4, lsl #3
   17df0:	andeq	r4, r0, ip, lsl #11
   17df4:	andeq	r4, r0, r4, ror r5
   17df8:	andeq	r0, r0, r0, lsl #3
   17dfc:	muleq	r0, r4, r5
   17e00:	andeq	r4, r0, r4, asr #8

00017e04 <set_app_name@@Base>:
   17e04:	ldr	r3, [pc, #8]	; 17e14 <set_app_name@@Base+0x10>
   17e08:	add	r3, pc, r3
   17e0c:	str	r0, [r3]
   17e10:	bx	lr
   17e14:			; <UNDEFINED> instruction: 0x000169b0

00017e18 <get_app_name@@Base>:
   17e18:	ldr	r3, [pc, #4]	; 17e24 <get_app_name@@Base+0xc>
   17e1c:	ldr	r0, [pc, r3]
   17e20:	bx	lr
   17e24:	muleq	r1, ip, r9

00017e28 <connect_ports@@Base>:
   17e28:	push	{r3, r4, r5, lr}
   17e2c:	mov	r3, r1
   17e30:	mov	r4, r2
   17e34:	mov	r1, r0
   17e38:	mov	r2, r3
   17e3c:	mov	r0, r4
   17e40:	mov	r3, #3
   17e44:	bl	1273c <mmal_connection_create@plt>
   17e48:	subs	r5, r0, #0
   17e4c:	beq	17e58 <connect_ports@@Base+0x30>
   17e50:	mov	r0, r5
   17e54:	pop	{r3, r4, r5, pc}
   17e58:	ldr	r0, [r4]
   17e5c:	bl	129d0 <mmal_connection_enable@plt>
   17e60:	subs	r5, r0, #0
   17e64:	beq	17e50 <connect_ports@@Base+0x28>
   17e68:	ldr	r0, [r4]
   17e6c:	bl	12970 <mmal_connection_destroy@plt>
   17e70:	mov	r0, r5
   17e74:	pop	{r3, r4, r5, pc}

00017e78 <check_disable_port@@Base>:
   17e78:	subs	r3, r0, #0
   17e7c:	bxeq	lr
   17e80:	ldr	r3, [r3, #16]
   17e84:	cmp	r3, #0
   17e88:	bxeq	lr
   17e8c:	b	1282c <mmal_port_disable@plt>

00017e90 <default_signal_handler@@Base>:
   17e90:	push	{r3, lr}
   17e94:	cmp	r0, #10
   17e98:	ldr	r3, [pc, #48]	; 17ed0 <default_signal_handler@@Base+0x40>
   17e9c:	add	r3, pc, r3
   17ea0:	popeq	{r3, pc}
   17ea4:	ldr	r2, [pc, #40]	; 17ed4 <default_signal_handler@@Base+0x44>
   17ea8:	ldr	r0, [r3, r2]
   17eac:	ldr	r3, [r0]
   17eb0:	cmp	r3, #1
   17eb4:	bls	17ec8 <default_signal_handler@@Base+0x38>
   17eb8:	ldr	r2, [pc, #24]	; 17ed8 <default_signal_handler@@Base+0x48>
   17ebc:	mov	r1, #2
   17ec0:	add	r2, pc, r2
   17ec4:	bl	12754 <vcos_log_impl@plt>
   17ec8:	mov	r0, #130	; 0x82
   17ecc:	bl	129b8 <exit@plt>
   17ed0:	andeq	r6, r1, ip, asr r1
   17ed4:	andeq	r0, r0, r0, lsl #3
   17ed8:	andeq	r4, r0, r0, asr #7

00017edc <mmal_status_to_int@@Base>:
   17edc:	push	{r3, lr}
   17ee0:	cmp	r0, #0
   17ee4:	ldr	r3, [pc, #732]	; 181c8 <mmal_status_to_int@@Base+0x2ec>
   17ee8:	add	r3, pc, r3
   17eec:	popeq	{r3, pc}
   17ef0:	sub	r0, r0, #1
   17ef4:	ldr	r2, [pc, #720]	; 181cc <mmal_status_to_int@@Base+0x2f0>
   17ef8:	cmp	r0, #14
   17efc:	addls	pc, pc, r0, lsl #2
   17f00:	b	181a0 <mmal_status_to_int@@Base+0x2c4>
   17f04:	b	18170 <mmal_status_to_int@@Base+0x294>
   17f08:	b	18148 <mmal_status_to_int@@Base+0x26c>
   17f0c:	b	18120 <mmal_status_to_int@@Base+0x244>
   17f10:	b	180f8 <mmal_status_to_int@@Base+0x21c>
   17f14:	b	180d0 <mmal_status_to_int@@Base+0x1f4>
   17f18:	b	180a8 <mmal_status_to_int@@Base+0x1cc>
   17f1c:	b	18080 <mmal_status_to_int@@Base+0x1a4>
   17f20:	b	18058 <mmal_status_to_int@@Base+0x17c>
   17f24:	b	18030 <mmal_status_to_int@@Base+0x154>
   17f28:	b	18008 <mmal_status_to_int@@Base+0x12c>
   17f2c:	b	17fe0 <mmal_status_to_int@@Base+0x104>
   17f30:	b	17fb8 <mmal_status_to_int@@Base+0xdc>
   17f34:	b	17f90 <mmal_status_to_int@@Base+0xb4>
   17f38:	b	17f68 <mmal_status_to_int@@Base+0x8c>
   17f3c:	b	17f40 <mmal_status_to_int@@Base+0x64>
   17f40:	ldr	r0, [r3, r2]
   17f44:	ldr	r3, [r0]
   17f48:	cmp	r3, #1
   17f4c:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   17f50:	ldr	r2, [pc, #632]	; 181d0 <mmal_status_to_int@@Base+0x2f4>
   17f54:	mov	r1, #2
   17f58:	add	r2, pc, r2
   17f5c:	bl	12754 <vcos_log_impl@plt>
   17f60:	mov	r0, #1
   17f64:	pop	{r3, pc}
   17f68:	ldr	r0, [r3, r2]
   17f6c:	ldr	r3, [r0]
   17f70:	cmp	r3, #1
   17f74:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   17f78:	ldr	r2, [pc, #596]	; 181d4 <mmal_status_to_int@@Base+0x2f8>
   17f7c:	mov	r1, #2
   17f80:	add	r2, pc, r2
   17f84:	bl	12754 <vcos_log_impl@plt>
   17f88:	mov	r0, #1
   17f8c:	pop	{r3, pc}
   17f90:	ldr	r0, [r3, r2]
   17f94:	ldr	r3, [r0]
   17f98:	cmp	r3, #1
   17f9c:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   17fa0:	ldr	r2, [pc, #560]	; 181d8 <mmal_status_to_int@@Base+0x2fc>
   17fa4:	mov	r1, #2
   17fa8:	add	r2, pc, r2
   17fac:	bl	12754 <vcos_log_impl@plt>
   17fb0:	mov	r0, #1
   17fb4:	pop	{r3, pc}
   17fb8:	ldr	r0, [r3, r2]
   17fbc:	ldr	r3, [r0]
   17fc0:	cmp	r3, #1
   17fc4:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   17fc8:	ldr	r2, [pc, #524]	; 181dc <mmal_status_to_int@@Base+0x300>
   17fcc:	mov	r1, #2
   17fd0:	add	r2, pc, r2
   17fd4:	bl	12754 <vcos_log_impl@plt>
   17fd8:	mov	r0, #1
   17fdc:	pop	{r3, pc}
   17fe0:	ldr	r0, [r3, r2]
   17fe4:	ldr	r3, [r0]
   17fe8:	cmp	r3, #1
   17fec:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   17ff0:	ldr	r2, [pc, #488]	; 181e0 <mmal_status_to_int@@Base+0x304>
   17ff4:	mov	r1, #2
   17ff8:	add	r2, pc, r2
   17ffc:	bl	12754 <vcos_log_impl@plt>
   18000:	mov	r0, #1
   18004:	pop	{r3, pc}
   18008:	ldr	r0, [r3, r2]
   1800c:	ldr	r3, [r0]
   18010:	cmp	r3, #1
   18014:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   18018:	ldr	r2, [pc, #452]	; 181e4 <mmal_status_to_int@@Base+0x308>
   1801c:	mov	r1, #2
   18020:	add	r2, pc, r2
   18024:	bl	12754 <vcos_log_impl@plt>
   18028:	mov	r0, #1
   1802c:	pop	{r3, pc}
   18030:	ldr	r0, [r3, r2]
   18034:	ldr	r3, [r0]
   18038:	cmp	r3, #1
   1803c:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   18040:	ldr	r2, [pc, #416]	; 181e8 <mmal_status_to_int@@Base+0x30c>
   18044:	mov	r1, #2
   18048:	add	r2, pc, r2
   1804c:	bl	12754 <vcos_log_impl@plt>
   18050:	mov	r0, #1
   18054:	pop	{r3, pc}
   18058:	ldr	r0, [r3, r2]
   1805c:	ldr	r3, [r0]
   18060:	cmp	r3, #1
   18064:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   18068:	ldr	r2, [pc, #380]	; 181ec <mmal_status_to_int@@Base+0x310>
   1806c:	mov	r1, #2
   18070:	add	r2, pc, r2
   18074:	bl	12754 <vcos_log_impl@plt>
   18078:	mov	r0, #1
   1807c:	pop	{r3, pc}
   18080:	ldr	r0, [r3, r2]
   18084:	ldr	r3, [r0]
   18088:	cmp	r3, #1
   1808c:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   18090:	ldr	r2, [pc, #344]	; 181f0 <mmal_status_to_int@@Base+0x314>
   18094:	mov	r1, #2
   18098:	add	r2, pc, r2
   1809c:	bl	12754 <vcos_log_impl@plt>
   180a0:	mov	r0, #1
   180a4:	pop	{r3, pc}
   180a8:	ldr	r0, [r3, r2]
   180ac:	ldr	r3, [r0]
   180b0:	cmp	r3, #1
   180b4:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   180b8:	ldr	r2, [pc, #308]	; 181f4 <mmal_status_to_int@@Base+0x318>
   180bc:	mov	r1, #2
   180c0:	add	r2, pc, r2
   180c4:	bl	12754 <vcos_log_impl@plt>
   180c8:	mov	r0, #1
   180cc:	pop	{r3, pc}
   180d0:	ldr	r0, [r3, r2]
   180d4:	ldr	r3, [r0]
   180d8:	cmp	r3, #1
   180dc:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   180e0:	ldr	r2, [pc, #272]	; 181f8 <mmal_status_to_int@@Base+0x31c>
   180e4:	mov	r1, #2
   180e8:	add	r2, pc, r2
   180ec:	bl	12754 <vcos_log_impl@plt>
   180f0:	mov	r0, #1
   180f4:	pop	{r3, pc}
   180f8:	ldr	r0, [r3, r2]
   180fc:	ldr	r3, [r0]
   18100:	cmp	r3, #1
   18104:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   18108:	ldr	r2, [pc, #236]	; 181fc <mmal_status_to_int@@Base+0x320>
   1810c:	mov	r1, #2
   18110:	add	r2, pc, r2
   18114:	bl	12754 <vcos_log_impl@plt>
   18118:	mov	r0, #1
   1811c:	pop	{r3, pc}
   18120:	ldr	r0, [r3, r2]
   18124:	ldr	r3, [r0]
   18128:	cmp	r3, #1
   1812c:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   18130:	ldr	r2, [pc, #200]	; 18200 <mmal_status_to_int@@Base+0x324>
   18134:	mov	r1, #2
   18138:	add	r2, pc, r2
   1813c:	bl	12754 <vcos_log_impl@plt>
   18140:	mov	r0, #1
   18144:	pop	{r3, pc}
   18148:	ldr	r0, [r3, r2]
   1814c:	ldr	r3, [r0]
   18150:	cmp	r3, #1
   18154:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   18158:	ldr	r2, [pc, #164]	; 18204 <mmal_status_to_int@@Base+0x328>
   1815c:	mov	r1, #2
   18160:	add	r2, pc, r2
   18164:	bl	12754 <vcos_log_impl@plt>
   18168:	mov	r0, #1
   1816c:	pop	{r3, pc}
   18170:	ldr	r0, [r3, r2]
   18174:	ldr	r3, [r0]
   18178:	cmp	r3, #1
   1817c:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   18180:	ldr	r2, [pc, #128]	; 18208 <mmal_status_to_int@@Base+0x32c>
   18184:	mov	r1, #2
   18188:	add	r2, pc, r2
   1818c:	bl	12754 <vcos_log_impl@plt>
   18190:	mov	r0, #1
   18194:	pop	{r3, pc}
   18198:	mov	r0, #1
   1819c:	pop	{r3, pc}
   181a0:	ldr	r0, [r3, r2]
   181a4:	ldr	r3, [r0]
   181a8:	cmp	r3, #1
   181ac:	bls	18198 <mmal_status_to_int@@Base+0x2bc>
   181b0:	ldr	r2, [pc, #84]	; 1820c <mmal_status_to_int@@Base+0x330>
   181b4:	mov	r1, #2
   181b8:	add	r2, pc, r2
   181bc:	bl	12754 <vcos_log_impl@plt>
   181c0:	mov	r0, #1
   181c4:	pop	{r3, pc}
   181c8:	andeq	r6, r1, r0, lsl r1
   181cc:	andeq	r0, r0, r0, lsl #3
   181d0:	strdeq	r4, [r0], -r8
   181d4:	muleq	r0, ip, r4
   181d8:	andeq	r4, r0, ip, asr r4
   181dc:	andeq	r4, r0, r8, lsl r4
   181e0:			; <UNDEFINED> instruction: 0x000043b8
   181e4:	andeq	r4, r0, ip, asr r3
   181e8:	andeq	r4, r0, r8, lsl #6
   181ec:	ldrdeq	r4, [r0], -r0
   181f0:	muleq	r0, ip, r2
   181f4:	andeq	r4, r0, r8, asr r2
   181f8:	andeq	r4, r0, r4, lsl r2
   181fc:	ldrdeq	r4, [r0], -r0
   18200:	muleq	r0, r4, r1
   18204:	andeq	r4, r0, r4, asr #2
   18208:	andeq	r4, r0, ip, lsl #2
   1820c:	andeq	r4, r0, r4, lsr #5

00018210 <get_microseconds64@@Base>:
   18210:	ldr	r3, [pc, #124]	; 18294 <get_microseconds64@@Base+0x84>
   18214:	mov	r0, #4
   18218:	ldr	r2, [pc, #120]	; 18298 <get_microseconds64@@Base+0x88>
   1821c:	add	r3, pc, r3
   18220:	push	{r4, r5, r6, r7, lr}
   18224:	sub	sp, sp, #20
   18228:	ldr	r4, [r3, r2]
   1822c:	add	r1, sp, r0
   18230:	ldr	r3, [r4]
   18234:	str	r3, [sp, #12]
   18238:	bl	12b08 <clock_gettime@plt>
   1823c:	ldr	r1, [sp, #8]
   18240:	movw	r2, #19923	; 0x4dd3
   18244:	movt	r2, #4194	; 0x1062
   18248:	ldr	r0, [sp, #4]
   1824c:	movw	r3, #16960	; 0x4240
   18250:	movt	r3, #15
   18254:	smull	r6, r2, r2, r1
   18258:	asr	r1, r1, #31
   1825c:	mul	r0, r3, r0
   18260:	ldr	r5, [sp, #12]
   18264:	ldr	ip, [r4]
   18268:	rsb	r2, r1, r2, asr #6
   1826c:	adds	r6, r2, r0
   18270:	asr	r3, r2, #31
   18274:	adc	r7, r3, r0, asr #31
   18278:	cmp	r5, ip
   1827c:	mov	r0, r6
   18280:	mov	r1, r7
   18284:	bne	18290 <get_microseconds64@@Base+0x80>
   18288:	add	sp, sp, #20
   1828c:	pop	{r4, r5, r6, r7, pc}
   18290:	bl	1288c <__stack_chk_fail@plt>
   18294:	ldrdeq	r5, [r1], -ip
   18298:	andeq	r0, r0, r4, lsl #3
   1829c:	andeq	r0, r0, r0
   182a0:	ldr	r3, [pc, #472]	; 18480 <get_microseconds64@@Base+0x270>
   182a4:	ldr	r2, [pc, #472]	; 18484 <get_microseconds64@@Base+0x274>
   182a8:	add	r3, pc, r3
   182ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182b0:	sub	sp, sp, #28
   182b4:	ldr	sl, [pc, #460]	; 18488 <get_microseconds64@@Base+0x278>
   182b8:	ldr	r2, [r3, r2]
   182bc:	ldr	r6, [pc, #456]	; 1848c <get_microseconds64@@Base+0x27c>
   182c0:	add	sl, pc, sl
   182c4:	add	r3, sl, #8960	; 0x2300
   182c8:	ldr	r4, [pc, #448]	; 18490 <get_microseconds64@@Base+0x280>
   182cc:	add	r6, pc, r6
   182d0:	add	r3, r3, #32
   182d4:	add	r8, r6, #17664	; 0x4500
   182d8:	str	r3, [sp, #4]
   182dc:	ldr	r3, [r2]
   182e0:	add	r8, r8, #232	; 0xe8
   182e4:	add	r4, pc, r4
   182e8:	str	r2, [sp, #8]
   182ec:	str	r4, [sp, #12]
   182f0:	str	r3, [sp, #20]
   182f4:	ldr	r5, [sp, #12]
   182f8:	movw	r3, #17904	; 0x45f0
   182fc:	ldr	r9, [r5, r3]
   18300:	cmp	r9, #0
   18304:	bne	18420 <get_microseconds64@@Base+0x210>
   18308:	add	r7, r6, #8960	; 0x2300
   1830c:	mov	r4, #0
   18310:	mov	r5, #0
   18314:	add	r7, r7, #24
   18318:	b	18370 <get_microseconds64@@Base+0x160>
   1831c:	vldr	d7, [r6, #56]	; 0x38
   18320:	vcmp.f64	d7, #0.0
   18324:	vmrs	APSR_nzcv, fpscr
   18328:	beq	183a0 <get_microseconds64@@Base+0x190>
   1832c:	ldr	r3, [r6, #80]	; 0x50
   18330:	cmp	r3, #1
   18334:	ble	183a0 <get_microseconds64@@Base+0x190>
   18338:	mov	r0, r8
   1833c:	bl	1285c <time@plt>
   18340:	mov	r0, r6
   18344:	bl	12808 <pthread_mutex_lock@plt>
   18348:	add	r1, r6, #48	; 0x30
   1834c:	movw	r2, #8912	; 0x22d0
   18350:	mov	r0, r7
   18354:	bl	12820 <memcpy@plt>
   18358:	mov	r0, r6
   1835c:	bl	12730 <pthread_mutex_unlock@plt>
   18360:	movw	r3, #17904	; 0x45f0
   18364:	ldr	r3, [r6, r3]
   18368:	cmp	r3, #0
   1836c:	bne	18420 <get_microseconds64@@Base+0x210>
   18370:	add	fp, r6, #24
   18374:	strd	r4, [r6, #48]	; 0x30
   18378:	str	r9, [r6, #80]	; 0x50
   1837c:	mov	r0, fp
   18380:	bl	18e10 <connect_gpsd@@Base>
   18384:	cmp	r0, #0
   18388:	blt	18420 <get_microseconds64@@Base+0x210>
   1838c:	mov	r0, fp
   18390:	bl	18f18 <read_gps_data_once@@Base>
   18394:	cmp	r0, #0
   18398:	blt	18420 <get_microseconds64@@Base+0x210>
   1839c:	bne	1831c <get_microseconds64@@Base+0x10c>
   183a0:	add	r0, sp, #16
   183a4:	bl	1285c <time@plt>
   183a8:	movw	r3, #17896	; 0x45e8
   183ac:	ldr	r3, [sl, r3]
   183b0:	ldr	r2, [sp, #16]
   183b4:	rsb	r3, r3, r2
   183b8:	cmp	r3, #5
   183bc:	bgt	18440 <get_microseconds64@@Base+0x230>
   183c0:	ldr	r7, [pc, #204]	; 18494 <get_microseconds64@@Base+0x284>
   183c4:	mov	r1, #0
   183c8:	mov	r0, #4
   183cc:	add	r7, pc, r7
   183d0:	ldrd	r2, [r7, #48]	; 0x30
   183d4:	and	r2, r2, r0
   183d8:	and	r3, r3, r1
   183dc:	orrs	r1, r2, r3
   183e0:	beq	182f4 <get_microseconds64@@Base+0xe4>
   183e4:	mov	r0, r7
   183e8:	mov	r4, #4
   183ec:	bl	12808 <pthread_mutex_lock@plt>
   183f0:	movw	r1, #8984	; 0x2318
   183f4:	ldrd	r2, [r7, r1]
   183f8:	mov	r5, #0
   183fc:	add	ip, r7, #8960	; 0x2300
   18400:	mov	r0, r7
   18404:	orr	r2, r2, r4
   18408:	orr	r3, r3, r5
   1840c:	strd	r2, [r7, r1]
   18410:	ldrd	r2, [r7, #72]	; 0x48
   18414:	strd	r2, [ip, #48]	; 0x30
   18418:	bl	12730 <pthread_mutex_unlock@plt>
   1841c:	b	182f4 <get_microseconds64@@Base+0xe4>
   18420:	ldr	r5, [sp, #8]
   18424:	mov	r0, #0
   18428:	ldr	r2, [sp, #20]
   1842c:	ldr	r3, [r5]
   18430:	cmp	r2, r3
   18434:	bne	1847c <get_microseconds64@@Base+0x26c>
   18438:	add	sp, sp, #28
   1843c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18440:	mov	r0, sl
   18444:	bl	12808 <pthread_mutex_lock@plt>
   18448:	movw	lr, #8984	; 0x2318
   1844c:	mov	r2, #0
   18450:	mov	r3, #0
   18454:	ldr	r4, [sp, #4]
   18458:	movw	r1, #9016	; 0x2338
   1845c:	strd	r2, [sl, lr]
   18460:	mov	r0, sl
   18464:	ldrd	r2, [sl, #56]	; 0x38
   18468:	mov	ip, #0
   1846c:	str	ip, [sl, r1]
   18470:	strd	r2, [r4]
   18474:	bl	12730 <pthread_mutex_unlock@plt>
   18478:	b	183c0 <get_microseconds64@@Base+0x1b0>
   1847c:	bl	1288c <__stack_chk_fail@plt>
   18480:	andeq	r5, r1, r0, asr sp
   18484:	andeq	r0, r0, r4, lsl #3
   18488:	andeq	r6, r1, r0, lsl #10
   1848c:	strdeq	r6, [r1], -r4
   18490:	ldrdeq	r6, [r1], -ip
   18494:	strdeq	r6, [r1], -r4

00018498 <raspi_gps_lock@@Base>:
   18498:	push	{r4, lr}
   1849c:	ldr	r4, [pc, #20]	; 184b8 <raspi_gps_lock@@Base+0x20>
   184a0:	add	r4, pc, r4
   184a4:	mov	r0, r4
   184a8:	bl	12808 <pthread_mutex_lock@plt>
   184ac:	add	r0, r4, #8960	; 0x2300
   184b0:	add	r0, r0, #24
   184b4:	pop	{r4, pc}
   184b8:	andeq	r6, r1, r0, lsr #6

000184bc <raspi_gps_unlock@@Base>:
   184bc:	ldr	r0, [pc, #4]	; 184c8 <raspi_gps_unlock@@Base+0xc>
   184c0:	add	r0, pc, r0
   184c4:	b	12730 <pthread_mutex_unlock@plt>
   184c8:	andeq	r6, r1, r0, lsl #6

000184cc <raspi_gps_shutdown@@Base>:
   184cc:	push	{r3, r4, r5, lr}
   184d0:	movw	ip, #17908	; 0x45f4
   184d4:	ldr	r3, [pc, #204]	; 185a8 <raspi_gps_shutdown@@Base+0xdc>
   184d8:	mov	r4, r0
   184dc:	ldr	r5, [pc, #200]	; 185ac <raspi_gps_shutdown@@Base+0xe0>
   184e0:	movw	r2, #17904	; 0x45f0
   184e4:	add	r3, pc, r3
   184e8:	mov	r1, #1
   184ec:	add	r5, pc, r5
   184f0:	ldr	r0, [r3, ip]
   184f4:	str	r1, [r3, r2]
   184f8:	cmp	r0, #0
   184fc:	beq	18520 <raspi_gps_shutdown@@Base+0x54>
   18500:	cmp	r4, #0
   18504:	bne	18588 <raspi_gps_shutdown@@Base+0xbc>
   18508:	ldr	r2, [pc, #160]	; 185b0 <raspi_gps_shutdown@@Base+0xe4>
   1850c:	movw	r3, #17900	; 0x45ec
   18510:	mov	r1, #0
   18514:	add	r2, pc, r2
   18518:	ldr	r0, [r2, r3]
   1851c:	bl	12ab4 <pthread_join@plt>
   18520:	cmp	r4, #0
   18524:	beq	1853c <raspi_gps_shutdown@@Base+0x70>
   18528:	ldr	r3, [pc, #132]	; 185b4 <raspi_gps_shutdown@@Base+0xe8>
   1852c:	add	r3, pc, r3
   18530:	ldr	r3, [r3, #36]	; 0x24
   18534:	cmp	r3, #0
   18538:	bne	18564 <raspi_gps_shutdown@@Base+0x98>
   1853c:	ldr	r4, [pc, #116]	; 185b8 <raspi_gps_shutdown@@Base+0xec>
   18540:	add	r4, pc, r4
   18544:	add	r5, r4, #24
   18548:	mov	r0, r5
   1854c:	bl	18e88 <disconnect_gpsd@@Base>
   18550:	mov	r0, r5
   18554:	bl	18eec <libgps_unload@@Base>
   18558:	mov	r0, r4
   1855c:	pop	{r3, r4, r5, lr}
   18560:	b	127c0 <pthread_mutex_destroy@plt>
   18564:	ldr	r3, [pc, #80]	; 185bc <raspi_gps_shutdown@@Base+0xf0>
   18568:	mov	r1, #1
   1856c:	ldr	r0, [pc, #76]	; 185c0 <raspi_gps_shutdown@@Base+0xf4>
   18570:	mov	r2, #25
   18574:	ldr	r3, [r5, r3]
   18578:	add	r0, pc, r0
   1857c:	ldr	r3, [r3]
   18580:	bl	128ec <fwrite@plt>
   18584:	b	1853c <raspi_gps_shutdown@@Base+0x70>
   18588:	ldr	r3, [pc, #44]	; 185bc <raspi_gps_shutdown@@Base+0xf0>
   1858c:	mov	r2, #43	; 0x2b
   18590:	ldr	r0, [pc, #44]	; 185c4 <raspi_gps_shutdown@@Base+0xf8>
   18594:	ldr	r3, [r5, r3]
   18598:	add	r0, pc, r0
   1859c:	ldr	r3, [r3]
   185a0:	bl	128ec <fwrite@plt>
   185a4:	b	18508 <raspi_gps_shutdown@@Base+0x3c>
   185a8:	ldrdeq	r6, [r1], -ip
   185ac:	andeq	r5, r1, ip, lsl #22
   185b0:	andeq	r6, r1, ip, lsr #5
   185b4:	muleq	r1, r4, r2
   185b8:	andeq	r6, r1, r0, lsl #5
   185bc:	andeq	r0, r0, r8, lsl #3
   185c0:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   185c4:	andeq	r3, r0, r4, asr #30

000185c8 <raspi_gps_setup@@Base>:
   185c8:	push	{r4, r5, r6, r7, lr}
   185cc:	movw	r2, #17912	; 0x45f8
   185d0:	ldr	r4, [pc, #524]	; 187e4 <raspi_gps_setup@@Base+0x21c>
   185d4:	sub	sp, sp, #12
   185d8:	mov	r1, #0
   185dc:	mov	r7, r0
   185e0:	add	r4, pc, r4
   185e4:	ldr	r6, [pc, #508]	; 187e8 <raspi_gps_setup@@Base+0x220>
   185e8:	add	r5, r4, #24
   185ec:	mov	r0, r4
   185f0:	add	r6, pc, r6
   185f4:	bl	12a30 <memset@plt>
   185f8:	mov	r1, #0
   185fc:	mov	r0, r4
   18600:	bl	12838 <pthread_mutex_init@plt>
   18604:	mov	r0, r5
   18608:	bl	18ddc <gpsd_init@@Base>
   1860c:	mov	r0, r5
   18610:	bl	18cb4 <libgps_load@@Base>
   18614:	cmp	r0, #0
   18618:	bne	18718 <raspi_gps_setup@@Base+0x150>
   1861c:	cmp	r7, #0
   18620:	bne	18680 <raspi_gps_setup@@Base+0xb8>
   18624:	mov	r0, r5
   18628:	bl	18e10 <connect_gpsd@@Base>
   1862c:	cmp	r0, #0
   18630:	bne	18784 <raspi_gps_setup@@Base+0x1bc>
   18634:	mov	r0, r5
   18638:	mov	r1, #2
   1863c:	bl	18fa0 <wait_gps_time@@Base>
   18640:	ldr	r4, [pc, #420]	; 187ec <raspi_gps_setup@@Base+0x224>
   18644:	mov	r1, #0
   18648:	ldr	r2, [pc, #416]	; 187f0 <raspi_gps_setup@@Base+0x228>
   1864c:	add	r4, pc, r4
   18650:	add	r0, r4, #17664	; 0x4500
   18654:	add	r2, pc, r2
   18658:	mov	r3, r4
   1865c:	add	r0, r0, #236	; 0xec
   18660:	bl	1291c <pthread_create@plt>
   18664:	cmp	r0, #0
   18668:	movweq	r3, #17908	; 0x45f4
   1866c:	moveq	r2, #1
   18670:	streq	r2, [r4, r3]
   18674:	bne	18748 <raspi_gps_setup@@Base+0x180>
   18678:	add	sp, sp, #12
   1867c:	pop	{r4, r5, r6, r7, pc}
   18680:	ldr	r2, [pc, #364]	; 187f4 <raspi_gps_setup@@Base+0x22c>
   18684:	mov	r1, #1
   18688:	ldr	r3, [r4, #24]
   1868c:	ldr	ip, [r4, #28]
   18690:	ldr	r4, [r6, r2]
   18694:	ldr	r2, [pc, #348]	; 187f8 <raspi_gps_setup@@Base+0x230>
   18698:	ldr	r0, [r4]
   1869c:	add	r2, pc, r2
   186a0:	str	ip, [sp]
   186a4:	bl	12a6c <__fprintf_chk@plt>
   186a8:	mov	r0, r5
   186ac:	bl	18e10 <connect_gpsd@@Base>
   186b0:	cmp	r0, #0
   186b4:	bne	1878c <raspi_gps_setup@@Base+0x1c4>
   186b8:	ldr	r0, [pc, #316]	; 187fc <raspi_gps_setup@@Base+0x234>
   186bc:	mov	r1, #1
   186c0:	mov	r2, #21
   186c4:	ldr	r3, [r4]
   186c8:	add	r0, pc, r0
   186cc:	bl	128ec <fwrite@plt>
   186d0:	mov	r0, r5
   186d4:	mov	r1, #2
   186d8:	bl	18fa0 <wait_gps_time@@Base>
   186dc:	cmp	r0, #0
   186e0:	beq	186fc <raspi_gps_setup@@Base+0x134>
   186e4:	ldr	r0, [pc, #276]	; 18800 <raspi_gps_setup@@Base+0x238>
   186e8:	mov	r1, #1
   186ec:	mov	r2, #32
   186f0:	ldr	r3, [r4]
   186f4:	add	r0, pc, r0
   186f8:	bl	128ec <fwrite@plt>
   186fc:	ldr	r0, [pc, #256]	; 18804 <raspi_gps_setup@@Base+0x23c>
   18700:	mov	r1, #1
   18704:	ldr	r3, [r4]
   18708:	mov	r2, #27
   1870c:	add	r0, pc, r0
   18710:	bl	128ec <fwrite@plt>
   18714:	b	18640 <raspi_gps_setup@@Base+0x78>
   18718:	mov	r0, r4
   1871c:	bl	127c0 <pthread_mutex_destroy@plt>
   18720:	ldr	r3, [pc, #204]	; 187f4 <raspi_gps_setup@@Base+0x22c>
   18724:	ldr	r0, [pc, #220]	; 18808 <raspi_gps_setup@@Base+0x240>
   18728:	mov	r1, #1
   1872c:	mov	r2, #33	; 0x21
   18730:	ldr	r3, [r6, r3]
   18734:	add	r0, pc, r0
   18738:	ldr	r3, [r3]
   1873c:	bl	128ec <fwrite@plt>
   18740:	mvn	r0, #0
   18744:	b	18678 <raspi_gps_setup@@Base+0xb0>
   18748:	ldr	r3, [pc, #164]	; 187f4 <raspi_gps_setup@@Base+0x22c>
   1874c:	mov	r1, #1
   18750:	ldr	r0, [pc, #180]	; 1880c <raspi_gps_setup@@Base+0x244>
   18754:	mov	r2, #33	; 0x21
   18758:	ldr	r3, [r6, r3]
   1875c:	add	r0, pc, r0
   18760:	ldr	r3, [r3]
   18764:	bl	128ec <fwrite@plt>
   18768:	mov	r0, r7
   1876c:	movw	r3, #17904	; 0x45f0
   18770:	mov	r2, #1
   18774:	str	r2, [r4, r3]
   18778:	bl	184cc <raspi_gps_shutdown@@Base>
   1877c:	mvn	r0, #0
   18780:	b	18678 <raspi_gps_setup@@Base+0xb0>
   18784:	ldr	r3, [pc, #104]	; 187f4 <raspi_gps_setup@@Base+0x22c>
   18788:	ldr	r4, [r6, r3]
   1878c:	ldr	r5, [pc, #124]	; 18810 <raspi_gps_setup@@Base+0x248>
   18790:	movw	r3, #8976	; 0x2310
   18794:	ldr	r6, [r4]
   18798:	add	r5, pc, r5
   1879c:	ldr	r7, [r5, r3]
   187a0:	bl	12a00 <__errno_location@plt>
   187a4:	ldr	r4, [r0]
   187a8:	mov	r0, r4
   187ac:	blx	r7
   187b0:	ldr	r2, [pc, #92]	; 18814 <raspi_gps_setup@@Base+0x24c>
   187b4:	mov	r3, r4
   187b8:	mov	r1, #1
   187bc:	add	r2, pc, r2
   187c0:	str	r0, [sp]
   187c4:	mov	r0, r6
   187c8:	bl	12a6c <__fprintf_chk@plt>
   187cc:	add	r0, r5, #24
   187d0:	bl	18eec <libgps_unload@@Base>
   187d4:	mov	r0, r5
   187d8:	bl	127c0 <pthread_mutex_destroy@plt>
   187dc:	mvn	r0, #0
   187e0:	b	18678 <raspi_gps_setup@@Base+0xb0>
   187e4:	andeq	r6, r1, r0, ror #3
   187e8:	andeq	r5, r1, r8, lsl #20
   187ec:	andeq	r6, r1, r4, ror r1
   187f0:			; <UNDEFINED> instruction: 0xfffffc44
   187f4:	andeq	r0, r0, r8, lsl #3
   187f8:	andeq	r3, r0, ip, lsr #29
   187fc:	andeq	r3, r0, r8, asr #29
   18800:	strdeq	r3, [r0], -r4
   18804:	muleq	r0, ip, lr
   18808:	strdeq	r3, [r0], -r0
   1880c:	andeq	r3, r0, r8, ror #28
   18810:	andeq	r6, r1, r8, lsr #32
   18814:	andeq	r3, r0, r8, lsr #27

00018818 <raspi_gps_location_string@@Base>:
   18818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1881c:	vpush	{d8}
   18820:	sub	sp, sp, #204	; 0xcc
   18824:	ldr	lr, [pc, #1020]	; 18c28 <raspi_gps_location_string@@Base+0x410>
   18828:	add	r9, sp, #92	; 0x5c
   1882c:	ldr	r3, [pc, #1016]	; 18c2c <raspi_gps_location_string@@Base+0x414>
   18830:	mov	ip, #0
   18834:	add	lr, pc, lr
   18838:	ldr	r5, [pc, #1008]	; 18c30 <raspi_gps_location_string@@Base+0x418>
   1883c:	mov	r6, r9
   18840:	movw	r4, #12142	; 0x2f6e
   18844:	ldr	r3, [lr, r3]
   18848:	add	r5, pc, r5
   1884c:	add	fp, r5, #24
   18850:	movt	r4, #97	; 0x61
   18854:	str	ip, [sp, #48]	; 0x30
   18858:	add	r8, sp, #116	; 0x74
   1885c:	str	r3, [sp, #36]	; 0x24
   18860:	add	sl, r5, #48	; 0x30
   18864:	ldr	r7, [sp, #36]	; 0x24
   18868:	ldm	r5, {r0, r1, r2, r3}
   1886c:	add	r5, r5, #72	; 0x48
   18870:	ldr	lr, [r7]
   18874:	add	r7, sp, #140	; 0x8c
   18878:	str	r4, [sp, #44]	; 0x2c
   1887c:	str	r4, [sp, #68]	; 0x44
   18880:	mov	r4, r8
   18884:	stmia	r6!, {r0, r1, r2}
   18888:	str	lr, [sp, #196]	; 0xc4
   1888c:	mov	lr, r7
   18890:	strb	r3, [r6]
   18894:	add	r6, sp, #164	; 0xa4
   18898:	str	ip, [sp, #52]	; 0x34
   1889c:	str	ip, [sp, #56]	; 0x38
   188a0:	mov	r3, r6
   188a4:	str	ip, [sp, #60]	; 0x3c
   188a8:	str	ip, [sp, #64]	; 0x40
   188ac:	str	ip, [sp, #72]	; 0x48
   188b0:	str	ip, [sp, #76]	; 0x4c
   188b4:	str	ip, [sp, #80]	; 0x50
   188b8:	str	ip, [sp, #84]	; 0x54
   188bc:	str	ip, [sp, #88]	; 0x58
   188c0:	strb	ip, [sp, #105]	; 0x69
   188c4:	strb	ip, [sp, #106]	; 0x6a
   188c8:	strb	ip, [sp, #107]	; 0x6b
   188cc:	strb	ip, [sp, #108]	; 0x6c
   188d0:	strb	ip, [sp, #109]	; 0x6d
   188d4:	strb	ip, [sp, #110]	; 0x6e
   188d8:	strb	ip, [sp, #111]	; 0x6f
   188dc:	ldm	fp, {r0, r1, r2}
   188e0:	strb	ip, [sp, #112]	; 0x70
   188e4:	strb	ip, [sp, #113]	; 0x71
   188e8:	strb	ip, [sp, #114]	; 0x72
   188ec:	stmia	r4!, {r0, r1}
   188f0:	strh	r2, [r4]
   188f4:	ldm	sl, {r0, r1, r2}
   188f8:	strb	ip, [sp, #115]	; 0x73
   188fc:	strh	ip, [sp, #126]	; 0x7e
   18900:	strh	ip, [sp, #128]	; 0x80
   18904:	stmia	lr!, {r0, r1}
   18908:	strh	r2, [lr]
   1890c:	ldm	r5, {r0, r1, r2}
   18910:	strh	ip, [sp, #130]	; 0x82
   18914:	strh	ip, [sp, #132]	; 0x84
   18918:	strh	ip, [sp, #134]	; 0x86
   1891c:	stmia	r3!, {r0, r1}
   18920:	mov	r1, ip
   18924:	strb	r2, [r3]
   18928:	add	r0, sp, #173	; 0xad
   1892c:	mov	r2, #23
   18930:	strh	ip, [sp, #136]	; 0x88
   18934:	strh	ip, [sp, #138]	; 0x8a
   18938:	strh	ip, [sp, #150]	; 0x96
   1893c:	strh	ip, [sp, #152]	; 0x98
   18940:	strh	ip, [sp, #154]	; 0x9a
   18944:	strh	ip, [sp, #156]	; 0x9c
   18948:	strh	ip, [sp, #158]	; 0x9e
   1894c:	strh	ip, [sp, #160]	; 0xa0
   18950:	strh	ip, [sp, #162]	; 0xa2
   18954:	bl	12a30 <memset@plt>
   18958:	bl	18498 <raspi_gps_lock@@Base>
   1895c:	mov	r1, #0
   18960:	ldrd	r2, [r0]
   18964:	mov	fp, r0
   18968:	mov	r0, #4
   1896c:	and	r3, r3, r1
   18970:	and	r2, r2, r0
   18974:	orrs	ip, r2, r3
   18978:	addeq	r4, sp, #40	; 0x28
   1897c:	bne	18b04 <raspi_gps_location_string@@Base+0x2ec>
   18980:	vldr	d7, [fp, #8]
   18984:	vcmp.f64	d7, #0.0
   18988:	vmrs	APSR_nzcv, fpscr
   1898c:	beq	18aa8 <raspi_gps_location_string@@Base+0x290>
   18990:	ldr	r3, [fp, #32]
   18994:	cmp	r3, #1
   18998:	ble	18aa8 <raspi_gps_location_string@@Base+0x290>
   1899c:	ldrd	r2, [fp]
   189a0:	mov	r0, #16
   189a4:	mov	r1, #0
   189a8:	and	r0, r0, r2
   189ac:	and	r1, r1, r3
   189b0:	orrs	ip, r0, r1
   189b4:	addeq	sl, sp, #44	; 0x2c
   189b8:	addeq	r5, sp, #68	; 0x44
   189bc:	beq	189f4 <raspi_gps_location_string@@Base+0x1dc>
   189c0:	vldr	d8, [fp, #48]	; 0x30
   189c4:	vmov.f64	d0, d8
   189c8:	bl	12a60 <__isnan@plt>
   189cc:	cmp	r0, #0
   189d0:	addne	sl, sp, #44	; 0x2c
   189d4:	beq	18bf0 <raspi_gps_location_string@@Base+0x3d8>
   189d8:	vldr	d8, [fp, #64]	; 0x40
   189dc:	vmov.f64	d0, d8
   189e0:	bl	12a60 <__isnan@plt>
   189e4:	cmp	r0, #0
   189e8:	beq	18bc0 <raspi_gps_location_string@@Base+0x3a8>
   189ec:	ldrd	r2, [fp]
   189f0:	add	r5, sp, #68	; 0x44
   189f4:	mov	r0, #32
   189f8:	mov	r1, #0
   189fc:	and	r0, r0, r2
   18a00:	and	r1, r1, r3
   18a04:	orrs	ip, r0, r1
   18a08:	beq	18a18 <raspi_gps_location_string@@Base+0x200>
   18a0c:	ldr	r1, [fp, #32]
   18a10:	cmp	r1, #2
   18a14:	bgt	18b3c <raspi_gps_location_string@@Base+0x324>
   18a18:	mov	r0, #64	; 0x40
   18a1c:	mov	r1, #0
   18a20:	and	r0, r0, r2
   18a24:	and	r1, r1, r3
   18a28:	orrs	ip, r0, r1
   18a2c:	beq	18a54 <raspi_gps_location_string@@Base+0x23c>
   18a30:	vldr	d8, [fp, #112]	; 0x70
   18a34:	vmov.f64	d0, d8
   18a38:	str	r2, [sp, #32]
   18a3c:	str	r3, [sp, #28]
   18a40:	bl	12a60 <__isnan@plt>
   18a44:	ldr	r2, [sp, #32]
   18a48:	ldr	r3, [sp, #28]
   18a4c:	cmp	r0, #0
   18a50:	beq	18b8c <raspi_gps_location_string@@Base+0x374>
   18a54:	mov	r1, #0
   18a58:	mov	r0, #128	; 0x80
   18a5c:	and	r3, r3, r1
   18a60:	and	r2, r2, r0
   18a64:	orrs	r1, r2, r3
   18a68:	beq	18ab0 <raspi_gps_location_string@@Base+0x298>
   18a6c:	vldr	d8, [fp, #96]	; 0x60
   18a70:	vmov.f64	d0, d8
   18a74:	bl	12a60 <__isnan@plt>
   18a78:	cmp	r0, #0
   18a7c:	bne	18ab0 <raspi_gps_location_string@@Base+0x298>
   18a80:	ldr	ip, [pc, #428]	; 18c34 <raspi_gps_location_string@@Base+0x41c>
   18a84:	mov	r1, #24
   18a88:	vstr	d8, [sp, #8]
   18a8c:	mov	r3, r1
   18a90:	add	ip, pc, ip
   18a94:	mov	r0, r7
   18a98:	mov	r2, #1
   18a9c:	str	ip, [sp]
   18aa0:	bl	12b80 <__snprintf_chk@plt>
   18aa4:	b	18ab0 <raspi_gps_location_string@@Base+0x298>
   18aa8:	add	sl, sp, #44	; 0x2c
   18aac:	add	r5, sp, #68	; 0x44
   18ab0:	bl	184bc <raspi_gps_unlock@@Base>
   18ab4:	ldr	r2, [pc, #380]	; 18c38 <raspi_gps_location_string@@Base+0x420>
   18ab8:	mov	r3, r6
   18abc:	str	r7, [sp, #16]
   18ac0:	add	r2, pc, r2
   18ac4:	str	sl, [sp]
   18ac8:	str	r5, [sp, #4]
   18acc:	mov	r0, r4
   18ad0:	str	r9, [sp, #8]
   18ad4:	mov	r1, #1
   18ad8:	str	r8, [sp, #12]
   18adc:	bl	12928 <__asprintf_chk@plt>
   18ae0:	ldr	r7, [sp, #36]	; 0x24
   18ae4:	ldr	r2, [sp, #196]	; 0xc4
   18ae8:	ldr	r0, [sp, #40]	; 0x28
   18aec:	ldr	r3, [r7]
   18af0:	cmp	r2, r3
   18af4:	bne	18c1c <raspi_gps_location_string@@Base+0x404>
   18af8:	add	sp, sp, #204	; 0xcc
   18afc:	vpop	{d8}
   18b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b04:	vldr	d7, [fp, #24]
   18b08:	vcvt.s32.f64	s14, d7
   18b0c:	add	r4, sp, #200	; 0xc8
   18b10:	vmov	r1, s14
   18b14:	str	r1, [r4, #-160]!	; 0xffffff60
   18b18:	mov	r0, r4
   18b1c:	bl	1297c <localtime@plt>
   18b20:	ldr	r2, [pc, #276]	; 18c3c <raspi_gps_location_string@@Base+0x424>
   18b24:	mov	r1, #32
   18b28:	add	r2, pc, r2
   18b2c:	mov	r3, r0
   18b30:	mov	r0, r6
   18b34:	bl	12964 <strftime@plt>
   18b38:	b	18980 <raspi_gps_location_string@@Base+0x168>
   18b3c:	vldr	d8, [fp, #80]	; 0x50
   18b40:	vmov.f64	d0, d8
   18b44:	str	r2, [sp, #32]
   18b48:	str	r3, [sp, #28]
   18b4c:	bl	12a60 <__isnan@plt>
   18b50:	ldr	r2, [sp, #32]
   18b54:	ldr	r3, [sp, #28]
   18b58:	cmp	r0, #0
   18b5c:	bne	18a18 <raspi_gps_location_string@@Base+0x200>
   18b60:	ldr	ip, [pc, #216]	; 18c40 <raspi_gps_location_string@@Base+0x428>
   18b64:	mov	r1, #24
   18b68:	mov	r3, r1
   18b6c:	mov	r2, #1
   18b70:	add	ip, pc, ip
   18b74:	vstr	d8, [sp, #8]
   18b78:	mov	r0, r9
   18b7c:	str	ip, [sp]
   18b80:	bl	12b80 <__snprintf_chk@plt>
   18b84:	ldrd	r2, [fp]
   18b88:	b	18a18 <raspi_gps_location_string@@Base+0x200>
   18b8c:	vldr	d7, [pc, #140]	; 18c20 <raspi_gps_location_string@@Base+0x408>
   18b90:	vmul.f64	d8, d8, d7
   18b94:	ldr	ip, [pc, #168]	; 18c44 <raspi_gps_location_string@@Base+0x42c>
   18b98:	mov	r1, #24
   18b9c:	mov	r3, r1
   18ba0:	mov	r2, #1
   18ba4:	add	ip, pc, ip
   18ba8:	mov	r0, r8
   18bac:	str	ip, [sp]
   18bb0:	vstr	d8, [sp, #8]
   18bb4:	bl	12b80 <__snprintf_chk@plt>
   18bb8:	ldrd	r2, [fp]
   18bbc:	b	18a54 <raspi_gps_location_string@@Base+0x23c>
   18bc0:	ldr	r2, [pc, #128]	; 18c48 <raspi_gps_location_string@@Base+0x430>
   18bc4:	add	r5, sp, #68	; 0x44
   18bc8:	mov	r1, #24
   18bcc:	vstr	d8, [sp, #8]
   18bd0:	add	r2, pc, r2
   18bd4:	mov	r3, r1
   18bd8:	str	r2, [sp]
   18bdc:	mov	r0, r5
   18be0:	mov	r2, #1
   18be4:	bl	12b80 <__snprintf_chk@plt>
   18be8:	ldrd	r2, [fp]
   18bec:	b	189f4 <raspi_gps_location_string@@Base+0x1dc>
   18bf0:	add	sl, sp, #44	; 0x2c
   18bf4:	ldr	r2, [pc, #80]	; 18c4c <raspi_gps_location_string@@Base+0x434>
   18bf8:	mov	r1, #24
   18bfc:	vstr	d8, [sp, #8]
   18c00:	add	r2, pc, r2
   18c04:	mov	r0, sl
   18c08:	str	r2, [sp]
   18c0c:	mov	r3, r1
   18c10:	mov	r2, #1
   18c14:	bl	12b80 <__snprintf_chk@plt>
   18c18:	b	189d8 <raspi_gps_location_string@@Base+0x1c0>
   18c1c:	bl	1288c <__stack_chk_fail@plt>
   18c20:	stclgt	12, cr12, [ip], {205}	; 0xcd
   18c24:	andmi	ip, ip, ip, asr #25
   18c28:	andeq	r5, r1, r4, asr #15
   18c2c:	andeq	r0, r0, r4, lsl #3
   18c30:	andeq	r3, r0, ip, lsr #24
   18c34:			; <UNDEFINED> instruction: 0x00003bb8
   18c38:	muleq	r0, r4, fp
   18c3c:	andeq	r3, r0, r4, ror #21
   18c40:			; <UNDEFINED> instruction: 0x00003ab8
   18c44:	muleq	r0, r4, sl
   18c48:	andeq	r3, r0, r0, asr sl
   18c4c:	andeq	r3, r0, r0, lsr #20
   18c50:	push	{r3, r4, r5, lr}
   18c54:	mov	r5, r0
   18c58:	mov	r0, r1
   18c5c:	mov	r1, r2
   18c60:	bl	12b5c <dlsym@plt>
   18c64:	ldr	r4, [pc, #60]	; 18ca8 <raspi_gps_location_string@@Base+0x490>
   18c68:	add	r4, pc, r4
   18c6c:	str	r0, [r5]
   18c70:	bl	128a4 <dlerror@plt>
   18c74:	subs	r3, r0, #0
   18c78:	bne	18c84 <raspi_gps_location_string@@Base+0x46c>
   18c7c:	mov	r0, r3
   18c80:	pop	{r3, r4, r5, pc}
   18c84:	ldr	ip, [pc, #32]	; 18cac <raspi_gps_location_string@@Base+0x494>
   18c88:	mov	r1, #1
   18c8c:	ldr	r2, [pc, #28]	; 18cb0 <raspi_gps_location_string@@Base+0x498>
   18c90:	ldr	r0, [r4, ip]
   18c94:	add	r2, pc, r2
   18c98:	ldr	r0, [r0]
   18c9c:	bl	12a6c <__fprintf_chk@plt>
   18ca0:	mvn	r0, #0
   18ca4:	pop	{r3, r4, r5, pc}
   18ca8:	muleq	r1, r0, r3
   18cac:	andeq	r0, r0, r8, lsl #3
   18cb0:	andeq	r4, r0, r0, lsr r1

00018cb4 <libgps_load@@Base>:
   18cb4:	push	{r4, r5, r6, lr}
   18cb8:	mov	r1, #1
   18cbc:	ldr	r5, [pc, #240]	; 18db4 <libgps_load@@Base+0x100>
   18cc0:	mov	r4, r0
   18cc4:	ldr	r3, [pc, #236]	; 18db8 <libgps_load@@Base+0x104>
   18cc8:	add	r5, pc, r5
   18ccc:	ldr	r3, [r5, r3]
   18cd0:	ldr	r0, [r3]
   18cd4:	bl	12904 <dlopen@plt>
   18cd8:	cmp	r0, #0
   18cdc:	str	r0, [r4, #8]
   18ce0:	beq	18d84 <libgps_load@@Base+0xd0>
   18ce4:	ldr	r2, [pc, #208]	; 18dbc <libgps_load@@Base+0x108>
   18ce8:	add	r5, r4, #8896	; 0x22c0
   18cec:	mov	r1, r0
   18cf0:	add	r0, r5, #40	; 0x28
   18cf4:	add	r2, pc, r2
   18cf8:	bl	18c50 <raspi_gps_location_string@@Base+0x438>
   18cfc:	ldr	r2, [pc, #188]	; 18dc0 <libgps_load@@Base+0x10c>
   18d00:	ldr	r1, [r4, #8]
   18d04:	add	r2, pc, r2
   18d08:	mov	r6, r0
   18d0c:	add	r0, r5, #44	; 0x2c
   18d10:	bl	18c50 <raspi_gps_location_string@@Base+0x438>
   18d14:	ldr	r2, [pc, #168]	; 18dc4 <libgps_load@@Base+0x110>
   18d18:	ldr	r1, [r4, #8]
   18d1c:	add	r2, pc, r2
   18d20:	orr	r6, r0, r6
   18d24:	add	r0, r5, #48	; 0x30
   18d28:	bl	18c50 <raspi_gps_location_string@@Base+0x438>
   18d2c:	ldr	r2, [pc, #148]	; 18dc8 <libgps_load@@Base+0x114>
   18d30:	ldr	r1, [r4, #8]
   18d34:	add	r2, pc, r2
   18d38:	orr	r6, r6, r0
   18d3c:	add	r0, r5, #52	; 0x34
   18d40:	bl	18c50 <raspi_gps_location_string@@Base+0x438>
   18d44:	ldr	r2, [pc, #128]	; 18dcc <libgps_load@@Base+0x118>
   18d48:	ldr	r1, [r4, #8]
   18d4c:	add	r2, pc, r2
   18d50:	orr	r6, r6, r0
   18d54:	add	r0, r5, #56	; 0x38
   18d58:	bl	18c50 <raspi_gps_location_string@@Base+0x438>
   18d5c:	ldr	r2, [pc, #108]	; 18dd0 <libgps_load@@Base+0x11c>
   18d60:	ldr	r1, [r4, #8]
   18d64:	add	r2, pc, r2
   18d68:	orr	r4, r6, r0
   18d6c:	add	r0, r5, #60	; 0x3c
   18d70:	bl	18c50 <raspi_gps_location_string@@Base+0x438>
   18d74:	orrs	r4, r4, r0
   18d78:	moveq	r0, #0
   18d7c:	mvnne	r0, #0
   18d80:	pop	{r4, r5, r6, pc}
   18d84:	ldr	r3, [pc, #72]	; 18dd4 <libgps_load@@Base+0x120>
   18d88:	ldr	r3, [r5, r3]
   18d8c:	ldr	r4, [r3]
   18d90:	bl	128a4 <dlerror@plt>
   18d94:	ldr	r2, [pc, #60]	; 18dd8 <libgps_load@@Base+0x124>
   18d98:	mov	r1, #1
   18d9c:	add	r2, pc, r2
   18da0:	mov	r3, r0
   18da4:	mov	r0, r4
   18da8:	bl	12a6c <__fprintf_chk@plt>
   18dac:	mvn	r0, #0
   18db0:	pop	{r4, r5, r6, pc}
   18db4:	andeq	r5, r1, r0, lsr r3
   18db8:	muleq	r0, ip, r1
   18dbc:	andeq	r3, r0, ip, ror r9
   18dc0:	andeq	r3, r0, r8, ror r9
   18dc4:	andeq	r3, r0, ip, ror #18
   18dc8:	andeq	r3, r0, r0, ror #18
   18dcc:	andeq	r3, r0, r4, asr r9
   18dd0:	andeq	r3, r0, r8, asr #18
   18dd4:	andeq	r0, r0, r8, lsl #3
   18dd8:	andeq	r4, r0, r8, lsr #32

00018ddc <gpsd_init@@Base>:
   18ddc:	push	{r4, lr}
   18de0:	mov	r2, #8960	; 0x2300
   18de4:	mov	r1, #0
   18de8:	mov	r4, r0
   18dec:	bl	12a30 <memset@plt>
   18df0:	ldr	r2, [pc, #16]	; 18e08 <gpsd_init@@Base+0x2c>
   18df4:	ldr	r3, [pc, #16]	; 18e0c <gpsd_init@@Base+0x30>
   18df8:	add	r2, pc, r2
   18dfc:	add	r3, pc, r3
   18e00:	stm	r4, {r2, r3}
   18e04:	pop	{r4, pc}
   18e08:	andeq	r3, r0, r0, asr #17
   18e0c:	andeq	r3, r0, r8, asr #17

00018e10 <connect_gpsd@@Base>:
   18e10:	ldr	r3, [r0, #8]
   18e14:	push	{r4, r5, r6, lr}
   18e18:	cmp	r3, #0
   18e1c:	mov	r4, r0
   18e20:	beq	18e80 <connect_gpsd@@Base+0x70>
   18e24:	ldr	r3, [r0, #12]
   18e28:	cmp	r3, #0
   18e2c:	movne	r5, #0
   18e30:	beq	18e3c <connect_gpsd@@Base+0x2c>
   18e34:	mov	r0, r5
   18e38:	pop	{r4, r5, r6, pc}
   18e3c:	add	r6, r0, #24
   18e40:	movw	r3, #8944	; 0x22f0
   18e44:	ldr	r3, [r0, r3]
   18e48:	mov	r2, r6
   18e4c:	ldm	r0, {r0, r1}
   18e50:	blx	r3
   18e54:	subs	r5, r0, #0
   18e58:	bne	18e80 <connect_gpsd@@Base+0x70>
   18e5c:	movw	r3, #8956	; 0x22fc
   18e60:	mov	r1, #1
   18e64:	mov	r0, r6
   18e68:	str	r1, [r4, #12]
   18e6c:	ldr	r3, [r4, r3]
   18e70:	mov	r2, r5
   18e74:	blx	r3
   18e78:	mov	r0, r5
   18e7c:	pop	{r4, r5, r6, pc}
   18e80:	mvn	r5, #0
   18e84:	b	18e34 <connect_gpsd@@Base+0x24>

00018e88 <disconnect_gpsd@@Base>:
   18e88:	push	{r3, r4, r5, lr}
   18e8c:	mov	r4, r0
   18e90:	ldr	r3, [r0, #8]
   18e94:	cmp	r3, #0
   18e98:	beq	18ee4 <disconnect_gpsd@@Base+0x5c>
   18e9c:	ldr	r0, [r0, #12]
   18ea0:	cmp	r0, #0
   18ea4:	popeq	{r3, r4, r5, pc}
   18ea8:	add	r5, r4, #24
   18eac:	movw	r3, #8956	; 0x22fc
   18eb0:	ldr	r3, [r4, r3]
   18eb4:	mov	r1, #2
   18eb8:	mov	r2, #0
   18ebc:	mov	r0, r5
   18ec0:	blx	r3
   18ec4:	movw	r3, #8948	; 0x22f4
   18ec8:	ldr	r3, [r4, r3]
   18ecc:	mov	r0, r5
   18ed0:	blx	r3
   18ed4:	mov	r3, #0
   18ed8:	mov	r0, r3
   18edc:	str	r3, [r4, #12]
   18ee0:	pop	{r3, r4, r5, pc}
   18ee4:	mvn	r0, #0
   18ee8:	pop	{r3, r4, r5, pc}

00018eec <libgps_unload@@Base>:
   18eec:	ldr	r3, [r0, #8]
   18ef0:	push	{r4, lr}
   18ef4:	cmp	r3, #0
   18ef8:	mov	r4, r0
   18efc:	popeq	{r4, pc}
   18f00:	bl	18e88 <disconnect_gpsd@@Base>
   18f04:	ldr	r0, [r4, #8]
   18f08:	bl	12898 <dlclose@plt>
   18f0c:	mov	r3, #0
   18f10:	str	r3, [r4, #8]
   18f14:	pop	{r4, pc}

00018f18 <read_gps_data_once@@Base>:
   18f18:	push	{r3, r4, r5, lr}
   18f1c:	mov	r4, r0
   18f20:	ldr	r3, [r0, #8]
   18f24:	cmp	r3, #0
   18f28:	beq	18f98 <read_gps_data_once@@Base+0x80>
   18f2c:	ldr	r3, [r0, #12]
   18f30:	cmp	r3, #0
   18f34:	bne	18f40 <read_gps_data_once@@Base+0x28>
   18f38:	mov	r0, #0
   18f3c:	pop	{r3, r4, r5, pc}
   18f40:	add	r5, r0, #24
   18f44:	movw	r3, #8940	; 0x22ec
   18f48:	ldr	r3, [r0, r3]
   18f4c:	mov	r1, #200	; 0xc8
   18f50:	mov	r0, r5
   18f54:	blx	r3
   18f58:	cmp	r0, #0
   18f5c:	beq	18f38 <read_gps_data_once@@Base+0x20>
   18f60:	movw	r3, #8936	; 0x22e8
   18f64:	mov	r0, r5
   18f68:	ldr	r3, [r4, r3]
   18f6c:	blx	r3
   18f70:	cmp	r0, #0
   18f74:	popge	{r3, r4, r5, pc}
   18f78:	movw	r3, #8948	; 0x22f4
   18f7c:	mov	r0, r5
   18f80:	ldr	r3, [r4, r3]
   18f84:	blx	r3
   18f88:	mov	r3, #0
   18f8c:	mov	r0, r3
   18f90:	str	r3, [r4, #12]
   18f94:	pop	{r3, r4, r5, pc}
   18f98:	mvn	r0, #0
   18f9c:	pop	{r3, r4, r5, pc}

00018fa0 <wait_gps_time@@Base>:
   18fa0:	ldr	r3, [r0, #8]
   18fa4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18fa8:	cmp	r3, #0
   18fac:	mov	sl, r0
   18fb0:	mov	r4, r1
   18fb4:	beq	1906c <wait_gps_time@@Base+0xcc>
   18fb8:	ldr	r3, [r0, #12]
   18fbc:	cmp	r3, #0
   18fc0:	beq	1906c <wait_gps_time@@Base+0xcc>
   18fc4:	mov	r0, #0
   18fc8:	mov	r8, #4
   18fcc:	bl	1285c <time@plt>
   18fd0:	mov	r9, #0
   18fd4:	movw	r7, #8940	; 0x22ec
   18fd8:	add	r5, sl, #24
   18fdc:	mov	r6, r0
   18fe0:	b	19010 <wait_gps_time@@Base+0x70>
   18fe4:	vmrs	APSR_nzcv, fpscr
   18fe8:	beq	19000 <wait_gps_time@@Base+0x60>
   18fec:	ldrd	r2, [sl, #24]
   18ff0:	and	r2, r2, r8
   18ff4:	and	r3, r3, r9
   18ff8:	orrs	ip, r2, r3
   18ffc:	bne	19050 <wait_gps_time@@Base+0xb0>
   19000:	ldr	r3, [sl, r7]
   19004:	blx	r3
   19008:	cmp	r0, #0
   1900c:	bne	19060 <wait_gps_time@@Base+0xc0>
   19010:	mov	r0, #0
   19014:	bl	1285c <time@plt>
   19018:	vldr	d7, [sl, #32]
   1901c:	mov	r1, #200	; 0xc8
   19020:	vcmp.f64	d7, #0.0
   19024:	rsb	r3, r6, r0
   19028:	mov	r0, r5
   1902c:	cmp	r3, r4
   19030:	blt	18fe4 <wait_gps_time@@Base+0x44>
   19034:	vmrs	APSR_nzcv, fpscr
   19038:	beq	1906c <wait_gps_time@@Base+0xcc>
   1903c:	ldrd	r0, [sl, #24]
   19040:	mov	r2, #4
   19044:	mov	r3, #0
   19048:	and	r2, r2, r0
   1904c:	and	r3, r3, r1
   19050:	orrs	r1, r2, r3
   19054:	movne	r0, #0
   19058:	mvneq	r0, #0
   1905c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19060:	mov	r0, sl
   19064:	bl	18f18 <read_gps_data_once@@Base>
   19068:	b	19010 <wait_gps_time@@Base+0x70>
   1906c:	mvn	r0, #0
   19070:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00019074 <deg_to_str@@Base>:
   19074:	ldr	r3, [pc, #252]	; 19178 <deg_to_str@@Base+0x104>
   19078:	ldr	r2, [pc, #252]	; 1917c <deg_to_str@@Base+0x108>
   1907c:	add	r3, pc, r3
   19080:	push	{r4, r5, r6, r7, lr}
   19084:	vpush	{d8}
   19088:	subs	r7, r1, #0
   1908c:	ldr	r4, [r3, r2]
   19090:	sub	sp, sp, #44	; 0x2c
   19094:	mov	r5, r0
   19098:	ldr	r3, [r4]
   1909c:	str	r3, [sp, #36]	; 0x24
   190a0:	ble	19154 <deg_to_str@@Base+0xe0>
   190a4:	vcmpe.f64	d0, #0.0
   190a8:	mov	r6, #0
   190ac:	strb	r6, [r0]
   190b0:	vmrs	APSR_nzcv, fpscr
   190b4:	bmi	19154 <deg_to_str@@Base+0xe0>
   190b8:	vldr	d6, [pc, #160]	; 19160 <deg_to_str@@Base+0xec>
   190bc:	vcmpe.f64	d0, d6
   190c0:	vmrs	APSR_nzcv, fpscr
   190c4:	bgt	19154 <deg_to_str@@Base+0xe0>
   190c8:	add	r0, sp, #16
   190cc:	vldr	d8, [pc, #148]	; 19168 <deg_to_str@@Base+0xf4>
   190d0:	bl	12994 <modf@plt>
   190d4:	add	r0, sp, #40	; 0x28
   190d8:	vmov	r2, r3, d0
   190dc:	vmul.f64	d0, d0, d8
   190e0:	strd	r2, [r0, #-16]!
   190e4:	bl	12994 <modf@plt>
   190e8:	vldr	d5, [pc, #128]	; 19170 <deg_to_str@@Base+0xfc>
   190ec:	vldr	d6, [sp, #16]
   190f0:	vldr	d7, [sp, #24]
   190f4:	vcvt.s32.f64	s12, d6
   190f8:	ldr	ip, [pc, #128]	; 19180 <deg_to_str@@Base+0x10c>
   190fc:	mov	r0, r5
   19100:	mov	r1, r7
   19104:	add	ip, pc, ip
   19108:	mov	r2, #1
   1910c:	mvn	r3, #0
   19110:	str	ip, [sp]
   19114:	vcvt.s32.f64	s14, d7
   19118:	vstr	s12, [sp, #4]
   1911c:	vstr	s14, [sp, #8]
   19120:	vmul.f64	d0, d0, d8
   19124:	vmul.f64	d5, d0, d5
   19128:	vcvt.s32.f64	s10, d5
   1912c:	vstr	s10, [sp, #12]
   19130:	bl	12b80 <__snprintf_chk@plt>
   19134:	mov	r0, r6
   19138:	ldr	r2, [sp, #36]	; 0x24
   1913c:	ldr	r3, [r4]
   19140:	cmp	r2, r3
   19144:	bne	1915c <deg_to_str@@Base+0xe8>
   19148:	add	sp, sp, #44	; 0x2c
   1914c:	vpop	{d8}
   19150:	pop	{r4, r5, r6, r7, pc}
   19154:	mvn	r0, #0
   19158:	b	19138 <deg_to_str@@Base+0xc4>
   1915c:	bl	1288c <__stack_chk_fail@plt>
   19160:	andeq	r0, r0, r0
   19164:	rsbsmi	r8, r6, r0
   19168:	andeq	r0, r0, r0
   1916c:	submi	r0, lr, r0
   19170:	andeq	r0, r0, r0
   19174:	addmi	r4, pc, r0
   19178:	andeq	r4, r1, ip, ror pc
   1917c:	andeq	r0, r0, r4, lsl #3
   19180:	andeq	r3, r0, r8, asr #11
   19184:	movw	r2, #19923	; 0x4dd3
   19188:	movt	r2, #4194	; 0x1062
   1918c:	push	{r4, r5, lr}
   19190:	sub	sp, sp, #20
   19194:	umull	r3, r2, r2, r0
   19198:	ldr	lr, [pc, #92]	; 191fc <deg_to_str@@Base+0x188>
   1919c:	ldr	r4, [pc, #92]	; 19200 <deg_to_str@@Base+0x18c>
   191a0:	mov	ip, r0
   191a4:	add	lr, pc, lr
   191a8:	mov	r5, #1000	; 0x3e8
   191ac:	movw	r3, #16960	; 0x4240
   191b0:	movt	r3, #15
   191b4:	ldr	r4, [lr, r4]
   191b8:	add	r0, sp, #4
   191bc:	lsr	r2, r2, #6
   191c0:	str	r2, [sp, #4]
   191c4:	mov	r1, #0
   191c8:	mls	r2, r5, r2, ip
   191cc:	ldr	ip, [r4]
   191d0:	str	ip, [sp, #12]
   191d4:	mul	r3, r3, r2
   191d8:	str	r3, [sp, #8]
   191dc:	bl	12814 <nanosleep@plt>
   191e0:	ldr	r2, [sp, #12]
   191e4:	ldr	r3, [r4]
   191e8:	cmp	r2, r3
   191ec:	bne	191f8 <deg_to_str@@Base+0x184>
   191f0:	add	sp, sp, #20
   191f4:	pop	{r4, r5, pc}
   191f8:	bl	1288c <__stack_chk_fail@plt>
   191fc:	andeq	r4, r1, r4, asr lr
   19200:	andeq	r0, r0, r4, lsl #3
   19204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19208:	sub	sp, sp, #44	; 0x2c
   1920c:	ldr	r7, [r0, #56]	; 0x38
   19210:	mov	r9, r0
   19214:	mov	r8, r1
   19218:	ldr	r4, [r1, #20]
   1921c:	ldr	sl, [pc, #716]	; 194f0 <deg_to_str@@Base+0x47c>
   19220:	ldr	r6, [r7, #4]
   19224:	bl	18210 <get_microseconds64@@Base>
   19228:	add	sl, pc, sl
   1922c:	ldr	r3, [r6, #72]	; 0x48
   19230:	cmp	r3, #0
   19234:	strd	r0, [sp, #32]
   19238:	beq	1925c <deg_to_str@@Base+0x1e8>
   1923c:	ldr	r3, [r9, #20]
   19240:	ldr	r2, [r8, #20]
   19244:	ldr	r3, [r3, #12]
   19248:	ldr	r1, [r3, #4]
   1924c:	ldr	r4, [r3]
   19250:	mul	r4, r4, r1
   19254:	cmp	r4, r2
   19258:	movcs	r4, r2
   1925c:	ldr	r3, [r7]
   19260:	cmp	r3, #0
   19264:	beq	194c0 <deg_to_str@@Base+0x44c>
   19268:	cmp	r4, #0
   1926c:	bne	1931c <deg_to_str@@Base+0x2a8>
   19270:	mov	r3, #0
   19274:	ldrd	r0, [sp, #32]
   19278:	movw	r2, #16960	; 0x4240
   1927c:	movt	r2, #15
   19280:	bl	19f94 <deg_to_str@@Base+0xf20>
   19284:	ldr	r3, [pc, #616]	; 194f4 <deg_to_str@@Base+0x480>
   19288:	add	r3, pc, r3
   1928c:	ldrd	r2, [r3]
   19290:	mov	r4, r0
   19294:	mov	r5, r1
   19298:	cmp	r5, r3
   1929c:	cmpeq	r4, r2
   192a0:	beq	19300 <deg_to_str@@Base+0x28c>
   192a4:	ldr	r1, [r6, #276]	; 0x114
   192a8:	tst	r1, #2
   192ac:	beq	192bc <deg_to_str@@Base+0x248>
   192b0:	ldr	r3, [r6, #40]	; 0x28
   192b4:	cmp	r3, #0
   192b8:	bne	19470 <deg_to_str@@Base+0x3fc>
   192bc:	ldr	ip, [r6, #540]	; 0x21c
   192c0:	add	r2, r6, #280	; 0x118
   192c4:	ldr	r0, [r6, #592]	; 0x250
   192c8:	ldr	r3, [r6, #536]	; 0x218
   192cc:	str	ip, [sp]
   192d0:	ldr	ip, [r6, #544]	; 0x220
   192d4:	str	ip, [sp, #4]
   192d8:	ldr	ip, [r6, #548]	; 0x224
   192dc:	str	ip, [sp, #8]
   192e0:	ldr	ip, [r6, #552]	; 0x228
   192e4:	str	ip, [sp, #12]
   192e8:	ldr	ip, [r6, #556]	; 0x22c
   192ec:	str	ip, [sp, #16]
   192f0:	bl	1658c <raspicamcontrol_set_annotate@@Base>
   192f4:	ldr	r3, [pc, #508]	; 194f8 <deg_to_str@@Base+0x484>
   192f8:	add	r3, pc, r3
   192fc:	strd	r4, [r3]
   19300:	mov	r0, r8
   19304:	bl	12b20 <mmal_buffer_header_release@plt>
   19308:	ldr	r3, [r9, #16]
   1930c:	cmp	r3, #0
   19310:	bne	1941c <deg_to_str@@Base+0x3a8>
   19314:	add	sp, sp, #44	; 0x2c
   19318:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1931c:	mov	r0, r8
   19320:	bl	12988 <mmal_buffer_header_mem_lock@plt>
   19324:	mov	r1, #1
   19328:	mov	r2, r4
   1932c:	ldr	r3, [r7]
   19330:	ldr	r0, [r8, #12]
   19334:	bl	128ec <fwrite@plt>
   19338:	mov	r5, r0
   1933c:	mov	r0, r8
   19340:	bl	127cc <mmal_buffer_header_mem_unlock@plt>
   19344:	cmp	r5, r4
   19348:	beq	19380 <deg_to_str@@Base+0x30c>
   1934c:	ldr	r3, [pc, #424]	; 194fc <deg_to_str@@Base+0x488>
   19350:	ldr	r0, [sl, r3]
   19354:	ldr	r3, [r0]
   19358:	cmp	r3, #1
   1935c:	bls	19378 <deg_to_str@@Base+0x304>
   19360:	ldr	r2, [pc, #408]	; 19500 <deg_to_str@@Base+0x48c>
   19364:	mov	r3, r5
   19368:	str	r4, [sp]
   1936c:	mov	r1, #2
   19370:	add	r2, pc, r2
   19374:	bl	12754 <vcos_log_impl@plt>
   19378:	mov	r3, #1
   1937c:	str	r3, [r7, #8]
   19380:	ldr	ip, [r7, #12]
   19384:	cmp	ip, #0
   19388:	beq	19270 <deg_to_str@@Base+0x1fc>
   1938c:	ldrd	r0, [r8, #32]
   19390:	cmp	r1, #-2147483648	; 0x80000000
   19394:	cmpeq	r0, #0
   19398:	beq	19270 <deg_to_str@@Base+0x1fc>
   1939c:	ldr	r3, [r6, #652]	; 0x28c
   193a0:	mov	r2, #1000	; 0x3e8
   193a4:	ldrd	r4, [r7, #24]
   193a8:	cmp	r3, #0
   193ac:	ldr	fp, [pc, #336]	; 19504 <deg_to_str@@Base+0x490>
   193b0:	moveq	r3, #664	; 0x298
   193b4:	add	fp, pc, fp
   193b8:	strdeq	r0, [r6, r3]
   193bc:	subs	r4, r0, r4
   193c0:	sbc	r5, r1, r5
   193c4:	strd	r0, [r7, #32]
   193c8:	mov	r3, #0
   193cc:	mov	r0, r4
   193d0:	mov	r1, r5
   193d4:	str	ip, [sp, #28]
   193d8:	bl	19f4c <deg_to_str@@Base+0xed8>
   193dc:	mov	r2, #1000	; 0x3e8
   193e0:	mov	r3, #0
   193e4:	strd	r0, [sp]
   193e8:	mov	r0, r4
   193ec:	mov	r1, r5
   193f0:	bl	19f4c <deg_to_str@@Base+0xed8>
   193f4:	ldr	ip, [sp, #28]
   193f8:	mov	r1, #1
   193fc:	mov	r0, ip
   19400:	strd	r2, [sp, #8]
   19404:	mov	r2, fp
   19408:	bl	12a6c <__fprintf_chk@plt>
   1940c:	ldr	r3, [r7, #16]
   19410:	add	r3, r3, #1
   19414:	str	r3, [r7, #16]
   19418:	b	19270 <deg_to_str@@Base+0x1fc>
   1941c:	ldr	r3, [r7, #4]
   19420:	ldr	r3, [r3, #600]	; 0x258
   19424:	ldr	r0, [r3]
   19428:	bl	12a9c <mmal_queue_get@plt>
   1942c:	subs	r1, r0, #0
   19430:	beq	19444 <deg_to_str@@Base+0x3d0>
   19434:	mov	r0, r9
   19438:	bl	12784 <mmal_port_send_buffer@plt>
   1943c:	cmp	r0, #0
   19440:	beq	19314 <deg_to_str@@Base+0x2a0>
   19444:	ldr	r3, [pc, #176]	; 194fc <deg_to_str@@Base+0x488>
   19448:	ldr	r0, [sl, r3]
   1944c:	ldr	r3, [r0]
   19450:	cmp	r3, #1
   19454:	bls	19314 <deg_to_str@@Base+0x2a0>
   19458:	ldr	r2, [pc, #168]	; 19508 <deg_to_str@@Base+0x494>
   1945c:	mov	r1, #2
   19460:	add	r2, pc, r2
   19464:	add	sp, sp, #44	; 0x2c
   19468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1946c:	b	12754 <vcos_log_impl@plt>
   19470:	bl	18818 <raspi_gps_location_string@@Base>
   19474:	ldr	ip, [r6, #540]	; 0x21c
   19478:	ldr	r1, [r6, #276]	; 0x114
   1947c:	ldr	r3, [r6, #536]	; 0x218
   19480:	mov	fp, r0
   19484:	mov	r2, r0
   19488:	ldr	r0, [r6, #592]	; 0x250
   1948c:	str	ip, [sp]
   19490:	ldr	ip, [r6, #544]	; 0x220
   19494:	str	ip, [sp, #4]
   19498:	ldr	ip, [r6, #548]	; 0x224
   1949c:	str	ip, [sp, #8]
   194a0:	ldr	ip, [r6, #552]	; 0x228
   194a4:	str	ip, [sp, #12]
   194a8:	ldr	ip, [r6, #556]	; 0x22c
   194ac:	str	ip, [sp, #16]
   194b0:	bl	1658c <raspicamcontrol_set_annotate@@Base>
   194b4:	mov	r0, fp
   194b8:	bl	127e4 <free@plt>
   194bc:	b	192f4 <deg_to_str@@Base+0x280>
   194c0:	ldr	r3, [pc, #68]	; 1950c <deg_to_str@@Base+0x498>
   194c4:	mov	r2, #732	; 0x2dc
   194c8:	ldr	r0, [pc, #64]	; 19510 <deg_to_str@@Base+0x49c>
   194cc:	add	r3, pc, r3
   194d0:	ldr	r1, [pc, #60]	; 19514 <deg_to_str@@Base+0x4a0>
   194d4:	str	r3, [sp]
   194d8:	add	r0, pc, r0
   194dc:	ldr	r3, [pc, #52]	; 19518 <deg_to_str@@Base+0x4a4>
   194e0:	add	r1, pc, r1
   194e4:	add	r3, pc, r3
   194e8:	bl	12a84 <vcos_pthreads_logging_assert@plt>
   194ec:	b	19268 <deg_to_str@@Base+0x1f4>
   194f0:	ldrdeq	r4, [r1], -r0
   194f4:	andeq	r5, r1, r8, lsr #8
   194f8:			; <UNDEFINED> instruction: 0x000153b8
   194fc:	andeq	r0, r0, r0, lsl #3
   19500:	andeq	r3, r0, ip, ror r4
   19504:	andeq	r3, r0, ip, ror #8
   19508:	ldrdeq	r3, [r0], -r0
   1950c:	andeq	r3, r0, ip, lsl #6
   19510:	muleq	r0, r8, r2
   19514:	andeq	r3, r0, r4, lsl r2
   19518:	andeq	r1, r0, ip, lsr #18
   1951c:	ldr	ip, [pc, #288]	; 19644 <deg_to_str@@Base+0x5d0>
   19520:	mov	r1, #1
   19524:	push	{r3, r4, r5, lr}
   19528:	add	ip, pc, ip
   1952c:	ldr	r3, [pc, #276]	; 19648 <deg_to_str@@Base+0x5d4>
   19530:	mov	r5, r0
   19534:	ldr	r0, [pc, #272]	; 1964c <deg_to_str@@Base+0x5d8>
   19538:	mov	r2, #92	; 0x5c
   1953c:	ldr	r4, [ip, r3]
   19540:	add	r0, pc, r0
   19544:	ldr	r3, [r4]
   19548:	bl	128ec <fwrite@plt>
   1954c:	ldr	r0, [pc, #252]	; 19650 <deg_to_str@@Base+0x5dc>
   19550:	ldr	r3, [r4]
   19554:	mov	r1, #1
   19558:	mov	r2, #85	; 0x55
   1955c:	add	r0, pc, r0
   19560:	bl	128ec <fwrite@plt>
   19564:	ldr	r0, [pc, #232]	; 19654 <deg_to_str@@Base+0x5e0>
   19568:	ldr	r3, [r4]
   1956c:	mov	r1, #1
   19570:	mov	r2, #87	; 0x57
   19574:	add	r0, pc, r0
   19578:	bl	128ec <fwrite@plt>
   1957c:	ldr	r0, [pc, #212]	; 19658 <deg_to_str@@Base+0x5e4>
   19580:	ldr	r3, [r4]
   19584:	mov	r1, #1
   19588:	mov	r2, #32
   1958c:	add	r0, pc, r0
   19590:	bl	128ec <fwrite@plt>
   19594:	ldr	r0, [pc, #192]	; 1965c <deg_to_str@@Base+0x5e8>
   19598:	ldr	r3, [r4]
   1959c:	mov	r1, #1
   195a0:	mov	r2, #94	; 0x5e
   195a4:	add	r0, pc, r0
   195a8:	bl	128ec <fwrite@plt>
   195ac:	ldr	r0, [pc, #172]	; 19660 <deg_to_str@@Base+0x5ec>
   195b0:	ldr	r3, [r4]
   195b4:	mov	r1, #1
   195b8:	mov	r2, #103	; 0x67
   195bc:	add	r0, pc, r0
   195c0:	bl	128ec <fwrite@plt>
   195c4:	ldr	r0, [pc, #152]	; 19664 <deg_to_str@@Base+0x5f0>
   195c8:	ldr	r3, [r4]
   195cc:	mov	r1, #1
   195d0:	mov	r2, #84	; 0x54
   195d4:	add	r0, pc, r0
   195d8:	bl	128ec <fwrite@plt>
   195dc:	ldr	r0, [pc, #132]	; 19668 <deg_to_str@@Base+0x5f4>
   195e0:	ldr	r3, [r4]
   195e4:	mov	r1, #1
   195e8:	mov	r2, #78	; 0x4e
   195ec:	add	r0, pc, r0
   195f0:	bl	128ec <fwrite@plt>
   195f4:	ldr	r2, [pc, #112]	; 1966c <deg_to_str@@Base+0x5f8>
   195f8:	mov	r3, r5
   195fc:	ldr	r0, [r4]
   19600:	mov	r1, #1
   19604:	add	r2, pc, r2
   19608:	bl	12a6c <__fprintf_chk@plt>
   1960c:	ldr	r0, [pc, #92]	; 19670 <deg_to_str@@Base+0x5fc>
   19610:	ldr	r3, [r4]
   19614:	mov	r1, #1
   19618:	mov	r2, #26
   1961c:	add	r0, pc, r0
   19620:	bl	128ec <fwrite@plt>
   19624:	ldr	r0, [pc, #72]	; 19674 <deg_to_str@@Base+0x600>
   19628:	mov	r1, #11
   1962c:	add	r0, pc, r0
   19630:	bl	170d0 <raspicli_display_help@@Base>
   19634:	ldr	r1, [r4]
   19638:	mov	r0, #10
   1963c:	pop	{r3, r4, r5, lr}
   19640:	b	12ac0 <fputc@plt>
   19644:	ldrdeq	r4, [r1], -r0
   19648:	muleq	r0, r8, r1
   1964c:	andeq	r3, r0, r0, lsr #6
   19650:	andeq	r3, r0, r4, ror #6
   19654:	andeq	r3, r0, r4, lsr #7
   19658:	andeq	r3, r0, r4, ror #7
   1965c:	strdeq	r3, [r0], -r0
   19660:	andeq	r3, r0, r8, lsr r4
   19664:	andeq	r3, r0, r8, lsl #9
   19668:	andeq	r3, r0, r8, asr #9
   1966c:	andeq	r3, r0, r0, lsl #10
   19670:	andeq	r3, r0, r0, lsl #10
   19674:	muleq	r1, r4, r0
   19678:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1967c:	sub	sp, sp, #76	; 0x4c
   19680:	ldr	r7, [pc, #1412]	; 19c0c <deg_to_str@@Base+0xb98>
   19684:	subs	r5, r2, #0
   19688:	ldr	r3, [pc, #1408]	; 19c10 <deg_to_str@@Base+0xb9c>
   1968c:	mov	r6, r1
   19690:	add	r7, pc, r7
   19694:	str	r0, [sp, #16]
   19698:	ldr	r3, [r7, r3]
   1969c:	str	r3, [sp, #12]
   196a0:	ldr	r3, [r3]
   196a4:	str	r3, [sp, #68]	; 0x44
   196a8:	beq	19a28 <deg_to_str@@Base+0x9b4>
   196ac:	ldr	r0, [pc, #1376]	; 19c14 <deg_to_str@@Base+0xba0>
   196b0:	mov	r1, r5
   196b4:	mov	r2, #6
   196b8:	add	r0, pc, r0
   196bc:	bl	12b38 <strncmp@plt>
   196c0:	cmp	r0, #0
   196c4:	bne	198b8 <deg_to_str@@Base+0x844>
   196c8:	mov	r3, #1
   196cc:	str	r3, [sp, #20]
   196d0:	add	r5, r5, #6
   196d4:	mov	r1, #58	; 0x3a
   196d8:	mov	r0, r5
   196dc:	bl	129e8 <strchr@plt>
   196e0:	subs	fp, r0, #0
   196e4:	beq	19b94 <deg_to_str@@Base+0xb20>
   196e8:	ldr	r1, [pc, #1320]	; 19c18 <deg_to_str@@Base+0xba4>
   196ec:	add	r0, fp, #1
   196f0:	add	r2, sp, #26
   196f4:	add	r1, pc, r1
   196f8:	bl	12acc <sscanf@plt>
   196fc:	cmp	r0, #1
   19700:	mov	r9, r0
   19704:	bne	19bbc <deg_to_str@@Base+0xb48>
   19708:	ldrb	r2, [fp]
   1970c:	mov	r4, #0
   19710:	strb	r4, [fp]
   19714:	mov	r0, r5
   19718:	ldrh	lr, [sp, #26]
   1971c:	add	r1, sp, #40	; 0x28
   19720:	str	r2, [sp, #8]
   19724:	mov	sl, #2
   19728:	str	r4, [sp, #40]	; 0x28
   1972c:	lsl	r8, lr, #8
   19730:	str	r4, [sp, #44]	; 0x2c
   19734:	orr	lr, r8, lr, lsr #8
   19738:	str	r4, [sp, #48]	; 0x30
   1973c:	strh	sl, [sp, #36]	; 0x24
   19740:	add	r8, sp, #36	; 0x24
   19744:	strh	lr, [sp, #38]	; 0x26
   19748:	bl	1276c <inet_aton@plt>
   1974c:	ldr	r2, [sp, #8]
   19750:	cmp	r0, r4
   19754:	beq	19be4 <deg_to_str@@Base+0xb70>
   19758:	strb	r2, [fp]
   1975c:	mov	r0, sl
   19760:	ldrb	r6, [r6]
   19764:	cmp	r6, #0
   19768:	beq	19910 <deg_to_str@@Base+0x89c>
   1976c:	mov	r1, r9
   19770:	mov	r2, r4
   19774:	bl	12af0 <socket@plt>
   19778:	subs	r6, r0, #0
   1977c:	blt	19ad0 <deg_to_str@@Base+0xa5c>
   19780:	add	r3, sp, #72	; 0x48
   19784:	mov	r2, sl
   19788:	mov	r1, #4
   1978c:	str	r9, [r3, #-44]!	; 0xffffffd4
   19790:	str	r1, [sp]
   19794:	mov	r1, r9
   19798:	bl	127a8 <setsockopt@plt>
   1979c:	mov	r0, r6
   197a0:	mov	r1, r8
   197a4:	mov	r2, #16
   197a8:	bl	12a24 <bind@plt>
   197ac:	cmp	r0, #0
   197b0:	bge	197c8 <deg_to_str@@Base+0x754>
   197b4:	b	19b5c <deg_to_str@@Base+0xae8>
   197b8:	bl	12a00 <__errno_location@plt>
   197bc:	ldr	r3, [r0]
   197c0:	cmp	r3, #4
   197c4:	bne	19a60 <deg_to_str@@Base+0x9ec>
   197c8:	mov	r0, r6
   197cc:	mov	r1, #0
   197d0:	bl	12aa8 <listen@plt>
   197d4:	cmn	r0, #1
   197d8:	str	r0, [sp, #28]
   197dc:	beq	197b8 <deg_to_str@@Base+0x744>
   197e0:	ldr	r3, [pc, #1076]	; 19c1c <deg_to_str@@Base+0xba8>
   197e4:	add	r9, sp, #52	; 0x34
   197e8:	ldr	r0, [sp, #40]	; 0x28
   197ec:	add	r8, sp, #32
   197f0:	ldr	fp, [r7, r3]
   197f4:	ldr	r4, [fp]
   197f8:	bl	12874 <inet_ntoa@plt>
   197fc:	ldrh	ip, [sp, #38]	; 0x26
   19800:	mov	r1, #1
   19804:	ldr	r2, [pc, #1044]	; 19c20 <deg_to_str@@Base+0xbac>
   19808:	lsl	lr, ip, #8
   1980c:	add	r2, pc, r2
   19810:	orr	ip, lr, ip, lsr #8
   19814:	uxth	ip, ip
   19818:	str	ip, [sp]
   1981c:	mov	r3, r0
   19820:	mov	r0, r4
   19824:	bl	12a6c <__fprintf_chk@plt>
   19828:	mov	r3, #16
   1982c:	str	r3, [sp, #32]
   19830:	b	19844 <deg_to_str@@Base+0x7d0>
   19834:	bl	12a00 <__errno_location@plt>
   19838:	ldr	r3, [r0]
   1983c:	cmp	r3, #4
   19840:	bne	19b30 <deg_to_str@@Base+0xabc>
   19844:	mov	r0, r6
   19848:	mov	r1, r9
   1984c:	mov	r2, r8
   19850:	bl	128c8 <accept@plt>
   19854:	cmn	r0, #1
   19858:	mov	r4, r0
   1985c:	beq	19834 <deg_to_str@@Base+0x7c0>
   19860:	cmp	r0, #0
   19864:	blt	19b30 <deg_to_str@@Base+0xabc>
   19868:	ldr	r0, [sp, #56]	; 0x38
   1986c:	ldr	r8, [fp]
   19870:	bl	12874 <inet_ntoa@plt>
   19874:	ldrh	ip, [sp, #54]	; 0x36
   19878:	mov	r1, #1
   1987c:	ldr	r2, [pc, #928]	; 19c24 <deg_to_str@@Base+0xbb0>
   19880:	lsl	lr, ip, #8
   19884:	add	r2, pc, r2
   19888:	orr	ip, lr, ip, lsr #8
   1988c:	uxth	ip, ip
   19890:	str	ip, [sp]
   19894:	mov	r3, r0
   19898:	mov	r0, r8
   1989c:	bl	12a6c <__fprintf_chk@plt>
   198a0:	mov	r0, r6
   198a4:	bl	12b50 <close@plt>
   198a8:	cmp	r4, #0
   198ac:	movlt	r4, #0
   198b0:	bge	199a4 <deg_to_str@@Base+0x930>
   198b4:	b	199d0 <deg_to_str@@Base+0x95c>
   198b8:	ldr	r0, [pc, #872]	; 19c28 <deg_to_str@@Base+0xbb4>
   198bc:	mov	r1, r5
   198c0:	mov	r2, #6
   198c4:	add	r0, pc, r0
   198c8:	bl	12b38 <strncmp@plt>
   198cc:	cmp	r0, #0
   198d0:	bne	199bc <deg_to_str@@Base+0x948>
   198d4:	ldrb	r3, [r6]
   198d8:	cmp	r3, #0
   198dc:	moveq	r3, #2
   198e0:	streq	r3, [sp, #20]
   198e4:	beq	196d0 <deg_to_str@@Base+0x65c>
   198e8:	ldr	r3, [pc, #812]	; 19c1c <deg_to_str@@Base+0xba8>
   198ec:	mov	r1, #1
   198f0:	ldr	r0, [pc, #820]	; 19c2c <deg_to_str@@Base+0xbb8>
   198f4:	mov	r2, #37	; 0x25
   198f8:	ldr	r3, [r7, r3]
   198fc:	add	r0, pc, r0
   19900:	ldr	r3, [r3]
   19904:	bl	128ec <fwrite@plt>
   19908:	mov	r0, #131	; 0x83
   1990c:	bl	129b8 <exit@plt>
   19910:	ldr	r1, [sp, #20]
   19914:	mov	r2, r6
   19918:	bl	12af0 <socket@plt>
   1991c:	ldr	r3, [pc, #760]	; 19c1c <deg_to_str@@Base+0xba8>
   19920:	subs	r4, r0, #0
   19924:	blt	19a9c <deg_to_str@@Base+0xa28>
   19928:	ldr	fp, [r7, r3]
   1992c:	ldr	r0, [sp, #40]	; 0x28
   19930:	ldr	r6, [fp]
   19934:	bl	12874 <inet_ntoa@plt>
   19938:	ldrh	ip, [sp, #26]
   1993c:	mov	r1, r9
   19940:	ldr	r2, [pc, #744]	; 19c30 <deg_to_str@@Base+0xbbc>
   19944:	str	ip, [sp]
   19948:	add	r2, pc, r2
   1994c:	mov	r3, r0
   19950:	mov	r0, r6
   19954:	bl	12a6c <__fprintf_chk@plt>
   19958:	b	1996c <deg_to_str@@Base+0x8f8>
   1995c:	bl	12a00 <__errno_location@plt>
   19960:	ldr	r3, [r0]
   19964:	cmp	r3, #4
   19968:	bne	19b04 <deg_to_str@@Base+0xa90>
   1996c:	mov	r0, r4
   19970:	mov	r1, r8
   19974:	mov	r2, #16
   19978:	bl	12b68 <connect@plt>
   1997c:	cmn	r0, #1
   19980:	beq	1995c <deg_to_str@@Base+0x8e8>
   19984:	cmp	r0, #0
   19988:	blt	19b04 <deg_to_str@@Base+0xa90>
   1998c:	ldr	r0, [pc, #672]	; 19c34 <deg_to_str@@Base+0xbc0>
   19990:	mov	r1, #1
   19994:	ldr	r3, [fp]
   19998:	mov	r2, #28
   1999c:	add	r0, pc, r0
   199a0:	bl	128ec <fwrite@plt>
   199a4:	ldr	r1, [pc, #652]	; 19c38 <deg_to_str@@Base+0xbc4>
   199a8:	mov	r0, r4
   199ac:	add	r1, pc, r1
   199b0:	bl	12748 <fdopen@plt>
   199b4:	mov	r4, r0
   199b8:	b	199d0 <deg_to_str@@Base+0x95c>
   199bc:	ldr	r1, [pc, #632]	; 19c3c <deg_to_str@@Base+0xbc8>
   199c0:	mov	r0, r5
   199c4:	add	r1, pc, r1
   199c8:	bl	12ae4 <fopen64@plt>
   199cc:	mov	r4, r0
   199d0:	ldr	r1, [sp, #16]
   199d4:	ldr	r3, [r1]
   199d8:	cmp	r3, #0
   199dc:	beq	19a08 <deg_to_str@@Base+0x994>
   199e0:	cmp	r4, #0
   199e4:	beq	19a38 <deg_to_str@@Base+0x9c4>
   199e8:	ldr	r0, [pc, #556]	; 19c1c <deg_to_str@@Base+0xba8>
   199ec:	mov	r3, r5
   199f0:	ldr	r2, [pc, #584]	; 19c40 <deg_to_str@@Base+0xbcc>
   199f4:	mov	r1, #1
   199f8:	ldr	r0, [r7, r0]
   199fc:	add	r2, pc, r2
   19a00:	ldr	r0, [r0]
   19a04:	bl	12a6c <__fprintf_chk@plt>
   19a08:	ldr	r1, [sp, #12]
   19a0c:	mov	r0, r4
   19a10:	ldr	r2, [sp, #68]	; 0x44
   19a14:	ldr	r3, [r1]
   19a18:	cmp	r2, r3
   19a1c:	bne	19b90 <deg_to_str@@Base+0xb1c>
   19a20:	add	sp, sp, #76	; 0x4c
   19a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a28:	ldr	r1, [sp, #16]
   19a2c:	ldr	r4, [r1]
   19a30:	cmp	r4, #0
   19a34:	beq	19a08 <deg_to_str@@Base+0x994>
   19a38:	ldr	r0, [pc, #476]	; 19c1c <deg_to_str@@Base+0xba8>
   19a3c:	mov	r3, r5
   19a40:	ldr	r2, [pc, #508]	; 19c44 <deg_to_str@@Base+0xbd0>
   19a44:	mov	r1, #1
   19a48:	mov	r4, #0
   19a4c:	ldr	r0, [r7, r0]
   19a50:	add	r2, pc, r2
   19a54:	ldr	r0, [r0]
   19a58:	bl	12a6c <__fprintf_chk@plt>
   19a5c:	b	19a08 <deg_to_str@@Base+0x994>
   19a60:	mov	r0, r3
   19a64:	ldr	r3, [pc, #432]	; 19c1c <deg_to_str@@Base+0xba8>
   19a68:	ldr	r3, [r7, r3]
   19a6c:	ldr	r4, [r3]
   19a70:	bl	12958 <strerror@plt>
   19a74:	ldr	r2, [pc, #460]	; 19c48 <deg_to_str@@Base+0xbd4>
   19a78:	mov	r1, #1
   19a7c:	add	r2, pc, r2
   19a80:	mov	r3, r0
   19a84:	mov	r0, r4
   19a88:	bl	12a6c <__fprintf_chk@plt>
   19a8c:	mov	r0, r6
   19a90:	mov	r4, #0
   19a94:	bl	12b50 <close@plt>
   19a98:	b	199d0 <deg_to_str@@Base+0x95c>
   19a9c:	ldr	r3, [r7, r3]
   19aa0:	mov	r4, r6
   19aa4:	ldr	r6, [r3]
   19aa8:	bl	12a00 <__errno_location@plt>
   19aac:	ldr	r0, [r0]
   19ab0:	bl	12958 <strerror@plt>
   19ab4:	ldr	r2, [pc, #400]	; 19c4c <deg_to_str@@Base+0xbd8>
   19ab8:	mov	r1, r9
   19abc:	add	r2, pc, r2
   19ac0:	mov	r3, r0
   19ac4:	mov	r0, r6
   19ac8:	bl	12a6c <__fprintf_chk@plt>
   19acc:	b	199d0 <deg_to_str@@Base+0x95c>
   19ad0:	ldr	r3, [pc, #324]	; 19c1c <deg_to_str@@Base+0xba8>
   19ad4:	ldr	r3, [r7, r3]
   19ad8:	ldr	r6, [r3]
   19adc:	bl	12a00 <__errno_location@plt>
   19ae0:	ldr	r0, [r0]
   19ae4:	bl	12958 <strerror@plt>
   19ae8:	ldr	r2, [pc, #352]	; 19c50 <deg_to_str@@Base+0xbdc>
   19aec:	mov	r1, r9
   19af0:	add	r2, pc, r2
   19af4:	mov	r3, r0
   19af8:	mov	r0, r6
   19afc:	bl	12a6c <__fprintf_chk@plt>
   19b00:	b	199d0 <deg_to_str@@Base+0x95c>
   19b04:	bl	12a00 <__errno_location@plt>
   19b08:	ldr	r6, [fp]
   19b0c:	ldr	r0, [r0]
   19b10:	bl	12958 <strerror@plt>
   19b14:	ldr	r2, [pc, #312]	; 19c54 <deg_to_str@@Base+0xbe0>
   19b18:	mov	r1, #1
   19b1c:	add	r2, pc, r2
   19b20:	mov	r3, r0
   19b24:	mov	r0, r6
   19b28:	bl	12a6c <__fprintf_chk@plt>
   19b2c:	b	199a4 <deg_to_str@@Base+0x930>
   19b30:	bl	12a00 <__errno_location@plt>
   19b34:	ldr	r8, [fp]
   19b38:	ldr	r0, [r0]
   19b3c:	bl	12958 <strerror@plt>
   19b40:	ldr	r2, [pc, #272]	; 19c58 <deg_to_str@@Base+0xbe4>
   19b44:	mov	r1, #1
   19b48:	add	r2, pc, r2
   19b4c:	mov	r3, r0
   19b50:	mov	r0, r8
   19b54:	bl	12a6c <__fprintf_chk@plt>
   19b58:	b	198a0 <deg_to_str@@Base+0x82c>
   19b5c:	ldr	r3, [pc, #184]	; 19c1c <deg_to_str@@Base+0xba8>
   19b60:	ldr	r3, [r7, r3]
   19b64:	ldr	r4, [r3]
   19b68:	bl	12a00 <__errno_location@plt>
   19b6c:	ldr	r0, [r0]
   19b70:	bl	12958 <strerror@plt>
   19b74:	ldr	r2, [pc, #224]	; 19c5c <deg_to_str@@Base+0xbe8>
   19b78:	mov	r1, r9
   19b7c:	add	r2, pc, r2
   19b80:	mov	r3, r0
   19b84:	mov	r0, r4
   19b88:	bl	12a6c <__fprintf_chk@plt>
   19b8c:	b	19a8c <deg_to_str@@Base+0xa18>
   19b90:	bl	1288c <__stack_chk_fail@plt>
   19b94:	ldr	r0, [pc, #128]	; 19c1c <deg_to_str@@Base+0xba8>
   19b98:	mov	r3, r5
   19b9c:	ldr	r2, [pc, #188]	; 19c60 <deg_to_str@@Base+0xbec>
   19ba0:	mov	r1, #1
   19ba4:	ldr	r0, [r7, r0]
   19ba8:	add	r2, pc, r2
   19bac:	ldr	r0, [r0]
   19bb0:	bl	12a6c <__fprintf_chk@plt>
   19bb4:	mov	r0, #132	; 0x84
   19bb8:	bl	129b8 <exit@plt>
   19bbc:	ldr	r0, [pc, #88]	; 19c1c <deg_to_str@@Base+0xba8>
   19bc0:	mov	r3, r5
   19bc4:	ldr	r2, [pc, #152]	; 19c64 <deg_to_str@@Base+0xbf0>
   19bc8:	mov	r1, #1
   19bcc:	ldr	r0, [r7, r0]
   19bd0:	add	r2, pc, r2
   19bd4:	ldr	r0, [r0]
   19bd8:	bl	12a6c <__fprintf_chk@plt>
   19bdc:	mov	r0, #133	; 0x85
   19be0:	bl	129b8 <exit@plt>
   19be4:	ldr	r0, [pc, #48]	; 19c1c <deg_to_str@@Base+0xba8>
   19be8:	mov	r1, r9
   19bec:	ldr	r2, [pc, #116]	; 19c68 <deg_to_str@@Base+0xbf4>
   19bf0:	mov	r3, r5
   19bf4:	ldr	r0, [r7, r0]
   19bf8:	add	r2, pc, r2
   19bfc:	ldr	r0, [r0]
   19c00:	bl	12a6c <__fprintf_chk@plt>
   19c04:	mov	r0, #134	; 0x86
   19c08:	bl	129b8 <exit@plt>
   19c0c:	andeq	r4, r1, r8, ror #18
   19c10:	andeq	r0, r0, r4, lsl #3
   19c14:	andeq	r3, r0, r0, lsl #9
   19c18:	ldrdeq	r3, [r0], -r8
   19c1c:	andeq	r0, r0, r8, lsl #3
   19c20:	andeq	r3, r0, r8, ror #10
   19c24:	strdeq	r3, [r0], -r8
   19c28:	andeq	r3, r0, ip, ror r2
   19c2c:	andeq	r3, r0, ip, asr #4
   19c30:	andeq	r3, r0, r8, lsr #7
   19c34:	andeq	r3, r0, r8, ror r3
   19c38:	andeq	r2, r0, r0, asr r6
   19c3c:	andeq	r3, r0, ip, lsr #7
   19c40:	andeq	r3, r0, r8, lsr r3
   19c44:	andeq	r3, r0, r0, lsl #6
   19c48:	andeq	r3, r0, r4, lsr #6
   19c4c:	andeq	r3, r0, r8, lsl r2
   19c50:	andeq	r3, r0, r4, ror #3
   19c54:	andeq	r3, r0, ip, ror #3
   19c58:	andeq	r3, r0, r4, asr r1
   19c5c:	andeq	r3, r0, r8, lsr r1
   19c60:	andeq	r2, r0, r8, asr #31
   19c64:	andeq	r3, r0, r0
   19c68:	andeq	r3, r0, r0, asr r0
   19c6c:	ldr	r3, [pc, #144]	; 19d04 <deg_to_str@@Base+0xc90>
   19c70:	ldr	r2, [pc, #144]	; 19d08 <deg_to_str@@Base+0xc94>
   19c74:	add	r3, pc, r3
   19c78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19c7c:	subs	r9, r1, #0
   19c80:	ldr	sl, [r3, r2]
   19c84:	sub	sp, sp, #16
   19c88:	mov	r6, r0
   19c8c:	ldr	r3, [sl]
   19c90:	str	r3, [sp, #12]
   19c94:	ble	19ce4 <deg_to_str@@Base+0xc70>
   19c98:	mov	r4, #0
   19c9c:	mov	r5, #57600	; 0xe100
   19ca0:	add	r8, sp, #4
   19ca4:	movt	r5, #1525	; 0x5f5
   19ca8:	mov	r7, r4
   19cac:	b	19cbc <deg_to_str@@Base+0xc48>
   19cb0:	add	r4, r4, #100	; 0x64
   19cb4:	cmp	r4, r9
   19cb8:	bge	19ce4 <deg_to_str@@Base+0xc70>
   19cbc:	mov	r0, r8
   19cc0:	mov	r1, #0
   19cc4:	str	r7, [sp, #4]
   19cc8:	str	r5, [sp, #8]
   19ccc:	bl	12814 <nanosleep@plt>
   19cd0:	ldr	r3, [r6]
   19cd4:	cmp	r3, #0
   19cd8:	beq	19cb0 <deg_to_str@@Base+0xc3c>
   19cdc:	mov	r0, #1
   19ce0:	b	19ce8 <deg_to_str@@Base+0xc74>
   19ce4:	mov	r0, #0
   19ce8:	ldr	r2, [sp, #12]
   19cec:	ldr	r3, [sl]
   19cf0:	cmp	r2, r3
   19cf4:	bne	19d00 <deg_to_str@@Base+0xc8c>
   19cf8:	add	sp, sp, #16
   19cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19d00:	bl	1288c <__stack_chk_fail@plt>
   19d04:	andeq	r4, r1, r4, lsl #7
   19d08:	andeq	r0, r0, r4, lsl #3
   19d0c:	cmp	r1, #0
   19d10:	beq	19f1c <deg_to_str@@Base+0xea8>
   19d14:	eor	ip, r0, r1
   19d18:	rsbmi	r1, r1, #0
   19d1c:	subs	r2, r1, #1
   19d20:	beq	19ee8 <deg_to_str@@Base+0xe74>
   19d24:	movs	r3, r0
   19d28:	rsbmi	r3, r0, #0
   19d2c:	cmp	r3, r1
   19d30:	bls	19ef4 <deg_to_str@@Base+0xe80>
   19d34:	tst	r1, r2
   19d38:	beq	19f04 <deg_to_str@@Base+0xe90>
   19d3c:	clz	r2, r3
   19d40:	clz	r0, r1
   19d44:	sub	r2, r0, r2
   19d48:	rsbs	r2, r2, #31
   19d4c:	addne	r2, r2, r2, lsl #1
   19d50:	mov	r0, #0
   19d54:	addne	pc, pc, r2, lsl #2
   19d58:	nop	{0}
   19d5c:	cmp	r3, r1, lsl #31
   19d60:	adc	r0, r0, r0
   19d64:	subcs	r3, r3, r1, lsl #31
   19d68:	cmp	r3, r1, lsl #30
   19d6c:	adc	r0, r0, r0
   19d70:	subcs	r3, r3, r1, lsl #30
   19d74:	cmp	r3, r1, lsl #29
   19d78:	adc	r0, r0, r0
   19d7c:	subcs	r3, r3, r1, lsl #29
   19d80:	cmp	r3, r1, lsl #28
   19d84:	adc	r0, r0, r0
   19d88:	subcs	r3, r3, r1, lsl #28
   19d8c:	cmp	r3, r1, lsl #27
   19d90:	adc	r0, r0, r0
   19d94:	subcs	r3, r3, r1, lsl #27
   19d98:	cmp	r3, r1, lsl #26
   19d9c:	adc	r0, r0, r0
   19da0:	subcs	r3, r3, r1, lsl #26
   19da4:	cmp	r3, r1, lsl #25
   19da8:	adc	r0, r0, r0
   19dac:	subcs	r3, r3, r1, lsl #25
   19db0:	cmp	r3, r1, lsl #24
   19db4:	adc	r0, r0, r0
   19db8:	subcs	r3, r3, r1, lsl #24
   19dbc:	cmp	r3, r1, lsl #23
   19dc0:	adc	r0, r0, r0
   19dc4:	subcs	r3, r3, r1, lsl #23
   19dc8:	cmp	r3, r1, lsl #22
   19dcc:	adc	r0, r0, r0
   19dd0:	subcs	r3, r3, r1, lsl #22
   19dd4:	cmp	r3, r1, lsl #21
   19dd8:	adc	r0, r0, r0
   19ddc:	subcs	r3, r3, r1, lsl #21
   19de0:	cmp	r3, r1, lsl #20
   19de4:	adc	r0, r0, r0
   19de8:	subcs	r3, r3, r1, lsl #20
   19dec:	cmp	r3, r1, lsl #19
   19df0:	adc	r0, r0, r0
   19df4:	subcs	r3, r3, r1, lsl #19
   19df8:	cmp	r3, r1, lsl #18
   19dfc:	adc	r0, r0, r0
   19e00:	subcs	r3, r3, r1, lsl #18
   19e04:	cmp	r3, r1, lsl #17
   19e08:	adc	r0, r0, r0
   19e0c:	subcs	r3, r3, r1, lsl #17
   19e10:	cmp	r3, r1, lsl #16
   19e14:	adc	r0, r0, r0
   19e18:	subcs	r3, r3, r1, lsl #16
   19e1c:	cmp	r3, r1, lsl #15
   19e20:	adc	r0, r0, r0
   19e24:	subcs	r3, r3, r1, lsl #15
   19e28:	cmp	r3, r1, lsl #14
   19e2c:	adc	r0, r0, r0
   19e30:	subcs	r3, r3, r1, lsl #14
   19e34:	cmp	r3, r1, lsl #13
   19e38:	adc	r0, r0, r0
   19e3c:	subcs	r3, r3, r1, lsl #13
   19e40:	cmp	r3, r1, lsl #12
   19e44:	adc	r0, r0, r0
   19e48:	subcs	r3, r3, r1, lsl #12
   19e4c:	cmp	r3, r1, lsl #11
   19e50:	adc	r0, r0, r0
   19e54:	subcs	r3, r3, r1, lsl #11
   19e58:	cmp	r3, r1, lsl #10
   19e5c:	adc	r0, r0, r0
   19e60:	subcs	r3, r3, r1, lsl #10
   19e64:	cmp	r3, r1, lsl #9
   19e68:	adc	r0, r0, r0
   19e6c:	subcs	r3, r3, r1, lsl #9
   19e70:	cmp	r3, r1, lsl #8
   19e74:	adc	r0, r0, r0
   19e78:	subcs	r3, r3, r1, lsl #8
   19e7c:	cmp	r3, r1, lsl #7
   19e80:	adc	r0, r0, r0
   19e84:	subcs	r3, r3, r1, lsl #7
   19e88:	cmp	r3, r1, lsl #6
   19e8c:	adc	r0, r0, r0
   19e90:	subcs	r3, r3, r1, lsl #6
   19e94:	cmp	r3, r1, lsl #5
   19e98:	adc	r0, r0, r0
   19e9c:	subcs	r3, r3, r1, lsl #5
   19ea0:	cmp	r3, r1, lsl #4
   19ea4:	adc	r0, r0, r0
   19ea8:	subcs	r3, r3, r1, lsl #4
   19eac:	cmp	r3, r1, lsl #3
   19eb0:	adc	r0, r0, r0
   19eb4:	subcs	r3, r3, r1, lsl #3
   19eb8:	cmp	r3, r1, lsl #2
   19ebc:	adc	r0, r0, r0
   19ec0:	subcs	r3, r3, r1, lsl #2
   19ec4:	cmp	r3, r1, lsl #1
   19ec8:	adc	r0, r0, r0
   19ecc:	subcs	r3, r3, r1, lsl #1
   19ed0:	cmp	r3, r1
   19ed4:	adc	r0, r0, r0
   19ed8:	subcs	r3, r3, r1
   19edc:	cmp	ip, #0
   19ee0:	rsbmi	r0, r0, #0
   19ee4:	bx	lr
   19ee8:	teq	ip, r0
   19eec:	rsbmi	r0, r0, #0
   19ef0:	bx	lr
   19ef4:	movcc	r0, #0
   19ef8:	asreq	r0, ip, #31
   19efc:	orreq	r0, r0, #1
   19f00:	bx	lr
   19f04:	clz	r2, r1
   19f08:	rsb	r2, r2, #31
   19f0c:	cmp	ip, #0
   19f10:	lsr	r0, r3, r2
   19f14:	rsbmi	r0, r0, #0
   19f18:	bx	lr
   19f1c:	cmp	r0, #0
   19f20:	mvngt	r0, #-2147483648	; 0x80000000
   19f24:	movlt	r0, #-2147483648	; 0x80000000
   19f28:	b	19fd0 <deg_to_str@@Base+0xf5c>
   19f2c:	cmp	r1, #0
   19f30:	beq	19f1c <deg_to_str@@Base+0xea8>
   19f34:	push	{r0, r1, lr}
   19f38:	bl	19d14 <deg_to_str@@Base+0xca0>
   19f3c:	pop	{r1, r2, lr}
   19f40:	mul	r3, r2, r0
   19f44:	sub	r1, r1, r3
   19f48:	bx	lr
   19f4c:	cmp	r3, #0
   19f50:	cmpeq	r2, #0
   19f54:	bne	19f78 <deg_to_str@@Base+0xf04>
   19f58:	cmp	r1, #0
   19f5c:	movlt	r1, #-2147483648	; 0x80000000
   19f60:	movlt	r0, #0
   19f64:	blt	19f74 <deg_to_str@@Base+0xf00>
   19f68:	cmpeq	r0, #0
   19f6c:	mvnne	r1, #-2147483648	; 0x80000000
   19f70:	mvnne	r0, #0
   19f74:	b	19fd0 <deg_to_str@@Base+0xf5c>
   19f78:	sub	sp, sp, #8
   19f7c:	push	{sp, lr}
   19f80:	bl	19fe0 <deg_to_str@@Base+0xf6c>
   19f84:	ldr	lr, [sp, #4]
   19f88:	add	sp, sp, #8
   19f8c:	pop	{r2, r3}
   19f90:	bx	lr
   19f94:	cmp	r3, #0
   19f98:	cmpeq	r2, #0
   19f9c:	bne	19fb4 <deg_to_str@@Base+0xf40>
   19fa0:	cmp	r1, #0
   19fa4:	cmpeq	r0, #0
   19fa8:	mvnne	r1, #0
   19fac:	mvnne	r0, #0
   19fb0:	b	19fd0 <deg_to_str@@Base+0xf5c>
   19fb4:	sub	sp, sp, #8
   19fb8:	push	{sp, lr}
   19fbc:	bl	1a01c <deg_to_str@@Base+0xfa8>
   19fc0:	ldr	lr, [sp, #4]
   19fc4:	add	sp, sp, #8
   19fc8:	pop	{r2, r3}
   19fcc:	bx	lr
   19fd0:	push	{r1, lr}
   19fd4:	mov	r0, #8
   19fd8:	bl	12760 <raise@plt>
   19fdc:	pop	{r1, pc}
   19fe0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19fe4:	mov	r8, r2
   19fe8:	mov	r6, r0
   19fec:	mov	r7, r1
   19ff0:	mov	sl, r3
   19ff4:	ldr	r9, [sp, #32]
   19ff8:	bl	1a058 <deg_to_str@@Base+0xfe4>
   19ffc:	umull	r4, r5, r8, r0
   1a000:	mul	r8, r8, r1
   1a004:	mla	r2, r0, sl, r8
   1a008:	add	r5, r2, r5
   1a00c:	subs	r4, r6, r4
   1a010:	sbc	r5, r7, r5
   1a014:	strd	r4, [r9]
   1a018:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a01c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1a020:	mov	r8, r2
   1a024:	mov	r6, r0
   1a028:	mov	r7, r1
   1a02c:	mov	r5, r3
   1a030:	ldr	r9, [sp, #32]
   1a034:	bl	1a4e4 <deg_to_str@@Base+0x1470>
   1a038:	mul	r3, r0, r5
   1a03c:	umull	r4, r5, r0, r8
   1a040:	mla	r8, r8, r1, r3
   1a044:	add	r5, r8, r5
   1a048:	subs	r4, r6, r4
   1a04c:	sbc	r5, r7, r5
   1a050:	strd	r4, [r9]
   1a054:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1a058:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a05c:	rsbs	r4, r0, #0
   1a060:	rsc	r5, r1, #0
   1a064:	cmp	r1, #0
   1a068:	mvn	r6, #0
   1a06c:	sub	sp, sp, #12
   1a070:	movge	r4, r0
   1a074:	movge	r5, r1
   1a078:	movge	r6, #0
   1a07c:	cmp	r3, #0
   1a080:	blt	1a2b8 <deg_to_str@@Base+0x1244>
   1a084:	cmp	r3, #0
   1a088:	mov	sl, r4
   1a08c:	mov	ip, r5
   1a090:	mov	r0, r2
   1a094:	mov	r1, r3
   1a098:	mov	r8, r2
   1a09c:	mov	r7, r4
   1a0a0:	mov	r9, r5
   1a0a4:	bne	1a19c <deg_to_str@@Base+0x1128>
   1a0a8:	cmp	r2, r5
   1a0ac:	bls	1a1d8 <deg_to_str@@Base+0x1164>
   1a0b0:	clz	r3, r2
   1a0b4:	cmp	r3, #0
   1a0b8:	rsbne	r2, r3, #32
   1a0bc:	lslne	r8, r0, r3
   1a0c0:	lsrne	r2, r4, r2
   1a0c4:	lslne	r7, r4, r3
   1a0c8:	orrne	r9, r2, r5, lsl r3
   1a0cc:	lsr	r4, r8, #16
   1a0d0:	uxth	sl, r8
   1a0d4:	mov	r1, r4
   1a0d8:	mov	r0, r9
   1a0dc:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a0e0:	mov	r1, r4
   1a0e4:	mov	fp, r0
   1a0e8:	mov	r0, r9
   1a0ec:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a0f0:	mul	r0, sl, fp
   1a0f4:	lsr	r2, r7, #16
   1a0f8:	orr	r1, r2, r1, lsl #16
   1a0fc:	cmp	r0, r1
   1a100:	bls	1a124 <deg_to_str@@Base+0x10b0>
   1a104:	adds	r1, r1, r8
   1a108:	sub	r3, fp, #1
   1a10c:	bcs	1a120 <deg_to_str@@Base+0x10ac>
   1a110:	cmp	r0, r1
   1a114:	subhi	fp, fp, #2
   1a118:	addhi	r1, r1, r8
   1a11c:	bhi	1a124 <deg_to_str@@Base+0x10b0>
   1a120:	mov	fp, r3
   1a124:	rsb	r9, r0, r1
   1a128:	mov	r1, r4
   1a12c:	uxth	r7, r7
   1a130:	mov	r0, r9
   1a134:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a138:	mov	r1, r4
   1a13c:	mov	r5, r0
   1a140:	mov	r0, r9
   1a144:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a148:	mul	sl, sl, r5
   1a14c:	orr	r1, r7, r1, lsl #16
   1a150:	cmp	sl, r1
   1a154:	bls	1a174 <deg_to_str@@Base+0x1100>
   1a158:	adds	r8, r1, r8
   1a15c:	sub	r3, r5, #1
   1a160:	bcs	1a170 <deg_to_str@@Base+0x10fc>
   1a164:	cmp	sl, r8
   1a168:	subhi	r5, r5, #2
   1a16c:	bhi	1a174 <deg_to_str@@Base+0x1100>
   1a170:	mov	r5, r3
   1a174:	orr	r3, r5, fp, lsl #16
   1a178:	mov	r4, #0
   1a17c:	cmp	r6, #0
   1a180:	mov	r0, r3
   1a184:	mov	r1, r4
   1a188:	beq	1a194 <deg_to_str@@Base+0x1120>
   1a18c:	rsbs	r0, r0, #0
   1a190:	rsc	r1, r1, #0
   1a194:	add	sp, sp, #12
   1a198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a19c:	cmp	r3, r5
   1a1a0:	movhi	r4, #0
   1a1a4:	movhi	r3, r4
   1a1a8:	bhi	1a17c <deg_to_str@@Base+0x1108>
   1a1ac:	clz	r5, r1
   1a1b0:	cmp	r5, #0
   1a1b4:	bne	1a3a4 <deg_to_str@@Base+0x1330>
   1a1b8:	cmp	r1, ip
   1a1bc:	cmpcs	r2, sl
   1a1c0:	movhi	r4, #0
   1a1c4:	movls	r4, #1
   1a1c8:	movls	r3, #1
   1a1cc:	movls	r4, r5
   1a1d0:	movhi	r3, r4
   1a1d4:	b	1a17c <deg_to_str@@Base+0x1108>
   1a1d8:	cmp	r2, #0
   1a1dc:	bne	1a1f0 <deg_to_str@@Base+0x117c>
   1a1e0:	mov	r1, r2
   1a1e4:	mov	r0, #1
   1a1e8:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a1ec:	mov	r8, r0
   1a1f0:	clz	r3, r8
   1a1f4:	cmp	r3, #0
   1a1f8:	bne	1a2c8 <deg_to_str@@Base+0x1254>
   1a1fc:	rsb	r9, r8, r9
   1a200:	lsr	r5, r8, #16
   1a204:	uxth	sl, r8
   1a208:	mov	r4, #1
   1a20c:	mov	r1, r5
   1a210:	mov	r0, r9
   1a214:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a218:	mov	r1, r5
   1a21c:	mov	fp, r0
   1a220:	mov	r0, r9
   1a224:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a228:	mul	r0, sl, fp
   1a22c:	lsr	r2, r7, #16
   1a230:	orr	r1, r2, r1, lsl #16
   1a234:	cmp	r0, r1
   1a238:	bls	1a258 <deg_to_str@@Base+0x11e4>
   1a23c:	adds	r1, r1, r8
   1a240:	sub	r3, fp, #1
   1a244:	bcs	1a4c4 <deg_to_str@@Base+0x1450>
   1a248:	cmp	r0, r1
   1a24c:	subhi	fp, fp, #2
   1a250:	addhi	r1, r1, r8
   1a254:	bls	1a4c4 <deg_to_str@@Base+0x1450>
   1a258:	rsb	r2, r0, r1
   1a25c:	mov	r1, r5
   1a260:	str	r2, [sp]
   1a264:	uxth	r7, r7
   1a268:	mov	r0, r2
   1a26c:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a270:	ldr	r2, [sp]
   1a274:	mov	r1, r5
   1a278:	mov	r9, r0
   1a27c:	mov	r0, r2
   1a280:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a284:	mul	sl, sl, r9
   1a288:	orr	r1, r7, r1, lsl #16
   1a28c:	cmp	sl, r1
   1a290:	bls	1a2b0 <deg_to_str@@Base+0x123c>
   1a294:	adds	r8, r1, r8
   1a298:	sub	r3, r9, #1
   1a29c:	bcs	1a2ac <deg_to_str@@Base+0x1238>
   1a2a0:	cmp	sl, r8
   1a2a4:	subhi	r9, r9, #2
   1a2a8:	bhi	1a2b0 <deg_to_str@@Base+0x123c>
   1a2ac:	mov	r9, r3
   1a2b0:	orr	r3, r9, fp, lsl #16
   1a2b4:	b	1a17c <deg_to_str@@Base+0x1108>
   1a2b8:	mvn	r6, r6
   1a2bc:	rsbs	r2, r2, #0
   1a2c0:	rsc	r3, r3, #0
   1a2c4:	b	1a084 <deg_to_str@@Base+0x1010>
   1a2c8:	lsl	r8, r8, r3
   1a2cc:	rsb	fp, r3, #32
   1a2d0:	lsr	r4, r9, fp
   1a2d4:	lsr	fp, r7, fp
   1a2d8:	lsr	r5, r8, #16
   1a2dc:	orr	fp, fp, r9, lsl r3
   1a2e0:	mov	r0, r4
   1a2e4:	lsl	r7, r7, r3
   1a2e8:	mov	r1, r5
   1a2ec:	uxth	sl, r8
   1a2f0:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a2f4:	mov	r1, r5
   1a2f8:	mov	r3, r0
   1a2fc:	mov	r0, r4
   1a300:	str	r3, [sp]
   1a304:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a308:	ldr	r3, [sp]
   1a30c:	lsr	r2, fp, #16
   1a310:	mul	r0, sl, r3
   1a314:	orr	r1, r2, r1, lsl #16
   1a318:	cmp	r0, r1
   1a31c:	bls	1a33c <deg_to_str@@Base+0x12c8>
   1a320:	adds	r1, r1, r8
   1a324:	sub	r2, r3, #1
   1a328:	bcs	1a4dc <deg_to_str@@Base+0x1468>
   1a32c:	cmp	r0, r1
   1a330:	subhi	r3, r3, #2
   1a334:	addhi	r1, r1, r8
   1a338:	bls	1a4dc <deg_to_str@@Base+0x1468>
   1a33c:	rsb	r9, r0, r1
   1a340:	mov	r1, r5
   1a344:	str	r3, [sp]
   1a348:	uxth	fp, fp
   1a34c:	mov	r0, r9
   1a350:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a354:	mov	r1, r5
   1a358:	mov	r4, r0
   1a35c:	mov	r0, r9
   1a360:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a364:	mul	r9, sl, r4
   1a368:	ldr	r3, [sp]
   1a36c:	orr	r1, fp, r1, lsl #16
   1a370:	cmp	r9, r1
   1a374:	bls	1a398 <deg_to_str@@Base+0x1324>
   1a378:	adds	r1, r1, r8
   1a37c:	sub	r2, r4, #1
   1a380:	bcs	1a394 <deg_to_str@@Base+0x1320>
   1a384:	cmp	r9, r1
   1a388:	subhi	r4, r4, #2
   1a38c:	addhi	r1, r1, r8
   1a390:	bhi	1a398 <deg_to_str@@Base+0x1324>
   1a394:	mov	r4, r2
   1a398:	rsb	r9, r9, r1
   1a39c:	orr	r4, r4, r3, lsl #16
   1a3a0:	b	1a20c <deg_to_str@@Base+0x1198>
   1a3a4:	rsb	sl, r5, #32
   1a3a8:	lsl	r3, r2, r5
   1a3ac:	lsr	r0, r2, sl
   1a3b0:	lsr	r2, ip, sl
   1a3b4:	orr	r4, r0, r1, lsl r5
   1a3b8:	lsr	sl, r7, sl
   1a3bc:	mov	r0, r2
   1a3c0:	orr	sl, sl, ip, lsl r5
   1a3c4:	lsr	r9, r4, #16
   1a3c8:	str	r3, [sp, #4]
   1a3cc:	str	r2, [sp]
   1a3d0:	uxth	fp, r4
   1a3d4:	mov	r1, r9
   1a3d8:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a3dc:	ldr	r2, [sp]
   1a3e0:	mov	r1, r9
   1a3e4:	mov	r8, r0
   1a3e8:	mov	r0, r2
   1a3ec:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a3f0:	mul	r0, fp, r8
   1a3f4:	lsr	r2, sl, #16
   1a3f8:	orr	r1, r2, r1, lsl #16
   1a3fc:	cmp	r0, r1
   1a400:	bls	1a420 <deg_to_str@@Base+0x13ac>
   1a404:	adds	r1, r1, r4
   1a408:	sub	r2, r8, #1
   1a40c:	bcs	1a4d4 <deg_to_str@@Base+0x1460>
   1a410:	cmp	r0, r1
   1a414:	subhi	r8, r8, #2
   1a418:	addhi	r1, r1, r4
   1a41c:	bls	1a4d4 <deg_to_str@@Base+0x1460>
   1a420:	rsb	ip, r0, r1
   1a424:	mov	r1, r9
   1a428:	str	ip, [sp]
   1a42c:	mov	r0, ip
   1a430:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a434:	ldr	ip, [sp]
   1a438:	mov	r1, r9
   1a43c:	mov	r2, r0
   1a440:	mov	r0, ip
   1a444:	str	r2, [sp]
   1a448:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a44c:	ldr	r2, [sp]
   1a450:	uxth	ip, sl
   1a454:	mul	fp, fp, r2
   1a458:	orr	ip, ip, r1, lsl #16
   1a45c:	cmp	fp, ip
   1a460:	bls	1a480 <deg_to_str@@Base+0x140c>
   1a464:	adds	ip, ip, r4
   1a468:	sub	r1, r2, #1
   1a46c:	bcs	1a4cc <deg_to_str@@Base+0x1458>
   1a470:	cmp	fp, ip
   1a474:	subhi	r2, r2, #2
   1a478:	addhi	ip, ip, r4
   1a47c:	bls	1a4cc <deg_to_str@@Base+0x1458>
   1a480:	ldr	r0, [sp, #4]
   1a484:	orr	r1, r2, r8, lsl #16
   1a488:	rsb	fp, fp, ip
   1a48c:	umull	r2, r3, r1, r0
   1a490:	cmp	fp, r3
   1a494:	bcc	1a4b8 <deg_to_str@@Base+0x1444>
   1a498:	movne	r4, #0
   1a49c:	moveq	r4, #1
   1a4a0:	cmp	r2, r7, lsl r5
   1a4a4:	movls	r4, #0
   1a4a8:	andhi	r4, r4, #1
   1a4ac:	cmp	r4, #0
   1a4b0:	moveq	r3, r1
   1a4b4:	beq	1a17c <deg_to_str@@Base+0x1108>
   1a4b8:	sub	r3, r1, #1
   1a4bc:	mov	r4, #0
   1a4c0:	b	1a17c <deg_to_str@@Base+0x1108>
   1a4c4:	mov	fp, r3
   1a4c8:	b	1a258 <deg_to_str@@Base+0x11e4>
   1a4cc:	mov	r2, r1
   1a4d0:	b	1a480 <deg_to_str@@Base+0x140c>
   1a4d4:	mov	r8, r2
   1a4d8:	b	1a420 <deg_to_str@@Base+0x13ac>
   1a4dc:	mov	r3, r2
   1a4e0:	b	1a33c <deg_to_str@@Base+0x12c8>
   1a4e4:	cmp	r3, #0
   1a4e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4ec:	mov	r6, r0
   1a4f0:	sub	sp, sp, #12
   1a4f4:	mov	r5, r1
   1a4f8:	mov	r7, r0
   1a4fc:	mov	r4, r2
   1a500:	mov	r8, r1
   1a504:	bne	1a5e4 <deg_to_str@@Base+0x1570>
   1a508:	cmp	r2, r1
   1a50c:	bls	1a620 <deg_to_str@@Base+0x15ac>
   1a510:	clz	r3, r2
   1a514:	cmp	r3, #0
   1a518:	rsbne	r8, r3, #32
   1a51c:	lslne	r4, r2, r3
   1a520:	lsrne	r8, r0, r8
   1a524:	lslne	r7, r0, r3
   1a528:	orrne	r8, r8, r1, lsl r3
   1a52c:	lsr	r5, r4, #16
   1a530:	uxth	sl, r4
   1a534:	mov	r1, r5
   1a538:	mov	r0, r8
   1a53c:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a540:	mov	r1, r5
   1a544:	mov	r9, r0
   1a548:	mov	r0, r8
   1a54c:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a550:	mul	r0, sl, r9
   1a554:	lsr	r3, r7, #16
   1a558:	orr	r1, r3, r1, lsl #16
   1a55c:	cmp	r0, r1
   1a560:	bls	1a584 <deg_to_str@@Base+0x1510>
   1a564:	adds	r1, r1, r4
   1a568:	sub	r2, r9, #1
   1a56c:	bcs	1a580 <deg_to_str@@Base+0x150c>
   1a570:	cmp	r0, r1
   1a574:	subhi	r9, r9, #2
   1a578:	addhi	r1, r1, r4
   1a57c:	bhi	1a584 <deg_to_str@@Base+0x1510>
   1a580:	mov	r9, r2
   1a584:	rsb	r8, r0, r1
   1a588:	mov	r1, r5
   1a58c:	uxth	r7, r7
   1a590:	mov	r0, r8
   1a594:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a598:	mov	r1, r5
   1a59c:	mov	r6, r0
   1a5a0:	mov	r0, r8
   1a5a4:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a5a8:	mul	sl, sl, r6
   1a5ac:	orr	r1, r7, r1, lsl #16
   1a5b0:	cmp	sl, r1
   1a5b4:	bls	1a5d0 <deg_to_str@@Base+0x155c>
   1a5b8:	adds	r4, r1, r4
   1a5bc:	sub	r3, r6, #1
   1a5c0:	bcs	1a8cc <deg_to_str@@Base+0x1858>
   1a5c4:	cmp	sl, r4
   1a5c8:	subhi	r6, r6, #2
   1a5cc:	bls	1a8cc <deg_to_str@@Base+0x1858>
   1a5d0:	orr	r0, r6, r9, lsl #16
   1a5d4:	mov	r6, #0
   1a5d8:	mov	r1, r6
   1a5dc:	add	sp, sp, #12
   1a5e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a5e4:	cmp	r3, r1
   1a5e8:	movhi	r6, #0
   1a5ec:	movhi	r0, r6
   1a5f0:	bhi	1a5d8 <deg_to_str@@Base+0x1564>
   1a5f4:	clz	r7, r3
   1a5f8:	cmp	r7, #0
   1a5fc:	bne	1a6fc <deg_to_str@@Base+0x1688>
   1a600:	cmp	r3, r1
   1a604:	cmpcs	r2, r6
   1a608:	movhi	r6, #0
   1a60c:	movls	r6, #1
   1a610:	movls	r0, #1
   1a614:	movls	r6, r7
   1a618:	movhi	r0, r6
   1a61c:	b	1a5d8 <deg_to_str@@Base+0x1564>
   1a620:	cmp	r2, #0
   1a624:	bne	1a638 <deg_to_str@@Base+0x15c4>
   1a628:	mov	r1, r2
   1a62c:	mov	r0, #1
   1a630:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a634:	mov	r4, r0
   1a638:	clz	r3, r4
   1a63c:	cmp	r3, #0
   1a640:	bne	1a7f8 <deg_to_str@@Base+0x1784>
   1a644:	rsb	r5, r4, r5
   1a648:	lsr	r8, r4, #16
   1a64c:	uxth	sl, r4
   1a650:	mov	r6, #1
   1a654:	mov	r1, r8
   1a658:	mov	r0, r5
   1a65c:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a660:	mov	r1, r8
   1a664:	mov	r9, r0
   1a668:	mov	r0, r5
   1a66c:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a670:	mul	r0, sl, r9
   1a674:	lsr	r3, r7, #16
   1a678:	orr	r1, r3, r1, lsl #16
   1a67c:	cmp	r0, r1
   1a680:	bls	1a6a0 <deg_to_str@@Base+0x162c>
   1a684:	adds	r1, r1, r4
   1a688:	sub	r2, r9, #1
   1a68c:	bcs	1a8d4 <deg_to_str@@Base+0x1860>
   1a690:	cmp	r0, r1
   1a694:	subhi	r9, r9, #2
   1a698:	addhi	r1, r1, r4
   1a69c:	bls	1a8d4 <deg_to_str@@Base+0x1860>
   1a6a0:	rsb	fp, r0, r1
   1a6a4:	mov	r1, r8
   1a6a8:	uxth	r7, r7
   1a6ac:	mov	r0, fp
   1a6b0:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a6b4:	mov	r1, r8
   1a6b8:	mov	r5, r0
   1a6bc:	mov	r0, fp
   1a6c0:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a6c4:	mul	sl, sl, r5
   1a6c8:	orr	r1, r7, r1, lsl #16
   1a6cc:	cmp	sl, r1
   1a6d0:	bls	1a6ec <deg_to_str@@Base+0x1678>
   1a6d4:	adds	r4, r1, r4
   1a6d8:	sub	r3, r5, #1
   1a6dc:	bcs	1a8dc <deg_to_str@@Base+0x1868>
   1a6e0:	cmp	sl, r4
   1a6e4:	subhi	r5, r5, #2
   1a6e8:	bls	1a8dc <deg_to_str@@Base+0x1868>
   1a6ec:	orr	r0, r5, r9, lsl #16
   1a6f0:	mov	r1, r6
   1a6f4:	add	sp, sp, #12
   1a6f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a6fc:	rsb	r1, r7, #32
   1a700:	lsl	r0, r2, r7
   1a704:	lsr	r2, r2, r1
   1a708:	lsr	fp, r5, r1
   1a70c:	orr	r8, r2, r3, lsl r7
   1a710:	lsr	r1, r6, r1
   1a714:	str	r0, [sp, #4]
   1a718:	orr	r5, r1, r5, lsl r7
   1a71c:	lsr	r9, r8, #16
   1a720:	mov	r0, fp
   1a724:	uxth	sl, r8
   1a728:	mov	r1, r9
   1a72c:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a730:	mov	r1, r9
   1a734:	mov	r4, r0
   1a738:	mov	r0, fp
   1a73c:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a740:	mul	r0, sl, r4
   1a744:	lsr	ip, r5, #16
   1a748:	orr	r1, ip, r1, lsl #16
   1a74c:	cmp	r0, r1
   1a750:	bls	1a764 <deg_to_str@@Base+0x16f0>
   1a754:	adds	r1, r1, r8
   1a758:	sub	r2, r4, #1
   1a75c:	bcc	1a8f8 <deg_to_str@@Base+0x1884>
   1a760:	mov	r4, r2
   1a764:	rsb	ip, r0, r1
   1a768:	mov	r1, r9
   1a76c:	str	ip, [sp]
   1a770:	uxth	r5, r5
   1a774:	mov	r0, ip
   1a778:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a77c:	ldr	ip, [sp]
   1a780:	mov	r1, r9
   1a784:	mov	fp, r0
   1a788:	mov	r0, ip
   1a78c:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a790:	mul	sl, sl, fp
   1a794:	orr	r1, r5, r1, lsl #16
   1a798:	cmp	sl, r1
   1a79c:	bls	1a7b0 <deg_to_str@@Base+0x173c>
   1a7a0:	adds	r1, r1, r8
   1a7a4:	sub	r2, fp, #1
   1a7a8:	bcc	1a8e4 <deg_to_str@@Base+0x1870>
   1a7ac:	mov	fp, r2
   1a7b0:	ldr	r3, [sp, #4]
   1a7b4:	orr	r0, fp, r4, lsl #16
   1a7b8:	rsb	sl, sl, r1
   1a7bc:	umull	r4, r5, r0, r3
   1a7c0:	cmp	sl, r5
   1a7c4:	bcc	1a7e4 <deg_to_str@@Base+0x1770>
   1a7c8:	movne	r3, #0
   1a7cc:	moveq	r3, #1
   1a7d0:	cmp	r4, r6, lsl r7
   1a7d4:	movls	r6, #0
   1a7d8:	andhi	r6, r3, #1
   1a7dc:	cmp	r6, #0
   1a7e0:	beq	1a5d8 <deg_to_str@@Base+0x1564>
   1a7e4:	mov	r6, #0
   1a7e8:	sub	r0, r0, #1
   1a7ec:	mov	r1, r6
   1a7f0:	add	sp, sp, #12
   1a7f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a7f8:	lsl	r4, r4, r3
   1a7fc:	rsb	r9, r3, #32
   1a800:	lsr	r2, r5, r9
   1a804:	lsr	r9, r6, r9
   1a808:	lsr	r8, r4, #16
   1a80c:	orr	r9, r9, r5, lsl r3
   1a810:	mov	r0, r2
   1a814:	lsl	r7, r6, r3
   1a818:	mov	r1, r8
   1a81c:	str	r2, [sp]
   1a820:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a824:	ldr	r2, [sp]
   1a828:	mov	r1, r8
   1a82c:	uxth	sl, r4
   1a830:	mov	fp, r0
   1a834:	mov	r0, r2
   1a838:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a83c:	mul	r0, sl, fp
   1a840:	lsr	r3, r9, #16
   1a844:	orr	r1, r3, r1, lsl #16
   1a848:	cmp	r0, r1
   1a84c:	bls	1a86c <deg_to_str@@Base+0x17f8>
   1a850:	adds	r1, r1, r4
   1a854:	sub	r3, fp, #1
   1a858:	bcs	1a90c <deg_to_str@@Base+0x1898>
   1a85c:	cmp	r0, r1
   1a860:	subhi	fp, fp, #2
   1a864:	addhi	r1, r1, r4
   1a868:	bls	1a90c <deg_to_str@@Base+0x1898>
   1a86c:	rsb	r5, r0, r1
   1a870:	mov	r1, r8
   1a874:	uxth	r9, r9
   1a878:	mov	r0, r5
   1a87c:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1a880:	mov	r1, r8
   1a884:	mov	r6, r0
   1a888:	mov	r0, r5
   1a88c:	bl	1ab00 <deg_to_str@@Base+0x1a8c>
   1a890:	mul	r5, sl, r6
   1a894:	orr	r1, r9, r1, lsl #16
   1a898:	cmp	r5, r1
   1a89c:	bls	1a8c0 <deg_to_str@@Base+0x184c>
   1a8a0:	adds	r1, r1, r4
   1a8a4:	sub	r3, r6, #1
   1a8a8:	bcs	1a8bc <deg_to_str@@Base+0x1848>
   1a8ac:	cmp	r5, r1
   1a8b0:	subhi	r6, r6, #2
   1a8b4:	addhi	r1, r1, r4
   1a8b8:	bhi	1a8c0 <deg_to_str@@Base+0x184c>
   1a8bc:	mov	r6, r3
   1a8c0:	rsb	r5, r5, r1
   1a8c4:	orr	r6, r6, fp, lsl #16
   1a8c8:	b	1a654 <deg_to_str@@Base+0x15e0>
   1a8cc:	mov	r6, r3
   1a8d0:	b	1a5d0 <deg_to_str@@Base+0x155c>
   1a8d4:	mov	r9, r2
   1a8d8:	b	1a6a0 <deg_to_str@@Base+0x162c>
   1a8dc:	mov	r5, r3
   1a8e0:	b	1a6ec <deg_to_str@@Base+0x1678>
   1a8e4:	cmp	sl, r1
   1a8e8:	subhi	fp, fp, #2
   1a8ec:	addhi	r1, r1, r8
   1a8f0:	bhi	1a7b0 <deg_to_str@@Base+0x173c>
   1a8f4:	b	1a7ac <deg_to_str@@Base+0x1738>
   1a8f8:	cmp	r0, r1
   1a8fc:	subhi	r4, r4, #2
   1a900:	addhi	r1, r1, r8
   1a904:	bhi	1a764 <deg_to_str@@Base+0x16f0>
   1a908:	b	1a760 <deg_to_str@@Base+0x16ec>
   1a90c:	mov	fp, r3
   1a910:	b	1a86c <deg_to_str@@Base+0x17f8>
   1a914:	subs	r2, r1, #1
   1a918:	bxeq	lr
   1a91c:	bcc	1aaf4 <deg_to_str@@Base+0x1a80>
   1a920:	cmp	r0, r1
   1a924:	bls	1aad8 <deg_to_str@@Base+0x1a64>
   1a928:	tst	r1, r2
   1a92c:	beq	1aae4 <deg_to_str@@Base+0x1a70>
   1a930:	clz	r3, r0
   1a934:	clz	r2, r1
   1a938:	sub	r3, r2, r3
   1a93c:	rsbs	r3, r3, #31
   1a940:	addne	r3, r3, r3, lsl #1
   1a944:	mov	r2, #0
   1a948:	addne	pc, pc, r3, lsl #2
   1a94c:	nop	{0}
   1a950:	cmp	r0, r1, lsl #31
   1a954:	adc	r2, r2, r2
   1a958:	subcs	r0, r0, r1, lsl #31
   1a95c:	cmp	r0, r1, lsl #30
   1a960:	adc	r2, r2, r2
   1a964:	subcs	r0, r0, r1, lsl #30
   1a968:	cmp	r0, r1, lsl #29
   1a96c:	adc	r2, r2, r2
   1a970:	subcs	r0, r0, r1, lsl #29
   1a974:	cmp	r0, r1, lsl #28
   1a978:	adc	r2, r2, r2
   1a97c:	subcs	r0, r0, r1, lsl #28
   1a980:	cmp	r0, r1, lsl #27
   1a984:	adc	r2, r2, r2
   1a988:	subcs	r0, r0, r1, lsl #27
   1a98c:	cmp	r0, r1, lsl #26
   1a990:	adc	r2, r2, r2
   1a994:	subcs	r0, r0, r1, lsl #26
   1a998:	cmp	r0, r1, lsl #25
   1a99c:	adc	r2, r2, r2
   1a9a0:	subcs	r0, r0, r1, lsl #25
   1a9a4:	cmp	r0, r1, lsl #24
   1a9a8:	adc	r2, r2, r2
   1a9ac:	subcs	r0, r0, r1, lsl #24
   1a9b0:	cmp	r0, r1, lsl #23
   1a9b4:	adc	r2, r2, r2
   1a9b8:	subcs	r0, r0, r1, lsl #23
   1a9bc:	cmp	r0, r1, lsl #22
   1a9c0:	adc	r2, r2, r2
   1a9c4:	subcs	r0, r0, r1, lsl #22
   1a9c8:	cmp	r0, r1, lsl #21
   1a9cc:	adc	r2, r2, r2
   1a9d0:	subcs	r0, r0, r1, lsl #21
   1a9d4:	cmp	r0, r1, lsl #20
   1a9d8:	adc	r2, r2, r2
   1a9dc:	subcs	r0, r0, r1, lsl #20
   1a9e0:	cmp	r0, r1, lsl #19
   1a9e4:	adc	r2, r2, r2
   1a9e8:	subcs	r0, r0, r1, lsl #19
   1a9ec:	cmp	r0, r1, lsl #18
   1a9f0:	adc	r2, r2, r2
   1a9f4:	subcs	r0, r0, r1, lsl #18
   1a9f8:	cmp	r0, r1, lsl #17
   1a9fc:	adc	r2, r2, r2
   1aa00:	subcs	r0, r0, r1, lsl #17
   1aa04:	cmp	r0, r1, lsl #16
   1aa08:	adc	r2, r2, r2
   1aa0c:	subcs	r0, r0, r1, lsl #16
   1aa10:	cmp	r0, r1, lsl #15
   1aa14:	adc	r2, r2, r2
   1aa18:	subcs	r0, r0, r1, lsl #15
   1aa1c:	cmp	r0, r1, lsl #14
   1aa20:	adc	r2, r2, r2
   1aa24:	subcs	r0, r0, r1, lsl #14
   1aa28:	cmp	r0, r1, lsl #13
   1aa2c:	adc	r2, r2, r2
   1aa30:	subcs	r0, r0, r1, lsl #13
   1aa34:	cmp	r0, r1, lsl #12
   1aa38:	adc	r2, r2, r2
   1aa3c:	subcs	r0, r0, r1, lsl #12
   1aa40:	cmp	r0, r1, lsl #11
   1aa44:	adc	r2, r2, r2
   1aa48:	subcs	r0, r0, r1, lsl #11
   1aa4c:	cmp	r0, r1, lsl #10
   1aa50:	adc	r2, r2, r2
   1aa54:	subcs	r0, r0, r1, lsl #10
   1aa58:	cmp	r0, r1, lsl #9
   1aa5c:	adc	r2, r2, r2
   1aa60:	subcs	r0, r0, r1, lsl #9
   1aa64:	cmp	r0, r1, lsl #8
   1aa68:	adc	r2, r2, r2
   1aa6c:	subcs	r0, r0, r1, lsl #8
   1aa70:	cmp	r0, r1, lsl #7
   1aa74:	adc	r2, r2, r2
   1aa78:	subcs	r0, r0, r1, lsl #7
   1aa7c:	cmp	r0, r1, lsl #6
   1aa80:	adc	r2, r2, r2
   1aa84:	subcs	r0, r0, r1, lsl #6
   1aa88:	cmp	r0, r1, lsl #5
   1aa8c:	adc	r2, r2, r2
   1aa90:	subcs	r0, r0, r1, lsl #5
   1aa94:	cmp	r0, r1, lsl #4
   1aa98:	adc	r2, r2, r2
   1aa9c:	subcs	r0, r0, r1, lsl #4
   1aaa0:	cmp	r0, r1, lsl #3
   1aaa4:	adc	r2, r2, r2
   1aaa8:	subcs	r0, r0, r1, lsl #3
   1aaac:	cmp	r0, r1, lsl #2
   1aab0:	adc	r2, r2, r2
   1aab4:	subcs	r0, r0, r1, lsl #2
   1aab8:	cmp	r0, r1, lsl #1
   1aabc:	adc	r2, r2, r2
   1aac0:	subcs	r0, r0, r1, lsl #1
   1aac4:	cmp	r0, r1
   1aac8:	adc	r2, r2, r2
   1aacc:	subcs	r0, r0, r1
   1aad0:	mov	r0, r2
   1aad4:	bx	lr
   1aad8:	moveq	r0, #1
   1aadc:	movne	r0, #0
   1aae0:	bx	lr
   1aae4:	clz	r2, r1
   1aae8:	rsb	r2, r2, #31
   1aaec:	lsr	r0, r0, r2
   1aaf0:	bx	lr
   1aaf4:	cmp	r0, #0
   1aaf8:	mvnne	r0, #0
   1aafc:	b	19fd0 <deg_to_str@@Base+0xf5c>
   1ab00:	cmp	r1, #0
   1ab04:	beq	1aaf4 <deg_to_str@@Base+0x1a80>
   1ab08:	push	{r0, r1, lr}
   1ab0c:	bl	1a914 <deg_to_str@@Base+0x18a0>
   1ab10:	pop	{r1, r2, lr}
   1ab14:	mul	r3, r2, r0
   1ab18:	sub	r1, r1, r3
   1ab1c:	bx	lr

0001ab20 <__libc_csu_init@@Base>:
   1ab20:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1ab24:	mov	r7, r0
   1ab28:	ldr	r6, [pc, #76]	; 1ab7c <__libc_csu_init@@Base+0x5c>
   1ab2c:	mov	r8, r1
   1ab30:	ldr	r5, [pc, #72]	; 1ab80 <__libc_csu_init@@Base+0x60>
   1ab34:	mov	r9, r2
   1ab38:	add	r6, pc, r6
   1ab3c:	bl	12710 <_init@@Base>
   1ab40:	add	r5, pc, r5
   1ab44:	rsb	r6, r5, r6
   1ab48:	asrs	r6, r6, #2
   1ab4c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ab50:	sub	r5, r5, #4
   1ab54:	mov	r4, #0
   1ab58:	add	r4, r4, #1
   1ab5c:	ldr	r3, [r5, #4]!
   1ab60:	mov	r0, r7
   1ab64:	mov	r1, r8
   1ab68:	mov	r2, r9
   1ab6c:	blx	r3
   1ab70:	cmp	r4, r6
   1ab74:	bne	1ab58 <__libc_csu_init@@Base+0x38>
   1ab78:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ab7c:	andeq	r3, r1, r0, asr #6
   1ab80:	andeq	r3, r1, r4, lsr r3

0001ab84 <__libc_csu_fini@@Base>:
   1ab84:	bx	lr

Disassembly of section .fini:

0001ab88 <_fini@@Base>:
   1ab88:	push	{r3, lr}
   1ab8c:	pop	{r3, pc}
