
centos-preinstalled/mmal_vc_diag:     file format elf32-littlearm


Disassembly of section .init:

00010f08 <_init@@Base>:
   10f08:	push	{r3, lr}
   10f0c:	bl	11268 <_start@@Base+0x3c>
   10f10:	pop	{r3, pc}

Disassembly of section .plt:

00010f14 <raise@plt-0x14>:
   10f14:	push	{lr}		; (str lr, [sp, #-4]!)
   10f18:	ldr	lr, [pc, #4]	; 10f24 <_init@@Base+0x1c>
   10f1c:	add	lr, pc, lr
   10f20:	ldr	pc, [lr, #8]!
   10f24:	ldrdeq	r4, [r1], -ip

00010f28 <raise@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #20, 20	; 0x14000
   10f30:	ldr	pc, [ip, #220]!	; 0xdc

00010f34 <setitimer@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #20, 20	; 0x14000
   10f3c:	ldr	pc, [ip, #212]!	; 0xd4

00010f40 <strtol@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #20, 20	; 0x14000
   10f48:	ldr	pc, [ip, #204]!	; 0xcc

00010f4c <ReadVideoCoreMemoryBySymbol@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #20, 20	; 0x14000
   10f54:	ldr	pc, [ip, #196]!	; 0xc4

00010f58 <mmal_component_create@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #20, 20	; 0x14000
   10f60:	ldr	pc, [ip, #188]!	; 0xbc

00010f64 <mmal_status_to_string@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #20, 20	; 0x14000
   10f6c:	ldr	pc, [ip, #180]!	; 0xb4

00010f70 <mmal_vc_host_log@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #20, 20	; 0x14000
   10f78:	ldr	pc, [ip, #172]!	; 0xac

00010f7c <mmal_vc_use@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #20, 20	; 0x14000
   10f84:	ldr	pc, [ip, #164]!	; 0xa4

00010f88 <mmal_component_destroy@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #20, 20	; 0x14000
   10f90:	ldr	pc, [ip, #156]!	; 0x9c

00010f94 <__stack_chk_fail@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #20, 20	; 0x14000
   10f9c:	ldr	pc, [ip, #148]!	; 0x94

00010fa0 <mmal_vc_release@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #20, 20	; 0x14000
   10fa8:	ldr	pc, [ip, #140]!	; 0x8c

00010fac <mmal_vc_get_stats@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #20, 20	; 0x14000
   10fb4:	ldr	pc, [ip, #132]!	; 0x84

00010fb8 <strcasecmp@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #20, 20	; 0x14000
   10fc0:	ldr	pc, [ip, #124]!	; 0x7c

00010fc4 <perror@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #20, 20	; 0x14000
   10fcc:	ldr	pc, [ip, #116]!	; 0x74

00010fd0 <sigaction@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #20, 20	; 0x14000
   10fd8:	ldr	pc, [ip, #108]!	; 0x6c

00010fdc <fwrite@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #20, 20	; 0x14000
   10fe4:	ldr	pc, [ip, #100]!	; 0x64

00010fe8 <usleep@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #20, 20	; 0x14000
   10ff0:	ldr	pc, [ip, #92]!	; 0x5c

00010ff4 <mmal_vc_get_version@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #20, 20	; 0x14000
   10ffc:	ldr	pc, [ip, #84]!	; 0x54

00011000 <mmal_vc_compact@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #20, 20	; 0x14000
   11008:	ldr	pc, [ip, #76]!	; 0x4c

0001100c <puts@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #20, 20	; 0x14000
   11014:	ldr	pc, [ip, #68]!	; 0x44

00011018 <__libc_start_main@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #20, 20	; 0x14000
   11020:	ldr	pc, [ip, #60]!	; 0x3c

00011024 <OpenVideoCoreMemory@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #20, 20	; 0x14000
   1102c:	ldr	pc, [ip, #52]!	; 0x34

00011030 <__gmon_start__@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #20, 20	; 0x14000
   11038:	ldr	pc, [ip, #44]!	; 0x2c

0001103c <kill@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #20, 20	; 0x14000
   11044:	ldr	pc, [ip, #36]!	; 0x24

00011048 <getpid@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #20, 20	; 0x14000
   11050:	ldr	pc, [ip, #28]!

00011054 <exit@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #20, 20	; 0x14000
   1105c:	ldr	pc, [ip, #20]!

00011060 <ReadVideoCoreMemory@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #20, 20	; 0x14000
   11068:	ldr	pc, [ip, #12]!

0001106c <LookupVideoCoreSymbol@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #20, 20	; 0x14000
   11074:	ldr	pc, [ip, #4]!

00011078 <snprintf@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #77824	; 0x13000
   11080:	ldr	pc, [ip, #4092]!	; 0xffc

00011084 <memset@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #77824	; 0x13000
   1108c:	ldr	pc, [ip, #4084]!	; 0xff4

00011090 <mmal_vc_get_core_stats@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #77824	; 0x13000
   11098:	ldr	pc, [ip, #4076]!	; 0xfec

0001109c <__printf_chk@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #77824	; 0x13000
   110a4:	ldr	pc, [ip, #4068]!	; 0xfe4

000110a8 <mmal_msgname@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #77824	; 0x13000
   110b0:	ldr	pc, [ip, #4060]!	; 0xfdc

000110b4 <__fprintf_chk@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #77824	; 0x13000
   110bc:	ldr	pc, [ip, #4052]!	; 0xfd4

000110c0 <vcos_pthreads_logging_assert@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #77824	; 0x13000
   110c8:	ldr	pc, [ip, #4044]!	; 0xfcc

000110cc <mmal_vc_deinit@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #77824	; 0x13000
   110d4:	ldr	pc, [ip, #4036]!	; 0xfc4

000110d8 <sigemptyset@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #77824	; 0x13000
   110e0:	ldr	pc, [ip, #4028]!	; 0xfbc

000110e4 <strrchr@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #77824	; 0x13000
   110ec:	ldr	pc, [ip, #4020]!	; 0xfb4

000110f0 <WriteVideoCoreMemory@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #77824	; 0x13000
   110f8:	ldr	pc, [ip, #4012]!	; 0xfac

000110fc <mmal_vc_init@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #77824	; 0x13000
   11104:	ldr	pc, [ip, #4004]!	; 0xfa4

00011108 <mmal_port_parameter_get@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #77824	; 0x13000
   11110:	ldr	pc, [ip, #3996]!	; 0xf9c

00011114 <abort@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #77824	; 0x13000
   1111c:	ldr	pc, [ip, #3988]!	; 0xf94

00011120 <CloseVideoCoreMemory@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #77824	; 0x13000
   11128:	ldr	pc, [ip, #3980]!	; 0xf8c

0001112c <__snprintf_chk@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #77824	; 0x13000
   11134:	ldr	pc, [ip, #3972]!	; 0xf84

Disassembly of section .text:

00011138 <main@@Base>:
   11138:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1113c:	cmp	r0, #1
   11140:	ldr	r7, [pc, #204]	; 11214 <main@@Base+0xdc>
   11144:	mov	r9, r0
   11148:	mov	r8, r1
   1114c:	add	r7, pc, r7
   11150:	ble	11208 <main@@Base+0xd0>
   11154:	ldr	r5, [pc, #188]	; 11218 <main@@Base+0xe0>
   11158:	mov	r4, #0
   1115c:	ldr	r0, [pc, #184]	; 1121c <main@@Base+0xe4>
   11160:	ldr	r6, [r1, #4]
   11164:	add	r5, pc, r5
   11168:	add	r0, pc, r0
   1116c:	b	11180 <main@@Base+0x48>
   11170:	ldr	r0, [r5, #16]!
   11174:	add	r4, r4, #1
   11178:	cmp	r0, #0
   1117c:	beq	111bc <main@@Base+0x84>
   11180:	mov	r1, r6
   11184:	bl	10fb8 <strcasecmp@plt>
   11188:	cmp	r0, #0
   1118c:	bne	11170 <main@@Base+0x38>
   11190:	ldr	r3, [pc, #136]	; 11220 <main@@Base+0xe8>
   11194:	add	r3, pc, r3
   11198:	add	r4, r3, r4, lsl #4
   1119c:	ldr	r3, [r4, #12]
   111a0:	tst	r3, #1
   111a4:	bne	111e4 <main@@Base+0xac>
   111a8:	ldr	r3, [r4, #4]
   111ac:	mov	r0, r9
   111b0:	mov	r1, r8
   111b4:	blx	r3
   111b8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   111bc:	ldr	r0, [pc, #96]	; 11224 <main@@Base+0xec>
   111c0:	mov	r3, r6
   111c4:	ldr	r2, [pc, #92]	; 11228 <main@@Base+0xf0>
   111c8:	mov	r1, #1
   111cc:	ldr	r0, [r7, r0]
   111d0:	add	r2, pc, r2
   111d4:	ldr	r0, [r0]
   111d8:	bl	110b4 <__fprintf_chk@plt>
   111dc:	mvn	r0, #0
   111e0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   111e4:	bl	12018 <_start@@Base+0xdec>
   111e8:	ldr	r3, [r4, #4]
   111ec:	mov	r1, r8
   111f0:	mov	r0, r9
   111f4:	blx	r3
   111f8:	mov	r4, r0
   111fc:	bl	110cc <mmal_vc_deinit@plt>
   11200:	mov	r0, r4
   11204:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11208:	bl	116d4 <_start@@Base+0x4a8>
   1120c:	mov	r0, #1
   11210:	bl	11054 <exit@plt>
   11214:	andeq	r3, r1, ip, lsr #29
   11218:	andeq	r3, r1, r4, lsr fp
   1121c:	andeq	r1, r0, r4, lsr #31
   11220:	andeq	r3, r1, r4, lsl #22
   11224:	andeq	r0, r0, r0, asr #1
   11228:	ldrdeq	r2, [r0], -r0

0001122c <_start@@Base>:
   1122c:	mov	fp, #0
   11230:	mov	lr, #0
   11234:	pop	{r1}		; (ldr r1, [sp], #4)
   11238:	mov	r2, sp
   1123c:	push	{r2}		; (str r2, [sp, #-4]!)
   11240:	push	{r0}		; (str r0, [sp, #-4]!)
   11244:	ldr	ip, [pc, #16]	; 1125c <_start@@Base+0x30>
   11248:	push	{ip}		; (str ip, [sp, #-4]!)
   1124c:	ldr	r0, [pc, #12]	; 11260 <_start@@Base+0x34>
   11250:	ldr	r3, [pc, #12]	; 11264 <_start@@Base+0x38>
   11254:	bl	11018 <__libc_start_main@plt>
   11258:	bl	11114 <abort@plt>
   1125c:	andeq	r3, r1, r0, ror #1
   11260:	andeq	r1, r1, r8, lsr r1
   11264:	andeq	r3, r1, ip, ror r0
   11268:	ldr	r3, [pc, #20]	; 11284 <_start@@Base+0x58>
   1126c:	ldr	r2, [pc, #20]	; 11288 <_start@@Base+0x5c>
   11270:	add	r3, pc, r3
   11274:	ldr	r2, [r3, r2]
   11278:	cmp	r2, #0
   1127c:	bxeq	lr
   11280:	b	11030 <__gmon_start__@plt>
   11284:	andeq	r3, r1, r8, lsl #27
   11288:	andeq	r0, r0, r4, asr #1
   1128c:	push	{r3, lr}
   11290:	movw	r0, #20692	; 0x50d4
   11294:	ldr	r3, [pc, #36]	; 112c0 <_start@@Base+0x94>
   11298:	movt	r0, #2
   1129c:	rsb	r3, r0, r3
   112a0:	cmp	r3, #6
   112a4:	popls	{r3, pc}
   112a8:	movw	r3, #0
   112ac:	movt	r3, #0
   112b0:	cmp	r3, #0
   112b4:	popeq	{r3, pc}
   112b8:	blx	r3
   112bc:	pop	{r3, pc}
   112c0:	ldrdeq	r5, [r2], -r7
   112c4:	push	{r3, lr}
   112c8:	movw	r0, #20692	; 0x50d4
   112cc:	movw	r3, #20692	; 0x50d4
   112d0:	movt	r0, #2
   112d4:	movt	r3, #2
   112d8:	rsb	r3, r0, r3
   112dc:	asr	r3, r3, #2
   112e0:	add	r3, r3, r3, lsr #31
   112e4:	asrs	r1, r3, #1
   112e8:	popeq	{r3, pc}
   112ec:	movw	r2, #0
   112f0:	movt	r2, #0
   112f4:	cmp	r2, #0
   112f8:	popeq	{r3, pc}
   112fc:	blx	r2
   11300:	pop	{r3, pc}
   11304:	push	{r4, lr}
   11308:	movw	r4, #20692	; 0x50d4
   1130c:	movt	r4, #2
   11310:	ldrb	r3, [r4]
   11314:	cmp	r3, #0
   11318:	popne	{r4, pc}
   1131c:	bl	1128c <_start@@Base+0x60>
   11320:	mov	r3, #1
   11324:	strb	r3, [r4]
   11328:	pop	{r4, pc}
   1132c:	movw	r0, #19612	; 0x4c9c
   11330:	movt	r0, #2
   11334:	push	{r3, lr}
   11338:	ldr	r3, [r0]
   1133c:	cmp	r3, #0
   11340:	beq	11358 <_start@@Base+0x12c>
   11344:	movw	r3, #0
   11348:	movt	r3, #0
   1134c:	cmp	r3, #0
   11350:	beq	11358 <_start@@Base+0x12c>
   11354:	blx	r3
   11358:	pop	{r3, lr}
   1135c:	b	112c4 <_start@@Base+0x98>
   11360:	cmp	r0, #2
   11364:	push	{r3, lr}
   11368:	ble	11374 <_start@@Base+0x148>
   1136c:	ldr	r0, [r1, #8]
   11370:	bl	10f70 <mmal_vc_host_log@plt>
   11374:	mov	r0, #0
   11378:	pop	{r3, pc}
   1137c:	push	{r3, r4, r5, lr}
   11380:	ldr	r2, [pc, #52]	; 113bc <_start@@Base+0x190>
   11384:	ldr	r4, [pc, #52]	; 113c0 <_start@@Base+0x194>
   11388:	ldr	r5, [pc, #52]	; 113c4 <_start@@Base+0x198>
   1138c:	add	r2, pc, r2
   11390:	add	r4, pc, r4
   11394:	add	r5, pc, r5
   11398:	ldr	r3, [r4, #8]
   1139c:	mov	r0, #1
   113a0:	mov	r1, r5
   113a4:	bl	1109c <__printf_chk@plt>
   113a8:	ldr	r2, [r4, #16]!
   113ac:	cmp	r2, #0
   113b0:	bne	11398 <_start@@Base+0x16c>
   113b4:	mov	r0, r2
   113b8:	pop	{r3, r4, r5, pc}
   113bc:	andeq	r1, r0, r0, lsl #27
   113c0:	andeq	r3, r1, r8, lsl #18
   113c4:	andeq	r1, r0, r0, lsl #27
   113c8:	push	{r4, lr}
   113cc:	mov	r0, #1
   113d0:	ldr	r4, [pc, #32]	; 113f8 <_start@@Base+0x1cc>
   113d4:	ldr	r1, [pc, #32]	; 113fc <_start@@Base+0x1d0>
   113d8:	add	r4, pc, r4
   113dc:	add	r1, pc, r1
   113e0:	ldr	r2, [r4]
   113e4:	bl	1109c <__printf_chk@plt>
   113e8:	bl	11048 <getpid@plt>
   113ec:	ldr	r1, [r4]
   113f0:	pop	{r4, lr}
   113f4:	b	1103c <kill@plt>
   113f8:	strdeq	r3, [r1], -r8
   113fc:	andeq	r1, r0, r4, asr #26
   11400:	ldr	r3, [pc, #280]	; 11520 <_start@@Base+0x2f4>
   11404:	cmp	r0, #2
   11408:	ldr	r2, [pc, #276]	; 11524 <_start@@Base+0x2f8>
   1140c:	add	r3, pc, r3
   11410:	push	{r4, lr}
   11414:	sub	sp, sp, #8
   11418:	ldr	r4, [r3, r2]
   1141c:	ldr	r3, [r4]
   11420:	str	r3, [sp, #4]
   11424:	ble	1150c <_start@@Base+0x2e0>
   11428:	ldr	r2, [r1, #8]
   1142c:	ldrb	r3, [r2]
   11430:	cmp	r3, #97	; 0x61
   11434:	bne	11480 <_start@@Base+0x254>
   11438:	ldrb	r3, [r2, #1]
   1143c:	cmp	r3, #0
   11440:	bne	11494 <_start@@Base+0x268>
   11444:	mov	r1, sp
   11448:	mov	r0, #4
   1144c:	bl	11000 <mmal_vc_compact@plt>
   11450:	ldr	r1, [pc, #208]	; 11528 <_start@@Base+0x2fc>
   11454:	mov	r0, #1
   11458:	ldr	r2, [sp]
   1145c:	add	r1, pc, r1
   11460:	bl	1109c <__printf_chk@plt>
   11464:	ldr	r2, [sp, #4]
   11468:	mov	r0, #0
   1146c:	ldr	r3, [r4]
   11470:	cmp	r2, r3
   11474:	bne	11508 <_start@@Base+0x2dc>
   11478:	add	sp, sp, #8
   1147c:	pop	{r4, pc}
   11480:	cmp	r3, #100	; 0x64
   11484:	bne	114d0 <_start@@Base+0x2a4>
   11488:	ldrb	r3, [r2, #1]
   1148c:	cmp	r3, #0
   11490:	beq	114ac <_start@@Base+0x280>
   11494:	ldr	r1, [pc, #144]	; 1152c <_start@@Base+0x300>
   11498:	mov	r0, #1
   1149c:	add	r1, pc, r1
   114a0:	bl	1109c <__printf_chk@plt>
   114a4:	mov	r0, #1
   114a8:	bl	11054 <exit@plt>
   114ac:	mov	r1, sp
   114b0:	mov	r0, #2
   114b4:	bl	11000 <mmal_vc_compact@plt>
   114b8:	ldr	r1, [pc, #112]	; 11530 <_start@@Base+0x304>
   114bc:	ldr	r2, [sp]
   114c0:	mov	r0, #1
   114c4:	add	r1, pc, r1
   114c8:	bl	1109c <__printf_chk@plt>
   114cc:	b	11464 <_start@@Base+0x238>
   114d0:	cmp	r3, #110	; 0x6e
   114d4:	bne	11494 <_start@@Base+0x268>
   114d8:	ldrb	r3, [r2, #1]
   114dc:	cmp	r3, #0
   114e0:	bne	11494 <_start@@Base+0x268>
   114e4:	mov	r1, sp
   114e8:	mov	r0, #1
   114ec:	bl	11000 <mmal_vc_compact@plt>
   114f0:	ldr	r1, [pc, #60]	; 11534 <_start@@Base+0x308>
   114f4:	ldr	r2, [sp]
   114f8:	mov	r0, #1
   114fc:	add	r1, pc, r1
   11500:	bl	1109c <__printf_chk@plt>
   11504:	b	11464 <_start@@Base+0x238>
   11508:	bl	10f94 <__stack_chk_fail@plt>
   1150c:	ldr	r0, [pc, #36]	; 11538 <_start@@Base+0x30c>
   11510:	add	r0, pc, r0
   11514:	bl	1100c <puts@plt>
   11518:	mov	r0, #1
   1151c:	bl	11054 <exit@plt>
   11520:	andeq	r3, r1, ip, ror #23
   11524:	strheq	r0, [r0], -ip
   11528:	ldrdeq	r1, [r0], -r8
   1152c:	andeq	r1, r0, r4, asr #26
   11530:	andeq	r1, r0, ip, lsr #25
   11534:	andeq	r1, r0, ip, lsr #25
   11538:	strdeq	r1, [r0], -r8
   1153c:	push	{lr}		; (str lr, [sp, #-4]!)
   11540:	sub	sp, sp, #12
   11544:	ldr	ip, [r0, #8]
   11548:	sub	r3, ip, #3
   1154c:	cmp	r3, #3
   11550:	addls	pc, pc, r3, lsl #2
   11554:	b	115d8 <_start@@Base+0x3ac>
   11558:	b	115bc <_start@@Base+0x390>
   1155c:	b	115a0 <_start@@Base+0x374>
   11560:	b	11584 <_start@@Base+0x358>
   11564:	b	11568 <_start@@Base+0x33c>
   11568:	mov	r0, r1
   1156c:	mov	r1, r2
   11570:	ldr	r2, [pc, #140]	; 11604 <_start@@Base+0x3d8>
   11574:	add	r2, pc, r2
   11578:	add	sp, sp, #12
   1157c:	pop	{lr}		; (ldr lr, [sp], #4)
   11580:	b	11078 <snprintf@plt>
   11584:	mov	r0, r1
   11588:	mov	r1, r2
   1158c:	ldr	r2, [pc, #116]	; 11608 <_start@@Base+0x3dc>
   11590:	add	r2, pc, r2
   11594:	add	sp, sp, #12
   11598:	pop	{lr}		; (ldr lr, [sp], #4)
   1159c:	b	11078 <snprintf@plt>
   115a0:	mov	r0, r1
   115a4:	mov	r1, r2
   115a8:	ldr	r2, [pc, #92]	; 1160c <_start@@Base+0x3e0>
   115ac:	add	r2, pc, r2
   115b0:	add	sp, sp, #12
   115b4:	pop	{lr}		; (ldr lr, [sp], #4)
   115b8:	b	11078 <snprintf@plt>
   115bc:	mov	r0, r1
   115c0:	mov	r1, r2
   115c4:	ldr	r2, [pc, #68]	; 11610 <_start@@Base+0x3e4>
   115c8:	add	r2, pc, r2
   115cc:	add	sp, sp, #12
   115d0:	pop	{lr}		; (ldr lr, [sp], #4)
   115d4:	b	11078 <snprintf@plt>
   115d8:	ldr	lr, [pc, #52]	; 11614 <_start@@Base+0x3e8>
   115dc:	mov	r0, r1
   115e0:	str	ip, [sp, #4]
   115e4:	mov	r1, r2
   115e8:	add	lr, pc, lr
   115ec:	mov	r2, #1
   115f0:	mvn	r3, #0
   115f4:	str	lr, [sp]
   115f8:	bl	1112c <__snprintf_chk@plt>
   115fc:	add	sp, sp, #12
   11600:	pop	{pc}		; (ldr pc, [sp], #4)
   11604:	ldrdeq	r1, [r0], -ip
   11608:	ldrdeq	r1, [r0], -r4
   1160c:	andeq	r1, r0, r0, ror #25
   11610:			; <UNDEFINED> instruction: 0x00001cb0
   11614:			; <UNDEFINED> instruction: 0x00001cb8
   11618:	ldr	r3, [r0, #4]
   1161c:	mov	ip, r0
   11620:	push	{lr}		; (str lr, [sp, #-4]!)
   11624:	cmp	r3, #5
   11628:	sub	sp, sp, #20
   1162c:	beq	1166c <_start@@Base+0x440>
   11630:	ldr	r3, [pc, #64]	; 11678 <_start@@Base+0x44c>
   11634:	add	r3, pc, r3
   11638:	ldr	lr, [pc, #60]	; 1167c <_start@@Base+0x450>
   1163c:	mov	r0, r1
   11640:	str	r3, [sp, #4]
   11644:	mov	r1, r2
   11648:	add	lr, pc, lr
   1164c:	str	lr, [sp]
   11650:	ldr	ip, [ip, #8]
   11654:	mov	r2, #1
   11658:	mvn	r3, #0
   1165c:	str	ip, [sp, #8]
   11660:	bl	1112c <__snprintf_chk@plt>
   11664:	add	sp, sp, #20
   11668:	pop	{pc}		; (ldr pc, [sp], #4)
   1166c:	ldr	r3, [pc, #12]	; 11680 <_start@@Base+0x454>
   11670:	add	r3, pc, r3
   11674:	b	11638 <_start@@Base+0x40c>
   11678:	andeq	r2, r0, r8, lsl #11
   1167c:	andeq	r1, r0, r0, ror ip
   11680:	muleq	r0, r8, r5
   11684:	push	{r4, r5, r6, lr}
   11688:	sub	sp, sp, #16
   1168c:	ldr	r4, [r0, #12]
   11690:	mov	r5, r1
   11694:	mov	r6, r2
   11698:	mov	r0, r4
   1169c:	bl	110a8 <mmal_msgname@plt>
   116a0:	ldr	ip, [pc, #40]	; 116d0 <_start@@Base+0x4a4>
   116a4:	str	r4, [sp, #4]
   116a8:	mov	r1, r6
   116ac:	add	ip, pc, ip
   116b0:	mov	r2, #1
   116b4:	mvn	r3, #0
   116b8:	str	ip, [sp]
   116bc:	str	r0, [sp, #8]
   116c0:	mov	r0, r5
   116c4:	bl	1112c <__snprintf_chk@plt>
   116c8:	add	sp, sp, #16
   116cc:	pop	{r4, r5, r6, pc}
   116d0:	andeq	r1, r0, ip, lsl ip
   116d4:	push	{r4, lr}
   116d8:	ldr	r4, [r1]
   116dc:	mov	r1, #47	; 0x2f
   116e0:	mov	r0, r4
   116e4:	bl	110e4 <strrchr@plt>
   116e8:	ldr	r1, [pc, #48]	; 11720 <_start@@Base+0x4f4>
   116ec:	add	r1, pc, r1
   116f0:	cmp	r0, #0
   116f4:	addne	r4, r0, #1
   116f8:	mov	r0, #1
   116fc:	mov	r2, r4
   11700:	bl	1109c <__printf_chk@plt>
   11704:	ldr	r1, [pc, #24]	; 11724 <_start@@Base+0x4f8>
   11708:	mov	r2, r4
   1170c:	mov	r0, #1
   11710:	add	r1, pc, r1
   11714:	bl	1109c <__printf_chk@plt>
   11718:	mov	r0, #0
   1171c:	pop	{r4, pc}
   11720:	andeq	r1, r0, ip, ror #23
   11724:	andeq	r1, r0, r4, ror #23
   11728:	push	{r4, r5, r6, r7, r8, lr}
   1172c:	sub	sp, sp, #16384	; 0x4000
   11730:	ldr	r7, [pc, #472]	; 11910 <_start@@Base+0x6e4>
   11734:	sub	sp, sp, #24
   11738:	ldr	r3, [pc, #468]	; 11914 <_start@@Base+0x6e8>
   1173c:	add	r1, sp, #16384	; 0x4000
   11740:	add	r7, pc, r7
   11744:	add	r4, sp, #24
   11748:	sub	r0, r4, #24
   1174c:	ldr	r6, [r7, r3]
   11750:	ldr	r3, [r6]
   11754:	str	r3, [r1, #20]
   11758:	bl	11024 <OpenVideoCoreMemory@plt>
   1175c:	subs	r3, r0, #0
   11760:	blt	118e8 <_start@@Base+0x6bc>
   11764:	add	r3, sp, #16384	; 0x4000
   11768:	movw	r5, #49128	; 0xbfe8
   1176c:	add	r3, r3, #24
   11770:	movt	r5, #65535	; 0xffff
   11774:	ldr	r1, [pc, #412]	; 11918 <_start@@Base+0x6ec>
   11778:	sub	r2, r4, #20
   1177c:	ldr	r0, [r3, r5]
   11780:	mov	r3, #4
   11784:	add	r1, pc, r1
   11788:	bl	10f4c <ReadVideoCoreMemoryBySymbol@plt>
   1178c:	cmp	r0, #0
   11790:	beq	1187c <_start@@Base+0x650>
   11794:	add	ip, sp, #16384	; 0x4000
   11798:	sub	r4, r4, #16
   1179c:	add	ip, ip, #24
   117a0:	movw	r8, #49132	; 0xbfec
   117a4:	movt	r8, #65535	; 0xffff
   117a8:	mov	r1, r4
   117ac:	ldr	r0, [ip, r5]
   117b0:	movw	r3, #16396	; 0x400c
   117b4:	ldr	r2, [ip, r8]
   117b8:	bl	11060 <ReadVideoCoreMemory@plt>
   117bc:	cmp	r0, #0
   117c0:	beq	118bc <_start@@Base+0x690>
   117c4:	add	ip, sp, #16384	; 0x4000
   117c8:	movw	r3, #49136	; 0xbff0
   117cc:	add	ip, ip, #24
   117d0:	movt	r3, #65535	; 0xffff
   117d4:	ldr	r7, [pc, #320]	; 1191c <_start@@Base+0x6f0>
   117d8:	add	r5, r4, #16384	; 0x4000
   117dc:	ldrb	r3, [ip, r3]
   117e0:	add	r7, pc, r7
   117e4:	uxtb	r2, r3
   117e8:	cmp	r2, #0
   117ec:	bne	11864 <_start@@Base+0x638>
   117f0:	cmp	r4, r5
   117f4:	bcs	11828 <_start@@Base+0x5fc>
   117f8:	ldrb	r2, [r4]
   117fc:	cmp	r2, #0
   11800:	bne	117e8 <_start@@Base+0x5bc>
   11804:	add	r3, r4, #1
   11808:	b	1181c <_start@@Base+0x5f0>
   1180c:	ldrb	r2, [r3]
   11810:	add	r3, r3, #1
   11814:	cmp	r2, #0
   11818:	bne	117e8 <_start@@Base+0x5bc>
   1181c:	cmp	r3, r5
   11820:	mov	r4, r3
   11824:	bne	1180c <_start@@Base+0x5e0>
   11828:	add	ip, sp, #16384	; 0x4000
   1182c:	movw	r3, #49128	; 0xbfe8
   11830:	add	ip, ip, #24
   11834:	movt	r3, #65535	; 0xffff
   11838:	ldr	r0, [ip, r3]
   1183c:	bl	11120 <CloseVideoCoreMemory@plt>
   11840:	mov	r0, #0
   11844:	add	r3, sp, #16384	; 0x4000
   11848:	ldr	r2, [r3, #20]
   1184c:	ldr	r3, [r6]
   11850:	cmp	r2, r3
   11854:	bne	1190c <_start@@Base+0x6e0>
   11858:	add	sp, sp, #16384	; 0x4000
   1185c:	add	sp, sp, #24
   11860:	pop	{r4, r5, r6, r7, r8, pc}
   11864:	mov	r2, r4
   11868:	mov	r0, #1
   1186c:	mov	r1, r7
   11870:	bl	1109c <__printf_chk@plt>
   11874:	add	r4, r4, r0
   11878:	b	117f0 <_start@@Base+0x5c4>
   1187c:	ldr	r3, [pc, #156]	; 11920 <_start@@Base+0x6f4>
   11880:	mov	r1, #1
   11884:	ldr	r0, [pc, #152]	; 11924 <_start@@Base+0x6f8>
   11888:	mov	r2, #37	; 0x25
   1188c:	ldr	r3, [r7, r3]
   11890:	add	r0, pc, r0
   11894:	ldr	r3, [r3]
   11898:	bl	10fdc <fwrite@plt>
   1189c:	add	r1, sp, #16384	; 0x4000
   118a0:	movw	r3, #49128	; 0xbfe8
   118a4:	add	r1, r1, #24
   118a8:	movt	r3, #65535	; 0xffff
   118ac:	ldr	r0, [r1, r3]
   118b0:	bl	11120 <CloseVideoCoreMemory@plt>
   118b4:	mvn	r0, #0
   118b8:	b	11844 <_start@@Base+0x618>
   118bc:	ldr	r0, [pc, #92]	; 11920 <_start@@Base+0x6f4>
   118c0:	add	r2, sp, #16384	; 0x4000
   118c4:	add	r2, r2, #24
   118c8:	mov	r1, #1
   118cc:	ldr	r0, [r7, r0]
   118d0:	ldr	r3, [r2, r8]
   118d4:	ldr	r2, [pc, #76]	; 11928 <_start@@Base+0x6fc>
   118d8:	ldr	r0, [r0]
   118dc:	add	r2, pc, r2
   118e0:	bl	110b4 <__fprintf_chk@plt>
   118e4:	b	1189c <_start@@Base+0x670>
   118e8:	ldr	r0, [pc, #48]	; 11920 <_start@@Base+0x6f4>
   118ec:	mov	r1, #1
   118f0:	ldr	r2, [pc, #52]	; 1192c <_start@@Base+0x700>
   118f4:	ldr	r0, [r7, r0]
   118f8:	add	r2, pc, r2
   118fc:	ldr	r0, [r0]
   11900:	bl	110b4 <__fprintf_chk@plt>
   11904:	mvn	r0, #0
   11908:	b	11844 <_start@@Base+0x618>
   1190c:	bl	10f94 <__stack_chk_fail@plt>
   11910:			; <UNDEFINED> instruction: 0x000138b8
   11914:	strheq	r0, [r0], -ip
   11918:	andeq	r1, r0, r4, asr #23
   1191c:			; <UNDEFINED> instruction: 0x00001bbc
   11920:	andeq	r0, r0, r0, asr #1
   11924:	andeq	r1, r0, r8, asr #21
   11928:	andeq	r1, r0, r4, lsr #21
   1192c:	andeq	r1, r0, r8, lsr #20
   11930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11934:	sub	sp, sp, #180	; 0xb4
   11938:	ldr	r6, [pc, #496]	; 11b30 <_start@@Base+0x904>
   1193c:	add	r1, sp, #16
   11940:	ldr	r3, [pc, #492]	; 11b34 <_start@@Base+0x908>
   11944:	add	r6, pc, r6
   11948:	ldr	r0, [pc, #488]	; 11b38 <_start@@Base+0x90c>
   1194c:	ldr	r8, [r6, r3]
   11950:	add	r0, pc, r0
   11954:	ldr	r3, [r8]
   11958:	str	r3, [sp, #172]	; 0xac
   1195c:	bl	10f58 <mmal_component_create@plt>
   11960:	cmp	r0, #0
   11964:	bne	11b08 <_start@@Base+0x8dc>
   11968:	ldr	r0, [sp, #16]
   1196c:	add	r4, sp, #20
   11970:	mov	r2, #152	; 0x98
   11974:	mov	r3, #28
   11978:	mov	r1, r4
   1197c:	movt	r3, #1
   11980:	ldr	r0, [r0, #16]
   11984:	str	r3, [sp, #20]
   11988:	str	r2, [sp, #24]
   1198c:	bl	11108 <mmal_port_parameter_get@plt>
   11990:	subs	r5, r0, #0
   11994:	bne	11ad8 <_start@@Base+0x8ac>
   11998:	ldr	r1, [pc, #412]	; 11b3c <_start@@Base+0x910>
   1199c:	mov	r0, #1
   119a0:	ldr	r2, [sp, #28]
   119a4:	add	r1, pc, r1
   119a8:	bl	1109c <__printf_chk@plt>
   119ac:	ldr	r1, [pc, #396]	; 11b40 <_start@@Base+0x914>
   119b0:	mov	r0, #1
   119b4:	ldr	r2, [sp, #32]
   119b8:	add	r1, pc, r1
   119bc:	bl	1109c <__printf_chk@plt>
   119c0:	ldr	r3, [sp, #28]
   119c4:	cmp	r3, #0
   119c8:	beq	11a30 <_start@@Base+0x804>
   119cc:	ldr	r9, [pc, #368]	; 11b44 <_start@@Base+0x918>
   119d0:	ldr	r7, [pc, #368]	; 11b48 <_start@@Base+0x91c>
   119d4:	ldr	r6, [pc, #368]	; 11b4c <_start@@Base+0x920>
   119d8:	add	r9, pc, r9
   119dc:	add	r7, pc, r7
   119e0:	add	r6, pc, r6
   119e4:	ldr	r2, [r4, #28]
   119e8:	mov	r0, #1
   119ec:	ldr	lr, [r4, #20]
   119f0:	mov	r1, r6
   119f4:	ldr	ip, [r4, #24]
   119f8:	cmp	r2, #0
   119fc:	ldr	r3, [r4, #16]
   11a00:	mov	r2, r5
   11a04:	moveq	sl, r9
   11a08:	movne	sl, r7
   11a0c:	str	lr, [sp]
   11a10:	str	sl, [sp, #8]
   11a14:	add	r5, r5, r0
   11a18:	str	ip, [sp, #4]
   11a1c:	add	r4, r4, #32
   11a20:	bl	1109c <__printf_chk@plt>
   11a24:	ldr	r3, [sp, #28]
   11a28:	cmp	r3, r5
   11a2c:	bhi	119e4 <_start@@Base+0x7b8>
   11a30:	ldr	r3, [sp, #32]
   11a34:	cmp	r3, #0
   11a38:	beq	11ab0 <_start@@Base+0x884>
   11a3c:	ldr	sl, [pc, #268]	; 11b50 <_start@@Base+0x924>
   11a40:	add	fp, sp, #160	; 0xa0
   11a44:	ldr	r9, [pc, #264]	; 11b54 <_start@@Base+0x928>
   11a48:	mov	r4, #0
   11a4c:	ldr	r7, [pc, #260]	; 11b58 <_start@@Base+0x92c>
   11a50:	add	sl, pc, sl
   11a54:	ldr	r6, [pc, #256]	; 11b5c <_start@@Base+0x930>
   11a58:	add	r9, pc, r9
   11a5c:	ldr	r5, [pc, #252]	; 11b60 <_start@@Base+0x934>
   11a60:	add	r7, pc, r7
   11a64:	add	r6, pc, r6
   11a68:	add	r5, pc, r5
   11a6c:	ldr	r3, [fp, #4]!
   11a70:	cmp	r3, #1
   11a74:	moveq	r3, sl
   11a78:	beq	11a90 <_start@@Base+0x864>
   11a7c:	movcc	r3, r9
   11a80:	bcc	11a90 <_start@@Base+0x864>
   11a84:	cmp	r3, #2
   11a88:	moveq	r3, r6
   11a8c:	movne	r3, r7
   11a90:	mov	r2, r4
   11a94:	mov	r0, #1
   11a98:	mov	r1, r5
   11a9c:	add	r4, r4, #1
   11aa0:	bl	1109c <__printf_chk@plt>
   11aa4:	ldr	r3, [sp, #32]
   11aa8:	cmp	r3, r4
   11aac:	bhi	11a6c <_start@@Base+0x840>
   11ab0:	ldr	r0, [sp, #16]
   11ab4:	bl	10f88 <mmal_component_destroy@plt>
   11ab8:	ldr	r2, [sp, #172]	; 0xac
   11abc:	ldr	r3, [r8]
   11ac0:	mov	r0, #0
   11ac4:	cmp	r2, r3
   11ac8:	bne	11ad4 <_start@@Base+0x8a8>
   11acc:	add	sp, sp, #180	; 0xb4
   11ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ad4:	bl	10f94 <__stack_chk_fail@plt>
   11ad8:	ldr	r0, [pc, #132]	; 11b64 <_start@@Base+0x938>
   11adc:	mov	r1, #1
   11ae0:	ldr	r2, [pc, #128]	; 11b68 <_start@@Base+0x93c>
   11ae4:	ldr	r3, [pc, #128]	; 11b6c <_start@@Base+0x940>
   11ae8:	ldr	r0, [r6, r0]
   11aec:	add	r2, pc, r2
   11af0:	str	r5, [sp]
   11af4:	add	r3, pc, r3
   11af8:	ldr	r0, [r0]
   11afc:	bl	110b4 <__fprintf_chk@plt>
   11b00:	mov	r0, #1
   11b04:	bl	11054 <exit@plt>
   11b08:	ldr	ip, [pc, #84]	; 11b64 <_start@@Base+0x938>
   11b0c:	mov	r3, r0
   11b10:	ldr	r2, [pc, #88]	; 11b70 <_start@@Base+0x944>
   11b14:	mov	r1, #1
   11b18:	ldr	r0, [r6, ip]
   11b1c:	add	r2, pc, r2
   11b20:	ldr	r0, [r0]
   11b24:	bl	110b4 <__fprintf_chk@plt>
   11b28:	mov	r0, #1
   11b2c:	bl	11054 <exit@plt>
   11b30:			; <UNDEFINED> instruction: 0x000136b4
   11b34:	strheq	r0, [r0], -ip
   11b38:	andeq	r1, r0, ip, ror sl
   11b3c:	andeq	r1, r0, r4, ror sl
   11b40:	andeq	r1, r0, r0, ror sl
   11b44:	ldrdeq	r1, [r0], -r0
   11b48:	andeq	r1, r0, r4, asr #19
   11b4c:	andeq	r1, r0, r8, asr sl
   11b50:	andeq	r1, r0, r8, ror #18
   11b54:	andeq	r1, r0, r8, asr r9
   11b58:	andeq	r1, r0, r4, ror #18
   11b5c:	andeq	r1, r0, r8, asr r9
   11b60:	strdeq	r1, [r0], -r8
   11b64:	andeq	r0, r0, r0, asr #1
   11b68:	andeq	r1, r0, r4, lsl r9
   11b6c:	strdeq	r1, [r0], -r8
   11b70:	andeq	r1, r0, r0, asr #17
   11b74:	ldr	ip, [pc, #660]	; 11e10 <_start@@Base+0xbe4>
   11b78:	cmp	r0, #2
   11b7c:	ldr	r3, [pc, #656]	; 11e14 <_start@@Base+0xbe8>
   11b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b84:	vpush	{d8}
   11b88:	add	ip, pc, ip
   11b8c:	sub	sp, sp, #132	; 0x84
   11b90:	str	ip, [sp, #56]	; 0x38
   11b94:	ldr	r3, [ip, r3]
   11b98:	movle	ip, #0
   11b9c:	strle	ip, [sp, #36]	; 0x24
   11ba0:	str	r3, [sp, #60]	; 0x3c
   11ba4:	ldr	r3, [r3]
   11ba8:	str	r3, [sp, #124]	; 0x7c
   11bac:	ble	11bcc <_start@@Base+0x9a0>
   11bb0:	ldr	r0, [r1, #8]
   11bb4:	ldr	r1, [pc, #604]	; 11e18 <_start@@Base+0xbec>
   11bb8:	add	r1, pc, r1
   11bbc:	bl	10fb8 <strcasecmp@plt>
   11bc0:	rsbs	r0, r0, #1
   11bc4:	movcc	r0, #0
   11bc8:	str	r0, [sp, #36]	; 0x24
   11bcc:	ldr	r0, [pc, #584]	; 11e1c <_start@@Base+0xbf0>
   11bd0:	mov	r5, #0
   11bd4:	add	r7, sp, #68	; 0x44
   11bd8:	add	fp, sp, #76	; 0x4c
   11bdc:	add	r0, pc, r0
   11be0:	add	sl, sp, #64	; 0x40
   11be4:	bl	1100c <puts@plt>
   11be8:	ldr	ip, [pc, #560]	; 11e20 <_start@@Base+0xbf4>
   11bec:	add	r6, sp, #92	; 0x5c
   11bf0:	mov	r8, r5
   11bf4:	add	ip, pc, ip
   11bf8:	str	ip, [sp, #40]	; 0x28
   11bfc:	ldr	ip, [pc, #544]	; 11e24 <_start@@Base+0xbf8>
   11c00:	mov	r4, #2
   11c04:	vldr	d8, [pc, #500]	; 11e00 <_start@@Base+0xbd4>
   11c08:	add	ip, pc, ip
   11c0c:	str	ip, [sp, #44]	; 0x2c
   11c10:	ldr	ip, [pc, #528]	; 11e28 <_start@@Base+0xbfc>
   11c14:	add	ip, pc, ip
   11c18:	str	ip, [sp, #48]	; 0x30
   11c1c:	ldr	ip, [pc, #520]	; 11e2c <_start@@Base+0xc00>
   11c20:	add	ip, pc, ip
   11c24:	str	ip, [sp, #52]	; 0x34
   11c28:	ldr	ip, [sp, #40]	; 0x28
   11c2c:	mov	r9, #0
   11c30:	ldm	ip, {r0, r1}
   11c34:	stm	r7, {r0, r1}
   11c38:	ldr	ip, [sp, #36]	; 0x24
   11c3c:	mov	r0, fp
   11c40:	str	r4, [sp]
   11c44:	mov	r1, sl
   11c48:	str	r8, [sp, #4]
   11c4c:	mov	r2, r6
   11c50:	str	r5, [sp, #8]
   11c54:	mov	r3, #32
   11c58:	str	r9, [sp, #12]
   11c5c:	str	ip, [sp, #16]
   11c60:	bl	11090 <mmal_vc_get_core_stats@plt>
   11c64:	cmp	r0, #0
   11c68:	bne	11dc8 <_start@@Base+0xb9c>
   11c6c:	ldr	r3, [sp, #64]	; 0x40
   11c70:	cmp	r3, #0
   11c74:	bne	11cec <_start@@Base+0xac0>
   11c78:	ldr	r2, [sp, #84]	; 0x54
   11c7c:	ldr	r3, [sp, #80]	; 0x50
   11c80:	ldr	r1, [sp, #76]	; 0x4c
   11c84:	cmp	r3, r2
   11c88:	ldr	r0, [r7, r9, lsl #2]
   11c8c:	rsbne	r3, r3, r2
   11c90:	addne	r2, r1, #1
   11c94:	ldr	ip, [sp, #52]	; 0x34
   11c98:	vldreq	d7, [pc, #360]	; 11e08 <_start@@Base+0xbdc>
   11c9c:	vmovne	s15, r3
   11ca0:	ldr	r3, [sp, #88]	; 0x58
   11ca4:	vmovne	s14, r2
   11ca8:	ldr	r2, [sp, #48]	; 0x30
   11cac:	vcvtne.f64.u32	d6, s15
   11cb0:	str	r1, [sp, #8]
   11cb4:	str	r0, [sp, #4]
   11cb8:	mov	r0, #1
   11cbc:	str	r3, [sp, #24]
   11cc0:	mov	r3, r5
   11cc4:	ldr	r1, [sp, #44]	; 0x2c
   11cc8:	vcvtne.f64.u32	d7, s14
   11ccc:	vmulne.f64	d7, d7, d8
   11cd0:	vdivne.f64	d7, d7, d6
   11cd4:	cmp	r4, #2
   11cd8:	movne	r2, ip
   11cdc:	str	r2, [sp]
   11ce0:	mov	r2, r6
   11ce4:	vstr	d7, [sp, #16]
   11ce8:	bl	1109c <__printf_chk@plt>
   11cec:	add	r9, r9, #1
   11cf0:	cmp	r9, #2
   11cf4:	bne	11c38 <_start@@Base+0xa0c>
   11cf8:	ldr	r3, [sp, #64]	; 0x40
   11cfc:	cmp	r3, #1
   11d00:	beq	11d38 <_start@@Base+0xb0c>
   11d04:	bcc	11db4 <_start@@Base+0xb88>
   11d08:	cmp	r3, #2
   11d0c:	bne	11d5c <_start@@Base+0xb30>
   11d10:	cmp	r4, #2
   11d14:	beq	11dbc <_start@@Base+0xb90>
   11d18:	ldr	ip, [sp, #40]	; 0x28
   11d1c:	mov	r4, r9
   11d20:	add	r8, r8, #1
   11d24:	mov	r5, #0
   11d28:	mov	r9, #0
   11d2c:	ldm	ip, {r0, r1}
   11d30:	stm	r7, {r0, r1}
   11d34:	b	11c38 <_start@@Base+0xa0c>
   11d38:	ldr	ip, [sp, #60]	; 0x3c
   11d3c:	mov	r0, #0
   11d40:	ldr	r2, [sp, #124]	; 0x7c
   11d44:	ldr	r3, [ip]
   11d48:	cmp	r2, r3
   11d4c:	bne	11dfc <_start@@Base+0xbd0>
   11d50:	add	sp, sp, #132	; 0x84
   11d54:	vpop	{d8}
   11d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d5c:	ldr	ip, [sp, #56]	; 0x38
   11d60:	mov	r1, #1
   11d64:	ldr	r0, [pc, #196]	; 11e30 <_start@@Base+0xc04>
   11d68:	ldr	r2, [pc, #196]	; 11e34 <_start@@Base+0xc08>
   11d6c:	ldr	r0, [ip, r0]
   11d70:	add	r2, pc, r2
   11d74:	ldr	r0, [r0]
   11d78:	bl	110b4 <__fprintf_chk@plt>
   11d7c:	ldr	r3, [pc, #180]	; 11e38 <_start@@Base+0xc0c>
   11d80:	ldr	r1, [pc, #180]	; 11e3c <_start@@Base+0xc10>
   11d84:	mov	r2, #576	; 0x240
   11d88:	add	r3, pc, r3
   11d8c:	ldr	r0, [pc, #172]	; 11e40 <_start@@Base+0xc14>
   11d90:	str	r3, [sp]
   11d94:	add	r1, pc, r1
   11d98:	ldr	r3, [pc, #164]	; 11e44 <_start@@Base+0xc18>
   11d9c:	add	r0, pc, r0
   11da0:	add	r1, r1, #16
   11da4:	add	r3, pc, r3
   11da8:	bl	110c0 <vcos_pthreads_logging_assert@plt>
   11dac:	mov	r0, #1
   11db0:	bl	11054 <exit@plt>
   11db4:	add	r5, r5, #1
   11db8:	b	11c28 <_start@@Base+0x9fc>
   11dbc:	mov	r4, #3
   11dc0:	mov	r5, #0
   11dc4:	b	11c28 <_start@@Base+0x9fc>
   11dc8:	ldr	ip, [sp, #56]	; 0x38
   11dcc:	ldr	r3, [pc, #92]	; 11e30 <_start@@Base+0xc04>
   11dd0:	ldr	r3, [ip, r3]
   11dd4:	ldr	r4, [r3]
   11dd8:	bl	10f64 <mmal_status_to_string@plt>
   11ddc:	ldr	r2, [pc, #100]	; 11e48 <_start@@Base+0xc1c>
   11de0:	mov	r1, #1
   11de4:	add	r2, pc, r2
   11de8:	mov	r3, r0
   11dec:	mov	r0, r4
   11df0:	bl	110b4 <__fprintf_chk@plt>
   11df4:	mov	r0, #1
   11df8:	bl	11054 <exit@plt>
   11dfc:	bl	10f94 <__stack_chk_fail@plt>
   11e00:	andeq	r0, r0, r0
   11e04:	smlawbmi	lr, r0, r4, r8
	...
   11e10:	andeq	r3, r1, r0, ror r4
   11e14:	strheq	r0, [r0], -ip
   11e18:	andeq	r1, r0, ip, asr #17
   11e1c:			; <UNDEFINED> instruction: 0x000018b0
   11e20:	ldrdeq	r3, [r1], -r0
   11e24:	andeq	r1, r0, r8, asr #17
   11e28:	andeq	r1, r0, r8, ror #16
   11e2c:	andeq	r1, r0, r0, ror #16
   11e30:	andeq	r0, r0, r0, asr #1
   11e34:	andeq	r1, r0, r4, lsl #15
   11e38:	ldrdeq	r1, [r0], -ip
   11e3c:	andeq	r1, r0, r8, asr r3
   11e40:	andeq	r1, r0, r4, ror r7
   11e44:	strdeq	r1, [r0], -r8
   11e48:	andeq	r1, r0, ip, asr #13
   11e4c:	push	{r4, r5, r6, r7, lr}
   11e50:	sub	sp, sp, #428	; 0x1ac
   11e54:	ldr	r5, [pc, #212]	; 11f30 <_start@@Base+0xd04>
   11e58:	ldr	r3, [pc, #212]	; 11f34 <_start@@Base+0xd08>
   11e5c:	add	r5, pc, r5
   11e60:	ldr	r0, [r1, #4]
   11e64:	ldr	r1, [pc, #204]	; 11f38 <_start@@Base+0xd0c>
   11e68:	ldr	r7, [r5, r3]
   11e6c:	add	r1, pc, r1
   11e70:	ldr	r3, [r7]
   11e74:	str	r3, [sp, #420]	; 0x1a4
   11e78:	bl	10fb8 <strcasecmp@plt>
   11e7c:	rsbs	r1, r0, #1
   11e80:	add	r0, sp, #12
   11e84:	movcc	r1, #0
   11e88:	bl	10fac <mmal_vc_get_stats@plt>
   11e8c:	subs	r4, r0, #0
   11e90:	bne	11ef8 <_start@@Base+0xccc>
   11e94:	ldr	r5, [pc, #160]	; 11f3c <_start@@Base+0xd10>
   11e98:	ldr	r6, [pc, #160]	; 11f40 <_start@@Base+0xd14>
   11e9c:	add	r5, pc, r5
   11ea0:	add	r6, pc, r6
   11ea4:	add	r5, r5, #256	; 0x100
   11ea8:	mov	r3, r5
   11eac:	add	ip, sp, #424	; 0x1a8
   11eb0:	ldr	r2, [r3, r4]!
   11eb4:	mov	r0, #1
   11eb8:	mov	r1, r6
   11ebc:	add	r4, r4, #8
   11ec0:	ldr	r3, [r3, #4]
   11ec4:	bic	r3, r3, #3
   11ec8:	add	r3, ip, r3
   11ecc:	ldr	r3, [r3, #-412]	; 0xfffffe64
   11ed0:	bl	1109c <__printf_chk@plt>
   11ed4:	cmp	r4, #200	; 0xc8
   11ed8:	bne	11ea8 <_start@@Base+0xc7c>
   11edc:	mov	r0, #0
   11ee0:	ldr	r2, [sp, #420]	; 0x1a4
   11ee4:	ldr	r3, [r7]
   11ee8:	cmp	r2, r3
   11eec:	bne	11f2c <_start@@Base+0xd00>
   11ef0:	add	sp, sp, #428	; 0x1ac
   11ef4:	pop	{r4, r5, r6, r7, pc}
   11ef8:	ldr	r3, [pc, #68]	; 11f44 <_start@@Base+0xd18>
   11efc:	ldr	r3, [r5, r3]
   11f00:	ldr	r5, [r3]
   11f04:	bl	10f64 <mmal_status_to_string@plt>
   11f08:	ldr	r2, [pc, #56]	; 11f48 <_start@@Base+0xd1c>
   11f0c:	mov	r3, r4
   11f10:	mov	r1, #1
   11f14:	add	r2, pc, r2
   11f18:	str	r0, [sp]
   11f1c:	mov	r0, r5
   11f20:	bl	110b4 <__fprintf_chk@plt>
   11f24:	mvn	r0, #0
   11f28:	b	11ee0 <_start@@Base+0xcb4>
   11f2c:	bl	10f94 <__stack_chk_fail@plt>
   11f30:	muleq	r1, ip, r1
   11f34:	strheq	r0, [r0], -ip
   11f38:	andeq	r1, r0, r8, lsl r6
   11f3c:	strdeq	r2, [r1], -ip
   11f40:	andeq	r1, r0, r8, ror #13
   11f44:	andeq	r0, r0, r0, asr #1
   11f48:	andeq	r1, r0, r4, asr r6
   11f4c:	push	{r4, r5, r6, r7, lr}
   11f50:	sub	sp, sp, #28
   11f54:	ldr	r5, [pc, #168]	; 12004 <_start@@Base+0xdd8>
   11f58:	add	r0, sp, #8
   11f5c:	ldr	r3, [pc, #164]	; 12008 <_start@@Base+0xddc>
   11f60:	add	r1, sp, #12
   11f64:	add	r5, pc, r5
   11f68:	add	r2, sp, #16
   11f6c:	mvn	r4, #0
   11f70:	ldr	r6, [r5, r3]
   11f74:	str	r4, [sp, #8]
   11f78:	str	r4, [sp, #12]
   11f7c:	ldr	r3, [r6]
   11f80:	str	r3, [sp, #20]
   11f84:	bl	10ff4 <mmal_vc_get_version@plt>
   11f88:	subs	r7, r0, #0
   11f8c:	bne	11fcc <_start@@Base+0xda0>
   11f90:	ldr	ip, [sp, #16]
   11f94:	mov	r0, #1
   11f98:	ldr	r1, [pc, #108]	; 1200c <_start@@Base+0xde0>
   11f9c:	ldr	r2, [sp, #8]
   11fa0:	ldr	r3, [sp, #12]
   11fa4:	add	r1, pc, r1
   11fa8:	str	ip, [sp]
   11fac:	bl	1109c <__printf_chk@plt>
   11fb0:	mov	r0, r7
   11fb4:	ldr	r2, [sp, #20]
   11fb8:	ldr	r3, [r6]
   11fbc:	cmp	r2, r3
   11fc0:	bne	12000 <_start@@Base+0xdd4>
   11fc4:	add	sp, sp, #28
   11fc8:	pop	{r4, r5, r6, r7, pc}
   11fcc:	ldr	r3, [pc, #60]	; 12010 <_start@@Base+0xde4>
   11fd0:	ldr	r3, [r5, r3]
   11fd4:	ldr	r5, [r3]
   11fd8:	bl	10f64 <mmal_status_to_string@plt>
   11fdc:	ldr	r2, [pc, #48]	; 12014 <_start@@Base+0xde8>
   11fe0:	mov	r3, r7
   11fe4:	mov	r1, #1
   11fe8:	add	r2, pc, r2
   11fec:	str	r0, [sp]
   11ff0:	mov	r0, r5
   11ff4:	bl	110b4 <__fprintf_chk@plt>
   11ff8:	mov	r0, r4
   11ffc:	b	11fb4 <_start@@Base+0xd88>
   12000:	bl	10f94 <__stack_chk_fail@plt>
   12004:	muleq	r1, r4, r0
   12008:	strheq	r0, [r0], -ip
   1200c:	strdeq	r1, [r0], -r0
   12010:	andeq	r0, r0, r0, asr #1
   12014:	andeq	r1, r0, r8, asr #11
   12018:	push	{r4, r5, lr}
   1201c:	sub	sp, sp, #12
   12020:	bl	110fc <mmal_vc_init@plt>
   12024:	ldr	r2, [pc, #68]	; 12070 <_start@@Base+0xe44>
   12028:	add	r2, pc, r2
   1202c:	subs	r4, r0, #0
   12030:	bne	1203c <_start@@Base+0xe10>
   12034:	add	sp, sp, #12
   12038:	pop	{r4, r5, pc}
   1203c:	ldr	r3, [pc, #48]	; 12074 <_start@@Base+0xe48>
   12040:	ldr	r3, [r2, r3]
   12044:	ldr	r5, [r3]
   12048:	bl	10f64 <mmal_status_to_string@plt>
   1204c:	ldr	r2, [pc, #36]	; 12078 <_start@@Base+0xe4c>
   12050:	mov	r3, r4
   12054:	mov	r1, #1
   12058:	add	r2, pc, r2
   1205c:	str	r0, [sp]
   12060:	mov	r0, r5
   12064:	bl	110b4 <__fprintf_chk@plt>
   12068:	mov	r0, #1
   1206c:	bl	11054 <exit@plt>
   12070:	ldrdeq	r2, [r1], -r0
   12074:	andeq	r0, r0, r0, asr #1
   12078:	andeq	r1, r0, r8, ror r5
   1207c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12080:	cmp	r0, #2
   12084:	ldr	r4, [pc, #680]	; 12334 <_start@@Base+0x1108>
   12088:	sub	sp, sp, #452	; 0x1c4
   1208c:	ldr	r3, [pc, #676]	; 12338 <_start@@Base+0x110c>
   12090:	add	r4, pc, r4
   12094:	ldr	r6, [r4, r3]
   12098:	ldr	r3, [r6]
   1209c:	str	r3, [sp, #444]	; 0x1bc
   120a0:	ble	120bc <_start@@Base+0xe90>
   120a4:	ldr	r0, [r1, #8]
   120a8:	ldr	r1, [pc, #652]	; 1233c <_start@@Base+0x1110>
   120ac:	add	r1, pc, r1
   120b0:	bl	10fb8 <strcasecmp@plt>
   120b4:	subs	r5, r0, #0
   120b8:	beq	12224 <_start@@Base+0xff8>
   120bc:	add	r0, sp, #20
   120c0:	bl	11024 <OpenVideoCoreMemory@plt>
   120c4:	cmp	r0, #0
   120c8:	blt	12308 <_start@@Base+0x10dc>
   120cc:	ldr	r1, [pc, #620]	; 12340 <_start@@Base+0x1114>
   120d0:	add	r2, sp, #24
   120d4:	ldr	r0, [sp, #20]
   120d8:	add	r3, sp, #32
   120dc:	add	r1, pc, r1
   120e0:	bl	1106c <LookupVideoCoreSymbol@plt>
   120e4:	cmp	r0, #0
   120e8:	beq	12290 <_start@@Base+0x1064>
   120ec:	ldr	r0, [sp, #20]
   120f0:	add	r1, sp, #28
   120f4:	ldr	r2, [sp, #24]
   120f8:	mov	r3, #4
   120fc:	bl	11060 <ReadVideoCoreMemory@plt>
   12100:	cmp	r0, #0
   12104:	beq	122c0 <_start@@Base+0x1094>
   12108:	ldr	r0, [sp, #20]
   1210c:	add	r1, sp, #36	; 0x24
   12110:	ldr	r2, [sp, #28]
   12114:	mov	r3, #408	; 0x198
   12118:	bl	11060 <ReadVideoCoreMemory@plt>
   1211c:	cmp	r0, #0
   12120:	beq	122e4 <_start@@Base+0x10b8>
   12124:	ldr	r0, [sp, #20]
   12128:	bl	11120 <CloseVideoCoreMemory@plt>
   1212c:	ldr	r3, [sp, #136]	; 0x88
   12130:	cmp	r3, #64	; 0x40
   12134:	bhi	1226c <_start@@Base+0x1040>
   12138:	ldr	lr, [sp, #128]	; 0x80
   1213c:	mov	r0, #1
   12140:	ldr	ip, [sp, #132]	; 0x84
   12144:	ldr	r1, [pc, #504]	; 12344 <_start@@Base+0x1118>
   12148:	ldr	r2, [sp, #120]	; 0x78
   1214c:	ldr	r3, [sp, #124]	; 0x7c
   12150:	add	r1, pc, r1
   12154:	str	lr, [sp]
   12158:	str	ip, [sp, #4]
   1215c:	bl	1109c <__printf_chk@plt>
   12160:	ldr	r2, [sp, #136]	; 0x88
   12164:	cmp	r2, #0
   12168:	beq	12208 <_start@@Base+0xfdc>
   1216c:	ldr	r5, [pc, #468]	; 12348 <_start@@Base+0x111c>
   12170:	add	r4, sp, #156	; 0x9c
   12174:	ldr	sl, [pc, #464]	; 1234c <_start@@Base+0x1120>
   12178:	mov	fp, #0
   1217c:	ldr	r9, [pc, #460]	; 12350 <_start@@Base+0x1124>
   12180:	add	r5, pc, r5
   12184:	ldr	r8, [pc, #456]	; 12354 <_start@@Base+0x1128>
   12188:	add	sl, pc, sl
   1218c:	ldr	r7, [pc, #452]	; 12358 <_start@@Base+0x112c>
   12190:	add	r9, pc, r9
   12194:	add	r8, pc, r8
   12198:	add	r7, pc, r7
   1219c:	ldr	r3, [r4, #-12]
   121a0:	cmp	r3, #0
   121a4:	beq	121f8 <_start@@Base+0xfcc>
   121a8:	cmp	r3, #2
   121ac:	moveq	r3, sl
   121b0:	beq	121cc <_start@@Base+0xfa0>
   121b4:	cmp	r3, #3
   121b8:	moveq	r3, r9
   121bc:	beq	121cc <_start@@Base+0xfa0>
   121c0:	cmp	r3, #1
   121c4:	moveq	r3, r7
   121c8:	movne	r3, r8
   121cc:	ldr	r2, [r4, #-8]
   121d0:	mov	r0, #1
   121d4:	ldr	lr, [r4, #-16]
   121d8:	mov	r1, r5
   121dc:	ldr	ip, [r4, #-4]
   121e0:	str	r2, [sp]
   121e4:	mov	r2, r4
   121e8:	str	lr, [sp, #4]
   121ec:	str	ip, [sp, #8]
   121f0:	bl	1109c <__printf_chk@plt>
   121f4:	ldr	r2, [sp, #136]	; 0x88
   121f8:	add	fp, fp, #1
   121fc:	add	r4, r4, #36	; 0x24
   12200:	cmp	fp, r2
   12204:	bcc	1219c <_start@@Base+0xf70>
   12208:	mov	r0, #0
   1220c:	ldr	r2, [sp, #444]	; 0x1bc
   12210:	ldr	r3, [r6]
   12214:	cmp	r2, r3
   12218:	bne	12330 <_start@@Base+0x1104>
   1221c:	add	sp, sp, #452	; 0x1c4
   12220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12224:	bl	12018 <_start@@Base+0xdec>
   12228:	mov	r1, r5
   1222c:	add	r0, sp, #36	; 0x24
   12230:	bl	10fac <mmal_vc_get_stats@plt>
   12234:	cmp	r0, #0
   12238:	beq	1212c <_start@@Base+0xf00>
   1223c:	ldr	r3, [pc, #280]	; 1235c <_start@@Base+0x1130>
   12240:	ldr	r3, [r4, r3]
   12244:	ldr	r4, [r3]
   12248:	bl	10f64 <mmal_status_to_string@plt>
   1224c:	ldr	r2, [pc, #268]	; 12360 <_start@@Base+0x1134>
   12250:	mov	r1, #1
   12254:	add	r2, pc, r2
   12258:	mov	r3, r0
   1225c:	mov	r0, r4
   12260:	bl	110b4 <__fprintf_chk@plt>
   12264:	mvn	r0, #0
   12268:	b	1220c <_start@@Base+0xfe0>
   1226c:	ldr	r0, [pc, #232]	; 1235c <_start@@Base+0x1130>
   12270:	mov	r1, #1
   12274:	ldr	r2, [pc, #232]	; 12364 <_start@@Base+0x1138>
   12278:	ldr	r0, [r4, r0]
   1227c:	add	r2, pc, r2
   12280:	ldr	r0, [r0]
   12284:	bl	110b4 <__fprintf_chk@plt>
   12288:	mvn	r0, #0
   1228c:	b	1220c <_start@@Base+0xfe0>
   12290:	ldr	r3, [pc, #196]	; 1235c <_start@@Base+0x1130>
   12294:	mov	r1, #1
   12298:	ldr	r0, [pc, #200]	; 12368 <_start@@Base+0x113c>
   1229c:	mov	r2, #33	; 0x21
   122a0:	ldr	r3, [r4, r3]
   122a4:	add	r0, pc, r0
   122a8:	ldr	r3, [r3]
   122ac:	bl	10fdc <fwrite@plt>
   122b0:	ldr	r0, [sp, #20]
   122b4:	bl	11120 <CloseVideoCoreMemory@plt>
   122b8:	mvn	r0, #0
   122bc:	b	1220c <_start@@Base+0xfe0>
   122c0:	ldr	r0, [pc, #148]	; 1235c <_start@@Base+0x1130>
   122c4:	mov	r1, #1
   122c8:	ldr	r2, [pc, #156]	; 1236c <_start@@Base+0x1140>
   122cc:	ldr	r3, [sp, #24]
   122d0:	ldr	r0, [r4, r0]
   122d4:	add	r2, pc, r2
   122d8:	ldr	r0, [r0]
   122dc:	bl	110b4 <__fprintf_chk@plt>
   122e0:	b	122b0 <_start@@Base+0x1084>
   122e4:	ldr	r0, [pc, #112]	; 1235c <_start@@Base+0x1130>
   122e8:	mov	r1, #1
   122ec:	ldr	r2, [pc, #124]	; 12370 <_start@@Base+0x1144>
   122f0:	ldr	r3, [sp, #24]
   122f4:	ldr	r0, [r4, r0]
   122f8:	add	r2, pc, r2
   122fc:	ldr	r0, [r0]
   12300:	bl	110b4 <__fprintf_chk@plt>
   12304:	b	122b0 <_start@@Base+0x1084>
   12308:	ldr	ip, [pc, #76]	; 1235c <_start@@Base+0x1130>
   1230c:	mov	r3, r0
   12310:	ldr	r2, [pc, #92]	; 12374 <_start@@Base+0x1148>
   12314:	mov	r1, #1
   12318:	ldr	r0, [r4, ip]
   1231c:	add	r2, pc, r2
   12320:	ldr	r0, [r0]
   12324:	bl	110b4 <__fprintf_chk@plt>
   12328:	mvn	r0, #0
   1232c:	b	1220c <_start@@Base+0xfe0>
   12330:	bl	10f94 <__stack_chk_fail@plt>
   12334:	andeq	r2, r1, r8, ror #30
   12338:	strheq	r0, [r0], -ip
   1233c:	andeq	r1, r0, r8, ror #10
   12340:	andeq	r1, r0, r8, ror #10
   12344:			; <UNDEFINED> instruction: 0x000015b8
   12348:	andeq	r1, r0, r8, asr #11
   1234c:	andeq	r1, r0, r8, ror r4
   12350:	andeq	r1, r0, ip, lsl fp
   12354:	andeq	r1, r0, r8, ror r4
   12358:	andeq	r1, r0, ip, ror #21
   1235c:	andeq	r0, r0, r0, asr #1
   12360:	andeq	r1, r0, r8, asr #7
   12364:	andeq	r1, r0, ip, asr r4
   12368:			; <UNDEFINED> instruction: 0x000013b0
   1236c:	andeq	r1, r0, r4, lsr #7
   12370:			; <UNDEFINED> instruction: 0x000013b4
   12374:	andeq	r1, r0, r4
   12378:	ldr	r3, [r0, #4]
   1237c:	cmp	r3, #2
   12380:	beq	123a0 <_start@@Base+0x1174>
   12384:	cmp	r3, #3
   12388:	bxne	lr
   1238c:	mov	r0, r1
   12390:	mov	r1, r2
   12394:	ldr	r2, [pc, #24]	; 123b4 <_start@@Base+0x1188>
   12398:	add	r2, pc, r2
   1239c:	b	11078 <snprintf@plt>
   123a0:	mov	r0, r1
   123a4:	mov	r1, r2
   123a8:	ldr	r2, [pc, #8]	; 123b8 <_start@@Base+0x118c>
   123ac:	add	r2, pc, r2
   123b0:	b	11078 <snprintf@plt>
   123b4:	strdeq	r1, [r0], -r0
   123b8:	ldrdeq	r1, [r0], -r4
   123bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123c0:	sub	sp, sp, #4672	; 0x1240
   123c4:	ldr	r6, [pc, #964]	; 12790 <_start@@Base+0x1564>
   123c8:	sub	sp, sp, #20
   123cc:	ldr	r3, [pc, #960]	; 12794 <_start@@Base+0x1568>
   123d0:	add	r1, sp, #8192	; 0x2000
   123d4:	add	r6, pc, r6
   123d8:	add	r5, sp, #80	; 0x50
   123dc:	sub	r0, r5, #52	; 0x34
   123e0:	ldr	r3, [r6, r3]
   123e4:	str	r3, [sp, #20]
   123e8:	ldr	r3, [r3]
   123ec:	str	r3, [r1, #-3508]	; 0xfffff24c
   123f0:	bl	11024 <OpenVideoCoreMemory@plt>
   123f4:	subs	r3, r0, #0
   123f8:	blt	12768 <_start@@Base+0x153c>
   123fc:	add	r3, sp, #4672	; 0x1240
   12400:	movw	r4, #60876	; 0xedcc
   12404:	add	r3, r3, #16
   12408:	movt	r4, #65535	; 0xffff
   1240c:	ldr	r1, [pc, #900]	; 12798 <_start@@Base+0x156c>
   12410:	sub	r2, r5, #48	; 0x30
   12414:	ldr	r0, [r3, r4]
   12418:	sub	r3, r5, #44	; 0x2c
   1241c:	add	r1, pc, r1
   12420:	bl	1106c <LookupVideoCoreSymbol@plt>
   12424:	cmp	r0, #0
   12428:	beq	12694 <_start@@Base+0x1468>
   1242c:	add	ip, sp, #4672	; 0x1240
   12430:	movw	r7, #60880	; 0xedd0
   12434:	add	ip, ip, #16
   12438:	movt	r7, #65535	; 0xffff
   1243c:	sub	r1, r5, #40	; 0x28
   12440:	mov	r3, #4
   12444:	ldr	r0, [ip, r4]
   12448:	ldr	r2, [ip, r7]
   1244c:	bl	11060 <ReadVideoCoreMemory@plt>
   12450:	cmp	r0, #0
   12454:	beq	12710 <_start@@Base+0x14e4>
   12458:	add	r1, sp, #4672	; 0x1240
   1245c:	add	ip, sp, #4672	; 0x1240
   12460:	add	r1, r1, #16
   12464:	add	ip, ip, #16
   12468:	sub	r5, r5, #36	; 0x24
   1246c:	movw	r7, #60888	; 0xedd8
   12470:	movt	r7, #65535	; 0xffff
   12474:	ldr	r0, [r1, r4]
   12478:	movw	r3, #4384	; 0x1120
   1247c:	mov	r1, r5
   12480:	ldr	r2, [ip, r7]
   12484:	bl	11060 <ReadVideoCoreMemory@plt>
   12488:	cmp	r0, #0
   1248c:	beq	1273c <_start@@Base+0x1510>
   12490:	ldr	r1, [r5, #4]
   12494:	movw	r2, #28013	; 0x6d6d
   12498:	movt	r2, #27745	; 0x6c61
   1249c:	movw	ip, #60892	; 0xeddc
   124a0:	cmp	r1, r2
   124a4:	movt	ip, #65535	; 0xffff
   124a8:	bne	126b8 <_start@@Base+0x148c>
   124ac:	ldr	r3, [r5, #16]
   124b0:	movw	r0, #4384	; 0x1120
   124b4:	cmp	r3, r0
   124b8:	bne	126ec <_start@@Base+0x14c0>
   124bc:	ldr	r3, [r5, #20]
   124c0:	cmp	r3, #68	; 0x44
   124c4:	bne	12650 <_start@@Base+0x1424>
   124c8:	add	r3, sp, #4672	; 0x1240
   124cc:	mov	r0, #1
   124d0:	add	r3, r3, #16
   124d4:	ldr	r2, [r3, r7]
   124d8:	ldr	r3, [r3, ip]
   124dc:	str	r1, [sp]
   124e0:	ldr	r1, [pc, #692]	; 1279c <_start@@Base+0x1570>
   124e4:	add	r1, pc, r1
   124e8:	bl	1109c <__printf_chk@plt>
   124ec:	ldr	ip, [r5, #20]
   124f0:	ldr	r1, [pc, #680]	; 127a0 <_start@@Base+0x1574>
   124f4:	mov	r0, #1
   124f8:	ldr	r3, [r5, #8]
   124fc:	ldr	r2, [r5, #12]
   12500:	add	r1, pc, r1
   12504:	str	ip, [sp]
   12508:	bl	1109c <__printf_chk@plt>
   1250c:	ldr	r3, [r5, #12]
   12510:	ldr	r7, [r5, #8]
   12514:	cmp	r7, r3
   12518:	movcc	r8, r7
   1251c:	movcs	r8, r3
   12520:	cmp	r3, r7
   12524:	sub	r7, r7, #1
   12528:	andcs	r3, r7, r3
   1252c:	movcc	r3, #0
   12530:	cmp	r8, #0
   12534:	beq	12610 <_start@@Base+0x13e4>
   12538:	ldr	r9, [pc, #612]	; 127a4 <_start@@Base+0x1578>
   1253c:	add	ip, sp, #4416	; 0x1140
   12540:	ldr	r4, [pc, #608]	; 127a8 <_start@@Base+0x157c>
   12544:	add	ip, ip, #12
   12548:	add	r9, pc, r9
   1254c:	str	ip, [sp, #12]
   12550:	add	r8, r3, r8
   12554:	ldr	ip, [pc, #592]	; 127ac <_start@@Base+0x1580>
   12558:	add	r4, pc, r4
   1255c:	mov	fp, r3
   12560:	mov	r2, #0
   12564:	add	ip, pc, ip
   12568:	str	ip, [sp, #16]
   1256c:	and	lr, r7, fp
   12570:	mov	r1, r9
   12574:	mov	r0, #1
   12578:	add	lr, lr, lr, lsl #4
   1257c:	lsl	lr, lr, #2
   12580:	add	lr, lr, #32
   12584:	add	sl, r5, lr
   12588:	ldr	r6, [r5, lr]
   1258c:	rsb	r2, r2, r6
   12590:	bl	1109c <__printf_chk@plt>
   12594:	ldr	r2, [sl, #4]
   12598:	mov	r1, #0
   1259c:	add	r3, r4, #456	; 0x1c8
   125a0:	lsl	lr, r1, #3
   125a4:	ldr	r3, [r3, r1, lsl #3]
   125a8:	cmp	r3, r2
   125ac:	beq	125dc <_start@@Base+0x13b0>
   125b0:	add	r1, r1, #1
   125b4:	cmp	r1, #6
   125b8:	bne	1259c <_start@@Base+0x1370>
   125bc:	mov	r0, #1
   125c0:	ldr	r1, [sp, #16]
   125c4:	add	fp, fp, #1
   125c8:	bl	1109c <__printf_chk@plt>
   125cc:	cmp	fp, r8
   125d0:	beq	12610 <_start@@Base+0x13e4>
   125d4:	mov	r2, r6
   125d8:	b	1256c <_start@@Base+0x1340>
   125dc:	add	lr, r4, lr
   125e0:	add	r1, sp, #4416	; 0x1140
   125e4:	mov	r0, sl
   125e8:	add	r1, r1, #12
   125ec:	mov	r2, #256	; 0x100
   125f0:	ldr	ip, [lr, #460]	; 0x1cc
   125f4:	blx	ip
   125f8:	add	r0, sp, #4416	; 0x1140
   125fc:	add	r0, r0, #12
   12600:	add	fp, fp, #1
   12604:	bl	1100c <puts@plt>
   12608:	cmp	fp, r8
   1260c:	bne	125d4 <_start@@Base+0x13a8>
   12610:	add	ip, sp, #4672	; 0x1240
   12614:	movw	r3, #60876	; 0xedcc
   12618:	add	ip, ip, #16
   1261c:	movt	r3, #65535	; 0xffff
   12620:	ldr	r0, [ip, r3]
   12624:	bl	11120 <CloseVideoCoreMemory@plt>
   12628:	mov	r0, #0
   1262c:	ldr	ip, [sp, #20]
   12630:	add	r1, sp, #8192	; 0x2000
   12634:	ldr	r2, [r1, #-3508]	; 0xfffff24c
   12638:	ldr	r3, [ip]
   1263c:	cmp	r2, r3
   12640:	bne	1278c <_start@@Base+0x1560>
   12644:	add	sp, sp, #4672	; 0x1240
   12648:	add	sp, sp, #20
   1264c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12650:	ldr	r0, [pc, #344]	; 127b0 <_start@@Base+0x1584>
   12654:	mov	ip, #68	; 0x44
   12658:	ldr	r2, [pc, #340]	; 127b4 <_start@@Base+0x1588>
   1265c:	mov	r1, #1
   12660:	ldr	r0, [r6, r0]
   12664:	add	r2, pc, r2
   12668:	str	ip, [sp]
   1266c:	ldr	r0, [r0]
   12670:	bl	110b4 <__fprintf_chk@plt>
   12674:	add	lr, sp, #4672	; 0x1240
   12678:	movw	r3, #60876	; 0xedcc
   1267c:	add	lr, lr, #16
   12680:	movt	r3, #65535	; 0xffff
   12684:	ldr	r0, [lr, r3]
   12688:	bl	11120 <CloseVideoCoreMemory@plt>
   1268c:	mvn	r0, #0
   12690:	b	1262c <_start@@Base+0x1400>
   12694:	ldr	r3, [pc, #276]	; 127b0 <_start@@Base+0x1584>
   12698:	mov	r1, #1
   1269c:	ldr	r0, [pc, #276]	; 127b8 <_start@@Base+0x158c>
   126a0:	mov	r2, #31
   126a4:	ldr	r3, [r6, r3]
   126a8:	add	r0, pc, r0
   126ac:	ldr	r3, [r3]
   126b0:	bl	10fdc <fwrite@plt>
   126b4:	b	12674 <_start@@Base+0x1448>
   126b8:	mov	r3, r1
   126bc:	ldr	r0, [pc, #236]	; 127b0 <_start@@Base+0x1584>
   126c0:	add	r1, sp, #4672	; 0x1240
   126c4:	ldr	r2, [pc, #240]	; 127bc <_start@@Base+0x1590>
   126c8:	add	r1, r1, #16
   126cc:	ldr	r0, [r6, r0]
   126d0:	add	r2, pc, r2
   126d4:	ldr	ip, [r1, r7]
   126d8:	mov	r1, #1
   126dc:	str	ip, [sp]
   126e0:	ldr	r0, [r0]
   126e4:	bl	110b4 <__fprintf_chk@plt>
   126e8:	b	12674 <_start@@Base+0x1448>
   126ec:	ldr	ip, [pc, #188]	; 127b0 <_start@@Base+0x1584>
   126f0:	mov	r1, #1
   126f4:	ldr	r2, [pc, #196]	; 127c0 <_start@@Base+0x1594>
   126f8:	ldr	ip, [r6, ip]
   126fc:	add	r2, pc, r2
   12700:	str	r0, [sp]
   12704:	ldr	r0, [ip]
   12708:	bl	110b4 <__fprintf_chk@plt>
   1270c:	b	12674 <_start@@Base+0x1448>
   12710:	ldr	r0, [pc, #152]	; 127b0 <_start@@Base+0x1584>
   12714:	add	lr, sp, #4672	; 0x1240
   12718:	add	lr, lr, #16
   1271c:	ldr	r2, [pc, #160]	; 127c4 <_start@@Base+0x1598>
   12720:	mov	r1, #1
   12724:	ldr	r0, [r6, r0]
   12728:	add	r2, pc, r2
   1272c:	ldr	r3, [lr, r7]
   12730:	ldr	r0, [r0]
   12734:	bl	110b4 <__fprintf_chk@plt>
   12738:	b	12674 <_start@@Base+0x1448>
   1273c:	ldr	r0, [pc, #108]	; 127b0 <_start@@Base+0x1584>
   12740:	add	lr, sp, #4672	; 0x1240
   12744:	add	lr, lr, #16
   12748:	ldr	r2, [pc, #120]	; 127c8 <_start@@Base+0x159c>
   1274c:	mov	r1, #1
   12750:	ldr	r0, [r6, r0]
   12754:	add	r2, pc, r2
   12758:	ldr	r3, [lr, r7]
   1275c:	ldr	r0, [r0]
   12760:	bl	110b4 <__fprintf_chk@plt>
   12764:	b	12674 <_start@@Base+0x1448>
   12768:	ldr	r0, [pc, #64]	; 127b0 <_start@@Base+0x1584>
   1276c:	mov	r1, #1
   12770:	ldr	r2, [pc, #84]	; 127cc <_start@@Base+0x15a0>
   12774:	ldr	r0, [r6, r0]
   12778:	add	r2, pc, r2
   1277c:	ldr	r0, [r0]
   12780:	bl	110b4 <__fprintf_chk@plt>
   12784:	mvn	r0, #0
   12788:	b	1262c <_start@@Base+0x1400>
   1278c:	bl	10f94 <__stack_chk_fail@plt>
   12790:	andeq	r2, r1, r4, lsr #24
   12794:	strheq	r0, [r0], -ip
   12798:	andeq	r1, r0, r4, ror r3
   1279c:	andeq	r1, r0, r8, asr #7
   127a0:	ldrdeq	r1, [r0], -ip
   127a4:			; <UNDEFINED> instruction: 0x000013b8
   127a8:	andeq	r2, r1, r0, asr #14
   127ac:	andeq	r1, r0, r8, lsr #7
   127b0:	andeq	r0, r0, r0, asr #1
   127b4:	andeq	r1, r0, r0, lsl r2
   127b8:	strdeq	r1, [r0], -r8
   127bc:	andeq	r1, r0, r0, asr r1
   127c0:	andeq	r1, r0, r8, asr #2
   127c4:	muleq	r0, r8, r0
   127c8:	andeq	r1, r0, r0, lsr #1
   127cc:	andeq	r0, r0, r8, lsr #23
   127d0:	ldr	r3, [pc, #164]	; 1287c <_start@@Base+0x1650>
   127d4:	cmp	r0, #3
   127d8:	ldr	r2, [pc, #160]	; 12880 <_start@@Base+0x1654>
   127dc:	add	r3, pc, r3
   127e0:	push	{r4, r5, lr}
   127e4:	sub	sp, sp, #12
   127e8:	ldr	r4, [r3, r2]
   127ec:	mov	r5, r1
   127f0:	ldr	r3, [r4]
   127f4:	str	r3, [sp, #4]
   127f8:	bne	1285c <_start@@Base+0x1630>
   127fc:	ldr	r0, [r1, #8]
   12800:	mov	r1, sp
   12804:	bl	10f58 <mmal_component_create@plt>
   12808:	ldr	r2, [sp]
   1280c:	cmp	r2, #0
   12810:	beq	1283c <_start@@Base+0x1610>
   12814:	ldr	r0, [pc, #104]	; 12884 <_start@@Base+0x1658>
   12818:	add	r0, pc, r0
   1281c:	bl	1100c <puts@plt>
   12820:	ldr	r2, [sp, #4]
   12824:	mov	r0, #0
   12828:	ldr	r3, [r4]
   1282c:	cmp	r2, r3
   12830:	bne	12858 <_start@@Base+0x162c>
   12834:	add	sp, sp, #12
   12838:	pop	{r4, r5, pc}
   1283c:	ldr	r1, [pc, #68]	; 12888 <_start@@Base+0x165c>
   12840:	mov	r3, r0
   12844:	ldr	r2, [r5, #8]
   12848:	mov	r0, #1
   1284c:	add	r1, pc, r1
   12850:	bl	1109c <__printf_chk@plt>
   12854:	b	12820 <_start@@Base+0x15f4>
   12858:	bl	10f94 <__stack_chk_fail@plt>
   1285c:	ldr	r0, [pc, #40]	; 1288c <_start@@Base+0x1660>
   12860:	add	r0, pc, r0
   12864:	bl	1100c <puts@plt>
   12868:	ldr	r0, [pc, #32]	; 12890 <_start@@Base+0x1664>
   1286c:	add	r0, pc, r0
   12870:	bl	1100c <puts@plt>
   12874:	mov	r0, #1
   12878:	bl	11054 <exit@plt>
   1287c:	andeq	r2, r1, ip, lsl r8
   12880:	strheq	r0, [r0], -ip
   12884:	andeq	r1, r0, r4, asr #2
   12888:	andeq	r1, r0, r4, lsr #2
   1288c:	andeq	r1, r0, r4, asr #1
   12890:	ldrdeq	r1, [r0], -ip
   12894:	push	{r4, r5, r6, r7, r8, r9, lr}
   12898:	cmp	r0, #4
   1289c:	ldr	r5, [pc, #420]	; 12a48 <_start@@Base+0x181c>
   128a0:	sub	sp, sp, #164	; 0xa4
   128a4:	ldr	r3, [pc, #416]	; 12a4c <_start@@Base+0x1820>
   128a8:	mov	r7, r0
   128ac:	add	r5, pc, r5
   128b0:	mov	r6, r1
   128b4:	ldr	r8, [r5, r3]
   128b8:	ldr	r3, [r8]
   128bc:	str	r3, [sp, #156]	; 0x9c
   128c0:	bne	12a20 <_start@@Base+0x17f4>
   128c4:	ldr	r0, [r1, #8]
   128c8:	mov	r2, #10
   128cc:	mov	r1, #0
   128d0:	mov	r4, #1000	; 0x3e8
   128d4:	bl	10f40 <strtol@plt>
   128d8:	mov	r1, #0
   128dc:	mov	r2, #10
   128e0:	mul	r4, r4, r0
   128e4:	ldr	r0, [r6, #12]
   128e8:	bl	10f40 <strtol@plt>
   128ec:	ldr	r3, [pc, #348]	; 12a50 <_start@@Base+0x1824>
   128f0:	add	r3, pc, r3
   128f4:	str	r0, [r3]
   128f8:	bl	10f7c <mmal_vc_use@plt>
   128fc:	subs	r9, r0, #0
   12900:	bne	129f8 <_start@@Base+0x17cc>
   12904:	add	r5, sp, #16
   12908:	mov	r1, r9
   1290c:	mov	r2, #140	; 0x8c
   12910:	mov	r0, r5
   12914:	bl	11084 <memset@plt>
   12918:	ldr	r3, [pc, #308]	; 12a54 <_start@@Base+0x1828>
   1291c:	add	r0, sp, #20
   12920:	add	r3, pc, r3
   12924:	str	r3, [sp, #16]
   12928:	bl	110d8 <sigemptyset@plt>
   1292c:	mov	r1, r5
   12930:	mov	r2, r9
   12934:	mov	r0, #14
   12938:	str	r7, [sp, #148]	; 0x94
   1293c:	bl	10fd0 <sigaction@plt>
   12940:	subs	r5, r0, #0
   12944:	bne	129e4 <_start@@Base+0x17b8>
   12948:	movw	r2, #56963	; 0xde83
   1294c:	movt	r2, #17179	; 0x431b
   12950:	asr	r3, r4, #31
   12954:	movw	ip, #16960	; 0x4240
   12958:	smull	r1, lr, r2, r4
   1295c:	movt	ip, #15
   12960:	mov	r1, sp
   12964:	mov	r2, r5
   12968:	str	r5, [sp]
   1296c:	str	r5, [sp, #4]
   12970:	rsb	r3, r3, lr, asr #18
   12974:	str	r3, [sp, #8]
   12978:	mls	r3, ip, r3, r4
   1297c:	str	r3, [sp, #12]
   12980:	bl	10f34 <setitimer@plt>
   12984:	cmp	r0, #0
   12988:	blt	129d0 <_start@@Base+0x17a4>
   1298c:	add	r0, r4, #999424	; 0xf4000
   12990:	add	r0, r0, #576	; 0x240
   12994:	bl	10fe8 <usleep@plt>
   12998:	ldr	r1, [pc, #184]	; 12a58 <_start@@Base+0x182c>
   1299c:	ldr	r2, [r6]
   129a0:	mov	r0, #1
   129a4:	add	r1, pc, r1
   129a8:	bl	1109c <__printf_chk@plt>
   129ac:	bl	10fa0 <mmal_vc_release@plt>
   129b0:	ldr	r2, [sp, #156]	; 0x9c
   129b4:	ldr	r3, [r8]
   129b8:	mov	r0, r5
   129bc:	cmp	r2, r3
   129c0:	bne	129cc <_start@@Base+0x17a0>
   129c4:	add	sp, sp, #164	; 0xa4
   129c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   129cc:	bl	10f94 <__stack_chk_fail@plt>
   129d0:	ldr	r0, [pc, #132]	; 12a5c <_start@@Base+0x1830>
   129d4:	add	r0, pc, r0
   129d8:	bl	10fc4 <perror@plt>
   129dc:	mov	r0, #1
   129e0:	bl	11054 <exit@plt>
   129e4:	ldr	r0, [pc, #116]	; 12a60 <_start@@Base+0x1834>
   129e8:	add	r0, pc, r0
   129ec:	bl	10fc4 <perror@plt>
   129f0:	mov	r0, #1
   129f4:	bl	11054 <exit@plt>
   129f8:	ldr	r0, [pc, #100]	; 12a64 <_start@@Base+0x1838>
   129fc:	mov	r3, r9
   12a00:	ldr	r2, [pc, #96]	; 12a68 <_start@@Base+0x183c>
   12a04:	mov	r1, #1
   12a08:	ldr	r0, [r5, r0]
   12a0c:	add	r2, pc, r2
   12a10:	ldr	r0, [r0]
   12a14:	bl	110b4 <__fprintf_chk@plt>
   12a18:	mov	r0, #1
   12a1c:	bl	11054 <exit@plt>
   12a20:	ldr	r2, [r1]
   12a24:	mov	r0, #1
   12a28:	ldr	r1, [pc, #60]	; 12a6c <_start@@Base+0x1840>
   12a2c:	add	r1, pc, r1
   12a30:	bl	1109c <__printf_chk@plt>
   12a34:	ldr	r0, [pc, #52]	; 12a70 <_start@@Base+0x1844>
   12a38:	add	r0, pc, r0
   12a3c:	bl	1100c <puts@plt>
   12a40:	mov	r0, #1
   12a44:	bl	11054 <exit@plt>
   12a48:	andeq	r2, r1, ip, asr #14
   12a4c:	strheq	r0, [r0], -ip
   12a50:	andeq	r2, r1, r0, ror #15
   12a54:			; <UNDEFINED> instruction: 0xffffeaa0
   12a58:	andeq	r1, r0, ip, asr r0
   12a5c:	andeq	r1, r0, r8, lsl r0
   12a60:	strdeq	r0, [r0], -r8
   12a64:	andeq	r0, r0, r0, asr #1
   12a68:			; <UNDEFINED> instruction: 0x00000fbc
   12a6c:	andeq	r0, r0, r0, ror #30
   12a70:	andeq	r0, r0, r0, lsl #31
   12a74:	push	{r4, r5, r6, r7, lr}
   12a78:	vpush	{d8}
   12a7c:	cmp	r0, #2
   12a80:	ldr	r4, [pc, #888]	; 12e00 <_start@@Base+0x1bd4>
   12a84:	sub	sp, sp, #92	; 0x5c
   12a88:	ldr	r3, [pc, #884]	; 12e04 <_start@@Base+0x1bd8>
   12a8c:	movle	r5, #0
   12a90:	add	r4, pc, r4
   12a94:	ldr	r6, [r4, r3]
   12a98:	ldr	r3, [r6]
   12a9c:	str	r3, [sp, #84]	; 0x54
   12aa0:	ble	12abc <_start@@Base+0x1890>
   12aa4:	ldr	r0, [r1, #8]
   12aa8:	ldr	r1, [pc, #856]	; 12e08 <_start@@Base+0x1bdc>
   12aac:	add	r1, pc, r1
   12ab0:	bl	10fb8 <strcasecmp@plt>
   12ab4:	rsbs	r5, r0, #1
   12ab8:	movcc	r5, #0
   12abc:	add	r0, sp, #12
   12ac0:	bl	11024 <OpenVideoCoreMemory@plt>
   12ac4:	cmp	r0, #0
   12ac8:	blt	12dc4 <_start@@Base+0x1b98>
   12acc:	ldr	r1, [pc, #824]	; 12e0c <_start@@Base+0x1be0>
   12ad0:	add	r2, sp, #16
   12ad4:	ldr	r0, [sp, #12]
   12ad8:	add	r3, sp, #24
   12adc:	add	r1, pc, r1
   12ae0:	bl	1106c <LookupVideoCoreSymbol@plt>
   12ae4:	cmp	r0, #0
   12ae8:	beq	12d38 <_start@@Base+0x1b0c>
   12aec:	ldr	r0, [sp, #12]
   12af0:	add	r1, sp, #20
   12af4:	ldr	r2, [sp, #16]
   12af8:	mov	r3, #4
   12afc:	bl	11060 <ReadVideoCoreMemory@plt>
   12b00:	cmp	r0, #0
   12b04:	beq	12d7c <_start@@Base+0x1b50>
   12b08:	cmp	r5, #0
   12b0c:	add	r5, sp, #28
   12b10:	bne	12c6c <_start@@Base+0x1a40>
   12b14:	mov	r1, r5
   12b18:	ldr	r0, [sp, #12]
   12b1c:	ldr	r2, [sp, #20]
   12b20:	mov	r3, #56	; 0x38
   12b24:	bl	11060 <ReadVideoCoreMemory@plt>
   12b28:	cmp	r0, #0
   12b2c:	beq	12da0 <_start@@Base+0x1b74>
   12b30:	ldr	r3, [sp, #28]
   12b34:	movw	r2, #17740	; 0x454c
   12b38:	movt	r2, #18765	; 0x494d
   12b3c:	cmp	r3, r2
   12b40:	bne	12d5c <_start@@Base+0x1b30>
   12b44:	ldr	r5, [sp, #36]	; 0x24
   12b48:	cmp	r5, #0
   12b4c:	bne	12cfc <_start@@Base+0x1ad0>
   12b50:	mov	r7, r5
   12b54:	vldr	d8, [pc, #660]	; 12df0 <_start@@Base+0x1bc4>
   12b58:	ldr	r4, [pc, #688]	; 12e10 <_start@@Base+0x1be4>
   12b5c:	mov	r3, r5
   12b60:	ldr	r2, [pc, #684]	; 12e14 <_start@@Base+0x1be8>
   12b64:	mov	r0, #1
   12b68:	add	r4, pc, r4
   12b6c:	add	r2, pc, r2
   12b70:	mov	r1, r4
   12b74:	bl	1109c <__printf_chk@plt>
   12b78:	ldr	r2, [pc, #664]	; 12e18 <_start@@Base+0x1bec>
   12b7c:	mov	r1, r4
   12b80:	ldr	r3, [sp, #44]	; 0x2c
   12b84:	add	r2, pc, r2
   12b88:	mov	r0, #1
   12b8c:	bl	1109c <__printf_chk@plt>
   12b90:	ldr	r2, [pc, #644]	; 12e1c <_start@@Base+0x1bf0>
   12b94:	mov	r1, r4
   12b98:	ldr	r3, [sp, #60]	; 0x3c
   12b9c:	add	r2, pc, r2
   12ba0:	mov	r0, #1
   12ba4:	bl	1109c <__printf_chk@plt>
   12ba8:	ldr	r2, [pc, #624]	; 12e20 <_start@@Base+0x1bf4>
   12bac:	mov	r1, r4
   12bb0:	ldr	r3, [sp, #64]	; 0x40
   12bb4:	add	r2, pc, r2
   12bb8:	mov	r0, #1
   12bbc:	bl	1109c <__printf_chk@plt>
   12bc0:	ldr	r2, [pc, #604]	; 12e24 <_start@@Base+0x1bf8>
   12bc4:	mov	r1, r4
   12bc8:	ldr	r3, [sp, #40]	; 0x28
   12bcc:	add	r2, pc, r2
   12bd0:	mov	r0, #1
   12bd4:	bl	1109c <__printf_chk@plt>
   12bd8:	ldr	r2, [pc, #584]	; 12e28 <_start@@Base+0x1bfc>
   12bdc:	mov	r1, r4
   12be0:	ldr	r3, [sp, #52]	; 0x34
   12be4:	add	r2, pc, r2
   12be8:	mov	r0, #1
   12bec:	bl	1109c <__printf_chk@plt>
   12bf0:	ldr	r1, [pc, #564]	; 12e2c <_start@@Base+0x1c00>
   12bf4:	ldr	r2, [pc, #564]	; 12e30 <_start@@Base+0x1c04>
   12bf8:	mov	r3, r7
   12bfc:	add	r1, pc, r1
   12c00:	mov	r0, #1
   12c04:	add	r2, pc, r2
   12c08:	bl	1109c <__printf_chk@plt>
   12c0c:	ldr	r1, [pc, #544]	; 12e34 <_start@@Base+0x1c08>
   12c10:	ldr	r2, [pc, #544]	; 12e38 <_start@@Base+0x1c0c>
   12c14:	vstr	d8, [sp]
   12c18:	add	r1, pc, r1
   12c1c:	mov	r0, #1
   12c20:	add	r2, pc, r2
   12c24:	bl	1109c <__printf_chk@plt>
   12c28:	ldr	r1, [pc, #524]	; 12e3c <_start@@Base+0x1c10>
   12c2c:	ldr	r2, [pc, #524]	; 12e40 <_start@@Base+0x1c14>
   12c30:	mov	r0, #1
   12c34:	add	r1, pc, r1
   12c38:	ldr	r3, [sp, #80]	; 0x50
   12c3c:	add	r2, pc, r2
   12c40:	bl	1109c <__printf_chk@plt>
   12c44:	ldr	r0, [sp, #12]
   12c48:	bl	11120 <CloseVideoCoreMemory@plt>
   12c4c:	mov	r0, #0
   12c50:	ldr	r2, [sp, #84]	; 0x54
   12c54:	ldr	r3, [r6]
   12c58:	cmp	r2, r3
   12c5c:	bne	12dec <_start@@Base+0x1bc0>
   12c60:	add	sp, sp, #92	; 0x5c
   12c64:	vpop	{d8}
   12c68:	pop	{r4, r5, r6, r7, pc}
   12c6c:	ldr	r0, [sp, #12]
   12c70:	mov	r3, #56	; 0x38
   12c74:	ldr	r2, [sp, #20]
   12c78:	mov	r1, r5
   12c7c:	mov	ip, #0
   12c80:	movw	lr, #17740	; 0x454c
   12c84:	str	ip, [sp, #32]
   12c88:	movt	lr, #18765	; 0x494d
   12c8c:	str	ip, [sp, #36]	; 0x24
   12c90:	str	lr, [sp, #28]
   12c94:	str	ip, [sp, #40]	; 0x28
   12c98:	str	ip, [sp, #44]	; 0x2c
   12c9c:	str	ip, [sp, #48]	; 0x30
   12ca0:	str	ip, [sp, #52]	; 0x34
   12ca4:	str	ip, [sp, #56]	; 0x38
   12ca8:	str	ip, [sp, #60]	; 0x3c
   12cac:	str	ip, [sp, #64]	; 0x40
   12cb0:	str	ip, [sp, #68]	; 0x44
   12cb4:	str	ip, [sp, #72]	; 0x48
   12cb8:	str	ip, [sp, #76]	; 0x4c
   12cbc:	str	ip, [sp, #80]	; 0x50
   12cc0:	bl	110f0 <WriteVideoCoreMemory@plt>
   12cc4:	cmp	r0, #0
   12cc8:	bne	12b14 <_start@@Base+0x18e8>
   12ccc:	ldr	r0, [pc, #368]	; 12e44 <_start@@Base+0x1c18>
   12cd0:	mov	r1, #1
   12cd4:	ldr	r2, [pc, #364]	; 12e48 <_start@@Base+0x1c1c>
   12cd8:	ldr	r3, [sp, #20]
   12cdc:	ldr	r0, [r4, r0]
   12ce0:	add	r2, pc, r2
   12ce4:	ldr	r0, [r0]
   12ce8:	bl	110b4 <__fprintf_chk@plt>
   12cec:	ldr	r0, [sp, #12]
   12cf0:	bl	11120 <CloseVideoCoreMemory@plt>
   12cf4:	mvn	r0, #0
   12cf8:	b	12c50 <_start@@Base+0x1a24>
   12cfc:	ldr	r0, [sp, #56]	; 0x38
   12d00:	mov	r1, r5
   12d04:	bl	12e60 <_start@@Base+0x1c34>
   12d08:	vmov	s15, r5
   12d0c:	vldr	d6, [pc, #228]	; 12df8 <_start@@Base+0x1bcc>
   12d10:	ldr	r2, [sp, #76]	; 0x4c
   12d14:	vcvt.f64.u32	d5, s15
   12d18:	ldr	r3, [sp, #72]	; 0x48
   12d1c:	rsb	r3, r3, r2
   12d20:	vmul.f64	d6, d5, d6
   12d24:	vmov	s11, r3
   12d28:	vcvt.f64.u32	d7, s11
   12d2c:	mov	r7, r0
   12d30:	vdiv.f64	d8, d6, d7
   12d34:	b	12b58 <_start@@Base+0x192c>
   12d38:	ldr	r3, [pc, #260]	; 12e44 <_start@@Base+0x1c18>
   12d3c:	mov	r1, #1
   12d40:	ldr	r0, [pc, #260]	; 12e4c <_start@@Base+0x1c20>
   12d44:	mov	r2, #38	; 0x26
   12d48:	ldr	r3, [r4, r3]
   12d4c:	add	r0, pc, r0
   12d50:	ldr	r3, [r3]
   12d54:	bl	10fdc <fwrite@plt>
   12d58:	b	12cec <_start@@Base+0x1ac0>
   12d5c:	ldr	r0, [pc, #224]	; 12e44 <_start@@Base+0x1c18>
   12d60:	mov	r1, #1
   12d64:	ldr	r2, [pc, #228]	; 12e50 <_start@@Base+0x1c24>
   12d68:	ldr	r0, [r4, r0]
   12d6c:	add	r2, pc, r2
   12d70:	ldr	r0, [r0]
   12d74:	bl	110b4 <__fprintf_chk@plt>
   12d78:	b	12cec <_start@@Base+0x1ac0>
   12d7c:	ldr	r3, [pc, #192]	; 12e44 <_start@@Base+0x1c18>
   12d80:	mov	r1, #1
   12d84:	ldr	r0, [pc, #200]	; 12e54 <_start@@Base+0x1c28>
   12d88:	mov	r2, #39	; 0x27
   12d8c:	ldr	r3, [r4, r3]
   12d90:	add	r0, pc, r0
   12d94:	ldr	r3, [r3]
   12d98:	bl	10fdc <fwrite@plt>
   12d9c:	b	12cec <_start@@Base+0x1ac0>
   12da0:	ldr	r0, [pc, #156]	; 12e44 <_start@@Base+0x1c18>
   12da4:	mov	r1, #1
   12da8:	ldr	r2, [pc, #168]	; 12e58 <_start@@Base+0x1c2c>
   12dac:	ldr	r3, [sp, #20]
   12db0:	ldr	r0, [r4, r0]
   12db4:	add	r2, pc, r2
   12db8:	ldr	r0, [r0]
   12dbc:	bl	110b4 <__fprintf_chk@plt>
   12dc0:	b	12cec <_start@@Base+0x1ac0>
   12dc4:	ldr	ip, [pc, #120]	; 12e44 <_start@@Base+0x1c18>
   12dc8:	mov	r3, r0
   12dcc:	ldr	r2, [pc, #136]	; 12e5c <_start@@Base+0x1c30>
   12dd0:	mov	r1, #1
   12dd4:	ldr	r0, [r4, ip]
   12dd8:	add	r2, pc, r2
   12ddc:	ldr	r0, [r0]
   12de0:	bl	110b4 <__fprintf_chk@plt>
   12de4:	mvn	r0, #0
   12de8:	b	12c50 <_start@@Base+0x1a24>
   12dec:	bl	10f94 <__stack_chk_fail@plt>
	...
   12dfc:	smlawbmi	lr, r0, r4, r8
   12e00:	andeq	r2, r1, r8, ror #10
   12e04:	strheq	r0, [r0], -ip
   12e08:	ldrdeq	r0, [r0], -r8
   12e0c:	andeq	r0, r0, r0, asr #30
   12e10:	andeq	r0, r0, r4, ror #30
   12e14:	andeq	r0, r0, ip, ror #30
   12e18:	andeq	r0, r0, r0, ror #30
   12e1c:	andeq	r0, r0, r8, asr pc
   12e20:	andeq	r0, r0, r0, asr pc
   12e24:	andeq	r0, r0, r8, asr #30
   12e28:	ldrdeq	r1, [r0], -ip
   12e2c:	andeq	r0, r0, r0, lsr pc
   12e30:	andeq	r0, r0, r4, lsr pc
   12e34:	andeq	r0, r0, ip, lsr pc
   12e38:	andeq	r0, r0, r4, asr #30
   12e3c:	andeq	r0, r0, r4, asr #30
   12e40:	andeq	r0, r0, ip, asr #30
   12e44:	andeq	r0, r0, r0, asr #1
   12e48:	muleq	r0, ip, sp
   12e4c:	andeq	r0, r0, r0, ror #25
   12e50:	andeq	r0, r0, r0, asr sp
   12e54:	andeq	r0, r0, r4, asr #25
   12e58:	andeq	r0, r0, r8, ror #25
   12e5c:	andeq	r0, r0, r8, asr #10
   12e60:	subs	r2, r1, #1
   12e64:	bxeq	lr
   12e68:	bcc	13040 <_start@@Base+0x1e14>
   12e6c:	cmp	r0, r1
   12e70:	bls	13024 <_start@@Base+0x1df8>
   12e74:	tst	r1, r2
   12e78:	beq	13030 <_start@@Base+0x1e04>
   12e7c:	clz	r3, r0
   12e80:	clz	r2, r1
   12e84:	sub	r3, r2, r3
   12e88:	rsbs	r3, r3, #31
   12e8c:	addne	r3, r3, r3, lsl #1
   12e90:	mov	r2, #0
   12e94:	addne	pc, pc, r3, lsl #2
   12e98:	nop	{0}
   12e9c:	cmp	r0, r1, lsl #31
   12ea0:	adc	r2, r2, r2
   12ea4:	subcs	r0, r0, r1, lsl #31
   12ea8:	cmp	r0, r1, lsl #30
   12eac:	adc	r2, r2, r2
   12eb0:	subcs	r0, r0, r1, lsl #30
   12eb4:	cmp	r0, r1, lsl #29
   12eb8:	adc	r2, r2, r2
   12ebc:	subcs	r0, r0, r1, lsl #29
   12ec0:	cmp	r0, r1, lsl #28
   12ec4:	adc	r2, r2, r2
   12ec8:	subcs	r0, r0, r1, lsl #28
   12ecc:	cmp	r0, r1, lsl #27
   12ed0:	adc	r2, r2, r2
   12ed4:	subcs	r0, r0, r1, lsl #27
   12ed8:	cmp	r0, r1, lsl #26
   12edc:	adc	r2, r2, r2
   12ee0:	subcs	r0, r0, r1, lsl #26
   12ee4:	cmp	r0, r1, lsl #25
   12ee8:	adc	r2, r2, r2
   12eec:	subcs	r0, r0, r1, lsl #25
   12ef0:	cmp	r0, r1, lsl #24
   12ef4:	adc	r2, r2, r2
   12ef8:	subcs	r0, r0, r1, lsl #24
   12efc:	cmp	r0, r1, lsl #23
   12f00:	adc	r2, r2, r2
   12f04:	subcs	r0, r0, r1, lsl #23
   12f08:	cmp	r0, r1, lsl #22
   12f0c:	adc	r2, r2, r2
   12f10:	subcs	r0, r0, r1, lsl #22
   12f14:	cmp	r0, r1, lsl #21
   12f18:	adc	r2, r2, r2
   12f1c:	subcs	r0, r0, r1, lsl #21
   12f20:	cmp	r0, r1, lsl #20
   12f24:	adc	r2, r2, r2
   12f28:	subcs	r0, r0, r1, lsl #20
   12f2c:	cmp	r0, r1, lsl #19
   12f30:	adc	r2, r2, r2
   12f34:	subcs	r0, r0, r1, lsl #19
   12f38:	cmp	r0, r1, lsl #18
   12f3c:	adc	r2, r2, r2
   12f40:	subcs	r0, r0, r1, lsl #18
   12f44:	cmp	r0, r1, lsl #17
   12f48:	adc	r2, r2, r2
   12f4c:	subcs	r0, r0, r1, lsl #17
   12f50:	cmp	r0, r1, lsl #16
   12f54:	adc	r2, r2, r2
   12f58:	subcs	r0, r0, r1, lsl #16
   12f5c:	cmp	r0, r1, lsl #15
   12f60:	adc	r2, r2, r2
   12f64:	subcs	r0, r0, r1, lsl #15
   12f68:	cmp	r0, r1, lsl #14
   12f6c:	adc	r2, r2, r2
   12f70:	subcs	r0, r0, r1, lsl #14
   12f74:	cmp	r0, r1, lsl #13
   12f78:	adc	r2, r2, r2
   12f7c:	subcs	r0, r0, r1, lsl #13
   12f80:	cmp	r0, r1, lsl #12
   12f84:	adc	r2, r2, r2
   12f88:	subcs	r0, r0, r1, lsl #12
   12f8c:	cmp	r0, r1, lsl #11
   12f90:	adc	r2, r2, r2
   12f94:	subcs	r0, r0, r1, lsl #11
   12f98:	cmp	r0, r1, lsl #10
   12f9c:	adc	r2, r2, r2
   12fa0:	subcs	r0, r0, r1, lsl #10
   12fa4:	cmp	r0, r1, lsl #9
   12fa8:	adc	r2, r2, r2
   12fac:	subcs	r0, r0, r1, lsl #9
   12fb0:	cmp	r0, r1, lsl #8
   12fb4:	adc	r2, r2, r2
   12fb8:	subcs	r0, r0, r1, lsl #8
   12fbc:	cmp	r0, r1, lsl #7
   12fc0:	adc	r2, r2, r2
   12fc4:	subcs	r0, r0, r1, lsl #7
   12fc8:	cmp	r0, r1, lsl #6
   12fcc:	adc	r2, r2, r2
   12fd0:	subcs	r0, r0, r1, lsl #6
   12fd4:	cmp	r0, r1, lsl #5
   12fd8:	adc	r2, r2, r2
   12fdc:	subcs	r0, r0, r1, lsl #5
   12fe0:	cmp	r0, r1, lsl #4
   12fe4:	adc	r2, r2, r2
   12fe8:	subcs	r0, r0, r1, lsl #4
   12fec:	cmp	r0, r1, lsl #3
   12ff0:	adc	r2, r2, r2
   12ff4:	subcs	r0, r0, r1, lsl #3
   12ff8:	cmp	r0, r1, lsl #2
   12ffc:	adc	r2, r2, r2
   13000:	subcs	r0, r0, r1, lsl #2
   13004:	cmp	r0, r1, lsl #1
   13008:	adc	r2, r2, r2
   1300c:	subcs	r0, r0, r1, lsl #1
   13010:	cmp	r0, r1
   13014:	adc	r2, r2, r2
   13018:	subcs	r0, r0, r1
   1301c:	mov	r0, r2
   13020:	bx	lr
   13024:	moveq	r0, #1
   13028:	movne	r0, #0
   1302c:	bx	lr
   13030:	clz	r2, r1
   13034:	rsb	r2, r2, #31
   13038:	lsr	r0, r0, r2
   1303c:	bx	lr
   13040:	cmp	r0, #0
   13044:	mvnne	r0, #0
   13048:	b	1306c <_start@@Base+0x1e40>
   1304c:	cmp	r1, #0
   13050:	beq	13040 <_start@@Base+0x1e14>
   13054:	push	{r0, r1, lr}
   13058:	bl	12e60 <_start@@Base+0x1c34>
   1305c:	pop	{r1, r2, lr}
   13060:	mul	r3, r2, r0
   13064:	sub	r1, r1, r3
   13068:	bx	lr
   1306c:	push	{r1, lr}
   13070:	mov	r0, #8
   13074:	bl	10f28 <raise@plt>
   13078:	pop	{r1, pc}

0001307c <__libc_csu_init@@Base>:
   1307c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   13080:	mov	r7, r0
   13084:	ldr	r6, [pc, #76]	; 130d8 <__libc_csu_init@@Base+0x5c>
   13088:	mov	r8, r1
   1308c:	ldr	r5, [pc, #72]	; 130dc <__libc_csu_init@@Base+0x60>
   13090:	mov	r9, r2
   13094:	add	r6, pc, r6
   13098:	bl	10f08 <_init@@Base>
   1309c:	add	r5, pc, r5
   130a0:	rsb	r6, r5, r6
   130a4:	asrs	r6, r6, #2
   130a8:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   130ac:	sub	r5, r5, #4
   130b0:	mov	r4, #0
   130b4:	add	r4, r4, #1
   130b8:	ldr	r3, [r5, #4]!
   130bc:	mov	r0, r7
   130c0:	mov	r1, r8
   130c4:	mov	r2, r9
   130c8:	blx	r3
   130cc:	cmp	r4, r6
   130d0:	bne	130b4 <__libc_csu_init@@Base+0x38>
   130d4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   130d8:	strdeq	r1, [r1], -ip
   130dc:	strdeq	r1, [r1], -r0

000130e0 <__libc_csu_fini@@Base>:
   130e0:	bx	lr

Disassembly of section .fini:

000130e4 <_fini@@Base>:
   130e4:	push	{r3, lr}
   130e8:	pop	{r3, pc}
