
centos-preinstalled/showconsolefont:     file format elf32-littlearm


Disassembly of section .init:

000109c0 <.init>:
   109c0:	push	{r3, lr}
   109c4:	bl	112c8 <close@plt+0x768>
   109c8:	pop	{r3, pc}

Disassembly of section .plt:

000109cc <raise@plt-0x14>:
   109cc:	push	{lr}		; (str lr, [sp, #-4]!)
   109d0:	ldr	lr, [pc, #4]	; 109dc <raise@plt-0x4>
   109d4:	add	lr, pc, lr
   109d8:	ldr	pc, [lr, #8]!
   109dc:	andeq	r2, r1, r4, lsr #12

000109e0 <raise@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1572]!	; 0x624

000109ec <strcmp@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #73728	; 0x12000
   109f4:	ldr	pc, [ip, #1564]!	; 0x61c

000109f8 <fflush@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #73728	; 0x12000
   10a00:	ldr	pc, [ip, #1556]!	; 0x614

00010a04 <free@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1548]!	; 0x60c

00010a10 <strndup@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1540]!	; 0x604

00010a1c <memcpy@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a28 <dcgettext@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #73728	; 0x12000
   10a30:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a34 <__stack_chk_fail@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a40 <realloc@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a4c <textdomain@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a58 <perror@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #73728	; 0x12000
   10a60:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a64 <_IO_putc@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a70 <fwrite@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a7c <ioctl@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a88 <usleep@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #73728	; 0x12000
   10a90:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a94 <malloc@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #73728	; 0x12000
   10a9c:	ldr	pc, [ip, #1452]!	; 0x5ac

00010aa0 <__libc_start_main@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1444]!	; 0x5a4

00010aac <__gmon_start__@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #73728	; 0x12000
   10ab4:	ldr	pc, [ip, #1436]!	; 0x59c

00010ab8 <open@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #73728	; 0x12000
   10ac0:	ldr	pc, [ip, #1428]!	; 0x594

00010ac4 <exit@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #73728	; 0x12000
   10acc:	ldr	pc, [ip, #1420]!	; 0x58c

00010ad0 <getopt@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #73728	; 0x12000
   10ad8:	ldr	pc, [ip, #1412]!	; 0x584

00010adc <__errno_location@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #73728	; 0x12000
   10ae4:	ldr	pc, [ip, #1404]!	; 0x57c

00010ae8 <__strdup@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #73728	; 0x12000
   10af0:	ldr	pc, [ip, #1396]!	; 0x574

00010af4 <memset@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #73728	; 0x12000
   10afc:	ldr	pc, [ip, #1388]!	; 0x56c

00010b00 <__printf_chk@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #73728	; 0x12000
   10b08:	ldr	pc, [ip, #1380]!	; 0x564

00010b0c <__fprintf_chk@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #73728	; 0x12000
   10b14:	ldr	pc, [ip, #1372]!	; 0x55c

00010b18 <setlocale@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #73728	; 0x12000
   10b20:	ldr	pc, [ip, #1364]!	; 0x554

00010b24 <strrchr@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #73728	; 0x12000
   10b2c:	ldr	pc, [ip, #1356]!	; 0x54c

00010b30 <fputc@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #73728	; 0x12000
   10b38:	ldr	pc, [ip, #1348]!	; 0x544

00010b3c <bindtextdomain@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #73728	; 0x12000
   10b44:	ldr	pc, [ip, #1340]!	; 0x53c

00010b48 <isatty@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #73728	; 0x12000
   10b50:	ldr	pc, [ip, #1332]!	; 0x534

00010b54 <abort@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #73728	; 0x12000
   10b5c:	ldr	pc, [ip, #1324]!	; 0x52c

00010b60 <close@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #73728	; 0x12000
   10b68:	ldr	pc, [ip, #1316]!	; 0x524

Disassembly of section .text:

00010b6c <.text>:
   10b6c:	movw	r3, #12452	; 0x30a4
   10b70:	movt	r3, #2
   10b74:	push	{r4, lr}
   10b78:	mov	r2, #5
   10b7c:	movw	r1, #9948	; 0x26dc
   10b80:	mov	r0, #0
   10b84:	movt	r1, #1
   10b88:	ldr	r4, [r3]
   10b8c:	bl	10a28 <dcgettext@plt>
   10b90:	movw	r3, #12492	; 0x30cc
   10b94:	movt	r3, #2
   10b98:	mov	r1, #1
   10b9c:	ldr	r3, [r3]
   10ba0:	mov	r2, r0
   10ba4:	mov	r0, r4
   10ba8:	bl	10b0c <__fprintf_chk@plt>
   10bac:	mov	r0, #71	; 0x47
   10bb0:	bl	10ac4 <exit@plt>
   10bb4:	movw	r3, #12440	; 0x3098
   10bb8:	movt	r3, #2
   10bbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bc0:	sub	sp, sp, #324	; 0x144
   10bc4:	ldr	r4, [r1]
   10bc8:	mov	r7, r0
   10bcc:	ldr	r3, [r3]
   10bd0:	mov	r5, r1
   10bd4:	mov	r1, #47	; 0x2f
   10bd8:	mov	r0, r4
   10bdc:	str	r3, [sp, #316]	; 0x13c
   10be0:	bl	10b24 <strrchr@plt>
   10be4:	movw	r1, #9620	; 0x2594
   10be8:	movt	r1, #1
   10bec:	cmp	r0, #0
   10bf0:	addne	r3, r0, #1
   10bf4:	mov	r0, #6
   10bf8:	moveq	r3, r4
   10bfc:	movw	r4, #12492	; 0x30cc
   10c00:	movt	r4, #2
   10c04:	str	r3, [r4]
   10c08:	bl	10b18 <setlocale@plt>
   10c0c:	movw	r0, #9496	; 0x2518
   10c10:	movw	r1, #9500	; 0x251c
   10c14:	movt	r0, #1
   10c18:	movt	r1, #1
   10c1c:	bl	10b3c <bindtextdomain@plt>
   10c20:	movw	r0, #9496	; 0x2518
   10c24:	movt	r0, #1
   10c28:	bl	10a4c <textdomain@plt>
   10c2c:	cmp	r7, #2
   10c30:	beq	10c98 <close@plt+0x138>
   10c34:	mov	r6, #0
   10c38:	movw	r8, #12464	; 0x30b0
   10c3c:	movt	r8, #2
   10c40:	mov	r9, r6
   10c44:	mov	sl, r6
   10c48:	movw	r2, #9556	; 0x2554
   10c4c:	mov	r0, r7
   10c50:	movt	r2, #1
   10c54:	mov	r1, r5
   10c58:	bl	10ad0 <getopt@plt>
   10c5c:	cmn	r0, #1
   10c60:	beq	10d0c <close@plt+0x1ac>
   10c64:	cmp	r0, #105	; 0x69
   10c68:	beq	10c80 <close@plt+0x120>
   10c6c:	cmp	r0, #118	; 0x76
   10c70:	beq	10c90 <close@plt+0x130>
   10c74:	cmp	r0, #67	; 0x43
   10c78:	beq	10c88 <close@plt+0x128>
   10c7c:	bl	113c0 <close@plt+0x860>
   10c80:	mov	r9, #1
   10c84:	b	10c48 <close@plt+0xe8>
   10c88:	ldr	sl, [r8]
   10c8c:	b	10c48 <close@plt+0xe8>
   10c90:	mov	r6, #1
   10c94:	b	10c48 <close@plt+0xe8>
   10c98:	ldr	r0, [r5, #4]
   10c9c:	ldrb	r3, [r0]
   10ca0:	cmp	r3, #45	; 0x2d
   10ca4:	bne	10cf4 <close@plt+0x194>
   10ca8:	ldrb	r3, [r0, #1]
   10cac:	cmp	r3, #86	; 0x56
   10cb0:	bne	10cf4 <close@plt+0x194>
   10cb4:	ldrb	r3, [r0, #2]
   10cb8:	cmp	r3, #0
   10cbc:	bne	10cf4 <close@plt+0x194>
   10cc0:	mov	r2, #5
   10cc4:	movw	r1, #9532	; 0x253c
   10cc8:	mov	r0, #0
   10ccc:	movt	r1, #1
   10cd0:	bl	10a28 <dcgettext@plt>
   10cd4:	ldr	r2, [r4]
   10cd8:	movw	r3, #9544	; 0x2548
   10cdc:	movt	r3, #1
   10ce0:	mov	r1, r0
   10ce4:	mov	r0, #1
   10ce8:	bl	10b00 <__printf_chk@plt>
   10cec:	mov	r0, #0
   10cf0:	bl	10ac4 <exit@plt>
   10cf4:	movw	r1, #9520	; 0x2530
   10cf8:	movt	r1, #1
   10cfc:	bl	109ec <strcmp@plt>
   10d00:	cmp	r0, #0
   10d04:	beq	10cc0 <close@plt+0x160>
   10d08:	b	10c34 <close@plt+0xd4>
   10d0c:	movw	r3, #12448	; 0x30a0
   10d10:	movt	r3, #2
   10d14:	ldr	r3, [r3]
   10d18:	cmp	r3, r7
   10d1c:	bne	10c7c <close@plt+0x11c>
   10d20:	mov	r0, sl
   10d24:	movw	r3, #12472	; 0x30b8
   10d28:	str	r3, [sp, #20]
   10d2c:	bl	11598 <close@plt+0xa38>
   10d30:	ldr	ip, [sp, #20]
   10d34:	movw	r1, #19268	; 0x4b44
   10d38:	add	r2, sp, #48	; 0x30
   10d3c:	movt	ip, #2
   10d40:	str	ip, [sp, #20]
   10d44:	str	r0, [ip, #4]
   10d48:	bl	10a7c <ioctl@plt>
   10d4c:	subs	ip, r0, #0
   10d50:	bne	11218 <close@plt+0x6b8>
   10d54:	ldr	r8, [sp, #48]	; 0x30
   10d58:	movw	r2, #9492	; 0x2514
   10d5c:	movw	r3, #9488	; 0x2510
   10d60:	movt	r2, #1
   10d64:	cmp	r8, #3
   10d68:	movt	r3, #1
   10d6c:	movne	r8, r2
   10d70:	moveq	r8, r3
   10d74:	cmp	r9, #0
   10d78:	beq	10e28 <close@plt+0x2c8>
   10d7c:	ldr	r3, [sp, #20]
   10d80:	add	r2, sp, #320	; 0x140
   10d84:	add	lr, sp, #36	; 0x24
   10d88:	mov	r1, ip
   10d8c:	str	ip, [r2, #-276]!	; 0xfffffeec
   10d90:	ldr	r0, [r3, #4]
   10d94:	add	r3, sp, #40	; 0x28
   10d98:	str	lr, [sp]
   10d9c:	str	ip, [sp, #36]	; 0x24
   10da0:	str	ip, [sp, #40]	; 0x28
   10da4:	bl	11acc <close@plt+0xf6c>
   10da8:	subs	r4, r0, #0
   10dac:	bne	111d0 <close@plt+0x670>
   10db0:	cmp	r6, #0
   10db4:	beq	1122c <close@plt+0x6cc>
   10db8:	mov	r2, #5
   10dbc:	movw	r1, #9576	; 0x2568
   10dc0:	movt	r1, #1
   10dc4:	bl	10a28 <dcgettext@plt>
   10dc8:	ldr	r2, [sp, #44]	; 0x2c
   10dcc:	mov	r1, r0
   10dd0:	mov	r0, #1
   10dd4:	bl	10b00 <__printf_chk@plt>
   10dd8:	mov	r2, #5
   10ddc:	mov	r0, r4
   10de0:	movw	r1, #9600	; 0x2580
   10de4:	movt	r1, #1
   10de8:	bl	10a28 <dcgettext@plt>
   10dec:	ldr	r2, [sp, #40]	; 0x28
   10df0:	mov	r1, r0
   10df4:	mov	r0, #1
   10df8:	bl	10b00 <__printf_chk@plt>
   10dfc:	mov	r2, #5
   10e00:	mov	r0, r4
   10e04:	movw	r1, #9624	; 0x2598
   10e08:	movt	r1, #1
   10e0c:	bl	10a28 <dcgettext@plt>
   10e10:	ldr	r2, [sp, #36]	; 0x24
   10e14:	mov	r1, r0
   10e18:	mov	r0, #1
   10e1c:	bl	10b00 <__printf_chk@plt>
   10e20:	mov	r0, #0
   10e24:	bl	113fc <close@plt+0x89c>
   10e28:	ldr	ip, [sp, #20]
   10e2c:	movw	r1, #13016	; 0x32d8
   10e30:	movt	r1, #2
   10e34:	ldr	r0, [ip, #4]
   10e38:	bl	11760 <close@plt+0xc00>
   10e3c:	cmp	r0, #0
   10e40:	bne	11280 <close@plt+0x720>
   10e44:	ldr	ip, [sp, #20]
   10e48:	mov	r3, r9
   10e4c:	ldr	r2, [pc, #1076]	; 11288 <close@plt+0x728>
   10e50:	mov	r1, #1
   10e54:	str	r1, [ip]
   10e58:	strh	r3, [r2, #2]!
   10e5c:	add	r3, r3, #1
   10e60:	cmp	r3, #256	; 0x100
   10e64:	bne	10e58 <close@plt+0x2f8>
   10e68:	ldr	r3, [sp, #20]
   10e6c:	movw	r1, #12504	; 0x30d8
   10e70:	movt	r1, #2
   10e74:	movw	r5, #12472	; 0x30b8
   10e78:	movt	r5, #2
   10e7c:	ldr	r0, [r3, #4]
   10e80:	bl	1178c <close@plt+0xc2c>
   10e84:	cmp	r0, #0
   10e88:	bne	11250 <close@plt+0x6f0>
   10e8c:	add	r7, sp, #52	; 0x34
   10e90:	ldr	r0, [r5, #4]
   10e94:	mov	r1, r7
   10e98:	bl	117b8 <close@plt+0xc58>
   10e9c:	subs	sl, r0, #0
   10ea0:	bne	111d0 <close@plt+0x670>
   10ea4:	ldm	r7, {r0, r1}
   10ea8:	movw	r3, #12496	; 0x30d0
   10eac:	movt	r3, #2
   10eb0:	mov	r9, #1
   10eb4:	str	r9, [r5, #8]
   10eb8:	stm	r3, {r0, r1}
   10ebc:	ldr	r0, [r5, #4]
   10ec0:	bl	11cd4 <close@plt+0x1174>
   10ec4:	cmp	r6, #0
   10ec8:	mov	r7, r0
   10ecc:	beq	10ef4 <close@plt+0x394>
   10ed0:	mov	r2, #5
   10ed4:	mov	r0, sl
   10ed8:	movw	r1, #9696	; 0x25e0
   10edc:	movt	r1, #1
   10ee0:	bl	10a28 <dcgettext@plt>
   10ee4:	mov	r2, r7
   10ee8:	mov	r1, r0
   10eec:	mov	r0, r9
   10ef0:	bl	10b00 <__printf_chk@plt>
   10ef4:	cmp	r7, #256	; 0x100
   10ef8:	ble	111ec <close@plt+0x68c>
   10efc:	add	r3, r7, #31
   10f00:	movw	r6, #9752	; 0x2618
   10f04:	movt	r6, #1
   10f08:	mov	r1, #32
   10f0c:	mov	r2, #2
   10f10:	asr	r3, r3, #5
   10f14:	str	r1, [sp, #36]	; 0x24
   10f18:	str	r2, [sp, #44]	; 0x2c
   10f1c:	str	r3, [sp, #40]	; 0x28
   10f20:	movw	r3, #12456	; 0x30a8
   10f24:	movt	r3, #2
   10f28:	mov	r5, #0
   10f2c:	str	r4, [sp, #28]
   10f30:	mov	sl, r5
   10f34:	mov	r4, r3
   10f38:	movw	ip, #12484	; 0x30c4
   10f3c:	movt	ip, #2
   10f40:	str	ip, [sp, #24]
   10f44:	ldr	r9, [sp, #40]	; 0x28
   10f48:	cmp	r5, r9
   10f4c:	bge	10e20 <close@plt+0x2c0>
   10f50:	ldr	fp, [sp, #44]	; 0x2c
   10f54:	mov	r0, r5
   10f58:	mov	r1, fp
   10f5c:	bl	12280 <close@plt+0x1720>
   10f60:	cmp	r1, #0
   10f64:	bne	1104c <close@plt+0x4ec>
   10f68:	add	lr, r5, fp
   10f6c:	mov	fp, r1
   10f70:	cmp	r5, lr
   10f74:	bge	10fc4 <close@plt+0x464>
   10f78:	ldr	r0, [sp, #36]	; 0x24
   10f7c:	mov	r1, r5
   10f80:	cmp	r0, #0
   10f84:	ble	10fb8 <close@plt+0x458>
   10f88:	sub	r3, fp, #1
   10f8c:	add	r2, sp, #60	; 0x3c
   10f90:	add	fp, fp, r0
   10f94:	str	r1, [sp, #16]
   10f98:	add	r3, r2, r3, lsl #2
   10f9c:	add	r2, sp, #56	; 0x38
   10fa0:	add	ip, r2, fp, lsl #2
   10fa4:	mov	r2, r1
   10fa8:	str	r2, [r3, #4]!
   10fac:	cmp	r3, ip
   10fb0:	add	r2, r2, r9
   10fb4:	bne	10fa8 <close@plt+0x448>
   10fb8:	add	r1, r1, #1
   10fbc:	cmp	r1, lr
   10fc0:	bne	10f80 <close@plt+0x420>
   10fc4:	ldr	ip, [sp, #24]
   10fc8:	ldrh	r3, [ip]
   10fcc:	cmp	r3, #0
   10fd0:	beq	11170 <close@plt+0x610>
   10fd4:	ldr	ip, [sp, #24]
   10fd8:	mov	r3, #0
   10fdc:	mov	r2, r3
   10fe0:	ldr	r1, [ip, #4]
   10fe4:	add	r0, r1, r3
   10fe8:	strh	r2, [r0, #2]
   10fec:	add	r2, r2, #1
   10ff0:	cmp	r2, #512	; 0x200
   10ff4:	strh	sl, [r1, r3]
   10ff8:	add	r3, r3, #4
   10ffc:	bne	10fe4 <close@plt+0x484>
   11000:	cmp	fp, #0
   11004:	addgt	ip, sp, #60	; 0x3c
   11008:	movgt	r3, #0
   1100c:	ble	1102c <close@plt+0x4cc>
   11010:	ldr	r2, [ip, r3, lsl #2]
   11014:	add	r0, r3, #33	; 0x21
   11018:	add	r3, r3, #1
   1101c:	cmp	r3, fp
   11020:	lsl	r2, r2, #2
   11024:	strh	r0, [r1, r2]
   11028:	bne	11010 <close@plt+0x4b0>
   1102c:	ldr	r3, [sp, #20]
   11030:	movw	r2, #12484	; 0x30c4
   11034:	mov	r1, #0
   11038:	movt	r2, #2
   1103c:	ldr	r0, [r3, #4]
   11040:	bl	1191c <close@plt+0xdbc>
   11044:	cmp	r0, #0
   11048:	bne	111d0 <close@plt+0x670>
   1104c:	movw	r1, #9740	; 0x260c
   11050:	mov	r0, #1
   11054:	movt	r1, #1
   11058:	mov	r2, r8
   1105c:	bl	10b00 <__printf_chk@plt>
   11060:	ldr	r3, [sp, #36]	; 0x24
   11064:	cmp	r3, #0
   11068:	ble	11124 <close@plt+0x5c4>
   1106c:	cmp	r5, r7
   11070:	bge	11124 <close@plt+0x5c4>
   11074:	ldr	r1, [sp, #44]	; 0x2c
   11078:	mov	r0, r5
   1107c:	str	r3, [sp, #12]
   11080:	bl	12280 <close@plt+0x1720>
   11084:	ldr	r3, [sp, #12]
   11088:	movw	ip, #12456	; 0x30a8
   1108c:	movt	ip, #2
   11090:	str	ip, [sp, #16]
   11094:	mov	fp, #0
   11098:	mul	r0, r3, r1
   1109c:	ldr	r1, [r4]
   110a0:	add	r0, r0, #33	; 0x21
   110a4:	bl	10a64 <_IO_putc@plt>
   110a8:	mov	r0, #1
   110ac:	mov	r1, r6
   110b0:	mov	r2, r8
   110b4:	bl	10b00 <__printf_chk@plt>
   110b8:	ldr	r9, [sp, #36]	; 0x24
   110bc:	add	fp, fp, #1
   110c0:	cmp	r9, fp
   110c4:	ble	11130 <close@plt+0x5d0>
   110c8:	ldr	r3, [sp, #40]	; 0x28
   110cc:	mla	r3, r3, fp, r5
   110d0:	cmp	r7, r3
   110d4:	ble	11130 <close@plt+0x5d0>
   110d8:	ldr	r1, [sp, #44]	; 0x2c
   110dc:	mov	r0, r5
   110e0:	bl	12280 <close@plt+0x1720>
   110e4:	mla	r0, r1, r9, fp
   110e8:	ldr	r1, [r4]
   110ec:	add	r0, r0, #33	; 0x21
   110f0:	bl	10a64 <_IO_putc@plt>
   110f4:	mov	r0, #1
   110f8:	mov	r1, r6
   110fc:	mov	r2, r8
   11100:	bl	10b00 <__printf_chk@plt>
   11104:	and	r3, fp, #7
   11108:	cmp	r3, #7
   1110c:	bne	110b8 <close@plt+0x558>
   11110:	mov	r1, r6
   11114:	mov	r2, r8
   11118:	mov	r0, #1
   1111c:	bl	10b00 <__printf_chk@plt>
   11120:	b	110b8 <close@plt+0x558>
   11124:	movw	ip, #12456	; 0x30a8
   11128:	movt	ip, #2
   1112c:	str	ip, [sp, #16]
   11130:	ldr	r3, [sp, #16]
   11134:	mov	r0, #10
   11138:	ldr	r1, [r3]
   1113c:	bl	10a64 <_IO_putc@plt>
   11140:	ands	r3, r5, #-2147483641	; 0x80000007
   11144:	submi	r3, r3, #1
   11148:	mvnmi	r3, r3, lsl #29
   1114c:	mvnmi	r3, r3, lsr #29
   11150:	addmi	r3, r3, #1
   11154:	cmp	r3, #7
   11158:	beq	111d8 <close@plt+0x678>
   1115c:	ldr	ip, [sp, #16]
   11160:	add	r5, r5, #1
   11164:	ldr	r0, [ip]
   11168:	bl	109f8 <fflush@plt>
   1116c:	b	10f44 <close@plt+0x3e4>
   11170:	movw	r3, #12484	; 0x30c4
   11174:	movt	r3, #2
   11178:	mov	r0, #2048	; 0x800
   1117c:	mov	r2, #512	; 0x200
   11180:	strh	r2, [r3]
   11184:	bl	10a94 <malloc@plt>
   11188:	movw	ip, #12484	; 0x30c4
   1118c:	movt	ip, #2
   11190:	cmp	r0, #0
   11194:	str	r0, [ip, #4]
   11198:	bne	10fd4 <close@plt+0x474>
   1119c:	movw	r3, #12452	; 0x30a4
   111a0:	movt	r3, #2
   111a4:	mov	r2, #5
   111a8:	movw	r1, #9720	; 0x25f8
   111ac:	movt	r1, #1
   111b0:	ldr	r5, [r3]
   111b4:	ldr	r4, [sp, #28]
   111b8:	bl	10a28 <dcgettext@plt>
   111bc:	mov	r1, #1
   111c0:	ldr	r3, [r4]
   111c4:	mov	r2, r0
   111c8:	mov	r0, r5
   111cc:	bl	10b0c <__fprintf_chk@plt>
   111d0:	mov	r0, #1
   111d4:	bl	113fc <close@plt+0x89c>
   111d8:	ldr	r3, [sp, #16]
   111dc:	mov	r0, #10
   111e0:	ldr	r1, [r3]
   111e4:	bl	10a64 <_IO_putc@plt>
   111e8:	b	1115c <close@plt+0x5fc>
   111ec:	adds	r3, r7, #15
   111f0:	mov	r2, #16
   111f4:	addmi	r3, r7, #30
   111f8:	str	r2, [sp, #36]	; 0x24
   111fc:	movw	r6, #9748	; 0x2614
   11200:	mov	r2, #4
   11204:	movt	r6, #1
   11208:	asr	r3, r3, r2
   1120c:	str	r2, [sp, #44]	; 0x2c
   11210:	str	r3, [sp, #40]	; 0x28
   11214:	b	10f20 <close@plt+0x3c0>
   11218:	movw	r0, #9564	; 0x255c
   1121c:	movt	r0, #1
   11220:	bl	10a58 <perror@plt>
   11224:	mov	r0, #1
   11228:	bl	113fc <close@plt+0x89c>
   1122c:	ldr	r3, [sp, #44]	; 0x2c
   11230:	movw	r1, #9648	; 0x25b0
   11234:	ldr	r2, [sp, #40]	; 0x28
   11238:	movt	r1, #1
   1123c:	mov	r0, #1
   11240:	str	r3, [sp]
   11244:	ldr	r3, [sp, #36]	; 0x24
   11248:	bl	10b00 <__printf_chk@plt>
   1124c:	b	10e20 <close@plt+0x2c0>
   11250:	movw	r3, #12452	; 0x30a4
   11254:	movt	r3, #2
   11258:	mov	r2, #5
   1125c:	movw	r1, #9660	; 0x25bc
   11260:	mov	r0, #0
   11264:	movt	r1, #1
   11268:	ldr	r4, [r3]
   1126c:	bl	10a28 <dcgettext@plt>
   11270:	mov	r1, #1
   11274:	mov	r2, r0
   11278:	mov	r0, r4
   1127c:	bl	10b0c <__fprintf_chk@plt>
   11280:	mov	r0, #1
   11284:	bl	10ac4 <exit@plt>
   11288:	ldrdeq	r3, [r2], -r6
   1128c:	mov	fp, #0
   11290:	mov	lr, #0
   11294:	pop	{r1}		; (ldr r1, [sp], #4)
   11298:	mov	r2, sp
   1129c:	push	{r2}		; (str r2, [sp, #-4]!)
   112a0:	push	{r0}		; (str r0, [sp, #-4]!)
   112a4:	ldr	ip, [pc, #16]	; 112bc <close@plt+0x75c>
   112a8:	push	{ip}		; (str ip, [sp, #-4]!)
   112ac:	ldr	r0, [pc, #12]	; 112c0 <close@plt+0x760>
   112b0:	ldr	r3, [pc, #12]	; 112c4 <close@plt+0x764>
   112b4:	bl	10aa0 <__libc_start_main@plt>
   112b8:	bl	10b54 <abort@plt>
   112bc:	andeq	r2, r1, r4, lsl r3
   112c0:			; <UNDEFINED> instruction: 0x00010bb4
   112c4:			; <UNDEFINED> instruction: 0x000122b0
   112c8:	ldr	r3, [pc, #20]	; 112e4 <close@plt+0x784>
   112cc:	ldr	r2, [pc, #20]	; 112e8 <close@plt+0x788>
   112d0:	add	r3, pc, r3
   112d4:	ldr	r2, [r3, r2]
   112d8:	cmp	r2, #0
   112dc:	bxeq	lr
   112e0:	b	10aac <__gmon_start__@plt>
   112e4:	andeq	r1, r1, r8, lsr #26
   112e8:	muleq	r0, r0, r0
   112ec:	push	{r3, lr}
   112f0:	movw	r0, #12440	; 0x3098
   112f4:	ldr	r3, [pc, #36]	; 11320 <close@plt+0x7c0>
   112f8:	movt	r0, #2
   112fc:	rsb	r3, r0, r3
   11300:	cmp	r3, #6
   11304:	popls	{r3, pc}
   11308:	movw	r3, #0
   1130c:	movt	r3, #0
   11310:	cmp	r3, #0
   11314:	popeq	{r3, pc}
   11318:	blx	r3
   1131c:	pop	{r3, pc}
   11320:	muleq	r2, fp, r0
   11324:	push	{r3, lr}
   11328:	movw	r0, #12440	; 0x3098
   1132c:	movw	r3, #12440	; 0x3098
   11330:	movt	r0, #2
   11334:	movt	r3, #2
   11338:	rsb	r3, r0, r3
   1133c:	asr	r3, r3, #2
   11340:	add	r3, r3, r3, lsr #31
   11344:	asrs	r1, r3, #1
   11348:	popeq	{r3, pc}
   1134c:	movw	r2, #0
   11350:	movt	r2, #0
   11354:	cmp	r2, #0
   11358:	popeq	{r3, pc}
   1135c:	blx	r2
   11360:	pop	{r3, pc}
   11364:	push	{r4, lr}
   11368:	movw	r4, #12468	; 0x30b4
   1136c:	movt	r4, #2
   11370:	ldrb	r3, [r4]
   11374:	cmp	r3, #0
   11378:	popne	{r4, pc}
   1137c:	bl	112ec <close@plt+0x78c>
   11380:	mov	r3, #1
   11384:	strb	r3, [r4]
   11388:	pop	{r4, pc}
   1138c:	movw	r0, #12036	; 0x2f04
   11390:	movt	r0, #2
   11394:	push	{r3, lr}
   11398:	ldr	r3, [r0]
   1139c:	cmp	r3, #0
   113a0:	beq	113b8 <close@plt+0x858>
   113a4:	movw	r3, #0
   113a8:	movt	r3, #0
   113ac:	cmp	r3, #0
   113b0:	beq	113b8 <close@plt+0x858>
   113b4:	blx	r3
   113b8:	pop	{r3, lr}
   113bc:	b	11324 <close@plt+0x7c4>
   113c0:	movw	r3, #12452	; 0x30a4
   113c4:	movt	r3, #2
   113c8:	push	{r4, lr}
   113cc:	mov	r2, #5
   113d0:	movw	r1, #9000	; 0x2328
   113d4:	mov	r0, #0
   113d8:	movt	r1, #1
   113dc:	ldr	r4, [r3]
   113e0:	bl	10a28 <dcgettext@plt>
   113e4:	mov	r1, #1
   113e8:	mov	r2, r0
   113ec:	mov	r0, r4
   113f0:	bl	10b0c <__fprintf_chk@plt>
   113f4:	mov	r0, #1
   113f8:	bl	10ac4 <exit@plt>
   113fc:	push	{r4, r5, r6, lr}
   11400:	movw	r4, #12472	; 0x30b8
   11404:	movt	r4, #2
   11408:	mov	r5, r0
   1140c:	ldr	r3, [r4]
   11410:	cmp	r3, #0
   11414:	bne	11434 <close@plt+0x8d4>
   11418:	ldr	r2, [r4, #8]
   1141c:	movw	r3, #12472	; 0x30b8
   11420:	movt	r3, #2
   11424:	cmp	r2, #0
   11428:	bne	11484 <close@plt+0x924>
   1142c:	mov	r0, r5
   11430:	bl	10ac4 <exit@plt>
   11434:	movw	r1, #13016	; 0x32d8
   11438:	ldr	r0, [r4, #4]
   1143c:	movt	r1, #2
   11440:	bl	1178c <close@plt+0xc2c>
   11444:	cmp	r0, #0
   11448:	beq	11418 <close@plt+0x8b8>
   1144c:	movw	r3, #12452	; 0x30a4
   11450:	movt	r3, #2
   11454:	mov	r2, #5
   11458:	movw	r1, #9404	; 0x24bc
   1145c:	mov	r0, #0
   11460:	movt	r1, #1
   11464:	ldr	r6, [r3]
   11468:	bl	10a28 <dcgettext@plt>
   1146c:	mov	r5, #1
   11470:	mov	r1, r5
   11474:	mov	r2, r0
   11478:	mov	r0, r6
   1147c:	bl	10b0c <__fprintf_chk@plt>
   11480:	b	11418 <close@plt+0x8b8>
   11484:	ldr	r0, [r3, #4]
   11488:	movw	r2, #12496	; 0x30d0
   1148c:	mov	r1, #0
   11490:	movt	r2, #2
   11494:	bl	1191c <close@plt+0xdbc>
   11498:	cmp	r0, #0
   1149c:	beq	1142c <close@plt+0x8cc>
   114a0:	movw	r3, #12452	; 0x30a4
   114a4:	movt	r3, #2
   114a8:	mov	r2, #5
   114ac:	movw	r1, #9452	; 0x24ec
   114b0:	mov	r0, #0
   114b4:	movt	r1, #1
   114b8:	ldr	r4, [r3]
   114bc:	bl	10a28 <dcgettext@plt>
   114c0:	mov	r5, #1
   114c4:	mov	r1, r5
   114c8:	mov	r2, r0
   114cc:	mov	r0, r4
   114d0:	bl	10b0c <__fprintf_chk@plt>
   114d4:	b	1142c <close@plt+0x8cc>
   114d8:	push	{r4, lr}
   114dc:	mov	r1, #2
   114e0:	mov	r4, r0
   114e4:	bl	10ab8 <open@plt>
   114e8:	cmp	r0, #0
   114ec:	popge	{r4, pc}
   114f0:	mov	r0, r4
   114f4:	mov	r1, #1
   114f8:	bl	10ab8 <open@plt>
   114fc:	cmp	r0, #0
   11500:	popge	{r4, pc}
   11504:	mov	r0, r4
   11508:	mov	r1, #0
   1150c:	bl	10ab8 <open@plt>
   11510:	orr	r0, r0, r0, asr #31
   11514:	pop	{r4, pc}
   11518:	push	{r4, r5, lr}
   1151c:	movw	r4, #12440	; 0x3098
   11520:	movt	r4, #2
   11524:	sub	sp, sp, #12
   11528:	mov	r2, #0
   1152c:	mov	r5, r0
   11530:	ldr	r3, [r4]
   11534:	strb	r2, [sp, #3]
   11538:	str	r3, [sp, #4]
   1153c:	bl	10b48 <isatty@plt>
   11540:	cmp	r0, #0
   11544:	bne	11564 <close@plt+0xa04>
   11548:	mov	r0, #0
   1154c:	ldr	r2, [sp, #4]
   11550:	ldr	r3, [r4]
   11554:	cmp	r2, r3
   11558:	bne	11594 <close@plt+0xa34>
   1155c:	add	sp, sp, #12
   11560:	pop	{r4, r5, pc}
   11564:	mov	r0, r5
   11568:	movw	r1, #19251	; 0x4b33
   1156c:	add	r2, sp, #3
   11570:	bl	10a7c <ioctl@plt>
   11574:	cmp	r0, #0
   11578:	bne	11548 <close@plt+0x9e8>
   1157c:	ldrb	r0, [sp, #3]
   11580:	sub	r0, r0, #1
   11584:	cmp	r0, #1
   11588:	movhi	r0, #0
   1158c:	movls	r0, #1
   11590:	b	1154c <close@plt+0x9ec>
   11594:	bl	10a34 <__stack_chk_fail@plt>
   11598:	push	{r3, r4, r5, lr}
   1159c:	subs	r4, r0, #0
   115a0:	beq	115c4 <close@plt+0xa64>
   115a4:	bl	114d8 <close@plt+0x978>
   115a8:	subs	r5, r0, #0
   115ac:	blt	11664 <close@plt+0xb04>
   115b0:	bl	11518 <close@plt+0x9b8>
   115b4:	cmp	r0, #0
   115b8:	mov	r0, r5
   115bc:	beq	11660 <close@plt+0xb00>
   115c0:	pop	{r3, r4, r5, pc}
   115c4:	movw	r4, #9760	; 0x2620
   115c8:	movw	r0, #9788	; 0x263c
   115cc:	movt	r4, #1
   115d0:	movt	r0, #1
   115d4:	bl	114d8 <close@plt+0x978>
   115d8:	subs	r5, r0, #0
   115dc:	blt	115f4 <close@plt+0xa94>
   115e0:	bl	11518 <close@plt+0x9b8>
   115e4:	cmp	r0, #0
   115e8:	mov	r0, r5
   115ec:	bne	11654 <close@plt+0xaf4>
   115f0:	bl	10b60 <close@plt>
   115f4:	ldr	r0, [r4, #4]!
   115f8:	cmp	r0, #0
   115fc:	bne	115d4 <close@plt+0xa74>
   11600:	mov	r5, r0
   11604:	mov	r0, r5
   11608:	bl	11518 <close@plt+0x9b8>
   1160c:	cmp	r0, #0
   11610:	bne	11658 <close@plt+0xaf8>
   11614:	add	r5, r5, #1
   11618:	cmp	r5, #3
   1161c:	bne	11604 <close@plt+0xaa4>
   11620:	movw	r3, #12452	; 0x30a4
   11624:	movt	r3, #2
   11628:	mov	r2, #5
   1162c:	movw	r1, #9824	; 0x2660
   11630:	movt	r1, #1
   11634:	ldr	r4, [r3]
   11638:	bl	10a28 <dcgettext@plt>
   1163c:	mov	r1, #1
   11640:	mov	r2, r0
   11644:	mov	r0, r4
   11648:	bl	10b0c <__fprintf_chk@plt>
   1164c:	mov	r0, #1
   11650:	bl	10ac4 <exit@plt>
   11654:	pop	{r3, r4, r5, pc}
   11658:	mov	r0, r5
   1165c:	pop	{r3, r4, r5, pc}
   11660:	bl	10b60 <close@plt>
   11664:	movw	r3, #12452	; 0x30a4
   11668:	movt	r3, #2
   1166c:	mov	r2, #5
   11670:	movw	r1, #9804	; 0x264c
   11674:	mov	r0, #0
   11678:	movt	r1, #1
   1167c:	ldr	r5, [r3]
   11680:	bl	10a28 <dcgettext@plt>
   11684:	mov	r3, r4
   11688:	mov	r1, #1
   1168c:	mov	r2, r0
   11690:	mov	r0, r5
   11694:	bl	10b0c <__fprintf_chk@plt>
   11698:	mov	r0, #1
   1169c:	bl	10ac4 <exit@plt>
   116a0:	push	{r3, lr}
   116a4:	bl	10a94 <malloc@plt>
   116a8:	cmp	r0, #0
   116ac:	popne	{r3, pc}
   116b0:	bl	10b6c <close@plt+0xc>
   116b4:	push	{r3, lr}
   116b8:	bl	10a40 <realloc@plt>
   116bc:	cmp	r0, #0
   116c0:	popne	{r3, pc}
   116c4:	bl	10b6c <close@plt+0xc>
   116c8:	push	{r3, lr}
   116cc:	bl	10ae8 <__strdup@plt>
   116d0:	cmp	r0, #0
   116d4:	popne	{r3, pc}
   116d8:	bl	10b6c <close@plt+0xc>
   116dc:	push	{r3, lr}
   116e0:	bl	10a10 <strndup@plt>
   116e4:	cmp	r0, #0
   116e8:	popne	{r3, pc}
   116ec:	bl	10b6c <close@plt+0xc>
   116f0:	cmp	r0, #0
   116f4:	push	{r3, lr}
   116f8:	beq	11700 <close@plt+0xba0>
   116fc:	bl	10a04 <free@plt>
   11700:	mov	r0, #0
   11704:	pop	{r3, pc}
   11708:	push	{r3, lr}
   1170c:	mov	r2, r1
   11710:	movw	r1, #19264	; 0x4b40
   11714:	bl	10a7c <ioctl@plt>
   11718:	cmp	r0, #0
   1171c:	popeq	{r3, pc}
   11720:	movw	r0, #9968	; 0x26f0
   11724:	movt	r0, #1
   11728:	bl	10a58 <perror@plt>
   1172c:	mvn	r0, #0
   11730:	pop	{r3, pc}
   11734:	push	{r3, lr}
   11738:	mov	r2, r1
   1173c:	movw	r1, #19265	; 0x4b41
   11740:	bl	10a7c <ioctl@plt>
   11744:	cmp	r0, #0
   11748:	popeq	{r3, pc}
   1174c:	movw	r0, #9980	; 0x26fc
   11750:	movt	r0, #1
   11754:	bl	10a58 <perror@plt>
   11758:	mvn	r0, #0
   1175c:	pop	{r3, pc}
   11760:	push	{r3, lr}
   11764:	mov	r2, r1
   11768:	movw	r1, #19305	; 0x4b69
   1176c:	bl	10a7c <ioctl@plt>
   11770:	cmp	r0, #0
   11774:	popeq	{r3, pc}
   11778:	movw	r0, #9992	; 0x2708
   1177c:	movt	r0, #1
   11780:	bl	10a58 <perror@plt>
   11784:	mvn	r0, #0
   11788:	pop	{r3, pc}
   1178c:	push	{r3, lr}
   11790:	mov	r2, r1
   11794:	movw	r1, #19306	; 0x4b6a
   11798:	bl	10a7c <ioctl@plt>
   1179c:	cmp	r0, #0
   117a0:	popeq	{r3, pc}
   117a4:	movw	r0, #10008	; 0x2718
   117a8:	movt	r0, #1
   117ac:	bl	10a58 <perror@plt>
   117b0:	mvn	r0, #0
   117b4:	pop	{r3, pc}
   117b8:	push	{r4, r5, r6, r7, r8, lr}
   117bc:	movw	r4, #12440	; 0x3098
   117c0:	movt	r4, #2
   117c4:	sub	sp, sp, #24
   117c8:	add	r5, sp, #12
   117cc:	mov	r6, r1
   117d0:	ldr	ip, [r4]
   117d4:	movw	r1, #19302	; 0x4b66
   117d8:	mov	r2, r5
   117dc:	mov	r3, #0
   117e0:	mov	r8, r0
   117e4:	strh	r3, [sp, #12]
   117e8:	str	ip, [sp, #20]
   117ec:	str	r3, [sp, #16]
   117f0:	bl	10a7c <ioctl@plt>
   117f4:	cmp	r0, #0
   117f8:	beq	11888 <close@plt+0xd28>
   117fc:	bl	10adc <__errno_location@plt>
   11800:	ldr	r3, [r0]
   11804:	cmp	r3, #12
   11808:	bne	118b0 <close@plt+0xd50>
   1180c:	ldrh	r7, [sp, #12]
   11810:	cmp	r7, #0
   11814:	beq	118b0 <close@plt+0xd50>
   11818:	lsl	r0, r7, #2
   1181c:	bl	10a94 <malloc@plt>
   11820:	cmp	r0, #0
   11824:	str	r0, [sp, #16]
   11828:	beq	118d8 <close@plt+0xd78>
   1182c:	mov	r0, r8
   11830:	movw	r1, #19302	; 0x4b66
   11834:	mov	r2, r5
   11838:	bl	10a7c <ioctl@plt>
   1183c:	cmp	r0, #0
   11840:	bne	118c4 <close@plt+0xd64>
   11844:	ldrh	r3, [sp, #12]
   11848:	cmp	r3, r7
   1184c:	beq	11888 <close@plt+0xd28>
   11850:	movw	r3, #12452	; 0x30a4
   11854:	movt	r3, #2
   11858:	mov	r2, #5
   1185c:	movw	r1, #10052	; 0x2744
   11860:	movt	r1, #1
   11864:	ldr	r8, [r3]
   11868:	bl	10a28 <dcgettext@plt>
   1186c:	ldrh	ip, [sp, #12]
   11870:	mov	r3, r7
   11874:	mov	r1, #1
   11878:	str	ip, [sp]
   1187c:	mov	r2, r0
   11880:	mov	r0, r8
   11884:	bl	10b0c <__fprintf_chk@plt>
   11888:	ldm	r5, {r0, r1}
   1188c:	mov	r3, #0
   11890:	stm	r6, {r0, r1}
   11894:	ldr	r2, [sp, #20]
   11898:	mov	r0, r3
   1189c:	ldr	r3, [r4]
   118a0:	cmp	r2, r3
   118a4:	bne	11918 <close@plt+0xdb8>
   118a8:	add	sp, sp, #24
   118ac:	pop	{r4, r5, r6, r7, r8, pc}
   118b0:	movw	r0, #10024	; 0x2728
   118b4:	movt	r0, #1
   118b8:	bl	10a58 <perror@plt>
   118bc:	mvn	r3, #0
   118c0:	b	11894 <close@plt+0xd34>
   118c4:	movw	r0, #10040	; 0x2738
   118c8:	movt	r0, #1
   118cc:	bl	10a58 <perror@plt>
   118d0:	mvn	r3, #0
   118d4:	b	11894 <close@plt+0xd34>
   118d8:	movw	r3, #12452	; 0x30a4
   118dc:	movt	r3, #2
   118e0:	mov	r2, #5
   118e4:	movw	r1, #9948	; 0x26dc
   118e8:	movt	r1, #1
   118ec:	ldr	r5, [r3]
   118f0:	bl	10a28 <dcgettext@plt>
   118f4:	movw	r3, #12492	; 0x30cc
   118f8:	movt	r3, #2
   118fc:	mov	r1, #1
   11900:	ldr	r3, [r3]
   11904:	mov	r2, r0
   11908:	mov	r0, r5
   1190c:	bl	10b0c <__fprintf_chk@plt>
   11910:	mvn	r3, #0
   11914:	b	11894 <close@plt+0xd34>
   11918:	bl	10a34 <__stack_chk_fail@plt>
   1191c:	push	{r4, r5, r6, r7, r8, lr}
   11920:	movw	r8, #12440	; 0x3098
   11924:	movt	r8, #2
   11928:	cmp	r1, #0
   1192c:	sub	sp, sp, #16
   11930:	mov	r4, r0
   11934:	ldr	r3, [r8]
   11938:	addne	r6, sp, #4
   1193c:	ldrne	r0, [r1]
   11940:	mov	r5, r2
   11944:	addeq	r6, sp, #4
   11948:	strheq	r1, [sp, #4]
   1194c:	str	r3, [sp, #12]
   11950:	ldrhne	r3, [r1, #4]
   11954:	strne	r0, [sp, #4]
   11958:	strheq	r1, [sp, #6]
   1195c:	strhne	r3, [r6, #4]
   11960:	strheq	r1, [sp, #8]
   11964:	b	119ac <close@plt+0xe4c>
   11968:	cmp	r5, #0
   1196c:	beq	119d4 <close@plt+0xe74>
   11970:	mov	r0, r4
   11974:	movw	r1, #19303	; 0x4b67
   11978:	mov	r2, r5
   1197c:	bl	10a7c <ioctl@plt>
   11980:	cmp	r0, #0
   11984:	beq	119d4 <close@plt+0xe74>
   11988:	bl	10adc <__errno_location@plt>
   1198c:	ldr	r3, [r0]
   11990:	cmp	r3, #12
   11994:	bne	119f0 <close@plt+0xe90>
   11998:	ldrh	r3, [sp, #8]
   1199c:	cmp	r3, #99	; 0x63
   119a0:	bhi	119f0 <close@plt+0xe90>
   119a4:	add	r3, r3, #1
   119a8:	strh	r3, [sp, #8]
   119ac:	mov	r0, r4
   119b0:	movw	r1, #19304	; 0x4b68
   119b4:	mov	r2, r6
   119b8:	bl	10a7c <ioctl@plt>
   119bc:	subs	r7, r0, #0
   119c0:	beq	11968 <close@plt+0xe08>
   119c4:	movw	r0, #10092	; 0x276c
   119c8:	movt	r0, #1
   119cc:	bl	10a58 <perror@plt>
   119d0:	mvn	r7, #0
   119d4:	ldr	r2, [sp, #12]
   119d8:	mov	r0, r7
   119dc:	ldr	r3, [r8]
   119e0:	cmp	r2, r3
   119e4:	bne	11a04 <close@plt+0xea4>
   119e8:	add	sp, sp, #16
   119ec:	pop	{r4, r5, r6, r7, r8, pc}
   119f0:	movw	r0, #10108	; 0x277c
   119f4:	movt	r0, #1
   119f8:	bl	10a58 <perror@plt>
   119fc:	mvn	r7, #0
   11a00:	b	119d4 <close@plt+0xe74>
   11a04:	bl	10a34 <__stack_chk_fail@plt>
   11a08:	push	{r3, lr}
   11a0c:	movw	r1, #19309	; 0x4b6d
   11a10:	mov	r2, #0
   11a14:	bl	10a7c <ioctl@plt>
   11a18:	cmp	r0, #0
   11a1c:	popeq	{r3, pc}
   11a20:	movw	r0, #10120	; 0x2788
   11a24:	movt	r0, #1
   11a28:	bl	10a58 <perror@plt>
   11a2c:	mvn	r0, #0
   11a30:	pop	{r3, pc}
   11a34:	push	{r4, r5, r6, r7, r8, r9, sl}
   11a38:	adds	r5, r2, #7
   11a3c:	addmi	r2, r2, #14
   11a40:	movpl	r2, r5
   11a44:	mov	r9, #32
   11a48:	asr	r5, r2, #3
   11a4c:	rsb	sl, r5, #0
   11a50:	sub	r8, r5, #1
   11a54:	lsl	r7, r5, #5
   11a58:	rsb	r3, r5, r7
   11a5c:	add	r0, r0, r3
   11a60:	cmp	r1, #0
   11a64:	ble	11ab4 <close@plt+0xf54>
   11a68:	mov	r4, r0
   11a6c:	mov	r6, #0
   11a70:	cmp	r5, #0
   11a74:	ble	11aa4 <close@plt+0xf44>
   11a78:	ldrb	r3, [r4]
   11a7c:	cmp	r3, #0
   11a80:	bne	11ac0 <close@plt+0xf60>
   11a84:	add	ip, r8, r4
   11a88:	mov	r3, r4
   11a8c:	b	11a9c <close@plt+0xf3c>
   11a90:	ldrb	r2, [r3, #1]!
   11a94:	cmp	r2, #0
   11a98:	bne	11ac0 <close@plt+0xf60>
   11a9c:	cmp	ip, r3
   11aa0:	bne	11a90 <close@plt+0xf30>
   11aa4:	add	r6, r6, #1
   11aa8:	add	r4, r4, r7
   11aac:	cmp	r6, r1
   11ab0:	bne	11a70 <close@plt+0xf10>
   11ab4:	subs	r9, r9, #1
   11ab8:	add	r0, r0, sl
   11abc:	bne	11a60 <close@plt+0xf00>
   11ac0:	mov	r0, r9
   11ac4:	pop	{r4, r5, r6, r7, r8, r9, sl}
   11ac8:	bx	lr
   11acc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ad0:	movw	r4, #12440	; 0x3098
   11ad4:	movt	r4, #2
   11ad8:	ldr	ip, [r2]
   11adc:	sub	sp, sp, #40	; 0x28
   11ae0:	mov	r6, r1
   11ae4:	ldr	lr, [r4]
   11ae8:	mov	r5, r2
   11aec:	movw	r1, #19314	; 0x4b72
   11af0:	add	r2, sp, #12
   11af4:	str	ip, [sp, #28]
   11af8:	mov	r7, r3
   11afc:	mov	ip, #32
   11b00:	str	lr, [sp, #36]	; 0x24
   11b04:	mov	r3, #0
   11b08:	mov	lr, #1
   11b0c:	str	r6, [sp, #32]
   11b10:	mov	r9, r0
   11b14:	str	lr, [sp, #12]
   11b18:	str	r3, [sp, #16]
   11b1c:	str	ip, [sp, #24]
   11b20:	str	ip, [sp, #20]
   11b24:	ldr	r8, [sp, #72]	; 0x48
   11b28:	bl	10a7c <ioctl@plt>
   11b2c:	cmp	r0, #0
   11b30:	bne	11b60 <close@plt+0x1000>
   11b34:	ldr	r3, [sp, #28]
   11b38:	cmp	r8, #0
   11b3c:	str	r3, [r5]
   11b40:	ldrne	r3, [sp, #24]
   11b44:	strne	r3, [r8]
   11b48:	cmp	r7, #0
   11b4c:	beq	11c3c <close@plt+0x10dc>
   11b50:	ldr	r3, [sp, #20]
   11b54:	mov	r0, #0
   11b58:	str	r3, [r7]
   11b5c:	b	11bc8 <close@plt+0x1068>
   11b60:	bl	10adc <__errno_location@plt>
   11b64:	ldr	r3, [r0]
   11b68:	mov	sl, r0
   11b6c:	cmp	r3, #22
   11b70:	cmpne	r3, #38	; 0x26
   11b74:	bne	11c44 <close@plt+0x10e4>
   11b78:	cmp	r7, #0
   11b7c:	mov	r0, r9
   11b80:	movw	r1, #19307	; 0x4b6b
   11b84:	add	r2, sp, #4
   11b88:	movne	r3, #8
   11b8c:	strne	r3, [r7]
   11b90:	ldr	ip, [r5]
   11b94:	mov	r3, #0
   11b98:	str	r6, [sp, #8]
   11b9c:	strh	r3, [sp, #6]
   11ba0:	strh	ip, [sp, #4]
   11ba4:	bl	10a7c <ioctl@plt>
   11ba8:	cmp	r0, #0
   11bac:	bne	11be0 <close@plt+0x1080>
   11bb0:	ldrh	r3, [sp, #4]
   11bb4:	cmp	r8, #0
   11bb8:	str	r3, [r5]
   11bbc:	beq	11c3c <close@plt+0x10dc>
   11bc0:	ldrh	r3, [sp, #6]
   11bc4:	str	r3, [r8]
   11bc8:	ldr	r2, [sp, #36]	; 0x24
   11bcc:	ldr	r3, [r4]
   11bd0:	cmp	r2, r3
   11bd4:	bne	11cd0 <close@plt+0x1170>
   11bd8:	add	sp, sp, #40	; 0x28
   11bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11be0:	ldr	r3, [sl]
   11be4:	cmp	r3, #22
   11be8:	cmpne	r3, #38	; 0x26
   11bec:	moveq	r0, #0
   11bf0:	movne	r0, #1
   11bf4:	bne	11c58 <close@plt+0x10f8>
   11bf8:	ldr	r2, [r5]
   11bfc:	cmp	r2, #255	; 0xff
   11c00:	ble	11c6c <close@plt+0x110c>
   11c04:	cmp	r6, #0
   11c08:	beq	11cb4 <close@plt+0x1154>
   11c0c:	mov	r0, r9
   11c10:	mov	r2, r6
   11c14:	movw	r1, #19296	; 0x4b60
   11c18:	bl	10a7c <ioctl@plt>
   11c1c:	subs	r3, r0, #0
   11c20:	bne	11ca0 <close@plt+0x1140>
   11c24:	cmp	r8, #0
   11c28:	mov	r2, #256	; 0x100
   11c2c:	str	r2, [r5]
   11c30:	movne	r0, r3
   11c34:	strne	r3, [r8]
   11c38:	bne	11bc8 <close@plt+0x1068>
   11c3c:	mov	r0, #0
   11c40:	b	11bc8 <close@plt+0x1068>
   11c44:	movw	r0, #10136	; 0x2798
   11c48:	movt	r0, #1
   11c4c:	bl	10a58 <perror@plt>
   11c50:	mvn	r0, #0
   11c54:	b	11bc8 <close@plt+0x1068>
   11c58:	movw	r0, #10156	; 0x27ac
   11c5c:	movt	r0, #1
   11c60:	bl	10a58 <perror@plt>
   11c64:	mvn	r0, #0
   11c68:	b	11bc8 <close@plt+0x1068>
   11c6c:	movw	r2, #12452	; 0x30a4
   11c70:	movt	r2, #2
   11c74:	movw	r1, #10176	; 0x27c0
   11c78:	movt	r1, #1
   11c7c:	ldr	r5, [r2]
   11c80:	mov	r2, #5
   11c84:	bl	10a28 <dcgettext@plt>
   11c88:	mov	r1, #1
   11c8c:	mov	r2, r0
   11c90:	mov	r0, r5
   11c94:	bl	10b0c <__fprintf_chk@plt>
   11c98:	mvn	r0, #0
   11c9c:	b	11bc8 <close@plt+0x1068>
   11ca0:	movw	r0, #10252	; 0x280c
   11ca4:	movt	r0, #1
   11ca8:	bl	10a58 <perror@plt>
   11cac:	mvn	r0, #0
   11cb0:	b	11bc8 <close@plt+0x1068>
   11cb4:	movw	r3, #12452	; 0x30a4
   11cb8:	movt	r3, #2
   11cbc:	movw	r1, #10212	; 0x27e4
   11cc0:	mov	r0, r6
   11cc4:	ldr	r5, [r3]
   11cc8:	movt	r1, #1
   11ccc:	b	11c80 <close@plt+0x1120>
   11cd0:	bl	10a34 <__stack_chk_fail@plt>
   11cd4:	push	{r4, lr}
   11cd8:	movw	r4, #12440	; 0x3098
   11cdc:	movt	r4, #2
   11ce0:	sub	sp, sp, #16
   11ce4:	add	r2, sp, #16
   11ce8:	mov	ip, #0
   11cec:	ldr	lr, [r4]
   11cf0:	mov	r3, ip
   11cf4:	str	ip, [sp]
   11cf8:	mov	r1, ip
   11cfc:	str	ip, [r2, #-8]!
   11d00:	str	lr, [sp, #12]
   11d04:	bl	11acc <close@plt+0xf6c>
   11d08:	ldr	r2, [sp, #12]
   11d0c:	ldr	r3, [r4]
   11d10:	cmp	r0, #0
   11d14:	ldreq	r0, [sp, #8]
   11d18:	movne	r0, #256	; 0x100
   11d1c:	cmp	r2, r3
   11d20:	bne	11d2c <close@plt+0x11cc>
   11d24:	add	sp, sp, #16
   11d28:	pop	{r4, pc}
   11d2c:	bl	10a34 <__stack_chk_fail@plt>
   11d30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d34:	sub	sp, sp, #68	; 0x44
   11d38:	subs	r4, r3, #0
   11d3c:	movw	r7, #12440	; 0x3098
   11d40:	movt	r7, #2
   11d44:	ldr	ip, [sp, #104]	; 0x68
   11d48:	moveq	r8, #8
   11d4c:	movne	r8, r4
   11d50:	ldr	r3, [r7]
   11d54:	moveq	r4, r8
   11d58:	cmp	ip, #0
   11d5c:	mov	r6, r0
   11d60:	mov	r5, r1
   11d64:	mov	sl, r2
   11d68:	str	r3, [sp, #60]	; 0x3c
   11d6c:	bne	11d84 <close@plt+0x1224>
   11d70:	mov	r0, r1
   11d74:	mov	r1, r2
   11d78:	mov	r2, r4
   11d7c:	bl	11a34 <close@plt+0xed4>
   11d80:	str	r0, [sp, #104]	; 0x68
   11d84:	ldr	ip, [sp, #104]	; 0x68
   11d88:	mov	r0, r6
   11d8c:	movw	r1, #19314	; 0x4b72
   11d90:	add	r2, sp, #36	; 0x24
   11d94:	mov	r3, #0
   11d98:	str	r8, [sp, #44]	; 0x2c
   11d9c:	str	ip, [sp, #48]	; 0x30
   11da0:	str	sl, [sp, #52]	; 0x34
   11da4:	str	r5, [sp, #56]	; 0x38
   11da8:	str	r3, [sp, #36]	; 0x24
   11dac:	str	r3, [sp, #40]	; 0x28
   11db0:	bl	10a7c <ioctl@plt>
   11db4:	cmp	r0, #0
   11db8:	beq	11f58 <close@plt+0x13f8>
   11dbc:	cmp	r4, #8
   11dc0:	bne	11fb0 <close@plt+0x1450>
   11dc4:	bl	10adc <__errno_location@plt>
   11dc8:	ldr	r3, [r0]
   11dcc:	mov	r4, r0
   11dd0:	cmp	r3, #22
   11dd4:	cmpne	r3, #38	; 0x26
   11dd8:	moveq	r1, #0
   11ddc:	movne	r1, #1
   11de0:	bne	11fb0 <close@plt+0x1450>
   11de4:	cmp	r3, #22
   11de8:	beq	11ed8 <close@plt+0x1378>
   11dec:	ldr	ip, [sp, #104]	; 0x68
   11df0:	mov	r0, r6
   11df4:	movw	r1, #19308	; 0x4b6c
   11df8:	add	r2, sp, #28
   11dfc:	strh	sl, [sp, #28]
   11e00:	strh	ip, [sp, #30]
   11e04:	str	r5, [sp, #32]
   11e08:	bl	10a7c <ioctl@plt>
   11e0c:	cmp	r0, #0
   11e10:	beq	11f58 <close@plt+0x13f8>
   11e14:	ldr	r3, [r4]
   11e18:	cmp	r3, #22
   11e1c:	cmpne	r3, #38	; 0x26
   11e20:	bne	11fc4 <close@plt+0x1464>
   11e24:	movw	r8, #12452	; 0x30a4
   11e28:	mov	r4, #1
   11e2c:	movt	r8, #2
   11e30:	b	11e38 <close@plt+0x12d8>
   11e34:	add	r4, r4, #1
   11e38:	mov	r0, r6
   11e3c:	movw	r1, #19297	; 0x4b61
   11e40:	mov	r2, r5
   11e44:	bl	10a7c <ioctl@plt>
   11e48:	subs	fp, r0, #0
   11e4c:	beq	11f74 <close@plt+0x1414>
   11e50:	cmp	r4, #1
   11e54:	beq	11f88 <close@plt+0x1428>
   11e58:	ldr	r1, [r8]
   11e5c:	mov	r0, #46	; 0x2e
   11e60:	bl	10b30 <fputc@plt>
   11e64:	movw	r0, #53392	; 0xd090
   11e68:	movt	r0, #3
   11e6c:	movw	r9, #12452	; 0x30a4
   11e70:	bl	10a88 <usleep@plt>
   11e74:	cmp	r4, #20
   11e78:	movt	r9, #2
   11e7c:	bne	11e34 <close@plt+0x12d4>
   11e80:	ldr	r1, [r9]
   11e84:	mov	r0, #10
   11e88:	bl	10b30 <fputc@plt>
   11e8c:	ldr	ip, [sp, #104]	; 0x68
   11e90:	movw	r2, #12492	; 0x30cc
   11e94:	movt	r2, #2
   11e98:	ldr	r0, [r9]
   11e9c:	mov	r1, #8
   11ea0:	str	sl, [sp]
   11ea4:	ldr	r3, [r2]
   11ea8:	movw	r2, #10380	; 0x288c
   11eac:	str	ip, [sp, #8]
   11eb0:	movt	r2, #1
   11eb4:	str	r1, [sp, #4]
   11eb8:	mov	r1, #1
   11ebc:	str	fp, [sp, #12]
   11ec0:	bl	10b0c <__fprintf_chk@plt>
   11ec4:	movw	r0, #10416	; 0x28b0
   11ec8:	movt	r0, #1
   11ecc:	bl	10a58 <perror@plt>
   11ed0:	mvn	r0, #0
   11ed4:	b	11f5c <close@plt+0x13fc>
   11ed8:	cmp	sl, #256	; 0x100
   11edc:	beq	11dec <close@plt+0x128c>
   11ee0:	cmp	sl, #512	; 0x200
   11ee4:	bge	11dec <close@plt+0x128c>
   11ee8:	cmp	sl, #256	; 0x100
   11eec:	str	r1, [sp, #20]
   11ef0:	movle	r9, #8192	; 0x2000
   11ef4:	movgt	r9, #16384	; 0x4000
   11ef8:	movle	fp, #256	; 0x100
   11efc:	movgt	fp, #512	; 0x200
   11f00:	mov	r0, r9
   11f04:	bl	10a94 <malloc@plt>
   11f08:	ldr	r1, [sp, #20]
   11f0c:	subs	r8, r0, #0
   11f10:	beq	12020 <close@plt+0x14c0>
   11f14:	mov	r2, r9
   11f18:	bl	10af4 <memset@plt>
   11f1c:	mov	r1, r5
   11f20:	lsl	r2, sl, #5
   11f24:	mov	r0, r8
   11f28:	bl	10a1c <memcpy@plt>
   11f2c:	add	r2, sp, #36	; 0x24
   11f30:	movw	r1, #19314	; 0x4b72
   11f34:	mov	r0, r6
   11f38:	str	fp, [sp, #52]	; 0x34
   11f3c:	str	r8, [sp, #56]	; 0x38
   11f40:	bl	10a7c <ioctl@plt>
   11f44:	mov	fp, r0
   11f48:	mov	r0, r8
   11f4c:	bl	10a04 <free@plt>
   11f50:	cmp	fp, #0
   11f54:	bne	11dec <close@plt+0x128c>
   11f58:	mov	r0, #0
   11f5c:	ldr	r2, [sp, #60]	; 0x3c
   11f60:	ldr	r3, [r7]
   11f64:	cmp	r2, r3
   11f68:	bne	1201c <close@plt+0x14bc>
   11f6c:	add	sp, sp, #68	; 0x44
   11f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f74:	ldr	r1, [r8]
   11f78:	mov	r0, #10
   11f7c:	bl	10b30 <fputc@plt>
   11f80:	mov	r0, fp
   11f84:	b	11f5c <close@plt+0x13fc>
   11f88:	mov	r1, r4
   11f8c:	mov	r2, #29
   11f90:	ldr	r3, [r8]
   11f94:	movw	r0, #10348	; 0x286c
   11f98:	movt	r0, #1
   11f9c:	bl	10a70 <fwrite@plt>
   11fa0:	movw	r0, #53392	; 0xd090
   11fa4:	movt	r0, #3
   11fa8:	bl	10a88 <usleep@plt>
   11fac:	b	11e34 <close@plt+0x12d4>
   11fb0:	movw	r0, #10272	; 0x2820
   11fb4:	movt	r0, #1
   11fb8:	bl	10a58 <perror@plt>
   11fbc:	mvn	r0, #0
   11fc0:	b	11f5c <close@plt+0x13fc>
   11fc4:	movw	r2, #12452	; 0x30a4
   11fc8:	movt	r2, #2
   11fcc:	str	sl, [sp]
   11fd0:	movw	r3, #12492	; 0x30cc
   11fd4:	ldr	lr, [r2]
   11fd8:	movt	r3, #2
   11fdc:	ldr	r1, [sp, #104]	; 0x68
   11fe0:	mov	ip, #8
   11fe4:	ldr	r3, [r3]
   11fe8:	movw	r2, #10292	; 0x2834
   11fec:	str	r0, [sp, #12]
   11ff0:	movt	r2, #1
   11ff4:	str	r1, [sp, #8]
   11ff8:	mov	r0, lr
   11ffc:	mov	r1, #1
   12000:	str	ip, [sp, #4]
   12004:	bl	10b0c <__fprintf_chk@plt>
   12008:	movw	r0, #10328	; 0x2858
   1200c:	movt	r0, #1
   12010:	bl	10a58 <perror@plt>
   12014:	mvn	r0, #0
   12018:	b	11f5c <close@plt+0x13fc>
   1201c:	bl	10a34 <__stack_chk_fail@plt>
   12020:	movw	r3, #12452	; 0x30a4
   12024:	movt	r3, #2
   12028:	mov	r2, #5
   1202c:	movw	r1, #9948	; 0x26dc
   12030:	movt	r1, #1
   12034:	ldr	r4, [r3]
   12038:	bl	10a28 <dcgettext@plt>
   1203c:	movw	r3, #12492	; 0x30cc
   12040:	movt	r3, #2
   12044:	mov	r1, #1
   12048:	ldr	r3, [r3]
   1204c:	mov	r2, r0
   12050:	mov	r0, r4
   12054:	bl	10b0c <__fprintf_chk@plt>
   12058:	mvn	r0, #0
   1205c:	b	11f5c <close@plt+0x13fc>
   12060:	cmp	r1, #0
   12064:	beq	12270 <close@plt+0x1710>
   12068:	eor	ip, r0, r1
   1206c:	rsbmi	r1, r1, #0
   12070:	subs	r2, r1, #1
   12074:	beq	1223c <close@plt+0x16dc>
   12078:	movs	r3, r0
   1207c:	rsbmi	r3, r0, #0
   12080:	cmp	r3, r1
   12084:	bls	12248 <close@plt+0x16e8>
   12088:	tst	r1, r2
   1208c:	beq	12258 <close@plt+0x16f8>
   12090:	clz	r2, r3
   12094:	clz	r0, r1
   12098:	sub	r2, r0, r2
   1209c:	rsbs	r2, r2, #31
   120a0:	addne	r2, r2, r2, lsl #1
   120a4:	mov	r0, #0
   120a8:	addne	pc, pc, r2, lsl #2
   120ac:	nop	{0}
   120b0:	cmp	r3, r1, lsl #31
   120b4:	adc	r0, r0, r0
   120b8:	subcs	r3, r3, r1, lsl #31
   120bc:	cmp	r3, r1, lsl #30
   120c0:	adc	r0, r0, r0
   120c4:	subcs	r3, r3, r1, lsl #30
   120c8:	cmp	r3, r1, lsl #29
   120cc:	adc	r0, r0, r0
   120d0:	subcs	r3, r3, r1, lsl #29
   120d4:	cmp	r3, r1, lsl #28
   120d8:	adc	r0, r0, r0
   120dc:	subcs	r3, r3, r1, lsl #28
   120e0:	cmp	r3, r1, lsl #27
   120e4:	adc	r0, r0, r0
   120e8:	subcs	r3, r3, r1, lsl #27
   120ec:	cmp	r3, r1, lsl #26
   120f0:	adc	r0, r0, r0
   120f4:	subcs	r3, r3, r1, lsl #26
   120f8:	cmp	r3, r1, lsl #25
   120fc:	adc	r0, r0, r0
   12100:	subcs	r3, r3, r1, lsl #25
   12104:	cmp	r3, r1, lsl #24
   12108:	adc	r0, r0, r0
   1210c:	subcs	r3, r3, r1, lsl #24
   12110:	cmp	r3, r1, lsl #23
   12114:	adc	r0, r0, r0
   12118:	subcs	r3, r3, r1, lsl #23
   1211c:	cmp	r3, r1, lsl #22
   12120:	adc	r0, r0, r0
   12124:	subcs	r3, r3, r1, lsl #22
   12128:	cmp	r3, r1, lsl #21
   1212c:	adc	r0, r0, r0
   12130:	subcs	r3, r3, r1, lsl #21
   12134:	cmp	r3, r1, lsl #20
   12138:	adc	r0, r0, r0
   1213c:	subcs	r3, r3, r1, lsl #20
   12140:	cmp	r3, r1, lsl #19
   12144:	adc	r0, r0, r0
   12148:	subcs	r3, r3, r1, lsl #19
   1214c:	cmp	r3, r1, lsl #18
   12150:	adc	r0, r0, r0
   12154:	subcs	r3, r3, r1, lsl #18
   12158:	cmp	r3, r1, lsl #17
   1215c:	adc	r0, r0, r0
   12160:	subcs	r3, r3, r1, lsl #17
   12164:	cmp	r3, r1, lsl #16
   12168:	adc	r0, r0, r0
   1216c:	subcs	r3, r3, r1, lsl #16
   12170:	cmp	r3, r1, lsl #15
   12174:	adc	r0, r0, r0
   12178:	subcs	r3, r3, r1, lsl #15
   1217c:	cmp	r3, r1, lsl #14
   12180:	adc	r0, r0, r0
   12184:	subcs	r3, r3, r1, lsl #14
   12188:	cmp	r3, r1, lsl #13
   1218c:	adc	r0, r0, r0
   12190:	subcs	r3, r3, r1, lsl #13
   12194:	cmp	r3, r1, lsl #12
   12198:	adc	r0, r0, r0
   1219c:	subcs	r3, r3, r1, lsl #12
   121a0:	cmp	r3, r1, lsl #11
   121a4:	adc	r0, r0, r0
   121a8:	subcs	r3, r3, r1, lsl #11
   121ac:	cmp	r3, r1, lsl #10
   121b0:	adc	r0, r0, r0
   121b4:	subcs	r3, r3, r1, lsl #10
   121b8:	cmp	r3, r1, lsl #9
   121bc:	adc	r0, r0, r0
   121c0:	subcs	r3, r3, r1, lsl #9
   121c4:	cmp	r3, r1, lsl #8
   121c8:	adc	r0, r0, r0
   121cc:	subcs	r3, r3, r1, lsl #8
   121d0:	cmp	r3, r1, lsl #7
   121d4:	adc	r0, r0, r0
   121d8:	subcs	r3, r3, r1, lsl #7
   121dc:	cmp	r3, r1, lsl #6
   121e0:	adc	r0, r0, r0
   121e4:	subcs	r3, r3, r1, lsl #6
   121e8:	cmp	r3, r1, lsl #5
   121ec:	adc	r0, r0, r0
   121f0:	subcs	r3, r3, r1, lsl #5
   121f4:	cmp	r3, r1, lsl #4
   121f8:	adc	r0, r0, r0
   121fc:	subcs	r3, r3, r1, lsl #4
   12200:	cmp	r3, r1, lsl #3
   12204:	adc	r0, r0, r0
   12208:	subcs	r3, r3, r1, lsl #3
   1220c:	cmp	r3, r1, lsl #2
   12210:	adc	r0, r0, r0
   12214:	subcs	r3, r3, r1, lsl #2
   12218:	cmp	r3, r1, lsl #1
   1221c:	adc	r0, r0, r0
   12220:	subcs	r3, r3, r1, lsl #1
   12224:	cmp	r3, r1
   12228:	adc	r0, r0, r0
   1222c:	subcs	r3, r3, r1
   12230:	cmp	ip, #0
   12234:	rsbmi	r0, r0, #0
   12238:	bx	lr
   1223c:	teq	ip, r0
   12240:	rsbmi	r0, r0, #0
   12244:	bx	lr
   12248:	movcc	r0, #0
   1224c:	asreq	r0, ip, #31
   12250:	orreq	r0, r0, #1
   12254:	bx	lr
   12258:	clz	r2, r1
   1225c:	rsb	r2, r2, #31
   12260:	cmp	ip, #0
   12264:	lsr	r0, r3, r2
   12268:	rsbmi	r0, r0, #0
   1226c:	bx	lr
   12270:	cmp	r0, #0
   12274:	mvngt	r0, #-2147483648	; 0x80000000
   12278:	movlt	r0, #-2147483648	; 0x80000000
   1227c:	b	122a0 <close@plt+0x1740>
   12280:	cmp	r1, #0
   12284:	beq	12270 <close@plt+0x1710>
   12288:	push	{r0, r1, lr}
   1228c:	bl	12068 <close@plt+0x1508>
   12290:	pop	{r1, r2, lr}
   12294:	mul	r3, r2, r0
   12298:	sub	r1, r1, r3
   1229c:	bx	lr
   122a0:	push	{r1, lr}
   122a4:	mov	r0, #8
   122a8:	bl	109e0 <raise@plt>
   122ac:	pop	{r1, pc}
   122b0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   122b4:	mov	r7, r0
   122b8:	ldr	r6, [pc, #76]	; 1230c <close@plt+0x17ac>
   122bc:	mov	r8, r1
   122c0:	ldr	r5, [pc, #72]	; 12310 <close@plt+0x17b0>
   122c4:	mov	r9, r2
   122c8:	add	r6, pc, r6
   122cc:	bl	109c0 <raise@plt-0x20>
   122d0:	add	r5, pc, r5
   122d4:	rsb	r6, r5, r6
   122d8:	asrs	r6, r6, #2
   122dc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   122e0:	sub	r5, r5, #4
   122e4:	mov	r4, #0
   122e8:	add	r4, r4, #1
   122ec:	ldr	r3, [r5, #4]!
   122f0:	mov	r0, r7
   122f4:	mov	r1, r8
   122f8:	mov	r2, r9
   122fc:	blx	r3
   12300:	cmp	r4, r6
   12304:	bne	122e8 <close@plt+0x1788>
   12308:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1230c:	andeq	r0, r1, r0, lsr ip
   12310:	andeq	r0, r1, r4, lsr #24
   12314:	bx	lr

Disassembly of section .fini:

00012318 <.fini>:
   12318:	push	{r3, lr}
   1231c:	pop	{r3, pc}
