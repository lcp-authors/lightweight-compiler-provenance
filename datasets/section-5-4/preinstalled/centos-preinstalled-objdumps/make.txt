
centos-preinstalled/make:     file format elf32-littlearm


Disassembly of section .init:

000117d0 <.init>:
   117d0:	push	{r3, lr}
   117d4:	bl	13cec <__assert_fail@plt+0x1fbc>
   117d8:	pop	{r3, pc}

Disassembly of section .plt:

000117dc <fdopen@plt-0x14>:
   117dc:	push	{lr}		; (str lr, [sp, #-4]!)
   117e0:	ldr	lr, [pc, #4]	; 117ec <fdopen@plt-0x4>
   117e4:	add	lr, pc, lr
   117e8:	ldr	pc, [lr, #8]!
   117ec:	andeq	r4, r3, r4, lsl r8

000117f0 <fdopen@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #52, 20	; 0x34000
   117f8:	ldr	pc, [ip, #2068]!	; 0x814

000117fc <calloc@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #52, 20	; 0x34000
   11804:	ldr	pc, [ip, #2060]!	; 0x80c

00011808 <strstr@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #52, 20	; 0x34000
   11810:	ldr	pc, [ip, #2052]!	; 0x804

00011814 <raise@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #52, 20	; 0x34000
   1181c:	ldr	pc, [ip, #2044]!	; 0x7fc

00011820 <getpwnam@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #52, 20	; 0x34000
   11828:	ldr	pc, [ip, #2036]!	; 0x7f4

0001182c <strcmp@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #52, 20	; 0x34000
   11834:	ldr	pc, [ip, #2028]!	; 0x7ec

00011838 <getlogin@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #52, 20	; 0x34000
   11840:	ldr	pc, [ip, #2020]!	; 0x7e4

00011844 <strtol@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #52, 20	; 0x34000
   1184c:	ldr	pc, [ip, #2012]!	; 0x7dc

00011850 <setrlimit64@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #52, 20	; 0x34000
   11858:	ldr	pc, [ip, #2004]!	; 0x7d4

0001185c <read@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #52, 20	; 0x34000
   11864:	ldr	pc, [ip, #1996]!	; 0x7cc

00011868 <fflush@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #52, 20	; 0x34000
   11870:	ldr	pc, [ip, #1988]!	; 0x7c4

00011874 <sigprocmask@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #52, 20	; 0x34000
   1187c:	ldr	pc, [ip, #1980]!	; 0x7bc

00011880 <memmove@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #52, 20	; 0x34000
   11888:	ldr	pc, [ip, #1972]!	; 0x7b4

0001188c <free@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #52, 20	; 0x34000
   11894:	ldr	pc, [ip, #1964]!	; 0x7ac

00011898 <fgets@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #52, 20	; 0x34000
   118a0:	ldr	pc, [ip, #1956]!	; 0x7a4

000118a4 <ferror@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #52, 20	; 0x34000
   118ac:	ldr	pc, [ip, #1948]!	; 0x79c

000118b0 <clock_gettime@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #52, 20	; 0x34000
   118b8:	ldr	pc, [ip, #1940]!	; 0x794

000118bc <_exit@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #52, 20	; 0x34000
   118c4:	ldr	pc, [ip, #1932]!	; 0x78c

000118c8 <memcpy@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #52, 20	; 0x34000
   118d0:	ldr	pc, [ip, #1924]!	; 0x784

000118d4 <execvp@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #52, 20	; 0x34000
   118dc:	ldr	pc, [ip, #1916]!	; 0x77c

000118e0 <signal@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #52, 20	; 0x34000
   118e8:	ldr	pc, [ip, #1908]!	; 0x774

000118ec <time@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #52, 20	; 0x34000
   118f4:	ldr	pc, [ip, #1900]!	; 0x76c

000118f8 <memcmp@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #52, 20	; 0x34000
   11900:	ldr	pc, [ip, #1892]!	; 0x764

00011904 <stpcpy@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #52, 20	; 0x34000
   1190c:	ldr	pc, [ip, #1884]!	; 0x75c

00011910 <ctime@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #52, 20	; 0x34000
   11918:	ldr	pc, [ip, #1876]!	; 0x754

0001191c <dcgettext@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #52, 20	; 0x34000
   11924:	ldr	pc, [ip, #1868]!	; 0x74c

00011928 <__strncpy_chk@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #52, 20	; 0x34000
   11930:	ldr	pc, [ip, #1860]!	; 0x744

00011934 <__stack_chk_fail@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #52, 20	; 0x34000
   1193c:	ldr	pc, [ip, #1852]!	; 0x73c

00011940 <alarm@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #52, 20	; 0x34000
   11948:	ldr	pc, [ip, #1844]!	; 0x734

0001194c <unlink@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #52, 20	; 0x34000
   11954:	ldr	pc, [ip, #1836]!	; 0x72c

00011958 <dup2@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #52, 20	; 0x34000
   11960:	ldr	pc, [ip, #1828]!	; 0x724

00011964 <getrlimit64@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #52, 20	; 0x34000
   1196c:	ldr	pc, [ip, #1820]!	; 0x71c

00011970 <realloc@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #52, 20	; 0x34000
   11978:	ldr	pc, [ip, #1812]!	; 0x714

0001197c <dup@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #52, 20	; 0x34000
   11984:	ldr	pc, [ip, #1804]!	; 0x70c

00011988 <wait@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #52, 20	; 0x34000
   11990:	ldr	pc, [ip, #1796]!	; 0x704

00011994 <textdomain@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #52, 20	; 0x34000
   1199c:	ldr	pc, [ip, #1788]!	; 0x6fc

000119a0 <chdir@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #52, 20	; 0x34000
   119a8:	ldr	pc, [ip, #1780]!	; 0x6f4

000119ac <__strndup@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #52, 20	; 0x34000
   119b4:	ldr	pc, [ip, #1772]!	; 0x6ec

000119b8 <__rawmemchr@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #52, 20	; 0x34000
   119c0:	ldr	pc, [ip, #1764]!	; 0x6e4

000119c4 <strsignal@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #52, 20	; 0x34000
   119cc:	ldr	pc, [ip, #1756]!	; 0x6dc

000119d0 <__fxstat64@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #52, 20	; 0x34000
   119d8:	ldr	pc, [ip, #1748]!	; 0x6d4

000119dc <readlink@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #52, 20	; 0x34000
   119e4:	ldr	pc, [ip, #1740]!	; 0x6cc

000119e8 <sigaction@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #52, 20	; 0x34000
   119f0:	ldr	pc, [ip, #1732]!	; 0x6c4

000119f4 <_IO_putc@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #52, 20	; 0x34000
   119fc:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a00 <fwrite@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #52, 20	; 0x34000
   11a08:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a0c <lseek64@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #52, 20	; 0x34000
   11a14:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a18 <__realpath_chk@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #52, 20	; 0x34000
   11a20:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a24 <waitpid@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #52, 20	; 0x34000
   11a2c:	ldr	pc, [ip, #1692]!	; 0x69c

00011a30 <strcpy@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #52, 20	; 0x34000
   11a38:	ldr	pc, [ip, #1684]!	; 0x694

00011a3c <gettimeofday@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #52, 20	; 0x34000
   11a44:	ldr	pc, [ip, #1676]!	; 0x68c

00011a48 <__strcpy_chk@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #52, 20	; 0x34000
   11a50:	ldr	pc, [ip, #1668]!	; 0x684

00011a54 <fread@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #52, 20	; 0x34000
   11a5c:	ldr	pc, [ip, #1660]!	; 0x67c

00011a60 <opendir@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #52, 20	; 0x34000
   11a68:	ldr	pc, [ip, #1652]!	; 0x674

00011a6c <fnmatch@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #52, 20	; 0x34000
   11a74:	ldr	pc, [ip, #1644]!	; 0x66c

00011a78 <open64@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #52, 20	; 0x34000
   11a80:	ldr	pc, [ip, #1636]!	; 0x664

00011a84 <getenv@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #52, 20	; 0x34000
   11a8c:	ldr	pc, [ip, #1628]!	; 0x65c

00011a90 <mkstemp64@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #52, 20	; 0x34000
   11a98:	ldr	pc, [ip, #1620]!	; 0x654

00011a9c <puts@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #52, 20	; 0x34000
   11aa4:	ldr	pc, [ip, #1612]!	; 0x64c

00011aa8 <malloc@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #52, 20	; 0x34000
   11ab0:	ldr	pc, [ip, #1604]!	; 0x644

00011ab4 <sigaddset@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #52, 20	; 0x34000
   11abc:	ldr	pc, [ip, #1596]!	; 0x63c

00011ac0 <__libc_start_main@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #52, 20	; 0x34000
   11ac8:	ldr	pc, [ip, #1588]!	; 0x634

00011acc <strerror@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #52, 20	; 0x34000
   11ad4:	ldr	pc, [ip, #1580]!	; 0x62c

00011ad8 <__vfprintf_chk@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #52, 20	; 0x34000
   11ae0:	ldr	pc, [ip, #1572]!	; 0x624

00011ae4 <localtime@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #52, 20	; 0x34000
   11aec:	ldr	pc, [ip, #1564]!	; 0x61c

00011af0 <__ctype_tolower_loc@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #52, 20	; 0x34000
   11af8:	ldr	pc, [ip, #1556]!	; 0x614

00011afc <__gmon_start__@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #52, 20	; 0x34000
   11b04:	ldr	pc, [ip, #1548]!	; 0x60c

00011b08 <getopt_long@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #52, 20	; 0x34000
   11b10:	ldr	pc, [ip, #1540]!	; 0x604

00011b14 <kill@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #52, 20	; 0x34000
   11b1c:	ldr	pc, [ip, #1532]!	; 0x5fc

00011b20 <__ctype_b_loc@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #52, 20	; 0x34000
   11b28:	ldr	pc, [ip, #1524]!	; 0x5f4

00011b2c <getcwd@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #52, 20	; 0x34000
   11b34:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b38 <getpid@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #52, 20	; 0x34000
   11b40:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b44 <exit@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #52, 20	; 0x34000
   11b4c:	ldr	pc, [ip, #1500]!	; 0x5dc

00011b50 <feof@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #52, 20	; 0x34000
   11b58:	ldr	pc, [ip, #1492]!	; 0x5d4

00011b5c <strlen@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #52, 20	; 0x34000
   11b64:	ldr	pc, [ip, #1484]!	; 0x5cc

00011b68 <strchr@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #52, 20	; 0x34000
   11b70:	ldr	pc, [ip, #1476]!	; 0x5c4

00011b74 <bsd_signal@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #52, 20	; 0x34000
   11b7c:	ldr	pc, [ip, #1468]!	; 0x5bc

00011b80 <fcntl@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #52, 20	; 0x34000
   11b88:	ldr	pc, [ip, #1460]!	; 0x5b4

00011b8c <__errno_location@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #52, 20	; 0x34000
   11b94:	ldr	pc, [ip, #1452]!	; 0x5ac

00011b98 <__sprintf_chk@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #52, 20	; 0x34000
   11ba0:	ldr	pc, [ip, #1444]!	; 0x5a4

00011ba4 <__cxa_atexit@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #52, 20	; 0x34000
   11bac:	ldr	pc, [ip, #1436]!	; 0x59c

00011bb0 <__strdup@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #52, 20	; 0x34000
   11bb8:	ldr	pc, [ip, #1428]!	; 0x594

00011bbc <setvbuf@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #52, 20	; 0x34000
   11bc4:	ldr	pc, [ip, #1420]!	; 0x58c

00011bc8 <memset@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #52, 20	; 0x34000
   11bd0:	ldr	pc, [ip, #1412]!	; 0x584

00011bd4 <strncpy@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #52, 20	; 0x34000
   11bdc:	ldr	pc, [ip, #1404]!	; 0x57c

00011be0 <__printf_chk@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #52, 20	; 0x34000
   11be8:	ldr	pc, [ip, #1396]!	; 0x574

00011bec <strtod@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #52, 20	; 0x34000
   11bf4:	ldr	pc, [ip, #1388]!	; 0x56c

00011bf8 <write@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #52, 20	; 0x34000
   11c00:	ldr	pc, [ip, #1380]!	; 0x564

00011c04 <fileno@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #52, 20	; 0x34000
   11c0c:	ldr	pc, [ip, #1372]!	; 0x55c

00011c10 <__fprintf_chk@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #52, 20	; 0x34000
   11c18:	ldr	pc, [ip, #1364]!	; 0x554

00011c1c <vfork@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #52, 20	; 0x34000
   11c24:	ldr	pc, [ip, #1356]!	; 0x54c

00011c28 <fclose@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #52, 20	; 0x34000
   11c30:	ldr	pc, [ip, #1348]!	; 0x544

00011c34 <pipe@plt>:
   11c34:	add	ip, pc, #0, 12
   11c38:	add	ip, ip, #52, 20	; 0x34000
   11c3c:	ldr	pc, [ip, #1340]!	; 0x53c

00011c40 <getloadavg@plt>:
   11c40:	add	ip, pc, #0, 12
   11c44:	add	ip, ip, #52, 20	; 0x34000
   11c48:	ldr	pc, [ip, #1332]!	; 0x534

00011c4c <glob64@plt>:
   11c4c:	add	ip, pc, #0, 12
   11c50:	add	ip, ip, #52, 20	; 0x34000
   11c54:	ldr	pc, [ip, #1324]!	; 0x52c

00011c58 <setlocale@plt>:
   11c58:	add	ip, pc, #0, 12
   11c5c:	add	ip, ip, #52, 20	; 0x34000
   11c60:	ldr	pc, [ip, #1316]!	; 0x524

00011c64 <sigemptyset@plt>:
   11c64:	add	ip, pc, #0, 12
   11c68:	add	ip, ip, #52, 20	; 0x34000
   11c6c:	ldr	pc, [ip, #1308]!	; 0x51c

00011c70 <putenv@plt>:
   11c70:	add	ip, pc, #0, 12
   11c74:	add	ip, ip, #52, 20	; 0x34000
   11c78:	ldr	pc, [ip, #1300]!	; 0x514

00011c7c <strrchr@plt>:
   11c7c:	add	ip, pc, #0, 12
   11c80:	add	ip, ip, #52, 20	; 0x34000
   11c84:	ldr	pc, [ip, #1292]!	; 0x50c

00011c88 <globfree64@plt>:
   11c88:	add	ip, pc, #0, 12
   11c8c:	add	ip, ip, #52, 20	; 0x34000
   11c90:	ldr	pc, [ip, #1284]!	; 0x504

00011c94 <sscanf@plt>:
   11c94:	add	ip, pc, #0, 12
   11c98:	add	ip, ip, #52, 20	; 0x34000
   11c9c:	ldr	pc, [ip, #1276]!	; 0x4fc

00011ca0 <readdir64@plt>:
   11ca0:	add	ip, pc, #0, 12
   11ca4:	add	ip, ip, #52, 20	; 0x34000
   11ca8:	ldr	pc, [ip, #1268]!	; 0x4f4

00011cac <remove@plt>:
   11cac:	add	ip, pc, #0, 12
   11cb0:	add	ip, ip, #52, 20	; 0x34000
   11cb4:	ldr	pc, [ip, #1260]!	; 0x4ec

00011cb8 <fopen64@plt>:
   11cb8:	add	ip, pc, #0, 12
   11cbc:	add	ip, ip, #52, 20	; 0x34000
   11cc0:	ldr	pc, [ip, #1252]!	; 0x4e4

00011cc4 <qsort@plt>:
   11cc4:	add	ip, pc, #0, 12
   11cc8:	add	ip, ip, #52, 20	; 0x34000
   11ccc:	ldr	pc, [ip, #1244]!	; 0x4dc

00011cd0 <bindtextdomain@plt>:
   11cd0:	add	ip, pc, #0, 12
   11cd4:	add	ip, ip, #52, 20	; 0x34000
   11cd8:	ldr	pc, [ip, #1236]!	; 0x4d4

00011cdc <__xstat64@plt>:
   11cdc:	add	ip, pc, #0, 12
   11ce0:	add	ip, ip, #52, 20	; 0x34000
   11ce4:	ldr	pc, [ip, #1228]!	; 0x4cc

00011ce8 <fputs@plt>:
   11ce8:	add	ip, pc, #0, 12
   11cec:	add	ip, ip, #52, 20	; 0x34000
   11cf0:	ldr	pc, [ip, #1220]!	; 0x4c4

00011cf4 <strncmp@plt>:
   11cf4:	add	ip, pc, #0, 12
   11cf8:	add	ip, ip, #52, 20	; 0x34000
   11cfc:	ldr	pc, [ip, #1212]!	; 0x4bc

00011d00 <abort@plt>:
   11d00:	add	ip, pc, #0, 12
   11d04:	add	ip, ip, #52, 20	; 0x34000
   11d08:	ldr	pc, [ip, #1204]!	; 0x4b4

00011d0c <close@plt>:
   11d0c:	add	ip, pc, #0, 12
   11d10:	add	ip, ip, #52, 20	; 0x34000
   11d14:	ldr	pc, [ip, #1196]!	; 0x4ac

00011d18 <__lxstat64@plt>:
   11d18:	add	ip, pc, #0, 12
   11d1c:	add	ip, ip, #52, 20	; 0x34000
   11d20:	ldr	pc, [ip, #1188]!	; 0x4a4

00011d24 <closedir@plt>:
   11d24:	add	ip, pc, #0, 12
   11d28:	add	ip, ip, #52, 20	; 0x34000
   11d2c:	ldr	pc, [ip, #1180]!	; 0x49c

00011d30 <__assert_fail@plt>:
   11d30:	add	ip, pc, #0, 12
   11d34:	add	ip, ip, #52, 20	; 0x34000
   11d38:	ldr	pc, [ip, #1172]!	; 0x494

Disassembly of section .text:

00011d40 <error@@Base-0x10f00>:
   11d40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d44:	add	fp, sp, #32
   11d48:	sub	sp, sp, #6208	; 0x1840
   11d4c:	movw	r3, #26864	; 0x68f0
   11d50:	sub	sp, sp, #36	; 0x24
   11d54:	movt	r3, #4
   11d58:	sub	r4, fp, #8192	; 0x2000
   11d5c:	sub	ip, fp, #6144	; 0x1800
   11d60:	mov	r5, r2
   11d64:	ldr	r3, [r3]
   11d68:	sub	ip, ip, #36	; 0x24
   11d6c:	str	r1, [r4, #1968]	; 0x7b0
   11d70:	sub	r1, fp, #6144	; 0x1800
   11d74:	str	r0, [r4, #1956]	; 0x7a4
   11d78:	sub	r1, r1, #60	; 0x3c
   11d7c:	mov	r0, #3
   11d80:	sub	ip, ip, #24
   11d84:	str	r3, [fp, #-40]	; 0xffffffd8
   11d88:	str	ip, [r4, #1984]	; 0x7c0
   11d8c:	bl	11964 <getrlimit64@plt>
   11d90:	cmp	r0, #0
   11d94:	bne	11db0 <__assert_fail@plt+0x80>
   11d98:	movw	ip, #59368	; 0xe7e8
   11d9c:	sub	r0, fp, #36	; 0x24
   11da0:	movt	ip, #65535	; 0xffff
   11da4:	ldrd	r2, [r0, ip]
   11da8:	orrs	r1, r2, r3
   11dac:	bne	126d0 <__assert_fail@plt+0x9a0>
   11db0:	movw	r1, #29456	; 0x7310
   11db4:	movt	r1, #4
   11db8:	mov	r2, #0
   11dbc:	mov	r3, #0
   11dc0:	strd	r2, [r1]
   11dc4:	movw	r0, #13740	; 0x35ac
   11dc8:	movt	r0, #2
   11dcc:	bl	2f5e8 <error@@Base+0xc9a8>
   11dd0:	movw	r3, #28268	; 0x6e6c
   11dd4:	movt	r3, #4
   11dd8:	movw	r1, #6032	; 0x1790
   11ddc:	mov	r0, #6
   11de0:	movt	r1, #3
   11de4:	mov	r2, #0
   11de8:	str	r2, [r3]
   11dec:	bl	11c58 <setlocale@plt>
   11df0:	movw	r0, #9856	; 0x2680
   11df4:	movw	r1, #9864	; 0x2688
   11df8:	movt	r0, #3
   11dfc:	movt	r1, #3
   11e00:	bl	11cd0 <bindtextdomain@plt>
   11e04:	movw	r0, #9856	; 0x2680
   11e08:	movt	r0, #3
   11e0c:	bl	11994 <textdomain@plt>
   11e10:	movw	r0, #29560	; 0x7378
   11e14:	movt	r0, #4
   11e18:	bl	11c64 <sigemptyset@plt>
   11e1c:	movw	r1, #22588	; 0x583c
   11e20:	mov	r0, #1
   11e24:	movt	r1, #1
   11e28:	bl	11b74 <bsd_signal@plt>
   11e2c:	cmp	r0, #1
   11e30:	mov	r1, r0
   11e34:	beq	12744 <__assert_fail@plt+0xa14>
   11e38:	movw	r0, #29560	; 0x7378
   11e3c:	mov	r1, #1
   11e40:	movt	r0, #4
   11e44:	bl	11ab4 <sigaddset@plt>
   11e48:	movw	r1, #22588	; 0x583c
   11e4c:	mov	r0, #3
   11e50:	movt	r1, #1
   11e54:	bl	11b74 <bsd_signal@plt>
   11e58:	cmp	r0, #1
   11e5c:	beq	1274c <__assert_fail@plt+0xa1c>
   11e60:	movw	r0, #29560	; 0x7378
   11e64:	mov	r1, #3
   11e68:	movt	r0, #4
   11e6c:	bl	11ab4 <sigaddset@plt>
   11e70:	movw	r1, #22588	; 0x583c
   11e74:	mov	r0, #2
   11e78:	movt	r1, #1
   11e7c:	bl	11b74 <bsd_signal@plt>
   11e80:	cmp	r0, #1
   11e84:	beq	1275c <__assert_fail@plt+0xa2c>
   11e88:	movw	r0, #29560	; 0x7378
   11e8c:	mov	r1, #2
   11e90:	movt	r0, #4
   11e94:	bl	11ab4 <sigaddset@plt>
   11e98:	movw	r1, #22588	; 0x583c
   11e9c:	mov	r0, #15
   11ea0:	movt	r1, #1
   11ea4:	bl	11b74 <bsd_signal@plt>
   11ea8:	cmp	r0, #1
   11eac:	beq	1276c <__assert_fail@plt+0xa3c>
   11eb0:	movw	r0, #29560	; 0x7378
   11eb4:	mov	r1, #15
   11eb8:	movt	r0, #4
   11ebc:	bl	11ab4 <sigaddset@plt>
   11ec0:	movw	r1, #22588	; 0x583c
   11ec4:	mov	r0, #24
   11ec8:	movt	r1, #1
   11ecc:	bl	11b74 <bsd_signal@plt>
   11ed0:	cmp	r0, #1
   11ed4:	beq	1277c <__assert_fail@plt+0xa4c>
   11ed8:	movw	r0, #29560	; 0x7378
   11edc:	mov	r1, #24
   11ee0:	movt	r0, #4
   11ee4:	bl	11ab4 <sigaddset@plt>
   11ee8:	movw	r1, #22588	; 0x583c
   11eec:	mov	r0, #25
   11ef0:	movt	r1, #1
   11ef4:	bl	11b74 <bsd_signal@plt>
   11ef8:	cmp	r0, #1
   11efc:	beq	1278c <__assert_fail@plt+0xa5c>
   11f00:	movw	r0, #29560	; 0x7378
   11f04:	mov	r1, #25
   11f08:	movt	r0, #4
   11f0c:	bl	11ab4 <sigaddset@plt>
   11f10:	sub	ip, fp, #8192	; 0x2000
   11f14:	mov	r1, #0
   11f18:	mov	r0, #17
   11f1c:	movw	lr, #26888	; 0x6908
   11f20:	movt	lr, #4
   11f24:	str	lr, [ip, #1972]	; 0x7b4
   11f28:	bl	11b74 <bsd_signal@plt>
   11f2c:	sub	r1, fp, #8192	; 0x2000
   11f30:	mov	r2, #1
   11f34:	mov	r3, #8192	; 0x2000
   11f38:	ldr	r1, [r1, #1972]	; 0x7b4
   11f3c:	ldr	r0, [r1]
   11f40:	mov	r1, #0
   11f44:	bl	11bbc <setvbuf@plt>
   11f48:	sub	r2, fp, #8192	; 0x2000
   11f4c:	ldr	r2, [r2, #1968]	; 0x7b0
   11f50:	ldr	r0, [r2]
   11f54:	cmp	r0, #0
   11f58:	movweq	r0, #6032	; 0x1790
   11f5c:	movteq	r0, #3
   11f60:	streq	r0, [r2]
   11f64:	ldrb	r3, [r0]
   11f68:	cmp	r3, #0
   11f6c:	bne	1269c <__assert_fail@plt+0x96c>
   11f70:	movw	r3, #29532	; 0x735c
   11f74:	movt	r3, #4
   11f78:	movw	r2, #9856	; 0x2680
   11f7c:	movt	r2, #3
   11f80:	str	r2, [r3]
   11f84:	bl	235a0 <error@@Base+0x960>
   11f88:	bl	2c37c <error@@Base+0x973c>
   11f8c:	bl	2ba78 <error@@Base+0x8e38>
   11f90:	bl	196ac <__assert_fail@plt+0x797c>
   11f94:	bl	16b14 <__assert_fail@plt+0x4de4>
   11f98:	bl	1cc24 <__assert_fail@plt+0xaef4>
   11f9c:	sub	r0, fp, #4096	; 0x1000
   11fa0:	mov	r1, #4096	; 0x1000
   11fa4:	sub	r0, r0, #40	; 0x28
   11fa8:	bl	11b2c <getcwd@plt>
   11fac:	subs	r4, r0, #0
   11fb0:	beq	1279c <__assert_fail@plt+0xa6c>
   11fb4:	sub	r0, fp, #4096	; 0x1000
   11fb8:	movw	r4, #29484	; 0x732c
   11fbc:	sub	r0, r0, #40	; 0x28
   11fc0:	movt	r4, #4
   11fc4:	bl	2312c <error@@Base+0x4ec>
   11fc8:	sub	ip, fp, #8192	; 0x2000
   11fcc:	str	r4, [ip, #1964]	; 0x7ac
   11fd0:	str	r0, [r4]
   11fd4:	movw	r9, #26824	; 0x68c8
   11fd8:	movt	r9, #4
   11fdc:	mov	r4, #0
   11fe0:	str	r4, [sp]
   11fe4:	ldr	r1, [r9]
   11fe8:	mov	r3, r4
   11fec:	movw	r0, #9892	; 0x26a4
   11ff0:	movw	r2, #6032	; 0x1790
   11ff4:	movt	r0, #3
   11ff8:	movt	r2, #3
   11ffc:	ldr	ip, [r1, #4]
   12000:	mov	r1, #10
   12004:	str	r4, [sp, #8]
   12008:	str	ip, [sp, #4]
   1200c:	bl	2c3b8 <error@@Base+0x9778>
   12010:	ldr	r1, [r9]
   12014:	mov	r3, r4
   12018:	ldrb	ip, [r0, #20]
   1201c:	mov	r2, r0
   12020:	movw	r0, #9904	; 0x26b0
   12024:	movt	r0, #3
   12028:	orr	ip, ip, #16
   1202c:	strb	ip, [r2, #20]
   12030:	str	r4, [sp]
   12034:	movw	r2, #6032	; 0x1790
   12038:	ldr	ip, [r1, #4]
   1203c:	movt	r2, #3
   12040:	mov	r1, #13
   12044:	str	r4, [sp, #8]
   12048:	str	ip, [sp, #4]
   1204c:	bl	2c3b8 <error@@Base+0x9778>
   12050:	ldr	r1, [r9]
   12054:	mov	r3, r4
   12058:	ldrb	ip, [r0, #20]
   1205c:	mov	r2, r0
   12060:	movw	r0, #9920	; 0x26c0
   12064:	movt	r0, #3
   12068:	orr	ip, ip, #16
   1206c:	strb	ip, [r2, #20]
   12070:	str	r4, [sp]
   12074:	movw	r2, #65356	; 0xff4c
   12078:	ldr	ip, [r1, #4]
   1207c:	movt	r2, #2
   12080:	mov	r1, #11
   12084:	str	r4, [sp, #8]
   12088:	str	ip, [sp, #4]
   1208c:	bl	2c3b8 <error@@Base+0x9778>
   12090:	ldr	r1, [r9]
   12094:	str	r4, [sp]
   12098:	mov	r3, r4
   1209c:	movw	r0, #9932	; 0x26cc
   120a0:	movw	r2, #9944	; 0x26d8
   120a4:	ldr	ip, [r1, #4]
   120a8:	movt	r0, #3
   120ac:	str	r4, [sp, #8]
   120b0:	movt	r2, #3
   120b4:	mov	r1, #9
   120b8:	str	ip, [sp, #4]
   120bc:	bl	2c3b8 <error@@Base+0x9778>
   120c0:	ldr	r0, [r5]
   120c4:	cmp	r0, r4
   120c8:	beq	127d8 <__assert_fail@plt+0xaa8>
   120cc:	sub	r1, fp, #8192	; 0x2000
   120d0:	movw	r7, #14976	; 0x3a80
   120d4:	movw	r8, #10064	; 0x2750
   120d8:	movt	r7, #3
   120dc:	movt	r8, #3
   120e0:	mov	r6, #1
   120e4:	str	r4, [r1, #1976]	; 0x7b8
   120e8:	mov	sl, r4
   120ec:	movw	r4, #29488	; 0x7330
   120f0:	movt	r4, #4
   120f4:	str	r4, [r1, #1980]	; 0x7bc
   120f8:	ldrb	r1, [r0]
   120fc:	cmp	r1, #0
   12100:	cmpne	r1, #61	; 0x3d
   12104:	moveq	r1, #0
   12108:	movne	r1, #1
   1210c:	beq	12694 <__assert_fail@plt+0x964>
   12110:	add	r2, r0, #1
   12114:	mov	r4, r2
   12118:	add	r2, r2, #1
   1211c:	ldrb	r3, [r4]
   12120:	cmp	r3, #61	; 0x3d
   12124:	cmpne	r3, #0
   12128:	bne	12114 <__assert_fail@plt+0x3e4>
   1212c:	rsb	r1, r0, r4
   12130:	ldr	r3, [r9]
   12134:	add	r4, r4, #1
   12138:	str	r6, [sp]
   1213c:	mov	r2, r4
   12140:	ldr	ip, [r3, #4]
   12144:	mov	r3, #1
   12148:	str	sl, [sp, #8]
   1214c:	str	ip, [sp, #4]
   12150:	bl	2c3b8 <error@@Base+0x9778>
   12154:	ldr	r3, [r0]
   12158:	mov	ip, r0
   1215c:	ldrb	r2, [r0, #23]
   12160:	cmp	r3, r7
   12164:	bfc	r2, #5, #2
   12168:	strb	r2, [r0, #23]
   1216c:	beq	1264c <__assert_fail@plt+0x91c>
   12170:	ldrb	r2, [r3]
   12174:	cmp	r2, #83	; 0x53
   12178:	beq	12620 <__assert_fail@plt+0x8f0>
   1217c:	cmp	r3, r8
   12180:	beq	125f8 <__assert_fail@plt+0x8c8>
   12184:	ldrb	r2, [r3]
   12188:	cmp	r2, #77	; 0x4d
   1218c:	beq	125d4 <__assert_fail@plt+0x8a4>
   12190:	ldr	r0, [r5, #4]!
   12194:	cmp	r0, #0
   12198:	bne	120f8 <__assert_fail@plt+0x3c8>
   1219c:	bl	22944 <__assert_fail@plt+0x10c14>
   121a0:	sub	r3, fp, #8192	; 0x2000
   121a4:	movw	r4, #27308	; 0x6aac
   121a8:	movt	r4, #4
   121ac:	ldr	r0, [r3, #1956]	; 0x7a4
   121b0:	mov	r2, #0
   121b4:	ldr	r1, [r3, #1968]	; 0x7b0
   121b8:	bl	22210 <__assert_fail@plt+0x104e0>
   121bc:	ldr	r3, [r4, #848]	; 0x350
   121c0:	cmp	r3, #0
   121c4:	movwne	r3, #4095	; 0xfff
   121c8:	strne	r3, [r4]
   121cc:	ldr	r3, [r4, #852]	; 0x354
   121d0:	cmp	r3, #0
   121d4:	beq	122a0 <__assert_fail@plt+0x570>
   121d8:	ldr	r6, [r3]
   121dc:	ldr	r5, [r6]
   121e0:	cmp	r5, #0
   121e4:	beq	122a0 <__assert_fail@plt+0x570>
   121e8:	bl	11af0 <__ctype_tolower_loc@plt>
   121ec:	mov	ip, r6
   121f0:	ldr	r0, [r0]
   121f4:	ldrb	r3, [r5]
   121f8:	ldr	r3, [r0, r3, lsl #2]
   121fc:	sub	r3, r3, #97	; 0x61
   12200:	cmp	r3, #21
   12204:	ldrls	pc, [pc, r3, lsl #2]
   12208:	b	125a8 <__assert_fail@plt+0x878>
   1220c:	muleq	r1, r4, r5
   12210:	andeq	r2, r1, r4, lsl #11
   12214:	andeq	r2, r1, r4, ror r5
   12218:	andeq	r2, r1, r8, lsr #11
   1221c:	andeq	r2, r1, r4, ror #10
   12220:	andeq	r2, r1, r8, lsr #11
   12224:	andeq	r2, r1, r8, lsr #11
   12228:	andeq	r2, r1, r8, lsr #11
   1222c:	andeq	r2, r1, r4, asr r5
   12230:	andeq	r2, r1, r4, asr #10
   12234:	andeq	r2, r1, r8, lsr #11
   12238:	andeq	r2, r1, r8, lsr #11
   1223c:	andeq	r2, r1, r0, lsr r5
   12240:	andeq	r2, r1, r8, lsr #11
   12244:	andeq	r2, r1, r8, lsr #11
   12248:	andeq	r2, r1, r8, lsr #11
   1224c:	andeq	r2, r1, r8, lsr #11
   12250:	andeq	r2, r1, r8, lsr #11
   12254:	andeq	r2, r1, r8, lsr #11
   12258:	andeq	r2, r1, r8, lsr #11
   1225c:	andeq	r2, r1, r8, lsr #11
   12260:	andeq	r2, r1, r4, ror #4
   12264:	ldr	r3, [r4]
   12268:	orr	r3, r3, #3
   1226c:	str	r3, [r4]
   12270:	add	r5, r5, #1
   12274:	b	12284 <__assert_fail@plt+0x554>
   12278:	cmp	r3, #44	; 0x2c
   1227c:	cmpne	r3, #32
   12280:	beq	125cc <__assert_fail@plt+0x89c>
   12284:	mov	r2, r5
   12288:	ldrb	r3, [r5], #1
   1228c:	cmp	r3, #0
   12290:	bne	12278 <__assert_fail@plt+0x548>
   12294:	ldr	r5, [ip, #4]!
   12298:	cmp	r5, #0
   1229c:	bne	121f4 <__assert_fail@plt+0x4c4>
   122a0:	ldr	r3, [r4, #856]	; 0x358
   122a4:	cmp	r3, #0
   122a8:	moveq	r2, r3
   122ac:	bne	12718 <__assert_fail@plt+0x9e8>
   122b0:	ldr	r1, [r4, #48]	; 0x30
   122b4:	movw	r3, #27308	; 0x6aac
   122b8:	str	r2, [r4, #860]	; 0x35c
   122bc:	movt	r3, #4
   122c0:	cmp	r1, #0
   122c4:	bne	1272c <__assert_fail@plt+0x9fc>
   122c8:	ldr	r2, [r3, #28]
   122cc:	cmp	r2, #0
   122d0:	bne	1272c <__assert_fail@plt+0x9fc>
   122d4:	ldr	r3, [r3]
   122d8:	cmp	r3, #0
   122dc:	bne	1272c <__assert_fail@plt+0x9fc>
   122e0:	movw	r3, #61436	; 0xeffc
   122e4:	sub	r0, fp, #36	; 0x24
   122e8:	movt	r3, #65535	; 0xffff
   122ec:	ldrb	r3, [r0, r3]
   122f0:	uxtb	r3, r3
   122f4:	cmp	r3, #0
   122f8:	beq	1235c <__assert_fail@plt+0x62c>
   122fc:	sub	r1, fp, #8192	; 0x2000
   12300:	ldr	r1, [r1, #1968]	; 0x7b0
   12304:	ldr	r5, [r1]
   12308:	cmp	r5, #0
   1230c:	beq	1235c <__assert_fail@plt+0x62c>
   12310:	ldrb	r3, [r5]
   12314:	cmp	r3, #47	; 0x2f
   12318:	beq	1235c <__assert_fail@plt+0x62c>
   1231c:	mov	r0, r5
   12320:	mov	r1, #47	; 0x2f
   12324:	bl	11b68 <strchr@plt>
   12328:	cmp	r0, #0
   1232c:	beq	1235c <__assert_fail@plt+0x62c>
   12330:	sub	r1, fp, #4096	; 0x1000
   12334:	mov	r3, r5
   12338:	sub	r1, r1, #40	; 0x28
   1233c:	movw	r2, #2240	; 0x8c0
   12340:	mov	r0, #3
   12344:	movt	r2, #3
   12348:	bl	2300c <error@@Base+0x3cc>
   1234c:	bl	2312c <error@@Base+0x4ec>
   12350:	sub	r2, fp, #8192	; 0x2000
   12354:	ldr	r2, [r2, #1968]	; 0x7b0
   12358:	str	r0, [r2]
   1235c:	ldr	r2, [r9]
   12360:	mov	r8, #0
   12364:	str	r8, [sp]
   12368:	sub	ip, fp, #8192	; 0x2000
   1236c:	mov	r3, r8
   12370:	mov	r1, #12
   12374:	ldr	r2, [r2, #4]
   12378:	movw	r0, #10120	; 0x2788
   1237c:	movt	r0, #3
   12380:	stmib	sp, {r2, r8}
   12384:	ldr	ip, [ip, #1968]	; 0x7b0
   12388:	ldr	r2, [ip]
   1238c:	bl	2c3b8 <error@@Base+0x9778>
   12390:	ldr	r2, [r9]
   12394:	mov	r3, #1
   12398:	str	r3, [sp]
   1239c:	movw	r0, #10136	; 0x2798
   123a0:	mov	r3, r8
   123a4:	ldr	ip, [r2, #4]
   123a8:	movt	r0, #3
   123ac:	str	r8, [sp, #8]
   123b0:	movw	r2, #10144	; 0x27a0
   123b4:	mov	r1, #4
   123b8:	movt	r2, #3
   123bc:	str	ip, [sp, #4]
   123c0:	bl	2c3b8 <error@@Base+0x9778>
   123c4:	ldr	r5, [r4, #12]
   123c8:	cmp	r5, r8
   123cc:	beq	124dc <__assert_fail@plt+0x7ac>
   123d0:	mov	r6, r5
   123d4:	ldr	r7, [r6, #4]
   123d8:	ldr	r0, [r7]
   123dc:	bl	11b5c <strlen@plt>
   123e0:	ldrb	r3, [r7, #20]
   123e4:	tst	r3, #1
   123e8:	add	r8, r8, r0, lsl #1
   123ec:	ldr	r0, [r7, #8]
   123f0:	addeq	r8, r8, #1
   123f4:	bl	11b5c <strlen@plt>
   123f8:	ldr	r6, [r6]
   123fc:	add	r8, r8, #2
   12400:	cmp	r6, #0
   12404:	add	r8, r8, r0, lsl #1
   12408:	bne	123d4 <__assert_fail@plt+0x6a4>
   1240c:	add	r3, r8, #14
   12410:	sub	r0, fp, #8192	; 0x2000
   12414:	bic	r3, r3, #7
   12418:	mov	r8, #58	; 0x3a
   1241c:	sub	sp, sp, r3
   12420:	mov	r7, #61	; 0x3d
   12424:	add	lr, sp, #16
   12428:	mov	r6, #32
   1242c:	str	lr, [r0, #1980]	; 0x7bc
   12430:	mov	r0, lr
   12434:	ldr	sl, [r5, #4]
   12438:	ldr	r1, [sl]
   1243c:	bl	21190 <__assert_fail@plt+0xf460>
   12440:	ldrb	r3, [sl, #20]
   12444:	tst	r3, #1
   12448:	strbeq	r8, [r0]
   1244c:	addeq	r0, r0, #1
   12450:	add	r0, r0, #1
   12454:	strb	r7, [r0, #-1]
   12458:	ldr	r1, [sl, #8]
   1245c:	bl	21190 <__assert_fail@plt+0xf460>
   12460:	strb	r6, [r0]
   12464:	mov	r3, r0
   12468:	ldr	r5, [r5]
   1246c:	add	r0, r0, #1
   12470:	cmp	r5, #0
   12474:	bne	12434 <__assert_fail@plt+0x704>
   12478:	strb	r5, [r3]
   1247c:	sub	r3, fp, #8192	; 0x2000
   12480:	ldr	ip, [r9]
   12484:	mov	r1, #23
   12488:	ldr	r2, [r3, #1980]	; 0x7bc
   1248c:	movw	r0, #10160	; 0x27b0
   12490:	str	r5, [sp]
   12494:	mov	r3, #6
   12498:	ldr	ip, [ip, #4]
   1249c:	movt	r0, #3
   124a0:	str	r5, [sp, #8]
   124a4:	str	ip, [sp, #4]
   124a8:	bl	2c3b8 <error@@Base+0x9778>
   124ac:	ldr	r2, [r9]
   124b0:	mov	r3, #1
   124b4:	str	r3, [sp]
   124b8:	movw	r0, #10184	; 0x27c8
   124bc:	mov	r1, #13
   124c0:	ldr	ip, [r2, #4]
   124c4:	movt	r0, #3
   124c8:	movw	r2, #10200	; 0x27d8
   124cc:	str	r5, [sp, #8]
   124d0:	movt	r2, #3
   124d4:	str	ip, [sp, #4]
   124d8:	bl	2c3b8 <error@@Base+0x9778>
   124dc:	ldr	r3, [r4, #864]	; 0x360
   124e0:	cmp	r3, #0
   124e4:	beq	127e4 <__assert_fail@plt+0xab4>
   124e8:	ldr	r3, [r3]
   124ec:	ldr	r5, [r3]
   124f0:	cmp	r5, #0
   124f4:	beq	127e4 <__assert_fail@plt+0xab4>
   124f8:	mov	r6, #4
   124fc:	b	12518 <__assert_fail@plt+0x7e8>
   12500:	ldr	r3, [r4, #864]	; 0x360
   12504:	ldr	r3, [r3]
   12508:	ldr	r5, [r3, r6]
   1250c:	add	r6, r6, #4
   12510:	cmp	r5, #0
   12514:	beq	127e4 <__assert_fail@plt+0xab4>
   12518:	mov	r0, r5
   1251c:	bl	119a0 <chdir@plt>
   12520:	cmp	r0, #0
   12524:	bge	12500 <__assert_fail@plt+0x7d0>
   12528:	mov	r0, r5
   1252c:	bl	22f2c <error@@Base+0x2ec>
   12530:	ldr	r3, [r4]
   12534:	orr	r3, r3, #256	; 0x100
   12538:	orr	r3, r3, #1
   1253c:	str	r3, [r4]
   12540:	b	12270 <__assert_fail@plt+0x540>
   12544:	ldr	r3, [r4]
   12548:	orr	r3, r3, #4
   1254c:	str	r3, [r4]
   12550:	b	12270 <__assert_fail@plt+0x540>
   12554:	ldr	r3, [r4]
   12558:	orr	r3, r3, #9
   1255c:	str	r3, [r4]
   12560:	b	12270 <__assert_fail@plt+0x540>
   12564:	ldr	r3, [r4]
   12568:	orr	r3, r3, #8192	; 0x2000
   1256c:	str	r3, [r4]
   12570:	b	12270 <__assert_fail@plt+0x540>
   12574:	ldr	r3, [r4]
   12578:	orr	r3, r3, #4096	; 0x1000
   1257c:	str	r3, [r4]
   12580:	b	12270 <__assert_fail@plt+0x540>
   12584:	ldr	r3, [r4]
   12588:	orr	r3, r3, #1
   1258c:	str	r3, [r4]
   12590:	b	12270 <__assert_fail@plt+0x540>
   12594:	ldr	r3, [r4]
   12598:	mvn	r3, r3, lsr #12
   1259c:	mvn	r3, r3, lsl #12
   125a0:	str	r3, [r4]
   125a4:	b	12270 <__assert_fail@plt+0x540>
   125a8:	mov	r2, #5
   125ac:	movw	r1, #10080	; 0x2760
   125b0:	mov	r0, #0
   125b4:	movt	r1, #3
   125b8:	bl	1191c <dcgettext@plt>
   125bc:	mov	r2, r5
   125c0:	mov	r1, r0
   125c4:	mov	r0, #0
   125c8:	bl	22d64 <error@@Base+0x124>
   125cc:	add	r5, r2, #1
   125d0:	b	121f4 <__assert_fail@plt+0x4c4>
   125d4:	add	r0, r3, #1
   125d8:	sub	r3, fp, #8192	; 0x2000
   125dc:	ldr	r1, [pc, #3920]	; 13534 <__assert_fail@plt+0x1804>
   125e0:	str	ip, [r3, #1936]	; 0x790
   125e4:	bl	1182c <strcmp@plt>
   125e8:	sub	lr, fp, #8192	; 0x2000
   125ec:	ldr	ip, [lr, #1936]	; 0x790
   125f0:	cmp	r0, #0
   125f4:	bne	12190 <__assert_fail@plt+0x460>
   125f8:	ldrb	r3, [ip, #23]
   125fc:	mov	r1, #0
   12600:	mov	r0, r4
   12604:	mov	r2, #10
   12608:	bfi	r3, r6, #5, #2
   1260c:	strb	r3, [ip, #23]
   12610:	bl	11844 <strtol@plt>
   12614:	sub	r1, fp, #8192	; 0x2000
   12618:	str	r0, [r1, #1976]	; 0x7b8
   1261c:	b	12190 <__assert_fail@plt+0x460>
   12620:	sub	lr, fp, #8192	; 0x2000
   12624:	add	r0, r3, #1
   12628:	ldr	r1, [pc, #3848]	; 13538 <__assert_fail@plt+0x1808>
   1262c:	str	r3, [lr, #1940]	; 0x794
   12630:	str	ip, [lr, #1936]	; 0x790
   12634:	bl	1182c <strcmp@plt>
   12638:	sub	lr, fp, #8192	; 0x2000
   1263c:	ldr	r3, [lr, #1940]	; 0x794
   12640:	ldr	ip, [lr, #1936]	; 0x790
   12644:	cmp	r0, #0
   12648:	bne	1217c <__assert_fail@plt+0x44c>
   1264c:	ldrb	r3, [ip, #23]
   12650:	sub	r1, fp, #8192	; 0x2000
   12654:	sub	lr, fp, #8192	; 0x2000
   12658:	mov	r0, r4
   1265c:	bfi	r3, r6, #5, #2
   12660:	strb	r3, [ip, #23]
   12664:	ldr	r1, [r1, #1980]	; 0x7bc
   12668:	mov	r3, #5
   1266c:	str	r7, [r1]
   12670:	str	r3, [r1, #4]
   12674:	str	ip, [lr, #1936]	; 0x790
   12678:	bl	2312c <error@@Base+0x4ec>
   1267c:	sub	r1, fp, #8192	; 0x2000
   12680:	ldr	ip, [r1, #1936]	; 0x790
   12684:	ldr	r2, [r1, #1980]	; 0x7bc
   12688:	ldr	r3, [ip]
   1268c:	str	r0, [r2, #8]
   12690:	b	1217c <__assert_fail@plt+0x44c>
   12694:	mov	r4, r0
   12698:	b	12130 <__assert_fail@plt+0x400>
   1269c:	mov	r1, #47	; 0x2f
   126a0:	bl	11c7c <strrchr@plt>
   126a4:	movw	r3, #29532	; 0x735c
   126a8:	movt	r3, #4
   126ac:	cmp	r0, #0
   126b0:	str	r0, [r3]
   126b4:	subeq	r4, fp, #8192	; 0x2000
   126b8:	addne	r0, r0, #1
   126bc:	strne	r0, [r3]
   126c0:	ldreq	r4, [r4, #1968]	; 0x7b0
   126c4:	ldreq	r2, [r4]
   126c8:	streq	r2, [r3]
   126cc:	b	11f84 <__assert_fail@plt+0x254>
   126d0:	sub	r4, fp, #6144	; 0x1800
   126d4:	ldrd	r6, [r4, #-52]	; 0xffffffcc
   126d8:	cmp	r3, r7
   126dc:	cmpeq	r2, r6
   126e0:	bcs	11db0 <__assert_fail@plt+0x80>
   126e4:	sub	lr, fp, #8192	; 0x2000
   126e8:	sub	r4, fp, #36	; 0x24
   126ec:	ldr	lr, [lr, #1984]	; 0x7c0
   126f0:	ldm	lr, {r0, r1, r2, r3}
   126f4:	movw	lr, #29456	; 0x7310
   126f8:	movt	lr, #4
   126fc:	strd	r6, [r4, ip]
   12700:	stm	lr, {r0, r1, r2, r3}
   12704:	sub	r1, fp, #6144	; 0x1800
   12708:	sub	r1, r1, #60	; 0x3c
   1270c:	mov	r0, #3
   12710:	bl	11850 <setrlimit64@plt>
   12714:	b	11dc4 <__assert_fail@plt+0x94>
   12718:	sub	lr, fp, #8192	; 0x2000
   1271c:	ldr	lr, [lr, #1976]	; 0x7b8
   12720:	rsbs	r2, lr, #1
   12724:	movcc	r2, #0
   12728:	b	122b0 <__assert_fail@plt+0x580>
   1272c:	bl	21d28 <__assert_fail@plt+0xfff8>
   12730:	ldr	r3, [r4, #48]	; 0x30
   12734:	cmp	r3, #0
   12738:	beq	122e0 <__assert_fail@plt+0x5b0>
   1273c:	mov	r0, #0
   12740:	bl	22150 <__assert_fail@plt+0x10420>
   12744:	bl	11b74 <bsd_signal@plt>
   12748:	b	11e48 <__assert_fail@plt+0x118>
   1274c:	mov	r1, r0
   12750:	mov	r0, #3
   12754:	bl	11b74 <bsd_signal@plt>
   12758:	b	11e70 <__assert_fail@plt+0x140>
   1275c:	mov	r1, r0
   12760:	mov	r0, #2
   12764:	bl	11b74 <bsd_signal@plt>
   12768:	b	11e98 <__assert_fail@plt+0x168>
   1276c:	mov	r1, r0
   12770:	mov	r0, #15
   12774:	bl	11b74 <bsd_signal@plt>
   12778:	b	11ec0 <__assert_fail@plt+0x190>
   1277c:	mov	r1, r0
   12780:	mov	r0, #24
   12784:	bl	11b74 <bsd_signal@plt>
   12788:	b	11ee8 <__assert_fail@plt+0x1b8>
   1278c:	mov	r1, r0
   12790:	mov	r0, #25
   12794:	bl	11b74 <bsd_signal@plt>
   12798:	b	11f10 <__assert_fail@plt+0x1e0>
   1279c:	movw	r0, #9884	; 0x269c
   127a0:	movw	r1, #6032	; 0x1790
   127a4:	movt	r0, #3
   127a8:	movt	r1, #3
   127ac:	bl	22ec8 <error@@Base+0x288>
   127b0:	movw	lr, #29484	; 0x732c
   127b4:	sub	ip, fp, #8192	; 0x2000
   127b8:	movt	lr, #4
   127bc:	movw	r3, #61436	; 0xeffc
   127c0:	sub	r2, fp, #36	; 0x24
   127c4:	movt	r3, #65535	; 0xffff
   127c8:	str	lr, [ip, #1964]	; 0x7ac
   127cc:	str	r4, [lr]
   127d0:	strb	r4, [r2, r3]
   127d4:	b	11fd4 <__assert_fail@plt+0x2a4>
   127d8:	sub	r2, fp, #8192	; 0x2000
   127dc:	str	r0, [r2, #1976]	; 0x7b8
   127e0:	b	1219c <__assert_fail@plt+0x46c>
   127e4:	movw	r0, #10228	; 0x27f4
   127e8:	mov	r1, #9
   127ec:	movt	r0, #3
   127f0:	bl	2c6f8 <error@@Base+0x9ab8>
   127f4:	cmp	r0, #0
   127f8:	beq	12844 <__assert_fail@plt+0xb14>
   127fc:	ldr	r0, [r0, #8]
   12800:	ldrb	r3, [r0]
   12804:	cmp	r3, #0
   12808:	beq	12844 <__assert_fail@plt+0xb14>
   1280c:	cmp	r3, #45	; 0x2d
   12810:	beq	12844 <__assert_fail@plt+0xb14>
   12814:	sub	ip, fp, #8192	; 0x2000
   12818:	mov	r1, #0
   1281c:	mov	r2, #10
   12820:	movw	lr, #29540	; 0x7364
   12824:	str	lr, [ip, #1980]	; 0x7bc
   12828:	bl	11844 <strtol@plt>
   1282c:	sub	r2, fp, #8192	; 0x2000
   12830:	ldr	r1, [r2, #1980]	; 0x7bc
   12834:	movt	r1, #4
   12838:	str	r1, [r2, #1980]	; 0x7bc
   1283c:	str	r0, [r1]
   12840:	b	12860 <__assert_fail@plt+0xb30>
   12844:	sub	ip, fp, #8192	; 0x2000
   12848:	movw	lr, #29540	; 0x7364
   1284c:	movt	lr, #4
   12850:	mov	r3, #0
   12854:	mov	r0, ip
   12858:	str	lr, [ip, #1980]	; 0x7bc
   1285c:	str	r3, [lr]
   12860:	movw	r3, #29480	; 0x7328
   12864:	movt	r3, #4
   12868:	ldr	r3, [r3]
   1286c:	cmp	r3, #0
   12870:	beq	12b64 <__assert_fail@plt+0xe34>
   12874:	ldr	r2, [r4, #868]	; 0x364
   12878:	movw	r3, #27308	; 0x6aac
   1287c:	movt	r3, #4
   12880:	cmp	r2, #0
   12884:	movne	r2, #0
   12888:	strne	r2, [r3, #36]	; 0x24
   1288c:	ldr	r2, [r4, #872]	; 0x368
   12890:	movw	r3, #27308	; 0x6aac
   12894:	movt	r3, #4
   12898:	cmp	r2, #0
   1289c:	movne	r2, #1
   128a0:	strne	r2, [r3, #876]	; 0x36c
   128a4:	ldr	r3, [r4, #880]	; 0x370
   128a8:	cmp	r3, #0
   128ac:	ldrne	r0, [r3]
   128b0:	moveq	r0, r3
   128b4:	bl	253c4 <error@@Base+0x2784>
   128b8:	ldr	r3, [r4, #864]	; 0x360
   128bc:	cmp	r3, #0
   128c0:	beq	128dc <__assert_fail@plt+0xbac>
   128c4:	sub	r0, fp, #4096	; 0x1000
   128c8:	mov	r1, #4096	; 0x1000
   128cc:	sub	r0, r0, #40	; 0x28
   128d0:	bl	11b2c <getcwd@plt>
   128d4:	subs	r5, r0, #0
   128d8:	beq	13140 <__assert_fail@plt+0x1410>
   128dc:	movw	r3, #29512	; 0x7348
   128e0:	movt	r3, #4
   128e4:	sub	ip, fp, #4096	; 0x1000
   128e8:	sub	ip, ip, #40	; 0x28
   128ec:	str	ip, [r3]
   128f0:	ldr	r3, [r9]
   128f4:	mov	r6, #0
   128f8:	str	r6, [sp]
   128fc:	sub	r2, fp, #4096	; 0x1000
   12900:	sub	r2, r2, #40	; 0x28
   12904:	movw	r0, #10240	; 0x2800
   12908:	ldr	ip, [r3, #4]
   1290c:	mov	r1, #6
   12910:	mov	r3, #2
   12914:	movt	r0, #3
   12918:	str	r6, [sp, #8]
   1291c:	str	ip, [sp, #4]
   12920:	bl	2c3b8 <error@@Base+0x9778>
   12924:	ldr	r3, [r4, #884]	; 0x374
   12928:	cmp	r3, r6
   1292c:	beq	12b84 <__assert_fail@plt+0xe54>
   12930:	ldr	r2, [r3, #4]
   12934:	cmp	r2, #0
   12938:	beq	12b84 <__assert_fail@plt+0xe54>
   1293c:	sub	r0, fp, #8192	; 0x2000
   12940:	sub	lr, fp, #6144	; 0x1800
   12944:	sub	lr, lr, #36	; 0x24
   12948:	movw	r5, #26880	; 0x6900
   1294c:	sub	sl, lr, #4
   12950:	movw	r1, #2240	; 0x8c0
   12954:	movw	lr, #9848	; 0x2678
   12958:	movt	r1, #3
   1295c:	movt	lr, #3
   12960:	movt	r5, #4
   12964:	str	r1, [r0, #1952]	; 0x7a0
   12968:	str	lr, [r0, #1948]	; 0x79c
   1296c:	str	r9, [r0, #1944]	; 0x798
   12970:	b	12988 <__assert_fail@plt+0xc58>
   12974:	ldr	r3, [r4, #884]	; 0x374
   12978:	add	r6, r6, #1
   1297c:	ldr	r2, [r3, #4]
   12980:	cmp	r2, r6
   12984:	bls	12b7c <__assert_fail@plt+0xe4c>
   12988:	ldr	r3, [r3]
   1298c:	lsl	r8, r6, #2
   12990:	ldr	r3, [r3, r6, lsl #2]
   12994:	ldrb	r2, [r3]
   12998:	cmp	r2, #45	; 0x2d
   1299c:	bne	12974 <__assert_fail@plt+0xc44>
   129a0:	ldrb	r7, [r3, #1]
   129a4:	cmp	r7, #0
   129a8:	bne	12974 <__assert_fail@plt+0xc44>
   129ac:	ldr	r3, [r4, #888]	; 0x378
   129b0:	cmp	r3, #0
   129b4:	bne	1317c <__assert_fail@plt+0x144c>
   129b8:	movw	r0, #10324	; 0x2854
   129bc:	movt	r0, #3
   129c0:	bl	11a84 <getenv@plt>
   129c4:	subs	r7, r0, #0
   129c8:	beq	12e04 <__assert_fail@plt+0x10d4>
   129cc:	sub	r2, fp, #8192	; 0x2000
   129d0:	ldrb	r3, [r7]
   129d4:	ldr	r2, [r2, #1948]	; 0x79c
   129d8:	cmp	r3, #0
   129dc:	moveq	r7, r2
   129e0:	mov	r0, r7
   129e4:	bl	11b5c <strlen@plt>
   129e8:	mov	r1, r7
   129ec:	sub	ip, fp, #8192	; 0x2000
   129f0:	add	r3, r0, #24
   129f4:	mov	r9, r0
   129f8:	bic	r3, r3, #7
   129fc:	add	r2, r0, #1
   12a00:	sub	sp, sp, r3
   12a04:	add	r7, sp, #23
   12a08:	lsr	r3, r7, #3
   12a0c:	str	r3, [ip, #1960]	; 0x7a8
   12a10:	lsl	r7, r3, #3
   12a14:	mov	r0, r7
   12a18:	bl	118c8 <memcpy@plt>
   12a1c:	add	r2, r7, r9
   12a20:	ldrb	r2, [r2, #-1]
   12a24:	cmp	r2, #47	; 0x2f
   12a28:	subne	r0, fp, #8192	; 0x2000
   12a2c:	ldrne	r0, [r0, #1952]	; 0x7a0
   12a30:	ldrhne	r2, [r0]
   12a34:	mov	r0, r7
   12a38:	strhne	r2, [r7, r9]
   12a3c:	bl	11b5c <strlen@plt>
   12a40:	movw	r2, #10332	; 0x285c
   12a44:	movt	r2, #3
   12a48:	sub	r3, fp, #8192	; 0x2000
   12a4c:	ldr	r3, [r3, #1960]	; 0x7a8
   12a50:	add	ip, r7, r0
   12a54:	mov	lr, r0
   12a58:	ldm	r2!, {r0, r1}
   12a5c:	ldrb	r2, [r2]
   12a60:	str	r0, [lr, r3, lsl #3]
   12a64:	str	r1, [ip, #4]
   12a68:	mov	r1, r7
   12a6c:	strb	r2, [ip, #8]
   12a70:	ldr	r0, [pc, #2756]	; 1353c <__assert_fail@plt+0x180c>
   12a74:	bl	21f48 <__assert_fail@plt+0x10218>
   12a78:	sub	lr, fp, #8192	; 0x2000
   12a7c:	subs	ip, r0, #0
   12a80:	str	ip, [lr, #1960]	; 0x7a8
   12a84:	beq	13b00 <__assert_fail@plt+0x1dd0>
   12a88:	ldr	r0, [r5]
   12a8c:	bl	11b50 <feof@plt>
   12a90:	cmp	r0, #0
   12a94:	bne	12b10 <__assert_fail@plt+0xde0>
   12a98:	ldr	r0, [r5]
   12a9c:	bl	118a4 <ferror@plt>
   12aa0:	subs	r7, r0, #0
   12aa4:	bne	12b10 <__assert_fail@plt+0xde0>
   12aa8:	mov	r0, sl
   12aac:	mov	r1, #1
   12ab0:	mov	r2, #2048	; 0x800
   12ab4:	ldr	r3, [r5]
   12ab8:	bl	11a54 <fread@plt>
   12abc:	subs	r9, r0, #0
   12ac0:	beq	12a88 <__assert_fail@plt+0xd58>
   12ac4:	sub	ip, fp, #8192	; 0x2000
   12ac8:	mov	r0, sl
   12acc:	mov	r1, #1
   12ad0:	mov	r2, r9
   12ad4:	ldr	r3, [ip, #1960]	; 0x7a8
   12ad8:	bl	11a00 <fwrite@plt>
   12adc:	cmp	r0, r9
   12ae0:	beq	12a88 <__assert_fail@plt+0xd58>
   12ae4:	movw	r1, #10368	; 0x2880
   12ae8:	movt	r1, #3
   12aec:	mov	r0, r7
   12af0:	mov	r2, #5
   12af4:	bl	1191c <dcgettext@plt>
   12af8:	mov	r4, r0
   12afc:	bl	11b8c <__errno_location@plt>
   12b00:	mov	r3, r0
   12b04:	mov	r0, r4
   12b08:	ldr	r1, [r3]
   12b0c:	bl	22eec <error@@Base+0x2ac>
   12b10:	sub	lr, fp, #8192	; 0x2000
   12b14:	ldr	r0, [lr, #1960]	; 0x7a8
   12b18:	bl	11c28 <fclose@plt>
   12b1c:	ldr	r3, [r4, #884]	; 0x374
   12b20:	ldr	r0, [r4, #888]	; 0x378
   12b24:	ldr	r7, [r3]
   12b28:	bl	2b9c0 <error@@Base+0x8d80>
   12b2c:	str	r0, [r7, r8]
   12b30:	ldr	r0, [r4, #888]	; 0x378
   12b34:	bl	2b9c0 <error@@Base+0x8d80>
   12b38:	bl	17bc4 <__assert_fail@plt+0x5e94>
   12b3c:	mov	r2, #0
   12b40:	ldrb	r3, [r0, #79]	; 0x4f
   12b44:	ldrb	r1, [r0, #78]	; 0x4e
   12b48:	and	r3, r3, #251	; 0xfb
   12b4c:	strh	r2, [r0, #76]	; 0x4c
   12b50:	orr	r1, r1, #67	; 0x43
   12b54:	bfi	r3, r2, #4, #1
   12b58:	strb	r1, [r0, #78]	; 0x4e
   12b5c:	strb	r3, [r0, #79]	; 0x4f
   12b60:	b	12974 <__assert_fail@plt+0xc44>
   12b64:	ldr	r3, [r4, #864]	; 0x360
   12b68:	cmp	r3, #0
   12b6c:	beq	13164 <__assert_fail@plt+0x1434>
   12b70:	mov	r3, #1
   12b74:	str	r3, [r4, #36]	; 0x24
   12b78:	b	12874 <__assert_fail@plt+0xb44>
   12b7c:	sub	r0, fp, #8192	; 0x2000
   12b80:	ldr	r9, [r0, #1944]	; 0x798
   12b84:	movw	r1, #58628	; 0xe504
   12b88:	mov	r0, #17
   12b8c:	movt	r1, #1
   12b90:	mov	r7, #0
   12b94:	bl	11b74 <bsd_signal@plt>
   12b98:	movw	r1, #4220	; 0x107c
   12b9c:	mov	r0, #10
   12ba0:	movt	r1, #2
   12ba4:	bl	11b74 <bsd_signal@plt>
   12ba8:	sub	lr, fp, #8192	; 0x2000
   12bac:	movw	r0, #29536	; 0x7360
   12bb0:	str	r0, [lr, #1948]	; 0x79c
   12bb4:	bl	15aa8 <__assert_fail@plt+0x3d78>
   12bb8:	sub	r2, fp, #8192	; 0x2000
   12bbc:	ldr	r1, [r2, #1948]	; 0x79c
   12bc0:	movt	r1, #4
   12bc4:	str	r1, [r2, #1948]	; 0x79c
   12bc8:	bl	15bb4 <__assert_fail@plt+0x3e84>
   12bcc:	bl	2cbe4 <error@@Base+0x9fa4>
   12bd0:	mov	r1, r7
   12bd4:	mov	r0, r7
   12bd8:	bl	21584 <__assert_fail@plt+0xf854>
   12bdc:	bl	15ca4 <__assert_fail@plt+0x3f74>
   12be0:	movw	r0, #10248	; 0x2808
   12be4:	movt	r0, #3
   12be8:	bl	2b9c0 <error@@Base+0x8d80>
   12bec:	bl	17bc4 <__assert_fail@plt+0x5e94>
   12bf0:	ldr	r3, [r9]
   12bf4:	str	r7, [sp]
   12bf8:	movw	ip, #29548	; 0x736c
   12bfc:	movt	ip, #4
   12c00:	movw	r2, #6032	; 0x1790
   12c04:	ldr	r3, [r3, #4]
   12c08:	movt	r2, #3
   12c0c:	str	r7, [sp, #8]
   12c10:	mov	r1, #13
   12c14:	str	r3, [sp, #4]
   12c18:	mov	r3, #2
   12c1c:	str	r0, [ip]
   12c20:	movw	r0, #10260	; 0x2814
   12c24:	movt	r0, #3
   12c28:	bl	2c3b8 <error@@Base+0x9778>
   12c2c:	ldr	r3, [r4, #24]
   12c30:	sub	ip, fp, #8192	; 0x2000
   12c34:	cmp	r3, r7
   12c38:	ldr	ip, [ip, #1948]	; 0x79c
   12c3c:	ldrne	r5, [r3, #4]
   12c40:	lslne	r5, r5, #3
   12c44:	str	r0, [ip]
   12c48:	bne	12c7c <__assert_fail@plt+0xf4c>
   12c4c:	b	12d2c <__assert_fail@plt+0xffc>
   12c50:	ldr	r3, [r3]
   12c54:	ldr	r0, [r3, r7, lsl #2]
   12c58:	add	r7, r7, #1
   12c5c:	bl	2312c <error@@Base+0x4ec>
   12c60:	mov	r6, r0
   12c64:	bl	11b5c <strlen@plt>
   12c68:	add	r5, r5, r0, lsl #1
   12c6c:	mov	r0, r6
   12c70:	bl	27bd0 <error@@Base+0x4f90>
   12c74:	mov	r0, r6
   12c78:	bl	1188c <free@plt>
   12c7c:	ldr	r3, [r4, #24]
   12c80:	ldr	r2, [r3, #4]
   12c84:	cmp	r7, r2
   12c88:	bcc	12c50 <__assert_fail@plt+0xf20>
   12c8c:	add	r3, r5, #14
   12c90:	movw	r8, #27308	; 0x6aac
   12c94:	bic	r3, r3, #7
   12c98:	movt	r8, #4
   12c9c:	sub	sp, sp, r3
   12ca0:	mov	r7, #0
   12ca4:	add	r6, sp, #16
   12ca8:	mov	r5, #32
   12cac:	mov	r2, r6
   12cb0:	b	12ce8 <__assert_fail@plt+0xfb8>
   12cb4:	movw	r3, #10392	; 0x2898
   12cb8:	movt	r3, #3
   12cbc:	ldm	r3!, {r0, r1}
   12cc0:	str	r0, [r2]
   12cc4:	add	r0, r2, #7
   12cc8:	ldr	r3, [r8, #24]
   12ccc:	str	r1, [r2, #4]
   12cd0:	ldr	r3, [r3]
   12cd4:	ldr	r1, [r3, r7, lsl #2]
   12cd8:	add	r7, r7, #1
   12cdc:	bl	21190 <__assert_fail@plt+0xf460>
   12ce0:	add	r2, r0, #1
   12ce4:	strb	r5, [r0]
   12ce8:	ldr	r3, [r4, #24]
   12cec:	ldr	r3, [r3, #4]
   12cf0:	cmp	r7, r3
   12cf4:	bcc	12cb4 <__assert_fail@plt+0xf84>
   12cf8:	mov	ip, #0
   12cfc:	strb	ip, [r2, #-1]
   12d00:	ldr	r3, [r9]
   12d04:	movw	r0, #10400	; 0x28a0
   12d08:	str	ip, [sp]
   12d0c:	mov	r2, r6
   12d10:	mov	r1, #16
   12d14:	movt	r0, #3
   12d18:	ldr	lr, [r3, #4]
   12d1c:	mov	r3, #6
   12d20:	str	ip, [sp, #8]
   12d24:	str	lr, [sp, #4]
   12d28:	bl	2c3b8 <error@@Base+0x9778>
   12d2c:	ldr	r3, [r4, #884]	; 0x374
   12d30:	cmp	r3, #0
   12d34:	ldrne	r0, [r3]
   12d38:	moveq	r0, r3
   12d3c:	bl	278d4 <error@@Base+0x4c94>
   12d40:	mov	r5, r0
   12d44:	bl	22944 <__assert_fail@plt+0x10c14>
   12d48:	ldr	r3, [r4, #8]
   12d4c:	cmp	r3, #0
   12d50:	movweq	r9, #26720	; 0x6860
   12d54:	movteq	r9, #4
   12d58:	beq	12ec4 <__assert_fail@plt+0x1194>
   12d5c:	ldr	r8, [r3, #4]
   12d60:	mov	r6, #1
   12d64:	ldr	r7, [r3]
   12d68:	b	12dac <__assert_fail@plt+0x107c>
   12d6c:	ldr	r0, [r7]
   12d70:	ldr	r1, [r7, r6, lsl #2]
   12d74:	cmp	r0, r1
   12d78:	beq	12da8 <__assert_fail@plt+0x1078>
   12d7c:	ldrb	r2, [r0]
   12d80:	ldrb	r3, [r1]
   12d84:	cmp	r3, r2
   12d88:	bne	12e10 <__assert_fail@plt+0x10e0>
   12d8c:	cmp	r3, #0
   12d90:	beq	12da8 <__assert_fail@plt+0x1078>
   12d94:	add	r0, r0, #1
   12d98:	add	r1, r1, #1
   12d9c:	bl	1182c <strcmp@plt>
   12da0:	cmp	r0, #0
   12da4:	bne	12e10 <__assert_fail@plt+0x10e0>
   12da8:	add	r6, r6, #1
   12dac:	cmp	r6, r8
   12db0:	bcc	12d6c <__assert_fail@plt+0x103c>
   12db4:	ldr	r6, [r7]
   12db8:	movw	r9, #26720	; 0x6860
   12dbc:	movt	r9, #4
   12dc0:	movw	r1, #10472	; 0x28e8
   12dc4:	add	r3, r9, #4
   12dc8:	movt	r1, #3
   12dcc:	mov	r2, r9
   12dd0:	mov	r0, r6
   12dd4:	bl	11c94 <sscanf@plt>
   12dd8:	cmp	r0, #2
   12ddc:	beq	12e30 <__assert_fail@plt+0x1100>
   12de0:	mov	r2, #5
   12de4:	movw	r1, #10480	; 0x28f0
   12de8:	mov	r0, #0
   12dec:	movt	r1, #3
   12df0:	bl	1191c <dcgettext@plt>
   12df4:	mov	r2, r6
   12df8:	mov	r1, r0
   12dfc:	mov	r0, #0
   12e00:	bl	22d64 <error@@Base+0x124>
   12e04:	movw	r7, #9848	; 0x2678
   12e08:	movt	r7, #3
   12e0c:	b	129e0 <__assert_fail@plt+0xcb0>
   12e10:	movw	r1, #10420	; 0x28b4
   12e14:	movt	r1, #3
   12e18:	mov	r0, #0
   12e1c:	mov	r2, #5
   12e20:	bl	1191c <dcgettext@plt>
   12e24:	mov	r1, r0
   12e28:	mov	r0, #0
   12e2c:	bl	22d64 <error@@Base+0x124>
   12e30:	ldr	r3, [r4]
   12e34:	tst	r3, #4
   12e38:	bne	13ac8 <__assert_fail@plt+0x1d98>
   12e3c:	ldr	r6, [r9, #8]
   12e40:	movw	r7, #26720	; 0x6860
   12e44:	movt	r7, #4
   12e48:	cmp	r6, #0
   12e4c:	beq	13b10 <__assert_fail@plt+0x1de0>
   12e50:	movw	r1, #10564	; 0x2944
   12e54:	mov	r0, #0
   12e58:	movt	r1, #3
   12e5c:	mov	r2, #5
   12e60:	bl	1191c <dcgettext@plt>
   12e64:	mov	r1, r0
   12e68:	mov	r0, #0
   12e6c:	bl	22c40 <error@@Base>
   12e70:	ldr	r3, [r9, #8]
   12e74:	cmp	r3, #0
   12e78:	beq	12f20 <__assert_fail@plt+0x11f0>
   12e7c:	sub	r2, fp, #8192	; 0x2000
   12e80:	ldr	r2, [r2, #1976]	; 0x7b8
   12e84:	cmp	r2, #0
   12e88:	bne	12e9c <__assert_fail@plt+0x116c>
   12e8c:	ldr	r0, [r9]
   12e90:	bl	11d0c <close@plt>
   12e94:	ldr	r0, [r9, #4]
   12e98:	bl	11d0c <close@plt>
   12e9c:	ldr	r2, [r4, #8]
   12ea0:	mvn	r3, #0
   12ea4:	str	r3, [r9, #4]
   12ea8:	str	r3, [r9]
   12eac:	ldr	r0, [r2]
   12eb0:	bl	1188c <free@plt>
   12eb4:	ldr	r0, [r4, #8]
   12eb8:	bl	1188c <free@plt>
   12ebc:	mov	r3, #0
   12ec0:	str	r3, [r4, #8]
   12ec4:	ldr	r3, [r9, #8]
   12ec8:	movw	r6, #26720	; 0x6860
   12ecc:	movt	r6, #4
   12ed0:	cmp	r3, #4096	; 0x1000
   12ed4:	bls	13b54 <__assert_fail@plt+0x1e24>
   12ed8:	mov	r2, #5
   12edc:	movw	r1, #10716	; 0x29dc
   12ee0:	mov	r0, #0
   12ee4:	movt	r1, #3
   12ee8:	bl	1191c <dcgettext@plt>
   12eec:	mov	r1, r0
   12ef0:	mov	r0, #0
   12ef4:	bl	22c40 <error@@Base>
   12ef8:	mov	r2, #5
   12efc:	movw	r1, #10784	; 0x2a20
   12f00:	mov	r0, #0
   12f04:	movt	r1, #3
   12f08:	bl	1191c <dcgettext@plt>
   12f0c:	mov	r1, r0
   12f10:	mov	r0, #0
   12f14:	bl	22c40 <error@@Base>
   12f18:	mov	r3, #1
   12f1c:	str	r3, [r6, #8]
   12f20:	mov	r1, #0
   12f24:	mov	r0, #1
   12f28:	bl	21584 <__assert_fail@plt+0xf854>
   12f2c:	bl	18808 <__assert_fail@plt+0x6ad8>
   12f30:	bl	2b2e4 <error@@Base+0x86a4>
   12f34:	bl	15c2c <__assert_fail@plt+0x3efc>
   12f38:	bl	2ad98 <error@@Base+0x8158>
   12f3c:	bl	2e428 <error@@Base+0xb7e8>
   12f40:	ldr	r3, [r4, #892]	; 0x37c
   12f44:	cmp	r3, #0
   12f48:	beq	12f8c <__assert_fail@plt+0x125c>
   12f4c:	ldr	r8, [r3]
   12f50:	mov	r6, #2
   12f54:	mov	r7, #0
   12f58:	mov	sl, #0
   12f5c:	sub	r8, r8, #4
   12f60:	b	12f80 <__assert_fail@plt+0x1250>
   12f64:	bl	17bc4 <__assert_fail@plt+0x5e94>
   12f68:	ldrb	r3, [r0, #78]	; 0x4e
   12f6c:	strd	r6, [r0, #40]	; 0x28
   12f70:	orr	r3, r3, #67	; 0x43
   12f74:	strd	r6, [r0, #32]
   12f78:	strh	sl, [r0, #76]	; 0x4c
   12f7c:	strb	r3, [r0, #78]	; 0x4e
   12f80:	ldr	r0, [r8, #4]!
   12f84:	cmp	r0, #0
   12f88:	bne	12f64 <__assert_fail@plt+0x1234>
   12f8c:	sub	lr, fp, #8192	; 0x2000
   12f90:	ldr	lr, [lr, #1976]	; 0x7b8
   12f94:	cmp	lr, #0
   12f98:	bne	12fd4 <__assert_fail@plt+0x12a4>
   12f9c:	ldr	r3, [r4, #896]	; 0x380
   12fa0:	cmp	r3, #0
   12fa4:	beq	12fd4 <__assert_fail@plt+0x12a4>
   12fa8:	ldr	r8, [r3]
   12fac:	mvn	r6, #0
   12fb0:	mvn	r7, #0
   12fb4:	sub	r8, r8, #4
   12fb8:	b	12fc8 <__assert_fail@plt+0x1298>
   12fbc:	bl	17bc4 <__assert_fail@plt+0x5e94>
   12fc0:	strd	r6, [r0, #40]	; 0x28
   12fc4:	strd	r6, [r0, #32]
   12fc8:	ldr	r0, [r8, #4]!
   12fcc:	cmp	r0, #0
   12fd0:	bne	12fbc <__assert_fail@plt+0x128c>
   12fd4:	bl	2aaac <error@@Base+0x7e6c>
   12fd8:	cmp	r5, #0
   12fdc:	moveq	r6, r5
   12fe0:	beq	13214 <__assert_fail@plt+0x14e4>
   12fe4:	ldr	r1, [r4]
   12fe8:	sub	r0, fp, #8192	; 0x2000
   12fec:	movw	r3, #27308	; 0x6aac
   12ff0:	movt	r3, #4
   12ff4:	ands	r2, r1, #256	; 0x100
   12ff8:	str	r1, [r0, #1952]	; 0x7a0
   12ffc:	streq	r2, [r3]
   13000:	beq	13044 <__assert_fail@plt+0x1314>
   13004:	sub	lr, fp, #8192	; 0x2000
   13008:	ldr	lr, [lr, #1952]	; 0x7a0
   1300c:	tst	lr, #1
   13010:	beq	13044 <__assert_fail@plt+0x1314>
   13014:	mov	r2, #5
   13018:	movw	r1, #10860	; 0x2a6c
   1301c:	mov	r0, #0
   13020:	movt	r1, #3
   13024:	bl	1191c <dcgettext@plt>
   13028:	mov	r1, r0
   1302c:	mov	r0, #1
   13030:	bl	11be0 <__printf_chk@plt>
   13034:	sub	r1, fp, #8192	; 0x2000
   13038:	ldr	r1, [r1, #1972]	; 0x7b4
   1303c:	ldr	r0, [r1]
   13040:	bl	11868 <fflush@plt>
   13044:	sub	r2, fp, #8192	; 0x2000
   13048:	mov	r8, #0
   1304c:	mov	sl, r8
   13050:	mov	r6, r8
   13054:	str	r8, [r2, #1960]	; 0x7a8
   13058:	mov	r8, r5
   1305c:	ldr	r2, [r8, #12]
   13060:	ldr	r7, [r2, #72]	; 0x48
   13064:	cmp	r7, #0
   13068:	bne	1307c <__assert_fail@plt+0x134c>
   1306c:	b	1319c <__assert_fail@plt+0x146c>
   13070:	ldr	r7, [r7, #48]	; 0x30
   13074:	cmp	r7, #0
   13078:	beq	1319c <__assert_fail@plt+0x146c>
   1307c:	ldr	r0, [r7, #12]
   13080:	cmp	r0, #0
   13084:	bne	13070 <__assert_fail@plt+0x1340>
   13088:	ldr	r3, [r7, #16]
   1308c:	cmp	r3, #0
   13090:	beq	13070 <__assert_fail@plt+0x1340>
   13094:	ldr	r2, [r4]
   13098:	tst	r2, #2
   1309c:	beq	130d0 <__assert_fail@plt+0x13a0>
   130a0:	mov	r2, #5
   130a4:	movw	r1, #10884	; 0x2a84
   130a8:	movt	r1, #3
   130ac:	bl	1191c <dcgettext@plt>
   130b0:	ldr	r2, [r7]
   130b4:	mov	r1, r0
   130b8:	mov	r0, #1
   130bc:	bl	11be0 <__printf_chk@plt>
   130c0:	sub	r3, fp, #8192	; 0x2000
   130c4:	ldr	r3, [r3, #1972]	; 0x7b4
   130c8:	ldr	r0, [r3]
   130cc:	bl	11868 <fflush@plt>
   130d0:	cmp	r6, #0
   130d4:	beq	13780 <__assert_fail@plt+0x1a50>
   130d8:	ldr	r2, [r8]
   130dc:	mov	r0, r8
   130e0:	str	r2, [r6]
   130e4:	bl	1188c <free@plt>
   130e8:	ldr	r8, [r6]
   130ec:	ldr	r2, [r7, #72]	; 0x48
   130f0:	cmp	r2, #0
   130f4:	beq	1319c <__assert_fail@plt+0x146c>
   130f8:	cmp	r8, #0
   130fc:	bne	1305c <__assert_fail@plt+0x132c>
   13100:	mov	r0, #1
   13104:	mov	r1, r0
   13108:	bl	21584 <__assert_fail@plt+0xf854>
   1310c:	mov	r0, r5
   13110:	mov	r3, #1
   13114:	str	r3, [r4, #900]	; 0x384
   13118:	bl	2a63c <error@@Base+0x79fc>
   1311c:	str	r8, [r4, #900]	; 0x384
   13120:	add	r0, r0, #1
   13124:	cmp	r0, #3
   13128:	ldrls	pc, [pc, r0, lsl #2]
   1312c:	b	13764 <__assert_fail@plt+0x1a34>
   13130:	strdeq	r3, [r1], -r4
   13134:	muleq	r1, r0, r4
   13138:	strdeq	r3, [r1], -r4
   1313c:	strdeq	r3, [r1], -r0
   13140:	movw	r0, #9884	; 0x269c
   13144:	movw	r1, #6032	; 0x1790
   13148:	movt	r0, #3
   1314c:	movt	r1, #3
   13150:	bl	22ec8 <error@@Base+0x288>
   13154:	movw	r3, #29512	; 0x7348
   13158:	movt	r3, #4
   1315c:	str	r5, [r3]
   13160:	b	128f0 <__assert_fail@plt+0xbc0>
   13164:	sub	r2, fp, #8192	; 0x2000
   13168:	ldr	r2, [r2, #1980]	; 0x7bc
   1316c:	ldr	r3, [r2]
   13170:	cmp	r3, #0
   13174:	beq	12874 <__assert_fail@plt+0xb44>
   13178:	b	12b70 <__assert_fail@plt+0xe40>
   1317c:	movw	r1, #10276	; 0x2824
   13180:	movt	r1, #3
   13184:	mov	r0, r7
   13188:	mov	r2, #5
   1318c:	bl	1191c <dcgettext@plt>
   13190:	mov	r1, r0
   13194:	mov	r0, r7
   13198:	bl	22d64 <error@@Base+0x124>
   1319c:	sub	ip, fp, #8192	; 0x2000
   131a0:	mov	r0, sl
   131a4:	ldr	lr, [ip, #1960]	; 0x7a8
   131a8:	add	ip, lr, #1
   131ac:	sub	lr, fp, #8192	; 0x2000
   131b0:	lsl	r7, ip, #3
   131b4:	str	ip, [lr, #1960]	; 0x7a8
   131b8:	mov	r1, r7
   131bc:	sub	r7, r7, #8
   131c0:	bl	22fb0 <error@@Base+0x370>
   131c4:	mov	sl, r0
   131c8:	ldr	r0, [r8, #12]
   131cc:	add	r7, sl, r7
   131d0:	ldrd	r2, [r0, #32]
   131d4:	orrs	ip, r2, r3
   131d8:	movne	r0, r2
   131dc:	movne	r1, r3
   131e0:	beq	13abc <__assert_fail@plt+0x1d8c>
   131e4:	mov	r6, r8
   131e8:	ldr	r8, [r8]
   131ec:	stm	r7, {r0, r1}
   131f0:	b	130f8 <__assert_fail@plt+0x13c8>
   131f4:	mov	r6, #0
   131f8:	sub	r2, fp, #8192	; 0x2000
   131fc:	cmp	sl, #0
   13200:	ldr	r2, [r2, #1952]	; 0x7a0
   13204:	str	r2, [r4]
   13208:	beq	13214 <__assert_fail@plt+0x14e4>
   1320c:	mov	r0, sl
   13210:	bl	1188c <free@plt>
   13214:	mov	r0, #1
   13218:	mov	r1, #0
   1321c:	bl	21584 <__assert_fail@plt+0xf854>
   13220:	sub	r3, fp, #8192	; 0x2000
   13224:	ldr	r2, [r4, #856]	; 0x358
   13228:	ldr	r3, [r3, #1976]	; 0x7b8
   1322c:	cmp	r3, #0
   13230:	str	r2, [r4, #860]	; 0x35c
   13234:	movw	r3, #27308	; 0x6aac
   13238:	movt	r3, #4
   1323c:	bne	1387c <__assert_fail@plt+0x1b4c>
   13240:	ldr	r0, [r4, #888]	; 0x378
   13244:	movw	r7, #27308	; 0x6aac
   13248:	movt	r7, #4
   1324c:	cmp	r0, #0
   13250:	beq	13260 <__assert_fail@plt+0x1530>
   13254:	bl	1194c <unlink@plt>
   13258:	cmp	r0, #0
   1325c:	blt	138b8 <__assert_fail@plt+0x1b88>
   13260:	ldr	r2, [r4, #16]
   13264:	movw	r3, #27308	; 0x6aac
   13268:	movt	r3, #4
   1326c:	cmp	r2, #0
   13270:	ldrne	r3, [r3, #20]
   13274:	movne	r2, #0
   13278:	strne	r2, [r3]
   1327c:	beq	1332c <__assert_fail@plt+0x15fc>
   13280:	ldr	r7, [r4, #16]
   13284:	movw	r3, #27308	; 0x6aac
   13288:	movt	r3, #4
   1328c:	cmp	r7, #0
   13290:	beq	132f8 <__assert_fail@plt+0x15c8>
   13294:	ldr	r3, [r3]
   13298:	tst	r3, #1
   1329c:	beq	132d0 <__assert_fail@plt+0x15a0>
   132a0:	mov	r2, #5
   132a4:	movw	r1, #11264	; 0x2c00
   132a8:	mov	r0, #0
   132ac:	movt	r1, #3
   132b0:	bl	1191c <dcgettext@plt>
   132b4:	mov	r1, r0
   132b8:	mov	r0, #1
   132bc:	bl	11be0 <__printf_chk@plt>
   132c0:	sub	r2, fp, #8192	; 0x2000
   132c4:	ldr	r2, [r2, #1972]	; 0x7b4
   132c8:	ldr	r0, [r2]
   132cc:	bl	11868 <fflush@plt>
   132d0:	ldr	r0, [r4, #16]
   132d4:	bl	2a63c <error@@Base+0x79fc>
   132d8:	add	r0, r0, #1
   132dc:	cmp	r0, #3
   132e0:	ldrls	pc, [pc, r0, lsl #2]
   132e4:	b	133e4 <__assert_fail@plt+0x16b4>
   132e8:	andeq	r3, r1, r0, lsr #7
   132ec:	andeq	r3, r1, r0, lsr #7
   132f0:	ldrdeq	r3, [r1], -ip
   132f4:	muleq	r1, ip, r3
   132f8:	cmp	r5, #0
   132fc:	movwne	r1, #11252	; 0x2bf4
   13300:	movne	r0, r7
   13304:	movtne	r1, #3
   13308:	bne	13188 <__assert_fail@plt+0x1458>
   1330c:	movw	r1, #11208	; 0x2bc8
   13310:	mov	r0, r5
   13314:	movt	r1, #3
   13318:	mov	r2, #5
   1331c:	bl	1191c <dcgettext@plt>
   13320:	mov	r1, r0
   13324:	mov	r0, r5
   13328:	bl	22d64 <error@@Base+0x124>
   1332c:	sub	ip, fp, #8192	; 0x2000
   13330:	ldr	ip, [ip, #1948]	; 0x79c
   13334:	ldr	r3, [ip]
   13338:	ldrb	r9, [r3, #20]
   1333c:	tst	r9, #1
   13340:	ubfx	r9, r9, #0, #1
   13344:	beq	13428 <__assert_fail@plt+0x16f8>
   13348:	ldr	r0, [r3, #8]
   1334c:	bl	17528 <__assert_fail@plt+0x57f8>
   13350:	movw	r3, #59368	; 0xe7e8
   13354:	sub	lr, fp, #36	; 0x24
   13358:	movt	r3, #65535	; 0xffff
   1335c:	str	r0, [lr, r3]
   13360:	movw	r3, #59368	; 0xe7e8
   13364:	sub	r1, fp, #36	; 0x24
   13368:	movt	r3, #65535	; 0xffff
   1336c:	ldr	r0, [r1, r3]
   13370:	ldrb	r3, [r0]
   13374:	cmp	r3, #0
   13378:	beq	13280 <__assert_fail@plt+0x1550>
   1337c:	bl	17ae8 <__assert_fail@plt+0x5db8>
   13380:	subs	r7, r0, #0
   13384:	beq	133e8 <__assert_fail@plt+0x16b8>
   13388:	mov	r0, #20
   1338c:	bl	22f78 <error@@Base+0x338>
   13390:	str	r7, [r0, #12]
   13394:	str	r0, [r4, #16]
   13398:	b	13280 <__assert_fail@plt+0x1550>
   1339c:	mov	r6, #2
   133a0:	movw	r3, #29688	; 0x73f8
   133a4:	movt	r3, #4
   133a8:	ldr	r3, [r3]
   133ac:	cmp	r3, #0
   133b0:	beq	133d4 <__assert_fail@plt+0x16a4>
   133b4:	movw	r1, #11292	; 0x2c1c
   133b8:	mov	r0, #0
   133bc:	movt	r1, #3
   133c0:	mov	r2, #5
   133c4:	bl	1191c <dcgettext@plt>
   133c8:	mov	r1, r0
   133cc:	mov	r0, #0
   133d0:	bl	22c40 <error@@Base>
   133d4:	mov	r0, r6
   133d8:	bl	22150 <__assert_fail@plt+0x10420>
   133dc:	mov	r6, #1
   133e0:	b	133a0 <__assert_fail@plt+0x1670>
   133e4:	bl	11d00 <abort@plt>
   133e8:	sub	r0, fp, #6144	; 0x1800
   133ec:	str	r7, [sp]
   133f0:	sub	r0, r0, #60	; 0x3c
   133f4:	mov	r1, #8
   133f8:	mov	r2, r7
   133fc:	mov	r3, r7
   13400:	bl	256a0 <error@@Base+0x2a60>
   13404:	subs	r8, r0, #0
   13408:	beq	13280 <__assert_fail@plt+0x1550>
   1340c:	ldr	r9, [r8]
   13410:	cmp	r9, #0
   13414:	beq	13468 <__assert_fail@plt+0x1738>
   13418:	movw	r1, #11164	; 0x2b9c
   1341c:	mov	r0, r7
   13420:	movt	r1, #3
   13424:	b	13188 <__assert_fail@plt+0x1458>
   13428:	ldr	r8, [r3, #8]
   1342c:	movw	r7, #29472	; 0x7320
   13430:	movt	r7, #4
   13434:	mov	r0, r8
   13438:	bl	11b5c <strlen@plt>
   1343c:	mov	r1, r8
   13440:	mov	r2, r0
   13444:	ldr	r0, [r7]
   13448:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1344c:	movw	r3, #59368	; 0xe7e8
   13450:	movt	r3, #65535	; 0xffff
   13454:	strb	r9, [r0]
   13458:	sub	r0, fp, #36	; 0x24
   1345c:	ldr	r2, [r7]
   13460:	str	r2, [r0, r3]
   13464:	b	13360 <__assert_fail@plt+0x1630>
   13468:	ldr	r0, [r8, #4]
   1346c:	bl	2b9c0 <error@@Base+0x8d80>
   13470:	bl	17bc4 <__assert_fail@plt+0x5e94>
   13474:	str	r9, [r8, #4]
   13478:	mov	r7, r0
   1347c:	mov	r0, r8
   13480:	bl	2357c <error@@Base+0x93c>
   13484:	cmp	r7, #0
   13488:	bne	13388 <__assert_fail@plt+0x1658>
   1348c:	b	13280 <__assert_fail@plt+0x1550>
   13490:	mov	r0, #0
   13494:	bl	180ec <__assert_fail@plt+0x63bc>
   13498:	ldr	r3, [r4, #28]
   1349c:	cmp	r3, #0
   134a0:	beq	134a8 <__assert_fail@plt+0x1778>
   134a4:	bl	21e78 <__assert_fail@plt+0x10148>
   134a8:	mov	r0, #0
   134ac:	bl	21f98 <__assert_fail@plt+0x10268>
   134b0:	mov	r0, #0
   134b4:	bl	21210 <__assert_fail@plt+0xf4e0>
   134b8:	ldr	r3, [r4, #884]	; 0x374
   134bc:	cmp	r3, #0
   134c0:	beq	13544 <__assert_fail@plt+0x1814>
   134c4:	sub	r0, fp, #8192	; 0x2000
   134c8:	mov	r7, #0
   134cc:	mov	r5, #1
   134d0:	ldr	sl, [r0, #1968]	; 0x7b0
   134d4:	sub	r1, fp, #8192	; 0x2000
   134d8:	ldr	r1, [r1, #1956]	; 0x7a4
   134dc:	cmp	r5, r1
   134e0:	bge	13544 <__assert_fail@plt+0x1814>
   134e4:	ldr	r8, [sl, r5, lsl #2]
   134e8:	movw	r1, #11028	; 0x2b14
   134ec:	mov	r2, #2
   134f0:	movt	r1, #3
   134f4:	add	r6, sl, r5, lsl #2
   134f8:	mov	r0, r8
   134fc:	bl	11cf4 <strncmp@plt>
   13500:	cmp	r0, #0
   13504:	bne	1352c <__assert_fail@plt+0x17fc>
   13508:	ldrb	r3, [r8, #2]
   1350c:	cmp	r3, #0
   13510:	ldr	r3, [r4, #884]	; 0x374
   13514:	bne	13794 <__assert_fail@plt+0x1a64>
   13518:	ldr	r3, [r3]
   1351c:	add	r5, r5, #1
   13520:	ldr	r3, [r3, r7, lsl #2]
   13524:	str	r3, [r6, #4]
   13528:	add	r7, r7, #1
   1352c:	add	r5, r5, #1
   13530:	b	134d4 <__assert_fail@plt+0x17a4>
   13534:	andeq	r2, r3, r1, asr r7
   13538:	andeq	r3, r3, r1, lsl #21
   1353c:	andeq	r6, r4, r4, lsr #28
   13540:	andeq	r2, r3, ip, lsr #3
   13544:	ldr	r3, [r4, #888]	; 0x378
   13548:	movw	r7, #27308	; 0x6aac
   1354c:	movt	r7, #4
   13550:	cmp	r3, #0
   13554:	beq	135b4 <__assert_fail@plt+0x1884>
   13558:	sub	r2, fp, #8192	; 0x2000
   1355c:	ldr	r2, [r2, #1956]	; 0x7a4
   13560:	add	r0, r2, #2
   13564:	lsl	r0, r0, #2
   13568:	sub	r5, r0, #8
   1356c:	bl	22f44 <error@@Base+0x304>
   13570:	sub	r3, fp, #8192	; 0x2000
   13574:	mov	r2, r5
   13578:	ldr	r1, [r3, #1968]	; 0x7b0
   1357c:	mov	r6, r0
   13580:	bl	118c8 <memcpy@plt>
   13584:	ldr	r2, [r7, #888]	; 0x378
   13588:	movw	r1, #11032	; 0x2b18
   1358c:	mov	r0, #2
   13590:	movt	r1, #3
   13594:	bl	2300c <error@@Base+0x3cc>
   13598:	sub	ip, fp, #8192	; 0x2000
   1359c:	add	r7, r6, r5
   135a0:	str	r6, [ip, #1968]	; 0x7b0
   135a4:	bl	2312c <error@@Base+0x4ec>
   135a8:	mov	r3, #0
   135ac:	str	r0, [r6, r5]
   135b0:	str	r3, [r7, #4]
   135b4:	ldr	r3, [r4, #864]	; 0x360
   135b8:	cmp	r3, #0
   135bc:	beq	135ec <__assert_fail@plt+0x18bc>
   135c0:	ldr	r3, [r3, #4]
   135c4:	cmp	r3, #0
   135c8:	beq	135ec <__assert_fail@plt+0x18bc>
   135cc:	sub	lr, fp, #8192	; 0x2000
   135d0:	ldr	lr, [lr, #1964]	; 0x7ac
   135d4:	ldr	r0, [lr]
   135d8:	cmp	r0, #0
   135dc:	beq	1386c <__assert_fail@plt+0x1b3c>
   135e0:	bl	119a0 <chdir@plt>
   135e4:	cmp	r0, #0
   135e8:	blt	13858 <__assert_fail@plt+0x1b28>
   135ec:	sub	r0, fp, #8192	; 0x2000
   135f0:	ldr	r3, [r4, #4]
   135f4:	ldr	r0, [r0, #1976]	; 0x7b8
   135f8:	cmp	r3, #0
   135fc:	strne	r3, [r9, #8]
   13600:	add	r5, r0, #1
   13604:	mov	r0, #1
   13608:	mov	r1, r0
   1360c:	bl	21584 <__assert_fail@plt+0xf854>
   13610:	mov	r7, r0
   13614:	bl	11b5c <strlen@plt>
   13618:	mvn	r2, #0
   1361c:	mov	r1, #1
   13620:	movw	r3, #11044	; 0x2b24
   13624:	movt	r3, #3
   13628:	add	r0, r0, #26
   1362c:	bic	r0, r0, #7
   13630:	sub	sp, sp, r0
   13634:	add	r6, sp, #16
   13638:	str	r7, [sp]
   1363c:	mov	r0, r6
   13640:	bl	11b98 <__sprintf_chk@plt>
   13644:	mov	r1, #0
   13648:	mov	r0, r6
   1364c:	bl	177b8 <__assert_fail@plt+0x5a88>
   13650:	bl	11c70 <putenv@plt>
   13654:	ldr	r3, [r4]
   13658:	tst	r3, #1
   1365c:	bne	137b8 <__assert_fail@plt+0x1a88>
   13660:	movw	r6, #26856	; 0x68e8
   13664:	movt	r6, #4
   13668:	movw	r7, #10228	; 0x27f4
   1366c:	movt	r7, #3
   13670:	ldr	r4, [r6]
   13674:	ldr	r8, [r4], #4
   13678:	cmp	r8, #0
   1367c:	beq	136f0 <__assert_fail@plt+0x19c0>
   13680:	movw	r1, #10228	; 0x27f4
   13684:	mov	r0, r8
   13688:	movt	r1, #3
   1368c:	mov	r2, #9
   13690:	bl	11cf4 <strncmp@plt>
   13694:	cmp	r0, #0
   13698:	bne	136a8 <__assert_fail@plt+0x1978>
   1369c:	ldrb	r3, [r8, #9]
   136a0:	cmp	r3, #61	; 0x3d
   136a4:	beq	13808 <__assert_fail@plt+0x1ad8>
   136a8:	movw	r1, #11088	; 0x2b50
   136ac:	ldr	r0, [r4, #-4]
   136b0:	movt	r1, #3
   136b4:	mov	r2, #14
   136b8:	bl	11cf4 <strncmp@plt>
   136bc:	subs	ip, r0, #0
   136c0:	bne	13674 <__assert_fail@plt+0x1944>
   136c4:	sub	sp, sp, #48	; 0x30
   136c8:	movw	r3, #11104	; 0x2b60
   136cc:	add	r0, sp, #16
   136d0:	movt	r3, #3
   136d4:	str	r0, [r4, #-4]
   136d8:	mov	r1, #1
   136dc:	str	r5, [sp]
   136e0:	mov	r2, #40	; 0x28
   136e4:	mov	r5, ip
   136e8:	bl	11b98 <__sprintf_chk@plt>
   136ec:	b	13674 <__assert_fail@plt+0x1944>
   136f0:	cmp	r5, #0
   136f4:	beq	13724 <__assert_fail@plt+0x19f4>
   136f8:	sub	sp, sp, #48	; 0x30
   136fc:	movw	r3, #11104	; 0x2b60
   13700:	add	r4, sp, #16
   13704:	movt	r3, #3
   13708:	str	r5, [sp]
   1370c:	mov	r1, #1
   13710:	mov	r0, r4
   13714:	mov	r2, #40	; 0x28
   13718:	bl	11b98 <__sprintf_chk@plt>
   1371c:	mov	r0, r4
   13720:	bl	11c70 <putenv@plt>
   13724:	sub	lr, fp, #8192	; 0x2000
   13728:	ldr	lr, [lr, #1972]	; 0x7b4
   1372c:	ldr	r0, [lr]
   13730:	bl	11868 <fflush@plt>
   13734:	movw	r3, #26876	; 0x68fc
   13738:	movt	r3, #4
   1373c:	ldr	r0, [r3]
   13740:	bl	11868 <fflush@plt>
   13744:	ldr	r0, [r9, #16]
   13748:	cmp	r0, #0
   1374c:	blt	13754 <__assert_fail@plt+0x1a24>
   13750:	bl	11d0c <close@plt>
   13754:	sub	r1, fp, #8192	; 0x2000
   13758:	ldr	r0, [r1, #1968]	; 0x7b0
   1375c:	ldr	r1, [r6]
   13760:	bl	1f4d4 <__assert_fail@plt+0xd7a4>
   13764:	movw	r0, #11124	; 0x2b74
   13768:	movw	r1, #11128	; 0x2b78
   1376c:	movt	r0, #3
   13770:	movt	r1, #3
   13774:	movw	r2, #2221	; 0x8ad
   13778:	ldr	r3, [pc, #-576]	; 13540 <__assert_fail@plt+0x1810>
   1377c:	bl	11d30 <__assert_fail@plt>
   13780:	ldr	r5, [r8]
   13784:	mov	r0, r8
   13788:	bl	1188c <free@plt>
   1378c:	mov	r8, r5
   13790:	b	130ec <__assert_fail@plt+0x13bc>
   13794:	ldr	r3, [r3]
   13798:	movw	r1, #11028	; 0x2b14
   1379c:	mov	r0, #2
   137a0:	movt	r1, #3
   137a4:	ldr	r2, [r3, r7, lsl #2]
   137a8:	bl	2300c <error@@Base+0x3cc>
   137ac:	bl	2312c <error@@Base+0x4ec>
   137b0:	str	r0, [r6]
   137b4:	b	13528 <__assert_fail@plt+0x17f8>
   137b8:	mov	r2, #5
   137bc:	movw	r1, #11060	; 0x2b34
   137c0:	mov	r0, #0
   137c4:	movt	r1, #3
   137c8:	bl	1191c <dcgettext@plt>
   137cc:	sub	r3, fp, #8192	; 0x2000
   137d0:	mov	r2, r5
   137d4:	ldr	r3, [r3, #1968]	; 0x7b0
   137d8:	sub	r4, r3, #4
   137dc:	mov	r1, r0
   137e0:	mov	r0, #1
   137e4:	bl	11be0 <__printf_chk@plt>
   137e8:	ldr	r2, [r4, #4]!
   137ec:	cmp	r2, #0
   137f0:	beq	13840 <__assert_fail@plt+0x1b10>
   137f4:	movw	r1, #14564	; 0x38e4
   137f8:	mov	r0, #1
   137fc:	movt	r1, #3
   13800:	bl	11be0 <__printf_chk@plt>
   13804:	b	137e8 <__assert_fail@plt+0x1ab8>
   13808:	sub	ip, fp, #8192	; 0x2000
   1380c:	sub	sp, sp, #48	; 0x30
   13810:	add	r0, sp, #16
   13814:	movw	r3, #11080	; 0x2b48
   13818:	ldr	ip, [ip, #1980]	; 0x7bc
   1381c:	movt	r3, #3
   13820:	mov	r1, #1
   13824:	ldr	r2, [ip]
   13828:	str	r0, [r4, #-4]
   1382c:	str	r7, [sp]
   13830:	str	r2, [sp, #4]
   13834:	mov	r2, #40	; 0x28
   13838:	bl	11b98 <__sprintf_chk@plt>
   1383c:	b	136a8 <__assert_fail@plt+0x1978>
   13840:	sub	r4, fp, #8192	; 0x2000
   13844:	mov	r0, #10
   13848:	ldr	r4, [r4, #1972]	; 0x7b4
   1384c:	ldr	r1, [r4]
   13850:	bl	119f4 <_IO_putc@plt>
   13854:	b	13660 <__assert_fail@plt+0x1930>
   13858:	movw	r0, #11036	; 0x2b1c
   1385c:	movw	r1, #6032	; 0x1790
   13860:	movt	r0, #3
   13864:	movt	r1, #3
   13868:	bl	22ec8 <error@@Base+0x288>
   1386c:	movw	r1, #11356	; 0x2c5c
   13870:	mov	r0, #0
   13874:	movt	r1, #3
   13878:	b	12e1c <__assert_fail@plt+0x10ec>
   1387c:	ldr	r3, [r3, #896]	; 0x380
   13880:	cmp	r3, #0
   13884:	beq	13240 <__assert_fail@plt+0x1510>
   13888:	ldr	r7, [r3]
   1388c:	mvn	r8, #0
   13890:	mvn	r9, #0
   13894:	sub	r7, r7, #4
   13898:	b	138a8 <__assert_fail@plt+0x1b78>
   1389c:	bl	17bc4 <__assert_fail@plt+0x5e94>
   138a0:	strd	r8, [r0, #40]	; 0x28
   138a4:	strd	r8, [r0, #32]
   138a8:	ldr	r0, [r7, #4]!
   138ac:	cmp	r0, #0
   138b0:	bne	1389c <__assert_fail@plt+0x1b6c>
   138b4:	b	13240 <__assert_fail@plt+0x1510>
   138b8:	bl	11b8c <__errno_location@plt>
   138bc:	ldr	r3, [r0]
   138c0:	mov	r8, r0
   138c4:	cmp	r3, #2
   138c8:	beq	13260 <__assert_fail@plt+0x1530>
   138cc:	mov	r2, #5
   138d0:	movw	r1, #11136	; 0x2b80
   138d4:	mov	r0, #0
   138d8:	movt	r1, #3
   138dc:	bl	1191c <dcgettext@plt>
   138e0:	ldr	r1, [r7, #888]	; 0x378
   138e4:	ldr	r2, [r8]
   138e8:	bl	22e74 <error@@Base+0x234>
   138ec:	b	13260 <__assert_fail@plt+0x1530>
   138f0:	sub	lr, fp, #8192	; 0x2000
   138f4:	mov	r7, #0
   138f8:	mov	r6, r7
   138fc:	str	r7, [lr, #1944]	; 0x798
   13900:	str	r7, [lr, #1960]	; 0x7a8
   13904:	b	13950 <__assert_fail@plt+0x1c20>
   13908:	ldrsh	r2, [r3, #76]	; 0x4c
   1390c:	cmp	r2, #0
   13910:	bne	139c0 <__assert_fail@plt+0x1c90>
   13914:	ldrd	r0, [r3, #32]
   13918:	orrs	r3, r0, r1
   1391c:	bne	1392c <__assert_fail@plt+0x1bfc>
   13920:	mov	r1, r2
   13924:	ldr	r0, [r5, #12]
   13928:	bl	28024 <error@@Base+0x53e4>
   1392c:	sub	lr, fp, #8192	; 0x2000
   13930:	ldrd	r2, [sl, r7]
   13934:	ldr	ip, [lr, #1960]	; 0x7a8
   13938:	cmp	r1, r3
   1393c:	cmpeq	r0, r2
   13940:	orrne	ip, ip, #1
   13944:	str	ip, [lr, #1960]	; 0x7a8
   13948:	ldr	r5, [r5]
   1394c:	add	r7, r7, #8
   13950:	cmp	r5, #0
   13954:	beq	13a94 <__assert_fail@plt+0x1d64>
   13958:	ldr	r3, [r5, #12]
   1395c:	ldrb	r1, [r3, #78]	; 0x4e
   13960:	ldrb	r2, [r3, #79]	; 0x4f
   13964:	tst	r1, #64	; 0x40
   13968:	bfc	r2, #7, #1
   1396c:	strb	r2, [r3, #79]	; 0x4f
   13970:	bne	13908 <__assert_fail@plt+0x1bd8>
   13974:	ldrb	r3, [r5, #16]
   13978:	and	r2, r3, #4
   1397c:	ands	r0, r2, #255	; 0xff
   13980:	bne	13948 <__assert_fail@plt+0x1c18>
   13984:	and	r3, r3, #2
   13988:	ands	r3, r3, #255	; 0xff
   1398c:	beq	13a54 <__assert_fail@plt+0x1d24>
   13990:	mov	r2, #5
   13994:	movw	r1, #10960	; 0x2ad0
   13998:	movt	r1, #3
   1399c:	bl	1191c <dcgettext@plt>
   139a0:	ldr	r2, [r5, #4]
   139a4:	cmp	r2, #0
   139a8:	ldreq	r3, [r5, #12]
   139ac:	mov	r1, r0
   139b0:	ldreq	r2, [r3]
   139b4:	mov	r0, #0
   139b8:	bl	22c40 <error@@Base>
   139bc:	b	13948 <__assert_fail@plt+0x1c18>
   139c0:	ldrb	r8, [r5, #16]
   139c4:	and	r8, r8, #4
   139c8:	ands	r8, r8, #255	; 0xff
   139cc:	bne	13948 <__assert_fail@plt+0x1c18>
   139d0:	mov	r2, #5
   139d4:	movw	r1, #10928	; 0x2ab0
   139d8:	mov	r0, r8
   139dc:	movt	r1, #3
   139e0:	bl	1191c <dcgettext@plt>
   139e4:	ldr	r3, [r5, #12]
   139e8:	ldr	r2, [r3]
   139ec:	mov	r1, r0
   139f0:	mov	r0, r8
   139f4:	bl	22c40 <error@@Base>
   139f8:	ldr	r3, [r5, #12]
   139fc:	ldrd	r0, [r3, #32]
   13a00:	orrs	r2, r0, r1
   13a04:	bne	13a14 <__assert_fail@plt+0x1ce4>
   13a08:	mov	r0, r3
   13a0c:	mov	r1, r8
   13a10:	bl	28024 <error@@Base+0x53e4>
   13a14:	cmp	r1, #0
   13a18:	cmpeq	r0, #1
   13a1c:	moveq	r3, #0
   13a20:	beq	13a38 <__assert_fail@plt+0x1d08>
   13a24:	ldrd	r2, [sl, r7]
   13a28:	cmp	r1, r3
   13a2c:	cmpeq	r0, r2
   13a30:	moveq	r3, #0
   13a34:	movne	r3, #1
   13a38:	sub	ip, fp, #8192	; 0x2000
   13a3c:	sub	lr, fp, #8192	; 0x2000
   13a40:	mov	r6, #2
   13a44:	ldr	ip, [ip, #1960]	; 0x7a8
   13a48:	orr	ip, ip, r3
   13a4c:	str	ip, [lr, #1960]	; 0x7a8
   13a50:	b	13948 <__assert_fail@plt+0x1c18>
   13a54:	mov	r0, r3
   13a58:	mov	r2, #5
   13a5c:	movw	r1, #11000	; 0x2af8
   13a60:	movt	r1, #3
   13a64:	bl	1191c <dcgettext@plt>
   13a68:	ldr	r2, [r5, #4]
   13a6c:	sub	lr, fp, #8192	; 0x2000
   13a70:	cmp	r2, #0
   13a74:	ldreq	r3, [r5, #12]
   13a78:	mov	r1, r0
   13a7c:	ldreq	r2, [r3]
   13a80:	mov	r0, #0
   13a84:	mov	r3, #1
   13a88:	str	r3, [lr, #1944]	; 0x798
   13a8c:	bl	22c40 <error@@Base>
   13a90:	b	13948 <__assert_fail@plt+0x1c18>
   13a94:	sub	ip, fp, #8192	; 0x2000
   13a98:	ldr	ip, [ip, #1960]	; 0x7a8
   13a9c:	cmp	ip, #0
   13aa0:	bne	13490 <__assert_fail@plt+0x1760>
   13aa4:	sub	lr, fp, #8192	; 0x2000
   13aa8:	ldr	lr, [lr, #1944]	; 0x798
   13aac:	cmp	lr, #0
   13ab0:	beq	131f8 <__assert_fail@plt+0x14c8>
   13ab4:	mov	r0, #2
   13ab8:	bl	22150 <__assert_fail@plt+0x10420>
   13abc:	mov	r1, #0
   13ac0:	bl	28024 <error@@Base+0x53e4>
   13ac4:	b	131e4 <__assert_fail@plt+0x14b4>
   13ac8:	mov	r2, #5
   13acc:	movw	r1, #10532	; 0x2924
   13ad0:	mov	r0, #0
   13ad4:	movt	r1, #3
   13ad8:	bl	1191c <dcgettext@plt>
   13adc:	ldm	r9, {r2, r3}
   13ae0:	mov	r1, r0
   13ae4:	mov	r0, #1
   13ae8:	bl	11be0 <__printf_chk@plt>
   13aec:	sub	r1, fp, #8192	; 0x2000
   13af0:	ldr	r1, [r1, #1972]	; 0x7b4
   13af4:	ldr	r0, [r1]
   13af8:	bl	11868 <fflush@plt>
   13afc:	b	12e3c <__assert_fail@plt+0x110c>
   13b00:	movw	r1, #10344	; 0x2868
   13b04:	mov	r2, #5
   13b08:	movt	r1, #3
   13b0c:	b	12af4 <__assert_fail@plt+0xdc4>
   13b10:	ldr	r0, [r7]
   13b14:	bl	1197c <dup@plt>
   13b18:	cmp	r0, #0
   13b1c:	str	r0, [r7, #16]
   13b20:	bge	12e70 <__assert_fail@plt+0x1140>
   13b24:	bl	11b8c <__errno_location@plt>
   13b28:	ldr	r3, [r0]
   13b2c:	mov	r8, r0
   13b30:	cmp	r3, #9
   13b34:	beq	13c70 <__assert_fail@plt+0x1f40>
   13b38:	mov	r0, r6
   13b3c:	movw	r1, #10624	; 0x2980
   13b40:	mov	r2, #5
   13b44:	movt	r1, #3
   13b48:	bl	1191c <dcgettext@plt>
   13b4c:	ldr	r1, [r8]
   13b50:	bl	22eec <error@@Base+0x2ac>
   13b54:	cmp	r3, #1
   13b58:	bls	12f20 <__assert_fail@plt+0x11f0>
   13b5c:	sub	ip, fp, #36	; 0x24
   13b60:	movw	r3, #59368	; 0xe7e8
   13b64:	movt	r3, #65535	; 0xffff
   13b68:	mov	r0, r6
   13b6c:	mov	r2, #43	; 0x2b
   13b70:	strb	r2, [ip, r3]
   13b74:	bl	11c34 <pipe@plt>
   13b78:	cmp	r0, #0
   13b7c:	blt	13c9c <__assert_fail@plt+0x1f6c>
   13b80:	ldr	r0, [r6]
   13b84:	bl	1197c <dup@plt>
   13b88:	cmp	r0, #0
   13b8c:	str	r0, [r6, #16]
   13b90:	blt	13c9c <__assert_fail@plt+0x1f6c>
   13b94:	ldr	r3, [r6, #8]
   13b98:	str	r3, [r4, #4]
   13b9c:	ldr	r3, [r9, #8]
   13ba0:	movw	r7, #26720	; 0x6860
   13ba4:	movt	r7, #4
   13ba8:	sub	r3, r3, #1
   13bac:	str	r3, [r9, #8]
   13bb0:	cmp	r3, #0
   13bb4:	bne	13bcc <__assert_fail@plt+0x1e9c>
   13bb8:	b	13c04 <__assert_fail@plt+0x1ed4>
   13bbc:	bl	11b8c <__errno_location@plt>
   13bc0:	ldr	r3, [r0]
   13bc4:	cmp	r3, #4
   13bc8:	bne	13bf0 <__assert_fail@plt+0x1ec0>
   13bcc:	sub	r1, fp, #6144	; 0x1800
   13bd0:	ldr	r0, [r9, #4]
   13bd4:	sub	r1, r1, #60	; 0x3c
   13bd8:	mov	r2, #1
   13bdc:	bl	11bf8 <write@plt>
   13be0:	cmn	r0, #1
   13be4:	beq	13bbc <__assert_fail@plt+0x1e8c>
   13be8:	cmp	r0, #1
   13bec:	beq	13b9c <__assert_fail@plt+0x1e6c>
   13bf0:	movw	r1, #10840	; 0x2a58
   13bf4:	mov	r0, #0
   13bf8:	movt	r1, #3
   13bfc:	mov	r2, #5
   13c00:	b	12af4 <__assert_fail@plt+0xdc4>
   13c04:	mov	r0, #11
   13c08:	bl	22f44 <error@@Base+0x304>
   13c0c:	ldr	ip, [r7, #4]
   13c10:	ldr	r2, [r7]
   13c14:	mov	r1, #1
   13c18:	movw	r3, #10472	; 0x28e8
   13c1c:	movt	r3, #3
   13c20:	str	ip, [sp, #4]
   13c24:	str	r2, [sp]
   13c28:	mvn	r2, #0
   13c2c:	mov	r6, r0
   13c30:	bl	11b98 <__sprintf_chk@plt>
   13c34:	mov	r0, #12
   13c38:	bl	22f44 <error@@Base+0x304>
   13c3c:	mov	r7, r0
   13c40:	mov	r0, #4
   13c44:	str	r7, [r4, #8]
   13c48:	bl	22f44 <error@@Base+0x304>
   13c4c:	ldr	r2, [r4, #8]
   13c50:	mov	r3, #1
   13c54:	str	r0, [r7]
   13c58:	ldr	r2, [r2]
   13c5c:	str	r6, [r2]
   13c60:	ldr	r2, [r4, #8]
   13c64:	str	r3, [r2, #4]
   13c68:	str	r3, [r2, #8]
   13c6c:	b	12f20 <__assert_fail@plt+0x11f0>
   13c70:	mov	r2, #5
   13c74:	movw	r1, #10640	; 0x2990
   13c78:	mov	r0, r6
   13c7c:	movt	r1, #3
   13c80:	bl	1191c <dcgettext@plt>
   13c84:	mov	r1, r0
   13c88:	mov	r0, r6
   13c8c:	bl	22c40 <error@@Base>
   13c90:	mov	r3, #1
   13c94:	str	r3, [r7, #8]
   13c98:	b	12e7c <__assert_fail@plt+0x114c>
   13c9c:	movw	r1, #10820	; 0x2a44
   13ca0:	mov	r0, #0
   13ca4:	movt	r1, #3
   13ca8:	mov	r2, #5
   13cac:	b	12af4 <__assert_fail@plt+0xdc4>
   13cb0:	mov	fp, #0
   13cb4:	mov	lr, #0
   13cb8:	pop	{r1}		; (ldr r1, [sp], #4)
   13cbc:	mov	r2, sp
   13cc0:	push	{r2}		; (str r2, [sp, #-4]!)
   13cc4:	push	{r0}		; (str r0, [sp, #-4]!)
   13cc8:	ldr	ip, [pc, #16]	; 13ce0 <__assert_fail@plt+0x1fb0>
   13ccc:	push	{ip}		; (str ip, [sp, #-4]!)
   13cd0:	ldr	r0, [pc, #12]	; 13ce4 <__assert_fail@plt+0x1fb4>
   13cd4:	ldr	r3, [pc, #12]	; 13ce8 <__assert_fail@plt+0x1fb8>
   13cd8:	bl	11ac0 <__libc_start_main@plt>
   13cdc:	bl	11d00 <abort@plt>
   13ce0:	andeq	pc, r2, r4, ror #11
   13ce4:	andeq	r1, r1, r0, asr #26
   13ce8:	andeq	pc, r2, r0, lsl #11
   13cec:	ldr	r3, [pc, #20]	; 13d08 <__assert_fail@plt+0x1fd8>
   13cf0:	ldr	r2, [pc, #20]	; 13d0c <__assert_fail@plt+0x1fdc>
   13cf4:	add	r3, pc, r3
   13cf8:	ldr	r2, [r3, r2]
   13cfc:	cmp	r2, #0
   13d00:	bxeq	lr
   13d04:	b	11afc <__gmon_start__@plt>
   13d08:	andeq	r2, r3, r4, lsl #6
   13d0c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13d10:	push	{r3, lr}
   13d14:	movw	r0, #26852	; 0x68e4
   13d18:	ldr	r3, [pc, #36]	; 13d44 <__assert_fail@plt+0x2014>
   13d1c:	movt	r0, #4
   13d20:	rsb	r3, r0, r3
   13d24:	cmp	r3, #6
   13d28:	popls	{r3, pc}
   13d2c:	movw	r3, #0
   13d30:	movt	r3, #0
   13d34:	cmp	r3, #0
   13d38:	popeq	{r3, pc}
   13d3c:	blx	r3
   13d40:	pop	{r3, pc}
   13d44:	andeq	r6, r4, r7, ror #17
   13d48:	push	{r3, lr}
   13d4c:	movw	r0, #26852	; 0x68e4
   13d50:	movw	r3, #26852	; 0x68e4
   13d54:	movt	r0, #4
   13d58:	movt	r3, #4
   13d5c:	rsb	r3, r0, r3
   13d60:	asr	r3, r3, #2
   13d64:	add	r3, r3, r3, lsr #31
   13d68:	asrs	r1, r3, #1
   13d6c:	popeq	{r3, pc}
   13d70:	movw	r2, #0
   13d74:	movt	r2, #0
   13d78:	cmp	r2, #0
   13d7c:	popeq	{r3, pc}
   13d80:	blx	r2
   13d84:	pop	{r3, pc}
   13d88:	push	{r4, lr}
   13d8c:	movw	r4, #26900	; 0x6914
   13d90:	movt	r4, #4
   13d94:	ldrb	r3, [r4]
   13d98:	cmp	r3, #0
   13d9c:	popne	{r4, pc}
   13da0:	bl	13d10 <__assert_fail@plt+0x1fe0>
   13da4:	mov	r3, #1
   13da8:	strb	r3, [r4]
   13dac:	pop	{r4, pc}
   13db0:	movw	r0, #24324	; 0x5f04
   13db4:	movt	r0, #4
   13db8:	push	{r3, lr}
   13dbc:	ldr	r3, [r0]
   13dc0:	cmp	r3, #0
   13dc4:	beq	13ddc <__assert_fail@plt+0x20ac>
   13dc8:	movw	r3, #0
   13dcc:	movt	r3, #0
   13dd0:	cmp	r3, #0
   13dd4:	beq	13ddc <__assert_fail@plt+0x20ac>
   13dd8:	blx	r3
   13ddc:	pop	{r3, lr}
   13de0:	b	13d48 <__assert_fail@plt+0x2018>
   13de4:	push	{r4, lr}
   13de8:	ldr	r0, [sp, #32]
   13dec:	ldr	r4, [sp, #16]
   13df0:	bl	1477c <__assert_fail@plt+0x2a4c>
   13df4:	cmp	r0, #0
   13df8:	movne	r0, r4
   13dfc:	moveq	r0, #0
   13e00:	pop	{r4, pc}
   13e04:	push	{r4, r5, r6, lr}
   13e08:	sub	sp, sp, #8
   13e0c:	mov	r2, #5
   13e10:	mov	r6, r1
   13e14:	ldr	r4, [sp, #48]	; 0x30
   13e18:	ldr	r0, [r4, #4]
   13e1c:	bl	11a6c <fnmatch@plt>
   13e20:	cmp	r0, #0
   13e24:	bne	13e78 <__assert_fail@plt+0x2148>
   13e28:	ldr	r0, [r4, #8]
   13e2c:	bl	22f78 <error@@Base+0x338>
   13e30:	ldr	r1, [r4]
   13e34:	mov	r3, r6
   13e38:	movw	r2, #63028	; 0xf634
   13e3c:	movt	r2, #2
   13e40:	mov	r5, r0
   13e44:	movw	r0, #18064	; 0x4690
   13e48:	movt	r0, #3
   13e4c:	str	r0, [sp]
   13e50:	mov	r0, #4
   13e54:	bl	2300c <error@@Base+0x3cc>
   13e58:	bl	2b9c0 <error@@Base+0x8d80>
   13e5c:	ldr	r2, [r4, #12]
   13e60:	ldr	r3, [r4, #16]
   13e64:	str	r2, [r5]
   13e68:	add	r3, r3, #1
   13e6c:	str	r0, [r5, #4]
   13e70:	str	r5, [r4, #12]
   13e74:	str	r3, [r4, #16]
   13e78:	mov	r0, #0
   13e7c:	add	sp, sp, #8
   13e80:	pop	{r4, r5, r6, pc}
   13e84:	push	{r4, r5, r6, lr}
   13e88:	mov	r1, #40	; 0x28
   13e8c:	mov	r5, r0
   13e90:	bl	11b68 <strchr@plt>
   13e94:	cmp	r0, #0
   13e98:	cmpne	r0, r5
   13e9c:	mov	r4, r0
   13ea0:	movne	r6, #0
   13ea4:	moveq	r6, #1
   13ea8:	beq	13ec4 <__assert_fail@plt+0x2194>
   13eac:	bl	11b5c <strlen@plt>
   13eb0:	sub	r0, r0, #1
   13eb4:	add	r2, r4, r0
   13eb8:	ldrb	r3, [r4, r0]
   13ebc:	cmp	r3, #41	; 0x29
   13ec0:	beq	13ecc <__assert_fail@plt+0x219c>
   13ec4:	mov	r0, #0
   13ec8:	pop	{r4, r5, r6, pc}
   13ecc:	add	r3, r4, #1
   13ed0:	cmp	r2, r3
   13ed4:	beq	13ec4 <__assert_fail@plt+0x2194>
   13ed8:	ldrb	r3, [r4, #1]
   13edc:	cmp	r3, #40	; 0x28
   13ee0:	beq	13eec <__assert_fail@plt+0x21bc>
   13ee4:	mov	r0, #1
   13ee8:	pop	{r4, r5, r6, pc}
   13eec:	ldrb	r3, [r2, #-1]
   13ef0:	cmp	r3, #41	; 0x29
   13ef4:	bne	13ee4 <__assert_fail@plt+0x21b4>
   13ef8:	mov	r2, #5
   13efc:	movw	r1, #63032	; 0xf638
   13f00:	mov	r0, r6
   13f04:	movt	r1, #2
   13f08:	bl	1191c <dcgettext@plt>
   13f0c:	mov	r2, r5
   13f10:	mov	r1, r0
   13f14:	mov	r0, r6
   13f18:	bl	22d64 <error@@Base+0x124>
   13f1c:	push	{r4, r5, r6, lr}
   13f20:	mov	r4, r1
   13f24:	mov	r6, r2
   13f28:	bl	2312c <error@@Base+0x4ec>
   13f2c:	mov	r1, #40	; 0x28
   13f30:	mov	r5, #0
   13f34:	str	r0, [r4]
   13f38:	bl	11b68 <strchr@plt>
   13f3c:	add	r4, r0, #1
   13f40:	strb	r5, [r0]
   13f44:	mov	r0, r4
   13f48:	bl	11b5c <strlen@plt>
   13f4c:	add	r0, r4, r0
   13f50:	strb	r5, [r0, #-1]
   13f54:	str	r4, [r6]
   13f58:	pop	{r4, r5, r6, pc}
   13f5c:	push	{r4, r5, lr}
   13f60:	movw	r4, #26864	; 0x68f0
   13f64:	movt	r4, #4
   13f68:	sub	sp, sp, #20
   13f6c:	add	r1, sp, #4
   13f70:	add	r2, sp, #8
   13f74:	ldr	r3, [r4]
   13f78:	str	r3, [sp, #12]
   13f7c:	bl	13f1c <__assert_fail@plt+0x21ec>
   13f80:	ldr	r0, [sp, #4]
   13f84:	bl	17ae8 <__assert_fail@plt+0x5db8>
   13f88:	cmp	r0, #0
   13f8c:	beq	13fdc <__assert_fail@plt+0x22ac>
   13f90:	mov	r1, #0
   13f94:	bl	28024 <error@@Base+0x53e4>
   13f98:	ldr	r2, [sp, #8]
   13f9c:	movw	r1, #15844	; 0x3de4
   13fa0:	ldr	r0, [sp, #4]
   13fa4:	movt	r1, #1
   13fa8:	bl	142b4 <__assert_fail@plt+0x2584>
   13fac:	mov	r5, r0
   13fb0:	ldr	r0, [sp, #4]
   13fb4:	bl	1188c <free@plt>
   13fb8:	cmp	r5, #0
   13fbc:	ldr	r2, [sp, #12]
   13fc0:	ldr	r3, [r4]
   13fc4:	movgt	r0, r5
   13fc8:	mvnle	r0, #0
   13fcc:	cmp	r2, r3
   13fd0:	bne	14004 <__assert_fail@plt+0x22d4>
   13fd4:	add	sp, sp, #20
   13fd8:	pop	{r4, r5, pc}
   13fdc:	ldr	r0, [sp, #4]
   13fe0:	bl	1640c <__assert_fail@plt+0x46dc>
   13fe4:	cmp	r0, #0
   13fe8:	beq	13f98 <__assert_fail@plt+0x2268>
   13fec:	ldr	r0, [sp, #4]
   13ff0:	bl	2b9c0 <error@@Base+0x8d80>
   13ff4:	bl	17bc4 <__assert_fail@plt+0x5e94>
   13ff8:	cmp	r0, #0
   13ffc:	beq	13f98 <__assert_fail@plt+0x2268>
   14000:	b	13f90 <__assert_fail@plt+0x2260>
   14004:	bl	11934 <__stack_chk_fail@plt>
   14008:	push	{r4, r5, lr}
   1400c:	movw	r4, #26864	; 0x68f0
   14010:	movt	r4, #4
   14014:	sub	sp, sp, #20
   14018:	add	r2, sp, #8
   1401c:	add	r1, sp, #4
   14020:	ldr	r3, [r4]
   14024:	mov	r5, r0
   14028:	str	r3, [sp, #12]
   1402c:	bl	13f1c <__assert_fail@plt+0x21ec>
   14030:	ldr	r0, [sp, #4]
   14034:	bl	2b9c0 <error@@Base+0x8d80>
   14038:	bl	17bc4 <__assert_fail@plt+0x5e94>
   1403c:	mov	r1, #0
   14040:	bl	28024 <error@@Base+0x53e4>
   14044:	ldmib	sp, {r0, r1}
   14048:	bl	147f0 <__assert_fail@plt+0x2ac0>
   1404c:	add	r0, r0, #3
   14050:	cmp	r0, #4
   14054:	ldrls	pc, [pc, r0, lsl #2]
   14058:	b	1411c <__assert_fail@plt+0x23ec>
   1405c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14060:	andeq	r4, r1, ip, lsl #2
   14064:	muleq	r1, r8, r0
   14068:	andeq	r4, r1, r0, ror r0
   1406c:	andeq	r4, r1, r4, asr #1
   14070:	mov	r5, #0
   14074:	ldr	r0, [sp, #4]
   14078:	bl	1188c <free@plt>
   1407c:	ldr	r2, [sp, #12]
   14080:	ldr	r3, [r4]
   14084:	mov	r0, r5
   14088:	cmp	r2, r3
   1408c:	bne	14148 <__assert_fail@plt+0x2418>
   14090:	add	sp, sp, #20
   14094:	pop	{r4, r5, pc}
   14098:	movw	r1, #63076	; 0xf664
   1409c:	movt	r1, #2
   140a0:	mov	r0, #0
   140a4:	mov	r2, #5
   140a8:	mov	r5, #1
   140ac:	bl	1191c <dcgettext@plt>
   140b0:	ldr	r2, [sp, #4]
   140b4:	mov	r1, r0
   140b8:	mov	r0, #0
   140bc:	bl	22c40 <error@@Base>
   140c0:	b	14074 <__assert_fail@plt+0x2344>
   140c4:	mov	r2, #5
   140c8:	movw	r1, #63156	; 0xf6b4
   140cc:	mov	r0, #0
   140d0:	movt	r1, #2
   140d4:	bl	1191c <dcgettext@plt>
   140d8:	ldr	r2, [sp, #8]
   140dc:	ldr	r3, [sp, #4]
   140e0:	mov	r5, #1
   140e4:	mov	r1, r0
   140e8:	mov	r0, #0
   140ec:	bl	22c40 <error@@Base>
   140f0:	b	14074 <__assert_fail@plt+0x2344>
   140f4:	movw	r0, #63148	; 0xf6ac
   140f8:	ldr	r1, [sp, #4]
   140fc:	movt	r0, #2
   14100:	mov	r5, #1
   14104:	bl	22ec8 <error@@Base+0x288>
   14108:	b	14074 <__assert_fail@plt+0x2344>
   1410c:	movw	r1, #63112	; 0xf688
   14110:	mov	r0, #0
   14114:	movt	r1, #2
   14118:	b	140a4 <__assert_fail@plt+0x2374>
   1411c:	mov	r2, #5
   14120:	movw	r1, #63200	; 0xf6e0
   14124:	mov	r0, #0
   14128:	movt	r1, #2
   1412c:	bl	1191c <dcgettext@plt>
   14130:	mov	r2, r5
   14134:	mov	r5, #1
   14138:	mov	r1, r0
   1413c:	mov	r0, #0
   14140:	bl	22c40 <error@@Base>
   14144:	b	14074 <__assert_fail@plt+0x2344>
   14148:	bl	11934 <__stack_chk_fail@plt>
   1414c:	push	{r4, r5, r6, r7, fp, lr}
   14150:	add	fp, sp, #20
   14154:	sub	sp, sp, #24
   14158:	movw	r5, #26864	; 0x68f0
   1415c:	movt	r5, #4
   14160:	mov	r7, r2
   14164:	mov	r4, r1
   14168:	ldrb	r3, [r1]
   1416c:	mov	r6, r0
   14170:	ldr	r2, [r5]
   14174:	cmp	r3, #0
   14178:	str	r2, [fp, #-24]	; 0xffffffe8
   1417c:	movne	ip, r1
   14180:	movne	r1, #0
   14184:	beq	141bc <__assert_fail@plt+0x248c>
   14188:	cmp	r3, #91	; 0x5b
   1418c:	beq	142a0 <__assert_fail@plt+0x2570>
   14190:	bls	141d8 <__assert_fail@plt+0x24a8>
   14194:	cmp	r3, #92	; 0x5c
   14198:	beq	14298 <__assert_fail@plt+0x2568>
   1419c:	cmp	r3, #93	; 0x5d
   141a0:	bne	141ac <__assert_fail@plt+0x247c>
   141a4:	cmp	r1, #0
   141a8:	bne	141e8 <__assert_fail@plt+0x24b8>
   141ac:	ldrb	r3, [ip, #1]
   141b0:	add	ip, ip, #1
   141b4:	cmp	r3, #0
   141b8:	bne	14188 <__assert_fail@plt+0x2458>
   141bc:	mov	r0, #0
   141c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   141c4:	ldr	r3, [r5]
   141c8:	cmp	r2, r3
   141cc:	bne	142b0 <__assert_fail@plt+0x2580>
   141d0:	sub	sp, fp, #20
   141d4:	pop	{r4, r5, r6, r7, fp, pc}
   141d8:	cmp	r3, #42	; 0x2a
   141dc:	beq	141e8 <__assert_fail@plt+0x24b8>
   141e0:	cmp	r3, #63	; 0x3f
   141e4:	bne	141ac <__assert_fail@plt+0x247c>
   141e8:	mov	r0, r6
   141ec:	movw	r1, #15876	; 0x3e04
   141f0:	sub	r2, fp, #44	; 0x2c
   141f4:	movt	r1, #1
   141f8:	str	r6, [fp, #-44]	; 0xffffffd4
   141fc:	mov	r6, #0
   14200:	str	r4, [fp, #-40]	; 0xffffffd8
   14204:	str	r7, [fp, #-36]	; 0xffffffdc
   14208:	str	r6, [fp, #-32]	; 0xffffffe0
   1420c:	str	r6, [fp, #-28]	; 0xffffffe4
   14210:	bl	142b4 <__assert_fail@plt+0x2584>
   14214:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14218:	cmp	r4, r6
   1421c:	beq	141bc <__assert_fail@plt+0x248c>
   14220:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14224:	mov	r1, r6
   14228:	lsl	r3, r3, #2
   1422c:	add	r3, r3, #14
   14230:	bic	r3, r3, #7
   14234:	sub	sp, sp, r3
   14238:	sub	r6, sp, #4
   1423c:	mov	r0, sp
   14240:	mov	r3, r6
   14244:	ldr	ip, [r4, #4]
   14248:	add	r1, r1, #1
   1424c:	str	ip, [r3, #4]!
   14250:	ldr	r4, [r4]
   14254:	cmp	r4, #0
   14258:	bne	14244 <__assert_fail@plt+0x2514>
   1425c:	movw	r3, #11000	; 0x2af8
   14260:	mov	r2, #4
   14264:	movt	r3, #2
   14268:	bl	11cc4 <qsort@plt>
   1426c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14270:	cmp	r0, #0
   14274:	beq	142a8 <__assert_fail@plt+0x2578>
   14278:	mov	r2, r6
   1427c:	mov	r3, r0
   14280:	ldr	r1, [r2, #4]!
   14284:	str	r1, [r3, #4]
   14288:	ldr	r3, [r3]
   1428c:	cmp	r3, #0
   14290:	bne	14280 <__assert_fail@plt+0x2550>
   14294:	b	141c0 <__assert_fail@plt+0x2490>
   14298:	add	ip, ip, #1
   1429c:	b	141ac <__assert_fail@plt+0x247c>
   142a0:	mov	r1, #1
   142a4:	b	141ac <__assert_fail@plt+0x247c>
   142a8:	mov	r0, r4
   142ac:	b	141c0 <__assert_fail@plt+0x2490>
   142b0:	bl	11934 <__stack_chk_fail@plt>
   142b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   142b8:	add	fp, sp, #32
   142bc:	sub	sp, sp, #164	; 0xa4
   142c0:	movw	r7, #26864	; 0x68f0
   142c4:	movt	r7, #4
   142c8:	str	r1, [fp, #-144]	; 0xffffff70
   142cc:	mov	r1, #0
   142d0:	ldr	r3, [r7]
   142d4:	str	r2, [fp, #-148]	; 0xffffff6c
   142d8:	mov	r2, r1
   142dc:	str	r7, [fp, #-156]	; 0xffffff64
   142e0:	str	r3, [fp, #-40]	; 0xffffffd8
   142e4:	bl	11a78 <open64@plt>
   142e8:	subs	sl, r0, #0
   142ec:	blt	14770 <__assert_fail@plt+0x2a40>
   142f0:	sub	r4, fp, #60	; 0x3c
   142f4:	mov	r2, #8
   142f8:	mov	r1, r4
   142fc:	bl	1185c <read@plt>
   14300:	cmp	r0, #8
   14304:	mov	r5, r0
   14308:	bne	146a8 <__assert_fail@plt+0x2978>
   1430c:	movw	r1, #63252	; 0xf714
   14310:	mov	r0, r4
   14314:	movt	r1, #2
   14318:	mov	r2, r5
   1431c:	bl	118f8 <memcmp@plt>
   14320:	cmp	r0, #0
   14324:	bne	146a8 <__assert_fail@plt+0x2978>
   14328:	mov	r8, r5
   1432c:	mov	r5, r0
   14330:	sub	ip, fp, #120	; 0x78
   14334:	str	r0, [fp, #-136]	; 0xffffff78
   14338:	str	ip, [fp, #-128]	; 0xffffff80
   1433c:	str	r0, [fp, #-152]	; 0xffffff68
   14340:	mov	r2, r8
   14344:	str	r5, [sp]
   14348:	mov	r0, sl
   1434c:	asr	r3, r8, #31
   14350:	bl	11a0c <lseek64@plt>
   14354:	cmp	r0, #0
   14358:	sbcs	r2, r1, #0
   1435c:	mov	r0, sl
   14360:	blt	146ac <__assert_fail@plt+0x297c>
   14364:	sub	r1, fp, #120	; 0x78
   14368:	mov	r2, #60	; 0x3c
   1436c:	bl	1185c <read@plt>
   14370:	cmp	r0, #0
   14374:	beq	14748 <__assert_fail@plt+0x2a18>
   14378:	cmp	r0, #60	; 0x3c
   1437c:	bne	146a8 <__assert_fail@plt+0x2978>
   14380:	movw	r1, #63264	; 0xf720
   14384:	sub	r0, fp, #62	; 0x3e
   14388:	movt	r1, #2
   1438c:	mov	r2, #2
   14390:	bl	118f8 <memcmp@plt>
   14394:	subs	r7, r0, #0
   14398:	bne	146a8 <__assert_fail@plt+0x2978>
   1439c:	ldr	ip, [fp, #-128]	; 0xffffff80
   143a0:	ldm	ip, {r0, r1, r2, r3}
   143a4:	sub	ip, fp, #36	; 0x24
   143a8:	stm	r4, {r0, r1, r2, r3}
   143ac:	strb	r7, [ip, #-8]!
   143b0:	ldrb	r3, [ip, #-1]
   143b4:	sub	r6, ip, #1
   143b8:	cmp	r3, #32
   143bc:	bne	143d0 <__assert_fail@plt+0x26a0>
   143c0:	cmp	r4, r6
   143c4:	strb	r5, [ip, #-1]
   143c8:	mov	ip, r6
   143cc:	bcc	143b0 <__assert_fail@plt+0x2680>
   143d0:	ldrb	r9, [fp, #-60]	; 0xffffffc4
   143d4:	cmp	r9, #47	; 0x2f
   143d8:	bne	14670 <__assert_fail@plt+0x2940>
   143dc:	ldrb	r3, [fp, #-59]	; 0xffffffc5
   143e0:	cmp	r3, #47	; 0x2f
   143e4:	bne	14670 <__assert_fail@plt+0x2940>
   143e8:	ldrb	r3, [fp, #-58]	; 0xffffffc6
   143ec:	cmp	r3, #0
   143f0:	moveq	ip, #1
   143f4:	bne	14670 <__assert_fail@plt+0x2940>
   143f8:	ldrb	r3, [r6]
   143fc:	cmp	r3, #47	; 0x2f
   14400:	strbeq	r5, [r6]
   14404:	movne	r3, r9
   14408:	ldrbeq	r3, [fp, #-60]	; 0xffffffc4
   1440c:	cmp	ip, #0
   14410:	bne	14528 <__assert_fail@plt+0x27f8>
   14414:	cmp	r3, #32
   14418:	cmpne	r3, #47	; 0x2f
   1441c:	bne	14528 <__assert_fail@plt+0x27f8>
   14420:	ldr	r1, [fp, #-136]	; 0xffffff78
   14424:	cmp	r1, #0
   14428:	beq	14528 <__assert_fail@plt+0x27f8>
   1442c:	mov	r1, ip
   14430:	mov	r2, #10
   14434:	sub	r0, fp, #59	; 0x3b
   14438:	str	ip, [fp, #-164]	; 0xffffff5c
   1443c:	bl	11844 <strtol@plt>
   14440:	ldr	r3, [fp, #-136]	; 0xffffff78
   14444:	sub	r2, fp, #124	; 0x7c
   14448:	movw	r1, #63284	; 0xf734
   1444c:	movt	r1, #2
   14450:	add	r9, r8, #60	; 0x3c
   14454:	add	r7, r3, r0
   14458:	sub	r0, fp, #80	; 0x50
   1445c:	bl	11c94 <sscanf@plt>
   14460:	ldr	ip, [fp, #-164]	; 0xffffff5c
   14464:	mov	r2, #10
   14468:	sub	r0, fp, #72	; 0x48
   1446c:	mov	r1, ip
   14470:	bl	11844 <strtol@plt>
   14474:	ldr	ip, [fp, #-164]	; 0xffffff5c
   14478:	mov	r2, #10
   1447c:	mov	r1, ip
   14480:	mov	r6, r0
   14484:	sub	r0, fp, #104	; 0x68
   14488:	bl	11844 <strtol@plt>
   1448c:	ldr	ip, [fp, #-164]	; 0xffffff5c
   14490:	mov	r2, #10
   14494:	mov	r1, ip
   14498:	str	r0, [fp, #-132]	; 0xffffff7c
   1449c:	sub	r0, fp, #92	; 0x5c
   144a0:	bl	11844 <strtol@plt>
   144a4:	ldr	ip, [fp, #-164]	; 0xffffff5c
   144a8:	mov	r2, #10
   144ac:	mov	r1, ip
   144b0:	mov	r3, r0
   144b4:	sub	r0, fp, #86	; 0x56
   144b8:	str	r3, [fp, #-160]	; 0xffffff60
   144bc:	bl	11844 <strtol@plt>
   144c0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   144c4:	ldr	ip, [fp, #-164]	; 0xffffff5c
   144c8:	ldr	r3, [fp, #-160]	; 0xffffff60
   144cc:	ldr	lr, [fp, #-124]	; 0xffffff84
   144d0:	str	r1, [sp, #8]
   144d4:	mov	r1, r7
   144d8:	ldr	r7, [fp, #-148]	; 0xffffff6c
   144dc:	mov	r2, ip
   144e0:	str	r3, [sp, #12]
   144e4:	mov	r3, r8
   144e8:	str	r6, [sp, #4]
   144ec:	str	r7, [sp, #24]
   144f0:	str	lr, [sp, #20]
   144f4:	str	r9, [sp]
   144f8:	ldr	ip, [fp, #-144]	; 0xffffff70
   144fc:	str	r0, [sp, #16]
   14500:	mov	r0, sl
   14504:	blx	ip
   14508:	cmp	r0, #0
   1450c:	bne	1475c <__assert_fail@plt+0x2a2c>
   14510:	mov	r7, #1
   14514:	str	r7, [fp, #-152]	; 0xffffff68
   14518:	add	r8, r6, r9
   1451c:	tst	r8, #1
   14520:	addne	r8, r8, #1
   14524:	b	14340 <__assert_fail@plt+0x2610>
   14528:	cmp	r3, #35	; 0x23
   1452c:	beq	1468c <__assert_fail@plt+0x295c>
   14530:	ldr	r1, [fp, #-152]	; 0xffffff68
   14534:	str	r4, [fp, #-140]	; 0xffffff74
   14538:	eor	r7, r1, #1
   1453c:	sub	r2, fp, #124	; 0x7c
   14540:	movw	r1, #63284	; 0xf734
   14544:	sub	r0, fp, #80	; 0x50
   14548:	movt	r1, #2
   1454c:	str	ip, [fp, #-164]	; 0xffffff5c
   14550:	bl	11c94 <sscanf@plt>
   14554:	mov	r1, #0
   14558:	mov	r2, #10
   1455c:	sub	r0, fp, #72	; 0x48
   14560:	add	r9, r8, #60	; 0x3c
   14564:	bl	11844 <strtol@plt>
   14568:	mov	r1, #0
   1456c:	mov	r2, #10
   14570:	mov	r6, r0
   14574:	sub	r0, fp, #104	; 0x68
   14578:	bl	11844 <strtol@plt>
   1457c:	mov	r1, #0
   14580:	mov	r2, #10
   14584:	str	r0, [fp, #-132]	; 0xffffff7c
   14588:	sub	r0, fp, #92	; 0x5c
   1458c:	bl	11844 <strtol@plt>
   14590:	mov	r1, #0
   14594:	mov	r2, #10
   14598:	mov	r3, r0
   1459c:	sub	r0, fp, #86	; 0x56
   145a0:	str	r3, [fp, #-160]	; 0xffffff60
   145a4:	bl	11844 <strtol@plt>
   145a8:	ldr	r2, [fp, #-132]	; 0xffffff7c
   145ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   145b0:	ldr	lr, [fp, #-124]	; 0xffffff84
   145b4:	str	r2, [sp, #8]
   145b8:	mov	r2, r7
   145bc:	ldr	r7, [fp, #-148]	; 0xffffff6c
   145c0:	str	r3, [sp, #12]
   145c4:	mov	r3, r8
   145c8:	ldr	r1, [fp, #-140]	; 0xffffff74
   145cc:	str	r7, [sp, #24]
   145d0:	str	r6, [sp, #4]
   145d4:	str	lr, [sp, #20]
   145d8:	str	r9, [sp]
   145dc:	ldr	r7, [fp, #-144]	; 0xffffff70
   145e0:	str	r0, [sp, #16]
   145e4:	mov	r0, sl
   145e8:	blx	r7
   145ec:	ldr	ip, [fp, #-164]	; 0xffffff5c
   145f0:	cmp	r0, #0
   145f4:	bne	1475c <__assert_fail@plt+0x2a2c>
   145f8:	cmp	ip, #0
   145fc:	beq	14518 <__assert_fail@plt+0x27e8>
   14600:	add	r3, r6, #14
   14604:	mov	r0, sl
   14608:	bic	r3, r3, #7
   1460c:	mov	r2, r6
   14610:	sub	sp, sp, r3
   14614:	add	ip, sp, #32
   14618:	str	ip, [fp, #-136]	; 0xffffff78
   1461c:	mov	r1, ip
   14620:	bl	1185c <read@plt>
   14624:	cmp	r6, r0
   14628:	bne	146a8 <__assert_fail@plt+0x2978>
   1462c:	ldr	r7, [fp, #-136]	; 0xffffff78
   14630:	add	r1, r7, r6
   14634:	cmp	r7, r1
   14638:	bcs	14518 <__assert_fail@plt+0x27e8>
   1463c:	sub	r1, r1, #1
   14640:	sub	r3, r7, #1
   14644:	b	14650 <__assert_fail@plt+0x2920>
   14648:	cmp	r3, r1
   1464c:	beq	14518 <__assert_fail@plt+0x27e8>
   14650:	ldrb	r2, [r3, #1]!
   14654:	cmp	r2, #10
   14658:	bne	14648 <__assert_fail@plt+0x2918>
   1465c:	ldrb	r2, [r3, #-1]
   14660:	strb	r5, [r3]
   14664:	cmp	r2, #47	; 0x2f
   14668:	strbeq	r5, [r3, #-1]
   1466c:	b	14648 <__assert_fail@plt+0x2918>
   14670:	movw	r1, #63268	; 0xf724
   14674:	mov	r0, r4
   14678:	movt	r1, #2
   1467c:	bl	1182c <strcmp@plt>
   14680:	rsbs	ip, r0, #1
   14684:	movcc	ip, #0
   14688:	b	143f8 <__assert_fail@plt+0x26c8>
   1468c:	ldrb	r3, [fp, #-59]	; 0xffffffc5
   14690:	cmp	r3, #49	; 0x31
   14694:	beq	146d0 <__assert_fail@plt+0x29a0>
   14698:	ldr	r2, [fp, #-152]	; 0xffffff68
   1469c:	str	r4, [fp, #-140]	; 0xffffff74
   146a0:	eor	r7, r2, #1
   146a4:	b	1453c <__assert_fail@plt+0x280c>
   146a8:	mov	r0, sl
   146ac:	bl	11d0c <close@plt>
   146b0:	mvn	r0, #1
   146b4:	ldr	ip, [fp, #-156]	; 0xffffff64
   146b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   146bc:	ldr	r3, [ip]
   146c0:	cmp	r2, r3
   146c4:	bne	14778 <__assert_fail@plt+0x2a48>
   146c8:	sub	sp, fp, #32
   146cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146d0:	ldrb	r3, [fp, #-58]	; 0xffffffc6
   146d4:	cmp	r3, #47	; 0x2f
   146d8:	ldrne	r3, [fp, #-152]	; 0xffffff68
   146dc:	strne	r4, [fp, #-140]	; 0xffffff74
   146e0:	eorne	r7, r3, #1
   146e4:	bne	1453c <__assert_fail@plt+0x280c>
   146e8:	mov	r1, #0
   146ec:	mov	r2, #10
   146f0:	sub	r0, fp, #57	; 0x39
   146f4:	str	ip, [fp, #-164]	; 0xffffff5c
   146f8:	bl	11844 <strtol@plt>
   146fc:	add	r3, r0, #15
   14700:	mov	r6, r0
   14704:	bic	r3, r3, #7
   14708:	mov	r2, r0
   1470c:	sub	sp, sp, r3
   14710:	mov	r0, sl
   14714:	add	r3, sp, #39	; 0x27
   14718:	lsr	r9, r3, #3
   1471c:	lsl	r3, r9, #3
   14720:	str	r3, [fp, #-140]	; 0xffffff74
   14724:	mov	r1, r3
   14728:	bl	1185c <read@plt>
   1472c:	ldr	ip, [fp, #-164]	; 0xffffff5c
   14730:	cmp	r6, r0
   14734:	bne	146a8 <__assert_fail@plt+0x2978>
   14738:	mov	r1, #1
   1473c:	strb	r5, [r6, r9, lsl #3]
   14740:	str	r1, [fp, #-152]	; 0xffffff68
   14744:	b	1453c <__assert_fail@plt+0x280c>
   14748:	mov	r6, r0
   1474c:	mov	r0, sl
   14750:	bl	11d0c <close@plt>
   14754:	mov	r0, r6
   14758:	b	146b4 <__assert_fail@plt+0x2984>
   1475c:	mov	r7, r0
   14760:	mov	r0, sl
   14764:	bl	11d0c <close@plt>
   14768:	mov	r0, r7
   1476c:	b	146b4 <__assert_fail@plt+0x2984>
   14770:	mvn	r0, #0
   14774:	b	146b4 <__assert_fail@plt+0x2984>
   14778:	bl	11934 <__stack_chk_fail@plt>
   1477c:	push	{r4, r5, r6, lr}
   14780:	mov	r5, r1
   14784:	mov	r1, #47	; 0x2f
   14788:	mov	r4, r0
   1478c:	mov	r6, r2
   14790:	bl	11c7c <strrchr@plt>
   14794:	mov	r1, r5
   14798:	cmp	r0, #0
   1479c:	addne	r4, r0, #1
   147a0:	cmp	r6, #0
   147a4:	mov	r0, r4
   147a8:	bne	147bc <__assert_fail@plt+0x2a8c>
   147ac:	bl	1182c <strcmp@plt>
   147b0:	rsbs	r0, r0, #1
   147b4:	movcc	r0, #0
   147b8:	pop	{r4, r5, r6, pc}
   147bc:	mov	r2, #15
   147c0:	bl	11cf4 <strncmp@plt>
   147c4:	rsbs	r0, r0, #1
   147c8:	movcc	r0, #0
   147cc:	pop	{r4, r5, r6, pc}
   147d0:	push	{r4, lr}
   147d4:	mov	r4, r3
   147d8:	ldr	r0, [sp, #32]
   147dc:	bl	1477c <__assert_fail@plt+0x2a4c>
   147e0:	cmp	r0, #0
   147e4:	movne	r0, r4
   147e8:	moveq	r0, #0
   147ec:	pop	{r4, pc}
   147f0:	push	{r4, r5, r6, r7, r8, r9, lr}
   147f4:	movw	r6, #26864	; 0x68f0
   147f8:	movt	r6, #4
   147fc:	sub	sp, sp, #188	; 0xbc
   14800:	mov	r2, r1
   14804:	movw	r1, #18384	; 0x47d0
   14808:	ldr	r3, [r6]
   1480c:	movt	r1, #1
   14810:	mov	r5, r0
   14814:	str	r3, [sp, #180]	; 0xb4
   14818:	bl	142b4 <__assert_fail@plt+0x2584>
   1481c:	subs	r4, r0, #0
   14820:	movlt	r0, r4
   14824:	blt	14830 <__assert_fail@plt+0x2b00>
   14828:	moveq	r0, #1
   1482c:	bne	14848 <__assert_fail@plt+0x2b18>
   14830:	ldr	r2, [sp, #180]	; 0xb4
   14834:	ldr	r3, [r6]
   14838:	cmp	r2, r3
   1483c:	bne	149bc <__assert_fail@plt+0x2c8c>
   14840:	add	sp, sp, #188	; 0xbc
   14844:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14848:	mov	r0, r5
   1484c:	mov	r1, #2
   14850:	movw	r2, #438	; 0x1b6
   14854:	bl	11a78 <open64@plt>
   14858:	subs	r9, r0, #0
   1485c:	blt	149b4 <__assert_fail@plt+0x2c84>
   14860:	asr	r5, r4, #31
   14864:	mov	r7, #0
   14868:	mov	r2, r4
   1486c:	str	r7, [sp]
   14870:	mov	r3, r5
   14874:	bl	11a0c <lseek64@plt>
   14878:	cmp	r0, #0
   1487c:	sbcs	r3, r1, #0
   14880:	blt	14994 <__assert_fail@plt+0x2c64>
   14884:	mov	r0, r9
   14888:	mov	r2, #60	; 0x3c
   1488c:	add	r1, sp, #12
   14890:	bl	1185c <read@plt>
   14894:	cmp	r0, #60	; 0x3c
   14898:	mov	r8, r0
   1489c:	bne	14994 <__assert_fail@plt+0x2c64>
   148a0:	mov	r3, r5
   148a4:	str	r7, [sp]
   148a8:	mov	r0, r9
   148ac:	mov	r2, r4
   148b0:	bl	11a0c <lseek64@plt>
   148b4:	cmp	r0, #0
   148b8:	sbcs	r3, r1, #0
   148bc:	blt	14994 <__assert_fail@plt+0x2c64>
   148c0:	mov	r2, r8
   148c4:	mov	r0, r9
   148c8:	add	r1, sp, #12
   148cc:	bl	11bf8 <write@plt>
   148d0:	cmp	r0, #60	; 0x3c
   148d4:	beq	148f0 <__assert_fail@plt+0x2bc0>
   148d8:	b	14994 <__assert_fail@plt+0x2c64>
   148dc:	bl	11b8c <__errno_location@plt>
   148e0:	ldr	r8, [r0]
   148e4:	mov	r7, r0
   148e8:	cmp	r8, #4
   148ec:	bne	149a0 <__assert_fail@plt+0x2c70>
   148f0:	mov	r0, #3
   148f4:	mov	r1, r9
   148f8:	add	r2, sp, #72	; 0x48
   148fc:	bl	119d0 <__fxstat64@plt>
   14900:	cmn	r0, #1
   14904:	beq	148dc <__assert_fail@plt+0x2bac>
   14908:	cmp	r0, #0
   1490c:	addge	r3, sp, #27
   14910:	addge	r1, sp, #39	; 0x27
   14914:	movge	r2, #32
   14918:	blt	14994 <__assert_fail@plt+0x2c64>
   1491c:	strb	r2, [r3, #1]!
   14920:	cmp	r3, r1
   14924:	bne	1491c <__assert_fail@plt+0x2bec>
   14928:	ldr	ip, [sp, #152]	; 0x98
   1492c:	mov	r1, #1
   14930:	mov	r2, #12
   14934:	movw	r3, #63288	; 0xf738
   14938:	add	r0, sp, #28
   1493c:	movt	r3, #2
   14940:	str	ip, [sp]
   14944:	mov	r7, #0
   14948:	bl	11b98 <__sprintf_chk@plt>
   1494c:	mov	r3, r5
   14950:	mov	r2, r4
   14954:	str	r7, [sp]
   14958:	mov	r0, r9
   1495c:	bl	11a0c <lseek64@plt>
   14960:	cmp	r0, #0
   14964:	sbcs	r3, r1, #0
   14968:	blt	14994 <__assert_fail@plt+0x2c64>
   1496c:	add	r1, sp, #12
   14970:	mov	r0, r9
   14974:	mov	r2, #60	; 0x3c
   14978:	bl	11bf8 <write@plt>
   1497c:	cmp	r0, #60	; 0x3c
   14980:	bne	14994 <__assert_fail@plt+0x2c64>
   14984:	mov	r0, r9
   14988:	bl	11d0c <close@plt>
   1498c:	mov	r0, r7
   14990:	b	14830 <__assert_fail@plt+0x2b00>
   14994:	bl	11b8c <__errno_location@plt>
   14998:	ldr	r8, [r0]
   1499c:	mov	r7, r0
   149a0:	mov	r0, r9
   149a4:	bl	11d0c <close@plt>
   149a8:	str	r8, [r7]
   149ac:	mvn	r0, #2
   149b0:	b	14830 <__assert_fail@plt+0x2b00>
   149b4:	mvn	r0, #2
   149b8:	b	14830 <__assert_fail@plt+0x2b00>
   149bc:	bl	11934 <__stack_chk_fail@plt>
   149c0:	ldr	r2, [r0, #4]
   149c4:	cmp	r2, #0
   149c8:	ldreq	r3, [r0, #12]
   149cc:	ldreq	r2, [r3]
   149d0:	sub	r2, r2, #1
   149d4:	ldrb	r3, [r2, #1]
   149d8:	cmp	r3, #0
   149dc:	addne	r2, r2, #1
   149e0:	movne	r0, #0
   149e4:	beq	14a04 <__assert_fail@plt+0x2cd4>
   149e8:	mov	ip, r3
   149ec:	ldrb	r3, [r2, #1]!
   149f0:	cmp	r3, #0
   149f4:	and	r1, r3, #15
   149f8:	add	r0, r0, ip, lsl r1
   149fc:	bne	149e8 <__assert_fail@plt+0x2cb8>
   14a00:	bx	lr
   14a04:	mov	r0, r3
   14a08:	bx	lr
   14a0c:	ldr	r2, [r0, #4]
   14a10:	cmp	r2, #0
   14a14:	ldreq	r3, [r0, #12]
   14a18:	ldreq	r2, [r3]
   14a1c:	sub	r2, r2, #1
   14a20:	ldrb	r3, [r2, #1]
   14a24:	cmp	r3, #0
   14a28:	addne	r2, r2, #1
   14a2c:	movne	r0, #0
   14a30:	beq	14a50 <__assert_fail@plt+0x2d20>
   14a34:	mov	ip, r3
   14a38:	ldrb	r3, [r2, #1]!
   14a3c:	cmp	r3, #0
   14a40:	and	r1, r3, #7
   14a44:	add	r0, r0, ip, lsl r1
   14a48:	bne	14a34 <__assert_fail@plt+0x2d04>
   14a4c:	bx	lr
   14a50:	mov	r0, r3
   14a54:	bx	lr
   14a58:	ldr	r3, [r0, #4]
   14a5c:	ldr	r2, [r1, #4]
   14a60:	cmp	r3, #0
   14a64:	ldreq	r3, [r0, #12]
   14a68:	movne	r0, r3
   14a6c:	ldreq	r0, [r3]
   14a70:	cmp	r2, #0
   14a74:	ldreq	r3, [r1, #12]
   14a78:	movne	r1, r2
   14a7c:	ldreq	r1, [r3]
   14a80:	b	1182c <strcmp@plt>
   14a84:	push	{r4, r5, r6, r7, r8, lr}
   14a88:	movw	r6, #26864	; 0x68f0
   14a8c:	movt	r6, #4
   14a90:	ldrh	r3, [r0, #78]	; 0x4e
   14a94:	sub	sp, sp, #112	; 0x70
   14a98:	mov	r7, r0
   14a9c:	ldr	r2, [r6]
   14aa0:	tst	r3, #516	; 0x204
   14aa4:	mov	r8, r1
   14aa8:	str	r2, [sp, #108]	; 0x6c
   14aac:	beq	14ac8 <__assert_fail@plt+0x2d98>
   14ab0:	ldr	r2, [sp, #108]	; 0x6c
   14ab4:	ldr	r3, [r6]
   14ab8:	cmp	r2, r3
   14abc:	bne	14c58 <__assert_fail@plt+0x2f28>
   14ac0:	add	sp, sp, #112	; 0x70
   14ac4:	pop	{r4, r5, r6, r7, r8, pc}
   14ac8:	ldr	r0, [r0]
   14acc:	bl	13e84 <__assert_fail@plt+0x2154>
   14ad0:	cmp	r0, #0
   14ad4:	beq	14b50 <__assert_fail@plt+0x2e20>
   14ad8:	ldrd	r4, [r7, #32]
   14adc:	cmp	r5, #0
   14ae0:	cmpeq	r4, #1
   14ae4:	mvneq	r4, #0
   14ae8:	beq	14afc <__assert_fail@plt+0x2dcc>
   14aec:	subs	r4, r4, #3
   14af0:	sbc	r5, r5, #0
   14af4:	lsr	r4, r4, #30
   14af8:	orr	r4, r4, r5, lsl #2
   14afc:	ldr	r0, [r7]
   14b00:	bl	13f5c <__assert_fail@plt+0x222c>
   14b04:	cmp	r4, r0
   14b08:	beq	14ab0 <__assert_fail@plt+0x2d80>
   14b0c:	cmp	r8, #0
   14b10:	beq	14c08 <__assert_fail@plt+0x2ed8>
   14b14:	mov	r2, #5
   14b18:	movw	r1, #63292	; 0xf73c
   14b1c:	mov	r0, #0
   14b20:	movt	r1, #2
   14b24:	bl	1191c <dcgettext@plt>
   14b28:	mov	r2, r8
   14b2c:	ldr	r3, [r7]
   14b30:	mov	r1, r0
   14b34:	mov	r0, #0
   14b38:	bl	22c40 <error@@Base>
   14b3c:	b	14ab0 <__assert_fail@plt+0x2d80>
   14b40:	bl	11b8c <__errno_location@plt>
   14b44:	ldr	r3, [r0]
   14b48:	cmp	r3, #4
   14b4c:	bne	14ab0 <__assert_fail@plt+0x2d80>
   14b50:	mov	r0, #3
   14b54:	ldr	r1, [r7]
   14b58:	mov	r2, sp
   14b5c:	bl	11cdc <__xstat64@plt>
   14b60:	cmn	r0, #1
   14b64:	mov	r4, r0
   14b68:	beq	14b40 <__assert_fail@plt+0x2e10>
   14b6c:	cmp	r0, #0
   14b70:	bne	14ab0 <__assert_fail@plt+0x2d80>
   14b74:	ldr	r3, [sp, #16]
   14b78:	and	r3, r3, #61440	; 0xf000
   14b7c:	cmp	r3, #32768	; 0x8000
   14b80:	bne	14ab0 <__assert_fail@plt+0x2d80>
   14b84:	ldr	r2, [sp, #84]	; 0x54
   14b88:	ldr	r0, [r7]
   14b8c:	ldr	r1, [sp, #80]	; 0x50
   14b90:	bl	18dc0 <__assert_fail@plt+0x7090>
   14b94:	ldrd	r2, [r7, #32]
   14b98:	cmp	r1, r3
   14b9c:	cmpeq	r0, r2
   14ba0:	beq	14ab0 <__assert_fail@plt+0x2d80>
   14ba4:	cmp	r8, #0
   14ba8:	beq	14c30 <__assert_fail@plt+0x2f00>
   14bac:	mov	r2, #5
   14bb0:	movw	r1, #63400	; 0xf7a8
   14bb4:	mov	r0, r4
   14bb8:	movt	r1, #2
   14bbc:	bl	1191c <dcgettext@plt>
   14bc0:	mov	r2, r8
   14bc4:	ldr	r3, [r7]
   14bc8:	mov	r1, r0
   14bcc:	mov	r0, r4
   14bd0:	bl	22c40 <error@@Base>
   14bd4:	ldr	r0, [r7]
   14bd8:	bl	1194c <unlink@plt>
   14bdc:	cmp	r0, #0
   14be0:	bge	14ab0 <__assert_fail@plt+0x2d80>
   14be4:	bl	11b8c <__errno_location@plt>
   14be8:	ldr	r3, [r0]
   14bec:	cmp	r3, #2
   14bf0:	beq	14ab0 <__assert_fail@plt+0x2d80>
   14bf4:	ldr	r1, [r7]
   14bf8:	movw	r0, #63452	; 0xf7dc
   14bfc:	movt	r0, #2
   14c00:	bl	22ec8 <error@@Base+0x288>
   14c04:	b	14ab0 <__assert_fail@plt+0x2d80>
   14c08:	mov	r0, r8
   14c0c:	mov	r2, #5
   14c10:	movw	r1, #63348	; 0xf774
   14c14:	movt	r1, #2
   14c18:	bl	1191c <dcgettext@plt>
   14c1c:	ldr	r2, [r7]
   14c20:	mov	r1, r0
   14c24:	mov	r0, r8
   14c28:	bl	22c40 <error@@Base>
   14c2c:	b	14ab0 <__assert_fail@plt+0x2d80>
   14c30:	mov	r0, r8
   14c34:	mov	r2, #5
   14c38:	movw	r1, #63428	; 0xf7c4
   14c3c:	movt	r1, #2
   14c40:	bl	1191c <dcgettext@plt>
   14c44:	ldr	r2, [r7]
   14c48:	mov	r1, r0
   14c4c:	mov	r0, r8
   14c50:	bl	22c40 <error@@Base>
   14c54:	b	14bd4 <__assert_fail@plt+0x2ea4>
   14c58:	bl	11934 <__stack_chk_fail@plt>
   14c5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c60:	add	fp, sp, #32
   14c64:	sub	sp, sp, #84	; 0x54
   14c68:	movw	r1, #26864	; 0x68f0
   14c6c:	movt	r1, #4
   14c70:	mov	r5, r0
   14c74:	str	r1, [fp, #-92]	; 0xffffffa4
   14c78:	ldr	r3, [r1]
   14c7c:	ldr	r0, [r0]
   14c80:	str	r3, [fp, #-40]	; 0xffffffd8
   14c84:	bl	13e84 <__assert_fail@plt+0x2154>
   14c88:	ldr	r6, [r5]
   14c8c:	cmp	r0, #0
   14c90:	movweq	r4, #6032	; 0x1790
   14c94:	movteq	r4, #3
   14c98:	bne	15234 <__assert_fail@plt+0x3504>
   14c9c:	ldr	r8, [r5, #24]
   14ca0:	cmp	r8, #0
   14ca4:	beq	153b0 <__assert_fail@plt+0x3680>
   14ca8:	ldr	r3, [r5, #12]
   14cac:	cmp	r3, #0
   14cb0:	bne	14cc4 <__assert_fail@plt+0x2f94>
   14cb4:	b	14cf0 <__assert_fail@plt+0x2fc0>
   14cb8:	ldr	r3, [r3]
   14cbc:	cmp	r3, #0
   14cc0:	beq	14cf0 <__assert_fail@plt+0x2fc0>
   14cc4:	ldrb	r2, [r3, #17]
   14cc8:	tst	r2, #1
   14ccc:	bne	14cb8 <__assert_fail@plt+0x2f88>
   14cd0:	ldrb	r2, [r3, #17]
   14cd4:	tst	r2, #4
   14cd8:	bne	14cf0 <__assert_fail@plt+0x2fc0>
   14cdc:	ldr	ip, [r3, #4]
   14ce0:	cmp	ip, #0
   14ce4:	ldreq	r3, [r3, #12]
   14ce8:	ldreq	ip, [r3]
   14cec:	b	14cf8 <__assert_fail@plt+0x2fc8>
   14cf0:	movw	ip, #6032	; 0x1790
   14cf4:	movt	ip, #3
   14cf8:	movw	r3, #29548	; 0x736c
   14cfc:	movt	r3, #4
   14d00:	ldr	r2, [r5, #16]
   14d04:	mov	r7, #0
   14d08:	ldr	lr, [r3]
   14d0c:	mov	r1, #1
   14d10:	mov	r3, #6
   14d14:	movw	r0, #876	; 0x36c
   14d18:	movt	r0, #3
   14d1c:	ldr	r9, [lr, #16]
   14d20:	str	r7, [sp]
   14d24:	ldr	lr, [r5, #60]	; 0x3c
   14d28:	cmp	r2, r9
   14d2c:	movne	r2, ip
   14d30:	moveq	r2, r6
   14d34:	ldr	ip, [lr, #4]
   14d38:	str	r7, [sp, #8]
   14d3c:	str	ip, [sp, #4]
   14d40:	bl	2c3b8 <error@@Base+0x9778>
   14d44:	str	r7, [sp]
   14d48:	ldr	ip, [r5, #60]	; 0x3c
   14d4c:	mov	r2, r8
   14d50:	mov	r1, #1
   14d54:	mov	r3, #6
   14d58:	movw	r0, #63476	; 0xf7f4
   14d5c:	movt	r0, #2
   14d60:	ldr	ip, [ip, #4]
   14d64:	str	r7, [sp, #8]
   14d68:	str	ip, [sp, #4]
   14d6c:	bl	2c3b8 <error@@Base+0x9778>
   14d70:	str	r7, [sp]
   14d74:	ldr	ip, [r5, #60]	; 0x3c
   14d78:	mov	r2, r6
   14d7c:	mov	r1, #1
   14d80:	mov	r3, #6
   14d84:	movw	r0, #1976	; 0x7b8
   14d88:	movt	r0, #3
   14d8c:	ldr	ip, [ip, #4]
   14d90:	str	r7, [sp, #8]
   14d94:	str	ip, [sp, #4]
   14d98:	bl	2c3b8 <error@@Base+0x9778>
   14d9c:	str	r7, [sp]
   14da0:	ldr	ip, [r5, #60]	; 0x3c
   14da4:	mov	r2, r4
   14da8:	movw	r0, #19648	; 0x4cc0
   14dac:	mov	r1, #1
   14db0:	movt	r0, #3
   14db4:	mov	r3, #6
   14db8:	ldr	ip, [ip, #4]
   14dbc:	str	r7, [sp, #8]
   14dc0:	str	ip, [sp, #4]
   14dc4:	bl	2c3b8 <error@@Base+0x9778>
   14dc8:	ldr	r8, [r5, #12]
   14dcc:	cmp	r8, r7
   14dd0:	beq	15228 <__assert_fail@plt+0x34f8>
   14dd4:	mov	r6, r8
   14dd8:	mov	r4, r7
   14ddc:	b	14e08 <__assert_fail@plt+0x30d8>
   14de0:	ldr	r0, [r6, #4]
   14de4:	add	r7, r7, #1
   14de8:	cmp	r0, #0
   14dec:	ldreq	r3, [r6, #12]
   14df0:	ldreq	r0, [r3]
   14df4:	bl	11b5c <strlen@plt>
   14df8:	add	r7, r7, r0
   14dfc:	ldr	r6, [r6]
   14e00:	cmp	r6, #0
   14e04:	beq	14e48 <__assert_fail@plt+0x3118>
   14e08:	ldrb	r3, [r6, #17]
   14e0c:	tst	r3, #4
   14e10:	bne	14dfc <__assert_fail@plt+0x30cc>
   14e14:	tst	r3, #1
   14e18:	bne	14de0 <__assert_fail@plt+0x30b0>
   14e1c:	ldr	r3, [r6, #4]
   14e20:	add	r4, r4, #1
   14e24:	cmp	r3, #0
   14e28:	ldreq	r3, [r6, #12]
   14e2c:	movne	r0, r3
   14e30:	ldreq	r0, [r3]
   14e34:	bl	11b5c <strlen@plt>
   14e38:	ldr	r6, [r6]
   14e3c:	cmp	r6, #0
   14e40:	add	r4, r4, r0
   14e44:	bne	14e08 <__assert_fail@plt+0x30d8>
   14e48:	cmp	r7, #0
   14e4c:	beq	1522c <__assert_fail@plt+0x34fc>
   14e50:	movw	r6, #26904	; 0x6918
   14e54:	movt	r6, #4
   14e58:	cmp	r4, #0
   14e5c:	addne	r2, r4, #1
   14e60:	strne	r2, [fp, #-88]	; 0xffffffa8
   14e64:	ldr	r2, [r6]
   14e68:	moveq	r3, #2
   14e6c:	moveq	r4, #1
   14e70:	streq	r3, [fp, #-88]	; 0xffffffa8
   14e74:	cmp	r4, r2
   14e78:	bhi	152d8 <__assert_fail@plt+0x35a8>
   14e7c:	ldr	r4, [r6, #4]
   14e80:	cmp	r8, #0
   14e84:	beq	15398 <__assert_fail@plt+0x3668>
   14e88:	movw	sl, #28168	; 0x6e08
   14e8c:	str	r5, [fp, #-96]	; 0xffffffa0
   14e90:	movt	sl, #4
   14e94:	b	14f00 <__assert_fail@plt+0x31d0>
   14e98:	mov	r1, #40	; 0x28
   14e9c:	bl	11b68 <strchr@plt>
   14ea0:	add	r9, r0, #1
   14ea4:	mov	r0, r9
   14ea8:	bl	11b5c <strlen@plt>
   14eac:	sub	r5, r0, #1
   14eb0:	mov	r1, r9
   14eb4:	mov	r0, r4
   14eb8:	mov	r2, r5
   14ebc:	bl	118c8 <memcpy@plt>
   14ec0:	add	r2, r4, r5
   14ec4:	add	r4, r2, #1
   14ec8:	mov	r1, #32
   14ecc:	strb	r1, [r2]
   14ed0:	ldrb	r2, [r8, #16]
   14ed4:	cmp	r2, #0
   14ed8:	bne	14ef4 <__assert_fail@plt+0x31c4>
   14edc:	ldr	r2, [sl]
   14ee0:	cmp	r2, #0
   14ee4:	ldreq	r2, [fp, #-88]	; 0xffffffa8
   14ee8:	subeq	r9, r2, #1
   14eec:	rsbeq	r9, r5, r9
   14ef0:	streq	r9, [fp, #-88]	; 0xffffffa8
   14ef4:	ldr	r8, [r8]
   14ef8:	cmp	r8, #0
   14efc:	beq	14f3c <__assert_fail@plt+0x320c>
   14f00:	ldrb	r3, [r8, #17]
   14f04:	tst	r3, #5
   14f08:	bne	14ef4 <__assert_fail@plt+0x31c4>
   14f0c:	ldr	r9, [r8, #4]
   14f10:	cmp	r9, #0
   14f14:	ldreq	r3, [r8, #12]
   14f18:	ldreq	r9, [r3]
   14f1c:	mov	r0, r9
   14f20:	bl	13e84 <__assert_fail@plt+0x2154>
   14f24:	cmp	r0, #0
   14f28:	mov	r0, r9
   14f2c:	bne	14e98 <__assert_fail@plt+0x3168>
   14f30:	bl	11b5c <strlen@plt>
   14f34:	mov	r5, r0
   14f38:	b	14eb0 <__assert_fail@plt+0x3180>
   14f3c:	ldr	r2, [r6, #4]
   14f40:	ldr	r5, [fp, #-96]	; 0xffffffa0
   14f44:	cmp	r4, r2
   14f48:	movls	r3, #0
   14f4c:	mvnhi	r3, #0
   14f50:	mov	ip, #0
   14f54:	strb	ip, [r4, r3]
   14f58:	str	ip, [sp]
   14f5c:	mov	r1, #1
   14f60:	ldr	lr, [r5, #60]	; 0x3c
   14f64:	mov	r3, #6
   14f68:	movw	r0, #63480	; 0xf7f8
   14f6c:	movt	r0, #2
   14f70:	movw	r4, #26904	; 0x6918
   14f74:	movt	r4, #4
   14f78:	ldr	lr, [lr, #4]
   14f7c:	str	ip, [sp, #8]
   14f80:	str	lr, [sp, #4]
   14f84:	bl	2c3b8 <error@@Base+0x9778>
   14f88:	ldr	r3, [r6, #8]
   14f8c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14f90:	ldr	r8, [r6, #4]
   14f94:	cmp	r3, r1
   14f98:	bcc	152bc <__assert_fail@plt+0x358c>
   14f9c:	ldr	r4, [r4, #12]
   14fa0:	str	r4, [fp, #-88]	; 0xffffffa8
   14fa4:	ldr	r3, [r6, #16]
   14fa8:	movw	r4, #26904	; 0x6918
   14fac:	movt	r4, #4
   14fb0:	cmp	r7, r3
   14fb4:	bhi	152f8 <__assert_fail@plt+0x35c8>
   14fb8:	ldr	r7, [r4, #20]
   14fbc:	movw	r3, #19032	; 0x4a58
   14fc0:	movw	r2, #18880	; 0x49c0
   14fc4:	movt	r3, #1
   14fc8:	sub	r0, fp, #84	; 0x54
   14fcc:	str	r3, [sp]
   14fd0:	movt	r2, #1
   14fd4:	movw	r3, #18956	; 0x4a0c
   14fd8:	mov	r1, #500	; 0x1f4
   14fdc:	movt	r3, #1
   14fe0:	bl	2e838 <error@@Base+0xbbf8>
   14fe4:	ldr	r9, [r5, #12]
   14fe8:	cmp	r9, #0
   14fec:	beq	153a4 <__assert_fail@plt+0x3674>
   14ff0:	movw	sl, #26848	; 0x68e0
   14ff4:	movt	sl, #4
   14ff8:	b	15008 <__assert_fail@plt+0x32d8>
   14ffc:	ldr	r9, [r9]
   15000:	cmp	r9, #0
   15004:	beq	15070 <__assert_fail@plt+0x3340>
   15008:	ldrb	r4, [r9, #17]
   1500c:	ubfx	r4, r4, #2, #1
   15010:	cmp	r4, #0
   15014:	bne	14ffc <__assert_fail@plt+0x32cc>
   15018:	sub	r0, fp, #84	; 0x54
   1501c:	mov	r1, r9
   15020:	bl	2e8ec <error@@Base+0xbcac>
   15024:	ldr	r3, [r0]
   15028:	cmp	r3, #0
   1502c:	beq	15214 <__assert_fail@plt+0x34e4>
   15030:	ldr	r2, [sl]
   15034:	cmp	r3, r2
   15038:	beq	15214 <__assert_fail@plt+0x34e4>
   1503c:	ldrb	r2, [r3, #17]
   15040:	ldrb	r0, [r9, #17]
   15044:	and	r1, r2, #1
   15048:	and	r0, r0, #1
   1504c:	cmp	r0, r1
   15050:	bfine	r2, r4, #0, #1
   15054:	strbne	r2, [r3, #17]
   15058:	ldrbne	r3, [r9, #17]
   1505c:	bfine	r3, r4, #0, #1
   15060:	strbne	r3, [r9, #17]
   15064:	ldr	r9, [r9]
   15068:	cmp	r9, #0
   1506c:	bne	15008 <__assert_fail@plt+0x32d8>
   15070:	ldr	r4, [r5, #12]
   15074:	cmp	r4, #0
   15078:	beq	153a4 <__assert_fail@plt+0x3674>
   1507c:	movw	sl, #28168	; 0x6e08
   15080:	mov	r9, r8
   15084:	movt	sl, #4
   15088:	str	sl, [fp, #-96]	; 0xffffffa0
   1508c:	b	1509c <__assert_fail@plt+0x336c>
   15090:	ldr	r4, [r4]
   15094:	cmp	r4, #0
   15098:	beq	15138 <__assert_fail@plt+0x3408>
   1509c:	ldrb	r3, [r4, #17]
   150a0:	tst	r3, #4
   150a4:	bne	15090 <__assert_fail@plt+0x3360>
   150a8:	sub	r0, fp, #84	; 0x54
   150ac:	mov	r1, r4
   150b0:	bl	2e9d4 <error@@Base+0xbd94>
   150b4:	cmp	r4, r0
   150b8:	bne	15090 <__assert_fail@plt+0x3360>
   150bc:	ldr	sl, [r4, #4]
   150c0:	cmp	sl, #0
   150c4:	ldreq	r3, [r4, #12]
   150c8:	ldreq	sl, [r3]
   150cc:	mov	r0, sl
   150d0:	bl	13e84 <__assert_fail@plt+0x2154>
   150d4:	cmp	r0, #0
   150d8:	mov	r0, sl
   150dc:	beq	1538c <__assert_fail@plt+0x365c>
   150e0:	mov	r1, #40	; 0x28
   150e4:	bl	11b68 <strchr@plt>
   150e8:	add	sl, r0, #1
   150ec:	mov	r0, sl
   150f0:	bl	11b5c <strlen@plt>
   150f4:	sub	ip, r0, #1
   150f8:	ldrb	r2, [r4, #17]
   150fc:	tst	r2, #1
   15100:	beq	15314 <__assert_fail@plt+0x35e4>
   15104:	mov	r2, ip
   15108:	mov	r0, r7
   1510c:	mov	r1, sl
   15110:	str	ip, [fp, #-100]	; 0xffffff9c
   15114:	bl	118c8 <memcpy@plt>
   15118:	ldr	ip, [fp, #-100]	; 0xffffff9c
   1511c:	mov	r2, #32
   15120:	add	ip, r7, ip
   15124:	add	r7, ip, #1
   15128:	strb	r2, [ip]
   1512c:	ldr	r4, [r4]
   15130:	cmp	r4, #0
   15134:	bne	1509c <__assert_fail@plt+0x336c>
   15138:	cmp	r9, r8
   1513c:	movls	sl, #0
   15140:	mvnhi	sl, #0
   15144:	sub	r0, fp, #84	; 0x54
   15148:	mov	r1, #0
   1514c:	bl	2ecec <error@@Base+0xc0ac>
   15150:	mov	r4, #0
   15154:	strb	r4, [r9, sl]
   15158:	mov	r2, r8
   1515c:	str	r4, [sp]
   15160:	mov	r1, #1
   15164:	ldr	ip, [r5, #60]	; 0x3c
   15168:	mov	r3, #6
   1516c:	movw	r0, #656	; 0x290
   15170:	movt	r0, #3
   15174:	ldr	ip, [ip, #4]
   15178:	str	r4, [sp, #8]
   1517c:	str	ip, [sp, #4]
   15180:	bl	2c3b8 <error@@Base+0x9778>
   15184:	ldr	r2, [r6, #12]
   15188:	ldr	ip, [fp, #-88]	; 0xffffffa8
   1518c:	mov	r1, #1
   15190:	mov	r3, #6
   15194:	movw	r0, #63484	; 0xf7fc
   15198:	cmp	r2, ip
   1519c:	subcc	ip, ip, #1
   151a0:	movt	r0, #2
   151a4:	strb	r4, [ip]
   151a8:	str	r4, [sp]
   151ac:	ldr	ip, [r5, #60]	; 0x3c
   151b0:	ldr	ip, [ip, #4]
   151b4:	str	r4, [sp, #8]
   151b8:	str	ip, [sp, #4]
   151bc:	bl	2c3b8 <error@@Base+0x9778>
   151c0:	ldr	r2, [r6, #20]
   151c4:	mov	r1, #1
   151c8:	mov	r3, #6
   151cc:	cmp	r2, r7
   151d0:	subcc	r7, r7, #1
   151d4:	movw	r0, #63488	; 0xf800
   151d8:	movt	r0, #2
   151dc:	strb	r4, [r7]
   151e0:	str	r4, [sp]
   151e4:	ldr	ip, [r5, #60]	; 0x3c
   151e8:	ldr	ip, [ip, #4]
   151ec:	str	r4, [sp, #8]
   151f0:	str	ip, [sp, #4]
   151f4:	bl	2c3b8 <error@@Base+0x9778>
   151f8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   151fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15200:	ldr	r3, [r1]
   15204:	cmp	r2, r3
   15208:	bne	1547c <__assert_fail@plt+0x374c>
   1520c:	sub	sp, fp, #32
   15210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15214:	mov	r2, r0
   15218:	mov	r1, r9
   1521c:	sub	r0, fp, #84	; 0x54
   15220:	bl	2ea00 <error@@Base+0xbdc0>
   15224:	b	14ffc <__assert_fail@plt+0x32cc>
   15228:	mov	r4, r8
   1522c:	mov	r7, #1
   15230:	b	14e50 <__assert_fail@plt+0x3120>
   15234:	mov	r1, #40	; 0x28
   15238:	mov	r0, r6
   1523c:	bl	11b68 <strchr@plt>
   15240:	mov	r1, r6
   15244:	mov	r7, #0
   15248:	rsb	r2, r6, r0
   1524c:	add	r8, r0, #1
   15250:	add	r3, r2, #15
   15254:	mov	r4, r0
   15258:	bic	r3, r3, #7
   1525c:	sub	sp, sp, r3
   15260:	add	r9, sp, #23
   15264:	lsr	r9, r9, #3
   15268:	lsl	r6, r9, #3
   1526c:	mov	r0, r6
   15270:	bl	118c8 <memcpy@plt>
   15274:	ldr	r3, [r5]
   15278:	mov	r0, r8
   1527c:	rsb	r4, r3, r4
   15280:	strb	r7, [r4, r9, lsl #3]
   15284:	bl	11b5c <strlen@plt>
   15288:	mov	r1, r8
   1528c:	add	r3, r0, #14
   15290:	sub	r9, r0, #1
   15294:	bic	r3, r3, #7
   15298:	sub	sp, sp, r3
   1529c:	mov	r2, r9
   152a0:	add	r8, sp, #23
   152a4:	lsr	r8, r8, #3
   152a8:	lsl	r4, r8, #3
   152ac:	mov	r0, r4
   152b0:	bl	118c8 <memcpy@plt>
   152b4:	strb	r7, [r9, r8, lsl #3]
   152b8:	b	14c9c <__assert_fail@plt+0x2f6c>
   152bc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   152c0:	ldr	r0, [r4, #12]
   152c4:	str	r1, [r4, #8]
   152c8:	bl	22fb0 <error@@Base+0x370>
   152cc:	str	r0, [fp, #-88]	; 0xffffffa8
   152d0:	str	r0, [r4, #12]
   152d4:	b	14fa4 <__assert_fail@plt+0x3274>
   152d8:	mov	r1, r4
   152dc:	ldr	r0, [r6, #4]
   152e0:	str	r4, [r6]
   152e4:	bl	22fb0 <error@@Base+0x370>
   152e8:	ldr	r8, [r5, #12]
   152ec:	mov	r4, r0
   152f0:	str	r0, [r6, #4]
   152f4:	b	14e80 <__assert_fail@plt+0x3150>
   152f8:	mov	r1, r7
   152fc:	ldr	r0, [r4, #20]
   15300:	str	r7, [r4, #16]
   15304:	bl	22fb0 <error@@Base+0x370>
   15308:	mov	r7, r0
   1530c:	str	r0, [r4, #20]
   15310:	b	14fbc <__assert_fail@plt+0x328c>
   15314:	mov	r2, ip
   15318:	mov	r0, r9
   1531c:	mov	r1, sl
   15320:	str	ip, [fp, #-100]	; 0xffffff9c
   15324:	bl	118c8 <memcpy@plt>
   15328:	ldr	ip, [fp, #-100]	; 0xffffff9c
   1532c:	mov	r3, #32
   15330:	add	r2, r9, ip
   15334:	add	r9, r2, #1
   15338:	strb	r3, [r2]
   1533c:	ldrb	r2, [r4, #16]
   15340:	cmp	r2, #0
   15344:	bne	15358 <__assert_fail@plt+0x3628>
   15348:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1534c:	ldr	r2, [r3]
   15350:	cmp	r2, #0
   15354:	beq	15090 <__assert_fail@plt+0x3360>
   15358:	mov	r2, ip
   1535c:	mov	r1, sl
   15360:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15364:	str	ip, [fp, #-100]	; 0xffffff9c
   15368:	bl	118c8 <memcpy@plt>
   1536c:	ldr	ip, [fp, #-100]	; 0xffffff9c
   15370:	mov	r3, #32
   15374:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15378:	add	ip, r1, ip
   1537c:	add	r2, ip, #1
   15380:	str	r2, [fp, #-88]	; 0xffffffa8
   15384:	strb	r3, [ip]
   15388:	b	15090 <__assert_fail@plt+0x3360>
   1538c:	bl	11b5c <strlen@plt>
   15390:	mov	ip, r0
   15394:	b	150f8 <__assert_fail@plt+0x33c8>
   15398:	mov	r3, r8
   1539c:	mov	r2, r4
   153a0:	b	14f50 <__assert_fail@plt+0x3220>
   153a4:	mov	sl, r9
   153a8:	mov	r9, r8
   153ac:	b	15144 <__assert_fail@plt+0x3414>
   153b0:	ldr	r0, [r5]
   153b4:	bl	13e84 <__assert_fail@plt+0x2154>
   153b8:	cmp	r0, #0
   153bc:	bne	15444 <__assert_fail@plt+0x3714>
   153c0:	ldr	r9, [r5]
   153c4:	mov	r0, r9
   153c8:	bl	11b5c <strlen@plt>
   153cc:	mov	r8, r0
   153d0:	movw	r0, #63464	; 0xf7e8
   153d4:	movt	r0, #2
   153d8:	bl	2b9c0 <error@@Base+0x8d80>
   153dc:	bl	17bc4 <__assert_fail@plt+0x5e94>
   153e0:	ldr	r7, [r0, #12]
   153e4:	cmp	r7, #0
   153e8:	beq	15434 <__assert_fail@plt+0x3704>
   153ec:	ldr	sl, [r7, #4]
   153f0:	cmp	sl, #0
   153f4:	ldreq	r3, [r7, #12]
   153f8:	ldreq	sl, [r3]
   153fc:	mov	r0, sl
   15400:	bl	11b5c <strlen@plt>
   15404:	cmp	r8, r0
   15408:	mov	r2, r0
   1540c:	bls	15428 <__assert_fail@plt+0x36f8>
   15410:	mov	r0, sl
   15414:	rsb	sl, r2, r8
   15418:	add	r1, r9, sl
   1541c:	bl	11cf4 <strncmp@plt>
   15420:	cmp	r0, #0
   15424:	beq	15464 <__assert_fail@plt+0x3734>
   15428:	ldr	r7, [r7]
   1542c:	cmp	r7, #0
   15430:	bne	153ec <__assert_fail@plt+0x36bc>
   15434:	movw	r8, #6032	; 0x1790
   15438:	movt	r8, #3
   1543c:	str	r8, [r5, #24]
   15440:	b	14ca8 <__assert_fail@plt+0x2f78>
   15444:	mov	r1, #40	; 0x28
   15448:	ldr	r0, [r5]
   1544c:	bl	11b68 <strchr@plt>
   15450:	add	r9, r0, #1
   15454:	mov	r0, r9
   15458:	bl	11b5c <strlen@plt>
   1545c:	sub	r8, r0, #1
   15460:	b	153d0 <__assert_fail@plt+0x36a0>
   15464:	mov	r0, r9
   15468:	mov	r1, sl
   1546c:	bl	2b9dc <error@@Base+0x8d9c>
   15470:	mov	r8, r0
   15474:	str	r0, [r5, #24]
   15478:	b	14ca8 <__assert_fail@plt+0x2f78>
   1547c:	bl	11934 <__stack_chk_fail@plt>
   15480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15484:	subs	r4, r0, #0
   15488:	sub	sp, sp, #12
   1548c:	beq	1549c <__assert_fail@plt+0x376c>
   15490:	ldr	r6, [r4, #16]
   15494:	cmp	r6, #0
   15498:	beq	154a4 <__assert_fail@plt+0x3774>
   1549c:	add	sp, sp, #12
   154a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154a4:	movw	r3, #29552	; 0x7370
   154a8:	movt	r3, #4
   154ac:	ldr	r5, [r3]
   154b0:	cmp	r5, #0
   154b4:	bne	155dc <__assert_fail@plt+0x38ac>
   154b8:	mov	r0, #20
   154bc:	mov	r7, #5
   154c0:	bl	22f44 <error@@Base+0x304>
   154c4:	ldr	r6, [r4, #8]
   154c8:	ldrb	r3, [r6]
   154cc:	cmp	r3, #0
   154d0:	mov	sl, r0
   154d4:	beq	15598 <__assert_fail@plt+0x3868>
   154d8:	mov	r0, r6
   154dc:	mov	r1, #10
   154e0:	bl	11b68 <strchr@plt>
   154e4:	subs	r8, r0, #0
   154e8:	beq	15554 <__assert_fail@plt+0x3824>
   154ec:	cmp	r6, r8
   154f0:	bcs	15560 <__assert_fail@plt+0x3830>
   154f4:	ldrb	r3, [r8, #-1]
   154f8:	cmp	r3, #92	; 0x5c
   154fc:	bne	15560 <__assert_fail@plt+0x3830>
   15500:	sub	r3, r8, #2
   15504:	cmp	r6, r3
   15508:	bhi	15540 <__assert_fail@plt+0x3810>
   1550c:	ldrb	r2, [r8, #-2]
   15510:	cmp	r2, #92	; 0x5c
   15514:	bne	15540 <__assert_fail@plt+0x3810>
   15518:	mov	r2, #1
   1551c:	b	1552c <__assert_fail@plt+0x37fc>
   15520:	ldrb	r1, [r3, #-1]!
   15524:	cmp	r1, #92	; 0x5c
   15528:	bne	15538 <__assert_fail@plt+0x3808>
   1552c:	cmp	r3, r6
   15530:	eor	r2, r2, #1
   15534:	bne	15520 <__assert_fail@plt+0x37f0>
   15538:	cmp	r2, #0
   1553c:	beq	15560 <__assert_fail@plt+0x3830>
   15540:	add	r0, r8, #1
   15544:	mov	r1, #10
   15548:	bl	11b68 <strchr@plt>
   1554c:	subs	r8, r0, #0
   15550:	bne	154ec <__assert_fail@plt+0x37bc>
   15554:	mov	r0, r6
   15558:	bl	11b5c <strlen@plt>
   1555c:	add	r8, r6, r0
   15560:	cmp	r5, r7
   15564:	beq	1572c <__assert_fail@plt+0x39fc>
   15568:	mov	r0, r6
   1556c:	rsb	r1, r6, r8
   15570:	bl	23158 <error@@Base+0x518>
   15574:	str	r0, [sl, r5, lsl #2]
   15578:	add	r5, r5, #1
   1557c:	ldrb	r3, [r8]
   15580:	cmp	r3, #0
   15584:	addne	r6, r8, #1
   15588:	ldrbne	r3, [r8, #1]
   1558c:	moveq	r6, r8
   15590:	cmp	r3, #0
   15594:	bne	154d8 <__assert_fail@plt+0x37a8>
   15598:	cmp	r7, r5
   1559c:	beq	155b0 <__assert_fail@plt+0x3880>
   155a0:	mov	r0, sl
   155a4:	lsl	r1, r5, #2
   155a8:	bl	22fb0 <error@@Base+0x370>
   155ac:	mov	sl, r0
   155b0:	mov	r3, #0
   155b4:	str	r5, [r4, #12]
   155b8:	str	sl, [r4, #16]
   155bc:	mov	r0, r5
   155c0:	str	r3, [r4, #24]
   155c4:	bl	22f44 <error@@Base+0x304>
   155c8:	cmp	r5, #0
   155cc:	str	r0, [r4, #20]
   155d0:	movne	fp, r0
   155d4:	bne	1563c <__assert_fail@plt+0x390c>
   155d8:	b	1549c <__assert_fail@plt+0x376c>
   155dc:	ldr	r0, [r4, #8]
   155e0:	bl	11b5c <strlen@plt>
   155e4:	mov	r5, r0
   155e8:	mov	r0, #4
   155ec:	bl	22f44 <error@@Base+0x304>
   155f0:	mov	sl, r0
   155f4:	ldr	r0, [r4, #8]
   155f8:	bl	2312c <error@@Base+0x4ec>
   155fc:	cmp	r5, #0
   15600:	str	r0, [sl]
   15604:	ble	15618 <__assert_fail@plt+0x38e8>
   15608:	sub	r5, r5, #1
   1560c:	ldrb	r2, [r0, r5]
   15610:	cmp	r2, #10
   15614:	strbeq	r6, [r0, r5]
   15618:	mov	r5, #1
   1561c:	mov	r3, #0
   15620:	str	sl, [r4, #16]
   15624:	mov	r0, r5
   15628:	str	r5, [r4, #12]
   1562c:	str	r3, [r4, #24]
   15630:	bl	22f44 <error@@Base+0x304>
   15634:	mov	fp, r0
   15638:	str	r0, [r4, #20]
   1563c:	bl	11b20 <__ctype_b_loc@plt>
   15640:	sub	sl, sl, #4
   15644:	mov	r9, #0
   15648:	str	r0, [sp, #4]
   1564c:	ldr	r3, [sp, #4]
   15650:	mov	r6, #0
   15654:	ldr	r2, [sl, #4]!
   15658:	ldr	r0, [r3]
   1565c:	mov	r7, r2
   15660:	ldrb	r3, [r2], #1
   15664:	lsl	r1, r3, #1
   15668:	ldrh	r1, [r0, r1]
   1566c:	tst	r1, #1
   15670:	bne	15694 <__assert_fail@plt+0x3964>
   15674:	cmp	r3, #45	; 0x2d
   15678:	beq	156b8 <__assert_fail@plt+0x3988>
   1567c:	cmp	r3, #64	; 0x40
   15680:	beq	156b0 <__assert_fail@plt+0x3980>
   15684:	cmp	r3, #43	; 0x2b
   15688:	bne	156c0 <__assert_fail@plt+0x3990>
   1568c:	orr	r6, r6, #1
   15690:	b	1565c <__assert_fail@plt+0x392c>
   15694:	cmp	r3, #45	; 0x2d
   15698:	beq	156b8 <__assert_fail@plt+0x3988>
   1569c:	cmp	r3, #64	; 0x40
   156a0:	beq	156b0 <__assert_fail@plt+0x3980>
   156a4:	cmp	r3, #43	; 0x2b
   156a8:	bne	1565c <__assert_fail@plt+0x392c>
   156ac:	b	1568c <__assert_fail@plt+0x395c>
   156b0:	orr	r6, r6, #2
   156b4:	b	1565c <__assert_fail@plt+0x392c>
   156b8:	orr	r6, r6, #4
   156bc:	b	1565c <__assert_fail@plt+0x392c>
   156c0:	ands	r8, r6, #1
   156c4:	movne	r8, #1
   156c8:	bne	156ec <__assert_fail@plt+0x39bc>
   156cc:	movw	r1, #63492	; 0xf804
   156d0:	mov	r0, r7
   156d4:	movt	r1, #2
   156d8:	bl	11808 <strstr@plt>
   156dc:	cmp	r0, #0
   156e0:	beq	15710 <__assert_fail@plt+0x39e0>
   156e4:	orr	r6, r6, #1
   156e8:	mov	r8, #1
   156ec:	strb	r6, [fp, r9]
   156f0:	add	r9, r9, #1
   156f4:	ldr	r2, [r4, #24]
   156f8:	cmp	r5, r9
   156fc:	orr	r3, r2, r8
   15700:	str	r3, [r4, #24]
   15704:	bls	1549c <__assert_fail@plt+0x376c>
   15708:	ldr	fp, [r4, #20]
   1570c:	b	1564c <__assert_fail@plt+0x391c>
   15710:	mov	r0, r7
   15714:	movw	r1, #63500	; 0xf80c
   15718:	movt	r1, #2
   1571c:	bl	11808 <strstr@plt>
   15720:	cmp	r0, #0
   15724:	bne	156e4 <__assert_fail@plt+0x39b4>
   15728:	b	156ec <__assert_fail@plt+0x39bc>
   1572c:	add	r7, r5, #2
   15730:	mov	r0, sl
   15734:	lsl	r1, r7, #2
   15738:	bl	22fb0 <error@@Base+0x370>
   1573c:	mov	sl, r0
   15740:	b	15568 <__assert_fail@plt+0x3838>
   15744:	ldr	r3, [r0, #16]
   15748:	push	{r4, r5, r6, lr}
   1574c:	mov	r5, r0
   15750:	ldr	r6, [r3, #8]
   15754:	ldrb	r4, [r6]
   15758:	cmp	r4, #0
   1575c:	beq	157a0 <__assert_fail@plt+0x3a70>
   15760:	bl	11b20 <__ctype_b_loc@plt>
   15764:	mov	r3, r6
   15768:	ldr	ip, [r0]
   1576c:	lsl	r2, r4, #1
   15770:	ldrh	r1, [ip, r2]
   15774:	and	r1, r1, #8192	; 0x2000
   15778:	uxth	r1, r1
   1577c:	cmp	r1, #0
   15780:	bne	15794 <__assert_fail@plt+0x3a64>
   15784:	cmp	r4, #45	; 0x2d
   15788:	beq	15794 <__assert_fail@plt+0x3a64>
   1578c:	cmp	r4, #64	; 0x40
   15790:	bne	157c0 <__assert_fail@plt+0x3a90>
   15794:	ldrb	r4, [r3, #1]!
   15798:	cmp	r4, #0
   1579c:	bne	1576c <__assert_fail@plt+0x3a3c>
   157a0:	mov	r0, r5
   157a4:	mov	r1, #2
   157a8:	bl	18c28 <__assert_fail@plt+0x6ef8>
   157ac:	mov	r3, #0
   157b0:	mov	r0, r5
   157b4:	strh	r3, [r5, #76]	; 0x4c
   157b8:	pop	{r4, r5, r6, lr}
   157bc:	b	28888 <error@@Base+0x5c48>
   157c0:	mov	r0, r5
   157c4:	bl	2d750 <error@@Base+0xab10>
   157c8:	mov	r0, r5
   157cc:	bl	14c5c <__assert_fail@plt+0x2f2c>
   157d0:	mov	r0, r5
   157d4:	pop	{r4, r5, r6, lr}
   157d8:	b	209dc <__assert_fail@plt+0xecac>
   157dc:	ldrb	r1, [r0, #32]
   157e0:	push	{r3, r4, r5, lr}
   157e4:	ubfx	r1, r1, #3, #1
   157e8:	cmp	r1, #0
   157ec:	mov	r5, r0
   157f0:	popne	{r3, r4, r5, pc}
   157f4:	ldr	r0, [r0, #4]
   157f8:	bl	14a84 <__assert_fail@plt+0x2d54>
   157fc:	ldr	r3, [r5, #4]
   15800:	ldr	r4, [r3, #28]
   15804:	cmp	r4, #0
   15808:	bne	15814 <__assert_fail@plt+0x3ae4>
   1580c:	b	1582c <__assert_fail@plt+0x3afc>
   15810:	ldr	r3, [r5, #4]
   15814:	ldr	r0, [r4, #12]
   15818:	ldr	r1, [r3]
   1581c:	bl	14a84 <__assert_fail@plt+0x2d54>
   15820:	ldr	r4, [r4]
   15824:	cmp	r4, #0
   15828:	bne	15810 <__assert_fail@plt+0x3ae0>
   1582c:	ldrb	r3, [r5, #32]
   15830:	orr	r3, r3, #8
   15834:	strb	r3, [r5, #32]
   15838:	pop	{r3, r4, r5, pc}
   1583c:	movw	r3, #26904	; 0x6918
   15840:	movt	r3, #4
   15844:	push	{r4, r5, r6, lr}
   15848:	mov	r1, #0
   1584c:	mov	r2, #1
   15850:	mov	r5, r0
   15854:	str	r2, [r3, #24]
   15858:	bl	118e0 <signal@plt>
   1585c:	cmp	r5, #15
   15860:	beq	15964 <__assert_fail@plt+0x3c34>
   15864:	sub	r3, r5, #1
   15868:	cmp	r3, #2
   1586c:	bhi	15934 <__assert_fail@plt+0x3c04>
   15870:	movw	r6, #27180	; 0x6a2c
   15874:	movt	r6, #4
   15878:	ldr	r4, [r6]
   1587c:	cmp	r4, #0
   15880:	bne	15894 <__assert_fail@plt+0x3b64>
   15884:	b	158d8 <__assert_fail@plt+0x3ba8>
   15888:	ldr	r4, [r4]
   1588c:	cmp	r4, #0
   15890:	beq	158b8 <__assert_fail@plt+0x3b88>
   15894:	ldrb	r3, [r4, #32]
   15898:	tst	r3, #1
   1589c:	beq	15888 <__assert_fail@plt+0x3b58>
   158a0:	ldr	r0, [r4, #24]
   158a4:	mov	r1, r5
   158a8:	bl	2aae4 <error@@Base+0x7ea4>
   158ac:	ldr	r4, [r4]
   158b0:	cmp	r4, #0
   158b4:	bne	15894 <__assert_fail@plt+0x3b64>
   158b8:	ldr	r4, [r6]
   158bc:	cmp	r4, #0
   158c0:	beq	158d8 <__assert_fail@plt+0x3ba8>
   158c4:	mov	r0, r4
   158c8:	bl	157dc <__assert_fail@plt+0x3aac>
   158cc:	ldr	r4, [r4]
   158d0:	cmp	r4, #0
   158d4:	bne	158c4 <__assert_fail@plt+0x3b94>
   158d8:	movw	r4, #27288	; 0x6a98
   158dc:	movt	r4, #4
   158e0:	ldr	r3, [r4]
   158e4:	cmp	r3, #0
   158e8:	beq	15904 <__assert_fail@plt+0x3bd4>
   158ec:	mov	r0, #1
   158f0:	mov	r1, #0
   158f4:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   158f8:	ldr	r3, [r4]
   158fc:	cmp	r3, #0
   15900:	bne	158ec <__assert_fail@plt+0x3bbc>
   15904:	mov	r0, #1
   15908:	bl	180ec <__assert_fail@plt+0x63bc>
   1590c:	cmp	r5, #3
   15910:	beq	159a4 <__assert_fail@plt+0x3c74>
   15914:	bl	11b38 <getpid@plt>
   15918:	mov	r1, r5
   1591c:	bl	11b14 <kill@plt>
   15920:	cmp	r0, #0
   15924:	popge	{r4, r5, r6, pc}
   15928:	movw	r0, #63508	; 0xf814
   1592c:	movt	r0, #2
   15930:	bl	22f2c <error@@Base+0x2ec>
   15934:	movw	r4, #27288	; 0x6a98
   15938:	movt	r4, #4
   1593c:	ldr	r3, [r4]
   15940:	cmp	r3, #0
   15944:	beq	15904 <__assert_fail@plt+0x3bd4>
   15948:	mov	r0, #1
   1594c:	mov	r1, r0
   15950:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   15954:	ldr	r3, [r4]
   15958:	cmp	r3, #0
   1595c:	bne	15948 <__assert_fail@plt+0x3c18>
   15960:	b	15904 <__assert_fail@plt+0x3bd4>
   15964:	movw	r6, #27180	; 0x6a2c
   15968:	movt	r6, #4
   1596c:	ldr	r4, [r6]
   15970:	cmp	r4, #0
   15974:	bne	15988 <__assert_fail@plt+0x3c58>
   15978:	b	1587c <__assert_fail@plt+0x3b4c>
   1597c:	ldr	r4, [r4]
   15980:	cmp	r4, #0
   15984:	beq	15878 <__assert_fail@plt+0x3b48>
   15988:	ldrb	r3, [r4, #32]
   1598c:	tst	r3, #1
   15990:	bne	1597c <__assert_fail@plt+0x3c4c>
   15994:	ldr	r0, [r4, #24]
   15998:	mov	r1, #15
   1599c:	bl	11b14 <kill@plt>
   159a0:	b	1597c <__assert_fail@plt+0x3c4c>
   159a4:	mov	r0, #1
   159a8:	bl	11b44 <exit@plt>
   159ac:	push	{r4, r5, r6, lr}
   159b0:	mov	r2, #5
   159b4:	sub	sp, sp, #8
   159b8:	mov	r4, r0
   159bc:	movw	r1, #63516	; 0xf81c
   159c0:	mov	r0, #0
   159c4:	movt	r1, #2
   159c8:	bl	1191c <dcgettext@plt>
   159cc:	movw	r3, #26888	; 0x6908
   159d0:	movt	r3, #4
   159d4:	ldr	r1, [r3]
   159d8:	bl	11ce8 <fputs@plt>
   159dc:	ldr	r0, [r4]
   159e0:	cmp	r0, #0
   159e4:	beq	15a90 <__assert_fail@plt+0x3d60>
   159e8:	mov	r2, #5
   159ec:	movw	r1, #63556	; 0xf844
   159f0:	mov	r0, #0
   159f4:	movt	r1, #2
   159f8:	bl	1191c <dcgettext@plt>
   159fc:	ldm	r4, {r2, r3}
   15a00:	mov	r1, r0
   15a04:	mov	r0, #1
   15a08:	bl	11be0 <__printf_chk@plt>
   15a0c:	ldr	r5, [r4, #8]
   15a10:	ldrb	r3, [r5]
   15a14:	cmp	r3, #0
   15a18:	beq	15a88 <__assert_fail@plt+0x3d58>
   15a1c:	movw	r6, #26740	; 0x6874
   15a20:	movt	r6, #4
   15a24:	b	15a64 <__assert_fail@plt+0x3d34>
   15a28:	rsb	r3, r5, r4
   15a2c:	ldrb	r2, [r6]
   15a30:	str	r5, [sp]
   15a34:	movw	r1, #63584	; 0xf860
   15a38:	mov	r0, #1
   15a3c:	movt	r1, #2
   15a40:	bl	11be0 <__printf_chk@plt>
   15a44:	ldrb	r3, [r4]
   15a48:	subs	r2, r3, #10
   15a4c:	rsbs	r3, r2, #0
   15a50:	adcs	r3, r3, r2
   15a54:	add	r5, r4, r3
   15a58:	ldrb	r3, [r4, r3]
   15a5c:	cmp	r3, #0
   15a60:	beq	15a88 <__assert_fail@plt+0x3d58>
   15a64:	mov	r0, r5
   15a68:	mov	r1, #10
   15a6c:	bl	11b68 <strchr@plt>
   15a70:	subs	r4, r0, #0
   15a74:	bne	15a28 <__assert_fail@plt+0x3cf8>
   15a78:	mov	r0, r5
   15a7c:	bl	11b5c <strlen@plt>
   15a80:	add	r4, r5, r0
   15a84:	b	15a28 <__assert_fail@plt+0x3cf8>
   15a88:	add	sp, sp, #8
   15a8c:	pop	{r4, r5, r6, pc}
   15a90:	mov	r2, #5
   15a94:	movw	r1, #63540	; 0xf834
   15a98:	movt	r1, #2
   15a9c:	bl	1191c <dcgettext@plt>
   15aa0:	bl	11a9c <puts@plt>
   15aa4:	b	15a0c <__assert_fail@plt+0x3cdc>
   15aa8:	push	{r4, r5, r6, r7, lr}
   15aac:	movw	r5, #26864	; 0x68f0
   15ab0:	movt	r5, #4
   15ab4:	sub	sp, sp, #28
   15ab8:	movw	r0, #63464	; 0xf7e8
   15abc:	movt	r0, #2
   15ac0:	ldr	r3, [r5]
   15ac4:	str	r3, [sp, #20]
   15ac8:	bl	2b9c0 <error@@Base+0x8d80>
   15acc:	bl	17bc4 <__assert_fail@plt+0x5e94>
   15ad0:	movw	r2, #28184	; 0x6e18
   15ad4:	movt	r2, #4
   15ad8:	movw	r3, #29700	; 0x7404
   15adc:	movt	r3, #4
   15ae0:	ldr	r4, [r2]
   15ae4:	cmp	r4, #0
   15ae8:	mov	r7, r0
   15aec:	str	r0, [r3]
   15af0:	bne	15b70 <__assert_fail@plt+0x3e40>
   15af4:	add	r0, sp, #24
   15af8:	mov	r2, r4
   15afc:	mov	r3, r4
   15b00:	str	r4, [sp]
   15b04:	mov	r1, #20
   15b08:	movw	r6, #25052	; 0x61dc
   15b0c:	movt	r6, #4
   15b10:	str	r6, [r0, #-8]!
   15b14:	bl	256a0 <error@@Base+0x2a60>
   15b18:	mov	r1, r4
   15b1c:	bl	18480 <__assert_fail@plt+0x6750>
   15b20:	movw	ip, #26824	; 0x68c8
   15b24:	movt	ip, #4
   15b28:	mov	r2, r6
   15b2c:	mov	r3, r4
   15b30:	mov	r1, #8
   15b34:	ldr	ip, [ip]
   15b38:	str	r0, [r7, #12]
   15b3c:	movw	r0, #63592	; 0xf868
   15b40:	str	r4, [sp]
   15b44:	movt	r0, #2
   15b48:	ldr	ip, [ip, #4]
   15b4c:	str	r4, [sp, #8]
   15b50:	str	ip, [sp, #4]
   15b54:	bl	2c3b8 <error@@Base+0x9778>
   15b58:	ldr	r2, [sp, #20]
   15b5c:	ldr	r3, [r5]
   15b60:	cmp	r2, r3
   15b64:	bne	15bb0 <__assert_fail@plt+0x3e80>
   15b68:	add	sp, sp, #28
   15b6c:	pop	{r4, r5, r6, r7, pc}
   15b70:	movw	r3, #26824	; 0x68c8
   15b74:	movt	r3, #4
   15b78:	mov	ip, #0
   15b7c:	str	ip, [sp]
   15b80:	ldr	r1, [r3]
   15b84:	movw	r0, #63592	; 0xf868
   15b88:	mov	r3, ip
   15b8c:	movw	r2, #6032	; 0x1790
   15b90:	movt	r0, #2
   15b94:	movt	r2, #3
   15b98:	ldr	lr, [r1, #4]
   15b9c:	mov	r1, #8
   15ba0:	str	ip, [sp, #8]
   15ba4:	str	lr, [sp, #4]
   15ba8:	bl	2c3b8 <error@@Base+0x9778>
   15bac:	b	15b58 <__assert_fail@plt+0x3e28>
   15bb0:	bl	11934 <__stack_chk_fail@plt>
   15bb4:	movw	r3, #28184	; 0x6e18
   15bb8:	movt	r3, #4
   15bbc:	push	{r4, r5, r6, lr}
   15bc0:	ldr	r3, [r3]
   15bc4:	cmp	r3, #0
   15bc8:	popne	{r4, r5, r6, pc}
   15bcc:	movw	r4, #25052	; 0x61dc
   15bd0:	movt	r4, #4
   15bd4:	ldr	r0, [r4, #148]	; 0x94
   15bd8:	cmp	r0, #0
   15bdc:	popeq	{r4, r5, r6, pc}
   15be0:	add	r4, r4, #148	; 0x94
   15be4:	bl	2b9c0 <error@@Base+0x8d80>
   15be8:	bl	17bc4 <__assert_fail@plt+0x5e94>
   15bec:	ldr	r5, [r0, #16]
   15bf0:	mov	r6, r0
   15bf4:	cmp	r5, #0
   15bf8:	beq	15c0c <__assert_fail@plt+0x3edc>
   15bfc:	ldr	r0, [r4, #8]!
   15c00:	cmp	r0, #0
   15c04:	bne	15be4 <__assert_fail@plt+0x3eb4>
   15c08:	pop	{r4, r5, r6, pc}
   15c0c:	mov	r0, #28
   15c10:	bl	22f44 <error@@Base+0x304>
   15c14:	str	r0, [r6, #16]
   15c18:	str	r5, [r0]
   15c1c:	ldr	r3, [r4, #4]
   15c20:	str	r5, [r0, #16]
   15c24:	str	r3, [r0, #8]
   15c28:	b	15bfc <__assert_fail@plt+0x3ecc>
   15c2c:	push	{r3, r4, r5, lr}
   15c30:	movw	r3, #28184	; 0x6e18
   15c34:	movt	r3, #4
   15c38:	ldr	r3, [r3]
   15c3c:	cmp	r3, #0
   15c40:	popne	{r3, r4, r5, pc}
   15c44:	movw	r5, #25052	; 0x61dc
   15c48:	movt	r5, #4
   15c4c:	ldr	r3, [r5, #548]	; 0x224
   15c50:	cmp	r3, #0
   15c54:	addne	r4, r5, #548	; 0x224
   15c58:	beq	15c74 <__assert_fail@plt+0x3f44>
   15c5c:	mov	r0, r4
   15c60:	mov	r1, #0
   15c64:	bl	2af84 <error@@Base+0x8344>
   15c68:	ldr	r3, [r4, #12]!
   15c6c:	cmp	r3, #0
   15c70:	bne	15c5c <__assert_fail@plt+0x3f2c>
   15c74:	ldr	r3, [r5, #608]	; 0x260
   15c78:	cmp	r3, #0
   15c7c:	popeq	{r3, r4, r5, pc}
   15c80:	ldr	r4, [pc, #24]	; 15ca0 <__assert_fail@plt+0x3f70>
   15c84:	mov	r0, r4
   15c88:	mov	r1, #1
   15c8c:	bl	2af84 <error@@Base+0x8344>
   15c90:	ldr	r3, [r4, #12]!
   15c94:	cmp	r3, #0
   15c98:	bne	15c84 <__assert_fail@plt+0x3f54>
   15c9c:	pop	{r3, r4, r5, pc}
   15ca0:	andeq	r6, r4, ip, lsr r4
   15ca4:	movw	r3, #28180	; 0x6e14
   15ca8:	movt	r3, #4
   15cac:	push	{r4, r5, r6, r7, r8, lr}
   15cb0:	sub	sp, sp, #16
   15cb4:	ldr	r8, [r3]
   15cb8:	cmp	r8, #0
   15cbc:	bne	15d20 <__assert_fail@plt+0x3ff0>
   15cc0:	movw	r5, #25052	; 0x61dc
   15cc4:	movt	r5, #4
   15cc8:	ldr	r4, [r5, #680]	; 0x2a8
   15ccc:	cmp	r4, #0
   15cd0:	beq	15d20 <__assert_fail@plt+0x3ff0>
   15cd4:	movw	r6, #26824	; 0x68c8
   15cd8:	add	r5, r5, #680	; 0x2a8
   15cdc:	movt	r6, #4
   15ce0:	mov	r7, #1
   15ce4:	mov	r0, r4
   15ce8:	bl	11b5c <strlen@plt>
   15cec:	ldr	ip, [r6]
   15cf0:	str	r7, [sp]
   15cf4:	mov	r3, #0
   15cf8:	ldr	r2, [r5, #4]
   15cfc:	ldr	ip, [ip, #4]
   15d00:	str	r8, [sp, #8]
   15d04:	str	ip, [sp, #4]
   15d08:	mov	r1, r0
   15d0c:	mov	r0, r4
   15d10:	bl	2c3b8 <error@@Base+0x9778>
   15d14:	ldr	r4, [r5, #8]!
   15d18:	cmp	r4, #0
   15d1c:	bne	15ce4 <__assert_fail@plt+0x3fb4>
   15d20:	add	sp, sp, #16
   15d24:	pop	{r4, r5, r6, r7, r8, pc}
   15d28:	ldr	r2, [r0]
   15d2c:	ldr	r0, [r0, #8]
   15d30:	eor	r0, r0, r2, lsl #4
   15d34:	bx	lr
   15d38:	ldr	r3, [r0, #8]
   15d3c:	ldr	r0, [r0]
   15d40:	mvn	r3, r3
   15d44:	eor	r0, r3, r0, lsl #4
   15d48:	bx	lr
   15d4c:	ldr	r2, [r0]
   15d50:	ldrb	r3, [r2]
   15d54:	cmp	r3, #0
   15d58:	beq	15d7c <__assert_fail@plt+0x404c>
   15d5c:	mov	r0, #0
   15d60:	mov	ip, r3
   15d64:	ldrb	r3, [r2, #1]!
   15d68:	cmp	r3, #0
   15d6c:	and	r1, r3, #15
   15d70:	add	r0, r0, ip, lsl r1
   15d74:	bne	15d60 <__assert_fail@plt+0x4030>
   15d78:	bx	lr
   15d7c:	mov	r0, r3
   15d80:	bx	lr
   15d84:	ldr	r2, [r0]
   15d88:	ldrb	r3, [r2]
   15d8c:	cmp	r3, #0
   15d90:	beq	15db4 <__assert_fail@plt+0x4084>
   15d94:	mov	r0, #0
   15d98:	mov	ip, r3
   15d9c:	ldrb	r3, [r2, #1]!
   15da0:	cmp	r3, #0
   15da4:	and	r1, r3, #7
   15da8:	add	r0, r0, ip, lsl r1
   15dac:	bne	15d98 <__assert_fail@plt+0x4068>
   15db0:	bx	lr
   15db4:	mov	r0, r3
   15db8:	bx	lr
   15dbc:	ldr	r2, [r0]
   15dc0:	ldrb	r3, [r2]
   15dc4:	cmp	r3, #0
   15dc8:	beq	15dec <__assert_fail@plt+0x40bc>
   15dcc:	mov	r0, #0
   15dd0:	mov	ip, r3
   15dd4:	ldrb	r3, [r2, #1]!
   15dd8:	cmp	r3, #0
   15ddc:	and	r1, r3, #15
   15de0:	add	r0, r0, ip, lsl r1
   15de4:	bne	15dd0 <__assert_fail@plt+0x40a0>
   15de8:	bx	lr
   15dec:	mov	r0, r3
   15df0:	bx	lr
   15df4:	ldr	r2, [r0]
   15df8:	ldrb	r3, [r2]
   15dfc:	cmp	r3, #0
   15e00:	beq	15e24 <__assert_fail@plt+0x40f4>
   15e04:	mov	r0, #0
   15e08:	mov	ip, r3
   15e0c:	ldrb	r3, [r2, #1]!
   15e10:	cmp	r3, #0
   15e14:	and	r1, r3, #7
   15e18:	add	r0, r0, ip, lsl r1
   15e1c:	bne	15e08 <__assert_fail@plt+0x40d8>
   15e20:	bx	lr
   15e24:	mov	r0, r3
   15e28:	bx	lr
   15e2c:	ldr	r0, [r0]
   15e30:	ldr	r1, [r1]
   15e34:	cmp	r0, r1
   15e38:	beq	15e40 <__assert_fail@plt+0x4110>
   15e3c:	b	1182c <strcmp@plt>
   15e40:	mov	r0, #0
   15e44:	bx	lr
   15e48:	cmp	r0, #0
   15e4c:	bxeq	lr
   15e50:	b	1188c <free@plt>
   15e54:	push	{r3, r4, r5, r6, r7, lr}
   15e58:	movw	r2, #26848	; 0x68e0
   15e5c:	ldr	r4, [r0]
   15e60:	movt	r2, #4
   15e64:	ldr	r3, [r0, #4]
   15e68:	ldr	ip, [r2]
   15e6c:	ldr	r1, [r4, #20]
   15e70:	ldr	r2, [r4, #16]
   15e74:	add	r1, r2, r1, lsl #2
   15e78:	cmp	r1, r3
   15e7c:	add	r3, r3, #4
   15e80:	bls	15f18 <__assert_fail@plt+0x41e8>
   15e84:	str	r3, [r0, #4]
   15e88:	ldr	r6, [r3, #-4]
   15e8c:	cmp	r6, #0
   15e90:	beq	15e78 <__assert_fail@plt+0x4148>
   15e94:	cmp	r6, ip
   15e98:	beq	15e78 <__assert_fail@plt+0x4148>
   15e9c:	ldrsh	r2, [r6, #6]
   15ea0:	cmp	r2, #0
   15ea4:	bne	15e78 <__assert_fail@plt+0x4148>
   15ea8:	movw	r4, #26932	; 0x6934
   15eac:	movt	r4, #4
   15eb0:	ldrsh	r2, [r6, #4]
   15eb4:	ldr	r1, [r4]
   15eb8:	add	r3, r2, #25
   15ebc:	add	r5, r2, #1
   15ec0:	cmp	r3, r1
   15ec4:	bls	15f20 <__assert_fail@plt+0x41f0>
   15ec8:	lsl	r1, r1, #1
   15ecc:	ldr	r0, [r4, #4]
   15ed0:	cmp	r3, r1
   15ed4:	strls	r1, [r4]
   15ed8:	strhi	r3, [r4]
   15edc:	movhi	r1, r3
   15ee0:	bl	22fb0 <error@@Base+0x370>
   15ee4:	mov	r7, r0
   15ee8:	str	r0, [r4, #4]
   15eec:	mov	r2, r5
   15ef0:	mov	r3, #0
   15ef4:	mov	r4, #1
   15ef8:	strb	r3, [r7, #18]
   15efc:	mov	r5, #0
   15f00:	add	r0, r7, #19
   15f04:	strd	r4, [r7]
   15f08:	ldr	r1, [r6]
   15f0c:	bl	118c8 <memcpy@plt>
   15f10:	mov	r0, r7
   15f14:	pop	{r3, r4, r5, r6, r7, pc}
   15f18:	mov	r0, #0
   15f1c:	pop	{r3, r4, r5, r6, r7, pc}
   15f20:	ldr	r7, [r4, #4]
   15f24:	b	15eec <__assert_fail@plt+0x41bc>
   15f28:	push	{r4, r5}
   15f2c:	mov	ip, r1
   15f30:	ldrd	r4, [r0, #8]
   15f34:	ldrd	r2, [r1, #8]
   15f38:	cmp	r5, r3
   15f3c:	cmpeq	r4, r2
   15f40:	bcc	15f60 <__assert_fail@plt+0x4230>
   15f44:	movne	r0, #1
   15f48:	bne	15f64 <__assert_fail@plt+0x4234>
   15f4c:	ldrd	r0, [r0]
   15f50:	ldrd	r2, [ip]
   15f54:	cmp	r1, r3
   15f58:	cmpeq	r0, r2
   15f5c:	bcs	15f6c <__assert_fail@plt+0x423c>
   15f60:	mvn	r0, #0
   15f64:	pop	{r4, r5}
   15f68:	bx	lr
   15f6c:	moveq	r0, #0
   15f70:	movne	r0, #1
   15f74:	pop	{r4, r5}
   15f78:	bx	lr
   15f7c:	ldrsh	r2, [r0, #4]
   15f80:	ldrsh	r3, [r1, #4]
   15f84:	subs	r3, r2, r3
   15f88:	bne	15fa0 <__assert_fail@plt+0x4270>
   15f8c:	ldr	r0, [r0]
   15f90:	ldr	r1, [r1]
   15f94:	cmp	r0, r1
   15f98:	beq	15fa0 <__assert_fail@plt+0x4270>
   15f9c:	b	1182c <strcmp@plt>
   15fa0:	mov	r0, r3
   15fa4:	bx	lr
   15fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fac:	movw	fp, #26864	; 0x68f0
   15fb0:	movt	fp, #4
   15fb4:	sub	sp, sp, #44	; 0x2c
   15fb8:	subs	r5, r0, #0
   15fbc:	mov	r6, r1
   15fc0:	ldr	r3, [fp]
   15fc4:	str	r3, [sp, #36]	; 0x24
   15fc8:	beq	16040 <__assert_fail@plt+0x4310>
   15fcc:	ldr	r3, [r5, #16]
   15fd0:	cmp	r3, #0
   15fd4:	beq	16040 <__assert_fail@plt+0x4310>
   15fd8:	cmp	r1, #0
   15fdc:	beq	16048 <__assert_fail@plt+0x4318>
   15fe0:	ldrb	r3, [r1]
   15fe4:	cmp	r3, #0
   15fe8:	bne	1600c <__assert_fail@plt+0x42dc>
   15fec:	mov	r7, #1
   15ff0:	ldr	r2, [sp, #36]	; 0x24
   15ff4:	mov	r0, r7
   15ff8:	ldr	r3, [fp]
   15ffc:	cmp	r2, r3
   16000:	bne	16188 <__assert_fail@plt+0x4458>
   16004:	add	sp, sp, #44	; 0x2c
   16008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1600c:	mov	r0, r1
   16010:	str	r1, [sp, #28]
   16014:	bl	11b5c <strlen@plt>
   16018:	add	r1, sp, #28
   1601c:	strh	r0, [sp, #32]
   16020:	add	r0, r5, #16
   16024:	bl	2e9d4 <error@@Base+0xbd94>
   16028:	cmp	r0, #0
   1602c:	beq	16048 <__assert_fail@plt+0x4318>
   16030:	ldrsh	r7, [r0, #6]
   16034:	rsbs	r7, r7, #1
   16038:	movcc	r7, #0
   1603c:	b	15ff0 <__assert_fail@plt+0x42c0>
   16040:	mov	r7, #0
   16044:	b	15ff0 <__assert_fail@plt+0x42c0>
   16048:	ldr	r4, [r5, #60]	; 0x3c
   1604c:	cmp	r4, #0
   16050:	beq	16040 <__assert_fail@plt+0x4310>
   16054:	bl	11b8c <__errno_location@plt>
   16058:	mov	r9, #0
   1605c:	add	r3, r5, #16
   16060:	str	fp, [sp, #20]
   16064:	str	r3, [sp, #12]
   16068:	add	r3, r6, #1
   1606c:	str	r3, [sp, #16]
   16070:	mov	sl, r0
   16074:	mov	r0, r4
   16078:	b	16080 <__assert_fail@plt+0x4350>
   1607c:	ldr	r0, [r5, #60]	; 0x3c
   16080:	str	r9, [sl]
   16084:	bl	11ca0 <readdir64@plt>
   16088:	subs	r4, r0, #0
   1608c:	beq	1614c <__assert_fail@plt+0x441c>
   16090:	ldrd	r2, [r4]
   16094:	orrs	r1, r2, r3
   16098:	beq	1607c <__assert_fail@plt+0x434c>
   1609c:	add	r8, r4, #19
   160a0:	mov	r0, r8
   160a4:	bl	11b5c <strlen@plt>
   160a8:	add	r1, sp, #28
   160ac:	str	r8, [sp, #28]
   160b0:	mov	ip, r0
   160b4:	ldr	r0, [sp, #12]
   160b8:	uxth	fp, ip
   160bc:	str	ip, [sp, #8]
   160c0:	strh	fp, [sp, #32]
   160c4:	bl	2e8ec <error@@Base+0xbcac>
   160c8:	mov	r2, r0
   160cc:	mov	r0, #8
   160d0:	str	r2, [sp, #4]
   160d4:	bl	22f44 <error@@Base+0x304>
   160d8:	ldr	ip, [sp, #8]
   160dc:	mov	r1, ip
   160e0:	mov	r7, r0
   160e4:	mov	r0, r8
   160e8:	bl	2b9dc <error@@Base+0x8d9c>
   160ec:	ldr	r2, [sp, #4]
   160f0:	strh	fp, [r7, #4]
   160f4:	mov	r1, r7
   160f8:	strh	r9, [r7, #6]
   160fc:	str	r0, [r7]
   16100:	ldr	r0, [sp, #12]
   16104:	bl	2ea00 <error@@Base+0xbdc0>
   16108:	cmp	r6, #0
   1610c:	beq	1607c <__assert_fail@plt+0x434c>
   16110:	cmp	r6, r8
   16114:	beq	16144 <__assert_fail@plt+0x4414>
   16118:	ldrb	r2, [r4, #19]
   1611c:	ldrb	r3, [r6]
   16120:	cmp	r3, r2
   16124:	bne	1607c <__assert_fail@plt+0x434c>
   16128:	cmp	r3, #0
   1612c:	beq	16144 <__assert_fail@plt+0x4414>
   16130:	add	r0, r4, #20
   16134:	ldr	r1, [sp, #16]
   16138:	bl	1182c <strcmp@plt>
   1613c:	cmp	r0, #0
   16140:	bne	1607c <__assert_fail@plt+0x434c>
   16144:	ldr	fp, [sp, #20]
   16148:	b	15fec <__assert_fail@plt+0x42bc>
   1614c:	ldr	r7, [sl]
   16150:	cmp	r7, #4
   16154:	beq	1607c <__assert_fail@plt+0x434c>
   16158:	cmp	r7, #0
   1615c:	ldr	fp, [sp, #20]
   16160:	bne	1618c <__assert_fail@plt+0x445c>
   16164:	movw	r3, #26932	; 0x6934
   16168:	movt	r3, #4
   1616c:	ldr	r0, [r5, #60]	; 0x3c
   16170:	ldr	r2, [r3, #8]
   16174:	sub	r2, r2, #1
   16178:	str	r2, [r3, #8]
   1617c:	bl	11d24 <closedir@plt>
   16180:	str	r7, [r5, #60]	; 0x3c
   16184:	b	15ff0 <__assert_fail@plt+0x42c0>
   16188:	bl	11934 <__stack_chk_fail@plt>
   1618c:	mov	r0, r7
   16190:	bl	11acc <strerror@plt>
   16194:	movw	r1, #2216	; 0x8a8
   16198:	movt	r1, #3
   1619c:	mov	r2, r0
   161a0:	mov	r0, r4
   161a4:	bl	22d64 <error@@Base+0x124>
   161a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   161ac:	movw	r8, #26864	; 0x68f0
   161b0:	movt	r8, #4
   161b4:	sub	sp, sp, #196	; 0xc4
   161b8:	add	r1, sp, #192	; 0xc0
   161bc:	mov	r6, r0
   161c0:	ldr	r3, [r8]
   161c4:	str	r0, [r1, #-184]!	; 0xffffff48
   161c8:	ldr	r0, [pc, #452]	; 16394 <__assert_fail@plt+0x4664>
   161cc:	str	r3, [sp, #188]	; 0xbc
   161d0:	bl	2e8ec <error@@Base+0xbcac>
   161d4:	ldr	r7, [r0]
   161d8:	mov	r4, r0
   161dc:	cmp	r7, #0
   161e0:	beq	16214 <__assert_fail@plt+0x44e4>
   161e4:	movw	r3, #26848	; 0x68e0
   161e8:	movt	r3, #4
   161ec:	ldr	r3, [r3]
   161f0:	cmp	r7, r3
   161f4:	beq	16214 <__assert_fail@plt+0x44e4>
   161f8:	ldr	r2, [sp, #188]	; 0xbc
   161fc:	mov	r0, r7
   16200:	ldr	r3, [r8]
   16204:	cmp	r2, r3
   16208:	bne	16390 <__assert_fail@plt+0x4660>
   1620c:	add	sp, sp, #196	; 0xc4
   16210:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16214:	mov	r0, r6
   16218:	bl	11b5c <strlen@plt>
   1621c:	add	r5, r6, r0
   16220:	mov	r0, #8
   16224:	bl	22f44 <error@@Base+0x304>
   16228:	rsb	r1, r6, r5
   1622c:	mov	r7, r0
   16230:	mov	r0, r6
   16234:	bl	2b9dc <error@@Base+0x8d9c>
   16238:	mov	r2, r4
   1623c:	mov	r1, r7
   16240:	str	r0, [r7]
   16244:	ldr	r0, [pc, #328]	; 16394 <__assert_fail@plt+0x4664>
   16248:	bl	2ea00 <error@@Base+0xbdc0>
   1624c:	b	16260 <__assert_fail@plt+0x4530>
   16250:	bl	11b8c <__errno_location@plt>
   16254:	ldr	r3, [r0]
   16258:	cmp	r3, #4
   1625c:	bne	162c8 <__assert_fail@plt+0x4598>
   16260:	mov	r0, #3
   16264:	mov	r1, r6
   16268:	add	r2, sp, #80	; 0x50
   1626c:	bl	11cdc <__xstat64@plt>
   16270:	cmn	r0, #1
   16274:	beq	16250 <__assert_fail@plt+0x4520>
   16278:	cmp	r0, #0
   1627c:	blt	162c8 <__assert_fail@plt+0x4598>
   16280:	ldrd	r4, [sp, #80]	; 0x50
   16284:	add	r1, sp, #16
   16288:	ldrd	r2, [sp, #176]	; 0xb0
   1628c:	ldr	r0, [pc, #260]	; 16398 <__assert_fail@plt+0x4668>
   16290:	strd	r4, [sp, #16]
   16294:	strd	r2, [sp, #24]
   16298:	bl	2e8ec <error@@Base+0xbcac>
   1629c:	ldr	r5, [r0]
   162a0:	mov	sl, r0
   162a4:	cmp	r5, #0
   162a8:	beq	162d4 <__assert_fail@plt+0x45a4>
   162ac:	movw	r3, #26848	; 0x68e0
   162b0:	movt	r3, #4
   162b4:	ldr	r3, [r3]
   162b8:	cmp	r5, r3
   162bc:	beq	162d4 <__assert_fail@plt+0x45a4>
   162c0:	str	r5, [r7, #4]
   162c4:	b	161f8 <__assert_fail@plt+0x44c8>
   162c8:	mov	r3, #0
   162cc:	str	r3, [r7, #4]
   162d0:	b	161f8 <__assert_fail@plt+0x44c8>
   162d4:	mov	r0, #64	; 0x40
   162d8:	mov	r9, #0
   162dc:	bl	22f44 <error@@Base+0x304>
   162e0:	mov	r2, sl
   162e4:	ldrd	sl, [sp, #176]	; 0xb0
   162e8:	strd	sl, [r0, #8]
   162ec:	mov	r5, r0
   162f0:	ldrd	sl, [sp, #80]	; 0x50
   162f4:	mov	r1, r0
   162f8:	ldr	r0, [pc, #152]	; 16398 <__assert_fail@plt+0x4668>
   162fc:	strd	sl, [r5]
   16300:	bl	2ea00 <error@@Base+0xbdc0>
   16304:	bl	11b8c <__errno_location@plt>
   16308:	mov	r4, r0
   1630c:	b	1631c <__assert_fail@plt+0x45ec>
   16310:	ldr	r3, [r4]
   16314:	cmp	r3, #4
   16318:	bne	16388 <__assert_fail@plt+0x4658>
   1631c:	str	r9, [r4]
   16320:	mov	r0, r6
   16324:	bl	11a60 <opendir@plt>
   16328:	cmp	r0, #0
   1632c:	str	r0, [r5, #60]	; 0x3c
   16330:	beq	16310 <__assert_fail@plt+0x45e0>
   16334:	movw	r3, #24444	; 0x5f7c
   16338:	movw	r2, #23996	; 0x5dbc
   1633c:	movt	r3, #1
   16340:	movt	r2, #1
   16344:	str	r3, [sp]
   16348:	add	r0, r5, #16
   1634c:	movw	r3, #24052	; 0x5df4
   16350:	mov	r1, #107	; 0x6b
   16354:	movt	r3, #1
   16358:	bl	2e838 <error@@Base+0xbbf8>
   1635c:	movw	r3, #26932	; 0x6934
   16360:	movt	r3, #4
   16364:	ldr	r2, [r3, #8]
   16368:	add	r2, r2, #1
   1636c:	str	r2, [r3, #8]
   16370:	cmp	r2, #10
   16374:	bne	162c0 <__assert_fail@plt+0x4590>
   16378:	mov	r0, r5
   1637c:	mov	r1, #0
   16380:	bl	15fa8 <__assert_fail@plt+0x4278>
   16384:	b	162c0 <__assert_fail@plt+0x4590>
   16388:	str	r0, [r5, #16]
   1638c:	b	162c0 <__assert_fail@plt+0x4590>
   16390:	bl	11934 <__stack_chk_fail@plt>
   16394:	andeq	r6, r4, r0, asr #18
   16398:	andeq	r6, r4, ip, ror #18
   1639c:	push	{r4, lr}
   163a0:	bl	161a8 <__assert_fail@plt+0x4478>
   163a4:	ldr	r3, [r0, #4]
   163a8:	mov	r4, r0
   163ac:	cmp	r3, #0
   163b0:	beq	163e8 <__assert_fail@plt+0x46b8>
   163b4:	ldr	r0, [r3, #16]
   163b8:	cmp	r0, #0
   163bc:	popeq	{r4, pc}
   163c0:	mov	r0, r3
   163c4:	mov	r1, #0
   163c8:	bl	15fa8 <__assert_fail@plt+0x4278>
   163cc:	mov	r0, #8
   163d0:	bl	22f44 <error@@Base+0x304>
   163d4:	ldr	r1, [r4, #4]
   163d8:	ldr	r3, [r1, #16]
   163dc:	mov	r2, r0
   163e0:	stm	r2, {r1, r3}
   163e4:	pop	{r4, pc}
   163e8:	mov	r0, r3
   163ec:	pop	{r4, pc}
   163f0:	push	{r4, lr}
   163f4:	mov	r4, r1
   163f8:	bl	161a8 <__assert_fail@plt+0x4478>
   163fc:	mov	r1, r4
   16400:	pop	{r4, lr}
   16404:	ldr	r0, [r0, #4]
   16408:	b	15fa8 <__assert_fail@plt+0x4278>
   1640c:	push	{r4, r5, r6, r7, r8, fp, lr}
   16410:	add	fp, sp, #24
   16414:	sub	sp, sp, #12
   16418:	movw	r4, #26864	; 0x68f0
   1641c:	movt	r4, #4
   16420:	mov	r5, r0
   16424:	ldr	r3, [r4]
   16428:	str	r3, [fp, #-32]	; 0xffffffe0
   1642c:	bl	13e84 <__assert_fail@plt+0x2154>
   16430:	subs	r8, r0, #0
   16434:	mov	r0, r5
   16438:	bne	164b8 <__assert_fail@plt+0x4788>
   1643c:	mov	r1, #47	; 0x2f
   16440:	bl	11c7c <strrchr@plt>
   16444:	subs	r6, r0, #0
   16448:	beq	164c8 <__assert_fail@plt+0x4798>
   1644c:	cmp	r6, r5
   16450:	beq	164ac <__assert_fail@plt+0x477c>
   16454:	rsb	r7, r5, r6
   16458:	mov	r1, r5
   1645c:	add	r3, r7, #15
   16460:	bic	r3, r3, #7
   16464:	mov	r2, r7
   16468:	sub	sp, sp, r3
   1646c:	mov	r3, sp
   16470:	lsr	r5, r3, #3
   16474:	lsl	r3, r5, #3
   16478:	mov	r0, r3
   1647c:	bl	118c8 <memcpy@plt>
   16480:	strb	r8, [r7, r5, lsl #3]
   16484:	mov	r3, r0
   16488:	mov	r0, r3
   1648c:	add	r1, r6, #1
   16490:	bl	163f0 <__assert_fail@plt+0x46c0>
   16494:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16498:	ldr	r3, [r4]
   1649c:	cmp	r2, r3
   164a0:	bne	164dc <__assert_fail@plt+0x47ac>
   164a4:	sub	sp, fp, #24
   164a8:	pop	{r4, r5, r6, r7, r8, fp, pc}
   164ac:	movw	r3, #2240	; 0x8c0
   164b0:	movt	r3, #3
   164b4:	b	16488 <__assert_fail@plt+0x4758>
   164b8:	bl	13f5c <__assert_fail@plt+0x222c>
   164bc:	adds	r0, r0, #1
   164c0:	movne	r0, #1
   164c4:	b	16494 <__assert_fail@plt+0x4764>
   164c8:	mov	r1, r5
   164cc:	movw	r0, #2956	; 0xb8c
   164d0:	movt	r0, #3
   164d4:	bl	163f0 <__assert_fail@plt+0x46c0>
   164d8:	b	16494 <__assert_fail@plt+0x4764>
   164dc:	bl	11934 <__stack_chk_fail@plt>
   164e0:	push	{r4, r5, r6, r7, fp, lr}
   164e4:	add	fp, sp, #20
   164e8:	sub	sp, sp, #16
   164ec:	movw	r5, #26864	; 0x68f0
   164f0:	movt	r5, #4
   164f4:	mov	r1, #47	; 0x2f
   164f8:	mov	r4, r0
   164fc:	ldr	r3, [r5]
   16500:	str	r3, [fp, #-24]	; 0xffffffe8
   16504:	bl	11c7c <strrchr@plt>
   16508:	subs	r6, r0, #0
   1650c:	beq	1660c <__assert_fail@plt+0x48dc>
   16510:	cmp	r4, r6
   16514:	beq	165d4 <__assert_fail@plt+0x48a4>
   16518:	rsb	r7, r4, r6
   1651c:	mov	r1, r4
   16520:	add	r3, r7, #15
   16524:	bic	r3, r3, #7
   16528:	mov	r2, r7
   1652c:	sub	sp, sp, r3
   16530:	add	r4, sp, #15
   16534:	lsr	r4, r4, #3
   16538:	lsl	r3, r4, #3
   1653c:	mov	r0, r3
   16540:	bl	118c8 <memcpy@plt>
   16544:	mov	r2, #0
   16548:	strb	r2, [r7, r4, lsl #3]
   1654c:	mov	r3, r0
   16550:	mov	r0, r3
   16554:	add	r4, r6, #1
   16558:	bl	161a8 <__assert_fail@plt+0x4478>
   1655c:	mov	r7, r0
   16560:	ldr	r3, [r7, #4]
   16564:	cmp	r3, #0
   16568:	beq	16620 <__assert_fail@plt+0x48f0>
   1656c:	ldr	r2, [r3, #16]
   16570:	cmp	r2, #0
   16574:	beq	165e0 <__assert_fail@plt+0x48b0>
   16578:	mov	r0, #8
   1657c:	bl	22f44 <error@@Base+0x304>
   16580:	mov	r6, r0
   16584:	mov	r0, r4
   16588:	bl	11b5c <strlen@plt>
   1658c:	uxth	r1, r0
   16590:	mov	r0, r4
   16594:	strh	r1, [r6, #4]
   16598:	sxth	r1, r1
   1659c:	bl	2b9dc <error@@Base+0x8d9c>
   165a0:	ldr	r3, [r7, #4]
   165a4:	mov	r2, #1
   165a8:	mov	r1, r6
   165ac:	strh	r2, [r6, #6]
   165b0:	str	r0, [r6]
   165b4:	add	r0, r3, #16
   165b8:	bl	2eb30 <error@@Base+0xbef0>
   165bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   165c0:	ldr	r3, [r5]
   165c4:	cmp	r2, r3
   165c8:	bne	16634 <__assert_fail@plt+0x4904>
   165cc:	sub	sp, fp, #20
   165d0:	pop	{r4, r5, r6, r7, fp, pc}
   165d4:	movw	r3, #2240	; 0x8c0
   165d8:	movt	r3, #3
   165dc:	b	16550 <__assert_fail@plt+0x4820>
   165e0:	add	r0, r3, #16
   165e4:	movw	r2, #23996	; 0x5dbc
   165e8:	movw	r3, #24444	; 0x5f7c
   165ec:	movt	r2, #1
   165f0:	movt	r3, #1
   165f4:	mov	r1, #107	; 0x6b
   165f8:	str	r3, [sp]
   165fc:	movw	r3, #24052	; 0x5df4
   16600:	movt	r3, #1
   16604:	bl	2e838 <error@@Base+0xbbf8>
   16608:	b	16578 <__assert_fail@plt+0x4848>
   1660c:	movw	r0, #2956	; 0xb8c
   16610:	movt	r0, #3
   16614:	bl	161a8 <__assert_fail@plt+0x4478>
   16618:	mov	r7, r0
   1661c:	b	16560 <__assert_fail@plt+0x4830>
   16620:	mov	r0, #64	; 0x40
   16624:	bl	22f78 <error@@Base+0x338>
   16628:	mov	r3, r0
   1662c:	str	r0, [r7, #4]
   16630:	b	1656c <__assert_fail@plt+0x483c>
   16634:	bl	11934 <__stack_chk_fail@plt>
   16638:	push	{r4, r5, r6, r7, fp, lr}
   1663c:	add	fp, sp, #20
   16640:	sub	sp, sp, #16
   16644:	movw	r5, #26864	; 0x68f0
   16648:	movt	r5, #4
   1664c:	mov	r1, #47	; 0x2f
   16650:	mov	r4, r0
   16654:	ldr	r3, [r5]
   16658:	str	r3, [fp, #-24]	; 0xffffffe8
   1665c:	bl	11c7c <strrchr@plt>
   16660:	subs	r6, r0, #0
   16664:	beq	16720 <__assert_fail@plt+0x49f0>
   16668:	cmp	r6, r4
   1666c:	beq	16714 <__assert_fail@plt+0x49e4>
   16670:	rsb	r7, r4, r6
   16674:	mov	r1, r4
   16678:	add	r3, r7, #15
   1667c:	bic	r3, r3, #7
   16680:	mov	r2, r7
   16684:	sub	sp, sp, r3
   16688:	mov	r3, sp
   1668c:	lsr	r4, r3, #3
   16690:	lsl	r3, r4, #3
   16694:	mov	r0, r3
   16698:	bl	118c8 <memcpy@plt>
   1669c:	mov	r2, #0
   166a0:	strb	r2, [r7, r4, lsl #3]
   166a4:	mov	r3, r0
   166a8:	mov	r0, r3
   166ac:	add	r4, r6, #1
   166b0:	bl	161a8 <__assert_fail@plt+0x4478>
   166b4:	ldr	r6, [r0, #4]
   166b8:	cmp	r6, #0
   166bc:	beq	1670c <__assert_fail@plt+0x49dc>
   166c0:	ldr	r3, [r6, #16]
   166c4:	cmp	r3, #0
   166c8:	beq	1670c <__assert_fail@plt+0x49dc>
   166cc:	mov	r0, r4
   166d0:	str	r4, [fp, #-32]	; 0xffffffe0
   166d4:	bl	11b5c <strlen@plt>
   166d8:	sub	r1, fp, #32
   166dc:	strh	r0, [fp, #-28]	; 0xffffffe4
   166e0:	add	r0, r6, #16
   166e4:	bl	2e9d4 <error@@Base+0xbd94>
   166e8:	cmp	r0, #0
   166ec:	beq	1670c <__assert_fail@plt+0x49dc>
   166f0:	ldrsh	r0, [r0, #6]
   166f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   166f8:	ldr	r3, [r5]
   166fc:	cmp	r2, r3
   16700:	bne	16734 <__assert_fail@plt+0x4a04>
   16704:	sub	sp, fp, #20
   16708:	pop	{r4, r5, r6, r7, fp, pc}
   1670c:	mov	r0, #0
   16710:	b	166f4 <__assert_fail@plt+0x49c4>
   16714:	movw	r3, #2240	; 0x8c0
   16718:	movt	r3, #3
   1671c:	b	166a8 <__assert_fail@plt+0x4978>
   16720:	movw	r0, #2956	; 0xb8c
   16724:	movt	r0, #3
   16728:	bl	161a8 <__assert_fail@plt+0x4478>
   1672c:	ldr	r6, [r0, #4]
   16730:	b	166b8 <__assert_fail@plt+0x4988>
   16734:	bl	11934 <__stack_chk_fail@plt>
   16738:	push	{r3, lr}
   1673c:	bl	161a8 <__assert_fail@plt+0x4478>
   16740:	ldr	r0, [r0]
   16744:	pop	{r3, pc}
   16748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1674c:	sub	sp, sp, #20
   16750:	mov	r2, #5
   16754:	movw	r1, #2244	; 0x8c4
   16758:	mov	r0, #0
   1675c:	movt	r1, #3
   16760:	movw	r3, #26932	; 0x6934
   16764:	movt	r3, #4
   16768:	str	r3, [sp, #12]
   1676c:	bl	1191c <dcgettext@plt>
   16770:	bl	11a9c <puts@plt>
   16774:	ldr	r3, [sp, #12]
   16778:	movw	r7, #26888	; 0x6908
   1677c:	movt	r7, #4
   16780:	ldr	sl, [r3, #16]
   16784:	ldr	r6, [r3, #12]
   16788:	add	sl, r6, sl, lsl #2
   1678c:	cmp	r6, sl
   16790:	bcs	16a2c <__assert_fail@plt+0x4cfc>
   16794:	mov	r8, #0
   16798:	movw	r3, #26848	; 0x68e0
   1679c:	mov	r9, r8
   167a0:	movt	r3, #4
   167a4:	str	r3, [sp, #8]
   167a8:	ldr	r5, [r6], #4
   167ac:	cmp	r5, #0
   167b0:	beq	16900 <__assert_fail@plt+0x4bd0>
   167b4:	ldr	r3, [sp, #8]
   167b8:	ldr	r1, [r3]
   167bc:	cmp	r5, r1
   167c0:	beq	16900 <__assert_fail@plt+0x4bd0>
   167c4:	ldr	r3, [r5, #4]
   167c8:	cmp	r3, #0
   167cc:	beq	16a68 <__assert_fail@plt+0x4d38>
   167d0:	ldr	r0, [r3, #16]
   167d4:	cmp	r0, #0
   167d8:	beq	16a90 <__assert_fail@plt+0x4d60>
   167dc:	ldr	r2, [r3, #20]
   167e0:	add	r2, r0, r2, lsl #2
   167e4:	cmp	r0, r2
   167e8:	bcs	169c4 <__assert_fail@plt+0x4c94>
   167ec:	mov	r4, #0
   167f0:	mov	fp, r4
   167f4:	ldr	r3, [r0], #4
   167f8:	cmp	r3, #0
   167fc:	beq	16818 <__assert_fail@plt+0x4ae8>
   16800:	cmp	r1, r3
   16804:	beq	16818 <__assert_fail@plt+0x4ae8>
   16808:	ldrsh	r3, [r3, #6]
   1680c:	cmp	r3, #0
   16810:	addne	r4, r4, #1
   16814:	addeq	fp, fp, #1
   16818:	cmp	r2, r0
   1681c:	bhi	167f4 <__assert_fail@plt+0x4ac4>
   16820:	mov	r2, #5
   16824:	movw	r1, #2340	; 0x924
   16828:	mov	r0, #0
   1682c:	movt	r1, #3
   16830:	bl	1191c <dcgettext@plt>
   16834:	ldm	r5, {r2, lr}
   16838:	ldr	r3, [lr]
   1683c:	ldr	lr, [lr, #8]
   16840:	str	lr, [sp]
   16844:	mov	r1, r0
   16848:	mov	r0, #1
   1684c:	bl	11be0 <__printf_chk@plt>
   16850:	cmp	fp, #0
   16854:	beq	169f8 <__assert_fail@plt+0x4cc8>
   16858:	movw	r1, #18120	; 0x46c8
   1685c:	mov	r0, #1
   16860:	movt	r1, #3
   16864:	mov	r2, fp
   16868:	bl	11be0 <__printf_chk@plt>
   1686c:	mov	r2, #5
   16870:	movw	r1, #2376	; 0x948
   16874:	mov	r0, #0
   16878:	movt	r1, #3
   1687c:	bl	1191c <dcgettext@plt>
   16880:	ldr	r1, [r7]
   16884:	bl	11ce8 <fputs@plt>
   16888:	cmp	r4, #0
   1688c:	bne	169ac <__assert_fail@plt+0x4c7c>
   16890:	movw	r1, #2388	; 0x954
   16894:	mov	r0, r4
   16898:	movt	r1, #3
   1689c:	mov	r2, #5
   168a0:	bl	1191c <dcgettext@plt>
   168a4:	movw	r3, #26888	; 0x6908
   168a8:	movt	r3, #4
   168ac:	ldr	r1, [r3]
   168b0:	bl	11ce8 <fputs@plt>
   168b4:	mov	r2, #5
   168b8:	movw	r1, #2392	; 0x958
   168bc:	mov	r0, #0
   168c0:	movt	r1, #3
   168c4:	bl	1191c <dcgettext@plt>
   168c8:	ldr	r1, [r7]
   168cc:	bl	11ce8 <fputs@plt>
   168d0:	ldr	r3, [r5, #4]
   168d4:	ldr	r3, [r3, #60]	; 0x3c
   168d8:	cmp	r3, #0
   168dc:	beq	16a1c <__assert_fail@plt+0x4cec>
   168e0:	movw	r1, #2412	; 0x96c
   168e4:	mov	r2, #5
   168e8:	movt	r1, #3
   168ec:	mov	r0, #0
   168f0:	bl	1191c <dcgettext@plt>
   168f4:	bl	11a9c <puts@plt>
   168f8:	add	r9, r9, fp
   168fc:	add	r8, r8, r4
   16900:	cmp	sl, r6
   16904:	bhi	167a8 <__assert_fail@plt+0x4a78>
   16908:	movw	r0, #2424	; 0x978
   1690c:	mov	r1, #1
   16910:	movt	r0, #3
   16914:	mov	r2, #3
   16918:	ldr	r3, [r7]
   1691c:	bl	11a00 <fwrite@plt>
   16920:	cmp	r9, #0
   16924:	beq	16a48 <__assert_fail@plt+0x4d18>
   16928:	movw	r1, #18120	; 0x46c8
   1692c:	mov	r2, r9
   16930:	mov	r0, #1
   16934:	movt	r1, #3
   16938:	bl	11be0 <__printf_chk@plt>
   1693c:	mov	r2, #5
   16940:	movw	r1, #2376	; 0x948
   16944:	mov	r0, #0
   16948:	movt	r1, #3
   1694c:	bl	1191c <dcgettext@plt>
   16950:	ldr	r1, [r7]
   16954:	bl	11ce8 <fputs@plt>
   16958:	cmp	r8, #0
   1695c:	movw	r4, #26888	; 0x6908
   16960:	movt	r4, #4
   16964:	beq	16ac0 <__assert_fail@plt+0x4d90>
   16968:	movw	r1, #18120	; 0x46c8
   1696c:	mov	r2, r8
   16970:	mov	r0, #1
   16974:	movt	r1, #3
   16978:	bl	11be0 <__printf_chk@plt>
   1697c:	mov	r2, #5
   16980:	movw	r1, #2428	; 0x97c
   16984:	mov	r0, #0
   16988:	movt	r1, #3
   1698c:	bl	1191c <dcgettext@plt>
   16990:	ldr	r3, [sp, #12]
   16994:	ldr	r2, [r3, #24]
   16998:	mov	r1, r0
   1699c:	mov	r0, #1
   169a0:	add	sp, sp, #20
   169a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169a8:	b	11be0 <__printf_chk@plt>
   169ac:	movw	r1, #18120	; 0x46c8
   169b0:	mov	r2, r4
   169b4:	movt	r1, #3
   169b8:	mov	r0, #1
   169bc:	bl	11be0 <__printf_chk@plt>
   169c0:	b	168b4 <__assert_fail@plt+0x4b84>
   169c4:	mov	r2, #5
   169c8:	movw	r1, #2340	; 0x924
   169cc:	mov	r0, #0
   169d0:	movt	r1, #3
   169d4:	bl	1191c <dcgettext@plt>
   169d8:	ldm	r5, {r2, ip}
   169dc:	mov	r4, #0
   169e0:	ldr	r3, [ip]
   169e4:	ldr	ip, [ip, #8]
   169e8:	str	ip, [sp]
   169ec:	mov	r1, r0
   169f0:	mov	r0, #1
   169f4:	bl	11be0 <__printf_chk@plt>
   169f8:	mov	r2, #5
   169fc:	movw	r1, #2372	; 0x944
   16a00:	mov	r0, #0
   16a04:	movt	r1, #3
   16a08:	bl	1191c <dcgettext@plt>
   16a0c:	ldr	r1, [r7]
   16a10:	bl	11ce8 <fputs@plt>
   16a14:	mov	fp, #0
   16a18:	b	1686c <__assert_fail@plt+0x4b3c>
   16a1c:	movw	r0, #2956	; 0xb8c
   16a20:	movt	r0, #3
   16a24:	bl	11a9c <puts@plt>
   16a28:	b	168f8 <__assert_fail@plt+0x4bc8>
   16a2c:	movw	r0, #2424	; 0x978
   16a30:	mov	r1, #1
   16a34:	ldr	r3, [r7]
   16a38:	movt	r0, #3
   16a3c:	mov	r2, #3
   16a40:	mov	r8, #0
   16a44:	bl	11a00 <fwrite@plt>
   16a48:	mov	r2, #5
   16a4c:	movw	r1, #2372	; 0x944
   16a50:	mov	r0, #0
   16a54:	movt	r1, #3
   16a58:	bl	1191c <dcgettext@plt>
   16a5c:	ldr	r1, [r7]
   16a60:	bl	11ce8 <fputs@plt>
   16a64:	b	1693c <__assert_fail@plt+0x4c0c>
   16a68:	mov	r0, r3
   16a6c:	mov	r2, #5
   16a70:	movw	r1, #2260	; 0x8d4
   16a74:	movt	r1, #3
   16a78:	bl	1191c <dcgettext@plt>
   16a7c:	ldr	r2, [r5]
   16a80:	mov	r1, r0
   16a84:	mov	r0, #1
   16a88:	bl	11be0 <__printf_chk@plt>
   16a8c:	b	16900 <__assert_fail@plt+0x4bd0>
   16a90:	mov	r2, #5
   16a94:	movw	r1, #2288	; 0x8f0
   16a98:	movt	r1, #3
   16a9c:	bl	1191c <dcgettext@plt>
   16aa0:	ldm	r5, {r2, ip}
   16aa4:	ldr	r3, [ip]
   16aa8:	ldr	ip, [ip, #8]
   16aac:	str	ip, [sp]
   16ab0:	mov	r1, r0
   16ab4:	mov	r0, #1
   16ab8:	bl	11be0 <__printf_chk@plt>
   16abc:	b	16900 <__assert_fail@plt+0x4bd0>
   16ac0:	mov	r0, r8
   16ac4:	mov	r2, #5
   16ac8:	movw	r1, #2388	; 0x954
   16acc:	movt	r1, #3
   16ad0:	bl	1191c <dcgettext@plt>
   16ad4:	ldr	r1, [r4]
   16ad8:	bl	11ce8 <fputs@plt>
   16adc:	b	1697c <__assert_fail@plt+0x4c4c>
   16ae0:	movw	r2, #25500	; 0x639c
   16ae4:	movw	r3, #24148	; 0x5e54
   16ae8:	movt	r2, #1
   16aec:	movt	r3, #1
   16af0:	str	r2, [r0, #24]
   16af4:	movw	r2, #24136	; 0x5e48
   16af8:	str	r3, [r0, #20]
   16afc:	movt	r2, #1
   16b00:	movw	r3, #62996	; 0xf614
   16b04:	str	r2, [r0, #16]
   16b08:	movt	r3, #2
   16b0c:	str	r3, [r0, #32]
   16b10:	bx	lr
   16b14:	push	{r4, lr}
   16b18:	sub	sp, sp, #8
   16b1c:	movw	r4, #26932	; 0x6934
   16b20:	movt	r4, #4
   16b24:	add	r0, r4, #12
   16b28:	mov	r1, #199	; 0xc7
   16b2c:	movw	r3, #24108	; 0x5e2c
   16b30:	movw	r2, #23884	; 0x5d4c
   16b34:	movt	r3, #1
   16b38:	movt	r2, #1
   16b3c:	str	r3, [sp]
   16b40:	movw	r3, #23940	; 0x5d84
   16b44:	movt	r3, #1
   16b48:	bl	2e838 <error@@Base+0xbbf8>
   16b4c:	add	r0, r4, #56	; 0x38
   16b50:	mov	r1, #199	; 0xc7
   16b54:	movw	r3, #24360	; 0x5f28
   16b58:	movw	r2, #23848	; 0x5d28
   16b5c:	movt	r3, #1
   16b60:	movt	r2, #1
   16b64:	str	r3, [sp]
   16b68:	movw	r3, #23864	; 0x5d38
   16b6c:	movt	r3, #1
   16b70:	bl	2e838 <error@@Base+0xbbf8>
   16b74:	add	sp, sp, #8
   16b78:	pop	{r4, pc}
   16b7c:	push	{r3, r4, r5, lr}
   16b80:	movw	r4, #29472	; 0x7320
   16b84:	movt	r4, #4
   16b88:	ldr	r5, [r4]
   16b8c:	cmp	r5, #0
   16b90:	beq	16b9c <__assert_fail@plt+0x4e6c>
   16b94:	mov	r0, r5
   16b98:	pop	{r3, r4, r5, pc}
   16b9c:	mov	r2, #200	; 0xc8
   16ba0:	movw	r3, #27032	; 0x6998
   16ba4:	movt	r3, #4
   16ba8:	mov	r0, r2
   16bac:	str	r2, [r3]
   16bb0:	bl	22f44 <error@@Base+0x304>
   16bb4:	str	r0, [r4]
   16bb8:	strb	r5, [r0]
   16bbc:	ldr	r0, [r4]
   16bc0:	pop	{r3, r4, r5, pc}
   16bc4:	push	{r3, r4, r5, r6, r7, lr}
   16bc8:	movw	r4, #29472	; 0x7320
   16bcc:	movt	r4, #4
   16bd0:	movw	ip, #27032	; 0x6998
   16bd4:	movt	ip, #4
   16bd8:	mov	r5, r2
   16bdc:	ldr	lr, [r4]
   16be0:	mov	r3, r0
   16be4:	ldr	r2, [ip]
   16be8:	mov	r7, r1
   16bec:	rsb	r6, lr, r0
   16bf0:	add	r0, r6, r5
   16bf4:	add	r1, r0, #5
   16bf8:	cmp	r1, r2
   16bfc:	bls	16c28 <__assert_fail@plt+0x4ef8>
   16c00:	add	r0, r0, #100	; 0x64
   16c04:	lsl	r2, r2, #1
   16c08:	cmp	r0, r2
   16c0c:	movcs	r1, r0
   16c10:	movcc	r1, r2
   16c14:	mov	r0, lr
   16c18:	str	r1, [ip]
   16c1c:	bl	22fb0 <error@@Base+0x370>
   16c20:	add	r3, r0, r6
   16c24:	str	r0, [r4]
   16c28:	mov	r1, r7
   16c2c:	mov	r0, r3
   16c30:	mov	r2, r5
   16c34:	bl	118c8 <memcpy@plt>
   16c38:	add	r0, r0, r5
   16c3c:	pop	{r3, r4, r5, r6, r7, pc}
   16c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c44:	add	fp, sp, #32
   16c48:	sub	sp, sp, #12
   16c4c:	movw	r4, #26864	; 0x68f0
   16c50:	movt	r4, #4
   16c54:	cmp	r0, r1
   16c58:	mov	r5, r0
   16c5c:	ldr	r3, [r4]
   16c60:	str	r3, [fp, #-40]	; 0xffffffd8
   16c64:	beq	16db8 <__assert_fail@plt+0x5088>
   16c68:	cmp	r1, #0
   16c6c:	beq	16d78 <__assert_fail@plt+0x5048>
   16c70:	ldrb	r3, [r1]
   16c74:	cmp	r3, #0
   16c78:	beq	16d78 <__assert_fail@plt+0x5048>
   16c7c:	rsb	r6, r0, r1
   16c80:	cmp	r6, #1000	; 0x3e8
   16c84:	bge	16d0c <__assert_fail@plt+0x4fdc>
   16c88:	add	r3, r6, #15
   16c8c:	mov	r1, r0
   16c90:	bic	r3, r3, #7
   16c94:	mov	r2, r6
   16c98:	sub	sp, sp, r3
   16c9c:	movw	r7, #29472	; 0x7320
   16ca0:	movw	r8, #27032	; 0x6998
   16ca4:	movt	r7, #4
   16ca8:	mov	r3, sp
   16cac:	movt	r8, #4
   16cb0:	lsr	r5, r3, #3
   16cb4:	lsl	ip, r5, #3
   16cb8:	mov	r0, ip
   16cbc:	bl	118c8 <memcpy@plt>
   16cc0:	mov	r3, #0
   16cc4:	mvn	r2, #0
   16cc8:	strb	r3, [r6, r5, lsl #3]
   16ccc:	ldr	sl, [r7]
   16cd0:	ldr	r9, [r8]
   16cd4:	str	r3, [r7]
   16cd8:	mov	r1, r0
   16cdc:	mov	r0, r3
   16ce0:	bl	16dd0 <__assert_fail@plt+0x50a0>
   16ce4:	str	sl, [r7]
   16ce8:	str	r9, [r8]
   16cec:	mov	r5, r0
   16cf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16cf4:	mov	r0, r5
   16cf8:	ldr	r3, [r4]
   16cfc:	cmp	r2, r3
   16d00:	bne	16dcc <__assert_fail@plt+0x509c>
   16d04:	sub	sp, fp, #32
   16d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d0c:	add	r0, r6, #1
   16d10:	movw	r7, #29472	; 0x7320
   16d14:	bl	22f44 <error@@Base+0x304>
   16d18:	mov	r1, r5
   16d1c:	mov	r2, r6
   16d20:	movt	r7, #4
   16d24:	movw	r9, #27032	; 0x6998
   16d28:	movt	r9, #4
   16d2c:	mov	r8, r0
   16d30:	bl	118c8 <memcpy@plt>
   16d34:	mov	r3, #0
   16d38:	mov	r1, r8
   16d3c:	strb	r3, [r8, r6]
   16d40:	mov	r0, r3
   16d44:	mvn	r2, #0
   16d48:	ldr	sl, [r7]
   16d4c:	ldr	r6, [r9]
   16d50:	str	r3, [r7]
   16d54:	bl	16dd0 <__assert_fail@plt+0x50a0>
   16d58:	cmp	r8, #0
   16d5c:	str	sl, [r7]
   16d60:	str	r6, [r9]
   16d64:	mov	r5, r0
   16d68:	beq	16cf0 <__assert_fail@plt+0x4fc0>
   16d6c:	mov	r0, r8
   16d70:	bl	1188c <free@plt>
   16d74:	b	16cf0 <__assert_fail@plt+0x4fc0>
   16d78:	mov	r3, #0
   16d7c:	movw	r6, #29472	; 0x7320
   16d80:	movw	r7, #27032	; 0x6998
   16d84:	movt	r6, #4
   16d88:	movt	r7, #4
   16d8c:	mov	r1, r5
   16d90:	mov	r0, r3
   16d94:	mvn	r2, #0
   16d98:	ldr	r9, [r6]
   16d9c:	ldr	r8, [r7]
   16da0:	str	r3, [r6]
   16da4:	bl	16dd0 <__assert_fail@plt+0x50a0>
   16da8:	str	r9, [r6]
   16dac:	str	r8, [r7]
   16db0:	mov	r5, r0
   16db4:	b	16cf0 <__assert_fail@plt+0x4fc0>
   16db8:	movw	r0, #6032	; 0x1790
   16dbc:	movt	r0, #3
   16dc0:	bl	2312c <error@@Base+0x4ec>
   16dc4:	mov	r5, r0
   16dc8:	b	16cf0 <__assert_fail@plt+0x4fc0>
   16dcc:	bl	11934 <__stack_chk_fail@plt>
   16dd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16dd4:	add	fp, sp, #32
   16dd8:	sub	sp, sp, #68	; 0x44
   16ddc:	movw	r3, #26864	; 0x68f0
   16de0:	movt	r3, #4
   16de4:	str	r3, [fp, #-60]	; 0xffffffc4
   16de8:	subs	r6, r0, #0
   16dec:	ldr	r3, [r3]
   16df0:	mov	r4, r1
   16df4:	mov	r5, r2
   16df8:	str	r3, [fp, #-40]	; 0xffffffd8
   16dfc:	beq	173a8 <__assert_fail@plt+0x5678>
   16e00:	movw	r0, #29472	; 0x7320
   16e04:	movt	r0, #4
   16e08:	cmp	r5, #0
   16e0c:	str	r0, [fp, #-56]	; 0xffffffc8
   16e10:	ldr	r3, [r0]
   16e14:	rsb	r3, r3, r6
   16e18:	str	r3, [fp, #-80]	; 0xffffffb0
   16e1c:	beq	172c4 <__assert_fail@plt+0x5594>
   16e20:	cmn	r5, #1
   16e24:	beq	172b4 <__assert_fail@plt+0x5584>
   16e28:	add	r0, r5, #1
   16e2c:	movw	r2, #29556	; 0x7374
   16e30:	str	r2, [fp, #-68]	; 0xffffffbc
   16e34:	bl	22f44 <error@@Base+0x304>
   16e38:	mov	r1, r4
   16e3c:	mov	r2, r5
   16e40:	str	r0, [fp, #-64]	; 0xffffffc0
   16e44:	bl	118c8 <memcpy@plt>
   16e48:	ldr	r4, [fp, #-64]	; 0xffffffc0
   16e4c:	movw	r0, #28268	; 0x6e6c
   16e50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16e54:	movt	r0, #4
   16e58:	str	r0, [fp, #-72]	; 0xffffffb8
   16e5c:	movt	r3, #4
   16e60:	str	r3, [fp, #-68]	; 0xffffffbc
   16e64:	mov	r3, #0
   16e68:	strb	r3, [r4, r5]
   16e6c:	mov	r0, r4
   16e70:	mov	r1, #36	; 0x24
   16e74:	bl	11b68 <strchr@plt>
   16e78:	subs	r5, r0, #0
   16e7c:	beq	16fe0 <__assert_fail@plt+0x52b0>
   16e80:	mov	r1, r4
   16e84:	mov	r0, r6
   16e88:	rsb	r2, r4, r5
   16e8c:	add	r4, r5, #1
   16e90:	bl	16bc4 <__assert_fail@plt+0x4e94>
   16e94:	ldrb	r7, [r5, #1]
   16e98:	cmp	r7, #36	; 0x24
   16e9c:	mov	r6, r0
   16ea0:	beq	16f44 <__assert_fail@plt+0x5214>
   16ea4:	bhi	16ef8 <__assert_fail@plt+0x51c8>
   16ea8:	cmp	r7, #0
   16eac:	bne	16f5c <__assert_fail@plt+0x522c>
   16eb0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   16eb4:	bl	1188c <free@plt>
   16eb8:	mov	r0, r6
   16ebc:	movw	r1, #6032	; 0x1790
   16ec0:	mov	r2, #1
   16ec4:	movt	r1, #3
   16ec8:	bl	16bc4 <__assert_fail@plt+0x4e94>
   16ecc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ed0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   16ed4:	ldr	r0, [r3]
   16ed8:	add	r0, r0, r1
   16edc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16ee0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16ee4:	ldr	r3, [r1]
   16ee8:	cmp	r2, r3
   16eec:	bne	17434 <__assert_fail@plt+0x5704>
   16ef0:	sub	sp, fp, #32
   16ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ef8:	cmp	r7, #40	; 0x28
   16efc:	beq	17214 <__assert_fail@plt+0x54e4>
   16f00:	cmp	r7, #123	; 0x7b
   16f04:	bne	16f5c <__assert_fail@plt+0x522c>
   16f08:	mov	sl, #125	; 0x7d
   16f0c:	sub	r0, fp, #44	; 0x2c
   16f10:	sub	r1, fp, #48	; 0x30
   16f14:	str	r4, [fp, #-48]	; 0xffffffd0
   16f18:	str	r6, [fp, #-44]	; 0xffffffd4
   16f1c:	bl	1c914 <__assert_fail@plt+0xabe4>
   16f20:	subs	r4, r0, #0
   16f24:	beq	17000 <__assert_fail@plt+0x52d0>
   16f28:	ldr	r4, [fp, #-48]	; 0xffffffd0
   16f2c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   16f30:	ldrb	r7, [r4]
   16f34:	cmp	r7, #0
   16f38:	beq	16eb0 <__assert_fail@plt+0x5180>
   16f3c:	add	r4, r4, #1
   16f40:	b	16e6c <__assert_fail@plt+0x513c>
   16f44:	mov	r1, r4
   16f48:	mov	r2, #1
   16f4c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   16f50:	ldrb	r7, [r5, #1]
   16f54:	mov	r6, r0
   16f58:	b	16f34 <__assert_fail@plt+0x5204>
   16f5c:	bl	11b20 <__ctype_b_loc@plt>
   16f60:	ldrb	r3, [r5]
   16f64:	lsl	r3, r3, #1
   16f68:	ldr	r2, [r0]
   16f6c:	ldrh	r3, [r2, r3]
   16f70:	tst	r3, #1
   16f74:	bne	16f34 <__assert_fail@plt+0x5204>
   16f78:	mov	r0, r4
   16f7c:	mov	r1, #1
   16f80:	bl	2c6f8 <error@@Base+0x9ab8>
   16f84:	subs	r7, r0, #0
   16f88:	beq	172fc <__assert_fail@plt+0x55cc>
   16f8c:	ldr	r8, [r7, #8]
   16f90:	ldrb	r3, [r8]
   16f94:	cmp	r3, #0
   16f98:	ldrb	r3, [r7, #20]
   16f9c:	bne	16fa8 <__assert_fail@plt+0x5278>
   16fa0:	tst	r3, #2
   16fa4:	beq	16fd8 <__assert_fail@plt+0x52a8>
   16fa8:	tst	r3, #1
   16fac:	bne	17294 <__assert_fail@plt+0x5564>
   16fb0:	mov	r0, r8
   16fb4:	bl	11b5c <strlen@plt>
   16fb8:	mov	r1, r8
   16fbc:	mov	r2, r0
   16fc0:	mov	r0, r6
   16fc4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   16fc8:	ldrb	r3, [r7, #20]
   16fcc:	tst	r3, #1
   16fd0:	mov	r6, r0
   16fd4:	bne	17284 <__assert_fail@plt+0x5554>
   16fd8:	ldrb	r7, [r5, #1]
   16fdc:	b	16f34 <__assert_fail@plt+0x5204>
   16fe0:	mov	r0, r4
   16fe4:	bl	11b5c <strlen@plt>
   16fe8:	mov	r1, r4
   16fec:	add	r2, r0, #1
   16ff0:	mov	r0, r6
   16ff4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   16ff8:	mov	r6, r0
   16ffc:	b	16eb0 <__assert_fail@plt+0x5180>
   17000:	add	r8, r5, #2
   17004:	mov	r1, sl
   17008:	mov	r0, r8
   1700c:	bl	11b68 <strchr@plt>
   17010:	subs	r9, r0, #0
   17014:	beq	17408 <__assert_fail@plt+0x56d8>
   17018:	mov	r0, r8
   1701c:	mov	r1, r9
   17020:	mov	r2, #36	; 0x24
   17024:	bl	23184 <error@@Base+0x544>
   17028:	cmp	r0, #0
   1702c:	beq	172a8 <__assert_fail@plt+0x5578>
   17030:	ldrb	r3, [r5, #2]
   17034:	cmp	r3, #0
   17038:	beq	17098 <__assert_fail@plt+0x5368>
   1703c:	mov	r1, r4
   17040:	mov	r4, r8
   17044:	b	17058 <__assert_fail@plt+0x5328>
   17048:	ldrb	r3, [r4, #1]
   1704c:	add	r4, r4, #1
   17050:	cmp	r3, #0
   17054:	beq	1709c <__assert_fail@plt+0x536c>
   17058:	cmp	r7, r3
   1705c:	addeq	r1, r1, #1
   17060:	beq	17048 <__assert_fail@plt+0x5318>
   17064:	cmp	sl, r3
   17068:	bne	17048 <__assert_fail@plt+0x5318>
   1706c:	subs	r1, r1, #1
   17070:	bcs	17048 <__assert_fail@plt+0x5318>
   17074:	mov	r0, r8
   17078:	mov	r1, r4
   1707c:	bl	16c40 <__assert_fail@plt+0x4f10>
   17080:	mov	r1, #0
   17084:	mov	r8, r0
   17088:	bl	119b8 <__rawmemchr@plt>
   1708c:	mov	r5, r8
   17090:	mov	r9, r0
   17094:	b	170a0 <__assert_fail@plt+0x5370>
   17098:	mov	r4, r8
   1709c:	mov	r5, #0
   170a0:	mov	r0, r8
   170a4:	mov	r1, r9
   170a8:	mov	r2, #58	; 0x3a
   170ac:	bl	23184 <error@@Base+0x544>
   170b0:	subs	sl, r0, #0
   170b4:	beq	1721c <__assert_fail@plt+0x54ec>
   170b8:	add	r7, sl, #1
   170bc:	mov	r1, r9
   170c0:	mov	r2, #61	; 0x3d
   170c4:	mov	r0, r7
   170c8:	bl	23184 <error@@Base+0x544>
   170cc:	subs	r3, r0, #0
   170d0:	beq	1721c <__assert_fail@plt+0x54ec>
   170d4:	rsb	sl, r8, sl
   170d8:	mov	r0, r8
   170dc:	str	r3, [fp, #-88]	; 0xffffffa8
   170e0:	mov	r1, sl
   170e4:	bl	2c6f8 <error@@Base+0x9ab8>
   170e8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   170ec:	subs	r1, r0, #0
   170f0:	str	r1, [fp, #-76]	; 0xffffffb4
   170f4:	beq	1733c <__assert_fail@plt+0x560c>
   170f8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   170fc:	ldr	sl, [r2, #8]
   17100:	ldrb	r2, [sl]
   17104:	cmp	r2, #0
   17108:	beq	171fc <__assert_fail@plt+0x54cc>
   1710c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17110:	ldrb	r2, [r1, #20]
   17114:	tst	r2, #1
   17118:	bne	17390 <__assert_fail@plt+0x5660>
   1711c:	rsb	r8, r7, r3
   17120:	mov	r1, r7
   17124:	add	r2, r8, #16
   17128:	add	r3, r3, #1
   1712c:	bic	r2, r2, #7
   17130:	rsb	r9, r3, r9
   17134:	sub	sp, sp, r2
   17138:	mov	r0, #37	; 0x25
   1713c:	add	r7, sp, #9
   17140:	mov	r2, r8
   17144:	strb	r0, [sp, #8]
   17148:	add	ip, sp, #8
   1714c:	mov	r0, r7
   17150:	str	ip, [fp, #-84]	; 0xffffffac
   17154:	str	r3, [fp, #-88]	; 0xffffffa8
   17158:	bl	118c8 <memcpy@plt>
   1715c:	add	r2, r9, #16
   17160:	ldr	r3, [fp, #-88]	; 0xffffffa8
   17164:	bic	r2, r2, #7
   17168:	mov	r0, #0
   1716c:	sub	sp, sp, r2
   17170:	strb	r0, [r7, r8]
   17174:	add	r8, sp, #9
   17178:	mov	r1, r3
   1717c:	mov	r2, r9
   17180:	mov	r0, #37	; 0x25
   17184:	strb	r0, [sp, #8]
   17188:	mov	r0, r8
   1718c:	add	r3, sp, #8
   17190:	str	r3, [fp, #-88]	; 0xffffffa8
   17194:	bl	118c8 <memcpy@plt>
   17198:	mov	r1, #0
   1719c:	mov	r0, r7
   171a0:	strb	r1, [r8, r9]
   171a4:	bl	24960 <error@@Base+0x1d20>
   171a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   171ac:	ldr	ip, [fp, #-84]	; 0xffffffac
   171b0:	subs	r9, r0, #0
   171b4:	beq	1737c <__assert_fail@plt+0x564c>
   171b8:	mov	r0, r8
   171bc:	add	r9, r9, #1
   171c0:	bl	24960 <error@@Base+0x1d20>
   171c4:	subs	r2, r0, #0
   171c8:	addne	r2, r2, #1
   171cc:	mov	r0, r6
   171d0:	str	r2, [sp, #4]
   171d4:	mov	r3, r8
   171d8:	mov	r2, r7
   171dc:	str	r9, [sp]
   171e0:	mov	r1, sl
   171e4:	bl	1baf8 <__assert_fail@plt+0x9dc8>
   171e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   171ec:	ldrb	r3, [r2, #20]
   171f0:	tst	r3, #1
   171f4:	mov	r6, r0
   171f8:	bne	172f0 <__assert_fail@plt+0x55c0>
   171fc:	cmp	r5, #0
   17200:	beq	1720c <__assert_fail@plt+0x54dc>
   17204:	mov	r0, r5
   17208:	bl	1188c <free@plt>
   1720c:	ldrb	r7, [r4]
   17210:	b	16f34 <__assert_fail@plt+0x5204>
   17214:	mov	sl, #41	; 0x29
   17218:	b	16f0c <__assert_fail@plt+0x51dc>
   1721c:	rsb	r9, r8, r9
   17220:	mov	r0, r8
   17224:	mov	r1, r9
   17228:	bl	2c6f8 <error@@Base+0x9ab8>
   1722c:	subs	r7, r0, #0
   17230:	beq	173c8 <__assert_fail@plt+0x5698>
   17234:	ldr	r8, [r7, #8]
   17238:	ldrb	r3, [r8]
   1723c:	cmp	r3, #0
   17240:	ldrb	r3, [r7, #20]
   17244:	beq	172e4 <__assert_fail@plt+0x55b4>
   17248:	tst	r3, #1
   1724c:	bne	173b4 <__assert_fail@plt+0x5684>
   17250:	mov	r0, r8
   17254:	bl	11b5c <strlen@plt>
   17258:	mov	r1, r8
   1725c:	mov	r2, r0
   17260:	mov	r0, r6
   17264:	bl	16bc4 <__assert_fail@plt+0x4e94>
   17268:	ldrb	r3, [r7, #20]
   1726c:	tst	r3, #1
   17270:	mov	r6, r0
   17274:	beq	171fc <__assert_fail@plt+0x54cc>
   17278:	mov	r0, r8
   1727c:	bl	1188c <free@plt>
   17280:	b	171fc <__assert_fail@plt+0x54cc>
   17284:	mov	r0, r8
   17288:	bl	1188c <free@plt>
   1728c:	ldrb	r7, [r5, #1]
   17290:	b	16f34 <__assert_fail@plt+0x5204>
   17294:	mov	r0, r7
   17298:	mov	r1, #0
   1729c:	bl	17538 <__assert_fail@plt+0x5808>
   172a0:	mov	r8, r0
   172a4:	b	16fb0 <__assert_fail@plt+0x5280>
   172a8:	mov	r5, r0
   172ac:	mov	r4, r9
   172b0:	b	170a0 <__assert_fail@plt+0x5370>
   172b4:	mov	r0, r4
   172b8:	bl	11b5c <strlen@plt>
   172bc:	mov	r5, r0
   172c0:	b	16e28 <__assert_fail@plt+0x50f8>
   172c4:	mov	r0, r6
   172c8:	movw	r1, #6032	; 0x1790
   172cc:	mov	r2, #1
   172d0:	movt	r1, #3
   172d4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   172d8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   172dc:	ldr	r0, [r1]
   172e0:	b	16edc <__assert_fail@plt+0x51ac>
   172e4:	tst	r3, #2
   172e8:	bne	17248 <__assert_fail@plt+0x5518>
   172ec:	b	171fc <__assert_fail@plt+0x54cc>
   172f0:	mov	r0, sl
   172f4:	bl	1188c <free@plt>
   172f8:	b	171fc <__assert_fail@plt+0x54cc>
   172fc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   17300:	ldr	r3, [r1]
   17304:	cmp	r3, #0
   17308:	beq	16fd8 <__assert_fail@plt+0x52a8>
   1730c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17310:	movw	r1, #2500	; 0x9c4
   17314:	movt	r1, #3
   17318:	ldr	r7, [r2]
   1731c:	mov	r2, #5
   17320:	bl	1191c <dcgettext@plt>
   17324:	mov	r2, #1
   17328:	mov	r3, r4
   1732c:	mov	r1, r0
   17330:	mov	r0, r7
   17334:	bl	22c40 <error@@Base>
   17338:	b	16fd8 <__assert_fail@plt+0x52a8>
   1733c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17340:	ldr	r3, [r2]
   17344:	cmp	r3, #0
   17348:	beq	171fc <__assert_fail@plt+0x54cc>
   1734c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17350:	mov	r2, #5
   17354:	movw	r1, #2500	; 0x9c4
   17358:	movt	r1, #3
   1735c:	ldr	r7, [r3]
   17360:	bl	1191c <dcgettext@plt>
   17364:	mov	r2, sl
   17368:	mov	r3, r8
   1736c:	mov	r1, r0
   17370:	mov	r0, r7
   17374:	bl	22c40 <error@@Base>
   17378:	b	171fc <__assert_fail@plt+0x54cc>
   1737c:	mov	r2, r8
   17380:	mov	r9, r7
   17384:	mov	r8, r3
   17388:	mov	r7, ip
   1738c:	b	171cc <__assert_fail@plt+0x549c>
   17390:	mov	r1, #0
   17394:	str	r3, [fp, #-88]	; 0xffffffa8
   17398:	bl	17538 <__assert_fail@plt+0x5808>
   1739c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   173a0:	mov	sl, r0
   173a4:	b	1711c <__assert_fail@plt+0x53ec>
   173a8:	bl	16b7c <__assert_fail@plt+0x4e4c>
   173ac:	mov	r6, r0
   173b0:	b	16e00 <__assert_fail@plt+0x50d0>
   173b4:	mov	r0, r7
   173b8:	mov	r1, #0
   173bc:	bl	17538 <__assert_fail@plt+0x5808>
   173c0:	mov	r8, r0
   173c4:	b	17250 <__assert_fail@plt+0x5520>
   173c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   173cc:	ldr	r3, [r1]
   173d0:	cmp	r3, #0
   173d4:	beq	171fc <__assert_fail@plt+0x54cc>
   173d8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   173dc:	movw	r1, #2500	; 0x9c4
   173e0:	movt	r1, #3
   173e4:	ldr	r7, [r2]
   173e8:	mov	r2, #5
   173ec:	bl	1191c <dcgettext@plt>
   173f0:	mov	r2, r9
   173f4:	mov	r3, r8
   173f8:	mov	r1, r0
   173fc:	mov	r0, r7
   17400:	bl	22c40 <error@@Base>
   17404:	b	171fc <__assert_fail@plt+0x54cc>
   17408:	movw	r3, #26244	; 0x6684
   1740c:	movt	r3, #4
   17410:	movw	r1, #2468	; 0x9a4
   17414:	mov	r2, #5
   17418:	ldr	r3, [r3]
   1741c:	movt	r1, #3
   17420:	ldr	r4, [r3]
   17424:	bl	1191c <dcgettext@plt>
   17428:	mov	r1, r0
   1742c:	mov	r0, r4
   17430:	bl	22d64 <error@@Base+0x124>
   17434:	bl	11934 <__stack_chk_fail@plt>
   17438:	push	{r3, r4, r5, r6, r7, lr}
   1743c:	subs	r4, r2, #0
   17440:	mov	r7, r0
   17444:	mov	r6, r1
   17448:	bne	1745c <__assert_fail@plt+0x572c>
   1744c:	b	174e0 <__assert_fail@plt+0x57b0>
   17450:	ldr	r4, [r4]
   17454:	cmp	r4, #0
   17458:	beq	174e0 <__assert_fail@plt+0x57b0>
   1745c:	mov	r0, r7
   17460:	mov	r1, r6
   17464:	ldr	r2, [r4, #4]
   17468:	bl	2c920 <error@@Base+0x9ce0>
   1746c:	subs	r5, r0, #0
   17470:	beq	17450 <__assert_fail@plt+0x5720>
   17474:	ldrb	r3, [r5, #20]
   17478:	tst	r3, #2
   1747c:	beq	174e8 <__assert_fail@plt+0x57b8>
   17480:	ldr	r2, [r4]
   17484:	mov	r0, r7
   17488:	mov	r1, r6
   1748c:	bl	17438 <__assert_fail@plt+0x5708>
   17490:	mov	r4, r0
   17494:	movw	r3, #29472	; 0x7320
   17498:	movt	r3, #4
   1749c:	ldr	r3, [r3]
   174a0:	cmp	r4, r3
   174a4:	bhi	1750c <__assert_fail@plt+0x57dc>
   174a8:	ldrb	r3, [r5, #20]
   174ac:	ldr	r5, [r5, #8]
   174b0:	tst	r3, #1
   174b4:	mov	r0, r5
   174b8:	beq	174f4 <__assert_fail@plt+0x57c4>
   174bc:	bl	11b5c <strlen@plt>
   174c0:	mov	r1, r5
   174c4:	mov	r2, r0
   174c8:	mov	r0, r4
   174cc:	bl	16dd0 <__assert_fail@plt+0x50a0>
   174d0:	mov	r4, r0
   174d4:	bl	11b5c <strlen@plt>
   174d8:	add	r0, r4, r0
   174dc:	pop	{r3, r4, r5, r6, r7, pc}
   174e0:	pop	{r3, r4, r5, r6, r7, lr}
   174e4:	b	16b7c <__assert_fail@plt+0x4e4c>
   174e8:	bl	16b7c <__assert_fail@plt+0x4e4c>
   174ec:	mov	r4, r0
   174f0:	b	17494 <__assert_fail@plt+0x5764>
   174f4:	bl	11b5c <strlen@plt>
   174f8:	mov	r1, r5
   174fc:	mov	r2, r0
   17500:	mov	r0, r4
   17504:	pop	{r3, r4, r5, r6, r7, lr}
   17508:	b	16bc4 <__assert_fail@plt+0x4e94>
   1750c:	mov	r0, r4
   17510:	movw	r1, #19524	; 0x4c44
   17514:	mov	r2, #1
   17518:	movt	r1, #3
   1751c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   17520:	mov	r4, r0
   17524:	b	174a8 <__assert_fail@plt+0x5778>
   17528:	mov	r1, r0
   1752c:	mvn	r2, #0
   17530:	mov	r0, #0
   17534:	b	16dd0 <__assert_fail@plt+0x50a0>
   17538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1753c:	movw	r6, #26864	; 0x68f0
   17540:	movt	r6, #4
   17544:	ldr	r2, [r0, #12]
   17548:	sub	sp, sp, #28
   1754c:	movw	r5, #26244	; 0x6684
   17550:	ldr	r3, [r6]
   17554:	cmp	r2, #0
   17558:	movt	r5, #4
   1755c:	movw	r7, #28268	; 0x6e6c
   17560:	movt	r7, #4
   17564:	addne	r2, r0, #12
   17568:	str	r3, [sp, #20]
   1756c:	addne	r3, sp, #24
   17570:	ldr	ip, [r5]
   17574:	mov	r4, r0
   17578:	strne	r2, [r3, #-8]!
   1757c:	mov	r8, r1
   17580:	strne	r3, [r5]
   17584:	ldr	r3, [r7]
   17588:	cmp	r3, #0
   1758c:	addeq	r3, r0, #12
   17590:	streq	r3, [r7]
   17594:	ldrb	r3, [r0, #20]
   17598:	moveq	fp, #1
   1759c:	movne	fp, #0
   175a0:	tst	r3, #64	; 0x40
   175a4:	beq	175c8 <__assert_fail@plt+0x5898>
   175a8:	ldr	r2, [r0, #20]
   175ac:	ubfx	r0, r2, #8, #15
   175b0:	cmp	r0, #0
   175b4:	addne	r3, r0, #32512	; 0x7f00
   175b8:	addne	r3, r3, #255	; 0xff
   175bc:	bfine	r2, r3, #8, #15
   175c0:	strne	r2, [r4, #20]
   175c4:	beq	17710 <__assert_fail@plt+0x59e0>
   175c8:	cmp	r8, #0
   175cc:	ldrb	r0, [r4, #20]
   175d0:	streq	r8, [sp, #12]
   175d4:	movwne	r3, #26824	; 0x68c8
   175d8:	movtne	r3, #4
   175dc:	ldrne	r2, [r8, #60]	; 0x3c
   175e0:	orr	r0, r0, #64	; 0x40
   175e4:	ldrne	r1, [r3]
   175e8:	ubfx	lr, r0, #1, #1
   175ec:	strb	r0, [r4, #20]
   175f0:	strne	r2, [r3]
   175f4:	strne	r1, [sp, #12]
   175f8:	cmp	lr, #0
   175fc:	bne	17690 <__assert_fail@plt+0x5960>
   17600:	movw	r9, #29472	; 0x7320
   17604:	movt	r9, #4
   17608:	movw	sl, #27032	; 0x6998
   1760c:	movt	sl, #4
   17610:	ldr	r3, [r9]
   17614:	mov	r0, lr
   17618:	ldr	r1, [r4, #8]
   1761c:	mvn	r2, #0
   17620:	str	lr, [r9]
   17624:	str	r3, [sp, #8]
   17628:	ldr	r3, [sl]
   1762c:	stm	sp, {r3, ip}
   17630:	bl	16dd0 <__assert_fail@plt+0x50a0>
   17634:	ldr	r1, [sp, #8]
   17638:	ldr	r3, [sp]
   1763c:	ldr	ip, [sp, #4]
   17640:	str	r1, [r9]
   17644:	str	r3, [sl]
   17648:	cmp	fp, #0
   1764c:	ldrb	r3, [r4, #20]
   17650:	str	ip, [r5]
   17654:	bfc	r3, #6, #1
   17658:	strb	r3, [r4, #20]
   1765c:	movne	r3, #0
   17660:	strne	r3, [r7]
   17664:	cmp	r8, #0
   17668:	ldrne	r2, [sp, #12]
   1766c:	movwne	r3, #26824	; 0x68c8
   17670:	movtne	r3, #4
   17674:	strne	r2, [r3]
   17678:	ldr	r2, [sp, #20]
   1767c:	ldr	r3, [r6]
   17680:	cmp	r2, r3
   17684:	bne	17738 <__assert_fail@plt+0x5a08>
   17688:	add	sp, sp, #28
   1768c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17690:	movw	r9, #29472	; 0x7320
   17694:	movt	r9, #4
   17698:	ldr	r3, [r4]
   1769c:	mov	r2, #0
   176a0:	ldr	r1, [r9]
   176a4:	movw	sl, #27032	; 0x6998
   176a8:	str	r2, [r9]
   176ac:	movt	sl, #4
   176b0:	mov	r0, r3
   176b4:	stm	sp, {r3, ip}
   176b8:	str	r1, [sp, #8]
   176bc:	bl	11b5c <strlen@plt>
   176c0:	ldr	r3, [sp]
   176c4:	movw	r2, #26824	; 0x68c8
   176c8:	movt	r2, #4
   176cc:	ldr	r2, [r2]
   176d0:	mov	r1, r0
   176d4:	mov	r0, r3
   176d8:	ldr	r3, [sl]
   176dc:	str	r3, [sp]
   176e0:	bl	17438 <__assert_fail@plt+0x5708>
   176e4:	movw	r1, #6032	; 0x1790
   176e8:	mov	r2, #1
   176ec:	movt	r1, #3
   176f0:	bl	16bc4 <__assert_fail@plt+0x4e94>
   176f4:	ldr	r3, [sp]
   176f8:	ldr	r0, [r9]
   176fc:	ldr	ip, [sp, #4]
   17700:	str	r3, [sl]
   17704:	ldr	r3, [sp, #8]
   17708:	str	r3, [r9]
   1770c:	b	17648 <__assert_fail@plt+0x5918>
   17710:	ldr	ip, [r5]
   17714:	mov	r2, #5
   17718:	movw	r1, #2536	; 0x9e8
   1771c:	movt	r1, #3
   17720:	ldr	r5, [ip]
   17724:	bl	1191c <dcgettext@plt>
   17728:	ldr	r2, [r4]
   1772c:	mov	r1, r0
   17730:	mov	r0, r5
   17734:	bl	22d64 <error@@Base+0x124>
   17738:	bl	11934 <__stack_chk_fail@plt>
   1773c:	subs	r2, r1, #0
   17740:	mov	r1, r0
   17744:	push	{r3, r4, r5, r6, r7, lr}
   17748:	beq	177a8 <__assert_fail@plt+0x5a78>
   1774c:	ldr	r3, [r2, #16]
   17750:	movw	r5, #26824	; 0x68c8
   17754:	ldr	r2, [r2, #60]	; 0x3c
   17758:	movt	r5, #4
   1775c:	movw	r4, #28268	; 0x6e6c
   17760:	cmp	r3, #0
   17764:	movt	r4, #4
   17768:	ldr	r7, [r5]
   1776c:	str	r2, [r5]
   17770:	ldr	r6, [r4]
   17774:	beq	177a0 <__assert_fail@plt+0x5a70>
   17778:	ldr	r2, [r3]
   1777c:	cmp	r2, #0
   17780:	beq	177a0 <__assert_fail@plt+0x5a70>
   17784:	mvn	r2, #0
   17788:	mov	r0, #0
   1778c:	str	r3, [r4]
   17790:	bl	16dd0 <__assert_fail@plt+0x50a0>
   17794:	str	r7, [r5]
   17798:	str	r6, [r4]
   1779c:	pop	{r3, r4, r5, r6, r7, pc}
   177a0:	mov	r3, #0
   177a4:	b	17784 <__assert_fail@plt+0x5a54>
   177a8:	mov	r0, r2
   177ac:	mvn	r2, #0
   177b0:	pop	{r3, r4, r5, r6, r7, lr}
   177b4:	b	16dd0 <__assert_fail@plt+0x50a0>
   177b8:	push	{r3, r4, r5, r6, r7, lr}
   177bc:	movw	r4, #29472	; 0x7320
   177c0:	movw	r5, #27032	; 0x6998
   177c4:	movt	r4, #4
   177c8:	movt	r5, #4
   177cc:	mov	r3, #0
   177d0:	ldr	r7, [r4]
   177d4:	ldr	r6, [r5]
   177d8:	str	r3, [r4]
   177dc:	bl	1773c <__assert_fail@plt+0x5a0c>
   177e0:	str	r7, [r4]
   177e4:	str	r6, [r5]
   177e8:	pop	{r3, r4, r5, r6, r7, pc}
   177ec:	movw	r3, #29472	; 0x7320
   177f0:	movw	r2, #27032	; 0x6998
   177f4:	movt	r3, #4
   177f8:	movt	r2, #4
   177fc:	push	{r4}		; (str r4, [sp, #-4]!)
   17800:	mov	ip, #0
   17804:	ldr	r4, [r3]
   17808:	ldr	r2, [r2]
   1780c:	str	r4, [r0]
   17810:	str	r2, [r1]
   17814:	pop	{r4}		; (ldr r4, [sp], #4)
   17818:	str	ip, [r3]
   1781c:	b	16b7c <__assert_fail@plt+0x4e4c>
   17820:	push	{r4, r5, r6, lr}
   17824:	movw	r4, #29472	; 0x7320
   17828:	movt	r4, #4
   1782c:	mov	r5, r0
   17830:	mov	r6, r1
   17834:	ldr	r0, [r4]
   17838:	bl	1188c <free@plt>
   1783c:	movw	r3, #27032	; 0x6998
   17840:	movt	r3, #4
   17844:	str	r5, [r4]
   17848:	str	r6, [r3]
   1784c:	pop	{r4, r5, r6, pc}
   17850:	ldr	r2, [r0, #4]
   17854:	ldrb	r3, [r2]
   17858:	cmp	r3, #0
   1785c:	beq	17880 <__assert_fail@plt+0x5b50>
   17860:	mov	r0, #0
   17864:	mov	ip, r3
   17868:	ldrb	r3, [r2, #1]!
   1786c:	cmp	r3, #0
   17870:	and	r1, r3, #15
   17874:	add	r0, r0, ip, lsl r1
   17878:	bne	17864 <__assert_fail@plt+0x5b34>
   1787c:	bx	lr
   17880:	mov	r0, r3
   17884:	bx	lr
   17888:	ldr	r2, [r0, #4]
   1788c:	ldrb	r3, [r2]
   17890:	cmp	r3, #0
   17894:	beq	178b8 <__assert_fail@plt+0x5b88>
   17898:	mov	r0, #0
   1789c:	mov	ip, r3
   178a0:	ldrb	r3, [r2, #1]!
   178a4:	cmp	r3, #0
   178a8:	and	r1, r3, #7
   178ac:	add	r0, r0, ip, lsl r1
   178b0:	bne	1789c <__assert_fail@plt+0x5b6c>
   178b4:	bx	lr
   178b8:	mov	r0, r3
   178bc:	bx	lr
   178c0:	ldrb	r3, [r0, #79]	; 0x4f
   178c4:	orr	r3, r3, #4
   178c8:	strb	r3, [r0, #79]	; 0x4f
   178cc:	bx	lr
   178d0:	ldrb	r3, [r0, #78]	; 0x4e
   178d4:	bfc	r3, #5, #1
   178d8:	strb	r3, [r0, #78]	; 0x4e
   178dc:	bx	lr
   178e0:	push	{r4, lr}
   178e4:	mov	r4, r0
   178e8:	ldr	r0, [r0]
   178ec:	sub	sp, sp, #8
   178f0:	cmp	r0, #0
   178f4:	beq	17904 <__assert_fail@plt+0x5bd4>
   178f8:	ldrb	r3, [r0]
   178fc:	cmp	r3, #0
   17900:	bne	17aa0 <__assert_fail@plt+0x5d70>
   17904:	ldr	r0, [r4, #4]
   17908:	cmp	r0, #0
   1790c:	beq	1791c <__assert_fail@plt+0x5bec>
   17910:	ldrb	r3, [r0]
   17914:	cmp	r3, #0
   17918:	bne	17a70 <__assert_fail@plt+0x5d40>
   1791c:	ldr	r0, [r4, #8]
   17920:	cmp	r0, #0
   17924:	beq	17934 <__assert_fail@plt+0x5c04>
   17928:	ldrb	r3, [r0]
   1792c:	cmp	r3, #0
   17930:	bne	17a40 <__assert_fail@plt+0x5d10>
   17934:	ldr	r0, [r4, #24]
   17938:	cmp	r0, #0
   1793c:	beq	1794c <__assert_fail@plt+0x5c1c>
   17940:	ldrb	r3, [r0]
   17944:	cmp	r3, #0
   17948:	bne	17a10 <__assert_fail@plt+0x5ce0>
   1794c:	ldr	r4, [r4, #12]
   17950:	cmp	r4, #0
   17954:	bne	17968 <__assert_fail@plt+0x5c38>
   17958:	b	179dc <__assert_fail@plt+0x5cac>
   1795c:	ldr	r4, [r4]
   17960:	cmp	r4, #0
   17964:	beq	179dc <__assert_fail@plt+0x5cac>
   17968:	ldrb	r3, [r4, #17]
   1796c:	tst	r3, #4
   17970:	bne	1798c <__assert_fail@plt+0x5c5c>
   17974:	ldr	r0, [r4, #4]
   17978:	cmp	r0, #0
   1797c:	beq	1798c <__assert_fail@plt+0x5c5c>
   17980:	ldrb	r3, [r0]
   17984:	cmp	r3, #0
   17988:	bne	179e4 <__assert_fail@plt+0x5cb4>
   1798c:	ldr	r0, [r4, #8]
   17990:	cmp	r0, #0
   17994:	beq	1795c <__assert_fail@plt+0x5c2c>
   17998:	ldrb	r3, [r0]
   1799c:	cmp	r3, #0
   179a0:	beq	1795c <__assert_fail@plt+0x5c2c>
   179a4:	bl	2b978 <error@@Base+0x8d38>
   179a8:	cmp	r0, #0
   179ac:	bne	1795c <__assert_fail@plt+0x5c2c>
   179b0:	ldr	ip, [r4, #8]
   179b4:	movw	r1, #2628	; 0xa44
   179b8:	ldr	r2, [r4, #4]
   179bc:	movt	r1, #3
   179c0:	movw	r3, #2676	; 0xa74
   179c4:	movt	r3, #3
   179c8:	str	ip, [sp]
   179cc:	bl	22c40 <error@@Base>
   179d0:	ldr	r4, [r4]
   179d4:	cmp	r4, #0
   179d8:	bne	17968 <__assert_fail@plt+0x5c38>
   179dc:	add	sp, sp, #8
   179e0:	pop	{r4, pc}
   179e4:	bl	2b978 <error@@Base+0x8d38>
   179e8:	cmp	r0, #0
   179ec:	bne	1798c <__assert_fail@plt+0x5c5c>
   179f0:	ldr	r2, [r4, #4]
   179f4:	movw	r1, #2628	; 0xa44
   179f8:	movw	r3, #4232	; 0x1088
   179fc:	movt	r1, #3
   17a00:	movt	r3, #3
   17a04:	str	r2, [sp]
   17a08:	bl	22c40 <error@@Base>
   17a0c:	b	1798c <__assert_fail@plt+0x5c5c>
   17a10:	bl	2b978 <error@@Base+0x8d38>
   17a14:	cmp	r0, #0
   17a18:	bne	1794c <__assert_fail@plt+0x5c1c>
   17a1c:	ldr	ip, [r4, #24]
   17a20:	movw	r1, #2628	; 0xa44
   17a24:	ldr	r2, [r4]
   17a28:	movt	r1, #3
   17a2c:	movw	r3, #2676	; 0xa74
   17a30:	movt	r3, #3
   17a34:	str	ip, [sp]
   17a38:	bl	22c40 <error@@Base>
   17a3c:	b	1794c <__assert_fail@plt+0x5c1c>
   17a40:	bl	2b978 <error@@Base+0x8d38>
   17a44:	cmp	r0, #0
   17a48:	bne	17934 <__assert_fail@plt+0x5c04>
   17a4c:	ldr	ip, [r4, #8]
   17a50:	movw	r1, #2628	; 0xa44
   17a54:	ldr	r2, [r4]
   17a58:	movt	r1, #3
   17a5c:	movw	r3, #2668	; 0xa6c
   17a60:	movt	r3, #3
   17a64:	str	ip, [sp]
   17a68:	bl	22c40 <error@@Base>
   17a6c:	b	17934 <__assert_fail@plt+0x5c04>
   17a70:	bl	2b978 <error@@Base+0x8d38>
   17a74:	cmp	r0, #0
   17a78:	bne	1791c <__assert_fail@plt+0x5bec>
   17a7c:	ldr	ip, [r4, #4]
   17a80:	movw	r1, #2628	; 0xa44
   17a84:	ldr	r2, [r4]
   17a88:	movt	r1, #3
   17a8c:	movw	r3, #2660	; 0xa64
   17a90:	movt	r3, #3
   17a94:	str	ip, [sp]
   17a98:	bl	22c40 <error@@Base>
   17a9c:	b	1791c <__assert_fail@plt+0x5bec>
   17aa0:	bl	2b978 <error@@Base+0x8d38>
   17aa4:	cmp	r0, #0
   17aa8:	bne	17904 <__assert_fail@plt+0x5bd4>
   17aac:	ldr	r2, [r4]
   17ab0:	movw	r1, #2628	; 0xa44
   17ab4:	movw	r3, #4232	; 0x1088
   17ab8:	movt	r1, #3
   17abc:	movt	r3, #3
   17ac0:	str	r2, [sp]
   17ac4:	bl	22c40 <error@@Base>
   17ac8:	b	17904 <__assert_fail@plt+0x5bd4>
   17acc:	ldr	r0, [r0, #4]
   17ad0:	ldr	r1, [r1, #4]
   17ad4:	cmp	r0, r1
   17ad8:	beq	17ae0 <__assert_fail@plt+0x5db0>
   17adc:	b	1182c <strcmp@plt>
   17ae0:	mov	r0, #0
   17ae4:	bx	lr
   17ae8:	push	{r4, lr}
   17aec:	movw	r4, #26864	; 0x68f0
   17af0:	movt	r4, #4
   17af4:	ldrb	r2, [r0]
   17af8:	sub	sp, sp, #96	; 0x60
   17afc:	mov	r3, r0
   17b00:	ldr	r1, [r4]
   17b04:	cmp	r2, #0
   17b08:	str	r1, [sp, #92]	; 0x5c
   17b0c:	beq	17ba0 <__assert_fail@plt+0x5e70>
   17b10:	cmp	r2, #46	; 0x2e
   17b14:	bne	17b5c <__assert_fail@plt+0x5e2c>
   17b18:	ldrb	r2, [r3, #1]
   17b1c:	cmp	r2, #47	; 0x2f
   17b20:	bne	17b6c <__assert_fail@plt+0x5e3c>
   17b24:	ldrb	r2, [r3, #2]
   17b28:	cmp	r2, #0
   17b2c:	beq	17b6c <__assert_fail@plt+0x5e3c>
   17b30:	cmp	r2, #47	; 0x2f
   17b34:	add	r1, r3, #2
   17b38:	bne	17b98 <__assert_fail@plt+0x5e68>
   17b3c:	add	r1, r3, #3
   17b40:	mov	r3, r1
   17b44:	add	r1, r1, #1
   17b48:	ldrb	r2, [r3]
   17b4c:	cmp	r2, #47	; 0x2f
   17b50:	beq	17b40 <__assert_fail@plt+0x5e10>
   17b54:	cmp	r2, #46	; 0x2e
   17b58:	beq	17b18 <__assert_fail@plt+0x5de8>
   17b5c:	movw	r1, #2684	; 0xa7c
   17b60:	cmp	r2, #0
   17b64:	movt	r1, #3
   17b68:	moveq	r3, r1
   17b6c:	movw	r0, #27036	; 0x699c
   17b70:	mov	r1, sp
   17b74:	movt	r0, #4
   17b78:	str	r3, [sp, #4]
   17b7c:	bl	2e9d4 <error@@Base+0xbd94>
   17b80:	ldr	r2, [sp, #92]	; 0x5c
   17b84:	ldr	r3, [r4]
   17b88:	cmp	r2, r3
   17b8c:	bne	17bc0 <__assert_fail@plt+0x5e90>
   17b90:	add	sp, sp, #96	; 0x60
   17b94:	pop	{r4, pc}
   17b98:	mov	r3, r1
   17b9c:	b	17b10 <__assert_fail@plt+0x5de0>
   17ba0:	movw	r0, #2688	; 0xa80
   17ba4:	movw	r1, #2704	; 0xa90
   17ba8:	movw	r3, #2592	; 0xa20
   17bac:	movt	r0, #3
   17bb0:	movt	r1, #3
   17bb4:	mov	r2, #84	; 0x54
   17bb8:	movt	r3, #3
   17bbc:	bl	11d30 <__assert_fail@plt>
   17bc0:	bl	11934 <__stack_chk_fail@plt>
   17bc4:	push	{r4, r5, r6, r7, r8, r9, lr}
   17bc8:	movw	r6, #26864	; 0x68f0
   17bcc:	movt	r6, #4
   17bd0:	ldrb	r2, [r0]
   17bd4:	sub	sp, sp, #100	; 0x64
   17bd8:	mov	r7, r0
   17bdc:	ldr	r3, [r6]
   17be0:	cmp	r2, #0
   17be4:	str	r3, [sp, #92]	; 0x5c
   17be8:	beq	17cf4 <__assert_fail@plt+0x5fc4>
   17bec:	bl	2b978 <error@@Base+0x8d38>
   17bf0:	cmp	r0, #0
   17bf4:	beq	17cd8 <__assert_fail@plt+0x5fa8>
   17bf8:	movw	r0, #27036	; 0x699c
   17bfc:	mov	r1, sp
   17c00:	movt	r0, #4
   17c04:	str	r7, [sp, #4]
   17c08:	bl	2e8ec <error@@Base+0xbcac>
   17c0c:	ldr	r5, [r0]
   17c10:	mov	r9, r0
   17c14:	cmp	r5, #0
   17c18:	beq	17c90 <__assert_fail@plt+0x5f60>
   17c1c:	movw	r8, #26848	; 0x68e0
   17c20:	movt	r8, #4
   17c24:	ldr	r3, [r8]
   17c28:	cmp	r5, r3
   17c2c:	beq	17c3c <__assert_fail@plt+0x5f0c>
   17c30:	ldr	r3, [r5, #72]	; 0x48
   17c34:	cmp	r3, #0
   17c38:	beq	17ccc <__assert_fail@plt+0x5f9c>
   17c3c:	mov	r0, #88	; 0x58
   17c40:	bl	22f78 <error@@Base+0x338>
   17c44:	ldr	r2, [r8]
   17c48:	mvn	r3, #0
   17c4c:	cmp	r5, r2
   17c50:	mov	r4, r0
   17c54:	str	r7, [r0, #4]
   17c58:	str	r7, [r0]
   17c5c:	strh	r3, [r0, #76]	; 0x4c
   17c60:	beq	17cac <__assert_fail@plt+0x5f7c>
   17c64:	ldr	r3, [r5, #52]	; 0x34
   17c68:	mov	r0, r4
   17c6c:	str	r5, [r4, #72]	; 0x48
   17c70:	str	r4, [r3, #48]	; 0x30
   17c74:	str	r4, [r5, #52]	; 0x34
   17c78:	ldr	r2, [sp, #92]	; 0x5c
   17c7c:	ldr	r3, [r6]
   17c80:	cmp	r2, r3
   17c84:	bne	17cd4 <__assert_fail@plt+0x5fa4>
   17c88:	add	sp, sp, #100	; 0x64
   17c8c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17c90:	mov	r0, #88	; 0x58
   17c94:	bl	22f78 <error@@Base+0x338>
   17c98:	mvn	r3, #0
   17c9c:	mov	r4, r0
   17ca0:	str	r7, [r0, #4]
   17ca4:	str	r7, [r0]
   17ca8:	strh	r3, [r0, #76]	; 0x4c
   17cac:	str	r4, [r4, #52]	; 0x34
   17cb0:	mov	r2, r9
   17cb4:	movw	r0, #27036	; 0x699c
   17cb8:	mov	r1, r4
   17cbc:	movt	r0, #4
   17cc0:	bl	2ea00 <error@@Base+0xbdc0>
   17cc4:	mov	r0, r4
   17cc8:	b	17c78 <__assert_fail@plt+0x5f48>
   17ccc:	mov	r0, r5
   17cd0:	b	17c78 <__assert_fail@plt+0x5f48>
   17cd4:	bl	11934 <__stack_chk_fail@plt>
   17cd8:	movw	r0, #2712	; 0xa98
   17cdc:	movw	r1, #2704	; 0xa90
   17ce0:	movt	r0, #3
   17ce4:	movt	r1, #3
   17ce8:	mov	r2, #158	; 0x9e
   17cec:	ldr	r3, [pc, #28]	; 17d10 <__assert_fail@plt+0x5fe0>
   17cf0:	bl	11d30 <__assert_fail@plt>
   17cf4:	movw	r0, #2688	; 0xa80
   17cf8:	movw	r1, #2704	; 0xa90
   17cfc:	movt	r0, #3
   17d00:	movt	r1, #3
   17d04:	mov	r2, #157	; 0x9d
   17d08:	ldr	r3, [pc]	; 17d10 <__assert_fail@plt+0x5fe0>
   17d0c:	bl	11d30 <__assert_fail@plt>
   17d10:	andeq	r0, r3, ip, lsr #20
   17d14:	push	{r4, r5, r6, r7, r8, r9, lr}
   17d18:	movw	r7, #26864	; 0x68f0
   17d1c:	movt	r7, #4
   17d20:	ldr	r5, [r0, #4]
   17d24:	sub	sp, sp, #108	; 0x6c
   17d28:	mov	r6, r0
   17d2c:	ldr	r3, [r7]
   17d30:	cmp	r1, r5
   17d34:	mov	r4, r1
   17d38:	str	r1, [sp, #12]
   17d3c:	str	r3, [sp, #100]	; 0x64
   17d40:	beq	17fe8 <__assert_fail@plt+0x62b8>
   17d44:	mov	r0, r5
   17d48:	bl	1182c <strcmp@plt>
   17d4c:	cmp	r0, #0
   17d50:	beq	17fe8 <__assert_fail@plt+0x62b8>
   17d54:	str	r5, [sp, #12]
   17d58:	b	17d60 <__assert_fail@plt+0x6030>
   17d5c:	mov	r6, ip
   17d60:	ldr	ip, [r6, #56]	; 0x38
   17d64:	cmp	ip, #0
   17d68:	bne	17d5c <__assert_fail@plt+0x602c>
   17d6c:	ldr	r0, [r6, #4]
   17d70:	cmp	r5, r0
   17d74:	beq	17d88 <__assert_fail@plt+0x6058>
   17d78:	mov	r1, r5
   17d7c:	bl	1182c <strcmp@plt>
   17d80:	cmp	r0, #0
   17d84:	bne	18084 <__assert_fail@plt+0x6354>
   17d88:	movw	r0, #27036	; 0x699c
   17d8c:	mov	r1, r6
   17d90:	movt	r0, #4
   17d94:	bl	2ebb8 <error@@Base+0xbf78>
   17d98:	cmp	r6, r0
   17d9c:	bne	18084 <__assert_fail@plt+0x6354>
   17da0:	movw	r0, #27036	; 0x699c
   17da4:	add	r1, sp, #8
   17da8:	movt	r0, #4
   17dac:	str	r4, [sp, #12]
   17db0:	bl	2e8ec <error@@Base+0xbcac>
   17db4:	ldr	ip, [r6, #72]	; 0x48
   17db8:	cmp	ip, #0
   17dbc:	ldr	r8, [r0]
   17dc0:	str	r4, [r6, #4]
   17dc4:	beq	17dd8 <__assert_fail@plt+0x60a8>
   17dc8:	str	r4, [ip, #4]
   17dcc:	ldr	ip, [ip, #48]	; 0x30
   17dd0:	cmp	ip, #0
   17dd4:	bne	17dc8 <__assert_fail@plt+0x6098>
   17dd8:	cmp	r8, #0
   17ddc:	beq	18000 <__assert_fail@plt+0x62d0>
   17de0:	movw	r3, #26848	; 0x68e0
   17de4:	movt	r3, #4
   17de8:	ldr	r3, [r3]
   17dec:	cmp	r8, r3
   17df0:	beq	18000 <__assert_fail@plt+0x62d0>
   17df4:	ldr	r5, [r6, #16]
   17df8:	cmp	r5, #0
   17dfc:	beq	17eac <__assert_fail@plt+0x617c>
   17e00:	ldr	r3, [r8, #16]
   17e04:	cmp	r3, #0
   17e08:	streq	r5, [r8, #16]
   17e0c:	beq	17eac <__assert_fail@plt+0x617c>
   17e10:	cmp	r5, r3
   17e14:	beq	17eac <__assert_fail@plt+0x617c>
   17e18:	ldr	r0, [r3]
   17e1c:	cmp	r0, #0
   17e20:	beq	1804c <__assert_fail@plt+0x631c>
   17e24:	mov	r2, #5
   17e28:	movw	r1, #2740	; 0xab4
   17e2c:	mov	r0, #0
   17e30:	movt	r1, #3
   17e34:	bl	1191c <dcgettext@plt>
   17e38:	ldr	ip, [r8, #16]
   17e3c:	ldr	r2, [r6]
   17e40:	ldm	ip, {r3, ip}
   17e44:	str	ip, [sp]
   17e48:	mov	r1, r0
   17e4c:	mov	r0, r5
   17e50:	bl	22c40 <error@@Base>
   17e54:	mov	r2, #5
   17e58:	movw	r1, #2844	; 0xb1c
   17e5c:	mov	r0, #0
   17e60:	movt	r1, #3
   17e64:	ldr	r5, [r6, #16]
   17e68:	bl	1191c <dcgettext@plt>
   17e6c:	mov	r3, r4
   17e70:	ldr	r2, [r6]
   17e74:	mov	r1, r0
   17e78:	mov	r0, r5
   17e7c:	bl	22c40 <error@@Base>
   17e80:	mov	r2, #5
   17e84:	movw	r1, #2896	; 0xb50
   17e88:	mov	r0, #0
   17e8c:	movt	r1, #3
   17e90:	ldr	r5, [r6, #16]
   17e94:	bl	1191c <dcgettext@plt>
   17e98:	mov	r2, r4
   17e9c:	ldr	r3, [r6]
   17ea0:	mov	r1, r0
   17ea4:	mov	r0, r5
   17ea8:	bl	22c40 <error@@Base>
   17eac:	ldr	r3, [r8, #12]
   17eb0:	cmp	r3, #0
   17eb4:	bne	17ec0 <__assert_fail@plt+0x6190>
   17eb8:	b	18040 <__assert_fail@plt+0x6310>
   17ebc:	mov	r3, r0
   17ec0:	ldr	r0, [r3]
   17ec4:	cmp	r0, #0
   17ec8:	bne	17ebc <__assert_fail@plt+0x618c>
   17ecc:	ldr	r2, [r6, #12]
   17ed0:	str	r2, [r3]
   17ed4:	add	r0, r8, #60	; 0x3c
   17ed8:	ldr	r1, [r6, #60]	; 0x3c
   17edc:	bl	2cadc <error@@Base+0x9e9c>
   17ee0:	ldr	r5, [r8, #72]	; 0x48
   17ee4:	cmp	r5, #0
   17ee8:	beq	18018 <__assert_fail@plt+0x62e8>
   17eec:	ldrb	r9, [r6, #78]	; 0x4e
   17ef0:	lsrs	r0, r9, #7
   17ef4:	beq	17f14 <__assert_fail@plt+0x61e4>
   17ef8:	ldr	r5, [r6, #72]	; 0x48
   17efc:	cmp	r5, #0
   17f00:	beq	180b0 <__assert_fail@plt+0x6380>
   17f04:	ldrb	r1, [r8, #78]	; 0x4e
   17f08:	mov	r0, #1
   17f0c:	lsr	ip, r1, #7
   17f10:	b	17f1c <__assert_fail@plt+0x61ec>
   17f14:	ldrb	r1, [r8, #78]	; 0x4e
   17f18:	lsr	ip, r1, #7
   17f1c:	ldrd	r2, [r6, #32]
   17f20:	orr	r9, r1, r9
   17f24:	ldrd	r4, [r8, #32]
   17f28:	ubfx	r9, r9, #2, #1
   17f2c:	bfi	r1, r9, #2, #1
   17f30:	orr	r0, r0, ip
   17f34:	cmp	r3, r5
   17f38:	cmpeq	r2, r4
   17f3c:	strdhi	r2, [r8, #32]
   17f40:	ldrd	r2, [r6, #40]	; 0x28
   17f44:	uxtb	ip, r1
   17f48:	strb	r1, [r8, #78]	; 0x4e
   17f4c:	ldrb	r4, [r6, #78]	; 0x4e
   17f50:	strd	r2, [r8, #40]	; 0x28
   17f54:	mov	r3, ip
   17f58:	orr	r4, ip, r4
   17f5c:	ldrb	r1, [r8, #79]	; 0x4f
   17f60:	ubfx	r2, r4, #4, #1
   17f64:	bfi	r3, r2, #4, #1
   17f68:	strb	r3, [r8, #78]	; 0x4e
   17f6c:	ldrb	ip, [r6, #78]	; 0x4e
   17f70:	mov	r3, r1
   17f74:	ldrb	r2, [r8, #78]	; 0x4e
   17f78:	orr	ip, r2, ip
   17f7c:	ubfx	ip, ip, #5, #1
   17f80:	bfi	r2, ip, #5, #1
   17f84:	strb	r2, [r8, #78]	; 0x4e
   17f88:	ldrb	ip, [r6, #78]	; 0x4e
   17f8c:	uxtb	r2, r2
   17f90:	orr	ip, r2, ip
   17f94:	ubfx	ip, ip, #6, #1
   17f98:	bfi	r2, ip, #6, #1
   17f9c:	bfi	r2, r0, #7, #1
   17fa0:	strb	r2, [r8, #78]	; 0x4e
   17fa4:	ldrb	r2, [r6, #79]	; 0x4f
   17fa8:	orr	r1, r1, r2
   17fac:	bfi	r3, r1, #0, #1
   17fb0:	strb	r3, [r8, #79]	; 0x4f
   17fb4:	ldrb	r2, [r6, #79]	; 0x4f
   17fb8:	uxtb	r3, r3
   17fbc:	orr	r2, r3, r2
   17fc0:	ubfx	r2, r2, #1, #1
   17fc4:	bfi	r3, r2, #1, #1
   17fc8:	strb	r3, [r8, #79]	; 0x4f
   17fcc:	ldrb	r2, [r6, #79]	; 0x4f
   17fd0:	uxtb	r3, r3
   17fd4:	orr	r2, r3, r2
   17fd8:	ubfx	r2, r2, #5, #1
   17fdc:	bfi	r3, r2, #5, #1
   17fe0:	strb	r3, [r8, #79]	; 0x4f
   17fe4:	str	r8, [r6, #56]	; 0x38
   17fe8:	ldr	r2, [sp, #100]	; 0x64
   17fec:	ldr	r3, [r7]
   17ff0:	cmp	r2, r3
   17ff4:	bne	18080 <__assert_fail@plt+0x6350>
   17ff8:	add	sp, sp, #108	; 0x6c
   17ffc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18000:	mov	r2, r0
   18004:	mov	r1, r6
   18008:	movw	r0, #27036	; 0x699c
   1800c:	movt	r0, #4
   18010:	bl	2ea00 <error@@Base+0xbdc0>
   18014:	b	17fe8 <__assert_fail@plt+0x62b8>
   18018:	ldr	r3, [r6, #72]	; 0x48
   1801c:	ldrb	r1, [r8, #78]	; 0x4e
   18020:	cmp	r3, #0
   18024:	beq	18070 <__assert_fail@plt+0x6340>
   18028:	lsrs	ip, r1, #7
   1802c:	bne	18088 <__assert_fail@plt+0x6358>
   18030:	ldrb	r9, [r6, #78]	; 0x4e
   18034:	str	r3, [r8, #72]	; 0x48
   18038:	lsr	r0, r9, #7
   1803c:	b	17f1c <__assert_fail@plt+0x61ec>
   18040:	ldr	r3, [r6, #12]
   18044:	str	r3, [r8, #12]
   18048:	b	17ed4 <__assert_fail@plt+0x61a4>
   1804c:	mov	r2, #5
   18050:	movw	r1, #2788	; 0xae4
   18054:	movt	r1, #3
   18058:	bl	1191c <dcgettext@plt>
   1805c:	ldr	r2, [r6]
   18060:	mov	r1, r0
   18064:	mov	r0, r5
   18068:	bl	22c40 <error@@Base>
   1806c:	b	17e54 <__assert_fail@plt+0x6124>
   18070:	ldrb	r9, [r6, #78]	; 0x4e
   18074:	lsr	ip, r1, #7
   18078:	lsr	r0, r9, #7
   1807c:	b	17f1c <__assert_fail@plt+0x61ec>
   18080:	bl	11934 <__stack_chk_fail@plt>
   18084:	bl	11d00 <abort@plt>
   18088:	movw	r1, #3012	; 0xbc4
   1808c:	movt	r1, #3
   18090:	mov	r0, r5
   18094:	mov	r2, #5
   18098:	bl	1191c <dcgettext@plt>
   1809c:	ldr	r2, [r6]
   180a0:	mov	r3, r4
   180a4:	mov	r1, r0
   180a8:	mov	r0, r5
   180ac:	bl	22d64 <error@@Base+0x124>
   180b0:	movw	r1, #2960	; 0xb90
   180b4:	mov	r0, r5
   180b8:	movt	r1, #3
   180bc:	b	18094 <__assert_fail@plt+0x6364>
   180c0:	push	{r4, lr}
   180c4:	mov	r4, r0
   180c8:	bl	17d14 <__assert_fail@plt+0x5fe4>
   180cc:	cmp	r4, #0
   180d0:	popeq	{r4, pc}
   180d4:	ldr	r3, [r4, #4]
   180d8:	str	r3, [r4]
   180dc:	ldr	r4, [r4, #48]	; 0x30
   180e0:	cmp	r4, #0
   180e4:	bne	180d4 <__assert_fail@plt+0x63a4>
   180e8:	pop	{r4, pc}
   180ec:	movw	r3, #28224	; 0x6e40
   180f0:	movt	r3, #4
   180f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   180f8:	mov	r8, r0
   180fc:	ldr	r3, [r3]
   18100:	sub	sp, sp, #20
   18104:	cmp	r3, #0
   18108:	bne	182e8 <__assert_fail@plt+0x65b8>
   1810c:	movw	r3, #29692	; 0x73fc
   18110:	movt	r3, #4
   18114:	ldr	r3, [r3]
   18118:	cmp	r3, #0
   1811c:	bne	182e8 <__assert_fail@plt+0x65b8>
   18120:	movw	r3, #27036	; 0x699c
   18124:	movt	r3, #4
   18128:	ldr	r2, [r3, #44]	; 0x2c
   1812c:	cmp	r2, #0
   18130:	bne	182e8 <__assert_fail@plt+0x65b8>
   18134:	cmp	r0, #0
   18138:	bne	182d4 <__assert_fail@plt+0x65a4>
   1813c:	ldm	r3, {r5, r6}
   18140:	add	r6, r5, r6, lsl #2
   18144:	cmp	r5, r6
   18148:	bcs	182e8 <__assert_fail@plt+0x65b8>
   1814c:	movw	sl, #27308	; 0x6aac
   18150:	movt	sl, #4
   18154:	mov	r3, #0
   18158:	movw	r7, #26848	; 0x68e0
   1815c:	movw	r9, #29516	; 0x734c
   18160:	str	r3, [sp, #8]
   18164:	movt	r7, #4
   18168:	mov	r3, sl
   1816c:	movt	r9, #4
   18170:	mov	sl, r8
   18174:	mov	r8, r3
   18178:	movw	r2, #29480	; 0x7328
   1817c:	movw	ip, #26888	; 0x6908
   18180:	movt	r2, #4
   18184:	movt	ip, #4
   18188:	str	r2, [sp, #4]
   1818c:	str	ip, [sp, #12]
   18190:	ldr	r4, [r5], #4
   18194:	cmp	r4, #0
   18198:	beq	18290 <__assert_fail@plt+0x6560>
   1819c:	ldr	r3, [r7]
   181a0:	cmp	r4, r3
   181a4:	beq	18290 <__assert_fail@plt+0x6560>
   181a8:	ldrb	r3, [r4, #79]	; 0x4f
   181ac:	tst	r3, #4
   181b0:	beq	18290 <__assert_fail@plt+0x6560>
   181b4:	ldrh	r1, [r4, #78]	; 0x4e
   181b8:	movw	r2, #4100	; 0x1004
   181bc:	and	r2, r1, r2
   181c0:	cmp	r2, #4
   181c4:	beq	18290 <__assert_fail@plt+0x6560>
   181c8:	ands	r2, r3, #9
   181cc:	bne	18290 <__assert_fail@plt+0x6560>
   181d0:	ldrsh	r1, [r4, #76]	; 0x4c
   181d4:	cmn	r1, #1
   181d8:	beq	18290 <__assert_fail@plt+0x6560>
   181dc:	ldr	r1, [r9]
   181e0:	cmp	r1, #0
   181e4:	movne	ip, r2
   181e8:	beq	182f0 <__assert_fail@plt+0x65c0>
   181ec:	ubfx	fp, r3, #4, #1
   181f0:	cmp	fp, #0
   181f4:	bne	18290 <__assert_fail@plt+0x6560>
   181f8:	cmp	sl, #0
   181fc:	bne	18358 <__assert_fail@plt+0x6628>
   18200:	ldr	r3, [sp, #8]
   18204:	cmp	r3, #0
   18208:	bne	18308 <__assert_fail@plt+0x65d8>
   1820c:	ldr	r3, [r8]
   18210:	tst	r3, #1
   18214:	bne	18388 <__assert_fail@plt+0x6658>
   18218:	ldr	r2, [sp, #4]
   1821c:	ldr	r3, [r2]
   18220:	cmp	r3, #0
   18224:	bne	18278 <__assert_fail@plt+0x6548>
   18228:	ldr	lr, [sp, #12]
   1822c:	movw	r0, #3132	; 0xc3c
   18230:	mov	r1, #1
   18234:	movt	r0, #3
   18238:	mov	r2, #3
   1823c:	movw	fp, #26888	; 0x6908
   18240:	ldr	r3, [lr]
   18244:	movt	fp, #4
   18248:	str	ip, [sp]
   1824c:	bl	11a00 <fwrite@plt>
   18250:	ldr	ip, [sp]
   18254:	mov	r3, #1
   18258:	str	r3, [sp, #8]
   1825c:	ldr	r1, [fp]
   18260:	ldr	r0, [r4]
   18264:	str	ip, [sp]
   18268:	bl	11ce8 <fputs@plt>
   1826c:	ldr	r0, [fp]
   18270:	bl	11868 <fflush@plt>
   18274:	ldr	ip, [sp]
   18278:	cmp	ip, #0
   1827c:	bge	18290 <__assert_fail@plt+0x6560>
   18280:	movw	r0, #63452	; 0xf7dc
   18284:	ldr	r1, [r4]
   18288:	movt	r0, #2
   1828c:	bl	22ec8 <error@@Base+0x288>
   18290:	cmp	r6, r5
   18294:	bhi	18190 <__assert_fail@plt+0x6460>
   18298:	ldr	r3, [sp, #8]
   1829c:	cmp	sl, #0
   182a0:	movne	r3, #0
   182a4:	andeq	r3, r3, #1
   182a8:	cmp	r3, #0
   182ac:	beq	182e8 <__assert_fail@plt+0x65b8>
   182b0:	movw	r4, #26888	; 0x6908
   182b4:	movt	r4, #4
   182b8:	mov	r0, #10
   182bc:	ldr	r1, [r4]
   182c0:	bl	119f4 <_IO_putc@plt>
   182c4:	ldr	r0, [r4]
   182c8:	add	sp, sp, #20
   182cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182d0:	b	11868 <fflush@plt>
   182d4:	movw	r2, #29516	; 0x734c
   182d8:	movt	r2, #4
   182dc:	ldr	r2, [r2]
   182e0:	cmp	r2, #0
   182e4:	beq	1813c <__assert_fail@plt+0x640c>
   182e8:	add	sp, sp, #20
   182ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   182f0:	ldr	r0, [r4]
   182f4:	bl	1194c <unlink@plt>
   182f8:	subs	ip, r0, #0
   182fc:	blt	1833c <__assert_fail@plt+0x660c>
   18300:	ldrb	r3, [r4, #79]	; 0x4f
   18304:	b	181ec <__assert_fail@plt+0x64bc>
   18308:	ldr	r2, [sp, #4]
   1830c:	ldr	r3, [r2]
   18310:	cmp	r3, #0
   18314:	bne	18278 <__assert_fail@plt+0x6548>
   18318:	ldr	lr, [sp, #12]
   1831c:	mov	r0, #32
   18320:	movw	fp, #26888	; 0x6908
   18324:	movt	fp, #4
   18328:	ldr	r1, [lr]
   1832c:	str	ip, [sp]
   18330:	bl	119f4 <_IO_putc@plt>
   18334:	ldr	ip, [sp]
   18338:	b	1825c <__assert_fail@plt+0x652c>
   1833c:	str	ip, [sp]
   18340:	bl	11b8c <__errno_location@plt>
   18344:	ldr	ip, [sp]
   18348:	ldr	r3, [r0]
   1834c:	cmp	r3, #2
   18350:	bne	18300 <__assert_fail@plt+0x65d0>
   18354:	b	18290 <__assert_fail@plt+0x6560>
   18358:	mov	r2, #5
   1835c:	movw	r1, #3064	; 0xbf8
   18360:	mov	r0, fp
   18364:	movt	r1, #3
   18368:	str	ip, [sp]
   1836c:	bl	1191c <dcgettext@plt>
   18370:	ldr	r2, [r4]
   18374:	mov	r1, r0
   18378:	mov	r0, fp
   1837c:	bl	22c40 <error@@Base>
   18380:	ldr	ip, [sp]
   18384:	b	18278 <__assert_fail@plt+0x6548>
   18388:	mov	r2, #5
   1838c:	movw	r1, #3100	; 0xc1c
   18390:	ldr	r0, [sp, #8]
   18394:	movt	r1, #3
   18398:	str	ip, [sp]
   1839c:	bl	1191c <dcgettext@plt>
   183a0:	mov	r1, r0
   183a4:	mov	r0, #1
   183a8:	bl	11be0 <__printf_chk@plt>
   183ac:	ldr	lr, [sp, #12]
   183b0:	ldr	r0, [lr]
   183b4:	bl	11868 <fflush@plt>
   183b8:	ldr	ip, [sp]
   183bc:	b	18218 <__assert_fail@plt+0x64e8>
   183c0:	push	{r4, r5, r6, lr}
   183c4:	sub	sp, sp, #16
   183c8:	add	r4, sp, #16
   183cc:	mov	r5, #0
   183d0:	mov	r3, r5
   183d4:	mov	r1, #20
   183d8:	str	r0, [r4, #-4]!
   183dc:	mov	r2, #124	; 0x7c
   183e0:	mov	r0, r4
   183e4:	str	r5, [sp]
   183e8:	bl	256a0 <error@@Base+0x2a60>
   183ec:	ldr	ip, [sp, #12]
   183f0:	ldrb	r3, [ip]
   183f4:	cmp	r3, r5
   183f8:	mov	r6, r0
   183fc:	bne	1840c <__assert_fail@plt+0x66dc>
   18400:	mov	r0, r6
   18404:	add	sp, sp, #16
   18408:	pop	{r4, r5, r6, pc}
   1840c:	mov	r2, r5
   18410:	str	r5, [sp]
   18414:	mov	r0, r4
   18418:	mov	r3, r5
   1841c:	mov	r1, #20
   18420:	add	ip, ip, #1
   18424:	str	ip, [sp, #12]
   18428:	bl	256a0 <error@@Base+0x2a60>
   1842c:	cmp	r6, r5
   18430:	moveq	r6, r0
   18434:	beq	1846c <__assert_fail@plt+0x673c>
   18438:	mov	r1, r6
   1843c:	b	18444 <__assert_fail@plt+0x6714>
   18440:	mov	r1, r2
   18444:	ldr	r2, [r1]
   18448:	cmp	r2, #0
   1844c:	bne	18440 <__assert_fail@plt+0x6710>
   18450:	cmp	r0, #0
   18454:	str	r0, [r1]
   18458:	beq	18400 <__assert_fail@plt+0x66d0>
   1845c:	ldrb	r2, [r0, #17]
   18460:	orr	r2, r2, #1
   18464:	strb	r2, [r0, #17]
   18468:	ldr	r0, [r0]
   1846c:	cmp	r0, #0
   18470:	bne	1845c <__assert_fail@plt+0x672c>
   18474:	mov	r0, r6
   18478:	add	sp, sp, #16
   1847c:	pop	{r4, r5, r6, pc}
   18480:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18484:	add	fp, sp, #32
   18488:	sub	sp, sp, #28
   1848c:	movw	r2, #26864	; 0x68f0
   18490:	movt	r2, #4
   18494:	subs	sl, r0, #0
   18498:	str	r2, [fp, #-48]	; 0xffffffd0
   1849c:	ldr	r3, [r2]
   184a0:	mov	r6, r1
   184a4:	str	r3, [fp, #-40]	; 0xffffffd8
   184a8:	beq	18668 <__assert_fail@plt+0x6938>
   184ac:	cmp	r1, #0
   184b0:	beq	18650 <__assert_fail@plt+0x6920>
   184b4:	movw	r0, #6032	; 0x1790
   184b8:	movt	r0, #3
   184bc:	bl	17528 <__assert_fail@plt+0x57f8>
   184c0:	mov	r7, sl
   184c4:	mov	r8, #0
   184c8:	mov	r5, r0
   184cc:	b	18530 <__assert_fail@plt+0x6800>
   184d0:	bl	11b5c <strlen@plt>
   184d4:	add	r1, r9, #1
   184d8:	mov	r2, r0
   184dc:	mov	r0, r9
   184e0:	bl	11880 <memmove@plt>
   184e4:	mov	r0, r4
   184e8:	bl	11b5c <strlen@plt>
   184ec:	mov	r1, r4
   184f0:	add	r2, r0, #1
   184f4:	mov	r0, r5
   184f8:	bl	16bc4 <__assert_fail@plt+0x4e94>
   184fc:	ldrb	r3, [r5]
   18500:	cmp	r3, #0
   18504:	bne	185a4 <__assert_fail@plt+0x6874>
   18508:	cmp	sl, r7
   1850c:	mov	r0, sl
   18510:	ldreq	r7, [sl]
   18514:	ldrne	r3, [sl]
   18518:	moveq	r3, r7
   1851c:	strne	r3, [r8]
   18520:	mov	sl, r3
   18524:	bl	1188c <free@plt>
   18528:	cmp	sl, #0
   1852c:	beq	185d4 <__assert_fail@plt+0x68a4>
   18530:	ldr	r4, [sl, #4]
   18534:	mov	r0, r4
   18538:	bl	11b5c <strlen@plt>
   1853c:	mov	r1, r4
   18540:	add	r3, r0, #15
   18544:	add	r2, r0, #1
   18548:	bic	r3, r3, #7
   1854c:	sub	sp, sp, r3
   18550:	add	r4, sp, #8
   18554:	mov	r0, r4
   18558:	bl	118c8 <memcpy@plt>
   1855c:	mov	r0, r4
   18560:	bl	24960 <error@@Base+0x1d20>
   18564:	subs	r9, r0, #0
   18568:	beq	185b4 <__assert_fail@plt+0x6884>
   1856c:	ldrb	r2, [r6]
   18570:	cmp	r2, #0
   18574:	beq	184d0 <__assert_fail@plt+0x67a0>
   18578:	ldr	r1, [pc, #244]	; 18674 <__assert_fail@plt+0x6944>
   1857c:	add	r3, r9, #1
   18580:	mov	r0, r5
   18584:	ldr	r2, [pc, #236]	; 18678 <__assert_fail@plt+0x6948>
   18588:	stm	sp, {r1, r3}
   1858c:	mov	r3, r4
   18590:	mov	r1, r6
   18594:	bl	1baf8 <__assert_fail@plt+0x9dc8>
   18598:	ldrb	r3, [r5]
   1859c:	cmp	r3, #0
   185a0:	beq	18508 <__assert_fail@plt+0x67d8>
   185a4:	rsb	r1, r5, r0
   185a8:	mov	r0, r5
   185ac:	bl	2b9dc <error@@Base+0x8d9c>
   185b0:	str	r0, [sl, #4]
   185b4:	ldrb	r3, [sl, #17]
   185b8:	mov	r8, sl
   185bc:	str	r6, [sl, #8]
   185c0:	orr	r3, r3, #2
   185c4:	strb	r3, [sl, #17]
   185c8:	ldr	sl, [sl]
   185cc:	cmp	sl, #0
   185d0:	bne	18530 <__assert_fail@plt+0x6800>
   185d4:	cmp	r7, #0
   185d8:	beq	18630 <__assert_fail@plt+0x6900>
   185dc:	mov	r4, r7
   185e0:	mov	r5, #0
   185e4:	b	185f4 <__assert_fail@plt+0x68c4>
   185e8:	ldr	r4, [r4]
   185ec:	cmp	r4, #0
   185f0:	beq	18630 <__assert_fail@plt+0x6900>
   185f4:	ldrb	r3, [r4, #17]
   185f8:	tst	r3, #4
   185fc:	bne	185e8 <__assert_fail@plt+0x68b8>
   18600:	ldr	r0, [r4, #4]
   18604:	bl	17ae8 <__assert_fail@plt+0x5db8>
   18608:	cmp	r0, #0
   1860c:	str	r0, [r4, #12]
   18610:	beq	18658 <__assert_fail@plt+0x6928>
   18614:	ldrb	r3, [r4, #17]
   18618:	str	r5, [r4, #4]
   1861c:	bfc	r3, #1, #1
   18620:	strb	r3, [r4, #17]
   18624:	ldr	r4, [r4]
   18628:	cmp	r4, #0
   1862c:	bne	185f4 <__assert_fail@plt+0x68c4>
   18630:	mov	r0, r7
   18634:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18638:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1863c:	ldr	r3, [r1]
   18640:	cmp	r2, r3
   18644:	bne	18670 <__assert_fail@plt+0x6940>
   18648:	sub	sp, fp, #32
   1864c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18650:	mov	r7, sl
   18654:	b	185dc <__assert_fail@plt+0x68ac>
   18658:	ldr	r0, [r4, #4]
   1865c:	bl	17bc4 <__assert_fail@plt+0x5e94>
   18660:	str	r0, [r4, #12]
   18664:	b	18614 <__assert_fail@plt+0x68e4>
   18668:	mov	r0, sl
   1866c:	b	18634 <__assert_fail@plt+0x6904>
   18670:	bl	11934 <__stack_chk_fail@plt>
   18674:	andeq	r4, r3, r1, asr #25
   18678:	andeq	r4, r3, r0, asr #25
   1867c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18680:	mov	r4, r0
   18684:	ldr	sl, [r0, #12]
   18688:	sub	sp, sp, #20
   1868c:	ldrb	r3, [r0, #78]	; 0x4e
   18690:	add	fp, r0, #12
   18694:	cmp	sl, #0
   18698:	ldr	r6, [r0, #24]
   1869c:	bfc	r3, #5, #1
   186a0:	strb	r3, [r0, #78]	; 0x4e
   186a4:	beq	18764 <__assert_fail@plt+0x6a34>
   186a8:	mov	r5, #0
   186ac:	mov	r7, r5
   186b0:	ldr	r9, [sl, #4]
   186b4:	cmp	r9, #0
   186b8:	beq	1876c <__assert_fail@plt+0x6a3c>
   186bc:	ldrb	r3, [sl, #17]
   186c0:	tst	r3, #4
   186c4:	beq	1876c <__assert_fail@plt+0x6a3c>
   186c8:	tst	r3, #2
   186cc:	bne	1878c <__assert_fail@plt+0x6a5c>
   186d0:	cmp	r5, #0
   186d4:	beq	18778 <__assert_fail@plt+0x6a48>
   186d8:	ldr	r3, [sl, #8]
   186dc:	mov	r0, r4
   186e0:	cmp	r3, #0
   186e4:	strne	r3, [r4, #24]
   186e8:	bl	14c5c <__assert_fail@plt+0x2f2c>
   186ec:	mov	r1, r4
   186f0:	ldr	r0, [sl, #4]
   186f4:	bl	1773c <__assert_fail@plt+0x5a0c>
   186f8:	ldr	r2, [sl, #8]
   186fc:	cmp	r2, #0
   18700:	strne	r6, [r4, #24]
   18704:	mov	r8, r0
   18708:	mov	r0, r9
   1870c:	bl	1188c <free@plt>
   18710:	mov	r0, r8
   18714:	bl	183c0 <__assert_fail@plt+0x6690>
   18718:	ldr	r1, [sl, #8]
   1871c:	bl	18480 <__assert_fail@plt+0x6750>
   18720:	cmp	r0, #0
   18724:	beq	187f0 <__assert_fail@plt+0x6ac0>
   18728:	ldr	sl, [sl]
   1872c:	str	r0, [fp]
   18730:	ldr	r2, [r0]
   18734:	cmp	r2, #0
   18738:	moveq	fp, r0
   1873c:	bne	18748 <__assert_fail@plt+0x6a18>
   18740:	b	18758 <__assert_fail@plt+0x6a28>
   18744:	mov	r2, r3
   18748:	ldr	r3, [r2]
   1874c:	cmp	r3, #0
   18750:	bne	18744 <__assert_fail@plt+0x6a14>
   18754:	mov	fp, r2
   18758:	str	sl, [fp]
   1875c:	cmp	sl, #0
   18760:	bne	186b0 <__assert_fail@plt+0x6980>
   18764:	add	sp, sp, #20
   18768:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1876c:	mov	fp, sl
   18770:	ldr	sl, [sl]
   18774:	b	1875c <__assert_fail@plt+0x6a2c>
   18778:	mov	r1, r5
   1877c:	mov	r0, r4
   18780:	bl	2d750 <error@@Base+0xab10>
   18784:	mov	r5, #1
   18788:	b	186d8 <__assert_fail@plt+0x69a8>
   1878c:	movw	r0, #6032	; 0x1790
   18790:	movt	r0, #3
   18794:	bl	17528 <__assert_fail@plt+0x57f8>
   18798:	mov	r1, r9
   1879c:	mov	ip, #1
   187a0:	mov	lr, #2
   187a4:	movw	r2, #19648	; 0x4cc0
   187a8:	movw	r3, #3136	; 0xc40
   187ac:	movt	r2, #3
   187b0:	movt	r3, #3
   187b4:	str	r0, [sl, #4]
   187b8:	stm	sp, {ip, lr}
   187bc:	str	r7, [sp, #8]
   187c0:	bl	1b8ec <__assert_fail@plt+0x9bbc>
   187c4:	strb	r7, [r0]
   187c8:	mov	r0, r9
   187cc:	bl	1188c <free@plt>
   187d0:	ldr	r0, [sl, #4]
   187d4:	bl	2312c <error@@Base+0x4ec>
   187d8:	ldrb	r3, [sl, #17]
   187dc:	bfc	r3, #1, #1
   187e0:	strb	r3, [sl, #17]
   187e4:	mov	r9, r0
   187e8:	str	r0, [sl, #4]
   187ec:	b	186d0 <__assert_fail@plt+0x69a0>
   187f0:	ldr	r3, [sl]
   187f4:	mov	r0, sl
   187f8:	str	r3, [fp]
   187fc:	bl	1188c <free@plt>
   18800:	ldr	sl, [fp]
   18804:	b	1875c <__assert_fail@plt+0x6a2c>
   18808:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1880c:	movw	r3, #29528	; 0x7358
   18810:	movt	r3, #4
   18814:	movw	r4, #27036	; 0x699c
   18818:	movt	r4, #4
   1881c:	mov	r2, #1
   18820:	ldr	r3, [r3]
   18824:	str	r2, [r4, #48]	; 0x30
   18828:	cmp	r3, #0
   1882c:	beq	18bec <__assert_fail@plt+0x6ebc>
   18830:	mov	r1, #0
   18834:	mov	r0, r4
   18838:	mov	r2, r1
   1883c:	bl	2eec8 <error@@Base+0xc288>
   18840:	ldr	r8, [r4, #12]
   18844:	mov	r9, r0
   18848:	movw	r0, #63464	; 0xf7e8
   1884c:	movt	r0, #2
   18850:	add	r8, r9, r8, lsl #2
   18854:	bl	17ae8 <__assert_fail@plt+0x5db8>
   18858:	subs	r5, r0, #0
   1885c:	moveq	r6, r5
   18860:	beq	1887c <__assert_fail@plt+0x6b4c>
   18864:	ldr	r6, [r5]
   18868:	mov	r0, r5
   1886c:	bl	1867c <__assert_fail@plt+0x694c>
   18870:	ldr	r5, [r5, #48]	; 0x30
   18874:	cmp	r5, #0
   18878:	bne	18868 <__assert_fail@plt+0x6b38>
   1887c:	cmp	r9, r8
   18880:	movcc	r7, r9
   18884:	bcs	188bc <__assert_fail@plt+0x6b8c>
   18888:	ldr	r5, [r7], #4
   1888c:	cmp	r5, #0
   18890:	beq	188b4 <__assert_fail@plt+0x6b84>
   18894:	ldr	r3, [r5]
   18898:	mov	r0, r5
   1889c:	cmp	r6, r3
   188a0:	beq	188a8 <__assert_fail@plt+0x6b78>
   188a4:	bl	1867c <__assert_fail@plt+0x694c>
   188a8:	ldr	r5, [r5, #48]	; 0x30
   188ac:	cmp	r5, #0
   188b0:	bne	18894 <__assert_fail@plt+0x6b64>
   188b4:	cmp	r8, r7
   188b8:	bhi	18888 <__assert_fail@plt+0x6b58>
   188bc:	mov	r0, r9
   188c0:	bl	1188c <free@plt>
   188c4:	movw	r0, #3140	; 0xc44
   188c8:	movt	r0, #3
   188cc:	bl	17ae8 <__assert_fail@plt+0x5db8>
   188d0:	cmp	r0, #0
   188d4:	beq	18920 <__assert_fail@plt+0x6bf0>
   188d8:	ldr	r1, [r0, #12]
   188dc:	cmp	r1, #0
   188e0:	beq	18914 <__assert_fail@plt+0x6be4>
   188e4:	ldr	r3, [r1, #12]
   188e8:	cmp	r3, #0
   188ec:	beq	18908 <__assert_fail@plt+0x6bd8>
   188f0:	ldrb	r2, [r3, #78]	; 0x4e
   188f4:	orr	r2, r2, #4
   188f8:	strb	r2, [r3, #78]	; 0x4e
   188fc:	ldr	r3, [r3, #48]	; 0x30
   18900:	cmp	r3, #0
   18904:	bne	188f0 <__assert_fail@plt+0x6bc0>
   18908:	ldr	r1, [r1]
   1890c:	cmp	r1, #0
   18910:	bne	188e4 <__assert_fail@plt+0x6bb4>
   18914:	ldr	r0, [r0, #48]	; 0x30
   18918:	cmp	r0, #0
   1891c:	bne	188d8 <__assert_fail@plt+0x6ba8>
   18920:	movw	r0, #3152	; 0xc50
   18924:	movt	r0, #3
   18928:	bl	17ae8 <__assert_fail@plt+0x5db8>
   1892c:	cmp	r0, #0
   18930:	beq	1897c <__assert_fail@plt+0x6c4c>
   18934:	ldr	r1, [r0, #12]
   18938:	cmp	r1, #0
   1893c:	beq	18970 <__assert_fail@plt+0x6c40>
   18940:	ldr	r3, [r1, #12]
   18944:	cmp	r3, #0
   18948:	beq	18964 <__assert_fail@plt+0x6c34>
   1894c:	ldrb	r2, [r3, #78]	; 0x4e
   18950:	orr	r2, r2, #8
   18954:	strb	r2, [r3, #78]	; 0x4e
   18958:	ldr	r3, [r3, #48]	; 0x30
   1895c:	cmp	r3, #0
   18960:	bne	1894c <__assert_fail@plt+0x6c1c>
   18964:	ldr	r1, [r1]
   18968:	cmp	r1, #0
   1896c:	bne	18940 <__assert_fail@plt+0x6c10>
   18970:	ldr	r0, [r0, #48]	; 0x30
   18974:	cmp	r0, #0
   18978:	bne	18934 <__assert_fail@plt+0x6c04>
   1897c:	movw	r0, #3176	; 0xc68
   18980:	movt	r0, #3
   18984:	bl	17ae8 <__assert_fail@plt+0x5db8>
   18988:	cmp	r0, #0
   1898c:	movne	r2, #1
   18990:	movne	r3, #0
   18994:	beq	189f4 <__assert_fail@plt+0x6cc4>
   18998:	ldr	r5, [r0, #12]
   1899c:	cmp	r5, #0
   189a0:	beq	189e8 <__assert_fail@plt+0x6cb8>
   189a4:	ldr	r1, [r5, #12]
   189a8:	cmp	r1, #0
   189ac:	beq	189dc <__assert_fail@plt+0x6cac>
   189b0:	ldrb	lr, [r1, #79]	; 0x4f
   189b4:	ldrb	ip, [r1, #78]	; 0x4e
   189b8:	strd	r2, [r1, #32]
   189bc:	orr	lr, lr, #2
   189c0:	strd	r2, [r1, #40]	; 0x28
   189c4:	orr	ip, ip, #128	; 0x80
   189c8:	strb	lr, [r1, #79]	; 0x4f
   189cc:	strb	ip, [r1, #78]	; 0x4e
   189d0:	ldr	r1, [r1, #48]	; 0x30
   189d4:	cmp	r1, #0
   189d8:	bne	189b0 <__assert_fail@plt+0x6c80>
   189dc:	ldr	r5, [r5]
   189e0:	cmp	r5, #0
   189e4:	bne	189a4 <__assert_fail@plt+0x6c74>
   189e8:	ldr	r0, [r0, #48]	; 0x30
   189ec:	cmp	r0, #0
   189f0:	bne	18998 <__assert_fail@plt+0x6c68>
   189f4:	movw	r0, #3184	; 0xc70
   189f8:	movt	r0, #3
   189fc:	bl	17ae8 <__assert_fail@plt+0x5db8>
   18a00:	cmp	r0, #0
   18a04:	beq	18a50 <__assert_fail@plt+0x6d20>
   18a08:	ldr	r1, [r0, #12]
   18a0c:	cmp	r1, #0
   18a10:	beq	18a44 <__assert_fail@plt+0x6d14>
   18a14:	ldr	r3, [r1, #12]
   18a18:	cmp	r3, #0
   18a1c:	beq	18a38 <__assert_fail@plt+0x6d08>
   18a20:	ldrb	r2, [r3, #79]	; 0x4f
   18a24:	orr	r2, r2, #4
   18a28:	strb	r2, [r3, #79]	; 0x4f
   18a2c:	ldr	r3, [r3, #48]	; 0x30
   18a30:	cmp	r3, #0
   18a34:	bne	18a20 <__assert_fail@plt+0x6cf0>
   18a38:	ldr	r1, [r1]
   18a3c:	cmp	r1, #0
   18a40:	bne	18a14 <__assert_fail@plt+0x6ce4>
   18a44:	ldr	r0, [r0, #48]	; 0x30
   18a48:	cmp	r0, #0
   18a4c:	bne	18a08 <__assert_fail@plt+0x6cd8>
   18a50:	movw	r0, #3200	; 0xc80
   18a54:	movt	r0, #3
   18a58:	bl	17ae8 <__assert_fail@plt+0x5db8>
   18a5c:	subs	r5, r0, #0
   18a60:	movne	r6, #1
   18a64:	beq	18ab0 <__assert_fail@plt+0x6d80>
   18a68:	ldr	r1, [r5, #12]
   18a6c:	cmp	r1, #0
   18a70:	beq	18bc4 <__assert_fail@plt+0x6e94>
   18a74:	ldr	r3, [r1, #12]
   18a78:	cmp	r3, #0
   18a7c:	beq	18a98 <__assert_fail@plt+0x6d68>
   18a80:	ldrb	r2, [r3, #79]	; 0x4f
   18a84:	orr	r2, r2, #12
   18a88:	strb	r2, [r3, #79]	; 0x4f
   18a8c:	ldr	r3, [r3, #48]	; 0x30
   18a90:	cmp	r3, #0
   18a94:	bne	18a80 <__assert_fail@plt+0x6d50>
   18a98:	ldr	r1, [r1]
   18a9c:	cmp	r1, #0
   18aa0:	bne	18a74 <__assert_fail@plt+0x6d44>
   18aa4:	ldr	r5, [r5, #48]	; 0x30
   18aa8:	cmp	r5, #0
   18aac:	bne	18a68 <__assert_fail@plt+0x6d38>
   18ab0:	movw	r0, #3212	; 0xc8c
   18ab4:	movt	r0, #3
   18ab8:	bl	17ae8 <__assert_fail@plt+0x5db8>
   18abc:	cmp	r0, #0
   18ac0:	beq	18adc <__assert_fail@plt+0x6dac>
   18ac4:	ldrb	r3, [r0, #78]	; 0x4e
   18ac8:	lsrs	r3, r3, #7
   18acc:	movwne	r3, #29732	; 0x7424
   18ad0:	movtne	r3, #4
   18ad4:	movne	r2, #1
   18ad8:	strne	r2, [r3]
   18adc:	movw	r0, #3236	; 0xca4
   18ae0:	movt	r0, #3
   18ae4:	bl	17ae8 <__assert_fail@plt+0x5db8>
   18ae8:	cmp	r0, #0
   18aec:	beq	18b38 <__assert_fail@plt+0x6e08>
   18af0:	ldrb	r3, [r0, #78]	; 0x4e
   18af4:	lsrs	r3, r3, #7
   18af8:	beq	18b38 <__assert_fail@plt+0x6e08>
   18afc:	ldr	r1, [r0, #12]
   18b00:	cmp	r1, #0
   18b04:	beq	18c14 <__assert_fail@plt+0x6ee4>
   18b08:	ldr	r3, [r1, #12]
   18b0c:	cmp	r3, #0
   18b10:	beq	18b2c <__assert_fail@plt+0x6dfc>
   18b14:	ldr	r2, [r3, #20]
   18b18:	orr	r2, r2, #4
   18b1c:	str	r2, [r3, #20]
   18b20:	ldr	r3, [r3, #48]	; 0x30
   18b24:	cmp	r3, #0
   18b28:	bne	18b14 <__assert_fail@plt+0x6de4>
   18b2c:	ldr	r1, [r1]
   18b30:	cmp	r1, #0
   18b34:	bne	18b08 <__assert_fail@plt+0x6dd8>
   18b38:	movw	r0, #3244	; 0xcac
   18b3c:	movt	r0, #3
   18b40:	bl	17ae8 <__assert_fail@plt+0x5db8>
   18b44:	cmp	r0, #0
   18b48:	beq	18b94 <__assert_fail@plt+0x6e64>
   18b4c:	ldrb	r3, [r0, #78]	; 0x4e
   18b50:	lsrs	r3, r3, #7
   18b54:	beq	18b94 <__assert_fail@plt+0x6e64>
   18b58:	ldr	r1, [r0, #12]
   18b5c:	cmp	r1, #0
   18b60:	beq	18c00 <__assert_fail@plt+0x6ed0>
   18b64:	ldr	r3, [r1, #12]
   18b68:	cmp	r3, #0
   18b6c:	beq	18b88 <__assert_fail@plt+0x6e58>
   18b70:	ldr	r2, [r3, #20]
   18b74:	orr	r2, r2, #2
   18b78:	str	r2, [r3, #20]
   18b7c:	ldr	r3, [r3, #48]	; 0x30
   18b80:	cmp	r3, #0
   18b84:	bne	18b70 <__assert_fail@plt+0x6e40>
   18b88:	ldr	r1, [r1]
   18b8c:	cmp	r1, #0
   18b90:	bne	18b64 <__assert_fail@plt+0x6e34>
   18b94:	movw	r0, #3252	; 0xcb4
   18b98:	movt	r0, #3
   18b9c:	bl	17ae8 <__assert_fail@plt+0x5db8>
   18ba0:	cmp	r0, #0
   18ba4:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   18ba8:	ldrb	r3, [r0, #78]	; 0x4e
   18bac:	lsrs	r3, r3, #7
   18bb0:	movwne	r3, #29544	; 0x7368
   18bb4:	movtne	r3, #4
   18bb8:	movne	r2, #1
   18bbc:	strne	r2, [r3]
   18bc0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   18bc4:	movw	r0, #27036	; 0x699c
   18bc8:	movw	r1, #30912	; 0x78c0
   18bcc:	movt	r0, #4
   18bd0:	movt	r1, #1
   18bd4:	str	r6, [r4, #44]	; 0x2c
   18bd8:	bl	2ed28 <error@@Base+0xc0e8>
   18bdc:	ldr	r5, [r5, #48]	; 0x30
   18be0:	cmp	r5, #0
   18be4:	bne	18a68 <__assert_fail@plt+0x6d38>
   18be8:	b	18ab0 <__assert_fail@plt+0x6d80>
   18bec:	movw	r1, #30928	; 0x78d0
   18bf0:	mov	r0, r4
   18bf4:	movt	r1, #1
   18bf8:	bl	2ed28 <error@@Base+0xc0e8>
   18bfc:	b	188c4 <__assert_fail@plt+0x6b94>
   18c00:	movw	r3, #29480	; 0x7328
   18c04:	movt	r3, #4
   18c08:	mov	r2, #1
   18c0c:	str	r2, [r3]
   18c10:	b	18b94 <__assert_fail@plt+0x6e64>
   18c14:	movw	r3, #28228	; 0x6e44
   18c18:	movt	r3, #4
   18c1c:	mov	r2, #1
   18c20:	str	r2, [r3]
   18c24:	b	18b38 <__assert_fail@plt+0x6e08>
   18c28:	ldr	r3, [r0, #28]
   18c2c:	and	r1, r1, #3
   18c30:	ldrb	r2, [r0, #78]	; 0x4e
   18c34:	cmp	r3, #0
   18c38:	bfi	r2, r1, #0, #2
   18c3c:	strb	r2, [r0, #78]	; 0x4e
   18c40:	bxeq	lr
   18c44:	ldr	r2, [r3, #12]
   18c48:	ldr	r3, [r3]
   18c4c:	ldrb	r0, [r2, #78]	; 0x4e
   18c50:	cmp	r3, #0
   18c54:	bfi	r0, r1, #0, #2
   18c58:	strb	r0, [r2, #78]	; 0x4e
   18c5c:	bne	18c44 <__assert_fail@plt+0x6f14>
   18c60:	bx	lr
   18c64:	push	{r4, r5, r6, r7, lr}
   18c68:	movw	r6, #26864	; 0x68f0
   18c6c:	movt	r6, #4
   18c70:	sub	sp, sp, #36	; 0x24
   18c74:	mov	r4, r2
   18c78:	subs	r2, r2, #3
   18c7c:	sbc	r3, r3, #0
   18c80:	add	r1, sp, #32
   18c84:	ldr	ip, [r6]
   18c88:	lsr	r2, r2, #30
   18c8c:	orr	r2, r2, r3, lsl #2
   18c90:	mov	r7, r0
   18c94:	str	r2, [r1, #-8]!
   18c98:	mov	r0, r1
   18c9c:	str	ip, [sp, #28]
   18ca0:	bl	11ae4 <localtime@plt>
   18ca4:	subs	ip, r0, #0
   18ca8:	beq	18d88 <__assert_fail@plt+0x7058>
   18cac:	ldr	r2, [ip, #20]
   18cb0:	mov	r1, #1
   18cb4:	movw	r3, #3268	; 0xcc4
   18cb8:	mov	r0, r7
   18cbc:	add	r2, r2, #1888	; 0x760
   18cc0:	movt	r3, #3
   18cc4:	add	r2, r2, #12
   18cc8:	str	r2, [sp]
   18ccc:	ldr	lr, [ip, #16]
   18cd0:	mvn	r2, #0
   18cd4:	add	lr, lr, r1
   18cd8:	str	lr, [sp, #4]
   18cdc:	ldr	lr, [ip, #12]
   18ce0:	str	lr, [sp, #8]
   18ce4:	ldr	lr, [ip, #8]
   18ce8:	str	lr, [sp, #12]
   18cec:	ldr	lr, [ip, #4]
   18cf0:	str	lr, [sp, #16]
   18cf4:	ldr	ip, [ip]
   18cf8:	str	ip, [sp, #20]
   18cfc:	bl	11b98 <__sprintf_chk@plt>
   18d00:	mov	r0, r7
   18d04:	sub	r4, r4, #3
   18d08:	bl	11b5c <strlen@plt>
   18d0c:	bic	r4, r4, #-1073741824	; 0xc0000000
   18d10:	str	r4, [sp]
   18d14:	mov	r1, #1
   18d18:	mvn	r2, #0
   18d1c:	movw	r3, #3304	; 0xce8
   18d20:	movt	r3, #3
   18d24:	add	r4, r7, r0
   18d28:	mov	r0, r4
   18d2c:	bl	11b98 <__sprintf_chk@plt>
   18d30:	mov	r0, r4
   18d34:	bl	11b5c <strlen@plt>
   18d38:	sub	r0, r0, #1
   18d3c:	add	r1, r4, r0
   18d40:	ldrb	r2, [r4, r0]
   18d44:	cmp	r2, #48	; 0x30
   18d48:	bne	18d60 <__assert_fail@plt+0x7030>
   18d4c:	sub	r3, r1, #1
   18d50:	mov	r1, r3
   18d54:	ldrb	r2, [r3], #-1
   18d58:	cmp	r2, #48	; 0x30
   18d5c:	beq	18d50 <__assert_fail@plt+0x7020>
   18d60:	subs	r2, r2, #46	; 0x2e
   18d64:	mov	r3, #0
   18d68:	ldr	r0, [sp, #28]
   18d6c:	movne	r2, #1
   18d70:	strb	r3, [r1, r2]
   18d74:	ldr	r3, [r6]
   18d78:	cmp	r0, r3
   18d7c:	bne	18dbc <__assert_fail@plt+0x708c>
   18d80:	add	sp, sp, #36	; 0x24
   18d84:	pop	{r4, r5, r6, r7, pc}
   18d88:	ldr	r3, [sp, #24]
   18d8c:	mov	r1, #1
   18d90:	mvn	r2, #0
   18d94:	cmp	r3, #0
   18d98:	str	r3, [sp]
   18d9c:	movlt	r0, r7
   18da0:	movwlt	r3, #63288	; 0xf738
   18da4:	movwge	r3, #3300	; 0xce4
   18da8:	movtlt	r3, #2
   18dac:	movge	r0, r7
   18db0:	movtge	r3, #3
   18db4:	bl	11b98 <__sprintf_chk@plt>
   18db8:	b	18d00 <__assert_fail@plt+0x6fd0>
   18dbc:	bl	11934 <__stack_chk_fail@plt>
   18dc0:	push	{r4, r5, r6, r7, r8, r9, lr}
   18dc4:	asr	r7, r1, #31
   18dc8:	add	r2, r2, #3
   18dcc:	lsl	r4, r1, #30
   18dd0:	lsl	r5, r7, #30
   18dd4:	adds	r6, r4, r2
   18dd8:	orr	r5, r5, r1, lsr #2
   18ddc:	movw	r8, #26864	; 0x68f0
   18de0:	movt	r8, #4
   18de4:	sub	sp, sp, #52	; 0x34
   18de8:	adc	r7, r5, r2, asr #31
   18dec:	mov	r9, r0
   18df0:	cmp	r5, r7
   18df4:	cmpeq	r4, r6
   18df8:	ldr	r2, [r8]
   18dfc:	movls	r3, #0
   18e00:	movhi	r3, #1
   18e04:	orrs	r3, r3, r1, lsr #31
   18e08:	str	r2, [sp, #44]	; 0x2c
   18e0c:	bne	18e28 <__assert_fail@plt+0x70f8>
   18e10:	movw	r4, #51714	; 0xca02
   18e14:	movt	r4, #64410	; 0xfb9a
   18e18:	mvn	r5, #0
   18e1c:	cmp	r7, r5
   18e20:	cmpeq	r6, r4
   18e24:	bls	18e84 <__assert_fail@plt+0x7154>
   18e28:	cmp	r1, #2
   18e2c:	mov	r0, sp
   18e30:	movwgt	r6, #51714	; 0xca02
   18e34:	movtgt	r6, #64410	; 0xfb9a
   18e38:	movle	r6, #3
   18e3c:	movle	r7, #0
   18e40:	mvngt	r7, #0
   18e44:	mov	r2, r6
   18e48:	mov	r3, r7
   18e4c:	bl	18c64 <__assert_fail@plt+0x6f34>
   18e50:	mov	r2, #5
   18e54:	movw	r1, #3312	; 0xcf0
   18e58:	mov	r0, #0
   18e5c:	movt	r1, #3
   18e60:	bl	1191c <dcgettext@plt>
   18e64:	cmp	r9, #0
   18e68:	movne	r2, r9
   18e6c:	mov	r4, r0
   18e70:	beq	18ea4 <__assert_fail@plt+0x7174>
   18e74:	mov	r1, r4
   18e78:	mov	r3, sp
   18e7c:	mov	r0, #0
   18e80:	bl	22c40 <error@@Base>
   18e84:	ldr	r2, [sp, #44]	; 0x2c
   18e88:	mov	r0, r6
   18e8c:	ldr	r3, [r8]
   18e90:	mov	r1, r7
   18e94:	cmp	r2, r3
   18e98:	bne	18ec0 <__assert_fail@plt+0x7190>
   18e9c:	add	sp, sp, #52	; 0x34
   18ea0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18ea4:	mov	r2, #5
   18ea8:	mov	r0, r9
   18eac:	movw	r1, #3356	; 0xd1c
   18eb0:	movt	r1, #3
   18eb4:	bl	1191c <dcgettext@plt>
   18eb8:	mov	r2, r0
   18ebc:	b	18e74 <__assert_fail@plt+0x7144>
   18ec0:	bl	11934 <__stack_chk_fail@plt>
   18ec4:	push	{r4, r5, lr}
   18ec8:	movw	r4, #26864	; 0x68f0
   18ecc:	movt	r4, #4
   18ed0:	sub	sp, sp, #20
   18ed4:	mov	r5, r0
   18ed8:	add	r1, sp, #4
   18edc:	ldr	r3, [r4]
   18ee0:	mov	r0, #0
   18ee4:	str	r3, [sp, #12]
   18ee8:	bl	118b0 <clock_gettime@plt>
   18eec:	cmp	r0, #0
   18ef0:	bne	18f24 <__assert_fail@plt+0x71f4>
   18ef4:	ldr	r1, [sp, #4]
   18ef8:	mov	r3, #1
   18efc:	ldr	r2, [sp, #8]
   18f00:	str	r3, [r5]
   18f04:	mov	r0, #0
   18f08:	bl	18dc0 <__assert_fail@plt+0x7090>
   18f0c:	ldr	r2, [sp, #12]
   18f10:	ldr	r3, [r4]
   18f14:	cmp	r2, r3
   18f18:	bne	18f6c <__assert_fail@plt+0x723c>
   18f1c:	add	sp, sp, #20
   18f20:	pop	{r4, r5, pc}
   18f24:	add	r0, sp, #4
   18f28:	mov	r1, #0
   18f2c:	bl	11a3c <gettimeofday@plt>
   18f30:	cmp	r0, #0
   18f34:	bne	18f50 <__assert_fail@plt+0x7220>
   18f38:	ldr	r0, [sp, #8]
   18f3c:	mov	r2, #1000	; 0x3e8
   18f40:	mov	r3, r2
   18f44:	ldr	r1, [sp, #4]
   18f48:	mul	r2, r2, r0
   18f4c:	b	18f00 <__assert_fail@plt+0x71d0>
   18f50:	mov	r0, #0
   18f54:	bl	118ec <time@plt>
   18f58:	mov	r3, #51712	; 0xca00
   18f5c:	mov	r2, #0
   18f60:	movt	r3, #15258	; 0x3b9a
   18f64:	mov	r1, r0
   18f68:	b	18f00 <__assert_fail@plt+0x71d0>
   18f6c:	bl	11934 <__stack_chk_fail@plt>
   18f70:	push	{r3, r4, r5, lr}
   18f74:	subs	r4, r0, #0
   18f78:	movne	r5, #0
   18f7c:	bne	18fb0 <__assert_fail@plt+0x7280>
   18f80:	b	1903c <__assert_fail@plt+0x730c>
   18f84:	ldr	r2, [r4, #4]
   18f88:	movw	r1, #14564	; 0x38e4
   18f8c:	mov	r0, #1
   18f90:	movt	r1, #3
   18f94:	cmp	r2, #0
   18f98:	ldreq	r3, [r4, #12]
   18f9c:	ldreq	r2, [r3]
   18fa0:	bl	11be0 <__printf_chk@plt>
   18fa4:	ldr	r4, [r4]
   18fa8:	cmp	r4, #0
   18fac:	beq	18fd0 <__assert_fail@plt+0x72a0>
   18fb0:	ldrb	r3, [r4, #17]
   18fb4:	tst	r3, #1
   18fb8:	beq	18f84 <__assert_fail@plt+0x7254>
   18fbc:	cmp	r5, #0
   18fc0:	moveq	r5, r4
   18fc4:	ldr	r4, [r4]
   18fc8:	cmp	r4, #0
   18fcc:	bne	18fb0 <__assert_fail@plt+0x7280>
   18fd0:	cmp	r5, #0
   18fd4:	beq	1903c <__assert_fail@plt+0x730c>
   18fd8:	ldr	r2, [r5, #4]
   18fdc:	movw	r1, #3372	; 0xd2c
   18fe0:	mov	r0, #1
   18fe4:	movt	r1, #3
   18fe8:	cmp	r2, #0
   18fec:	ldreq	r3, [r5, #12]
   18ff0:	ldreq	r2, [r3]
   18ff4:	bl	11be0 <__printf_chk@plt>
   18ff8:	ldr	r4, [r5]
   18ffc:	cmp	r4, #0
   19000:	beq	1903c <__assert_fail@plt+0x730c>
   19004:	ldrb	r3, [r4, #17]
   19008:	tst	r3, #1
   1900c:	beq	19030 <__assert_fail@plt+0x7300>
   19010:	ldr	r2, [r4, #4]
   19014:	movw	r1, #14564	; 0x38e4
   19018:	mov	r0, #1
   1901c:	movt	r1, #3
   19020:	cmp	r2, #0
   19024:	ldreq	r3, [r4, #12]
   19028:	ldreq	r2, [r3]
   1902c:	bl	11be0 <__printf_chk@plt>
   19030:	ldr	r4, [r4]
   19034:	cmp	r4, #0
   19038:	bne	19004 <__assert_fail@plt+0x72d4>
   1903c:	movw	r3, #26888	; 0x6908
   19040:	movt	r3, #4
   19044:	mov	r0, #10
   19048:	ldr	r1, [r3]
   1904c:	pop	{r3, r4, r5, lr}
   19050:	b	119f4 <_IO_putc@plt>
   19054:	push	{r4, r5, r6, r7, lr}
   19058:	movw	r7, #26864	; 0x68f0
   1905c:	movt	r7, #4
   19060:	movw	r6, #26888	; 0x6908
   19064:	movt	r6, #4
   19068:	sub	sp, sp, #52	; 0x34
   1906c:	ldr	r3, [r7]
   19070:	mov	r5, r0
   19074:	ldr	r1, [r6]
   19078:	mov	r0, #10
   1907c:	str	r3, [sp, #44]	; 0x2c
   19080:	bl	119f4 <_IO_putc@plt>
   19084:	ldrb	r0, [r5, #78]	; 0x4e
   19088:	lsrs	r0, r0, #7
   1908c:	beq	19374 <__assert_fail@plt+0x7644>
   19090:	ldr	r0, [r5, #72]	; 0x48
   19094:	movw	r2, #11076	; 0x2b44
   19098:	movt	r2, #3
   1909c:	movw	r3, #6032	; 0x1790
   190a0:	cmp	r0, #0
   190a4:	movt	r3, #3
   190a8:	movw	r1, #3396	; 0xd44
   190ac:	mov	r0, #1
   190b0:	movne	r3, r2
   190b4:	movt	r1, #3
   190b8:	ldr	r2, [r5]
   190bc:	bl	11be0 <__printf_chk@plt>
   190c0:	ldr	r0, [r5, #12]
   190c4:	bl	18f70 <__assert_fail@plt+0x7240>
   190c8:	ldrb	r3, [r5, #78]	; 0x4e
   190cc:	tst	r3, #4
   190d0:	bne	19358 <__assert_fail@plt+0x7628>
   190d4:	ldrb	r3, [r5, #79]	; 0x4f
   190d8:	tst	r3, #2
   190dc:	bne	19338 <__assert_fail@plt+0x7608>
   190e0:	tst	r3, #1
   190e4:	bne	19318 <__assert_fail@plt+0x75e8>
   190e8:	tst	r3, #16
   190ec:	bne	192fc <__assert_fail@plt+0x75cc>
   190f0:	ldrb	r0, [r5, #78]	; 0x4e
   190f4:	ubfx	r0, r0, #4, #1
   190f8:	cmp	r0, #0
   190fc:	movwne	r1, #3576	; 0xdf8
   19100:	movweq	r1, #3616	; 0xe20
   19104:	movne	r0, #0
   19108:	movtne	r1, #3
   1910c:	movne	r2, #5
   19110:	moveq	r2, #5
   19114:	movteq	r1, #3
   19118:	bl	1191c <dcgettext@plt>
   1911c:	bl	11a9c <puts@plt>
   19120:	ldr	r3, [r5, #24]
   19124:	cmp	r3, #0
   19128:	beq	19150 <__assert_fail@plt+0x7420>
   1912c:	mov	r2, #5
   19130:	movw	r1, #3660	; 0xe4c
   19134:	mov	r0, #0
   19138:	movt	r1, #3
   1913c:	bl	1191c <dcgettext@plt>
   19140:	ldr	r2, [r5, #24]
   19144:	mov	r1, r0
   19148:	mov	r0, #1
   1914c:	bl	11be0 <__printf_chk@plt>
   19150:	ldrb	r3, [r5, #79]	; 0x4f
   19154:	tst	r3, #4
   19158:	bne	192e0 <__assert_fail@plt+0x75b0>
   1915c:	ldr	r3, [r5, #28]
   19160:	cmp	r3, #0
   19164:	beq	191c8 <__assert_fail@plt+0x7498>
   19168:	mov	r2, #5
   1916c:	movw	r1, #3744	; 0xea0
   19170:	mov	r0, #0
   19174:	movt	r1, #3
   19178:	bl	1191c <dcgettext@plt>
   1917c:	ldr	r1, [r6]
   19180:	bl	11ce8 <fputs@plt>
   19184:	ldr	r4, [r5, #28]
   19188:	cmp	r4, #0
   1918c:	beq	191bc <__assert_fail@plt+0x748c>
   19190:	ldr	r2, [r4, #4]
   19194:	movw	r1, #14564	; 0x38e4
   19198:	mov	r0, #1
   1919c:	movt	r1, #3
   191a0:	cmp	r2, #0
   191a4:	ldreq	r3, [r4, #12]
   191a8:	ldreq	r2, [r3]
   191ac:	bl	11be0 <__printf_chk@plt>
   191b0:	ldr	r4, [r4]
   191b4:	cmp	r4, #0
   191b8:	bne	19190 <__assert_fail@plt+0x7460>
   191bc:	mov	r0, #10
   191c0:	ldr	r1, [r6]
   191c4:	bl	119f4 <_IO_putc@plt>
   191c8:	ldrd	r2, [r5, #32]
   191cc:	orrs	r1, r2, r3
   191d0:	beq	192c4 <__assert_fail@plt+0x7594>
   191d4:	cmp	r3, #0
   191d8:	cmpeq	r2, #1
   191dc:	beq	19450 <__assert_fail@plt+0x7720>
   191e0:	cmp	r3, #0
   191e4:	cmpeq	r2, #2
   191e8:	beq	193cc <__assert_fail@plt+0x769c>
   191ec:	mov	r0, sp
   191f0:	bl	18c64 <__assert_fail@plt+0x6f34>
   191f4:	mov	r2, #5
   191f8:	movw	r1, #3844	; 0xf04
   191fc:	mov	r0, #0
   19200:	movt	r1, #3
   19204:	bl	1191c <dcgettext@plt>
   19208:	mov	r2, sp
   1920c:	mov	r1, r0
   19210:	mov	r0, #1
   19214:	bl	11be0 <__printf_chk@plt>
   19218:	ldrb	r0, [r5, #78]	; 0x4e
   1921c:	ubfx	r0, r0, #6, #1
   19220:	cmp	r0, #0
   19224:	movwne	r1, #3868	; 0xf1c
   19228:	movweq	r1, #3896	; 0xf38
   1922c:	movne	r0, #0
   19230:	movtne	r1, #3
   19234:	movne	r2, #5
   19238:	moveq	r2, #5
   1923c:	movteq	r1, #3
   19240:	bl	1191c <dcgettext@plt>
   19244:	bl	11a9c <puts@plt>
   19248:	ldrb	r3, [r5, #78]	; 0x4e
   1924c:	and	r3, r3, #3
   19250:	cmp	r3, #1
   19254:	beq	193b0 <__assert_fail@plt+0x7680>
   19258:	cmp	r3, #2
   1925c:	bne	1938c <__assert_fail@plt+0x765c>
   19260:	movw	r1, #3928	; 0xf58
   19264:	mov	r2, #5
   19268:	movt	r1, #3
   1926c:	mov	r0, #0
   19270:	bl	1191c <dcgettext@plt>
   19274:	bl	11a9c <puts@plt>
   19278:	ldr	r3, [r5, #60]	; 0x3c
   1927c:	cmp	r3, #0
   19280:	beq	1928c <__assert_fail@plt+0x755c>
   19284:	mov	r0, r5
   19288:	bl	2de08 <error@@Base+0xb1c8>
   1928c:	ldr	r0, [r5, #16]
   19290:	cmp	r0, #0
   19294:	beq	1929c <__assert_fail@plt+0x756c>
   19298:	bl	159ac <__assert_fail@plt+0x3c7c>
   1929c:	ldr	r0, [r5, #48]	; 0x30
   192a0:	cmp	r0, #0
   192a4:	beq	192ac <__assert_fail@plt+0x757c>
   192a8:	bl	19054 <__assert_fail@plt+0x7324>
   192ac:	ldr	r2, [sp, #44]	; 0x2c
   192b0:	ldr	r3, [r7]
   192b4:	cmp	r2, r3
   192b8:	bne	194bc <__assert_fail@plt+0x778c>
   192bc:	add	sp, sp, #52	; 0x34
   192c0:	pop	{r4, r5, r6, r7, pc}
   192c4:	mov	r2, #5
   192c8:	movw	r1, #3760	; 0xeb0
   192cc:	mov	r0, #0
   192d0:	movt	r1, #3
   192d4:	bl	1191c <dcgettext@plt>
   192d8:	bl	11a9c <puts@plt>
   192dc:	b	19218 <__assert_fail@plt+0x74e8>
   192e0:	mov	r2, #5
   192e4:	movw	r1, #3700	; 0xe74
   192e8:	mov	r0, #0
   192ec:	movt	r1, #3
   192f0:	bl	1191c <dcgettext@plt>
   192f4:	bl	11a9c <puts@plt>
   192f8:	b	1915c <__assert_fail@plt+0x742c>
   192fc:	mov	r2, #5
   19300:	movw	r1, #3520	; 0xdc0
   19304:	mov	r0, #0
   19308:	movt	r1, #3
   1930c:	bl	1191c <dcgettext@plt>
   19310:	bl	11a9c <puts@plt>
   19314:	b	190f0 <__assert_fail@plt+0x73c0>
   19318:	mov	r2, #5
   1931c:	movw	r1, #3496	; 0xda8
   19320:	mov	r0, #0
   19324:	movt	r1, #3
   19328:	bl	1191c <dcgettext@plt>
   1932c:	bl	11a9c <puts@plt>
   19330:	ldrb	r3, [r5, #79]	; 0x4f
   19334:	b	190e8 <__assert_fail@plt+0x73b8>
   19338:	mov	r2, #5
   1933c:	movw	r1, #3452	; 0xd7c
   19340:	mov	r0, #0
   19344:	movt	r1, #3
   19348:	bl	1191c <dcgettext@plt>
   1934c:	bl	11a9c <puts@plt>
   19350:	ldrb	r3, [r5, #79]	; 0x4f
   19354:	b	190e0 <__assert_fail@plt+0x73b0>
   19358:	mov	r2, #5
   1935c:	movw	r1, #3404	; 0xd4c
   19360:	mov	r0, #0
   19364:	movt	r1, #3
   19368:	bl	1191c <dcgettext@plt>
   1936c:	bl	11a9c <puts@plt>
   19370:	b	190d4 <__assert_fail@plt+0x73a4>
   19374:	mov	r2, #5
   19378:	movw	r1, #3380	; 0xd34
   1937c:	movt	r1, #3
   19380:	bl	1191c <dcgettext@plt>
   19384:	bl	11a9c <puts@plt>
   19388:	b	19090 <__assert_fail@plt+0x7360>
   1938c:	ldrsh	r3, [r5, #76]	; 0x4c
   19390:	add	r3, r3, #1
   19394:	cmp	r3, #3
   19398:	ldrls	pc, [pc, r3, lsl #2]
   1939c:	b	1946c <__assert_fail@plt+0x773c>
   193a0:	andeq	r9, r1, r8, ror r2
   193a4:	andeq	r9, r1, r4, lsr r4
   193a8:	andeq	r9, r1, r4, lsl #8
   193ac:	andeq	r9, r1, r8, ror #7
   193b0:	mov	r2, #5
   193b4:	movw	r1, #3976	; 0xf88
   193b8:	mov	r0, #0
   193bc:	movt	r1, #3
   193c0:	bl	1191c <dcgettext@plt>
   193c4:	bl	11a9c <puts@plt>
   193c8:	b	19278 <__assert_fail@plt+0x7548>
   193cc:	mov	r2, #5
   193d0:	movw	r1, #3820	; 0xeec
   193d4:	mov	r0, #0
   193d8:	movt	r1, #3
   193dc:	bl	1191c <dcgettext@plt>
   193e0:	bl	11a9c <puts@plt>
   193e4:	b	19218 <__assert_fail@plt+0x74e8>
   193e8:	mov	r2, #5
   193ec:	movw	r1, #4104	; 0x1008
   193f0:	mov	r0, #0
   193f4:	movt	r1, #3
   193f8:	bl	1191c <dcgettext@plt>
   193fc:	bl	11a9c <puts@plt>
   19400:	b	19278 <__assert_fail@plt+0x7548>
   19404:	movw	r3, #28224	; 0x6e40
   19408:	movt	r3, #4
   1940c:	ldr	r3, [r3]
   19410:	cmp	r3, #0
   19414:	beq	194a0 <__assert_fail@plt+0x7770>
   19418:	mov	r2, #5
   1941c:	movw	r1, #4068	; 0xfe4
   19420:	mov	r0, #0
   19424:	movt	r1, #3
   19428:	bl	1191c <dcgettext@plt>
   1942c:	bl	11a9c <puts@plt>
   19430:	b	19278 <__assert_fail@plt+0x7548>
   19434:	mov	r2, #5
   19438:	movw	r1, #4024	; 0xfb8
   1943c:	mov	r0, #0
   19440:	movt	r1, #3
   19444:	bl	1191c <dcgettext@plt>
   19448:	bl	11a9c <puts@plt>
   1944c:	b	19278 <__assert_fail@plt+0x7548>
   19450:	mov	r2, #5
   19454:	movw	r1, #3796	; 0xed4
   19458:	mov	r0, #0
   1945c:	movt	r1, #3
   19460:	bl	1191c <dcgettext@plt>
   19464:	bl	11a9c <puts@plt>
   19468:	b	19218 <__assert_fail@plt+0x74e8>
   1946c:	mov	r2, #5
   19470:	movw	r1, #4132	; 0x1024
   19474:	mov	r0, #0
   19478:	movt	r1, #3
   1947c:	bl	1191c <dcgettext@plt>
   19480:	bl	11a9c <puts@plt>
   19484:	ldr	r0, [r6]
   19488:	bl	11868 <fflush@plt>
   1948c:	movw	r3, #26876	; 0x68fc
   19490:	movt	r3, #4
   19494:	ldr	r0, [r3]
   19498:	bl	11868 <fflush@plt>
   1949c:	bl	11d00 <abort@plt>
   194a0:	movw	r0, #4052	; 0xfd4
   194a4:	movw	r1, #2704	; 0xa90
   194a8:	movt	r0, #3
   194ac:	movt	r1, #3
   194b0:	movw	r2, #983	; 0x3d7
   194b4:	ldr	r3, [pc, #4]	; 194c0 <__assert_fail@plt+0x7790>
   194b8:	bl	11d30 <__assert_fail@plt>
   194bc:	bl	11934 <__stack_chk_fail@plt>
   194c0:	andeq	r0, r3, r8, lsr sl
   194c4:	push	{r3, r4, r5, lr}
   194c8:	mov	r2, #5
   194cc:	movw	r1, #4176	; 0x1050
   194d0:	mov	r0, #0
   194d4:	movt	r1, #3
   194d8:	movw	r5, #27036	; 0x699c
   194dc:	movt	r5, #4
   194e0:	bl	1191c <dcgettext@plt>
   194e4:	bl	11a9c <puts@plt>
   194e8:	movw	r4, #26888	; 0x6908
   194ec:	mov	r0, r5
   194f0:	movt	r4, #4
   194f4:	movw	r1, #36948	; 0x9054
   194f8:	movt	r1, #1
   194fc:	bl	2ed28 <error@@Base+0xc0e8>
   19500:	mov	r2, #5
   19504:	movw	r1, #4188	; 0x105c
   19508:	mov	r0, #0
   1950c:	movt	r1, #3
   19510:	bl	1191c <dcgettext@plt>
   19514:	ldr	r1, [r4]
   19518:	bl	11ce8 <fputs@plt>
   1951c:	mov	r0, r5
   19520:	ldr	r1, [r4]
   19524:	pop	{r3, r4, r5, lr}
   19528:	b	2edcc <error@@Base+0xc18c>
   1952c:	movw	r0, #27036	; 0x699c
   19530:	movw	r1, #30944	; 0x78e0
   19534:	movt	r0, #4
   19538:	movt	r1, #1
   1953c:	b	2ed28 <error@@Base+0xc0e8>
   19540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19544:	movw	r7, #27036	; 0x699c
   19548:	movt	r7, #4
   1954c:	sub	sp, sp, #20
   19550:	mov	r9, r0
   19554:	ldr	r2, [r7, #12]
   19558:	ldr	r3, [r7, #52]	; 0x34
   1955c:	cmp	r2, r3
   19560:	beq	19698 <__assert_fail@plt+0x7968>
   19564:	bl	11b5c <strlen@plt>
   19568:	movw	r8, #19923	; 0x4dd3
   1956c:	movt	r8, #4194	; 0x1062
   19570:	mov	r5, #500	; 0x1f4
   19574:	ldr	r4, [r7]
   19578:	ldr	r6, [r7, #4]
   1957c:	add	r6, r4, r6, lsl #2
   19580:	umull	r1, sl, r8, r0
   19584:	mov	r0, r9
   19588:	lsr	sl, sl, #5
   1958c:	mla	sl, sl, r5, r5
   19590:	mov	r1, sl
   19594:	str	sl, [sp, #8]
   19598:	bl	22fb0 <error@@Base+0x370>
   1959c:	cmp	r4, r6
   195a0:	mov	r9, r0
   195a4:	bcs	196a4 <__assert_fail@plt+0x7974>
   195a8:	movw	sl, #26848	; 0x68e0
   195ac:	movt	sl, #4
   195b0:	str	r7, [sp, #12]
   195b4:	mov	fp, r0
   195b8:	mov	r8, #0
   195bc:	mov	r7, sl
   195c0:	b	195e8 <__assert_fail@plt+0x78b8>
   195c4:	mov	r0, fp
   195c8:	mov	r2, sl
   195cc:	bl	118c8 <memcpy@plt>
   195d0:	add	r3, fp, sl
   195d4:	add	fp, r3, #1
   195d8:	mov	r1, #32
   195dc:	strb	r1, [r3]
   195e0:	cmp	r6, r4
   195e4:	bls	19684 <__assert_fail@plt+0x7954>
   195e8:	ldr	r5, [r4], #4
   195ec:	cmp	r5, #0
   195f0:	beq	195e0 <__assert_fail@plt+0x78b0>
   195f4:	ldr	r3, [r7]
   195f8:	cmp	r5, r3
   195fc:	beq	195e0 <__assert_fail@plt+0x78b0>
   19600:	ldrb	r3, [r5, #78]	; 0x4e
   19604:	lsrs	r3, r3, #7
   19608:	beq	195e0 <__assert_fail@plt+0x78b0>
   1960c:	ldr	r1, [r5]
   19610:	add	r8, r8, #1
   19614:	mov	r0, r1
   19618:	str	r1, [sp, #4]
   1961c:	bl	11b5c <strlen@plt>
   19620:	ldr	r3, [sp, #8]
   19624:	ldr	r1, [sp, #4]
   19628:	add	r8, r8, r0
   1962c:	mov	sl, r0
   19630:	cmp	r8, r3
   19634:	bls	195c4 <__assert_fail@plt+0x7894>
   19638:	add	r2, r0, #1
   1963c:	movw	r3, #19923	; 0x4dd3
   19640:	movt	r3, #4194	; 0x1062
   19644:	mov	r0, r9
   19648:	rsb	fp, r9, fp
   1964c:	smull	r3, r1, r3, r2
   19650:	asr	r2, r2, #31
   19654:	ldr	r3, [sp, #8]
   19658:	rsb	r2, r2, r1, asr #5
   1965c:	mov	r1, #500	; 0x1f4
   19660:	mla	r2, r2, r1, r1
   19664:	add	r3, r3, r2
   19668:	str	r3, [sp, #8]
   1966c:	mov	r1, r3
   19670:	bl	22fb0 <error@@Base+0x370>
   19674:	ldr	r1, [r5]
   19678:	mov	r9, r0
   1967c:	add	fp, r0, fp
   19680:	b	195c4 <__assert_fail@plt+0x7894>
   19684:	ldr	r7, [sp, #12]
   19688:	mov	r2, #0
   1968c:	strb	r2, [fp, #-1]
   19690:	ldr	r3, [r7, #12]
   19694:	str	r3, [r7, #52]	; 0x34
   19698:	mov	r0, r9
   1969c:	add	sp, sp, #20
   196a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196a4:	mov	fp, r0
   196a8:	b	19688 <__assert_fail@plt+0x7958>
   196ac:	push	{lr}		; (str lr, [sp, #-4]!)
   196b0:	sub	sp, sp, #12
   196b4:	mov	r1, #1000	; 0x3e8
   196b8:	movw	r3, #31436	; 0x7acc
   196bc:	movw	r0, #27036	; 0x699c
   196c0:	movt	r3, #1
   196c4:	movt	r0, #4
   196c8:	str	r3, [sp]
   196cc:	movw	r2, #30800	; 0x7850
   196d0:	movw	r3, #30856	; 0x7888
   196d4:	movt	r2, #1
   196d8:	movt	r3, #1
   196dc:	bl	2e838 <error@@Base+0xbbf8>
   196e0:	add	sp, sp, #12
   196e4:	pop	{pc}		; (ldr pc, [sp], #4)
   196e8:	push	{r4, r5}
   196ec:	ldrb	r1, [r0, #4]
   196f0:	ldr	r3, [r0]
   196f4:	cmp	r1, #0
   196f8:	beq	19768 <__assert_fail@plt+0x7a38>
   196fc:	cmp	r1, #1
   19700:	ldrbeq	r0, [r3]
   19704:	moveq	r1, #0
   19708:	beq	1975c <__assert_fail@plt+0x7a2c>
   1970c:	ldrb	r2, [r3]
   19710:	cmp	r2, #0
   19714:	ldrbeq	r0, [r3, #1]
   19718:	moveq	r1, r2
   1971c:	beq	1975c <__assert_fail@plt+0x7a2c>
   19720:	sub	r5, r1, #2
   19724:	mov	r1, #0
   19728:	add	r5, r3, r5
   1972c:	b	1973c <__assert_fail@plt+0x7a0c>
   19730:	cmp	r2, #0
   19734:	beq	19778 <__assert_fail@plt+0x7a48>
   19738:	mov	r3, r4
   1973c:	mov	ip, r2
   19740:	ldrb	r2, [r3, #1]
   19744:	cmp	r3, r5
   19748:	add	r4, r3, #1
   1974c:	and	r0, r2, #15
   19750:	add	r1, r1, ip, lsl r0
   19754:	bne	19730 <__assert_fail@plt+0x7a00>
   19758:	mov	r0, r2
   1975c:	add	r0, r0, r1
   19760:	pop	{r4, r5}
   19764:	bx	lr
   19768:	ldrb	r0, [r3]
   1976c:	pop	{r4, r5}
   19770:	add	r0, r0, r1
   19774:	bx	lr
   19778:	ldrb	r0, [r3, #2]
   1977c:	pop	{r4, r5}
   19780:	add	r0, r0, r1
   19784:	bx	lr
   19788:	push	{r4, r5}
   1978c:	ldrb	r1, [r0, #4]
   19790:	ldr	r3, [r0]
   19794:	cmp	r1, #0
   19798:	beq	19808 <__assert_fail@plt+0x7ad8>
   1979c:	cmp	r1, #1
   197a0:	ldrbeq	r0, [r3]
   197a4:	moveq	r1, #0
   197a8:	beq	197fc <__assert_fail@plt+0x7acc>
   197ac:	ldrb	r2, [r3]
   197b0:	cmp	r2, #0
   197b4:	ldrbeq	r0, [r3, #1]
   197b8:	moveq	r1, r2
   197bc:	beq	197fc <__assert_fail@plt+0x7acc>
   197c0:	sub	r5, r1, #2
   197c4:	mov	r1, #0
   197c8:	add	r5, r3, r5
   197cc:	b	197dc <__assert_fail@plt+0x7aac>
   197d0:	cmp	r2, #0
   197d4:	beq	19818 <__assert_fail@plt+0x7ae8>
   197d8:	mov	r3, r4
   197dc:	mov	ip, r2
   197e0:	ldrb	r2, [r3, #1]
   197e4:	cmp	r3, r5
   197e8:	add	r4, r3, #1
   197ec:	and	r0, r2, #7
   197f0:	add	r1, r1, ip, lsl r0
   197f4:	bne	197d0 <__assert_fail@plt+0x7aa0>
   197f8:	mov	r0, r2
   197fc:	add	r0, r0, r1
   19800:	pop	{r4, r5}
   19804:	bx	lr
   19808:	ldrb	r0, [r3]
   1980c:	pop	{r4, r5}
   19810:	add	r0, r0, r1
   19814:	bx	lr
   19818:	ldrb	r0, [r3, #2]
   1981c:	pop	{r4, r5}
   19820:	add	r0, r0, r1
   19824:	bx	lr
   19828:	ldr	r2, [r0, #8]
   1982c:	ldrb	r3, [r2]
   19830:	cmp	r3, #0
   19834:	beq	19858 <__assert_fail@plt+0x7b28>
   19838:	mov	r0, #0
   1983c:	mov	ip, r3
   19840:	ldrb	r3, [r2, #1]!
   19844:	cmp	r3, #0
   19848:	and	r1, r3, #15
   1984c:	add	r0, r0, ip, lsl r1
   19850:	bne	1983c <__assert_fail@plt+0x7b0c>
   19854:	bx	lr
   19858:	mov	r0, r3
   1985c:	bx	lr
   19860:	ldr	r2, [r0, #8]
   19864:	ldrb	r3, [r2]
   19868:	cmp	r3, #0
   1986c:	beq	19890 <__assert_fail@plt+0x7b60>
   19870:	mov	r0, #0
   19874:	mov	ip, r3
   19878:	ldrb	r3, [r2, #1]!
   1987c:	cmp	r3, #0
   19880:	and	r1, r3, #7
   19884:	add	r0, r0, ip, lsl r1
   19888:	bne	19874 <__assert_fail@plt+0x7b44>
   1988c:	bx	lr
   19890:	mov	r0, r3
   19894:	bx	lr
   19898:	push	{r3, r4, r5, lr}
   1989c:	mov	r5, r0
   198a0:	ldr	r4, [r1]
   198a4:	ldr	r0, [r1, #4]
   198a8:	mov	r1, r4
   198ac:	bl	11808 <strstr@plt>
   198b0:	cmp	r0, #0
   198b4:	beq	198d4 <__assert_fail@plt+0x7ba4>
   198b8:	mov	r0, r4
   198bc:	bl	11b5c <strlen@plt>
   198c0:	mov	r1, r4
   198c4:	mov	r2, r0
   198c8:	mov	r0, r5
   198cc:	pop	{r3, r4, r5, lr}
   198d0:	b	16bc4 <__assert_fail@plt+0x4e94>
   198d4:	mov	r0, r5
   198d8:	pop	{r3, r4, r5, pc}
   198dc:	push	{r3, r4, r5, r6, r7, lr}
   198e0:	mov	r6, r0
   198e4:	ldr	r7, [r1]
   198e8:	ldrb	r5, [r7]
   198ec:	cmp	r5, #0
   198f0:	beq	1999c <__assert_fail@plt+0x7c6c>
   198f4:	bl	11b20 <__ctype_b_loc@plt>
   198f8:	mov	r3, r5
   198fc:	mov	r4, r0
   19900:	mov	r0, #0
   19904:	mov	r1, r7
   19908:	ldr	r5, [r4]
   1990c:	b	19914 <__assert_fail@plt+0x7be4>
   19910:	ldrb	r3, [r1, #1]!
   19914:	lsl	r2, r3, #1
   19918:	ldrh	r2, [r5, r2]
   1991c:	and	r2, r2, #8192	; 0x2000
   19920:	uxth	r2, r2
   19924:	cmp	r2, #0
   19928:	bne	19910 <__assert_fail@plt+0x7be0>
   1992c:	cmp	r3, #0
   19930:	beq	19990 <__assert_fail@plt+0x7c60>
   19934:	add	r3, r1, #1
   19938:	b	19948 <__assert_fail@plt+0x7c18>
   1993c:	ldrh	r0, [r5, ip]
   19940:	tst	r0, #8192	; 0x2000
   19944:	bne	19960 <__assert_fail@plt+0x7c30>
   19948:	mov	r7, r3
   1994c:	ldrb	ip, [r3], #1
   19950:	add	r2, r2, #1
   19954:	cmp	ip, #0
   19958:	lsl	ip, ip, #1
   1995c:	bne	1993c <__assert_fail@plt+0x7c0c>
   19960:	mov	r0, r6
   19964:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19968:	movw	r1, #19524	; 0x4c44
   1996c:	mov	r2, #1
   19970:	movt	r1, #3
   19974:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19978:	ldrb	r3, [r7]
   1997c:	cmp	r3, #0
   19980:	mov	r6, r0
   19984:	beq	19998 <__assert_fail@plt+0x7c68>
   19988:	mov	r0, #1
   1998c:	b	19904 <__assert_fail@plt+0x7bd4>
   19990:	cmp	r0, #0
   19994:	beq	1999c <__assert_fail@plt+0x7c6c>
   19998:	sub	r6, r6, #1
   1999c:	mov	r0, r6
   199a0:	pop	{r3, r4, r5, r6, r7, pc}
   199a4:	ldrb	r2, [r0, #4]
   199a8:	ldrb	r3, [r1, #4]
   199ac:	subs	r3, r2, r3
   199b0:	bne	199c8 <__assert_fail@plt+0x7c98>
   199b4:	ldr	r0, [r0]
   199b8:	ldr	r1, [r1]
   199bc:	cmp	r0, r1
   199c0:	beq	199c8 <__assert_fail@plt+0x7c98>
   199c4:	b	11cf4 <strncmp@plt>
   199c8:	mov	r0, r3
   199cc:	bx	lr
   199d0:	push	{r4, r5, r6, r7, lr}
   199d4:	movw	r6, #26864	; 0x68f0
   199d8:	movt	r6, #4
   199dc:	sub	sp, sp, #20
   199e0:	ldr	r2, [r1]
   199e4:	add	r4, sp, #16
   199e8:	ldr	r3, [r6]
   199ec:	mov	r7, r0
   199f0:	mov	r5, #0
   199f4:	str	r2, [r4, #-8]!
   199f8:	str	r3, [sp, #12]
   199fc:	b	19a04 <__assert_fail@plt+0x7cd4>
   19a00:	mov	r5, r0
   19a04:	mov	r0, r4
   19a08:	add	r1, sp, #4
   19a0c:	bl	2346c <error@@Base+0x82c>
   19a10:	cmp	r0, #0
   19a14:	bne	19a00 <__assert_fail@plt+0x7cd0>
   19a18:	cmp	r5, #0
   19a1c:	beq	19a34 <__assert_fail@plt+0x7d04>
   19a20:	mov	r0, r7
   19a24:	mov	r1, r5
   19a28:	ldr	r2, [sp, #4]
   19a2c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19a30:	mov	r7, r0
   19a34:	ldr	r2, [sp, #12]
   19a38:	mov	r0, r7
   19a3c:	ldr	r3, [r6]
   19a40:	cmp	r2, r3
   19a44:	bne	19a50 <__assert_fail@plt+0x7d20>
   19a48:	add	sp, sp, #20
   19a4c:	pop	{r4, r5, r6, r7, pc}
   19a50:	bl	11934 <__stack_chk_fail@plt>
   19a54:	push	{r4, r5, r6, r7, r8, lr}
   19a58:	movw	r8, #26864	; 0x68f0
   19a5c:	movt	r8, #4
   19a60:	ldm	r1, {r2, r3}
   19a64:	sub	sp, sp, #24
   19a68:	mov	r4, r0
   19a6c:	ldr	ip, [r8]
   19a70:	mov	r7, #0
   19a74:	stmib	sp, {r2, r3}
   19a78:	str	ip, [sp, #20]
   19a7c:	add	r0, sp, #4
   19a80:	add	r1, sp, #12
   19a84:	bl	2346c <error@@Base+0x82c>
   19a88:	subs	r5, r0, #0
   19a8c:	beq	19aa4 <__assert_fail@plt+0x7d74>
   19a90:	mov	r0, r4
   19a94:	mov	r1, r5
   19a98:	ldr	r2, [sp, #12]
   19a9c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19aa0:	mov	r4, r0
   19aa4:	add	r0, sp, #8
   19aa8:	add	r1, sp, #16
   19aac:	bl	2346c <error@@Base+0x82c>
   19ab0:	subs	r6, r0, #0
   19ab4:	beq	19acc <__assert_fail@plt+0x7d9c>
   19ab8:	mov	r0, r4
   19abc:	mov	r1, r6
   19ac0:	ldr	r2, [sp, #16]
   19ac4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19ac8:	mov	r4, r0
   19acc:	cmp	r5, #0
   19ad0:	cmpeq	r6, #0
   19ad4:	bne	19afc <__assert_fail@plt+0x7dcc>
   19ad8:	ldr	r2, [sp, #20]
   19adc:	cmp	r7, #0
   19ae0:	ldr	r3, [r8]
   19ae4:	subne	r4, r4, #1
   19ae8:	cmp	r2, r3
   19aec:	mov	r0, r4
   19af0:	bne	19b1c <__assert_fail@plt+0x7dec>
   19af4:	add	sp, sp, #24
   19af8:	pop	{r4, r5, r6, r7, r8, pc}
   19afc:	mov	r0, r4
   19b00:	movw	r1, #19524	; 0x4c44
   19b04:	mov	r2, #1
   19b08:	movt	r1, #3
   19b0c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19b10:	mov	r7, #1
   19b14:	mov	r4, r0
   19b18:	b	19a7c <__assert_fail@plt+0x7d4c>
   19b1c:	bl	11934 <__stack_chk_fail@plt>
   19b20:	push	{r4, r5, lr}
   19b24:	movw	r4, #26864	; 0x68f0
   19b28:	movt	r4, #4
   19b2c:	sub	sp, sp, #20
   19b30:	ldr	ip, [r1]
   19b34:	add	r3, sp, #16
   19b38:	ldr	r2, [r4]
   19b3c:	add	r1, sp, #4
   19b40:	mov	r5, r0
   19b44:	str	ip, [r3, #-8]!
   19b48:	mov	r0, r3
   19b4c:	str	r2, [sp, #12]
   19b50:	bl	2346c <error@@Base+0x82c>
   19b54:	subs	r1, r0, #0
   19b58:	beq	19b6c <__assert_fail@plt+0x7e3c>
   19b5c:	mov	r0, r5
   19b60:	ldr	r2, [sp, #4]
   19b64:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19b68:	mov	r5, r0
   19b6c:	ldr	r2, [sp, #12]
   19b70:	mov	r0, r5
   19b74:	ldr	r3, [r4]
   19b78:	cmp	r2, r3
   19b7c:	bne	19b88 <__assert_fail@plt+0x7e58>
   19b80:	add	sp, sp, #20
   19b84:	pop	{r4, r5, pc}
   19b88:	bl	11934 <__stack_chk_fail@plt>
   19b8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19b90:	movw	r8, #26864	; 0x68f0
   19b94:	movt	r8, #4
   19b98:	ldr	ip, [r1]
   19b9c:	movw	r1, #4220	; 0x107c
   19ba0:	movt	r1, #3
   19ba4:	ldr	r3, [r8]
   19ba8:	sub	sp, sp, #20
   19bac:	cmp	r2, r1
   19bb0:	mov	fp, #0
   19bb4:	str	ip, [sp, #4]
   19bb8:	mov	r5, r0
   19bbc:	str	r3, [sp, #12]
   19bc0:	str	fp, [sp, #8]
   19bc4:	beq	19ce0 <__assert_fail@plt+0x7fb0>
   19bc8:	ldrb	r3, [r2]
   19bcc:	cmp	r3, #115	; 0x73
   19bd0:	beq	19cf0 <__assert_fail@plt+0x7fc0>
   19bd4:	mov	r6, #1
   19bd8:	mov	r7, r6
   19bdc:	mov	r9, #0
   19be0:	add	r0, sp, #4
   19be4:	add	r1, sp, #8
   19be8:	bl	2346c <error@@Base+0x82c>
   19bec:	subs	sl, r0, #0
   19bf0:	beq	19cbc <__assert_fail@plt+0x7f8c>
   19bf4:	ldr	r2, [sp, #8]
   19bf8:	adds	r4, sl, r2
   19bfc:	bcs	19ca0 <__assert_fail@plt+0x7f70>
   19c00:	sub	r3, r4, #1
   19c04:	b	19c18 <__assert_fail@plt+0x7ee8>
   19c08:	sub	r4, r4, #1
   19c0c:	sub	r3, r3, #1
   19c10:	cmp	sl, r4
   19c14:	bhi	19ca0 <__assert_fail@plt+0x7f70>
   19c18:	cmp	fp, #0
   19c1c:	ldrb	ip, [r3, #1]
   19c20:	beq	19c2c <__assert_fail@plt+0x7efc>
   19c24:	cmp	ip, #46	; 0x2e
   19c28:	beq	19c34 <__assert_fail@plt+0x7f04>
   19c2c:	cmp	ip, #47	; 0x2f
   19c30:	bne	19c08 <__assert_fail@plt+0x7ed8>
   19c34:	cmp	sl, r4
   19c38:	bhi	19ca0 <__assert_fail@plt+0x7f70>
   19c3c:	cmp	r6, #0
   19c40:	addne	r4, r4, #1
   19c44:	bne	19c54 <__assert_fail@plt+0x7f24>
   19c48:	ldrb	r3, [r4]
   19c4c:	cmp	r3, #46	; 0x2e
   19c50:	bne	19be0 <__assert_fail@plt+0x7eb0>
   19c54:	rsb	r3, r4, sl
   19c58:	mov	r0, r5
   19c5c:	add	r2, r3, r2
   19c60:	mov	r1, r4
   19c64:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19c68:	mov	r5, r0
   19c6c:	cmp	r4, sl
   19c70:	movcc	r4, r7
   19c74:	orrcs	r4, r7, #1
   19c78:	tst	r4, #255	; 0xff
   19c7c:	beq	19be0 <__assert_fail@plt+0x7eb0>
   19c80:	mov	r0, r5
   19c84:	movw	r1, #19524	; 0x4c44
   19c88:	mov	r2, #1
   19c8c:	movt	r1, #3
   19c90:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19c94:	mov	r9, #1
   19c98:	mov	r5, r0
   19c9c:	b	19be0 <__assert_fail@plt+0x7eb0>
   19ca0:	cmp	r6, #0
   19ca4:	beq	19c6c <__assert_fail@plt+0x7f3c>
   19ca8:	mov	r0, r5
   19cac:	mov	r1, sl
   19cb0:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19cb4:	mov	r5, r0
   19cb8:	b	19c6c <__assert_fail@plt+0x7f3c>
   19cbc:	ldr	r2, [sp, #12]
   19cc0:	cmp	r9, #0
   19cc4:	ldr	r3, [r8]
   19cc8:	subne	r5, r5, #1
   19ccc:	cmp	r2, r3
   19cd0:	mov	r0, r5
   19cd4:	bne	19d10 <__assert_fail@plt+0x7fe0>
   19cd8:	add	sp, sp, #20
   19cdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ce0:	mov	r6, fp
   19ce4:	mov	fp, #1
   19ce8:	mov	r7, r6
   19cec:	b	19bdc <__assert_fail@plt+0x7eac>
   19cf0:	add	r0, r2, #1
   19cf4:	add	r1, r1, #1
   19cf8:	bl	1182c <strcmp@plt>
   19cfc:	subs	r6, r0, #0
   19d00:	moveq	r7, r6
   19d04:	moveq	fp, #1
   19d08:	beq	19bdc <__assert_fail@plt+0x7eac>
   19d0c:	b	19bd4 <__assert_fail@plt+0x7ea4>
   19d10:	bl	11934 <__stack_chk_fail@plt>
   19d14:	push	{r4, r5, r6, r7, r8, lr}
   19d18:	movw	r6, #26864	; 0x68f0
   19d1c:	movt	r6, #4
   19d20:	ldr	ip, [r1]
   19d24:	movw	r1, #4228	; 0x1084
   19d28:	movt	r1, #3
   19d2c:	ldr	r3, [r6]
   19d30:	sub	sp, sp, #16
   19d34:	cmp	r2, r1
   19d38:	mov	r4, #0
   19d3c:	str	ip, [sp, #4]
   19d40:	mov	r7, r0
   19d44:	str	r3, [sp, #12]
   19d48:	str	r4, [sp, #8]
   19d4c:	beq	19e70 <__assert_fail@plt+0x8140>
   19d50:	ldrb	r3, [r2]
   19d54:	cmp	r3, #98	; 0x62
   19d58:	movne	r5, #1
   19d5c:	beq	19e7c <__assert_fail@plt+0x814c>
   19d60:	mov	r8, #0
   19d64:	add	r1, sp, #8
   19d68:	add	r0, sp, #4
   19d6c:	bl	2346c <error@@Base+0x82c>
   19d70:	subs	r1, r0, #0
   19d74:	beq	19e3c <__assert_fail@plt+0x810c>
   19d78:	ldr	r2, [sp, #8]
   19d7c:	adds	r3, r1, r2
   19d80:	bcs	19e14 <__assert_fail@plt+0x80e4>
   19d84:	sub	ip, r3, #1
   19d88:	b	19d9c <__assert_fail@plt+0x806c>
   19d8c:	sub	r3, r3, #1
   19d90:	sub	ip, ip, #1
   19d94:	cmp	r1, r3
   19d98:	bhi	19e14 <__assert_fail@plt+0x80e4>
   19d9c:	cmp	r4, #0
   19da0:	ldrb	lr, [ip, #1]
   19da4:	beq	19db0 <__assert_fail@plt+0x8080>
   19da8:	cmp	lr, #46	; 0x2e
   19dac:	beq	19db8 <__assert_fail@plt+0x8088>
   19db0:	cmp	lr, #47	; 0x2f
   19db4:	bne	19d8c <__assert_fail@plt+0x805c>
   19db8:	cmp	r1, r3
   19dbc:	movhi	r0, #0
   19dc0:	movls	r0, #1
   19dc4:	tst	r0, r5
   19dc8:	bne	19e28 <__assert_fail@plt+0x80f8>
   19dcc:	cmp	r0, #0
   19dd0:	beq	19de0 <__assert_fail@plt+0x80b0>
   19dd4:	ldrb	r0, [r3]
   19dd8:	cmp	r0, #46	; 0x2e
   19ddc:	beq	19e60 <__assert_fail@plt+0x8130>
   19de0:	cmp	r5, #0
   19de4:	mov	r0, r7
   19de8:	movwne	r1, #2684	; 0xa7c
   19dec:	movne	r2, #2
   19df0:	movtne	r1, #3
   19df4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19df8:	movw	r1, #19524	; 0x4c44
   19dfc:	mov	r2, #1
   19e00:	movt	r1, #3
   19e04:	mov	r8, #1
   19e08:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19e0c:	mov	r7, r0
   19e10:	b	19d64 <__assert_fail@plt+0x8034>
   19e14:	cmp	r3, r1
   19e18:	movcc	r0, #0
   19e1c:	andcs	r0, r5, #1
   19e20:	cmp	r0, #0
   19e24:	beq	19de0 <__assert_fail@plt+0x80b0>
   19e28:	add	r2, r3, #1
   19e2c:	mov	r0, r7
   19e30:	rsb	r2, r1, r2
   19e34:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19e38:	b	19df8 <__assert_fail@plt+0x80c8>
   19e3c:	ldr	r2, [sp, #12]
   19e40:	cmp	r8, #0
   19e44:	ldr	r3, [r6]
   19e48:	subne	r7, r7, #1
   19e4c:	cmp	r2, r3
   19e50:	mov	r0, r7
   19e54:	bne	19ea0 <__assert_fail@plt+0x8170>
   19e58:	add	sp, sp, #16
   19e5c:	pop	{r4, r5, r6, r7, r8, pc}
   19e60:	mov	r0, r7
   19e64:	rsb	r2, r1, r3
   19e68:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19e6c:	b	19df8 <__assert_fail@plt+0x80c8>
   19e70:	mov	r5, r4
   19e74:	mov	r4, #1
   19e78:	b	19d60 <__assert_fail@plt+0x8030>
   19e7c:	add	r0, r2, #1
   19e80:	add	r1, r1, #1
   19e84:	bl	1182c <strcmp@plt>
   19e88:	cmp	r0, r4
   19e8c:	moveq	r5, #0
   19e90:	movne	r5, #1
   19e94:	movne	r4, #0
   19e98:	moveq	r4, #1
   19e9c:	b	19d60 <__assert_fail@plt+0x8030>
   19ea0:	bl	11934 <__stack_chk_fail@plt>
   19ea4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19ea8:	movw	sl, #26864	; 0x68f0
   19eac:	movt	sl, #4
   19eb0:	sub	sp, sp, #16
   19eb4:	mov	r4, r0
   19eb8:	ldr	r0, [r1]
   19ebc:	ldr	r3, [sl]
   19ec0:	mov	r6, r1
   19ec4:	mov	r5, r2
   19ec8:	str	r3, [sp, #12]
   19ecc:	bl	11b5c <strlen@plt>
   19ed0:	ldr	r3, [r6, #4]
   19ed4:	movw	r1, #4240	; 0x1090
   19ed8:	movt	r1, #3
   19edc:	cmp	r5, r1
   19ee0:	str	r3, [sp, #4]
   19ee4:	moveq	r9, #1
   19ee8:	mov	r8, r0
   19eec:	beq	19f00 <__assert_fail@plt+0x81d0>
   19ef0:	ldrb	r3, [r5]
   19ef4:	cmp	r3, #97	; 0x61
   19ef8:	movne	r9, #0
   19efc:	beq	19f98 <__assert_fail@plt+0x8268>
   19f00:	mov	r7, #0
   19f04:	b	19f38 <__assert_fail@plt+0x8208>
   19f08:	mov	r1, r5
   19f0c:	ldr	r2, [sp, #8]
   19f10:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19f14:	ldr	r1, [r6]
   19f18:	mov	r2, r8
   19f1c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19f20:	movw	r1, #19524	; 0x4c44
   19f24:	mov	r2, #1
   19f28:	movt	r1, #3
   19f2c:	mov	r7, #1
   19f30:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19f34:	mov	r4, r0
   19f38:	add	r0, sp, #4
   19f3c:	add	r1, sp, #8
   19f40:	bl	2346c <error@@Base+0x82c>
   19f44:	subs	r5, r0, #0
   19f48:	beq	19f74 <__assert_fail@plt+0x8244>
   19f4c:	cmp	r9, #0
   19f50:	mov	r0, r4
   19f54:	beq	19f08 <__assert_fail@plt+0x81d8>
   19f58:	ldr	r1, [r6]
   19f5c:	mov	r2, r8
   19f60:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19f64:	mov	r1, r5
   19f68:	ldr	r2, [sp, #8]
   19f6c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   19f70:	b	19f20 <__assert_fail@plt+0x81f0>
   19f74:	ldr	r2, [sp, #12]
   19f78:	cmp	r7, #0
   19f7c:	ldr	r3, [sl]
   19f80:	subne	r4, r4, #1
   19f84:	cmp	r2, r3
   19f88:	mov	r0, r4
   19f8c:	bne	19fb0 <__assert_fail@plt+0x8280>
   19f90:	add	sp, sp, #16
   19f94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19f98:	add	r0, r5, #1
   19f9c:	add	r1, r1, #1
   19fa0:	bl	1182c <strcmp@plt>
   19fa4:	rsbs	r9, r0, #1
   19fa8:	movcc	r9, #0
   19fac:	b	19f00 <__assert_fail@plt+0x81d0>
   19fb0:	bl	11934 <__stack_chk_fail@plt>
   19fb4:	push	{r4, r5, r6, r7, lr}
   19fb8:	movw	r6, #26864	; 0x68f0
   19fbc:	movt	r6, #4
   19fc0:	ldrb	r4, [r0]
   19fc4:	sub	sp, sp, #20
   19fc8:	mov	r7, r0
   19fcc:	ldr	r3, [r6]
   19fd0:	cmp	r4, #0
   19fd4:	str	r3, [sp, #12]
   19fd8:	beq	1a01c <__assert_fail@plt+0x82ec>
   19fdc:	sub	r3, r4, #97	; 0x61
   19fe0:	cmp	r4, #45	; 0x2d
   19fe4:	cmpne	r3, #25
   19fe8:	bhi	1a04c <__assert_fail@plt+0x831c>
   19fec:	add	r3, r0, #1
   19ff0:	b	1a004 <__assert_fail@plt+0x82d4>
   19ff4:	sub	r2, r4, #97	; 0x61
   19ff8:	cmp	r4, #45	; 0x2d
   19ffc:	cmpne	r2, #25
   1a000:	bhi	1a050 <__assert_fail@plt+0x8320>
   1a004:	mov	r5, r3
   1a008:	ldrb	r4, [r3], #1
   1a00c:	cmp	r4, #0
   1a010:	bne	19ff4 <__assert_fail@plt+0x82c4>
   1a014:	rsb	r4, r7, r5
   1a018:	uxtb	r4, r4
   1a01c:	movw	r0, #27092	; 0x69d4
   1a020:	mov	r1, sp
   1a024:	movt	r0, #4
   1a028:	str	r7, [sp]
   1a02c:	strb	r4, [sp, #4]
   1a030:	bl	2e9d4 <error@@Base+0xbd94>
   1a034:	ldr	r2, [sp, #12]
   1a038:	ldr	r3, [r6]
   1a03c:	cmp	r2, r3
   1a040:	bne	1a06c <__assert_fail@plt+0x833c>
   1a044:	add	sp, sp, #20
   1a048:	pop	{r4, r5, r6, r7, pc}
   1a04c:	mov	r5, r0
   1a050:	bl	11b20 <__ctype_b_loc@plt>
   1a054:	lsl	r4, r4, #1
   1a058:	ldr	r3, [r0]
   1a05c:	ldrh	r0, [r3, r4]
   1a060:	ands	r0, r0, #1
   1a064:	bne	1a014 <__assert_fail@plt+0x82e4>
   1a068:	b	1a034 <__assert_fail@plt+0x8304>
   1a06c:	bl	11934 <__stack_chk_fail@plt>
   1a070:	push	{r4, r5, r6, r7, r8, r9, lr}
   1a074:	movw	r6, #26864	; 0x68f0
   1a078:	movt	r6, #4
   1a07c:	sub	sp, sp, #20
   1a080:	movw	r5, #27308	; 0x6aac
   1a084:	movt	r5, #4
   1a088:	ldr	r3, [r6]
   1a08c:	mov	r8, r0
   1a090:	mov	r7, r1
   1a094:	add	r0, sp, #4
   1a098:	add	r1, sp, #8
   1a09c:	movw	r4, #27092	; 0x69d4
   1a0a0:	str	r3, [sp, #12]
   1a0a4:	movt	r4, #4
   1a0a8:	bl	177ec <__assert_fail@plt+0x5abc>
   1a0ac:	ldr	r2, [r5]
   1a0b0:	ldr	r3, [r4, #44]	; 0x2c
   1a0b4:	tst	r2, #8192	; 0x2000
   1a0b8:	add	r0, r3, #1
   1a0bc:	str	r0, [r4, #44]	; 0x2c
   1a0c0:	bne	1a12c <__assert_fail@plt+0x83fc>
   1a0c4:	ldr	r0, [r7]
   1a0c8:	bl	27bd0 <error@@Base+0x4f90>
   1a0cc:	ldr	r3, [r5]
   1a0d0:	tst	r3, #8192	; 0x2000
   1a0d4:	beq	1a0fc <__assert_fail@plt+0x83cc>
   1a0d8:	ldr	r0, [r4, #44]	; 0x2c
   1a0dc:	bl	22b1c <__assert_fail@plt+0x10dec>
   1a0e0:	movw	r0, #4268	; 0x10ac
   1a0e4:	movt	r0, #3
   1a0e8:	bl	11a9c <puts@plt>
   1a0ec:	movw	r3, #26888	; 0x6908
   1a0f0:	movt	r3, #4
   1a0f4:	ldr	r0, [r3]
   1a0f8:	bl	11868 <fflush@plt>
   1a0fc:	ldr	r3, [r4, #44]	; 0x2c
   1a100:	ldmib	sp, {r0, r1}
   1a104:	sub	r3, r3, #1
   1a108:	str	r3, [r4, #44]	; 0x2c
   1a10c:	bl	17820 <__assert_fail@plt+0x5af0>
   1a110:	ldr	r2, [sp, #12]
   1a114:	ldr	r3, [r6]
   1a118:	mov	r0, r8
   1a11c:	cmp	r2, r3
   1a120:	bne	1a16c <__assert_fail@plt+0x843c>
   1a124:	add	sp, sp, #20
   1a128:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1a12c:	movw	r9, #26888	; 0x6908
   1a130:	movt	r9, #4
   1a134:	bl	22b1c <__assert_fail@plt+0x10dec>
   1a138:	movw	r0, #4252	; 0x109c
   1a13c:	movt	r0, #3
   1a140:	bl	11a9c <puts@plt>
   1a144:	ldr	r0, [r9]
   1a148:	bl	11868 <fflush@plt>
   1a14c:	ldr	r3, [r5]
   1a150:	tst	r3, #8192	; 0x2000
   1a154:	beq	1a0c4 <__assert_fail@plt+0x8394>
   1a158:	ldr	r0, [r7]
   1a15c:	bl	11a9c <puts@plt>
   1a160:	ldr	r0, [r9]
   1a164:	bl	11868 <fflush@plt>
   1a168:	b	1a0c4 <__assert_fail@plt+0x8394>
   1a16c:	bl	11934 <__stack_chk_fail@plt>
   1a170:	push	{r3, r4, r5, lr}
   1a174:	mov	r5, r0
   1a178:	ldr	r4, [r1]
   1a17c:	mov	r0, r4
   1a180:	bl	11b5c <strlen@plt>
   1a184:	mov	r1, r0
   1a188:	mov	r0, r4
   1a18c:	bl	2c6f8 <error@@Base+0x9ab8>
   1a190:	cmp	r0, #0
   1a194:	beq	1a1b8 <__assert_fail@plt+0x8488>
   1a198:	ldr	r4, [r0, #8]
   1a19c:	mov	r0, r4
   1a1a0:	bl	11b5c <strlen@plt>
   1a1a4:	mov	r1, r4
   1a1a8:	mov	r2, r0
   1a1ac:	mov	r0, r5
   1a1b0:	pop	{r3, r4, r5, lr}
   1a1b4:	b	16bc4 <__assert_fail@plt+0x4e94>
   1a1b8:	mov	r0, r5
   1a1bc:	pop	{r3, r4, r5, pc}
   1a1c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a1c4:	add	fp, sp, #32
   1a1c8:	sub	sp, sp, #28
   1a1cc:	movw	r3, #26864	; 0x68f0
   1a1d0:	movt	r3, #4
   1a1d4:	str	r3, [fp, #-48]	; 0xffffffd0
   1a1d8:	mov	r4, r1
   1a1dc:	ldr	sl, [r1]
   1a1e0:	ldr	r3, [r3]
   1a1e4:	cmp	sl, #0
   1a1e8:	str	r0, [fp, #-60]	; 0xffffffc4
   1a1ec:	str	r2, [fp, #-56]	; 0xffffffc8
   1a1f0:	str	r3, [fp, #-40]	; 0xffffffd8
   1a1f4:	beq	1a360 <__assert_fail@plt+0x8630>
   1a1f8:	mov	r6, r1
   1a1fc:	mov	r3, sl
   1a200:	mov	r5, #0
   1a204:	mov	r0, r3
   1a208:	add	r5, r5, #2
   1a20c:	bl	11b5c <strlen@plt>
   1a210:	ldr	r3, [r6, #4]!
   1a214:	cmp	r3, #0
   1a218:	add	r5, r5, r0
   1a21c:	bne	1a204 <__assert_fail@plt+0x84d4>
   1a220:	add	r5, r5, #1
   1a224:	ldr	r3, [r4, #4]
   1a228:	add	r5, r5, #14
   1a22c:	bic	r5, r5, #7
   1a230:	cmp	r3, #0
   1a234:	sub	sp, sp, r5
   1a238:	str	sp, [fp, #-52]	; 0xffffffcc
   1a23c:	beq	1a358 <__assert_fail@plt+0x8628>
   1a240:	add	r7, r4, #4
   1a244:	mov	r9, sp
   1a248:	mov	r6, #44	; 0x2c
   1a24c:	mov	r5, #32
   1a250:	mov	r8, r7
   1a254:	b	1a264 <__assert_fail@plt+0x8534>
   1a258:	ldr	sl, [r8, #-4]
   1a25c:	mov	r4, r7
   1a260:	add	r7, r7, #4
   1a264:	mov	r1, sl
   1a268:	mov	r0, r9
   1a26c:	bl	11a30 <strcpy@plt>
   1a270:	ldr	r0, [r4]
   1a274:	bl	11b5c <strlen@plt>
   1a278:	add	r1, r9, r0
   1a27c:	strb	r6, [r9, r0]
   1a280:	add	r9, r1, #2
   1a284:	strb	r5, [r1, #1]
   1a288:	ldr	r1, [r8, #4]!
   1a28c:	cmp	r1, #0
   1a290:	bne	1a258 <__assert_fail@plt+0x8528>
   1a294:	ldr	sl, [r4, #4]
   1a298:	mov	r0, r9
   1a29c:	mov	r1, sl
   1a2a0:	bl	11a30 <strcpy@plt>
   1a2a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a2a8:	ldrb	r3, [r2]
   1a2ac:	cmp	r3, #105	; 0x69
   1a2b0:	beq	1a33c <__assert_fail@plt+0x860c>
   1a2b4:	cmp	r3, #119	; 0x77
   1a2b8:	beq	1a300 <__assert_fail@plt+0x85d0>
   1a2bc:	cmp	r3, #101	; 0x65
   1a2c0:	beq	1a2e4 <__assert_fail@plt+0x85b4>
   1a2c4:	movw	r3, #26244	; 0x6684
   1a2c8:	movt	r3, #4
   1a2cc:	movw	r1, #4284	; 0x10bc
   1a2d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a2d4:	ldr	r3, [r3]
   1a2d8:	movt	r1, #3
   1a2dc:	ldr	r0, [r3]
   1a2e0:	bl	22d64 <error@@Base+0x124>
   1a2e4:	movw	r3, #28268	; 0x6e6c
   1a2e8:	movt	r3, #4
   1a2ec:	movw	r1, #14520	; 0x38b8
   1a2f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a2f4:	ldr	r0, [r3]
   1a2f8:	movt	r1, #3
   1a2fc:	bl	22d64 <error@@Base+0x124>
   1a300:	movw	r3, #28268	; 0x6e6c
   1a304:	movt	r3, #4
   1a308:	movw	r1, #14520	; 0x38b8
   1a30c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a310:	ldr	r0, [r3]
   1a314:	movt	r1, #3
   1a318:	bl	22c40 <error@@Base>
   1a31c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a320:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a324:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1a328:	ldr	r3, [r1]
   1a32c:	cmp	r2, r3
   1a330:	bne	1a368 <__assert_fail@plt+0x8638>
   1a334:	sub	sp, fp, #32
   1a338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a33c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a340:	bl	11a9c <puts@plt>
   1a344:	movw	r3, #26888	; 0x6908
   1a348:	movt	r3, #4
   1a34c:	ldr	r0, [r3]
   1a350:	bl	11868 <fflush@plt>
   1a354:	b	1a31c <__assert_fail@plt+0x85ec>
   1a358:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1a35c:	b	1a298 <__assert_fail@plt+0x8568>
   1a360:	mov	r5, #1
   1a364:	b	1a224 <__assert_fail@plt+0x84f4>
   1a368:	bl	11934 <__stack_chk_fail@plt>
   1a36c:	push	{r4, r5, r6, r7, lr}
   1a370:	movw	r6, #26864	; 0x68f0
   1a374:	movt	r6, #4
   1a378:	sub	sp, sp, #44	; 0x2c
   1a37c:	ldr	r2, [r1]
   1a380:	add	r5, sp, #40	; 0x28
   1a384:	ldr	r3, [r6]
   1a388:	mov	r7, r0
   1a38c:	mov	r4, #0
   1a390:	str	r2, [r5, #-28]!	; 0xffffffe4
   1a394:	str	r3, [sp, #36]	; 0x24
   1a398:	b	1a3a0 <__assert_fail@plt+0x8670>
   1a39c:	add	r4, r4, #1
   1a3a0:	mov	r0, r5
   1a3a4:	mov	r1, #0
   1a3a8:	bl	2346c <error@@Base+0x82c>
   1a3ac:	cmp	r0, #0
   1a3b0:	bne	1a39c <__assert_fail@plt+0x866c>
   1a3b4:	mov	r1, #1
   1a3b8:	mov	r2, #20
   1a3bc:	str	r4, [sp]
   1a3c0:	movw	r3, #4320	; 0x10e0
   1a3c4:	add	r0, sp, #16
   1a3c8:	movt	r3, #3
   1a3cc:	bl	11b98 <__sprintf_chk@plt>
   1a3d0:	add	r0, sp, #16
   1a3d4:	bl	11b5c <strlen@plt>
   1a3d8:	add	r1, sp, #16
   1a3dc:	mov	r2, r0
   1a3e0:	mov	r0, r7
   1a3e4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1a3e8:	ldr	r2, [sp, #36]	; 0x24
   1a3ec:	ldr	r3, [r6]
   1a3f0:	cmp	r2, r3
   1a3f4:	bne	1a400 <__assert_fail@plt+0x86d0>
   1a3f8:	add	sp, sp, #44	; 0x2c
   1a3fc:	pop	{r4, r5, r6, r7, pc}
   1a400:	bl	11934 <__stack_chk_fail@plt>
   1a404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a408:	movw	sl, #26864	; 0x68f0
   1a40c:	movt	sl, #4
   1a410:	sub	sp, sp, #44	; 0x2c
   1a414:	mov	r6, r1
   1a418:	mov	r5, r0
   1a41c:	ldr	r3, [sl]
   1a420:	mov	r1, #0
   1a424:	ldr	r0, [r6]
   1a428:	mov	r4, r1
   1a42c:	add	r7, sp, #40	; 0x28
   1a430:	mov	r8, r4
   1a434:	str	r3, [sp, #36]	; 0x24
   1a438:	bl	16c40 <__assert_fail@plt+0x4f10>
   1a43c:	mov	r1, r4
   1a440:	mov	fp, r0
   1a444:	ldr	r0, [r6, #4]
   1a448:	bl	16c40 <__assert_fail@plt+0x4f10>
   1a44c:	ldr	r9, [r6, #8]
   1a450:	str	r0, [sp, #20]
   1a454:	str	r0, [r7, #-12]!
   1a458:	bl	2ca04 <error@@Base+0x9dc4>
   1a45c:	mov	r0, fp
   1a460:	bl	11b5c <strlen@plt>
   1a464:	movw	r3, #26824	; 0x68c8
   1a468:	movt	r3, #4
   1a46c:	str	r4, [sp]
   1a470:	movw	r2, #6032	; 0x1790
   1a474:	movt	r2, #3
   1a478:	ldr	ip, [r3]
   1a47c:	mov	r3, #6
   1a480:	ldr	ip, [ip, #4]
   1a484:	str	r4, [sp, #8]
   1a488:	str	ip, [sp, #4]
   1a48c:	mov	r1, r0
   1a490:	mov	r0, fp
   1a494:	bl	2c3b8 <error@@Base+0x9778>
   1a498:	mov	r6, r0
   1a49c:	b	1a4fc <__assert_fail@plt+0x87cc>
   1a4a0:	ldr	r0, [r6, #8]
   1a4a4:	mov	r8, #1
   1a4a8:	bl	1188c <free@plt>
   1a4ac:	mov	r0, r4
   1a4b0:	ldr	r1, [sp, #32]
   1a4b4:	bl	23158 <error@@Base+0x518>
   1a4b8:	mov	r1, #0
   1a4bc:	str	r0, [r6, #8]
   1a4c0:	mov	r0, r9
   1a4c4:	bl	177b8 <__assert_fail@plt+0x5a88>
   1a4c8:	mov	r4, r0
   1a4cc:	bl	11b5c <strlen@plt>
   1a4d0:	mov	r1, r4
   1a4d4:	mov	r2, r0
   1a4d8:	mov	r0, r5
   1a4dc:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1a4e0:	movw	r1, #19524	; 0x4c44
   1a4e4:	mov	r2, r8
   1a4e8:	movt	r1, #3
   1a4ec:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1a4f0:	mov	r5, r0
   1a4f4:	mov	r0, r4
   1a4f8:	bl	1188c <free@plt>
   1a4fc:	mov	r0, r7
   1a500:	add	r1, sp, #32
   1a504:	bl	2346c <error@@Base+0x82c>
   1a508:	subs	r4, r0, #0
   1a50c:	bne	1a4a0 <__assert_fail@plt+0x8770>
   1a510:	cmp	r8, #0
   1a514:	subne	r5, r5, #1
   1a518:	bl	2ca4c <error@@Base+0x9e0c>
   1a51c:	mov	r0, fp
   1a520:	bl	1188c <free@plt>
   1a524:	ldr	r0, [sp, #20]
   1a528:	bl	1188c <free@plt>
   1a52c:	ldr	r2, [sp, #36]	; 0x24
   1a530:	ldr	r3, [sl]
   1a534:	mov	r0, r5
   1a538:	cmp	r2, r3
   1a53c:	bne	1a548 <__assert_fail@plt+0x8818>
   1a540:	add	sp, sp, #44	; 0x2c
   1a544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a548:	bl	11934 <__stack_chk_fail@plt>
   1a54c:	push	{r3, r4, r5, lr}
   1a550:	mov	r5, r0
   1a554:	ldr	r4, [r1]
   1a558:	mov	r0, r4
   1a55c:	bl	11b5c <strlen@plt>
   1a560:	mov	r1, r0
   1a564:	mov	r0, r4
   1a568:	bl	2c6f8 <error@@Base+0x9ab8>
   1a56c:	cmp	r0, #0
   1a570:	beq	1a650 <__assert_fail@plt+0x8920>
   1a574:	ldrb	r3, [r0, #23]
   1a578:	ubfx	r3, r3, #2, #3
   1a57c:	cmp	r3, #6
   1a580:	ldrls	pc, [pc, r3, lsl #2]
   1a584:	b	1a64c <__assert_fail@plt+0x891c>
   1a588:			; <UNDEFINED> instruction: 0x0001a5bc
   1a58c:	ldrdeq	sl, [r1], -r4
   1a590:	andeq	sl, r1, ip, ror #11
   1a594:	andeq	sl, r1, r4, lsl #12
   1a598:	andeq	sl, r1, ip, lsl r6
   1a59c:	andeq	sl, r1, r4, lsr r6
   1a5a0:	andeq	sl, r1, r4, lsr #11
   1a5a4:	mov	r0, r5
   1a5a8:	movw	r1, #4396	; 0x112c
   1a5ac:	mov	r2, #9
   1a5b0:	movt	r1, #3
   1a5b4:	pop	{r3, r4, r5, lr}
   1a5b8:	b	16bc4 <__assert_fail@plt+0x4e94>
   1a5bc:	mov	r0, r5
   1a5c0:	movw	r1, #4336	; 0x10f0
   1a5c4:	mov	r2, #7
   1a5c8:	movt	r1, #3
   1a5cc:	pop	{r3, r4, r5, lr}
   1a5d0:	b	16bc4 <__assert_fail@plt+0x4e94>
   1a5d4:	mov	r0, r5
   1a5d8:	movw	r1, #4344	; 0x10f8
   1a5dc:	mov	r2, #11
   1a5e0:	movt	r1, #3
   1a5e4:	pop	{r3, r4, r5, lr}
   1a5e8:	b	16bc4 <__assert_fail@plt+0x4e94>
   1a5ec:	mov	r0, r5
   1a5f0:	movw	r1, #11680	; 0x2da0
   1a5f4:	mov	r2, #4
   1a5f8:	movt	r1, #3
   1a5fc:	pop	{r3, r4, r5, lr}
   1a600:	b	16bc4 <__assert_fail@plt+0x4e94>
   1a604:	mov	r0, r5
   1a608:	movw	r1, #4356	; 0x1104
   1a60c:	mov	r2, #20
   1a610:	movt	r1, #3
   1a614:	pop	{r3, r4, r5, lr}
   1a618:	b	16bc4 <__assert_fail@plt+0x4e94>
   1a61c:	mov	r0, r5
   1a620:	movw	r1, #4380	; 0x111c
   1a624:	mov	r2, #12
   1a628:	movt	r1, #3
   1a62c:	pop	{r3, r4, r5, lr}
   1a630:	b	16bc4 <__assert_fail@plt+0x4e94>
   1a634:	mov	r0, r5
   1a638:	movw	r1, #4368	; 0x1110
   1a63c:	mov	r2, #8
   1a640:	movt	r1, #3
   1a644:	pop	{r3, r4, r5, lr}
   1a648:	b	16bc4 <__assert_fail@plt+0x4e94>
   1a64c:	bl	11d00 <abort@plt>
   1a650:	mov	r0, r5
   1a654:	movw	r1, #4324	; 0x10e4
   1a658:	mov	r2, #9
   1a65c:	movt	r1, #3
   1a660:	pop	{r3, r4, r5, lr}
   1a664:	b	16bc4 <__assert_fail@plt+0x4e94>
   1a668:	movw	r2, #26864	; 0x68f0
   1a66c:	movt	r2, #4
   1a670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a674:	sub	sp, sp, #36	; 0x24
   1a678:	ldr	r3, [r1]
   1a67c:	add	r1, sp, #32
   1a680:	ldr	ip, [r2]
   1a684:	movw	lr, #27092	; 0x69d4
   1a688:	str	r2, [sp, #16]
   1a68c:	mov	r2, #0
   1a690:	str	r3, [r1, #-8]!
   1a694:	movt	lr, #4
   1a698:	str	r0, [sp, #20]
   1a69c:	mov	r3, r2
   1a6a0:	str	lr, [sp, #8]
   1a6a4:	mov	r0, r1
   1a6a8:	mov	lr, #25
   1a6ac:	mov	r1, #8
   1a6b0:	str	lr, [sp]
   1a6b4:	str	ip, [sp, #28]
   1a6b8:	bl	256a0 <error@@Base+0x2a60>
   1a6bc:	ldr	r1, [sp, #8]
   1a6c0:	ldr	r5, [r1, #48]	; 0x30
   1a6c4:	cmp	r5, #0
   1a6c8:	mov	r4, r0
   1a6cc:	beq	1a7cc <__assert_fail@plt+0x8a9c>
   1a6d0:	cmp	r4, #0
   1a6d4:	beq	1a7c0 <__assert_fail@plt+0x8a90>
   1a6d8:	mov	sl, #0
   1a6dc:	movw	r3, #27092	; 0x69d4
   1a6e0:	mov	fp, sl
   1a6e4:	movt	r3, #4
   1a6e8:	str	r3, [sp, #12]
   1a6ec:	b	1a72c <__assert_fail@plt+0x89fc>
   1a6f0:	mov	r1, r9
   1a6f4:	mov	r2, r8
   1a6f8:	add	r0, r5, fp
   1a6fc:	add	r9, r5, r7
   1a700:	bl	118c8 <memcpy@plt>
   1a704:	mov	lr, #32
   1a708:	strb	lr, [r5, r7]
   1a70c:	mov	fp, sl
   1a710:	ldr	r0, [r4, #4]
   1a714:	bl	1188c <free@plt>
   1a718:	mov	r0, r4
   1a71c:	bl	1188c <free@plt>
   1a720:	cmp	r6, #0
   1a724:	beq	1a780 <__assert_fail@plt+0x8a50>
   1a728:	mov	r4, r6
   1a72c:	ldm	r4, {r6, r9}
   1a730:	mov	r0, r9
   1a734:	bl	11b5c <strlen@plt>
   1a738:	ldr	lr, [sp, #8]
   1a73c:	ldr	r1, [lr, #52]	; 0x34
   1a740:	add	r7, fp, r0
   1a744:	mov	r8, r0
   1a748:	add	sl, r7, #1
   1a74c:	cmp	sl, r1
   1a750:	bls	1a6f0 <__assert_fail@plt+0x89c0>
   1a754:	add	ip, r0, #1
   1a758:	ldr	r3, [sp, #12]
   1a75c:	mov	r0, r5
   1a760:	add	r1, r1, ip, lsl #1
   1a764:	str	r1, [r3, #52]	; 0x34
   1a768:	bl	22fb0 <error@@Base+0x370>
   1a76c:	ldr	r3, [sp, #12]
   1a770:	ldr	r9, [r4, #4]
   1a774:	mov	r5, r0
   1a778:	str	r0, [r3, #48]	; 0x30
   1a77c:	b	1a6f0 <__assert_fail@plt+0x89c0>
   1a780:	cmp	sl, #0
   1a784:	strbne	r6, [r9]
   1a788:	beq	1a7c0 <__assert_fail@plt+0x8a90>
   1a78c:	mov	r0, r5
   1a790:	bl	11b5c <strlen@plt>
   1a794:	mov	r1, r5
   1a798:	mov	r2, r0
   1a79c:	ldr	r0, [sp, #20]
   1a7a0:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1a7a4:	ldr	r1, [sp, #16]
   1a7a8:	ldr	r2, [sp, #28]
   1a7ac:	ldr	r3, [r1]
   1a7b0:	cmp	r2, r3
   1a7b4:	bne	1a7e8 <__assert_fail@plt+0x8ab8>
   1a7b8:	add	sp, sp, #36	; 0x24
   1a7bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a7c0:	mov	r3, #0
   1a7c4:	strb	r3, [r5]
   1a7c8:	b	1a78c <__assert_fail@plt+0x8a5c>
   1a7cc:	mov	r0, #100	; 0x64
   1a7d0:	str	r0, [r1, #52]	; 0x34
   1a7d4:	bl	22f44 <error@@Base+0x304>
   1a7d8:	ldr	r2, [sp, #8]
   1a7dc:	mov	r5, r0
   1a7e0:	str	r0, [r2, #48]	; 0x30
   1a7e4:	b	1a6d0 <__assert_fail@plt+0x89a0>
   1a7e8:	bl	11934 <__stack_chk_fail@plt>
   1a7ec:	ldr	r3, [r1]
   1a7f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a7f4:	movw	r6, #26864	; 0x68f0
   1a7f8:	sub	sp, sp, #36	; 0x24
   1a7fc:	movt	r6, #4
   1a800:	mov	r7, r1
   1a804:	mov	r5, r0
   1a808:	ldr	r1, [r6]
   1a80c:	mov	r4, #1
   1a810:	str	r3, [sp, #20]
   1a814:	mov	r9, r3
   1a818:	ldrb	r2, [r3]
   1a81c:	str	r1, [sp, #28]
   1a820:	cmp	r2, #0
   1a824:	add	r8, r9, #1
   1a828:	beq	1a860 <__assert_fail@plt+0x8b30>
   1a82c:	str	r8, [sp, #20]
   1a830:	bl	11b20 <__ctype_b_loc@plt>
   1a834:	ldrb	r2, [r8, #-1]
   1a838:	mov	r3, r8
   1a83c:	add	r8, r8, #1
   1a840:	lsl	r2, r2, #1
   1a844:	ldr	r1, [r0]
   1a848:	ldrh	r2, [r1, r2]
   1a84c:	tst	r2, #1
   1a850:	bne	1a8e8 <__assert_fail@plt+0x8bb8>
   1a854:	ldrb	r2, [r9, #1]!
   1a858:	cmp	r2, #0
   1a85c:	bne	1a82c <__assert_fail@plt+0x8afc>
   1a860:	lsl	r0, r4, #2
   1a864:	mov	r4, r2
   1a868:	bl	22f44 <error@@Base+0x304>
   1a86c:	ldr	r3, [r7]
   1a870:	add	r8, sp, #32
   1a874:	mov	r9, r4
   1a878:	str	r3, [r8, #-12]!
   1a87c:	sub	fp, r0, #4
   1a880:	str	r0, [sp, #12]
   1a884:	mov	r7, fp
   1a888:	b	1a8a8 <__assert_fail@plt+0x8b78>
   1a88c:	ldr	r3, [sp, #24]
   1a890:	add	r4, r4, #1
   1a894:	ldr	r2, [sp, #20]
   1a898:	add	r2, r2, #1
   1a89c:	str	r2, [sp, #20]
   1a8a0:	strb	r9, [ip, r3]
   1a8a4:	str	ip, [r7, #4]!
   1a8a8:	mov	r0, r8
   1a8ac:	add	r1, sp, #24
   1a8b0:	bl	2346c <error@@Base+0x82c>
   1a8b4:	subs	ip, r0, #0
   1a8b8:	bne	1a88c <__assert_fail@plt+0x8b5c>
   1a8bc:	cmp	r4, #0
   1a8c0:	bne	1a930 <__assert_fail@plt+0x8c00>
   1a8c4:	ldr	r0, [sp, #12]
   1a8c8:	bl	1188c <free@plt>
   1a8cc:	ldr	r2, [sp, #28]
   1a8d0:	ldr	r3, [r6]
   1a8d4:	mov	r0, r5
   1a8d8:	cmp	r2, r3
   1a8dc:	bne	1a9e8 <__assert_fail@plt+0x8cb8>
   1a8e0:	add	sp, sp, #36	; 0x24
   1a8e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8e8:	ldrb	r2, [r9, #1]
   1a8ec:	add	r4, r4, #1
   1a8f0:	lsl	r0, r2, #1
   1a8f4:	ldrh	r0, [r1, r0]
   1a8f8:	tst	r0, #1
   1a8fc:	beq	1a928 <__assert_fail@plt+0x8bf8>
   1a900:	add	r3, r3, #1
   1a904:	str	r3, [sp, #20]
   1a908:	mov	r0, r3
   1a90c:	ldrb	r2, [r3], #1
   1a910:	lsl	ip, r2, #1
   1a914:	ldrh	ip, [r1, ip]
   1a918:	tst	ip, #1
   1a91c:	bne	1a904 <__assert_fail@plt+0x8bd4>
   1a920:	mov	r9, r0
   1a924:	b	1a820 <__assert_fail@plt+0x8af0>
   1a928:	mov	r9, r3
   1a92c:	b	1a820 <__assert_fail@plt+0x8af0>
   1a930:	movw	r3, #11000	; 0x2af8
   1a934:	ldr	r0, [sp, #12]
   1a938:	movt	r3, #2
   1a93c:	mov	r1, r4
   1a940:	mov	r2, #4
   1a944:	sub	lr, r4, #1
   1a948:	stmib	sp, {ip, lr}
   1a94c:	bl	11cc4 <qsort@plt>
   1a950:	ldr	ip, [sp, #4]
   1a954:	mov	r7, ip
   1a958:	b	1a98c <__assert_fail@plt+0x8c5c>
   1a95c:	mov	r0, r5
   1a960:	mov	r1, r9
   1a964:	mov	r2, sl
   1a968:	add	r7, r7, #1
   1a96c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1a970:	movw	r1, #19524	; 0x4c44
   1a974:	mov	r2, #1
   1a978:	movt	r1, #3
   1a97c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1a980:	cmp	r7, r4
   1a984:	mov	r5, r0
   1a988:	bge	1a9e0 <__assert_fail@plt+0x8cb0>
   1a98c:	ldr	r9, [fp, #4]!
   1a990:	mov	r0, r9
   1a994:	bl	11b5c <strlen@plt>
   1a998:	ldr	r2, [sp, #8]
   1a99c:	cmp	r7, r2
   1a9a0:	mov	sl, r0
   1a9a4:	str	r0, [sp, #24]
   1a9a8:	beq	1a95c <__assert_fail@plt+0x8c2c>
   1a9ac:	ldr	r8, [fp, #4]
   1a9b0:	mov	r0, r8
   1a9b4:	bl	11b5c <strlen@plt>
   1a9b8:	cmp	sl, r0
   1a9bc:	bne	1a95c <__assert_fail@plt+0x8c2c>
   1a9c0:	mov	r1, r8
   1a9c4:	mov	r0, r9
   1a9c8:	bl	1182c <strcmp@plt>
   1a9cc:	cmp	r0, #0
   1a9d0:	bne	1a95c <__assert_fail@plt+0x8c2c>
   1a9d4:	add	r7, r7, #1
   1a9d8:	cmp	r7, r4
   1a9dc:	blt	1a98c <__assert_fail@plt+0x8c5c>
   1a9e0:	sub	r5, r5, #1
   1a9e4:	b	1a8c4 <__assert_fail@plt+0x8b94>
   1a9e8:	bl	11934 <__stack_chk_fail@plt>
   1a9ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a9f0:	add	fp, sp, #28
   1a9f4:	sub	sp, sp, #40	; 0x28
   1a9f8:	movw	r3, #26864	; 0x68f0
   1a9fc:	movt	r3, #4
   1aa00:	mov	r2, #0
   1aa04:	str	r0, [fp, #-52]	; 0xffffffcc
   1aa08:	ldr	lr, [r1]
   1aa0c:	mov	r1, r2
   1aa10:	ldr	ip, [r3]
   1aa14:	sub	r3, fp, #28
   1aa18:	mov	r0, lr
   1aa1c:	str	r2, [r3, #-16]!
   1aa20:	str	r3, [sp]
   1aa24:	mov	r3, r2
   1aa28:	str	ip, [fp, #-32]	; 0xffffffe0
   1aa2c:	bl	1f6c4 <__assert_fail@plt+0xd994>
   1aa30:	cmp	r0, #0
   1aa34:	str	r0, [fp, #-56]	; 0xffffffc8
   1aa38:	beq	1aaf0 <__assert_fail@plt+0x8dc0>
   1aa3c:	movw	r2, #28268	; 0x6e6c
   1aa40:	movt	r2, #4
   1aa44:	movw	r3, #26856	; 0x68e8
   1aa48:	movt	r3, #4
   1aa4c:	ldr	r4, [r2]
   1aa50:	ldr	r3, [r3]
   1aa54:	cmp	r4, #0
   1aa58:	str	r3, [fp, #-60]	; 0xffffffc4
   1aa5c:	beq	1ad3c <__assert_fail@plt+0x900c>
   1aa60:	ldr	r5, [r4]
   1aa64:	cmp	r5, #0
   1aa68:	beq	1ab14 <__assert_fail@plt+0x8de4>
   1aa6c:	mov	r0, r5
   1aa70:	bl	11b5c <strlen@plt>
   1aa74:	movw	r3, #4408	; 0x1138
   1aa78:	mov	r1, #1
   1aa7c:	movt	r3, #3
   1aa80:	mvn	r2, #0
   1aa84:	add	r0, r0, #29
   1aa88:	bic	r0, r0, #7
   1aa8c:	sub	sp, sp, r0
   1aa90:	add	r0, sp, #8
   1aa94:	str	r0, [fp, #-48]	; 0xffffffd0
   1aa98:	str	r5, [sp]
   1aa9c:	ldr	ip, [r4, #4]
   1aaa0:	str	ip, [sp, #4]
   1aaa4:	bl	11b98 <__sprintf_chk@plt>
   1aaa8:	sub	r0, fp, #40	; 0x28
   1aaac:	bl	11c34 <pipe@plt>
   1aab0:	cmp	r0, #0
   1aab4:	blt	1ab30 <__assert_fail@plt+0x8e00>
   1aab8:	bl	11c1c <vfork@plt>
   1aabc:	subs	r3, r0, #0
   1aac0:	blt	1ad58 <__assert_fail@plt+0x9028>
   1aac4:	bne	1ab44 <__assert_fail@plt+0x8e14>
   1aac8:	movw	r1, #29456	; 0x7310
   1aacc:	movt	r1, #4
   1aad0:	ldrd	r2, [r1]
   1aad4:	orrs	r0, r2, r3
   1aad8:	bne	1ad4c <__assert_fail@plt+0x901c>
   1aadc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1aae0:	mov	r0, #0
   1aae4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1aae8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1aaec:	bl	1f65c <__assert_fail@plt+0xd92c>
   1aaf0:	movw	r3, #26864	; 0x68f0
   1aaf4:	movt	r3, #4
   1aaf8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1aafc:	ldr	r3, [r3]
   1ab00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ab04:	cmp	r2, r3
   1ab08:	bne	1adc8 <__assert_fail@plt+0x9098>
   1ab0c:	sub	sp, fp, #28
   1ab10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1ab14:	sub	r0, fp, #40	; 0x28
   1ab18:	movw	ip, #6032	; 0x1790
   1ab1c:	movt	ip, #3
   1ab20:	str	ip, [fp, #-48]	; 0xffffffd0
   1ab24:	bl	11c34 <pipe@plt>
   1ab28:	cmp	r0, #0
   1ab2c:	bge	1aab8 <__assert_fail@plt+0x8d88>
   1ab30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ab34:	movw	r1, #4420	; 0x1144
   1ab38:	movt	r1, #3
   1ab3c:	bl	22ec8 <error@@Base+0x288>
   1ab40:	b	1aaf0 <__assert_fail@plt+0x8dc0>
   1ab44:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1ab48:	movw	r1, #27092	; 0x69d4
   1ab4c:	movw	r2, #29476	; 0x7324
   1ab50:	movt	r1, #4
   1ab54:	movt	r2, #4
   1ab58:	ldr	r0, [ip]
   1ab5c:	mov	ip, #0
   1ab60:	str	r3, [r1, #56]	; 0x38
   1ab64:	str	ip, [r2]
   1ab68:	bl	1188c <free@plt>
   1ab6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ab70:	bl	1188c <free@plt>
   1ab74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ab78:	cmp	r0, #0
   1ab7c:	blt	1ab84 <__assert_fail@plt+0x8e54>
   1ab80:	bl	11d0c <close@plt>
   1ab84:	mov	r0, #201	; 0xc9
   1ab88:	mov	r6, #0
   1ab8c:	bl	22f44 <error@@Base+0x304>
   1ab90:	mov	r8, #200	; 0xc8
   1ab94:	mov	r7, r0
   1ab98:	add	r4, r7, r6
   1ab9c:	rsb	r5, r6, r8
   1aba0:	b	1abb4 <__assert_fail@plt+0x8e84>
   1aba4:	bl	11b8c <__errno_location@plt>
   1aba8:	ldr	r3, [r0]
   1abac:	cmp	r3, #4
   1abb0:	bne	1abf8 <__assert_fail@plt+0x8ec8>
   1abb4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1abb8:	mov	r1, r4
   1abbc:	mov	r2, r5
   1abc0:	bl	1185c <read@plt>
   1abc4:	cmn	r0, #1
   1abc8:	beq	1aba4 <__assert_fail@plt+0x8e74>
   1abcc:	cmp	r0, #0
   1abd0:	ble	1abf8 <__assert_fail@plt+0x8ec8>
   1abd4:	add	r6, r6, r0
   1abd8:	cmp	r8, r6
   1abdc:	bne	1ab98 <__assert_fail@plt+0x8e68>
   1abe0:	add	r8, r8, #512	; 0x200
   1abe4:	mov	r0, r7
   1abe8:	add	r1, r8, #1
   1abec:	bl	22fb0 <error@@Base+0x370>
   1abf0:	mov	r7, r0
   1abf4:	b	1ab98 <__assert_fail@plt+0x8e68>
   1abf8:	mov	r3, #0
   1abfc:	strb	r3, [r4]
   1ac00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ac04:	mov	r5, r7
   1ac08:	bl	11d0c <close@plt>
   1ac0c:	movw	r3, #29476	; 0x7324
   1ac10:	movt	r3, #4
   1ac14:	ldr	r2, [r3]
   1ac18:	cmp	r2, #0
   1ac1c:	moveq	r8, r2
   1ac20:	moveq	r9, r3
   1ac24:	moveq	r6, #1
   1ac28:	bne	1ac44 <__assert_fail@plt+0x8f14>
   1ac2c:	mov	r0, r6
   1ac30:	mov	r1, r8
   1ac34:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   1ac38:	ldr	r2, [r9]
   1ac3c:	cmp	r2, #0
   1ac40:	beq	1ac2c <__assert_fail@plt+0x8efc>
   1ac44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac48:	cmp	r0, #0
   1ac4c:	beq	1ac70 <__assert_fail@plt+0x8f40>
   1ac50:	movw	r3, #27308	; 0x6aac
   1ac54:	movt	r3, #4
   1ac58:	ldr	r3, [r3]
   1ac5c:	tst	r3, #2
   1ac60:	bne	1ad8c <__assert_fail@plt+0x905c>
   1ac64:	bl	11cac <remove@plt>
   1ac68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac6c:	bl	1188c <free@plt>
   1ac70:	movw	r2, #29476	; 0x7324
   1ac74:	movt	r2, #4
   1ac78:	movw	r3, #27092	; 0x69d4
   1ac7c:	movt	r3, #4
   1ac80:	ldr	r1, [r2]
   1ac84:	mov	r2, #0
   1ac88:	str	r2, [r3, #56]	; 0x38
   1ac8c:	cmn	r1, #1
   1ac90:	beq	1ad6c <__assert_fail@plt+0x903c>
   1ac94:	strb	r2, [r4]
   1ac98:	sub	r1, r5, #1
   1ac9c:	ldrb	r3, [r5]
   1aca0:	cmp	r3, #0
   1aca4:	beq	1ad10 <__assert_fail@plt+0x8fe0>
   1aca8:	mov	r2, r7
   1acac:	mov	ip, #32
   1acb0:	b	1acd8 <__assert_fail@plt+0x8fa8>
   1acb4:	cmp	r3, #10
   1acb8:	beq	1acf8 <__assert_fail@plt+0x8fc8>
   1acbc:	strb	r3, [r7]
   1acc0:	mov	r1, r7
   1acc4:	ldrb	r3, [r2, #1]
   1acc8:	add	r7, r7, #1
   1accc:	add	r2, r2, #1
   1acd0:	cmp	r3, #0
   1acd4:	beq	1ad10 <__assert_fail@plt+0x8fe0>
   1acd8:	cmp	r3, #13
   1acdc:	bne	1acb4 <__assert_fail@plt+0x8f84>
   1ace0:	ldrb	r0, [r2, #1]
   1ace4:	cmp	r0, #10
   1ace8:	bne	1acbc <__assert_fail@plt+0x8f8c>
   1acec:	add	r2, r2, #1
   1acf0:	mov	r3, r0
   1acf4:	b	1acd8 <__assert_fail@plt+0x8fa8>
   1acf8:	strb	ip, [r7]
   1acfc:	add	r2, r2, #1
   1ad00:	ldrb	r3, [r2]
   1ad04:	add	r7, r7, #1
   1ad08:	cmp	r3, #0
   1ad0c:	bne	1acd8 <__assert_fail@plt+0x8fa8>
   1ad10:	mov	r2, r1
   1ad14:	mov	r3, #0
   1ad18:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ad1c:	mov	r1, r5
   1ad20:	strb	r3, [r2, #1]!
   1ad24:	rsb	r2, r5, r2
   1ad28:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1ad2c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ad30:	mov	r0, r5
   1ad34:	bl	1188c <free@plt>
   1ad38:	b	1aaf0 <__assert_fail@plt+0x8dc0>
   1ad3c:	movw	r3, #6032	; 0x1790
   1ad40:	movt	r3, #3
   1ad44:	str	r3, [fp, #-48]	; 0xffffffd0
   1ad48:	b	1aaa8 <__assert_fail@plt+0x8d78>
   1ad4c:	mov	r0, #3
   1ad50:	bl	11850 <setrlimit64@plt>
   1ad54:	b	1aadc <__assert_fail@plt+0x8dac>
   1ad58:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ad5c:	movw	r1, #4428	; 0x114c
   1ad60:	movt	r1, #3
   1ad64:	bl	22ec8 <error@@Base+0x288>
   1ad68:	b	1aaf0 <__assert_fail@plt+0x8dc0>
   1ad6c:	movw	r4, #26876	; 0x68fc
   1ad70:	movt	r4, #4
   1ad74:	mov	r0, r5
   1ad78:	ldr	r1, [r4]
   1ad7c:	bl	11ce8 <fputs@plt>
   1ad80:	ldr	r0, [r4]
   1ad84:	bl	11868 <fflush@plt>
   1ad88:	b	1ad30 <__assert_fail@plt+0x9000>
   1ad8c:	mov	r2, #5
   1ad90:	movw	r1, #4436	; 0x1154
   1ad94:	mov	r0, #0
   1ad98:	movt	r1, #3
   1ad9c:	bl	1191c <dcgettext@plt>
   1ada0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ada4:	mov	r1, r0
   1ada8:	mov	r0, #1
   1adac:	bl	11be0 <__printf_chk@plt>
   1adb0:	movw	r3, #26888	; 0x6908
   1adb4:	movt	r3, #4
   1adb8:	ldr	r0, [r3]
   1adbc:	bl	11868 <fflush@plt>
   1adc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1adc4:	b	1ac64 <__assert_fail@plt+0x8f34>
   1adc8:	bl	11934 <__stack_chk_fail@plt>
   1adcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1add0:	sub	sp, sp, #8192	; 0x2000
   1add4:	sub	sp, sp, #20
   1add8:	ldr	lr, [r1]
   1addc:	mov	r8, r0
   1ade0:	add	r0, sp, #8192	; 0x2000
   1ade4:	add	r0, r0, #16
   1ade8:	movw	r1, #57332	; 0xdff4
   1adec:	movw	r3, #57336	; 0xdff8
   1adf0:	movt	r1, #65535	; 0xffff
   1adf4:	movt	r3, #65535	; 0xffff
   1adf8:	movw	r6, #26864	; 0x68f0
   1adfc:	movt	r6, #4
   1ae00:	mov	r2, #0
   1ae04:	str	lr, [r0, r1]
   1ae08:	add	r7, sp, #12
   1ae0c:	str	r2, [r0, r3]
   1ae10:	add	r0, sp, #4096	; 0x1000
   1ae14:	ldr	ip, [r6]
   1ae18:	add	r0, r0, #16
   1ae1c:	add	r1, sp, #8192	; 0x2000
   1ae20:	sub	sl, r0, #4
   1ae24:	mov	r5, r3
   1ae28:	mov	r9, r2
   1ae2c:	str	ip, [r1, #12]
   1ae30:	mov	fp, #0
   1ae34:	b	1ae4c <__assert_fail@plt+0x911c>
   1ae38:	add	r1, sp, #8192	; 0x2000
   1ae3c:	add	r1, r1, #16
   1ae40:	ldr	r4, [r1, r5]
   1ae44:	cmp	r4, #4096	; 0x1000
   1ae48:	bcc	1ae8c <__assert_fail@plt+0x915c>
   1ae4c:	add	r0, sp, #4
   1ae50:	add	r1, sp, #8
   1ae54:	bl	2346c <error@@Base+0x82c>
   1ae58:	cmp	r0, #0
   1ae5c:	bne	1ae38 <__assert_fail@plt+0x9108>
   1ae60:	add	r3, sp, #8192	; 0x2000
   1ae64:	cmp	r9, #0
   1ae68:	subne	r8, r8, #1
   1ae6c:	ldr	r2, [r3, #12]
   1ae70:	ldr	r3, [r6]
   1ae74:	mov	r0, r8
   1ae78:	cmp	r2, r3
   1ae7c:	bne	1aef0 <__assert_fail@plt+0x91c0>
   1ae80:	add	sp, sp, #8192	; 0x2000
   1ae84:	add	sp, sp, #20
   1ae88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ae8c:	mov	r1, r0
   1ae90:	mov	r2, r4
   1ae94:	mov	r3, #4096	; 0x1000
   1ae98:	mov	r0, r7
   1ae9c:	bl	11928 <__strncpy_chk@plt>
   1aea0:	mov	r0, r7
   1aea4:	mov	r1, sl
   1aea8:	mov	r2, #4096	; 0x1000
   1aeac:	strb	fp, [r7, r4]
   1aeb0:	bl	11a18 <__realpath_chk@plt>
   1aeb4:	cmp	r0, #0
   1aeb8:	beq	1ae4c <__assert_fail@plt+0x911c>
   1aebc:	mov	r0, sl
   1aec0:	mov	r9, #1
   1aec4:	bl	11b5c <strlen@plt>
   1aec8:	mov	r1, sl
   1aecc:	mov	r2, r0
   1aed0:	mov	r0, r8
   1aed4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1aed8:	movw	r1, #19524	; 0x4c44
   1aedc:	mov	r2, r9
   1aee0:	movt	r1, #3
   1aee4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1aee8:	mov	r8, r0
   1aeec:	b	1ae30 <__assert_fail@plt+0x9100>
   1aef0:	bl	11934 <__stack_chk_fail@plt>
   1aef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aef8:	sub	sp, sp, #8192	; 0x2000
   1aefc:	sub	sp, sp, #44	; 0x2c
   1af00:	movw	r3, #57336	; 0xdff8
   1af04:	movt	r3, #65535	; 0xffff
   1af08:	mov	r2, #0
   1af0c:	str	r0, [sp]
   1af10:	add	r0, sp, #8192	; 0x2000
   1af14:	add	r0, r0, #40	; 0x28
   1af18:	ldr	lr, [r1]
   1af1c:	movw	r8, #26864	; 0x68f0
   1af20:	str	r2, [sp, #8]
   1af24:	str	r2, [r0, r3]
   1af28:	movt	r8, #4
   1af2c:	add	r2, sp, #4096	; 0x1000
   1af30:	movw	r1, #57332	; 0xdff4
   1af34:	add	r2, r2, #40	; 0x28
   1af38:	movt	r1, #65535	; 0xffff
   1af3c:	ldr	ip, [r8]
   1af40:	mov	r4, r3
   1af44:	sub	r3, r2, #4
   1af48:	str	lr, [r0, r1]
   1af4c:	add	r1, sp, #8192	; 0x2000
   1af50:	movw	sl, #57340	; 0xdffc
   1af54:	mov	fp, r3
   1af58:	movw	r0, #29512	; 0x7348
   1af5c:	movt	sl, #65535	; 0xffff
   1af60:	movt	r0, #4
   1af64:	str	ip, [r1, #36]	; 0x24
   1af68:	str	r0, [sp, #4]
   1af6c:	str	r8, [sp, #12]
   1af70:	str	sl, [sp, #16]
   1af74:	add	r9, sp, #36	; 0x24
   1af78:	b	1af90 <__assert_fail@plt+0x9260>
   1af7c:	add	r1, sp, #8192	; 0x2000
   1af80:	add	r1, r1, #40	; 0x28
   1af84:	ldr	r5, [r1, r4]
   1af88:	cmp	r5, #4096	; 0x1000
   1af8c:	bcc	1afe0 <__assert_fail@plt+0x92b0>
   1af90:	add	r0, sp, #28
   1af94:	add	r1, sp, #32
   1af98:	bl	2346c <error@@Base+0x82c>
   1af9c:	cmp	r0, #0
   1afa0:	bne	1af7c <__assert_fail@plt+0x924c>
   1afa4:	ldr	r3, [sp, #8]
   1afa8:	add	r1, sp, #8192	; 0x2000
   1afac:	ldr	r8, [sp, #12]
   1afb0:	cmp	r3, #0
   1afb4:	ldr	r2, [r1, #36]	; 0x24
   1afb8:	ldrne	r0, [sp]
   1afbc:	ldr	r3, [r8]
   1afc0:	subne	r0, r0, #1
   1afc4:	strne	r0, [sp]
   1afc8:	cmp	r2, r3
   1afcc:	ldr	r0, [sp]
   1afd0:	bne	1b1f8 <__assert_fail@plt+0x94c8>
   1afd4:	add	sp, sp, #8192	; 0x2000
   1afd8:	add	sp, sp, #44	; 0x2c
   1afdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1afe0:	mov	r1, r0
   1afe4:	mov	r2, r5
   1afe8:	mov	r3, #4096	; 0x1000
   1afec:	mov	r0, r9
   1aff0:	bl	11928 <__strncpy_chk@plt>
   1aff4:	add	r3, sp, #8192	; 0x2000
   1aff8:	ldr	r2, [sp, #16]
   1affc:	add	r3, r3, #40	; 0x28
   1b000:	mov	r7, #0
   1b004:	strb	r7, [r9, r5]
   1b008:	ldrb	r2, [r3, r2]
   1b00c:	uxtb	r6, r2
   1b010:	cmp	r6, r7
   1b014:	beq	1af90 <__assert_fail@plt+0x9260>
   1b018:	cmp	r6, #47	; 0x2f
   1b01c:	beq	1b1c8 <__assert_fail@plt+0x9498>
   1b020:	ldr	r0, [sp, #4]
   1b024:	ldr	r1, [r0]
   1b028:	cmp	r1, r7
   1b02c:	beq	1af90 <__assert_fail@plt+0x9260>
   1b030:	mov	r2, #4096	; 0x1000
   1b034:	mov	r0, fp
   1b038:	bl	11a48 <__strcpy_chk@plt>
   1b03c:	mov	r0, fp
   1b040:	mov	r1, r7
   1b044:	mov	r5, r9
   1b048:	bl	119b8 <__rawmemchr@plt>
   1b04c:	mov	r2, r6
   1b050:	add	r3, sp, #4096	; 0x1000
   1b054:	cmp	r2, #0
   1b058:	add	r3, r3, #40	; 0x28
   1b05c:	add	r6, fp, #4096	; 0x1000
   1b060:	sub	r3, r3, #3
   1b064:	mov	r7, #0
   1b068:	mov	r8, #47	; 0x2f
   1b06c:	str	r3, [sp, #20]
   1b070:	beq	1b108 <__assert_fail@plt+0x93d8>
   1b074:	cmp	r2, #47	; 0x2f
   1b078:	addeq	r5, r5, #1
   1b07c:	bne	1b1bc <__assert_fail@plt+0x948c>
   1b080:	mov	r1, r5
   1b084:	add	r5, r5, #1
   1b088:	ldrb	ip, [r1]
   1b08c:	cmp	ip, #47	; 0x2f
   1b090:	beq	1b080 <__assert_fail@plt+0x9350>
   1b094:	cmp	ip, #0
   1b098:	beq	1b108 <__assert_fail@plt+0x93d8>
   1b09c:	add	r2, r1, #1
   1b0a0:	mov	r5, r2
   1b0a4:	add	r2, r2, #1
   1b0a8:	ldrb	r3, [r5]
   1b0ac:	cmp	r3, #47	; 0x2f
   1b0b0:	cmpne	r3, #0
   1b0b4:	bne	1b0a0 <__assert_fail@plt+0x9370>
   1b0b8:	subs	sl, r5, r1
   1b0bc:	beq	1b108 <__assert_fail@plt+0x93d8>
   1b0c0:	cmp	sl, #1
   1b0c4:	beq	1b16c <__assert_fail@plt+0x943c>
   1b0c8:	cmp	sl, #2
   1b0cc:	beq	1b178 <__assert_fail@plt+0x9448>
   1b0d0:	ldrb	r3, [r0, #-1]
   1b0d4:	cmp	r3, #47	; 0x2f
   1b0d8:	strbne	r8, [r0]
   1b0dc:	addne	r0, r0, #1
   1b0e0:	add	r3, r0, sl
   1b0e4:	cmp	r6, r3
   1b0e8:	bls	1af90 <__assert_fail@plt+0x9260>
   1b0ec:	mov	r2, sl
   1b0f0:	bl	118c8 <memcpy@plt>
   1b0f4:	strb	r7, [r0, sl]
   1b0f8:	add	r0, r0, sl
   1b0fc:	ldrb	r2, [r5]
   1b100:	cmp	r2, #0
   1b104:	bne	1b074 <__assert_fail@plt+0x9344>
   1b108:	mov	lr, r0
   1b10c:	add	r0, sp, #4096	; 0x1000
   1b110:	add	r0, r0, #40	; 0x28
   1b114:	sub	r3, r0, #3
   1b118:	cmp	lr, r3
   1b11c:	bls	1b12c <__assert_fail@plt+0x93fc>
   1b120:	ldrb	r3, [lr, #-1]
   1b124:	cmp	r3, #47	; 0x2f
   1b128:	subeq	lr, lr, #1
   1b12c:	mov	r3, #0
   1b130:	mov	r0, fp
   1b134:	strb	r3, [lr]
   1b138:	mov	r1, #1
   1b13c:	str	r1, [sp, #8]
   1b140:	bl	11b5c <strlen@plt>
   1b144:	mov	r1, fp
   1b148:	mov	r2, r0
   1b14c:	ldr	r0, [sp]
   1b150:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1b154:	movw	r1, #19524	; 0x4c44
   1b158:	mov	r2, #1
   1b15c:	movt	r1, #3
   1b160:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1b164:	str	r0, [sp]
   1b168:	b	1af74 <__assert_fail@plt+0x9244>
   1b16c:	cmp	ip, #46	; 0x2e
   1b170:	bne	1b0d0 <__assert_fail@plt+0x93a0>
   1b174:	b	1b0fc <__assert_fail@plt+0x93cc>
   1b178:	cmp	ip, #46	; 0x2e
   1b17c:	bne	1b0d0 <__assert_fail@plt+0x93a0>
   1b180:	ldrb	r3, [r1, #1]
   1b184:	cmp	r3, #46	; 0x2e
   1b188:	bne	1b0d0 <__assert_fail@plt+0x93a0>
   1b18c:	ldr	r3, [sp, #20]
   1b190:	cmp	r0, r3
   1b194:	bls	1b0fc <__assert_fail@plt+0x93cc>
   1b198:	ldrb	r3, [r0, #-2]
   1b19c:	sub	r0, r0, #1
   1b1a0:	cmp	r3, #47	; 0x2f
   1b1a4:	beq	1b0fc <__assert_fail@plt+0x93cc>
   1b1a8:	sub	r0, r0, #1
   1b1ac:	ldrb	r3, [r0, #-1]
   1b1b0:	cmp	r3, #47	; 0x2f
   1b1b4:	bne	1b1a8 <__assert_fail@plt+0x9478>
   1b1b8:	b	1b0fc <__assert_fail@plt+0x93cc>
   1b1bc:	mov	ip, r2
   1b1c0:	mov	r1, r5
   1b1c4:	b	1b09c <__assert_fail@plt+0x936c>
   1b1c8:	mov	r1, r9
   1b1cc:	mov	r2, #1
   1b1d0:	mov	r0, fp
   1b1d4:	add	r5, sp, #37	; 0x25
   1b1d8:	bl	11bd4 <strncpy@plt>
   1b1dc:	add	r0, sp, #8192	; 0x2000
   1b1e0:	add	r1, sp, #4096	; 0x1000
   1b1e4:	ldrb	r2, [r9, #1]
   1b1e8:	add	r1, r1, #40	; 0x28
   1b1ec:	strb	r7, [r0, #-4059]	; 0xfffff025
   1b1f0:	sub	r0, r1, #3
   1b1f4:	b	1b050 <__assert_fail@plt+0x9320>
   1b1f8:	bl	11934 <__stack_chk_fail@plt>
   1b1fc:	ldr	r2, [r0, #12]
   1b200:	ldr	r3, [r1, #12]
   1b204:	subs	r3, r2, r3
   1b208:	bne	1b220 <__assert_fail@plt+0x94f0>
   1b20c:	ldr	r0, [r0, #8]
   1b210:	ldr	r1, [r1, #8]
   1b214:	cmp	r0, r1
   1b218:	beq	1b220 <__assert_fail@plt+0x94f0>
   1b21c:	b	1182c <strcmp@plt>
   1b220:	mov	r0, r3
   1b224:	bx	lr
   1b228:	push	{r4, r5, lr}
   1b22c:	mov	r4, r1
   1b230:	ldrb	ip, [r3, #5]
   1b234:	sub	sp, sp, #12
   1b238:	cmp	ip, r4
   1b23c:	bgt	1b268 <__assert_fail@plt+0x9538>
   1b240:	cmp	r4, #0
   1b244:	beq	1b260 <__assert_fail@plt+0x9530>
   1b248:	ldr	ip, [r3, #8]
   1b24c:	cmp	ip, #0
   1b250:	beq	1b2a8 <__assert_fail@plt+0x9578>
   1b254:	mov	r1, r2
   1b258:	ldr	r2, [r3]
   1b25c:	blx	ip
   1b260:	add	sp, sp, #12
   1b264:	pop	{r4, r5, pc}
   1b268:	movw	r2, #26244	; 0x6684
   1b26c:	movt	r2, #4
   1b270:	movw	r1, #4476	; 0x117c
   1b274:	mov	r0, #0
   1b278:	ldr	ip, [r2]
   1b27c:	movt	r1, #3
   1b280:	mov	r2, #5
   1b284:	ldr	r5, [ip]
   1b288:	str	r3, [sp, #4]
   1b28c:	bl	1191c <dcgettext@plt>
   1b290:	ldr	r3, [sp, #4]
   1b294:	mov	r2, r4
   1b298:	ldr	r3, [r3]
   1b29c:	mov	r1, r0
   1b2a0:	mov	r0, r5
   1b2a4:	bl	22d64 <error@@Base+0x124>
   1b2a8:	movw	r2, #26244	; 0x6684
   1b2ac:	movt	r2, #4
   1b2b0:	mov	r0, ip
   1b2b4:	movw	r1, #4532	; 0x11b4
   1b2b8:	ldr	ip, [r2]
   1b2bc:	movt	r1, #3
   1b2c0:	mov	r2, #5
   1b2c4:	ldr	r4, [ip]
   1b2c8:	str	r3, [sp, #4]
   1b2cc:	bl	1191c <dcgettext@plt>
   1b2d0:	ldr	r3, [sp, #4]
   1b2d4:	ldr	r2, [r3]
   1b2d8:	mov	r1, r0
   1b2dc:	mov	r0, r4
   1b2e0:	bl	22d64 <error@@Base+0x124>
   1b2e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b2e8:	add	fp, sp, #32
   1b2ec:	sub	sp, sp, #60	; 0x3c
   1b2f0:	movw	r4, #26864	; 0x68f0
   1b2f4:	movt	r4, #4
   1b2f8:	mov	r8, r1
   1b2fc:	mov	r5, r0
   1b300:	ldr	r6, [r1]
   1b304:	ldr	r3, [r4]
   1b308:	ldrb	r7, [r6]
   1b30c:	str	r3, [fp, #-40]	; 0xffffffd8
   1b310:	cmp	r7, #0
   1b314:	beq	1b34c <__assert_fail@plt+0x961c>
   1b318:	bl	11b20 <__ctype_b_loc@plt>
   1b31c:	mov	r3, r6
   1b320:	ldr	r1, [r0]
   1b324:	b	1b338 <__assert_fail@plt+0x9608>
   1b328:	ldrb	r7, [r3, #1]
   1b32c:	add	r3, r3, #1
   1b330:	cmp	r7, #0
   1b334:	beq	1b3c8 <__assert_fail@plt+0x9698>
   1b338:	lsl	r7, r7, #1
   1b33c:	mov	r6, r3
   1b340:	ldrh	r2, [r1, r7]
   1b344:	tst	r2, #8192	; 0x2000
   1b348:	bne	1b328 <__assert_fail@plt+0x95f8>
   1b34c:	mov	r0, r6
   1b350:	bl	11b5c <strlen@plt>
   1b354:	sub	r0, r0, #1
   1b358:	add	r7, r6, r0
   1b35c:	cmp	r7, r6
   1b360:	bls	1b398 <__assert_fail@plt+0x9668>
   1b364:	bl	11b20 <__ctype_b_loc@plt>
   1b368:	mov	r3, r7
   1b36c:	ldr	r1, [r0]
   1b370:	b	1b380 <__assert_fail@plt+0x9650>
   1b374:	cmp	r3, r6
   1b378:	mov	r7, r3
   1b37c:	beq	1b398 <__assert_fail@plt+0x9668>
   1b380:	mov	r7, r3
   1b384:	ldrb	r2, [r3], #-1
   1b388:	lsl	r2, r2, #1
   1b38c:	ldrh	r2, [r1, r2]
   1b390:	tst	r2, #8192	; 0x2000
   1b394:	bne	1b374 <__assert_fail@plt+0x9644>
   1b398:	mov	r9, #0
   1b39c:	strb	r9, [r7, #1]
   1b3a0:	ldrb	r3, [r6]
   1b3a4:	cmp	r3, r9
   1b3a8:	bne	1b3d0 <__assert_fail@plt+0x96a0>
   1b3ac:	mov	r0, r5
   1b3b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1b3b4:	ldr	r3, [r4]
   1b3b8:	cmp	r2, r3
   1b3bc:	bne	1b870 <__assert_fail@plt+0x9b40>
   1b3c0:	sub	sp, fp, #32
   1b3c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b3c8:	mov	r6, r3
   1b3cc:	b	1b34c <__assert_fail@plt+0x961c>
   1b3d0:	mov	r0, r6
   1b3d4:	bl	19fb4 <__assert_fail@plt+0x8284>
   1b3d8:	subs	r3, r0, #0
   1b3dc:	beq	1b414 <__assert_fail@plt+0x96e4>
   1b3e0:	ldr	r1, [r8, #4]
   1b3e4:	add	r2, r8, #4
   1b3e8:	cmp	r1, #0
   1b3ec:	beq	1b408 <__assert_fail@plt+0x96d8>
   1b3f0:	mov	r1, r9
   1b3f4:	mov	r0, r2
   1b3f8:	ldr	ip, [r0, #4]!
   1b3fc:	add	r1, r1, #1
   1b400:	cmp	ip, #0
   1b404:	bne	1b3f8 <__assert_fail@plt+0x96c8>
   1b408:	mov	r0, r5
   1b40c:	bl	1b228 <__assert_fail@plt+0x94f8>
   1b410:	b	1b3b0 <__assert_fail@plt+0x9680>
   1b414:	mov	r0, r6
   1b418:	str	r3, [fp, #-76]	; 0xffffffb4
   1b41c:	bl	11b5c <strlen@plt>
   1b420:	str	r0, [fp, #-64]	; 0xffffffc0
   1b424:	mov	r0, r6
   1b428:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b42c:	bl	2c6f8 <error@@Base+0x9ab8>
   1b430:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b434:	subs	ip, r0, #0
   1b438:	str	ip, [fp, #-68]	; 0xffffffbc
   1b43c:	beq	1b728 <__assert_fail@plt+0x99f8>
   1b440:	ldr	ip, [fp, #-68]	; 0xffffffbc
   1b444:	ldr	r2, [ip, #8]
   1b448:	ldrb	r2, [r2]
   1b44c:	cmp	r2, #0
   1b450:	beq	1b3ac <__assert_fail@plt+0x967c>
   1b454:	ldr	ip, [fp, #-64]	; 0xffffffc0
   1b458:	mov	r1, r6
   1b45c:	movw	sl, #27308	; 0x6aac
   1b460:	movt	sl, #4
   1b464:	add	r2, ip, #18
   1b468:	movw	ip, #27092	; 0x69d4
   1b46c:	bic	r2, r2, #7
   1b470:	movt	ip, #4
   1b474:	sub	sp, sp, r2
   1b478:	str	ip, [fp, #-60]	; 0xffffffc4
   1b47c:	add	ip, sp, #16
   1b480:	str	ip, [fp, #-56]	; 0xffffffc8
   1b484:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1b488:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b48c:	ldr	lr, [ip, #44]	; 0x2c
   1b490:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1b494:	add	r6, lr, #1
   1b498:	ldr	lr, [fp, #-56]	; 0xffffffc8
   1b49c:	add	r0, ip, #2
   1b4a0:	mov	ip, #36	; 0x24
   1b4a4:	strb	ip, [lr]
   1b4a8:	mov	ip, #40	; 0x28
   1b4ac:	ldr	lr, [fp, #-60]	; 0xffffffc4
   1b4b0:	str	r6, [lr, #44]	; 0x2c
   1b4b4:	ldr	lr, [fp, #-56]	; 0xffffffc8
   1b4b8:	strb	ip, [lr, #1]
   1b4bc:	str	r3, [fp, #-76]	; 0xffffffb4
   1b4c0:	bl	118c8 <memcpy@plt>
   1b4c4:	ldr	r0, [sl]
   1b4c8:	mov	r1, #41	; 0x29
   1b4cc:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1b4d0:	ldr	lr, [fp, #-64]	; 0xffffffc0
   1b4d4:	tst	r0, #4096	; 0x1000
   1b4d8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b4dc:	add	r2, ip, lr
   1b4e0:	strb	r3, [r2, #3]
   1b4e4:	strb	r1, [r2, #2]
   1b4e8:	bne	1b7b8 <__assert_fail@plt+0x9a88>
   1b4ec:	bl	2ca04 <error@@Base+0x9dc4>
   1b4f0:	ldr	r6, [r8]
   1b4f4:	cmp	r6, #0
   1b4f8:	beq	1b5c4 <__assert_fail@plt+0x9894>
   1b4fc:	movw	r9, #26824	; 0x68c8
   1b500:	movw	ip, #26888	; 0x6908
   1b504:	sub	r8, r8, #4
   1b508:	movt	ip, #4
   1b50c:	mov	r6, #0
   1b510:	movt	r9, #4
   1b514:	str	ip, [fp, #-72]	; 0xffffffb8
   1b518:	sub	r7, fp, #52	; 0x34
   1b51c:	b	1b560 <__assert_fail@plt+0x9830>
   1b520:	mov	r0, r7
   1b524:	add	r6, r6, #1
   1b528:	bl	11b5c <strlen@plt>
   1b52c:	ldr	ip, [r9]
   1b530:	mov	lr, #0
   1b534:	str	lr, [sp]
   1b538:	ldr	r2, [r8, #4]!
   1b53c:	mov	r3, #6
   1b540:	ldr	ip, [ip, #4]
   1b544:	stmib	sp, {ip, lr}
   1b548:	mov	r1, r0
   1b54c:	mov	r0, r7
   1b550:	bl	2c3b8 <error@@Base+0x9778>
   1b554:	ldr	r3, [r8, #4]
   1b558:	cmp	r3, #0
   1b55c:	beq	1b5c4 <__assert_fail@plt+0x9894>
   1b560:	str	r6, [sp]
   1b564:	movw	r3, #4320	; 0x10e0
   1b568:	mov	r0, r7
   1b56c:	movt	r3, #3
   1b570:	mov	r1, #1
   1b574:	mov	r2, #11
   1b578:	bl	11b98 <__sprintf_chk@plt>
   1b57c:	ldr	r3, [sl]
   1b580:	tst	r3, #4096	; 0x1000
   1b584:	beq	1b520 <__assert_fail@plt+0x97f0>
   1b588:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1b58c:	ldr	r0, [ip, #44]	; 0x2c
   1b590:	bl	22b1c <__assert_fail@plt+0x10dec>
   1b594:	ldr	r3, [r8, #4]
   1b598:	mov	r2, r6
   1b59c:	movw	r1, #4636	; 0x121c
   1b5a0:	mov	r0, #1
   1b5a4:	movt	r1, #3
   1b5a8:	str	r3, [sp]
   1b5ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b5b0:	bl	11be0 <__printf_chk@plt>
   1b5b4:	ldr	ip, [fp, #-72]	; 0xffffffb8
   1b5b8:	ldr	r0, [ip]
   1b5bc:	bl	11868 <fflush@plt>
   1b5c0:	b	1b520 <__assert_fail@plt+0x97f0>
   1b5c4:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1b5c8:	ldr	r3, [ip, #60]	; 0x3c
   1b5cc:	cmp	r6, r3
   1b5d0:	bge	1b694 <__assert_fail@plt+0x9964>
   1b5d4:	movw	r9, #26824	; 0x68c8
   1b5d8:	movw	r8, #26888	; 0x6908
   1b5dc:	str	r5, [fp, #-72]	; 0xffffffb8
   1b5e0:	movt	r9, #4
   1b5e4:	movt	r8, #4
   1b5e8:	sub	r7, fp, #52	; 0x34
   1b5ec:	mov	r5, ip
   1b5f0:	b	1b63c <__assert_fail@plt+0x990c>
   1b5f4:	mov	r0, r7
   1b5f8:	add	r6, r6, #1
   1b5fc:	bl	11b5c <strlen@plt>
   1b600:	ldr	ip, [r9]
   1b604:	mov	r3, #0
   1b608:	str	r3, [sp]
   1b60c:	movw	r2, #6032	; 0x1790
   1b610:	movt	r2, #3
   1b614:	ldr	ip, [ip, #4]
   1b618:	str	r3, [sp, #8]
   1b61c:	mov	r3, #6
   1b620:	str	ip, [sp, #4]
   1b624:	mov	r1, r0
   1b628:	mov	r0, r7
   1b62c:	bl	2c3b8 <error@@Base+0x9778>
   1b630:	ldr	r3, [r5, #60]	; 0x3c
   1b634:	cmp	r3, r6
   1b638:	ble	1b690 <__assert_fail@plt+0x9960>
   1b63c:	str	r6, [sp]
   1b640:	movw	r3, #4320	; 0x10e0
   1b644:	mov	r0, r7
   1b648:	movt	r3, #3
   1b64c:	mov	r1, #1
   1b650:	mov	r2, #11
   1b654:	bl	11b98 <__sprintf_chk@plt>
   1b658:	ldr	r3, [sl]
   1b65c:	tst	r3, #4096	; 0x1000
   1b660:	beq	1b5f4 <__assert_fail@plt+0x98c4>
   1b664:	ldr	r0, [r5, #44]	; 0x2c
   1b668:	bl	22b1c <__assert_fail@plt+0x10dec>
   1b66c:	mov	r2, r6
   1b670:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b674:	movw	r1, #4668	; 0x123c
   1b678:	mov	r0, #1
   1b67c:	movt	r1, #3
   1b680:	bl	11be0 <__printf_chk@plt>
   1b684:	ldr	r0, [r8]
   1b688:	bl	11868 <fflush@plt>
   1b68c:	b	1b5f4 <__assert_fail@plt+0x98c4>
   1b690:	ldr	r5, [fp, #-72]	; 0xffffffb8
   1b694:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1b698:	mov	r0, r5
   1b69c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b6a0:	movw	r5, #27092	; 0x69d4
   1b6a4:	movw	r8, #27308	; 0x6aac
   1b6a8:	movt	r5, #4
   1b6ac:	ldr	ip, [lr, #20]
   1b6b0:	movw	lr, #32767	; 0x7fff
   1b6b4:	add	r2, r1, #3
   1b6b8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1b6bc:	bfi	ip, lr, #8, #15
   1b6c0:	ldr	lr, [fp, #-68]	; 0xffffffbc
   1b6c4:	movt	r8, #4
   1b6c8:	str	ip, [lr, #20]
   1b6cc:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1b6d0:	str	r6, [ip, #60]	; 0x3c
   1b6d4:	str	r3, [fp, #-76]	; 0xffffffb4
   1b6d8:	bl	16dd0 <__assert_fail@plt+0x50a0>
   1b6dc:	ldr	r2, [sl]
   1b6e0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b6e4:	tst	r2, #4096	; 0x1000
   1b6e8:	mov	r6, r0
   1b6ec:	bne	1b7e8 <__assert_fail@plt+0x9ab8>
   1b6f0:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1b6f4:	ldr	r2, [ip, #44]	; 0x2c
   1b6f8:	str	r3, [ip, #60]	; 0x3c
   1b6fc:	sub	r3, r2, #1
   1b700:	str	r3, [ip, #44]	; 0x2c
   1b704:	ldr	ip, [fp, #-68]	; 0xffffffbc
   1b708:	ldr	r3, [ip, #20]
   1b70c:	bfc	r3, #8, #15
   1b710:	str	r3, [ip, #20]
   1b714:	bl	2ca4c <error@@Base+0x9e0c>
   1b718:	mov	r0, r6
   1b71c:	bl	11b5c <strlen@plt>
   1b720:	add	r0, r6, r0
   1b724:	b	1b3b0 <__assert_fail@plt+0x9680>
   1b728:	movw	r3, #29556	; 0x7374
   1b72c:	movt	r3, #4
   1b730:	ldr	r3, [r3]
   1b734:	cmp	r3, #0
   1b738:	beq	1b76c <__assert_fail@plt+0x9a3c>
   1b73c:	movw	r3, #28268	; 0x6e6c
   1b740:	movt	r3, #4
   1b744:	mov	r2, #5
   1b748:	movw	r1, #2500	; 0x9c4
   1b74c:	movt	r1, #3
   1b750:	ldr	r7, [r3]
   1b754:	bl	1191c <dcgettext@plt>
   1b758:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b75c:	mov	r3, r6
   1b760:	mov	r1, r0
   1b764:	mov	r0, r7
   1b768:	bl	22c40 <error@@Base>
   1b76c:	movw	r3, #29696	; 0x7400
   1b770:	movt	r3, #4
   1b774:	ldr	r3, [r3]
   1b778:	cmp	r3, #0
   1b77c:	beq	1b3ac <__assert_fail@plt+0x967c>
   1b780:	movw	r3, #28268	; 0x6e6c
   1b784:	movt	r3, #4
   1b788:	mov	r2, #5
   1b78c:	movw	r1, #4580	; 0x11e4
   1b790:	mov	r0, #0
   1b794:	movt	r1, #3
   1b798:	ldr	r7, [r3]
   1b79c:	bl	1191c <dcgettext@plt>
   1b7a0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b7a4:	mov	r3, r6
   1b7a8:	mov	r1, r0
   1b7ac:	mov	r0, r7
   1b7b0:	bl	22c40 <error@@Base>
   1b7b4:	b	1b3ac <__assert_fail@plt+0x967c>
   1b7b8:	mov	r0, r6
   1b7bc:	bl	22b1c <__assert_fail@plt+0x10dec>
   1b7c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b7c4:	movw	r1, #4616	; 0x1208
   1b7c8:	mov	r0, #1
   1b7cc:	movt	r1, #3
   1b7d0:	bl	11be0 <__printf_chk@plt>
   1b7d4:	movw	r3, #26888	; 0x6908
   1b7d8:	movt	r3, #4
   1b7dc:	ldr	r0, [r3]
   1b7e0:	bl	11868 <fflush@plt>
   1b7e4:	b	1b4ec <__assert_fail@plt+0x97bc>
   1b7e8:	ldr	r0, [r5, #44]	; 0x2c
   1b7ec:	movw	r7, #26888	; 0x6908
   1b7f0:	movt	r7, #4
   1b7f4:	bl	22b1c <__assert_fail@plt+0x10dec>
   1b7f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b7fc:	movw	r1, #4704	; 0x1260
   1b800:	mov	r0, #1
   1b804:	movt	r1, #3
   1b808:	bl	11be0 <__printf_chk@plt>
   1b80c:	ldr	r0, [r7]
   1b810:	bl	11868 <fflush@plt>
   1b814:	ldr	r2, [r8]
   1b818:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b81c:	tst	r2, #4096	; 0x1000
   1b820:	beq	1b6f0 <__assert_fail@plt+0x99c0>
   1b824:	mov	r0, r6
   1b828:	bl	11a9c <puts@plt>
   1b82c:	ldr	r0, [r7]
   1b830:	bl	11868 <fflush@plt>
   1b834:	ldr	r2, [r8]
   1b838:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b83c:	tst	r2, #4096	; 0x1000
   1b840:	beq	1b6f0 <__assert_fail@plt+0x99c0>
   1b844:	ldr	r0, [r5, #44]	; 0x2c
   1b848:	bl	22b1c <__assert_fail@plt+0x10dec>
   1b84c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b850:	movw	r1, #4736	; 0x1280
   1b854:	mov	r0, #1
   1b858:	movt	r1, #3
   1b85c:	bl	11be0 <__printf_chk@plt>
   1b860:	ldr	r0, [r7]
   1b864:	bl	11868 <fflush@plt>
   1b868:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b86c:	b	1b6f0 <__assert_fail@plt+0x99c0>
   1b870:	bl	11934 <__stack_chk_fail@plt>
   1b874:	push	{r3, r4, r5, lr}
   1b878:	mov	r5, r0
   1b87c:	ldr	r4, [r1]
   1b880:	mov	r0, r4
   1b884:	bl	11b5c <strlen@plt>
   1b888:	mov	r1, r0
   1b88c:	mov	r0, r4
   1b890:	bl	2c6f8 <error@@Base+0x9ab8>
   1b894:	cmp	r0, #0
   1b898:	beq	1b8d4 <__assert_fail@plt+0x9ba4>
   1b89c:	ldrb	r3, [r0, #20]
   1b8a0:	mov	r0, r5
   1b8a4:	tst	r3, #1
   1b8a8:	bne	1b8c0 <__assert_fail@plt+0x9b90>
   1b8ac:	movw	r1, #4768	; 0x12a0
   1b8b0:	mov	r2, #6
   1b8b4:	movt	r1, #3
   1b8b8:	pop	{r3, r4, r5, lr}
   1b8bc:	b	16bc4 <__assert_fail@plt+0x4e94>
   1b8c0:	movw	r1, #4756	; 0x1294
   1b8c4:	mov	r2, #9
   1b8c8:	movt	r1, #3
   1b8cc:	pop	{r3, r4, r5, lr}
   1b8d0:	b	16bc4 <__assert_fail@plt+0x4e94>
   1b8d4:	mov	r0, r5
   1b8d8:	movw	r1, #4324	; 0x10e4
   1b8dc:	mov	r2, #9
   1b8e0:	movt	r1, #3
   1b8e4:	pop	{r3, r4, r5, lr}
   1b8e8:	b	16bc4 <__assert_fail@plt+0x4e94>
   1b8ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b8f0:	sub	sp, sp, #12
   1b8f4:	mov	r5, r0
   1b8f8:	mov	r9, r2
   1b8fc:	ldr	r4, [sp, #48]	; 0x30
   1b900:	ldr	r7, [sp, #56]	; 0x38
   1b904:	rsbs	r8, r4, #1
   1b908:	str	r1, [sp]
   1b90c:	str	r3, [sp, #4]
   1b910:	movcc	r8, #0
   1b914:	cmp	r7, #0
   1b918:	cmpeq	r4, #0
   1b91c:	ldr	r6, [sp, #52]	; 0x34
   1b920:	beq	1ba6c <__assert_fail@plt+0x9d3c>
   1b924:	adds	r7, r7, #0
   1b928:	ldr	fp, [sp]
   1b92c:	movne	r7, #1
   1b930:	and	r8, r8, r7
   1b934:	b	1b988 <__assert_fail@plt+0x9c58>
   1b938:	ldr	r3, [sp]
   1b93c:	cmp	sl, r3
   1b940:	bls	1b9f4 <__assert_fail@plt+0x9cc4>
   1b944:	bl	11b20 <__ctype_b_loc@plt>
   1b948:	ldrb	r2, [sl, #-1]
   1b94c:	lsl	r2, r2, #1
   1b950:	ldr	r1, [r0]
   1b954:	ldrh	r2, [r1, r2]
   1b958:	tst	r2, #1
   1b95c:	addeq	sl, sl, r4
   1b960:	bne	1b9f4 <__assert_fail@plt+0x9cc4>
   1b964:	mov	r0, r5
   1b968:	mov	r1, r9
   1b96c:	mov	r2, r4
   1b970:	mov	fp, sl
   1b974:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1b978:	mov	r5, r0
   1b97c:	ldrb	r3, [sl]
   1b980:	cmp	r3, #0
   1b984:	beq	1b9e8 <__assert_fail@plt+0x9cb8>
   1b988:	cmp	r8, #0
   1b98c:	mov	r0, fp
   1b990:	bne	1ba20 <__assert_fail@plt+0x9cf0>
   1b994:	mov	r1, r9
   1b998:	bl	11808 <strstr@plt>
   1b99c:	subs	sl, r0, #0
   1b9a0:	beq	1ba4c <__assert_fail@plt+0x9d1c>
   1b9a4:	cmp	fp, sl
   1b9a8:	bcc	1ba34 <__assert_fail@plt+0x9d04>
   1b9ac:	cmp	r7, #0
   1b9b0:	bne	1b938 <__assert_fail@plt+0x9c08>
   1b9b4:	add	sl, sl, r4
   1b9b8:	cmp	r6, #0
   1b9bc:	moveq	fp, sl
   1b9c0:	beq	1b97c <__assert_fail@plt+0x9c4c>
   1b9c4:	mov	r0, r5
   1b9c8:	ldr	r1, [sp, #4]
   1b9cc:	mov	r2, r6
   1b9d0:	mov	fp, sl
   1b9d4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1b9d8:	ldrb	r3, [sl]
   1b9dc:	cmp	r3, #0
   1b9e0:	mov	r5, r0
   1b9e4:	bne	1b988 <__assert_fail@plt+0x9c58>
   1b9e8:	mov	r0, r5
   1b9ec:	add	sp, sp, #12
   1b9f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9f4:	ldrb	fp, [sl, r4]
   1b9f8:	add	sl, sl, r4
   1b9fc:	cmp	fp, #0
   1ba00:	beq	1b9b8 <__assert_fail@plt+0x9c88>
   1ba04:	bl	11b20 <__ctype_b_loc@plt>
   1ba08:	lsl	r2, fp, #1
   1ba0c:	ldr	r1, [r0]
   1ba10:	ldrh	r2, [r1, r2]
   1ba14:	tst	r2, #1
   1ba18:	bne	1b9b8 <__assert_fail@plt+0x9c88>
   1ba1c:	b	1b964 <__assert_fail@plt+0x9c34>
   1ba20:	bl	23230 <error@@Base+0x5f0>
   1ba24:	bl	231d0 <error@@Base+0x590>
   1ba28:	mov	sl, r0
   1ba2c:	cmp	fp, sl
   1ba30:	bcs	1b9ac <__assert_fail@plt+0x9c7c>
   1ba34:	mov	r0, r5
   1ba38:	mov	r1, fp
   1ba3c:	rsb	r2, fp, sl
   1ba40:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1ba44:	mov	r5, r0
   1ba48:	b	1b9ac <__assert_fail@plt+0x9c7c>
   1ba4c:	mov	r0, fp
   1ba50:	bl	11b5c <strlen@plt>
   1ba54:	mov	r1, fp
   1ba58:	mov	r2, r0
   1ba5c:	mov	r0, r5
   1ba60:	add	sp, sp, #12
   1ba64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ba68:	b	16bc4 <__assert_fail@plt+0x4e94>
   1ba6c:	mov	r0, r1
   1ba70:	bl	11b5c <strlen@plt>
   1ba74:	ldr	r1, [sp]
   1ba78:	mov	r2, r0
   1ba7c:	mov	r0, r5
   1ba80:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1ba84:	cmp	r6, #0
   1ba88:	mov	r5, r0
   1ba8c:	beq	1b9e8 <__assert_fail@plt+0x9cb8>
   1ba90:	ldr	r1, [sp, #4]
   1ba94:	mov	r2, r6
   1ba98:	add	sp, sp, #12
   1ba9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1baa0:	b	16bc4 <__assert_fail@plt+0x4e94>
   1baa4:	push	{r4, r5, r6, r7, r8, lr}
   1baa8:	mov	r7, r0
   1baac:	ldr	r6, [r1]
   1bab0:	sub	sp, sp, #16
   1bab4:	mov	r4, r1
   1bab8:	mov	r0, r6
   1babc:	bl	11b5c <strlen@plt>
   1bac0:	ldr	r5, [r4, #4]
   1bac4:	mov	r8, r0
   1bac8:	mov	r0, r5
   1bacc:	bl	11b5c <strlen@plt>
   1bad0:	ldr	r1, [r4, #8]
   1bad4:	mov	ip, #0
   1bad8:	mov	r2, r6
   1badc:	str	r8, [sp]
   1bae0:	mov	r3, r5
   1bae4:	stmib	sp, {r0, ip}
   1bae8:	mov	r0, r7
   1baec:	bl	1b8ec <__assert_fail@plt+0x9bbc>
   1baf0:	add	sp, sp, #16
   1baf4:	pop	{r4, r5, r6, r7, r8, pc}
   1baf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bafc:	sub	sp, sp, #68	; 0x44
   1bb00:	movw	ip, #26864	; 0x68f0
   1bb04:	movt	ip, #4
   1bb08:	ldr	r5, [sp, #108]	; 0x6c
   1bb0c:	mov	sl, r0
   1bb10:	ldr	r0, [ip]
   1bb14:	cmp	r5, #0
   1bb18:	str	ip, [sp, #36]	; 0x24
   1bb1c:	str	r2, [sp, #16]
   1bb20:	str	r1, [sp, #52]	; 0x34
   1bb24:	str	r3, [sp, #24]
   1bb28:	ldr	r6, [sp, #104]	; 0x68
   1bb2c:	str	r0, [sp, #60]	; 0x3c
   1bb30:	beq	1bd18 <__assert_fail@plt+0x9fe8>
   1bb34:	rsb	r3, r3, r5
   1bb38:	mov	r0, r5
   1bb3c:	sub	r3, r3, #1
   1bb40:	str	r3, [sp, #32]
   1bb44:	bl	11b5c <strlen@plt>
   1bb48:	mov	r8, r0
   1bb4c:	cmp	r6, #0
   1bb50:	beq	1bd2c <__assert_fail@plt+0x9ffc>
   1bb54:	ldr	ip, [sp, #16]
   1bb58:	mov	r0, r6
   1bb5c:	mov	r3, #0
   1bb60:	str	r3, [sp, #20]
   1bb64:	rsb	r7, ip, r6
   1bb68:	bl	11b5c <strlen@plt>
   1bb6c:	sub	r7, r7, #1
   1bb70:	sub	ip, r7, #1
   1bb74:	str	ip, [sp, #44]	; 0x2c
   1bb78:	ldr	ip, [sp, #16]
   1bb7c:	add	ip, ip, #1
   1bb80:	str	ip, [sp, #48]	; 0x30
   1bb84:	add	r4, r0, r7
   1bb88:	sub	r3, r0, #1
   1bb8c:	str	r0, [sp, #40]	; 0x28
   1bb90:	str	r3, [sp, #28]
   1bb94:	add	r0, sp, #52	; 0x34
   1bb98:	add	r1, sp, #56	; 0x38
   1bb9c:	bl	2346c <error@@Base+0x82c>
   1bba0:	subs	r9, r0, #0
   1bba4:	beq	1bcec <__assert_fail@plt+0x9fbc>
   1bba8:	ldr	fp, [sp, #56]	; 0x38
   1bbac:	cmp	r4, fp
   1bbb0:	bhi	1bbd0 <__assert_fail@plt+0x9ea0>
   1bbb4:	cmp	r7, #0
   1bbb8:	beq	1bc34 <__assert_fail@plt+0x9f04>
   1bbbc:	ldr	ip, [sp, #16]
   1bbc0:	ldrb	r2, [r9]
   1bbc4:	ldrb	r3, [ip]
   1bbc8:	cmp	r2, r3
   1bbcc:	beq	1bc08 <__assert_fail@plt+0x9ed8>
   1bbd0:	mov	r0, sl
   1bbd4:	mov	r1, r9
   1bbd8:	mov	r2, fp
   1bbdc:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1bbe0:	mov	sl, r0
   1bbe4:	mov	r0, sl
   1bbe8:	movw	r1, #19524	; 0x4c44
   1bbec:	mov	r2, #1
   1bbf0:	movt	r1, #3
   1bbf4:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1bbf8:	mov	ip, #1
   1bbfc:	str	ip, [sp, #20]
   1bc00:	mov	sl, r0
   1bc04:	b	1bb94 <__assert_fail@plt+0x9e64>
   1bc08:	ldr	r3, [sp, #44]	; 0x2c
   1bc0c:	ldrb	r2, [r9, r3]
   1bc10:	ldrb	r3, [r6, #-2]
   1bc14:	cmp	r2, r3
   1bc18:	bne	1bbd0 <__assert_fail@plt+0x9ea0>
   1bc1c:	add	r0, r9, #1
   1bc20:	ldr	r1, [sp, #48]	; 0x30
   1bc24:	ldr	r2, [sp, #44]	; 0x2c
   1bc28:	bl	11cf4 <strncmp@plt>
   1bc2c:	cmp	r0, #0
   1bc30:	bne	1bbd0 <__assert_fail@plt+0x9ea0>
   1bc34:	ldr	ip, [sp, #40]	; 0x28
   1bc38:	cmp	ip, #0
   1bc3c:	beq	1bc88 <__assert_fail@plt+0x9f58>
   1bc40:	ldr	ip, [sp, #28]
   1bc44:	add	r2, r9, fp
   1bc48:	ldrb	r2, [r2, #-1]
   1bc4c:	ldrb	r3, [r6, ip]
   1bc50:	cmp	r2, r3
   1bc54:	bne	1bbd0 <__assert_fail@plt+0x9ea0>
   1bc58:	ldr	ip, [sp, #40]	; 0x28
   1bc5c:	ldrb	r2, [r6]
   1bc60:	rsb	r3, ip, fp
   1bc64:	add	r0, r9, r3
   1bc68:	ldrb	r3, [r9, r3]
   1bc6c:	cmp	r3, r2
   1bc70:	bne	1bbd0 <__assert_fail@plt+0x9ea0>
   1bc74:	mov	r1, r6
   1bc78:	ldr	r2, [sp, #28]
   1bc7c:	bl	11cf4 <strncmp@plt>
   1bc80:	cmp	r0, #0
   1bc84:	bne	1bbd0 <__assert_fail@plt+0x9ea0>
   1bc88:	ldr	r3, [sp, #32]
   1bc8c:	mov	r0, sl
   1bc90:	ldr	r1, [sp, #24]
   1bc94:	adds	fp, r3, #0
   1bc98:	ldr	r2, [sp, #32]
   1bc9c:	movne	fp, #1
   1bca0:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1bca4:	cmp	r5, #0
   1bca8:	mov	sl, r0
   1bcac:	beq	1bd68 <__assert_fail@plt+0xa038>
   1bcb0:	ldr	r2, [sp, #56]	; 0x38
   1bcb4:	add	r1, r9, r7
   1bcb8:	rsb	r2, r4, r2
   1bcbc:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1bcc0:	mov	r1, r5
   1bcc4:	mov	r2, r8
   1bcc8:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1bccc:	cmp	fp, #0
   1bcd0:	mov	sl, r0
   1bcd4:	bne	1bbe4 <__assert_fail@plt+0x9eb4>
   1bcd8:	ldr	r3, [sp, #56]	; 0x38
   1bcdc:	add	r3, r8, r3
   1bce0:	cmp	r3, #0
   1bce4:	beq	1bb94 <__assert_fail@plt+0x9e64>
   1bce8:	b	1bbe4 <__assert_fail@plt+0x9eb4>
   1bcec:	ldr	r3, [sp, #20]
   1bcf0:	cmp	r3, #0
   1bcf4:	subne	r0, sl, #1
   1bcf8:	moveq	r0, sl
   1bcfc:	ldr	ip, [sp, #36]	; 0x24
   1bd00:	ldr	r2, [sp, #60]	; 0x3c
   1bd04:	ldr	r3, [ip]
   1bd08:	cmp	r2, r3
   1bd0c:	bne	1bd64 <__assert_fail@plt+0xa034>
   1bd10:	add	sp, sp, #68	; 0x44
   1bd14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd18:	ldr	r0, [sp, #24]
   1bd1c:	mov	r8, r5
   1bd20:	bl	11b5c <strlen@plt>
   1bd24:	str	r0, [sp, #32]
   1bd28:	b	1bb4c <__assert_fail@plt+0x9e1c>
   1bd2c:	ldr	r0, [sp, #16]
   1bd30:	bl	11b5c <strlen@plt>
   1bd34:	mov	r4, r0
   1bd38:	ldr	r0, [sp, #24]
   1bd3c:	bl	11b5c <strlen@plt>
   1bd40:	mov	lr, #1
   1bd44:	ldr	r1, [sp, #52]	; 0x34
   1bd48:	str	r4, [sp]
   1bd4c:	ldr	r2, [sp, #16]
   1bd50:	ldr	r3, [sp, #24]
   1bd54:	stmib	sp, {r0, lr}
   1bd58:	mov	r0, sl
   1bd5c:	bl	1b8ec <__assert_fail@plt+0x9bbc>
   1bd60:	b	1bcfc <__assert_fail@plt+0x9fcc>
   1bd64:	bl	11934 <__stack_chk_fail@plt>
   1bd68:	cmp	fp, #0
   1bd6c:	beq	1bb94 <__assert_fail@plt+0x9e64>
   1bd70:	b	1bbe4 <__assert_fail@plt+0x9eb4>
   1bd74:	push	{r4, r5, r6, r7, r8, lr}
   1bd78:	mov	r7, r0
   1bd7c:	sub	sp, sp, #8
   1bd80:	mov	r0, r2
   1bd84:	mov	r5, r3
   1bd88:	mov	r6, r2
   1bd8c:	mov	r8, r1
   1bd90:	bl	24960 <error@@Base+0x1d20>
   1bd94:	mov	r4, r0
   1bd98:	mov	r0, r5
   1bd9c:	bl	24960 <error@@Base+0x1d20>
   1bda0:	mov	r1, r8
   1bda4:	mov	r2, r6
   1bda8:	mov	r3, r5
   1bdac:	subs	ip, r0, #0
   1bdb0:	mov	r0, r7
   1bdb4:	addne	ip, ip, #1
   1bdb8:	cmp	r4, #0
   1bdbc:	addne	r4, r4, #1
   1bdc0:	str	ip, [sp, #4]
   1bdc4:	str	r4, [sp]
   1bdc8:	bl	1baf8 <__assert_fail@plt+0x9dc8>
   1bdcc:	add	sp, sp, #8
   1bdd0:	pop	{r4, r5, r6, r7, r8, pc}
   1bdd4:	mov	r3, r1
   1bdd8:	ldr	r1, [r1, #8]
   1bddc:	ldm	r3, {r2, r3}
   1bde0:	b	1bd74 <__assert_fail@plt+0xa044>
   1bde4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bde8:	add	fp, sp, #32
   1bdec:	sub	sp, sp, #12
   1bdf0:	movw	r4, #26864	; 0x68f0
   1bdf4:	movt	r4, #4
   1bdf8:	subs	r5, r1, #0
   1bdfc:	mov	r6, r2
   1be00:	ldr	r3, [r4]
   1be04:	mov	r7, r0
   1be08:	str	r3, [fp, #-40]	; 0xffffffd8
   1be0c:	beq	1be88 <__assert_fail@plt+0xa158>
   1be10:	add	r8, r5, #1
   1be14:	mov	r0, r8
   1be18:	bl	11b5c <strlen@plt>
   1be1c:	mov	r9, r0
   1be20:	mov	r0, r6
   1be24:	bl	11b5c <strlen@plt>
   1be28:	rsb	r2, r7, r5
   1be2c:	add	r3, r2, r9
   1be30:	cmp	r0, r3
   1be34:	mov	sl, r0
   1be38:	bcc	1be6c <__assert_fail@plt+0xa13c>
   1be3c:	mov	r0, r7
   1be40:	mov	r1, r6
   1be44:	bl	11cf4 <strncmp@plt>
   1be48:	cmp	r0, #0
   1be4c:	bne	1be6c <__assert_fail@plt+0xa13c>
   1be50:	rsb	r1, r9, sl
   1be54:	mov	r0, r8
   1be58:	add	r1, r6, r1
   1be5c:	bl	1182c <strcmp@plt>
   1be60:	rsbs	r0, r0, #1
   1be64:	movcc	r0, #0
   1be68:	b	1be70 <__assert_fail@plt+0xa140>
   1be6c:	mov	r0, #0
   1be70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1be74:	ldr	r3, [r4]
   1be78:	cmp	r2, r3
   1be7c:	bne	1bf00 <__assert_fail@plt+0xa1d0>
   1be80:	sub	sp, fp, #32
   1be84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1be88:	bl	11b5c <strlen@plt>
   1be8c:	mov	r1, r7
   1be90:	add	r3, r0, #15
   1be94:	add	r2, r0, #1
   1be98:	bic	r3, r3, #7
   1be9c:	sub	sp, sp, r3
   1bea0:	mov	r0, sp
   1bea4:	mov	r7, sp
   1bea8:	bl	118c8 <memcpy@plt>
   1beac:	mov	r0, sp
   1beb0:	bl	24960 <error@@Base+0x1d20>
   1beb4:	subs	r5, r0, #0
   1beb8:	bne	1be10 <__assert_fail@plt+0xa0e0>
   1bebc:	cmp	r7, r6
   1bec0:	beq	1bef8 <__assert_fail@plt+0xa1c8>
   1bec4:	ldrb	r2, [sp]
   1bec8:	ldrb	r3, [r6]
   1becc:	cmp	r3, r2
   1bed0:	movne	r0, r5
   1bed4:	bne	1be70 <__assert_fail@plt+0xa140>
   1bed8:	cmp	r3, #0
   1bedc:	beq	1bef8 <__assert_fail@plt+0xa1c8>
   1bee0:	add	r0, sp, #1
   1bee4:	add	r1, r6, #1
   1bee8:	bl	1182c <strcmp@plt>
   1beec:	rsbs	r0, r0, #1
   1bef0:	movcc	r0, #0
   1bef4:	b	1be70 <__assert_fail@plt+0xa140>
   1bef8:	mov	r0, #1
   1befc:	b	1be70 <__assert_fail@plt+0xa140>
   1bf00:	bl	11934 <__stack_chk_fail@plt>
   1bf04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf08:	add	fp, sp, #32
   1bf0c:	sub	sp, sp, #116	; 0x74
   1bf10:	movw	r3, #26864	; 0x68f0
   1bf14:	movt	r3, #4
   1bf18:	str	r3, [fp, #-128]	; 0xffffff80
   1bf1c:	movw	r3, #4776	; 0x12a8
   1bf20:	ldr	lr, [fp, #-128]	; 0xffffff80
   1bf24:	movt	r3, #3
   1bf28:	cmp	r2, r3
   1bf2c:	mov	r9, r0
   1bf30:	mov	r4, r1
   1bf34:	ldr	ip, [lr]
   1bf38:	moveq	r8, #1
   1bf3c:	str	ip, [fp, #-40]	; 0xffffffd8
   1bf40:	beq	1bf54 <__assert_fail@plt+0xa224>
   1bf44:	ldrb	r1, [r2]
   1bf48:	cmp	r1, #102	; 0x66
   1bf4c:	movne	r8, #0
   1bf50:	beq	1c2d8 <__assert_fail@plt+0xa5a8>
   1bf54:	ldr	r2, [r4]
   1bf58:	mov	r5, #0
   1bf5c:	ldr	r3, [r4, #4]
   1bf60:	mov	r7, r5
   1bf64:	sub	r6, fp, #120	; 0x78
   1bf68:	str	r2, [fp, #-116]	; 0xffffff8c
   1bf6c:	str	r3, [fp, #-112]	; 0xffffff90
   1bf70:	b	1bfc4 <__assert_fail@plt+0xa294>
   1bf74:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1bf78:	sub	sp, sp, #32
   1bf7c:	add	r4, sp, #8
   1bf80:	str	r4, [r6]
   1bf84:	mov	r0, r3
   1bf88:	ldrb	r1, [r2]
   1bf8c:	mov	r6, r4
   1bf90:	str	r3, [r4, #4]
   1bf94:	cmp	r1, #0
   1bf98:	addne	r2, r2, #1
   1bf9c:	strne	r2, [fp, #-116]	; 0xffffff8c
   1bfa0:	ldr	r2, [fp, #-108]	; 0xffffff94
   1bfa4:	str	r2, [r4, #12]
   1bfa8:	ldrb	r1, [r3, r2]
   1bfac:	str	r1, [r4, #16]
   1bfb0:	strb	r7, [r3, r2]
   1bfb4:	bl	24960 <error@@Base+0x1d20>
   1bfb8:	cmp	r0, #0
   1bfbc:	str	r0, [r4, #8]
   1bfc0:	addeq	r5, r5, #1
   1bfc4:	sub	r0, fp, #116	; 0x74
   1bfc8:	sub	r1, fp, #108	; 0x6c
   1bfcc:	bl	2346c <error@@Base+0x82c>
   1bfd0:	subs	r3, r0, #0
   1bfd4:	bne	1bf74 <__assert_fail@plt+0xa244>
   1bfd8:	str	r3, [r6]
   1bfdc:	mov	r4, r3
   1bfe0:	mov	r7, r3
   1bfe4:	sub	r6, fp, #124	; 0x7c
   1bfe8:	b	1c030 <__assert_fail@plt+0xa300>
   1bfec:	ldr	r2, [fp, #-112]	; 0xffffff90
   1bff0:	sub	sp, sp, #32
   1bff4:	add	r3, sp, #8
   1bff8:	str	r3, [r6]
   1bffc:	add	r4, r4, #1
   1c000:	ldrb	r1, [r2]
   1c004:	mov	r6, r3
   1c008:	cmp	r1, #0
   1c00c:	addne	r2, r2, #1
   1c010:	strne	r2, [fp, #-112]	; 0xffffff90
   1c014:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c018:	strb	r7, [r0, r2]
   1c01c:	ldr	r2, [fp, #-108]	; 0xffffff94
   1c020:	str	r0, [r3, #8]
   1c024:	str	r7, [r3, #16]
   1c028:	str	r7, [r3, #4]
   1c02c:	str	r2, [r3, #12]
   1c030:	sub	r0, fp, #112	; 0x70
   1c034:	sub	r1, fp, #108	; 0x6c
   1c038:	bl	2346c <error@@Base+0x82c>
   1c03c:	cmp	r0, #0
   1c040:	bne	1bfec <__assert_fail@plt+0xa2bc>
   1c044:	cmp	r5, #1
   1c048:	str	r0, [r6]
   1c04c:	ble	1c05c <__assert_fail@plt+0xa32c>
   1c050:	mul	r5, r4, r5
   1c054:	cmp	r5, #9
   1c058:	bgt	1c22c <__assert_fail@plt+0xa4fc>
   1c05c:	str	r0, [fp, #-132]	; 0xffffff7c
   1c060:	cmp	r4, #0
   1c064:	ldr	r5, [fp, #-120]	; 0xffffff88
   1c068:	beq	1c178 <__assert_fail@plt+0xa448>
   1c06c:	cmp	r5, #0
   1c070:	ldr	r7, [fp, #-124]	; 0xffffff84
   1c074:	movne	r4, r5
   1c078:	beq	1c0cc <__assert_fail@plt+0xa39c>
   1c07c:	ldr	r1, [r4, #8]
   1c080:	cmp	r1, #0
   1c084:	beq	1c1b8 <__assert_fail@plt+0xa488>
   1c088:	cmp	r7, #0
   1c08c:	beq	1c0c0 <__assert_fail@plt+0xa390>
   1c090:	mov	r6, r7
   1c094:	b	1c09c <__assert_fail@plt+0xa36c>
   1c098:	ldr	r1, [r4, #8]
   1c09c:	ldr	r2, [r6, #8]
   1c0a0:	ldr	r0, [r4, #4]
   1c0a4:	ldr	sl, [r6, #16]
   1c0a8:	bl	1bde4 <__assert_fail@plt+0xa0b4>
   1c0ac:	orr	r0, r0, sl
   1c0b0:	str	r0, [r6, #16]
   1c0b4:	ldr	r6, [r6]
   1c0b8:	cmp	r6, #0
   1c0bc:	bne	1c098 <__assert_fail@plt+0xa368>
   1c0c0:	ldr	r4, [r4]
   1c0c4:	cmp	r4, #0
   1c0c8:	bne	1c07c <__assert_fail@plt+0xa34c>
   1c0cc:	cmp	r7, #0
   1c0d0:	beq	1c178 <__assert_fail@plt+0xa448>
   1c0d4:	mov	r2, #0
   1c0d8:	b	1c0f8 <__assert_fail@plt+0xa3c8>
   1c0dc:	adds	r3, r3, #0
   1c0e0:	movne	r3, #1
   1c0e4:	cmp	r3, #0
   1c0e8:	bne	1c114 <__assert_fail@plt+0xa3e4>
   1c0ec:	ldr	r7, [r7]
   1c0f0:	cmp	r7, #0
   1c0f4:	beq	1c154 <__assert_fail@plt+0xa424>
   1c0f8:	cmp	r8, #0
   1c0fc:	ldr	r3, [r7, #16]
   1c100:	bne	1c0dc <__assert_fail@plt+0xa3ac>
   1c104:	rsbs	r3, r3, #1
   1c108:	movcc	r3, #0
   1c10c:	cmp	r3, #0
   1c110:	beq	1c0ec <__assert_fail@plt+0xa3bc>
   1c114:	ldr	r4, [r7, #8]
   1c118:	mov	r0, r4
   1c11c:	bl	11b5c <strlen@plt>
   1c120:	mov	r1, r4
   1c124:	mov	r2, r0
   1c128:	mov	r0, r9
   1c12c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1c130:	mov	r2, #1
   1c134:	movw	r1, #19524	; 0x4c44
   1c138:	movt	r1, #3
   1c13c:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1c140:	ldr	r7, [r7]
   1c144:	mov	r2, #1
   1c148:	cmp	r7, #0
   1c14c:	mov	r9, r0
   1c150:	bne	1c0f8 <__assert_fail@plt+0xa3c8>
   1c154:	cmp	r2, #0
   1c158:	subne	r9, r9, #1
   1c15c:	cmp	r5, #0
   1c160:	beq	1c180 <__assert_fail@plt+0xa450>
   1c164:	ldr	r2, [r5, #4]
   1c168:	ldr	r3, [r5, #12]
   1c16c:	ldr	r1, [r5, #16]
   1c170:	strb	r1, [r2, r3]
   1c174:	ldr	r5, [r5]
   1c178:	cmp	r5, #0
   1c17c:	bne	1c164 <__assert_fail@plt+0xa434>
   1c180:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1c184:	cmp	r3, #0
   1c188:	beq	1c198 <__assert_fail@plt+0xa468>
   1c18c:	sub	r0, fp, #84	; 0x54
   1c190:	mov	r1, #0
   1c194:	bl	2ecec <error@@Base+0xc0ac>
   1c198:	ldr	r1, [fp, #-128]	; 0xffffff80
   1c19c:	mov	r0, r9
   1c1a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c1a4:	ldr	r3, [r1]
   1c1a8:	cmp	r2, r3
   1c1ac:	bne	1c2f0 <__assert_fail@plt+0xa5c0>
   1c1b0:	sub	sp, fp, #32
   1c1b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1b8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1c1bc:	cmp	r3, #0
   1c1c0:	bne	1c28c <__assert_fail@plt+0xa55c>
   1c1c4:	cmp	r7, #0
   1c1c8:	beq	1c0c0 <__assert_fail@plt+0xa390>
   1c1cc:	ldr	ip, [r4, #12]
   1c1d0:	mov	r6, r7
   1c1d4:	b	1c1ec <__assert_fail@plt+0xa4bc>
   1c1d8:	orr	r3, r0, r3
   1c1dc:	str	r3, [r6, #16]
   1c1e0:	ldr	r6, [r6]
   1c1e4:	cmp	r6, #0
   1c1e8:	beq	1c0c0 <__assert_fail@plt+0xa390>
   1c1ec:	ldr	r2, [r6, #12]
   1c1f0:	ldr	r3, [r6, #16]
   1c1f4:	cmp	ip, r2
   1c1f8:	movne	r0, #0
   1c1fc:	bne	1c1d8 <__assert_fail@plt+0xa4a8>
   1c200:	ldr	r0, [r4, #4]
   1c204:	mov	r2, ip
   1c208:	ldr	r1, [r6, #8]
   1c20c:	str	r3, [fp, #-140]	; 0xffffff74
   1c210:	str	ip, [fp, #-136]	; 0xffffff78
   1c214:	bl	11cf4 <strncmp@plt>
   1c218:	ldr	r3, [fp, #-140]	; 0xffffff74
   1c21c:	ldr	ip, [fp, #-136]	; 0xffffff78
   1c220:	rsbs	r0, r0, #1
   1c224:	movcc	r0, #0
   1c228:	b	1c1d8 <__assert_fail@plt+0xa4a8>
   1c22c:	movw	r3, #45564	; 0xb1fc
   1c230:	movw	r2, #38952	; 0x9828
   1c234:	movt	r3, #1
   1c238:	sub	r0, fp, #84	; 0x54
   1c23c:	str	r3, [sp]
   1c240:	movt	r2, #1
   1c244:	movw	r3, #39008	; 0x9860
   1c248:	mov	r1, r4
   1c24c:	movt	r3, #1
   1c250:	bl	2e838 <error@@Base+0xbbf8>
   1c254:	ldr	r5, [fp, #-124]	; 0xffffff84
   1c258:	cmp	r5, #0
   1c25c:	beq	1c280 <__assert_fail@plt+0xa550>
   1c260:	mov	r1, r5
   1c264:	sub	r0, fp, #84	; 0x54
   1c268:	bl	2eb30 <error@@Base+0xbef0>
   1c26c:	cmp	r0, #0
   1c270:	strne	r0, [r5, #4]
   1c274:	ldr	r5, [r5]
   1c278:	cmp	r5, #0
   1c27c:	bne	1c260 <__assert_fail@plt+0xa530>
   1c280:	mov	r3, #1
   1c284:	str	r3, [fp, #-132]	; 0xffffff7c
   1c288:	b	1c060 <__assert_fail@plt+0xa330>
   1c28c:	ldr	r2, [r4, #4]
   1c290:	sub	r0, fp, #84	; 0x54
   1c294:	ldr	r3, [r4, #12]
   1c298:	sub	r1, fp, #104	; 0x68
   1c29c:	str	r2, [fp, #-96]	; 0xffffffa0
   1c2a0:	str	r3, [fp, #-92]	; 0xffffffa4
   1c2a4:	bl	2e9d4 <error@@Base+0xbd94>
   1c2a8:	cmp	r0, #0
   1c2ac:	beq	1c0c0 <__assert_fail@plt+0xa390>
   1c2b0:	ldr	r3, [r0, #16]
   1c2b4:	orr	r3, r3, #1
   1c2b8:	str	r3, [r0, #16]
   1c2bc:	ldr	r0, [r0, #4]
   1c2c0:	cmp	r0, #0
   1c2c4:	bne	1c2b0 <__assert_fail@plt+0xa580>
   1c2c8:	ldr	r4, [r4]
   1c2cc:	cmp	r4, #0
   1c2d0:	bne	1c07c <__assert_fail@plt+0xa34c>
   1c2d4:	b	1c0cc <__assert_fail@plt+0xa39c>
   1c2d8:	add	r0, r2, #1
   1c2dc:	add	r1, r3, #1
   1c2e0:	bl	1182c <strcmp@plt>
   1c2e4:	rsbs	r8, r0, #1
   1c2e8:	movcc	r8, #0
   1c2ec:	b	1bf54 <__assert_fail@plt+0xa224>
   1c2f0:	bl	11934 <__stack_chk_fail@plt>
   1c2f4:	push	{r3, r4, r5, r6, r7, lr}
   1c2f8:	mov	r6, r0
   1c2fc:	ldr	r4, [r0]
   1c300:	mov	r7, r1
   1c304:	ldr	r5, [r1]
   1c308:	cmp	r4, r5
   1c30c:	bhi	1c384 <__assert_fail@plt+0xa654>
   1c310:	bl	11b20 <__ctype_b_loc@plt>
   1c314:	mov	r3, r4
   1c318:	b	1c32c <__assert_fail@plt+0xa5fc>
   1c31c:	str	r3, [r6]
   1c320:	ldr	r5, [r7]
   1c324:	cmp	r5, r3
   1c328:	bcc	1c384 <__assert_fail@plt+0xa654>
   1c32c:	ldrb	r1, [r3], #1
   1c330:	ldr	r2, [r0]
   1c334:	lsl	r1, r1, #1
   1c338:	mov	r4, r3
   1c33c:	ldrh	r1, [r2, r1]
   1c340:	tst	r1, #8192	; 0x2000
   1c344:	bne	1c31c <__assert_fail@plt+0xa5ec>
   1c348:	ldr	r4, [r6]
   1c34c:	cmp	r4, r5
   1c350:	bhi	1c384 <__assert_fail@plt+0xa654>
   1c354:	mov	r3, r5
   1c358:	b	1c370 <__assert_fail@plt+0xa640>
   1c35c:	str	r3, [r7]
   1c360:	ldr	r4, [r6]
   1c364:	cmp	r4, r3
   1c368:	bhi	1c384 <__assert_fail@plt+0xa654>
   1c36c:	ldr	r2, [r0]
   1c370:	ldrb	r1, [r3], #-1
   1c374:	lsl	r1, r1, #1
   1c378:	ldrh	r2, [r2, r1]
   1c37c:	tst	r2, #8192	; 0x2000
   1c380:	bne	1c35c <__assert_fail@plt+0xa62c>
   1c384:	mov	r0, r4
   1c388:	pop	{r3, r4, r5, r6, r7, pc}
   1c38c:	push	{r4, r5, r6, r7, lr}
   1c390:	movw	r6, #26864	; 0x68f0
   1c394:	movt	r6, #4
   1c398:	sub	sp, sp, #20
   1c39c:	sub	r5, r1, #4
   1c3a0:	mov	r7, r0
   1c3a4:	ldr	r3, [r6]
   1c3a8:	str	r3, [sp, #12]
   1c3ac:	b	1c3dc <__assert_fail@plt+0xa6ac>
   1c3b0:	add	r1, r1, #1
   1c3b4:	bl	16c40 <__assert_fail@plt+0x4f10>
   1c3b8:	mov	r4, r0
   1c3bc:	bl	11b5c <strlen@plt>
   1c3c0:	subs	r2, r0, #0
   1c3c4:	beq	1c43c <__assert_fail@plt+0xa70c>
   1c3c8:	ldr	r3, [r5, #4]
   1c3cc:	cmp	r3, #0
   1c3d0:	beq	1c42c <__assert_fail@plt+0xa6fc>
   1c3d4:	mov	r0, r4
   1c3d8:	bl	1188c <free@plt>
   1c3dc:	ldr	r4, [r5, #4]!
   1c3e0:	mov	r0, r4
   1c3e4:	str	r4, [sp, #4]
   1c3e8:	bl	11b5c <strlen@plt>
   1c3ec:	add	r1, sp, #8
   1c3f0:	sub	r3, r0, #1
   1c3f4:	add	r0, sp, #4
   1c3f8:	add	r4, r4, r3
   1c3fc:	str	r4, [sp, #8]
   1c400:	bl	1c2f4 <__assert_fail@plt+0xa5c4>
   1c404:	ldmib	sp, {r0, r1}
   1c408:	cmp	r0, r1
   1c40c:	bls	1c3b0 <__assert_fail@plt+0xa680>
   1c410:	ldr	r2, [sp, #12]
   1c414:	mov	r0, r7
   1c418:	ldr	r3, [r6]
   1c41c:	cmp	r2, r3
   1c420:	bne	1c448 <__assert_fail@plt+0xa718>
   1c424:	add	sp, sp, #20
   1c428:	pop	{r4, r5, r6, r7, pc}
   1c42c:	mov	r0, r7
   1c430:	mov	r1, r4
   1c434:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1c438:	mov	r7, r0
   1c43c:	mov	r0, r4
   1c440:	bl	1188c <free@plt>
   1c444:	b	1c410 <__assert_fail@plt+0xa6e0>
   1c448:	bl	11934 <__stack_chk_fail@plt>
   1c44c:	push	{r4, r5, r6, r7, lr}
   1c450:	movw	r6, #26864	; 0x68f0
   1c454:	movt	r6, #4
   1c458:	ldr	r4, [r1]
   1c45c:	sub	sp, sp, #20
   1c460:	mov	r7, r0
   1c464:	ldr	r3, [r6]
   1c468:	cmp	r4, #0
   1c46c:	str	r3, [sp, #12]
   1c470:	beq	1c4e4 <__assert_fail@plt+0xa7b4>
   1c474:	mov	r5, r1
   1c478:	b	1c488 <__assert_fail@plt+0xa758>
   1c47c:	ldr	r4, [r5, #4]!
   1c480:	cmp	r4, #0
   1c484:	beq	1c4e4 <__assert_fail@plt+0xa7b4>
   1c488:	mov	r0, r4
   1c48c:	str	r4, [sp, #4]
   1c490:	bl	11b5c <strlen@plt>
   1c494:	add	r1, sp, #8
   1c498:	sub	r3, r0, #1
   1c49c:	add	r0, sp, #4
   1c4a0:	add	r4, r4, r3
   1c4a4:	str	r4, [sp, #8]
   1c4a8:	bl	1c2f4 <__assert_fail@plt+0xa5c4>
   1c4ac:	ldmib	sp, {r0, r1}
   1c4b0:	cmp	r0, r1
   1c4b4:	bhi	1c47c <__assert_fail@plt+0xa74c>
   1c4b8:	add	r1, r1, #1
   1c4bc:	bl	16c40 <__assert_fail@plt+0x4f10>
   1c4c0:	mov	r4, r0
   1c4c4:	bl	11b5c <strlen@plt>
   1c4c8:	subs	r2, r0, #0
   1c4cc:	bne	1c500 <__assert_fail@plt+0xa7d0>
   1c4d0:	mov	r0, r4
   1c4d4:	bl	1188c <free@plt>
   1c4d8:	ldr	r4, [r5, #4]!
   1c4dc:	cmp	r4, #0
   1c4e0:	bne	1c488 <__assert_fail@plt+0xa758>
   1c4e4:	ldr	r2, [sp, #12]
   1c4e8:	mov	r0, r7
   1c4ec:	ldr	r3, [r6]
   1c4f0:	cmp	r2, r3
   1c4f4:	bne	1c51c <__assert_fail@plt+0xa7ec>
   1c4f8:	add	sp, sp, #20
   1c4fc:	pop	{r4, r5, r6, r7, pc}
   1c500:	mov	r0, r7
   1c504:	mov	r1, r4
   1c508:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1c50c:	mov	r7, r0
   1c510:	mov	r0, r4
   1c514:	bl	1188c <free@plt>
   1c518:	b	1c4e4 <__assert_fail@plt+0xa7b4>
   1c51c:	bl	11934 <__stack_chk_fail@plt>
   1c520:	push	{r4, r5, r6, r7, r8, lr}
   1c524:	movw	r4, #26864	; 0x68f0
   1c528:	movt	r4, #4
   1c52c:	ldr	r5, [r1]
   1c530:	sub	sp, sp, #16
   1c534:	mov	r6, r0
   1c538:	ldr	r3, [r4]
   1c53c:	mov	r7, r1
   1c540:	mov	r0, r5
   1c544:	str	r5, [sp, #4]
   1c548:	str	r3, [sp, #12]
   1c54c:	bl	11b5c <strlen@plt>
   1c550:	add	r1, sp, #8
   1c554:	sub	r3, r0, #1
   1c558:	add	r0, sp, #4
   1c55c:	add	r5, r5, r3
   1c560:	str	r5, [sp, #8]
   1c564:	bl	1c2f4 <__assert_fail@plt+0xa5c4>
   1c568:	ldmib	sp, {r0, r1}
   1c56c:	cmp	r0, r1
   1c570:	bls	1c5cc <__assert_fail@plt+0xa89c>
   1c574:	mov	r3, #8
   1c578:	ldr	r0, [r7, r3]
   1c57c:	cmp	r0, #0
   1c580:	beq	1c5b0 <__assert_fail@plt+0xa880>
   1c584:	mov	r1, #0
   1c588:	bl	16c40 <__assert_fail@plt+0x4f10>
   1c58c:	mov	r5, r0
   1c590:	bl	11b5c <strlen@plt>
   1c594:	mov	r1, r5
   1c598:	mov	r2, r0
   1c59c:	mov	r0, r6
   1c5a0:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1c5a4:	mov	r6, r0
   1c5a8:	mov	r0, r5
   1c5ac:	bl	1188c <free@plt>
   1c5b0:	ldr	r2, [sp, #12]
   1c5b4:	mov	r0, r6
   1c5b8:	ldr	r3, [r4]
   1c5bc:	cmp	r2, r3
   1c5c0:	bne	1c5f8 <__assert_fail@plt+0xa8c8>
   1c5c4:	add	sp, sp, #16
   1c5c8:	pop	{r4, r5, r6, r7, r8, pc}
   1c5cc:	add	r1, r1, #1
   1c5d0:	bl	16c40 <__assert_fail@plt+0x4f10>
   1c5d4:	mov	r8, r0
   1c5d8:	bl	11b5c <strlen@plt>
   1c5dc:	mov	r5, r0
   1c5e0:	mov	r0, r8
   1c5e4:	bl	1188c <free@plt>
   1c5e8:	cmp	r5, #0
   1c5ec:	beq	1c574 <__assert_fail@plt+0xa844>
   1c5f0:	mov	r3, #4
   1c5f4:	b	1c578 <__assert_fail@plt+0xa848>
   1c5f8:	bl	11934 <__stack_chk_fail@plt>
   1c5fc:	push	{r4, r5, r6, r7, r8, lr}
   1c600:	movw	r6, #26864	; 0x68f0
   1c604:	movt	r6, #4
   1c608:	sub	sp, sp, #16
   1c60c:	mov	r8, r1
   1c610:	mov	r7, r0
   1c614:	ldr	r3, [r6]
   1c618:	str	r0, [sp, #4]
   1c61c:	str	r3, [sp, #12]
   1c620:	bl	11b5c <strlen@plt>
   1c624:	add	r1, sp, #8
   1c628:	sub	r3, r0, #1
   1c62c:	add	r0, sp, #4
   1c630:	add	r3, r7, r3
   1c634:	str	r3, [sp, #8]
   1c638:	bl	1c2f4 <__assert_fail@plt+0xa5c4>
   1c63c:	ldr	ip, [sp, #4]
   1c640:	ldr	r3, [sp, #8]
   1c644:	cmp	r3, ip
   1c648:	bcc	1c68c <__assert_fail@plt+0xa95c>
   1c64c:	ldrb	r2, [ip]
   1c650:	sub	r2, r2, #48	; 0x30
   1c654:	cmp	r2, #9
   1c658:	bhi	1c6b0 <__assert_fail@plt+0xa980>
   1c65c:	add	ip, ip, #1
   1c660:	add	r5, r3, #1
   1c664:	b	1c67c <__assert_fail@plt+0xa94c>
   1c668:	ldrb	r4, [r4]
   1c66c:	add	ip, ip, #1
   1c670:	sub	r4, r4, #48	; 0x30
   1c674:	cmp	r4, #9
   1c678:	bhi	1c6b0 <__assert_fail@plt+0xa980>
   1c67c:	cmp	ip, r5
   1c680:	str	ip, [sp, #4]
   1c684:	mov	r4, ip
   1c688:	bne	1c668 <__assert_fail@plt+0xa938>
   1c68c:	rsb	r3, r7, r3
   1c690:	cmp	r3, #0
   1c694:	blt	1c6b0 <__assert_fail@plt+0xa980>
   1c698:	ldr	r2, [sp, #12]
   1c69c:	ldr	r3, [r6]
   1c6a0:	cmp	r2, r3
   1c6a4:	bne	1c6d4 <__assert_fail@plt+0xa9a4>
   1c6a8:	add	sp, sp, #16
   1c6ac:	pop	{r4, r5, r6, r7, r8, pc}
   1c6b0:	movw	r1, #26244	; 0x6684
   1c6b4:	movt	r1, #4
   1c6b8:	mov	r2, r8
   1c6bc:	mov	r3, r7
   1c6c0:	ldr	r0, [r1]
   1c6c4:	movw	r1, #4784	; 0x12b0
   1c6c8:	movt	r1, #3
   1c6cc:	ldr	r0, [r0]
   1c6d0:	bl	22d64 <error@@Base+0x124>
   1c6d4:	bl	11934 <__stack_chk_fail@plt>
   1c6d8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c6dc:	movw	r8, #26864	; 0x68f0
   1c6e0:	movt	r8, #4
   1c6e4:	sub	sp, sp, #12
   1c6e8:	mov	r6, r1
   1c6ec:	mov	r2, #5
   1c6f0:	ldr	r3, [r8]
   1c6f4:	mov	r9, r0
   1c6f8:	movw	r1, #4796	; 0x12bc
   1c6fc:	mov	r0, #0
   1c700:	movt	r1, #3
   1c704:	ldr	r4, [r6]
   1c708:	str	r3, [sp, #4]
   1c70c:	bl	1191c <dcgettext@plt>
   1c710:	mov	r1, r0
   1c714:	mov	r0, r4
   1c718:	bl	1c5fc <__assert_fail@plt+0xa8cc>
   1c71c:	mov	r2, #5
   1c720:	movw	r1, #4848	; 0x12f0
   1c724:	mov	r0, #0
   1c728:	movt	r1, #3
   1c72c:	ldr	r4, [r6, #4]
   1c730:	bl	1191c <dcgettext@plt>
   1c734:	mov	r1, r0
   1c738:	mov	r0, r4
   1c73c:	bl	1c5fc <__assert_fail@plt+0xa8cc>
   1c740:	ldr	r0, [r6]
   1c744:	mov	r1, #0
   1c748:	mov	r2, #10
   1c74c:	bl	11844 <strtol@plt>
   1c750:	subs	r4, r0, #0
   1c754:	ble	1c7fc <__assert_fail@plt+0xaacc>
   1c758:	ldr	r0, [r6, #4]
   1c75c:	mov	r1, #0
   1c760:	mov	r2, #10
   1c764:	bl	11844 <strtol@plt>
   1c768:	rsb	r0, r4, r0
   1c76c:	add	r5, r0, #1
   1c770:	cmp	r5, #0
   1c774:	ble	1c7a4 <__assert_fail@plt+0xaa74>
   1c778:	ldr	r3, [r6, #8]
   1c77c:	add	r6, sp, #8
   1c780:	str	r3, [r6, #-8]!
   1c784:	b	1c790 <__assert_fail@plt+0xaa60>
   1c788:	subs	r4, r4, #1
   1c78c:	beq	1c7d4 <__assert_fail@plt+0xaaa4>
   1c790:	mov	r0, sp
   1c794:	mov	r1, #0
   1c798:	bl	2346c <error@@Base+0x82c>
   1c79c:	subs	r7, r0, #0
   1c7a0:	bne	1c788 <__assert_fail@plt+0xaa58>
   1c7a4:	ldr	r2, [sp, #4]
   1c7a8:	mov	r0, r9
   1c7ac:	ldr	r3, [r8]
   1c7b0:	cmp	r2, r3
   1c7b4:	bne	1c7f8 <__assert_fail@plt+0xaac8>
   1c7b8:	add	sp, sp, #12
   1c7bc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1c7c0:	mov	r0, sp
   1c7c4:	mov	r1, #0
   1c7c8:	bl	2346c <error@@Base+0x82c>
   1c7cc:	cmp	r0, #0
   1c7d0:	beq	1c7dc <__assert_fail@plt+0xaaac>
   1c7d4:	subs	r5, r5, #1
   1c7d8:	bne	1c7c0 <__assert_fail@plt+0xaa90>
   1c7dc:	ldr	r2, [sp]
   1c7e0:	mov	r0, r9
   1c7e4:	mov	r1, r7
   1c7e8:	rsb	r2, r7, r2
   1c7ec:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1c7f0:	mov	r9, r0
   1c7f4:	b	1c7a4 <__assert_fail@plt+0xaa74>
   1c7f8:	bl	11934 <__stack_chk_fail@plt>
   1c7fc:	movw	r3, #26244	; 0x6684
   1c800:	movt	r3, #4
   1c804:	movw	r1, #4900	; 0x1324
   1c808:	mov	r2, r4
   1c80c:	ldr	r3, [r3]
   1c810:	movt	r1, #3
   1c814:	ldr	r0, [r3]
   1c818:	bl	22d64 <error@@Base+0x124>
   1c81c:	push	{r4, r5, r6, r7, lr}
   1c820:	movw	r6, #26864	; 0x68f0
   1c824:	movt	r6, #4
   1c828:	sub	sp, sp, #12
   1c82c:	mov	r5, r1
   1c830:	mov	r2, #5
   1c834:	ldr	r3, [r6]
   1c838:	mov	r7, r0
   1c83c:	movw	r1, #4952	; 0x1358
   1c840:	mov	r0, #0
   1c844:	movt	r1, #3
   1c848:	ldr	r4, [r5]
   1c84c:	str	r3, [sp, #4]
   1c850:	bl	1191c <dcgettext@plt>
   1c854:	mov	r1, r0
   1c858:	mov	r0, r4
   1c85c:	bl	1c5fc <__assert_fail@plt+0xa8cc>
   1c860:	ldr	r0, [r5]
   1c864:	mov	r1, #0
   1c868:	mov	r2, #10
   1c86c:	bl	11844 <strtol@plt>
   1c870:	subs	r4, r0, #0
   1c874:	beq	1c8e8 <__assert_fail@plt+0xabb8>
   1c878:	ldr	r3, [r5, #4]
   1c87c:	add	r5, sp, #8
   1c880:	str	r3, [r5, #-8]!
   1c884:	b	1c890 <__assert_fail@plt+0xab60>
   1c888:	subs	r4, r4, #1
   1c88c:	beq	1c8c8 <__assert_fail@plt+0xab98>
   1c890:	mov	r0, sp
   1c894:	mov	r1, #0
   1c898:	bl	2346c <error@@Base+0x82c>
   1c89c:	cmp	r0, #0
   1c8a0:	bne	1c888 <__assert_fail@plt+0xab58>
   1c8a4:	cmp	r4, #0
   1c8a8:	beq	1c8c8 <__assert_fail@plt+0xab98>
   1c8ac:	ldr	r2, [sp, #4]
   1c8b0:	mov	r0, r7
   1c8b4:	ldr	r3, [r6]
   1c8b8:	cmp	r2, r3
   1c8bc:	bne	1c8e4 <__assert_fail@plt+0xabb4>
   1c8c0:	add	sp, sp, #12
   1c8c4:	pop	{r4, r5, r6, r7, pc}
   1c8c8:	ldr	r2, [sp]
   1c8cc:	mov	r1, r0
   1c8d0:	mov	r0, r7
   1c8d4:	rsb	r2, r1, r2
   1c8d8:	bl	16bc4 <__assert_fail@plt+0x4e94>
   1c8dc:	mov	r7, r0
   1c8e0:	b	1c8ac <__assert_fail@plt+0xab7c>
   1c8e4:	bl	11934 <__stack_chk_fail@plt>
   1c8e8:	movw	r3, #26244	; 0x6684
   1c8ec:	movt	r3, #4
   1c8f0:	movw	r1, #5000	; 0x1388
   1c8f4:	mov	r2, #5
   1c8f8:	ldr	r3, [r3]
   1c8fc:	movt	r1, #3
   1c900:	ldr	r4, [r3]
   1c904:	bl	1191c <dcgettext@plt>
   1c908:	mov	r1, r0
   1c90c:	mov	r0, r4
   1c910:	bl	22d64 <error@@Base+0x124>
   1c914:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c918:	add	fp, sp, #32
   1c91c:	sub	sp, sp, #28
   1c920:	mov	r9, r1
   1c924:	movw	r1, #26864	; 0x68f0
   1c928:	movt	r1, #4
   1c92c:	str	r0, [fp, #-56]	; 0xffffffc8
   1c930:	ldr	r5, [r9]
   1c934:	ldr	r3, [r1]
   1c938:	str	r1, [fp, #-48]	; 0xffffffd0
   1c93c:	ldrb	r4, [r5], #1
   1c940:	str	r3, [fp, #-40]	; 0xffffffd8
   1c944:	cmp	r4, #40	; 0x28
   1c948:	mov	r0, r5
   1c94c:	movne	r6, #125	; 0x7d
   1c950:	moveq	r6, #41	; 0x29
   1c954:	bl	19fb4 <__assert_fail@plt+0x8284>
   1c958:	subs	r7, r0, #0
   1c95c:	beq	1cb1c <__assert_fail@plt+0xadec>
   1c960:	ldrb	r0, [r7, #4]
   1c964:	add	r0, r5, r0
   1c968:	bl	23230 <error@@Base+0x5f0>
   1c96c:	ldrb	r2, [r0]
   1c970:	mov	r3, r0
   1c974:	cmp	r2, #0
   1c978:	beq	1cae4 <__assert_fail@plt+0xadb4>
   1c97c:	mov	r5, r0
   1c980:	mov	r1, #0
   1c984:	mov	r0, #1
   1c988:	b	1c998 <__assert_fail@plt+0xac68>
   1c98c:	ldrb	r2, [r5, #1]!
   1c990:	cmp	r2, #0
   1c994:	beq	1cae4 <__assert_fail@plt+0xadb4>
   1c998:	cmp	r2, #44	; 0x2c
   1c99c:	addeq	r0, r0, #1
   1c9a0:	beq	1c98c <__assert_fail@plt+0xac5c>
   1c9a4:	cmp	r4, r2
   1c9a8:	addeq	r1, r1, #1
   1c9ac:	beq	1c98c <__assert_fail@plt+0xac5c>
   1c9b0:	cmp	r6, r2
   1c9b4:	bne	1c98c <__assert_fail@plt+0xac5c>
   1c9b8:	subs	r1, r1, #1
   1c9bc:	bcs	1c98c <__assert_fail@plt+0xac5c>
   1c9c0:	str	r5, [r9]
   1c9c4:	lsl	r2, r0, #2
   1c9c8:	ldrb	sl, [r7, #7]
   1c9cc:	add	r2, r2, #22
   1c9d0:	bic	r2, r2, #7
   1c9d4:	cmp	sl, #0
   1c9d8:	sub	sp, sp, r2
   1c9dc:	str	sp, [fp, #-52]	; 0xffffffcc
   1c9e0:	beq	1cb48 <__assert_fail@plt+0xae18>
   1c9e4:	cmp	r3, r5
   1c9e8:	bhi	1cc08 <__assert_fail@plt+0xaed8>
   1c9ec:	mov	r9, sp
   1c9f0:	mov	sl, #0
   1c9f4:	ldrb	r2, [r7, #6]
   1c9f8:	add	sl, sl, #1
   1c9fc:	cmp	r2, sl
   1ca00:	beq	1ca4c <__assert_fail@plt+0xad1c>
   1ca04:	cmp	r5, r3
   1ca08:	bls	1ca4c <__assert_fail@plt+0xad1c>
   1ca0c:	mov	r2, r3
   1ca10:	mov	lr, #0
   1ca14:	b	1ca28 <__assert_fail@plt+0xacf8>
   1ca18:	cmp	ip, #44	; 0x2c
   1ca1c:	beq	1cb3c <__assert_fail@plt+0xae0c>
   1ca20:	cmp	r2, r5
   1ca24:	beq	1ca4c <__assert_fail@plt+0xad1c>
   1ca28:	mov	r8, r2
   1ca2c:	ldrb	ip, [r2], #1
   1ca30:	cmp	r4, ip
   1ca34:	addeq	lr, lr, #1
   1ca38:	beq	1ca20 <__assert_fail@plt+0xacf0>
   1ca3c:	cmp	r6, ip
   1ca40:	bne	1ca18 <__assert_fail@plt+0xace8>
   1ca44:	subs	lr, lr, #1
   1ca48:	bcs	1ca20 <__assert_fail@plt+0xacf0>
   1ca4c:	mov	r8, r5
   1ca50:	mov	r0, r3
   1ca54:	mov	r1, r8
   1ca58:	bl	16c40 <__assert_fail@plt+0x4f10>
   1ca5c:	add	r3, r8, #1
   1ca60:	cmp	r5, r3
   1ca64:	str	r0, [r9], #4
   1ca68:	mov	ip, r9
   1ca6c:	bcs	1c9f4 <__assert_fail@plt+0xacc4>
   1ca70:	mov	r9, #0
   1ca74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1ca78:	mov	r3, r7
   1ca7c:	mov	lr, #0
   1ca80:	mov	r1, sl
   1ca84:	ldr	r0, [r2]
   1ca88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ca8c:	str	lr, [ip]
   1ca90:	bl	1b228 <__assert_fail@plt+0x94f8>
   1ca94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ca98:	str	r0, [r3]
   1ca9c:	ldrb	r3, [r7, #7]
   1caa0:	cmp	r3, #0
   1caa4:	beq	1cacc <__assert_fail@plt+0xad9c>
   1caa8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1caac:	ldr	r0, [r1]
   1cab0:	cmp	r0, #0
   1cab4:	beq	1cacc <__assert_fail@plt+0xad9c>
   1cab8:	mov	r4, r1
   1cabc:	bl	1188c <free@plt>
   1cac0:	ldr	r0, [r4, #4]!
   1cac4:	cmp	r0, #0
   1cac8:	bne	1cabc <__assert_fail@plt+0xad8c>
   1cacc:	cmp	r9, #0
   1cad0:	beq	1cadc <__assert_fail@plt+0xadac>
   1cad4:	mov	r0, r9
   1cad8:	bl	1188c <free@plt>
   1cadc:	mov	r0, #1
   1cae0:	b	1cb20 <__assert_fail@plt+0xadf0>
   1cae4:	movw	r3, #26244	; 0x6684
   1cae8:	movt	r3, #4
   1caec:	mov	r2, #5
   1caf0:	movw	r1, #5060	; 0x13c4
   1caf4:	ldr	r3, [r3]
   1caf8:	movt	r1, #3
   1cafc:	mov	r0, #0
   1cb00:	ldr	r4, [r3]
   1cb04:	bl	1191c <dcgettext@plt>
   1cb08:	ldr	r2, [r7]
   1cb0c:	mov	r3, r6
   1cb10:	mov	r1, r0
   1cb14:	mov	r0, r4
   1cb18:	bl	22d64 <error@@Base+0x124>
   1cb1c:	mov	r0, r7
   1cb20:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1cb24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cb28:	ldr	r3, [r1]
   1cb2c:	cmp	r2, r3
   1cb30:	bne	1cc20 <__assert_fail@plt+0xaef0>
   1cb34:	sub	sp, fp, #32
   1cb38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cb3c:	cmp	lr, #0
   1cb40:	bne	1ca20 <__assert_fail@plt+0xacf0>
   1cb44:	b	1ca50 <__assert_fail@plt+0xad20>
   1cb48:	rsb	r5, r3, r5
   1cb4c:	str	r3, [fp, #-60]	; 0xffffffc4
   1cb50:	add	r0, r5, #1
   1cb54:	bl	22f44 <error@@Base+0x304>
   1cb58:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cb5c:	mov	r2, r5
   1cb60:	mov	r1, r3
   1cb64:	mov	r9, r0
   1cb68:	bl	118c8 <memcpy@plt>
   1cb6c:	adds	r1, r9, r5
   1cb70:	strb	sl, [r9, r5]
   1cb74:	bcs	1cc18 <__assert_fail@plt+0xaee8>
   1cb78:	ldr	lr, [fp, #-52]	; 0xffffffcc
   1cb7c:	mov	r8, sl
   1cb80:	mov	r0, r9
   1cb84:	ldrb	r3, [r7, #6]
   1cb88:	add	sl, sl, #1
   1cb8c:	cmp	r3, sl
   1cb90:	beq	1cbdc <__assert_fail@plt+0xaeac>
   1cb94:	cmp	r1, r0
   1cb98:	bls	1cbdc <__assert_fail@plt+0xaeac>
   1cb9c:	mov	r3, r0
   1cba0:	mov	ip, #0
   1cba4:	b	1cbb8 <__assert_fail@plt+0xae88>
   1cba8:	cmp	r2, #44	; 0x2c
   1cbac:	beq	1cbfc <__assert_fail@plt+0xaecc>
   1cbb0:	cmp	r3, r1
   1cbb4:	beq	1cbdc <__assert_fail@plt+0xaeac>
   1cbb8:	mov	r5, r3
   1cbbc:	ldrb	r2, [r3], #1
   1cbc0:	cmp	r4, r2
   1cbc4:	addeq	ip, ip, #1
   1cbc8:	beq	1cbb0 <__assert_fail@plt+0xae80>
   1cbcc:	cmp	r6, r2
   1cbd0:	bne	1cba8 <__assert_fail@plt+0xae78>
   1cbd4:	subs	ip, ip, #1
   1cbd8:	bcs	1cbb0 <__assert_fail@plt+0xae80>
   1cbdc:	mov	r5, r1
   1cbe0:	str	r0, [lr], #4
   1cbe4:	mov	r0, r5
   1cbe8:	strb	r8, [r0], #1
   1cbec:	cmp	r1, r0
   1cbf0:	mov	ip, lr
   1cbf4:	bcs	1cb84 <__assert_fail@plt+0xae54>
   1cbf8:	b	1ca74 <__assert_fail@plt+0xad44>
   1cbfc:	cmp	ip, #0
   1cc00:	bne	1cbb0 <__assert_fail@plt+0xae80>
   1cc04:	b	1cbe0 <__assert_fail@plt+0xaeb0>
   1cc08:	mov	sl, #0
   1cc0c:	ldr	ip, [fp, #-52]	; 0xffffffcc
   1cc10:	mov	r9, sl
   1cc14:	b	1ca74 <__assert_fail@plt+0xad44>
   1cc18:	ldr	ip, [fp, #-52]	; 0xffffffcc
   1cc1c:	b	1ca74 <__assert_fail@plt+0xad44>
   1cc20:	bl	11934 <__stack_chk_fail@plt>
   1cc24:	push	{r4, lr}
   1cc28:	movw	r4, #27092	; 0x69d4
   1cc2c:	sub	sp, sp, #8
   1cc30:	movt	r4, #4
   1cc34:	mov	r1, #70	; 0x46
   1cc38:	movw	r3, #39332	; 0x99a4
   1cc3c:	mov	r0, r4
   1cc40:	movt	r3, #1
   1cc44:	movw	r2, #38632	; 0x96e8
   1cc48:	str	r3, [sp]
   1cc4c:	movt	r2, #1
   1cc50:	movw	r3, #38792	; 0x9788
   1cc54:	movt	r3, #1
   1cc58:	bl	2e838 <error@@Base+0xbbf8>
   1cc5c:	mov	r0, r4
   1cc60:	movw	r1, #26248	; 0x6688
   1cc64:	mov	r2, #35	; 0x23
   1cc68:	movt	r1, #4
   1cc6c:	mov	r3, #12
   1cc70:	add	sp, sp, #8
   1cc74:	pop	{r4, lr}
   1cc78:	b	2eb80 <error@@Base+0xbf40>
   1cc7c:	ldr	r2, [r0, #8]
   1cc80:	ldr	r3, [r1, #8]
   1cc84:	subs	r3, r2, r3
   1cc88:	ldreq	r0, [r0, #12]
   1cc8c:	ldreq	r3, [r1, #12]
   1cc90:	rsbeq	r0, r3, r0
   1cc94:	movne	r0, r3
   1cc98:	bx	lr
   1cc9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cca0:	add	fp, sp, #32
   1cca4:	sub	sp, sp, #4224	; 0x1080
   1cca8:	sub	r4, fp, #8192	; 0x2000
   1ccac:	sub	sp, sp, #36	; 0x24
   1ccb0:	movw	r5, #26864	; 0x68f0
   1ccb4:	movt	r5, #4
   1ccb8:	mov	ip, r4
   1ccbc:	str	r5, [r4, #3936]	; 0xf60
   1ccc0:	subs	r4, r1, #0
   1ccc4:	ldr	r1, [r5]
   1ccc8:	str	r0, [ip, #4044]	; 0xfcc
   1cccc:	mov	r5, ip
   1ccd0:	str	r2, [ip, #4032]	; 0xfc0
   1ccd4:	str	r3, [ip, #3940]	; 0xf64
   1ccd8:	str	r1, [fp, #-40]	; 0xffffffd8
   1ccdc:	beq	1d5ac <__assert_fail@plt+0xb87c>
   1cce0:	mov	r1, #40	; 0x28
   1cce4:	ldr	r0, [r0]
   1cce8:	movw	r3, #29716	; 0x7414
   1ccec:	movt	r3, #4
   1ccf0:	str	r3, [ip, #3984]	; 0xf90
   1ccf4:	bl	11b68 <strchr@plt>
   1ccf8:	mov	r7, #0
   1ccfc:	str	r0, [r5, #4020]	; 0xfb4
   1cd00:	bl	11b5c <strlen@plt>
   1cd04:	ldr	lr, [r5, #3984]	; 0xf90
   1cd08:	str	r7, [r5, #3988]	; 0xf94
   1cd0c:	str	r0, [r5, #3960]	; 0xf78
   1cd10:	ldr	r0, [lr]
   1cd14:	lsl	r0, r0, #4
   1cd18:	bl	22f44 <error@@Base+0x304>
   1cd1c:	movw	r1, #29728	; 0x7420
   1cd20:	movw	r2, #29712	; 0x7410
   1cd24:	movt	r1, #4
   1cd28:	movt	r2, #4
   1cd2c:	movw	r3, #29708	; 0x740c
   1cd30:	ldr	r1, [r1]
   1cd34:	movt	r3, #4
   1cd38:	ldr	r4, [r5, #3960]	; 0xf78
   1cd3c:	sub	ip, fp, #8192	; 0x2000
   1cd40:	str	r0, [r5, #3992]	; 0xf98
   1cd44:	ldr	r0, [r2]
   1cd48:	ldr	r2, [r3]
   1cd4c:	mul	r3, r0, r1
   1cd50:	add	r2, r4, r2
   1cd54:	add	r2, r2, #14
   1cd58:	bic	r2, r2, #7
   1cd5c:	sub	sp, sp, r2
   1cd60:	add	r5, sp, #16
   1cd64:	str	r5, [ip, #4016]	; 0xfb0
   1cd68:	add	r0, r3, r3, lsl #2
   1cd6c:	lsl	r0, r0, #2
   1cd70:	bl	22f44 <error@@Base+0x304>
   1cd74:	sub	lr, fp, #8192	; 0x2000
   1cd78:	str	r0, [lr, #3972]	; 0xf84
   1cd7c:	movw	r3, #29704	; 0x7408
   1cd80:	movt	r3, #4
   1cd84:	sub	r4, fp, #8192	; 0x2000
   1cd88:	sub	ip, fp, #8192	; 0x2000
   1cd8c:	ldr	r9, [r3]
   1cd90:	ldr	r4, [r4, #4020]	; 0xfb4
   1cd94:	cmp	r9, #0
   1cd98:	rsb	r2, r4, r7
   1cd9c:	add	r5, r2, #1
   1cda0:	str	r5, [ip, #4000]	; 0xfa0
   1cda4:	beq	1d794 <__assert_fail@plt+0xba64>
   1cda8:	mov	r0, #0
   1cdac:	movw	r2, #27308	; 0x6aac
   1cdb0:	movw	r4, #26888	; 0x6908
   1cdb4:	movt	r2, #4
   1cdb8:	movt	r4, #4
   1cdbc:	str	r0, [ip, #4048]	; 0xfd0
   1cdc0:	str	r2, [ip, #4040]	; 0xfc8
   1cdc4:	str	r4, [ip, #4036]	; 0xfc4
   1cdc8:	str	r0, [ip, #4012]	; 0xfac
   1cdcc:	str	r7, [ip, #4008]	; 0xfa8
   1cdd0:	ldr	r3, [r9, #16]
   1cdd4:	cmp	r3, #0
   1cdd8:	beq	1cde8 <__assert_fail@plt+0xb0b8>
   1cddc:	ldr	r3, [r9, #20]
   1cde0:	cmp	r3, #0
   1cde4:	beq	1d038 <__assert_fail@plt+0xb308>
   1cde8:	ldrb	r5, [r9, #27]
   1cdec:	cmp	r5, #0
   1cdf0:	bne	1d54c <__assert_fail@plt+0xb81c>
   1cdf4:	ldrh	r8, [r9, #24]
   1cdf8:	cmp	r8, #0
   1cdfc:	beq	1d038 <__assert_fail@plt+0xb308>
   1ce00:	sub	r4, fp, #8192	; 0x2000
   1ce04:	ldr	ip, [r4, #3960]	; 0xf78
   1ce08:	add	r4, ip, #1
   1ce0c:	sub	ip, fp, #8192	; 0x2000
   1ce10:	ldr	r0, [ip, #3988]	; 0xf94
   1ce14:	str	r4, [ip, #4024]	; 0xfb8
   1ce18:	add	lr, r0, #1
   1ce1c:	str	lr, [ip, #4028]	; 0xfbc
   1ce20:	b	1ce90 <__assert_fail@plt+0xb160>
   1ce24:	sub	r0, fp, #8192	; 0x2000
   1ce28:	ldr	r0, [r0, #4000]	; 0xfa0
   1ce2c:	cmp	r0, r6
   1ce30:	bhi	1ce84 <__assert_fail@plt+0xb154>
   1ce34:	sub	r3, fp, #8192	; 0x2000
   1ce38:	add	r4, r4, r0
   1ce3c:	rsb	r6, r0, r6
   1ce40:	ldr	r3, [r3, #4028]	; 0xfbc
   1ce44:	cmp	r4, r3
   1ce48:	bls	1ce70 <__assert_fail@plt+0xb140>
   1ce4c:	sub	ip, fp, #8192	; 0x2000
   1ce50:	mov	r0, r7
   1ce54:	mov	r1, r3
   1ce58:	ldr	ip, [ip, #4008]	; 0xfa8
   1ce5c:	rsb	r2, ip, r4
   1ce60:	sub	r2, r2, #1
   1ce64:	bl	11cf4 <strncmp@plt>
   1ce68:	cmp	r0, #0
   1ce6c:	bne	1ce84 <__assert_fail@plt+0xb154>
   1ce70:	ldrb	r0, [sl]
   1ce74:	mov	r2, #1
   1ce78:	ldrb	r1, [r4, r6]
   1ce7c:	cmp	r1, r0
   1ce80:	beq	1cf68 <__assert_fail@plt+0xb238>
   1ce84:	add	r5, r5, #1
   1ce88:	cmp	r8, r5
   1ce8c:	bls	1d038 <__assert_fail@plt+0xb308>
   1ce90:	sub	r1, fp, #8192	; 0x2000
   1ce94:	ldr	r0, [r9, #4]
   1ce98:	lsl	r2, r5, #2
   1ce9c:	ldr	r1, [r1, #3940]	; 0xf64
   1cea0:	ldr	r7, [r0, r5, lsl #2]
   1cea4:	cmp	r1, #0
   1cea8:	ldr	r1, [r9, #12]
   1ceac:	ldr	sl, [r1, r5, lsl #2]
   1ceb0:	beq	1cecc <__assert_fail@plt+0xb19c>
   1ceb4:	ldrb	r1, [r7, #1]
   1ceb8:	cmp	r1, #0
   1cebc:	bne	1cecc <__assert_fail@plt+0xb19c>
   1cec0:	ldrb	r1, [r9, #26]
   1cec4:	cmp	r1, #0
   1cec8:	beq	1ce84 <__assert_fail@plt+0xb154>
   1cecc:	ldr	r1, [r9, #8]
   1ced0:	ldr	r6, [r1, r2]
   1ced4:	sub	r2, fp, #8192	; 0x2000
   1ced8:	ldr	r2, [r2, #3960]	; 0xf78
   1cedc:	cmp	r6, r2
   1cee0:	bhi	1ce84 <__assert_fail@plt+0xb154>
   1cee4:	sub	r3, fp, #8192	; 0x2000
   1cee8:	sub	ip, fp, #8192	; 0x2000
   1ceec:	sub	lr, fp, #8192	; 0x2000
   1cef0:	rsb	r4, r7, sl
   1cef4:	ldr	r3, [r3, #3988]	; 0xf94
   1cef8:	sub	r4, r4, #1
   1cefc:	ldr	ip, [ip, #4024]	; 0xfb8
   1cf00:	ldr	lr, [lr, #4020]	; 0xfb4
   1cf04:	cmp	r3, #0
   1cf08:	rsb	r6, r6, ip
   1cf0c:	add	r4, lr, r4
   1cf10:	beq	1cf28 <__assert_fail@plt+0xb1f8>
   1cf14:	mov	r0, r7
   1cf18:	mov	r1, #47	; 0x2f
   1cf1c:	bl	11b68 <strchr@plt>
   1cf20:	cmp	r0, #0
   1cf24:	beq	1ce24 <__assert_fail@plt+0xb0f4>
   1cf28:	sub	r2, fp, #8192	; 0x2000
   1cf2c:	ldr	r2, [r2, #4020]	; 0xfb4
   1cf30:	cmp	r4, r2
   1cf34:	bls	1cf54 <__assert_fail@plt+0xb224>
   1cf38:	sub	r2, fp, #8192	; 0x2000
   1cf3c:	mov	r0, r7
   1cf40:	ldr	r1, [r2, #4020]	; 0xfb4
   1cf44:	rsb	r2, r1, r4
   1cf48:	bl	11cf4 <strncmp@plt>
   1cf4c:	cmp	r0, #0
   1cf50:	bne	1ce84 <__assert_fail@plt+0xb154>
   1cf54:	ldrb	r0, [sl]
   1cf58:	mov	r2, #0
   1cf5c:	ldrb	r1, [r4, r6]
   1cf60:	cmp	r1, r0
   1cf64:	bne	1ce84 <__assert_fail@plt+0xb154>
   1cf68:	cmp	r1, #0
   1cf6c:	beq	1cfc0 <__assert_fail@plt+0xb290>
   1cf70:	add	r1, r6, #1
   1cf74:	add	r0, sl, #1
   1cf78:	add	lr, r4, r1
   1cf7c:	cmp	lr, r0
   1cf80:	beq	1cfc0 <__assert_fail@plt+0xb290>
   1cf84:	ldrb	r1, [r4, r1]
   1cf88:	ldrb	r0, [sl, #1]
   1cf8c:	cmp	r1, r0
   1cf90:	bne	1ce84 <__assert_fail@plt+0xb154>
   1cf94:	cmp	r1, #0
   1cf98:	beq	1cfc0 <__assert_fail@plt+0xb290>
   1cf9c:	add	r1, r6, #2
   1cfa0:	add	r0, sl, #2
   1cfa4:	add	r1, r4, r1
   1cfa8:	sub	r4, fp, #8192	; 0x2000
   1cfac:	str	r2, [r4, #3916]	; 0xf4c
   1cfb0:	bl	1182c <strcmp@plt>
   1cfb4:	ldr	r2, [r4, #3916]	; 0xf4c
   1cfb8:	cmp	r0, #0
   1cfbc:	bne	1ce84 <__assert_fail@plt+0xb154>
   1cfc0:	ldrb	r0, [r7, #1]
   1cfc4:	sub	r3, fp, #8192	; 0x2000
   1cfc8:	ldr	r1, [r9, #16]
   1cfcc:	cmp	r0, #0
   1cfd0:	ldr	lr, [r3, #4048]	; 0xfd0
   1cfd4:	movne	lr, #1
   1cfd8:	cmp	r1, #0
   1cfdc:	str	lr, [r3, #4048]	; 0xfd0
   1cfe0:	beq	1e350 <__assert_fail@plt+0xc620>
   1cfe4:	sub	r4, fp, #8192	; 0x2000
   1cfe8:	sub	lr, fp, #8192	; 0x2000
   1cfec:	cmp	r2, #0
   1cff0:	ldr	ip, [r4, #4012]	; 0xfac
   1cff4:	ldr	r1, [lr, #4000]	; 0xfa0
   1cff8:	moveq	r1, #0
   1cffc:	ldr	r3, [lr, #3972]	; 0xf84
   1d000:	add	lr, ip, #1
   1d004:	add	r0, ip, ip, lsl #2
   1d008:	add	r6, r1, r6
   1d00c:	add	r1, r3, r0, lsl #2
   1d010:	str	r9, [r3, r0, lsl #2]
   1d014:	sub	r0, fp, #8192	; 0x2000
   1d018:	strb	r2, [r1, #16]
   1d01c:	ldrh	r8, [r9, #24]
   1d020:	stmib	r1, {r5, r6}
   1d024:	add	r5, r5, #1
   1d028:	cmp	r8, r5
   1d02c:	str	ip, [r1, #12]
   1d030:	str	lr, [r0, #4012]	; 0xfac
   1d034:	bhi	1ce90 <__assert_fail@plt+0xb160>
   1d038:	ldr	r9, [r9]
   1d03c:	cmp	r9, #0
   1d040:	bne	1cdd0 <__assert_fail@plt+0xb0a0>
   1d044:	sub	r0, fp, #8192	; 0x2000
   1d048:	ldr	r0, [r0, #4012]	; 0xfac
   1d04c:	cmp	r0, #0
   1d050:	beq	1dd0c <__assert_fail@plt+0xbfdc>
   1d054:	cmp	r0, #1
   1d058:	bls	1d078 <__assert_fail@plt+0xb348>
   1d05c:	sub	r2, fp, #8192	; 0x2000
   1d060:	movw	r3, #52348	; 0xcc7c
   1d064:	movt	r3, #1
   1d068:	ldr	r0, [r2, #3972]	; 0xf84
   1d06c:	ldr	r1, [r2, #4012]	; 0xfac
   1d070:	mov	r2, #20
   1d074:	bl	11cc4 <qsort@plt>
   1d078:	sub	r5, fp, #8192	; 0x2000
   1d07c:	ldr	r5, [r5, #4048]	; 0xfd0
   1d080:	cmp	r5, #0
   1d084:	bne	1dc78 <__assert_fail@plt+0xbf48>
   1d088:	sub	ip, fp, #8192	; 0x2000
   1d08c:	movw	r7, #27308	; 0x6aac
   1d090:	movt	r7, #4
   1d094:	mov	lr, #0
   1d098:	mov	r1, ip
   1d09c:	mov	r3, ip
   1d0a0:	mov	r8, r7
   1d0a4:	str	lr, [ip, #3976]	; 0xf88
   1d0a8:	str	lr, [ip, #3956]	; 0xf74
   1d0ac:	movw	r0, #26888	; 0x6908
   1d0b0:	movw	ip, #29716	; 0x7414
   1d0b4:	movt	r0, #4
   1d0b8:	movt	ip, #4
   1d0bc:	str	lr, [r1, #3932]	; 0xf5c
   1d0c0:	str	lr, [r3, #4008]	; 0xfa8
   1d0c4:	str	ip, [r1, #3924]	; 0xf54
   1d0c8:	str	r0, [r1, #4040]	; 0xfc8
   1d0cc:	sub	r4, fp, #8192	; 0x2000
   1d0d0:	mov	r0, #0
   1d0d4:	ldr	r5, [r4, #3972]	; 0xf84
   1d0d8:	ldr	sl, [r4, #3992]	; 0xf98
   1d0dc:	str	r0, [r4, #3944]	; 0xf68
   1d0e0:	str	r5, [r4, #3996]	; 0xf9c
   1d0e4:	sub	r1, fp, #8192	; 0x2000
   1d0e8:	ldr	r1, [r1, #3996]	; 0xf9c
   1d0ec:	ldr	r2, [r1]
   1d0f0:	sub	r1, fp, #8192	; 0x2000
   1d0f4:	cmp	r2, #0
   1d0f8:	str	r2, [r1, #4024]	; 0xfb8
   1d0fc:	beq	1d74c <__assert_fail@plt+0xba1c>
   1d100:	ldr	r4, [r1, #3976]	; 0xf88
   1d104:	cmp	r4, #0
   1d108:	beq	1d118 <__assert_fail@plt+0xb3e8>
   1d10c:	ldrb	r3, [r2, #26]
   1d110:	cmp	r3, #0
   1d114:	bne	1d74c <__assert_fail@plt+0xba1c>
   1d118:	sub	ip, fp, #8192	; 0x2000
   1d11c:	sub	r0, fp, #8192	; 0x2000
   1d120:	sub	r5, fp, #8192	; 0x2000
   1d124:	sub	lr, fp, #8192	; 0x2000
   1d128:	ldr	r0, [r0, #4024]	; 0xfb8
   1d12c:	ldr	ip, [ip, #3996]	; 0xf9c
   1d130:	ldr	lr, [lr, #3960]	; 0xf78
   1d134:	mov	r2, r0
   1d138:	ldr	r3, [ip, #4]
   1d13c:	add	r1, lr, #1
   1d140:	ldr	ip, [r0, #12]
   1d144:	ldr	r0, [r0, #4]
   1d148:	ldr	r2, [r2, #8]
   1d14c:	ldr	ip, [ip, r3, lsl #2]
   1d150:	ldr	r0, [r0, r3, lsl #2]
   1d154:	ldr	r2, [r2, r3, lsl #2]
   1d158:	rsb	r3, r0, ip
   1d15c:	ldr	ip, [r5, #3996]	; 0xf9c
   1d160:	sub	r3, r3, #1
   1d164:	rsb	lr, r2, r1
   1d168:	ldrb	r5, [ip, #16]
   1d16c:	sub	ip, fp, #8192	; 0x2000
   1d170:	cmp	r5, #0
   1d174:	ldr	r4, [ip, #4020]	; 0xfb4
   1d178:	str	r5, [ip, #3952]	; 0xf70
   1d17c:	mov	r0, ip
   1d180:	add	r2, r4, r3
   1d184:	str	lr, [ip, #4028]	; 0xfbc
   1d188:	mov	r4, ip
   1d18c:	str	r2, [ip, #3968]	; 0xf80
   1d190:	beq	1dbc0 <__assert_fail@plt+0xbe90>
   1d194:	ldr	r5, [ip, #3956]	; 0xf74
   1d198:	mov	lr, ip
   1d19c:	ldr	ip, [ip, #4000]	; 0xfa0
   1d1a0:	ldr	r1, [r4, #4000]	; 0xfa0
   1d1a4:	cmp	r5, #0
   1d1a8:	add	ip, r2, ip
   1d1ac:	str	ip, [r0, #3968]	; 0xf80
   1d1b0:	ldr	r0, [r0, #4028]	; 0xfbc
   1d1b4:	rsb	r0, r1, r0
   1d1b8:	str	r0, [r4, #4028]	; 0xfbc
   1d1bc:	beq	1df50 <__assert_fail@plt+0xc220>
   1d1c0:	sub	r1, fp, #8192	; 0x2000
   1d1c4:	ldr	r2, [r1, #3956]	; 0xf74
   1d1c8:	str	r2, [r1, #3928]	; 0xf58
   1d1cc:	ldr	r3, [r8]
   1d1d0:	tst	r3, #8
   1d1d4:	bne	1dbd8 <__assert_fail@plt+0xbea8>
   1d1d8:	sub	lr, fp, #8192	; 0x2000
   1d1dc:	sub	r4, fp, #8192	; 0x2000
   1d1e0:	sub	r0, fp, #4096	; 0x1000
   1d1e4:	mov	r3, #4096	; 0x1000
   1d1e8:	ldr	r1, [lr, #3968]	; 0xf80
   1d1ec:	sub	r0, r0, #40	; 0x28
   1d1f0:	ldr	r2, [lr, #4028]	; 0xfbc
   1d1f4:	bl	11928 <__strncpy_chk@plt>
   1d1f8:	ldr	r5, [r4, #4024]	; 0xfb8
   1d1fc:	sub	r2, fp, #4096	; 0x1000
   1d200:	ldr	r1, [r4, #4028]	; 0xfbc
   1d204:	sub	r2, r2, #40	; 0x28
   1d208:	mov	r3, #0
   1d20c:	strb	r3, [r2, r1]
   1d210:	ldr	ip, [r5, #16]
   1d214:	mov	r5, r4
   1d218:	cmp	ip, r3
   1d21c:	str	ip, [r4, #4048]	; 0xfd0
   1d220:	beq	1dd78 <__assert_fail@plt+0xc048>
   1d224:	ldr	r0, [r4, #4044]	; 0xfcc
   1d228:	mov	r3, #1
   1d22c:	str	r2, [r0, #24]
   1d230:	sub	r0, fp, #8192	; 0x2000
   1d234:	ldr	r2, [r4, #4024]	; 0xfb8
   1d238:	ldr	r1, [r0, #4016]	; 0xfb0
   1d23c:	ldr	r0, [r0, #4000]	; 0xfa0
   1d240:	strb	r3, [r2, #27]
   1d244:	mov	r3, r5
   1d248:	ldr	r4, [ip, #4]
   1d24c:	sub	r2, fp, #8192	; 0x2000
   1d250:	cmp	r4, #0
   1d254:	ldr	sl, [r2, #3992]	; 0xf98
   1d258:	str	r4, [r5, #4036]	; 0xfc4
   1d25c:	mov	r4, #0
   1d260:	ldreq	r3, [ip, #12]
   1d264:	moveq	lr, r5
   1d268:	ldr	r5, [r2, #3952]	; 0xf70
   1d26c:	str	r4, [r2, #3964]	; 0xf7c
   1d270:	ldreq	r3, [r3]
   1d274:	str	r4, [r2, #3980]	; 0xf8c
   1d278:	streq	r3, [lr, #4036]	; 0xfc4
   1d27c:	cmp	r5, r4
   1d280:	add	r3, r1, r0
   1d284:	mov	lr, r2
   1d288:	mov	r5, r2
   1d28c:	str	r4, [lr, #3948]	; 0xf6c
   1d290:	movne	r1, r3
   1d294:	str	r1, [r2, #3920]	; 0xf50
   1d298:	sub	r2, fp, #8192	; 0x2000
   1d29c:	ldr	r2, [r2, #4036]	; 0xfc4
   1d2a0:	cmp	r2, #0
   1d2a4:	beq	1d50c <__assert_fail@plt+0xb7dc>
   1d2a8:	sub	r4, fp, #8192	; 0x2000
   1d2ac:	ldr	r4, [r4, #4048]	; 0xfd0
   1d2b0:	ldrb	r3, [r4, #17]
   1d2b4:	tst	r3, #4
   1d2b8:	bne	1d7d0 <__assert_fail@plt+0xbaa0>
   1d2bc:	sub	ip, fp, #8192	; 0x2000
   1d2c0:	mov	r1, #37	; 0x25
   1d2c4:	ldr	r0, [ip, #4036]	; 0xfc4
   1d2c8:	bl	11b68 <strchr@plt>
   1d2cc:	movw	r3, #61432	; 0xeff8
   1d2d0:	sub	lr, fp, #36	; 0x24
   1d2d4:	movt	r3, #65535	; 0xffff
   1d2d8:	cmp	r0, #0
   1d2dc:	mov	r5, r0
   1d2e0:	str	r0, [lr, r3]
   1d2e4:	beq	1db20 <__assert_fail@plt+0xbdf0>
   1d2e8:	sub	r3, fp, #8192	; 0x2000
   1d2ec:	ldr	r3, [r3, #3952]	; 0xf70
   1d2f0:	cmp	r3, #0
   1d2f4:	bne	1d9a8 <__assert_fail@plt+0xbc78>
   1d2f8:	sub	r3, fp, #8192	; 0x2000
   1d2fc:	sub	r0, fp, #8192	; 0x2000
   1d300:	ldr	ip, [r3, #3920]	; 0xf50
   1d304:	ldr	r0, [r0, #4036]	; 0xfc4
   1d308:	rsb	r2, r0, r5
   1d30c:	mov	r1, r0
   1d310:	mov	r0, ip
   1d314:	add	r4, ip, r2
   1d318:	bl	118c8 <memcpy@plt>
   1d31c:	sub	r3, fp, #8192	; 0x2000
   1d320:	sub	r1, fp, #4096	; 0x1000
   1d324:	sub	r1, r1, #40	; 0x28
   1d328:	mov	r0, r4
   1d32c:	ldr	r2, [r3, #4028]	; 0xfbc
   1d330:	bl	118c8 <memcpy@plt>
   1d334:	sub	ip, fp, #8192	; 0x2000
   1d338:	add	r1, r5, #1
   1d33c:	ldr	ip, [ip, #4028]	; 0xfbc
   1d340:	add	r0, r4, ip
   1d344:	bl	11a30 <strcpy@plt>
   1d348:	sub	r4, fp, #8192	; 0x2000
   1d34c:	mov	r3, #0
   1d350:	str	r3, [sp]
   1d354:	movw	ip, #61432	; 0xeff8
   1d358:	ldr	r5, [r4, #4016]	; 0xfb0
   1d35c:	movt	ip, #65535	; 0xffff
   1d360:	sub	lr, fp, #4096	; 0x1000
   1d364:	sub	r4, fp, #36	; 0x24
   1d368:	sub	lr, lr, #36	; 0x24
   1d36c:	mov	r2, r3
   1d370:	sub	r0, lr, #8
   1d374:	str	r5, [r4, ip]
   1d378:	mov	r1, #20
   1d37c:	bl	256a0 <error@@Base+0x2a60>
   1d380:	sub	lr, fp, #8192	; 0x2000
   1d384:	subs	ip, r0, #0
   1d388:	str	ip, [lr, #4004]	; 0xfa4
   1d38c:	beq	1db10 <__assert_fail@plt+0xbde0>
   1d390:	mov	r3, ip
   1d394:	ldr	r1, [lr, #3980]	; 0xf8c
   1d398:	ldr	ip, [lr, #4048]	; 0xfd0
   1d39c:	ldrb	r2, [r3, #17]
   1d3a0:	add	r1, r1, #1
   1d3a4:	ldrb	r0, [ip, #17]
   1d3a8:	bfi	r2, r0, #0, #1
   1d3ac:	strb	r2, [r3, #17]
   1d3b0:	ldr	r3, [r3]
   1d3b4:	cmp	r3, #0
   1d3b8:	bne	1d39c <__assert_fail@plt+0xb66c>
   1d3bc:	sub	r4, fp, #8192	; 0x2000
   1d3c0:	mov	r2, r4
   1d3c4:	str	r1, [r4, #3980]	; 0xf8c
   1d3c8:	str	r3, [r4, #4036]	; 0xfc4
   1d3cc:	sub	r4, fp, #8192	; 0x2000
   1d3d0:	sub	r5, fp, #8192	; 0x2000
   1d3d4:	ldr	r4, [r4, #3984]	; 0xf90
   1d3d8:	ldr	r5, [r5, #3980]	; 0xf8c
   1d3dc:	ldr	r3, [r4]
   1d3e0:	cmp	r5, r3
   1d3e4:	bhi	1d79c <__assert_fail@plt+0xba6c>
   1d3e8:	sub	lr, fp, #8192	; 0x2000
   1d3ec:	ldr	lr, [lr, #4004]	; 0xfa4
   1d3f0:	cmp	lr, #0
   1d3f4:	beq	1d4f0 <__assert_fail@plt+0xb7c0>
   1d3f8:	add	r5, sl, #16
   1d3fc:	mov	r4, lr
   1d400:	sub	r1, fp, #8192	; 0x2000
   1d404:	ldr	r3, [r4, #4]
   1d408:	sub	sl, r5, #16
   1d40c:	ldr	r1, [r1, #4048]	; 0xfd0
   1d410:	mov	r0, r3
   1d414:	ldr	r9, [r1, #4]
   1d418:	cmp	r9, #0
   1d41c:	ldreq	r2, [r1, #12]
   1d420:	ldreq	r9, [r2]
   1d424:	subs	r3, r3, r9
   1d428:	rsbs	r9, r3, #0
   1d42c:	adcs	r9, r9, r3
   1d430:	bl	16638 <__assert_fail@plt+0x4908>
   1d434:	subs	r6, r0, #0
   1d438:	bne	1d710 <__assert_fail@plt+0xb9e0>
   1d43c:	mov	r1, r6
   1d440:	mov	r2, #16
   1d444:	mov	r0, sl
   1d448:	bl	11bc8 <memset@plt>
   1d44c:	ldr	r1, [r8]
   1d450:	ldrb	r2, [r4, #17]
   1d454:	ldrb	r3, [sl, #12]
   1d458:	tst	r1, #8
   1d45c:	bfi	r3, r2, #0, #1
   1d460:	strb	r3, [sl, #12]
   1d464:	bne	1d6b8 <__assert_fail@plt+0xb988>
   1d468:	sub	lr, fp, #8192	; 0x2000
   1d46c:	ldr	r7, [r4, #4]
   1d470:	ldr	lr, [lr, #4044]	; 0xfcc
   1d474:	ldr	r9, [lr, #12]
   1d478:	cmp	r9, #0
   1d47c:	beq	1d698 <__assert_fail@plt+0xb968>
   1d480:	add	r6, r7, #1
   1d484:	b	1d494 <__assert_fail@plt+0xb764>
   1d488:	ldr	r9, [r9]
   1d48c:	cmp	r9, #0
   1d490:	beq	1d698 <__assert_fail@plt+0xb968>
   1d494:	ldr	r0, [r9, #4]
   1d498:	cmp	r0, #0
   1d49c:	ldreq	r3, [r9, #12]
   1d4a0:	ldreq	r0, [r3]
   1d4a4:	cmp	r0, r7
   1d4a8:	beq	1d4d8 <__assert_fail@plt+0xb7a8>
   1d4ac:	ldrb	r2, [r0]
   1d4b0:	ldrb	r3, [r7]
   1d4b4:	cmp	r3, r2
   1d4b8:	bne	1d488 <__assert_fail@plt+0xb758>
   1d4bc:	cmp	r3, #0
   1d4c0:	beq	1d4d8 <__assert_fail@plt+0xb7a8>
   1d4c4:	add	r0, r0, #1
   1d4c8:	mov	r1, r6
   1d4cc:	bl	1182c <strcmp@plt>
   1d4d0:	cmp	r0, #0
   1d4d4:	bne	1d488 <__assert_fail@plt+0xb758>
   1d4d8:	mov	sl, r5
   1d4dc:	str	r7, [r5, #-16]
   1d4e0:	ldr	r4, [r4]
   1d4e4:	add	r5, r5, #16
   1d4e8:	cmp	r4, #0
   1d4ec:	bne	1d400 <__assert_fail@plt+0xb6d0>
   1d4f0:	sub	r3, fp, #8192	; 0x2000
   1d4f4:	ldr	r0, [r3, #4004]	; 0xfa4
   1d4f8:	bl	23558 <error@@Base+0x918>
   1d4fc:	sub	r2, fp, #8192	; 0x2000
   1d500:	ldr	r2, [r2, #4036]	; 0xfc4
   1d504:	cmp	r2, #0
   1d508:	bne	1d2a8 <__assert_fail@plt+0xb578>
   1d50c:	sub	r3, fp, #8192	; 0x2000
   1d510:	ldr	r3, [r3, #4048]	; 0xfd0
   1d514:	ldr	r4, [r3]
   1d518:	sub	r3, fp, #8192	; 0x2000
   1d51c:	cmp	r4, #0
   1d520:	str	r4, [r3, #4048]	; 0xfd0
   1d524:	beq	1dd5c <__assert_fail@plt+0xc02c>
   1d528:	ldr	lr, [r4, #4]
   1d52c:	mov	ip, r3
   1d530:	cmp	lr, #0
   1d534:	str	lr, [r3, #4036]	; 0xfc4
   1d538:	ldreq	r3, [r4, #12]
   1d53c:	moveq	r2, ip
   1d540:	ldreq	r3, [r3]
   1d544:	streq	r3, [r2, #4036]	; 0xfc4
   1d548:	b	1d2a8 <__assert_fail@plt+0xb578>
   1d54c:	sub	r1, fp, #8192	; 0x2000
   1d550:	ldr	r1, [r1, #4040]	; 0xfc8
   1d554:	ldr	r3, [r1]
   1d558:	tst	r3, #8
   1d55c:	beq	1d038 <__assert_fail@plt+0xb308>
   1d560:	sub	r2, fp, #8192	; 0x2000
   1d564:	ldr	r0, [r2, #4032]	; 0xfc0
   1d568:	bl	22b1c <__assert_fail@plt+0x10dec>
   1d56c:	mov	r2, #5
   1d570:	movw	r1, #5356	; 0x14ec
   1d574:	mov	r0, #0
   1d578:	movt	r1, #3
   1d57c:	bl	1191c <dcgettext@plt>
   1d580:	mov	r1, r0
   1d584:	mov	r0, #1
   1d588:	bl	11be0 <__printf_chk@plt>
   1d58c:	sub	r3, fp, #8192	; 0x2000
   1d590:	ldr	r3, [r3, #4036]	; 0xfc4
   1d594:	ldr	r0, [r3]
   1d598:	bl	11868 <fflush@plt>
   1d59c:	ldr	r9, [r9]
   1d5a0:	cmp	r9, #0
   1d5a4:	bne	1cdd0 <__assert_fail@plt+0xb0a0>
   1d5a8:	b	1d044 <__assert_fail@plt+0xb314>
   1d5ac:	sub	r0, fp, #8192	; 0x2000
   1d5b0:	movw	r3, #29716	; 0x7414
   1d5b4:	movt	r3, #4
   1d5b8:	ldr	r0, [r0, #4044]	; 0xfcc
   1d5bc:	ldr	r1, [r0]
   1d5c0:	sub	r0, fp, #8192	; 0x2000
   1d5c4:	mov	r5, r0
   1d5c8:	str	r3, [r0, #3984]	; 0xf90
   1d5cc:	str	r1, [r0, #4020]	; 0xfb4
   1d5d0:	mov	r0, r1
   1d5d4:	bl	11b5c <strlen@plt>
   1d5d8:	ldr	r1, [r5, #3984]	; 0xf90
   1d5dc:	str	r0, [r5, #3960]	; 0xf78
   1d5e0:	ldr	r0, [r1]
   1d5e4:	lsl	r0, r0, #4
   1d5e8:	bl	22f44 <error@@Base+0x304>
   1d5ec:	movw	r1, #29712	; 0x7410
   1d5f0:	movw	r2, #29728	; 0x7420
   1d5f4:	movt	r1, #4
   1d5f8:	movt	r2, #4
   1d5fc:	movw	r3, #29708	; 0x740c
   1d600:	ldr	r1, [r1]
   1d604:	movt	r3, #4
   1d608:	sub	lr, fp, #8192	; 0x2000
   1d60c:	str	r0, [r5, #3992]	; 0xf98
   1d610:	ldr	r0, [r2]
   1d614:	ldr	r2, [r3]
   1d618:	ldr	r5, [r5, #3960]	; 0xf78
   1d61c:	mul	r3, r0, r1
   1d620:	add	r2, r5, r2
   1d624:	add	r2, r2, #14
   1d628:	bic	r2, r2, #7
   1d62c:	sub	sp, sp, r2
   1d630:	add	ip, sp, #16
   1d634:	str	ip, [lr, #4016]	; 0xfb0
   1d638:	add	r0, r3, r3, lsl #2
   1d63c:	lsl	r0, r0, #2
   1d640:	bl	22f44 <error@@Base+0x304>
   1d644:	sub	r1, fp, #8192	; 0x2000
   1d648:	str	r0, [r1, #3972]	; 0xf84
   1d64c:	ldr	r0, [r1, #4020]	; 0xfb4
   1d650:	bl	13e84 <__assert_fail@plt+0x2154>
   1d654:	subs	r7, r0, #0
   1d658:	bne	1dd48 <__assert_fail@plt+0xc018>
   1d65c:	sub	r3, fp, #8192	; 0x2000
   1d660:	mov	r1, #47	; 0x2f
   1d664:	sub	r5, fp, #8192	; 0x2000
   1d668:	ldr	r0, [r3, #4020]	; 0xfb4
   1d66c:	bl	11c7c <strrchr@plt>
   1d670:	subs	r4, r0, #0
   1d674:	str	r4, [r5, #3988]	; 0xf94
   1d678:	beq	1cd7c <__assert_fail@plt+0xb04c>
   1d67c:	ldrb	r3, [r4, #1]
   1d680:	mov	r7, r4
   1d684:	mov	r0, r5
   1d688:	cmp	r3, #0
   1d68c:	moveq	r7, #0
   1d690:	str	r7, [r0, #3988]	; 0xf94
   1d694:	b	1cd7c <__assert_fail@plt+0xb04c>
   1d698:	mov	r0, r7
   1d69c:	bl	17ae8 <__assert_fail@plt+0x5db8>
   1d6a0:	cmp	r0, #0
   1d6a4:	beq	1da68 <__assert_fail@plt+0xbd38>
   1d6a8:	ldr	r3, [r4, #4]
   1d6ac:	mov	sl, r5
   1d6b0:	str	r3, [r5, #-16]
   1d6b4:	b	1d4e0 <__assert_fail@plt+0xb7b0>
   1d6b8:	sub	r3, fp, #8192	; 0x2000
   1d6bc:	ldr	r0, [r3, #4032]	; 0xfc0
   1d6c0:	bl	22b1c <__assert_fail@plt+0x10dec>
   1d6c4:	cmp	r9, #0
   1d6c8:	movwne	r1, #5532	; 0x159c
   1d6cc:	movweq	r1, #5564	; 0x15bc
   1d6d0:	movne	r2, #5
   1d6d4:	moveq	r2, #5
   1d6d8:	movne	r0, r6
   1d6dc:	moveq	r0, r9
   1d6e0:	movtne	r1, #3
   1d6e4:	movteq	r1, #3
   1d6e8:	bl	1191c <dcgettext@plt>
   1d6ec:	ldr	r2, [r4, #4]
   1d6f0:	mov	r1, r0
   1d6f4:	mov	r0, #1
   1d6f8:	bl	11be0 <__printf_chk@plt>
   1d6fc:	sub	ip, fp, #8192	; 0x2000
   1d700:	ldr	ip, [ip, #4040]	; 0xfc8
   1d704:	ldr	r0, [ip]
   1d708:	bl	11868 <fflush@plt>
   1d70c:	b	1d468 <__assert_fail@plt+0xb738>
   1d710:	ldr	r3, [r8]
   1d714:	tst	r3, #8
   1d718:	bne	1da10 <__assert_fail@plt+0xbce0>
   1d71c:	sub	r2, fp, #8192	; 0x2000
   1d720:	mov	r3, #0
   1d724:	ldr	r2, [r2, #3996]	; 0xf9c
   1d728:	str	r3, [r2]
   1d72c:	sub	r4, fp, #8192	; 0x2000
   1d730:	ldr	r0, [r4, #4004]	; 0xfa4
   1d734:	bl	23558 <error@@Base+0x918>
   1d738:	ldr	r5, [r4, #4044]	; 0xfcc
   1d73c:	ldr	ip, [r4, #4024]	; 0xfb8
   1d740:	mov	r3, #0
   1d744:	str	r3, [r5, #24]
   1d748:	strb	r3, [ip, #27]
   1d74c:	sub	r2, fp, #8192	; 0x2000
   1d750:	ldr	r3, [r2, #3944]	; 0xf68
   1d754:	add	r2, r3, #1
   1d758:	sub	r3, fp, #8192	; 0x2000
   1d75c:	ldr	ip, [r3, #4012]	; 0xfac
   1d760:	ldr	r5, [r3, #3996]	; 0xf9c
   1d764:	cmp	r2, ip
   1d768:	str	r2, [r3, #3944]	; 0xf68
   1d76c:	add	r4, r5, #20
   1d770:	str	r4, [r3, #3996]	; 0xf9c
   1d774:	bne	1d0e4 <__assert_fail@plt+0xb3b4>
   1d778:	sub	r1, fp, #8192	; 0x2000
   1d77c:	ldr	r2, [r1, #3976]	; 0xf88
   1d780:	add	r1, r2, #1
   1d784:	sub	r2, fp, #8192	; 0x2000
   1d788:	cmp	r1, #2
   1d78c:	str	r1, [r2, #3976]	; 0xf88
   1d790:	bne	1d0cc <__assert_fail@plt+0xb39c>
   1d794:	mov	r4, #0
   1d798:	b	1dd14 <__assert_fail@plt+0xbfe4>
   1d79c:	sub	ip, fp, #8192	; 0x2000
   1d7a0:	lsl	r1, r5, #4
   1d7a4:	ldr	ip, [ip, #3992]	; 0xf98
   1d7a8:	rsb	sl, ip, sl
   1d7ac:	mov	r0, ip
   1d7b0:	bl	22fb0 <error@@Base+0x370>
   1d7b4:	sub	r3, fp, #8192	; 0x2000
   1d7b8:	asr	sl, sl, #4
   1d7bc:	ldr	ip, [r3, #3924]	; 0xf54
   1d7c0:	str	r5, [ip]
   1d7c4:	str	r0, [r3, #3992]	; 0xf98
   1d7c8:	add	sl, r0, sl, lsl #4
   1d7cc:	b	1d3e8 <__assert_fail@plt+0xb6b8>
   1d7d0:	bl	11b20 <__ctype_b_loc@plt>
   1d7d4:	sub	r5, fp, #8192	; 0x2000
   1d7d8:	ldr	r2, [r5, #4036]	; 0xfc4
   1d7dc:	ldr	r0, [r0]
   1d7e0:	mov	r4, r2
   1d7e4:	add	r2, r2, #1
   1d7e8:	ldrb	r3, [r4]
   1d7ec:	lsl	r1, r3, #1
   1d7f0:	ldrh	r1, [r0, r1]
   1d7f4:	tst	r1, #1
   1d7f8:	bne	1d7e0 <__assert_fail@plt+0xbab0>
   1d7fc:	sub	r5, fp, #8192	; 0x2000
   1d800:	cmp	r3, #0
   1d804:	mov	ip, r3
   1d808:	str	r2, [r5, #4036]	; 0xfc4
   1d80c:	beq	1d50c <__assert_fail@plt+0xb7dc>
   1d810:	mov	r9, r2
   1d814:	cmp	r3, #32
   1d818:	beq	1d9d0 <__assert_fail@plt+0xbca0>
   1d81c:	bls	1d9c0 <__assert_fail@plt+0xbc90>
   1d820:	cmp	r3, #36	; 0x24
   1d824:	beq	1d9e4 <__assert_fail@plt+0xbcb4>
   1d828:	cmp	r3, #124	; 0x7c
   1d82c:	bne	1d9d8 <__assert_fail@plt+0xbca8>
   1d830:	sub	r0, fp, #8192	; 0x2000
   1d834:	rsb	r9, r4, r9
   1d838:	ldr	r0, [r0, #3964]	; 0xf7c
   1d83c:	cmp	r0, #0
   1d840:	bne	1d84c <__assert_fail@plt+0xbb1c>
   1d844:	cmp	r9, #1
   1d848:	beq	1db34 <__assert_fail@plt+0xbe04>
   1d84c:	sub	r2, fp, #8192	; 0x2000
   1d850:	add	r1, r4, r9
   1d854:	mov	r0, r4
   1d858:	str	r1, [r2, #4036]	; 0xfc4
   1d85c:	mov	r2, #37	; 0x25
   1d860:	bl	23184 <error@@Base+0x544>
   1d864:	movw	r3, #61432	; 0xeff8
   1d868:	sub	ip, fp, #36	; 0x24
   1d86c:	movt	r3, #65535	; 0xffff
   1d870:	cmp	r0, #0
   1d874:	mov	r5, r0
   1d878:	str	r0, [ip, r3]
   1d87c:	beq	1db98 <__assert_fail@plt+0xbe68>
   1d880:	sub	r2, fp, #8192	; 0x2000
   1d884:	rsb	r6, r4, r0
   1d888:	mov	r1, r4
   1d88c:	ldr	r3, [r2, #3952]	; 0xf70
   1d890:	ldr	r0, [r2, #4016]	; 0xfb0
   1d894:	mov	r2, r6
   1d898:	adds	r4, r3, #0
   1d89c:	movne	r4, #1
   1d8a0:	bl	118c8 <memcpy@plt>
   1d8a4:	add	r1, r5, #1
   1d8a8:	movw	r3, #3136	; 0xc40
   1d8ac:	sub	r5, fp, #8192	; 0x2000
   1d8b0:	movt	r3, #3
   1d8b4:	sub	r2, r9, #1
   1d8b8:	add	r0, r6, #2
   1d8bc:	ldr	r5, [r5, #4016]	; 0xfb0
   1d8c0:	rsb	r2, r6, r2
   1d8c4:	ldrh	r3, [r3]
   1d8c8:	add	r9, r5, r9
   1d8cc:	add	r0, r5, r0
   1d8d0:	strh	r3, [r5, r6]
   1d8d4:	bl	118c8 <memcpy@plt>
   1d8d8:	mov	r3, #0
   1d8dc:	strb	r3, [r9, #1]
   1d8e0:	sub	r0, fp, #8192	; 0x2000
   1d8e4:	ldr	r0, [r0, #3932]	; 0xf5c
   1d8e8:	cmp	r0, #0
   1d8ec:	beq	1dae8 <__assert_fail@plt+0xbdb8>
   1d8f0:	sub	r0, fp, #8192	; 0x2000
   1d8f4:	ldr	r0, [r0, #3948]	; 0xf6c
   1d8f8:	cmp	r0, #0
   1d8fc:	beq	1db48 <__assert_fail@plt+0xbe18>
   1d900:	sub	ip, fp, #8192	; 0x2000
   1d904:	sub	r5, fp, #36	; 0x24
   1d908:	ldr	r1, [ip, #4044]	; 0xfcc
   1d90c:	ldr	r0, [ip, #4016]	; 0xfb0
   1d910:	bl	1773c <__assert_fail@plt+0x5a0c>
   1d914:	cmp	r4, #0
   1d918:	sub	r1, fp, #8192	; 0x2000
   1d91c:	sub	r4, fp, #8192	; 0x2000
   1d920:	mov	r2, #0
   1d924:	movw	ip, #61432	; 0xeff8
   1d928:	ldr	r3, [r1, #3928]	; 0xf58
   1d92c:	movt	ip, #65535	; 0xffff
   1d930:	str	r2, [sp]
   1d934:	moveq	r3, #0
   1d938:	ldr	r4, [r4, #3964]	; 0xf7c
   1d93c:	mov	r1, #20
   1d940:	cmp	r4, r2
   1d944:	moveq	r2, #124	; 0x7c
   1d948:	str	r0, [r5, ip]
   1d94c:	sub	ip, fp, #4096	; 0x1000
   1d950:	sub	ip, ip, #36	; 0x24
   1d954:	sub	r0, ip, #8
   1d958:	bl	256a0 <error@@Base+0x2a60>
   1d95c:	sub	r1, fp, #8192	; 0x2000
   1d960:	subs	lr, r0, #0
   1d964:	str	lr, [r1, #4004]	; 0xfa4
   1d968:	beq	1d3cc <__assert_fail@plt+0xb69c>
   1d96c:	mov	r2, r1
   1d970:	ldr	r1, [r1, #3964]	; 0xf7c
   1d974:	ldr	r2, [r2, #3980]	; 0xf8c
   1d978:	mov	r3, lr
   1d97c:	cmp	r1, #0
   1d980:	add	r2, r2, #1
   1d984:	ldrbne	r0, [r3, #17]
   1d988:	orrne	r0, r0, #1
   1d98c:	strbne	r0, [r3, #17]
   1d990:	ldr	r3, [r3]
   1d994:	cmp	r3, #0
   1d998:	bne	1d97c <__assert_fail@plt+0xbc4c>
   1d99c:	sub	ip, fp, #8192	; 0x2000
   1d9a0:	str	r2, [ip, #3980]	; 0xf8c
   1d9a4:	b	1d3cc <__assert_fail@plt+0xb69c>
   1d9a8:	sub	r4, fp, #8192	; 0x2000
   1d9ac:	ldr	r0, [r4, #4016]	; 0xfb0
   1d9b0:	ldr	r1, [r4, #4020]	; 0xfb4
   1d9b4:	ldr	r2, [r4, #4000]	; 0xfa0
   1d9b8:	bl	118c8 <memcpy@plt>
   1d9bc:	b	1d2f8 <__assert_fail@plt+0xb5c8>
   1d9c0:	cmp	r3, #0
   1d9c4:	beq	1d9d0 <__assert_fail@plt+0xbca0>
   1d9c8:	cmp	r3, #9
   1d9cc:	bne	1d9d8 <__assert_fail@plt+0xbca8>
   1d9d0:	sub	r9, r9, #1
   1d9d4:	b	1d830 <__assert_fail@plt+0xbb00>
   1d9d8:	ldrb	r3, [r9]
   1d9dc:	add	r9, r9, #1
   1d9e0:	b	1d814 <__assert_fail@plt+0xbae4>
   1d9e4:	ldrb	r1, [r9]
   1d9e8:	add	r2, r9, #1
   1d9ec:	cmp	r1, #36	; 0x24
   1d9f0:	beq	1da04 <__assert_fail@plt+0xbcd4>
   1d9f4:	cmp	r1, #40	; 0x28
   1d9f8:	beq	1dc70 <__assert_fail@plt+0xbf40>
   1d9fc:	cmp	r1, #123	; 0x7b
   1da00:	beq	1dc20 <__assert_fail@plt+0xbef0>
   1da04:	ldrb	r3, [r9, #1]
   1da08:	mov	r9, r2
   1da0c:	b	1d9dc <__assert_fail@plt+0xbcac>
   1da10:	sub	lr, fp, #8192	; 0x2000
   1da14:	ldr	r0, [lr, #4032]	; 0xfc0
   1da18:	bl	22b1c <__assert_fail@plt+0x10dec>
   1da1c:	cmp	r9, #0
   1da20:	movwne	r1, #5432	; 0x1538
   1da24:	movweq	r1, #5480	; 0x1568
   1da28:	movne	r2, #5
   1da2c:	moveq	r2, #5
   1da30:	movne	r0, #0
   1da34:	moveq	r0, r9
   1da38:	movtne	r1, #3
   1da3c:	movteq	r1, #3
   1da40:	bl	1191c <dcgettext@plt>
   1da44:	ldr	r2, [r4, #4]
   1da48:	mov	r1, r0
   1da4c:	mov	r0, #1
   1da50:	bl	11be0 <__printf_chk@plt>
   1da54:	sub	r1, fp, #8192	; 0x2000
   1da58:	ldr	r1, [r1, #4040]	; 0xfc8
   1da5c:	ldr	r0, [r1]
   1da60:	bl	11868 <fflush@plt>
   1da64:	b	1d71c <__assert_fail@plt+0xb9ec>
   1da68:	ldr	r0, [r4, #4]
   1da6c:	bl	1640c <__assert_fail@plt+0x46dc>
   1da70:	subs	r9, r0, #0
   1da74:	bne	1d6a8 <__assert_fail@plt+0xb978>
   1da78:	ldr	r0, [r4, #4]
   1da7c:	mov	r1, r9
   1da80:	mov	r2, r9
   1da84:	mov	r3, r9
   1da88:	bl	2e5cc <error@@Base+0xb98c>
   1da8c:	subs	r6, r0, #0
   1da90:	beq	1e260 <__assert_fail@plt+0xc530>
   1da94:	ldr	r3, [r8]
   1da98:	tst	r3, #8
   1da9c:	beq	1d6a8 <__assert_fail@plt+0xb978>
   1daa0:	sub	r1, fp, #8192	; 0x2000
   1daa4:	ldr	r0, [r1, #4032]	; 0xfc0
   1daa8:	bl	22b1c <__assert_fail@plt+0x10dec>
   1daac:	mov	r0, r9
   1dab0:	mov	r2, #5
   1dab4:	movw	r1, #5600	; 0x15e0
   1dab8:	movt	r1, #3
   1dabc:	bl	1191c <dcgettext@plt>
   1dac0:	ldr	r2, [r4, #4]
   1dac4:	mov	r3, r6
   1dac8:	mov	r1, r0
   1dacc:	mov	r0, #1
   1dad0:	bl	11be0 <__printf_chk@plt>
   1dad4:	sub	r2, fp, #8192	; 0x2000
   1dad8:	ldr	r2, [r2, #4040]	; 0xfc8
   1dadc:	ldr	r0, [r2]
   1dae0:	bl	11868 <fflush@plt>
   1dae4:	b	1d6a8 <__assert_fail@plt+0xb978>
   1dae8:	sub	r2, fp, #8192	; 0x2000
   1daec:	sub	r5, fp, #8192	; 0x2000
   1daf0:	mov	r1, r0
   1daf4:	ldr	r0, [r2, #4044]	; 0xfcc
   1daf8:	bl	2d750 <error@@Base+0xab10>
   1dafc:	ldr	r0, [r5, #4044]	; 0xfcc
   1db00:	bl	14c5c <__assert_fail@plt+0x2f2c>
   1db04:	mov	lr, #1
   1db08:	str	lr, [r5, #3932]	; 0xf5c
   1db0c:	b	1d900 <__assert_fail@plt+0xbbd0>
   1db10:	sub	r0, fp, #8192	; 0x2000
   1db14:	ldr	r1, [r0, #4004]	; 0xfa4
   1db18:	str	r1, [r0, #4036]	; 0xfc4
   1db1c:	b	1d3cc <__assert_fail@plt+0xb69c>
   1db20:	sub	r0, fp, #8192	; 0x2000
   1db24:	ldr	r1, [r0, #4036]	; 0xfc4
   1db28:	ldr	r0, [r0, #4016]	; 0xfb0
   1db2c:	bl	11a30 <strcpy@plt>
   1db30:	b	1d348 <__assert_fail@plt+0xb618>
   1db34:	cmp	ip, #124	; 0x7c
   1db38:	bne	1d84c <__assert_fail@plt+0xbb1c>
   1db3c:	sub	lr, fp, #8192	; 0x2000
   1db40:	str	r9, [lr, #3964]	; 0xf7c
   1db44:	b	1d298 <__assert_fail@plt+0xb568>
   1db48:	sub	r1, fp, #8192	; 0x2000
   1db4c:	sub	r3, fp, #8192	; 0x2000
   1db50:	sub	lr, fp, #8192	; 0x2000
   1db54:	sub	r5, fp, #8192	; 0x2000
   1db58:	ldr	r1, [r1, #4044]	; 0xfcc
   1db5c:	movw	r0, #63476	; 0xf7f4
   1db60:	ldr	r3, [r3, #3948]	; 0xf6c
   1db64:	movt	r0, #2
   1db68:	ldr	r2, [r1, #24]
   1db6c:	str	r3, [sp]
   1db70:	mov	r3, #6
   1db74:	ldr	ip, [r1, #60]	; 0x3c
   1db78:	mov	r1, #1
   1db7c:	ldr	lr, [lr, #3948]	; 0xf6c
   1db80:	ldr	ip, [ip, #4]
   1db84:	str	lr, [sp, #8]
   1db88:	str	r1, [r5, #3948]	; 0xf6c
   1db8c:	str	ip, [sp, #4]
   1db90:	bl	2c3b8 <error@@Base+0x9778>
   1db94:	b	1d900 <__assert_fail@plt+0xbbd0>
   1db98:	sub	lr, fp, #8192	; 0x2000
   1db9c:	mov	r1, r4
   1dba0:	mov	r2, r9
   1dba4:	mov	r4, r5
   1dba8:	ldr	r0, [lr, #4016]	; 0xfb0
   1dbac:	bl	118c8 <memcpy@plt>
   1dbb0:	sub	r0, fp, #8192	; 0x2000
   1dbb4:	ldr	r0, [r0, #4016]	; 0xfb0
   1dbb8:	strb	r5, [r0, r9]
   1dbbc:	b	1d8e0 <__assert_fail@plt+0xbbb0>
   1dbc0:	sub	lr, fp, #8192	; 0x2000
   1dbc4:	ldr	r3, [r8]
   1dbc8:	ldr	r0, [lr, #3952]	; 0xf70
   1dbcc:	tst	r3, #8
   1dbd0:	str	r0, [lr, #3928]	; 0xf58
   1dbd4:	beq	1d1d8 <__assert_fail@plt+0xb4a8>
   1dbd8:	sub	r3, fp, #8192	; 0x2000
   1dbdc:	sub	r4, fp, #8192	; 0x2000
   1dbe0:	ldr	r0, [r3, #4032]	; 0xfc0
   1dbe4:	bl	22b1c <__assert_fail@plt+0x10dec>
   1dbe8:	mov	r2, #5
   1dbec:	movw	r1, #5392	; 0x1510
   1dbf0:	mov	r0, #0
   1dbf4:	movt	r1, #3
   1dbf8:	bl	1191c <dcgettext@plt>
   1dbfc:	ldr	r2, [r4, #4028]	; 0xfbc
   1dc00:	ldr	r3, [r4, #3968]	; 0xf80
   1dc04:	mov	r1, r0
   1dc08:	mov	r0, #1
   1dc0c:	bl	11be0 <__printf_chk@plt>
   1dc10:	ldr	ip, [r4, #4040]	; 0xfc8
   1dc14:	ldr	r0, [ip]
   1dc18:	bl	11868 <fflush@plt>
   1dc1c:	b	1d1d8 <__assert_fail@plt+0xb4a8>
   1dc20:	mov	r0, #125	; 0x7d
   1dc24:	ldrb	r3, [r9, #1]
   1dc28:	mov	r9, r2
   1dc2c:	cmp	r3, #0
   1dc30:	beq	1d9dc <__assert_fail@plt+0xbcac>
   1dc34:	mov	r2, #0
   1dc38:	b	1dc48 <__assert_fail@plt+0xbf18>
   1dc3c:	ldrb	r3, [r9, #1]!
   1dc40:	cmp	r3, #0
   1dc44:	beq	1d9dc <__assert_fail@plt+0xbcac>
   1dc48:	cmp	r1, r3
   1dc4c:	addeq	r2, r2, #1
   1dc50:	beq	1dc3c <__assert_fail@plt+0xbf0c>
   1dc54:	cmp	r3, r0
   1dc58:	bne	1dc3c <__assert_fail@plt+0xbf0c>
   1dc5c:	subs	r2, r2, #1
   1dc60:	bcs	1dc3c <__assert_fail@plt+0xbf0c>
   1dc64:	ldrb	r3, [r9, #1]
   1dc68:	add	r9, r9, #1
   1dc6c:	b	1d9dc <__assert_fail@plt+0xbcac>
   1dc70:	mov	r0, #41	; 0x29
   1dc74:	b	1dc24 <__assert_fail@plt+0xbef4>
   1dc78:	sub	r3, fp, #8192	; 0x2000
   1dc7c:	sub	r0, fp, #8192	; 0x2000
   1dc80:	ldr	r5, [r3, #4012]	; 0xfac
   1dc84:	mov	r3, #0
   1dc88:	ldr	lr, [r0, #3972]	; 0xf84
   1dc8c:	mov	ip, r3
   1dc90:	add	r4, r5, r5, lsl #2
   1dc94:	lsl	r4, r4, #2
   1dc98:	ldr	r1, [lr, r3]
   1dc9c:	ldrb	r2, [r1, #26]
   1dca0:	cmp	r2, #0
   1dca4:	bne	1dce8 <__assert_fail@plt+0xbfb8>
   1dca8:	ldrh	r0, [r1, #24]
   1dcac:	cmp	r0, #0
   1dcb0:	beq	1dce8 <__assert_fail@plt+0xbfb8>
   1dcb4:	ldr	r1, [r1, #4]
   1dcb8:	ldr	r5, [r1]
   1dcbc:	ldrb	r5, [r5, #1]
   1dcc0:	cmp	r5, #0
   1dcc4:	bne	1dcdc <__assert_fail@plt+0xbfac>
   1dcc8:	b	1dcf8 <__assert_fail@plt+0xbfc8>
   1dccc:	ldr	r5, [r1, #4]!
   1dcd0:	ldrb	r5, [r5, #1]
   1dcd4:	cmp	r5, #0
   1dcd8:	beq	1dcf8 <__assert_fail@plt+0xbfc8>
   1dcdc:	add	r2, r2, #1
   1dce0:	cmp	r0, r2
   1dce4:	bhi	1dccc <__assert_fail@plt+0xbf9c>
   1dce8:	add	r3, r3, #20
   1dcec:	cmp	r3, r4
   1dcf0:	bne	1dc98 <__assert_fail@plt+0xbf68>
   1dcf4:	b	1d088 <__assert_fail@plt+0xb358>
   1dcf8:	str	ip, [lr, r3]
   1dcfc:	add	r3, r3, #20
   1dd00:	cmp	r3, r4
   1dd04:	bne	1dc98 <__assert_fail@plt+0xbf68>
   1dd08:	b	1d088 <__assert_fail@plt+0xb358>
   1dd0c:	sub	r3, fp, #8192	; 0x2000
   1dd10:	ldr	r4, [r3, #4012]	; 0xfac
   1dd14:	sub	r5, fp, #8192	; 0x2000
   1dd18:	ldr	r0, [r5, #3972]	; 0xf84
   1dd1c:	bl	1188c <free@plt>
   1dd20:	ldr	r0, [r5, #3992]	; 0xf98
   1dd24:	bl	1188c <free@plt>
   1dd28:	ldr	r1, [r5, #3936]	; 0xf60
   1dd2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1dd30:	mov	r0, r4
   1dd34:	ldr	r3, [r1]
   1dd38:	cmp	r2, r3
   1dd3c:	bne	1dd58 <__assert_fail@plt+0xc028>
   1dd40:	sub	sp, fp, #32
   1dd44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dd48:	sub	r1, fp, #8192	; 0x2000
   1dd4c:	mov	r7, r4
   1dd50:	str	r4, [r1, #3988]	; 0xf94
   1dd54:	b	1cd7c <__assert_fail@plt+0xb04c>
   1dd58:	bl	11934 <__stack_chk_fail@plt>
   1dd5c:	sub	lr, fp, #8192	; 0x2000
   1dd60:	sub	r2, fp, #8192	; 0x2000
   1dd64:	ldr	r0, [lr, #4048]	; 0xfd0
   1dd68:	ldr	r2, [r2, #4024]	; 0xfb8
   1dd6c:	ldr	lr, [lr, #4044]	; 0xfcc
   1dd70:	str	r0, [lr, #24]
   1dd74:	strb	r0, [r2, #27]
   1dd78:	sub	lr, fp, #8192	; 0x2000
   1dd7c:	sub	r0, fp, #8192	; 0x2000
   1dd80:	ldr	lr, [lr, #3944]	; 0xf68
   1dd84:	ldr	r0, [r0, #4012]	; 0xfac
   1dd88:	cmp	lr, r0
   1dd8c:	bcs	1d778 <__assert_fail@plt+0xba48>
   1dd90:	sub	r1, fp, #8192	; 0x2000
   1dd94:	sub	r2, fp, #8192	; 0x2000
   1dd98:	mov	r9, sl
   1dd9c:	ldr	r1, [r1, #3940]	; 0xf64
   1dda0:	ldr	r7, [r2, #4028]	; 0xfbc
   1dda4:	cmp	r1, #0
   1dda8:	beq	1ddd0 <__assert_fail@plt+0xc0a0>
   1ddac:	sub	r4, fp, #8192	; 0x2000
   1ddb0:	ldr	r3, [r2, #3996]	; 0xf9c
   1ddb4:	sub	r5, fp, #8192	; 0x2000
   1ddb8:	ldr	r4, [r4, #4024]	; 0xfb8
   1ddbc:	ldr	r2, [r3, #4]
   1ddc0:	ldr	r5, [r5, #4044]	; 0xfcc
   1ddc4:	ldr	r3, [r4, #4]
   1ddc8:	ldr	r3, [r3, r2, lsl #2]
   1ddcc:	str	r3, [r5]
   1ddd0:	sub	ip, fp, #8192	; 0x2000
   1ddd4:	sub	r4, r9, #16
   1ddd8:	ldr	ip, [ip, #3992]	; 0xf98
   1dddc:	cmp	r9, ip
   1dde0:	movhi	r5, #0
   1dde4:	movhi	r6, #1
   1dde8:	bls	1dfa4 <__assert_fail@plt+0xc274>
   1ddec:	ldr	sl, [r9, #-8]
   1ddf0:	cmp	sl, #0
   1ddf4:	beq	1ded4 <__assert_fail@plt+0xc1a4>
   1ddf8:	ldr	r0, [sl]
   1ddfc:	bl	17ae8 <__assert_fail@plt+0x5db8>
   1de00:	subs	r8, r0, #0
   1de04:	beq	1df94 <__assert_fail@plt+0xc264>
   1de08:	ldrb	r1, [r8, #78]	; 0x4e
   1de0c:	orr	r1, r1, #4
   1de10:	strb	r1, [r8, #78]	; 0x4e
   1de14:	ldrb	r0, [sl, #79]	; 0x4f
   1de18:	ldrb	r1, [r8, #79]	; 0x4f
   1de1c:	ubfx	r0, r0, #6, #1
   1de20:	ldr	ip, [sl, #12]
   1de24:	bfi	r1, r0, #6, #1
   1de28:	ldr	r0, [sl, #16]
   1de2c:	ldr	lr, [sl, #24]
   1de30:	str	ip, [r8, #12]
   1de34:	ldr	ip, [sl, #60]	; 0x3c
   1de38:	str	r0, [r8, #16]
   1de3c:	ldr	r0, [sl, #64]	; 0x40
   1de40:	strb	r1, [r8, #79]	; 0x4f
   1de44:	uxtb	r1, r1
   1de48:	ldr	r3, [sl, #28]
   1de4c:	orr	r1, r1, #4
   1de50:	ldrb	r2, [r8, #78]	; 0x4e
   1de54:	str	r0, [r8, #64]	; 0x40
   1de58:	orr	r2, r2, #144	; 0x90
   1de5c:	strb	r1, [r8, #79]	; 0x4f
   1de60:	str	lr, [r8, #24]
   1de64:	str	ip, [r8, #60]	; 0x3c
   1de68:	str	r3, [r8, #28]
   1de6c:	strb	r2, [r8, #78]	; 0x4e
   1de70:	ldr	r0, [r9, #-12]
   1de74:	bl	17ae8 <__assert_fail@plt+0x5db8>
   1de78:	cmp	r0, #0
   1de7c:	beq	1de94 <__assert_fail@plt+0xc164>
   1de80:	ldrb	r2, [r0, #78]	; 0x4e
   1de84:	tst	r2, #4
   1de88:	ldrbne	r2, [r8, #78]	; 0x4e
   1de8c:	orrne	r2, r2, #4
   1de90:	strbne	r2, [r8, #78]	; 0x4e
   1de94:	ldr	r8, [r8, #12]
   1de98:	cmp	r8, #0
   1de9c:	beq	1ded4 <__assert_fail@plt+0xc1a4>
   1dea0:	ldr	r0, [r8, #4]
   1dea4:	bl	17bc4 <__assert_fail@plt+0x5e94>
   1dea8:	ldrb	r1, [r8, #16]
   1deac:	str	r5, [r8, #4]
   1deb0:	ldrb	r3, [r0, #78]	; 0x4e
   1deb4:	str	r0, [r8, #12]
   1deb8:	ldr	r8, [r8]
   1debc:	ubfx	r2, r3, #4, #1
   1dec0:	orr	r2, r1, r2
   1dec4:	cmp	r8, #0
   1dec8:	bfi	r3, r2, #4, #1
   1decc:	strb	r3, [r0, #78]	; 0x4e
   1ded0:	bne	1dea0 <__assert_fail@plt+0xc170>
   1ded4:	mov	r0, #20
   1ded8:	bl	22f78 <error@@Base+0x338>
   1dedc:	ldrb	r1, [r9, #-4]
   1dee0:	ldrb	r2, [r0, #17]
   1dee4:	mov	sl, r0
   1dee8:	bfi	r2, r1, #0, #1
   1deec:	strb	r2, [r0, #17]
   1def0:	ldr	r0, [r9, #-16]
   1def4:	bl	2b9c0 <error@@Base+0x8d80>
   1def8:	sub	r1, fp, #8192	; 0x2000
   1defc:	ldr	r1, [r1, #3940]	; 0xf64
   1df00:	cmp	r1, #0
   1df04:	mov	r8, r0
   1df08:	strne	r0, [sl, #4]
   1df0c:	beq	1e240 <__assert_fail@plt+0xc510>
   1df10:	ldr	r2, [r9, #-8]
   1df14:	cmp	r2, #0
   1df18:	beq	1e20c <__assert_fail@plt+0xc4dc>
   1df1c:	sub	ip, fp, #8192	; 0x2000
   1df20:	sub	lr, fp, #8192	; 0x2000
   1df24:	sub	r2, r4, #16
   1df28:	ldr	ip, [ip, #4044]	; 0xfcc
   1df2c:	ldr	lr, [lr, #3992]	; 0xf98
   1df30:	ldr	r1, [ip, #12]
   1df34:	cmp	lr, r4
   1df38:	str	r1, [sl]
   1df3c:	str	sl, [ip, #12]
   1df40:	bcs	1dfa4 <__assert_fail@plt+0xc274>
   1df44:	mov	r9, r4
   1df48:	mov	r4, r2
   1df4c:	b	1ddec <__assert_fail@plt+0xc0bc>
   1df50:	ldr	r2, [r4, #4000]	; 0xfa0
   1df54:	mov	r5, r4
   1df58:	ldr	r1, [r4, #4020]	; 0xfb4
   1df5c:	add	r3, r2, #15
   1df60:	bic	r3, r3, #7
   1df64:	sub	sp, sp, r3
   1df68:	add	r4, sp, #23
   1df6c:	lsr	r4, r4, #3
   1df70:	lsl	ip, r4, #3
   1df74:	str	ip, [lr, #3956]	; 0xf74
   1df78:	str	ip, [lr, #3928]	; 0xf58
   1df7c:	mov	r0, ip
   1df80:	bl	118c8 <memcpy@plt>
   1df84:	ldr	ip, [r5, #4000]	; 0xfa0
   1df88:	mov	r3, #0
   1df8c:	strb	r3, [ip, r4, lsl #3]
   1df90:	b	1d1cc <__assert_fail@plt+0xb49c>
   1df94:	ldr	r0, [sl]
   1df98:	bl	17bc4 <__assert_fail@plt+0x5e94>
   1df9c:	mov	r8, r0
   1dfa0:	b	1de14 <__assert_fail@plt+0xc0e4>
   1dfa4:	sub	lr, fp, #8192	; 0x2000
   1dfa8:	ldr	lr, [lr, #3996]	; 0xf9c
   1dfac:	ldrb	r3, [lr, #16]
   1dfb0:	cmp	r3, #0
   1dfb4:	bne	1e190 <__assert_fail@plt+0xc460>
   1dfb8:	sub	r1, fp, #8192	; 0x2000
   1dfbc:	ldr	r0, [r1, #3968]	; 0xf80
   1dfc0:	ldr	r1, [r1, #4028]	; 0xfbc
   1dfc4:	bl	2b9dc <error@@Base+0x8d9c>
   1dfc8:	sub	r3, fp, #8192	; 0x2000
   1dfcc:	ldr	r3, [r3, #4044]	; 0xfcc
   1dfd0:	str	r0, [r3, #24]
   1dfd4:	sub	r1, fp, #8192	; 0x2000
   1dfd8:	sub	r3, fp, #8192	; 0x2000
   1dfdc:	sub	r5, fp, #8192	; 0x2000
   1dfe0:	ldr	r1, [r1, #4024]	; 0xfb8
   1dfe4:	ldr	r3, [r3, #3996]	; 0xf9c
   1dfe8:	ldr	r5, [r5, #4044]	; 0xfcc
   1dfec:	ldr	r0, [r1, #20]
   1dff0:	ldr	r2, [r3, #4]
   1dff4:	ldr	r3, [r1, #4]
   1dff8:	ldrb	r1, [r5, #78]	; 0x4e
   1dffc:	str	r0, [r5, #16]
   1e000:	orr	r1, r1, #128	; 0x80
   1e004:	strb	r1, [r5, #78]	; 0x4e
   1e008:	ldr	r0, [r3, r2, lsl #2]
   1e00c:	bl	17ae8 <__assert_fail@plt+0x5db8>
   1e010:	cmp	r0, #0
   1e014:	beq	1e02c <__assert_fail@plt+0xc2fc>
   1e018:	ldrb	r3, [r0, #78]	; 0x4e
   1e01c:	tst	r3, #4
   1e020:	ldrbne	r3, [r5, #78]	; 0x4e
   1e024:	orrne	r3, r3, #4
   1e028:	strbne	r3, [r5, #78]	; 0x4e
   1e02c:	sub	r3, fp, #8192	; 0x2000
   1e030:	ldr	r3, [r3, #4024]	; 0xfb8
   1e034:	ldrh	r2, [r3, #24]
   1e038:	cmp	r2, #1
   1e03c:	bls	1e188 <__assert_fail@plt+0xc458>
   1e040:	sub	r4, fp, #8192	; 0x2000
   1e044:	sub	ip, fp, #8192	; 0x2000
   1e048:	mov	r5, r3
   1e04c:	ldr	r4, [r4, #4028]	; 0xfbc
   1e050:	ldr	sl, [ip, #3996]	; 0xf9c
   1e054:	add	r7, r4, #1
   1e058:	ldr	r8, [ip, #4044]	; 0xfcc
   1e05c:	mov	r4, #0
   1e060:	mov	r9, r7
   1e064:	ldr	r3, [sl, #4]
   1e068:	cmp	r3, r4
   1e06c:	beq	1e17c <__assert_fail@plt+0xc44c>
   1e070:	ldr	r3, [r5, #8]
   1e074:	mov	r0, #20
   1e078:	ldr	r3, [r3, r4, lsl #2]
   1e07c:	add	r3, r9, r3
   1e080:	add	r3, r3, #14
   1e084:	bic	r3, r3, #7
   1e088:	sub	sp, sp, r3
   1e08c:	bl	22f78 <error@@Base+0x338>
   1e090:	ldr	r2, [r5, #4]
   1e094:	ldr	r3, [r5, #12]
   1e098:	add	r7, sp, #16
   1e09c:	ldr	r1, [r2, r4, lsl #2]
   1e0a0:	ldr	r2, [r3, r4, lsl #2]
   1e0a4:	rsb	r2, r1, r2
   1e0a8:	sub	r2, r2, #1
   1e0ac:	mov	r6, r0
   1e0b0:	mov	r0, r7
   1e0b4:	bl	118c8 <memcpy@plt>
   1e0b8:	ldr	r0, [r5, #12]
   1e0bc:	ldr	r3, [r5, #4]
   1e0c0:	sub	r1, fp, #8192	; 0x2000
   1e0c4:	ldr	r0, [r0, r4, lsl #2]
   1e0c8:	ldr	r3, [r3, r4, lsl #2]
   1e0cc:	ldr	r2, [r1, #4028]	; 0xfbc
   1e0d0:	rsb	r3, r3, r0
   1e0d4:	ldr	r1, [r8, #24]
   1e0d8:	sub	r3, r3, #1
   1e0dc:	add	r3, r7, r3
   1e0e0:	mov	r0, r3
   1e0e4:	bl	118c8 <memcpy@plt>
   1e0e8:	sub	r2, fp, #8192	; 0x2000
   1e0ec:	ldr	lr, [r5, #4]
   1e0f0:	ldr	r2, [r2, #4028]	; 0xfbc
   1e0f4:	ldr	r1, [r5, #12]
   1e0f8:	ldr	r3, [lr, r4, lsl #2]
   1e0fc:	ldr	r1, [r1, r4, lsl #2]
   1e100:	rsb	r3, r1, r3
   1e104:	add	r0, r0, r2
   1e108:	ldr	r2, [r5, #8]
   1e10c:	ldr	r2, [r2, r4, lsl #2]
   1e110:	add	r2, r2, #1
   1e114:	add	r2, r2, r3
   1e118:	bl	118c8 <memcpy@plt>
   1e11c:	mov	r0, r7
   1e120:	bl	2b9c0 <error@@Base+0x8d80>
   1e124:	str	r0, [r6, #4]
   1e128:	bl	17bc4 <__assert_fail@plt+0x5e94>
   1e12c:	ldr	r3, [r5, #4]
   1e130:	ldr	r2, [r8, #28]
   1e134:	str	r2, [r6]
   1e138:	str	r0, [r6, #12]
   1e13c:	ldr	r0, [r3, r4, lsl #2]
   1e140:	bl	17ae8 <__assert_fail@plt+0x5db8>
   1e144:	cmp	r0, #0
   1e148:	ldreq	r3, [r6, #12]
   1e14c:	beq	1e168 <__assert_fail@plt+0xc438>
   1e150:	ldrb	r3, [r0, #78]	; 0x4e
   1e154:	tst	r3, #4
   1e158:	ldr	r3, [r6, #12]
   1e15c:	ldrbne	r2, [r3, #78]	; 0x4e
   1e160:	orrne	r2, r2, #4
   1e164:	strbne	r2, [r3, #78]	; 0x4e
   1e168:	ldrb	r1, [r3, #78]	; 0x4e
   1e16c:	ldrh	r2, [r5, #24]
   1e170:	orr	r1, r1, #128	; 0x80
   1e174:	strb	r1, [r3, #78]	; 0x4e
   1e178:	str	r6, [r8, #28]
   1e17c:	add	r4, r4, #1
   1e180:	cmp	r2, r4
   1e184:	bhi	1e064 <__assert_fail@plt+0xc334>
   1e188:	mov	r4, #1
   1e18c:	b	1dd14 <__assert_fail@plt+0xbfe4>
   1e190:	sub	r4, fp, #8192	; 0x2000
   1e194:	sub	ip, fp, #8192	; 0x2000
   1e198:	ldr	r4, [r4, #3988]	; 0xf94
   1e19c:	ldr	r1, [ip, #4020]	; 0xfb4
   1e1a0:	ldr	r2, [ip, #4028]	; 0xfbc
   1e1a4:	add	r5, r4, #1
   1e1a8:	rsb	r5, r1, r5
   1e1ac:	add	r0, r2, r5
   1e1b0:	str	r0, [ip, #4028]	; 0xfbc
   1e1b4:	add	r3, r0, #15
   1e1b8:	mov	r2, r5
   1e1bc:	bic	r3, r3, #7
   1e1c0:	sub	sp, sp, r3
   1e1c4:	add	r6, sp, #23
   1e1c8:	lsr	r6, r6, #3
   1e1cc:	lsl	r4, r6, #3
   1e1d0:	mov	r0, r4
   1e1d4:	bl	118c8 <memcpy@plt>
   1e1d8:	add	r0, r4, r5
   1e1dc:	sub	r5, fp, #8192	; 0x2000
   1e1e0:	mov	r2, r7
   1e1e4:	ldr	r1, [r5, #3968]	; 0xf80
   1e1e8:	bl	118c8 <memcpy@plt>
   1e1ec:	ldr	ip, [r5, #4028]	; 0xfbc
   1e1f0:	mov	r3, #0
   1e1f4:	mov	r0, r4
   1e1f8:	strb	r3, [ip, r6, lsl #3]
   1e1fc:	bl	2b9c0 <error@@Base+0x8d80>
   1e200:	ldr	lr, [r5, #4044]	; 0xfcc
   1e204:	str	r0, [lr, #24]
   1e208:	b	1dfd4 <__assert_fail@plt+0xc2a4>
   1e20c:	sub	r3, fp, #8192	; 0x2000
   1e210:	ldr	r3, [r3, #3996]	; 0xf9c
   1e214:	ldr	r2, [r3]
   1e218:	ldrb	r2, [r2, #26]
   1e21c:	cmp	r2, #0
   1e220:	beq	1df1c <__assert_fail@plt+0xc1ec>
   1e224:	ldr	r2, [sl, #12]
   1e228:	cmp	r2, #0
   1e22c:	strbeq	r6, [sl, #16]
   1e230:	ldrbne	r1, [r2, #78]	; 0x4e
   1e234:	orrne	r1, r1, #16
   1e238:	strbne	r1, [r2, #78]	; 0x4e
   1e23c:	b	1df1c <__assert_fail@plt+0xc1ec>
   1e240:	bl	17ae8 <__assert_fail@plt+0x5db8>
   1e244:	cmp	r0, #0
   1e248:	str	r0, [sl, #12]
   1e24c:	bne	1df10 <__assert_fail@plt+0xc1e0>
   1e250:	mov	r0, r8
   1e254:	bl	17bc4 <__assert_fail@plt+0x5e94>
   1e258:	str	r0, [sl, #12]
   1e25c:	b	1df10 <__assert_fail@plt+0xc1e0>
   1e260:	sub	r3, fp, #8192	; 0x2000
   1e264:	ldr	r3, [r3, #3976]	; 0xf88
   1e268:	cmp	r3, #0
   1e26c:	beq	1d72c <__assert_fail@plt+0xb9fc>
   1e270:	ldr	r3, [r8]
   1e274:	tst	r3, #8
   1e278:	beq	1e2bc <__assert_fail@plt+0xc58c>
   1e27c:	sub	ip, fp, #8192	; 0x2000
   1e280:	ldr	r0, [ip, #4032]	; 0xfc0
   1e284:	bl	22b1c <__assert_fail@plt+0x10dec>
   1e288:	mov	r2, #5
   1e28c:	mov	r0, r6
   1e290:	movw	r1, #5640	; 0x1608
   1e294:	movt	r1, #3
   1e298:	bl	1191c <dcgettext@plt>
   1e29c:	ldr	r2, [r4, #4]
   1e2a0:	mov	r1, r0
   1e2a4:	mov	r0, #1
   1e2a8:	bl	11be0 <__printf_chk@plt>
   1e2ac:	sub	lr, fp, #8192	; 0x2000
   1e2b0:	ldr	lr, [lr, #4040]	; 0xfc8
   1e2b4:	ldr	r0, [lr]
   1e2b8:	bl	11868 <fflush@plt>
   1e2bc:	sub	r0, fp, #8192	; 0x2000
   1e2c0:	sub	r3, fp, #8192	; 0x2000
   1e2c4:	ldr	r0, [r0, #4008]	; 0xfa8
   1e2c8:	cmp	r0, #0
   1e2cc:	subeq	r2, fp, #8192	; 0x2000
   1e2d0:	subeq	sp, sp, #96	; 0x60
   1e2d4:	addeq	r1, sp, #16
   1e2d8:	streq	r1, [r2, #4008]	; 0xfa8
   1e2dc:	mov	r1, #0
   1e2e0:	ldr	r0, [r3, #4008]	; 0xfa8
   1e2e4:	mov	r2, #88	; 0x58
   1e2e8:	bl	11bc8 <memset@plt>
   1e2ec:	sub	lr, fp, #8192	; 0x2000
   1e2f0:	ldr	ip, [r4, #4]
   1e2f4:	mov	r1, #0
   1e2f8:	ldr	r0, [lr, #4008]	; 0xfa8
   1e2fc:	ldr	r3, [lr, #4032]	; 0xfc0
   1e300:	ldr	lr, [lr, #3940]	; 0xf64
   1e304:	add	r2, r3, #1
   1e308:	str	ip, [r0]
   1e30c:	add	r3, lr, #1
   1e310:	bl	1cc9c <__assert_fail@plt+0xaf6c>
   1e314:	cmp	r0, #0
   1e318:	beq	1e360 <__assert_fail@plt+0xc630>
   1e31c:	sub	r0, fp, #8192	; 0x2000
   1e320:	ldr	r3, [r4, #4]
   1e324:	mov	ip, #0
   1e328:	mov	sl, r5
   1e32c:	ldr	r0, [r0, #4008]	; 0xfa8
   1e330:	ldr	r2, [r0]
   1e334:	str	r2, [r5, #-12]
   1e338:	str	r3, [r0]
   1e33c:	str	r3, [r5, #-16]
   1e340:	sub	r3, fp, #8192	; 0x2000
   1e344:	str	r0, [r5, #-8]
   1e348:	str	ip, [r3, #4008]	; 0xfa8
   1e34c:	b	1d4e0 <__assert_fail@plt+0xb7b0>
   1e350:	ldr	r1, [r9, #20]
   1e354:	cmp	r1, #0
   1e358:	bne	1cfe4 <__assert_fail@plt+0xb2b4>
   1e35c:	b	1ce84 <__assert_fail@plt+0xb154>
   1e360:	sub	lr, fp, #8192	; 0x2000
   1e364:	ldr	lr, [lr, #4008]	; 0xfa8
   1e368:	ldr	r0, [lr, #60]	; 0x3c
   1e36c:	cmp	r0, #0
   1e370:	beq	1e378 <__assert_fail@plt+0xc648>
   1e374:	bl	2c9cc <error@@Base+0x9d8c>
   1e378:	sub	r1, fp, #8192	; 0x2000
   1e37c:	ldr	r1, [r1, #4008]	; 0xfa8
   1e380:	ldr	r0, [r1, #64]	; 0x40
   1e384:	cmp	r0, #0
   1e388:	beq	1e390 <__assert_fail@plt+0xc660>
   1e38c:	bl	2c9cc <error@@Base+0x9d8c>
   1e390:	ldr	r0, [r4, #4]
   1e394:	bl	164e0 <__assert_fail@plt+0x47b0>
   1e398:	b	1d72c <__assert_fail@plt+0xb9fc>
   1e39c:	push	{r3, r4, r5, r6, r7, lr}
   1e3a0:	movw	r4, #27308	; 0x6aac
   1e3a4:	movt	r4, #4
   1e3a8:	mov	r5, r0
   1e3ac:	mov	r6, r1
   1e3b0:	ldr	r3, [r4]
   1e3b4:	tst	r3, #8
   1e3b8:	bne	1e41c <__assert_fail@plt+0xc6ec>
   1e3bc:	mov	r1, #0
   1e3c0:	mov	r0, r5
   1e3c4:	mov	r3, r1
   1e3c8:	mov	r2, r6
   1e3cc:	bl	1cc9c <__assert_fail@plt+0xaf6c>
   1e3d0:	subs	r7, r0, #0
   1e3d4:	beq	1e3e0 <__assert_fail@plt+0xc6b0>
   1e3d8:	mov	r0, #1
   1e3dc:	pop	{r3, r4, r5, r6, r7, pc}
   1e3e0:	ldr	r0, [r5]
   1e3e4:	bl	13e84 <__assert_fail@plt+0x2154>
   1e3e8:	cmp	r0, #0
   1e3ec:	popeq	{r3, r4, r5, r6, r7, pc}
   1e3f0:	ldr	r3, [r4]
   1e3f4:	tst	r3, #8
   1e3f8:	bne	1e45c <__assert_fail@plt+0xc72c>
   1e3fc:	mov	r0, r5
   1e400:	mov	r2, r6
   1e404:	mov	r1, #1
   1e408:	mov	r3, #0
   1e40c:	bl	1cc9c <__assert_fail@plt+0xaf6c>
   1e410:	adds	r0, r0, #0
   1e414:	movne	r0, #1
   1e418:	pop	{r3, r4, r5, r6, r7, pc}
   1e41c:	mov	r0, r1
   1e420:	bl	22b1c <__assert_fail@plt+0x10dec>
   1e424:	mov	r2, #5
   1e428:	movw	r1, #5692	; 0x163c
   1e42c:	mov	r0, #0
   1e430:	movt	r1, #3
   1e434:	bl	1191c <dcgettext@plt>
   1e438:	ldr	r2, [r5]
   1e43c:	mov	r1, r0
   1e440:	mov	r0, #1
   1e444:	bl	11be0 <__printf_chk@plt>
   1e448:	movw	r3, #26888	; 0x6908
   1e44c:	movt	r3, #4
   1e450:	ldr	r0, [r3]
   1e454:	bl	11868 <fflush@plt>
   1e458:	b	1e3bc <__assert_fail@plt+0xc68c>
   1e45c:	mov	r0, r6
   1e460:	bl	22b1c <__assert_fail@plt+0x10dec>
   1e464:	mov	r0, r7
   1e468:	mov	r2, #5
   1e46c:	movw	r1, #5732	; 0x1664
   1e470:	movt	r1, #3
   1e474:	bl	1191c <dcgettext@plt>
   1e478:	ldr	r2, [r5]
   1e47c:	mov	r1, r0
   1e480:	mov	r0, #1
   1e484:	bl	11be0 <__printf_chk@plt>
   1e488:	movw	r3, #26888	; 0x6908
   1e48c:	movt	r3, #4
   1e490:	ldr	r0, [r3]
   1e494:	bl	11868 <fflush@plt>
   1e498:	b	1e3fc <__assert_fail@plt+0xc6cc>
   1e49c:	andeq	r0, r0, r0
   1e4a0:	bx	lr
   1e4a4:	ldr	r3, [r0, #20]
   1e4a8:	b	1e4bc <__assert_fail@plt+0xc78c>
   1e4ac:	ldr	r2, [r0, #12]
   1e4b0:	str	r1, [r0, #16]
   1e4b4:	ldr	r3, [r2, r3, lsl #2]
   1e4b8:	str	r3, [r0, #20]
   1e4bc:	cmp	r3, #0
   1e4c0:	beq	1e4d0 <__assert_fail@plt+0xc7a0>
   1e4c4:	ldrb	r3, [r3]
   1e4c8:	cmp	r3, #0
   1e4cc:	bne	1e4fc <__assert_fail@plt+0xc7cc>
   1e4d0:	ldr	r2, [r0, #4]
   1e4d4:	ldr	r3, [r0, #16]
   1e4d8:	ldr	r2, [r2, #16]
   1e4dc:	add	r1, r3, #1
   1e4e0:	ldr	r2, [r2, #12]
   1e4e4:	cmp	r3, r2
   1e4e8:	bne	1e4ac <__assert_fail@plt+0xc77c>
   1e4ec:	mov	r3, #0
   1e4f0:	str	r3, [r0, #20]
   1e4f4:	mov	r0, r3
   1e4f8:	bx	lr
   1e4fc:	mov	r0, #1
   1e500:	bx	lr
   1e504:	push	{r4, lr}
   1e508:	movw	r4, #26736	; 0x6870
   1e50c:	movt	r4, #4
   1e510:	movw	r3, #27160	; 0x6a18
   1e514:	movt	r3, #4
   1e518:	ldr	r0, [r4]
   1e51c:	ldr	r2, [r3]
   1e520:	cmp	r0, #0
   1e524:	add	r2, r2, #1
   1e528:	str	r2, [r3]
   1e52c:	poplt	{r4, pc}
   1e530:	bl	11d0c <close@plt>
   1e534:	mvn	r3, #0
   1e538:	str	r3, [r4]
   1e53c:	pop	{r4, pc}
   1e540:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e544:	movw	r9, #27160	; 0x6a18
   1e548:	movt	r9, #4
   1e54c:	movw	r6, #26864	; 0x68f0
   1e550:	movt	r6, #4
   1e554:	sub	sp, sp, #12
   1e558:	ldr	r3, [r9, #4]
   1e55c:	mov	r5, r0
   1e560:	ldr	r2, [r6]
   1e564:	cmp	r3, #0
   1e568:	str	r2, [sp, #4]
   1e56c:	beq	1e710 <__assert_fail@plt+0xc9e0>
   1e570:	movw	r7, #26720	; 0x6860
   1e574:	movt	r7, #4
   1e578:	ldr	r0, [r7, #4]
   1e57c:	cmp	r0, #0
   1e580:	blt	1e6b8 <__assert_fail@plt+0xc988>
   1e584:	cmp	r3, #1
   1e588:	bls	1e6c0 <__assert_fail@plt+0xc990>
   1e58c:	add	r8, sp, #8
   1e590:	mov	r3, #43	; 0x2b
   1e594:	strb	r3, [r8, #-5]!
   1e598:	b	1e5b4 <__assert_fail@plt+0xc884>
   1e59c:	bl	11b8c <__errno_location@plt>
   1e5a0:	ldr	r3, [r0]
   1e5a4:	mov	r4, r0
   1e5a8:	cmp	r3, #4
   1e5ac:	bne	1e734 <__assert_fail@plt+0xca04>
   1e5b0:	ldr	r0, [r7, #4]
   1e5b4:	mov	r1, r8
   1e5b8:	mov	r2, #1
   1e5bc:	bl	11bf8 <write@plt>
   1e5c0:	cmn	r0, #1
   1e5c4:	mov	r4, r0
   1e5c8:	beq	1e59c <__assert_fail@plt+0xc86c>
   1e5cc:	cmp	r0, #1
   1e5d0:	bne	1e72c <__assert_fail@plt+0xc9fc>
   1e5d4:	movw	r3, #27308	; 0x6aac
   1e5d8:	movt	r3, #4
   1e5dc:	ldr	r3, [r3]
   1e5e0:	tst	r3, #4
   1e5e4:	bne	1e6c8 <__assert_fail@plt+0xc998>
   1e5e8:	ldr	r2, [r9, #4]
   1e5ec:	movw	r3, #26928	; 0x6930
   1e5f0:	movt	r3, #4
   1e5f4:	sub	r2, r2, #1
   1e5f8:	str	r2, [r9, #4]
   1e5fc:	ldr	r4, [r3]
   1e600:	cmp	r4, #0
   1e604:	bne	1e6a0 <__assert_fail@plt+0xc970>
   1e608:	ldr	r0, [r5, #12]
   1e60c:	cmp	r0, #0
   1e610:	beq	1e650 <__assert_fail@plt+0xc920>
   1e614:	ldr	r3, [r5, #4]
   1e618:	ldr	r3, [r3, #16]
   1e61c:	ldr	r3, [r3, #12]
   1e620:	cmp	r3, #0
   1e624:	beq	1e64c <__assert_fail@plt+0xc91c>
   1e628:	ldr	r0, [r0, r4, lsl #2]
   1e62c:	add	r4, r4, #1
   1e630:	bl	1188c <free@plt>
   1e634:	ldr	r3, [r5, #4]
   1e638:	ldr	r0, [r5, #12]
   1e63c:	ldr	r3, [r3, #16]
   1e640:	ldr	r3, [r3, #12]
   1e644:	cmp	r3, r4
   1e648:	bhi	1e628 <__assert_fail@plt+0xc8f8>
   1e64c:	bl	1188c <free@plt>
   1e650:	ldr	r4, [r5, #8]
   1e654:	cmp	r4, #0
   1e658:	beq	1e680 <__assert_fail@plt+0xc950>
   1e65c:	ldr	r0, [r4]
   1e660:	cmp	r0, #0
   1e664:	beq	1e708 <__assert_fail@plt+0xc9d8>
   1e668:	bl	1188c <free@plt>
   1e66c:	ldr	r0, [r4, #4]!
   1e670:	cmp	r0, #0
   1e674:	bne	1e668 <__assert_fail@plt+0xc938>
   1e678:	ldr	r0, [r5, #8]
   1e67c:	bl	1188c <free@plt>
   1e680:	ldr	r2, [sp, #4]
   1e684:	ldr	r3, [r6]
   1e688:	cmp	r2, r3
   1e68c:	bne	1e750 <__assert_fail@plt+0xca20>
   1e690:	mov	r0, r5
   1e694:	add	sp, sp, #12
   1e698:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1e69c:	b	1188c <free@plt>
   1e6a0:	ldr	r2, [sp, #4]
   1e6a4:	ldr	r3, [r6]
   1e6a8:	cmp	r2, r3
   1e6ac:	bne	1e750 <__assert_fail@plt+0xca20>
   1e6b0:	add	sp, sp, #12
   1e6b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1e6b8:	mov	r2, r3
   1e6bc:	b	1e5ec <__assert_fail@plt+0xc8bc>
   1e6c0:	mov	r2, #1
   1e6c4:	b	1e5ec <__assert_fail@plt+0xc8bc>
   1e6c8:	mov	r2, #5
   1e6cc:	movw	r1, #6052	; 0x17a4
   1e6d0:	mov	r0, #0
   1e6d4:	movt	r1, #3
   1e6d8:	bl	1191c <dcgettext@plt>
   1e6dc:	ldr	r3, [r5, #4]
   1e6e0:	mov	r2, r5
   1e6e4:	ldr	r3, [r3]
   1e6e8:	mov	r1, r0
   1e6ec:	mov	r0, r4
   1e6f0:	bl	11be0 <__printf_chk@plt>
   1e6f4:	movw	r3, #26888	; 0x6908
   1e6f8:	movt	r3, #4
   1e6fc:	ldr	r0, [r3]
   1e700:	bl	11868 <fflush@plt>
   1e704:	b	1e5e8 <__assert_fail@plt+0xc8b8>
   1e708:	mov	r0, r4
   1e70c:	b	1e67c <__assert_fail@plt+0xc94c>
   1e710:	ldr	ip, [r0, #4]
   1e714:	movw	r1, #5980	; 0x175c
   1e718:	mov	r0, r3
   1e71c:	mov	r2, r5
   1e720:	movt	r1, #3
   1e724:	ldr	r3, [ip]
   1e728:	bl	22d64 <error@@Base+0x124>
   1e72c:	bl	11b8c <__errno_location@plt>
   1e730:	mov	r4, r0
   1e734:	movw	r1, #6036	; 0x1794
   1e738:	mov	r0, #0
   1e73c:	movt	r1, #3
   1e740:	mov	r2, #5
   1e744:	bl	1191c <dcgettext@plt>
   1e748:	ldr	r1, [r4]
   1e74c:	bl	22eec <error@@Base+0x2ac>
   1e750:	bl	11934 <__stack_chk_fail@plt>
   1e754:	push	{r4, r5, r6, lr}
   1e758:	mov	r4, r0
   1e75c:	ldr	ip, [sp, #16]
   1e760:	mov	r5, r1
   1e764:	mov	r6, r3
   1e768:	cmp	ip, #0
   1e76c:	bne	1e7a4 <__assert_fail@plt+0xca74>
   1e770:	cmp	r2, #0
   1e774:	bne	1e7dc <__assert_fail@plt+0xcaac>
   1e778:	mov	r0, r2
   1e77c:	movw	r1, #6112	; 0x17e0
   1e780:	mov	r2, #5
   1e784:	movt	r1, #3
   1e788:	bl	1191c <dcgettext@plt>
   1e78c:	mov	r1, r0
   1e790:	mov	r2, r4
   1e794:	mov	r3, r5
   1e798:	mov	r0, #0
   1e79c:	pop	{r4, r5, r6, lr}
   1e7a0:	b	22c40 <error@@Base>
   1e7a4:	movw	ip, #29480	; 0x7328
   1e7a8:	movt	ip, #4
   1e7ac:	ldr	r3, [ip]
   1e7b0:	cmp	r3, #0
   1e7b4:	popne	{r4, r5, r6, pc}
   1e7b8:	cmp	r2, #0
   1e7bc:	bne	1e7dc <__assert_fail@plt+0xcaac>
   1e7c0:	mov	r0, r2
   1e7c4:	movw	r1, #6088	; 0x17c8
   1e7c8:	mov	r2, #5
   1e7cc:	movt	r1, #3
   1e7d0:	bl	1191c <dcgettext@plt>
   1e7d4:	mov	r1, r0
   1e7d8:	b	1e790 <__assert_fail@plt+0xca60>
   1e7dc:	mov	r0, r2
   1e7e0:	bl	119c4 <strsignal@plt>
   1e7e4:	cmp	r6, #0
   1e7e8:	mov	r5, r0
   1e7ec:	movweq	r0, #6032	; 0x1790
   1e7f0:	movteq	r0, #3
   1e7f4:	bne	1e818 <__assert_fail@plt+0xcae8>
   1e7f8:	str	r0, [sp, #16]
   1e7fc:	mov	r2, r4
   1e800:	mov	r3, r5
   1e804:	movw	r1, #6148	; 0x1804
   1e808:	mov	r0, #0
   1e80c:	movt	r1, #3
   1e810:	pop	{r4, r5, r6, lr}
   1e814:	b	22c40 <error@@Base>
   1e818:	movw	r1, #6132	; 0x17f4
   1e81c:	mov	r2, #5
   1e820:	movt	r1, #3
   1e824:	mov	r0, #0
   1e828:	bl	1191c <dcgettext@plt>
   1e82c:	b	1e7f8 <__assert_fail@plt+0xcac8>
   1e830:	push	{r4, r5, r6, lr}
   1e834:	movw	r4, #26864	; 0x68f0
   1e838:	movt	r4, #4
   1e83c:	sub	sp, sp, #144	; 0x90
   1e840:	mov	r5, r0
   1e844:	mov	r6, r1
   1e848:	ldr	r3, [r4]
   1e84c:	mov	r1, #0
   1e850:	mov	r2, #140	; 0x8c
   1e854:	mov	r0, sp
   1e858:	str	r3, [sp, #140]	; 0x8c
   1e85c:	bl	11bc8 <memset@plt>
   1e860:	mov	r2, #0
   1e864:	cmp	r5, r2
   1e868:	mov	r1, sp
   1e86c:	mov	r0, #17
   1e870:	moveq	ip, #268435456	; 0x10000000
   1e874:	movne	ip, r2
   1e878:	movw	r3, #58628	; 0xe504
   1e87c:	movt	r3, #1
   1e880:	str	r3, [sp]
   1e884:	str	ip, [sp, #132]	; 0x84
   1e888:	bl	119e8 <sigaction@plt>
   1e88c:	cmp	r6, #0
   1e890:	beq	1e8d4 <__assert_fail@plt+0xcba4>
   1e894:	adds	r5, r5, #0
   1e898:	movne	r5, #1
   1e89c:	mov	r0, r5
   1e8a0:	bl	11940 <alarm@plt>
   1e8a4:	mov	ip, #0
   1e8a8:	movw	r3, #58528	; 0xe4a0
   1e8ac:	cmp	r5, ip
   1e8b0:	movt	r3, #1
   1e8b4:	mov	r1, sp
   1e8b8:	mov	r2, ip
   1e8bc:	mov	r0, #14
   1e8c0:	movne	r5, r3
   1e8c4:	moveq	r5, ip
   1e8c8:	str	ip, [sp, #132]	; 0x84
   1e8cc:	str	r5, [sp]
   1e8d0:	bl	119e8 <sigaction@plt>
   1e8d4:	ldr	r2, [sp, #140]	; 0x8c
   1e8d8:	ldr	r3, [r4]
   1e8dc:	cmp	r2, r3
   1e8e0:	bne	1e8ec <__assert_fail@plt+0xcbbc>
   1e8e4:	add	sp, sp, #144	; 0x90
   1e8e8:	pop	{r4, r5, r6, pc}
   1e8ec:	bl	11934 <__stack_chk_fail@plt>
   1e8f0:	movw	ip, #5784	; 0x1698
   1e8f4:	movt	ip, #3
   1e8f8:	push	{r4, r5, r6, r7, r8, lr}
   1e8fc:	mov	r4, r0
   1e900:	ldm	ip!, {r0, r1, r2, r3}
   1e904:	sub	sp, sp, #40	; 0x28
   1e908:	add	lr, sp, #4
   1e90c:	movw	r8, #26864	; 0x68f0
   1e910:	movt	r8, #4
   1e914:	stmia	lr!, {r0, r1, r2, r3}
   1e918:	ldm	ip, {r0, r1, r2, r3}
   1e91c:	ldr	r5, [r8]
   1e920:	stm	lr, {r0, r1, r2, r3}
   1e924:	mov	r1, #47	; 0x2f
   1e928:	mov	r0, r4
   1e92c:	str	r5, [sp, #36]	; 0x24
   1e930:	bl	11c7c <strrchr@plt>
   1e934:	mov	r1, #92	; 0x5c
   1e938:	mov	r5, r0
   1e93c:	mov	r0, r4
   1e940:	bl	11c7c <strrchr@plt>
   1e944:	adds	r3, r0, #0
   1e948:	mov	r6, r0
   1e94c:	movne	r3, #1
   1e950:	cmp	r5, #0
   1e954:	cmpne	r0, #0
   1e958:	beq	1e9ec <__assert_fail@plt+0xccbc>
   1e95c:	cmp	r6, r5
   1e960:	movcc	r6, r5
   1e964:	ldrb	r3, [r6]
   1e968:	ldr	r4, [sp, #4]
   1e96c:	cmp	r3, #47	; 0x2f
   1e970:	cmpne	r3, #92	; 0x5c
   1e974:	addeq	r6, r6, #1
   1e978:	cmp	r4, #0
   1e97c:	beq	1e9d0 <__assert_fail@plt+0xcca0>
   1e980:	add	r7, sp, #4
   1e984:	mov	r0, r4
   1e988:	bl	11b5c <strlen@plt>
   1e98c:	mov	r1, r4
   1e990:	mov	r5, r0
   1e994:	mov	r0, r6
   1e998:	mov	r2, r5
   1e99c:	bl	11cf4 <strncmp@plt>
   1e9a0:	cmp	r0, #0
   1e9a4:	bne	1e9c4 <__assert_fail@plt+0xcc94>
   1e9a8:	mov	r0, r6
   1e9ac:	bl	11b5c <strlen@plt>
   1e9b0:	cmp	r5, r0
   1e9b4:	bhi	1e9c4 <__assert_fail@plt+0xcc94>
   1e9b8:	ldrb	r3, [r6, r5]
   1e9bc:	cmp	r3, #0
   1e9c0:	beq	1ea04 <__assert_fail@plt+0xccd4>
   1e9c4:	ldr	r4, [r7, #4]!
   1e9c8:	cmp	r4, #0
   1e9cc:	bne	1e984 <__assert_fail@plt+0xcc54>
   1e9d0:	mov	r0, r4
   1e9d4:	ldr	r2, [sp, #36]	; 0x24
   1e9d8:	ldr	r3, [r8]
   1e9dc:	cmp	r2, r3
   1e9e0:	bne	1ea0c <__assert_fail@plt+0xccdc>
   1e9e4:	add	sp, sp, #40	; 0x28
   1e9e8:	pop	{r4, r5, r6, r7, r8, pc}
   1e9ec:	cmp	r3, #0
   1e9f0:	bne	1e964 <__assert_fail@plt+0xcc34>
   1e9f4:	cmp	r5, #0
   1e9f8:	movne	r6, r5
   1e9fc:	moveq	r6, r4
   1ea00:	b	1e964 <__assert_fail@plt+0xcc34>
   1ea04:	mov	r0, #1
   1ea08:	b	1e9d4 <__assert_fail@plt+0xcca4>
   1ea0c:	bl	11934 <__stack_chk_fail@plt>
   1ea10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea14:	add	fp, sp, #32
   1ea18:	sub	sp, sp, #84	; 0x54
   1ea1c:	movw	ip, #26864	; 0x68f0
   1ea20:	movt	ip, #4
   1ea24:	str	ip, [fp, #-72]	; 0xffffffb8
   1ea28:	mov	r7, r0
   1ea2c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ea30:	subs	ip, r1, #0
   1ea34:	str	r3, [fp, #-48]	; 0xffffffd0
   1ea38:	mov	sl, r2
   1ea3c:	movne	r3, #0
   1ea40:	ldr	r4, [fp, #4]
   1ea44:	ldr	r1, [r0]
   1ea48:	strne	r3, [ip]
   1ea4c:	movw	r3, #2956	; 0xb8c
   1ea50:	str	ip, [fp, #-116]	; 0xffffff8c
   1ea54:	movt	r3, #3
   1ea58:	str	r1, [fp, #-40]	; 0xffffffd8
   1ea5c:	str	r3, [fp, #-92]	; 0xffffffa4
   1ea60:	movw	r3, #29552	; 0x7370
   1ea64:	movt	r3, #4
   1ea68:	str	r3, [fp, #-96]	; 0xffffffa0
   1ea6c:	movw	r3, #26668	; 0x682c
   1ea70:	movt	r3, #4
   1ea74:	str	r3, [fp, #-52]	; 0xffffffcc
   1ea78:	bl	11b20 <__ctype_b_loc@plt>
   1ea7c:	ldr	ip, [fp, #-116]	; 0xffffff8c
   1ea80:	mov	r5, ip
   1ea84:	str	r0, [fp, #-56]	; 0xffffffc8
   1ea88:	ldr	ip, [fp, #-56]	; 0xffffffc8
   1ea8c:	ldr	r2, [ip]
   1ea90:	mov	r9, r7
   1ea94:	add	r7, r7, #1
   1ea98:	ldrb	r3, [r9]
   1ea9c:	lsl	r1, r3, #1
   1eaa0:	ldrh	r1, [r2, r1]
   1eaa4:	tst	r1, #1
   1eaa8:	bne	1ea90 <__assert_fail@plt+0xcd60>
   1eaac:	cmp	r3, #0
   1eab0:	beq	1ee8c <__assert_fail@plt+0xd15c>
   1eab4:	cmp	sl, #0
   1eab8:	beq	1eeb0 <__assert_fail@plt+0xd180>
   1eabc:	movw	r1, #26668	; 0x682c
   1eac0:	mov	r0, sl
   1eac4:	movt	r1, #4
   1eac8:	bl	1182c <strcmp@plt>
   1eacc:	cmp	r0, #0
   1ead0:	bne	1eaf8 <__assert_fail@plt+0xcdc8>
   1ead4:	cmp	r4, #0
   1ead8:	beq	1ecf0 <__assert_fail@plt+0xcfc0>
   1eadc:	ldrb	r3, [r4]
   1eae0:	cmp	r3, #0
   1eae4:	beq	1ecf0 <__assert_fail@plt+0xcfc0>
   1eae8:	sub	r2, r3, #9
   1eaec:	cmp	r3, #32
   1eaf0:	cmpne	r2, #1
   1eaf4:	bls	1ece4 <__assert_fail@plt+0xcfb4>
   1eaf8:	movw	r7, #29552	; 0x7370
   1eafc:	movt	r7, #4
   1eb00:	mov	r0, sl
   1eb04:	bl	11b5c <strlen@plt>
   1eb08:	mov	r8, r0
   1eb0c:	mov	r0, r9
   1eb10:	bl	11b5c <strlen@plt>
   1eb14:	mov	r4, r0
   1eb18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1eb1c:	bl	11b5c <strlen@plt>
   1eb20:	ldr	r3, [r7]
   1eb24:	cmp	r3, #0
   1eb28:	mov	r6, r0
   1eb2c:	bne	1f270 <__assert_fail@plt+0xd540>
   1eb30:	add	r3, r0, r8
   1eb34:	mov	r1, sl
   1eb38:	add	r4, r3, r4, lsl #2
   1eb3c:	mov	r2, r8
   1eb40:	add	r4, r4, #17
   1eb44:	str	r3, [fp, #-112]	; 0xffffff90
   1eb48:	bic	r4, r4, #7
   1eb4c:	mov	sl, #32
   1eb50:	sub	sp, sp, r4
   1eb54:	mov	r0, sp
   1eb58:	lsr	ip, r0, #3
   1eb5c:	str	ip, [fp, #-116]	; 0xffffff8c
   1eb60:	lsl	r7, ip, #3
   1eb64:	add	r4, r7, r8
   1eb68:	mov	r0, r7
   1eb6c:	add	r4, r4, #1
   1eb70:	bl	118c8 <memcpy@plt>
   1eb74:	ldr	ip, [fp, #-116]	; 0xffffff8c
   1eb78:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1eb7c:	mov	r0, r4
   1eb80:	mov	r2, r6
   1eb84:	strb	sl, [r8, ip, lsl #3]
   1eb88:	bl	118c8 <memcpy@plt>
   1eb8c:	strb	sl, [r4, r6]
   1eb90:	ldrb	r1, [r9]
   1eb94:	add	r4, r4, r6
   1eb98:	add	r4, r4, #1
   1eb9c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1eba0:	cmp	r1, #0
   1eba4:	beq	1ecac <__assert_fail@plt+0xcf7c>
   1eba8:	ldr	ip, [fp, #-52]	; 0xffffffcc
   1ebac:	movw	r2, #27160	; 0x6a18
   1ebb0:	movt	r2, #4
   1ebb4:	mov	sl, #92	; 0x5c
   1ebb8:	str	r3, [fp, #-48]	; 0xffffffd0
   1ebbc:	ldr	r6, [ip, #8]
   1ebc0:	mov	ip, #10
   1ebc4:	ldr	r8, [r2, #8]
   1ebc8:	mov	r2, #39	; 0x27
   1ebcc:	b	1ec50 <__assert_fail@plt+0xcf20>
   1ebd0:	cmp	r6, #0
   1ebd4:	beq	1ec34 <__assert_fail@plt+0xcf04>
   1ebd8:	cmp	r8, #0
   1ebdc:	bne	1ec34 <__assert_fail@plt+0xcf04>
   1ebe0:	cmp	r1, #39	; 0x27
   1ebe4:	cmpne	r1, #92	; 0x5c
   1ebe8:	beq	1ec2c <__assert_fail@plt+0xcefc>
   1ebec:	cmp	r1, #34	; 0x22
   1ebf0:	beq	1ec2c <__assert_fail@plt+0xcefc>
   1ebf4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ebf8:	ldr	r0, [r3]
   1ebfc:	lsl	r3, r1, #1
   1ec00:	ldrh	r3, [r0, r3]
   1ec04:	tst	r3, #8192	; 0x2000
   1ec08:	bne	1ec2c <__assert_fail@plt+0xcefc>
   1ec0c:	ldr	r0, [pc, #2132]	; 1f468 <__assert_fail@plt+0xd738>
   1ec10:	str	r2, [fp, #-112]	; 0xffffff90
   1ec14:	str	ip, [fp, #-116]	; 0xffffff8c
   1ec18:	bl	11b68 <strchr@plt>
   1ec1c:	ldr	r2, [fp, #-112]	; 0xffffff90
   1ec20:	ldr	ip, [fp, #-116]	; 0xffffff8c
   1ec24:	cmp	r0, #0
   1ec28:	beq	1ec34 <__assert_fail@plt+0xcf04>
   1ec2c:	strb	sl, [r4]
   1ec30:	add	r4, r4, #1
   1ec34:	ldrb	r3, [r9]
   1ec38:	add	r4, r4, #1
   1ec3c:	add	r9, r9, #1
   1ec40:	strb	r3, [r4, #-1]
   1ec44:	ldrb	r1, [r9]
   1ec48:	cmp	r1, #0
   1ec4c:	beq	1eca8 <__assert_fail@plt+0xcf78>
   1ec50:	cmp	r5, #0
   1ec54:	beq	1ec60 <__assert_fail@plt+0xcf30>
   1ec58:	cmp	r1, #10
   1ec5c:	beq	1ee74 <__assert_fail@plt+0xd144>
   1ec60:	cmp	r1, #92	; 0x5c
   1ec64:	bne	1ebd0 <__assert_fail@plt+0xcea0>
   1ec68:	ldrb	r3, [r9, #1]
   1ec6c:	cmp	r3, #10
   1ec70:	bne	1ebd0 <__assert_fail@plt+0xcea0>
   1ec74:	cmp	r8, #0
   1ec78:	add	r9, r9, #1
   1ec7c:	addne	r3, r4, #1
   1ec80:	addeq	r3, r4, #2
   1ec84:	strbeq	r1, [r4, #1]
   1ec88:	strb	r2, [r4]
   1ec8c:	mov	r4, r3
   1ec90:	strb	ip, [r4], #2
   1ec94:	strb	r2, [r3, #1]
   1ec98:	ldrb	r1, [r9, #1]
   1ec9c:	add	r9, r9, #1
   1eca0:	cmp	r1, #0
   1eca4:	bne	1ec50 <__assert_fail@plt+0xcf20>
   1eca8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ecac:	add	r3, r3, #2
   1ecb0:	add	r3, r7, r3
   1ecb4:	cmp	r4, r3
   1ecb8:	beq	1ee8c <__assert_fail@plt+0xd15c>
   1ecbc:	ldr	ip, [fp, #-52]	; 0xffffffcc
   1ecc0:	mov	r5, #0
   1ecc4:	strb	r5, [r4]
   1ecc8:	ldr	r3, [ip, #8]
   1eccc:	cmp	r3, r5
   1ecd0:	beq	1f418 <__assert_fail@plt+0xd6e8>
   1ecd4:	mov	sl, r5
   1ecd8:	str	r5, [fp, #-48]	; 0xffffffd0
   1ecdc:	mov	r4, r5
   1ece0:	b	1ea88 <__assert_fail@plt+0xcd58>
   1ece4:	ldrb	r3, [r4, #1]!
   1ece8:	cmp	r3, #0
   1ecec:	bne	1eae8 <__assert_fail@plt+0xcdb8>
   1ecf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ecf4:	cmp	r3, #0
   1ecf8:	beq	1ed40 <__assert_fail@plt+0xd010>
   1ecfc:	ldrb	r3, [r3]
   1ed00:	cmp	r3, #45	; 0x2d
   1ed04:	bne	1eaf8 <__assert_fail@plt+0xcdc8>
   1ed08:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1ed0c:	ldrb	r3, [ip, #1]
   1ed10:	cmp	r3, #99	; 0x63
   1ed14:	beq	1f248 <__assert_fail@plt+0xd518>
   1ed18:	cmp	r3, #101	; 0x65
   1ed1c:	bne	1eaf8 <__assert_fail@plt+0xcdc8>
   1ed20:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1ed24:	ldrb	r3, [ip, #2]
   1ed28:	cmp	r3, #99	; 0x63
   1ed2c:	bne	1eaf8 <__assert_fail@plt+0xcdc8>
   1ed30:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1ed34:	ldrb	r3, [ip, #3]
   1ed38:	cmp	r3, #0
   1ed3c:	bne	1eaf8 <__assert_fail@plt+0xcdc8>
   1ed40:	mov	r0, r9
   1ed44:	bl	11b5c <strlen@plt>
   1ed48:	add	r4, r0, #1
   1ed4c:	lsl	r0, r4, #2
   1ed50:	bl	22f44 <error@@Base+0x304>
   1ed54:	str	r0, [fp, #-60]	; 0xffffffc4
   1ed58:	mov	r0, r4
   1ed5c:	bl	22f44 <error@@Base+0x304>
   1ed60:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ed64:	add	r3, r0, r4
   1ed68:	str	r0, [r2]
   1ed6c:	ldrb	r4, [r9]
   1ed70:	str	r0, [fp, #-84]	; 0xffffffac
   1ed74:	cmp	r4, #0
   1ed78:	beq	1f3d0 <__assert_fail@plt+0xd6a0>
   1ed7c:	cmp	r0, r3
   1ed80:	bhi	1f3b0 <__assert_fail@plt+0xd680>
   1ed84:	mov	r2, #0
   1ed88:	mov	ip, #0
   1ed8c:	str	ip, [fp, #-64]	; 0xffffffc0
   1ed90:	mov	ip, r9
   1ed94:	str	r9, [fp, #-100]	; 0xffffff9c
   1ed98:	mov	r8, r2
   1ed9c:	str	r5, [fp, #-76]	; 0xffffffb4
   1eda0:	mov	r9, r3
   1eda4:	str	sl, [fp, #-104]	; 0xffffff98
   1eda8:	mov	r5, ip
   1edac:	str	r2, [fp, #-80]	; 0xffffffb0
   1edb0:	str	r2, [fp, #-68]	; 0xffffffbc
   1edb4:	str	r2, [fp, #-88]	; 0xffffffa8
   1edb8:	ldr	r6, [fp, #-84]	; 0xffffffac
   1edbc:	ldr	sl, [fp, #-96]	; 0xffffffa0
   1edc0:	b	1ee04 <__assert_fail@plt+0xd0d4>
   1edc4:	cmp	r8, r4
   1edc8:	beq	1ef60 <__assert_fail@plt+0xd230>
   1edcc:	cmp	r4, #92	; 0x5c
   1edd0:	beq	1ef88 <__assert_fail@plt+0xd258>
   1edd4:	cmp	r4, #10
   1edd8:	beq	1eff8 <__assert_fail@plt+0xd2c8>
   1eddc:	cmp	r8, #34	; 0x22
   1ede0:	beq	1efb8 <__assert_fail@plt+0xd288>
   1ede4:	strb	r4, [r6]
   1ede8:	add	r6, r6, #1
   1edec:	ldrb	r4, [r5, #1]
   1edf0:	cmp	r4, #0
   1edf4:	add	r5, r5, #1
   1edf8:	beq	1f448 <__assert_fail@plt+0xd718>
   1edfc:	cmp	r9, r6
   1ee00:	bcc	1f3b0 <__assert_fail@plt+0xd680>
   1ee04:	cmp	r8, #0
   1ee08:	bne	1edc4 <__assert_fail@plt+0xd094>
   1ee0c:	mov	r1, r4
   1ee10:	ldr	r0, [pc, #1616]	; 1f468 <__assert_fail@plt+0xd738>
   1ee14:	bl	11b68 <strchr@plt>
   1ee18:	cmp	r0, #0
   1ee1c:	bne	1efe0 <__assert_fail@plt+0xd2b0>
   1ee20:	ldr	r3, [sl]
   1ee24:	movw	r7, #29552	; 0x7370
   1ee28:	movt	r7, #4
   1ee2c:	cmp	r3, #0
   1ee30:	ldrb	r3, [r5]
   1ee34:	beq	1ee40 <__assert_fail@plt+0xd110>
   1ee38:	cmp	r3, #10
   1ee3c:	beq	1f384 <__assert_fail@plt+0xd654>
   1ee40:	cmp	r3, #34	; 0x22
   1ee44:	beq	1f128 <__assert_fail@plt+0xd3f8>
   1ee48:	bls	1eec8 <__assert_fail@plt+0xd198>
   1ee4c:	cmp	r3, #61	; 0x3d
   1ee50:	beq	1f160 <__assert_fail@plt+0xd430>
   1ee54:	cmp	r3, #92	; 0x5c
   1ee58:	beq	1f134 <__assert_fail@plt+0xd404>
   1ee5c:	cmp	r3, #39	; 0x27
   1ee60:	beq	1f128 <__assert_fail@plt+0xd3f8>
   1ee64:	strb	r3, [r6]
   1ee68:	add	r6, r6, #1
   1ee6c:	ldrb	r4, [r5, #1]
   1ee70:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1ee74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ee78:	str	r9, [r5]
   1ee7c:	add	r3, r3, #2
   1ee80:	add	r3, r7, r3
   1ee84:	cmp	r4, r3
   1ee88:	bne	1ecbc <__assert_fail@plt+0xcf8c>
   1ee8c:	mov	r3, #0
   1ee90:	ldr	ip, [fp, #-72]	; 0xffffffb8
   1ee94:	mov	r0, r3
   1ee98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ee9c:	ldr	r3, [ip]
   1eea0:	cmp	r2, r3
   1eea4:	bne	1f3cc <__assert_fail@plt+0xd69c>
   1eea8:	sub	sp, fp, #32
   1eeac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eeb0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1eeb4:	cmp	r3, #0
   1eeb8:	beq	1f258 <__assert_fail@plt+0xd528>
   1eebc:	movw	sl, #26668	; 0x682c
   1eec0:	movt	sl, #4
   1eec4:	b	1ead4 <__assert_fail@plt+0xcda4>
   1eec8:	cmp	r3, #10
   1eecc:	beq	1f024 <__assert_fail@plt+0xd2f4>
   1eed0:	cmp	r3, #32
   1eed4:	beq	1eee0 <__assert_fail@plt+0xd1b0>
   1eed8:	cmp	r3, #9
   1eedc:	bne	1ee64 <__assert_fail@plt+0xd134>
   1eee0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1eee4:	add	r6, r6, #1
   1eee8:	ldr	ip, [fp, #-68]	; 0xffffffbc
   1eeec:	eor	r3, r2, #1
   1eef0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1eef4:	add	ip, ip, #1
   1eef8:	str	ip, [fp, #-68]	; 0xffffffbc
   1eefc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   1ef00:	orrs	r2, r2, r3
   1ef04:	mov	r3, #0
   1ef08:	str	r2, [fp, #-88]	; 0xffffffa8
   1ef0c:	strb	r3, [r6, #-1]
   1ef10:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ef14:	movne	r3, #0
   1ef18:	andeq	r3, ip, #1
   1ef1c:	cmp	r3, #0
   1ef20:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ef24:	str	r6, [fp, #-108]	; 0xffffff94
   1ef28:	str	r6, [r3, r2, lsl #2]
   1ef2c:	bne	1f384 <__assert_fail@plt+0xd654>
   1ef30:	cmp	r2, #1
   1ef34:	beq	1f198 <__assert_fail@plt+0xd468>
   1ef38:	mov	r0, r5
   1ef3c:	mov	ip, #0
   1ef40:	str	ip, [fp, #-64]	; 0xffffffc0
   1ef44:	bl	23230 <error@@Base+0x5f0>
   1ef48:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ef4c:	ldr	r6, [fp, #-108]	; 0xffffff94
   1ef50:	str	r2, [fp, #-80]	; 0xffffffb0
   1ef54:	sub	r5, r0, #1
   1ef58:	ldrb	r4, [r0]
   1ef5c:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1ef60:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1ef64:	ldr	r3, [ip]
   1ef68:	cmp	r6, r3
   1ef6c:	beq	1f114 <__assert_fail@plt+0xd3e4>
   1ef70:	ldrb	r3, [r6, #-1]
   1ef74:	cmp	r3, #0
   1ef78:	beq	1f114 <__assert_fail@plt+0xd3e4>
   1ef7c:	ldrb	r4, [r5, #1]
   1ef80:	mov	r8, #0
   1ef84:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1ef88:	ldrb	r3, [r5, #1]
   1ef8c:	cmp	r3, #10
   1ef90:	bne	1eddc <__assert_fail@plt+0xd0ac>
   1ef94:	cmp	r8, #34	; 0x22
   1ef98:	add	r5, r5, #1
   1ef9c:	movne	r3, r6
   1efa0:	strbne	r4, [r3], #2
   1efa4:	ldrbne	r2, [r5]
   1efa8:	strbne	r2, [r6, #1]
   1efac:	movne	r6, r3
   1efb0:	ldrb	r4, [r5, #1]
   1efb4:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1efb8:	movw	r0, #6184	; 0x1828
   1efbc:	mov	r1, r4
   1efc0:	movt	r0, #3
   1efc4:	bl	11b68 <strchr@plt>
   1efc8:	cmp	r0, #0
   1efcc:	beq	1ede4 <__assert_fail@plt+0xd0b4>
   1efd0:	ldr	ip, [fp, #-52]	; 0xffffffcc
   1efd4:	ldr	r3, [ip, #8]
   1efd8:	cmp	r3, #0
   1efdc:	beq	1ede4 <__assert_fail@plt+0xd0b4>
   1efe0:	movw	r7, #29552	; 0x7370
   1efe4:	ldr	r9, [fp, #-100]	; 0xffffff9c
   1efe8:	ldr	r5, [fp, #-76]	; 0xffffffb4
   1efec:	movt	r7, #4
   1eff0:	ldr	sl, [fp, #-104]	; 0xffffff98
   1eff4:	b	1f220 <__assert_fail@plt+0xd4f0>
   1eff8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1effc:	cmp	r3, #0
   1f000:	beq	1eddc <__assert_fail@plt+0xd0ac>
   1f004:	mov	ip, r5
   1f008:	movw	r7, #29552	; 0x7370
   1f00c:	ldr	r9, [fp, #-100]	; 0xffffff9c
   1f010:	mov	r5, r3
   1f014:	ldr	sl, [fp, #-104]	; 0xffffff98
   1f018:	movt	r7, #4
   1f01c:	str	ip, [r3]
   1f020:	b	1f220 <__assert_fail@plt+0xd4f0>
   1f024:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1f028:	cmp	r2, #0
   1f02c:	beq	1ee64 <__assert_fail@plt+0xd134>
   1f030:	mov	ip, r5
   1f034:	str	ip, [r2]
   1f038:	ldr	ip, [fp, #-68]	; 0xffffffbc
   1f03c:	mov	r5, r2
   1f040:	ldr	r9, [fp, #-100]	; 0xffffff9c
   1f044:	ldr	sl, [fp, #-104]	; 0xffffff98
   1f048:	lsl	r3, ip, #2
   1f04c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1f050:	mov	r2, #0
   1f054:	strb	r2, [r6]
   1f058:	ldr	r2, [ip, r3]
   1f05c:	add	r3, ip, r3
   1f060:	ldrb	r2, [r2]
   1f064:	cmp	r2, #0
   1f068:	bne	1f078 <__assert_fail@plt+0xd348>
   1f06c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1f070:	cmp	r2, #0
   1f074:	beq	1f08c <__assert_fail@plt+0xd35c>
   1f078:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1f07c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1f080:	add	r3, r3, #1
   1f084:	str	r3, [fp, #-68]	; 0xffffffbc
   1f088:	add	r3, ip, r3, lsl #2
   1f08c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1f090:	cmp	r2, #1
   1f094:	mov	r2, #0
   1f098:	str	r2, [r3]
   1f09c:	bne	1f3f0 <__assert_fail@plt+0xd6c0>
   1f0a0:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1f0a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1f0a8:	ldr	r7, [ip]
   1f0ac:	cmp	r7, r3
   1f0b0:	beq	1f108 <__assert_fail@plt+0xd3d8>
   1f0b4:	mov	r8, r7
   1f0b8:	movw	r0, #2956	; 0xb8c
   1f0bc:	ldrb	r6, [r8], #1
   1f0c0:	movt	r0, #3
   1f0c4:	ldr	r4, [pc, #928]	; 1f46c <__assert_fail@plt+0xd73c>
   1f0c8:	b	1f0e0 <__assert_fail@plt+0xd3b0>
   1f0cc:	ldr	r0, [r4, #4]!
   1f0d0:	cmp	r0, #0
   1f0d4:	beq	1f394 <__assert_fail@plt+0xd664>
   1f0d8:	cmp	r0, r7
   1f0dc:	beq	1f108 <__assert_fail@plt+0xd3d8>
   1f0e0:	ldrb	r3, [r0]
   1f0e4:	cmp	r3, r6
   1f0e8:	bne	1f0cc <__assert_fail@plt+0xd39c>
   1f0ec:	cmp	r6, #0
   1f0f0:	beq	1f108 <__assert_fail@plt+0xd3d8>
   1f0f4:	add	r0, r0, #1
   1f0f8:	mov	r1, r8
   1f0fc:	bl	1182c <strcmp@plt>
   1f100:	cmp	r0, #0
   1f104:	bne	1f0cc <__assert_fail@plt+0xd39c>
   1f108:	movw	r7, #29552	; 0x7370
   1f10c:	movt	r7, #4
   1f110:	b	1f220 <__assert_fail@plt+0xd4f0>
   1f114:	mov	r2, #1
   1f118:	ldrb	r4, [r5, #1]
   1f11c:	str	r2, [fp, #-64]	; 0xffffffc0
   1f120:	mov	r8, #0
   1f124:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1f128:	mov	r8, r3
   1f12c:	ldrb	r4, [r5, #1]
   1f130:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1f134:	ldrb	r3, [r5, #1]
   1f138:	cmp	r3, #10
   1f13c:	beq	1f358 <__assert_fail@plt+0xd628>
   1f140:	cmp	r3, #0
   1f144:	bne	1f234 <__assert_fail@plt+0xd504>
   1f148:	ldr	r9, [fp, #-100]	; 0xffffff9c
   1f14c:	ldr	r5, [fp, #-76]	; 0xffffffb4
   1f150:	ldr	sl, [fp, #-104]	; 0xffffff98
   1f154:	ldr	ip, [fp, #-68]	; 0xffffffbc
   1f158:	lsl	r3, ip, #2
   1f15c:	b	1f04c <__assert_fail@plt+0xd31c>
   1f160:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1f164:	cmp	r2, #0
   1f168:	bne	1f17c <__assert_fail@plt+0xd44c>
   1f16c:	ldr	ip, [fp, #-52]	; 0xffffffcc
   1f170:	ldr	r3, [ip, #8]
   1f174:	cmp	r3, #0
   1f178:	bne	1f384 <__assert_fail@plt+0xd654>
   1f17c:	mov	r2, #1
   1f180:	mov	r3, #61	; 0x3d
   1f184:	str	r2, [fp, #-80]	; 0xffffffb0
   1f188:	strb	r3, [r6]
   1f18c:	add	r6, r6, r2
   1f190:	ldrb	r4, [r5, #1]
   1f194:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1f198:	ldr	ip, [r3]
   1f19c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1f1a0:	cmp	ip, r3
   1f1a4:	beq	1f384 <__assert_fail@plt+0xd654>
   1f1a8:	mov	r3, ip
   1f1ac:	movw	r0, #2956	; 0xb8c
   1f1b0:	ldrb	r4, [r3], #1
   1f1b4:	movt	r0, #3
   1f1b8:	str	r5, [fp, #-80]	; 0xffffffb0
   1f1bc:	mov	r5, ip
   1f1c0:	str	r7, [fp, #-64]	; 0xffffffc0
   1f1c4:	ldr	r6, [pc, #672]	; 1f46c <__assert_fail@plt+0xd73c>
   1f1c8:	mov	r7, r4
   1f1cc:	mov	r4, r3
   1f1d0:	b	1f1e8 <__assert_fail@plt+0xd4b8>
   1f1d4:	ldr	r0, [r6, #4]!
   1f1d8:	cmp	r0, #0
   1f1dc:	beq	1f37c <__assert_fail@plt+0xd64c>
   1f1e0:	cmp	r0, r5
   1f1e4:	beq	1f210 <__assert_fail@plt+0xd4e0>
   1f1e8:	ldrb	r2, [r0]
   1f1ec:	cmp	r2, r7
   1f1f0:	bne	1f1d4 <__assert_fail@plt+0xd4a4>
   1f1f4:	cmp	r7, #0
   1f1f8:	beq	1f210 <__assert_fail@plt+0xd4e0>
   1f1fc:	add	r0, r0, #1
   1f200:	mov	r1, r4
   1f204:	bl	1182c <strcmp@plt>
   1f208:	cmp	r0, #0
   1f20c:	bne	1f1d4 <__assert_fail@plt+0xd4a4>
   1f210:	ldr	r9, [fp, #-100]	; 0xffffff9c
   1f214:	ldr	r5, [fp, #-76]	; 0xffffffb4
   1f218:	ldr	sl, [fp, #-104]	; 0xffffff98
   1f21c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   1f220:	ldr	r0, [fp, #-84]	; 0xffffffac
   1f224:	bl	1188c <free@plt>
   1f228:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f22c:	bl	1188c <free@plt>
   1f230:	b	1eb00 <__assert_fail@plt+0xcdd0>
   1f234:	strb	r3, [r6]
   1f238:	add	r5, r5, #1
   1f23c:	ldrb	r4, [r5, #1]
   1f240:	add	r6, r6, #1
   1f244:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1f248:	ldrb	r3, [ip, #2]
   1f24c:	cmp	r3, #0
   1f250:	beq	1ed40 <__assert_fail@plt+0xd010>
   1f254:	b	1eaf8 <__assert_fail@plt+0xcdc8>
   1f258:	movw	ip, #65356	; 0xff4c
   1f25c:	movw	sl, #26668	; 0x682c
   1f260:	movt	ip, #2
   1f264:	movt	sl, #4
   1f268:	str	ip, [fp, #-48]	; 0xffffffd0
   1f26c:	b	1ead4 <__assert_fail@plt+0xcda4>
   1f270:	mov	r0, sl
   1f274:	mov	r4, r9
   1f278:	bl	1e8f0 <__assert_fail@plt+0xcbc0>
   1f27c:	cmp	r0, #0
   1f280:	beq	1f320 <__assert_fail@plt+0xd5f0>
   1f284:	ldr	lr, [fp, #-56]	; 0xffffffc8
   1f288:	mov	r0, r9
   1f28c:	ldrb	r3, [r9]
   1f290:	cmp	r3, #0
   1f294:	beq	1f318 <__assert_fail@plt+0xd5e8>
   1f298:	mov	r1, r9
   1f29c:	ldr	ip, [lr]
   1f2a0:	b	1f2a8 <__assert_fail@plt+0xd578>
   1f2a4:	ldrb	r3, [r1, #1]!
   1f2a8:	lsl	r2, r3, #1
   1f2ac:	mov	r9, r1
   1f2b0:	ldrh	r2, [ip, r2]
   1f2b4:	ands	r2, r2, #1
   1f2b8:	bne	1f2a4 <__assert_fail@plt+0xd574>
   1f2bc:	cmp	r3, #45	; 0x2d
   1f2c0:	beq	1f2a4 <__assert_fail@plt+0xd574>
   1f2c4:	cmp	r3, #64	; 0x40
   1f2c8:	beq	1f2a4 <__assert_fail@plt+0xd574>
   1f2cc:	cmp	r3, #43	; 0x2b
   1f2d0:	beq	1f2a4 <__assert_fail@plt+0xd574>
   1f2d4:	sub	r1, r1, #1
   1f2d8:	b	1f2e4 <__assert_fail@plt+0xd5b4>
   1f2dc:	mov	r2, #0
   1f2e0:	ldrb	r3, [r1, #1]
   1f2e4:	cmp	r3, #0
   1f2e8:	beq	1f318 <__assert_fail@plt+0xd5e8>
   1f2ec:	strb	r3, [r0], #1
   1f2f0:	add	r9, r9, #1
   1f2f4:	ldrb	r3, [r1, #1]!
   1f2f8:	cmp	r3, #92	; 0x5c
   1f2fc:	eoreq	r2, r2, #1
   1f300:	beq	1f2e0 <__assert_fail@plt+0xd5b0>
   1f304:	cmp	r3, #10
   1f308:	bne	1f2dc <__assert_fail@plt+0xd5ac>
   1f30c:	cmp	r2, #0
   1f310:	bne	1f2dc <__assert_fail@plt+0xd5ac>
   1f314:	b	1f28c <__assert_fail@plt+0xd55c>
   1f318:	mov	r3, #0
   1f31c:	strb	r3, [r0]
   1f320:	mov	r0, #16
   1f324:	bl	22f44 <error@@Base+0x304>
   1f328:	mov	r5, r0
   1f32c:	mov	r0, sl
   1f330:	bl	2312c <error@@Base+0x4ec>
   1f334:	str	r0, [r5]
   1f338:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f33c:	bl	2312c <error@@Base+0x4ec>
   1f340:	mov	r2, #0
   1f344:	str	r4, [r5, #8]
   1f348:	mov	r3, r5
   1f34c:	str	r2, [r5, #12]
   1f350:	str	r0, [r5, #4]
   1f354:	b	1ee90 <__assert_fail@plt+0xd160>
   1f358:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1f35c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1f360:	ldr	r2, [ip, r3, lsl #2]
   1f364:	add	r3, r5, #1
   1f368:	cmp	r6, r2
   1f36c:	beq	1f39c <__assert_fail@plt+0xd66c>
   1f370:	ldrb	r4, [r5, #2]
   1f374:	mov	r5, r3
   1f378:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1f37c:	ldr	r5, [fp, #-80]	; 0xffffffb0
   1f380:	b	1ef38 <__assert_fail@plt+0xd208>
   1f384:	ldr	r9, [fp, #-100]	; 0xffffff9c
   1f388:	ldr	r5, [fp, #-76]	; 0xffffffb4
   1f38c:	ldr	sl, [fp, #-104]	; 0xffffff98
   1f390:	b	1f220 <__assert_fail@plt+0xd4f0>
   1f394:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f398:	b	1ee90 <__assert_fail@plt+0xd160>
   1f39c:	add	r0, r5, #2
   1f3a0:	bl	23230 <error@@Base+0x5f0>
   1f3a4:	ldrb	r4, [r0]
   1f3a8:	sub	r5, r0, #1
   1f3ac:	b	1edf0 <__assert_fail@plt+0xd0c0>
   1f3b0:	movw	r0, #6164	; 0x1814
   1f3b4:	movw	r1, #6176	; 0x1820
   1f3b8:	movt	r0, #3
   1f3bc:	movt	r1, #3
   1f3c0:	movw	r2, #2526	; 0x9de
   1f3c4:	ldr	r3, [pc, #164]	; 1f470 <__assert_fail@plt+0xd740>
   1f3c8:	bl	11d30 <__assert_fail@plt>
   1f3cc:	bl	11934 <__stack_chk_fail@plt>
   1f3d0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1f3d4:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1f3d8:	strb	r4, [r2]
   1f3dc:	ldr	r3, [ip]
   1f3e0:	ldrb	r3, [r3]
   1f3e4:	cmp	r3, #0
   1f3e8:	bne	1f460 <__assert_fail@plt+0xd730>
   1f3ec:	str	r3, [ip]
   1f3f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f3f4:	ldr	r4, [r3]
   1f3f8:	cmp	r4, #0
   1f3fc:	bne	1ee90 <__assert_fail@plt+0xd160>
   1f400:	ldr	r0, [fp, #-84]	; 0xffffffac
   1f404:	bl	1188c <free@plt>
   1f408:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f40c:	bl	1188c <free@plt>
   1f410:	mov	r3, r4
   1f414:	b	1ee90 <__assert_fail@plt+0xd160>
   1f418:	mov	r0, r3
   1f41c:	mov	r2, #5
   1f420:	movw	r1, #6188	; 0x182c
   1f424:	movt	r1, #3
   1f428:	mov	r5, r3
   1f42c:	bl	1191c <dcgettext@plt>
   1f430:	movw	r2, #6176	; 0x1820
   1f434:	movw	r3, #3077	; 0xc05
   1f438:	movt	r2, #3
   1f43c:	mov	r1, r0
   1f440:	mov	r0, r5
   1f444:	bl	22d64 <error@@Base+0x124>
   1f448:	cmp	r8, #0
   1f44c:	ldr	r9, [fp, #-100]	; 0xffffff9c
   1f450:	ldr	r5, [fp, #-76]	; 0xffffffb4
   1f454:	ldr	sl, [fp, #-104]	; 0xffffff98
   1f458:	bne	1f108 <__assert_fail@plt+0xd3d8>
   1f45c:	b	1f154 <__assert_fail@plt+0xd424>
   1f460:	str	r4, [fp, #-68]	; 0xffffffbc
   1f464:	b	1f078 <__assert_fail@plt+0xd348>
   1f468:	andeq	r6, r4, r8, lsr r8
   1f46c:	ldrdeq	r1, [r3], -r8
   1f470:			; <UNDEFINED> instruction: 0x000316b8
   1f474:	mov	r0, #0
   1f478:	movw	r1, #29560	; 0x7378
   1f47c:	mov	r2, r0
   1f480:	movt	r1, #4
   1f484:	b	11874 <sigprocmask@plt>
   1f488:	push	{r4, lr}
   1f48c:	movw	r4, #26864	; 0x68f0
   1f490:	movt	r4, #4
   1f494:	sub	sp, sp, #136	; 0x88
   1f498:	add	r0, sp, #4
   1f49c:	ldr	r3, [r4]
   1f4a0:	str	r3, [sp, #132]	; 0x84
   1f4a4:	bl	11c64 <sigemptyset@plt>
   1f4a8:	mov	r2, #0
   1f4ac:	add	r1, sp, #4
   1f4b0:	mov	r0, #2
   1f4b4:	bl	11874 <sigprocmask@plt>
   1f4b8:	ldr	r2, [sp, #132]	; 0x84
   1f4bc:	ldr	r3, [r4]
   1f4c0:	cmp	r2, r3
   1f4c4:	bne	1f4d0 <__assert_fail@plt+0xd7a0>
   1f4c8:	add	sp, sp, #136	; 0x88
   1f4cc:	pop	{r4, pc}
   1f4d0:	bl	11934 <__stack_chk_fail@plt>
   1f4d4:	push	{r4, r5, r6, fp, lr}
   1f4d8:	add	fp, sp, #16
   1f4dc:	sub	sp, sp, #12
   1f4e0:	movw	r3, #26864	; 0x68f0
   1f4e4:	movt	r3, #4
   1f4e8:	mov	r4, r0
   1f4ec:	mov	r5, r1
   1f4f0:	ldr	r3, [r3]
   1f4f4:	str	r3, [fp, #-24]	; 0xffffffe8
   1f4f8:	bl	235a8 <error@@Base+0x968>
   1f4fc:	movw	r3, #26856	; 0x68e8
   1f500:	movt	r3, #4
   1f504:	mov	r1, r4
   1f508:	str	r5, [r3]
   1f50c:	ldr	r0, [r4]
   1f510:	bl	118d4 <execvp@plt>
   1f514:	bl	11b8c <__errno_location@plt>
   1f518:	ldr	r3, [r0]
   1f51c:	mov	r6, r0
   1f520:	cmp	r3, #2
   1f524:	beq	1f604 <__assert_fail@plt+0xd8d4>
   1f528:	cmp	r3, #8
   1f52c:	bne	1f5ec <__assert_fail@plt+0xd8bc>
   1f530:	movw	r0, #14976	; 0x3a80
   1f534:	movt	r0, #3
   1f538:	bl	11a84 <getenv@plt>
   1f53c:	ldr	r3, [r4, #4]
   1f540:	movw	r5, #26668	; 0x682c
   1f544:	movt	r5, #4
   1f548:	cmp	r0, #0
   1f54c:	movne	r5, r0
   1f550:	cmp	r3, #0
   1f554:	beq	1f654 <__assert_fail@plt+0xd924>
   1f558:	add	ip, r4, #4
   1f55c:	mov	r3, #1
   1f560:	ldr	lr, [ip, #4]!
   1f564:	add	r3, r3, #1
   1f568:	cmp	lr, #0
   1f56c:	bne	1f560 <__assert_fail@plt+0xd830>
   1f570:	add	ip, r3, #2
   1f574:	mvn	r2, #3
   1f578:	mul	r2, r2, r3
   1f57c:	lsl	ip, ip, #2
   1f580:	add	r3, ip, #14
   1f584:	ldr	r0, [r4]
   1f588:	bic	r3, r3, #7
   1f58c:	sub	sp, sp, r3
   1f590:	sub	r3, ip, #8
   1f594:	sub	ip, ip, #4
   1f598:	add	r4, r4, r3
   1f59c:	add	ip, sp, ip
   1f5a0:	mov	r3, #0
   1f5a4:	mov	r1, sp
   1f5a8:	str	r5, [sp]
   1f5ac:	str	r0, [sp, #4]
   1f5b0:	ldr	lr, [r4, r3]
   1f5b4:	sub	r3, r3, #4
   1f5b8:	cmp	r3, r2
   1f5bc:	str	lr, [ip], #-4
   1f5c0:	bne	1f5b0 <__assert_fail@plt+0xd880>
   1f5c4:	mov	r0, r5
   1f5c8:	bl	118d4 <execvp@plt>
   1f5cc:	ldr	r3, [r6]
   1f5d0:	cmp	r3, #2
   1f5d4:	beq	1f62c <__assert_fail@plt+0xd8fc>
   1f5d8:	mov	r1, r5
   1f5dc:	movw	r0, #6304	; 0x18a0
   1f5e0:	movt	r0, #3
   1f5e4:	bl	22ec8 <error@@Base+0x288>
   1f5e8:	b	1f5fc <__assert_fail@plt+0xd8cc>
   1f5ec:	movw	r0, #6304	; 0x18a0
   1f5f0:	ldr	r1, [r4]
   1f5f4:	movt	r0, #3
   1f5f8:	bl	22ec8 <error@@Base+0x288>
   1f5fc:	mov	r0, #127	; 0x7f
   1f600:	bl	118bc <_exit@plt>
   1f604:	mov	r2, #5
   1f608:	movw	r1, #6252	; 0x186c
   1f60c:	mov	r0, #0
   1f610:	movt	r1, #3
   1f614:	bl	1191c <dcgettext@plt>
   1f618:	ldr	r2, [r4]
   1f61c:	mov	r1, r0
   1f620:	mov	r0, #0
   1f624:	bl	22c40 <error@@Base>
   1f628:	b	1f5fc <__assert_fail@plt+0xd8cc>
   1f62c:	mov	r2, #5
   1f630:	movw	r1, #6276	; 0x1884
   1f634:	mov	r0, #0
   1f638:	movt	r1, #3
   1f63c:	bl	1191c <dcgettext@plt>
   1f640:	mov	r2, r5
   1f644:	mov	r1, r0
   1f648:	mov	r0, #0
   1f64c:	bl	22c40 <error@@Base>
   1f650:	b	1f5fc <__assert_fail@plt+0xd8cc>
   1f654:	mov	r3, #1
   1f658:	b	1f570 <__assert_fail@plt+0xd840>
   1f65c:	push	{r3, r4, r5, r6, r7, lr}
   1f660:	subs	r5, r0, #0
   1f664:	mov	r4, r1
   1f668:	mov	r7, r2
   1f66c:	mov	r6, r3
   1f670:	bne	1f6ac <__assert_fail@plt+0xd97c>
   1f674:	cmp	r4, #1
   1f678:	beq	1f688 <__assert_fail@plt+0xd958>
   1f67c:	mov	r0, r4
   1f680:	mov	r1, #1
   1f684:	bl	11958 <dup2@plt>
   1f688:	cmp	r5, #0
   1f68c:	bne	1f6b8 <__assert_fail@plt+0xd988>
   1f690:	cmp	r4, #1
   1f694:	beq	1f6a0 <__assert_fail@plt+0xd970>
   1f698:	mov	r0, r4
   1f69c:	bl	11d0c <close@plt>
   1f6a0:	mov	r0, r7
   1f6a4:	mov	r1, r6
   1f6a8:	bl	1f4d4 <__assert_fail@plt+0xd7a4>
   1f6ac:	mov	r1, #0
   1f6b0:	bl	11958 <dup2@plt>
   1f6b4:	b	1f674 <__assert_fail@plt+0xd944>
   1f6b8:	mov	r0, r5
   1f6bc:	bl	11d0c <close@plt>
   1f6c0:	b	1f690 <__assert_fail@plt+0xd960>
   1f6c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f6c8:	movw	r4, #29556	; 0x7374
   1f6cc:	movt	r4, #4
   1f6d0:	sub	sp, sp, #12
   1f6d4:	mov	r9, r0
   1f6d8:	mov	sl, r1
   1f6dc:	movw	r0, #6316	; 0x18ac
   1f6e0:	mov	r1, r2
   1f6e4:	movt	r0, #3
   1f6e8:	mov	r5, r2
   1f6ec:	ldr	r8, [r4]
   1f6f0:	mov	fp, r3
   1f6f4:	mov	r3, #0
   1f6f8:	str	r3, [r4]
   1f6fc:	bl	177b8 <__assert_fail@plt+0x5a88>
   1f700:	mov	r1, r5
   1f704:	mov	r7, r0
   1f708:	movw	r0, #6328	; 0x18b8
   1f70c:	movt	r0, #3
   1f710:	bl	177b8 <__assert_fail@plt+0x5a88>
   1f714:	mov	r1, r5
   1f718:	mov	r6, r0
   1f71c:	movw	r0, #6344	; 0x18c8
   1f720:	movt	r0, #3
   1f724:	bl	177b8 <__assert_fail@plt+0x5a88>
   1f728:	mov	r1, sl
   1f72c:	mov	r2, r7
   1f730:	mov	r3, r6
   1f734:	str	fp, [sp, #4]
   1f738:	str	r0, [sp]
   1f73c:	mov	r5, r0
   1f740:	str	r8, [r4]
   1f744:	mov	r0, r9
   1f748:	bl	1ea10 <__assert_fail@plt+0xcce0>
   1f74c:	mov	r4, r0
   1f750:	mov	r0, r7
   1f754:	bl	1188c <free@plt>
   1f758:	mov	r0, r6
   1f75c:	bl	1188c <free@plt>
   1f760:	mov	r0, r5
   1f764:	bl	1188c <free@plt>
   1f768:	mov	r0, r4
   1f76c:	add	sp, sp, #12
   1f770:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f774:	movw	r3, #26864	; 0x68f0
   1f778:	movt	r3, #4
   1f77c:	push	{r4, r5, r6, r7, r8, lr}
   1f780:	sub	sp, sp, #56	; 0x38
   1f784:	ldr	r6, [r0, #20]
   1f788:	ldr	r3, [r3]
   1f78c:	cmp	r6, #0
   1f790:	str	r0, [sp, #12]
   1f794:	str	r3, [sp, #52]	; 0x34
   1f798:	beq	1f948 <__assert_fail@plt+0xdc18>
   1f79c:	ldr	r2, [r0, #4]
   1f7a0:	ldr	r7, [r0, #16]
   1f7a4:	ldrb	r3, [r0, #32]
   1f7a8:	ldr	r1, [r2, #16]
   1f7ac:	sub	r7, r7, #1
   1f7b0:	ldr	r2, [r2, #20]
   1f7b4:	ldr	r8, [r1, #20]
   1f7b8:	ldrb	r1, [r8, r7]
   1f7bc:	orr	r2, r1, r2
   1f7c0:	str	r2, [sp, #28]
   1f7c4:	ldr	r2, [sp, #28]
   1f7c8:	ubfx	r2, r2, #2, #1
   1f7cc:	bfi	r3, r2, #1, #1
   1f7d0:	strb	r3, [r0, #32]
   1f7d4:	ldrb	r4, [r6]
   1f7d8:	cmp	r4, #0
   1f7dc:	beq	1f868 <__assert_fail@plt+0xdb38>
   1f7e0:	mov	r5, r6
   1f7e4:	b	1f824 <__assert_fail@plt+0xdaf4>
   1f7e8:	cmp	r4, #43	; 0x2b
   1f7ec:	beq	1f840 <__assert_fail@plt+0xdb10>
   1f7f0:	cmp	r4, #45	; 0x2d
   1f7f4:	beq	1f850 <__assert_fail@plt+0xdb20>
   1f7f8:	bl	11b20 <__ctype_b_loc@plt>
   1f7fc:	lsl	r4, r4, #1
   1f800:	ldr	r3, [r0]
   1f804:	ldrh	r3, [r3, r4]
   1f808:	tst	r3, #1
   1f80c:	beq	1f864 <__assert_fail@plt+0xdb34>
   1f810:	ldrb	r4, [r6, #1]
   1f814:	add	r5, r5, #1
   1f818:	cmp	r4, #0
   1f81c:	mov	r6, r5
   1f820:	beq	1f868 <__assert_fail@plt+0xdb38>
   1f824:	cmp	r4, #64	; 0x40
   1f828:	mov	r6, r5
   1f82c:	bne	1f7e8 <__assert_fail@plt+0xdab8>
   1f830:	ldr	r3, [sp, #28]
   1f834:	orr	r3, r3, #2
   1f838:	str	r3, [sp, #28]
   1f83c:	b	1f810 <__assert_fail@plt+0xdae0>
   1f840:	ldr	r3, [sp, #28]
   1f844:	orr	r3, r3, #1
   1f848:	str	r3, [sp, #28]
   1f84c:	b	1f810 <__assert_fail@plt+0xdae0>
   1f850:	ldr	r0, [sp, #12]
   1f854:	ldrb	r3, [r0, #32]
   1f858:	orr	r3, r3, #2
   1f85c:	strb	r3, [r0, #32]
   1f860:	b	1f810 <__assert_fail@plt+0xdae0>
   1f864:	mov	r6, r5
   1f868:	ldr	lr, [sp, #12]
   1f86c:	add	r1, sp, #56	; 0x38
   1f870:	ldr	r3, [sp, #28]
   1f874:	mov	r4, #0
   1f878:	ldrb	r2, [r8, r7]
   1f87c:	add	ip, lr, #28
   1f880:	and	r3, r3, #1
   1f884:	mov	r0, r6
   1f888:	orr	r3, r2, r3
   1f88c:	strb	r3, [r8, r7]
   1f890:	ldr	r2, [lr, #4]
   1f894:	str	r4, [r1, #-16]!
   1f898:	ldr	r3, [lr, #16]
   1f89c:	ldr	lr, [r2, #16]
   1f8a0:	ldr	lr, [lr, #20]
   1f8a4:	add	r3, lr, r3
   1f8a8:	ldrb	r3, [r3, #-1]
   1f8ac:	str	ip, [sp]
   1f8b0:	bl	1f6c4 <__assert_fail@plt+0xd994>
   1f8b4:	ldr	r3, [sp, #40]	; 0x28
   1f8b8:	cmp	r3, r4
   1f8bc:	addne	r2, r3, #1
   1f8c0:	ldrne	r1, [sp, #12]
   1f8c4:	strne	r2, [sp, #40]	; 0x28
   1f8c8:	str	r0, [sp, #16]
   1f8cc:	strbne	r4, [r3]
   1f8d0:	ldreq	r0, [sp, #12]
   1f8d4:	ldrne	r3, [sp, #40]	; 0x28
   1f8d8:	ldr	r2, [sp, #16]
   1f8dc:	streq	r3, [r0, #20]
   1f8e0:	strne	r3, [r1, #20]
   1f8e4:	cmp	r2, #0
   1f8e8:	beq	1f90c <__assert_fail@plt+0xdbdc>
   1f8ec:	movw	r3, #28224	; 0x6e40
   1f8f0:	movt	r3, #4
   1f8f4:	ldr	r3, [r3]
   1f8f8:	cmp	r3, #0
   1f8fc:	beq	1f90c <__assert_fail@plt+0xdbdc>
   1f900:	ldr	r3, [sp, #28]
   1f904:	tst	r3, #1
   1f908:	beq	1fcac <__assert_fail@plt+0xdf7c>
   1f90c:	movw	r3, #29692	; 0x73fc
   1f910:	movt	r3, #4
   1f914:	ldr	r3, [r3]
   1f918:	cmp	r3, #0
   1f91c:	beq	1f964 <__assert_fail@plt+0xdc34>
   1f920:	ldr	r3, [sp, #28]
   1f924:	tst	r3, #1
   1f928:	bne	1f964 <__assert_fail@plt+0xdc34>
   1f92c:	ldr	r0, [sp, #16]
   1f930:	cmp	r0, #0
   1f934:	beq	1f948 <__assert_fail@plt+0xdc18>
   1f938:	ldr	r0, [r0]
   1f93c:	bl	1188c <free@plt>
   1f940:	ldr	r0, [sp, #16]
   1f944:	bl	1188c <free@plt>
   1f948:	ldr	r0, [sp, #12]
   1f94c:	bl	1e4a4 <__assert_fail@plt+0xc774>
   1f950:	subs	r4, r0, #0
   1f954:	beq	1fc04 <__assert_fail@plt+0xded4>
   1f958:	ldr	r0, [sp, #12]
   1f95c:	bl	1f774 <__assert_fail@plt+0xda44>
   1f960:	b	1fbe4 <__assert_fail@plt+0xdeb4>
   1f964:	ldr	r1, [sp, #16]
   1f968:	cmp	r1, #0
   1f96c:	beq	1f948 <__assert_fail@plt+0xdc18>
   1f970:	movw	r3, #29516	; 0x734c
   1f974:	movt	r3, #4
   1f978:	ldr	r1, [r3]
   1f97c:	cmp	r1, #0
   1f980:	movwne	r1, #14520	; 0x38b8
   1f984:	movtne	r1, #3
   1f988:	beq	1fb20 <__assert_fail@plt+0xddf0>
   1f98c:	mov	r2, r6
   1f990:	mov	r0, #0
   1f994:	bl	22b4c <__assert_fail@plt+0x10e1c>
   1f998:	ldr	lr, [sp, #16]
   1f99c:	movw	r3, #28304	; 0x6e90
   1f9a0:	movt	r3, #4
   1f9a4:	ldr	r4, [lr]
   1f9a8:	ldr	r2, [r3]
   1f9ac:	cmp	r4, #0
   1f9b0:	add	r2, r2, #1
   1f9b4:	str	r2, [r3]
   1f9b8:	beq	1f9e8 <__assert_fail@plt+0xdcb8>
   1f9bc:	mov	r0, r4
   1f9c0:	bl	1e8f0 <__assert_fail@plt+0xcbc0>
   1f9c4:	cmp	r0, #0
   1f9c8:	beq	1f9e8 <__assert_fail@plt+0xdcb8>
   1f9cc:	ldr	r0, [sp, #16]
   1f9d0:	ldr	r3, [r0, #4]
   1f9d4:	cmp	r3, #0
   1f9d8:	beq	1f9e8 <__assert_fail@plt+0xdcb8>
   1f9dc:	ldrb	r2, [r3]
   1f9e0:	cmp	r2, #45	; 0x2d
   1f9e4:	beq	1fc28 <__assert_fail@plt+0xdef8>
   1f9e8:	movw	r3, #29516	; 0x734c
   1f9ec:	movt	r3, #4
   1f9f0:	ldr	r3, [r3]
   1f9f4:	cmp	r3, #0
   1f9f8:	beq	1fa08 <__assert_fail@plt+0xdcd8>
   1f9fc:	ldr	r3, [sp, #28]
   1fa00:	tst	r3, #1
   1fa04:	beq	1fc88 <__assert_fail@plt+0xdf58>
   1fa08:	movw	r3, #26888	; 0x6908
   1fa0c:	movt	r3, #4
   1fa10:	movw	r4, #26668	; 0x682c
   1fa14:	movt	r4, #4
   1fa18:	ldr	r0, [r3]
   1fa1c:	bl	11868 <fflush@plt>
   1fa20:	movw	r3, #26876	; 0x68fc
   1fa24:	movt	r3, #4
   1fa28:	ldr	r0, [r3]
   1fa2c:	bl	11868 <fflush@plt>
   1fa30:	ldr	r3, [r4, #36]	; 0x24
   1fa34:	cmn	r3, #1
   1fa38:	beq	1fcd8 <__assert_fail@plt+0xdfa8>
   1fa3c:	movw	r3, #27160	; 0x6a18
   1fa40:	movt	r3, #4
   1fa44:	ldr	lr, [sp, #12]
   1fa48:	ldr	r1, [r3, #12]
   1fa4c:	ldr	r0, [sp, #12]
   1fa50:	rsbs	r1, r1, #1
   1fa54:	ldrb	r2, [lr, #32]
   1fa58:	movcc	r1, #0
   1fa5c:	cmp	r1, #0
   1fa60:	bfi	r2, r1, #2, #1
   1fa64:	strb	r2, [lr, #32]
   1fa68:	movne	r2, #1
   1fa6c:	strne	r2, [r3, #12]
   1fa70:	ldr	r2, [r0, #8]
   1fa74:	ldrb	r3, [r0, #32]
   1fa78:	cmp	r2, #0
   1fa7c:	bfc	r3, #3, #1
   1fa80:	strb	r3, [r0, #32]
   1fa84:	beq	1fd0c <__assert_fail@plt+0xdfdc>
   1fa88:	ldr	lr, [sp, #12]
   1fa8c:	ldrb	r3, [lr, #32]
   1fa90:	tst	r3, #1
   1fa94:	beq	1fb50 <__assert_fail@plt+0xde20>
   1fa98:	tst	r3, #4
   1fa9c:	ldr	r1, [lr, #8]
   1faa0:	add	r0, sp, #36	; 0x24
   1faa4:	movweq	r3, #26668	; 0x682c
   1faa8:	movteq	r3, #4
   1faac:	movne	r2, #0
   1fab0:	ldreq	r2, [r3, #36]	; 0x24
   1fab4:	add	r3, sp, #40	; 0x28
   1fab8:	str	r0, [sp]
   1fabc:	str	r3, [sp, #4]
   1fac0:	add	r3, sp, #32
   1fac4:	ldr	r0, [sp, #16]
   1fac8:	bl	2aabc <error@@Base+0x7e7c>
   1facc:	cmp	r0, #0
   1fad0:	bne	1fb50 <__assert_fail@plt+0xde20>
   1fad4:	ldr	r0, [sp, #12]
   1fad8:	ldrb	r3, [r0, #32]
   1fadc:	tst	r3, #4
   1fae0:	beq	1fb00 <__assert_fail@plt+0xddd0>
   1fae4:	ldr	r2, [sp, #40]	; 0x28
   1fae8:	cmp	r2, #0
   1faec:	bfieq	r3, r2, #2, #1
   1faf0:	strbeq	r3, [r0, #32]
   1faf4:	movweq	r1, #27160	; 0x6a18
   1faf8:	movteq	r1, #4
   1fafc:	streq	r2, [r1, #12]
   1fb00:	ldr	lr, [sp, #12]
   1fb04:	ldr	r1, [sp, #36]	; 0x24
   1fb08:	ldr	r2, [sp, #32]
   1fb0c:	ldrb	r3, [lr, #32]
   1fb10:	str	r1, [lr, #24]
   1fb14:	bfi	r3, r2, #0, #1
   1fb18:	strb	r3, [lr, #32]
   1fb1c:	b	1fbac <__assert_fail@plt+0xde7c>
   1fb20:	ldr	r3, [sp, #28]
   1fb24:	ands	r3, r3, #2
   1fb28:	bne	1f98c <__assert_fail@plt+0xdc5c>
   1fb2c:	movw	r0, #29480	; 0x7328
   1fb30:	movt	r0, #4
   1fb34:	movw	r2, #14520	; 0x38b8
   1fb38:	movt	r2, #3
   1fb3c:	ldr	r1, [r0]
   1fb40:	cmp	r1, #0
   1fb44:	movne	r1, r3
   1fb48:	moveq	r1, r2
   1fb4c:	b	1f98c <__assert_fail@plt+0xdc5c>
   1fb50:	mov	r0, #0
   1fb54:	movw	r1, #29560	; 0x7378
   1fb58:	mov	r2, r0
   1fb5c:	movt	r1, #4
   1fb60:	bl	11874 <sigprocmask@plt>
   1fb64:	ldr	r0, [sp, #12]
   1fb68:	movw	r3, #26856	; 0x68e8
   1fb6c:	movt	r3, #4
   1fb70:	ldrb	r2, [r0, #32]
   1fb74:	ldr	r3, [r3]
   1fb78:	bfc	r2, #0, #1
   1fb7c:	strb	r2, [r0, #32]
   1fb80:	str	r3, [sp, #20]
   1fb84:	bl	11c1c <vfork@plt>
   1fb88:	movw	r3, #26856	; 0x68e8
   1fb8c:	movt	r3, #4
   1fb90:	ldr	r1, [sp, #12]
   1fb94:	cmp	r0, #0
   1fb98:	ldr	r2, [sp, #20]
   1fb9c:	str	r0, [r1, #24]
   1fba0:	str	r2, [r3]
   1fba4:	beq	1fd68 <__assert_fail@plt+0xe038>
   1fba8:	blt	1fd20 <__assert_fail@plt+0xdff0>
   1fbac:	ldr	lr, [sp, #12]
   1fbb0:	movw	r3, #27160	; 0x6a18
   1fbb4:	movt	r3, #4
   1fbb8:	mov	r1, #2
   1fbbc:	ldr	r2, [r3, #16]
   1fbc0:	ldr	r0, [lr, #4]
   1fbc4:	add	r2, r2, #1
   1fbc8:	str	r2, [r3, #16]
   1fbcc:	bl	18c28 <__assert_fail@plt+0x6ef8>
   1fbd0:	ldr	r1, [sp, #16]
   1fbd4:	ldr	r0, [r1]
   1fbd8:	bl	1188c <free@plt>
   1fbdc:	ldr	r0, [sp, #16]
   1fbe0:	bl	1188c <free@plt>
   1fbe4:	movw	r3, #26864	; 0x68f0
   1fbe8:	movt	r3, #4
   1fbec:	ldr	r2, [sp, #52]	; 0x34
   1fbf0:	ldr	r3, [r3]
   1fbf4:	cmp	r2, r3
   1fbf8:	bne	1fd64 <__assert_fail@plt+0xe034>
   1fbfc:	add	sp, sp, #56	; 0x38
   1fc00:	pop	{r4, r5, r6, r7, r8, pc}
   1fc04:	ldr	r2, [sp, #12]
   1fc08:	mov	r1, #2
   1fc0c:	ldr	r0, [r2, #4]
   1fc10:	bl	18c28 <__assert_fail@plt+0x6ef8>
   1fc14:	ldr	r3, [sp, #12]
   1fc18:	ldr	r0, [r3, #4]
   1fc1c:	strh	r4, [r0, #76]	; 0x4c
   1fc20:	bl	28888 <error@@Base+0x5c48>
   1fc24:	b	1fbe4 <__assert_fail@plt+0xdeb4>
   1fc28:	ldrb	r2, [r3, #1]
   1fc2c:	cmp	r2, #99	; 0x63
   1fc30:	beq	1fd54 <__assert_fail@plt+0xe024>
   1fc34:	cmp	r2, #101	; 0x65
   1fc38:	bne	1f9e8 <__assert_fail@plt+0xdcb8>
   1fc3c:	ldrb	r2, [r3, #2]
   1fc40:	cmp	r2, #99	; 0x63
   1fc44:	bne	1f9e8 <__assert_fail@plt+0xdcb8>
   1fc48:	ldrb	r3, [r3, #3]
   1fc4c:	cmp	r3, #0
   1fc50:	bne	1f9e8 <__assert_fail@plt+0xdcb8>
   1fc54:	ldr	r1, [sp, #16]
   1fc58:	ldr	r3, [r1, #8]
   1fc5c:	cmp	r3, #0
   1fc60:	beq	1f9e8 <__assert_fail@plt+0xdcb8>
   1fc64:	ldrb	r2, [r3]
   1fc68:	cmp	r2, #58	; 0x3a
   1fc6c:	bne	1f9e8 <__assert_fail@plt+0xdcb8>
   1fc70:	ldrb	r3, [r3, #1]
   1fc74:	cmp	r3, #0
   1fc78:	bne	1f9e8 <__assert_fail@plt+0xdcb8>
   1fc7c:	ldr	r3, [r1, #12]
   1fc80:	cmp	r3, #0
   1fc84:	bne	1f9e8 <__assert_fail@plt+0xdcb8>
   1fc88:	mov	r0, r4
   1fc8c:	bl	1188c <free@plt>
   1fc90:	ldr	r0, [sp, #16]
   1fc94:	bl	1188c <free@plt>
   1fc98:	ldr	r0, [sp, #12]
   1fc9c:	bl	1e4a4 <__assert_fail@plt+0xc774>
   1fca0:	subs	r4, r0, #0
   1fca4:	beq	1fc04 <__assert_fail@plt+0xded4>
   1fca8:	b	1f958 <__assert_fail@plt+0xdc28>
   1fcac:	ldr	r0, [r2]
   1fcb0:	bl	1188c <free@plt>
   1fcb4:	ldr	r0, [sp, #16]
   1fcb8:	bl	1188c <free@plt>
   1fcbc:	ldr	lr, [sp, #12]
   1fcc0:	mov	r2, #1
   1fcc4:	ldr	r3, [lr, #4]
   1fcc8:	mov	r0, r3
   1fccc:	strh	r2, [r3, #76]	; 0x4c
   1fcd0:	bl	28888 <error@@Base+0x5c48>
   1fcd4:	b	1fbe4 <__assert_fail@plt+0xdeb4>
   1fcd8:	add	r0, sp, #44	; 0x2c
   1fcdc:	bl	11c34 <pipe@plt>
   1fce0:	cmp	r0, #0
   1fce4:	bne	1fa3c <__assert_fail@plt+0xdd0c>
   1fce8:	ldr	r0, [sp, #48]	; 0x30
   1fcec:	bl	11d0c <close@plt>
   1fcf0:	ldr	r3, [sp, #44]	; 0x2c
   1fcf4:	mov	r1, #2
   1fcf8:	mov	r2, #1
   1fcfc:	mov	r0, r3
   1fd00:	str	r3, [r4, #36]	; 0x24
   1fd04:	bl	11b80 <fcntl@plt>
   1fd08:	b	1fa3c <__assert_fail@plt+0xdd0c>
   1fd0c:	ldr	r0, [r0, #4]
   1fd10:	bl	2d080 <error@@Base+0xa440>
   1fd14:	ldr	r2, [sp, #12]
   1fd18:	str	r0, [r2, #8]
   1fd1c:	b	1fa88 <__assert_fail@plt+0xdd58>
   1fd20:	bl	1f488 <__assert_fail@plt+0xd758>
   1fd24:	movw	r0, #6352	; 0x18d0
   1fd28:	movw	r1, #6032	; 0x1790
   1fd2c:	movt	r0, #3
   1fd30:	movt	r1, #3
   1fd34:	bl	22ec8 <error@@Base+0x288>
   1fd38:	ldr	r2, [sp, #12]
   1fd3c:	ldr	r3, [r2, #4]
   1fd40:	mov	r2, #2
   1fd44:	mov	r0, r3
   1fd48:	strh	r2, [r3, #76]	; 0x4c
   1fd4c:	bl	28888 <error@@Base+0x5c48>
   1fd50:	b	1fbe4 <__assert_fail@plt+0xdeb4>
   1fd54:	ldrb	r3, [r3, #2]
   1fd58:	cmp	r3, #0
   1fd5c:	beq	1fc54 <__assert_fail@plt+0xdf24>
   1fd60:	b	1f9e8 <__assert_fail@plt+0xdcb8>
   1fd64:	bl	11934 <__stack_chk_fail@plt>
   1fd68:	bl	1f488 <__assert_fail@plt+0xd758>
   1fd6c:	ldr	r3, [sp, #28]
   1fd70:	tst	r3, #1
   1fd74:	bne	1fd98 <__assert_fail@plt+0xe068>
   1fd78:	movw	r4, #26720	; 0x6860
   1fd7c:	movt	r4, #4
   1fd80:	ldr	r0, [r4]
   1fd84:	cmp	r0, #0
   1fd88:	blt	1fd98 <__assert_fail@plt+0xe068>
   1fd8c:	bl	11d0c <close@plt>
   1fd90:	ldr	r0, [r4, #4]
   1fd94:	bl	11d0c <close@plt>
   1fd98:	movw	r3, #26736	; 0x6870
   1fd9c:	movt	r3, #4
   1fda0:	ldr	r0, [r3]
   1fda4:	cmp	r0, #0
   1fda8:	blt	1fdb0 <__assert_fail@plt+0xe080>
   1fdac:	bl	11d0c <close@plt>
   1fdb0:	movw	r1, #29456	; 0x7310
   1fdb4:	movt	r1, #4
   1fdb8:	ldrd	r2, [r1]
   1fdbc:	orrs	lr, r2, r3
   1fdc0:	beq	1fdcc <__assert_fail@plt+0xe09c>
   1fdc4:	mov	r0, #3
   1fdc8:	bl	11850 <setrlimit64@plt>
   1fdcc:	ldr	r0, [sp, #12]
   1fdd0:	ldr	r1, [sp, #12]
   1fdd4:	ldr	r2, [sp, #16]
   1fdd8:	ldrb	r3, [r0, #32]
   1fddc:	tst	r3, #4
   1fde0:	movweq	r3, #26668	; 0x682c
   1fde4:	movteq	r3, #4
   1fde8:	movne	r0, #0
   1fdec:	ldreq	r0, [r3, #36]	; 0x24
   1fdf0:	ldr	r3, [r1, #8]
   1fdf4:	mov	r1, #1
   1fdf8:	bl	1f65c <__assert_fail@plt+0xd92c>
   1fdfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fe00:	sub	sp, sp, #60	; 0x3c
   1fe04:	movw	r3, #27160	; 0x6a18
   1fe08:	movt	r3, #4
   1fe0c:	str	r3, [sp, #8]
   1fe10:	movw	r2, #26864	; 0x68f0
   1fe14:	str	r1, [sp, #16]
   1fe18:	movt	r2, #4
   1fe1c:	ldr	r1, [sp, #8]
   1fe20:	movw	r9, #26888	; 0x6908
   1fe24:	ldr	r3, [r2]
   1fe28:	movw	r6, #27308	; 0x6aac
   1fe2c:	movt	r9, #4
   1fe30:	movt	r6, #4
   1fe34:	ldr	r4, [r1, #20]
   1fe38:	str	r2, [sp, #28]
   1fe3c:	movw	r2, #27148	; 0x6a0c
   1fe40:	str	r3, [sp, #52]	; 0x34
   1fe44:	movt	r2, #4
   1fe48:	mov	r3, #1
   1fe4c:	str	r0, [sp, #12]
   1fe50:	str	r2, [sp, #20]
   1fe54:	str	r3, [sp, #24]
   1fe58:	cmp	r4, #0
   1fe5c:	beq	20324 <__assert_fail@plt+0xe5f4>
   1fe60:	ldr	r3, [sp, #24]
   1fe64:	ldr	r1, [sp, #12]
   1fe68:	orrs	r3, r3, r1
   1fe6c:	beq	20334 <__assert_fail@plt+0xe604>
   1fe70:	ldr	r1, [sp, #12]
   1fe74:	ldr	r2, [sp, #16]
   1fe78:	cmp	r1, #0
   1fe7c:	cmpne	r2, #0
   1fe80:	bne	203f4 <__assert_fail@plt+0xe6c4>
   1fe84:	ldr	r2, [sp, #8]
   1fe88:	ldr	r3, [r2]
   1fe8c:	ldr	r2, [sp, #20]
   1fe90:	cmp	r3, #0
   1fe94:	subne	r3, r3, #1
   1fe98:	movwne	r1, #27160	; 0x6a18
   1fe9c:	ldr	ip, [r2]
   1fea0:	movtne	r1, #4
   1fea4:	strne	r3, [r1]
   1fea8:	adds	sl, ip, #0
   1feac:	movne	sl, #1
   1feb0:	cmp	r4, #0
   1feb4:	beq	1ff7c <__assert_fail@plt+0xe24c>
   1feb8:	ldr	fp, [pc, #1824]	; 205e0 <__assert_fail@plt+0xe8b0>
   1febc:	mov	r5, #0
   1fec0:	b	1fed0 <__assert_fail@plt+0xe1a0>
   1fec4:	ldr	r4, [r4]
   1fec8:	cmp	r4, #0
   1fecc:	beq	1ff74 <__assert_fail@plt+0xe244>
   1fed0:	ldr	r2, [r6]
   1fed4:	ldrb	r3, [r4, #32]
   1fed8:	tst	r2, #4
   1fedc:	and	r3, r3, #1
   1fee0:	eor	r2, r3, #1
   1fee4:	orr	r5, r5, r3
   1fee8:	orr	sl, sl, r2
   1feec:	beq	1fec4 <__assert_fail@plt+0xe194>
   1fef0:	mov	r2, #5
   1fef4:	movw	r1, #6396	; 0x18fc
   1fef8:	mov	r0, #0
   1fefc:	movt	r1, #3
   1ff00:	bl	1191c <dcgettext@plt>
   1ff04:	ldr	r2, [r4, #4]
   1ff08:	ldr	ip, [r4, #24]
   1ff0c:	movw	r3, #3300	; 0xce4
   1ff10:	mov	r1, #1
   1ff14:	movt	r3, #3
   1ff18:	ldr	r7, [r2]
   1ff1c:	mov	r2, #100	; 0x64
   1ff20:	str	ip, [sp]
   1ff24:	mov	r8, r0
   1ff28:	ldr	r0, [pc, #1712]	; 205e0 <__assert_fail@plt+0xe8b0>
   1ff2c:	bl	11b98 <__sprintf_chk@plt>
   1ff30:	ldrb	r3, [r4, #32]
   1ff34:	tst	r3, #1
   1ff38:	movweq	r0, #6032	; 0x1790
   1ff3c:	movteq	r0, #3
   1ff40:	bne	20350 <__assert_fail@plt+0xe620>
   1ff44:	mov	r2, r4
   1ff48:	mov	r1, r8
   1ff4c:	str	r0, [sp, #4]
   1ff50:	mov	r3, r7
   1ff54:	str	fp, [sp]
   1ff58:	mov	r0, #1
   1ff5c:	bl	11be0 <__printf_chk@plt>
   1ff60:	ldr	r0, [r9]
   1ff64:	bl	11868 <fflush@plt>
   1ff68:	ldr	r4, [r4]
   1ff6c:	cmp	r4, #0
   1ff70:	bne	1fed0 <__assert_fail@plt+0xe1a0>
   1ff74:	cmp	r5, #0
   1ff78:	bne	20420 <__assert_fail@plt+0xe6f0>
   1ff7c:	mov	r4, #0
   1ff80:	cmp	sl, #0
   1ff84:	beq	20448 <__assert_fail@plt+0xe718>
   1ff88:	ldr	r3, [sp, #12]
   1ff8c:	cmp	r3, #0
   1ff90:	bne	1ffa8 <__assert_fail@plt+0xe278>
   1ff94:	b	20528 <__assert_fail@plt+0xe7f8>
   1ff98:	bl	11b8c <__errno_location@plt>
   1ff9c:	ldr	r3, [r0]
   1ffa0:	cmp	r3, #4
   1ffa4:	bne	2051c <__assert_fail@plt+0xe7ec>
   1ffa8:	add	r0, sp, #36	; 0x24
   1ffac:	bl	11988 <wait@plt>
   1ffb0:	cmn	r0, #1
   1ffb4:	beq	1ff98 <__assert_fail@plt+0xe268>
   1ffb8:	cmp	r0, #0
   1ffbc:	blt	2051c <__assert_fail@plt+0xe7ec>
   1ffc0:	beq	20448 <__assert_fail@plt+0xe718>
   1ffc4:	ldr	r3, [sp, #8]
   1ffc8:	ldr	r1, [sp, #36]	; 0x24
   1ffcc:	ldr	r2, [r3, #16]
   1ffd0:	and	r3, r1, #127	; 0x7f
   1ffd4:	add	ip, r3, #1
   1ffd8:	sbfx	ip, ip, #1, #7
   1ffdc:	cmp	ip, #0
   1ffe0:	ubfx	ip, r1, #8, #8
   1ffe4:	and	r1, r1, #128	; 0x80
   1ffe8:	str	ip, [sp, #40]	; 0x28
   1ffec:	movle	r3, #0
   1fff0:	cmp	r2, #0
   1fff4:	str	r3, [sp, #44]	; 0x2c
   1fff8:	str	r1, [sp, #48]	; 0x30
   1fffc:	movwne	r1, #27160	; 0x6a18
   20000:	movtne	r1, #4
   20004:	subne	r2, r2, #1
   20008:	strne	r2, [r1, #16]
   2000c:	ldr	r1, [sp, #20]
   20010:	ldr	r2, [r1]
   20014:	cmp	r0, r2
   20018:	beq	2058c <__assert_fail@plt+0xe85c>
   2001c:	mov	r2, #0
   20020:	cmp	r3, #0
   20024:	movne	r7, #1
   20028:	bne	20038 <__assert_fail@plt+0xe308>
   2002c:	ldr	r7, [sp, #40]	; 0x28
   20030:	adds	r7, r7, #0
   20034:	movne	r7, #1
   20038:	ldr	r3, [sp, #8]
   2003c:	ldr	r4, [r3, #20]
   20040:	cmp	r4, #0
   20044:	beq	20324 <__assert_fail@plt+0xe5f4>
   20048:	mov	r5, r4
   2004c:	mov	fp, #0
   20050:	b	20068 <__assert_fail@plt+0xe338>
   20054:	ldr	r3, [r5]
   20058:	cmp	r3, #0
   2005c:	beq	1fe58 <__assert_fail@plt+0xe128>
   20060:	mov	fp, r5
   20064:	mov	r5, r3
   20068:	ldrb	r3, [r5, #32]
   2006c:	and	r3, r3, #1
   20070:	cmp	r3, r2
   20074:	bne	20054 <__assert_fail@plt+0xe324>
   20078:	ldr	r3, [r5, #24]
   2007c:	cmp	r3, r0
   20080:	bne	20054 <__assert_fail@plt+0xe324>
   20084:	ldr	r3, [r6]
   20088:	tst	r3, #4
   2008c:	beq	2010c <__assert_fail@plt+0xe3dc>
   20090:	cmp	r7, #0
   20094:	mov	r2, #5
   20098:	movwne	r1, #6464	; 0x1940
   2009c:	movweq	r1, #6500	; 0x1964
   200a0:	movtne	r1, #3
   200a4:	movteq	r1, #3
   200a8:	movne	r0, #0
   200ac:	moveq	r0, r7
   200b0:	bl	1191c <dcgettext@plt>
   200b4:	ldr	lr, [r5, #24]
   200b8:	movw	r3, #3300	; 0xce4
   200bc:	mov	r1, #1
   200c0:	movt	r3, #3
   200c4:	mov	r2, #100	; 0x64
   200c8:	str	lr, [sp]
   200cc:	mov	r4, r0
   200d0:	ldr	r0, [pc, #1288]	; 205e0 <__assert_fail@plt+0xe8b0>
   200d4:	bl	11b98 <__sprintf_chk@plt>
   200d8:	ldrb	r3, [r5, #32]
   200dc:	tst	r3, #1
   200e0:	movweq	r0, #6032	; 0x1790
   200e4:	movteq	r0, #3
   200e8:	bne	20488 <__assert_fail@plt+0xe758>
   200ec:	str	r0, [sp]
   200f0:	mov	r1, r4
   200f4:	mov	r0, #1
   200f8:	mov	r2, r5
   200fc:	ldr	r3, [pc, #1244]	; 205e0 <__assert_fail@plt+0xe8b0>
   20100:	bl	11be0 <__printf_chk@plt>
   20104:	ldr	r0, [r9]
   20108:	bl	11868 <fflush@plt>
   2010c:	ldr	r0, [r5, #28]
   20110:	cmp	r0, #0
   20114:	beq	20168 <__assert_fail@plt+0xe438>
   20118:	ldr	r3, [r6]
   2011c:	tst	r3, #4
   20120:	beq	20154 <__assert_fail@plt+0xe424>
   20124:	mov	r2, #5
   20128:	movw	r1, #6536	; 0x1988
   2012c:	mov	r0, #0
   20130:	movt	r1, #3
   20134:	bl	1191c <dcgettext@plt>
   20138:	ldr	r2, [r5, #28]
   2013c:	mov	r1, r0
   20140:	mov	r0, #1
   20144:	bl	11be0 <__printf_chk@plt>
   20148:	ldr	r0, [r9]
   2014c:	bl	11868 <fflush@plt>
   20150:	ldr	r0, [r5, #28]
   20154:	bl	11cac <remove@plt>
   20158:	ldr	r0, [r5, #28]
   2015c:	bl	1188c <free@plt>
   20160:	mov	r3, #0
   20164:	str	r3, [r5, #28]
   20168:	ldrb	r3, [r5, #32]
   2016c:	tst	r3, #4
   20170:	ubfx	r8, r3, #4, #1
   20174:	ldrne	r1, [sp, #8]
   20178:	movne	r2, #0
   2017c:	strne	r2, [r1, #12]
   20180:	cmp	r7, #0
   20184:	beq	20388 <__assert_fail@plt+0xe658>
   20188:	tst	r3, #2
   2018c:	bne	20368 <__assert_fail@plt+0xe638>
   20190:	movw	r3, #28228	; 0x6e44
   20194:	movt	r3, #4
   20198:	ldr	r3, [r3]
   2019c:	cmp	r3, #0
   201a0:	bne	20368 <__assert_fail@plt+0xe638>
   201a4:	cmp	r8, #0
   201a8:	beq	20548 <__assert_fail@plt+0xe818>
   201ac:	movw	r4, #26668	; 0x682c
   201b0:	movt	r4, #4
   201b4:	ldr	r3, [r5, #4]
   201b8:	mov	r2, #2
   201bc:	ldr	r1, [r4, #40]	; 0x28
   201c0:	cmn	r1, #1
   201c4:	strh	r2, [r3, #76]	; 0x4c
   201c8:	beq	20568 <__assert_fail@plt+0xe838>
   201cc:	ldr	r3, [sp, #44]	; 0x2c
   201d0:	cmp	r3, #0
   201d4:	bne	201e4 <__assert_fail@plt+0xe4b4>
   201d8:	ldr	r3, [r4, #40]	; 0x28
   201dc:	cmp	r3, #0
   201e0:	beq	201ec <__assert_fail@plt+0xe4bc>
   201e4:	mov	r0, r5
   201e8:	bl	157dc <__assert_fail@plt+0x3aac>
   201ec:	movw	r4, #26928	; 0x6930
   201f0:	movt	r4, #4
   201f4:	mov	r7, #1
   201f8:	ldr	r3, [r4]
   201fc:	cmp	r3, #0
   20200:	beq	203d0 <__assert_fail@plt+0xe6a0>
   20204:	ldr	r3, [r6]
   20208:	tst	r3, #4
   2020c:	beq	2027c <__assert_fail@plt+0xe54c>
   20210:	mov	r2, #5
   20214:	movw	r1, #6588	; 0x19bc
   20218:	mov	r0, #0
   2021c:	movt	r1, #3
   20220:	bl	1191c <dcgettext@plt>
   20224:	ldr	lr, [r5, #24]
   20228:	movw	r3, #3300	; 0xce4
   2022c:	mov	r1, #1
   20230:	movt	r3, #3
   20234:	mov	r2, #100	; 0x64
   20238:	str	lr, [sp]
   2023c:	mov	sl, r0
   20240:	ldr	r0, [pc, #920]	; 205e0 <__assert_fail@plt+0xe8b0>
   20244:	bl	11b98 <__sprintf_chk@plt>
   20248:	ldrb	r3, [r5, #32]
   2024c:	tst	r3, #1
   20250:	movweq	r0, #6032	; 0x1790
   20254:	movteq	r0, #3
   20258:	bne	204a0 <__assert_fail@plt+0xe770>
   2025c:	str	r0, [sp]
   20260:	mov	r1, sl
   20264:	mov	r0, #1
   20268:	mov	r2, r5
   2026c:	ldr	r3, [pc, #876]	; 205e0 <__assert_fail@plt+0xe8b0>
   20270:	bl	11be0 <__printf_chk@plt>
   20274:	ldr	r0, [r9]
   20278:	bl	11868 <fflush@plt>
   2027c:	mov	r0, #0
   20280:	movw	r1, #29560	; 0x7378
   20284:	mov	r2, r0
   20288:	movt	r1, #4
   2028c:	bl	11874 <sigprocmask@plt>
   20290:	ldr	r1, [sp, #8]
   20294:	ldr	r3, [r1, #128]	; 0x80
   20298:	cmp	r3, #0
   2029c:	movwne	r2, #27160	; 0x6a18
   202a0:	movtne	r2, #4
   202a4:	subne	r3, r3, #1
   202a8:	strne	r3, [r2, #128]	; 0x80
   202ac:	cmp	fp, #0
   202b0:	ldr	r3, [r5]
   202b4:	mov	r0, r5
   202b8:	ldreq	r1, [sp, #8]
   202bc:	strne	r3, [fp]
   202c0:	streq	r3, [r1, #20]
   202c4:	bl	1e540 <__assert_fail@plt+0xc810>
   202c8:	bl	1f488 <__assert_fail@plt+0xd758>
   202cc:	ldr	r2, [sp, #16]
   202d0:	cmp	r2, #0
   202d4:	movne	r7, #0
   202d8:	andeq	r7, r7, #1
   202dc:	cmp	r7, #0
   202e0:	beq	2030c <__assert_fail@plt+0xe5dc>
   202e4:	cmp	r8, #0
   202e8:	bne	2030c <__assert_fail@plt+0xe5dc>
   202ec:	movw	r3, #29520	; 0x7350
   202f0:	movt	r3, #4
   202f4:	ldr	r3, [r3]
   202f8:	cmp	r3, #0
   202fc:	bne	2030c <__assert_fail@plt+0xe5dc>
   20300:	ldr	r3, [r4]
   20304:	cmp	r3, #0
   20308:	beq	205cc <__assert_fail@plt+0xe89c>
   2030c:	ldr	r3, [sp, #8]
   20310:	mov	r1, #0
   20314:	str	r1, [sp, #12]
   20318:	ldr	r4, [r3, #20]
   2031c:	cmp	r4, #0
   20320:	bne	1fe60 <__assert_fail@plt+0xe130>
   20324:	ldr	r2, [sp, #20]
   20328:	ldr	r3, [r2]
   2032c:	cmp	r3, #0
   20330:	bne	1fe60 <__assert_fail@plt+0xe130>
   20334:	ldr	r1, [sp, #28]
   20338:	ldr	r2, [sp, #52]	; 0x34
   2033c:	ldr	r3, [r1]
   20340:	cmp	r2, r3
   20344:	bne	205d4 <__assert_fail@plt+0xe8a4>
   20348:	add	sp, sp, #60	; 0x3c
   2034c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20350:	movw	r1, #6428	; 0x191c
   20354:	mov	r2, #5
   20358:	movt	r1, #3
   2035c:	mov	r0, #0
   20360:	bl	1191c <dcgettext@plt>
   20364:	b	1ff44 <__assert_fail@plt+0xe214>
   20368:	ldr	r3, [r5, #4]
   2036c:	mov	lr, #1
   20370:	ldr	r1, [sp, #40]	; 0x28
   20374:	ldr	r2, [sp, #44]	; 0x2c
   20378:	ldr	r0, [r3]
   2037c:	ldr	r3, [sp, #48]	; 0x30
   20380:	str	lr, [sp]
   20384:	bl	1e754 <__assert_fail@plt+0xca24>
   20388:	mov	r0, r5
   2038c:	bl	1e4a4 <__assert_fail@plt+0xc774>
   20390:	cmp	r0, #0
   20394:	beq	203dc <__assert_fail@plt+0xe6ac>
   20398:	movw	r4, #26928	; 0x6930
   2039c:	movt	r4, #4
   203a0:	ldr	r0, [r4]
   203a4:	cmp	r0, #0
   203a8:	beq	204b8 <__assert_fail@plt+0xe788>
   203ac:	ldr	r3, [r5, #4]
   203b0:	mov	r2, #2
   203b4:	strh	r2, [r3, #76]	; 0x4c
   203b8:	mov	r0, r5
   203bc:	bl	157dc <__assert_fail@plt+0x3aac>
   203c0:	ldr	r3, [r4]
   203c4:	mov	r7, #0
   203c8:	cmp	r3, #0
   203cc:	bne	20204 <__assert_fail@plt+0xe4d4>
   203d0:	ldr	r0, [r5, #4]
   203d4:	bl	28888 <error@@Base+0x5c48>
   203d8:	b	20204 <__assert_fail@plt+0xe4d4>
   203dc:	ldr	r3, [r5, #4]
   203e0:	movw	r4, #26928	; 0x6930
   203e4:	mov	r7, r0
   203e8:	movt	r4, #4
   203ec:	strh	r0, [r3, #76]	; 0x4c
   203f0:	b	201f8 <__assert_fail@plt+0xe4c8>
   203f4:	ldr	r0, [r9]
   203f8:	bl	11868 <fflush@plt>
   203fc:	ldr	r3, [sp, #8]
   20400:	ldr	r4, [r3, #24]
   20404:	cmp	r4, #0
   20408:	beq	204f8 <__assert_fail@plt+0xe7c8>
   2040c:	ldr	r1, [sp, #8]
   20410:	mov	r3, #1
   20414:	ldr	r4, [r1, #20]
   20418:	str	r3, [r1, #24]
   2041c:	b	1fe84 <__assert_fail@plt+0xe154>
   20420:	mov	r3, r4
   20424:	add	r0, sp, #40	; 0x28
   20428:	add	r1, sp, #44	; 0x2c
   2042c:	add	r2, sp, #48	; 0x30
   20430:	bl	2aac4 <error@@Base+0x7e84>
   20434:	cmp	r0, #0
   20438:	ble	205bc <__assert_fail@plt+0xe88c>
   2043c:	ldr	r3, [sp, #44]	; 0x2c
   20440:	mov	r2, #1
   20444:	b	20020 <__assert_fail@plt+0xe2f0>
   20448:	ldr	r2, [sp, #12]
   2044c:	eor	r4, r4, #1
   20450:	cmp	r2, #0
   20454:	orreq	r4, r4, #1
   20458:	cmp	r4, #0
   2045c:	bne	20334 <__assert_fail@plt+0xe604>
   20460:	add	r0, sp, #40	; 0x28
   20464:	add	r1, sp, #44	; 0x2c
   20468:	add	r2, sp, #48	; 0x30
   2046c:	mov	r3, #1
   20470:	bl	2aac4 <error@@Base+0x7e84>
   20474:	cmp	r0, #0
   20478:	blt	205c0 <__assert_fail@plt+0xe890>
   2047c:	beq	20334 <__assert_fail@plt+0xe604>
   20480:	str	r4, [sp, #24]
   20484:	b	2043c <__assert_fail@plt+0xe70c>
   20488:	movw	r1, #6428	; 0x191c
   2048c:	mov	r2, #5
   20490:	movt	r1, #3
   20494:	mov	r0, #0
   20498:	bl	1191c <dcgettext@plt>
   2049c:	b	200ec <__assert_fail@plt+0xe3bc>
   204a0:	movw	r1, #6428	; 0x191c
   204a4:	mov	r2, #5
   204a8:	movt	r1, #3
   204ac:	mov	r0, #0
   204b0:	bl	1191c <dcgettext@plt>
   204b4:	b	2025c <__assert_fail@plt+0xe52c>
   204b8:	bl	2aab4 <error@@Base+0x7e74>
   204bc:	ldrb	r3, [r5, #32]
   204c0:	bfi	r3, r0, #0, #1
   204c4:	mov	r0, r5
   204c8:	strb	r3, [r5, #32]
   204cc:	bl	1f774 <__assert_fail@plt+0xda44>
   204d0:	bl	1f488 <__assert_fail@plt+0xd758>
   204d4:	ldr	r3, [r5, #4]
   204d8:	ldrb	r2, [r3, #78]	; 0x4e
   204dc:	and	r2, r2, #3
   204e0:	cmp	r2, #2
   204e4:	beq	2053c <__assert_fail@plt+0xe80c>
   204e8:	ldrsh	r3, [r3, #76]	; 0x4c
   204ec:	cmp	r3, #0
   204f0:	beq	203c0 <__assert_fail@plt+0xe690>
   204f4:	b	203b8 <__assert_fail@plt+0xe688>
   204f8:	mov	r0, r4
   204fc:	mov	r2, #5
   20500:	movw	r1, #6360	; 0x18d8
   20504:	movt	r1, #3
   20508:	bl	1191c <dcgettext@plt>
   2050c:	mov	r1, r0
   20510:	mov	r0, r4
   20514:	bl	22c40 <error@@Base>
   20518:	b	2040c <__assert_fail@plt+0xe6dc>
   2051c:	movw	r0, #6456	; 0x1938
   20520:	movt	r0, #3
   20524:	bl	22f2c <error@@Base+0x2ec>
   20528:	add	r1, sp, #36	; 0x24
   2052c:	mov	r2, #1
   20530:	mvn	r0, #0
   20534:	bl	11a24 <waitpid@plt>
   20538:	b	1ffb8 <__assert_fail@plt+0xe288>
   2053c:	ldr	r2, [sp, #8]
   20540:	ldr	r4, [r2, #20]
   20544:	b	1fe58 <__assert_fail@plt+0xe128>
   20548:	ldr	r3, [r5, #4]
   2054c:	ldr	r1, [sp, #40]	; 0x28
   20550:	ldr	r2, [sp, #44]	; 0x2c
   20554:	ldr	r0, [r3]
   20558:	ldr	r3, [sp, #48]	; 0x30
   2055c:	str	r8, [sp]
   20560:	bl	1e754 <__assert_fail@plt+0xca24>
   20564:	b	201ac <__assert_fail@plt+0xe47c>
   20568:	movw	r0, #6568	; 0x19a8
   2056c:	movt	r0, #3
   20570:	bl	17ae8 <__assert_fail@plt+0x5db8>
   20574:	cmp	r0, #0
   20578:	ldrbne	r3, [r0, #78]	; 0x4e
   2057c:	moveq	r3, r0
   20580:	lsrne	r3, r3, #7
   20584:	str	r3, [r4, #40]	; 0x28
   20588:	b	201cc <__assert_fail@plt+0xe49c>
   2058c:	mov	r2, r3
   20590:	cmp	r2, #0
   20594:	movw	r3, #29476	; 0x7324
   20598:	movt	r3, #4
   2059c:	bne	205b0 <__assert_fail@plt+0xe880>
   205a0:	cmp	ip, #127	; 0x7f
   205a4:	mvneq	r2, #0
   205a8:	streq	r2, [r3]
   205ac:	beq	20334 <__assert_fail@plt+0xe604>
   205b0:	mov	r2, #1
   205b4:	str	r2, [r3]
   205b8:	b	20334 <__assert_fail@plt+0xe604>
   205bc:	beq	205d8 <__assert_fail@plt+0xe8a8>
   205c0:	movw	r0, #6440	; 0x1928
   205c4:	movt	r0, #3
   205c8:	bl	22f2c <error@@Base+0x2ec>
   205cc:	mov	r0, #2
   205d0:	bl	22150 <__assert_fail@plt+0x10420>
   205d4:	bl	11934 <__stack_chk_fail@plt>
   205d8:	mov	r4, #1
   205dc:	b	1ff80 <__assert_fail@plt+0xe250>
   205e0:	andeq	r6, r4, r4, lsr sl
   205e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   205e8:	vpush	{d8}
   205ec:	movw	r7, #26864	; 0x68f0
   205f0:	movt	r7, #4
   205f4:	sub	sp, sp, #36	; 0x24
   205f8:	mov	r6, r0
   205fc:	mov	r0, #1
   20600:	ldr	r3, [r7]
   20604:	ldr	r9, [r6, #4]
   20608:	str	r3, [sp, #28]
   2060c:	bl	2aab4 <error@@Base+0x7e74>
   20610:	ldrb	r3, [r6, #32]
   20614:	and	r0, r0, #1
   20618:	cmp	r0, #0
   2061c:	bfi	r3, r0, #0, #1
   20620:	strb	r3, [r6, #32]
   20624:	bne	2063c <__assert_fail@plt+0xe90c>
   20628:	movw	r8, #27160	; 0x6a18
   2062c:	movt	r8, #4
   20630:	ldr	r3, [r8, #128]	; 0x80
   20634:	cmp	r3, #0
   20638:	bne	206e8 <__assert_fail@plt+0xe9b8>
   2063c:	mov	r0, r6
   20640:	bl	1f774 <__assert_fail@plt+0xda44>
   20644:	ldrb	r3, [r9, #78]	; 0x4e
   20648:	and	r3, r3, #3
   2064c:	cmp	r3, #2
   20650:	beq	206a8 <__assert_fail@plt+0xe978>
   20654:	cmp	r3, #3
   20658:	beq	20690 <__assert_fail@plt+0xe960>
   2065c:	cmp	r3, #0
   20660:	beq	2068c <__assert_fail@plt+0xe95c>
   20664:	cmp	r3, #3
   20668:	moveq	r0, #1
   2066c:	bne	20964 <__assert_fail@plt+0xec34>
   20670:	ldr	r2, [sp, #28]
   20674:	ldr	r3, [r7]
   20678:	cmp	r2, r3
   2067c:	bne	20960 <__assert_fail@plt+0xec30>
   20680:	add	sp, sp, #36	; 0x24
   20684:	vpop	{d8}
   20688:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2068c:	strh	r3, [r9, #76]	; 0x4c
   20690:	mov	r0, r9
   20694:	bl	28888 <error@@Base+0x5c48>
   20698:	mov	r0, r6
   2069c:	bl	1e540 <__assert_fail@plt+0xc810>
   206a0:	mov	r0, #1
   206a4:	b	20670 <__assert_fail@plt+0xe940>
   206a8:	movw	r3, #27308	; 0x6aac
   206ac:	movt	r3, #4
   206b0:	movw	r8, #27160	; 0x6a18
   206b4:	movt	r8, #4
   206b8:	ldr	r2, [r3]
   206bc:	ldr	r3, [r8, #20]
   206c0:	tst	r2, #4
   206c4:	str	r3, [r6]
   206c8:	bne	20804 <__assert_fail@plt+0xead4>
   206cc:	ldr	r3, [r8, #128]	; 0x80
   206d0:	str	r6, [r8, #20]
   206d4:	add	r3, r3, #1
   206d8:	str	r3, [r8, #128]	; 0x80
   206dc:	bl	1f488 <__assert_fail@plt+0xd758>
   206e0:	mov	r0, #1
   206e4:	b	20670 <__assert_fail@plt+0xe940>
   206e8:	movw	sl, #26752	; 0x6880
   206ec:	movt	sl, #4
   206f0:	vldr	d7, [sl]
   206f4:	vcmpe.f64	d7, #0.0
   206f8:	vmrs	APSR_nzcv, fpscr
   206fc:	bmi	2063c <__assert_fail@plt+0xe90c>
   20700:	bl	235a4 <error@@Base+0x964>
   20704:	add	r0, sp, #16
   20708:	mov	r1, #1
   2070c:	bl	11c40 <getloadavg@plt>
   20710:	cmp	r0, #1
   20714:	beq	20780 <__assert_fail@plt+0xea50>
   20718:	movw	r4, #26668	; 0x682c
   2071c:	movt	r4, #4
   20720:	ldr	fp, [r4, #44]	; 0x2c
   20724:	cmn	fp, #1
   20728:	beq	20950 <__assert_fail@plt+0xec20>
   2072c:	bl	11b8c <__errno_location@plt>
   20730:	ldr	r3, [r0]
   20734:	mov	r5, r0
   20738:	cmp	fp, r3
   2073c:	beq	20770 <__assert_fail@plt+0xea40>
   20740:	mov	fp, r3
   20744:	cmp	fp, #0
   20748:	bne	2090c <__assert_fail@plt+0xebdc>
   2074c:	mov	r0, fp
   20750:	mov	r2, #5
   20754:	movw	r1, #6628	; 0x19e4
   20758:	movt	r1, #3
   2075c:	bl	1191c <dcgettext@plt>
   20760:	mov	r1, r0
   20764:	mov	r0, fp
   20768:	bl	22c40 <error@@Base>
   2076c:	ldr	fp, [r5]
   20770:	str	fp, [r4, #44]	; 0x2c
   20774:	mov	r5, #0
   20778:	mov	r4, #0
   2077c:	strd	r4, [sp, #16]
   20780:	bl	235a0 <error@@Base+0x960>
   20784:	mov	r0, #0
   20788:	bl	118ec <time@plt>
   2078c:	ldr	r2, [r8, #132]	; 0x84
   20790:	movw	r3, #27160	; 0x6a18
   20794:	movt	r3, #4
   20798:	cmp	r0, r2
   2079c:	bgt	2088c <__assert_fail@plt+0xeb5c>
   207a0:	vldr	s16, [r3, #16]
   207a4:	vcvt.f64.u32	d8, s16
   207a8:	vldr	d6, [r3, #136]	; 0x88
   207ac:	vmov.f64	d7, #80	; 0x3e800000  0.250
   207b0:	vadd.f64	d8, d8, d6
   207b4:	vmul.f64	d8, d8, d7
   207b8:	movw	r3, #27308	; 0x6aac
   207bc:	movt	r3, #4
   207c0:	vldr	d7, [sp, #16]
   207c4:	ldr	r3, [r3]
   207c8:	tst	r3, #4
   207cc:	vadd.f64	d8, d7, d8
   207d0:	bne	208d8 <__assert_fail@plt+0xeba8>
   207d4:	vldr	d7, [sl]
   207d8:	vcmpe.f64	d8, d7
   207dc:	vmrs	APSR_nzcv, fpscr
   207e0:	blt	2063c <__assert_fail@plt+0xe90c>
   207e4:	mov	r0, r9
   207e8:	mov	r1, #2
   207ec:	bl	18c28 <__assert_fail@plt+0x6ef8>
   207f0:	ldr	r3, [r8, #144]	; 0x90
   207f4:	mov	r0, #0
   207f8:	str	r6, [r8, #144]	; 0x90
   207fc:	str	r3, [r6]
   20800:	b	20670 <__assert_fail@plt+0xe940>
   20804:	mov	r2, #5
   20808:	movw	r1, #6784	; 0x1a80
   2080c:	mov	r0, #0
   20810:	movt	r1, #3
   20814:	bl	1191c <dcgettext@plt>
   20818:	ldr	r1, [r6, #4]
   2081c:	ldr	r2, [r6, #24]
   20820:	add	r4, r8, #28
   20824:	movw	r3, #3300	; 0xce4
   20828:	movt	r3, #3
   2082c:	ldr	r5, [r1]
   20830:	mov	r1, #1
   20834:	str	r2, [sp]
   20838:	mov	r2, #100	; 0x64
   2083c:	mov	r9, r0
   20840:	mov	r0, r4
   20844:	bl	11b98 <__sprintf_chk@plt>
   20848:	ldrb	r3, [r6, #32]
   2084c:	tst	r3, #1
   20850:	movweq	r0, #6032	; 0x1790
   20854:	movteq	r0, #3
   20858:	bne	20938 <__assert_fail@plt+0xec08>
   2085c:	str	r0, [sp, #4]
   20860:	mov	r3, r5
   20864:	str	r4, [sp]
   20868:	mov	r1, r9
   2086c:	mov	r2, r6
   20870:	mov	r0, #1
   20874:	bl	11be0 <__printf_chk@plt>
   20878:	movw	r3, #26888	; 0x6908
   2087c:	movt	r3, #4
   20880:	ldr	r0, [r3]
   20884:	bl	11868 <fflush@plt>
   20888:	b	206cc <__assert_fail@plt+0xe99c>
   2088c:	sub	r1, r0, #1
   20890:	cmp	r2, r1
   20894:	beq	208b4 <__assert_fail@plt+0xeb84>
   20898:	vldr	d7, [pc, #224]	; 20980 <__assert_fail@plt+0xec50>
   2089c:	vmov.f64	d8, d7
   208a0:	vstr	d7, [r3, #136]	; 0x88
   208a4:	mov	r3, #0
   208a8:	str	r0, [r8, #132]	; 0x84
   208ac:	str	r3, [r8, #16]
   208b0:	b	207b8 <__assert_fail@plt+0xea88>
   208b4:	vmov.f64	d7, #80	; 0x3e800000  0.250
   208b8:	vldr	s11, [r3, #16]
   208bc:	vldr	d8, [pc, #188]	; 20980 <__assert_fail@plt+0xec50>
   208c0:	vcvt.f64.u32	d6, s11
   208c4:	vmul.f64	d6, d6, d7
   208c8:	vadd.f64	d8, d6, d8
   208cc:	vstr	d6, [r3, #136]	; 0x88
   208d0:	vmul.f64	d8, d8, d7
   208d4:	b	208a4 <__assert_fail@plt+0xeb74>
   208d8:	ldrd	r4, [sl]
   208dc:	vstr	d7, [sp]
   208e0:	vmov	r2, r3, d8
   208e4:	movw	r1, #6720	; 0x1a40
   208e8:	mov	r0, #1
   208ec:	movt	r1, #3
   208f0:	strd	r4, [sp, #8]
   208f4:	bl	11be0 <__printf_chk@plt>
   208f8:	movw	r3, #26888	; 0x6908
   208fc:	movt	r3, #4
   20900:	ldr	r0, [r3]
   20904:	bl	11868 <fflush@plt>
   20908:	b	207d4 <__assert_fail@plt+0xeaa4>
   2090c:	mov	r2, #5
   20910:	movw	r1, #6680	; 0x1a18
   20914:	mov	r0, #0
   20918:	movt	r1, #3
   2091c:	bl	1191c <dcgettext@plt>
   20920:	movw	r1, #6708	; 0x1a34
   20924:	ldr	r2, [r5]
   20928:	movt	r1, #3
   2092c:	bl	22e74 <error@@Base+0x234>
   20930:	ldr	fp, [r5]
   20934:	b	20770 <__assert_fail@plt+0xea40>
   20938:	movw	r1, #6428	; 0x191c
   2093c:	mov	r2, #5
   20940:	movt	r1, #3
   20944:	mov	r0, #0
   20948:	bl	1191c <dcgettext@plt>
   2094c:	b	2085c <__assert_fail@plt+0xeb2c>
   20950:	bl	11b8c <__errno_location@plt>
   20954:	mov	r5, r0
   20958:	ldr	fp, [r0]
   2095c:	b	20744 <__assert_fail@plt+0xea14>
   20960:	bl	11934 <__stack_chk_fail@plt>
   20964:	movw	r0, #6832	; 0x1ab0
   20968:	movw	r1, #6176	; 0x1820
   2096c:	movt	r0, #3
   20970:	movt	r1, #3
   20974:	movw	r2, #1545	; 0x609
   20978:	ldr	r3, [pc, #8]	; 20988 <__assert_fail@plt+0xec58>
   2097c:	bl	11d30 <__assert_fail@plt>
	...
   20988:	andeq	r1, r3, r8, asr #14
   2098c:	push	{r3, r4, r5, lr}
   20990:	movw	r4, #27160	; 0x6a18
   20994:	movt	r4, #4
   20998:	ldr	r3, [r4, #144]	; 0x90
   2099c:	cmp	r3, #0
   209a0:	popeq	{r3, r4, r5, pc}
   209a4:	mov	r5, r4
   209a8:	mov	r0, #0
   209ac:	mov	r1, r0
   209b0:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   209b4:	ldr	r0, [r4, #144]	; 0x90
   209b8:	ldr	r3, [r0]
   209bc:	str	r3, [r4, #144]	; 0x90
   209c0:	bl	205e4 <__assert_fail@plt+0xe8b4>
   209c4:	cmp	r0, #0
   209c8:	popeq	{r3, r4, r5, pc}
   209cc:	ldr	r3, [r5, #144]	; 0x90
   209d0:	cmp	r3, #0
   209d4:	bne	209a8 <__assert_fail@plt+0xec78>
   209d8:	pop	{r3, r4, r5, pc}
   209dc:	movw	ip, #26864	; 0x68f0
   209e0:	movt	ip, #4
   209e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   209e8:	sub	sp, sp, #60	; 0x3c
   209ec:	ldr	r3, [ip]
   209f0:	ldr	r4, [r0, #16]
   209f4:	str	ip, [sp, #28]
   209f8:	str	r3, [sp, #52]	; 0x34
   209fc:	str	r0, [sp, #24]
   20a00:	bl	2098c <__assert_fail@plt+0xec5c>
   20a04:	mov	r0, #0
   20a08:	mov	r1, r0
   20a0c:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   20a10:	mov	r0, r4
   20a14:	bl	15480 <__assert_fail@plt+0x3750>
   20a18:	ldr	r0, [r4, #12]
   20a1c:	lsl	r0, r0, #2
   20a20:	bl	22f44 <error@@Base+0x304>
   20a24:	ldr	r3, [r4, #12]
   20a28:	cmp	r3, #0
   20a2c:	movne	r9, #0
   20a30:	strne	r9, [sp, #16]
   20a34:	str	r0, [sp, #20]
   20a38:	beq	20af4 <__assert_fail@plt+0xedc4>
   20a3c:	ldr	r3, [r4, #16]
   20a40:	ldr	r6, [r3, r9]
   20a44:	mov	r5, r6
   20a48:	b	20a88 <__assert_fail@plt+0xed58>
   20a4c:	cmp	r6, r5
   20a50:	add	r8, sl, #1
   20a54:	rsbeq	fp, r6, r8
   20a58:	beq	20a70 <__assert_fail@plt+0xed40>
   20a5c:	rsb	fp, r5, r8
   20a60:	mov	r1, r5
   20a64:	mov	r0, r6
   20a68:	mov	r2, fp
   20a6c:	bl	11880 <memmove@plt>
   20a70:	ldrb	r7, [sl, #1]
   20a74:	add	r6, r6, fp
   20a78:	cmp	r7, #40	; 0x28
   20a7c:	cmpne	r7, #123	; 0x7b
   20a80:	beq	20c20 <__assert_fail@plt+0xeef0>
   20a84:	mov	r5, r8
   20a88:	mov	r0, r5
   20a8c:	mov	r1, #36	; 0x24
   20a90:	bl	11b68 <strchr@plt>
   20a94:	subs	sl, r0, #0
   20a98:	bne	20a4c <__assert_fail@plt+0xed1c>
   20a9c:	cmp	r5, r6
   20aa0:	beq	20abc <__assert_fail@plt+0xed8c>
   20aa4:	mov	r0, r5
   20aa8:	bl	11b5c <strlen@plt>
   20aac:	mov	r1, r5
   20ab0:	add	r2, r0, #1
   20ab4:	mov	r0, r6
   20ab8:	bl	11880 <memmove@plt>
   20abc:	ldr	r3, [r4, #16]
   20ac0:	ldr	ip, [sp, #16]
   20ac4:	ldr	r1, [sp, #24]
   20ac8:	ldr	r0, [r3, r9]
   20acc:	add	ip, ip, #1
   20ad0:	str	ip, [sp, #16]
   20ad4:	bl	177b8 <__assert_fail@plt+0x5a88>
   20ad8:	ldr	r3, [r4, #12]
   20adc:	ldr	ip, [sp, #16]
   20ae0:	cmp	r3, ip
   20ae4:	ldr	r3, [sp, #20]
   20ae8:	str	r0, [r3, r9]
   20aec:	add	r9, r9, #4
   20af0:	bhi	20a3c <__assert_fail@plt+0xed0c>
   20af4:	mov	r0, #36	; 0x24
   20af8:	movw	r9, #26728	; 0x6868
   20afc:	bl	22f78 <error@@Base+0x338>
   20b00:	ldr	ip, [sp, #24]
   20b04:	movt	r9, #4
   20b08:	mov	r2, #0
   20b0c:	ldrb	r1, [ip, #79]	; 0x4f
   20b10:	ubfx	r1, r1, #4, #1
   20b14:	str	ip, [r0, #4]
   20b18:	ldr	ip, [sp, #20]
   20b1c:	ldrb	r3, [r0, #32]
   20b20:	str	r2, [r0, #28]
   20b24:	bfi	r3, r1, #4, #1
   20b28:	str	ip, [r0, #12]
   20b2c:	strb	r3, [r0, #32]
   20b30:	str	r0, [sp, #16]
   20b34:	bl	1e4a4 <__assert_fail@plt+0xc774>
   20b38:	ldr	r3, [r9]
   20b3c:	cmp	r3, #0
   20b40:	beq	20d40 <__assert_fail@plt+0xf010>
   20b44:	movw	r6, #27160	; 0x6a18
   20b48:	movt	r6, #4
   20b4c:	ldr	r2, [r6, #128]	; 0x80
   20b50:	cmp	r3, r2
   20b54:	bne	20f58 <__assert_fail@plt+0xf228>
   20b58:	mov	r1, #0
   20b5c:	mov	r0, #1
   20b60:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   20b64:	ldr	r1, [r6, #128]	; 0x80
   20b68:	ldr	r2, [r9]
   20b6c:	movw	r3, #27160	; 0x6a18
   20b70:	movt	r3, #4
   20b74:	cmp	r1, r2
   20b78:	beq	20b58 <__assert_fail@plt+0xee28>
   20b7c:	movw	r2, #27308	; 0x6aac
   20b80:	movt	r2, #4
   20b84:	ldr	r3, [r3, #4]
   20b88:	ldr	r2, [r2]
   20b8c:	ldr	r0, [r4]
   20b90:	add	r3, r3, #1
   20b94:	str	r3, [r6, #4]
   20b98:	cmp	r0, #0
   20b9c:	beq	20f78 <__assert_fail@plt+0xf248>
   20ba0:	tst	r2, #1
   20ba4:	bne	20f0c <__assert_fail@plt+0xf1dc>
   20ba8:	ldr	r0, [sp, #16]
   20bac:	bl	205e4 <__assert_fail@plt+0xe8b4>
   20bb0:	ldr	r3, [r9]
   20bb4:	cmp	r3, #1
   20bb8:	beq	20bd0 <__assert_fail@plt+0xeea0>
   20bbc:	movw	r3, #29544	; 0x7368
   20bc0:	movt	r3, #4
   20bc4:	ldr	r3, [r3]
   20bc8:	cmp	r3, #0
   20bcc:	beq	20c04 <__assert_fail@plt+0xeed4>
   20bd0:	ldr	ip, [sp, #24]
   20bd4:	ldrb	r3, [ip, #78]	; 0x4e
   20bd8:	and	r3, r3, #3
   20bdc:	cmp	r3, #2
   20be0:	ldreq	r4, [sp, #24]
   20be4:	bne	20c04 <__assert_fail@plt+0xeed4>
   20be8:	mov	r0, #1
   20bec:	mov	r1, #0
   20bf0:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   20bf4:	ldrb	r3, [r4, #78]	; 0x4e
   20bf8:	and	r3, r3, #3
   20bfc:	cmp	r3, #2
   20c00:	beq	20be8 <__assert_fail@plt+0xeeb8>
   20c04:	ldr	ip, [sp, #28]
   20c08:	ldr	r2, [sp, #52]	; 0x34
   20c0c:	ldr	r3, [ip]
   20c10:	cmp	r2, r3
   20c14:	bne	2106c <__assert_fail@plt+0xf33c>
   20c18:	add	sp, sp, #60	; 0x3c
   20c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20c20:	cmp	r7, #40	; 0x28
   20c24:	add	r5, sl, #2
   20c28:	strb	r7, [r6]
   20c2c:	mov	sl, #0
   20c30:	add	r6, r6, #1
   20c34:	movne	fp, #125	; 0x7d
   20c38:	moveq	fp, #41	; 0x29
   20c3c:	add	r1, r8, #1
   20c40:	b	20c60 <__assert_fail@plt+0xef30>
   20c44:	cmp	r3, #92	; 0x5c
   20c48:	beq	20c84 <__assert_fail@plt+0xef54>
   20c4c:	cmp	r7, r3
   20c50:	strb	r3, [r6]
   20c54:	addeq	sl, sl, #1
   20c58:	add	r5, r5, #1
   20c5c:	add	r6, r6, #1
   20c60:	ldrb	r3, [r5]
   20c64:	cmp	r3, #0
   20c68:	beq	20a88 <__assert_fail@plt+0xed58>
   20c6c:	cmp	fp, r3
   20c70:	bne	20c44 <__assert_fail@plt+0xef14>
   20c74:	subs	sl, sl, #1
   20c78:	bcc	20a88 <__assert_fail@plt+0xed58>
   20c7c:	cmp	r3, #92	; 0x5c
   20c80:	bne	20c4c <__assert_fail@plt+0xef1c>
   20c84:	ldrb	r2, [r5, #1]
   20c88:	cmp	r2, #10
   20c8c:	bne	20c4c <__assert_fail@plt+0xef1c>
   20c90:	sub	r3, r5, #1
   20c94:	cmp	r3, r8
   20c98:	bls	20ce4 <__assert_fail@plt+0xefb4>
   20c9c:	ldrb	r2, [r5, #-1]
   20ca0:	cmp	r2, #92	; 0x5c
   20ca4:	bne	20ce4 <__assert_fail@plt+0xefb4>
   20ca8:	mov	r2, #0
   20cac:	b	20cbc <__assert_fail@plt+0xef8c>
   20cb0:	ldrb	r0, [r3, #-1]!
   20cb4:	cmp	r0, #92	; 0x5c
   20cb8:	bne	20cc8 <__assert_fail@plt+0xef98>
   20cbc:	cmp	r3, r1
   20cc0:	eor	r2, r2, #1
   20cc4:	bne	20cb0 <__assert_fail@plt+0xef80>
   20cc8:	cmp	r2, #0
   20ccc:	beq	20ce4 <__assert_fail@plt+0xefb4>
   20cd0:	mov	r2, #92	; 0x5c
   20cd4:	add	r5, r5, #1
   20cd8:	strb	r2, [r6]
   20cdc:	add	r6, r6, #1
   20ce0:	b	20c60 <__assert_fail@plt+0xef30>
   20ce4:	add	r0, r5, #2
   20ce8:	str	r1, [sp, #12]
   20cec:	bl	23230 <error@@Base+0x5f0>
   20cf0:	cmp	r6, r8
   20cf4:	ldr	r1, [sp, #12]
   20cf8:	mov	r5, r0
   20cfc:	bls	20d30 <__assert_fail@plt+0xf000>
   20d00:	bl	11b20 <__ctype_b_loc@plt>
   20d04:	ldr	r1, [sp, #12]
   20d08:	ldr	r2, [r0]
   20d0c:	b	20d1c <__assert_fail@plt+0xefec>
   20d10:	sub	r6, r6, #1
   20d14:	cmp	r6, r8
   20d18:	beq	20d30 <__assert_fail@plt+0xf000>
   20d1c:	ldrb	r3, [r6, #-1]
   20d20:	lsl	r3, r3, #1
   20d24:	ldrh	r3, [r2, r3]
   20d28:	tst	r3, #1
   20d2c:	bne	20d10 <__assert_fail@plt+0xefe0>
   20d30:	mov	r3, #32
   20d34:	add	r6, r6, #1
   20d38:	strb	r3, [r6, #-1]
   20d3c:	b	20c60 <__assert_fail@plt+0xef30>
   20d40:	movw	ip, #26720	; 0x6860
   20d44:	movt	ip, #4
   20d48:	str	ip, [sp, #36]	; 0x24
   20d4c:	ldr	r3, [ip]
   20d50:	cmp	r3, #0
   20d54:	movwlt	r6, #27160	; 0x6a18
   20d58:	movtlt	r6, #4
   20d5c:	blt	20f58 <__assert_fail@plt+0xf228>
   20d60:	movw	r3, #27308	; 0x6aac
   20d64:	movt	r3, #4
   20d68:	str	r3, [sp, #20]
   20d6c:	movw	r6, #27160	; 0x6a18
   20d70:	ldr	r3, [r3]
   20d74:	movw	r8, #26736	; 0x6870
   20d78:	movt	r6, #4
   20d7c:	movt	r8, #4
   20d80:	movw	ip, #6864	; 0x1ad0
   20d84:	movt	ip, #3
   20d88:	str	ip, [sp, #40]	; 0x28
   20d8c:	movw	ip, #6032	; 0x1790
   20d90:	movt	ip, #3
   20d94:	str	ip, [sp, #44]	; 0x2c
   20d98:	movw	ip, #26888	; 0x6908
   20d9c:	movt	ip, #4
   20da0:	str	ip, [sp, #32]
   20da4:	tst	r3, #4
   20da8:	beq	20de0 <__assert_fail@plt+0xf0b0>
   20dac:	ldr	r2, [r6, #20]
   20db0:	movw	r1, #6872	; 0x1ad8
   20db4:	ldr	ip, [sp, #44]	; 0x2c
   20db8:	mov	r0, #1
   20dbc:	ldr	r3, [sp, #40]	; 0x28
   20dc0:	cmp	r2, #0
   20dc4:	movt	r1, #3
   20dc8:	movne	r3, ip
   20dcc:	mov	r2, r3
   20dd0:	bl	11be0 <__printf_chk@plt>
   20dd4:	ldr	r3, [sp, #32]
   20dd8:	ldr	r0, [r3]
   20ddc:	bl	11868 <fflush@plt>
   20de0:	ldr	r3, [r6, #4]
   20de4:	cmp	r3, #0
   20de8:	beq	20f6c <__assert_fail@plt+0xf23c>
   20dec:	ldr	r3, [r8]
   20df0:	cmp	r3, #0
   20df4:	blt	20ecc <__assert_fail@plt+0xf19c>
   20df8:	mov	r0, #0
   20dfc:	movw	r5, #27160	; 0x6a18
   20e00:	mov	r1, r0
   20e04:	movt	r5, #4
   20e08:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   20e0c:	bl	2098c <__assert_fail@plt+0xec5c>
   20e10:	ldr	r3, [r6, #4]
   20e14:	cmp	r3, #0
   20e18:	beq	20f6c <__assert_fail@plt+0xf23c>
   20e1c:	ldr	r0, [r5, #20]
   20e20:	cmp	r0, #0
   20e24:	beq	21070 <__assert_fail@plt+0xf340>
   20e28:	ldr	r1, [r5, #144]	; 0x90
   20e2c:	mov	r7, #0
   20e30:	mov	r0, #1
   20e34:	subs	r1, r1, r7
   20e38:	movne	r1, #1
   20e3c:	bl	1e830 <__assert_fail@plt+0xcb00>
   20e40:	bl	11b8c <__errno_location@plt>
   20e44:	add	r1, sp, #51	; 0x33
   20e48:	mov	r2, #1
   20e4c:	mov	sl, r0
   20e50:	str	r7, [r0]
   20e54:	ldr	r0, [r8]
   20e58:	bl	1185c <read@plt>
   20e5c:	ldr	r1, [r5, #144]	; 0x90
   20e60:	ldr	sl, [sl]
   20e64:	subs	r1, r1, r7
   20e68:	movne	r1, #1
   20e6c:	mov	fp, r0
   20e70:	mov	r0, r7
   20e74:	bl	1e830 <__assert_fail@plt+0xcb00>
   20e78:	cmp	fp, #1
   20e7c:	beq	20fe4 <__assert_fail@plt+0xf2b4>
   20e80:	cmp	sl, #9
   20e84:	cmpne	sl, #4
   20e88:	bne	20fbc <__assert_fail@plt+0xf28c>
   20e8c:	ldr	ip, [sp, #20]
   20e90:	cmp	sl, #9
   20e94:	ldr	r3, [ip]
   20e98:	bne	20da4 <__assert_fail@plt+0xf074>
   20e9c:	tst	r3, #4
   20ea0:	movw	r5, #27308	; 0x6aac
   20ea4:	movt	r5, #4
   20ea8:	beq	20da4 <__assert_fail@plt+0xf074>
   20eac:	movw	r0, #7060	; 0x1b94
   20eb0:	movt	r0, #3
   20eb4:	bl	11a9c <puts@plt>
   20eb8:	ldr	r3, [sp, #32]
   20ebc:	ldr	r0, [r3]
   20ec0:	bl	11868 <fflush@plt>
   20ec4:	ldr	r3, [r5]
   20ec8:	b	20da4 <__assert_fail@plt+0xf074>
   20ecc:	ldr	ip, [sp, #20]
   20ed0:	ldr	r3, [ip]
   20ed4:	tst	r3, #4
   20ed8:	bne	20ef0 <__assert_fail@plt+0xf1c0>
   20edc:	ldr	ip, [sp, #36]	; 0x24
   20ee0:	ldr	r0, [ip]
   20ee4:	bl	1197c <dup@plt>
   20ee8:	str	r0, [r8]
   20eec:	b	20df8 <__assert_fail@plt+0xf0c8>
   20ef0:	movw	r0, #6912	; 0x1b00
   20ef4:	movt	r0, #3
   20ef8:	bl	11a9c <puts@plt>
   20efc:	ldr	r3, [sp, #32]
   20f00:	ldr	r0, [r3]
   20f04:	bl	11868 <fflush@plt>
   20f08:	b	20edc <__assert_fail@plt+0xf1ac>
   20f0c:	mov	r2, #5
   20f10:	movw	r1, #7084	; 0x1bac
   20f14:	mov	r0, #0
   20f18:	movt	r1, #3
   20f1c:	bl	1191c <dcgettext@plt>
   20f20:	ldr	lr, [sp, #16]
   20f24:	ldr	r3, [r4, #4]
   20f28:	ldr	r2, [r4]
   20f2c:	ldr	ip, [lr, #4]
   20f30:	ldr	ip, [ip]
   20f34:	str	ip, [sp]
   20f38:	mov	r1, r0
   20f3c:	mov	r0, #1
   20f40:	bl	11be0 <__printf_chk@plt>
   20f44:	movw	r3, #26888	; 0x6908
   20f48:	movt	r3, #4
   20f4c:	ldr	r0, [r3]
   20f50:	bl	11868 <fflush@plt>
   20f54:	b	20ba8 <__assert_fail@plt+0xee78>
   20f58:	movw	r2, #27308	; 0x6aac
   20f5c:	movt	r2, #4
   20f60:	ldr	r3, [r6, #4]
   20f64:	ldr	r2, [r2]
   20f68:	b	20b8c <__assert_fail@plt+0xee5c>
   20f6c:	ldr	ip, [sp, #20]
   20f70:	ldr	r2, [ip]
   20f74:	b	20b8c <__assert_fail@plt+0xee5c>
   20f78:	tst	r2, #1
   20f7c:	beq	20ba8 <__assert_fail@plt+0xee78>
   20f80:	mov	r2, #5
   20f84:	movw	r1, #7136	; 0x1be0
   20f88:	movt	r1, #3
   20f8c:	bl	1191c <dcgettext@plt>
   20f90:	ldr	ip, [sp, #16]
   20f94:	ldr	r3, [ip, #4]
   20f98:	ldr	r2, [r3]
   20f9c:	mov	r1, r0
   20fa0:	mov	r0, #1
   20fa4:	bl	11be0 <__printf_chk@plt>
   20fa8:	movw	r3, #26888	; 0x6908
   20fac:	movt	r3, #4
   20fb0:	ldr	r0, [r3]
   20fb4:	bl	11868 <fflush@plt>
   20fb8:	b	20ba8 <__assert_fail@plt+0xee78>
   20fbc:	cmp	fp, #0
   20fc0:	bne	21004 <__assert_fail@plt+0xf2d4>
   20fc4:	movw	r1, #7024	; 0x1b70
   20fc8:	mov	r0, fp
   20fcc:	movt	r1, #3
   20fd0:	mov	r2, #5
   20fd4:	bl	1191c <dcgettext@plt>
   20fd8:	mov	r1, r0
   20fdc:	mov	r0, fp
   20fe0:	bl	22d64 <error@@Base+0x124>
   20fe4:	ldr	r3, [sp, #20]
   20fe8:	movw	r8, #27308	; 0x6aac
   20fec:	movt	r8, #4
   20ff0:	ldr	r2, [r3]
   20ff4:	tst	r2, #4
   20ff8:	bne	21020 <__assert_fail@plt+0xf2f0>
   20ffc:	ldr	r3, [r5, #4]
   21000:	b	20b8c <__assert_fail@plt+0xee5c>
   21004:	mov	r0, r7
   21008:	movw	r1, #7044	; 0x1b84
   2100c:	mov	r2, #5
   21010:	movt	r1, #3
   21014:	bl	1191c <dcgettext@plt>
   21018:	mov	r1, sl
   2101c:	bl	22eec <error@@Base+0x2ac>
   21020:	mov	r2, #5
   21024:	mov	r0, r7
   21028:	movw	r1, #6988	; 0x1b4c
   2102c:	movt	r1, #3
   21030:	bl	1191c <dcgettext@plt>
   21034:	ldr	ip, [sp, #16]
   21038:	ldr	r3, [ip, #4]
   2103c:	mov	r2, ip
   21040:	ldr	r3, [r3]
   21044:	mov	r1, r0
   21048:	mov	r0, fp
   2104c:	bl	11be0 <__printf_chk@plt>
   21050:	movw	r3, #26888	; 0x6908
   21054:	movt	r3, #4
   21058:	ldr	r0, [r3]
   2105c:	bl	11868 <fflush@plt>
   21060:	ldr	r3, [r5, #4]
   21064:	ldr	r2, [r8]
   21068:	b	20b8c <__assert_fail@plt+0xee5c>
   2106c:	bl	11934 <__stack_chk_fail@plt>
   21070:	movw	r1, #6936	; 0x1b18
   21074:	movt	r1, #3
   21078:	bl	22d64 <error@@Base+0x124>
   2107c:	movw	r3, #27308	; 0x6aac
   21080:	movt	r3, #4
   21084:	ldr	r2, [r3]
   21088:	rsbs	r2, r2, #1
   2108c:	movcc	r2, #0
   21090:	str	r2, [r3]
   21094:	bx	lr
   21098:	push	{r4, r5, r6, lr}
   2109c:	mov	r5, r0
   210a0:	ldrb	r4, [r0]
   210a4:	cmp	r4, #0
   210a8:	beq	21170 <__assert_fail@plt+0xf440>
   210ac:	cmp	r4, #126	; 0x7e
   210b0:	movne	r6, #0
   210b4:	beq	21154 <__assert_fail@plt+0xf424>
   210b8:	cmp	r4, #46	; 0x2e
   210bc:	bne	21100 <__assert_fail@plt+0xf3d0>
   210c0:	ldrb	r3, [r5, #1]
   210c4:	cmp	r3, #47	; 0x2f
   210c8:	bne	21128 <__assert_fail@plt+0xf3f8>
   210cc:	ldrb	r4, [r5, #2]
   210d0:	cmp	r4, #0
   210d4:	beq	21128 <__assert_fail@plt+0xf3f8>
   210d8:	cmp	r4, #47	; 0x2f
   210dc:	add	r3, r5, #2
   210e0:	bne	2114c <__assert_fail@plt+0xf41c>
   210e4:	add	r3, r5, #3
   210e8:	mov	r5, r3
   210ec:	ldrb	r4, [r3], #1
   210f0:	cmp	r4, #47	; 0x2f
   210f4:	beq	210e8 <__assert_fail@plt+0xf3b8>
   210f8:	cmp	r4, #46	; 0x2e
   210fc:	beq	210c0 <__assert_fail@plt+0xf390>
   21100:	cmp	r4, #0
   21104:	bne	21128 <__assert_fail@plt+0xf3f8>
   21108:	sub	r3, r5, #1
   2110c:	mov	r5, r3
   21110:	sub	r3, r3, #1
   21114:	ldrb	r2, [r5]
   21118:	cmp	r2, #46	; 0x2e
   2111c:	bne	2110c <__assert_fail@plt+0xf3dc>
   21120:	mov	r3, #0
   21124:	strb	r3, [r5, #2]
   21128:	mov	r0, r5
   2112c:	bl	2b9c0 <error@@Base+0x8d80>
   21130:	cmp	r6, #0
   21134:	mov	r4, r0
   21138:	beq	21144 <__assert_fail@plt+0xf414>
   2113c:	mov	r0, r6
   21140:	bl	1188c <free@plt>
   21144:	mov	r0, r4
   21148:	pop	{r4, r5, r6, pc}
   2114c:	mov	r5, r3
   21150:	b	210b8 <__assert_fail@plt+0xf388>
   21154:	bl	25268 <error@@Base+0x2628>
   21158:	subs	r6, r0, #0
   2115c:	ldrbne	r4, [r6]
   21160:	movne	r5, r6
   21164:	bne	210b8 <__assert_fail@plt+0xf388>
   21168:	ldrb	r4, [r5]
   2116c:	b	210b8 <__assert_fail@plt+0xf388>
   21170:	movw	r1, #8628	; 0x21b4
   21174:	mov	r0, r4
   21178:	movt	r1, #3
   2117c:	mov	r2, #5
   21180:	bl	1191c <dcgettext@plt>
   21184:	mov	r1, r0
   21188:	mov	r0, r4
   2118c:	bl	22d64 <error@@Base+0x124>
   21190:	push	{r3, r4, r5, r6, r7, lr}
   21194:	mov	r5, r0
   21198:	ldrb	r4, [r1]
   2119c:	cmp	r4, #0
   211a0:	beq	21208 <__assert_fail@plt+0xf4d8>
   211a4:	sub	r6, r1, #1
   211a8:	mov	r7, #92	; 0x5c
   211ac:	b	211d4 <__assert_fail@plt+0xf4a4>
   211b0:	cmp	r4, #92	; 0x5c
   211b4:	movne	r3, r5
   211b8:	beq	21200 <__assert_fail@plt+0xf4d0>
   211bc:	ldrb	r2, [r6, #1]!
   211c0:	add	r5, r3, #1
   211c4:	strb	r2, [r3]
   211c8:	ldrb	r4, [r6, #1]
   211cc:	cmp	r4, #0
   211d0:	beq	21208 <__assert_fail@plt+0xf4d8>
   211d4:	cmp	r4, #36	; 0x24
   211d8:	strbeq	r4, [r5]
   211dc:	addeq	r3, r5, #1
   211e0:	beq	211bc <__assert_fail@plt+0xf48c>
   211e4:	bl	11b20 <__ctype_b_loc@plt>
   211e8:	lsl	r2, r4, #1
   211ec:	add	r3, r5, #1
   211f0:	ldr	r1, [r0]
   211f4:	ldrh	r2, [r1, r2]
   211f8:	tst	r2, #1
   211fc:	beq	211b0 <__assert_fail@plt+0xf480>
   21200:	strb	r7, [r5]
   21204:	b	211bc <__assert_fail@plt+0xf48c>
   21208:	mov	r0, r5
   2120c:	pop	{r3, r4, r5, r6, r7, pc}
   21210:	push	{r4, r5, r6, r7, lr}
   21214:	movw	r4, #26720	; 0x6860
   21218:	movt	r4, #4
   2121c:	movw	r6, #26864	; 0x68f0
   21220:	movt	r6, #4
   21224:	sub	sp, sp, #12
   21228:	ldr	r3, [r4]
   2122c:	mov	r1, #43	; 0x2b
   21230:	ldr	r2, [r6]
   21234:	cmn	r3, #1
   21238:	strb	r1, [sp, #3]
   2123c:	str	r2, [sp, #4]
   21240:	beq	21258 <__assert_fail@plt+0xf528>
   21244:	movw	r5, #27164	; 0x6a1c
   21248:	movt	r5, #4
   2124c:	ldr	r2, [r5]
   21250:	cmp	r2, #0
   21254:	bne	21284 <__assert_fail@plt+0xf554>
   21258:	movw	r7, #27308	; 0x6aac
   2125c:	movt	r7, #4
   21260:	ldr	r3, [r7, #4]
   21264:	cmp	r3, #0
   21268:	bne	21300 <__assert_fail@plt+0xf5d0>
   2126c:	ldr	r2, [sp, #4]
   21270:	ldr	r3, [r6]
   21274:	cmp	r2, r3
   21278:	bne	2138c <__assert_fail@plt+0xf65c>
   2127c:	add	sp, sp, #12
   21280:	pop	{r4, r5, r6, r7, pc}
   21284:	cmp	r0, #2
   21288:	beq	212bc <__assert_fail@plt+0xf58c>
   2128c:	movw	r1, #8664	; 0x21d8
   21290:	mov	r0, #0
   21294:	movt	r1, #3
   21298:	bl	22c40 <error@@Base>
   2129c:	b	21258 <__assert_fail@plt+0xf528>
   212a0:	cmp	r0, #1
   212a4:	beq	212bc <__assert_fail@plt+0xf58c>
   212a8:	movw	r0, #8724	; 0x2214
   212ac:	movw	r1, #6032	; 0x1790
   212b0:	movt	r0, #3
   212b4:	movt	r1, #3
   212b8:	bl	22ec8 <error@@Base+0x288>
   212bc:	ldr	r3, [r5]
   212c0:	sub	r3, r3, #1
   212c4:	str	r3, [r5]
   212c8:	cmp	r3, #0
   212cc:	bne	212e4 <__assert_fail@plt+0xf5b4>
   212d0:	b	21258 <__assert_fail@plt+0xf528>
   212d4:	bl	11b8c <__errno_location@plt>
   212d8:	ldr	r3, [r0]
   212dc:	cmp	r3, #4
   212e0:	bne	212a8 <__assert_fail@plt+0xf578>
   212e4:	ldr	r0, [r4, #4]
   212e8:	add	r1, sp, #3
   212ec:	mov	r2, #1
   212f0:	bl	11bf8 <write@plt>
   212f4:	cmn	r0, #1
   212f8:	beq	212d4 <__assert_fail@plt+0xf5a4>
   212fc:	b	212a0 <__assert_fail@plt+0xf570>
   21300:	ldr	r0, [r4, #4]
   21304:	mov	r5, #1
   21308:	bl	11d0c <close@plt>
   2130c:	b	21314 <__assert_fail@plt+0xf5e4>
   21310:	add	r5, r5, #1
   21314:	ldr	r0, [r4]
   21318:	add	r1, sp, #3
   2131c:	mov	r2, #1
   21320:	bl	1185c <read@plt>
   21324:	cmp	r0, #1
   21328:	beq	21310 <__assert_fail@plt+0xf5e0>
   2132c:	ldr	r3, [r7, #4]
   21330:	cmp	r5, r3
   21334:	beq	2134c <__assert_fail@plt+0xf61c>
   21338:	movw	r1, #8732	; 0x221c
   2133c:	mov	r2, r5
   21340:	mov	r0, #0
   21344:	movt	r1, #3
   21348:	bl	22c40 <error@@Base>
   2134c:	ldr	r0, [r4]
   21350:	movw	r5, #27308	; 0x6aac
   21354:	bl	11d0c <close@plt>
   21358:	ldr	r3, [r7, #8]
   2135c:	ldr	r2, [r4, #12]
   21360:	movt	r5, #4
   21364:	cmp	r3, #0
   21368:	str	r2, [r4, #8]
   2136c:	beq	2126c <__assert_fail@plt+0xf53c>
   21370:	ldr	r0, [r3]
   21374:	bl	1188c <free@plt>
   21378:	ldr	r0, [r5, #8]
   2137c:	bl	1188c <free@plt>
   21380:	mov	r3, #0
   21384:	str	r3, [r5, #8]
   21388:	b	2126c <__assert_fail@plt+0xf53c>
   2138c:	bl	11934 <__stack_chk_fail@plt>
   21390:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21394:	add	fp, sp, #28
   21398:	sub	sp, sp, #24
   2139c:	movw	r5, #26864	; 0x68f0
   213a0:	movt	r5, #4
   213a4:	mov	r6, r0
   213a8:	mov	r7, r1
   213ac:	ldrb	r3, [r0]
   213b0:	ldr	r2, [r5]
   213b4:	cmp	r3, #45	; 0x2d
   213b8:	str	r2, [fp, #-32]	; 0xffffffe0
   213bc:	beq	21424 <__assert_fail@plt+0xf6f4>
   213c0:	mov	r0, #0
   213c4:	mov	r1, r6
   213c8:	mov	r3, r0
   213cc:	mov	r2, #4
   213d0:	bl	2dc24 <error@@Base+0xafe4>
   213d4:	subs	r4, r0, #0
   213d8:	beq	21450 <__assert_fail@plt+0xf720>
   213dc:	movw	r6, #27308	; 0x6aac
   213e0:	movt	r6, #4
   213e4:	ldr	r3, [r6, #12]
   213e8:	cmp	r3, #0
   213ec:	bne	21400 <__assert_fail@plt+0xf6d0>
   213f0:	b	21434 <__assert_fail@plt+0xf704>
   213f4:	ldr	r3, [r3]
   213f8:	cmp	r3, #0
   213fc:	beq	21434 <__assert_fail@plt+0xf704>
   21400:	ldr	r2, [r3, #4]
   21404:	cmp	r4, r2
   21408:	bne	213f4 <__assert_fail@plt+0xf6c4>
   2140c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21410:	ldr	r3, [r5]
   21414:	cmp	r2, r3
   21418:	bne	21580 <__assert_fail@plt+0xf850>
   2141c:	sub	sp, fp, #28
   21420:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21424:	ldrb	r3, [r0, #1]
   21428:	cmp	r3, #0
   2142c:	bne	213c0 <__assert_fail@plt+0xf690>
   21430:	b	2140c <__assert_fail@plt+0xf6dc>
   21434:	mov	r0, #8
   21438:	bl	22f44 <error@@Base+0x304>
   2143c:	ldr	r3, [r6, #12]
   21440:	str	r4, [r0, #4]
   21444:	str	r0, [r6, #12]
   21448:	str	r3, [r0]
   2144c:	b	2140c <__assert_fail@plt+0xf6dc>
   21450:	cmp	r7, #0
   21454:	bne	2140c <__assert_fail@plt+0xf6dc>
   21458:	mov	r0, r6
   2145c:	movw	r4, #27308	; 0x6aac
   21460:	bl	21098 <__assert_fail@plt+0xf368>
   21464:	movt	r4, #4
   21468:	bl	2b9c0 <error@@Base+0x8d80>
   2146c:	bl	17bc4 <__assert_fail@plt+0x5e94>
   21470:	ldrb	r3, [r0, #79]	; 0x4f
   21474:	mov	r6, r0
   21478:	orr	r3, r3, #1
   2147c:	strb	r3, [r0, #79]	; 0x4f
   21480:	ldr	r3, [r4, #16]
   21484:	mov	r0, #20
   21488:	cmp	r3, #0
   2148c:	beq	2156c <__assert_fail@plt+0xf83c>
   21490:	ldr	r7, [r4, #20]
   21494:	bl	22f78 <error@@Base+0x338>
   21498:	ldr	r3, [r4, #20]
   2149c:	str	r0, [r7]
   214a0:	ldr	r3, [r3]
   214a4:	mov	r2, r3
   214a8:	str	r3, [r4, #20]
   214ac:	str	r6, [r2, #12]
   214b0:	movw	r0, #8800	; 0x2260
   214b4:	mov	r1, #12
   214b8:	movt	r0, #3
   214bc:	bl	2c6f8 <error@@Base+0x9ab8>
   214c0:	cmp	r0, #0
   214c4:	ldreq	r7, [r6]
   214c8:	beq	21530 <__assert_fail@plt+0xf800>
   214cc:	ldr	r7, [r0, #8]
   214d0:	mov	r0, r7
   214d4:	bl	11b5c <strlen@plt>
   214d8:	mov	r4, r0
   214dc:	ldr	r0, [r6]
   214e0:	bl	11b5c <strlen@plt>
   214e4:	mov	r1, r7
   214e8:	mov	r2, r4
   214ec:	add	r3, r4, r0
   214f0:	mov	r9, r0
   214f4:	add	r3, r3, #16
   214f8:	bic	r3, r3, #7
   214fc:	sub	sp, sp, r3
   21500:	add	r8, sp, #23
   21504:	lsr	r8, r8, #3
   21508:	lsl	r7, r8, #3
   2150c:	mov	r0, r7
   21510:	bl	118c8 <memcpy@plt>
   21514:	add	r0, r4, #1
   21518:	mov	r3, #32
   2151c:	add	r2, r9, #1
   21520:	strb	r3, [r4, r8, lsl #3]
   21524:	add	r0, r7, r0
   21528:	ldr	r1, [r6]
   2152c:	bl	118c8 <memcpy@plt>
   21530:	movw	r3, #26824	; 0x68c8
   21534:	movt	r3, #4
   21538:	mov	ip, #0
   2153c:	str	ip, [sp]
   21540:	ldr	lr, [r3]
   21544:	mov	r2, r7
   21548:	mov	r3, ip
   2154c:	movw	r0, #8800	; 0x2260
   21550:	mov	r1, #12
   21554:	movt	r0, #3
   21558:	ldr	lr, [lr, #4]
   2155c:	str	ip, [sp, #8]
   21560:	str	lr, [sp, #4]
   21564:	bl	2c3b8 <error@@Base+0x9778>
   21568:	b	2140c <__assert_fail@plt+0xf6dc>
   2156c:	bl	22f78 <error@@Base+0x338>
   21570:	mov	r2, r0
   21574:	str	r0, [r4, #16]
   21578:	str	r0, [r4, #20]
   2157c:	b	214ac <__assert_fail@plt+0xf77c>
   21580:	bl	11934 <__stack_chk_fail@plt>
   21584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21588:	add	fp, sp, #32
   2158c:	sub	sp, sp, #116	; 0x74
   21590:	movw	r5, #8840	; 0x2288
   21594:	movt	r5, #3
   21598:	str	r0, [fp, #-120]	; 0xffffff88
   2159c:	movw	ip, #8860	; 0x229c
   215a0:	str	r1, [fp, #-112]	; 0xffffff90
   215a4:	movt	ip, #3
   215a8:	ldm	r5!, {r0, r1, r2, r3}
   215ac:	sub	r4, fp, #108	; 0x6c
   215b0:	sub	lr, fp, #68	; 0x44
   215b4:	movw	r6, #26864	; 0x68f0
   215b8:	movt	r6, #4
   215bc:	str	r6, [fp, #-116]	; 0xffffff8c
   215c0:	movw	r7, #8888	; 0x22b8
   215c4:	movt	r7, #3
   215c8:	stmia	r4!, {r0, r1, r2, r3}
   215cc:	sub	r6, fp, #88	; 0x58
   215d0:	ldm	ip!, {r0, r1, r2, r3}
   215d4:	mov	r9, #0
   215d8:	ldr	sl, [r5]
   215dc:	ldr	r5, [pc, #1856]	; 21d24 <__assert_fail@plt+0xfff4>
   215e0:	stmia	lr!, {r0, r1, r2, r3}
   215e4:	ldm	ip, {r0, r1, r2}
   215e8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   215ec:	strb	sl, [r4]
   215f0:	lsr	sl, r2, #16
   215f4:	ldr	r4, [r3]
   215f8:	movw	r3, #6032	; 0x1790
   215fc:	stmia	lr!, {r0, r1}
   21600:	movt	r3, #3
   21604:	strh	r2, [lr], #2
   21608:	str	r3, [fp, #-124]	; 0xffffff84
   2160c:	ldm	r7!, {r0, r1, r2, r3}
   21610:	strb	sl, [lr]
   21614:	str	r4, [fp, #-40]	; 0xffffffd8
   21618:	mov	r4, r9
   2161c:	stmia	r6!, {r0, r1, r2, r3}
   21620:	ldr	r3, [r7]
   21624:	mov	r7, #98	; 0x62
   21628:	mov	sl, r7
   2162c:	str	r3, [r6]
   21630:	sub	r6, r5, #28
   21634:	ldrb	r3, [r6, #12]
   21638:	tst	r3, #2
   2163c:	beq	2173c <__assert_fail@plt+0xfa0c>
   21640:	ldr	r1, [fp, #-112]	; 0xffffff90
   21644:	cmp	r1, #0
   21648:	beq	21654 <__assert_fail@plt+0xf924>
   2164c:	tst	r3, #4
   21650:	bne	2173c <__assert_fail@plt+0xfa0c>
   21654:	ldr	r3, [r5, #-24]	; 0xffffffe8
   21658:	cmp	r3, #6
   2165c:	ldrls	pc, [pc, r3, lsl #2]
   21660:	b	21a24 <__assert_fail@plt+0xfcf4>
   21664:			; <UNDEFINED> instruction: 0x000219b0
   21668:			; <UNDEFINED> instruction: 0x000219b0
   2166c:	strdeq	r1, [r2], -r8
   21670:	strdeq	r1, [r2], -r8
   21674:	andeq	r1, r2, r0, asr #16
   21678:	andeq	r1, r2, r0, lsl #13
   2167c:	andeq	r1, r2, ip, lsr r7
   21680:	ldr	r1, [fp, #-120]	; 0xffffff88
   21684:	cmp	r1, #0
   21688:	beq	2173c <__assert_fail@plt+0xfa0c>
   2168c:	ldr	r1, [r5, #-8]
   21690:	ldr	r3, [r5, #-20]	; 0xffffffec
   21694:	cmp	r1, #0
   21698:	beq	216b0 <__assert_fail@plt+0xf980>
   2169c:	vldr	d6, [r1]
   216a0:	vldr	d7, [r3]
   216a4:	vcmp.f64	d7, d6
   216a8:	vmrs	APSR_nzcv, fpscr
   216ac:	beq	2173c <__assert_fail@plt+0xfa0c>
   216b0:	ldr	r1, [r5, #-12]
   216b4:	cmp	r1, #0
   216b8:	beq	216d0 <__assert_fail@plt+0xf9a0>
   216bc:	vldr	d7, [r3]
   216c0:	vldr	d6, [r1]
   216c4:	vcmp.f64	d7, d6
   216c8:	vmrs	APSR_nzcv, fpscr
   216cc:	beq	21bfc <__assert_fail@plt+0xfecc>
   216d0:	sub	sp, sp, #112	; 0x70
   216d4:	ldrd	r2, [r3]
   216d8:	add	r7, sp, #16
   216dc:	mov	r1, #1
   216e0:	add	r9, r9, #4
   216e4:	strd	r2, [sp]
   216e8:	mov	r0, r7
   216ec:	mov	r2, #100	; 0x64
   216f0:	movw	r3, #8816	; 0x2270
   216f4:	movt	r3, #3
   216f8:	bl	11b98 <__sprintf_chk@plt>
   216fc:	sub	sp, sp, #24
   21700:	add	sl, sp, #16
   21704:	mov	r0, r7
   21708:	stm	sl, {r4, r6, r7}
   2170c:	bl	11b5c <strlen@plt>
   21710:	ldr	r2, [r5, #-28]	; 0xffffffe4
   21714:	cmp	r2, #255	; 0xff
   21718:	movle	r4, sl
   2171c:	add	r0, r0, r0, lsl #1
   21720:	add	r9, r9, r0
   21724:	ble	2173c <__assert_fail@plt+0xfa0c>
   21728:	ldr	r0, [r5, #-4]
   2172c:	add	r9, r9, #2
   21730:	bl	11b5c <strlen@plt>
   21734:	mov	r4, sl
   21738:	add	r9, r9, r0
   2173c:	ldr	sl, [r5], #28
   21740:	cmp	sl, #0
   21744:	bne	21630 <__assert_fail@plt+0xf900>
   21748:	add	r3, r9, #67	; 0x43
   2174c:	mov	r1, sl
   21750:	bic	r3, r3, #7
   21754:	add	r2, r9, #53	; 0x35
   21758:	sub	sp, sp, r3
   2175c:	mov	sl, #45	; 0x2d
   21760:	add	r6, sp, #16
   21764:	add	r7, r6, #1
   21768:	mov	r0, r6
   2176c:	bl	11bc8 <memset@plt>
   21770:	cmp	r4, #0
   21774:	mov	r5, r7
   21778:	strb	sl, [r6]
   2177c:	beq	21cc8 <__assert_fail@plt+0xff98>
   21780:	mov	r8, #32
   21784:	b	217d4 <__assert_fail@plt+0xfaa4>
   21788:	ldrb	r2, [r2]
   2178c:	cmp	r2, #0
   21790:	beq	217bc <__assert_fail@plt+0xfa8c>
   21794:	ldr	r2, [r4, #4]
   21798:	add	r0, r3, #1
   2179c:	ldr	r2, [r2]
   217a0:	cmp	r2, #255	; 0xff
   217a4:	movle	r2, #32
   217a8:	movgt	r2, #61	; 0x3d
   217ac:	strb	r2, [r3]
   217b0:	ldr	r1, [r4, #8]
   217b4:	bl	21190 <__assert_fail@plt+0xf460>
   217b8:	mov	r3, r0
   217bc:	mov	r5, r3
   217c0:	strb	r8, [r5], #2
   217c4:	strb	sl, [r3, #1]
   217c8:	ldr	r4, [r4]
   217cc:	cmp	r4, #0
   217d0:	beq	21a28 <__assert_fail@plt+0xfcf8>
   217d4:	ldr	r3, [r4, #4]
   217d8:	ldr	r3, [r3]
   217dc:	cmp	r3, #255	; 0xff
   217e0:	strble	r3, [r5]
   217e4:	addle	r3, r5, #1
   217e8:	ble	21818 <__assert_fail@plt+0xfae8>
   217ec:	ldrb	r3, [r5]
   217f0:	mov	r0, r5
   217f4:	cmp	r3, #45	; 0x2d
   217f8:	strbne	r8, [r0], #2
   217fc:	strbne	sl, [r5, #1]
   21800:	add	r0, r0, #1
   21804:	strb	sl, [r0, #-1]
   21808:	ldr	r3, [r4, #4]
   2180c:	ldr	r1, [r3, #24]
   21810:	bl	11904 <stpcpy@plt>
   21814:	mov	r3, r0
   21818:	ldr	r2, [r4, #8]
   2181c:	cmp	r2, #0
   21820:	bne	21788 <__assert_fail@plt+0xfa58>
   21824:	ldr	r2, [r4, #4]
   21828:	mov	r5, r3
   2182c:	ldr	r2, [r2]
   21830:	cmp	r2, #255	; 0xff
   21834:	strbgt	r8, [r5], #2
   21838:	strbgt	sl, [r3, #1]
   2183c:	b	217c8 <__assert_fail@plt+0xfa98>
   21840:	ldr	r3, [fp, #-120]	; 0xffffff88
   21844:	cmp	r3, #0
   21848:	beq	2173c <__assert_fail@plt+0xfa0c>
   2184c:	ldr	r1, [r5, #-8]
   21850:	ldr	r3, [r5, #-20]	; 0xffffffec
   21854:	cmp	r1, #0
   21858:	beq	2186c <__assert_fail@plt+0xfb3c>
   2185c:	ldr	r1, [r1]
   21860:	ldr	r0, [r3]
   21864:	cmp	r0, r1
   21868:	beq	2173c <__assert_fail@plt+0xfa0c>
   2186c:	ldr	r1, [r5, #-12]
   21870:	cmp	r1, #0
   21874:	beq	21888 <__assert_fail@plt+0xfb58>
   21878:	ldr	r1, [r1]
   2187c:	ldr	r0, [r3]
   21880:	cmp	r0, r1
   21884:	beq	21bfc <__assert_fail@plt+0xfecc>
   21888:	sub	sp, sp, #40	; 0x28
   2188c:	ldr	r2, [r3]
   21890:	add	r8, sp, #16
   21894:	mov	r1, #1
   21898:	movw	r3, #18120	; 0x46c8
   2189c:	movt	r3, #3
   218a0:	str	r2, [sp]
   218a4:	mov	r0, r8
   218a8:	mov	r2, #30
   218ac:	add	r9, r9, #4
   218b0:	bl	11b98 <__sprintf_chk@plt>
   218b4:	sub	sp, sp, #24
   218b8:	add	r7, sp, #16
   218bc:	mov	r0, r8
   218c0:	stm	r7, {r4, r6, r8}
   218c4:	bl	11b5c <strlen@plt>
   218c8:	ldr	r3, [r5, #-28]	; 0xffffffe4
   218cc:	cmp	r3, #255	; 0xff
   218d0:	movle	r4, r7
   218d4:	add	r0, r0, r0, lsl #1
   218d8:	add	r9, r9, r0
   218dc:	ble	2173c <__assert_fail@plt+0xfa0c>
   218e0:	ldr	r0, [r5, #-4]
   218e4:	add	r9, r9, #2
   218e8:	bl	11b5c <strlen@plt>
   218ec:	mov	r4, r7
   218f0:	add	r9, r9, r0
   218f4:	b	2173c <__assert_fail@plt+0xfa0c>
   218f8:	ldr	r1, [fp, #-120]	; 0xffffff88
   218fc:	cmp	r1, #0
   21900:	beq	2173c <__assert_fail@plt+0xfa0c>
   21904:	ldr	r3, [r5, #-20]	; 0xffffffec
   21908:	ldr	r3, [r3]
   2190c:	cmp	r3, #0
   21910:	beq	2173c <__assert_fail@plt+0xfa0c>
   21914:	ldr	ip, [r3, #4]
   21918:	mov	r0, r4
   2191c:	str	r5, [fp, #-128]	; 0xffffff80
   21920:	mov	r4, r3
   21924:	sub	r1, ip, #-1073741823	; 0xc0000001
   21928:	mov	r5, r6
   2192c:	mov	r8, ip
   21930:	lsl	r7, r1, #2
   21934:	b	2199c <__assert_fail@plt+0xfc6c>
   21938:	sub	sp, sp, #24
   2193c:	ldr	r1, [r4]
   21940:	add	r6, sp, #16
   21944:	str	r5, [r6, #4]
   21948:	ldr	r2, [r1, r7]
   2194c:	str	r0, [r6]
   21950:	cmp	r2, #0
   21954:	str	r2, [r6, #8]
   21958:	addeq	r9, r9, #1
   2195c:	beq	21974 <__assert_fail@plt+0xfc44>
   21960:	ldr	r0, [r1, r7]
   21964:	bl	11b5c <strlen@plt>
   21968:	add	r3, r9, #4
   2196c:	add	r0, r0, r0, lsl #1
   21970:	add	r9, r3, r0
   21974:	cmp	sl, #255	; 0xff
   21978:	ble	21990 <__assert_fail@plt+0xfc60>
   2197c:	ldr	r2, [fp, #-128]	; 0xffffff80
   21980:	ldr	r0, [r2, #-4]
   21984:	bl	11b5c <strlen@plt>
   21988:	add	r3, r9, #2
   2198c:	add	r9, r3, r0
   21990:	sub	r8, r8, #1
   21994:	sub	r7, r7, #4
   21998:	mov	r0, r6
   2199c:	cmp	r8, #0
   219a0:	bne	21938 <__assert_fail@plt+0xfc08>
   219a4:	mov	r4, r0
   219a8:	ldr	r5, [fp, #-128]	; 0xffffff80
   219ac:	b	2173c <__assert_fail@plt+0xfa0c>
   219b0:	ldr	r1, [r5, #-20]	; 0xffffffec
   219b4:	and	r3, r3, #1
   219b8:	ldr	r1, [r1]
   219bc:	cmp	r1, #0
   219c0:	eorne	r3, r3, #1
   219c4:	cmp	r3, #0
   219c8:	beq	2173c <__assert_fail@plt+0xfa0c>
   219cc:	ldr	r3, [r5, #-8]
   219d0:	cmp	r3, #0
   219d4:	beq	219e4 <__assert_fail@plt+0xfcb4>
   219d8:	ldr	r3, [r3]
   219dc:	cmp	r1, r3
   219e0:	beq	2173c <__assert_fail@plt+0xfa0c>
   219e4:	sub	sp, sp, #24
   219e8:	cmp	sl, #255	; 0xff
   219ec:	add	r3, sp, #16
   219f0:	mov	r2, #0
   219f4:	str	r4, [r3]
   219f8:	addle	r9, r9, #1
   219fc:	str	r6, [r3, #4]
   21a00:	movle	r4, r3
   21a04:	str	r2, [r3, #8]
   21a08:	ble	2173c <__assert_fail@plt+0xfa0c>
   21a0c:	ldr	r0, [r5, #-4]
   21a10:	mov	r4, r3
   21a14:	bl	11b5c <strlen@plt>
   21a18:	add	r9, r9, #3
   21a1c:	add	r9, r9, r0
   21a20:	b	2173c <__assert_fail@plt+0xfa0c>
   21a24:	bl	11d00 <abort@plt>
   21a28:	cmp	r5, r7
   21a2c:	beq	21cc8 <__assert_fail@plt+0xff98>
   21a30:	ldrb	r3, [r5, #-1]
   21a34:	movw	r8, #26824	; 0x68c8
   21a38:	movt	r8, #4
   21a3c:	cmp	r3, #45	; 0x2d
   21a40:	beq	21c4c <__assert_fail@plt+0xff1c>
   21a44:	strb	r4, [r5]
   21a48:	mov	r2, #1
   21a4c:	ldr	ip, [r8]
   21a50:	mov	r3, r2
   21a54:	str	r2, [sp]
   21a58:	movw	r0, #8820	; 0x2274
   21a5c:	mov	r1, #6
   21a60:	movt	r0, #3
   21a64:	ldr	ip, [ip, #4]
   21a68:	mov	r2, r6
   21a6c:	str	r4, [sp, #8]
   21a70:	movw	r4, #27308	; 0x6aac
   21a74:	movt	r4, #4
   21a78:	str	ip, [sp, #4]
   21a7c:	bl	2c3b8 <error@@Base+0x9778>
   21a80:	ldr	r3, [r4, #24]
   21a84:	cmp	r3, #0
   21a88:	beq	21ac4 <__assert_fail@plt+0xfd94>
   21a8c:	add	lr, r5, #1
   21a90:	mov	r3, #32
   21a94:	strb	r3, [r5]
   21a98:	sub	ip, fp, #88	; 0x58
   21a9c:	add	r5, lr, #19
   21aa0:	ldm	ip!, {r0, r1, r2, r3}
   21aa4:	ldrh	sl, [ip]
   21aa8:	ldrb	ip, [ip, #2]
   21aac:	str	r0, [lr]
   21ab0:	str	r1, [lr, #4]
   21ab4:	str	r2, [lr, #8]
   21ab8:	str	r3, [lr, #12]
   21abc:	strh	sl, [lr, #16]
   21ac0:	strb	ip, [lr, #18]
   21ac4:	ldr	r3, [fp, #-120]	; 0xffffff88
   21ac8:	cmp	r3, #0
   21acc:	beq	21b68 <__assert_fail@plt+0xfe38>
   21ad0:	ldr	r3, [r4, #12]
   21ad4:	cmp	r3, #0
   21ad8:	beq	21b68 <__assert_fail@plt+0xfe38>
   21adc:	cmp	r5, r7
   21ae0:	moveq	ip, r6
   21ae4:	beq	21b20 <__assert_fail@plt+0xfdf0>
   21ae8:	ldrb	r3, [r5, #-1]
   21aec:	cmp	r3, #45	; 0x2d
   21af0:	beq	21b0c <__assert_fail@plt+0xfddc>
   21af4:	mov	r3, r5
   21af8:	mov	r1, #32
   21afc:	mov	r2, #45	; 0x2d
   21b00:	strb	r1, [r3], #2
   21b04:	strb	r2, [r5, #1]
   21b08:	mov	r5, r3
   21b0c:	mov	ip, r5
   21b10:	mov	r2, #45	; 0x2d
   21b14:	mov	r3, #32
   21b18:	strb	r2, [ip], #2
   21b1c:	strb	r3, [r5, #1]
   21b20:	movw	r3, #29524	; 0x7354
   21b24:	movt	r3, #4
   21b28:	ldr	r3, [r3]
   21b2c:	cmp	r3, #0
   21b30:	beq	21ca8 <__assert_fail@plt+0xff78>
   21b34:	sub	lr, fp, #68	; 0x44
   21b38:	add	r5, ip, #26
   21b3c:	ldm	lr!, {r0, r1, r2, r3}
   21b40:	str	r0, [ip]
   21b44:	str	r1, [ip, #4]
   21b48:	ldm	lr!, {r0, r1}
   21b4c:	str	r3, [ip, #12]
   21b50:	str	r2, [ip, #8]
   21b54:	ldrh	r3, [lr]
   21b58:	str	r0, [ip, #16]
   21b5c:	str	r1, [ip, #20]
   21b60:	strh	r3, [ip, #24]
   21b64:	b	21b80 <__assert_fail@plt+0xfe50>
   21b68:	cmp	r5, r7
   21b6c:	subeq	r5, r5, #1
   21b70:	beq	21b80 <__assert_fail@plt+0xfe50>
   21b74:	ldrb	r3, [r5, #-1]
   21b78:	cmp	r3, #45	; 0x2d
   21b7c:	subeq	r5, r5, #2
   21b80:	mov	r3, #0
   21b84:	strb	r3, [r5]
   21b88:	ldrb	r3, [r6]
   21b8c:	cmp	r3, #45	; 0x2d
   21b90:	beq	21c3c <__assert_fail@plt+0xff0c>
   21b94:	ldr	r1, [r8]
   21b98:	mov	r3, #1
   21b9c:	str	r3, [sp]
   21ba0:	mov	r2, r6
   21ba4:	mov	r3, #0
   21ba8:	movw	r0, #8828	; 0x227c
   21bac:	ldr	ip, [r1, #4]
   21bb0:	movt	r0, #3
   21bb4:	str	r3, [sp, #8]
   21bb8:	mov	r1, #9
   21bbc:	mov	r3, #2
   21bc0:	str	ip, [sp, #4]
   21bc4:	bl	2c3b8 <error@@Base+0x9778>
   21bc8:	ldr	r6, [fp, #-120]	; 0xffffff88
   21bcc:	cmp	r6, #0
   21bd0:	ldrbeq	r3, [r0, #23]
   21bd4:	bfieq	r3, r6, #5, #2
   21bd8:	strbeq	r3, [r0, #23]
   21bdc:	ldr	r6, [fp, #-116]	; 0xffffff8c
   21be0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   21be4:	ldr	r0, [r0, #8]
   21be8:	ldr	r3, [r6]
   21bec:	cmp	r2, r3
   21bf0:	bne	21d20 <__assert_fail@plt+0xfff0>
   21bf4:	sub	sp, fp, #32
   21bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21bfc:	sub	sp, sp, #24
   21c00:	cmp	sl, #255	; 0xff
   21c04:	add	r3, sp, #16
   21c08:	addle	r9, r9, #4
   21c0c:	str	r6, [r3, #4]
   21c10:	ldr	r6, [fp, #-124]	; 0xffffff84
   21c14:	str	r4, [r3]
   21c18:	movle	r4, r3
   21c1c:	str	r6, [r3, #8]
   21c20:	ble	2173c <__assert_fail@plt+0xfa0c>
   21c24:	ldr	r0, [r5, #-4]
   21c28:	mov	r4, r3
   21c2c:	bl	11b5c <strlen@plt>
   21c30:	add	r9, r9, #6
   21c34:	add	r9, r9, r0
   21c38:	b	2173c <__assert_fail@plt+0xfa0c>
   21c3c:	ldrb	r3, [r6, #1]
   21c40:	cmp	r3, #45	; 0x2d
   21c44:	movne	r6, r7
   21c48:	b	21b94 <__assert_fail@plt+0xfe64>
   21c4c:	strb	r4, [r5, #-2]
   21c50:	mov	r2, #1
   21c54:	ldr	ip, [r8]
   21c58:	mov	r3, r2
   21c5c:	str	r2, [sp]
   21c60:	movw	r0, #8820	; 0x2274
   21c64:	mov	r1, #6
   21c68:	movt	r0, #3
   21c6c:	ldr	ip, [ip, #4]
   21c70:	mov	r2, r6
   21c74:	str	r4, [sp, #8]
   21c78:	movw	r4, #27308	; 0x6aac
   21c7c:	movt	r4, #4
   21c80:	sub	r5, r5, #2
   21c84:	str	ip, [sp, #4]
   21c88:	bl	2c3b8 <error@@Base+0x9778>
   21c8c:	ldr	r3, [r4, #24]
   21c90:	cmp	r3, #0
   21c94:	beq	21ac4 <__assert_fail@plt+0xfd94>
   21c98:	cmp	r7, r5
   21c9c:	bne	21a8c <__assert_fail@plt+0xfd5c>
   21ca0:	mov	lr, r6
   21ca4:	b	21a98 <__assert_fail@plt+0xfd68>
   21ca8:	sub	lr, fp, #108	; 0x6c
   21cac:	add	r5, ip, #16
   21cb0:	ldm	lr!, {r0, r1, r2, r3}
   21cb4:	str	r0, [ip]
   21cb8:	str	r1, [ip, #4]
   21cbc:	str	r2, [ip, #8]
   21cc0:	str	r3, [ip, #12]
   21cc4:	b	21b80 <__assert_fail@plt+0xfe50>
   21cc8:	movw	r8, #26824	; 0x68c8
   21ccc:	movt	r8, #4
   21cd0:	mov	r2, #0
   21cd4:	mov	r1, #1
   21cd8:	ldr	ip, [r8]
   21cdc:	movw	r4, #27308	; 0x6aac
   21ce0:	strb	r2, [r6]
   21ce4:	movt	r4, #4
   21ce8:	str	r1, [sp]
   21cec:	mov	r3, r1
   21cf0:	ldr	ip, [ip, #4]
   21cf4:	movw	r0, #8820	; 0x2274
   21cf8:	str	r2, [sp, #8]
   21cfc:	movt	r0, #3
   21d00:	mov	r1, #6
   21d04:	mov	r2, r6
   21d08:	str	ip, [sp, #4]
   21d0c:	bl	2c3b8 <error@@Base+0x9778>
   21d10:	ldr	r3, [r4, #24]
   21d14:	cmp	r3, #0
   21d18:	bne	21ca0 <__assert_fail@plt+0xff70>
   21d1c:	b	21ac4 <__assert_fail@plt+0xfd94>
   21d20:	bl	11934 <__stack_chk_fail@plt>
   21d24:	andeq	r1, r3, r0, lsl #26
   21d28:	push	{r4, r5, r6, r7, lr}
   21d2c:	movw	r4, #27308	; 0x6aac
   21d30:	movt	r4, #4
   21d34:	movw	r2, #6032	; 0x1790
   21d38:	movw	r3, #8908	; 0x22cc
   21d3c:	movt	r2, #3
   21d40:	ldr	r5, [r4, #28]
   21d44:	movt	r3, #3
   21d48:	ldr	r6, [r4, #32]
   21d4c:	sub	sp, sp, #12
   21d50:	cmp	r5, #0
   21d54:	moveq	r5, r2
   21d58:	movne	r5, r3
   21d5c:	cmp	r6, #0
   21d60:	beq	21d6c <__assert_fail@plt+0x1003c>
   21d64:	add	sp, sp, #12
   21d68:	pop	{r4, r5, r6, r7, pc}
   21d6c:	movw	r3, #26844	; 0x68dc
   21d70:	movt	r3, #4
   21d74:	movw	r7, #28312	; 0x6e98
   21d78:	movt	r7, #4
   21d7c:	ldr	r3, [r3]
   21d80:	movw	r1, #8912	; 0x22d0
   21d84:	mov	r0, #1
   21d88:	movt	r1, #3
   21d8c:	mov	r2, r5
   21d90:	bl	11be0 <__printf_chk@plt>
   21d94:	ldr	r3, [r7]
   21d98:	cmp	r3, #0
   21d9c:	beq	21dac <__assert_fail@plt+0x1007c>
   21da0:	ldrb	r3, [r3]
   21da4:	cmp	r3, #0
   21da8:	bne	21e3c <__assert_fail@plt+0x1010c>
   21dac:	mov	r2, #5
   21db0:	movw	r1, #8928	; 0x22e0
   21db4:	mov	r0, #0
   21db8:	movt	r1, #3
   21dbc:	bl	1191c <dcgettext@plt>
   21dc0:	movw	r3, #26840	; 0x68d8
   21dc4:	movt	r3, #4
   21dc8:	mov	r2, r5
   21dcc:	ldr	r3, [r3]
   21dd0:	mov	r1, r0
   21dd4:	mov	r0, #1
   21dd8:	bl	11be0 <__printf_chk@plt>
   21ddc:	mov	r2, r5
   21de0:	movw	r1, #8968	; 0x2308
   21de4:	mov	r0, #1
   21de8:	movt	r1, #3
   21dec:	bl	11be0 <__printf_chk@plt>
   21df0:	mov	r2, #5
   21df4:	movw	r1, #9024	; 0x2340
   21df8:	mov	r0, #0
   21dfc:	movt	r1, #3
   21e00:	bl	1191c <dcgettext@plt>
   21e04:	mov	r2, r5
   21e08:	mov	r3, r5
   21e0c:	str	r5, [sp]
   21e10:	mov	r1, r0
   21e14:	mov	r0, #1
   21e18:	bl	11be0 <__printf_chk@plt>
   21e1c:	movw	r3, #26888	; 0x6908
   21e20:	movt	r3, #4
   21e24:	mov	r2, #1
   21e28:	str	r2, [r4, #32]
   21e2c:	ldr	r0, [r3]
   21e30:	add	sp, sp, #12
   21e34:	pop	{r4, r5, r6, r7, lr}
   21e38:	b	11868 <fflush@plt>
   21e3c:	mov	r0, r6
   21e40:	mov	r2, #5
   21e44:	movw	r1, #8944	; 0x22f0
   21e48:	movt	r1, #3
   21e4c:	bl	1191c <dcgettext@plt>
   21e50:	ldr	ip, [r7]
   21e54:	movw	r3, #26840	; 0x68d8
   21e58:	movt	r3, #4
   21e5c:	mov	r2, r5
   21e60:	str	ip, [sp]
   21e64:	ldr	r3, [r3]
   21e68:	mov	r1, r0
   21e6c:	mov	r0, #1
   21e70:	bl	11be0 <__printf_chk@plt>
   21e74:	b	21ddc <__assert_fail@plt+0x100ac>
   21e78:	push	{r4, r5, r6, lr}
   21e7c:	movw	r4, #26864	; 0x68f0
   21e80:	movt	r4, #4
   21e84:	sub	sp, sp, #8
   21e88:	mov	r0, #0
   21e8c:	add	r5, sp, #8
   21e90:	ldr	r3, [r4]
   21e94:	str	r3, [sp, #4]
   21e98:	bl	118ec <time@plt>
   21e9c:	mov	r2, #5
   21ea0:	movw	r1, #9232	; 0x2410
   21ea4:	movt	r1, #3
   21ea8:	str	r0, [r5, #-8]!
   21eac:	mov	r0, #0
   21eb0:	bl	1191c <dcgettext@plt>
   21eb4:	mov	r6, r0
   21eb8:	mov	r0, sp
   21ebc:	bl	11910 <ctime@plt>
   21ec0:	mov	r1, r6
   21ec4:	mov	r2, r0
   21ec8:	mov	r0, #1
   21ecc:	bl	11be0 <__printf_chk@plt>
   21ed0:	bl	2dd30 <error@@Base+0xb0f0>
   21ed4:	bl	16748 <__assert_fail@plt+0x4a18>
   21ed8:	bl	2b5a4 <error@@Base+0x8964>
   21edc:	bl	194c4 <__assert_fail@plt+0x7794>
   21ee0:	bl	2e6b4 <error@@Base+0xba74>
   21ee4:	movw	r0, #9268	; 0x2434
   21ee8:	movt	r0, #3
   21eec:	bl	2bab4 <error@@Base+0x8e74>
   21ef0:	mov	r0, #0
   21ef4:	bl	118ec <time@plt>
   21ef8:	mov	r2, #5
   21efc:	movw	r1, #9272	; 0x2438
   21f00:	movt	r1, #3
   21f04:	str	r0, [sp]
   21f08:	mov	r0, #0
   21f0c:	bl	1191c <dcgettext@plt>
   21f10:	mov	r6, r0
   21f14:	mov	r0, sp
   21f18:	bl	11910 <ctime@plt>
   21f1c:	mov	r1, r6
   21f20:	mov	r2, r0
   21f24:	mov	r0, #1
   21f28:	bl	11be0 <__printf_chk@plt>
   21f2c:	ldr	r2, [sp, #4]
   21f30:	ldr	r3, [r4]
   21f34:	cmp	r2, r3
   21f38:	bne	21f44 <__assert_fail@plt+0x10214>
   21f3c:	add	sp, sp, #8
   21f40:	pop	{r4, r5, r6, pc}
   21f44:	bl	11934 <__stack_chk_fail@plt>
   21f48:	push	{r3, r4, r5, lr}
   21f4c:	mov	r4, r0
   21f50:	mov	r0, r1
   21f54:	mov	r5, r1
   21f58:	bl	11b5c <strlen@plt>
   21f5c:	add	r0, r0, #1
   21f60:	bl	22f44 <error@@Base+0x304>
   21f64:	mov	r1, r5
   21f68:	str	r0, [r4]
   21f6c:	bl	11a30 <strcpy@plt>
   21f70:	ldr	r0, [r4]
   21f74:	bl	11a90 <mkstemp64@plt>
   21f78:	cmn	r0, #1
   21f7c:	beq	21f90 <__assert_fail@plt+0x10260>
   21f80:	movw	r1, #9308	; 0x245c
   21f84:	movt	r1, #3
   21f88:	pop	{r3, r4, r5, lr}
   21f8c:	b	117f0 <fdopen@plt>
   21f90:	mov	r0, #0
   21f94:	pop	{r3, r4, r5, pc}
   21f98:	movw	r3, #27308	; 0x6aac
   21f9c:	movt	r3, #4
   21fa0:	push	{r4, r5, r6, r7, lr}
   21fa4:	mov	r4, r0
   21fa8:	ldr	r2, [r3, #36]	; 0x24
   21fac:	sub	sp, sp, #12
   21fb0:	cmp	r2, #0
   21fb4:	beq	22054 <__assert_fail@plt+0x10324>
   21fb8:	ldr	r2, [r3, #40]	; 0x28
   21fbc:	cmp	r0, r2
   21fc0:	beq	22054 <__assert_fail@plt+0x10324>
   21fc4:	ldr	r2, [r3, #28]
   21fc8:	movw	r6, #26888	; 0x6908
   21fcc:	str	r0, [r3, #40]	; 0x28
   21fd0:	movt	r6, #4
   21fd4:	cmp	r2, #0
   21fd8:	bne	220cc <__assert_fail@plt+0x1039c>
   21fdc:	movw	r5, #29540	; 0x7364
   21fe0:	movt	r5, #4
   21fe4:	ldr	r0, [r5]
   21fe8:	cmp	r0, #0
   21fec:	bne	2205c <__assert_fail@plt+0x1032c>
   21ff0:	movw	r5, #29512	; 0x7348
   21ff4:	movt	r5, #4
   21ff8:	ldr	r3, [r5]
   21ffc:	cmp	r3, #0
   22000:	beq	2210c <__assert_fail@plt+0x103dc>
   22004:	cmp	r4, #0
   22008:	movwne	r1, #9384	; 0x24a8
   2200c:	movweq	r1, #9416	; 0x24c8
   22010:	movtne	r1, #3
   22014:	movteq	r1, #3
   22018:	movne	r2, #5
   2201c:	moveq	r0, r4
   22020:	moveq	r2, #5
   22024:	bl	1191c <dcgettext@plt>
   22028:	movw	r2, #29532	; 0x735c
   2202c:	movt	r2, #4
   22030:	ldr	r3, [r5]
   22034:	ldr	r2, [r2]
   22038:	mov	r1, r0
   2203c:	mov	r0, #1
   22040:	bl	11be0 <__printf_chk@plt>
   22044:	ldr	r0, [r6]
   22048:	add	sp, sp, #12
   2204c:	pop	{r4, r5, r6, r7, lr}
   22050:	b	11868 <fflush@plt>
   22054:	add	sp, sp, #12
   22058:	pop	{r4, r5, r6, r7, pc}
   2205c:	movw	r7, #29512	; 0x7348
   22060:	movt	r7, #4
   22064:	ldr	r0, [r7]
   22068:	cmp	r0, #0
   2206c:	beq	220e8 <__assert_fail@plt+0x103b8>
   22070:	cmp	r4, #0
   22074:	movwne	r1, #9524	; 0x2534
   22078:	movweq	r1, #9560	; 0x2558
   2207c:	movtne	r1, #3
   22080:	movne	r2, #5
   22084:	moveq	r2, #5
   22088:	movteq	r1, #3
   2208c:	movne	r0, #0
   22090:	moveq	r0, r4
   22094:	bl	1191c <dcgettext@plt>
   22098:	ldr	ip, [r7]
   2209c:	movw	r2, #29532	; 0x735c
   220a0:	movt	r2, #4
   220a4:	ldr	r3, [r5]
   220a8:	ldr	r2, [r2]
   220ac:	str	ip, [sp]
   220b0:	mov	r1, r0
   220b4:	mov	r0, #1
   220b8:	bl	11be0 <__printf_chk@plt>
   220bc:	ldr	r0, [r6]
   220c0:	add	sp, sp, #12
   220c4:	pop	{r4, r5, r6, r7, lr}
   220c8:	b	11868 <fflush@plt>
   220cc:	movw	r0, #8908	; 0x22cc
   220d0:	mov	r1, #1
   220d4:	ldr	r3, [r6]
   220d8:	mov	r2, #2
   220dc:	movt	r0, #3
   220e0:	bl	11a00 <fwrite@plt>
   220e4:	b	21fdc <__assert_fail@plt+0x102ac>
   220e8:	cmp	r4, #0
   220ec:	movwne	r1, #9444	; 0x24e4
   220f0:	movweq	r1, #9484	; 0x250c
   220f4:	movne	r2, #5
   220f8:	movtne	r1, #3
   220fc:	moveq	r0, r4
   22100:	moveq	r2, #5
   22104:	movteq	r1, #3
   22108:	b	22024 <__assert_fail@plt+0x102f4>
   2210c:	cmp	r4, #0
   22110:	movwne	r1, #9312	; 0x2460
   22114:	movweq	r1, #9348	; 0x2484
   22118:	movne	r0, r3
   2211c:	movne	r2, #5
   22120:	movtne	r1, #3
   22124:	moveq	r2, #5
   22128:	movteq	r1, #3
   2212c:	moveq	r0, r4
   22130:	bl	1191c <dcgettext@plt>
   22134:	movw	r3, #29532	; 0x735c
   22138:	movt	r3, #4
   2213c:	ldr	r2, [r3]
   22140:	mov	r1, r0
   22144:	mov	r0, #1
   22148:	bl	11be0 <__printf_chk@plt>
   2214c:	b	22044 <__assert_fail@plt+0x10314>
   22150:	push	{r3, r4, r5, r6, r7, lr}
   22154:	movw	r6, #27308	; 0x6aac
   22158:	movt	r6, #4
   2215c:	mov	r7, r0
   22160:	ldrb	r3, [r6, #44]	; 0x2c
   22164:	cmp	r3, #0
   22168:	bne	221f8 <__assert_fail@plt+0x104c8>
   2216c:	ldr	r3, [r6, #48]	; 0x30
   22170:	mov	r2, #1
   22174:	strb	r2, [r6, #44]	; 0x2c
   22178:	cmp	r3, #0
   2217c:	bne	22208 <__assert_fail@plt+0x104d8>
   22180:	movw	r4, #27288	; 0x6a98
   22184:	movt	r4, #4
   22188:	adds	r5, r7, #0
   2218c:	ldr	r3, [r4]
   22190:	movne	r5, #1
   22194:	cmp	r3, #0
   22198:	beq	221b4 <__assert_fail@plt+0x10484>
   2219c:	mov	r0, #1
   221a0:	mov	r1, r5
   221a4:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   221a8:	ldr	r3, [r4]
   221ac:	cmp	r3, #0
   221b0:	bne	2219c <__assert_fail@plt+0x1046c>
   221b4:	bl	2aab0 <error@@Base+0x7e70>
   221b8:	mov	r0, #0
   221bc:	bl	180ec <__assert_fail@plt+0x63bc>
   221c0:	ldr	r3, [r6, #28]
   221c4:	cmp	r3, #0
   221c8:	bne	22200 <__assert_fail@plt+0x104d0>
   221cc:	bl	1952c <__assert_fail@plt+0x77fc>
   221d0:	mov	r0, r7
   221d4:	bl	21210 <__assert_fail@plt+0xf4e0>
   221d8:	movw	r3, #29484	; 0x732c
   221dc:	movt	r3, #4
   221e0:	ldr	r0, [r3]
   221e4:	cmp	r0, #0
   221e8:	beq	221f0 <__assert_fail@plt+0x104c0>
   221ec:	bl	119a0 <chdir@plt>
   221f0:	mov	r0, #0
   221f4:	bl	21f98 <__assert_fail@plt+0x10268>
   221f8:	mov	r0, r7
   221fc:	bl	11b44 <exit@plt>
   22200:	bl	21e78 <__assert_fail@plt+0x10148>
   22204:	b	221cc <__assert_fail@plt+0x1049c>
   22208:	bl	21d28 <__assert_fail@plt+0xfff8>
   2220c:	b	22180 <__assert_fail@plt+0x10450>
   22210:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22214:	movw	r5, #27308	; 0x6aac
   22218:	movt	r5, #4
   2221c:	movw	ip, #26864	; 0x68f0
   22220:	movt	ip, #4
   22224:	sub	sp, sp, #44	; 0x2c
   22228:	ldrb	r6, [r5, #52]	; 0x34
   2222c:	mov	r7, r0
   22230:	ldr	r3, [ip]
   22234:	mov	r8, r1
   22238:	cmp	r6, #0
   2223c:	str	r5, [sp, #16]
   22240:	str	ip, [sp, #20]
   22244:	mov	fp, r2
   22248:	str	r3, [sp, #36]	; 0x24
   2224c:	bne	22348 <__assert_fail@plt+0x10618>
   22250:	ldr	r3, [sp, #16]
   22254:	add	ip, r5, #160	; 0xa0
   22258:	ldr	r0, [pc, #1740]	; 2292c <__assert_fail@plt+0x10bfc>
   2225c:	add	r4, r5, #164	; 0xa4
   22260:	add	r1, r5, #53	; 0x35
   22264:	mov	r5, #45	; 0x2d
   22268:	strb	r5, [r3, #52]	; 0x34
   2226c:	movw	r9, #6032	; 0x1790
   22270:	ldr	r3, [pc, #1716]	; 2292c <__assert_fail@plt+0x10bfc>
   22274:	movt	r9, #3
   22278:	str	r0, [sp, #24]
   2227c:	mov	r2, #98	; 0x62
   22280:	mov	r0, r6
   22284:	mov	sl, #1
   22288:	ldr	r5, [r3]
   2228c:	cmp	r5, #0
   22290:	moveq	r5, r9
   22294:	str	r5, [r4, #-8]
   22298:	ldr	r5, [r3, #-20]	; 0xffffffec
   2229c:	cmp	r2, #255	; 0xff
   222a0:	strble	r2, [r1]
   222a4:	addle	r1, r1, #1
   222a8:	cmp	r5, #6
   222ac:	stmib	ip, {r0, r2}
   222b0:	bhi	222e8 <__assert_fail@plt+0x105b8>
   222b4:	lsl	r5, sl, r5
   222b8:	tst	r5, #67	; 0x43
   222bc:	strne	r0, [r4, #-4]
   222c0:	bne	222e8 <__assert_fail@plt+0x105b8>
   222c4:	tst	r5, #60	; 0x3c
   222c8:	beq	222e8 <__assert_fail@plt+0x105b8>
   222cc:	cmp	r2, #255	; 0xff
   222d0:	ldr	r2, [r3, #-8]
   222d4:	ble	224bc <__assert_fail@plt+0x1078c>
   222d8:	cmp	r2, #0
   222dc:	beq	22650 <__assert_fail@plt+0x10920>
   222e0:	mov	r2, #2
   222e4:	str	r2, [r4, #-4]
   222e8:	ldr	r2, [r3, #4]
   222ec:	add	r6, r6, #1
   222f0:	add	ip, ip, #16
   222f4:	add	r4, r4, #16
   222f8:	cmp	r2, #0
   222fc:	add	r3, r3, #28
   22300:	bne	22288 <__assert_fail@plt+0x10558>
   22304:	ldr	r4, [pc, #1572]	; 22930 <__assert_fail@plt+0x10c00>
   22308:	mov	ip, r2
   2230c:	ldr	r5, [pc, #1568]	; 22934 <__assert_fail@plt+0x10c04>
   22310:	add	r4, r4, r6, lsl #4
   22314:	strb	r2, [r1]
   22318:	add	r3, r5, ip
   2231c:	add	r9, r4, ip
   22320:	add	ip, ip, #16
   22324:	ldm	r3, {r0, r1, r2, r3}
   22328:	cmp	ip, #144	; 0x90
   2232c:	stm	r9, {r0, r1, r2, r3}
   22330:	bne	22318 <__assert_fail@plt+0x105e8>
   22334:	add	r3, r6, #9
   22338:	ldr	r5, [sp, #16]
   2233c:	mov	r2, #0
   22340:	add	r3, r5, r3, lsl #4
   22344:	str	r2, [r3, #156]	; 0x9c
   22348:	mov	r1, #0
   2234c:	subs	r0, fp, r1
   22350:	rsbs	sl, r0, #0
   22354:	movw	r2, #26892	; 0x690c
   22358:	adcs	sl, sl, r0
   2235c:	movw	r5, #26872	; 0x68f8
   22360:	movt	r2, #4
   22364:	movt	r5, #4
   22368:	mov	r3, r1
   2236c:	cmp	r7, r3
   22370:	movw	r6, #26896	; 0x6910
   22374:	movw	ip, #9596	; 0x257c
   22378:	movt	r6, #4
   2237c:	movt	ip, #3
   22380:	str	r1, [r5]
   22384:	str	sl, [r2]
   22388:	str	r1, [sp, #24]
   2238c:	str	ip, [sp, #28]
   22390:	ble	22400 <__assert_fail@plt+0x106d0>
   22394:	ldr	r2, [pc, #1436]	; 22938 <__assert_fail@plt+0x10c08>
   22398:	mov	r3, #0
   2239c:	mov	r0, r7
   223a0:	str	r3, [sp]
   223a4:	mov	r1, r8
   223a8:	add	r3, r2, #104	; 0x68
   223ac:	bl	11b08 <getopt_long@plt>
   223b0:	cmn	r0, #1
   223b4:	beq	22454 <__assert_fail@plt+0x10724>
   223b8:	cmp	r0, #1
   223bc:	beq	224e0 <__assert_fail@plt+0x107b0>
   223c0:	cmp	r0, #63	; 0x3f
   223c4:	beq	224ac <__assert_fail@plt+0x1077c>
   223c8:	cmp	r0, #98	; 0x62
   223cc:	ldrne	r3, [pc, #1384]	; 2293c <__assert_fail@plt+0x10c0c>
   223d0:	bne	223e4 <__assert_fail@plt+0x106b4>
   223d4:	b	22464 <__assert_fail@plt+0x10734>
   223d8:	cmp	r0, r2
   223dc:	add	r3, r3, #28
   223e0:	beq	22470 <__assert_fail@plt+0x10740>
   223e4:	ldr	r2, [r3]
   223e8:	mov	r4, r3
   223ec:	cmp	r2, #0
   223f0:	bne	223d8 <__assert_fail@plt+0x106a8>
   223f4:	ldr	r3, [r5]
   223f8:	cmp	r7, r3
   223fc:	bgt	22394 <__assert_fail@plt+0x10664>
   22400:	cmp	sl, #0
   22404:	beq	22424 <__assert_fail@plt+0x106f4>
   22408:	ldr	r5, [sp, #24]
   2240c:	cmp	r5, #0
   22410:	bne	227e4 <__assert_fail@plt+0x10ab4>
   22414:	ldr	ip, [sp, #16]
   22418:	ldr	r3, [ip, #844]	; 0x34c
   2241c:	cmp	r3, #0
   22420:	bne	227e4 <__assert_fail@plt+0x10ab4>
   22424:	ldr	ip, [sp, #20]
   22428:	ldr	r2, [sp, #36]	; 0x24
   2242c:	ldr	r3, [ip]
   22430:	cmp	r2, r3
   22434:	bne	2286c <__assert_fail@plt+0x10b3c>
   22438:	add	sp, sp, #44	; 0x2c
   2243c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22440:	ldr	r0, [r8, r3, lsl #2]
   22444:	mov	r1, fp
   22448:	add	r3, r3, #1
   2244c:	str	r3, [r5]
   22450:	bl	21390 <__assert_fail@plt+0xf660>
   22454:	ldr	r3, [r5]
   22458:	cmp	r7, r3
   2245c:	bgt	22440 <__assert_fail@plt+0x10710>
   22460:	b	22400 <__assert_fail@plt+0x106d0>
   22464:	movw	r4, #7396	; 0x1ce4
   22468:	movt	r4, #3
   2246c:	mov	r2, r0
   22470:	cmp	sl, #0
   22474:	ldr	r1, [r4, #4]
   22478:	ldrbeq	r3, [r4, #12]
   2247c:	movne	r3, #1
   22480:	andeq	r3, r3, #1
   22484:	cmp	r1, #6
   22488:	ldrls	pc, [pc, r1, lsl #2]
   2248c:	b	22648 <__assert_fail@plt+0x10918>
   22490:	andeq	r2, r2, r4, lsr r6
   22494:	andeq	r2, r2, r4, lsr r6
   22498:	andeq	r2, r2, r0, asr #11
   2249c:	andeq	r2, r2, r0, asr #11
   224a0:	andeq	r2, r2, r8, lsr #10
   224a4:	strdeq	r2, [r2], -r4
   224a8:	strdeq	r2, [r2], -r4
   224ac:	mov	ip, #1
   224b0:	ldr	r3, [r5]
   224b4:	str	ip, [sp, #24]
   224b8:	b	223f8 <__assert_fail@plt+0x106c8>
   224bc:	cmp	r2, #0
   224c0:	mov	r5, #58	; 0x3a
   224c4:	strb	r5, [r1]
   224c8:	beq	2264c <__assert_fail@plt+0x1091c>
   224cc:	strb	r5, [r1, #1]
   224d0:	mov	r2, #2
   224d4:	add	r1, r1, #2
   224d8:	str	r2, [r4, #-4]
   224dc:	b	222e8 <__assert_fail@plt+0x105b8>
   224e0:	ldr	r0, [r6]
   224e4:	mov	r1, fp
   224e8:	bl	21390 <__assert_fail@plt+0xf660>
   224ec:	ldr	r3, [r5]
   224f0:	b	223f8 <__assert_fail@plt+0x106c8>
   224f4:	ldr	r2, [r6]
   224f8:	cmp	r2, #0
   224fc:	beq	22710 <__assert_fail@plt+0x109e0>
   22500:	cmp	r3, #0
   22504:	beq	223f4 <__assert_fail@plt+0x106c4>
   22508:	ldr	r0, [r6]
   2250c:	ldr	r9, [r4, #8]
   22510:	cmp	r0, #0
   22514:	beq	226cc <__assert_fail@plt+0x1099c>
   22518:	mov	r1, #0
   2251c:	bl	11bec <strtod@plt>
   22520:	vstr	d0, [r9]
   22524:	b	223f4 <__assert_fail@plt+0x106c4>
   22528:	ldr	r2, [r6]
   2252c:	cmp	r2, #0
   22530:	beq	226d8 <__assert_fail@plt+0x109a8>
   22534:	cmp	r3, #0
   22538:	beq	223f4 <__assert_fail@plt+0x106c4>
   2253c:	ldr	r0, [r6]
   22540:	cmp	r0, #0
   22544:	beq	226b8 <__assert_fail@plt+0x10988>
   22548:	mov	r1, #0
   2254c:	mov	r2, #10
   22550:	bl	11844 <strtol@plt>
   22554:	ldr	r2, [r6]
   22558:	ldrb	r3, [r2]
   2255c:	sub	r1, r3, #48	; 0x30
   22560:	cmp	r1, #9
   22564:	bhi	22578 <__assert_fail@plt+0x10848>
   22568:	ldrb	r3, [r2, #1]!
   2256c:	sub	r1, r3, #48	; 0x30
   22570:	cmp	r1, #9
   22574:	bls	22568 <__assert_fail@plt+0x10838>
   22578:	cmp	r0, #0
   2257c:	ble	22590 <__assert_fail@plt+0x10860>
   22580:	cmp	r3, #0
   22584:	ldreq	r3, [r4, #8]
   22588:	streq	r0, [r3]
   2258c:	beq	223f4 <__assert_fail@plt+0x106c4>
   22590:	mov	r2, #5
   22594:	movw	r1, #9656	; 0x25b8
   22598:	mov	r0, #0
   2259c:	movt	r1, #3
   225a0:	bl	1191c <dcgettext@plt>
   225a4:	ldr	r2, [r4]
   225a8:	mov	ip, #1
   225ac:	str	ip, [sp, #24]
   225b0:	mov	r1, r0
   225b4:	mov	r0, #0
   225b8:	bl	22c40 <error@@Base>
   225bc:	b	223f4 <__assert_fail@plt+0x106c4>
   225c0:	cmp	r3, #0
   225c4:	beq	223f4 <__assert_fail@plt+0x106c4>
   225c8:	ldr	r3, [r6]
   225cc:	cmp	r3, #0
   225d0:	beq	227cc <__assert_fail@plt+0x10a9c>
   225d4:	ldrb	r3, [r3]
   225d8:	cmp	r3, #0
   225dc:	beq	22658 <__assert_fail@plt+0x10928>
   225e0:	ldr	r3, [r4, #8]
   225e4:	ldr	r9, [r3]
   225e8:	cmp	r9, #0
   225ec:	beq	2279c <__assert_fail@plt+0x10a6c>
   225f0:	ldmib	r9, {r1, r3}
   225f4:	sub	r2, r3, #1
   225f8:	cmp	r1, r2
   225fc:	beq	22754 <__assert_fail@plt+0x10a24>
   22600:	ldr	r3, [r4, #4]
   22604:	cmp	r3, #3
   22608:	beq	22770 <__assert_fail@plt+0x10a40>
   2260c:	ldm	r9, {r2, r3}
   22610:	ldr	r0, [r6]
   22614:	mov	r1, r3
   22618:	add	r3, r3, #1
   2261c:	str	r3, [r9, #4]
   22620:	str	r0, [r2, r1, lsl #2]
   22624:	ldr	r2, [r9]
   22628:	mov	r1, #0
   2262c:	str	r1, [r2, r3, lsl #2]
   22630:	b	223f4 <__assert_fail@plt+0x106c4>
   22634:	cmp	r3, #0
   22638:	ldrne	r3, [r4, #8]
   2263c:	eorne	r1, r1, #1
   22640:	strne	r1, [r3]
   22644:	b	223f4 <__assert_fail@plt+0x106c4>
   22648:	bl	11d00 <abort@plt>
   2264c:	add	r1, r1, #1
   22650:	str	sl, [r4, #-4]
   22654:	b	222e8 <__assert_fail@plt+0x105b8>
   22658:	cmp	r2, #255	; 0xff
   2265c:	mov	r3, #99	; 0x63
   22660:	addle	r9, sp, #40	; 0x28
   22664:	strh	r3, [sp, #32]
   22668:	movw	r1, #9600	; 0x2580
   2266c:	mov	r0, #0
   22670:	strble	r2, [r9, #-8]!
   22674:	movt	r1, #3
   22678:	mov	r2, #5
   2267c:	ldrgt	r9, [r4, #24]
   22680:	bl	1191c <dcgettext@plt>
   22684:	ldr	ip, [r4]
   22688:	movw	r2, #9592	; 0x2578
   2268c:	movt	r2, #3
   22690:	cmp	ip, #255	; 0xff
   22694:	mov	r3, r9
   22698:	mov	ip, #1
   2269c:	str	ip, [sp, #24]
   226a0:	mov	r1, r0
   226a4:	ldr	r0, [sp, #28]
   226a8:	movgt	r2, r0
   226ac:	mov	r0, #0
   226b0:	bl	22c40 <error@@Base>
   226b4:	b	225e0 <__assert_fail@plt+0x108b0>
   226b8:	ldr	r2, [r4, #16]
   226bc:	ldr	r3, [r4, #8]
   226c0:	ldr	r2, [r2]
   226c4:	str	r2, [r3]
   226c8:	b	223f4 <__assert_fail@plt+0x106c4>
   226cc:	ldr	r3, [r4, #16]
   226d0:	vldr	d0, [r3]
   226d4:	b	22520 <__assert_fail@plt+0x107f0>
   226d8:	ldr	ip, [r5]
   226dc:	cmp	r7, ip
   226e0:	ble	22534 <__assert_fail@plt+0x10804>
   226e4:	ldr	r9, [r8, ip, lsl #2]
   226e8:	sub	r1, r9, #1
   226ec:	ldrb	r2, [r1, #1]!
   226f0:	sub	r0, r2, #48	; 0x30
   226f4:	cmp	r0, #9
   226f8:	bls	226ec <__assert_fail@plt+0x109bc>
   226fc:	cmp	r2, #0
   22700:	streq	r9, [r6]
   22704:	addeq	ip, ip, #1
   22708:	streq	ip, [r5]
   2270c:	b	22534 <__assert_fail@plt+0x10804>
   22710:	ldr	r2, [r5]
   22714:	cmp	r7, r2
   22718:	ble	22500 <__assert_fail@plt+0x107d0>
   2271c:	ldr	r1, [r8, r2, lsl #2]
   22720:	ldrb	r0, [r1]
   22724:	sub	ip, r0, #48	; 0x30
   22728:	cmp	r0, #46	; 0x2e
   2272c:	cmpne	ip, #9
   22730:	bhi	22500 <__assert_fail@plt+0x107d0>
   22734:	movw	r0, #26896	; 0x6910
   22738:	movt	r0, #4
   2273c:	add	r2, r2, #1
   22740:	str	r1, [r0]
   22744:	movw	r1, #26872	; 0x68f8
   22748:	movt	r1, #4
   2274c:	str	r2, [r1]
   22750:	b	22500 <__assert_fail@plt+0x107d0>
   22754:	add	r1, r3, #5
   22758:	ldr	r0, [r9]
   2275c:	str	r1, [r9, #8]
   22760:	lsl	r1, r1, #2
   22764:	bl	22fb0 <error@@Base+0x370>
   22768:	str	r0, [r9]
   2276c:	b	22600 <__assert_fail@plt+0x108d0>
   22770:	ldr	r4, [r9, #4]
   22774:	ldr	r2, [r9]
   22778:	add	r3, r4, #1
   2277c:	ldr	r0, [r6]
   22780:	str	r3, [r9, #4]
   22784:	str	r2, [sp, #12]
   22788:	bl	21098 <__assert_fail@plt+0xf368>
   2278c:	ldr	r2, [sp, #12]
   22790:	ldr	r3, [r9, #4]
   22794:	str	r0, [r2, r4, lsl #2]
   22798:	b	22624 <__assert_fail@plt+0x108f4>
   2279c:	mov	r0, #12
   227a0:	bl	22f44 <error@@Base+0x304>
   227a4:	mov	r3, #5
   227a8:	mov	r2, #0
   227ac:	mov	r9, r0
   227b0:	stmib	r0, {r2, r3}
   227b4:	mov	r0, #20
   227b8:	bl	22f44 <error@@Base+0x304>
   227bc:	ldr	r3, [r4, #8]
   227c0:	str	r0, [r9]
   227c4:	str	r9, [r3]
   227c8:	b	22600 <__assert_fail@plt+0x108d0>
   227cc:	ldr	r0, [r4, #16]
   227d0:	bl	2312c <error@@Base+0x4ec>
   227d4:	movw	r1, #26896	; 0x6910
   227d8:	movt	r1, #4
   227dc:	str	r0, [r1]
   227e0:	b	225e0 <__assert_fail@plt+0x108b0>
   227e4:	ldr	r5, [sp, #16]
   227e8:	ldr	r3, [r5, #48]	; 0x30
   227ec:	cmp	r3, #0
   227f0:	beq	227f8 <__assert_fail@plt+0x10ac8>
   227f4:	bl	21d28 <__assert_fail@plt+0xfff8>
   227f8:	ldr	ip, [sp, #24]
   227fc:	mov	r2, #5
   22800:	movw	r1, #9712	; 0x25f0
   22804:	mov	r0, #0
   22808:	cmp	ip, #0
   2280c:	movt	r1, #3
   22810:	ldr	r5, [pc, #296]	; 22940 <__assert_fail@plt+0x10c10>
   22814:	movwne	r3, #26876	; 0x68fc
   22818:	movweq	r3, #26888	; 0x6908
   2281c:	movtne	r3, #4
   22820:	movteq	r3, #4
   22824:	ldr	r4, [r3]
   22828:	bl	1191c <dcgettext@plt>
   2282c:	movw	r3, #29532	; 0x735c
   22830:	movt	r3, #4
   22834:	mov	r1, #1
   22838:	ldr	r3, [r3]
   2283c:	mov	r2, r0
   22840:	mov	r0, r4
   22844:	bl	11c10 <__fprintf_chk@plt>
   22848:	ldr	r1, [r5, #4]!
   2284c:	cmp	r1, #0
   22850:	beq	22870 <__assert_fail@plt+0x10b40>
   22854:	mov	r2, #5
   22858:	mov	r0, #0
   2285c:	bl	1191c <dcgettext@plt>
   22860:	mov	r1, r4
   22864:	bl	11ce8 <fputs@plt>
   22868:	b	22848 <__assert_fail@plt+0x10b18>
   2286c:	bl	11934 <__stack_chk_fail@plt>
   22870:	movw	r5, #28312	; 0x6e98
   22874:	movt	r5, #4
   22878:	ldr	r3, [r5]
   2287c:	cmp	r3, #0
   22880:	beq	22890 <__assert_fail@plt+0x10b60>
   22884:	ldrb	r3, [r3]
   22888:	cmp	r3, #0
   2288c:	bne	228f0 <__assert_fail@plt+0x10bc0>
   22890:	mov	r2, #5
   22894:	movw	r1, #9748	; 0x2614
   22898:	mov	r0, #0
   2289c:	movt	r1, #3
   228a0:	bl	1191c <dcgettext@plt>
   228a4:	movw	r3, #26840	; 0x68d8
   228a8:	movt	r3, #4
   228ac:	mov	r1, #1
   228b0:	ldr	r3, [r3]
   228b4:	mov	r2, r0
   228b8:	mov	r0, r4
   228bc:	bl	11c10 <__fprintf_chk@plt>
   228c0:	mov	r2, #5
   228c4:	movw	r1, #9812	; 0x2654
   228c8:	mov	r0, #0
   228cc:	movt	r1, #3
   228d0:	bl	1191c <dcgettext@plt>
   228d4:	mov	r1, #1
   228d8:	mov	r2, r0
   228dc:	mov	r0, r4
   228e0:	bl	11c10 <__fprintf_chk@plt>
   228e4:	ldr	r5, [sp, #24]
   228e8:	lsl	r0, r5, #1
   228ec:	bl	22150 <__assert_fail@plt+0x10420>
   228f0:	mov	r0, r1
   228f4:	mov	r2, #5
   228f8:	movw	r1, #9776	; 0x2630
   228fc:	movt	r1, #3
   22900:	bl	1191c <dcgettext@plt>
   22904:	ldr	ip, [r5]
   22908:	movw	r3, #26840	; 0x68d8
   2290c:	movt	r3, #4
   22910:	mov	r1, #1
   22914:	str	ip, [sp]
   22918:	ldr	r3, [r3]
   2291c:	mov	r2, r0
   22920:	mov	r0, r4
   22924:	bl	11c10 <__fprintf_chk@plt>
   22928:	b	228c0 <__assert_fail@plt+0x10b90>
   2292c:	strdeq	r1, [r3], -ip
   22930:	andeq	r6, r4, r8, asr #22
   22934:	muleq	r3, ip, r0
   22938:	andeq	r6, r4, r0, ror #21
   2293c:	andeq	r1, r3, r0, lsl #26
   22940:	andeq	r2, r3, r8, lsr #2
   22944:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22948:	add	fp, sp, #32
   2294c:	sub	sp, sp, #12
   22950:	movw	r2, #8828	; 0x227c
   22954:	movt	r2, #3
   22958:	movw	r6, #26864	; 0x68f0
   2295c:	movt	r6, #4
   22960:	ldm	r2!, {r0, r1}
   22964:	sub	sp, sp, #24
   22968:	ldr	lr, [r6]
   2296c:	mov	r4, #40	; 0x28
   22970:	mov	r7, #36	; 0x24
   22974:	strb	r4, [sp, #1]
   22978:	ldrb	r5, [r2]
   2297c:	mov	r4, #0
   22980:	str	r0, [sp, #2]
   22984:	mov	r0, sp
   22988:	mov	r2, #41	; 0x29
   2298c:	str	r1, [sp, #6]
   22990:	str	lr, [fp, #-40]	; 0xffffffd8
   22994:	strb	r2, [sp, #11]
   22998:	strb	r7, [sp]
   2299c:	strb	r5, [sp, #10]
   229a0:	strb	r4, [sp, #12]
   229a4:	bl	17528 <__assert_fail@plt+0x57f8>
   229a8:	bl	23230 <error@@Base+0x5f0>
   229ac:	mov	r9, r0
   229b0:	bl	11b5c <strlen@plt>
   229b4:	cmp	r0, #0
   229b8:	bne	229d4 <__assert_fail@plt+0x10ca4>
   229bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   229c0:	ldr	r3, [r6]
   229c4:	cmp	r2, r3
   229c8:	bne	22af4 <__assert_fail@plt+0x10dc4>
   229cc:	sub	sp, fp, #32
   229d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   229d4:	lsl	r3, r0, #2
   229d8:	lsl	r0, r0, #1
   229dc:	add	r3, r3, #22
   229e0:	mov	r8, r4
   229e4:	bic	r3, r3, #7
   229e8:	mov	r5, #1
   229ec:	sub	sp, sp, r3
   229f0:	bl	22f44 <error@@Base+0x304>
   229f4:	str	r4, [sp]
   229f8:	mov	r7, sp
   229fc:	str	r0, [sp, #4]
   22a00:	add	sl, r0, r5
   22a04:	ldrb	r4, [r9]
   22a08:	cmp	r4, #0
   22a0c:	beq	22a68 <__assert_fail@plt+0x10d38>
   22a10:	cmp	r4, #92	; 0x5c
   22a14:	beq	22aac <__assert_fail@plt+0x10d7c>
   22a18:	bl	11b20 <__ctype_b_loc@plt>
   22a1c:	lsl	r3, r4, #1
   22a20:	ldr	r2, [r0]
   22a24:	ldrh	r3, [r2, r3]
   22a28:	tst	r3, #1
   22a2c:	beq	22ac0 <__assert_fail@plt+0x10d90>
   22a30:	add	r5, r5, #1
   22a34:	strb	r8, [sl, #-1]
   22a38:	add	r3, r9, #1
   22a3c:	str	sl, [r7, r5, lsl #2]
   22a40:	ldr	r1, [r0]
   22a44:	mov	r9, r3
   22a48:	ldrb	r4, [r3], #1
   22a4c:	lsl	r2, r4, #1
   22a50:	ldrh	r2, [r1, r2]
   22a54:	tst	r2, #1
   22a58:	bne	22a44 <__assert_fail@plt+0x10d14>
   22a5c:	add	sl, sl, #1
   22a60:	cmp	r4, #0
   22a64:	bne	22a10 <__assert_fail@plt+0x10ce0>
   22a68:	add	r5, r5, #1
   22a6c:	strb	r4, [sl, #-1]
   22a70:	str	r4, [r7, r5, lsl #2]
   22a74:	ldr	r4, [r7, #4]
   22a78:	ldrb	r3, [r4]
   22a7c:	cmp	r3, #45	; 0x2d
   22a80:	beq	22a98 <__assert_fail@plt+0x10d68>
   22a84:	mov	r0, r4
   22a88:	mov	r1, #61	; 0x3d
   22a8c:	bl	11b68 <strchr@plt>
   22a90:	cmp	r0, #0
   22a94:	beq	22ad4 <__assert_fail@plt+0x10da4>
   22a98:	mov	r0, r5
   22a9c:	mov	r1, r7
   22aa0:	mov	r2, #1
   22aa4:	bl	22210 <__assert_fail@plt+0x104e0>
   22aa8:	b	229bc <__assert_fail@plt+0x10c8c>
   22aac:	ldrb	r3, [r9, #1]
   22ab0:	cmp	r3, #0
   22ab4:	addne	r9, r9, #1
   22ab8:	movne	r4, r3
   22abc:	beq	22a18 <__assert_fail@plt+0x10ce8>
   22ac0:	strb	r4, [sl, #-1]
   22ac4:	add	r9, r9, #1
   22ac8:	ldrb	r4, [r9]
   22acc:	add	sl, sl, #1
   22ad0:	b	22a60 <__assert_fail@plt+0x10d30>
   22ad4:	mov	r2, r4
   22ad8:	movw	r1, #9592	; 0x2578
   22adc:	mov	r0, #2
   22ae0:	movt	r1, #3
   22ae4:	bl	2300c <error@@Base+0x3cc>
   22ae8:	bl	2312c <error@@Base+0x4ec>
   22aec:	str	r0, [r7, #4]
   22af0:	b	22a98 <__assert_fail@plt+0x10d68>
   22af4:	bl	11934 <__stack_chk_fail@plt>
   22af8:	ldr	r0, [r0]
   22afc:	ldr	r1, [r1]
   22b00:	ldrb	r2, [r0]
   22b04:	ldrb	r3, [r1]
   22b08:	cmp	r2, r3
   22b0c:	beq	22b18 <__assert_fail@plt+0x10de8>
   22b10:	rsb	r0, r3, r2
   22b14:	bx	lr
   22b18:	b	1182c <strcmp@plt>
   22b1c:	cmp	r0, #0
   22b20:	push	{r3, r4, r5, lr}
   22b24:	popeq	{r3, r4, r5, pc}
   22b28:	movw	r5, #26888	; 0x6908
   22b2c:	movt	r5, #4
   22b30:	mov	r4, r0
   22b34:	mov	r0, #32
   22b38:	ldr	r1, [r5]
   22b3c:	bl	119f4 <_IO_putc@plt>
   22b40:	subs	r4, r4, #1
   22b44:	bne	22b34 <__assert_fail@plt+0x10e04>
   22b48:	pop	{r3, r4, r5, pc}
   22b4c:	push	{r1, r2, r3}
   22b50:	push	{r4, r5, r6, lr}
   22b54:	movw	r5, #26864	; 0x68f0
   22b58:	movt	r5, #4
   22b5c:	sub	sp, sp, #12
   22b60:	mov	r4, r0
   22b64:	mov	r0, #1
   22b68:	ldr	r3, [r5]
   22b6c:	ldr	r6, [sp, #28]
   22b70:	str	r3, [sp, #4]
   22b74:	bl	21f98 <__assert_fail@plt+0x10268>
   22b78:	cmp	r6, #0
   22b7c:	movweq	r4, #26888	; 0x6908
   22b80:	movteq	r4, #4
   22b84:	beq	22bc0 <__assert_fail@plt+0x10e90>
   22b88:	cmp	r4, #0
   22b8c:	bne	22be8 <__assert_fail@plt+0x10eb8>
   22b90:	add	ip, sp, #32
   22b94:	movw	r4, #26888	; 0x6908
   22b98:	movt	r4, #4
   22b9c:	mov	r1, #1
   22ba0:	mov	r2, r6
   22ba4:	mov	r3, ip
   22ba8:	ldr	r0, [r4]
   22bac:	str	ip, [sp]
   22bb0:	bl	11ad8 <__vfprintf_chk@plt>
   22bb4:	ldr	r1, [r4]
   22bb8:	mov	r0, #10
   22bbc:	bl	119f4 <_IO_putc@plt>
   22bc0:	ldr	r0, [r4]
   22bc4:	bl	11868 <fflush@plt>
   22bc8:	ldr	r2, [sp, #4]
   22bcc:	ldr	r3, [r5]
   22bd0:	cmp	r2, r3
   22bd4:	bne	22c3c <__assert_fail@plt+0x10f0c>
   22bd8:	add	sp, sp, #12
   22bdc:	pop	{r4, r5, r6, lr}
   22be0:	add	sp, sp, #12
   22be4:	bx	lr
   22be8:	movw	r3, #29540	; 0x7364
   22bec:	movt	r3, #4
   22bf0:	ldr	r3, [r3]
   22bf4:	cmp	r3, #0
   22bf8:	bne	22c1c <__assert_fail@plt+0x10eec>
   22bfc:	movw	r3, #29532	; 0x735c
   22c00:	movt	r3, #4
   22c04:	movw	r1, #14428	; 0x385c
   22c08:	mov	r0, #1
   22c0c:	ldr	r2, [r3]
   22c10:	movt	r1, #3
   22c14:	bl	11be0 <__printf_chk@plt>
   22c18:	b	22b90 <__assert_fail@plt+0x10e60>
   22c1c:	movw	r2, #29532	; 0x735c
   22c20:	movt	r2, #4
   22c24:	movw	r1, #14436	; 0x3864
   22c28:	mov	r0, #1
   22c2c:	ldr	r2, [r2]
   22c30:	movt	r1, #3
   22c34:	bl	11be0 <__printf_chk@plt>
   22c38:	b	22b90 <__assert_fail@plt+0x10e60>
   22c3c:	bl	11934 <__stack_chk_fail@plt>

00022c40 <error@@Base>:
   22c40:	push	{r1, r2, r3}
   22c44:	push	{r4, r5, r6, r7, lr}
   22c48:	movw	r5, #26864	; 0x68f0
   22c4c:	movt	r5, #4
   22c50:	sub	sp, sp, #16
   22c54:	mov	r6, r0
   22c58:	mov	r0, #1
   22c5c:	ldr	r3, [r5]
   22c60:	ldr	r7, [sp, #36]	; 0x24
   22c64:	str	r3, [sp, #12]
   22c68:	bl	21f98 <__assert_fail@plt+0x10268>
   22c6c:	cmp	r6, #0
   22c70:	beq	22cf4 <error@@Base+0xb4>
   22c74:	ldr	r3, [r6]
   22c78:	cmp	r3, #0
   22c7c:	beq	22cf4 <error@@Base+0xb4>
   22c80:	ldr	ip, [r6, #4]
   22c84:	movw	r4, #26876	; 0x68fc
   22c88:	movt	r4, #4
   22c8c:	movw	r2, #4408	; 0x1138
   22c90:	mov	r1, #1
   22c94:	movt	r2, #3
   22c98:	ldr	r0, [r4]
   22c9c:	str	ip, [sp]
   22ca0:	bl	11c10 <__fprintf_chk@plt>
   22ca4:	add	ip, sp, #40	; 0x28
   22ca8:	mov	r2, r7
   22cac:	mov	r1, #1
   22cb0:	ldr	r0, [r4]
   22cb4:	mov	r3, ip
   22cb8:	str	ip, [sp, #8]
   22cbc:	bl	11ad8 <__vfprintf_chk@plt>
   22cc0:	ldr	r1, [r4]
   22cc4:	mov	r0, #10
   22cc8:	bl	119f4 <_IO_putc@plt>
   22ccc:	ldr	r0, [r4]
   22cd0:	bl	11868 <fflush@plt>
   22cd4:	ldr	r2, [sp, #12]
   22cd8:	ldr	r3, [r5]
   22cdc:	cmp	r2, r3
   22ce0:	bne	22d60 <error@@Base+0x120>
   22ce4:	add	sp, sp, #16
   22ce8:	pop	{r4, r5, r6, r7, lr}
   22cec:	add	sp, sp, #12
   22cf0:	bx	lr
   22cf4:	movw	r3, #29540	; 0x7364
   22cf8:	movt	r3, #4
   22cfc:	movw	r4, #26876	; 0x68fc
   22d00:	ldr	r3, [r3]
   22d04:	cmp	r3, #0
   22d08:	beq	22d38 <error@@Base+0xf8>
   22d0c:	movt	r4, #4
   22d10:	movw	r1, #29532	; 0x735c
   22d14:	movt	r1, #4
   22d18:	str	r3, [sp]
   22d1c:	movw	r2, #14436	; 0x3864
   22d20:	ldr	r0, [r4]
   22d24:	ldr	r3, [r1]
   22d28:	movt	r2, #3
   22d2c:	mov	r1, #1
   22d30:	bl	11c10 <__fprintf_chk@plt>
   22d34:	b	22ca4 <error@@Base+0x64>
   22d38:	movt	r4, #4
   22d3c:	movw	r3, #29532	; 0x735c
   22d40:	movt	r3, #4
   22d44:	movw	r2, #14428	; 0x385c
   22d48:	mov	r1, #1
   22d4c:	ldr	r0, [r4]
   22d50:	movt	r2, #3
   22d54:	ldr	r3, [r3]
   22d58:	bl	11c10 <__fprintf_chk@plt>
   22d5c:	b	22ca4 <error@@Base+0x64>
   22d60:	bl	11934 <__stack_chk_fail@plt>
   22d64:	push	{r1, r2, r3}
   22d68:	movw	r3, #26864	; 0x68f0
   22d6c:	movt	r3, #4
   22d70:	push	{r4, r5, lr}
   22d74:	sub	sp, sp, #16
   22d78:	ldr	r3, [r3]
   22d7c:	mov	r4, r0
   22d80:	mov	r0, #1
   22d84:	ldr	r5, [sp, #28]
   22d88:	str	r3, [sp, #12]
   22d8c:	bl	21f98 <__assert_fail@plt+0x10268>
   22d90:	cmp	r4, #0
   22d94:	beq	22e08 <error@@Base+0x1c8>
   22d98:	ldr	r3, [r4]
   22d9c:	cmp	r3, #0
   22da0:	beq	22e08 <error@@Base+0x1c8>
   22da4:	ldr	r0, [r4, #4]
   22da8:	movw	r4, #26876	; 0x68fc
   22dac:	movt	r4, #4
   22db0:	movw	r2, #14448	; 0x3870
   22db4:	mov	r1, #1
   22db8:	movt	r2, #3
   22dbc:	str	r0, [sp]
   22dc0:	ldr	r0, [r4]
   22dc4:	bl	11c10 <__fprintf_chk@plt>
   22dc8:	add	ip, sp, #32
   22dcc:	mov	r2, r5
   22dd0:	mov	r1, #1
   22dd4:	ldr	r0, [r4]
   22dd8:	mov	r3, ip
   22ddc:	str	ip, [sp, #8]
   22de0:	bl	11ad8 <__vfprintf_chk@plt>
   22de4:	mov	r2, #5
   22de8:	movw	r1, #14492	; 0x389c
   22dec:	mov	r0, #0
   22df0:	movt	r1, #3
   22df4:	bl	1191c <dcgettext@plt>
   22df8:	ldr	r1, [r4]
   22dfc:	bl	11ce8 <fputs@plt>
   22e00:	mov	r0, #2
   22e04:	bl	22150 <__assert_fail@plt+0x10420>
   22e08:	movw	r3, #29540	; 0x7364
   22e0c:	movt	r3, #4
   22e10:	movw	r4, #26876	; 0x68fc
   22e14:	ldr	r3, [r3]
   22e18:	cmp	r3, #0
   22e1c:	bne	22e48 <error@@Base+0x208>
   22e20:	movt	r4, #4
   22e24:	movw	r3, #29532	; 0x735c
   22e28:	movt	r3, #4
   22e2c:	movw	r2, #14464	; 0x3880
   22e30:	mov	r1, #1
   22e34:	ldr	r0, [r4]
   22e38:	movt	r2, #3
   22e3c:	ldr	r3, [r3]
   22e40:	bl	11c10 <__fprintf_chk@plt>
   22e44:	b	22dc8 <error@@Base+0x188>
   22e48:	movt	r4, #4
   22e4c:	movw	r1, #29532	; 0x735c
   22e50:	movt	r1, #4
   22e54:	str	r3, [sp]
   22e58:	movw	r2, #14476	; 0x388c
   22e5c:	ldr	r0, [r4]
   22e60:	ldr	r3, [r1]
   22e64:	movt	r2, #3
   22e68:	mov	r1, #1
   22e6c:	bl	11c10 <__fprintf_chk@plt>
   22e70:	b	22dc8 <error@@Base+0x188>
   22e74:	push	{r4, r5, r6, r7, lr}
   22e78:	mov	r4, r1
   22e7c:	sub	sp, sp, #12
   22e80:	mov	r5, r0
   22e84:	mov	r6, r2
   22e88:	movw	r1, #14504	; 0x38a8
   22e8c:	mov	r2, #5
   22e90:	movt	r1, #3
   22e94:	mov	r0, #0
   22e98:	bl	1191c <dcgettext@plt>
   22e9c:	mov	r7, r0
   22ea0:	mov	r0, r6
   22ea4:	bl	11acc <strerror@plt>
   22ea8:	mov	r1, r7
   22eac:	mov	r2, r5
   22eb0:	mov	r3, r4
   22eb4:	str	r0, [sp]
   22eb8:	mov	r0, #0
   22ebc:	bl	22c40 <error@@Base>
   22ec0:	add	sp, sp, #12
   22ec4:	pop	{r4, r5, r6, r7, pc}
   22ec8:	push	{r3, r4, r5, lr}
   22ecc:	mov	r4, r0
   22ed0:	mov	r5, r1
   22ed4:	bl	11b8c <__errno_location@plt>
   22ed8:	mov	r1, r5
   22edc:	ldr	r2, [r0]
   22ee0:	mov	r0, r4
   22ee4:	pop	{r3, r4, r5, lr}
   22ee8:	b	22e74 <error@@Base+0x234>
   22eec:	push	{r4, r5, r6, lr}
   22ef0:	mov	r2, #5
   22ef4:	mov	r5, r1
   22ef8:	mov	r4, r0
   22efc:	movw	r1, #14516	; 0x38b4
   22f00:	mov	r0, #0
   22f04:	movt	r1, #3
   22f08:	bl	1191c <dcgettext@plt>
   22f0c:	mov	r6, r0
   22f10:	mov	r0, r5
   22f14:	bl	11acc <strerror@plt>
   22f18:	mov	r1, r6
   22f1c:	mov	r2, r4
   22f20:	mov	r3, r0
   22f24:	mov	r0, #0
   22f28:	bl	22d64 <error@@Base+0x124>
   22f2c:	push	{r4, lr}
   22f30:	mov	r4, r0
   22f34:	bl	11b8c <__errno_location@plt>
   22f38:	ldr	r1, [r0]
   22f3c:	mov	r0, r4
   22f40:	bl	22eec <error@@Base+0x2ac>
   22f44:	cmp	r0, #0
   22f48:	push	{r4, lr}
   22f4c:	moveq	r0, #1
   22f50:	bl	11aa8 <malloc@plt>
   22f54:	subs	r4, r0, #0
   22f58:	popne	{r4, pc}
   22f5c:	movw	r1, #14524	; 0x38bc
   22f60:	mov	r2, #5
   22f64:	movt	r1, #3
   22f68:	bl	1191c <dcgettext@plt>
   22f6c:	mov	r1, r0
   22f70:	mov	r0, r4
   22f74:	bl	22d64 <error@@Base+0x124>
   22f78:	cmp	r0, #0
   22f7c:	mov	r1, #1
   22f80:	push	{r4, lr}
   22f84:	moveq	r0, #1
   22f88:	bl	117fc <calloc@plt>
   22f8c:	subs	r4, r0, #0
   22f90:	popne	{r4, pc}
   22f94:	movw	r1, #14524	; 0x38bc
   22f98:	mov	r2, #5
   22f9c:	movt	r1, #3
   22fa0:	bl	1191c <dcgettext@plt>
   22fa4:	mov	r1, r0
   22fa8:	mov	r0, r4
   22fac:	bl	22d64 <error@@Base+0x124>
   22fb0:	cmp	r1, #0
   22fb4:	push	{r4, lr}
   22fb8:	moveq	r1, #1
   22fbc:	cmp	r0, #0
   22fc0:	beq	22fdc <error@@Base+0x39c>
   22fc4:	bl	11970 <realloc@plt>
   22fc8:	mov	r4, r0
   22fcc:	cmp	r4, #0
   22fd0:	beq	22fec <error@@Base+0x3ac>
   22fd4:	mov	r0, r4
   22fd8:	pop	{r4, pc}
   22fdc:	mov	r0, r1
   22fe0:	bl	11aa8 <malloc@plt>
   22fe4:	mov	r4, r0
   22fe8:	b	22fcc <error@@Base+0x38c>
   22fec:	movw	r1, #14524	; 0x38bc
   22ff0:	mov	r0, r4
   22ff4:	movt	r1, #3
   22ff8:	mov	r2, #5
   22ffc:	bl	1191c <dcgettext@plt>
   23000:	mov	r1, r0
   23004:	mov	r0, r4
   23008:	bl	22d64 <error@@Base+0x124>
   2300c:	push	{r0, r1, r2, r3}
   23010:	movw	r3, #26864	; 0x68f0
   23014:	movt	r3, #4
   23018:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2301c:	movw	r9, #28240	; 0x6e50
   23020:	ldr	r2, [r3]
   23024:	sub	sp, sp, #20
   23028:	movt	r9, #4
   2302c:	mov	r6, #0
   23030:	str	r3, [sp, #4]
   23034:	add	r3, sp, #60	; 0x3c
   23038:	ldr	r8, [r9]
   2303c:	ldr	r7, [r9, #4]
   23040:	str	r2, [sp, #12]
   23044:	str	r3, [sp, #8]
   23048:	ldr	r5, [sp, #56]	; 0x38
   2304c:	b	230c4 <error@@Base+0x484>
   23050:	ldr	r3, [sp, #8]
   23054:	add	r2, r3, #4
   23058:	str	r2, [sp, #8]
   2305c:	ldr	r4, [r3]
   23060:	cmp	r4, #0
   23064:	beq	230c0 <error@@Base+0x480>
   23068:	mov	r0, r4
   2306c:	bl	11b5c <strlen@plt>
   23070:	subs	fp, r0, #0
   23074:	beq	230c0 <error@@Base+0x480>
   23078:	add	sl, fp, r6
   2307c:	cmp	sl, r7
   23080:	bls	230ac <error@@Base+0x46c>
   23084:	cmp	r7, #0
   23088:	mov	r0, r8
   2308c:	moveq	r7, #60	; 0x3c
   23090:	add	r1, r7, fp
   23094:	lsl	r1, r1, #1
   23098:	str	r1, [r9, #4]
   2309c:	bl	22fb0 <error@@Base+0x370>
   230a0:	ldr	r7, [r9, #4]
   230a4:	mov	r8, r0
   230a8:	str	r0, [r9]
   230ac:	add	r0, r8, r6
   230b0:	mov	r1, r4
   230b4:	mov	r2, fp
   230b8:	mov	r6, sl
   230bc:	bl	118c8 <memcpy@plt>
   230c0:	sub	r5, r5, #1
   230c4:	cmp	r5, #0
   230c8:	bne	23050 <error@@Base+0x410>
   230cc:	cmp	r7, r6
   230d0:	bne	230f8 <error@@Base+0x4b8>
   230d4:	cmp	r6, #0
   230d8:	mov	r0, r8
   230dc:	lslne	r3, r6, #1
   230e0:	moveq	r3, #120	; 0x78
   230e4:	str	r3, [r9, #4]
   230e8:	mov	r1, r3
   230ec:	bl	22fb0 <error@@Base+0x370>
   230f0:	mov	r8, r0
   230f4:	str	r0, [r9]
   230f8:	ldr	r1, [sp, #4]
   230fc:	mov	r3, #0
   23100:	ldr	r2, [sp, #12]
   23104:	mov	r0, r8
   23108:	strb	r3, [r8, r6]
   2310c:	ldr	r3, [r1]
   23110:	cmp	r2, r3
   23114:	bne	23128 <error@@Base+0x4e8>
   23118:	add	sp, sp, #20
   2311c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23120:	add	sp, sp, #16
   23124:	bx	lr
   23128:	bl	11934 <__stack_chk_fail@plt>
   2312c:	push	{r4, lr}
   23130:	bl	11bb0 <__strdup@plt>
   23134:	subs	r4, r0, #0
   23138:	popne	{r4, pc}
   2313c:	movw	r1, #14524	; 0x38bc
   23140:	mov	r2, #5
   23144:	movt	r1, #3
   23148:	bl	1191c <dcgettext@plt>
   2314c:	mov	r1, r0
   23150:	mov	r0, r4
   23154:	bl	22d64 <error@@Base+0x124>
   23158:	push	{r4, lr}
   2315c:	bl	119ac <__strndup@plt>
   23160:	subs	r4, r0, #0
   23164:	popne	{r4, pc}
   23168:	movw	r1, #14524	; 0x38bc
   2316c:	mov	r2, #5
   23170:	movt	r1, #3
   23174:	bl	1191c <dcgettext@plt>
   23178:	mov	r1, r0
   2317c:	mov	r0, r4
   23180:	bl	22d64 <error@@Base+0x124>
   23184:	cmp	r0, r1
   23188:	bcs	231bc <error@@Base+0x57c>
   2318c:	ldrb	r3, [r0]
   23190:	add	ip, r0, #1
   23194:	cmp	r3, r2
   23198:	bne	231b0 <error@@Base+0x570>
   2319c:	b	231cc <error@@Base+0x58c>
   231a0:	ldrb	r0, [r3], #1
   231a4:	cmp	r0, r2
   231a8:	beq	231c4 <error@@Base+0x584>
   231ac:	mov	ip, r3
   231b0:	cmp	ip, r1
   231b4:	mov	r3, ip
   231b8:	bne	231a0 <error@@Base+0x560>
   231bc:	mov	r0, #0
   231c0:	bx	lr
   231c4:	mov	r0, ip
   231c8:	bx	lr
   231cc:	bx	lr
   231d0:	push	{r3, r4, r5, lr}
   231d4:	mov	r5, r0
   231d8:	ldrb	r4, [r0]
   231dc:	cmp	r4, #0
   231e0:	beq	2321c <error@@Base+0x5dc>
   231e4:	bl	11b20 <__ctype_b_loc@plt>
   231e8:	mov	r3, r5
   231ec:	ldr	r0, [r0]
   231f0:	b	23204 <error@@Base+0x5c4>
   231f4:	ldrb	r4, [r3, #1]
   231f8:	mov	r3, r1
   231fc:	cmp	r4, #0
   23200:	beq	23224 <error@@Base+0x5e4>
   23204:	lsl	r4, r4, #1
   23208:	mov	r5, r3
   2320c:	add	r1, r3, #1
   23210:	ldrh	r2, [r0, r4]
   23214:	tst	r2, #1
   23218:	beq	231f4 <error@@Base+0x5b4>
   2321c:	mov	r0, r5
   23220:	pop	{r3, r4, r5, pc}
   23224:	mov	r5, r1
   23228:	mov	r0, r5
   2322c:	pop	{r3, r4, r5, pc}
   23230:	push	{r4, lr}
   23234:	mov	r4, r0
   23238:	bl	11b20 <__ctype_b_loc@plt>
   2323c:	mov	r3, r4
   23240:	ldr	r1, [r0]
   23244:	mov	r0, r3
   23248:	ldrb	r2, [r3], #1
   2324c:	lsl	r2, r2, #1
   23250:	ldrh	r2, [r1, r2]
   23254:	tst	r2, #1
   23258:	bne	23244 <error@@Base+0x604>
   2325c:	pop	{r4, pc}
   23260:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23264:	mov	r1, #10
   23268:	mov	r8, r0
   2326c:	bl	11b68 <strchr@plt>
   23270:	subs	r6, r0, #0
   23274:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23278:	cmp	r8, r6
   2327c:	bcs	23464 <error@@Base+0x824>
   23280:	ldrb	r3, [r6, #-1]
   23284:	mov	ip, r6
   23288:	cmp	r3, #92	; 0x5c
   2328c:	beq	232a0 <error@@Base+0x660>
   23290:	b	232ac <error@@Base+0x66c>
   23294:	ldrb	r3, [ip, #-1]
   23298:	cmp	r3, #92	; 0x5c
   2329c:	bne	232ac <error@@Base+0x66c>
   232a0:	sub	ip, ip, #1
   232a4:	cmp	ip, r8
   232a8:	bne	23294 <error@@Base+0x654>
   232ac:	ldrb	r3, [r6]
   232b0:	mov	r4, #10
   232b4:	mov	r5, #32
   232b8:	mov	r9, #92	; 0x5c
   232bc:	cmp	r3, #0
   232c0:	beq	23370 <error@@Base+0x730>
   232c4:	sub	r3, r6, #1
   232c8:	cmp	r8, r3
   232cc:	bhi	23454 <error@@Base+0x814>
   232d0:	ldrb	r2, [r6, #-1]
   232d4:	cmp	r2, #92	; 0x5c
   232d8:	bne	23454 <error@@Base+0x814>
   232dc:	sub	r2, ip, #1
   232e0:	cmp	r6, r2
   232e4:	beq	23460 <error@@Base+0x820>
   232e8:	mov	r7, #0
   232ec:	mov	r2, #1
   232f0:	b	2330c <error@@Base+0x6cc>
   232f4:	ldrb	r1, [r3, #-1]!
   232f8:	cmp	r1, #92	; 0x5c
   232fc:	bne	23314 <error@@Base+0x6d4>
   23300:	cmp	r2, #0
   23304:	eor	r2, r2, #1
   23308:	addne	r7, r7, #1
   2330c:	cmp	r3, r8
   23310:	bne	232f4 <error@@Base+0x6b4>
   23314:	cmp	r7, #0
   23318:	moveq	r7, ip
   2331c:	beq	23330 <error@@Base+0x6f0>
   23320:	add	r7, ip, r7
   23324:	strb	r9, [ip], #1
   23328:	cmp	ip, r7
   2332c:	bne	23324 <error@@Base+0x6e4>
   23330:	cmp	r2, #0
   23334:	add	r6, r6, #1
   23338:	bne	23408 <error@@Base+0x7c8>
   2333c:	add	ip, r7, #1
   23340:	strb	r4, [r7]
   23344:	ldrb	r3, [r6]
   23348:	cmp	r3, #0
   2334c:	beq	23370 <error@@Base+0x730>
   23350:	cmp	r3, #92	; 0x5c
   23354:	beq	23378 <error@@Base+0x738>
   23358:	strb	r3, [ip]
   2335c:	add	r6, r6, #1
   23360:	ldrb	r3, [r6]
   23364:	add	ip, ip, #1
   23368:	cmp	r3, #0
   2336c:	bne	23350 <error@@Base+0x710>
   23370:	strb	r3, [ip]
   23374:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23378:	ldrb	r1, [r6, #1]
   2337c:	add	r0, r6, #1
   23380:	cmp	r1, #92	; 0x5c
   23384:	bne	233f0 <error@@Base+0x7b0>
   23388:	add	r2, r6, #2
   2338c:	mov	r7, r2
   23390:	ldrb	r1, [r2], #1
   23394:	cmp	r1, #92	; 0x5c
   23398:	beq	2338c <error@@Base+0x74c>
   2339c:	cmp	r1, #10
   233a0:	beq	233fc <error@@Base+0x7bc>
   233a4:	cmp	r6, r7
   233a8:	bcs	23350 <error@@Base+0x710>
   233ac:	rsb	sl, r6, r7
   233b0:	mov	r1, r6
   233b4:	add	sl, ip, sl
   233b8:	mov	r2, ip
   233bc:	b	233c4 <error@@Base+0x784>
   233c0:	ldrb	r3, [r1, #1]!
   233c4:	strb	r3, [r2], #1
   233c8:	cmp	r2, sl
   233cc:	bne	233c0 <error@@Base+0x780>
   233d0:	rsb	r3, r0, r7
   233d4:	rsb	r0, r0, #1
   233d8:	add	r3, r6, r3
   233dc:	add	r7, r7, r0
   233e0:	add	ip, ip, r7
   233e4:	add	r6, r6, r7
   233e8:	ldrb	r3, [r3, #1]
   233ec:	b	23348 <error@@Base+0x708>
   233f0:	cmp	r1, #10
   233f4:	mov	r7, r0
   233f8:	bne	233a4 <error@@Base+0x764>
   233fc:	ldrb	r3, [r7]
   23400:	mov	r6, r7
   23404:	b	232bc <error@@Base+0x67c>
   23408:	mov	r0, r6
   2340c:	bl	23230 <error@@Base+0x5f0>
   23410:	cmp	r8, r7
   23414:	mov	r6, r0
   23418:	bcs	23448 <error@@Base+0x808>
   2341c:	bl	11b20 <__ctype_b_loc@plt>
   23420:	ldr	r2, [r0]
   23424:	b	23434 <error@@Base+0x7f4>
   23428:	sub	r7, r7, #1
   2342c:	cmp	r7, r8
   23430:	beq	23448 <error@@Base+0x808>
   23434:	ldrb	r3, [r7, #-1]
   23438:	lsl	r3, r3, #1
   2343c:	ldrh	r3, [r2, r3]
   23440:	tst	r3, #1
   23444:	bne	23428 <error@@Base+0x7e8>
   23448:	add	ip, r7, #1
   2344c:	strb	r5, [r7]
   23450:	b	23344 <error@@Base+0x704>
   23454:	add	r6, r6, #1
   23458:	mov	r7, ip
   2345c:	b	2333c <error@@Base+0x6fc>
   23460:	bl	11d00 <abort@plt>
   23464:	mov	ip, r6
   23468:	b	232ac <error@@Base+0x66c>
   2346c:	push	{r4, r5, r6, lr}
   23470:	mov	r5, r0
   23474:	ldr	r0, [r0]
   23478:	mov	r6, r1
   2347c:	bl	23230 <error@@Base+0x5f0>
   23480:	ldrb	r3, [r0]
   23484:	mov	r4, r0
   23488:	cmp	r3, #0
   2348c:	beq	234b0 <error@@Base+0x870>
   23490:	bl	231d0 <error@@Base+0x590>
   23494:	cmp	r6, #0
   23498:	str	r0, [r5]
   2349c:	beq	234b8 <error@@Base+0x878>
   234a0:	rsb	r3, r4, r0
   234a4:	mov	r0, r4
   234a8:	str	r3, [r6]
   234ac:	pop	{r4, r5, r6, pc}
   234b0:	mov	r0, r3
   234b4:	pop	{r4, r5, r6, pc}
   234b8:	mov	r0, r4
   234bc:	pop	{r4, r5, r6, pc}
   234c0:	push	{r4, r5, r6, r7, r8, lr}
   234c4:	subs	r5, r0, #0
   234c8:	beq	2354c <error@@Base+0x90c>
   234cc:	mov	r6, #0
   234d0:	mov	r7, r6
   234d4:	mov	r8, r6
   234d8:	b	234fc <error@@Base+0x8bc>
   234dc:	cmp	r7, #0
   234e0:	str	r8, [r4]
   234e4:	strne	r4, [r6]
   234e8:	mov	r6, r4
   234ec:	ldr	r5, [r5]
   234f0:	moveq	r7, r4
   234f4:	cmp	r5, #0
   234f8:	beq	23550 <error@@Base+0x910>
   234fc:	mov	r0, #20
   23500:	bl	22f44 <error@@Base+0x304>
   23504:	ldr	r3, [r5]
   23508:	ldr	r1, [r5, #8]
   2350c:	ldr	r2, [r5, #12]
   23510:	mov	r4, r0
   23514:	ldr	r0, [r5, #4]
   23518:	str	r3, [r4]
   2351c:	str	r1, [r4, #8]
   23520:	str	r0, [r4, #4]
   23524:	str	r2, [r4, #12]
   23528:	ldr	r3, [r5, #16]
   2352c:	str	r3, [r4, #16]
   23530:	ldrb	r3, [r4, #17]
   23534:	tst	r3, #4
   23538:	beq	234dc <error@@Base+0x89c>
   2353c:	ldr	r0, [r4, #4]
   23540:	bl	2312c <error@@Base+0x4ec>
   23544:	str	r0, [r4, #4]
   23548:	b	234dc <error@@Base+0x89c>
   2354c:	mov	r7, r5
   23550:	mov	r0, r7
   23554:	pop	{r4, r5, r6, r7, r8, pc}
   23558:	cmp	r0, #0
   2355c:	push	{r4, lr}
   23560:	popeq	{r4, pc}
   23564:	ldr	r4, [r0]
   23568:	bl	1188c <free@plt>
   2356c:	cmp	r4, #0
   23570:	mov	r0, r4
   23574:	bne	23564 <error@@Base+0x924>
   23578:	pop	{r4, pc}
   2357c:	cmp	r0, #0
   23580:	push	{r4, lr}
   23584:	popeq	{r4, pc}
   23588:	ldr	r4, [r0]
   2358c:	bl	1188c <free@plt>
   23590:	cmp	r4, #0
   23594:	mov	r0, r4
   23598:	bne	23588 <error@@Base+0x948>
   2359c:	pop	{r4, pc}
   235a0:	bx	lr
   235a4:	bx	lr
   235a8:	bx	lr
   235ac:	push	{r3, r4, r5, lr}
   235b0:	movw	r4, #26888	; 0x6908
   235b4:	movt	r4, #4
   235b8:	ldr	r0, [r4]
   235bc:	bl	118a4 <ferror@plt>
   235c0:	mov	r5, r0
   235c4:	ldr	r0, [r4]
   235c8:	bl	11c28 <fclose@plt>
   235cc:	orrs	r5, r0, r5
   235d0:	mov	r4, r0
   235d4:	popeq	{r3, r4, r5, pc}
   235d8:	cmp	r0, #0
   235dc:	beq	2361c <error@@Base+0x9dc>
   235e0:	mov	r2, #5
   235e4:	movw	r1, #14552	; 0x38d8
   235e8:	mov	r0, #0
   235ec:	movt	r1, #3
   235f0:	bl	1191c <dcgettext@plt>
   235f4:	mov	r4, r0
   235f8:	bl	11b8c <__errno_location@plt>
   235fc:	ldr	r0, [r0]
   23600:	bl	11acc <strerror@plt>
   23604:	mov	r1, r4
   23608:	mov	r2, r0
   2360c:	mov	r0, #0
   23610:	bl	22c40 <error@@Base>
   23614:	mov	r0, #1
   23618:	bl	11b44 <exit@plt>
   2361c:	mov	r2, #5
   23620:	movw	r1, #14568	; 0x38e8
   23624:	movt	r1, #3
   23628:	bl	1191c <dcgettext@plt>
   2362c:	mov	r1, r0
   23630:	mov	r0, r4
   23634:	bl	22c40 <error@@Base>
   23638:	b	23614 <error@@Base+0x9d4>
   2363c:	push	{r4, r5, r6, lr}
   23640:	movw	r4, #26760	; 0x6888
   23644:	movt	r4, #4
   23648:	mov	r6, r0
   2364c:	ldr	r5, [r4]
   23650:	ldr	r0, [r5, #8]
   23654:	cmp	r0, #0
   23658:	beq	23660 <error@@Base+0xa20>
   2365c:	bl	1188c <free@plt>
   23660:	ldr	r0, [r5, #12]
   23664:	cmp	r0, #0
   23668:	beq	23670 <error@@Base+0xa30>
   2366c:	bl	1188c <free@plt>
   23670:	str	r6, [r4]
   23674:	pop	{r4, r5, r6, pc}
   23678:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2367c:	mov	fp, r0
   23680:	ldr	r3, [r0, #16]
   23684:	cmp	r3, #0
   23688:	beq	2380c <error@@Base+0xbcc>
   2368c:	ldr	sl, [r0, #8]
   23690:	mov	r3, #0
   23694:	ldr	r5, [r0, #12]
   23698:	add	r9, r0, #20
   2369c:	mov	r6, r3
   236a0:	mov	r7, r3
   236a4:	add	r5, sl, r5
   236a8:	mov	r4, sl
   236ac:	rsb	r1, sl, r5
   236b0:	mov	r8, #10
   236b4:	strb	r3, [sl]
   236b8:	mov	r0, sl
   236bc:	ldr	r2, [fp, #16]
   236c0:	bl	11898 <fgets@plt>
   236c4:	cmp	r0, #0
   236c8:	beq	237c0 <error@@Base+0xb80>
   236cc:	mov	r0, sl
   236d0:	bl	11b5c <strlen@plt>
   236d4:	subs	r3, r0, #0
   236d8:	beq	23798 <error@@Base+0xb58>
   236dc:	add	sl, sl, r3
   236e0:	ldrb	r3, [sl, #-1]
   236e4:	cmp	r3, #10
   236e8:	bne	23758 <error@@Base+0xb18>
   236ec:	rsb	r2, r4, sl
   236f0:	add	r6, r6, #1
   236f4:	cmp	r2, #1
   236f8:	ble	2370c <error@@Base+0xacc>
   236fc:	ldrb	r2, [sl, #-2]
   23700:	cmp	r2, #13
   23704:	strbeq	r3, [sl, #-2]
   23708:	subeq	sl, sl, #1
   2370c:	sub	r3, sl, #2
   23710:	cmp	r4, r3
   23714:	bhi	237ec <error@@Base+0xbac>
   23718:	ldrb	r2, [sl, #-2]
   2371c:	cmp	r2, #92	; 0x5c
   23720:	bne	237ec <error@@Base+0xbac>
   23724:	mov	r2, #0
   23728:	b	23738 <error@@Base+0xaf8>
   2372c:	ldrb	r1, [r3, #-1]!
   23730:	cmp	r1, #92	; 0x5c
   23734:	bne	23744 <error@@Base+0xb04>
   23738:	cmp	r3, r4
   2373c:	eor	r2, r2, #1
   23740:	bne	2372c <error@@Base+0xaec>
   23744:	cmp	r2, #0
   23748:	beq	237ec <error@@Base+0xbac>
   2374c:	rsb	r1, sl, r5
   23750:	cmp	r1, #79	; 0x4f
   23754:	bgt	236b8 <error@@Base+0xa78>
   23758:	ldr	r1, [fp, #12]
   2375c:	mov	r0, r4
   23760:	mov	r5, r4
   23764:	lsl	r1, r1, #1
   23768:	str	r1, [fp, #12]
   2376c:	bl	22fb0 <error@@Base+0x370>
   23770:	ldr	r2, [fp, #12]
   23774:	rsb	r3, r5, sl
   23778:	add	sl, r0, r3
   2377c:	add	r5, r0, r2
   23780:	str	r0, [fp, #8]
   23784:	mov	r4, r0
   23788:	str	r0, [fp]
   2378c:	rsb	r1, sl, r5
   23790:	strb	r7, [r0, r3]
   23794:	b	236b8 <error@@Base+0xa78>
   23798:	mov	r2, #5
   2379c:	movw	r1, #14608	; 0x3910
   237a0:	movt	r1, #3
   237a4:	bl	1191c <dcgettext@plt>
   237a8:	mov	r1, r0
   237ac:	mov	r0, r9
   237b0:	bl	22c40 <error@@Base>
   237b4:	mov	r3, #1
   237b8:	strb	r8, [sl]
   237bc:	b	236dc <error@@Base+0xa9c>
   237c0:	ldr	r0, [fp, #16]
   237c4:	bl	118a4 <ferror@plt>
   237c8:	cmp	r0, #0
   237cc:	bne	238a8 <error@@Base+0xc68>
   237d0:	cmp	r6, #0
   237d4:	bne	23804 <error@@Base+0xbc4>
   237d8:	ldr	r3, [fp, #8]
   237dc:	cmp	sl, r3
   237e0:	movne	r0, #1
   237e4:	mvneq	r0, #0
   237e8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237ec:	mov	r3, #0
   237f0:	strb	r3, [sl, #-1]
   237f4:	ldr	r0, [fp, #16]
   237f8:	bl	118a4 <ferror@plt>
   237fc:	cmp	r0, #0
   23800:	bne	238a8 <error@@Base+0xc68>
   23804:	mov	r0, r6
   23808:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2380c:	ldmib	r0, {r4, r5, r6}
   23810:	add	r3, r5, r6
   23814:	cmp	r4, r3
   23818:	bcc	23824 <error@@Base+0xbe4>
   2381c:	mvn	r0, #0
   23820:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23824:	str	r4, [r0]
   23828:	mov	r0, r4
   2382c:	mov	r1, #10
   23830:	bl	11b68 <strchr@plt>
   23834:	cmp	r0, #0
   23838:	beq	23898 <error@@Base+0xc58>
   2383c:	cmp	r4, r0
   23840:	bcs	23880 <error@@Base+0xc40>
   23844:	ldrb	r2, [r0, #-1]
   23848:	sub	r3, r0, #1
   2384c:	cmp	r2, #92	; 0x5c
   23850:	bne	23880 <error@@Base+0xc40>
   23854:	mov	r2, #0
   23858:	b	23868 <error@@Base+0xc28>
   2385c:	ldrb	r1, [r3, #-1]!
   23860:	cmp	r1, #92	; 0x5c
   23864:	bne	23874 <error@@Base+0xc34>
   23868:	cmp	r3, r4
   2386c:	eor	r2, r2, #1
   23870:	bne	2385c <error@@Base+0xc1c>
   23874:	cmp	r2, #0
   23878:	addne	r4, r0, #1
   2387c:	bne	23828 <error@@Base+0xbe8>
   23880:	mov	r3, r0
   23884:	mov	r2, #0
   23888:	mov	r0, r2
   2388c:	strb	r2, [r3], #1
   23890:	str	r3, [fp, #4]
   23894:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23898:	add	r6, r6, #1
   2389c:	add	r5, r5, r6
   238a0:	str	r5, [fp, #4]
   238a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   238a8:	ldr	r0, [fp, #20]
   238ac:	bl	22f2c <error@@Base+0x2ec>
   238b0:	push	{r4, r5, r6, r7, r8, r9, lr}
   238b4:	movw	r8, #26864	; 0x68f0
   238b8:	movt	r8, #4
   238bc:	mov	r3, r1
   238c0:	mov	r2, #0
   238c4:	mov	r7, r1
   238c8:	ldr	r1, [r8]
   238cc:	sub	sp, sp, #12
   238d0:	strb	r2, [r3], #1
   238d4:	add	r3, r3, #1
   238d8:	strb	r2, [r7, #1]
   238dc:	strb	r2, [r3], #1
   238e0:	strb	r2, [r3]
   238e4:	str	r1, [sp, #4]
   238e8:	bl	23230 <error@@Base+0x5f0>
   238ec:	ldrb	r3, [r0]
   238f0:	mov	r9, r0
   238f4:	cmp	r3, #0
   238f8:	beq	239f4 <error@@Base+0xdb4>
   238fc:	mov	r4, r0
   23900:	b	23954 <error@@Base+0xd14>
   23904:	cmp	r5, #8
   23908:	beq	239ac <error@@Base+0xd6c>
   2390c:	cmp	r5, #7
   23910:	bne	239f4 <error@@Base+0xdb4>
   23914:	mov	r1, r4
   23918:	mov	r2, r5
   2391c:	movw	r0, #14660	; 0x3944
   23920:	movt	r0, #3
   23924:	bl	11cf4 <strncmp@plt>
   23928:	cmp	r0, #0
   2392c:	bne	239f4 <error@@Base+0xdb4>
   23930:	ldrb	r3, [r7]
   23934:	orr	r3, r3, #32
   23938:	strb	r3, [r7]
   2393c:	mov	r0, r6
   23940:	bl	23230 <error@@Base+0x5f0>
   23944:	ldrb	r3, [r0]
   23948:	mov	r4, r0
   2394c:	cmp	r3, #0
   23950:	beq	239f4 <error@@Base+0xdb4>
   23954:	mov	r0, r4
   23958:	mov	r1, sp
   2395c:	bl	2d980 <error@@Base+0xad40>
   23960:	cmp	r0, #0
   23964:	bne	23a44 <error@@Base+0xe04>
   23968:	mov	r0, r4
   2396c:	bl	231d0 <error@@Base+0x590>
   23970:	rsb	r5, r4, r0
   23974:	mov	r6, r0
   23978:	cmp	r5, #6
   2397c:	bne	23904 <error@@Base+0xcc4>
   23980:	movw	r0, #7232	; 0x1c40
   23984:	mov	r1, r4
   23988:	movt	r0, #3
   2398c:	mov	r2, r5
   23990:	bl	11cf4 <strncmp@plt>
   23994:	cmp	r0, #0
   23998:	bne	239d8 <error@@Base+0xd98>
   2399c:	ldrb	r3, [r7]
   239a0:	orr	r3, r3, #8
   239a4:	strb	r3, [r7]
   239a8:	b	2393c <error@@Base+0xcfc>
   239ac:	movw	r0, #4368	; 0x1110
   239b0:	mov	r1, r4
   239b4:	movt	r0, #3
   239b8:	mov	r2, r5
   239bc:	bl	11cf4 <strncmp@plt>
   239c0:	cmp	r0, #0
   239c4:	bne	23a10 <error@@Base+0xdd0>
   239c8:	ldrb	r3, [r7]
   239cc:	orr	r3, r3, #16
   239d0:	strb	r3, [r7]
   239d4:	b	2393c <error@@Base+0xcfc>
   239d8:	mov	r1, r4
   239dc:	mov	r2, r5
   239e0:	movw	r0, #14668	; 0x394c
   239e4:	movt	r0, #3
   239e8:	bl	11cf4 <strncmp@plt>
   239ec:	cmp	r0, #0
   239f0:	beq	23a58 <error@@Base+0xe18>
   239f4:	ldr	r2, [sp, #4]
   239f8:	mov	r0, r9
   239fc:	ldr	r3, [r8]
   23a00:	cmp	r2, r3
   23a04:	bne	23a74 <error@@Base+0xe34>
   23a08:	add	sp, sp, #12
   23a0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   23a10:	mov	r1, r4
   23a14:	mov	r2, r5
   23a18:	movw	r0, #14676	; 0x3954
   23a1c:	movt	r0, #3
   23a20:	bl	11cf4 <strncmp@plt>
   23a24:	cmp	r0, #0
   23a28:	bne	239f4 <error@@Base+0xdb4>
   23a2c:	ldrb	r3, [r7]
   23a30:	mov	r0, r6
   23a34:	orr	r3, r3, #4
   23a38:	strb	r3, [r7]
   23a3c:	bl	23230 <error@@Base+0x5f0>
   23a40:	mov	r4, r0
   23a44:	ldrb	r3, [r7]
   23a48:	mov	r9, r4
   23a4c:	orr	r3, r3, #1
   23a50:	strb	r3, [r7]
   23a54:	b	239f4 <error@@Base+0xdb4>
   23a58:	ldrb	r3, [r7]
   23a5c:	mov	r0, r6
   23a60:	orr	r3, r3, #2
   23a64:	strb	r3, [r7]
   23a68:	bl	23230 <error@@Base+0x5f0>
   23a6c:	mov	r4, r0
   23a70:	b	23a44 <error@@Base+0xe04>
   23a74:	bl	11934 <__stack_chk_fail@plt>
   23a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a7c:	sub	sp, sp, #36	; 0x24
   23a80:	ldrb	sl, [r0]
   23a84:	mov	r7, r2
   23a88:	ldr	r5, [sp, #72]	; 0x48
   23a8c:	sub	r2, r0, #1
   23a90:	str	r2, [sp, #20]
   23a94:	mov	r8, r0
   23a98:	cmp	r5, #0
   23a9c:	mov	r6, r1
   23aa0:	mov	fp, r0
   23aa4:	mov	r9, #0
   23aa8:	movne	r5, #36	; 0x24
   23aac:	adds	r3, r3, #0
   23ab0:	movne	r3, #1
   23ab4:	str	r3, [sp, #28]
   23ab8:	ldr	r2, [sp, #28]
   23abc:	adds	r3, r7, #0
   23ac0:	movne	r3, #1
   23ac4:	str	r3, [sp, #24]
   23ac8:	and	r3, r3, r2
   23acc:	str	r3, [sp, #16]
   23ad0:	ldr	r3, [sp, #16]
   23ad4:	cmp	r3, #0
   23ad8:	beq	23c30 <error@@Base+0xff0>
   23adc:	cmp	sl, #0
   23ae0:	beq	23c94 <error@@Base+0x1054>
   23ae4:	cmp	sl, r5
   23ae8:	mov	r3, sl
   23aec:	beq	23df0 <error@@Base+0x11b0>
   23af0:	cmp	sl, r6
   23af4:	beq	23df0 <error@@Base+0x11b0>
   23af8:	cmp	r7, sl
   23afc:	beq	23df0 <error@@Base+0x11b0>
   23b00:	bl	11b20 <__ctype_b_loc@plt>
   23b04:	ldr	r1, [r0]
   23b08:	b	23b38 <error@@Base+0xef8>
   23b0c:	ldrb	sl, [fp, #1]
   23b10:	mov	fp, r3
   23b14:	cmp	sl, #0
   23b18:	mov	r3, sl
   23b1c:	beq	23c94 <error@@Base+0x1054>
   23b20:	cmp	sl, r5
   23b24:	beq	23b64 <error@@Base+0xf24>
   23b28:	cmp	sl, r6
   23b2c:	beq	23b64 <error@@Base+0xf24>
   23b30:	cmp	r7, sl
   23b34:	beq	23b64 <error@@Base+0xf24>
   23b38:	lsl	sl, sl, #1
   23b3c:	add	r3, fp, #1
   23b40:	mov	r0, fp
   23b44:	ldrh	r2, [r1, sl]
   23b48:	mov	r4, r3
   23b4c:	tst	r2, #1
   23b50:	beq	23b0c <error@@Base+0xecc>
   23b54:	ldrb	r3, [r0]
   23b58:	cmp	r3, #0
   23b5c:	beq	23e10 <error@@Base+0x11d0>
   23b60:	mov	r4, r0
   23b64:	cmp	r5, r3
   23b68:	beq	23ca0 <error@@Base+0x1060>
   23b6c:	cmp	r8, r4
   23b70:	bcs	23df8 <error@@Base+0x11b8>
   23b74:	ldrb	r3, [r4, #-1]
   23b78:	cmp	r3, #92	; 0x5c
   23b7c:	bne	23df8 <error@@Base+0x11b8>
   23b80:	sub	r3, r4, #2
   23b84:	cmp	r8, r3
   23b88:	bhi	23dd8 <error@@Base+0x1198>
   23b8c:	ldrb	r3, [r4, #-2]
   23b90:	cmp	r3, #92	; 0x5c
   23b94:	bne	23dd8 <error@@Base+0x1198>
   23b98:	ldr	r2, [sp, #20]
   23b9c:	mvn	r3, #1
   23ba0:	rsb	r1, r4, r2
   23ba4:	b	23bb4 <error@@Base+0xf74>
   23ba8:	ldrb	r2, [r4, r3]
   23bac:	cmp	r2, #92	; 0x5c
   23bb0:	bne	23bc0 <error@@Base+0xf80>
   23bb4:	sub	r3, r3, #1
   23bb8:	cmp	r3, r1
   23bbc:	bne	23ba8 <error@@Base+0xf68>
   23bc0:	add	r3, r3, #1
   23bc4:	and	r2, r3, #1
   23bc8:	str	r2, [sp, #12]
   23bcc:	add	ip, r3, r3, lsr #31
   23bd0:	asr	sl, ip, #1
   23bd4:	rsb	r2, sl, #0
   23bd8:	cmp	r9, #0
   23bdc:	bne	23bf4 <error@@Base+0xfb4>
   23be0:	mov	r0, r8
   23be4:	stmib	sp, {r2, r3}
   23be8:	bl	11b5c <strlen@plt>
   23bec:	ldmib	sp, {r2, r3}
   23bf0:	mov	r9, r0
   23bf4:	rsb	r1, r4, r8
   23bf8:	add	fp, r4, sl
   23bfc:	add	r1, r1, #1
   23c00:	add	r0, r4, r3
   23c04:	add	r2, r1, r2
   23c08:	mov	r1, fp
   23c0c:	add	r2, r2, r9
   23c10:	bl	11880 <memmove@plt>
   23c14:	ldr	r3, [sp, #12]
   23c18:	cmp	r3, #0
   23c1c:	beq	23e04 <error@@Base+0x11c4>
   23c20:	ldr	r3, [sp, #16]
   23c24:	ldrb	sl, [r4, sl]
   23c28:	cmp	r3, #0
   23c2c:	bne	23adc <error@@Base+0xe9c>
   23c30:	ldr	r3, [sp, #24]
   23c34:	cmp	r3, #0
   23c38:	beq	23d14 <error@@Base+0x10d4>
   23c3c:	cmp	sl, #0
   23c40:	beq	23c94 <error@@Base+0x1054>
   23c44:	cmp	sl, r5
   23c48:	mov	r3, sl
   23c4c:	beq	23df0 <error@@Base+0x11b0>
   23c50:	cmp	r6, sl
   23c54:	beq	23df0 <error@@Base+0x11b0>
   23c58:	cmp	r7, sl
   23c5c:	beq	23df0 <error@@Base+0x11b0>
   23c60:	add	fp, fp, #1
   23c64:	b	23c80 <error@@Base+0x1040>
   23c68:	cmp	sl, r5
   23c6c:	beq	23b64 <error@@Base+0xf24>
   23c70:	cmp	r6, sl
   23c74:	beq	23b64 <error@@Base+0xf24>
   23c78:	cmp	r7, sl
   23c7c:	beq	23b64 <error@@Base+0xf24>
   23c80:	mov	r4, fp
   23c84:	ldrb	sl, [fp], #1
   23c88:	cmp	sl, #0
   23c8c:	mov	r3, sl
   23c90:	bne	23c68 <error@@Base+0x1028>
   23c94:	mov	r0, sl
   23c98:	add	sp, sp, #36	; 0x24
   23c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ca0:	ldrb	r3, [r4, #1]
   23ca4:	add	fp, r4, #2
   23ca8:	ldrb	sl, [r4, #2]
   23cac:	subs	r2, r3, #40	; 0x28
   23cb0:	rsbs	r1, r2, #0
   23cb4:	adcs	r1, r1, r2
   23cb8:	cmp	r3, #40	; 0x28
   23cbc:	cmpne	r3, #123	; 0x7b
   23cc0:	bne	23ad0 <error@@Base+0xe90>
   23cc4:	cmp	r1, #0
   23cc8:	movne	r1, #41	; 0x29
   23ccc:	moveq	r1, #125	; 0x7d
   23cd0:	cmp	sl, #0
   23cd4:	beq	23ad0 <error@@Base+0xe90>
   23cd8:	mov	r2, #1
   23cdc:	b	23cec <error@@Base+0x10ac>
   23ce0:	ldrb	sl, [fp, #1]!
   23ce4:	cmp	sl, #0
   23ce8:	beq	23ad0 <error@@Base+0xe90>
   23cec:	cmp	r3, sl
   23cf0:	addeq	r2, r2, #1
   23cf4:	beq	23ce0 <error@@Base+0x10a0>
   23cf8:	cmp	r1, sl
   23cfc:	bne	23ce0 <error@@Base+0x10a0>
   23d00:	subs	r2, r2, #1
   23d04:	bne	23ce0 <error@@Base+0x10a0>
   23d08:	ldrb	sl, [fp, #1]
   23d0c:	add	fp, fp, #1
   23d10:	b	23ad0 <error@@Base+0xe90>
   23d14:	ldr	r3, [sp, #28]
   23d18:	cmp	r3, #0
   23d1c:	bne	23d6c <error@@Base+0x112c>
   23d20:	cmp	sl, #0
   23d24:	beq	23c94 <error@@Base+0x1054>
   23d28:	cmp	sl, r5
   23d2c:	mov	r3, sl
   23d30:	beq	23df0 <error@@Base+0x11b0>
   23d34:	cmp	r6, sl
   23d38:	addne	fp, fp, #1
   23d3c:	bne	23d54 <error@@Base+0x1114>
   23d40:	b	23df0 <error@@Base+0x11b0>
   23d44:	cmp	sl, r5
   23d48:	beq	23b64 <error@@Base+0xf24>
   23d4c:	cmp	r6, sl
   23d50:	beq	23b64 <error@@Base+0xf24>
   23d54:	mov	r4, fp
   23d58:	ldrb	sl, [fp], #1
   23d5c:	cmp	sl, #0
   23d60:	mov	r3, sl
   23d64:	bne	23d44 <error@@Base+0x1104>
   23d68:	b	23c94 <error@@Base+0x1054>
   23d6c:	cmp	sl, #0
   23d70:	beq	23c94 <error@@Base+0x1054>
   23d74:	cmp	sl, r5
   23d78:	mov	r3, sl
   23d7c:	beq	23df0 <error@@Base+0x11b0>
   23d80:	cmp	r6, sl
   23d84:	beq	23df0 <error@@Base+0x11b0>
   23d88:	bl	11b20 <__ctype_b_loc@plt>
   23d8c:	ldr	r1, [r0]
   23d90:	b	23db8 <error@@Base+0x1178>
   23d94:	ldrb	sl, [fp, #1]
   23d98:	mov	fp, r3
   23d9c:	cmp	sl, #0
   23da0:	mov	r3, sl
   23da4:	beq	23c94 <error@@Base+0x1054>
   23da8:	cmp	sl, r5
   23dac:	beq	23b64 <error@@Base+0xf24>
   23db0:	cmp	r6, sl
   23db4:	beq	23b64 <error@@Base+0xf24>
   23db8:	lsl	sl, sl, #1
   23dbc:	add	r3, fp, #1
   23dc0:	mov	r0, fp
   23dc4:	ldrh	r2, [r1, sl]
   23dc8:	mov	r4, r3
   23dcc:	tst	r2, #1
   23dd0:	beq	23d94 <error@@Base+0x1154>
   23dd4:	b	23b54 <error@@Base+0xf14>
   23dd8:	mov	r2, #0
   23ddc:	mov	r3, #1
   23de0:	mov	sl, r2
   23de4:	str	r3, [sp, #12]
   23de8:	mvn	r3, #0
   23dec:	b	23bd8 <error@@Base+0xf98>
   23df0:	mov	r4, fp
   23df4:	b	23b64 <error@@Base+0xf24>
   23df8:	mov	r0, r4
   23dfc:	add	sp, sp, #36	; 0x24
   23e00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e04:	mov	r0, fp
   23e08:	add	sp, sp, #36	; 0x24
   23e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e10:	mov	r0, r3
   23e14:	b	23c98 <error@@Base+0x1058>
   23e18:	push	{r4, lr}
   23e1c:	sub	sp, sp, #8
   23e20:	mov	r4, #0
   23e24:	mov	r1, #35	; 0x23
   23e28:	str	r4, [sp]
   23e2c:	mov	r2, r4
   23e30:	mov	r3, r4
   23e34:	bl	23a78 <error@@Base+0xe38>
   23e38:	cmp	r0, #0
   23e3c:	strbne	r4, [r0]
   23e40:	add	sp, sp, #8
   23e44:	pop	{r4, pc}
   23e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e4c:	add	fp, sp, #32
   23e50:	sub	sp, sp, #20
   23e54:	movw	r4, #26864	; 0x68f0
   23e58:	movt	r4, #4
   23e5c:	cmp	r1, #5
   23e60:	mov	r9, r1
   23e64:	ldr	r3, [r4]
   23e68:	mov	sl, r0
   23e6c:	mov	r7, r2
   23e70:	str	r3, [fp, #-40]	; 0xffffffd8
   23e74:	beq	23ed4 <error@@Base+0x1294>
   23e78:	cmp	r1, #6
   23e7c:	beq	23ea4 <error@@Base+0x1264>
   23e80:	cmp	r1, #4
   23e84:	beq	2400c <error@@Base+0x13cc>
   23e88:	mvn	r0, #1
   23e8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23e90:	ldr	r3, [r4]
   23e94:	cmp	r2, r3
   23e98:	bne	24670 <error@@Base+0x1a30>
   23e9c:	sub	sp, fp, #32
   23ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ea4:	movw	r0, #14696	; 0x3968
   23ea8:	mov	r1, sl
   23eac:	movt	r0, #3
   23eb0:	mov	r2, r9
   23eb4:	bl	11cf4 <strncmp@plt>
   23eb8:	cmp	r0, #0
   23ebc:	bne	23e88 <error@@Base+0x1248>
   23ec0:	movw	r6, #14696	; 0x3968
   23ec4:	mov	r3, #1
   23ec8:	movt	r6, #3
   23ecc:	str	r3, [fp, #-48]	; 0xffffffd0
   23ed0:	b	23f1c <error@@Base+0x12dc>
   23ed4:	movw	r0, #14688	; 0x3960
   23ed8:	mov	r1, sl
   23edc:	movt	r0, #3
   23ee0:	mov	r2, r9
   23ee4:	bl	11cf4 <strncmp@plt>
   23ee8:	cmp	r0, #0
   23eec:	beq	240f4 <error@@Base+0x14b4>
   23ef0:	movw	r0, #14712	; 0x3978
   23ef4:	mov	r1, sl
   23ef8:	movt	r0, #3
   23efc:	mov	r2, r9
   23f00:	bl	11cf4 <strncmp@plt>
   23f04:	cmp	r0, #0
   23f08:	bne	24118 <error@@Base+0x14d8>
   23f0c:	movw	r6, #14712	; 0x3978
   23f10:	movt	r6, #3
   23f14:	mov	r3, #3
   23f18:	str	r3, [fp, #-48]	; 0xffffffd0
   23f1c:	add	r0, sl, r9
   23f20:	movw	r5, #26760	; 0x6888
   23f24:	bl	23230 <error@@Base+0x5f0>
   23f28:	movt	r5, #4
   23f2c:	ldr	r9, [r5]
   23f30:	ldr	r3, [r9, #4]
   23f34:	cmp	r3, #0
   23f38:	mov	sl, r0
   23f3c:	beq	241a4 <error@@Base+0x1564>
   23f40:	ldr	r8, [r9]
   23f44:	add	r2, r8, #1
   23f48:	str	r2, [r9]
   23f4c:	cmp	r2, r3
   23f50:	bhi	241d0 <error@@Base+0x1590>
   23f54:	ldr	r3, [r9, #12]
   23f58:	cmp	r8, #0
   23f5c:	mov	r2, #0
   23f60:	strb	r2, [r3, r8]
   23f64:	beq	23f9c <error@@Base+0x135c>
   23f68:	ldr	r9, [r9, #8]
   23f6c:	ldrb	r3, [r9]
   23f70:	cmp	r3, r2
   23f74:	subeq	r1, r8, #1
   23f78:	moveq	r3, r9
   23f7c:	addeq	r1, r9, r1
   23f80:	beq	23f94 <error@@Base+0x1354>
   23f84:	b	24198 <error@@Base+0x1558>
   23f88:	ldrb	r2, [r3, #1]!
   23f8c:	cmp	r2, #0
   23f90:	bne	24198 <error@@Base+0x1558>
   23f94:	cmp	r3, r1
   23f98:	bne	23f88 <error@@Base+0x1348>
   23f9c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   23fa0:	cmp	r3, #1
   23fa4:	bls	245d8 <error@@Base+0x1998>
   23fa8:	ldrb	r1, [sl]
   23fac:	cmp	r1, #40	; 0x28
   23fb0:	beq	24454 <error@@Base+0x1814>
   23fb4:	cmp	r1, #34	; 0x22
   23fb8:	cmpne	r1, #44	; 0x2c
   23fbc:	beq	24598 <error@@Base+0x1958>
   23fc0:	cmp	r1, #39	; 0x27
   23fc4:	addeq	sl, sl, #1
   23fc8:	bne	24004 <error@@Base+0x13c4>
   23fcc:	ldrb	r3, [sl]
   23fd0:	cmp	r3, #0
   23fd4:	beq	24004 <error@@Base+0x13c4>
   23fd8:	cmp	r1, r3
   23fdc:	moveq	r9, sl
   23fe0:	beq	24324 <error@@Base+0x16e4>
   23fe4:	add	r3, sl, #1
   23fe8:	b	23ff4 <error@@Base+0x13b4>
   23fec:	cmp	r1, r2
   23ff0:	beq	24324 <error@@Base+0x16e4>
   23ff4:	mov	r9, r3
   23ff8:	ldrb	r2, [r3], #1
   23ffc:	cmp	r2, #0
   24000:	bne	23fec <error@@Base+0x13ac>
   24004:	mvn	r0, #0
   24008:	b	23e8c <error@@Base+0x124c>
   2400c:	movw	r0, #14704	; 0x3970
   24010:	mov	r1, sl
   24014:	movt	r0, #3
   24018:	mov	r2, r9
   2401c:	bl	11cf4 <strncmp@plt>
   24020:	cmp	r0, #0
   24024:	beq	24104 <error@@Base+0x14c4>
   24028:	mov	r2, r9
   2402c:	movw	r0, #14720	; 0x3980
   24030:	mov	r1, sl
   24034:	movt	r0, #3
   24038:	bl	11cf4 <strncmp@plt>
   2403c:	subs	r8, r0, #0
   24040:	bne	23e88 <error@@Base+0x1248>
   24044:	add	r0, sl, #4
   24048:	movw	r5, #26760	; 0x6888
   2404c:	bl	23230 <error@@Base+0x5f0>
   24050:	movt	r5, #4
   24054:	ldr	r2, [r5]
   24058:	ldr	r9, [r2]
   2405c:	cmp	r9, #0
   24060:	mov	ip, r0
   24064:	beq	24694 <error@@Base+0x1a54>
   24068:	ldr	r3, [r2, #12]
   2406c:	sub	sl, r9, #1
   24070:	ldrb	r6, [r3, sl]
   24074:	cmp	r6, #0
   24078:	bne	24674 <error@@Base+0x1a34>
   2407c:	ldr	r1, [r2, #8]
   24080:	ldrb	r3, [r1, sl]
   24084:	cmp	r3, #0
   24088:	beq	24448 <error@@Base+0x1808>
   2408c:	cmp	r3, #1
   24090:	strbeq	r6, [r1, sl]
   24094:	ldrb	r3, [ip]
   24098:	cmp	r3, #0
   2409c:	bne	24208 <error@@Base+0x15c8>
   240a0:	ldr	r1, [r2, #12]
   240a4:	mov	r0, #1
   240a8:	mov	r3, r2
   240ac:	strb	r0, [r1, sl]
   240b0:	ldr	r0, [r2]
   240b4:	cmp	r0, #0
   240b8:	beq	23e8c <error@@Base+0x124c>
   240bc:	ldr	r3, [r3, #8]
   240c0:	ldrb	r2, [r3]
   240c4:	cmp	r2, #0
   240c8:	bne	24190 <error@@Base+0x1550>
   240cc:	sub	r1, r3, #1
   240d0:	add	r1, r1, r0
   240d4:	b	240e4 <error@@Base+0x14a4>
   240d8:	ldrb	r2, [r3, #1]!
   240dc:	cmp	r2, #0
   240e0:	bne	24190 <error@@Base+0x1550>
   240e4:	cmp	r3, r1
   240e8:	bne	240d8 <error@@Base+0x1498>
   240ec:	mov	r0, #0
   240f0:	b	23e8c <error@@Base+0x124c>
   240f4:	movw	r6, #14688	; 0x3960
   240f8:	str	r0, [fp, #-48]	; 0xffffffd0
   240fc:	movt	r6, #3
   24100:	b	23f1c <error@@Base+0x12dc>
   24104:	movw	r6, #14704	; 0x3970
   24108:	mov	r3, #2
   2410c:	movt	r6, #3
   24110:	str	r3, [fp, #-48]	; 0xffffffd0
   24114:	b	23f1c <error@@Base+0x12dc>
   24118:	movw	r0, #14728	; 0x3988
   2411c:	mov	r1, sl
   24120:	movt	r0, #3
   24124:	mov	r2, r9
   24128:	bl	11cf4 <strncmp@plt>
   2412c:	subs	r5, r0, #0
   24130:	bne	23e88 <error@@Base+0x1248>
   24134:	add	r0, sl, #5
   24138:	bl	23230 <error@@Base+0x5f0>
   2413c:	ldrb	r3, [r0]
   24140:	cmp	r3, #0
   24144:	bne	242f8 <error@@Base+0x16b8>
   24148:	movw	r3, #26760	; 0x6888
   2414c:	movt	r3, #4
   24150:	ldr	r2, [r3]
   24154:	ldr	r0, [r2]
   24158:	cmp	r0, #0
   2415c:	subne	r0, r0, #1
   24160:	strne	r0, [r2]
   24164:	movne	r3, r2
   24168:	bne	240b4 <error@@Base+0x1474>
   2416c:	mov	r2, #5
   24170:	movw	r1, #14776	; 0x39b8
   24174:	movt	r1, #3
   24178:	bl	1191c <dcgettext@plt>
   2417c:	movw	r2, #14728	; 0x3988
   24180:	movt	r2, #3
   24184:	mov	r1, r0
   24188:	mov	r0, r7
   2418c:	bl	22d64 <error@@Base+0x124>
   24190:	mov	r0, #1
   24194:	b	23e8c <error@@Base+0x124c>
   24198:	mov	r0, #1
   2419c:	strb	r0, [r9, r8]
   241a0:	b	23e8c <error@@Base+0x124c>
   241a4:	mov	r0, #5
   241a8:	str	r0, [r9, #4]
   241ac:	bl	22f44 <error@@Base+0x304>
   241b0:	ldr	r8, [r5]
   241b4:	str	r0, [r9, #8]
   241b8:	ldr	r0, [r8, #4]
   241bc:	bl	22f44 <error@@Base+0x304>
   241c0:	ldr	r9, [r5]
   241c4:	ldr	r3, [r9, #4]
   241c8:	str	r0, [r8, #12]
   241cc:	b	23f40 <error@@Base+0x1300>
   241d0:	add	r1, r3, #5
   241d4:	ldr	r0, [r9, #8]
   241d8:	str	r1, [r9, #4]
   241dc:	bl	22fb0 <error@@Base+0x370>
   241e0:	ldr	r3, [r5]
   241e4:	ldr	r1, [r3, #4]
   241e8:	str	r0, [r9, #8]
   241ec:	ldr	r0, [r3, #12]
   241f0:	str	r3, [fp, #-52]	; 0xffffffcc
   241f4:	bl	22fb0 <error@@Base+0x370>
   241f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   241fc:	ldr	r9, [r5]
   24200:	str	r0, [r3, #12]
   24204:	b	23f54 <error@@Base+0x1314>
   24208:	ldrb	r6, [ip, #1]
   2420c:	add	r8, ip, #1
   24210:	cmp	r6, #0
   24214:	beq	24248 <error@@Base+0x1608>
   24218:	str	ip, [fp, #-52]	; 0xffffffcc
   2421c:	bl	11b20 <__ctype_b_loc@plt>
   24220:	ldr	ip, [fp, #-52]	; 0xffffffcc
   24224:	ldr	r2, [r0]
   24228:	b	24238 <error@@Base+0x15f8>
   2422c:	ldrb	r6, [r8, #1]!
   24230:	cmp	r6, #0
   24234:	beq	24248 <error@@Base+0x1608>
   24238:	lsl	r6, r6, #1
   2423c:	ldrh	r3, [r2, r6]
   24240:	tst	r3, #8192	; 0x2000
   24244:	beq	2422c <error@@Base+0x15ec>
   24248:	rsb	r8, ip, r8
   2424c:	cmp	r8, #4
   24250:	beq	24658 <error@@Base+0x1a18>
   24254:	cmp	r8, #5
   24258:	bne	242b4 <error@@Base+0x1674>
   2425c:	movw	r0, #14728	; 0x3988
   24260:	movt	r0, #3
   24264:	mov	r1, ip
   24268:	mov	r2, r8
   2426c:	str	ip, [fp, #-52]	; 0xffffffcc
   24270:	bl	11cf4 <strncmp@plt>
   24274:	ldr	ip, [fp, #-52]	; 0xffffffcc
   24278:	cmp	r0, #0
   2427c:	bne	242b4 <error@@Base+0x1674>
   24280:	mov	r2, #5
   24284:	movw	r1, #14736	; 0x3990
   24288:	mov	r0, #0
   2428c:	movt	r1, #3
   24290:	bl	1191c <dcgettext@plt>
   24294:	movw	r2, #14720	; 0x3980
   24298:	movt	r2, #3
   2429c:	mov	r1, r0
   242a0:	mov	r0, r7
   242a4:	bl	22c40 <error@@Base>
   242a8:	ldr	r3, [r5]
   242ac:	ldr	r0, [r3]
   242b0:	b	240b4 <error@@Base+0x1474>
   242b4:	mov	r0, ip
   242b8:	mov	r1, r8
   242bc:	mov	r2, r7
   242c0:	bl	23e48 <error@@Base+0x1208>
   242c4:	cmp	r0, #0
   242c8:	blt	24280 <error@@Base+0x1640>
   242cc:	ldr	r2, [r5]
   242d0:	ldr	r3, [r2, #8]
   242d4:	ldrb	r1, [r3, sl]
   242d8:	cmp	r1, #1
   242dc:	ldrbls	r1, [r3, r9]
   242e0:	strbls	r1, [r3, sl]
   242e4:	mov	r3, r2
   242e8:	ldr	r0, [r2]
   242ec:	sub	r0, r0, #1
   242f0:	str	r0, [r2]
   242f4:	b	240b4 <error@@Base+0x1474>
   242f8:	mov	r2, r9
   242fc:	mov	r0, r5
   24300:	movw	r1, #14736	; 0x3990
   24304:	movt	r1, #3
   24308:	bl	1191c <dcgettext@plt>
   2430c:	movw	r2, #14728	; 0x3988
   24310:	movt	r2, #3
   24314:	mov	r1, r0
   24318:	mov	r0, r7
   2431c:	bl	22c40 <error@@Base>
   24320:	b	24148 <error@@Base+0x1508>
   24324:	cmp	r1, #44	; 0x2c
   24328:	beq	244b4 <error@@Base+0x1874>
   2432c:	mov	r3, #0
   24330:	mov	r0, sl
   24334:	strb	r3, [r9]
   24338:	add	sl, r9, #1
   2433c:	bl	17528 <__assert_fail@plt+0x57f8>
   24340:	mov	r9, r0
   24344:	bl	11b5c <strlen@plt>
   24348:	mov	r1, r9
   2434c:	add	r3, r0, #15
   24350:	add	r2, r0, #1
   24354:	bic	r3, r3, #7
   24358:	sub	sp, sp, r3
   2435c:	mov	r0, sp
   24360:	mov	r9, sp
   24364:	bl	118c8 <memcpy@plt>
   24368:	mov	r0, sl
   2436c:	bl	23230 <error@@Base+0x5f0>
   24370:	ldrb	r1, [r0]
   24374:	mov	r3, r0
   24378:	cmp	r1, #34	; 0x22
   2437c:	cmpne	r1, #41	; 0x29
   24380:	beq	245a8 <error@@Base+0x1968>
   24384:	cmp	r1, #39	; 0x27
   24388:	bne	24004 <error@@Base+0x13c4>
   2438c:	ldrb	r2, [r3, #1]
   24390:	add	sl, r3, #1
   24394:	cmp	r2, #0
   24398:	beq	24004 <error@@Base+0x13c4>
   2439c:	cmp	r1, r2
   243a0:	beq	24668 <error@@Base+0x1a28>
   243a4:	add	r3, r3, #2
   243a8:	b	243b4 <error@@Base+0x1774>
   243ac:	cmp	r1, r2
   243b0:	beq	243d4 <error@@Base+0x1794>
   243b4:	mov	r0, r3
   243b8:	ldrb	r2, [r3], #1
   243bc:	cmp	r2, #0
   243c0:	bne	243ac <error@@Base+0x176c>
   243c4:	b	24004 <error@@Base+0x13c4>
   243c8:	ldrb	r3, [r2]
   243cc:	cmp	r3, #0
   243d0:	beq	24004 <error@@Base+0x13c4>
   243d4:	mov	r3, #0
   243d8:	strb	r3, [r0], #1
   243dc:	str	r3, [fp, #-52]	; 0xffffffcc
   243e0:	bl	23230 <error@@Base+0x5f0>
   243e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   243e8:	ldrb	r2, [r0]
   243ec:	cmp	r2, #0
   243f0:	bne	24570 <error@@Base+0x1930>
   243f4:	mov	r0, sl
   243f8:	bl	17528 <__assert_fail@plt+0x57f8>
   243fc:	ldr	r6, [r5]
   24400:	ldr	r5, [r6, #8]
   24404:	cmp	r9, r0
   24408:	mov	r1, r0
   2440c:	moveq	r0, #0
   24410:	beq	24428 <error@@Base+0x17e8>
   24414:	ldrb	r0, [r9]
   24418:	ldrb	r2, [r1]
   2441c:	cmp	r2, r0
   24420:	movne	r0, #1
   24424:	beq	245b4 <error@@Base+0x1974>
   24428:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2442c:	cmp	r2, #3
   24430:	movne	r3, r0
   24434:	eoreq	r3, r0, #1
   24438:	strb	r3, [r5, r8]
   2443c:	mov	r3, r6
   24440:	ldr	r0, [r6]
   24444:	b	240b4 <error@@Base+0x1474>
   24448:	mov	r3, #2
   2444c:	strb	r3, [r1, sl]
   24450:	b	24094 <error@@Base+0x1454>
   24454:	add	sl, sl, #1
   24458:	ldrb	r3, [sl]
   2445c:	cmp	r3, #0
   24460:	movne	r2, sl
   24464:	movne	r1, #0
   24468:	bne	2447c <error@@Base+0x183c>
   2446c:	b	24004 <error@@Base+0x13c4>
   24470:	ldrb	r3, [r2, #1]!
   24474:	cmp	r3, #0
   24478:	beq	24004 <error@@Base+0x13c4>
   2447c:	cmp	r3, #40	; 0x28
   24480:	mov	r9, r2
   24484:	addeq	r1, r1, #1
   24488:	beq	24470 <error@@Base+0x1830>
   2448c:	cmp	r3, #41	; 0x29
   24490:	subeq	r1, r1, #1
   24494:	beq	24470 <error@@Base+0x1830>
   24498:	cmp	r3, #44	; 0x2c
   2449c:	bne	24470 <error@@Base+0x1830>
   244a0:	cmp	r1, #0
   244a4:	bgt	24470 <error@@Base+0x1830>
   244a8:	ldrb	r3, [r2]
   244ac:	cmp	r3, #0
   244b0:	beq	24004 <error@@Base+0x13c4>
   244b4:	bl	11b20 <__ctype_b_loc@plt>
   244b8:	add	r3, r9, #1
   244bc:	ldr	r1, [r0]
   244c0:	b	244c8 <error@@Base+0x1888>
   244c4:	sub	r9, r9, #1
   244c8:	ldrb	r2, [r9, #-1]
   244cc:	lsl	r2, r2, #1
   244d0:	ldrh	r2, [r1, r2]
   244d4:	ands	r2, r2, #1
   244d8:	bne	244c4 <error@@Base+0x1884>
   244dc:	strb	r2, [r9]
   244e0:	mov	r0, sl
   244e4:	str	r3, [fp, #-52]	; 0xffffffcc
   244e8:	bl	17528 <__assert_fail@plt+0x57f8>
   244ec:	mov	r9, r0
   244f0:	bl	11b5c <strlen@plt>
   244f4:	mov	r1, r9
   244f8:	add	lr, r0, #15
   244fc:	add	r2, r0, #1
   24500:	bic	lr, lr, #7
   24504:	sub	sp, sp, lr
   24508:	mov	r0, sp
   2450c:	mov	r9, sp
   24510:	bl	118c8 <memcpy@plt>
   24514:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24518:	mov	r0, r3
   2451c:	bl	23230 <error@@Base+0x5f0>
   24520:	ldrb	r3, [r0]
   24524:	mov	sl, r0
   24528:	cmp	r3, #0
   2452c:	beq	24004 <error@@Base+0x13c4>
   24530:	mov	r2, r0
   24534:	mov	r1, #0
   24538:	b	24548 <error@@Base+0x1908>
   2453c:	ldrb	r3, [r2, #1]!
   24540:	cmp	r3, #0
   24544:	beq	24004 <error@@Base+0x13c4>
   24548:	cmp	r3, #40	; 0x28
   2454c:	mov	r0, r2
   24550:	addeq	r1, r1, #1
   24554:	beq	2453c <error@@Base+0x18fc>
   24558:	cmp	r3, #41	; 0x29
   2455c:	bne	2453c <error@@Base+0x18fc>
   24560:	cmp	r1, #0
   24564:	beq	243c8 <error@@Base+0x1788>
   24568:	sub	r1, r1, #1
   2456c:	b	2453c <error@@Base+0x18fc>
   24570:	mov	r0, r3
   24574:	mov	r2, #5
   24578:	movw	r1, #14736	; 0x3990
   2457c:	movt	r1, #3
   24580:	bl	1191c <dcgettext@plt>
   24584:	mov	r2, r6
   24588:	mov	r1, r0
   2458c:	mov	r0, r7
   24590:	bl	22c40 <error@@Base>
   24594:	b	243f4 <error@@Base+0x17b4>
   24598:	cmp	r1, #44	; 0x2c
   2459c:	add	sl, sl, #1
   245a0:	bne	23fcc <error@@Base+0x138c>
   245a4:	b	24458 <error@@Base+0x1818>
   245a8:	cmp	r1, #41	; 0x29
   245ac:	bne	2438c <error@@Base+0x174c>
   245b0:	b	24518 <error@@Base+0x18d8>
   245b4:	cmp	r2, #0
   245b8:	moveq	r0, r2
   245bc:	beq	24428 <error@@Base+0x17e8>
   245c0:	add	r0, r9, #1
   245c4:	add	r1, r1, #1
   245c8:	bl	1182c <strcmp@plt>
   245cc:	adds	r0, r0, #0
   245d0:	movne	r0, #1
   245d4:	b	24428 <error@@Base+0x17e8>
   245d8:	mov	r1, #0
   245dc:	mov	r0, sl
   245e0:	bl	177b8 <__assert_fail@plt+0x5a88>
   245e4:	mov	r6, r0
   245e8:	bl	231d0 <error@@Base+0x590>
   245ec:	rsb	r7, r6, r0
   245f0:	bl	23230 <error@@Base+0x5f0>
   245f4:	ldrb	r3, [r0]
   245f8:	cmp	r3, #0
   245fc:	bne	24004 <error@@Base+0x13c4>
   24600:	strb	r3, [r6, r7]
   24604:	mov	r1, r7
   24608:	mov	r0, r6
   2460c:	bl	2c6f8 <error@@Base+0x9ab8>
   24610:	ldr	r5, [r5]
   24614:	ldr	r3, [r5, #8]
   24618:	cmp	r0, #0
   2461c:	moveq	r2, #1
   24620:	beq	24634 <error@@Base+0x19f4>
   24624:	ldr	r2, [r0, #8]
   24628:	ldrb	r2, [r2]
   2462c:	rsbs	r2, r2, #1
   24630:	movcc	r2, #0
   24634:	ldr	r0, [fp, #-48]	; 0xffffffd0
   24638:	and	r1, r0, #1
   2463c:	mov	r0, r6
   24640:	eor	r2, r2, r1
   24644:	strb	r2, [r3, r8]
   24648:	bl	1188c <free@plt>
   2464c:	ldr	r0, [r5]
   24650:	mov	r3, r5
   24654:	b	240b4 <error@@Base+0x1474>
   24658:	movw	r0, #14720	; 0x3980
   2465c:	mov	r1, ip
   24660:	movt	r0, #3
   24664:	b	24268 <error@@Base+0x1628>
   24668:	mov	r0, sl
   2466c:	b	243d4 <error@@Base+0x1794>
   24670:	bl	11934 <__stack_chk_fail@plt>
   24674:	mov	r0, r8
   24678:	movw	r1, #14792	; 0x39c8
   2467c:	mov	r2, #5
   24680:	movt	r1, #3
   24684:	bl	1191c <dcgettext@plt>
   24688:	mov	r1, r0
   2468c:	mov	r0, r7
   24690:	bl	22d64 <error@@Base+0x124>
   24694:	mov	r2, #5
   24698:	mov	r0, r9
   2469c:	movw	r1, #14776	; 0x39b8
   246a0:	movt	r1, #3
   246a4:	bl	1191c <dcgettext@plt>
   246a8:	movw	r2, #14720	; 0x3980
   246ac:	movt	r2, #3
   246b0:	mov	r1, r0
   246b4:	mov	r0, r7
   246b8:	bl	22d64 <error@@Base+0x124>
   246bc:	push	{r3, r4, r5, r6, r7, lr}
   246c0:	mov	r4, r0
   246c4:	mov	r6, r1
   246c8:	mov	r7, r2
   246cc:	bl	11b20 <__ctype_b_loc@plt>
   246d0:	ldr	r5, [r0]
   246d4:	mov	r3, r4
   246d8:	add	r4, r4, #1
   246dc:	ldrb	ip, [r3]
   246e0:	lsl	r0, ip, #1
   246e4:	ldrh	r0, [r5, r0]
   246e8:	tst	r0, #1
   246ec:	bne	246d4 <error@@Base+0x1a94>
   246f0:	cmp	ip, #58	; 0x3a
   246f4:	beq	24914 <error@@Base+0x1cd4>
   246f8:	bls	247e4 <error@@Base+0x1ba4>
   246fc:	cmp	ip, #61	; 0x3d
   24700:	beq	24808 <error@@Base+0x1bc8>
   24704:	cmp	ip, #63	; 0x3f
   24708:	beq	247f8 <error@@Base+0x1bb8>
   2470c:	cmp	ip, #59	; 0x3b
   24710:	moveq	r0, #6
   24714:	beq	2480c <error@@Base+0x1bcc>
   24718:	cmp	ip, #43	; 0x2b
   2471c:	mov	r0, #2
   24720:	beq	2483c <error@@Base+0x1bfc>
   24724:	bls	24860 <error@@Base+0x1c20>
   24728:	cmp	ip, #61	; 0x3d
   2472c:	beq	24848 <error@@Base+0x1c08>
   24730:	bls	248b0 <error@@Base+0x1c70>
   24734:	cmp	ip, #63	; 0x3f
   24738:	beq	2483c <error@@Base+0x1bfc>
   2473c:	cmp	ip, #92	; 0x5c
   24740:	bne	2482c <error@@Base+0x1bec>
   24744:	ldrb	ip, [r4]
   24748:	sub	r2, ip, #58	; 0x3a
   2474c:	cmp	r2, #34	; 0x22
   24750:	ldrls	pc, [pc, r2, lsl #2]
   24754:	b	24830 <error@@Base+0x1bf0>
   24758:	andeq	r4, r2, r0, asr r8
   2475c:	andeq	r4, r2, r0, asr r8
   24760:	andeq	r4, r2, r0, lsr r8
   24764:	andeq	r4, r2, r0, asr r8
   24768:	andeq	r4, r2, r0, lsr r8
   2476c:	andeq	r4, r2, r0, lsr r8
   24770:	andeq	r4, r2, r0, lsr r8
   24774:	andeq	r4, r2, r0, lsr r8
   24778:	andeq	r4, r2, r0, lsr r8
   2477c:	andeq	r4, r2, r0, lsr r8
   24780:	andeq	r4, r2, r0, lsr r8
   24784:	andeq	r4, r2, r0, lsr r8
   24788:	andeq	r4, r2, r0, lsr r8
   2478c:	andeq	r4, r2, r0, lsr r8
   24790:	andeq	r4, r2, r0, lsr r8
   24794:	andeq	r4, r2, r0, lsr r8
   24798:	andeq	r4, r2, r0, lsr r8
   2479c:	andeq	r4, r2, r0, lsr r8
   247a0:	andeq	r4, r2, r0, lsr r8
   247a4:	andeq	r4, r2, r0, lsr r8
   247a8:	andeq	r4, r2, r0, lsr r8
   247ac:	andeq	r4, r2, r0, lsr r8
   247b0:	andeq	r4, r2, r0, lsr r8
   247b4:	andeq	r4, r2, r0, lsr r8
   247b8:	andeq	r4, r2, r0, lsr r8
   247bc:	andeq	r4, r2, r0, lsr r8
   247c0:	andeq	r4, r2, r0, lsr r8
   247c4:	andeq	r4, r2, r0, lsr r8
   247c8:	andeq	r4, r2, r0, lsr r8
   247cc:	andeq	r4, r2, r0, lsr r8
   247d0:	andeq	r4, r2, r0, lsr r8
   247d4:	andeq	r4, r2, r0, lsr r8
   247d8:	andeq	r4, r2, r0, lsr r8
   247dc:	andeq	r4, r2, r0, lsr r8
   247e0:	andeq	r4, r2, r0, asr r8
   247e4:	cmp	ip, #0
   247e8:	moveq	r0, #1
   247ec:	beq	2480c <error@@Base+0x1bcc>
   247f0:	cmp	ip, #43	; 0x2b
   247f4:	bne	24718 <error@@Base+0x1ad8>
   247f8:	ldrb	r2, [r3, #1]
   247fc:	cmp	r2, #61	; 0x3d
   24800:	bne	24718 <error@@Base+0x1ad8>
   24804:	add	r4, r3, #2
   24808:	mov	r0, #7
   2480c:	cmp	r6, #0
   24810:	strne	r3, [r6]
   24814:	cmp	r7, #0
   24818:	rsbne	r4, r3, r4
   2481c:	strne	r4, [r7]
   24820:	pop	{r3, r4, r5, r6, r7, pc}
   24824:	cmp	ip, #0
   24828:	beq	24848 <error@@Base+0x1c08>
   2482c:	ldrb	ip, [r4]
   24830:	add	r4, r4, #1
   24834:	cmp	ip, #43	; 0x2b
   24838:	bne	24724 <error@@Base+0x1ae4>
   2483c:	ldrb	ip, [r4]
   24840:	cmp	ip, #61	; 0x3d
   24844:	bne	24830 <error@@Base+0x1bf0>
   24848:	sub	r4, r4, #1
   2484c:	b	2480c <error@@Base+0x1bcc>
   24850:	ldrb	ip, [r4, #1]
   24854:	add	r4, r4, #1
   24858:	add	r4, r4, #1
   2485c:	b	24834 <error@@Base+0x1bf4>
   24860:	cmp	ip, #9
   24864:	beq	24848 <error@@Base+0x1c08>
   24868:	bls	24824 <error@@Base+0x1be4>
   2486c:	cmp	ip, #32
   24870:	beq	24848 <error@@Base+0x1c08>
   24874:	cmp	ip, #36	; 0x24
   24878:	bne	2482c <error@@Base+0x1bec>
   2487c:	ldrb	r5, [r4]
   24880:	add	r1, r4, #1
   24884:	cmp	r5, #36	; 0x24
   24888:	beq	2493c <error@@Base+0x1cfc>
   2488c:	cmp	r5, #40	; 0x28
   24890:	beq	2494c <error@@Base+0x1d0c>
   24894:	cmp	r5, #123	; 0x7b
   24898:	beq	248c0 <error@@Base+0x1c80>
   2489c:	ldrb	ip, [r4, #1]
   248a0:	mov	r0, #3
   248a4:	mov	r4, r1
   248a8:	add	r4, r4, #1
   248ac:	b	24834 <error@@Base+0x1bf4>
   248b0:	cmp	ip, #58	; 0x3a
   248b4:	beq	24848 <error@@Base+0x1c08>
   248b8:	ldrb	ip, [r4]
   248bc:	b	24830 <error@@Base+0x1bf0>
   248c0:	mov	r2, #125	; 0x7d
   248c4:	ldrb	ip, [r4, #1]
   248c8:	mov	r4, r1
   248cc:	cmp	ip, #0
   248d0:	beq	24930 <error@@Base+0x1cf0>
   248d4:	mov	r0, #0
   248d8:	b	248e8 <error@@Base+0x1ca8>
   248dc:	ldrb	ip, [r4, #1]!
   248e0:	cmp	ip, #0
   248e4:	beq	24930 <error@@Base+0x1cf0>
   248e8:	cmp	r5, ip
   248ec:	addeq	r0, r0, #1
   248f0:	beq	248dc <error@@Base+0x1c9c>
   248f4:	cmp	ip, r2
   248f8:	bne	248dc <error@@Base+0x1c9c>
   248fc:	subs	r0, r0, #1
   24900:	bcs	248dc <error@@Base+0x1c9c>
   24904:	ldrb	ip, [r4, #1]
   24908:	mov	r0, #3
   2490c:	add	r4, r4, #1
   24910:	b	24830 <error@@Base+0x1bf0>
   24914:	ldrb	r2, [r3, #1]
   24918:	cmp	r2, #58	; 0x3a
   2491c:	beq	24954 <error@@Base+0x1d14>
   24920:	cmp	r2, #61	; 0x3d
   24924:	beq	24804 <error@@Base+0x1bc4>
   24928:	mov	r0, #4
   2492c:	b	2480c <error@@Base+0x1bcc>
   24930:	mov	r0, #3
   24934:	add	r4, r4, #1
   24938:	b	24834 <error@@Base+0x1bf4>
   2493c:	ldrb	ip, [r4, #1]
   24940:	mov	r4, r1
   24944:	add	r4, r4, #1
   24948:	b	24834 <error@@Base+0x1bf4>
   2494c:	mov	r2, #41	; 0x29
   24950:	b	248c4 <error@@Base+0x1c84>
   24954:	add	r4, r3, #2
   24958:	mov	r0, #5
   2495c:	b	2480c <error@@Base+0x1bcc>
   24960:	push	{lr}		; (str lr, [sp, #-4]!)
   24964:	sub	sp, sp, #12
   24968:	mov	r3, #0
   2496c:	mov	r1, #37	; 0x25
   24970:	mov	r2, r3
   24974:	str	r3, [sp]
   24978:	bl	23a78 <error@@Base+0xe38>
   2497c:	add	sp, sp, #12
   24980:	pop	{pc}		; (ldr pc, [sp], #4)
   24984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24988:	add	fp, sp, #32
   2498c:	sub	sp, sp, #28
   24990:	movw	r3, #26864	; 0x68f0
   24994:	movt	r3, #4
   24998:	str	r3, [fp, #-52]	; 0xffffffcc
   2499c:	mov	r9, r0
   249a0:	ldr	r4, [r0]
   249a4:	ldr	r3, [r3]
   249a8:	ldrb	r2, [r4]
   249ac:	str	r3, [fp, #-40]	; 0xffffffd8
   249b0:	cmp	r2, #37	; 0x25
   249b4:	moveq	r0, r4
   249b8:	beq	24abc <error@@Base+0x1e7c>
   249bc:	mov	r3, #0
   249c0:	str	r3, [fp, #-48]	; 0xffffffd0
   249c4:	mov	sl, r3
   249c8:	cmp	r2, #37	; 0x25
   249cc:	cmpne	r2, #0
   249d0:	moveq	ip, #0
   249d4:	movne	ip, #1
   249d8:	bne	24a88 <error@@Base+0x1e48>
   249dc:	cmp	r2, #0
   249e0:	beq	24a90 <error@@Base+0x1e50>
   249e4:	ldrb	r1, [r4, #-1]
   249e8:	cmp	r1, #92	; 0x5c
   249ec:	bne	24a90 <error@@Base+0x1e50>
   249f0:	ldr	r6, [r9]
   249f4:	sub	r2, r4, #2
   249f8:	cmp	r6, r2
   249fc:	bhi	24ad8 <error@@Base+0x1e98>
   24a00:	ldrb	r2, [r4, #-2]
   24a04:	cmp	r2, #92	; 0x5c
   24a08:	bne	24ad8 <error@@Base+0x1e98>
   24a0c:	sub	r1, r6, #1
   24a10:	mvn	r5, #1
   24a14:	rsb	r1, r4, r1
   24a18:	b	24a28 <error@@Base+0x1de8>
   24a1c:	ldrb	r2, [r4, r5]
   24a20:	cmp	r2, #92	; 0x5c
   24a24:	bne	24a34 <error@@Base+0x1df4>
   24a28:	sub	r5, r5, #1
   24a2c:	cmp	r5, r1
   24a30:	bne	24a1c <error@@Base+0x1ddc>
   24a34:	add	r5, r5, #1
   24a38:	cmp	sl, #0
   24a3c:	and	r8, r5, #1
   24a40:	add	r7, r5, r5, lsr #31
   24a44:	asr	r7, r7, #1
   24a48:	rsb	ip, r7, #0
   24a4c:	beq	24aec <error@@Base+0x1eac>
   24a50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24a54:	rsb	r6, r6, r4
   24a58:	add	r1, sl, r6
   24a5c:	add	r4, r4, r7
   24a60:	rsb	r2, r6, r3
   24a64:	add	r0, r1, r5
   24a68:	add	r2, r2, ip
   24a6c:	add	r1, r1, r7
   24a70:	add	r2, r2, #1
   24a74:	bl	11880 <memmove@plt>
   24a78:	cmp	r8, #0
   24a7c:	beq	24a98 <error@@Base+0x1e58>
   24a80:	ldrb	r2, [r4]
   24a84:	b	249c8 <error@@Base+0x1d88>
   24a88:	add	r4, r4, #1
   24a8c:	b	24a80 <error@@Base+0x1e40>
   24a90:	cmp	sl, #0
   24a94:	beq	24ab0 <error@@Base+0x1e70>
   24a98:	ldr	r0, [r9]
   24a9c:	bl	2b9c0 <error@@Base+0x8d80>
   24aa0:	rsb	r3, sl, r4
   24aa4:	str	r0, [r9]
   24aa8:	add	r4, r0, r3
   24aac:	ldrb	r2, [r0, r3]
   24ab0:	cmp	r2, #0
   24ab4:	movne	r0, r4
   24ab8:	moveq	r0, #0
   24abc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   24ac0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24ac4:	ldr	r3, [r1]
   24ac8:	cmp	r2, r3
   24acc:	bne	24b38 <error@@Base+0x1ef8>
   24ad0:	sub	sp, fp, #32
   24ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ad8:	cmp	sl, #0
   24adc:	mov	r8, #1
   24ae0:	mov	r7, ip
   24ae4:	mvn	r5, #0
   24ae8:	bne	24a50 <error@@Base+0x1e10>
   24aec:	mov	r0, r6
   24af0:	str	ip, [fp, #-56]	; 0xffffffc8
   24af4:	bl	11b5c <strlen@plt>
   24af8:	mov	r1, r6
   24afc:	add	r3, r0, #15
   24b00:	add	r2, r0, #1
   24b04:	bic	r3, r3, #7
   24b08:	str	r0, [fp, #-48]	; 0xffffffd0
   24b0c:	sub	sp, sp, r3
   24b10:	mov	r0, sp
   24b14:	mov	sl, sp
   24b18:	bl	118c8 <memcpy@plt>
   24b1c:	ldr	r2, [r9]
   24b20:	mov	r6, sp
   24b24:	str	sp, [r9]
   24b28:	rsb	r4, r2, r4
   24b2c:	ldr	ip, [fp, #-56]	; 0xffffffc8
   24b30:	add	r4, sp, r4
   24b34:	b	24a50 <error@@Base+0x1e10>
   24b38:	bl	11934 <__stack_chk_fail@plt>
   24b3c:	movw	ip, #27084	; 0x69cc
   24b40:	movt	ip, #4
   24b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24b48:	movw	lr, #26864	; 0x68f0
   24b4c:	sub	sp, sp, #52	; 0x34
   24b50:	movt	lr, #4
   24b54:	ldr	r9, [ip]
   24b58:	mov	r6, r0
   24b5c:	ldr	ip, [sp, #104]	; 0x68
   24b60:	mov	r4, r1
   24b64:	ldr	r0, [lr]
   24b68:	cmp	r9, #0
   24b6c:	str	lr, [sp, #28]
   24b70:	mov	fp, r2
   24b74:	movwne	r1, #14824	; 0x39e8
   24b78:	mov	r5, r3
   24b7c:	str	r0, [sp, #44]	; 0x2c
   24b80:	movtne	r1, #3
   24b84:	ldr	sl, [sp, #92]	; 0x5c
   24b88:	movne	r0, #0
   24b8c:	str	ip, [sp, #24]
   24b90:	bne	25218 <error@@Base+0x25d8>
   24b94:	ldr	r3, [r6, #4]
   24b98:	add	r7, sp, #48	; 0x30
   24b9c:	str	r3, [r7, #-8]!
   24ba0:	mov	r0, r7
   24ba4:	bl	24984 <error@@Base+0x1d44>
   24ba8:	ldr	r1, [sp, #96]	; 0x60
   24bac:	cmp	r1, #0
   24bb0:	ldreq	r8, [sp, #96]	; 0x60
   24bb4:	str	r0, [sp, #20]
   24bb8:	bne	24f64 <error@@Base+0x2324>
   24bbc:	cmp	r5, #0
   24bc0:	beq	24f9c <error@@Base+0x235c>
   24bc4:	movw	r3, #29528	; 0x7358
   24bc8:	movt	r3, #4
   24bcc:	ldr	r3, [r3]
   24bd0:	cmp	r3, #0
   24bd4:	beq	24d0c <error@@Base+0x20cc>
   24bd8:	mov	r0, r5
   24bdc:	mov	r1, #36	; 0x24
   24be0:	bl	11b68 <strchr@plt>
   24be4:	cmp	r0, #0
   24be8:	beq	24d0c <error@@Base+0x20cc>
   24bec:	mov	r0, #20
   24bf0:	bl	22f78 <error@@Base+0x338>
   24bf4:	adds	r2, r4, #0
   24bf8:	movne	r2, #1
   24bfc:	str	r0, [sp, #16]
   24c00:	ldrb	r3, [r0, #17]
   24c04:	str	r5, [r0, #4]
   24c08:	orr	r3, r3, #4
   24c0c:	bfi	r3, r2, #1, #1
   24c10:	strb	r3, [r0, #17]
   24c14:	ldr	r3, [sp, #20]
   24c18:	cmp	r3, #0
   24c1c:	beq	24d40 <error@@Base+0x2100>
   24c20:	cmp	r4, #0
   24c24:	bne	2520c <error@@Base+0x25cc>
   24c28:	ldr	fp, [r6]
   24c2c:	mov	r0, r6
   24c30:	bl	1188c <free@plt>
   24c34:	cmp	fp, #0
   24c38:	beq	251c0 <error@@Base+0x2580>
   24c3c:	mov	r2, fp
   24c40:	mov	r0, #1
   24c44:	ldr	r2, [r2]
   24c48:	add	r0, r0, #1
   24c4c:	cmp	r2, #0
   24c50:	bne	24c44 <error@@Base+0x2004>
   24c54:	lsl	r5, r0, #2
   24c58:	mov	r4, #1
   24c5c:	mov	r0, r5
   24c60:	bl	22f44 <error@@Base+0x304>
   24c64:	mov	sl, r0
   24c68:	mov	r0, r5
   24c6c:	bl	22f44 <error@@Base+0x304>
   24c70:	ldr	r2, [sp, #40]	; 0x28
   24c74:	ldr	r3, [sp, #20]
   24c78:	mov	r6, sl
   24c7c:	str	r2, [sl]
   24c80:	mov	r9, r0
   24c84:	mov	r5, r0
   24c88:	str	r3, [r0]
   24c8c:	ldr	r3, [fp, #4]
   24c90:	mov	r0, r7
   24c94:	str	r3, [sp, #40]	; 0x28
   24c98:	bl	24984 <error@@Base+0x1d44>
   24c9c:	subs	r3, r0, #0
   24ca0:	beq	251f0 <error@@Base+0x25b0>
   24ca4:	ldr	r2, [sp, #40]	; 0x28
   24ca8:	mov	r0, fp
   24cac:	add	r4, r4, #1
   24cb0:	str	r2, [r6, #4]!
   24cb4:	str	r3, [r5, #4]!
   24cb8:	ldr	fp, [fp]
   24cbc:	bl	1188c <free@plt>
   24cc0:	cmp	fp, #0
   24cc4:	bne	24c8c <error@@Base+0x204c>
   24cc8:	ldr	r1, [sp, #16]
   24ccc:	mov	ip, #1
   24cd0:	mov	r0, sl
   24cd4:	str	r8, [sp, #4]
   24cd8:	mov	r2, r4
   24cdc:	ldr	r3, [sp, #100]	; 0x64
   24ce0:	str	r1, [sp]
   24ce4:	mov	r1, r9
   24ce8:	str	ip, [sp, #8]
   24cec:	bl	2b0c8 <error@@Base+0x8488>
   24cf0:	ldr	ip, [sp, #28]
   24cf4:	ldr	r2, [sp, #44]	; 0x2c
   24cf8:	ldr	r3, [ip]
   24cfc:	cmp	r2, r3
   24d00:	bne	2525c <error@@Base+0x261c>
   24d04:	add	sp, sp, #52	; 0x34
   24d08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d0c:	mov	r0, r5
   24d10:	bl	183c0 <__assert_fail@plt+0x6690>
   24d14:	str	r0, [sp, #16]
   24d18:	mov	r0, r5
   24d1c:	bl	1188c <free@plt>
   24d20:	ldr	r2, [sp, #20]
   24d24:	cmp	r2, #0
   24d28:	cmpeq	r4, #0
   24d2c:	bne	24c14 <error@@Base+0x1fd4>
   24d30:	ldr	r0, [sp, #16]
   24d34:	mov	r1, #0
   24d38:	bl	18480 <__assert_fail@plt+0x6750>
   24d3c:	str	r0, [sp, #16]
   24d40:	ldr	r9, [sp, #16]
   24d44:	movw	ip, #14940	; 0x3a5c
   24d48:	str	r7, [sp, #16]
   24d4c:	mov	r7, r6
   24d50:	movt	ip, #3
   24d54:	str	ip, [sp, #20]
   24d58:	movw	ip, #29524	; 0x7354
   24d5c:	movt	ip, #4
   24d60:	str	ip, [sp, #32]
   24d64:	movw	ip, #26824	; 0x68c8
   24d68:	movt	ip, #4
   24d6c:	str	ip, [sp, #36]	; 0x24
   24d70:	mov	r0, r7
   24d74:	ldr	r7, [r7]
   24d78:	bl	1188c <free@plt>
   24d7c:	ldr	r6, [sp, #40]	; 0x28
   24d80:	ldr	ip, [sp, #20]
   24d84:	cmp	r6, ip
   24d88:	beq	25024 <error@@Base+0x23e4>
   24d8c:	ldrb	r3, [r6]
   24d90:	cmp	r3, #46	; 0x2e
   24d94:	beq	2506c <error@@Base+0x242c>
   24d98:	movw	r3, #14952	; 0x3a68
   24d9c:	movt	r3, #3
   24da0:	cmp	r6, r3
   24da4:	beq	25094 <error@@Base+0x2454>
   24da8:	movw	r3, #14972	; 0x3a7c
   24dac:	movt	r3, #3
   24db0:	cmp	r6, r3
   24db4:	beq	25104 <error@@Base+0x24c4>
   24db8:	cmp	r4, #0
   24dbc:	beq	24dd8 <error@@Base+0x2198>
   24dc0:	mov	r0, r4
   24dc4:	mov	r1, fp
   24dc8:	ldr	r2, [sp, #40]	; 0x28
   24dcc:	bl	1bde4 <__assert_fail@plt+0xa0b4>
   24dd0:	subs	r6, r0, #0
   24dd4:	beq	250a8 <error@@Base+0x2468>
   24dd8:	cmp	r9, #0
   24ddc:	beq	2501c <error@@Base+0x23dc>
   24de0:	cmp	r7, #0
   24de4:	beq	2501c <error@@Base+0x23dc>
   24de8:	mov	r0, r9
   24dec:	bl	234c0 <error@@Base+0x880>
   24df0:	mov	r6, r0
   24df4:	ldr	ip, [sp, #100]	; 0x64
   24df8:	ldr	r0, [sp, #40]	; 0x28
   24dfc:	cmp	ip, #0
   24e00:	bne	24fbc <error@@Base+0x237c>
   24e04:	bl	2b9c0 <error@@Base+0x8d80>
   24e08:	bl	17bc4 <__assert_fail@plt+0x5e94>
   24e0c:	ldr	r3, [r0, #72]	; 0x48
   24e10:	mov	r5, r0
   24e14:	cmp	r3, #0
   24e18:	bne	25254 <error@@Base+0x2614>
   24e1c:	cmp	r8, #0
   24e20:	beq	24e44 <error@@Base+0x2204>
   24e24:	ldr	r3, [r0, #16]
   24e28:	cmp	r3, r8
   24e2c:	beq	25198 <error@@Base+0x2558>
   24e30:	cmp	r3, #0
   24e34:	beq	24e44 <error@@Base+0x2204>
   24e38:	ldrb	r3, [r0, #78]	; 0x4e
   24e3c:	lsrs	r3, r3, #7
   24e40:	bne	25118 <error@@Base+0x24d8>
   24e44:	movw	r3, #29548	; 0x736c
   24e48:	movt	r3, #4
   24e4c:	ldr	r3, [r3]
   24e50:	cmp	r5, r3
   24e54:	beq	25180 <error@@Base+0x2540>
   24e58:	cmp	r8, #0
   24e5c:	strne	r8, [r5, #16]
   24e60:	movw	r3, #29700	; 0x7404
   24e64:	movt	r3, #4
   24e68:	ldr	r3, [r3]
   24e6c:	cmp	r5, r3
   24e70:	beq	25168 <error@@Base+0x2528>
   24e74:	ldrb	r3, [r5, #78]	; 0x4e
   24e78:	cmp	r4, #0
   24e7c:	orr	r3, r3, #128	; 0x80
   24e80:	strb	r3, [r5, #78]	; 0x4e
   24e84:	beq	25010 <error@@Base+0x23d0>
   24e88:	movw	r0, #6032	; 0x1790
   24e8c:	movt	r0, #3
   24e90:	bl	17528 <__assert_fail@plt+0x57f8>
   24e94:	ldr	lr, [pc, #964]	; 25260 <error@@Base+0x2620>
   24e98:	ldr	r1, [sp, #40]	; 0x28
   24e9c:	add	r3, fp, #1
   24ea0:	mov	r2, r4
   24ea4:	str	r3, [sp]
   24ea8:	str	lr, [sp, #4]
   24eac:	sub	r3, lr, #1
   24eb0:	mov	sl, r0
   24eb4:	bl	1baf8 <__assert_fail@plt+0x9dc8>
   24eb8:	rsb	r1, sl, r0
   24ebc:	mov	r0, sl
   24ec0:	bl	2b9dc <error@@Base+0x8d9c>
   24ec4:	cmp	r6, #0
   24ec8:	mov	r1, r0
   24ecc:	str	r0, [r5, #24]
   24ed0:	beq	24f18 <error@@Base+0x22d8>
   24ed4:	ldrb	r3, [r6, #17]
   24ed8:	tst	r3, #4
   24edc:	strne	r0, [r6, #8]
   24ee0:	beq	25004 <error@@Base+0x23c4>
   24ee4:	ldr	r1, [r5, #12]
   24ee8:	cmp	r1, #0
   24eec:	beq	24f14 <error@@Base+0x22d4>
   24ef0:	cmp	r8, #0
   24ef4:	beq	24fa8 <error@@Base+0x2368>
   24ef8:	mov	r2, r6
   24efc:	b	24f04 <error@@Base+0x22c4>
   24f00:	mov	r2, r3
   24f04:	ldr	r3, [r2]
   24f08:	cmp	r3, #0
   24f0c:	bne	24f00 <error@@Base+0x22c0>
   24f10:	str	r1, [r2]
   24f14:	str	r6, [r5, #12]
   24f18:	ldr	r3, [r5]
   24f1c:	cmp	r7, #0
   24f20:	str	r3, [sp, #40]	; 0x28
   24f24:	beq	24cf0 <error@@Base+0x20b0>
   24f28:	ldr	r3, [r7, #4]
   24f2c:	ldr	r0, [sp, #16]
   24f30:	str	r3, [sp, #40]	; 0x28
   24f34:	bl	24984 <error@@Base+0x1d44>
   24f38:	cmp	r0, #0
   24f3c:	beq	24d70 <error@@Base+0x2130>
   24f40:	mov	r2, #5
   24f44:	movw	r1, #15220	; 0x3b74
   24f48:	mov	r0, #0
   24f4c:	movt	r1, #3
   24f50:	bl	1191c <dcgettext@plt>
   24f54:	mov	r1, r0
   24f58:	ldr	r0, [sp, #24]
   24f5c:	bl	22c40 <error@@Base>
   24f60:	b	24d70 <error@@Base+0x2130>
   24f64:	mov	r0, #28
   24f68:	bl	22f44 <error@@Base+0x304>
   24f6c:	ldr	ip, [sp, #24]
   24f70:	ldr	lr, [sp, #88]	; 0x58
   24f74:	ldr	r1, [sp, #96]	; 0x60
   24f78:	ldr	r3, [ip]
   24f7c:	mov	r8, r0
   24f80:	mov	r0, sl
   24f84:	stm	r8, {r3, lr}
   24f88:	bl	23158 <error@@Base+0x518>
   24f8c:	cmp	r5, #0
   24f90:	str	r9, [r8, #16]
   24f94:	str	r0, [r8, #8]
   24f98:	bne	24bc4 <error@@Base+0x1f84>
   24f9c:	str	r5, [sp, #16]
   24fa0:	b	24c14 <error@@Base+0x1fd4>
   24fa4:	mov	r1, r3
   24fa8:	ldr	r3, [r1]
   24fac:	cmp	r3, #0
   24fb0:	bne	24fa4 <error@@Base+0x2364>
   24fb4:	str	r6, [r1]
   24fb8:	b	24f18 <error@@Base+0x22d8>
   24fbc:	bl	17ae8 <__assert_fail@plt+0x5db8>
   24fc0:	cmp	r0, #0
   24fc4:	beq	24fe0 <error@@Base+0x23a0>
   24fc8:	ldrb	r3, [r0, #78]	; 0x4e
   24fcc:	lsrs	r3, r3, #7
   24fd0:	beq	24fe0 <error@@Base+0x23a0>
   24fd4:	ldr	r3, [r0, #72]	; 0x48
   24fd8:	cmp	r3, #0
   24fdc:	beq	2522c <error@@Base+0x25ec>
   24fe0:	ldr	r0, [sp, #40]	; 0x28
   24fe4:	bl	2b9c0 <error@@Base+0x8d80>
   24fe8:	bl	17bc4 <__assert_fail@plt+0x5e94>
   24fec:	ldr	r3, [r0, #72]	; 0x48
   24ff0:	mov	r5, r0
   24ff4:	str	r8, [r0, #16]
   24ff8:	cmp	r3, #0
   24ffc:	streq	r0, [r0, #72]	; 0x48
   25000:	b	24e74 <error@@Base+0x2234>
   25004:	mov	r0, r6
   25008:	bl	18480 <__assert_fail@plt+0x6750>
   2500c:	mov	r6, r0
   25010:	cmp	r6, #0
   25014:	bne	24ee4 <error@@Base+0x22a4>
   25018:	b	24f18 <error@@Base+0x22d8>
   2501c:	mov	r6, r9
   25020:	b	24df4 <error@@Base+0x21b4>
   25024:	ldr	ip, [sp, #36]	; 0x24
   25028:	mov	r1, #0
   2502c:	ldr	lr, [sp, #32]
   25030:	mov	r3, r1
   25034:	movw	r0, #9920	; 0x26c0
   25038:	movt	r0, #3
   2503c:	ldr	r2, [ip]
   25040:	str	r1, [sp]
   25044:	ldr	ip, [r2, #4]
   25048:	movw	r2, #14948	; 0x3a64
   2504c:	str	r1, [sp, #8]
   25050:	movt	r2, #3
   25054:	mov	r1, #11
   25058:	str	ip, [sp, #4]
   2505c:	mov	ip, #1
   25060:	str	ip, [lr]
   25064:	bl	2c3b8 <error@@Base+0x9778>
   25068:	b	24db8 <error@@Base+0x2178>
   2506c:	add	r5, r6, #1
   25070:	ldr	r1, [pc, #492]	; 25264 <error@@Base+0x2624>
   25074:	mov	r0, r5
   25078:	bl	1182c <strcmp@plt>
   2507c:	cmp	r0, #0
   25080:	beq	25024 <error@@Base+0x23e4>
   25084:	movw	r1, #14952	; 0x3a68
   25088:	movt	r1, #3
   2508c:	cmp	r6, r1
   25090:	bne	250cc <error@@Base+0x248c>
   25094:	movw	r3, #29528	; 0x7358
   25098:	movt	r3, #4
   2509c:	mov	r2, #1
   250a0:	str	r2, [r3]
   250a4:	b	24db8 <error@@Base+0x2178>
   250a8:	mov	r2, #5
   250ac:	movw	r1, #14984	; 0x3a88
   250b0:	movt	r1, #3
   250b4:	bl	1191c <dcgettext@plt>
   250b8:	ldr	r2, [sp, #40]	; 0x28
   250bc:	mov	r1, r0
   250c0:	ldr	r0, [sp, #24]
   250c4:	bl	22c40 <error@@Base>
   250c8:	b	24df4 <error@@Base+0x21b4>
   250cc:	add	r1, r1, #1
   250d0:	mov	r0, r5
   250d4:	bl	1182c <strcmp@plt>
   250d8:	cmp	r0, #0
   250dc:	beq	25094 <error@@Base+0x2454>
   250e0:	movw	r1, #14972	; 0x3a7c
   250e4:	movt	r1, #3
   250e8:	cmp	r6, r1
   250ec:	beq	25104 <error@@Base+0x24c4>
   250f0:	mov	r0, r5
   250f4:	add	r1, r1, #1
   250f8:	bl	1182c <strcmp@plt>
   250fc:	cmp	r0, #0
   25100:	bne	24db8 <error@@Base+0x2178>
   25104:	movw	r3, #29552	; 0x7370
   25108:	movt	r3, #4
   2510c:	mov	r2, #1
   25110:	str	r2, [r3]
   25114:	b	24db8 <error@@Base+0x2178>
   25118:	ldr	r0, [sp, #100]	; 0x64
   2511c:	mov	r2, #5
   25120:	movw	r1, #15128	; 0x3b18
   25124:	movt	r1, #3
   25128:	bl	1191c <dcgettext@plt>
   2512c:	ldr	r2, [r5]
   25130:	mov	r1, r0
   25134:	mov	r0, r8
   25138:	bl	22c40 <error@@Base>
   2513c:	ldr	r0, [sp, #100]	; 0x64
   25140:	mov	r2, #5
   25144:	movw	r1, #15172	; 0x3b44
   25148:	movt	r1, #3
   2514c:	ldr	sl, [r5, #16]
   25150:	bl	1191c <dcgettext@plt>
   25154:	ldr	r2, [r5]
   25158:	mov	r1, r0
   2515c:	mov	r0, sl
   25160:	bl	22c40 <error@@Base>
   25164:	b	24e44 <error@@Base+0x2204>
   25168:	cmp	r6, #0
   2516c:	bne	24e74 <error@@Base+0x2234>
   25170:	ldr	r0, [r5, #12]
   25174:	bl	23558 <error@@Base+0x918>
   25178:	str	r6, [r5, #12]
   2517c:	b	24e74 <error@@Base+0x2234>
   25180:	cmp	r6, #0
   25184:	cmpeq	r8, #0
   25188:	moveq	r3, #0
   2518c:	streq	r3, [r5, #16]
   25190:	beq	24e60 <error@@Base+0x2220>
   25194:	b	24e58 <error@@Base+0x2218>
   25198:	ldr	r0, [sp, #100]	; 0x64
   2519c:	mov	r2, #5
   251a0:	movw	r1, #15076	; 0x3ae4
   251a4:	movt	r1, #3
   251a8:	bl	1191c <dcgettext@plt>
   251ac:	ldr	r2, [r5]
   251b0:	mov	r1, r0
   251b4:	ldr	r0, [sp, #24]
   251b8:	bl	22c40 <error@@Base>
   251bc:	b	24e44 <error@@Base+0x2204>
   251c0:	mov	r0, #4
   251c4:	mov	r4, #1
   251c8:	bl	22f44 <error@@Base+0x304>
   251cc:	mov	sl, r0
   251d0:	mov	r0, #4
   251d4:	bl	22f44 <error@@Base+0x304>
   251d8:	ldr	r3, [sp, #40]	; 0x28
   251dc:	ldr	r2, [sp, #20]
   251e0:	str	r3, [sl]
   251e4:	mov	r9, r0
   251e8:	str	r2, [r0]
   251ec:	b	24cc8 <error@@Base+0x2088>
   251f0:	movw	r1, #14908	; 0x3a3c
   251f4:	mov	r2, #5
   251f8:	movt	r1, #3
   251fc:	bl	1191c <dcgettext@plt>
   25200:	mov	r1, r0
   25204:	ldr	r0, [sp, #24]
   25208:	bl	22d64 <error@@Base+0x124>
   2520c:	movw	r1, #14868	; 0x3a14
   25210:	movt	r1, #3
   25214:	mov	r0, #0
   25218:	mov	r2, #5
   2521c:	bl	1191c <dcgettext@plt>
   25220:	mov	r1, r0
   25224:	ldr	r0, [sp, #24]
   25228:	bl	22d64 <error@@Base+0x124>
   2522c:	mov	r5, r0
   25230:	mov	r0, r3
   25234:	mov	r2, #5
   25238:	movw	r1, #15032	; 0x3ab8
   2523c:	movt	r1, #3
   25240:	bl	1191c <dcgettext@plt>
   25244:	ldr	r2, [r5]
   25248:	mov	r1, r0
   2524c:	ldr	r0, [sp, #24]
   25250:	bl	22d64 <error@@Base+0x124>
   25254:	ldr	r0, [sp, #100]	; 0x64
   25258:	b	25234 <error@@Base+0x25f4>
   2525c:	bl	11934 <__stack_chk_fail@plt>
   25260:	andeq	r4, r3, r1, asr #25
   25264:	andeq	r3, r3, sp, asr sl
   25268:	push	{r3, r4, r5, r6, r7, lr}
   2526c:	mov	r4, r0
   25270:	ldrb	r3, [r0, #1]
   25274:	cmp	r3, #47	; 0x2f
   25278:	cmpne	r3, #0
   2527c:	movne	r6, #0
   25280:	moveq	r6, #1
   25284:	beq	252d4 <error@@Base+0x2694>
   25288:	add	r4, r0, #1
   2528c:	mov	r1, #47	; 0x2f
   25290:	mov	r0, r4
   25294:	bl	11b68 <strchr@plt>
   25298:	subs	r5, r0, #0
   2529c:	beq	253a8 <error@@Base+0x2768>
   252a0:	strb	r6, [r5]
   252a4:	mov	r0, r4
   252a8:	bl	11820 <getpwnam@plt>
   252ac:	cmp	r0, #0
   252b0:	beq	25374 <error@@Base+0x2734>
   252b4:	ldr	r1, [r0, #20]
   252b8:	add	r3, r5, #1
   252bc:	movw	r2, #2240	; 0x8c0
   252c0:	mov	r0, #3
   252c4:	movt	r2, #3
   252c8:	bl	2300c <error@@Base+0x3cc>
   252cc:	pop	{r3, r4, r5, r6, r7, lr}
   252d0:	b	2312c <error@@Base+0x4ec>
   252d4:	mov	r3, #0
   252d8:	movw	r5, #29556	; 0x7374
   252dc:	movt	r5, #4
   252e0:	mov	r1, r3
   252e4:	movw	r0, #15276	; 0x3bac
   252e8:	movt	r0, #3
   252ec:	ldr	r7, [r5]
   252f0:	str	r3, [r5]
   252f4:	bl	177b8 <__assert_fail@plt+0x5a88>
   252f8:	str	r7, [r5]
   252fc:	ldrb	r3, [r0]
   25300:	mov	r6, r0
   25304:	adds	r5, r3, #0
   25308:	movne	r5, #1
   2530c:	cmp	r5, #0
   25310:	beq	25380 <error@@Base+0x2740>
   25314:	cmp	r3, #0
   25318:	bne	25340 <error@@Base+0x2700>
   2531c:	bl	11838 <getlogin@plt>
   25320:	cmp	r0, #0
   25324:	beq	253a0 <error@@Base+0x2760>
   25328:	bl	11820 <getpwnam@plt>
   2532c:	cmp	r0, #0
   25330:	beq	253a0 <error@@Base+0x2760>
   25334:	ldr	r6, [r0, #20]
   25338:	cmp	r6, #0
   2533c:	beq	253a0 <error@@Base+0x2760>
   25340:	add	r2, r4, #1
   25344:	mov	r1, r6
   25348:	mov	r0, #2
   2534c:	bl	2300c <error@@Base+0x3cc>
   25350:	bl	2312c <error@@Base+0x4ec>
   25354:	cmp	r5, #0
   25358:	mov	r4, r0
   2535c:	bne	25364 <error@@Base+0x2724>
   25360:	pop	{r3, r4, r5, r6, r7, pc}
   25364:	mov	r0, r6
   25368:	bl	1188c <free@plt>
   2536c:	mov	r0, r4
   25370:	pop	{r3, r4, r5, r6, r7, pc}
   25374:	mov	r3, #47	; 0x2f
   25378:	strb	r3, [r5]
   2537c:	pop	{r3, r4, r5, r6, r7, pc}
   25380:	bl	1188c <free@plt>
   25384:	movw	r0, #15284	; 0x3bb4
   25388:	movt	r0, #3
   2538c:	bl	11a84 <getenv@plt>
   25390:	subs	r6, r0, #0
   25394:	ldrbne	r3, [r6]
   25398:	bne	25314 <error@@Base+0x26d4>
   2539c:	b	2531c <error@@Base+0x26dc>
   253a0:	mov	r0, #0
   253a4:	pop	{r3, r4, r5, r6, r7, pc}
   253a8:	mov	r0, r4
   253ac:	bl	11820 <getpwnam@plt>
   253b0:	cmp	r0, #0
   253b4:	beq	253a0 <error@@Base+0x2760>
   253b8:	ldr	r0, [r0, #20]
   253bc:	pop	{r3, r4, r5, r6, r7, lr}
   253c0:	b	2312c <error@@Base+0x4ec>
   253c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   253c8:	movw	r8, #26864	; 0x68f0
   253cc:	movt	r8, #4
   253d0:	sub	sp, sp, #124	; 0x7c
   253d4:	subs	sl, r0, #0
   253d8:	ldr	r3, [r8]
   253dc:	str	r3, [sp, #116]	; 0x74
   253e0:	beq	25660 <error@@Base+0x2a20>
   253e4:	ldr	r3, [sl]
   253e8:	cmp	r3, #0
   253ec:	beq	25694 <error@@Base+0x2a54>
   253f0:	mov	r2, sl
   253f4:	mov	r3, #5
   253f8:	ldr	r1, [r2, #4]!
   253fc:	add	r3, r3, #1
   25400:	cmp	r1, #0
   25404:	bne	253f8 <error@@Base+0x27b8>
   25408:	lsl	r0, r3, #2
   2540c:	bl	22f44 <error@@Base+0x304>
   25410:	movw	r6, #28248	; 0x6e58
   25414:	movt	r6, #4
   25418:	sub	sl, sl, #4
   2541c:	mov	r5, #0
   25420:	mov	fp, r6
   25424:	str	r5, [r6]
   25428:	mov	r7, r0
   2542c:	ldr	r4, [sl, #4]!
   25430:	cmp	r4, #0
   25434:	beq	254a8 <error@@Base+0x2868>
   25438:	ldrb	r3, [r4]
   2543c:	cmp	r3, #126	; 0x7e
   25440:	movne	r9, #0
   25444:	bne	2545c <error@@Base+0x281c>
   25448:	b	255e0 <error@@Base+0x29a0>
   2544c:	bl	11b8c <__errno_location@plt>
   25450:	ldr	r3, [r0]
   25454:	cmp	r3, #4
   25458:	bne	2548c <error@@Base+0x284c>
   2545c:	mov	r0, #3
   25460:	mov	r1, r4
   25464:	add	r2, sp, #8
   25468:	bl	11cdc <__xstat64@plt>
   2546c:	cmn	r0, #1
   25470:	beq	2544c <error@@Base+0x280c>
   25474:	cmp	r0, #0
   25478:	bne	2548c <error@@Base+0x284c>
   2547c:	ldr	r3, [sp, #24]
   25480:	and	r3, r3, #61440	; 0xf000
   25484:	cmp	r3, #16384	; 0x4000
   25488:	beq	2557c <error@@Base+0x293c>
   2548c:	cmp	r9, #0
   25490:	beq	2542c <error@@Base+0x27ec>
   25494:	mov	r0, r9
   25498:	bl	1188c <free@plt>
   2549c:	ldr	r4, [sl, #4]!
   254a0:	cmp	r4, #0
   254a4:	bne	25438 <error@@Base+0x27f8>
   254a8:	lsl	r3, r5, #2
   254ac:	movw	r4, #26760	; 0x6888
   254b0:	movt	r4, #4
   254b4:	ldr	r1, [r4, #4]
   254b8:	cmp	r1, #0
   254bc:	addne	r4, r4, #8
   254c0:	movwne	r9, #28248	; 0x6e58
   254c4:	movtne	r9, #4
   254c8:	bne	254e4 <error@@Base+0x28a4>
   254cc:	b	25520 <error@@Base+0x28e0>
   254d0:	bl	11b8c <__errno_location@plt>
   254d4:	ldr	r3, [r0]
   254d8:	cmp	r3, #4
   254dc:	bne	25510 <error@@Base+0x28d0>
   254e0:	ldr	r1, [r4, #-4]
   254e4:	mov	r0, #3
   254e8:	add	r2, sp, #8
   254ec:	bl	11cdc <__xstat64@plt>
   254f0:	cmn	r0, #1
   254f4:	beq	254d0 <error@@Base+0x2890>
   254f8:	cmp	r0, #0
   254fc:	bne	25510 <error@@Base+0x28d0>
   25500:	ldr	r3, [sp, #24]
   25504:	and	r3, r3, #61440	; 0xf000
   25508:	cmp	r3, #16384	; 0x4000
   2550c:	beq	255f8 <error@@Base+0x29b8>
   25510:	ldr	r1, [r4], #4
   25514:	cmp	r1, #0
   25518:	bne	254e4 <error@@Base+0x28a4>
   2551c:	lsl	r3, r5, #2
   25520:	mov	r9, #0
   25524:	str	r9, [r7, r3]
   25528:	ldr	r2, [r7]
   2552c:	cmp	r2, r9
   25530:	movne	r4, r7
   25534:	movne	r5, #3
   25538:	beq	25560 <error@@Base+0x2920>
   2553c:	mov	r0, #0
   25540:	stm	sp, {r5, r9}
   25544:	mov	r3, r0
   25548:	movw	r1, #15292	; 0x3bbc
   2554c:	movt	r1, #3
   25550:	bl	2d434 <error@@Base+0xa7f4>
   25554:	ldr	r2, [r4, #4]!
   25558:	cmp	r2, #0
   2555c:	bne	2553c <error@@Base+0x28fc>
   25560:	ldr	r2, [sp, #116]	; 0x74
   25564:	ldr	r3, [r8]
   25568:	str	r7, [r6, #4]
   2556c:	cmp	r2, r3
   25570:	bne	2569c <error@@Base+0x2a5c>
   25574:	add	sp, sp, #124	; 0x7c
   25578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2557c:	mov	r0, r4
   25580:	bl	11b5c <strlen@plt>
   25584:	cmp	r0, #1
   25588:	bls	2568c <error@@Base+0x2a4c>
   2558c:	sub	r1, r0, #1
   25590:	ldrb	r3, [r4, r1]
   25594:	cmp	r3, #47	; 0x2f
   25598:	beq	255b4 <error@@Base+0x2974>
   2559c:	b	2568c <error@@Base+0x2a4c>
   255a0:	sub	r3, r1, #1
   255a4:	ldrb	r2, [r4, r3]
   255a8:	cmp	r2, #47	; 0x2f
   255ac:	bne	255bc <error@@Base+0x297c>
   255b0:	mov	r1, r3
   255b4:	cmp	r1, #1
   255b8:	bne	255a0 <error@@Base+0x2960>
   255bc:	ldr	r3, [r6]
   255c0:	mov	r0, r4
   255c4:	cmp	r1, r3
   255c8:	strhi	r1, [fp]
   255cc:	bl	2b9dc <error@@Base+0x8d9c>
   255d0:	add	r3, r5, #1
   255d4:	str	r0, [r7, r5, lsl #2]
   255d8:	mov	r5, r3
   255dc:	b	2548c <error@@Base+0x284c>
   255e0:	mov	r0, r4
   255e4:	bl	25268 <error@@Base+0x2628>
   255e8:	cmp	r0, #0
   255ec:	mov	r9, r0
   255f0:	movne	r4, r0
   255f4:	b	2545c <error@@Base+0x281c>
   255f8:	ldr	sl, [r4, #-4]
   255fc:	mov	r0, sl
   25600:	bl	11b5c <strlen@plt>
   25604:	cmp	r0, #1
   25608:	bls	25684 <error@@Base+0x2a44>
   2560c:	sub	r1, r0, #1
   25610:	ldrb	r3, [sl, r1]
   25614:	cmp	r3, #47	; 0x2f
   25618:	beq	25634 <error@@Base+0x29f4>
   2561c:	b	25684 <error@@Base+0x2a44>
   25620:	sub	r3, r1, #1
   25624:	ldrb	r2, [sl, r3]
   25628:	cmp	r2, #47	; 0x2f
   2562c:	bne	2563c <error@@Base+0x29fc>
   25630:	mov	r1, r3
   25634:	cmp	r1, #1
   25638:	bne	25620 <error@@Base+0x29e0>
   2563c:	ldr	r3, [r6]
   25640:	mov	r0, sl
   25644:	cmp	r3, r1
   25648:	strcc	r1, [r9]
   2564c:	bl	2b9dc <error@@Base+0x8d9c>
   25650:	add	r3, r5, #1
   25654:	str	r0, [r7, r5, lsl #2]
   25658:	mov	r5, r3
   2565c:	b	25510 <error@@Base+0x28d0>
   25660:	mov	r0, #20
   25664:	movw	r6, #28248	; 0x6e58
   25668:	bl	22f44 <error@@Base+0x304>
   2566c:	movt	r6, #4
   25670:	mov	r3, sl
   25674:	mov	r5, sl
   25678:	str	sl, [r6]
   2567c:	mov	r7, r0
   25680:	b	254ac <error@@Base+0x286c>
   25684:	mov	r1, r0
   25688:	b	2563c <error@@Base+0x29fc>
   2568c:	mov	r1, r0
   25690:	b	255bc <error@@Base+0x297c>
   25694:	mov	r0, #20
   25698:	b	2540c <error@@Base+0x27cc>
   2569c:	bl	11934 <__stack_chk_fail@plt>
   256a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   256a4:	sub	sp, sp, #124	; 0x7c
   256a8:	movw	ip, #26864	; 0x68f0
   256ac:	movt	ip, #4
   256b0:	str	ip, [sp, #56]	; 0x38
   256b4:	mov	sl, r2
   256b8:	ldr	ip, [sp, #160]	; 0xa0
   256bc:	mov	r4, r3
   256c0:	str	r0, [sp, #60]	; 0x3c
   256c4:	mov	r3, #0
   256c8:	tst	ip, #16
   256cc:	ldr	ip, [sp, #56]	; 0x38
   256d0:	str	r3, [sp, #64]	; 0x40
   256d4:	movne	r5, #0
   256d8:	moveq	r5, #1
   256dc:	cmp	r1, #7
   256e0:	ldr	r2, [ip]
   256e4:	ldr	ip, [sp, #160]	; 0xa0
   256e8:	movls	r1, #8
   256ec:	str	r1, [sp, #48]	; 0x30
   256f0:	ands	ip, ip, #4
   256f4:	str	r2, [sp, #116]	; 0x74
   256f8:	str	ip, [sp, #28]
   256fc:	beq	25ce4 <error@@Base+0x30a4>
   25700:	ldr	ip, [sp, #60]	; 0x3c
   25704:	ldr	r7, [ip]
   25708:	movw	ip, #28248	; 0x6e58
   2570c:	movt	ip, #4
   25710:	str	ip, [sp, #24]
   25714:	mov	r0, r7
   25718:	bl	11b5c <strlen@plt>
   2571c:	ldr	ip, [sp, #24]
   25720:	ldr	r3, [ip, #8]
   25724:	add	r6, r0, #1
   25728:	cmp	r6, r3
   2572c:	bgt	25cb4 <error@@Base+0x3074>
   25730:	ldr	ip, [ip, #12]
   25734:	str	r7, [sp, #20]
   25738:	str	ip, [sp, #16]
   2573c:	ldr	r9, [sp, #20]
   25740:	movw	ip, #18064	; 0x4690
   25744:	add	r8, sp, #64	; 0x40
   25748:	movt	ip, #3
   2574c:	str	ip, [sp, #52]	; 0x34
   25750:	ldr	ip, [sp, #160]	; 0xa0
   25754:	and	ip, ip, #1
   25758:	str	ip, [sp, #32]
   2575c:	mov	r0, r9
   25760:	mov	r1, #0
   25764:	str	r1, [sp, #72]	; 0x48
   25768:	str	r1, [sp, #76]	; 0x4c
   2576c:	bl	23230 <error@@Base+0x5f0>
   25770:	ldrb	r3, [r0]
   25774:	mov	r6, r0
   25778:	cmp	r3, #0
   2577c:	beq	25cf0 <error@@Base+0x30b0>
   25780:	cmp	r3, sl
   25784:	beq	25cf0 <error@@Base+0x30b0>
   25788:	mov	r2, #0
   2578c:	mov	r1, sl
   25790:	str	r2, [sp]
   25794:	mov	r3, #1
   25798:	bl	23a78 <error@@Base+0xe38>
   2579c:	subs	r9, r0, #0
   257a0:	beq	25b54 <error@@Base+0x2f14>
   257a4:	ldr	ip, [sp, #32]
   257a8:	cmp	ip, #0
   257ac:	beq	259c0 <error@@Base+0x2d80>
   257b0:	cmp	r6, r9
   257b4:	beq	25ac0 <error@@Base+0x2e80>
   257b8:	rsb	r7, r6, r9
   257bc:	mov	r1, r6
   257c0:	ldr	r0, [sp, #16]
   257c4:	mov	r2, r7
   257c8:	bl	118c8 <memcpy@plt>
   257cc:	ldr	ip, [sp, #16]
   257d0:	mov	r1, #0
   257d4:	strb	r1, [ip, r7]
   257d8:	ldr	ip, [sp, #160]	; 0xa0
   257dc:	ands	r3, ip, #2
   257e0:	ldr	ip, [sp, #24]
   257e4:	ldr	r6, [ip, #12]
   257e8:	bne	257f8 <error@@Base+0x2bb8>
   257ec:	ldr	ip, [sp, #16]
   257f0:	cmp	ip, r6
   257f4:	beq	25c00 <error@@Base+0x2fc0>
   257f8:	ldr	ip, [sp, #16]
   257fc:	cmp	ip, r6
   25800:	bls	25828 <error@@Base+0x2be8>
   25804:	add	r2, ip, r7
   25808:	ldrb	r1, [r2, #-1]
   2580c:	cmp	r1, #41	; 0x29
   25810:	beq	25bc8 <error@@Base+0x2f88>
   25814:	ldr	ip, [sp, #16]
   25818:	mov	r1, #41	; 0x29
   2581c:	mov	r0, #0
   25820:	strb	r1, [ip, r7]
   25824:	strb	r0, [r2, #1]
   25828:	ldr	ip, [sp, #28]
   2582c:	cmp	ip, #0
   25830:	bne	25ae4 <error@@Base+0x2ea4>
   25834:	ldrb	r2, [r6]
   25838:	str	r6, [sp, #68]	; 0x44
   2583c:	cmp	r2, #126	; 0x7e
   25840:	beq	25bd8 <error@@Base+0x2f98>
   25844:	ldr	ip, [sp, #28]
   25848:	mov	r7, r6
   2584c:	str	ip, [sp, #20]
   25850:	cmp	r3, #0
   25854:	beq	25b24 <error@@Base+0x2ee4>
   25858:	ldr	ip, [sp, #160]	; 0xa0
   2585c:	ands	r6, ip, #8
   25860:	bne	25a50 <error@@Base+0x2e10>
   25864:	ldrb	r3, [r7]
   25868:	cmp	r3, #0
   2586c:	beq	258b4 <error@@Base+0x2c74>
   25870:	cmp	r3, #63	; 0x3f
   25874:	beq	25a50 <error@@Base+0x2e10>
   25878:	cmp	r3, #42	; 0x2a
   2587c:	beq	25a50 <error@@Base+0x2e10>
   25880:	cmp	r3, #91	; 0x5b
   25884:	beq	25a50 <error@@Base+0x2e10>
   25888:	mov	r2, r7
   2588c:	b	258a8 <error@@Base+0x2c68>
   25890:	cmp	r3, #63	; 0x3f
   25894:	beq	25a50 <error@@Base+0x2e10>
   25898:	cmp	r3, #42	; 0x2a
   2589c:	beq	25a50 <error@@Base+0x2e10>
   258a0:	cmp	r3, #91	; 0x5b
   258a4:	beq	25a50 <error@@Base+0x2e10>
   258a8:	ldrb	r3, [r2, #1]!
   258ac:	cmp	r3, #0
   258b0:	bne	25890 <error@@Base+0x2c50>
   258b4:	add	r7, sp, #68	; 0x44
   258b8:	mov	r6, #1
   258bc:	str	r3, [sp, #44]	; 0x2c
   258c0:	cmp	r6, #0
   258c4:	str	r9, [sp, #36]	; 0x24
   258c8:	add	r7, r7, r6, lsl #2
   258cc:	mov	r9, r8
   258d0:	ldr	fp, [sp, #48]	; 0x30
   258d4:	str	sl, [sp, #40]	; 0x28
   258d8:	ble	25980 <error@@Base+0x2d40>
   258dc:	ldr	r1, [sp, #76]	; 0x4c
   258e0:	cmp	r1, #0
   258e4:	beq	25a10 <error@@Base+0x2dd0>
   258e8:	ldr	r0, [r7, #-4]
   258ec:	mov	r2, fp
   258f0:	bl	1414c <__assert_fail@plt+0x241c>
   258f4:	subs	r8, r0, #0
   258f8:	beq	25a94 <error@@Base+0x2e54>
   258fc:	ldr	r3, [r9]
   25900:	cmp	r3, #0
   25904:	streq	r8, [r9]
   25908:	strne	r8, [r3]
   2590c:	b	25940 <error@@Base+0x2d00>
   25910:	cmp	r4, #0
   25914:	beq	25930 <error@@Base+0x2cf0>
   25918:	mov	r1, r4
   2591c:	ldr	r2, [sp, #68]	; 0x44
   25920:	mov	r0, #2
   25924:	bl	2300c <error@@Base+0x3cc>
   25928:	bl	2b9c0 <error@@Base+0x8d80>
   2592c:	str	r0, [r8, #4]
   25930:	ldr	r3, [r8]
   25934:	cmp	r3, #0
   25938:	beq	2596c <error@@Base+0x2d2c>
   2593c:	mov	r8, r3
   25940:	cmp	r5, #0
   25944:	bne	25910 <error@@Base+0x2cd0>
   25948:	mov	r1, r4
   2594c:	ldr	r2, [sp, #68]	; 0x44
   25950:	mov	r0, #2
   25954:	bl	2300c <error@@Base+0x3cc>
   25958:	bl	2312c <error@@Base+0x4ec>
   2595c:	ldr	r3, [r8]
   25960:	cmp	r3, #0
   25964:	str	r0, [r8, #4]
   25968:	bne	2593c <error@@Base+0x2cfc>
   2596c:	mov	r9, r8
   25970:	sub	r6, r6, #1
   25974:	sub	r7, r7, #4
   25978:	cmp	r6, #0
   2597c:	bgt	258dc <error@@Base+0x2c9c>
   25980:	mov	r8, r9
   25984:	add	r9, sp, #36	; 0x24
   25988:	ldm	r9, {r9, sl, ip}
   2598c:	cmp	ip, #0
   25990:	bne	25b64 <error@@Base+0x2f24>
   25994:	ldr	r0, [sp, #72]	; 0x48
   25998:	cmp	r0, #0
   2599c:	beq	259a4 <error@@Base+0x2d64>
   259a0:	bl	1188c <free@plt>
   259a4:	ldr	ip, [sp, #20]
   259a8:	cmp	ip, #0
   259ac:	beq	2575c <error@@Base+0x2b1c>
   259b0:	mov	r0, ip
   259b4:	bl	1188c <free@plt>
   259b8:	b	2575c <error@@Base+0x2b1c>
   259bc:	mov	r6, r2
   259c0:	rsb	r3, r6, r9
   259c4:	cmp	r3, #2
   259c8:	ble	257b0 <error@@Base+0x2b70>
   259cc:	ldrb	r3, [r6]
   259d0:	cmp	r3, #46	; 0x2e
   259d4:	bne	257b0 <error@@Base+0x2b70>
   259d8:	ldrb	r3, [r6, #1]
   259dc:	cmp	r3, #47	; 0x2f
   259e0:	bne	257b0 <error@@Base+0x2b70>
   259e4:	ldrb	r3, [r6, #2]
   259e8:	add	r2, r6, #2
   259ec:	cmp	r3, #47	; 0x2f
   259f0:	bne	259bc <error@@Base+0x2d7c>
   259f4:	add	r3, r6, #3
   259f8:	mov	r6, r3
   259fc:	add	r3, r3, #1
   25a00:	ldrb	r2, [r6]
   25a04:	cmp	r2, #47	; 0x2f
   25a08:	beq	259f8 <error@@Base+0x2db8>
   25a0c:	b	259c0 <error@@Base+0x2d80>
   25a10:	mov	r0, #2
   25a14:	mov	r1, r4
   25a18:	ldr	r2, [r7, #-4]
   25a1c:	bl	2300c <error@@Base+0x3cc>
   25a20:	mov	r8, r0
   25a24:	mov	r0, fp
   25a28:	bl	22f78 <error@@Base+0x338>
   25a2c:	cmp	r5, #0
   25a30:	mov	sl, r0
   25a34:	mov	r0, r8
   25a38:	str	sl, [r9]
   25a3c:	beq	25a8c <error@@Base+0x2e4c>
   25a40:	bl	2b9c0 <error@@Base+0x8d80>
   25a44:	str	r0, [sl, #4]
   25a48:	ldr	r9, [r9]
   25a4c:	b	25970 <error@@Base+0x2d30>
   25a50:	mov	r0, r7
   25a54:	mov	r1, #516	; 0x204
   25a58:	mov	r2, #0
   25a5c:	add	r3, sp, #80	; 0x50
   25a60:	bl	11c4c <glob64@plt>
   25a64:	cmp	r0, #1
   25a68:	beq	25ba0 <error@@Base+0x2f60>
   25a6c:	cmp	r0, #3
   25a70:	beq	25b84 <error@@Base+0x2f44>
   25a74:	cmp	r0, #0
   25a78:	beq	25b70 <error@@Base+0x2f30>
   25a7c:	mov	r6, #1
   25a80:	add	r7, sp, #68	; 0x44
   25a84:	str	r6, [sp, #44]	; 0x2c
   25a88:	b	258c0 <error@@Base+0x2c80>
   25a8c:	bl	2312c <error@@Base+0x4ec>
   25a90:	b	25a44 <error@@Base+0x2e04>
   25a94:	ldr	lr, [sp, #76]	; 0x4c
   25a98:	movw	r3, #63028	; 0xf634
   25a9c:	ldr	ip, [sp, #52]	; 0x34
   25aa0:	movt	r3, #2
   25aa4:	ldr	r2, [r7, #-4]
   25aa8:	mov	r1, r4
   25aac:	str	lr, [sp]
   25ab0:	mov	r0, #5
   25ab4:	str	ip, [sp, #4]
   25ab8:	bl	2300c <error@@Base+0x3cc>
   25abc:	b	25a20 <error@@Base+0x2de0>
   25ac0:	ldr	ip, [sp, #16]
   25ac4:	mov	r0, #46	; 0x2e
   25ac8:	mov	r3, #47	; 0x2f
   25acc:	mov	r7, #2
   25ad0:	strb	r0, [ip]
   25ad4:	mov	r0, #0
   25ad8:	strb	r3, [ip, #1]
   25adc:	strb	r0, [ip, #2]
   25ae0:	b	257d8 <error@@Base+0x2b98>
   25ae4:	mov	r2, r6
   25ae8:	mov	r1, r4
   25aec:	mov	r0, #2
   25af0:	bl	2300c <error@@Base+0x3cc>
   25af4:	mov	r7, r0
   25af8:	ldr	r0, [sp, #48]	; 0x30
   25afc:	bl	22f78 <error@@Base+0x338>
   25b00:	cmp	r5, #0
   25b04:	mov	r6, r0
   25b08:	mov	r0, r7
   25b0c:	str	r6, [r8]
   25b10:	beq	25bc0 <error@@Base+0x2f80>
   25b14:	bl	2b9c0 <error@@Base+0x8d80>
   25b18:	str	r0, [r6, #4]
   25b1c:	ldr	r8, [r8]
   25b20:	b	2575c <error@@Base+0x2b1c>
   25b24:	mov	r0, r7
   25b28:	bl	13e84 <__assert_fail@plt+0x2154>
   25b2c:	cmp	r0, #0
   25b30:	beq	25858 <error@@Base+0x2c18>
   25b34:	mov	r0, r7
   25b38:	add	r1, sp, #72	; 0x48
   25b3c:	add	r2, sp, #76	; 0x4c
   25b40:	bl	13f1c <__assert_fail@plt+0x21ec>
   25b44:	ldr	r3, [sp, #72]	; 0x48
   25b48:	mov	r7, r3
   25b4c:	str	r3, [sp, #68]	; 0x44
   25b50:	b	25858 <error@@Base+0x2c18>
   25b54:	mov	r0, r6
   25b58:	bl	11b5c <strlen@plt>
   25b5c:	add	r9, r6, r0
   25b60:	b	257a4 <error@@Base+0x2b64>
   25b64:	add	r0, sp, #80	; 0x50
   25b68:	bl	11c88 <globfree64@plt>
   25b6c:	b	25994 <error@@Base+0x2d54>
   25b70:	mov	ip, #1
   25b74:	ldr	r6, [sp, #80]	; 0x50
   25b78:	str	ip, [sp, #44]	; 0x2c
   25b7c:	ldr	r7, [sp, #84]	; 0x54
   25b80:	b	258c0 <error@@Base+0x2c80>
   25b84:	cmp	r6, #0
   25b88:	beq	25a7c <error@@Base+0x2e3c>
   25b8c:	mov	r6, #0
   25b90:	mov	ip, #1
   25b94:	mov	r7, r6
   25b98:	str	ip, [sp, #44]	; 0x2c
   25b9c:	b	258c0 <error@@Base+0x2c80>
   25ba0:	movw	r1, #14524	; 0x38bc
   25ba4:	mov	r0, #0
   25ba8:	movt	r1, #3
   25bac:	mov	r2, #5
   25bb0:	bl	1191c <dcgettext@plt>
   25bb4:	mov	r1, r0
   25bb8:	mov	r0, #0
   25bbc:	bl	22d64 <error@@Base+0x124>
   25bc0:	bl	2312c <error@@Base+0x4ec>
   25bc4:	b	25b18 <error@@Base+0x2ed8>
   25bc8:	cmp	r7, #1
   25bcc:	str	r6, [sp, #16]
   25bd0:	bne	25828 <error@@Base+0x2be8>
   25bd4:	b	2575c <error@@Base+0x2b1c>
   25bd8:	mov	r0, r6
   25bdc:	str	r3, [sp, #12]
   25be0:	bl	25268 <error@@Base+0x2628>
   25be4:	ldr	r3, [sp, #12]
   25be8:	cmp	r0, #0
   25bec:	str	r0, [sp, #20]
   25bf0:	moveq	r7, r6
   25bf4:	strne	r0, [sp, #68]	; 0x44
   25bf8:	movne	r7, r0
   25bfc:	b	25850 <error@@Base+0x2c10>
   25c00:	ldrb	r2, [ip]
   25c04:	cmp	r2, #40	; 0x28
   25c08:	beq	25cac <error@@Base+0x306c>
   25c0c:	add	r2, ip, r7
   25c10:	ldrb	r2, [r2, #-1]
   25c14:	cmp	r2, #41	; 0x29
   25c18:	beq	25cac <error@@Base+0x306c>
   25c1c:	mov	r0, ip
   25c20:	mov	r1, #40	; 0x28
   25c24:	str	r3, [sp, #12]
   25c28:	bl	11b68 <strchr@plt>
   25c2c:	ldr	r3, [sp, #12]
   25c30:	cmp	r0, #0
   25c34:	str	r0, [sp, #36]	; 0x24
   25c38:	beq	25cac <error@@Base+0x306c>
   25c3c:	str	r3, [sp, #20]
   25c40:	mov	r3, r4
   25c44:	mov	r6, r3
   25c48:	mov	r4, r9
   25c4c:	mov	r0, r4
   25c50:	bl	23230 <error@@Base+0x5f0>
   25c54:	ldrb	fp, [r0]
   25c58:	mov	r4, r0
   25c5c:	cmp	fp, #0
   25c60:	beq	25d74 <error@@Base+0x3134>
   25c64:	cmp	fp, sl
   25c68:	beq	25d44 <error@@Base+0x3104>
   25c6c:	bl	11b20 <__ctype_b_loc@plt>
   25c70:	mov	r2, r4
   25c74:	ldr	r0, [r0]
   25c78:	b	25c94 <error@@Base+0x3054>
   25c7c:	ldrb	fp, [r2, #1]
   25c80:	add	r2, r2, #1
   25c84:	cmp	fp, #0
   25c88:	beq	25d18 <error@@Base+0x30d8>
   25c8c:	cmp	fp, sl
   25c90:	beq	25d40 <error@@Base+0x3100>
   25c94:	lsl	fp, fp, #1
   25c98:	mov	r4, r2
   25c9c:	ldrh	r3, [r0, fp]
   25ca0:	tst	r3, #1
   25ca4:	beq	25c7c <error@@Base+0x303c>
   25ca8:	b	25d44 <error@@Base+0x3104>
   25cac:	ldr	r6, [sp, #16]
   25cb0:	b	25828 <error@@Base+0x2be8>
   25cb4:	ldr	ip, [sp, #24]
   25cb8:	mov	r1, r6
   25cbc:	ldr	r0, [ip, #12]
   25cc0:	bl	22fb0 <error@@Base+0x370>
   25cc4:	ldr	r1, [sp, #60]	; 0x3c
   25cc8:	ldr	ip, [sp, #24]
   25ccc:	ldr	r1, [r1]
   25cd0:	str	r6, [ip, #8]
   25cd4:	str	r1, [sp, #20]
   25cd8:	str	r0, [sp, #16]
   25cdc:	str	r0, [ip, #12]
   25ce0:	b	2573c <error@@Base+0x2afc>
   25ce4:	add	r0, sp, #80	; 0x50
   25ce8:	bl	16ae0 <__assert_fail@plt+0x4db0>
   25cec:	b	25700 <error@@Base+0x2ac0>
   25cf0:	ldr	ip, [sp, #60]	; 0x3c
   25cf4:	ldr	r2, [sp, #116]	; 0x74
   25cf8:	ldr	r0, [sp, #64]	; 0x40
   25cfc:	str	r6, [ip]
   25d00:	ldr	ip, [sp, #56]	; 0x38
   25d04:	ldr	r3, [ip]
   25d08:	cmp	r2, r3
   25d0c:	bne	25d88 <error@@Base+0x3148>
   25d10:	add	sp, sp, #124	; 0x7c
   25d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25d18:	ldr	r3, [sp, #20]
   25d1c:	mov	r4, r6
   25d20:	ldrb	r2, [r2, #-1]
   25d24:	cmp	r2, #41	; 0x29
   25d28:	beq	25d58 <error@@Base+0x3118>
   25d2c:	cmp	r7, #0
   25d30:	beq	2575c <error@@Base+0x2b1c>
   25d34:	ldr	ip, [sp, #24]
   25d38:	ldr	r6, [ip, #12]
   25d3c:	b	257f8 <error@@Base+0x2bb8>
   25d40:	mov	r4, r2
   25d44:	ldrb	r3, [r4, #-1]
   25d48:	cmp	r3, #41	; 0x29
   25d4c:	bne	25c4c <error@@Base+0x300c>
   25d50:	ldr	r3, [sp, #20]
   25d54:	mov	r4, r6
   25d58:	ldr	ip, [sp, #36]	; 0x24
   25d5c:	ldr	r2, [sp, #16]
   25d60:	add	ip, ip, #1
   25d64:	str	ip, [sp, #16]
   25d68:	rsb	r2, ip, r2
   25d6c:	add	r7, r7, r2
   25d70:	b	25d2c <error@@Base+0x30ec>
   25d74:	mov	r2, r6
   25d78:	ldr	r3, [sp, #20]
   25d7c:	mov	r4, r2
   25d80:	mov	r2, r0
   25d84:	b	25d20 <error@@Base+0x30e0>
   25d88:	bl	11934 <__stack_chk_fail@plt>
   25d8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25d90:	sub	sp, sp, #196	; 0xc4
   25d94:	movw	ip, #26864	; 0x68f0
   25d98:	movt	ip, #4
   25d9c:	str	ip, [sp, #124]	; 0x7c
   25da0:	mov	ip, #0
   25da4:	str	ip, [sp, #68]	; 0x44
   25da8:	mov	r9, r0
   25dac:	ldr	ip, [sp, #124]	; 0x7c
   25db0:	mov	r0, #200	; 0xc8
   25db4:	ldr	r3, [r9, #20]
   25db8:	movw	fp, #26740	; 0x6874
   25dbc:	str	r1, [sp, #140]	; 0x8c
   25dc0:	movt	fp, #4
   25dc4:	ldr	r2, [ip]
   25dc8:	add	ip, r9, #20
   25dcc:	str	r3, [sp, #164]	; 0xa4
   25dd0:	mov	sl, fp
   25dd4:	str	ip, [sp, #60]	; 0x3c
   25dd8:	mov	ip, #1
   25ddc:	str	r2, [sp, #188]	; 0xbc
   25de0:	str	ip, [sp, #100]	; 0x64
   25de4:	movw	ip, #29472	; 0x7320
   25de8:	movt	ip, #4
   25dec:	str	ip, [sp, #96]	; 0x60
   25df0:	movw	ip, #29536	; 0x7360
   25df4:	movt	ip, #4
   25df8:	str	ip, [sp, #128]	; 0x80
   25dfc:	movw	ip, #29700	; 0x7404
   25e00:	movt	ip, #4
   25e04:	str	ip, [sp, #132]	; 0x84
   25e08:	movw	ip, #26824	; 0x68c8
   25e0c:	movt	ip, #4
   25e10:	str	ip, [sp, #116]	; 0x74
   25e14:	mov	ip, #0
   25e18:	str	ip, [sp, #48]	; 0x30
   25e1c:	str	ip, [sp, #112]	; 0x70
   25e20:	bl	22f44 <error@@Base+0x304>
   25e24:	ldr	ip, [sp, #68]	; 0x44
   25e28:	str	ip, [sp, #40]	; 0x28
   25e2c:	mov	r7, ip
   25e30:	str	ip, [sp, #104]	; 0x68
   25e34:	str	ip, [sp, #56]	; 0x38
   25e38:	str	ip, [sp, #84]	; 0x54
   25e3c:	str	ip, [sp, #72]	; 0x48
   25e40:	str	ip, [sp, #64]	; 0x40
   25e44:	str	ip, [sp, #52]	; 0x34
   25e48:	str	ip, [sp, #44]	; 0x2c
   25e4c:	ldr	ip, [sp, #100]	; 0x64
   25e50:	str	ip, [sp, #108]	; 0x6c
   25e54:	mov	ip, #200	; 0xc8
   25e58:	str	ip, [sp, #120]	; 0x78
   25e5c:	str	r0, [sp, #88]	; 0x58
   25e60:	ldr	r3, [r9, #24]
   25e64:	mov	r0, r9
   25e68:	ldr	ip, [sp, #40]	; 0x28
   25e6c:	add	r3, r3, ip
   25e70:	str	r3, [r9, #24]
   25e74:	bl	23678 <error@@Base+0xa38>
   25e78:	cmp	r0, #0
   25e7c:	str	r0, [sp, #40]	; 0x28
   25e80:	blt	2650c <error@@Base+0x38cc>
   25e84:	ldr	r4, [r9]
   25e88:	ldrb	r6, [r4]
   25e8c:	cmp	r6, #0
   25e90:	beq	25e60 <error@@Base+0x3220>
   25e94:	mov	r0, r4
   25e98:	movw	r5, #26740	; 0x6874
   25e9c:	bl	11b5c <strlen@plt>
   25ea0:	ldrb	r3, [sl]
   25ea4:	movt	r5, #4
   25ea8:	cmp	r3, r6
   25eac:	mov	r8, r0
   25eb0:	beq	25fe8 <error@@Base+0x33a8>
   25eb4:	ldr	ip, [sp, #52]	; 0x34
   25eb8:	add	r8, r8, #1
   25ebc:	cmp	ip, r8
   25ec0:	bcs	25ee8 <error@@Base+0x32a8>
   25ec4:	ldr	ip, [sp, #44]	; 0x2c
   25ec8:	cmp	ip, #0
   25ecc:	beq	25ed8 <error@@Base+0x3298>
   25ed0:	mov	r0, ip
   25ed4:	bl	1188c <free@plt>
   25ed8:	mov	r0, r8
   25edc:	str	r8, [sp, #52]	; 0x34
   25ee0:	bl	22f44 <error@@Base+0x304>
   25ee4:	str	r0, [sp, #44]	; 0x2c
   25ee8:	mov	r1, r4
   25eec:	ldr	r0, [sp, #44]	; 0x2c
   25ef0:	bl	11a30 <strcpy@plt>
   25ef4:	ldr	r0, [sp, #44]	; 0x2c
   25ef8:	bl	23260 <error@@Base+0x620>
   25efc:	ldr	r0, [sp, #44]	; 0x2c
   25f00:	bl	23e18 <error@@Base+0x11d8>
   25f04:	bl	11b20 <__ctype_b_loc@plt>
   25f08:	ldr	r3, [sp, #44]	; 0x2c
   25f0c:	ldr	r1, [r0]
   25f10:	mov	fp, r0
   25f14:	mov	r0, r3
   25f18:	ldrb	r2, [r3], #1
   25f1c:	lsl	r2, r2, #1
   25f20:	ldrh	r2, [r1, r2]
   25f24:	tst	r2, #8192	; 0x2000
   25f28:	bne	25f14 <error@@Base+0x32d4>
   25f2c:	add	r1, sp, #152	; 0x98
   25f30:	bl	238b0 <error@@Base+0xc70>
   25f34:	ldrb	r3, [sp, #152]	; 0x98
   25f38:	tst	r3, #1
   25f3c:	mov	r8, r0
   25f40:	beq	25f74 <error@@Base+0x3334>
   25f44:	tst	r3, #16
   25f48:	moveq	ip, #2
   25f4c:	movne	ip, #5
   25f50:	str	ip, [sp, #80]	; 0x50
   25f54:	ldr	ip, [sp, #72]	; 0x48
   25f58:	cmp	ip, #0
   25f5c:	beq	260c8 <error@@Base+0x3488>
   25f60:	ldr	ip, [sp, #84]	; 0x54
   25f64:	tst	r3, #2
   25f68:	movne	ip, #1
   25f6c:	str	ip, [sp, #84]	; 0x54
   25f70:	b	25e60 <error@@Base+0x3220>
   25f74:	ldrb	r3, [r0]
   25f78:	cmp	r3, #0
   25f7c:	beq	25e60 <error@@Base+0x3220>
   25f80:	bl	231d0 <error@@Base+0x590>
   25f84:	rsb	r3, r8, r0
   25f88:	str	r0, [sp, #148]	; 0x94
   25f8c:	str	r3, [sp, #144]	; 0x90
   25f90:	bl	23230 <error@@Base+0x5f0>
   25f94:	ldr	ip, [sp, #84]	; 0x54
   25f98:	cmp	ip, #0
   25f9c:	mov	r6, r0
   25fa0:	str	r0, [sp, #148]	; 0x94
   25fa4:	beq	265ac <error@@Base+0x396c>
   25fa8:	ldr	r2, [sp, #144]	; 0x90
   25fac:	cmp	r2, #5
   25fb0:	bne	25e60 <error@@Base+0x3220>
   25fb4:	mov	r1, r8
   25fb8:	movw	r0, #15412	; 0x3c34
   25fbc:	movt	r0, #3
   25fc0:	bl	11cf4 <strncmp@plt>
   25fc4:	cmp	r0, #0
   25fc8:	bne	25e60 <error@@Base+0x3220>
   25fcc:	ldrb	r3, [r6]
   25fd0:	ldr	ip, [sp, #84]	; 0x54
   25fd4:	cmp	r3, #0
   25fd8:	cmpne	r3, #35	; 0x23
   25fdc:	moveq	ip, #0
   25fe0:	str	ip, [sp, #84]	; 0x54
   25fe4:	b	25e60 <error@@Base+0x3220>
   25fe8:	cmp	r7, #0
   25fec:	bne	25e60 <error@@Base+0x3220>
   25ff0:	ldr	ip, [sp, #56]	; 0x38
   25ff4:	cmp	ip, #0
   25ff8:	beq	25eb4 <error@@Base+0x3274>
   25ffc:	ldr	ip, [sp, #72]	; 0x48
   26000:	cmp	ip, #0
   26004:	bne	25e60 <error@@Base+0x3220>
   26008:	ldr	ip, [sp, #64]	; 0x40
   2600c:	cmp	ip, #0
   26010:	ldreq	ip, [r9, #24]
   26014:	streq	ip, [sp, #108]	; 0x6c
   26018:	ldr	ip, [sp, #64]	; 0x40
   2601c:	add	r3, r0, ip
   26020:	ldr	ip, [sp, #120]	; 0x78
   26024:	cmp	ip, r3
   26028:	bcc	26678 <error@@Base+0x3a38>
   2602c:	ldr	ip, [sp, #88]	; 0x58
   26030:	subs	r3, r8, #1
   26034:	ldr	lr, [sp, #64]	; 0x40
   26038:	add	r4, r4, #1
   2603c:	str	r4, [sp, #148]	; 0x94
   26040:	add	r1, ip, lr
   26044:	beq	260b0 <error@@Base+0x3470>
   26048:	mov	r0, lr
   2604c:	mov	r2, r4
   26050:	b	2606c <error@@Base+0x342c>
   26054:	subs	ip, r3, #1
   26058:	add	r2, r2, #1
   2605c:	str	r2, [sp, #148]	; 0x94
   26060:	beq	260ac <error@@Base+0x346c>
   26064:	mov	r8, r3
   26068:	mov	r3, ip
   2606c:	ldrb	r2, [r2]
   26070:	add	r0, r0, #1
   26074:	strb	r2, [r1], #1
   26078:	ldr	r2, [sp, #148]	; 0x94
   2607c:	ldrb	ip, [r2]
   26080:	cmp	ip, #10
   26084:	bne	26054 <error@@Base+0x3414>
   26088:	ldrb	lr, [r2, #1]
   2608c:	ldrb	ip, [sl]
   26090:	cmp	lr, ip
   26094:	subeq	r3, r8, #2
   26098:	addeq	r2, r2, #1
   2609c:	subs	ip, r3, #1
   260a0:	add	r2, r2, #1
   260a4:	str	r2, [sp, #148]	; 0x94
   260a8:	bne	26064 <error@@Base+0x3424>
   260ac:	str	r0, [sp, #64]	; 0x40
   260b0:	ldr	ip, [sp, #64]	; 0x40
   260b4:	mov	r3, #10
   260b8:	strb	r3, [r1]
   260bc:	add	ip, ip, #1
   260c0:	str	ip, [sp, #64]	; 0x40
   260c4:	b	25e60 <error@@Base+0x3220>
   260c8:	tst	r3, #4
   260cc:	bne	26470 <error@@Base+0x3830>
   260d0:	tst	r3, #2
   260d4:	beq	26454 <error@@Base+0x3814>
   260d8:	mov	r0, #100	; 0x64
   260dc:	add	ip, sp, #172	; 0xac
   260e0:	str	ip, [sp, #76]	; 0x4c
   260e4:	bl	22f44 <error@@Base+0x304>
   260e8:	ldr	ip, [sp, #60]	; 0x3c
   260ec:	mov	r6, r0
   260f0:	ldm	ip, {r0, r1}
   260f4:	ldr	ip, [sp, #76]	; 0x4c
   260f8:	stm	ip, {r0, r1}
   260fc:	mov	r0, r8
   26100:	add	r1, sp, #160	; 0xa0
   26104:	bl	2d980 <error@@Base+0xad40>
   26108:	subs	r4, r0, #0
   2610c:	moveq	r3, #2
   26110:	streq	r3, [sp, #160]	; 0xa0
   26114:	beq	26140 <error@@Base+0x3500>
   26118:	bl	23230 <error@@Base+0x5f0>
   2611c:	ldrb	r3, [r0]
   26120:	cmp	r3, #0
   26124:	bne	26694 <error@@Base+0x3a54>
   26128:	ldr	r3, [sp, #160]	; 0xa0
   2612c:	mov	r2, #0
   26130:	cmp	r3, #2
   26134:	mvnne	r3, #1
   26138:	mvneq	r3, #0
   2613c:	strb	r2, [r4, r3]
   26140:	mov	r1, #0
   26144:	mov	r0, r8
   26148:	bl	177b8 <__assert_fail@plt+0x5a88>
   2614c:	str	r0, [sp, #136]	; 0x88
   26150:	bl	23230 <error@@Base+0x5f0>
   26154:	ldrb	r3, [r0]
   26158:	str	r0, [sp, #92]	; 0x5c
   2615c:	cmp	r3, #0
   26160:	beq	268bc <error@@Base+0x3c7c>
   26164:	bl	11b5c <strlen@plt>
   26168:	ldr	r3, [sp, #92]	; 0x5c
   2616c:	sub	r0, r0, #1
   26170:	add	r1, r3, r0
   26174:	cmp	r3, r1
   26178:	bcs	261c0 <error@@Base+0x3580>
   2617c:	ldrb	r3, [r3, r0]
   26180:	ldr	r0, [fp]
   26184:	lsl	r3, r3, #1
   26188:	ldrh	r3, [r0, r3]
   2618c:	tst	r3, #1
   26190:	beq	261c0 <error@@Base+0x3580>
   26194:	sub	r3, r1, #1
   26198:	ldr	ip, [sp, #92]	; 0x5c
   2619c:	b	261b4 <error@@Base+0x3574>
   261a0:	ldrb	r2, [r3], #-1
   261a4:	lsl	r2, r2, #1
   261a8:	ldrh	r2, [r0, r2]
   261ac:	tst	r2, #1
   261b0:	beq	261c0 <error@@Base+0x3580>
   261b4:	cmp	r3, ip
   261b8:	mov	r1, r3
   261bc:	bne	261a0 <error@@Base+0x3560>
   261c0:	mov	r3, #0
   261c4:	mov	ip, #1
   261c8:	mov	r7, #100	; 0x64
   261cc:	mov	r5, r3
   261d0:	strb	r3, [r1, #1]
   261d4:	str	ip, [sp, #36]	; 0x24
   261d8:	b	261f4 <error@@Base+0x35b4>
   261dc:	add	r0, r6, r5
   261e0:	mov	r1, r4
   261e4:	mov	r5, r3
   261e8:	bl	118c8 <memcpy@plt>
   261ec:	mov	r3, #10
   261f0:	strb	r3, [r6, r8]
   261f4:	mov	r0, r9
   261f8:	bl	23678 <error@@Base+0xa38>
   261fc:	cmp	r0, #0
   26200:	blt	266b8 <error@@Base+0x3a78>
   26204:	ldr	r4, [r9]
   26208:	ldr	r3, [r9, #24]
   2620c:	add	r3, r3, r0
   26210:	mov	r0, r4
   26214:	str	r3, [r9, #24]
   26218:	bl	23260 <error@@Base+0x620>
   2621c:	ldrb	r2, [r4]
   26220:	ldrb	r3, [sl]
   26224:	cmp	r2, r3
   26228:	beq	26294 <error@@Base+0x3654>
   2622c:	mov	r0, r4
   26230:	bl	23230 <error@@Base+0x5f0>
   26234:	mov	r8, r0
   26238:	bl	11b5c <strlen@plt>
   2623c:	cmp	r0, #6
   26240:	mov	r3, r0
   26244:	beq	26264 <error@@Base+0x3624>
   26248:	bls	262d8 <error@@Base+0x3698>
   2624c:	ldrb	r2, [r8, #6]
   26250:	ldr	r1, [fp]
   26254:	lsl	r2, r2, #1
   26258:	ldrh	r2, [r1, r2]
   2625c:	tst	r2, #1
   26260:	beq	262d8 <error@@Base+0x3698>
   26264:	movw	r1, #14668	; 0x394c
   26268:	mov	r0, r8
   2626c:	movt	r1, #3
   26270:	mov	r2, #6
   26274:	str	r3, [sp, #28]
   26278:	bl	11cf4 <strncmp@plt>
   2627c:	ldr	r3, [sp, #28]
   26280:	cmp	r0, #0
   26284:	bne	262d8 <error@@Base+0x3698>
   26288:	ldr	r3, [sp, #36]	; 0x24
   2628c:	add	r3, r3, #1
   26290:	str	r3, [sp, #36]	; 0x24
   26294:	mov	r0, r4
   26298:	bl	11b5c <strlen@plt>
   2629c:	add	r8, r0, r5
   262a0:	mov	r2, r0
   262a4:	add	r3, r8, #1
   262a8:	cmp	r3, r7
   262ac:	bls	261dc <error@@Base+0x359c>
   262b0:	lsl	r7, r8, #1
   262b4:	mov	r0, r6
   262b8:	add	r1, r7, #1
   262bc:	str	r2, [sp, #32]
   262c0:	str	r3, [sp, #28]
   262c4:	bl	22fb0 <error@@Base+0x370>
   262c8:	ldr	r3, [sp, #28]
   262cc:	ldr	r2, [sp, #32]
   262d0:	mov	r6, r0
   262d4:	b	261dc <error@@Base+0x359c>
   262d8:	cmp	r3, #5
   262dc:	beq	262fc <error@@Base+0x36bc>
   262e0:	bls	26294 <error@@Base+0x3654>
   262e4:	ldrb	r3, [r8, #5]
   262e8:	ldr	r2, [fp]
   262ec:	lsl	r3, r3, #1
   262f0:	ldrh	r3, [r2, r3]
   262f4:	tst	r3, #1
   262f8:	beq	26294 <error@@Base+0x3654>
   262fc:	movw	r1, #15412	; 0x3c34
   26300:	mov	r0, r8
   26304:	movt	r1, #3
   26308:	mov	r2, #5
   2630c:	bl	11cf4 <strncmp@plt>
   26310:	subs	r3, r0, #0
   26314:	bne	26294 <error@@Base+0x3654>
   26318:	add	r8, r8, #5
   2631c:	str	r3, [sp, #28]
   26320:	mov	r0, r8
   26324:	bl	23e18 <error@@Base+0x11d8>
   26328:	mov	r0, r8
   2632c:	bl	23230 <error@@Base+0x5f0>
   26330:	ldr	r3, [sp, #28]
   26334:	ldrb	r2, [r0]
   26338:	cmp	r2, #0
   2633c:	bne	26430 <error@@Base+0x37f0>
   26340:	ldr	ip, [sp, #36]	; 0x24
   26344:	subs	ip, ip, #1
   26348:	str	ip, [sp, #36]	; 0x24
   2634c:	bne	26294 <error@@Base+0x3654>
   26350:	cmp	r5, #0
   26354:	strbeq	r5, [r6]
   26358:	addne	r5, r6, r5
   2635c:	mov	ip, #0
   26360:	ldrne	r3, [sp, #36]	; 0x24
   26364:	ldr	r1, [sp, #92]	; 0x5c
   26368:	ldr	r0, [sp, #76]	; 0x4c
   2636c:	strbne	r3, [r5, #-1]
   26370:	ldr	r2, [sp, #160]	; 0xa0
   26374:	ldr	r3, [sp, #80]	; 0x50
   26378:	stm	sp, {r2, ip}
   2637c:	mov	r2, r6
   26380:	bl	2d434 <error@@Base+0xa7f4>
   26384:	mov	r4, r0
   26388:	mov	r0, r6
   2638c:	bl	1188c <free@plt>
   26390:	ldr	r0, [sp, #136]	; 0x88
   26394:	bl	1188c <free@plt>
   26398:	cmp	r4, #0
   2639c:	beq	26a48 <error@@Base+0x3e08>
   263a0:	ldrb	r3, [sp, #152]	; 0x98
   263a4:	tst	r3, #8
   263a8:	ldrbne	r3, [r4, #23]
   263ac:	bfcne	r3, #5, #2
   263b0:	strbne	r3, [r4, #23]
   263b4:	ldrbne	r3, [sp, #152]	; 0x98
   263b8:	tst	r3, #32
   263bc:	ldrbne	r3, [r4, #20]
   263c0:	orrne	r3, r3, #128	; 0x80
   263c4:	strbne	r3, [r4, #20]
   263c8:	ldr	ip, [sp, #56]	; 0x38
   263cc:	cmp	ip, #0
   263d0:	beq	26418 <error@@Base+0x37d8>
   263d4:	ldr	ip, [sp, #108]	; 0x6c
   263d8:	add	r3, sp, #164	; 0xa4
   263dc:	ldr	r0, [sp, #56]	; 0x38
   263e0:	str	r3, [sp, #16]
   263e4:	str	ip, [sp]
   263e8:	ldr	ip, [sp, #88]	; 0x58
   263ec:	ldr	r1, [sp, #48]	; 0x30
   263f0:	ldr	r2, [sp, #68]	; 0x44
   263f4:	str	ip, [sp, #4]
   263f8:	ldr	ip, [sp, #64]	; 0x40
   263fc:	ldr	r3, [sp, #104]	; 0x68
   26400:	str	ip, [sp, #8]
   26404:	ldr	ip, [sp, #112]	; 0x70
   26408:	str	ip, [sp, #12]
   2640c:	ldr	ip, [sp, #100]	; 0x64
   26410:	str	ip, [sp, #168]	; 0xa8
   26414:	bl	24b3c <error@@Base+0x1efc>
   26418:	mov	ip, #0
   2641c:	str	ip, [sp, #48]	; 0x30
   26420:	str	ip, [sp, #56]	; 0x38
   26424:	mov	r7, ip
   26428:	str	ip, [sp, #64]	; 0x40
   2642c:	b	25e60 <error@@Base+0x3220>
   26430:	mov	r0, r3
   26434:	mov	r2, #5
   26438:	movw	r1, #15420	; 0x3c3c
   2643c:	movt	r1, #3
   26440:	bl	1191c <dcgettext@plt>
   26444:	mov	r1, r0
   26448:	ldr	r0, [sp, #60]	; 0x3c
   2644c:	bl	22c40 <error@@Base>
   26450:	b	26340 <error@@Base+0x3700>
   26454:	mov	r1, r0
   26458:	ldr	r2, [sp, #80]	; 0x50
   2645c:	ldr	r0, [sp, #60]	; 0x3c
   26460:	ldr	r3, [sp, #72]	; 0x48
   26464:	bl	2dc24 <error@@Base+0xafe4>
   26468:	mov	r4, r0
   2646c:	b	26398 <error@@Base+0x3758>
   26470:	ldr	r1, [sp, #72]	; 0x48
   26474:	bl	177b8 <__assert_fail@plt+0x5a88>
   26478:	mov	r4, r0
   2647c:	bl	23230 <error@@Base+0x5f0>
   26480:	ldrb	r3, [r0]
   26484:	mov	r5, r0
   26488:	cmp	r3, #0
   2648c:	beq	26a28 <error@@Base+0x3de8>
   26490:	bl	11b5c <strlen@plt>
   26494:	sub	r0, r0, #1
   26498:	add	ip, r5, r0
   2649c:	cmp	r5, ip
   264a0:	bcs	264e4 <error@@Base+0x38a4>
   264a4:	ldrb	r3, [r5, r0]
   264a8:	ldr	r1, [fp]
   264ac:	lsl	r3, r3, #1
   264b0:	ldrh	r3, [r1, r3]
   264b4:	tst	r3, #1
   264b8:	beq	264e4 <error@@Base+0x38a4>
   264bc:	sub	r3, ip, #1
   264c0:	b	264d8 <error@@Base+0x3898>
   264c4:	ldrb	r2, [r3], #-1
   264c8:	lsl	r2, r2, #1
   264cc:	ldrh	r2, [r1, r2]
   264d0:	tst	r2, #1
   264d4:	beq	264e4 <error@@Base+0x38a4>
   264d8:	cmp	r3, r5
   264dc:	mov	ip, r3
   264e0:	bne	264c4 <error@@Base+0x3884>
   264e4:	rsb	r1, r5, ip
   264e8:	mov	r3, #0
   264ec:	mov	r0, r5
   264f0:	ldr	r2, [sp, #80]	; 0x50
   264f4:	strb	r3, [ip, #1]
   264f8:	add	r1, r1, #1
   264fc:	bl	2c60c <error@@Base+0x99cc>
   26500:	mov	r0, r4
   26504:	bl	1188c <free@plt>
   26508:	b	263c8 <error@@Base+0x3788>
   2650c:	movw	r3, #26760	; 0x6888
   26510:	movt	r3, #4
   26514:	ldr	r3, [r3]
   26518:	ldr	r3, [r3]
   2651c:	cmp	r3, #0
   26520:	bne	26a00 <error@@Base+0x3dc0>
   26524:	ldr	ip, [sp, #56]	; 0x38
   26528:	cmp	ip, #0
   2652c:	beq	26574 <error@@Base+0x3934>
   26530:	ldr	ip, [sp, #108]	; 0x6c
   26534:	ldr	r0, [sp, #56]	; 0x38
   26538:	ldr	r1, [sp, #48]	; 0x30
   2653c:	str	ip, [sp]
   26540:	ldr	ip, [sp, #88]	; 0x58
   26544:	ldr	r2, [sp, #68]	; 0x44
   26548:	ldr	r3, [sp, #104]	; 0x68
   2654c:	str	ip, [sp, #4]
   26550:	ldr	ip, [sp, #64]	; 0x40
   26554:	str	ip, [sp, #8]
   26558:	ldr	ip, [sp, #112]	; 0x70
   2655c:	str	ip, [sp, #12]
   26560:	add	ip, sp, #164	; 0xa4
   26564:	str	ip, [sp, #16]
   26568:	ldr	ip, [sp, #100]	; 0x64
   2656c:	str	ip, [sp, #168]	; 0xa8
   26570:	bl	24b3c <error@@Base+0x1efc>
   26574:	ldr	ip, [sp, #44]	; 0x2c
   26578:	cmp	ip, #0
   2657c:	beq	26588 <error@@Base+0x3948>
   26580:	mov	r0, ip
   26584:	bl	1188c <free@plt>
   26588:	ldr	r0, [sp, #88]	; 0x58
   2658c:	bl	1188c <free@plt>
   26590:	ldr	ip, [sp, #124]	; 0x7c
   26594:	ldr	r2, [sp, #188]	; 0xbc
   26598:	ldr	r3, [ip]
   2659c:	cmp	r2, r3
   265a0:	bne	269fc <error@@Base+0x3dbc>
   265a4:	add	sp, sp, #196	; 0xc4
   265a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   265ac:	mov	r0, r8
   265b0:	ldr	r1, [sp, #144]	; 0x90
   265b4:	ldr	r2, [sp, #60]	; 0x3c
   265b8:	bl	23e48 <error@@Base+0x1208>
   265bc:	cmn	r0, #2
   265c0:	beq	265d4 <error@@Base+0x3994>
   265c4:	cmn	r0, #1
   265c8:	beq	26a68 <error@@Base+0x3e28>
   265cc:	str	r0, [sp, #72]	; 0x48
   265d0:	b	25e60 <error@@Base+0x3220>
   265d4:	ldr	ip, [sp, #72]	; 0x48
   265d8:	cmp	ip, #0
   265dc:	bne	25e60 <error@@Base+0x3220>
   265e0:	ldr	r6, [sp, #144]	; 0x90
   265e4:	cmp	r6, #6
   265e8:	beq	266d8 <error@@Base+0x3a98>
   265ec:	cmp	r6, #8
   265f0:	bne	26834 <error@@Base+0x3bf4>
   265f4:	movw	r0, #15520	; 0x3ca0
   265f8:	mov	r1, r8
   265fc:	movt	r0, #3
   26600:	mov	r2, r6
   26604:	bl	11cf4 <strncmp@plt>
   26608:	cmp	r0, #0
   2660c:	beq	266f4 <error@@Base+0x3ab4>
   26610:	mov	r2, r6
   26614:	movw	r0, #15540	; 0x3cb4
   26618:	mov	r1, r8
   2661c:	movt	r0, #3
   26620:	bl	11cf4 <strncmp@plt>
   26624:	cmp	r0, #0
   26628:	beq	26648 <error@@Base+0x3a08>
   2662c:	movw	r0, #15552	; 0x3cc0
   26630:	mov	r1, r8
   26634:	movt	r0, #3
   26638:	mov	r2, #8
   2663c:	bl	11cf4 <strncmp@plt>
   26640:	cmp	r0, #0
   26644:	bne	26744 <error@@Base+0x3b04>
   26648:	ldrb	r4, [r8]
   2664c:	mov	r1, #0
   26650:	ldr	r0, [sp, #148]	; 0x94
   26654:	subs	r4, r4, #105	; 0x69
   26658:	movne	r4, #1
   2665c:	bl	177b8 <__assert_fail@plt+0x5a88>
   26660:	ldrb	r3, [r0]
   26664:	mov	r6, r0
   26668:	cmp	r3, #0
   2666c:	bne	268dc <error@@Base+0x3c9c>
   26670:	bl	1188c <free@plt>
   26674:	b	25e60 <error@@Base+0x3220>
   26678:	lsl	r3, r3, #1
   2667c:	ldr	r0, [sp, #88]	; 0x58
   26680:	str	r3, [sp, #120]	; 0x78
   26684:	mov	r1, r3
   26688:	bl	22fb0 <error@@Base+0x370>
   2668c:	str	r0, [sp, #88]	; 0x58
   26690:	b	2602c <error@@Base+0x33ec>
   26694:	ldr	r0, [sp, #72]	; 0x48
   26698:	mov	r2, #5
   2669c:	movw	r1, #15328	; 0x3be0
   266a0:	movt	r1, #3
   266a4:	bl	1191c <dcgettext@plt>
   266a8:	mov	r1, r0
   266ac:	ldr	r0, [sp, #76]	; 0x4c
   266b0:	bl	22c40 <error@@Base>
   266b4:	b	26128 <error@@Base+0x34e8>
   266b8:	movw	r1, #15372	; 0x3c0c
   266bc:	mov	r0, #0
   266c0:	movt	r1, #3
   266c4:	mov	r2, #5
   266c8:	bl	1191c <dcgettext@plt>
   266cc:	mov	r1, r0
   266d0:	ldr	r0, [sp, #76]	; 0x4c
   266d4:	bl	22d64 <error@@Base+0x124>
   266d8:	mov	r2, r6
   266dc:	movw	r0, #7232	; 0x1c40
   266e0:	mov	r1, r8
   266e4:	movt	r0, #3
   266e8:	bl	11cf4 <strncmp@plt>
   266ec:	cmp	r0, #0
   266f0:	bne	26744 <error@@Base+0x3b04>
   266f4:	ldr	r0, [sp, #148]	; 0x94
   266f8:	ldrb	r5, [r8]
   266fc:	ldrb	r3, [r0]
   26700:	subs	r5, r5, #117	; 0x75
   26704:	movne	r5, #1
   26708:	cmp	r3, #0
   2670c:	bne	26be4 <error@@Base+0x3fa4>
   26710:	movw	r3, #29732	; 0x7424
   26714:	movt	r3, #4
   26718:	str	r5, [r3]
   2671c:	b	263c8 <error@@Base+0x3788>
   26720:	cmp	r6, #7
   26724:	bne	26744 <error@@Base+0x3b04>
   26728:	movw	r0, #15532	; 0x3cac
   2672c:	mov	r1, r8
   26730:	movt	r0, #3
   26734:	mov	r2, #7
   26738:	bl	11cf4 <strncmp@plt>
   2673c:	cmp	r0, #0
   26740:	beq	26648 <error@@Base+0x3a08>
   26744:	ldrb	r2, [r4]
   26748:	ldrb	r3, [sl]
   2674c:	cmp	r2, r3
   26750:	beq	26ca0 <error@@Base+0x4060>
   26754:	ldr	ip, [sp, #56]	; 0x38
   26758:	cmp	ip, #0
   2675c:	beq	267a4 <error@@Base+0x3b64>
   26760:	ldr	ip, [sp, #108]	; 0x6c
   26764:	add	r3, sp, #164	; 0xa4
   26768:	ldr	r0, [sp, #56]	; 0x38
   2676c:	str	r3, [sp, #16]
   26770:	str	ip, [sp]
   26774:	ldr	ip, [sp, #88]	; 0x58
   26778:	ldr	r1, [sp, #48]	; 0x30
   2677c:	ldr	r2, [sp, #68]	; 0x44
   26780:	str	ip, [sp, #4]
   26784:	ldr	ip, [sp, #64]	; 0x40
   26788:	ldr	r3, [sp, #104]	; 0x68
   2678c:	str	ip, [sp, #8]
   26790:	ldr	ip, [sp, #112]	; 0x70
   26794:	str	ip, [sp, #12]
   26798:	ldr	ip, [sp, #100]	; 0x64
   2679c:	str	ip, [sp, #168]	; 0xa8
   267a0:	bl	24b3c <error@@Base+0x1efc>
   267a4:	ldr	ip, [r9, #24]
   267a8:	mov	r3, #1
   267ac:	mov	r0, r4
   267b0:	str	r3, [sp]
   267b4:	mov	r1, #59	; 0x3b
   267b8:	mov	r2, #35	; 0x23
   267bc:	mov	r3, #0
   267c0:	str	ip, [sp, #100]	; 0x64
   267c4:	bl	23a78 <error@@Base+0xe38>
   267c8:	subs	r7, r0, #0
   267cc:	beq	267e8 <error@@Base+0x3ba8>
   267d0:	ldrb	r3, [r7]
   267d4:	cmp	r3, #35	; 0x23
   267d8:	mov	r3, #0
   267dc:	strb	r3, [r7]
   267e0:	addne	r7, r7, #1
   267e4:	moveq	r7, r3
   267e8:	mov	r0, r4
   267ec:	bl	23260 <error@@Base+0x620>
   267f0:	add	r1, sp, #156	; 0x9c
   267f4:	add	r2, sp, #144	; 0x90
   267f8:	mov	r0, r4
   267fc:	bl	246bc <error@@Base+0x1a7c>
   26800:	cmp	r0, #1
   26804:	mov	fp, r0
   26808:	beq	26bcc <error@@Base+0x3f8c>
   2680c:	bcc	26a88 <error@@Base+0x3e48>
   26810:	sub	r3, r0, #4
   26814:	cmp	r3, #1
   26818:	bhi	26a88 <error@@Base+0x3e48>
   2681c:	mov	ip, #0
   26820:	mov	r7, #1
   26824:	str	ip, [sp, #48]	; 0x30
   26828:	str	ip, [sp, #56]	; 0x38
   2682c:	str	ip, [sp, #64]	; 0x40
   26830:	b	25e60 <error@@Base+0x3220>
   26834:	cmp	r6, #5
   26838:	bne	26720 <error@@Base+0x3ae0>
   2683c:	mov	r1, r8
   26840:	mov	r2, r6
   26844:	movw	r0, #2668	; 0xa6c
   26848:	movt	r0, #3
   2684c:	bl	11cf4 <strncmp@plt>
   26850:	cmp	r0, #0
   26854:	bne	26744 <error@@Base+0x3b04>
   26858:	ldr	r0, [sp, #148]	; 0x94
   2685c:	add	ip, sp, #172	; 0xac
   26860:	str	ip, [sp, #76]	; 0x4c
   26864:	bl	17528 <__assert_fail@plt+0x57f8>
   26868:	add	r4, sp, #192	; 0xc0
   2686c:	ldr	r1, [sp, #76]	; 0x4c
   26870:	str	r0, [r4, #-32]!	; 0xffffffe0
   26874:	mov	r0, r4
   26878:	bl	2346c <error@@Base+0x82c>
   2687c:	subs	r1, r0, #0
   26880:	beq	26a20 <error@@Base+0x3de0>
   26884:	ldr	r1, [sp, #172]	; 0xac
   26888:	bl	23158 <error@@Base+0x518>
   2688c:	ldr	r1, [sp, #76]	; 0x4c
   26890:	mov	r5, r0
   26894:	mov	r0, r4
   26898:	bl	2346c <error@@Base+0x82c>
   2689c:	mov	r1, r0
   268a0:	mov	r0, r5
   268a4:	bl	2e0f4 <error@@Base+0xb4b4>
   268a8:	cmp	r5, #0
   268ac:	beq	263c8 <error@@Base+0x3788>
   268b0:	mov	r0, r5
   268b4:	bl	1188c <free@plt>
   268b8:	b	263c8 <error@@Base+0x3788>
   268bc:	mov	r0, r3
   268c0:	movw	r1, #15308	; 0x3bcc
   268c4:	mov	r2, #5
   268c8:	movt	r1, #3
   268cc:	bl	1191c <dcgettext@plt>
   268d0:	mov	r1, r0
   268d4:	ldr	r0, [sp, #76]	; 0x4c
   268d8:	bl	22d64 <error@@Base+0x124>
   268dc:	add	r0, sp, #192	; 0xc0
   268e0:	mov	r2, #0
   268e4:	mov	r3, r2
   268e8:	mov	r1, #2
   268ec:	str	r6, [r0, #-44]!	; 0xffffffd4
   268f0:	str	r1, [sp]
   268f4:	mov	r1, #8
   268f8:	bl	256a0 <error@@Base+0x2a60>
   268fc:	mov	r5, r0
   26900:	mov	r0, r6
   26904:	bl	1188c <free@plt>
   26908:	ldr	ip, [sp, #56]	; 0x38
   2690c:	movw	r2, #26760	; 0x6888
   26910:	movt	r2, #4
   26914:	cmp	ip, #0
   26918:	mov	r3, #0
   2691c:	add	ip, sp, #172	; 0xac
   26920:	ldr	r7, [r2]
   26924:	str	r3, [sp, #172]	; 0xac
   26928:	str	ip, [r2]
   2692c:	str	r3, [sp, #176]	; 0xb0
   26930:	str	r3, [sp, #180]	; 0xb4
   26934:	str	r3, [sp, #184]	; 0xb8
   26938:	beq	26980 <error@@Base+0x3d40>
   2693c:	ldr	ip, [sp, #108]	; 0x6c
   26940:	add	r3, sp, #164	; 0xa4
   26944:	ldr	r0, [sp, #56]	; 0x38
   26948:	str	r3, [sp, #16]
   2694c:	str	ip, [sp]
   26950:	ldr	ip, [sp, #88]	; 0x58
   26954:	ldr	r1, [sp, #48]	; 0x30
   26958:	ldr	r2, [sp, #68]	; 0x44
   2695c:	str	ip, [sp, #4]
   26960:	ldr	ip, [sp, #64]	; 0x40
   26964:	ldr	r3, [sp, #104]	; 0x68
   26968:	str	ip, [sp, #8]
   2696c:	ldr	ip, [sp, #112]	; 0x70
   26970:	str	ip, [sp, #12]
   26974:	ldr	ip, [sp, #100]	; 0x64
   26978:	str	ip, [sp, #168]	; 0xa8
   2697c:	bl	24b3c <error@@Base+0x1efc>
   26980:	cmp	r5, #0
   26984:	beq	269f0 <error@@Base+0x3db0>
   26988:	cmp	r4, #0
   2698c:	ldr	ip, [sp, #140]	; 0x8c
   26990:	movne	r8, #14
   26994:	moveq	r8, #10
   26998:	cmp	ip, #0
   2699c:	orreq	r8, r8, #1
   269a0:	ldr	r6, [r5, #4]
   269a4:	mov	r0, r5
   269a8:	ldr	r5, [r5]
   269ac:	bl	1188c <free@plt>
   269b0:	mov	r1, r8
   269b4:	mov	r0, r6
   269b8:	bl	27594 <error@@Base+0x4954>
   269bc:	orrs	r0, r0, r4
   269c0:	bne	269e8 <error@@Base+0x3da8>
   269c4:	bl	11b8c <__errno_location@plt>
   269c8:	ldr	r0, [r0]
   269cc:	bl	11acc <strerror@plt>
   269d0:	movw	r1, #14516	; 0x38b4
   269d4:	mov	r2, r6
   269d8:	movt	r1, #3
   269dc:	mov	r3, r0
   269e0:	ldr	r0, [sp, #60]	; 0x3c
   269e4:	bl	22c40 <error@@Base>
   269e8:	cmp	r5, #0
   269ec:	bne	269a0 <error@@Base+0x3d60>
   269f0:	mov	r0, r7
   269f4:	bl	2363c <error@@Base+0x9fc>
   269f8:	b	26418 <error@@Base+0x37d8>
   269fc:	bl	11934 <__stack_chk_fail@plt>
   26a00:	movw	r1, #15860	; 0x3df4
   26a04:	movt	r1, #3
   26a08:	mov	r0, #0
   26a0c:	mov	r2, #5
   26a10:	bl	1191c <dcgettext@plt>
   26a14:	mov	r1, r0
   26a18:	ldr	r0, [sp, #60]	; 0x3c
   26a1c:	bl	22d64 <error@@Base+0x124>
   26a20:	bl	2e0f4 <error@@Base+0xb4b4>
   26a24:	b	263c8 <error@@Base+0x3788>
   26a28:	ldr	r0, [sp, #72]	; 0x48
   26a2c:	movw	r1, #15308	; 0x3bcc
   26a30:	mov	r2, #5
   26a34:	movt	r1, #3
   26a38:	bl	1191c <dcgettext@plt>
   26a3c:	mov	r1, r0
   26a40:	ldr	r0, [sp, #60]	; 0x3c
   26a44:	bl	22d64 <error@@Base+0x124>
   26a48:	movw	r0, #15460	; 0x3c64
   26a4c:	movw	r1, #15480	; 0x3c78
   26a50:	movw	r3, #14580	; 0x38f4
   26a54:	movt	r0, #3
   26a58:	movt	r1, #3
   26a5c:	mov	r2, #724	; 0x2d4
   26a60:	movt	r3, #3
   26a64:	bl	11d30 <__assert_fail@plt>
   26a68:	ldr	r0, [sp, #84]	; 0x54
   26a6c:	movw	r1, #15488	; 0x3c80
   26a70:	mov	r2, #5
   26a74:	movt	r1, #3
   26a78:	bl	1191c <dcgettext@plt>
   26a7c:	mov	r1, r0
   26a80:	ldr	r0, [sp, #60]	; 0x3c
   26a84:	bl	22d64 <error@@Base+0x124>
   26a88:	mov	r0, #0
   26a8c:	ldr	r1, [sp, #156]	; 0x9c
   26a90:	ldr	r2, [sp, #144]	; 0x90
   26a94:	mov	r6, r7
   26a98:	bl	16dd0 <__assert_fail@plt+0x50a0>
   26a9c:	str	r4, [sp, #36]	; 0x24
   26aa0:	mov	r3, r0
   26aa4:	str	r0, [sp, #148]	; 0x94
   26aa8:	b	26b24 <error@@Base+0x3ee4>
   26aac:	mov	r8, #0
   26ab0:	mov	r0, r3
   26ab4:	str	r8, [sp]
   26ab8:	mov	r2, r8
   26abc:	mov	r3, r8
   26ac0:	mov	r1, #58	; 0x3a
   26ac4:	bl	23a78 <error@@Base+0xe38>
   26ac8:	cmp	r0, #0
   26acc:	bne	26ce4 <error@@Base+0x40a4>
   26ad0:	ldr	r0, [sp, #156]	; 0x9c
   26ad4:	add	r1, sp, #156	; 0x9c
   26ad8:	add	r2, sp, #144	; 0x90
   26adc:	bl	246bc <error@@Base+0x1a7c>
   26ae0:	cmp	r0, #1
   26ae4:	mov	fp, r0
   26ae8:	beq	26cb0 <error@@Base+0x4070>
   26aec:	ldr	r8, [sp, #148]	; 0x94
   26af0:	mov	r0, r8
   26af4:	bl	11b5c <strlen@plt>
   26af8:	mov	r2, #32
   26afc:	add	r3, r8, r0
   26b00:	add	r3, r3, #1
   26b04:	str	r3, [sp, #148]	; 0x94
   26b08:	strb	r2, [r8, r0]
   26b0c:	ldr	r0, [sp, #148]	; 0x94
   26b10:	ldr	r1, [sp, #156]	; 0x9c
   26b14:	ldr	r2, [sp, #144]	; 0x90
   26b18:	bl	16dd0 <__assert_fail@plt+0x50a0>
   26b1c:	mov	r3, r0
   26b20:	str	r0, [sp, #148]	; 0x94
   26b24:	ldr	r1, [sp, #156]	; 0x9c
   26b28:	cmp	r6, #0
   26b2c:	ldr	r2, [sp, #144]	; 0x90
   26b30:	add	r2, r1, r2
   26b34:	str	r2, [sp, #156]	; 0x9c
   26b38:	bne	26aac <error@@Base+0x3e6c>
   26b3c:	mov	r0, r3
   26b40:	str	r6, [sp]
   26b44:	mov	r3, r6
   26b48:	mov	r2, r6
   26b4c:	mov	r1, #59	; 0x3b
   26b50:	mov	r8, r6
   26b54:	bl	23a78 <error@@Base+0xe38>
   26b58:	subs	r6, r0, #0
   26b5c:	ldreq	r3, [sp, #148]	; 0x94
   26b60:	beq	26aac <error@@Base+0x3e6c>
   26b64:	ldr	lr, [sp, #96]	; 0x60
   26b68:	ldr	r4, [sp, #148]	; 0x94
   26b6c:	ldr	ip, [lr]
   26b70:	mov	r0, r4
   26b74:	str	ip, [sp, #32]
   26b78:	bl	11b5c <strlen@plt>
   26b7c:	strb	r8, [r6]
   26b80:	mvn	r2, #0
   26b84:	ldr	r1, [sp, #156]	; 0x9c
   26b88:	add	r0, r4, r0
   26b8c:	bl	16dd0 <__assert_fail@plt+0x50a0>
   26b90:	ldr	r8, [sp, #156]	; 0x9c
   26b94:	mov	r0, r8
   26b98:	bl	11b5c <strlen@plt>
   26b9c:	ldr	r1, [sp, #96]	; 0x60
   26ba0:	ldr	ip, [sp, #32]
   26ba4:	ldr	r2, [r1]
   26ba8:	rsb	r6, ip, r6
   26bac:	rsb	r3, ip, r4
   26bb0:	add	r6, r6, #1
   26bb4:	add	r3, r2, r3
   26bb8:	add	r6, r2, r6
   26bbc:	str	r3, [sp, #148]	; 0x94
   26bc0:	add	r0, r8, r0
   26bc4:	str	r0, [sp, #156]	; 0x9c
   26bc8:	b	26aac <error@@Base+0x3e6c>
   26bcc:	cmp	r7, #0
   26bd0:	bne	26c84 <error@@Base+0x4044>
   26bd4:	str	r7, [sp, #48]	; 0x30
   26bd8:	str	r7, [sp, #56]	; 0x38
   26bdc:	str	r7, [sp, #64]	; 0x40
   26be0:	b	25e60 <error@@Base+0x3220>
   26be4:	mov	r1, #0
   26be8:	bl	177b8 <__assert_fail@plt+0x5a88>
   26bec:	add	ip, sp, #192	; 0xc0
   26bf0:	add	r1, sp, #160	; 0xa0
   26bf4:	str	r0, [ip, #-20]!	; 0xffffffec
   26bf8:	mov	r4, r0
   26bfc:	mov	r0, ip
   26c00:	str	ip, [sp, #76]	; 0x4c
   26c04:	bl	2346c <error@@Base+0x82c>
   26c08:	subs	r6, r0, #0
   26c0c:	eorne	r5, r5, #1
   26c10:	ldrne	r7, [sp, #116]	; 0x74
   26c14:	bne	26c3c <error@@Base+0x3ffc>
   26c18:	b	26c94 <error@@Base+0x4054>
   26c1c:	ldrb	r2, [r3, #23]
   26c20:	add	r1, sp, #160	; 0xa0
   26c24:	ldr	r0, [sp, #76]	; 0x4c
   26c28:	bfi	r2, r5, #5, #2
   26c2c:	strb	r2, [r3, #23]
   26c30:	bl	2346c <error@@Base+0x82c>
   26c34:	subs	r6, r0, #0
   26c38:	beq	26c94 <error@@Base+0x4054>
   26c3c:	mov	r0, r6
   26c40:	ldr	r1, [sp, #160]	; 0xa0
   26c44:	bl	2c6f8 <error@@Base+0x9ab8>
   26c48:	subs	r3, r0, #0
   26c4c:	bne	26c1c <error@@Base+0x3fdc>
   26c50:	ldr	ip, [r7]
   26c54:	mov	r0, r6
   26c58:	str	r3, [sp]
   26c5c:	movw	r2, #6032	; 0x1790
   26c60:	ldr	lr, [sp, #60]	; 0x3c
   26c64:	mov	r3, #2
   26c68:	ldr	ip, [ip, #4]
   26c6c:	movt	r2, #3
   26c70:	ldr	r1, [sp, #160]	; 0xa0
   26c74:	stmib	sp, {ip, lr}
   26c78:	bl	2c3b8 <error@@Base+0x9778>
   26c7c:	mov	r3, r0
   26c80:	b	26c1c <error@@Base+0x3fdc>
   26c84:	movw	r1, #15604	; 0x3cf4
   26c88:	mov	r0, #0
   26c8c:	movt	r1, #3
   26c90:	b	26a0c <error@@Base+0x3dcc>
   26c94:	mov	r0, r4
   26c98:	bl	1188c <free@plt>
   26c9c:	b	263c8 <error@@Base+0x3788>
   26ca0:	movw	r1, #15564	; 0x3ccc
   26ca4:	mov	r0, #0
   26ca8:	movt	r1, #3
   26cac:	b	26a0c <error@@Base+0x3dcc>
   26cb0:	ldr	ip, [sp, #96]	; 0x60
   26cb4:	ldr	r4, [sp, #36]	; 0x24
   26cb8:	ldr	r0, [ip]
   26cbc:	bl	23230 <error@@Base+0x5f0>
   26cc0:	str	r0, [sp, #148]	; 0x94
   26cc4:	ldrb	r3, [r0]
   26cc8:	cmp	r3, #0
   26ccc:	bne	27520 <error@@Base+0x48e0>
   26cd0:	str	r3, [sp, #48]	; 0x30
   26cd4:	mov	r7, r3
   26cd8:	str	r3, [sp, #56]	; 0x38
   26cdc:	str	r3, [sp, #64]	; 0x40
   26ce0:	b	25e60 <error@@Base+0x3220>
   26ce4:	ldr	ip, [sp, #96]	; 0x60
   26ce8:	mov	r3, r0
   26cec:	ldr	r4, [sp, #36]	; 0x24
   26cf0:	str	r6, [sp, #36]	; 0x24
   26cf4:	ldr	r0, [ip]
   26cf8:	str	r3, [sp, #28]
   26cfc:	bl	23230 <error@@Base+0x5f0>
   26d00:	cmp	fp, #1
   26d04:	ldr	r3, [sp, #28]
   26d08:	str	r0, [sp, #148]	; 0x94
   26d0c:	beq	26cc4 <error@@Base+0x4084>
   26d10:	strb	r8, [r3]
   26d14:	mov	r2, r8
   26d18:	mov	r3, r8
   26d1c:	str	r8, [sp]
   26d20:	add	r0, sp, #148	; 0x94
   26d24:	mov	r1, #8
   26d28:	bl	256a0 <error@@Base+0x2a60>
   26d2c:	ldr	r3, [sp, #148]	; 0x94
   26d30:	mov	r2, #58	; 0x3a
   26d34:	strb	r2, [r3]
   26d38:	cmp	r0, #0
   26d3c:	str	r0, [sp, #56]	; 0x38
   26d40:	beq	2750c <error@@Base+0x48cc>
   26d44:	ldr	r3, [sp, #148]	; 0x94
   26d48:	ldrb	r2, [r3]
   26d4c:	cmp	r2, #0
   26d50:	beq	274ec <error@@Base+0x48ac>
   26d54:	add	r4, r3, #1
   26d58:	str	r4, [sp, #148]	; 0x94
   26d5c:	ldrb	r2, [r3, #1]
   26d60:	ldr	fp, [sp, #156]	; 0x9c
   26d64:	subs	r1, r2, #58	; 0x3a
   26d68:	rsbs	r2, r1, #0
   26d6c:	adcs	r2, r2, r1
   26d70:	str	r2, [sp, #112]	; 0x70
   26d74:	cmp	r2, #0
   26d78:	addne	r3, r3, #2
   26d7c:	strne	r3, [sp, #148]	; 0x94
   26d80:	ldrb	r5, [fp]
   26d84:	movne	r4, r3
   26d88:	cmp	r5, #0
   26d8c:	beq	26dd0 <error@@Base+0x4190>
   26d90:	ldr	ip, [sp, #96]	; 0x60
   26d94:	mov	r0, r4
   26d98:	ldr	r3, [ip]
   26d9c:	rsb	r8, r3, r4
   26da0:	bl	11b5c <strlen@plt>
   26da4:	mov	r5, r0
   26da8:	mov	r0, fp
   26dac:	bl	11b5c <strlen@plt>
   26db0:	mov	r1, fp
   26db4:	add	r2, r0, #1
   26db8:	add	r0, r4, r5
   26dbc:	bl	16bc4 <__assert_fail@plt+0x4e94>
   26dc0:	ldr	ip, [sp, #96]	; 0x60
   26dc4:	ldr	r4, [ip]
   26dc8:	add	r4, r4, r8
   26dcc:	str	r4, [sp, #148]	; 0x94
   26dd0:	mov	r0, r4
   26dd4:	add	r1, sp, #152	; 0x98
   26dd8:	bl	238b0 <error@@Base+0xc70>
   26ddc:	ldrb	r3, [sp, #152]	; 0x98
   26de0:	ands	r1, r3, #1
   26de4:	mov	r4, r0
   26de8:	str	r0, [sp, #148]	; 0x94
   26dec:	beq	26ff4 <error@@Base+0x43b4>
   26df0:	cmp	r7, #0
   26df4:	beq	26e3c <error@@Base+0x41fc>
   26df8:	sub	r4, r7, #1
   26dfc:	mov	r3, #59	; 0x3b
   26e00:	strb	r3, [r7, #-1]
   26e04:	mov	r0, r4
   26e08:	bl	23260 <error@@Base+0x620>
   26e0c:	ldr	r5, [sp, #148]	; 0x94
   26e10:	mov	r0, r5
   26e14:	bl	11b5c <strlen@plt>
   26e18:	mov	r6, r0
   26e1c:	mov	r0, r4
   26e20:	bl	11b5c <strlen@plt>
   26e24:	mov	r1, r4
   26e28:	add	r2, r0, #1
   26e2c:	add	r0, r5, r6
   26e30:	bl	16bc4 <__assert_fail@plt+0x4e94>
   26e34:	ldr	r4, [sp, #148]	; 0x94
   26e38:	ldrb	r3, [sp, #152]	; 0x98
   26e3c:	ldr	ip, [sp, #116]	; 0x74
   26e40:	tst	r3, #16
   26e44:	ldr	r0, [sp, #56]	; 0x38
   26e48:	moveq	r5, #2
   26e4c:	movne	r5, #5
   26e50:	ldr	r6, [ip]
   26e54:	add	ip, sp, #172	; 0xac
   26e58:	mov	r7, r0
   26e5c:	str	ip, [sp, #76]	; 0x4c
   26e60:	b	26ef0 <error@@Base+0x42b0>
   26e64:	bl	2312c <error@@Base+0x4ec>
   26e68:	str	r0, [r8, #8]
   26e6c:	ldrb	r1, [sp, #152]	; 0x98
   26e70:	ldrb	r2, [r8, #23]
   26e74:	eor	ip, r1, #8
   26e78:	ubfx	r0, r1, #5, #1
   26e7c:	sbfx	ip, ip, #3, #1
   26e80:	ldrb	r1, [r8, #20]
   26e84:	bfi	r2, ip, #5, #2
   26e88:	strb	r2, [r8, #23]
   26e8c:	ubfx	r2, r2, #2, #3
   26e90:	orr	r1, r1, #8
   26e94:	cmp	r2, #5
   26e98:	bfi	r1, r0, #7, #1
   26e9c:	strb	r1, [r8, #20]
   26ea0:	beq	26ee4 <error@@Base+0x42a4>
   26ea4:	ldr	fp, [r8]
   26ea8:	mov	r0, fp
   26eac:	bl	11b5c <strlen@plt>
   26eb0:	mov	r1, r0
   26eb4:	mov	r0, fp
   26eb8:	bl	2c6f8 <error@@Base+0x9ab8>
   26ebc:	cmp	r8, r0
   26ec0:	cmpne	r0, #0
   26ec4:	mov	fp, r0
   26ec8:	beq	26ee4 <error@@Base+0x42a4>
   26ecc:	ldrb	r1, [r0, #23]
   26ed0:	ubfx	r1, r1, #2, #3
   26ed4:	add	r1, r1, #5
   26ed8:	and	r1, r1, #7
   26edc:	cmp	r1, #1
   26ee0:	bls	272b8 <error@@Base+0x4678>
   26ee4:	cmp	r7, #0
   26ee8:	beq	26f70 <error@@Base+0x4330>
   26eec:	mov	r0, r7
   26ef0:	ldr	r3, [r7, #4]
   26ef4:	str	r3, [sp, #172]	; 0xac
   26ef8:	ldr	r7, [r7]
   26efc:	bl	1188c <free@plt>
   26f00:	ldr	r0, [sp, #76]	; 0x4c
   26f04:	bl	24984 <error@@Base+0x1d44>
   26f08:	subs	r1, r0, #0
   26f0c:	ldr	r0, [sp, #172]	; 0xac
   26f10:	beq	26f9c <error@@Base+0x435c>
   26f14:	bl	2c2b0 <error@@Base+0x9670>
   26f18:	ldr	ip, [sp, #60]	; 0x3c
   26f1c:	mov	r3, r0
   26f20:	ldm	ip, {r0, r1}
   26f24:	add	r2, r3, #28
   26f28:	stm	r2, {r0, r1}
   26f2c:	add	r0, r3, #16
   26f30:	mov	r1, r4
   26f34:	bl	2daf8 <error@@Base+0xaeb8>
   26f38:	subs	r8, r0, #0
   26f3c:	beq	26f80 <error@@Base+0x4340>
   26f40:	ldrb	r2, [r8, #23]
   26f44:	ldr	r0, [r8, #8]
   26f48:	bfi	r2, r5, #2, #3
   26f4c:	strb	r2, [r8, #23]
   26f50:	ldrh	r2, [r8, #22]
   26f54:	ubfx	r2, r2, #7, #3
   26f58:	cmp	r2, #1
   26f5c:	bne	26e64 <error@@Base+0x4224>
   26f60:	mov	r1, #0
   26f64:	bl	177b8 <__assert_fail@plt+0x5a88>
   26f68:	str	r0, [r8, #8]
   26f6c:	b	26e6c <error@@Base+0x422c>
   26f70:	str	r7, [sp, #56]	; 0x38
   26f74:	str	r7, [sp, #48]	; 0x30
   26f78:	str	r7, [sp, #64]	; 0x40
   26f7c:	b	25e60 <error@@Base+0x3220>
   26f80:	movw	r0, #15720	; 0x3d68
   26f84:	movw	r1, #15480	; 0x3c78
   26f88:	movt	r0, #3
   26f8c:	movt	r1, #3
   26f90:	movw	r2, #1767	; 0x6e7
   26f94:	ldr	r3, [pc, #1524]	; 27590 <error@@Base+0x4950>
   26f98:	bl	11d30 <__assert_fail@plt>
   26f9c:	bl	17ae8 <__assert_fail@plt+0x5db8>
   26fa0:	cmp	r0, #0
   26fa4:	beq	274d8 <error@@Base+0x4898>
   26fa8:	ldr	r8, [r0, #72]	; 0x48
   26fac:	cmp	r8, #0
   26fb0:	moveq	r8, r0
   26fb4:	mov	r0, r8
   26fb8:	mov	r1, #1
   26fbc:	bl	2d750 <error@@Base+0xab10>
   26fc0:	ldr	ip, [r8, #60]	; 0x3c
   26fc4:	ldr	lr, [sp, #116]	; 0x74
   26fc8:	mov	r1, r4
   26fcc:	ldr	r0, [sp, #60]	; 0x3c
   26fd0:	mov	r2, r5
   26fd4:	mov	r3, #1
   26fd8:	str	ip, [lr]
   26fdc:	bl	2dc24 <error@@Base+0xafe4>
   26fe0:	subs	r8, r0, #0
   26fe4:	beq	274bc <error@@Base+0x487c>
   26fe8:	ldr	ip, [sp, #116]	; 0x74
   26fec:	str	r6, [ip]
   26ff0:	b	26e6c <error@@Base+0x422c>
   26ff4:	mov	r3, r1
   26ff8:	mov	r2, r1
   26ffc:	str	r1, [sp]
   27000:	mov	r1, #61	; 0x3d
   27004:	ldr	r0, [sp, #156]	; 0x9c
   27008:	bl	23a78 <error@@Base+0xe38>
   2700c:	ldr	r1, [sp, #156]	; 0x9c
   27010:	ldrb	r3, [r1]
   27014:	cmp	r3, #0
   27018:	bne	27414 <error@@Base+0x47d4>
   2701c:	ldr	r4, [sp, #148]	; 0x94
   27020:	mov	r0, r4
   27024:	mov	r1, #58	; 0x3a
   27028:	bl	11b68 <strchr@plt>
   2702c:	cmp	r0, #0
   27030:	beq	27074 <error@@Base+0x4434>
   27034:	ldrb	r3, [r0, #-1]
   27038:	cmp	r3, #92	; 0x5c
   2703c:	bne	273ac <error@@Base+0x476c>
   27040:	sub	r3, r0, #2
   27044:	mov	r2, #0
   27048:	ldrb	r1, [r3], #-1
   2704c:	eor	r2, r2, #1
   27050:	cmp	r1, #92	; 0x5c
   27054:	beq	27048 <error@@Base+0x4408>
   27058:	cmp	r2, #0
   2705c:	beq	273ac <error@@Base+0x476c>
   27060:	add	r0, r0, #1
   27064:	mov	r1, #58	; 0x3a
   27068:	bl	11b68 <strchr@plt>
   2706c:	cmp	r0, #0
   27070:	bne	27034 <error@@Base+0x43f4>
   27074:	str	r0, [sp, #48]	; 0x30
   27078:	mov	r0, r4
   2707c:	str	r4, [sp, #172]	; 0xac
   27080:	bl	11b5c <strlen@plt>
   27084:	add	r1, sp, #160	; 0xa0
   27088:	sub	r3, r0, #1
   2708c:	add	r0, sp, #172	; 0xac
   27090:	add	r4, r4, r3
   27094:	str	r4, [sp, #160]	; 0xa0
   27098:	bl	1c2f4 <__assert_fail@plt+0xa5c4>
   2709c:	ldr	r0, [sp, #172]	; 0xac
   270a0:	ldr	r2, [sp, #160]	; 0xa0
   270a4:	cmp	r0, r2
   270a8:	movhi	ip, #0
   270ac:	strhi	ip, [sp, #104]	; 0x68
   270b0:	bhi	270d4 <error@@Base+0x4494>
   270b4:	ldrb	r3, [r0]
   270b8:	cmp	r3, #0
   270bc:	streq	r3, [sp, #104]	; 0x68
   270c0:	beq	270d4 <error@@Base+0x4494>
   270c4:	rsb	r1, r0, r2
   270c8:	add	r1, r1, #1
   270cc:	bl	23158 <error@@Base+0x518>
   270d0:	str	r0, [sp, #104]	; 0x68
   270d4:	cmp	r6, #0
   270d8:	streq	r6, [sp, #64]	; 0x40
   270dc:	beq	27140 <error@@Base+0x4500>
   270e0:	mov	r0, r6
   270e4:	bl	11b5c <strlen@plt>
   270e8:	ldr	ip, [r9, #24]
   270ec:	str	ip, [sp, #108]	; 0x6c
   270f0:	ldr	ip, [sp, #120]	; 0x78
   270f4:	add	r3, r0, #2
   270f8:	mov	r4, r0
   270fc:	cmp	ip, r3
   27100:	bcs	2711c <error@@Base+0x44dc>
   27104:	lsl	r3, r3, #1
   27108:	ldr	r0, [sp, #88]	; 0x58
   2710c:	str	r3, [sp, #120]	; 0x78
   27110:	mov	r1, r3
   27114:	bl	22fb0 <error@@Base+0x370>
   27118:	str	r0, [sp, #88]	; 0x58
   2711c:	mov	r1, r6
   27120:	ldr	r0, [sp, #88]	; 0x58
   27124:	mov	r2, r4
   27128:	add	ip, r4, #1
   2712c:	str	ip, [sp, #64]	; 0x40
   27130:	bl	118c8 <memcpy@plt>
   27134:	ldr	ip, [sp, #88]	; 0x58
   27138:	mov	r3, #10
   2713c:	strb	r3, [ip, r4]
   27140:	ldr	ip, [sp, #140]	; 0x8c
   27144:	cmp	ip, #0
   27148:	beq	272b0 <error@@Base+0x4670>
   2714c:	ldr	ip, [sp, #128]	; 0x80
   27150:	ldr	r3, [ip]
   27154:	ldr	r3, [r3, #8]
   27158:	ldrb	r3, [r3]
   2715c:	cmp	r3, #0
   27160:	bne	272b0 <error@@Base+0x4670>
   27164:	ldr	r3, [sp, #132]	; 0x84
   27168:	ldr	fp, [sp, #56]	; 0x38
   2716c:	str	r9, [sp, #36]	; 0x24
   27170:	ldr	r3, [r3]
   27174:	str	sl, [sp, #76]	; 0x4c
   27178:	str	r3, [sp, #92]	; 0x5c
   2717c:	ldr	r8, [fp, #4]
   27180:	mov	r1, #37	; 0x25
   27184:	mov	r0, r8
   27188:	bl	11b68 <strchr@plt>
   2718c:	cmp	r0, #0
   27190:	bne	272a8 <error@@Base+0x4668>
   27194:	ldrb	r7, [r8]
   27198:	cmp	r7, #46	; 0x2e
   2719c:	beq	27344 <error@@Base+0x4704>
   271a0:	ldr	ip, [sp, #92]	; 0x5c
   271a4:	ldr	ip, [ip, #12]
   271a8:	cmp	ip, #0
   271ac:	str	ip, [sp, #80]	; 0x50
   271b0:	beq	27310 <error@@Base+0x46d0>
   271b4:	mov	r5, ip
   271b8:	add	r3, r8, #1
   271bc:	str	r3, [sp, #136]	; 0x88
   271c0:	ldr	r6, [r5, #4]
   271c4:	cmp	r6, #0
   271c8:	beq	2738c <error@@Base+0x474c>
   271cc:	ldrb	r3, [r6]
   271d0:	cmp	r3, #46	; 0x2e
   271d4:	beq	271e8 <error@@Base+0x45a8>
   271d8:	cmp	r8, r6
   271dc:	beq	2729c <error@@Base+0x465c>
   271e0:	cmp	r7, r3
   271e4:	beq	2735c <error@@Base+0x471c>
   271e8:	ldr	r4, [sp, #80]	; 0x50
   271ec:	b	271fc <error@@Base+0x45bc>
   271f0:	ldr	r4, [r4]
   271f4:	cmp	r4, #0
   271f8:	beq	27304 <error@@Base+0x46c4>
   271fc:	ldr	r9, [r4, #4]
   27200:	cmp	r9, #0
   27204:	ldreq	r3, [r4, #12]
   27208:	ldreq	r9, [r3]
   2720c:	mov	r0, r9
   27210:	bl	11b5c <strlen@plt>
   27214:	mov	r1, r9
   27218:	mov	sl, r0
   2721c:	mov	r0, r8
   27220:	mov	r2, sl
   27224:	bl	11cf4 <strncmp@plt>
   27228:	cmp	r0, #0
   2722c:	bne	271f0 <error@@Base+0x45b0>
   27230:	cmp	r6, #0
   27234:	add	r3, r8, sl
   27238:	ldreq	r2, [r5, #12]
   2723c:	movne	r2, r6
   27240:	ldreq	r2, [r2]
   27244:	cmp	r3, r2
   27248:	beq	2729c <error@@Base+0x465c>
   2724c:	cmp	r6, #0
   27250:	ldrb	r3, [r3]
   27254:	ldreq	r2, [r5, #12]
   27258:	movne	r2, r6
   2725c:	ldreq	r2, [r2]
   27260:	ldrb	r2, [r2]
   27264:	cmp	r2, r3
   27268:	bne	271f0 <error@@Base+0x45b0>
   2726c:	cmp	r3, #0
   27270:	beq	2729c <error@@Base+0x465c>
   27274:	cmp	r6, #0
   27278:	add	r0, sl, #1
   2727c:	addne	r1, r6, #1
   27280:	add	r0, r8, r0
   27284:	ldreq	r3, [r5, #12]
   27288:	ldreq	r1, [r3]
   2728c:	addeq	r1, r1, #1
   27290:	bl	1182c <strcmp@plt>
   27294:	cmp	r0, #0
   27298:	bne	271f0 <error@@Base+0x45b0>
   2729c:	ldr	fp, [fp]
   272a0:	cmp	fp, #0
   272a4:	bne	2717c <error@@Base+0x453c>
   272a8:	ldr	r9, [sp, #36]	; 0x24
   272ac:	ldr	sl, [sp, #76]	; 0x4c
   272b0:	mov	r7, #0
   272b4:	b	25e60 <error@@Base+0x3220>
   272b8:	ldr	r0, [r8, #8]
   272bc:	cmp	r0, #0
   272c0:	beq	272c8 <error@@Base+0x4688>
   272c4:	bl	1188c <free@plt>
   272c8:	ldr	r0, [fp, #8]
   272cc:	bl	2312c <error@@Base+0x4ec>
   272d0:	ldrb	ip, [fp, #23]
   272d4:	ldrb	r1, [r8, #23]
   272d8:	ubfx	ip, ip, #2, #3
   272dc:	bfi	r1, ip, #2, #3
   272e0:	strb	r1, [r8, #23]
   272e4:	ldrb	r1, [r8, #20]
   272e8:	ldrb	r2, [fp, #20]
   272ec:	bfi	r1, r2, #0, #1
   272f0:	mov	r2, r1
   272f4:	bfc	r2, #1, #1
   272f8:	strb	r2, [r8, #20]
   272fc:	str	r0, [r8, #8]
   27300:	b	26ee4 <error@@Base+0x42a4>
   27304:	ldr	r5, [r5]
   27308:	cmp	r5, #0
   2730c:	bne	271c0 <error@@Base+0x4580>
   27310:	mov	r7, #0
   27314:	mov	r2, r8
   27318:	movw	r0, #10260	; 0x2814
   2731c:	str	r7, [sp]
   27320:	str	r7, [sp, #4]
   27324:	mov	r1, #13
   27328:	str	r7, [sp, #8]
   2732c:	mov	r3, #2
   27330:	movt	r0, #3
   27334:	ldr	r9, [sp, #36]	; 0x24
   27338:	ldr	sl, [sp, #76]	; 0x4c
   2733c:	bl	2c3b8 <error@@Base+0x9778>
   27340:	b	25e60 <error@@Base+0x3220>
   27344:	mov	r0, r8
   27348:	mov	r1, #47	; 0x2f
   2734c:	bl	11b68 <strchr@plt>
   27350:	cmp	r0, #0
   27354:	bne	271a0 <error@@Base+0x4560>
   27358:	b	2729c <error@@Base+0x465c>
   2735c:	cmp	r7, #0
   27360:	beq	2729c <error@@Base+0x465c>
   27364:	cmp	r6, #0
   27368:	ldr	r0, [sp, #136]	; 0x88
   2736c:	addne	r1, r6, #1
   27370:	ldreq	r3, [r5, #12]
   27374:	ldreq	r1, [r3]
   27378:	addeq	r1, r1, #1
   2737c:	bl	1182c <strcmp@plt>
   27380:	cmp	r0, #0
   27384:	bne	271e8 <error@@Base+0x45a8>
   27388:	b	2729c <error@@Base+0x465c>
   2738c:	ldr	r3, [r5, #12]
   27390:	ldr	r2, [r3]
   27394:	ldrb	r3, [r2]
   27398:	cmp	r3, #46	; 0x2e
   2739c:	beq	271e8 <error@@Base+0x45a8>
   273a0:	cmp	r8, r2
   273a4:	bne	271e0 <error@@Base+0x45a0>
   273a8:	b	2729c <error@@Base+0x465c>
   273ac:	mov	r3, #4
   273b0:	add	r0, sp, #148	; 0x94
   273b4:	str	r3, [sp]
   273b8:	mov	r1, #8
   273bc:	mov	r3, #0
   273c0:	mov	r2, #58	; 0x3a
   273c4:	bl	256a0 <error@@Base+0x2a60>
   273c8:	ldr	r3, [sp, #148]	; 0x94
   273cc:	add	r3, r3, #1
   273d0:	str	r3, [sp, #148]	; 0x94
   273d4:	subs	r4, r0, #0
   273d8:	beq	274a0 <error@@Base+0x4860>
   273dc:	ldr	r3, [r4]
   273e0:	cmp	r3, #0
   273e4:	bne	27490 <error@@Base+0x4850>
   273e8:	add	r0, r4, #4
   273ec:	bl	24984 <error@@Base+0x1d44>
   273f0:	ldr	ip, [r4, #4]
   273f4:	str	ip, [sp, #48]	; 0x30
   273f8:	subs	ip, r0, #0
   273fc:	str	ip, [sp, #68]	; 0x44
   27400:	beq	27474 <error@@Base+0x4834>
   27404:	mov	r0, r4
   27408:	bl	1188c <free@plt>
   2740c:	ldr	r4, [sp, #148]	; 0x94
   27410:	b	27078 <error@@Base+0x4438>
   27414:	ldr	ip, [sp, #96]	; 0x60
   27418:	mvn	r2, #0
   2741c:	ldr	r3, [sp, #148]	; 0x94
   27420:	ldr	r4, [ip]
   27424:	add	r0, r3, r5
   27428:	rsb	r4, r4, r3
   2742c:	bl	16dd0 <__assert_fail@plt+0x50a0>
   27430:	ldr	ip, [sp, #96]	; 0x60
   27434:	cmp	r6, #0
   27438:	ldr	r0, [ip]
   2743c:	add	r0, r0, r4
   27440:	str	r0, [sp, #148]	; 0x94
   27444:	movne	r4, r0
   27448:	bne	27020 <error@@Base+0x43e0>
   2744c:	mov	r2, r6
   27450:	str	r6, [sp]
   27454:	mov	r3, r6
   27458:	mov	r1, #59	; 0x3b
   2745c:	bl	23a78 <error@@Base+0xe38>
   27460:	subs	r6, r0, #0
   27464:	ldrne	ip, [sp, #36]	; 0x24
   27468:	strbne	ip, [r6]
   2746c:	addne	r6, r6, #1
   27470:	b	2701c <error@@Base+0x43dc>
   27474:	movw	r1, #15828	; 0x3dd4
   27478:	mov	r2, #5
   2747c:	movt	r1, #3
   27480:	bl	1191c <dcgettext@plt>
   27484:	mov	r1, r0
   27488:	ldr	r0, [sp, #60]	; 0x3c
   2748c:	bl	22d64 <error@@Base+0x124>
   27490:	movw	r1, #15800	; 0x3db8
   27494:	mov	r0, #0
   27498:	movt	r1, #3
   2749c:	b	26a0c <error@@Base+0x3dcc>
   274a0:	movw	r1, #15776	; 0x3da0
   274a4:	mov	r2, #5
   274a8:	movt	r1, #3
   274ac:	bl	1191c <dcgettext@plt>
   274b0:	mov	r1, r0
   274b4:	ldr	r0, [sp, #60]	; 0x3c
   274b8:	bl	22d64 <error@@Base+0x124>
   274bc:	movw	r1, #15728	; 0x3d70
   274c0:	mov	r2, #5
   274c4:	movt	r1, #3
   274c8:	bl	1191c <dcgettext@plt>
   274cc:	mov	r1, r0
   274d0:	ldr	r0, [sp, #60]	; 0x3c
   274d4:	bl	22d64 <error@@Base+0x124>
   274d8:	ldr	r0, [sp, #172]	; 0xac
   274dc:	bl	2b9c0 <error@@Base+0x8d80>
   274e0:	bl	17bc4 <__assert_fail@plt+0x5e94>
   274e4:	mov	r8, r0
   274e8:	b	26fb4 <error@@Base+0x4374>
   274ec:	movw	r0, #15708	; 0x3d5c
   274f0:	movw	r1, #15480	; 0x3c78
   274f4:	movw	r3, #14580	; 0x38f4
   274f8:	movt	r0, #3
   274fc:	movt	r1, #3
   27500:	movw	r2, #1047	; 0x417
   27504:	movt	r3, #3
   27508:	bl	11d30 <__assert_fail@plt>
   2750c:	ldr	ip, [sp, #56]	; 0x38
   27510:	mov	r7, #1
   27514:	str	ip, [sp, #48]	; 0x30
   27518:	str	ip, [sp, #64]	; 0x40
   2751c:	b	25e60 <error@@Base+0x3220>
   27520:	movw	r1, #15632	; 0x3d10
   27524:	mov	r0, #0
   27528:	movt	r1, #3
   2752c:	mov	r2, #5
   27530:	bl	1191c <dcgettext@plt>
   27534:	mov	r6, r5
   27538:	ldrb	r3, [r6]
   2753c:	cmp	r3, #9
   27540:	mov	r5, r0
   27544:	bne	2756c <error@@Base+0x492c>
   27548:	mov	r2, #8
   2754c:	mov	r0, r4
   27550:	movw	r1, #15652	; 0x3d24
   27554:	movt	r1, #3
   27558:	bl	11cf4 <strncmp@plt>
   2755c:	cmp	r0, #0
   27560:	movwne	r2, #6032	; 0x1790
   27564:	movtne	r2, #3
   27568:	bne	27584 <error@@Base+0x4944>
   2756c:	mov	r2, #5
   27570:	movw	r1, #15664	; 0x3d30
   27574:	mov	r0, #0
   27578:	movt	r1, #3
   2757c:	bl	1191c <dcgettext@plt>
   27580:	mov	r2, r0
   27584:	ldr	r0, [sp, #60]	; 0x3c
   27588:	mov	r1, r5
   2758c:	bl	22d64 <error@@Base+0x124>
   27590:	strdeq	r3, [r3], -ip
   27594:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27598:	movw	r7, #26864	; 0x68f0
   2759c:	movt	r7, #4
   275a0:	sub	sp, sp, #52	; 0x34
   275a4:	mov	r5, r1
   275a8:	mov	r4, #1
   275ac:	ldr	r3, [r7]
   275b0:	str	r3, [sp, #44]	; 0x2c
   275b4:	bl	2b9c0 <error@@Base+0x8d80>
   275b8:	movw	r3, #27308	; 0x6aac
   275bc:	movt	r3, #4
   275c0:	str	r4, [sp, #40]	; 0x28
   275c4:	ldr	r3, [r3]
   275c8:	tst	r3, #2
   275cc:	mov	r6, r0
   275d0:	str	r0, [sp, #36]	; 0x24
   275d4:	bne	27730 <error@@Base+0x4af0>
   275d8:	and	sl, r5, #4
   275dc:	and	r8, r5, #8
   275e0:	cmp	r8, #0
   275e4:	movne	r8, #0
   275e8:	bne	275f8 <error@@Base+0x49b8>
   275ec:	ldrb	r3, [r6]
   275f0:	cmp	r3, #126	; 0x7e
   275f4:	beq	27790 <error@@Base+0x4b50>
   275f8:	movw	r1, #64788	; 0xfd14
   275fc:	mov	r0, r6
   27600:	movt	r1, #2
   27604:	bl	11cb8 <fopen64@plt>
   27608:	mov	r4, r0
   2760c:	str	r0, [sp, #32]
   27610:	bl	11b8c <__errno_location@plt>
   27614:	cmp	r4, #0
   27618:	ldr	r3, [r0]
   2761c:	mov	r9, r0
   27620:	str	r3, [sp, #8]
   27624:	beq	277a8 <error@@Base+0x4b68>
   27628:	movw	r4, #28248	; 0x6e58
   2762c:	movt	r4, #4
   27630:	mov	r0, #20
   27634:	bl	22f78 <error@@Base+0x338>
   27638:	ldr	r2, [r4, #16]
   2763c:	mov	fp, r0
   27640:	mov	r0, r6
   27644:	str	r2, [fp]
   27648:	str	fp, [r4, #16]
   2764c:	bl	17ae8 <__assert_fail@plt+0x5db8>
   27650:	cmp	r0, #0
   27654:	str	r0, [fp, #12]
   27658:	beq	278c0 <error@@Base+0x4c80>
   2765c:	cmp	sl, #0
   27660:	ldr	r6, [r0]
   27664:	strb	r5, [fp, #16]
   27668:	ldrbne	r2, [fp, #17]
   2766c:	orrne	r2, r2, #8
   27670:	strbne	r2, [fp, #17]
   27674:	cmp	r8, #0
   27678:	beq	27684 <error@@Base+0x4a44>
   2767c:	mov	r0, r8
   27680:	bl	1188c <free@plt>
   27684:	ldr	r0, [sp, #32]
   27688:	cmp	r0, #0
   2768c:	beq	27784 <error@@Base+0x4b44>
   27690:	add	r8, sp, #36	; 0x24
   27694:	bl	11c04 <fileno@plt>
   27698:	mov	r1, #2
   2769c:	mov	r2, #1
   276a0:	bl	11b80 <fcntl@plt>
   276a4:	mov	r2, r6
   276a8:	mov	r1, #3
   276ac:	mov	r3, #0
   276b0:	mov	r0, r8
   276b4:	stm	sp, {r1, r3}
   276b8:	mov	r3, #2
   276bc:	movw	r1, #15972	; 0x3e64
   276c0:	movt	r1, #3
   276c4:	bl	2d434 <error@@Base+0xa7f4>
   276c8:	mov	r3, #200	; 0xc8
   276cc:	mov	r0, r3
   276d0:	str	r3, [sp, #28]
   276d4:	bl	22f44 <error@@Base+0x304>
   276d8:	ldr	r6, [r4, #20]
   276dc:	and	r1, r5, #1
   276e0:	str	r8, [r4, #20]
   276e4:	eor	r1, r1, #1
   276e8:	mov	r3, r0
   276ec:	add	r0, sp, #16
   276f0:	str	r3, [sp, #24]
   276f4:	str	r3, [sp, #20]
   276f8:	str	r3, [sp, #16]
   276fc:	bl	25d8c <error@@Base+0x314c>
   27700:	ldr	r0, [sp, #32]
   27704:	str	r6, [r4, #20]
   27708:	bl	11c28 <fclose@plt>
   2770c:	ldr	r0, [sp, #24]
   27710:	bl	1188c <free@plt>
   27714:	mov	r0, #1
   27718:	ldr	r2, [sp, #44]	; 0x2c
   2771c:	ldr	r3, [r7]
   27720:	cmp	r2, r3
   27724:	bne	278d0 <error@@Base+0x4c90>
   27728:	add	sp, sp, #52	; 0x34
   2772c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27730:	mov	r2, #5
   27734:	movw	r1, #15876	; 0x3e04
   27738:	mov	r0, #0
   2773c:	movt	r1, #3
   27740:	bl	1191c <dcgettext@plt>
   27744:	mov	r2, r6
   27748:	mov	r1, r0
   2774c:	mov	r0, r4
   27750:	bl	11be0 <__printf_chk@plt>
   27754:	tst	r5, #1
   27758:	bne	2789c <error@@Base+0x4c5c>
   2775c:	tst	r5, #2
   27760:	bne	27878 <error@@Base+0x4c38>
   27764:	ands	sl, r5, #4
   27768:	bne	27854 <error@@Base+0x4c14>
   2776c:	ands	r8, r5, #8
   27770:	bne	27830 <error@@Base+0x4bf0>
   27774:	movw	r0, #6392	; 0x18f8
   27778:	movt	r0, #3
   2777c:	bl	11a9c <puts@plt>
   27780:	b	275e0 <error@@Base+0x49a0>
   27784:	ldr	r3, [sp, #8]
   27788:	str	r3, [r9]
   2778c:	b	27718 <error@@Base+0x4ad8>
   27790:	mov	r0, r6
   27794:	bl	25268 <error@@Base+0x2628>
   27798:	cmp	r0, #0
   2779c:	mov	r8, r0
   277a0:	movne	r6, r0
   277a4:	b	275f8 <error@@Base+0x49b8>
   277a8:	tst	r5, #2
   277ac:	beq	27628 <error@@Base+0x49e8>
   277b0:	ldrb	r3, [r6]
   277b4:	movw	r4, #28248	; 0x6e58
   277b8:	movt	r4, #4
   277bc:	cmp	r3, #47	; 0x2f
   277c0:	beq	27630 <error@@Base+0x49f0>
   277c4:	ldr	r3, [r4, #4]
   277c8:	ldr	r1, [r3]
   277cc:	cmp	r1, #0
   277d0:	beq	27630 <error@@Base+0x49f0>
   277d4:	mov	fp, #4
   277d8:	b	277f0 <error@@Base+0x4bb0>
   277dc:	ldr	r3, [r4, #4]
   277e0:	ldr	r1, [r3, fp]
   277e4:	add	fp, fp, #4
   277e8:	cmp	r1, #0
   277ec:	beq	27630 <error@@Base+0x49f0>
   277f0:	mov	r3, r6
   277f4:	movw	r2, #2240	; 0x8c0
   277f8:	mov	r0, #3
   277fc:	movt	r2, #3
   27800:	bl	2300c <error@@Base+0x3cc>
   27804:	movw	r1, #64788	; 0xfd14
   27808:	movt	r1, #2
   2780c:	str	r0, [sp, #12]
   27810:	bl	11cb8 <fopen64@plt>
   27814:	cmp	r0, #0
   27818:	str	r0, [sp, #32]
   2781c:	beq	277dc <error@@Base+0x4b9c>
   27820:	ldr	r0, [sp, #12]
   27824:	bl	2b9c0 <error@@Base+0x8d80>
   27828:	mov	r6, r0
   2782c:	b	27630 <error@@Base+0x49f0>
   27830:	mov	r2, #5
   27834:	movw	r1, #15952	; 0x3e50
   27838:	mov	r0, #0
   2783c:	movt	r1, #3
   27840:	bl	1191c <dcgettext@plt>
   27844:	mov	r1, r0
   27848:	mov	r0, #1
   2784c:	bl	11be0 <__printf_chk@plt>
   27850:	b	27774 <error@@Base+0x4b34>
   27854:	mov	r2, #5
   27858:	movw	r1, #15936	; 0x3e40
   2785c:	mov	r0, #0
   27860:	movt	r1, #3
   27864:	bl	1191c <dcgettext@plt>
   27868:	mov	r1, r0
   2786c:	mov	r0, #1
   27870:	bl	11be0 <__printf_chk@plt>
   27874:	b	2776c <error@@Base+0x4b2c>
   27878:	mov	r2, #5
   2787c:	movw	r1, #15920	; 0x3e30
   27880:	mov	r0, #0
   27884:	movt	r1, #3
   27888:	bl	1191c <dcgettext@plt>
   2788c:	mov	r1, r0
   27890:	mov	r0, #1
   27894:	bl	11be0 <__printf_chk@plt>
   27898:	b	27764 <error@@Base+0x4b24>
   2789c:	mov	r2, #5
   278a0:	movw	r1, #15900	; 0x3e1c
   278a4:	mov	r0, #0
   278a8:	movt	r1, #3
   278ac:	bl	1191c <dcgettext@plt>
   278b0:	mov	r1, r0
   278b4:	mov	r0, r4
   278b8:	bl	11be0 <__printf_chk@plt>
   278bc:	b	2775c <error@@Base+0x4b1c>
   278c0:	mov	r0, r6
   278c4:	bl	17bc4 <__assert_fail@plt+0x5e94>
   278c8:	str	r0, [fp, #12]
   278cc:	b	2765c <error@@Base+0x4a1c>
   278d0:	bl	11934 <__stack_chk_fail@plt>
   278d4:	movw	r3, #26824	; 0x68c8
   278d8:	movt	r3, #4
   278dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   278e0:	sub	sp, sp, #32
   278e4:	ldr	r3, [r3]
   278e8:	movw	r7, #26864	; 0x68f0
   278ec:	movt	r7, #4
   278f0:	mov	r4, #0
   278f4:	str	r4, [sp]
   278f8:	mov	r5, r0
   278fc:	ldr	r3, [r3, #4]
   27900:	movw	r0, #15972	; 0x3e64
   27904:	ldr	ip, [r7]
   27908:	movt	r0, #3
   2790c:	str	r4, [sp, #8]
   27910:	movw	r2, #6032	; 0x1790
   27914:	str	r3, [sp, #4]
   27918:	mov	r1, #13
   2791c:	mov	r3, #2
   27920:	movt	r2, #3
   27924:	str	ip, [sp, #28]
   27928:	bl	2c3b8 <error@@Base+0x9778>
   2792c:	movw	r3, #27308	; 0x6aac
   27930:	movt	r3, #4
   27934:	ldr	r3, [r3]
   27938:	tst	r3, #1
   2793c:	bne	27acc <error@@Base+0x4e8c>
   27940:	mov	r8, #0
   27944:	movw	r6, #29556	; 0x7374
   27948:	movt	r6, #4
   2794c:	movw	r0, #16012	; 0x3e8c
   27950:	mov	r1, r8
   27954:	movt	r0, #3
   27958:	ldr	sl, [r6]
   2795c:	add	r4, sp, #32
   27960:	str	r8, [r6]
   27964:	bl	177b8 <__assert_fail@plt+0x5a88>
   27968:	str	sl, [r6]
   2796c:	mov	r9, r0
   27970:	str	r0, [r4, #-12]!
   27974:	b	2799c <error@@Base+0x4d5c>
   27978:	ldr	r3, [sp, #20]
   2797c:	mov	r0, r6
   27980:	mov	r1, #7
   27984:	ldrb	r2, [r3]
   27988:	cmp	r2, #0
   2798c:	addne	r2, r3, #1
   27990:	strne	r2, [sp, #20]
   27994:	strbne	r8, [r3]
   27998:	bl	27594 <error@@Base+0x4954>
   2799c:	mov	r0, r4
   279a0:	add	r1, sp, #24
   279a4:	bl	2346c <error@@Base+0x82c>
   279a8:	subs	r6, r0, #0
   279ac:	bne	27978 <error@@Base+0x4d38>
   279b0:	mov	r0, r9
   279b4:	bl	1188c <free@plt>
   279b8:	cmp	r5, #0
   279bc:	beq	27a6c <error@@Base+0x4e2c>
   279c0:	ldr	r3, [r5]
   279c4:	cmp	r3, #0
   279c8:	beq	27a6c <error@@Base+0x4e2c>
   279cc:	movw	r8, #28248	; 0x6e58
   279d0:	movt	r8, #4
   279d4:	sub	r5, r5, #4
   279d8:	ldr	r4, [r8, #16]
   279dc:	mov	r0, r3
   279e0:	mov	r1, #0
   279e4:	bl	27594 <error@@Base+0x4954>
   279e8:	cmp	r0, #0
   279ec:	beq	27a38 <error@@Base+0x4df8>
   279f0:	ldr	r0, [r8, #16]
   279f4:	mov	r2, r0
   279f8:	b	27a00 <error@@Base+0x4dc0>
   279fc:	mov	r2, r3
   27a00:	ldr	r3, [r2]
   27a04:	cmp	r3, r4
   27a08:	bne	279fc <error@@Base+0x4dbc>
   27a0c:	ldr	r3, [r2, #4]
   27a10:	add	r6, r6, #1
   27a14:	cmp	r3, #0
   27a18:	ldreq	r3, [r2, #12]
   27a1c:	ldreq	r3, [r3]
   27a20:	str	r3, [r5, #4]!
   27a24:	ldr	r3, [r5, #4]
   27a28:	cmp	r3, #0
   27a2c:	beq	27a4c <error@@Base+0x4e0c>
   27a30:	mov	r4, r0
   27a34:	b	279dc <error@@Base+0x4d9c>
   27a38:	movw	r0, #6032	; 0x1790
   27a3c:	ldr	r1, [r5, #4]
   27a40:	movt	r0, #3
   27a44:	bl	22ec8 <error@@Base+0x288>
   27a48:	b	279f0 <error@@Base+0x4db0>
   27a4c:	cmp	r6, #0
   27a50:	beq	27a74 <error@@Base+0x4e34>
   27a54:	ldr	r2, [sp, #28]
   27a58:	ldr	r3, [r7]
   27a5c:	cmp	r2, r3
   27a60:	bne	27bc8 <error@@Base+0x4f88>
   27a64:	add	sp, sp, #32
   27a68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   27a6c:	movw	r8, #28248	; 0x6e58
   27a70:	movt	r8, #4
   27a74:	movw	r5, #26760	; 0x6888
   27a78:	movt	r5, #4
   27a7c:	ldr	r0, [r5, #24]
   27a80:	cmp	r0, #0
   27a84:	addne	r4, r5, #24
   27a88:	bne	27a9c <error@@Base+0x4e5c>
   27a8c:	b	27b04 <error@@Base+0x4ec4>
   27a90:	ldr	r0, [r4, #4]!
   27a94:	cmp	r0, #0
   27a98:	beq	27b00 <error@@Base+0x4ec0>
   27a9c:	bl	1640c <__assert_fail@plt+0x46dc>
   27aa0:	cmp	r0, #0
   27aa4:	beq	27a90 <error@@Base+0x4e50>
   27aa8:	ldr	r0, [r4]
   27aac:	cmp	r0, #0
   27ab0:	beq	27b00 <error@@Base+0x4ec0>
   27ab4:	mov	r1, #0
   27ab8:	bl	27594 <error@@Base+0x4954>
   27abc:	cmp	r0, #0
   27ac0:	beq	27b9c <error@@Base+0x4f5c>
   27ac4:	ldr	r0, [r8, #16]
   27ac8:	b	27a54 <error@@Base+0x4e14>
   27acc:	mov	r2, #5
   27ad0:	mov	r0, r4
   27ad4:	movw	r1, #15988	; 0x3e74
   27ad8:	movt	r1, #3
   27adc:	bl	1191c <dcgettext@plt>
   27ae0:	mov	r1, r0
   27ae4:	mov	r0, #1
   27ae8:	bl	11be0 <__printf_chk@plt>
   27aec:	movw	r3, #26888	; 0x6908
   27af0:	movt	r3, #4
   27af4:	ldr	r0, [r3]
   27af8:	bl	11868 <fflush@plt>
   27afc:	b	27940 <error@@Base+0x4d00>
   27b00:	ldr	r0, [r5, #24]
   27b04:	ldr	r3, [r8, #16]
   27b08:	cmp	r3, #0
   27b0c:	beq	27bb0 <error@@Base+0x4f70>
   27b10:	ldr	r5, [r3]
   27b14:	cmp	r5, #0
   27b18:	bne	27b24 <error@@Base+0x4ee4>
   27b1c:	b	27bb0 <error@@Base+0x4f70>
   27b20:	mov	r5, r3
   27b24:	ldr	r3, [r5]
   27b28:	cmp	r3, #0
   27b2c:	bne	27b20 <error@@Base+0x4ee0>
   27b30:	cmp	r0, #0
   27b34:	ldrne	r6, [pc, #144]	; 27bcc <error@@Base+0x4f8c>
   27b38:	movne	r9, #4
   27b3c:	bne	27b48 <error@@Base+0x4f08>
   27b40:	b	27bb8 <error@@Base+0x4f78>
   27b44:	mov	r5, r4
   27b48:	mov	r0, #20
   27b4c:	bl	22f78 <error@@Base+0x338>
   27b50:	mov	r4, r0
   27b54:	ldr	r0, [r6, #4]!
   27b58:	bl	2b9c0 <error@@Base+0x8d80>
   27b5c:	bl	17bc4 <__assert_fail@plt+0x5e94>
   27b60:	ldrb	r3, [r4, #17]
   27b64:	cmp	r5, #0
   27b68:	strb	r9, [r4, #16]
   27b6c:	orr	r3, r3, #8
   27b70:	strb	r3, [r4, #17]
   27b74:	streq	r4, [r8, #16]
   27b78:	str	r0, [r4, #12]
   27b7c:	strne	r4, [r5]
   27b80:	ldr	r3, [r6, #4]
   27b84:	cmp	r3, #0
   27b88:	bne	27b44 <error@@Base+0x4f04>
   27b8c:	mov	r3, #0
   27b90:	ldr	r0, [r8, #16]
   27b94:	str	r3, [r4]
   27b98:	b	27a54 <error@@Base+0x4e14>
   27b9c:	ldr	r1, [r4]
   27ba0:	movw	r0, #6032	; 0x1790
   27ba4:	movt	r0, #3
   27ba8:	bl	22ec8 <error@@Base+0x288>
   27bac:	b	27ac4 <error@@Base+0x4e84>
   27bb0:	mov	r5, r3
   27bb4:	b	27b30 <error@@Base+0x4ef0>
   27bb8:	cmp	r5, #0
   27bbc:	beq	27ac4 <error@@Base+0x4e84>
   27bc0:	mov	r4, r5
   27bc4:	b	27b8c <error@@Base+0x4f4c>
   27bc8:	bl	11934 <__stack_chk_fail@plt>
   27bcc:	muleq	r4, ip, r8
   27bd0:	push	{r4, r5, r6, r7, lr}
   27bd4:	movw	r5, #26864	; 0x68f0
   27bd8:	movt	r5, #4
   27bdc:	sub	sp, sp, #52	; 0x34
   27be0:	mov	r7, r0
   27be4:	movw	r4, #28248	; 0x6e58
   27be8:	ldr	r3, [r5]
   27bec:	movt	r4, #4
   27bf0:	str	r3, [sp, #44]	; 0x2c
   27bf4:	bl	11b5c <strlen@plt>
   27bf8:	ldr	r6, [r4, #20]
   27bfc:	mov	r3, #0
   27c00:	movw	r2, #26760	; 0x6888
   27c04:	movt	r2, #4
   27c08:	cmp	r6, r3
   27c0c:	str	r3, [sp, #32]
   27c10:	str	r7, [sp, #24]
   27c14:	addne	r3, sp, #36	; 0x24
   27c18:	str	r7, [sp, #20]
   27c1c:	addeq	r3, sp, #48	; 0x30
   27c20:	str	r7, [sp, #16]
   27c24:	ldr	r7, [r2]
   27c28:	streq	r6, [r3, #-12]!
   27c2c:	str	r0, [sp, #28]
   27c30:	ldmne	r6, {r0, r1}
   27c34:	str	r3, [r4, #20]
   27c38:	stmne	r3, {r0, r1}
   27c3c:	add	r0, sp, #16
   27c40:	mov	r1, #1
   27c44:	mov	r3, #0
   27c48:	add	ip, sp, r3
   27c4c:	str	r3, [sp]
   27c50:	str	ip, [r2]
   27c54:	str	r3, [sp, #4]
   27c58:	str	r3, [sp, #8]
   27c5c:	str	r3, [sp, #12]
   27c60:	bl	25d8c <error@@Base+0x314c>
   27c64:	mov	r0, r7
   27c68:	bl	2363c <error@@Base+0x9fc>
   27c6c:	ldr	r2, [sp, #44]	; 0x2c
   27c70:	ldr	r3, [r5]
   27c74:	str	r6, [r4, #20]
   27c78:	cmp	r2, r3
   27c7c:	bne	27c88 <error@@Base+0x5048>
   27c80:	add	sp, sp, #52	; 0x34
   27c84:	pop	{r4, r5, r6, r7, pc}
   27c88:	bl	11934 <__stack_chk_fail@plt>
   27c8c:	andeq	r0, r0, r0
   27c90:	push	{r4, r5, lr}
   27c94:	sub	sp, sp, #12
   27c98:	mov	r4, r0
   27c9c:	mov	r2, #5
   27ca0:	movw	r1, #16124	; 0x3efc
   27ca4:	mov	r0, #0
   27ca8:	movt	r1, #3
   27cac:	bl	1191c <dcgettext@plt>
   27cb0:	movw	r1, #16156	; 0x3f1c
   27cb4:	mov	r2, #5
   27cb8:	movt	r1, #3
   27cbc:	mov	r5, r0
   27cc0:	mov	r0, #0
   27cc4:	bl	1191c <dcgettext@plt>
   27cc8:	ldr	r3, [r4, #12]
   27ccc:	cmp	r3, #0
   27cd0:	mov	r1, r0
   27cd4:	beq	27d0c <error@@Base+0x50cc>
   27cd8:	ldr	r2, [r3, #12]
   27cdc:	ldrb	ip, [r2, #78]	; 0x4e
   27ce0:	tst	ip, #64	; 0x40
   27ce4:	beq	27d00 <error@@Base+0x50c0>
   27ce8:	ldrsh	ip, [r2, #76]	; 0x4c
   27cec:	cmp	ip, #0
   27cf0:	ble	27d00 <error@@Base+0x50c0>
   27cf4:	ldrb	ip, [r4, #80]	; 0x50
   27cf8:	tst	ip, #1
   27cfc:	bne	27d4c <error@@Base+0x510c>
   27d00:	ldr	r3, [r3]
   27d04:	cmp	r3, #0
   27d08:	bne	27cd8 <error@@Base+0x5098>
   27d0c:	movw	r3, #29520	; 0x7350
   27d10:	movt	r3, #4
   27d14:	ldr	ip, [r3]
   27d18:	cmp	ip, #0
   27d1c:	bne	27d54 <error@@Base+0x5114>
   27d20:	ldr	r0, [r4, #68]	; 0x44
   27d24:	movw	r2, #6032	; 0x1790
   27d28:	ldr	r3, [r4]
   27d2c:	cmp	r0, #0
   27d30:	beq	27d9c <error@@Base+0x515c>
   27d34:	ldr	lr, [r0]
   27d38:	movt	r2, #3
   27d3c:	mov	r0, ip
   27d40:	str	r2, [sp, #4]
   27d44:	str	lr, [sp]
   27d48:	bl	22d64 <error@@Base+0x124>
   27d4c:	mov	r4, r2
   27d50:	b	27c9c <error@@Base+0x505c>
   27d54:	ldr	r0, [r4, #68]	; 0x44
   27d58:	cmp	r0, #0
   27d5c:	beq	27dac <error@@Base+0x516c>
   27d60:	ldr	ip, [r0]
   27d64:	movw	r2, #14484	; 0x3894
   27d68:	ldr	r3, [r4]
   27d6c:	movw	r0, #2956	; 0xb8c
   27d70:	movt	r2, #3
   27d74:	movt	r0, #3
   27d78:	str	ip, [sp]
   27d7c:	str	r0, [sp, #4]
   27d80:	mov	r0, #0
   27d84:	bl	22c40 <error@@Base>
   27d88:	ldrb	r3, [r4, #80]	; 0x50
   27d8c:	bfc	r3, #0, #1
   27d90:	strb	r3, [r4, #80]	; 0x50
   27d94:	add	sp, sp, #12
   27d98:	pop	{r4, r5, pc}
   27d9c:	movt	r2, #3
   27da0:	mov	r1, r5
   27da4:	str	r2, [sp]
   27da8:	bl	22d64 <error@@Base+0x124>
   27dac:	ldr	r3, [r4]
   27db0:	mov	r1, r5
   27db4:	movw	ip, #2956	; 0xb8c
   27db8:	movw	r2, #14484	; 0x3894
   27dbc:	movt	ip, #3
   27dc0:	movt	r2, #3
   27dc4:	str	ip, [sp]
   27dc8:	bl	22c40 <error@@Base>
   27dcc:	b	27d88 <error@@Base+0x5148>
   27dd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27dd4:	movw	r8, #26864	; 0x68f0
   27dd8:	movt	r8, #4
   27ddc:	sub	sp, sp, #8256	; 0x2040
   27de0:	sub	sp, sp, #52	; 0x34
   27de4:	mov	r6, r0
   27de8:	ldr	r3, [r8]
   27dec:	add	r2, sp, #8192	; 0x2000
   27df0:	str	r3, [r2, #108]	; 0x6c
   27df4:	b	27e08 <error@@Base+0x51c8>
   27df8:	bl	11b8c <__errno_location@plt>
   27dfc:	ldr	r3, [r0]
   27e00:	cmp	r3, #4
   27e04:	bne	27e4c <error@@Base+0x520c>
   27e08:	mov	r0, #3
   27e0c:	mov	r1, r6
   27e10:	mov	r2, sp
   27e14:	bl	11cdc <__xstat64@plt>
   27e18:	cmn	r0, #1
   27e1c:	beq	27df8 <error@@Base+0x51b8>
   27e20:	cmp	r0, #0
   27e24:	bne	27e44 <error@@Base+0x5204>
   27e28:	mov	r0, r6
   27e2c:	ldr	r1, [sp, #80]	; 0x50
   27e30:	ldr	r2, [sp, #84]	; 0x54
   27e34:	bl	18dc0 <__assert_fail@plt+0x7090>
   27e38:	mov	r4, r0
   27e3c:	mov	r5, r1
   27e40:	b	27e60 <error@@Base+0x5220>
   27e44:	bl	11b8c <__errno_location@plt>
   27e48:	ldr	r3, [r0]
   27e4c:	cmp	r3, #2
   27e50:	cmpne	r3, #20
   27e54:	moveq	r4, #1
   27e58:	moveq	r5, #0
   27e5c:	bne	27ff8 <error@@Base+0x53b8>
   27e60:	movw	r3, #28216	; 0x6e38
   27e64:	movt	r3, #4
   27e68:	ldr	r3, [r3]
   27e6c:	cmp	r3, #0
   27e70:	bne	27e9c <error@@Base+0x525c>
   27e74:	mov	r0, r4
   27e78:	mov	r1, r5
   27e7c:	add	r3, sp, #8192	; 0x2000
   27e80:	ldr	r2, [r3, #108]	; 0x6c
   27e84:	ldr	r3, [r8]
   27e88:	cmp	r2, r3
   27e8c:	bne	28014 <error@@Base+0x53d4>
   27e90:	add	sp, sp, #8256	; 0x2040
   27e94:	add	sp, sp, #52	; 0x34
   27e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e9c:	mov	r1, r6
   27ea0:	add	r6, sp, #108	; 0x6c
   27ea4:	mov	r2, #4096	; 0x1000
   27ea8:	add	r7, sp, #4160	; 0x1040
   27eac:	mov	r0, r6
   27eb0:	movw	r9, #61436	; 0xeffc
   27eb4:	bl	11a48 <__strcpy_chk@plt>
   27eb8:	add	r7, r7, #44	; 0x2c
   27ebc:	movt	r9, #65535	; 0xffff
   27ec0:	mov	sl, #0
   27ec4:	mov	r0, #3
   27ec8:	mov	r1, r6
   27ecc:	mov	r2, sp
   27ed0:	bl	11d18 <__lxstat64@plt>
   27ed4:	cmn	r0, #1
   27ed8:	beq	27fb4 <error@@Base+0x5374>
   27edc:	cmp	r0, #0
   27ee0:	bne	28018 <error@@Base+0x53d8>
   27ee4:	ldr	r3, [sp, #16]
   27ee8:	and	r3, r3, #61440	; 0xf000
   27eec:	cmp	r3, #40960	; 0xa000
   27ef0:	bne	27e74 <error@@Base+0x5234>
   27ef4:	mov	r0, r6
   27ef8:	ldr	r1, [sp, #80]	; 0x50
   27efc:	ldr	r2, [sp, #84]	; 0x54
   27f00:	bl	18dc0 <__assert_fail@plt+0x7090>
   27f04:	cmp	r5, r1
   27f08:	cmpeq	r4, r0
   27f0c:	movcc	r4, r0
   27f10:	movcc	r5, r1
   27f14:	b	27f28 <error@@Base+0x52e8>
   27f18:	bl	11b8c <__errno_location@plt>
   27f1c:	ldr	r3, [r0]
   27f20:	cmp	r3, #4
   27f24:	bne	27fa0 <error@@Base+0x5360>
   27f28:	mov	r0, r6
   27f2c:	mov	r1, r7
   27f30:	mov	r2, #4096	; 0x1000
   27f34:	bl	119dc <readlink@plt>
   27f38:	cmn	r0, #1
   27f3c:	mov	fp, r0
   27f40:	beq	27f18 <error@@Base+0x52d8>
   27f44:	cmp	r0, #0
   27f48:	blt	27fa0 <error@@Base+0x5360>
   27f4c:	add	r2, sp, #8256	; 0x2040
   27f50:	strb	sl, [r7, r0]
   27f54:	add	r2, r2, #48	; 0x30
   27f58:	ldrb	r2, [r2, r9]
   27f5c:	uxtb	r3, r2
   27f60:	cmp	r3, #47	; 0x2f
   27f64:	beq	27fe4 <error@@Base+0x53a4>
   27f68:	mov	r0, r6
   27f6c:	mov	r1, #47	; 0x2f
   27f70:	bl	11c7c <strrchr@plt>
   27f74:	cmp	r0, #0
   27f78:	beq	27fe4 <error@@Base+0x53a4>
   27f7c:	rsb	r2, r6, r0
   27f80:	movw	r3, #4094	; 0xffe
   27f84:	add	fp, r2, fp
   27f88:	cmp	fp, r3
   27f8c:	bgt	27e74 <error@@Base+0x5234>
   27f90:	mov	r1, r7
   27f94:	add	r0, r0, #1
   27f98:	bl	11a30 <strcpy@plt>
   27f9c:	b	27ec4 <error@@Base+0x5284>
   27fa0:	mov	r1, r6
   27fa4:	movw	r0, #16212	; 0x3f54
   27fa8:	movt	r0, #3
   27fac:	bl	22ec8 <error@@Base+0x288>
   27fb0:	b	27e74 <error@@Base+0x5234>
   27fb4:	bl	11b8c <__errno_location@plt>
   27fb8:	ldr	r3, [r0]
   27fbc:	cmp	r3, #4
   27fc0:	beq	27ec4 <error@@Base+0x5284>
   27fc4:	cmp	r3, #20
   27fc8:	cmpne	r3, #2
   27fcc:	beq	27e74 <error@@Base+0x5234>
   27fd0:	mov	r1, r6
   27fd4:	movw	r0, #16204	; 0x3f4c
   27fd8:	movt	r0, #3
   27fdc:	bl	22ec8 <error@@Base+0x288>
   27fe0:	b	27e74 <error@@Base+0x5234>
   27fe4:	mov	r0, r6
   27fe8:	mov	r1, r7
   27fec:	mov	r2, #4096	; 0x1000
   27ff0:	bl	11a48 <__strcpy_chk@plt>
   27ff4:	b	27ec4 <error@@Base+0x5284>
   27ff8:	mov	r1, r6
   27ffc:	movw	r0, #16396	; 0x400c
   28000:	movt	r0, #3
   28004:	bl	22ec8 <error@@Base+0x288>
   28008:	mov	r0, #1
   2800c:	mov	r1, #0
   28010:	b	27e7c <error@@Base+0x523c>
   28014:	bl	11934 <__stack_chk_fail@plt>
   28018:	bl	11b8c <__errno_location@plt>
   2801c:	ldr	r3, [r0]
   28020:	b	27fc4 <error@@Base+0x5384>
   28024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28028:	movw	fp, #26864	; 0x68f0
   2802c:	movt	fp, #4
   28030:	sub	sp, sp, #188	; 0xbc
   28034:	mov	r9, r0
   28038:	ldr	r0, [r0]
   2803c:	ldr	r3, [fp]
   28040:	mov	r5, r1
   28044:	str	r3, [sp, #180]	; 0xb4
   28048:	bl	13e84 <__assert_fail@plt+0x2154>
   2804c:	cmp	r0, #0
   28050:	ldr	r0, [r9]
   28054:	beq	28100 <error@@Base+0x54c0>
   28058:	add	r1, sp, #60	; 0x3c
   2805c:	add	r2, sp, #72	; 0x48
   28060:	bl	13f1c <__assert_fail@plt+0x21ec>
   28064:	ldr	r0, [sp, #60]	; 0x3c
   28068:	bl	17ae8 <__assert_fail@plt+0x5db8>
   2806c:	subs	r6, r0, #0
   28070:	beq	28474 <error@@Base+0x5834>
   28074:	mov	r0, r6
   28078:	mov	r1, r5
   2807c:	bl	28024 <error@@Base+0x53e4>
   28080:	strd	r0, [sp, #64]	; 0x40
   28084:	b	2808c <error@@Base+0x544c>
   28088:	mov	r6, r4
   2808c:	ldr	r4, [r6, #56]	; 0x38
   28090:	cmp	r4, #0
   28094:	bne	28088 <error@@Base+0x5448>
   28098:	cmp	r5, #0
   2809c:	bne	281d8 <error@@Base+0x5598>
   280a0:	ldr	r0, [sp, #60]	; 0x3c
   280a4:	bl	1188c <free@plt>
   280a8:	ldrd	r6, [sp, #64]	; 0x40
   280ac:	ldrb	r3, [r9, #78]	; 0x4e
   280b0:	cmp	r7, #0
   280b4:	cmpeq	r6, #1
   280b8:	orr	r3, r3, #8
   280bc:	strb	r3, [r9, #78]	; 0x4e
   280c0:	beq	281b8 <error@@Base+0x5578>
   280c4:	ldr	r0, [r9, #4]
   280c8:	bl	13f5c <__assert_fail@plt+0x222c>
   280cc:	cmn	r0, #1
   280d0:	moveq	r0, #1
   280d4:	moveq	r1, #0
   280d8:	beq	280ec <error@@Base+0x54ac>
   280dc:	mov	r1, r0
   280e0:	mov	r2, #0
   280e4:	ldr	r0, [r9, #4]
   280e8:	bl	18dc0 <__assert_fail@plt+0x7090>
   280ec:	mov	r6, r0
   280f0:	str	r0, [sp, #64]	; 0x40
   280f4:	mov	r7, r1
   280f8:	str	r1, [sp, #68]	; 0x44
   280fc:	b	28134 <error@@Base+0x54f4>
   28100:	bl	27dd0 <error@@Base+0x5190>
   28104:	cmp	r1, #0
   28108:	cmpeq	r0, #1
   2810c:	strd	r0, [sp, #64]	; 0x40
   28110:	movne	r3, #0
   28114:	moveq	r3, #1
   28118:	cmp	r5, #0
   2811c:	moveq	r5, #0
   28120:	andne	r5, r3, #1
   28124:	cmp	r5, #0
   28128:	bne	28288 <error@@Base+0x5648>
   2812c:	mov	r6, r0
   28130:	mov	r7, r1
   28134:	movw	r8, #29688	; 0x73f8
   28138:	movt	r8, #4
   2813c:	ldr	r3, [r8]
   28140:	cmp	r3, #0
   28144:	bne	28174 <error@@Base+0x5534>
   28148:	cmp	r7, #0
   2814c:	cmpeq	r6, #1
   28150:	beq	28298 <error@@Base+0x5658>
   28154:	mvn	r2, #0
   28158:	mvn	r3, #0
   2815c:	cmp	r7, r3
   28160:	cmpeq	r6, r2
   28164:	beq	28174 <error@@Base+0x5534>
   28168:	ldrb	r3, [r9, #78]	; 0x4e
   2816c:	tst	r3, #64	; 0x40
   28170:	beq	282a4 <error@@Base+0x5664>
   28174:	ldr	r3, [r9, #72]	; 0x48
   28178:	cmp	r3, #0
   2817c:	moveq	r3, r9
   28180:	cmp	r7, #0
   28184:	cmpeq	r6, #1
   28188:	beq	281a8 <error@@Base+0x5568>
   2818c:	ldrh	r1, [r3, #78]	; 0x4e
   28190:	movw	r2, #1043	; 0x413
   28194:	and	r2, r1, r2
   28198:	cmp	r2, #1024	; 0x400
   2819c:	ldrbeq	r2, [r3, #79]	; 0x4f
   281a0:	bfceq	r2, #2, #1
   281a4:	strbeq	r2, [r3, #79]	; 0x4f
   281a8:	strd	r6, [r3, #32]
   281ac:	ldr	r3, [r3, #48]	; 0x30
   281b0:	cmp	r3, #0
   281b4:	bne	28180 <error@@Base+0x5540>
   281b8:	ldr	r2, [sp, #180]	; 0xb4
   281bc:	mov	r0, r6
   281c0:	ldr	r3, [fp]
   281c4:	mov	r1, r7
   281c8:	cmp	r2, r3
   281cc:	bne	287dc <error@@Base+0x5b9c>
   281d0:	add	sp, sp, #188	; 0xbc
   281d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   281d8:	ldr	r5, [sp, #60]	; 0x3c
   281dc:	ldr	r7, [r6, #4]
   281e0:	mov	r1, r5
   281e4:	mov	r0, r7
   281e8:	bl	1182c <strcmp@plt>
   281ec:	cmp	r0, #0
   281f0:	moveq	r0, r5
   281f4:	beq	280a4 <error@@Base+0x5464>
   281f8:	mov	r0, r7
   281fc:	bl	11b5c <strlen@plt>
   28200:	mov	r5, r0
   28204:	ldr	r0, [sp, #72]	; 0x48
   28208:	bl	11b5c <strlen@plt>
   2820c:	add	r8, r0, r5
   28210:	mov	sl, r0
   28214:	add	r0, r8, #3
   28218:	bl	22f44 <error@@Base+0x304>
   2821c:	mov	r2, r5
   28220:	ldr	r1, [r6, #4]
   28224:	mov	r7, r0
   28228:	bl	118c8 <memcpy@plt>
   2822c:	add	r8, r7, r8
   28230:	mov	r3, #40	; 0x28
   28234:	add	r0, r5, #1
   28238:	strb	r3, [r7, r5]
   2823c:	mov	r2, sl
   28240:	ldr	r1, [sp, #72]	; 0x48
   28244:	add	r0, r7, r0
   28248:	bl	118c8 <memcpy@plt>
   2824c:	mov	r3, #41	; 0x29
   28250:	strb	r4, [r8, #2]
   28254:	mov	r1, r7
   28258:	strb	r3, [r8, #1]
   2825c:	mov	r0, r9
   28260:	ldm	r6, {r2, r3}
   28264:	cmp	r2, r3
   28268:	beq	28504 <error@@Base+0x58c4>
   2826c:	bl	17d14 <__assert_fail@plt+0x5fe4>
   28270:	b	28278 <error@@Base+0x5638>
   28274:	mov	r9, r3
   28278:	ldr	r3, [r9, #56]	; 0x38
   2827c:	cmp	r3, #0
   28280:	bne	28274 <error@@Base+0x5634>
   28284:	b	280a0 <error@@Base+0x5460>
   28288:	ldrb	r2, [r9, #79]	; 0x4f
   2828c:	ubfx	r2, r2, #5, #1
   28290:	cmp	r2, #0
   28294:	beq	283e0 <error@@Base+0x57a0>
   28298:	mov	r6, #1
   2829c:	mov	r7, #0
   282a0:	b	28174 <error@@Base+0x5534>
   282a4:	movw	sl, #28288	; 0x6e80
   282a8:	movt	sl, #4
   282ac:	ldrd	r2, [sl, #8]
   282b0:	cmp	r3, r7
   282b4:	cmpeq	r2, r6
   282b8:	bcs	28174 <error@@Base+0x5534>
   282bc:	add	r0, sp, #72	; 0x48
   282c0:	bl	18ec4 <__assert_fail@plt+0x7194>
   282c4:	mov	r5, r1
   282c8:	ldr	r1, [sp, #72]	; 0x48
   282cc:	mov	r4, r0
   282d0:	sub	r1, r1, #1
   282d4:	adds	r2, r4, r1
   282d8:	adc	r3, r5, r1, asr #31
   282dc:	strd	r2, [sl, #8]
   282e0:	cmp	r3, r7
   282e4:	cmpeq	r2, r6
   282e8:	bcs	283d8 <error@@Base+0x5798>
   282ec:	ldrd	r2, [sp, #64]	; 0x40
   282f0:	strd	r2, [sp, #16]
   282f4:	subs	r2, r4, #3
   282f8:	sbc	r3, r5, #0
   282fc:	strd	r2, [sp, #8]
   28300:	ldr	ip, [sp, #8]
   28304:	ldrd	r6, [sp, #16]
   28308:	lsr	r2, ip, #30
   2830c:	subs	r6, r6, #3
   28310:	ldr	ip, [sp, #12]
   28314:	sbc	r7, r7, #0
   28318:	lsr	r0, r6, #30
   2831c:	orr	r0, r0, r7, lsl #2
   28320:	lsr	r1, r7, #30
   28324:	orr	r2, r2, ip, lsl #2
   28328:	lsr	r3, ip, #30
   2832c:	subs	r0, r0, r2
   28330:	sbc	r1, r1, r3
   28334:	bl	2f4fc <error@@Base+0xc8bc>
   28338:	ldr	r3, [sp, #16]
   2833c:	vldr	d5, [pc, #932]	; 286e8 <error@@Base+0x5aa8>
   28340:	vldr	d6, [pc, #936]	; 286f0 <error@@Base+0x5ab0>
   28344:	sub	r2, r3, #3
   28348:	sub	r3, r4, #3
   2834c:	bic	r2, r2, #-1073741824	; 0xc0000000
   28350:	bic	r3, r3, #-1073741824	; 0xc0000000
   28354:	rsb	r3, r3, r2
   28358:	vmov	s14, r3
   2835c:	vcvt.f64.s32	d7, s14
   28360:	vdiv.f64	d7, d7, d5
   28364:	vmov	d5, r0, r1
   28368:	vadd.f64	d7, d5, d7
   2836c:	vcmpe.f64	d7, d6
   28370:	vmrs	APSR_nzcv, fpscr
   28374:	blt	28388 <error@@Base+0x5748>
   28378:	vldr	d6, [pc, #888]	; 286f8 <error@@Base+0x5ab8>
   2837c:	vcmpe.f64	d7, d6
   28380:	vmrs	APSR_nzcv, fpscr
   28384:	bls	2877c <error@@Base+0x5b3c>
   28388:	add	r4, sp, #80	; 0x50
   2838c:	movw	r3, #16292	; 0x3fa4
   28390:	vstr	d7, [sp]
   28394:	mov	r1, #1
   28398:	mov	r0, r4
   2839c:	movt	r3, #3
   283a0:	mov	r2, #100	; 0x64
   283a4:	bl	11b98 <__sprintf_chk@plt>
   283a8:	mov	r2, #5
   283ac:	movw	r1, #16300	; 0x3fac
   283b0:	mov	r0, #0
   283b4:	movt	r1, #3
   283b8:	bl	1191c <dcgettext@plt>
   283bc:	mov	r3, r4
   283c0:	ldr	r2, [r9]
   283c4:	mov	r1, r0
   283c8:	mov	r0, #0
   283cc:	bl	22c40 <error@@Base>
   283d0:	mov	r3, #1
   283d4:	str	r3, [r8]
   283d8:	ldrd	r6, [sp, #64]	; 0x40
   283dc:	b	28174 <error@@Base+0x5534>
   283e0:	ldr	r0, [r9]
   283e4:	mov	r3, r2
   283e8:	add	r1, sp, #64	; 0x40
   283ec:	bl	2e5cc <error@@Base+0xb98c>
   283f0:	subs	r4, r0, #0
   283f4:	beq	284ec <error@@Base+0x58ac>
   283f8:	ldrd	r2, [sp, #64]	; 0x40
   283fc:	mov	r0, r4
   28400:	orrs	r1, r2, r3
   28404:	strdne	r2, [r9, #32]
   28408:	bl	11b5c <strlen@plt>
   2840c:	mov	r5, r0
   28410:	ldr	r0, [r9]
   28414:	bl	11b5c <strlen@plt>
   28418:	sub	r1, r5, #1
   2841c:	rsb	r1, r0, r1
   28420:	mov	r0, r4
   28424:	bl	2e550 <error@@Base+0xb910>
   28428:	cmp	r0, #0
   2842c:	beq	28488 <error@@Base+0x5848>
   28430:	mov	r1, r4
   28434:	mov	r0, r9
   28438:	bl	180c0 <__assert_fail@plt+0x6390>
   2843c:	b	28444 <error@@Base+0x5804>
   28440:	mov	r9, r3
   28444:	ldr	r3, [r9, #56]	; 0x38
   28448:	cmp	r3, #0
   2844c:	bne	28440 <error@@Base+0x5800>
   28450:	ldrd	r6, [r9, #32]
   28454:	orrs	r2, r6, r7
   28458:	bne	281b8 <error@@Base+0x5578>
   2845c:	mov	r0, r9
   28460:	mov	r1, #1
   28464:	bl	28024 <error@@Base+0x53e4>
   28468:	mov	r6, r0
   2846c:	mov	r7, r1
   28470:	b	281b8 <error@@Base+0x5578>
   28474:	ldr	r0, [sp, #60]	; 0x3c
   28478:	bl	2b9c0 <error@@Base+0x8d80>
   2847c:	bl	17bc4 <__assert_fail@plt+0x5e94>
   28480:	mov	r6, r0
   28484:	b	28074 <error@@Base+0x5434>
   28488:	mov	r0, r9
   2848c:	mov	r1, r4
   28490:	bl	17d14 <__assert_fail@plt+0x5fe4>
   28494:	b	2849c <error@@Base+0x585c>
   28498:	mov	r9, r3
   2849c:	ldr	r3, [r9, #56]	; 0x38
   284a0:	cmp	r3, #0
   284a4:	bne	28498 <error@@Base+0x5858>
   284a8:	ldrd	r6, [sp, #64]	; 0x40
   284ac:	and	r3, r6, r7
   284b0:	adds	r3, r3, #1
   284b4:	movne	r3, #1
   284b8:	cmp	r7, #0
   284bc:	cmpeq	r6, #2
   284c0:	moveq	r3, #0
   284c4:	andne	r3, r3, #1
   284c8:	cmp	r3, #0
   284cc:	beq	28134 <error@@Base+0x54f4>
   284d0:	mov	r0, r4
   284d4:	bl	27dd0 <error@@Base+0x5190>
   284d8:	str	r1, [sp, #68]	; 0x44
   284dc:	mov	r6, r0
   284e0:	str	r0, [sp, #64]	; 0x40
   284e4:	mov	r7, r1
   284e8:	b	28134 <error@@Base+0x54f4>
   284ec:	ldr	r3, [r9]
   284f0:	ldrb	r2, [r3]
   284f4:	cmp	r2, #45	; 0x2d
   284f8:	beq	2850c <error@@Base+0x58cc>
   284fc:	ldrd	r6, [sp, #64]	; 0x40
   28500:	b	28134 <error@@Base+0x54f4>
   28504:	bl	180c0 <__assert_fail@plt+0x6390>
   28508:	b	28278 <error@@Base+0x5638>
   2850c:	ldrb	r2, [r3, #1]
   28510:	cmp	r2, #108	; 0x6c
   28514:	bne	284fc <error@@Base+0x58bc>
   28518:	movw	r0, #16224	; 0x3f60
   2851c:	movt	r0, #3
   28520:	add	r3, r3, #2
   28524:	str	r3, [sp, #28]
   28528:	bl	17528 <__assert_fail@plt+0x57f8>
   2852c:	movw	r5, #28288	; 0x6e80
   28530:	bl	2312c <error@@Base+0x4ec>
   28534:	movw	r8, #26800	; 0x68b0
   28538:	movt	r5, #4
   2853c:	movt	r8, #4
   28540:	str	r0, [sp, #24]
   28544:	ldr	r0, [sp, #28]
   28548:	bl	11b5c <strlen@plt>
   2854c:	ldr	r1, [sp, #24]
   28550:	add	ip, sp, #184	; 0xb8
   28554:	str	fp, [sp, #36]	; 0x24
   28558:	mov	fp, r6
   2855c:	str	r4, [sp, #8]
   28560:	str	r1, [ip, #-136]!	; 0xffffff78
   28564:	str	r9, [sp, #32]
   28568:	str	ip, [sp, #16]
   2856c:	str	r0, [sp, #40]	; 0x28
   28570:	ldr	r0, [sp, #16]
   28574:	add	r1, sp, #52	; 0x34
   28578:	bl	2346c <error@@Base+0x82c>
   2857c:	subs	r7, r0, #0
   28580:	beq	2887c <error@@Base+0x5c3c>
   28584:	movw	r0, #6032	; 0x1790
   28588:	movt	r0, #3
   2858c:	bl	17528 <__assert_fail@plt+0x57f8>
   28590:	ldr	r3, [sp, #52]	; 0x34
   28594:	mov	r2, #0
   28598:	ldrb	sl, [r7, r3]
   2859c:	strb	r2, [r7, r3]
   285a0:	mov	r6, r0
   285a4:	mov	r0, r7
   285a8:	bl	24960 <error@@Base+0x1d20>
   285ac:	subs	r9, r0, #0
   285b0:	beq	287e0 <error@@Base+0x5ba0>
   285b4:	mov	r1, r7
   285b8:	rsb	r2, r7, r9
   285bc:	mov	r0, r6
   285c0:	bl	16bc4 <__assert_fail@plt+0x4e94>
   285c4:	ldr	r1, [sp, #28]
   285c8:	ldr	r2, [sp, #40]	; 0x28
   285cc:	bl	16bc4 <__assert_fail@plt+0x4e94>
   285d0:	ldr	r2, [sp, #52]	; 0x34
   285d4:	rsb	ip, r9, r7
   285d8:	add	r1, r9, #1
   285dc:	add	r2, ip, r2
   285e0:	bl	16bc4 <__assert_fail@plt+0x4e94>
   285e4:	ldr	r3, [sp, #52]	; 0x34
   285e8:	mov	r0, r6
   285ec:	strb	sl, [r7, r3]
   285f0:	bl	27dd0 <error@@Base+0x5190>
   285f4:	cmp	r1, #0
   285f8:	cmpeq	r0, #1
   285fc:	strd	r0, [sp, #72]	; 0x48
   28600:	bne	28848 <error@@Base+0x5c08>
   28604:	mov	r0, r6
   28608:	add	r1, sp, #72	; 0x48
   2860c:	add	r2, sp, #56	; 0x38
   28610:	add	r3, sp, #60	; 0x3c
   28614:	bl	2e5cc <error@@Base+0xb98c>
   28618:	cmp	r0, #0
   2861c:	beq	28638 <error@@Base+0x59f8>
   28620:	cmp	r4, #0
   28624:	ldr	ip, [sp, #56]	; 0x38
   28628:	beq	287a4 <error@@Base+0x5b64>
   2862c:	cmp	ip, fp
   28630:	bcc	287a4 <error@@Base+0x5b64>
   28634:	beq	28834 <error@@Base+0x5bf4>
   28638:	ldr	r7, [r5]
   2863c:	movw	sl, #28288	; 0x6e80
   28640:	movt	sl, #4
   28644:	cmp	r7, #0
   28648:	bne	287c0 <error@@Base+0x5b80>
   2864c:	ldr	r0, [r8]
   28650:	movw	r7, #26800	; 0x68b0
   28654:	movt	r7, #4
   28658:	cmp	r0, #0
   2865c:	ldr	sl, [r7, #16]
   28660:	beq	286ac <error@@Base+0x5a6c>
   28664:	mov	r3, r5
   28668:	mov	r5, r4
   2866c:	mov	r9, r3
   28670:	mov	r4, sl
   28674:	mov	sl, r7
   28678:	bl	11b5c <strlen@plt>
   2867c:	ldr	ip, [sp, #8]
   28680:	add	ip, ip, #1
   28684:	str	ip, [sp, #8]
   28688:	cmp	r0, r4
   2868c:	strgt	r0, [r8, #16]
   28690:	movgt	r4, r0
   28694:	ldr	r0, [sl, #4]!
   28698:	cmp	r0, #0
   2869c:	bne	28678 <error@@Base+0x5a38>
   286a0:	mov	sl, r4
   286a4:	mov	r4, r5
   286a8:	mov	r5, r9
   286ac:	mov	r0, r6
   286b0:	bl	11b5c <strlen@plt>
   286b4:	add	r3, r0, #2
   286b8:	str	r0, [r5]
   286bc:	add	r0, r3, sl
   286c0:	bl	22f44 <error@@Base+0x304>
   286c4:	str	r0, [r5, #4]
   286c8:	ldr	r2, [r7]
   286cc:	ldr	ip, [sp, #8]
   286d0:	cmp	r2, #0
   286d4:	mvn	r7, ip
   286d8:	beq	28570 <error@@Base+0x5930>
   286dc:	movw	sl, #26800	; 0x68b0
   286e0:	movt	sl, #4
   286e4:	b	28710 <error@@Base+0x5ad0>
   286e8:	andeq	r0, r0, r0
   286ec:	bicmi	ip, sp, r5, ror #26
   286f0:	andeq	r0, r0, r0
   286f4:	subsmi	ip, r8, r0
   286f8:			; <UNDEFINED> instruction: 0xffe00000
   286fc:	strdmi	pc, [pc, #255]	; 28803 <error@@Base+0x5bc3>
   28700:	ldr	r2, [sl, #4]!
   28704:	add	r7, r7, #1
   28708:	cmp	r2, #0
   2870c:	beq	28570 <error@@Base+0x5930>
   28710:	ldr	r0, [r5, #4]
   28714:	mov	r1, #1
   28718:	str	r2, [sp]
   2871c:	movw	r3, #16284	; 0x3f9c
   28720:	mvn	r2, #0
   28724:	movt	r3, #3
   28728:	str	r6, [sp, #4]
   2872c:	bl	11b98 <__sprintf_chk@plt>
   28730:	ldr	r0, [r5, #4]
   28734:	bl	27dd0 <error@@Base+0x5190>
   28738:	cmp	r1, #0
   2873c:	cmpeq	r0, #1
   28740:	strd	r0, [sp, #72]	; 0x48
   28744:	beq	28700 <error@@Base+0x5ac0>
   28748:	rsbs	r3, r4, #1
   2874c:	movcc	r3, #0
   28750:	cmp	r7, fp
   28754:	orrcc	r3, r3, #1
   28758:	cmp	r3, #0
   2875c:	beq	28700 <error@@Base+0x5ac0>
   28760:	ldr	r0, [r5, #4]
   28764:	mov	fp, r7
   28768:	bl	2b9c0 <error@@Base+0x8d80>
   2876c:	ldrd	r2, [sp, #72]	; 0x48
   28770:	strd	r2, [sp, #64]	; 0x40
   28774:	mov	r4, r0
   28778:	b	28700 <error@@Base+0x5ac0>
   2877c:	vcvt.u32.f64	s14, d7
   28780:	add	r4, sp, #80	; 0x50
   28784:	movw	r3, #3300	; 0xce4
   28788:	mov	r1, #1
   2878c:	mov	r0, r4
   28790:	movt	r3, #3
   28794:	mov	r2, #100	; 0x64
   28798:	vstr	s14, [sp]
   2879c:	bl	11b98 <__sprintf_chk@plt>
   287a0:	b	283a8 <error@@Base+0x5768>
   287a4:	ldr	r1, [sp, #60]	; 0x3c
   287a8:	ldrd	r2, [sp, #72]	; 0x48
   287ac:	mov	fp, ip
   287b0:	str	r1, [sp, #44]	; 0x2c
   287b4:	mov	r4, r0
   287b8:	strd	r2, [sp, #64]	; 0x40
   287bc:	b	28638 <error@@Base+0x59f8>
   287c0:	mov	r0, r6
   287c4:	bl	11b5c <strlen@plt>
   287c8:	cmp	r7, r0
   287cc:	bcc	2880c <error@@Base+0x5bcc>
   287d0:	movw	r7, #26800	; 0x68b0
   287d4:	movt	r7, #4
   287d8:	b	286c8 <error@@Base+0x5a88>
   287dc:	bl	11934 <__stack_chk_fail@plt>
   287e0:	mov	r2, #5
   287e4:	movw	r1, #16240	; 0x3f70
   287e8:	movt	r1, #3
   287ec:	bl	1191c <dcgettext@plt>
   287f0:	mov	r2, r7
   287f4:	mov	r1, r0
   287f8:	mov	r0, r9
   287fc:	bl	22c40 <error@@Base>
   28800:	ldr	r3, [sp, #52]	; 0x34
   28804:	strb	sl, [r7, r3]
   28808:	b	28570 <error@@Base+0x5930>
   2880c:	ldr	r1, [r8, #16]
   28810:	movw	r7, #26800	; 0x68b0
   28814:	str	r0, [sl]
   28818:	movt	r7, #4
   2881c:	add	r1, r1, #2
   28820:	add	r1, r1, r0
   28824:	ldr	r0, [sl, #4]
   28828:	bl	22fb0 <error@@Base+0x370>
   2882c:	str	r0, [sl, #4]
   28830:	b	286c8 <error@@Base+0x5a88>
   28834:	ldr	r1, [sp, #60]	; 0x3c
   28838:	ldr	r3, [sp, #44]	; 0x2c
   2883c:	cmp	r1, r3
   28840:	bcs	28638 <error@@Base+0x59f8>
   28844:	b	287a8 <error@@Base+0x5b68>
   28848:	mov	r2, r0
   2884c:	mov	r0, r6
   28850:	mov	r3, r1
   28854:	ldr	r9, [sp, #32]
   28858:	ldr	fp, [sp, #36]	; 0x24
   2885c:	strd	r2, [sp, #64]	; 0x40
   28860:	bl	2b9c0 <error@@Base+0x8d80>
   28864:	mov	r4, r0
   28868:	ldr	r0, [sp, #24]
   2886c:	bl	1188c <free@plt>
   28870:	cmp	r4, #0
   28874:	bne	283f8 <error@@Base+0x57b8>
   28878:	b	284fc <error@@Base+0x58bc>
   2887c:	ldr	r9, [sp, #32]
   28880:	ldr	fp, [sp, #36]	; 0x24
   28884:	b	28868 <error@@Base+0x5c28>
   28888:	ldrb	r3, [r0, #78]	; 0x4e
   2888c:	push	{r4, r5, r6, r7, r8, r9, lr}
   28890:	movw	r4, #29692	; 0x73fc
   28894:	movt	r4, #4
   28898:	and	r9, r3, #3
   2889c:	movw	r8, #26864	; 0x68f0
   288a0:	movt	r8, #4
   288a4:	mov	r6, r0
   288a8:	ldr	r2, [r4]
   288ac:	subs	r0, r9, #2
   288b0:	ldr	r1, [r8]
   288b4:	rsbs	r9, r0, #0
   288b8:	sub	sp, sp, #132	; 0x84
   288bc:	adcs	r9, r9, r0
   288c0:	cmp	r2, #0
   288c4:	orr	r3, r3, #67	; 0x43
   288c8:	str	r1, [sp, #124]	; 0x7c
   288cc:	strb	r3, [r6, #78]	; 0x4e
   288d0:	bne	28a78 <error@@Base+0x5e38>
   288d4:	ldrh	r7, [r6, #76]	; 0x4c
   288d8:	mov	r1, r2
   288dc:	ldrd	r2, [r6, #40]	; 0x28
   288e0:	orrs	r0, r2, r3
   288e4:	ldrdeq	r2, [r6, #32]
   288e8:	strdeq	r2, [r6, #40]	; 0x28
   288ec:	cmp	r9, #0
   288f0:	beq	28a54 <error@@Base+0x5e14>
   288f4:	ldrb	r3, [r6, #79]	; 0x4f
   288f8:	tst	r3, #2
   288fc:	bne	28a54 <error@@Base+0x5e14>
   28900:	movw	r3, #28224	; 0x6e40
   28904:	movt	r3, #4
   28908:	ldr	r3, [r3]
   2890c:	cmp	r3, #0
   28910:	beq	28bc8 <error@@Base+0x5f88>
   28914:	ldr	r2, [r6, #16]
   28918:	cmp	r2, #0
   2891c:	beq	28be8 <error@@Base+0x5fa8>
   28920:	ldr	r3, [r2, #12]
   28924:	cmp	r3, #0
   28928:	ble	28c6c <error@@Base+0x602c>
   2892c:	ldr	r2, [r2, #20]
   28930:	add	r2, r2, r3
   28934:	ldrb	r1, [r2, #-1]
   28938:	tst	r1, #1
   2893c:	bne	28954 <error@@Base+0x5d14>
   28940:	b	28c54 <error@@Base+0x6014>
   28944:	ldrb	r1, [r2, #-2]
   28948:	sub	r2, r2, #1
   2894c:	tst	r1, #1
   28950:	beq	28c54 <error@@Base+0x6014>
   28954:	subs	r3, r3, #1
   28958:	bne	28944 <error@@Base+0x5d04>
   2895c:	mov	r2, #0
   28960:	mov	r3, #0
   28964:	strd	r2, [r6, #32]
   28968:	ldr	ip, [r6, #72]	; 0x48
   2896c:	cmp	ip, #0
   28970:	beq	289cc <error@@Base+0x5d8c>
   28974:	ldrd	r2, [r6, #32]
   28978:	mov	r1, ip
   2897c:	ldrb	r0, [r1, #78]	; 0x4e
   28980:	tst	r0, #64	; 0x40
   28984:	beq	289cc <error@@Base+0x5d8c>
   28988:	orrs	r0, r2, r3
   2898c:	beq	289b0 <error@@Base+0x5d70>
   28990:	ldrd	r4, [r1, #32]
   28994:	orrs	r0, r4, r5
   28998:	beq	289a8 <error@@Base+0x5d68>
   2899c:	cmp	r3, r5
   289a0:	cmpeq	r2, r4
   289a4:	bcs	289b0 <error@@Base+0x5d70>
   289a8:	mov	r2, r4
   289ac:	mov	r3, r5
   289b0:	ldr	r1, [r1, #48]	; 0x30
   289b4:	cmp	r1, #0
   289b8:	bne	2897c <error@@Base+0x5d3c>
   289bc:	strd	r2, [ip, #32]
   289c0:	ldr	ip, [ip, #48]	; 0x30
   289c4:	cmp	ip, #0
   289c8:	bne	289bc <error@@Base+0x5d7c>
   289cc:	cmp	r9, #0
   289d0:	beq	28a60 <error@@Base+0x5e20>
   289d4:	sxth	r3, r7
   289d8:	cmn	r3, #1
   289dc:	beq	28a6c <error@@Base+0x5e2c>
   289e0:	ldr	r4, [r6, #28]
   289e4:	cmp	r4, #0
   289e8:	bne	28a00 <error@@Base+0x5dc0>
   289ec:	b	28a3c <error@@Base+0x5dfc>
   289f0:	ldr	r4, [r4]
   289f4:	cmp	r4, #0
   289f8:	beq	28a3c <error@@Base+0x5dfc>
   289fc:	ldrh	r7, [r6, #76]	; 0x4c
   28a00:	ldr	r0, [r4, #12]
   28a04:	ldrb	r2, [r0, #78]	; 0x4e
   28a08:	ldrb	r1, [r0, #79]	; 0x4f
   28a0c:	orr	r2, r2, #3
   28a10:	strh	r7, [r0, #76]	; 0x4c
   28a14:	ubfx	r1, r1, #1, #1
   28a18:	cmp	r1, #0
   28a1c:	uxtb	r2, r2
   28a20:	orr	r2, r2, #64	; 0x40
   28a24:	strb	r2, [r0, #78]	; 0x4e
   28a28:	bne	289f0 <error@@Base+0x5db0>
   28a2c:	bl	28024 <error@@Base+0x53e4>
   28a30:	ldr	r4, [r4]
   28a34:	cmp	r4, #0
   28a38:	bne	289fc <error@@Base+0x5dbc>
   28a3c:	ldr	r2, [sp, #124]	; 0x7c
   28a40:	ldr	r3, [r8]
   28a44:	cmp	r2, r3
   28a48:	bne	28d18 <error@@Base+0x60d8>
   28a4c:	add	sp, sp, #132	; 0x84
   28a50:	pop	{r4, r5, r6, r7, r8, r9, pc}
   28a54:	cmp	r1, #0
   28a58:	beq	28968 <error@@Base+0x5d28>
   28a5c:	b	28900 <error@@Base+0x5cc0>
   28a60:	sxth	r7, r7
   28a64:	cmn	r7, #1
   28a68:	bne	28a3c <error@@Base+0x5dfc>
   28a6c:	mov	r3, #0
   28a70:	strh	r3, [r6, #76]	; 0x4c
   28a74:	b	28a3c <error@@Base+0x5dfc>
   28a78:	ldrh	r7, [r6, #76]	; 0x4c
   28a7c:	cmp	r7, #0
   28a80:	bne	28c4c <error@@Base+0x600c>
   28a84:	ldr	r3, [r6, #16]
   28a88:	cmp	r3, #0
   28a8c:	beq	28c4c <error@@Base+0x600c>
   28a90:	ldr	r2, [r3, #24]
   28a94:	cmp	r2, #0
   28a98:	bne	28c10 <error@@Base+0x5fd0>
   28a9c:	ldrb	r3, [r6, #79]	; 0x4f
   28aa0:	tst	r3, #2
   28aa4:	bne	28c4c <error@@Base+0x600c>
   28aa8:	movw	r3, #29480	; 0x7328
   28aac:	movt	r3, #4
   28ab0:	ldr	r0, [r3]
   28ab4:	cmp	r0, #0
   28ab8:	beq	28c84 <error@@Base+0x6044>
   28abc:	ldr	r0, [r6]
   28ac0:	bl	13e84 <__assert_fail@plt+0x2154>
   28ac4:	cmp	r0, #0
   28ac8:	ldr	r0, [r6]
   28acc:	bne	28c60 <error@@Base+0x6020>
   28ad0:	mov	r1, #66	; 0x42
   28ad4:	movw	r2, #438	; 0x1b6
   28ad8:	bl	11a78 <open64@plt>
   28adc:	subs	r5, r0, #0
   28ae0:	movge	r3, #120	; 0x78
   28ae4:	strbge	r3, [sp, #15]
   28ae8:	bge	28b00 <error@@Base+0x5ec0>
   28aec:	b	28cd8 <error@@Base+0x6098>
   28af0:	bl	11b8c <__errno_location@plt>
   28af4:	ldr	r3, [r0]
   28af8:	cmp	r3, #4
   28afc:	bne	28c98 <error@@Base+0x6058>
   28b00:	mov	r0, #3
   28b04:	mov	r1, r5
   28b08:	add	r2, sp, #16
   28b0c:	bl	119d0 <__fxstat64@plt>
   28b10:	cmn	r0, #1
   28b14:	beq	28af0 <error@@Base+0x5eb0>
   28b18:	cmp	r0, #0
   28b1c:	blt	28c98 <error@@Base+0x6058>
   28b20:	mov	r0, r5
   28b24:	mov	r2, #1
   28b28:	add	r1, sp, #15
   28b2c:	bl	1185c <read@plt>
   28b30:	cmp	r0, #0
   28b34:	blt	28cb0 <error@@Base+0x6070>
   28b38:	mov	r3, #0
   28b3c:	mov	r0, r5
   28b40:	str	r3, [sp]
   28b44:	mov	r2, #0
   28b48:	mov	r3, #0
   28b4c:	bl	11a0c <lseek64@plt>
   28b50:	cmp	r0, #0
   28b54:	sbcs	r3, r1, #0
   28b58:	blt	28cc4 <error@@Base+0x6084>
   28b5c:	add	r1, sp, #15
   28b60:	mov	r0, r5
   28b64:	mov	r2, #1
   28b68:	bl	11bf8 <write@plt>
   28b6c:	cmp	r0, #0
   28b70:	blt	28d04 <error@@Base+0x60c4>
   28b74:	ldrd	r2, [sp, #64]	; 0x40
   28b78:	orrs	r0, r2, r3
   28b7c:	bne	28ba0 <error@@Base+0x5f60>
   28b80:	mov	r0, r5
   28b84:	bl	11d0c <close@plt>
   28b88:	ldr	r0, [r6]
   28b8c:	movw	r1, #514	; 0x202
   28b90:	movw	r2, #438	; 0x1b6
   28b94:	bl	11a78 <open64@plt>
   28b98:	subs	r5, r0, #0
   28b9c:	blt	28cf0 <error@@Base+0x60b0>
   28ba0:	mov	r0, r5
   28ba4:	bl	11d0c <close@plt>
   28ba8:	movw	r3, #28288	; 0x6e80
   28bac:	movt	r3, #4
   28bb0:	mov	r1, #1
   28bb4:	strh	r7, [r6, #76]	; 0x4c
   28bb8:	ldr	r2, [r3, #16]
   28bbc:	add	r2, r2, r1
   28bc0:	str	r2, [r3, #16]
   28bc4:	b	288dc <error@@Base+0x5c9c>
   28bc8:	movw	r3, #29516	; 0x734c
   28bcc:	movt	r3, #4
   28bd0:	ldr	r3, [r3]
   28bd4:	cmp	r3, #0
   28bd8:	bne	28914 <error@@Base+0x5cd4>
   28bdc:	ldr	r3, [r4]
   28be0:	cmp	r3, #0
   28be4:	bne	28914 <error@@Base+0x5cd4>
   28be8:	ldrb	r3, [r6, #78]	; 0x4e
   28bec:	lsrs	r3, r3, #7
   28bf0:	beq	2895c <error@@Base+0x5d1c>
   28bf4:	ldr	r2, [r6, #16]
   28bf8:	mov	r3, #0
   28bfc:	rsbs	r2, r2, #1
   28c00:	movcc	r2, #0
   28c04:	rsbs	r2, r2, #0
   28c08:	rsc	r3, r3, #0
   28c0c:	b	28964 <error@@Base+0x5d24>
   28c10:	ldr	r2, [r3, #12]
   28c14:	cmp	r2, #0
   28c18:	beq	28c4c <error@@Base+0x600c>
   28c1c:	ldr	r3, [r3, #20]
   28c20:	ldrb	r1, [r3]
   28c24:	tst	r1, #1
   28c28:	beq	28a9c <error@@Base+0x5e5c>
   28c2c:	sub	r2, r2, #1
   28c30:	add	r1, r3, r2
   28c34:	b	28c44 <error@@Base+0x6004>
   28c38:	ldrb	r2, [r3, #1]!
   28c3c:	tst	r2, #1
   28c40:	beq	28a9c <error@@Base+0x5e5c>
   28c44:	cmp	r3, r1
   28c48:	bne	28c38 <error@@Base+0x5ff8>
   28c4c:	mov	r1, #0
   28c50:	b	288dc <error@@Base+0x5c9c>
   28c54:	mvn	r2, #0
   28c58:	mvn	r3, #0
   28c5c:	b	28964 <error@@Base+0x5d24>
   28c60:	bl	14008 <__assert_fail@plt+0x22d8>
   28c64:	uxth	r7, r0
   28c68:	b	28ba8 <error@@Base+0x5f68>
   28c6c:	moveq	r2, #0
   28c70:	movne	r2, #1
   28c74:	mov	r3, #0
   28c78:	rsbs	r2, r2, #0
   28c7c:	rsc	r3, r3, #0
   28c80:	b	28964 <error@@Base+0x5d24>
   28c84:	movw	r1, #16360	; 0x3fe8
   28c88:	ldr	r2, [r6]
   28c8c:	movt	r1, #3
   28c90:	bl	22b4c <__assert_fail@plt+0x10e1c>
   28c94:	b	28abc <error@@Base+0x5e7c>
   28c98:	movw	r0, #16388	; 0x4004
   28c9c:	ldr	r1, [r6]
   28ca0:	movt	r0, #3
   28ca4:	bl	22ec8 <error@@Base+0x288>
   28ca8:	mov	r7, #1
   28cac:	b	28ba8 <error@@Base+0x5f68>
   28cb0:	movw	r0, #16404	; 0x4014
   28cb4:	ldr	r1, [r6]
   28cb8:	movt	r0, #3
   28cbc:	bl	22ec8 <error@@Base+0x288>
   28cc0:	b	28ca8 <error@@Base+0x6068>
   28cc4:	movw	r0, #16420	; 0x4024
   28cc8:	ldr	r1, [r6]
   28ccc:	movt	r0, #3
   28cd0:	bl	22ec8 <error@@Base+0x288>
   28cd4:	b	28ca8 <error@@Base+0x6068>
   28cd8:	movw	r0, #16372	; 0x3ff4
   28cdc:	ldr	r1, [r6]
   28ce0:	movt	r0, #3
   28ce4:	mov	r7, #1
   28ce8:	bl	22ec8 <error@@Base+0x288>
   28cec:	b	28ba8 <error@@Base+0x5f68>
   28cf0:	movw	r0, #16372	; 0x3ff4
   28cf4:	ldr	r1, [r6]
   28cf8:	movt	r0, #3
   28cfc:	bl	22ec8 <error@@Base+0x288>
   28d00:	b	28ca8 <error@@Base+0x6068>
   28d04:	movw	r0, #16436	; 0x4034
   28d08:	ldr	r1, [r6]
   28d0c:	movt	r0, #3
   28d10:	bl	22ec8 <error@@Base+0x288>
   28d14:	b	28ca8 <error@@Base+0x6068>
   28d18:	bl	11934 <__stack_chk_fail@plt>
   28d1c:	ldr	ip, [r0, #72]	; 0x48
   28d20:	add	r1, r1, #1
   28d24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28d28:	cmp	ip, #0
   28d2c:	sub	sp, sp, #36	; 0x24
   28d30:	movw	r9, #26864	; 0x68f0
   28d34:	moveq	ip, r0
   28d38:	movt	r9, #4
   28d3c:	strd	r2, [sp, #8]
   28d40:	mov	r7, r0
   28d44:	ldrb	r3, [ip, #78]	; 0x4e
   28d48:	ldr	r2, [r9]
   28d4c:	orr	r3, r3, #32
   28d50:	strb	r3, [ip, #78]	; 0x4e
   28d54:	ldrb	r3, [r0, #79]	; 0x4f
   28d58:	str	r2, [sp, #28]
   28d5c:	and	r2, r3, #6
   28d60:	str	r1, [sp, #16]
   28d64:	cmp	r2, #4
   28d68:	ldr	sl, [sp, #72]	; 0x48
   28d6c:	beq	28e44 <error@@Base+0x6204>
   28d70:	mov	r4, r0
   28d74:	bl	291ac <error@@Base+0x656c>
   28d78:	mov	r5, r0
   28d7c:	b	28d84 <error@@Base+0x6144>
   28d80:	mov	r4, r3
   28d84:	ldr	r3, [r4, #56]	; 0x38
   28d88:	cmp	r3, #0
   28d8c:	bne	28d80 <error@@Base+0x6140>
   28d90:	ldrd	r0, [r4, #32]
   28d94:	orrs	r2, r0, r1
   28d98:	bne	28dbc <error@@Base+0x617c>
   28d9c:	mov	r0, r4
   28da0:	mov	r1, #1
   28da4:	bl	28024 <error@@Base+0x53e4>
   28da8:	ldr	r3, [r4, #56]	; 0x38
   28dac:	cmp	r3, #0
   28db0:	beq	28dc4 <error@@Base+0x6184>
   28db4:	mov	r4, r3
   28db8:	ldr	r3, [r3, #56]	; 0x38
   28dbc:	cmp	r3, #0
   28dc0:	bne	28db4 <error@@Base+0x6174>
   28dc4:	ldrd	r2, [sp, #8]
   28dc8:	cmp	r1, r3
   28dcc:	cmpeq	r0, r2
   28dd0:	movls	r3, #0
   28dd4:	movhi	r3, #1
   28dd8:	cmp	r1, #0
   28ddc:	cmpeq	r0, #1
   28de0:	orreq	r3, r3, #1
   28de4:	cmp	r3, #0
   28de8:	bne	28e38 <error@@Base+0x61f8>
   28dec:	ldr	r2, [r4, #72]	; 0x48
   28df0:	mov	r0, r5
   28df4:	ldr	r3, [r7, #72]	; 0x48
   28df8:	cmp	r2, #0
   28dfc:	ldr	r1, [sp, #28]
   28e00:	movne	r4, r2
   28e04:	cmp	r3, #0
   28e08:	ldr	r2, [r9]
   28e0c:	movne	r7, r3
   28e10:	ldrb	r3, [r4, #78]	; 0x4e
   28e14:	cmp	r1, r2
   28e18:	bfc	r3, #5, #1
   28e1c:	strb	r3, [r4, #78]	; 0x4e
   28e20:	ldrb	r3, [r7, #78]	; 0x4e
   28e24:	bfc	r3, #5, #1
   28e28:	strb	r3, [r7, #78]	; 0x4e
   28e2c:	bne	291a8 <error@@Base+0x6568>
   28e30:	add	sp, sp, #36	; 0x24
   28e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28e38:	mov	r3, #1
   28e3c:	str	r3, [sl]
   28e40:	b	28dec <error@@Base+0x61ac>
   28e44:	tst	r3, #2
   28e48:	bne	29084 <error@@Base+0x6444>
   28e4c:	ldr	r3, [r0, #16]
   28e50:	cmp	r3, #0
   28e54:	beq	29044 <error@@Base+0x6404>
   28e58:	mov	r4, r7
   28e5c:	b	28e64 <error@@Base+0x6224>
   28e60:	mov	r4, r5
   28e64:	ldr	r5, [r4, #56]	; 0x38
   28e68:	cmp	r5, #0
   28e6c:	bne	28e60 <error@@Base+0x6220>
   28e70:	ldrd	r0, [r4, #32]
   28e74:	orrs	r3, r0, r1
   28e78:	bne	28e88 <error@@Base+0x6248>
   28e7c:	b	290e0 <error@@Base+0x64a0>
   28e80:	mov	r4, r5
   28e84:	ldr	r5, [r5, #56]	; 0x38
   28e88:	cmp	r5, #0
   28e8c:	bne	28e80 <error@@Base+0x6240>
   28e90:	ldrd	r2, [sp, #8]
   28e94:	cmp	r1, r3
   28e98:	cmpeq	r0, r2
   28e9c:	movls	r3, #0
   28ea0:	movhi	r3, #1
   28ea4:	cmp	r1, #0
   28ea8:	cmpeq	r0, #1
   28eac:	moveq	r3, #0
   28eb0:	andne	r3, r3, #1
   28eb4:	cmp	r3, #0
   28eb8:	bne	28e38 <error@@Base+0x61f8>
   28ebc:	ldrb	r3, [r4, #78]	; 0x4e
   28ec0:	and	r3, r3, #3
   28ec4:	cmp	r3, #2
   28ec8:	beq	28ed8 <error@@Base+0x6298>
   28ecc:	mov	r1, r5
   28ed0:	mov	r0, r4
   28ed4:	bl	18c28 <__assert_fail@plt+0x6ef8>
   28ed8:	ldr	fp, [r4, #12]
   28edc:	cmp	fp, #0
   28ee0:	beq	290f4 <error@@Base+0x64b4>
   28ee4:	movw	ip, #29520	; 0x7350
   28ee8:	movt	ip, #4
   28eec:	mov	r8, #0
   28ef0:	str	r7, [sp, #20]
   28ef4:	mov	r6, r8
   28ef8:	ldr	r7, [sp, #16]
   28efc:	mov	r5, r8
   28f00:	str	r9, [sp, #16]
   28f04:	mov	r9, fp
   28f08:	mov	fp, ip
   28f0c:	b	28f60 <error@@Base+0x6320>
   28f10:	mov	r2, #5
   28f14:	movw	r1, #16560	; 0x40b0
   28f18:	mov	r0, #0
   28f1c:	movt	r1, #3
   28f20:	bl	1191c <dcgettext@plt>
   28f24:	ldr	r3, [r9, #12]
   28f28:	ldr	r2, [r4]
   28f2c:	ldr	r3, [r3]
   28f30:	mov	r1, r0
   28f34:	mov	r0, #0
   28f38:	bl	22c40 <error@@Base>
   28f3c:	cmp	r6, #0
   28f40:	ldr	r3, [r9]
   28f44:	mov	r0, r9
   28f48:	beq	29034 <error@@Base+0x63f4>
   28f4c:	str	r3, [r6]
   28f50:	bl	1188c <free@plt>
   28f54:	ldr	r9, [r6]
   28f58:	cmp	r9, #0
   28f5c:	beq	29014 <error@@Base+0x63d4>
   28f60:	ldr	r3, [r9, #12]
   28f64:	ldr	r2, [r3, #72]	; 0x48
   28f68:	cmp	r2, #0
   28f6c:	moveq	r2, r3
   28f70:	ldrb	r2, [r2, #78]	; 0x4e
   28f74:	tst	r2, #32
   28f78:	bne	28f10 <error@@Base+0x62d0>
   28f7c:	ldr	lr, [sl]
   28f80:	mov	r0, r3
   28f84:	str	r4, [r3, #68]	; 0x44
   28f88:	mov	r1, r7
   28f8c:	add	r3, sp, #24
   28f90:	str	r3, [sp]
   28f94:	ldrd	r2, [sp, #8]
   28f98:	str	lr, [sp, #24]
   28f9c:	bl	28d1c <error@@Base+0x60dc>
   28fa0:	ldrb	r3, [r9, #17]
   28fa4:	tst	r3, #1
   28fa8:	ldreq	r3, [sp, #24]
   28fac:	streq	r3, [sl]
   28fb0:	ldr	r3, [r9, #12]
   28fb4:	ldr	r2, [r3, #56]	; 0x38
   28fb8:	cmp	r2, #0
   28fbc:	orr	r5, r5, r0
   28fc0:	bne	28fcc <error@@Base+0x638c>
   28fc4:	b	290d8 <error@@Base+0x6498>
   28fc8:	mov	r2, r3
   28fcc:	ldr	r3, [r2, #56]	; 0x38
   28fd0:	cmp	r3, #0
   28fd4:	bne	28fc8 <error@@Base+0x6388>
   28fd8:	str	r2, [r9, #12]
   28fdc:	cmp	r5, #0
   28fe0:	beq	28ff0 <error@@Base+0x63b0>
   28fe4:	ldr	r3, [fp]
   28fe8:	cmp	r3, #0
   28fec:	beq	29014 <error@@Base+0x63d4>
   28ff0:	ldrb	r3, [r2, #78]	; 0x4e
   28ff4:	mov	r6, r9
   28ff8:	ldr	r9, [r9]
   28ffc:	add	r3, r3, #3
   29000:	and	r3, r3, #3
   29004:	cmp	r3, #1
   29008:	movls	r8, #1
   2900c:	cmp	r9, #0
   29010:	bne	28f60 <error@@Base+0x6320>
   29014:	cmp	r8, #0
   29018:	ldr	r7, [sp, #20]
   2901c:	ldr	r9, [sp, #16]
   29020:	beq	28dec <error@@Base+0x61ac>
   29024:	mov	r0, r4
   29028:	mov	r1, #1
   2902c:	bl	18c28 <__assert_fail@plt+0x6ef8>
   29030:	b	28dec <error@@Base+0x61ac>
   29034:	str	r3, [r4, #12]
   29038:	bl	1188c <free@plt>
   2903c:	ldr	r9, [r4, #12]
   29040:	b	28f58 <error@@Base+0x6318>
   29044:	ldrb	r3, [r0, #78]	; 0x4e
   29048:	ubfx	r4, r3, #4, #1
   2904c:	cmp	r4, #0
   29050:	bne	29094 <error@@Base+0x6454>
   29054:	ldr	r1, [sp, #16]
   29058:	bl	1e39c <__assert_fail@plt+0xc66c>
   2905c:	movw	r3, #27308	; 0x6aac
   29060:	movt	r3, #4
   29064:	ldr	r3, [r3]
   29068:	subs	r5, r0, #0
   2906c:	beq	29144 <error@@Base+0x6504>
   29070:	tst	r3, #8
   29074:	bne	2918c <error@@Base+0x654c>
   29078:	ldrb	r3, [r7, #78]	; 0x4e
   2907c:	orr	r3, r3, #16
   29080:	strb	r3, [r7, #78]	; 0x4e
   29084:	ldr	r3, [r7, #16]
   29088:	cmp	r3, #0
   2908c:	ldrbeq	r3, [r7, #78]	; 0x4e
   29090:	bne	28e58 <error@@Base+0x6218>
   29094:	lsrs	r5, r3, #7
   29098:	bne	28e58 <error@@Base+0x6218>
   2909c:	movw	r4, #29548	; 0x736c
   290a0:	movt	r4, #4
   290a4:	ldr	r3, [r4]
   290a8:	cmp	r3, #0
   290ac:	beq	28e58 <error@@Base+0x6218>
   290b0:	ldr	r3, [r3, #16]
   290b4:	cmp	r3, #0
   290b8:	beq	28e58 <error@@Base+0x6218>
   290bc:	movw	r2, #27308	; 0x6aac
   290c0:	movt	r2, #4
   290c4:	ldr	r2, [r2]
   290c8:	tst	r2, #8
   290cc:	bne	290fc <error@@Base+0x64bc>
   290d0:	str	r3, [r7, #16]
   290d4:	b	28e58 <error@@Base+0x6218>
   290d8:	mov	r2, r3
   290dc:	b	28fdc <error@@Base+0x639c>
   290e0:	mov	r0, r4
   290e4:	mov	r1, #1
   290e8:	bl	28024 <error@@Base+0x53e4>
   290ec:	ldr	r5, [r4, #56]	; 0x38
   290f0:	b	28e88 <error@@Base+0x6248>
   290f4:	mov	r5, fp
   290f8:	b	28dec <error@@Base+0x61ac>
   290fc:	ldr	r0, [sp, #16]
   29100:	bl	22b1c <__assert_fail@plt+0x10dec>
   29104:	mov	r2, #5
   29108:	mov	r0, r5
   2910c:	movw	r1, #16524	; 0x408c
   29110:	movt	r1, #3
   29114:	bl	1191c <dcgettext@plt>
   29118:	ldr	r2, [r7]
   2911c:	mov	r1, r0
   29120:	mov	r0, #1
   29124:	bl	11be0 <__printf_chk@plt>
   29128:	movw	r3, #26888	; 0x6908
   2912c:	movt	r3, #4
   29130:	ldr	r0, [r3]
   29134:	bl	11868 <fflush@plt>
   29138:	ldr	r3, [r4]
   2913c:	ldr	r3, [r3, #16]
   29140:	b	290d0 <error@@Base+0x6490>
   29144:	tst	r3, #8
   29148:	beq	29078 <error@@Base+0x6438>
   2914c:	ldr	r0, [sp, #16]
   29150:	bl	22b1c <__assert_fail@plt+0x10dec>
   29154:	movw	r1, #16488	; 0x4068
   29158:	movt	r1, #3
   2915c:	mov	r0, r5
   29160:	mov	r2, #5
   29164:	bl	1191c <dcgettext@plt>
   29168:	ldr	r2, [r7]
   2916c:	mov	r1, r0
   29170:	mov	r0, #1
   29174:	bl	11be0 <__printf_chk@plt>
   29178:	movw	r3, #26888	; 0x6908
   2917c:	movt	r3, #4
   29180:	ldr	r0, [r3]
   29184:	bl	11868 <fflush@plt>
   29188:	b	29078 <error@@Base+0x6438>
   2918c:	ldr	r0, [sp, #16]
   29190:	bl	22b1c <__assert_fail@plt+0x10dec>
   29194:	movw	r1, #16452	; 0x4044
   29198:	mov	r0, r4
   2919c:	mov	r2, #5
   291a0:	movt	r1, #3
   291a4:	b	29164 <error@@Base+0x6524>
   291a8:	bl	11934 <__stack_chk_fail@plt>
   291ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   291b0:	sub	sp, sp, #108	; 0x6c
   291b4:	ldr	r5, [r0, #72]	; 0x48
   291b8:	movw	r4, #28288	; 0x6e80
   291bc:	movt	r4, #4
   291c0:	movw	r8, #26864	; 0x68f0
   291c4:	cmp	r5, #0
   291c8:	movt	r8, #4
   291cc:	str	r1, [sp, #44]	; 0x2c
   291d0:	moveq	r5, r0
   291d4:	ldr	r2, [r4, #20]
   291d8:	ldrb	r1, [r5, #79]	; 0x4f
   291dc:	ldr	r3, [r8]
   291e0:	str	r0, [sp, #64]	; 0x40
   291e4:	cmp	r2, r1, lsr #7
   291e8:	str	r4, [sp, #56]	; 0x38
   291ec:	str	r8, [sp, #68]	; 0x44
   291f0:	str	r5, [sp, #28]
   291f4:	str	r3, [sp, #100]	; 0x64
   291f8:	beq	29e68 <error@@Base+0x7228>
   291fc:	movw	r9, #28208	; 0x6e30
   29200:	movt	r9, #4
   29204:	movw	r5, #27308	; 0x6aac
   29208:	movw	r8, #26888	; 0x6908
   2920c:	movt	r5, #4
   29210:	movt	r8, #4
   29214:	movw	ip, #29520	; 0x7350
   29218:	mov	r4, #0
   2921c:	movt	ip, #4
   29220:	str	r5, [sp, #36]	; 0x24
   29224:	str	r8, [sp, #40]	; 0x28
   29228:	str	ip, [sp, #32]
   2922c:	str	r4, [sp, #52]	; 0x34
   29230:	ldr	r5, [sp, #28]
   29234:	ldrb	r3, [r5, #79]	; 0x4f
   29238:	bfi	r3, r2, #7, #1
   2923c:	strb	r3, [r5, #79]	; 0x4f
   29240:	ldr	r8, [sp, #36]	; 0x24
   29244:	ldr	r3, [r8]
   29248:	tst	r3, #2
   2924c:	bne	29358 <error@@Base+0x6718>
   29250:	ldr	r4, [sp, #28]
   29254:	ldrb	r3, [r4, #78]	; 0x4e
   29258:	ubfx	r7, r3, #6, #1
   2925c:	cmp	r7, #0
   29260:	beq	29328 <error@@Base+0x66e8>
   29264:	ldrsh	r3, [r4, #76]	; 0x4c
   29268:	ldr	r5, [sp, #36]	; 0x24
   2926c:	cmp	r3, #0
   29270:	ldr	r3, [r5]
   29274:	ble	29394 <error@@Base+0x6754>
   29278:	tst	r3, #2
   2927c:	bne	29dd4 <error@@Base+0x7194>
   29280:	ldr	ip, [sp, #28]
   29284:	ldrb	r3, [ip, #80]	; 0x50
   29288:	tst	r3, #1
   2928c:	beq	292a4 <error@@Base+0x6664>
   29290:	ldrb	r3, [ip, #79]	; 0x4f
   29294:	tst	r3, #16
   29298:	bne	292a4 <error@@Base+0x6664>
   2929c:	mov	r0, ip
   292a0:	bl	27c90 <error@@Base+0x5050>
   292a4:	ldr	r4, [sp, #28]
   292a8:	ldrsh	r7, [r4, #76]	; 0x4c
   292ac:	ldr	r4, [sp, #52]	; 0x34
   292b0:	ldr	r2, [sp, #28]
   292b4:	orr	r4, r4, r7
   292b8:	str	r4, [sp, #52]	; 0x34
   292bc:	b	292c4 <error@@Base+0x6684>
   292c0:	mov	r2, r3
   292c4:	ldr	r3, [r2, #56]	; 0x38
   292c8:	cmp	r3, #0
   292cc:	bne	292c0 <error@@Base+0x6680>
   292d0:	ldr	r5, [sp, #52]	; 0x34
   292d4:	str	r2, [sp, #28]
   292d8:	cmp	r5, #0
   292dc:	beq	292f0 <error@@Base+0x66b0>
   292e0:	ldr	r8, [sp, #32]
   292e4:	ldr	r3, [r8]
   292e8:	cmp	r3, #0
   292ec:	beq	29f7c <error@@Base+0x733c>
   292f0:	ldr	ip, [sp, #28]
   292f4:	ldrb	r3, [ip, #78]	; 0x4e
   292f8:	add	r3, r3, #3
   292fc:	and	r3, r3, #3
   29300:	cmp	r3, #1
   29304:	bls	2a1f8 <error@@Base+0x75b8>
   29308:	ldr	r5, [sp, #28]
   2930c:	ldr	r5, [r5, #48]	; 0x30
   29310:	cmp	r5, #0
   29314:	str	r5, [sp, #28]
   29318:	beq	29f7c <error@@Base+0x733c>
   2931c:	ldr	r8, [sp, #56]	; 0x38
   29320:	ldr	r2, [r8, #20]
   29324:	b	29230 <error@@Base+0x65f0>
   29328:	and	r3, r3, #3
   2932c:	cmp	r3, #2
   29330:	beq	29670 <error@@Base+0x6a30>
   29334:	cmp	r3, #3
   29338:	bne	293a4 <error@@Base+0x6764>
   2933c:	ldr	ip, [sp, #36]	; 0x24
   29340:	ldr	r3, [ip]
   29344:	tst	r3, #2
   29348:	bne	297cc <error@@Base+0x6b8c>
   2934c:	ldr	r8, [sp, #28]
   29350:	ldrsh	r7, [r8, #76]	; 0x4c
   29354:	b	292ac <error@@Base+0x666c>
   29358:	ldr	r0, [sp, #44]	; 0x2c
   2935c:	bl	22b1c <__assert_fail@plt+0x10dec>
   29360:	mov	r2, #5
   29364:	movw	r1, #16620	; 0x40ec
   29368:	mov	r0, #0
   2936c:	movt	r1, #3
   29370:	bl	1191c <dcgettext@plt>
   29374:	ldr	r2, [r5]
   29378:	mov	r1, r0
   2937c:	mov	r0, #1
   29380:	bl	11be0 <__printf_chk@plt>
   29384:	ldr	ip, [sp, #40]	; 0x28
   29388:	ldr	r0, [ip]
   2938c:	bl	11868 <fflush@plt>
   29390:	b	29250 <error@@Base+0x6610>
   29394:	tst	r3, #2
   29398:	bne	29814 <error@@Base+0x6bd4>
   2939c:	mov	r7, #0
   293a0:	b	292ac <error@@Base+0x666c>
   293a4:	ldr	ip, [sp, #28]
   293a8:	ldr	r4, [sp, #44]	; 0x2c
   293ac:	ldr	r3, [ip, #72]	; 0x48
   293b0:	add	r4, r4, #1
   293b4:	ldrb	r1, [ip, #79]	; 0x4f
   293b8:	str	r4, [sp, #24]
   293bc:	cmp	r3, #0
   293c0:	ldrd	r4, [ip, #32]
   293c4:	ubfx	r1, r1, #4, #1
   293c8:	ldrb	r2, [ip, #80]	; 0x50
   293cc:	moveq	r3, ip
   293d0:	orrs	r8, r4, r5
   293d4:	bfi	r2, r1, #0, #1
   293d8:	strd	r4, [sp, #16]
   293dc:	strb	r2, [ip, #80]	; 0x50
   293e0:	ldrb	r2, [r3, #78]	; 0x4e
   293e4:	orr	r2, r2, #32
   293e8:	strb	r2, [r3, #78]	; 0x4e
   293ec:	beq	297b8 <error@@Base+0x6b78>
   293f0:	ldr	r6, [sp, #28]
   293f4:	b	293fc <error@@Base+0x67bc>
   293f8:	mov	r6, r4
   293fc:	ldr	r4, [r6, #56]	; 0x38
   29400:	cmp	r4, #0
   29404:	bne	293f8 <error@@Base+0x67b8>
   29408:	ldrd	r0, [sp, #16]
   2940c:	cmp	r1, #0
   29410:	cmpeq	r0, #1
   29414:	movne	r5, #0
   29418:	moveq	r5, #1
   2941c:	str	r5, [sp, #60]	; 0x3c
   29420:	bne	296c0 <error@@Base+0x6a80>
   29424:	ldr	r8, [sp, #36]	; 0x24
   29428:	ldr	r3, [r8]
   2942c:	tst	r3, #1
   29430:	beq	2946c <error@@Base+0x682c>
   29434:	ldr	r0, [sp, #24]
   29438:	bl	22b1c <__assert_fail@plt+0x10dec>
   2943c:	mov	r2, #5
   29440:	mov	r0, r4
   29444:	movw	r1, #16796	; 0x419c
   29448:	movt	r1, #3
   2944c:	bl	1191c <dcgettext@plt>
   29450:	ldr	r2, [r6]
   29454:	mov	r1, r0
   29458:	mov	r0, #1
   2945c:	bl	11be0 <__printf_chk@plt>
   29460:	ldr	ip, [sp, #40]	; 0x28
   29464:	ldr	r0, [ip]
   29468:	bl	11868 <fflush@plt>
   2946c:	ldrb	r3, [r6, #79]	; 0x4f
   29470:	tst	r3, #2
   29474:	ldr	r3, [r6, #16]
   29478:	bne	2972c <error@@Base+0x6aec>
   2947c:	cmp	r3, #0
   29480:	beq	2a3b0 <error@@Base+0x7770>
   29484:	ldr	r4, [r6, #28]
   29488:	mov	sl, #0
   2948c:	ldr	r5, [sp, #60]	; 0x3c
   29490:	mov	r7, sl
   29494:	mov	r3, r6
   29498:	str	r6, [sp, #92]	; 0x5c
   2949c:	str	r4, [sp, #48]	; 0x30
   294a0:	str	r5, [sp, #12]
   294a4:	str	r4, [sp, #80]	; 0x50
   294a8:	ldr	r8, [r3, #12]
   294ac:	cmp	r8, #0
   294b0:	beq	29654 <error@@Base+0x6a14>
   294b4:	mov	fp, #0
   294b8:	ldr	r3, [r8, #12]
   294bc:	ldr	r0, [r3, #56]	; 0x38
   294c0:	cmp	r0, #0
   294c4:	bne	294d0 <error@@Base+0x6890>
   294c8:	b	298d8 <error@@Base+0x6c98>
   294cc:	mov	r0, r3
   294d0:	ldr	r3, [r0, #56]	; 0x38
   294d4:	cmp	r3, #0
   294d8:	bne	294cc <error@@Base+0x688c>
   294dc:	str	r0, [r8, #12]
   294e0:	ldrd	r4, [r0, #32]
   294e4:	orrs	ip, r4, r5
   294e8:	beq	298a4 <error@@Base+0x6c64>
   294ec:	ldr	r3, [r8, #12]
   294f0:	ldr	r0, [r3, #56]	; 0x38
   294f4:	cmp	r0, #0
   294f8:	bne	29504 <error@@Base+0x68c4>
   294fc:	b	298c4 <error@@Base+0x6c84>
   29500:	mov	r0, r3
   29504:	ldr	r3, [r0, #56]	; 0x38
   29508:	cmp	r3, #0
   2950c:	bne	29500 <error@@Base+0x68c0>
   29510:	str	r0, [r8, #12]
   29514:	ldr	r3, [r0, #72]	; 0x48
   29518:	cmp	r3, #0
   2951c:	moveq	r3, r0
   29520:	ldrb	r3, [r3, #78]	; 0x4e
   29524:	tst	r3, #32
   29528:	bne	29858 <error@@Base+0x6c18>
   2952c:	ldr	fp, [r9]
   29530:	ldr	ip, [sp, #12]
   29534:	cmp	fp, #0
   29538:	str	r6, [r0, #68]	; 0x44
   2953c:	str	ip, [sp, #76]	; 0x4c
   29540:	beq	2955c <error@@Base+0x691c>
   29544:	ldrb	r2, [r6, #79]	; 0x4f
   29548:	ldrb	r3, [r0, #79]	; 0x4f
   2954c:	ubfx	r2, r2, #4, #1
   29550:	ubfx	fp, r3, #4, #1
   29554:	bfi	r3, r2, #4, #1
   29558:	strb	r3, [r0, #79]	; 0x4f
   2955c:	ldrd	r2, [sp, #16]
   29560:	add	r1, sp, #76	; 0x4c
   29564:	str	r1, [sp]
   29568:	ldr	r1, [sp, #24]
   2956c:	bl	28d1c <error@@Base+0x60dc>
   29570:	ldr	r3, [r9]
   29574:	cmp	r3, #0
   29578:	ldrne	r3, [r8, #12]
   2957c:	ldrbne	r2, [r3, #79]	; 0x4f
   29580:	orr	r7, r7, r0
   29584:	bfine	r2, fp, #4, #1
   29588:	movne	r0, r3
   2958c:	strbne	r2, [r3, #79]	; 0x4f
   29590:	ldrb	r3, [r8, #17]
   29594:	ldreq	r0, [r8, #12]
   29598:	tst	r3, #1
   2959c:	ldreq	ip, [sp, #76]	; 0x4c
   295a0:	ldr	r3, [r0, #56]	; 0x38
   295a4:	streq	ip, [sp, #12]
   295a8:	cmp	r3, #0
   295ac:	beq	295c4 <error@@Base+0x6984>
   295b0:	mov	r0, r3
   295b4:	ldr	r3, [r3, #56]	; 0x38
   295b8:	cmp	r3, #0
   295bc:	bne	295b0 <error@@Base+0x6970>
   295c0:	str	r0, [r8, #12]
   295c4:	ldr	r3, [r0, #72]	; 0x48
   295c8:	cmp	r3, #0
   295cc:	moveq	r3, r0
   295d0:	ldrb	r2, [r3, #78]	; 0x4e
   295d4:	ldr	r3, [r3, #48]	; 0x30
   295d8:	add	r2, r2, #3
   295dc:	and	r2, r2, #3
   295e0:	cmp	r2, #1
   295e4:	orrls	sl, sl, #1
   295e8:	cmp	r3, #0
   295ec:	bne	295d0 <error@@Base+0x6990>
   295f0:	cmp	r7, #0
   295f4:	beq	29608 <error@@Base+0x69c8>
   295f8:	ldr	ip, [sp, #32]
   295fc:	ldr	r3, [ip]
   29600:	cmp	r3, #0
   29604:	beq	29654 <error@@Base+0x6a14>
   29608:	cmp	sl, #0
   2960c:	bne	29644 <error@@Base+0x6a04>
   29610:	ldrd	r2, [r0, #32]
   29614:	orrs	r1, r2, r3
   29618:	movne	r0, r2
   2961c:	movne	r1, r3
   29620:	beq	298cc <error@@Base+0x6c8c>
   29624:	cmp	r5, #0
   29628:	cmpeq	r4, #1
   2962c:	movne	r3, #0
   29630:	moveq	r3, #1
   29634:	cmp	r5, r1
   29638:	cmpeq	r4, r0
   2963c:	movne	r3, #1
   29640:	strb	r3, [r8, #16]
   29644:	mov	fp, r8
   29648:	ldr	r8, [r8]
   2964c:	cmp	r8, #0
   29650:	bne	294b8 <error@@Base+0x6878>
   29654:	ldr	r4, [sp, #48]	; 0x30
   29658:	cmp	r4, #0
   2965c:	beq	298e0 <error@@Base+0x6ca0>
   29660:	ldr	r5, [r4]
   29664:	ldr	r3, [r4, #12]
   29668:	str	r5, [sp, #48]	; 0x30
   2966c:	b	294a8 <error@@Base+0x6868>
   29670:	ldr	r4, [sp, #36]	; 0x24
   29674:	ldr	r3, [r4]
   29678:	tst	r3, #2
   2967c:	beq	2939c <error@@Base+0x675c>
   29680:	ldr	r0, [sp, #44]	; 0x2c
   29684:	bl	22b1c <__assert_fail@plt+0x10dec>
   29688:	mov	r0, r7
   2968c:	mov	r2, #5
   29690:	movw	r1, #16736	; 0x4160
   29694:	movt	r1, #3
   29698:	bl	1191c <dcgettext@plt>
   2969c:	ldr	r5, [sp, #28]
   296a0:	ldr	r2, [r5]
   296a4:	mov	r1, r0
   296a8:	mov	r0, #1
   296ac:	bl	11be0 <__printf_chk@plt>
   296b0:	ldr	r8, [sp, #40]	; 0x28
   296b4:	ldr	r0, [r8]
   296b8:	bl	11868 <fflush@plt>
   296bc:	b	292ac <error@@Base+0x666c>
   296c0:	ldrd	r0, [sp, #16]
   296c4:	movw	r2, #51711	; 0xc9ff
   296c8:	movt	r2, #64410	; 0xfb9a
   296cc:	mvn	r3, #0
   296d0:	subs	r0, r0, #3
   296d4:	sbc	r1, r1, #0
   296d8:	cmp	r1, r3
   296dc:	cmpeq	r0, r2
   296e0:	bhi	2946c <error@@Base+0x682c>
   296e4:	ldrb	r3, [r6, #78]	; 0x4e
   296e8:	tst	r3, #8
   296ec:	beq	2946c <error@@Base+0x682c>
   296f0:	ldr	r0, [sp, #16]
   296f4:	sub	r4, r0, #3
   296f8:	bics	r4, r4, #-1073741824	; 0xc0000000
   296fc:	bne	2a290 <error@@Base+0x7650>
   29700:	movw	r3, #51711	; 0xc9ff
   29704:	movt	r3, #15258	; 0x3b9a
   29708:	rsb	r3, r4, r3
   2970c:	ldrd	r4, [sp, #16]
   29710:	adds	r4, r4, r3
   29714:	adc	r5, r5, r3, asr #31
   29718:	ldrb	r3, [r6, #79]	; 0x4f
   2971c:	strd	r4, [sp, #16]
   29720:	tst	r3, #2
   29724:	ldr	r3, [r6, #16]
   29728:	beq	2947c <error@@Base+0x683c>
   2972c:	cmp	r3, #0
   29730:	bne	29484 <error@@Base+0x6844>
   29734:	ldrb	r3, [r6, #78]	; 0x4e
   29738:	lsrs	r5, r3, #7
   2973c:	bne	29484 <error@@Base+0x6844>
   29740:	movw	r4, #29548	; 0x736c
   29744:	movt	r4, #4
   29748:	ldr	r3, [r4]
   2974c:	cmp	r3, #0
   29750:	beq	29484 <error@@Base+0x6844>
   29754:	ldr	r2, [r3, #16]
   29758:	cmp	r2, #0
   2975c:	beq	29484 <error@@Base+0x6844>
   29760:	ldr	r8, [sp, #36]	; 0x24
   29764:	ldr	r3, [r8]
   29768:	tst	r3, #8
   2976c:	beq	297b0 <error@@Base+0x6b70>
   29770:	ldr	r0, [sp, #24]
   29774:	bl	22b1c <__assert_fail@plt+0x10dec>
   29778:	mov	r2, #5
   2977c:	mov	r0, r5
   29780:	movw	r1, #16904	; 0x4208
   29784:	movt	r1, #3
   29788:	bl	1191c <dcgettext@plt>
   2978c:	ldr	r2, [r6]
   29790:	mov	r1, r0
   29794:	mov	r0, #1
   29798:	bl	11be0 <__printf_chk@plt>
   2979c:	ldr	ip, [sp, #40]	; 0x28
   297a0:	ldr	r0, [ip]
   297a4:	bl	11868 <fflush@plt>
   297a8:	ldr	r3, [r4]
   297ac:	ldr	r2, [r3, #16]
   297b0:	str	r2, [r6, #16]
   297b4:	b	29484 <error@@Base+0x6844>
   297b8:	ldr	r0, [sp, #28]
   297bc:	mov	r1, #1
   297c0:	bl	28024 <error@@Base+0x53e4>
   297c4:	strd	r0, [sp, #16]
   297c8:	b	293f0 <error@@Base+0x67b0>
   297cc:	ldr	r0, [sp, #44]	; 0x2c
   297d0:	bl	22b1c <__assert_fail@plt+0x10dec>
   297d4:	mov	r0, r7
   297d8:	mov	r2, #5
   297dc:	movw	r1, #16764	; 0x417c
   297e0:	movt	r1, #3
   297e4:	bl	1191c <dcgettext@plt>
   297e8:	ldr	r4, [sp, #28]
   297ec:	ldr	r2, [r4]
   297f0:	mov	r1, r0
   297f4:	mov	r0, #1
   297f8:	bl	11be0 <__printf_chk@plt>
   297fc:	ldr	r5, [sp, #40]	; 0x28
   29800:	ldr	r0, [r5]
   29804:	bl	11868 <fflush@plt>
   29808:	ldr	r8, [sp, #28]
   2980c:	ldrsh	r7, [r8, #76]	; 0x4c
   29810:	b	292ac <error@@Base+0x666c>
   29814:	ldr	r0, [sp, #44]	; 0x2c
   29818:	mov	r7, #0
   2981c:	bl	22b1c <__assert_fail@plt+0x10dec>
   29820:	mov	r2, #5
   29824:	movw	r1, #16700	; 0x413c
   29828:	mov	r0, #0
   2982c:	movt	r1, #3
   29830:	bl	1191c <dcgettext@plt>
   29834:	ldr	r8, [sp, #28]
   29838:	ldr	r2, [r8]
   2983c:	mov	r1, r0
   29840:	mov	r0, #1
   29844:	bl	11be0 <__printf_chk@plt>
   29848:	ldr	ip, [sp, #40]	; 0x28
   2984c:	ldr	r0, [ip]
   29850:	bl	11868 <fflush@plt>
   29854:	b	292ac <error@@Base+0x666c>
   29858:	mov	r2, #5
   2985c:	movw	r1, #16560	; 0x40b0
   29860:	mov	r0, #0
   29864:	movt	r1, #3
   29868:	bl	1191c <dcgettext@plt>
   2986c:	ldr	r3, [r8, #12]
   29870:	ldr	r2, [r6]
   29874:	ldr	r3, [r3]
   29878:	mov	r1, r0
   2987c:	mov	r0, #0
   29880:	bl	22c40 <error@@Base>
   29884:	cmp	fp, #0
   29888:	ldreq	ip, [r8]
   2988c:	ldrne	r3, [r8]
   29890:	streq	ip, [r6, #12]
   29894:	moveq	r8, ip
   29898:	strne	r3, [fp]
   2989c:	ldrne	r8, [r8]
   298a0:	b	2964c <error@@Base+0x6a0c>
   298a4:	mov	r1, #1
   298a8:	bl	28024 <error@@Base+0x53e4>
   298ac:	ldr	r3, [r8, #12]
   298b0:	mov	r4, r0
   298b4:	ldr	r0, [r3, #56]	; 0x38
   298b8:	mov	r5, r1
   298bc:	cmp	r0, #0
   298c0:	bne	29504 <error@@Base+0x68c4>
   298c4:	mov	r0, r3
   298c8:	b	29514 <error@@Base+0x68d4>
   298cc:	mov	r1, #1
   298d0:	bl	28024 <error@@Base+0x53e4>
   298d4:	b	29624 <error@@Base+0x69e4>
   298d8:	mov	r0, r3
   298dc:	b	294e0 <error@@Base+0x68a0>
   298e0:	ldr	r8, [sp, #12]
   298e4:	cmp	r8, #0
   298e8:	bne	29900 <error@@Base+0x6cc0>
   298ec:	movw	r3, #28168	; 0x6e08
   298f0:	movt	r3, #4
   298f4:	ldr	r3, [r3]
   298f8:	cmp	r3, #0
   298fc:	beq	29a74 <error@@Base+0x6e34>
   29900:	ldr	r4, [r6, #12]
   29904:	cmp	r4, #0
   29908:	beq	29a74 <error@@Base+0x6e34>
   2990c:	mov	r5, r7
   29910:	mov	fp, r9
   29914:	mov	r7, r4
   29918:	ldr	r0, [r7, #12]
   2991c:	ldrb	r3, [r0, #79]	; 0x4f
   29920:	tst	r3, #4
   29924:	beq	29a60 <error@@Base+0x6e20>
   29928:	ldrd	r8, [r0, #32]
   2992c:	orrs	ip, r8, r9
   29930:	beq	29d64 <error@@Base+0x7124>
   29934:	ldr	r3, [r0, #56]	; 0x38
   29938:	cmp	r3, #0
   2993c:	bne	29948 <error@@Base+0x6d08>
   29940:	b	29d84 <error@@Base+0x7144>
   29944:	mov	r3, r2
   29948:	ldr	r2, [r3, #56]	; 0x38
   2994c:	cmp	r2, #0
   29950:	bne	29944 <error@@Base+0x6d04>
   29954:	str	r3, [r7, #12]
   29958:	ldr	r4, [fp]
   2995c:	str	r6, [r3, #68]	; 0x44
   29960:	cmp	r4, #0
   29964:	beq	29980 <error@@Base+0x6d40>
   29968:	ldrb	r0, [r6, #79]	; 0x4f
   2996c:	ldrb	r1, [r3, #79]	; 0x4f
   29970:	ubfx	r0, r0, #4, #1
   29974:	ubfx	r4, r1, #4, #1
   29978:	bfi	r1, r0, #4, #1
   2997c:	strb	r1, [r3, #79]	; 0x4f
   29980:	ldr	ip, [sp, #56]	; 0x38
   29984:	mov	r0, r3
   29988:	ldrb	r1, [r3, #79]	; 0x4f
   2998c:	ldr	lr, [ip, #20]
   29990:	rsbs	lr, lr, #1
   29994:	movcc	lr, #0
   29998:	bfi	r1, lr, #7, #1
   2999c:	strb	r1, [r3, #79]	; 0x4f
   299a0:	ldr	r1, [sp, #24]
   299a4:	bl	291ac <error@@Base+0x656c>
   299a8:	ldr	r3, [fp]
   299ac:	cmp	r3, #0
   299b0:	ldrne	r1, [r7, #12]
   299b4:	ldreq	r3, [r7, #12]
   299b8:	orr	r5, r5, r0
   299bc:	ldrbne	r0, [r1, #79]	; 0x4f
   299c0:	movne	r3, r1
   299c4:	bfine	r0, r4, #4, #1
   299c8:	strbne	r0, [r1, #79]	; 0x4f
   299cc:	ldr	r1, [r3, #56]	; 0x38
   299d0:	cmp	r1, #0
   299d4:	beq	299f4 <error@@Base+0x6db4>
   299d8:	mov	r3, r1
   299dc:	b	299e4 <error@@Base+0x6da4>
   299e0:	mov	r3, r2
   299e4:	ldr	r2, [r3, #56]	; 0x38
   299e8:	cmp	r2, #0
   299ec:	bne	299e0 <error@@Base+0x6da0>
   299f0:	str	r3, [r7, #12]
   299f4:	ldr	r1, [r3, #72]	; 0x48
   299f8:	cmp	r1, #0
   299fc:	moveq	r1, r3
   29a00:	ldrb	r2, [r1, #78]	; 0x4e
   29a04:	ldr	r1, [r1, #48]	; 0x30
   29a08:	add	r2, r2, #3
   29a0c:	and	r2, r2, #3
   29a10:	cmp	r2, #1
   29a14:	orrls	sl, sl, #1
   29a18:	cmp	r1, #0
   29a1c:	bne	29a00 <error@@Base+0x6dc0>
   29a20:	cmp	r5, #0
   29a24:	beq	29a38 <error@@Base+0x6df8>
   29a28:	ldr	r4, [sp, #32]
   29a2c:	ldr	r1, [r4]
   29a30:	cmp	r1, #0
   29a34:	beq	29a6c <error@@Base+0x6e2c>
   29a38:	cmp	sl, #0
   29a3c:	bne	29a60 <error@@Base+0x6e20>
   29a40:	ldrb	r1, [r6, #79]	; 0x4f
   29a44:	tst	r1, #2
   29a48:	beq	29d8c <error@@Base+0x714c>
   29a4c:	ldr	r1, [r6, #16]
   29a50:	cmp	r1, #0
   29a54:	movne	r3, #1
   29a58:	beq	29d8c <error@@Base+0x714c>
   29a5c:	strb	r3, [r7, #16]
   29a60:	ldr	r7, [r7]
   29a64:	cmp	r7, #0
   29a68:	bne	29918 <error@@Base+0x6cd8>
   29a6c:	mov	r7, r5
   29a70:	mov	r9, fp
   29a74:	ldr	r4, [sp, #28]
   29a78:	ldr	r2, [r6, #72]	; 0x48
   29a7c:	ldr	r5, [sp, #36]	; 0x24
   29a80:	ldr	r3, [r4, #72]	; 0x48
   29a84:	cmp	r2, #0
   29a88:	moveq	r2, r6
   29a8c:	cmp	r3, #0
   29a90:	ldrb	r1, [r2, #78]	; 0x4e
   29a94:	ldr	r0, [r5]
   29a98:	moveq	r3, r4
   29a9c:	bfc	r1, #5, #1
   29aa0:	strb	r1, [r2, #78]	; 0x4e
   29aa4:	tst	r0, #2
   29aa8:	ldrb	r2, [r3, #78]	; 0x4e
   29aac:	bfc	r2, #5, #1
   29ab0:	strb	r2, [r3, #78]	; 0x4e
   29ab4:	beq	29af0 <error@@Base+0x6eb0>
   29ab8:	ldr	r0, [sp, #24]
   29abc:	bl	22b1c <__assert_fail@plt+0x10dec>
   29ac0:	mov	r2, #5
   29ac4:	movw	r1, #16936	; 0x4228
   29ac8:	mov	r0, #0
   29acc:	movt	r1, #3
   29ad0:	bl	1191c <dcgettext@plt>
   29ad4:	ldr	r2, [r6]
   29ad8:	mov	r1, r0
   29adc:	mov	r0, #1
   29ae0:	bl	11be0 <__printf_chk@plt>
   29ae4:	ldr	r8, [sp, #40]	; 0x28
   29ae8:	ldr	r0, [r8]
   29aec:	bl	11868 <fflush@plt>
   29af0:	cmp	sl, #0
   29af4:	bne	29f20 <error@@Base+0x72e0>
   29af8:	cmp	r7, #0
   29afc:	bne	2a14c <error@@Base+0x750c>
   29b00:	ldrb	r3, [r6, #78]	; 0x4e
   29b04:	and	r3, r3, #3
   29b08:	cmp	r3, #1
   29b0c:	beq	2a3a0 <error@@Base+0x7760>
   29b10:	ldr	r4, [r6, #12]
   29b14:	cmp	r4, #0
   29b18:	beq	2a53c <error@@Base+0x78fc>
   29b1c:	ldr	r7, [sp, #60]	; 0x3c
   29b20:	mov	r5, #0
   29b24:	ldr	sl, [sp, #12]
   29b28:	mov	fp, r9
   29b2c:	ldr	r0, [r4, #12]
   29b30:	ldrd	r2, [r0, #32]
   29b34:	orrs	r8, r2, r3
   29b38:	beq	29dac <error@@Base+0x716c>
   29b3c:	ldr	ip, [r0, #56]	; 0x38
   29b40:	cmp	ip, #0
   29b44:	bne	29b50 <error@@Base+0x6f10>
   29b48:	b	29dcc <error@@Base+0x718c>
   29b4c:	mov	ip, r1
   29b50:	ldr	r1, [ip, #56]	; 0x38
   29b54:	cmp	r1, #0
   29b58:	bne	29b4c <error@@Base+0x6f0c>
   29b5c:	str	ip, [r4, #12]
   29b60:	ldrb	r1, [r4, #17]
   29b64:	ands	lr, r1, #1
   29b68:	beq	29d4c <error@@Base+0x710c>
   29b6c:	ldrb	r1, [r4, #16]
   29b70:	ldrd	r8, [sp, #16]
   29b74:	cmp	r9, r3
   29b78:	cmpeq	r8, r2
   29b7c:	movcs	r0, r7
   29b80:	orrcc	r0, r7, #1
   29b84:	cmp	r7, #0
   29b88:	orr	r1, r1, r0
   29b8c:	uxtb	r0, r1
   29b90:	strb	r0, [r4, #16]
   29b94:	bne	29bb8 <error@@Base+0x6f78>
   29b98:	ldr	r9, [sp, #36]	; 0x24
   29b9c:	ldr	r1, [r9]
   29ba0:	tst	r1, #3
   29ba4:	beq	29bb8 <error@@Base+0x6f78>
   29ba8:	cmp	lr, #0
   29bac:	beq	29e10 <error@@Base+0x71d0>
   29bb0:	tst	r1, #2
   29bb4:	bne	2a008 <error@@Base+0x73c8>
   29bb8:	ldr	r4, [r4]
   29bbc:	cmp	r4, #0
   29bc0:	bne	29b2c <error@@Base+0x6eec>
   29bc4:	mov	r9, fp
   29bc8:	str	sl, [sp, #12]
   29bcc:	ldr	r3, [r6, #72]	; 0x48
   29bd0:	cmp	r3, #0
   29bd4:	beq	29be4 <error@@Base+0x6fa4>
   29bd8:	ldr	r7, [r6, #12]
   29bdc:	cmp	r7, #0
   29be0:	beq	2a348 <error@@Base+0x7708>
   29be4:	ldr	r8, [sp, #60]	; 0x3c
   29be8:	cmp	r8, #0
   29bec:	bne	29c58 <error@@Base+0x7018>
   29bf0:	ldrb	r3, [r6, #78]	; 0x4e
   29bf4:	lsrs	r3, r3, #7
   29bf8:	beq	29c58 <error@@Base+0x7018>
   29bfc:	cmp	r5, #0
   29c00:	bne	29c58 <error@@Base+0x7018>
   29c04:	ldr	r3, [r6, #16]
   29c08:	cmp	r3, #0
   29c0c:	bne	29c58 <error@@Base+0x7018>
   29c10:	movw	r3, #28168	; 0x6e08
   29c14:	movt	r3, #4
   29c18:	ldr	r3, [r3]
   29c1c:	cmp	r3, #0
   29c20:	bne	29c58 <error@@Base+0x7018>
   29c24:	ldr	ip, [sp, #36]	; 0x24
   29c28:	ldr	r3, [ip]
   29c2c:	tst	r3, #2
   29c30:	bne	2a060 <error@@Base+0x7420>
   29c34:	mov	r0, r6
   29c38:	bl	28888 <error@@Base+0x5c48>
   29c3c:	ldr	r3, [r6, #4]
   29c40:	str	r3, [r6]
   29c44:	ldr	r6, [r6, #48]	; 0x30
   29c48:	cmp	r6, #0
   29c4c:	bne	29c3c <error@@Base+0x6ffc>
   29c50:	mov	r7, #0
   29c54:	b	292ac <error@@Base+0x666c>
   29c58:	ldr	r5, [sp, #12]
   29c5c:	cmp	r5, #0
   29c60:	beq	29f84 <error@@Base+0x7344>
   29c64:	ldr	r5, [sp, #36]	; 0x24
   29c68:	ldr	r3, [r5]
   29c6c:	tst	r3, #1
   29c70:	bne	2a47c <error@@Base+0x783c>
   29c74:	ldm	r6, {r0, r1}
   29c78:	cmp	r0, r1
   29c7c:	beq	29cac <error@@Base+0x706c>
   29c80:	ldrb	r2, [r0]
   29c84:	ldrb	r3, [r1]
   29c88:	cmp	r3, r2
   29c8c:	beq	2a2ec <error@@Base+0x76ac>
   29c90:	ldr	r8, [sp, #36]	; 0x24
   29c94:	ldr	r3, [r8]
   29c98:	tst	r3, #1
   29c9c:	bne	2a2b8 <error@@Base+0x7678>
   29ca0:	ldrb	r3, [r6, #79]	; 0x4f
   29ca4:	orr	r3, r3, #32
   29ca8:	strb	r3, [r6, #79]	; 0x4f
   29cac:	ldr	r0, [r6, #16]
   29cb0:	cmp	r0, #0
   29cb4:	beq	2a4f0 <error@@Base+0x78b0>
   29cb8:	bl	15480 <__assert_fail@plt+0x3750>
   29cbc:	movw	r3, #29692	; 0x73fc
   29cc0:	movt	r3, #4
   29cc4:	ldr	r3, [r3]
   29cc8:	cmp	r3, #0
   29ccc:	beq	29ffc <error@@Base+0x73bc>
   29cd0:	ldr	r3, [r6, #16]
   29cd4:	ldr	r3, [r3, #24]
   29cd8:	cmp	r3, #0
   29cdc:	strheq	r3, [r6, #76]	; 0x4c
   29ce0:	bne	29ffc <error@@Base+0x73bc>
   29ce4:	mov	r0, r6
   29ce8:	bl	28888 <error@@Base+0x5c48>
   29cec:	ldrb	r3, [r6, #78]	; 0x4e
   29cf0:	and	r3, r3, #3
   29cf4:	cmp	r3, #3
   29cf8:	beq	2a4b8 <error@@Base+0x7878>
   29cfc:	ldr	r4, [sp, #36]	; 0x24
   29d00:	ldr	r3, [r4]
   29d04:	tst	r3, #2
   29d08:	beq	2939c <error@@Base+0x675c>
   29d0c:	ldr	r0, [sp, #44]	; 0x2c
   29d10:	mov	r7, #0
   29d14:	bl	22b1c <__assert_fail@plt+0x10dec>
   29d18:	mov	r2, #5
   29d1c:	movw	r1, #17576	; 0x44a8
   29d20:	mov	r0, #0
   29d24:	movt	r1, #3
   29d28:	bl	1191c <dcgettext@plt>
   29d2c:	ldr	r2, [r6]
   29d30:	mov	r1, r0
   29d34:	mov	r0, #1
   29d38:	bl	11be0 <__printf_chk@plt>
   29d3c:	ldr	r5, [sp, #40]	; 0x28
   29d40:	ldr	r0, [r5]
   29d44:	bl	11868 <fflush@plt>
   29d48:	b	292ac <error@@Base+0x666c>
   29d4c:	cmp	r3, #0
   29d50:	cmpeq	r2, #1
   29d54:	beq	29e48 <error@@Base+0x7208>
   29d58:	ldrb	r1, [r4, #16]
   29d5c:	orr	r5, r5, r1
   29d60:	b	29b70 <error@@Base+0x6f30>
   29d64:	mov	r1, #1
   29d68:	bl	28024 <error@@Base+0x53e4>
   29d6c:	mov	r8, r0
   29d70:	ldr	r0, [r7, #12]
   29d74:	mov	r9, r1
   29d78:	ldr	r3, [r0, #56]	; 0x38
   29d7c:	cmp	r3, #0
   29d80:	bne	29948 <error@@Base+0x6d08>
   29d84:	mov	r3, r0
   29d88:	b	29958 <error@@Base+0x6d18>
   29d8c:	ldrd	r0, [r3, #32]
   29d90:	orrs	ip, r0, r1
   29d94:	beq	29e58 <error@@Base+0x7218>
   29d98:	cmp	r9, r1
   29d9c:	cmpeq	r8, r0
   29da0:	moveq	r3, #0
   29da4:	movne	r3, #1
   29da8:	b	29a5c <error@@Base+0x6e1c>
   29dac:	mov	r1, #1
   29db0:	bl	28024 <error@@Base+0x53e4>
   29db4:	mov	r2, r0
   29db8:	ldr	r0, [r4, #12]
   29dbc:	mov	r3, r1
   29dc0:	ldr	ip, [r0, #56]	; 0x38
   29dc4:	cmp	ip, #0
   29dc8:	bne	29b50 <error@@Base+0x6f10>
   29dcc:	mov	ip, r0
   29dd0:	b	29b60 <error@@Base+0x6f20>
   29dd4:	ldr	r0, [sp, #44]	; 0x2c
   29dd8:	bl	22b1c <__assert_fail@plt+0x10dec>
   29ddc:	mov	r2, #5
   29de0:	movw	r1, #16652	; 0x410c
   29de4:	mov	r0, #0
   29de8:	movt	r1, #3
   29dec:	bl	1191c <dcgettext@plt>
   29df0:	ldr	r2, [r4]
   29df4:	mov	r1, r0
   29df8:	mov	r0, #1
   29dfc:	bl	11be0 <__printf_chk@plt>
   29e00:	ldr	r8, [sp, #40]	; 0x28
   29e04:	ldr	r0, [r8]
   29e08:	bl	11868 <fflush@plt>
   29e0c:	b	29280 <error@@Base+0x6640>
   29e10:	cmp	r3, #0
   29e14:	cmpeq	r2, #1
   29e18:	beq	2a1d4 <error@@Base+0x7594>
   29e1c:	cmp	r0, #0
   29e20:	beq	2a268 <error@@Base+0x7628>
   29e24:	tst	r1, #1
   29e28:	beq	29bb8 <error@@Base+0x6f78>
   29e2c:	movw	r1, #17208	; 0x4338
   29e30:	mov	r0, r7
   29e34:	movt	r1, #3
   29e38:	mov	r2, #5
   29e3c:	bl	1191c <dcgettext@plt>
   29e40:	mov	r8, r0
   29e44:	b	2a020 <error@@Base+0x73e0>
   29e48:	ldrb	r1, [ip, #79]	; 0x4f
   29e4c:	tst	r1, #4
   29e50:	moveq	sl, #1
   29e54:	b	29d58 <error@@Base+0x7118>
   29e58:	mov	r0, r3
   29e5c:	mov	r1, #1
   29e60:	bl	28024 <error@@Base+0x53e4>
   29e64:	b	29d98 <error@@Base+0x7158>
   29e68:	ldrb	r3, [r5, #78]	; 0x4e
   29e6c:	tst	r3, #64	; 0x40
   29e70:	beq	29e94 <error@@Base+0x7254>
   29e74:	ldrsh	r0, [r5, #76]	; 0x4c
   29e78:	cmp	r0, #0
   29e7c:	ble	29e94 <error@@Base+0x7254>
   29e80:	tst	r1, #16
   29e84:	bne	29e94 <error@@Base+0x7254>
   29e88:	ldrb	r1, [r5, #80]	; 0x50
   29e8c:	tst	r1, #1
   29e90:	bne	291fc <error@@Base+0x65bc>
   29e94:	movw	r2, #27308	; 0x6aac
   29e98:	movt	r2, #4
   29e9c:	ldr	r2, [r2]
   29ea0:	tst	r2, #2
   29ea4:	beq	29ef0 <error@@Base+0x72b0>
   29ea8:	ldr	r0, [sp, #44]	; 0x2c
   29eac:	bl	22b1c <__assert_fail@plt+0x10dec>
   29eb0:	mov	r2, #5
   29eb4:	movw	r1, #16600	; 0x40d8
   29eb8:	mov	r0, #0
   29ebc:	movt	r1, #3
   29ec0:	bl	1191c <dcgettext@plt>
   29ec4:	ldr	r9, [sp, #64]	; 0x40
   29ec8:	ldr	r2, [r9]
   29ecc:	mov	r1, r0
   29ed0:	mov	r0, #1
   29ed4:	bl	11be0 <__printf_chk@plt>
   29ed8:	movw	r3, #26888	; 0x6908
   29edc:	movt	r3, #4
   29ee0:	ldr	r0, [r3]
   29ee4:	bl	11868 <fflush@plt>
   29ee8:	ldr	ip, [sp, #28]
   29eec:	ldrb	r3, [ip, #78]	; 0x4e
   29ef0:	and	r3, r3, #3
   29ef4:	cmp	r3, #3
   29ef8:	movne	r0, #0
   29efc:	ldreq	r4, [sp, #28]
   29f00:	ldrsheq	r0, [r4, #76]	; 0x4c
   29f04:	ldr	ip, [sp, #68]	; 0x44
   29f08:	ldr	r2, [sp, #100]	; 0x64
   29f0c:	ldr	r3, [ip]
   29f10:	cmp	r2, r3
   29f14:	bne	2a28c <error@@Base+0x764c>
   29f18:	add	sp, sp, #108	; 0x6c
   29f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29f20:	mov	r0, r6
   29f24:	mov	r1, #1
   29f28:	bl	18c28 <__assert_fail@plt+0x6ef8>
   29f2c:	ldr	ip, [sp, #36]	; 0x24
   29f30:	ldr	r3, [ip]
   29f34:	tst	r3, #2
   29f38:	beq	2939c <error@@Base+0x675c>
   29f3c:	ldr	r0, [sp, #44]	; 0x2c
   29f40:	mov	r7, #0
   29f44:	bl	22b1c <__assert_fail@plt+0x10dec>
   29f48:	mov	r2, #5
   29f4c:	movw	r1, #16984	; 0x4258
   29f50:	mov	r0, #0
   29f54:	movt	r1, #3
   29f58:	bl	1191c <dcgettext@plt>
   29f5c:	ldr	r2, [r6]
   29f60:	mov	r1, r0
   29f64:	mov	r0, #1
   29f68:	bl	11be0 <__printf_chk@plt>
   29f6c:	ldr	r4, [sp, #40]	; 0x28
   29f70:	ldr	r0, [r4]
   29f74:	bl	11868 <fflush@plt>
   29f78:	b	292ac <error@@Base+0x666c>
   29f7c:	ldr	r0, [sp, #52]	; 0x34
   29f80:	b	29f04 <error@@Base+0x72c4>
   29f84:	ldr	r3, [r6, #16]
   29f88:	cmp	r3, #0
   29f8c:	beq	2a098 <error@@Base+0x7458>
   29f90:	movw	r3, #28168	; 0x6e08
   29f94:	movt	r3, #4
   29f98:	ldr	r3, [r3]
   29f9c:	cmp	r3, #0
   29fa0:	beq	2a098 <error@@Base+0x7458>
   29fa4:	ldr	r8, [sp, #36]	; 0x24
   29fa8:	movw	r4, #27308	; 0x6aac
   29fac:	movt	r4, #4
   29fb0:	ldr	r3, [r8]
   29fb4:	tst	r3, #2
   29fb8:	beq	29c6c <error@@Base+0x702c>
   29fbc:	ldr	r0, [sp, #44]	; 0x2c
   29fc0:	bl	22b1c <__assert_fail@plt+0x10dec>
   29fc4:	mov	r2, #5
   29fc8:	ldr	r0, [sp, #12]
   29fcc:	movw	r1, #17420	; 0x440c
   29fd0:	movt	r1, #3
   29fd4:	bl	1191c <dcgettext@plt>
   29fd8:	ldr	r2, [r6]
   29fdc:	mov	r1, r0
   29fe0:	mov	r0, #1
   29fe4:	bl	11be0 <__printf_chk@plt>
   29fe8:	ldr	ip, [sp, #40]	; 0x28
   29fec:	ldr	r0, [ip]
   29ff0:	bl	11868 <fflush@plt>
   29ff4:	ldr	r3, [r4]
   29ff8:	b	29c6c <error@@Base+0x702c>
   29ffc:	mov	r0, r6
   2a000:	bl	15744 <__assert_fail@plt+0x3a14>
   2a004:	b	29cec <error@@Base+0x70ac>
   2a008:	movw	r1, #17104	; 0x42d0
   2a00c:	mov	r0, r7
   2a010:	movt	r1, #3
   2a014:	mov	r2, #5
   2a018:	bl	1191c <dcgettext@plt>
   2a01c:	mov	r8, r0
   2a020:	cmp	r8, #0
   2a024:	beq	29bb8 <error@@Base+0x6f78>
   2a028:	ldr	r0, [sp, #24]
   2a02c:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a030:	ldr	r2, [r4, #4]
   2a034:	mov	r1, r8
   2a038:	mov	r0, #1
   2a03c:	cmp	r2, #0
   2a040:	ldreq	r3, [r4, #12]
   2a044:	ldreq	r2, [r3]
   2a048:	ldr	r3, [r6]
   2a04c:	bl	11be0 <__printf_chk@plt>
   2a050:	ldr	ip, [sp, #40]	; 0x28
   2a054:	ldr	r0, [ip]
   2a058:	bl	11868 <fflush@plt>
   2a05c:	b	29bb8 <error@@Base+0x6f78>
   2a060:	ldr	r0, [sp, #44]	; 0x2c
   2a064:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a068:	mov	r2, #5
   2a06c:	ldr	r0, [sp, #60]	; 0x3c
   2a070:	movw	r1, #17360	; 0x43d0
   2a074:	movt	r1, #3
   2a078:	bl	1191c <dcgettext@plt>
   2a07c:	ldr	r2, [r6]
   2a080:	mov	r1, r0
   2a084:	mov	r0, #1
   2a088:	bl	11be0 <__printf_chk@plt>
   2a08c:	ldr	r4, [sp, #40]	; 0x28
   2a090:	ldr	r0, [r4]
   2a094:	bl	11868 <fflush@plt>
   2a098:	ldr	r4, [sp, #36]	; 0x24
   2a09c:	ldr	r3, [r4]
   2a0a0:	tst	r3, #2
   2a0a4:	beq	29c34 <error@@Base+0x6ff4>
   2a0a8:	ldr	r0, [sp, #44]	; 0x2c
   2a0ac:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a0b0:	mov	r2, #5
   2a0b4:	movw	r1, #17460	; 0x4434
   2a0b8:	mov	r0, #0
   2a0bc:	movt	r1, #3
   2a0c0:	bl	1191c <dcgettext@plt>
   2a0c4:	ldr	r2, [r6]
   2a0c8:	mov	r1, r0
   2a0cc:	mov	r0, #1
   2a0d0:	bl	11be0 <__printf_chk@plt>
   2a0d4:	ldm	r6, {r0, r1}
   2a0d8:	cmp	r0, r1
   2a0dc:	beq	2a130 <error@@Base+0x74f0>
   2a0e0:	ldrb	r2, [r0]
   2a0e4:	ldrb	r3, [r1]
   2a0e8:	cmp	r3, r2
   2a0ec:	bne	2a10c <error@@Base+0x74cc>
   2a0f0:	cmp	r3, #0
   2a0f4:	beq	2a130 <error@@Base+0x74f0>
   2a0f8:	add	r0, r0, #1
   2a0fc:	add	r1, r1, #1
   2a100:	bl	1182c <strcmp@plt>
   2a104:	cmp	r0, #0
   2a108:	beq	2a130 <error@@Base+0x74f0>
   2a10c:	mov	r2, #5
   2a110:	movw	r1, #17492	; 0x4454
   2a114:	mov	r0, #0
   2a118:	movt	r1, #3
   2a11c:	bl	1191c <dcgettext@plt>
   2a120:	ldr	r2, [r6, #4]
   2a124:	mov	r1, r0
   2a128:	mov	r0, #1
   2a12c:	bl	11be0 <__printf_chk@plt>
   2a130:	movw	r0, #2956	; 0xb8c
   2a134:	movt	r0, #3
   2a138:	bl	11a9c <puts@plt>
   2a13c:	ldr	r4, [sp, #40]	; 0x28
   2a140:	ldr	r0, [r4]
   2a144:	bl	11868 <fflush@plt>
   2a148:	b	29c34 <error@@Base+0x6ff4>
   2a14c:	strh	r7, [r6, #76]	; 0x4c
   2a150:	mov	r0, r6
   2a154:	bl	28888 <error@@Base+0x5c48>
   2a158:	ldr	r5, [sp, #36]	; 0x24
   2a15c:	ldr	r3, [r5]
   2a160:	tst	r3, #2
   2a164:	bne	2a30c <error@@Base+0x76cc>
   2a168:	ldr	ip, [sp, #44]	; 0x2c
   2a16c:	cmp	ip, #0
   2a170:	bne	292ac <error@@Base+0x666c>
   2a174:	ldr	r4, [sp, #32]
   2a178:	ldr	r3, [r4]
   2a17c:	cmp	r3, #0
   2a180:	beq	292ac <error@@Base+0x666c>
   2a184:	movw	r3, #29516	; 0x734c
   2a188:	movt	r3, #4
   2a18c:	ldr	r3, [r3]
   2a190:	cmp	r3, #0
   2a194:	bne	292ac <error@@Base+0x666c>
   2a198:	movw	r3, #28224	; 0x6e40
   2a19c:	movt	r3, #4
   2a1a0:	ldr	r3, [r3]
   2a1a4:	cmp	r3, #0
   2a1a8:	bne	292ac <error@@Base+0x666c>
   2a1ac:	mov	r0, ip
   2a1b0:	mov	r2, #5
   2a1b4:	movw	r1, #17060	; 0x42a4
   2a1b8:	movt	r1, #3
   2a1bc:	bl	1191c <dcgettext@plt>
   2a1c0:	ldr	r2, [r6]
   2a1c4:	mov	r1, r0
   2a1c8:	ldr	r0, [sp, #44]	; 0x2c
   2a1cc:	bl	22c40 <error@@Base>
   2a1d0:	b	292ac <error@@Base+0x666c>
   2a1d4:	tst	r1, #1
   2a1d8:	beq	29bb8 <error@@Base+0x6f78>
   2a1dc:	movw	r1, #17156	; 0x4304
   2a1e0:	mov	r0, r7
   2a1e4:	movt	r1, #3
   2a1e8:	mov	r2, #5
   2a1ec:	bl	1191c <dcgettext@plt>
   2a1f0:	mov	r8, r0
   2a1f4:	b	2a020 <error@@Base+0x73e0>
   2a1f8:	ldr	r4, [sp, #64]	; 0x40
   2a1fc:	ldr	r0, [r4, #72]	; 0x48
   2a200:	cmp	r0, #0
   2a204:	beq	29f04 <error@@Base+0x72c4>
   2a208:	ldr	r9, [sp, #44]	; 0x2c
   2a20c:	mov	r5, #0
   2a210:	ldr	r7, [sp, #28]
   2a214:	ldr	r8, [sp, #56]	; 0x38
   2a218:	add	r6, r9, #1
   2a21c:	ldr	r4, [r7, #12]
   2a220:	ldr	r2, [r8, #20]
   2a224:	ldrb	r3, [r7, #79]	; 0x4f
   2a228:	cmp	r4, #0
   2a22c:	bfi	r3, r2, #7, #1
   2a230:	strb	r3, [r7, #79]	; 0x4f
   2a234:	beq	2a254 <error@@Base+0x7614>
   2a238:	ldr	r0, [r4, #12]
   2a23c:	mov	r1, r6
   2a240:	bl	291ac <error@@Base+0x656c>
   2a244:	ldr	r4, [r4]
   2a248:	cmp	r4, #0
   2a24c:	orr	r5, r5, r0
   2a250:	bne	2a238 <error@@Base+0x75f8>
   2a254:	ldr	r7, [r7, #48]	; 0x30
   2a258:	cmp	r7, #0
   2a25c:	bne	2a21c <error@@Base+0x75dc>
   2a260:	mov	r0, r5
   2a264:	b	29f04 <error@@Base+0x72c4>
   2a268:	tst	r1, #2
   2a26c:	beq	29bb8 <error@@Base+0x6f78>
   2a270:	movw	r1, #17256	; 0x4368
   2a274:	mov	r0, r7
   2a278:	movt	r1, #3
   2a27c:	mov	r2, #5
   2a280:	bl	1191c <dcgettext@plt>
   2a284:	mov	r8, r0
   2a288:	b	2a020 <error@@Base+0x73e0>
   2a28c:	bl	11934 <__stack_chk_fail@plt>
   2a290:	ldr	r0, [sp, #60]	; 0x3c
   2a294:	mov	r2, #5
   2a298:	movw	r1, #16824	; 0x41b8
   2a29c:	movt	r1, #3
   2a2a0:	bl	1191c <dcgettext@plt>
   2a2a4:	ldr	r2, [r6]
   2a2a8:	mov	r1, r0
   2a2ac:	ldr	r0, [sp, #60]	; 0x3c
   2a2b0:	bl	22c40 <error@@Base>
   2a2b4:	b	29700 <error@@Base+0x6ac0>
   2a2b8:	mov	r2, #5
   2a2bc:	movw	r1, #17544	; 0x4488
   2a2c0:	mov	r0, #0
   2a2c4:	movt	r1, #3
   2a2c8:	bl	1191c <dcgettext@plt>
   2a2cc:	ldr	r2, [r6, #4]
   2a2d0:	mov	r1, r0
   2a2d4:	mov	r0, #1
   2a2d8:	bl	11be0 <__printf_chk@plt>
   2a2dc:	ldr	ip, [sp, #40]	; 0x28
   2a2e0:	ldr	r0, [ip]
   2a2e4:	bl	11868 <fflush@plt>
   2a2e8:	b	29ca0 <error@@Base+0x7060>
   2a2ec:	cmp	r3, #0
   2a2f0:	beq	29cac <error@@Base+0x706c>
   2a2f4:	add	r0, r0, #1
   2a2f8:	add	r1, r1, #1
   2a2fc:	bl	1182c <strcmp@plt>
   2a300:	cmp	r0, #0
   2a304:	beq	29cac <error@@Base+0x706c>
   2a308:	b	29c90 <error@@Base+0x7050>
   2a30c:	ldr	r0, [sp, #44]	; 0x2c
   2a310:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a314:	mov	r0, sl
   2a318:	mov	r2, #5
   2a31c:	movw	r1, #17028	; 0x4284
   2a320:	movt	r1, #3
   2a324:	bl	1191c <dcgettext@plt>
   2a328:	ldr	r2, [r6]
   2a32c:	mov	r1, r0
   2a330:	mov	r0, #1
   2a334:	bl	11be0 <__printf_chk@plt>
   2a338:	ldr	r8, [sp, #40]	; 0x28
   2a33c:	ldr	r0, [r8]
   2a340:	bl	11868 <fflush@plt>
   2a344:	b	2a168 <error@@Base+0x7528>
   2a348:	ldr	r4, [sp, #36]	; 0x24
   2a34c:	ldr	r3, [r4]
   2a350:	movw	r4, #27308	; 0x6aac
   2a354:	movt	r4, #4
   2a358:	tst	r3, #1
   2a35c:	beq	29c74 <error@@Base+0x7034>
   2a360:	ldr	r0, [sp, #44]	; 0x2c
   2a364:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a368:	mov	r2, #5
   2a36c:	mov	r0, r7
   2a370:	movw	r1, #17304	; 0x4398
   2a374:	movt	r1, #3
   2a378:	bl	1191c <dcgettext@plt>
   2a37c:	ldr	r2, [r6]
   2a380:	mov	r1, r0
   2a384:	mov	r0, #1
   2a388:	bl	11be0 <__printf_chk@plt>
   2a38c:	ldr	r5, [sp, #40]	; 0x28
   2a390:	ldr	r0, [r5]
   2a394:	bl	11868 <fflush@plt>
   2a398:	ldr	r3, [r4]
   2a39c:	b	29c6c <error@@Base+0x702c>
   2a3a0:	mov	r1, r7
   2a3a4:	mov	r0, r6
   2a3a8:	bl	18c28 <__assert_fail@plt+0x6ef8>
   2a3ac:	b	29b10 <error@@Base+0x6ed0>
   2a3b0:	ldrb	r3, [r6, #78]	; 0x4e
   2a3b4:	ubfx	r4, r3, #4, #1
   2a3b8:	cmp	r4, #0
   2a3bc:	bne	29738 <error@@Base+0x6af8>
   2a3c0:	mov	r0, r6
   2a3c4:	ldr	r1, [sp, #24]
   2a3c8:	bl	1e39c <__assert_fail@plt+0xc66c>
   2a3cc:	subs	r5, r0, #0
   2a3d0:	beq	2a430 <error@@Base+0x77f0>
   2a3d4:	ldr	r5, [sp, #36]	; 0x24
   2a3d8:	ldr	r3, [r5]
   2a3dc:	tst	r3, #8
   2a3e0:	beq	2a41c <error@@Base+0x77dc>
   2a3e4:	ldr	r0, [sp, #24]
   2a3e8:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a3ec:	mov	r2, #5
   2a3f0:	mov	r0, r4
   2a3f4:	movw	r1, #16452	; 0x4044
   2a3f8:	movt	r1, #3
   2a3fc:	bl	1191c <dcgettext@plt>
   2a400:	ldr	r2, [r6]
   2a404:	mov	r1, r0
   2a408:	mov	r0, #1
   2a40c:	bl	11be0 <__printf_chk@plt>
   2a410:	ldr	r8, [sp, #40]	; 0x28
   2a414:	ldr	r0, [r8]
   2a418:	bl	11868 <fflush@plt>
   2a41c:	ldrb	r2, [r6, #78]	; 0x4e
   2a420:	ldr	r3, [r6, #16]
   2a424:	orr	r2, r2, #16
   2a428:	strb	r2, [r6, #78]	; 0x4e
   2a42c:	b	2972c <error@@Base+0x6aec>
   2a430:	ldr	ip, [sp, #36]	; 0x24
   2a434:	ldr	r3, [ip]
   2a438:	tst	r3, #8
   2a43c:	beq	2a41c <error@@Base+0x77dc>
   2a440:	ldr	r0, [sp, #24]
   2a444:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a448:	mov	r0, r5
   2a44c:	mov	r2, #5
   2a450:	movw	r1, #16488	; 0x4068
   2a454:	movt	r1, #3
   2a458:	bl	1191c <dcgettext@plt>
   2a45c:	ldr	r2, [r6]
   2a460:	mov	r1, r0
   2a464:	mov	r0, #1
   2a468:	bl	11be0 <__printf_chk@plt>
   2a46c:	ldr	r4, [sp, #40]	; 0x28
   2a470:	ldr	r0, [r4]
   2a474:	bl	11868 <fflush@plt>
   2a478:	b	2a41c <error@@Base+0x77dc>
   2a47c:	ldr	r0, [sp, #44]	; 0x2c
   2a480:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a484:	mov	r2, #5
   2a488:	movw	r1, #17516	; 0x446c
   2a48c:	mov	r0, #0
   2a490:	movt	r1, #3
   2a494:	bl	1191c <dcgettext@plt>
   2a498:	ldr	r2, [r6]
   2a49c:	mov	r1, r0
   2a4a0:	mov	r0, #1
   2a4a4:	bl	11be0 <__printf_chk@plt>
   2a4a8:	ldr	r5, [sp, #40]	; 0x28
   2a4ac:	ldr	r0, [r5]
   2a4b0:	bl	11868 <fflush@plt>
   2a4b4:	b	29c74 <error@@Base+0x7034>
   2a4b8:	ldrh	r3, [r6, #76]	; 0x4c
   2a4bc:	sxth	r7, r3
   2a4c0:	cmp	r7, #1
   2a4c4:	beq	2a604 <error@@Base+0x79c4>
   2a4c8:	cmp	r7, #2
   2a4cc:	beq	2a5b4 <error@@Base+0x7974>
   2a4d0:	cmp	r7, #0
   2a4d4:	beq	2a564 <error@@Base+0x7924>
   2a4d8:	cmp	r3, #2
   2a4dc:	bhi	2a544 <error@@Base+0x7904>
   2a4e0:	ldrb	r3, [r6, #78]	; 0x4e
   2a4e4:	orr	r3, r3, #64	; 0x40
   2a4e8:	strb	r3, [r6, #78]	; 0x4e
   2a4ec:	b	292ac <error@@Base+0x666c>
   2a4f0:	ldrb	r3, [r6, #79]	; 0x4f
   2a4f4:	ubfx	r2, r3, #1, #1
   2a4f8:	cmp	r2, #0
   2a4fc:	strhne	r0, [r6, #76]	; 0x4c
   2a500:	bne	29ce4 <error@@Base+0x70a4>
   2a504:	ldrb	r1, [r6, #78]	; 0x4e
   2a508:	lsrs	r1, r1, #7
   2a50c:	strhne	r2, [r6, #76]	; 0x4c
   2a510:	bne	29ce4 <error@@Base+0x70a4>
   2a514:	ldr	r2, [r9]
   2a518:	cmp	r2, #0
   2a51c:	beq	2a528 <error@@Base+0x78e8>
   2a520:	tst	r3, #16
   2a524:	bne	2a530 <error@@Base+0x78f0>
   2a528:	mov	r0, r6
   2a52c:	bl	27c90 <error@@Base+0x5050>
   2a530:	mov	r3, #2
   2a534:	strh	r3, [r6, #76]	; 0x4c
   2a538:	b	29ce4 <error@@Base+0x70a4>
   2a53c:	mov	r5, r4
   2a540:	b	29bcc <error@@Base+0x6f8c>
   2a544:	movw	r0, #17728	; 0x4540
   2a548:	movw	r1, #17784	; 0x4578
   2a54c:	movw	r3, #16108	; 0x3eec
   2a550:	movt	r0, #3
   2a554:	movt	r1, #3
   2a558:	movw	r2, #835	; 0x343
   2a55c:	movt	r3, #3
   2a560:	bl	11d30 <__assert_fail@plt>
   2a564:	ldr	r4, [sp, #36]	; 0x24
   2a568:	ldr	r3, [r4]
   2a56c:	tst	r3, #1
   2a570:	beq	2a4e0 <error@@Base+0x78a0>
   2a574:	ldr	r0, [sp, #44]	; 0x2c
   2a578:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a57c:	mov	r0, r7
   2a580:	mov	r2, #5
   2a584:	movw	r1, #17644	; 0x44ec
   2a588:	movt	r1, #3
   2a58c:	bl	1191c <dcgettext@plt>
   2a590:	ldr	r2, [r6]
   2a594:	mov	r1, r0
   2a598:	mov	r0, #1
   2a59c:	bl	11be0 <__printf_chk@plt>
   2a5a0:	ldr	r5, [sp, #40]	; 0x28
   2a5a4:	ldr	r0, [r5]
   2a5a8:	bl	11868 <fflush@plt>
   2a5ac:	ldrsh	r7, [r6, #76]	; 0x4c
   2a5b0:	b	2a4e0 <error@@Base+0x78a0>
   2a5b4:	ldr	r8, [sp, #36]	; 0x24
   2a5b8:	ldr	r3, [r8]
   2a5bc:	tst	r3, #1
   2a5c0:	beq	2a4e0 <error@@Base+0x78a0>
   2a5c4:	ldr	r0, [sp, #44]	; 0x2c
   2a5c8:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a5cc:	movw	r1, #17608	; 0x44c8
   2a5d0:	mov	r0, #0
   2a5d4:	movt	r1, #3
   2a5d8:	mov	r2, #5
   2a5dc:	bl	1191c <dcgettext@plt>
   2a5e0:	mov	r1, r0
   2a5e4:	mov	r0, #1
   2a5e8:	ldr	r2, [r6]
   2a5ec:	bl	11be0 <__printf_chk@plt>
   2a5f0:	ldr	ip, [sp, #40]	; 0x28
   2a5f4:	ldr	r0, [ip]
   2a5f8:	bl	11868 <fflush@plt>
   2a5fc:	ldrsh	r7, [r6, #76]	; 0x4c
   2a600:	b	2a4e0 <error@@Base+0x78a0>
   2a604:	ldr	r8, [sp, #36]	; 0x24
   2a608:	ldr	r3, [r8]
   2a60c:	tst	r3, #1
   2a610:	beq	2a4e0 <error@@Base+0x78a0>
   2a614:	ldr	r0, [sp, #44]	; 0x2c
   2a618:	bl	22b1c <__assert_fail@plt+0x10dec>
   2a61c:	movw	r1, #17684	; 0x4514
   2a620:	mov	r0, #0
   2a624:	movt	r1, #3
   2a628:	mov	r2, #5
   2a62c:	bl	1191c <dcgettext@plt>
   2a630:	mov	r1, r0
   2a634:	mov	r0, r7
   2a638:	b	2a5e8 <error@@Base+0x79a8>
   2a63c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a640:	sub	sp, sp, #44	; 0x2c
   2a644:	movw	r3, #29692	; 0x73fc
   2a648:	movt	r3, #4
   2a64c:	str	r3, [sp, #8]
   2a650:	movw	r3, #29516	; 0x734c
   2a654:	movt	r3, #4
   2a658:	str	r3, [sp, #4]
   2a65c:	ldr	r3, [sp, #8]
   2a660:	movw	r9, #28224	; 0x6e40
   2a664:	movt	r9, #4
   2a668:	ldr	r3, [r3]
   2a66c:	str	r3, [sp, #12]
   2a670:	ldr	r3, [r9]
   2a674:	str	r3, [sp, #16]
   2a678:	ldr	r3, [sp, #4]
   2a67c:	ldr	r3, [r3]
   2a680:	str	r3, [sp, #20]
   2a684:	bl	234c0 <error@@Base+0x880>
   2a688:	cmp	r0, #0
   2a68c:	str	r0, [sp, #32]
   2a690:	beq	2aa8c <error@@Base+0x7e4c>
   2a694:	mov	r3, r0
   2a698:	ldrb	r2, [r3, #16]
   2a69c:	bfc	r2, #0, #8
   2a6a0:	strb	r2, [r3, #16]
   2a6a4:	ldr	r3, [r3]
   2a6a8:	cmp	r3, #0
   2a6ac:	bne	2a698 <error@@Base+0x7a58>
   2a6b0:	movw	fp, #28288	; 0x6e80
   2a6b4:	movw	r7, #28208	; 0x6e30
   2a6b8:	movt	fp, #4
   2a6bc:	movt	r7, #4
   2a6c0:	mvn	r8, #0
   2a6c4:	mov	r3, #1
   2a6c8:	str	r3, [fp, #20]
   2a6cc:	movw	r3, #29520	; 0x7350
   2a6d0:	movt	r3, #4
   2a6d4:	str	r3, [sp, #28]
   2a6d8:	movw	r3, #29480	; 0x7328
   2a6dc:	movt	r3, #4
   2a6e0:	str	r3, [sp, #36]	; 0x24
   2a6e4:	bl	2098c <__assert_fail@plt+0xec5c>
   2a6e8:	mov	r1, #0
   2a6ec:	mov	r0, #1
   2a6f0:	str	r1, [sp, #24]
   2a6f4:	bl	1fdfc <__assert_fail@plt+0xe0cc>
   2a6f8:	ldr	sl, [sp, #32]
   2a6fc:	ldr	r3, [sl, #12]
   2a700:	mov	r5, #0
   2a704:	ldr	r6, [r3, #72]	; 0x48
   2a708:	cmp	r6, r5
   2a70c:	moveq	r6, r3
   2a710:	ldrb	r2, [sl, #17]
   2a714:	ldrb	r3, [r6, #79]	; 0x4f
   2a718:	ubfx	r2, r2, #3, #1
   2a71c:	bfi	r3, r2, #4, #1
   2a720:	strb	r3, [r6, #79]	; 0x4f
   2a724:	b	2a72c <error@@Base+0x7aec>
   2a728:	mov	r6, r3
   2a72c:	ldr	r3, [r6, #56]	; 0x38
   2a730:	cmp	r3, #0
   2a734:	bne	2a728 <error@@Base+0x7ae8>
   2a738:	ldr	r1, [r7]
   2a73c:	cmp	r1, #0
   2a740:	beq	2a770 <error@@Base+0x7b30>
   2a744:	ldrb	r3, [r6, #79]	; 0x4f
   2a748:	ands	r3, r3, #1
   2a74c:	beq	2a860 <error@@Base+0x7c20>
   2a750:	ldr	r3, [sp, #12]
   2a754:	ldr	r0, [sp, #8]
   2a758:	str	r3, [r0]
   2a75c:	ldr	r3, [sp, #16]
   2a760:	ldr	r0, [sp, #4]
   2a764:	str	r3, [r9]
   2a768:	ldr	r3, [sp, #20]
   2a76c:	str	r3, [r0]
   2a770:	adds	r1, r1, #0
   2a774:	mov	r0, r6
   2a778:	ldr	r4, [fp, #16]
   2a77c:	movne	r1, #1
   2a780:	bl	291ac <error@@Base+0x656c>
   2a784:	b	2a78c <error@@Base+0x7b4c>
   2a788:	mov	r6, r3
   2a78c:	ldr	r3, [r6, #56]	; 0x38
   2a790:	cmp	r3, #0
   2a794:	bne	2a788 <error@@Base+0x7b48>
   2a798:	ldr	r3, [fp, #16]
   2a79c:	cmp	r4, r3
   2a7a0:	movcc	r1, #1
   2a7a4:	strbcc	r1, [sl, #16]
   2a7a8:	cmp	r0, #0
   2a7ac:	bne	2a7c0 <error@@Base+0x7b80>
   2a7b0:	ldrb	r0, [r6, #78]	; 0x4e
   2a7b4:	ubfx	r0, r0, #6, #1
   2a7b8:	cmp	r0, #0
   2a7bc:	beq	2a7d0 <error@@Base+0x7b90>
   2a7c0:	cmp	r8, #0
   2a7c4:	ble	2a878 <error@@Base+0x7c38>
   2a7c8:	ldrb	r0, [r6, #78]	; 0x4e
   2a7cc:	ubfx	r0, r0, #6, #1
   2a7d0:	ldrb	r3, [r6, #79]	; 0x4f
   2a7d4:	eor	r0, r0, #1
   2a7d8:	orr	r5, r5, r0
   2a7dc:	bfc	r3, #4, #1
   2a7e0:	strb	r3, [r6, #79]	; 0x4f
   2a7e4:	ldr	r6, [r6, #48]	; 0x30
   2a7e8:	cmp	r6, #0
   2a7ec:	bne	2a710 <error@@Base+0x7ad0>
   2a7f0:	tst	r5, #1
   2a7f4:	ldr	r4, [sl, #12]
   2a7f8:	strne	sl, [sp, #24]
   2a7fc:	ldrne	sl, [sl]
   2a800:	beq	2aa68 <error@@Base+0x7e28>
   2a804:	cmp	sl, #0
   2a808:	bne	2a6fc <error@@Base+0x7abc>
   2a80c:	ldr	r3, [fp, #20]
   2a810:	rsbs	r3, r3, #1
   2a814:	movcc	r3, #0
   2a818:	str	r3, [fp, #20]
   2a81c:	ldr	r3, [sp, #32]
   2a820:	cmp	r3, #0
   2a824:	bne	2a6e4 <error@@Base+0x7aa4>
   2a828:	ldr	r3, [r7]
   2a82c:	cmp	r3, #0
   2a830:	beq	2a854 <error@@Base+0x7c14>
   2a834:	ldr	r3, [sp, #12]
   2a838:	ldr	r0, [sp, #8]
   2a83c:	str	r3, [r0]
   2a840:	ldr	r3, [sp, #16]
   2a844:	ldr	r0, [sp, #4]
   2a848:	str	r3, [r9]
   2a84c:	ldr	r3, [sp, #20]
   2a850:	str	r3, [r0]
   2a854:	mov	r0, r8
   2a858:	add	sp, sp, #44	; 0x2c
   2a85c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a860:	ldr	r2, [sp, #4]
   2a864:	ldr	r0, [sp, #8]
   2a868:	str	r3, [r9]
   2a86c:	str	r3, [r2]
   2a870:	str	r3, [r0]
   2a874:	b	2a770 <error@@Base+0x7b30>
   2a878:	ldrh	r1, [r6, #76]	; 0x4c
   2a87c:	cmp	r1, #0
   2a880:	beq	2a974 <error@@Base+0x7d34>
   2a884:	ldr	r3, [r9]
   2a888:	sxth	r8, r1
   2a88c:	cmp	r3, #0
   2a890:	beq	2a7c8 <error@@Base+0x7b88>
   2a894:	ldr	r2, [sp, #28]
   2a898:	ldr	r3, [r2]
   2a89c:	cmp	r3, #0
   2a8a0:	bne	2a7c8 <error@@Base+0x7b88>
   2a8a4:	ldr	r0, [r7]
   2a8a8:	cmp	r0, #0
   2a8ac:	bne	2a7c8 <error@@Base+0x7b88>
   2a8b0:	ldrb	r3, [r6, #79]	; 0x4f
   2a8b4:	mov	r5, #1
   2a8b8:	bfc	r3, #4, #1
   2a8bc:	strb	r3, [r6, #79]	; 0x4f
   2a8c0:	ldr	r4, [sl, #12]
   2a8c4:	cmp	r0, #0
   2a8c8:	bne	2a938 <error@@Base+0x7cf8>
   2a8cc:	ldrsh	r3, [r4, #76]	; 0x4c
   2a8d0:	cmp	r3, #0
   2a8d4:	bne	2a938 <error@@Base+0x7cf8>
   2a8d8:	ldrb	r3, [sl, #16]
   2a8dc:	cmp	r3, #0
   2a8e0:	bne	2a938 <error@@Base+0x7cf8>
   2a8e4:	ldr	r2, [sp, #36]	; 0x24
   2a8e8:	ldr	r3, [r2]
   2a8ec:	cmp	r3, #0
   2a8f0:	bne	2a938 <error@@Base+0x7cf8>
   2a8f4:	ldr	r3, [r9]
   2a8f8:	cmp	r3, #0
   2a8fc:	bne	2a938 <error@@Base+0x7cf8>
   2a900:	ldrb	r3, [r4, #79]	; 0x4f
   2a904:	tst	r3, #2
   2a908:	bne	2aa74 <error@@Base+0x7e34>
   2a90c:	ldr	r3, [r4, #16]
   2a910:	cmp	r3, #0
   2a914:	beq	2aa74 <error@@Base+0x7e34>
   2a918:	movw	r1, #17828	; 0x45a4
   2a91c:	mov	r2, #5
   2a920:	movt	r1, #3
   2a924:	bl	1191c <dcgettext@plt>
   2a928:	mov	r1, r0
   2a92c:	ldr	r2, [r4]
   2a930:	mov	r0, #1
   2a934:	bl	22b4c <__assert_fail@plt+0x10e1c>
   2a938:	ldr	r3, [sp, #24]
   2a93c:	cmp	r3, #0
   2a940:	ldr	r3, [sl]
   2a944:	beq	2aa54 <error@@Base+0x7e14>
   2a948:	ldr	r1, [sp, #24]
   2a94c:	mov	r0, sl
   2a950:	str	r3, [r1]
   2a954:	bl	1188c <free@plt>
   2a958:	ldr	r3, [sp, #24]
   2a95c:	ldr	sl, [r3]
   2a960:	cmp	r5, #0
   2a964:	beq	2a804 <error@@Base+0x7bc4>
   2a968:	cmp	sl, #0
   2a96c:	bne	2a81c <error@@Base+0x7bdc>
   2a970:	b	2a80c <error@@Base+0x7bcc>
   2a974:	ldr	r0, [r7]
   2a978:	ldrd	r2, [r6, #32]
   2a97c:	cmp	r0, #0
   2a980:	beq	2aa0c <error@@Base+0x7dcc>
   2a984:	orrs	r0, r2, r3
   2a988:	bne	2a998 <error@@Base+0x7d58>
   2a98c:	b	2aa34 <error@@Base+0x7df4>
   2a990:	mov	r6, r1
   2a994:	ldr	r1, [r1, #56]	; 0x38
   2a998:	cmp	r1, #0
   2a99c:	bne	2a990 <error@@Base+0x7d50>
   2a9a0:	ldrb	r0, [r6, #78]	; 0x4e
   2a9a4:	mov	ip, r1
   2a9a8:	ubfx	r0, r0, #6, #1
   2a9ac:	cmp	r0, #0
   2a9b0:	beq	2a7d0 <error@@Base+0x7b90>
   2a9b4:	ldrb	r0, [sl, #16]
   2a9b8:	cmp	r0, #0
   2a9bc:	beq	2aa04 <error@@Base+0x7dc4>
   2a9c0:	ldrd	r0, [r6, #40]	; 0x28
   2a9c4:	cmp	r3, r1
   2a9c8:	cmpeq	r2, r0
   2a9cc:	beq	2aa04 <error@@Base+0x7dc4>
   2a9d0:	ldr	r0, [r7]
   2a9d4:	cmp	r0, #0
   2a9d8:	beq	2aa4c <error@@Base+0x7e0c>
   2a9dc:	ldr	r1, [sp, #4]
   2a9e0:	ldr	r3, [r1]
   2a9e4:	cmp	r3, #0
   2a9e8:	bne	2a9f8 <error@@Base+0x7db8>
   2a9ec:	ldr	r3, [r9]
   2a9f0:	cmp	r3, #0
   2a9f4:	moveq	r8, #0
   2a9f8:	ldrb	r3, [r6, #79]	; 0x4f
   2a9fc:	tst	r3, #16
   2aa00:	bne	2a8b0 <error@@Base+0x7c70>
   2aa04:	mov	r0, #1
   2aa08:	b	2a7d0 <error@@Base+0x7b90>
   2aa0c:	orrs	r1, r2, r3
   2aa10:	movne	r1, r0
   2aa14:	bne	2a998 <error@@Base+0x7d58>
   2aa18:	mov	r0, r6
   2aa1c:	mov	r1, #1
   2aa20:	bl	28024 <error@@Base+0x53e4>
   2aa24:	mov	r3, r1
   2aa28:	mov	r2, r0
   2aa2c:	ldr	r1, [r6, #56]	; 0x38
   2aa30:	b	2a998 <error@@Base+0x7d58>
   2aa34:	mov	r0, r6
   2aa38:	bl	28024 <error@@Base+0x53e4>
   2aa3c:	mov	r3, r1
   2aa40:	mov	r2, r0
   2aa44:	ldr	r1, [r6, #56]	; 0x38
   2aa48:	b	2a998 <error@@Base+0x7d58>
   2aa4c:	mov	r8, ip
   2aa50:	b	2aa04 <error@@Base+0x7dc4>
   2aa54:	mov	r0, sl
   2aa58:	str	r3, [sp, #32]
   2aa5c:	bl	1188c <free@plt>
   2aa60:	ldr	sl, [sp, #32]
   2aa64:	b	2a960 <error@@Base+0x7d20>
   2aa68:	ldr	r0, [r7]
   2aa6c:	mov	r5, r6
   2aa70:	b	2a8c4 <error@@Base+0x7c84>
   2aa74:	movw	r1, #17796	; 0x4584
   2aa78:	mov	r2, #5
   2aa7c:	movt	r1, #3
   2aa80:	mov	r0, #0
   2aa84:	bl	1191c <dcgettext@plt>
   2aa88:	b	2a928 <error@@Base+0x7ce8>
   2aa8c:	movw	r3, #28288	; 0x6e80
   2aa90:	movt	r3, #4
   2aa94:	mov	r2, #1
   2aa98:	movw	r7, #28208	; 0x6e30
   2aa9c:	str	r2, [r3, #20]
   2aaa0:	movt	r7, #4
   2aaa4:	mvn	r8, #0
   2aaa8:	b	2a828 <error@@Base+0x7be8>
   2aaac:	bx	lr
   2aab0:	bx	lr
   2aab4:	mov	r0, #0
   2aab8:	bx	lr
   2aabc:	mvn	r0, #0
   2aac0:	bx	lr
   2aac4:	push	{r3, lr}
   2aac8:	bl	11b8c <__errno_location@plt>
   2aacc:	mov	r3, #10
   2aad0:	str	r3, [r0]
   2aad4:	mvn	r0, #0
   2aad8:	pop	{r3, pc}
   2aadc:	bx	lr
   2aae0:	bx	lr
   2aae4:	mvn	r0, #0
   2aae8:	bx	lr
   2aaec:	andeq	r0, r0, r0
   2aaf0:	push	{r4, r5, r6, lr}
   2aaf4:	mov	r4, r0
   2aaf8:	ldr	r0, [r0, #16]
   2aafc:	mov	r5, r1
   2ab00:	ldr	r6, [r4]
   2ab04:	bl	23558 <error@@Base+0x918>
   2ab08:	ldr	r0, [r4, #4]
   2ab0c:	bl	1188c <free@plt>
   2ab10:	ldr	r0, [r4, #12]
   2ab14:	bl	1188c <free@plt>
   2ab18:	ldr	r0, [r4, #8]
   2ab1c:	bl	1188c <free@plt>
   2ab20:	mov	r0, r4
   2ab24:	bl	1188c <free@plt>
   2ab28:	movw	r3, #29704	; 0x7408
   2ab2c:	movt	r3, #4
   2ab30:	ldr	r2, [r3]
   2ab34:	cmp	r2, r4
   2ab38:	beq	2ab5c <error@@Base+0x7f1c>
   2ab3c:	cmp	r5, #0
   2ab40:	strne	r6, [r5]
   2ab44:	movw	r3, #29720	; 0x7418
   2ab48:	movt	r3, #4
   2ab4c:	ldr	r2, [r3]
   2ab50:	cmp	r2, r4
   2ab54:	streq	r5, [r3]
   2ab58:	pop	{r4, r5, r6, pc}
   2ab5c:	cmp	r5, #0
   2ab60:	streq	r6, [r3]
   2ab64:	beq	2ab44 <error@@Base+0x7f04>
   2ab68:	bl	11d00 <abort@plt>
   2ab6c:	movw	r2, #29704	; 0x7408
   2ab70:	movt	r2, #4
   2ab74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ab78:	mov	r3, #0
   2ab7c:	ldr	r8, [r2]
   2ab80:	sub	sp, sp, #20
   2ab84:	mov	r9, r0
   2ab88:	strb	r3, [r0, #27]
   2ab8c:	cmp	r8, r3
   2ab90:	str	r2, [sp, #4]
   2ab94:	str	r1, [sp, #12]
   2ab98:	strb	r3, [r0, #26]
   2ab9c:	str	r3, [r0]
   2aba0:	beq	2ad84 <error@@Base+0x8144>
   2aba4:	str	r3, [sp, #8]
   2aba8:	ldrh	r3, [r0, #24]
   2abac:	str	r3, [sp]
   2abb0:	ldr	r3, [sp]
   2abb4:	cmp	r3, #0
   2abb8:	beq	2ac40 <error@@Base+0x8000>
   2abbc:	ldrh	fp, [r8, #24]
   2abc0:	mov	r7, #0
   2abc4:	cmp	fp, #0
   2abc8:	beq	2ac58 <error@@Base+0x8018>
   2abcc:	ldr	r3, [r9, #4]
   2abd0:	mov	r4, #0
   2abd4:	ldr	r5, [r8, #4]
   2abd8:	ldr	sl, [r3, r7, lsl #2]
   2abdc:	sub	r5, r5, #4
   2abe0:	add	r6, sl, #1
   2abe4:	ldr	r3, [r5, #4]!
   2abe8:	mov	r0, r6
   2abec:	cmp	r3, sl
   2abf0:	add	r1, r3, #1
   2abf4:	beq	2ac1c <error@@Base+0x7fdc>
   2abf8:	ldrb	r3, [r3]
   2abfc:	ldrb	r2, [sl]
   2ac00:	cmp	r3, r2
   2ac04:	bne	2ac28 <error@@Base+0x7fe8>
   2ac08:	cmp	r3, #0
   2ac0c:	beq	2ac1c <error@@Base+0x7fdc>
   2ac10:	bl	1182c <strcmp@plt>
   2ac14:	cmp	r0, #0
   2ac18:	bne	2ac28 <error@@Base+0x7fe8>
   2ac1c:	add	r4, r4, #1
   2ac20:	cmp	r4, fp
   2ac24:	bcc	2abe4 <error@@Base+0x7fa4>
   2ac28:	cmp	r4, fp
   2ac2c:	beq	2ac58 <error@@Base+0x8018>
   2ac30:	ldr	r2, [sp]
   2ac34:	add	r7, r7, #1
   2ac38:	cmp	r7, r2
   2ac3c:	bcc	2abc4 <error@@Base+0x7f84>
   2ac40:	ldr	r3, [r8]
   2ac44:	cmp	r3, #0
   2ac48:	beq	2ad4c <error@@Base+0x810c>
   2ac4c:	str	r8, [sp, #8]
   2ac50:	mov	r8, r3
   2ac54:	b	2abb0 <error@@Base+0x7f70>
   2ac58:	ldr	r4, [r9, #16]
   2ac5c:	ldr	r5, [r8, #16]
   2ac60:	cmp	r5, #0
   2ac64:	cmpne	r4, #0
   2ac68:	beq	2ad18 <error@@Base+0x80d8>
   2ac6c:	ldr	r0, [r4, #4]
   2ac70:	ldr	r1, [r5, #4]
   2ac74:	cmp	r0, #0
   2ac78:	ldreq	r3, [r4, #12]
   2ac7c:	movne	r2, r0
   2ac80:	ldreq	r2, [r3]
   2ac84:	cmp	r1, #0
   2ac88:	ldreq	r3, [r5, #12]
   2ac8c:	movne	r3, r1
   2ac90:	ldreq	r3, [r3]
   2ac94:	cmp	r2, r3
   2ac98:	beq	2ad04 <error@@Base+0x80c4>
   2ac9c:	cmp	r0, #0
   2aca0:	ldreq	r3, [r4, #12]
   2aca4:	movne	r3, r0
   2aca8:	ldreq	r3, [r3]
   2acac:	cmp	r1, #0
   2acb0:	ldreq	r2, [r5, #12]
   2acb4:	movne	r2, r1
   2acb8:	ldrb	r3, [r3]
   2acbc:	ldreq	r2, [r2]
   2acc0:	ldrb	r2, [r2]
   2acc4:	cmp	r2, r3
   2acc8:	bne	2ad18 <error@@Base+0x80d8>
   2accc:	cmp	r0, #0
   2acd0:	ldreq	r3, [r4, #12]
   2acd4:	ldreq	r0, [r3]
   2acd8:	ldrb	r3, [r0]
   2acdc:	cmp	r3, #0
   2ace0:	beq	2ad04 <error@@Base+0x80c4>
   2ace4:	cmp	r1, #0
   2ace8:	add	r0, r0, #1
   2acec:	ldreq	r3, [r5, #12]
   2acf0:	ldreq	r1, [r3]
   2acf4:	add	r1, r1, #1
   2acf8:	bl	1182c <strcmp@plt>
   2acfc:	cmp	r0, #0
   2ad00:	bne	2ad18 <error@@Base+0x80d8>
   2ad04:	ldr	r4, [r4]
   2ad08:	ldr	r5, [r5]
   2ad0c:	cmp	r5, #0
   2ad10:	cmpne	r4, #0
   2ad14:	bne	2ac6c <error@@Base+0x802c>
   2ad18:	cmp	r5, #0
   2ad1c:	cmpeq	r4, #0
   2ad20:	bne	2ac30 <error@@Base+0x7ff0>
   2ad24:	ldr	r2, [sp, #12]
   2ad28:	cmp	r2, #0
   2ad2c:	beq	2ad6c <error@@Base+0x812c>
   2ad30:	mov	r0, r8
   2ad34:	ldr	r1, [sp, #8]
   2ad38:	bl	2aaf0 <error@@Base+0x7eb0>
   2ad3c:	ldr	r2, [sp, #4]
   2ad40:	ldr	r3, [r2]
   2ad44:	cmp	r3, #0
   2ad48:	beq	2ad84 <error@@Base+0x8144>
   2ad4c:	movw	r3, #29720	; 0x7418
   2ad50:	movt	r3, #4
   2ad54:	ldr	r2, [r3]
   2ad58:	str	r9, [r2]
   2ad5c:	mov	r0, #1
   2ad60:	str	r9, [r3]
   2ad64:	add	sp, sp, #20
   2ad68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad6c:	mov	r0, r9
   2ad70:	ldr	r1, [sp, #12]
   2ad74:	bl	2aaf0 <error@@Base+0x7eb0>
   2ad78:	ldr	r0, [sp, #12]
   2ad7c:	add	sp, sp, #20
   2ad80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad84:	ldr	r3, [sp, #4]
   2ad88:	str	r9, [r3]
   2ad8c:	movw	r3, #29720	; 0x7418
   2ad90:	movt	r3, #4
   2ad94:	b	2ad5c <error@@Base+0x811c>
   2ad98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ad9c:	sub	sp, sp, #20
   2ada0:	movw	ip, #29716	; 0x7414
   2ada4:	movt	ip, #4
   2ada8:	str	ip, [sp, #12]
   2adac:	movw	ip, #29712	; 0x7410
   2adb0:	movt	ip, #4
   2adb4:	str	ip, [sp, #8]
   2adb8:	movw	ip, #29728	; 0x7420
   2adbc:	movt	ip, #4
   2adc0:	str	ip, [sp, #4]
   2adc4:	mov	r1, #0
   2adc8:	ldr	ip, [sp, #12]
   2adcc:	movw	r3, #29704	; 0x7408
   2add0:	movt	r3, #4
   2add4:	movw	r7, #29708	; 0x740c
   2add8:	movt	r7, #4
   2addc:	str	r1, [ip]
   2ade0:	ldr	ip, [sp, #8]
   2ade4:	ldr	r3, [r3]
   2ade8:	str	r1, [r7]
   2adec:	str	r1, [ip]
   2adf0:	cmp	r3, #0
   2adf4:	ldr	ip, [sp, #4]
   2adf8:	str	r1, [ip]
   2adfc:	beq	2af7c <error@@Base+0x833c>
   2ae00:	mov	r0, r1
   2ae04:	mov	r8, r1
   2ae08:	mov	r6, r1
   2ae0c:	ldr	ip, [r3]
   2ae10:	add	r0, r0, #1
   2ae14:	ldrh	r2, [r3, #24]
   2ae18:	ldr	fp, [r3, #16]
   2ae1c:	str	ip, [sp]
   2ae20:	cmp	r1, r2
   2ae24:	ldr	ip, [sp, #4]
   2ae28:	str	r0, [ip]
   2ae2c:	ldrcc	ip, [sp, #8]
   2ae30:	strcc	r2, [ip]
   2ae34:	cmp	fp, #0
   2ae38:	beq	2af2c <error@@Base+0x82ec>
   2ae3c:	mov	r5, #0
   2ae40:	b	2ae98 <error@@Base+0x8258>
   2ae44:	cmp	r4, r9
   2ae48:	addeq	r9, r4, #1
   2ae4c:	rsb	r9, r4, r9
   2ae50:	cmp	r9, r8
   2ae54:	bgt	2af4c <error@@Base+0x830c>
   2ae58:	mov	r1, r4
   2ae5c:	mov	r2, r9
   2ae60:	mov	r0, r6
   2ae64:	bl	118c8 <memcpy@plt>
   2ae68:	mov	r2, #0
   2ae6c:	movw	r1, #6032	; 0x1790
   2ae70:	strb	r2, [r6, r9]
   2ae74:	mov	r0, r6
   2ae78:	movt	r1, #3
   2ae7c:	bl	163f0 <__assert_fail@plt+0x46c0>
   2ae80:	rsbs	r0, r0, #1
   2ae84:	movcc	r0, #0
   2ae88:	strb	r0, [fp, #16]
   2ae8c:	ldr	fp, [fp]
   2ae90:	cmp	fp, #0
   2ae94:	beq	2af14 <error@@Base+0x82d4>
   2ae98:	ldr	r4, [fp, #4]
   2ae9c:	cmp	r4, #0
   2aea0:	ldreq	r3, [fp, #12]
   2aea4:	ldreq	r4, [r3]
   2aea8:	mov	r0, r4
   2aeac:	bl	11b5c <strlen@plt>
   2aeb0:	mov	r1, #47	; 0x2f
   2aeb4:	mov	sl, r0
   2aeb8:	mov	r0, r4
   2aebc:	bl	11c7c <strrchr@plt>
   2aec0:	subs	r9, r0, #0
   2aec4:	moveq	r0, r9
   2aec8:	beq	2aee4 <error@@Base+0x82a4>
   2aecc:	mov	r0, r4
   2aed0:	mov	r1, #37	; 0x25
   2aed4:	bl	11b68 <strchr@plt>
   2aed8:	cmp	r9, r0
   2aedc:	movcs	r0, #0
   2aee0:	movcc	r0, #1
   2aee4:	ldr	r3, [r7]
   2aee8:	add	r5, r5, #1
   2aeec:	cmp	sl, r3
   2aef0:	movwhi	r1, #29708	; 0x740c
   2aef4:	movthi	r1, #4
   2aef8:	strhi	sl, [r1]
   2aefc:	cmp	r0, #0
   2af00:	bne	2ae44 <error@@Base+0x8204>
   2af04:	strb	r0, [fp, #16]
   2af08:	ldr	fp, [fp]
   2af0c:	cmp	fp, #0
   2af10:	bne	2ae98 <error@@Base+0x8258>
   2af14:	ldr	ip, [sp, #12]
   2af18:	ldr	r3, [ip]
   2af1c:	cmp	r3, r5
   2af20:	movwcc	r1, #29716	; 0x7414
   2af24:	movtcc	r1, #4
   2af28:	strcc	r5, [r1]
   2af2c:	ldr	r3, [sp]
   2af30:	cmp	r3, #0
   2af34:	beq	2af64 <error@@Base+0x8324>
   2af38:	ldr	ip, [sp, #4]
   2af3c:	ldr	r0, [ip]
   2af40:	ldr	ip, [sp, #8]
   2af44:	ldr	r1, [ip]
   2af48:	b	2ae0c <error@@Base+0x81cc>
   2af4c:	mov	r0, r6
   2af50:	add	r1, r9, #1
   2af54:	bl	22fb0 <error@@Base+0x370>
   2af58:	mov	r8, r9
   2af5c:	mov	r6, r0
   2af60:	b	2ae58 <error@@Base+0x8218>
   2af64:	cmp	r6, #0
   2af68:	beq	2af7c <error@@Base+0x833c>
   2af6c:	mov	r0, r6
   2af70:	add	sp, sp, #20
   2af74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2af78:	b	1188c <free@plt>
   2af7c:	add	sp, sp, #20
   2af80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2af84:	push	{r4, r5, r6, r7, r8, r9, lr}
   2af88:	movw	r6, #26864	; 0x68f0
   2af8c:	movt	r6, #4
   2af90:	sub	sp, sp, #20
   2af94:	mov	r7, r0
   2af98:	mov	r0, #28
   2af9c:	ldr	r3, [r6]
   2afa0:	mov	r9, r1
   2afa4:	str	r3, [sp, #12]
   2afa8:	bl	22f44 <error@@Base+0x304>
   2afac:	mov	r3, #1
   2afb0:	mov	r4, r0
   2afb4:	mov	r0, #4
   2afb8:	strh	r3, [r4, #24]
   2afbc:	bl	22f44 <error@@Base+0x304>
   2afc0:	str	r0, [r4, #4]
   2afc4:	mov	r0, #4
   2afc8:	bl	22f44 <error@@Base+0x304>
   2afcc:	str	r0, [r4, #12]
   2afd0:	mov	r0, #4
   2afd4:	bl	22f44 <error@@Base+0x304>
   2afd8:	ldr	r5, [r7]
   2afdc:	mov	r8, r0
   2afe0:	str	r0, [r4, #8]
   2afe4:	mov	r0, r5
   2afe8:	bl	11b5c <strlen@plt>
   2afec:	ldr	r3, [r4, #4]
   2aff0:	str	r0, [r8]
   2aff4:	str	r5, [r3]
   2aff8:	ldr	r0, [r4, #4]
   2affc:	ldr	r5, [r4, #12]
   2b000:	bl	24984 <error@@Base+0x1d44>
   2b004:	str	r0, [r5]
   2b008:	ldr	r3, [r4, #12]
   2b00c:	ldr	r2, [r3]
   2b010:	cmp	r2, #0
   2b014:	beq	2b0a4 <error@@Base+0x8464>
   2b018:	add	r2, r2, #1
   2b01c:	str	r2, [r3]
   2b020:	ldr	r3, [r7, #4]
   2b024:	add	r0, sp, #16
   2b028:	mov	r5, #0
   2b02c:	mov	r1, #20
   2b030:	str	r5, [sp]
   2b034:	mov	r2, r5
   2b038:	str	r3, [r0, #-8]!
   2b03c:	mov	r3, r5
   2b040:	bl	256a0 <error@@Base+0x2a60>
   2b044:	mov	r1, r5
   2b048:	str	r0, [r4, #16]
   2b04c:	mov	r0, r4
   2b050:	bl	2ab6c <error@@Base+0x7f2c>
   2b054:	cmp	r0, r5
   2b058:	beq	2b08c <error@@Base+0x844c>
   2b05c:	strb	r9, [r4, #26]
   2b060:	mov	r0, #28
   2b064:	bl	22f44 <error@@Base+0x304>
   2b068:	mov	r8, r0
   2b06c:	ldr	r0, [r7, #8]
   2b070:	str	r8, [r4, #20]
   2b074:	str	r5, [r8]
   2b078:	str	r5, [r8, #4]
   2b07c:	bl	2312c <error@@Base+0x4ec>
   2b080:	ldr	r3, [r4, #20]
   2b084:	str	r0, [r8, #8]
   2b088:	str	r5, [r3, #16]
   2b08c:	ldr	r2, [sp, #12]
   2b090:	ldr	r3, [r6]
   2b094:	cmp	r2, r3
   2b098:	bne	2b0c4 <error@@Base+0x8484>
   2b09c:	add	sp, sp, #20
   2b0a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b0a4:	movw	r0, #17904	; 0x45f0
   2b0a8:	movw	r1, #17936	; 0x4610
   2b0ac:	movw	r3, #17860	; 0x45c4
   2b0b0:	movt	r0, #3
   2b0b4:	movt	r1, #3
   2b0b8:	mov	r2, #376	; 0x178
   2b0bc:	movt	r3, #3
   2b0c0:	bl	11d30 <__assert_fail@plt>
   2b0c4:	bl	11934 <__stack_chk_fail@plt>
   2b0c8:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b0cc:	mov	r8, r0
   2b0d0:	mov	r0, #28
   2b0d4:	mov	r7, r2
   2b0d8:	ldr	r4, [sp, #40]	; 0x28
   2b0dc:	mov	r6, r1
   2b0e0:	ldr	r5, [sp, #44]	; 0x2c
   2b0e4:	mov	sl, r3
   2b0e8:	ldr	r9, [sp, #48]	; 0x30
   2b0ec:	bl	22f44 <error@@Base+0x304>
   2b0f0:	mov	fp, r0
   2b0f4:	str	r6, [r0, #12]
   2b0f8:	str	r5, [fp, #20]
   2b0fc:	lsl	r0, r7, #2
   2b100:	str	r4, [fp, #16]
   2b104:	strh	r7, [fp, #24]
   2b108:	str	r8, [fp, #4]
   2b10c:	bl	22f44 <error@@Base+0x304>
   2b110:	cmp	r7, #0
   2b114:	movne	r4, #0
   2b118:	movne	r5, r4
   2b11c:	str	r0, [fp, #8]
   2b120:	movne	r6, r0
   2b124:	bne	2b130 <error@@Base+0x84f0>
   2b128:	b	2b164 <error@@Base+0x8524>
   2b12c:	ldr	r6, [fp, #8]
   2b130:	ldr	r0, [r8, r4]
   2b134:	bl	11b5c <strlen@plt>
   2b138:	ldr	ip, [fp, #12]
   2b13c:	ldr	r3, [ip, r4]
   2b140:	cmp	r3, #0
   2b144:	str	r0, [r6, r4]
   2b148:	beq	2b17c <error@@Base+0x853c>
   2b14c:	add	r5, r5, #1
   2b150:	add	r3, r3, #1
   2b154:	cmp	r5, r7
   2b158:	str	r3, [ip, r4]
   2b15c:	add	r4, r4, #4
   2b160:	bne	2b12c <error@@Base+0x84ec>
   2b164:	mov	r1, r9
   2b168:	mov	r0, fp
   2b16c:	bl	2ab6c <error@@Base+0x7f2c>
   2b170:	cmp	r0, #0
   2b174:	strbne	sl, [fp, #26]
   2b178:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b17c:	movw	r0, #17944	; 0x4618
   2b180:	movw	r1, #17936	; 0x4610
   2b184:	movt	r0, #3
   2b188:	movt	r1, #3
   2b18c:	mov	r2, #464	; 0x1d0
   2b190:	ldr	r3, [pc]	; 2b198 <error@@Base+0x8558>
   2b194:	bl	11d30 <__assert_fail@plt>
   2b198:	ldrdeq	r4, [r3], -ip
   2b19c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b1a0:	add	fp, sp, #32
   2b1a4:	sub	sp, sp, #28
   2b1a8:	movw	r4, #26864	; 0x68f0
   2b1ac:	movt	r4, #4
   2b1b0:	mov	r6, r0
   2b1b4:	mov	r0, #4
   2b1b8:	ldr	r3, [r4]
   2b1bc:	mov	r5, r1
   2b1c0:	mov	r9, r2
   2b1c4:	str	r3, [fp, #-40]	; 0xffffffd8
   2b1c8:	bl	22f44 <error@@Base+0x304>
   2b1cc:	mov	r8, r0
   2b1d0:	mov	r0, #4
   2b1d4:	bl	22f44 <error@@Base+0x304>
   2b1d8:	cmp	r6, #0
   2b1dc:	mov	r7, r0
   2b1e0:	beq	2b2c0 <error@@Base+0x8680>
   2b1e4:	mov	r0, r6
   2b1e8:	bl	11b5c <strlen@plt>
   2b1ec:	mov	r1, r6
   2b1f0:	add	r3, r0, #16
   2b1f4:	add	sl, r0, #1
   2b1f8:	bic	r3, r3, #7
   2b1fc:	mov	r0, #37	; 0x25
   2b200:	sub	sp, sp, r3
   2b204:	mov	r2, sl
   2b208:	add	r6, sp, #16
   2b20c:	mov	r3, r6
   2b210:	strb	r0, [r3], #1
   2b214:	mov	r0, r3
   2b218:	bl	118c8 <memcpy@plt>
   2b21c:	mov	r0, r6
   2b220:	mov	r1, sl
   2b224:	bl	2b9dc <error@@Base+0x8d9c>
   2b228:	str	r0, [r8]
   2b22c:	str	r0, [r7]
   2b230:	cmp	r5, #0
   2b234:	beq	2b28c <error@@Base+0x864c>
   2b238:	mov	r0, r5
   2b23c:	bl	11b5c <strlen@plt>
   2b240:	mov	r1, r5
   2b244:	add	r3, r0, #16
   2b248:	add	r6, r0, #1
   2b24c:	bic	r3, r3, #7
   2b250:	mov	r0, #37	; 0x25
   2b254:	sub	sp, sp, r3
   2b258:	mov	r2, r6
   2b25c:	add	sl, sp, #16
   2b260:	mov	r3, sl
   2b264:	strb	r0, [r3], #1
   2b268:	mov	r0, r3
   2b26c:	bl	118c8 <memcpy@plt>
   2b270:	mov	r0, #20
   2b274:	bl	22f78 <error@@Base+0x338>
   2b278:	mov	r1, r6
   2b27c:	mov	r5, r0
   2b280:	mov	r0, sl
   2b284:	bl	2b9dc <error@@Base+0x8d9c>
   2b288:	str	r0, [r5, #4]
   2b28c:	mov	r3, #0
   2b290:	mov	r2, #1
   2b294:	str	r3, [sp, #8]
   2b298:	mov	r0, r8
   2b29c:	stm	sp, {r5, r9}
   2b2a0:	mov	r1, r7
   2b2a4:	bl	2b0c8 <error@@Base+0x8488>
   2b2a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b2ac:	ldr	r3, [r4]
   2b2b0:	cmp	r2, r3
   2b2b4:	bne	2b2e0 <error@@Base+0x86a0>
   2b2b8:	sub	sp, fp, #32
   2b2bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b2c0:	movw	r0, #17976	; 0x4638
   2b2c4:	mov	r1, #5
   2b2c8:	movt	r0, #3
   2b2cc:	bl	2b9dc <error@@Base+0x8d9c>
   2b2d0:	str	r0, [r8]
   2b2d4:	add	r0, r0, #1
   2b2d8:	str	r0, [r7]
   2b2dc:	b	2b230 <error@@Base+0x85f0>
   2b2e0:	bl	11934 <__stack_chk_fail@plt>
   2b2e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b2e8:	add	fp, sp, #32
   2b2ec:	sub	sp, sp, #20
   2b2f0:	movw	r3, #29700	; 0x7404
   2b2f4:	movt	r3, #4
   2b2f8:	str	r3, [fp, #-48]	; 0xffffffd0
   2b2fc:	movw	r3, #26864	; 0x68f0
   2b300:	movt	r3, #4
   2b304:	str	r3, [fp, #-52]	; 0xffffffcc
   2b308:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b30c:	mov	r6, #0
   2b310:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2b314:	movw	r7, #29724	; 0x741c
   2b318:	movt	r7, #4
   2b31c:	ldr	r2, [r3]
   2b320:	ldr	r3, [r1]
   2b324:	str	r6, [r7]
   2b328:	ldr	r5, [r2, #12]
   2b32c:	str	r3, [fp, #-40]	; 0xffffffd8
   2b330:	cmp	r5, r6
   2b334:	beq	2b54c <error@@Base+0x890c>
   2b338:	mov	r4, r5
   2b33c:	ldr	r0, [r4, #4]
   2b340:	cmp	r0, #0
   2b344:	ldreq	r3, [r4, #12]
   2b348:	ldreq	r0, [r3]
   2b34c:	bl	11b5c <strlen@plt>
   2b350:	ldr	r4, [r4]
   2b354:	cmp	r0, r6
   2b358:	strhi	r0, [r7]
   2b35c:	movhi	r6, r0
   2b360:	cmp	r4, #0
   2b364:	bne	2b33c <error@@Base+0x86fc>
   2b368:	lsl	r3, r6, #1
   2b36c:	add	r3, r3, #15
   2b370:	bic	r3, r3, #7
   2b374:	sub	sp, sp, r3
   2b378:	mov	r8, sp
   2b37c:	ldr	r0, [r5, #4]
   2b380:	mov	r1, #0
   2b384:	mov	r2, r1
   2b388:	cmp	r0, #0
   2b38c:	ldreq	r3, [r5, #12]
   2b390:	ldreq	r0, [r3]
   2b394:	bl	2b19c <error@@Base+0x855c>
   2b398:	ldr	r3, [r5, #12]
   2b39c:	ldr	r2, [r3, #16]
   2b3a0:	cmp	r2, #0
   2b3a4:	beq	2b3c0 <error@@Base+0x8780>
   2b3a8:	ldr	r1, [r5, #4]
   2b3ac:	movw	r0, #6032	; 0x1790
   2b3b0:	movt	r0, #3
   2b3b4:	cmp	r1, #0
   2b3b8:	ldreq	r1, [r3]
   2b3bc:	bl	2b19c <error@@Base+0x855c>
   2b3c0:	ldr	r4, [r5, #4]
   2b3c4:	cmp	r4, #0
   2b3c8:	ldreq	r3, [r5, #12]
   2b3cc:	ldreq	r4, [r3]
   2b3d0:	mov	r0, r4
   2b3d4:	bl	11b5c <strlen@plt>
   2b3d8:	mov	r1, r4
   2b3dc:	mov	r6, r0
   2b3e0:	mov	r0, r8
   2b3e4:	mov	r2, r6
   2b3e8:	bl	118c8 <memcpy@plt>
   2b3ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2b3f0:	ldr	r3, [r2]
   2b3f4:	ldr	sl, [r3, #12]
   2b3f8:	cmp	sl, #0
   2b3fc:	addne	r7, r8, r6
   2b400:	bne	2b478 <error@@Base+0x8838>
   2b404:	b	2b540 <error@@Base+0x8900>
   2b408:	cmp	r4, #0
   2b40c:	mov	r0, r7
   2b410:	ldreq	r2, [sl, #12]
   2b414:	movne	r1, r4
   2b418:	ldreq	r1, [r2]
   2b41c:	add	r2, r9, #1
   2b420:	bl	118c8 <memcpy@plt>
   2b424:	mov	r0, r8
   2b428:	bl	17ae8 <__assert_fail@plt+0x5db8>
   2b42c:	subs	r4, r0, #0
   2b430:	beq	2b46c <error@@Base+0x882c>
   2b434:	ldr	r2, [r4, #16]
   2b438:	cmp	r2, #0
   2b43c:	beq	2b46c <error@@Base+0x882c>
   2b440:	cmp	r9, #2
   2b444:	beq	2b568 <error@@Base+0x8928>
   2b448:	ldr	r0, [sl, #4]
   2b44c:	cmp	r0, #0
   2b450:	ldreq	r1, [sl, #12]
   2b454:	ldreq	r0, [r1]
   2b458:	ldr	r1, [r5, #4]
   2b45c:	cmp	r1, #0
   2b460:	ldreq	r1, [r5, #12]
   2b464:	ldreq	r1, [r1]
   2b468:	bl	2b19c <error@@Base+0x855c>
   2b46c:	ldr	sl, [sl]
   2b470:	cmp	sl, #0
   2b474:	beq	2b540 <error@@Base+0x8900>
   2b478:	ldr	r4, [sl, #4]
   2b47c:	cmp	r4, #0
   2b480:	ldreq	r2, [sl, #12]
   2b484:	movne	r0, r4
   2b488:	ldreq	r0, [r2]
   2b48c:	bl	11b5c <strlen@plt>
   2b490:	cmp	r6, r0
   2b494:	mov	r9, r0
   2b498:	bne	2b408 <error@@Base+0x87c8>
   2b49c:	ldr	r0, [r5, #4]
   2b4a0:	cmp	r0, #0
   2b4a4:	ldreq	r2, [r5, #12]
   2b4a8:	movne	r1, r0
   2b4ac:	ldreq	r1, [r2]
   2b4b0:	cmp	r4, #0
   2b4b4:	ldreq	r2, [sl, #12]
   2b4b8:	movne	r2, r4
   2b4bc:	ldreq	r2, [r2]
   2b4c0:	cmp	r1, r2
   2b4c4:	beq	2b46c <error@@Base+0x882c>
   2b4c8:	cmp	r0, #0
   2b4cc:	ldreq	r2, [r5, #12]
   2b4d0:	movne	r2, r0
   2b4d4:	ldreq	r2, [r2]
   2b4d8:	cmp	r4, #0
   2b4dc:	ldreq	r1, [sl, #12]
   2b4e0:	movne	r1, r4
   2b4e4:	ldrb	r2, [r2]
   2b4e8:	ldreq	r1, [r1]
   2b4ec:	ldrb	r1, [r1]
   2b4f0:	cmp	r1, r2
   2b4f4:	bne	2b408 <error@@Base+0x87c8>
   2b4f8:	cmp	r0, #0
   2b4fc:	ldreq	r2, [r5, #12]
   2b500:	ldreq	r0, [r2]
   2b504:	ldrb	r2, [r0]
   2b508:	cmp	r2, #0
   2b50c:	beq	2b46c <error@@Base+0x882c>
   2b510:	cmp	r4, #0
   2b514:	add	r0, r0, #1
   2b518:	addne	r1, r4, #1
   2b51c:	ldreq	r2, [sl, #12]
   2b520:	ldreq	r1, [r2]
   2b524:	addeq	r1, r1, #1
   2b528:	bl	1182c <strcmp@plt>
   2b52c:	cmp	r0, #0
   2b530:	bne	2b408 <error@@Base+0x87c8>
   2b534:	ldr	sl, [sl]
   2b538:	cmp	sl, #0
   2b53c:	bne	2b478 <error@@Base+0x8838>
   2b540:	ldr	r5, [r5]
   2b544:	cmp	r5, #0
   2b548:	bne	2b37c <error@@Base+0x873c>
   2b54c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2b550:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b554:	ldr	r3, [r1]
   2b558:	cmp	r2, r3
   2b55c:	bne	2b5a0 <error@@Base+0x8960>
   2b560:	sub	sp, fp, #32
   2b564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b568:	ldrb	r1, [r7]
   2b56c:	cmp	r1, #46	; 0x2e
   2b570:	bne	2b448 <error@@Base+0x8808>
   2b574:	ldrb	r1, [r7, #1]
   2b578:	cmp	r1, #97	; 0x61
   2b57c:	bne	2b448 <error@@Base+0x8808>
   2b580:	ldr	r1, [r5, #4]
   2b584:	mov	r0, #0
   2b588:	cmp	r1, #0
   2b58c:	ldreq	r1, [r5, #12]
   2b590:	ldreq	r1, [r1]
   2b594:	bl	2b19c <error@@Base+0x855c>
   2b598:	ldr	r2, [r4, #16]
   2b59c:	b	2b448 <error@@Base+0x8808>
   2b5a0:	bl	11934 <__stack_chk_fail@plt>
   2b5a4:	push	{r4, r5, r6, r7, r8, lr}
   2b5a8:	mov	r2, #5
   2b5ac:	movw	r1, #17984	; 0x4640
   2b5b0:	mov	r0, #0
   2b5b4:	movt	r1, #3
   2b5b8:	bl	1191c <dcgettext@plt>
   2b5bc:	bl	11a9c <puts@plt>
   2b5c0:	movw	r3, #29704	; 0x7408
   2b5c4:	movt	r3, #4
   2b5c8:	ldr	r5, [r3]
   2b5cc:	cmp	r5, #0
   2b5d0:	beq	2b744 <error@@Base+0x8b04>
   2b5d4:	mov	r8, #0
   2b5d8:	movw	r6, #26888	; 0x6908
   2b5dc:	movt	r6, #4
   2b5e0:	mov	r7, r8
   2b5e4:	mov	r0, #10
   2b5e8:	ldr	r1, [r6]
   2b5ec:	bl	119f4 <_IO_putc@plt>
   2b5f0:	ldrh	r3, [r5, #24]
   2b5f4:	add	r7, r7, #1
   2b5f8:	cmp	r3, #0
   2b5fc:	movne	r4, #0
   2b600:	beq	2b63c <error@@Base+0x89fc>
   2b604:	ldr	r0, [r5, #4]
   2b608:	ldr	r1, [r6]
   2b60c:	ldr	r0, [r0, r4, lsl #2]
   2b610:	add	r4, r4, #1
   2b614:	bl	11ce8 <fputs@plt>
   2b618:	ldrh	r0, [r5, #24]
   2b61c:	ldr	r1, [r6]
   2b620:	cmp	r4, r0
   2b624:	moveq	r0, #58	; 0x3a
   2b628:	movne	r0, #32
   2b62c:	bl	119f4 <_IO_putc@plt>
   2b630:	ldrh	r1, [r5, #24]
   2b634:	cmp	r4, r1
   2b638:	bcc	2b604 <error@@Base+0x89c4>
   2b63c:	ldrb	r3, [r5, #26]
   2b640:	cmp	r3, #0
   2b644:	bne	2b734 <error@@Base+0x8af4>
   2b648:	ldr	r0, [r5, #16]
   2b64c:	bl	18f70 <__assert_fail@plt+0x7240>
   2b650:	ldr	r0, [r5, #20]
   2b654:	cmp	r0, #0
   2b658:	beq	2b660 <error@@Base+0x8a20>
   2b65c:	bl	159ac <__assert_fail@plt+0x3c7c>
   2b660:	ldrb	r3, [r5, #26]
   2b664:	ldr	r5, [r5]
   2b668:	cmp	r3, #0
   2b66c:	addne	r8, r8, #1
   2b670:	cmp	r5, #0
   2b674:	bne	2b5e4 <error@@Base+0x89a4>
   2b678:	cmp	r7, #0
   2b67c:	beq	2b744 <error@@Base+0x8b04>
   2b680:	mov	r2, #5
   2b684:	movw	r1, #18028	; 0x466c
   2b688:	mov	r0, r5
   2b68c:	movt	r1, #3
   2b690:	bl	1191c <dcgettext@plt>
   2b694:	mov	r2, r7
   2b698:	mov	r3, r8
   2b69c:	mov	r1, r0
   2b6a0:	mov	r0, #1
   2b6a4:	bl	11be0 <__printf_chk@plt>
   2b6a8:	vmov	s9, r8
   2b6ac:	vldr	d7, [pc, #180]	; 2b768 <error@@Base+0x8b28>
   2b6b0:	movw	r1, #18056	; 0x4688
   2b6b4:	vcvt.f64.u32	d5, s9
   2b6b8:	movt	r1, #3
   2b6bc:	vmov	s9, r7
   2b6c0:	mov	r0, #1
   2b6c4:	vcvt.f64.u32	d6, s9
   2b6c8:	vdiv.f64	d6, d5, d6
   2b6cc:	vmul.f64	d5, d6, d7
   2b6d0:	vmov	r2, r3, d5
   2b6d4:	bl	11be0 <__printf_chk@plt>
   2b6d8:	movw	r1, #18068	; 0x4694
   2b6dc:	mov	r2, #5
   2b6e0:	movt	r1, #3
   2b6e4:	mov	r0, r5
   2b6e8:	bl	1191c <dcgettext@plt>
   2b6ec:	bl	11a9c <puts@plt>
   2b6f0:	movw	r4, #29728	; 0x7420
   2b6f4:	movt	r4, #4
   2b6f8:	ldr	r3, [r4]
   2b6fc:	cmp	r3, r7
   2b700:	popeq	{r4, r5, r6, r7, r8, pc}
   2b704:	cmp	r3, #0
   2b708:	popeq	{r4, r5, r6, r7, r8, pc}
   2b70c:	mov	r2, #5
   2b710:	movw	r1, #18080	; 0x46a0
   2b714:	mov	r0, #0
   2b718:	movt	r1, #3
   2b71c:	bl	1191c <dcgettext@plt>
   2b720:	ldr	r2, [r4]
   2b724:	mov	r3, r7
   2b728:	mov	r1, r0
   2b72c:	mov	r0, #0
   2b730:	bl	22d64 <error@@Base+0x124>
   2b734:	ldr	r1, [r6]
   2b738:	mov	r0, #58	; 0x3a
   2b73c:	bl	119f4 <_IO_putc@plt>
   2b740:	b	2b648 <error@@Base+0x8a08>
   2b744:	mov	r2, #5
   2b748:	movw	r1, #18004	; 0x4654
   2b74c:	mov	r0, #0
   2b750:	movt	r1, #3
   2b754:	bl	1191c <dcgettext@plt>
   2b758:	mov	r7, #0
   2b75c:	bl	11a9c <puts@plt>
   2b760:	b	2b6f0 <error@@Base+0x8ab0>
   2b764:	nop	{0}
   2b768:	andeq	r0, r0, r0
   2b76c:	subsmi	r0, r9, r0
   2b770:	ldrb	r3, [r0]
   2b774:	mov	r2, r0
   2b778:	cmp	r3, #0
   2b77c:	beq	2b7a0 <error@@Base+0x8b60>
   2b780:	mov	r0, #0
   2b784:	mov	ip, r3
   2b788:	ldrb	r3, [r2, #1]!
   2b78c:	cmp	r3, #0
   2b790:	and	r1, r3, #15
   2b794:	add	r0, r0, ip, lsl r1
   2b798:	bne	2b784 <error@@Base+0x8b44>
   2b79c:	bx	lr
   2b7a0:	mov	r0, r3
   2b7a4:	bx	lr
   2b7a8:	ldrb	r3, [r0]
   2b7ac:	mov	r2, r0
   2b7b0:	cmp	r3, #0
   2b7b4:	beq	2b7d8 <error@@Base+0x8b98>
   2b7b8:	mov	r0, #0
   2b7bc:	mov	ip, r3
   2b7c0:	ldrb	r3, [r2, #1]!
   2b7c4:	cmp	r3, #0
   2b7c8:	and	r1, r3, #7
   2b7cc:	add	r0, r0, ip, lsl r1
   2b7d0:	bne	2b7bc <error@@Base+0x8b7c>
   2b7d4:	bx	lr
   2b7d8:	mov	r0, r3
   2b7dc:	bx	lr
   2b7e0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2b7e4:	movw	r5, #28316	; 0x6e9c
   2b7e8:	movt	r5, #4
   2b7ec:	mov	r8, r0
   2b7f0:	mov	r6, r1
   2b7f4:	mov	r1, r8
   2b7f8:	mov	r0, r5
   2b7fc:	bl	2e8ec <error@@Base+0xbcac>
   2b800:	ldr	r3, [r5, #44]	; 0x2c
   2b804:	add	r3, r3, #1
   2b808:	str	r3, [r5, #44]	; 0x2c
   2b80c:	ldr	ip, [r0]
   2b810:	mov	r7, r0
   2b814:	cmp	ip, #0
   2b818:	beq	2b838 <error@@Base+0x8bf8>
   2b81c:	movw	r3, #26848	; 0x68e0
   2b820:	movt	r3, #4
   2b824:	ldr	r3, [r3]
   2b828:	cmp	ip, r3
   2b82c:	beq	2b838 <error@@Base+0x8bf8>
   2b830:	mov	r0, ip
   2b834:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2b838:	movw	r9, #26820	; 0x68c4
   2b83c:	movt	r9, #4
   2b840:	ldr	r3, [r9]
   2b844:	cmp	r6, r3
   2b848:	lslgt	r3, r6, #1
   2b84c:	strgt	r3, [r9]
   2b850:	ldr	r3, [r5, #48]	; 0x30
   2b854:	cmp	r3, #0
   2b858:	beq	2b908 <error@@Base+0x8cc8>
   2b85c:	mov	r4, #0
   2b860:	ldr	ip, [r3, #12]
   2b864:	cmp	r6, ip
   2b868:	bge	2b884 <error@@Base+0x8c44>
   2b86c:	cmp	r4, #0
   2b870:	moveq	r4, r3
   2b874:	beq	2b884 <error@@Base+0x8c44>
   2b878:	ldr	lr, [r4, #12]
   2b87c:	cmp	ip, lr
   2b880:	movlt	r4, r3
   2b884:	ldr	r3, [r3]
   2b888:	cmp	r3, #0
   2b88c:	bne	2b860 <error@@Base+0x8c20>
   2b890:	cmp	r4, #0
   2b894:	beq	2b908 <error@@Base+0x8cc8>
   2b898:	ldr	r3, [r4, #12]
   2b89c:	cmp	r6, r3
   2b8a0:	bge	2b944 <error@@Base+0x8d04>
   2b8a4:	ldr	r5, [r4, #4]
   2b8a8:	mov	r1, r8
   2b8ac:	mov	r2, r6
   2b8b0:	mov	r0, r5
   2b8b4:	bl	118c8 <memcpy@plt>
   2b8b8:	ldr	r3, [r4, #4]
   2b8bc:	mov	r1, #0
   2b8c0:	mov	r2, r7
   2b8c4:	add	r0, r3, r6
   2b8c8:	mvn	ip, r6
   2b8cc:	add	r0, r0, #1
   2b8d0:	str	r0, [r4, #4]
   2b8d4:	strb	r1, [r3, r6]
   2b8d8:	movw	r0, #28316	; 0x6e9c
   2b8dc:	ldr	lr, [r4, #12]
   2b8e0:	mov	r1, r5
   2b8e4:	ldr	r3, [r4, #8]
   2b8e8:	movt	r0, #4
   2b8ec:	add	ip, lr, ip
   2b8f0:	str	ip, [r4, #12]
   2b8f4:	add	r3, r3, #1
   2b8f8:	str	r3, [r4, #8]
   2b8fc:	bl	2ea00 <error@@Base+0xbdc0>
   2b900:	mov	r0, r5
   2b904:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2b908:	ldr	r0, [r9]
   2b90c:	add	r0, r0, #20
   2b910:	bl	22f44 <error@@Base+0x304>
   2b914:	ldr	r2, [r9]
   2b918:	ldr	r1, [r5, #48]	; 0x30
   2b91c:	mov	r4, r0
   2b920:	add	r3, r0, #16
   2b924:	str	r2, [r4, #12]
   2b928:	mov	r0, #0
   2b92c:	str	r3, [r4, #4]
   2b930:	mov	r3, r2
   2b934:	str	r0, [r4, #8]
   2b938:	str	r1, [r4]
   2b93c:	str	r4, [r5, #48]	; 0x30
   2b940:	b	2b89c <error@@Base+0x8c5c>
   2b944:	movw	r0, #18136	; 0x46d8
   2b948:	movw	r1, #18160	; 0x46f0
   2b94c:	movw	r3, #18124	; 0x46cc
   2b950:	movt	r0, #3
   2b954:	movt	r1, #3
   2b958:	mov	r2, #87	; 0x57
   2b95c:	movt	r3, #3
   2b960:	bl	11d30 <__assert_fail@plt>
   2b964:	cmp	r1, r0
   2b968:	beq	2b970 <error@@Base+0x8d30>
   2b96c:	b	1182c <strcmp@plt>
   2b970:	mov	r0, #0
   2b974:	bx	lr
   2b978:	movw	r3, #28316	; 0x6e9c
   2b97c:	movt	r3, #4
   2b980:	ldr	r3, [r3, #48]	; 0x30
   2b984:	cmp	r3, #0
   2b988:	beq	2b9b0 <error@@Base+0x8d70>
   2b98c:	add	r2, r3, #16
   2b990:	cmp	r0, r2
   2b994:	bcc	2b9a4 <error@@Base+0x8d64>
   2b998:	ldr	r2, [r3, #4]
   2b99c:	cmp	r0, r2
   2b9a0:	bcc	2b9b8 <error@@Base+0x8d78>
   2b9a4:	ldr	r3, [r3]
   2b9a8:	cmp	r3, #0
   2b9ac:	bne	2b98c <error@@Base+0x8d4c>
   2b9b0:	mov	r0, r3
   2b9b4:	bx	lr
   2b9b8:	mov	r0, #1
   2b9bc:	bx	lr
   2b9c0:	push	{r4, lr}
   2b9c4:	mov	r4, r0
   2b9c8:	bl	11b5c <strlen@plt>
   2b9cc:	mov	r1, r0
   2b9d0:	mov	r0, r4
   2b9d4:	pop	{r4, lr}
   2b9d8:	b	2b7e0 <error@@Base+0x8ba0>
   2b9dc:	push	{r4, r5, r6, fp, lr}
   2b9e0:	add	fp, sp, #16
   2b9e4:	sub	sp, sp, #12
   2b9e8:	movw	r4, #26864	; 0x68f0
   2b9ec:	movt	r4, #4
   2b9f0:	mov	r5, r1
   2b9f4:	ldrb	r2, [r0, r1]
   2b9f8:	ldr	r3, [r4]
   2b9fc:	cmp	r2, #0
   2ba00:	str	r3, [fp, #-24]	; 0xffffffe8
   2ba04:	beq	2ba38 <error@@Base+0x8df8>
   2ba08:	add	r3, r1, #15
   2ba0c:	mov	r2, r5
   2ba10:	bic	r3, r3, #7
   2ba14:	mov	r1, r0
   2ba18:	sub	sp, sp, r3
   2ba1c:	mov	r3, sp
   2ba20:	lsr	r6, r3, #3
   2ba24:	lsl	r3, r6, #3
   2ba28:	mov	r0, r3
   2ba2c:	bl	118c8 <memcpy@plt>
   2ba30:	mov	r3, #0
   2ba34:	strb	r3, [r5, r6, lsl #3]
   2ba38:	mov	r1, r5
   2ba3c:	bl	2b7e0 <error@@Base+0x8ba0>
   2ba40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ba44:	ldr	r3, [r4]
   2ba48:	cmp	r2, r3
   2ba4c:	bne	2ba58 <error@@Base+0x8e18>
   2ba50:	sub	sp, fp, #16
   2ba54:	pop	{r4, r5, r6, fp, pc}
   2ba58:	bl	11934 <__stack_chk_fail@plt>
   2ba5c:	movw	r3, #26820	; 0x68c4
   2ba60:	movt	r3, #4
   2ba64:	ldr	r2, [r3]
   2ba68:	cmp	r2, r0
   2ba6c:	strlt	r0, [r3]
   2ba70:	movge	r0, r2
   2ba74:	bx	lr
   2ba78:	push	{lr}		; (str lr, [sp, #-4]!)
   2ba7c:	sub	sp, sp, #12
   2ba80:	mov	r1, #8000	; 0x1f40
   2ba84:	movw	r3, #47460	; 0xb964
   2ba88:	movw	r0, #28316	; 0x6e9c
   2ba8c:	movt	r3, #2
   2ba90:	movt	r0, #4
   2ba94:	str	r3, [sp]
   2ba98:	movw	r2, #46960	; 0xb770
   2ba9c:	movw	r3, #47016	; 0xb7a8
   2baa0:	movt	r2, #2
   2baa4:	movt	r3, #2
   2baa8:	bl	2e838 <error@@Base+0xbbf8>
   2baac:	add	sp, sp, #12
   2bab0:	pop	{pc}		; (ldr pc, [sp], #4)
   2bab4:	movw	r3, #28316	; 0x6e9c
   2bab8:	movt	r3, #4
   2babc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bac0:	movw	ip, #26820	; 0x68c4
   2bac4:	ldr	r1, [r3, #48]	; 0x30
   2bac8:	sub	sp, sp, #52	; 0x34
   2bacc:	movt	ip, #4
   2bad0:	cmp	r1, #0
   2bad4:	str	r0, [sp, #24]
   2bad8:	ldr	r5, [ip]
   2badc:	beq	2bce0 <error@@Base+0x90a0>
   2bae0:	ldr	r2, [r1]
   2bae4:	add	r0, r1, #16
   2bae8:	ldr	lr, [r1, #4]
   2baec:	ldr	r1, [r1, #12]
   2baf0:	cmp	r2, #0
   2baf4:	rsb	lr, r0, lr
   2baf8:	str	lr, [sp, #44]	; 0x2c
   2bafc:	str	r1, [sp, #40]	; 0x28
   2bb00:	beq	2bce8 <error@@Base+0x90a8>
   2bb04:	mov	r4, #0
   2bb08:	mov	sl, r5
   2bb0c:	mov	r7, r4
   2bb10:	mov	r9, r4
   2bb14:	mov	r6, r4
   2bb18:	mov	r8, r4
   2bb1c:	mov	fp, r4
   2bb20:	ldr	lr, [r2, #4]
   2bb24:	add	r0, r2, #16
   2bb28:	ldr	r1, [r2, #12]
   2bb2c:	add	fp, fp, #1
   2bb30:	rsb	r0, r0, lr
   2bb34:	ldr	lr, [r2, #8]
   2bb38:	ldr	r2, [r2]
   2bb3c:	cmp	r9, r0
   2bb40:	movlt	r9, r0
   2bb44:	cmp	r5, r0
   2bb48:	movge	r5, r0
   2bb4c:	cmp	r4, r1
   2bb50:	movlt	r4, r1
   2bb54:	cmp	sl, r1
   2bb58:	movge	sl, r1
   2bb5c:	cmp	r2, #0
   2bb60:	add	r6, r6, r0
   2bb64:	add	r7, r7, r1
   2bb68:	add	r8, r8, lr
   2bb6c:	bne	2bb20 <error@@Base+0x8ee0>
   2bb70:	mov	r1, fp
   2bb74:	mov	r0, r6
   2bb78:	str	r3, [sp, #20]
   2bb7c:	str	ip, [sp, #16]
   2bb80:	bl	2ef78 <error@@Base+0xc338>
   2bb84:	mov	r1, fp
   2bb88:	add	fp, fp, #1
   2bb8c:	str	fp, [sp, #28]
   2bb90:	mov	fp, r8
   2bb94:	str	r0, [sp, #36]	; 0x24
   2bb98:	mov	r0, r7
   2bb9c:	bl	2ef78 <error@@Base+0xc338>
   2bba0:	ldr	ip, [sp, #16]
   2bba4:	ldr	r3, [sp, #20]
   2bba8:	str	r0, [sp, #32]
   2bbac:	mov	r2, #5
   2bbb0:	movw	r1, #18172	; 0x46fc
   2bbb4:	mov	r0, #0
   2bbb8:	movt	r1, #3
   2bbbc:	str	ip, [sp, #16]
   2bbc0:	str	r3, [sp, #20]
   2bbc4:	bl	1191c <dcgettext@plt>
   2bbc8:	ldr	r3, [sp, #20]
   2bbcc:	ldr	r2, [sp, #24]
   2bbd0:	ldr	lr, [r3, #44]	; 0x2c
   2bbd4:	mov	r3, r8
   2bbd8:	movw	r8, #26888	; 0x6908
   2bbdc:	movt	r8, #4
   2bbe0:	rsb	fp, fp, lr
   2bbe4:	str	fp, [sp, #4]
   2bbe8:	str	lr, [sp]
   2bbec:	mov	r1, r0
   2bbf0:	mov	r0, #1
   2bbf4:	bl	11be0 <__printf_chk@plt>
   2bbf8:	mov	r2, #5
   2bbfc:	movw	r1, #18236	; 0x473c
   2bc00:	mov	r0, #0
   2bc04:	movt	r1, #3
   2bc08:	bl	1191c <dcgettext@plt>
   2bc0c:	ldr	ip, [sp, #16]
   2bc10:	ldr	r3, [sp, #28]
   2bc14:	ldr	r2, [sp, #24]
   2bc18:	ldr	ip, [ip]
   2bc1c:	mul	fp, r3, ip
   2bc20:	str	ip, [sp]
   2bc24:	str	fp, [sp, #4]
   2bc28:	mov	r1, r0
   2bc2c:	mov	r0, #1
   2bc30:	bl	11be0 <__printf_chk@plt>
   2bc34:	mov	r2, #5
   2bc38:	movw	r1, #18292	; 0x4774
   2bc3c:	mov	r0, #0
   2bc40:	movt	r1, #3
   2bc44:	bl	1191c <dcgettext@plt>
   2bc48:	ldr	r2, [sp, #36]	; 0x24
   2bc4c:	mov	r3, r6
   2bc50:	str	r5, [sp, #8]
   2bc54:	str	r2, [sp, #12]
   2bc58:	ldr	r2, [sp, #24]
   2bc5c:	mov	r1, r0
   2bc60:	ldr	r0, [sp, #44]	; 0x2c
   2bc64:	stm	sp, {r0, r9}
   2bc68:	mov	r0, #1
   2bc6c:	bl	11be0 <__printf_chk@plt>
   2bc70:	mov	r2, #5
   2bc74:	movw	r1, #18360	; 0x47b8
   2bc78:	mov	r0, #0
   2bc7c:	movt	r1, #3
   2bc80:	bl	1191c <dcgettext@plt>
   2bc84:	ldr	lr, [sp, #32]
   2bc88:	ldr	r3, [sp, #40]	; 0x28
   2bc8c:	ldr	r2, [sp, #24]
   2bc90:	str	lr, [sp, #12]
   2bc94:	stm	sp, {r3, r4}
   2bc98:	mov	r3, r7
   2bc9c:	str	sl, [sp, #8]
   2bca0:	mov	r1, r0
   2bca4:	mov	r0, #1
   2bca8:	bl	11be0 <__printf_chk@plt>
   2bcac:	mov	r2, #5
   2bcb0:	movw	r1, #18428	; 0x47fc
   2bcb4:	mov	r0, #0
   2bcb8:	movt	r1, #3
   2bcbc:	bl	1191c <dcgettext@plt>
   2bcc0:	ldr	r1, [r8]
   2bcc4:	bl	11ce8 <fputs@plt>
   2bcc8:	ldr	r1, [r8]
   2bccc:	movw	r0, #28316	; 0x6e9c
   2bcd0:	movt	r0, #4
   2bcd4:	add	sp, sp, #52	; 0x34
   2bcd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bcdc:	b	2edcc <error@@Base+0xc18c>
   2bce0:	str	r1, [sp, #40]	; 0x28
   2bce4:	str	r1, [sp, #44]	; 0x2c
   2bce8:	mov	fp, #0
   2bcec:	mov	r0, #1
   2bcf0:	mov	sl, r5
   2bcf4:	str	fp, [sp, #36]	; 0x24
   2bcf8:	mov	r4, fp
   2bcfc:	mov	r7, fp
   2bd00:	mov	r9, fp
   2bd04:	mov	r6, fp
   2bd08:	mov	r8, fp
   2bd0c:	str	fp, [sp, #32]
   2bd10:	str	r0, [sp, #28]
   2bd14:	b	2bbac <error@@Base+0x8f6c>
   2bd18:	ldr	r1, [r0, #4]
   2bd1c:	push	{r4, r5}
   2bd20:	cmp	r1, #0
   2bd24:	ldr	r3, [r0]
   2bd28:	beq	2bd98 <error@@Base+0x9158>
   2bd2c:	cmp	r1, #1
   2bd30:	ldrbeq	r0, [r3]
   2bd34:	moveq	r1, #0
   2bd38:	beq	2bd8c <error@@Base+0x914c>
   2bd3c:	ldrb	r2, [r3]
   2bd40:	cmp	r2, #0
   2bd44:	ldrbeq	r0, [r3, #1]
   2bd48:	moveq	r1, r2
   2bd4c:	beq	2bd8c <error@@Base+0x914c>
   2bd50:	sub	r5, r1, #2
   2bd54:	mov	r1, #0
   2bd58:	add	r5, r3, r5
   2bd5c:	b	2bd6c <error@@Base+0x912c>
   2bd60:	cmp	r2, #0
   2bd64:	beq	2bda8 <error@@Base+0x9168>
   2bd68:	mov	r3, r4
   2bd6c:	mov	ip, r2
   2bd70:	ldrb	r2, [r3, #1]
   2bd74:	cmp	r3, r5
   2bd78:	add	r4, r3, #1
   2bd7c:	and	r0, r2, #15
   2bd80:	add	r1, r1, ip, lsl r0
   2bd84:	bne	2bd60 <error@@Base+0x9120>
   2bd88:	mov	r0, r2
   2bd8c:	add	r0, r0, r1
   2bd90:	pop	{r4, r5}
   2bd94:	bx	lr
   2bd98:	ldrb	r0, [r3]
   2bd9c:	pop	{r4, r5}
   2bda0:	add	r0, r0, r1
   2bda4:	bx	lr
   2bda8:	ldrb	r0, [r3, #2]
   2bdac:	pop	{r4, r5}
   2bdb0:	add	r0, r0, r1
   2bdb4:	bx	lr
   2bdb8:	ldr	r1, [r0, #4]
   2bdbc:	push	{r4, r5}
   2bdc0:	cmp	r1, #0
   2bdc4:	ldr	r3, [r0]
   2bdc8:	beq	2be38 <error@@Base+0x91f8>
   2bdcc:	cmp	r1, #1
   2bdd0:	ldrbeq	r0, [r3]
   2bdd4:	moveq	r1, #0
   2bdd8:	beq	2be2c <error@@Base+0x91ec>
   2bddc:	ldrb	r2, [r3]
   2bde0:	cmp	r2, #0
   2bde4:	ldrbeq	r0, [r3, #1]
   2bde8:	moveq	r1, r2
   2bdec:	beq	2be2c <error@@Base+0x91ec>
   2bdf0:	sub	r5, r1, #2
   2bdf4:	mov	r1, #0
   2bdf8:	add	r5, r3, r5
   2bdfc:	b	2be0c <error@@Base+0x91cc>
   2be00:	cmp	r2, #0
   2be04:	beq	2be48 <error@@Base+0x9208>
   2be08:	mov	r3, r4
   2be0c:	mov	ip, r2
   2be10:	ldrb	r2, [r3, #1]
   2be14:	cmp	r3, r5
   2be18:	add	r4, r3, #1
   2be1c:	and	r0, r2, #7
   2be20:	add	r1, r1, ip, lsl r0
   2be24:	bne	2be00 <error@@Base+0x91c0>
   2be28:	mov	r0, r2
   2be2c:	add	r0, r0, r1
   2be30:	pop	{r4, r5}
   2be34:	bx	lr
   2be38:	ldrb	r0, [r3]
   2be3c:	pop	{r4, r5}
   2be40:	add	r0, r0, r1
   2be44:	bx	lr
   2be48:	ldrb	r0, [r3, #2]
   2be4c:	pop	{r4, r5}
   2be50:	add	r0, r0, r1
   2be54:	bx	lr
   2be58:	ldr	r2, [r0, #4]
   2be5c:	ldr	r3, [r1, #4]
   2be60:	subs	r3, r2, r3
   2be64:	bne	2be7c <error@@Base+0x923c>
   2be68:	ldr	r0, [r0]
   2be6c:	ldr	r1, [r1]
   2be70:	cmp	r0, r1
   2be74:	beq	2be7c <error@@Base+0x923c>
   2be78:	b	11cf4 <strncmp@plt>
   2be7c:	mov	r0, r3
   2be80:	bx	lr
   2be84:	push	{r4, lr}
   2be88:	mov	r4, r0
   2be8c:	ldr	r0, [r0]
   2be90:	bl	1188c <free@plt>
   2be94:	ldr	r0, [r4, #8]
   2be98:	pop	{r4, lr}
   2be9c:	b	1188c <free@plt>
   2bea0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2bea4:	mov	r4, r0
   2bea8:	mov	r0, r1
   2beac:	mov	r7, r1
   2beb0:	bl	11b5c <strlen@plt>
   2beb4:	cmp	r4, #0
   2beb8:	mov	r8, r0
   2bebc:	beq	2bf74 <error@@Base+0x9334>
   2bec0:	ldr	r4, [r4]
   2bec4:	cmp	r4, #0
   2bec8:	beq	2bf6c <error@@Base+0x932c>
   2becc:	ldr	r3, [r4, #12]
   2bed0:	cmp	r8, r3
   2bed4:	rsb	r5, r3, r8
   2bed8:	add	sl, r5, #1
   2bedc:	bcc	2bec0 <error@@Base+0x9280>
   2bee0:	ldr	r9, [r4, #4]
   2bee4:	mov	r1, r7
   2bee8:	ldr	r0, [r4, #8]
   2beec:	rsb	r6, r0, r9
   2bef0:	sub	r6, r6, #1
   2bef4:	add	r6, r7, r6
   2bef8:	cmp	r7, r6
   2befc:	rsb	r2, r7, r6
   2bf00:	bcs	2bf10 <error@@Base+0x92d0>
   2bf04:	bl	11cf4 <strncmp@plt>
   2bf08:	cmp	r0, #0
   2bf0c:	bne	2bec0 <error@@Base+0x9280>
   2bf10:	ldrb	r3, [r6, sl]
   2bf14:	ldrb	r2, [r9]
   2bf18:	cmp	r3, r2
   2bf1c:	bne	2bec0 <error@@Base+0x9280>
   2bf20:	cmp	r3, #0
   2bf24:	add	r2, r5, #2
   2bf28:	add	r1, r9, #1
   2bf2c:	add	r0, r6, r2
   2bf30:	beq	2bf6c <error@@Base+0x932c>
   2bf34:	cmp	r0, r1
   2bf38:	beq	2bf6c <error@@Base+0x932c>
   2bf3c:	ldrb	r2, [r6, r2]
   2bf40:	ldrb	r3, [r9, #1]
   2bf44:	cmp	r2, r3
   2bf48:	bne	2bec0 <error@@Base+0x9280>
   2bf4c:	cmp	r2, #0
   2bf50:	add	r1, r5, #3
   2bf54:	add	r0, r9, #2
   2bf58:	add	r1, r6, r1
   2bf5c:	beq	2bf6c <error@@Base+0x932c>
   2bf60:	bl	1182c <strcmp@plt>
   2bf64:	cmp	r0, #0
   2bf68:	bne	2bec0 <error@@Base+0x9280>
   2bf6c:	mov	r0, r4
   2bf70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2bf74:	movw	r3, #28368	; 0x6ed0
   2bf78:	movt	r3, #4
   2bf7c:	ldr	r4, [r3]
   2bf80:	b	2bec4 <error@@Base+0x9284>
   2bf84:	ldrb	r3, [r0, #23]
   2bf88:	push	{r4, r5, r6, r7, r8, lr}
   2bf8c:	ubfx	r3, r3, #2, #3
   2bf90:	mov	r6, r0
   2bf94:	mov	r5, r1
   2bf98:	cmp	r3, #6
   2bf9c:	ldrls	pc, [pc, r3, lsl #2]
   2bfa0:	b	2c244 <error@@Base+0x9604>
   2bfa4:	muleq	r2, ip, r0
   2bfa8:	strheq	ip, [r2], -r8
   2bfac:	ldrdeq	ip, [r2], -r4
   2bfb0:	strdeq	ip, [r2], -r0
   2bfb4:	andeq	ip, r2, ip, lsl #2
   2bfb8:	andeq	ip, r2, r8, lsr #2
   2bfbc:	andeq	fp, r2, r0, asr #31
   2bfc0:	movw	r1, #4396	; 0x112c
   2bfc4:	mov	r0, #0
   2bfc8:	movt	r1, #3
   2bfcc:	mov	r2, #5
   2bfd0:	bl	1191c <dcgettext@plt>
   2bfd4:	mov	r7, r0
   2bfd8:	movw	r4, #26888	; 0x6908
   2bfdc:	movt	r4, #4
   2bfe0:	mov	r1, #1
   2bfe4:	mov	r2, #2
   2bfe8:	ldr	r3, [r4]
   2bfec:	movw	r0, #8908	; 0x22cc
   2bff0:	movt	r0, #3
   2bff4:	bl	11a00 <fwrite@plt>
   2bff8:	mov	r0, r7
   2bffc:	ldr	r1, [r4]
   2c000:	bl	11ce8 <fputs@plt>
   2c004:	ldrb	r3, [r6, #20]
   2c008:	lsrs	r3, r3, #7
   2c00c:	bne	2c1ec <error@@Base+0x95ac>
   2c010:	ldr	r3, [r6, #12]
   2c014:	cmp	r3, #0
   2c018:	beq	2c044 <error@@Base+0x9404>
   2c01c:	mov	r2, #5
   2c020:	movw	r1, #18544	; 0x4870
   2c024:	mov	r0, #0
   2c028:	movt	r1, #3
   2c02c:	bl	1191c <dcgettext@plt>
   2c030:	ldr	r2, [r6, #12]
   2c034:	ldr	r3, [r6, #16]
   2c038:	mov	r1, r0
   2c03c:	mov	r0, #1
   2c040:	bl	11be0 <__printf_chk@plt>
   2c044:	ldr	r1, [r4]
   2c048:	mov	r0, #10
   2c04c:	bl	119f4 <_IO_putc@plt>
   2c050:	mov	r0, r5
   2c054:	ldr	r1, [r4]
   2c058:	bl	11ce8 <fputs@plt>
   2c05c:	ldrb	r5, [r6, #20]
   2c060:	tst	r5, #1
   2c064:	beq	2c144 <error@@Base+0x9504>
   2c068:	ldr	r7, [r6, #8]
   2c06c:	mov	r1, #10
   2c070:	mov	r0, r7
   2c074:	bl	11b68 <strchr@plt>
   2c078:	cmp	r0, #0
   2c07c:	beq	2c208 <error@@Base+0x95c8>
   2c080:	ldr	r2, [r6]
   2c084:	mov	r3, r7
   2c088:	movw	r1, #18568	; 0x4888
   2c08c:	mov	r0, #1
   2c090:	movt	r1, #3
   2c094:	pop	{r4, r5, r6, r7, r8, lr}
   2c098:	b	11be0 <__printf_chk@plt>
   2c09c:	movw	r1, #4336	; 0x10f0
   2c0a0:	mov	r0, #0
   2c0a4:	movt	r1, #3
   2c0a8:	mov	r2, #5
   2c0ac:	bl	1191c <dcgettext@plt>
   2c0b0:	mov	r7, r0
   2c0b4:	b	2bfd8 <error@@Base+0x9398>
   2c0b8:	movw	r1, #4344	; 0x10f8
   2c0bc:	mov	r0, #0
   2c0c0:	movt	r1, #3
   2c0c4:	mov	r2, #5
   2c0c8:	bl	1191c <dcgettext@plt>
   2c0cc:	mov	r7, r0
   2c0d0:	b	2bfd8 <error@@Base+0x9398>
   2c0d4:	movw	r1, #11480	; 0x2cd8
   2c0d8:	mov	r0, #0
   2c0dc:	movt	r1, #3
   2c0e0:	mov	r2, #5
   2c0e4:	bl	1191c <dcgettext@plt>
   2c0e8:	mov	r7, r0
   2c0ec:	b	2bfd8 <error@@Base+0x9398>
   2c0f0:	movw	r1, #18484	; 0x4834
   2c0f4:	mov	r0, #0
   2c0f8:	movt	r1, #3
   2c0fc:	mov	r2, #5
   2c100:	bl	1191c <dcgettext@plt>
   2c104:	mov	r7, r0
   2c108:	b	2bfd8 <error@@Base+0x9398>
   2c10c:	movw	r1, #4380	; 0x111c
   2c110:	mov	r0, #0
   2c114:	movt	r1, #3
   2c118:	mov	r2, #5
   2c11c:	bl	1191c <dcgettext@plt>
   2c120:	mov	r7, r0
   2c124:	b	2bfd8 <error@@Base+0x9398>
   2c128:	movw	r1, #18508	; 0x484c
   2c12c:	mov	r0, #0
   2c130:	movt	r1, #3
   2c134:	mov	r2, #5
   2c138:	bl	1191c <dcgettext@plt>
   2c13c:	mov	r7, r0
   2c140:	b	2bfd8 <error@@Base+0x9398>
   2c144:	ldr	r2, [r6]
   2c148:	movw	r3, #11076	; 0x2b44
   2c14c:	movt	r3, #3
   2c150:	movw	r1, #18588	; 0x489c
   2c154:	mov	r0, #1
   2c158:	movt	r1, #3
   2c15c:	bl	11be0 <__printf_chk@plt>
   2c160:	ldr	r0, [r6, #8]
   2c164:	bl	23230 <error@@Base+0x5f0>
   2c168:	ldr	r2, [r6, #8]
   2c16c:	cmp	r0, r2
   2c170:	beq	2c180 <error@@Base+0x9540>
   2c174:	ldrb	r3, [r0]
   2c178:	cmp	r3, #0
   2c17c:	beq	2c1cc <error@@Base+0x958c>
   2c180:	ldrb	r3, [r6, #20]
   2c184:	tst	r3, #1
   2c188:	bne	2c228 <error@@Base+0x95e8>
   2c18c:	ldrb	r0, [r2]
   2c190:	cmp	r0, #0
   2c194:	subne	r5, r2, #1
   2c198:	bne	2c1b8 <error@@Base+0x9578>
   2c19c:	b	2c1dc <error@@Base+0x959c>
   2c1a0:	ldrb	r0, [r5, #1]!
   2c1a4:	ldr	r1, [r4]
   2c1a8:	bl	119f4 <_IO_putc@plt>
   2c1ac:	ldrb	r0, [r5, #1]
   2c1b0:	cmp	r0, #0
   2c1b4:	beq	2c1dc <error@@Base+0x959c>
   2c1b8:	cmp	r0, #36	; 0x24
   2c1bc:	bne	2c1a0 <error@@Base+0x9560>
   2c1c0:	ldr	r1, [r4]
   2c1c4:	bl	119f4 <_IO_putc@plt>
   2c1c8:	b	2c1a0 <error@@Base+0x9560>
   2c1cc:	movw	r1, #18596	; 0x48a4
   2c1d0:	mov	r0, #1
   2c1d4:	movt	r1, #3
   2c1d8:	bl	11be0 <__printf_chk@plt>
   2c1dc:	ldr	r1, [r4]
   2c1e0:	mov	r0, #10
   2c1e4:	pop	{r4, r5, r6, r7, r8, lr}
   2c1e8:	b	119f4 <_IO_putc@plt>
   2c1ec:	movw	r0, #18532	; 0x4864
   2c1f0:	mov	r1, #1
   2c1f4:	mov	r2, #8
   2c1f8:	ldr	r3, [r4]
   2c1fc:	movt	r0, #3
   2c200:	bl	11a00 <fwrite@plt>
   2c204:	b	2c010 <error@@Base+0x93d0>
   2c208:	tst	r5, #2
   2c20c:	movw	r1, #6032	; 0x1790
   2c210:	movw	r3, #63480	; 0xf7f8
   2c214:	movt	r1, #3
   2c218:	movt	r3, #2
   2c21c:	ldr	r2, [r6]
   2c220:	moveq	r3, r1
   2c224:	b	2c150 <error@@Base+0x9510>
   2c228:	ldr	r1, [r4]
   2c22c:	mov	r0, r2
   2c230:	bl	11ce8 <fputs@plt>
   2c234:	ldr	r1, [r4]
   2c238:	mov	r0, #10
   2c23c:	pop	{r4, r5, r6, r7, r8, lr}
   2c240:	b	119f4 <_IO_putc@plt>
   2c244:	bl	11d00 <abort@plt>
   2c248:	push	{r4, lr}
   2c24c:	mov	r4, r0
   2c250:	ldr	r0, [r0]
   2c254:	movw	r1, #9904	; 0x26b0
   2c258:	movt	r1, #3
   2c25c:	cmp	r0, r1
   2c260:	beq	2c28c <error@@Base+0x964c>
   2c264:	ldrb	r3, [r0]
   2c268:	cmp	r3, #46	; 0x2e
   2c26c:	beq	2c278 <error@@Base+0x9638>
   2c270:	mov	r0, r4
   2c274:	pop	{r4, pc}
   2c278:	add	r0, r0, #1
   2c27c:	add	r1, r1, #1
   2c280:	bl	1182c <strcmp@plt>
   2c284:	cmp	r0, #0
   2c288:	bne	2c270 <error@@Base+0x9630>
   2c28c:	ldr	r2, [r4, #8]
   2c290:	movw	r3, #26740	; 0x6874
   2c294:	movt	r3, #4
   2c298:	mov	r0, r4
   2c29c:	ldrb	r2, [r2]
   2c2a0:	cmp	r2, #0
   2c2a4:	moveq	r2, #9
   2c2a8:	strb	r2, [r3]
   2c2ac:	pop	{r4, pc}
   2c2b0:	push	{r3, r4, r5, r6, r7, lr}
   2c2b4:	mov	r7, r1
   2c2b8:	mov	r6, r0
   2c2bc:	bl	11b5c <strlen@plt>
   2c2c0:	movw	r5, #28368	; 0x6ed0
   2c2c4:	movt	r5, #4
   2c2c8:	mov	r4, r0
   2c2cc:	mov	r0, #40	; 0x28
   2c2d0:	bl	22f44 <error@@Base+0x304>
   2c2d4:	ldr	r3, [r5]
   2c2d8:	cmp	r3, #0
   2c2dc:	beq	2c370 <error@@Base+0x9730>
   2c2e0:	cmp	r4, #255	; 0xff
   2c2e4:	bhi	2c324 <error@@Base+0x96e4>
   2c2e8:	lsl	r2, r4, #2
   2c2ec:	add	r1, r5, r2
   2c2f0:	ldr	r1, [r1, #4]
   2c2f4:	cmp	r1, #0
   2c2f8:	beq	2c324 <error@@Base+0x96e4>
   2c2fc:	ldr	r3, [r1]
   2c300:	add	r7, r7, #1
   2c304:	str	r3, [r0]
   2c308:	str	r0, [r1]
   2c30c:	str	r7, [r0, #4]
   2c310:	str	r6, [r0, #8]
   2c314:	str	r4, [r0, #12]
   2c318:	add	r5, r5, r2
   2c31c:	str	r0, [r5, #4]
   2c320:	pop	{r3, r4, r5, r6, r7, pc}
   2c324:	movw	ip, #28368	; 0x6ed0
   2c328:	movt	ip, #4
   2c32c:	ldr	r2, [r3, #12]
   2c330:	cmp	r4, r2
   2c334:	bcc	2c348 <error@@Base+0x9708>
   2c338:	mov	ip, r3
   2c33c:	ldr	r3, [r3]
   2c340:	cmp	r3, #0
   2c344:	bne	2c32c <error@@Base+0x96ec>
   2c348:	str	r3, [r0]
   2c34c:	str	r0, [ip]
   2c350:	cmp	r4, #255	; 0xff
   2c354:	add	r7, r7, #1
   2c358:	str	r6, [r0, #8]
   2c35c:	str	r7, [r0, #4]
   2c360:	str	r4, [r0, #12]
   2c364:	pophi	{r3, r4, r5, r6, r7, pc}
   2c368:	lsl	r2, r4, #2
   2c36c:	b	2c318 <error@@Base+0x96d8>
   2c370:	str	r0, [r5]
   2c374:	str	r3, [r0]
   2c378:	b	2c350 <error@@Base+0x9710>
   2c37c:	push	{lr}		; (str lr, [sp, #-4]!)
   2c380:	sub	sp, sp, #12
   2c384:	ldr	r0, [pc, #40]	; 2c3b4 <error@@Base+0x9774>
   2c388:	movw	r1, #523	; 0x20b
   2c38c:	movw	r3, #48728	; 0xbe58
   2c390:	movw	r2, #48408	; 0xbd18
   2c394:	movt	r3, #2
   2c398:	movt	r2, #2
   2c39c:	str	r3, [sp]
   2c3a0:	movw	r3, #48568	; 0xbdb8
   2c3a4:	movt	r3, #2
   2c3a8:	bl	2e838 <error@@Base+0xbbf8>
   2c3ac:	add	sp, sp, #12
   2c3b0:	pop	{pc}		; (ldr pc, [sp], #4)
   2c3b4:	ldrdeq	r7, [r4], -r4
   2c3b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c3bc:	sub	sp, sp, #44	; 0x2c
   2c3c0:	ldr	lr, [pc, #576]	; 2c608 <error@@Base+0x99c8>
   2c3c4:	movw	r6, #26864	; 0x68f0
   2c3c8:	ldr	r5, [sp, #84]	; 0x54
   2c3cc:	movt	r6, #4
   2c3d0:	mov	r9, r1
   2c3d4:	str	r0, [sp, #12]
   2c3d8:	cmp	r5, #0
   2c3dc:	ldr	ip, [r6]
   2c3e0:	add	r1, sp, #12
   2c3e4:	mov	r8, r0
   2c3e8:	moveq	r5, lr
   2c3ec:	mov	sl, r2
   2c3f0:	mov	r0, r5
   2c3f4:	str	ip, [sp, #36]	; 0x24
   2c3f8:	str	r9, [sp, #16]
   2c3fc:	mov	fp, r3
   2c400:	ldr	r7, [sp, #88]	; 0x58
   2c404:	bl	2e8ec <error@@Base+0xbcac>
   2c408:	movw	ip, #28232	; 0x6e48
   2c40c:	movt	ip, #4
   2c410:	ldr	r1, [ip]
   2c414:	cmp	r1, #0
   2c418:	mov	r2, r0
   2c41c:	beq	2c428 <error@@Base+0x97e8>
   2c420:	cmp	fp, #1
   2c424:	moveq	fp, #3
   2c428:	ldr	r4, [r2]
   2c42c:	cmp	r4, #0
   2c430:	beq	2c4f4 <error@@Base+0x98b4>
   2c434:	movw	r3, #26848	; 0x68e0
   2c438:	movt	r3, #4
   2c43c:	ldr	r3, [r3]
   2c440:	cmp	r4, r3
   2c444:	beq	2c4f4 <error@@Base+0x98b4>
   2c448:	cmp	r1, #0
   2c44c:	bne	2c4c8 <error@@Base+0x9888>
   2c450:	ldrb	r3, [r4, #23]
   2c454:	ubfx	r3, r3, #2, #3
   2c458:	cmp	fp, r3
   2c45c:	blt	2c4ec <error@@Base+0x98ac>
   2c460:	ldr	r0, [r4, #8]
   2c464:	cmp	r0, #0
   2c468:	beq	2c470 <error@@Base+0x9830>
   2c46c:	bl	1188c <free@plt>
   2c470:	mov	r0, sl
   2c474:	bl	2312c <error@@Base+0x4ec>
   2c478:	cmp	r7, #0
   2c47c:	addne	r3, r4, #12
   2c480:	streq	r7, [r4, #12]
   2c484:	str	r0, [r4, #8]
   2c488:	ldmne	r7, {r0, r1}
   2c48c:	stmne	r3, {r0, r1}
   2c490:	mov	r0, r4
   2c494:	ldrb	r2, [r4, #23]
   2c498:	ldrb	r3, [r4, #20]
   2c49c:	bfi	r2, fp, #2, #3
   2c4a0:	strb	r2, [r4, #23]
   2c4a4:	ldr	r1, [sp, #80]	; 0x50
   2c4a8:	bfi	r3, r1, #0, #1
   2c4ac:	strb	r3, [r4, #20]
   2c4b0:	ldr	r2, [sp, #36]	; 0x24
   2c4b4:	ldr	r3, [r6]
   2c4b8:	cmp	r2, r3
   2c4bc:	bne	2c604 <error@@Base+0x99c4>
   2c4c0:	add	sp, sp, #44	; 0x2c
   2c4c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c4c8:	ldrb	r2, [r4, #23]
   2c4cc:	ubfx	r3, r2, #2, #3
   2c4d0:	cmp	r3, #1
   2c4d4:	moveq	r1, #3
   2c4d8:	bfieq	r2, r1, #2, #3
   2c4dc:	moveq	r3, r1
   2c4e0:	strbeq	r2, [r4, #23]
   2c4e4:	cmp	fp, r3
   2c4e8:	bge	2c460 <error@@Base+0x9820>
   2c4ec:	mov	r0, r4
   2c4f0:	b	2c4b0 <error@@Base+0x9870>
   2c4f4:	mov	r0, #24
   2c4f8:	str	r2, [sp, #4]
   2c4fc:	bl	22f44 <error@@Base+0x304>
   2c500:	mov	r1, r9
   2c504:	mov	r4, r0
   2c508:	mov	r0, r8
   2c50c:	bl	23158 <error@@Base+0x518>
   2c510:	mov	r1, r4
   2c514:	ldr	r2, [sp, #4]
   2c518:	str	r9, [r4, #4]
   2c51c:	str	r0, [r4]
   2c520:	mov	r0, r5
   2c524:	bl	2ea00 <error@@Base+0xbdc0>
   2c528:	mov	r0, sl
   2c52c:	bl	2312c <error@@Base+0x4ec>
   2c530:	cmp	r7, #0
   2c534:	addne	r3, r4, #12
   2c538:	streq	r7, [r4, #12]
   2c53c:	str	r0, [r4, #8]
   2c540:	ldmne	r7, {r0, r1}
   2c544:	stmne	r3, {r0, r1}
   2c548:	ldrb	r3, [r4, #20]
   2c54c:	ldr	r1, [sp, #80]	; 0x50
   2c550:	ldrb	r2, [r4, #23]
   2c554:	bfi	r3, r1, #0, #1
   2c558:	and	r3, r3, #239	; 0xef
   2c55c:	bfi	r2, fp, #2, #3
   2c560:	bfc	r3, #6, #1
   2c564:	strb	r2, [r4, #23]
   2c568:	strb	r3, [r4, #20]
   2c56c:	ldr	r3, [r4, #20]
   2c570:	bfc	r3, #8, #15
   2c574:	str	r3, [r4, #20]
   2c578:	and	r2, r3, #117	; 0x75
   2c57c:	lsr	r3, r3, #24
   2c580:	orr	r2, r2, #32
   2c584:	orr	r3, r3, #96	; 0x60
   2c588:	strb	r2, [r4, #20]
   2c58c:	strb	r3, [r4, #23]
   2c590:	ldrb	r3, [r8]
   2c594:	bic	r2, r3, #32
   2c598:	sub	r2, r2, #65	; 0x41
   2c59c:	cmp	r3, #95	; 0x5f
   2c5a0:	cmpne	r2, #25
   2c5a4:	bhi	2c5f0 <error@@Base+0x99b0>
   2c5a8:	ldrb	r3, [r8, #1]
   2c5ac:	add	r2, r8, #1
   2c5b0:	cmp	r3, #0
   2c5b4:	beq	2c4ec <error@@Base+0x98ac>
   2c5b8:	cmp	r3, #95	; 0x5f
   2c5bc:	beq	2c5dc <error@@Base+0x999c>
   2c5c0:	bic	r1, r3, #32
   2c5c4:	sub	r1, r1, #65	; 0x41
   2c5c8:	cmp	r1, #25
   2c5cc:	bls	2c5dc <error@@Base+0x999c>
   2c5d0:	sub	r3, r3, #48	; 0x30
   2c5d4:	cmp	r3, #9
   2c5d8:	bhi	2c5f0 <error@@Base+0x99b0>
   2c5dc:	ldrb	r3, [r2, #1]!
   2c5e0:	cmp	r3, #0
   2c5e4:	bne	2c5b8 <error@@Base+0x9978>
   2c5e8:	mov	r0, r4
   2c5ec:	b	2c4b0 <error@@Base+0x9870>
   2c5f0:	ldrb	r3, [r4, #20]
   2c5f4:	mov	r0, r4
   2c5f8:	bfc	r3, #5, #1
   2c5fc:	strb	r3, [r4, #20]
   2c600:	b	2c4b0 <error@@Base+0x9870>
   2c604:	bl	11934 <__stack_chk_fail@plt>
   2c608:	ldrdeq	r7, [r4], -r4
   2c60c:	push	{r4, r5, r6, r7, lr}
   2c610:	cmp	r3, #0
   2c614:	movw	r4, #26864	; 0x68f0
   2c618:	movt	r4, #4
   2c61c:	ldr	r7, [pc, #208]	; 2c6f4 <error@@Base+0x9ab4>
   2c620:	sub	sp, sp, #36	; 0x24
   2c624:	movne	r7, r3
   2c628:	ldr	r3, [r4]
   2c62c:	str	r0, [sp, #4]
   2c630:	mov	r6, r2
   2c634:	str	r1, [sp, #8]
   2c638:	mov	r0, r7
   2c63c:	add	r1, sp, #4
   2c640:	str	r3, [sp, #28]
   2c644:	bl	2e8ec <error@@Base+0xbcac>
   2c648:	movw	ip, #28232	; 0x6e48
   2c64c:	movt	ip, #4
   2c650:	ldr	r2, [ip]
   2c654:	cmp	r2, #0
   2c658:	mov	r1, r0
   2c65c:	beq	2c668 <error@@Base+0x9a28>
   2c660:	cmp	r6, #1
   2c664:	moveq	r6, #3
   2c668:	ldr	r5, [r1]
   2c66c:	cmp	r5, #0
   2c670:	beq	2c6b8 <error@@Base+0x9a78>
   2c674:	movw	ip, #26848	; 0x68e0
   2c678:	movt	ip, #4
   2c67c:	ldr	r3, [ip]
   2c680:	cmp	r5, r3
   2c684:	beq	2c6b8 <error@@Base+0x9a78>
   2c688:	cmp	r2, #0
   2c68c:	bne	2c6d0 <error@@Base+0x9a90>
   2c690:	ldrb	r3, [r5, #23]
   2c694:	ubfx	r3, r3, #2, #3
   2c698:	cmp	r6, r3
   2c69c:	blt	2c6b8 <error@@Base+0x9a78>
   2c6a0:	mov	r0, r7
   2c6a4:	bl	2ec10 <error@@Base+0xbfd0>
   2c6a8:	ldr	r0, [r5]
   2c6ac:	bl	1188c <free@plt>
   2c6b0:	ldr	r0, [r5, #8]
   2c6b4:	bl	1188c <free@plt>
   2c6b8:	ldr	r2, [sp, #28]
   2c6bc:	ldr	r3, [r4]
   2c6c0:	cmp	r2, r3
   2c6c4:	bne	2c6f0 <error@@Base+0x9ab0>
   2c6c8:	add	sp, sp, #36	; 0x24
   2c6cc:	pop	{r4, r5, r6, r7, pc}
   2c6d0:	ldrb	r2, [r5, #23]
   2c6d4:	ubfx	r3, r2, #2, #3
   2c6d8:	cmp	r3, #1
   2c6dc:	moveq	r0, #3
   2c6e0:	bfieq	r2, r0, #2, #3
   2c6e4:	moveq	r3, r0
   2c6e8:	strbeq	r2, [r5, #23]
   2c6ec:	b	2c698 <error@@Base+0x9a58>
   2c6f0:	bl	11934 <__stack_chk_fail@plt>
   2c6f4:	ldrdeq	r7, [r4], -r4
   2c6f8:	movw	r3, #26824	; 0x68c8
   2c6fc:	movt	r3, #4
   2c700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c704:	movw	r5, #26864	; 0x68f0
   2c708:	movt	r5, #4
   2c70c:	ldr	r6, [r3]
   2c710:	sub	sp, sp, #52	; 0x34
   2c714:	ldr	r3, [r5]
   2c718:	cmp	r6, #0
   2c71c:	str	r0, [sp, #20]
   2c720:	str	r1, [sp, #24]
   2c724:	movne	r7, #0
   2c728:	str	r3, [sp, #44]	; 0x2c
   2c72c:	beq	2c76c <error@@Base+0x9b2c>
   2c730:	ldr	r0, [r6, #4]
   2c734:	add	r1, sp, #20
   2c738:	bl	2e9d4 <error@@Base+0xbd94>
   2c73c:	cmp	r0, #0
   2c740:	beq	2c758 <error@@Base+0x9b18>
   2c744:	cmp	r7, #0
   2c748:	beq	2c774 <error@@Base+0x9b34>
   2c74c:	ldrb	r3, [r0, #20]
   2c750:	lsrs	r3, r3, #7
   2c754:	beq	2c774 <error@@Base+0x9b34>
   2c758:	ldr	r3, [r6, #8]
   2c75c:	ldr	r6, [r6]
   2c760:	orr	r7, r7, r3
   2c764:	cmp	r6, #0
   2c768:	bne	2c730 <error@@Base+0x9af0>
   2c76c:	mov	r0, #0
   2c770:	b	2c788 <error@@Base+0x9b48>
   2c774:	ldrb	r3, [r0, #20]
   2c778:	mov	r4, r0
   2c77c:	tst	r3, #16
   2c780:	bne	2c7a0 <error@@Base+0x9b60>
   2c784:	mov	r0, r4
   2c788:	ldr	r2, [sp, #44]	; 0x2c
   2c78c:	ldr	r3, [r5]
   2c790:	cmp	r2, r3
   2c794:	bne	2c91c <error@@Base+0x9cdc>
   2c798:	add	sp, sp, #52	; 0x34
   2c79c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c7a0:	ldr	r0, [r0]
   2c7a4:	movw	r1, #9892	; 0x26a4
   2c7a8:	movt	r1, #3
   2c7ac:	cmp	r0, r1
   2c7b0:	beq	2c7d4 <error@@Base+0x9b94>
   2c7b4:	ldrb	r3, [r0]
   2c7b8:	cmp	r3, #46	; 0x2e
   2c7bc:	bne	2c784 <error@@Base+0x9b44>
   2c7c0:	add	r0, r0, #1
   2c7c4:	add	r1, r1, #1
   2c7c8:	bl	1182c <strcmp@plt>
   2c7cc:	cmp	r0, #0
   2c7d0:	bne	2c784 <error@@Base+0x9b44>
   2c7d4:	movw	sl, #28368	; 0x6ed0
   2c7d8:	movt	sl, #4
   2c7dc:	ldr	r2, [sl, #1040]	; 0x410
   2c7e0:	ldr	r3, [sl, #1072]	; 0x430
   2c7e4:	cmp	r2, r3
   2c7e8:	beq	2c784 <error@@Base+0x9b44>
   2c7ec:	ldr	r8, [r4, #8]
   2c7f0:	movw	fp, #19923	; 0x4dd3
   2c7f4:	movt	fp, #4194	; 0x1062
   2c7f8:	mov	r7, #500	; 0x1f4
   2c7fc:	mov	r0, r8
   2c800:	bl	11b5c <strlen@plt>
   2c804:	ldr	r9, [sl, #1032]	; 0x408
   2c808:	ldr	r6, [sl, #1028]	; 0x404
   2c80c:	add	ip, r6, r9, lsl #2
   2c810:	str	ip, [sp, #4]
   2c814:	umull	r2, r3, fp, r0
   2c818:	mov	r0, r8
   2c81c:	lsr	r8, r3, #5
   2c820:	mla	r8, r8, r7, r7
   2c824:	mov	r1, r8
   2c828:	bl	22fb0 <error@@Base+0x370>
   2c82c:	ldr	ip, [sp, #4]
   2c830:	cmp	r6, ip
   2c834:	mov	r3, r0
   2c838:	str	r0, [r4, #8]
   2c83c:	bcs	2c904 <error@@Base+0x9cc4>
   2c840:	movw	r9, #26848	; 0x68e0
   2c844:	movt	r9, #4
   2c848:	mov	fp, #0
   2c84c:	str	r5, [sp, #12]
   2c850:	str	sl, [sp, #8]
   2c854:	mov	r5, fp
   2c858:	mov	fp, r9
   2c85c:	mov	r9, ip
   2c860:	b	2c88c <error@@Base+0x9c4c>
   2c864:	mov	r0, r3
   2c868:	mov	r2, r7
   2c86c:	ldr	r1, [sl]
   2c870:	bl	118c8 <memcpy@plt>
   2c874:	mov	ip, #32
   2c878:	add	r7, r0, r7
   2c87c:	add	r3, r7, #1
   2c880:	strb	ip, [r7]
   2c884:	cmp	r9, r6
   2c888:	bls	2c8fc <error@@Base+0x9cbc>
   2c88c:	ldr	sl, [r6], #4
   2c890:	cmp	sl, #0
   2c894:	beq	2c884 <error@@Base+0x9c44>
   2c898:	ldr	r1, [fp]
   2c89c:	cmp	sl, r1
   2c8a0:	beq	2c884 <error@@Base+0x9c44>
   2c8a4:	ldr	r7, [sl, #4]
   2c8a8:	add	r1, r7, #1
   2c8ac:	add	r5, r5, r1
   2c8b0:	cmp	r5, r8
   2c8b4:	bls	2c864 <error@@Base+0x9c24>
   2c8b8:	movw	ip, #19923	; 0x4dd3
   2c8bc:	movt	ip, #4194	; 0x1062
   2c8c0:	mov	r2, #500	; 0x1f4
   2c8c4:	ldr	r0, [r4, #8]
   2c8c8:	smull	ip, lr, ip, r1
   2c8cc:	asr	r1, r1, #31
   2c8d0:	rsb	r3, r0, r3
   2c8d4:	str	r3, [sp, #4]
   2c8d8:	rsb	r1, r1, lr, asr #5
   2c8dc:	mla	r1, r1, r2, r2
   2c8e0:	add	r8, r8, r1
   2c8e4:	mov	r1, r8
   2c8e8:	bl	22fb0 <error@@Base+0x370>
   2c8ec:	ldr	r3, [sp, #4]
   2c8f0:	str	r0, [r4, #8]
   2c8f4:	add	r3, r0, r3
   2c8f8:	b	2c864 <error@@Base+0x9c24>
   2c8fc:	ldr	sl, [sp, #8]
   2c900:	ldr	r5, [sp, #12]
   2c904:	mov	r2, #0
   2c908:	strb	r2, [r3, #-1]
   2c90c:	ldr	r3, [sl, #1040]	; 0x410
   2c910:	mov	r0, r4
   2c914:	str	r3, [sl, #1072]	; 0x430
   2c918:	b	2c788 <error@@Base+0x9b48>
   2c91c:	bl	11934 <__stack_chk_fail@plt>
   2c920:	push	{r4, lr}
   2c924:	movw	r4, #26864	; 0x68f0
   2c928:	movt	r4, #4
   2c92c:	sub	sp, sp, #32
   2c930:	ldr	r3, [r4]
   2c934:	str	r0, [sp, #4]
   2c938:	mov	r0, r2
   2c93c:	str	r1, [sp, #8]
   2c940:	add	r1, sp, #4
   2c944:	str	r3, [sp, #28]
   2c948:	bl	2e9d4 <error@@Base+0xbd94>
   2c94c:	ldr	r2, [sp, #28]
   2c950:	ldr	r3, [r4]
   2c954:	cmp	r2, r3
   2c958:	bne	2c964 <error@@Base+0x9d24>
   2c95c:	add	sp, sp, #32
   2c960:	pop	{r4, pc}
   2c964:	bl	11934 <__stack_chk_fail@plt>
   2c968:	push	{r4, lr}
   2c96c:	mov	r0, #44	; 0x2c
   2c970:	sub	sp, sp, #8
   2c974:	bl	22f44 <error@@Base+0x304>
   2c978:	mov	r1, #13
   2c97c:	movw	r3, #48728	; 0xbe58
   2c980:	movw	r2, #48408	; 0xbd18
   2c984:	movt	r3, #2
   2c988:	movt	r2, #2
   2c98c:	str	r3, [sp]
   2c990:	movw	r3, #48568	; 0xbdb8
   2c994:	movt	r3, #2
   2c998:	mov	r4, r0
   2c99c:	bl	2e838 <error@@Base+0xbbf8>
   2c9a0:	mov	r0, #12
   2c9a4:	bl	22f44 <error@@Base+0x304>
   2c9a8:	movw	r2, #26824	; 0x68c8
   2c9ac:	movt	r2, #4
   2c9b0:	mov	r1, #0
   2c9b4:	ldr	r2, [r2]
   2c9b8:	str	r4, [r0, #4]
   2c9bc:	str	r1, [r0, #8]
   2c9c0:	str	r2, [r0]
   2c9c4:	add	sp, sp, #8
   2c9c8:	pop	{r4, pc}
   2c9cc:	push	{r4, lr}
   2c9d0:	movw	r1, #48772	; 0xbe84
   2c9d4:	mov	r4, r0
   2c9d8:	movt	r1, #2
   2c9dc:	ldr	r0, [r0, #4]
   2c9e0:	bl	2ed28 <error@@Base+0xc0e8>
   2c9e4:	ldr	r0, [r4, #4]
   2c9e8:	mov	r1, #1
   2c9ec:	bl	2ecec <error@@Base+0xc0ac>
   2c9f0:	ldr	r0, [r4, #4]
   2c9f4:	bl	1188c <free@plt>
   2c9f8:	mov	r0, r4
   2c9fc:	pop	{r4, lr}
   2ca00:	b	1188c <free@plt>
   2ca04:	push	{r4, lr}
   2ca08:	bl	2c968 <error@@Base+0x9d28>
   2ca0c:	movw	r3, #26824	; 0x68c8
   2ca10:	movt	r3, #4
   2ca14:	mov	r2, r3
   2ca18:	ldr	r1, [r0]
   2ca1c:	str	r0, [r2], #4
   2ca20:	cmp	r1, r2
   2ca24:	popne	{r4, pc}
   2ca28:	ldmib	r3, {r2, r4}
   2ca2c:	ldr	ip, [r0, #4]
   2ca30:	str	r4, [r0, #4]
   2ca34:	str	ip, [r3, #8]
   2ca38:	str	r2, [r0]
   2ca3c:	str	r0, [r3, #4]
   2ca40:	mov	r0, r1
   2ca44:	str	r1, [r3]
   2ca48:	pop	{r4, pc}
   2ca4c:	movw	r3, #26824	; 0x68c8
   2ca50:	movt	r3, #4
   2ca54:	push	{r4, lr}
   2ca58:	ldr	r2, [r3]
   2ca5c:	ldr	r1, [r2]
   2ca60:	cmp	r1, #0
   2ca64:	beq	2cabc <error@@Base+0x9e7c>
   2ca68:	add	r0, r3, #4
   2ca6c:	cmp	r2, r0
   2ca70:	strne	r1, [r3]
   2ca74:	ldmibeq	r3, {r2, r4}
   2ca78:	ldrne	r4, [r2, #4]
   2ca7c:	ldmeq	r2, {r0, ip}
   2ca80:	ldreq	r1, [r2, #8]
   2ca84:	stmibeq	r3, {r0, ip}
   2ca88:	mov	r0, r2
   2ca8c:	streq	r1, [r3, #12]
   2ca90:	bl	1188c <free@plt>
   2ca94:	mov	r0, r4
   2ca98:	movw	r1, #48772	; 0xbe84
   2ca9c:	movt	r1, #2
   2caa0:	bl	2ed28 <error@@Base+0xc0e8>
   2caa4:	mov	r0, r4
   2caa8:	mov	r1, #1
   2caac:	bl	2ecec <error@@Base+0xc0ac>
   2cab0:	mov	r0, r4
   2cab4:	pop	{r4, lr}
   2cab8:	b	1188c <free@plt>
   2cabc:	movw	r0, #18612	; 0x48b4
   2cac0:	movw	r1, #18660	; 0x48e4
   2cac4:	movw	r3, #18464	; 0x4820
   2cac8:	movt	r0, #3
   2cacc:	movt	r1, #3
   2cad0:	movw	r2, #697	; 0x2b9
   2cad4:	movt	r3, #3
   2cad8:	bl	11d30 <__assert_fail@plt>
   2cadc:	cmp	r1, #0
   2cae0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cae4:	ldr	r8, [r0]
   2cae8:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2caec:	cmp	r8, #0
   2caf0:	beq	2cbcc <error@@Base+0x9f8c>
   2caf4:	ldr	sl, [pc, #228]	; 2cbe0 <error@@Base+0x9fa0>
   2caf8:	cmp	r1, sl
   2cafc:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cb00:	cmp	r8, sl
   2cb04:	beq	2cbd8 <error@@Base+0x9f98>
   2cb08:	movw	fp, #26848	; 0x68e0
   2cb0c:	movt	fp, #4
   2cb10:	ldr	r3, [r1, #4]
   2cb14:	ldr	r9, [r1]
   2cb18:	ldr	r6, [r8, #4]
   2cb1c:	ldm	r3, {r5, r7}
   2cb20:	add	r7, r5, r7, lsl #2
   2cb24:	cmp	r5, r7
   2cb28:	bcc	2cb48 <error@@Base+0x9f08>
   2cb2c:	b	2cb9c <error@@Base+0x9f5c>
   2cb30:	ldr	r0, [r4, #8]
   2cb34:	bl	1188c <free@plt>
   2cb38:	mov	r0, r4
   2cb3c:	bl	1188c <free@plt>
   2cb40:	cmp	r7, r5
   2cb44:	bls	2cb9c <error@@Base+0x9f5c>
   2cb48:	ldr	r4, [r5], #4
   2cb4c:	mov	r0, r6
   2cb50:	cmp	r4, #0
   2cb54:	mov	r1, r4
   2cb58:	beq	2cb40 <error@@Base+0x9f00>
   2cb5c:	ldr	r3, [fp]
   2cb60:	cmp	r4, r3
   2cb64:	beq	2cb40 <error@@Base+0x9f00>
   2cb68:	bl	2e8ec <error@@Base+0xbcac>
   2cb6c:	ldr	r3, [r0]
   2cb70:	cmp	r3, #0
   2cb74:	beq	2cb84 <error@@Base+0x9f44>
   2cb78:	ldr	r2, [fp]
   2cb7c:	cmp	r3, r2
   2cb80:	bne	2cb30 <error@@Base+0x9ef0>
   2cb84:	mov	r2, r0
   2cb88:	mov	r1, r4
   2cb8c:	mov	r0, r6
   2cb90:	bl	2ea00 <error@@Base+0xbdc0>
   2cb94:	cmp	r7, r5
   2cb98:	bhi	2cb48 <error@@Base+0x9f08>
   2cb9c:	cmp	r9, sl
   2cba0:	ldr	r3, [r8]
   2cba4:	beq	2cbc0 <error@@Base+0x9f80>
   2cba8:	ldr	r2, [pc, #48]	; 2cbe0 <error@@Base+0x9fa0>
   2cbac:	cmp	r3, r2
   2cbb0:	beq	2cbc4 <error@@Base+0x9f84>
   2cbb4:	mov	r8, r3
   2cbb8:	mov	r1, r9
   2cbbc:	b	2cb10 <error@@Base+0x9ed0>
   2cbc0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cbc4:	str	r9, [r8]
   2cbc8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cbcc:	ldr	r3, [pc, #12]	; 2cbe0 <error@@Base+0x9fa0>
   2cbd0:	cmp	r1, r3
   2cbd4:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cbd8:	str	r1, [r0]
   2cbdc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cbe0:	andeq	r6, r4, ip, asr #17
   2cbe4:	movw	r3, #29540	; 0x7364
   2cbe8:	movt	r3, #4
   2cbec:	push	{r4, r5, r6, r7, r8, lr}
   2cbf0:	movw	r8, #26864	; 0x68f0
   2cbf4:	movt	r8, #4
   2cbf8:	ldr	r3, [r3]
   2cbfc:	sub	sp, sp, #224	; 0xe0
   2cc00:	movw	r4, #26824	; 0x68c8
   2cc04:	ldr	ip, [r8]
   2cc08:	movt	r4, #4
   2cc0c:	str	r3, [sp]
   2cc10:	mov	r1, #1
   2cc14:	mov	r2, #200	; 0xc8
   2cc18:	add	r0, sp, #20
   2cc1c:	movw	r3, #18120	; 0x46c8
   2cc20:	movt	r3, #3
   2cc24:	str	ip, [sp, #220]	; 0xdc
   2cc28:	bl	11b98 <__sprintf_chk@plt>
   2cc2c:	ldr	r1, [r4]
   2cc30:	mov	r3, #0
   2cc34:	str	r3, [sp]
   2cc38:	add	r2, sp, #20
   2cc3c:	movw	r0, #10228	; 0x27f4
   2cc40:	movt	r0, #3
   2cc44:	ldr	ip, [r1, #4]
   2cc48:	mov	r1, #9
   2cc4c:	str	r3, [sp, #8]
   2cc50:	mov	r3, #1
   2cc54:	str	ip, [sp, #4]
   2cc58:	bl	2c3b8 <error@@Base+0x9778>
   2cc5c:	movw	r2, #28312	; 0x6e98
   2cc60:	movt	r2, #4
   2cc64:	movw	r3, #26844	; 0x68dc
   2cc68:	movt	r3, #4
   2cc6c:	ldr	r2, [r2]
   2cc70:	ldr	r3, [r3]
   2cc74:	cmp	r2, #0
   2cc78:	beq	2cc88 <error@@Base+0xa048>
   2cc7c:	ldrb	r1, [r2]
   2cc80:	cmp	r1, #0
   2cc84:	bne	2d06c <error@@Base+0xa42c>
   2cc88:	movw	r2, #6032	; 0x1790
   2cc8c:	movt	r2, #3
   2cc90:	mov	r1, r2
   2cc94:	str	r3, [sp]
   2cc98:	add	r0, sp, #20
   2cc9c:	str	r2, [sp, #4]
   2cca0:	movw	r3, #18672	; 0x48f0
   2cca4:	str	r1, [sp, #8]
   2cca8:	movt	r3, #3
   2ccac:	mov	r1, #1
   2ccb0:	mov	r2, #200	; 0xc8
   2ccb4:	bl	11b98 <__sprintf_chk@plt>
   2ccb8:	ldr	r1, [r4]
   2ccbc:	mov	r5, #0
   2ccc0:	str	r5, [sp]
   2ccc4:	mov	r3, r5
   2ccc8:	add	r2, sp, #20
   2cccc:	ldr	ip, [r1, #4]
   2ccd0:	movw	r0, #18680	; 0x48f8
   2ccd4:	str	r5, [sp, #8]
   2ccd8:	mov	r1, #12
   2ccdc:	movt	r0, #3
   2cce0:	str	ip, [sp, #4]
   2cce4:	bl	2c3b8 <error@@Base+0x9778>
   2cce8:	ldr	r1, [r4]
   2ccec:	str	r5, [sp]
   2ccf0:	mov	r3, r5
   2ccf4:	movw	r0, #14976	; 0x3a80
   2ccf8:	movw	r2, #26668	; 0x682c
   2ccfc:	ldr	ip, [r1, #4]
   2cd00:	movt	r0, #3
   2cd04:	str	r5, [sp, #8]
   2cd08:	movt	r2, #4
   2cd0c:	mov	r1, #5
   2cd10:	str	ip, [sp, #4]
   2cd14:	bl	2c3b8 <error@@Base+0x9778>
   2cd18:	mov	r5, r0
   2cd1c:	ldr	r0, [r0, #8]
   2cd20:	ldrb	r3, [r0]
   2cd24:	cmp	r3, #0
   2cd28:	beq	2d044 <error@@Base+0xa404>
   2cd2c:	ldrb	r3, [r5, #23]
   2cd30:	ubfx	r3, r3, #2, #3
   2cd34:	and	r3, r3, #5
   2cd38:	cmp	r3, #1
   2cd3c:	beq	2d044 <error@@Base+0xa404>
   2cd40:	ldr	r1, [r4]
   2cd44:	mov	r5, #0
   2cd48:	str	r5, [sp]
   2cd4c:	mov	r3, r5
   2cd50:	movw	r0, #18696	; 0x4908
   2cd54:	movw	r2, #6032	; 0x1790
   2cd58:	ldr	ip, [r1, #4]
   2cd5c:	movt	r2, #3
   2cd60:	mov	r1, #9
   2cd64:	movt	r0, #3
   2cd68:	str	r5, [sp, #8]
   2cd6c:	mov	r6, #2
   2cd70:	str	ip, [sp, #4]
   2cd74:	mov	r7, #1
   2cd78:	bl	2c3b8 <error@@Base+0x9778>
   2cd7c:	mov	r1, r6
   2cd80:	movw	r2, #18712	; 0x4918
   2cd84:	movt	r2, #3
   2cd88:	ldrb	ip, [r0, #23]
   2cd8c:	mov	r3, r0
   2cd90:	movw	r0, #18708	; 0x4914
   2cd94:	movt	r0, #3
   2cd98:	bfi	ip, r6, #5, #2
   2cd9c:	strb	ip, [r3, #23]
   2cda0:	ldr	ip, [r4]
   2cda4:	mov	r3, #6
   2cda8:	str	r7, [sp]
   2cdac:	ldr	ip, [ip, #4]
   2cdb0:	str	r5, [sp, #8]
   2cdb4:	str	ip, [sp, #4]
   2cdb8:	bl	2c3b8 <error@@Base+0x9778>
   2cdbc:	ldr	r3, [r4]
   2cdc0:	str	r7, [sp]
   2cdc4:	mov	r1, r6
   2cdc8:	movw	r0, #18740	; 0x4934
   2cdcc:	movw	r2, #18744	; 0x4938
   2cdd0:	ldr	ip, [r3, #4]
   2cdd4:	movt	r2, #3
   2cdd8:	mov	r3, #6
   2cddc:	movt	r0, #3
   2cde0:	str	r5, [sp, #8]
   2cde4:	str	ip, [sp, #4]
   2cde8:	bl	2c3b8 <error@@Base+0x9778>
   2cdec:	ldr	r3, [r4]
   2cdf0:	str	r7, [sp]
   2cdf4:	mov	r1, r6
   2cdf8:	movw	r0, #18772	; 0x4954
   2cdfc:	movw	r2, #18776	; 0x4958
   2ce00:	ldr	ip, [r3, #4]
   2ce04:	movt	r2, #3
   2ce08:	mov	r3, #6
   2ce0c:	movt	r0, #3
   2ce10:	str	r5, [sp, #8]
   2ce14:	str	ip, [sp, #4]
   2ce18:	bl	2c3b8 <error@@Base+0x9778>
   2ce1c:	ldr	r3, [r4]
   2ce20:	str	r7, [sp]
   2ce24:	mov	r1, r6
   2ce28:	movw	r0, #18804	; 0x4974
   2ce2c:	movw	r2, #18808	; 0x4978
   2ce30:	ldr	ip, [r3, #4]
   2ce34:	movt	r2, #3
   2ce38:	mov	r3, #6
   2ce3c:	movt	r0, #3
   2ce40:	str	r5, [sp, #8]
   2ce44:	str	ip, [sp, #4]
   2ce48:	bl	2c3b8 <error@@Base+0x9778>
   2ce4c:	ldr	r3, [r4]
   2ce50:	str	r7, [sp]
   2ce54:	mov	r1, r6
   2ce58:	movw	r0, #18836	; 0x4994
   2ce5c:	movw	r2, #18840	; 0x4998
   2ce60:	ldr	ip, [r3, #4]
   2ce64:	movt	r2, #3
   2ce68:	mov	r3, #6
   2ce6c:	movt	r0, #3
   2ce70:	str	r5, [sp, #8]
   2ce74:	str	ip, [sp, #4]
   2ce78:	bl	2c3b8 <error@@Base+0x9778>
   2ce7c:	ldr	r3, [r4]
   2ce80:	str	r7, [sp]
   2ce84:	mov	r1, r6
   2ce88:	movw	r0, #18868	; 0x49b4
   2ce8c:	movw	r2, #18872	; 0x49b8
   2ce90:	ldr	ip, [r3, #4]
   2ce94:	movt	r2, #3
   2ce98:	mov	r3, #6
   2ce9c:	movt	r0, #3
   2cea0:	str	r5, [sp, #8]
   2cea4:	str	ip, [sp, #4]
   2cea8:	bl	2c3b8 <error@@Base+0x9778>
   2ceac:	ldr	r3, [r4]
   2ceb0:	str	r7, [sp]
   2ceb4:	mov	r1, r6
   2ceb8:	movw	r0, #18900	; 0x49d4
   2cebc:	movw	r2, #18904	; 0x49d8
   2cec0:	ldr	ip, [r3, #4]
   2cec4:	movt	r2, #3
   2cec8:	mov	r3, #6
   2cecc:	movt	r0, #3
   2ced0:	str	r5, [sp, #8]
   2ced4:	str	ip, [sp, #4]
   2ced8:	bl	2c3b8 <error@@Base+0x9778>
   2cedc:	ldr	r3, [r4]
   2cee0:	str	r7, [sp]
   2cee4:	mov	r1, r6
   2cee8:	movw	r0, #18932	; 0x49f4
   2ceec:	movw	r2, #18936	; 0x49f8
   2cef0:	ldr	ip, [r3, #4]
   2cef4:	movt	r2, #3
   2cef8:	mov	r3, #6
   2cefc:	movt	r0, #3
   2cf00:	str	r5, [sp, #8]
   2cf04:	str	ip, [sp, #4]
   2cf08:	bl	2c3b8 <error@@Base+0x9778>
   2cf0c:	ldr	r3, [r4]
   2cf10:	str	r7, [sp]
   2cf14:	mov	r1, r6
   2cf18:	movw	r0, #18952	; 0x4a08
   2cf1c:	movw	r2, #18956	; 0x4a0c
   2cf20:	ldr	ip, [r3, #4]
   2cf24:	movt	r2, #3
   2cf28:	mov	r3, #6
   2cf2c:	movt	r0, #3
   2cf30:	str	r5, [sp, #8]
   2cf34:	str	ip, [sp, #4]
   2cf38:	bl	2c3b8 <error@@Base+0x9778>
   2cf3c:	ldr	r3, [r4]
   2cf40:	str	r7, [sp]
   2cf44:	mov	r1, r6
   2cf48:	movw	r0, #18972	; 0x4a1c
   2cf4c:	movw	r2, #18976	; 0x4a20
   2cf50:	ldr	ip, [r3, #4]
   2cf54:	movt	r2, #3
   2cf58:	mov	r3, #6
   2cf5c:	movt	r0, #3
   2cf60:	str	r5, [sp, #8]
   2cf64:	str	ip, [sp, #4]
   2cf68:	bl	2c3b8 <error@@Base+0x9778>
   2cf6c:	ldr	r3, [r4]
   2cf70:	str	r7, [sp]
   2cf74:	mov	r1, r6
   2cf78:	movw	r0, #18992	; 0x4a30
   2cf7c:	movw	r2, #18996	; 0x4a34
   2cf80:	ldr	ip, [r3, #4]
   2cf84:	movt	r2, #3
   2cf88:	mov	r3, #6
   2cf8c:	movt	r0, #3
   2cf90:	str	r5, [sp, #8]
   2cf94:	str	ip, [sp, #4]
   2cf98:	bl	2c3b8 <error@@Base+0x9778>
   2cf9c:	ldr	r3, [r4]
   2cfa0:	str	r7, [sp]
   2cfa4:	mov	r1, r6
   2cfa8:	movw	r0, #19012	; 0x4a44
   2cfac:	movw	r2, #19016	; 0x4a48
   2cfb0:	ldr	ip, [r3, #4]
   2cfb4:	movt	r2, #3
   2cfb8:	mov	r3, #6
   2cfbc:	movt	r0, #3
   2cfc0:	str	r5, [sp, #8]
   2cfc4:	str	ip, [sp, #4]
   2cfc8:	bl	2c3b8 <error@@Base+0x9778>
   2cfcc:	ldr	r3, [r4]
   2cfd0:	str	r7, [sp]
   2cfd4:	mov	r1, r6
   2cfd8:	movw	r0, #19032	; 0x4a58
   2cfdc:	movw	r2, #19036	; 0x4a5c
   2cfe0:	ldr	ip, [r3, #4]
   2cfe4:	movt	r2, #3
   2cfe8:	mov	r3, #6
   2cfec:	movt	r0, #3
   2cff0:	str	r5, [sp, #8]
   2cff4:	str	ip, [sp, #4]
   2cff8:	bl	2c3b8 <error@@Base+0x9778>
   2cffc:	ldr	r3, [r4]
   2d000:	str	r7, [sp]
   2d004:	mov	r1, r6
   2d008:	movw	r0, #19052	; 0x4a6c
   2d00c:	movw	r2, #19056	; 0x4a70
   2d010:	ldr	ip, [r3, #4]
   2d014:	movt	r2, #3
   2d018:	mov	r3, #6
   2d01c:	movt	r0, #3
   2d020:	str	r5, [sp, #8]
   2d024:	str	ip, [sp, #4]
   2d028:	bl	2c3b8 <error@@Base+0x9778>
   2d02c:	ldr	r2, [sp, #220]	; 0xdc
   2d030:	ldr	r3, [r8]
   2d034:	cmp	r2, r3
   2d038:	bne	2d07c <error@@Base+0xa43c>
   2d03c:	add	sp, sp, #224	; 0xe0
   2d040:	pop	{r4, r5, r6, r7, r8, pc}
   2d044:	bl	1188c <free@plt>
   2d048:	ldrb	r3, [r5, #23]
   2d04c:	mov	r2, #2
   2d050:	movw	r0, #26668	; 0x682c
   2d054:	bfi	r3, r2, #2, #3
   2d058:	movt	r0, #4
   2d05c:	strb	r3, [r5, #23]
   2d060:	bl	2312c <error@@Base+0x4ec>
   2d064:	str	r0, [r5, #8]
   2d068:	b	2cd40 <error@@Base+0xa100>
   2d06c:	mov	r1, r2
   2d070:	movw	r2, #9592	; 0x2578
   2d074:	movt	r2, #3
   2d078:	b	2cc94 <error@@Base+0xa054>
   2d07c:	bl	11934 <__stack_chk_fail@plt>
   2d080:	movw	r1, #26864	; 0x68f0
   2d084:	movt	r1, #4
   2d088:	cmp	r0, #0
   2d08c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d090:	sub	sp, sp, #100	; 0x64
   2d094:	ldr	r3, [r1]
   2d098:	str	r0, [sp, #20]
   2d09c:	add	r0, sp, #48	; 0x30
   2d0a0:	ldrne	r2, [sp, #20]
   2d0a4:	str	r3, [sp, #92]	; 0x5c
   2d0a8:	movweq	r3, #26824	; 0x68c8
   2d0ac:	movteq	r3, #4
   2d0b0:	str	r1, [sp, #16]
   2d0b4:	ldrne	r6, [r2, #60]	; 0x3c
   2d0b8:	movw	r1, #523	; 0x20b
   2d0bc:	ldreq	r6, [r3]
   2d0c0:	movw	r2, #48408	; 0xbd18
   2d0c4:	movw	r3, #48728	; 0xbe58
   2d0c8:	movt	r2, #2
   2d0cc:	movt	r3, #2
   2d0d0:	str	r3, [sp]
   2d0d4:	movw	r3, #48568	; 0xbdb8
   2d0d8:	movt	r3, #2
   2d0dc:	bl	2e838 <error@@Base+0xbbf8>
   2d0e0:	cmp	r6, #0
   2d0e4:	beq	2d41c <error@@Base+0xa7dc>
   2d0e8:	movw	fp, #26848	; 0x68e0
   2d0ec:	movt	fp, #4
   2d0f0:	movw	r7, #14976	; 0x3a80
   2d0f4:	movw	r9, #29488	; 0x7330
   2d0f8:	movt	r7, #3
   2d0fc:	movt	r9, #4
   2d100:	mov	sl, fp
   2d104:	movw	r3, #29732	; 0x7424
   2d108:	movt	r3, #4
   2d10c:	str	r3, [sp, #12]
   2d110:	add	r3, sp, #24
   2d114:	str	r3, [sp, #8]
   2d118:	ldr	r3, [r6, #4]
   2d11c:	ldm	r3, {r5, fp}
   2d120:	add	fp, r5, fp, lsl #2
   2d124:	cmp	r5, fp
   2d128:	bcc	2d16c <error@@Base+0xa52c>
   2d12c:	b	2d1b8 <error@@Base+0xa578>
   2d130:	cmp	r3, #3
   2d134:	beq	2d37c <error@@Base+0xa73c>
   2d138:	cmp	r3, #1
   2d13c:	beq	2d338 <error@@Base+0xa6f8>
   2d140:	add	r0, sp, #48	; 0x30
   2d144:	mov	r1, r4
   2d148:	bl	2e8ec <error@@Base+0xbcac>
   2d14c:	ldr	r3, [r0]
   2d150:	cmp	r3, #0
   2d154:	beq	2d408 <error@@Base+0xa7c8>
   2d158:	ldr	r2, [sl]
   2d15c:	cmp	r3, r2
   2d160:	beq	2d408 <error@@Base+0xa7c8>
   2d164:	cmp	fp, r5
   2d168:	bls	2d1b8 <error@@Base+0xa578>
   2d16c:	ldr	r4, [r5], #4
   2d170:	cmp	r4, #0
   2d174:	beq	2d164 <error@@Base+0xa524>
   2d178:	ldr	r3, [sl]
   2d17c:	cmp	r4, r3
   2d180:	beq	2d164 <error@@Base+0xa524>
   2d184:	ldr	r3, [r4, #20]
   2d188:	and	r3, r3, #1610612744	; 0x60000008
   2d18c:	cmp	r3, #1610612744	; 0x60000008
   2d190:	beq	2d3c8 <error@@Base+0xa788>
   2d194:	ldrb	r3, [r4, #23]
   2d198:	ubfx	r3, r3, #5, #2
   2d19c:	cmp	r3, #2
   2d1a0:	bne	2d130 <error@@Base+0xa4f0>
   2d1a4:	ldrb	r3, [r4, #23]
   2d1a8:	tst	r3, #28
   2d1ac:	bne	2d140 <error@@Base+0xa500>
   2d1b0:	cmp	fp, r5
   2d1b4:	bhi	2d16c <error@@Base+0xa52c>
   2d1b8:	ldr	r6, [r6]
   2d1bc:	cmp	r6, #0
   2d1c0:	bne	2d118 <error@@Base+0xa4d8>
   2d1c4:	ldr	r1, [sp, #8]
   2d1c8:	add	r0, sp, #48	; 0x30
   2d1cc:	mov	r3, #9
   2d1d0:	movw	r9, #10228	; 0x27f4
   2d1d4:	str	r3, [sp, #28]
   2d1d8:	movt	r9, #3
   2d1dc:	str	r9, [sp, #24]
   2d1e0:	bl	2ebb8 <error@@Base+0xbf78>
   2d1e4:	ldr	r0, [sp, #60]	; 0x3c
   2d1e8:	add	r0, r0, #2
   2d1ec:	lsl	r0, r0, #2
   2d1f0:	bl	22f44 <error@@Base+0x304>
   2d1f4:	ldr	r6, [sp, #52]	; 0x34
   2d1f8:	ldr	r4, [sp, #48]	; 0x30
   2d1fc:	add	r6, r4, r6, lsl #2
   2d200:	cmp	r4, r6
   2d204:	str	r0, [sp, #8]
   2d208:	movcs	r5, r0
   2d20c:	bcs	2d2d4 <error@@Base+0xa694>
   2d210:	movw	r7, #26848	; 0x68e0
   2d214:	ldr	r5, [sp, #8]
   2d218:	movt	r7, #4
   2d21c:	ldr	sl, [sp, #20]
   2d220:	b	2d280 <error@@Base+0xa640>
   2d224:	ldrb	r3, [r8, #23]
   2d228:	ubfx	r3, r3, #2, #3
   2d22c:	and	r3, r3, #5
   2d230:	cmp	r3, #1
   2d234:	beq	2d2a4 <error@@Base+0xa664>
   2d238:	mov	r0, r8
   2d23c:	mov	r1, sl
   2d240:	bl	17538 <__assert_fail@plt+0x5808>
   2d244:	ldr	r1, [r8]
   2d248:	movw	r2, #19072	; 0x4a80
   2d24c:	movt	r2, #3
   2d250:	add	r8, r5, #4
   2d254:	mov	r3, r0
   2d258:	mov	fp, r0
   2d25c:	mov	r0, #3
   2d260:	bl	2300c <error@@Base+0x3cc>
   2d264:	bl	2312c <error@@Base+0x4ec>
   2d268:	str	r0, [r5]
   2d26c:	mov	r0, fp
   2d270:	bl	1188c <free@plt>
   2d274:	mov	r5, r8
   2d278:	cmp	r6, r4
   2d27c:	bls	2d2d4 <error@@Base+0xa694>
   2d280:	ldr	r8, [r4], #4
   2d284:	cmp	r8, #0
   2d288:	beq	2d278 <error@@Base+0xa638>
   2d28c:	ldr	r3, [r7]
   2d290:	cmp	r8, r3
   2d294:	beq	2d278 <error@@Base+0xa638>
   2d298:	ldrb	r3, [r8, #20]
   2d29c:	tst	r3, #1
   2d2a0:	bne	2d224 <error@@Base+0xa5e4>
   2d2a4:	ldr	r1, [r8]
   2d2a8:	movw	r2, #19072	; 0x4a80
   2d2ac:	ldr	r3, [r8, #8]
   2d2b0:	movt	r2, #3
   2d2b4:	mov	r0, #3
   2d2b8:	add	r8, r5, #4
   2d2bc:	bl	2300c <error@@Base+0x3cc>
   2d2c0:	bl	2312c <error@@Base+0x4ec>
   2d2c4:	cmp	r6, r4
   2d2c8:	str	r0, [r5]
   2d2cc:	mov	r5, r8
   2d2d0:	bhi	2d280 <error@@Base+0xa640>
   2d2d4:	mov	r0, #100	; 0x64
   2d2d8:	bl	22f44 <error@@Base+0x304>
   2d2dc:	movw	r2, #29540	; 0x7364
   2d2e0:	movt	r2, #4
   2d2e4:	mov	r1, #1
   2d2e8:	movw	r3, #11080	; 0x2b48
   2d2ec:	movt	r3, #3
   2d2f0:	ldr	ip, [r2]
   2d2f4:	mvn	r2, #0
   2d2f8:	add	ip, ip, r1
   2d2fc:	str	r0, [r5]
   2d300:	stm	sp, {r9, ip}
   2d304:	bl	11b98 <__sprintf_chk@plt>
   2d308:	mov	r1, #0
   2d30c:	add	r0, sp, #48	; 0x30
   2d310:	str	r1, [r5, #4]
   2d314:	bl	2ecec <error@@Base+0xc0ac>
   2d318:	ldr	r1, [sp, #16]
   2d31c:	ldr	r2, [sp, #92]	; 0x5c
   2d320:	ldr	r0, [sp, #8]
   2d324:	ldr	r3, [r1]
   2d328:	cmp	r2, r3
   2d32c:	bne	2d428 <error@@Base+0xa7e8>
   2d330:	add	sp, sp, #100	; 0x64
   2d334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d338:	ldr	r0, [r4]
   2d33c:	cmp	r0, r7
   2d340:	beq	2d364 <error@@Base+0xa724>
   2d344:	ldrb	r3, [r0]
   2d348:	cmp	r3, #83	; 0x53
   2d34c:	bne	2d164 <error@@Base+0xa524>
   2d350:	add	r0, r0, #1
   2d354:	ldr	r1, [pc, #208]	; 2d42c <error@@Base+0xa7ec>
   2d358:	bl	1182c <strcmp@plt>
   2d35c:	cmp	r0, #0
   2d360:	bne	2d164 <error@@Base+0xa524>
   2d364:	ldr	r3, [r9, #8]
   2d368:	cmp	r3, #0
   2d36c:	movwne	r4, #29488	; 0x7330
   2d370:	movtne	r4, #4
   2d374:	bne	2d140 <error@@Base+0xa500>
   2d378:	b	2d164 <error@@Base+0xa524>
   2d37c:	ldrb	r3, [r4, #23]
   2d380:	ubfx	r3, r3, #2, #3
   2d384:	cmp	r3, #0
   2d388:	cmpne	r3, #6
   2d38c:	beq	2d164 <error@@Base+0xa524>
   2d390:	ldrb	r2, [r4, #20]
   2d394:	tst	r2, #32
   2d398:	beq	2d164 <error@@Base+0xa524>
   2d39c:	ldr	r1, [sp, #12]
   2d3a0:	ldr	r2, [r1]
   2d3a4:	cmp	r2, #0
   2d3a8:	bne	2d140 <error@@Base+0xa500>
   2d3ac:	cmp	r3, #1
   2d3b0:	beq	2d140 <error@@Base+0xa500>
   2d3b4:	add	r3, r3, #5
   2d3b8:	and	r3, r3, #7
   2d3bc:	cmp	r3, #1
   2d3c0:	bhi	2d164 <error@@Base+0xa524>
   2d3c4:	b	2d140 <error@@Base+0xa500>
   2d3c8:	ldr	r8, [r4]
   2d3cc:	mov	r0, r8
   2d3d0:	bl	11b5c <strlen@plt>
   2d3d4:	ldr	r1, [sp, #8]
   2d3d8:	str	r8, [sp, #24]
   2d3dc:	str	r0, [sp, #28]
   2d3e0:	ldr	r0, [pc, #72]	; 2d430 <error@@Base+0xa7f0>
   2d3e4:	bl	2e9d4 <error@@Base+0xbd94>
   2d3e8:	cmp	r0, #0
   2d3ec:	beq	2d194 <error@@Base+0xa554>
   2d3f0:	ldrb	r3, [r0, #23]
   2d3f4:	ldrb	r2, [r4, #23]
   2d3f8:	ubfx	r3, r3, #5, #2
   2d3fc:	bfi	r2, r3, #5, #2
   2d400:	strb	r2, [r4, #23]
   2d404:	b	2d19c <error@@Base+0xa55c>
   2d408:	mov	r2, r0
   2d40c:	mov	r1, r4
   2d410:	add	r0, sp, #48	; 0x30
   2d414:	bl	2ea00 <error@@Base+0xbdc0>
   2d418:	b	2d164 <error@@Base+0xa524>
   2d41c:	add	r3, sp, #24
   2d420:	str	r3, [sp, #8]
   2d424:	b	2d1c4 <error@@Base+0xa584>
   2d428:	bl	11934 <__stack_chk_fail@plt>
   2d42c:	andeq	r3, r3, r1, lsl #21
   2d430:	ldrdeq	r7, [r4], -r4
   2d434:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d438:	movw	r4, #26864	; 0x68f0
   2d43c:	sub	sp, sp, #68	; 0x44
   2d440:	movt	r4, #4
   2d444:	mov	sl, r0
   2d448:	mov	r5, r1
   2d44c:	ldr	ip, [sp, #104]	; 0x68
   2d450:	mov	r6, r2
   2d454:	ldr	r0, [r4]
   2d458:	mov	r9, r3
   2d45c:	sub	r1, ip, #1
   2d460:	str	r0, [sp, #60]	; 0x3c
   2d464:	cmp	r1, #3
   2d468:	ldrls	pc, [pc, r1, lsl #2]
   2d46c:	b	2d64c <error@@Base+0xaa0c>
   2d470:	andeq	sp, r2, r4, lsr #10
   2d474:	andeq	sp, r2, r0, lsl #9
   2d478:	andeq	sp, r2, ip, ror r5
   2d47c:	andeq	sp, r2, r8, asr #10
   2d480:	mov	r8, #0
   2d484:	mov	r3, #1
   2d488:	mov	fp, r8
   2d48c:	mov	r7, r8
   2d490:	str	r3, [sp, #28]
   2d494:	mov	r0, r5
   2d498:	bl	11b5c <strlen@plt>
   2d49c:	ldr	r2, [sp, #108]	; 0x6c
   2d4a0:	cmp	r2, #0
   2d4a4:	mov	r1, r0
   2d4a8:	beq	2d644 <error@@Base+0xaa04>
   2d4ac:	movw	r3, #26824	; 0x68c8
   2d4b0:	movt	r3, #4
   2d4b4:	ldr	r3, [r3]
   2d4b8:	ldr	r3, [r3, #4]
   2d4bc:	ldr	r2, [sp, #28]
   2d4c0:	mov	r0, r5
   2d4c4:	stmib	sp, {r3, sl}
   2d4c8:	mov	r3, r9
   2d4cc:	str	r2, [sp]
   2d4d0:	mov	r2, r6
   2d4d4:	bl	2c3b8 <error@@Base+0x9778>
   2d4d8:	cmp	r7, #0
   2d4dc:	ldrb	r3, [r0, #20]
   2d4e0:	mov	r5, r0
   2d4e4:	bfi	r3, fp, #1, #1
   2d4e8:	bfi	r3, r8, #2, #1
   2d4ec:	strb	r3, [r0, #20]
   2d4f0:	beq	2d4fc <error@@Base+0xa8bc>
   2d4f4:	mov	r0, r7
   2d4f8:	bl	1188c <free@plt>
   2d4fc:	ldrb	r3, [r5, #20]
   2d500:	mov	r0, r5
   2d504:	tst	r3, #16
   2d508:	bne	2d574 <error@@Base+0xa934>
   2d50c:	ldr	r2, [sp, #60]	; 0x3c
   2d510:	ldr	r3, [r4]
   2d514:	cmp	r2, r3
   2d518:	bne	2d74c <error@@Base+0xab0c>
   2d51c:	add	sp, sp, #68	; 0x44
   2d520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d524:	mov	r0, r2
   2d528:	mov	r1, #0
   2d52c:	bl	177b8 <__assert_fail@plt+0x5a88>
   2d530:	mov	r8, #0
   2d534:	mov	fp, r8
   2d538:	str	r8, [sp, #28]
   2d53c:	mov	r6, r0
   2d540:	mov	r7, r0
   2d544:	b	2d494 <error@@Base+0xa854>
   2d548:	mov	r0, r5
   2d54c:	bl	11b5c <strlen@plt>
   2d550:	mov	r1, r0
   2d554:	mov	r0, r5
   2d558:	bl	2c6f8 <error@@Base+0x9ab8>
   2d55c:	subs	fp, r0, #0
   2d560:	beq	2d6a8 <error@@Base+0xaa68>
   2d564:	ldrb	r3, [fp, #20]
   2d568:	tst	r3, #16
   2d56c:	moveq	r0, fp
   2d570:	beq	2d50c <error@@Base+0xa8cc>
   2d574:	bl	2c248 <error@@Base+0x9608>
   2d578:	b	2d50c <error@@Base+0xa8cc>
   2d57c:	ldr	r2, [sp, #108]	; 0x6c
   2d580:	mov	r0, r5
   2d584:	cmp	r2, #0
   2d588:	bne	2d650 <error@@Base+0xaa10>
   2d58c:	bl	11b5c <strlen@plt>
   2d590:	mov	r1, r0
   2d594:	mov	r0, r5
   2d598:	bl	2c6f8 <error@@Base+0x9ab8>
   2d59c:	subs	r2, r0, #0
   2d5a0:	beq	2d704 <error@@Base+0xaac4>
   2d5a4:	ldr	fp, [sp, #108]	; 0x6c
   2d5a8:	ldrb	r1, [r2, #20]
   2d5ac:	ands	r7, r1, #1
   2d5b0:	movne	r3, #1
   2d5b4:	movne	ip, #0
   2d5b8:	strne	r3, [sp, #28]
   2d5bc:	beq	2d6b8 <error@@Base+0xaa78>
   2d5c0:	ldr	r0, [r2, #8]
   2d5c4:	str	ip, [sp, #16]
   2d5c8:	str	r2, [sp, #20]
   2d5cc:	bl	11b5c <strlen@plt>
   2d5d0:	mov	r8, r0
   2d5d4:	mov	r0, r6
   2d5d8:	bl	11b5c <strlen@plt>
   2d5dc:	mov	r3, r0
   2d5e0:	add	r0, r8, r0
   2d5e4:	add	r0, r0, #2
   2d5e8:	str	r3, [sp, #24]
   2d5ec:	bl	22f44 <error@@Base+0x304>
   2d5f0:	ldr	r2, [sp, #20]
   2d5f4:	ldr	r1, [r2, #8]
   2d5f8:	mov	r2, r8
   2d5fc:	mov	r7, r0
   2d600:	bl	118c8 <memcpy@plt>
   2d604:	ldr	r3, [sp, #24]
   2d608:	add	r0, r8, #1
   2d60c:	mov	r1, r6
   2d610:	add	r0, r7, r0
   2d614:	add	r2, r3, #1
   2d618:	mov	r3, #32
   2d61c:	strb	r3, [r7, r8]
   2d620:	bl	118c8 <memcpy@plt>
   2d624:	ldr	ip, [sp, #16]
   2d628:	cmp	ip, #0
   2d62c:	beq	2d69c <error@@Base+0xaa5c>
   2d630:	mov	r0, ip
   2d634:	mov	r6, r7
   2d638:	bl	1188c <free@plt>
   2d63c:	mov	r8, #0
   2d640:	b	2d494 <error@@Base+0xa854>
   2d644:	ldr	r3, [sp, #108]	; 0x6c
   2d648:	b	2d4bc <error@@Base+0xa87c>
   2d64c:	bl	11d00 <abort@plt>
   2d650:	movw	r3, #26824	; 0x68c8
   2d654:	str	r3, [sp, #24]
   2d658:	bl	11b5c <strlen@plt>
   2d65c:	ldr	r3, [sp, #24]
   2d660:	add	r1, sp, #36	; 0x24
   2d664:	str	r5, [sp, #36]	; 0x24
   2d668:	movt	r3, #4
   2d66c:	ldr	r2, [r3]
   2d670:	ldr	r2, [r2, #4]
   2d674:	str	r3, [sp, #24]
   2d678:	str	r0, [sp, #40]	; 0x28
   2d67c:	mov	r0, r2
   2d680:	bl	2e9d4 <error@@Base+0xbd94>
   2d684:	ldr	r3, [sp, #24]
   2d688:	subs	r2, r0, #0
   2d68c:	beq	2d6dc <error@@Base+0xaa9c>
   2d690:	ldrb	fp, [r2, #20]
   2d694:	ubfx	fp, fp, #1, #1
   2d698:	b	2d5a8 <error@@Base+0xa968>
   2d69c:	mov	r8, ip
   2d6a0:	mov	r6, r7
   2d6a4:	b	2d494 <error@@Base+0xa854>
   2d6a8:	mov	r8, #1
   2d6ac:	mov	r7, fp
   2d6b0:	str	r8, [sp, #28]
   2d6b4:	b	2d494 <error@@Base+0xa854>
   2d6b8:	mov	r0, r6
   2d6bc:	mov	r1, r7
   2d6c0:	str	r2, [sp, #20]
   2d6c4:	bl	177b8 <__assert_fail@plt+0x5a88>
   2d6c8:	str	r7, [sp, #28]
   2d6cc:	ldr	r2, [sp, #20]
   2d6d0:	mov	r6, r0
   2d6d4:	mov	ip, r0
   2d6d8:	b	2d5c0 <error@@Base+0xa980>
   2d6dc:	mov	r0, r5
   2d6e0:	mov	r8, r2
   2d6e4:	str	r3, [sp, #24]
   2d6e8:	bl	11b5c <strlen@plt>
   2d6ec:	mov	fp, #1
   2d6f0:	mov	r7, r8
   2d6f4:	str	fp, [sp, #28]
   2d6f8:	ldr	r3, [sp, #24]
   2d6fc:	mov	r1, r0
   2d700:	b	2d4b4 <error@@Base+0xa874>
   2d704:	mov	r0, r5
   2d708:	bl	11b5c <strlen@plt>
   2d70c:	ldr	r3, [sp, #108]	; 0x6c
   2d710:	mov	r2, r6
   2d714:	mov	ip, #1
   2d718:	str	ip, [sp]
   2d71c:	stmib	sp, {r3, sl}
   2d720:	mov	r3, r9
   2d724:	mov	r1, r0
   2d728:	mov	r0, r5
   2d72c:	bl	2c3b8 <error@@Base+0x9778>
   2d730:	ldr	r2, [sp, #108]	; 0x6c
   2d734:	ldrb	r3, [r0, #20]
   2d738:	mov	r5, r0
   2d73c:	bfi	r3, r2, #1, #1
   2d740:	bfi	r3, r2, #2, #1
   2d744:	strb	r3, [r0, #20]
   2d748:	b	2d4fc <error@@Base+0xa8bc>
   2d74c:	bl	11934 <__stack_chk_fail@plt>
   2d750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d754:	mov	r4, r0
   2d758:	ldr	r5, [r0, #60]	; 0x3c
   2d75c:	sub	sp, sp, #28
   2d760:	mov	r7, r1
   2d764:	cmp	r5, #0
   2d768:	beq	2d938 <error@@Base+0xacf8>
   2d76c:	ldr	r0, [r4, #72]	; 0x48
   2d770:	cmp	r0, #0
   2d774:	beq	2d7a4 <error@@Base+0xab64>
   2d778:	cmp	r4, r0
   2d77c:	beq	2d7a4 <error@@Base+0xab64>
   2d780:	mov	r1, r7
   2d784:	bl	2d750 <error@@Base+0xab10>
   2d788:	ldr	r3, [r4, #72]	; 0x48
   2d78c:	mov	r2, #0
   2d790:	ldr	r3, [r3, #60]	; 0x3c
   2d794:	str	r2, [r5, #8]
   2d798:	str	r3, [r5]
   2d79c:	add	sp, sp, #28
   2d7a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d7a4:	ldr	r0, [r4, #68]	; 0x44
   2d7a8:	cmp	r0, #0
   2d7ac:	beq	2d92c <error@@Base+0xacec>
   2d7b0:	mov	r1, r7
   2d7b4:	bl	2d750 <error@@Base+0xab10>
   2d7b8:	ldr	r3, [r4, #68]	; 0x44
   2d7bc:	ldr	r3, [r3, #60]	; 0x3c
   2d7c0:	str	r3, [r5]
   2d7c4:	cmp	r7, #0
   2d7c8:	mov	r9, #1
   2d7cc:	str	r9, [r5, #8]
   2d7d0:	bne	2d7e0 <error@@Base+0xaba0>
   2d7d4:	ldrb	r3, [r4, #79]	; 0x4f
   2d7d8:	tst	r3, #64	; 0x40
   2d7dc:	beq	2d810 <error@@Base+0xabd0>
   2d7e0:	ldr	r3, [r4, #64]	; 0x40
   2d7e4:	cmp	r3, #0
   2d7e8:	beq	2d79c <error@@Base+0xab5c>
   2d7ec:	ldr	r0, [r5]
   2d7f0:	mov	r2, #0
   2d7f4:	ldr	r1, [r5, #8]
   2d7f8:	str	r0, [r3]
   2d7fc:	str	r1, [r3, #8]
   2d800:	str	r3, [r5]
   2d804:	str	r2, [r5, #8]
   2d808:	add	sp, sp, #28
   2d80c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d810:	mov	r0, r7
   2d814:	ldr	r1, [r4]
   2d818:	bl	2bea0 <error@@Base+0x9260>
   2d81c:	subs	r6, r0, #0
   2d820:	beq	2d91c <error@@Base+0xacdc>
   2d824:	movw	r8, #26824	; 0x68c8
   2d828:	movt	r8, #4
   2d82c:	ldr	r3, [r8]
   2d830:	str	r3, [sp, #20]
   2d834:	bl	2c968 <error@@Base+0x9d28>
   2d838:	str	r0, [r8]
   2d83c:	str	r0, [r4, #64]	; 0x40
   2d840:	b	2d8b4 <error@@Base+0xac74>
   2d844:	ldrb	r3, [r6, #39]	; 0x27
   2d848:	ldr	r1, [r6, #16]
   2d84c:	ldr	r2, [r6, #24]
   2d850:	ubfx	r3, r3, #2, #3
   2d854:	str	fp, [sp]
   2d858:	str	r9, [sp, #4]
   2d85c:	bl	2d434 <error@@Base+0xa7f4>
   2d860:	mov	r3, r0
   2d864:	ldrb	ip, [r6, #36]	; 0x24
   2d868:	mov	r0, r6
   2d86c:	ldrb	r2, [r3, #20]
   2d870:	ubfx	ip, ip, #3, #1
   2d874:	ldrb	r1, [r3, #23]
   2d878:	bfi	r2, ip, #3, #1
   2d87c:	strb	r2, [r3, #20]
   2d880:	ldrb	ip, [r6, #39]	; 0x27
   2d884:	uxtb	r2, r2
   2d888:	ubfx	ip, ip, #5, #2
   2d88c:	bfi	r1, ip, #5, #2
   2d890:	strb	r1, [r3, #23]
   2d894:	ldrb	ip, [r6, #36]	; 0x24
   2d898:	ldr	r1, [r4]
   2d89c:	lsr	ip, ip, #7
   2d8a0:	bfi	r2, ip, #7, #1
   2d8a4:	strb	r2, [r3, #20]
   2d8a8:	bl	2bea0 <error@@Base+0x9260>
   2d8ac:	subs	r6, r0, #0
   2d8b0:	beq	2d914 <error@@Base+0xacd4>
   2d8b4:	ldrh	fp, [r6, #38]	; 0x26
   2d8b8:	add	r0, r6, #28
   2d8bc:	ubfx	fp, fp, #7, #3
   2d8c0:	cmp	fp, #1
   2d8c4:	bne	2d844 <error@@Base+0xac04>
   2d8c8:	ldr	sl, [r6, #16]
   2d8cc:	mov	r0, sl
   2d8d0:	bl	11b5c <strlen@plt>
   2d8d4:	ldr	ip, [r8]
   2d8d8:	ldr	r2, [r6, #24]
   2d8dc:	add	lr, r6, #28
   2d8e0:	ldrb	r3, [r6, #39]	; 0x27
   2d8e4:	str	r7, [sp]
   2d8e8:	ldr	ip, [ip, #4]
   2d8ec:	ubfx	r3, r3, #2, #3
   2d8f0:	stmib	sp, {ip, lr}
   2d8f4:	mov	r1, r0
   2d8f8:	mov	r0, sl
   2d8fc:	bl	2c3b8 <error@@Base+0x9778>
   2d900:	ldrh	r2, [r0, #22]
   2d904:	mov	r3, r0
   2d908:	bfi	r2, fp, #7, #3
   2d90c:	strh	r2, [r0, #22]
   2d910:	b	2d864 <error@@Base+0xac24>
   2d914:	ldr	r3, [sp, #20]
   2d918:	str	r3, [r8]
   2d91c:	ldrb	r3, [r4, #79]	; 0x4f
   2d920:	orr	r3, r3, #64	; 0x40
   2d924:	strb	r3, [r4, #79]	; 0x4f
   2d928:	b	2d7e0 <error@@Base+0xaba0>
   2d92c:	ldr	r3, [pc, #72]	; 2d97c <error@@Base+0xad3c>
   2d930:	str	r3, [r5]
   2d934:	b	2d7c4 <error@@Base+0xab84>
   2d938:	mov	r0, #12
   2d93c:	bl	22f44 <error@@Base+0x304>
   2d940:	mov	r5, r0
   2d944:	mov	r0, #44	; 0x2c
   2d948:	bl	22f44 <error@@Base+0x304>
   2d94c:	movw	ip, #48728	; 0xbe58
   2d950:	movw	r2, #48408	; 0xbd18
   2d954:	movt	ip, #2
   2d958:	movt	r2, #2
   2d95c:	movw	r3, #48568	; 0xbdb8
   2d960:	mov	r1, #23
   2d964:	movt	r3, #2
   2d968:	str	r0, [r5, #4]
   2d96c:	str	ip, [sp]
   2d970:	bl	2e838 <error@@Base+0xbbf8>
   2d974:	str	r5, [r4, #60]	; 0x3c
   2d978:	b	2d76c <error@@Base+0xab2c>
   2d97c:	andeq	r6, r4, ip, asr #17
   2d980:	push	{r4, r5, r6, lr}
   2d984:	mov	r6, r1
   2d988:	bl	23230 <error@@Base+0x5f0>
   2d98c:	ldrb	r3, [r0]
   2d990:	mov	r4, r0
   2d994:	cmp	r3, #0
   2d998:	cmpne	r3, #35	; 0x23
   2d99c:	mov	r5, r3
   2d9a0:	beq	2d9f4 <error@@Base+0xadb4>
   2d9a4:	cmp	r3, #36	; 0x24
   2d9a8:	beq	2d9fc <error@@Base+0xadbc>
   2d9ac:	bl	11b20 <__ctype_b_loc@plt>
   2d9b0:	sxth	r3, r5
   2d9b4:	add	r4, r4, #1
   2d9b8:	lsl	r3, r3, #1
   2d9bc:	ldr	r2, [r0]
   2d9c0:	ldrh	r3, [r2, r3]
   2d9c4:	ands	r3, r3, #1
   2d9c8:	moveq	r2, r3
   2d9cc:	bne	2dab0 <error@@Base+0xae70>
   2d9d0:	cmp	r5, #61	; 0x3d
   2d9d4:	beq	2dae0 <error@@Base+0xaea0>
   2d9d8:	ldrb	r3, [r4]
   2d9dc:	cmp	r3, #61	; 0x3d
   2d9e0:	beq	2da24 <error@@Base+0xade4>
   2d9e4:	cmp	r5, #58	; 0x3a
   2d9e8:	beq	2d9f4 <error@@Base+0xadb4>
   2d9ec:	cmp	r2, #0
   2d9f0:	beq	2d994 <error@@Base+0xad54>
   2d9f4:	mov	r0, #0
   2d9f8:	pop	{r4, r5, r6, pc}
   2d9fc:	ldrb	r0, [r4, #1]
   2da00:	add	r2, r4, #2
   2da04:	cmp	r0, #40	; 0x28
   2da08:	beq	2da4c <error@@Base+0xae0c>
   2da0c:	cmp	r0, #123	; 0x7b
   2da10:	moveq	r1, #125	; 0x7d
   2da14:	beq	2da50 <error@@Base+0xae10>
   2da18:	ldrb	r3, [r4, #2]
   2da1c:	mov	r4, r2
   2da20:	b	2d994 <error@@Base+0xad54>
   2da24:	cmp	r5, #58	; 0x3a
   2da28:	beq	2dad0 <error@@Base+0xae90>
   2da2c:	cmp	r5, #63	; 0x3f
   2da30:	beq	2daa0 <error@@Base+0xae60>
   2da34:	cmp	r5, #43	; 0x2b
   2da38:	bne	2d9ec <error@@Base+0xadac>
   2da3c:	mov	r3, #3
   2da40:	add	r0, r4, #1
   2da44:	str	r3, [r6]
   2da48:	pop	{r4, r5, r6, pc}
   2da4c:	mov	r1, #41	; 0x29
   2da50:	ldrb	r3, [r4, #2]
   2da54:	cmp	r3, #0
   2da58:	beq	2daf0 <error@@Base+0xaeb0>
   2da5c:	mov	ip, #0
   2da60:	b	2da78 <error@@Base+0xae38>
   2da64:	ldrb	r3, [r2, #1]
   2da68:	add	r4, r2, #1
   2da6c:	cmp	r3, #0
   2da70:	mov	r2, r4
   2da74:	beq	2d994 <error@@Base+0xad54>
   2da78:	cmp	r3, r0
   2da7c:	addeq	ip, ip, #1
   2da80:	beq	2da64 <error@@Base+0xae24>
   2da84:	cmp	r1, r3
   2da88:	bne	2da64 <error@@Base+0xae24>
   2da8c:	subs	ip, ip, #1
   2da90:	bcs	2da64 <error@@Base+0xae24>
   2da94:	add	r4, r2, #1
   2da98:	ldrb	r3, [r2, #1]
   2da9c:	b	2d994 <error@@Base+0xad54>
   2daa0:	mov	r3, #4
   2daa4:	add	r0, r4, #1
   2daa8:	str	r3, [r6]
   2daac:	pop	{r4, r5, r6, pc}
   2dab0:	mov	r0, r4
   2dab4:	bl	23230 <error@@Base+0x5f0>
   2dab8:	ldrb	r5, [r0]
   2dabc:	cmp	r5, #0
   2dac0:	beq	2d9f4 <error@@Base+0xadb4>
   2dac4:	add	r4, r0, #1
   2dac8:	mov	r2, #1
   2dacc:	b	2d9d0 <error@@Base+0xad90>
   2dad0:	mov	r3, #1
   2dad4:	add	r0, r4, #1
   2dad8:	str	r3, [r6]
   2dadc:	pop	{r4, r5, r6, pc}
   2dae0:	mov	r3, #2
   2dae4:	mov	r0, r4
   2dae8:	str	r3, [r6]
   2daec:	pop	{r4, r5, r6, pc}
   2daf0:	mov	r4, r2
   2daf4:	b	2d994 <error@@Base+0xad54>
   2daf8:	push	{r4, r5, r6, r7, r8, fp, lr}
   2dafc:	add	fp, sp, #24
   2db00:	sub	sp, sp, #12
   2db04:	movw	r7, #26864	; 0x68f0
   2db08:	movt	r7, #4
   2db0c:	mov	r6, r0
   2db10:	mov	r0, r1
   2db14:	ldr	r3, [r7]
   2db18:	str	r3, [fp, #-32]	; 0xffffffe0
   2db1c:	bl	23230 <error@@Base+0x5f0>
   2db20:	sub	r1, fp, #36	; 0x24
   2db24:	mov	r5, r0
   2db28:	bl	2d980 <error@@Base+0xad40>
   2db2c:	subs	r8, r0, #0
   2db30:	beq	2dbfc <error@@Base+0xafbc>
   2db34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2db38:	cmp	r3, #2
   2db3c:	mvnne	r4, #1
   2db40:	mvneq	r4, #0
   2db44:	add	r4, r8, r4
   2db48:	cmp	r5, r4
   2db4c:	bcs	2db7c <error@@Base+0xaf3c>
   2db50:	bl	11b20 <__ctype_b_loc@plt>
   2db54:	ldr	r2, [r0]
   2db58:	b	2db68 <error@@Base+0xaf28>
   2db5c:	sub	r4, r4, #1
   2db60:	cmp	r4, r5
   2db64:	beq	2db7c <error@@Base+0xaf3c>
   2db68:	ldrb	r3, [r4, #-1]
   2db6c:	lsl	r3, r3, #1
   2db70:	ldrh	r3, [r2, r3]
   2db74:	tst	r3, #1
   2db78:	bne	2db5c <error@@Base+0xaf1c>
   2db7c:	mov	r0, r8
   2db80:	rsb	r4, r5, r4
   2db84:	bl	23230 <error@@Base+0x5f0>
   2db88:	add	r3, r4, #15
   2db8c:	bic	r3, r3, #7
   2db90:	ldr	ip, [fp, #-36]	; 0xffffffdc
   2db94:	sub	sp, sp, r3
   2db98:	mov	r1, r5
   2db9c:	ldrh	r3, [r6, #22]
   2dba0:	mov	r2, r4
   2dba4:	mov	lr, sp
   2dba8:	lsr	r5, lr, #3
   2dbac:	bfi	r3, ip, #7, #3
   2dbb0:	strh	r3, [r6, #22]
   2dbb4:	lsl	r3, r5, #3
   2dbb8:	str	r0, [r6, #8]
   2dbbc:	mov	r0, r3
   2dbc0:	bl	118c8 <memcpy@plt>
   2dbc4:	mov	r1, #0
   2dbc8:	strb	r1, [r4, r5, lsl #3]
   2dbcc:	bl	177b8 <__assert_fail@plt+0x5a88>
   2dbd0:	str	r0, [r6]
   2dbd4:	ldrb	r0, [r0]
   2dbd8:	cmp	r0, #0
   2dbdc:	movne	r0, r6
   2dbe0:	beq	2dc08 <error@@Base+0xafc8>
   2dbe4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2dbe8:	ldr	r3, [r7]
   2dbec:	cmp	r2, r3
   2dbf0:	bne	2dc04 <error@@Base+0xafc4>
   2dbf4:	sub	sp, fp, #24
   2dbf8:	pop	{r4, r5, r6, r7, r8, fp, pc}
   2dbfc:	mov	r0, r8
   2dc00:	b	2dbe4 <error@@Base+0xafa4>
   2dc04:	bl	11934 <__stack_chk_fail@plt>
   2dc08:	movw	r1, #15308	; 0x3bcc
   2dc0c:	mov	r2, #5
   2dc10:	movt	r1, #3
   2dc14:	bl	1191c <dcgettext@plt>
   2dc18:	mov	r1, r0
   2dc1c:	add	r0, r6, #12
   2dc20:	bl	22d64 <error@@Base+0x124>
   2dc24:	push	{r4, r5, r6, r7, lr}
   2dc28:	movw	r4, #26864	; 0x68f0
   2dc2c:	movt	r4, #4
   2dc30:	mov	lr, r1
   2dc34:	subs	r5, r0, #0
   2dc38:	sub	sp, sp, #44	; 0x2c
   2dc3c:	ldr	r1, [r4]
   2dc40:	addne	ip, sp, #24
   2dc44:	streq	r5, [sp, #24]
   2dc48:	mov	r7, r2
   2dc4c:	mov	r6, r3
   2dc50:	str	r1, [sp, #36]	; 0x24
   2dc54:	ldmne	r5, {r0, r1}
   2dc58:	stmne	ip, {r0, r1}
   2dc5c:	mov	r1, lr
   2dc60:	add	r0, sp, #12
   2dc64:	bl	2daf8 <error@@Base+0xaeb8>
   2dc68:	cmp	r0, #0
   2dc6c:	beq	2dca4 <error@@Base+0xb064>
   2dc70:	ldrh	ip, [sp, #34]	; 0x22
   2dc74:	mov	r0, r5
   2dc78:	ldr	r1, [sp, #12]
   2dc7c:	mov	r3, r7
   2dc80:	ubfx	ip, ip, #7, #3
   2dc84:	ldr	r2, [sp, #20]
   2dc88:	str	ip, [sp]
   2dc8c:	str	r6, [sp, #4]
   2dc90:	bl	2d434 <error@@Base+0xa7f4>
   2dc94:	mov	r5, r0
   2dc98:	ldr	r0, [sp, #12]
   2dc9c:	bl	1188c <free@plt>
   2dca0:	mov	r0, r5
   2dca4:	ldr	r2, [sp, #36]	; 0x24
   2dca8:	ldr	r3, [r4]
   2dcac:	cmp	r2, r3
   2dcb0:	bne	2dcbc <error@@Base+0xb07c>
   2dcb4:	add	sp, sp, #44	; 0x2c
   2dcb8:	pop	{r4, r5, r6, r7, pc}
   2dcbc:	bl	11934 <__stack_chk_fail@plt>
   2dcc0:	push	{r3, r4, r5, lr}
   2dcc4:	mov	r2, r1
   2dcc8:	movw	r4, #26888	; 0x6908
   2dccc:	movw	r1, #49028	; 0xbf84
   2dcd0:	movt	r4, #4
   2dcd4:	movt	r1, #2
   2dcd8:	mov	r5, r0
   2dcdc:	bl	2ed74 <error@@Base+0xc134>
   2dce0:	mov	r2, #5
   2dce4:	movw	r1, #19076	; 0x4a84
   2dce8:	mov	r0, #0
   2dcec:	movt	r1, #3
   2dcf0:	bl	1191c <dcgettext@plt>
   2dcf4:	ldr	r1, [r4]
   2dcf8:	bl	11ce8 <fputs@plt>
   2dcfc:	ldr	r3, [r4]
   2dd00:	mov	r1, #1
   2dd04:	mov	r2, #2
   2dd08:	movw	r0, #8908	; 0x22cc
   2dd0c:	movt	r0, #3
   2dd10:	bl	11a00 <fwrite@plt>
   2dd14:	mov	r0, r5
   2dd18:	ldr	r1, [r4]
   2dd1c:	bl	2edcc <error@@Base+0xc18c>
   2dd20:	ldr	r1, [r4]
   2dd24:	mov	r0, #10
   2dd28:	pop	{r3, r4, r5, lr}
   2dd2c:	b	119f4 <_IO_putc@plt>
   2dd30:	push	{r3, r4, r5, lr}
   2dd34:	mov	r2, #5
   2dd38:	movw	r1, #19112	; 0x4aa8
   2dd3c:	mov	r0, #0
   2dd40:	movt	r1, #3
   2dd44:	movw	r4, #28368	; 0x6ed0
   2dd48:	bl	1191c <dcgettext@plt>
   2dd4c:	movt	r4, #4
   2dd50:	bl	11a9c <puts@plt>
   2dd54:	add	r0, r4, #1024	; 0x400
   2dd58:	add	r0, r0, #4
   2dd5c:	movw	r1, #6032	; 0x1790
   2dd60:	movt	r1, #3
   2dd64:	bl	2dcc0 <error@@Base+0xb080>
   2dd68:	mov	r2, #5
   2dd6c:	movw	r1, #19128	; 0x4ab8
   2dd70:	mov	r0, #0
   2dd74:	movt	r1, #3
   2dd78:	bl	1191c <dcgettext@plt>
   2dd7c:	bl	11a9c <puts@plt>
   2dd80:	ldr	r4, [r4]
   2dd84:	cmp	r4, #0
   2dd88:	movne	r5, #0
   2dd8c:	beq	2ddec <error@@Base+0xb1ac>
   2dd90:	ldr	r2, [r4, #8]
   2dd94:	movw	r1, #19204	; 0x4b04
   2dd98:	mov	r0, #1
   2dd9c:	movt	r1, #3
   2dda0:	bl	11be0 <__printf_chk@plt>
   2dda4:	add	r0, r4, #16
   2dda8:	movw	r1, #8908	; 0x22cc
   2ddac:	movt	r1, #3
   2ddb0:	bl	2bf84 <error@@Base+0x9344>
   2ddb4:	ldr	r4, [r4]
   2ddb8:	add	r5, r5, #1
   2ddbc:	cmp	r4, #0
   2ddc0:	bne	2dd90 <error@@Base+0xb150>
   2ddc4:	mov	r0, r4
   2ddc8:	mov	r2, #5
   2ddcc:	movw	r1, #19212	; 0x4b0c
   2ddd0:	movt	r1, #3
   2ddd4:	bl	1191c <dcgettext@plt>
   2ddd8:	mov	r2, r5
   2dddc:	pop	{r3, r4, r5, lr}
   2dde0:	mov	r1, r0
   2dde4:	mov	r0, #1
   2dde8:	b	11be0 <__printf_chk@plt>
   2ddec:	mov	r0, r4
   2ddf0:	movw	r1, #19164	; 0x4adc
   2ddf4:	mov	r2, #5
   2ddf8:	movt	r1, #3
   2ddfc:	bl	1191c <dcgettext@plt>
   2de00:	pop	{r3, r4, r5, lr}
   2de04:	b	11a9c <puts@plt>
   2de08:	ldr	r3, [r0, #60]	; 0x3c
   2de0c:	cmp	r3, #0
   2de10:	bxeq	lr
   2de14:	movw	r1, #8908	; 0x22cc
   2de18:	ldr	r0, [r3, #4]
   2de1c:	movt	r1, #3
   2de20:	b	2dcc0 <error@@Base+0xb080>
   2de24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2de28:	add	fp, sp, #32
   2de2c:	sub	sp, sp, #148	; 0x94
   2de30:	movw	ip, #26864	; 0x68f0
   2de34:	movt	ip, #4
   2de38:	str	r2, [fp, #-152]	; 0xffffff68
   2de3c:	mov	r6, r3
   2de40:	ldr	r2, [ip]
   2de44:	mov	sl, r0
   2de48:	ldr	r3, [fp, #4]
   2de4c:	mov	r4, r1
   2de50:	ldr	r0, [fp, #-152]	; 0xffffff68
   2de54:	str	ip, [fp, #-156]	; 0xffffff64
   2de58:	str	r3, [fp, #-176]	; 0xffffff50
   2de5c:	str	r2, [fp, #-40]	; 0xffffffd8
   2de60:	bl	17ae8 <__assert_fail@plt+0x5db8>
   2de64:	cmp	r0, #0
   2de68:	ldrbne	r3, [r0, #78]	; 0x4e
   2de6c:	moveq	ip, #1
   2de70:	ldr	r0, [fp, #-152]	; 0xffffff68
   2de74:	eorne	r3, r3, #128	; 0x80
   2de78:	streq	ip, [fp, #-172]	; 0xffffff54
   2de7c:	lsrne	r3, r3, #7
   2de80:	strne	r3, [fp, #-172]	; 0xffffff54
   2de84:	bl	11b5c <strlen@plt>
   2de88:	mov	r1, #47	; 0x2f
   2de8c:	str	r0, [fp, #-160]	; 0xffffff60
   2de90:	ldr	r0, [fp, #-152]	; 0xffffff68
   2de94:	bl	11c7c <strrchr@plt>
   2de98:	cmp	r0, #0
   2de9c:	beq	2e0e4 <error@@Base+0xb4a4>
   2dea0:	ldr	ip, [fp, #-152]	; 0xffffff68
   2dea4:	subs	r7, r0, ip
   2dea8:	beq	2e0dc <error@@Base+0xb49c>
   2deac:	ldr	ip, [fp, #-160]	; 0xffffff60
   2deb0:	add	r9, r0, #1
   2deb4:	sub	r3, ip, #1
   2deb8:	rsb	r3, r7, r3
   2debc:	str	r3, [fp, #-160]	; 0xffffff60
   2dec0:	ldr	ip, [fp, #-160]	; 0xffffff60
   2dec4:	add	r3, r4, #3
   2dec8:	ldr	r5, [sl]
   2decc:	add	r3, r3, ip
   2ded0:	add	r3, r3, r7
   2ded4:	cmp	r5, #0
   2ded8:	add	r3, r3, #14
   2dedc:	bic	r3, r3, #7
   2dee0:	sub	sp, sp, r3
   2dee4:	mov	r4, sp
   2dee8:	beq	2e038 <error@@Base+0xb3f8>
   2deec:	ldr	r3, [fp, #-160]	; 0xffffff60
   2def0:	mov	r8, #0
   2def4:	str	r6, [fp, #-168]	; 0xffffff58
   2def8:	add	r3, r3, #1
   2defc:	str	r3, [fp, #-164]	; 0xffffff5c
   2df00:	mov	r0, r5
   2df04:	bl	11b5c <strlen@plt>
   2df08:	mov	r1, r5
   2df0c:	mov	r6, r0
   2df10:	mov	r0, r4
   2df14:	mov	r2, r6
   2df18:	add	r5, r4, r6
   2df1c:	bl	118c8 <memcpy@plt>
   2df20:	cmp	r7, #0
   2df24:	bne	2e0ac <error@@Base+0xb46c>
   2df28:	cmp	r4, r5
   2df2c:	mov	r0, r5
   2df30:	mov	r1, r9
   2df34:	beq	2e040 <error@@Base+0xb400>
   2df38:	ldrb	r3, [r5, #-1]
   2df3c:	cmp	r3, #47	; 0x2f
   2df40:	beq	2e040 <error@@Base+0xb400>
   2df44:	mov	r2, #47	; 0x2f
   2df48:	strb	r2, [r0], #1
   2df4c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2df50:	bl	118c8 <memcpy@plt>
   2df54:	mov	r0, r4
   2df58:	bl	17ae8 <__assert_fail@plt+0x5db8>
   2df5c:	cmp	r0, #0
   2df60:	beq	2e00c <error@@Base+0xb3cc>
   2df64:	ldr	r3, [fp, #-172]	; 0xffffff54
   2df68:	cmp	r3, #0
   2df6c:	bne	2df7c <error@@Base+0xb33c>
   2df70:	ldrb	r3, [r0, #78]	; 0x4e
   2df74:	lsrs	r3, r3, #7
   2df78:	beq	2e00c <error@@Base+0xb3cc>
   2df7c:	ldr	r6, [fp, #-168]	; 0xffffff58
   2df80:	cmp	r6, #0
   2df84:	beq	2e0d0 <error@@Base+0xb490>
   2df88:	ldrd	r2, [r0, #32]
   2df8c:	and	r1, r2, r3
   2df90:	cmn	r1, #1
   2df94:	movne	r1, #0
   2df98:	moveq	r1, #1
   2df9c:	cmp	r3, #0
   2dfa0:	cmpeq	r2, #2
   2dfa4:	orreq	r1, r1, #1
   2dfa8:	cmp	r1, #0
   2dfac:	strdne	r2, [r6]
   2dfb0:	mov	r3, #47	; 0x2f
   2dfb4:	strb	r3, [r5]
   2dfb8:	movne	r6, #0
   2dfbc:	cmp	r6, #0
   2dfc0:	movne	r2, #0
   2dfc4:	movne	r3, #0
   2dfc8:	strdne	r2, [r6]
   2dfcc:	ldr	r3, [fp, #-176]	; 0xffffff50
   2dfd0:	add	r1, r5, #1
   2dfd4:	ldr	ip, [fp, #-160]	; 0xffffff60
   2dfd8:	rsb	r1, r4, r1
   2dfdc:	cmp	r3, #0
   2dfe0:	mov	r0, r4
   2dfe4:	strne	r8, [r3]
   2dfe8:	add	r1, r1, ip
   2dfec:	bl	2b9dc <error@@Base+0x8d9c>
   2dff0:	ldr	ip, [fp, #-156]	; 0xffffff64
   2dff4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2dff8:	ldr	r3, [ip]
   2dffc:	cmp	r2, r3
   2e000:	bne	2e0f0 <error@@Base+0xb4b0>
   2e004:	sub	sp, fp, #32
   2e008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e00c:	mov	ip, #0
   2e010:	mov	r0, r4
   2e014:	strb	ip, [r5]
   2e018:	mov	r1, r9
   2e01c:	bl	163f0 <__assert_fail@plt+0x46c0>
   2e020:	cmp	r0, #0
   2e024:	bne	2e04c <error@@Base+0xb40c>
   2e028:	ldr	r5, [sl, #4]!
   2e02c:	add	r8, r8, #1
   2e030:	cmp	r5, #0
   2e034:	bne	2df00 <error@@Base+0xb2c0>
   2e038:	mov	r0, #0
   2e03c:	b	2dff0 <error@@Base+0xb3b0>
   2e040:	ldr	r2, [fp, #-164]	; 0xffffff5c
   2e044:	bl	118c8 <memcpy@plt>
   2e048:	b	2df54 <error@@Base+0xb314>
   2e04c:	mov	r0, #47	; 0x2f
   2e050:	strb	r0, [r5]
   2e054:	b	2e068 <error@@Base+0xb428>
   2e058:	bl	11b8c <__errno_location@plt>
   2e05c:	ldr	r3, [r0]
   2e060:	cmp	r3, #4
   2e064:	bne	2e028 <error@@Base+0xb3e8>
   2e068:	mov	r0, #3
   2e06c:	mov	r1, r4
   2e070:	sub	r2, fp, #148	; 0x94
   2e074:	bl	11cdc <__xstat64@plt>
   2e078:	cmn	r0, #1
   2e07c:	beq	2e058 <error@@Base+0xb418>
   2e080:	cmp	r0, #0
   2e084:	bne	2e028 <error@@Base+0xb3e8>
   2e088:	ldr	r6, [fp, #-168]	; 0xffffff58
   2e08c:	cmp	r6, #0
   2e090:	beq	2dfcc <error@@Base+0xb38c>
   2e094:	mov	r0, r4
   2e098:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2e09c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2e0a0:	bl	18dc0 <__assert_fail@plt+0x7090>
   2e0a4:	strd	r0, [r6]
   2e0a8:	b	2dfcc <error@@Base+0xb38c>
   2e0ac:	add	r5, r5, #1
   2e0b0:	mov	ip, #47	; 0x2f
   2e0b4:	ldr	r1, [fp, #-152]	; 0xffffff68
   2e0b8:	mov	r2, r7
   2e0bc:	strb	ip, [r4, r6]
   2e0c0:	mov	r0, r5
   2e0c4:	add	r5, r5, r7
   2e0c8:	bl	118c8 <memcpy@plt>
   2e0cc:	b	2df28 <error@@Base+0xb2e8>
   2e0d0:	mov	r3, #47	; 0x2f
   2e0d4:	strb	r3, [r5]
   2e0d8:	b	2dfcc <error@@Base+0xb38c>
   2e0dc:	ldr	r9, [fp, #-152]	; 0xffffff68
   2e0e0:	b	2dec0 <error@@Base+0xb280>
   2e0e4:	mov	r7, r0
   2e0e8:	ldr	r9, [fp, #-152]	; 0xffffff68
   2e0ec:	b	2dec0 <error@@Base+0xb280>
   2e0f0:	bl	11934 <__stack_chk_fail@plt>
   2e0f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e0f8:	subs	r2, r0, #0
   2e0fc:	sub	sp, sp, #12
   2e100:	mov	r5, r1
   2e104:	str	r2, [sp]
   2e108:	beq	2e318 <error@@Base+0xb6d8>
   2e10c:	bl	24960 <error@@Base+0x1d20>
   2e110:	cmp	r5, #0
   2e114:	str	r0, [sp, #4]
   2e118:	beq	2e328 <error@@Base+0xb6e8>
   2e11c:	bl	11b20 <__ctype_b_loc@plt>
   2e120:	mov	r1, r5
   2e124:	ldr	r2, [r0]
   2e128:	mov	r9, r0
   2e12c:	mov	fp, r1
   2e130:	add	r1, r1, #1
   2e134:	ldrb	r5, [fp]
   2e138:	cmp	r5, #58	; 0x3a
   2e13c:	lsl	r3, r5, #1
   2e140:	beq	2e12c <error@@Base+0xb4ec>
   2e144:	ldrh	r3, [r2, r3]
   2e148:	tst	r3, #1
   2e14c:	bne	2e12c <error@@Base+0xb4ec>
   2e150:	mov	r3, fp
   2e154:	mov	r6, #2
   2e158:	b	2e180 <error@@Base+0xb540>
   2e15c:	cmp	r5, #58	; 0x3a
   2e160:	beq	2e178 <error@@Base+0xb538>
   2e164:	ldrb	r1, [r3, #1]
   2e168:	lsl	r1, r1, #1
   2e16c:	ldrh	r1, [r2, r1]
   2e170:	tst	r1, #1
   2e174:	beq	2e17c <error@@Base+0xb53c>
   2e178:	add	r6, r6, #1
   2e17c:	ldrb	r5, [r3, #1]!
   2e180:	cmp	r5, #0
   2e184:	bne	2e15c <error@@Base+0xb51c>
   2e188:	lsl	r0, r6, #2
   2e18c:	mov	r4, r5
   2e190:	bl	22f44 <error@@Base+0x304>
   2e194:	ldrb	r3, [fp]
   2e198:	cmp	r3, #0
   2e19c:	mov	r7, r0
   2e1a0:	beq	2e25c <error@@Base+0xb61c>
   2e1a4:	cmp	r3, #58	; 0x3a
   2e1a8:	beq	2e30c <error@@Base+0xb6cc>
   2e1ac:	ldr	r1, [r9]
   2e1b0:	lsl	r2, r3, #1
   2e1b4:	ldrh	r2, [r1, r2]
   2e1b8:	tst	r2, #1
   2e1bc:	bne	2e2e0 <error@@Base+0xb6a0>
   2e1c0:	add	r0, fp, #1
   2e1c4:	b	2e1d4 <error@@Base+0xb594>
   2e1c8:	ldrh	r2, [r1, r2]
   2e1cc:	tst	r2, #1
   2e1d0:	bne	2e1f0 <error@@Base+0xb5b0>
   2e1d4:	mov	sl, r0
   2e1d8:	add	r0, r0, #1
   2e1dc:	ldrb	r2, [sl]
   2e1e0:	cmp	r2, #58	; 0x3a
   2e1e4:	cmpne	r2, #0
   2e1e8:	lsl	r2, r2, #1
   2e1ec:	bne	2e1c8 <error@@Base+0xb588>
   2e1f0:	rsb	r8, fp, sl
   2e1f4:	cmp	r8, #1
   2e1f8:	bls	2e2e8 <error@@Base+0xb6a8>
   2e1fc:	ldrb	r0, [sl, #-1]
   2e200:	cmp	r0, #47	; 0x2f
   2e204:	beq	2e2f4 <error@@Base+0xb6b4>
   2e208:	mov	r1, r8
   2e20c:	mov	r0, fp
   2e210:	bl	2b9dc <error@@Base+0x8d9c>
   2e214:	add	fp, r4, #1
   2e218:	bl	16738 <__assert_fail@plt+0x4a08>
   2e21c:	cmp	r5, r8
   2e220:	movcc	r5, r8
   2e224:	str	r0, [r7, r4, lsl #2]
   2e228:	mov	r4, fp
   2e22c:	ldr	r1, [r9]
   2e230:	mov	r2, sl
   2e234:	mov	fp, r2
   2e238:	ldrb	r3, [r2], #1
   2e23c:	cmp	r3, #58	; 0x3a
   2e240:	lsl	r0, r3, #1
   2e244:	beq	2e234 <error@@Base+0xb5f4>
   2e248:	ldrh	r0, [r1, r0]
   2e24c:	tst	r0, #1
   2e250:	bne	2e234 <error@@Base+0xb5f4>
   2e254:	cmp	r3, #0
   2e258:	bne	2e1a4 <error@@Base+0xb564>
   2e25c:	cmp	r4, #0
   2e260:	beq	2e3f0 <error@@Base+0xb7b0>
   2e264:	sub	r6, r6, #1
   2e268:	cmp	r6, r4
   2e26c:	bhi	2e400 <error@@Base+0xb7c0>
   2e270:	mov	r3, #0
   2e274:	mov	r0, #24
   2e278:	str	r3, [r7, r4, lsl #2]
   2e27c:	bl	22f44 <error@@Base+0x304>
   2e280:	movw	r3, #29444	; 0x7304
   2e284:	movt	r3, #4
   2e288:	ldr	r2, [r3]
   2e28c:	mov	r4, r0
   2e290:	str	r7, [r0, #16]
   2e294:	str	r2, [r4]
   2e298:	str	r5, [r4, #20]
   2e29c:	ldr	r0, [sp]
   2e2a0:	str	r4, [r3]
   2e2a4:	bl	2b9c0 <error@@Base+0x8d80>
   2e2a8:	mov	r5, r0
   2e2ac:	ldr	r0, [sp]
   2e2b0:	str	r5, [r4, #4]
   2e2b4:	bl	11b5c <strlen@plt>
   2e2b8:	ldr	r3, [sp, #4]
   2e2bc:	cmp	r3, #0
   2e2c0:	ldrne	r2, [sp]
   2e2c4:	ldreq	r5, [sp, #4]
   2e2c8:	rsbne	r8, r2, r3
   2e2cc:	str	r0, [r4, #12]
   2e2d0:	addne	r5, r5, r8
   2e2d4:	str	r5, [r4, #8]
   2e2d8:	add	sp, sp, #12
   2e2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e2e0:	mov	sl, fp
   2e2e4:	mov	r8, #0
   2e2e8:	cmp	r3, #46	; 0x2e
   2e2ec:	bne	2e208 <error@@Base+0xb5c8>
   2e2f0:	b	2e230 <error@@Base+0xb5f0>
   2e2f4:	sub	r8, r8, #1
   2e2f8:	cmp	r8, #1
   2e2fc:	bne	2e208 <error@@Base+0xb5c8>
   2e300:	cmp	r3, #46	; 0x2e
   2e304:	bne	2e208 <error@@Base+0xb5c8>
   2e308:	b	2e230 <error@@Base+0xb5f0>
   2e30c:	mov	sl, fp
   2e310:	mov	r8, #0
   2e314:	b	2e208 <error@@Base+0xb5c8>
   2e318:	ldr	r3, [sp]
   2e31c:	cmp	r5, #0
   2e320:	str	r3, [sp, #4]
   2e324:	bne	2e11c <error@@Base+0xb4dc>
   2e328:	movw	r6, #29444	; 0x7304
   2e32c:	movt	r6, #4
   2e330:	ldr	r4, [r6]
   2e334:	cmp	r4, #0
   2e338:	beq	2e2d8 <error@@Base+0xb698>
   2e33c:	ldr	r2, [sp]
   2e340:	mov	fp, r5
   2e344:	ldr	r3, [sp, #4]
   2e348:	add	r7, r2, #1
   2e34c:	rsb	sl, r2, r3
   2e350:	b	2e364 <error@@Base+0xb724>
   2e354:	cmp	r5, #0
   2e358:	beq	2e2d8 <error@@Base+0xb698>
   2e35c:	mov	fp, r4
   2e360:	mov	r4, r5
   2e364:	ldr	r2, [sp]
   2e368:	ldr	r5, [r4]
   2e36c:	cmp	r2, #0
   2e370:	beq	2e3cc <error@@Base+0xb78c>
   2e374:	ldr	r3, [sp, #4]
   2e378:	cmp	r3, #0
   2e37c:	ldr	r3, [r4, #8]
   2e380:	beq	2e418 <error@@Base+0xb7d8>
   2e384:	ldr	r1, [r4, #4]
   2e388:	rsb	r3, r1, r3
   2e38c:	cmp	sl, r3
   2e390:	bne	2e354 <error@@Base+0xb714>
   2e394:	ldr	r2, [sp]
   2e398:	cmp	r2, r1
   2e39c:	beq	2e3cc <error@@Base+0xb78c>
   2e3a0:	ldrb	r2, [r2]
   2e3a4:	ldrb	r3, [r1]
   2e3a8:	cmp	r3, r2
   2e3ac:	bne	2e354 <error@@Base+0xb714>
   2e3b0:	cmp	r3, #0
   2e3b4:	beq	2e3cc <error@@Base+0xb78c>
   2e3b8:	add	r1, r1, #1
   2e3bc:	mov	r0, r7
   2e3c0:	bl	1182c <strcmp@plt>
   2e3c4:	cmp	r0, #0
   2e3c8:	bne	2e354 <error@@Base+0xb714>
   2e3cc:	cmp	fp, #0
   2e3d0:	ldr	r0, [r4, #16]
   2e3d4:	strne	r5, [fp]
   2e3d8:	streq	r5, [r6]
   2e3dc:	bl	1188c <free@plt>
   2e3e0:	mov	r0, r4
   2e3e4:	mov	r4, fp
   2e3e8:	bl	1188c <free@plt>
   2e3ec:	b	2e354 <error@@Base+0xb714>
   2e3f0:	mov	r0, r7
   2e3f4:	add	sp, sp, #12
   2e3f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e3fc:	b	1188c <free@plt>
   2e400:	add	r1, r4, #1
   2e404:	mov	r0, r7
   2e408:	lsl	r1, r1, #2
   2e40c:	bl	22fb0 <error@@Base+0x370>
   2e410:	mov	r7, r0
   2e414:	b	2e270 <error@@Base+0xb630>
   2e418:	cmp	r3, #0
   2e41c:	ldreq	r1, [r4, #4]
   2e420:	bne	2e384 <error@@Base+0xb744>
   2e424:	b	2e394 <error@@Base+0xb754>
   2e428:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e42c:	movw	r5, #29444	; 0x7304
   2e430:	movt	r5, #4
   2e434:	movw	r6, #26864	; 0x68f0
   2e438:	movt	r6, #4
   2e43c:	sub	sp, sp, #8
   2e440:	ldr	r3, [r5]
   2e444:	ldr	r2, [r6]
   2e448:	cmp	r3, #0
   2e44c:	str	r2, [sp, #4]
   2e450:	beq	2e474 <error@@Base+0xb834>
   2e454:	mov	r1, #0
   2e458:	b	2e464 <error@@Base+0xb824>
   2e45c:	mov	r1, r3
   2e460:	mov	r3, r2
   2e464:	ldr	r2, [r3]
   2e468:	str	r1, [r3]
   2e46c:	cmp	r2, #0
   2e470:	bne	2e45c <error@@Base+0xb81c>
   2e474:	movw	r4, #29556	; 0x7374
   2e478:	movt	r4, #4
   2e47c:	movw	r0, #19288	; 0x4b58
   2e480:	movt	r0, #3
   2e484:	ldr	r8, [r4]
   2e488:	mov	r9, #0
   2e48c:	str	r3, [r5]
   2e490:	movw	r7, #29444	; 0x7304
   2e494:	str	r9, [r4]
   2e498:	bl	17528 <__assert_fail@plt+0x57f8>
   2e49c:	str	r8, [r4]
   2e4a0:	movt	r7, #4
   2e4a4:	ldrb	r3, [r0]
   2e4a8:	cmp	r3, r9
   2e4ac:	bne	2e518 <error@@Base+0xb8d8>
   2e4b0:	movw	r0, #19308	; 0x4b6c
   2e4b4:	movt	r0, #3
   2e4b8:	mov	r7, #0
   2e4bc:	str	r7, [r4]
   2e4c0:	bl	17528 <__assert_fail@plt+0x57f8>
   2e4c4:	str	r8, [r4]
   2e4c8:	ldrb	r3, [r0]
   2e4cc:	cmp	r3, r7
   2e4d0:	beq	2e500 <error@@Base+0xb8c0>
   2e4d4:	add	r3, sp, #8
   2e4d8:	mov	r1, r0
   2e4dc:	mov	r0, sp
   2e4e0:	ldr	r4, [r5]
   2e4e4:	mov	r2, #37	; 0x25
   2e4e8:	str	r7, [r5]
   2e4ec:	strh	r2, [r3, #-8]!
   2e4f0:	bl	2e0f4 <error@@Base+0xb4b4>
   2e4f4:	ldr	r3, [r5]
   2e4f8:	str	r4, [r5]
   2e4fc:	str	r3, [r5, #8]
   2e500:	ldr	r2, [sp, #4]
   2e504:	ldr	r3, [r6]
   2e508:	cmp	r2, r3
   2e50c:	bne	2e54c <error@@Base+0xb90c>
   2e510:	add	sp, sp, #8
   2e514:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e518:	add	r3, sp, #8
   2e51c:	mov	r1, r0
   2e520:	mov	r0, sp
   2e524:	ldr	sl, [r7]
   2e528:	mov	r2, #37	; 0x25
   2e52c:	str	r9, [r7]
   2e530:	strh	r2, [r3, #-8]!
   2e534:	bl	2e0f4 <error@@Base+0xb4b4>
   2e538:	ldr	r3, [r7]
   2e53c:	ldr	r8, [r4]
   2e540:	str	sl, [r7]
   2e544:	str	r3, [r7, #4]
   2e548:	b	2e4b0 <error@@Base+0xb870>
   2e54c:	bl	11934 <__stack_chk_fail@plt>
   2e550:	push	{r3, r4, r5, r6, r7, lr}
   2e554:	movw	r3, #29444	; 0x7304
   2e558:	movt	r3, #4
   2e55c:	mov	r7, r0
   2e560:	mov	r6, r1
   2e564:	ldr	r4, [r3, #8]
   2e568:	cmp	r4, #0
   2e56c:	beq	2e5bc <error@@Base+0xb97c>
   2e570:	ldr	r3, [r4, #20]
   2e574:	cmp	r3, r1
   2e578:	bcc	2e5bc <error@@Base+0xb97c>
   2e57c:	ldr	r5, [r4, #16]
   2e580:	ldr	r4, [r5]
   2e584:	cmp	r4, #0
   2e588:	beq	2e5bc <error@@Base+0xb97c>
   2e58c:	mov	r0, r4
   2e590:	mov	r1, r7
   2e594:	mov	r2, r6
   2e598:	bl	11cf4 <strncmp@plt>
   2e59c:	cmp	r0, #0
   2e5a0:	bne	2e5b0 <error@@Base+0xb970>
   2e5a4:	ldrb	r3, [r4, r6]
   2e5a8:	cmp	r3, #0
   2e5ac:	beq	2e5c4 <error@@Base+0xb984>
   2e5b0:	ldr	r4, [r5, #4]!
   2e5b4:	cmp	r4, #0
   2e5b8:	bne	2e58c <error@@Base+0xb94c>
   2e5bc:	mov	r0, #0
   2e5c0:	pop	{r3, r4, r5, r6, r7, pc}
   2e5c4:	mov	r0, #1
   2e5c8:	pop	{r3, r4, r5, r6, r7, pc}
   2e5cc:	push	{r4, r5, r6, r7, r8, r9, lr}
   2e5d0:	mov	r8, r1
   2e5d4:	ldrb	r1, [r0]
   2e5d8:	sub	sp, sp, #12
   2e5dc:	mov	r6, r0
   2e5e0:	mov	r5, r2
   2e5e4:	cmp	r1, #47	; 0x2f
   2e5e8:	mov	r7, r3
   2e5ec:	beq	2e6ac <error@@Base+0xba6c>
   2e5f0:	movw	r9, #29444	; 0x7304
   2e5f4:	movt	r9, #4
   2e5f8:	ldr	r4, [r9]
   2e5fc:	cmp	r4, #0
   2e600:	beq	2e6a0 <error@@Base+0xba60>
   2e604:	cmp	r5, #0
   2e608:	movne	r3, #0
   2e60c:	strne	r3, [r5]
   2e610:	strne	r3, [r7]
   2e614:	b	2e62c <error@@Base+0xb9ec>
   2e618:	cmp	r5, #0
   2e61c:	ldrne	ip, [r5]
   2e620:	addne	ip, ip, #1
   2e624:	strne	ip, [r5]
   2e628:	ldr	r4, [r4]
   2e62c:	cmp	r4, #0
   2e630:	beq	2e674 <error@@Base+0xba34>
   2e634:	ldr	r0, [r4, #4]
   2e638:	mov	r2, r6
   2e63c:	ldr	r1, [r4, #8]
   2e640:	bl	1bde4 <__assert_fail@plt+0xa0b4>
   2e644:	cmp	r0, #0
   2e648:	beq	2e618 <error@@Base+0xb9d8>
   2e64c:	ldr	r0, [r4, #16]
   2e650:	mov	r2, r6
   2e654:	ldr	r1, [r4, #20]
   2e658:	mov	r3, r8
   2e65c:	str	r7, [sp]
   2e660:	bl	2de24 <error@@Base+0xb1e4>
   2e664:	cmp	r0, #0
   2e668:	beq	2e618 <error@@Base+0xb9d8>
   2e66c:	add	sp, sp, #12
   2e670:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e674:	ldr	r3, [r9, #4]
   2e678:	cmp	r3, #0
   2e67c:	beq	2e6ac <error@@Base+0xba6c>
   2e680:	ldr	r1, [r3, #20]
   2e684:	mov	r2, r6
   2e688:	ldr	r0, [r3, #16]
   2e68c:	mov	r3, r8
   2e690:	str	r7, [sp]
   2e694:	bl	2de24 <error@@Base+0xb1e4>
   2e698:	add	sp, sp, #12
   2e69c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2e6a0:	ldr	r3, [r9, #4]
   2e6a4:	cmp	r3, #0
   2e6a8:	bne	2e604 <error@@Base+0xb9c4>
   2e6ac:	mov	r0, #0
   2e6b0:	b	2e66c <error@@Base+0xba2c>
   2e6b4:	push	{r3, r4, r5, r6, r7, lr}
   2e6b8:	mov	r2, #5
   2e6bc:	movw	r1, #19328	; 0x4b80
   2e6c0:	mov	r0, #0
   2e6c4:	movt	r1, #3
   2e6c8:	movw	r7, #29444	; 0x7304
   2e6cc:	movt	r7, #4
   2e6d0:	bl	1191c <dcgettext@plt>
   2e6d4:	bl	11a9c <puts@plt>
   2e6d8:	ldr	r5, [r7]
   2e6dc:	cmp	r5, #0
   2e6e0:	movne	r6, #0
   2e6e4:	beq	2e7f4 <error@@Base+0xbbb4>
   2e6e8:	ldr	r2, [r5, #4]
   2e6ec:	movw	r1, #19380	; 0x4bb4
   2e6f0:	mov	r0, #1
   2e6f4:	movt	r1, #3
   2e6f8:	bl	11be0 <__printf_chk@plt>
   2e6fc:	ldr	r3, [r5, #16]
   2e700:	add	r6, r6, #1
   2e704:	ldr	r2, [r3]
   2e708:	cmp	r2, #0
   2e70c:	movne	r4, #4
   2e710:	beq	2e748 <error@@Base+0xbb08>
   2e714:	ldr	r3, [r3, r4]
   2e718:	movw	r1, #19392	; 0x4bc0
   2e71c:	mov	r0, #1
   2e720:	movt	r1, #3
   2e724:	cmp	r3, #0
   2e728:	movne	r3, #58	; 0x3a
   2e72c:	moveq	r3, #10
   2e730:	bl	11be0 <__printf_chk@plt>
   2e734:	ldr	r3, [r5, #16]
   2e738:	ldr	r2, [r3, r4]
   2e73c:	add	r4, r4, #4
   2e740:	cmp	r2, #0
   2e744:	bne	2e714 <error@@Base+0xbad4>
   2e748:	ldr	r5, [r5]
   2e74c:	cmp	r5, #0
   2e750:	bne	2e6e8 <error@@Base+0xbaa8>
   2e754:	ldr	r3, [r7]
   2e758:	cmp	r3, #0
   2e75c:	beq	2e7f4 <error@@Base+0xbbb4>
   2e760:	mov	r2, #5
   2e764:	mov	r0, r5
   2e768:	movw	r1, #19400	; 0x4bc8
   2e76c:	movt	r1, #3
   2e770:	bl	1191c <dcgettext@plt>
   2e774:	mov	r2, r6
   2e778:	mov	r1, r0
   2e77c:	mov	r0, #1
   2e780:	bl	11be0 <__printf_chk@plt>
   2e784:	ldr	r3, [r7, #4]
   2e788:	cmp	r3, #0
   2e78c:	beq	2e818 <error@@Base+0xbbd8>
   2e790:	mov	r2, #5
   2e794:	movw	r1, #19480	; 0x4c18
   2e798:	mov	r0, #0
   2e79c:	movt	r1, #3
   2e7a0:	ldr	r4, [r3, #16]
   2e7a4:	bl	1191c <dcgettext@plt>
   2e7a8:	movw	r3, #26888	; 0x6908
   2e7ac:	movt	r3, #4
   2e7b0:	ldr	r1, [r3]
   2e7b4:	bl	11ce8 <fputs@plt>
   2e7b8:	ldr	r2, [r4]
   2e7bc:	cmp	r2, #0
   2e7c0:	popeq	{r3, r4, r5, r6, r7, pc}
   2e7c4:	ldr	r3, [r4, #4]
   2e7c8:	movw	r1, #19392	; 0x4bc0
   2e7cc:	mov	r0, #1
   2e7d0:	movt	r1, #3
   2e7d4:	cmp	r3, #0
   2e7d8:	movne	r3, #58	; 0x3a
   2e7dc:	moveq	r3, #10
   2e7e0:	bl	11be0 <__printf_chk@plt>
   2e7e4:	ldr	r2, [r4, #4]!
   2e7e8:	cmp	r2, #0
   2e7ec:	bne	2e7c4 <error@@Base+0xbb84>
   2e7f0:	pop	{r3, r4, r5, r6, r7, pc}
   2e7f4:	mov	r2, #5
   2e7f8:	movw	r1, #19352	; 0x4b98
   2e7fc:	mov	r0, #0
   2e800:	movt	r1, #3
   2e804:	bl	1191c <dcgettext@plt>
   2e808:	bl	11a9c <puts@plt>
   2e80c:	ldr	r3, [r7, #4]
   2e810:	cmp	r3, #0
   2e814:	bne	2e790 <error@@Base+0xbb50>
   2e818:	mov	r0, r3
   2e81c:	movw	r1, #19432	; 0x4be8
   2e820:	mov	r2, #5
   2e824:	movt	r1, #3
   2e828:	bl	1191c <dcgettext@plt>
   2e82c:	pop	{r3, r4, r5, r6, r7, lr}
   2e830:	b	11a9c <puts@plt>
   2e834:	andeq	r0, r0, r0
   2e838:	orr	r1, r1, r1, lsr #1
   2e83c:	push	{r3, r4, r5, r6, r7, lr}
   2e840:	orr	r1, r1, r1, lsr #2
   2e844:	mov	r4, r0
   2e848:	mov	r0, #4
   2e84c:	orr	r1, r1, r1, lsr r0
   2e850:	mov	r7, r2
   2e854:	mov	r6, r3
   2e858:	orr	r1, r1, r1, lsr #8
   2e85c:	orr	r1, r1, r1, lsr #16
   2e860:	add	r5, r1, #1
   2e864:	str	r5, [r4, #4]
   2e868:	str	r5, [r4, #16]
   2e86c:	mov	r1, r5
   2e870:	bl	117fc <calloc@plt>
   2e874:	cmp	r0, #0
   2e878:	str	r0, [r4]
   2e87c:	beq	2e8b0 <error@@Base+0xbc70>
   2e880:	ldr	r3, [sp, #24]
   2e884:	mov	r2, #0
   2e888:	sub	r5, r5, r5, lsr #4
   2e88c:	str	r7, [r4, #32]
   2e890:	str	r5, [r4, #8]
   2e894:	str	r6, [r4, #36]	; 0x24
   2e898:	str	r3, [r4, #40]	; 0x28
   2e89c:	str	r2, [r4, #12]
   2e8a0:	str	r2, [r4, #20]
   2e8a4:	str	r2, [r4, #24]
   2e8a8:	str	r2, [r4, #28]
   2e8ac:	pop	{r3, r4, r5, r6, r7, pc}
   2e8b0:	movw	r3, #26876	; 0x68fc
   2e8b4:	movt	r3, #4
   2e8b8:	mov	r2, #5
   2e8bc:	movw	r1, #19528	; 0x4c48
   2e8c0:	movt	r1, #3
   2e8c4:	ldr	r5, [r3]
   2e8c8:	bl	1191c <dcgettext@plt>
   2e8cc:	ldr	r3, [r4, #4]
   2e8d0:	mov	r1, #1
   2e8d4:	lsl	r3, r3, #2
   2e8d8:	mov	r2, r0
   2e8dc:	mov	r0, r5
   2e8e0:	bl	11c10 <__fprintf_chk@plt>
   2e8e4:	mov	r0, #1
   2e8e8:	bl	11b44 <exit@plt>
   2e8ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2e8f0:	mov	r4, r0
   2e8f4:	ldr	r3, [r0, #32]
   2e8f8:	mov	r0, r1
   2e8fc:	mov	r7, r1
   2e900:	blx	r3
   2e904:	ldr	r5, [r4, #4]
   2e908:	ldr	r9, [r4]
   2e90c:	sub	r5, r5, #1
   2e910:	ldr	r3, [r4, #24]
   2e914:	add	r3, r3, #1
   2e918:	str	r3, [r4, #24]
   2e91c:	and	r5, r0, r5
   2e920:	ldr	r3, [r9, r5, lsl #2]
   2e924:	add	r9, r9, r5, lsl #2
   2e928:	cmp	r3, #0
   2e92c:	movne	r6, #0
   2e930:	movwne	sl, #26848	; 0x68e0
   2e934:	movne	r8, r6
   2e938:	movtne	sl, #4
   2e93c:	bne	2e964 <error@@Base+0xbd24>
   2e940:	b	2e9cc <error@@Base+0xbd8c>
   2e944:	ldm	r4, {r2, r3}
   2e948:	add	r5, r5, r6
   2e94c:	sub	r3, r3, #1
   2e950:	and	r5, r5, r3
   2e954:	ldr	r3, [r2, r5, lsl #2]
   2e958:	add	r9, r2, r5, lsl #2
   2e95c:	cmp	r3, #0
   2e960:	beq	2e9c4 <error@@Base+0xbd84>
   2e964:	ldr	ip, [sl]
   2e968:	mov	r1, r3
   2e96c:	mov	r0, r7
   2e970:	cmp	r3, ip
   2e974:	beq	2e9b8 <error@@Base+0xbd78>
   2e978:	cmp	r7, r3
   2e97c:	beq	2e9cc <error@@Base+0xbd8c>
   2e980:	ldr	r3, [r4, #40]	; 0x28
   2e984:	blx	r3
   2e988:	cmp	r0, #0
   2e98c:	beq	2e9cc <error@@Base+0xbd8c>
   2e990:	ldr	r3, [r4, #20]
   2e994:	add	r3, r3, #1
   2e998:	str	r3, [r4, #20]
   2e99c:	cmp	r6, #0
   2e9a0:	bne	2e944 <error@@Base+0xbd04>
   2e9a4:	ldr	r3, [r4, #36]	; 0x24
   2e9a8:	mov	r0, r7
   2e9ac:	blx	r3
   2e9b0:	orr	r6, r0, #1
   2e9b4:	b	2e944 <error@@Base+0xbd04>
   2e9b8:	cmp	r8, #0
   2e9bc:	moveq	r8, r9
   2e9c0:	b	2e99c <error@@Base+0xbd5c>
   2e9c4:	cmp	r8, #0
   2e9c8:	movne	r9, r8
   2e9cc:	mov	r0, r9
   2e9d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2e9d4:	push	{r3, lr}
   2e9d8:	bl	2e8ec <error@@Base+0xbcac>
   2e9dc:	ldr	r0, [r0]
   2e9e0:	cmp	r0, #0
   2e9e4:	popeq	{r3, pc}
   2e9e8:	movw	r3, #26848	; 0x68e0
   2e9ec:	movt	r3, #4
   2e9f0:	ldr	r3, [r3]
   2e9f4:	cmp	r0, r3
   2e9f8:	moveq	r0, #0
   2e9fc:	pop	{r3, pc}
   2ea00:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2ea04:	mov	r5, r0
   2ea08:	ldr	r0, [r2]
   2ea0c:	mov	r7, r1
   2ea10:	cmp	r0, #0
   2ea14:	beq	2eb00 <error@@Base+0xbec0>
   2ea18:	movw	r3, #26848	; 0x68e0
   2ea1c:	movt	r3, #4
   2ea20:	ldr	r3, [r3]
   2ea24:	cmp	r0, r3
   2ea28:	beq	2eb1c <error@@Base+0xbedc>
   2ea2c:	ldr	r1, [r5, #16]
   2ea30:	ldr	r6, [r5, #4]
   2ea34:	ldr	r3, [r5, #8]
   2ea38:	str	r7, [r2]
   2ea3c:	rsb	r0, r3, r6
   2ea40:	cmp	r0, r1
   2ea44:	bhi	2ea50 <error@@Base+0xbe10>
   2ea48:	mov	r0, r2
   2ea4c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2ea50:	ldr	r9, [r5, #12]
   2ea54:	mov	r0, #4
   2ea58:	ldr	r8, [r5]
   2ea5c:	cmp	r3, r9
   2ea60:	lslls	r4, r6, #1
   2ea64:	strls	r4, [r5, #4]
   2ea68:	movhi	r4, r6
   2ea6c:	add	r6, r8, r6, lsl #2
   2ea70:	subls	r3, r4, r4, lsr #4
   2ea74:	strls	r3, [r5, #8]
   2ea78:	ldr	r3, [r5, #28]
   2ea7c:	mov	r1, r4
   2ea80:	add	r3, r3, #1
   2ea84:	str	r3, [r5, #28]
   2ea88:	bl	117fc <calloc@plt>
   2ea8c:	cmp	r6, r8
   2ea90:	str	r0, [r5]
   2ea94:	bls	2eae0 <error@@Base+0xbea0>
   2ea98:	movw	r9, #26848	; 0x68e0
   2ea9c:	movt	r9, #4
   2eaa0:	mov	r4, r8
   2eaa4:	ldr	r3, [r4], #4
   2eaa8:	mov	r0, r5
   2eaac:	cmp	r3, #0
   2eab0:	mov	r1, r3
   2eab4:	beq	2ead0 <error@@Base+0xbe90>
   2eab8:	ldr	r2, [r9]
   2eabc:	cmp	r3, r2
   2eac0:	beq	2ead0 <error@@Base+0xbe90>
   2eac4:	bl	2e8ec <error@@Base+0xbcac>
   2eac8:	ldr	r3, [r4, #-4]
   2eacc:	str	r3, [r0]
   2ead0:	cmp	r6, r4
   2ead4:	bhi	2eaa4 <error@@Base+0xbe64>
   2ead8:	ldr	r4, [r5, #4]
   2eadc:	ldr	r9, [r5, #12]
   2eae0:	mov	r0, r8
   2eae4:	rsb	r4, r9, r4
   2eae8:	str	r4, [r5, #16]
   2eaec:	bl	1188c <free@plt>
   2eaf0:	mov	r0, r5
   2eaf4:	mov	r1, r7
   2eaf8:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   2eafc:	b	2e8ec <error@@Base+0xbcac>
   2eb00:	ldr	r3, [r5, #12]
   2eb04:	ldr	r1, [r5, #16]
   2eb08:	add	r3, r3, #1
   2eb0c:	str	r3, [r5, #12]
   2eb10:	sub	r1, r1, #1
   2eb14:	str	r1, [r5, #16]
   2eb18:	b	2ea30 <error@@Base+0xbdf0>
   2eb1c:	ldr	r3, [r5, #12]
   2eb20:	ldr	r1, [r5, #16]
   2eb24:	add	r3, r3, #1
   2eb28:	str	r3, [r5, #12]
   2eb2c:	b	2ea30 <error@@Base+0xbdf0>
   2eb30:	push	{r4, r5, r6, lr}
   2eb34:	mov	r5, r0
   2eb38:	mov	r6, r1
   2eb3c:	bl	2e8ec <error@@Base+0xbcac>
   2eb40:	mov	r1, r6
   2eb44:	ldr	r4, [r0]
   2eb48:	mov	r2, r0
   2eb4c:	mov	r0, r5
   2eb50:	bl	2ea00 <error@@Base+0xbdc0>
   2eb54:	cmp	r4, #0
   2eb58:	beq	2eb78 <error@@Base+0xbf38>
   2eb5c:	movw	r3, #26848	; 0x68e0
   2eb60:	movt	r3, #4
   2eb64:	ldr	r0, [r3]
   2eb68:	cmp	r4, r0
   2eb6c:	movne	r0, r4
   2eb70:	moveq	r0, #0
   2eb74:	pop	{r4, r5, r6, pc}
   2eb78:	mov	r0, r4
   2eb7c:	pop	{r4, r5, r6, pc}
   2eb80:	cmp	r2, #0
   2eb84:	push	{r3, r4, r5, r6, r7, lr}
   2eb88:	mov	r6, r0
   2eb8c:	mov	r4, r1
   2eb90:	mov	r7, r3
   2eb94:	popeq	{r3, r4, r5, r6, r7, pc}
   2eb98:	mov	r5, r2
   2eb9c:	mov	r1, r4
   2eba0:	mov	r0, r6
   2eba4:	bl	2eb30 <error@@Base+0xbef0>
   2eba8:	subs	r5, r5, #1
   2ebac:	add	r4, r4, r7
   2ebb0:	bne	2eb9c <error@@Base+0xbf5c>
   2ebb4:	pop	{r3, r4, r5, r6, r7, pc}
   2ebb8:	push	{r4, lr}
   2ebbc:	mov	r4, r0
   2ebc0:	bl	2e8ec <error@@Base+0xbcac>
   2ebc4:	ldr	r3, [r0]
   2ebc8:	mov	r1, r0
   2ebcc:	cmp	r3, #0
   2ebd0:	beq	2ec00 <error@@Base+0xbfc0>
   2ebd4:	movw	r2, #26848	; 0x68e0
   2ebd8:	movt	r2, #4
   2ebdc:	ldr	r2, [r2]
   2ebe0:	cmp	r3, r2
   2ebe4:	beq	2ec08 <error@@Base+0xbfc8>
   2ebe8:	ldr	ip, [r4, #12]
   2ebec:	mov	r0, r3
   2ebf0:	str	r2, [r1]
   2ebf4:	sub	r3, ip, #1
   2ebf8:	str	r3, [r4, #12]
   2ebfc:	pop	{r4, pc}
   2ec00:	mov	r0, r3
   2ec04:	pop	{r4, pc}
   2ec08:	mov	r0, #0
   2ec0c:	pop	{r4, pc}
   2ec10:	ldr	r3, [r1]
   2ec14:	cmp	r3, #0
   2ec18:	beq	2ec40 <error@@Base+0xc000>
   2ec1c:	movw	r2, #26848	; 0x68e0
   2ec20:	movt	r2, #4
   2ec24:	ldr	r2, [r2]
   2ec28:	cmp	r3, r2
   2ec2c:	ldrne	ip, [r0, #12]
   2ec30:	moveq	r3, #0
   2ec34:	strne	r2, [r1]
   2ec38:	subne	r2, ip, #1
   2ec3c:	strne	r2, [r0, #12]
   2ec40:	mov	r0, r3
   2ec44:	bx	lr
   2ec48:	ldr	r3, [r0, #4]
   2ec4c:	push	{r4, r5, r6, r7, r8, lr}
   2ec50:	mov	r8, r0
   2ec54:	ldr	r4, [r0]
   2ec58:	add	r5, r4, r3, lsl #2
   2ec5c:	cmp	r4, r5
   2ec60:	bcs	2eca0 <error@@Base+0xc060>
   2ec64:	movw	r6, #26848	; 0x68e0
   2ec68:	movt	r6, #4
   2ec6c:	mov	r7, #0
   2ec70:	ldr	r3, [r4], #4
   2ec74:	cmp	r3, #0
   2ec78:	mov	r0, r3
   2ec7c:	beq	2ec90 <error@@Base+0xc050>
   2ec80:	ldr	r2, [r6]
   2ec84:	cmp	r3, r2
   2ec88:	beq	2ec90 <error@@Base+0xc050>
   2ec8c:	bl	1188c <free@plt>
   2ec90:	cmp	r5, r4
   2ec94:	str	r7, [r4, #-4]
   2ec98:	bhi	2ec70 <error@@Base+0xc030>
   2ec9c:	ldr	r3, [r8, #4]
   2eca0:	str	r3, [r8, #16]
   2eca4:	mov	r3, #0
   2eca8:	str	r3, [r8, #12]
   2ecac:	pop	{r4, r5, r6, r7, r8, pc}
   2ecb0:	ldm	r0, {r3, ip}
   2ecb4:	add	r2, r3, ip, lsl #2
   2ecb8:	cmp	r3, r2
   2ecbc:	movcc	r1, #0
   2ecc0:	bcs	2ecd0 <error@@Base+0xc090>
   2ecc4:	str	r1, [r3], #4
   2ecc8:	cmp	r2, r3
   2eccc:	bhi	2ecc4 <error@@Base+0xc084>
   2ecd0:	mov	r3, #0
   2ecd4:	str	ip, [r0, #16]
   2ecd8:	str	r3, [r0, #12]
   2ecdc:	str	r3, [r0, #20]
   2ece0:	str	r3, [r0, #24]
   2ece4:	str	r3, [r0, #28]
   2ece8:	bx	lr
   2ecec:	cmp	r1, #0
   2ecf0:	push	{r4, lr}
   2ecf4:	mov	r4, r0
   2ecf8:	bne	2ed20 <error@@Base+0xc0e0>
   2ecfc:	ldr	r3, [r0, #4]
   2ed00:	str	r1, [r0, #12]
   2ed04:	str	r3, [r0, #16]
   2ed08:	ldr	r0, [r4]
   2ed0c:	bl	1188c <free@plt>
   2ed10:	mov	r3, #0
   2ed14:	str	r3, [r4]
   2ed18:	str	r3, [r4, #8]
   2ed1c:	pop	{r4, pc}
   2ed20:	bl	2ec48 <error@@Base+0xc008>
   2ed24:	b	2ed08 <error@@Base+0xc0c8>
   2ed28:	push	{r3, r4, r5, r6, r7, lr}
   2ed2c:	mov	r7, r1
   2ed30:	ldm	r0, {r4, r5}
   2ed34:	add	r5, r4, r5, lsl #2
   2ed38:	cmp	r4, r5
   2ed3c:	popcs	{r3, r4, r5, r6, r7, pc}
   2ed40:	movw	r6, #26848	; 0x68e0
   2ed44:	movt	r6, #4
   2ed48:	ldr	r3, [r4], #4
   2ed4c:	cmp	r3, #0
   2ed50:	mov	r0, r3
   2ed54:	beq	2ed68 <error@@Base+0xc128>
   2ed58:	ldr	r2, [r6]
   2ed5c:	cmp	r3, r2
   2ed60:	beq	2ed68 <error@@Base+0xc128>
   2ed64:	blx	r7
   2ed68:	cmp	r5, r4
   2ed6c:	bhi	2ed48 <error@@Base+0xc108>
   2ed70:	pop	{r3, r4, r5, r6, r7, pc}
   2ed74:	push	{r4, r5, r6, r7, r8, lr}
   2ed78:	mov	r8, r1
   2ed7c:	ldr	r5, [r0, #4]
   2ed80:	mov	r7, r2
   2ed84:	ldr	r4, [r0]
   2ed88:	add	r5, r4, r5, lsl #2
   2ed8c:	cmp	r4, r5
   2ed90:	popcs	{r4, r5, r6, r7, r8, pc}
   2ed94:	movw	r6, #26848	; 0x68e0
   2ed98:	movt	r6, #4
   2ed9c:	ldr	r3, [r4], #4
   2eda0:	mov	r1, r7
   2eda4:	cmp	r3, #0
   2eda8:	mov	r0, r3
   2edac:	beq	2edc0 <error@@Base+0xc180>
   2edb0:	ldr	ip, [r6]
   2edb4:	cmp	r3, ip
   2edb8:	beq	2edc0 <error@@Base+0xc180>
   2edbc:	blx	r8
   2edc0:	cmp	r5, r4
   2edc4:	bhi	2ed9c <error@@Base+0xc15c>
   2edc8:	pop	{r4, r5, r6, r7, r8, pc}
   2edcc:	push	{r4, r5, lr}
   2edd0:	vpush	{d8}
   2edd4:	mov	r4, r0
   2edd8:	vldr	d8, [pc, #216]	; 2eeb8 <error@@Base+0xc278>
   2eddc:	sub	sp, sp, #20
   2ede0:	mov	r5, r1
   2ede4:	mov	r2, #5
   2ede8:	movw	r1, #19588	; 0x4c84
   2edec:	mov	r0, #0
   2edf0:	movt	r1, #3
   2edf4:	bl	1191c <dcgettext@plt>
   2edf8:	vldr	s11, [r4, #12]
   2edfc:	vcvt.f64.u32	d6, s11
   2ee00:	ldr	ip, [r4, #4]
   2ee04:	vmov	r3, s11
   2ee08:	mov	r1, #1
   2ee0c:	vmov	s11, ip
   2ee10:	str	ip, [sp]
   2ee14:	vmul.f64	d6, d6, d8
   2ee18:	vcvt.f64.u32	d7, s11
   2ee1c:	vdiv.f64	d7, d6, d7
   2ee20:	mov	r2, r0
   2ee24:	mov	r0, r5
   2ee28:	vstr	d7, [sp, #8]
   2ee2c:	bl	11c10 <__fprintf_chk@plt>
   2ee30:	mov	r2, #5
   2ee34:	movw	r1, #19612	; 0x4c9c
   2ee38:	mov	r0, #0
   2ee3c:	movt	r1, #3
   2ee40:	bl	1191c <dcgettext@plt>
   2ee44:	ldr	r3, [r4, #28]
   2ee48:	mov	r1, #1
   2ee4c:	mov	r2, r0
   2ee50:	mov	r0, r5
   2ee54:	bl	11c10 <__fprintf_chk@plt>
   2ee58:	mov	r2, #5
   2ee5c:	movw	r1, #19624	; 0x4ca8
   2ee60:	mov	r0, #0
   2ee64:	movt	r1, #3
   2ee68:	bl	1191c <dcgettext@plt>
   2ee6c:	ldr	r1, [r4, #24]
   2ee70:	ldr	r3, [r4, #20]
   2ee74:	cmp	r1, #0
   2ee78:	vldreq	d8, [pc, #64]	; 2eec0 <error@@Base+0xc280>
   2ee7c:	str	r1, [sp]
   2ee80:	vmovne	s13, r3
   2ee84:	vmovne	s11, r1
   2ee88:	mov	r1, #1
   2ee8c:	vcvtne.f64.u32	d7, s13
   2ee90:	mov	r2, r0
   2ee94:	mov	r0, r5
   2ee98:	vmulne.f64	d8, d7, d8
   2ee9c:	vcvtne.f64.u32	d7, s11
   2eea0:	vdivne.f64	d8, d8, d7
   2eea4:	vstr	d8, [sp, #8]
   2eea8:	bl	11c10 <__fprintf_chk@plt>
   2eeac:	add	sp, sp, #20
   2eeb0:	vpop	{d8}
   2eeb4:	pop	{r4, r5, pc}
   2eeb8:	andeq	r0, r0, r0
   2eebc:	subsmi	r0, r9, r0
	...
   2eec8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2eecc:	subs	sl, r1, #0
   2eed0:	ldm	r0, {r4, r7}
   2eed4:	sub	sp, sp, #8
   2eed8:	mov	r9, r0
   2eedc:	add	r7, r4, r7, lsl #2
   2eee0:	beq	2ef54 <error@@Base+0xc314>
   2eee4:	cmp	r4, r7
   2eee8:	bcs	2ef4c <error@@Base+0xc30c>
   2eeec:	movw	r8, #26848	; 0x68e0
   2eef0:	movt	r8, #4
   2eef4:	mov	r5, sl
   2eef8:	ldr	ip, [r4], #4
   2eefc:	cmp	ip, #0
   2ef00:	beq	2ef14 <error@@Base+0xc2d4>
   2ef04:	ldr	r6, [r8]
   2ef08:	cmp	ip, r6
   2ef0c:	strne	ip, [r5]
   2ef10:	addne	r5, r5, #4
   2ef14:	cmp	r7, r4
   2ef18:	bhi	2eef8 <error@@Base+0xc2b8>
   2ef1c:	cmp	r2, #0
   2ef20:	mov	r3, #0
   2ef24:	str	r3, [r5]
   2ef28:	beq	2ef40 <error@@Base+0xc300>
   2ef2c:	mov	r3, r2
   2ef30:	ldr	r1, [r9, #12]
   2ef34:	mov	r0, sl
   2ef38:	mov	r2, #4
   2ef3c:	bl	11cc4 <qsort@plt>
   2ef40:	mov	r0, sl
   2ef44:	add	sp, sp, #8
   2ef48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ef4c:	mov	r5, sl
   2ef50:	b	2ef1c <error@@Base+0xc2dc>
   2ef54:	ldr	r0, [r0, #12]
   2ef58:	str	r2, [sp, #4]
   2ef5c:	add	r0, r0, #1
   2ef60:	lsl	r0, r0, #2
   2ef64:	bl	22f44 <error@@Base+0x304>
   2ef68:	ldr	r4, [r9]
   2ef6c:	ldr	r2, [sp, #4]
   2ef70:	mov	sl, r0
   2ef74:	b	2eee4 <error@@Base+0xc2a4>
   2ef78:	cmp	r1, #0
   2ef7c:	beq	2f188 <error@@Base+0xc548>
   2ef80:	eor	ip, r0, r1
   2ef84:	rsbmi	r1, r1, #0
   2ef88:	subs	r2, r1, #1
   2ef8c:	beq	2f154 <error@@Base+0xc514>
   2ef90:	movs	r3, r0
   2ef94:	rsbmi	r3, r0, #0
   2ef98:	cmp	r3, r1
   2ef9c:	bls	2f160 <error@@Base+0xc520>
   2efa0:	tst	r1, r2
   2efa4:	beq	2f170 <error@@Base+0xc530>
   2efa8:	clz	r2, r3
   2efac:	clz	r0, r1
   2efb0:	sub	r2, r0, r2
   2efb4:	rsbs	r2, r2, #31
   2efb8:	addne	r2, r2, r2, lsl #1
   2efbc:	mov	r0, #0
   2efc0:	addne	pc, pc, r2, lsl #2
   2efc4:	nop	{0}
   2efc8:	cmp	r3, r1, lsl #31
   2efcc:	adc	r0, r0, r0
   2efd0:	subcs	r3, r3, r1, lsl #31
   2efd4:	cmp	r3, r1, lsl #30
   2efd8:	adc	r0, r0, r0
   2efdc:	subcs	r3, r3, r1, lsl #30
   2efe0:	cmp	r3, r1, lsl #29
   2efe4:	adc	r0, r0, r0
   2efe8:	subcs	r3, r3, r1, lsl #29
   2efec:	cmp	r3, r1, lsl #28
   2eff0:	adc	r0, r0, r0
   2eff4:	subcs	r3, r3, r1, lsl #28
   2eff8:	cmp	r3, r1, lsl #27
   2effc:	adc	r0, r0, r0
   2f000:	subcs	r3, r3, r1, lsl #27
   2f004:	cmp	r3, r1, lsl #26
   2f008:	adc	r0, r0, r0
   2f00c:	subcs	r3, r3, r1, lsl #26
   2f010:	cmp	r3, r1, lsl #25
   2f014:	adc	r0, r0, r0
   2f018:	subcs	r3, r3, r1, lsl #25
   2f01c:	cmp	r3, r1, lsl #24
   2f020:	adc	r0, r0, r0
   2f024:	subcs	r3, r3, r1, lsl #24
   2f028:	cmp	r3, r1, lsl #23
   2f02c:	adc	r0, r0, r0
   2f030:	subcs	r3, r3, r1, lsl #23
   2f034:	cmp	r3, r1, lsl #22
   2f038:	adc	r0, r0, r0
   2f03c:	subcs	r3, r3, r1, lsl #22
   2f040:	cmp	r3, r1, lsl #21
   2f044:	adc	r0, r0, r0
   2f048:	subcs	r3, r3, r1, lsl #21
   2f04c:	cmp	r3, r1, lsl #20
   2f050:	adc	r0, r0, r0
   2f054:	subcs	r3, r3, r1, lsl #20
   2f058:	cmp	r3, r1, lsl #19
   2f05c:	adc	r0, r0, r0
   2f060:	subcs	r3, r3, r1, lsl #19
   2f064:	cmp	r3, r1, lsl #18
   2f068:	adc	r0, r0, r0
   2f06c:	subcs	r3, r3, r1, lsl #18
   2f070:	cmp	r3, r1, lsl #17
   2f074:	adc	r0, r0, r0
   2f078:	subcs	r3, r3, r1, lsl #17
   2f07c:	cmp	r3, r1, lsl #16
   2f080:	adc	r0, r0, r0
   2f084:	subcs	r3, r3, r1, lsl #16
   2f088:	cmp	r3, r1, lsl #15
   2f08c:	adc	r0, r0, r0
   2f090:	subcs	r3, r3, r1, lsl #15
   2f094:	cmp	r3, r1, lsl #14
   2f098:	adc	r0, r0, r0
   2f09c:	subcs	r3, r3, r1, lsl #14
   2f0a0:	cmp	r3, r1, lsl #13
   2f0a4:	adc	r0, r0, r0
   2f0a8:	subcs	r3, r3, r1, lsl #13
   2f0ac:	cmp	r3, r1, lsl #12
   2f0b0:	adc	r0, r0, r0
   2f0b4:	subcs	r3, r3, r1, lsl #12
   2f0b8:	cmp	r3, r1, lsl #11
   2f0bc:	adc	r0, r0, r0
   2f0c0:	subcs	r3, r3, r1, lsl #11
   2f0c4:	cmp	r3, r1, lsl #10
   2f0c8:	adc	r0, r0, r0
   2f0cc:	subcs	r3, r3, r1, lsl #10
   2f0d0:	cmp	r3, r1, lsl #9
   2f0d4:	adc	r0, r0, r0
   2f0d8:	subcs	r3, r3, r1, lsl #9
   2f0dc:	cmp	r3, r1, lsl #8
   2f0e0:	adc	r0, r0, r0
   2f0e4:	subcs	r3, r3, r1, lsl #8
   2f0e8:	cmp	r3, r1, lsl #7
   2f0ec:	adc	r0, r0, r0
   2f0f0:	subcs	r3, r3, r1, lsl #7
   2f0f4:	cmp	r3, r1, lsl #6
   2f0f8:	adc	r0, r0, r0
   2f0fc:	subcs	r3, r3, r1, lsl #6
   2f100:	cmp	r3, r1, lsl #5
   2f104:	adc	r0, r0, r0
   2f108:	subcs	r3, r3, r1, lsl #5
   2f10c:	cmp	r3, r1, lsl #4
   2f110:	adc	r0, r0, r0
   2f114:	subcs	r3, r3, r1, lsl #4
   2f118:	cmp	r3, r1, lsl #3
   2f11c:	adc	r0, r0, r0
   2f120:	subcs	r3, r3, r1, lsl #3
   2f124:	cmp	r3, r1, lsl #2
   2f128:	adc	r0, r0, r0
   2f12c:	subcs	r3, r3, r1, lsl #2
   2f130:	cmp	r3, r1, lsl #1
   2f134:	adc	r0, r0, r0
   2f138:	subcs	r3, r3, r1, lsl #1
   2f13c:	cmp	r3, r1
   2f140:	adc	r0, r0, r0
   2f144:	subcs	r3, r3, r1
   2f148:	cmp	ip, #0
   2f14c:	rsbmi	r0, r0, #0
   2f150:	bx	lr
   2f154:	teq	ip, r0
   2f158:	rsbmi	r0, r0, #0
   2f15c:	bx	lr
   2f160:	movcc	r0, #0
   2f164:	asreq	r0, ip, #31
   2f168:	orreq	r0, r0, #1
   2f16c:	bx	lr
   2f170:	clz	r2, r1
   2f174:	rsb	r2, r2, #31
   2f178:	cmp	ip, #0
   2f17c:	lsr	r0, r3, r2
   2f180:	rsbmi	r0, r0, #0
   2f184:	bx	lr
   2f188:	cmp	r0, #0
   2f18c:	mvngt	r0, #-2147483648	; 0x80000000
   2f190:	movlt	r0, #-2147483648	; 0x80000000
   2f194:	b	2f570 <error@@Base+0xc930>
   2f198:	cmp	r1, #0
   2f19c:	beq	2f188 <error@@Base+0xc548>
   2f1a0:	push	{r0, r1, lr}
   2f1a4:	bl	2ef80 <error@@Base+0xc340>
   2f1a8:	pop	{r1, r2, lr}
   2f1ac:	mul	r3, r2, r0
   2f1b0:	sub	r1, r1, r3
   2f1b4:	bx	lr
   2f1b8:	eor	r1, r1, #-2147483648	; 0x80000000
   2f1bc:	b	2f1c4 <error@@Base+0xc584>
   2f1c0:	eor	r3, r3, #-2147483648	; 0x80000000
   2f1c4:	push	{r4, r5, lr}
   2f1c8:	lsl	r4, r1, #1
   2f1cc:	lsl	r5, r3, #1
   2f1d0:	teq	r4, r5
   2f1d4:	teqeq	r0, r2
   2f1d8:	orrsne	ip, r4, r0
   2f1dc:	orrsne	ip, r5, r2
   2f1e0:	mvnsne	ip, r4, asr #21
   2f1e4:	mvnsne	ip, r5, asr #21
   2f1e8:	beq	2f3d4 <error@@Base+0xc794>
   2f1ec:	lsr	r4, r4, #21
   2f1f0:	rsbs	r5, r4, r5, lsr #21
   2f1f4:	rsblt	r5, r5, #0
   2f1f8:	ble	2f218 <error@@Base+0xc5d8>
   2f1fc:	add	r4, r4, r5
   2f200:	eor	r2, r0, r2
   2f204:	eor	r3, r1, r3
   2f208:	eor	r0, r2, r0
   2f20c:	eor	r1, r3, r1
   2f210:	eor	r2, r0, r2
   2f214:	eor	r3, r1, r3
   2f218:	cmp	r5, #54	; 0x36
   2f21c:	pophi	{r4, r5, pc}
   2f220:	tst	r1, #-2147483648	; 0x80000000
   2f224:	lsl	r1, r1, #12
   2f228:	mov	ip, #1048576	; 0x100000
   2f22c:	orr	r1, ip, r1, lsr #12
   2f230:	beq	2f23c <error@@Base+0xc5fc>
   2f234:	rsbs	r0, r0, #0
   2f238:	rsc	r1, r1, #0
   2f23c:	tst	r3, #-2147483648	; 0x80000000
   2f240:	lsl	r3, r3, #12
   2f244:	orr	r3, ip, r3, lsr #12
   2f248:	beq	2f254 <error@@Base+0xc614>
   2f24c:	rsbs	r2, r2, #0
   2f250:	rsc	r3, r3, #0
   2f254:	teq	r4, r5
   2f258:	beq	2f3bc <error@@Base+0xc77c>
   2f25c:	sub	r4, r4, #1
   2f260:	rsbs	lr, r5, #32
   2f264:	blt	2f280 <error@@Base+0xc640>
   2f268:	lsl	ip, r2, lr
   2f26c:	adds	r0, r0, r2, lsr r5
   2f270:	adc	r1, r1, #0
   2f274:	adds	r0, r0, r3, lsl lr
   2f278:	adcs	r1, r1, r3, asr r5
   2f27c:	b	2f29c <error@@Base+0xc65c>
   2f280:	sub	r5, r5, #32
   2f284:	add	lr, lr, #32
   2f288:	cmp	r2, #1
   2f28c:	lsl	ip, r3, lr
   2f290:	orrcs	ip, ip, #2
   2f294:	adds	r0, r0, r3, asr r5
   2f298:	adcs	r1, r1, r3, asr #31
   2f29c:	and	r5, r1, #-2147483648	; 0x80000000
   2f2a0:	bpl	2f2b0 <error@@Base+0xc670>
   2f2a4:	rsbs	ip, ip, #0
   2f2a8:	rscs	r0, r0, #0
   2f2ac:	rsc	r1, r1, #0
   2f2b0:	cmp	r1, #1048576	; 0x100000
   2f2b4:	bcc	2f2f4 <error@@Base+0xc6b4>
   2f2b8:	cmp	r1, #2097152	; 0x200000
   2f2bc:	bcc	2f2dc <error@@Base+0xc69c>
   2f2c0:	lsrs	r1, r1, #1
   2f2c4:	rrxs	r0, r0
   2f2c8:	rrx	ip, ip
   2f2cc:	add	r4, r4, #1
   2f2d0:	lsl	r2, r4, #21
   2f2d4:	cmn	r2, #4194304	; 0x400000
   2f2d8:	bcs	2f434 <error@@Base+0xc7f4>
   2f2dc:	cmp	ip, #-2147483648	; 0x80000000
   2f2e0:	lsrseq	ip, r0, #1
   2f2e4:	adcs	r0, r0, #0
   2f2e8:	adc	r1, r1, r4, lsl #20
   2f2ec:	orr	r1, r1, r5
   2f2f0:	pop	{r4, r5, pc}
   2f2f4:	lsls	ip, ip, #1
   2f2f8:	adcs	r0, r0, r0
   2f2fc:	adc	r1, r1, r1
   2f300:	tst	r1, #1048576	; 0x100000
   2f304:	sub	r4, r4, #1
   2f308:	bne	2f2dc <error@@Base+0xc69c>
   2f30c:	teq	r1, #0
   2f310:	moveq	r1, r0
   2f314:	moveq	r0, #0
   2f318:	clz	r3, r1
   2f31c:	addeq	r3, r3, #32
   2f320:	sub	r3, r3, #11
   2f324:	subs	r2, r3, #32
   2f328:	bge	2f34c <error@@Base+0xc70c>
   2f32c:	adds	r2, r2, #12
   2f330:	ble	2f348 <error@@Base+0xc708>
   2f334:	add	ip, r2, #20
   2f338:	rsb	r2, r2, #12
   2f33c:	lsl	r0, r1, ip
   2f340:	lsr	r1, r1, r2
   2f344:	b	2f35c <error@@Base+0xc71c>
   2f348:	add	r2, r2, #20
   2f34c:	rsble	ip, r2, #32
   2f350:	lsl	r1, r1, r2
   2f354:	orrle	r1, r1, r0, lsr ip
   2f358:	lslle	r0, r0, r2
   2f35c:	subs	r4, r4, r3
   2f360:	addge	r1, r1, r4, lsl #20
   2f364:	orrge	r1, r1, r5
   2f368:	popge	{r4, r5, pc}
   2f36c:	mvn	r4, r4
   2f370:	subs	r4, r4, #31
   2f374:	bge	2f3b0 <error@@Base+0xc770>
   2f378:	adds	r4, r4, #12
   2f37c:	bgt	2f398 <error@@Base+0xc758>
   2f380:	add	r4, r4, #20
   2f384:	rsb	r2, r4, #32
   2f388:	lsr	r0, r0, r4
   2f38c:	orr	r0, r0, r1, lsl r2
   2f390:	orr	r1, r5, r1, lsr r4
   2f394:	pop	{r4, r5, pc}
   2f398:	rsb	r4, r4, #12
   2f39c:	rsb	r2, r4, #32
   2f3a0:	lsr	r0, r0, r2
   2f3a4:	orr	r0, r0, r1, lsl r4
   2f3a8:	mov	r1, r5
   2f3ac:	pop	{r4, r5, pc}
   2f3b0:	lsr	r0, r1, r4
   2f3b4:	mov	r1, r5
   2f3b8:	pop	{r4, r5, pc}
   2f3bc:	teq	r4, #0
   2f3c0:	eor	r3, r3, #1048576	; 0x100000
   2f3c4:	eoreq	r1, r1, #1048576	; 0x100000
   2f3c8:	addeq	r4, r4, #1
   2f3cc:	subne	r5, r5, #1
   2f3d0:	b	2f25c <error@@Base+0xc61c>
   2f3d4:	mvns	ip, r4, asr #21
   2f3d8:	mvnsne	ip, r5, asr #21
   2f3dc:	beq	2f444 <error@@Base+0xc804>
   2f3e0:	teq	r4, r5
   2f3e4:	teqeq	r0, r2
   2f3e8:	beq	2f3fc <error@@Base+0xc7bc>
   2f3ec:	orrs	ip, r4, r0
   2f3f0:	moveq	r1, r3
   2f3f4:	moveq	r0, r2
   2f3f8:	pop	{r4, r5, pc}
   2f3fc:	teq	r1, r3
   2f400:	movne	r1, #0
   2f404:	movne	r0, #0
   2f408:	popne	{r4, r5, pc}
   2f40c:	lsrs	ip, r4, #21
   2f410:	bne	2f424 <error@@Base+0xc7e4>
   2f414:	lsls	r0, r0, #1
   2f418:	adcs	r1, r1, r1
   2f41c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   2f420:	pop	{r4, r5, pc}
   2f424:	adds	r4, r4, #4194304	; 0x400000
   2f428:	addcc	r1, r1, #1048576	; 0x100000
   2f42c:	popcc	{r4, r5, pc}
   2f430:	and	r5, r1, #-2147483648	; 0x80000000
   2f434:	orr	r1, r5, #2130706432	; 0x7f000000
   2f438:	orr	r1, r1, #15728640	; 0xf00000
   2f43c:	mov	r0, #0
   2f440:	pop	{r4, r5, pc}
   2f444:	mvns	ip, r4, asr #21
   2f448:	movne	r1, r3
   2f44c:	movne	r0, r2
   2f450:	mvnseq	ip, r5, asr #21
   2f454:	movne	r3, r1
   2f458:	movne	r2, r0
   2f45c:	orrs	r4, r0, r1, lsl #12
   2f460:	orrseq	r5, r2, r3, lsl #12
   2f464:	teqeq	r1, r3
   2f468:	orrne	r1, r1, #524288	; 0x80000
   2f46c:	pop	{r4, r5, pc}
   2f470:	teq	r0, #0
   2f474:	moveq	r1, #0
   2f478:	bxeq	lr
   2f47c:	push	{r4, r5, lr}
   2f480:	mov	r4, #1024	; 0x400
   2f484:	add	r4, r4, #50	; 0x32
   2f488:	mov	r5, #0
   2f48c:	mov	r1, #0
   2f490:	b	2f30c <error@@Base+0xc6cc>
   2f494:	teq	r0, #0
   2f498:	moveq	r1, #0
   2f49c:	bxeq	lr
   2f4a0:	push	{r4, r5, lr}
   2f4a4:	mov	r4, #1024	; 0x400
   2f4a8:	add	r4, r4, #50	; 0x32
   2f4ac:	ands	r5, r0, #-2147483648	; 0x80000000
   2f4b0:	rsbmi	r0, r0, #0
   2f4b4:	mov	r1, #0
   2f4b8:	b	2f30c <error@@Base+0xc6cc>
   2f4bc:	lsls	r2, r0, #1
   2f4c0:	asr	r1, r2, #3
   2f4c4:	rrx	r1, r1
   2f4c8:	lsl	r0, r2, #28
   2f4cc:	andsne	r3, r2, #-16777216	; 0xff000000
   2f4d0:	teqne	r3, #-16777216	; 0xff000000
   2f4d4:	eorne	r1, r1, #939524096	; 0x38000000
   2f4d8:	bxne	lr
   2f4dc:	teq	r2, #0
   2f4e0:	teqne	r3, #-16777216	; 0xff000000
   2f4e4:	bxeq	lr
   2f4e8:	push	{r4, r5, lr}
   2f4ec:	mov	r4, #896	; 0x380
   2f4f0:	and	r5, r1, #-2147483648	; 0x80000000
   2f4f4:	bic	r1, r1, #-2147483648	; 0x80000000
   2f4f8:	b	2f30c <error@@Base+0xc6cc>
   2f4fc:	orrs	r2, r0, r1
   2f500:	bxeq	lr
   2f504:	push	{r4, r5, lr}
   2f508:	mov	r5, #0
   2f50c:	b	2f52c <error@@Base+0xc8ec>
   2f510:	orrs	r2, r0, r1
   2f514:	bxeq	lr
   2f518:	push	{r4, r5, lr}
   2f51c:	ands	r5, r1, #-2147483648	; 0x80000000
   2f520:	bpl	2f52c <error@@Base+0xc8ec>
   2f524:	rsbs	r0, r0, #0
   2f528:	rsc	r1, r1, #0
   2f52c:	mov	r4, #1024	; 0x400
   2f530:	add	r4, r4, #50	; 0x32
   2f534:	lsrs	ip, r1, #22
   2f538:	beq	2f2b0 <error@@Base+0xc670>
   2f53c:	mov	r2, #3
   2f540:	lsrs	ip, ip, #3
   2f544:	addne	r2, r2, #3
   2f548:	lsrs	ip, ip, #3
   2f54c:	addne	r2, r2, #3
   2f550:	add	r2, r2, ip, lsr #3
   2f554:	rsb	r3, r2, #32
   2f558:	lsl	ip, r0, r3
   2f55c:	lsr	r0, r0, r2
   2f560:	orr	r0, r0, r1, lsl r3
   2f564:	lsr	r1, r1, r2
   2f568:	add	r4, r4, r2
   2f56c:	b	2f2b0 <error@@Base+0xc670>
   2f570:	push	{r1, lr}
   2f574:	mov	r0, #8
   2f578:	bl	11814 <raise@plt>
   2f57c:	pop	{r1, pc}
   2f580:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   2f584:	mov	r7, r0
   2f588:	ldr	r6, [pc, #76]	; 2f5dc <error@@Base+0xc99c>
   2f58c:	mov	r8, r1
   2f590:	ldr	r5, [pc, #72]	; 2f5e0 <error@@Base+0xc9a0>
   2f594:	mov	r9, r2
   2f598:	add	r6, pc, r6
   2f59c:	bl	117d0 <fdopen@plt-0x20>
   2f5a0:	add	r5, pc, r5
   2f5a4:	rsb	r6, r5, r6
   2f5a8:	asrs	r6, r6, #2
   2f5ac:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   2f5b0:	sub	r5, r5, #4
   2f5b4:	mov	r4, #0
   2f5b8:	add	r4, r4, #1
   2f5bc:	ldr	r3, [r5, #4]!
   2f5c0:	mov	r0, r7
   2f5c4:	mov	r1, r8
   2f5c8:	mov	r2, r9
   2f5cc:	blx	r3
   2f5d0:	cmp	r4, r6
   2f5d4:	bne	2f5b8 <error@@Base+0xc978>
   2f5d8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   2f5dc:	andeq	r6, r1, r0, ror #18
   2f5e0:	andeq	r6, r1, r4, asr r9
   2f5e4:	bx	lr
   2f5e8:	ldr	r3, [pc, #28]	; 2f60c <error@@Base+0xc9cc>
   2f5ec:	mov	r1, #0
   2f5f0:	ldr	r2, [pc, #24]	; 2f610 <error@@Base+0xc9d0>
   2f5f4:	add	r3, pc, r3
   2f5f8:	ldr	r3, [r3, r2]
   2f5fc:	cmp	r3, #0
   2f600:	ldrne	r2, [r3]
   2f604:	moveq	r2, r3
   2f608:	b	11ba4 <__cxa_atexit@plt>
   2f60c:	andeq	r6, r1, r4, lsl #20
   2f610:	ldrdeq	r0, [r0], -r4
   2f614:	mov	r2, r1
   2f618:	mov	r1, r0
   2f61c:	mov	r0, #3
   2f620:	b	11cdc <__xstat64@plt>

Disassembly of section .fini:

0002f624 <.fini>:
   2f624:	push	{r3, lr}
   2f628:	pop	{r3, pc}
