
centos-preinstalled/unshare:     file format elf32-littlearm


Disassembly of section .init:

00010c10 <.init>:
   10c10:	push	{r3, lr}
   10c14:	bl	1144c <mount@plt+0x60c>
   10c18:	pop	{r3, pc}

Disassembly of section .plt:

00010c1c <strcmp@plt-0x14>:
   10c1c:	push	{lr}		; (str lr, [sp, #-4]!)
   10c20:	ldr	lr, [pc, #4]	; 10c2c <strcmp@plt-0x4>
   10c24:	add	lr, pc, lr
   10c28:	ldr	pc, [lr, #8]!
   10c2c:	ldrdeq	r2, [r1], -r4

00010c30 <strcmp@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #73728	; 0x12000
   10c38:	ldr	pc, [ip, #980]!	; 0x3d4

00010c3c <basename@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #73728	; 0x12000
   10c44:	ldr	pc, [ip, #972]!	; 0x3cc

00010c48 <free@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #964]!	; 0x3c4

00010c54 <unshare@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #956]!	; 0x3bc

00010c60 <ferror@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #948]!	; 0x3b4

00010c6c <_exit@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #940]!	; 0x3ac

00010c78 <execvp@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #932]!	; 0x3a4

00010c84 <dcgettext@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #924]!	; 0x39c

00010c90 <__stack_chk_fail@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #916]!	; 0x394

00010c9c <textdomain@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #908]!	; 0x38c

00010ca8 <err@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #900]!	; 0x384

00010cb4 <geteuid@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #892]!	; 0x37c

00010cc0 <getegid@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #884]!	; 0x374

00010ccc <usleep@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #876]!	; 0x36c

00010cd8 <waitpid@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #868]!	; 0x364

00010ce4 <strcpy@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #860]!	; 0x35c

00010cf0 <__fpending@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #852]!	; 0x354

00010cfc <open64@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #844]!	; 0x34c

00010d08 <getenv@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #836]!	; 0x344

00010d14 <malloc@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #828]!	; 0x33c

00010d20 <__libc_start_main@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #820]!	; 0x334

00010d2c <__gmon_start__@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #812]!	; 0x32c

00010d38 <getopt_long@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #804]!	; 0x324

00010d44 <kill@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #796]!	; 0x31c

00010d50 <getpid@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #788]!	; 0x314

00010d5c <exit@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #780]!	; 0x30c

00010d68 <strlen@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #772]!	; 0x304

00010d74 <warnx@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #764]!	; 0x2fc

00010d80 <__errno_location@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #73728	; 0x12000
   10d88:	ldr	pc, [ip, #756]!	; 0x2f4

00010d8c <__cxa_atexit@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #73728	; 0x12000
   10d94:	ldr	pc, [ip, #748]!	; 0x2ec

00010d98 <__vasprintf_chk@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #73728	; 0x12000
   10da0:	ldr	pc, [ip, #740]!	; 0x2e4

00010da4 <__printf_chk@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #73728	; 0x12000
   10dac:	ldr	pc, [ip, #732]!	; 0x2dc

00010db0 <write@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #73728	; 0x12000
   10db8:	ldr	pc, [ip, #724]!	; 0x2d4

00010dbc <__fprintf_chk@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #716]!	; 0x2cc

00010dc8 <fclose@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #708]!	; 0x2c4

00010dd4 <setlocale@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #700]!	; 0x2bc

00010de0 <fork@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #73728	; 0x12000
   10de8:	ldr	pc, [ip, #692]!	; 0x2b4

00010dec <errx@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #73728	; 0x12000
   10df4:	ldr	pc, [ip, #684]!	; 0x2ac

00010df8 <execl@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #73728	; 0x12000
   10e00:	ldr	pc, [ip, #676]!	; 0x2a4

00010e04 <warn@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #73728	; 0x12000
   10e0c:	ldr	pc, [ip, #668]!	; 0x29c

00010e10 <bindtextdomain@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #73728	; 0x12000
   10e18:	ldr	pc, [ip, #660]!	; 0x294

00010e1c <fputs@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #73728	; 0x12000
   10e24:	ldr	pc, [ip, #652]!	; 0x28c

00010e28 <abort@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #73728	; 0x12000
   10e30:	ldr	pc, [ip, #644]!	; 0x284

00010e34 <close@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #73728	; 0x12000
   10e3c:	ldr	pc, [ip, #636]!	; 0x27c

00010e40 <mount@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #73728	; 0x12000
   10e48:	ldr	pc, [ip, #628]!	; 0x274

Disassembly of section .text:

00010e4c <.text>:
   10e4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e50:	movw	r7, #12504	; 0x30d8
   10e54:	movt	r7, #2
   10e58:	sub	sp, sp, #52	; 0x34
   10e5c:	mov	r8, r1
   10e60:	mov	r5, #0
   10e64:	ldr	r3, [r7]
   10e68:	mov	r9, r0
   10e6c:	str	r5, [sp, #20]
   10e70:	movw	sl, #12528	; 0x30f0
   10e74:	str	r5, [sp, #16]
   10e78:	movt	sl, #2
   10e7c:	str	r3, [sp, #44]	; 0x2c
   10e80:	bl	10cb4 <geteuid@plt>
   10e84:	ldr	fp, [pc, #1404]	; 11408 <mount@plt+0x5c8>
   10e88:	mov	r6, r5
   10e8c:	str	r0, [sp, #28]
   10e90:	bl	10cc0 <getegid@plt>
   10e94:	movw	r1, #7892	; 0x1ed4
   10e98:	movt	r1, #1
   10e9c:	str	r0, [sp, #32]
   10ea0:	mov	r0, #6
   10ea4:	bl	10dd4 <setlocale@plt>
   10ea8:	movw	r0, #8776	; 0x2248
   10eac:	movw	r1, #8788	; 0x2254
   10eb0:	movt	r0, #1
   10eb4:	movt	r1, #1
   10eb8:	bl	10e10 <bindtextdomain@plt>
   10ebc:	movw	r0, #8776	; 0x2248
   10ec0:	movt	r0, #1
   10ec4:	bl	10c9c <textdomain@plt>
   10ec8:	movw	r0, #6700	; 0x1a2c
   10ecc:	movt	r0, #1
   10ed0:	bl	11c94 <mount@plt+0xe54>
   10ed4:	mov	r3, #278528	; 0x44000
   10ed8:	str	r3, [sp, #12]
   10edc:	mvn	r3, #0
   10ee0:	str	r3, [sp, #24]
   10ee4:	mov	r4, #0
   10ee8:	movw	r2, #8932	; 0x22e4
   10eec:	str	r4, [sp]
   10ef0:	movt	r2, #1
   10ef4:	mov	r0, r9
   10ef8:	mov	r1, r8
   10efc:	ldr	r3, [pc, #1288]	; 1140c <mount@plt+0x5cc>
   10f00:	bl	10d38 <getopt_long@plt>
   10f04:	cmn	r0, #1
   10f08:	beq	11154 <mount@plt+0x314>
   10f0c:	sub	r0, r0, #85	; 0x55
   10f10:	cmp	r0, #45	; 0x2d
   10f14:	ldrls	pc, [pc, r0, lsl #2]
   10f18:	b	1114c <mount@plt+0x30c>
   10f1c:	andeq	r1, r1, r4, asr #2
   10f20:	andeq	r0, r1, r0, ror #31
   10f24:	andeq	r1, r1, ip, asr #2
   10f28:	andeq	r1, r1, ip, asr #2
   10f2c:	andeq	r1, r1, ip, asr #2
   10f30:	andeq	r1, r1, ip, asr #2
   10f34:	andeq	r1, r1, ip, asr #2
   10f38:	andeq	r1, r1, ip, asr #2
   10f3c:	andeq	r1, r1, ip, asr #2
   10f40:	andeq	r1, r1, ip, asr #2
   10f44:	andeq	r1, r1, ip, asr #2
   10f48:	andeq	r1, r1, ip, asr #2
   10f4c:	andeq	r1, r1, ip, asr #2
   10f50:	andeq	r1, r1, ip, asr #2
   10f54:	andeq	r1, r1, ip, asr #2
   10f58:	andeq	r1, r1, ip, asr #2
   10f5c:	andeq	r1, r1, ip, asr #2
   10f60:	ldrdeq	r0, [r1], -r4
   10f64:	andeq	r1, r1, ip, asr #2
   10f68:	andeq	r1, r1, r0, lsr r0
   10f6c:	andeq	r1, r1, r8, lsr r0
   10f70:	andeq	r1, r1, ip, asr #2
   10f74:	andeq	r1, r1, ip, asr #2
   10f78:	andeq	r1, r1, ip, asr #2
   10f7c:	andeq	r1, r1, r0, asr #32
   10f80:	andeq	r1, r1, r8, asr #32
   10f84:	andeq	r1, r1, ip, asr #2
   10f88:	andeq	r1, r1, r0, asr r0
   10f8c:	andeq	r1, r1, ip, asr #2
   10f90:	andeq	r1, r1, r8, asr r0
   10f94:	andeq	r1, r1, ip, asr #2
   10f98:	andeq	r1, r1, ip, asr #2
   10f9c:	andeq	r1, r1, r8, rrx
   10fa0:	andeq	r1, r1, ip, asr #2
   10fa4:	andeq	r1, r1, ip, asr #2
   10fa8:	andeq	r1, r1, ip, asr #2
   10fac:	andeq	r1, r1, ip, asr #2
   10fb0:	andeq	r1, r1, ip, asr #2
   10fb4:	andeq	r1, r1, ip, asr #2
   10fb8:	andeq	r1, r1, ip, asr #2
   10fbc:	andeq	r1, r1, ip, asr #2
   10fc0:	andeq	r1, r1, ip, asr #2
   10fc4:	andeq	r1, r1, ip, asr #2
   10fc8:	andeq	r1, r1, r0, ror r0
   10fcc:	andeq	r1, r1, ip, lsl #1
   10fd0:	andeq	r1, r1, ip, ror #1
   10fd4:	mov	r3, #1
   10fd8:	str	r3, [sp, #16]
   10fdc:	b	10ee4 <mount@plt+0xa4>
   10fe0:	mov	r2, #5
   10fe4:	movw	r1, #8808	; 0x2268
   10fe8:	mov	r0, #0
   10fec:	movt	r1, #1
   10ff0:	bl	10c84 <dcgettext@plt>
   10ff4:	movw	r2, #12496	; 0x30d0
   10ff8:	movt	r2, #2
   10ffc:	movw	r3, #8820	; 0x2274
   11000:	movt	r3, #1
   11004:	ldr	r2, [r2]
   11008:	mov	r1, r0
   1100c:	mov	r0, #1
   11010:	bl	10da4 <__printf_chk@plt>
   11014:	mov	r0, #0
   11018:	ldr	r2, [sp, #44]	; 0x2c
   1101c:	ldr	r3, [r7]
   11020:	cmp	r2, r3
   11024:	bne	11340 <mount@plt+0x500>
   11028:	add	sp, sp, #52	; 0x34
   1102c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11030:	mov	r0, #0
   11034:	bl	11544 <mount@plt+0x704>
   11038:	orr	r6, r6, #134217728	; 0x8000000
   1103c:	b	10ee4 <mount@plt+0xa4>
   11040:	orr	r6, r6, #131072	; 0x20000
   11044:	b	10ee4 <mount@plt+0xa4>
   11048:	orr	r6, r6, #1073741824	; 0x40000000
   1104c:	b	10ee4 <mount@plt+0xa4>
   11050:	orr	r6, r6, #536870912	; 0x20000000
   11054:	b	10ee4 <mount@plt+0xa4>
   11058:	mov	r3, #1
   1105c:	orr	r6, r6, #268435456	; 0x10000000
   11060:	str	r3, [sp, #20]
   11064:	b	10ee4 <mount@plt+0xa4>
   11068:	orr	r6, r6, #67108864	; 0x4000000
   1106c:	b	10ee4 <mount@plt+0xa4>
   11070:	ldr	r5, [sl]
   11074:	movw	r3, #8768	; 0x2240
   11078:	movt	r3, #1
   1107c:	orr	r6, r6, #131072	; 0x20000
   11080:	cmp	r5, #0
   11084:	moveq	r5, r3
   11088:	b	10ee4 <mount@plt+0xa4>
   1108c:	ldr	r3, [sl]
   11090:	mov	r4, #0
   11094:	str	r5, [sp, #36]	; 0x24
   11098:	mov	r5, r4
   1109c:	mov	r4, r3
   110a0:	str	r3, [sp, #12]
   110a4:	ldr	r0, [fp, r5, lsl #3]
   110a8:	mov	r1, r4
   110ac:	bl	10c30 <strcmp@plt>
   110b0:	lsl	r2, r5, #3
   110b4:	cmp	r0, #0
   110b8:	beq	112ac <mount@plt+0x46c>
   110bc:	add	r5, r5, #1
   110c0:	cmp	r5, #4
   110c4:	bne	110a4 <mount@plt+0x264>
   110c8:	mov	r2, #5
   110cc:	movw	r1, #8896	; 0x22c0
   110d0:	mov	r0, #0
   110d4:	movt	r1, #1
   110d8:	bl	10c84 <dcgettext@plt>
   110dc:	ldr	r2, [sp, #12]
   110e0:	mov	r1, r0
   110e4:	mov	r0, #1
   110e8:	bl	10dec <errx@plt>
   110ec:	ldr	r4, [sl]
   110f0:	movw	r1, #8840	; 0x2288
   110f4:	movt	r1, #1
   110f8:	mov	r0, r4
   110fc:	bl	10c30 <strcmp@plt>
   11100:	cmp	r0, #0
   11104:	beq	112d0 <mount@plt+0x490>
   11108:	movw	r1, #8848	; 0x2290
   1110c:	mov	r0, r4
   11110:	movt	r1, #1
   11114:	bl	10c30 <strcmp@plt>
   11118:	cmp	r0, #0
   1111c:	beq	112cc <mount@plt+0x48c>
   11120:	mov	r2, #5
   11124:	movw	r1, #8856	; 0x2298
   11128:	mov	r0, #0
   1112c:	movt	r1, #1
   11130:	bl	10c84 <dcgettext@plt>
   11134:	mov	r2, r4
   11138:	mov	r1, r0
   1113c:	mov	r0, #1
   11140:	bl	10dec <errx@plt>
   11144:	orr	r6, r6, #268435456	; 0x10000000
   11148:	b	10ee4 <mount@plt+0xa4>
   1114c:	mov	r0, #1
   11150:	bl	11544 <mount@plt+0x704>
   11154:	mov	r0, r6
   11158:	bl	10c54 <unshare@plt>
   1115c:	cmn	r0, #1
   11160:	beq	113c8 <mount@plt+0x588>
   11164:	ldr	r3, [sp, #16]
   11168:	cmp	r3, #0
   1116c:	bne	11270 <mount@plt+0x430>
   11170:	ldr	r3, [sp, #20]
   11174:	cmp	r3, #0
   11178:	ldr	r3, [sp, #24]
   1117c:	bne	1123c <mount@plt+0x3fc>
   11180:	cmn	r3, #1
   11184:	beq	11190 <mount@plt+0x350>
   11188:	mov	r0, r3
   1118c:	bl	11848 <mount@plt+0xa08>
   11190:	tst	r6, #131072	; 0x20000
   11194:	beq	111a4 <mount@plt+0x364>
   11198:	ldr	r3, [sp, #12]
   1119c:	cmp	r3, #0
   111a0:	bne	112f8 <mount@plt+0x4b8>
   111a4:	cmp	r5, #0
   111a8:	beq	111f4 <mount@plt+0x3b4>
   111ac:	mov	r2, #0
   111b0:	mov	r3, #278528	; 0x44000
   111b4:	movw	r0, #9120	; 0x23a0
   111b8:	str	r2, [sp]
   111bc:	movt	r0, #1
   111c0:	mov	r1, r5
   111c4:	bl	10e40 <mount@plt>
   111c8:	subs	r3, r0, #0
   111cc:	bne	113a4 <mount@plt+0x564>
   111d0:	movw	r0, #9192	; 0x23e8
   111d4:	movt	r0, #1
   111d8:	str	r3, [sp]
   111dc:	mov	r1, r5
   111e0:	mov	r2, r0
   111e4:	mov	r3, #14
   111e8:	bl	10e40 <mount@plt>
   111ec:	cmp	r0, #0
   111f0:	bne	113a4 <mount@plt+0x564>
   111f4:	movw	r4, #12512	; 0x30e0
   111f8:	movt	r4, #2
   111fc:	ldr	r1, [r4]
   11200:	cmp	r9, r1
   11204:	ble	112c8 <mount@plt+0x488>
   11208:	ldr	r0, [r8, r1, lsl #2]
   1120c:	add	r1, r8, r1, lsl #2
   11210:	bl	10c78 <execvp@plt>
   11214:	mov	r2, #5
   11218:	movw	r1, #9200	; 0x23f0
   1121c:	mov	r0, #0
   11220:	movt	r1, #1
   11224:	bl	10c84 <dcgettext@plt>
   11228:	ldr	r3, [r4]
   1122c:	ldr	r2, [r8, r3, lsl #2]
   11230:	mov	r1, r0
   11234:	mov	r0, #1
   11238:	bl	10ca8 <err@plt>
   1123c:	cmp	r3, #1
   11240:	beq	113e8 <mount@plt+0x5a8>
   11244:	mov	r0, #0
   11248:	bl	11848 <mount@plt+0xa08>
   1124c:	ldr	r1, [sp, #28]
   11250:	movw	r0, #9080	; 0x2378
   11254:	movt	r0, #1
   11258:	bl	11964 <mount@plt+0xb24>
   1125c:	ldr	r1, [sp, #32]
   11260:	movw	r0, #9100	; 0x238c
   11264:	movt	r0, #1
   11268:	bl	11964 <mount@plt+0xb24>
   1126c:	b	11190 <mount@plt+0x350>
   11270:	bl	10de0 <fork@plt>
   11274:	cmn	r0, #1
   11278:	beq	112d8 <mount@plt+0x498>
   1127c:	cmp	r0, #0
   11280:	beq	11170 <mount@plt+0x330>
   11284:	add	r1, sp, #40	; 0x28
   11288:	mov	r2, r4
   1128c:	bl	10cd8 <waitpid@plt>
   11290:	cmn	r0, #1
   11294:	beq	11384 <mount@plt+0x544>
   11298:	ldr	r0, [sp, #40]	; 0x28
   1129c:	ands	r3, r0, #127	; 0x7f
   112a0:	bne	11344 <mount@plt+0x504>
   112a4:	ubfx	r0, r0, #8, #8
   112a8:	b	11018 <mount@plt+0x1d8>
   112ac:	movw	r3, #7376	; 0x1cd0
   112b0:	movt	r3, #1
   112b4:	add	r2, r3, r2
   112b8:	ldr	r5, [sp, #36]	; 0x24
   112bc:	ldr	r2, [r2, #12]
   112c0:	str	r2, [sp, #12]
   112c4:	b	10ee4 <mount@plt+0xa4>
   112c8:	bl	11b68 <mount@plt+0xd28>
   112cc:	mov	r0, #1
   112d0:	str	r0, [sp, #24]
   112d4:	b	10ee4 <mount@plt+0xa4>
   112d8:	mov	r0, r4
   112dc:	movw	r1, #8960	; 0x2300
   112e0:	mov	r2, #5
   112e4:	movt	r1, #1
   112e8:	bl	10c84 <dcgettext@plt>
   112ec:	mov	r1, r0
   112f0:	mov	r0, #1
   112f4:	bl	10ca8 <err@plt>
   112f8:	mov	r4, #0
   112fc:	movw	r0, #9120	; 0x23a0
   11300:	str	r4, [sp]
   11304:	mov	r2, r4
   11308:	movw	r1, #9128	; 0x23a8
   1130c:	movt	r0, #1
   11310:	movt	r1, #1
   11314:	bl	10e40 <mount@plt>
   11318:	cmp	r0, r4
   1131c:	beq	111a4 <mount@plt+0x364>
   11320:	mov	r0, r4
   11324:	movw	r1, #9132	; 0x23ac
   11328:	mov	r2, #5
   1132c:	movt	r1, #1
   11330:	bl	10c84 <dcgettext@plt>
   11334:	mov	r1, r0
   11338:	mov	r0, #1
   1133c:	bl	10ca8 <err@plt>
   11340:	bl	10c90 <__stack_chk_fail@plt>
   11344:	add	r3, r3, #1
   11348:	sbfx	r3, r3, #1, #7
   1134c:	cmp	r3, #0
   11350:	ble	11364 <mount@plt+0x524>
   11354:	bl	10d50 <getpid@plt>
   11358:	ldr	r1, [sp, #40]	; 0x28
   1135c:	and	r1, r1, #127	; 0x7f
   11360:	bl	10d44 <kill@plt>
   11364:	movw	r1, #8988	; 0x231c
   11368:	mov	r0, #0
   1136c:	movt	r1, #1
   11370:	mov	r2, #5
   11374:	bl	10c84 <dcgettext@plt>
   11378:	mov	r1, r0
   1137c:	mov	r0, #1
   11380:	bl	10ca8 <err@plt>
   11384:	mov	r0, r4
   11388:	movw	r1, #8972	; 0x230c
   1138c:	mov	r2, #5
   11390:	movt	r1, #1
   11394:	bl	10c84 <dcgettext@plt>
   11398:	mov	r1, r0
   1139c:	mov	r0, #1
   113a0:	bl	10ca8 <err@plt>
   113a4:	mov	r2, #5
   113a8:	movw	r1, #9176	; 0x23d8
   113ac:	mov	r0, #0
   113b0:	movt	r1, #1
   113b4:	bl	10c84 <dcgettext@plt>
   113b8:	mov	r2, r5
   113bc:	mov	r1, r0
   113c0:	mov	r0, #1
   113c4:	bl	10ca8 <err@plt>
   113c8:	mov	r0, r4
   113cc:	movw	r1, #8944	; 0x22f0
   113d0:	mov	r2, #5
   113d4:	movt	r1, #1
   113d8:	bl	10c84 <dcgettext@plt>
   113dc:	mov	r1, r0
   113e0:	mov	r0, #1
   113e4:	bl	10ca8 <err@plt>
   113e8:	movw	r1, #9008	; 0x2330
   113ec:	mov	r0, #0
   113f0:	movt	r1, #1
   113f4:	mov	r2, #5
   113f8:	bl	10c84 <dcgettext@plt>
   113fc:	mov	r1, r0
   11400:	ldr	r0, [sp, #24]
   11404:	bl	10dec <errx@plt>
   11408:	ldrdeq	r1, [r1], -r8
   1140c:	strdeq	r1, [r1], -r8
   11410:	mov	fp, #0
   11414:	mov	lr, #0
   11418:	pop	{r1}		; (ldr r1, [sp], #4)
   1141c:	mov	r2, sp
   11420:	push	{r2}		; (str r2, [sp, #-4]!)
   11424:	push	{r0}		; (str r0, [sp, #-4]!)
   11428:	ldr	ip, [pc, #16]	; 11440 <mount@plt+0x600>
   1142c:	push	{ip}		; (str ip, [sp, #-4]!)
   11430:	ldr	r0, [pc, #12]	; 11444 <mount@plt+0x604>
   11434:	ldr	r3, [pc, #12]	; 11448 <mount@plt+0x608>
   11438:	bl	10d20 <__libc_start_main@plt>
   1143c:	bl	10e28 <abort@plt>
   11440:	muleq	r1, r0, ip
   11444:	andeq	r0, r1, ip, asr #28
   11448:	andeq	r1, r1, ip, lsr #24
   1144c:	ldr	r3, [pc, #20]	; 11468 <mount@plt+0x628>
   11450:	ldr	r2, [pc, #20]	; 1146c <mount@plt+0x62c>
   11454:	add	r3, pc, r3
   11458:	ldr	r2, [r3, r2]
   1145c:	cmp	r2, #0
   11460:	bxeq	lr
   11464:	b	10d2c <__gmon_start__@plt>
   11468:	andeq	r1, r1, r4, lsr #23
   1146c:	andeq	r0, r0, r0, asr #1
   11470:	push	{r3, lr}
   11474:	movw	r0, #12492	; 0x30cc
   11478:	ldr	r3, [pc, #36]	; 114a4 <mount@plt+0x664>
   1147c:	movt	r0, #2
   11480:	rsb	r3, r0, r3
   11484:	cmp	r3, #6
   11488:	popls	{r3, pc}
   1148c:	movw	r3, #0
   11490:	movt	r3, #0
   11494:	cmp	r3, #0
   11498:	popeq	{r3, pc}
   1149c:	blx	r3
   114a0:	pop	{r3, pc}
   114a4:	andeq	r3, r2, pc, asr #1
   114a8:	push	{r3, lr}
   114ac:	movw	r0, #12492	; 0x30cc
   114b0:	movw	r3, #12492	; 0x30cc
   114b4:	movt	r0, #2
   114b8:	movt	r3, #2
   114bc:	rsb	r3, r0, r3
   114c0:	asr	r3, r3, #2
   114c4:	add	r3, r3, r3, lsr #31
   114c8:	asrs	r1, r3, #1
   114cc:	popeq	{r3, pc}
   114d0:	movw	r2, #0
   114d4:	movt	r2, #0
   114d8:	cmp	r2, #0
   114dc:	popeq	{r3, pc}
   114e0:	blx	r2
   114e4:	pop	{r3, pc}
   114e8:	push	{r4, lr}
   114ec:	movw	r4, #12532	; 0x30f4
   114f0:	movt	r4, #2
   114f4:	ldrb	r3, [r4]
   114f8:	cmp	r3, #0
   114fc:	popne	{r4, pc}
   11500:	bl	11470 <mount@plt+0x630>
   11504:	mov	r3, #1
   11508:	strb	r3, [r4]
   1150c:	pop	{r4, pc}
   11510:	movw	r0, #12036	; 0x2f04
   11514:	movt	r0, #2
   11518:	push	{r3, lr}
   1151c:	ldr	r3, [r0]
   11520:	cmp	r3, #0
   11524:	beq	1153c <mount@plt+0x6fc>
   11528:	movw	r3, #0
   1152c:	movt	r3, #0
   11530:	cmp	r3, #0
   11534:	beq	1153c <mount@plt+0x6fc>
   11538:	blx	r3
   1153c:	pop	{r3, lr}
   11540:	b	114a8 <mount@plt+0x668>
   11544:	push	{r3, r4, r5, lr}
   11548:	subs	r5, r0, #0
   1154c:	mov	r2, #5
   11550:	movw	r1, #7640	; 0x1dd8
   11554:	movweq	r3, #12520	; 0x30e8
   11558:	movwne	r3, #12516	; 0x30e4
   1155c:	movteq	r3, #2
   11560:	movtne	r3, #2
   11564:	movt	r1, #1
   11568:	mov	r0, #0
   1156c:	ldr	r4, [r3]
   11570:	bl	10c84 <dcgettext@plt>
   11574:	mov	r1, r4
   11578:	bl	10e1c <fputs@plt>
   1157c:	mov	r2, #5
   11580:	movw	r1, #7652	; 0x1de4
   11584:	mov	r0, #0
   11588:	movt	r1, #1
   1158c:	bl	10c84 <dcgettext@plt>
   11590:	movw	r3, #12496	; 0x30d0
   11594:	movt	r3, #2
   11598:	mov	r1, #1
   1159c:	ldr	r3, [r3]
   115a0:	mov	r2, r0
   115a4:	mov	r0, r4
   115a8:	bl	10dbc <__fprintf_chk@plt>
   115ac:	mov	r2, #5
   115b0:	movw	r1, #8320	; 0x2080
   115b4:	mov	r0, #0
   115b8:	movt	r1, #1
   115bc:	bl	10c84 <dcgettext@plt>
   115c0:	mov	r1, r4
   115c4:	bl	10e1c <fputs@plt>
   115c8:	mov	r2, #5
   115cc:	movw	r1, #7696	; 0x1e10
   115d0:	mov	r0, #0
   115d4:	movt	r1, #1
   115d8:	bl	10c84 <dcgettext@plt>
   115dc:	mov	r1, r4
   115e0:	bl	10e1c <fputs@plt>
   115e4:	mov	r2, #5
   115e8:	movw	r1, #7760	; 0x1e50
   115ec:	mov	r0, #0
   115f0:	movt	r1, #1
   115f4:	bl	10c84 <dcgettext@plt>
   115f8:	mov	r1, r4
   115fc:	bl	10e1c <fputs@plt>
   11600:	mov	r2, #5
   11604:	movw	r1, #7772	; 0x1e5c
   11608:	mov	r0, #0
   1160c:	movt	r1, #1
   11610:	bl	10c84 <dcgettext@plt>
   11614:	mov	r1, r4
   11618:	bl	10e1c <fputs@plt>
   1161c:	mov	r2, #5
   11620:	movw	r1, #7828	; 0x1e94
   11624:	mov	r0, #0
   11628:	movt	r1, #1
   1162c:	bl	10c84 <dcgettext@plt>
   11630:	mov	r1, r4
   11634:	bl	10e1c <fputs@plt>
   11638:	mov	r2, #5
   1163c:	movw	r1, #7896	; 0x1ed8
   11640:	mov	r0, #0
   11644:	movt	r1, #1
   11648:	bl	10c84 <dcgettext@plt>
   1164c:	mov	r1, r4
   11650:	bl	10e1c <fputs@plt>
   11654:	mov	r2, #5
   11658:	movw	r1, #7956	; 0x1f14
   1165c:	mov	r0, #0
   11660:	movt	r1, #1
   11664:	bl	10c84 <dcgettext@plt>
   11668:	mov	r1, r4
   1166c:	bl	10e1c <fputs@plt>
   11670:	mov	r2, #5
   11674:	movw	r1, #8012	; 0x1f4c
   11678:	mov	r0, #0
   1167c:	movt	r1, #1
   11680:	bl	10c84 <dcgettext@plt>
   11684:	mov	r1, r4
   11688:	bl	10e1c <fputs@plt>
   1168c:	mov	r2, #5
   11690:	movw	r1, #8064	; 0x1f80
   11694:	mov	r0, #0
   11698:	movt	r1, #1
   1169c:	bl	10c84 <dcgettext@plt>
   116a0:	mov	r1, r4
   116a4:	bl	10e1c <fputs@plt>
   116a8:	mov	r2, #5
   116ac:	movw	r1, #8116	; 0x1fb4
   116b0:	mov	r0, #0
   116b4:	movt	r1, #1
   116b8:	bl	10c84 <dcgettext@plt>
   116bc:	mov	r1, r4
   116c0:	bl	10e1c <fputs@plt>
   116c4:	mov	r2, #5
   116c8:	movw	r1, #8176	; 0x1ff0
   116cc:	mov	r0, #0
   116d0:	movt	r1, #1
   116d4:	bl	10c84 <dcgettext@plt>
   116d8:	mov	r1, r4
   116dc:	bl	10e1c <fputs@plt>
   116e0:	mov	r2, #5
   116e4:	movw	r1, #8252	; 0x203c
   116e8:	mov	r0, #0
   116ec:	movt	r1, #1
   116f0:	bl	10c84 <dcgettext@plt>
   116f4:	mov	r1, r4
   116f8:	bl	10e1c <fputs@plt>
   116fc:	mov	r2, #5
   11700:	movw	r1, #8324	; 0x2084
   11704:	mov	r0, #0
   11708:	movt	r1, #1
   1170c:	bl	10c84 <dcgettext@plt>
   11710:	mov	r1, r4
   11714:	bl	10e1c <fputs@plt>
   11718:	mov	r2, #5
   1171c:	movw	r1, #8448	; 0x2100
   11720:	mov	r0, #0
   11724:	movt	r1, #1
   11728:	bl	10c84 <dcgettext@plt>
   1172c:	mov	r1, r4
   11730:	bl	10e1c <fputs@plt>
   11734:	mov	r2, #5
   11738:	movw	r1, #8320	; 0x2080
   1173c:	mov	r0, #0
   11740:	movt	r1, #1
   11744:	bl	10c84 <dcgettext@plt>
   11748:	mov	r1, r4
   1174c:	bl	10e1c <fputs@plt>
   11750:	mov	r2, #5
   11754:	movw	r1, #8528	; 0x2150
   11758:	mov	r0, #0
   1175c:	movt	r1, #1
   11760:	bl	10c84 <dcgettext@plt>
   11764:	mov	r1, r4
   11768:	bl	10e1c <fputs@plt>
   1176c:	mov	r2, #5
   11770:	movw	r1, #8572	; 0x217c
   11774:	mov	r0, #0
   11778:	movt	r1, #1
   1177c:	bl	10c84 <dcgettext@plt>
   11780:	mov	r1, r4
   11784:	bl	10e1c <fputs@plt>
   11788:	mov	r2, #5
   1178c:	movw	r1, #8628	; 0x21b4
   11790:	mov	r0, #0
   11794:	movt	r1, #1
   11798:	bl	10c84 <dcgettext@plt>
   1179c:	movw	r3, #8656	; 0x21d0
   117a0:	mov	r1, #1
   117a4:	movt	r3, #1
   117a8:	mov	r2, r0
   117ac:	mov	r0, r4
   117b0:	bl	10dbc <__fprintf_chk@plt>
   117b4:	mov	r0, r5
   117b8:	bl	10d5c <exit@plt>
   117bc:	push	{r4, r5, r6, r7, r8, lr}
   117c0:	subs	r4, r2, #0
   117c4:	mov	r7, r0
   117c8:	mov	r6, r1
   117cc:	beq	11840 <mount@plt+0xa00>
   117d0:	bl	10d80 <__errno_location@plt>
   117d4:	mov	r8, #0
   117d8:	mov	r5, r0
   117dc:	b	117fc <mount@plt+0x9bc>
   117e0:	subs	r4, r4, r0
   117e4:	ldr	r3, [r5]
   117e8:	addne	r6, r6, r0
   117ec:	cmp	r3, #11
   117f0:	beq	11830 <mount@plt+0x9f0>
   117f4:	cmp	r4, #0
   117f8:	beq	11840 <mount@plt+0xa00>
   117fc:	str	r8, [r5]
   11800:	mov	r0, r7
   11804:	mov	r1, r6
   11808:	mov	r2, r4
   1180c:	bl	10db0 <write@plt>
   11810:	cmp	r0, #0
   11814:	bgt	117e0 <mount@plt+0x9a0>
   11818:	ldr	r3, [r5]
   1181c:	cmp	r3, #11
   11820:	cmpne	r3, #4
   11824:	beq	117ec <mount@plt+0x9ac>
   11828:	mvn	r0, #0
   1182c:	pop	{r4, r5, r6, r7, r8, pc}
   11830:	movw	r0, #10000	; 0x2710
   11834:	bl	10ccc <usleep@plt>
   11838:	cmp	r4, #0
   1183c:	bne	117fc <mount@plt+0x9bc>
   11840:	mov	r0, #0
   11844:	pop	{r4, r5, r6, r7, r8, pc}
   11848:	cmp	r0, #1
   1184c:	push	{r3, r4, r5, lr}
   11850:	mov	r3, r0
   11854:	pophi	{r3, r4, r5, pc}
   11858:	movw	r2, #7376	; 0x1cd0
   1185c:	movt	r2, #1
   11860:	movw	r0, #8668	; 0x21dc
   11864:	mov	r1, #1
   11868:	movt	r0, #1
   1186c:	ldr	r5, [r2, r3, lsl #2]
   11870:	bl	10cfc <open64@plt>
   11874:	subs	r4, r0, #0
   11878:	blt	118a8 <mount@plt+0xa68>
   1187c:	mov	r0, r5
   11880:	bl	10d68 <strlen@plt>
   11884:	mov	r1, r5
   11888:	mov	r2, r0
   1188c:	mov	r0, r4
   11890:	bl	117bc <mount@plt+0x97c>
   11894:	cmp	r0, #0
   11898:	bne	118c8 <mount@plt+0xa88>
   1189c:	mov	r0, r4
   118a0:	pop	{r3, r4, r5, lr}
   118a4:	b	10e34 <close@plt>
   118a8:	bl	10d80 <__errno_location@plt>
   118ac:	ldr	r3, [r0]
   118b0:	cmp	r3, #2
   118b4:	movwne	r1, #8692	; 0x21f4
   118b8:	movne	r0, #0
   118bc:	movtne	r1, #1
   118c0:	popeq	{r3, r4, r5, pc}
   118c4:	b	118d4 <mount@plt+0xa94>
   118c8:	movw	r1, #8708	; 0x2204
   118cc:	movt	r1, #1
   118d0:	mov	r0, #0
   118d4:	mov	r2, #5
   118d8:	bl	10c84 <dcgettext@plt>
   118dc:	movw	r2, #8668	; 0x21dc
   118e0:	movt	r2, #1
   118e4:	mov	r1, r0
   118e8:	mov	r0, #1
   118ec:	bl	10ca8 <err@plt>
   118f0:	push	{r1, r2, r3}
   118f4:	movw	r2, #8724	; 0x2214
   118f8:	push	{r4, lr}
   118fc:	movw	r4, #12504	; 0x30d8
   11900:	movt	r4, #2
   11904:	sub	sp, sp, #12
   11908:	add	ip, sp, #24
   1190c:	movt	r2, #1
   11910:	ldr	lr, [r4]
   11914:	mov	r1, #1
   11918:	mov	r3, ip
   1191c:	str	ip, [sp]
   11920:	str	lr, [sp, #4]
   11924:	bl	10d98 <__vasprintf_chk@plt>
   11928:	cmp	r0, #0
   1192c:	blt	11954 <mount@plt+0xb14>
   11930:	ldr	r2, [sp, #4]
   11934:	ldr	r3, [r4]
   11938:	cmp	r2, r3
   1193c:	bne	11950 <mount@plt+0xb10>
   11940:	add	sp, sp, #12
   11944:	pop	{r4, lr}
   11948:	add	sp, sp, #12
   1194c:	bx	lr
   11950:	bl	10c90 <__stack_chk_fail@plt>
   11954:	movw	r1, #8732	; 0x221c
   11958:	mov	r0, #1
   1195c:	movt	r1, #1
   11960:	bl	10ca8 <err@plt>
   11964:	push	{r4, r5, r6, r7, lr}
   11968:	movw	r4, #12504	; 0x30d8
   1196c:	movt	r4, #2
   11970:	sub	sp, sp, #12
   11974:	mov	r6, r1
   11978:	mov	r1, #1
   1197c:	ldr	ip, [r4]
   11980:	mov	r7, r0
   11984:	str	ip, [sp, #4]
   11988:	bl	10cfc <open64@plt>
   1198c:	subs	r5, r0, #0
   11990:	movwlt	r1, #8692	; 0x21f4
   11994:	movlt	r0, #0
   11998:	movtlt	r1, #1
   1199c:	blt	11a10 <mount@plt+0xbd0>
   119a0:	mov	r3, r6
   119a4:	mov	r2, #0
   119a8:	movw	r1, #8724	; 0x2214
   119ac:	mov	r0, sp
   119b0:	movt	r1, #1
   119b4:	bl	118f0 <mount@plt+0xab0>
   119b8:	ldr	r6, [sp]
   119bc:	mov	r0, r6
   119c0:	bl	10d68 <strlen@plt>
   119c4:	mov	r1, r6
   119c8:	mov	r2, r0
   119cc:	mov	r0, r5
   119d0:	bl	117bc <mount@plt+0x97c>
   119d4:	cmp	r0, #0
   119d8:	bne	11a04 <mount@plt+0xbc4>
   119dc:	ldr	r0, [sp]
   119e0:	bl	10c48 <free@plt>
   119e4:	mov	r0, r5
   119e8:	bl	10e34 <close@plt>
   119ec:	ldr	r2, [sp, #4]
   119f0:	ldr	r3, [r4]
   119f4:	cmp	r2, r3
   119f8:	bne	11a28 <mount@plt+0xbe8>
   119fc:	add	sp, sp, #12
   11a00:	pop	{r4, r5, r6, r7, pc}
   11a04:	movw	r1, #8708	; 0x2204
   11a08:	movt	r1, #1
   11a0c:	mov	r0, #0
   11a10:	mov	r2, #5
   11a14:	bl	10c84 <dcgettext@plt>
   11a18:	mov	r2, r7
   11a1c:	mov	r1, r0
   11a20:	mov	r0, #1
   11a24:	bl	10ca8 <err@plt>
   11a28:	bl	10c90 <__stack_chk_fail@plt>
   11a2c:	movw	r3, #12520	; 0x30e8
   11a30:	movt	r3, #2
   11a34:	push	{r4, r5, r6, lr}
   11a38:	ldr	r4, [r3]
   11a3c:	mov	r0, r4
   11a40:	bl	10cf0 <__fpending@plt>
   11a44:	mov	r6, r0
   11a48:	mov	r0, r4
   11a4c:	bl	10c60 <ferror@plt>
   11a50:	mov	r5, r0
   11a54:	mov	r0, r4
   11a58:	bl	10dc8 <fclose@plt>
   11a5c:	adds	r4, r0, #0
   11a60:	movne	r4, #1
   11a64:	cmp	r5, #0
   11a68:	bne	11ae0 <mount@plt+0xca0>
   11a6c:	cmp	r4, #0
   11a70:	beq	11a8c <mount@plt+0xc4c>
   11a74:	cmp	r6, #0
   11a78:	beq	11b30 <mount@plt+0xcf0>
   11a7c:	bl	10d80 <__errno_location@plt>
   11a80:	ldr	r3, [r0]
   11a84:	cmp	r3, #32
   11a88:	bne	11b44 <mount@plt+0xd04>
   11a8c:	movw	r3, #12516	; 0x30e4
   11a90:	movt	r3, #2
   11a94:	ldr	r4, [r3]
   11a98:	mov	r0, r4
   11a9c:	bl	10cf0 <__fpending@plt>
   11aa0:	mov	r6, r0
   11aa4:	mov	r0, r4
   11aa8:	bl	10c60 <ferror@plt>
   11aac:	mov	r5, r0
   11ab0:	mov	r0, r4
   11ab4:	bl	10dc8 <fclose@plt>
   11ab8:	adds	r4, r0, #0
   11abc:	movne	r4, #1
   11ac0:	cmp	r5, #0
   11ac4:	beq	11b0c <mount@plt+0xccc>
   11ac8:	cmp	r4, #0
   11acc:	bne	11ad8 <mount@plt+0xc98>
   11ad0:	bl	10d80 <__errno_location@plt>
   11ad4:	str	r4, [r0]
   11ad8:	mov	r0, #1
   11adc:	bl	10c6c <_exit@plt>
   11ae0:	cmp	r4, #0
   11ae4:	bne	11a7c <mount@plt+0xc3c>
   11ae8:	bl	10d80 <__errno_location@plt>
   11aec:	str	r4, [r0]
   11af0:	mov	r2, #5
   11af4:	movw	r1, #8756	; 0x2234
   11af8:	mov	r0, #0
   11afc:	movt	r1, #1
   11b00:	bl	10c84 <dcgettext@plt>
   11b04:	bl	10d74 <warnx@plt>
   11b08:	b	11ad8 <mount@plt+0xc98>
   11b0c:	cmp	r4, #0
   11b10:	popeq	{r4, r5, r6, pc}
   11b14:	cmp	r6, #0
   11b18:	bne	11ad8 <mount@plt+0xc98>
   11b1c:	bl	10d80 <__errno_location@plt>
   11b20:	ldr	r3, [r0]
   11b24:	cmp	r3, #9
   11b28:	bne	11ad8 <mount@plt+0xc98>
   11b2c:	pop	{r4, r5, r6, pc}
   11b30:	bl	10d80 <__errno_location@plt>
   11b34:	ldr	r3, [r0]
   11b38:	cmp	r3, #9
   11b3c:	bne	11a84 <mount@plt+0xc44>
   11b40:	b	11a8c <mount@plt+0xc4c>
   11b44:	cmp	r3, #0
   11b48:	beq	11af0 <mount@plt+0xcb0>
   11b4c:	mov	r2, #5
   11b50:	movw	r1, #8756	; 0x2234
   11b54:	mov	r0, #0
   11b58:	movt	r1, #1
   11b5c:	bl	10c84 <dcgettext@plt>
   11b60:	bl	10e04 <warn@plt>
   11b64:	b	11ad8 <mount@plt+0xc98>
   11b68:	ldr	r0, [pc, #172]	; 11c1c <mount@plt+0xddc>
   11b6c:	push	{r4, r5, r6, r7, r8, lr}
   11b70:	add	r0, pc, r0
   11b74:	bl	10d08 <getenv@plt>
   11b78:	subs	r4, r0, #0
   11b7c:	beq	11bfc <mount@plt+0xdbc>
   11b80:	mov	r0, r4
   11b84:	bl	10c3c <basename@plt>
   11b88:	mov	r8, r0
   11b8c:	bl	10d68 <strlen@plt>
   11b90:	add	r7, r0, #2
   11b94:	mov	r0, r7
   11b98:	bl	10d14 <malloc@plt>
   11b9c:	adds	r5, r7, #0
   11ba0:	movne	r5, #1
   11ba4:	cmp	r0, #0
   11ba8:	mov	r6, r0
   11bac:	movne	r5, #0
   11bb0:	cmp	r5, #0
   11bb4:	bne	11c08 <mount@plt+0xdc8>
   11bb8:	mov	r3, #45	; 0x2d
   11bbc:	mov	r1, r8
   11bc0:	strb	r3, [r0], #1
   11bc4:	bl	10ce4 <strcpy@plt>
   11bc8:	mov	r1, r6
   11bcc:	mov	r2, r5
   11bd0:	mov	r0, r4
   11bd4:	bl	10df8 <execl@plt>
   11bd8:	ldr	r1, [pc, #64]	; 11c20 <mount@plt+0xde0>
   11bdc:	mov	r2, #5
   11be0:	mov	r0, r5
   11be4:	add	r1, pc, r1
   11be8:	bl	10c84 <dcgettext@plt>
   11bec:	mov	r2, r4
   11bf0:	mov	r1, r0
   11bf4:	mov	r0, #1
   11bf8:	bl	10ca8 <err@plt>
   11bfc:	ldr	r4, [pc, #32]	; 11c24 <mount@plt+0xde4>
   11c00:	add	r4, pc, r4
   11c04:	b	11b80 <mount@plt+0xd40>
   11c08:	ldr	r1, [pc, #24]	; 11c28 <mount@plt+0xde8>
   11c0c:	mov	r2, r7
   11c10:	mov	r0, #1
   11c14:	add	r1, pc, r1
   11c18:	bl	10ca8 <err@plt>
   11c1c:	andeq	r0, r0, r8, lsr #18
   11c20:	andeq	r0, r0, r4, lsl #16
   11c24:	muleq	r0, r0, r8
   11c28:	andeq	r0, r0, ip, lsl #17
   11c2c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11c30:	mov	r7, r0
   11c34:	ldr	r6, [pc, #76]	; 11c88 <mount@plt+0xe48>
   11c38:	mov	r8, r1
   11c3c:	ldr	r5, [pc, #72]	; 11c8c <mount@plt+0xe4c>
   11c40:	mov	r9, r2
   11c44:	add	r6, pc, r6
   11c48:	bl	10c10 <strcmp@plt-0x20>
   11c4c:	add	r5, pc, r5
   11c50:	rsb	r6, r5, r6
   11c54:	asrs	r6, r6, #2
   11c58:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11c5c:	sub	r5, r5, #4
   11c60:	mov	r4, #0
   11c64:	add	r4, r4, #1
   11c68:	ldr	r3, [r5, #4]!
   11c6c:	mov	r0, r7
   11c70:	mov	r1, r8
   11c74:	mov	r2, r9
   11c78:	blx	r3
   11c7c:	cmp	r4, r6
   11c80:	bne	11c64 <mount@plt+0xe24>
   11c84:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   11c88:			; <UNDEFINED> instruction: 0x000112b4
   11c8c:	andeq	r1, r1, r8, lsr #5
   11c90:	bx	lr
   11c94:	ldr	r3, [pc, #28]	; 11cb8 <mount@plt+0xe78>
   11c98:	mov	r1, #0
   11c9c:	ldr	r2, [pc, #24]	; 11cbc <mount@plt+0xe7c>
   11ca0:	add	r3, pc, r3
   11ca4:	ldr	r3, [r3, r2]
   11ca8:	cmp	r3, #0
   11cac:	ldrne	r2, [r3]
   11cb0:	moveq	r2, r3
   11cb4:	b	10d8c <__cxa_atexit@plt>
   11cb8:	andeq	r1, r1, r8, asr r3
   11cbc:	andeq	r0, r0, r4, asr #1

Disassembly of section .fini:

00011cc0 <.fini>:
   11cc0:	push	{r3, lr}
   11cc4:	pop	{r3, pc}
