
centos-preinstalled/dbus-binding-tool:     file format elf32-littlearm


Disassembly of section .init:

0000b21c <_init@@Base>:
    b21c:	push	{r3, lr}
    b220:	bl	c248 <g_markup_error_quark@plt+0x790>
    b224:	pop	{r3, pc}

Disassembly of section .plt:

0000b228 <g_value_get_float@plt-0x14>:
    b228:	push	{lr}		; (str lr, [sp, #-4]!)
    b22c:	ldr	lr, [pc, #4]	; b238 <_init@@Base+0x1c>
    b230:	add	lr, pc, lr
    b234:	ldr	pc, [lr, #8]!
    b238:	andeq	r6, r1, r8, asr #27

0000b23c <g_value_get_float@plt>:
    b23c:	add	ip, pc, #0, 12
    b240:	add	ip, ip, #90112	; 0x16000
    b244:	ldr	pc, [ip, #3528]!	; 0xdc8

0000b248 <g_free@plt>:
    b248:	add	ip, pc, #0, 12
    b24c:	add	ip, ip, #90112	; 0x16000
    b250:	ldr	pc, [ip, #3520]!	; 0xdc0

0000b254 <g_memdup@plt>:
    b254:	add	ip, pc, #0, 12
    b258:	add	ip, ip, #90112	; 0x16000
    b25c:	ldr	pc, [ip, #3512]!	; 0xdb8

0000b260 <g_value_set_int64@plt>:
    b260:	add	ip, pc, #0, 12
    b264:	add	ip, ip, #90112	; 0x16000
    b268:	ldr	pc, [ip, #3504]!	; 0xdb0

0000b26c <g_io_channel_ref@plt>:
    b26c:	add	ip, pc, #0, 12
    b270:	add	ip, ip, #90112	; 0x16000
    b274:	ldr	pc, [ip, #3496]!	; 0xda8

0000b278 <g_slist_remove@plt>:
    b278:	add	ip, pc, #0, 12
    b27c:	add	ip, ip, #90112	; 0x16000
    b280:	ldr	pc, [ip, #3488]!	; 0xda0

0000b284 <g_value_unset@plt>:
    b284:	add	ip, pc, #0, 12
    b288:	add	ip, ip, #90112	; 0x16000
    b28c:	ldr	pc, [ip, #3480]!	; 0xd98

0000b290 <fileno@plt>:
    b290:	add	ip, pc, #0, 12
    b294:	add	ip, ip, #90112	; 0x16000
    b298:	ldr	pc, [ip, #3472]!	; 0xd90

0000b29c <g_io_channel_shutdown@plt>:
    b29c:	add	ip, pc, #0, 12
    b2a0:	add	ip, ip, #90112	; 0x16000
    b2a4:	ldr	pc, [ip, #3464]!	; 0xd88

0000b2a8 <g_value_get_boxed@plt>:
    b2a8:	add	ip, pc, #0, 12
    b2ac:	add	ip, ip, #90112	; 0x16000
    b2b0:	ldr	pc, [ip, #3456]!	; 0xd80

0000b2b4 <abort@plt>:
    b2b4:	add	ip, pc, #0, 12
    b2b8:	add	ip, ip, #90112	; 0x16000
    b2bc:	ldr	pc, [ip, #3448]!	; 0xd78

0000b2c0 <XML_ParserCreate_MM@plt>:
    b2c0:	add	ip, pc, #0, 12
    b2c4:	add	ip, ip, #90112	; 0x16000
    b2c8:	ldr	pc, [ip, #3440]!	; 0xd70

0000b2cc <g_value_take_string@plt>:
    b2cc:	add	ip, pc, #0, 12
    b2d0:	add	ip, ip, #90112	; 0x16000
    b2d4:	ldr	pc, [ip, #3432]!	; 0xd68

0000b2d8 <dbus_signature_iter_next@plt>:
    b2d8:	add	ip, pc, #0, 12
    b2dc:	add	ip, ip, #90112	; 0x16000
    b2e0:	ldr	pc, [ip, #3424]!	; 0xd60

0000b2e4 <g_slist_free@plt>:
    b2e4:	add	ip, pc, #0, 12
    b2e8:	add	ip, ip, #90112	; 0x16000
    b2ec:	ldr	pc, [ip, #3416]!	; 0xd58

0000b2f0 <g_io_channel_set_encoding@plt>:
    b2f0:	add	ip, pc, #0, 12
    b2f4:	add	ip, ip, #90112	; 0x16000
    b2f8:	ldr	pc, [ip, #3408]!	; 0xd50

0000b2fc <g_type_value_table_peek@plt>:
    b2fc:	add	ip, pc, #0, 12
    b300:	add	ip, ip, #90112	; 0x16000
    b304:	ldr	pc, [ip, #3400]!	; 0xd48

0000b308 <__xstat@plt>:
    b308:	add	ip, pc, #0, 12
    b30c:	add	ip, ip, #90112	; 0x16000
    b310:	ldr	pc, [ip, #3392]!	; 0xd40

0000b314 <g_hash_table_destroy@plt>:
    b314:	add	ip, pc, #0, 12
    b318:	add	ip, ip, #90112	; 0x16000
    b31c:	ldr	pc, [ip, #3384]!	; 0xd38

0000b320 <__libc_start_main@plt>:
    b320:	add	ip, pc, #0, 12
    b324:	add	ip, ip, #90112	; 0x16000
    b328:	ldr	pc, [ip, #3376]!	; 0xd30

0000b32c <g_str_hash@plt>:
    b32c:	add	ip, pc, #0, 12
    b330:	add	ip, ip, #90112	; 0x16000
    b334:	ldr	pc, [ip, #3368]!	; 0xd28

0000b338 <g_variant_new_double@plt>:
    b338:	add	ip, pc, #0, 12
    b33c:	add	ip, ip, #90112	; 0x16000
    b340:	ldr	pc, [ip, #3360]!	; 0xd20

0000b344 <g_value_get_string@plt>:
    b344:	add	ip, pc, #0, 12
    b348:	add	ip, ip, #90112	; 0x16000
    b34c:	ldr	pc, [ip, #3352]!	; 0xd18

0000b350 <g_type_from_name@plt>:
    b350:	add	ip, pc, #0, 12
    b354:	add	ip, ip, #90112	; 0x16000
    b358:	ldr	pc, [ip, #3344]!	; 0xd10

0000b35c <g_io_channel_unix_new@plt>:
    b35c:	add	ip, pc, #0, 12
    b360:	add	ip, ip, #90112	; 0x16000
    b364:	ldr	pc, [ip, #3336]!	; 0xd08

0000b368 <g_variant_new_signature@plt>:
    b368:	add	ip, pc, #0, 12
    b36c:	add	ip, ip, #90112	; 0x16000
    b370:	ldr	pc, [ip, #3328]!	; 0xd00

0000b374 <g_variant_type_new_dict_entry@plt>:
    b374:	add	ip, pc, #0, 12
    b378:	add	ip, ip, #90112	; 0x16000
    b37c:	ldr	pc, [ip, #3320]!	; 0xcf8

0000b380 <__gmon_start__@plt>:
    b380:	add	ip, pc, #0, 12
    b384:	add	ip, ip, #90112	; 0x16000
    b388:	ldr	pc, [ip, #3312]!	; 0xcf0

0000b38c <g_slist_reverse@plt>:
    b38c:	add	ip, pc, #0, 12
    b390:	add	ip, ip, #90112	; 0x16000
    b394:	ldr	pc, [ip, #3304]!	; 0xce8

0000b398 <dbus_set_g_error@plt>:
    b398:	add	ip, pc, #0, 12
    b39c:	add	ip, ip, #90112	; 0x16000
    b3a0:	ldr	pc, [ip, #3296]!	; 0xce0

0000b3a4 <g_strdup@plt>:
    b3a4:	add	ip, pc, #0, 12
    b3a8:	add	ip, ip, #90112	; 0x16000
    b3ac:	ldr	pc, [ip, #3288]!	; 0xcd8

0000b3b0 <g_value_set_boolean@plt>:
    b3b0:	add	ip, pc, #0, 12
    b3b4:	add	ip, ip, #90112	; 0x16000
    b3b8:	ldr	pc, [ip, #3280]!	; 0xcd0

0000b3bc <g_variant_new_boolean@plt>:
    b3bc:	add	ip, pc, #0, 12
    b3c0:	add	ip, ip, #90112	; 0x16000
    b3c4:	ldr	pc, [ip, #3272]!	; 0xcc8

0000b3c8 <rename@plt>:
    b3c8:	add	ip, pc, #0, 12
    b3cc:	add	ip, ip, #90112	; 0x16000
    b3d0:	ldr	pc, [ip, #3264]!	; 0xcc0

0000b3d4 <g_value_get_double@plt>:
    b3d4:	add	ip, pc, #0, 12
    b3d8:	add	ip, ip, #90112	; 0x16000
    b3dc:	ldr	pc, [ip, #3256]!	; 0xcb8

0000b3e0 <dbus_error_init@plt>:
    b3e0:	add	ip, pc, #0, 12
    b3e4:	add	ip, ip, #90112	; 0x16000
    b3e8:	ldr	pc, [ip, #3248]!	; 0xcb0

0000b3ec <__printf_chk@plt>:
    b3ec:	add	ip, pc, #0, 12
    b3f0:	add	ip, ip, #90112	; 0x16000
    b3f4:	ldr	pc, [ip, #3240]!	; 0xca8

0000b3f8 <strchr@plt>:
    b3f8:	add	ip, pc, #0, 12
    b3fc:	add	ip, ip, #90112	; 0x16000
    b400:	ldr	pc, [ip, #3232]!	; 0xca0

0000b404 <putchar@plt>:
    b404:	add	ip, pc, #0, 12
    b408:	add	ip, ip, #90112	; 0x16000
    b40c:	ldr	pc, [ip, #3224]!	; 0xc98

0000b410 <g_hash_table_insert@plt>:
    b410:	add	ip, pc, #0, 12
    b414:	add	ip, ip, #90112	; 0x16000
    b418:	ldr	pc, [ip, #3216]!	; 0xc90

0000b41c <g_strconcat@plt>:
    b41c:	add	ip, pc, #0, 12
    b420:	add	ip, ip, #90112	; 0x16000
    b424:	ldr	pc, [ip, #3208]!	; 0xc88

0000b428 <g_array_new@plt>:
    b428:	add	ip, pc, #0, 12
    b42c:	add	ip, ip, #90112	; 0x16000
    b430:	ldr	pc, [ip, #3200]!	; 0xc80

0000b434 <g_value_set_int@plt>:
    b434:	add	ip, pc, #0, 12
    b438:	add	ip, ip, #90112	; 0x16000
    b43c:	ldr	pc, [ip, #3192]!	; 0xc78

0000b440 <g_variant_type_copy@plt>:
    b440:	add	ip, pc, #0, 12
    b444:	add	ip, ip, #90112	; 0x16000
    b448:	ldr	pc, [ip, #3184]!	; 0xc70

0000b44c <XML_GetErrorCode@plt>:
    b44c:	add	ip, pc, #0, 12
    b450:	add	ip, ip, #90112	; 0x16000
    b454:	ldr	pc, [ip, #3176]!	; 0xc68

0000b458 <XML_SetUserData@plt>:
    b458:	add	ip, pc, #0, 12
    b45c:	add	ip, ip, #90112	; 0x16000
    b460:	ldr	pc, [ip, #3168]!	; 0xc60

0000b464 <g_value_get_uint@plt>:
    b464:	add	ip, pc, #0, 12
    b468:	add	ip, ip, #90112	; 0x16000
    b46c:	ldr	pc, [ip, #3160]!	; 0xc58

0000b470 <g_type_is_a@plt>:
    b470:	add	ip, pc, #0, 12
    b474:	add	ip, ip, #90112	; 0x16000
    b478:	ldr	pc, [ip, #3152]!	; 0xc50

0000b47c <memset@plt>:
    b47c:	add	ip, pc, #0, 12
    b480:	add	ip, ip, #90112	; 0x16000
    b484:	ldr	pc, [ip, #3144]!	; 0xc48

0000b488 <g_array_free@plt>:
    b488:	add	ip, pc, #0, 12
    b48c:	add	ip, ip, #90112	; 0x16000
    b490:	ldr	pc, [ip, #3136]!	; 0xc40

0000b494 <g_variant_type_new_tuple@plt>:
    b494:	add	ip, pc, #0, 12
    b498:	add	ip, ip, #90112	; 0x16000
    b49c:	ldr	pc, [ip, #3128]!	; 0xc38

0000b4a0 <g_io_channel_new_file@plt>:
    b4a0:	add	ip, pc, #0, 12
    b4a4:	add	ip, ip, #90112	; 0x16000
    b4a8:	ldr	pc, [ip, #3120]!	; 0xc30

0000b4ac <g_value_array_free@plt>:
    b4ac:	add	ip, pc, #0, 12
    b4b0:	add	ip, ip, #90112	; 0x16000
    b4b4:	ldr	pc, [ip, #3112]!	; 0xc28

0000b4b8 <g_malloc@plt>:
    b4b8:	add	ip, pc, #0, 12
    b4bc:	add	ip, ip, #90112	; 0x16000
    b4c0:	ldr	pc, [ip, #3104]!	; 0xc20

0000b4c4 <g_type_set_qdata@plt>:
    b4c4:	add	ip, pc, #0, 12
    b4c8:	add	ip, ip, #90112	; 0x16000
    b4cc:	ldr	pc, [ip, #3096]!	; 0xc18

0000b4d0 <g_string_new@plt>:
    b4d0:	add	ip, pc, #0, 12
    b4d4:	add	ip, ip, #90112	; 0x16000
    b4d8:	ldr	pc, [ip, #3088]!	; 0xc10

0000b4dc <g_spawn_async_with_pipes@plt>:
    b4dc:	add	ip, pc, #0, 12
    b4e0:	add	ip, ip, #90112	; 0x16000
    b4e4:	ldr	pc, [ip, #3080]!	; 0xc08

0000b4e8 <g_variant_new_dict_entry@plt>:
    b4e8:	add	ip, pc, #0, 12
    b4ec:	add	ip, ip, #90112	; 0x16000
    b4f0:	ldr	pc, [ip, #3072]!	; 0xc00

0000b4f4 <g_variant_new_strv@plt>:
    b4f4:	add	ip, pc, #0, 12
    b4f8:	add	ip, ip, #90112	; 0x16000
    b4fc:	ldr	pc, [ip, #3064]!	; 0xbf8

0000b500 <g_value_array_append@plt>:
    b500:	add	ip, pc, #0, 12
    b504:	add	ip, ip, #90112	; 0x16000
    b508:	ldr	pc, [ip, #3056]!	; 0xbf0

0000b50c <g_strndup@plt>:
    b50c:	add	ip, pc, #0, 12
    b510:	add	ip, ip, #90112	; 0x16000
    b514:	ldr	pc, [ip, #3048]!	; 0xbe8

0000b518 <XML_GetCurrentColumnNumber@plt>:
    b518:	add	ip, pc, #0, 12
    b51c:	add	ip, ip, #90112	; 0x16000
    b520:	ldr	pc, [ip, #3040]!	; 0xbe0

0000b524 <g_value_get_long@plt>:
    b524:	add	ip, pc, #0, 12
    b528:	add	ip, ip, #90112	; 0x16000
    b52c:	ldr	pc, [ip, #3032]!	; 0xbd8

0000b530 <g_variant_type_new_array@plt>:
    b530:	add	ip, pc, #0, 12
    b534:	add	ip, ip, #90112	; 0x16000
    b538:	ldr	pc, [ip, #3024]!	; 0xbd0

0000b53c <g_value_get_boolean@plt>:
    b53c:	add	ip, pc, #0, 12
    b540:	add	ip, ip, #90112	; 0x16000
    b544:	ldr	pc, [ip, #3016]!	; 0xbc8

0000b548 <g_ptr_array_add@plt>:
    b548:	add	ip, pc, #0, 12
    b54c:	add	ip, ip, #90112	; 0x16000
    b550:	ldr	pc, [ip, #3008]!	; 0xbc0

0000b554 <g_value_get_type@plt>:
    b554:	add	ip, pc, #0, 12
    b558:	add	ip, ip, #90112	; 0x16000
    b55c:	ldr	pc, [ip, #3000]!	; 0xbb8

0000b560 <g_malloc0_n@plt>:
    b560:	add	ip, pc, #0, 12
    b564:	add	ip, ip, #90112	; 0x16000
    b568:	ldr	pc, [ip, #2992]!	; 0xbb0

0000b56c <g_value_set_boxed@plt>:
    b56c:	add	ip, pc, #0, 12
    b570:	add	ip, ip, #90112	; 0x16000
    b574:	ldr	pc, [ip, #2984]!	; 0xba8

0000b578 <g_value_set_uint64@plt>:
    b578:	add	ip, pc, #0, 12
    b57c:	add	ip, ip, #90112	; 0x16000
    b580:	ldr	pc, [ip, #2976]!	; 0xba0

0000b584 <g_slist_append@plt>:
    b584:	add	ip, pc, #0, 12
    b588:	add	ip, ip, #90112	; 0x16000
    b58c:	ldr	pc, [ip, #2968]!	; 0xb98

0000b590 <g_string_set_size@plt>:
    b590:	add	ip, pc, #0, 12
    b594:	add	ip, ip, #90112	; 0x16000
    b598:	ldr	pc, [ip, #2960]!	; 0xb90

0000b59c <g_variant_new_int32@plt>:
    b59c:	add	ip, pc, #0, 12
    b5a0:	add	ip, ip, #90112	; 0x16000
    b5a4:	ldr	pc, [ip, #2952]!	; 0xb88

0000b5a8 <g_string_append_len@plt>:
    b5a8:	add	ip, pc, #0, 12
    b5ac:	add	ip, ip, #90112	; 0x16000
    b5b0:	ldr	pc, [ip, #2944]!	; 0xb80

0000b5b4 <g_variant_new_string@plt>:
    b5b4:	add	ip, pc, #0, 12
    b5b8:	add	ip, ip, #90112	; 0x16000
    b5bc:	ldr	pc, [ip, #2936]!	; 0xb78

0000b5c0 <g_value_get_char@plt>:
    b5c0:	add	ip, pc, #0, 12
    b5c4:	add	ip, ip, #90112	; 0x16000
    b5c8:	ldr	pc, [ip, #2928]!	; 0xb70

0000b5cc <g_io_channel_write_chars@plt>:
    b5cc:	add	ip, pc, #0, 12
    b5d0:	add	ip, ip, #90112	; 0x16000
    b5d4:	ldr	pc, [ip, #2920]!	; 0xb68

0000b5d8 <g_strdup_printf@plt>:
    b5d8:	add	ip, pc, #0, 12
    b5dc:	add	ip, ip, #90112	; 0x16000
    b5e0:	ldr	pc, [ip, #2912]!	; 0xb60

0000b5e4 <g_variant_new_array@plt>:
    b5e4:	add	ip, pc, #0, 12
    b5e8:	add	ip, ip, #90112	; 0x16000
    b5ec:	ldr	pc, [ip, #2904]!	; 0xb58

0000b5f0 <g_value_set_long@plt>:
    b5f0:	add	ip, pc, #0, 12
    b5f4:	add	ip, ip, #90112	; 0x16000
    b5f8:	ldr	pc, [ip, #2896]!	; 0xb50

0000b5fc <g_value_set_string@plt>:
    b5fc:	add	ip, pc, #0, 12
    b600:	add	ip, ip, #90112	; 0x16000
    b604:	ldr	pc, [ip, #2888]!	; 0xb48

0000b608 <g_string_free@plt>:
    b608:	add	ip, pc, #0, 12
    b60c:	add	ip, ip, #90112	; 0x16000
    b610:	ldr	pc, [ip, #2880]!	; 0xb40

0000b614 <dbus_signature_validate@plt>:
    b614:	add	ip, pc, #0, 12
    b618:	add	ip, ip, #90112	; 0x16000
    b61c:	ldr	pc, [ip, #2872]!	; 0xb38

0000b620 <g_value_copy@plt>:
    b620:	add	ip, pc, #0, 12
    b624:	add	ip, ip, #90112	; 0x16000
    b628:	ldr	pc, [ip, #2864]!	; 0xb30

0000b62c <g_ptr_array_free@plt>:
    b62c:	add	ip, pc, #0, 12
    b630:	add	ip, ip, #90112	; 0x16000
    b634:	ldr	pc, [ip, #2856]!	; 0xb28

0000b638 <g_type_fundamental@plt>:
    b638:	add	ip, pc, #0, 12
    b63c:	add	ip, ip, #90112	; 0x16000
    b640:	ldr	pc, [ip, #2848]!	; 0xb20

0000b644 <g_hash_table_new_full@plt>:
    b644:	add	ip, pc, #0, 12
    b648:	add	ip, ip, #90112	; 0x16000
    b64c:	ldr	pc, [ip, #2840]!	; 0xb18

0000b650 <g_hash_table_foreach@plt>:
    b650:	add	ip, pc, #0, 12
    b654:	add	ip, ip, #90112	; 0x16000
    b658:	ldr	pc, [ip, #2832]!	; 0xb10

0000b65c <g_value_set_double@plt>:
    b65c:	add	ip, pc, #0, 12
    b660:	add	ip, ip, #90112	; 0x16000
    b664:	ldr	pc, [ip, #2824]!	; 0xb08

0000b668 <g_type_init@plt>:
    b668:	add	ip, pc, #0, 12
    b66c:	add	ip, ip, #90112	; 0x16000
    b670:	ldr	pc, [ip, #2816]!	; 0xb00

0000b674 <strlen@plt>:
    b674:	add	ip, pc, #0, 12
    b678:	add	ip, ip, #90112	; 0x16000
    b67c:	ldr	pc, [ip, #2808]!	; 0xaf8

0000b680 <g_slist_prepend@plt>:
    b680:	add	ip, pc, #0, 12
    b684:	add	ip, ip, #90112	; 0x16000
    b688:	ldr	pc, [ip, #2800]!	; 0xaf0

0000b68c <g_value_set_float@plt>:
    b68c:	add	ip, pc, #0, 12
    b690:	add	ip, ip, #90112	; 0x16000
    b694:	ldr	pc, [ip, #2792]!	; 0xae8

0000b698 <unlink@plt>:
    b698:	add	ip, pc, #0, 12
    b69c:	add	ip, ip, #90112	; 0x16000
    b6a0:	ldr	pc, [ip, #2784]!	; 0xae0

0000b6a4 <g_value_set_uchar@plt>:
    b6a4:	add	ip, pc, #0, 12
    b6a8:	add	ip, ip, #90112	; 0x16000
    b6ac:	ldr	pc, [ip, #2776]!	; 0xad8

0000b6b0 <g_strdup_vprintf@plt>:
    b6b0:	add	ip, pc, #0, 12
    b6b4:	add	ip, ip, #90112	; 0x16000
    b6b8:	ldr	pc, [ip, #2768]!	; 0xad0

0000b6bc <g_value_array_copy@plt>:
    b6bc:	add	ip, pc, #0, 12
    b6c0:	add	ip, ip, #90112	; 0x16000
    b6c4:	ldr	pc, [ip, #2760]!	; 0xac8

0000b6c8 <g_slist_sort@plt>:
    b6c8:	add	ip, pc, #0, 12
    b6cc:	add	ip, ip, #90112	; 0x16000
    b6d0:	ldr	pc, [ip, #2752]!	; 0xac0

0000b6d4 <g_return_if_fail_warning@plt>:
    b6d4:	add	ip, pc, #0, 12
    b6d8:	add	ip, ip, #90112	; 0x16000
    b6dc:	ldr	pc, [ip, #2744]!	; 0xab8

0000b6e0 <g_type_register_static@plt>:
    b6e0:	add	ip, pc, #0, 12
    b6e4:	add	ip, ip, #90112	; 0x16000
    b6e8:	ldr	pc, [ip, #2736]!	; 0xab0

0000b6ec <g_set_error@plt>:
    b6ec:	add	ip, pc, #0, 12
    b6f0:	add	ip, ip, #90112	; 0x16000
    b6f4:	ldr	pc, [ip, #2728]!	; 0xaa8

0000b6f8 <g_variant_type_free@plt>:
    b6f8:	add	ip, pc, #0, 12
    b6fc:	add	ip, ip, #90112	; 0x16000
    b700:	ldr	pc, [ip, #2720]!	; 0xaa0

0000b704 <g_slist_find@plt>:
    b704:	add	ip, pc, #0, 12
    b708:	add	ip, ip, #90112	; 0x16000
    b70c:	ldr	pc, [ip, #2712]!	; 0xa98

0000b710 <g_value_get_object@plt>:
    b710:	add	ip, pc, #0, 12
    b714:	add	ip, ip, #90112	; 0x16000
    b718:	ldr	pc, [ip, #2704]!	; 0xa90

0000b71c <g_value_get_uint64@plt>:
    b71c:	add	ip, pc, #0, 12
    b720:	add	ip, ip, #90112	; 0x16000
    b724:	ldr	pc, [ip, #2696]!	; 0xa88

0000b728 <XML_GetCurrentLineNumber@plt>:
    b728:	add	ip, pc, #0, 12
    b72c:	add	ip, ip, #90112	; 0x16000
    b730:	ldr	pc, [ip, #2688]!	; 0xa80

0000b734 <__vfprintf_chk@plt>:
    b734:	add	ip, pc, #0, 12
    b738:	add	ip, ip, #90112	; 0x16000
    b73c:	ldr	pc, [ip, #2680]!	; 0xa78

0000b740 <g_variant_new_variant@plt>:
    b740:	add	ip, pc, #0, 12
    b744:	add	ip, ip, #90112	; 0x16000
    b748:	ldr	pc, [ip, #2672]!	; 0xa70

0000b74c <g_quark_from_static_string@plt>:
    b74c:	add	ip, pc, #0, 12
    b750:	add	ip, ip, #90112	; 0x16000
    b754:	ldr	pc, [ip, #2664]!	; 0xa68

0000b758 <g_once_impl@plt>:
    b758:	add	ip, pc, #0, 12
    b75c:	add	ip, ip, #90112	; 0x16000
    b760:	ldr	pc, [ip, #2656]!	; 0xa60

0000b764 <dbus_g_object_path_get_g_type@plt>:
    b764:	add	ip, pc, #0, 12
    b768:	add	ip, ip, #90112	; 0x16000
    b76c:	ldr	pc, [ip, #2648]!	; 0xa58

0000b770 <g_io_channel_read_chars@plt>:
    b770:	add	ip, pc, #0, 12
    b774:	add	ip, ip, #90112	; 0x16000
    b778:	ldr	pc, [ip, #2640]!	; 0xa50

0000b77c <g_file_open_tmp@plt>:
    b77c:	add	ip, pc, #0, 12
    b780:	add	ip, ip, #90112	; 0x16000
    b784:	ldr	pc, [ip, #2632]!	; 0xa48

0000b788 <fwrite@plt>:
    b788:	add	ip, pc, #0, 12
    b78c:	add	ip, ip, #90112	; 0x16000
    b790:	ldr	pc, [ip, #2624]!	; 0xa40

0000b794 <g_value_array_get_type@plt>:
    b794:	add	ip, pc, #0, 12
    b798:	add	ip, ip, #90112	; 0x16000
    b79c:	ldr	pc, [ip, #2616]!	; 0xa38

0000b7a0 <g_variant_new_object_path@plt>:
    b7a0:	add	ip, pc, #0, 12
    b7a4:	add	ip, ip, #90112	; 0x16000
    b7a8:	ldr	pc, [ip, #2608]!	; 0xa30

0000b7ac <dbus_signature_iter_init@plt>:
    b7ac:	add	ip, pc, #0, 12
    b7b0:	add	ip, ip, #90112	; 0x16000
    b7b4:	ldr	pc, [ip, #2600]!	; 0xa28

0000b7b8 <remove@plt>:
    b7b8:	add	ip, pc, #0, 12
    b7bc:	add	ip, ip, #90112	; 0x16000
    b7c0:	ldr	pc, [ip, #2592]!	; 0xa20

0000b7c4 <g_type_name@plt>:
    b7c4:	add	ip, pc, #0, 12
    b7c8:	add	ip, ip, #90112	; 0x16000
    b7cc:	ldr	pc, [ip, #2584]!	; 0xa18

0000b7d0 <g_variant_new_uint64@plt>:
    b7d0:	add	ip, pc, #0, 12
    b7d4:	add	ip, ip, #90112	; 0x16000
    b7d8:	ldr	pc, [ip, #2576]!	; 0xa10

0000b7dc <g_realloc@plt>:
    b7dc:	add	ip, pc, #0, 12
    b7e0:	add	ip, ip, #90112	; 0x16000
    b7e4:	ldr	pc, [ip, #2568]!	; 0xa08

0000b7e8 <g_strv_get_type@plt>:
    b7e8:	add	ip, pc, #0, 12
    b7ec:	add	ip, ip, #90112	; 0x16000
    b7f0:	ldr	pc, [ip, #2560]!	; 0xa00

0000b7f4 <dbus_signature_iter_recurse@plt>:
    b7f4:	add	ip, pc, #0, 12
    b7f8:	add	ip, ip, #90112	; 0x16000
    b7fc:	ldr	pc, [ip, #2552]!	; 0x9f8

0000b800 <g_hash_table_foreach_steal@plt>:
    b800:	add	ip, pc, #0, 12
    b804:	add	ip, ip, #90112	; 0x16000
    b808:	ldr	pc, [ip, #2544]!	; 0x9f0

0000b80c <g_slist_length@plt>:
    b80c:	add	ip, pc, #0, 12
    b810:	add	ip, ip, #90112	; 0x16000
    b814:	ldr	pc, [ip, #2536]!	; 0x9e8

0000b818 <XML_ErrorString@plt>:
    b818:	add	ip, pc, #0, 12
    b81c:	add	ip, ip, #90112	; 0x16000
    b820:	ldr	pc, [ip, #2528]!	; 0x9e0

0000b824 <__stack_chk_fail@plt>:
    b824:	add	ip, pc, #0, 12
    b828:	add	ip, ip, #90112	; 0x16000
    b82c:	ldr	pc, [ip, #2520]!	; 0x9d8

0000b830 <g_variant_new_tuple@plt>:
    b830:	add	ip, pc, #0, 12
    b834:	add	ip, ip, #90112	; 0x16000
    b838:	ldr	pc, [ip, #2512]!	; 0x9d0

0000b83c <g_string_new_len@plt>:
    b83c:	add	ip, pc, #0, 12
    b840:	add	ip, ip, #90112	; 0x16000
    b844:	ldr	pc, [ip, #2504]!	; 0x9c8

0000b848 <g_ascii_tolower@plt>:
    b848:	add	ip, pc, #0, 12
    b84c:	add	ip, ip, #90112	; 0x16000
    b850:	ldr	pc, [ip, #2496]!	; 0x9c0

0000b854 <fputc@plt>:
    b854:	add	ip, pc, #0, 12
    b858:	add	ip, ip, #90112	; 0x16000
    b85c:	ldr	pc, [ip, #2488]!	; 0x9b8

0000b860 <g_value_set_char@plt>:
    b860:	add	ip, pc, #0, 12
    b864:	add	ip, ip, #90112	; 0x16000
    b868:	ldr	pc, [ip, #2480]!	; 0x9b0

0000b86c <g_variant_new_byte@plt>:
    b86c:	add	ip, pc, #0, 12
    b870:	add	ip, ip, #90112	; 0x16000
    b874:	ldr	pc, [ip, #2472]!	; 0x9a8

0000b878 <dbus_signature_iter_get_current_type@plt>:
    b878:	add	ip, pc, #0, 12
    b87c:	add	ip, ip, #90112	; 0x16000
    b880:	ldr	pc, [ip, #2464]!	; 0x9a0

0000b884 <g_strsplit@plt>:
    b884:	add	ip, pc, #0, 12
    b888:	add	ip, ip, #90112	; 0x16000
    b88c:	ldr	pc, [ip, #2456]!	; 0x998

0000b890 <g_hash_table_lookup@plt>:
    b890:	add	ip, pc, #0, 12
    b894:	add	ip, ip, #90112	; 0x16000
    b898:	ldr	pc, [ip, #2448]!	; 0x990

0000b89c <g_value_take_boxed@plt>:
    b89c:	add	ip, pc, #0, 12
    b8a0:	add	ip, ip, #90112	; 0x16000
    b8a4:	ldr	pc, [ip, #2440]!	; 0x988

0000b8a8 <dbus_g_proxy_get_type@plt>:
    b8a8:	add	ip, pc, #0, 12
    b8ac:	add	ip, ip, #90112	; 0x16000
    b8b0:	ldr	pc, [ip, #2432]!	; 0x980

0000b8b4 <g_malloc0@plt>:
    b8b4:	add	ip, pc, #0, 12
    b8b8:	add	ip, ip, #90112	; 0x16000
    b8bc:	ldr	pc, [ip, #2424]!	; 0x978

0000b8c0 <XML_ParserFree@plt>:
    b8c0:	add	ip, pc, #0, 12
    b8c4:	add	ip, ip, #90112	; 0x16000
    b8c8:	ldr	pc, [ip, #2416]!	; 0x970

0000b8cc <g_value_init@plt>:
    b8cc:	add	ip, pc, #0, 12
    b8d0:	add	ip, ip, #90112	; 0x16000
    b8d4:	ldr	pc, [ip, #2408]!	; 0x968

0000b8d8 <g_value_set_static_boxed@plt>:
    b8d8:	add	ip, pc, #0, 12
    b8dc:	add	ip, ip, #90112	; 0x16000
    b8e0:	ldr	pc, [ip, #2400]!	; 0x960

0000b8e4 <g_string_insert_c@plt>:
    b8e4:	add	ip, pc, #0, 12
    b8e8:	add	ip, ip, #90112	; 0x16000
    b8ec:	ldr	pc, [ip, #2392]!	; 0x958

0000b8f0 <g_value_set_object@plt>:
    b8f0:	add	ip, pc, #0, 12
    b8f4:	add	ip, ip, #90112	; 0x16000
    b8f8:	ldr	pc, [ip, #2384]!	; 0x950

0000b8fc <puts@plt>:
    b8fc:	add	ip, pc, #0, 12
    b900:	add	ip, ip, #90112	; 0x16000
    b904:	ldr	pc, [ip, #2376]!	; 0x948

0000b908 <g_file_get_contents@plt>:
    b908:	add	ip, pc, #0, 12
    b90c:	add	ip, ip, #90112	; 0x16000
    b910:	ldr	pc, [ip, #2368]!	; 0x940

0000b914 <XML_SetElementHandler@plt>:
    b914:	add	ip, pc, #0, 12
    b918:	add	ip, ip, #90112	; 0x16000
    b91c:	ldr	pc, [ip, #2360]!	; 0x938

0000b920 <g_io_channel_unref@plt>:
    b920:	add	ip, pc, #0, 12
    b924:	add	ip, ip, #90112	; 0x16000
    b928:	ldr	pc, [ip, #2352]!	; 0x930

0000b92c <g_strerror@plt>:
    b92c:	add	ip, pc, #0, 12
    b930:	add	ip, ip, #90112	; 0x16000
    b934:	ldr	pc, [ip, #2344]!	; 0x928

0000b938 <g_value_get_ulong@plt>:
    b938:	add	ip, pc, #0, 12
    b93c:	add	ip, ip, #90112	; 0x16000
    b940:	ldr	pc, [ip, #2336]!	; 0x920

0000b944 <g_value_set_uint@plt>:
    b944:	add	ip, pc, #0, 12
    b948:	add	ip, ip, #90112	; 0x16000
    b94c:	ldr	pc, [ip, #2328]!	; 0x918

0000b950 <g_variant_new_int64@plt>:
    b950:	add	ip, pc, #0, 12
    b954:	add	ip, ip, #90112	; 0x16000
    b958:	ldr	pc, [ip, #2320]!	; 0x910

0000b95c <XML_Parse@plt>:
    b95c:	add	ip, pc, #0, 12
    b960:	add	ip, ip, #90112	; 0x16000
    b964:	ldr	pc, [ip, #2312]!	; 0x908

0000b968 <g_hash_table_unref@plt>:
    b968:	add	ip, pc, #0, 12
    b96c:	add	ip, ip, #90112	; 0x16000
    b970:	ldr	pc, [ip, #2304]!	; 0x900

0000b974 <g_variant_new_uint32@plt>:
    b974:	add	ip, pc, #0, 12
    b978:	add	ip, ip, #90112	; 0x16000
    b97c:	ldr	pc, [ip, #2296]!	; 0x8f8

0000b980 <g_value_get_uchar@plt>:
    b980:	add	ip, pc, #0, 12
    b984:	add	ip, ip, #90112	; 0x16000
    b988:	ldr	pc, [ip, #2288]!	; 0x8f0

0000b98c <g_warn_message@plt>:
    b98c:	add	ip, pc, #0, 12
    b990:	add	ip, ip, #90112	; 0x16000
    b994:	ldr	pc, [ip, #2280]!	; 0x8e8

0000b998 <g_value_take_object@plt>:
    b998:	add	ip, pc, #0, 12
    b99c:	add	ip, ip, #90112	; 0x16000
    b9a0:	ldr	pc, [ip, #2272]!	; 0x8e0

0000b9a4 <g_strfreev@plt>:
    b9a4:	add	ip, pc, #0, 12
    b9a8:	add	ip, ip, #90112	; 0x16000
    b9ac:	ldr	pc, [ip, #2264]!	; 0x8d8

0000b9b0 <g_value_array_get_nth@plt>:
    b9b0:	add	ip, pc, #0, 12
    b9b4:	add	ip, ip, #90112	; 0x16000
    b9b8:	ldr	pc, [ip, #2256]!	; 0x8d0

0000b9bc <g_type_check_value_holds@plt>:
    b9bc:	add	ip, pc, #0, 12
    b9c0:	add	ip, ip, #90112	; 0x16000
    b9c4:	ldr	pc, [ip, #2248]!	; 0x8c8

0000b9c8 <g_ptr_array_new@plt>:
    b9c8:	add	ip, pc, #0, 12
    b9cc:	add	ip, ip, #90112	; 0x16000
    b9d0:	ldr	pc, [ip, #2240]!	; 0x8c0

0000b9d4 <g_value_get_int@plt>:
    b9d4:	add	ip, pc, #0, 12
    b9d8:	add	ip, ip, #90112	; 0x16000
    b9dc:	ldr	pc, [ip, #2232]!	; 0x8b8

0000b9e0 <g_value_array_new@plt>:
    b9e0:	add	ip, pc, #0, 12
    b9e4:	add	ip, ip, #90112	; 0x16000
    b9e8:	ldr	pc, [ip, #2224]!	; 0x8b0

0000b9ec <g_value_get_int64@plt>:
    b9ec:	add	ip, pc, #0, 12
    b9f0:	add	ip, ip, #90112	; 0x16000
    b9f4:	ldr	pc, [ip, #2216]!	; 0x8a8

0000b9f8 <g_type_check_value@plt>:
    b9f8:	add	ip, pc, #0, 12
    b9fc:	add	ip, ip, #90112	; 0x16000
    ba00:	ldr	pc, [ip, #2208]!	; 0x8a0

0000ba04 <g_value_set_ulong@plt>:
    ba04:	add	ip, pc, #0, 12
    ba08:	add	ip, ip, #90112	; 0x16000
    ba0c:	ldr	pc, [ip, #2200]!	; 0x898

0000ba10 <strncmp@plt>:
    ba10:	add	ip, pc, #0, 12
    ba14:	add	ip, ip, #90112	; 0x16000
    ba18:	ldr	pc, [ip, #2192]!	; 0x890

0000ba1c <_IO_putc@plt>:
    ba1c:	add	ip, pc, #0, 12
    ba20:	add	ip, ip, #90112	; 0x16000
    ba24:	ldr	pc, [ip, #2184]!	; 0x888

0000ba28 <XML_SetCharacterDataHandler@plt>:
    ba28:	add	ip, pc, #0, 12
    ba2c:	add	ip, ip, #90112	; 0x16000
    ba30:	ldr	pc, [ip, #2176]!	; 0x880

0000ba34 <g_array_append_vals@plt>:
    ba34:	add	ip, pc, #0, 12
    ba38:	add	ip, ip, #90112	; 0x16000
    ba3c:	ldr	pc, [ip, #2168]!	; 0x878

0000ba40 <g_string_append@plt>:
    ba40:	add	ip, pc, #0, 12
    ba44:	add	ip, ip, #90112	; 0x16000
    ba48:	ldr	pc, [ip, #2160]!	; 0x870

0000ba4c <g_string_append_printf@plt>:
    ba4c:	add	ip, pc, #0, 12
    ba50:	add	ip, ip, #90112	; 0x16000
    ba54:	ldr	pc, [ip, #2152]!	; 0x868

0000ba58 <g_log@plt>:
    ba58:	add	ip, pc, #0, 12
    ba5c:	add	ip, ip, #90112	; 0x16000
    ba60:	ldr	pc, [ip, #2144]!	; 0x860

0000ba64 <strcmp@plt>:
    ba64:	add	ip, pc, #0, 12
    ba68:	add	ip, ip, #90112	; 0x16000
    ba6c:	ldr	pc, [ip, #2136]!	; 0x858

0000ba70 <g_str_equal@plt>:
    ba70:	add	ip, pc, #0, 12
    ba74:	add	ip, ip, #90112	; 0x16000
    ba78:	ldr	pc, [ip, #2128]!	; 0x850

0000ba7c <g_type_get_qdata@plt>:
    ba7c:	add	ip, pc, #0, 12
    ba80:	add	ip, ip, #90112	; 0x16000
    ba84:	ldr	pc, [ip, #2120]!	; 0x848

0000ba88 <exit@plt>:
    ba88:	add	ip, pc, #0, 12
    ba8c:	add	ip, ip, #90112	; 0x16000
    ba90:	ldr	pc, [ip, #2112]!	; 0x840

0000ba94 <__errno_location@plt>:
    ba94:	add	ip, pc, #0, 12
    ba98:	add	ip, ip, #90112	; 0x16000
    ba9c:	ldr	pc, [ip, #2104]!	; 0x838

0000baa0 <dbus_g_signature_get_g_type@plt>:
    baa0:	add	ip, pc, #0, 12
    baa4:	add	ip, ip, #90112	; 0x16000
    baa8:	ldr	pc, [ip, #2096]!	; 0x830

0000baac <g_boxed_type_register_static@plt>:
    baac:	add	ip, pc, #0, 12
    bab0:	add	ip, ip, #90112	; 0x16000
    bab4:	ldr	pc, [ip, #2088]!	; 0x828

0000bab8 <g_markup_error_quark@plt>:
    bab8:	add	ip, pc, #0, 12
    babc:	add	ip, ip, #90112	; 0x16000
    bac0:	ldr	pc, [ip, #2080]!	; 0x820

Disassembly of section .text:

0000bac4 <dbus_g_type_specialized_init@@Base-0x4194>:
    bac4:	push	{r4, r5, r6, r7, r8, r9, lr}
    bac8:	movw	r9, #8992	; 0x2320
    bacc:	movt	r9, #2
    bad0:	sub	sp, sp, #28
    bad4:	mov	r8, r1
    bad8:	mov	r7, r2
    badc:	ldr	ip, [r9]
    bae0:	mov	r5, r3
    bae4:	str	r3, [sp]
    bae8:	movw	r1, #29024	; 0x7160
    baec:	mvn	r2, #0
    baf0:	movt	r1, #1
    baf4:	add	r3, sp, #12
    baf8:	str	ip, [sp, #20]
    bafc:	mov	r6, r0
    bb00:	bl	b5cc <g_io_channel_write_chars@plt>
    bb04:	cmp	r0, #0
    bb08:	movne	r4, #0
    bb0c:	beq	bb9c <g_markup_error_quark@plt+0xe4>
    bb10:	ldr	r3, [r7]
    bb14:	cmp	r4, r3
    bb18:	bcs	bb78 <g_markup_error_quark@plt+0xc0>
    bb1c:	ldr	ip, [r8]
    bb20:	add	r1, ip, r4
    bb24:	ldrb	r3, [ip, r4]
    bb28:	str	r5, [sp]
    bb2c:	cmp	r3, #0
    bb30:	beq	bb54 <g_markup_error_quark@plt+0x9c>
    bb34:	mov	r0, r6
    bb38:	mov	r2, #1
    bb3c:	mov	r3, #0
    bb40:	bl	b5cc <g_io_channel_write_chars@plt>
    bb44:	cmp	r0, #0
    bb48:	bne	bb70 <g_markup_error_quark@plt+0xb8>
    bb4c:	mov	r0, #0
    bb50:	b	bb9c <g_markup_error_quark@plt+0xe4>
    bb54:	movw	r1, #28528	; 0x6f70
    bb58:	mov	r0, r6
    bb5c:	movt	r1, #1
    bb60:	mvn	r2, #0
    bb64:	bl	b5cc <g_io_channel_write_chars@plt>
    bb68:	cmp	r0, #0
    bb6c:	beq	bb4c <g_markup_error_quark@plt+0x94>
    bb70:	add	r4, r4, #1
    bb74:	b	bb10 <g_markup_error_quark@plt+0x58>
    bb78:	str	r5, [sp]
    bb7c:	mov	r0, r6
    bb80:	movw	r1, #28532	; 0x6f74
    bb84:	mvn	r2, #0
    bb88:	movt	r1, #1
    bb8c:	add	r3, sp, #16
    bb90:	bl	b5cc <g_io_channel_write_chars@plt>
    bb94:	adds	r0, r0, #0
    bb98:	movne	r0, #1
    bb9c:	ldr	r2, [sp, #20]
    bba0:	ldr	r3, [r9]
    bba4:	cmp	r2, r3
    bba8:	beq	bbb0 <g_markup_error_quark@plt+0xf8>
    bbac:	bl	b824 <__stack_chk_fail@plt>
    bbb0:	add	sp, sp, #28
    bbb4:	pop	{r4, r5, r6, r7, r8, r9, pc}
    bbb8:	movw	r2, #8992	; 0x2320
    bbbc:	movt	r2, #2
    bbc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bbc4:	sub	sp, sp, #228	; 0xe4
    bbc8:	ldr	r3, [r2]
    bbcc:	mov	r7, r0
    bbd0:	str	r2, [sp, #20]
    bbd4:	mov	r5, r1
    bbd8:	str	r3, [sp, #220]	; 0xdc
    bbdc:	bl	b668 <g_type_init@plt>
    bbe0:	cmp	r7, #1
    bbe4:	mov	r3, #0
    bbe8:	ble	c0ec <g_markup_error_quark@plt+0x634>
    bbec:	str	r3, [sp, #12]
    bbf0:	movw	r3, #31044	; 0x7944
    bbf4:	movt	r3, #1
    bbf8:	str	r3, [sp, #28]
    bbfc:	mov	r3, #0
    bc00:	mov	r4, #1
    bc04:	str	r3, [sp, #16]
    bc08:	mov	r8, r3
    bc0c:	mov	r9, r3
    bc10:	str	r3, [sp, #24]
    bc14:	str	r3, [sp, #8]
    bc18:	mov	fp, r3
    bc1c:	b	bc9c <g_markup_error_quark@plt+0x1e4>
    bc20:	movw	r1, #32360	; 0x7e68
    bc24:	mov	r0, sl
    bc28:	movt	r1, #1
    bc2c:	mov	r2, #7
    bc30:	bl	ba10 <strncmp@plt>
    bc34:	cmp	r0, #0
    bc38:	bne	bee8 <g_markup_error_quark@plt+0x430>
    bc3c:	add	r6, sl, #7
    bc40:	movw	r1, #32368	; 0x7e70
    bc44:	movt	r1, #1
    bc48:	mov	r0, r6
    bc4c:	bl	ba64 <strcmp@plt>
    bc50:	cmp	r0, #0
    bc54:	beq	bf54 <g_markup_error_quark@plt+0x49c>
    bc58:	movw	r1, #32376	; 0x7e78
    bc5c:	mov	r0, r6
    bc60:	movt	r1, #1
    bc64:	bl	ba64 <strcmp@plt>
    bc68:	cmp	r0, #0
    bc6c:	beq	bf6c <g_markup_error_quark@plt+0x4b4>
    bc70:	mov	r0, r6
    bc74:	movw	r1, #32388	; 0x7e84
    bc78:	movt	r1, #1
    bc7c:	bl	ba64 <strcmp@plt>
    bc80:	cmp	r0, #0
    bc84:	bne	c014 <g_markup_error_quark@plt+0x55c>
    bc88:	mov	r3, #3
    bc8c:	str	r3, [sp, #8]
    bc90:	add	r4, r4, #1
    bc94:	cmp	r4, r7
    bc98:	beq	bd24 <g_markup_error_quark@plt+0x26c>
    bc9c:	cmp	r8, #0
    bca0:	ldr	sl, [r5, #4]!
    bca4:	bne	beb8 <g_markup_error_quark@plt+0x400>
    bca8:	movw	r1, #32112	; 0x7d70
    bcac:	mov	r0, sl
    bcb0:	movt	r1, #1
    bcb4:	bl	ba64 <strcmp@plt>
    bcb8:	cmp	r0, #0
    bcbc:	beq	bee0 <g_markup_error_quark@plt+0x428>
    bcc0:	ldrb	r6, [sl]
    bcc4:	cmp	r6, #45	; 0x2d
    bcc8:	bne	bce4 <g_markup_error_quark@plt+0x22c>
    bccc:	ldrb	r2, [sl, #1]
    bcd0:	cmp	r2, #104	; 0x68
    bcd4:	bne	becc <g_markup_error_quark@plt+0x414>
    bcd8:	ldrb	r2, [sl, #2]
    bcdc:	cmp	r2, #0
    bce0:	beq	bee0 <g_markup_error_quark@plt+0x428>
    bce4:	movw	r1, #32120	; 0x7d78
    bce8:	mov	r0, sl
    bcec:	movt	r1, #1
    bcf0:	bl	ba64 <strcmp@plt>
    bcf4:	cmp	r0, #0
    bcf8:	beq	c1dc <g_markup_error_quark@plt+0x724>
    bcfc:	movw	r1, #32352	; 0x7e60
    bd00:	mov	r0, sl
    bd04:	movt	r1, #1
    bd08:	bl	ba64 <strcmp@plt>
    bd0c:	cmp	r0, #0
    bd10:	bne	bc20 <g_markup_error_quark@plt+0x168>
    bd14:	add	r4, r4, #1
    bd18:	mov	fp, #1
    bd1c:	cmp	r4, r7
    bd20:	bne	bc9c <g_markup_error_quark@plt+0x1e4>
    bd24:	ldr	r1, [sp, #12]
    bd28:	ldr	sl, [sp, #8]
    bd2c:	eor	r6, r1, #1
    bd30:	cmp	sl, #2
    bd34:	movne	r6, #0
    bd38:	andeq	r6, r6, #1
    bd3c:	cmp	r6, #0
    bd40:	bne	c014 <g_markup_error_quark@plt+0x55c>
    bd44:	ldr	r2, [sp, #24]
    bd48:	mov	r0, r9
    bd4c:	str	fp, [sp, #4]
    bd50:	adds	r8, r2, #0
    bd54:	str	r6, [sp, #32]
    bd58:	movne	r8, #1
    bd5c:	bl	b38c <g_slist_reverse@plt>
    bd60:	ldr	r3, [sp, #4]
    bd64:	eor	fp, r3, #1
    bd68:	tst	r8, fp
    bd6c:	mov	r4, r0
    bd70:	bne	bf78 <g_markup_error_quark@plt+0x4c0>
    bd74:	cmp	r8, #0
    bd78:	beq	c120 <g_markup_error_quark@plt+0x668>
    bd7c:	mov	r2, #0
    bd80:	movw	r1, #32472	; 0x7ed8
    bd84:	ldr	r0, [sp, #24]
    bd88:	movt	r1, #1
    bd8c:	add	r3, sp, #32
    bd90:	str	r3, [sp, #8]
    bd94:	bl	b41c <g_strconcat@plt>
    bd98:	ldr	r2, [sp, #8]
    bd9c:	movw	r1, #32480	; 0x7ee0
    bda0:	movt	r1, #1
    bda4:	mov	r7, r0
    bda8:	bl	b4a0 <g_io_channel_new_file@plt>
    bdac:	subs	r6, r0, #0
    bdb0:	beq	c194 <g_markup_error_quark@plt+0x6dc>
    bdb4:	mov	r0, r6
    bdb8:	mov	r1, #0
    bdbc:	ldr	r2, [sp, #8]
    bdc0:	bl	b2f0 <g_io_channel_set_encoding@plt>
    bdc4:	cmp	r0, #0
    bdc8:	beq	c0a8 <g_markup_error_quark@plt+0x5f0>
    bdcc:	cmp	r4, #0
    bdd0:	beq	c070 <g_markup_error_quark@plt+0x5b8>
    bdd4:	ldr	r9, [sp, #16]
    bdd8:	mov	r5, #0
    bddc:	ldr	fp, [sp, #28]
    bde0:	str	r7, [sp, #12]
    bde4:	str	r8, [sp, #16]
    bde8:	b	be18 <g_markup_error_quark@plt+0x360>
    bdec:	cmp	sl, #3
    bdf0:	beq	c01c <g_markup_error_quark@plt+0x564>
    bdf4:	cmp	sl, #1
    bdf8:	bne	be04 <g_markup_error_quark@plt+0x34c>
    bdfc:	mov	r1, #0
    be00:	bl	f4fc <g_markup_error_quark@plt+0x3a44>
    be04:	mov	r0, r8
    be08:	bl	14fcc <base_info_ref@@Base+0x96c>
    be0c:	ldr	r4, [r4, #4]
    be10:	cmp	r4, #0
    be14:	beq	c068 <g_markup_error_quark@plt+0x5b0>
    be18:	ldr	r7, [r4]
    be1c:	add	r1, sp, #36	; 0x24
    be20:	str	r5, [sp, #36]	; 0x24
    be24:	mov	r0, r7
    be28:	bl	156d0 <base_info_unref@@Base+0x624>
    be2c:	subs	r8, r0, #0
    be30:	beq	c0c8 <g_markup_error_quark@plt+0x610>
    be34:	cmp	sl, #2
    be38:	bne	bdec <g_markup_error_quark@plt+0x334>
    be3c:	mov	r1, r6
    be40:	mov	r2, fp
    be44:	add	r3, sp, #36	; 0x24
    be48:	bl	ec8c <g_markup_error_quark@plt+0x31d4>
    be4c:	cmp	r0, #0
    be50:	bne	be04 <g_markup_error_quark@plt+0x34c>
    be54:	ldr	r3, [sp, #36]	; 0x24
    be58:	movw	r0, #32484	; 0x7ee4
    be5c:	movw	r1, #32588	; 0x7f4c
    be60:	movt	r0, #1
    be64:	movt	r1, #1
    be68:	ldr	r7, [sp, #12]
    be6c:	ldr	r2, [r3, #8]
    be70:	bl	f800 <g_markup_error_quark@plt+0x3d48>
    be74:	mov	r0, r8
    be78:	bl	14fcc <base_info_ref@@Base+0x96c>
    be7c:	cmp	r6, #0
    be80:	beq	be9c <g_markup_error_quark@plt+0x3e4>
    be84:	mov	r1, #0
    be88:	mov	r0, r6
    be8c:	mov	r2, r1
    be90:	bl	b29c <g_io_channel_shutdown@plt>
    be94:	mov	r0, r6
    be98:	bl	b920 <g_io_channel_unref@plt>
    be9c:	cmp	r7, #0
    bea0:	beq	bfe0 <g_markup_error_quark@plt+0x528>
    bea4:	mov	r0, r7
    bea8:	bl	b7b8 <remove@plt>
    beac:	b	bfe0 <g_markup_error_quark@plt+0x528>
    beb0:	cmp	r6, #45	; 0x2d
    beb4:	beq	c008 <g_markup_error_quark@plt+0x550>
    beb8:	mov	r0, r9
    bebc:	mov	r1, sl
    bec0:	bl	b680 <g_slist_prepend@plt>
    bec4:	mov	r9, r0
    bec8:	b	bc90 <g_markup_error_quark@plt+0x1d8>
    becc:	cmp	r2, #63	; 0x3f
    bed0:	bne	bce4 <g_markup_error_quark@plt+0x22c>
    bed4:	ldrb	r2, [sl, #2]
    bed8:	cmp	r2, #0
    bedc:	bne	bce4 <g_markup_error_quark@plt+0x22c>
    bee0:	mov	r0, #0
    bee4:	bl	f46c <g_markup_error_quark@plt+0x39b4>
    bee8:	movw	r1, #32400	; 0x7e90
    beec:	mov	r0, sl
    bef0:	movt	r1, #1
    bef4:	bl	ba64 <strcmp@plt>
    bef8:	cmp	r0, #0
    befc:	beq	bf60 <g_markup_error_quark@plt+0x4a8>
    bf00:	mov	r0, sl
    bf04:	movw	r1, #32424	; 0x7ea8
    bf08:	mov	r2, #9
    bf0c:	movt	r1, #1
    bf10:	bl	ba10 <strncmp@plt>
    bf14:	cmp	r0, #0
    bf18:	addeq	sl, sl, #9
    bf1c:	streq	sl, [sp, #24]
    bf20:	beq	bc90 <g_markup_error_quark@plt+0x1d8>
    bf24:	movw	r1, #32436	; 0x7eb4
    bf28:	mov	r0, sl
    bf2c:	movt	r1, #1
    bf30:	mov	r2, #9
    bf34:	bl	ba10 <strncmp@plt>
    bf38:	cmp	r0, #0
    bf3c:	bne	beb0 <g_markup_error_quark@plt+0x3f8>
    bf40:	add	sl, sl, #9
    bf44:	mov	r3, #1
    bf48:	str	sl, [sp, #28]
    bf4c:	str	r3, [sp, #12]
    bf50:	b	bc90 <g_markup_error_quark@plt+0x1d8>
    bf54:	mov	r3, #1
    bf58:	str	r3, [sp, #8]
    bf5c:	b	bc90 <g_markup_error_quark@plt+0x1d8>
    bf60:	mov	r3, #1
    bf64:	str	r3, [sp, #16]
    bf68:	b	bc90 <g_markup_error_quark@plt+0x1d8>
    bf6c:	mov	r3, #2
    bf70:	str	r3, [sp, #8]
    bf74:	b	bc90 <g_markup_error_quark@plt+0x1d8>
    bf78:	cmp	r0, #0
    bf7c:	beq	c038 <g_markup_error_quark@plt+0x580>
    bf80:	mov	r7, r0
    bf84:	b	bfa0 <g_markup_error_quark@plt+0x4e8>
    bf88:	ldr	r7, [r7, #4]
    bf8c:	ldr	r3, [sp, #104]	; 0x68
    bf90:	cmp	r6, r3
    bf94:	movlt	r6, r3
    bf98:	cmp	r7, #0
    bf9c:	beq	c03c <g_markup_error_quark@plt+0x584>
    bfa0:	ldr	r5, [r7]
    bfa4:	mov	r0, #3
    bfa8:	add	r2, sp, #40	; 0x28
    bfac:	mov	r1, r5
    bfb0:	bl	b308 <__xstat@plt>
    bfb4:	cmp	r0, #0
    bfb8:	bge	bf88 <g_markup_error_quark@plt+0x4d0>
    bfbc:	bl	ba94 <__errno_location@plt>
    bfc0:	mov	r7, #0
    bfc4:	ldr	r0, [r0]
    bfc8:	bl	b92c <g_strerror@plt>
    bfcc:	mov	r1, r5
    bfd0:	mov	r2, r0
    bfd4:	movw	r0, #32448	; 0x7ec0
    bfd8:	movt	r0, #1
    bfdc:	bl	f800 <g_markup_error_quark@plt+0x3d48>
    bfe0:	mov	r0, r7
    bfe4:	bl	b248 <g_free@plt>
    bfe8:	mov	r0, #1
    bfec:	ldr	r1, [sp, #20]
    bff0:	ldr	r2, [sp, #220]	; 0xdc
    bff4:	ldr	r3, [r1]
    bff8:	cmp	r2, r3
    bffc:	bne	c208 <g_markup_error_quark@plt+0x750>
    c000:	add	sp, sp, #228	; 0xe4
    c004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c008:	ldrb	r2, [sl, #1]
    c00c:	cmp	r2, #45	; 0x2d
    c010:	beq	c148 <g_markup_error_quark@plt+0x690>
    c014:	mov	r0, #1
    c018:	bl	f46c <g_markup_error_quark@plt+0x39b4>
    c01c:	mov	r1, r6
    c020:	mov	r2, r9
    c024:	add	r3, sp, #36	; 0x24
    c028:	bl	f270 <g_markup_error_quark@plt+0x37b8>
    c02c:	cmp	r0, #0
    c030:	bne	be04 <g_markup_error_quark@plt+0x34c>
    c034:	b	be54 <g_markup_error_quark@plt+0x39c>
    c038:	mov	r6, r0
    c03c:	mov	r0, #3
    c040:	ldr	r1, [sp, #24]
    c044:	add	r2, sp, #128	; 0x80
    c048:	bl	b308 <__xstat@plt>
    c04c:	cmp	r0, #0
    c050:	ble	bd7c <g_markup_error_quark@plt+0x2c4>
    c054:	ldr	r3, [sp, #192]	; 0xc0
    c058:	cmp	r3, r6
    c05c:	blt	bd7c <g_markup_error_quark@plt+0x2c4>
    c060:	mov	r0, #0
    c064:	bl	ba88 <exit@plt>
    c068:	ldr	r7, [sp, #12]
    c06c:	ldr	r8, [sp, #16]
    c070:	ldr	r2, [sp, #8]
    c074:	mov	r0, r6
    c078:	mov	r1, #1
    c07c:	bl	b29c <g_io_channel_shutdown@plt>
    c080:	cmp	r0, #1
    c084:	beq	c15c <g_markup_error_quark@plt+0x6a4>
    c088:	ldr	r3, [sp, #32]
    c08c:	movw	r0, #32484	; 0x7ee4
    c090:	movw	r1, #32608	; 0x7f60
    c094:	movt	r0, #1
    c098:	movt	r1, #1
    c09c:	ldr	r2, [r3, #8]
    c0a0:	bl	f800 <g_markup_error_quark@plt+0x3d48>
    c0a4:	b	be7c <g_markup_error_quark@plt+0x3c4>
    c0a8:	ldr	r3, [sp, #32]
    c0ac:	movw	r0, #32484	; 0x7ee4
    c0b0:	movw	r1, #32524	; 0x7f0c
    c0b4:	movt	r0, #1
    c0b8:	movt	r1, #1
    c0bc:	ldr	r2, [r3, #8]
    c0c0:	bl	f800 <g_markup_error_quark@plt+0x3d48>
    c0c4:	b	be7c <g_markup_error_quark@plt+0x3c4>
    c0c8:	ldr	r2, [sp, #36]	; 0x24
    c0cc:	mov	r9, r7
    c0d0:	mov	r1, r9
    c0d4:	movw	r0, #32564	; 0x7f34
    c0d8:	movt	r0, #1
    c0dc:	ldr	r7, [sp, #12]
    c0e0:	ldr	r2, [r2, #8]
    c0e4:	bl	f800 <g_markup_error_quark@plt+0x3d48>
    c0e8:	b	be7c <g_markup_error_quark@plt+0x3c4>
    c0ec:	mov	r0, r3
    c0f0:	movw	r2, #31044	; 0x7944
    c0f4:	str	r3, [sp, #16]
    c0f8:	str	r3, [sp, #32]
    c0fc:	str	r2, [sp, #28]
    c100:	bl	b38c <g_slist_reverse@plt>
    c104:	ldr	r8, [sp, #16]
    c108:	ldr	r3, [sp, #28]
    c10c:	mov	sl, r8
    c110:	movt	r3, #1
    c114:	str	r8, [sp, #24]
    c118:	str	r3, [sp, #28]
    c11c:	mov	r4, r0
    c120:	movw	r3, #8996	; 0x2324
    c124:	movt	r3, #2
    c128:	add	r1, sp, #32
    c12c:	str	r1, [sp, #8]
    c130:	ldr	r0, [r3]
    c134:	mov	r7, #0
    c138:	bl	b290 <fileno@plt>
    c13c:	bl	b35c <g_io_channel_unix_new@plt>
    c140:	mov	r6, r0
    c144:	b	bdb4 <g_markup_error_quark@plt+0x2fc>
    c148:	ldrb	r3, [sl, #2]
    c14c:	cmp	r3, #0
    c150:	bne	c014 <g_markup_error_quark@plt+0x55c>
    c154:	mov	r8, #1
    c158:	b	bc90 <g_markup_error_quark@plt+0x1d8>
    c15c:	mov	r0, r6
    c160:	bl	b920 <g_io_channel_unref@plt>
    c164:	cmp	r8, #0
    c168:	moveq	r0, r8
    c16c:	beq	bfec <g_markup_error_quark@plt+0x534>
    c170:	mov	r0, r7
    c174:	ldr	r1, [sp, #24]
    c178:	bl	b3c8 <rename@plt>
    c17c:	cmp	r0, #0
    c180:	blt	c1b4 <g_markup_error_quark@plt+0x6fc>
    c184:	mov	r0, r7
    c188:	bl	b248 <g_free@plt>
    c18c:	mov	r0, #0
    c190:	b	bfec <g_markup_error_quark@plt+0x534>
    c194:	ldr	r3, [sp, #32]
    c198:	movw	r0, #32484	; 0x7ee4
    c19c:	movw	r1, #32492	; 0x7eec
    c1a0:	movt	r0, #1
    c1a4:	movt	r1, #1
    c1a8:	ldr	r2, [r3, #8]
    c1ac:	bl	f800 <g_markup_error_quark@plt+0x3d48>
    c1b0:	b	be9c <g_markup_error_quark@plt+0x3e4>
    c1b4:	bl	ba94 <__errno_location@plt>
    c1b8:	ldr	r0, [r0]
    c1bc:	bl	b92c <g_strerror@plt>
    c1c0:	ldr	r2, [sp, #24]
    c1c4:	mov	r1, r7
    c1c8:	mov	r3, r0
    c1cc:	movw	r0, #32640	; 0x7f80
    c1d0:	movt	r0, #1
    c1d4:	bl	f800 <g_markup_error_quark@plt+0x3d48>
    c1d8:	b	be9c <g_markup_error_quark@plt+0x3e4>
    c1dc:	mov	ip, r0
    c1e0:	movw	r1, #32132	; 0x7d84
    c1e4:	movw	r2, #32344	; 0x7e58
    c1e8:	movt	r1, #1
    c1ec:	movt	r2, #1
    c1f0:	mov	r0, #1
    c1f4:	str	ip, [sp, #4]
    c1f8:	bl	b3ec <__printf_chk@plt>
    c1fc:	ldr	ip, [sp, #4]
    c200:	mov	r0, ip
    c204:	bl	ba88 <exit@plt>
    c208:	bl	b824 <__stack_chk_fail@plt>
    c20c:	mov	fp, #0
    c210:	mov	lr, #0
    c214:	pop	{r1}		; (ldr r1, [sp], #4)
    c218:	mov	r2, sp
    c21c:	push	{r2}		; (str r2, [sp, #-4]!)
    c220:	push	{r0}		; (str r0, [sp, #-4]!)
    c224:	ldr	ip, [pc, #16]	; c23c <g_markup_error_quark@plt+0x784>
    c228:	push	{ip}		; (str ip, [sp, #-4]!)
    c22c:	ldr	r0, [pc, #12]	; c240 <g_markup_error_quark@plt+0x788>
    c230:	ldr	r3, [pc, #12]	; c244 <g_markup_error_quark@plt+0x78c>
    c234:	bl	b320 <__libc_start_main@plt>
    c238:	bl	b2b4 <abort@plt>
    c23c:	andeq	r6, r1, r0, lsr #23
    c240:			; <UNDEFINED> instruction: 0x0000bbb8
    c244:	andeq	r6, r1, ip, lsr fp
    c248:	ldr	r3, [pc, #20]	; c264 <g_markup_error_quark@plt+0x7ac>
    c24c:	ldr	r2, [pc, #20]	; c268 <g_markup_error_quark@plt+0x7b0>
    c250:	add	r3, pc, r3
    c254:	ldr	r2, [r3, r2]
    c258:	cmp	r2, #0
    c25c:	bxeq	lr
    c260:	b	b380 <__gmon_start__@plt>
    c264:	andeq	r5, r1, r8, lsr #27
    c268:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c26c:	push	{r3, lr}
    c270:	movw	r0, #8988	; 0x231c
    c274:	ldr	r3, [pc, #36]	; c2a0 <g_markup_error_quark@plt+0x7e8>
    c278:	movt	r0, #2
    c27c:	rsb	r3, r0, r3
    c280:	cmp	r3, #6
    c284:	popls	{r3, pc}
    c288:	movw	r3, #0
    c28c:	movt	r3, #0
    c290:	cmp	r3, #0
    c294:	popeq	{r3, pc}
    c298:	blx	r3
    c29c:	pop	{r3, pc}
    c2a0:	andeq	r2, r2, pc, lsl r3
    c2a4:	push	{r3, lr}
    c2a8:	movw	r0, #8988	; 0x231c
    c2ac:	movw	r3, #8988	; 0x231c
    c2b0:	movt	r0, #2
    c2b4:	movt	r3, #2
    c2b8:	rsb	r3, r0, r3
    c2bc:	asr	r3, r3, #2
    c2c0:	add	r3, r3, r3, lsr #31
    c2c4:	asrs	r1, r3, #1
    c2c8:	popeq	{r3, pc}
    c2cc:	movw	r2, #0
    c2d0:	movt	r2, #0
    c2d4:	cmp	r2, #0
    c2d8:	popeq	{r3, pc}
    c2dc:	blx	r2
    c2e0:	pop	{r3, pc}
    c2e4:	push	{r4, lr}
    c2e8:	movw	r4, #9004	; 0x232c
    c2ec:	movt	r4, #2
    c2f0:	ldrb	r3, [r4]
    c2f4:	cmp	r3, #0
    c2f8:	popne	{r4, pc}
    c2fc:	bl	c26c <g_markup_error_quark@plt+0x7b4>
    c300:	mov	r3, #1
    c304:	strb	r3, [r4]
    c308:	pop	{r4, pc}
    c30c:	movw	r0, #7640	; 0x1dd8
    c310:	movt	r0, #2
    c314:	push	{r3, lr}
    c318:	ldr	r3, [r0]
    c31c:	cmp	r3, #0
    c320:	beq	c338 <g_markup_error_quark@plt+0x880>
    c324:	movw	r3, #0
    c328:	movt	r3, #0
    c32c:	cmp	r3, #0
    c330:	beq	c338 <g_markup_error_quark@plt+0x880>
    c334:	blx	r3
    c338:	pop	{r3, lr}
    c33c:	b	c2a4 <g_markup_error_quark@plt+0x7ec>
    c340:	push	{r4, r5, lr}
    c344:	movw	r4, #8992	; 0x2320
    c348:	movt	r4, #2
    c34c:	ldr	r3, [r2, #12]
    c350:	mov	r5, r2
    c354:	sub	sp, sp, #20
    c358:	ldr	r2, [r4]
    c35c:	cmp	r3, #0
    c360:	str	r2, [sp, #12]
    c364:	beq	c38c <g_markup_error_quark@plt+0x8d4>
    c368:	ldr	r2, [r3]
    c36c:	cmp	r2, #0
    c370:	beq	c38c <g_markup_error_quark@plt+0x8d4>
    c374:	ldr	r2, [sp, #12]
    c378:	ldr	r3, [r4]
    c37c:	cmp	r2, r3
    c380:	bne	c3d4 <g_markup_error_quark@plt+0x91c>
    c384:	add	sp, sp, #20
    c388:	pop	{r4, r5, pc}
    c38c:	ldr	ip, [r5, #8]
    c390:	mov	r1, r0
    c394:	str	r3, [sp]
    c398:	mvn	r2, #0
    c39c:	add	r3, sp, #8
    c3a0:	mov	r0, ip
    c3a4:	bl	b5cc <g_io_channel_write_chars@plt>
    c3a8:	cmp	r0, #1
    c3ac:	bne	c374 <g_markup_error_quark@plt+0x8bc>
    c3b0:	ldr	ip, [r5, #12]
    c3b4:	add	r3, sp, #8
    c3b8:	ldr	r0, [r5, #8]
    c3bc:	movw	r1, #30172	; 0x75dc
    c3c0:	mvn	r2, #0
    c3c4:	movt	r1, #1
    c3c8:	str	ip, [sp]
    c3cc:	bl	b5cc <g_io_channel_write_chars@plt>
    c3d0:	b	c374 <g_markup_error_quark@plt+0x8bc>
    c3d4:	bl	b824 <__stack_chk_fail@plt>
    c3d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c3dc:	movw	r5, #8992	; 0x2320
    c3e0:	movt	r5, #2
    c3e4:	sub	sp, sp, #36	; 0x24
    c3e8:	mov	r9, r1
    c3ec:	movw	r1, #27880	; 0x6ce8
    c3f0:	ldr	ip, [r5]
    c3f4:	movt	r1, #1
    c3f8:	mov	sl, r2
    c3fc:	str	r3, [sp, #16]
    c400:	mov	r7, r0
    c404:	str	ip, [sp, #28]
    c408:	bl	14ad4 <base_info_ref@@Base+0x474>
    c40c:	mov	r2, #4
    c410:	adds	r8, r0, #0
    c414:	mov	r0, #1
    c418:	mov	r1, r0
    c41c:	movne	r8, #1
    c420:	bl	b428 <g_array_new@plt>
    c424:	cmp	r8, #0
    c428:	mov	r4, r0
    c42c:	bne	c4c4 <g_markup_error_quark@plt+0xa0c>
    c430:	mov	r0, r7
    c434:	bl	14adc <base_info_ref@@Base+0x47c>
    c438:	subs	r6, r0, #0
    c43c:	bne	c45c <g_markup_error_quark@plt+0x9a4>
    c440:	mov	r3, #1
    c444:	str	r3, [sp, #20]
    c448:	mov	r3, #20
    c44c:	b	c4d0 <g_markup_error_quark@plt+0xa18>
    c450:	ldr	r6, [r6, #4]
    c454:	cmp	r6, #0
    c458:	beq	c440 <g_markup_error_quark@plt+0x988>
    c45c:	ldr	fp, [r6]
    c460:	movw	r1, #27912	; 0x6d08
    c464:	movt	r1, #1
    c468:	mov	r0, fp
    c46c:	bl	151e8 <base_info_unref@@Base+0x13c>
    c470:	subs	r2, r0, #0
    c474:	beq	c450 <g_markup_error_quark@plt+0x998>
    c478:	mov	r0, fp
    c47c:	str	r2, [sp, #12]
    c480:	bl	1516c <base_info_unref@@Base+0xc0>
    c484:	mov	r1, #0
    c488:	mov	r6, r0
    c48c:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    c490:	ldr	r2, [sp, #12]
    c494:	subs	r3, r0, #0
    c498:	bne	c620 <g_markup_error_quark@plt+0xb68>
    c49c:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    c4a0:	str	r6, [sp]
    c4a4:	movw	r3, #27956	; 0x6d34
    c4a8:	mov	r2, #0
    c4ac:	movt	r3, #1
    c4b0:	mov	r1, r0
    c4b4:	ldr	r0, [sp, #16]
    c4b8:	bl	b6ec <g_set_error@plt>
    c4bc:	mov	r0, #0
    c4c0:	b	c56c <g_markup_error_quark@plt+0xab4>
    c4c4:	mov	r3, #0
    c4c8:	str	r3, [sp, #20]
    c4cc:	mov	r3, #4
    c4d0:	str	r3, [r9]
    c4d4:	mov	r0, r7
    c4d8:	bl	14adc <base_info_ref@@Base+0x47c>
    c4dc:	subs	r9, r0, #0
    c4e0:	bne	c4f4 <g_markup_error_quark@plt+0xa3c>
    c4e4:	b	c544 <g_markup_error_quark@plt+0xa8c>
    c4e8:	ldr	r9, [r9, #4]
    c4ec:	cmp	r9, #0
    c4f0:	beq	c544 <g_markup_error_quark@plt+0xa8c>
    c4f4:	ldr	r6, [r9]
    c4f8:	mov	r0, r6
    c4fc:	bl	15174 <base_info_unref@@Base+0xc8>
    c500:	subs	fp, r0, #0
    c504:	bne	c4e8 <g_markup_error_quark@plt+0xa30>
    c508:	mov	r0, r6
    c50c:	bl	1516c <base_info_unref@@Base+0xc0>
    c510:	mov	r1, fp
    c514:	mov	r6, r0
    c518:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    c51c:	cmp	r0, #0
    c520:	str	r0, [sp, #24]
    c524:	beq	c49c <g_markup_error_quark@plt+0x9e4>
    c528:	mov	r0, r4
    c52c:	add	r1, sp, #24
    c530:	mov	r2, #1
    c534:	bl	ba34 <g_array_append_vals@plt>
    c538:	ldr	r9, [r9, #4]
    c53c:	cmp	r9, #0
    c540:	bne	c4f4 <g_markup_error_quark@plt+0xa3c>
    c544:	cmp	r8, #0
    c548:	beq	c584 <g_markup_error_quark@plt+0xacc>
    c54c:	add	r1, sp, #32
    c550:	mov	r3, #68	; 0x44
    c554:	mov	r0, r4
    c558:	mov	r2, #1
    c55c:	str	r3, [r1, #-8]!
    c560:	bl	ba34 <g_array_append_vals@plt>
    c564:	mov	r0, #1
    c568:	str	r4, [sl]
    c56c:	ldr	r2, [sp, #28]
    c570:	ldr	r3, [r5]
    c574:	cmp	r2, r3
    c578:	bne	c648 <g_markup_error_quark@plt+0xb90>
    c57c:	add	sp, sp, #36	; 0x24
    c580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c584:	mov	r0, r7
    c588:	bl	14adc <base_info_ref@@Base+0x47c>
    c58c:	subs	r7, r0, #0
    c590:	movne	r8, #68	; 0x44
    c594:	bne	c5a8 <g_markup_error_quark@plt+0xaf0>
    c598:	b	c610 <g_markup_error_quark@plt+0xb58>
    c59c:	ldr	r7, [r7, #4]
    c5a0:	cmp	r7, #0
    c5a4:	beq	c610 <g_markup_error_quark@plt+0xb58>
    c5a8:	ldr	r6, [r7]
    c5ac:	movw	r1, #27912	; 0x6d08
    c5b0:	movt	r1, #1
    c5b4:	mov	r0, r6
    c5b8:	bl	151e8 <base_info_unref@@Base+0x13c>
    c5bc:	subs	r9, r0, #0
    c5c0:	bne	c59c <g_markup_error_quark@plt+0xae4>
    c5c4:	mov	r0, r6
    c5c8:	bl	15174 <base_info_unref@@Base+0xc8>
    c5cc:	cmp	r0, #1
    c5d0:	mov	fp, r0
    c5d4:	bne	c59c <g_markup_error_quark@plt+0xae4>
    c5d8:	mov	r0, r6
    c5dc:	bl	1516c <base_info_unref@@Base+0xc0>
    c5e0:	mov	r1, r9
    c5e4:	mov	r6, r0
    c5e8:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    c5ec:	cmp	r0, #0
    c5f0:	str	r0, [sp, #24]
    c5f4:	beq	c49c <g_markup_error_quark@plt+0x9e4>
    c5f8:	mov	r2, fp
    c5fc:	mov	r0, r4
    c600:	add	r1, sp, #24
    c604:	str	r8, [sp, #24]
    c608:	bl	ba34 <g_array_append_vals@plt>
    c60c:	b	c59c <g_markup_error_quark@plt+0xae4>
    c610:	ldr	r3, [sp, #20]
    c614:	cmp	r3, #0
    c618:	beq	c564 <g_markup_error_quark@plt+0xaac>
    c61c:	b	c54c <g_markup_error_quark@plt+0xa94>
    c620:	mov	r0, r2
    c624:	movw	r1, #27948	; 0x6d2c
    c628:	movt	r1, #1
    c62c:	str	r3, [sp, #12]
    c630:	bl	ba64 <strcmp@plt>
    c634:	ldr	r3, [sp, #12]
    c638:	rsbs	r0, r0, #1
    c63c:	movcc	r0, #0
    c640:	str	r0, [sp, #20]
    c644:	b	c4d0 <g_markup_error_quark@plt+0xa18>
    c648:	bl	b824 <__stack_chk_fail@plt>
    c64c:	push	{r3, r4, r5, lr}
    c650:	mov	r5, r0
    c654:	mov	r0, r1
    c658:	bl	14a60 <base_info_ref@@Base+0x400>
    c65c:	bl	11a20 <dbus_g_value_build_g_variant@@Base+0x59c>
    c660:	mov	r1, r5
    c664:	mov	r2, r0
    c668:	mov	r4, r0
    c66c:	movw	r0, #28024	; 0x6d78
    c670:	movt	r0, #1
    c674:	bl	b5d8 <g_strdup_printf@plt>
    c678:	mov	r5, r0
    c67c:	mov	r0, r4
    c680:	bl	b248 <g_free@plt>
    c684:	mov	r0, r5
    c688:	pop	{r3, r4, r5, pc}
    c68c:	push	{r2, r3}
    c690:	push	{r4, r5, r6, r7, lr}
    c694:	movw	r4, #8992	; 0x2320
    c698:	movt	r4, #2
    c69c:	sub	sp, sp, #28
    c6a0:	add	r3, sp, #52	; 0x34
    c6a4:	mov	r7, r1
    c6a8:	ldr	r2, [r4]
    c6ac:	mov	r1, r3
    c6b0:	ldr	r6, [sp, #48]	; 0x30
    c6b4:	str	r3, [sp, #12]
    c6b8:	str	r2, [sp, #20]
    c6bc:	bl	b6b0 <g_strdup_vprintf@plt>
    c6c0:	mvn	r2, #0
    c6c4:	add	r3, sp, #16
    c6c8:	str	r6, [sp]
    c6cc:	mov	r5, r0
    c6d0:	mov	r0, r7
    c6d4:	mov	r1, r5
    c6d8:	bl	b5cc <g_io_channel_write_chars@plt>
    c6dc:	mov	r6, r0
    c6e0:	mov	r0, r5
    c6e4:	bl	b248 <g_free@plt>
    c6e8:	ldr	r2, [sp, #20]
    c6ec:	subs	r1, r6, #1
    c6f0:	ldr	r3, [r4]
    c6f4:	rsbs	r0, r1, #0
    c6f8:	adcs	r0, r0, r1
    c6fc:	cmp	r2, r3
    c700:	bne	c714 <g_markup_error_quark@plt+0xc5c>
    c704:	add	sp, sp, #28
    c708:	pop	{r4, r5, r6, r7, lr}
    c70c:	add	sp, sp, #8
    c710:	bx	lr
    c714:	bl	b824 <__stack_chk_fail@plt>
    c718:	sub	r3, r0, #12
    c71c:	push	{r4, r5, r6, r7, r8, lr}
    c720:	mov	r4, r0
    c724:	cmp	r3, #52	; 0x34
    c728:	ldrls	pc, [pc, r3, lsl #2]
    c72c:	b	c8c4 <g_markup_error_quark@plt+0xe0c>
    c730:	andeq	ip, r0, r4, lsl r8
    c734:	andeq	ip, r0, r4, asr #17
    c738:	andeq	ip, r0, r4, asr #17
    c73c:	andeq	ip, r0, r4, asr #17
    c740:	andeq	ip, r0, r4, lsr #16
    c744:	andeq	ip, r0, r4, asr #17
    c748:	andeq	ip, r0, r4, asr #17
    c74c:	andeq	ip, r0, r4, asr #17
    c750:	andeq	ip, r0, r4, lsr r8
    c754:	andeq	ip, r0, r4, asr #17
    c758:	andeq	ip, r0, r4, asr #17
    c75c:	andeq	ip, r0, r4, asr #17
    c760:	andeq	ip, r0, r4, asr #16
    c764:	andeq	ip, r0, r4, asr #17
    c768:	andeq	ip, r0, r4, asr #17
    c76c:	andeq	ip, r0, r4, asr #17
    c770:	andeq	ip, r0, r4, asr r8
    c774:	andeq	ip, r0, r4, asr #17
    c778:	andeq	ip, r0, r4, asr #17
    c77c:	andeq	ip, r0, r4, asr #17
    c780:	andeq	ip, r0, r4, ror #16
    c784:	andeq	ip, r0, r4, asr #17
    c788:	andeq	ip, r0, r4, asr #17
    c78c:	andeq	ip, r0, r4, asr #17
    c790:	andeq	ip, r0, r4, ror r8
    c794:	andeq	ip, r0, r4, asr #17
    c798:	andeq	ip, r0, r4, asr #17
    c79c:	andeq	ip, r0, r4, asr #17
    c7a0:	andeq	ip, r0, r4, lsl #17
    c7a4:	andeq	ip, r0, r4, asr #17
    c7a8:	andeq	ip, r0, r4, asr #17
    c7ac:	andeq	ip, r0, r4, asr #17
    c7b0:	muleq	r0, r4, r8
    c7b4:	andeq	ip, r0, r4, asr #17
    c7b8:	andeq	ip, r0, r4, asr #17
    c7bc:	andeq	ip, r0, r4, asr #17
    c7c0:	andeq	ip, r0, r4, asr #17
    c7c4:	andeq	ip, r0, r4, asr #17
    c7c8:	andeq	ip, r0, r4, asr #17
    c7cc:	andeq	ip, r0, r4, asr #17
    c7d0:	andeq	ip, r0, r4, asr #17
    c7d4:	andeq	ip, r0, r4, asr #17
    c7d8:	andeq	ip, r0, r4, asr #17
    c7dc:	andeq	ip, r0, r4, asr #17
    c7e0:	andeq	ip, r0, r4, lsr #17
    c7e4:	andeq	ip, r0, r4, asr #17
    c7e8:	andeq	ip, r0, r4, asr #17
    c7ec:	andeq	ip, r0, r4, asr #17
    c7f0:			; <UNDEFINED> instruction: 0x0000c8b4
    c7f4:	andeq	ip, r0, r4, asr #17
    c7f8:	andeq	ip, r0, r4, asr #17
    c7fc:	andeq	ip, r0, r4, asr #17
    c800:	andeq	ip, r0, r4, lsl #16
    c804:	movw	r0, #28192	; 0x6e20
    c808:	movt	r0, #1
    c80c:	pop	{r4, r5, r6, r7, r8, lr}
    c810:	b	b3a4 <g_strdup@plt>
    c814:	movw	r0, #28032	; 0x6d80
    c818:	movt	r0, #1
    c81c:	pop	{r4, r5, r6, r7, r8, lr}
    c820:	b	b3a4 <g_strdup@plt>
    c824:	movw	r0, #28044	; 0x6d8c
    c828:	movt	r0, #1
    c82c:	pop	{r4, r5, r6, r7, r8, lr}
    c830:	b	b3a4 <g_strdup@plt>
    c834:	movw	r0, #28060	; 0x6d9c
    c838:	movt	r0, #1
    c83c:	pop	{r4, r5, r6, r7, r8, lr}
    c840:	b	b3a4 <g_strdup@plt>
    c844:	movw	r0, #28104	; 0x6dc8
    c848:	movt	r0, #1
    c84c:	pop	{r4, r5, r6, r7, r8, lr}
    c850:	b	b3a4 <g_strdup@plt>
    c854:	movw	r0, #28116	; 0x6dd4
    c858:	movt	r0, #1
    c85c:	pop	{r4, r5, r6, r7, r8, lr}
    c860:	b	b3a4 <g_strdup@plt>
    c864:	movw	r0, #28076	; 0x6dac
    c868:	movt	r0, #1
    c86c:	pop	{r4, r5, r6, r7, r8, lr}
    c870:	b	b3a4 <g_strdup@plt>
    c874:	movw	r0, #28088	; 0x6db8
    c878:	movt	r0, #1
    c87c:	pop	{r4, r5, r6, r7, r8, lr}
    c880:	b	b3a4 <g_strdup@plt>
    c884:	movw	r0, #28128	; 0x6de0
    c888:	movt	r0, #1
    c88c:	pop	{r4, r5, r6, r7, r8, lr}
    c890:	b	b3a4 <g_strdup@plt>
    c894:	movw	r0, #28144	; 0x6df0
    c898:	movt	r0, #1
    c89c:	pop	{r4, r5, r6, r7, r8, lr}
    c8a0:	b	b3a4 <g_strdup@plt>
    c8a4:	movw	r0, #28160	; 0x6e00
    c8a8:	movt	r0, #1
    c8ac:	pop	{r4, r5, r6, r7, r8, lr}
    c8b0:	b	b3a4 <g_strdup@plt>
    c8b4:	movw	r0, #28176	; 0x6e10
    c8b8:	movt	r0, #1
    c8bc:	pop	{r4, r5, r6, r7, r8, lr}
    c8c0:	b	b3a4 <g_strdup@plt>
    c8c4:	bl	10274 <dbus_g_type_is_collection@@Base>
    c8c8:	cmp	r0, #0
    c8cc:	mov	r0, r4
    c8d0:	bne	c948 <g_markup_error_quark@plt+0xe90>
    c8d4:	bl	10300 <dbus_g_type_is_map@@Base>
    c8d8:	subs	r5, r0, #0
    c8dc:	mov	r0, r4
    c8e0:	bne	c994 <g_markup_error_quark@plt+0xedc>
    c8e4:	bl	10390 <dbus_g_type_is_struct@@Base>
    c8e8:	subs	r6, r0, #0
    c8ec:	bne	c9f0 <g_markup_error_quark@plt+0xf38>
    c8f0:	bl	b554 <g_value_get_type@plt>
    c8f4:	cmp	r4, r0
    c8f8:	beq	ca74 <g_markup_error_quark@plt+0xfbc>
    c8fc:	bl	b7e8 <g_strv_get_type@plt>
    c900:	cmp	r4, r0
    c904:	beq	ca84 <g_markup_error_quark@plt+0xfcc>
    c908:	bl	b794 <g_value_array_get_type@plt>
    c90c:	cmp	r4, r0
    c910:	beq	ca94 <g_markup_error_quark@plt+0xfdc>
    c914:	bl	b8a8 <dbus_g_proxy_get_type@plt>
    c918:	cmp	r4, r0
    c91c:	beq	caa4 <g_markup_error_quark@plt+0xfec>
    c920:	bl	b764 <dbus_g_object_path_get_g_type@plt>
    c924:	cmp	r4, r0
    c928:	beq	cab4 <g_markup_error_quark@plt+0xffc>
    c92c:	bl	baa0 <dbus_g_signature_get_g_type@plt>
    c930:	cmp	r4, r0
    c934:	bne	ca6c <g_markup_error_quark@plt+0xfb4>
    c938:	movw	r0, #28504	; 0x6f58
    c93c:	movt	r0, #1
    c940:	pop	{r4, r5, r6, r7, r8, lr}
    c944:	b	b3a4 <g_strdup@plt>
    c948:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
    c94c:	mov	r5, r0
    c950:	bl	c718 <g_markup_error_quark@plt+0xc60>
    c954:	mov	r4, r0
    c958:	mov	r0, r5
    c95c:	bl	1377c <dbus_g_value_build_g_variant@@Base+0x22f8>
    c960:	cmp	r0, #0
    c964:	movwne	r0, #28208	; 0x6e30
    c968:	movweq	r0, #28252	; 0x6e5c
    c96c:	movne	r1, r4
    c970:	movtne	r0, #1
    c974:	moveq	r1, r4
    c978:	movteq	r0, #1
    c97c:	bl	b5d8 <g_strdup_printf@plt>
    c980:	mov	r5, r0
    c984:	mov	r0, r4
    c988:	bl	b248 <g_free@plt>
    c98c:	mov	r0, r5
    c990:	pop	{r4, r5, r6, r7, r8, pc}
    c994:	bl	1046c <dbus_g_type_get_map_key_specialization@@Base>
    c998:	mov	r6, r0
    c99c:	mov	r0, r4
    c9a0:	bl	104b8 <dbus_g_type_get_map_value_specialization@@Base>
    c9a4:	mov	r5, r0
    c9a8:	mov	r0, r6
    c9ac:	bl	c718 <g_markup_error_quark@plt+0xc60>
    c9b0:	mov	r4, r0
    c9b4:	mov	r0, r5
    c9b8:	bl	c718 <g_markup_error_quark@plt+0xc60>
    c9bc:	mov	r1, r4
    c9c0:	mov	r2, r0
    c9c4:	mov	r5, r0
    c9c8:	movw	r0, #28300	; 0x6e8c
    c9cc:	movt	r0, #1
    c9d0:	bl	b5d8 <g_strdup_printf@plt>
    c9d4:	mov	r6, r0
    c9d8:	mov	r0, r4
    c9dc:	bl	b248 <g_free@plt>
    c9e0:	mov	r0, r5
    c9e4:	bl	b248 <g_free@plt>
    c9e8:	mov	r0, r6
    c9ec:	pop	{r4, r5, r6, r7, r8, pc}
    c9f0:	movw	r0, #28344	; 0x6eb8
    c9f4:	movt	r0, #1
    c9f8:	bl	b4d0 <g_string_new@plt>
    c9fc:	mov	r7, r0
    ca00:	mov	r0, r4
    ca04:	bl	10554 <dbus_g_type_get_struct_size@@Base>
    ca08:	subs	r8, r0, #0
    ca0c:	beq	ca4c <g_markup_error_quark@plt+0xf94>
    ca10:	mov	r1, r5
    ca14:	mov	r0, r4
    ca18:	bl	10504 <dbus_g_type_get_struct_member_type@@Base>
    ca1c:	add	r5, r5, #1
    ca20:	bl	c718 <g_markup_error_quark@plt+0xc60>
    ca24:	movw	r1, #28404	; 0x6ef4
    ca28:	movt	r1, #1
    ca2c:	mov	r6, r0
    ca30:	mov	r0, r7
    ca34:	mov	r2, r6
    ca38:	bl	ba4c <g_string_append_printf@plt>
    ca3c:	mov	r0, r6
    ca40:	bl	b248 <g_free@plt>
    ca44:	cmp	r5, r8
    ca48:	bne	ca10 <g_markup_error_quark@plt+0xf58>
    ca4c:	mov	r0, r7
    ca50:	movw	r1, #28384	; 0x6ee0
    ca54:	movt	r1, #1
    ca58:	bl	ba40 <g_string_append@plt>
    ca5c:	mov	r0, r7
    ca60:	mov	r1, #0
    ca64:	pop	{r4, r5, r6, r7, r8, lr}
    ca68:	b	b608 <g_string_free@plt>
    ca6c:	mov	r0, r6
    ca70:	pop	{r4, r5, r6, r7, r8, pc}
    ca74:	movw	r0, #28412	; 0x6efc
    ca78:	movt	r0, #1
    ca7c:	pop	{r4, r5, r6, r7, r8, lr}
    ca80:	b	b3a4 <g_strdup@plt>
    ca84:	movw	r0, #28428	; 0x6f0c
    ca88:	movt	r0, #1
    ca8c:	pop	{r4, r5, r6, r7, r8, lr}
    ca90:	b	b3a4 <g_strdup@plt>
    ca94:	movw	r0, #28440	; 0x6f18
    ca98:	movt	r0, #1
    ca9c:	pop	{r4, r5, r6, r7, r8, lr}
    caa0:	b	b3a4 <g_strdup@plt>
    caa4:	movw	r0, #28460	; 0x6f2c
    caa8:	movt	r0, #1
    caac:	pop	{r4, r5, r6, r7, r8, lr}
    cab0:	b	b3a4 <g_strdup@plt>
    cab4:	movw	r0, #28480	; 0x6f40
    cab8:	movt	r0, #1
    cabc:	pop	{r4, r5, r6, r7, r8, lr}
    cac0:	b	b3a4 <g_strdup@plt>
    cac4:	push	{r4, lr}
    cac8:	mov	r4, r0
    cacc:	bl	10390 <dbus_g_type_is_struct@@Base>
    cad0:	cmp	r0, #0
    cad4:	beq	cae4 <g_markup_error_quark@plt+0x102c>
    cad8:	movw	r0, #28552	; 0x6f88
    cadc:	movt	r0, #1
    cae0:	pop	{r4, pc}
    cae4:	mov	r0, r4
    cae8:	bl	10274 <dbus_g_type_is_collection@@Base>
    caec:	cmp	r0, #0
    caf0:	mov	r0, r4
    caf4:	bne	cb10 <g_markup_error_quark@plt+0x1058>
    caf8:	bl	10300 <dbus_g_type_is_map@@Base>
    cafc:	cmp	r0, #0
    cb00:	beq	cb38 <g_markup_error_quark@plt+0x1080>
    cb04:	movw	r0, #28584	; 0x6fa8
    cb08:	movt	r0, #1
    cb0c:	pop	{r4, pc}
    cb10:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
    cb14:	bl	1377c <dbus_g_value_build_g_variant@@Base+0x22f8>
    cb18:	movw	r2, #28572	; 0x6f9c
    cb1c:	movw	r3, #28564	; 0x6f94
    cb20:	movt	r2, #1
    cb24:	movt	r3, #1
    cb28:	cmp	r0, #0
    cb2c:	moveq	r0, r2
    cb30:	movne	r0, r3
    cb34:	pop	{r4, pc}
    cb38:	mov	r0, r4
    cb3c:	mov	r1, #64	; 0x40
    cb40:	bl	b470 <g_type_is_a@plt>
    cb44:	cmp	r0, #0
    cb48:	beq	cb58 <g_markup_error_quark@plt+0x10a0>
    cb4c:	movw	r0, #28536	; 0x6f78
    cb50:	movt	r0, #1
    cb54:	pop	{r4, pc}
    cb58:	bl	b7e8 <g_strv_get_type@plt>
    cb5c:	mov	r1, r0
    cb60:	mov	r0, r4
    cb64:	bl	b470 <g_type_is_a@plt>
    cb68:	cmp	r0, #0
    cb6c:	bne	cb4c <g_markup_error_quark@plt+0x1094>
    cb70:	bl	b764 <dbus_g_object_path_get_g_type@plt>
    cb74:	mov	r1, r0
    cb78:	mov	r0, r4
    cb7c:	bl	b470 <g_type_is_a@plt>
    cb80:	cmp	r0, #0
    cb84:	beq	cb94 <g_markup_error_quark@plt+0x10dc>
    cb88:	movw	r0, #28544	; 0x6f80
    cb8c:	movt	r0, #1
    cb90:	pop	{r4, pc}
    cb94:	bl	baa0 <dbus_g_signature_get_g_type@plt>
    cb98:	mov	r1, r0
    cb9c:	mov	r0, r4
    cba0:	bl	b470 <g_type_is_a@plt>
    cba4:	cmp	r0, #0
    cba8:	bne	cb88 <g_markup_error_quark@plt+0x10d0>
    cbac:	mov	r0, r4
    cbb0:	pop	{r4, lr}
    cbb4:	b	b7c4 <g_type_name@plt>
    cbb8:	push	{r4, r5, r6, r7, r8, r9, lr}
    cbbc:	sub	sp, sp, #12
    cbc0:	mov	r9, r1
    cbc4:	mov	r6, r2
    cbc8:	mov	r8, r3
    cbcc:	bl	14adc <base_info_ref@@Base+0x47c>
    cbd0:	subs	r4, r0, #0
    cbd4:	bne	cbe8 <g_markup_error_quark@plt+0x1130>
    cbd8:	b	cc64 <g_markup_error_quark@plt+0x11ac>
    cbdc:	ldr	r4, [r4, #4]
    cbe0:	cmp	r4, #0
    cbe4:	beq	cc64 <g_markup_error_quark@plt+0x11ac>
    cbe8:	ldr	r5, [r4]
    cbec:	mov	r0, r5
    cbf0:	bl	15174 <base_info_unref@@Base+0xc8>
    cbf4:	cmp	r0, r6
    cbf8:	bne	cbdc <g_markup_error_quark@plt+0x1124>
    cbfc:	mov	r0, r5
    cc00:	bl	1516c <base_info_unref@@Base+0xc0>
    cc04:	mov	r1, #1
    cc08:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    cc0c:	bl	c718 <g_markup_error_quark@plt+0xc60>
    cc10:	cmp	r6, #0
    cc14:	mov	r7, r0
    cc18:	mov	r0, r5
    cc1c:	beq	cc70 <g_markup_error_quark@plt+0x11b8>
    cc20:	cmp	r6, #1
    cc24:	bne	cc50 <g_markup_error_quark@plt+0x1198>
    cc28:	bl	15164 <base_info_unref@@Base+0xb8>
    cc2c:	mov	r1, r9
    cc30:	mov	r2, r8
    cc34:	mov	r3, r7
    cc38:	str	r0, [sp]
    cc3c:	movw	r0, #28608	; 0x6fc0
    cc40:	movt	r0, #1
    cc44:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    cc48:	cmp	r0, #0
    cc4c:	beq	cc98 <g_markup_error_quark@plt+0x11e0>
    cc50:	mov	r0, r7
    cc54:	bl	b248 <g_free@plt>
    cc58:	ldr	r4, [r4, #4]
    cc5c:	cmp	r4, #0
    cc60:	bne	cbe8 <g_markup_error_quark@plt+0x1130>
    cc64:	mov	r0, #1
    cc68:	add	sp, sp, #12
    cc6c:	pop	{r4, r5, r6, r7, r8, r9, pc}
    cc70:	bl	15164 <base_info_unref@@Base+0xb8>
    cc74:	mov	r1, r9
    cc78:	mov	r2, r8
    cc7c:	mov	r3, r7
    cc80:	str	r0, [sp]
    cc84:	movw	r0, #28596	; 0x6fb4
    cc88:	movt	r0, #1
    cc8c:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    cc90:	cmp	r0, #0
    cc94:	bne	cc50 <g_markup_error_quark@plt+0x1198>
    cc98:	mov	r0, r7
    cc9c:	bl	b248 <g_free@plt>
    cca0:	mov	r0, #0
    cca4:	b	cc68 <g_markup_error_quark@plt+0x11b0>
    cca8:	push	{r4, r5, r6, r7, r8, lr}
    ccac:	mov	r2, #0
    ccb0:	movw	r1, #28624	; 0x6fd0
    ccb4:	movt	r1, #1
    ccb8:	bl	b884 <g_strsplit@plt>
    ccbc:	mov	r6, r0
    ccc0:	movw	r0, #31044	; 0x7944
    ccc4:	movt	r0, #1
    ccc8:	bl	b4d0 <g_string_new@plt>
    cccc:	ldr	r3, [r6]
    ccd0:	cmp	r3, #0
    ccd4:	subne	r5, r6, #4
    ccd8:	movne	r8, #95	; 0x5f
    ccdc:	movne	r7, #0
    cce0:	mov	r4, r0
    cce4:	beq	cd40 <g_markup_error_quark@plt+0x1288>
    cce8:	ldr	r1, [r5, #4]!
    ccec:	mov	r0, r4
    ccf0:	bl	ba40 <g_string_append@plt>
    ccf4:	ldr	r3, [r5, #4]
    ccf8:	cmp	r3, #0
    ccfc:	beq	cd40 <g_markup_error_quark@plt+0x1288>
    cd00:	ldr	r3, [r4, #4]
    cd04:	ldr	r1, [r4, #8]
    cd08:	add	r2, r3, #1
    cd0c:	cmp	r2, r1
    cd10:	bcs	cd2c <g_markup_error_quark@plt+0x1274>
    cd14:	ldr	r1, [r4]
    cd18:	str	r2, [r4, #4]
    cd1c:	strb	r8, [r1, r3]
    cd20:	ldm	r4, {r2, r3}
    cd24:	strb	r7, [r2, r3]
    cd28:	b	cce8 <g_markup_error_quark@plt+0x1230>
    cd2c:	mov	r0, r4
    cd30:	mvn	r1, #0
    cd34:	mov	r2, #95	; 0x5f
    cd38:	bl	b8e4 <g_string_insert_c@plt>
    cd3c:	b	cce8 <g_markup_error_quark@plt+0x1230>
    cd40:	mov	r0, r6
    cd44:	bl	b9a4 <g_strfreev@plt>
    cd48:	mov	r0, r4
    cd4c:	mov	r1, #0
    cd50:	pop	{r4, r5, r6, r7, r8, lr}
    cd54:	b	b608 <g_string_free@plt>
    cd58:	movw	ip, #8992	; 0x2320
    cd5c:	movt	ip, #2
    cd60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cd64:	sub	sp, sp, #68	; 0x44
    cd68:	ldr	r3, [ip]
    cd6c:	mov	r4, r2
    cd70:	str	ip, [sp, #32]
    cd74:	str	r1, [sp, #36]	; 0x24
    cd78:	str	r0, [sp, #28]
    cd7c:	str	r3, [sp, #60]	; 0x3c
    cd80:	bl	146dc <base_info_ref@@Base+0x7c>
    cd84:	cmp	r0, #0
    cd88:	ldr	r0, [sp, #28]
    cd8c:	bne	ce04 <g_markup_error_quark@plt+0x134c>
    cd90:	bl	147dc <base_info_ref@@Base+0x17c>
    cd94:	subs	r5, r0, #0
    cd98:	beq	cdc4 <g_markup_error_quark@plt+0x130c>
    cd9c:	ldr	r6, [sp, #36]	; 0x24
    cda0:	ldr	r0, [r5]
    cda4:	mov	r1, r6
    cda8:	mov	r2, r4
    cdac:	bl	cd58 <g_markup_error_quark@plt+0x12a0>
    cdb0:	cmp	r0, #0
    cdb4:	beq	cfd0 <g_markup_error_quark@plt+0x1518>
    cdb8:	ldr	r5, [r5, #4]
    cdbc:	cmp	r5, #0
    cdc0:	bne	cda0 <g_markup_error_quark@plt+0x12e8>
    cdc4:	ldr	r0, [sp, #28]
    cdc8:	bl	147d4 <base_info_ref@@Base+0x174>
    cdcc:	subs	r5, r0, #0
    cdd0:	ldrne	r6, [sp, #36]	; 0x24
    cdd4:	beq	cdfc <g_markup_error_quark@plt+0x1344>
    cdd8:	ldr	r0, [r5]
    cddc:	mov	r1, r6
    cde0:	mov	r2, r4
    cde4:	bl	cd58 <g_markup_error_quark@plt+0x12a0>
    cde8:	cmp	r0, #0
    cdec:	beq	cfd0 <g_markup_error_quark@plt+0x1518>
    cdf0:	ldr	r5, [r5, #4]
    cdf4:	cmp	r5, #0
    cdf8:	bne	cdd8 <g_markup_error_quark@plt+0x1320>
    cdfc:	mov	r0, #1
    ce00:	b	cfd4 <g_markup_error_quark@plt+0x151c>
    ce04:	ldr	ip, [sp, #36]	; 0x24
    ce08:	ldr	r5, [ip, #8]
    ce0c:	bl	1494c <base_info_ref@@Base+0x2ec>
    ce10:	str	r0, [sp, #24]
    ce14:	ldr	r0, [sp, #28]
    ce18:	bl	148d0 <base_info_ref@@Base+0x270>
    ce1c:	bl	cca8 <g_markup_error_quark@plt+0x11f0>
    ce20:	movw	r1, #28644	; 0x6fe4
    ce24:	movt	r1, #1
    ce28:	str	r0, [sp, #44]	; 0x2c
    ce2c:	ldr	r0, [sp, #28]
    ce30:	bl	14944 <base_info_ref@@Base+0x2e4>
    ce34:	ldr	ip, [sp, #44]	; 0x2c
    ce38:	mov	r1, r5
    ce3c:	mov	r2, r4
    ce40:	str	ip, [sp]
    ce44:	mov	r3, ip
    ce48:	cmp	r0, #0
    ce4c:	movne	ip, r0
    ce50:	movw	r0, #28684	; 0x700c
    ce54:	movt	r0, #1
    ce58:	str	ip, [sp, #48]	; 0x30
    ce5c:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    ce60:	cmp	r0, #0
    ce64:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    ce68:	ldr	ip, [sp, #24]
    ce6c:	cmp	ip, #0
    ce70:	beq	cf44 <g_markup_error_quark@plt+0x148c>
    ce74:	ldr	ip, [sp, #24]
    ce78:	movw	r1, #28644	; 0x6fe4
    ce7c:	movt	r1, #1
    ce80:	ldr	fp, [ip]
    ce84:	mov	r0, fp
    ce88:	bl	14ad4 <base_info_ref@@Base+0x474>
    ce8c:	bl	b3a4 <g_strdup@plt>
    ce90:	subs	r6, r0, #0
    ce94:	beq	d660 <g_markup_error_quark@plt+0x1ba8>
    ce98:	movw	r1, #28812	; 0x708c
    ce9c:	mov	r0, fp
    cea0:	movt	r1, #1
    cea4:	bl	14ad4 <base_info_ref@@Base+0x474>
    cea8:	ldr	ip, [sp, #36]	; 0x24
    ceac:	ldr	r3, [ip]
    ceb0:	cmp	r3, #0
    ceb4:	str	r0, [sp, #40]	; 0x28
    ceb8:	beq	cff0 <g_markup_error_quark@plt+0x1538>
    cebc:	mov	r0, fp
    cec0:	bl	14adc <base_info_ref@@Base+0x47c>
    cec4:	subs	r8, r0, #0
    cec8:	bne	cedc <g_markup_error_quark@plt+0x1424>
    cecc:	b	cff0 <g_markup_error_quark@plt+0x1538>
    ced0:	ldr	r8, [r8, #4]
    ced4:	cmp	r8, #0
    ced8:	beq	cff0 <g_markup_error_quark@plt+0x1538>
    cedc:	ldr	r0, [r8]
    cee0:	bl	1516c <base_info_unref@@Base+0xc0>
    cee4:	mov	r1, #1
    cee8:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    ceec:	cmp	r0, #0
    cef0:	bne	ced0 <g_markup_error_quark@plt+0x1418>
    cef4:	mov	r7, r0
    cef8:	mov	r0, fp
    cefc:	bl	14a60 <base_info_ref@@Base+0x400>
    cf00:	mov	r8, r0
    cf04:	ldr	r0, [sp, #28]
    cf08:	bl	148d0 <base_info_ref@@Base+0x270>
    cf0c:	mov	r3, r8
    cf10:	movw	r2, #29968	; 0x7510
    cf14:	mov	r1, #16
    cf18:	movt	r2, #1
    cf1c:	str	r0, [sp]
    cf20:	mov	r0, r7
    cf24:	bl	ba58 <g_log@plt>
    cf28:	mov	r0, r6
    cf2c:	bl	b248 <g_free@plt>
    cf30:	ldr	ip, [sp, #24]
    cf34:	ldr	ip, [ip, #4]
    cf38:	cmp	ip, #0
    cf3c:	str	ip, [sp, #24]
    cf40:	bne	ce74 <g_markup_error_quark@plt+0x13bc>
    cf44:	mov	r1, r5
    cf48:	mov	r2, r4
    cf4c:	movw	r0, #28760	; 0x7058
    cf50:	ldr	r3, [sp, #44]	; 0x2c
    cf54:	movt	r0, #1
    cf58:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    cf5c:	cmp	r0, #0
    cf60:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    cf64:	ldr	r0, [sp, #44]	; 0x2c
    cf68:	bl	b248 <g_free@plt>
    cf6c:	b	cdfc <g_markup_error_quark@plt+0x1344>
    cf70:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    cf74:	mov	r5, r0
    cf78:	mov	r0, r7
    cf7c:	bl	1516c <base_info_unref@@Base+0xc0>
    cf80:	mov	r7, r0
    cf84:	mov	r0, fp
    cf88:	bl	14a60 <base_info_ref@@Base+0x400>
    cf8c:	mov	r6, r0
    cf90:	ldr	r0, [sp, #28]
    cf94:	bl	148d0 <base_info_ref@@Base+0x270>
    cf98:	movw	r3, #28924	; 0x70fc
    cf9c:	str	r7, [sp]
    cfa0:	mov	r1, r5
    cfa4:	str	r6, [sp, #4]
    cfa8:	mov	r2, r8
    cfac:	movt	r3, #1
    cfb0:	str	r0, [sp, #8]
    cfb4:	mov	r0, r4
    cfb8:	bl	b6ec <g_set_error@plt>
    cfbc:	mov	r6, #0
    cfc0:	mov	r0, r6
    cfc4:	bl	b248 <g_free@plt>
    cfc8:	ldr	r0, [sp, #44]	; 0x2c
    cfcc:	bl	b248 <g_free@plt>
    cfd0:	mov	r0, #0
    cfd4:	ldr	ip, [sp, #32]
    cfd8:	ldr	r2, [sp, #60]	; 0x3c
    cfdc:	ldr	r3, [ip]
    cfe0:	cmp	r2, r3
    cfe4:	bne	d708 <g_markup_error_quark@plt+0x1c50>
    cfe8:	add	sp, sp, #68	; 0x44
    cfec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cff0:	str	r4, [sp]
    cff4:	movw	r1, #28848	; 0x70b0
    cff8:	mov	r0, r5
    cffc:	add	r3, sp, #56	; 0x38
    d000:	movt	r1, #1
    d004:	mvn	r2, #0
    d008:	bl	b5cc <g_io_channel_write_chars@plt>
    d00c:	cmp	r0, #0
    d010:	beq	cfc0 <g_markup_error_quark@plt+0x1508>
    d014:	movw	r0, #28900	; 0x70e4
    d018:	mov	r1, r5
    d01c:	movt	r0, #1
    d020:	mov	r2, r4
    d024:	mov	r3, r6
    d028:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d02c:	cmp	r0, #0
    d030:	beq	cfc0 <g_markup_error_quark@plt+0x1508>
    d034:	mov	r0, r6
    d038:	bl	b248 <g_free@plt>
    d03c:	mov	r0, fp
    d040:	bl	14adc <base_info_ref@@Base+0x47c>
    d044:	subs	r6, r0, #0
    d048:	bne	d0ac <g_markup_error_quark@plt+0x15f4>
    d04c:	b	d16c <g_markup_error_quark@plt+0x16b4>
    d050:	cmp	sl, #0
    d054:	beq	d3b0 <g_markup_error_quark@plt+0x18f8>
    d058:	cmp	sl, #0
    d05c:	movw	r8, #31044	; 0x7944
    d060:	movt	r8, #1
    d064:	beq	d130 <g_markup_error_quark@plt+0x1678>
    d068:	cmp	sl, #1
    d06c:	bne	d0a0 <g_markup_error_quark@plt+0x15e8>
    d070:	mov	r0, r7
    d074:	bl	15164 <base_info_unref@@Base+0xb8>
    d078:	str	r8, [sp]
    d07c:	mov	r3, r9
    d080:	mov	r1, r5
    d084:	mov	r2, r4
    d088:	str	r0, [sp, #4]
    d08c:	movw	r0, #29048	; 0x7178
    d090:	movt	r0, #1
    d094:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d098:	cmp	r0, #0
    d09c:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    d0a0:	ldr	r6, [r6, #4]
    d0a4:	cmp	r6, #0
    d0a8:	beq	d16c <g_markup_error_quark@plt+0x16b4>
    d0ac:	ldr	r7, [r6]
    d0b0:	movw	r1, #30100	; 0x7594
    d0b4:	str	r4, [sp]
    d0b8:	movt	r1, #1
    d0bc:	mov	r0, r5
    d0c0:	mvn	r2, #0
    d0c4:	add	r3, sp, #56	; 0x38
    d0c8:	bl	b5cc <g_io_channel_write_chars@plt>
    d0cc:	cmp	r0, #0
    d0d0:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    d0d4:	mov	r0, r7
    d0d8:	bl	15174 <base_info_unref@@Base+0xc8>
    d0dc:	mov	sl, r0
    d0e0:	mov	r0, r7
    d0e4:	bl	1516c <base_info_unref@@Base+0xc0>
    d0e8:	mov	r1, #1
    d0ec:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    d0f0:	subs	r8, r0, #0
    d0f4:	beq	cf70 <g_markup_error_quark@plt+0x14b8>
    d0f8:	bl	cac4 <g_markup_error_quark@plt+0x100c>
    d0fc:	mov	r9, r0
    d100:	bl	b554 <g_value_get_type@plt>
    d104:	cmp	r8, r0
    d108:	beq	d050 <g_markup_error_quark@plt+0x1598>
    d10c:	mov	r0, r8
    d110:	mov	r1, #72	; 0x48
    d114:	bl	b470 <g_type_is_a@plt>
    d118:	cmp	r0, #0
    d11c:	beq	d3bc <g_markup_error_quark@plt+0x1904>
    d120:	cmp	sl, #0
    d124:	movw	r8, #28628	; 0x6fd4
    d128:	movt	r8, #1
    d12c:	bne	d068 <g_markup_error_quark@plt+0x15b0>
    d130:	mov	r0, r7
    d134:	bl	15164 <base_info_unref@@Base+0xb8>
    d138:	str	r8, [sp]
    d13c:	mov	r3, r9
    d140:	mov	r1, r5
    d144:	mov	r2, r4
    d148:	str	r0, [sp, #4]
    d14c:	movw	r0, #29028	; 0x7164
    d150:	movt	r0, #1
    d154:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d158:	cmp	r0, #0
    d15c:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    d160:	ldr	r6, [r6, #4]
    d164:	cmp	r6, #0
    d168:	bne	d0ac <g_markup_error_quark@plt+0x15f4>
    d16c:	str	r4, [sp]
    d170:	movw	r1, #30036	; 0x7554
    d174:	mov	r0, r5
    d178:	movt	r1, #1
    d17c:	mvn	r2, #0
    d180:	add	r3, sp, #56	; 0x38
    d184:	bl	b5cc <g_io_channel_write_chars@plt>
    d188:	cmp	r0, #0
    d18c:	beq	d658 <g_markup_error_quark@plt+0x1ba0>
    d190:	str	r4, [sp]
    d194:	movw	r1, #29064	; 0x7188
    d198:	mov	r0, r5
    d19c:	movt	r1, #1
    d1a0:	mvn	r2, #0
    d1a4:	add	r3, sp, #56	; 0x38
    d1a8:	bl	b5cc <g_io_channel_write_chars@plt>
    d1ac:	cmp	r0, #0
    d1b0:	beq	d658 <g_markup_error_quark@plt+0x1ba0>
    d1b4:	ldr	ip, [sp, #40]	; 0x28
    d1b8:	cmp	ip, #0
    d1bc:	beq	d584 <g_markup_error_quark@plt+0x1acc>
    d1c0:	mov	r0, fp
    d1c4:	bl	14a60 <base_info_ref@@Base+0x400>
    d1c8:	mov	r1, r5
    d1cc:	mov	r2, r4
    d1d0:	mov	r3, r0
    d1d4:	movw	r0, #29068	; 0x718c
    d1d8:	movt	r0, #1
    d1dc:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d1e0:	cmp	r0, #0
    d1e4:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    d1e8:	mov	r0, fp
    d1ec:	mov	r1, r5
    d1f0:	mov	r2, #0
    d1f4:	mov	r3, r4
    d1f8:	bl	cbb8 <g_markup_error_quark@plt+0x1100>
    d1fc:	cmp	r0, #0
    d200:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    d204:	str	r4, [sp]
    d208:	movw	r1, #29112	; 0x71b8
    d20c:	mov	r0, r5
    d210:	movt	r1, #1
    d214:	mvn	r2, #0
    d218:	add	r3, sp, #56	; 0x38
    d21c:	bl	b5cc <g_io_channel_write_chars@plt>
    d220:	cmp	r0, #0
    d224:	beq	d658 <g_markup_error_quark@plt+0x1ba0>
    d228:	mov	r0, fp
    d22c:	mov	r1, r5
    d230:	mov	r2, #1
    d234:	mov	r3, r4
    d238:	bl	cbb8 <g_markup_error_quark@plt+0x1100>
    d23c:	cmp	r0, #0
    d240:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    d244:	str	r4, [sp]
    d248:	movw	r1, #29132	; 0x71cc
    d24c:	mov	r0, r5
    d250:	movt	r1, #1
    d254:	mvn	r2, #0
    d258:	add	r3, sp, #56	; 0x38
    d25c:	bl	b5cc <g_io_channel_write_chars@plt>
    d260:	cmp	r0, #0
    d264:	beq	d658 <g_markup_error_quark@plt+0x1ba0>
    d268:	str	r4, [sp]
    d26c:	movw	r1, #29152	; 0x71e0
    d270:	mov	r0, r5
    d274:	movt	r1, #1
    d278:	mvn	r2, #0
    d27c:	add	r3, sp, #56	; 0x38
    d280:	bl	b5cc <g_io_channel_write_chars@plt>
    d284:	cmp	r0, #0
    d288:	beq	d658 <g_markup_error_quark@plt+0x1ba0>
    d28c:	ldr	r0, [sp, #28]
    d290:	bl	148d0 <base_info_ref@@Base+0x270>
    d294:	bl	cca8 <g_markup_error_quark@plt+0x11f0>
    d298:	movw	r1, #28644	; 0x6fe4
    d29c:	movt	r1, #1
    d2a0:	mov	r6, r0
    d2a4:	ldr	r0, [sp, #28]
    d2a8:	bl	14944 <base_info_ref@@Base+0x2e4>
    d2ac:	movw	r1, #28644	; 0x6fe4
    d2b0:	movt	r1, #1
    d2b4:	cmp	r0, #0
    d2b8:	movne	r7, r0
    d2bc:	mov	r0, fp
    d2c0:	moveq	r7, r6
    d2c4:	bl	14ad4 <base_info_ref@@Base+0x474>
    d2c8:	bl	b3a4 <g_strdup@plt>
    d2cc:	subs	r8, r0, #0
    d2d0:	beq	d674 <g_markup_error_quark@plt+0x1bbc>
    d2d4:	mov	r0, r6
    d2d8:	bl	b248 <g_free@plt>
    d2dc:	movw	r0, #29248	; 0x7240
    d2e0:	mov	r1, r5
    d2e4:	movt	r0, #1
    d2e8:	mov	r2, r4
    d2ec:	mov	r3, r8
    d2f0:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d2f4:	cmp	r0, #0
    d2f8:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d2fc:	mov	r0, fp
    d300:	bl	14adc <base_info_ref@@Base+0x47c>
    d304:	subs	r9, r0, #0
    d308:	bne	d31c <g_markup_error_quark@plt+0x1864>
    d30c:	b	d408 <g_markup_error_quark@plt+0x1950>
    d310:	ldr	r9, [r9, #4]
    d314:	cmp	r9, #0
    d318:	beq	d408 <g_markup_error_quark@plt+0x1950>
    d31c:	ldr	r6, [r9]
    d320:	mov	r0, r6
    d324:	bl	15174 <base_info_unref@@Base+0xc8>
    d328:	cmp	r0, #1
    d32c:	mov	r7, r0
    d330:	bne	d310 <g_markup_error_quark@plt+0x1858>
    d334:	mov	r0, r6
    d338:	bl	1516c <base_info_unref@@Base+0xc0>
    d33c:	mov	r1, r7
    d340:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    d344:	mov	r7, r0
    d348:	bl	b554 <g_value_get_type@plt>
    d34c:	cmp	r7, r0
    d350:	bne	d3e8 <g_markup_error_quark@plt+0x1930>
    d354:	movw	r7, #31044	; 0x7944
    d358:	movt	r7, #1
    d35c:	mov	r0, r6
    d360:	bl	1516c <base_info_unref@@Base+0xc0>
    d364:	mov	r1, #1
    d368:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    d36c:	bl	cac4 <g_markup_error_quark@plt+0x100c>
    d370:	mov	sl, r0
    d374:	mov	r0, r6
    d378:	bl	15164 <base_info_unref@@Base+0xb8>
    d37c:	mov	r3, sl
    d380:	str	r7, [sp]
    d384:	mov	r1, r5
    d388:	mov	r2, r4
    d38c:	str	r0, [sp, #4]
    d390:	movw	r0, #29336	; 0x7298
    d394:	movt	r0, #1
    d398:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d39c:	cmp	r0, #0
    d3a0:	bne	d310 <g_markup_error_quark@plt+0x1858>
    d3a4:	mov	r0, r8
    d3a8:	bl	b248 <g_free@plt>
    d3ac:	b	cf30 <g_markup_error_quark@plt+0x1478>
    d3b0:	movw	r8, #28628	; 0x6fd4
    d3b4:	movt	r8, #1
    d3b8:	b	d130 <g_markup_error_quark@plt+0x1678>
    d3bc:	mov	r0, r8
    d3c0:	mov	r1, #80	; 0x50
    d3c4:	bl	b470 <g_type_is_a@plt>
    d3c8:	cmp	r0, #0
    d3cc:	bne	d120 <g_markup_error_quark@plt+0x1668>
    d3d0:	mov	r0, r8
    d3d4:	mov	r1, #68	; 0x44
    d3d8:	bl	b470 <g_type_is_a@plt>
    d3dc:	cmp	r0, #0
    d3e0:	beq	d058 <g_markup_error_quark@plt+0x15a0>
    d3e4:	b	d120 <g_markup_error_quark@plt+0x1668>
    d3e8:	mov	r0, r7
    d3ec:	mov	r1, #72	; 0x48
    d3f0:	bl	b470 <g_type_is_a@plt>
    d3f4:	cmp	r0, #0
    d3f8:	beq	d558 <g_markup_error_quark@plt+0x1aa0>
    d3fc:	movw	r7, #28628	; 0x6fd4
    d400:	movt	r7, #1
    d404:	b	d35c <g_markup_error_quark@plt+0x18a4>
    d408:	str	r4, [sp]
    d40c:	movw	r1, #29296	; 0x7270
    d410:	mov	r0, r5
    d414:	movt	r1, #1
    d418:	mvn	r2, #0
    d41c:	add	r3, sp, #56	; 0x38
    d420:	bl	b5cc <g_io_channel_write_chars@plt>
    d424:	cmp	r0, #0
    d428:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d42c:	str	r4, [sp]
    d430:	movw	r1, #29352	; 0x72a8
    d434:	mov	r0, r5
    d438:	movt	r1, #1
    d43c:	mvn	r2, #0
    d440:	add	r3, sp, #56	; 0x38
    d444:	bl	b5cc <g_io_channel_write_chars@plt>
    d448:	cmp	r0, #0
    d44c:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d450:	movw	r0, #29368	; 0x72b8
    d454:	mov	r1, r5
    d458:	movt	r0, #1
    d45c:	mov	r2, r4
    d460:	mov	r3, r8
    d464:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d468:	cmp	r0, #0
    d46c:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d470:	str	r4, [sp]
    d474:	movw	r1, #29064	; 0x7188
    d478:	mov	r0, r5
    d47c:	movt	r1, #1
    d480:	mvn	r2, #0
    d484:	add	r3, sp, #56	; 0x38
    d488:	bl	b5cc <g_io_channel_write_chars@plt>
    d48c:	cmp	r0, #0
    d490:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d494:	str	r4, [sp]
    d498:	movw	r1, #29448	; 0x7308
    d49c:	mov	r0, r5
    d4a0:	movt	r1, #1
    d4a4:	mvn	r2, #0
    d4a8:	add	r3, sp, #56	; 0x38
    d4ac:	bl	b5cc <g_io_channel_write_chars@plt>
    d4b0:	cmp	r0, #0
    d4b4:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d4b8:	mov	r0, fp
    d4bc:	bl	14adc <base_info_ref@@Base+0x47c>
    d4c0:	subs	sl, r0, #0
    d4c4:	bne	d504 <g_markup_error_quark@plt+0x1a4c>
    d4c8:	b	d75c <g_markup_error_quark@plt+0x1ca4>
    d4cc:	mov	r0, r6
    d4d0:	mov	r1, #72	; 0x48
    d4d4:	bl	b470 <g_type_is_a@plt>
    d4d8:	cmp	r0, #0
    d4dc:	beq	d688 <g_markup_error_quark@plt+0x1bd0>
    d4e0:	movw	r6, #31044	; 0x7944
    d4e4:	movw	r3, #28628	; 0x6fd4
    d4e8:	movt	r6, #1
    d4ec:	movt	r3, #1
    d4f0:	cmp	r7, #1
    d4f4:	beq	d6c8 <g_markup_error_quark@plt+0x1c10>
    d4f8:	ldr	sl, [sl, #4]
    d4fc:	cmp	sl, #0
    d500:	beq	d75c <g_markup_error_quark@plt+0x1ca4>
    d504:	ldr	r9, [sl]
    d508:	mov	r0, r9
    d50c:	bl	15174 <base_info_unref@@Base+0xc8>
    d510:	mov	r7, r0
    d514:	mov	r0, r9
    d518:	bl	1516c <base_info_unref@@Base+0xc0>
    d51c:	mov	r1, #1
    d520:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    d524:	mov	r6, r0
    d528:	bl	cac4 <g_markup_error_quark@plt+0x100c>
    d52c:	cmp	r0, #0
    d530:	str	r0, [sp, #40]	; 0x28
    d534:	beq	d70c <g_markup_error_quark@plt+0x1c54>
    d538:	bl	b554 <g_value_get_type@plt>
    d53c:	cmp	r6, r0
    d540:	bne	d4cc <g_markup_error_quark@plt+0x1a14>
    d544:	movw	r6, #28632	; 0x6fd8
    d548:	movw	r3, #31044	; 0x7944
    d54c:	movt	r6, #1
    d550:	movt	r3, #1
    d554:	b	d4f0 <g_markup_error_quark@plt+0x1a38>
    d558:	mov	r0, r7
    d55c:	mov	r1, #80	; 0x50
    d560:	bl	b470 <g_type_is_a@plt>
    d564:	cmp	r0, #0
    d568:	bne	d3fc <g_markup_error_quark@plt+0x1944>
    d56c:	mov	r0, r7
    d570:	mov	r1, #68	; 0x44
    d574:	bl	b470 <g_type_is_a@plt>
    d578:	cmp	r0, #0
    d57c:	beq	d354 <g_markup_error_quark@plt+0x189c>
    d580:	b	d3fc <g_markup_error_quark@plt+0x1944>
    d584:	mov	r0, fp
    d588:	bl	14a60 <base_info_ref@@Base+0x400>
    d58c:	mov	r1, r5
    d590:	mov	r2, r4
    d594:	mov	r3, r0
    d598:	movw	r0, #29172	; 0x71f4
    d59c:	movt	r0, #1
    d5a0:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d5a4:	cmp	r0, #0
    d5a8:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    d5ac:	str	r4, [sp]
    d5b0:	movw	r1, #29216	; 0x7220
    d5b4:	mov	r0, r5
    d5b8:	movt	r1, #1
    d5bc:	mvn	r2, #0
    d5c0:	add	r3, sp, #56	; 0x38
    d5c4:	bl	b5cc <g_io_channel_write_chars@plt>
    d5c8:	cmp	r0, #0
    d5cc:	beq	d650 <g_markup_error_quark@plt+0x1b98>
    d5d0:	mov	r0, fp
    d5d4:	mov	r1, r5
    d5d8:	ldr	r2, [sp, #40]	; 0x28
    d5dc:	mov	r3, r4
    d5e0:	bl	cbb8 <g_markup_error_quark@plt+0x1100>
    d5e4:	cmp	r0, #0
    d5e8:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    d5ec:	str	r4, [sp]
    d5f0:	movw	r1, #29112	; 0x71b8
    d5f4:	mov	r0, r5
    d5f8:	movt	r1, #1
    d5fc:	mvn	r2, #0
    d600:	add	r3, sp, #56	; 0x38
    d604:	bl	b5cc <g_io_channel_write_chars@plt>
    d608:	cmp	r0, #0
    d60c:	beq	d650 <g_markup_error_quark@plt+0x1b98>
    d610:	mov	r0, fp
    d614:	mov	r1, r5
    d618:	mov	r2, #1
    d61c:	mov	r3, r4
    d620:	bl	cbb8 <g_markup_error_quark@plt+0x1100>
    d624:	cmp	r0, #0
    d628:	beq	cfbc <g_markup_error_quark@plt+0x1504>
    d62c:	str	r4, [sp]
    d630:	movw	r1, #29224	; 0x7228
    d634:	mov	r0, r5
    d638:	movt	r1, #1
    d63c:	mvn	r2, #0
    d640:	add	r3, sp, #56	; 0x38
    d644:	bl	b5cc <g_io_channel_write_chars@plt>
    d648:	cmp	r0, #0
    d64c:	bne	d28c <g_markup_error_quark@plt+0x17d4>
    d650:	ldr	r6, [sp, #40]	; 0x28
    d654:	b	cfc0 <g_markup_error_quark@plt+0x1508>
    d658:	mov	r6, r0
    d65c:	b	cfc0 <g_markup_error_quark@plt+0x1508>
    d660:	ldr	r0, [sp, #48]	; 0x30
    d664:	mov	r1, fp
    d668:	bl	c64c <g_markup_error_quark@plt+0xb94>
    d66c:	mov	r6, r0
    d670:	b	ce98 <g_markup_error_quark@plt+0x13e0>
    d674:	mov	r0, r7
    d678:	mov	r1, fp
    d67c:	bl	c64c <g_markup_error_quark@plt+0xb94>
    d680:	mov	r8, r0
    d684:	b	d2d4 <g_markup_error_quark@plt+0x181c>
    d688:	mov	r0, r6
    d68c:	mov	r1, #80	; 0x50
    d690:	bl	b470 <g_type_is_a@plt>
    d694:	cmp	r0, #0
    d698:	bne	d4e0 <g_markup_error_quark@plt+0x1a28>
    d69c:	mov	r0, r6
    d6a0:	mov	r1, #68	; 0x44
    d6a4:	bl	b470 <g_type_is_a@plt>
    d6a8:	movw	r6, #31044	; 0x7944
    d6ac:	cmp	r0, #0
    d6b0:	movteq	r6, #1
    d6b4:	moveq	r3, r6
    d6b8:	movwne	r3, #28628	; 0x6fd4
    d6bc:	movtne	r6, #1
    d6c0:	movtne	r3, #1
    d6c4:	b	d4f0 <g_markup_error_quark@plt+0x1a38>
    d6c8:	mov	r0, r9
    d6cc:	str	r3, [sp, #20]
    d6d0:	bl	15164 <base_info_unref@@Base+0xb8>
    d6d4:	ldr	r3, [sp, #20]
    d6d8:	str	r6, [sp, #8]
    d6dc:	mov	r1, r5
    d6e0:	mov	r2, r4
    d6e4:	str	r3, [sp]
    d6e8:	ldr	r3, [sp, #40]	; 0x28
    d6ec:	str	r0, [sp, #4]
    d6f0:	movw	r0, #29528	; 0x7358
    d6f4:	movt	r0, #1
    d6f8:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d6fc:	cmp	r0, #0
    d700:	bne	d4f8 <g_markup_error_quark@plt+0x1a40>
    d704:	b	d3a4 <g_markup_error_quark@plt+0x18ec>
    d708:	bl	b824 <__stack_chk_fail@plt>
    d70c:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    d710:	mov	r6, r0
    d714:	mov	r0, r9
    d718:	bl	1516c <base_info_unref@@Base+0xc0>
    d71c:	mov	r9, r0
    d720:	mov	r0, fp
    d724:	bl	14a60 <base_info_ref@@Base+0x400>
    d728:	mov	r7, r0
    d72c:	ldr	r0, [sp, #28]
    d730:	bl	148d0 <base_info_ref@@Base+0x270>
    d734:	ldr	r2, [sp, #40]	; 0x28
    d738:	mov	r1, r6
    d73c:	str	r9, [sp]
    d740:	str	r7, [sp, #4]
    d744:	str	r0, [sp, #8]
    d748:	movw	r3, #28924	; 0x70fc
    d74c:	mov	r0, r4
    d750:	movt	r3, #1
    d754:	bl	b6ec <g_set_error@plt>
    d758:	b	d3a4 <g_markup_error_quark@plt+0x18ec>
    d75c:	str	r4, [sp]
    d760:	movw	r1, #30056	; 0x7568
    d764:	mov	r0, r5
    d768:	movt	r1, #1
    d76c:	mvn	r2, #0
    d770:	add	r3, sp, #56	; 0x38
    d774:	bl	b5cc <g_io_channel_write_chars@plt>
    d778:	cmp	r0, #0
    d77c:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d780:	mov	r0, fp
    d784:	bl	14adc <base_info_ref@@Base+0x47c>
    d788:	subs	r6, r0, #0
    d78c:	beq	d814 <g_markup_error_quark@plt+0x1d5c>
    d790:	movw	r7, #29564	; 0x737c
    d794:	movt	r7, #1
    d798:	b	d7a8 <g_markup_error_quark@plt+0x1cf0>
    d79c:	ldr	r6, [r6, #4]
    d7a0:	cmp	r6, #0
    d7a4:	beq	d814 <g_markup_error_quark@plt+0x1d5c>
    d7a8:	ldr	sl, [r6]
    d7ac:	mov	r0, sl
    d7b0:	bl	15174 <base_info_unref@@Base+0xc8>
    d7b4:	cmp	r0, #1
    d7b8:	mov	r9, r0
    d7bc:	bne	d79c <g_markup_error_quark@plt+0x1ce4>
    d7c0:	mov	r0, sl
    d7c4:	bl	1516c <base_info_unref@@Base+0xc0>
    d7c8:	mov	r1, r9
    d7cc:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    d7d0:	bl	c718 <g_markup_error_quark@plt+0xc60>
    d7d4:	mov	r9, r0
    d7d8:	mov	r0, sl
    d7dc:	bl	15164 <base_info_unref@@Base+0xb8>
    d7e0:	str	r7, [sp]
    d7e4:	mov	r3, r9
    d7e8:	mov	r1, r5
    d7ec:	mov	r2, r4
    d7f0:	str	r0, [sp, #4]
    d7f4:	movw	r0, #29548	; 0x736c
    d7f8:	movt	r0, #1
    d7fc:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d800:	cmp	r0, #0
    d804:	mov	r0, r9
    d808:	beq	da58 <g_markup_error_quark@plt+0x1fa0>
    d80c:	bl	b248 <g_free@plt>
    d810:	b	d79c <g_markup_error_quark@plt+0x1ce4>
    d814:	str	r4, [sp]
    d818:	movw	r1, #29132	; 0x71cc
    d81c:	mov	r0, r5
    d820:	movt	r1, #1
    d824:	mvn	r2, #0
    d828:	add	r3, sp, #56	; 0x38
    d82c:	bl	b5cc <g_io_channel_write_chars@plt>
    d830:	cmp	r0, #0
    d834:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d838:	movw	r0, #29568	; 0x7380
    d83c:	mov	r1, r5
    d840:	movt	r0, #1
    d844:	mov	r2, r4
    d848:	mov	r3, r8
    d84c:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d850:	cmp	r0, #0
    d854:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d858:	mov	r0, fp
    d85c:	bl	14adc <base_info_ref@@Base+0x47c>
    d860:	subs	r6, r0, #0
    d864:	beq	d888 <g_markup_error_quark@plt+0x1dd0>
    d868:	ldr	r7, [r6]
    d86c:	mov	r0, r7
    d870:	bl	15174 <base_info_unref@@Base+0xc8>
    d874:	cmp	r0, #1
    d878:	beq	da2c <g_markup_error_quark@plt+0x1f74>
    d87c:	ldr	r6, [r6, #4]
    d880:	cmp	r6, #0
    d884:	bne	d868 <g_markup_error_quark@plt+0x1db0>
    d888:	str	r4, [sp]
    d88c:	movw	r1, #30104	; 0x7598
    d890:	mov	r0, r5
    d894:	movt	r1, #1
    d898:	mvn	r2, #0
    d89c:	add	r3, sp, #56	; 0x38
    d8a0:	bl	b5cc <g_io_channel_write_chars@plt>
    d8a4:	cmp	r0, #0
    d8a8:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d8ac:	str	r4, [sp]
    d8b0:	movw	r1, #29604	; 0x73a4
    d8b4:	mov	r0, r5
    d8b8:	movt	r1, #1
    d8bc:	mvn	r2, #0
    d8c0:	add	r3, sp, #56	; 0x38
    d8c4:	bl	b5cc <g_io_channel_write_chars@plt>
    d8c8:	cmp	r0, #0
    d8cc:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d8d0:	str	r4, [sp]
    d8d4:	movw	r1, #29620	; 0x73b4
    d8d8:	mov	r0, r5
    d8dc:	movt	r1, #1
    d8e0:	mvn	r2, #0
    d8e4:	add	r3, sp, #56	; 0x38
    d8e8:	bl	b5cc <g_io_channel_write_chars@plt>
    d8ec:	cmp	r0, #0
    d8f0:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d8f4:	movw	r0, #29680	; 0x73f0
    d8f8:	mov	r1, r5
    d8fc:	movt	r0, #1
    d900:	mov	r2, r4
    d904:	mov	r3, r8
    d908:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d90c:	cmp	r0, #0
    d910:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d914:	mov	r0, fp
    d918:	bl	14adc <base_info_ref@@Base+0x47c>
    d91c:	subs	r9, r0, #0
    d920:	beq	d95c <g_markup_error_quark@plt+0x1ea4>
    d924:	movw	ip, #28628	; 0x6fd4
    d928:	movt	ip, #1
    d92c:	str	ip, [sp, #40]	; 0x28
    d930:	movw	ip, #31044	; 0x7944
    d934:	movt	ip, #1
    d938:	str	ip, [sp, #52]	; 0x34
    d93c:	ldr	r7, [r9]
    d940:	mov	r0, r7
    d944:	bl	15174 <base_info_unref@@Base+0xc8>
    d948:	cmp	r0, #0
    d94c:	beq	da60 <g_markup_error_quark@plt+0x1fa8>
    d950:	ldr	r9, [r9, #4]
    d954:	cmp	r9, #0
    d958:	bne	d93c <g_markup_error_quark@plt+0x1e84>
    d95c:	movw	r0, #30132	; 0x75b4
    d960:	mov	r1, r5
    d964:	movt	r0, #1
    d968:	mov	r2, r4
    d96c:	mov	r3, r8
    d970:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d974:	cmp	r0, #0
    d978:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d97c:	str	r4, [sp]
    d980:	movw	r1, #29064	; 0x7188
    d984:	mov	r0, r5
    d988:	movt	r1, #1
    d98c:	mvn	r2, #0
    d990:	add	r3, sp, #56	; 0x38
    d994:	bl	b5cc <g_io_channel_write_chars@plt>
    d998:	cmp	r0, #0
    d99c:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d9a0:	str	r4, [sp]
    d9a4:	movw	r1, #29708	; 0x740c
    d9a8:	mov	r0, r5
    d9ac:	movt	r1, #1
    d9b0:	mvn	r2, #0
    d9b4:	add	r3, sp, #56	; 0x38
    d9b8:	bl	b5cc <g_io_channel_write_chars@plt>
    d9bc:	cmp	r0, #0
    d9c0:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d9c4:	mov	r0, fp
    d9c8:	bl	14a60 <base_info_ref@@Base+0x400>
    d9cc:	str	r8, [sp]
    d9d0:	mov	r1, r5
    d9d4:	mov	r2, r4
    d9d8:	mov	r3, r0
    d9dc:	movw	r0, #29844	; 0x7494
    d9e0:	movt	r0, #1
    d9e4:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    d9e8:	cmp	r0, #0
    d9ec:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    d9f0:	mov	r0, fp
    d9f4:	mov	r1, r5
    d9f8:	mov	r2, #0
    d9fc:	mov	r3, r4
    da00:	bl	cbb8 <g_markup_error_quark@plt+0x1100>
    da04:	cmp	r0, #0
    da08:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    da0c:	str	r4, [sp]
    da10:	add	r3, sp, #56	; 0x38
    da14:	movw	r1, #29948	; 0x74fc
    da18:	mov	r0, r5
    da1c:	movt	r1, #1
    da20:	mvn	r2, #0
    da24:	bl	b5cc <g_io_channel_write_chars@plt>
    da28:	b	d3a4 <g_markup_error_quark@plt+0x18ec>
    da2c:	mov	r0, r7
    da30:	bl	15164 <base_info_unref@@Base+0xb8>
    da34:	mov	r1, r5
    da38:	mov	r2, r4
    da3c:	mov	r3, r0
    da40:	movw	r0, #28612	; 0x6fc4
    da44:	movt	r0, #1
    da48:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    da4c:	cmp	r0, #0
    da50:	bne	d87c <g_markup_error_quark@plt+0x1dc4>
    da54:	b	d3a4 <g_markup_error_quark@plt+0x18ec>
    da58:	bl	b248 <g_free@plt>
    da5c:	b	d3a4 <g_markup_error_quark@plt+0x18ec>
    da60:	str	r4, [sp]
    da64:	movw	r1, #30100	; 0x7594
    da68:	mov	r0, r5
    da6c:	movt	r1, #1
    da70:	mvn	r2, #0
    da74:	add	r3, sp, #56	; 0x38
    da78:	bl	b5cc <g_io_channel_write_chars@plt>
    da7c:	cmp	r0, #0
    da80:	beq	d3a4 <g_markup_error_quark@plt+0x18ec>
    da84:	mov	r0, r7
    da88:	bl	1516c <base_info_unref@@Base+0xc0>
    da8c:	mov	r1, #1
    da90:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    da94:	mov	r6, r0
    da98:	bl	cac4 <g_markup_error_quark@plt+0x100c>
    da9c:	mov	sl, r0
    daa0:	bl	b554 <g_value_get_type@plt>
    daa4:	cmp	r6, r0
    daa8:	bne	db2c <g_markup_error_quark@plt+0x2074>
    daac:	movw	r6, #28628	; 0x6fd4
    dab0:	movt	r6, #1
    dab4:	cmp	sl, #0
    dab8:	beq	daf0 <g_markup_error_quark@plt+0x2038>
    dabc:	mov	r0, r7
    dac0:	bl	15164 <base_info_unref@@Base+0xb8>
    dac4:	str	r6, [sp]
    dac8:	mov	r3, sl
    dacc:	mov	r1, r5
    dad0:	mov	r2, r4
    dad4:	str	r0, [sp, #4]
    dad8:	movw	r0, #29028	; 0x7164
    dadc:	movt	r0, #1
    dae0:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    dae4:	cmp	r0, #0
    dae8:	bne	d950 <g_markup_error_quark@plt+0x1e98>
    daec:	b	d3a4 <g_markup_error_quark@plt+0x18ec>
    daf0:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    daf4:	mov	r6, r0
    daf8:	mov	r0, r7
    dafc:	bl	1516c <base_info_unref@@Base+0xc0>
    db00:	mov	r9, r0
    db04:	mov	r0, fp
    db08:	bl	14a60 <base_info_ref@@Base+0x400>
    db0c:	mov	r7, r0
    db10:	ldr	r0, [sp, #28]
    db14:	bl	148d0 <base_info_ref@@Base+0x270>
    db18:	str	r9, [sp]
    db1c:	str	r7, [sp, #4]
    db20:	mov	r1, r6
    db24:	mov	r2, sl
    db28:	b	d744 <g_markup_error_quark@plt+0x1c8c>
    db2c:	mov	r0, r6
    db30:	mov	r1, #72	; 0x48
    db34:	bl	b470 <g_type_is_a@plt>
    db38:	cmp	r0, #0
    db3c:	bne	daac <g_markup_error_quark@plt+0x1ff4>
    db40:	mov	r0, r6
    db44:	mov	r1, #80	; 0x50
    db48:	bl	b470 <g_type_is_a@plt>
    db4c:	cmp	r0, #0
    db50:	bne	daac <g_markup_error_quark@plt+0x1ff4>
    db54:	mov	r0, r6
    db58:	mov	r1, #68	; 0x44
    db5c:	bl	b470 <g_type_is_a@plt>
    db60:	ldr	ip, [sp, #52]	; 0x34
    db64:	ldr	r6, [sp, #40]	; 0x28
    db68:	cmp	r0, #0
    db6c:	moveq	r6, ip
    db70:	b	dab4 <g_markup_error_quark@plt+0x1ffc>
    db74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    db78:	movw	r3, #8992	; 0x2320
    db7c:	sub	sp, sp, #28
    db80:	movt	r3, #2
    db84:	mov	r7, r1
    db88:	mov	r8, r2
    db8c:	str	r3, [sp, #4]
    db90:	mov	r5, r0
    db94:	ldr	r3, [r3]
    db98:	str	r3, [sp, #20]
    db9c:	bl	146dc <base_info_ref@@Base+0x7c>
    dba0:	cmp	r0, #0
    dba4:	bne	dc38 <g_markup_error_quark@plt+0x2180>
    dba8:	mov	r0, r5
    dbac:	bl	147dc <base_info_ref@@Base+0x17c>
    dbb0:	subs	r4, r0, #0
    dbb4:	bne	dc1c <g_markup_error_quark@plt+0x2164>
    dbb8:	mov	r0, r5
    dbbc:	bl	147d4 <base_info_ref@@Base+0x174>
    dbc0:	subs	r4, r0, #0
    dbc4:	bne	dbd8 <g_markup_error_quark@plt+0x2120>
    dbc8:	b	ddcc <g_markup_error_quark@plt+0x2314>
    dbcc:	ldr	r4, [r4, #4]
    dbd0:	cmp	r4, #0
    dbd4:	beq	ddcc <g_markup_error_quark@plt+0x2314>
    dbd8:	ldr	r0, [r4]
    dbdc:	mov	r1, r7
    dbe0:	mov	r2, r8
    dbe4:	bl	db74 <g_markup_error_quark@plt+0x20bc>
    dbe8:	cmp	r0, #0
    dbec:	bne	dbcc <g_markup_error_quark@plt+0x2114>
    dbf0:	mov	r0, #0
    dbf4:	ldr	r1, [sp, #4]
    dbf8:	ldr	r2, [sp, #20]
    dbfc:	ldr	r3, [r1]
    dc00:	cmp	r2, r3
    dc04:	bne	de4c <g_markup_error_quark@plt+0x2394>
    dc08:	add	sp, sp, #28
    dc0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc10:	ldr	r4, [r4, #4]
    dc14:	cmp	r4, #0
    dc18:	beq	dbb8 <g_markup_error_quark@plt+0x2100>
    dc1c:	ldr	r0, [r4]
    dc20:	mov	r1, r7
    dc24:	mov	r2, r8
    dc28:	bl	db74 <g_markup_error_quark@plt+0x20bc>
    dc2c:	cmp	r0, #0
    dc30:	bne	dc10 <g_markup_error_quark@plt+0x2158>
    dc34:	b	dbf0 <g_markup_error_quark@plt+0x2138>
    dc38:	movw	r1, #30176	; 0x75e0
    dc3c:	mov	r0, r5
    dc40:	movt	r1, #1
    dc44:	bl	14944 <base_info_ref@@Base+0x2e4>
    dc48:	cmp	r0, #0
    dc4c:	beq	de3c <g_markup_error_quark@plt+0x2384>
    dc50:	mov	r0, r5
    dc54:	bl	1494c <base_info_ref@@Base+0x2ec>
    dc58:	subs	r6, r0, #0
    dc5c:	beq	ddcc <g_markup_error_quark@plt+0x2314>
    dc60:	movw	r5, #27572	; 0x6bb4
    dc64:	movt	r5, #1
    dc68:	mov	r9, #0
    dc6c:	mov	sl, #44	; 0x2c
    dc70:	ldr	r0, [r6]
    dc74:	add	r1, sp, #16
    dc78:	add	r2, sp, #12
    dc7c:	mov	r3, r8
    dc80:	bl	c3d8 <g_markup_error_quark@plt+0x920>
    dc84:	cmp	r0, #0
    dc88:	beq	dbf4 <g_markup_error_quark@plt+0x213c>
    dc8c:	movw	r0, #31044	; 0x7944
    dc90:	movt	r0, #1
    dc94:	bl	b4d0 <g_string_new@plt>
    dc98:	mov	r4, r0
    dc9c:	ldr	r0, [sp, #16]
    dca0:	bl	b638 <g_type_fundamental@plt>
    dca4:	sub	r0, r0, #4
    dca8:	cmp	r0, #76	; 0x4c
    dcac:	ldrls	r1, [r5, r0, lsl #2]
    dcb0:	movhi	r1, #0
    dcb4:	mov	r0, r4
    dcb8:	bl	ba40 <g_string_append@plt>
    dcbc:	ldr	r3, [r4, #4]
    dcc0:	ldr	r1, [r4, #8]
    dcc4:	add	r2, r3, #1
    dcc8:	cmp	r2, r1
    dccc:	bcs	ddf0 <g_markup_error_quark@plt+0x2338>
    dcd0:	ldr	r1, [r4]
    dcd4:	str	r2, [r4, #4]
    dcd8:	mov	r2, #58	; 0x3a
    dcdc:	strb	r2, [r1, r3]
    dce0:	ldm	r4, {r2, r3}
    dce4:	strb	r9, [r2, r3]
    dce8:	ldr	r0, [sp, #12]
    dcec:	ldr	r3, [r0, #4]
    dcf0:	cmp	r3, #0
    dcf4:	movne	fp, #0
    dcf8:	bne	dd0c <g_markup_error_quark@plt+0x2254>
    dcfc:	b	de04 <g_markup_error_quark@plt+0x234c>
    dd00:	add	fp, fp, #1
    dd04:	cmp	fp, r2
    dd08:	bcs	dd80 <g_markup_error_quark@plt+0x22c8>
    dd0c:	ldr	r2, [r0]
    dd10:	ldr	r0, [r2, fp, lsl #2]
    dd14:	bl	b638 <g_type_fundamental@plt>
    dd18:	sub	r0, r0, #4
    dd1c:	cmp	r0, #76	; 0x4c
    dd20:	ldrls	r1, [r5, r0, lsl #2]
    dd24:	movhi	r1, #0
    dd28:	mov	r0, r4
    dd2c:	bl	ba40 <g_string_append@plt>
    dd30:	ldr	r0, [sp, #12]
    dd34:	ldr	r2, [r0, #4]
    dd38:	sub	r1, r2, #1
    dd3c:	cmp	fp, r1
    dd40:	bcs	dd00 <g_markup_error_quark@plt+0x2248>
    dd44:	ldr	r2, [r4, #4]
    dd48:	ldr	r0, [r4, #8]
    dd4c:	add	r1, r2, #1
    dd50:	cmp	r1, r0
    dd54:	bcs	ddd4 <g_markup_error_quark@plt+0x231c>
    dd58:	ldr	r0, [r4]
    dd5c:	add	fp, fp, #1
    dd60:	str	r1, [r4, #4]
    dd64:	strb	sl, [r0, r2]
    dd68:	ldm	r4, {r1, r2}
    dd6c:	strb	r9, [r1, r2]
    dd70:	ldr	r0, [sp, #12]
    dd74:	ldr	r2, [r0, #4]
    dd78:	cmp	fp, r2
    dd7c:	bcc	dd0c <g_markup_error_quark@plt+0x2254>
    dd80:	cmp	r2, #0
    dd84:	beq	de04 <g_markup_error_quark@plt+0x234c>
    dd88:	mov	r1, #1
    dd8c:	bl	b488 <g_array_free@plt>
    dd90:	mov	r0, r4
    dd94:	mov	r1, #0
    dd98:	bl	b608 <g_string_free@plt>
    dd9c:	subs	r4, r0, #0
    dda0:	beq	de50 <g_markup_error_quark@plt+0x2398>
    dda4:	ldr	r0, [r7, #16]
    dda8:	mov	r1, r4
    ddac:	bl	b890 <g_hash_table_lookup@plt>
    ddb0:	subs	r2, r0, #0
    ddb4:	beq	de2c <g_markup_error_quark@plt+0x2374>
    ddb8:	mov	r0, r4
    ddbc:	bl	b248 <g_free@plt>
    ddc0:	ldr	r6, [r6, #4]
    ddc4:	cmp	r6, #0
    ddc8:	bne	dc70 <g_markup_error_quark@plt+0x21b8>
    ddcc:	mov	r0, #1
    ddd0:	b	dbf4 <g_markup_error_quark@plt+0x213c>
    ddd4:	mov	r2, #44	; 0x2c
    ddd8:	mov	r0, r4
    dddc:	mvn	r1, #0
    dde0:	bl	b8e4 <g_string_insert_c@plt>
    dde4:	ldr	r0, [sp, #12]
    dde8:	ldr	r2, [r0, #4]
    ddec:	b	dd00 <g_markup_error_quark@plt+0x2248>
    ddf0:	mov	r0, r4
    ddf4:	mvn	r1, #0
    ddf8:	mov	r2, #58	; 0x3a
    ddfc:	bl	b8e4 <g_string_insert_c@plt>
    de00:	b	dce8 <g_markup_error_quark@plt+0x2230>
    de04:	mov	r0, #4
    de08:	bl	b638 <g_type_fundamental@plt>
    de0c:	sub	r0, r0, #4
    de10:	cmp	r0, #76	; 0x4c
    de14:	movhi	r1, #0
    de18:	ldrls	r1, [r5, r0, lsl #2]
    de1c:	mov	r0, r4
    de20:	bl	ba40 <g_string_append@plt>
    de24:	ldr	r0, [sp, #12]
    de28:	b	dd88 <g_markup_error_quark@plt+0x22d0>
    de2c:	mov	r1, r4
    de30:	ldr	r0, [r7, #16]
    de34:	bl	b410 <g_hash_table_insert@plt>
    de38:	b	ddc0 <g_markup_error_quark@plt+0x2308>
    de3c:	ldr	r3, [r7, #4]
    de40:	cmp	r3, #0
    de44:	bne	dc50 <g_markup_error_quark@plt+0x2198>
    de48:	b	ddcc <g_markup_error_quark@plt+0x2314>
    de4c:	bl	b824 <__stack_chk_fail@plt>
    de50:	mov	r0, r4
    de54:	b	dbf4 <g_markup_error_quark@plt+0x213c>
    de58:	movw	ip, #8992	; 0x2320
    de5c:	movt	ip, #2
    de60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    de64:	cmp	r0, #0
    de68:	ldr	r3, [ip]
    de6c:	sub	sp, sp, #76	; 0x4c
    de70:	str	ip, [sp, #52]	; 0x34
    de74:	str	r0, [sp, #32]
    de78:	str	r1, [sp, #24]
    de7c:	str	r2, [sp, #20]
    de80:	str	r3, [sp, #68]	; 0x44
    de84:	beq	e7a4 <g_markup_error_quark@plt+0x2cec>
    de88:	movw	ip, #27572	; 0x6bb4
    de8c:	movt	ip, #1
    de90:	str	ip, [sp, #44]	; 0x2c
    de94:	ldr	ip, [sp, #32]
    de98:	ldr	r9, [ip]
    de9c:	mov	r0, r9
    dea0:	bl	146dc <base_info_ref@@Base+0x7c>
    dea4:	cmp	r0, #0
    dea8:	bne	dee8 <g_markup_error_quark@plt+0x2430>
    deac:	mov	r0, r9
    deb0:	bl	147dc <base_info_ref@@Base+0x17c>
    deb4:	ldr	r1, [sp, #24]
    deb8:	ldr	r2, [sp, #20]
    debc:	bl	de58 <g_markup_error_quark@plt+0x23a0>
    dec0:	cmp	r0, #0
    dec4:	bne	e774 <g_markup_error_quark@plt+0x2cbc>
    dec8:	mov	r0, #0
    decc:	ldr	ip, [sp, #52]	; 0x34
    ded0:	ldr	r2, [sp, #68]	; 0x44
    ded4:	ldr	r3, [ip]
    ded8:	cmp	r2, r3
    dedc:	bne	ec88 <g_markup_error_quark@plt+0x31d0>
    dee0:	add	sp, sp, #76	; 0x4c
    dee4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dee8:	ldr	ip, [sp, #24]
    deec:	movw	r1, #30176	; 0x75e0
    def0:	mov	r0, r9
    def4:	movt	r1, #1
    def8:	ldr	ip, [ip, #8]
    defc:	str	ip, [sp, #28]
    df00:	ldr	ip, [sp, #24]
    df04:	ldr	fp, [ip, #20]
    df08:	bl	14944 <base_info_ref@@Base+0x2e4>
    df0c:	cmp	r0, #0
    df10:	str	r0, [sp, #48]	; 0x30
    df14:	beq	e7c0 <g_markup_error_quark@plt+0x2d08>
    df18:	mov	r0, r9
    df1c:	bl	1494c <base_info_ref@@Base+0x2ec>
    df20:	cmp	r0, #0
    df24:	strne	r9, [sp, #36]	; 0x24
    df28:	str	r0, [sp, #40]	; 0x28
    df2c:	movne	r9, fp
    df30:	beq	e540 <g_markup_error_quark@plt+0x2a88>
    df34:	ldr	ip, [sp, #40]	; 0x28
    df38:	movw	r1, #30176	; 0x75e0
    df3c:	movt	r1, #1
    df40:	ldr	r8, [ip]
    df44:	mov	r0, r8
    df48:	bl	14ad4 <base_info_ref@@Base+0x474>
    df4c:	bl	b3a4 <g_strdup@plt>
    df50:	subs	r4, r0, #0
    df54:	beq	ea30 <g_markup_error_quark@plt+0x2f78>
    df58:	movw	r0, #30232	; 0x7618
    df5c:	ldr	r1, [sp, #28]
    df60:	movt	r0, #1
    df64:	ldr	r2, [sp, #20]
    df68:	mov	r3, r4
    df6c:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    df70:	cmp	r0, #0
    df74:	mov	r0, r4
    df78:	beq	ea90 <g_markup_error_quark@plt+0x2fd8>
    df7c:	bl	b248 <g_free@plt>
    df80:	ldr	ip, [sp, #24]
    df84:	mov	r0, r8
    df88:	add	r1, sp, #64	; 0x40
    df8c:	add	r2, sp, #60	; 0x3c
    df90:	ldr	r3, [sp, #20]
    df94:	ldr	r5, [ip, #4]
    df98:	bl	c3d8 <g_markup_error_quark@plt+0x920>
    df9c:	cmp	r0, #0
    dfa0:	beq	dec8 <g_markup_error_quark@plt+0x2410>
    dfa4:	movw	r0, #30256	; 0x7630
    dfa8:	movt	r0, #1
    dfac:	bl	b4d0 <g_string_new@plt>
    dfb0:	mov	r1, r5
    dfb4:	mov	r4, r0
    dfb8:	bl	ba40 <g_string_append@plt>
    dfbc:	ldr	r3, [r4, #4]
    dfc0:	ldr	r1, [r4, #8]
    dfc4:	add	r2, r3, #1
    dfc8:	cmp	r2, r1
    dfcc:	bcs	e7ac <g_markup_error_quark@plt+0x2cf4>
    dfd0:	ldr	r0, [r4]
    dfd4:	mov	lr, #95	; 0x5f
    dfd8:	str	r2, [r4, #4]
    dfdc:	mov	r1, #0
    dfe0:	strb	lr, [r0, r3]
    dfe4:	ldm	r4, {r2, r3}
    dfe8:	strb	r1, [r2, r3]
    dfec:	ldr	r0, [sp, #64]	; 0x40
    dff0:	bl	b638 <g_type_fundamental@plt>
    dff4:	sub	r0, r0, #4
    dff8:	cmp	r0, #76	; 0x4c
    dffc:	ldrls	ip, [sp, #44]	; 0x2c
    e000:	movhi	r1, #0
    e004:	ldrls	r1, [ip, r0, lsl #2]
    e008:	mov	r0, r4
    e00c:	bl	ba40 <g_string_append@plt>
    e010:	mov	r0, r4
    e014:	movw	r1, #30276	; 0x7644
    e018:	movt	r1, #1
    e01c:	bl	ba40 <g_string_append@plt>
    e020:	ldr	r0, [sp, #60]	; 0x3c
    e024:	ldr	r3, [r0, #4]
    e028:	cmp	r3, #0
    e02c:	beq	e7d8 <g_markup_error_quark@plt+0x2d20>
    e030:	mov	r7, #0
    e034:	mov	r6, #95	; 0x5f
    e038:	mov	r5, r7
    e03c:	mov	r2, r0
    e040:	ldr	sl, [sp, #44]	; 0x2c
    e044:	b	e054 <g_markup_error_quark@plt+0x259c>
    e048:	add	r7, r7, #1
    e04c:	cmp	r3, r7
    e050:	bls	e0c8 <g_markup_error_quark@plt+0x2610>
    e054:	ldr	r3, [r2]
    e058:	ldr	r0, [r3, r7, lsl #2]
    e05c:	bl	b638 <g_type_fundamental@plt>
    e060:	sub	r0, r0, #4
    e064:	cmp	r0, #76	; 0x4c
    e068:	ldrls	r1, [sl, r0, lsl #2]
    e06c:	movhi	r1, #0
    e070:	mov	r0, r4
    e074:	bl	ba40 <g_string_append@plt>
    e078:	ldr	r2, [sp, #60]	; 0x3c
    e07c:	ldr	r3, [r2, #4]
    e080:	sub	r1, r3, #1
    e084:	cmp	r1, r7
    e088:	bls	e048 <g_markup_error_quark@plt+0x2590>
    e08c:	ldr	r3, [r4, #4]
    e090:	ldr	r1, [r4, #8]
    e094:	add	r2, r3, #1
    e098:	cmp	r2, r1
    e09c:	bcs	e490 <g_markup_error_quark@plt+0x29d8>
    e0a0:	ldr	r1, [r4]
    e0a4:	add	r7, r7, #1
    e0a8:	str	r2, [r4, #4]
    e0ac:	strb	r6, [r1, r3]
    e0b0:	ldm	r4, {r2, r3}
    e0b4:	strb	r5, [r2, r3]
    e0b8:	ldr	r2, [sp, #60]	; 0x3c
    e0bc:	ldr	r3, [r2, #4]
    e0c0:	cmp	r3, r7
    e0c4:	bhi	e054 <g_markup_error_quark@plt+0x259c>
    e0c8:	cmp	r3, #0
    e0cc:	mov	r0, r2
    e0d0:	beq	e7d8 <g_markup_error_quark@plt+0x2d20>
    e0d4:	mov	r1, #1
    e0d8:	bl	b488 <g_array_free@plt>
    e0dc:	mov	r0, r4
    e0e0:	mov	r1, #0
    e0e4:	bl	b608 <g_string_free@plt>
    e0e8:	subs	r4, r0, #0
    e0ec:	beq	dec8 <g_markup_error_quark@plt+0x2410>
    e0f0:	ldr	lr, [r9, #4]
    e0f4:	movw	r0, #30280	; 0x7648
    e0f8:	ldr	r1, [sp, #28]
    e0fc:	movt	r0, #1
    e100:	ldr	r2, [sp, #20]
    e104:	mov	r3, r4
    e108:	str	lr, [sp]
    e10c:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    e110:	cmp	r0, #0
    e114:	beq	ea8c <g_markup_error_quark@plt+0x2fd4>
    e118:	movw	r1, #27880	; 0x6ce8
    e11c:	mov	r0, r8
    e120:	movt	r1, #1
    e124:	bl	14ad4 <base_info_ref@@Base+0x474>
    e128:	mov	r4, r0
    e12c:	ldr	r0, [sp, #36]	; 0x24
    e130:	bl	148d0 <base_info_ref@@Base+0x270>
    e134:	mov	r1, r0
    e138:	mov	r0, r9
    e13c:	bl	ba40 <g_string_append@plt>
    e140:	ldr	r3, [r9, #4]
    e144:	ldr	r1, [r9, #8]
    e148:	add	r2, r3, #1
    e14c:	cmp	r2, r1
    e150:	bcs	e760 <g_markup_error_quark@plt+0x2ca8>
    e154:	ldr	r0, [r9]
    e158:	mov	r1, #0
    e15c:	str	r2, [r9, #4]
    e160:	strb	r1, [r0, r3]
    e164:	ldm	r9, {r2, r3}
    e168:	strb	r1, [r2, r3]
    e16c:	mov	r0, r8
    e170:	bl	14a60 <base_info_ref@@Base+0x400>
    e174:	mov	r1, r0
    e178:	mov	r0, r9
    e17c:	bl	ba40 <g_string_append@plt>
    e180:	ldr	r3, [r9, #4]
    e184:	ldr	r1, [r9, #8]
    e188:	add	r2, r3, #1
    e18c:	cmp	r2, r1
    e190:	bcs	e74c <g_markup_error_quark@plt+0x2c94>
    e194:	ldr	r0, [r9]
    e198:	mov	r1, #0
    e19c:	str	r2, [r9, #4]
    e1a0:	strb	r1, [r0, r3]
    e1a4:	ldm	r9, {r2, r3}
    e1a8:	strb	r1, [r2, r3]
    e1ac:	ldr	r3, [r9, #4]
    e1b0:	cmp	r4, #0
    e1b4:	ldr	r0, [r9, #8]
    e1b8:	add	r1, r3, #1
    e1bc:	moveq	r2, #83	; 0x53
    e1c0:	movne	r2, #65	; 0x41
    e1c4:	cmp	r1, r0
    e1c8:	bcs	e73c <g_markup_error_quark@plt+0x2c84>
    e1cc:	ldr	r0, [r9]
    e1d0:	str	r1, [r9, #4]
    e1d4:	mov	r1, #0
    e1d8:	strb	r2, [r0, r3]
    e1dc:	ldm	r9, {r2, r3}
    e1e0:	strb	r1, [r2, r3]
    e1e4:	ldr	r3, [r9, #4]
    e1e8:	ldr	r1, [r9, #8]
    e1ec:	add	r2, r3, #1
    e1f0:	cmp	r2, r1
    e1f4:	bcs	e728 <g_markup_error_quark@plt+0x2c70>
    e1f8:	ldr	r0, [r9]
    e1fc:	mov	r1, #0
    e200:	str	r2, [r9, #4]
    e204:	strb	r1, [r0, r3]
    e208:	ldm	r9, {r2, r3}
    e20c:	strb	r1, [r2, r3]
    e210:	mov	r0, r8
    e214:	bl	14adc <base_info_ref@@Base+0x47c>
    e218:	subs	r6, r0, #0
    e21c:	movne	r7, #0
    e220:	movne	sl, r7
    e224:	movne	r5, r7
    e228:	bne	e450 <g_markup_error_quark@plt+0x2998>
    e22c:	b	e4ec <g_markup_error_quark@plt+0x2a34>
    e230:	ldr	r1, [r9]
    e234:	str	r2, [r9, #4]
    e238:	strb	r5, [r1, r3]
    e23c:	ldm	r9, {r2, r3}
    e240:	strb	r5, [r2, r3]
    e244:	mov	r0, r4
    e248:	bl	15174 <base_info_unref@@Base+0xc8>
    e24c:	cmp	r0, #0
    e250:	moveq	r2, #73	; 0x49
    e254:	beq	e268 <g_markup_error_quark@plt+0x27b0>
    e258:	cmp	r0, #1
    e25c:	addeq	sl, sl, #1
    e260:	moveq	r2, #79	; 0x4f
    e264:	movne	r2, #0
    e268:	ldr	r3, [r9, #4]
    e26c:	ldr	r0, [r9, #8]
    e270:	add	r1, r3, #1
    e274:	cmp	r1, r0
    e278:	bcs	e4c0 <g_markup_error_quark@plt+0x2a08>
    e27c:	ldr	r0, [r9]
    e280:	str	r1, [r9, #4]
    e284:	strb	r2, [r0, r3]
    e288:	ldm	r9, {r2, r3}
    e28c:	strb	r5, [r2, r3]
    e290:	ldr	r3, [r9, #4]
    e294:	ldr	r1, [r9, #8]
    e298:	add	r2, r3, #1
    e29c:	cmp	r2, r1
    e2a0:	bcs	e4ac <g_markup_error_quark@plt+0x29f4>
    e2a4:	ldr	r1, [r9]
    e2a8:	str	r2, [r9, #4]
    e2ac:	strb	r5, [r1, r3]
    e2b0:	ldm	r9, {r2, r3}
    e2b4:	strb	r5, [r2, r3]
    e2b8:	movw	r1, #30292	; 0x7654
    e2bc:	mov	r0, r4
    e2c0:	movt	r1, #1
    e2c4:	bl	151e8 <base_info_unref@@Base+0x13c>
    e2c8:	subs	fp, r0, #0
    e2cc:	mov	r0, r4
    e2d0:	beq	e670 <g_markup_error_quark@plt+0x2bb8>
    e2d4:	bl	15174 <base_info_unref@@Base+0xc8>
    e2d8:	cmp	r0, #0
    e2dc:	beq	e908 <g_markup_error_quark@plt+0x2e50>
    e2e0:	ldr	r3, [r9, #4]
    e2e4:	ldr	r1, [r9, #8]
    e2e8:	add	r2, r3, #1
    e2ec:	cmp	r2, r1
    e2f0:	bcs	e628 <g_markup_error_quark@plt+0x2b70>
    e2f4:	ldr	r1, [r9]
    e2f8:	mov	r0, #67	; 0x43
    e2fc:	str	r2, [r9, #4]
    e300:	strb	r0, [r1, r3]
    e304:	ldm	r9, {r2, r3}
    e308:	strb	r5, [r2, r3]
    e30c:	ldr	r3, [r9, #4]
    e310:	ldr	r1, [r9, #8]
    e314:	add	r2, r3, #1
    e318:	cmp	r2, r1
    e31c:	bcs	e5fc <g_markup_error_quark@plt+0x2b44>
    e320:	ldr	r1, [r9]
    e324:	str	r2, [r9, #4]
    e328:	strb	r5, [r1, r3]
    e32c:	ldm	r9, {r2, r3}
    e330:	strb	r5, [r2, r3]
    e334:	movw	r1, #27912	; 0x6d08
    e338:	mov	r0, r4
    e33c:	movt	r1, #1
    e340:	bl	151e8 <base_info_unref@@Base+0x13c>
    e344:	subs	fp, r0, #0
    e348:	beq	e6c0 <g_markup_error_quark@plt+0x2c08>
    e34c:	cmp	r7, #0
    e350:	bne	e804 <g_markup_error_quark@plt+0x2d4c>
    e354:	mov	r0, r4
    e358:	bl	15174 <base_info_unref@@Base+0xc8>
    e35c:	cmp	r0, #0
    e360:	beq	e850 <g_markup_error_quark@plt+0x2d98>
    e364:	cmp	sl, #1
    e368:	bne	e8ac <g_markup_error_quark@plt+0x2df4>
    e36c:	ldrb	r3, [fp]
    e370:	cmp	r3, #0
    e374:	beq	e63c <g_markup_error_quark@plt+0x2b84>
    e378:	mov	r1, fp
    e37c:	movw	r0, #27948	; 0x6d2c
    e380:	movt	r0, #1
    e384:	bl	ba64 <strcmp@plt>
    e388:	cmp	r0, #0
    e38c:	bne	e964 <g_markup_error_quark@plt+0x2eac>
    e390:	mov	r0, r4
    e394:	bl	1516c <base_info_unref@@Base+0xc0>
    e398:	mov	r1, sl
    e39c:	bl	11e88 <dbus_g_value_build_g_variant@@Base+0xa04>
    e3a0:	mov	fp, r0
    e3a4:	bl	13d60 <dbus_g_value_build_g_variant@@Base+0x28dc>
    e3a8:	cmp	r0, #0
    e3ac:	beq	e9c0 <g_markup_error_quark@plt+0x2f08>
    e3b0:	ldr	r3, [r9, #4]
    e3b4:	ldr	r1, [r9, #8]
    e3b8:	add	r2, r3, #1
    e3bc:	cmp	r2, r1
    e3c0:	bcs	e65c <g_markup_error_quark@plt+0x2ba4>
    e3c4:	ldr	r1, [r9]
    e3c8:	mov	r0, #69	; 0x45
    e3cc:	str	r2, [r9, #4]
    e3d0:	strb	r0, [r1, r3]
    e3d4:	ldm	r9, {r2, r3}
    e3d8:	strb	r7, [r2, r3]
    e3dc:	ldr	r3, [r9, #4]
    e3e0:	ldr	r1, [r9, #8]
    e3e4:	add	r2, r3, #1
    e3e8:	cmp	r2, r1
    e3ec:	bcs	e610 <g_markup_error_quark@plt+0x2b58>
    e3f0:	ldr	r1, [r9]
    e3f4:	mov	r7, #1
    e3f8:	str	r2, [r9, #4]
    e3fc:	strb	r5, [r1, r3]
    e400:	ldm	r9, {r2, r3}
    e404:	strb	r5, [r2, r3]
    e408:	mov	r0, r4
    e40c:	bl	1516c <base_info_unref@@Base+0xc0>
    e410:	mov	r1, r0
    e414:	mov	r0, r9
    e418:	bl	ba40 <g_string_append@plt>
    e41c:	ldr	r3, [r9, #4]
    e420:	ldr	r1, [r9, #8]
    e424:	add	r2, r3, #1
    e428:	cmp	r2, r1
    e42c:	bcs	e4d0 <g_markup_error_quark@plt+0x2a18>
    e430:	ldr	r1, [r9]
    e434:	str	r2, [r9, #4]
    e438:	strb	r5, [r1, r3]
    e43c:	ldm	r9, {r2, r3}
    e440:	strb	r5, [r2, r3]
    e444:	ldr	r6, [r6, #4]
    e448:	cmp	r6, #0
    e44c:	beq	e4ec <g_markup_error_quark@plt+0x2a34>
    e450:	ldr	r4, [r6]
    e454:	mov	r0, r4
    e458:	bl	15164 <base_info_unref@@Base+0xb8>
    e45c:	mov	r1, r0
    e460:	mov	r0, r9
    e464:	bl	ba40 <g_string_append@plt>
    e468:	ldr	r3, [r9, #4]
    e46c:	ldr	r1, [r9, #8]
    e470:	add	r2, r3, #1
    e474:	cmp	r2, r1
    e478:	bcc	e230 <g_markup_error_quark@plt+0x2778>
    e47c:	mov	r0, r9
    e480:	mvn	r1, #0
    e484:	mov	r2, #0
    e488:	bl	b8e4 <g_string_insert_c@plt>
    e48c:	b	e244 <g_markup_error_quark@plt+0x278c>
    e490:	mov	r2, #95	; 0x5f
    e494:	mov	r0, r4
    e498:	mvn	r1, #0
    e49c:	bl	b8e4 <g_string_insert_c@plt>
    e4a0:	ldr	r2, [sp, #60]	; 0x3c
    e4a4:	ldr	r3, [r2, #4]
    e4a8:	b	e048 <g_markup_error_quark@plt+0x2590>
    e4ac:	mov	r0, r9
    e4b0:	mvn	r1, #0
    e4b4:	mov	r2, #0
    e4b8:	bl	b8e4 <g_string_insert_c@plt>
    e4bc:	b	e2b8 <g_markup_error_quark@plt+0x2800>
    e4c0:	mov	r0, r9
    e4c4:	mvn	r1, #0
    e4c8:	bl	b8e4 <g_string_insert_c@plt>
    e4cc:	b	e290 <g_markup_error_quark@plt+0x27d8>
    e4d0:	mov	r0, r9
    e4d4:	mvn	r1, #0
    e4d8:	mov	r2, #0
    e4dc:	bl	b8e4 <g_string_insert_c@plt>
    e4e0:	ldr	r6, [r6, #4]
    e4e4:	cmp	r6, #0
    e4e8:	bne	e450 <g_markup_error_quark@plt+0x2998>
    e4ec:	ldr	r3, [r9, #4]
    e4f0:	ldr	r1, [r9, #8]
    e4f4:	add	r2, r3, #1
    e4f8:	cmp	r2, r1
    e4fc:	bcs	ea78 <g_markup_error_quark@plt+0x2fc0>
    e500:	ldr	r0, [r9]
    e504:	mov	r1, #0
    e508:	str	r2, [r9, #4]
    e50c:	strb	r1, [r0, r3]
    e510:	ldm	r9, {r2, r3}
    e514:	strb	r1, [r2, r3]
    e518:	ldr	ip, [sp, #24]
    e51c:	ldr	r3, [ip, #32]
    e520:	add	r3, r3, #1
    e524:	str	r3, [ip, #32]
    e528:	ldr	ip, [sp, #40]	; 0x28
    e52c:	ldr	ip, [ip, #4]
    e530:	cmp	ip, #0
    e534:	str	ip, [sp, #40]	; 0x28
    e538:	bne	df34 <g_markup_error_quark@plt+0x247c>
    e53c:	ldr	r9, [sp, #36]	; 0x24
    e540:	mov	r0, r9
    e544:	bl	14954 <base_info_ref@@Base+0x2f4>
    e548:	subs	r4, r0, #0
    e54c:	movne	r5, #0
    e550:	ldrne	r6, [sp, #24]
    e554:	bne	e5bc <g_markup_error_quark@plt+0x2b04>
    e558:	b	ead8 <g_markup_error_quark@plt+0x3020>
    e55c:	ldr	r3, [r0]
    e560:	str	r1, [r0, #4]
    e564:	strb	r5, [r3, r2]
    e568:	ldm	r0, {r2, r3}
    e56c:	strb	r5, [r2, r3]
    e570:	mov	r0, r7
    e574:	ldr	r7, [r6, #24]
    e578:	bl	14ba8 <base_info_ref@@Base+0x548>
    e57c:	mov	r1, r0
    e580:	mov	r0, r7
    e584:	bl	ba40 <g_string_append@plt>
    e588:	ldr	r0, [r6, #24]
    e58c:	ldmib	r0, {r2, r3}
    e590:	add	r1, r2, #1
    e594:	cmp	r1, r3
    e598:	bcs	eac0 <g_markup_error_quark@plt+0x3008>
    e59c:	ldr	r3, [r0]
    e5a0:	str	r1, [r0, #4]
    e5a4:	strb	r5, [r3, r2]
    e5a8:	ldm	r0, {r2, r3}
    e5ac:	strb	r5, [r2, r3]
    e5b0:	ldr	r4, [r4, #4]
    e5b4:	cmp	r4, #0
    e5b8:	beq	ead8 <g_markup_error_quark@plt+0x3020>
    e5bc:	mov	r0, r9
    e5c0:	ldr	r8, [r6, #24]
    e5c4:	ldr	r7, [r4]
    e5c8:	bl	148d0 <base_info_ref@@Base+0x270>
    e5cc:	mov	r1, r0
    e5d0:	mov	r0, r8
    e5d4:	bl	ba40 <g_string_append@plt>
    e5d8:	ldr	r0, [r6, #24]
    e5dc:	ldmib	r0, {r2, r3}
    e5e0:	add	r1, r2, #1
    e5e4:	cmp	r1, r3
    e5e8:	bcc	e55c <g_markup_error_quark@plt+0x2aa4>
    e5ec:	mvn	r1, #0
    e5f0:	mov	r2, #0
    e5f4:	bl	b8e4 <g_string_insert_c@plt>
    e5f8:	b	e570 <g_markup_error_quark@plt+0x2ab8>
    e5fc:	mov	r0, r9
    e600:	mvn	r1, #0
    e604:	mov	r2, #0
    e608:	bl	b8e4 <g_string_insert_c@plt>
    e60c:	b	e334 <g_markup_error_quark@plt+0x287c>
    e610:	mov	r0, r9
    e614:	mvn	r1, #0
    e618:	mov	r2, #0
    e61c:	mov	r7, #1
    e620:	bl	b8e4 <g_string_insert_c@plt>
    e624:	b	e408 <g_markup_error_quark@plt+0x2950>
    e628:	mov	r0, r9
    e62c:	mvn	r1, #0
    e630:	mov	r2, #67	; 0x43
    e634:	bl	b8e4 <g_string_insert_c@plt>
    e638:	b	e30c <g_markup_error_quark@plt+0x2854>
    e63c:	ldr	r3, [r9, #4]
    e640:	ldr	r1, [r9, #8]
    e644:	add	r2, r3, #1
    e648:	cmp	r2, r1
    e64c:	bcs	e6ac <g_markup_error_quark@plt+0x2bf4>
    e650:	ldr	r1, [r9]
    e654:	mov	r0, #82	; 0x52
    e658:	b	e3cc <g_markup_error_quark@plt+0x2914>
    e65c:	mov	r0, r9
    e660:	mvn	r1, #0
    e664:	mov	r2, #69	; 0x45
    e668:	bl	b8e4 <g_string_insert_c@plt>
    e66c:	b	e3dc <g_markup_error_quark@plt+0x2924>
    e670:	bl	15174 <base_info_unref@@Base+0xc8>
    e674:	cmp	r0, #1
    e678:	bne	e334 <g_markup_error_quark@plt+0x287c>
    e67c:	ldr	r3, [r9, #4]
    e680:	ldr	r1, [r9, #8]
    e684:	add	r2, r3, #1
    e688:	cmp	r2, r1
    e68c:	bcs	ea64 <g_markup_error_quark@plt+0x2fac>
    e690:	ldr	r1, [r9]
    e694:	mov	r0, #70	; 0x46
    e698:	str	r2, [r9, #4]
    e69c:	strb	r0, [r1, r3]
    e6a0:	ldm	r9, {r2, r3}
    e6a4:	strb	fp, [r2, r3]
    e6a8:	b	e30c <g_markup_error_quark@plt+0x2854>
    e6ac:	mov	r0, r9
    e6b0:	mvn	r1, #0
    e6b4:	mov	r2, #82	; 0x52
    e6b8:	bl	b8e4 <g_string_insert_c@plt>
    e6bc:	b	e3dc <g_markup_error_quark@plt+0x2924>
    e6c0:	mov	r0, r4
    e6c4:	bl	15174 <base_info_unref@@Base+0xc8>
    e6c8:	cmp	r0, #1
    e6cc:	bne	e408 <g_markup_error_quark@plt+0x2950>
    e6d0:	ldr	r3, [r9, #4]
    e6d4:	ldr	r1, [r9, #8]
    e6d8:	add	r2, r3, #1
    e6dc:	cmp	r2, r1
    e6e0:	bcs	eaac <g_markup_error_quark@plt+0x2ff4>
    e6e4:	ldr	r1, [r9]
    e6e8:	mov	r0, #78	; 0x4e
    e6ec:	str	r2, [r9, #4]
    e6f0:	strb	r0, [r1, r3]
    e6f4:	ldm	r9, {r2, r3}
    e6f8:	strb	fp, [r2, r3]
    e6fc:	ldr	r3, [r9, #4]
    e700:	ldr	r1, [r9, #8]
    e704:	add	r2, r3, #1
    e708:	cmp	r2, r1
    e70c:	bcs	ea98 <g_markup_error_quark@plt+0x2fe0>
    e710:	ldr	r1, [r9]
    e714:	str	r2, [r9, #4]
    e718:	strb	r5, [r1, r3]
    e71c:	ldm	r9, {r2, r3}
    e720:	strb	r5, [r2, r3]
    e724:	b	e408 <g_markup_error_quark@plt+0x2950>
    e728:	mov	r0, r9
    e72c:	mvn	r1, #0
    e730:	mov	r2, #0
    e734:	bl	b8e4 <g_string_insert_c@plt>
    e738:	b	e210 <g_markup_error_quark@plt+0x2758>
    e73c:	mov	r0, r9
    e740:	mvn	r1, #0
    e744:	bl	b8e4 <g_string_insert_c@plt>
    e748:	b	e1e4 <g_markup_error_quark@plt+0x272c>
    e74c:	mov	r0, r9
    e750:	mvn	r1, #0
    e754:	mov	r2, #0
    e758:	bl	b8e4 <g_string_insert_c@plt>
    e75c:	b	e1ac <g_markup_error_quark@plt+0x26f4>
    e760:	mov	r0, r9
    e764:	mvn	r1, #0
    e768:	mov	r2, #0
    e76c:	bl	b8e4 <g_string_insert_c@plt>
    e770:	b	e16c <g_markup_error_quark@plt+0x26b4>
    e774:	mov	r0, r9
    e778:	bl	147d4 <base_info_ref@@Base+0x174>
    e77c:	ldr	r1, [sp, #24]
    e780:	ldr	r2, [sp, #20]
    e784:	bl	de58 <g_markup_error_quark@plt+0x23a0>
    e788:	cmp	r0, #0
    e78c:	beq	dec8 <g_markup_error_quark@plt+0x2410>
    e790:	ldr	ip, [sp, #32]
    e794:	ldr	ip, [ip, #4]
    e798:	cmp	ip, #0
    e79c:	str	ip, [sp, #32]
    e7a0:	bne	de94 <g_markup_error_quark@plt+0x23dc>
    e7a4:	mov	r0, #1
    e7a8:	b	decc <g_markup_error_quark@plt+0x2414>
    e7ac:	mov	r0, r4
    e7b0:	mvn	r1, #0
    e7b4:	mov	r2, #95	; 0x5f
    e7b8:	bl	b8e4 <g_string_insert_c@plt>
    e7bc:	b	dfec <g_markup_error_quark@plt+0x2534>
    e7c0:	ldr	ip, [sp, #24]
    e7c4:	ldr	ip, [ip, #4]
    e7c8:	cmp	ip, #0
    e7cc:	str	ip, [sp, #48]	; 0x30
    e7d0:	bne	df18 <g_markup_error_quark@plt+0x2460>
    e7d4:	b	e790 <g_markup_error_quark@plt+0x2cd8>
    e7d8:	mov	r0, #4
    e7dc:	bl	b638 <g_type_fundamental@plt>
    e7e0:	sub	r0, r0, #4
    e7e4:	cmp	r0, #76	; 0x4c
    e7e8:	movhi	r1, #0
    e7ec:	ldrls	ip, [sp, #44]	; 0x2c
    e7f0:	ldrls	r1, [ip, r0, lsl #2]
    e7f4:	mov	r0, r4
    e7f8:	bl	ba40 <g_string_append@plt>
    e7fc:	ldr	r0, [sp, #60]	; 0x3c
    e800:	b	e0d4 <g_markup_error_quark@plt+0x261c>
    e804:	ldr	r9, [sp, #36]	; 0x24
    e808:	str	r8, [sp, #16]
    e80c:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    e810:	ldr	ip, [sp, #16]
    e814:	mov	r4, r0
    e818:	mov	r0, ip
    e81c:	bl	14a60 <base_info_ref@@Base+0x400>
    e820:	mov	r5, r0
    e824:	mov	r0, r9
    e828:	bl	148d0 <base_info_ref@@Base+0x270>
    e82c:	str	r5, [sp]
    e830:	mov	r1, r4
    e834:	movw	r3, #30408	; 0x76c8
    e838:	mov	r2, #1
    e83c:	movt	r3, #1
    e840:	str	r0, [sp, #4]
    e844:	ldr	r0, [sp, #20]
    e848:	bl	b6ec <g_set_error@plt>
    e84c:	b	dec8 <g_markup_error_quark@plt+0x2410>
    e850:	ldr	r9, [sp, #36]	; 0x24
    e854:	str	r8, [sp, #16]
    e858:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    e85c:	mov	r5, r0
    e860:	mov	r0, r4
    e864:	bl	15164 <base_info_unref@@Base+0xb8>
    e868:	ldr	ip, [sp, #16]
    e86c:	mov	r6, r0
    e870:	mov	r0, ip
    e874:	bl	14a60 <base_info_ref@@Base+0x400>
    e878:	mov	r4, r0
    e87c:	mov	r0, r9
    e880:	bl	148d0 <base_info_ref@@Base+0x270>
    e884:	str	r6, [sp]
    e888:	str	r4, [sp, #4]
    e88c:	mov	r1, r5
    e890:	movw	r3, #30492	; 0x771c
    e894:	mov	r2, #1
    e898:	movt	r3, #1
    e89c:	str	r0, [sp, #8]
    e8a0:	ldr	r0, [sp, #20]
    e8a4:	bl	b6ec <g_set_error@plt>
    e8a8:	b	dec8 <g_markup_error_quark@plt+0x2410>
    e8ac:	ldr	r9, [sp, #36]	; 0x24
    e8b0:	str	r8, [sp, #16]
    e8b4:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    e8b8:	mov	r5, r0
    e8bc:	mov	r0, r4
    e8c0:	bl	15164 <base_info_unref@@Base+0xb8>
    e8c4:	ldr	ip, [sp, #16]
    e8c8:	mov	r6, r0
    e8cc:	mov	r0, ip
    e8d0:	bl	14a60 <base_info_ref@@Base+0x400>
    e8d4:	mov	r4, r0
    e8d8:	mov	r0, r9
    e8dc:	bl	148d0 <base_info_ref@@Base+0x270>
    e8e0:	str	r6, [sp]
    e8e4:	str	r4, [sp, #4]
    e8e8:	mov	r1, r5
    e8ec:	movw	r3, #30584	; 0x7778
    e8f0:	mov	r2, #1
    e8f4:	movt	r3, #1
    e8f8:	str	r0, [sp, #8]
    e8fc:	ldr	r0, [sp, #20]
    e900:	bl	b6ec <g_set_error@plt>
    e904:	b	dec8 <g_markup_error_quark@plt+0x2410>
    e908:	ldr	r9, [sp, #36]	; 0x24
    e90c:	str	r8, [sp, #16]
    e910:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    e914:	mov	r5, r0
    e918:	mov	r0, r4
    e91c:	bl	15164 <base_info_unref@@Base+0xb8>
    e920:	ldr	ip, [sp, #16]
    e924:	mov	r6, r0
    e928:	mov	r0, ip
    e92c:	bl	14a60 <base_info_ref@@Base+0x400>
    e930:	mov	r4, r0
    e934:	mov	r0, r9
    e938:	bl	148d0 <base_info_ref@@Base+0x270>
    e93c:	str	r6, [sp]
    e940:	str	r4, [sp, #4]
    e944:	mov	r1, r5
    e948:	movw	r3, #30324	; 0x7674
    e94c:	mov	r2, #1
    e950:	movt	r3, #1
    e954:	str	r0, [sp, #8]
    e958:	ldr	r0, [sp, #20]
    e95c:	bl	b6ec <g_set_error@plt>
    e960:	b	dec8 <g_markup_error_quark@plt+0x2410>
    e964:	ldr	r9, [sp, #36]	; 0x24
    e968:	str	r8, [sp, #16]
    e96c:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    e970:	mov	r5, r0
    e974:	mov	r0, r4
    e978:	bl	15164 <base_info_unref@@Base+0xb8>
    e97c:	ldr	ip, [sp, #16]
    e980:	mov	r6, r0
    e984:	mov	r0, ip
    e988:	bl	14a60 <base_info_ref@@Base+0x400>
    e98c:	mov	r4, r0
    e990:	mov	r0, r9
    e994:	bl	148d0 <base_info_ref@@Base+0x270>
    e998:	str	r6, [sp]
    e99c:	str	r4, [sp, #4]
    e9a0:	mov	r1, r5
    e9a4:	mov	r2, sl
    e9a8:	movw	r3, #30800	; 0x7850
    e9ac:	movt	r3, #1
    e9b0:	str	r0, [sp, #8]
    e9b4:	ldr	r0, [sp, #20]
    e9b8:	bl	b6ec <g_set_error@plt>
    e9bc:	b	dec8 <g_markup_error_quark@plt+0x2410>
    e9c0:	mov	ip, r8
    e9c4:	ldr	r9, [sp, #36]	; 0x24
    e9c8:	str	ip, [sp, #16]
    e9cc:	bl	f870 <g_markup_error_quark@plt+0x3db8>
    e9d0:	mov	r5, r0
    e9d4:	mov	r0, r4
    e9d8:	bl	15164 <base_info_unref@@Base+0xb8>
    e9dc:	mov	r7, r0
    e9e0:	mov	r0, fp
    e9e4:	bl	b7c4 <g_type_name@plt>
    e9e8:	ldr	ip, [sp, #16]
    e9ec:	mov	r6, r0
    e9f0:	mov	r0, ip
    e9f4:	bl	14a60 <base_info_ref@@Base+0x400>
    e9f8:	mov	r4, r0
    e9fc:	mov	r0, r9
    ea00:	bl	148d0 <base_info_ref@@Base+0x270>
    ea04:	str	r7, [sp]
    ea08:	str	r6, [sp, #4]
    ea0c:	mov	r1, r5
    ea10:	str	r4, [sp, #8]
    ea14:	mov	r2, sl
    ea18:	movw	r3, #30708	; 0x77f4
    ea1c:	movt	r3, #1
    ea20:	str	r0, [sp, #12]
    ea24:	ldr	r0, [sp, #20]
    ea28:	bl	b6ec <g_set_error@plt>
    ea2c:	b	dec8 <g_markup_error_quark@plt+0x2410>
    ea30:	mov	r0, r8
    ea34:	bl	14a60 <base_info_ref@@Base+0x400>
    ea38:	bl	11a20 <dbus_g_value_build_g_variant@@Base+0x59c>
    ea3c:	ldr	r1, [sp, #48]	; 0x30
    ea40:	mov	r5, r0
    ea44:	mov	r2, r0
    ea48:	movw	r0, #28024	; 0x6d78
    ea4c:	movt	r0, #1
    ea50:	bl	b5d8 <g_strdup_printf@plt>
    ea54:	mov	r4, r0
    ea58:	mov	r0, r5
    ea5c:	bl	b248 <g_free@plt>
    ea60:	b	df58 <g_markup_error_quark@plt+0x24a0>
    ea64:	mov	r0, r9
    ea68:	mvn	r1, #0
    ea6c:	mov	r2, #70	; 0x46
    ea70:	bl	b8e4 <g_string_insert_c@plt>
    ea74:	b	e30c <g_markup_error_quark@plt+0x2854>
    ea78:	mov	r0, r9
    ea7c:	mvn	r1, #0
    ea80:	mov	r2, #0
    ea84:	bl	b8e4 <g_string_insert_c@plt>
    ea88:	b	e518 <g_markup_error_quark@plt+0x2a60>
    ea8c:	mov	r0, r4
    ea90:	bl	b248 <g_free@plt>
    ea94:	b	dec8 <g_markup_error_quark@plt+0x2410>
    ea98:	mov	r0, r9
    ea9c:	mvn	r1, #0
    eaa0:	mov	r2, #0
    eaa4:	bl	b8e4 <g_string_insert_c@plt>
    eaa8:	b	e408 <g_markup_error_quark@plt+0x2950>
    eaac:	mov	r0, r9
    eab0:	mvn	r1, #0
    eab4:	mov	r2, #78	; 0x4e
    eab8:	bl	b8e4 <g_string_insert_c@plt>
    eabc:	b	e6fc <g_markup_error_quark@plt+0x2c44>
    eac0:	mvn	r1, #0
    eac4:	mov	r2, #0
    eac8:	bl	b8e4 <g_string_insert_c@plt>
    eacc:	ldr	r4, [r4, #4]
    ead0:	cmp	r4, #0
    ead4:	bne	e5bc <g_markup_error_quark@plt+0x2b04>
    ead8:	mov	r0, r9
    eadc:	bl	1495c <base_info_ref@@Base+0x2fc>
    eae0:	subs	r4, r0, #0
    eae4:	movne	r5, #0
    eae8:	ldrne	r6, [sp, #24]
    eaec:	bne	ec10 <g_markup_error_quark@plt+0x3158>
    eaf0:	b	e790 <g_markup_error_quark@plt+0x2cd8>
    eaf4:	tst	r0, #2
    eaf8:	movwne	r8, #30216	; 0x7608
    eafc:	movtne	r8, #1
    eb00:	beq	ec04 <g_markup_error_quark@plt+0x314c>
    eb04:	mov	r0, sl
    eb08:	bl	14ca0 <base_info_ref@@Base+0x640>
    eb0c:	bl	11a20 <dbus_g_value_build_g_variant@@Base+0x59c>
    eb10:	ldr	fp, [r6, #28]
    eb14:	mov	r7, r0
    eb18:	mov	r0, r9
    eb1c:	bl	148d0 <base_info_ref@@Base+0x270>
    eb20:	mov	r1, r0
    eb24:	mov	r0, fp
    eb28:	bl	ba40 <g_string_append@plt>
    eb2c:	ldr	r0, [r6, #28]
    eb30:	ldmib	r0, {r2, r3}
    eb34:	add	r1, r2, #1
    eb38:	cmp	r1, r3
    eb3c:	bcs	ec6c <g_markup_error_quark@plt+0x31b4>
    eb40:	ldr	r3, [r0]
    eb44:	str	r1, [r0, #4]
    eb48:	strb	r5, [r3, r2]
    eb4c:	ldm	r0, {r2, r3}
    eb50:	strb	r5, [r2, r3]
    eb54:	mov	r0, sl
    eb58:	ldr	sl, [r6, #28]
    eb5c:	bl	14ca0 <base_info_ref@@Base+0x640>
    eb60:	mov	r1, r0
    eb64:	mov	r0, sl
    eb68:	bl	ba40 <g_string_append@plt>
    eb6c:	ldr	r0, [r6, #28]
    eb70:	ldmib	r0, {r2, r3}
    eb74:	add	r1, r2, #1
    eb78:	cmp	r1, r3
    eb7c:	bcs	ec5c <g_markup_error_quark@plt+0x31a4>
    eb80:	ldr	r3, [r0]
    eb84:	str	r1, [r0, #4]
    eb88:	strb	r5, [r3, r2]
    eb8c:	ldm	r0, {r2, r3}
    eb90:	strb	r5, [r2, r3]
    eb94:	mov	r1, r7
    eb98:	ldr	r0, [r6, #28]
    eb9c:	bl	ba40 <g_string_append@plt>
    eba0:	ldr	r0, [r6, #28]
    eba4:	ldmib	r0, {r2, r3}
    eba8:	add	r1, r2, #1
    ebac:	cmp	r1, r3
    ebb0:	bcs	ec4c <g_markup_error_quark@plt+0x3194>
    ebb4:	ldr	r3, [r0]
    ebb8:	str	r1, [r0, #4]
    ebbc:	strb	r5, [r3, r2]
    ebc0:	ldm	r0, {r2, r3}
    ebc4:	strb	r5, [r2, r3]
    ebc8:	mov	r1, r8
    ebcc:	ldr	r0, [r6, #28]
    ebd0:	bl	ba40 <g_string_append@plt>
    ebd4:	ldr	r0, [r6, #28]
    ebd8:	ldmib	r0, {r2, r3}
    ebdc:	add	r1, r2, #1
    ebe0:	cmp	r1, r3
    ebe4:	bcs	ec3c <g_markup_error_quark@plt+0x3184>
    ebe8:	ldr	r3, [r0]
    ebec:	str	r1, [r0, #4]
    ebf0:	strb	r5, [r3, r2]
    ebf4:	ldm	r0, {r2, r3}
    ebf8:	strb	r5, [r2, r3]
    ebfc:	mov	r0, r7
    ec00:	bl	b248 <g_free@plt>
    ec04:	ldr	r4, [r4, #4]
    ec08:	cmp	r4, #0
    ec0c:	beq	e790 <g_markup_error_quark@plt+0x2cd8>
    ec10:	ldr	sl, [r4]
    ec14:	mov	r0, sl
    ec18:	bl	14cb0 <base_info_ref@@Base+0x650>
    ec1c:	and	r3, r0, #3
    ec20:	cmp	r3, #3
    ec24:	beq	ec7c <g_markup_error_quark@plt+0x31c4>
    ec28:	tst	r0, #1
    ec2c:	beq	eaf4 <g_markup_error_quark@plt+0x303c>
    ec30:	movw	r8, #30224	; 0x7610
    ec34:	movt	r8, #1
    ec38:	b	eb04 <g_markup_error_quark@plt+0x304c>
    ec3c:	mvn	r1, #0
    ec40:	mov	r2, #0
    ec44:	bl	b8e4 <g_string_insert_c@plt>
    ec48:	b	ebfc <g_markup_error_quark@plt+0x3144>
    ec4c:	mvn	r1, #0
    ec50:	mov	r2, #0
    ec54:	bl	b8e4 <g_string_insert_c@plt>
    ec58:	b	ebc8 <g_markup_error_quark@plt+0x3110>
    ec5c:	mvn	r1, #0
    ec60:	mov	r2, #0
    ec64:	bl	b8e4 <g_string_insert_c@plt>
    ec68:	b	eb94 <g_markup_error_quark@plt+0x30dc>
    ec6c:	mvn	r1, #0
    ec70:	mov	r2, #0
    ec74:	bl	b8e4 <g_string_insert_c@plt>
    ec78:	b	eb54 <g_markup_error_quark@plt+0x309c>
    ec7c:	movw	r8, #30212	; 0x7604
    ec80:	movt	r8, #1
    ec84:	b	eb04 <g_markup_error_quark@plt+0x304c>
    ec88:	bl	b824 <__stack_chk_fail@plt>
    ec8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ec90:	movw	r5, #8992	; 0x2320
    ec94:	movt	r5, #2
    ec98:	sub	sp, sp, #4160	; 0x1040
    ec9c:	sub	sp, sp, #36	; 0x24
    eca0:	mov	r7, r2
    eca4:	ldr	ip, [r5]
    eca8:	add	r2, sp, #8192	; 0x2000
    ecac:	mov	r4, #0
    ecb0:	mov	r6, r3
    ecb4:	mov	r8, r0
    ecb8:	mov	r9, r1
    ecbc:	str	ip, [r2, #-4004]	; 0xfffff05c
    ecc0:	str	r4, [sp, #56]	; 0x38
    ecc4:	str	r4, [sp, #60]	; 0x3c
    ecc8:	str	r4, [sp, #64]	; 0x40
    eccc:	str	r4, [sp, #68]	; 0x44
    ecd0:	str	r4, [sp, #72]	; 0x48
    ecd4:	str	r4, [sp, #76]	; 0x4c
    ecd8:	str	r4, [sp, #80]	; 0x50
    ecdc:	str	r4, [sp, #84]	; 0x54
    ece0:	str	r4, [sp, #88]	; 0x58
    ece4:	bl	fc58 <dbus_g_type_specialized_init@@Base>
    ece8:	bl	14590 <dbus_g_value_build_g_variant@@Base+0x310c>
    ecec:	mov	r3, r4
    ecf0:	movw	r0, #45868	; 0xb32c
    ecf4:	movw	r1, #47728	; 0xba70
    ecf8:	movt	r0, #0
    ecfc:	movt	r1, #0
    ed00:	movw	r2, #45640	; 0xb248
    ed04:	movt	r2, #0
    ed08:	str	r7, [sp, #60]	; 0x3c
    ed0c:	bl	b644 <g_hash_table_new_full@plt>
    ed10:	add	ip, sp, #4160	; 0x1040
    ed14:	movw	r3, #61384	; 0xefc8
    ed18:	add	ip, ip, #32
    ed1c:	movt	r3, #65535	; 0xffff
    ed20:	add	r1, sp, #56	; 0x38
    ed24:	mov	r2, r6
    ed28:	str	r6, [sp, #68]	; 0x44
    ed2c:	str	r4, [ip, r3]
    ed30:	str	r0, [sp, #72]	; 0x48
    ed34:	mov	r0, r8
    ed38:	bl	db74 <g_markup_error_quark@plt+0x20bc>
    ed3c:	cmp	r0, r4
    ed40:	bne	edc8 <g_markup_error_quark@plt+0x3310>
    ed44:	mov	r4, #0
    ed48:	mov	r7, r4
    ed4c:	add	r2, sp, #4160	; 0x1040
    ed50:	movw	r6, #61384	; 0xefc8
    ed54:	add	r2, r2, #32
    ed58:	movt	r6, #65535	; 0xffff
    ed5c:	ldr	r0, [r2, r6]
    ed60:	cmp	r0, #0
    ed64:	beq	ed78 <g_markup_error_quark@plt+0x32c0>
    ed68:	bl	b698 <unlink@plt>
    ed6c:	add	r3, sp, #4160	; 0x1040
    ed70:	add	r3, r3, #32
    ed74:	ldr	r0, [r3, r6]
    ed78:	bl	b248 <g_free@plt>
    ed7c:	cmp	r4, #0
    ed80:	beq	ed8c <g_markup_error_quark@plt+0x32d4>
    ed84:	mov	r0, r4
    ed88:	bl	b920 <g_io_channel_unref@plt>
    ed8c:	ldr	r0, [sp, #64]	; 0x40
    ed90:	cmp	r0, #0
    ed94:	beq	ed9c <g_markup_error_quark@plt+0x32e4>
    ed98:	bl	b920 <g_io_channel_unref@plt>
    ed9c:	ldr	r0, [sp, #72]	; 0x48
    eda0:	bl	b314 <g_hash_table_destroy@plt>
    eda4:	add	ip, sp, #8192	; 0x2000
    eda8:	mov	r0, r7
    edac:	ldr	r2, [ip, #-4004]	; 0xfffff05c
    edb0:	ldr	r3, [r5]
    edb4:	cmp	r2, r3
    edb8:	bne	f26c <g_markup_error_quark@plt+0x37b4>
    edbc:	add	sp, sp, #4160	; 0x1040
    edc0:	add	sp, sp, #36	; 0x24
    edc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    edc8:	movw	r0, #30884	; 0x78a4
    edcc:	add	r1, sp, #40	; 0x28
    edd0:	movt	r0, #1
    edd4:	mov	r2, r6
    edd8:	bl	b77c <g_file_open_tmp@plt>
    eddc:	cmp	r0, #0
    ede0:	blt	ed44 <g_markup_error_quark@plt+0x328c>
    ede4:	bl	b35c <g_io_channel_unix_new@plt>
    ede8:	mov	r1, r4
    edec:	mov	r2, r6
    edf0:	str	r0, [sp, #64]	; 0x40
    edf4:	bl	b2f0 <g_io_channel_set_encoding@plt>
    edf8:	cmp	r0, #0
    edfc:	beq	ed44 <g_markup_error_quark@plt+0x328c>
    ee00:	movw	r1, #49984	; 0xc340
    ee04:	ldr	r0, [sp, #72]	; 0x48
    ee08:	movt	r1, #0
    ee0c:	add	r2, sp, #56	; 0x38
    ee10:	bl	b650 <g_hash_table_foreach@plt>
    ee14:	cmp	r6, #0
    ee18:	beq	ee48 <g_markup_error_quark@plt+0x3390>
    ee1c:	ldr	r3, [r6]
    ee20:	cmp	r3, #0
    ee24:	beq	ee48 <g_markup_error_quark@plt+0x3390>
    ee28:	mov	r2, r6
    ee2c:	ldr	r0, [sp, #64]	; 0x40
    ee30:	mov	r1, #1
    ee34:	mov	r7, r4
    ee38:	bl	b29c <g_io_channel_shutdown@plt>
    ee3c:	ldr	r0, [sp, #64]	; 0x40
    ee40:	bl	b920 <g_io_channel_unref@plt>
    ee44:	b	ed4c <g_markup_error_quark@plt+0x3294>
    ee48:	mov	r2, r6
    ee4c:	mov	r1, #1
    ee50:	ldr	r0, [sp, #64]	; 0x40
    ee54:	mov	fp, #0
    ee58:	bl	b29c <g_io_channel_shutdown@plt>
    ee5c:	ldr	r0, [sp, #64]	; 0x40
    ee60:	bl	b920 <g_io_channel_unref@plt>
    ee64:	bl	b9c8 <g_ptr_array_new@plt>
    ee68:	movw	r1, #30924	; 0x78cc
    ee6c:	movt	r1, #1
    ee70:	mov	sl, r0
    ee74:	bl	b548 <g_ptr_array_add@plt>
    ee78:	mov	r0, sl
    ee7c:	movw	r1, #30940	; 0x78dc
    ee80:	movt	r1, #1
    ee84:	bl	b548 <g_ptr_array_add@plt>
    ee88:	mov	r0, sl
    ee8c:	movw	r1, #30952	; 0x78e8
    ee90:	movt	r1, #1
    ee94:	bl	b548 <g_ptr_array_add@plt>
    ee98:	mov	r0, sl
    ee9c:	movw	r1, #30960	; 0x78f0
    eea0:	movt	r1, #1
    eea4:	bl	b548 <g_ptr_array_add@plt>
    eea8:	mov	r2, r7
    eeac:	movw	r0, #30976	; 0x7900
    eeb0:	movw	r1, #30256	; 0x7630
    eeb4:	movt	r0, #1
    eeb8:	movt	r1, #1
    eebc:	bl	b5d8 <g_strdup_printf@plt>
    eec0:	mov	r1, r0
    eec4:	mov	r0, sl
    eec8:	bl	b548 <g_ptr_array_add@plt>
    eecc:	add	ip, sp, #4160	; 0x1040
    eed0:	add	ip, ip, #32
    eed4:	movw	r3, #61384	; 0xefc8
    eed8:	movt	r3, #65535	; 0xffff
    eedc:	mov	r0, sl
    eee0:	ldr	r1, [ip, r3]
    eee4:	bl	b548 <g_ptr_array_add@plt>
    eee8:	mov	r0, sl
    eeec:	mov	r1, fp
    eef0:	bl	b548 <g_ptr_array_add@plt>
    eef4:	ldr	r1, [sl]
    eef8:	add	r3, sp, #36	; 0x24
    eefc:	add	ip, sp, #32
    ef00:	str	r3, [sp, #8]
    ef04:	mov	r0, fp
    ef08:	str	r6, [sp, #24]
    ef0c:	mov	r2, fp
    ef10:	str	fp, [sp]
    ef14:	mov	r3, #4
    ef18:	str	fp, [sp, #4]
    ef1c:	str	fp, [sp, #12]
    ef20:	str	fp, [sp, #20]
    ef24:	str	ip, [sp, #16]
    ef28:	bl	b4dc <g_spawn_async_with_pipes@plt>
    ef2c:	mov	r1, #1
    ef30:	subs	r4, r0, #0
    ef34:	mov	r0, sl
    ef38:	bne	ef48 <g_markup_error_quark@plt+0x3490>
    ef3c:	mov	r7, r4
    ef40:	bl	b62c <g_ptr_array_free@plt>
    ef44:	b	ed4c <g_markup_error_quark@plt+0x3294>
    ef48:	bl	b62c <g_ptr_array_free@plt>
    ef4c:	add	r2, sp, #4160	; 0x1040
    ef50:	add	r2, r2, #32
    ef54:	movw	r3, #61376	; 0xefc0
    ef58:	movt	r3, #65535	; 0xffff
    ef5c:	ldr	r0, [r2, r3]
    ef60:	bl	b35c <g_io_channel_unix_new@plt>
    ef64:	mov	r1, fp
    ef68:	mov	r2, r6
    ef6c:	mov	r4, r0
    ef70:	bl	b2f0 <g_io_channel_set_encoding@plt>
    ef74:	cmp	r0, #0
    ef78:	bne	ef84 <g_markup_error_quark@plt+0x34cc>
    ef7c:	mov	r7, #0
    ef80:	b	ed4c <g_markup_error_quark@plt+0x3294>
    ef84:	str	r6, [sp]
    ef88:	movw	r1, #30992	; 0x7910
    ef8c:	mov	r0, r9
    ef90:	add	r3, sp, #52	; 0x34
    ef94:	movt	r1, #1
    ef98:	mvn	r2, #0
    ef9c:	bl	b5cc <g_io_channel_write_chars@plt>
    efa0:	cmp	r0, #0
    efa4:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    efa8:	movw	r7, #61388	; 0xefcc
    efac:	add	sl, sp, #48	; 0x30
    efb0:	movt	r7, #65535	; 0xffff
    efb4:	b	efe0 <g_markup_error_quark@plt+0x3528>
    efb8:	add	ip, sp, #4160	; 0x1040
    efbc:	mov	r0, r9
    efc0:	add	ip, ip, #32
    efc4:	add	r1, sp, #92	; 0x5c
    efc8:	mov	r3, sl
    efcc:	ldr	r2, [ip, r7]
    efd0:	str	r6, [sp]
    efd4:	bl	b5cc <g_io_channel_write_chars@plt>
    efd8:	cmp	r0, #1
    efdc:	bne	ef7c <g_markup_error_quark@plt+0x34c4>
    efe0:	str	r6, [sp]
    efe4:	mov	r0, r4
    efe8:	add	r1, sp, #92	; 0x5c
    efec:	mov	r2, #4096	; 0x1000
    eff0:	add	r3, sp, #44	; 0x2c
    eff4:	bl	b770 <g_io_channel_read_chars@plt>
    eff8:	cmp	r0, #1
    effc:	beq	efb8 <g_markup_error_quark@plt+0x3500>
    f000:	cmp	r0, #2
    f004:	bne	ef7c <g_markup_error_quark@plt+0x34c4>
    f008:	mov	r1, #1
    f00c:	mov	r2, r6
    f010:	mov	r0, r4
    f014:	bl	b29c <g_io_channel_shutdown@plt>
    f018:	str	r6, [sp]
    f01c:	movw	r1, #31048	; 0x7948
    f020:	mov	r0, r9
    f024:	movt	r1, #1
    f028:	mvn	r2, #0
    f02c:	add	r3, sp, #52	; 0x34
    f030:	bl	b5cc <g_io_channel_write_chars@plt>
    f034:	cmp	r0, #0
    f038:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f03c:	mov	sl, #0
    f040:	mov	r0, r9
    f044:	str	r9, [sp, #64]	; 0x40
    f048:	bl	b26c <g_io_channel_ref@plt>
    f04c:	mov	r1, sl
    f050:	movw	r0, #31044	; 0x7944
    f054:	movt	r0, #1
    f058:	ldr	r7, [sp, #64]	; 0x40
    f05c:	bl	b83c <g_string_new_len@plt>
    f060:	mov	r1, sl
    f064:	str	sl, [sp, #88]	; 0x58
    f068:	mov	r9, r0
    f06c:	movw	r0, #31044	; 0x7944
    f070:	movt	r0, #1
    f074:	str	r9, [sp, #76]	; 0x4c
    f078:	bl	b83c <g_string_new_len@plt>
    f07c:	mov	r1, sl
    f080:	str	r0, [sp, #80]	; 0x50
    f084:	movw	r0, #31044	; 0x7944
    f088:	movt	r0, #1
    f08c:	bl	b83c <g_string_new_len@plt>
    f090:	mov	r1, r7
    f094:	mov	r2, r6
    f098:	ldr	r3, [sp, #60]	; 0x3c
    f09c:	str	r0, [sp, #84]	; 0x54
    f0a0:	movw	r0, #31080	; 0x7968
    f0a4:	movt	r0, #1
    f0a8:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    f0ac:	cmp	r0, sl
    f0b0:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f0b4:	mov	r0, r8
    f0b8:	bl	147dc <base_info_ref@@Base+0x17c>
    f0bc:	add	r1, sp, #56	; 0x38
    f0c0:	mov	r2, r6
    f0c4:	bl	de58 <g_markup_error_quark@plt+0x23a0>
    f0c8:	cmp	r0, sl
    f0cc:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f0d0:	mov	r0, r8
    f0d4:	bl	147d4 <base_info_ref@@Base+0x174>
    f0d8:	add	r1, sp, #56	; 0x38
    f0dc:	mov	r2, r6
    f0e0:	bl	de58 <g_markup_error_quark@plt+0x23a0>
    f0e4:	cmp	r0, sl
    f0e8:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f0ec:	str	r6, [sp]
    f0f0:	movw	r1, #31140	; 0x79a4
    f0f4:	mov	r0, r7
    f0f8:	movt	r1, #1
    f0fc:	mvn	r2, #0
    f100:	add	r3, sp, #52	; 0x34
    f104:	bl	b5cc <g_io_channel_write_chars@plt>
    f108:	cmp	r0, sl
    f10c:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f110:	mov	r3, #1
    f114:	movw	r0, #31148	; 0x79ac
    f118:	str	r3, [sp]
    f11c:	movt	r0, #1
    f120:	mov	r1, r7
    f124:	mov	r2, r6
    f128:	ldr	r3, [sp, #60]	; 0x3c
    f12c:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    f130:	cmp	r0, sl
    f134:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f138:	movw	r0, #31208	; 0x79e8
    f13c:	mov	r1, r7
    f140:	movt	r0, #1
    f144:	mov	r2, r6
    f148:	ldr	r3, [sp, #60]	; 0x3c
    f14c:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    f150:	cmp	r0, sl
    f154:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f158:	movw	r0, #31236	; 0x7a04
    f15c:	mov	r1, r7
    f160:	movt	r0, #1
    f164:	mov	r2, r6
    f168:	ldr	r3, [sp, #88]	; 0x58
    f16c:	bl	c68c <g_markup_error_quark@plt+0xbd4>
    f170:	cmp	r0, sl
    f174:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f178:	mov	r0, r7
    f17c:	mov	r1, r9
    f180:	add	r2, r9, #4
    f184:	mov	r3, r6
    f188:	bl	bac4 <g_markup_error_quark@plt+0xc>
    f18c:	cmp	r0, sl
    f190:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f194:	str	r6, [sp]
    f198:	movw	r1, #31240	; 0x7a08
    f19c:	mov	r0, r7
    f1a0:	movt	r1, #1
    f1a4:	mvn	r2, #0
    f1a8:	add	r3, sp, #52	; 0x34
    f1ac:	bl	b5cc <g_io_channel_write_chars@plt>
    f1b0:	cmp	r0, sl
    f1b4:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f1b8:	ldr	r1, [sp, #80]	; 0x50
    f1bc:	mov	r0, r7
    f1c0:	mov	r3, r6
    f1c4:	add	r2, r1, #4
    f1c8:	bl	bac4 <g_markup_error_quark@plt+0xc>
    f1cc:	cmp	r0, sl
    f1d0:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f1d4:	str	r6, [sp]
    f1d8:	movw	r1, #31240	; 0x7a08
    f1dc:	mov	r0, r7
    f1e0:	movt	r1, #1
    f1e4:	mvn	r2, #0
    f1e8:	add	r3, sp, #52	; 0x34
    f1ec:	bl	b5cc <g_io_channel_write_chars@plt>
    f1f0:	cmp	r0, sl
    f1f4:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f1f8:	ldr	r1, [sp, #84]	; 0x54
    f1fc:	mov	r0, r7
    f200:	mov	r3, r6
    f204:	add	r2, r1, #4
    f208:	bl	bac4 <g_markup_error_quark@plt+0xc>
    f20c:	cmp	r0, sl
    f210:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f214:	str	r6, [sp]
    f218:	mov	r0, r7
    f21c:	add	r3, sp, #52	; 0x34
    f220:	movw	r1, #31244	; 0x7a0c
    f224:	mvn	r2, #0
    f228:	movt	r1, #1
    f22c:	bl	b5cc <g_io_channel_write_chars@plt>
    f230:	cmp	r0, sl
    f234:	beq	ef7c <g_markup_error_quark@plt+0x34c4>
    f238:	mov	r1, #1
    f23c:	mov	r0, r9
    f240:	bl	b608 <g_string_free@plt>
    f244:	mov	r1, #1
    f248:	mov	r7, r1
    f24c:	ldr	r0, [sp, #80]	; 0x50
    f250:	bl	b608 <g_string_free@plt>
    f254:	ldr	r0, [sp, #84]	; 0x54
    f258:	mov	r1, r7
    f25c:	bl	b608 <g_string_free@plt>
    f260:	str	sl, [sp, #80]	; 0x50
    f264:	str	sl, [sp, #84]	; 0x54
    f268:	b	ed4c <g_markup_error_quark@plt+0x3294>
    f26c:	bl	b824 <__stack_chk_fail@plt>
    f270:	push	{r4, r5, r6, r7, lr}
    f274:	movw	r4, #8992	; 0x2320
    f278:	movt	r4, #2
    f27c:	mov	r5, r1
    f280:	sub	sp, sp, #60	; 0x3c
    f284:	mov	ip, #0
    f288:	ldr	r1, [r4]
    f28c:	mov	r6, r3
    f290:	mov	r7, r0
    f294:	str	r2, [sp, #16]
    f298:	str	ip, [sp, #20]
    f29c:	str	r1, [sp, #52]	; 0x34
    f2a0:	str	ip, [sp, #28]
    f2a4:	str	ip, [sp, #32]
    f2a8:	str	ip, [sp, #36]	; 0x24
    f2ac:	str	ip, [sp, #40]	; 0x28
    f2b0:	str	ip, [sp, #44]	; 0x2c
    f2b4:	str	ip, [sp, #48]	; 0x30
    f2b8:	str	r5, [sp, #24]
    f2bc:	bl	fc58 <dbus_g_type_specialized_init@@Base>
    f2c0:	bl	14590 <dbus_g_value_build_g_variant@@Base+0x310c>
    f2c4:	str	r6, [sp]
    f2c8:	mov	r0, r5
    f2cc:	add	r3, sp, #12
    f2d0:	movw	r1, #30992	; 0x7910
    f2d4:	mvn	r2, #0
    f2d8:	movt	r1, #1
    f2dc:	bl	b5cc <g_io_channel_write_chars@plt>
    f2e0:	cmp	r0, #0
    f2e4:	bne	f300 <g_markup_error_quark@plt+0x3848>
    f2e8:	ldr	r2, [sp, #52]	; 0x34
    f2ec:	ldr	r3, [r4]
    f2f0:	cmp	r2, r3
    f2f4:	bne	f468 <g_markup_error_quark@plt+0x39b0>
    f2f8:	add	sp, sp, #60	; 0x3c
    f2fc:	pop	{r4, r5, r6, r7, pc}
    f300:	str	r6, [sp]
    f304:	movw	r1, #31252	; 0x7a14
    f308:	mov	r0, r5
    f30c:	movt	r1, #1
    f310:	mvn	r2, #0
    f314:	add	r3, sp, #12
    f318:	bl	b5cc <g_io_channel_write_chars@plt>
    f31c:	cmp	r0, #0
    f320:	beq	f2e8 <g_markup_error_quark@plt+0x3830>
    f324:	str	r6, [sp]
    f328:	movw	r1, #31272	; 0x7a28
    f32c:	mov	r0, r5
    f330:	movt	r1, #1
    f334:	mvn	r2, #0
    f338:	add	r3, sp, #12
    f33c:	bl	b5cc <g_io_channel_write_chars@plt>
    f340:	cmp	r0, #0
    f344:	beq	f2e8 <g_markup_error_quark@plt+0x3830>
    f348:	str	r6, [sp]
    f34c:	movw	r1, #31304	; 0x7a48
    f350:	mov	r0, r5
    f354:	movt	r1, #1
    f358:	mvn	r2, #0
    f35c:	add	r3, sp, #12
    f360:	bl	b5cc <g_io_channel_write_chars@plt>
    f364:	cmp	r0, #0
    f368:	beq	f2e8 <g_markup_error_quark@plt+0x3830>
    f36c:	str	r6, [sp]
    f370:	movw	r1, #31320	; 0x7a58
    f374:	mov	r0, r5
    f378:	movt	r1, #1
    f37c:	mvn	r2, #0
    f380:	add	r3, sp, #12
    f384:	bl	b5cc <g_io_channel_write_chars@plt>
    f388:	cmp	r0, #0
    f38c:	beq	f2e8 <g_markup_error_quark@plt+0x3830>
    f390:	str	r6, [sp]
    f394:	movw	r1, #31356	; 0x7a7c
    f398:	mov	r0, r5
    f39c:	movt	r1, #1
    f3a0:	mvn	r2, #0
    f3a4:	add	r3, sp, #12
    f3a8:	bl	b5cc <g_io_channel_write_chars@plt>
    f3ac:	cmp	r0, #0
    f3b0:	beq	f2e8 <g_markup_error_quark@plt+0x3830>
    f3b4:	str	r6, [sp]
    f3b8:	movw	r1, #31392	; 0x7aa0
    f3bc:	mov	r0, r5
    f3c0:	movt	r1, #1
    f3c4:	mvn	r2, #0
    f3c8:	add	r3, sp, #12
    f3cc:	bl	b5cc <g_io_channel_write_chars@plt>
    f3d0:	cmp	r0, #0
    f3d4:	beq	f2e8 <g_markup_error_quark@plt+0x3830>
    f3d8:	str	r6, [sp]
    f3dc:	movw	r1, #31440	; 0x7ad0
    f3e0:	mov	r0, r5
    f3e4:	movt	r1, #1
    f3e8:	mvn	r2, #0
    f3ec:	add	r3, sp, #12
    f3f0:	bl	b5cc <g_io_channel_write_chars@plt>
    f3f4:	cmp	r0, #0
    f3f8:	beq	f2e8 <g_markup_error_quark@plt+0x3830>
    f3fc:	str	r6, [sp]
    f400:	movw	r1, #31528	; 0x7b28
    f404:	mov	r0, r5
    f408:	movt	r1, #1
    f40c:	mvn	r2, #0
    f410:	add	r3, sp, #12
    f414:	bl	b5cc <g_io_channel_write_chars@plt>
    f418:	cmp	r0, #0
    f41c:	beq	f2e8 <g_markup_error_quark@plt+0x3830>
    f420:	mov	r0, r7
    f424:	add	r1, sp, #16
    f428:	mov	r2, r6
    f42c:	bl	cd58 <g_markup_error_quark@plt+0x12a0>
    f430:	subs	r7, r0, #0
    f434:	moveq	r0, #0
    f438:	beq	f2e8 <g_markup_error_quark@plt+0x3830>
    f43c:	str	r6, [sp]
    f440:	mov	r0, r5
    f444:	add	r3, sp, #12
    f448:	movw	r1, #31540	; 0x7b34
    f44c:	mvn	r2, #0
    f450:	movt	r1, #1
    f454:	bl	b5cc <g_io_channel_write_chars@plt>
    f458:	cmp	r0, #0
    f45c:	movne	r0, r7
    f460:	moveq	r0, #0
    f464:	b	f2e8 <g_markup_error_quark@plt+0x3830>
    f468:	bl	b824 <__stack_chk_fail@plt>
    f46c:	push	{r3, r4, r5, lr}
    f470:	movw	r4, #9000	; 0x2328
    f474:	movt	r4, #2
    f478:	mov	r5, r0
    f47c:	mov	r1, #1
    f480:	mov	r2, #39	; 0x27
    f484:	ldr	r3, [r4]
    f488:	movw	r0, #31636	; 0x7b94
    f48c:	movt	r0, #1
    f490:	bl	b788 <fwrite@plt>
    f494:	ldr	r3, [r4]
    f498:	mov	r1, #1
    f49c:	mov	r2, #132	; 0x84
    f4a0:	movw	r0, #31676	; 0x7bbc
    f4a4:	movt	r0, #1
    f4a8:	bl	b788 <fwrite@plt>
    f4ac:	ldr	r3, [r4]
    f4b0:	movw	r0, #31812	; 0x7c44
    f4b4:	mov	r1, #1
    f4b8:	movt	r0, #1
    f4bc:	mov	r2, #109	; 0x6d
    f4c0:	bl	b788 <fwrite@plt>
    f4c4:	mov	r0, r5
    f4c8:	bl	ba88 <exit@plt>
    f4cc:	push	{r3, r4, r5, lr}
    f4d0:	lsl	r4, r0, #1
    f4d4:	cmp	r4, #0
    f4d8:	pople	{r3, r4, r5, pc}
    f4dc:	movw	r5, #8996	; 0x2324
    f4e0:	movt	r5, #2
    f4e4:	mov	r0, #32
    f4e8:	ldr	r1, [r5]
    f4ec:	bl	ba1c <_IO_putc@plt>
    f4f0:	subs	r4, r4, #1
    f4f4:	bne	f4e4 <g_markup_error_quark@plt+0x3a2c>
    f4f8:	pop	{r3, r4, r5, pc}
    f4fc:	push	{r4, r5, r6, r7, r8, lr}
    f500:	sub	sp, sp, #8
    f504:	mov	r7, r1
    f508:	mov	r4, r0
    f50c:	bl	146dc <base_info_ref@@Base+0x7c>
    f510:	mov	r5, r0
    f514:	mov	r0, r4
    f518:	bl	146e8 <base_info_ref@@Base+0x88>
    f51c:	mov	r6, r0
    f520:	mov	r0, r7
    f524:	bl	f4cc <g_markup_error_quark@plt+0x3a14>
    f528:	cmp	r5, #5
    f52c:	ldrls	pc, [pc, r5, lsl #2]
    f530:	b	f7bc <g_markup_error_quark@plt+0x3d04>
    f534:	andeq	pc, r0, r0, asr #11
    f538:	andeq	pc, r0, ip, lsl r6	; <UNPREDICTABLE>
    f53c:			; <UNDEFINED> instruction: 0x0000f6b0
    f540:	andeq	pc, r0, r4, lsr #14
    f544:	andeq	pc, r0, r4, ror #14
    f548:	andeq	pc, r0, ip, asr #10
    f54c:	mov	r0, r4
    f550:	bl	14ca8 <base_info_ref@@Base+0x648>
    f554:	mov	r5, r0
    f558:	mov	r0, r4
    f55c:	bl	14cb0 <base_info_ref@@Base+0x650>
    f560:	movw	r3, #31044	; 0x7944
    f564:	movw	r2, #30224	; 0x7610
    f568:	movt	r3, #1
    f56c:	movt	r2, #1
    f570:	movw	ip, #30216	; 0x7608
    f574:	movt	ip, #1
    f578:	str	r5, [sp]
    f57c:	movw	r1, #32072	; 0x7d48
    f580:	movt	r1, #1
    f584:	tst	r0, #1
    f588:	moveq	r2, r3
    f58c:	tst	r0, #2
    f590:	mov	r0, #1
    f594:	movne	r3, ip
    f598:	bl	b3ec <__printf_chk@plt>
    f59c:	cmp	r6, #0
    f5a0:	beq	f7ac <g_markup_error_quark@plt+0x3cf4>
    f5a4:	mov	r2, r6
    f5a8:	movw	r1, #36380	; 0x8e1c
    f5ac:	mov	r0, #1
    f5b0:	movt	r1, #1
    f5b4:	add	sp, sp, #8
    f5b8:	pop	{r4, r5, r6, r7, r8, lr}
    f5bc:	b	b3ec <__printf_chk@plt>
    f5c0:	cmp	r6, #0
    f5c4:	beq	f7c4 <g_markup_error_quark@plt+0x3d0c>
    f5c8:	movw	r1, #31952	; 0x7cd0
    f5cc:	mov	r2, r6
    f5d0:	mov	r0, #1
    f5d4:	movt	r1, #1
    f5d8:	bl	b3ec <__printf_chk@plt>
    f5dc:	add	r5, r7, #1
    f5e0:	mov	r0, r4
    f5e4:	bl	147d4 <base_info_ref@@Base+0x174>
    f5e8:	mov	r1, r5
    f5ec:	bl	f7d4 <g_markup_error_quark@plt+0x3d1c>
    f5f0:	mov	r0, r4
    f5f4:	bl	147dc <base_info_ref@@Base+0x17c>
    f5f8:	mov	r1, r5
    f5fc:	bl	f7d4 <g_markup_error_quark@plt+0x3d1c>
    f600:	mov	r0, r7
    f604:	bl	f4cc <g_markup_error_quark@plt+0x3a14>
    f608:	movw	r0, #28640	; 0x6fe0
    f60c:	movt	r0, #1
    f610:	add	sp, sp, #8
    f614:	pop	{r4, r5, r6, r7, r8, lr}
    f618:	b	b8fc <puts@plt>
    f61c:	mov	r2, r6
    f620:	movw	r1, #31968	; 0x7ce0
    f624:	mov	r0, #1
    f628:	movt	r1, #1
    f62c:	bl	b3ec <__printf_chk@plt>
    f630:	mov	r0, r4
    f634:	bl	148d8 <base_info_ref@@Base+0x278>
    f638:	subs	r8, r0, #0
    f63c:	movne	r5, r8
    f640:	beq	f678 <g_markup_error_quark@plt+0x3bc0>
    f644:	ldr	r6, [r5]
    f648:	mov	r0, r4
    f64c:	mov	r1, r6
    f650:	bl	14944 <base_info_ref@@Base+0x2e4>
    f654:	mov	r2, r6
    f658:	movw	r1, #31988	; 0x7cf4
    f65c:	movt	r1, #1
    f660:	mov	r3, r0
    f664:	mov	r0, #1
    f668:	bl	b3ec <__printf_chk@plt>
    f66c:	ldr	r5, [r5, #4]
    f670:	cmp	r5, #0
    f674:	bne	f644 <g_markup_error_quark@plt+0x3b8c>
    f678:	mov	r0, r8
    f67c:	add	r5, r7, #1
    f680:	bl	b2e4 <g_slist_free@plt>
    f684:	mov	r0, r4
    f688:	bl	1494c <base_info_ref@@Base+0x2ec>
    f68c:	mov	r1, r5
    f690:	bl	f7d4 <g_markup_error_quark@plt+0x3d1c>
    f694:	mov	r0, r4
    f698:	bl	14954 <base_info_ref@@Base+0x2f4>
    f69c:	mov	r1, r5
    f6a0:	bl	f7d4 <g_markup_error_quark@plt+0x3d1c>
    f6a4:	mov	r0, r4
    f6a8:	bl	1495c <base_info_ref@@Base+0x2fc>
    f6ac:	b	f5f8 <g_markup_error_quark@plt+0x3b40>
    f6b0:	mov	r0, r4
    f6b4:	bl	14a68 <base_info_ref@@Base+0x408>
    f6b8:	mov	r2, r6
    f6bc:	movw	r1, #32012	; 0x7d0c
    f6c0:	movt	r1, #1
    f6c4:	mov	r8, r0
    f6c8:	mov	r0, #1
    f6cc:	bl	b3ec <__printf_chk@plt>
    f6d0:	cmp	r8, #0
    f6d4:	movne	r5, r8
    f6d8:	beq	f710 <g_markup_error_quark@plt+0x3c58>
    f6dc:	ldr	r6, [r5]
    f6e0:	mov	r0, r4
    f6e4:	mov	r1, r6
    f6e8:	bl	14ad4 <base_info_ref@@Base+0x474>
    f6ec:	mov	r2, r6
    f6f0:	movw	r1, #32028	; 0x7d1c
    f6f4:	movt	r1, #1
    f6f8:	mov	r3, r0
    f6fc:	mov	r0, #1
    f700:	bl	b3ec <__printf_chk@plt>
    f704:	ldr	r5, [r5, #4]
    f708:	cmp	r5, #0
    f70c:	bne	f6dc <g_markup_error_quark@plt+0x3c24>
    f710:	mov	r0, r8
    f714:	bl	b2e4 <g_slist_free@plt>
    f718:	mov	r0, r4
    f71c:	bl	14adc <base_info_ref@@Base+0x47c>
    f720:	b	f740 <g_markup_error_quark@plt+0x3c88>
    f724:	mov	r2, r6
    f728:	movw	r1, #32056	; 0x7d38
    f72c:	mov	r0, #1
    f730:	movt	r1, #1
    f734:	bl	b3ec <__printf_chk@plt>
    f738:	mov	r0, r4
    f73c:	bl	14bb0 <base_info_ref@@Base+0x550>
    f740:	add	r1, r7, #1
    f744:	bl	f7d4 <g_markup_error_quark@plt+0x3d1c>
    f748:	mov	r0, r7
    f74c:	bl	f4cc <g_markup_error_quark@plt+0x3a14>
    f750:	movw	r0, #28400	; 0x6ef0
    f754:	movt	r0, #1
    f758:	add	sp, sp, #8
    f75c:	pop	{r4, r5, r6, r7, r8, lr}
    f760:	b	b8fc <puts@plt>
    f764:	mov	r0, r4
    f768:	bl	1516c <base_info_unref@@Base+0xc0>
    f76c:	mov	r5, r0
    f770:	mov	r0, r4
    f774:	bl	15174 <base_info_unref@@Base+0xc8>
    f778:	movw	ip, #31928	; 0x7cb8
    f77c:	movt	ip, #1
    f780:	movw	r2, #31924	; 0x7cb4
    f784:	mov	r3, r5
    f788:	movt	r2, #1
    f78c:	movw	r1, #32080	; 0x7d50
    f790:	movt	r1, #1
    f794:	cmp	r0, #0
    f798:	mov	r0, #1
    f79c:	movne	r2, ip
    f7a0:	bl	b3ec <__printf_chk@plt>
    f7a4:	cmp	r6, #0
    f7a8:	bne	f5a4 <g_markup_error_quark@plt+0x3aec>
    f7ac:	mov	r0, #10
    f7b0:	add	sp, sp, #8
    f7b4:	pop	{r4, r5, r6, r7, r8, lr}
    f7b8:	b	b404 <putchar@plt>
    f7bc:	add	sp, sp, #8
    f7c0:	pop	{r4, r5, r6, r7, r8, pc}
    f7c4:	movw	r0, #31932	; 0x7cbc
    f7c8:	movt	r0, #1
    f7cc:	bl	b8fc <puts@plt>
    f7d0:	b	f5dc <g_markup_error_quark@plt+0x3b24>
    f7d4:	push	{r3, r4, r5, lr}
    f7d8:	subs	r4, r0, #0
    f7dc:	mov	r5, r1
    f7e0:	popeq	{r3, r4, r5, pc}
    f7e4:	ldr	r0, [r4]
    f7e8:	mov	r1, r5
    f7ec:	bl	f4fc <g_markup_error_quark@plt+0x3a44>
    f7f0:	ldr	r4, [r4, #4]
    f7f4:	cmp	r4, #0
    f7f8:	bne	f7e4 <g_markup_error_quark@plt+0x3d2c>
    f7fc:	pop	{r3, r4, r5, pc}
    f800:	push	{r0, r1, r2, r3}
    f804:	mov	r1, #1
    f808:	push	{r4, r5, lr}
    f80c:	movw	r4, #8992	; 0x2320
    f810:	movt	r4, #2
    f814:	sub	sp, sp, #12
    f818:	add	ip, sp, #28
    f81c:	movw	r5, #9000	; 0x2328
    f820:	ldr	lr, [r4]
    f824:	movt	r5, #2
    f828:	ldr	r2, [sp, #24]
    f82c:	mov	r3, ip
    f830:	ldr	r0, [r5]
    f834:	str	lr, [sp, #4]
    f838:	str	ip, [sp]
    f83c:	bl	b734 <__vfprintf_chk@plt>
    f840:	ldr	r1, [r5]
    f844:	mov	r0, #10
    f848:	bl	b854 <fputc@plt>
    f84c:	ldr	r2, [sp, #4]
    f850:	ldr	r3, [r4]
    f854:	cmp	r2, r3
    f858:	bne	f86c <g_markup_error_quark@plt+0x3db4>
    f85c:	add	sp, sp, #12
    f860:	pop	{r4, r5, lr}
    f864:	add	sp, sp, #16
    f868:	bx	lr
    f86c:	bl	b824 <__stack_chk_fail@plt>
    f870:	push	{r4, lr}
    f874:	movw	r4, #9008	; 0x2330
    f878:	movt	r4, #2
    f87c:	ldr	r0, [r4]
    f880:	cmp	r0, #0
    f884:	popne	{r4, pc}
    f888:	movw	r0, #32088	; 0x7d58
    f88c:	movt	r0, #1
    f890:	bl	b74c <g_quark_from_static_string@plt>
    f894:	mov	r3, r0
    f898:	str	r3, [r4]
    f89c:	pop	{r4, pc}
    f8a0:	mov	r3, #0
    f8a4:	str	r3, [r0, #8]
    f8a8:	bx	lr
    f8ac:	ldr	r0, [r0, #8]
    f8b0:	bx	lr
    f8b4:	ldr	r2, [pc, #60]	; f8f8 <g_markup_error_quark@plt+0x3e40>
    f8b8:	ldr	ip, [pc, #60]	; f8fc <g_markup_error_quark@plt+0x3e44>
    f8bc:	ldr	r0, [pc, #60]	; f900 <g_markup_error_quark@plt+0x3e48>
    f8c0:	add	r2, pc, r2
    f8c4:	ldr	r1, [pc, #56]	; f904 <g_markup_error_quark@plt+0x3e4c>
    f8c8:	push	{r3, lr}
    f8cc:	mov	r3, #0
    f8d0:	ldr	r1, [r2, r1]
    f8d4:	ldr	r0, [r2, r0]
    f8d8:	ldr	r2, [r2, ip]
    f8dc:	bl	b644 <g_hash_table_new_full@plt>
    f8e0:	ldr	r3, [pc, #32]	; f908 <g_markup_error_quark@plt+0x3e50>
    f8e4:	add	r3, pc, r3
    f8e8:	str	r0, [r3]
    f8ec:	bl	14590 <dbus_g_value_build_g_variant@@Base+0x310c>
    f8f0:	mov	r0, #0
    f8f4:	pop	{r3, pc}
    f8f8:	andeq	r2, r1, r8, lsr r7
    f8fc:	andeq	r0, r0, r4, ror #5
    f900:	andeq	r0, r0, ip, ror #5
    f904:	andeq	r0, r0, r4, lsl #6
    f908:	andeq	r2, r1, r8, asr #20
    f90c:	push	{r4, r5, r6, r7, lr}
    f910:	mov	r6, r0
    f914:	ldr	r0, [r2]
    f918:	sub	sp, sp, #12
    f91c:	mov	r4, r2
    f920:	mov	r7, r1
    f924:	cmp	r0, #0
    f928:	beq	f984 <g_markup_error_quark@plt+0x3ecc>
    f92c:	ldr	r3, [r4, #4]
    f930:	cmp	r3, #0
    f934:	beq	f9b4 <g_markup_error_quark@plt+0x3efc>
    f938:	ldr	r0, [r4, #8]
    f93c:	cmp	r0, #0
    f940:	beq	f9e8 <g_markup_error_quark@plt+0x3f30>
    f944:	mov	r0, #8
    f948:	bl	b8b4 <g_malloc0@plt>
    f94c:	ldr	r3, [pc, #188]	; fa10 <g_markup_error_quark@plt+0x3f58>
    f950:	add	r3, pc, r3
    f954:	mov	r5, r0
    f958:	mov	r0, r6
    f95c:	str	r4, [r5, #4]
    f960:	str	r7, [r5]
    f964:	ldr	r4, [r3]
    f968:	bl	b3a4 <g_strdup@plt>
    f96c:	mov	r2, r5
    f970:	mov	r1, r0
    f974:	mov	r0, r4
    f978:	add	sp, sp, #12
    f97c:	pop	{r4, r5, r6, r7, lr}
    f980:	b	b410 <g_hash_table_insert@plt>
    f984:	ldr	ip, [pc, #136]	; fa14 <g_markup_error_quark@plt+0x3f5c>
    f988:	movw	r2, #546	; 0x222
    f98c:	ldr	r1, [pc, #132]	; fa18 <g_markup_error_quark@plt+0x3f60>
    f990:	ldr	r3, [pc, #132]	; fa1c <g_markup_error_quark@plt+0x3f64>
    f994:	add	ip, pc, ip
    f998:	add	r1, pc, r1
    f99c:	str	ip, [sp]
    f9a0:	add	r3, pc, r3
    f9a4:	bl	b98c <g_warn_message@plt>
    f9a8:	ldr	r3, [r4, #4]
    f9ac:	cmp	r3, #0
    f9b0:	bne	f938 <g_markup_error_quark@plt+0x3e80>
    f9b4:	ldr	r0, [r4, #12]
    f9b8:	cmp	r0, #0
    f9bc:	bne	f938 <g_markup_error_quark@plt+0x3e80>
    f9c0:	ldr	ip, [pc, #88]	; fa20 <g_markup_error_quark@plt+0x3f68>
    f9c4:	movw	r2, #549	; 0x225
    f9c8:	ldr	r1, [pc, #84]	; fa24 <g_markup_error_quark@plt+0x3f6c>
    f9cc:	ldr	r3, [pc, #84]	; fa28 <g_markup_error_quark@plt+0x3f70>
    f9d0:	add	ip, pc, ip
    f9d4:	add	r1, pc, r1
    f9d8:	str	ip, [sp]
    f9dc:	add	r3, pc, r3
    f9e0:	bl	b98c <g_warn_message@plt>
    f9e4:	b	f938 <g_markup_error_quark@plt+0x3e80>
    f9e8:	ldr	ip, [pc, #60]	; fa2c <g_markup_error_quark@plt+0x3f74>
    f9ec:	movw	r2, #550	; 0x226
    f9f0:	ldr	r1, [pc, #56]	; fa30 <g_markup_error_quark@plt+0x3f78>
    f9f4:	ldr	r3, [pc, #56]	; fa34 <g_markup_error_quark@plt+0x3f7c>
    f9f8:	add	ip, pc, ip
    f9fc:	add	r1, pc, r1
    fa00:	str	ip, [sp]
    fa04:	add	r3, pc, r3
    fa08:	bl	b98c <g_warn_message@plt>
    fa0c:	b	f944 <g_markup_error_quark@plt+0x3e8c>
    fa10:	ldrdeq	r2, [r1], -ip
    fa14:	andeq	r8, r0, r0, asr #19
    fa18:	andeq	r8, r0, r0, lsr #19
    fa1c:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
    fa20:	andeq	r8, r0, r0, lsr #19
    fa24:	andeq	r8, r0, r4, ror #18
    fa28:			; <UNDEFINED> instruction: 0x000085bc
    fa2c:			; <UNDEFINED> instruction: 0x000089b8
    fa30:	andeq	r8, r0, ip, lsr r9
    fa34:	muleq	r0, r4, r5
    fa38:	push	{r4, lr}
    fa3c:	ldr	r4, [pc, #36]	; fa68 <g_markup_error_quark@plt+0x3fb0>
    fa40:	add	r4, pc, r4
    fa44:	ldr	r0, [r4, #4]
    fa48:	cmp	r0, #0
    fa4c:	popne	{r4, pc}
    fa50:	ldr	r0, [pc, #20]	; fa6c <g_markup_error_quark@plt+0x3fb4>
    fa54:	add	r0, pc, r0
    fa58:	bl	b74c <g_quark_from_static_string@plt>
    fa5c:	mov	r3, r0
    fa60:	str	r3, [r4, #4]
    fa64:	pop	{r4, pc}
    fa68:	andeq	r2, r1, ip, ror #17
    fa6c:	andeq	r8, r0, r8, ror r9
    fa70:	push	{r3, r4, r5, r6, r7, lr}
    fa74:	mov	r6, r2
    fa78:	mov	r4, r0
    fa7c:	ldr	r5, [r0]
    fa80:	mov	r7, r3
    fa84:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
    fa88:	mov	r1, r0
    fa8c:	mov	r0, r5
    fa90:	bl	ba7c <g_type_get_qdata@plt>
    fa94:	ldr	r1, [r6]
    fa98:	cmp	r1, #0
    fa9c:	streq	r1, [r4, #8]
    faa0:	beq	fab8 <g_markup_error_quark@plt+0x4000>
    faa4:	tst	r7, #134217728	; 0x8000000
    faa8:	beq	fac0 <g_markup_error_quark@plt+0x4008>
    faac:	mov	r3, #134217728	; 0x8000000
    fab0:	str	r1, [r4, #8]
    fab4:	str	r3, [r4, #16]
    fab8:	mov	r0, #0
    fabc:	pop	{r3, r4, r5, r6, r7, pc}
    fac0:	ldr	r3, [r0, #8]
    fac4:	mov	r0, r5
    fac8:	ldr	r3, [r3, #4]
    facc:	ldr	r3, [r3, #8]
    fad0:	blx	r3
    fad4:	str	r0, [r4, #8]
    fad8:	mov	r0, #0
    fadc:	pop	{r3, r4, r5, r6, r7, pc}
    fae0:	push	{r3, r4, r5, lr}
    fae4:	mov	r4, r1
    fae8:	mov	r5, r0
    faec:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
    faf0:	mov	r1, r0
    faf4:	mov	r0, r5
    faf8:	bl	ba7c <g_type_get_qdata@plt>
    fafc:	ldr	r3, [r0]
    fb00:	cmp	r3, r4
    fb04:	ldrhi	r3, [r0, #4]
    fb08:	ldrhi	r0, [r3, r4, lsl #2]
    fb0c:	movls	r0, #0
    fb10:	pop	{r3, r4, r5, pc}
    fb14:	push	{r4, r5, r6, lr}
    fb18:	mov	r4, r0
    fb1c:	ldr	r3, [r0, #8]
    fb20:	mov	r5, r1
    fb24:	cmp	r3, #0
    fb28:	streq	r3, [r1, #8]
    fb2c:	popeq	{r4, r5, r6, pc}
    fb30:	ldr	r6, [r0]
    fb34:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
    fb38:	mov	r1, r0
    fb3c:	mov	r0, r6
    fb40:	bl	ba7c <g_type_get_qdata@plt>
    fb44:	ldr	r1, [r4, #8]
    fb48:	ldr	r3, [r0, #8]
    fb4c:	mov	r0, r6
    fb50:	ldr	r3, [r3, #4]
    fb54:	ldr	r3, [r3, #8]
    fb58:	blx	r3
    fb5c:	str	r0, [r5, #8]
    fb60:	pop	{r4, r5, r6, pc}
    fb64:	push	{r3, r4, r5, lr}
    fb68:	mov	r4, r0
    fb6c:	ldr	r3, [r0, #8]
    fb70:	cmp	r3, #0
    fb74:	popeq	{r3, r4, r5, pc}
    fb78:	ldr	r3, [r0, #16]
    fb7c:	tst	r3, #134217728	; 0x8000000
    fb80:	popne	{r3, r4, r5, pc}
    fb84:	ldr	r5, [r0]
    fb88:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
    fb8c:	mov	r1, r0
    fb90:	mov	r0, r5
    fb94:	bl	ba7c <g_type_get_qdata@plt>
    fb98:	ldr	r3, [r0, #8]
    fb9c:	ldr	r2, [r3, #4]
    fba0:	ldr	r3, [r2, #4]
    fba4:	cmp	r3, #0
    fba8:	beq	fbbc <g_markup_error_quark@plt+0x4104>
    fbac:	mov	r0, r5
    fbb0:	ldr	r1, [r4, #8]
    fbb4:	blx	r3
    fbb8:	pop	{r3, r4, r5, pc}
    fbbc:	ldr	r3, [r2, #12]
    fbc0:	ldr	r0, [r4, #8]
    fbc4:	blx	r3
    fbc8:	pop	{r3, r4, r5, pc}
    fbcc:	push	{r4, r5, r6, lr}
    fbd0:	mov	r5, r0
    fbd4:	ldr	r4, [r2]
    fbd8:	cmp	r4, #0
    fbdc:	beq	fc38 <g_markup_error_quark@plt+0x4180>
    fbe0:	ldr	r2, [r0, #8]
    fbe4:	cmp	r2, #0
    fbe8:	beq	fbf4 <g_markup_error_quark@plt+0x413c>
    fbec:	tst	r3, #134217728	; 0x8000000
    fbf0:	beq	fc00 <g_markup_error_quark@plt+0x4148>
    fbf4:	str	r2, [r4]
    fbf8:	mov	r0, #0
    fbfc:	pop	{r4, r5, r6, pc}
    fc00:	ldr	r6, [r0]
    fc04:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
    fc08:	mov	r1, r0
    fc0c:	mov	r0, r6
    fc10:	bl	ba7c <g_type_get_qdata@plt>
    fc14:	ldr	r1, [r5, #8]
    fc18:	ldr	r3, [r0, #8]
    fc1c:	mov	r0, r6
    fc20:	ldr	r3, [r3, #4]
    fc24:	ldr	r3, [r3, #8]
    fc28:	blx	r3
    fc2c:	str	r0, [r4]
    fc30:	mov	r0, #0
    fc34:	pop	{r4, r5, r6, pc}
    fc38:	ldr	r0, [r0]
    fc3c:	bl	b7c4 <g_type_name@plt>
    fc40:	pop	{r4, r5, r6, lr}
    fc44:	mov	r1, r0
    fc48:	ldr	r0, [pc, #4]	; fc54 <g_markup_error_quark@plt+0x419c>
    fc4c:	add	r0, pc, r0
    fc50:	b	b5d8 <g_strdup_printf@plt>
    fc54:	muleq	r0, ip, r7

0000fc58 <dbus_g_type_specialized_init@@Base>:
    fc58:	ldr	r0, [pc, #40]	; fc88 <dbus_g_type_specialized_init@@Base+0x30>
    fc5c:	add	r0, pc, r0
    fc60:	ldr	r3, [r0, #8]
    fc64:	cmp	r3, #2
    fc68:	beq	fc80 <dbus_g_type_specialized_init@@Base+0x28>
    fc6c:	ldr	r1, [pc, #24]	; fc8c <dbus_g_type_specialized_init@@Base+0x34>
    fc70:	add	r0, r0, #8
    fc74:	mov	r2, #0
    fc78:	add	r1, pc, r1
    fc7c:	b	b758 <g_once_impl@plt>
    fc80:	ldr	r3, [r0, #12]
    fc84:	bx	lr
    fc88:	ldrdeq	r2, [r1], -r0
    fc8c:			; <UNDEFINED> instruction: 0xfffffc34
    fc90:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fc94:	mov	r4, r0
    fc98:	mov	r7, r1
    fc9c:	mov	sl, r2
    fca0:	bl	fc58 <dbus_g_type_specialized_init@@Base>
    fca4:	ldr	r3, [pc, #456]	; fe74 <dbus_g_type_specialized_init@@Base+0x21c>
    fca8:	mov	r1, r4
    fcac:	add	r3, pc, r3
    fcb0:	ldr	r0, [r3]
    fcb4:	bl	b890 <g_hash_table_lookup@plt>
    fcb8:	subs	fp, r0, #0
    fcbc:	beq	fe54 <dbus_g_type_specialized_init@@Base+0x1fc>
    fcc0:	mov	r0, r4
    fcc4:	bl	b4d0 <g_string_new@plt>
    fcc8:	ldr	r2, [r0, #4]
    fccc:	mov	r4, r0
    fcd0:	ldr	r1, [r0, #8]
    fcd4:	add	r3, r2, #1
    fcd8:	cmp	r3, r1
    fcdc:	bcs	fdd8 <dbus_g_type_specialized_init@@Base+0x180>
    fce0:	ldr	r0, [r4]
    fce4:	mov	ip, #95	; 0x5f
    fce8:	str	r3, [r4, #4]
    fcec:	mov	r1, #0
    fcf0:	strb	ip, [r0, r2]
    fcf4:	ldm	r4, {r2, r3}
    fcf8:	strb	r1, [r2, r3]
    fcfc:	cmp	r7, #0
    fd00:	subne	r6, sl, #4
    fd04:	movne	r5, #0
    fd08:	movne	r8, #43	; 0x2b
    fd0c:	movne	r9, r5
    fd10:	beq	fd7c <dbus_g_type_specialized_init@@Base+0x124>
    fd14:	ldr	r0, [r6, #4]!
    fd18:	add	r5, r5, #1
    fd1c:	bl	b7c4 <g_type_name@plt>
    fd20:	mov	r1, r0
    fd24:	mov	r0, r4
    fd28:	bl	ba40 <g_string_append@plt>
    fd2c:	cmp	r5, r7
    fd30:	beq	fd7c <dbus_g_type_specialized_init@@Base+0x124>
    fd34:	cmp	r5, #0
    fd38:	beq	fd14 <dbus_g_type_specialized_init@@Base+0xbc>
    fd3c:	ldr	r3, [r4, #4]
    fd40:	ldr	r1, [r4, #8]
    fd44:	add	r2, r3, #1
    fd48:	cmp	r2, r1
    fd4c:	bcs	fd68 <dbus_g_type_specialized_init@@Base+0x110>
    fd50:	ldr	r1, [r4]
    fd54:	str	r2, [r4, #4]
    fd58:	strb	r8, [r1, r3]
    fd5c:	ldm	r4, {r2, r3}
    fd60:	strb	r9, [r2, r3]
    fd64:	b	fd14 <dbus_g_type_specialized_init@@Base+0xbc>
    fd68:	mov	r0, r4
    fd6c:	mvn	r1, #0
    fd70:	mov	r2, #43	; 0x2b
    fd74:	bl	b8e4 <g_string_insert_c@plt>
    fd78:	b	fd14 <dbus_g_type_specialized_init@@Base+0xbc>
    fd7c:	ldr	r3, [r4, #4]
    fd80:	ldr	r1, [r4, #8]
    fd84:	add	r2, r3, #1
    fd88:	cmp	r2, r1
    fd8c:	bcs	fde8 <dbus_g_type_specialized_init@@Base+0x190>
    fd90:	ldr	r0, [r4]
    fd94:	mov	ip, #95	; 0x5f
    fd98:	str	r2, [r4, #4]
    fd9c:	mov	r1, #0
    fda0:	strb	ip, [r0, r3]
    fda4:	ldm	r4, {r2, r3}
    fda8:	strb	r1, [r2, r3]
    fdac:	mov	r0, r4
    fdb0:	mov	r1, #0
    fdb4:	bl	b608 <g_string_free@plt>
    fdb8:	mov	r5, r0
    fdbc:	bl	b350 <g_type_from_name@plt>
    fdc0:	subs	r4, r0, #0
    fdc4:	beq	fdfc <dbus_g_type_specialized_init@@Base+0x1a4>
    fdc8:	mov	r0, r5
    fdcc:	bl	b248 <g_free@plt>
    fdd0:	mov	r0, r4
    fdd4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fdd8:	mvn	r1, #0
    fddc:	mov	r2, #95	; 0x5f
    fde0:	bl	b8e4 <g_string_insert_c@plt>
    fde4:	b	fcfc <dbus_g_type_specialized_init@@Base+0xa4>
    fde8:	mov	r0, r4
    fdec:	mvn	r1, #0
    fdf0:	mov	r2, #95	; 0x5f
    fdf4:	bl	b8e4 <g_string_insert_c@plt>
    fdf8:	b	fdac <dbus_g_type_specialized_init@@Base+0x154>
    fdfc:	ldr	r2, [pc, #116]	; fe78 <dbus_g_type_specialized_init@@Base+0x220>
    fe00:	mov	r3, r4
    fe04:	mov	r0, #72	; 0x48
    fe08:	mov	r1, r5
    fe0c:	add	r2, pc, r2
    fe10:	bl	b6e0 <g_type_register_static@plt>
    fe14:	subs	r4, r0, #0
    fe18:	beq	fdc8 <dbus_g_type_specialized_init@@Base+0x170>
    fe1c:	mov	r0, #12
    fe20:	bl	b8b4 <g_malloc0@plt>
    fe24:	lsl	r1, r7, #2
    fe28:	mov	r6, r0
    fe2c:	mov	r0, sl
    fe30:	str	r7, [r6]
    fe34:	bl	b254 <g_memdup@plt>
    fe38:	stmib	r6, {r0, fp}
    fe3c:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
    fe40:	mov	r2, r6
    fe44:	mov	r1, r0
    fe48:	mov	r0, r4
    fe4c:	bl	b4c4 <g_type_set_qdata@plt>
    fe50:	b	fdc8 <dbus_g_type_specialized_init@@Base+0x170>
    fe54:	ldr	r1, [pc, #32]	; fe7c <dbus_g_type_specialized_init@@Base+0x224>
    fe58:	ldr	r2, [pc, #32]	; fe80 <dbus_g_type_specialized_init@@Base+0x228>
    fe5c:	add	r1, pc, r1
    fe60:	add	r2, pc, r2
    fe64:	add	r1, r1, #20
    fe68:	bl	b6d4 <g_return_if_fail_warning@plt>
    fe6c:	mov	r0, fp
    fe70:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fe74:	andeq	r2, r1, r0, lsl #13
    fe78:	andeq	r1, r1, r8, asr #31
    fe7c:	andeq	r8, r0, ip, lsr r1
    fe80:			; <UNDEFINED> instruction: 0x000085b0
    fe84:	push	{r4, r5, lr}
    fe88:	mov	r5, r0
    fe8c:	ldr	r0, [r1, #28]
    fe90:	sub	sp, sp, #12
    fe94:	mov	r4, r1
    fe98:	cmp	r0, #0
    fe9c:	beq	fec4 <dbus_g_type_specialized_init@@Base+0x26c>
    fea0:	ldr	r0, [r4, #32]
    fea4:	cmp	r0, #0
    fea8:	beq	fef8 <dbus_g_type_specialized_init@@Base+0x2a0>
    feac:	mov	r0, r5
    feb0:	mov	r2, r4
    feb4:	mov	r1, #0
    feb8:	add	sp, sp, #12
    febc:	pop	{r4, r5, lr}
    fec0:	b	f90c <g_markup_error_quark@plt+0x3e54>
    fec4:	ldr	r3, [pc, #88]	; ff24 <dbus_g_type_specialized_init@@Base+0x2cc>
    fec8:	movw	r2, #583	; 0x247
    fecc:	ldr	ip, [pc, #84]	; ff28 <dbus_g_type_specialized_init@@Base+0x2d0>
    fed0:	ldr	r1, [pc, #84]	; ff2c <dbus_g_type_specialized_init@@Base+0x2d4>
    fed4:	add	r3, pc, r3
    fed8:	add	ip, pc, ip
    fedc:	add	r3, r3, #52	; 0x34
    fee0:	add	r1, pc, r1
    fee4:	str	ip, [sp]
    fee8:	bl	b98c <g_warn_message@plt>
    feec:	ldr	r0, [r4, #32]
    fef0:	cmp	r0, #0
    fef4:	bne	feac <dbus_g_type_specialized_init@@Base+0x254>
    fef8:	ldr	r3, [pc, #48]	; ff30 <dbus_g_type_specialized_init@@Base+0x2d8>
    fefc:	mov	r2, #584	; 0x248
    ff00:	ldr	ip, [pc, #44]	; ff34 <dbus_g_type_specialized_init@@Base+0x2dc>
    ff04:	ldr	r1, [pc, #44]	; ff38 <dbus_g_type_specialized_init@@Base+0x2e0>
    ff08:	add	r3, pc, r3
    ff0c:	add	ip, pc, ip
    ff10:	add	r3, r3, #52	; 0x34
    ff14:	add	r1, pc, r1
    ff18:	str	ip, [sp]
    ff1c:	bl	b98c <g_warn_message@plt>
    ff20:	b	feac <dbus_g_type_specialized_init@@Base+0x254>
    ff24:	andeq	r8, r0, r4, asr #1
    ff28:	andeq	r8, r0, r8, asr #10
    ff2c:	andeq	r8, r0, r8, asr r4
    ff30:	muleq	r0, r0, r0
    ff34:	andeq	r8, r0, r0, lsr r5
    ff38:	andeq	r8, r0, r4, lsr #8

0000ff3c <dbus_g_type_register_collection@@Base>:
    ff3c:	push	{r4, r5, r6, lr}
    ff40:	mov	r6, r0
    ff44:	mov	r5, r1
    ff48:	mov	r4, r2
    ff4c:	bl	fc58 <dbus_g_type_specialized_init@@Base>
    ff50:	mov	r0, r6
    ff54:	mov	r1, r5
    ff58:	mov	r2, r4
    ff5c:	pop	{r4, r5, r6, lr}
    ff60:	b	fe84 <dbus_g_type_specialized_init@@Base+0x22c>
    ff64:	push	{r4, r5, lr}
    ff68:	mov	r5, r0
    ff6c:	ldr	r0, [r1, #24]
    ff70:	sub	sp, sp, #12
    ff74:	mov	r4, r1
    ff78:	cmp	r0, #0
    ff7c:	beq	ffa4 <dbus_g_type_register_collection@@Base+0x68>
    ff80:	ldr	r0, [r4, #28]
    ff84:	cmp	r0, #0
    ff88:	beq	ffd8 <dbus_g_type_register_collection@@Base+0x9c>
    ff8c:	mov	r0, r5
    ff90:	mov	r2, r4
    ff94:	mov	r1, #1
    ff98:	add	sp, sp, #12
    ff9c:	pop	{r4, r5, lr}
    ffa0:	b	f90c <g_markup_error_quark@plt+0x3e54>
    ffa4:	ldr	r3, [pc, #88]	; 10004 <dbus_g_type_register_collection@@Base+0xc8>
    ffa8:	movw	r2, #613	; 0x265
    ffac:	ldr	ip, [pc, #84]	; 10008 <dbus_g_type_register_collection@@Base+0xcc>
    ffb0:	ldr	r1, [pc, #84]	; 1000c <dbus_g_type_register_collection@@Base+0xd0>
    ffb4:	add	r3, pc, r3
    ffb8:	add	ip, pc, ip
    ffbc:	add	r3, r3, #88	; 0x58
    ffc0:	add	r1, pc, r1
    ffc4:	str	ip, [sp]
    ffc8:	bl	b98c <g_warn_message@plt>
    ffcc:	ldr	r0, [r4, #28]
    ffd0:	cmp	r0, #0
    ffd4:	bne	ff8c <dbus_g_type_register_collection@@Base+0x50>
    ffd8:	ldr	r3, [pc, #48]	; 10010 <dbus_g_type_register_collection@@Base+0xd4>
    ffdc:	movw	r2, #614	; 0x266
    ffe0:	ldr	ip, [pc, #44]	; 10014 <dbus_g_type_register_collection@@Base+0xd8>
    ffe4:	ldr	r1, [pc, #44]	; 10018 <dbus_g_type_register_collection@@Base+0xdc>
    ffe8:	add	r3, pc, r3
    ffec:	add	ip, pc, ip
    fff0:	add	r3, r3, #88	; 0x58
    fff4:	add	r1, pc, r1
    fff8:	str	ip, [sp]
    fffc:	bl	b98c <g_warn_message@plt>
   10000:	b	ff8c <dbus_g_type_register_collection@@Base+0x50>
   10004:	andeq	r7, r0, r4, ror #31
   10008:	andeq	r8, r0, r8, ror #8
   1000c:	andeq	r8, r0, r8, ror r3
   10010:			; <UNDEFINED> instruction: 0x00007fb0
   10014:	andeq	r8, r0, r0, asr r4
   10018:	andeq	r8, r0, r4, asr #6

0001001c <dbus_g_type_register_map@@Base>:
   1001c:	push	{r4, r5, r6, lr}
   10020:	mov	r6, r0
   10024:	mov	r5, r1
   10028:	mov	r4, r2
   1002c:	bl	fc58 <dbus_g_type_specialized_init@@Base>
   10030:	mov	r0, r6
   10034:	mov	r1, r5
   10038:	mov	r2, r4
   1003c:	pop	{r4, r5, r6, lr}
   10040:	b	ff64 <dbus_g_type_register_collection@@Base+0x28>
   10044:	push	{r4, r5, lr}
   10048:	mov	r5, r0
   1004c:	ldr	r0, [r1, #24]
   10050:	sub	sp, sp, #12
   10054:	mov	r4, r1
   10058:	cmp	r0, #0
   1005c:	beq	10084 <dbus_g_type_register_map@@Base+0x68>
   10060:	ldr	r0, [r4, #28]
   10064:	cmp	r0, #0
   10068:	beq	100b8 <dbus_g_type_register_map@@Base+0x9c>
   1006c:	mov	r0, r5
   10070:	mov	r2, r4
   10074:	mov	r1, #2
   10078:	add	sp, sp, #12
   1007c:	pop	{r4, r5, lr}
   10080:	b	f90c <g_markup_error_quark@plt+0x3e54>
   10084:	ldr	r3, [pc, #88]	; 100e4 <dbus_g_type_register_map@@Base+0xc8>
   10088:	movw	r2, #642	; 0x282
   1008c:	ldr	ip, [pc, #84]	; 100e8 <dbus_g_type_register_map@@Base+0xcc>
   10090:	ldr	r1, [pc, #84]	; 100ec <dbus_g_type_register_map@@Base+0xd0>
   10094:	add	r3, pc, r3
   10098:	add	ip, pc, ip
   1009c:	add	r3, r3, #116	; 0x74
   100a0:	add	r1, pc, r1
   100a4:	str	ip, [sp]
   100a8:	bl	b98c <g_warn_message@plt>
   100ac:	ldr	r0, [r4, #28]
   100b0:	cmp	r0, #0
   100b4:	bne	1006c <dbus_g_type_register_map@@Base+0x50>
   100b8:	ldr	r3, [pc, #48]	; 100f0 <dbus_g_type_register_map@@Base+0xd4>
   100bc:	movw	r2, #643	; 0x283
   100c0:	ldr	ip, [pc, #44]	; 100f4 <dbus_g_type_register_map@@Base+0xd8>
   100c4:	ldr	r1, [pc, #44]	; 100f8 <dbus_g_type_register_map@@Base+0xdc>
   100c8:	add	r3, pc, r3
   100cc:	add	ip, pc, ip
   100d0:	add	r3, r3, #116	; 0x74
   100d4:	add	r1, pc, r1
   100d8:	str	ip, [sp]
   100dc:	bl	b98c <g_warn_message@plt>
   100e0:	b	1006c <dbus_g_type_register_map@@Base+0x50>
   100e4:	andeq	r7, r0, r4, lsl #30
   100e8:	andeq	r8, r0, r0, asr #7
   100ec:	muleq	r0, r8, r2
   100f0:	ldrdeq	r7, [r0], -r0
   100f4:	andeq	r8, r0, r8, lsr #7
   100f8:	andeq	r8, r0, r4, ror #4

000100fc <dbus_g_type_register_struct@@Base>:
   100fc:	push	{r4, r5, r6, lr}
   10100:	mov	r6, r0
   10104:	mov	r5, r1
   10108:	mov	r4, r2
   1010c:	bl	fc58 <dbus_g_type_specialized_init@@Base>
   10110:	mov	r0, r6
   10114:	mov	r1, r5
   10118:	mov	r2, r4
   1011c:	pop	{r4, r5, r6, lr}
   10120:	b	10044 <dbus_g_type_register_map@@Base+0x28>

00010124 <dbus_g_type_get_collection@@Base>:
   10124:	push	{lr}		; (str lr, [sp, #-4]!)
   10128:	sub	sp, sp, #12
   1012c:	add	r2, sp, #8
   10130:	str	r1, [r2, #-4]!
   10134:	mov	r1, #1
   10138:	bl	fc90 <dbus_g_type_specialized_init@@Base+0x38>
   1013c:	add	sp, sp, #12
   10140:	pop	{pc}		; (ldr pc, [sp], #4)

00010144 <dbus_g_type_get_map@@Base>:
   10144:	ldr	r3, [pc, #72]	; 10194 <dbus_g_type_get_map@@Base+0x50>
   10148:	ldr	ip, [pc, #72]	; 10198 <dbus_g_type_get_map@@Base+0x54>
   1014c:	add	r3, pc, r3
   10150:	push	{r4, lr}
   10154:	sub	sp, sp, #16
   10158:	ldr	r4, [r3, ip]
   1015c:	str	r1, [sp, #4]
   10160:	mov	r1, #2
   10164:	str	r2, [sp, #8]
   10168:	add	r2, sp, #4
   1016c:	ldr	r3, [r4]
   10170:	str	r3, [sp, #12]
   10174:	bl	fc90 <dbus_g_type_specialized_init@@Base+0x38>
   10178:	ldr	r2, [sp, #12]
   1017c:	ldr	r3, [r4]
   10180:	cmp	r2, r3
   10184:	bne	10190 <dbus_g_type_get_map@@Base+0x4c>
   10188:	add	sp, sp, #16
   1018c:	pop	{r4, pc}
   10190:	bl	b824 <__stack_chk_fail@plt>
   10194:	andeq	r1, r1, ip, lsr #29
   10198:	strdeq	r0, [r0], -r8

0001019c <dbus_g_type_get_structv@@Base>:
   1019c:	b	fc90 <dbus_g_type_specialized_init@@Base+0x38>

000101a0 <dbus_g_type_get_struct@@Base>:
   101a0:	push	{r1, r2, r3}
   101a4:	mov	r2, #4
   101a8:	ldr	r3, [pc, #188]	; 1026c <dbus_g_type_get_struct@@Base+0xcc>
   101ac:	push	{r4, r5, r6, r7, r8, lr}
   101b0:	add	r3, pc, r3
   101b4:	ldr	lr, [pc, #180]	; 10270 <dbus_g_type_get_struct@@Base+0xd0>
   101b8:	sub	sp, sp, #20
   101bc:	mov	r8, r0
   101c0:	mov	r0, #0
   101c4:	mov	r1, r0
   101c8:	ldr	r4, [sp, #44]	; 0x2c
   101cc:	ldr	r7, [r3, lr]
   101d0:	add	ip, sp, #48	; 0x30
   101d4:	str	ip, [sp, #8]
   101d8:	ldr	r3, [r7]
   101dc:	str	r3, [sp, #12]
   101e0:	bl	b428 <g_array_new@plt>
   101e4:	cmp	r4, #0
   101e8:	str	r4, [sp, #4]
   101ec:	addne	r6, sp, #4
   101f0:	ldrne	r4, [sp, #8]
   101f4:	mov	r5, r0
   101f8:	beq	10224 <dbus_g_type_get_struct@@Base+0x84>
   101fc:	add	r4, r4, #4
   10200:	mov	r0, r5
   10204:	mov	r1, r6
   10208:	mov	r2, #1
   1020c:	bl	ba34 <g_array_append_vals@plt>
   10210:	ldr	r3, [r4, #-4]
   10214:	str	r4, [sp, #8]
   10218:	cmp	r3, #0
   1021c:	str	r3, [sp, #4]
   10220:	bne	101fc <dbus_g_type_get_struct@@Base+0x5c>
   10224:	ldr	r2, [r5]
   10228:	mov	r0, r8
   1022c:	ldr	r1, [r5, #4]
   10230:	bl	fc90 <dbus_g_type_specialized_init@@Base+0x38>
   10234:	mov	r1, #1
   10238:	mov	r4, r0
   1023c:	mov	r0, r5
   10240:	bl	b488 <g_array_free@plt>
   10244:	ldr	r2, [sp, #12]
   10248:	ldr	r3, [r7]
   1024c:	mov	r0, r4
   10250:	cmp	r2, r3
   10254:	bne	10268 <dbus_g_type_get_struct@@Base+0xc8>
   10258:	add	sp, sp, #20
   1025c:	pop	{r4, r5, r6, r7, r8, lr}
   10260:	add	sp, sp, #12
   10264:	bx	lr
   10268:	bl	b824 <__stack_chk_fail@plt>
   1026c:	andeq	r1, r1, r8, asr #28
   10270:	strdeq	r0, [r0], -r8

00010274 <dbus_g_type_is_collection@@Base>:
   10274:	push	{r4, lr}
   10278:	mov	r4, r0
   1027c:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   10280:	mov	r1, r0
   10284:	mov	r0, r4
   10288:	bl	ba7c <g_type_get_qdata@plt>
   1028c:	cmp	r0, #0
   10290:	popeq	{r4, pc}
   10294:	ldr	r3, [r0, #8]
   10298:	ldr	r0, [r3]
   1029c:	rsbs	r0, r0, #1
   102a0:	movcc	r0, #0
   102a4:	pop	{r4, pc}

000102a8 <dbus_g_type_collection_peek_vtable@@Base>:
   102a8:	push	{r3, r4, r5, lr}
   102ac:	mov	r4, r0
   102b0:	bl	10274 <dbus_g_type_is_collection@@Base>
   102b4:	subs	r5, r0, #0
   102b8:	bne	102dc <dbus_g_type_collection_peek_vtable@@Base+0x34>
   102bc:	ldr	r1, [pc, #52]	; 102f8 <dbus_g_type_collection_peek_vtable@@Base+0x50>
   102c0:	ldr	r2, [pc, #52]	; 102fc <dbus_g_type_collection_peek_vtable@@Base+0x54>
   102c4:	add	r1, pc, r1
   102c8:	add	r2, pc, r2
   102cc:	add	r1, r1, #148	; 0x94
   102d0:	bl	b6d4 <g_return_if_fail_warning@plt>
   102d4:	mov	r0, r5
   102d8:	pop	{r3, r4, r5, pc}
   102dc:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   102e0:	mov	r1, r0
   102e4:	mov	r0, r4
   102e8:	bl	ba7c <g_type_get_qdata@plt>
   102ec:	ldr	r3, [r0, #8]
   102f0:	ldr	r0, [r3, #4]
   102f4:	pop	{r3, r4, r5, pc}
   102f8:	ldrdeq	r7, [r0], -r4
   102fc:	andeq	r8, r0, r8, asr #3

00010300 <dbus_g_type_is_map@@Base>:
   10300:	push	{r4, lr}
   10304:	mov	r4, r0
   10308:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   1030c:	mov	r1, r0
   10310:	mov	r0, r4
   10314:	bl	ba7c <g_type_get_qdata@plt>
   10318:	cmp	r0, #0
   1031c:	popeq	{r4, pc}
   10320:	ldr	r3, [r0, #8]
   10324:	ldr	r0, [r3]
   10328:	subs	r3, r0, #1
   1032c:	rsbs	r0, r3, #0
   10330:	adcs	r0, r0, r3
   10334:	pop	{r4, pc}

00010338 <dbus_g_type_map_peek_vtable@@Base>:
   10338:	push	{r3, r4, r5, lr}
   1033c:	mov	r4, r0
   10340:	bl	10300 <dbus_g_type_is_map@@Base>
   10344:	subs	r5, r0, #0
   10348:	bne	1036c <dbus_g_type_map_peek_vtable@@Base+0x34>
   1034c:	ldr	r1, [pc, #52]	; 10388 <dbus_g_type_map_peek_vtable@@Base+0x50>
   10350:	ldr	r2, [pc, #52]	; 1038c <dbus_g_type_map_peek_vtable@@Base+0x54>
   10354:	add	r1, pc, r1
   10358:	add	r2, pc, r2
   1035c:	add	r1, r1, #184	; 0xb8
   10360:	bl	b6d4 <g_return_if_fail_warning@plt>
   10364:	mov	r0, r5
   10368:	pop	{r3, r4, r5, pc}
   1036c:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   10370:	mov	r1, r0
   10374:	mov	r0, r4
   10378:	bl	ba7c <g_type_get_qdata@plt>
   1037c:	ldr	r3, [r0, #8]
   10380:	ldr	r0, [r3, #4]
   10384:	pop	{r3, r4, r5, pc}
   10388:	andeq	r7, r0, r4, asr #24
   1038c:	andeq	r8, r0, r4, ror #2

00010390 <dbus_g_type_is_struct@@Base>:
   10390:	push	{r4, lr}
   10394:	mov	r4, r0
   10398:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   1039c:	mov	r1, r0
   103a0:	mov	r0, r4
   103a4:	bl	ba7c <g_type_get_qdata@plt>
   103a8:	cmp	r0, #0
   103ac:	popeq	{r4, pc}
   103b0:	ldr	r3, [r0, #8]
   103b4:	ldr	r0, [r3]
   103b8:	subs	r3, r0, #2
   103bc:	rsbs	r0, r3, #0
   103c0:	adcs	r0, r0, r3
   103c4:	pop	{r4, pc}

000103c8 <dbus_g_type_struct_peek_vtable@@Base>:
   103c8:	push	{r3, r4, r5, lr}
   103cc:	mov	r4, r0
   103d0:	bl	10390 <dbus_g_type_is_struct@@Base>
   103d4:	subs	r5, r0, #0
   103d8:	bne	103fc <dbus_g_type_struct_peek_vtable@@Base+0x34>
   103dc:	ldr	r1, [pc, #52]	; 10418 <dbus_g_type_struct_peek_vtable@@Base+0x50>
   103e0:	ldr	r2, [pc, #52]	; 1041c <dbus_g_type_struct_peek_vtable@@Base+0x54>
   103e4:	add	r1, pc, r1
   103e8:	add	r2, pc, r2
   103ec:	add	r1, r1, #212	; 0xd4
   103f0:	bl	b6d4 <g_return_if_fail_warning@plt>
   103f4:	mov	r0, r5
   103f8:	pop	{r3, r4, r5, pc}
   103fc:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   10400:	mov	r1, r0
   10404:	mov	r0, r4
   10408:	bl	ba7c <g_type_get_qdata@plt>
   1040c:	ldr	r3, [r0, #8]
   10410:	ldr	r0, [r3, #4]
   10414:	pop	{r3, r4, r5, pc}
   10418:			; <UNDEFINED> instruction: 0x00007bb4
   1041c:	strdeq	r8, [r0], -r4

00010420 <dbus_g_type_get_collection_specialization@@Base>:
   10420:	push	{r3, r4, r5, lr}
   10424:	mov	r5, r0
   10428:	bl	10274 <dbus_g_type_is_collection@@Base>
   1042c:	subs	r4, r0, #0
   10430:	beq	10444 <dbus_g_type_get_collection_specialization@@Base+0x24>
   10434:	mov	r0, r5
   10438:	mov	r1, #0
   1043c:	pop	{r3, r4, r5, lr}
   10440:	b	fae0 <g_markup_error_quark@plt+0x4028>
   10444:	ldr	r1, [pc, #24]	; 10464 <dbus_g_type_get_collection_specialization@@Base+0x44>
   10448:	ldr	r2, [pc, #24]	; 10468 <dbus_g_type_get_collection_specialization@@Base+0x48>
   1044c:	add	r1, pc, r1
   10450:	add	r2, pc, r2
   10454:	add	r1, r1, #244	; 0xf4
   10458:	bl	b6d4 <g_return_if_fail_warning@plt>
   1045c:	mov	r0, r4
   10460:	pop	{r3, r4, r5, pc}
   10464:	andeq	r7, r0, ip, asr #22
   10468:	strheq	r8, [r0], -r0

0001046c <dbus_g_type_get_map_key_specialization@@Base>:
   1046c:	push	{r3, r4, r5, lr}
   10470:	mov	r5, r0
   10474:	bl	10300 <dbus_g_type_is_map@@Base>
   10478:	subs	r4, r0, #0
   1047c:	beq	10490 <dbus_g_type_get_map_key_specialization@@Base+0x24>
   10480:	mov	r0, r5
   10484:	mov	r1, #0
   10488:	pop	{r3, r4, r5, lr}
   1048c:	b	fae0 <g_markup_error_quark@plt+0x4028>
   10490:	ldr	r1, [pc, #24]	; 104b0 <dbus_g_type_get_map_key_specialization@@Base+0x44>
   10494:	ldr	r2, [pc, #24]	; 104b4 <dbus_g_type_get_map_key_specialization@@Base+0x48>
   10498:	add	r1, pc, r1
   1049c:	add	r2, pc, r2
   104a0:	add	r1, r1, #288	; 0x120
   104a4:	bl	b6d4 <g_return_if_fail_warning@plt>
   104a8:	mov	r0, r4
   104ac:	pop	{r3, r4, r5, pc}
   104b0:	andeq	r7, r0, r0, lsl #22
   104b4:	andeq	r8, r0, r8, lsl #1

000104b8 <dbus_g_type_get_map_value_specialization@@Base>:
   104b8:	push	{r3, r4, r5, lr}
   104bc:	mov	r5, r0
   104c0:	bl	10300 <dbus_g_type_is_map@@Base>
   104c4:	subs	r4, r0, #0
   104c8:	beq	104dc <dbus_g_type_get_map_value_specialization@@Base+0x24>
   104cc:	mov	r0, r5
   104d0:	mov	r1, #1
   104d4:	pop	{r3, r4, r5, lr}
   104d8:	b	fae0 <g_markup_error_quark@plt+0x4028>
   104dc:	ldr	r1, [pc, #24]	; 104fc <dbus_g_type_get_map_value_specialization@@Base+0x44>
   104e0:	ldr	r2, [pc, #24]	; 10500 <dbus_g_type_get_map_value_specialization@@Base+0x48>
   104e4:	add	r1, pc, r1
   104e8:	add	r2, pc, r2
   104ec:	add	r1, r1, #328	; 0x148
   104f0:	bl	b6d4 <g_return_if_fail_warning@plt>
   104f4:	mov	r0, r4
   104f8:	pop	{r3, r4, r5, pc}
   104fc:			; <UNDEFINED> instruction: 0x00007ab4
   10500:	andeq	r8, r0, ip, lsr r0

00010504 <dbus_g_type_get_struct_member_type@@Base>:
   10504:	push	{r4, r5, r6, lr}
   10508:	mov	r6, r1
   1050c:	mov	r5, r0
   10510:	bl	10390 <dbus_g_type_is_struct@@Base>
   10514:	subs	r4, r0, #0
   10518:	beq	1052c <dbus_g_type_get_struct_member_type@@Base+0x28>
   1051c:	mov	r0, r5
   10520:	mov	r1, r6
   10524:	pop	{r4, r5, r6, lr}
   10528:	b	fae0 <g_markup_error_quark@plt+0x4028>
   1052c:	ldr	r1, [pc, #24]	; 1054c <dbus_g_type_get_struct_member_type@@Base+0x48>
   10530:	ldr	r2, [pc, #24]	; 10550 <dbus_g_type_get_struct_member_type@@Base+0x4c>
   10534:	add	r1, pc, r1
   10538:	add	r2, pc, r2
   1053c:	add	r1, r1, #372	; 0x174
   10540:	bl	b6d4 <g_return_if_fail_warning@plt>
   10544:	mov	r0, r4
   10548:	pop	{r4, r5, r6, pc}
   1054c:	andeq	r7, r0, r4, ror #20
   10550:	andeq	r8, r0, r8

00010554 <dbus_g_type_get_struct_size@@Base>:
   10554:	push	{r3, r4, r5, lr}
   10558:	mov	r4, r0
   1055c:	bl	10390 <dbus_g_type_is_struct@@Base>
   10560:	subs	r5, r0, #0
   10564:	bne	10588 <dbus_g_type_get_struct_size@@Base+0x34>
   10568:	ldr	r1, [pc, #48]	; 105a0 <dbus_g_type_get_struct_size@@Base+0x4c>
   1056c:	ldr	r2, [pc, #48]	; 105a4 <dbus_g_type_get_struct_size@@Base+0x50>
   10570:	add	r1, pc, r1
   10574:	add	r2, pc, r2
   10578:	add	r1, r1, #408	; 0x198
   1057c:	bl	b6d4 <g_return_if_fail_warning@plt>
   10580:	mov	r0, r5
   10584:	pop	{r3, r4, r5, pc}
   10588:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   1058c:	mov	r1, r0
   10590:	mov	r0, r4
   10594:	bl	ba7c <g_type_get_qdata@plt>
   10598:	ldr	r0, [r0]
   1059c:	pop	{r3, r4, r5, pc}
   105a0:	andeq	r7, r0, r8, lsr #20
   105a4:	andeq	r7, r0, ip, asr #31
   105a8:	push	{r4, r5, r6, r7, r8, r9, lr}
   105ac:	sub	sp, sp, #12
   105b0:	mov	r4, r0
   105b4:	bl	10274 <dbus_g_type_is_collection@@Base>
   105b8:	cmp	r0, #0
   105bc:	mov	r0, r4
   105c0:	bne	10728 <dbus_g_type_get_struct_size@@Base+0x1d4>
   105c4:	bl	10300 <dbus_g_type_is_map@@Base>
   105c8:	subs	r6, r0, #0
   105cc:	mov	r0, r4
   105d0:	bne	106c0 <dbus_g_type_get_struct_size@@Base+0x16c>
   105d4:	bl	10390 <dbus_g_type_is_struct@@Base>
   105d8:	cmp	r0, #0
   105dc:	bne	10750 <dbus_g_type_get_struct_size@@Base+0x1fc>
   105e0:	ldr	r0, [pc, #564]	; 1081c <dbus_g_type_get_struct_size@@Base+0x2c8>
   105e4:	cmp	r4, #20
   105e8:	add	r0, pc, r0
   105ec:	beq	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   105f0:	ldr	r0, [pc, #552]	; 10820 <dbus_g_type_get_struct_size@@Base+0x2cc>
   105f4:	cmp	r4, #16
   105f8:	add	r0, pc, r0
   105fc:	beq	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   10600:	ldr	r0, [pc, #540]	; 10824 <dbus_g_type_get_struct_size@@Base+0x2d0>
   10604:	cmp	r4, #24
   10608:	add	r0, pc, r0
   1060c:	beq	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   10610:	ldr	r0, [pc, #528]	; 10828 <dbus_g_type_get_struct_size@@Base+0x2d4>
   10614:	cmp	r4, #28
   10618:	add	r0, pc, r0
   1061c:	beq	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   10620:	ldr	r0, [pc, #516]	; 1082c <dbus_g_type_get_struct_size@@Base+0x2d8>
   10624:	cmp	r4, #40	; 0x28
   10628:	add	r0, pc, r0
   1062c:	beq	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   10630:	ldr	r0, [pc, #504]	; 10830 <dbus_g_type_get_struct_size@@Base+0x2dc>
   10634:	cmp	r4, #44	; 0x2c
   10638:	add	r0, pc, r0
   1063c:	beq	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   10640:	ldr	r0, [pc, #492]	; 10834 <dbus_g_type_get_struct_size@@Base+0x2e0>
   10644:	cmp	r4, #60	; 0x3c
   10648:	add	r0, pc, r0
   1064c:	beq	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   10650:	ldr	r0, [pc, #480]	; 10838 <dbus_g_type_get_struct_size@@Base+0x2e4>
   10654:	cmp	r4, #64	; 0x40
   10658:	add	r0, pc, r0
   1065c:	beq	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   10660:	bl	b7e8 <g_strv_get_type@plt>
   10664:	cmp	r4, r0
   10668:	beq	10810 <dbus_g_type_get_struct_size@@Base+0x2bc>
   1066c:	bl	b764 <dbus_g_object_path_get_g_type@plt>
   10670:	cmp	r4, r0
   10674:	beq	10804 <dbus_g_type_get_struct_size@@Base+0x2b0>
   10678:	bl	baa0 <dbus_g_signature_get_g_type@plt>
   1067c:	cmp	r4, r0
   10680:	beq	107f8 <dbus_g_type_get_struct_size@@Base+0x2a4>
   10684:	bl	b554 <g_value_get_type@plt>
   10688:	cmp	r4, r0
   1068c:	beq	107e4 <dbus_g_type_get_struct_size@@Base+0x290>
   10690:	mov	r0, r4
   10694:	bl	b7c4 <g_type_name@plt>
   10698:	ldr	r3, [pc, #412]	; 1083c <dbus_g_type_get_struct_size@@Base+0x2e8>
   1069c:	ldr	r2, [pc, #412]	; 10840 <dbus_g_type_get_struct_size@@Base+0x2ec>
   106a0:	mov	r1, #4
   106a4:	add	r3, pc, r3
   106a8:	add	r2, pc, r2
   106ac:	add	r3, r3, #436	; 0x1b4
   106b0:	str	r0, [sp]
   106b4:	mov	r0, #0
   106b8:	bl	ba58 <g_log@plt>
   106bc:	b	106bc <dbus_g_type_get_struct_size@@Base+0x168>
   106c0:	bl	1046c <dbus_g_type_get_map_key_specialization@@Base>
   106c4:	mov	r6, r0
   106c8:	mov	r0, r4
   106cc:	bl	104b8 <dbus_g_type_get_map_value_specialization@@Base>
   106d0:	mov	r5, r0
   106d4:	mov	r0, r6
   106d8:	bl	105a8 <dbus_g_type_get_struct_size@@Base+0x54>
   106dc:	mov	r4, r0
   106e0:	mov	r0, r5
   106e4:	bl	105a8 <dbus_g_type_get_struct_size@@Base+0x54>
   106e8:	mov	r5, r0
   106ec:	mov	r0, r4
   106f0:	mov	r1, r5
   106f4:	bl	b374 <g_variant_type_new_dict_entry@plt>
   106f8:	mov	r7, r0
   106fc:	bl	b530 <g_variant_type_new_array@plt>
   10700:	mov	r6, r0
   10704:	mov	r0, r4
   10708:	bl	b6f8 <g_variant_type_free@plt>
   1070c:	mov	r0, r5
   10710:	bl	b6f8 <g_variant_type_free@plt>
   10714:	mov	r0, r7
   10718:	bl	b6f8 <g_variant_type_free@plt>
   1071c:	mov	r0, r6
   10720:	add	sp, sp, #12
   10724:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10728:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   1072c:	bl	105a8 <dbus_g_type_get_struct_size@@Base+0x54>
   10730:	mov	r5, r0
   10734:	bl	b530 <g_variant_type_new_array@plt>
   10738:	mov	r4, r0
   1073c:	mov	r0, r5
   10740:	bl	b6f8 <g_variant_type_free@plt>
   10744:	mov	r0, r4
   10748:	add	sp, sp, #12
   1074c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10750:	mov	r0, r4
   10754:	bl	10554 <dbus_g_type_get_struct_size@@Base>
   10758:	mov	r1, #4
   1075c:	mov	r5, r0
   10760:	bl	b560 <g_malloc0_n@plt>
   10764:	cmp	r5, #0
   10768:	mov	r7, r0
   1076c:	beq	107d4 <dbus_g_type_get_struct_size@@Base+0x280>
   10770:	sub	r8, r0, #4
   10774:	mov	r9, r8
   10778:	mov	r1, r6
   1077c:	mov	r0, r4
   10780:	bl	10504 <dbus_g_type_get_struct_member_type@@Base>
   10784:	add	r6, r6, #1
   10788:	bl	105a8 <dbus_g_type_get_struct_size@@Base+0x54>
   1078c:	cmp	r6, r5
   10790:	str	r0, [r9, #4]!
   10794:	bne	10778 <dbus_g_type_get_struct_size@@Base+0x224>
   10798:	mov	r0, r7
   1079c:	mov	r1, r5
   107a0:	bl	b494 <g_variant_type_new_tuple@plt>
   107a4:	mov	r4, #0
   107a8:	mov	r6, r0
   107ac:	add	r4, r4, #1
   107b0:	ldr	r0, [r8, #4]!
   107b4:	bl	b6f8 <g_variant_type_free@plt>
   107b8:	cmp	r4, r5
   107bc:	bne	107ac <dbus_g_type_get_struct_size@@Base+0x258>
   107c0:	mov	r0, r7
   107c4:	bl	b248 <g_free@plt>
   107c8:	mov	r0, r6
   107cc:	add	sp, sp, #12
   107d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   107d4:	mov	r1, r5
   107d8:	bl	b494 <g_variant_type_new_tuple@plt>
   107dc:	mov	r6, r0
   107e0:	b	107c0 <dbus_g_type_get_struct_size@@Base+0x26c>
   107e4:	ldr	r0, [pc, #88]	; 10844 <dbus_g_type_get_struct_size@@Base+0x2f0>
   107e8:	add	r0, pc, r0
   107ec:	add	sp, sp, #12
   107f0:	pop	{r4, r5, r6, r7, r8, r9, lr}
   107f4:	b	b440 <g_variant_type_copy@plt>
   107f8:	ldr	r0, [pc, #72]	; 10848 <dbus_g_type_get_struct_size@@Base+0x2f4>
   107fc:	add	r0, pc, r0
   10800:	b	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   10804:	ldr	r0, [pc, #64]	; 1084c <dbus_g_type_get_struct_size@@Base+0x2f8>
   10808:	add	r0, pc, r0
   1080c:	b	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   10810:	ldr	r0, [pc, #56]	; 10850 <dbus_g_type_get_struct_size@@Base+0x2fc>
   10814:	add	r0, pc, r0
   10818:	b	107ec <dbus_g_type_get_struct_size@@Base+0x298>
   1081c:	andeq	r7, r0, r8, ror pc
   10820:	andeq	r6, r0, r4, lsr #19
   10824:	andeq	r7, r0, ip, asr pc
   10828:	andeq	r7, r0, r0, asr pc
   1082c:	andeq	r7, r0, r4, asr #30
   10830:	strdeq	r8, [r0], -ip
   10834:	andeq	r8, r0, ip, asr r8
   10838:	andeq	r7, r0, ip, lsr r9
   1083c:	strdeq	r7, [r0], -r4
   10840:	ldrdeq	r7, [r0], -r8
   10844:	muleq	r0, r4, sp
   10848:	andeq	r7, r0, ip, ror sp
   1084c:	andeq	r7, r0, ip, ror #26
   10850:	andeq	r7, r0, ip, asr sp

00010854 <dbus_g_type_specialized_construct@@Base>:
   10854:	push	{r3, r4, r5, lr}
   10858:	mov	r4, r0
   1085c:	bl	fc58 <dbus_g_type_specialized_init@@Base>
   10860:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   10864:	mov	r1, r0
   10868:	mov	r0, r4
   1086c:	bl	ba7c <g_type_get_qdata@plt>
   10870:	subs	r5, r0, #0
   10874:	beq	10890 <dbus_g_type_specialized_construct@@Base+0x3c>
   10878:	ldr	r3, [r5, #8]
   1087c:	mov	r0, r4
   10880:	ldr	r3, [r3, #4]
   10884:	ldr	r3, [r3]
   10888:	blx	r3
   1088c:	pop	{r3, r4, r5, pc}
   10890:	ldr	r1, [pc, #24]	; 108b0 <dbus_g_type_specialized_construct@@Base+0x5c>
   10894:	ldr	r2, [pc, #24]	; 108b4 <dbus_g_type_specialized_construct@@Base+0x60>
   10898:	add	r1, pc, r1
   1089c:	add	r2, pc, r2
   108a0:	add	r1, r1, #476	; 0x1dc
   108a4:	bl	b6d4 <g_return_if_fail_warning@plt>
   108a8:	mov	r0, r5
   108ac:	pop	{r3, r4, r5, pc}
   108b0:	andeq	r7, r0, r0, lsl #14
   108b4:	andeq	r7, r0, ip, lsr sp

000108b8 <dbus_g_type_collection_get_fixed@@Base>:
   108b8:	push	{r4, r5, r6, r7, r8, lr}
   108bc:	mov	r4, r0
   108c0:	mov	r8, r1
   108c4:	mov	r7, r2
   108c8:	bl	fc58 <dbus_g_type_specialized_init@@Base>
   108cc:	cmp	r4, #0
   108d0:	beq	108f4 <dbus_g_type_collection_get_fixed@@Base+0x3c>
   108d4:	ldr	r5, [r4]
   108d8:	cmp	r5, #72	; 0x48
   108dc:	beq	10918 <dbus_g_type_collection_get_fixed@@Base+0x60>
   108e0:	mov	r0, r4
   108e4:	mov	r1, #72	; 0x48
   108e8:	bl	b9bc <g_type_check_value_holds@plt>
   108ec:	cmp	r0, #0
   108f0:	bne	10918 <dbus_g_type_collection_get_fixed@@Base+0x60>
   108f4:	ldr	r1, [pc, #180]	; 109b0 <dbus_g_type_collection_get_fixed@@Base+0xf8>
   108f8:	mov	r0, #0
   108fc:	ldr	r2, [pc, #176]	; 109b4 <dbus_g_type_collection_get_fixed@@Base+0xfc>
   10900:	add	r1, pc, r1
   10904:	add	r2, pc, r2
   10908:	add	r1, r1, #512	; 0x200
   1090c:	bl	b6d4 <g_return_if_fail_warning@plt>
   10910:	mov	r0, #0
   10914:	pop	{r4, r5, r6, r7, r8, pc}
   10918:	mov	r0, r5
   1091c:	bl	10274 <dbus_g_type_is_collection@@Base>
   10920:	subs	r6, r0, #0
   10924:	beq	1096c <dbus_g_type_collection_get_fixed@@Base+0xb4>
   10928:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   1092c:	mov	r1, r0
   10930:	mov	r0, r5
   10934:	bl	ba7c <g_type_get_qdata@plt>
   10938:	ldr	r3, [r0, #8]
   1093c:	ldr	r3, [r3, #4]
   10940:	ldr	r6, [r3, #24]
   10944:	cmp	r6, #0
   10948:	beq	1098c <dbus_g_type_collection_get_fixed@@Base+0xd4>
   1094c:	mov	r0, r4
   10950:	bl	b2a8 <g_value_get_boxed@plt>
   10954:	mov	r2, r8
   10958:	mov	r3, r7
   1095c:	mov	r1, r0
   10960:	mov	r0, r5
   10964:	blx	r6
   10968:	pop	{r4, r5, r6, r7, r8, pc}
   1096c:	ldr	r1, [pc, #68]	; 109b8 <dbus_g_type_collection_get_fixed@@Base+0x100>
   10970:	ldr	r2, [pc, #68]	; 109bc <dbus_g_type_collection_get_fixed@@Base+0x104>
   10974:	add	r1, pc, r1
   10978:	add	r2, pc, r2
   1097c:	add	r1, r1, #512	; 0x200
   10980:	bl	b6d4 <g_return_if_fail_warning@plt>
   10984:	mov	r0, r6
   10988:	pop	{r4, r5, r6, r7, r8, pc}
   1098c:	ldr	r1, [pc, #44]	; 109c0 <dbus_g_type_collection_get_fixed@@Base+0x108>
   10990:	mov	r0, r6
   10994:	ldr	r2, [pc, #40]	; 109c4 <dbus_g_type_collection_get_fixed@@Base+0x10c>
   10998:	add	r1, pc, r1
   1099c:	add	r2, pc, r2
   109a0:	add	r1, r1, #512	; 0x200
   109a4:	bl	b6d4 <g_return_if_fail_warning@plt>
   109a8:	mov	r0, r6
   109ac:	pop	{r4, r5, r6, r7, r8, pc}
   109b0:	muleq	r0, r8, r6
   109b4:	muleq	r0, r4, ip
   109b8:	andeq	r7, r0, r4, lsr #12
   109bc:	andeq	r7, r0, r8, lsl #23
   109c0:	andeq	r7, r0, r0, lsl #12
   109c4:	andeq	r7, r0, r8, lsl ip

000109c8 <dbus_g_type_collection_value_iterate@@Base>:
   109c8:	push	{r3, r4, r5, r6, r7, lr}
   109cc:	mov	r4, r0
   109d0:	mov	r7, r1
   109d4:	mov	r6, r2
   109d8:	bl	fc58 <dbus_g_type_specialized_init@@Base>
   109dc:	cmp	r4, #0
   109e0:	beq	10a04 <dbus_g_type_collection_value_iterate@@Base+0x3c>
   109e4:	ldr	r5, [r4]
   109e8:	cmp	r5, #72	; 0x48
   109ec:	beq	10a24 <dbus_g_type_collection_value_iterate@@Base+0x5c>
   109f0:	mov	r0, r4
   109f4:	mov	r1, #72	; 0x48
   109f8:	bl	b9bc <g_type_check_value_holds@plt>
   109fc:	cmp	r0, #0
   10a00:	bne	10a24 <dbus_g_type_collection_value_iterate@@Base+0x5c>
   10a04:	ldr	r1, [pc, #128]	; 10a8c <dbus_g_type_collection_value_iterate@@Base+0xc4>
   10a08:	mov	r0, #0
   10a0c:	ldr	r2, [pc, #124]	; 10a90 <dbus_g_type_collection_value_iterate@@Base+0xc8>
   10a10:	add	r1, pc, r1
   10a14:	add	r2, pc, r2
   10a18:	add	r1, r1, #548	; 0x224
   10a1c:	pop	{r3, r4, r5, r6, r7, lr}
   10a20:	b	b6d4 <g_return_if_fail_warning@plt>
   10a24:	mov	r0, r5
   10a28:	bl	10274 <dbus_g_type_is_collection@@Base>
   10a2c:	cmp	r0, #0
   10a30:	beq	10a70 <dbus_g_type_collection_value_iterate@@Base+0xa8>
   10a34:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   10a38:	mov	r1, r0
   10a3c:	mov	r0, r5
   10a40:	bl	ba7c <g_type_get_qdata@plt>
   10a44:	ldr	r3, [r0, #8]
   10a48:	mov	r0, r4
   10a4c:	ldr	r3, [r3, #4]
   10a50:	ldr	r4, [r3, #28]
   10a54:	bl	b2a8 <g_value_get_boxed@plt>
   10a58:	mov	r2, r7
   10a5c:	mov	r3, r6
   10a60:	mov	r1, r0
   10a64:	mov	r0, r5
   10a68:	blx	r4
   10a6c:	pop	{r3, r4, r5, r6, r7, pc}
   10a70:	ldr	r1, [pc, #28]	; 10a94 <dbus_g_type_collection_value_iterate@@Base+0xcc>
   10a74:	ldr	r2, [pc, #28]	; 10a98 <dbus_g_type_collection_value_iterate@@Base+0xd0>
   10a78:	add	r1, pc, r1
   10a7c:	add	r2, pc, r2
   10a80:	add	r1, r1, #548	; 0x224
   10a84:	pop	{r3, r4, r5, r6, r7, lr}
   10a88:	b	b6d4 <g_return_if_fail_warning@plt>
   10a8c:	andeq	r7, r0, r8, lsl #11
   10a90:	andeq	r7, r0, r4, lsl #23
   10a94:	andeq	r7, r0, r0, lsr #10
   10a98:	andeq	r7, r0, r4, lsl #21

00010a9c <dbus_g_type_specialized_init_append@@Base>:
   10a9c:	push	{r4, r5, r6, lr}
   10aa0:	mov	r4, r0
   10aa4:	mov	r5, r1
   10aa8:	bl	fc58 <dbus_g_type_specialized_init@@Base>
   10aac:	cmp	r4, #0
   10ab0:	beq	10ad4 <dbus_g_type_specialized_init_append@@Base+0x38>
   10ab4:	ldr	r6, [r4]
   10ab8:	cmp	r6, #72	; 0x48
   10abc:	beq	10af4 <dbus_g_type_specialized_init_append@@Base+0x58>
   10ac0:	mov	r0, r4
   10ac4:	mov	r1, #72	; 0x48
   10ac8:	bl	b9bc <g_type_check_value_holds@plt>
   10acc:	cmp	r0, #0
   10ad0:	bne	10af4 <dbus_g_type_specialized_init_append@@Base+0x58>
   10ad4:	ldr	r1, [pc, #136]	; 10b64 <dbus_g_type_specialized_init_append@@Base+0xc8>
   10ad8:	mov	r0, #0
   10adc:	ldr	r2, [pc, #132]	; 10b68 <dbus_g_type_specialized_init_append@@Base+0xcc>
   10ae0:	add	r1, pc, r1
   10ae4:	add	r2, pc, r2
   10ae8:	add	r1, r1, #588	; 0x24c
   10aec:	pop	{r4, r5, r6, lr}
   10af0:	b	b6d4 <g_return_if_fail_warning@plt>
   10af4:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   10af8:	mov	r1, r0
   10afc:	mov	r0, r6
   10b00:	bl	ba7c <g_type_get_qdata@plt>
   10b04:	subs	r3, r0, #0
   10b08:	beq	10b48 <dbus_g_type_specialized_init_append@@Base+0xac>
   10b0c:	ldr	r0, [r3]
   10b10:	cmp	r0, #0
   10b14:	beq	10b2c <dbus_g_type_specialized_init_append@@Base+0x90>
   10b18:	str	r4, [r5]
   10b1c:	ldr	r2, [r3, #4]
   10b20:	ldr	r2, [r2]
   10b24:	stmib	r5, {r2, r3}
   10b28:	pop	{r4, r5, r6, pc}
   10b2c:	ldr	r1, [pc, #56]	; 10b6c <dbus_g_type_specialized_init_append@@Base+0xd0>
   10b30:	ldr	r2, [pc, #56]	; 10b70 <dbus_g_type_specialized_init_append@@Base+0xd4>
   10b34:	add	r1, pc, r1
   10b38:	add	r2, pc, r2
   10b3c:	add	r1, r1, #588	; 0x24c
   10b40:	pop	{r4, r5, r6, lr}
   10b44:	b	b6d4 <g_return_if_fail_warning@plt>
   10b48:	ldr	r1, [pc, #36]	; 10b74 <dbus_g_type_specialized_init_append@@Base+0xd8>
   10b4c:	ldr	r2, [pc, #36]	; 10b78 <dbus_g_type_specialized_init_append@@Base+0xdc>
   10b50:	add	r1, pc, r1
   10b54:	add	r2, pc, r2
   10b58:	add	r1, r1, #588	; 0x24c
   10b5c:	pop	{r4, r5, r6, lr}
   10b60:	b	b6d4 <g_return_if_fail_warning@plt>
   10b64:			; <UNDEFINED> instruction: 0x000074b8
   10b68:			; <UNDEFINED> instruction: 0x00007ab4
   10b6c:	andeq	r7, r0, r4, ror #8
   10b70:			; <UNDEFINED> instruction: 0x00007ab0
   10b74:	andeq	r7, r0, r8, asr #8
   10b78:	andeq	r7, r0, r0, lsl #21

00010b7c <dbus_g_type_specialized_collection_append@@Base>:
   10b7c:	push	{r3, r4, r5, lr}
   10b80:	mov	r4, r0
   10b84:	ldr	r3, [r0]
   10b88:	mov	r5, r1
   10b8c:	ldr	r0, [r3]
   10b90:	bl	10274 <dbus_g_type_is_collection@@Base>
   10b94:	cmp	r0, #0
   10b98:	bne	10bb8 <dbus_g_type_specialized_collection_append@@Base+0x3c>
   10b9c:	ldr	r1, [pc, #52]	; 10bd8 <dbus_g_type_specialized_collection_append@@Base+0x5c>
   10ba0:	ldr	r2, [pc, #52]	; 10bdc <dbus_g_type_specialized_collection_append@@Base+0x60>
   10ba4:	add	r1, pc, r1
   10ba8:	add	r2, pc, r2
   10bac:	add	r1, r1, #624	; 0x270
   10bb0:	pop	{r3, r4, r5, lr}
   10bb4:	b	b6d4 <g_return_if_fail_warning@plt>
   10bb8:	ldr	r3, [r4, #8]
   10bbc:	mov	r1, r5
   10bc0:	mov	r0, r4
   10bc4:	ldr	r3, [r3, #8]
   10bc8:	ldr	r3, [r3, #4]
   10bcc:	ldr	r3, [r3, #32]
   10bd0:	blx	r3
   10bd4:	pop	{r3, r4, r5, pc}
   10bd8:	strdeq	r7, [r0], -r4
   10bdc:	andeq	r7, r0, ip, asr sl

00010be0 <dbus_g_type_specialized_collection_end_append@@Base>:
   10be0:	push	{r4, lr}
   10be4:	mov	r4, r0
   10be8:	ldr	r3, [r0]
   10bec:	ldr	r0, [r3]
   10bf0:	bl	10274 <dbus_g_type_is_collection@@Base>
   10bf4:	cmp	r0, #0
   10bf8:	beq	10c20 <dbus_g_type_specialized_collection_end_append@@Base+0x40>
   10bfc:	ldr	r3, [r4, #8]
   10c00:	ldr	r3, [r3, #8]
   10c04:	ldr	r3, [r3, #4]
   10c08:	ldr	r3, [r3, #36]	; 0x24
   10c0c:	cmp	r3, #0
   10c10:	popeq	{r4, pc}
   10c14:	mov	r0, r4
   10c18:	blx	r3
   10c1c:	pop	{r4, pc}
   10c20:	ldr	r1, [pc, #20]	; 10c3c <dbus_g_type_specialized_collection_end_append@@Base+0x5c>
   10c24:	ldr	r2, [pc, #20]	; 10c40 <dbus_g_type_specialized_collection_end_append@@Base+0x60>
   10c28:	add	r1, pc, r1
   10c2c:	add	r2, pc, r2
   10c30:	add	r1, r1, #668	; 0x29c
   10c34:	pop	{r4, lr}
   10c38:	b	b6d4 <g_return_if_fail_warning@plt>
   10c3c:	andeq	r7, r0, r0, ror r3
   10c40:	ldrdeq	r7, [r0], -r8

00010c44 <dbus_g_type_specialized_map_append@@Base>:
   10c44:	push	{r4, r5, r6, lr}
   10c48:	mov	r4, r0
   10c4c:	ldr	r3, [r0]
   10c50:	mov	r6, r1
   10c54:	mov	r5, r2
   10c58:	ldr	r0, [r3]
   10c5c:	bl	10300 <dbus_g_type_is_map@@Base>
   10c60:	cmp	r0, #0
   10c64:	bne	10c84 <dbus_g_type_specialized_map_append@@Base+0x40>
   10c68:	ldr	r1, [pc, #56]	; 10ca8 <dbus_g_type_specialized_map_append@@Base+0x64>
   10c6c:	ldr	r2, [pc, #56]	; 10cac <dbus_g_type_specialized_map_append@@Base+0x68>
   10c70:	add	r1, pc, r1
   10c74:	add	r2, pc, r2
   10c78:	add	r1, r1, #716	; 0x2cc
   10c7c:	pop	{r4, r5, r6, lr}
   10c80:	b	b6d4 <g_return_if_fail_warning@plt>
   10c84:	ldr	r3, [r4, #8]
   10c88:	mov	r1, r6
   10c8c:	mov	r2, r5
   10c90:	mov	r0, r4
   10c94:	ldr	r3, [r3, #8]
   10c98:	ldr	r3, [r3, #4]
   10c9c:	ldr	r3, [r3, #28]
   10ca0:	blx	r3
   10ca4:	pop	{r4, r5, r6, pc}
   10ca8:	andeq	r7, r0, r8, lsr #6
   10cac:	andeq	r7, r0, r4, asr #19

00010cb0 <dbus_g_type_map_value_iterate@@Base>:
   10cb0:	push	{r3, r4, r5, r6, r7, lr}
   10cb4:	mov	r4, r0
   10cb8:	mov	r7, r1
   10cbc:	mov	r6, r2
   10cc0:	bl	fc58 <dbus_g_type_specialized_init@@Base>
   10cc4:	cmp	r4, #0
   10cc8:	beq	10cec <dbus_g_type_map_value_iterate@@Base+0x3c>
   10ccc:	ldr	r5, [r4]
   10cd0:	cmp	r5, #72	; 0x48
   10cd4:	beq	10d0c <dbus_g_type_map_value_iterate@@Base+0x5c>
   10cd8:	mov	r0, r4
   10cdc:	mov	r1, #72	; 0x48
   10ce0:	bl	b9bc <g_type_check_value_holds@plt>
   10ce4:	cmp	r0, #0
   10ce8:	bne	10d0c <dbus_g_type_map_value_iterate@@Base+0x5c>
   10cec:	ldr	r1, [pc, #128]	; 10d74 <dbus_g_type_map_value_iterate@@Base+0xc4>
   10cf0:	mov	r0, #0
   10cf4:	ldr	r2, [pc, #124]	; 10d78 <dbus_g_type_map_value_iterate@@Base+0xc8>
   10cf8:	add	r1, pc, r1
   10cfc:	add	r2, pc, r2
   10d00:	add	r1, r1, #752	; 0x2f0
   10d04:	pop	{r3, r4, r5, r6, r7, lr}
   10d08:	b	b6d4 <g_return_if_fail_warning@plt>
   10d0c:	mov	r0, r5
   10d10:	bl	10300 <dbus_g_type_is_map@@Base>
   10d14:	cmp	r0, #0
   10d18:	beq	10d58 <dbus_g_type_map_value_iterate@@Base+0xa8>
   10d1c:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   10d20:	mov	r1, r0
   10d24:	mov	r0, r5
   10d28:	bl	ba7c <g_type_get_qdata@plt>
   10d2c:	ldr	r3, [r0, #8]
   10d30:	mov	r0, r4
   10d34:	ldr	r3, [r3, #4]
   10d38:	ldr	r4, [r3, #24]
   10d3c:	bl	b2a8 <g_value_get_boxed@plt>
   10d40:	mov	r2, r7
   10d44:	mov	r3, r6
   10d48:	mov	r1, r0
   10d4c:	mov	r0, r5
   10d50:	blx	r4
   10d54:	pop	{r3, r4, r5, r6, r7, pc}
   10d58:	ldr	r1, [pc, #28]	; 10d7c <dbus_g_type_map_value_iterate@@Base+0xcc>
   10d5c:	ldr	r2, [pc, #28]	; 10d80 <dbus_g_type_map_value_iterate@@Base+0xd0>
   10d60:	add	r1, pc, r1
   10d64:	add	r2, pc, r2
   10d68:	add	r1, r1, #752	; 0x2f0
   10d6c:	pop	{r3, r4, r5, r6, r7, lr}
   10d70:	b	b6d4 <g_return_if_fail_warning@plt>
   10d74:	andeq	r7, r0, r0, lsr #5
   10d78:	muleq	r0, ip, r8
   10d7c:	andeq	r7, r0, r8, lsr r2
   10d80:	andeq	r7, r0, r0, asr #15

00010d84 <dbus_g_type_struct_get_member@@Base>:
   10d84:	push	{r4, r5, r6, r7, r8, lr}
   10d88:	mov	r4, r0
   10d8c:	mov	r7, r1
   10d90:	mov	r6, r2
   10d94:	bl	fc58 <dbus_g_type_specialized_init@@Base>
   10d98:	cmp	r4, #0
   10d9c:	beq	10dc0 <dbus_g_type_struct_get_member@@Base+0x3c>
   10da0:	ldr	r5, [r4]
   10da4:	cmp	r5, #72	; 0x48
   10da8:	beq	10de4 <dbus_g_type_struct_get_member@@Base+0x60>
   10dac:	mov	r0, r4
   10db0:	mov	r1, #72	; 0x48
   10db4:	bl	b9bc <g_type_check_value_holds@plt>
   10db8:	cmp	r0, #0
   10dbc:	bne	10de4 <dbus_g_type_struct_get_member@@Base+0x60>
   10dc0:	ldr	r1, [pc, #136]	; 10e50 <dbus_g_type_struct_get_member@@Base+0xcc>
   10dc4:	mov	r0, #0
   10dc8:	ldr	r2, [pc, #132]	; 10e54 <dbus_g_type_struct_get_member@@Base+0xd0>
   10dcc:	add	r1, pc, r1
   10dd0:	add	r2, pc, r2
   10dd4:	add	r1, r1, #784	; 0x310
   10dd8:	bl	b6d4 <g_return_if_fail_warning@plt>
   10ddc:	mov	r0, #0
   10de0:	pop	{r4, r5, r6, r7, r8, pc}
   10de4:	mov	r0, r5
   10de8:	bl	10390 <dbus_g_type_is_struct@@Base>
   10dec:	subs	r8, r0, #0
   10df0:	beq	10e30 <dbus_g_type_struct_get_member@@Base+0xac>
   10df4:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   10df8:	mov	r1, r0
   10dfc:	mov	r0, r5
   10e00:	bl	ba7c <g_type_get_qdata@plt>
   10e04:	ldr	r3, [r0, #8]
   10e08:	mov	r0, r4
   10e0c:	ldr	r3, [r3, #4]
   10e10:	ldr	r4, [r3, #24]
   10e14:	bl	b2a8 <g_value_get_boxed@plt>
   10e18:	mov	r2, r7
   10e1c:	mov	r3, r6
   10e20:	mov	r1, r0
   10e24:	mov	r0, r5
   10e28:	blx	r4
   10e2c:	pop	{r4, r5, r6, r7, r8, pc}
   10e30:	ldr	r1, [pc, #32]	; 10e58 <dbus_g_type_struct_get_member@@Base+0xd4>
   10e34:	ldr	r2, [pc, #32]	; 10e5c <dbus_g_type_struct_get_member@@Base+0xd8>
   10e38:	add	r1, pc, r1
   10e3c:	add	r2, pc, r2
   10e40:	add	r1, r1, #784	; 0x310
   10e44:	bl	b6d4 <g_return_if_fail_warning@plt>
   10e48:	mov	r0, r8
   10e4c:	pop	{r4, r5, r6, r7, r8, pc}
   10e50:	andeq	r7, r0, ip, asr #3
   10e54:	andeq	r7, r0, r8, asr #15
   10e58:	andeq	r7, r0, r0, ror #2
   10e5c:	andeq	r7, r0, r4, lsl #14

00010e60 <dbus_g_type_struct_set_member@@Base>:
   10e60:	push	{r4, r5, r6, r7, r8, lr}
   10e64:	mov	r4, r0
   10e68:	mov	r7, r1
   10e6c:	mov	r6, r2
   10e70:	bl	fc58 <dbus_g_type_specialized_init@@Base>
   10e74:	cmp	r4, #0
   10e78:	beq	10e9c <dbus_g_type_struct_set_member@@Base+0x3c>
   10e7c:	ldr	r5, [r4]
   10e80:	cmp	r5, #72	; 0x48
   10e84:	beq	10ec0 <dbus_g_type_struct_set_member@@Base+0x60>
   10e88:	mov	r0, r4
   10e8c:	mov	r1, #72	; 0x48
   10e90:	bl	b9bc <g_type_check_value_holds@plt>
   10e94:	cmp	r0, #0
   10e98:	bne	10ec0 <dbus_g_type_struct_set_member@@Base+0x60>
   10e9c:	ldr	r1, [pc, #136]	; 10f2c <dbus_g_type_struct_set_member@@Base+0xcc>
   10ea0:	mov	r0, #0
   10ea4:	ldr	r2, [pc, #132]	; 10f30 <dbus_g_type_struct_set_member@@Base+0xd0>
   10ea8:	add	r1, pc, r1
   10eac:	add	r2, pc, r2
   10eb0:	add	r1, r1, #816	; 0x330
   10eb4:	bl	b6d4 <g_return_if_fail_warning@plt>
   10eb8:	mov	r0, #0
   10ebc:	pop	{r4, r5, r6, r7, r8, pc}
   10ec0:	mov	r0, r5
   10ec4:	bl	10390 <dbus_g_type_is_struct@@Base>
   10ec8:	subs	r8, r0, #0
   10ecc:	beq	10f0c <dbus_g_type_struct_set_member@@Base+0xac>
   10ed0:	bl	fa38 <g_markup_error_quark@plt+0x3f80>
   10ed4:	mov	r1, r0
   10ed8:	mov	r0, r5
   10edc:	bl	ba7c <g_type_get_qdata@plt>
   10ee0:	ldr	r3, [r0, #8]
   10ee4:	mov	r0, r4
   10ee8:	ldr	r3, [r3, #4]
   10eec:	ldr	r4, [r3, #28]
   10ef0:	bl	b2a8 <g_value_get_boxed@plt>
   10ef4:	mov	r2, r7
   10ef8:	mov	r3, r6
   10efc:	mov	r1, r0
   10f00:	mov	r0, r5
   10f04:	blx	r4
   10f08:	pop	{r4, r5, r6, r7, r8, pc}
   10f0c:	ldr	r1, [pc, #32]	; 10f34 <dbus_g_type_struct_set_member@@Base+0xd4>
   10f10:	ldr	r2, [pc, #32]	; 10f38 <dbus_g_type_struct_set_member@@Base+0xd8>
   10f14:	add	r1, pc, r1
   10f18:	add	r2, pc, r2
   10f1c:	add	r1, r1, #816	; 0x330
   10f20:	bl	b6d4 <g_return_if_fail_warning@plt>
   10f24:	mov	r0, r8
   10f28:	pop	{r4, r5, r6, r7, r8, pc}
   10f2c:	strdeq	r7, [r0], -r0
   10f30:	andeq	r7, r0, ip, ror #13
   10f34:	andeq	r7, r0, r4, lsl #1
   10f38:	andeq	r7, r0, r8, lsr #12

00010f3c <dbus_g_type_struct_get@@Base>:
   10f3c:	push	{r1, r2, r3}
   10f40:	mov	r3, #0
   10f44:	ldr	r2, [pc, #588]	; 11198 <dbus_g_type_struct_get@@Base+0x25c>
   10f48:	ldr	r1, [pc, #588]	; 1119c <dbus_g_type_struct_get@@Base+0x260>
   10f4c:	add	r2, pc, r2
   10f50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f54:	sub	sp, sp, #120	; 0x78
   10f58:	ldr	sl, [r2, r1]
   10f5c:	mov	r8, r0
   10f60:	ldr	r0, [r0]
   10f64:	ldr	r4, [sp, #156]	; 0x9c
   10f68:	ldr	r2, [sl]
   10f6c:	str	r3, [sp, #24]
   10f70:	str	r3, [sp, #28]
   10f74:	str	r3, [sp, #32]
   10f78:	str	r3, [sp, #36]	; 0x24
   10f7c:	str	r2, [sp, #116]	; 0x74
   10f80:	str	r3, [sp, #40]	; 0x28
   10f84:	str	r3, [sp, #44]	; 0x2c
   10f88:	bl	10390 <dbus_g_type_is_struct@@Base>
   10f8c:	subs	r5, r0, #0
   10f90:	beq	11074 <dbus_g_type_struct_get@@Base+0x138>
   10f94:	ldr	r0, [r8]
   10f98:	add	r3, sp, #160	; 0xa0
   10f9c:	str	r3, [sp, #20]
   10fa0:	bl	10554 <dbus_g_type_get_struct_size@@Base>
   10fa4:	cmn	r4, #1
   10fa8:	mov	r9, r0
   10fac:	beq	11150 <dbus_g_type_struct_get@@Base+0x214>
   10fb0:	cmp	r0, r4
   10fb4:	bls	11114 <dbus_g_type_struct_get@@Base+0x1d8>
   10fb8:	add	r7, sp, #24
   10fbc:	add	fp, sp, #48	; 0x30
   10fc0:	mov	r1, r4
   10fc4:	ldr	r0, [r8]
   10fc8:	bl	10504 <dbus_g_type_get_struct_member_type@@Base>
   10fcc:	mov	r1, r0
   10fd0:	mov	r0, r7
   10fd4:	bl	b8cc <g_value_init@plt>
   10fd8:	mov	r1, r4
   10fdc:	mov	r2, r7
   10fe0:	mov	r0, r8
   10fe4:	bl	10d84 <dbus_g_type_struct_get_member@@Base>
   10fe8:	ldr	r0, [sp, #24]
   10fec:	bl	b2fc <g_type_value_table_peek@plt>
   10ff0:	mov	r1, #0
   10ff4:	mov	r2, #64	; 0x40
   10ff8:	mov	r3, r0
   10ffc:	mov	r0, fp
   11000:	ldr	r6, [r3, #24]
   11004:	str	r3, [sp, #12]
   11008:	bl	b47c <memset@plt>
   1100c:	mov	r2, #0
   11010:	ldr	ip, [sp, #20]
   11014:	mov	r1, r2
   11018:	ldr	r3, [sp, #12]
   1101c:	ldrb	r4, [r6, r1]
   11020:	cmp	r4, #0
   11024:	beq	110cc <dbus_g_type_struct_get@@Base+0x190>
   11028:	sub	r4, r4, #100	; 0x64
   1102c:	add	r1, r1, #1
   11030:	cmp	r4, #13
   11034:	addls	pc, pc, r4, lsl #2
   11038:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   1103c:	b	1111c <dbus_g_type_struct_get@@Base+0x1e0>
   11040:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   11044:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   11048:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   1104c:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   11050:	b	110b0 <dbus_g_type_struct_get@@Base+0x174>
   11054:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   11058:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   1105c:	b	110b0 <dbus_g_type_struct_get@@Base+0x174>
   11060:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   11064:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   11068:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   1106c:	b	110b0 <dbus_g_type_struct_get@@Base+0x174>
   11070:	b	11138 <dbus_g_type_struct_get@@Base+0x1fc>
   11074:	ldr	r1, [pc, #292]	; 111a0 <dbus_g_type_struct_get@@Base+0x264>
   11078:	ldr	r2, [pc, #292]	; 111a4 <dbus_g_type_struct_get@@Base+0x268>
   1107c:	add	r1, pc, r1
   11080:	add	r2, pc, r2
   11084:	add	r1, r1, #848	; 0x350
   11088:	bl	b6d4 <g_return_if_fail_warning@plt>
   1108c:	mov	r0, r5
   11090:	ldr	r2, [sp, #116]	; 0x74
   11094:	ldr	r3, [sl]
   11098:	cmp	r2, r3
   1109c:	bne	11194 <dbus_g_type_struct_get@@Base+0x258>
   110a0:	add	sp, sp, #120	; 0x78
   110a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110a8:	add	sp, sp, #12
   110ac:	bx	lr
   110b0:	ldr	r0, [ip]
   110b4:	add	ip, ip, #4
   110b8:	str	r0, [fp, r2]
   110bc:	ldrb	r4, [r6, r1]
   110c0:	add	r2, r2, #8
   110c4:	cmp	r4, #0
   110c8:	bne	11028 <dbus_g_type_struct_get@@Base+0xec>
   110cc:	ldr	r5, [r3, #28]
   110d0:	mov	r0, r7
   110d4:	mov	r2, fp
   110d8:	mov	r3, r4
   110dc:	str	ip, [sp, #20]
   110e0:	blx	r5
   110e4:	subs	r5, r0, #0
   110e8:	bne	11158 <dbus_g_type_struct_get@@Base+0x21c>
   110ec:	mov	r0, r7
   110f0:	bl	b284 <g_value_unset@plt>
   110f4:	ldr	r3, [sp, #20]
   110f8:	add	r2, r3, #4
   110fc:	str	r2, [sp, #20]
   11100:	ldr	r4, [r3]
   11104:	cmn	r4, #1
   11108:	beq	11150 <dbus_g_type_struct_get@@Base+0x214>
   1110c:	cmp	r9, r4
   11110:	bhi	10fc0 <dbus_g_type_struct_get@@Base+0x84>
   11114:	mov	r0, #0
   11118:	b	11090 <dbus_g_type_struct_get@@Base+0x154>
   1111c:	add	ip, ip, #7
   11120:	add	r0, fp, r2
   11124:	bic	ip, ip, #7
   11128:	vldr	d7, [ip]
   1112c:	add	ip, ip, #8
   11130:	vstr	d7, [r0]
   11134:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   11138:	add	ip, ip, #7
   1113c:	bic	r0, ip, #7
   11140:	add	ip, r0, #8
   11144:	ldrd	r4, [r0]
   11148:	strd	r4, [fp, r2]
   1114c:	b	110bc <dbus_g_type_struct_get@@Base+0x180>
   11150:	mov	r0, #1
   11154:	b	11090 <dbus_g_type_struct_get@@Base+0x154>
   11158:	ldr	r3, [pc, #72]	; 111a8 <dbus_g_type_struct_get@@Base+0x26c>
   1115c:	mov	r1, #16
   11160:	ldr	r2, [pc, #68]	; 111ac <dbus_g_type_struct_get@@Base+0x270>
   11164:	mov	r0, r4
   11168:	add	r3, pc, r3
   1116c:	str	r5, [sp]
   11170:	add	r3, r3, #848	; 0x350
   11174:	add	r2, pc, r2
   11178:	bl	ba58 <g_log@plt>
   1117c:	mov	r0, r5
   11180:	bl	b248 <g_free@plt>
   11184:	mov	r0, r7
   11188:	bl	b284 <g_value_unset@plt>
   1118c:	mov	r0, #0
   11190:	b	11090 <dbus_g_type_struct_get@@Base+0x154>
   11194:	bl	b824 <__stack_chk_fail@plt>
   11198:	andeq	r1, r1, ip, lsr #1
   1119c:	strdeq	r0, [r0], -r8
   111a0:	andeq	r6, r0, ip, lsl pc
   111a4:	strdeq	r7, [r0], -r0
   111a8:	andeq	r6, r0, r0, lsr lr
   111ac:	strdeq	r7, [r0], -r4

000111b0 <dbus_g_type_struct_set@@Base>:
   111b0:	push	{r1, r2, r3}
   111b4:	ldr	r3, [pc, #688]	; 1146c <dbus_g_type_struct_set@@Base+0x2bc>
   111b8:	ldr	r2, [pc, #688]	; 11470 <dbus_g_type_struct_set@@Base+0x2c0>
   111bc:	add	r3, pc, r3
   111c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111c4:	sub	sp, sp, #136	; 0x88
   111c8:	ldr	r2, [r3, r2]
   111cc:	mov	sl, r0
   111d0:	ldr	r0, [r0]
   111d4:	mov	r9, #0
   111d8:	ldr	r7, [sp, #172]	; 0xac
   111dc:	ldr	r3, [r2]
   111e0:	str	r2, [sp, #28]
   111e4:	str	r9, [sp, #40]	; 0x28
   111e8:	str	r9, [sp, #44]	; 0x2c
   111ec:	str	r9, [sp, #48]	; 0x30
   111f0:	str	r9, [sp, #52]	; 0x34
   111f4:	str	r3, [sp, #132]	; 0x84
   111f8:	str	r9, [sp, #56]	; 0x38
   111fc:	str	r9, [sp, #60]	; 0x3c
   11200:	bl	10390 <dbus_g_type_is_struct@@Base>
   11204:	subs	r4, r0, #0
   11208:	beq	11328 <dbus_g_type_struct_set@@Base+0x178>
   1120c:	ldr	r0, [sl]
   11210:	add	r3, sp, #176	; 0xb0
   11214:	str	r3, [sp, #36]	; 0x24
   11218:	bl	10554 <dbus_g_type_get_struct_size@@Base>
   1121c:	cmn	r7, #1
   11220:	str	r0, [sp, #8]
   11224:	beq	11420 <dbus_g_type_struct_set@@Base+0x270>
   11228:	cmp	r0, r7
   1122c:	bls	113e4 <dbus_g_type_struct_set@@Base+0x234>
   11230:	add	r8, sp, #40	; 0x28
   11234:	add	r6, sp, #64	; 0x40
   11238:	add	r2, sp, #48	; 0x30
   1123c:	add	r3, sp, #52	; 0x34
   11240:	str	r2, [sp, #12]
   11244:	add	r1, sp, #56	; 0x38
   11248:	add	r2, sp, #60	; 0x3c
   1124c:	str	r3, [sp, #16]
   11250:	str	r1, [sp, #20]
   11254:	str	r2, [sp, #24]
   11258:	mov	r1, r7
   1125c:	ldr	r0, [sl]
   11260:	bl	10504 <dbus_g_type_get_struct_member_type@@Base>
   11264:	mov	r1, r0
   11268:	mov	r0, r8
   1126c:	bl	b8cc <g_value_init@plt>
   11270:	ldr	r4, [sp, #40]	; 0x28
   11274:	mov	r0, r4
   11278:	bl	b2fc <g_type_value_table_peek@plt>
   1127c:	ldr	r3, [r0, #4]
   11280:	cmp	r3, #0
   11284:	beq	11290 <dbus_g_type_struct_set@@Base+0xe0>
   11288:	mov	r0, r8
   1128c:	blx	r3
   11290:	mov	r0, r4
   11294:	str	r9, [sp, #48]	; 0x30
   11298:	str	r9, [sp, #52]	; 0x34
   1129c:	str	r9, [sp, #56]	; 0x38
   112a0:	str	r9, [sp, #60]	; 0x3c
   112a4:	bl	b2fc <g_type_value_table_peek@plt>
   112a8:	mov	r2, #64	; 0x40
   112ac:	mov	r1, #0
   112b0:	mov	fp, r0
   112b4:	mov	r0, r6
   112b8:	ldr	r5, [fp, #16]
   112bc:	bl	b47c <memset@plt>
   112c0:	mov	r2, #0
   112c4:	str	r4, [sp, #40]	; 0x28
   112c8:	mov	r3, r2
   112cc:	ldr	ip, [sp, #36]	; 0x24
   112d0:	ldrb	r4, [r5, r3]
   112d4:	cmp	r4, #0
   112d8:	beq	11384 <dbus_g_type_struct_set@@Base+0x1d4>
   112dc:	sub	r4, r4, #100	; 0x64
   112e0:	add	r3, r3, #1
   112e4:	cmp	r4, #13
   112e8:	addls	pc, pc, r4, lsl #2
   112ec:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   112f0:	b	113ec <dbus_g_type_struct_set@@Base+0x23c>
   112f4:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   112f8:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   112fc:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   11300:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   11304:	b	11368 <dbus_g_type_struct_set@@Base+0x1b8>
   11308:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   1130c:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   11310:	b	11368 <dbus_g_type_struct_set@@Base+0x1b8>
   11314:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   11318:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   1131c:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   11320:	b	11368 <dbus_g_type_struct_set@@Base+0x1b8>
   11324:	b	11408 <dbus_g_type_struct_set@@Base+0x258>
   11328:	ldr	r1, [pc, #324]	; 11474 <dbus_g_type_struct_set@@Base+0x2c4>
   1132c:	ldr	r2, [pc, #324]	; 11478 <dbus_g_type_struct_set@@Base+0x2c8>
   11330:	add	r1, pc, r1
   11334:	add	r2, pc, r2
   11338:	add	r1, r1, #872	; 0x368
   1133c:	bl	b6d4 <g_return_if_fail_warning@plt>
   11340:	mov	r0, r4
   11344:	ldr	r1, [sp, #28]
   11348:	ldr	r2, [sp, #132]	; 0x84
   1134c:	ldr	r3, [r1]
   11350:	cmp	r2, r3
   11354:	bne	11468 <dbus_g_type_struct_set@@Base+0x2b8>
   11358:	add	sp, sp, #136	; 0x88
   1135c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11360:	add	sp, sp, #12
   11364:	bx	lr
   11368:	ldr	r1, [ip]
   1136c:	add	ip, ip, #4
   11370:	str	r1, [r6, r2]
   11374:	ldrb	r4, [r5, r3]
   11378:	add	r2, r2, #8
   1137c:	cmp	r4, #0
   11380:	bne	112dc <dbus_g_type_struct_set@@Base+0x12c>
   11384:	mov	r1, r3
   11388:	ldr	r5, [fp, #20]
   1138c:	mov	r0, r8
   11390:	mov	r2, r6
   11394:	mov	r3, r4
   11398:	str	ip, [sp, #36]	; 0x24
   1139c:	blx	r5
   113a0:	cmp	r0, #0
   113a4:	bne	11428 <dbus_g_type_struct_set@@Base+0x278>
   113a8:	mov	r1, r7
   113ac:	mov	r2, r8
   113b0:	mov	r0, sl
   113b4:	bl	10e60 <dbus_g_type_struct_set_member@@Base>
   113b8:	mov	r0, r8
   113bc:	bl	b284 <g_value_unset@plt>
   113c0:	ldr	r3, [sp, #36]	; 0x24
   113c4:	add	r2, r3, #4
   113c8:	str	r2, [sp, #36]	; 0x24
   113cc:	ldr	r7, [r3]
   113d0:	cmn	r7, #1
   113d4:	beq	11420 <dbus_g_type_struct_set@@Base+0x270>
   113d8:	ldr	r1, [sp, #8]
   113dc:	cmp	r1, r7
   113e0:	bhi	11258 <dbus_g_type_struct_set@@Base+0xa8>
   113e4:	mov	r0, #0
   113e8:	b	11344 <dbus_g_type_struct_set@@Base+0x194>
   113ec:	add	ip, ip, #7
   113f0:	add	lr, r6, r2
   113f4:	bic	ip, ip, #7
   113f8:	add	ip, ip, #8
   113fc:	ldrd	r0, [ip, #-8]
   11400:	strd	r0, [lr]
   11404:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   11408:	add	ip, ip, #7
   1140c:	bic	r1, ip, #7
   11410:	add	ip, r1, #8
   11414:	ldrd	r0, [r1]
   11418:	strd	r0, [r6, r2]
   1141c:	b	11374 <dbus_g_type_struct_set@@Base+0x1c4>
   11420:	mov	r0, #1
   11424:	b	11344 <dbus_g_type_struct_set@@Base+0x194>
   11428:	ldr	r3, [pc, #76]	; 1147c <dbus_g_type_struct_set@@Base+0x2cc>
   1142c:	mov	r5, r0
   11430:	ldr	r2, [pc, #72]	; 11480 <dbus_g_type_struct_set@@Base+0x2d0>
   11434:	mov	r1, #16
   11438:	add	r3, pc, r3
   1143c:	mov	r0, r4
   11440:	add	r3, r3, #872	; 0x368
   11444:	add	r2, pc, r2
   11448:	str	r5, [sp]
   1144c:	bl	ba58 <g_log@plt>
   11450:	mov	r0, r5
   11454:	bl	b248 <g_free@plt>
   11458:	mov	r0, r8
   1145c:	bl	b284 <g_value_unset@plt>
   11460:	mov	r0, #0
   11464:	b	11344 <dbus_g_type_struct_set@@Base+0x194>
   11468:	bl	b824 <__stack_chk_fail@plt>
   1146c:	andeq	r0, r1, ip, lsr lr
   11470:	strdeq	r0, [r0], -r8
   11474:	andeq	r6, r0, r8, ror #24
   11478:	andeq	r7, r0, ip, lsr r3
   1147c:	andeq	r6, r0, r0, ror #22
   11480:	andeq	r7, r0, r4, lsr #4

00011484 <dbus_g_value_build_g_variant@@Base>:
   11484:	ldr	r3, [pc, #1008]	; 1187c <dbus_g_value_build_g_variant@@Base+0x3f8>
   11488:	ldr	r2, [pc, #1008]	; 11880 <dbus_g_value_build_g_variant@@Base+0x3fc>
   1148c:	add	r3, pc, r3
   11490:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11494:	sub	sp, sp, #76	; 0x4c
   11498:	ldr	r2, [r3, r2]
   1149c:	mov	r5, r0
   114a0:	ldr	r3, [r2]
   114a4:	str	r2, [sp, #16]
   114a8:	str	r3, [sp, #68]	; 0x44
   114ac:	bl	b9f8 <g_type_check_value@plt>
   114b0:	subs	r4, r0, #0
   114b4:	beq	115fc <dbus_g_value_build_g_variant@@Base+0x178>
   114b8:	ldr	r4, [r5]
   114bc:	mov	r0, r4
   114c0:	bl	10274 <dbus_g_type_is_collection@@Base>
   114c4:	subs	r8, r0, #0
   114c8:	beq	1153c <dbus_g_value_build_g_variant@@Base+0xb8>
   114cc:	bl	b9c8 <g_ptr_array_new@plt>
   114d0:	ldr	r1, [pc, #940]	; 11884 <dbus_g_value_build_g_variant@@Base+0x400>
   114d4:	add	r1, pc, r1
   114d8:	mov	r6, r0
   114dc:	mov	r0, r5
   114e0:	mov	r2, r6
   114e4:	bl	109c8 <dbus_g_type_collection_value_iterate@@Base>
   114e8:	ldr	r2, [r6, #4]
   114ec:	cmp	r2, #0
   114f0:	movne	r4, #0
   114f4:	beq	116a0 <dbus_g_value_build_g_variant@@Base+0x21c>
   114f8:	ldr	r1, [r6]
   114fc:	mov	r0, r4
   11500:	bl	b5e4 <g_variant_new_array@plt>
   11504:	mov	r1, #1
   11508:	mov	r5, r0
   1150c:	mov	r0, r6
   11510:	bl	b62c <g_ptr_array_free@plt>
   11514:	mov	r0, r4
   11518:	bl	b6f8 <g_variant_type_free@plt>
   1151c:	mov	r0, r5
   11520:	ldr	r1, [sp, #16]
   11524:	ldr	r2, [sp, #68]	; 0x44
   11528:	ldr	r3, [r1]
   1152c:	cmp	r2, r3
   11530:	bne	117c0 <dbus_g_value_build_g_variant@@Base+0x33c>
   11534:	add	sp, sp, #76	; 0x4c
   11538:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1153c:	mov	r0, r4
   11540:	bl	10300 <dbus_g_type_is_map@@Base>
   11544:	subs	r7, r0, #0
   11548:	bne	1161c <dbus_g_value_build_g_variant@@Base+0x198>
   1154c:	mov	r0, r4
   11550:	bl	10390 <dbus_g_type_is_struct@@Base>
   11554:	cmp	r0, #0
   11558:	bne	116b8 <dbus_g_value_build_g_variant@@Base+0x234>
   1155c:	cmp	r4, #20
   11560:	beq	117d4 <dbus_g_value_build_g_variant@@Base+0x350>
   11564:	cmp	r4, #16
   11568:	beq	117c4 <dbus_g_value_build_g_variant@@Base+0x340>
   1156c:	cmp	r4, #24
   11570:	beq	117b0 <dbus_g_value_build_g_variant@@Base+0x32c>
   11574:	cmp	r4, #28
   11578:	beq	1186c <dbus_g_value_build_g_variant@@Base+0x3e8>
   1157c:	cmp	r4, #40	; 0x28
   11580:	beq	1185c <dbus_g_value_build_g_variant@@Base+0x3d8>
   11584:	cmp	r4, #44	; 0x2c
   11588:	beq	1184c <dbus_g_value_build_g_variant@@Base+0x3c8>
   1158c:	cmp	r4, #60	; 0x3c
   11590:	beq	1183c <dbus_g_value_build_g_variant@@Base+0x3b8>
   11594:	cmp	r4, #64	; 0x40
   11598:	beq	1182c <dbus_g_value_build_g_variant@@Base+0x3a8>
   1159c:	bl	b7e8 <g_strv_get_type@plt>
   115a0:	cmp	r4, r0
   115a4:	beq	11818 <dbus_g_value_build_g_variant@@Base+0x394>
   115a8:	bl	b764 <dbus_g_object_path_get_g_type@plt>
   115ac:	cmp	r4, r0
   115b0:	beq	11808 <dbus_g_value_build_g_variant@@Base+0x384>
   115b4:	bl	baa0 <dbus_g_signature_get_g_type@plt>
   115b8:	cmp	r4, r0
   115bc:	beq	117f8 <dbus_g_value_build_g_variant@@Base+0x374>
   115c0:	bl	b554 <g_value_get_type@plt>
   115c4:	cmp	r4, r0
   115c8:	beq	117e4 <dbus_g_value_build_g_variant@@Base+0x360>
   115cc:	mov	r0, r4
   115d0:	bl	b7c4 <g_type_name@plt>
   115d4:	ldr	r3, [pc, #684]	; 11888 <dbus_g_value_build_g_variant@@Base+0x404>
   115d8:	ldr	r2, [pc, #684]	; 1188c <dbus_g_value_build_g_variant@@Base+0x408>
   115dc:	mov	r1, #4
   115e0:	add	r3, pc, r3
   115e4:	add	r2, pc, r2
   115e8:	add	r3, r3, #896	; 0x380
   115ec:	str	r0, [sp]
   115f0:	mov	r0, #0
   115f4:	bl	ba58 <g_log@plt>
   115f8:	b	115f8 <dbus_g_value_build_g_variant@@Base+0x174>
   115fc:	ldr	r1, [pc, #652]	; 11890 <dbus_g_value_build_g_variant@@Base+0x40c>
   11600:	ldr	r2, [pc, #652]	; 11894 <dbus_g_value_build_g_variant@@Base+0x410>
   11604:	add	r1, pc, r1
   11608:	add	r2, pc, r2
   1160c:	add	r1, r1, #896	; 0x380
   11610:	bl	b6d4 <g_return_if_fail_warning@plt>
   11614:	mov	r0, r4
   11618:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   1161c:	bl	b9c8 <g_ptr_array_new@plt>
   11620:	ldr	r1, [pc, #624]	; 11898 <dbus_g_value_build_g_variant@@Base+0x414>
   11624:	add	r1, pc, r1
   11628:	mov	r6, r0
   1162c:	mov	r0, r5
   11630:	mov	r2, r6
   11634:	bl	10cb0 <dbus_g_type_map_value_iterate@@Base>
   11638:	ldr	r2, [r6, #4]
   1163c:	cmp	r2, #0
   11640:	movne	r4, r8
   11644:	bne	114f8 <dbus_g_value_build_g_variant@@Base+0x74>
   11648:	mov	r0, r4
   1164c:	bl	1046c <dbus_g_type_get_map_key_specialization@@Base>
   11650:	mov	r5, r0
   11654:	mov	r0, r4
   11658:	bl	104b8 <dbus_g_type_get_map_value_specialization@@Base>
   1165c:	mov	r4, r0
   11660:	mov	r0, r5
   11664:	bl	105a8 <dbus_g_type_get_struct_size@@Base+0x54>
   11668:	mov	r5, r0
   1166c:	mov	r0, r4
   11670:	bl	105a8 <dbus_g_type_get_struct_size@@Base+0x54>
   11674:	mov	r7, r0
   11678:	mov	r0, r5
   1167c:	mov	r1, r7
   11680:	bl	b374 <g_variant_type_new_dict_entry@plt>
   11684:	mov	r4, r0
   11688:	mov	r0, r5
   1168c:	bl	b6f8 <g_variant_type_free@plt>
   11690:	mov	r0, r7
   11694:	bl	b6f8 <g_variant_type_free@plt>
   11698:	ldr	r2, [r6, #4]
   1169c:	b	114f8 <dbus_g_value_build_g_variant@@Base+0x74>
   116a0:	mov	r0, r4
   116a4:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   116a8:	bl	105a8 <dbus_g_type_get_struct_size@@Base+0x54>
   116ac:	ldr	r2, [r6, #4]
   116b0:	mov	r4, r0
   116b4:	b	114f8 <dbus_g_value_build_g_variant@@Base+0x74>
   116b8:	mov	r0, r4
   116bc:	bl	10554 <dbus_g_type_get_struct_size@@Base>
   116c0:	mov	r1, #4
   116c4:	mov	r9, r0
   116c8:	bl	b560 <g_malloc0_n@plt>
   116cc:	cmp	r9, #0
   116d0:	mov	sl, r0
   116d4:	beq	11790 <dbus_g_value_build_g_variant@@Base+0x30c>
   116d8:	add	r3, sp, #40	; 0x28
   116dc:	sub	fp, r0, #4
   116e0:	add	ip, sp, #44	; 0x2c
   116e4:	mov	sl, r9
   116e8:	mov	r6, r7
   116ec:	mov	r9, r4
   116f0:	mov	r8, r3
   116f4:	mov	r4, r3
   116f8:	add	r1, sp, #48	; 0x30
   116fc:	add	r2, sp, #52	; 0x34
   11700:	str	r1, [sp, #28]
   11704:	add	r1, sp, #56	; 0x38
   11708:	str	r2, [sp, #32]
   1170c:	add	r2, sp, #60	; 0x3c
   11710:	str	r1, [sp, #20]
   11714:	str	r2, [sp, #24]
   11718:	str	r0, [sp, #36]	; 0x24
   1171c:	mov	r1, r7
   11720:	mov	r0, r9
   11724:	str	r6, [ip]
   11728:	str	r6, [r4]
   1172c:	mov	r4, r8
   11730:	str	ip, [sp, #12]
   11734:	str	r6, [sp, #48]	; 0x30
   11738:	str	r6, [sp, #52]	; 0x34
   1173c:	str	r6, [sp, #56]	; 0x38
   11740:	str	r6, [sp, #60]	; 0x3c
   11744:	bl	10504 <dbus_g_type_get_struct_member_type@@Base>
   11748:	mov	r1, r0
   1174c:	mov	r0, r8
   11750:	bl	b8cc <g_value_init@plt>
   11754:	mov	r1, r7
   11758:	mov	r2, r8
   1175c:	mov	r0, r5
   11760:	bl	10d84 <dbus_g_type_struct_get_member@@Base>
   11764:	mov	r0, r8
   11768:	bl	11484 <dbus_g_value_build_g_variant@@Base>
   1176c:	add	r7, r7, #1
   11770:	str	r0, [fp, #4]!
   11774:	mov	r0, r8
   11778:	bl	b284 <g_value_unset@plt>
   1177c:	cmp	r7, sl
   11780:	ldr	ip, [sp, #12]
   11784:	bne	1171c <dbus_g_value_build_g_variant@@Base+0x298>
   11788:	mov	r9, sl
   1178c:	ldr	sl, [sp, #36]	; 0x24
   11790:	mov	r1, r9
   11794:	mov	r0, sl
   11798:	bl	b830 <g_variant_new_tuple@plt>
   1179c:	mov	r4, r0
   117a0:	mov	r0, sl
   117a4:	bl	b248 <g_free@plt>
   117a8:	mov	r0, r4
   117ac:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   117b0:	mov	r0, r5
   117b4:	bl	b9d4 <g_value_get_int@plt>
   117b8:	bl	b59c <g_variant_new_int32@plt>
   117bc:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   117c0:	bl	b824 <__stack_chk_fail@plt>
   117c4:	mov	r0, r5
   117c8:	bl	b980 <g_value_get_uchar@plt>
   117cc:	bl	b86c <g_variant_new_byte@plt>
   117d0:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   117d4:	mov	r0, r5
   117d8:	bl	b53c <g_value_get_boolean@plt>
   117dc:	bl	b3bc <g_variant_new_boolean@plt>
   117e0:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   117e4:	mov	r0, r5
   117e8:	bl	b2a8 <g_value_get_boxed@plt>
   117ec:	bl	11484 <dbus_g_value_build_g_variant@@Base>
   117f0:	bl	b740 <g_variant_new_variant@plt>
   117f4:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   117f8:	mov	r0, r5
   117fc:	bl	b2a8 <g_value_get_boxed@plt>
   11800:	bl	b368 <g_variant_new_signature@plt>
   11804:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   11808:	mov	r0, r5
   1180c:	bl	b2a8 <g_value_get_boxed@plt>
   11810:	bl	b7a0 <g_variant_new_object_path@plt>
   11814:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   11818:	mov	r0, r5
   1181c:	bl	b2a8 <g_value_get_boxed@plt>
   11820:	mvn	r1, #0
   11824:	bl	b4f4 <g_variant_new_strv@plt>
   11828:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   1182c:	mov	r0, r5
   11830:	bl	b344 <g_value_get_string@plt>
   11834:	bl	b5b4 <g_variant_new_string@plt>
   11838:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   1183c:	mov	r0, r5
   11840:	bl	b3d4 <g_value_get_double@plt>
   11844:	bl	b338 <g_variant_new_double@plt>
   11848:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   1184c:	mov	r0, r5
   11850:	bl	b71c <g_value_get_uint64@plt>
   11854:	bl	b7d0 <g_variant_new_uint64@plt>
   11858:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   1185c:	mov	r0, r5
   11860:	bl	b9ec <g_value_get_int64@plt>
   11864:	bl	b950 <g_variant_new_int64@plt>
   11868:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   1186c:	mov	r0, r5
   11870:	bl	b464 <g_value_get_uint@plt>
   11874:	bl	b974 <g_variant_new_uint32@plt>
   11878:	b	11520 <dbus_g_value_build_g_variant@@Base+0x9c>
   1187c:	andeq	r0, r1, ip, ror #22
   11880:	strdeq	r0, [r0], -r8
   11884:	strdeq	r0, [r0], -r8
   11888:			; <UNDEFINED> instruction: 0x000069b8
   1188c:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   11890:	muleq	r0, r4, r9
   11894:	muleq	r0, r8, r0
   11898:	andeq	r0, r0, r0, ror r2
   1189c:	push	{r4, r5, r6, lr}
   118a0:	mov	r5, r1
   118a4:	mov	r4, r2
   118a8:	bl	11484 <dbus_g_value_build_g_variant@@Base>
   118ac:	mov	r6, r0
   118b0:	mov	r0, r5
   118b4:	bl	11484 <dbus_g_value_build_g_variant@@Base>
   118b8:	mov	r1, r0
   118bc:	mov	r0, r6
   118c0:	bl	b4e8 <g_variant_new_dict_entry@plt>
   118c4:	mov	r1, r0
   118c8:	mov	r0, r4
   118cc:	pop	{r4, r5, r6, lr}
   118d0:	b	b548 <g_ptr_array_add@plt>
   118d4:	push	{r4, lr}
   118d8:	mov	r4, r1
   118dc:	bl	11484 <dbus_g_value_build_g_variant@@Base>
   118e0:	mov	r1, r0
   118e4:	mov	r0, r4
   118e8:	pop	{r4, lr}
   118ec:	b	b548 <g_ptr_array_add@plt>
   118f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   118f4:	sub	sp, sp, #12
   118f8:	mov	sl, r0
   118fc:	bl	b674 <strlen@plt>
   11900:	ldrb	r3, [sl, #1]
   11904:	cmp	r3, #0
   11908:	mov	r5, r0
   1190c:	bne	11920 <dbus_g_value_build_g_variant@@Base+0x49c>
   11910:	mov	r0, #4
   11914:	add	sp, sp, #12
   11918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1191c:	b	b8b4 <g_malloc0@plt>
   11920:	cmp	r0, #0
   11924:	ble	11a10 <dbus_g_value_build_g_variant@@Base+0x58c>
   11928:	mov	r3, #0
   1192c:	mov	r7, r3
   11930:	ldrb	r2, [sl, r3]
   11934:	add	r3, r3, #1
   11938:	cmp	r2, #47	; 0x2f
   1193c:	addeq	r7, r7, #1
   11940:	cmp	r5, r3
   11944:	bne	11930 <dbus_g_value_build_g_variant@@Base+0x4ac>
   11948:	rsbs	fp, r7, #1
   1194c:	add	r0, r7, #1
   11950:	movcc	fp, #0
   11954:	mov	r1, #4
   11958:	bl	b560 <g_malloc0_n@plt>
   1195c:	cmp	r7, #0
   11960:	str	r0, [sp, #4]
   11964:	beq	119f4 <dbus_g_value_build_g_variant@@Base+0x570>
   11968:	mov	r6, #0
   1196c:	sub	r9, r0, #4
   11970:	mov	r8, r6
   11974:	ldrb	r3, [sl, fp]
   11978:	add	r0, sl, fp
   1197c:	cmp	r3, #47	; 0x2f
   11980:	addeq	fp, fp, #1
   11984:	addeq	r0, sl, fp
   11988:	cmp	fp, r5
   1198c:	bge	11a00 <dbus_g_value_build_g_variant@@Base+0x57c>
   11990:	ldrb	r3, [r0]
   11994:	cmp	r3, #47	; 0x2f
   11998:	beq	11a00 <dbus_g_value_build_g_variant@@Base+0x57c>
   1199c:	mov	r3, r0
   119a0:	mov	r4, fp
   119a4:	b	119b4 <dbus_g_value_build_g_variant@@Base+0x530>
   119a8:	ldrb	r2, [r3, #1]!
   119ac:	cmp	r2, #47	; 0x2f
   119b0:	beq	119e8 <dbus_g_value_build_g_variant@@Base+0x564>
   119b4:	add	r4, r4, #1
   119b8:	cmp	r5, r4
   119bc:	bne	119a8 <dbus_g_value_build_g_variant@@Base+0x524>
   119c0:	rsb	fp, fp, r5
   119c4:	add	r1, fp, #1
   119c8:	bl	b50c <g_strndup@plt>
   119cc:	add	r6, r6, #1
   119d0:	cmp	r6, r7
   119d4:	str	r0, [r9, #4]!
   119d8:	strb	r8, [r0, fp]
   119dc:	beq	119f4 <dbus_g_value_build_g_variant@@Base+0x570>
   119e0:	mov	fp, r4
   119e4:	b	11974 <dbus_g_value_build_g_variant@@Base+0x4f0>
   119e8:	rsb	fp, fp, r4
   119ec:	add	r1, fp, #1
   119f0:	b	119c8 <dbus_g_value_build_g_variant@@Base+0x544>
   119f4:	ldr	r0, [sp, #4]
   119f8:	add	sp, sp, #12
   119fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a00:	mov	r4, fp
   11a04:	mov	r1, #1
   11a08:	mov	fp, #0
   11a0c:	b	119c8 <dbus_g_value_build_g_variant@@Base+0x544>
   11a10:	mov	fp, #1
   11a14:	mov	r7, #0
   11a18:	mov	r0, fp
   11a1c:	b	11954 <dbus_g_value_build_g_variant@@Base+0x4d0>
   11a20:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11a24:	mov	r5, r0
   11a28:	mov	r0, #0
   11a2c:	bl	b4d0 <g_string_new@plt>
   11a30:	ldrb	r2, [r5]
   11a34:	ldr	r3, [pc, #332]	; 11b88 <dbus_g_value_build_g_variant@@Base+0x704>
   11a38:	cmp	r2, #0
   11a3c:	add	r3, pc, r3
   11a40:	mov	r4, r0
   11a44:	beq	11b3c <dbus_g_value_build_g_variant@@Base+0x6b8>
   11a48:	ldr	r1, [pc, #316]	; 11b8c <dbus_g_value_build_g_variant@@Base+0x708>
   11a4c:	add	r5, r5, #1
   11a50:	mov	r7, #0
   11a54:	mov	r8, #95	; 0x5f
   11a58:	ldr	r3, [r3, r1]
   11a5c:	ldr	r6, [r3]
   11a60:	b	11ae0 <dbus_g_value_build_g_variant@@Base+0x65c>
   11a64:	cmp	r3, #1
   11a68:	bls	11a80 <dbus_g_value_build_g_variant@@Base+0x5fc>
   11a6c:	ldr	r2, [r4]
   11a70:	add	r2, r2, r3
   11a74:	ldrb	r2, [r2, #-2]
   11a78:	cmp	r2, #95	; 0x5f
   11a7c:	beq	11b04 <dbus_g_value_build_g_variant@@Base+0x680>
   11a80:	ldr	r1, [r4, #8]
   11a84:	add	r2, r3, #1
   11a88:	cmp	r2, r1
   11a8c:	bcs	11b70 <dbus_g_value_build_g_variant@@Base+0x6ec>
   11a90:	ldr	r1, [r4]
   11a94:	str	r2, [r4, #4]
   11a98:	strb	r8, [r1, r3]
   11a9c:	ldm	r4, {r2, r3}
   11aa0:	strb	r7, [r2, r3]
   11aa4:	ldr	r9, [r4, #4]
   11aa8:	ldrb	r0, [r5, #-1]
   11aac:	bl	b848 <g_ascii_tolower@plt>
   11ab0:	ldr	r3, [r4, #8]
   11ab4:	add	r1, r9, #1
   11ab8:	cmp	r1, r3
   11abc:	bcs	11b4c <dbus_g_value_build_g_variant@@Base+0x6c8>
   11ac0:	ldr	r3, [r4]
   11ac4:	str	r1, [r4, #4]
   11ac8:	strb	r0, [r3, r9]
   11acc:	ldm	r4, {r2, r3}
   11ad0:	strb	r7, [r2, r3]
   11ad4:	ldrb	r2, [r5], #1
   11ad8:	cmp	r2, #0
   11adc:	beq	11b3c <dbus_g_value_build_g_variant@@Base+0x6b8>
   11ae0:	lsl	r3, r2, #1
   11ae4:	ldrh	r3, [r6, r3]
   11ae8:	and	r3, r3, #512	; 0x200
   11aec:	uxth	r3, r3
   11af0:	cmp	r3, #0
   11af4:	beq	11b0c <dbus_g_value_build_g_variant@@Base+0x688>
   11af8:	ldr	r3, [r4, #4]
   11afc:	cmp	r3, #0
   11b00:	bne	11a64 <dbus_g_value_build_g_variant@@Base+0x5e0>
   11b04:	mov	r9, r3
   11b08:	b	11aa8 <dbus_g_value_build_g_variant@@Base+0x624>
   11b0c:	ldmib	r4, {r1, ip}
   11b10:	add	r0, r1, #1
   11b14:	cmp	r0, ip
   11b18:	bcs	11b60 <dbus_g_value_build_g_variant@@Base+0x6dc>
   11b1c:	ldr	ip, [r4]
   11b20:	str	r0, [r4, #4]
   11b24:	strb	r2, [ip, r1]
   11b28:	ldm	r4, {r1, r2}
   11b2c:	strb	r3, [r1, r2]
   11b30:	ldrb	r2, [r5], #1
   11b34:	cmp	r2, #0
   11b38:	bne	11ae0 <dbus_g_value_build_g_variant@@Base+0x65c>
   11b3c:	mov	r0, r4
   11b40:	mov	r1, #0
   11b44:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   11b48:	b	b608 <g_string_free@plt>
   11b4c:	mov	r2, r0
   11b50:	mvn	r1, #0
   11b54:	mov	r0, r4
   11b58:	bl	b8e4 <g_string_insert_c@plt>
   11b5c:	b	11ad4 <dbus_g_value_build_g_variant@@Base+0x650>
   11b60:	mov	r0, r4
   11b64:	mvn	r1, #0
   11b68:	bl	b8e4 <g_string_insert_c@plt>
   11b6c:	b	11ad4 <dbus_g_value_build_g_variant@@Base+0x650>
   11b70:	mov	r0, r4
   11b74:	mvn	r1, #0
   11b78:	mov	r2, #95	; 0x5f
   11b7c:	bl	b8e4 <g_string_insert_c@plt>
   11b80:	ldr	r9, [r4, #4]
   11b84:	b	11aa8 <dbus_g_value_build_g_variant@@Base+0x624>
   11b88:			; <UNDEFINED> instruction: 0x000105bc
   11b8c:	strdeq	r0, [r0], -ip
   11b90:	sub	r0, r0, #98	; 0x62
   11b94:	cmp	r0, #23
   11b98:	bhi	11bac <dbus_g_value_build_g_variant@@Base+0x728>
   11b9c:	ldr	r3, [pc, #16]	; 11bb4 <dbus_g_value_build_g_variant@@Base+0x730>
   11ba0:	add	r3, pc, r3
   11ba4:	ldr	r0, [r3, r0, lsl #2]
   11ba8:	bx	lr
   11bac:	mov	r0, #0
   11bb0:	bx	lr
   11bb4:	andeq	r6, r0, r8, lsl fp
   11bb8:	ldr	r3, [pc, #680]	; 11e68 <dbus_g_value_build_g_variant@@Base+0x9e4>
   11bbc:	ldr	r2, [pc, #680]	; 11e6c <dbus_g_value_build_g_variant@@Base+0x9e8>
   11bc0:	add	r3, pc, r3
   11bc4:	push	{r4, r5, r6, r7, r8, lr}
   11bc8:	sub	sp, sp, #48	; 0x30
   11bcc:	ldr	r5, [r3, r2]
   11bd0:	mov	r6, r1
   11bd4:	mov	r7, r0
   11bd8:	ldr	r3, [r5]
   11bdc:	str	r3, [sp, #44]	; 0x2c
   11be0:	bl	b878 <dbus_signature_iter_get_current_type@plt>
   11be4:	sub	r3, r0, #98	; 0x62
   11be8:	mov	r4, r0
   11bec:	cmp	r3, #23
   11bf0:	bhi	11c2c <dbus_g_value_build_g_variant@@Base+0x7a8>
   11bf4:	ldr	r2, [pc, #628]	; 11e70 <dbus_g_value_build_g_variant@@Base+0x9ec>
   11bf8:	add	r2, pc, r2
   11bfc:	ldr	r3, [r2, r3, lsl #2]
   11c00:	cmp	r3, #0
   11c04:	bne	11cec <dbus_g_value_build_g_variant@@Base+0x868>
   11c08:	cmp	r0, #111	; 0x6f
   11c0c:	bne	11c2c <dbus_g_value_build_g_variant@@Base+0x7a8>
   11c10:	ldr	r2, [sp, #44]	; 0x2c
   11c14:	ldr	r3, [r5]
   11c18:	cmp	r2, r3
   11c1c:	bne	11e64 <dbus_g_value_build_g_variant@@Base+0x9e0>
   11c20:	add	sp, sp, #48	; 0x30
   11c24:	pop	{r4, r5, r6, r7, r8, lr}
   11c28:	b	b764 <dbus_g_object_path_get_g_type@plt>
   11c2c:	cmp	r4, #103	; 0x67
   11c30:	beq	11d08 <dbus_g_value_build_g_variant@@Base+0x884>
   11c34:	cmp	r4, #118	; 0x76
   11c38:	beq	11cd0 <dbus_g_value_build_g_variant@@Base+0x84c>
   11c3c:	add	r8, sp, #4
   11c40:	mov	r0, r7
   11c44:	mov	r1, r8
   11c48:	bl	b7f4 <dbus_signature_iter_recurse@plt>
   11c4c:	cmp	r4, #97	; 0x61
   11c50:	beq	11d24 <dbus_g_value_build_g_variant@@Base+0x8a0>
   11c54:	cmp	r4, #114	; 0x72
   11c58:	mov	r0, #0
   11c5c:	bne	11cf0 <dbus_g_value_build_g_variant@@Base+0x86c>
   11c60:	mov	r2, #4
   11c64:	mov	r1, r0
   11c68:	bl	b428 <g_array_new@plt>
   11c6c:	add	r7, sp, #24
   11c70:	mov	r4, r0
   11c74:	mov	r1, r6
   11c78:	mov	r0, r8
   11c7c:	bl	11bb8 <dbus_g_value_build_g_variant@@Base+0x734>
   11c80:	mov	r1, r7
   11c84:	mov	r2, #1
   11c88:	str	r0, [sp, #24]
   11c8c:	mov	r0, r4
   11c90:	bl	ba34 <g_array_append_vals@plt>
   11c94:	mov	r0, r8
   11c98:	bl	b2d8 <dbus_signature_iter_next@plt>
   11c9c:	cmp	r0, #0
   11ca0:	bne	11c74 <dbus_g_value_build_g_variant@@Base+0x7f0>
   11ca4:	ldr	r0, [pc, #456]	; 11e74 <dbus_g_value_build_g_variant@@Base+0x9f0>
   11ca8:	ldr	r1, [r4, #4]
   11cac:	ldr	r2, [r4]
   11cb0:	add	r0, pc, r0
   11cb4:	bl	1019c <dbus_g_type_get_structv@@Base>
   11cb8:	mov	r1, #1
   11cbc:	mov	r6, r0
   11cc0:	mov	r0, r4
   11cc4:	bl	b488 <g_array_free@plt>
   11cc8:	mov	r0, r6
   11ccc:	b	11cf0 <dbus_g_value_build_g_variant@@Base+0x86c>
   11cd0:	ldr	r2, [sp, #44]	; 0x2c
   11cd4:	ldr	r3, [r5]
   11cd8:	cmp	r2, r3
   11cdc:	bne	11e64 <dbus_g_value_build_g_variant@@Base+0x9e0>
   11ce0:	add	sp, sp, #48	; 0x30
   11ce4:	pop	{r4, r5, r6, r7, r8, lr}
   11ce8:	b	b554 <g_value_get_type@plt>
   11cec:	bl	11b90 <dbus_g_value_build_g_variant@@Base+0x70c>
   11cf0:	ldr	r2, [sp, #44]	; 0x2c
   11cf4:	ldr	r3, [r5]
   11cf8:	cmp	r2, r3
   11cfc:	bne	11e64 <dbus_g_value_build_g_variant@@Base+0x9e0>
   11d00:	add	sp, sp, #48	; 0x30
   11d04:	pop	{r4, r5, r6, r7, r8, pc}
   11d08:	ldr	r2, [sp, #44]	; 0x2c
   11d0c:	ldr	r3, [r5]
   11d10:	cmp	r2, r3
   11d14:	bne	11e64 <dbus_g_value_build_g_variant@@Base+0x9e0>
   11d18:	add	sp, sp, #48	; 0x30
   11d1c:	pop	{r4, r5, r6, r7, r8, lr}
   11d20:	b	baa0 <dbus_g_signature_get_g_type@plt>
   11d24:	mov	r0, r8
   11d28:	bl	b878 <dbus_signature_iter_get_current_type@plt>
   11d2c:	cmp	r0, #101	; 0x65
   11d30:	beq	11da8 <dbus_g_value_build_g_variant@@Base+0x924>
   11d34:	mov	r0, r8
   11d38:	mov	r1, r6
   11d3c:	bl	11bb8 <dbus_g_value_build_g_variant@@Base+0x734>
   11d40:	subs	r4, r0, #0
   11d44:	beq	11da0 <dbus_g_value_build_g_variant@@Base+0x91c>
   11d48:	cmp	r4, #80	; 0x50
   11d4c:	beq	11e50 <dbus_g_value_build_g_variant@@Base+0x9cc>
   11d50:	cmp	r4, #64	; 0x40
   11d54:	beq	11e20 <dbus_g_value_build_g_variant@@Base+0x99c>
   11d58:	bl	1377c <dbus_g_value_build_g_variant@@Base+0x22f8>
   11d5c:	cmp	r0, #0
   11d60:	bne	11e3c <dbus_g_value_build_g_variant@@Base+0x9b8>
   11d64:	mov	r0, r4
   11d68:	mov	r1, #80	; 0x50
   11d6c:	bl	b470 <g_type_is_a@plt>
   11d70:	cmp	r0, #0
   11d74:	bne	11d8c <dbus_g_value_build_g_variant@@Base+0x908>
   11d78:	mov	r0, r4
   11d7c:	mov	r1, #72	; 0x48
   11d80:	bl	b470 <g_type_is_a@plt>
   11d84:	cmp	r0, #0
   11d88:	beq	11da0 <dbus_g_value_build_g_variant@@Base+0x91c>
   11d8c:	ldr	r0, [pc, #228]	; 11e78 <dbus_g_value_build_g_variant@@Base+0x9f4>
   11d90:	mov	r1, r4
   11d94:	add	r0, pc, r0
   11d98:	bl	10124 <dbus_g_type_get_collection@@Base>
   11d9c:	b	11cf0 <dbus_g_value_build_g_variant@@Base+0x86c>
   11da0:	mov	r0, #0
   11da4:	b	11cf0 <dbus_g_value_build_g_variant@@Base+0x86c>
   11da8:	add	r4, sp, #24
   11dac:	mov	r0, r8
   11db0:	mov	r1, r4
   11db4:	bl	b7f4 <dbus_signature_iter_recurse@plt>
   11db8:	mov	r0, r4
   11dbc:	mov	r1, r6
   11dc0:	bl	11bb8 <dbus_g_value_build_g_variant@@Base+0x734>
   11dc4:	subs	r7, r0, #0
   11dc8:	beq	11da0 <dbus_g_value_build_g_variant@@Base+0x91c>
   11dcc:	mov	r0, r4
   11dd0:	bl	b2d8 <dbus_signature_iter_next@plt>
   11dd4:	mov	r0, r4
   11dd8:	mov	r1, r6
   11ddc:	bl	11bb8 <dbus_g_value_build_g_variant@@Base+0x734>
   11de0:	subs	r4, r0, #0
   11de4:	beq	11da0 <dbus_g_value_build_g_variant@@Base+0x91c>
   11de8:	mov	r0, r7
   11dec:	bl	14004 <dbus_g_value_build_g_variant@@Base+0x2b80>
   11df0:	cmp	r0, #0
   11df4:	beq	11da0 <dbus_g_value_build_g_variant@@Base+0x91c>
   11df8:	mov	r0, r4
   11dfc:	bl	14050 <dbus_g_value_build_g_variant@@Base+0x2bcc>
   11e00:	cmp	r0, #0
   11e04:	beq	11da0 <dbus_g_value_build_g_variant@@Base+0x91c>
   11e08:	ldr	r0, [pc, #108]	; 11e7c <dbus_g_value_build_g_variant@@Base+0x9f8>
   11e0c:	mov	r1, r7
   11e10:	mov	r2, r4
   11e14:	add	r0, pc, r0
   11e18:	bl	10144 <dbus_g_type_get_map@@Base>
   11e1c:	b	11cf0 <dbus_g_value_build_g_variant@@Base+0x86c>
   11e20:	ldr	r2, [sp, #44]	; 0x2c
   11e24:	ldr	r3, [r5]
   11e28:	cmp	r2, r3
   11e2c:	bne	11e64 <dbus_g_value_build_g_variant@@Base+0x9e0>
   11e30:	add	sp, sp, #48	; 0x30
   11e34:	pop	{r4, r5, r6, r7, r8, lr}
   11e38:	b	b7e8 <g_strv_get_type@plt>
   11e3c:	ldr	r0, [pc, #60]	; 11e80 <dbus_g_value_build_g_variant@@Base+0x9fc>
   11e40:	mov	r1, r4
   11e44:	add	r0, pc, r0
   11e48:	bl	10124 <dbus_g_type_get_collection@@Base>
   11e4c:	b	11cf0 <dbus_g_value_build_g_variant@@Base+0x86c>
   11e50:	ldr	r0, [pc, #44]	; 11e84 <dbus_g_value_build_g_variant@@Base+0xa00>
   11e54:	mov	r1, r4
   11e58:	add	r0, pc, r0
   11e5c:	bl	10124 <dbus_g_type_get_collection@@Base>
   11e60:	b	11cf0 <dbus_g_value_build_g_variant@@Base+0x86c>
   11e64:	bl	b824 <__stack_chk_fail@plt>
   11e68:	andeq	r0, r1, r8, lsr r4
   11e6c:	strdeq	r0, [r0], -r8
   11e70:	andeq	r6, r0, r0, asr #21
   11e74:	ldrdeq	r5, [r0], -r0
   11e78:	andeq	r5, r0, r0, lsl #4
   11e7c:	andeq	r5, r0, ip, lsl #3
   11e80:	andeq	r5, r0, r8, asr #2
   11e84:	andeq	r5, r0, ip, lsr r1
   11e88:	ldr	r3, [pc, #84]	; 11ee4 <dbus_g_value_build_g_variant@@Base+0xa60>
   11e8c:	mov	ip, r0
   11e90:	ldr	r2, [pc, #80]	; 11ee8 <dbus_g_value_build_g_variant@@Base+0xa64>
   11e94:	add	r3, pc, r3
   11e98:	push	{r4, r5, r6, lr}
   11e9c:	sub	sp, sp, #24
   11ea0:	ldr	r4, [r3, r2]
   11ea4:	mov	r6, r1
   11ea8:	mov	r0, sp
   11eac:	mov	r1, ip
   11eb0:	ldr	r3, [r4]
   11eb4:	str	r3, [sp, #20]
   11eb8:	bl	b7ac <dbus_signature_iter_init@plt>
   11ebc:	mov	r0, sp
   11ec0:	mov	r1, r6
   11ec4:	bl	11bb8 <dbus_g_value_build_g_variant@@Base+0x734>
   11ec8:	ldr	r2, [sp, #20]
   11ecc:	ldr	r3, [r4]
   11ed0:	cmp	r2, r3
   11ed4:	bne	11ee0 <dbus_g_value_build_g_variant@@Base+0xa5c>
   11ed8:	add	sp, sp, #24
   11edc:	pop	{r4, r5, r6, pc}
   11ee0:	bl	b824 <__stack_chk_fail@plt>
   11ee4:	andeq	r0, r1, r4, ror #2
   11ee8:	strdeq	r0, [r0], -r8
   11eec:	ldr	r3, [pc, #164]	; 11f98 <dbus_g_value_build_g_variant@@Base+0xb14>
   11ef0:	mov	r2, #4
   11ef4:	ldr	ip, [pc, #160]	; 11f9c <dbus_g_value_build_g_variant@@Base+0xb18>
   11ef8:	add	r3, pc, r3
   11efc:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f00:	mov	r9, r0
   11f04:	ldr	r8, [r3, ip]
   11f08:	sub	sp, sp, #36	; 0x24
   11f0c:	mov	r0, #0
   11f10:	mov	r7, r1
   11f14:	mov	r1, r0
   11f18:	add	r6, sp, r2
   11f1c:	ldr	r3, [r8]
   11f20:	add	r4, sp, #8
   11f24:	str	r3, [sp, #28]
   11f28:	bl	b428 <g_array_new@plt>
   11f2c:	mov	r1, r9
   11f30:	mov	r5, r0
   11f34:	mov	r0, r4
   11f38:	bl	b7ac <dbus_signature_iter_init@plt>
   11f3c:	b	11f68 <dbus_g_value_build_g_variant@@Base+0xae4>
   11f40:	mov	r1, r7
   11f44:	mov	r0, r4
   11f48:	bl	11bb8 <dbus_g_value_build_g_variant@@Base+0x734>
   11f4c:	mov	r1, r6
   11f50:	mov	r2, #1
   11f54:	str	r0, [sp, #4]
   11f58:	mov	r0, r5
   11f5c:	bl	ba34 <g_array_append_vals@plt>
   11f60:	mov	r0, r4
   11f64:	bl	b2d8 <dbus_signature_iter_next@plt>
   11f68:	mov	r0, r4
   11f6c:	bl	b878 <dbus_signature_iter_get_current_type@plt>
   11f70:	cmp	r0, #0
   11f74:	bne	11f40 <dbus_g_value_build_g_variant@@Base+0xabc>
   11f78:	ldr	r2, [sp, #28]
   11f7c:	mov	r0, r5
   11f80:	ldr	r3, [r8]
   11f84:	cmp	r2, r3
   11f88:	bne	11f94 <dbus_g_value_build_g_variant@@Base+0xb10>
   11f8c:	add	sp, sp, #36	; 0x24
   11f90:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11f94:	bl	b824 <__stack_chk_fail@plt>
   11f98:	andeq	r0, r1, r0, lsl #2
   11f9c:	strdeq	r0, [r0], -r8
   11fa0:	mov	r0, #0
   11fa4:	bx	lr
   11fa8:	ldr	r2, [pc, #16]	; 11fc0 <dbus_g_value_build_g_variant@@Base+0xb3c>
   11fac:	mov	r3, r0
   11fb0:	mov	r1, #8
   11fb4:	mov	r0, #0
   11fb8:	add	r2, pc, r2
   11fbc:	b	ba58 <g_log@plt>
   11fc0:	muleq	r0, r4, r7
   11fc4:	b	b4ac <g_value_array_free@plt>
   11fc8:	push	{r4, lr}
   11fcc:	mov	r4, r0
   11fd0:	bl	b284 <g_value_unset@plt>
   11fd4:	mov	r0, r4
   11fd8:	pop	{r4, lr}
   11fdc:	b	b248 <g_free@plt>
   11fe0:	ldr	r2, [pc, #212]	; 120bc <dbus_g_value_build_g_variant@@Base+0xc38>
   11fe4:	mov	r3, #0
   11fe8:	push	{r4, r5, r6, lr}
   11fec:	mov	r4, r0
   11ff0:	ldr	r0, [pc, #200]	; 120c0 <dbus_g_value_build_g_variant@@Base+0xc3c>
   11ff4:	add	r2, pc, r2
   11ff8:	ldr	r1, [r4, #16]
   11ffc:	sub	sp, sp, #32
   12000:	ldr	r5, [r2, r0]
   12004:	tst	r1, #134217728	; 0x8000000
   12008:	str	r3, [sp]
   1200c:	str	r3, [sp, #4]
   12010:	ldr	r2, [r5]
   12014:	str	r3, [sp, #8]
   12018:	str	r3, [sp, #12]
   1201c:	str	r2, [sp, #28]
   12020:	str	r3, [sp, #16]
   12024:	str	r3, [sp, #20]
   12028:	bne	12074 <dbus_g_value_build_g_variant@@Base+0xbf0>
   1202c:	ldr	r0, [r4]
   12030:	bl	b638 <g_type_fundamental@plt>
   12034:	cmp	r0, #72	; 0x48
   12038:	beq	120a0 <dbus_g_value_build_g_variant@@Base+0xc1c>
   1203c:	cmp	r0, #80	; 0x50
   12040:	beq	120ac <dbus_g_value_build_g_variant@@Base+0xc28>
   12044:	cmp	r0, #64	; 0x40
   12048:	movne	r0, #0
   1204c:	beq	12068 <dbus_g_value_build_g_variant@@Base+0xbe4>
   12050:	ldr	r2, [sp, #28]
   12054:	ldr	r3, [r5]
   12058:	cmp	r2, r3
   1205c:	bne	120b8 <dbus_g_value_build_g_variant@@Base+0xc34>
   12060:	add	sp, sp, #32
   12064:	pop	{r4, r5, r6, pc}
   12068:	mov	r0, r4
   1206c:	bl	b344 <g_value_get_string@plt>
   12070:	b	12050 <dbus_g_value_build_g_variant@@Base+0xbcc>
   12074:	ldr	r1, [r4]
   12078:	mov	r0, sp
   1207c:	bl	b8cc <g_value_init@plt>
   12080:	mov	r0, r4
   12084:	mov	r1, sp
   12088:	mov	r4, sp
   1208c:	bl	b620 <g_value_copy@plt>
   12090:	ldr	r0, [r4]
   12094:	bl	b638 <g_type_fundamental@plt>
   12098:	cmp	r0, #72	; 0x48
   1209c:	bne	1203c <dbus_g_value_build_g_variant@@Base+0xbb8>
   120a0:	mov	r0, r4
   120a4:	bl	b2a8 <g_value_get_boxed@plt>
   120a8:	b	12050 <dbus_g_value_build_g_variant@@Base+0xbcc>
   120ac:	mov	r0, r4
   120b0:	bl	b710 <g_value_get_object@plt>
   120b4:	b	12050 <dbus_g_value_build_g_variant@@Base+0xbcc>
   120b8:	bl	b824 <__stack_chk_fail@plt>
   120bc:	andeq	r0, r1, r4
   120c0:	strdeq	r0, [r0], -r8
   120c4:	push	{r3, r4, r5, lr}
   120c8:	mov	r4, r0
   120cc:	ldr	r0, [r0]
   120d0:	bl	b638 <g_type_fundamental@plt>
   120d4:	sub	r0, r0, #12
   120d8:	cmp	r0, #48	; 0x30
   120dc:	addls	pc, pc, r0, lsl #2
   120e0:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   120e4:	b	121c8 <dbus_g_value_build_g_variant@@Base+0xd44>
   120e8:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   120ec:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   120f0:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   120f4:	b	121d4 <dbus_g_value_build_g_variant@@Base+0xd50>
   120f8:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   120fc:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12100:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12104:	b	121e0 <dbus_g_value_build_g_variant@@Base+0xd5c>
   12108:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1210c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12110:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12114:	b	121ec <dbus_g_value_build_g_variant@@Base+0xd68>
   12118:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1211c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12120:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12124:	b	121f8 <dbus_g_value_build_g_variant@@Base+0xd74>
   12128:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1212c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12130:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12134:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12138:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1213c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12140:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12144:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12148:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1214c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12150:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12154:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12158:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1215c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12160:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12164:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12168:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1216c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12170:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12174:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12178:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1217c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12180:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12184:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12188:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1218c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12190:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12194:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   12198:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   1219c:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   121a0:	b	12204 <dbus_g_value_build_g_variant@@Base+0xd80>
   121a4:	b	121a8 <dbus_g_value_build_g_variant@@Base+0xd24>
   121a8:	mov	r0, #8
   121ac:	bl	b8b4 <g_malloc0@plt>
   121b0:	mov	r5, r0
   121b4:	mov	r0, r4
   121b8:	bl	b3d4 <g_value_get_double@plt>
   121bc:	mov	r0, r5
   121c0:	vstr	d0, [r5]
   121c4:	pop	{r3, r4, r5, pc}
   121c8:	mov	r0, r4
   121cc:	bl	b5c0 <g_value_get_char@plt>
   121d0:	pop	{r3, r4, r5, pc}
   121d4:	mov	r0, r4
   121d8:	bl	b980 <g_value_get_uchar@plt>
   121dc:	pop	{r3, r4, r5, pc}
   121e0:	mov	r0, r4
   121e4:	pop	{r3, r4, r5, lr}
   121e8:	b	b53c <g_value_get_boolean@plt>
   121ec:	mov	r0, r4
   121f0:	pop	{r3, r4, r5, lr}
   121f4:	b	b9d4 <g_value_get_int@plt>
   121f8:	mov	r0, r4
   121fc:	pop	{r3, r4, r5, lr}
   12200:	b	b464 <g_value_get_uint@plt>
   12204:	mov	r0, r4
   12208:	pop	{r3, r4, r5, lr}
   1220c:	b	11fe0 <dbus_g_value_build_g_variant@@Base+0xb5c>
   12210:	ldr	r3, [pc, #552]	; 12440 <dbus_g_value_build_g_variant@@Base+0xfbc>
   12214:	ldr	r2, [pc, #552]	; 12444 <dbus_g_value_build_g_variant@@Base+0xfc0>
   12218:	add	r3, pc, r3
   1221c:	push	{r4, r5, r6, r7, lr}
   12220:	sub	sp, sp, #20
   12224:	ldr	r5, [r3, r2]
   12228:	mov	r4, r0
   1222c:	ldr	r0, [r0]
   12230:	mov	r6, r1
   12234:	ldr	r3, [r5]
   12238:	str	r3, [sp, #12]
   1223c:	bl	b2a8 <g_value_get_boxed@plt>
   12240:	ldr	r3, [r4]
   12244:	mov	r7, r0
   12248:	ldr	r0, [r3]
   1224c:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   12250:	sub	r0, r0, #12
   12254:	cmp	r0, #48	; 0x30
   12258:	addls	pc, pc, r0, lsl #2
   1225c:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12260:	b	12384 <dbus_g_value_build_g_variant@@Base+0xf00>
   12264:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12268:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   1226c:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12270:	b	123a8 <dbus_g_value_build_g_variant@@Base+0xf24>
   12274:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12278:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   1227c:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12280:	b	123b4 <dbus_g_value_build_g_variant@@Base+0xf30>
   12284:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12288:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   1228c:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12290:	b	123d8 <dbus_g_value_build_g_variant@@Base+0xf54>
   12294:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12298:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   1229c:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122a0:	b	123e4 <dbus_g_value_build_g_variant@@Base+0xf60>
   122a4:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122a8:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122ac:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122b0:	b	123f0 <dbus_g_value_build_g_variant@@Base+0xf6c>
   122b4:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122b8:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122bc:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122c0:	b	123fc <dbus_g_value_build_g_variant@@Base+0xf78>
   122c4:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122c8:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122cc:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122d0:	b	12324 <dbus_g_value_build_g_variant@@Base+0xea0>
   122d4:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122d8:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122dc:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122e0:	b	12408 <dbus_g_value_build_g_variant@@Base+0xf84>
   122e4:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122e8:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122ec:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122f0:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122f4:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122f8:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   122fc:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12300:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12304:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12308:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   1230c:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12310:	b	12414 <dbus_g_value_build_g_variant@@Base+0xf90>
   12314:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12318:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   1231c:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12320:	b	1235c <dbus_g_value_build_g_variant@@Base+0xed8>
   12324:	mov	r0, r6
   12328:	bl	b9ec <g_value_get_int64@plt>
   1232c:	add	r3, sp, #16
   12330:	mov	r2, #1
   12334:	strd	r0, [r3, #-16]!
   12338:	mov	r0, r7
   1233c:	mov	r1, sp
   12340:	bl	ba34 <g_array_append_vals@plt>
   12344:	ldr	r2, [sp, #12]
   12348:	ldr	r3, [r5]
   1234c:	cmp	r2, r3
   12350:	bne	1243c <dbus_g_value_build_g_variant@@Base+0xfb8>
   12354:	add	sp, sp, #20
   12358:	pop	{r4, r5, r6, r7, pc}
   1235c:	mov	r0, r6
   12360:	bl	b3d4 <g_value_get_double@plt>
   12364:	mov	r0, r7
   12368:	add	r1, sp, #16
   1236c:	mov	r2, #1
   12370:	vmov	r6, r7, d0
   12374:	strd	r6, [r1, #-16]!
   12378:	mov	r1, sp
   1237c:	bl	ba34 <g_array_append_vals@plt>
   12380:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   12384:	mov	r0, r6
   12388:	bl	b5c0 <g_value_get_char@plt>
   1238c:	add	r1, sp, #16
   12390:	mov	r2, #1
   12394:	strb	r0, [r1, #-16]!
   12398:	mov	r0, r7
   1239c:	mov	r1, sp
   123a0:	bl	ba34 <g_array_append_vals@plt>
   123a4:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   123a8:	mov	r0, r6
   123ac:	bl	b980 <g_value_get_uchar@plt>
   123b0:	b	1238c <dbus_g_value_build_g_variant@@Base+0xf08>
   123b4:	mov	r0, r6
   123b8:	bl	b53c <g_value_get_boolean@plt>
   123bc:	add	r1, sp, #16
   123c0:	mov	r2, #1
   123c4:	str	r0, [r1, #-16]!
   123c8:	mov	r0, r7
   123cc:	mov	r1, sp
   123d0:	bl	ba34 <g_array_append_vals@plt>
   123d4:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   123d8:	mov	r0, r6
   123dc:	bl	b9d4 <g_value_get_int@plt>
   123e0:	b	123bc <dbus_g_value_build_g_variant@@Base+0xf38>
   123e4:	mov	r0, r6
   123e8:	bl	b464 <g_value_get_uint@plt>
   123ec:	b	123bc <dbus_g_value_build_g_variant@@Base+0xf38>
   123f0:	mov	r0, r6
   123f4:	bl	b524 <g_value_get_long@plt>
   123f8:	b	123bc <dbus_g_value_build_g_variant@@Base+0xf38>
   123fc:	mov	r0, r6
   12400:	bl	b938 <g_value_get_ulong@plt>
   12404:	b	123bc <dbus_g_value_build_g_variant@@Base+0xf38>
   12408:	mov	r0, r6
   1240c:	bl	b71c <g_value_get_uint64@plt>
   12410:	b	1232c <dbus_g_value_build_g_variant@@Base+0xea8>
   12414:	mov	r0, r6
   12418:	bl	b23c <g_value_get_float@plt>
   1241c:	add	r1, sp, #16
   12420:	mov	r0, r7
   12424:	mov	r2, #1
   12428:	vmov	r3, s0
   1242c:	str	r3, [r1, #-16]!
   12430:	mov	r1, sp
   12434:	bl	ba34 <g_array_append_vals@plt>
   12438:	b	12344 <dbus_g_value_build_g_variant@@Base+0xec0>
   1243c:	bl	b824 <__stack_chk_fail@plt>
   12440:	andeq	pc, r0, r0, ror #27
   12444:	strdeq	r0, [r0], -r8
   12448:	ldr	ip, [pc, #692]	; 12704 <dbus_g_value_build_g_variant@@Base+0x1280>
   1244c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12450:	mov	r9, r1
   12454:	ldr	r1, [pc, #684]	; 12708 <dbus_g_value_build_g_variant@@Base+0x1284>
   12458:	sub	sp, sp, #76	; 0x4c
   1245c:	add	ip, pc, ip
   12460:	str	r3, [sp, #12]
   12464:	str	r2, [sp, #8]
   12468:	mov	r3, ip
   1246c:	ldr	r1, [ip, r1]
   12470:	ldr	r3, [r1]
   12474:	str	r1, [sp, #36]	; 0x24
   12478:	str	r3, [sp, #68]	; 0x44
   1247c:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   12480:	ldr	r3, [r9, #4]
   12484:	cmp	r3, #0
   12488:	mov	sl, r0
   1248c:	beq	12610 <dbus_g_value_build_g_variant@@Base+0x118c>
   12490:	add	r8, sp, #40	; 0x28
   12494:	mov	r6, #0
   12498:	mov	r7, r6
   1249c:	mov	r5, r6
   124a0:	mov	r4, r8
   124a4:	mov	fp, r6
   124a8:	add	r1, sp, #44	; 0x2c
   124ac:	add	r2, sp, #48	; 0x30
   124b0:	add	r3, sp, #52	; 0x34
   124b4:	str	r1, [sp, #16]
   124b8:	str	r2, [sp, #20]
   124bc:	add	r1, sp, #56	; 0x38
   124c0:	str	r3, [sp, #24]
   124c4:	add	r2, sp, #60	; 0x3c
   124c8:	sub	r3, r0, #12
   124cc:	str	r1, [sp, #28]
   124d0:	str	r2, [sp, #32]
   124d4:	str	r3, [sp, #4]
   124d8:	mov	r1, sl
   124dc:	mov	r0, r4
   124e0:	str	fp, [r8]
   124e4:	mov	r8, r4
   124e8:	str	fp, [sp, #44]	; 0x2c
   124ec:	str	fp, [sp, #48]	; 0x30
   124f0:	str	fp, [sp, #52]	; 0x34
   124f4:	str	fp, [sp, #56]	; 0x38
   124f8:	str	fp, [sp, #60]	; 0x3c
   124fc:	bl	b8cc <g_value_init@plt>
   12500:	ldr	r1, [sp, #4]
   12504:	cmp	r1, #48	; 0x30
   12508:	addls	pc, pc, r1, lsl #2
   1250c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12510:	b	126bc <dbus_g_value_build_g_variant@@Base+0x1238>
   12514:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12518:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1251c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12520:	b	126a8 <dbus_g_value_build_g_variant@@Base+0x1224>
   12524:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12528:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1252c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12530:	b	126e4 <dbus_g_value_build_g_variant@@Base+0x1260>
   12534:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12538:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1253c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12540:	b	126d0 <dbus_g_value_build_g_variant@@Base+0x124c>
   12544:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12548:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1254c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12550:	b	12694 <dbus_g_value_build_g_variant@@Base+0x1210>
   12554:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12558:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1255c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12560:	b	12680 <dbus_g_value_build_g_variant@@Base+0x11fc>
   12564:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12568:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1256c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12570:	b	1266c <dbus_g_value_build_g_variant@@Base+0x11e8>
   12574:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12578:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1257c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12580:	b	12658 <dbus_g_value_build_g_variant@@Base+0x11d4>
   12584:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12588:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1258c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12590:	b	12644 <dbus_g_value_build_g_variant@@Base+0x11c0>
   12594:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12598:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1259c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125a0:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125a4:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125a8:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125ac:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125b0:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125b4:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125b8:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125bc:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125c0:	b	1262c <dbus_g_value_build_g_variant@@Base+0x11a8>
   125c4:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125c8:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125cc:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   125d0:	b	125d4 <dbus_g_value_build_g_variant@@Base+0x1150>
   125d4:	ldr	r3, [r9]
   125d8:	mov	r0, r4
   125dc:	add	r3, r3, r6
   125e0:	vldr	d0, [r3]
   125e4:	bl	b65c <g_value_set_double@plt>
   125e8:	mov	r0, r4
   125ec:	ldr	r1, [sp, #12]
   125f0:	ldr	r2, [sp, #8]
   125f4:	add	r5, r5, #1
   125f8:	blx	r2
   125fc:	ldr	r3, [r9, #4]
   12600:	add	r7, r7, #4
   12604:	add	r6, r6, #8
   12608:	cmp	r3, r5
   1260c:	bhi	124d8 <dbus_g_value_build_g_variant@@Base+0x1054>
   12610:	ldr	r1, [sp, #36]	; 0x24
   12614:	ldr	r2, [sp, #68]	; 0x44
   12618:	ldr	r3, [r1]
   1261c:	cmp	r2, r3
   12620:	bne	12700 <dbus_g_value_build_g_variant@@Base+0x127c>
   12624:	add	sp, sp, #76	; 0x4c
   12628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1262c:	ldr	r3, [r9]
   12630:	mov	r0, r4
   12634:	add	r3, r3, r7
   12638:	vldr	s0, [r3]
   1263c:	bl	b68c <g_value_set_float@plt>
   12640:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12644:	ldr	r3, [r9]
   12648:	mov	r0, r4
   1264c:	ldrd	r2, [r3, r6]
   12650:	bl	b578 <g_value_set_uint64@plt>
   12654:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12658:	ldr	r3, [r9]
   1265c:	mov	r0, r4
   12660:	ldrd	r2, [r3, r6]
   12664:	bl	b260 <g_value_set_int64@plt>
   12668:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   1266c:	ldr	r3, [r9]
   12670:	mov	r0, r4
   12674:	ldr	r1, [r3, r7]
   12678:	bl	ba04 <g_value_set_ulong@plt>
   1267c:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12680:	ldr	r3, [r9]
   12684:	mov	r0, r4
   12688:	ldr	r1, [r3, r7]
   1268c:	bl	b5f0 <g_value_set_long@plt>
   12690:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12694:	ldr	r3, [r9]
   12698:	mov	r0, r4
   1269c:	ldr	r1, [r3, r7]
   126a0:	bl	b944 <g_value_set_uint@plt>
   126a4:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   126a8:	ldr	r3, [r9]
   126ac:	mov	r0, r4
   126b0:	ldrb	r1, [r3, r5]
   126b4:	bl	b6a4 <g_value_set_uchar@plt>
   126b8:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   126bc:	ldr	r3, [r9]
   126c0:	mov	r0, r4
   126c4:	ldrb	r1, [r3, r5]
   126c8:	bl	b860 <g_value_set_char@plt>
   126cc:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   126d0:	ldr	r3, [r9]
   126d4:	mov	r0, r4
   126d8:	ldr	r1, [r3, r7]
   126dc:	bl	b434 <g_value_set_int@plt>
   126e0:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   126e4:	ldr	r3, [r9]
   126e8:	mov	r0, r4
   126ec:	ldr	r1, [r3, r7]
   126f0:	adds	r1, r1, #0
   126f4:	movne	r1, #1
   126f8:	bl	b3b0 <g_value_set_boolean@plt>
   126fc:	b	125e8 <dbus_g_value_build_g_variant@@Base+0x1164>
   12700:	bl	b824 <__stack_chk_fail@plt>
   12704:	muleq	r0, ip, fp
   12708:	strdeq	r0, [r0], -r8
   1270c:	mov	r1, #1
   12710:	b	b488 <g_array_free@plt>
   12714:	push	{r3, r4, r5, lr}
   12718:	mov	r5, r1
   1271c:	ldr	r0, [r0]
   12720:	bl	b2a8 <g_value_get_boxed@plt>
   12724:	mov	r4, r0
   12728:	mov	r0, r5
   1272c:	bl	11fe0 <dbus_g_value_build_g_variant@@Base+0xb5c>
   12730:	mov	r1, r0
   12734:	mov	r0, r4
   12738:	pop	{r3, r4, r5, lr}
   1273c:	b	b548 <g_ptr_array_add@plt>
   12740:	ldr	r2, [pc, #132]	; 127cc <dbus_g_value_build_g_variant@@Base+0x1348>
   12744:	mov	r3, #0
   12748:	ldr	ip, [pc, #128]	; 127d0 <dbus_g_value_build_g_variant@@Base+0x134c>
   1274c:	add	r2, pc, r2
   12750:	push	{r4, r5, r6, r7, lr}
   12754:	sub	sp, sp, #36	; 0x24
   12758:	ldr	r5, [r2, ip]
   1275c:	mov	r6, r0
   12760:	mov	r7, r1
   12764:	mov	r0, sp
   12768:	ldr	r1, [r6]
   1276c:	ldr	r2, [r5]
   12770:	str	r3, [sp]
   12774:	str	r3, [sp, #4]
   12778:	str	r3, [sp, #8]
   1277c:	str	r3, [sp, #12]
   12780:	str	r2, [sp, #28]
   12784:	str	r3, [sp, #16]
   12788:	str	r3, [sp, #20]
   1278c:	bl	b8cc <g_value_init@plt>
   12790:	mov	r1, sp
   12794:	mov	r0, r6
   12798:	bl	b620 <g_value_copy@plt>
   1279c:	mov	r0, sp
   127a0:	bl	11fe0 <dbus_g_value_build_g_variant@@Base+0xb5c>
   127a4:	mov	r1, r0
   127a8:	mov	r0, r7
   127ac:	bl	b548 <g_ptr_array_add@plt>
   127b0:	ldr	r2, [sp, #28]
   127b4:	ldr	r3, [r5]
   127b8:	cmp	r2, r3
   127bc:	bne	127c8 <dbus_g_value_build_g_variant@@Base+0x1344>
   127c0:	add	sp, sp, #36	; 0x24
   127c4:	pop	{r4, r5, r6, r7, pc}
   127c8:	bl	b824 <__stack_chk_fail@plt>
   127cc:	andeq	pc, r0, ip, lsr #17
   127d0:	strdeq	r0, [r0], -r8
   127d4:	push	{r3, r4, r5, lr}
   127d8:	mov	r4, r0
   127dc:	ldr	r0, [r0]
   127e0:	mov	r5, r1
   127e4:	bl	b638 <g_type_fundamental@plt>
   127e8:	cmp	r0, #72	; 0x48
   127ec:	beq	12820 <dbus_g_value_build_g_variant@@Base+0x139c>
   127f0:	cmp	r0, #80	; 0x50
   127f4:	beq	12810 <dbus_g_value_build_g_variant@@Base+0x138c>
   127f8:	cmp	r0, #64	; 0x40
   127fc:	popne	{r3, r4, r5, pc}
   12800:	mov	r0, r4
   12804:	mov	r1, r5
   12808:	pop	{r3, r4, r5, lr}
   1280c:	b	b2cc <g_value_take_string@plt>
   12810:	mov	r0, r4
   12814:	mov	r1, r5
   12818:	pop	{r3, r4, r5, lr}
   1281c:	b	b998 <g_value_take_object@plt>
   12820:	mov	r0, r4
   12824:	mov	r1, r5
   12828:	pop	{r3, r4, r5, lr}
   1282c:	b	b89c <g_value_take_boxed@plt>
   12830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12834:	mov	fp, r1
   12838:	ldr	lr, [pc, #236]	; 1292c <dbus_g_value_build_g_variant@@Base+0x14a8>
   1283c:	mov	r8, r3
   12840:	ldr	r1, [pc, #232]	; 12930 <dbus_g_value_build_g_variant@@Base+0x14ac>
   12844:	sub	sp, sp, #60	; 0x3c
   12848:	add	lr, pc, lr
   1284c:	mov	r7, r2
   12850:	ldr	r1, [lr, r1]
   12854:	mov	r3, lr
   12858:	ldr	r3, [r1]
   1285c:	str	r1, [sp, #20]
   12860:	str	r3, [sp, #52]	; 0x34
   12864:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   12868:	ldr	r3, [fp, #4]
   1286c:	cmp	r3, #0
   12870:	mov	r6, r0
   12874:	beq	1290c <dbus_g_value_build_g_variant@@Base+0x1488>
   12878:	add	sl, sp, #24
   1287c:	mov	r9, #0
   12880:	mov	r4, r9
   12884:	add	r2, sp, #28
   12888:	mov	r5, sl
   1288c:	mov	sl, fp
   12890:	mov	fp, r5
   12894:	add	r3, sp, #32
   12898:	str	r2, [sp, #12]
   1289c:	add	r2, sp, #36	; 0x24
   128a0:	str	r3, [sp, #16]
   128a4:	add	r3, sp, #40	; 0x28
   128a8:	str	r2, [sp]
   128ac:	add	r2, sp, #44	; 0x2c
   128b0:	str	r3, [sp, #4]
   128b4:	str	r2, [sp, #8]
   128b8:	mov	r1, r6
   128bc:	mov	r0, r5
   128c0:	str	r4, [fp]
   128c4:	mov	fp, r5
   128c8:	str	r4, [sp, #28]
   128cc:	str	r4, [sp, #32]
   128d0:	str	r4, [sp, #36]	; 0x24
   128d4:	str	r4, [sp, #40]	; 0x28
   128d8:	str	r4, [sp, #44]	; 0x2c
   128dc:	bl	b8cc <g_value_init@plt>
   128e0:	ldr	r1, [sl]
   128e4:	mov	r0, r5
   128e8:	ldr	r1, [r1, r9, lsl #2]
   128ec:	add	r9, r9, #1
   128f0:	bl	127d4 <dbus_g_value_build_g_variant@@Base+0x1350>
   128f4:	mov	r1, r8
   128f8:	mov	r0, r5
   128fc:	blx	r7
   12900:	ldr	r1, [sl, #4]
   12904:	cmp	r1, r9
   12908:	bhi	128b8 <dbus_g_value_build_g_variant@@Base+0x1434>
   1290c:	ldr	r1, [sp, #20]
   12910:	ldr	r2, [sp, #52]	; 0x34
   12914:	ldr	r3, [r1]
   12918:	cmp	r2, r3
   1291c:	bne	12928 <dbus_g_value_build_g_variant@@Base+0x14a4>
   12920:	add	sp, sp, #60	; 0x3c
   12924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12928:	bl	b824 <__stack_chk_fail@plt>
   1292c:			; <UNDEFINED> instruction: 0x0000f7b0
   12930:	strdeq	r0, [r0], -r8
   12934:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12938:	mov	sl, r1
   1293c:	ldr	lr, [pc, #224]	; 12a24 <dbus_g_value_build_g_variant@@Base+0x15a0>
   12940:	mov	r6, r3
   12944:	ldr	r1, [pc, #220]	; 12a28 <dbus_g_value_build_g_variant@@Base+0x15a4>
   12948:	sub	sp, sp, #60	; 0x3c
   1294c:	add	lr, pc, lr
   12950:	mov	r5, r2
   12954:	ldr	r1, [lr, r1]
   12958:	mov	r3, lr
   1295c:	ldr	r3, [r1]
   12960:	str	r1, [sp, #20]
   12964:	str	r3, [sp, #52]	; 0x34
   12968:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   1296c:	cmp	sl, #0
   12970:	beq	12a04 <dbus_g_value_build_g_variant@@Base+0x1580>
   12974:	add	r8, sp, #24
   12978:	add	r3, sp, #36	; 0x24
   1297c:	add	fp, sp, #28
   12980:	str	r3, [sp, #4]
   12984:	mov	r4, r8
   12988:	add	r3, sp, #44	; 0x2c
   1298c:	str	r3, [sp, #12]
   12990:	mov	r3, r6
   12994:	mov	r8, sl
   12998:	mov	r7, #0
   1299c:	mov	r6, r0
   129a0:	mov	sl, r4
   129a4:	mov	r9, r3
   129a8:	add	r2, sp, #32
   129ac:	str	r2, [sp, #16]
   129b0:	add	r2, sp, #40	; 0x28
   129b4:	str	r2, [sp, #8]
   129b8:	mov	r1, r6
   129bc:	mov	r0, r4
   129c0:	str	r7, [sl]
   129c4:	mov	sl, r4
   129c8:	str	r7, [fp]
   129cc:	str	r7, [sp, #32]
   129d0:	str	r7, [sp, #36]	; 0x24
   129d4:	str	r7, [sp, #40]	; 0x28
   129d8:	str	r7, [sp, #44]	; 0x2c
   129dc:	bl	b8cc <g_value_init@plt>
   129e0:	ldr	r1, [r8]
   129e4:	mov	r0, r4
   129e8:	bl	127d4 <dbus_g_value_build_g_variant@@Base+0x1350>
   129ec:	mov	r0, r4
   129f0:	mov	r1, r9
   129f4:	blx	r5
   129f8:	ldr	r8, [r8, #4]
   129fc:	cmp	r8, #0
   12a00:	bne	129b8 <dbus_g_value_build_g_variant@@Base+0x1534>
   12a04:	ldr	r1, [sp, #20]
   12a08:	ldr	r2, [sp, #52]	; 0x34
   12a0c:	ldr	r3, [r1]
   12a10:	cmp	r2, r3
   12a14:	bne	12a20 <dbus_g_value_build_g_variant@@Base+0x159c>
   12a18:	add	sp, sp, #60	; 0x3c
   12a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a20:	bl	b824 <__stack_chk_fail@plt>
   12a24:	andeq	pc, r0, ip, lsr #13
   12a28:	strdeq	r0, [r0], -r8
   12a2c:	push	{r3, r4, r5, lr}
   12a30:	mov	r4, r0
   12a34:	ldr	r0, [r0]
   12a38:	mov	r5, r1
   12a3c:	bl	b638 <g_type_fundamental@plt>
   12a40:	sub	r0, r0, #12
   12a44:	cmp	r0, #48	; 0x30
   12a48:	addls	pc, pc, r0, lsl #2
   12a4c:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a50:	b	12b24 <dbus_g_value_build_g_variant@@Base+0x16a0>
   12a54:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a58:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a5c:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a60:	b	12b34 <dbus_g_value_build_g_variant@@Base+0x16b0>
   12a64:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a68:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a6c:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a70:	b	12b44 <dbus_g_value_build_g_variant@@Base+0x16c0>
   12a74:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a78:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a7c:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a80:	b	12b54 <dbus_g_value_build_g_variant@@Base+0x16d0>
   12a84:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a88:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a8c:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a90:	b	12b64 <dbus_g_value_build_g_variant@@Base+0x16e0>
   12a94:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a98:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12a9c:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12aa0:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12aa4:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12aa8:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12aac:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ab0:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ab4:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ab8:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12abc:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ac0:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ac4:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ac8:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12acc:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ad0:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ad4:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ad8:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12adc:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ae0:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ae4:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12ae8:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12aec:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12af0:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12af4:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12af8:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12afc:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12b00:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12b04:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12b08:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12b0c:	b	12b74 <dbus_g_value_build_g_variant@@Base+0x16f0>
   12b10:	b	12b14 <dbus_g_value_build_g_variant@@Base+0x1690>
   12b14:	mov	r0, r4
   12b18:	vldr	d0, [r5]
   12b1c:	pop	{r3, r4, r5, lr}
   12b20:	b	b65c <g_value_set_double@plt>
   12b24:	mov	r0, r4
   12b28:	uxtb	r1, r5
   12b2c:	pop	{r3, r4, r5, lr}
   12b30:	b	b860 <g_value_set_char@plt>
   12b34:	mov	r0, r4
   12b38:	uxtb	r1, r5
   12b3c:	pop	{r3, r4, r5, lr}
   12b40:	b	b6a4 <g_value_set_uchar@plt>
   12b44:	mov	r0, r4
   12b48:	mov	r1, r5
   12b4c:	pop	{r3, r4, r5, lr}
   12b50:	b	b3b0 <g_value_set_boolean@plt>
   12b54:	mov	r0, r4
   12b58:	mov	r1, r5
   12b5c:	pop	{r3, r4, r5, lr}
   12b60:	b	b434 <g_value_set_int@plt>
   12b64:	mov	r0, r4
   12b68:	mov	r1, r5
   12b6c:	pop	{r3, r4, r5, lr}
   12b70:	b	b944 <g_value_set_uint@plt>
   12b74:	mov	r0, r4
   12b78:	mov	r1, r5
   12b7c:	pop	{r3, r4, r5, lr}
   12b80:	b	127d4 <dbus_g_value_build_g_variant@@Base+0x1350>
   12b84:	ldr	r3, [pc, #188]	; 12c48 <dbus_g_value_build_g_variant@@Base+0x17c4>
   12b88:	ldr	ip, [pc, #188]	; 12c4c <dbus_g_value_build_g_variant@@Base+0x17c8>
   12b8c:	add	r3, pc, r3
   12b90:	push	{r4, r5, r6, r7, r8, r9, lr}
   12b94:	mov	r4, r2
   12b98:	ldr	r7, [r3, ip]
   12b9c:	sub	sp, sp, #60	; 0x3c
   12ba0:	mov	r8, r1
   12ba4:	ldr	r1, [r2, #4]
   12ba8:	add	r5, sp, #24
   12bac:	mov	r9, r0
   12bb0:	ldr	r2, [r7]
   12bb4:	mov	r0, sp
   12bb8:	mov	r3, #0
   12bbc:	str	r3, [sp]
   12bc0:	str	r3, [sp, #4]
   12bc4:	str	r3, [sp, #8]
   12bc8:	str	r2, [sp, #52]	; 0x34
   12bcc:	str	r3, [sp, #12]
   12bd0:	str	r3, [sp, #16]
   12bd4:	str	r3, [sp, #20]
   12bd8:	str	r3, [sp, #24]
   12bdc:	str	r3, [sp, #28]
   12be0:	str	r3, [sp, #32]
   12be4:	str	r3, [sp, #36]	; 0x24
   12be8:	str	r3, [sp, #40]	; 0x28
   12bec:	str	r3, [sp, #44]	; 0x2c
   12bf0:	bl	b8cc <g_value_init@plt>
   12bf4:	ldr	r1, [r4, #8]
   12bf8:	mov	r0, r5
   12bfc:	bl	b8cc <g_value_init@plt>
   12c00:	mov	r0, sp
   12c04:	mov	r1, r9
   12c08:	bl	12a2c <dbus_g_value_build_g_variant@@Base+0x15a8>
   12c0c:	mov	r0, r5
   12c10:	mov	r1, r8
   12c14:	bl	12a2c <dbus_g_value_build_g_variant@@Base+0x15a8>
   12c18:	ldr	r3, [r4]
   12c1c:	ldr	r2, [r4, #12]
   12c20:	mov	r0, sp
   12c24:	mov	r1, r5
   12c28:	blx	r3
   12c2c:	ldr	r2, [sp, #52]	; 0x34
   12c30:	ldr	r3, [r7]
   12c34:	cmp	r2, r3
   12c38:	bne	12c44 <dbus_g_value_build_g_variant@@Base+0x17c0>
   12c3c:	add	sp, sp, #60	; 0x3c
   12c40:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12c44:	bl	b824 <__stack_chk_fail@plt>
   12c48:	andeq	pc, r0, ip, ror #8
   12c4c:	strdeq	r0, [r0], -r8
   12c50:	ldr	r3, [pc, #160]	; 12cf8 <dbus_g_value_build_g_variant@@Base+0x1874>
   12c54:	ldr	ip, [pc, #160]	; 12cfc <dbus_g_value_build_g_variant@@Base+0x1878>
   12c58:	add	r3, pc, r3
   12c5c:	push	{r4, r5, r6, r7, r8, lr}
   12c60:	mov	r6, r2
   12c64:	ldr	r5, [r3, ip]
   12c68:	sub	sp, sp, #32
   12c6c:	mov	r7, r1
   12c70:	ldr	r1, [r2]
   12c74:	mov	r8, r0
   12c78:	mov	r0, sp
   12c7c:	ldr	r2, [r5]
   12c80:	mov	r3, #0
   12c84:	str	r3, [sp]
   12c88:	str	r3, [sp, #4]
   12c8c:	str	r3, [sp, #8]
   12c90:	str	r3, [sp, #12]
   12c94:	str	r2, [sp, #28]
   12c98:	str	r3, [sp, #16]
   12c9c:	str	r3, [sp, #20]
   12ca0:	bl	b8cc <g_value_init@plt>
   12ca4:	mov	r1, r8
   12ca8:	mov	r0, sp
   12cac:	bl	12a2c <dbus_g_value_build_g_variant@@Base+0x15a8>
   12cb0:	mov	r0, sp
   12cb4:	bl	b284 <g_value_unset@plt>
   12cb8:	ldr	r1, [r6, #4]
   12cbc:	mov	r0, sp
   12cc0:	bl	b8cc <g_value_init@plt>
   12cc4:	mov	r0, sp
   12cc8:	mov	r1, r7
   12ccc:	bl	12a2c <dbus_g_value_build_g_variant@@Base+0x15a8>
   12cd0:	mov	r0, sp
   12cd4:	bl	b284 <g_value_unset@plt>
   12cd8:	ldr	r2, [sp, #28]
   12cdc:	ldr	r3, [r5]
   12ce0:	mov	r0, #1
   12ce4:	cmp	r2, r3
   12ce8:	bne	12cf4 <dbus_g_value_build_g_variant@@Base+0x1870>
   12cec:	add	sp, sp, #32
   12cf0:	pop	{r4, r5, r6, r7, r8, pc}
   12cf4:	bl	b824 <__stack_chk_fail@plt>
   12cf8:	andeq	pc, r0, r0, lsr #7
   12cfc:	strdeq	r0, [r0], -r8
   12d00:	ldr	r3, [pc, #144]	; 12d98 <dbus_g_value_build_g_variant@@Base+0x1914>
   12d04:	mov	ip, r0
   12d08:	ldr	r2, [pc, #140]	; 12d9c <dbus_g_value_build_g_variant@@Base+0x1918>
   12d0c:	add	r3, pc, r3
   12d10:	push	{r4, r5, r6, r7, lr}
   12d14:	sub	sp, sp, #44	; 0x2c
   12d18:	ldr	r6, [r3, r2]
   12d1c:	add	r5, sp, #8
   12d20:	mov	r7, r1
   12d24:	mov	r1, ip
   12d28:	mov	r0, r5
   12d2c:	mov	r4, #0
   12d30:	ldr	r3, [r6]
   12d34:	str	r4, [sp, #8]
   12d38:	str	r4, [sp, #12]
   12d3c:	str	r3, [sp, #36]	; 0x24
   12d40:	str	r4, [sp, #16]
   12d44:	str	r4, [sp, #20]
   12d48:	str	r4, [sp, #24]
   12d4c:	str	r4, [sp, #28]
   12d50:	bl	b8cc <g_value_init@plt>
   12d54:	mov	r0, r5
   12d58:	mov	r1, r7
   12d5c:	bl	b8d8 <g_value_set_static_boxed@plt>
   12d60:	add	r2, sp, #40	; 0x28
   12d64:	ldr	r1, [pc, #52]	; 12da0 <dbus_g_value_build_g_variant@@Base+0x191c>
   12d68:	mov	r0, r5
   12d6c:	str	r4, [r2, #-36]!	; 0xffffffdc
   12d70:	add	r1, pc, r1
   12d74:	bl	109c8 <dbus_g_type_collection_value_iterate@@Base>
   12d78:	ldr	r2, [sp, #36]	; 0x24
   12d7c:	ldr	r3, [r6]
   12d80:	ldr	r0, [sp, #4]
   12d84:	cmp	r2, r3
   12d88:	bne	12d94 <dbus_g_value_build_g_variant@@Base+0x1910>
   12d8c:	add	sp, sp, #44	; 0x2c
   12d90:	pop	{r4, r5, r6, r7, pc}
   12d94:	bl	b824 <__stack_chk_fail@plt>
   12d98:	andeq	pc, r0, ip, ror #5
   12d9c:	strdeq	r0, [r0], -r8
   12da0:	andeq	r0, r0, ip, ror #3
   12da4:	ldr	r3, [pc, #168]	; 12e54 <dbus_g_value_build_g_variant@@Base+0x19d0>
   12da8:	ldr	r2, [pc, #168]	; 12e58 <dbus_g_value_build_g_variant@@Base+0x19d4>
   12dac:	add	r3, pc, r3
   12db0:	push	{r4, r5, r6, r7, r8, lr}
   12db4:	sub	sp, sp, #32
   12db8:	ldr	r8, [r3, r2]
   12dbc:	mov	r4, #0
   12dc0:	mov	r6, r1
   12dc4:	str	r4, [sp]
   12dc8:	str	r4, [sp, #4]
   12dcc:	ldr	r3, [r8]
   12dd0:	str	r4, [sp, #8]
   12dd4:	str	r4, [sp, #12]
   12dd8:	str	r3, [sp, #28]
   12ddc:	str	r4, [sp, #16]
   12de0:	str	r4, [sp, #20]
   12de4:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   12de8:	ldr	r3, [r6, #4]
   12dec:	cmp	r3, r4
   12df0:	mov	r7, r0
   12df4:	beq	12e2c <dbus_g_value_build_g_variant@@Base+0x19a8>
   12df8:	mov	r1, r7
   12dfc:	mov	r0, sp
   12e00:	bl	b8cc <g_value_init@plt>
   12e04:	ldr	r3, [r6]
   12e08:	mov	r0, sp
   12e0c:	ldr	r1, [r3, r4, lsl #2]
   12e10:	add	r4, r4, #1
   12e14:	bl	127d4 <dbus_g_value_build_g_variant@@Base+0x1350>
   12e18:	mov	r0, sp
   12e1c:	bl	b284 <g_value_unset@plt>
   12e20:	ldr	r3, [r6, #4]
   12e24:	cmp	r3, r4
   12e28:	bhi	12df8 <dbus_g_value_build_g_variant@@Base+0x1974>
   12e2c:	mov	r0, r6
   12e30:	mov	r1, #1
   12e34:	bl	b62c <g_ptr_array_free@plt>
   12e38:	ldr	r2, [sp, #28]
   12e3c:	ldr	r3, [r8]
   12e40:	cmp	r2, r3
   12e44:	bne	12e50 <dbus_g_value_build_g_variant@@Base+0x19cc>
   12e48:	add	sp, sp, #32
   12e4c:	pop	{r4, r5, r6, r7, r8, pc}
   12e50:	bl	b824 <__stack_chk_fail@plt>
   12e54:	andeq	pc, r0, ip, asr #4
   12e58:	strdeq	r0, [r0], -r8
   12e5c:	b	b9c8 <g_ptr_array_new@plt>
   12e60:	ldr	r2, [pc, #144]	; 12ef8 <dbus_g_value_build_g_variant@@Base+0x1a74>
   12e64:	mov	r3, r0
   12e68:	ldr	ip, [pc, #140]	; 12efc <dbus_g_value_build_g_variant@@Base+0x1a78>
   12e6c:	add	r2, pc, r2
   12e70:	push	{r4, r5, r6, lr}
   12e74:	sub	sp, sp, #32
   12e78:	ldr	r5, [r2, ip]
   12e7c:	mov	r6, r1
   12e80:	mov	r0, sp
   12e84:	mov	r1, r3
   12e88:	mov	r3, #0
   12e8c:	str	r3, [sp]
   12e90:	ldr	r2, [r5]
   12e94:	str	r3, [sp, #4]
   12e98:	str	r3, [sp, #8]
   12e9c:	str	r3, [sp, #12]
   12ea0:	str	r3, [sp, #16]
   12ea4:	str	r3, [sp, #20]
   12ea8:	str	r2, [sp, #28]
   12eac:	bl	b8cc <g_value_init@plt>
   12eb0:	mov	r1, r6
   12eb4:	mov	r0, sp
   12eb8:	bl	b8d8 <g_value_set_static_boxed@plt>
   12ebc:	bl	b9c8 <g_ptr_array_new@plt>
   12ec0:	ldr	r1, [pc, #56]	; 12f00 <dbus_g_value_build_g_variant@@Base+0x1a7c>
   12ec4:	add	r1, pc, r1
   12ec8:	mov	r6, r0
   12ecc:	mov	r0, sp
   12ed0:	mov	r2, r6
   12ed4:	bl	109c8 <dbus_g_type_collection_value_iterate@@Base>
   12ed8:	ldr	r2, [sp, #28]
   12edc:	ldr	r3, [r5]
   12ee0:	mov	r0, r6
   12ee4:	cmp	r2, r3
   12ee8:	bne	12ef4 <dbus_g_value_build_g_variant@@Base+0x1a70>
   12eec:	add	sp, sp, #32
   12ef0:	pop	{r4, r5, r6, pc}
   12ef4:	bl	b824 <__stack_chk_fail@plt>
   12ef8:	andeq	pc, r0, ip, lsl #3
   12efc:	strdeq	r0, [r0], -r8
   12f00:			; <UNDEFINED> instruction: 0xfffff874
   12f04:	push	{r4, lr}
   12f08:	mov	r4, r0
   12f0c:	ldr	r0, [r0]
   12f10:	bl	b2a8 <g_value_get_boxed@plt>
   12f14:	bl	b38c <g_slist_reverse@plt>
   12f18:	mov	r1, r0
   12f1c:	ldr	r0, [r4]
   12f20:	pop	{r4, lr}
   12f24:	b	b89c <g_value_take_boxed@plt>
   12f28:	push	{r4, r5, r6, lr}
   12f2c:	mov	r4, r0
   12f30:	ldr	r0, [r0]
   12f34:	mov	r6, r1
   12f38:	bl	b2a8 <g_value_get_boxed@plt>
   12f3c:	mov	r5, r0
   12f40:	mov	r0, r6
   12f44:	bl	11fe0 <dbus_g_value_build_g_variant@@Base+0xb5c>
   12f48:	mov	r1, r0
   12f4c:	mov	r0, r5
   12f50:	bl	b680 <g_slist_prepend@plt>
   12f54:	mov	r1, r0
   12f58:	ldr	r0, [r4]
   12f5c:	pop	{r4, r5, r6, lr}
   12f60:	b	b8d8 <g_value_set_static_boxed@plt>
   12f64:	ldr	r2, [pc, #140]	; 12ff8 <dbus_g_value_build_g_variant@@Base+0x1b74>
   12f68:	mov	r3, #0
   12f6c:	ldr	ip, [pc, #136]	; 12ffc <dbus_g_value_build_g_variant@@Base+0x1b78>
   12f70:	add	r2, pc, r2
   12f74:	push	{r4, r5, r6, r7, lr}
   12f78:	sub	sp, sp, #36	; 0x24
   12f7c:	ldr	r5, [r2, ip]
   12f80:	mov	r7, r0
   12f84:	mov	r6, r1
   12f88:	mov	r0, sp
   12f8c:	ldr	r1, [r7]
   12f90:	ldr	r2, [r5]
   12f94:	str	r3, [sp]
   12f98:	str	r3, [sp, #4]
   12f9c:	str	r3, [sp, #8]
   12fa0:	str	r3, [sp, #12]
   12fa4:	str	r2, [sp, #28]
   12fa8:	str	r3, [sp, #16]
   12fac:	str	r3, [sp, #20]
   12fb0:	bl	b8cc <g_value_init@plt>
   12fb4:	mov	r1, sp
   12fb8:	mov	r0, r7
   12fbc:	bl	b620 <g_value_copy@plt>
   12fc0:	mov	r0, sp
   12fc4:	ldr	r4, [r6]
   12fc8:	bl	11fe0 <dbus_g_value_build_g_variant@@Base+0xb5c>
   12fcc:	mov	r1, r0
   12fd0:	mov	r0, r4
   12fd4:	bl	b584 <g_slist_append@plt>
   12fd8:	ldr	r3, [sp, #28]
   12fdc:	str	r0, [r6]
   12fe0:	ldr	r2, [r5]
   12fe4:	cmp	r3, r2
   12fe8:	bne	12ff4 <dbus_g_value_build_g_variant@@Base+0x1b70>
   12fec:	add	sp, sp, #36	; 0x24
   12ff0:	pop	{r4, r5, r6, r7, pc}
   12ff4:	bl	b824 <__stack_chk_fail@plt>
   12ff8:	andeq	pc, r0, r8, lsl #1
   12ffc:	strdeq	r0, [r0], -r8
   13000:	ldr	r3, [pc, #208]	; 130d8 <dbus_g_value_build_g_variant@@Base+0x1c54>
   13004:	ldr	r2, [pc, #208]	; 130dc <dbus_g_value_build_g_variant@@Base+0x1c58>
   13008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1300c:	add	r3, pc, r3
   13010:	sub	sp, sp, #52	; 0x34
   13014:	str	r1, [sp, #8]
   13018:	ldr	r2, [r3, r2]
   1301c:	ldr	r3, [r2]
   13020:	str	r2, [sp, #12]
   13024:	str	r3, [sp, #44]	; 0x2c
   13028:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   1302c:	ldr	r2, [sp, #8]
   13030:	cmp	r2, #0
   13034:	mov	r5, r0
   13038:	beq	130b0 <dbus_g_value_build_g_variant@@Base+0x1c2c>
   1303c:	add	r7, sp, #16
   13040:	ldr	r6, [sp, #8]
   13044:	add	sl, sp, #20
   13048:	add	r9, sp, #36	; 0x24
   1304c:	add	r8, sp, #24
   13050:	mov	r4, r7
   13054:	mov	fp, #0
   13058:	add	r2, sp, #28
   1305c:	add	r3, sp, #32
   13060:	str	r2, [sp]
   13064:	str	r3, [sp, #4]
   13068:	mov	r1, r5
   1306c:	mov	r0, r4
   13070:	str	fp, [r7]
   13074:	mov	r7, r4
   13078:	str	fp, [sl]
   1307c:	str	fp, [r8]
   13080:	str	fp, [sp, #28]
   13084:	str	fp, [sp, #32]
   13088:	str	fp, [r9]
   1308c:	bl	b8cc <g_value_init@plt>
   13090:	ldr	r1, [r6]
   13094:	mov	r0, r4
   13098:	bl	127d4 <dbus_g_value_build_g_variant@@Base+0x1350>
   1309c:	mov	r0, r4
   130a0:	bl	b284 <g_value_unset@plt>
   130a4:	ldr	r6, [r6, #4]
   130a8:	cmp	r6, #0
   130ac:	bne	13068 <dbus_g_value_build_g_variant@@Base+0x1be4>
   130b0:	ldr	r0, [sp, #8]
   130b4:	bl	b2e4 <g_slist_free@plt>
   130b8:	ldr	r1, [sp, #12]
   130bc:	ldr	r2, [sp, #44]	; 0x2c
   130c0:	ldr	r3, [r1]
   130c4:	cmp	r2, r3
   130c8:	bne	130d4 <dbus_g_value_build_g_variant@@Base+0x1c50>
   130cc:	add	sp, sp, #52	; 0x34
   130d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130d4:	bl	b824 <__stack_chk_fail@plt>
   130d8:	andeq	lr, r0, ip, ror #31
   130dc:	strdeq	r0, [r0], -r8
   130e0:	ldr	ip, [pc, #116]	; 1315c <dbus_g_value_build_g_variant@@Base+0x1cd8>
   130e4:	push	{r4, r5, r6, r7, r8, r9, lr}
   130e8:	add	ip, pc, ip
   130ec:	ldr	lr, [pc, #108]	; 13160 <dbus_g_value_build_g_variant@@Base+0x1cdc>
   130f0:	mov	r8, r3
   130f4:	sub	sp, sp, #28
   130f8:	mov	r5, r1
   130fc:	mov	r6, r2
   13100:	mov	r7, r0
   13104:	ldr	r4, [ip, lr]
   13108:	ldr	r3, [r4]
   1310c:	str	r3, [sp, #20]
   13110:	bl	1046c <dbus_g_type_get_map_key_specialization@@Base>
   13114:	mov	r9, r0
   13118:	mov	r0, r7
   1311c:	bl	104b8 <dbus_g_type_get_map_value_specialization@@Base>
   13120:	ldr	r1, [pc, #60]	; 13164 <dbus_g_value_build_g_variant@@Base+0x1ce0>
   13124:	add	r2, sp, #4
   13128:	stmib	sp, {r6, r9}
   1312c:	add	r1, pc, r1
   13130:	str	r8, [sp, #16]
   13134:	str	r0, [sp, #12]
   13138:	mov	r0, r5
   1313c:	bl	b650 <g_hash_table_foreach@plt>
   13140:	ldr	r2, [sp, #20]
   13144:	ldr	r3, [r4]
   13148:	cmp	r2, r3
   1314c:	bne	13158 <dbus_g_value_build_g_variant@@Base+0x1cd4>
   13150:	add	sp, sp, #28
   13154:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13158:	bl	b824 <__stack_chk_fail@plt>
   1315c:	andeq	lr, r0, r0, lsl pc
   13160:	strdeq	r0, [r0], -r8
   13164:			; <UNDEFINED> instruction: 0xfffffa50
   13168:	b	b968 <g_hash_table_unref@plt>
   1316c:	mov	r0, r1
   13170:	b	b6bc <g_value_array_copy@plt>
   13174:	ldr	r3, [pc, #220]	; 13258 <dbus_g_value_build_g_variant@@Base+0x1dd4>
   13178:	ldr	r2, [pc, #220]	; 1325c <dbus_g_value_build_g_variant@@Base+0x1dd8>
   1317c:	add	r3, pc, r3
   13180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13184:	sub	sp, sp, #60	; 0x3c
   13188:	ldr	r2, [r3, r2]
   1318c:	mov	r7, r0
   13190:	ldr	r3, [r2]
   13194:	str	r2, [sp, #20]
   13198:	str	r3, [sp, #52]	; 0x34
   1319c:	bl	10554 <dbus_g_type_get_struct_size@@Base>
   131a0:	mov	r6, r0
   131a4:	bl	b9e0 <g_value_array_new@plt>
   131a8:	cmp	r6, #0
   131ac:	mov	r5, r0
   131b0:	beq	13234 <dbus_g_value_build_g_variant@@Base+0x1db0>
   131b4:	add	sl, sp, #24
   131b8:	mov	r9, #0
   131bc:	add	fp, sp, #28
   131c0:	mov	r8, r9
   131c4:	mov	r4, sl
   131c8:	add	r2, sp, #32
   131cc:	add	r3, sp, #36	; 0x24
   131d0:	str	r2, [sp, #16]
   131d4:	str	r3, [sp, #4]
   131d8:	add	r2, sp, #40	; 0x28
   131dc:	add	r3, sp, #44	; 0x2c
   131e0:	str	r2, [sp, #8]
   131e4:	str	r3, [sp, #12]
   131e8:	mov	r1, r9
   131ec:	mov	r0, r7
   131f0:	str	r8, [sl]
   131f4:	add	r9, r9, #1
   131f8:	str	r8, [fp]
   131fc:	mov	sl, r4
   13200:	str	r8, [sp, #32]
   13204:	str	r8, [sp, #36]	; 0x24
   13208:	str	r8, [sp, #40]	; 0x28
   1320c:	str	r8, [sp, #44]	; 0x2c
   13210:	bl	10504 <dbus_g_type_get_struct_member_type@@Base>
   13214:	mov	r1, r0
   13218:	mov	r0, r4
   1321c:	bl	b8cc <g_value_init@plt>
   13220:	mov	r0, r5
   13224:	mov	r1, r4
   13228:	bl	b500 <g_value_array_append@plt>
   1322c:	cmp	r9, r6
   13230:	bne	131e8 <dbus_g_value_build_g_variant@@Base+0x1d64>
   13234:	ldr	r1, [sp, #20]
   13238:	mov	r0, r5
   1323c:	ldr	r2, [sp, #52]	; 0x34
   13240:	ldr	r3, [r1]
   13244:	cmp	r2, r3
   13248:	bne	13254 <dbus_g_value_build_g_variant@@Base+0x1dd0>
   1324c:	add	sp, sp, #60	; 0x3c
   13250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13254:	bl	b824 <__stack_chk_fail@plt>
   13258:	andeq	lr, r0, ip, ror lr
   1325c:	strdeq	r0, [r0], -r8
   13260:	push	{r4, r5, r6, lr}
   13264:	sub	r3, r0, #12
   13268:	ldr	r5, [pc, #300]	; 1339c <dbus_g_value_build_g_variant@@Base+0x1f18>
   1326c:	mov	r4, r0
   13270:	mov	r6, r1
   13274:	add	r5, pc, r5
   13278:	cmp	r3, #52	; 0x34
   1327c:	addls	pc, pc, r3, lsl #2
   13280:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13284:	b	13384 <dbus_g_value_build_g_variant@@Base+0x1f00>
   13288:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   1328c:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13290:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13294:	b	13384 <dbus_g_value_build_g_variant@@Base+0x1f00>
   13298:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   1329c:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132a0:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132a4:	b	13384 <dbus_g_value_build_g_variant@@Base+0x1f00>
   132a8:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132ac:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132b0:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132b4:	b	13384 <dbus_g_value_build_g_variant@@Base+0x1f00>
   132b8:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132bc:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132c0:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132c4:	b	13384 <dbus_g_value_build_g_variant@@Base+0x1f00>
   132c8:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132cc:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132d0:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132d4:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132d8:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132dc:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132e0:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132e4:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132e8:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132ec:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132f0:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132f4:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132f8:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   132fc:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13300:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13304:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13308:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   1330c:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13310:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13314:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13318:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   1331c:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13320:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13324:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13328:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   1332c:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13330:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13334:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13338:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   1333c:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13340:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13344:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13348:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   1334c:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13350:	b	13358 <dbus_g_value_build_g_variant@@Base+0x1ed4>
   13354:	b	13370 <dbus_g_value_build_g_variant@@Base+0x1eec>
   13358:	bl	b764 <dbus_g_object_path_get_g_type@plt>
   1335c:	cmp	r4, r0
   13360:	beq	13370 <dbus_g_value_build_g_variant@@Base+0x1eec>
   13364:	bl	baa0 <dbus_g_signature_get_g_type@plt>
   13368:	cmp	r4, r0
   1336c:	bne	13394 <dbus_g_value_build_g_variant@@Base+0x1f10>
   13370:	ldr	r3, [pc, #40]	; 133a0 <dbus_g_value_build_g_variant@@Base+0x1f1c>
   13374:	mov	r0, #1
   13378:	ldr	r3, [r5, r3]
   1337c:	str	r3, [r6]
   13380:	pop	{r4, r5, r6, pc}
   13384:	mov	r3, #0
   13388:	mov	r0, #1
   1338c:	str	r3, [r1]
   13390:	pop	{r4, r5, r6, pc}
   13394:	mov	r0, #0
   13398:	pop	{r4, r5, r6, pc}
   1339c:	andeq	lr, r0, r4, lsl #27
   133a0:	andeq	r0, r0, ip, ror #5
   133a4:	push	{r4, r5, r6, lr}
   133a8:	mov	r4, r2
   133ac:	mov	r6, r1
   133b0:	mov	r5, r3
   133b4:	bl	10554 <dbus_g_type_get_struct_size@@Base>
   133b8:	cmp	r0, r4
   133bc:	bhi	133c8 <dbus_g_value_build_g_variant@@Base+0x1f44>
   133c0:	mov	r0, #0
   133c4:	pop	{r4, r5, r6, pc}
   133c8:	mov	r1, r4
   133cc:	mov	r0, r6
   133d0:	bl	b9b0 <g_value_array_get_nth@plt>
   133d4:	mov	r1, r0
   133d8:	mov	r0, r5
   133dc:	bl	b620 <g_value_copy@plt>
   133e0:	mov	r0, #1
   133e4:	pop	{r4, r5, r6, pc}
   133e8:	push	{r4, r5, r6, lr}
   133ec:	mov	r4, r2
   133f0:	mov	r6, r1
   133f4:	mov	r5, r3
   133f8:	bl	10554 <dbus_g_type_get_struct_size@@Base>
   133fc:	cmp	r0, r4
   13400:	bhi	1340c <dbus_g_value_build_g_variant@@Base+0x1f88>
   13404:	mov	r0, #0
   13408:	pop	{r4, r5, r6, pc}
   1340c:	mov	r1, r4
   13410:	mov	r0, r6
   13414:	bl	b9b0 <g_value_array_get_nth@plt>
   13418:	mov	r1, r5
   1341c:	bl	b620 <g_value_copy@plt>
   13420:	mov	r0, #1
   13424:	pop	{r4, r5, r6, pc}
   13428:	push	{r4, r5, r6, r7, r8, r9, lr}
   1342c:	sub	sp, sp, #12
   13430:	ldr	r4, [pc, #632]	; 136b0 <dbus_g_value_build_g_variant@@Base+0x222c>
   13434:	sub	r3, r0, #12
   13438:	ldr	r2, [pc, #628]	; 136b4 <dbus_g_value_build_g_variant@@Base+0x2230>
   1343c:	mov	r5, r0
   13440:	add	r4, pc, r4
   13444:	mov	r7, r1
   13448:	ldr	r6, [r4, r2]
   1344c:	ldr	r2, [r6]
   13450:	str	r2, [sp, #4]
   13454:	cmp	r3, #52	; 0x34
   13458:	addls	pc, pc, r3, lsl #2
   1345c:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13460:	b	1355c <dbus_g_value_build_g_variant@@Base+0x20d8>
   13464:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13468:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   1346c:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13470:	b	1355c <dbus_g_value_build_g_variant@@Base+0x20d8>
   13474:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13478:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   1347c:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13480:	b	1355c <dbus_g_value_build_g_variant@@Base+0x20d8>
   13484:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13488:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   1348c:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13490:	b	1355c <dbus_g_value_build_g_variant@@Base+0x20d8>
   13494:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13498:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   1349c:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134a0:	b	1355c <dbus_g_value_build_g_variant@@Base+0x20d8>
   134a4:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134a8:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134ac:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134b0:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134b4:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134b8:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134bc:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134c0:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134c4:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134c8:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134cc:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134d0:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134d4:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134d8:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134dc:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134e0:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134e4:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134e8:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134ec:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134f0:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134f4:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134f8:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   134fc:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13500:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13504:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13508:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   1350c:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13510:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13514:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13518:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   1351c:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13520:	b	13534 <dbus_g_value_build_g_variant@@Base+0x20b0>
   13524:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13528:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   1352c:	b	1356c <dbus_g_value_build_g_variant@@Base+0x20e8>
   13530:	b	13534 <dbus_g_value_build_g_variant@@Base+0x20b0>
   13534:	ldr	r3, [pc, #380]	; 136b8 <dbus_g_value_build_g_variant@@Base+0x2234>
   13538:	mov	r0, #1
   1353c:	ldr	r3, [r4, r3]
   13540:	str	r3, [r7]
   13544:	ldr	r2, [sp, #4]
   13548:	ldr	r3, [r6]
   1354c:	cmp	r2, r3
   13550:	bne	136ac <dbus_g_value_build_g_variant@@Base+0x2228>
   13554:	add	sp, sp, #12
   13558:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1355c:	mov	r3, #0
   13560:	mov	r0, #1
   13564:	str	r3, [r1]
   13568:	b	13544 <dbus_g_value_build_g_variant@@Base+0x20c0>
   1356c:	bl	b554 <g_value_get_type@plt>
   13570:	cmp	r5, r0
   13574:	beq	135fc <dbus_g_value_build_g_variant@@Base+0x2178>
   13578:	bl	b794 <g_value_array_get_type@plt>
   1357c:	cmp	r5, r0
   13580:	beq	13610 <dbus_g_value_build_g_variant@@Base+0x218c>
   13584:	bl	b7e8 <g_strv_get_type@plt>
   13588:	cmp	r5, r0
   1358c:	beq	13640 <dbus_g_value_build_g_variant@@Base+0x21bc>
   13590:	bl	b764 <dbus_g_object_path_get_g_type@plt>
   13594:	cmp	r5, r0
   13598:	beq	13534 <dbus_g_value_build_g_variant@@Base+0x20b0>
   1359c:	bl	baa0 <dbus_g_signature_get_g_type@plt>
   135a0:	cmp	r5, r0
   135a4:	beq	13534 <dbus_g_value_build_g_variant@@Base+0x20b0>
   135a8:	mov	r0, r5
   135ac:	bl	10274 <dbus_g_type_is_collection@@Base>
   135b0:	cmp	r0, #0
   135b4:	mov	r0, r5
   135b8:	bne	13624 <dbus_g_value_build_g_variant@@Base+0x21a0>
   135bc:	bl	10300 <dbus_g_type_is_map@@Base>
   135c0:	cmp	r0, #0
   135c4:	mov	r0, r5
   135c8:	beq	13654 <dbus_g_value_build_g_variant@@Base+0x21d0>
   135cc:	bl	1046c <dbus_g_type_get_map_key_specialization@@Base>
   135d0:	mov	r8, r0
   135d4:	mov	r0, r5
   135d8:	bl	104b8 <dbus_g_type_get_map_value_specialization@@Base>
   135dc:	mov	r1, sp
   135e0:	mov	r9, r0
   135e4:	mov	r0, r8
   135e8:	bl	13428 <dbus_g_value_build_g_variant@@Base+0x1fa4>
   135ec:	cmp	r0, #0
   135f0:	bne	13680 <dbus_g_value_build_g_variant@@Base+0x21fc>
   135f4:	mov	r0, #0
   135f8:	b	13544 <dbus_g_value_build_g_variant@@Base+0x20c0>
   135fc:	ldr	r3, [pc, #184]	; 136bc <dbus_g_value_build_g_variant@@Base+0x2238>
   13600:	mov	r0, #1
   13604:	add	r3, pc, r3
   13608:	str	r3, [r7]
   1360c:	b	13544 <dbus_g_value_build_g_variant@@Base+0x20c0>
   13610:	ldr	r3, [pc, #168]	; 136c0 <dbus_g_value_build_g_variant@@Base+0x223c>
   13614:	mov	r0, #1
   13618:	ldr	r3, [r4, r3]
   1361c:	str	r3, [r7]
   13620:	b	13544 <dbus_g_value_build_g_variant@@Base+0x20c0>
   13624:	bl	102a8 <dbus_g_type_collection_peek_vtable@@Base>
   13628:	ldr	r3, [r0, #12]
   1362c:	cmp	r3, #0
   13630:	beq	135f4 <dbus_g_value_build_g_variant@@Base+0x2170>
   13634:	str	r3, [r7]
   13638:	mov	r0, #1
   1363c:	b	13544 <dbus_g_value_build_g_variant@@Base+0x20c0>
   13640:	ldr	r3, [pc, #124]	; 136c4 <dbus_g_value_build_g_variant@@Base+0x2240>
   13644:	mov	r0, #1
   13648:	ldr	r3, [r4, r3]
   1364c:	str	r3, [r7]
   13650:	b	13544 <dbus_g_value_build_g_variant@@Base+0x20c0>
   13654:	bl	10390 <dbus_g_type_is_struct@@Base>
   13658:	cmp	r0, #0
   1365c:	beq	135f4 <dbus_g_value_build_g_variant@@Base+0x2170>
   13660:	mov	r0, r5
   13664:	bl	103c8 <dbus_g_type_struct_peek_vtable@@Base>
   13668:	ldr	r3, [r0, #12]
   1366c:	cmp	r3, #0
   13670:	beq	135f4 <dbus_g_value_build_g_variant@@Base+0x2170>
   13674:	mov	r0, #1
   13678:	str	r3, [r7]
   1367c:	b	13544 <dbus_g_value_build_g_variant@@Base+0x20c0>
   13680:	mov	r0, r9
   13684:	mov	r1, sp
   13688:	bl	13428 <dbus_g_value_build_g_variant@@Base+0x1fa4>
   1368c:	cmp	r0, #0
   13690:	beq	135f4 <dbus_g_value_build_g_variant@@Base+0x2170>
   13694:	mov	r0, r5
   13698:	bl	10338 <dbus_g_type_map_peek_vtable@@Base>
   1369c:	ldr	r3, [r0, #12]
   136a0:	cmp	r3, #0
   136a4:	bne	13634 <dbus_g_value_build_g_variant@@Base+0x21b0>
   136a8:	b	135f4 <dbus_g_value_build_g_variant@@Base+0x2170>
   136ac:	bl	b824 <__stack_chk_fail@plt>
   136b0:			; <UNDEFINED> instruction: 0x0000ebb8
   136b4:	strdeq	r0, [r0], -r8
   136b8:	andeq	r0, r0, r4, ror #5
   136bc:			; <UNDEFINED> instruction: 0xffffe9bc
   136c0:	strdeq	r0, [r0], -r4
   136c4:	andeq	r0, r0, r0, lsl #6
   136c8:	ldr	r2, [pc, #160]	; 13770 <dbus_g_value_build_g_variant@@Base+0x22ec>
   136cc:	mov	r3, #0
   136d0:	push	{r4, r5, r6, r7, lr}
   136d4:	mov	r5, r1
   136d8:	ldr	r1, [pc, #148]	; 13774 <dbus_g_value_build_g_variant@@Base+0x22f0>
   136dc:	add	r2, pc, r2
   136e0:	sub	sp, sp, #20
   136e4:	mov	r7, r0
   136e8:	ldr	r4, [r2, r1]
   136ec:	str	r3, [sp, #4]
   136f0:	str	r3, [sp, #8]
   136f4:	ldr	r3, [r4]
   136f8:	str	r3, [sp, #12]
   136fc:	bl	1046c <dbus_g_type_get_map_key_specialization@@Base>
   13700:	str	r0, [sp, #4]
   13704:	mov	r0, r7
   13708:	bl	104b8 <dbus_g_type_get_map_value_specialization@@Base>
   1370c:	mov	r1, sp
   13710:	str	r0, [sp, #8]
   13714:	ldr	r0, [sp, #4]
   13718:	bl	13428 <dbus_g_value_build_g_variant@@Base+0x1fa4>
   1371c:	cmp	r0, #0
   13720:	beq	13738 <dbus_g_value_build_g_variant@@Base+0x22b4>
   13724:	mov	r1, sp
   13728:	ldr	r0, [sp, #8]
   1372c:	bl	13428 <dbus_g_value_build_g_variant@@Base+0x1fa4>
   13730:	cmp	r0, #0
   13734:	bne	1374c <dbus_g_value_build_g_variant@@Base+0x22c8>
   13738:	ldr	r1, [pc, #56]	; 13778 <dbus_g_value_build_g_variant@@Base+0x22f4>
   1373c:	mov	r0, r5
   13740:	add	r2, sp, #4
   13744:	add	r1, pc, r1
   13748:	bl	b800 <g_hash_table_foreach_steal@plt>
   1374c:	mov	r0, r5
   13750:	bl	b968 <g_hash_table_unref@plt>
   13754:	ldr	r2, [sp, #12]
   13758:	ldr	r3, [r4]
   1375c:	cmp	r2, r3
   13760:	bne	1376c <dbus_g_value_build_g_variant@@Base+0x22e8>
   13764:	add	sp, sp, #20
   13768:	pop	{r4, r5, r6, r7, pc}
   1376c:	bl	b824 <__stack_chk_fail@plt>
   13770:	andeq	lr, r0, ip, lsl r9
   13774:	strdeq	r0, [r0], -r8
   13778:			; <UNDEFINED> instruction: 0xfffff504
   1377c:	sub	r0, r0, #12
   13780:	cmp	r0, #48	; 0x30
   13784:	bhi	137a0 <dbus_g_value_build_g_variant@@Base+0x231c>
   13788:	ldr	r3, [pc, #24]	; 137a8 <dbus_g_value_build_g_variant@@Base+0x2324>
   1378c:	add	r3, pc, r3
   13790:	ldrb	r0, [r3, r0]
   13794:	adds	r0, r0, #0
   13798:	movne	r0, #1
   1379c:	bx	lr
   137a0:	mov	r0, #0
   137a4:	bx	lr
   137a8:	andeq	r4, r0, ip, lsl #31
   137ac:	push	{r4, r5, r6, lr}
   137b0:	mov	r5, r3
   137b4:	mov	r4, r1
   137b8:	mov	r6, r2
   137bc:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   137c0:	bl	1377c <dbus_g_value_build_g_variant@@Base+0x22f8>
   137c4:	cmp	r0, #0
   137c8:	ldrne	r3, [r4]
   137cc:	movne	r0, #1
   137d0:	strne	r3, [r6]
   137d4:	ldrne	r3, [r4, #4]
   137d8:	strne	r3, [r5]
   137dc:	pop	{r4, r5, r6, pc}
   137e0:	sub	r0, r0, #12
   137e4:	cmp	r0, #48	; 0x30
   137e8:	bhi	137fc <dbus_g_value_build_g_variant@@Base+0x2378>
   137ec:	ldr	r3, [pc, #16]	; 13804 <dbus_g_value_build_g_variant@@Base+0x2380>
   137f0:	add	r3, pc, r3
   137f4:	ldrb	r0, [r3, r0]
   137f8:	bx	lr
   137fc:	mov	r0, #0
   13800:	bx	lr
   13804:	andeq	r4, r0, r8, lsr #30
   13808:	push	{r3, lr}
   1380c:	bl	10420 <dbus_g_type_get_collection_specialization@@Base>
   13810:	bl	137e0 <dbus_g_value_build_g_variant@@Base+0x235c>
   13814:	pop	{r3, lr}
   13818:	mov	r2, r0
   1381c:	mov	r0, #1
   13820:	mov	r1, r0
   13824:	b	b428 <g_array_new@plt>
   13828:	push	{r3, r4, r5, lr}
   1382c:	mov	r4, r1
   13830:	bl	13808 <dbus_g_value_build_g_variant@@Base+0x2384>
   13834:	ldm	r4, {r1, r2}
   13838:	mov	r5, r0
   1383c:	bl	ba34 <g_array_append_vals@plt>
   13840:	mov	r0, r5
   13844:	pop	{r3, r4, r5, pc}
   13848:	push	{r3, r4, r5, lr}
   1384c:	mov	r4, r0
   13850:	ldr	r0, [r0]
   13854:	mov	r5, r1
   13858:	bl	b638 <g_type_fundamental@plt>
   1385c:	sub	r0, r0, #12
   13860:	cmp	r0, #68	; 0x44
   13864:	addls	pc, pc, r0, lsl #2
   13868:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1386c:	b	13998 <dbus_g_value_build_g_variant@@Base+0x2514>
   13870:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13874:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13878:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1387c:	b	139ac <dbus_g_value_build_g_variant@@Base+0x2528>
   13880:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13884:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13888:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1388c:	b	139c0 <dbus_g_value_build_g_variant@@Base+0x253c>
   13890:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13894:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13898:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1389c:	b	139d4 <dbus_g_value_build_g_variant@@Base+0x2550>
   138a0:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138a4:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138a8:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138ac:	b	139e8 <dbus_g_value_build_g_variant@@Base+0x2564>
   138b0:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138b4:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138b8:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138bc:	b	139fc <dbus_g_value_build_g_variant@@Base+0x2578>
   138c0:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138c4:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138c8:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138cc:	b	13a10 <dbus_g_value_build_g_variant@@Base+0x258c>
   138d0:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138d4:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138d8:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138dc:	b	13a24 <dbus_g_value_build_g_variant@@Base+0x25a0>
   138e0:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138e4:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138e8:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138ec:	b	13a38 <dbus_g_value_build_g_variant@@Base+0x25b4>
   138f0:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138f4:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138f8:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   138fc:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13900:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13904:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13908:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1390c:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13910:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13914:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13918:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1391c:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13920:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13924:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13928:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1392c:	b	13a4c <dbus_g_value_build_g_variant@@Base+0x25c8>
   13930:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13934:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13938:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1393c:	b	13a60 <dbus_g_value_build_g_variant@@Base+0x25dc>
   13940:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13944:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13948:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1394c:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13950:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13954:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13958:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1395c:	b	13a74 <dbus_g_value_build_g_variant@@Base+0x25f0>
   13960:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13964:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13968:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1396c:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13970:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13974:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   13978:	b	13a88 <dbus_g_value_build_g_variant@@Base+0x2604>
   1397c:	b	13980 <dbus_g_value_build_g_variant@@Base+0x24fc>
   13980:	mov	r0, r4
   13984:	bl	b710 <g_value_get_object@plt>
   13988:	mov	r3, #1
   1398c:	str	r0, [r5]
   13990:	mov	r0, r3
   13994:	pop	{r3, r4, r5, pc}
   13998:	mov	r0, r4
   1399c:	bl	b5c0 <g_value_get_char@plt>
   139a0:	mov	r3, #1
   139a4:	strb	r0, [r5]
   139a8:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   139ac:	mov	r0, r4
   139b0:	bl	b980 <g_value_get_uchar@plt>
   139b4:	mov	r3, #1
   139b8:	strb	r0, [r5]
   139bc:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   139c0:	mov	r0, r4
   139c4:	bl	b53c <g_value_get_boolean@plt>
   139c8:	mov	r3, #1
   139cc:	str	r0, [r5]
   139d0:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   139d4:	mov	r0, r4
   139d8:	bl	b9d4 <g_value_get_int@plt>
   139dc:	mov	r3, #1
   139e0:	str	r0, [r5]
   139e4:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   139e8:	mov	r0, r4
   139ec:	bl	b464 <g_value_get_uint@plt>
   139f0:	mov	r3, #1
   139f4:	str	r0, [r5]
   139f8:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   139fc:	mov	r0, r4
   13a00:	bl	b524 <g_value_get_long@plt>
   13a04:	mov	r3, #1
   13a08:	str	r0, [r5]
   13a0c:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   13a10:	mov	r0, r4
   13a14:	bl	b938 <g_value_get_ulong@plt>
   13a18:	mov	r3, #1
   13a1c:	str	r0, [r5]
   13a20:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   13a24:	mov	r0, r4
   13a28:	bl	b9ec <g_value_get_int64@plt>
   13a2c:	mov	r3, #1
   13a30:	strd	r0, [r5]
   13a34:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   13a38:	mov	r0, r4
   13a3c:	bl	b71c <g_value_get_uint64@plt>
   13a40:	mov	r3, #1
   13a44:	strd	r0, [r5]
   13a48:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   13a4c:	mov	r0, r4
   13a50:	bl	b3d4 <g_value_get_double@plt>
   13a54:	mov	r3, #1
   13a58:	vstr	d0, [r5]
   13a5c:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   13a60:	mov	r0, r4
   13a64:	bl	b344 <g_value_get_string@plt>
   13a68:	mov	r3, #1
   13a6c:	str	r0, [r5]
   13a70:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   13a74:	mov	r0, r4
   13a78:	bl	b2a8 <g_value_get_boxed@plt>
   13a7c:	mov	r3, #1
   13a80:	str	r0, [r5]
   13a84:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   13a88:	mov	r3, #0
   13a8c:	b	13990 <dbus_g_value_build_g_variant@@Base+0x250c>
   13a90:	push	{r3, r4, r5, lr}
   13a94:	mov	r4, r0
   13a98:	ldr	r0, [r0]
   13a9c:	mov	r5, r1
   13aa0:	bl	b638 <g_type_fundamental@plt>
   13aa4:	sub	r0, r0, #12
   13aa8:	cmp	r0, #68	; 0x44
   13aac:	addls	pc, pc, r0, lsl #2
   13ab0:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13ab4:	b	13bdc <dbus_g_value_build_g_variant@@Base+0x2758>
   13ab8:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13abc:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13ac0:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13ac4:	b	13bf0 <dbus_g_value_build_g_variant@@Base+0x276c>
   13ac8:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13acc:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13ad0:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13ad4:	b	13c04 <dbus_g_value_build_g_variant@@Base+0x2780>
   13ad8:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13adc:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13ae0:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13ae4:	b	13c18 <dbus_g_value_build_g_variant@@Base+0x2794>
   13ae8:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13aec:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13af0:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13af4:	b	13c2c <dbus_g_value_build_g_variant@@Base+0x27a8>
   13af8:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13afc:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b00:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b04:	b	13c40 <dbus_g_value_build_g_variant@@Base+0x27bc>
   13b08:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b0c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b10:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b14:	b	13c54 <dbus_g_value_build_g_variant@@Base+0x27d0>
   13b18:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b1c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b20:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b24:	b	13c68 <dbus_g_value_build_g_variant@@Base+0x27e4>
   13b28:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b2c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b30:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b34:	b	13c7c <dbus_g_value_build_g_variant@@Base+0x27f8>
   13b38:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b3c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b40:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b44:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b48:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b4c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b50:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b54:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b58:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b5c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b60:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b64:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b68:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b6c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b70:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b74:	b	13c90 <dbus_g_value_build_g_variant@@Base+0x280c>
   13b78:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b7c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b80:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b84:	b	13ca4 <dbus_g_value_build_g_variant@@Base+0x2820>
   13b88:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b8c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b90:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b94:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b98:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13b9c:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13ba0:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13ba4:	b	13cb8 <dbus_g_value_build_g_variant@@Base+0x2834>
   13ba8:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13bac:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13bb0:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13bb4:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13bb8:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13bbc:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13bc0:	b	13ccc <dbus_g_value_build_g_variant@@Base+0x2848>
   13bc4:	b	13bc8 <dbus_g_value_build_g_variant@@Base+0x2744>
   13bc8:	mov	r0, r4
   13bcc:	ldr	r1, [r5]
   13bd0:	bl	b8f0 <g_value_set_object@plt>
   13bd4:	mov	r0, #1
   13bd8:	pop	{r3, r4, r5, pc}
   13bdc:	mov	r0, r4
   13be0:	ldrb	r1, [r5]
   13be4:	bl	b860 <g_value_set_char@plt>
   13be8:	mov	r0, #1
   13bec:	pop	{r3, r4, r5, pc}
   13bf0:	mov	r0, r4
   13bf4:	ldrb	r1, [r5]
   13bf8:	bl	b6a4 <g_value_set_uchar@plt>
   13bfc:	mov	r0, #1
   13c00:	pop	{r3, r4, r5, pc}
   13c04:	mov	r0, r4
   13c08:	ldr	r1, [r5]
   13c0c:	bl	b3b0 <g_value_set_boolean@plt>
   13c10:	mov	r0, #1
   13c14:	pop	{r3, r4, r5, pc}
   13c18:	mov	r0, r4
   13c1c:	ldr	r1, [r5]
   13c20:	bl	b434 <g_value_set_int@plt>
   13c24:	mov	r0, #1
   13c28:	pop	{r3, r4, r5, pc}
   13c2c:	mov	r0, r4
   13c30:	ldr	r1, [r5]
   13c34:	bl	b944 <g_value_set_uint@plt>
   13c38:	mov	r0, #1
   13c3c:	pop	{r3, r4, r5, pc}
   13c40:	mov	r0, r4
   13c44:	ldr	r1, [r5]
   13c48:	bl	b5f0 <g_value_set_long@plt>
   13c4c:	mov	r0, #1
   13c50:	pop	{r3, r4, r5, pc}
   13c54:	mov	r0, r4
   13c58:	ldr	r1, [r5]
   13c5c:	bl	ba04 <g_value_set_ulong@plt>
   13c60:	mov	r0, #1
   13c64:	pop	{r3, r4, r5, pc}
   13c68:	mov	r0, r4
   13c6c:	ldrd	r2, [r5]
   13c70:	bl	b260 <g_value_set_int64@plt>
   13c74:	mov	r0, #1
   13c78:	pop	{r3, r4, r5, pc}
   13c7c:	mov	r0, r4
   13c80:	ldrd	r2, [r5]
   13c84:	bl	b578 <g_value_set_uint64@plt>
   13c88:	mov	r0, #1
   13c8c:	pop	{r3, r4, r5, pc}
   13c90:	mov	r0, r4
   13c94:	vldr	d0, [r5]
   13c98:	bl	b65c <g_value_set_double@plt>
   13c9c:	mov	r0, #1
   13ca0:	pop	{r3, r4, r5, pc}
   13ca4:	mov	r0, r4
   13ca8:	ldr	r1, [r5]
   13cac:	bl	b5fc <g_value_set_string@plt>
   13cb0:	mov	r0, #1
   13cb4:	pop	{r3, r4, r5, pc}
   13cb8:	mov	r0, r4
   13cbc:	ldr	r1, [r5]
   13cc0:	bl	b56c <g_value_set_boxed@plt>
   13cc4:	mov	r0, #1
   13cc8:	pop	{r3, r4, r5, pc}
   13ccc:	mov	r0, #0
   13cd0:	pop	{r3, r4, r5, pc}
   13cd4:	push	{r4, r5, lr}
   13cd8:	mov	r4, r0
   13cdc:	sub	sp, sp, #12
   13ce0:	ldr	r0, [r0]
   13ce4:	mov	r5, r1
   13ce8:	bl	b2fc <g_type_value_table_peek@plt>
   13cec:	mov	r2, r5
   13cf0:	mov	r1, #1
   13cf4:	mov	r3, #134217728	; 0x8000000
   13cf8:	ldr	ip, [r0, #20]
   13cfc:	mov	r0, r4
   13d00:	blx	ip
   13d04:	subs	r5, r0, #0
   13d08:	beq	13d40 <dbus_g_value_build_g_variant@@Base+0x28bc>
   13d0c:	ldr	r2, [pc, #68]	; 13d58 <dbus_g_value_build_g_variant@@Base+0x28d4>
   13d10:	mov	r1, #16
   13d14:	ldr	r3, [pc, #64]	; 13d5c <dbus_g_value_build_g_variant@@Base+0x28d8>
   13d18:	mov	r0, #0
   13d1c:	add	r2, pc, r2
   13d20:	str	r5, [sp]
   13d24:	add	r3, pc, r3
   13d28:	bl	ba58 <g_log@plt>
   13d2c:	mov	r0, r5
   13d30:	bl	b248 <g_free@plt>
   13d34:	mov	r0, #0
   13d38:	add	sp, sp, #12
   13d3c:	pop	{r4, r5, pc}
   13d40:	ldr	r3, [r4, #16]
   13d44:	mov	r0, #1
   13d48:	bic	r3, r3, #134217728	; 0x8000000
   13d4c:	str	r3, [r4, #16]
   13d50:	add	sp, sp, #12
   13d54:	pop	{r4, r5, pc}
   13d58:	andeq	r4, r0, r0, asr #3
   13d5c:	andeq	r4, r0, ip, asr #25
   13d60:	sub	r0, r0, #20
   13d64:	cmp	r0, #60	; 0x3c
   13d68:	addls	pc, pc, r0, lsl #2
   13d6c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13d70:	b	13e6c <dbus_g_value_build_g_variant@@Base+0x29e8>
   13d74:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13d78:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13d7c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13d80:	b	13e6c <dbus_g_value_build_g_variant@@Base+0x29e8>
   13d84:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13d88:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13d8c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13d90:	b	13e6c <dbus_g_value_build_g_variant@@Base+0x29e8>
   13d94:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13d98:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13d9c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13da0:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13da4:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13da8:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dac:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13db0:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13db4:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13db8:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dbc:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dc0:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dc4:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dc8:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dcc:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dd0:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dd4:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dd8:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13ddc:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13de0:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13de4:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13de8:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dec:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13df0:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13df4:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13df8:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13dfc:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e00:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e04:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e08:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e0c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e10:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e14:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e18:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e1c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e20:	b	13e6c <dbus_g_value_build_g_variant@@Base+0x29e8>
   13e24:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e28:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e2c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e30:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e34:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e38:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e3c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e40:	b	13e6c <dbus_g_value_build_g_variant@@Base+0x29e8>
   13e44:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e48:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e4c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e50:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e54:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e58:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e5c:	b	13e64 <dbus_g_value_build_g_variant@@Base+0x29e0>
   13e60:	b	13e6c <dbus_g_value_build_g_variant@@Base+0x29e8>
   13e64:	mov	r0, #0
   13e68:	bx	lr
   13e6c:	mov	r0, #1
   13e70:	bx	lr
   13e74:	push	{r4, lr}
   13e78:	mov	r4, r0
   13e7c:	ldr	r0, [r0]
   13e80:	bl	b638 <g_type_fundamental@plt>
   13e84:	sub	r0, r0, #20
   13e88:	cmp	r0, #60	; 0x3c
   13e8c:	addls	pc, pc, r0, lsl #2
   13e90:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13e94:	b	13f9c <dbus_g_value_build_g_variant@@Base+0x2b18>
   13e98:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13e9c:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ea0:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ea4:	b	13fb0 <dbus_g_value_build_g_variant@@Base+0x2b2c>
   13ea8:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13eac:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13eb0:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13eb4:	b	13fc0 <dbus_g_value_build_g_variant@@Base+0x2b3c>
   13eb8:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ebc:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ec0:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ec4:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ec8:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ecc:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ed0:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ed4:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ed8:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13edc:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ee0:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ee4:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ee8:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13eec:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ef0:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ef4:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13ef8:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13efc:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f00:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f04:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f08:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f0c:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f10:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f14:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f18:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f1c:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f20:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f24:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f28:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f2c:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f30:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f34:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f38:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f3c:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f40:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f44:	b	13fd4 <dbus_g_value_build_g_variant@@Base+0x2b50>
   13f48:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f4c:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f50:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f54:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f58:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f5c:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f60:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f64:	b	13fe8 <dbus_g_value_build_g_variant@@Base+0x2b64>
   13f68:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f6c:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f70:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f74:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f78:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f7c:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f80:	b	13ffc <dbus_g_value_build_g_variant@@Base+0x2b78>
   13f84:	b	13f88 <dbus_g_value_build_g_variant@@Base+0x2b04>
   13f88:	mov	r0, r4
   13f8c:	bl	b710 <g_value_get_object@plt>
   13f90:	rsbs	r0, r0, #1
   13f94:	movcc	r0, #0
   13f98:	pop	{r4, pc}
   13f9c:	mov	r0, r4
   13fa0:	bl	b53c <g_value_get_boolean@plt>
   13fa4:	rsbs	r0, r0, #1
   13fa8:	movcc	r0, #0
   13fac:	pop	{r4, pc}
   13fb0:	mov	r0, r4
   13fb4:	bl	b9d4 <g_value_get_int@plt>
   13fb8:	lsr	r0, r0, #31
   13fbc:	pop	{r4, pc}
   13fc0:	mov	r0, r4
   13fc4:	bl	b464 <g_value_get_uint@plt>
   13fc8:	rsbs	r0, r0, #1
   13fcc:	movcc	r0, #0
   13fd0:	pop	{r4, pc}
   13fd4:	mov	r0, r4
   13fd8:	bl	b344 <g_value_get_string@plt>
   13fdc:	rsbs	r0, r0, #1
   13fe0:	movcc	r0, #0
   13fe4:	pop	{r4, pc}
   13fe8:	mov	r0, r4
   13fec:	bl	b2a8 <g_value_get_boxed@plt>
   13ff0:	rsbs	r0, r0, #1
   13ff4:	movcc	r0, #0
   13ff8:	pop	{r4, pc}
   13ffc:	mov	r0, #0
   14000:	pop	{r4, pc}
   14004:	ldr	r3, [pc, #60]	; 14048 <dbus_g_value_build_g_variant@@Base+0x2bc4>
   14008:	ldr	r2, [pc, #60]	; 1404c <dbus_g_value_build_g_variant@@Base+0x2bc8>
   1400c:	add	r3, pc, r3
   14010:	push	{r4, lr}
   14014:	sub	sp, sp, #8
   14018:	ldr	r4, [r3, r2]
   1401c:	mov	r1, sp
   14020:	ldr	r3, [r4]
   14024:	str	r3, [sp, #4]
   14028:	bl	13260 <dbus_g_value_build_g_variant@@Base+0x1ddc>
   1402c:	ldr	r2, [sp, #4]
   14030:	ldr	r3, [r4]
   14034:	cmp	r2, r3
   14038:	bne	14044 <dbus_g_value_build_g_variant@@Base+0x2bc0>
   1403c:	add	sp, sp, #8
   14040:	pop	{r4, pc}
   14044:	bl	b824 <__stack_chk_fail@plt>
   14048:	andeq	sp, r0, ip, ror #31
   1404c:	strdeq	r0, [r0], -r8
   14050:	push	{r3, lr}
   14054:	bl	b638 <g_type_fundamental@plt>
   14058:	sub	r0, r0, #12
   1405c:	cmp	r0, #68	; 0x44
   14060:	addls	pc, pc, r0, lsl #2
   14064:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14068:	b	14184 <dbus_g_value_build_g_variant@@Base+0x2d00>
   1406c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14070:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14074:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14078:	b	14184 <dbus_g_value_build_g_variant@@Base+0x2d00>
   1407c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14080:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14084:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14088:	b	14184 <dbus_g_value_build_g_variant@@Base+0x2d00>
   1408c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14090:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14094:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14098:	b	14184 <dbus_g_value_build_g_variant@@Base+0x2d00>
   1409c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140a0:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140a4:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140a8:	b	14184 <dbus_g_value_build_g_variant@@Base+0x2d00>
   140ac:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140b0:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140b4:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140b8:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140bc:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140c0:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140c4:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140c8:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140cc:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140d0:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140d4:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140d8:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140dc:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140e0:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140e4:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140e8:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140ec:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140f0:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140f4:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140f8:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   140fc:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14100:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14104:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14108:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   1410c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14110:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14114:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14118:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   1411c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14120:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14124:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14128:	b	14184 <dbus_g_value_build_g_variant@@Base+0x2d00>
   1412c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14130:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14134:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14138:	b	14184 <dbus_g_value_build_g_variant@@Base+0x2d00>
   1413c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14140:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14144:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14148:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   1414c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14150:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14154:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14158:	b	14184 <dbus_g_value_build_g_variant@@Base+0x2d00>
   1415c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14160:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14164:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14168:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   1416c:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14170:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14174:	b	1417c <dbus_g_value_build_g_variant@@Base+0x2cf8>
   14178:	b	14184 <dbus_g_value_build_g_variant@@Base+0x2d00>
   1417c:	mov	r0, #0
   14180:	pop	{r3, pc}
   14184:	mov	r0, #1
   14188:	pop	{r3, pc}
   1418c:	ldr	r3, [pc, #64]	; 141d4 <dbus_g_value_build_g_variant@@Base+0x2d50>
   14190:	ldr	r2, [pc, #64]	; 141d8 <dbus_g_value_build_g_variant@@Base+0x2d54>
   14194:	add	r3, pc, r3
   14198:	push	{r4, lr}
   1419c:	sub	sp, sp, #8
   141a0:	ldr	r4, [r3, r2]
   141a4:	mov	r1, sp
   141a8:	ldr	r3, [r4]
   141ac:	str	r3, [sp, #4]
   141b0:	bl	13260 <dbus_g_value_build_g_variant@@Base+0x1ddc>
   141b4:	ldr	r2, [sp, #4]
   141b8:	ldr	r3, [r4]
   141bc:	ldr	r0, [sp]
   141c0:	cmp	r2, r3
   141c4:	bne	141d0 <dbus_g_value_build_g_variant@@Base+0x2d4c>
   141c8:	add	sp, sp, #8
   141cc:	pop	{r4, pc}
   141d0:	bl	b824 <__stack_chk_fail@plt>
   141d4:	andeq	sp, r0, r4, ror #28
   141d8:	strdeq	r0, [r0], -r8
   141dc:	push	{r3, r4, r5, lr}
   141e0:	sub	r3, r0, #12
   141e4:	ldr	r4, [pc, #272]	; 142fc <dbus_g_value_build_g_variant@@Base+0x2e78>
   141e8:	mov	r5, r0
   141ec:	add	r4, pc, r4
   141f0:	cmp	r3, #52	; 0x34
   141f4:	addls	pc, pc, r3, lsl #2
   141f8:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   141fc:	b	142f4 <dbus_g_value_build_g_variant@@Base+0x2e70>
   14200:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14204:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14208:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1420c:	b	142f4 <dbus_g_value_build_g_variant@@Base+0x2e70>
   14210:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14214:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14218:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1421c:	b	142f4 <dbus_g_value_build_g_variant@@Base+0x2e70>
   14220:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14224:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14228:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1422c:	b	142f4 <dbus_g_value_build_g_variant@@Base+0x2e70>
   14230:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14234:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14238:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1423c:	b	142f4 <dbus_g_value_build_g_variant@@Base+0x2e70>
   14240:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14244:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14248:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1424c:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14250:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14254:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14258:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1425c:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14260:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14264:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14268:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1426c:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14270:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14274:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14278:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1427c:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14280:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14284:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14288:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1428c:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14290:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14294:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   14298:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   1429c:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142a0:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142a4:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142a8:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142ac:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142b0:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142b4:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142b8:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142bc:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142c0:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142c4:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142c8:	b	142d0 <dbus_g_value_build_g_variant@@Base+0x2e4c>
   142cc:	b	142e8 <dbus_g_value_build_g_variant@@Base+0x2e64>
   142d0:	bl	b764 <dbus_g_object_path_get_g_type@plt>
   142d4:	cmp	r5, r0
   142d8:	beq	142e8 <dbus_g_value_build_g_variant@@Base+0x2e64>
   142dc:	bl	baa0 <dbus_g_signature_get_g_type@plt>
   142e0:	cmp	r5, r0
   142e4:	bne	142f4 <dbus_g_value_build_g_variant@@Base+0x2e70>
   142e8:	ldr	r3, [pc, #16]	; 14300 <dbus_g_value_build_g_variant@@Base+0x2e7c>
   142ec:	ldr	r0, [r4, r3]
   142f0:	pop	{r3, r4, r5, pc}
   142f4:	mov	r0, #0
   142f8:	pop	{r3, r4, r5, pc}
   142fc:	andeq	sp, r0, ip, lsl #28
   14300:	andeq	r0, r0, r4, lsl #6
   14304:	ldr	r3, [pc, #84]	; 14360 <dbus_g_value_build_g_variant@@Base+0x2edc>
   14308:	ldr	r2, [pc, #84]	; 14364 <dbus_g_value_build_g_variant@@Base+0x2ee0>
   1430c:	add	r3, pc, r3
   14310:	push	{r4, lr}
   14314:	sub	sp, sp, #8
   14318:	ldr	r4, [r3, r2]
   1431c:	mov	r1, sp
   14320:	ldr	r3, [r4]
   14324:	str	r3, [sp, #4]
   14328:	bl	13428 <dbus_g_value_build_g_variant@@Base+0x1fa4>
   1432c:	cmp	r0, #0
   14330:	bne	14354 <dbus_g_value_build_g_variant@@Base+0x2ed0>
   14334:	ldr	r0, [pc, #44]	; 14368 <dbus_g_value_build_g_variant@@Base+0x2ee4>
   14338:	add	r0, pc, r0
   1433c:	ldr	r2, [sp, #4]
   14340:	ldr	r3, [r4]
   14344:	cmp	r2, r3
   14348:	bne	1435c <dbus_g_value_build_g_variant@@Base+0x2ed8>
   1434c:	add	sp, sp, #8
   14350:	pop	{r4, pc}
   14354:	ldr	r0, [sp]
   14358:	b	1433c <dbus_g_value_build_g_variant@@Base+0x2eb8>
   1435c:	bl	b824 <__stack_chk_fail@plt>
   14360:	andeq	sp, r0, ip, ror #25
   14364:	strdeq	r0, [r0], -r8
   14368:			; <UNDEFINED> instruction: 0xffffdc68
   1436c:	push	{r4, r5, r6, r7, r8, lr}
   14370:	mov	r5, r0
   14374:	bl	1046c <dbus_g_type_get_map_key_specialization@@Base>
   14378:	mov	r4, r0
   1437c:	mov	r0, r5
   14380:	bl	104b8 <dbus_g_type_get_map_value_specialization@@Base>
   14384:	mov	r7, r0
   14388:	mov	r0, r4
   1438c:	bl	1418c <dbus_g_value_build_g_variant@@Base+0x2d08>
   14390:	mov	r6, r0
   14394:	mov	r0, r4
   14398:	bl	141dc <dbus_g_value_build_g_variant@@Base+0x2d58>
   1439c:	mov	r5, r0
   143a0:	mov	r0, r4
   143a4:	bl	14304 <dbus_g_value_build_g_variant@@Base+0x2e80>
   143a8:	mov	r4, r0
   143ac:	mov	r0, r7
   143b0:	bl	14304 <dbus_g_value_build_g_variant@@Base+0x2e80>
   143b4:	mov	r1, r5
   143b8:	mov	r2, r4
   143bc:	mov	r3, r0
   143c0:	mov	r0, r6
   143c4:	pop	{r4, r5, r6, r7, r8, lr}
   143c8:	b	b644 <g_hash_table_new_full@plt>
   143cc:	ldr	r2, [pc, #144]	; 14464 <dbus_g_value_build_g_variant@@Base+0x2fe0>
   143d0:	mov	r3, #0
   143d4:	ldr	ip, [pc, #140]	; 14468 <dbus_g_value_build_g_variant@@Base+0x2fe4>
   143d8:	add	r2, pc, r2
   143dc:	push	{r4, r5, r6, r7, r8, lr}
   143e0:	sub	sp, sp, #32
   143e4:	ldr	r5, [r2, ip]
   143e8:	mov	r7, r1
   143ec:	str	r3, [sp]
   143f0:	mov	r8, r0
   143f4:	str	r3, [sp, #4]
   143f8:	ldr	r2, [r5]
   143fc:	str	r3, [sp, #8]
   14400:	str	r3, [sp, #12]
   14404:	str	r3, [sp, #16]
   14408:	str	r3, [sp, #20]
   1440c:	str	r2, [sp, #28]
   14410:	bl	1436c <dbus_g_value_build_g_variant@@Base+0x2ee8>
   14414:	mov	r1, r8
   14418:	mov	r6, r0
   1441c:	mov	r0, sp
   14420:	bl	b8cc <g_value_init@plt>
   14424:	mov	r0, sp
   14428:	mov	r1, r7
   1442c:	bl	b8d8 <g_value_set_static_boxed@plt>
   14430:	ldr	r1, [pc, #52]	; 1446c <dbus_g_value_build_g_variant@@Base+0x2fe8>
   14434:	mov	r0, sp
   14438:	mov	r2, r6
   1443c:	add	r1, pc, r1
   14440:	bl	10cb0 <dbus_g_type_map_value_iterate@@Base>
   14444:	ldr	r2, [sp, #28]
   14448:	ldr	r3, [r5]
   1444c:	mov	r0, r6
   14450:	cmp	r2, r3
   14454:	bne	14460 <dbus_g_value_build_g_variant@@Base+0x2fdc>
   14458:	add	sp, sp, #32
   1445c:	pop	{r4, r5, r6, r7, r8, pc}
   14460:	bl	b824 <__stack_chk_fail@plt>
   14464:	andeq	sp, r0, r0, lsr #24
   14468:	strdeq	r0, [r0], -r8
   1446c:	andeq	r0, r0, r4, lsl #1
   14470:	push	{r4, r5, r6, lr}
   14474:	mov	r4, r0
   14478:	mov	r0, r1
   1447c:	mov	r5, r2
   14480:	bl	120c4 <dbus_g_value_build_g_variant@@Base+0xc40>
   14484:	mov	r6, r0
   14488:	mov	r0, r5
   1448c:	bl	120c4 <dbus_g_value_build_g_variant@@Base+0xc40>
   14490:	mov	r1, r6
   14494:	mov	r2, r0
   14498:	mov	r0, r4
   1449c:	pop	{r4, r5, r6, lr}
   144a0:	b	b410 <g_hash_table_insert@plt>
   144a4:	push	{r3, r4, r5, lr}
   144a8:	mov	r5, r1
   144ac:	mov	r4, r2
   144b0:	ldr	r0, [r0]
   144b4:	bl	b2a8 <g_value_get_boxed@plt>
   144b8:	mov	r1, r5
   144bc:	mov	r2, r4
   144c0:	pop	{r3, r4, r5, lr}
   144c4:	b	14470 <dbus_g_value_build_g_variant@@Base+0x2fec>
   144c8:	ldr	r3, [pc, #184]	; 14588 <dbus_g_value_build_g_variant@@Base+0x3104>
   144cc:	ldr	ip, [pc, #184]	; 1458c <dbus_g_value_build_g_variant@@Base+0x3108>
   144d0:	add	r3, pc, r3
   144d4:	push	{r4, r5, r6, r7, r8, lr}
   144d8:	mov	r8, r2
   144dc:	ldr	r6, [r3, ip]
   144e0:	sub	sp, sp, #56	; 0x38
   144e4:	mov	r5, r0
   144e8:	mov	r7, r1
   144ec:	mov	r0, sp
   144f0:	ldr	r1, [r5]
   144f4:	ldr	r2, [r6]
   144f8:	mov	r3, #0
   144fc:	str	r3, [sp]
   14500:	str	r3, [sp, #4]
   14504:	str	r3, [sp, #8]
   14508:	str	r3, [sp, #12]
   1450c:	str	r3, [sp, #16]
   14510:	str	r3, [sp, #20]
   14514:	str	r3, [sp, #24]
   14518:	str	r3, [sp, #28]
   1451c:	str	r3, [sp, #32]
   14520:	str	r3, [sp, #36]	; 0x24
   14524:	str	r3, [sp, #40]	; 0x28
   14528:	str	r3, [sp, #44]	; 0x2c
   1452c:	str	r2, [sp, #52]	; 0x34
   14530:	bl	b8cc <g_value_init@plt>
   14534:	mov	r0, r5
   14538:	add	r5, sp, #24
   1453c:	mov	r1, sp
   14540:	bl	b620 <g_value_copy@plt>
   14544:	ldr	r1, [r7]
   14548:	mov	r0, r5
   1454c:	bl	b8cc <g_value_init@plt>
   14550:	mov	r0, r7
   14554:	mov	r1, r5
   14558:	bl	b620 <g_value_copy@plt>
   1455c:	mov	r2, r5
   14560:	mov	r0, r8
   14564:	mov	r1, sp
   14568:	bl	14470 <dbus_g_value_build_g_variant@@Base+0x2fec>
   1456c:	ldr	r2, [sp, #52]	; 0x34
   14570:	ldr	r3, [r6]
   14574:	cmp	r2, r3
   14578:	bne	14584 <dbus_g_value_build_g_variant@@Base+0x3100>
   1457c:	add	sp, sp, #56	; 0x38
   14580:	pop	{r4, r5, r6, r7, r8, pc}
   14584:	bl	b824 <__stack_chk_fail@plt>
   14588:	andeq	sp, r0, r8, lsr #22
   1458c:	strdeq	r0, [r0], -r8
   14590:	push	{r4, lr}
   14594:	mov	r2, #0
   14598:	ldr	r4, [pc, #100]	; 14604 <dbus_g_value_build_g_variant@@Base+0x3180>
   1459c:	ldr	r0, [pc, #100]	; 14608 <dbus_g_value_build_g_variant@@Base+0x3184>
   145a0:	add	r4, pc, r4
   145a4:	add	r0, pc, r0
   145a8:	mov	r1, r4
   145ac:	bl	fe84 <dbus_g_type_specialized_init@@Base+0x22c>
   145b0:	ldr	r0, [pc, #84]	; 1460c <dbus_g_value_build_g_variant@@Base+0x3188>
   145b4:	add	r1, r4, #40	; 0x28
   145b8:	mov	r2, #0
   145bc:	add	r0, pc, r0
   145c0:	bl	fe84 <dbus_g_type_specialized_init@@Base+0x22c>
   145c4:	ldr	r0, [pc, #68]	; 14610 <dbus_g_value_build_g_variant@@Base+0x318c>
   145c8:	add	r1, r4, #80	; 0x50
   145cc:	mov	r2, #0
   145d0:	add	r0, pc, r0
   145d4:	bl	fe84 <dbus_g_type_specialized_init@@Base+0x22c>
   145d8:	ldr	r0, [pc, #52]	; 14614 <dbus_g_value_build_g_variant@@Base+0x3190>
   145dc:	add	r1, r4, #120	; 0x78
   145e0:	mov	r2, #0
   145e4:	add	r0, pc, r0
   145e8:	bl	ff64 <dbus_g_type_register_collection@@Base+0x28>
   145ec:	ldr	r0, [pc, #36]	; 14618 <dbus_g_value_build_g_variant@@Base+0x3194>
   145f0:	add	r1, r4, #152	; 0x98
   145f4:	mov	r2, #0
   145f8:	add	r0, pc, r0
   145fc:	pop	{r4, lr}
   14600:	b	10044 <dbus_g_type_register_map@@Base+0x28>
   14604:	andeq	sp, r0, r8, ror r8
   14608:	andeq	r4, r0, r4, ror #8
   1460c:	ldrdeq	r2, [r0], -r0
   14610:	andeq	r2, r0, r4, asr #19
   14614:			; <UNDEFINED> instruction: 0x000029bc
   14618:	andeq	r2, r0, r8, lsl #19
   1461c:	ldr	r3, [r0, #12]
   14620:	ldr	r2, [r1, #12]
   14624:	cmp	r3, r2
   14628:	beq	1463c <dbus_g_value_build_g_variant@@Base+0x31b8>
   1462c:	cmp	r3, #0
   14630:	movne	r0, #1
   14634:	mvneq	r0, #0
   14638:	bx	lr
   1463c:	mov	r0, #0
   14640:	bx	lr
   14644:	push	{r4, lr}
   14648:	mov	r1, r0
   1464c:	ldr	r0, [r2]
   14650:	mov	r4, r2
   14654:	bl	b680 <g_slist_prepend@plt>
   14658:	str	r0, [r4]
   1465c:	pop	{r4, pc}

00014660 <base_info_ref@@Base>:
   14660:	push	{r3, r4, r5, lr}
   14664:	subs	r4, r0, #0
   14668:	beq	146b0 <base_info_ref@@Base+0x50>
   1466c:	ldr	r3, [r4]
   14670:	ubfx	r5, r3, #0, #28
   14674:	cmp	r5, #0
   14678:	beq	14690 <base_info_ref@@Base+0x30>
   1467c:	add	r5, r5, #1
   14680:	mov	r0, r4
   14684:	bfi	r3, r5, #0, #28
   14688:	str	r3, [r4]
   1468c:	pop	{r3, r4, r5, pc}
   14690:	ldr	r1, [pc, #52]	; 146cc <base_info_ref@@Base+0x6c>
   14694:	mov	r0, r5
   14698:	ldr	r2, [pc, #48]	; 146d0 <base_info_ref@@Base+0x70>
   1469c:	add	r1, pc, r1
   146a0:	add	r2, pc, r2
   146a4:	bl	b6d4 <g_return_if_fail_warning@plt>
   146a8:	mov	r0, r5
   146ac:	pop	{r3, r4, r5, pc}
   146b0:	ldr	r1, [pc, #28]	; 146d4 <base_info_ref@@Base+0x74>
   146b4:	ldr	r2, [pc, #28]	; 146d8 <base_info_ref@@Base+0x78>
   146b8:	add	r1, pc, r1
   146bc:	add	r2, pc, r2
   146c0:	bl	b6d4 <g_return_if_fail_warning@plt>
   146c4:	mov	r0, r4
   146c8:	pop	{r3, r4, r5, pc}
   146cc:	andeq	r4, r0, r4, ror r3
   146d0:	andeq	r4, r0, r0, lsr #7
   146d4:	andeq	r4, r0, r8, asr r3
   146d8:	andeq	r4, r0, r4, ror r3
   146dc:	ldrb	r0, [r0, #3]
   146e0:	lsr	r0, r0, #4
   146e4:	bx	lr
   146e8:	ldr	r0, [r0, #4]
   146ec:	bx	lr
   146f0:	push	{r3, r4, r5, lr}
   146f4:	mov	r4, r0
   146f8:	mov	r0, r1
   146fc:	ldr	r5, [r4, #4]
   14700:	bl	b3a4 <g_strdup@plt>
   14704:	str	r0, [r4, #4]
   14708:	mov	r0, r5
   1470c:	pop	{r3, r4, r5, lr}
   14710:	b	b248 <g_free@plt>
   14714:	push	{r4, lr}
   14718:	ldr	r4, [pc, #60]	; 1475c <base_info_ref@@Base+0xfc>
   1471c:	ldr	r3, [pc, #60]	; 14760 <base_info_ref@@Base+0x100>
   14720:	add	r4, pc, r4
   14724:	add	r3, pc, r3
   14728:	ldr	r0, [r4]
   1472c:	cmp	r0, #0
   14730:	popne	{r4, pc}
   14734:	ldr	r1, [pc, #40]	; 14764 <base_info_ref@@Base+0x104>
   14738:	ldr	r2, [pc, #40]	; 14768 <base_info_ref@@Base+0x108>
   1473c:	ldr	r0, [pc, #40]	; 1476c <base_info_ref@@Base+0x10c>
   14740:	ldr	r1, [r3, r1]
   14744:	ldr	r2, [r3, r2]
   14748:	add	r0, pc, r0
   1474c:	bl	baac <g_boxed_type_register_static@plt>
   14750:	mov	r3, r0
   14754:	str	r3, [r4]
   14758:	pop	{r4, pc}
   1475c:	andeq	sp, r0, ip, lsl ip
   14760:	ldrdeq	sp, [r0], -r4
   14764:	andeq	r0, r0, r8, ror #5
   14768:	andeq	r0, r0, r8, lsl #6
   1476c:	andeq	r4, r0, ip, lsl #6
   14770:	push	{r3, r4, r5, lr}
   14774:	mov	r5, r0
   14778:	mov	r0, #16
   1477c:	bl	b8b4 <g_malloc0@plt>
   14780:	mov	r2, #1
   14784:	ldr	r3, [r0]
   14788:	mov	r4, r0
   1478c:	mov	r0, r5
   14790:	bfi	r3, r2, #0, #28
   14794:	str	r3, [r4]
   14798:	bl	b3a4 <g_strdup@plt>
   1479c:	ldrb	r3, [r4, #3]
   147a0:	bfc	r3, #4, #4
   147a4:	strb	r3, [r4, #3]
   147a8:	str	r0, [r4, #4]
   147ac:	mov	r0, r4
   147b0:	pop	{r3, r4, r5, pc}
   147b4:	ldr	r2, [r0]
   147b8:	ubfx	r1, r2, #0, #28
   147bc:	add	r1, r1, #1
   147c0:	bfi	r2, r1, #0, #28
   147c4:	str	r2, [r0]
   147c8:	bx	lr
   147cc:	ldr	r0, [r0, #4]
   147d0:	bx	lr
   147d4:	ldr	r0, [r0, #8]
   147d8:	bx	lr
   147dc:	ldr	r0, [r0, #12]
   147e0:	bx	lr
   147e4:	push	{r3, r4, r5, lr}
   147e8:	mov	r4, r0
   147ec:	mov	r5, r1
   147f0:	mov	r0, r1
   147f4:	bl	147b4 <base_info_ref@@Base+0x154>
   147f8:	mov	r1, r5
   147fc:	ldr	r0, [r4, #12]
   14800:	bl	b584 <g_slist_append@plt>
   14804:	str	r0, [r4, #12]
   14808:	pop	{r3, r4, r5, pc}
   1480c:	push	{r4, r5, r6, lr}
   14810:	mov	r5, r0
   14814:	mov	r0, #24
   14818:	ldr	r6, [pc, #96]	; 14880 <base_info_ref@@Base+0x220>
   1481c:	bl	b8b4 <g_malloc0@plt>
   14820:	add	r6, pc, r6
   14824:	ldr	r2, [r0]
   14828:	mov	r4, r0
   1482c:	mov	r0, r5
   14830:	mov	r5, #1
   14834:	bfi	r2, r5, #0, #28
   14838:	str	r2, [r4]
   1483c:	bl	b3a4 <g_strdup@plt>
   14840:	ldr	lr, [pc, #60]	; 14884 <base_info_ref@@Base+0x224>
   14844:	ldrb	r2, [r4, #3]
   14848:	mov	r3, r6
   1484c:	ldr	ip, [pc, #52]	; 14888 <base_info_ref@@Base+0x228>
   14850:	bfi	r2, r5, #4, #4
   14854:	ldr	r1, [pc, #48]	; 1488c <base_info_ref@@Base+0x22c>
   14858:	strb	r2, [r4, #3]
   1485c:	str	r0, [r4, #4]
   14860:	ldr	r2, [r6, lr]
   14864:	ldr	r0, [r6, ip]
   14868:	ldr	r1, [r6, r1]
   1486c:	mov	r3, r2
   14870:	bl	b644 <g_hash_table_new_full@plt>
   14874:	str	r0, [r4, #8]
   14878:	mov	r0, r4
   1487c:	pop	{r4, r5, r6, pc}
   14880:	ldrdeq	sp, [r0], -r8
   14884:	andeq	r0, r0, r4, ror #5
   14888:	andeq	r0, r0, ip, ror #5
   1488c:	andeq	r0, r0, r4, lsl #6
   14890:	ldr	r2, [r0]
   14894:	ubfx	r1, r2, #0, #28
   14898:	add	r1, r1, #1
   1489c:	bfi	r2, r1, #0, #28
   148a0:	str	r2, [r0]
   148a4:	bx	lr
   148a8:	push	{r3, r4, r5, lr}
   148ac:	mov	r4, r0
   148b0:	mov	r5, r1
   148b4:	mov	r0, r1
   148b8:	bl	14890 <base_info_ref@@Base+0x230>
   148bc:	mov	r1, r5
   148c0:	ldr	r0, [r4, #8]
   148c4:	bl	b584 <g_slist_append@plt>
   148c8:	str	r0, [r4, #8]
   148cc:	pop	{r3, r4, r5, pc}
   148d0:	ldr	r0, [r0, #4]
   148d4:	bx	lr
   148d8:	ldr	r3, [pc, #88]	; 14938 <base_info_ref@@Base+0x2d8>
   148dc:	mov	ip, #0
   148e0:	push	{r4, lr}
   148e4:	add	r3, pc, r3
   148e8:	ldr	lr, [pc, #76]	; 1493c <base_info_ref@@Base+0x2dc>
   148ec:	sub	sp, sp, #8
   148f0:	add	r2, sp, #8
   148f4:	ldr	r1, [pc, #68]	; 14940 <base_info_ref@@Base+0x2e0>
   148f8:	ldr	r0, [r0, #8]
   148fc:	ldr	r4, [r3, lr]
   14900:	add	r1, pc, r1
   14904:	str	ip, [r2, #-8]!
   14908:	mov	r2, sp
   1490c:	ldr	r3, [r4]
   14910:	str	r3, [sp, #4]
   14914:	bl	b650 <g_hash_table_foreach@plt>
   14918:	ldr	r2, [sp, #4]
   1491c:	ldr	r3, [r4]
   14920:	ldr	r0, [sp]
   14924:	cmp	r2, r3
   14928:	bne	14934 <base_info_ref@@Base+0x2d4>
   1492c:	add	sp, sp, #8
   14930:	pop	{r4, pc}
   14934:	bl	b824 <__stack_chk_fail@plt>
   14938:	andeq	sp, r0, r4, lsl r7
   1493c:	strdeq	r0, [r0], -r8
   14940:			; <UNDEFINED> instruction: 0xfffffd3c
   14944:	ldr	r0, [r0, #8]
   14948:	b	b890 <g_hash_table_lookup@plt>
   1494c:	ldr	r0, [r0, #12]
   14950:	bx	lr
   14954:	ldr	r0, [r0, #16]
   14958:	bx	lr
   1495c:	ldr	r0, [r0, #20]
   14960:	bx	lr
   14964:	push	{r4, r5, r6, lr}
   14968:	mov	r5, r2
   1496c:	ldr	r4, [r0, #8]
   14970:	mov	r0, r1
   14974:	bl	b3a4 <g_strdup@plt>
   14978:	mov	r6, r0
   1497c:	mov	r0, r5
   14980:	bl	b3a4 <g_strdup@plt>
   14984:	mov	r1, r6
   14988:	mov	r2, r0
   1498c:	mov	r0, r4
   14990:	pop	{r4, r5, r6, lr}
   14994:	b	b410 <g_hash_table_insert@plt>
   14998:	push	{r4, r5, r6, lr}
   1499c:	mov	r5, r0
   149a0:	mov	r0, #16
   149a4:	mov	r6, #2
   149a8:	bl	b8b4 <g_malloc0@plt>
   149ac:	mov	r3, #1
   149b0:	ldr	r2, [r0]
   149b4:	mov	r4, r0
   149b8:	mov	r0, r5
   149bc:	ldr	r5, [pc, #76]	; 14a10 <base_info_ref@@Base+0x3b0>
   149c0:	bfi	r2, r3, #0, #28
   149c4:	str	r2, [r4]
   149c8:	bl	b3a4 <g_strdup@plt>
   149cc:	ldr	lr, [pc, #64]	; 14a14 <base_info_ref@@Base+0x3b4>
   149d0:	add	r5, pc, r5
   149d4:	ldrb	r2, [r4, #3]
   149d8:	ldr	ip, [pc, #56]	; 14a18 <base_info_ref@@Base+0x3b8>
   149dc:	bfi	r2, r6, #4, #4
   149e0:	ldr	r1, [pc, #52]	; 14a1c <base_info_ref@@Base+0x3bc>
   149e4:	strb	r2, [r4, #3]
   149e8:	mov	r3, r5
   149ec:	str	r0, [r4, #4]
   149f0:	ldr	r2, [r5, lr]
   149f4:	ldr	r0, [r5, ip]
   149f8:	ldr	r1, [r5, r1]
   149fc:	mov	r3, r2
   14a00:	bl	b644 <g_hash_table_new_full@plt>
   14a04:	str	r0, [r4, #8]
   14a08:	mov	r0, r4
   14a0c:	pop	{r4, r5, r6, pc}
   14a10:	andeq	sp, r0, r8, lsr #12
   14a14:	andeq	r0, r0, r4, ror #5
   14a18:	andeq	r0, r0, ip, ror #5
   14a1c:	andeq	r0, r0, r4, lsl #6
   14a20:	ldr	r2, [r0]
   14a24:	ubfx	r1, r2, #0, #28
   14a28:	add	r1, r1, #1
   14a2c:	bfi	r2, r1, #0, #28
   14a30:	str	r2, [r0]
   14a34:	bx	lr
   14a38:	push	{r3, r4, r5, lr}
   14a3c:	mov	r4, r0
   14a40:	mov	r5, r1
   14a44:	mov	r0, r1
   14a48:	bl	14a20 <base_info_ref@@Base+0x3c0>
   14a4c:	mov	r1, r5
   14a50:	ldr	r0, [r4, #12]
   14a54:	bl	b584 <g_slist_append@plt>
   14a58:	str	r0, [r4, #12]
   14a5c:	pop	{r3, r4, r5, pc}
   14a60:	ldr	r0, [r0, #4]
   14a64:	bx	lr
   14a68:	ldr	r3, [pc, #88]	; 14ac8 <base_info_ref@@Base+0x468>
   14a6c:	mov	ip, #0
   14a70:	push	{r4, lr}
   14a74:	add	r3, pc, r3
   14a78:	ldr	lr, [pc, #76]	; 14acc <base_info_ref@@Base+0x46c>
   14a7c:	sub	sp, sp, #8
   14a80:	add	r2, sp, #8
   14a84:	ldr	r1, [pc, #68]	; 14ad0 <base_info_ref@@Base+0x470>
   14a88:	ldr	r0, [r0, #8]
   14a8c:	ldr	r4, [r3, lr]
   14a90:	add	r1, pc, r1
   14a94:	str	ip, [r2, #-8]!
   14a98:	mov	r2, sp
   14a9c:	ldr	r3, [r4]
   14aa0:	str	r3, [sp, #4]
   14aa4:	bl	b650 <g_hash_table_foreach@plt>
   14aa8:	ldr	r2, [sp, #4]
   14aac:	ldr	r3, [r4]
   14ab0:	ldr	r0, [sp]
   14ab4:	cmp	r2, r3
   14ab8:	bne	14ac4 <base_info_ref@@Base+0x464>
   14abc:	add	sp, sp, #8
   14ac0:	pop	{r4, pc}
   14ac4:	bl	b824 <__stack_chk_fail@plt>
   14ac8:	andeq	sp, r0, r4, lsl #11
   14acc:	strdeq	r0, [r0], -r8
   14ad0:			; <UNDEFINED> instruction: 0xfffffbac
   14ad4:	ldr	r0, [r0, #8]
   14ad8:	b	b890 <g_hash_table_lookup@plt>
   14adc:	ldr	r0, [r0, #12]
   14ae0:	bx	lr
   14ae4:	ldr	r0, [r0, #12]
   14ae8:	b	b80c <g_slist_length@plt>
   14aec:	push	{r4, r5, r6, lr}
   14af0:	mov	r5, r2
   14af4:	ldr	r4, [r0, #8]
   14af8:	mov	r0, r1
   14afc:	bl	b3a4 <g_strdup@plt>
   14b00:	mov	r6, r0
   14b04:	mov	r0, r5
   14b08:	bl	b3a4 <g_strdup@plt>
   14b0c:	mov	r1, r6
   14b10:	mov	r2, r0
   14b14:	mov	r0, r4
   14b18:	pop	{r4, r5, r6, lr}
   14b1c:	b	b410 <g_hash_table_insert@plt>
   14b20:	push	{r3, r4, r5, lr}
   14b24:	mov	r5, r0
   14b28:	mov	r0, #12
   14b2c:	bl	b8b4 <g_malloc0@plt>
   14b30:	mov	r2, #1
   14b34:	ldr	r3, [r0]
   14b38:	mov	r4, r0
   14b3c:	mov	r0, r5
   14b40:	bfi	r3, r2, #0, #28
   14b44:	str	r3, [r4]
   14b48:	bl	b3a4 <g_strdup@plt>
   14b4c:	ldrb	r3, [r4, #3]
   14b50:	mov	r2, #3
   14b54:	bfi	r3, r2, #4, #4
   14b58:	strb	r3, [r4, #3]
   14b5c:	str	r0, [r4, #4]
   14b60:	mov	r0, r4
   14b64:	pop	{r3, r4, r5, pc}
   14b68:	ldr	r2, [r0]
   14b6c:	ubfx	r1, r2, #0, #28
   14b70:	add	r1, r1, #1
   14b74:	bfi	r2, r1, #0, #28
   14b78:	str	r2, [r0]
   14b7c:	bx	lr
   14b80:	push	{r3, r4, r5, lr}
   14b84:	mov	r4, r0
   14b88:	mov	r5, r1
   14b8c:	mov	r0, r1
   14b90:	bl	14b68 <base_info_ref@@Base+0x508>
   14b94:	mov	r1, r5
   14b98:	ldr	r0, [r4, #16]
   14b9c:	bl	b584 <g_slist_append@plt>
   14ba0:	str	r0, [r4, #16]
   14ba4:	pop	{r3, r4, r5, pc}
   14ba8:	ldr	r0, [r0, #4]
   14bac:	bx	lr
   14bb0:	ldr	r0, [r0, #8]
   14bb4:	bx	lr
   14bb8:	ldr	r0, [r0, #8]
   14bbc:	b	b80c <g_slist_length@plt>
   14bc0:	push	{r3, r4, r5, r6, r7, lr}
   14bc4:	mov	r5, r0
   14bc8:	mov	r0, #16
   14bcc:	mov	r6, r1
   14bd0:	mov	r7, r2
   14bd4:	bl	b8b4 <g_malloc0@plt>
   14bd8:	mov	r2, #1
   14bdc:	ldr	r3, [r0]
   14be0:	mov	r4, r0
   14be4:	mov	r0, r5
   14be8:	bfi	r3, r2, #0, #28
   14bec:	str	r3, [r4]
   14bf0:	bl	b3a4 <g_strdup@plt>
   14bf4:	ldrb	r3, [r4, #3]
   14bf8:	mov	r2, #5
   14bfc:	bfi	r3, r2, #4, #4
   14c00:	strb	r3, [r4, #3]
   14c04:	str	r0, [r4, #4]
   14c08:	mov	r0, r6
   14c0c:	bl	b3a4 <g_strdup@plt>
   14c10:	str	r7, [r4, #12]
   14c14:	str	r0, [r4, #8]
   14c18:	mov	r0, r4
   14c1c:	pop	{r3, r4, r5, r6, r7, pc}
   14c20:	ldr	r2, [r0]
   14c24:	ubfx	r1, r2, #0, #28
   14c28:	add	r1, r1, #1
   14c2c:	bfi	r2, r1, #0, #28
   14c30:	str	r2, [r0]
   14c34:	bx	lr
   14c38:	push	{r3, r4, r5, lr}
   14c3c:	mov	r4, r0
   14c40:	mov	r5, r1
   14c44:	mov	r0, r1
   14c48:	bl	14c20 <base_info_ref@@Base+0x5c0>
   14c4c:	mov	r1, r5
   14c50:	ldr	r0, [r4, #20]
   14c54:	bl	b584 <g_slist_append@plt>
   14c58:	str	r0, [r4, #20]
   14c5c:	pop	{r3, r4, r5, pc}
   14c60:	push	{r4, lr}
   14c64:	mov	r4, r0
   14c68:	ldr	r2, [r0]
   14c6c:	sub	r3, r2, #-268435455	; 0xf0000001
   14c70:	bic	r3, r3, #-268435456	; 0xf0000000
   14c74:	cmp	r3, #0
   14c78:	bfi	r2, r3, #0, #28
   14c7c:	str	r2, [r0]
   14c80:	popne	{r4, pc}
   14c84:	ldr	r0, [r0, #8]
   14c88:	bl	b248 <g_free@plt>
   14c8c:	ldr	r0, [r4, #4]
   14c90:	bl	b248 <g_free@plt>
   14c94:	mov	r0, r4
   14c98:	pop	{r4, lr}
   14c9c:	b	b248 <g_free@plt>
   14ca0:	ldr	r0, [r0, #4]
   14ca4:	bx	lr
   14ca8:	ldr	r0, [r0, #8]
   14cac:	bx	lr
   14cb0:	ldr	r0, [r0, #12]
   14cb4:	bx	lr
   14cb8:	push	{r3, r4, r5, r6, r7, lr}
   14cbc:	mov	r5, r0
   14cc0:	mov	r0, #20
   14cc4:	mov	r6, r1
   14cc8:	mov	r7, r2
   14ccc:	bl	b8b4 <g_malloc0@plt>
   14cd0:	mov	r1, #1
   14cd4:	mov	r2, #4
   14cd8:	ldr	r3, [r0]
   14cdc:	mov	r4, r0
   14ce0:	mov	r0, r5
   14ce4:	ldr	r5, [pc, #88]	; 14d44 <base_info_ref@@Base+0x6e4>
   14ce8:	bfi	r3, r1, #0, #28
   14cec:	str	r3, [r4]
   14cf0:	add	r5, pc, r5
   14cf4:	lsr	r3, r3, #24
   14cf8:	bfi	r3, r2, #4, #4
   14cfc:	strb	r3, [r4, #3]
   14d00:	bl	b3a4 <g_strdup@plt>
   14d04:	str	r6, [r4, #12]
   14d08:	str	r0, [r4, #4]
   14d0c:	mov	r0, r7
   14d10:	bl	b3a4 <g_strdup@plt>
   14d14:	ldr	r2, [pc, #44]	; 14d48 <base_info_ref@@Base+0x6e8>
   14d18:	ldr	r1, [pc, #44]	; 14d4c <base_info_ref@@Base+0x6ec>
   14d1c:	ldr	r3, [pc, #44]	; 14d50 <base_info_ref@@Base+0x6f0>
   14d20:	str	r0, [r4, #8]
   14d24:	ldr	r2, [r5, r2]
   14d28:	ldr	r0, [r5, r1]
   14d2c:	ldr	r1, [r5, r3]
   14d30:	mov	r3, r2
   14d34:	bl	b644 <g_hash_table_new_full@plt>
   14d38:	str	r0, [r4, #16]
   14d3c:	mov	r0, r4
   14d40:	pop	{r3, r4, r5, r6, r7, pc}
   14d44:	andeq	sp, r0, r8, lsl #6
   14d48:	andeq	r0, r0, r4, ror #5
   14d4c:	andeq	r0, r0, ip, ror #5
   14d50:	andeq	r0, r0, r4, lsl #6
   14d54:	ldr	r2, [r0]
   14d58:	ubfx	r1, r2, #0, #28
   14d5c:	add	r1, r1, #1
   14d60:	bfi	r2, r1, #0, #28
   14d64:	str	r2, [r0]
   14d68:	bx	lr
   14d6c:	push	{r3, r4, r5, lr}
   14d70:	mov	r4, r0
   14d74:	mov	r5, r1
   14d78:	mov	r0, r1
   14d7c:	bl	14d54 <base_info_ref@@Base+0x6f4>
   14d80:	mov	r1, r5
   14d84:	ldr	r0, [r4, #12]
   14d88:	bl	b584 <g_slist_append@plt>
   14d8c:	ldr	r1, [pc, #16]	; 14da4 <base_info_ref@@Base+0x744>
   14d90:	add	r1, pc, r1
   14d94:	str	r0, [r4, #12]
   14d98:	bl	b6c8 <g_slist_sort@plt>
   14d9c:	str	r0, [r4, #12]
   14da0:	pop	{r3, r4, r5, pc}
   14da4:			; <UNDEFINED> instruction: 0xfffff884
   14da8:	push	{r3, r4, r5, lr}
   14dac:	mov	r4, r0
   14db0:	mov	r5, r1
   14db4:	mov	r0, r1
   14db8:	bl	14d54 <base_info_ref@@Base+0x6f4>
   14dbc:	mov	r1, r5
   14dc0:	ldr	r0, [r4, #8]
   14dc4:	bl	b584 <g_slist_append@plt>
   14dc8:	str	r0, [r4, #8]
   14dcc:	pop	{r3, r4, r5, pc}
   14dd0:	push	{r4, lr}
   14dd4:	mov	r4, r0
   14dd8:	ldr	r2, [r0]
   14ddc:	sub	r3, r2, #-268435455	; 0xf0000001
   14de0:	bic	r3, r3, #-268435456	; 0xf0000000
   14de4:	cmp	r3, #0
   14de8:	bfi	r2, r3, #0, #28
   14dec:	str	r2, [r0]
   14df0:	popne	{r4, pc}
   14df4:	ldr	r0, [r0, #16]
   14df8:	bl	b314 <g_hash_table_destroy@plt>
   14dfc:	ldr	r0, [r4, #8]
   14e00:	bl	b248 <g_free@plt>
   14e04:	ldr	r0, [r4, #4]
   14e08:	bl	b248 <g_free@plt>
   14e0c:	mov	r0, r4
   14e10:	pop	{r4, lr}
   14e14:	b	b248 <g_free@plt>
   14e18:	push	{r3, r4, r5, lr}
   14e1c:	mov	r5, r0
   14e20:	ldr	r4, [r0]
   14e24:	cmp	r4, #0
   14e28:	beq	14e54 <base_info_ref@@Base+0x7f4>
   14e2c:	ldr	r0, [r4]
   14e30:	bl	14dd0 <base_info_ref@@Base+0x770>
   14e34:	ldr	r4, [r4, #4]
   14e38:	cmp	r4, #0
   14e3c:	bne	14e2c <base_info_ref@@Base+0x7cc>
   14e40:	ldr	r0, [r5]
   14e44:	bl	b2e4 <g_slist_free@plt>
   14e48:	mov	r3, #0
   14e4c:	str	r3, [r5]
   14e50:	pop	{r3, r4, r5, pc}
   14e54:	mov	r0, r4
   14e58:	b	14e44 <base_info_ref@@Base+0x7e4>
   14e5c:	push	{r4, lr}
   14e60:	mov	r4, r0
   14e64:	ldr	r2, [r0]
   14e68:	sub	r3, r2, #-268435455	; 0xf0000001
   14e6c:	bic	r3, r3, #-268435456	; 0xf0000000
   14e70:	cmp	r3, #0
   14e74:	bfi	r2, r3, #0, #28
   14e78:	str	r2, [r0]
   14e7c:	popne	{r4, pc}
   14e80:	ldr	r0, [r0, #8]
   14e84:	bl	b314 <g_hash_table_destroy@plt>
   14e88:	add	r0, r4, #12
   14e8c:	bl	14e18 <base_info_ref@@Base+0x7b8>
   14e90:	ldr	r0, [r4, #4]
   14e94:	bl	b248 <g_free@plt>
   14e98:	mov	r0, r4
   14e9c:	pop	{r4, lr}
   14ea0:	b	b248 <g_free@plt>
   14ea4:	push	{r4, lr}
   14ea8:	mov	r4, r0
   14eac:	ldr	r2, [r0]
   14eb0:	sub	r3, r2, #-268435455	; 0xf0000001
   14eb4:	bic	r3, r3, #-268435456	; 0xf0000000
   14eb8:	cmp	r3, #0
   14ebc:	bfi	r2, r3, #0, #28
   14ec0:	str	r2, [r0]
   14ec4:	popne	{r4, pc}
   14ec8:	add	r0, r0, #8
   14ecc:	bl	14e18 <base_info_ref@@Base+0x7b8>
   14ed0:	ldr	r0, [r4, #4]
   14ed4:	bl	b248 <g_free@plt>
   14ed8:	mov	r0, r4
   14edc:	pop	{r4, lr}
   14ee0:	b	b248 <g_free@plt>
   14ee4:	push	{r3, r4, r5, lr}
   14ee8:	mov	r5, r0
   14eec:	ldr	r2, [r0]
   14ef0:	sub	r3, r2, #-268435455	; 0xf0000001
   14ef4:	bic	r3, r3, #-268435456	; 0xf0000000
   14ef8:	cmp	r3, #0
   14efc:	bfi	r2, r3, #0, #28
   14f00:	str	r2, [r0]
   14f04:	popne	{r3, r4, r5, pc}
   14f08:	ldr	r0, [r0, #8]
   14f0c:	bl	b314 <g_hash_table_destroy@plt>
   14f10:	ldr	r4, [r5, #12]
   14f14:	cmp	r4, #0
   14f18:	beq	14fb4 <base_info_ref@@Base+0x954>
   14f1c:	ldr	r0, [r4]
   14f20:	bl	14e5c <base_info_ref@@Base+0x7fc>
   14f24:	ldr	r4, [r4, #4]
   14f28:	cmp	r4, #0
   14f2c:	bne	14f1c <base_info_ref@@Base+0x8bc>
   14f30:	ldr	r0, [r5, #12]
   14f34:	bl	b2e4 <g_slist_free@plt>
   14f38:	ldr	r4, [r5, #16]
   14f3c:	mov	r3, #0
   14f40:	str	r3, [r5, #12]
   14f44:	cmp	r4, r3
   14f48:	beq	14fbc <base_info_ref@@Base+0x95c>
   14f4c:	ldr	r0, [r4]
   14f50:	bl	14ea4 <base_info_ref@@Base+0x844>
   14f54:	ldr	r4, [r4, #4]
   14f58:	cmp	r4, #0
   14f5c:	bne	14f4c <base_info_ref@@Base+0x8ec>
   14f60:	ldr	r0, [r5, #16]
   14f64:	bl	b2e4 <g_slist_free@plt>
   14f68:	ldr	r4, [r5, #20]
   14f6c:	mov	r3, #0
   14f70:	str	r3, [r5, #16]
   14f74:	cmp	r4, r3
   14f78:	beq	14fc4 <base_info_ref@@Base+0x964>
   14f7c:	ldr	r0, [r4]
   14f80:	bl	14c60 <base_info_ref@@Base+0x600>
   14f84:	ldr	r4, [r4, #4]
   14f88:	cmp	r4, #0
   14f8c:	bne	14f7c <base_info_ref@@Base+0x91c>
   14f90:	ldr	r0, [r5, #20]
   14f94:	bl	b2e4 <g_slist_free@plt>
   14f98:	mov	r3, #0
   14f9c:	ldr	r0, [r5, #4]
   14fa0:	str	r3, [r5, #20]
   14fa4:	bl	b248 <g_free@plt>
   14fa8:	mov	r0, r5
   14fac:	pop	{r3, r4, r5, lr}
   14fb0:	b	b248 <g_free@plt>
   14fb4:	mov	r0, r4
   14fb8:	b	14f34 <base_info_ref@@Base+0x8d4>
   14fbc:	mov	r0, r4
   14fc0:	b	14f64 <base_info_ref@@Base+0x904>
   14fc4:	mov	r0, r4
   14fc8:	b	14f94 <base_info_ref@@Base+0x934>
   14fcc:	push	{r3, r4, r5, lr}
   14fd0:	mov	r5, r0
   14fd4:	ldr	r2, [r0]
   14fd8:	sub	r3, r2, #-268435455	; 0xf0000001
   14fdc:	bic	r3, r3, #-268435456	; 0xf0000000
   14fe0:	cmp	r3, #0
   14fe4:	bfi	r2, r3, #0, #28
   14fe8:	str	r2, [r0]
   14fec:	popne	{r3, r4, r5, pc}
   14ff0:	ldr	r4, [r0, #8]
   14ff4:	cmp	r4, #0
   14ff8:	beq	15064 <base_info_ref@@Base+0xa04>
   14ffc:	ldr	r0, [r4]
   15000:	bl	14ee4 <base_info_ref@@Base+0x884>
   15004:	ldr	r4, [r4, #4]
   15008:	cmp	r4, #0
   1500c:	bne	14ffc <base_info_ref@@Base+0x99c>
   15010:	ldr	r0, [r5, #8]
   15014:	bl	b2e4 <g_slist_free@plt>
   15018:	ldr	r4, [r5, #12]
   1501c:	mov	r3, #0
   15020:	str	r3, [r5, #8]
   15024:	cmp	r4, r3
   15028:	beq	1506c <base_info_ref@@Base+0xa0c>
   1502c:	ldr	r0, [r4]
   15030:	bl	14fcc <base_info_ref@@Base+0x96c>
   15034:	ldr	r4, [r4, #4]
   15038:	cmp	r4, #0
   1503c:	bne	1502c <base_info_ref@@Base+0x9cc>
   15040:	ldr	r0, [r5, #12]
   15044:	bl	b2e4 <g_slist_free@plt>
   15048:	mov	r3, #0
   1504c:	ldr	r0, [r5, #4]
   15050:	str	r3, [r5, #12]
   15054:	bl	b248 <g_free@plt>
   15058:	mov	r0, r5
   1505c:	pop	{r3, r4, r5, lr}
   15060:	b	b248 <g_free@plt>
   15064:	mov	r0, r4
   15068:	b	15014 <base_info_ref@@Base+0x9b4>
   1506c:	mov	r0, r4
   15070:	b	15044 <base_info_ref@@Base+0x9e4>
   15074:	push	{r4, r5, r6, lr}
   15078:	mov	r6, r0
   1507c:	mov	r4, r1
   15080:	mov	r0, r2
   15084:	mov	r5, r2
   15088:	bl	147b4 <base_info_ref@@Base+0x154>
   1508c:	ldr	r0, [r6, #12]
   15090:	mov	r1, r4
   15094:	bl	b704 <g_slist_find@plt>
   15098:	mov	r6, r0
   1509c:	mov	r0, r4
   150a0:	bl	14fcc <base_info_ref@@Base+0x96c>
   150a4:	str	r5, [r6]
   150a8:	pop	{r4, r5, r6, pc}

000150ac <base_info_unref@@Base>:
   150ac:	subs	r3, r0, #0
   150b0:	beq	15138 <base_info_unref@@Base+0x8c>
   150b4:	ldr	r0, [r3]
   150b8:	ubfx	r0, r0, #0, #28
   150bc:	cmp	r0, #0
   150c0:	beq	150f0 <base_info_unref@@Base+0x44>
   150c4:	ldrb	r2, [r3, #3]
   150c8:	lsr	r2, r2, #4
   150cc:	cmp	r2, #5
   150d0:	addls	pc, pc, r2, lsl #2
   150d4:	b	15150 <base_info_unref@@Base+0xa4>
   150d8:	b	15110 <base_info_unref@@Base+0x64>
   150dc:	b	15118 <base_info_unref@@Base+0x6c>
   150e0:	b	15120 <base_info_unref@@Base+0x74>
   150e4:	b	15128 <base_info_unref@@Base+0x7c>
   150e8:	b	15130 <base_info_unref@@Base+0x84>
   150ec:	b	15108 <base_info_unref@@Base+0x5c>
   150f0:	ldr	r1, [pc, #92]	; 15154 <base_info_unref@@Base+0xa8>
   150f4:	ldr	r2, [pc, #92]	; 15158 <base_info_unref@@Base+0xac>
   150f8:	add	r1, pc, r1
   150fc:	add	r2, pc, r2
   15100:	add	r1, r1, #16
   15104:	b	b6d4 <g_return_if_fail_warning@plt>
   15108:	mov	r0, r3
   1510c:	b	14c60 <base_info_ref@@Base+0x600>
   15110:	mov	r0, r3
   15114:	b	14fcc <base_info_ref@@Base+0x96c>
   15118:	mov	r0, r3
   1511c:	b	14ee4 <base_info_ref@@Base+0x884>
   15120:	mov	r0, r3
   15124:	b	14e5c <base_info_ref@@Base+0x7fc>
   15128:	mov	r0, r3
   1512c:	b	14ea4 <base_info_ref@@Base+0x844>
   15130:	mov	r0, r3
   15134:	b	14dd0 <base_info_ref@@Base+0x770>
   15138:	ldr	r1, [pc, #28]	; 1515c <base_info_unref@@Base+0xb0>
   1513c:	ldr	r2, [pc, #28]	; 15160 <base_info_unref@@Base+0xb4>
   15140:	add	r1, pc, r1
   15144:	add	r2, pc, r2
   15148:	add	r1, r1, #16
   1514c:	b	b6d4 <g_return_if_fail_warning@plt>
   15150:	bx	lr
   15154:	andeq	r3, r0, r8, lsl r9
   15158:	andeq	r3, r0, r4, asr #18
   1515c:	ldrdeq	r3, [r0], -r0
   15160:	andeq	r3, r0, ip, ror #17
   15164:	ldr	r0, [r0, #4]
   15168:	bx	lr
   1516c:	ldr	r0, [r0, #8]
   15170:	bx	lr
   15174:	ldr	r0, [r0, #12]
   15178:	bx	lr
   1517c:	ldr	r3, [pc, #88]	; 151dc <base_info_unref@@Base+0x130>
   15180:	mov	ip, #0
   15184:	push	{r4, lr}
   15188:	add	r3, pc, r3
   1518c:	ldr	lr, [pc, #76]	; 151e0 <base_info_unref@@Base+0x134>
   15190:	sub	sp, sp, #8
   15194:	add	r2, sp, #8
   15198:	ldr	r1, [pc, #68]	; 151e4 <base_info_unref@@Base+0x138>
   1519c:	ldr	r0, [r0, #16]
   151a0:	ldr	r4, [r3, lr]
   151a4:	add	r1, pc, r1
   151a8:	str	ip, [r2, #-8]!
   151ac:	mov	r2, sp
   151b0:	ldr	r3, [r4]
   151b4:	str	r3, [sp, #4]
   151b8:	bl	b650 <g_hash_table_foreach@plt>
   151bc:	ldr	r2, [sp, #4]
   151c0:	ldr	r3, [r4]
   151c4:	ldr	r0, [sp]
   151c8:	cmp	r2, r3
   151cc:	bne	151d8 <base_info_unref@@Base+0x12c>
   151d0:	add	sp, sp, #8
   151d4:	pop	{r4, pc}
   151d8:	bl	b824 <__stack_chk_fail@plt>
   151dc:	andeq	ip, r0, r0, ror lr
   151e0:	strdeq	r0, [r0], -r8
   151e4:			; <UNDEFINED> instruction: 0xfffff498
   151e8:	ldr	r0, [r0, #16]
   151ec:	b	b890 <g_hash_table_lookup@plt>
   151f0:	push	{r4, r5, r6, lr}
   151f4:	mov	r5, r2
   151f8:	ldr	r4, [r0, #16]
   151fc:	mov	r0, r1
   15200:	bl	b3a4 <g_strdup@plt>
   15204:	mov	r6, r0
   15208:	mov	r0, r5
   1520c:	bl	b3a4 <g_strdup@plt>
   15210:	mov	r1, r6
   15214:	mov	r2, r0
   15218:	mov	r0, r4
   1521c:	pop	{r4, r5, r6, lr}
   15220:	b	b410 <g_hash_table_insert@plt>
   15224:	ldr	r3, [r0, #16]
   15228:	cmp	r3, #0
   1522c:	bxne	lr
   15230:	ldr	r0, [r0, #8]
   15234:	b	b5a8 <g_string_append_len@plt>
   15238:	b	b7dc <g_realloc@plt>
   1523c:	b	b4b8 <g_malloc@plt>
   15240:	push	{r3, r4, r5, lr}
   15244:	mov	r4, r0
   15248:	ldr	r5, [r0, #16]
   1524c:	cmp	r5, #0
   15250:	bne	15290 <base_info_unref@@Base+0x1e4>
   15254:	ldr	r3, [r0, #8]
   15258:	ldr	r2, [r3, #4]
   1525c:	cmp	r2, #0
   15260:	bne	1526c <base_info_unref@@Base+0x1c0>
   15264:	mov	r0, #1
   15268:	pop	{r3, r4, r5, pc}
   1526c:	ldr	r1, [r3]
   15270:	ldr	r0, [r0]
   15274:	ldr	r3, [r4, #12]
   15278:	bl	16a9c <base_info_unref@@Base+0x19f0>
   1527c:	cmp	r0, #0
   15280:	bne	15298 <base_info_unref@@Base+0x1ec>
   15284:	mov	r3, #1
   15288:	str	r3, [r4, #16]
   1528c:	pop	{r3, r4, r5, pc}
   15290:	mov	r0, #0
   15294:	pop	{r3, r4, r5, pc}
   15298:	ldr	r0, [r4, #8]
   1529c:	mov	r1, r5
   152a0:	bl	b590 <g_string_set_size@plt>
   152a4:	mov	r0, #1
   152a8:	pop	{r3, r4, r5, pc}
   152ac:	push	{r3, r4, r5, lr}
   152b0:	mov	r5, r1
   152b4:	mov	r4, r0
   152b8:	bl	15240 <base_info_unref@@Base+0x194>
   152bc:	cmp	r0, #0
   152c0:	popeq	{r3, r4, r5, pc}
   152c4:	mov	r1, r5
   152c8:	ldr	r0, [r4]
   152cc:	ldr	r2, [r4, #12]
   152d0:	bl	168e4 <base_info_unref@@Base+0x1838>
   152d4:	cmp	r0, #0
   152d8:	moveq	r3, #1
   152dc:	streq	r3, [r4, #16]
   152e0:	pop	{r3, r4, r5, pc}
   152e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   152e8:	mov	r8, r0
   152ec:	ldr	r4, [r0, #16]
   152f0:	sub	sp, sp, #8
   152f4:	mov	r9, r1
   152f8:	mov	r5, r2
   152fc:	cmp	r4, #0
   15300:	beq	1530c <base_info_unref@@Base+0x260>
   15304:	add	sp, sp, #8
   15308:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1530c:	bl	15240 <base_info_unref@@Base+0x194>
   15310:	cmp	r0, #0
   15314:	beq	15304 <base_info_unref@@Base+0x258>
   15318:	ldr	r3, [r5]
   1531c:	cmp	r3, #0
   15320:	beq	153f8 <base_info_unref@@Base+0x34c>
   15324:	mov	r3, r4
   15328:	mov	r2, r5
   1532c:	ldr	r1, [r2, #4]!
   15330:	add	r3, r3, #1
   15334:	cmp	r1, #0
   15338:	bne	1532c <base_info_unref@@Base+0x280>
   1533c:	asr	r3, r3, #1
   15340:	add	r4, r3, #1
   15344:	mov	r1, #4
   15348:	mov	r0, r4
   1534c:	bl	b560 <g_malloc0_n@plt>
   15350:	mov	r1, #4
   15354:	mov	sl, r0
   15358:	mov	r0, r4
   1535c:	bl	b560 <g_malloc0_n@plt>
   15360:	ldr	lr, [r5]
   15364:	cmp	lr, #0
   15368:	movne	r6, #0
   1536c:	movne	ip, r6
   15370:	mov	r7, r0
   15374:	beq	153a0 <base_info_unref@@Base+0x2f4>
   15378:	asr	r4, ip, #1
   1537c:	add	ip, ip, #2
   15380:	add	r3, r6, #1
   15384:	str	lr, [sl, r4, lsl #2]
   15388:	mov	r6, ip
   1538c:	ldr	lr, [r5, ip, lsl #2]
   15390:	ldr	r3, [r5, r3, lsl #2]
   15394:	cmp	lr, #0
   15398:	str	r3, [r7, r4, lsl #2]
   1539c:	bne	15378 <base_info_unref@@Base+0x2cc>
   153a0:	ldr	ip, [r8, #12]
   153a4:	mov	r1, r9
   153a8:	ldr	r0, [r8]
   153ac:	mov	r2, sl
   153b0:	mov	r3, r7
   153b4:	str	ip, [sp]
   153b8:	bl	15ab4 <base_info_unref@@Base+0xa08>
   153bc:	cmp	r0, #0
   153c0:	beq	153dc <base_info_unref@@Base+0x330>
   153c4:	mov	r0, sl
   153c8:	bl	b248 <g_free@plt>
   153cc:	mov	r0, r7
   153d0:	add	sp, sp, #8
   153d4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   153d8:	b	b248 <g_free@plt>
   153dc:	mov	r0, sl
   153e0:	bl	b248 <g_free@plt>
   153e4:	mov	r0, r7
   153e8:	bl	b248 <g_free@plt>
   153ec:	mov	r3, #1
   153f0:	str	r3, [r8, #16]
   153f4:	b	15304 <base_info_unref@@Base+0x258>
   153f8:	mov	r4, #1
   153fc:	b	15344 <base_info_unref@@Base+0x298>
   15400:	ldr	r3, [pc, #656]	; 15698 <base_info_unref@@Base+0x5ec>
   15404:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15408:	subs	r5, r2, #0
   1540c:	ldr	r2, [pc, #648]	; 1569c <base_info_unref@@Base+0x5f0>
   15410:	add	r3, pc, r3
   15414:	sub	sp, sp, #40	; 0x28
   15418:	mov	r9, r0
   1541c:	mov	r7, r1
   15420:	ldr	r8, [r3, r2]
   15424:	ldr	r3, [r8]
   15428:	str	r3, [sp, #36]	; 0x24
   1542c:	beq	15470 <base_info_unref@@Base+0x3c4>
   15430:	ldr	r3, [r5]
   15434:	cmp	r3, #0
   15438:	beq	15470 <base_info_unref@@Base+0x3c4>
   1543c:	ldr	r1, [pc, #604]	; 156a0 <base_info_unref@@Base+0x5f4>
   15440:	mov	r0, #0
   15444:	ldr	r2, [pc, #600]	; 156a4 <base_info_unref@@Base+0x5f8>
   15448:	add	r1, pc, r1
   1544c:	add	r2, pc, r2
   15450:	bl	b6d4 <g_return_if_fail_warning@plt>
   15454:	mov	r0, #0
   15458:	ldr	r2, [sp, #36]	; 0x24
   1545c:	ldr	r3, [r8]
   15460:	cmp	r2, r3
   15464:	bne	1557c <base_info_unref@@Base+0x4d0>
   15468:	add	sp, sp, #40	; 0x28
   1546c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15470:	cmp	r7, #0
   15474:	bge	15484 <base_info_unref@@Base+0x3d8>
   15478:	mov	r0, r9
   1547c:	bl	b674 <strlen@plt>
   15480:	mov	r7, r0
   15484:	ldr	r0, [pc, #540]	; 156a8 <base_info_unref@@Base+0x5fc>
   15488:	mov	r6, #0
   1548c:	ldr	r1, [pc, #536]	; 156ac <base_info_unref@@Base+0x600>
   15490:	mov	r2, r6
   15494:	add	r0, pc, r0
   15498:	str	r5, [sp, #28]
   1549c:	add	r1, pc, r1
   154a0:	str	r6, [sp, #16]
   154a4:	str	r6, [sp, #32]
   154a8:	bl	b2c0 <XML_ParserCreate_MM@plt>
   154ac:	subs	r4, r0, #0
   154b0:	beq	15608 <base_info_unref@@Base+0x55c>
   154b4:	bl	159b4 <base_info_unref@@Base+0x908>
   154b8:	str	r0, [sp, #16]
   154bc:	mov	r0, r6
   154c0:	bl	b4d0 <g_string_new@plt>
   154c4:	add	r1, sp, #16
   154c8:	str	r0, [sp, #24]
   154cc:	mov	r0, r4
   154d0:	bl	b458 <XML_SetUserData@plt>
   154d4:	ldr	r1, [pc, #468]	; 156b0 <base_info_unref@@Base+0x604>
   154d8:	ldr	r2, [pc, #468]	; 156b4 <base_info_unref@@Base+0x608>
   154dc:	mov	r0, r4
   154e0:	add	r1, pc, r1
   154e4:	add	r2, pc, r2
   154e8:	bl	b914 <XML_SetElementHandler@plt>
   154ec:	ldr	r1, [pc, #452]	; 156b8 <base_info_unref@@Base+0x60c>
   154f0:	mov	r0, r4
   154f4:	add	r1, pc, r1
   154f8:	bl	ba28 <XML_SetCharacterDataHandler@plt>
   154fc:	mov	r0, r4
   15500:	mov	r1, r9
   15504:	mov	r2, r7
   15508:	mov	r3, #1
   1550c:	bl	b95c <XML_Parse@plt>
   15510:	cmp	r0, #0
   15514:	bne	15580 <base_info_unref@@Base+0x4d4>
   15518:	ldr	r3, [sp, #28]
   1551c:	cmp	r3, #0
   15520:	beq	15530 <base_info_unref@@Base+0x484>
   15524:	ldr	r7, [r3]
   15528:	cmp	r7, #0
   1552c:	beq	1561c <base_info_unref@@Base+0x570>
   15530:	cmp	r5, #0
   15534:	beq	15544 <base_info_unref@@Base+0x498>
   15538:	ldr	r5, [r5]
   1553c:	cmp	r5, #0
   15540:	beq	155e8 <base_info_unref@@Base+0x53c>
   15544:	mov	r1, #1
   15548:	ldr	r0, [sp, #24]
   1554c:	bl	b608 <g_string_free@plt>
   15550:	mov	r0, r4
   15554:	bl	b8c0 <XML_ParserFree@plt>
   15558:	ldr	r0, [sp, #16]
   1555c:	cmp	r0, #0
   15560:	beq	15458 <base_info_unref@@Base+0x3ac>
   15564:	bl	159dc <base_info_unref@@Base+0x930>
   15568:	ldr	r2, [sp, #36]	; 0x24
   1556c:	ldr	r3, [r8]
   15570:	mov	r0, #0
   15574:	cmp	r2, r3
   15578:	beq	15468 <base_info_unref@@Base+0x3bc>
   1557c:	bl	b824 <__stack_chk_fail@plt>
   15580:	ldr	r3, [sp, #32]
   15584:	cmp	r3, #0
   15588:	bne	15530 <base_info_unref@@Base+0x484>
   1558c:	ldr	r0, [sp, #16]
   15590:	mov	r1, r5
   15594:	bl	16ae8 <base_info_unref@@Base+0x1a3c>
   15598:	cmp	r0, #0
   1559c:	beq	15530 <base_info_unref@@Base+0x484>
   155a0:	mov	r0, r4
   155a4:	bl	b8c0 <XML_ParserFree@plt>
   155a8:	ldr	r0, [sp, #24]
   155ac:	mov	r1, #1
   155b0:	bl	b608 <g_string_free@plt>
   155b4:	cmp	r5, #0
   155b8:	beq	155c8 <base_info_unref@@Base+0x51c>
   155bc:	ldr	r3, [r5]
   155c0:	cmp	r3, #0
   155c4:	bne	1543c <base_info_unref@@Base+0x390>
   155c8:	ldr	r0, [sp, #16]
   155cc:	bl	16b34 <base_info_unref@@Base+0x1a88>
   155d0:	mov	r4, r0
   155d4:	bl	147b4 <base_info_ref@@Base+0x154>
   155d8:	ldr	r0, [sp, #16]
   155dc:	bl	159dc <base_info_unref@@Base+0x930>
   155e0:	mov	r0, r4
   155e4:	b	15458 <base_info_unref@@Base+0x3ac>
   155e8:	ldr	r1, [pc, #204]	; 156bc <base_info_unref@@Base+0x610>
   155ec:	mov	r0, r5
   155f0:	ldr	r2, [pc, #200]	; 156c0 <base_info_unref@@Base+0x614>
   155f4:	add	r1, pc, r1
   155f8:	add	r2, pc, r2
   155fc:	bl	b6d4 <g_return_if_fail_warning@plt>
   15600:	mov	r0, r5
   15604:	b	15458 <base_info_unref@@Base+0x3ac>
   15608:	ldr	r2, [pc, #180]	; 156c4 <base_info_unref@@Base+0x618>
   1560c:	mov	r1, #4
   15610:	add	r2, pc, r2
   15614:	bl	ba58 <g_log@plt>
   15618:	b	15618 <base_info_unref@@Base+0x56c>
   1561c:	mov	r0, r4
   15620:	bl	b44c <XML_GetErrorCode@plt>
   15624:	cmp	r0, #1
   15628:	mov	r6, r0
   1562c:	beq	15680 <base_info_unref@@Base+0x5d4>
   15630:	bl	bab8 <g_markup_error_quark@plt>
   15634:	mov	r7, r0
   15638:	mov	r0, r4
   1563c:	bl	b728 <XML_GetCurrentLineNumber@plt>
   15640:	mov	sl, r0
   15644:	mov	r0, r4
   15648:	bl	b518 <XML_GetCurrentColumnNumber@plt>
   1564c:	mov	r9, r0
   15650:	mov	r0, r6
   15654:	bl	b818 <XML_ErrorString@plt>
   15658:	ldr	r3, [pc, #104]	; 156c8 <base_info_unref@@Base+0x61c>
   1565c:	str	sl, [sp]
   15660:	mov	r1, r7
   15664:	str	r9, [sp, #4]
   15668:	mov	r2, #2
   1566c:	add	r3, pc, r3
   15670:	str	r0, [sp, #8]
   15674:	mov	r0, r5
   15678:	bl	b6ec <g_set_error@plt>
   1567c:	b	15530 <base_info_unref@@Base+0x484>
   15680:	ldr	r2, [pc, #68]	; 156cc <base_info_unref@@Base+0x620>
   15684:	mov	r0, r7
   15688:	mov	r1, #4
   1568c:	add	r2, pc, r2
   15690:	bl	ba58 <g_log@plt>
   15694:	b	15694 <base_info_unref@@Base+0x5e8>
   15698:	andeq	ip, r0, r8, ror #23
   1569c:	strdeq	r0, [r0], -r8
   156a0:	andeq	r3, r0, r8, lsl r6
   156a4:	andeq	r3, r0, r0, asr #13
   156a8:	andeq	r3, r0, ip, ror #11
   156ac:	andeq	ip, r0, ip, ror #28
   156b0:			; <UNDEFINED> instruction: 0xfffffdfc
   156b4:			; <UNDEFINED> instruction: 0xfffffdc0
   156b8:			; <UNDEFINED> instruction: 0xfffffd28
   156bc:	andeq	r3, r0, ip, ror #8
   156c0:	andeq	r3, r0, r4, lsr r5
   156c4:	andeq	r3, r0, r8, ror r4
   156c8:	andeq	r3, r0, r4, ror #8
   156cc:	andeq	r3, r0, ip, lsl r4
   156d0:	ldr	ip, [pc, #116]	; 1574c <base_info_unref@@Base+0x6a0>
   156d4:	push	{r4, r5, lr}
   156d8:	add	ip, pc, ip
   156dc:	ldr	r4, [pc, #108]	; 15750 <base_info_unref@@Base+0x6a4>
   156e0:	sub	sp, sp, #20
   156e4:	mov	r5, r1
   156e8:	add	r1, sp, #16
   156ec:	mov	lr, #0
   156f0:	mov	r3, r5
   156f4:	ldr	r4, [ip, r4]
   156f8:	add	r2, sp, #8
   156fc:	str	lr, [r1, #-12]!
   15700:	ldr	ip, [r4]
   15704:	str	ip, [sp, #12]
   15708:	bl	b908 <g_file_get_contents@plt>
   1570c:	cmp	r0, #0
   15710:	beq	15730 <base_info_unref@@Base+0x684>
   15714:	mov	r2, r5
   15718:	ldmib	sp, {r0, r1}
   1571c:	bl	15400 <base_info_unref@@Base+0x354>
   15720:	mov	r5, r0
   15724:	ldr	r0, [sp, #4]
   15728:	bl	b248 <g_free@plt>
   1572c:	mov	r0, r5
   15730:	ldr	r2, [sp, #12]
   15734:	ldr	r3, [r4]
   15738:	cmp	r2, r3
   1573c:	bne	15748 <base_info_unref@@Base+0x69c>
   15740:	add	sp, sp, #20
   15744:	pop	{r4, r5, pc}
   15748:	bl	b824 <__stack_chk_fail@plt>
   1574c:	andeq	ip, r0, r0, lsr #18
   15750:	strdeq	r0, [r0], -r8
   15754:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15758:	sub	sp, sp, #244	; 0xf4
   1575c:	ldr	ip, [pc, #564]	; 15998 <base_info_unref@@Base+0x8ec>
   15760:	mov	fp, r2
   15764:	str	r0, [sp, #32]
   15768:	ldr	r0, [pc, #556]	; 1599c <base_info_unref@@Base+0x8f0>
   1576c:	add	ip, pc, ip
   15770:	str	r3, [sp, #36]	; 0x24
   15774:	str	r1, [sp, #24]
   15778:	mov	r3, ip
   1577c:	ldr	r0, [ip, r0]
   15780:	ldr	r9, [sp, #284]	; 0x11c
   15784:	ldr	r3, [r0]
   15788:	cmp	r9, #0
   1578c:	str	r0, [sp, #28]
   15790:	str	r3, [sp, #236]	; 0xec
   15794:	beq	15938 <base_info_unref@@Base+0x88c>
   15798:	ldr	r1, [sp, #288]	; 0x120
   1579c:	mov	r5, #0
   157a0:	ldr	r3, [pc, #504]	; 159a0 <base_info_unref@@Base+0x8f4>
   157a4:	add	ip, sp, #296	; 0x128
   157a8:	cmp	r1, r5
   157ac:	str	r5, [r9]
   157b0:	add	r3, pc, r3
   157b4:	str	r9, [sp, #48]	; 0x30
   157b8:	str	r3, [sp, #44]	; 0x2c
   157bc:	str	ip, [sp, #40]	; 0x28
   157c0:	ldr	r3, [sp, #292]	; 0x124
   157c4:	beq	15958 <base_info_unref@@Base+0x8ac>
   157c8:	cmp	r3, r5
   157cc:	beq	158e0 <base_info_unref@@Base+0x834>
   157d0:	add	r0, sp, #304	; 0x130
   157d4:	add	r2, sp, #44	; 0x2c
   157d8:	mov	r4, #1
   157dc:	b	157f4 <base_info_unref@@Base+0x748>
   157e0:	cmp	r3, #0
   157e4:	add	r0, r0, #8
   157e8:	add	ip, ip, #8
   157ec:	add	r2, r2, #8
   157f0:	beq	158e0 <base_info_unref@@Base+0x834>
   157f4:	str	r5, [r3]
   157f8:	add	r4, r4, #1
   157fc:	str	r1, [r2, #8]
   15800:	ldr	r1, [r0, #-8]
   15804:	str	r3, [r2, #12]
   15808:	cmp	r1, #0
   1580c:	ldr	r3, [ip, #4]
   15810:	bne	157e0 <base_info_unref@@Base+0x734>
   15814:	ldr	r2, [sp, #24]
   15818:	ldr	r1, [r2]
   1581c:	cmp	r1, #0
   15820:	beq	158d8 <base_info_unref@@Base+0x82c>
   15824:	ldr	r8, [sp, #24]
   15828:	add	r6, sp, #44	; 0x2c
   1582c:	ldr	r2, [sp, #24]
   15830:	mov	sl, #0
   15834:	add	r2, r2, #4
   15838:	str	r2, [sp, #20]
   1583c:	mov	r3, #0
   15840:	str	r3, [sp, #16]
   15844:	mov	r9, r3
   15848:	b	15850 <base_info_unref@@Base+0x7a4>
   1584c:	ldr	r1, [r8]
   15850:	ldr	r5, [r6, r9, lsl #3]
   15854:	lsl	r7, r9, #3
   15858:	mov	r0, r5
   1585c:	bl	ba64 <strcmp@plt>
   15860:	cmp	r0, #0
   15864:	bne	1588c <base_info_unref@@Base+0x7e0>
   15868:	add	r7, r6, r7
   1586c:	ldr	r2, [r7, #4]
   15870:	ldr	r1, [r2]
   15874:	cmp	r1, #0
   15878:	bne	15900 <base_info_unref@@Base+0x854>
   1587c:	ldr	r3, [fp, sl]
   15880:	mov	r1, #1
   15884:	str	r1, [sp, #16]
   15888:	str	r3, [r2]
   1588c:	add	r9, r9, #1
   15890:	cmp	r9, r4
   15894:	blt	1584c <base_info_unref@@Base+0x7a0>
   15898:	ldr	r2, [sp, #16]
   1589c:	cmp	r2, #0
   158a0:	bne	158b8 <base_info_unref@@Base+0x80c>
   158a4:	ldr	r0, [r8]
   158a8:	mov	r1, #58	; 0x3a
   158ac:	bl	b3f8 <strchr@plt>
   158b0:	cmp	r0, #0
   158b4:	beq	15960 <base_info_unref@@Base+0x8b4>
   158b8:	ldr	r2, [sp, #20]
   158bc:	ldr	r3, [sp, #24]
   158c0:	mov	r8, r2
   158c4:	rsb	sl, r3, r2
   158c8:	ldr	r1, [r2], #4
   158cc:	cmp	r1, #0
   158d0:	str	r2, [sp, #20]
   158d4:	bne	1583c <base_info_unref@@Base+0x790>
   158d8:	mov	r0, #1
   158dc:	b	158e4 <base_info_unref@@Base+0x838>
   158e0:	mov	r0, #0
   158e4:	ldr	r1, [sp, #28]
   158e8:	ldr	r2, [sp, #236]	; 0xec
   158ec:	ldr	r3, [r1]
   158f0:	cmp	r2, r3
   158f4:	bne	15994 <base_info_unref@@Base+0x8e8>
   158f8:	add	sp, sp, #244	; 0xf4
   158fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15900:	str	r0, [sp, #12]
   15904:	bl	bab8 <g_markup_error_quark@plt>
   15908:	ldr	r3, [sp, #32]
   1590c:	mov	r2, #2
   15910:	str	r5, [sp]
   15914:	str	r3, [sp, #4]
   15918:	ldr	r3, [pc, #132]	; 159a4 <base_info_unref@@Base+0x8f8>
   1591c:	add	r3, pc, r3
   15920:	mov	r1, r0
   15924:	ldr	r0, [sp, #36]	; 0x24
   15928:	bl	b6ec <g_set_error@plt>
   1592c:	ldr	ip, [sp, #12]
   15930:	mov	r0, ip
   15934:	b	158e4 <base_info_unref@@Base+0x838>
   15938:	ldr	r1, [pc, #104]	; 159a8 <base_info_unref@@Base+0x8fc>
   1593c:	mov	r0, r9
   15940:	ldr	r2, [pc, #100]	; 159ac <base_info_unref@@Base+0x900>
   15944:	add	r1, pc, r1
   15948:	add	r2, pc, r2
   1594c:	bl	b6d4 <g_return_if_fail_warning@plt>
   15950:	mov	r0, r9
   15954:	b	158e4 <base_info_unref@@Base+0x838>
   15958:	mov	r4, #1
   1595c:	b	15814 <base_info_unref@@Base+0x768>
   15960:	bl	bab8 <g_markup_error_quark@plt>
   15964:	ldr	r3, [sp, #32]
   15968:	ldr	ip, [r8]
   1596c:	mov	r2, #2
   15970:	str	r3, [sp, #4]
   15974:	ldr	r3, [pc, #52]	; 159b0 <base_info_unref@@Base+0x904>
   15978:	str	ip, [sp]
   1597c:	add	r3, pc, r3
   15980:	mov	r1, r0
   15984:	ldr	r0, [sp, #36]	; 0x24
   15988:	bl	b6ec <g_set_error@plt>
   1598c:	ldr	r0, [sp, #16]
   15990:	b	158e4 <base_info_unref@@Base+0x838>
   15994:	bl	b824 <__stack_chk_fail@plt>
   15998:	andeq	ip, r0, ip, lsl #17
   1599c:	strdeq	r0, [r0], -r8
   159a0:	andeq	r3, r0, r8, lsr #9
   159a4:	andeq	r3, r0, r8, lsr #5
   159a8:	andeq	r3, r0, r8, lsl #4
   159ac:	strdeq	r3, [r0], -r0
   159b0:	andeq	r3, r0, r0, lsl #5
   159b4:	push	{r3, lr}
   159b8:	mov	r0, #40	; 0x28
   159bc:	bl	b8b4 <g_malloc0@plt>
   159c0:	mov	r3, #1
   159c4:	str	r3, [r0]
   159c8:	pop	{r3, pc}
   159cc:	ldr	r2, [r0]
   159d0:	add	r2, r2, #1
   159d4:	str	r2, [r0]
   159d8:	bx	lr
   159dc:	push	{r4, lr}
   159e0:	mov	r4, r0
   159e4:	ldr	r3, [r0]
   159e8:	sub	r3, r3, #1
   159ec:	str	r3, [r0]
   159f0:	cmp	r3, #0
   159f4:	popne	{r4, pc}
   159f8:	ldr	r0, [r0, #4]
   159fc:	cmp	r0, #0
   15a00:	beq	15a08 <base_info_unref@@Base+0x95c>
   15a04:	bl	14fcc <base_info_ref@@Base+0x96c>
   15a08:	mov	r0, r4
   15a0c:	pop	{r4, lr}
   15a10:	b	b248 <g_free@plt>
   15a14:	push	{r4, r5, lr}
   15a18:	subs	r4, r2, #0
   15a1c:	sub	sp, sp, #12
   15a20:	mov	r5, r1
   15a24:	beq	15a5c <base_info_unref@@Base+0x9b0>
   15a28:	ldr	r3, [r4]
   15a2c:	cmp	r3, #0
   15a30:	beq	15a5c <base_info_unref@@Base+0x9b0>
   15a34:	ldr	r1, [pc, #104]	; 15aa4 <base_info_unref@@Base+0x9f8>
   15a38:	mov	r0, #0
   15a3c:	ldr	r2, [pc, #100]	; 15aa8 <base_info_unref@@Base+0x9fc>
   15a40:	add	r1, pc, r1
   15a44:	add	r2, pc, r2
   15a48:	add	r1, r1, #20
   15a4c:	bl	b6d4 <g_return_if_fail_warning@plt>
   15a50:	mov	r0, #0
   15a54:	add	sp, sp, #12
   15a58:	pop	{r4, r5, pc}
   15a5c:	ldr	r1, [pc, #72]	; 15aac <base_info_unref@@Base+0xa00>
   15a60:	mov	r0, r5
   15a64:	add	r1, pc, r1
   15a68:	bl	ba64 <strcmp@plt>
   15a6c:	cmp	r0, #0
   15a70:	moveq	r0, #1
   15a74:	beq	15a54 <base_info_unref@@Base+0x9a8>
   15a78:	bl	bab8 <g_markup_error_quark@plt>
   15a7c:	ldr	r3, [pc, #44]	; 15ab0 <base_info_unref@@Base+0xa04>
   15a80:	str	r5, [sp]
   15a84:	mov	r2, #2
   15a88:	add	r3, pc, r3
   15a8c:	mov	r1, r0
   15a90:	mov	r0, r4
   15a94:	bl	b6ec <g_set_error@plt>
   15a98:	mov	r0, #0
   15a9c:	add	sp, sp, #12
   15aa0:	pop	{r4, r5, pc}
   15aa4:	andeq	r3, r0, ip, lsl #2
   15aa8:	andeq	r3, r0, r8, asr #1
   15aac:	andeq	r3, r0, ip, asr #4
   15ab0:	ldrdeq	r3, [r0], -r8
   15ab4:	ldr	ip, [pc, #3400]	; 16804 <base_info_unref@@Base+0x1758>
   15ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15abc:	add	ip, pc, ip
   15ac0:	ldr	lr, [pc, #3392]	; 16808 <base_info_unref@@Base+0x175c>
   15ac4:	sub	sp, sp, #68	; 0x44
   15ac8:	mov	r9, r3
   15acc:	mov	r6, r0
   15ad0:	ldr	r5, [sp, #104]	; 0x68
   15ad4:	mov	r0, ip
   15ad8:	ldr	r7, [ip, lr]
   15adc:	mov	r4, r1
   15ae0:	cmp	r5, #0
   15ae4:	mov	r8, r2
   15ae8:	ldr	r3, [r7]
   15aec:	str	r3, [sp, #60]	; 0x3c
   15af0:	beq	15b3c <base_info_unref@@Base+0xa90>
   15af4:	ldr	r3, [r5]
   15af8:	cmp	r3, #0
   15afc:	beq	15b3c <base_info_unref@@Base+0xa90>
   15b00:	ldr	r1, [pc, #3332]	; 1680c <base_info_unref@@Base+0x1760>
   15b04:	mov	r0, #0
   15b08:	ldr	r2, [pc, #3328]	; 16810 <base_info_unref@@Base+0x1764>
   15b0c:	add	r1, pc, r1
   15b10:	add	r2, pc, r2
   15b14:	add	r1, r1, #44	; 0x2c
   15b18:	bl	b6d4 <g_return_if_fail_warning@plt>
   15b1c:	mov	r3, #0
   15b20:	ldr	r2, [sp, #60]	; 0x3c
   15b24:	mov	r0, r3
   15b28:	ldr	r3, [r7]
   15b2c:	cmp	r2, r3
   15b30:	bne	16458 <base_info_unref@@Base+0x13ac>
   15b34:	add	sp, sp, #68	; 0x44
   15b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b3c:	ldr	r1, [pc, #3280]	; 16814 <base_info_unref@@Base+0x1768>
   15b40:	mov	r0, r4
   15b44:	add	r1, pc, r1
   15b48:	bl	ba64 <strcmp@plt>
   15b4c:	cmp	r0, #0
   15b50:	beq	15c2c <base_info_unref@@Base+0xb80>
   15b54:	ldr	r1, [pc, #3260]	; 16818 <base_info_unref@@Base+0x176c>
   15b58:	mov	r0, r4
   15b5c:	add	r1, pc, r1
   15b60:	bl	ba64 <strcmp@plt>
   15b64:	cmp	r0, #0
   15b68:	beq	15c60 <base_info_unref@@Base+0xbb4>
   15b6c:	ldr	r1, [pc, #3240]	; 1681c <base_info_unref@@Base+0x1770>
   15b70:	mov	r0, r4
   15b74:	add	r1, pc, r1
   15b78:	bl	ba64 <strcmp@plt>
   15b7c:	cmp	r0, #0
   15b80:	beq	15ea8 <base_info_unref@@Base+0xdfc>
   15b84:	ldr	r1, [pc, #3220]	; 16820 <base_info_unref@@Base+0x1774>
   15b88:	mov	r0, r4
   15b8c:	add	r1, pc, r1
   15b90:	bl	ba64 <strcmp@plt>
   15b94:	cmp	r0, #0
   15b98:	beq	15ef0 <base_info_unref@@Base+0xe44>
   15b9c:	ldr	r1, [pc, #3200]	; 16824 <base_info_unref@@Base+0x1778>
   15ba0:	mov	r0, r4
   15ba4:	add	r1, pc, r1
   15ba8:	bl	ba64 <strcmp@plt>
   15bac:	cmp	r0, #0
   15bb0:	beq	15e20 <base_info_unref@@Base+0xd74>
   15bb4:	ldrb	r3, [r4]
   15bb8:	cmp	r3, #97	; 0x61
   15bbc:	bne	15e68 <base_info_unref@@Base+0xdbc>
   15bc0:	ldrb	r3, [r4, #1]
   15bc4:	cmp	r3, #114	; 0x72
   15bc8:	bne	15e68 <base_info_unref@@Base+0xdbc>
   15bcc:	ldrb	r3, [r4, #2]
   15bd0:	cmp	r3, #103	; 0x67
   15bd4:	bne	15e68 <base_info_unref@@Base+0xdbc>
   15bd8:	ldrb	r3, [r4, #3]
   15bdc:	cmp	r3, #0
   15be0:	bne	15e68 <base_info_unref@@Base+0xdbc>
   15be4:	ldr	r3, [r6, #16]
   15be8:	cmp	r3, #0
   15bec:	beq	16400 <base_info_unref@@Base+0x1354>
   15bf0:	ldr	r3, [r6, #8]
   15bf4:	cmp	r3, #0
   15bf8:	beq	15c08 <base_info_unref@@Base+0xb5c>
   15bfc:	ldr	r3, [r6, #24]
   15c00:	cmp	r3, #0
   15c04:	beq	162c0 <base_info_unref@@Base+0x1214>
   15c08:	bl	bab8 <g_markup_error_quark@plt>
   15c0c:	ldr	r3, [pc, #3092]	; 16828 <base_info_unref@@Base+0x177c>
   15c10:	str	r4, [sp]
   15c14:	mov	r2, #2
   15c18:	add	r3, pc, r3
   15c1c:	mov	r1, r0
   15c20:	mov	r0, r5
   15c24:	bl	b6ec <g_set_error@plt>
   15c28:	b	15c58 <base_info_unref@@Base+0xbac>
   15c2c:	ldr	r3, [r6, #12]
   15c30:	cmp	r3, #0
   15c34:	beq	15c90 <base_info_unref@@Base+0xbe4>
   15c38:	bl	bab8 <g_markup_error_quark@plt>
   15c3c:	ldr	r3, [pc, #3048]	; 1682c <base_info_unref@@Base+0x1780>
   15c40:	str	r4, [sp]
   15c44:	mov	r2, #2
   15c48:	add	r3, pc, r3
   15c4c:	mov	r1, r0
   15c50:	mov	r0, r5
   15c54:	bl	b6ec <g_set_error@plt>
   15c58:	mov	r3, #0
   15c5c:	b	15b20 <base_info_unref@@Base+0xa74>
   15c60:	ldr	r3, [r6, #12]
   15c64:	cmp	r3, #0
   15c68:	beq	15d64 <base_info_unref@@Base+0xcb8>
   15c6c:	bl	bab8 <g_markup_error_quark@plt>
   15c70:	ldr	r3, [pc, #3000]	; 16830 <base_info_unref@@Base+0x1784>
   15c74:	str	r4, [sp]
   15c78:	mov	r2, #2
   15c7c:	add	r3, pc, r3
   15c80:	mov	r1, r0
   15c84:	mov	r0, r5
   15c88:	bl	b6ec <g_set_error@plt>
   15c8c:	b	15c58 <base_info_unref@@Base+0xbac>
   15c90:	ldr	r3, [r6, #16]
   15c94:	cmp	r3, #0
   15c98:	bne	15c38 <base_info_unref@@Base+0xb8c>
   15c9c:	ldr	r3, [r6, #20]
   15ca0:	cmp	r3, #0
   15ca4:	bne	15c38 <base_info_unref@@Base+0xb8c>
   15ca8:	ldr	r3, [r6, #24]
   15cac:	cmp	r3, #0
   15cb0:	bne	15c38 <base_info_unref@@Base+0xb8c>
   15cb4:	ldr	r3, [r6, #28]
   15cb8:	cmp	r3, #0
   15cbc:	bne	15c38 <base_info_unref@@Base+0xb8c>
   15cc0:	ldr	r0, [r6, #32]
   15cc4:	cmp	r0, #0
   15cc8:	bne	15c38 <base_info_unref@@Base+0xb8c>
   15ccc:	add	r3, sp, #64	; 0x40
   15cd0:	ldr	ip, [pc, #2908]	; 16834 <base_info_unref@@Base+0x1788>
   15cd4:	str	r0, [sp, #8]
   15cd8:	mov	r1, r8
   15cdc:	str	r0, [r3, #-20]!	; 0xffffffec
   15ce0:	add	ip, pc, ip
   15ce4:	str	r3, [sp, #4]
   15ce8:	mov	r2, r9
   15cec:	str	ip, [sp]
   15cf0:	mov	r0, r4
   15cf4:	mov	r3, r5
   15cf8:	bl	15754 <base_info_unref@@Base+0x6a8>
   15cfc:	cmp	r0, #0
   15d00:	beq	15c58 <base_info_unref@@Base+0xbac>
   15d04:	ldr	r3, [r6, #8]
   15d08:	cmp	r3, #0
   15d0c:	ldr	r3, [sp, #44]	; 0x2c
   15d10:	beq	166c8 <base_info_unref@@Base+0x161c>
   15d14:	cmp	r3, #0
   15d18:	beq	16774 <base_info_unref@@Base+0x16c8>
   15d1c:	ldrb	r3, [r3]
   15d20:	cmp	r3, #47	; 0x2f
   15d24:	beq	1673c <base_info_unref@@Base+0x1690>
   15d28:	ldr	r0, [sp, #44]	; 0x2c
   15d2c:	bl	14770 <base_info_ref@@Base+0x110>
   15d30:	ldr	r3, [r6, #8]
   15d34:	cmp	r3, #0
   15d38:	mov	r4, r0
   15d3c:	beq	15d4c <base_info_unref@@Base+0xca0>
   15d40:	ldr	r0, [r3]
   15d44:	mov	r1, r4
   15d48:	bl	147e4 <base_info_ref@@Base+0x184>
   15d4c:	mov	r1, r4
   15d50:	ldr	r0, [r6, #8]
   15d54:	bl	b680 <g_slist_prepend@plt>
   15d58:	mov	r3, #1
   15d5c:	str	r0, [r6, #8]
   15d60:	b	15b20 <base_info_unref@@Base+0xa74>
   15d64:	ldr	r3, [r6, #16]
   15d68:	cmp	r3, #0
   15d6c:	bne	15c6c <base_info_unref@@Base+0xbc0>
   15d70:	ldr	r3, [r6, #20]
   15d74:	cmp	r3, #0
   15d78:	bne	15c6c <base_info_unref@@Base+0xbc0>
   15d7c:	ldr	r3, [r6, #24]
   15d80:	cmp	r3, #0
   15d84:	bne	15c6c <base_info_unref@@Base+0xbc0>
   15d88:	ldr	r3, [r6, #28]
   15d8c:	cmp	r3, #0
   15d90:	bne	15c6c <base_info_unref@@Base+0xbc0>
   15d94:	ldr	r0, [r6, #32]
   15d98:	cmp	r0, #0
   15d9c:	bne	15c6c <base_info_unref@@Base+0xbc0>
   15da0:	ldr	r3, [r6, #8]
   15da4:	cmp	r3, #0
   15da8:	beq	15c6c <base_info_unref@@Base+0xbc0>
   15dac:	add	r3, sp, #64	; 0x40
   15db0:	ldr	ip, [pc, #2688]	; 16838 <base_info_unref@@Base+0x178c>
   15db4:	str	r0, [sp, #8]
   15db8:	mov	r1, r8
   15dbc:	str	r0, [r3, #-20]!	; 0xffffffec
   15dc0:	add	ip, pc, ip
   15dc4:	str	r3, [sp, #4]
   15dc8:	mov	r2, r9
   15dcc:	str	ip, [sp]
   15dd0:	mov	r0, r4
   15dd4:	mov	r3, r5
   15dd8:	bl	15754 <base_info_unref@@Base+0x6a8>
   15ddc:	cmp	r0, #0
   15de0:	beq	15c58 <base_info_unref@@Base+0xbac>
   15de4:	ldr	r0, [sp, #44]	; 0x2c
   15de8:	cmp	r0, #0
   15dec:	beq	16594 <base_info_unref@@Base+0x14e8>
   15df0:	ldr	r3, [r6, #8]
   15df4:	ldr	r5, [r3]
   15df8:	bl	1480c <base_info_ref@@Base+0x1ac>
   15dfc:	mov	r4, r0
   15e00:	mov	r0, r5
   15e04:	mov	r1, r4
   15e08:	bl	148a8 <base_info_ref@@Base+0x248>
   15e0c:	mov	r0, r4
   15e10:	bl	14ee4 <base_info_ref@@Base+0x884>
   15e14:	str	r4, [r6, #12]
   15e18:	mov	r3, #1
   15e1c:	b	15b20 <base_info_unref@@Base+0xa74>
   15e20:	ldr	r3, [r6, #12]
   15e24:	cmp	r3, #0
   15e28:	beq	15e44 <base_info_unref@@Base+0xd98>
   15e2c:	ldr	r3, [r6, #8]
   15e30:	cmp	r3, #0
   15e34:	beq	15e44 <base_info_unref@@Base+0xd98>
   15e38:	ldr	r3, [r6, #20]
   15e3c:	cmp	r3, #0
   15e40:	beq	15f38 <base_info_unref@@Base+0xe8c>
   15e44:	bl	bab8 <g_markup_error_quark@plt>
   15e48:	ldr	r3, [pc, #2540]	; 1683c <base_info_unref@@Base+0x1790>
   15e4c:	str	r4, [sp]
   15e50:	mov	r2, #2
   15e54:	add	r3, pc, r3
   15e58:	mov	r1, r0
   15e5c:	mov	r0, r5
   15e60:	bl	b6ec <g_set_error@plt>
   15e64:	b	15c58 <base_info_unref@@Base+0xbac>
   15e68:	ldr	r1, [pc, #2512]	; 16840 <base_info_unref@@Base+0x1794>
   15e6c:	mov	r0, r4
   15e70:	add	r1, pc, r1
   15e74:	bl	ba64 <strcmp@plt>
   15e78:	cmp	r0, #0
   15e7c:	beq	1608c <base_info_unref@@Base+0xfe0>
   15e80:	mov	r0, r4
   15e84:	mov	r1, #58	; 0x3a
   15e88:	bl	b3f8 <strchr@plt>
   15e8c:	cmp	r0, #0
   15e90:	beq	1616c <base_info_unref@@Base+0x10c0>
   15e94:	ldr	r2, [r6, #36]	; 0x24
   15e98:	mov	r3, #1
   15e9c:	add	r2, r2, r3
   15ea0:	str	r2, [r6, #36]	; 0x24
   15ea4:	b	15b20 <base_info_unref@@Base+0xa74>
   15ea8:	ldr	r3, [r6, #12]
   15eac:	cmp	r3, #0
   15eb0:	beq	15ecc <base_info_unref@@Base+0xe20>
   15eb4:	ldr	r3, [r6, #8]
   15eb8:	cmp	r3, #0
   15ebc:	beq	15ecc <base_info_unref@@Base+0xe20>
   15ec0:	ldr	r3, [r6, #16]
   15ec4:	cmp	r3, #0
   15ec8:	beq	160d4 <base_info_unref@@Base+0x1028>
   15ecc:	bl	bab8 <g_markup_error_quark@plt>
   15ed0:	ldr	r3, [pc, #2412]	; 16844 <base_info_unref@@Base+0x1798>
   15ed4:	str	r4, [sp]
   15ed8:	mov	r2, #2
   15edc:	add	r3, pc, r3
   15ee0:	mov	r1, r0
   15ee4:	mov	r0, r5
   15ee8:	bl	b6ec <g_set_error@plt>
   15eec:	b	15c58 <base_info_unref@@Base+0xbac>
   15ef0:	ldr	r3, [r6, #12]
   15ef4:	cmp	r3, #0
   15ef8:	beq	15f14 <base_info_unref@@Base+0xe68>
   15efc:	ldr	r3, [r6, #8]
   15f00:	cmp	r3, #0
   15f04:	beq	15f14 <base_info_unref@@Base+0xe68>
   15f08:	ldr	r3, [r6, #20]
   15f0c:	cmp	r3, #0
   15f10:	beq	161a4 <base_info_unref@@Base+0x10f8>
   15f14:	bl	bab8 <g_markup_error_quark@plt>
   15f18:	ldr	r3, [pc, #2344]	; 16848 <base_info_unref@@Base+0x179c>
   15f1c:	str	r4, [sp]
   15f20:	mov	r2, #2
   15f24:	add	r3, pc, r3
   15f28:	mov	r1, r0
   15f2c:	mov	r0, r5
   15f30:	bl	b6ec <g_set_error@plt>
   15f34:	b	15c58 <base_info_unref@@Base+0xbac>
   15f38:	ldr	r3, [r6, #16]
   15f3c:	cmp	r3, #0
   15f40:	bne	15e44 <base_info_unref@@Base+0xd98>
   15f44:	ldr	r3, [r6, #24]
   15f48:	cmp	r3, #0
   15f4c:	bne	15e44 <base_info_unref@@Base+0xd98>
   15f50:	ldr	r3, [r6, #32]
   15f54:	cmp	r3, #0
   15f58:	bne	15e44 <base_info_unref@@Base+0xd98>
   15f5c:	ldr	r0, [r6, #28]
   15f60:	cmp	r0, #0
   15f64:	bne	15e44 <base_info_unref@@Base+0xd98>
   15f68:	add	r3, sp, #64	; 0x40
   15f6c:	mov	r1, r8
   15f70:	ldr	fp, [pc, #2260]	; 1684c <base_info_unref@@Base+0x17a0>
   15f74:	add	ip, sp, #36	; 0x24
   15f78:	ldr	sl, [pc, #2256]	; 16850 <base_info_unref@@Base+0x17a4>
   15f7c:	mov	r2, r9
   15f80:	ldr	r8, [pc, #2252]	; 16854 <base_info_unref@@Base+0x17a8>
   15f84:	add	fp, pc, fp
   15f88:	str	r0, [sp, #24]
   15f8c:	add	sl, pc, sl
   15f90:	str	r0, [r3, #-32]!	; 0xffffffe0
   15f94:	add	r8, pc, r8
   15f98:	str	r3, [sp, #4]
   15f9c:	mov	r0, r4
   15fa0:	str	ip, [sp, #12]
   15fa4:	mov	r3, r5
   15fa8:	add	ip, sp, #40	; 0x28
   15fac:	str	fp, [sp]
   15fb0:	str	sl, [sp, #8]
   15fb4:	str	r8, [sp, #16]
   15fb8:	str	ip, [sp, #20]
   15fbc:	bl	15754 <base_info_unref@@Base+0x6a8>
   15fc0:	cmp	r0, #0
   15fc4:	beq	15c58 <base_info_unref@@Base+0xbac>
   15fc8:	ldr	r3, [sp, #32]
   15fcc:	cmp	r3, #0
   15fd0:	beq	16660 <base_info_unref@@Base+0x15b4>
   15fd4:	ldr	r3, [sp, #36]	; 0x24
   15fd8:	cmp	r3, #0
   15fdc:	beq	16638 <base_info_unref@@Base+0x158c>
   15fe0:	ldr	r9, [sp, #40]	; 0x28
   15fe4:	cmp	r9, #0
   15fe8:	beq	16610 <base_info_unref@@Base+0x1564>
   15fec:	add	r8, sp, #44	; 0x2c
   15ff0:	mov	r0, r8
   15ff4:	bl	b3e0 <dbus_error_init@plt>
   15ff8:	mov	r0, r9
   15ffc:	mov	r1, r8
   16000:	bl	b614 <dbus_signature_validate@plt>
   16004:	cmp	r0, #0
   16008:	beq	16600 <base_info_unref@@Base+0x1554>
   1600c:	ldr	r8, [sp, #36]	; 0x24
   16010:	ldr	r1, [pc, #2112]	; 16858 <base_info_unref@@Base+0x17ac>
   16014:	mov	r0, r8
   16018:	add	r1, pc, r1
   1601c:	bl	ba64 <strcmp@plt>
   16020:	cmp	r0, #0
   16024:	beq	165f8 <base_info_unref@@Base+0x154c>
   16028:	ldr	r1, [pc, #2092]	; 1685c <base_info_unref@@Base+0x17b0>
   1602c:	mov	r0, r8
   16030:	add	r1, pc, r1
   16034:	bl	ba64 <strcmp@plt>
   16038:	cmp	r0, #0
   1603c:	beq	165f0 <base_info_unref@@Base+0x1544>
   16040:	ldr	r1, [pc, #2072]	; 16860 <base_info_unref@@Base+0x17b4>
   16044:	mov	r0, r8
   16048:	add	r1, pc, r1
   1604c:	bl	ba64 <strcmp@plt>
   16050:	cmp	r0, #0
   16054:	moveq	r2, #2
   16058:	bne	165c4 <base_info_unref@@Base+0x1518>
   1605c:	ldr	r1, [sp, #40]	; 0x28
   16060:	ldr	r0, [sp, #32]
   16064:	bl	14bc0 <base_info_ref@@Base+0x560>
   16068:	mov	r4, r0
   1606c:	mov	r1, r0
   16070:	ldr	r0, [r6, #12]
   16074:	bl	14c38 <base_info_ref@@Base+0x5d8>
   16078:	mov	r0, r4
   1607c:	bl	14c60 <base_info_ref@@Base+0x600>
   16080:	str	r4, [r6, #24]
   16084:	mov	r3, #1
   16088:	b	15b20 <base_info_unref@@Base+0xa74>
   1608c:	ldr	r3, [r6, #16]
   16090:	cmp	r3, #0
   16094:	beq	16410 <base_info_unref@@Base+0x1364>
   16098:	ldr	r3, [r6, #8]
   1609c:	cmp	r3, #0
   160a0:	beq	160b0 <base_info_unref@@Base+0x1004>
   160a4:	ldr	r3, [r6, #32]
   160a8:	cmp	r3, #0
   160ac:	beq	16240 <base_info_unref@@Base+0x1194>
   160b0:	bl	bab8 <g_markup_error_quark@plt>
   160b4:	ldr	r3, [pc, #1960]	; 16864 <base_info_unref@@Base+0x17b8>
   160b8:	str	r4, [sp]
   160bc:	mov	r2, #2
   160c0:	add	r3, pc, r3
   160c4:	mov	r1, r0
   160c8:	mov	r0, r5
   160cc:	bl	b6ec <g_set_error@plt>
   160d0:	b	15c58 <base_info_unref@@Base+0xbac>
   160d4:	ldr	r3, [r6, #20]
   160d8:	cmp	r3, #0
   160dc:	bne	15ecc <base_info_unref@@Base+0xe20>
   160e0:	ldr	r3, [r6, #24]
   160e4:	cmp	r3, #0
   160e8:	bne	15ecc <base_info_unref@@Base+0xe20>
   160ec:	ldr	r3, [r6, #32]
   160f0:	cmp	r3, #0
   160f4:	bne	15ecc <base_info_unref@@Base+0xe20>
   160f8:	ldr	r3, [r6, #28]
   160fc:	cmp	r3, #0
   16100:	bne	15ecc <base_info_unref@@Base+0xe20>
   16104:	add	ip, sp, #64	; 0x40
   16108:	ldr	sl, [pc, #1880]	; 16868 <base_info_unref@@Base+0x17bc>
   1610c:	mov	lr, #0
   16110:	mov	r1, r8
   16114:	str	lr, [ip, #-20]!	; 0xffffffec
   16118:	add	sl, pc, sl
   1611c:	mov	r2, r9
   16120:	mov	r0, r4
   16124:	mov	r3, r5
   16128:	stm	sp, {sl, ip, lr}
   1612c:	bl	15754 <base_info_unref@@Base+0x6a8>
   16130:	cmp	r0, #0
   16134:	beq	15c58 <base_info_unref@@Base+0xbac>
   16138:	ldr	r0, [sp, #44]	; 0x2c
   1613c:	cmp	r0, #0
   16140:	beq	166a0 <base_info_unref@@Base+0x15f4>
   16144:	bl	14998 <base_info_ref@@Base+0x338>
   16148:	mov	r4, r0
   1614c:	mov	r1, r0
   16150:	ldr	r0, [r6, #12]
   16154:	bl	14a38 <base_info_ref@@Base+0x3d8>
   16158:	mov	r0, r4
   1615c:	bl	14e5c <base_info_ref@@Base+0x7fc>
   16160:	str	r4, [r6, #16]
   16164:	mov	r3, #1
   16168:	b	15b20 <base_info_unref@@Base+0xa74>
   1616c:	ldr	r6, [r6, #36]	; 0x24
   16170:	cmp	r6, #0
   16174:	movne	r3, #1
   16178:	bne	15b20 <base_info_unref@@Base+0xa74>
   1617c:	bl	bab8 <g_markup_error_quark@plt>
   16180:	ldr	r3, [pc, #1764]	; 1686c <base_info_unref@@Base+0x17c0>
   16184:	str	r4, [sp]
   16188:	mov	r2, #2
   1618c:	add	r3, pc, r3
   16190:	mov	r1, r0
   16194:	mov	r0, r5
   16198:	bl	b6ec <g_set_error@plt>
   1619c:	mov	r3, r6
   161a0:	b	15b20 <base_info_unref@@Base+0xa74>
   161a4:	ldr	r3, [r6, #16]
   161a8:	cmp	r3, #0
   161ac:	bne	15f14 <base_info_unref@@Base+0xe68>
   161b0:	ldr	r3, [r6, #24]
   161b4:	cmp	r3, #0
   161b8:	bne	15f14 <base_info_unref@@Base+0xe68>
   161bc:	ldr	r3, [r6, #32]
   161c0:	cmp	r3, #0
   161c4:	bne	15f14 <base_info_unref@@Base+0xe68>
   161c8:	ldr	r0, [r6, #28]
   161cc:	cmp	r0, #0
   161d0:	bne	15f14 <base_info_unref@@Base+0xe68>
   161d4:	add	r3, sp, #64	; 0x40
   161d8:	ldr	sl, [pc, #1680]	; 16870 <base_info_unref@@Base+0x17c4>
   161dc:	str	r0, [sp, #8]
   161e0:	mov	r1, r8
   161e4:	str	r0, [r3, #-20]!	; 0xffffffec
   161e8:	add	sl, pc, sl
   161ec:	str	r3, [sp, #4]
   161f0:	mov	r2, r9
   161f4:	str	sl, [sp]
   161f8:	mov	r0, r4
   161fc:	mov	r3, r5
   16200:	bl	15754 <base_info_unref@@Base+0x6a8>
   16204:	cmp	r0, #0
   16208:	beq	15c58 <base_info_unref@@Base+0xbac>
   1620c:	ldr	r0, [sp, #44]	; 0x2c
   16210:	cmp	r0, #0
   16214:	beq	16714 <base_info_unref@@Base+0x1668>
   16218:	bl	14b20 <base_info_ref@@Base+0x4c0>
   1621c:	mov	r4, r0
   16220:	mov	r1, r0
   16224:	ldr	r0, [r6, #12]
   16228:	bl	14b80 <base_info_ref@@Base+0x520>
   1622c:	mov	r0, r4
   16230:	bl	14ea4 <base_info_ref@@Base+0x844>
   16234:	str	r4, [r6, #20]
   16238:	mov	r3, #1
   1623c:	b	15b20 <base_info_unref@@Base+0xa74>
   16240:	add	r0, sp, #64	; 0x40
   16244:	ldr	fp, [pc, #1576]	; 16874 <base_info_unref@@Base+0x17c8>
   16248:	ldr	sl, [pc, #1576]	; 16878 <base_info_unref@@Base+0x17cc>
   1624c:	add	ip, sp, #44	; 0x2c
   16250:	str	r3, [sp, #16]
   16254:	add	fp, pc, fp
   16258:	str	r3, [r0, #-24]!	; 0xffffffe8
   1625c:	add	sl, pc, sl
   16260:	str	r0, [sp, #4]
   16264:	mov	r1, r8
   16268:	mov	r2, r9
   1626c:	mov	r0, r4
   16270:	str	fp, [sp]
   16274:	mov	r3, r5
   16278:	str	sl, [sp, #8]
   1627c:	str	ip, [sp, #12]
   16280:	bl	15754 <base_info_unref@@Base+0x6a8>
   16284:	cmp	r0, #0
   16288:	beq	15c58 <base_info_unref@@Base+0xbac>
   1628c:	ldr	r1, [sp, #40]	; 0x28
   16290:	cmp	r1, #0
   16294:	beq	16498 <base_info_unref@@Base+0x13ec>
   16298:	ldr	r2, [sp, #44]	; 0x2c
   1629c:	cmp	r2, #0
   162a0:	beq	16470 <base_info_unref@@Base+0x13c4>
   162a4:	ldr	r0, [r6, #28]
   162a8:	cmp	r0, #0
   162ac:	beq	16444 <base_info_unref@@Base+0x1398>
   162b0:	bl	151f0 <base_info_unref@@Base+0x144>
   162b4:	mov	r3, #1
   162b8:	str	r3, [r6, #32]
   162bc:	b	15b20 <base_info_unref@@Base+0xa74>
   162c0:	ldr	r3, [r6, #32]
   162c4:	cmp	r3, #0
   162c8:	bne	15c08 <base_info_unref@@Base+0xb5c>
   162cc:	ldr	r3, [r6, #28]
   162d0:	cmp	r3, #0
   162d4:	bne	15c08 <base_info_unref@@Base+0xb5c>
   162d8:	add	r0, sp, #64	; 0x40
   162dc:	ldr	lr, [pc, #1432]	; 1687c <base_info_unref@@Base+0x17d0>
   162e0:	ldr	sl, [pc, #1432]	; 16880 <base_info_unref@@Base+0x17d4>
   162e4:	mov	r1, r8
   162e8:	ldr	ip, [pc, #1428]	; 16884 <base_info_unref@@Base+0x17d8>
   162ec:	add	lr, pc, lr
   162f0:	str	r3, [sp, #24]
   162f4:	add	sl, pc, sl
   162f8:	str	r3, [r0, #-32]!	; 0xffffffe0
   162fc:	add	ip, pc, ip
   16300:	str	r0, [sp, #4]
   16304:	mov	r2, r9
   16308:	str	ip, [sp, #16]
   1630c:	mov	r0, r4
   16310:	add	ip, sp, #36	; 0x24
   16314:	str	lr, [sp]
   16318:	str	ip, [sp, #12]
   1631c:	mov	r3, r5
   16320:	add	ip, sp, #40	; 0x28
   16324:	str	sl, [sp, #8]
   16328:	str	ip, [sp, #20]
   1632c:	bl	15754 <base_info_unref@@Base+0x6a8>
   16330:	cmp	r0, #0
   16334:	beq	15c58 <base_info_unref@@Base+0xbac>
   16338:	ldr	r9, [sp, #36]	; 0x24
   1633c:	cmp	r9, #0
   16340:	beq	1656c <base_info_unref@@Base+0x14c0>
   16344:	ldr	r3, [sp, #40]	; 0x28
   16348:	cmp	r3, #0
   1634c:	beq	16540 <base_info_unref@@Base+0x1494>
   16350:	ldrb	r2, [r3]
   16354:	cmp	r2, #105	; 0x69
   16358:	beq	164c0 <base_info_unref@@Base+0x1414>
   1635c:	cmp	r2, #111	; 0x6f
   16360:	bne	16504 <base_info_unref@@Base+0x1458>
   16364:	ldrb	r2, [r3, #1]
   16368:	cmp	r2, #117	; 0x75
   1636c:	bne	16504 <base_info_unref@@Base+0x1458>
   16370:	ldrb	r2, [r3, #2]
   16374:	cmp	r2, #116	; 0x74
   16378:	bne	16504 <base_info_unref@@Base+0x1458>
   1637c:	ldrb	r3, [r3, #3]
   16380:	cmp	r3, #0
   16384:	moveq	r8, #1
   16388:	bne	16504 <base_info_unref@@Base+0x1458>
   1638c:	add	r4, sp, #44	; 0x2c
   16390:	mov	r0, r4
   16394:	bl	b3e0 <dbus_error_init@plt>
   16398:	mov	r0, r9
   1639c:	mov	r1, r4
   163a0:	bl	b614 <dbus_signature_validate@plt>
   163a4:	cmp	r0, #0
   163a8:	beq	1655c <base_info_unref@@Base+0x14b0>
   163ac:	ldr	r3, [sp, #32]
   163b0:	cmp	r3, #0
   163b4:	movne	r5, #0
   163b8:	beq	167a4 <base_info_unref@@Base+0x16f8>
   163bc:	mov	r0, r3
   163c0:	mov	r1, r8
   163c4:	ldr	r2, [sp, #36]	; 0x24
   163c8:	bl	14cb8 <base_info_ref@@Base+0x658>
   163cc:	mov	r4, r0
   163d0:	ldr	r0, [r6, #16]
   163d4:	cmp	r0, #0
   163d8:	beq	16688 <base_info_unref@@Base+0x15dc>
   163dc:	mov	r1, r4
   163e0:	bl	14d6c <base_info_ref@@Base+0x70c>
   163e4:	mov	r0, r5
   163e8:	bl	b248 <g_free@plt>
   163ec:	mov	r0, r4
   163f0:	bl	14dd0 <base_info_ref@@Base+0x770>
   163f4:	str	r4, [r6, #28]
   163f8:	mov	r3, #1
   163fc:	b	15b20 <base_info_unref@@Base+0xa74>
   16400:	ldr	r3, [r6, #20]
   16404:	cmp	r3, #0
   16408:	bne	15bf0 <base_info_unref@@Base+0xb44>
   1640c:	b	15c08 <base_info_unref@@Base+0xb5c>
   16410:	ldr	r3, [r6, #12]
   16414:	cmp	r3, #0
   16418:	bne	16098 <base_info_unref@@Base+0xfec>
   1641c:	ldr	r3, [r6, #28]
   16420:	cmp	r3, #0
   16424:	bne	16098 <base_info_unref@@Base+0xfec>
   16428:	ldr	r3, [r6, #24]
   1642c:	cmp	r3, #0
   16430:	bne	16098 <base_info_unref@@Base+0xfec>
   16434:	ldr	r3, [r6, #20]
   16438:	cmp	r3, #0
   1643c:	bne	16098 <base_info_unref@@Base+0xfec>
   16440:	b	160b0 <base_info_unref@@Base+0x1004>
   16444:	ldr	r0, [r6, #16]
   16448:	cmp	r0, #0
   1644c:	beq	1645c <base_info_unref@@Base+0x13b0>
   16450:	bl	14aec <base_info_ref@@Base+0x48c>
   16454:	b	162b4 <base_info_unref@@Base+0x1208>
   16458:	bl	b824 <__stack_chk_fail@plt>
   1645c:	ldr	r0, [r6, #12]
   16460:	cmp	r0, #0
   16464:	beq	162b4 <base_info_unref@@Base+0x1208>
   16468:	bl	14964 <base_info_ref@@Base+0x304>
   1646c:	b	162b4 <base_info_unref@@Base+0x1208>
   16470:	bl	bab8 <g_markup_error_quark@plt>
   16474:	ldr	r3, [pc, #1036]	; 16888 <base_info_unref@@Base+0x17dc>
   16478:	str	sl, [sp]
   1647c:	mov	r2, #2
   16480:	str	r4, [sp, #4]
   16484:	add	r3, pc, r3
   16488:	mov	r1, r0
   1648c:	mov	r0, r5
   16490:	bl	b6ec <g_set_error@plt>
   16494:	b	15c58 <base_info_unref@@Base+0xbac>
   16498:	bl	bab8 <g_markup_error_quark@plt>
   1649c:	ldr	r3, [pc, #1000]	; 1688c <base_info_unref@@Base+0x17e0>
   164a0:	str	fp, [sp]
   164a4:	mov	r2, #2
   164a8:	str	r4, [sp, #4]
   164ac:	add	r3, pc, r3
   164b0:	mov	r1, r0
   164b4:	mov	r0, r5
   164b8:	bl	b6ec <g_set_error@plt>
   164bc:	b	15c58 <base_info_unref@@Base+0xbac>
   164c0:	ldrb	r2, [r3, #1]
   164c4:	cmp	r2, #110	; 0x6e
   164c8:	bne	16504 <base_info_unref@@Base+0x1458>
   164cc:	ldrb	r3, [r3, #2]
   164d0:	cmp	r3, #0
   164d4:	bne	16504 <base_info_unref@@Base+0x1458>
   164d8:	ldr	r8, [r6, #20]
   164dc:	cmp	r8, #0
   164e0:	beq	1638c <base_info_unref@@Base+0x12e0>
   164e4:	bl	bab8 <g_markup_error_quark@plt>
   164e8:	ldr	r3, [pc, #928]	; 16890 <base_info_unref@@Base+0x17e4>
   164ec:	mov	r2, #2
   164f0:	add	r3, pc, r3
   164f4:	mov	r1, r0
   164f8:	mov	r0, r5
   164fc:	bl	b6ec <g_set_error@plt>
   16500:	b	15c58 <base_info_unref@@Base+0xbac>
   16504:	ldr	r3, [r6, #20]
   16508:	cmp	r3, #0
   1650c:	bne	164e4 <base_info_unref@@Base+0x1438>
   16510:	bl	bab8 <g_markup_error_quark@plt>
   16514:	ldr	ip, [pc, #888]	; 16894 <base_info_unref@@Base+0x17e8>
   16518:	ldr	r3, [pc, #888]	; 16898 <base_info_unref@@Base+0x17ec>
   1651c:	mov	r2, #2
   16520:	add	ip, pc, ip
   16524:	str	r4, [sp, #4]
   16528:	add	r3, pc, r3
   1652c:	str	ip, [sp]
   16530:	mov	r1, r0
   16534:	mov	r0, r5
   16538:	bl	b6ec <g_set_error@plt>
   1653c:	b	15c58 <base_info_unref@@Base+0xbac>
   16540:	ldr	r2, [r6, #16]
   16544:	cmp	r2, #0
   16548:	beq	167dc <base_info_unref@@Base+0x1730>
   1654c:	ldr	r3, [pc, #840]	; 1689c <base_info_unref@@Base+0x17f0>
   16550:	add	r3, pc, r3
   16554:	str	r3, [sp, #40]	; 0x28
   16558:	b	16350 <base_info_unref@@Base+0x12a4>
   1655c:	mov	r0, r5
   16560:	mov	r1, r4
   16564:	bl	b398 <dbus_set_g_error@plt>
   16568:	b	15c58 <base_info_unref@@Base+0xbac>
   1656c:	bl	bab8 <g_markup_error_quark@plt>
   16570:	ldr	r3, [pc, #808]	; 168a0 <base_info_unref@@Base+0x17f4>
   16574:	str	sl, [sp]
   16578:	mov	r2, #2
   1657c:	str	r4, [sp, #4]
   16580:	add	r3, pc, r3
   16584:	mov	r1, r0
   16588:	mov	r0, r5
   1658c:	bl	b6ec <g_set_error@plt>
   16590:	b	15c58 <base_info_unref@@Base+0xbac>
   16594:	bl	bab8 <g_markup_error_quark@plt>
   16598:	ldr	ip, [pc, #772]	; 168a4 <base_info_unref@@Base+0x17f8>
   1659c:	ldr	r3, [pc, #772]	; 168a8 <base_info_unref@@Base+0x17fc>
   165a0:	mov	r2, #2
   165a4:	add	ip, pc, ip
   165a8:	str	r4, [sp, #4]
   165ac:	add	r3, pc, r3
   165b0:	str	ip, [sp]
   165b4:	mov	r1, r0
   165b8:	mov	r0, r5
   165bc:	bl	b6ec <g_set_error@plt>
   165c0:	b	15c58 <base_info_unref@@Base+0xbac>
   165c4:	bl	bab8 <g_markup_error_quark@plt>
   165c8:	ldr	ip, [sp, #36]	; 0x24
   165cc:	ldr	r3, [pc, #728]	; 168ac <base_info_unref@@Base+0x1800>
   165d0:	mov	r2, #2
   165d4:	str	r4, [sp, #4]
   165d8:	add	r3, pc, r3
   165dc:	str	ip, [sp]
   165e0:	mov	r1, r0
   165e4:	mov	r0, r5
   165e8:	bl	b6ec <g_set_error@plt>
   165ec:	b	15c58 <base_info_unref@@Base+0xbac>
   165f0:	mov	r2, #1
   165f4:	b	1605c <base_info_unref@@Base+0xfb0>
   165f8:	mov	r2, #3
   165fc:	b	1605c <base_info_unref@@Base+0xfb0>
   16600:	mov	r0, r5
   16604:	mov	r1, r8
   16608:	bl	b398 <dbus_set_g_error@plt>
   1660c:	b	15c58 <base_info_unref@@Base+0xbac>
   16610:	bl	bab8 <g_markup_error_quark@plt>
   16614:	ldr	r3, [pc, #660]	; 168b0 <base_info_unref@@Base+0x1804>
   16618:	str	r8, [sp]
   1661c:	mov	r2, #2
   16620:	str	r4, [sp, #4]
   16624:	add	r3, pc, r3
   16628:	mov	r1, r0
   1662c:	mov	r0, r5
   16630:	bl	b6ec <g_set_error@plt>
   16634:	b	15c58 <base_info_unref@@Base+0xbac>
   16638:	bl	bab8 <g_markup_error_quark@plt>
   1663c:	ldr	r3, [pc, #624]	; 168b4 <base_info_unref@@Base+0x1808>
   16640:	str	sl, [sp]
   16644:	mov	r2, #2
   16648:	str	r4, [sp, #4]
   1664c:	add	r3, pc, r3
   16650:	mov	r1, r0
   16654:	mov	r0, r5
   16658:	bl	b6ec <g_set_error@plt>
   1665c:	b	15c58 <base_info_unref@@Base+0xbac>
   16660:	bl	bab8 <g_markup_error_quark@plt>
   16664:	ldr	r3, [pc, #588]	; 168b8 <base_info_unref@@Base+0x180c>
   16668:	str	fp, [sp]
   1666c:	mov	r2, #2
   16670:	str	r4, [sp, #4]
   16674:	add	r3, pc, r3
   16678:	mov	r1, r0
   1667c:	mov	r0, r5
   16680:	bl	b6ec <g_set_error@plt>
   16684:	b	15c58 <base_info_unref@@Base+0xbac>
   16688:	ldr	r0, [r6, #20]
   1668c:	cmp	r0, #0
   16690:	beq	163e4 <base_info_unref@@Base+0x1338>
   16694:	mov	r1, r4
   16698:	bl	14da8 <base_info_ref@@Base+0x748>
   1669c:	b	163e4 <base_info_unref@@Base+0x1338>
   166a0:	bl	bab8 <g_markup_error_quark@plt>
   166a4:	ldr	r3, [pc, #528]	; 168bc <base_info_unref@@Base+0x1810>
   166a8:	str	sl, [sp]
   166ac:	mov	r2, #2
   166b0:	str	r4, [sp, #4]
   166b4:	add	r3, pc, r3
   166b8:	mov	r1, r0
   166bc:	mov	r0, r5
   166c0:	bl	b6ec <g_set_error@plt>
   166c4:	b	15c58 <base_info_unref@@Base+0xbac>
   166c8:	cmp	r3, #0
   166cc:	beq	15d28 <base_info_unref@@Base+0xc7c>
   166d0:	ldrb	r3, [r3]
   166d4:	cmp	r3, #47	; 0x2f
   166d8:	beq	15d28 <base_info_unref@@Base+0xc7c>
   166dc:	bl	bab8 <g_markup_error_quark@plt>
   166e0:	ldr	r3, [sp, #44]	; 0x2c
   166e4:	ldr	ip, [pc, #468]	; 168c0 <base_info_unref@@Base+0x1814>
   166e8:	mov	r2, #2
   166ec:	str	r4, [sp, #4]
   166f0:	str	r3, [sp, #8]
   166f4:	add	ip, pc, ip
   166f8:	ldr	r3, [pc, #452]	; 168c4 <base_info_unref@@Base+0x1818>
   166fc:	str	ip, [sp]
   16700:	add	r3, pc, r3
   16704:	mov	r1, r0
   16708:	mov	r0, r5
   1670c:	bl	b6ec <g_set_error@plt>
   16710:	b	15c58 <base_info_unref@@Base+0xbac>
   16714:	bl	bab8 <g_markup_error_quark@plt>
   16718:	ldr	r3, [pc, #424]	; 168c8 <base_info_unref@@Base+0x181c>
   1671c:	str	sl, [sp]
   16720:	mov	r2, #2
   16724:	str	r4, [sp, #4]
   16728:	add	r3, pc, r3
   1672c:	mov	r1, r0
   16730:	mov	r0, r5
   16734:	bl	b6ec <g_set_error@plt>
   16738:	b	15c58 <base_info_unref@@Base+0xbac>
   1673c:	bl	bab8 <g_markup_error_quark@plt>
   16740:	ldr	r3, [sp, #44]	; 0x2c
   16744:	ldr	ip, [pc, #384]	; 168cc <base_info_unref@@Base+0x1820>
   16748:	mov	r2, #2
   1674c:	str	r4, [sp, #4]
   16750:	str	r3, [sp, #8]
   16754:	add	ip, pc, ip
   16758:	ldr	r3, [pc, #368]	; 168d0 <base_info_unref@@Base+0x1824>
   1675c:	str	ip, [sp]
   16760:	add	r3, pc, r3
   16764:	mov	r1, r0
   16768:	mov	r0, r5
   1676c:	bl	b6ec <g_set_error@plt>
   16770:	b	15c58 <base_info_unref@@Base+0xbac>
   16774:	bl	bab8 <g_markup_error_quark@plt>
   16778:	ldr	ip, [pc, #340]	; 168d4 <base_info_unref@@Base+0x1828>
   1677c:	ldr	r3, [pc, #340]	; 168d8 <base_info_unref@@Base+0x182c>
   16780:	mov	r2, #2
   16784:	add	ip, pc, ip
   16788:	str	r4, [sp, #4]
   1678c:	add	r3, pc, r3
   16790:	str	ip, [sp]
   16794:	mov	r1, r0
   16798:	mov	r0, r5
   1679c:	bl	b6ec <g_set_error@plt>
   167a0:	b	15c58 <base_info_unref@@Base+0xbac>
   167a4:	ldr	r0, [r6, #16]
   167a8:	cmp	r0, #0
   167ac:	beq	167f8 <base_info_unref@@Base+0x174c>
   167b0:	bl	14ae4 <base_info_ref@@Base+0x484>
   167b4:	mov	r1, r0
   167b8:	ldr	r0, [pc, #284]	; 168dc <base_info_unref@@Base+0x1830>
   167bc:	add	r0, pc, r0
   167c0:	bl	b5d8 <g_strdup_printf@plt>
   167c4:	ldr	r3, [sp, #32]
   167c8:	cmp	r3, #0
   167cc:	mov	r5, r0
   167d0:	moveq	r0, r0
   167d4:	beq	163c0 <base_info_unref@@Base+0x1314>
   167d8:	b	163bc <base_info_unref@@Base+0x1310>
   167dc:	ldr	r2, [r6, #20]
   167e0:	cmp	r2, #0
   167e4:	ldrne	r2, [pc, #244]	; 168e0 <base_info_unref@@Base+0x1834>
   167e8:	addne	r2, pc, r2
   167ec:	strne	r2, [sp, #40]	; 0x28
   167f0:	movne	r3, r2
   167f4:	b	16350 <base_info_unref@@Base+0x12a4>
   167f8:	ldr	r0, [r6, #20]
   167fc:	bl	14bb8 <base_info_ref@@Base+0x558>
   16800:	b	167b4 <base_info_unref@@Base+0x1708>
   16804:	andeq	ip, r0, ip, lsr r5
   16808:	strdeq	r0, [r0], -r8
   1680c:	andeq	r3, r0, r0, asr #32
   16810:	strdeq	r2, [r0], -ip
   16814:	andeq	r3, r0, ip, ror #2
   16818:	andeq	r3, r0, r8, asr #4
   1681c:	andeq	r3, r0, ip, lsr r2
   16820:	andeq	r3, r0, ip, lsr #4
   16824:	andeq	r3, r0, ip, lsl r2
   16828:	andeq	r3, r0, r0, lsr #1
   1682c:	andeq	r3, r0, r0, ror r0
   16830:	andeq	r3, r0, ip, lsr r0
   16834:	andeq	r2, r0, r8, ror pc
   16838:	muleq	r0, r8, lr
   1683c:	andeq	r2, r0, r4, ror #28
   16840:	andeq	r3, r0, r8, lsr r0
   16844:	ldrdeq	r2, [r0], -ip
   16848:	muleq	r0, r4, sp
   1684c:	ldrdeq	r2, [r0], -r4
   16850:	andeq	r2, r0, r0, asr #28
   16854:	andeq	r2, r0, r0, asr #28
   16858:	andeq	r1, r0, r4, ror #11
   1685c:	ldrdeq	r1, [r0], -r8
   16860:			; <UNDEFINED> instruction: 0x000015b8
   16864:	strdeq	r2, [r0], -r8
   16868:	andeq	r2, r0, r0, asr #22
   1686c:	andeq	r2, r0, r0, lsr sp
   16870:	andeq	r2, r0, r0, ror sl
   16874:	andeq	r2, r0, r4, lsl #20
   16878:	andeq	r2, r0, r8, asr ip
   1687c:	andeq	r2, r0, ip, ror #18
   16880:	andeq	r2, r0, r0, ror #21
   16884:	andeq	r2, r0, r0, lsr #22
   16888:	andeq	r2, r0, r0, asr r8
   1688c:	andeq	r2, r0, r8, lsr #16
   16890:	andeq	r2, r0, r8, lsr r9
   16894:	strdeq	r2, [r0], -ip
   16898:	andeq	r2, r0, r8, asr #18
   1689c:	andeq	r1, r0, ip, asr r7
   168a0:	andeq	r2, r0, r4, asr r7
   168a4:			; <UNDEFINED> instruction: 0x000026b4
   168a8:	andeq	r2, r0, r8, lsr #14
   168ac:	andeq	r2, r0, r4, lsl #16
   168b0:			; <UNDEFINED> instruction: 0x000026b0
   168b4:	andeq	r2, r0, r8, lsl #13
   168b8:	andeq	r2, r0, r0, ror #12
   168bc:	andeq	r2, r0, r0, lsr #12
   168c0:	andeq	r2, r0, r4, ror #10
   168c4:	andeq	r2, r0, r0, lsl #12
   168c8:	andeq	r2, r0, ip, lsr #11
   168cc:	andeq	r2, r0, r4, lsl #10
   168d0:	andeq	r2, r0, ip, ror #11
   168d4:	ldrdeq	r2, [r0], -r4
   168d8:	andeq	r2, r0, r8, asr #10
   168dc:	andeq	r2, r0, r4, ror #13
   168e0:	andeq	r1, r0, r8, asr #9
   168e4:	cmp	r2, #0
   168e8:	push	{r3, r4, r5, lr}
   168ec:	mov	r5, r0
   168f0:	mov	r4, r1
   168f4:	beq	16928 <base_info_unref@@Base+0x187c>
   168f8:	ldr	r3, [r2]
   168fc:	cmp	r3, #0
   16900:	beq	16928 <base_info_unref@@Base+0x187c>
   16904:	ldr	r1, [pc, #368]	; 16a7c <base_info_unref@@Base+0x19d0>
   16908:	mov	r0, #0
   1690c:	ldr	r2, [pc, #364]	; 16a80 <base_info_unref@@Base+0x19d4>
   16910:	add	r1, pc, r1
   16914:	add	r2, pc, r2
   16918:	add	r1, r1, #68	; 0x44
   1691c:	bl	b6d4 <g_return_if_fail_warning@plt>
   16920:	mov	r0, #0
   16924:	pop	{r3, r4, r5, pc}
   16928:	ldr	r1, [pc, #340]	; 16a84 <base_info_unref@@Base+0x19d8>
   1692c:	mov	r0, r4
   16930:	add	r1, pc, r1
   16934:	bl	ba64 <strcmp@plt>
   16938:	cmp	r0, #0
   1693c:	beq	169c4 <base_info_unref@@Base+0x1918>
   16940:	ldr	r1, [pc, #320]	; 16a88 <base_info_unref@@Base+0x19dc>
   16944:	mov	r0, r4
   16948:	add	r1, pc, r1
   1694c:	bl	ba64 <strcmp@plt>
   16950:	cmp	r0, #0
   16954:	beq	169d0 <base_info_unref@@Base+0x1924>
   16958:	ldr	r1, [pc, #300]	; 16a8c <base_info_unref@@Base+0x19e0>
   1695c:	mov	r0, r4
   16960:	add	r1, pc, r1
   16964:	bl	ba64 <strcmp@plt>
   16968:	cmp	r0, #0
   1696c:	beq	16a40 <base_info_unref@@Base+0x1994>
   16970:	ldr	r1, [pc, #280]	; 16a90 <base_info_unref@@Base+0x19e4>
   16974:	mov	r0, r4
   16978:	add	r1, pc, r1
   1697c:	bl	ba64 <strcmp@plt>
   16980:	cmp	r0, #0
   16984:	beq	169dc <base_info_unref@@Base+0x1930>
   16988:	ldrb	r3, [r4]
   1698c:	cmp	r3, #97	; 0x61
   16990:	bne	169e8 <base_info_unref@@Base+0x193c>
   16994:	ldrb	r3, [r4, #1]
   16998:	cmp	r3, #114	; 0x72
   1699c:	bne	169e8 <base_info_unref@@Base+0x193c>
   169a0:	ldrb	r3, [r4, #2]
   169a4:	cmp	r3, #103	; 0x67
   169a8:	bne	169e8 <base_info_unref@@Base+0x193c>
   169ac:	ldrb	r3, [r4, #3]
   169b0:	cmp	r3, #0
   169b4:	bne	169e8 <base_info_unref@@Base+0x193c>
   169b8:	str	r3, [r5, #28]
   169bc:	mov	r0, #1
   169c0:	pop	{r3, r4, r5, pc}
   169c4:	str	r0, [r5, #12]
   169c8:	mov	r0, #1
   169cc:	pop	{r3, r4, r5, pc}
   169d0:	str	r0, [r5, #16]
   169d4:	mov	r0, #1
   169d8:	pop	{r3, r4, r5, pc}
   169dc:	str	r0, [r5, #24]
   169e0:	mov	r0, #1
   169e4:	pop	{r3, r4, r5, pc}
   169e8:	ldr	r1, [pc, #164]	; 16a94 <base_info_unref@@Base+0x19e8>
   169ec:	mov	r0, r4
   169f0:	add	r1, pc, r1
   169f4:	bl	ba64 <strcmp@plt>
   169f8:	cmp	r0, #0
   169fc:	beq	16a70 <base_info_unref@@Base+0x19c4>
   16a00:	ldr	r1, [pc, #144]	; 16a98 <base_info_unref@@Base+0x19ec>
   16a04:	mov	r0, r4
   16a08:	add	r1, pc, r1
   16a0c:	bl	ba64 <strcmp@plt>
   16a10:	cmp	r0, #0
   16a14:	beq	16a4c <base_info_unref@@Base+0x19a0>
   16a18:	mov	r0, r4
   16a1c:	mov	r1, #58	; 0x3a
   16a20:	bl	b3f8 <strchr@plt>
   16a24:	cmp	r0, #0
   16a28:	beq	16a68 <base_info_unref@@Base+0x19bc>
   16a2c:	ldr	r3, [r5, #36]	; 0x24
   16a30:	mov	r0, #1
   16a34:	sub	r3, r3, #1
   16a38:	str	r3, [r5, #36]	; 0x24
   16a3c:	pop	{r3, r4, r5, pc}
   16a40:	str	r0, [r5, #20]
   16a44:	mov	r0, #1
   16a48:	pop	{r3, r4, r5, pc}
   16a4c:	ldr	r0, [r5, #8]
   16a50:	ldr	r4, [r0]
   16a54:	mov	r1, r4
   16a58:	bl	b278 <g_slist_remove@plt>
   16a5c:	cmp	r0, #0
   16a60:	str	r0, [r5, #8]
   16a64:	streq	r4, [r5, #4]
   16a68:	mov	r0, #1
   16a6c:	pop	{r3, r4, r5, pc}
   16a70:	str	r0, [r5, #32]
   16a74:	mov	r0, #1
   16a78:	pop	{r3, r4, r5, pc}
   16a7c:	andeq	r2, r0, ip, lsr r2
   16a80:	strdeq	r2, [r0], -r8
   16a84:	andeq	r2, r0, r4, ror r4
   16a88:	andeq	r2, r0, r8, ror #8
   16a8c:	andeq	r2, r0, r8, asr r4
   16a90:	andeq	r2, r0, r8, asr #8
   16a94:			; <UNDEFINED> instruction: 0x000024b8
   16a98:	andeq	r2, r0, r8, lsr #5
   16a9c:	push	{r3, lr}
   16aa0:	cmp	r3, #0
   16aa4:	beq	16ad8 <base_info_unref@@Base+0x1a2c>
   16aa8:	ldr	r3, [r3]
   16aac:	cmp	r3, #0
   16ab0:	beq	16ad8 <base_info_unref@@Base+0x1a2c>
   16ab4:	ldr	r1, [pc, #36]	; 16ae0 <base_info_unref@@Base+0x1a34>
   16ab8:	mov	r0, #0
   16abc:	ldr	r2, [pc, #32]	; 16ae4 <base_info_unref@@Base+0x1a38>
   16ac0:	add	r1, pc, r1
   16ac4:	add	r2, pc, r2
   16ac8:	add	r1, r1, #88	; 0x58
   16acc:	bl	b6d4 <g_return_if_fail_warning@plt>
   16ad0:	mov	r0, #0
   16ad4:	pop	{r3, pc}
   16ad8:	mov	r0, #1
   16adc:	pop	{r3, pc}
   16ae0:	andeq	r2, r0, ip, lsl #1
   16ae4:	andeq	r2, r0, r8, asr #32
   16ae8:	cmp	r1, #0
   16aec:	push	{r3, lr}
   16af0:	beq	16b24 <base_info_unref@@Base+0x1a78>
   16af4:	ldr	r3, [r1]
   16af8:	cmp	r3, #0
   16afc:	beq	16b24 <base_info_unref@@Base+0x1a78>
   16b00:	ldr	r1, [pc, #36]	; 16b2c <base_info_unref@@Base+0x1a80>
   16b04:	mov	r0, #0
   16b08:	ldr	r2, [pc, #32]	; 16b30 <base_info_unref@@Base+0x1a84>
   16b0c:	add	r1, pc, r1
   16b10:	add	r2, pc, r2
   16b14:	add	r1, r1, #104	; 0x68
   16b18:	bl	b6d4 <g_return_if_fail_warning@plt>
   16b1c:	mov	r0, #0
   16b20:	pop	{r3, pc}
   16b24:	mov	r0, #1
   16b28:	pop	{r3, pc}
   16b2c:	andeq	r2, r0, r0, asr #32
   16b30:	strdeq	r1, [r0], -ip
   16b34:	ldr	r0, [r0, #4]
   16b38:	bx	lr
   16b3c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   16b40:	mov	r7, r0
   16b44:	ldr	r6, [pc, #76]	; 16b98 <base_info_unref@@Base+0x1aec>
   16b48:	mov	r8, r1
   16b4c:	ldr	r5, [pc, #72]	; 16b9c <base_info_unref@@Base+0x1af0>
   16b50:	mov	r9, r2
   16b54:	add	r6, pc, r6
   16b58:	bl	b21c <_init@@Base>
   16b5c:	add	r5, pc, r5
   16b60:	rsb	r6, r5, r6
   16b64:	asrs	r6, r6, #2
   16b68:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   16b6c:	sub	r5, r5, #4
   16b70:	mov	r4, #0
   16b74:	add	r4, r4, #1
   16b78:	ldr	r3, [r5, #4]!
   16b7c:	mov	r0, r7
   16b80:	mov	r1, r8
   16b84:	mov	r2, r9
   16b88:	blx	r3
   16b8c:	cmp	r4, r6
   16b90:	bne	16b74 <base_info_unref@@Base+0x1ac8>
   16b94:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   16b98:	andeq	fp, r0, r8, ror r2
   16b9c:	andeq	fp, r0, ip, ror #4
   16ba0:	bx	lr

Disassembly of section .fini:

00016ba4 <_fini@@Base>:
   16ba4:	push	{r3, lr}
   16ba8:	pop	{r3, pc}
