
centos-preinstalled/mousetweaks:     file format elf32-littlearm


Disassembly of section .init:

000136fc <_init@@Base>:
   136fc:	push	{r3, lr}
   13700:	bl	14afc <g_io_channel_unref@plt+0x8dc>
   13704:	pop	{r3, pc}

Disassembly of section .plt:

00013708 <signal@plt-0x14>:
   13708:	push	{lr}		; (str lr, [sp, #-4]!)
   1370c:	ldr	lr, [pc, #4]	; 13718 <_init@@Base+0x1c>
   13710:	add	lr, pc, lr
   13714:	ldr	pc, [lr, #8]!
   13718:	andeq	r8, r1, r8, ror #17

0001371c <signal@plt>:
   1371c:	add	ip, pc, #0, 12
   13720:	add	ip, ip, #24, 20	; 0x18000
   13724:	ldr	pc, [ip, #2280]!	; 0x8e8

00013728 <g_object_new@plt>:
   13728:	add	ip, pc, #0, 12
   1372c:	add	ip, ip, #24, 20	; 0x18000
   13730:	ldr	pc, [ip, #2272]!	; 0x8e0

00013734 <g_object_add_weak_pointer@plt>:
   13734:	add	ip, pc, #0, 12
   13738:	add	ip, ip, #24, 20	; 0x18000
   1373c:	ldr	pc, [ip, #2264]!	; 0x8d8

00013740 <g_dbus_connection_register_object@plt>:
   13740:	add	ip, pc, #0, 12
   13744:	add	ip, ip, #24, 20	; 0x18000
   13748:	ldr	pc, [ip, #2256]!	; 0x8d0

0001374c <g_object_ref@plt>:
   1374c:	add	ip, pc, #0, 12
   13750:	add	ip, ip, #24, 20	; 0x18000
   13754:	ldr	pc, [ip, #2248]!	; 0x8c8

00013758 <g_option_context_parse@plt>:
   13758:	add	ip, pc, #0, 12
   1375c:	add	ip, ip, #24, 20	; 0x18000
   13760:	ldr	pc, [ip, #2240]!	; 0x8c0

00013764 <g_option_context_add_group@plt>:
   13764:	add	ip, pc, #0, 12
   13768:	add	ip, ip, #24, 20	; 0x18000
   1376c:	ldr	pc, [ip, #2232]!	; 0x8b8

00013770 <gtk_orientable_set_orientation@plt>:
   13770:	add	ip, pc, #0, 12
   13774:	add	ip, ip, #24, 20	; 0x18000
   13778:	ldr	pc, [ip, #2224]!	; 0x8b0

0001377c <g_cclosure_marshal_VOID__INT@plt>:
   1377c:	add	ip, pc, #0, 12
   13780:	add	ip, ip, #24, 20	; 0x18000
   13784:	ldr	pc, [ip, #2216]!	; 0x8a8

00013788 <g_get_application_name@plt>:
   13788:	add	ip, pc, #0, 12
   1378c:	add	ip, ip, #24, 20	; 0x18000
   13790:	ldr	pc, [ip, #2208]!	; 0x8a0

00013794 <getpid@plt>:
   13794:	add	ip, pc, #0, 12
   13798:	add	ip, ip, #24, 20	; 0x18000
   1379c:	ldr	pc, [ip, #2200]!	; 0x898

000137a0 <g_settings_new@plt>:
   137a0:	add	ip, pc, #0, 12
   137a4:	add	ip, ip, #24, 20	; 0x18000
   137a8:	ldr	pc, [ip, #2192]!	; 0x890

000137ac <gtk_message_dialog_format_secondary_text@plt>:
   137ac:	add	ip, pc, #0, 12
   137b0:	add	ip, ip, #24, 20	; 0x18000
   137b4:	ldr	pc, [ip, #2184]!	; 0x888

000137b8 <g_return_if_fail_warning@plt>:
   137b8:	add	ip, pc, #0, 12
   137bc:	add	ip, ip, #24, 20	; 0x18000
   137c0:	ldr	pc, [ip, #2176]!	; 0x880

000137c4 <g_value_get_enum@plt>:
   137c4:	add	ip, pc, #0, 12
   137c8:	add	ip, ip, #24, 20	; 0x18000
   137cc:	ldr	pc, [ip, #2168]!	; 0x878

000137d0 <XTestQueryExtension@plt>:
   137d0:	add	ip, pc, #0, 12
   137d4:	add	ip, ip, #24, 20	; 0x18000
   137d8:	ldr	pc, [ip, #2160]!	; 0x870

000137dc <g_type_register_static_simple@plt>:
   137dc:	add	ip, pc, #0, 12
   137e0:	add	ip, ip, #24, 20	; 0x18000
   137e4:	ldr	pc, [ip, #2152]!	; 0x868

000137e8 <gdk_window_remove_filter@plt>:
   137e8:	add	ip, pc, #0, 12
   137ec:	add	ip, ip, #24, 20	; 0x18000
   137f0:	ldr	pc, [ip, #2144]!	; 0x860

000137f4 <gdk_error_trap_pop@plt>:
   137f4:	add	ip, pc, #0, 12
   137f8:	add	ip, ip, #24, 20	; 0x18000
   137fc:	ldr	pc, [ip, #2136]!	; 0x858

00013800 <gdk_display_get_device_manager@plt>:
   13800:	add	ip, pc, #0, 12
   13804:	add	ip, ip, #24, 20	; 0x18000
   13808:	ldr	pc, [ip, #2128]!	; 0x850

0001380c <gtk_dialog_add_button@plt>:
   1380c:	add	ip, pc, #0, 12
   13810:	add	ip, ip, #24, 20	; 0x18000
   13814:	ldr	pc, [ip, #2120]!	; 0x848

00013818 <g_param_spec_boolean@plt>:
   13818:	add	ip, pc, #0, 12
   1381c:	add	ip, ip, #24, 20	; 0x18000
   13820:	ldr	pc, [ip, #2112]!	; 0x840

00013824 <g_type_class_adjust_private_offset@plt>:
   13824:	add	ip, pc, #0, 12
   13828:	add	ip, ip, #24, 20	; 0x18000
   1382c:	ldr	pc, [ip, #2104]!	; 0x838

00013830 <g_timeout_add@plt>:
   13830:	add	ip, pc, #0, 12
   13834:	add	ip, ip, #24, 20	; 0x18000
   13838:	ldr	pc, [ip, #2096]!	; 0x830

0001383c <XcursorImageLoadCursor@plt>:
   1383c:	add	ip, pc, #0, 12
   13840:	add	ip, ip, #24, 20	; 0x18000
   13844:	ldr	pc, [ip, #2088]!	; 0x828

00013848 <g_variant_type_checked_@plt>:
   13848:	add	ip, pc, #0, 12
   1384c:	add	ip, ip, #24, 20	; 0x18000
   13850:	ldr	pc, [ip, #2080]!	; 0x820

00013854 <gdk_window_add_filter@plt>:
   13854:	add	ip, pc, #0, 12
   13858:	add	ip, ip, #24, 20	; 0x18000
   1385c:	ldr	pc, [ip, #2072]!	; 0x818

00013860 <g_value_get_int@plt>:
   13860:	add	ip, pc, #0, 12
   13864:	add	ip, ip, #24, 20	; 0x18000
   13868:	ldr	pc, [ip, #2064]!	; 0x810

0001386c <g_error_free@plt>:
   1386c:	add	ip, pc, #0, 12
   13870:	add	ip, ip, #24, 20	; 0x18000
   13874:	ldr	pc, [ip, #2056]!	; 0x808

00013878 <strtol@plt>:
   13878:	add	ip, pc, #0, 12
   1387c:	add	ip, ip, #24, 20	; 0x18000
   13880:	ldr	pc, [ip, #2048]!	; 0x800

00013884 <gdk_window_set_cursor@plt>:
   13884:	add	ip, pc, #0, 12
   13888:	add	ip, ip, #24, 20	; 0x18000
   1388c:	ldr	pc, [ip, #2040]!	; 0x7f8

00013890 <g_object_connect@plt>:
   13890:	add	ip, pc, #0, 12
   13894:	add	ip, ip, #24, 20	; 0x18000
   13898:	ldr	pc, [ip, #2032]!	; 0x7f0

0001389c <gtk_toggle_button_set_mode@plt>:
   1389c:	add	ip, pc, #0, 12
   138a0:	add	ip, ip, #24, 20	; 0x18000
   138a4:	ldr	pc, [ip, #2024]!	; 0x7e8

000138a8 <bind_textdomain_codeset@plt>:
   138a8:	add	ip, pc, #0, 12
   138ac:	add	ip, ip, #24, 20	; 0x18000
   138b0:	ldr	pc, [ip, #2016]!	; 0x7e0

000138b4 <gtk_label_get_type@plt>:
   138b4:	add	ip, pc, #0, 12
   138b8:	add	ip, ip, #24, 20	; 0x18000
   138bc:	ldr	pc, [ip, #2008]!	; 0x7d8

000138c0 <g_param_spec_string@plt>:
   138c0:	add	ip, pc, #0, 12
   138c4:	add	ip, ip, #24, 20	; 0x18000
   138c8:	ldr	pc, [ip, #2000]!	; 0x7d0

000138cc <g_value_get_double@plt>:
   138cc:	add	ip, pc, #0, 12
   138d0:	add	ip, ip, #24, 20	; 0x18000
   138d4:	ldr	pc, [ip, #1992]!	; 0x7c8

000138d8 <gtk_get_option_group@plt>:
   138d8:	add	ip, pc, #0, 12
   138dc:	add	ip, ip, #24, 20	; 0x18000
   138e0:	ldr	pc, [ip, #1984]!	; 0x7c0

000138e4 <g_timer_elapsed@plt>:
   138e4:	add	ip, pc, #0, 12
   138e8:	add	ip, ip, #24, 20	; 0x18000
   138ec:	ldr	pc, [ip, #1976]!	; 0x7b8

000138f0 <g_cclosure_marshal_VOID__STRING@plt>:
   138f0:	add	ip, pc, #0, 12
   138f4:	add	ip, ip, #24, 20	; 0x18000
   138f8:	ldr	pc, [ip, #1968]!	; 0x7b0

000138fc <cairo_create@plt>:
   138fc:	add	ip, pc, #0, 12
   13900:	add	ip, ip, #24, 20	; 0x18000
   13904:	ldr	pc, [ip, #1960]!	; 0x7a8

00013908 <gtk_widget_get_type@plt>:
   13908:	add	ip, pc, #0, 12
   1390c:	add	ip, ip, #24, 20	; 0x18000
   13910:	ldr	pc, [ip, #1952]!	; 0x7a0

00013914 <g_str_equal@plt>:
   13914:	add	ip, pc, #0, 12
   13918:	add	ip, ip, #24, 20	; 0x18000
   1391c:	ldr	pc, [ip, #1944]!	; 0x798

00013920 <g_timer_destroy@plt>:
   13920:	add	ip, pc, #0, 12
   13924:	add	ip, ip, #24, 20	; 0x18000
   13928:	ldr	pc, [ip, #1936]!	; 0x790

0001392c <g_value_dup_string@plt>:
   1392c:	add	ip, pc, #0, 12
   13930:	add	ip, ip, #24, 20	; 0x18000
   13934:	ldr	pc, [ip, #1928]!	; 0x788

00013938 <g_type_check_instance_cast@plt>:
   13938:	add	ip, pc, #0, 12
   1393c:	add	ip, ip, #24, 20	; 0x18000
   13940:	ldr	pc, [ip, #1920]!	; 0x780

00013944 <g_param_spec_enum@plt>:
   13944:	add	ip, pc, #0, 12
   13948:	add	ip, ip, #24, 20	; 0x18000
   1394c:	ldr	pc, [ip, #1912]!	; 0x778

00013950 <gdk_cursor_new@plt>:
   13950:	add	ip, pc, #0, 12
   13954:	add	ip, ip, #24, 20	; 0x18000
   13958:	ldr	pc, [ip, #1904]!	; 0x770

0001395c <g_option_context_new@plt>:
   1395c:	add	ip, pc, #0, 12
   13960:	add	ip, ip, #24, 20	; 0x18000
   13964:	ldr	pc, [ip, #1896]!	; 0x768

00013968 <gtk_radio_button_get_type@plt>:
   13968:	add	ip, pc, #0, 12
   1396c:	add	ip, ip, #24, 20	; 0x18000
   13970:	ldr	pc, [ip, #1888]!	; 0x760

00013974 <cairo_set_operator@plt>:
   13974:	add	ip, pc, #0, 12
   13978:	add	ip, ip, #24, 20	; 0x18000
   1397c:	ldr	pc, [ip, #1880]!	; 0x758

00013980 <gtk_check_menu_item_get_type@plt>:
   13980:	add	ip, pc, #0, 12
   13984:	add	ip, ip, #24, 20	; 0x18000
   13988:	ldr	pc, [ip, #1872]!	; 0x750

0001398c <gtk_widget_hide@plt>:
   1398c:	add	ip, pc, #0, 12
   13990:	add	ip, ip, #24, 20	; 0x18000
   13994:	ldr	pc, [ip, #1864]!	; 0x748

00013998 <g_cclosure_marshal_VOID__BOXED@plt>:
   13998:	add	ip, pc, #0, 12
   1399c:	add	ip, ip, #24, 20	; 0x18000
   139a0:	ldr	pc, [ip, #1856]!	; 0x740

000139a4 <g_log@plt>:
   139a4:	add	ip, pc, #0, 12
   139a8:	add	ip, ip, #24, 20	; 0x18000
   139ac:	ldr	pc, [ip, #1848]!	; 0x738

000139b0 <g_type_name@plt>:
   139b0:	add	ip, pc, #0, 12
   139b4:	add	ip, ip, #24, 20	; 0x18000
   139b8:	ldr	pc, [ip, #1840]!	; 0x730

000139bc <gtk_widget_get_style@plt>:
   139bc:	add	ip, pc, #0, 12
   139c0:	add	ip, ip, #24, 20	; 0x18000
   139c4:	ldr	pc, [ip, #1832]!	; 0x728

000139c8 <gtk_window_set_keep_above@plt>:
   139c8:	add	ip, pc, #0, 12
   139cc:	add	ip, ip, #24, 20	; 0x18000
   139d0:	ldr	pc, [ip, #1824]!	; 0x720

000139d4 <gtk_toggle_button_get_type@plt>:
   139d4:	add	ip, pc, #0, 12
   139d8:	add	ip, ip, #24, 20	; 0x18000
   139dc:	ldr	pc, [ip, #1816]!	; 0x718

000139e0 <gdk_x11_get_default_root_xwindow@plt>:
   139e0:	add	ip, pc, #0, 12
   139e4:	add	ip, ip, #24, 20	; 0x18000
   139e8:	ldr	pc, [ip, #1808]!	; 0x710

000139ec <exit@plt>:
   139ec:	add	ip, pc, #0, 12
   139f0:	add	ip, ip, #24, 20	; 0x18000
   139f4:	ldr	pc, [ip, #1800]!	; 0x708

000139f8 <g_variant_new_int32@plt>:
   139f8:	add	ip, pc, #0, 12
   139fc:	add	ip, ip, #24, 20	; 0x18000
   13a00:	ldr	pc, [ip, #1792]!	; 0x700

00013a04 <XAllowEvents@plt>:
   13a04:	add	ip, pc, #0, 12
   13a08:	add	ip, ip, #24, 20	; 0x18000
   13a0c:	ldr	pc, [ip, #1784]!	; 0x6f8

00013a10 <g_hash_table_remove_all@plt>:
   13a10:	add	ip, pc, #0, 12
   13a14:	add	ip, ip, #24, 20	; 0x18000
   13a18:	ldr	pc, [ip, #1776]!	; 0x6f0

00013a1c <g_io_channel_set_encoding@plt>:
   13a1c:	add	ip, pc, #0, 12
   13a20:	add	ip, ip, #24, 20	; 0x18000
   13a24:	ldr	pc, [ip, #1768]!	; 0x6e8

00013a28 <cairo_rectangle@plt>:
   13a28:	add	ip, pc, #0, 12
   13a2c:	add	ip, ip, #24, 20	; 0x18000
   13a30:	ldr	pc, [ip, #1760]!	; 0x6e0

00013a34 <gtk_window_set_icon_name@plt>:
   13a34:	add	ip, pc, #0, 12
   13a38:	add	ip, ip, #24, 20	; 0x18000
   13a3c:	ldr	pc, [ip, #1752]!	; 0x6d8

00013a40 <gtk_widget_grab_focus@plt>:
   13a40:	add	ip, pc, #0, 12
   13a44:	add	ip, ip, #24, 20	; 0x18000
   13a48:	ldr	pc, [ip, #1744]!	; 0x6d0

00013a4c <pango_attr_list_new@plt>:
   13a4c:	add	ip, pc, #0, 12
   13a50:	add	ip, ip, #24, 20	; 0x18000
   13a54:	ldr	pc, [ip, #1736]!	; 0x6c8

00013a58 <g_dbus_node_info_unref@plt>:
   13a58:	add	ip, pc, #0, 12
   13a5c:	add	ip, ip, #24, 20	; 0x18000
   13a60:	ldr	pc, [ip, #1728]!	; 0x6c0

00013a64 <gdk_screen_get_root_window@plt>:
   13a64:	add	ip, pc, #0, 12
   13a68:	add	ip, ip, #24, 20	; 0x18000
   13a6c:	ldr	pc, [ip, #1720]!	; 0x6b8

00013a70 <cairo_set_source_rgba@plt>:
   13a70:	add	ip, pc, #0, 12
   13a74:	add	ip, ip, #24, 20	; 0x18000
   13a78:	ldr	pc, [ip, #1712]!	; 0x6b0

00013a7c <g_memdup@plt>:
   13a7c:	add	ip, pc, #0, 12
   13a80:	add	ip, ip, #24, 20	; 0x18000
   13a84:	ldr	pc, [ip, #1704]!	; 0x6a8

00013a88 <g_variant_new@plt>:
   13a88:	add	ip, pc, #0, 12
   13a8c:	add	ip, ip, #24, 20	; 0x18000
   13a90:	ldr	pc, [ip, #1696]!	; 0x6a0

00013a94 <sigfillset@plt>:
   13a94:	add	ip, pc, #0, 12
   13a98:	add	ip, ip, #24, 20	; 0x18000
   13a9c:	ldr	pc, [ip, #1688]!	; 0x698

00013aa0 <textdomain@plt>:
   13aa0:	add	ip, pc, #0, 12
   13aa4:	add	ip, ip, #24, 20	; 0x18000
   13aa8:	ldr	pc, [ip, #1680]!	; 0x690

00013aac <g_hash_table_new_full@plt>:
   13aac:	add	ip, pc, #0, 12
   13ab0:	add	ip, ip, #24, 20	; 0x18000
   13ab4:	ldr	pc, [ip, #1672]!	; 0x688

00013ab8 <pango_attr_list_unref@plt>:
   13ab8:	add	ip, pc, #0, 12
   13abc:	add	ip, ip, #24, 20	; 0x18000
   13ac0:	ldr	pc, [ip, #1664]!	; 0x680

00013ac4 <g_signal_emit@plt>:
   13ac4:	add	ip, pc, #0, 12
   13ac8:	add	ip, ip, #24, 20	; 0x18000
   13acc:	ldr	pc, [ip, #1656]!	; 0x678

00013ad0 <g_strdup@plt>:
   13ad0:	add	ip, pc, #0, 12
   13ad4:	add	ip, ip, #24, 20	; 0x18000
   13ad8:	ldr	pc, [ip, #1648]!	; 0x670

00013adc <gtk_window_get_position@plt>:
   13adc:	add	ip, pc, #0, 12
   13ae0:	add	ip, ip, #24, 20	; 0x18000
   13ae4:	ldr	pc, [ip, #1640]!	; 0x668

00013ae8 <g_hash_table_insert@plt>:
   13ae8:	add	ip, pc, #0, 12
   13aec:	add	ip, ip, #24, 20	; 0x18000
   13af0:	ldr	pc, [ip, #1632]!	; 0x660

00013af4 <memset@plt>:
   13af4:	add	ip, pc, #0, 12
   13af8:	add	ip, ip, #24, 20	; 0x18000
   13afc:	ldr	pc, [ip, #1624]!	; 0x658

00013b00 <gdk_error_trap_push@plt>:
   13b00:	add	ip, pc, #0, 12
   13b04:	add	ip, ip, #24, 20	; 0x18000
   13b08:	ldr	pc, [ip, #1616]!	; 0x650

00013b0c <gtk_settings_get_default@plt>:
   13b0c:	add	ip, pc, #0, 12
   13b10:	add	ip, ip, #24, 20	; 0x18000
   13b14:	ldr	pc, [ip, #1608]!	; 0x648

00013b18 <gtk_builder_get_object@plt>:
   13b18:	add	ip, pc, #0, 12
   13b1c:	add	ip, ip, #24, 20	; 0x18000
   13b20:	ldr	pc, [ip, #1600]!	; 0x640

00013b24 <XFixesSetCursorName@plt>:
   13b24:	add	ip, pc, #0, 12
   13b28:	add	ip, ip, #24, 20	; 0x18000
   13b2c:	ldr	pc, [ip, #1592]!	; 0x638

00013b30 <fcntl@plt>:
   13b30:	add	ip, pc, #0, 12
   13b34:	add	ip, ip, #24, 20	; 0x18000
   13b38:	ldr	pc, [ip, #1584]!	; 0x630

00013b3c <g_strdup_printf@plt>:
   13b3c:	add	ip, pc, #0, 12
   13b40:	add	ip, ip, #24, 20	; 0x18000
   13b44:	ldr	pc, [ip, #1576]!	; 0x628

00013b48 <gtk_show_uri@plt>:
   13b48:	add	ip, pc, #0, 12
   13b4c:	add	ip, ip, #24, 20	; 0x18000
   13b50:	ldr	pc, [ip, #1568]!	; 0x620

00013b54 <close@plt>:
   13b54:	add	ip, pc, #0, 12
   13b58:	add	ip, ip, #24, 20	; 0x18000
   13b5c:	ldr	pc, [ip, #1560]!	; 0x618

00013b60 <g_signal_new@plt>:
   13b60:	add	ip, pc, #0, 12
   13b64:	add	ip, ip, #24, 20	; 0x18000
   13b68:	ldr	pc, [ip, #1552]!	; 0x610

00013b6c <read@plt>:
   13b6c:	add	ip, pc, #0, 12
   13b70:	add	ip, ip, #24, 20	; 0x18000
   13b74:	ldr	pc, [ip, #1544]!	; 0x608

00013b78 <abort@plt>:
   13b78:	add	ip, pc, #0, 12
   13b7c:	add	ip, ip, #24, 20	; 0x18000
   13b80:	ldr	pc, [ip, #1536]!	; 0x600

00013b84 <g_variant_get_int32@plt>:
   13b84:	add	ip, pc, #0, 12
   13b88:	add	ip, ip, #24, 20	; 0x18000
   13b8c:	ldr	pc, [ip, #1528]!	; 0x5f8

00013b90 <gtk_check_menu_item_set_active@plt>:
   13b90:	add	ip, pc, #0, 12
   13b94:	add	ip, ip, #24, 20	; 0x18000
   13b98:	ldr	pc, [ip, #1520]!	; 0x5f0

00013b9c <gtk_window_set_title@plt>:
   13b9c:	add	ip, pc, #0, 12
   13ba0:	add	ip, ip, #24, 20	; 0x18000
   13ba4:	ldr	pc, [ip, #1512]!	; 0x5e8

00013ba8 <g_value_set_boolean@plt>:
   13ba8:	add	ip, pc, #0, 12
   13bac:	add	ip, ip, #24, 20	; 0x18000
   13bb0:	ldr	pc, [ip, #1504]!	; 0x5e0

00013bb4 <g_boxed_type_register_static@plt>:
   13bb4:	add	ip, pc, #0, 12
   13bb8:	add	ip, ip, #24, 20	; 0x18000
   13bbc:	ldr	pc, [ip, #1496]!	; 0x5d8

00013bc0 <g_io_channel_read_chars@plt>:
   13bc0:	add	ip, pc, #0, 12
   13bc4:	add	ip, ip, #24, 20	; 0x18000
   13bc8:	ldr	pc, [ip, #1488]!	; 0x5d0

00013bcc <g_value_set_string@plt>:
   13bcc:	add	ip, pc, #0, 12
   13bd0:	add	ip, ip, #24, 20	; 0x18000
   13bd4:	ldr	pc, [ip, #1480]!	; 0x5c8

00013bd8 <unlink@plt>:
   13bd8:	add	ip, pc, #0, 12
   13bdc:	add	ip, ip, #24, 20	; 0x18000
   13be0:	ldr	pc, [ip, #1472]!	; 0x5c0

00013be4 <g_cclosure_marshal_VOID__DOUBLE@plt>:
   13be4:	add	ip, pc, #0, 12
   13be8:	add	ip, ip, #24, 20	; 0x18000
   13bec:	ldr	pc, [ip, #1464]!	; 0x5b8

00013bf0 <gdk_display_get_default@plt>:
   13bf0:	add	ip, pc, #0, 12
   13bf4:	add	ip, ip, #24, 20	; 0x18000
   13bf8:	ldr	pc, [ip, #1456]!	; 0x5b0

00013bfc <g_value_get_boolean@plt>:
   13bfc:	add	ip, pc, #0, 12
   13c00:	add	ip, ip, #24, 20	; 0x18000
   13c04:	ldr	pc, [ip, #1448]!	; 0x5a8

00013c08 <gtk_widget_get_visible@plt>:
   13c08:	add	ip, pc, #0, 12
   13c0c:	add	ip, ip, #24, 20	; 0x18000
   13c10:	ldr	pc, [ip, #1440]!	; 0x5a0

00013c14 <g_type_instance_get_private@plt>:
   13c14:	add	ip, pc, #0, 12
   13c18:	add	ip, ip, #24, 20	; 0x18000
   13c1c:	ldr	pc, [ip, #1432]!	; 0x598

00013c20 <pango_attr_list_insert@plt>:
   13c20:	add	ip, pc, #0, 12
   13c24:	add	ip, ip, #24, 20	; 0x18000
   13c28:	ldr	pc, [ip, #1424]!	; 0x590

00013c2c <g_variant_builder_init@plt>:
   13c2c:	add	ip, pc, #0, 12
   13c30:	add	ip, ip, #24, 20	; 0x18000
   13c34:	ldr	pc, [ip, #1416]!	; 0x588

00013c38 <kill@plt>:
   13c38:	add	ip, pc, #0, 12
   13c3c:	add	ip, ip, #24, 20	; 0x18000
   13c40:	ldr	pc, [ip, #1408]!	; 0x580

00013c44 <gdk_device_manager_get_client_pointer@plt>:
   13c44:	add	ip, pc, #0, 12
   13c48:	add	ip, ip, #24, 20	; 0x18000
   13c4c:	ldr	pc, [ip, #1400]!	; 0x578

00013c50 <g_signal_connect_data@plt>:
   13c50:	add	ip, pc, #0, 12
   13c54:	add	ip, ip, #24, 20	; 0x18000
   13c58:	ldr	pc, [ip, #1392]!	; 0x570

00013c5c <g_once_init_enter@plt>:
   13c5c:	add	ip, pc, #0, 12
   13c60:	add	ip, ip, #24, 20	; 0x18000
   13c64:	ldr	pc, [ip, #1384]!	; 0x568

00013c68 <g_slice_alloc0@plt>:
   13c68:	add	ip, pc, #0, 12
   13c6c:	add	ip, ip, #24, 20	; 0x18000
   13c70:	ldr	pc, [ip, #1376]!	; 0x560

00013c74 <g_value_set_double@plt>:
   13c74:	add	ip, pc, #0, 12
   13c78:	add	ip, ip, #24, 20	; 0x18000
   13c7c:	ldr	pc, [ip, #1368]!	; 0x558

00013c80 <XFixesSelectCursorInput@plt>:
   13c80:	add	ip, pc, #0, 12
   13c84:	add	ip, ip, #24, 20	; 0x18000
   13c88:	ldr	pc, [ip, #1360]!	; 0x550

00013c8c <g_hash_table_lookup@plt>:
   13c8c:	add	ip, pc, #0, 12
   13c90:	add	ip, ip, #24, 20	; 0x18000
   13c94:	ldr	pc, [ip, #1352]!	; 0x548

00013c98 <gtk_widget_destroy@plt>:
   13c98:	add	ip, pc, #0, 12
   13c9c:	add	ip, ip, #24, 20	; 0x18000
   13ca0:	ldr	pc, [ip, #1344]!	; 0x540

00013ca4 <gtk_menu_popup@plt>:
   13ca4:	add	ip, pc, #0, 12
   13ca8:	add	ip, ip, #24, 20	; 0x18000
   13cac:	ldr	pc, [ip, #1336]!	; 0x538

00013cb0 <open@plt>:
   13cb0:	add	ip, pc, #0, 12
   13cb4:	add	ip, ip, #24, 20	; 0x18000
   13cb8:	ldr	pc, [ip, #1328]!	; 0x530

00013cbc <pango_attr_weight_new@plt>:
   13cbc:	add	ip, pc, #0, 12
   13cc0:	add	ip, ip, #24, 20	; 0x18000
   13cc4:	ldr	pc, [ip, #1320]!	; 0x528

00013cc8 <XFixesQueryExtension@plt>:
   13cc8:	add	ip, pc, #0, 12
   13ccc:	add	ip, ip, #24, 20	; 0x18000
   13cd0:	ldr	pc, [ip, #1312]!	; 0x520

00013cd4 <g_intern_static_string@plt>:
   13cd4:	add	ip, pc, #0, 12
   13cd8:	add	ip, ip, #24, 20	; 0x18000
   13cdc:	ldr	pc, [ip, #1304]!	; 0x518

00013ce0 <XFixesGetCursorImage@plt>:
   13ce0:	add	ip, pc, #0, 12
   13ce4:	add	ip, ip, #24, 20	; 0x18000
   13ce8:	ldr	pc, [ip, #1296]!	; 0x510

00013cec <XFreeCursor@plt>:
   13cec:	add	ip, pc, #0, 12
   13cf0:	add	ip, ip, #24, 20	; 0x18000
   13cf4:	ldr	pc, [ip, #1288]!	; 0x508

00013cf8 <g_option_context_free@plt>:
   13cf8:	add	ip, pc, #0, 12
   13cfc:	add	ip, ip, #24, 20	; 0x18000
   13d00:	ldr	pc, [ip, #1280]!	; 0x500

00013d04 <g_dbus_connection_emit_signal@plt>:
   13d04:	add	ip, pc, #0, 12
   13d08:	add	ip, ip, #24, 20	; 0x18000
   13d0c:	ldr	pc, [ip, #1272]!	; 0x4f8

00013d10 <g_io_channel_set_flags@plt>:
   13d10:	add	ip, pc, #0, 12
   13d14:	add	ip, ip, #24, 20	; 0x18000
   13d18:	ldr	pc, [ip, #1264]!	; 0x4f0

00013d1c <__stack_chk_fail@plt>:
   13d1c:	add	ip, pc, #0, 12
   13d20:	add	ip, ip, #24, 20	; 0x18000
   13d24:	ldr	pc, [ip, #1256]!	; 0x4e8

00013d28 <fork@plt>:
   13d28:	add	ip, pc, #0, 12
   13d2c:	add	ip, ip, #24, 20	; 0x18000
   13d30:	ldr	pc, [ip, #1248]!	; 0x4e0

00013d34 <XQueryPointer@plt>:
   13d34:	add	ip, pc, #0, 12
   13d38:	add	ip, ip, #24, 20	; 0x18000
   13d3c:	ldr	pc, [ip, #1240]!	; 0x4d8

00013d40 <g_str_hash@plt>:
   13d40:	add	ip, pc, #0, 12
   13d44:	add	ip, ip, #24, 20	; 0x18000
   13d48:	ldr	pc, [ip, #1232]!	; 0x4d0

00013d4c <XTestFakeButtonEvent@plt>:
   13d4c:	add	ip, pc, #0, 12
   13d50:	add	ip, ip, #24, 20	; 0x18000
   13d54:	ldr	pc, [ip, #1224]!	; 0x4c8

00013d58 <g_free@plt>:
   13d58:	add	ip, pc, #0, 12
   13d5c:	add	ip, ip, #24, 20	; 0x18000
   13d60:	ldr	pc, [ip, #1216]!	; 0x4c0

00013d64 <gtk_bin_get_type@plt>:
   13d64:	add	ip, pc, #0, 12
   13d68:	add	ip, ip, #24, 20	; 0x18000
   13d6c:	ldr	pc, [ip, #1208]!	; 0x4b8

00013d70 <dcgettext@plt>:
   13d70:	add	ip, pc, #0, 12
   13d74:	add	ip, ip, #24, 20	; 0x18000
   13d78:	ldr	pc, [ip, #1200]!	; 0x4b0

00013d7c <cairo_surface_destroy@plt>:
   13d7c:	add	ip, pc, #0, 12
   13d80:	add	ip, ip, #24, 20	; 0x18000
   13d84:	ldr	pc, [ip, #1192]!	; 0x4a8

00013d88 <g_value_set_int@plt>:
   13d88:	add	ip, pc, #0, 12
   13d8c:	add	ip, ip, #24, 20	; 0x18000
   13d90:	ldr	pc, [ip, #1184]!	; 0x4a0

00013d94 <g_value_set_enum@plt>:
   13d94:	add	ip, pc, #0, 12
   13d98:	add	ip, ip, #24, 20	; 0x18000
   13d9c:	ldr	pc, [ip, #1176]!	; 0x498

00013da0 <g_settings_bind@plt>:
   13da0:	add	ip, pc, #0, 12
   13da4:	add	ip, ip, #24, 20	; 0x18000
   13da8:	ldr	pc, [ip, #1168]!	; 0x490

00013dac <gtk_main@plt>:
   13dac:	add	ip, pc, #0, 12
   13db0:	add	ip, ip, #24, 20	; 0x18000
   13db4:	ldr	pc, [ip, #1160]!	; 0x488

00013db8 <g_object_set@plt>:
   13db8:	add	ip, pc, #0, 12
   13dbc:	add	ip, ip, #24, 20	; 0x18000
   13dc0:	ldr	pc, [ip, #1152]!	; 0x480

00013dc4 <gtk_message_dialog_get_type@plt>:
   13dc4:	add	ip, pc, #0, 12
   13dc8:	add	ip, ip, #24, 20	; 0x18000
   13dcc:	ldr	pc, [ip, #1144]!	; 0x478

00013dd0 <XFixesChangeCursorByName@plt>:
   13dd0:	add	ip, pc, #0, 12
   13dd4:	add	ip, ip, #24, 20	; 0x18000
   13dd8:	ldr	pc, [ip, #1136]!	; 0x470

00013ddc <gtk_check_menu_item_get_active@plt>:
   13ddc:	add	ip, pc, #0, 12
   13de0:	add	ip, ip, #24, 20	; 0x18000
   13de4:	ldr	pc, [ip, #1128]!	; 0x468

00013de8 <gtk_dialog_get_type@plt>:
   13de8:	add	ip, pc, #0, 12
   13dec:	add	ip, ip, #24, 20	; 0x18000
   13df0:	ldr	pc, [ip, #1120]!	; 0x460

00013df4 <g_object_class_install_property@plt>:
   13df4:	add	ip, pc, #0, 12
   13df8:	add	ip, ip, #24, 20	; 0x18000
   13dfc:	ldr	pc, [ip, #1112]!	; 0x458

00013e00 <XFree@plt>:
   13e00:	add	ip, pc, #0, 12
   13e04:	add	ip, ip, #24, 20	; 0x18000
   13e08:	ldr	pc, [ip, #1104]!	; 0x450

00013e0c <cairo_image_surface_create_for_data@plt>:
   13e0c:	add	ip, pc, #0, 12
   13e10:	add	ip, ip, #24, 20	; 0x18000
   13e14:	ldr	pc, [ip, #1096]!	; 0x448

00013e18 <XcursorLibraryLoadCursor@plt>:
   13e18:	add	ip, pc, #0, 12
   13e1c:	add	ip, ip, #24, 20	; 0x18000
   13e20:	ldr	pc, [ip, #1088]!	; 0x440

00013e24 <g_type_class_add_private@plt>:
   13e24:	add	ip, pc, #0, 12
   13e28:	add	ip, ip, #24, 20	; 0x18000
   13e2c:	ldr	pc, [ip, #1080]!	; 0x438

00013e30 <XTestGrabControl@plt>:
   13e30:	add	ip, pc, #0, 12
   13e34:	add	ip, ip, #24, 20	; 0x18000
   13e38:	ldr	pc, [ip, #1072]!	; 0x430

00013e3c <select@plt>:
   13e3c:	add	ip, pc, #0, 12
   13e40:	add	ip, ip, #24, 20	; 0x18000
   13e44:	ldr	pc, [ip, #1064]!	; 0x428

00013e48 <gtk_bin_get_child@plt>:
   13e48:	add	ip, pc, #0, 12
   13e4c:	add	ip, ip, #24, 20	; 0x18000
   13e50:	ldr	pc, [ip, #1056]!	; 0x420

00013e54 <g_set_application_name@plt>:
   13e54:	add	ip, pc, #0, 12
   13e58:	add	ip, ip, #24, 20	; 0x18000
   13e5c:	ldr	pc, [ip, #1048]!	; 0x418

00013e60 <g_object_notify@plt>:
   13e60:	add	ip, pc, #0, 12
   13e64:	add	ip, ip, #24, 20	; 0x18000
   13e68:	ldr	pc, [ip, #1040]!	; 0x410

00013e6c <gtk_toggle_button_set_active@plt>:
   13e6c:	add	ip, pc, #0, 12
   13e70:	add	ip, ip, #24, 20	; 0x18000
   13e74:	ldr	pc, [ip, #1032]!	; 0x408

00013e78 <g_type_check_instance_is_a@plt>:
   13e78:	add	ip, pc, #0, 12
   13e7c:	add	ip, ip, #24, 20	; 0x18000
   13e80:	ldr	pc, [ip, #1024]!	; 0x400

00013e84 <g_print@plt>:
   13e84:	add	ip, pc, #0, 12
   13e88:	add	ip, ip, #24, 20	; 0x18000
   13e8c:	ldr	pc, [ip, #1016]!	; 0x3f8

00013e90 <bindtextdomain@plt>:
   13e90:	add	ip, pc, #0, 12
   13e94:	add	ip, ip, #24, 20	; 0x18000
   13e98:	ldr	pc, [ip, #1008]!	; 0x3f0

00013e9c <gdk_flush@plt>:
   13e9c:	add	ip, pc, #0, 12
   13ea0:	add	ip, ip, #24, 20	; 0x18000
   13ea4:	ldr	pc, [ip, #1000]!	; 0x3e8

00013ea8 <g_slist_index@plt>:
   13ea8:	add	ip, pc, #0, 12
   13eac:	add	ip, ip, #24, 20	; 0x18000
   13eb0:	ldr	pc, [ip, #992]!	; 0x3e0

00013eb4 <sigaction@plt>:
   13eb4:	add	ip, pc, #0, 12
   13eb8:	add	ip, ip, #24, 20	; 0x18000
   13ebc:	ldr	pc, [ip, #984]!	; 0x3d8

00013ec0 <gdk_device_get_position@plt>:
   13ec0:	add	ip, pc, #0, 12
   13ec4:	add	ip, ip, #24, 20	; 0x18000
   13ec8:	ldr	pc, [ip, #976]!	; 0x3d0

00013ecc <XcursorImageCreate@plt>:
   13ecc:	add	ip, pc, #0, 12
   13ed0:	add	ip, ip, #24, 20	; 0x18000
   13ed4:	ldr	pc, [ip, #968]!	; 0x3c8

00013ed8 <g_io_channel_unix_new@plt>:
   13ed8:	add	ip, pc, #0, 12
   13edc:	add	ip, ip, #24, 20	; 0x18000
   13ee0:	ldr	pc, [ip, #960]!	; 0x3c0

00013ee4 <g_get_user_runtime_dir@plt>:
   13ee4:	add	ip, pc, #0, 12
   13ee8:	add	ip, ip, #24, 20	; 0x18000
   13eec:	ldr	pc, [ip, #952]!	; 0x3b8

00013ef0 <XDefaultRootWindow@plt>:
   13ef0:	add	ip, pc, #0, 12
   13ef4:	add	ip, ip, #24, 20	; 0x18000
   13ef8:	ldr	pc, [ip, #944]!	; 0x3b0

00013efc <gdk_device_warp@plt>:
   13efc:	add	ip, pc, #0, 12
   13f00:	add	ip, ip, #24, 20	; 0x18000
   13f04:	ldr	pc, [ip, #936]!	; 0x3a8

00013f08 <setlocale@plt>:
   13f08:	add	ip, pc, #0, 12
   13f0c:	add	ip, ip, #24, 20	; 0x18000
   13f10:	ldr	pc, [ip, #928]!	; 0x3a0

00013f14 <gdk_display_get_n_screens@plt>:
   13f14:	add	ip, pc, #0, 12
   13f18:	add	ip, ip, #24, 20	; 0x18000
   13f1c:	ldr	pc, [ip, #920]!	; 0x398

00013f20 <gtk_menu_get_type@plt>:
   13f20:	add	ip, pc, #0, 12
   13f24:	add	ip, ip, #24, 20	; 0x18000
   13f28:	ldr	pc, [ip, #912]!	; 0x390

00013f2c <cairo_destroy@plt>:
   13f2c:	add	ip, pc, #0, 12
   13f30:	add	ip, ip, #24, 20	; 0x18000
   13f34:	ldr	pc, [ip, #904]!	; 0x388

00013f38 <g_option_context_add_main_entries@plt>:
   13f38:	add	ip, pc, #0, 12
   13f3c:	add	ip, ip, #24, 20	; 0x18000
   13f40:	ldr	pc, [ip, #896]!	; 0x380

00013f44 <g_timer_new@plt>:
   13f44:	add	ip, pc, #0, 12
   13f48:	add	ip, ip, #24, 20	; 0x18000
   13f4c:	ldr	pc, [ip, #888]!	; 0x378

00013f50 <gtk_builder_new@plt>:
   13f50:	add	ip, pc, #0, 12
   13f54:	add	ip, ip, #24, 20	; 0x18000
   13f58:	ldr	pc, [ip, #880]!	; 0x370

00013f5c <gtk_window_parse_geometry@plt>:
   13f5c:	add	ip, pc, #0, 12
   13f60:	add	ip, ip, #24, 20	; 0x18000
   13f64:	ldr	pc, [ip, #872]!	; 0x368

00013f68 <gtk_dialog_run@plt>:
   13f68:	add	ip, pc, #0, 12
   13f6c:	add	ip, ip, #24, 20	; 0x18000
   13f70:	ldr	pc, [ip, #864]!	; 0x360

00013f74 <gtk_window_get_size@plt>:
   13f74:	add	ip, pc, #0, 12
   13f78:	add	ip, ip, #24, 20	; 0x18000
   13f7c:	ldr	pc, [ip, #856]!	; 0x358

00013f80 <gtk_window_stick@plt>:
   13f80:	add	ip, pc, #0, 12
   13f84:	add	ip, ip, #24, 20	; 0x18000
   13f88:	ldr	pc, [ip, #848]!	; 0x350

00013f8c <umask@plt>:
   13f8c:	add	ip, pc, #0, 12
   13f90:	add	ip, ip, #24, 20	; 0x18000
   13f94:	ldr	pc, [ip, #840]!	; 0x348

00013f98 <XcursorImageDestroy@plt>:
   13f98:	add	ip, pc, #0, 12
   13f9c:	add	ip, ip, #24, 20	; 0x18000
   13fa0:	ldr	pc, [ip, #832]!	; 0x340

00013fa4 <g_timer_start@plt>:
   13fa4:	add	ip, pc, #0, 12
   13fa8:	add	ip, ip, #24, 20	; 0x18000
   13fac:	ldr	pc, [ip, #824]!	; 0x338

00013fb0 <gtk_widget_show@plt>:
   13fb0:	add	ip, pc, #0, 12
   13fb4:	add	ip, ip, #24, 20	; 0x18000
   13fb8:	ldr	pc, [ip, #816]!	; 0x330

00013fbc <g_object_unref@plt>:
   13fbc:	add	ip, pc, #0, 12
   13fc0:	add	ip, ip, #24, 20	; 0x18000
   13fc4:	ldr	pc, [ip, #808]!	; 0x328

00013fc8 <strlen@plt>:
   13fc8:	add	ip, pc, #0, 12
   13fcc:	add	ip, ip, #24, 20	; 0x18000
   13fd0:	ldr	pc, [ip, #800]!	; 0x320

00013fd4 <g_cclosure_marshal_VOID__VOID@plt>:
   13fd4:	add	ip, pc, #0, 12
   13fd8:	add	ip, ip, #24, 20	; 0x18000
   13fdc:	ldr	pc, [ip, #792]!	; 0x318

00013fe0 <__snprintf_chk@plt>:
   13fe0:	add	ip, pc, #0, 12
   13fe4:	add	ip, ip, #24, 20	; 0x18000
   13fe8:	ldr	pc, [ip, #784]!	; 0x310

00013fec <g_once_init_leave@plt>:
   13fec:	add	ip, pc, #0, 12
   13ff0:	add	ip, ip, #24, 20	; 0x18000
   13ff4:	ldr	pc, [ip, #776]!	; 0x308

00013ff8 <g_bus_unown_name@plt>:
   13ff8:	add	ip, pc, #0, 12
   13ffc:	add	ip, ip, #24, 20	; 0x18000
   14000:	ldr	pc, [ip, #768]!	; 0x300

00014004 <write@plt>:
   14004:	add	ip, pc, #0, 12
   14008:	add	ip, ip, #24, 20	; 0x18000
   1400c:	ldr	pc, [ip, #760]!	; 0x2f8

00014010 <gdk_screen_get_default@plt>:
   14010:	add	ip, pc, #0, 12
   14014:	add	ip, ip, #24, 20	; 0x18000
   14018:	ldr	pc, [ip, #752]!	; 0x2f0

0001401c <g_dbus_node_info_new_for_xml@plt>:
   1401c:	add	ip, pc, #0, 12
   14020:	add	ip, ip, #24, 20	; 0x18000
   14024:	ldr	pc, [ip, #744]!	; 0x2e8

00014028 <g_param_spec_int@plt>:
   14028:	add	ip, pc, #0, 12
   1402c:	add	ip, ip, #24, 20	; 0x18000
   14030:	ldr	pc, [ip, #736]!	; 0x2e0

00014034 <gtk_main_quit@plt>:
   14034:	add	ip, pc, #0, 12
   14038:	add	ip, ip, #24, 20	; 0x18000
   1403c:	ldr	pc, [ip, #728]!	; 0x2d8

00014040 <gtk_orientable_get_type@plt>:
   14040:	add	ip, pc, #0, 12
   14044:	add	ip, ip, #24, 20	; 0x18000
   14048:	ldr	pc, [ip, #720]!	; 0x2d0

0001404c <g_param_spec_double@plt>:
   1404c:	add	ip, pc, #0, 12
   14050:	add	ip, ip, #24, 20	; 0x18000
   14054:	ldr	pc, [ip, #712]!	; 0x2c8

00014058 <g_type_class_peek_parent@plt>:
   14058:	add	ip, pc, #0, 12
   1405c:	add	ip, ip, #24, 20	; 0x18000
   14060:	ldr	pc, [ip, #704]!	; 0x2c0

00014064 <g_enum_register_static@plt>:
   14064:	add	ip, pc, #0, 12
   14068:	add	ip, ip, #24, 20	; 0x18000
   1406c:	ldr	pc, [ip, #696]!	; 0x2b8

00014070 <g_hash_table_destroy@plt>:
   14070:	add	ip, pc, #0, 12
   14074:	add	ip, ip, #24, 20	; 0x18000
   14078:	ldr	pc, [ip, #688]!	; 0x2b0

0001407c <gtk_label_set_attributes@plt>:
   1407c:	add	ip, pc, #0, 12
   14080:	add	ip, ip, #24, 20	; 0x18000
   14084:	ldr	pc, [ip, #680]!	; 0x2a8

00014088 <XUngrabButton@plt>:
   14088:	add	ip, pc, #0, 12
   1408c:	add	ip, ip, #24, 20	; 0x18000
   14090:	ldr	pc, [ip, #672]!	; 0x2a0

00014094 <g_io_channel_set_close_on_unref@plt>:
   14094:	add	ip, pc, #0, 12
   14098:	add	ip, ip, #24, 20	; 0x18000
   1409c:	ldr	pc, [ip, #664]!	; 0x298

000140a0 <gtk_init@plt>:
   140a0:	add	ip, pc, #0, 12
   140a4:	add	ip, ip, #24, 20	; 0x18000
   140a8:	ldr	pc, [ip, #656]!	; 0x290

000140ac <time@plt>:
   140ac:	add	ip, pc, #0, 12
   140b0:	add	ip, ip, #24, 20	; 0x18000
   140b4:	ldr	pc, [ip, #648]!	; 0x288

000140b8 <gtk_message_dialog_new@plt>:
   140b8:	add	ip, pc, #0, 12
   140bc:	add	ip, ip, #24, 20	; 0x18000
   140c0:	ldr	pc, [ip, #640]!	; 0x280

000140c4 <__errno_location@plt>:
   140c4:	add	ip, pc, #0, 12
   140c8:	add	ip, ip, #24, 20	; 0x18000
   140cc:	ldr	pc, [ip, #632]!	; 0x278

000140d0 <g_slist_nth_data@plt>:
   140d0:	add	ip, pc, #0, 12
   140d4:	add	ip, ip, #24, 20	; 0x18000
   140d8:	ldr	pc, [ip, #624]!	; 0x270

000140dc <XGrabButton@plt>:
   140dc:	add	ip, pc, #0, 12
   140e0:	add	ip, ip, #24, 20	; 0x18000
   140e4:	ldr	pc, [ip, #616]!	; 0x268

000140e8 <g_hash_table_foreach@plt>:
   140e8:	add	ip, pc, #0, 12
   140ec:	add	ip, ip, #24, 20	; 0x18000
   140f0:	ldr	pc, [ip, #608]!	; 0x260

000140f4 <sigemptyset@plt>:
   140f4:	add	ip, pc, #0, 12
   140f8:	add	ip, ip, #24, 20	; 0x18000
   140fc:	ldr	pc, [ip, #600]!	; 0x258

00014100 <gtk_get_current_event_time@plt>:
   14100:	add	ip, pc, #0, 12
   14104:	add	ip, ip, #24, 20	; 0x18000
   14108:	ldr	pc, [ip, #592]!	; 0x250

0001410c <gdk_display_get_screen@plt>:
   1410c:	add	ip, pc, #0, 12
   14110:	add	ip, ip, #24, 20	; 0x18000
   14114:	ldr	pc, [ip, #584]!	; 0x248

00014118 <g_variant_builder_add@plt>:
   14118:	add	ip, pc, #0, 12
   1411c:	add	ip, ip, #24, 20	; 0x18000
   14120:	ldr	pc, [ip, #576]!	; 0x240

00014124 <g_io_add_watch@plt>:
   14124:	add	ip, pc, #0, 12
   14128:	add	ip, ip, #24, 20	; 0x18000
   1412c:	ldr	pc, [ip, #568]!	; 0x238

00014130 <g_slice_free1@plt>:
   14130:	add	ip, pc, #0, 12
   14134:	add	ip, ip, #24, 20	; 0x18000
   14138:	ldr	pc, [ip, #560]!	; 0x230

0001413c <cairo_fill@plt>:
   1413c:	add	ip, pc, #0, 12
   14140:	add	ip, ip, #24, 20	; 0x18000
   14144:	ldr	pc, [ip, #552]!	; 0x228

00014148 <gdk_device_ungrab@plt>:
   14148:	add	ip, pc, #0, 12
   1414c:	add	ip, ip, #24, 20	; 0x18000
   14150:	ldr	pc, [ip, #544]!	; 0x220

00014154 <g_type_check_class_cast@plt>:
   14154:	add	ip, pc, #0, 12
   14158:	add	ip, ip, #24, 20	; 0x18000
   1415c:	ldr	pc, [ip, #536]!	; 0x218

00014160 <__libc_start_main@plt>:
   14160:	add	ip, pc, #0, 12
   14164:	add	ip, ip, #24, 20	; 0x18000
   14168:	ldr	pc, [ip, #528]!	; 0x210

0001416c <gtk_widget_set_visible@plt>:
   1416c:	add	ip, pc, #0, 12
   14170:	add	ip, ip, #24, 20	; 0x18000
   14174:	ldr	pc, [ip, #520]!	; 0x208

00014178 <__gmon_start__@plt>:
   14178:	add	ip, pc, #0, 12
   1417c:	add	ip, ip, #24, 20	; 0x18000
   14180:	ldr	pc, [ip, #512]!	; 0x200

00014184 <gtk_builder_add_from_file@plt>:
   14184:	add	ip, pc, #0, 12
   14188:	add	ip, ip, #24, 20	; 0x18000
   1418c:	ldr	pc, [ip, #504]!	; 0x1f8

00014190 <sigprocmask@plt>:
   14190:	add	ip, pc, #0, 12
   14194:	add	ip, ip, #24, 20	; 0x18000
   14198:	ldr	pc, [ip, #496]!	; 0x1f0

0001419c <XGetAtomName@plt>:
   1419c:	add	ip, pc, #0, 12
   141a0:	add	ip, ip, #24, 20	; 0x18000
   141a4:	ldr	pc, [ip, #488]!	; 0x1e8

000141a8 <gdk_x11_display_get_xdisplay@plt>:
   141a8:	add	ip, pc, #0, 12
   141ac:	add	ip, ip, #24, 20	; 0x18000
   141b0:	ldr	pc, [ip, #480]!	; 0x1e0

000141b4 <gtk_window_get_type@plt>:
   141b4:	add	ip, pc, #0, 12
   141b8:	add	ip, ip, #24, 20	; 0x18000
   141bc:	ldr	pc, [ip, #472]!	; 0x1d8

000141c0 <gtk_widget_set_sensitive@plt>:
   141c0:	add	ip, pc, #0, 12
   141c4:	add	ip, ip, #24, 20	; 0x18000
   141c8:	ldr	pc, [ip, #464]!	; 0x1d0

000141cc <g_source_remove@plt>:
   141cc:	add	ip, pc, #0, 12
   141d0:	add	ip, ip, #24, 20	; 0x18000
   141d4:	ldr	pc, [ip, #456]!	; 0x1c8

000141d8 <pipe@plt>:
   141d8:	add	ip, pc, #0, 12
   141dc:	add	ip, ip, #24, 20	; 0x18000
   141e0:	ldr	pc, [ip, #448]!	; 0x1c0

000141e4 <gtk_radio_button_get_group@plt>:
   141e4:	add	ip, pc, #0, 12
   141e8:	add	ip, ip, #24, 20	; 0x18000
   141ec:	ldr	pc, [ip, #440]!	; 0x1b8

000141f0 <gdk_device_grab@plt>:
   141f0:	add	ip, pc, #0, 12
   141f4:	add	ip, ip, #24, 20	; 0x18000
   141f8:	ldr	pc, [ip, #432]!	; 0x1b0

000141fc <gtk_toggle_button_get_active@plt>:
   141fc:	add	ip, pc, #0, 12
   14200:	add	ip, ip, #24, 20	; 0x18000
   14204:	ldr	pc, [ip, #424]!	; 0x1a8

00014208 <g_bus_own_name@plt>:
   14208:	add	ip, pc, #0, 12
   1420c:	add	ip, ip, #24, 20	; 0x18000
   14210:	ldr	pc, [ip, #416]!	; 0x1a0

00014214 <g_strcmp0@plt>:
   14214:	add	ip, pc, #0, 12
   14218:	add	ip, ip, #24, 20	; 0x18000
   1421c:	ldr	pc, [ip, #408]!	; 0x198

00014220 <g_io_channel_unref@plt>:
   14220:	add	ip, pc, #0, 12
   14224:	add	ip, ip, #24, 20	; 0x18000
   14228:	ldr	pc, [ip, #400]!	; 0x190

Disassembly of section .text:

00014230 <.text>:
   14230:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14234:	vpush	{d8-d9}
   14238:	movw	r4, #50120	; 0xc3c8
   1423c:	movt	r4, #2
   14240:	sub	sp, sp, #444	; 0x1bc
   14244:	mov	r7, #0
   14248:	mov	r5, #1
   1424c:	ldr	r3, [r4]
   14250:	mov	r8, #0
   14254:	str	r0, [sp, #28]
   14258:	movw	r0, #41108	; 0xa094
   1425c:	str	r1, [sp, #24]
   14260:	movt	r0, #1
   14264:	movw	r1, #41120	; 0xa0a0
   14268:	movt	r1, #1
   1426c:	str	r3, [sp, #436]	; 0x1b4
   14270:	bl	13e90 <bindtextdomain@plt>
   14274:	movw	r0, #41108	; 0xa094
   14278:	movw	r1, #41140	; 0xa0b4
   1427c:	movt	r0, #1
   14280:	movt	r1, #1
   14284:	bl	138a8 <bind_textdomain_codeset@plt>
   14288:	movw	r0, #41108	; 0xa094
   1428c:	movt	r0, #1
   14290:	mov	r9, #0
   14294:	bl	13aa0 <textdomain@plt>
   14298:	movw	r1, #42232	; 0xa4f8
   1429c:	mov	r0, #6
   142a0:	movt	r1, #1
   142a4:	bl	13f08 <setlocale@plt>
   142a8:	movw	r0, #41148	; 0xa0bc
   142ac:	movt	r0, #1
   142b0:	movt	r9, #49136	; 0xbff0
   142b4:	bl	13e54 <g_set_application_name@plt>
   142b8:	mov	r1, r7
   142bc:	mov	r2, #336	; 0x150
   142c0:	add	r0, sp, #100	; 0x64
   142c4:	str	r7, [sp, #36]	; 0x24
   142c8:	bl	13af4 <memset@plt>
   142cc:	mov	r2, #5
   142d0:	mov	r0, r7
   142d4:	movw	r1, #41668	; 0xa2c4
   142d8:	movt	r1, #1
   142dc:	movw	ip, #41160	; 0xa0c8
   142e0:	movw	r3, #41168	; 0xa0d0
   142e4:	movt	ip, #1
   142e8:	movt	r3, #1
   142ec:	str	ip, [sp, #100]	; 0x64
   142f0:	mov	r6, #2
   142f4:	str	r3, [sp, #120]	; 0x78
   142f8:	movw	ip, #41188	; 0xa0e4
   142fc:	movw	r3, #41192	; 0xa0e8
   14300:	movt	ip, #1
   14304:	movt	r3, #1
   14308:	str	ip, [sp, #128]	; 0x80
   1430c:	str	r3, [sp, #148]	; 0x94
   14310:	movw	ip, #41228	; 0xa10c
   14314:	movw	r3, #41240	; 0xa118
   14318:	movt	ip, #1
   1431c:	movt	r3, #1
   14320:	str	ip, [sp, #156]	; 0x9c
   14324:	str	r3, [sp, #176]	; 0xb0
   14328:	movw	ip, #41276	; 0xa13c
   1432c:	movw	r3, #41288	; 0xa148
   14330:	movt	ip, #1
   14334:	movt	r3, #1
   14338:	str	ip, [sp, #180]	; 0xb4
   1433c:	str	r3, [sp, #184]	; 0xb8
   14340:	movw	ip, #41300	; 0xa154
   14344:	movw	r3, #41348	; 0xa184
   14348:	movt	ip, #1
   1434c:	movt	r3, #1
   14350:	str	ip, [sp, #204]	; 0xcc
   14354:	str	r3, [sp, #208]	; 0xd0
   14358:	movw	ip, #43092	; 0xa854
   1435c:	movw	r3, #41360	; 0xa190
   14360:	movt	ip, #1
   14364:	movt	r3, #1
   14368:	str	ip, [sp, #212]	; 0xd4
   1436c:	str	r3, [sp, #232]	; 0xe8
   14370:	movw	ip, #41388	; 0xa1ac
   14374:	movw	r3, #41408	; 0xa1c0
   14378:	movt	ip, #1
   1437c:	movt	r3, #1
   14380:	str	ip, [sp, #236]	; 0xec
   14384:	str	r3, [sp, #240]	; 0xf0
   14388:	movw	ip, #41420	; 0xa1cc
   1438c:	movw	r3, #41448	; 0xa1e8
   14390:	movt	ip, #1
   14394:	movt	r3, #1
   14398:	str	ip, [sp, #260]	; 0x104
   1439c:	str	r3, [sp, #268]	; 0x10c
   143a0:	movw	ip, #41460	; 0xa1f4
   143a4:	movw	r3, #41492	; 0xa214
   143a8:	movt	ip, #1
   143ac:	movt	r3, #1
   143b0:	str	ip, [sp, #288]	; 0x120
   143b4:	str	r3, [sp, #292]	; 0x124
   143b8:	add	ip, sp, #40	; 0x28
   143bc:	movw	r3, #43228	; 0xa8dc
   143c0:	str	ip, [sp, #200]	; 0xc8
   143c4:	movt	r3, #1
   143c8:	add	ip, sp, #72	; 0x48
   143cc:	str	r3, [sp, #296]	; 0x128
   143d0:	movw	sl, #41500	; 0xa21c
   143d4:	mov	r3, #7
   143d8:	str	ip, [sp, #116]	; 0x74
   143dc:	str	r3, [sp, #168]	; 0xa8
   143e0:	add	ip, sp, #68	; 0x44
   143e4:	str	r3, [sp, #196]	; 0xc4
   143e8:	movt	sl, #1
   143ec:	str	ip, [sp, #144]	; 0x90
   143f0:	mov	r3, #109	; 0x6d
   143f4:	add	ip, sp, #48	; 0x30
   143f8:	strb	r3, [sp, #216]	; 0xd8
   143fc:	str	ip, [sp, #172]	; 0xac
   14400:	mov	r3, #99	; 0x63
   14404:	add	ip, sp, #56	; 0x38
   14408:	strb	r3, [sp, #244]	; 0xf4
   1440c:	str	ip, [sp, #228]	; 0xe4
   14410:	mov	r3, #116	; 0x74
   14414:	add	ip, sp, #84	; 0x54
   14418:	strb	r3, [sp, #272]	; 0x110
   1441c:	str	ip, [sp, #256]	; 0x100
   14420:	mov	r3, #103	; 0x67
   14424:	add	ip, sp, #64	; 0x40
   14428:	str	r5, [sp, #224]	; 0xe0
   1442c:	str	ip, [sp, #284]	; 0x11c
   14430:	movw	lr, #41548	; 0xa24c
   14434:	str	r6, [sp, #280]	; 0x118
   14438:	movt	lr, #1
   1443c:	strb	r3, [sp, #300]	; 0x12c
   14440:	movw	ip, #41528	; 0xa238
   14444:	str	r7, [sp, #56]	; 0x38
   14448:	movt	ip, #1
   1444c:	str	r7, [sp, #60]	; 0x3c
   14450:	movw	r3, #41560	; 0xa258
   14454:	str	r7, [sp, #68]	; 0x44
   14458:	movt	r3, #1
   1445c:	str	r7, [sp, #72]	; 0x48
   14460:	str	r7, [sp, #76]	; 0x4c
   14464:	str	r7, [sp, #80]	; 0x50
   14468:	str	r7, [sp, #84]	; 0x54
   1446c:	str	r7, [sp, #88]	; 0x58
   14470:	str	ip, [sp, #320]	; 0x140
   14474:	movw	ip, #41584	; 0xa270
   14478:	str	lr, [sp, #324]	; 0x144
   1447c:	movt	ip, #1
   14480:	str	r3, [sp, #344]	; 0x158
   14484:	add	lr, sp, #60	; 0x3c
   14488:	str	ip, [sp, #352]	; 0x160
   1448c:	movw	r3, #41596	; 0xa27c
   14490:	str	lr, [sp, #312]	; 0x138
   14494:	movt	r3, #1
   14498:	add	lr, sp, #80	; 0x50
   1449c:	str	r3, [sp, #372]	; 0x174
   144a0:	str	lr, [sp, #368]	; 0x170
   144a4:	movw	ip, #41628	; 0xa29c
   144a8:	str	r5, [sp, #308]	; 0x134
   144ac:	movt	ip, #1
   144b0:	str	sl, [sp, #316]	; 0x13c
   144b4:	movw	r3, #41636	; 0xa2a4
   144b8:	str	ip, [sp, #380]	; 0x17c
   144bc:	movt	r3, #1
   144c0:	mov	ip, #115	; 0x73
   144c4:	str	r3, [sp, #400]	; 0x190
   144c8:	strb	ip, [sp, #328]	; 0x148
   144cc:	add	r3, sp, #76	; 0x4c
   144d0:	add	ip, sp, #88	; 0x58
   144d4:	str	r3, [sp, #340]	; 0x154
   144d8:	str	ip, [sp, #396]	; 0x18c
   144dc:	mvn	r3, #0
   144e0:	strd	r8, [sp, #40]	; 0x28
   144e4:	str	r3, [sp, #64]	; 0x40
   144e8:	strd	r8, [sp, #48]	; 0x30
   144ec:	bl	13d70 <dcgettext@plt>
   144f0:	bl	1395c <g_option_context_new@plt>
   144f4:	add	r1, sp, #100	; 0x64
   144f8:	movw	r2, #41108	; 0xa094
   144fc:	movt	r2, #1
   14500:	mov	r7, r0
   14504:	bl	13f38 <g_option_context_add_main_entries@plt>
   14508:	mov	r0, r5
   1450c:	bl	138d8 <gtk_get_option_group@plt>
   14510:	mov	r1, r0
   14514:	mov	r0, r7
   14518:	bl	13764 <g_option_context_add_group@plt>
   1451c:	mov	r0, r7
   14520:	add	r3, sp, #36	; 0x24
   14524:	add	r1, sp, #28
   14528:	add	r2, sp, #24
   1452c:	bl	13758 <g_option_context_parse@plt>
   14530:	cmp	r0, #0
   14534:	beq	14a88 <g_io_channel_unref@plt+0x868>
   14538:	mov	r0, r7
   1453c:	add	r9, sp, #64	; 0x40
   14540:	bl	13cf8 <g_option_context_free@plt>
   14544:	ldr	ip, [sp, #60]	; 0x3c
   14548:	ldr	r8, [sp, #76]	; 0x4c
   1454c:	vldr	d8, [sp, #40]	; 0x28
   14550:	vldr	d9, [sp, #48]	; 0x30
   14554:	ldr	r7, [sp, #56]	; 0x38
   14558:	str	ip, [sp, #16]
   1455c:	cmp	r8, #0
   14560:	ldr	ip, [sp, #84]	; 0x54
   14564:	ldm	r9, {r9, sl, fp}
   14568:	ldr	r3, [sp, #80]	; 0x50
   1456c:	str	ip, [sp, #20]
   14570:	beq	145b8 <g_io_channel_unref@plt+0x398>
   14574:	mov	r1, #5
   14578:	mov	r0, r6
   1457c:	bl	15c18 <g_io_channel_unref@plt+0x19f8>
   14580:	subs	r5, r0, #0
   14584:	movwlt	r0, #41708	; 0xa2ec
   14588:	movwge	r0, #41752	; 0xa318
   1458c:	movtlt	r0, #1
   14590:	movtge	r0, #1
   14594:	bl	13e84 <g_print@plt>
   14598:	lsr	r0, r5, #31
   1459c:	ldr	r2, [sp, #436]	; 0x1b4
   145a0:	ldr	r3, [r4]
   145a4:	cmp	r2, r3
   145a8:	bne	14a84 <g_io_channel_unref@plt+0x864>
   145ac:	add	sp, sp, #444	; 0x1bc
   145b0:	vpop	{d8-d9}
   145b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145b8:	str	r3, [sp, #12]
   145bc:	bl	15a2c <g_io_channel_unref@plt+0x180c>
   145c0:	ldr	r3, [sp, #12]
   145c4:	subs	r1, r0, #0
   145c8:	bge	145f8 <g_io_channel_unref@plt+0x3d8>
   145cc:	cmp	r3, #0
   145d0:	beq	1460c <g_io_channel_unref@plt+0x3ec>
   145d4:	movw	r0, #41820	; 0xa35c
   145d8:	movt	r0, #1
   145dc:	bl	13e84 <g_print@plt>
   145e0:	bl	13d28 <fork@plt>
   145e4:	cmp	r0, #0
   145e8:	blt	14a6c <g_io_channel_unref@plt+0x84c>
   145ec:	beq	1460c <g_io_channel_unref@plt+0x3ec>
   145f0:	mov	r0, r8
   145f4:	b	1459c <g_io_channel_unref@plt+0x37c>
   145f8:	movw	r0, #41776	; 0xa330
   145fc:	movt	r0, #1
   14600:	bl	13e84 <g_print@plt>
   14604:	mov	r0, r5
   14608:	b	1459c <g_io_channel_unref@plt+0x37c>
   1460c:	ldr	r2, [sp, #24]
   14610:	ldr	r3, [sp, #28]
   14614:	str	r2, [sp, #36]	; 0x24
   14618:	str	r3, [sp, #32]
   1461c:	bl	15d10 <g_io_channel_unref@plt+0x1af0>
   14620:	cmp	r0, #0
   14624:	blt	14948 <g_io_channel_unref@plt+0x728>
   14628:	add	r1, sp, #36	; 0x24
   1462c:	add	r0, sp, #32
   14630:	bl	140a0 <gtk_init@plt>
   14634:	bl	19010 <g_io_channel_unref@plt+0x4df0>
   14638:	mov	r8, r0
   1463c:	bl	19058 <g_io_channel_unref@plt+0x4e38>
   14640:	cmp	r0, #0
   14644:	bne	148ec <g_io_channel_unref@plt+0x6cc>
   14648:	mov	r1, #16
   1464c:	movw	r2, #41892	; 0xa3a4
   14650:	movt	r2, #1
   14654:	bl	139a4 <g_log@plt>
   14658:	movw	r1, #20192	; 0x4ee0
   1465c:	mov	r0, #2
   14660:	movt	r1, #1
   14664:	bl	1371c <signal@plt>
   14668:	movw	r1, #20192	; 0x4ee0
   1466c:	mov	r0, #15
   14670:	movt	r1, #1
   14674:	bl	1371c <signal@plt>
   14678:	movw	r1, #20192	; 0x4ee0
   1467c:	mov	r0, #3
   14680:	movt	r1, #1
   14684:	bl	1371c <signal@plt>
   14688:	movw	r1, #20192	; 0x4ee0
   1468c:	mov	r0, #1
   14690:	movt	r1, #1
   14694:	bl	1371c <signal@plt>
   14698:	mov	r0, #28
   1469c:	bl	13c68 <g_slice_alloc0@plt>
   146a0:	mov	r5, r0
   146a4:	bl	15708 <g_io_channel_unref@plt+0x14e8>
   146a8:	add	r1, sp, #40	; 0x28
   146ac:	str	r1, [sp]
   146b0:	mov	r3, r1
   146b4:	mov	r2, r1
   146b8:	mov	r6, r0
   146bc:	bl	137d0 <XTestQueryExtension@plt>
   146c0:	subs	r3, r0, #0
   146c4:	beq	14a40 <g_io_channel_unref@plt+0x820>
   146c8:	mov	r1, #1
   146cc:	mov	r0, r6
   146d0:	bl	13e30 <XTestGrabControl@plt>
   146d4:	mov	r6, #0
   146d8:	bl	17570 <g_io_channel_unref@plt+0x3350>
   146dc:	str	r6, [sp]
   146e0:	str	r6, [sp, #4]
   146e4:	mov	r3, r5
   146e8:	movw	r1, #41988	; 0xa404
   146ec:	movw	r2, #19928	; 0x4dd8
   146f0:	movt	r1, #1
   146f4:	movt	r2, #1
   146f8:	str	r0, [r5, #4]
   146fc:	bl	13c50 <g_signal_connect_data@plt>
   14700:	str	r6, [sp]
   14704:	str	r6, [sp, #4]
   14708:	mov	r3, r5
   1470c:	movw	r1, #42000	; 0xa410
   14710:	movw	r2, #20212	; 0x4ef4
   14714:	movt	r1, #1
   14718:	movt	r2, #1
   1471c:	ldr	r0, [r5, #4]
   14720:	bl	13c50 <g_signal_connect_data@plt>
   14724:	bl	17570 <g_io_channel_unref@plt+0x3350>
   14728:	str	r6, [sp]
   1472c:	str	r6, [sp, #4]
   14730:	mov	r3, r5
   14734:	movw	r1, #41988	; 0xa404
   14738:	movw	r2, #21740	; 0x54ec
   1473c:	movt	r1, #1
   14740:	movt	r2, #1
   14744:	str	r0, [r5, #8]
   14748:	bl	13c50 <g_signal_connect_data@plt>
   1474c:	mov	r3, r5
   14750:	str	r6, [sp]
   14754:	movw	r1, #42000	; 0xa410
   14758:	str	r6, [sp, #4]
   1475c:	movt	r1, #1
   14760:	movw	r2, #20212	; 0x4ef4
   14764:	ldr	r0, [r5, #8]
   14768:	movt	r2, #1
   1476c:	bl	13c50 <g_signal_connect_data@plt>
   14770:	bl	164c8 <g_io_channel_unref@plt+0x22a8>
   14774:	str	r0, [r5]
   14778:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   1477c:	mov	r2, #4
   14780:	movw	r1, #42008	; 0xa418
   14784:	str	r2, [sp]
   14788:	movt	r1, #1
   1478c:	ldr	r2, [r5, #4]
   14790:	movw	r3, #42032	; 0xa430
   14794:	movt	r3, #1
   14798:	mov	r6, r0
   1479c:	ldr	r0, [r0, #16]
   147a0:	bl	13da0 <g_settings_bind@plt>
   147a4:	mov	r3, #4
   147a8:	movw	r1, #41228	; 0xa10c
   147ac:	str	r3, [sp]
   147b0:	movt	r1, #1
   147b4:	ldr	r0, [r6, #16]
   147b8:	movw	r3, #42032	; 0xa430
   147bc:	ldr	r2, [r5, #8]
   147c0:	movt	r3, #1
   147c4:	bl	13da0 <g_settings_bind@plt>
   147c8:	cmp	fp, #0
   147cc:	vldr	d7, [pc, #740]	; 14ab8 <g_io_channel_unref@plt+0x898>
   147d0:	vcmpe.f64	d9, d7
   147d4:	ldrbne	r3, [r6, #56]	; 0x38
   147d8:	bfine	r3, fp, #1, #1
   147dc:	strbne	r3, [r6, #56]	; 0x38
   147e0:	cmp	sl, #0
   147e4:	ldrbne	r3, [r6, #56]	; 0x38
   147e8:	bfine	r3, sl, #2, #1
   147ec:	strbne	r3, [r6, #56]	; 0x38
   147f0:	vmrs	APSR_nzcv, fpscr
   147f4:	blt	14814 <g_io_channel_unref@plt+0x5f4>
   147f8:	vmov.f64	d7, #8	; 0x40400000  3.0
   147fc:	vcmpe.f64	d9, d7
   14800:	vmrs	APSR_nzcv, fpscr
   14804:	bhi	14814 <g_io_channel_unref@plt+0x5f4>
   14808:	vmov.f64	d0, d9
   1480c:	ldr	r0, [r5, #8]
   14810:	bl	177fc <g_io_channel_unref@plt+0x35dc>
   14814:	vldr	d7, [pc, #668]	; 14ab8 <g_io_channel_unref@plt+0x898>
   14818:	vcmpe.f64	d8, d7
   1481c:	vmrs	APSR_nzcv, fpscr
   14820:	blt	14840 <g_io_channel_unref@plt+0x620>
   14824:	vmov.f64	d7, #8	; 0x40400000  3.0
   14828:	vcmpe.f64	d8, d7
   1482c:	vmrs	APSR_nzcv, fpscr
   14830:	bhi	14840 <g_io_channel_unref@plt+0x620>
   14834:	vmov.f64	d0, d8
   14838:	ldr	r0, [r5, #4]
   1483c:	bl	177fc <g_io_channel_unref@plt+0x35dc>
   14840:	ldr	ip, [sp, #20]
   14844:	cmp	r9, #30
   14848:	strls	r9, [r6, #20]
   1484c:	cmp	ip, #0
   14850:	ldrbne	r3, [r6, #56]	; 0x38
   14854:	bfcne	r3, #0, #1
   14858:	strbne	r3, [r6, #56]	; 0x38
   1485c:	cmp	r7, #0
   14860:	beq	1488c <g_io_channel_unref@plt+0x66c>
   14864:	movw	r1, #41040	; 0xa050
   14868:	mov	r0, r7
   1486c:	movt	r1, #1
   14870:	bl	13914 <g_str_equal@plt>
   14874:	subs	r9, r0, #0
   14878:	beq	14a24 <g_io_channel_unref@plt+0x804>
   1487c:	mov	r3, #1
   14880:	str	r3, [r6, #24]
   14884:	mov	r0, r7
   14888:	bl	13d58 <g_free@plt>
   1488c:	ldr	ip, [sp, #16]
   14890:	cmp	ip, #0
   14894:	beq	148a8 <g_io_channel_unref@plt+0x688>
   14898:	ldr	r0, [r6, #52]	; 0x34
   1489c:	bl	13d58 <g_free@plt>
   148a0:	ldr	ip, [sp, #16]
   148a4:	str	ip, [r6, #52]	; 0x34
   148a8:	bl	16b50 <g_io_channel_unref@plt+0x2930>
   148ac:	cmp	r0, #0
   148b0:	bne	14964 <g_io_channel_unref@plt+0x744>
   148b4:	mov	r0, r6
   148b8:	bl	13fbc <g_object_unref@plt>
   148bc:	ldr	r0, [r5, #4]
   148c0:	bl	13fbc <g_object_unref@plt>
   148c4:	ldr	r0, [r5, #8]
   148c8:	bl	13fbc <g_object_unref@plt>
   148cc:	ldr	r0, [r5]
   148d0:	bl	13fbc <g_object_unref@plt>
   148d4:	mov	r1, r5
   148d8:	mov	r0, #28
   148dc:	bl	14130 <g_slice_free1@plt>
   148e0:	bl	15e6c <g_io_channel_unref@plt+0x1c4c>
   148e4:	mov	r0, #0
   148e8:	b	1459c <g_io_channel_unref@plt+0x37c>
   148ec:	mov	r0, r8
   148f0:	mov	r1, #2
   148f4:	bl	19180 <g_io_channel_unref@plt+0x4f60>
   148f8:	mov	r0, r8
   148fc:	mov	r1, #15
   14900:	bl	19180 <g_io_channel_unref@plt+0x4f60>
   14904:	mov	r0, r8
   14908:	mov	r1, #3
   1490c:	bl	19180 <g_io_channel_unref@plt+0x4f60>
   14910:	mov	r0, r8
   14914:	mov	r1, #1
   14918:	bl	19180 <g_io_channel_unref@plt+0x4f60>
   1491c:	mov	r2, #0
   14920:	mov	r3, r2
   14924:	str	r2, [sp]
   14928:	str	r2, [sp, #4]
   1492c:	movw	r1, #41884	; 0xa39c
   14930:	movw	r2, #20196	; 0x4ee4
   14934:	movt	r1, #1
   14938:	movt	r2, #1
   1493c:	mov	r0, r8
   14940:	bl	13c50 <g_signal_connect_data@plt>
   14944:	b	14698 <g_io_channel_unref@plt+0x478>
   14948:	mov	r0, #0
   1494c:	movw	r2, #41856	; 0xa380
   14950:	mov	r1, #16
   14954:	movt	r2, #1
   14958:	bl	139a4 <g_log@plt>
   1495c:	mov	r0, #0
   14960:	b	1459c <g_io_channel_unref@plt+0x37c>
   14964:	bl	1813c <g_io_channel_unref@plt+0x3f1c>
   14968:	mov	r3, #0
   1496c:	movw	r1, #42044	; 0xa43c
   14970:	str	r3, [sp]
   14974:	movt	r1, #1
   14978:	str	r3, [sp, #4]
   1497c:	movw	r2, #20656	; 0x50b0
   14980:	mov	r3, r5
   14984:	movt	r2, #1
   14988:	mov	sl, r0
   1498c:	bl	13c50 <g_signal_connect_data@plt>
   14990:	bl	18b60 <g_io_channel_unref@plt+0x4940>
   14994:	ldrb	r3, [r6, #56]	; 0x38
   14998:	tst	r3, #2
   1499c:	mov	r9, r0
   149a0:	bne	14a1c <g_io_channel_unref@plt+0x7fc>
   149a4:	mov	r7, #0
   149a8:	mov	r3, r5
   149ac:	str	r7, [sp]
   149b0:	mov	r0, r9
   149b4:	str	r7, [sp, #4]
   149b8:	movw	r1, #42060	; 0xa44c
   149bc:	movw	r2, #19944	; 0x4de8
   149c0:	movt	r1, #1
   149c4:	movt	r2, #1
   149c8:	bl	13c50 <g_signal_connect_data@plt>
   149cc:	mov	r3, r5
   149d0:	str	r7, [sp]
   149d4:	mov	r0, r9
   149d8:	str	r7, [sp, #4]
   149dc:	movw	r1, #42076	; 0xa45c
   149e0:	movw	r2, #21116	; 0x527c
   149e4:	movt	r1, #1
   149e8:	movt	r2, #1
   149ec:	bl	13c50 <g_signal_connect_data@plt>
   149f0:	bl	13dac <gtk_main@plt>
   149f4:	bl	17024 <g_io_channel_unref@plt+0x2e04>
   149f8:	mov	r0, sl
   149fc:	bl	184e0 <g_io_channel_unref@plt+0x42c0>
   14a00:	mov	r0, sl
   14a04:	bl	13fbc <g_object_unref@plt>
   14a08:	mov	r0, r9
   14a0c:	bl	13fbc <g_object_unref@plt>
   14a10:	mov	r0, r8
   14a14:	bl	13fbc <g_object_unref@plt>
   14a18:	b	148b4 <g_io_channel_unref@plt+0x694>
   14a1c:	bl	18ba8 <g_io_channel_unref@plt+0x4988>
   14a20:	b	149a4 <g_io_channel_unref@plt+0x784>
   14a24:	movw	r1, #41440	; 0xa1e0
   14a28:	mov	r0, r7
   14a2c:	movt	r1, #1
   14a30:	bl	13914 <g_str_equal@plt>
   14a34:	cmp	r0, #0
   14a38:	strne	r9, [r6, #24]
   14a3c:	b	14884 <g_io_channel_unref@plt+0x664>
   14a40:	mov	r1, r5
   14a44:	mov	r0, #28
   14a48:	str	r3, [sp, #12]
   14a4c:	bl	14130 <g_slice_free1@plt>
   14a50:	ldr	r3, [sp, #12]
   14a54:	movw	r2, #41952	; 0xa3e0
   14a58:	mov	r1, #8
   14a5c:	movt	r2, #1
   14a60:	mov	r0, r3
   14a64:	bl	139a4 <g_log@plt>
   14a68:	b	148e0 <g_io_channel_unref@plt+0x6c0>
   14a6c:	movw	r2, #41840	; 0xa370
   14a70:	mov	r0, r8
   14a74:	mov	r1, #4
   14a78:	movt	r2, #1
   14a7c:	bl	139a4 <g_log@plt>
   14a80:	b	14a80 <g_io_channel_unref@plt+0x860>
   14a84:	bl	13d1c <__stack_chk_fail@plt>
   14a88:	ldr	r3, [sp, #36]	; 0x24
   14a8c:	movw	r0, #41704	; 0xa2e8
   14a90:	movt	r0, #1
   14a94:	ldr	r1, [r3, #8]
   14a98:	bl	13e84 <g_print@plt>
   14a9c:	ldr	r0, [sp, #36]	; 0x24
   14aa0:	bl	1386c <g_error_free@plt>
   14aa4:	mov	r0, r7
   14aa8:	bl	13cf8 <g_option_context_free@plt>
   14aac:	mov	r0, r5
   14ab0:	bl	139ec <exit@plt>
   14ab4:	nop	{0}
   14ab8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   14abc:	svccc	0x00b99999
   14ac0:	mov	fp, #0
   14ac4:	mov	lr, #0
   14ac8:	pop	{r1}		; (ldr r1, [sp], #4)
   14acc:	mov	r2, sp
   14ad0:	push	{r2}		; (str r2, [sp, #-4]!)
   14ad4:	push	{r0}		; (str r0, [sp, #-4]!)
   14ad8:	ldr	ip, [pc, #16]	; 14af0 <g_io_channel_unref@plt+0x8d0>
   14adc:	push	{ip}		; (str ip, [sp, #-4]!)
   14ae0:	ldr	r0, [pc, #12]	; 14af4 <g_io_channel_unref@plt+0x8d4>
   14ae4:	ldr	r3, [pc, #12]	; 14af8 <g_io_channel_unref@plt+0x8d8>
   14ae8:	bl	14160 <__libc_start_main@plt>
   14aec:	bl	13b78 <abort@plt>
   14af0:	andeq	r9, r1, r4, lsr ip
   14af4:	andeq	r4, r1, r0, lsr r2
   14af8:	ldrdeq	r9, [r1], -r0
   14afc:	ldr	r3, [pc, #20]	; 14b18 <g_io_channel_unref@plt+0x8f8>
   14b00:	ldr	r2, [pc, #20]	; 14b1c <g_io_channel_unref@plt+0x8fc>
   14b04:	add	r3, pc, r3
   14b08:	ldr	r2, [r3, r2]
   14b0c:	cmp	r2, #0
   14b10:	bxeq	lr
   14b14:	b	14178 <__gmon_start__@plt>
   14b18:	strdeq	r7, [r1], -r4
   14b1c:			; <UNDEFINED> instruction: 0x000003bc
   14b20:	push	{r3, lr}
   14b24:	movw	r0, #50116	; 0xc3c4
   14b28:	ldr	r3, [pc, #36]	; 14b54 <g_io_channel_unref@plt+0x934>
   14b2c:	movt	r0, #2
   14b30:	rsb	r3, r0, r3
   14b34:	cmp	r3, #6
   14b38:	popls	{r3, pc}
   14b3c:	movw	r3, #0
   14b40:	movt	r3, #0
   14b44:	cmp	r3, #0
   14b48:	popeq	{r3, pc}
   14b4c:	blx	r3
   14b50:	pop	{r3, pc}
   14b54:	andeq	ip, r2, r7, asr #7
   14b58:	push	{r3, lr}
   14b5c:	movw	r0, #50116	; 0xc3c4
   14b60:	movw	r3, #50116	; 0xc3c4
   14b64:	movt	r0, #2
   14b68:	movt	r3, #2
   14b6c:	rsb	r3, r0, r3
   14b70:	asr	r3, r3, #2
   14b74:	add	r3, r3, r3, lsr #31
   14b78:	asrs	r1, r3, #1
   14b7c:	popeq	{r3, pc}
   14b80:	movw	r2, #0
   14b84:	movt	r2, #0
   14b88:	cmp	r2, #0
   14b8c:	popeq	{r3, pc}
   14b90:	blx	r2
   14b94:	pop	{r3, pc}
   14b98:	push	{r4, lr}
   14b9c:	movw	r4, #50124	; 0xc3cc
   14ba0:	movt	r4, #2
   14ba4:	ldrb	r3, [r4]
   14ba8:	cmp	r3, #0
   14bac:	popne	{r4, pc}
   14bb0:	bl	14b20 <g_io_channel_unref@plt+0x900>
   14bb4:	mov	r3, #1
   14bb8:	strb	r3, [r4]
   14bbc:	pop	{r4, pc}
   14bc0:	movw	r0, #48772	; 0xbe84
   14bc4:	movt	r0, #2
   14bc8:	push	{r3, lr}
   14bcc:	ldr	r3, [r0]
   14bd0:	cmp	r3, #0
   14bd4:	beq	14bec <g_io_channel_unref@plt+0x9cc>
   14bd8:	movw	r3, #0
   14bdc:	movt	r3, #0
   14be0:	cmp	r3, #0
   14be4:	beq	14bec <g_io_channel_unref@plt+0x9cc>
   14be8:	blx	r3
   14bec:	pop	{r3, lr}
   14bf0:	b	14b58 <g_io_channel_unref@plt+0x938>
   14bf4:	push	{r4, lr}
   14bf8:	movw	r4, #50128	; 0xc3d0
   14bfc:	dmb	sy
   14c00:	movt	r4, #2
   14c04:	ldr	r3, [r4]
   14c08:	dmb	sy
   14c0c:	cmp	r3, #0
   14c10:	beq	14c1c <g_io_channel_unref@plt+0x9fc>
   14c14:	ldr	r0, [r4]
   14c18:	pop	{r4, pc}
   14c1c:	mov	r0, r4
   14c20:	bl	13c5c <g_once_init_enter@plt>
   14c24:	cmp	r0, #0
   14c28:	beq	14c14 <g_io_channel_unref@plt+0x9f4>
   14c2c:	movw	r0, #40260	; 0x9d44
   14c30:	movt	r0, #1
   14c34:	bl	13cd4 <g_intern_static_string@plt>
   14c38:	movw	r1, #40008	; 0x9c48
   14c3c:	movt	r1, #1
   14c40:	bl	14064 <g_enum_register_static@plt>
   14c44:	mov	r1, r0
   14c48:	mov	r0, r4
   14c4c:	bl	13fec <g_once_init_leave@plt>
   14c50:	b	14c14 <g_io_channel_unref@plt+0x9f4>
   14c54:	push	{r4, lr}
   14c58:	movw	r4, #50128	; 0xc3d0
   14c5c:	dmb	sy
   14c60:	movt	r4, #2
   14c64:	ldr	r3, [r4, #4]
   14c68:	dmb	sy
   14c6c:	cmp	r3, #0
   14c70:	beq	14c7c <g_io_channel_unref@plt+0xa5c>
   14c74:	ldr	r0, [r4, #4]
   14c78:	pop	{r4, pc}
   14c7c:	add	r0, r4, #4
   14c80:	bl	13c5c <g_once_init_enter@plt>
   14c84:	cmp	r0, #0
   14c88:	beq	14c74 <g_io_channel_unref@plt+0xa54>
   14c8c:	movw	r0, #40284	; 0x9d5c
   14c90:	movt	r0, #1
   14c94:	bl	13cd4 <g_intern_static_string@plt>
   14c98:	ldr	r1, [pc, #16]	; 14cb0 <g_io_channel_unref@plt+0xa90>
   14c9c:	bl	14064 <g_enum_register_static@plt>
   14ca0:	mov	r1, r0
   14ca4:	add	r0, r4, #4
   14ca8:	bl	13fec <g_once_init_leave@plt>
   14cac:	b	14c74 <g_io_channel_unref@plt+0xa54>
   14cb0:	andeq	r9, r1, ip, ror #24
   14cb4:	push	{r4, lr}
   14cb8:	movw	r4, #50128	; 0xc3d0
   14cbc:	dmb	sy
   14cc0:	movt	r4, #2
   14cc4:	ldr	r3, [r4, #8]
   14cc8:	dmb	sy
   14ccc:	cmp	r3, #0
   14cd0:	beq	14cdc <g_io_channel_unref@plt+0xabc>
   14cd4:	ldr	r0, [r4, #8]
   14cd8:	pop	{r4, pc}
   14cdc:	add	r0, r4, #8
   14ce0:	bl	13c5c <g_once_init_enter@plt>
   14ce4:	cmp	r0, #0
   14ce8:	beq	14cd4 <g_io_channel_unref@plt+0xab4>
   14cec:	movw	r0, #40312	; 0x9d78
   14cf0:	movt	r0, #1
   14cf4:	bl	13cd4 <g_intern_static_string@plt>
   14cf8:	ldr	r1, [pc, #16]	; 14d10 <g_io_channel_unref@plt+0xaf0>
   14cfc:	bl	14064 <g_enum_register_static@plt>
   14d00:	mov	r1, r0
   14d04:	add	r0, r4, #8
   14d08:	bl	13fec <g_once_init_leave@plt>
   14d0c:	b	14cd4 <g_io_channel_unref@plt+0xab4>
   14d10:	andeq	r9, r1, r8, lsr #25
   14d14:	push	{r4, lr}
   14d18:	movw	r4, #50128	; 0xc3d0
   14d1c:	dmb	sy
   14d20:	movt	r4, #2
   14d24:	ldr	r3, [r4, #12]
   14d28:	dmb	sy
   14d2c:	cmp	r3, #0
   14d30:	beq	14d3c <g_io_channel_unref@plt+0xb1c>
   14d34:	ldr	r0, [r4, #12]
   14d38:	pop	{r4, pc}
   14d3c:	add	r0, r4, #12
   14d40:	bl	13c5c <g_once_init_enter@plt>
   14d44:	cmp	r0, #0
   14d48:	beq	14d34 <g_io_channel_unref@plt+0xb14>
   14d4c:	movw	r0, #40332	; 0x9d8c
   14d50:	movt	r0, #1
   14d54:	bl	13cd4 <g_intern_static_string@plt>
   14d58:	ldr	r1, [pc, #16]	; 14d70 <g_io_channel_unref@plt+0xb50>
   14d5c:	bl	14064 <g_enum_register_static@plt>
   14d60:	mov	r1, r0
   14d64:	add	r0, r4, #12
   14d68:	bl	13fec <g_once_init_leave@plt>
   14d6c:	b	14d34 <g_io_channel_unref@plt+0xb14>
   14d70:	strdeq	r9, [r1], -r0
   14d74:	push	{r4, lr}
   14d78:	movw	r4, #50128	; 0xc3d0
   14d7c:	dmb	sy
   14d80:	movt	r4, #2
   14d84:	ldr	r3, [r4, #16]
   14d88:	dmb	sy
   14d8c:	cmp	r3, #0
   14d90:	beq	14d9c <g_io_channel_unref@plt+0xb7c>
   14d94:	ldr	r0, [r4, #16]
   14d98:	pop	{r4, pc}
   14d9c:	add	r0, r4, #16
   14da0:	bl	13c5c <g_once_init_enter@plt>
   14da4:	cmp	r0, #0
   14da8:	beq	14d94 <g_io_channel_unref@plt+0xb74>
   14dac:	movw	r0, #40356	; 0x9da4
   14db0:	movt	r0, #1
   14db4:	bl	13cd4 <g_intern_static_string@plt>
   14db8:	ldr	r1, [pc, #16]	; 14dd0 <g_io_channel_unref@plt+0xbb0>
   14dbc:	bl	14064 <g_enum_register_static@plt>
   14dc0:	mov	r1, r0
   14dc4:	add	r0, r4, #16
   14dc8:	bl	13fec <g_once_init_leave@plt>
   14dcc:	b	14d94 <g_io_channel_unref@plt+0xb74>
   14dd0:	andeq	r9, r1, r0, lsr #26
   14dd4:	andeq	r0, r0, r0
   14dd8:	ldrb	r3, [r1, #24]
   14ddc:	orr	r3, r3, #8
   14de0:	strb	r3, [r1, #24]
   14de4:	bx	lr
   14de8:	push	{r4, r5, r6, r7, r8, lr}
   14dec:	mov	r5, r1
   14df0:	mov	r4, r2
   14df4:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   14df8:	ldrb	r3, [r0, #56]	; 0x38
   14dfc:	mov	r6, r0
   14e00:	tst	r3, #4
   14e04:	bne	14e64 <g_io_channel_unref@plt+0xc44>
   14e08:	tst	r3, #2
   14e0c:	popeq	{r4, r5, r6, r7, r8, pc}
   14e10:	ldmib	r5, {r6, r7}
   14e14:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   14e18:	ldr	r3, [r4, #20]
   14e1c:	ldr	r1, [r4, #16]
   14e20:	rsb	r2, r3, r7
   14e24:	rsb	r3, r1, r6
   14e28:	mul	r2, r2, r2
   14e2c:	mla	r3, r3, r3, r2
   14e30:	ldr	r1, [r0, #20]
   14e34:	mul	r1, r1, r1
   14e38:	cmp	r3, r1
   14e3c:	poplt	{r4, r5, r6, r7, r8, pc}
   14e40:	ldrb	r3, [r4, #24]
   14e44:	tst	r3, #2
   14e48:	popne	{r4, r5, r6, r7, r8, pc}
   14e4c:	ldmib	r5, {r2, r3}
   14e50:	ldr	r0, [r4, #8]
   14e54:	str	r2, [r4, #16]
   14e58:	str	r3, [r4, #20]
   14e5c:	pop	{r4, r5, r6, r7, r8, lr}
   14e60:	b	17584 <g_io_channel_unref@plt+0x3364>
   14e64:	ldmib	r5, {r7, r8}
   14e68:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   14e6c:	ldr	r3, [r4, #20]
   14e70:	ldr	r1, [r4, #16]
   14e74:	rsb	r2, r3, r8
   14e78:	rsb	r3, r1, r7
   14e7c:	mul	r2, r2, r2
   14e80:	mla	r3, r3, r3, r2
   14e84:	ldr	r1, [r0, #20]
   14e88:	mul	r1, r1, r1
   14e8c:	cmp	r3, r1
   14e90:	bge	14ea4 <g_io_channel_unref@plt+0xc84>
   14e94:	ldrb	r3, [r6, #56]	; 0x38
   14e98:	tst	r3, #2
   14e9c:	popeq	{r4, r5, r6, r7, r8, pc}
   14ea0:	b	14e10 <g_io_channel_unref@plt+0xbf0>
   14ea4:	bl	1813c <g_io_channel_unref@plt+0x3f1c>
   14ea8:	bl	184e0 <g_io_channel_unref@plt+0x42c0>
   14eac:	ldr	r0, [r4, #4]
   14eb0:	bl	17698 <g_io_channel_unref@plt+0x3478>
   14eb4:	cmp	r0, #0
   14eb8:	bne	14ed4 <g_io_channel_unref@plt+0xcb4>
   14ebc:	ldrb	r2, [r4, #24]
   14ec0:	ldrb	r3, [r6, #56]	; 0x38
   14ec4:	tst	r2, #8
   14ec8:	bfcne	r2, #3, #1
   14ecc:	strbne	r2, [r4, #24]
   14ed0:	b	14e08 <g_io_channel_unref@plt+0xbe8>
   14ed4:	ldr	r0, [r4, #4]
   14ed8:	bl	17618 <g_io_channel_unref@plt+0x33f8>
   14edc:	b	14ebc <g_io_channel_unref@plt+0xc9c>
   14ee0:	b	14034 <gtk_main_quit@plt>
   14ee4:	push	{r3, lr}
   14ee8:	bl	17050 <g_io_channel_unref@plt+0x2e30>
   14eec:	pop	{r3, lr}
   14ef0:	b	14034 <gtk_main_quit@plt>
   14ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ef8:	vpush	{d8-d11}
   14efc:	movw	r4, #50120	; 0xc3c8
   14f00:	movt	r4, #2
   14f04:	sub	sp, sp, #28
   14f08:	vmov.f64	d8, d0
   14f0c:	mov	r6, r0
   14f10:	ldr	r3, [r4]
   14f14:	str	r3, [sp, #20]
   14f18:	bl	1813c <g_io_channel_unref@plt+0x3f1c>
   14f1c:	mov	r9, r0
   14f20:	bl	18184 <g_io_channel_unref@plt+0x3f64>
   14f24:	subs	r5, r0, #0
   14f28:	beq	15078 <g_io_channel_unref@plt+0xe58>
   14f2c:	bl	17b48 <g_io_channel_unref@plt+0x3928>
   14f30:	mov	sl, r0
   14f34:	mov	r0, r5
   14f38:	bl	17c20 <g_io_channel_unref@plt+0x3a00>
   14f3c:	add	r1, sp, #12
   14f40:	add	r2, sp, #14
   14f44:	mov	r7, r0
   14f48:	mov	r0, r5
   14f4c:	bl	17d28 <g_io_channel_unref@plt+0x3b08>
   14f50:	add	r1, sp, #16
   14f54:	add	r2, sp, #18
   14f58:	mov	r0, r5
   14f5c:	bl	17ca0 <g_io_channel_unref@plt+0x3a80>
   14f60:	mov	r0, r5
   14f64:	bl	13fbc <g_object_unref@plt>
   14f68:	mov	r0, r6
   14f6c:	bl	17784 <g_io_channel_unref@plt+0x3564>
   14f70:	ldrh	r6, [sp, #12]
   14f74:	ldrh	r8, [sp, #14]
   14f78:	vmov.f64	d9, d0
   14f7c:	bl	16ad4 <g_io_channel_unref@plt+0x28b4>
   14f80:	bl	139bc <gtk_widget_get_style@plt>
   14f84:	lsl	r3, r6, #2
   14f88:	ldrh	r1, [r0, #112]	; 0x70
   14f8c:	mov	r2, r0
   14f90:	ldrh	r2, [r2, #116]	; 0x74
   14f94:	vmov	s22, r1
   14f98:	ldrh	r1, [r0, #114]	; 0x72
   14f9c:	vmov	s20, r2
   14fa0:	str	r3, [sp]
   14fa4:	mov	r2, r6
   14fa8:	mov	r3, r8
   14fac:	vmov	s21, r1
   14fb0:	mov	r0, r7
   14fb4:	mov	r1, #0
   14fb8:	bl	13e0c <cairo_image_surface_create_for_data@plt>
   14fbc:	mov	fp, r0
   14fc0:	bl	138fc <cairo_create@plt>
   14fc4:	mov	r1, #5
   14fc8:	mov	r5, r0
   14fcc:	bl	13974 <cairo_set_operator@plt>
   14fd0:	vmov	s13, r8
   14fd4:	mov	r0, r5
   14fd8:	vldr	d0, [pc, #184]	; 15098 <g_io_channel_unref@plt+0xe78>
   14fdc:	vmov.f64	d1, d0
   14fe0:	vcvt.f64.s32	d7, s13
   14fe4:	vmul.f64	d3, d8, d7
   14fe8:	vmov	s15, r6
   14fec:	vdiv.f64	d3, d3, d9
   14ff0:	vcvt.f64.s32	d2, s15
   14ff4:	bl	13a28 <cairo_rectangle@plt>
   14ff8:	vldr	d7, [pc, #160]	; 150a0 <g_io_channel_unref@plt+0xe80>
   14ffc:	vldr	d3, [pc, #164]	; 150a8 <g_io_channel_unref@plt+0xe88>
   15000:	mov	r0, r5
   15004:	vcvt.f64.s32	d0, s22
   15008:	vcvt.f64.s32	d1, s21
   1500c:	vcvt.f64.s32	d2, s20
   15010:	vdiv.f64	d0, d0, d7
   15014:	vdiv.f64	d1, d1, d7
   15018:	vdiv.f64	d2, d2, d7
   1501c:	bl	13a70 <cairo_set_source_rgba@plt>
   15020:	mov	r0, r5
   15024:	bl	1413c <cairo_fill@plt>
   15028:	mov	r0, r5
   1502c:	bl	13f2c <cairo_destroy@plt>
   15030:	mov	r0, fp
   15034:	bl	13d7c <cairo_surface_destroy@plt>
   15038:	ldrh	lr, [sp, #16]
   1503c:	ldrh	ip, [sp, #18]
   15040:	mov	r0, sl
   15044:	ldrh	r2, [sp, #12]
   15048:	mov	r1, r7
   1504c:	ldrh	r3, [sp, #14]
   15050:	str	lr, [sp]
   15054:	str	ip, [sp, #4]
   15058:	bl	17a20 <g_io_channel_unref@plt+0x3800>
   1505c:	subs	r5, r0, #0
   15060:	beq	15078 <g_io_channel_unref@plt+0xe58>
   15064:	mov	r0, r9
   15068:	mov	r1, r5
   1506c:	bl	18344 <g_io_channel_unref@plt+0x4124>
   15070:	mov	r0, r5
   15074:	bl	13fbc <g_object_unref@plt>
   15078:	ldr	r2, [sp, #20]
   1507c:	ldr	r3, [r4]
   15080:	cmp	r2, r3
   15084:	bne	15094 <g_io_channel_unref@plt+0xe74>
   15088:	add	sp, sp, #28
   1508c:	vpop	{d8-d11}
   15090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15094:	bl	13d1c <__stack_chk_fail@plt>
	...
   150a4:	rscmi	pc, pc, r0, ror #31
   150a8:	teqcc	r3, #-872415232	; 0xcc000000
   150ac:	svccc	0x00e33333
   150b0:	ldrb	r3, [r2, #24]
   150b4:	push	{r4, lr}
   150b8:	tst	r3, #2
   150bc:	mov	r4, r2
   150c0:	popne	{r4, pc}
   150c4:	mov	r0, r1
   150c8:	movw	r1, #41048	; 0xa058
   150cc:	movt	r1, #1
   150d0:	bl	13914 <g_str_equal@plt>
   150d4:	ldrb	r3, [r4, #24]
   150d8:	rsbs	r0, r0, #1
   150dc:	movcc	r0, #0
   150e0:	bfi	r3, r0, #2, #1
   150e4:	strb	r3, [r4, #24]
   150e8:	pop	{r4, pc}
   150ec:	push	{r3, r4, r5, r6, r7, lr}
   150f0:	mov	r4, r1
   150f4:	mov	r5, r0
   150f8:	mov	r7, r2
   150fc:	bl	15708 <g_io_channel_unref@plt+0x14e8>
   15100:	mov	r6, r0
   15104:	bl	15718 <g_io_channel_unref@plt+0x14f8>
   15108:	cmp	r4, #3
   1510c:	ldrls	pc, [pc, r4, lsl #2]
   15110:	b	151ac <g_io_channel_unref@plt+0xf8c>
   15114:	muleq	r1, r0, r1
   15118:	andeq	r5, r1, r0, ror #2
   1511c:	andeq	r5, r1, ip, ror r1
   15120:	andeq	r5, r1, r4, lsr #2
   15124:	mov	r1, r5
   15128:	mov	r2, #1
   1512c:	mov	r3, #0
   15130:	mov	r0, r6
   15134:	bl	13d4c <XTestFakeButtonEvent@plt>
   15138:	mov	r1, r5
   1513c:	mov	r2, #0
   15140:	mov	r3, r7
   15144:	mov	r0, r6
   15148:	bl	13d4c <XTestFakeButtonEvent@plt>
   1514c:	mov	r0, r6
   15150:	mov	r1, r5
   15154:	mov	r2, #1
   15158:	mov	r3, r7
   1515c:	bl	13d4c <XTestFakeButtonEvent@plt>
   15160:	mov	r0, r6
   15164:	mov	r1, r5
   15168:	mov	r3, r7
   1516c:	mov	r2, #0
   15170:	bl	13d4c <XTestFakeButtonEvent@plt>
   15174:	pop	{r3, r4, r5, r6, r7, lr}
   15178:	b	1571c <g_io_channel_unref@plt+0x14fc>
   1517c:	mov	r0, r6
   15180:	mov	r1, r5
   15184:	mov	r2, #1
   15188:	mov	r3, #0
   1518c:	b	1515c <g_io_channel_unref@plt+0xf3c>
   15190:	mov	r0, r6
   15194:	mov	r1, r5
   15198:	mov	r3, r7
   1519c:	mov	r2, #1
   151a0:	bl	13d4c <XTestFakeButtonEvent@plt>
   151a4:	pop	{r3, r4, r5, r6, r7, lr}
   151a8:	b	1571c <g_io_channel_unref@plt+0x14fc>
   151ac:	movw	r2, #41060	; 0xa064
   151b0:	mov	r0, #0
   151b4:	movt	r2, #1
   151b8:	mov	r1, #16
   151bc:	bl	139a4 <g_log@plt>
   151c0:	pop	{r3, r4, r5, r6, r7, lr}
   151c4:	b	1571c <g_io_channel_unref@plt+0x14fc>
   151c8:	push	{r3, r4, r5, r6, r7, lr}
   151cc:	mov	r4, r0
   151d0:	bl	13bf0 <gdk_display_get_default@plt>
   151d4:	mov	r7, r0
   151d8:	bl	13f14 <gdk_display_get_n_screens@plt>
   151dc:	mov	r6, r0
   151e0:	mov	r0, r4
   151e4:	bl	13950 <gdk_cursor_new@plt>
   151e8:	cmp	r6, #0
   151ec:	movgt	r4, #0
   151f0:	mov	r5, r0
   151f4:	ble	1521c <g_io_channel_unref@plt+0xffc>
   151f8:	mov	r1, r4
   151fc:	mov	r0, r7
   15200:	bl	1410c <gdk_display_get_screen@plt>
   15204:	add	r4, r4, #1
   15208:	bl	13a64 <gdk_screen_get_root_window@plt>
   1520c:	mov	r1, r5
   15210:	bl	13884 <gdk_window_set_cursor@plt>
   15214:	cmp	r4, r6
   15218:	bne	151f8 <g_io_channel_unref@plt+0xfd8>
   1521c:	mov	r0, r5
   15220:	pop	{r3, r4, r5, r6, r7, lr}
   15224:	b	13fbc <g_object_unref@plt>
   15228:	push	{r3, r4, r5, lr}
   1522c:	mov	r4, r0
   15230:	ldrb	r3, [r0, #24]
   15234:	tst	r3, #4
   15238:	beq	15270 <g_io_channel_unref@plt+0x1050>
   1523c:	bl	15748 <g_io_channel_unref@plt+0x1528>
   15240:	subs	r5, r0, #0
   15244:	beq	15258 <g_io_channel_unref@plt+0x1038>
   15248:	bl	14100 <gtk_get_current_event_time@plt>
   1524c:	mov	r1, r0
   15250:	mov	r0, r5
   15254:	bl	14148 <gdk_device_ungrab@plt>
   15258:	ldrb	r3, [r4, #24]
   1525c:	ldr	r0, [r4, #8]
   15260:	bfc	r3, #1, #1
   15264:	strb	r3, [r4, #24]
   15268:	pop	{r3, r4, r5, lr}
   1526c:	b	17618 <g_io_channel_unref@plt+0x33f8>
   15270:	mov	r0, #68	; 0x44
   15274:	bl	151c8 <g_io_channel_unref@plt+0xfa8>
   15278:	b	15258 <g_io_channel_unref@plt+0x1038>
   1527c:	push	{r3, r4, r5, lr}
   15280:	mov	r4, r1
   15284:	mov	r5, r2
   15288:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   1528c:	ldrb	r3, [r0, #56]	; 0x38
   15290:	tst	r3, #4
   15294:	beq	152a4 <g_io_channel_unref@plt+0x1084>
   15298:	ldr	r3, [r4, #12]
   1529c:	cmp	r3, #1
   152a0:	beq	152fc <g_io_channel_unref@plt+0x10dc>
   152a4:	ldr	r3, [r4]
   152a8:	cmp	r3, #1
   152ac:	beq	15344 <g_io_channel_unref@plt+0x1124>
   152b0:	cmp	r3, #2
   152b4:	popne	{r3, r4, r5, pc}
   152b8:	ldrb	r3, [r5, #24]
   152bc:	tst	r3, #1
   152c0:	popeq	{r3, r4, r5, pc}
   152c4:	ubfx	r4, r3, #1, #1
   152c8:	cmp	r4, #0
   152cc:	bne	15338 <g_io_channel_unref@plt+0x1118>
   152d0:	ldr	r0, [r5, #8]
   152d4:	bl	17618 <g_io_channel_unref@plt+0x33f8>
   152d8:	bl	1813c <g_io_channel_unref@plt+0x3f1c>
   152dc:	bl	184e0 <g_io_channel_unref@plt+0x42c0>
   152e0:	ldrb	r3, [r5, #24]
   152e4:	tst	r3, #1
   152e8:	bne	1536c <g_io_channel_unref@plt+0x114c>
   152ec:	ldr	r0, [r5]
   152f0:	mov	r1, #3
   152f4:	pop	{r3, r4, r5, lr}
   152f8:	b	16510 <g_io_channel_unref@plt+0x22f0>
   152fc:	ldr	r3, [r4]
   15300:	cmp	r3, #1
   15304:	beq	15384 <g_io_channel_unref@plt+0x1164>
   15308:	bl	1813c <g_io_channel_unref@plt+0x3f1c>
   1530c:	bl	184e0 <g_io_channel_unref@plt+0x42c0>
   15310:	ldrb	r3, [r5, #24]
   15314:	tst	r3, #8
   15318:	beq	15360 <g_io_channel_unref@plt+0x1140>
   1531c:	bfc	r3, #3, #1
   15320:	mov	r0, #3
   15324:	mov	r1, #2
   15328:	strb	r3, [r5, #24]
   1532c:	mov	r2, #0
   15330:	bl	150ec <g_io_channel_unref@plt+0xecc>
   15334:	b	152a4 <g_io_channel_unref@plt+0x1084>
   15338:	mov	r0, r5
   1533c:	pop	{r3, r4, r5, lr}
   15340:	b	15228 <g_io_channel_unref@plt+0x1008>
   15344:	ldr	r0, [r5, #8]
   15348:	bl	17698 <g_io_channel_unref@plt+0x3478>
   1534c:	cmp	r0, #0
   15350:	ldrbne	r3, [r5, #24]
   15354:	bne	152c4 <g_io_channel_unref@plt+0x10a4>
   15358:	ldr	r3, [r4]
   1535c:	b	152b0 <g_io_channel_unref@plt+0x1090>
   15360:	ldr	r0, [r5, #4]
   15364:	bl	17618 <g_io_channel_unref@plt+0x33f8>
   15368:	b	152a4 <g_io_channel_unref@plt+0x1084>
   1536c:	mov	r0, #68	; 0x44
   15370:	bl	151c8 <g_io_channel_unref@plt+0xfa8>
   15374:	ldrb	r3, [r5, #24]
   15378:	bfi	r3, r4, #0, #1
   1537c:	strb	r3, [r5, #24]
   15380:	b	152ec <g_io_channel_unref@plt+0x10cc>
   15384:	ldmib	r4, {r2, r3}
   15388:	ldr	r0, [r5, #4]
   1538c:	str	r2, [r5, #16]
   15390:	str	r3, [r5, #20]
   15394:	bl	17584 <g_io_channel_unref@plt+0x3364>
   15398:	b	152a4 <g_io_channel_unref@plt+0x1084>
   1539c:	push	{r4, r5, r6, r7, r8, lr}
   153a0:	mov	r4, r0
   153a4:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   153a8:	mov	r6, r0
   153ac:	ldr	r0, [r4]
   153b0:	bl	165dc <g_io_channel_unref@plt+0x23bc>
   153b4:	ldr	r3, [r6, #24]
   153b8:	cmp	r3, #1
   153bc:	mov	r5, r0
   153c0:	beq	153e4 <g_io_channel_unref@plt+0x11c4>
   153c4:	cmp	r5, #4
   153c8:	ldrls	pc, [pc, r5, lsl #2]
   153cc:	b	154a4 <g_io_channel_unref@plt+0x1284>
   153d0:	andeq	r5, r1, r0, asr #8
   153d4:	andeq	r5, r1, r0, asr r4
   153d8:	andeq	r5, r1, r0, lsl #9
   153dc:	muleq	r1, r0, r4
   153e0:	andeq	r5, r1, r0, lsr #8
   153e4:	ldrb	r3, [r4, #24]
   153e8:	tst	r3, #1
   153ec:	bne	153c4 <g_io_channel_unref@plt+0x11a4>
   153f0:	bl	15764 <g_io_channel_unref@plt+0x1544>
   153f4:	ldr	r7, [r4, #16]
   153f8:	ldr	r6, [r4, #20]
   153fc:	mov	r8, r0
   15400:	bl	15748 <g_io_channel_unref@plt+0x1528>
   15404:	cmp	r0, #0
   15408:	beq	153c4 <g_io_channel_unref@plt+0x11a4>
   1540c:	mov	r1, r8
   15410:	mov	r2, r7
   15414:	mov	r3, r6
   15418:	bl	13efc <gdk_device_warp@plt>
   1541c:	b	153c4 <g_io_channel_unref@plt+0x11a4>
   15420:	mov	r0, #2
   15424:	mov	r2, #80	; 0x50
   15428:	mov	r1, r0
   1542c:	bl	150ec <g_io_channel_unref@plt+0xecc>
   15430:	ldr	r0, [r4]
   15434:	mov	r1, #3
   15438:	pop	{r4, r5, r6, r7, r8, lr}
   1543c:	b	16510 <g_io_channel_unref@plt+0x22f0>
   15440:	mov	r0, #3
   15444:	mov	r1, #2
   15448:	mov	r2, #80	; 0x50
   1544c:	b	1542c <g_io_channel_unref@plt+0x120c>
   15450:	ldrb	r1, [r4, #24]
   15454:	mov	r0, #1
   15458:	ands	r1, r1, #1
   1545c:	bne	154bc <g_io_channel_unref@plt+0x129c>
   15460:	mov	r2, r1
   15464:	bl	150ec <g_io_channel_unref@plt+0xecc>
   15468:	mov	r0, #52	; 0x34
   1546c:	bl	151c8 <g_io_channel_unref@plt+0xfa8>
   15470:	ldrb	r3, [r4, #24]
   15474:	orr	r3, r3, #1
   15478:	strb	r3, [r4, #24]
   1547c:	pop	{r4, r5, r6, r7, r8, pc}
   15480:	mov	r0, #1
   15484:	mov	r1, #3
   15488:	mov	r2, #40	; 0x28
   1548c:	b	1542c <g_io_channel_unref@plt+0x120c>
   15490:	mov	r0, #1
   15494:	mov	r1, #2
   15498:	mov	r2, #80	; 0x50
   1549c:	pop	{r4, r5, r6, r7, r8, lr}
   154a0:	b	150ec <g_io_channel_unref@plt+0xecc>
   154a4:	movw	r2, #41088	; 0xa080
   154a8:	mov	r0, #0
   154ac:	movt	r2, #1
   154b0:	mov	r1, #16
   154b4:	pop	{r4, r5, r6, r7, r8, lr}
   154b8:	b	139a4 <g_log@plt>
   154bc:	mov	r1, r0
   154c0:	mov	r2, #0
   154c4:	bl	150ec <g_io_channel_unref@plt+0xecc>
   154c8:	mov	r0, #68	; 0x44
   154cc:	bl	151c8 <g_io_channel_unref@plt+0xfa8>
   154d0:	ldrb	r3, [r4, #24]
   154d4:	ldr	r0, [r4]
   154d8:	mov	r1, #3
   154dc:	bfc	r3, #0, #1
   154e0:	strb	r3, [r4, #24]
   154e4:	pop	{r4, r5, r6, r7, r8, lr}
   154e8:	b	16510 <g_io_channel_unref@plt+0x22f0>
   154ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   154f0:	movw	r4, #50120	; 0xc3c8
   154f4:	movt	r4, #2
   154f8:	sub	sp, sp, #36	; 0x24
   154fc:	mov	r5, r1
   15500:	ldr	r3, [r4]
   15504:	str	r3, [sp, #28]
   15508:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   1550c:	mov	r6, r0
   15510:	bl	1813c <g_io_channel_unref@plt+0x3f1c>
   15514:	bl	184e0 <g_io_channel_unref@plt+0x42c0>
   15518:	ldr	r3, [r6, #24]
   1551c:	cmp	r3, #0
   15520:	beq	15680 <g_io_channel_unref@plt+0x1460>
   15524:	ldrb	r3, [r5, #24]
   15528:	tst	r3, #2
   1552c:	bne	15598 <g_io_channel_unref@plt+0x1378>
   15530:	ands	r6, r3, #1
   15534:	bne	15680 <g_io_channel_unref@plt+0x1460>
   15538:	tst	r3, #4
   1553c:	beq	156a0 <g_io_channel_unref@plt+0x1480>
   15540:	bl	15748 <g_io_channel_unref@plt+0x1528>
   15544:	subs	r8, r0, #0
   15548:	beq	156a8 <g_io_channel_unref@plt+0x1488>
   1554c:	mov	r0, #30
   15550:	bl	13950 <gdk_cursor_new@plt>
   15554:	mov	r7, r0
   15558:	bl	15764 <g_io_channel_unref@plt+0x1544>
   1555c:	bl	13a64 <gdk_screen_get_root_window@plt>
   15560:	mov	r9, r0
   15564:	bl	14100 <gtk_get_current_event_time@plt>
   15568:	mov	ip, #4
   1556c:	mov	r2, r6
   15570:	str	r7, [sp, #4]
   15574:	mov	r1, r9
   15578:	mov	r3, r6
   1557c:	str	ip, [sp]
   15580:	str	r0, [sp, #8]
   15584:	mov	r0, r8
   15588:	bl	141f0 <gdk_device_grab@plt>
   1558c:	mov	r0, r7
   15590:	bl	13fbc <g_object_unref@plt>
   15594:	b	156a8 <g_io_channel_unref@plt+0x1488>
   15598:	mov	r0, r5
   1559c:	bl	15228 <g_io_channel_unref@plt+0x1008>
   155a0:	ldr	r0, [r5]
   155a4:	bl	165dc <g_io_channel_unref@plt+0x23bc>
   155a8:	cmp	r0, #1
   155ac:	beq	15680 <g_io_channel_unref@plt+0x1460>
   155b0:	bl	15748 <g_io_channel_unref@plt+0x1528>
   155b4:	cmp	r0, #0
   155b8:	beq	15688 <g_io_channel_unref@plt+0x1468>
   155bc:	mov	r1, #0
   155c0:	add	r2, sp, #20
   155c4:	add	r3, sp, #24
   155c8:	bl	13ec0 <gdk_device_get_position@plt>
   155cc:	ldr	r6, [sp, #20]
   155d0:	ldr	r7, [sp, #24]
   155d4:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   155d8:	ldr	ip, [r5, #20]
   155dc:	ldr	r3, [r5, #16]
   155e0:	rsb	r1, ip, r7
   155e4:	rsb	r2, r3, r6
   155e8:	mul	r1, r1, r1
   155ec:	mla	r2, r2, r2, r1
   155f0:	ldr	r0, [r0, #20]
   155f4:	mul	r0, r0, r0
   155f8:	cmp	r2, r0
   155fc:	blt	15688 <g_io_channel_unref@plt+0x1468>
   15600:	ldr	r2, [sp, #20]
   15604:	ldr	r6, [sp, #24]
   15608:	rsb	r0, r2, r3
   1560c:	rsb	r1, r6, ip
   15610:	cmp	r0, #0
   15614:	rsblt	r0, r0, #0
   15618:	cmp	r1, #0
   1561c:	rsblt	r1, r1, #0
   15620:	cmp	r3, r2
   15624:	blt	156c0 <g_io_channel_unref@plt+0x14a0>
   15628:	cmp	r0, r1
   1562c:	movgt	r6, #1
   15630:	bgt	15640 <g_io_channel_unref@plt+0x1420>
   15634:	cmp	ip, r6
   15638:	movge	r6, #3
   1563c:	movlt	r6, #2
   15640:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   15644:	ldr	r3, [r0, #28]
   15648:	cmp	r3, r6
   1564c:	beq	156d0 <g_io_channel_unref@plt+0x14b0>
   15650:	ldr	r3, [r0, #32]
   15654:	cmp	r6, r3
   15658:	beq	156e0 <g_io_channel_unref@plt+0x14c0>
   1565c:	ldr	r3, [r0, #36]	; 0x24
   15660:	cmp	r6, r3
   15664:	beq	156f0 <g_io_channel_unref@plt+0x14d0>
   15668:	ldr	r3, [r0, #40]	; 0x28
   1566c:	cmp	r6, r3
   15670:	bne	15688 <g_io_channel_unref@plt+0x1468>
   15674:	ldr	r0, [r5]
   15678:	mov	r1, #0
   1567c:	bl	16510 <g_io_channel_unref@plt+0x22f0>
   15680:	mov	r0, r5
   15684:	bl	1539c <g_io_channel_unref@plt+0x117c>
   15688:	ldr	r2, [sp, #28]
   1568c:	ldr	r3, [r4]
   15690:	cmp	r2, r3
   15694:	bne	15700 <g_io_channel_unref@plt+0x14e0>
   15698:	add	sp, sp, #36	; 0x24
   1569c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   156a0:	mov	r0, #30
   156a4:	bl	151c8 <g_io_channel_unref@plt+0xfa8>
   156a8:	ldrb	r3, [r5, #24]
   156ac:	ldr	r0, [r5, #8]
   156b0:	orr	r3, r3, #2
   156b4:	strb	r3, [r5, #24]
   156b8:	bl	17584 <g_io_channel_unref@plt+0x3364>
   156bc:	b	15688 <g_io_channel_unref@plt+0x1468>
   156c0:	cmp	r0, r1
   156c4:	movgt	r6, #0
   156c8:	bgt	15640 <g_io_channel_unref@plt+0x1420>
   156cc:	b	15634 <g_io_channel_unref@plt+0x1414>
   156d0:	ldr	r0, [r5]
   156d4:	mov	r1, #3
   156d8:	bl	16510 <g_io_channel_unref@plt+0x22f0>
   156dc:	b	15680 <g_io_channel_unref@plt+0x1460>
   156e0:	ldr	r0, [r5]
   156e4:	mov	r1, #2
   156e8:	bl	16510 <g_io_channel_unref@plt+0x22f0>
   156ec:	b	15680 <g_io_channel_unref@plt+0x1460>
   156f0:	ldr	r0, [r5]
   156f4:	mov	r1, #1
   156f8:	bl	16510 <g_io_channel_unref@plt+0x22f0>
   156fc:	b	15680 <g_io_channel_unref@plt+0x1460>
   15700:	bl	13d1c <__stack_chk_fail@plt>
   15704:	nop	{0}
   15708:	push	{r3, lr}
   1570c:	bl	13bf0 <gdk_display_get_default@plt>
   15710:	pop	{r3, lr}
   15714:	b	141a8 <gdk_x11_display_get_xdisplay@plt>
   15718:	b	13b00 <gdk_error_trap_push@plt>
   1571c:	push	{r4, lr}
   15720:	bl	13e9c <gdk_flush@plt>
   15724:	bl	137f4 <gdk_error_trap_pop@plt>
   15728:	subs	r3, r0, #0
   1572c:	popeq	{r4, pc}
   15730:	movw	r2, #42092	; 0xa46c
   15734:	mov	r0, #0
   15738:	movt	r2, #1
   1573c:	mov	r1, #16
   15740:	pop	{r4, lr}
   15744:	b	139a4 <g_log@plt>
   15748:	push	{r3, lr}
   1574c:	bl	13bf0 <gdk_display_get_default@plt>
   15750:	bl	13800 <gdk_display_get_device_manager@plt>
   15754:	cmp	r0, #0
   15758:	popeq	{r3, pc}
   1575c:	pop	{r3, lr}
   15760:	b	13c44 <gdk_device_manager_get_client_pointer@plt>
   15764:	push	{r4, r5, lr}
   15768:	movw	r4, #50120	; 0xc3c8
   1576c:	movt	r4, #2
   15770:	sub	sp, sp, #12
   15774:	mov	r5, #0
   15778:	ldr	r3, [r4]
   1577c:	str	r5, [sp]
   15780:	str	r3, [sp, #4]
   15784:	bl	13bf0 <gdk_display_get_default@plt>
   15788:	bl	13f14 <gdk_display_get_n_screens@plt>
   1578c:	cmp	r0, #1
   15790:	ble	157b0 <g_io_channel_unref@plt+0x1590>
   15794:	bl	15748 <g_io_channel_unref@plt+0x1528>
   15798:	cmp	r0, r5
   1579c:	beq	157b0 <g_io_channel_unref@plt+0x1590>
   157a0:	mov	r2, r5
   157a4:	mov	r1, sp
   157a8:	mov	r3, r5
   157ac:	bl	13ec0 <gdk_device_get_position@plt>
   157b0:	ldr	r0, [sp]
   157b4:	cmp	r0, #0
   157b8:	beq	157d4 <g_io_channel_unref@plt+0x15b4>
   157bc:	ldr	r2, [sp, #4]
   157c0:	ldr	r3, [r4]
   157c4:	cmp	r2, r3
   157c8:	bne	157dc <g_io_channel_unref@plt+0x15bc>
   157cc:	add	sp, sp, #12
   157d0:	pop	{r4, r5, pc}
   157d4:	bl	14010 <gdk_screen_get_default@plt>
   157d8:	b	157bc <g_io_channel_unref@plt+0x159c>
   157dc:	bl	13d1c <__stack_chk_fail@plt>
   157e0:	push	{r4, r5, r6, r7, r8, r9, lr}
   157e4:	sub	sp, sp, #12
   157e8:	mov	r8, r1
   157ec:	mov	r7, r2
   157f0:	str	r0, [sp, #4]
   157f4:	mov	r0, #0
   157f8:	mov	r3, r0
   157fc:	mov	r2, #3
   15800:	mov	r1, r0
   15804:	movw	r5, #42120	; 0xa488
   15808:	movt	r5, #1
   1580c:	str	r5, [sp]
   15810:	bl	140b8 <gtk_message_dialog_new@plt>
   15814:	mov	r4, r0
   15818:	bl	141b4 <gtk_window_get_type@plt>
   1581c:	mov	r6, r0
   15820:	mov	r0, r4
   15824:	mov	r1, r6
   15828:	bl	13938 <g_type_check_instance_cast@plt>
   1582c:	mov	r9, r0
   15830:	bl	13788 <g_get_application_name@plt>
   15834:	mov	r1, r0
   15838:	mov	r0, r9
   1583c:	bl	13b9c <gtk_window_set_title@plt>
   15840:	mov	r1, r6
   15844:	mov	r0, r4
   15848:	bl	13938 <g_type_check_instance_cast@plt>
   1584c:	movw	r1, #42124	; 0xa48c
   15850:	movt	r1, #1
   15854:	bl	13a34 <gtk_window_set_icon_name@plt>
   15858:	mov	r1, r6
   1585c:	mov	r0, r4
   15860:	bl	13938 <g_type_check_instance_cast@plt>
   15864:	mov	r1, #1
   15868:	bl	139c8 <gtk_window_set_keep_above@plt>
   1586c:	bl	13dc4 <gtk_message_dialog_get_type@plt>
   15870:	mov	r1, r0
   15874:	mov	r0, r4
   15878:	bl	13938 <g_type_check_instance_cast@plt>
   1587c:	mov	r1, r5
   15880:	mov	r2, r8
   15884:	bl	137ac <gtk_message_dialog_format_secondary_text@plt>
   15888:	cmp	r7, #1
   1588c:	bne	158a8 <g_io_channel_unref@plt+0x1688>
   15890:	movw	r1, #42136	; 0xa498
   15894:	mov	r2, r7
   15898:	mov	r0, r4
   1589c:	movt	r1, #1
   158a0:	mov	r3, #0
   158a4:	bl	13db8 <g_object_set@plt>
   158a8:	bl	13de8 <gtk_dialog_get_type@plt>
   158ac:	mov	r1, r0
   158b0:	mov	r0, r4
   158b4:	bl	13938 <g_type_check_instance_cast@plt>
   158b8:	mvn	r2, #4
   158bc:	movw	r1, #42152	; 0xa4a8
   158c0:	movt	r1, #1
   158c4:	bl	1380c <gtk_dialog_add_button@plt>
   158c8:	bl	13de8 <gtk_dialog_get_type@plt>
   158cc:	mov	r1, r0
   158d0:	mov	r0, r4
   158d4:	bl	13938 <g_type_check_instance_cast@plt>
   158d8:	bl	13f68 <gtk_dialog_run@plt>
   158dc:	mov	r0, r4
   158e0:	add	sp, sp, #12
   158e4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   158e8:	b	13c98 <gtk_widget_destroy@plt>
   158ec:	push	{r4, lr}
   158f0:	movw	r4, #50120	; 0xc3c8
   158f4:	movt	r4, #2
   158f8:	sub	sp, sp, #8
   158fc:	add	r3, sp, #8
   15900:	mov	r2, r1
   15904:	ldr	ip, [r4]
   15908:	mov	lr, #0
   1590c:	movw	r1, #42160	; 0xa4b0
   15910:	str	lr, [r3, #-8]!
   15914:	movt	r1, #1
   15918:	mov	r3, sp
   1591c:	str	ip, [sp, #4]
   15920:	bl	13b48 <gtk_show_uri@plt>
   15924:	cmp	r0, #0
   15928:	bne	15954 <g_io_channel_unref@plt+0x1734>
   1592c:	mov	r2, #5
   15930:	movw	r1, #42180	; 0xa4c4
   15934:	movt	r1, #1
   15938:	bl	13d70 <dcgettext@plt>
   1593c:	ldr	r3, [sp]
   15940:	mov	r2, #1
   15944:	ldr	r1, [r3, #8]
   15948:	bl	157e0 <g_io_channel_unref@plt+0x15c0>
   1594c:	ldr	r0, [sp]
   15950:	bl	1386c <g_error_free@plt>
   15954:	ldr	r2, [sp, #4]
   15958:	ldr	r3, [r4]
   1595c:	cmp	r2, r3
   15960:	bne	1596c <g_io_channel_unref@plt+0x174c>
   15964:	add	sp, sp, #8
   15968:	pop	{r4, pc}
   1596c:	bl	13d1c <__stack_chk_fail@plt>
   15970:	push	{r4, lr}
   15974:	sub	sp, sp, #16
   15978:	bl	13ee4 <g_get_user_runtime_dir@plt>
   1597c:	movw	r4, #50148	; 0xc3e4
   15980:	movt	r4, #2
   15984:	mov	r1, #512	; 0x200
   15988:	movw	r3, #42204	; 0xa4dc
   1598c:	movw	r2, #42224	; 0xa4f0
   15990:	movt	r3, #1
   15994:	movt	r2, #1
   15998:	str	r3, [sp]
   1599c:	mov	r3, r1
   159a0:	str	r2, [sp, #8]
   159a4:	mov	r2, #1
   159a8:	str	r0, [sp, #4]
   159ac:	mov	r0, r4
   159b0:	bl	13fe0 <__snprintf_chk@plt>
   159b4:	mov	r3, #1
   159b8:	str	r3, [r4, #512]	; 0x200
   159bc:	add	sp, sp, #16
   159c0:	pop	{r4, pc}
   159c4:	push	{r4, lr}
   159c8:	movw	r4, #50120	; 0xc3c8
   159cc:	movt	r4, #2
   159d0:	sub	sp, sp, #24
   159d4:	cmp	r1, #0
   159d8:	add	r2, sp, #24
   159dc:	ldr	ip, [r4]
   159e0:	mov	r3, #0
   159e4:	moveq	lr, #2
   159e8:	movne	lr, #1
   159ec:	str	r3, [sp, #4]
   159f0:	mov	r1, #7
   159f4:	strh	lr, [r2, #-20]!	; 0xffffffec
   159f8:	str	r3, [sp, #8]
   159fc:	str	r3, [sp, #12]
   15a00:	str	r3, [sp, #16]
   15a04:	str	ip, [sp, #20]
   15a08:	bl	13b30 <fcntl@plt>
   15a0c:	ldr	r2, [sp, #20]
   15a10:	ldr	r3, [r4]
   15a14:	cmp	r2, r3
   15a18:	asr	r0, r0, #31
   15a1c:	bne	15a28 <g_io_channel_unref@plt+0x1808>
   15a20:	add	sp, sp, #24
   15a24:	pop	{r4, pc}
   15a28:	bl	13d1c <__stack_chk_fail@plt>
   15a2c:	push	{r4, r5, r6, r7, r8, r9, lr}
   15a30:	movw	r7, #50148	; 0xc3e4
   15a34:	movt	r7, #2
   15a38:	movw	r6, #50120	; 0xc3c8
   15a3c:	movt	r6, #2
   15a40:	sub	sp, sp, #12
   15a44:	ldr	r1, [r7, #512]	; 0x200
   15a48:	mov	r2, #0
   15a4c:	ldr	r3, [r6]
   15a50:	cmp	r1, r2
   15a54:	str	r2, [sp]
   15a58:	str	r3, [sp, #4]
   15a5c:	beq	15ba8 <g_io_channel_unref@plt+0x1988>
   15a60:	movw	r5, #50148	; 0xc3e4
   15a64:	movt	r5, #2
   15a68:	mov	r1, #2
   15a6c:	mov	r2, #420	; 0x1a4
   15a70:	mov	r0, r5
   15a74:	bl	13cb0 <open@plt>
   15a78:	subs	r8, r0, #0
   15a7c:	blt	15bd0 <g_io_channel_unref@plt+0x19b0>
   15a80:	mov	r1, #1
   15a84:	bl	159c4 <g_io_channel_unref@plt+0x17a4>
   15a88:	cmp	r0, #0
   15a8c:	blt	15bd8 <g_io_channel_unref@plt+0x19b8>
   15a90:	add	r4, r5, #516	; 0x204
   15a94:	mov	r0, r8
   15a98:	mov	r2, #255	; 0xff
   15a9c:	mov	r1, r4
   15aa0:	bl	13b6c <read@plt>
   15aa4:	cmp	r0, #0
   15aa8:	blt	15bf4 <g_io_channel_unref@plt+0x19d4>
   15aac:	add	r3, r5, r0
   15ab0:	mov	r2, #0
   15ab4:	strb	r2, [r3, #516]	; 0x204
   15ab8:	ldrb	r3, [r5, #516]	; 0x204
   15abc:	cmp	r3, r2
   15ac0:	bne	15ae0 <g_io_channel_unref@plt+0x18c0>
   15ac4:	b	15bec <g_io_channel_unref@plt+0x19cc>
   15ac8:	cmp	r3, #10
   15acc:	beq	15ae8 <g_io_channel_unref@plt+0x18c8>
   15ad0:	add	r2, r2, #1
   15ad4:	ldrb	r3, [r4, r2]
   15ad8:	cmp	r3, #0
   15adc:	beq	15ae8 <g_io_channel_unref@plt+0x18c8>
   15ae0:	cmp	r3, #13
   15ae4:	bne	15ac8 <g_io_channel_unref@plt+0x18a8>
   15ae8:	add	r2, r7, r2
   15aec:	mov	r5, #0
   15af0:	strb	r5, [r2, #516]	; 0x204
   15af4:	bl	140c4 <__errno_location@plt>
   15af8:	mov	r1, sp
   15afc:	mov	r2, #10
   15b00:	mov	r4, r0
   15b04:	ldr	r0, [pc, #264]	; 15c14 <g_io_channel_unref@plt+0x19f4>
   15b08:	str	r5, [r4]
   15b0c:	bl	13878 <strtol@plt>
   15b10:	ldr	r3, [r4]
   15b14:	cmp	r3, #0
   15b18:	mov	r5, r0
   15b1c:	bne	15bb0 <g_io_channel_unref@plt+0x1990>
   15b20:	ldr	r3, [sp]
   15b24:	cmp	r3, #0
   15b28:	beq	15bb0 <g_io_channel_unref@plt+0x1990>
   15b2c:	ldrb	r1, [r3]
   15b30:	cmp	r1, #0
   15b34:	bne	15bb0 <g_io_channel_unref@plt+0x1990>
   15b38:	bl	13c38 <kill@plt>
   15b3c:	cmp	r0, #0
   15b40:	bne	15b7c <g_io_channel_unref@plt+0x195c>
   15b44:	ldr	r7, [r4]
   15b48:	mov	r0, r8
   15b4c:	mov	r1, #0
   15b50:	bl	159c4 <g_io_channel_unref@plt+0x17a4>
   15b54:	str	r7, [r4]
   15b58:	mov	r0, r8
   15b5c:	bl	13b54 <close@plt>
   15b60:	ldr	r2, [sp, #4]
   15b64:	mov	r0, r5
   15b68:	ldr	r3, [r6]
   15b6c:	cmp	r2, r3
   15b70:	bne	15c10 <g_io_channel_unref@plt+0x19f0>
   15b74:	add	sp, sp, #12
   15b78:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15b7c:	ldr	r9, [r4]
   15b80:	cmp	r9, #1
   15b84:	moveq	r7, r9
   15b88:	beq	15b48 <g_io_channel_unref@plt+0x1928>
   15b8c:	movw	r0, #50148	; 0xc3e4
   15b90:	movt	r0, #2
   15b94:	bl	13bd8 <unlink@plt>
   15b98:	mov	r7, r9
   15b9c:	str	r9, [r4]
   15ba0:	mvn	r5, #0
   15ba4:	b	15b48 <g_io_channel_unref@plt+0x1928>
   15ba8:	bl	15970 <g_io_channel_unref@plt+0x1750>
   15bac:	b	15a60 <g_io_channel_unref@plt+0x1840>
   15bb0:	movw	r0, #50148	; 0xc3e4
   15bb4:	movt	r0, #2
   15bb8:	bl	13bd8 <unlink@plt>
   15bbc:	mov	r3, #22
   15bc0:	mov	r7, r3
   15bc4:	str	r3, [r4]
   15bc8:	mvn	r5, #0
   15bcc:	b	15b48 <g_io_channel_unref@plt+0x1928>
   15bd0:	mvn	r5, #0
   15bd4:	b	15b60 <g_io_channel_unref@plt+0x1940>
   15bd8:	bl	140c4 <__errno_location@plt>
   15bdc:	mvn	r5, #0
   15be0:	mov	r4, r0
   15be4:	ldr	r7, [r0]
   15be8:	b	15b54 <g_io_channel_unref@plt+0x1934>
   15bec:	mov	r2, r3
   15bf0:	b	15ae8 <g_io_channel_unref@plt+0x18c8>
   15bf4:	mov	r0, r5
   15bf8:	mvn	r5, #0
   15bfc:	bl	13bd8 <unlink@plt>
   15c00:	bl	140c4 <__errno_location@plt>
   15c04:	mov	r4, r0
   15c08:	ldr	r7, [r0]
   15c0c:	b	15b48 <g_io_channel_unref@plt+0x1928>
   15c10:	bl	13d1c <__stack_chk_fail@plt>
   15c14:	andeq	ip, r2, r8, ror #11
   15c18:	push	{r4, r5, r6, r7, r8, r9, lr}
   15c1c:	movw	r9, #50120	; 0xc3c8
   15c20:	movt	r9, #2
   15c24:	sub	sp, sp, #28
   15c28:	mov	r4, r0
   15c2c:	mov	r5, r1
   15c30:	ldr	r3, [r9]
   15c34:	str	r3, [sp, #20]
   15c38:	bl	15a2c <g_io_channel_unref@plt+0x180c>
   15c3c:	subs	r7, r0, #0
   15c40:	blt	15ce8 <g_io_channel_unref@plt+0x1ac8>
   15c44:	mov	r1, r4
   15c48:	bl	13c38 <kill@plt>
   15c4c:	cmp	r0, #0
   15c50:	blt	15ce8 <g_io_channel_unref@plt+0x1ac8>
   15c54:	mov	r0, #0
   15c58:	movw	r4, #34464	; 0x86a0
   15c5c:	bl	140ac <time@plt>
   15c60:	movt	r4, #1
   15c64:	add	r8, sp, #12
   15c68:	mov	r6, #0
   15c6c:	add	r5, r0, r5
   15c70:	b	15c90 <g_io_channel_unref@plt+0x1a70>
   15c74:	bne	15d08 <g_io_channel_unref@plt+0x1ae8>
   15c78:	str	r8, [sp]
   15c7c:	mov	r2, r1
   15c80:	mov	r3, r1
   15c84:	bl	13e3c <select@plt>
   15c88:	cmp	r0, #0
   15c8c:	blt	15ce8 <g_io_channel_unref@plt+0x1ac8>
   15c90:	mov	r0, #0
   15c94:	str	r6, [sp, #12]
   15c98:	str	r4, [sp, #16]
   15c9c:	bl	140ac <time@plt>
   15ca0:	cmp	r5, r0
   15ca4:	blt	15cf0 <g_io_channel_unref@plt+0x1ad0>
   15ca8:	mov	r1, #0
   15cac:	mov	r0, r7
   15cb0:	bl	13c38 <kill@plt>
   15cb4:	subs	r1, r0, #0
   15cb8:	bge	15c74 <g_io_channel_unref@plt+0x1a54>
   15cbc:	bl	140c4 <__errno_location@plt>
   15cc0:	ldr	r0, [r0]
   15cc4:	subs	r3, r0, #3
   15cc8:	mvnne	r3, #0
   15ccc:	ldr	r2, [sp, #20]
   15cd0:	mov	r0, r3
   15cd4:	ldr	r3, [r9]
   15cd8:	cmp	r2, r3
   15cdc:	bne	15d04 <g_io_channel_unref@plt+0x1ae4>
   15ce0:	add	sp, sp, #28
   15ce4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15ce8:	mvn	r3, #0
   15cec:	b	15ccc <g_io_channel_unref@plt+0x1aac>
   15cf0:	bl	140c4 <__errno_location@plt>
   15cf4:	mov	r2, #62	; 0x3e
   15cf8:	mvn	r3, #0
   15cfc:	str	r2, [r0]
   15d00:	b	15ccc <g_io_channel_unref@plt+0x1aac>
   15d04:	bl	13d1c <__stack_chk_fail@plt>
   15d08:	mov	r3, #0
   15d0c:	b	15ccc <g_io_channel_unref@plt+0x1aac>
   15d10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15d14:	movw	r4, #50120	; 0xc3c8
   15d18:	movt	r4, #2
   15d1c:	sub	sp, sp, #80	; 0x50
   15d20:	mov	r0, #18
   15d24:	ldr	r3, [r4]
   15d28:	str	r3, [sp, #76]	; 0x4c
   15d2c:	bl	13f8c <umask@plt>
   15d30:	movw	r3, #50148	; 0xc3e4
   15d34:	movt	r3, #2
   15d38:	ldr	r3, [r3, #512]	; 0x200
   15d3c:	cmp	r3, #0
   15d40:	mov	r7, r0
   15d44:	beq	15e0c <g_io_channel_unref@plt+0x1bec>
   15d48:	movw	r0, #50148	; 0xc3e4
   15d4c:	mov	r1, #194	; 0xc2
   15d50:	movt	r0, #2
   15d54:	mov	r2, #420	; 0x1a4
   15d58:	bl	13cb0 <open@plt>
   15d5c:	subs	r5, r0, #0
   15d60:	blt	15e3c <g_io_channel_unref@plt+0x1c1c>
   15d64:	mov	r1, #1
   15d68:	bl	159c4 <g_io_channel_unref@plt+0x17a4>
   15d6c:	cmp	r0, #0
   15d70:	blt	15e44 <g_io_channel_unref@plt+0x1c24>
   15d74:	bl	13794 <getpid@plt>
   15d78:	mov	r1, #64	; 0x40
   15d7c:	mov	r3, r1
   15d80:	mov	r2, #1
   15d84:	movw	ip, #42228	; 0xa4f4
   15d88:	movt	ip, #1
   15d8c:	str	ip, [sp]
   15d90:	str	r0, [sp, #4]
   15d94:	add	r0, sp, #12
   15d98:	bl	13fe0 <__snprintf_chk@plt>
   15d9c:	add	r0, sp, #12
   15da0:	bl	13fc8 <strlen@plt>
   15da4:	add	r1, sp, #12
   15da8:	mov	r6, r0
   15dac:	mov	r0, r5
   15db0:	mov	r2, r6
   15db4:	bl	14004 <write@plt>
   15db8:	cmp	r6, r0
   15dbc:	bne	15e14 <g_io_channel_unref@plt+0x1bf4>
   15dc0:	bl	140c4 <__errno_location@plt>
   15dc4:	mov	r8, #0
   15dc8:	ldr	r9, [r0]
   15dcc:	mov	r6, r0
   15dd0:	mov	r0, r5
   15dd4:	mov	r1, #0
   15dd8:	bl	159c4 <g_io_channel_unref@plt+0x17a4>
   15ddc:	mov	r0, r5
   15de0:	bl	13b54 <close@plt>
   15de4:	str	r9, [r6]
   15de8:	mov	r0, r7
   15dec:	bl	13f8c <umask@plt>
   15df0:	ldr	r2, [sp, #76]	; 0x4c
   15df4:	ldr	r3, [r4]
   15df8:	mov	r0, r8
   15dfc:	cmp	r2, r3
   15e00:	bne	15e68 <g_io_channel_unref@plt+0x1c48>
   15e04:	add	sp, sp, #80	; 0x50
   15e08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15e0c:	bl	15970 <g_io_channel_unref@plt+0x1750>
   15e10:	b	15d48 <g_io_channel_unref@plt+0x1b28>
   15e14:	bl	140c4 <__errno_location@plt>
   15e18:	mvn	r8, #0
   15e1c:	ldr	sl, [r0]
   15e20:	mov	r6, r0
   15e24:	movw	r0, #50148	; 0xc3e4
   15e28:	movt	r0, #2
   15e2c:	bl	13bd8 <unlink@plt>
   15e30:	mov	r9, sl
   15e34:	str	sl, [r6]
   15e38:	b	15dd0 <g_io_channel_unref@plt+0x1bb0>
   15e3c:	mvn	r8, #0
   15e40:	b	15de8 <g_io_channel_unref@plt+0x1bc8>
   15e44:	bl	140c4 <__errno_location@plt>
   15e48:	mvn	r8, #0
   15e4c:	ldr	r9, [r0]
   15e50:	mov	r6, r0
   15e54:	movw	r0, #50148	; 0xc3e4
   15e58:	movt	r0, #2
   15e5c:	bl	13bd8 <unlink@plt>
   15e60:	str	r9, [r6]
   15e64:	b	15ddc <g_io_channel_unref@plt+0x1bbc>
   15e68:	bl	13d1c <__stack_chk_fail@plt>
   15e6c:	push	{r3, lr}
   15e70:	movw	r3, #50148	; 0xc3e4
   15e74:	movt	r3, #2
   15e78:	ldr	r3, [r3, #512]	; 0x200
   15e7c:	cmp	r3, #0
   15e80:	beq	15e98 <g_io_channel_unref@plt+0x1c78>
   15e84:	movw	r0, #50148	; 0xc3e4
   15e88:	movt	r0, #2
   15e8c:	bl	13bd8 <unlink@plt>
   15e90:	asr	r0, r0, #31
   15e94:	pop	{r3, pc}
   15e98:	bl	15970 <g_io_channel_unref@plt+0x1750>
   15e9c:	b	15e84 <g_io_channel_unref@plt+0x1c64>
   15ea0:	ldr	r3, [r2, #12]
   15ea4:	push	{r4, r5, r6, r7, lr}
   15ea8:	movw	r4, #50120	; 0xc3c8
   15eac:	movt	r4, #2
   15eb0:	mov	r5, r2
   15eb4:	ldr	r2, [r3, #4]
   15eb8:	sub	sp, sp, #28
   15ebc:	ldr	r1, [r4]
   15ec0:	mov	r7, r0
   15ec4:	cmp	r2, #0
   15ec8:	str	r1, [sp, #20]
   15ecc:	beq	15f54 <g_io_channel_unref@plt+0x1d34>
   15ed0:	ldr	r2, [r2, #8]
   15ed4:	add	ip, sp, #24
   15ed8:	mov	r6, #0
   15edc:	movw	r1, #42468	; 0xa5e4
   15ee0:	str	r6, [ip, #-8]!
   15ee4:	movw	r3, #42236	; 0xa4fc
   15ee8:	ldr	r2, [r2]
   15eec:	movt	r1, #1
   15ef0:	str	ip, [sp, #8]
   15ef4:	movt	r3, #1
   15ef8:	stm	sp, {r5, r6}
   15efc:	bl	13740 <g_dbus_connection_register_object@plt>
   15f00:	ldr	r2, [sp, #16]
   15f04:	cmp	r2, r6
   15f08:	beq	15f2c <g_io_channel_unref@plt+0x1d0c>
   15f0c:	mov	r0, r6
   15f10:	ldr	r3, [r2, #8]
   15f14:	mov	r1, #16
   15f18:	movw	r2, #42120	; 0xa488
   15f1c:	movt	r2, #1
   15f20:	bl	139a4 <g_log@plt>
   15f24:	ldr	r0, [sp, #16]
   15f28:	bl	1386c <g_error_free@plt>
   15f2c:	mov	r2, #0
   15f30:	movw	r1, #42492	; 0xa5fc
   15f34:	str	r2, [sp]
   15f38:	mov	r0, r5
   15f3c:	str	r2, [sp, #4]
   15f40:	mov	r3, r7
   15f44:	movw	r2, #25024	; 0x61c0
   15f48:	movt	r1, #1
   15f4c:	movt	r2, #1
   15f50:	bl	13c50 <g_signal_connect_data@plt>
   15f54:	ldr	r2, [sp, #20]
   15f58:	ldr	r3, [r4]
   15f5c:	cmp	r2, r3
   15f60:	bne	15f6c <g_io_channel_unref@plt+0x1d4c>
   15f64:	add	sp, sp, #28
   15f68:	pop	{r4, r5, r6, r7, pc}
   15f6c:	bl	13d1c <__stack_chk_fail@plt>
   15f70:	push	{r4, lr}
   15f74:	movw	r1, #42500	; 0xa604
   15f78:	ldr	r0, [sp, #8]
   15f7c:	movt	r1, #1
   15f80:	ldr	r4, [sp, #16]
   15f84:	bl	14214 <g_strcmp0@plt>
   15f88:	cmp	r0, #0
   15f8c:	bne	15fa0 <g_io_channel_unref@plt+0x1d80>
   15f90:	ldr	r3, [r4, #12]
   15f94:	pop	{r4, lr}
   15f98:	ldr	r0, [r3, #8]
   15f9c:	b	139f8 <g_variant_new_int32@plt>
   15fa0:	mov	r0, #0
   15fa4:	pop	{r4, pc}
   15fa8:	push	{r4, r5, lr}
   15fac:	sub	sp, sp, #12
   15fb0:	mov	r5, r0
   15fb4:	bl	14058 <g_type_class_peek_parent@plt>
   15fb8:	movw	r1, #50920	; 0xc6e8
   15fbc:	movt	r1, #2
   15fc0:	ldr	r3, [r1, #4]
   15fc4:	cmp	r3, #0
   15fc8:	str	r0, [r1]
   15fcc:	beq	15fdc <g_io_channel_unref@plt+0x1dbc>
   15fd0:	add	r1, r1, #4
   15fd4:	mov	r0, r5
   15fd8:	bl	13824 <g_type_class_adjust_private_offset@plt>
   15fdc:	mov	r1, #80	; 0x50
   15fe0:	mov	r0, r5
   15fe4:	bl	14154 <g_type_check_class_cast@plt>
   15fe8:	movw	r3, #25632	; 0x6420
   15fec:	movw	r2, #25460	; 0x6374
   15ff0:	movt	r3, #1
   15ff4:	movt	r2, #1
   15ff8:	str	r3, [r0, #16]
   15ffc:	movw	r3, #25344	; 0x6300
   16000:	str	r2, [r0, #12]
   16004:	movt	r3, #1
   16008:	str	r3, [r0, #20]
   1600c:	mov	r4, r0
   16010:	bl	14cb4 <g_io_channel_unref@plt+0xa94>
   16014:	mov	r1, #3
   16018:	mov	r2, #227	; 0xe3
   1601c:	stm	sp, {r1, r2}
   16020:	movw	r1, #42512	; 0xa610
   16024:	movw	r2, #42524	; 0xa61c
   16028:	movt	r1, #1
   1602c:	movt	r2, #1
   16030:	mov	r3, r0
   16034:	movw	r0, #42944	; 0xa7c0
   16038:	movt	r0, #1
   1603c:	bl	13944 <g_param_spec_enum@plt>
   16040:	mov	r1, #1
   16044:	mov	r2, r0
   16048:	mov	r0, r4
   1604c:	bl	13df4 <g_object_class_install_property@plt>
   16050:	mov	r0, r5
   16054:	mov	r1, #12
   16058:	add	sp, sp, #12
   1605c:	pop	{r4, r5, lr}
   16060:	b	13e24 <g_type_class_add_private@plt>
   16064:	push	{r4, r5, lr}
   16068:	movw	r4, #50920	; 0xc6e8
   1606c:	dmb	sy
   16070:	movt	r4, #2
   16074:	sub	sp, sp, #20
   16078:	ldr	r5, [r4, #8]
   1607c:	dmb	sy
   16080:	cmp	r5, #0
   16084:	beq	16094 <g_io_channel_unref@plt+0x1e74>
   16088:	ldr	r0, [r4, #8]
   1608c:	add	sp, sp, #20
   16090:	pop	{r4, r5, pc}
   16094:	add	r0, r4, #8
   16098:	bl	13c5c <g_once_init_enter@plt>
   1609c:	cmp	r0, #0
   160a0:	beq	16088 <g_io_channel_unref@plt+0x1e68>
   160a4:	movw	r0, #42556	; 0xa63c
   160a8:	movt	r0, #1
   160ac:	bl	13cd4 <g_intern_static_string@plt>
   160b0:	str	r5, [sp, #8]
   160b4:	mov	r2, #16
   160b8:	movw	r3, #24812	; 0x60ec
   160bc:	movt	r3, #1
   160c0:	stm	sp, {r2, r3}
   160c4:	mov	r2, #68	; 0x44
   160c8:	movw	r3, #24488	; 0x5fa8
   160cc:	movt	r3, #1
   160d0:	mov	r1, r0
   160d4:	mov	r0, #80	; 0x50
   160d8:	bl	137dc <g_type_register_static_simple@plt>
   160dc:	mov	r1, r0
   160e0:	add	r0, r4, #8
   160e4:	bl	13fec <g_once_init_leave@plt>
   160e8:	b	16088 <g_io_channel_unref@plt+0x1e68>
   160ec:	push	{r4, r5, r6, r7, r8, lr}
   160f0:	movw	r5, #50120	; 0xc3c8
   160f4:	movt	r5, #2
   160f8:	sub	sp, sp, #24
   160fc:	add	r7, sp, #24
   16100:	mov	r4, #0
   16104:	ldr	r3, [r5]
   16108:	mov	r8, r0
   1610c:	str	r4, [r7, #-8]!
   16110:	str	r3, [sp, #20]
   16114:	bl	16064 <g_io_channel_unref@plt+0x1e44>
   16118:	mov	r1, r0
   1611c:	mov	r0, r8
   16120:	bl	13c14 <g_type_instance_get_private@plt>
   16124:	mov	r3, #3
   16128:	mov	r2, r4
   1612c:	movw	r1, #42568	; 0xa648
   16130:	movt	r1, #1
   16134:	str	r0, [r8, #12]
   16138:	mov	r6, r0
   1613c:	str	r3, [r0, #8]
   16140:	movw	r3, #24224	; 0x5ea0
   16144:	str	r4, [sp]
   16148:	movt	r3, #1
   1614c:	str	r4, [sp, #4]
   16150:	mov	r0, #2
   16154:	str	r8, [sp, #8]
   16158:	str	r4, [sp, #12]
   1615c:	bl	14208 <g_bus_own_name@plt>
   16160:	mov	r1, r7
   16164:	str	r0, [r6]
   16168:	ldr	r0, [pc, #76]	; 161bc <g_io_channel_unref@plt+0x1f9c>
   1616c:	bl	1401c <g_dbus_node_info_new_for_xml@plt>
   16170:	ldr	r3, [sp, #16]
   16174:	cmp	r3, r4
   16178:	str	r0, [r6, #4]
   1617c:	beq	161a0 <g_io_channel_unref@plt+0x1f80>
   16180:	mov	r0, r4
   16184:	ldr	r3, [r3, #8]
   16188:	movw	r2, #41704	; 0xa2e8
   1618c:	mov	r1, #16
   16190:	movt	r2, #1
   16194:	bl	139a4 <g_log@plt>
   16198:	ldr	r0, [sp, #16]
   1619c:	bl	1386c <g_error_free@plt>
   161a0:	ldr	r2, [sp, #20]
   161a4:	ldr	r3, [r5]
   161a8:	cmp	r2, r3
   161ac:	bne	161b8 <g_io_channel_unref@plt+0x1f98>
   161b0:	add	sp, sp, #24
   161b4:	pop	{r4, r5, r6, r7, r8, pc}
   161b8:	bl	13d1c <__stack_chk_fail@plt>
   161bc:	andeq	sl, r1, r8, lsr #10
   161c0:	push	{r4, r5, r6, r7, lr}
   161c4:	movw	r4, #50120	; 0xc3c8
   161c8:	movt	r4, #2
   161cc:	sub	sp, sp, #156	; 0x9c
   161d0:	mov	r5, r2
   161d4:	mov	r7, r0
   161d8:	ldr	r3, [r4]
   161dc:	mov	r6, r1
   161e0:	str	r3, [sp, #148]	; 0x94
   161e4:	bl	16064 <g_io_channel_unref@plt+0x1e44>
   161e8:	mov	r1, r0
   161ec:	mov	r0, r7
   161f0:	bl	13938 <g_type_check_instance_cast@plt>
   161f4:	movw	r1, #42592	; 0xa660
   161f8:	movt	r1, #1
   161fc:	mov	r3, #0
   16200:	str	r3, [sp, #16]
   16204:	mov	r7, r0
   16208:	add	r0, sp, #20
   1620c:	bl	13c2c <g_variant_builder_init@plt>
   16210:	movw	r0, #42596	; 0xa664
   16214:	movt	r0, #1
   16218:	bl	13848 <g_variant_type_checked_@plt>
   1621c:	mov	r1, r0
   16220:	add	r0, sp, #84	; 0x54
   16224:	bl	13c2c <g_variant_builder_init@plt>
   16228:	ldr	r0, [r6, #4]
   1622c:	movw	r1, #42944	; 0xa7c0
   16230:	movt	r1, #1
   16234:	bl	14214 <g_strcmp0@plt>
   16238:	cmp	r0, #0
   1623c:	beq	162d0 <g_io_channel_unref@plt+0x20b0>
   16240:	add	r2, sp, #20
   16244:	add	r3, sp, #84	; 0x54
   16248:	movw	r0, #42608	; 0xa670
   1624c:	movw	r1, #42568	; 0xa648
   16250:	movt	r0, #1
   16254:	movt	r1, #1
   16258:	bl	13a88 <g_variant_new@plt>
   1625c:	add	r2, sp, #16
   16260:	movw	r3, #42652	; 0xa69c
   16264:	str	r2, [sp, #8]
   16268:	movt	r3, #1
   1626c:	movw	r2, #42468	; 0xa5e4
   16270:	str	r3, [sp]
   16274:	movt	r2, #1
   16278:	movw	r3, #42620	; 0xa67c
   1627c:	mov	r1, #0
   16280:	movt	r3, #1
   16284:	str	r0, [sp, #4]
   16288:	mov	r0, r5
   1628c:	bl	13d04 <g_dbus_connection_emit_signal@plt>
   16290:	cmp	r0, #0
   16294:	bne	162b8 <g_io_channel_unref@plt+0x2098>
   16298:	ldr	r3, [sp, #16]
   1629c:	movw	r2, #41704	; 0xa2e8
   162a0:	mov	r1, #16
   162a4:	movt	r2, #1
   162a8:	ldr	r3, [r3, #8]
   162ac:	bl	139a4 <g_log@plt>
   162b0:	ldr	r0, [sp, #16]
   162b4:	bl	1386c <g_error_free@plt>
   162b8:	ldr	r2, [sp, #148]	; 0x94
   162bc:	ldr	r3, [r4]
   162c0:	cmp	r2, r3
   162c4:	bne	162fc <g_io_channel_unref@plt+0x20dc>
   162c8:	add	sp, sp, #156	; 0x9c
   162cc:	pop	{r4, r5, r6, r7, pc}
   162d0:	ldr	r3, [r7, #12]
   162d4:	ldr	r0, [r3, #8]
   162d8:	bl	139f8 <g_variant_new_int32@plt>
   162dc:	movw	r1, #42600	; 0xa668
   162e0:	movw	r2, #42500	; 0xa604
   162e4:	movt	r1, #1
   162e8:	movt	r2, #1
   162ec:	mov	r3, r0
   162f0:	add	r0, sp, #20
   162f4:	bl	14118 <g_variant_builder_add@plt>
   162f8:	b	16240 <g_io_channel_unref@plt+0x2020>
   162fc:	bl	13d1c <__stack_chk_fail@plt>
   16300:	push	{r3, r4, r5, lr}
   16304:	mov	r5, r0
   16308:	bl	16064 <g_io_channel_unref@plt+0x1e44>
   1630c:	mov	r1, r0
   16310:	mov	r0, r5
   16314:	bl	13938 <g_type_check_instance_cast@plt>
   16318:	ldr	r4, [r0, #12]
   1631c:	ldr	r0, [r4]
   16320:	cmp	r0, #0
   16324:	bne	16364 <g_io_channel_unref@plt+0x2144>
   16328:	ldr	r0, [r4, #4]
   1632c:	cmp	r0, #0
   16330:	beq	16340 <g_io_channel_unref@plt+0x2120>
   16334:	bl	13a58 <g_dbus_node_info_unref@plt>
   16338:	mov	r3, #0
   1633c:	str	r3, [r4, #4]
   16340:	movw	r3, #50920	; 0xc6e8
   16344:	movt	r3, #2
   16348:	mov	r1, #80	; 0x50
   1634c:	ldr	r0, [r3]
   16350:	bl	14154 <g_type_check_class_cast@plt>
   16354:	ldr	r3, [r0, #20]
   16358:	mov	r0, r5
   1635c:	blx	r3
   16360:	pop	{r3, r4, r5, pc}
   16364:	bl	13ff8 <g_bus_unown_name@plt>
   16368:	mov	r3, #0
   1636c:	str	r3, [r4]
   16370:	b	16328 <g_io_channel_unref@plt+0x2108>
   16374:	push	{r4, r5, r6, r7, lr}
   16378:	sub	sp, sp, #28
   1637c:	mov	r4, r1
   16380:	mov	r6, r3
   16384:	mov	r5, r0
   16388:	mov	r7, r2
   1638c:	bl	16064 <g_io_channel_unref@plt+0x1e44>
   16390:	mov	r1, r0
   16394:	mov	r0, r5
   16398:	bl	13938 <g_type_check_instance_cast@plt>
   1639c:	cmp	r4, #1
   163a0:	mov	r3, r0
   163a4:	beq	16408 <g_io_channel_unref@plt+0x21e8>
   163a8:	ldm	r6, {r3, r7}
   163ac:	ldr	r0, [r3]
   163b0:	bl	139b0 <g_type_name@plt>
   163b4:	ldr	r3, [r5]
   163b8:	mov	r6, r0
   163bc:	ldr	r0, [r3]
   163c0:	bl	139b0 <g_type_name@plt>
   163c4:	str	r7, [sp, #12]
   163c8:	str	r6, [sp, #16]
   163cc:	mov	r2, #90	; 0x5a
   163d0:	str	r4, [sp, #8]
   163d4:	mov	r1, #16
   163d8:	movw	r3, #42744	; 0xa6f8
   163dc:	movt	r3, #1
   163e0:	stm	sp, {r2, r3}
   163e4:	movw	r2, #42672	; 0xa6b0
   163e8:	movw	r3, #42728	; 0xa6e8
   163ec:	movt	r2, #1
   163f0:	movt	r3, #1
   163f4:	str	r0, [sp, #20]
   163f8:	mov	r0, #0
   163fc:	bl	139a4 <g_log@plt>
   16400:	add	sp, sp, #28
   16404:	pop	{r4, r5, r6, r7, pc}
   16408:	mov	r0, r7
   1640c:	ldr	r4, [r3, #12]
   16410:	bl	137c4 <g_value_get_enum@plt>
   16414:	str	r0, [r4, #8]
   16418:	add	sp, sp, #28
   1641c:	pop	{r4, r5, r6, r7, pc}
   16420:	push	{r4, r5, r6, r7, lr}
   16424:	sub	sp, sp, #28
   16428:	mov	r4, r1
   1642c:	mov	r5, r0
   16430:	mov	r7, r2
   16434:	mov	r6, r3
   16438:	bl	16064 <g_io_channel_unref@plt+0x1e44>
   1643c:	mov	r1, r0
   16440:	mov	r0, r5
   16444:	bl	13938 <g_type_check_instance_cast@plt>
   16448:	cmp	r4, #1
   1644c:	beq	164b0 <g_io_channel_unref@plt+0x2290>
   16450:	ldm	r6, {r3, r7}
   16454:	ldr	r0, [r3]
   16458:	bl	139b0 <g_type_name@plt>
   1645c:	ldr	r3, [r5]
   16460:	mov	r6, r0
   16464:	ldr	r0, [r3]
   16468:	bl	139b0 <g_type_name@plt>
   1646c:	str	r7, [sp, #12]
   16470:	str	r6, [sp, #16]
   16474:	mov	r2, #108	; 0x6c
   16478:	str	r4, [sp, #8]
   1647c:	mov	r1, #16
   16480:	movw	r3, #42744	; 0xa6f8
   16484:	movt	r3, #1
   16488:	stm	sp, {r2, r3}
   1648c:	movw	r2, #42672	; 0xa6b0
   16490:	movw	r3, #42728	; 0xa6e8
   16494:	movt	r2, #1
   16498:	movt	r3, #1
   1649c:	str	r0, [sp, #20]
   164a0:	mov	r0, #0
   164a4:	bl	139a4 <g_log@plt>
   164a8:	add	sp, sp, #28
   164ac:	pop	{r4, r5, r6, r7, pc}
   164b0:	ldr	r3, [r0, #12]
   164b4:	mov	r0, r7
   164b8:	ldr	r1, [r3, #8]
   164bc:	add	sp, sp, #28
   164c0:	pop	{r4, r5, r6, r7, lr}
   164c4:	b	13d94 <g_value_set_enum@plt>
   164c8:	push	{r3, r4, r5, lr}
   164cc:	movw	r4, #50920	; 0xc6e8
   164d0:	movt	r4, #2
   164d4:	ldr	r5, [r4, #12]
   164d8:	cmp	r5, #0
   164dc:	beq	164e8 <g_io_channel_unref@plt+0x22c8>
   164e0:	mov	r0, r5
   164e4:	pop	{r3, r4, r5, pc}
   164e8:	bl	16064 <g_io_channel_unref@plt+0x1e44>
   164ec:	mov	r1, r5
   164f0:	bl	13728 <g_object_new@plt>
   164f4:	mov	r1, #80	; 0x50
   164f8:	str	r0, [r4, #12]
   164fc:	bl	13938 <g_type_check_instance_cast@plt>
   16500:	add	r1, r4, #12
   16504:	bl	13734 <g_object_add_weak_pointer@plt>
   16508:	ldr	r0, [r4, #12]
   1650c:	pop	{r3, r4, r5, pc}
   16510:	push	{r3, r4, r5, lr}
   16514:	mov	r4, r0
   16518:	mov	r5, r1
   1651c:	bl	16064 <g_io_channel_unref@plt+0x1e44>
   16520:	cmp	r4, #0
   16524:	beq	16554 <g_io_channel_unref@plt+0x2334>
   16528:	ldr	r3, [r4]
   1652c:	cmp	r3, #0
   16530:	beq	16540 <g_io_channel_unref@plt+0x2320>
   16534:	ldr	r3, [r3]
   16538:	cmp	r0, r3
   1653c:	beq	1656c <g_io_channel_unref@plt+0x234c>
   16540:	mov	r1, r0
   16544:	mov	r0, r4
   16548:	bl	13e78 <g_type_check_instance_is_a@plt>
   1654c:	cmp	r0, #0
   16550:	bne	1656c <g_io_channel_unref@plt+0x234c>
   16554:	movw	r2, #42756	; 0xa704
   16558:	mov	r0, #0
   1655c:	movt	r2, #1
   16560:	ldr	r1, [pc, #56]	; 165a0 <g_io_channel_unref@plt+0x2380>
   16564:	pop	{r3, r4, r5, lr}
   16568:	b	137b8 <g_return_if_fail_warning@plt>
   1656c:	ldr	r3, [r4, #12]
   16570:	ldr	r2, [r3, #8]
   16574:	cmp	r2, r5
   16578:	beq	1659c <g_io_channel_unref@plt+0x237c>
   1657c:	str	r5, [r3, #8]
   16580:	mov	r0, r4
   16584:	mov	r1, #80	; 0x50
   16588:	bl	13938 <g_type_check_instance_cast@plt>
   1658c:	movw	r1, #42944	; 0xa7c0
   16590:	pop	{r3, r4, r5, lr}
   16594:	movt	r1, #1
   16598:	b	13e60 <g_object_notify@plt>
   1659c:	pop	{r3, r4, r5, pc}
   165a0:	andeq	sl, r1, ip, lsr #11
   165a4:	push	{r3, lr}
   165a8:	movw	r1, #42500	; 0xa604
   165ac:	ldr	r0, [sp, #8]
   165b0:	movt	r1, #1
   165b4:	bl	14214 <g_strcmp0@plt>
   165b8:	cmp	r0, #0
   165bc:	bne	165d4 <g_io_channel_unref@plt+0x23b4>
   165c0:	ldr	r0, [sp, #12]
   165c4:	bl	13b84 <g_variant_get_int32@plt>
   165c8:	mov	r1, r0
   165cc:	ldr	r0, [sp, #20]
   165d0:	bl	16510 <g_io_channel_unref@plt+0x22f0>
   165d4:	mov	r0, #1
   165d8:	pop	{r3, pc}
   165dc:	push	{r4, lr}
   165e0:	mov	r4, r0
   165e4:	bl	16064 <g_io_channel_unref@plt+0x1e44>
   165e8:	cmp	r4, #0
   165ec:	beq	1661c <g_io_channel_unref@plt+0x23fc>
   165f0:	ldr	r3, [r4]
   165f4:	cmp	r3, #0
   165f8:	beq	16608 <g_io_channel_unref@plt+0x23e8>
   165fc:	ldr	r3, [r3]
   16600:	cmp	r0, r3
   16604:	beq	16638 <g_io_channel_unref@plt+0x2418>
   16608:	mov	r1, r0
   1660c:	mov	r0, r4
   16610:	bl	13e78 <g_type_check_instance_is_a@plt>
   16614:	cmp	r0, #0
   16618:	bne	16638 <g_io_channel_unref@plt+0x2418>
   1661c:	mov	r0, #0
   16620:	ldr	r1, [pc, #28]	; 16644 <g_io_channel_unref@plt+0x2424>
   16624:	movw	r2, #42756	; 0xa704
   16628:	movt	r2, #1
   1662c:	bl	137b8 <g_return_if_fail_warning@plt>
   16630:	mvn	r0, #0
   16634:	pop	{r4, pc}
   16638:	ldr	r3, [r4, #12]
   1663c:	ldr	r0, [r3, #8]
   16640:	pop	{r4, pc}
   16644:	andeq	sl, r1, r8, asr #11
   16648:	push	{r3, r4, r5, lr}
   1664c:	bl	165dc <g_io_channel_unref@plt+0x23bc>
   16650:	cmp	r0, #4
   16654:	mov	r4, r0
   16658:	popeq	{r3, r4, r5, pc}
   1665c:	movw	r3, #50936	; 0xc6f8
   16660:	movt	r3, #2
   16664:	movw	r1, #40756	; 0x9f34
   16668:	movt	r1, #1
   1666c:	ldr	r0, [r3]
   16670:	bl	13b18 <gtk_builder_get_object@plt>
   16674:	mov	r5, r0
   16678:	bl	13968 <gtk_radio_button_get_type@plt>
   1667c:	mov	r1, r0
   16680:	mov	r0, r5
   16684:	bl	13938 <g_type_check_instance_cast@plt>
   16688:	bl	141e4 <gtk_radio_button_get_group@plt>
   1668c:	mov	r1, r4
   16690:	bl	140d0 <g_slist_nth_data@plt>
   16694:	mov	r4, r0
   16698:	bl	139d4 <gtk_toggle_button_get_type@plt>
   1669c:	mov	r1, r0
   166a0:	mov	r0, r4
   166a4:	bl	13938 <g_type_check_instance_cast@plt>
   166a8:	mov	r1, #1
   166ac:	bl	13e6c <gtk_toggle_button_set_active@plt>
   166b0:	mov	r0, r4
   166b4:	pop	{r3, r4, r5, lr}
   166b8:	b	13a40 <gtk_widget_grab_focus@plt>
   166bc:	movw	r3, #42780	; 0xa71c
   166c0:	movt	r3, #1
   166c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166c8:	add	ip, r3, #16
   166cc:	mov	fp, r0
   166d0:	sub	sp, sp, #60	; 0x3c
   166d4:	ldm	r3, {r0, r1, r2, r3}
   166d8:	add	r8, sp, #20
   166dc:	movw	r5, #50120	; 0xc3c8
   166e0:	movt	r5, #2
   166e4:	add	r7, sp, #36	; 0x24
   166e8:	str	r5, [sp, #12]
   166ec:	ldr	lr, [r5]
   166f0:	mov	r4, #0
   166f4:	stm	r8, {r0, r1, r2, r3}
   166f8:	movw	r5, #50936	; 0xc6f8
   166fc:	ldm	ip, {r0, r1, r2, r3}
   16700:	movt	r5, #2
   16704:	mov	r9, r4
   16708:	str	lr, [sp, #52]	; 0x34
   1670c:	stm	r7, {r0, r1, r2, r3}
   16710:	ldr	r1, [r8, r4]
   16714:	ldr	r0, [r5]
   16718:	bl	13b18 <gtk_builder_get_object@plt>
   1671c:	mov	r6, r0
   16720:	bl	13908 <gtk_widget_get_type@plt>
   16724:	mov	sl, r0
   16728:	mov	r0, r6
   1672c:	mov	r1, sl
   16730:	bl	13938 <g_type_check_instance_cast@plt>
   16734:	ldr	r1, [r7, r4]
   16738:	mov	r6, r0
   1673c:	ldr	r0, [r5]
   16740:	bl	13b18 <gtk_builder_get_object@plt>
   16744:	mov	r1, sl
   16748:	bl	13938 <g_type_check_instance_cast@plt>
   1674c:	ldr	r3, [fp, #44]	; 0x2c
   16750:	cmp	r3, #1
   16754:	mov	sl, r0
   16758:	beq	16828 <g_io_channel_unref@plt+0x2608>
   1675c:	bcc	167d8 <g_io_channel_unref@plt+0x25b8>
   16760:	cmp	r3, #2
   16764:	bne	167b0 <g_io_channel_unref@plt+0x2590>
   16768:	mov	r2, #0
   1676c:	str	r9, [sp]
   16770:	movw	r1, #42828	; 0xa74c
   16774:	mov	r3, #0
   16778:	movt	r1, #1
   1677c:	movt	r3, #16368	; 0x3ff0
   16780:	bl	13db8 <g_object_set@plt>
   16784:	mov	r0, sl
   16788:	bl	13fb0 <gtk_widget_show@plt>
   1678c:	mov	r0, r6
   16790:	str	r9, [sp]
   16794:	movw	r1, #42828	; 0xa74c
   16798:	mov	r2, #0
   1679c:	movt	r1, #1
   167a0:	mov	r3, #0
   167a4:	bl	13db8 <g_object_set@plt>
   167a8:	mov	r0, r6
   167ac:	bl	13fb0 <gtk_widget_show@plt>
   167b0:	add	r4, r4, #4
   167b4:	cmp	r4, #16
   167b8:	bne	16710 <g_io_channel_unref@plt+0x24f0>
   167bc:	ldr	r5, [sp, #12]
   167c0:	ldr	r2, [sp, #52]	; 0x34
   167c4:	ldr	r3, [r5]
   167c8:	cmp	r2, r3
   167cc:	bne	16858 <g_io_channel_unref@plt+0x2638>
   167d0:	add	sp, sp, #60	; 0x3c
   167d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167d8:	bl	1398c <gtk_widget_hide@plt>
   167dc:	mov	r0, sl
   167e0:	str	r9, [sp]
   167e4:	movw	r1, #42828	; 0xa74c
   167e8:	mov	r2, #0
   167ec:	mov	r3, #0
   167f0:	movt	r1, #1
   167f4:	movt	r3, #16352	; 0x3fe0
   167f8:	bl	13db8 <g_object_set@plt>
   167fc:	mov	r0, r6
   16800:	bl	13fb0 <gtk_widget_show@plt>
   16804:	str	r9, [sp]
   16808:	mov	r0, r6
   1680c:	movw	r1, #42828	; 0xa74c
   16810:	mov	r2, #0
   16814:	mov	r3, #0
   16818:	movt	r1, #1
   1681c:	movt	r3, #16352	; 0x3fe0
   16820:	bl	13db8 <g_object_set@plt>
   16824:	b	167b0 <g_io_channel_unref@plt+0x2590>
   16828:	bl	13fb0 <gtk_widget_show@plt>
   1682c:	mov	r0, sl
   16830:	str	r9, [sp]
   16834:	mov	r2, #0
   16838:	movw	r1, #42828	; 0xa74c
   1683c:	mov	r3, #0
   16840:	movt	r1, #1
   16844:	movt	r3, #16352	; 0x3fe0
   16848:	bl	13db8 <g_object_set@plt>
   1684c:	mov	r0, r6
   16850:	bl	1398c <gtk_widget_hide@plt>
   16854:	b	16804 <g_io_channel_unref@plt+0x25e4>
   16858:	bl	13d1c <__stack_chk_fail@plt>
   1685c:	push	{r3, r4, r5, lr}
   16860:	mov	r5, r0
   16864:	bl	13a4c <pango_attr_list_new@plt>
   16868:	mov	r4, r0
   1686c:	mov	r0, #700	; 0x2bc
   16870:	bl	13cbc <pango_attr_weight_new@plt>
   16874:	mov	r1, r0
   16878:	mov	r0, r4
   1687c:	bl	13c20 <pango_attr_list_insert@plt>
   16880:	bl	13d64 <gtk_bin_get_type@plt>
   16884:	mov	r1, r0
   16888:	mov	r0, r5
   1688c:	bl	13938 <g_type_check_instance_cast@plt>
   16890:	bl	13e48 <gtk_bin_get_child@plt>
   16894:	mov	r5, r0
   16898:	bl	138b4 <gtk_label_get_type@plt>
   1689c:	mov	r1, r0
   168a0:	mov	r0, r5
   168a4:	bl	13938 <g_type_check_instance_cast@plt>
   168a8:	mov	r1, r4
   168ac:	bl	1407c <gtk_label_set_attributes@plt>
   168b0:	mov	r0, r4
   168b4:	pop	{r3, r4, r5, lr}
   168b8:	b	13ab8 <pango_attr_list_unref@plt>
   168bc:	push	{r4, lr}
   168c0:	bl	13ddc <gtk_check_menu_item_get_active@plt>
   168c4:	cmp	r0, #0
   168c8:	popeq	{r4, pc}
   168cc:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   168d0:	movw	r1, #43028	; 0xa814
   168d4:	mov	r2, #1
   168d8:	movt	r1, #1
   168dc:	mov	r3, #0
   168e0:	pop	{r4, lr}
   168e4:	b	13db8 <g_object_set@plt>
   168e8:	push	{r4, lr}
   168ec:	bl	13ddc <gtk_check_menu_item_get_active@plt>
   168f0:	cmp	r0, #0
   168f4:	popeq	{r4, pc}
   168f8:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   168fc:	mov	r2, #0
   16900:	movw	r1, #43028	; 0xa814
   16904:	mov	r3, r2
   16908:	movt	r1, #1
   1690c:	pop	{r4, lr}
   16910:	b	13db8 <g_object_set@plt>
   16914:	push	{r4, lr}
   16918:	bl	13ddc <gtk_check_menu_item_get_active@plt>
   1691c:	cmp	r0, #0
   16920:	popeq	{r4, pc}
   16924:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   16928:	movw	r1, #43000	; 0xa7f8
   1692c:	mov	r2, #1
   16930:	movt	r1, #1
   16934:	mov	r3, #0
   16938:	pop	{r4, lr}
   1693c:	b	13db8 <g_object_set@plt>
   16940:	push	{r4, lr}
   16944:	bl	13ddc <gtk_check_menu_item_get_active@plt>
   16948:	cmp	r0, #0
   1694c:	popeq	{r4, pc}
   16950:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   16954:	mov	r2, #0
   16958:	movw	r1, #43000	; 0xa7f8
   1695c:	mov	r3, r2
   16960:	movt	r1, #1
   16964:	pop	{r4, lr}
   16968:	b	13db8 <g_object_set@plt>
   1696c:	push	{r4, lr}
   16970:	bl	13ddc <gtk_check_menu_item_get_active@plt>
   16974:	cmp	r0, #0
   16978:	popeq	{r4, pc}
   1697c:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   16980:	movw	r1, #43000	; 0xa7f8
   16984:	mov	r2, #2
   16988:	movt	r1, #1
   1698c:	mov	r3, #0
   16990:	pop	{r4, lr}
   16994:	b	13db8 <g_object_set@plt>
   16998:	ldr	r3, [r1, #40]	; 0x28
   1699c:	push	{r4, r5, lr}
   169a0:	cmp	r3, #3
   169a4:	sub	sp, sp, #20
   169a8:	mov	r4, r1
   169ac:	movne	r0, #0
   169b0:	beq	169bc <g_io_channel_unref@plt+0x279c>
   169b4:	add	sp, sp, #20
   169b8:	pop	{r4, r5, pc}
   169bc:	movw	r3, #50936	; 0xc6f8
   169c0:	movt	r3, #2
   169c4:	movw	r1, #42836	; 0xa754
   169c8:	movt	r1, #1
   169cc:	ldr	r0, [r3]
   169d0:	bl	13b18 <gtk_builder_get_object@plt>
   169d4:	mov	r5, r0
   169d8:	bl	13f20 <gtk_menu_get_type@plt>
   169dc:	mov	r1, r0
   169e0:	mov	r0, r5
   169e4:	bl	13938 <g_type_check_instance_cast@plt>
   169e8:	mov	r1, #0
   169ec:	str	r1, [sp]
   169f0:	mov	r2, r1
   169f4:	ldr	ip, [r4, #40]	; 0x28
   169f8:	mov	r3, r1
   169fc:	str	ip, [sp, #4]
   16a00:	ldr	ip, [r4, #12]
   16a04:	str	ip, [sp, #8]
   16a08:	bl	13ca4 <gtk_menu_popup@plt>
   16a0c:	mov	r0, #1
   16a10:	add	sp, sp, #20
   16a14:	pop	{r4, r5, pc}
   16a18:	push	{r4, r5, r6, lr}
   16a1c:	mov	r4, r0
   16a20:	bl	141fc <gtk_toggle_button_get_active@plt>
   16a24:	cmp	r0, #0
   16a28:	popeq	{r4, r5, r6, pc}
   16a2c:	bl	13968 <gtk_radio_button_get_type@plt>
   16a30:	mov	r1, r0
   16a34:	mov	r0, r4
   16a38:	bl	13938 <g_type_check_instance_cast@plt>
   16a3c:	bl	141e4 <gtk_radio_button_get_group@plt>
   16a40:	mov	r6, r0
   16a44:	bl	164c8 <g_io_channel_unref@plt+0x22a8>
   16a48:	mov	r1, r4
   16a4c:	mov	r5, r0
   16a50:	mov	r0, r6
   16a54:	bl	13ea8 <g_slist_index@plt>
   16a58:	mov	r1, r0
   16a5c:	mov	r0, r5
   16a60:	pop	{r4, r5, r6, lr}
   16a64:	b	16510 <g_io_channel_unref@plt+0x22f0>
   16a68:	push	{r3, r4, r5, lr}
   16a6c:	movw	r3, #50936	; 0xc6f8
   16a70:	ldr	r4, [r0, #48]	; 0x30
   16a74:	movt	r3, #2
   16a78:	movw	r1, #42844	; 0xa75c
   16a7c:	movt	r1, #1
   16a80:	cmp	r4, #0
   16a84:	ldr	r0, [r3]
   16a88:	beq	16ab0 <g_io_channel_unref@plt+0x2890>
   16a8c:	bl	13b18 <gtk_builder_get_object@plt>
   16a90:	mov	r4, r0
   16a94:	bl	14040 <gtk_orientable_get_type@plt>
   16a98:	mov	r1, r0
   16a9c:	mov	r0, r4
   16aa0:	bl	13938 <g_type_check_instance_cast@plt>
   16aa4:	mov	r1, #1
   16aa8:	pop	{r3, r4, r5, lr}
   16aac:	b	13770 <gtk_orientable_set_orientation@plt>
   16ab0:	bl	13b18 <gtk_builder_get_object@plt>
   16ab4:	mov	r5, r0
   16ab8:	bl	14040 <gtk_orientable_get_type@plt>
   16abc:	mov	r1, r0
   16ac0:	mov	r0, r5
   16ac4:	bl	13938 <g_type_check_instance_cast@plt>
   16ac8:	mov	r1, r4
   16acc:	pop	{r3, r4, r5, lr}
   16ad0:	b	13770 <gtk_orientable_set_orientation@plt>
   16ad4:	movw	r3, #50936	; 0xc6f8
   16ad8:	movt	r3, #2
   16adc:	push	{r4, lr}
   16ae0:	movw	r1, #42848	; 0xa760
   16ae4:	ldr	r0, [r3]
   16ae8:	movt	r1, #1
   16aec:	bl	13b18 <gtk_builder_get_object@plt>
   16af0:	mov	r4, r0
   16af4:	bl	13908 <gtk_widget_get_type@plt>
   16af8:	mov	r1, r0
   16afc:	mov	r0, r4
   16b00:	pop	{r4, lr}
   16b04:	b	13938 <g_type_check_instance_cast@plt>
   16b08:	push	{r4, lr}
   16b0c:	mov	r4, r0
   16b10:	bl	16ad4 <g_io_channel_unref@plt+0x28b4>
   16b14:	ldrb	r1, [r4, #56]	; 0x38
   16b18:	pop	{r4, lr}
   16b1c:	and	r1, r1, #3
   16b20:	subs	r3, r1, #3
   16b24:	rsbs	r1, r3, #0
   16b28:	adcs	r1, r1, r3
   16b2c:	b	1416c <gtk_widget_set_visible@plt>
   16b30:	push	{r4, lr}
   16b34:	mov	r4, r0
   16b38:	bl	16ad4 <g_io_channel_unref@plt+0x28b4>
   16b3c:	ldr	r1, [r4, #24]
   16b40:	pop	{r4, lr}
   16b44:	rsbs	r1, r1, #1
   16b48:	movcc	r1, #0
   16b4c:	b	141c0 <gtk_widget_set_sensitive@plt>
   16b50:	ldr	r3, [pc, #1224]	; 17020 <g_io_channel_unref@plt+0x2e00>
   16b54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b58:	movw	r5, #50120	; 0xc3c8
   16b5c:	ldm	r3, {r0, r1, r2, r3}
   16b60:	movt	r5, #2
   16b64:	sub	sp, sp, #100	; 0x64
   16b68:	mov	r6, #0
   16b6c:	ldr	lr, [r5]
   16b70:	add	ip, sp, #76	; 0x4c
   16b74:	str	r6, [sp, #72]	; 0x48
   16b78:	movw	r4, #50936	; 0xc6f8
   16b7c:	stm	ip, {r0, r1, r2, r3}
   16b80:	movt	r4, #2
   16b84:	str	lr, [sp, #92]	; 0x5c
   16b88:	bl	13f50 <gtk_builder_new@plt>
   16b8c:	add	r2, sp, #72	; 0x48
   16b90:	movw	r1, #42852	; 0xa764
   16b94:	movt	r1, #1
   16b98:	str	r0, [r4]
   16b9c:	bl	14184 <gtk_builder_add_from_file@plt>
   16ba0:	ldr	r9, [sp, #72]	; 0x48
   16ba4:	cmp	r9, r6
   16ba8:	beq	16be8 <g_io_channel_unref@plt+0x29c8>
   16bac:	ldr	r1, [r9, #8]
   16bb0:	movw	r0, #41704	; 0xa2e8
   16bb4:	movt	r0, #1
   16bb8:	bl	13e84 <g_print@plt>
   16bbc:	ldr	r0, [sp, #72]	; 0x48
   16bc0:	bl	1386c <g_error_free@plt>
   16bc4:	ldr	r0, [r4]
   16bc8:	bl	13fbc <g_object_unref@plt>
   16bcc:	mov	r0, r6
   16bd0:	ldr	r2, [sp, #92]	; 0x5c
   16bd4:	ldr	r3, [r5]
   16bd8:	cmp	r2, r3
   16bdc:	bne	1701c <g_io_channel_unref@plt+0x2dfc>
   16be0:	add	sp, sp, #100	; 0x64
   16be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16be8:	bl	16ad4 <g_io_channel_unref@plt+0x28b4>
   16bec:	add	sl, sp, #72	; 0x48
   16bf0:	movw	fp, #42908	; 0xa79c
   16bf4:	movt	fp, #1
   16bf8:	str	r0, [sp, #60]	; 0x3c
   16bfc:	bl	141b4 <gtk_window_get_type@plt>
   16c00:	str	r0, [sp, #64]	; 0x40
   16c04:	ldr	r1, [sp, #64]	; 0x40
   16c08:	ldr	r0, [sp, #60]	; 0x3c
   16c0c:	bl	13938 <g_type_check_instance_cast@plt>
   16c10:	bl	13f80 <gtk_window_stick@plt>
   16c14:	ldr	r1, [sp, #64]	; 0x40
   16c18:	ldr	r0, [sp, #60]	; 0x3c
   16c1c:	bl	13938 <g_type_check_instance_cast@plt>
   16c20:	mov	r1, #1
   16c24:	bl	139c8 <gtk_window_set_keep_above@plt>
   16c28:	movw	ip, #27032	; 0x6998
   16c2c:	movt	ip, #1
   16c30:	str	r5, [sp, #68]	; 0x44
   16c34:	mov	r5, sl
   16c38:	add	r3, sp, #88	; 0x58
   16c3c:	mov	sl, ip
   16c40:	str	r3, [sp, #56]	; 0x38
   16c44:	ldr	r1, [r5, #4]!
   16c48:	mov	r6, #0
   16c4c:	ldr	r0, [r4]
   16c50:	movw	r7, #50936	; 0xc6f8
   16c54:	bl	13b18 <gtk_builder_get_object@plt>
   16c58:	movt	r7, #2
   16c5c:	mov	r8, r0
   16c60:	bl	139d4 <gtk_toggle_button_get_type@plt>
   16c64:	mov	r1, r0
   16c68:	mov	r0, r8
   16c6c:	bl	13938 <g_type_check_instance_cast@plt>
   16c70:	mov	r1, r6
   16c74:	bl	1389c <gtk_toggle_button_set_mode@plt>
   16c78:	mov	r3, r6
   16c7c:	mov	r0, r8
   16c80:	str	fp, [sp]
   16c84:	str	sl, [sp, #4]
   16c88:	movw	r1, #42892	; 0xa78c
   16c8c:	str	r9, [sp, #8]
   16c90:	movt	r1, #1
   16c94:	str	r9, [sp, #12]
   16c98:	movw	r2, #27160	; 0x6a18
   16c9c:	movt	r2, #1
   16ca0:	bl	13890 <g_object_connect@plt>
   16ca4:	ldr	r3, [sp, #56]	; 0x38
   16ca8:	cmp	r5, r3
   16cac:	bne	16c44 <g_io_channel_unref@plt+0x2a24>
   16cb0:	ldr	r5, [sp, #68]	; 0x44
   16cb4:	bl	164c8 <g_io_channel_unref@plt+0x22a8>
   16cb8:	mov	r3, r6
   16cbc:	str	r6, [sp]
   16cc0:	str	r6, [sp, #4]
   16cc4:	movw	r1, #42936	; 0xa7b8
   16cc8:	movw	r2, #26184	; 0x6648
   16ccc:	movt	r1, #1
   16cd0:	movt	r2, #1
   16cd4:	mov	r8, r0
   16cd8:	bl	13c50 <g_signal_connect_data@plt>
   16cdc:	mov	r1, r6
   16ce0:	mov	r0, r8
   16ce4:	bl	16648 <g_io_channel_unref@plt+0x2428>
   16ce8:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   16cec:	movw	r1, #27400	; 0x6b08
   16cf0:	movt	r1, #1
   16cf4:	str	r6, [sp, #8]
   16cf8:	mov	r3, r6
   16cfc:	str	r6, [sp, #20]
   16d00:	mov	r2, r1
   16d04:	str	r6, [sp, #32]
   16d08:	str	r6, [sp, #44]	; 0x2c
   16d0c:	movw	ip, #42984	; 0xa7e8
   16d10:	str	r6, [sp, #48]	; 0x30
   16d14:	movt	ip, #1
   16d18:	str	r1, [sp, #28]
   16d1c:	movw	lr, #26300	; 0x66bc
   16d20:	str	ip, [sp]
   16d24:	movt	lr, #1
   16d28:	movw	ip, #43012	; 0xa804
   16d2c:	str	lr, [sp, #4]
   16d30:	movt	ip, #1
   16d34:	movw	r1, #27240	; 0x6a68
   16d38:	str	ip, [sp, #12]
   16d3c:	movt	r1, #1
   16d40:	movw	ip, #43044	; 0xa824
   16d44:	str	r1, [sp, #16]
   16d48:	movt	ip, #1
   16d4c:	movw	r1, #43076	; 0xa844
   16d50:	str	ip, [sp, #24]
   16d54:	movt	r1, #1
   16d58:	movw	ip, #27440	; 0x6b30
   16d5c:	str	r1, [sp, #36]	; 0x24
   16d60:	movt	ip, #1
   16d64:	movw	r1, #42956	; 0xa7cc
   16d68:	str	ip, [sp, #40]	; 0x28
   16d6c:	movt	r1, #1
   16d70:	mov	r8, r0
   16d74:	bl	13890 <g_object_connect@plt>
   16d78:	ldr	r6, [r8, #44]	; 0x2c
   16d7c:	cmp	r6, #1
   16d80:	beq	16fac <g_io_channel_unref@plt+0x2d8c>
   16d84:	bcc	1700c <g_io_channel_unref@plt+0x2dec>
   16d88:	cmp	r6, #2
   16d8c:	bne	16dbc <g_io_channel_unref@plt+0x2b9c>
   16d90:	ldr	r0, [r7]
   16d94:	movw	r1, #43104	; 0xa860
   16d98:	movt	r1, #1
   16d9c:	bl	13b18 <gtk_builder_get_object@plt>
   16da0:	mov	r6, r0
   16da4:	bl	13980 <gtk_check_menu_item_get_type@plt>
   16da8:	mov	r1, r0
   16dac:	mov	r0, r6
   16db0:	bl	13938 <g_type_check_instance_cast@plt>
   16db4:	mov	r1, #1
   16db8:	bl	13b90 <gtk_check_menu_item_set_active@plt>
   16dbc:	mov	r6, #0
   16dc0:	movw	r1, #43104	; 0xa860
   16dc4:	ldr	r0, [r4]
   16dc8:	movt	r1, #1
   16dcc:	bl	13b18 <gtk_builder_get_object@plt>
   16dd0:	mov	r3, r6
   16dd4:	str	r6, [sp]
   16dd8:	movw	r1, #42900	; 0xa794
   16ddc:	str	r6, [sp, #4]
   16de0:	movt	r1, #1
   16de4:	movw	r2, #26988	; 0x696c
   16de8:	movt	r2, #1
   16dec:	bl	13c50 <g_signal_connect_data@plt>
   16df0:	movw	r1, #43116	; 0xa86c
   16df4:	ldr	r0, [r4]
   16df8:	movt	r1, #1
   16dfc:	bl	13b18 <gtk_builder_get_object@plt>
   16e00:	mov	r3, r6
   16e04:	str	r6, [sp]
   16e08:	movw	r1, #42900	; 0xa794
   16e0c:	str	r6, [sp, #4]
   16e10:	movt	r1, #1
   16e14:	movw	r2, #26944	; 0x6940
   16e18:	movt	r2, #1
   16e1c:	bl	13c50 <g_signal_connect_data@plt>
   16e20:	movw	r1, #43128	; 0xa878
   16e24:	ldr	r0, [r4]
   16e28:	movt	r1, #1
   16e2c:	bl	13b18 <gtk_builder_get_object@plt>
   16e30:	mov	r3, r6
   16e34:	str	r6, [sp]
   16e38:	movw	r1, #42900	; 0xa794
   16e3c:	str	r6, [sp, #4]
   16e40:	movt	r1, #1
   16e44:	movw	r2, #26900	; 0x6914
   16e48:	movt	r2, #1
   16e4c:	bl	13c50 <g_signal_connect_data@plt>
   16e50:	mov	r1, r6
   16e54:	mov	r0, r8
   16e58:	bl	166bc <g_io_channel_unref@plt+0x249c>
   16e5c:	movw	r1, #43140	; 0xa884
   16e60:	ldr	r0, [r4]
   16e64:	movt	r1, #1
   16e68:	bl	13b18 <gtk_builder_get_object@plt>
   16e6c:	mov	r6, r0
   16e70:	bl	13908 <gtk_widget_get_type@plt>
   16e74:	mov	r7, r0
   16e78:	mov	r0, r6
   16e7c:	mov	r1, r7
   16e80:	movw	r6, #50936	; 0xc6f8
   16e84:	bl	13938 <g_type_check_instance_cast@plt>
   16e88:	movt	r6, #2
   16e8c:	bl	1685c <g_io_channel_unref@plt+0x263c>
   16e90:	ldr	r9, [r8, #48]	; 0x30
   16e94:	cmp	r9, #0
   16e98:	beq	16fdc <g_io_channel_unref@plt+0x2dbc>
   16e9c:	cmp	r9, #1
   16ea0:	bne	16ed0 <g_io_channel_unref@plt+0x2cb0>
   16ea4:	ldr	r0, [r6]
   16ea8:	movw	r1, #43176	; 0xa8a8
   16eac:	movt	r1, #1
   16eb0:	bl	13b18 <gtk_builder_get_object@plt>
   16eb4:	mov	r6, r0
   16eb8:	bl	13980 <gtk_check_menu_item_get_type@plt>
   16ebc:	mov	r1, r0
   16ec0:	mov	r0, r6
   16ec4:	bl	13938 <g_type_check_instance_cast@plt>
   16ec8:	mov	r1, r9
   16ecc:	bl	13b90 <gtk_check_menu_item_set_active@plt>
   16ed0:	mov	r6, #0
   16ed4:	movw	r1, #43160	; 0xa898
   16ed8:	ldr	r0, [r4]
   16edc:	movt	r1, #1
   16ee0:	bl	13b18 <gtk_builder_get_object@plt>
   16ee4:	mov	r3, r6
   16ee8:	str	r6, [sp]
   16eec:	movw	r1, #42900	; 0xa794
   16ef0:	str	r6, [sp, #4]
   16ef4:	movt	r1, #1
   16ef8:	movw	r2, #26856	; 0x68e8
   16efc:	movt	r2, #1
   16f00:	bl	13c50 <g_signal_connect_data@plt>
   16f04:	movw	r1, #43176	; 0xa8a8
   16f08:	ldr	r0, [r4]
   16f0c:	movt	r1, #1
   16f10:	bl	13b18 <gtk_builder_get_object@plt>
   16f14:	mov	r3, r6
   16f18:	str	r6, [sp]
   16f1c:	movw	r1, #42900	; 0xa794
   16f20:	str	r6, [sp, #4]
   16f24:	movt	r1, #1
   16f28:	movw	r2, #26812	; 0x68bc
   16f2c:	movt	r2, #1
   16f30:	bl	13c50 <g_signal_connect_data@plt>
   16f34:	mov	r0, r8
   16f38:	mov	r1, r6
   16f3c:	bl	16a68 <g_io_channel_unref@plt+0x2848>
   16f40:	movw	r1, #43192	; 0xa8b8
   16f44:	ldr	r0, [r4]
   16f48:	movt	r1, #1
   16f4c:	bl	13b18 <gtk_builder_get_object@plt>
   16f50:	mov	r1, r7
   16f54:	bl	13938 <g_type_check_instance_cast@plt>
   16f58:	bl	1685c <g_io_channel_unref@plt+0x263c>
   16f5c:	ldr	r0, [r4]
   16f60:	movw	r1, #42844	; 0xa75c
   16f64:	movt	r1, #1
   16f68:	bl	13b18 <gtk_builder_get_object@plt>
   16f6c:	mov	r1, r7
   16f70:	bl	13938 <g_type_check_instance_cast@plt>
   16f74:	bl	13fb0 <gtk_widget_show@plt>
   16f78:	ldr	r1, [sp, #64]	; 0x40
   16f7c:	ldr	r0, [sp, #60]	; 0x3c
   16f80:	bl	13938 <g_type_check_instance_cast@plt>
   16f84:	ldr	r1, [r8, #52]	; 0x34
   16f88:	bl	13f5c <gtk_window_parse_geometry@plt>
   16f8c:	mov	r0, r8
   16f90:	mov	r1, r6
   16f94:	bl	16b08 <g_io_channel_unref@plt+0x28e8>
   16f98:	mov	r0, r8
   16f9c:	mov	r1, r6
   16fa0:	bl	16b30 <g_io_channel_unref@plt+0x2910>
   16fa4:	mov	r0, #1
   16fa8:	b	16bd0 <g_io_channel_unref@plt+0x29b0>
   16fac:	ldr	r0, [r7]
   16fb0:	movw	r1, #43128	; 0xa878
   16fb4:	movt	r1, #1
   16fb8:	bl	13b18 <gtk_builder_get_object@plt>
   16fbc:	mov	r7, r0
   16fc0:	bl	13980 <gtk_check_menu_item_get_type@plt>
   16fc4:	mov	r1, r0
   16fc8:	mov	r0, r7
   16fcc:	bl	13938 <g_type_check_instance_cast@plt>
   16fd0:	mov	r1, r6
   16fd4:	bl	13b90 <gtk_check_menu_item_set_active@plt>
   16fd8:	b	16dbc <g_io_channel_unref@plt+0x2b9c>
   16fdc:	ldr	r0, [r6]
   16fe0:	movw	r1, #43160	; 0xa898
   16fe4:	movt	r1, #1
   16fe8:	bl	13b18 <gtk_builder_get_object@plt>
   16fec:	mov	r6, r0
   16ff0:	bl	13980 <gtk_check_menu_item_get_type@plt>
   16ff4:	mov	r1, r0
   16ff8:	mov	r0, r6
   16ffc:	bl	13938 <g_type_check_instance_cast@plt>
   17000:	mov	r1, #1
   17004:	bl	13b90 <gtk_check_menu_item_set_active@plt>
   17008:	b	16ed0 <g_io_channel_unref@plt+0x2cb0>
   1700c:	movw	r1, #43116	; 0xa86c
   17010:	ldr	r0, [r7]
   17014:	movt	r1, #1
   17018:	b	16d9c <g_io_channel_unref@plt+0x2b7c>
   1701c:	bl	13d1c <__stack_chk_fail@plt>
   17020:	andeq	sl, r1, ip, lsr r7
   17024:	push	{r4, lr}
   17028:	movw	r4, #50936	; 0xc6f8
   1702c:	movt	r4, #2
   17030:	ldr	r3, [r4]
   17034:	cmp	r3, #0
   17038:	popeq	{r4, pc}
   1703c:	bl	16ad4 <g_io_channel_unref@plt+0x28b4>
   17040:	bl	13c98 <gtk_widget_destroy@plt>
   17044:	ldr	r0, [r4]
   17048:	pop	{r4, lr}
   1704c:	b	13fbc <g_object_unref@plt>
   17050:	push	{r4, r5, r6, lr}
   17054:	movw	r4, #50120	; 0xc3c8
   17058:	movt	r4, #2
   1705c:	sub	sp, sp, #32
   17060:	ldr	r3, [r4]
   17064:	str	r3, [sp, #28]
   17068:	bl	16ad4 <g_io_channel_unref@plt+0x28b4>
   1706c:	mov	r5, r0
   17070:	bl	13c08 <gtk_widget_get_visible@plt>
   17074:	cmp	r0, #0
   17078:	beq	170f8 <g_io_channel_unref@plt+0x2ed8>
   1707c:	bl	141b4 <gtk_window_get_type@plt>
   17080:	mov	r6, r0
   17084:	mov	r0, r5
   17088:	mov	r1, r6
   1708c:	bl	13938 <g_type_check_instance_cast@plt>
   17090:	add	r2, sp, #24
   17094:	add	r1, sp, #20
   17098:	bl	13f74 <gtk_window_get_size@plt>
   1709c:	mov	r0, r5
   170a0:	mov	r1, r6
   170a4:	bl	13938 <g_type_check_instance_cast@plt>
   170a8:	add	r1, sp, #12
   170ac:	add	r2, sp, #16
   170b0:	bl	13adc <gtk_window_get_position@plt>
   170b4:	ldr	ip, [sp, #16]
   170b8:	ldr	r1, [sp, #20]
   170bc:	movw	r0, #43212	; 0xa8cc
   170c0:	ldr	r2, [sp, #24]
   170c4:	movt	r0, #1
   170c8:	ldr	r3, [sp, #12]
   170cc:	str	ip, [sp]
   170d0:	bl	13b3c <g_strdup_printf@plt>
   170d4:	mov	r5, r0
   170d8:	bl	19b88 <g_io_channel_unref@plt+0x5968>
   170dc:	mov	r2, r5
   170e0:	movw	r1, #43224	; 0xa8d8
   170e4:	mov	r3, #0
   170e8:	movt	r1, #1
   170ec:	bl	13db8 <g_object_set@plt>
   170f0:	mov	r0, r5
   170f4:	bl	13d58 <g_free@plt>
   170f8:	ldr	r2, [sp, #28]
   170fc:	ldr	r3, [r4]
   17100:	cmp	r2, r3
   17104:	bne	17110 <g_io_channel_unref@plt+0x2ef0>
   17108:	add	sp, sp, #32
   1710c:	pop	{r4, r5, r6, pc}
   17110:	bl	13d1c <__stack_chk_fail@plt>
   17114:	andeq	r0, r0, r0
   17118:	push	{r4, r5, r6, r7, r8, r9, lr}
   1711c:	sub	sp, sp, #28
   17120:	mov	r6, r0
   17124:	bl	14058 <g_type_class_peek_parent@plt>
   17128:	movw	r5, #50940	; 0xc6fc
   1712c:	movt	r5, #2
   17130:	ldr	r3, [r5, #4]
   17134:	cmp	r3, #0
   17138:	str	r0, [r5]
   1713c:	beq	1714c <g_io_channel_unref@plt+0x2f2c>
   17140:	mov	r0, r6
   17144:	add	r1, r5, #4
   17148:	bl	13824 <g_type_class_adjust_private_offset@plt>
   1714c:	mov	r1, #80	; 0x50
   17150:	mov	r0, r6
   17154:	bl	14154 <g_type_check_class_cast@plt>
   17158:	mov	r4, #0
   1715c:	movw	r3, #29896	; 0x74c8
   17160:	movw	r2, #29724	; 0x741c
   17164:	movt	r3, #1
   17168:	movt	r2, #1
   1716c:	mov	r9, #4
   17170:	mov	r8, #1
   17174:	mov	r7, r0
   17178:	str	r3, [r0, #16]
   1717c:	str	r2, [r0, #12]
   17180:	movw	r3, #29628	; 0x73bc
   17184:	movw	r0, #42000	; 0xa410
   17188:	movt	r3, #1
   1718c:	movt	r0, #1
   17190:	str	r3, [r7, #24]
   17194:	bl	13cd4 <g_intern_static_string@plt>
   17198:	ldr	r1, [r6]
   1719c:	mov	ip, #60	; 0x3c
   171a0:	mov	r2, #2
   171a4:	str	ip, [sp, #20]
   171a8:	movw	r3, #15332	; 0x3be4
   171ac:	str	r4, [sp]
   171b0:	movt	r3, #1
   171b4:	str	r4, [sp, #4]
   171b8:	str	r3, [sp, #8]
   171bc:	mov	r3, r4
   171c0:	str	r9, [sp, #12]
   171c4:	str	r8, [sp, #16]
   171c8:	bl	13b60 <g_signal_new@plt>
   171cc:	str	r0, [r5, #8]
   171d0:	movw	r0, #41988	; 0xa404
   171d4:	movt	r0, #1
   171d8:	bl	13cd4 <g_intern_static_string@plt>
   171dc:	ldr	r1, [r6]
   171e0:	mov	r3, r4
   171e4:	str	r9, [sp, #12]
   171e8:	str	r4, [sp]
   171ec:	movw	r2, #16340	; 0x3fd4
   171f0:	str	r4, [sp, #4]
   171f4:	movt	r2, #1
   171f8:	str	r4, [sp, #16]
   171fc:	str	r2, [sp, #8]
   17200:	mov	r2, #2
   17204:	bl	13b60 <g_signal_new@plt>
   17208:	vldr	d0, [pc, #80]	; 17260 <g_io_channel_unref@plt+0x3040>
   1720c:	vmov.f64	d1, #8	; 0x40400000  3.0
   17210:	vldr	d2, [pc, #80]	; 17268 <g_io_channel_unref@plt+0x3048>
   17214:	mov	r3, #227	; 0xe3
   17218:	movw	r1, #43432	; 0xa9a8
   1721c:	movw	r2, #43444	; 0xa9b4
   17220:	movt	r1, #1
   17224:	movt	r2, #1
   17228:	str	r0, [r5, #12]
   1722c:	movw	r0, #42032	; 0xa430
   17230:	movt	r0, #1
   17234:	bl	1404c <g_param_spec_double@plt>
   17238:	mov	r1, r8
   1723c:	mov	r2, r0
   17240:	mov	r0, r7
   17244:	bl	13df4 <g_object_class_install_property@plt>
   17248:	mov	r0, r6
   1724c:	mov	r1, #24
   17250:	add	sp, sp, #28
   17254:	pop	{r4, r5, r6, r7, r8, r9, lr}
   17258:	b	13e24 <g_type_class_add_private@plt>
   1725c:	nop	{0}
   17260:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   17264:	svccc	0x00b99999
   17268:	andmi	r0, r0, r0
   1726c:	svccc	0x00f33333
   17270:	push	{r4, r5, r6, r7, lr}
   17274:	mov	r1, #0
   17278:	ldr	r6, [r0, #12]
   1727c:	sub	sp, sp, #12
   17280:	mov	r5, r0
   17284:	movw	r4, #50940	; 0xc6fc
   17288:	movt	r4, #2
   1728c:	ldr	r0, [r6]
   17290:	bl	138e4 <g_timer_elapsed@plt>
   17294:	ldr	r1, [r4, #8]
   17298:	mov	r0, r5
   1729c:	mov	r2, #0
   172a0:	vstr	d0, [r6, #8]
   172a4:	vstr	d0, [sp]
   172a8:	bl	13ac4 <g_signal_emit@plt>
   172ac:	vldr	d6, [r6, #8]
   172b0:	vldr	d7, [r6, #16]
   172b4:	vcmpe.f64	d6, d7
   172b8:	vmrs	APSR_nzcv, fpscr
   172bc:	movlt	r0, #1
   172c0:	blt	172ec <g_io_channel_unref@plt+0x30cc>
   172c4:	mov	r7, #0
   172c8:	mov	r0, r5
   172cc:	ldr	r1, [r4, #12]
   172d0:	mov	r2, r7
   172d4:	str	r7, [r6, #4]
   172d8:	mov	r4, #0
   172dc:	mov	r5, #0
   172e0:	strd	r4, [r6, #8]
   172e4:	bl	13ac4 <g_signal_emit@plt>
   172e8:	mov	r0, r7
   172ec:	add	sp, sp, #12
   172f0:	pop	{r4, r5, r6, r7, pc}
   172f4:	push	{r4, r5, lr}
   172f8:	movw	r4, #50940	; 0xc6fc
   172fc:	dmb	sy
   17300:	movt	r4, #2
   17304:	sub	sp, sp, #20
   17308:	ldr	r5, [r4, #16]
   1730c:	dmb	sy
   17310:	cmp	r5, #0
   17314:	beq	17324 <g_io_channel_unref@plt+0x3104>
   17318:	ldr	r0, [r4, #16]
   1731c:	add	sp, sp, #20
   17320:	pop	{r4, r5, pc}
   17324:	add	r0, r4, #16
   17328:	bl	13c5c <g_once_init_enter@plt>
   1732c:	cmp	r0, #0
   17330:	beq	17318 <g_io_channel_unref@plt+0x30f8>
   17334:	movw	r0, #43472	; 0xa9d0
   17338:	movt	r0, #1
   1733c:	bl	13cd4 <g_intern_static_string@plt>
   17340:	str	r5, [sp, #8]
   17344:	mov	r2, #16
   17348:	movw	r3, #29564	; 0x737c
   1734c:	movt	r3, #1
   17350:	stm	sp, {r2, r3}
   17354:	mov	r2, #68	; 0x44
   17358:	movw	r3, #28952	; 0x7118
   1735c:	movt	r3, #1
   17360:	mov	r1, r0
   17364:	mov	r0, #80	; 0x50
   17368:	bl	137dc <g_type_register_static_simple@plt>
   1736c:	mov	r1, r0
   17370:	add	r0, r4, #16
   17374:	bl	13fec <g_once_init_leave@plt>
   17378:	b	17318 <g_io_channel_unref@plt+0x30f8>
   1737c:	push	{r3, r4, r5, lr}
   17380:	mov	r4, r0
   17384:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   17388:	mov	r1, r0
   1738c:	mov	r0, r4
   17390:	bl	13c14 <g_type_instance_get_private@plt>
   17394:	str	r0, [r4, #12]
   17398:	mov	r5, r0
   1739c:	bl	13f44 <g_timer_new@plt>
   173a0:	ldr	r1, [r4, #12]
   173a4:	mov	r2, #1073741824	; 0x40000000
   173a8:	movw	r3, #13107	; 0x3333
   173ac:	movt	r3, #16371	; 0x3ff3
   173b0:	str	r0, [r5]
   173b4:	strd	r2, [r1, #16]
   173b8:	pop	{r3, r4, r5, pc}
   173bc:	push	{r3, r4, r5, lr}
   173c0:	mov	r4, r0
   173c4:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   173c8:	mov	r1, r0
   173cc:	mov	r0, r4
   173d0:	bl	13938 <g_type_check_instance_cast@plt>
   173d4:	ldr	r3, [r0, #12]
   173d8:	mov	r5, r0
   173dc:	ldr	r0, [r3, #4]
   173e0:	cmp	r0, #0
   173e4:	beq	173f0 <g_io_channel_unref@plt+0x31d0>
   173e8:	bl	141cc <g_source_remove@plt>
   173ec:	ldr	r3, [r5, #12]
   173f0:	ldr	r0, [r3]
   173f4:	bl	13920 <g_timer_destroy@plt>
   173f8:	movw	r3, #50940	; 0xc6fc
   173fc:	movt	r3, #2
   17400:	mov	r1, #80	; 0x50
   17404:	ldr	r0, [r3]
   17408:	bl	14154 <g_type_check_class_cast@plt>
   1740c:	ldr	r3, [r0, #24]
   17410:	mov	r0, r4
   17414:	blx	r3
   17418:	pop	{r3, r4, r5, pc}
   1741c:	push	{r4, r5, r6, r7, lr}
   17420:	sub	sp, sp, #28
   17424:	mov	r4, r1
   17428:	mov	r6, r3
   1742c:	mov	r5, r0
   17430:	mov	r7, r2
   17434:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   17438:	mov	r1, r0
   1743c:	mov	r0, r5
   17440:	bl	13938 <g_type_check_instance_cast@plt>
   17444:	cmp	r4, #1
   17448:	mov	r3, r0
   1744c:	beq	174b0 <g_io_channel_unref@plt+0x3290>
   17450:	ldm	r6, {r3, r7}
   17454:	ldr	r0, [r3]
   17458:	bl	139b0 <g_type_name@plt>
   1745c:	ldr	r3, [r5]
   17460:	mov	r6, r0
   17464:	ldr	r0, [r3]
   17468:	bl	139b0 <g_type_name@plt>
   1746c:	str	r7, [sp, #12]
   17470:	str	r6, [sp, #16]
   17474:	mov	r2, #93	; 0x5d
   17478:	str	r4, [sp, #8]
   1747c:	mov	r1, #16
   17480:	movw	r3, #42744	; 0xa6f8
   17484:	movt	r3, #1
   17488:	stm	sp, {r2, r3}
   1748c:	movw	r2, #42672	; 0xa6b0
   17490:	movw	r3, #43480	; 0xa9d8
   17494:	movt	r2, #1
   17498:	movt	r3, #1
   1749c:	str	r0, [sp, #20]
   174a0:	mov	r0, #0
   174a4:	bl	139a4 <g_log@plt>
   174a8:	add	sp, sp, #28
   174ac:	pop	{r4, r5, r6, r7, pc}
   174b0:	mov	r0, r7
   174b4:	ldr	r4, [r3, #12]
   174b8:	bl	138cc <g_value_get_double@plt>
   174bc:	vstr	d0, [r4, #16]
   174c0:	add	sp, sp, #28
   174c4:	pop	{r4, r5, r6, r7, pc}
   174c8:	push	{r4, r5, r6, r7, lr}
   174cc:	sub	sp, sp, #28
   174d0:	mov	r4, r1
   174d4:	mov	r5, r0
   174d8:	mov	r7, r2
   174dc:	mov	r6, r3
   174e0:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   174e4:	mov	r1, r0
   174e8:	mov	r0, r5
   174ec:	bl	13938 <g_type_check_instance_cast@plt>
   174f0:	cmp	r4, #1
   174f4:	beq	17558 <g_io_channel_unref@plt+0x3338>
   174f8:	ldm	r6, {r3, r7}
   174fc:	ldr	r0, [r3]
   17500:	bl	139b0 <g_type_name@plt>
   17504:	ldr	r3, [r5]
   17508:	mov	r6, r0
   1750c:	ldr	r0, [r3]
   17510:	bl	139b0 <g_type_name@plt>
   17514:	str	r7, [sp, #12]
   17518:	str	r6, [sp, #16]
   1751c:	mov	r2, #75	; 0x4b
   17520:	str	r4, [sp, #8]
   17524:	mov	r1, #16
   17528:	movw	r3, #42744	; 0xa6f8
   1752c:	movt	r3, #1
   17530:	stm	sp, {r2, r3}
   17534:	movw	r2, #42672	; 0xa6b0
   17538:	movw	r3, #43480	; 0xa9d8
   1753c:	movt	r2, #1
   17540:	movt	r3, #1
   17544:	str	r0, [sp, #20]
   17548:	mov	r0, #0
   1754c:	bl	139a4 <g_log@plt>
   17550:	add	sp, sp, #28
   17554:	pop	{r4, r5, r6, r7, pc}
   17558:	ldr	r3, [r0, #12]
   1755c:	mov	r0, r7
   17560:	vldr	d0, [r3, #16]
   17564:	add	sp, sp, #28
   17568:	pop	{r4, r5, r6, r7, lr}
   1756c:	b	13c74 <g_value_set_double@plt>
   17570:	push	{r3, lr}
   17574:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   17578:	mov	r1, #0
   1757c:	pop	{r3, lr}
   17580:	b	13728 <g_object_new@plt>
   17584:	push	{r3, r4, r5, lr}
   17588:	mov	r4, r0
   1758c:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   17590:	cmp	r4, #0
   17594:	beq	175c4 <g_io_channel_unref@plt+0x33a4>
   17598:	ldr	r3, [r4]
   1759c:	cmp	r3, #0
   175a0:	beq	175b0 <g_io_channel_unref@plt+0x3390>
   175a4:	ldr	r3, [r3]
   175a8:	cmp	r0, r3
   175ac:	beq	175e0 <g_io_channel_unref@plt+0x33c0>
   175b0:	mov	r1, r0
   175b4:	mov	r0, r4
   175b8:	bl	13e78 <g_type_check_instance_is_a@plt>
   175bc:	cmp	r0, #0
   175c0:	bne	175e0 <g_io_channel_unref@plt+0x33c0>
   175c4:	movw	r1, #43320	; 0xa938
   175c8:	movw	r2, #43492	; 0xa9e4
   175cc:	movt	r1, #1
   175d0:	movt	r2, #1
   175d4:	mov	r0, #0
   175d8:	pop	{r3, r4, r5, lr}
   175dc:	b	137b8 <g_return_if_fail_warning@plt>
   175e0:	ldr	r3, [r4, #12]
   175e4:	ldr	r0, [r3]
   175e8:	bl	13fa4 <g_timer_start@plt>
   175ec:	ldr	r5, [r4, #12]
   175f0:	ldr	r3, [r5, #4]
   175f4:	cmp	r3, #0
   175f8:	popne	{r3, r4, r5, pc}
   175fc:	mov	r2, r4
   17600:	movw	r1, #29296	; 0x7270
   17604:	mov	r0, #100	; 0x64
   17608:	movt	r1, #1
   1760c:	bl	13830 <g_timeout_add@plt>
   17610:	str	r0, [r5, #4]
   17614:	pop	{r3, r4, r5, pc}
   17618:	push	{r4, lr}
   1761c:	mov	r4, r0
   17620:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   17624:	cmp	r4, #0
   17628:	beq	17658 <g_io_channel_unref@plt+0x3438>
   1762c:	ldr	r3, [r4]
   17630:	cmp	r3, #0
   17634:	beq	17644 <g_io_channel_unref@plt+0x3424>
   17638:	ldr	r3, [r3]
   1763c:	cmp	r0, r3
   17640:	beq	17670 <g_io_channel_unref@plt+0x3450>
   17644:	mov	r1, r0
   17648:	mov	r0, r4
   1764c:	bl	13e78 <g_type_check_instance_is_a@plt>
   17650:	cmp	r0, #0
   17654:	bne	17670 <g_io_channel_unref@plt+0x3450>
   17658:	movw	r2, #43492	; 0xa9e4
   1765c:	mov	r0, #0
   17660:	movt	r2, #1
   17664:	ldr	r1, [pc, #40]	; 17694 <g_io_channel_unref@plt+0x3474>
   17668:	pop	{r4, lr}
   1766c:	b	137b8 <g_return_if_fail_warning@plt>
   17670:	ldr	r3, [r4, #12]
   17674:	ldr	r0, [r3, #4]
   17678:	cmp	r0, #0
   1767c:	popeq	{r4, pc}
   17680:	bl	141cc <g_source_remove@plt>
   17684:	ldr	r3, [r4, #12]
   17688:	mov	r2, #0
   1768c:	str	r2, [r3, #4]
   17690:	pop	{r4, pc}
   17694:	andeq	sl, r1, r8, asr #18
   17698:	push	{r4, lr}
   1769c:	mov	r4, r0
   176a0:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   176a4:	cmp	r4, #0
   176a8:	beq	176d8 <g_io_channel_unref@plt+0x34b8>
   176ac:	ldr	r3, [r4]
   176b0:	cmp	r3, #0
   176b4:	beq	176c4 <g_io_channel_unref@plt+0x34a4>
   176b8:	ldr	r3, [r3]
   176bc:	cmp	r0, r3
   176c0:	beq	176f4 <g_io_channel_unref@plt+0x34d4>
   176c4:	mov	r1, r0
   176c8:	mov	r0, r4
   176cc:	bl	13e78 <g_type_check_instance_is_a@plt>
   176d0:	cmp	r0, #0
   176d4:	bne	176f4 <g_io_channel_unref@plt+0x34d4>
   176d8:	mov	r0, #0
   176dc:	ldr	r1, [pc, #36]	; 17708 <g_io_channel_unref@plt+0x34e8>
   176e0:	movw	r2, #43492	; 0xa9e4
   176e4:	movt	r2, #1
   176e8:	bl	137b8 <g_return_if_fail_warning@plt>
   176ec:	mov	r0, #0
   176f0:	pop	{r4, pc}
   176f4:	ldr	r3, [r4, #12]
   176f8:	ldr	r0, [r3, #4]
   176fc:	adds	r0, r0, #0
   17700:	movne	r0, #1
   17704:	pop	{r4, pc}
   17708:	andeq	sl, r1, r8, asr r9
   1770c:	push	{r4, lr}
   17710:	mov	r4, r0
   17714:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   17718:	cmp	r4, #0
   1771c:	beq	1774c <g_io_channel_unref@plt+0x352c>
   17720:	ldr	r3, [r4]
   17724:	cmp	r3, #0
   17728:	beq	17738 <g_io_channel_unref@plt+0x3518>
   1772c:	ldr	r3, [r3]
   17730:	cmp	r0, r3
   17734:	beq	17768 <g_io_channel_unref@plt+0x3548>
   17738:	mov	r1, r0
   1773c:	mov	r0, r4
   17740:	bl	13e78 <g_type_check_instance_is_a@plt>
   17744:	cmp	r0, #0
   17748:	bne	17768 <g_io_channel_unref@plt+0x3548>
   1774c:	mov	r0, #0
   17750:	ldr	r1, [pc, #40]	; 17780 <g_io_channel_unref@plt+0x3560>
   17754:	movw	r2, #43492	; 0xa9e4
   17758:	movt	r2, #1
   1775c:	bl	137b8 <g_return_if_fail_warning@plt>
   17760:	vldr	d0, [pc, #16]	; 17778 <g_io_channel_unref@plt+0x3558>
   17764:	pop	{r4, pc}
   17768:	ldr	r3, [r4, #12]
   1776c:	vldr	d0, [r3, #8]
   17770:	pop	{r4, pc}
   17774:	nop	{0}
	...
   17780:	andeq	sl, r1, ip, ror #18
   17784:	push	{r4, lr}
   17788:	mov	r4, r0
   1778c:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   17790:	cmp	r4, #0
   17794:	beq	177c4 <g_io_channel_unref@plt+0x35a4>
   17798:	ldr	r3, [r4]
   1779c:	cmp	r3, #0
   177a0:	beq	177b0 <g_io_channel_unref@plt+0x3590>
   177a4:	ldr	r3, [r3]
   177a8:	cmp	r0, r3
   177ac:	beq	177e0 <g_io_channel_unref@plt+0x35c0>
   177b0:	mov	r1, r0
   177b4:	mov	r0, r4
   177b8:	bl	13e78 <g_type_check_instance_is_a@plt>
   177bc:	cmp	r0, #0
   177c0:	bne	177e0 <g_io_channel_unref@plt+0x35c0>
   177c4:	mov	r0, #0
   177c8:	ldr	r1, [pc, #40]	; 177f8 <g_io_channel_unref@plt+0x35d8>
   177cc:	movw	r2, #43492	; 0xa9e4
   177d0:	movt	r2, #1
   177d4:	bl	137b8 <g_return_if_fail_warning@plt>
   177d8:	vldr	d0, [pc, #16]	; 177f0 <g_io_channel_unref@plt+0x35d0>
   177dc:	pop	{r4, pc}
   177e0:	ldr	r3, [r4, #12]
   177e4:	vldr	d0, [r3, #16]
   177e8:	pop	{r4, pc}
   177ec:	nop	{0}
	...
   177f8:	andeq	sl, r1, r0, lsl #19
   177fc:	push	{r4, lr}
   17800:	vpush	{d8}
   17804:	mov	r4, r0
   17808:	vmov.f64	d8, d0
   1780c:	bl	172f4 <g_io_channel_unref@plt+0x30d4>
   17810:	cmp	r4, #0
   17814:	beq	17844 <g_io_channel_unref@plt+0x3624>
   17818:	ldr	r3, [r4]
   1781c:	cmp	r3, #0
   17820:	beq	17830 <g_io_channel_unref@plt+0x3610>
   17824:	ldr	r3, [r3]
   17828:	cmp	r0, r3
   1782c:	beq	17860 <g_io_channel_unref@plt+0x3640>
   17830:	mov	r1, r0
   17834:	mov	r0, r4
   17838:	bl	13e78 <g_type_check_instance_is_a@plt>
   1783c:	cmp	r0, #0
   17840:	bne	17860 <g_io_channel_unref@plt+0x3640>
   17844:	vpop	{d8}
   17848:	movw	r2, #43492	; 0xa9e4
   1784c:	mov	r0, #0
   17850:	movt	r2, #1
   17854:	ldr	r1, [pc, #100]	; 178c0 <g_io_channel_unref@plt+0x36a0>
   17858:	pop	{r4, lr}
   1785c:	b	137b8 <g_return_if_fail_warning@plt>
   17860:	vldr	d7, [pc, #80]	; 178b8 <g_io_channel_unref@plt+0x3698>
   17864:	vcmpe.f64	d8, d7
   17868:	vmrs	APSR_nzcv, fpscr
   1786c:	blt	17898 <g_io_channel_unref@plt+0x3678>
   17870:	ldr	r3, [r4, #12]
   17874:	mov	r0, r4
   17878:	vstr	d8, [r3, #16]
   1787c:	mov	r1, #80	; 0x50
   17880:	bl	13938 <g_type_check_instance_cast@plt>
   17884:	vpop	{d8}
   17888:	movw	r1, #42032	; 0xa430
   1788c:	movt	r1, #1
   17890:	pop	{r4, lr}
   17894:	b	13e60 <g_object_notify@plt>
   17898:	vpop	{d8}
   1789c:	movw	r2, #43512	; 0xa9f8
   178a0:	mov	r0, #0
   178a4:	movt	r2, #1
   178a8:	ldr	r1, [pc, #16]	; 178c0 <g_io_channel_unref@plt+0x36a0>
   178ac:	pop	{r4, lr}
   178b0:	b	137b8 <g_return_if_fail_warning@plt>
   178b4:	nop	{0}
   178b8:	ldmibls	r9, {r1, r3, r4, r7, r8, fp, ip, pc}
   178bc:	svccc	0x00b99999
   178c0:	muleq	r1, r4, r9
   178c4:	nop	{0}
   178c8:	push	{r4, lr}
   178cc:	mov	r4, r0
   178d0:	bl	14058 <g_type_class_peek_parent@plt>
   178d4:	movw	r1, #50960	; 0xc710
   178d8:	movt	r1, #2
   178dc:	ldr	r3, [r1, #4]
   178e0:	cmp	r3, #0
   178e4:	str	r0, [r1]
   178e8:	beq	178f8 <g_io_channel_unref@plt+0x36d8>
   178ec:	add	r1, r1, #4
   178f0:	mov	r0, r4
   178f4:	bl	13824 <g_type_class_adjust_private_offset@plt>
   178f8:	mov	r0, r4
   178fc:	mov	r1, #80	; 0x50
   17900:	bl	14154 <g_type_check_class_cast@plt>
   17904:	movw	r3, #31176	; 0x79c8
   17908:	mov	r1, #16
   1790c:	movt	r3, #1
   17910:	str	r3, [r0, #24]
   17914:	mov	r0, r4
   17918:	pop	{r4, lr}
   1791c:	b	13e24 <g_type_class_add_private@plt>
   17920:	push	{r4, r5, lr}
   17924:	movw	r4, #50960	; 0xc710
   17928:	dmb	sy
   1792c:	movt	r4, #2
   17930:	sub	sp, sp, #20
   17934:	ldr	r5, [r4, #8]
   17938:	dmb	sy
   1793c:	cmp	r5, #0
   17940:	beq	17950 <g_io_channel_unref@plt+0x3730>
   17944:	ldr	r0, [r4, #8]
   17948:	add	sp, sp, #20
   1794c:	pop	{r4, r5, pc}
   17950:	add	r0, r4, #8
   17954:	bl	13c5c <g_once_init_enter@plt>
   17958:	cmp	r0, #0
   1795c:	beq	17944 <g_io_channel_unref@plt+0x3724>
   17960:	movw	r0, #43660	; 0xaa8c
   17964:	movt	r0, #1
   17968:	bl	13cd4 <g_intern_static_string@plt>
   1796c:	str	r5, [sp, #8]
   17970:	mov	r2, #16
   17974:	movw	r3, #31144	; 0x79a8
   17978:	movt	r3, #1
   1797c:	stm	sp, {r2, r3}
   17980:	mov	r2, #68	; 0x44
   17984:	movw	r3, #30920	; 0x78c8
   17988:	movt	r3, #1
   1798c:	mov	r1, r0
   17990:	mov	r0, #80	; 0x50
   17994:	bl	137dc <g_type_register_static_simple@plt>
   17998:	mov	r1, r0
   1799c:	add	r0, r4, #8
   179a0:	bl	13fec <g_once_init_leave@plt>
   179a4:	b	17944 <g_io_channel_unref@plt+0x3724>
   179a8:	push	{r4, lr}
   179ac:	mov	r4, r0
   179b0:	bl	17920 <g_io_channel_unref@plt+0x3700>
   179b4:	mov	r1, r0
   179b8:	mov	r0, r4
   179bc:	bl	13c14 <g_type_instance_get_private@plt>
   179c0:	str	r0, [r4, #12]
   179c4:	pop	{r4, pc}
   179c8:	push	{r3, r4, r5, lr}
   179cc:	mov	r4, r0
   179d0:	bl	17920 <g_io_channel_unref@plt+0x3700>
   179d4:	mov	r1, r0
   179d8:	mov	r0, r4
   179dc:	bl	13938 <g_type_check_instance_cast@plt>
   179e0:	ldr	r3, [r0, #12]
   179e4:	mov	r5, r0
   179e8:	ldr	r0, [r3]
   179ec:	bl	13d58 <g_free@plt>
   179f0:	ldr	r3, [r5, #12]
   179f4:	ldr	r0, [r3, #4]
   179f8:	bl	13d58 <g_free@plt>
   179fc:	movw	r3, #50960	; 0xc710
   17a00:	movt	r3, #2
   17a04:	mov	r1, #80	; 0x50
   17a08:	ldr	r0, [r3]
   17a0c:	bl	14154 <g_type_check_class_cast@plt>
   17a10:	ldr	r3, [r0, #24]
   17a14:	mov	r0, r4
   17a18:	blx	r3
   17a1c:	pop	{r3, r4, r5, pc}
   17a20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17a24:	subs	r4, r0, #0
   17a28:	mov	r7, r1
   17a2c:	mov	r5, r2
   17a30:	mov	r6, r3
   17a34:	ldrh	r8, [sp, #32]
   17a38:	ldrh	r9, [sp, #36]	; 0x24
   17a3c:	beq	17b04 <g_io_channel_unref@plt+0x38e4>
   17a40:	cmp	r1, #0
   17a44:	beq	17b24 <g_io_channel_unref@plt+0x3904>
   17a48:	cmp	r2, #0
   17a4c:	cmpne	r3, #0
   17a50:	moveq	sl, #0
   17a54:	movne	sl, #1
   17a58:	beq	17abc <g_io_channel_unref@plt+0x389c>
   17a5c:	cmp	r8, r2
   17a60:	cmpls	r9, r3
   17a64:	movhi	sl, #0
   17a68:	movls	sl, #1
   17a6c:	bhi	17ae0 <g_io_channel_unref@plt+0x38c0>
   17a70:	ldrb	r3, [r4]
   17a74:	cmp	r3, #0
   17a78:	beq	17ad8 <g_io_channel_unref@plt+0x38b8>
   17a7c:	bl	17920 <g_io_channel_unref@plt+0x3700>
   17a80:	mov	r1, #0
   17a84:	bl	13728 <g_object_new@plt>
   17a88:	mov	sl, r0
   17a8c:	mov	r0, r4
   17a90:	ldr	r4, [sl, #12]
   17a94:	bl	13ad0 <g_strdup@plt>
   17a98:	mov	r3, sl
   17a9c:	str	r7, [r4, #4]
   17aa0:	strh	r5, [r4, #8]
   17aa4:	strh	r6, [r4, #10]
   17aa8:	strh	r8, [r4, #12]
   17aac:	strh	r9, [r4, #14]
   17ab0:	str	r0, [r4]
   17ab4:	mov	r0, r3
   17ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17abc:	movw	r1, #43528	; 0xaa08
   17ac0:	movw	r2, #43704	; 0xaab8
   17ac4:	movt	r1, #1
   17ac8:	movt	r2, #1
   17acc:	mov	r0, sl
   17ad0:	bl	137b8 <g_return_if_fail_warning@plt>
   17ad4:	mov	r3, sl
   17ad8:	mov	r0, r3
   17adc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17ae0:	mov	r0, sl
   17ae4:	movw	r1, #43528	; 0xaa08
   17ae8:	movw	r2, #43728	; 0xaad0
   17aec:	movt	r1, #1
   17af0:	movt	r2, #1
   17af4:	bl	137b8 <g_return_if_fail_warning@plt>
   17af8:	mov	r3, sl
   17afc:	mov	r0, r3
   17b00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b04:	movw	r1, #43528	; 0xaa08
   17b08:	movw	r2, #43672	; 0xaa98
   17b0c:	movt	r1, #1
   17b10:	movt	r2, #1
   17b14:	bl	137b8 <g_return_if_fail_warning@plt>
   17b18:	mov	r3, r4
   17b1c:	mov	r0, r3
   17b20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b24:	mov	r0, r7
   17b28:	movw	r1, #43528	; 0xaa08
   17b2c:	movw	r2, #43688	; 0xaaa8
   17b30:	movt	r1, #1
   17b34:	movt	r2, #1
   17b38:	bl	137b8 <g_return_if_fail_warning@plt>
   17b3c:	mov	r3, r7
   17b40:	mov	r0, r3
   17b44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17b48:	push	{r4, lr}
   17b4c:	mov	r4, r0
   17b50:	bl	17920 <g_io_channel_unref@plt+0x3700>
   17b54:	cmp	r4, #0
   17b58:	beq	17b88 <g_io_channel_unref@plt+0x3968>
   17b5c:	ldr	r3, [r4]
   17b60:	cmp	r3, #0
   17b64:	beq	17b74 <g_io_channel_unref@plt+0x3954>
   17b68:	ldr	r3, [r3]
   17b6c:	cmp	r0, r3
   17b70:	beq	17ba4 <g_io_channel_unref@plt+0x3984>
   17b74:	mov	r1, r0
   17b78:	mov	r0, r4
   17b7c:	bl	13e78 <g_type_check_instance_is_a@plt>
   17b80:	cmp	r0, #0
   17b84:	bne	17ba4 <g_io_channel_unref@plt+0x3984>
   17b88:	mov	r0, #0
   17b8c:	ldr	r1, [pc, #28]	; 17bb0 <g_io_channel_unref@plt+0x3990>
   17b90:	movw	r2, #43760	; 0xaaf0
   17b94:	movt	r2, #1
   17b98:	bl	137b8 <g_return_if_fail_warning@plt>
   17b9c:	mov	r0, #0
   17ba0:	pop	{r4, pc}
   17ba4:	ldr	r3, [r4, #12]
   17ba8:	ldr	r0, [r3]
   17bac:	pop	{r4, pc}
   17bb0:	andeq	sl, r1, r8, lsl sl
   17bb4:	push	{r4, lr}
   17bb8:	mov	r4, r0
   17bbc:	bl	17920 <g_io_channel_unref@plt+0x3700>
   17bc0:	cmp	r4, #0
   17bc4:	beq	17bf4 <g_io_channel_unref@plt+0x39d4>
   17bc8:	ldr	r3, [r4]
   17bcc:	cmp	r3, #0
   17bd0:	beq	17be0 <g_io_channel_unref@plt+0x39c0>
   17bd4:	ldr	r3, [r3]
   17bd8:	cmp	r0, r3
   17bdc:	beq	17c10 <g_io_channel_unref@plt+0x39f0>
   17be0:	mov	r1, r0
   17be4:	mov	r0, r4
   17be8:	bl	13e78 <g_type_check_instance_is_a@plt>
   17bec:	cmp	r0, #0
   17bf0:	bne	17c10 <g_io_channel_unref@plt+0x39f0>
   17bf4:	mov	r0, #0
   17bf8:	ldr	r1, [pc, #28]	; 17c1c <g_io_channel_unref@plt+0x39fc>
   17bfc:	movw	r2, #43760	; 0xaaf0
   17c00:	movt	r2, #1
   17c04:	bl	137b8 <g_return_if_fail_warning@plt>
   17c08:	mov	r0, #0
   17c0c:	pop	{r4, pc}
   17c10:	ldr	r3, [r4, #12]
   17c14:	ldr	r0, [r3, #4]
   17c18:	pop	{r4, pc}
   17c1c:	andeq	sl, r1, ip, lsr #20
   17c20:	push	{r4, lr}
   17c24:	mov	r4, r0
   17c28:	bl	17920 <g_io_channel_unref@plt+0x3700>
   17c2c:	cmp	r4, #0
   17c30:	beq	17c60 <g_io_channel_unref@plt+0x3a40>
   17c34:	ldr	r3, [r4]
   17c38:	cmp	r3, #0
   17c3c:	beq	17c4c <g_io_channel_unref@plt+0x3a2c>
   17c40:	ldr	r3, [r3]
   17c44:	cmp	r0, r3
   17c48:	beq	17c7c <g_io_channel_unref@plt+0x3a5c>
   17c4c:	mov	r1, r0
   17c50:	mov	r0, r4
   17c54:	bl	13e78 <g_type_check_instance_is_a@plt>
   17c58:	cmp	r0, #0
   17c5c:	bne	17c7c <g_io_channel_unref@plt+0x3a5c>
   17c60:	mov	r0, #0
   17c64:	ldr	r1, [pc, #48]	; 17c9c <g_io_channel_unref@plt+0x3a7c>
   17c68:	movw	r2, #43760	; 0xaaf0
   17c6c:	movt	r2, #1
   17c70:	bl	137b8 <g_return_if_fail_warning@plt>
   17c74:	mov	r0, #0
   17c78:	pop	{r4, pc}
   17c7c:	ldr	r3, [r4, #12]
   17c80:	pop	{r4, lr}
   17c84:	ldrh	r2, [r3, #8]
   17c88:	ldrh	r1, [r3, #10]
   17c8c:	ldr	r0, [r3, #4]
   17c90:	mul	r1, r1, r2
   17c94:	lsl	r1, r1, #2
   17c98:	b	13a7c <g_memdup@plt>
   17c9c:	andeq	sl, r1, r0, asr #20
   17ca0:	push	{r4, r5, r6, lr}
   17ca4:	mov	r4, r0
   17ca8:	mov	r6, r1
   17cac:	mov	r5, r2
   17cb0:	bl	17920 <g_io_channel_unref@plt+0x3700>
   17cb4:	cmp	r4, #0
   17cb8:	beq	17ce8 <g_io_channel_unref@plt+0x3ac8>
   17cbc:	ldr	r3, [r4]
   17cc0:	cmp	r3, #0
   17cc4:	beq	17cd4 <g_io_channel_unref@plt+0x3ab4>
   17cc8:	ldr	r3, [r3]
   17ccc:	cmp	r0, r3
   17cd0:	beq	17d00 <g_io_channel_unref@plt+0x3ae0>
   17cd4:	mov	r1, r0
   17cd8:	mov	r0, r4
   17cdc:	bl	13e78 <g_type_check_instance_is_a@plt>
   17ce0:	cmp	r0, #0
   17ce4:	bne	17d00 <g_io_channel_unref@plt+0x3ae0>
   17ce8:	movw	r2, #43760	; 0xaaf0
   17cec:	mov	r0, #0
   17cf0:	movt	r2, #1
   17cf4:	ldr	r1, [pc, #40]	; 17d24 <g_io_channel_unref@plt+0x3b04>
   17cf8:	pop	{r4, r5, r6, lr}
   17cfc:	b	137b8 <g_return_if_fail_warning@plt>
   17d00:	cmp	r6, #0
   17d04:	ldrne	r3, [r4, #12]
   17d08:	ldrhne	r3, [r3, #12]
   17d0c:	strhne	r3, [r6]
   17d10:	cmp	r5, #0
   17d14:	ldrne	r3, [r4, #12]
   17d18:	ldrhne	r3, [r3, #14]
   17d1c:	strhne	r3, [r5]
   17d20:	pop	{r4, r5, r6, pc}
   17d24:	andeq	sl, r1, ip, asr sl
   17d28:	push	{r4, r5, r6, lr}
   17d2c:	mov	r4, r0
   17d30:	mov	r6, r1
   17d34:	mov	r5, r2
   17d38:	bl	17920 <g_io_channel_unref@plt+0x3700>
   17d3c:	cmp	r4, #0
   17d40:	beq	17d70 <g_io_channel_unref@plt+0x3b50>
   17d44:	ldr	r3, [r4]
   17d48:	cmp	r3, #0
   17d4c:	beq	17d5c <g_io_channel_unref@plt+0x3b3c>
   17d50:	ldr	r3, [r3]
   17d54:	cmp	r0, r3
   17d58:	beq	17d88 <g_io_channel_unref@plt+0x3b68>
   17d5c:	mov	r1, r0
   17d60:	mov	r0, r4
   17d64:	bl	13e78 <g_type_check_instance_is_a@plt>
   17d68:	cmp	r0, #0
   17d6c:	bne	17d88 <g_io_channel_unref@plt+0x3b68>
   17d70:	movw	r2, #43760	; 0xaaf0
   17d74:	mov	r0, #0
   17d78:	movt	r2, #1
   17d7c:	ldr	r1, [pc, #40]	; 17dac <g_io_channel_unref@plt+0x3b8c>
   17d80:	pop	{r4, r5, r6, lr}
   17d84:	b	137b8 <g_return_if_fail_warning@plt>
   17d88:	cmp	r6, #0
   17d8c:	ldrne	r3, [r4, #12]
   17d90:	ldrhne	r3, [r3, #8]
   17d94:	strhne	r3, [r6]
   17d98:	cmp	r5, #0
   17d9c:	ldrne	r3, [r4, #12]
   17da0:	ldrhne	r3, [r3, #10]
   17da4:	strhne	r3, [r5]
   17da8:	pop	{r4, r5, r6, pc}
   17dac:	andeq	sl, r1, r4, ror sl
   17db0:	ldr	r3, [r2, #12]
   17db4:	push	{r4, lr}
   17db8:	mov	r4, r2
   17dbc:	ldr	r0, [r3]
   17dc0:	bl	13a10 <g_hash_table_remove_all@plt>
   17dc4:	ldr	r3, [r4, #12]
   17dc8:	mov	r2, #0
   17dcc:	str	r2, [r3, #4]
   17dd0:	pop	{r4, pc}
   17dd4:	push	{r4, r5, r6, r7, lr}
   17dd8:	mov	r5, r0
   17ddc:	sub	sp, sp, #12
   17de0:	mov	r0, r1
   17de4:	bl	13ce0 <XFixesGetCursorImage@plt>
   17de8:	subs	r4, r0, #0
   17dec:	beq	17e6c <g_io_channel_unref@plt+0x3c4c>
   17df0:	ldrh	r3, [r4, #4]
   17df4:	ldrh	r1, [r4, #6]
   17df8:	ldr	r0, [r4, #16]
   17dfc:	ldr	r7, [r5, #12]
   17e00:	mul	r1, r1, r3
   17e04:	lsl	r1, r1, #2
   17e08:	bl	13a7c <g_memdup@plt>
   17e0c:	ldrh	ip, [r4, #8]
   17e10:	ldrh	r2, [r4, #4]
   17e14:	ldrh	r3, [r4, #6]
   17e18:	mov	r1, r0
   17e1c:	ldr	r0, [r4, #24]
   17e20:	str	ip, [sp]
   17e24:	ldrh	ip, [r4, #10]
   17e28:	str	ip, [sp, #4]
   17e2c:	bl	17a20 <g_io_channel_unref@plt+0x3800>
   17e30:	subs	r6, r0, #0
   17e34:	beq	17e58 <g_io_channel_unref@plt+0x3c38>
   17e38:	ldr	r3, [r5, #12]
   17e3c:	ldr	r0, [r4, #24]
   17e40:	ldr	r5, [r3]
   17e44:	bl	13ad0 <g_strdup@plt>
   17e48:	mov	r2, r6
   17e4c:	mov	r1, r0
   17e50:	mov	r0, r5
   17e54:	bl	13ae8 <g_hash_table_insert@plt>
   17e58:	str	r6, [r7, #4]
   17e5c:	mov	r0, r4
   17e60:	add	sp, sp, #12
   17e64:	pop	{r4, r5, r6, r7, lr}
   17e68:	b	13e00 <XFree@plt>
   17e6c:	add	sp, sp, #12
   17e70:	pop	{r4, r5, r6, r7, pc}
   17e74:	push	{r4, r5, lr}
   17e78:	sub	sp, sp, #28
   17e7c:	mov	r5, r0
   17e80:	bl	14058 <g_type_class_peek_parent@plt>
   17e84:	movw	r4, #50972	; 0xc71c
   17e88:	movt	r4, #2
   17e8c:	ldr	r3, [r4, #4]
   17e90:	cmp	r3, #0
   17e94:	str	r0, [r4]
   17e98:	beq	17ea8 <g_io_channel_unref@plt+0x3c88>
   17e9c:	mov	r0, r5
   17ea0:	add	r1, r4, #4
   17ea4:	bl	13824 <g_type_class_adjust_private_offset@plt>
   17ea8:	mov	r1, #80	; 0x50
   17eac:	mov	r0, r5
   17eb0:	bl	14154 <g_type_check_class_cast@plt>
   17eb4:	movw	r3, #32992	; 0x80e0
   17eb8:	movt	r3, #1
   17ebc:	str	r3, [r0, #24]
   17ec0:	movw	r0, #42044	; 0xa43c
   17ec4:	movt	r0, #1
   17ec8:	bl	13cd4 <g_intern_static_string@plt>
   17ecc:	ldr	r1, [r5]
   17ed0:	mov	r3, #0
   17ed4:	mov	ip, #4
   17ed8:	str	r3, [sp]
   17edc:	movw	r2, #14576	; 0x38f0
   17ee0:	str	ip, [sp, #12]
   17ee4:	movt	r2, #1
   17ee8:	mov	ip, #64	; 0x40
   17eec:	str	r2, [sp, #8]
   17ef0:	str	r3, [sp, #4]
   17ef4:	mov	r2, #1
   17ef8:	str	ip, [sp, #20]
   17efc:	str	r2, [sp, #16]
   17f00:	mov	r2, #2
   17f04:	bl	13b60 <g_signal_new@plt>
   17f08:	mov	r1, #8
   17f0c:	str	r0, [r4, #8]
   17f10:	mov	r0, r5
   17f14:	add	sp, sp, #28
   17f18:	pop	{r4, r5, lr}
   17f1c:	b	13e24 <g_type_class_add_private@plt>
   17f20:	push	{r4, r5, r6, lr}
   17f24:	mov	r4, r0
   17f28:	bl	15708 <g_io_channel_unref@plt+0x14e8>
   17f2c:	mov	r1, r4
   17f30:	mov	r5, r0
   17f34:	bl	13e18 <XcursorLibraryLoadCursor@plt>
   17f38:	subs	r6, r0, #0
   17f3c:	popeq	{r4, r5, r6, pc}
   17f40:	mov	r0, r5
   17f44:	mov	r1, r6
   17f48:	mov	r2, r4
   17f4c:	bl	13dd0 <XFixesChangeCursorByName@plt>
   17f50:	mov	r0, r5
   17f54:	mov	r1, r6
   17f58:	pop	{r4, r5, r6, lr}
   17f5c:	b	13cec <XFreeCursor@plt>
   17f60:	push	{r4, r5, lr}
   17f64:	movw	r4, #50972	; 0xc71c
   17f68:	dmb	sy
   17f6c:	movt	r4, #2
   17f70:	sub	sp, sp, #20
   17f74:	ldr	r5, [r4, #12]
   17f78:	dmb	sy
   17f7c:	cmp	r5, #0
   17f80:	beq	17f90 <g_io_channel_unref@plt+0x3d70>
   17f84:	ldr	r0, [r4, #12]
   17f88:	add	sp, sp, #20
   17f8c:	pop	{r4, r5, pc}
   17f90:	add	r0, r4, #12
   17f94:	bl	13c5c <g_once_init_enter@plt>
   17f98:	cmp	r0, #0
   17f9c:	beq	17f84 <g_io_channel_unref@plt+0x3d64>
   17fa0:	movw	r0, #43920	; 0xab90
   17fa4:	movt	r0, #1
   17fa8:	bl	13cd4 <g_intern_static_string@plt>
   17fac:	str	r5, [sp, #8]
   17fb0:	mov	r2, #16
   17fb4:	movw	r3, #32744	; 0x7fe8
   17fb8:	movt	r3, #1
   17fbc:	stm	sp, {r2, r3}
   17fc0:	mov	r2, #68	; 0x44
   17fc4:	movw	r3, #32372	; 0x7e74
   17fc8:	movt	r3, #1
   17fcc:	mov	r1, r0
   17fd0:	mov	r0, #80	; 0x50
   17fd4:	bl	137dc <g_type_register_static_simple@plt>
   17fd8:	mov	r1, r0
   17fdc:	add	r0, r4, #12
   17fe0:	bl	13fec <g_once_init_leave@plt>
   17fe4:	b	17f84 <g_io_channel_unref@plt+0x3d64>
   17fe8:	push	{r4, r5, r6, r7, lr}
   17fec:	sub	sp, sp, #12
   17ff0:	mov	r4, r0
   17ff4:	bl	17f60 <g_io_channel_unref@plt+0x3d40>
   17ff8:	mov	r1, r0
   17ffc:	mov	r0, r4
   18000:	bl	13c14 <g_type_instance_get_private@plt>
   18004:	movw	r1, #14612	; 0x3914
   18008:	movw	r2, #15704	; 0x3d58
   1800c:	movt	r1, #1
   18010:	movt	r2, #1
   18014:	movw	r3, #16316	; 0x3fbc
   18018:	movt	r3, #1
   1801c:	mov	r5, r0
   18020:	str	r0, [r4, #12]
   18024:	movw	r0, #15680	; 0x3d40
   18028:	movt	r0, #1
   1802c:	bl	13aac <g_hash_table_new_full@plt>
   18030:	str	r0, [r5]
   18034:	bl	15708 <g_io_channel_unref@plt+0x14e8>
   18038:	ldr	r1, [pc, #156]	; 180dc <g_io_channel_unref@plt+0x3ebc>
   1803c:	add	r2, r1, #4
   18040:	mov	r6, r0
   18044:	bl	13cc8 <XFixesQueryExtension@plt>
   18048:	cmp	r0, #0
   1804c:	beq	18064 <g_io_channel_unref@plt+0x3e44>
   18050:	bl	139e0 <gdk_x11_get_default_root_xwindow@plt>
   18054:	mov	r2, #1
   18058:	mov	r1, r0
   1805c:	mov	r0, r6
   18060:	bl	13c80 <XFixesSelectCursorInput@plt>
   18064:	mov	r2, r4
   18068:	mov	r0, #0
   1806c:	movw	r1, #33416	; 0x8288
   18070:	movt	r1, #1
   18074:	bl	13854 <gdk_window_add_filter@plt>
   18078:	mov	r5, #0
   1807c:	bl	13b0c <gtk_settings_get_default@plt>
   18080:	mov	r3, r4
   18084:	str	r5, [sp]
   18088:	movw	r1, #43936	; 0xaba0
   1808c:	str	r5, [sp, #4]
   18090:	movt	r1, #1
   18094:	movw	r2, #32176	; 0x7db0
   18098:	movt	r2, #1
   1809c:	mov	r7, r0
   180a0:	bl	13c50 <g_signal_connect_data@plt>
   180a4:	str	r5, [sp]
   180a8:	mov	r0, r7
   180ac:	str	r5, [sp, #4]
   180b0:	mov	r3, r4
   180b4:	movw	r1, #43968	; 0xabc0
   180b8:	movw	r2, #32176	; 0x7db0
   180bc:	movt	r1, #1
   180c0:	movt	r2, #1
   180c4:	bl	13c50 <g_signal_connect_data@plt>
   180c8:	mov	r0, r4
   180cc:	mov	r1, r6
   180d0:	add	sp, sp, #12
   180d4:	pop	{r4, r5, r6, r7, lr}
   180d8:	b	17dd4 <g_io_channel_unref@plt+0x3bb4>
   180dc:	andeq	ip, r2, ip, lsr #14
   180e0:	push	{r3, r4, r5, lr}
   180e4:	mov	r4, r0
   180e8:	bl	17f60 <g_io_channel_unref@plt+0x3d40>
   180ec:	mov	r1, r0
   180f0:	mov	r0, r4
   180f4:	bl	13938 <g_type_check_instance_cast@plt>
   180f8:	mov	r2, r4
   180fc:	movw	r1, #33416	; 0x8288
   18100:	movt	r1, #1
   18104:	ldr	r5, [r0, #12]
   18108:	mov	r0, #0
   1810c:	bl	137e8 <gdk_window_remove_filter@plt>
   18110:	ldr	r0, [r5]
   18114:	bl	14070 <g_hash_table_destroy@plt>
   18118:	movw	r3, #50972	; 0xc71c
   1811c:	movt	r3, #2
   18120:	mov	r1, #80	; 0x50
   18124:	ldr	r0, [r3]
   18128:	bl	14154 <g_type_check_class_cast@plt>
   1812c:	ldr	r3, [r0, #24]
   18130:	mov	r0, r4
   18134:	blx	r3
   18138:	pop	{r3, r4, r5, pc}
   1813c:	push	{r3, r4, r5, lr}
   18140:	movw	r4, #50972	; 0xc71c
   18144:	movt	r4, #2
   18148:	ldr	r5, [r4, #24]
   1814c:	cmp	r5, #0
   18150:	beq	1815c <g_io_channel_unref@plt+0x3f3c>
   18154:	mov	r0, r5
   18158:	pop	{r3, r4, r5, pc}
   1815c:	bl	17f60 <g_io_channel_unref@plt+0x3d40>
   18160:	mov	r1, r5
   18164:	bl	13728 <g_object_new@plt>
   18168:	mov	r1, #80	; 0x50
   1816c:	str	r0, [r4, #24]
   18170:	bl	13938 <g_type_check_instance_cast@plt>
   18174:	add	r1, r4, #24
   18178:	bl	13734 <g_object_add_weak_pointer@plt>
   1817c:	ldr	r0, [r4, #24]
   18180:	pop	{r3, r4, r5, pc}
   18184:	push	{r4, lr}
   18188:	mov	r4, r0
   1818c:	bl	17f60 <g_io_channel_unref@plt+0x3d40>
   18190:	cmp	r4, #0
   18194:	beq	181c4 <g_io_channel_unref@plt+0x3fa4>
   18198:	ldr	r3, [r4]
   1819c:	cmp	r3, #0
   181a0:	beq	181b0 <g_io_channel_unref@plt+0x3f90>
   181a4:	ldr	r3, [r3]
   181a8:	cmp	r0, r3
   181ac:	beq	181e4 <g_io_channel_unref@plt+0x3fc4>
   181b0:	mov	r1, r0
   181b4:	mov	r0, r4
   181b8:	bl	13e78 <g_type_check_instance_is_a@plt>
   181bc:	cmp	r0, #0
   181c0:	bne	181e4 <g_io_channel_unref@plt+0x3fc4>
   181c4:	movw	r1, #43784	; 0xab08
   181c8:	movw	r2, #44000	; 0xabe0
   181cc:	movt	r1, #1
   181d0:	movt	r2, #1
   181d4:	mov	r0, #0
   181d8:	bl	137b8 <g_return_if_fail_warning@plt>
   181dc:	mov	r0, #0
   181e0:	pop	{r4, pc}
   181e4:	ldr	r3, [r4, #12]
   181e8:	ldr	r0, [r3, #4]
   181ec:	cmp	r0, #0
   181f0:	beq	181dc <g_io_channel_unref@plt+0x3fbc>
   181f4:	pop	{r4, lr}
   181f8:	b	1374c <g_object_ref@plt>
   181fc:	push	{r3, r4, r5, lr}
   18200:	mov	r4, r0
   18204:	mov	r5, r1
   18208:	bl	17f60 <g_io_channel_unref@plt+0x3d40>
   1820c:	cmp	r4, #0
   18210:	beq	18240 <g_io_channel_unref@plt+0x4020>
   18214:	ldr	r3, [r4]
   18218:	cmp	r3, #0
   1821c:	beq	1822c <g_io_channel_unref@plt+0x400c>
   18220:	ldr	r3, [r3]
   18224:	cmp	r0, r3
   18228:	beq	1825c <g_io_channel_unref@plt+0x403c>
   1822c:	mov	r1, r0
   18230:	mov	r0, r4
   18234:	bl	13e78 <g_type_check_instance_is_a@plt>
   18238:	cmp	r0, #0
   1823c:	bne	1825c <g_io_channel_unref@plt+0x403c>
   18240:	movw	r2, #44000	; 0xabe0
   18244:	mov	r0, #0
   18248:	movt	r2, #1
   1824c:	ldr	r1, [pc, #48]	; 18284 <g_io_channel_unref@plt+0x4064>
   18250:	bl	137b8 <g_return_if_fail_warning@plt>
   18254:	mov	r0, #0
   18258:	pop	{r3, r4, r5, pc}
   1825c:	cmp	r5, #0
   18260:	beq	18254 <g_io_channel_unref@plt+0x4034>
   18264:	ldrb	r3, [r5]
   18268:	cmp	r3, #0
   1826c:	beq	18254 <g_io_channel_unref@plt+0x4034>
   18270:	ldr	r3, [r4, #12]
   18274:	mov	r1, r5
   18278:	ldr	r0, [r3]
   1827c:	pop	{r3, r4, r5, lr}
   18280:	b	13c8c <g_hash_table_lookup@plt>
   18284:	andeq	sl, r1, r0, lsr fp
   18288:	push	{r4, r5, r6, r7, r8, lr}
   1828c:	movw	r4, #50972	; 0xc71c
   18290:	movt	r4, #2
   18294:	ldr	r1, [r0]
   18298:	mov	r5, r0
   1829c:	mov	r6, r2
   182a0:	ldr	r3, [r4, #16]
   182a4:	add	r3, r3, #1
   182a8:	cmp	r1, r3
   182ac:	beq	182b8 <g_io_channel_unref@plt+0x4098>
   182b0:	mov	r0, #0
   182b4:	pop	{r4, r5, r6, r7, r8, pc}
   182b8:	ldr	r1, [r0, #32]
   182bc:	cmp	r1, #0
   182c0:	beq	182b0 <g_io_channel_unref@plt+0x4090>
   182c4:	ldr	r0, [r0, #12]
   182c8:	ldr	r8, [r2, #12]
   182cc:	bl	1419c <XGetAtomName@plt>
   182d0:	mov	r7, r0
   182d4:	ldr	r0, [r8, #4]
   182d8:	cmp	r0, #0
   182dc:	beq	182f8 <g_io_channel_unref@plt+0x40d8>
   182e0:	bl	17b48 <g_io_channel_unref@plt+0x3928>
   182e4:	mov	r1, r0
   182e8:	mov	r0, r7
   182ec:	bl	13914 <g_str_equal@plt>
   182f0:	cmp	r0, #0
   182f4:	bne	18324 <g_io_channel_unref@plt+0x4104>
   182f8:	mov	r0, r6
   182fc:	mov	r1, r7
   18300:	bl	181fc <g_io_channel_unref@plt+0x3fdc>
   18304:	cmp	r0, #0
   18308:	str	r0, [r8, #4]
   1830c:	beq	18334 <g_io_channel_unref@plt+0x4114>
   18310:	mov	r0, r6
   18314:	ldr	r1, [r4, #8]
   18318:	mov	r2, #0
   1831c:	mov	r3, r7
   18320:	bl	13ac4 <g_signal_emit@plt>
   18324:	mov	r0, r7
   18328:	bl	13e00 <XFree@plt>
   1832c:	mov	r0, #0
   18330:	pop	{r4, r5, r6, r7, r8, pc}
   18334:	ldr	r1, [r5, #12]
   18338:	mov	r0, r6
   1833c:	bl	17dd4 <g_io_channel_unref@plt+0x3bb4>
   18340:	b	18310 <g_io_channel_unref@plt+0x40f0>
   18344:	push	{r4, r5, r6, r7, r8, lr}
   18348:	movw	r5, #50120	; 0xc3c8
   1834c:	movt	r5, #2
   18350:	sub	sp, sp, #16
   18354:	mov	r6, r0
   18358:	mov	r4, r1
   1835c:	ldr	r3, [r5]
   18360:	str	r3, [sp, #12]
   18364:	bl	17f60 <g_io_channel_unref@plt+0x3d40>
   18368:	cmp	r6, #0
   1836c:	mov	r1, r0
   18370:	beq	1839c <g_io_channel_unref@plt+0x417c>
   18374:	ldr	r3, [r6]
   18378:	cmp	r3, #0
   1837c:	beq	1838c <g_io_channel_unref@plt+0x416c>
   18380:	ldr	r3, [r3]
   18384:	cmp	r0, r3
   18388:	beq	183c8 <g_io_channel_unref@plt+0x41a8>
   1838c:	mov	r0, r6
   18390:	bl	13e78 <g_type_check_instance_is_a@plt>
   18394:	cmp	r0, #0
   18398:	bne	183c8 <g_io_channel_unref@plt+0x41a8>
   1839c:	movw	r2, #44000	; 0xabe0
   183a0:	mov	r0, #0
   183a4:	movt	r2, #1
   183a8:	ldr	r1, [pc, #300]	; 184dc <g_io_channel_unref@plt+0x42bc>
   183ac:	bl	137b8 <g_return_if_fail_warning@plt>
   183b0:	ldr	r2, [sp, #12]
   183b4:	ldr	r3, [r5]
   183b8:	cmp	r2, r3
   183bc:	bne	184d8 <g_io_channel_unref@plt+0x42b8>
   183c0:	add	sp, sp, #16
   183c4:	pop	{r4, r5, r6, r7, r8, pc}
   183c8:	bl	17920 <g_io_channel_unref@plt+0x3700>
   183cc:	cmp	r4, #0
   183d0:	mov	r1, r0
   183d4:	beq	18400 <g_io_channel_unref@plt+0x41e0>
   183d8:	ldr	r3, [r4]
   183dc:	cmp	r3, #0
   183e0:	beq	183f0 <g_io_channel_unref@plt+0x41d0>
   183e4:	ldr	r3, [r3]
   183e8:	cmp	r1, r3
   183ec:	beq	18418 <g_io_channel_unref@plt+0x41f8>
   183f0:	mov	r0, r4
   183f4:	bl	13e78 <g_type_check_instance_is_a@plt>
   183f8:	cmp	r0, #0
   183fc:	bne	18418 <g_io_channel_unref@plt+0x41f8>
   18400:	movw	r2, #43760	; 0xaaf0
   18404:	mov	r0, #0
   18408:	movt	r2, #1
   1840c:	ldr	r1, [pc, #200]	; 184dc <g_io_channel_unref@plt+0x42bc>
   18410:	bl	137b8 <g_return_if_fail_warning@plt>
   18414:	b	183b0 <g_io_channel_unref@plt+0x4190>
   18418:	bl	15708 <g_io_channel_unref@plt+0x14e8>
   1841c:	add	r1, sp, #4
   18420:	add	r2, sp, #6
   18424:	mov	r8, r0
   18428:	mov	r0, r4
   1842c:	bl	17d28 <g_io_channel_unref@plt+0x3b08>
   18430:	ldrh	r0, [sp, #4]
   18434:	ldrh	r1, [sp, #6]
   18438:	bl	13ecc <XcursorImageCreate@plt>
   1843c:	subs	r6, r0, #0
   18440:	beq	183b0 <g_io_channel_unref@plt+0x4190>
   18444:	mov	r0, r4
   18448:	add	r1, sp, #8
   1844c:	add	r2, sp, #10
   18450:	bl	17ca0 <g_io_channel_unref@plt+0x3a80>
   18454:	ldrh	r2, [sp, #8]
   18458:	ldrh	r3, [sp, #10]
   1845c:	mov	r1, #0
   18460:	mov	r0, r4
   18464:	str	r1, [r6, #24]
   18468:	str	r2, [r6, #16]
   1846c:	str	r3, [r6, #20]
   18470:	bl	17bb4 <g_io_channel_unref@plt+0x3994>
   18474:	mov	r1, r6
   18478:	str	r0, [r6, #28]
   1847c:	mov	r0, r8
   18480:	bl	1383c <XcursorImageLoadCursor@plt>
   18484:	mov	r7, r0
   18488:	mov	r0, r6
   1848c:	bl	13f98 <XcursorImageDestroy@plt>
   18490:	cmp	r7, #0
   18494:	beq	183b0 <g_io_channel_unref@plt+0x4190>
   18498:	mov	r0, r4
   1849c:	bl	17b48 <g_io_channel_unref@plt+0x3928>
   184a0:	mov	r1, r7
   184a4:	mov	r4, r0
   184a8:	mov	r0, r8
   184ac:	mov	r2, r4
   184b0:	bl	13b24 <XFixesSetCursorName@plt>
   184b4:	mov	r0, r8
   184b8:	mov	r1, r7
   184bc:	mov	r2, r4
   184c0:	bl	13dd0 <XFixesChangeCursorByName@plt>
   184c4:	mov	r1, r7
   184c8:	mov	r0, r8
   184cc:	bl	13cec <XFreeCursor@plt>
   184d0:	bl	13e9c <gdk_flush@plt>
   184d4:	b	183b0 <g_io_channel_unref@plt+0x4190>
   184d8:	bl	13d1c <__stack_chk_fail@plt>
   184dc:	andeq	sl, r1, r0, asr fp
   184e0:	push	{r4, lr}
   184e4:	mov	r4, r0
   184e8:	bl	17f60 <g_io_channel_unref@plt+0x3d40>
   184ec:	cmp	r4, #0
   184f0:	beq	18520 <g_io_channel_unref@plt+0x4300>
   184f4:	ldr	r3, [r4]
   184f8:	cmp	r3, #0
   184fc:	beq	1850c <g_io_channel_unref@plt+0x42ec>
   18500:	ldr	r3, [r3]
   18504:	cmp	r0, r3
   18508:	beq	18538 <g_io_channel_unref@plt+0x4318>
   1850c:	mov	r1, r0
   18510:	mov	r0, r4
   18514:	bl	13e78 <g_type_check_instance_is_a@plt>
   18518:	cmp	r0, #0
   1851c:	bne	18538 <g_io_channel_unref@plt+0x4318>
   18520:	movw	r2, #44000	; 0xabe0
   18524:	mov	r0, #0
   18528:	movt	r2, #1
   1852c:	ldr	r1, [pc, #32]	; 18554 <g_io_channel_unref@plt+0x4334>
   18530:	pop	{r4, lr}
   18534:	b	137b8 <g_return_if_fail_warning@plt>
   18538:	ldr	r3, [r4, #12]
   1853c:	mov	r2, r4
   18540:	movw	r1, #32544	; 0x7f20
   18544:	movt	r1, #1
   18548:	pop	{r4, lr}
   1854c:	ldr	r0, [r3]
   18550:	b	140e8 <g_hash_table_foreach@plt>
   18554:	andeq	sl, r1, r0, ror fp
   18558:	push	{r4, r5, r6, r7, r8, r9, lr}
   1855c:	movw	r6, #50120	; 0xc3c8
   18560:	movt	r6, #2
   18564:	sub	sp, sp, #76	; 0x4c
   18568:	mov	r4, r0
   1856c:	ldr	r7, [r0, #12]
   18570:	ldr	r3, [r6]
   18574:	movw	r5, #51000	; 0xc738
   18578:	movt	r5, #2
   1857c:	str	r3, [sp, #68]	; 0x44
   18580:	bl	15708 <g_io_channel_unref@plt+0x14e8>
   18584:	mov	r8, r0
   18588:	bl	15718 <g_io_channel_unref@plt+0x14f8>
   1858c:	mov	r0, r8
   18590:	bl	13ef0 <XDefaultRootWindow@plt>
   18594:	add	r3, sp, #32
   18598:	add	r2, sp, #36	; 0x24
   1859c:	str	r3, [sp]
   185a0:	str	r2, [sp, #4]
   185a4:	add	r3, sp, #40	; 0x28
   185a8:	add	r2, sp, #44	; 0x2c
   185ac:	str	r3, [sp, #8]
   185b0:	str	r2, [sp, #12]
   185b4:	add	r3, sp, #48	; 0x30
   185b8:	add	r2, sp, #24
   185bc:	str	r3, [sp, #16]
   185c0:	add	r3, sp, #28
   185c4:	mov	r1, r0
   185c8:	mov	r0, r8
   185cc:	bl	13d34 <XQueryPointer@plt>
   185d0:	bl	1571c <g_io_channel_unref@plt+0x14fc>
   185d4:	ldr	r1, [r4, #12]
   185d8:	ldr	ip, [sp, #48]	; 0x30
   185dc:	ldr	r3, [r1, #8]
   185e0:	eor	r2, ip, r3
   185e4:	ands	r0, r2, #7936	; 0x1f00
   185e8:	beq	18650 <g_io_channel_unref@plt+0x4430>
   185ec:	tst	ip, #256	; 0x100
   185f0:	beq	186e8 <g_io_channel_unref@plt+0x44c8>
   185f4:	tst	r3, #256	; 0x100
   185f8:	bne	186c8 <g_io_channel_unref@plt+0x44a8>
   185fc:	mov	lr, #1
   18600:	orr	r3, r3, #256	; 0x100
   18604:	str	r3, [r1, #8]
   18608:	mov	ip, #1
   1860c:	ldr	r9, [r1]
   18610:	mov	r0, r4
   18614:	ldr	r8, [r1, #4]
   18618:	mov	r2, #0
   1861c:	ldr	r1, [r5, #4]
   18620:	add	r3, sp, #52	; 0x34
   18624:	str	ip, [sp, #52]	; 0x34
   18628:	str	r9, [sp, #56]	; 0x38
   1862c:	str	r8, [sp, #60]	; 0x3c
   18630:	str	lr, [sp, #64]	; 0x40
   18634:	bl	13ac4 <g_signal_emit@plt>
   18638:	ldr	r1, [r4, #12]
   1863c:	ldr	ip, [sp, #48]	; 0x30
   18640:	ldr	r3, [r1, #8]
   18644:	eor	r2, ip, r3
   18648:	ands	r0, r2, #7936	; 0x1f00
   1864c:	bne	185ec <g_io_channel_unref@plt+0x43cc>
   18650:	ldr	ip, [sp, #32]
   18654:	ldr	r3, [r7]
   18658:	ldr	r5, [sp, #36]	; 0x24
   1865c:	cmp	r3, ip
   18660:	bne	18670 <g_io_channel_unref@plt+0x4450>
   18664:	ldr	r3, [r7, #4]
   18668:	cmp	r3, r5
   1866c:	beq	186b0 <g_io_channel_unref@plt+0x4490>
   18670:	movw	r3, #51000	; 0xc738
   18674:	movt	r3, #2
   18678:	mov	lr, #0
   1867c:	mov	r0, r4
   18680:	ldr	r1, [r3]
   18684:	mov	r2, lr
   18688:	add	r3, sp, #52	; 0x34
   1868c:	str	ip, [sp, #56]	; 0x38
   18690:	str	r5, [sp, #60]	; 0x3c
   18694:	str	lr, [sp, #52]	; 0x34
   18698:	str	lr, [sp, #64]	; 0x40
   1869c:	bl	13ac4 <g_signal_emit@plt>
   186a0:	ldr	r2, [sp, #32]
   186a4:	mov	r0, #1
   186a8:	ldr	r3, [sp, #36]	; 0x24
   186ac:	stm	r7, {r2, r3}
   186b0:	ldr	r2, [sp, #68]	; 0x44
   186b4:	ldr	r3, [r6]
   186b8:	cmp	r2, r3
   186bc:	bne	187c4 <g_io_channel_unref@plt+0x45a4>
   186c0:	add	sp, sp, #76	; 0x4c
   186c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   186c8:	tst	ip, #512	; 0x200
   186cc:	beq	1875c <g_io_channel_unref@plt+0x453c>
   186d0:	tst	r3, #512	; 0x200
   186d4:	bne	18704 <g_io_channel_unref@plt+0x44e4>
   186d8:	orr	r3, r3, #512	; 0x200
   186dc:	mov	lr, #2
   186e0:	str	r3, [r1, #8]
   186e4:	b	18608 <g_io_channel_unref@plt+0x43e8>
   186e8:	tst	r3, #256	; 0x100
   186ec:	beq	186c8 <g_io_channel_unref@plt+0x44a8>
   186f0:	mov	lr, #1
   186f4:	bic	r3, r3, #256	; 0x100
   186f8:	str	r3, [r1, #8]
   186fc:	mov	ip, #2
   18700:	b	1860c <g_io_channel_unref@plt+0x43ec>
   18704:	tst	ip, #1024	; 0x400
   18708:	beq	18774 <g_io_channel_unref@plt+0x4554>
   1870c:	tst	r3, #1024	; 0x400
   18710:	beq	1878c <g_io_channel_unref@plt+0x456c>
   18714:	tst	ip, #2048	; 0x800
   18718:	beq	18734 <g_io_channel_unref@plt+0x4514>
   1871c:	tst	r3, #2048	; 0x800
   18720:	bne	1873c <g_io_channel_unref@plt+0x451c>
   18724:	orr	r3, r3, #2048	; 0x800
   18728:	mov	lr, #4
   1872c:	str	r3, [r1, #8]
   18730:	b	18608 <g_io_channel_unref@plt+0x43e8>
   18734:	tst	r3, #2048	; 0x800
   18738:	bne	187b4 <g_io_channel_unref@plt+0x4594>
   1873c:	tst	ip, #4096	; 0x1000
   18740:	bne	1879c <g_io_channel_unref@plt+0x457c>
   18744:	tst	r3, #4096	; 0x1000
   18748:	beq	185e4 <g_io_channel_unref@plt+0x43c4>
   1874c:	bic	r3, r3, #4096	; 0x1000
   18750:	mov	lr, #5
   18754:	str	r3, [r1, #8]
   18758:	b	186fc <g_io_channel_unref@plt+0x44dc>
   1875c:	tst	r3, #512	; 0x200
   18760:	beq	18704 <g_io_channel_unref@plt+0x44e4>
   18764:	bic	r3, r3, #512	; 0x200
   18768:	mov	lr, #2
   1876c:	str	r3, [r1, #8]
   18770:	b	186fc <g_io_channel_unref@plt+0x44dc>
   18774:	tst	r3, #1024	; 0x400
   18778:	beq	18714 <g_io_channel_unref@plt+0x44f4>
   1877c:	bic	r3, r3, #1024	; 0x400
   18780:	mov	lr, #3
   18784:	str	r3, [r1, #8]
   18788:	b	186fc <g_io_channel_unref@plt+0x44dc>
   1878c:	orr	r3, r3, #1024	; 0x400
   18790:	mov	lr, #3
   18794:	str	r3, [r1, #8]
   18798:	b	18608 <g_io_channel_unref@plt+0x43e8>
   1879c:	tst	r3, #4096	; 0x1000
   187a0:	bne	185e4 <g_io_channel_unref@plt+0x43c4>
   187a4:	orr	r3, r3, #4096	; 0x1000
   187a8:	mov	lr, #5
   187ac:	str	r3, [r1, #8]
   187b0:	b	18608 <g_io_channel_unref@plt+0x43e8>
   187b4:	bic	r3, r3, #2048	; 0x800
   187b8:	mov	lr, #4
   187bc:	str	r3, [r1, #8]
   187c0:	b	186fc <g_io_channel_unref@plt+0x44dc>
   187c4:	bl	13d1c <__stack_chk_fail@plt>
   187c8:	b	13d58 <g_free@plt>
   187cc:	mov	r1, #16
   187d0:	b	13a7c <g_memdup@plt>
   187d4:	push	{r4, lr}
   187d8:	mov	r4, r0
   187dc:	bl	18558 <g_io_channel_unref@plt+0x4338>
   187e0:	cmp	r0, #0
   187e4:	bne	187f0 <g_io_channel_unref@plt+0x45d0>
   187e8:	mov	r0, #1
   187ec:	pop	{r4, pc}
   187f0:	mov	r2, r4
   187f4:	movw	r1, #34828	; 0x880c
   187f8:	mov	r0, #20
   187fc:	movt	r1, #1
   18800:	bl	13830 <g_timeout_add@plt>
   18804:	mov	r0, #0
   18808:	pop	{r4, pc}
   1880c:	push	{r3, r4, r5, lr}
   18810:	mov	r4, r0
   18814:	bl	18558 <g_io_channel_unref@plt+0x4338>
   18818:	subs	r5, r0, #0
   1881c:	beq	18828 <g_io_channel_unref@plt+0x4608>
   18820:	mov	r0, #1
   18824:	pop	{r3, r4, r5, pc}
   18828:	mov	r2, r4
   1882c:	movw	r1, #34772	; 0x87d4
   18830:	mov	r0, #100	; 0x64
   18834:	movt	r1, #1
   18838:	bl	13830 <g_timeout_add@plt>
   1883c:	mov	r0, r5
   18840:	pop	{r3, r4, r5, pc}
   18844:	push	{r4, r5, r6, r7, r8, r9, lr}
   18848:	movw	r4, #50120	; 0xc3c8
   1884c:	ldr	ip, [r0]
   18850:	movt	r4, #2
   18854:	sub	sp, sp, #28
   18858:	mov	r5, r0
   1885c:	sub	r1, ip, #4
   18860:	ldr	r3, [r4]
   18864:	cmp	r1, #1
   18868:	str	r3, [sp, #20]
   1886c:	bls	1888c <g_io_channel_unref@plt+0x466c>
   18870:	ldr	r2, [sp, #20]
   18874:	mov	r0, #0
   18878:	ldr	r3, [r4]
   1887c:	cmp	r2, r3
   18880:	bne	18950 <g_io_channel_unref@plt+0x4730>
   18884:	add	sp, sp, #28
   18888:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1888c:	ldr	lr, [r0, #52]	; 0x34
   18890:	ldr	r6, [r2, #12]
   18894:	sub	r3, lr, #1
   18898:	ldr	r7, [r0, #48]	; 0x30
   1889c:	cmp	r3, #4
   188a0:	ldrls	pc, [pc, r3, lsl #2]
   188a4:	b	188c0 <g_io_channel_unref@plt+0x46a0>
   188a8:	andeq	r8, r1, r8, asr #18
   188ac:	andeq	r8, r1, r0, asr #18
   188b0:	andeq	r8, r1, r8, lsr r9
   188b4:	andeq	r8, r1, r0, lsr r9
   188b8:			; <UNDEFINED> instruction: 0x000188bc
   188bc:	orr	r7, r7, #4096	; 0x1000
   188c0:	ldr	r9, [r5, #40]	; 0x28
   188c4:	movw	r3, #51000	; 0xc738
   188c8:	ldr	r8, [r5, #44]	; 0x2c
   188cc:	movt	r3, #2
   188d0:	cmp	ip, #4
   188d4:	mov	r0, r2
   188d8:	ldr	r1, [r3, #4]
   188dc:	mov	r2, #0
   188e0:	add	r3, sp, #4
   188e4:	movne	ip, #2
   188e8:	moveq	ip, #1
   188ec:	str	lr, [sp, #16]
   188f0:	str	ip, [sp, #4]
   188f4:	str	r9, [sp, #8]
   188f8:	str	r8, [sp, #12]
   188fc:	bl	13ac4 <g_signal_emit@plt>
   18900:	ldr	r2, [r5, #40]	; 0x28
   18904:	ldr	r1, [r6, #8]
   18908:	ldr	r3, [r5, #44]	; 0x2c
   1890c:	eor	r1, r7, r1
   18910:	ldr	r0, [r5, #12]
   18914:	tst	r1, #7936	; 0x1f00
   18918:	mov	r1, #2
   1891c:	stm	r6, {r2, r3}
   18920:	strne	r7, [r6, #8]
   18924:	ldr	r2, [r5, #28]
   18928:	bl	13a04 <XAllowEvents@plt>
   1892c:	b	18870 <g_io_channel_unref@plt+0x4650>
   18930:	orr	r7, r7, #2048	; 0x800
   18934:	b	188c0 <g_io_channel_unref@plt+0x46a0>
   18938:	orr	r7, r7, #1024	; 0x400
   1893c:	b	188c0 <g_io_channel_unref@plt+0x46a0>
   18940:	orr	r7, r7, #512	; 0x200
   18944:	b	188c0 <g_io_channel_unref@plt+0x46a0>
   18948:	orr	r7, r7, #256	; 0x100
   1894c:	b	188c0 <g_io_channel_unref@plt+0x46a0>
   18950:	bl	13d1c <__stack_chk_fail@plt>
   18954:	push	{r4, r5, lr}
   18958:	movw	r4, #51000	; 0xc738
   1895c:	dmb	sy
   18960:	movt	r4, #2
   18964:	sub	sp, sp, #20
   18968:	ldr	r5, [r4, #8]
   1896c:	dmb	sy
   18970:	cmp	r5, #0
   18974:	beq	18984 <g_io_channel_unref@plt+0x4764>
   18978:	ldr	r0, [r4, #8]
   1897c:	add	sp, sp, #20
   18980:	pop	{r4, r5, pc}
   18984:	add	r0, r4, #8
   18988:	bl	13c5c <g_once_init_enter@plt>
   1898c:	cmp	r0, #0
   18990:	beq	18978 <g_io_channel_unref@plt+0x4758>
   18994:	movw	r0, #44032	; 0xac00
   18998:	movt	r0, #1
   1899c:	bl	13cd4 <g_intern_static_string@plt>
   189a0:	str	r5, [sp, #8]
   189a4:	mov	r2, #16
   189a8:	movw	r3, #35292	; 0x89dc
   189ac:	movt	r3, #1
   189b0:	stm	sp, {r2, r3}
   189b4:	mov	r2, #68	; 0x44
   189b8:	movw	r3, #35436	; 0x8a6c
   189bc:	movt	r3, #1
   189c0:	mov	r1, r0
   189c4:	mov	r0, #80	; 0x50
   189c8:	bl	137dc <g_type_register_static_simple@plt>
   189cc:	mov	r1, r0
   189d0:	add	r0, r4, #8
   189d4:	bl	13fec <g_once_init_leave@plt>
   189d8:	b	18978 <g_io_channel_unref@plt+0x4758>
   189dc:	push	{r4, lr}
   189e0:	mov	r4, r0
   189e4:	bl	18954 <g_io_channel_unref@plt+0x4734>
   189e8:	mov	r1, r0
   189ec:	mov	r0, r4
   189f0:	bl	13c14 <g_type_instance_get_private@plt>
   189f4:	str	r0, [r4, #12]
   189f8:	mov	r0, r4
   189fc:	pop	{r4, lr}
   18a00:	b	187d4 <g_io_channel_unref@plt+0x45b4>
   18a04:	push	{r4, lr}
   18a08:	movw	r4, #51000	; 0xc738
   18a0c:	dmb	sy
   18a10:	movt	r4, #2
   18a14:	ldr	r3, [r4, #12]
   18a18:	dmb	sy
   18a1c:	cmp	r3, #0
   18a20:	beq	18a2c <g_io_channel_unref@plt+0x480c>
   18a24:	ldr	r0, [r4, #12]
   18a28:	pop	{r4, pc}
   18a2c:	add	r0, r4, #12
   18a30:	bl	13c5c <g_once_init_enter@plt>
   18a34:	cmp	r0, #0
   18a38:	beq	18a24 <g_io_channel_unref@plt+0x4804>
   18a3c:	movw	r0, #44044	; 0xac0c
   18a40:	movt	r0, #1
   18a44:	bl	13cd4 <g_intern_static_string@plt>
   18a48:	movw	r1, #34764	; 0x87cc
   18a4c:	movw	r2, #34760	; 0x87c8
   18a50:	movt	r1, #1
   18a54:	movt	r2, #1
   18a58:	bl	13bb4 <g_boxed_type_register_static@plt>
   18a5c:	mov	r1, r0
   18a60:	add	r0, r4, #12
   18a64:	bl	13fec <g_once_init_leave@plt>
   18a68:	b	18a24 <g_io_channel_unref@plt+0x4804>
   18a6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a70:	sub	sp, sp, #28
   18a74:	mov	r6, r0
   18a78:	bl	14058 <g_type_class_peek_parent@plt>
   18a7c:	movw	r4, #51000	; 0xc738
   18a80:	movt	r4, #2
   18a84:	ldr	r3, [r4, #20]
   18a88:	cmp	r3, #0
   18a8c:	str	r0, [r4, #16]
   18a90:	beq	18aa0 <g_io_channel_unref@plt+0x4880>
   18a94:	mov	r0, r6
   18a98:	add	r1, r4, #20
   18a9c:	bl	13824 <g_type_class_adjust_private_offset@plt>
   18aa0:	mov	r1, #80	; 0x50
   18aa4:	mov	r0, r6
   18aa8:	bl	14154 <g_type_check_class_cast@plt>
   18aac:	movw	r3, #36028	; 0x8cbc
   18ab0:	movt	r3, #1
   18ab4:	mov	r5, #0
   18ab8:	mov	r8, #1
   18abc:	mov	r9, #4
   18ac0:	movw	r7, #14744	; 0x3998
   18ac4:	movt	r7, #1
   18ac8:	str	r3, [r0, #24]
   18acc:	movw	r0, #42060	; 0xa44c
   18ad0:	movt	r0, #1
   18ad4:	bl	13cd4 <g_intern_static_string@plt>
   18ad8:	mov	fp, r0
   18adc:	bl	18a04 <g_io_channel_unref@plt+0x47e4>
   18ae0:	ldr	r1, [r6]
   18ae4:	mov	r3, r5
   18ae8:	mov	r2, #2
   18aec:	str	r7, [sp, #8]
   18af0:	str	r5, [sp]
   18af4:	str	r5, [sp, #4]
   18af8:	str	r9, [sp, #12]
   18afc:	str	r8, [sp, #16]
   18b00:	orr	sl, r0, r8
   18b04:	mov	r0, fp
   18b08:	str	sl, [sp, #20]
   18b0c:	bl	13b60 <g_signal_new@plt>
   18b10:	str	r0, [r4]
   18b14:	movw	r0, #42076	; 0xa45c
   18b18:	movt	r0, #1
   18b1c:	bl	13cd4 <g_intern_static_string@plt>
   18b20:	ldr	r1, [r6]
   18b24:	mov	r3, r5
   18b28:	str	r7, [sp, #8]
   18b2c:	str	sl, [sp, #20]
   18b30:	mov	r2, #2
   18b34:	str	r5, [sp]
   18b38:	str	r5, [sp, #4]
   18b3c:	str	r9, [sp, #12]
   18b40:	str	r8, [sp, #16]
   18b44:	bl	13b60 <g_signal_new@plt>
   18b48:	mov	r1, #12
   18b4c:	str	r0, [r4, #4]
   18b50:	mov	r0, r6
   18b54:	add	sp, sp, #28
   18b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b5c:	b	13e24 <g_type_class_add_private@plt>
   18b60:	push	{r3, r4, r5, lr}
   18b64:	movw	r4, #51000	; 0xc738
   18b68:	movt	r4, #2
   18b6c:	ldr	r5, [r4, #24]
   18b70:	cmp	r5, #0
   18b74:	beq	18b80 <g_io_channel_unref@plt+0x4960>
   18b78:	mov	r0, r5
   18b7c:	pop	{r3, r4, r5, pc}
   18b80:	bl	18954 <g_io_channel_unref@plt+0x4734>
   18b84:	mov	r1, r5
   18b88:	bl	13728 <g_object_new@plt>
   18b8c:	mov	r1, #80	; 0x50
   18b90:	str	r0, [r4, #24]
   18b94:	bl	13938 <g_type_check_instance_cast@plt>
   18b98:	add	r1, r4, #24
   18b9c:	bl	13734 <g_object_add_weak_pointer@plt>
   18ba0:	ldr	r0, [r4, #24]
   18ba4:	pop	{r3, r4, r5, pc}
   18ba8:	push	{r4, r5, r6, r7, r8, lr}
   18bac:	sub	sp, sp, #24
   18bb0:	mov	r8, r0
   18bb4:	bl	15708 <g_io_channel_unref@plt+0x14e8>
   18bb8:	mov	r4, #0
   18bbc:	mov	r6, #1
   18bc0:	mov	r7, #12
   18bc4:	mov	r5, r0
   18bc8:	bl	15718 <g_io_channel_unref@plt+0x14f8>
   18bcc:	mov	r0, r5
   18bd0:	bl	13ef0 <XDefaultRootWindow@plt>
   18bd4:	mov	r1, #4
   18bd8:	mov	r2, #32768	; 0x8000
   18bdc:	str	r6, [sp]
   18be0:	str	r6, [sp, #12]
   18be4:	str	r7, [sp, #4]
   18be8:	str	r4, [sp, #8]
   18bec:	str	r4, [sp, #16]
   18bf0:	str	r4, [sp, #20]
   18bf4:	mov	r3, r0
   18bf8:	mov	r0, r5
   18bfc:	bl	140dc <XGrabButton@plt>
   18c00:	mov	r0, r5
   18c04:	bl	13ef0 <XDefaultRootWindow@plt>
   18c08:	mov	r1, #5
   18c0c:	mov	r2, #32768	; 0x8000
   18c10:	str	r7, [sp, #4]
   18c14:	str	r6, [sp]
   18c18:	str	r4, [sp, #8]
   18c1c:	str	r6, [sp, #12]
   18c20:	str	r4, [sp, #16]
   18c24:	str	r4, [sp, #20]
   18c28:	mov	r3, r0
   18c2c:	mov	r0, r5
   18c30:	bl	140dc <XGrabButton@plt>
   18c34:	bl	1571c <g_io_channel_unref@plt+0x14fc>
   18c38:	mov	r0, r4
   18c3c:	mov	r2, r8
   18c40:	movw	r1, #34884	; 0x8844
   18c44:	movt	r1, #1
   18c48:	add	sp, sp, #24
   18c4c:	pop	{r4, r5, r6, r7, r8, lr}
   18c50:	b	13854 <gdk_window_add_filter@plt>
   18c54:	push	{r3, r4, r5, lr}
   18c58:	mov	r5, r0
   18c5c:	bl	15708 <g_io_channel_unref@plt+0x14e8>
   18c60:	mov	r4, r0
   18c64:	bl	15718 <g_io_channel_unref@plt+0x14f8>
   18c68:	mov	r0, r4
   18c6c:	bl	13ef0 <XDefaultRootWindow@plt>
   18c70:	mov	r1, #4
   18c74:	mov	r2, #32768	; 0x8000
   18c78:	mov	r3, r0
   18c7c:	mov	r0, r4
   18c80:	bl	14088 <XUngrabButton@plt>
   18c84:	mov	r0, r4
   18c88:	bl	13ef0 <XDefaultRootWindow@plt>
   18c8c:	mov	r1, #5
   18c90:	mov	r2, #32768	; 0x8000
   18c94:	mov	r3, r0
   18c98:	mov	r0, r4
   18c9c:	bl	14088 <XUngrabButton@plt>
   18ca0:	bl	1571c <g_io_channel_unref@plt+0x14fc>
   18ca4:	mov	r2, r5
   18ca8:	movw	r1, #34884	; 0x8844
   18cac:	mov	r0, #0
   18cb0:	movt	r1, #1
   18cb4:	pop	{r3, r4, r5, lr}
   18cb8:	b	137e8 <gdk_window_remove_filter@plt>
   18cbc:	push	{r4, lr}
   18cc0:	mov	r4, r0
   18cc4:	bl	18954 <g_io_channel_unref@plt+0x4734>
   18cc8:	mov	r1, r0
   18ccc:	mov	r0, r4
   18cd0:	bl	13938 <g_type_check_instance_cast@plt>
   18cd4:	bl	18c54 <g_io_channel_unref@plt+0x4a34>
   18cd8:	movw	r3, #51000	; 0xc738
   18cdc:	movt	r3, #2
   18ce0:	mov	r1, #80	; 0x50
   18ce4:	ldr	r0, [r3, #16]
   18ce8:	bl	14154 <g_type_check_class_cast@plt>
   18cec:	ldr	r3, [r0, #24]
   18cf0:	mov	r0, r4
   18cf4:	blx	r3
   18cf8:	pop	{r4, pc}
   18cfc:	push	{r4, r5, lr}
   18d00:	sub	sp, sp, #28
   18d04:	mov	r5, r0
   18d08:	bl	14058 <g_type_class_peek_parent@plt>
   18d0c:	movw	r4, #51028	; 0xc754
   18d10:	movt	r4, #2
   18d14:	ldr	r3, [r4, #4]
   18d18:	cmp	r3, #0
   18d1c:	str	r0, [r4]
   18d20:	beq	18d30 <g_io_channel_unref@plt+0x4b10>
   18d24:	mov	r0, r5
   18d28:	add	r1, r4, #4
   18d2c:	bl	13824 <g_type_class_adjust_private_offset@plt>
   18d30:	mov	r1, #80	; 0x50
   18d34:	mov	r0, r5
   18d38:	bl	14154 <g_type_check_class_cast@plt>
   18d3c:	movw	r3, #36788	; 0x8fb4
   18d40:	movt	r3, #1
   18d44:	str	r3, [r0, #24]
   18d48:	movw	r0, #41884	; 0xa39c
   18d4c:	movt	r0, #1
   18d50:	bl	13cd4 <g_intern_static_string@plt>
   18d54:	ldr	r1, [r5]
   18d58:	mov	r3, #0
   18d5c:	mov	ip, #4
   18d60:	str	r3, [sp]
   18d64:	movw	r2, #14204	; 0x377c
   18d68:	str	ip, [sp, #12]
   18d6c:	movt	r2, #1
   18d70:	mov	ip, #24
   18d74:	str	r2, [sp, #8]
   18d78:	str	r3, [sp, #4]
   18d7c:	mov	r2, #1
   18d80:	str	ip, [sp, #20]
   18d84:	str	r2, [sp, #16]
   18d88:	mov	r2, #2
   18d8c:	bl	13b60 <g_signal_new@plt>
   18d90:	mov	r1, #8
   18d94:	str	r0, [r4, #8]
   18d98:	mov	r0, r5
   18d9c:	add	sp, sp, #28
   18da0:	pop	{r4, r5, lr}
   18da4:	b	13e24 <g_type_class_add_private@plt>
   18da8:	push	{r4, r5, r6, r7, r8, lr}
   18dac:	movw	r5, #51028	; 0xc754
   18db0:	movt	r5, #2
   18db4:	movw	r8, #50120	; 0xc3c8
   18db8:	movt	r8, #2
   18dbc:	sub	sp, sp, #400	; 0x190
   18dc0:	ldr	r3, [r5, #12]
   18dc4:	mov	r4, r0
   18dc8:	ldr	r1, [r8]
   18dcc:	mov	r7, r2
   18dd0:	add	r3, r3, #1
   18dd4:	str	r3, [r5, #12]
   18dd8:	cmp	r3, #1
   18ddc:	str	r1, [sp, #396]	; 0x18c
   18de0:	beq	18e7c <g_io_channel_unref@plt+0x4c5c>
   18de4:	add	r6, sp, #140	; 0x8c
   18de8:	mov	r0, r4
   18dec:	mov	r2, #256	; 0x100
   18df0:	mov	r4, #0
   18df4:	mov	r1, r6
   18df8:	str	r4, [sp]
   18dfc:	add	r3, sp, #8
   18e00:	bl	13bc0 <g_io_channel_read_chars@plt>
   18e04:	cmp	r0, #1
   18e08:	beq	18e48 <g_io_channel_unref@plt+0x4c28>
   18e0c:	ldr	r2, [r5, #12]
   18e10:	sub	r2, r2, #1
   18e14:	str	r2, [r5, #12]
   18e18:	cmp	r2, #0
   18e1c:	bne	18e2c <g_io_channel_unref@plt+0x4c0c>
   18e20:	mov	r0, #2
   18e24:	ldr	r1, [pc, #112]	; 18e9c <g_io_channel_unref@plt+0x4c7c>
   18e28:	bl	14190 <sigprocmask@plt>
   18e2c:	ldr	r2, [sp, #396]	; 0x18c
   18e30:	mov	r0, #1
   18e34:	ldr	r3, [r8]
   18e38:	cmp	r2, r3
   18e3c:	bne	18e98 <g_io_channel_unref@plt+0x4c78>
   18e40:	add	sp, sp, #400	; 0x190
   18e44:	pop	{r4, r5, r6, r7, r8, pc}
   18e48:	ldr	r3, [sp, #8]
   18e4c:	cmp	r3, #0
   18e50:	beq	18e0c <g_io_channel_unref@plt+0x4bec>
   18e54:	ldrb	r3, [r6, r4]
   18e58:	mov	r0, r7
   18e5c:	ldr	r1, [r5, #8]
   18e60:	mov	r2, #0
   18e64:	bl	13ac4 <g_signal_emit@plt>
   18e68:	ldr	r3, [sp, #8]
   18e6c:	add	r4, r4, #1
   18e70:	cmp	r4, r3
   18e74:	bcc	18e54 <g_io_channel_unref@plt+0x4c34>
   18e78:	b	18e0c <g_io_channel_unref@plt+0x4bec>
   18e7c:	add	r0, sp, #12
   18e80:	bl	13a94 <sigfillset@plt>
   18e84:	add	r1, sp, #12
   18e88:	add	r2, r5, #16
   18e8c:	mov	r0, #0
   18e90:	bl	14190 <sigprocmask@plt>
   18e94:	b	18de4 <g_io_channel_unref@plt+0x4bc4>
   18e98:	bl	13d1c <__stack_chk_fail@plt>
   18e9c:	andeq	ip, r2, r4, ror #14
   18ea0:	push	{r4, lr}
   18ea4:	movw	r4, #50120	; 0xc3c8
   18ea8:	movt	r4, #2
   18eac:	sub	sp, sp, #8
   18eb0:	add	r1, sp, #8
   18eb4:	movw	r3, #51028	; 0xc754
   18eb8:	ldr	ip, [r4]
   18ebc:	movt	r3, #2
   18ec0:	strb	r0, [r1, #-5]!
   18ec4:	mov	r2, #1
   18ec8:	ldr	r0, [r3, #144]	; 0x90
   18ecc:	str	ip, [sp, #4]
   18ed0:	bl	14004 <write@plt>
   18ed4:	ldr	r2, [sp, #4]
   18ed8:	ldr	r3, [r4]
   18edc:	cmp	r2, r3
   18ee0:	bne	18eec <g_io_channel_unref@plt+0x4ccc>
   18ee4:	add	sp, sp, #8
   18ee8:	pop	{r4, pc}
   18eec:	bl	13d1c <__stack_chk_fail@plt>
   18ef0:	push	{r4, r5, lr}
   18ef4:	movw	r4, #51028	; 0xc754
   18ef8:	dmb	sy
   18efc:	movt	r4, #2
   18f00:	sub	sp, sp, #20
   18f04:	ldr	r5, [r4, #148]	; 0x94
   18f08:	dmb	sy
   18f0c:	cmp	r5, #0
   18f10:	beq	18f20 <g_io_channel_unref@plt+0x4d00>
   18f14:	ldr	r0, [r4, #148]	; 0x94
   18f18:	add	sp, sp, #20
   18f1c:	pop	{r4, r5, pc}
   18f20:	add	r0, r4, #148	; 0x94
   18f24:	bl	13c5c <g_once_init_enter@plt>
   18f28:	cmp	r0, #0
   18f2c:	beq	18f14 <g_io_channel_unref@plt+0x4cf4>
   18f30:	movw	r0, #44104	; 0xac48
   18f34:	movt	r0, #1
   18f38:	bl	13cd4 <g_intern_static_string@plt>
   18f3c:	str	r5, [sp, #8]
   18f40:	mov	r2, #16
   18f44:	movw	r3, #36728	; 0x8f78
   18f48:	movt	r3, #1
   18f4c:	stm	sp, {r2, r3}
   18f50:	mov	r2, #68	; 0x44
   18f54:	movw	r3, #36092	; 0x8cfc
   18f58:	movt	r3, #1
   18f5c:	mov	r1, r0
   18f60:	mov	r0, #80	; 0x50
   18f64:	bl	137dc <g_type_register_static_simple@plt>
   18f68:	mov	r1, r0
   18f6c:	add	r0, r4, #148	; 0x94
   18f70:	bl	13fec <g_once_init_leave@plt>
   18f74:	b	18f14 <g_io_channel_unref@plt+0x4cf4>
   18f78:	push	{r4, lr}
   18f7c:	mov	r4, r0
   18f80:	bl	18ef0 <g_io_channel_unref@plt+0x4cd0>
   18f84:	mov	r1, r0
   18f88:	mov	r0, r4
   18f8c:	bl	13c14 <g_type_instance_get_private@plt>
   18f90:	movw	r3, #51028	; 0xc754
   18f94:	movt	r3, #2
   18f98:	mov	r2, #0
   18f9c:	str	r2, [r3, #144]	; 0x90
   18fa0:	str	r2, [r3, #12]
   18fa4:	str	r0, [r4, #12]
   18fa8:	add	r0, r3, #16
   18fac:	pop	{r4, lr}
   18fb0:	b	140f4 <sigemptyset@plt>
   18fb4:	push	{r3, r4, r5, lr}
   18fb8:	mov	r5, r0
   18fbc:	bl	18ef0 <g_io_channel_unref@plt+0x4cd0>
   18fc0:	movw	r4, #51028	; 0xc754
   18fc4:	movt	r4, #2
   18fc8:	mov	r1, r0
   18fcc:	mov	r0, r5
   18fd0:	bl	13938 <g_type_check_instance_cast@plt>
   18fd4:	ldr	r3, [r0, #12]
   18fd8:	ldrb	r2, [r3, #4]
   18fdc:	tst	r2, #1
   18fe0:	beq	18ff4 <g_io_channel_unref@plt+0x4dd4>
   18fe4:	ldr	r0, [r3]
   18fe8:	bl	14220 <g_io_channel_unref@plt>
   18fec:	ldr	r0, [r4, #144]	; 0x90
   18ff0:	bl	13b54 <close@plt>
   18ff4:	ldr	r0, [r4]
   18ff8:	mov	r1, #80	; 0x50
   18ffc:	bl	14154 <g_type_check_class_cast@plt>
   19000:	ldr	r3, [r0, #24]
   19004:	mov	r0, r5
   19008:	blx	r3
   1900c:	pop	{r3, r4, r5, pc}
   19010:	push	{r3, r4, r5, lr}
   19014:	movw	r4, #51028	; 0xc754
   19018:	movt	r4, #2
   1901c:	ldr	r5, [r4, #152]	; 0x98
   19020:	cmp	r5, #0
   19024:	beq	19030 <g_io_channel_unref@plt+0x4e10>
   19028:	mov	r0, r5
   1902c:	pop	{r3, r4, r5, pc}
   19030:	bl	18ef0 <g_io_channel_unref@plt+0x4cd0>
   19034:	mov	r1, r5
   19038:	bl	13728 <g_object_new@plt>
   1903c:	mov	r1, #80	; 0x50
   19040:	str	r0, [r4, #152]	; 0x98
   19044:	bl	13938 <g_type_check_instance_cast@plt>
   19048:	add	r1, r4, #152	; 0x98
   1904c:	bl	13734 <g_object_add_weak_pointer@plt>
   19050:	ldr	r0, [r4, #152]	; 0x98
   19054:	pop	{r3, r4, r5, pc}
   19058:	push	{r4, r5, r6, r7, r8, lr}
   1905c:	movw	r4, #50120	; 0xc3c8
   19060:	movt	r4, #2
   19064:	sub	sp, sp, #16
   19068:	mov	r5, r0
   1906c:	ldr	r3, [r4]
   19070:	str	r3, [sp, #12]
   19074:	bl	18ef0 <g_io_channel_unref@plt+0x4cd0>
   19078:	cmp	r5, #0
   1907c:	beq	190ac <g_io_channel_unref@plt+0x4e8c>
   19080:	ldr	r3, [r5]
   19084:	cmp	r3, #0
   19088:	beq	19098 <g_io_channel_unref@plt+0x4e78>
   1908c:	ldr	r3, [r3]
   19090:	cmp	r0, r3
   19094:	beq	190e0 <g_io_channel_unref@plt+0x4ec0>
   19098:	mov	r1, r0
   1909c:	mov	r0, r5
   190a0:	bl	13e78 <g_type_check_instance_is_a@plt>
   190a4:	cmp	r0, #0
   190a8:	bne	190e0 <g_io_channel_unref@plt+0x4ec0>
   190ac:	movw	r1, #44052	; 0xac14
   190b0:	movw	r2, #44120	; 0xac58
   190b4:	movt	r1, #1
   190b8:	movt	r2, #1
   190bc:	mov	r0, #0
   190c0:	bl	137b8 <g_return_if_fail_warning@plt>
   190c4:	mov	r0, #0
   190c8:	ldr	r2, [sp, #12]
   190cc:	ldr	r3, [r4]
   190d0:	cmp	r2, r3
   190d4:	bne	1917c <g_io_channel_unref@plt+0x4f5c>
   190d8:	add	sp, sp, #16
   190dc:	pop	{r4, r5, r6, r7, r8, pc}
   190e0:	ldr	r6, [r5, #12]
   190e4:	ldrb	r0, [r6, #4]
   190e8:	ands	r7, r0, #1
   190ec:	movne	r0, #1
   190f0:	bne	190c8 <g_io_channel_unref@plt+0x4ea8>
   190f4:	add	r0, sp, #4
   190f8:	bl	141d8 <pipe@plt>
   190fc:	subs	r8, r0, #0
   19100:	bne	190c4 <g_io_channel_unref@plt+0x4ea4>
   19104:	ldr	r2, [sp, #8]
   19108:	movw	r3, #51028	; 0xc754
   1910c:	ldrb	r1, [r6, #4]
   19110:	movt	r3, #2
   19114:	ldr	r0, [sp, #4]
   19118:	orr	r1, r1, #1
   1911c:	strb	r1, [r6, #4]
   19120:	str	r2, [r3, #144]	; 0x90
   19124:	bl	13ed8 <g_io_channel_unix_new@plt>
   19128:	mov	r1, #2
   1912c:	mov	r2, r8
   19130:	str	r0, [r6]
   19134:	bl	13d10 <g_io_channel_set_flags@plt>
   19138:	mov	r2, r8
   1913c:	mov	r1, r8
   19140:	ldr	r0, [r6]
   19144:	bl	13a1c <g_io_channel_set_encoding@plt>
   19148:	ldr	r0, [r6]
   1914c:	mov	r1, #1
   19150:	bl	14094 <g_io_channel_set_close_on_unref@plt>
   19154:	mov	r3, r5
   19158:	mov	r1, #1
   1915c:	movw	r2, #36264	; 0x8da8
   19160:	ldr	r0, [r6]
   19164:	movt	r2, #1
   19168:	bl	14124 <g_io_add_watch@plt>
   1916c:	ldr	r0, [r6]
   19170:	bl	14220 <g_io_channel_unref@plt>
   19174:	mov	r0, #1
   19178:	b	190c8 <g_io_channel_unref@plt+0x4ea8>
   1917c:	bl	13d1c <__stack_chk_fail@plt>
   19180:	push	{r4, r5, r6, lr}
   19184:	movw	r4, #50120	; 0xc3c8
   19188:	movt	r4, #2
   1918c:	sub	sp, sp, #288	; 0x120
   19190:	mov	r5, r0
   19194:	mov	r6, r1
   19198:	ldr	r3, [r4]
   1919c:	str	r3, [sp, #284]	; 0x11c
   191a0:	bl	18ef0 <g_io_channel_unref@plt+0x4cd0>
   191a4:	cmp	r5, #0
   191a8:	mov	r1, r0
   191ac:	beq	191d8 <g_io_channel_unref@plt+0x4fb8>
   191b0:	ldr	r3, [r5]
   191b4:	cmp	r3, #0
   191b8:	beq	191c8 <g_io_channel_unref@plt+0x4fa8>
   191bc:	ldr	r3, [r3]
   191c0:	cmp	r0, r3
   191c4:	beq	19204 <g_io_channel_unref@plt+0x4fe4>
   191c8:	mov	r0, r5
   191cc:	bl	13e78 <g_type_check_instance_is_a@plt>
   191d0:	cmp	r0, #0
   191d4:	bne	19204 <g_io_channel_unref@plt+0x4fe4>
   191d8:	movw	r2, #44120	; 0xac58
   191dc:	mov	r0, #0
   191e0:	movt	r2, #1
   191e4:	ldr	r1, [pc, #76]	; 19238 <g_io_channel_unref@plt+0x5018>
   191e8:	bl	137b8 <g_return_if_fail_warning@plt>
   191ec:	ldr	r2, [sp, #284]	; 0x11c
   191f0:	ldr	r3, [r4]
   191f4:	cmp	r2, r3
   191f8:	bne	19234 <g_io_channel_unref@plt+0x5014>
   191fc:	add	sp, sp, #288	; 0x120
   19200:	pop	{r4, r5, r6, pc}
   19204:	add	r0, sp, #8
   19208:	bl	140f4 <sigemptyset@plt>
   1920c:	mov	r0, r6
   19210:	add	r1, sp, #4
   19214:	add	r2, sp, #144	; 0x90
   19218:	mov	ip, #0
   1921c:	movw	r3, #36512	; 0x8ea0
   19220:	str	ip, [sp, #136]	; 0x88
   19224:	movt	r3, #1
   19228:	str	r3, [sp, #4]
   1922c:	bl	13eb4 <sigaction@plt>
   19230:	b	191ec <g_io_channel_unref@plt+0x4fcc>
   19234:	bl	13d1c <__stack_chk_fail@plt>
   19238:	andeq	sl, r1, r0, lsr ip
   1923c:	push	{r4, r5, r6, lr}
   19240:	mov	r4, r0
   19244:	sub	sp, sp, #8
   19248:	movw	r0, #44148	; 0xac74
   1924c:	movt	r0, #1
   19250:	mov	r6, #4
   19254:	bl	137a0 <g_settings_new@plt>
   19258:	mov	r2, r4
   1925c:	mov	r3, #0
   19260:	movw	r1, #44172	; 0xac8c
   19264:	str	r3, [r4, #52]	; 0x34
   19268:	movt	r1, #1
   1926c:	movw	r3, #43000	; 0xa7f8
   19270:	movt	r3, #1
   19274:	mov	r5, #5
   19278:	str	r0, [r4, #12]
   1927c:	str	r6, [sp]
   19280:	bl	13da0 <g_settings_bind@plt>
   19284:	ldr	r0, [r4, #12]
   19288:	mov	r2, r4
   1928c:	str	r6, [sp]
   19290:	movw	r1, #44196	; 0xaca4
   19294:	movw	r3, #43028	; 0xa814
   19298:	movt	r1, #1
   1929c:	movt	r3, #1
   192a0:	bl	13da0 <g_settings_bind@plt>
   192a4:	ldr	r0, [r4, #12]
   192a8:	mov	r2, r4
   192ac:	str	r6, [sp]
   192b0:	movw	r1, #44228	; 0xacc4
   192b4:	movw	r3, #43224	; 0xa8d8
   192b8:	movt	r1, #1
   192bc:	movt	r3, #1
   192c0:	bl	13da0 <g_settings_bind@plt>
   192c4:	movw	r0, #44256	; 0xace0
   192c8:	movt	r0, #1
   192cc:	bl	137a0 <g_settings_new@plt>
   192d0:	mov	r2, r4
   192d4:	movw	r1, #44288	; 0xad00
   192d8:	movw	r3, #43060	; 0xa834
   192dc:	movt	r1, #1
   192e0:	movt	r3, #1
   192e4:	str	r0, [r4, #16]
   192e8:	str	r5, [sp]
   192ec:	bl	13da0 <g_settings_bind@plt>
   192f0:	movw	r1, #44308	; 0xad14
   192f4:	movt	r1, #1
   192f8:	ldr	r0, [r4, #16]
   192fc:	mov	r2, r4
   19300:	str	r5, [sp]
   19304:	mov	r3, r1
   19308:	bl	13da0 <g_settings_bind@plt>
   1930c:	movw	r1, #43092	; 0xa854
   19310:	movt	r1, #1
   19314:	ldr	r0, [r4, #16]
   19318:	mov	r2, r4
   1931c:	str	r5, [sp]
   19320:	mov	r3, r1
   19324:	bl	13da0 <g_settings_bind@plt>
   19328:	movw	r1, #44324	; 0xad24
   1932c:	movt	r1, #1
   19330:	ldr	r0, [r4, #16]
   19334:	mov	r2, r4
   19338:	str	r5, [sp]
   1933c:	mov	r3, r1
   19340:	bl	13da0 <g_settings_bind@plt>
   19344:	movw	r1, #44348	; 0xad3c
   19348:	movt	r1, #1
   1934c:	ldr	r0, [r4, #16]
   19350:	mov	r2, r4
   19354:	str	r5, [sp]
   19358:	mov	r3, r1
   1935c:	bl	13da0 <g_settings_bind@plt>
   19360:	movw	r1, #44372	; 0xad54
   19364:	movt	r1, #1
   19368:	ldr	r0, [r4, #16]
   1936c:	mov	r2, r4
   19370:	str	r5, [sp]
   19374:	mov	r3, r1
   19378:	bl	13da0 <g_settings_bind@plt>
   1937c:	movw	r1, #44392	; 0xad68
   19380:	movt	r1, #1
   19384:	ldr	r0, [r4, #16]
   19388:	mov	r2, r4
   1938c:	str	r5, [sp]
   19390:	mov	r3, r1
   19394:	bl	13da0 <g_settings_bind@plt>
   19398:	ldr	r0, [r4, #16]
   1939c:	mov	r2, r4
   193a0:	str	r5, [sp]
   193a4:	movw	r1, #44416	; 0xad80
   193a8:	movw	r3, #44440	; 0xad98
   193ac:	movt	r1, #1
   193b0:	movt	r3, #1
   193b4:	bl	13da0 <g_settings_bind@plt>
   193b8:	ldr	r0, [r4, #16]
   193bc:	mov	r2, r4
   193c0:	str	r5, [sp]
   193c4:	movw	r1, #44452	; 0xada4
   193c8:	movw	r3, #42972	; 0xa7dc
   193cc:	movt	r1, #1
   193d0:	movt	r3, #1
   193d4:	bl	13da0 <g_settings_bind@plt>
   193d8:	add	sp, sp, #8
   193dc:	pop	{r4, r5, r6, pc}
   193e0:	push	{r4, r5, r6, r7, r8, r9, lr}
   193e4:	sub	sp, sp, #20
   193e8:	mov	r4, r0
   193ec:	bl	14058 <g_type_class_peek_parent@plt>
   193f0:	movw	r1, #51184	; 0xc7f0
   193f4:	movt	r1, #2
   193f8:	ldr	r3, [r1, #4]
   193fc:	cmp	r3, #0
   19400:	str	r0, [r1]
   19404:	beq	19414 <g_io_channel_unref@plt+0x51f4>
   19408:	add	r1, r1, #4
   1940c:	mov	r0, r4
   19410:	bl	13824 <g_type_class_adjust_private_offset@plt>
   19414:	mov	r0, r4
   19418:	mov	r1, #80	; 0x50
   1941c:	bl	14154 <g_type_check_class_cast@plt>
   19420:	mov	r5, #227	; 0xe3
   19424:	movw	r2, #39388	; 0x99dc
   19428:	movw	r3, #38996	; 0x9854
   1942c:	movt	r2, #1
   19430:	movt	r3, #1
   19434:	movw	r1, #44480	; 0xadc0
   19438:	movt	r1, #1
   1943c:	mov	r8, #2
   19440:	mov	r9, #1
   19444:	mov	r4, r0
   19448:	str	r2, [r0, #12]
   1944c:	str	r3, [r0, #16]
   19450:	movw	r2, #38884	; 0x97e4
   19454:	movw	r3, #38816	; 0x97a0
   19458:	movt	r2, #1
   1945c:	movt	r3, #1
   19460:	str	r2, [r0, #20]
   19464:	str	r3, [r0, #24]
   19468:	movw	r2, #44496	; 0xadd0
   1946c:	mov	r3, #0
   19470:	str	r5, [sp]
   19474:	movt	r2, #1
   19478:	movw	r0, #43060	; 0xa834
   1947c:	movt	r0, #1
   19480:	mov	r6, r3
   19484:	bl	13818 <g_param_spec_boolean@plt>
   19488:	mov	r1, #1
   1948c:	mov	r2, r0
   19490:	mov	r0, r4
   19494:	bl	13df4 <g_object_class_install_property@plt>
   19498:	mov	r3, r6
   1949c:	str	r5, [sp, #8]
   194a0:	mov	r2, #30
   194a4:	str	r6, [sp, #4]
   194a8:	movw	r0, #44308	; 0xad14
   194ac:	str	r2, [sp]
   194b0:	movt	r0, #1
   194b4:	movw	r1, #44516	; 0xade4
   194b8:	movw	r2, #44532	; 0xadf4
   194bc:	movt	r1, #1
   194c0:	movt	r2, #1
   194c4:	bl	14028 <g_param_spec_int@plt>
   194c8:	mov	r1, #2
   194cc:	mov	r2, r0
   194d0:	mov	r0, r4
   194d4:	bl	13df4 <g_object_class_install_property@plt>
   194d8:	bl	14bf4 <g_io_channel_unref@plt+0x9d4>
   194dc:	str	r6, [sp]
   194e0:	str	r5, [sp, #4]
   194e4:	movw	r1, #44580	; 0xae24
   194e8:	movw	r2, #44592	; 0xae30
   194ec:	movt	r1, #1
   194f0:	movt	r2, #1
   194f4:	mov	r3, r0
   194f8:	movw	r0, #43092	; 0xa854
   194fc:	movt	r0, #1
   19500:	bl	13944 <g_param_spec_enum@plt>
   19504:	mov	r1, #3
   19508:	mov	r2, r0
   1950c:	mov	r0, r4
   19510:	bl	13df4 <g_object_class_install_property@plt>
   19514:	bl	14c54 <g_io_channel_unref@plt+0xa34>
   19518:	str	r6, [sp]
   1951c:	str	r5, [sp, #4]
   19520:	movw	r1, #44612	; 0xae44
   19524:	movw	r2, #44636	; 0xae5c
   19528:	movt	r1, #1
   1952c:	movt	r2, #1
   19530:	mov	r7, r0
   19534:	mov	r3, r0
   19538:	movw	r0, #44324	; 0xad24
   1953c:	movt	r0, #1
   19540:	bl	13944 <g_param_spec_enum@plt>
   19544:	mov	r1, #4
   19548:	mov	r2, r0
   1954c:	mov	r0, r4
   19550:	bl	13df4 <g_object_class_install_property@plt>
   19554:	mov	r3, r7
   19558:	str	r5, [sp, #4]
   1955c:	movw	r0, #44348	; 0xad3c
   19560:	str	r8, [sp]
   19564:	movw	r1, #44664	; 0xae78
   19568:	movt	r0, #1
   1956c:	movt	r1, #1
   19570:	movw	r2, #44688	; 0xae90
   19574:	movt	r2, #1
   19578:	bl	13944 <g_param_spec_enum@plt>
   1957c:	mov	r1, #5
   19580:	mov	r2, r0
   19584:	mov	r0, r4
   19588:	bl	13df4 <g_object_class_install_property@plt>
   1958c:	mov	r3, r7
   19590:	str	r5, [sp, #4]
   19594:	mov	r2, #3
   19598:	movw	r0, #44372	; 0xad54
   1959c:	str	r2, [sp]
   195a0:	movt	r0, #1
   195a4:	movw	r1, #44716	; 0xaeac
   195a8:	movw	r2, #44736	; 0xaec0
   195ac:	movt	r1, #1
   195b0:	movt	r2, #1
   195b4:	bl	13944 <g_param_spec_enum@plt>
   195b8:	mov	r1, #6
   195bc:	mov	r2, r0
   195c0:	mov	r0, r4
   195c4:	bl	13df4 <g_object_class_install_property@plt>
   195c8:	mov	r3, r7
   195cc:	str	r5, [sp, #4]
   195d0:	movw	r0, #44392	; 0xad68
   195d4:	str	r9, [sp]
   195d8:	movw	r1, #44760	; 0xaed8
   195dc:	movt	r0, #1
   195e0:	movt	r1, #1
   195e4:	movw	r2, #44784	; 0xaef0
   195e8:	movt	r2, #1
   195ec:	bl	13944 <g_param_spec_enum@plt>
   195f0:	mov	r1, #7
   195f4:	mov	r2, r0
   195f8:	mov	r0, r4
   195fc:	bl	13df4 <g_object_class_install_property@plt>
   19600:	mov	r3, r6
   19604:	str	r5, [sp]
   19608:	movw	r0, #44440	; 0xad98
   1960c:	movw	r1, #44812	; 0xaf0c
   19610:	movt	r0, #1
   19614:	movt	r1, #1
   19618:	movw	r2, #44824	; 0xaf18
   1961c:	movt	r2, #1
   19620:	bl	13818 <g_param_spec_boolean@plt>
   19624:	mov	r1, #8
   19628:	mov	r2, r0
   1962c:	mov	r0, r4
   19630:	bl	13df4 <g_object_class_install_property@plt>
   19634:	movw	r1, #44860	; 0xaf3c
   19638:	movt	r1, #1
   1963c:	mov	r3, r9
   19640:	str	r5, [sp]
   19644:	movw	r0, #42972	; 0xa7dc
   19648:	mov	r2, r1
   1964c:	movt	r0, #1
   19650:	bl	13818 <g_param_spec_boolean@plt>
   19654:	mov	r1, #9
   19658:	mov	r2, r0
   1965c:	mov	r0, r4
   19660:	bl	13df4 <g_object_class_install_property@plt>
   19664:	bl	14d14 <g_io_channel_unref@plt+0xaf4>
   19668:	str	r8, [sp]
   1966c:	str	r5, [sp, #4]
   19670:	movw	r1, #44892	; 0xaf5c
   19674:	movw	r2, #44916	; 0xaf74
   19678:	movt	r1, #1
   1967c:	movt	r2, #1
   19680:	mov	r3, r0
   19684:	movw	r0, #43000	; 0xa7f8
   19688:	movt	r0, #1
   1968c:	bl	13944 <g_param_spec_enum@plt>
   19690:	mov	r1, #10
   19694:	mov	r2, r0
   19698:	mov	r0, r4
   1969c:	bl	13df4 <g_object_class_install_property@plt>
   196a0:	bl	14d74 <g_io_channel_unref@plt+0xb54>
   196a4:	str	r6, [sp]
   196a8:	str	r5, [sp, #4]
   196ac:	movw	r1, #44956	; 0xaf9c
   196b0:	movw	r2, #44988	; 0xafbc
   196b4:	movt	r1, #1
   196b8:	movt	r2, #1
   196bc:	mov	r3, r0
   196c0:	movw	r0, #43028	; 0xa814
   196c4:	movt	r0, #1
   196c8:	bl	13944 <g_param_spec_enum@plt>
   196cc:	mov	r1, #11
   196d0:	mov	r2, r0
   196d4:	mov	r0, r4
   196d8:	bl	13df4 <g_object_class_install_property@plt>
   196dc:	str	r5, [sp]
   196e0:	mov	r3, r6
   196e4:	movw	r0, #43224	; 0xa8d8
   196e8:	movw	r1, #41500	; 0xa21c
   196ec:	movt	r0, #1
   196f0:	movt	r1, #1
   196f4:	movw	r2, #45028	; 0xafe4
   196f8:	movt	r2, #1
   196fc:	bl	138c0 <g_param_spec_string@plt>
   19700:	mov	r1, #12
   19704:	mov	r2, r0
   19708:	mov	r0, r4
   1970c:	add	sp, sp, #20
   19710:	pop	{r4, r5, r6, r7, r8, r9, lr}
   19714:	b	13df4 <g_object_class_install_property@plt>
   19718:	push	{r4, r5, lr}
   1971c:	movw	r4, #51184	; 0xc7f0
   19720:	dmb	sy
   19724:	movt	r4, #2
   19728:	sub	sp, sp, #20
   1972c:	ldr	r5, [r4, #8]
   19730:	dmb	sy
   19734:	cmp	r5, #0
   19738:	beq	19748 <g_io_channel_unref@plt+0x5528>
   1973c:	ldr	r0, [r4, #8]
   19740:	add	sp, sp, #20
   19744:	pop	{r4, r5, pc}
   19748:	add	r0, r4, #8
   1974c:	bl	13c5c <g_once_init_enter@plt>
   19750:	cmp	r0, #0
   19754:	beq	1973c <g_io_channel_unref@plt+0x551c>
   19758:	movw	r0, #45072	; 0xb010
   1975c:	movt	r0, #1
   19760:	bl	13cd4 <g_intern_static_string@plt>
   19764:	str	r5, [sp, #8]
   19768:	mov	r2, #60	; 0x3c
   1976c:	movw	r3, #37436	; 0x923c
   19770:	movt	r3, #1
   19774:	stm	sp, {r2, r3}
   19778:	mov	r2, #68	; 0x44
   1977c:	movw	r3, #37856	; 0x93e0
   19780:	movt	r3, #1
   19784:	mov	r1, r0
   19788:	mov	r0, #80	; 0x50
   1978c:	bl	137dc <g_type_register_static_simple@plt>
   19790:	mov	r1, r0
   19794:	add	r0, r4, #8
   19798:	bl	13fec <g_once_init_leave@plt>
   1979c:	b	1973c <g_io_channel_unref@plt+0x551c>
   197a0:	push	{r4, lr}
   197a4:	mov	r4, r0
   197a8:	bl	19718 <g_io_channel_unref@plt+0x54f8>
   197ac:	mov	r1, r0
   197b0:	mov	r0, r4
   197b4:	bl	13938 <g_type_check_instance_cast@plt>
   197b8:	ldr	r0, [r0, #52]	; 0x34
   197bc:	bl	13d58 <g_free@plt>
   197c0:	movw	r3, #51184	; 0xc7f0
   197c4:	movt	r3, #2
   197c8:	mov	r1, #80	; 0x50
   197cc:	ldr	r0, [r3]
   197d0:	bl	14154 <g_type_check_class_cast@plt>
   197d4:	ldr	r3, [r0, #24]
   197d8:	mov	r0, r4
   197dc:	blx	r3
   197e0:	pop	{r4, pc}
   197e4:	push	{r3, r4, r5, lr}
   197e8:	mov	r5, r0
   197ec:	bl	19718 <g_io_channel_unref@plt+0x54f8>
   197f0:	mov	r1, r0
   197f4:	mov	r0, r5
   197f8:	bl	13938 <g_type_check_instance_cast@plt>
   197fc:	mov	r4, r0
   19800:	ldr	r0, [r0, #12]
   19804:	cmp	r0, #0
   19808:	beq	19818 <g_io_channel_unref@plt+0x55f8>
   1980c:	mov	r3, #0
   19810:	str	r3, [r4, #12]
   19814:	bl	13fbc <g_object_unref@plt>
   19818:	ldr	r0, [r4, #16]
   1981c:	cmp	r0, #0
   19820:	beq	19830 <g_io_channel_unref@plt+0x5610>
   19824:	mov	r3, #0
   19828:	str	r3, [r4, #16]
   1982c:	bl	13fbc <g_object_unref@plt>
   19830:	movw	r3, #51184	; 0xc7f0
   19834:	movt	r3, #2
   19838:	mov	r1, #80	; 0x50
   1983c:	ldr	r0, [r3]
   19840:	bl	14154 <g_type_check_class_cast@plt>
   19844:	ldr	r3, [r0, #20]
   19848:	mov	r0, r5
   1984c:	blx	r3
   19850:	pop	{r3, r4, r5, pc}
   19854:	push	{r4, r5, r6, r7, lr}
   19858:	sub	sp, sp, #28
   1985c:	mov	r4, r1
   19860:	mov	r6, r2
   19864:	mov	r5, r0
   19868:	mov	r7, r3
   1986c:	bl	19718 <g_io_channel_unref@plt+0x54f8>
   19870:	mov	r1, r0
   19874:	mov	r0, r5
   19878:	bl	13938 <g_type_check_instance_cast@plt>
   1987c:	sub	ip, r4, #1
   19880:	mov	r2, r0
   19884:	cmp	ip, #11
   19888:	ldrls	pc, [pc, ip, lsl #2]
   1988c:	b	1997c <g_io_channel_unref@plt+0x575c>
   19890:	ldrdeq	r9, [r1], -r4
   19894:	andeq	r9, r1, ip, ror #17
   19898:	andeq	r9, r1, r0, lsl #18
   1989c:	andeq	r9, r1, r4, lsl r9
   198a0:	andeq	r9, r1, r0, lsr #18
   198a4:	andeq	r9, r1, ip, lsr #18
   198a8:	andeq	r9, r1, r8, lsr r9
   198ac:	andeq	r9, r1, r4, asr #18
   198b0:	andeq	r9, r1, r4, asr r9
   198b4:	andeq	r9, r1, r4, ror #18
   198b8:	andeq	r9, r1, r0, ror r9
   198bc:	andeq	r9, r1, r0, asr #17
   198c0:	mov	r0, r6
   198c4:	ldr	r1, [r2, #52]	; 0x34
   198c8:	add	sp, sp, #28
   198cc:	pop	{r4, r5, r6, r7, lr}
   198d0:	b	13bcc <g_value_set_string@plt>
   198d4:	ldrb	r1, [r0, #56]	; 0x38
   198d8:	mov	r0, r6
   198dc:	ubfx	r1, r1, #1, #1
   198e0:	add	sp, sp, #28
   198e4:	pop	{r4, r5, r6, r7, lr}
   198e8:	b	13ba8 <g_value_set_boolean@plt>
   198ec:	mov	r0, r6
   198f0:	ldr	r1, [r2, #20]
   198f4:	add	sp, sp, #28
   198f8:	pop	{r4, r5, r6, r7, lr}
   198fc:	b	13d88 <g_value_set_int@plt>
   19900:	ldr	r1, [r2, #24]
   19904:	mov	r0, r6
   19908:	add	sp, sp, #28
   1990c:	pop	{r4, r5, r6, r7, lr}
   19910:	b	13d94 <g_value_set_enum@plt>
   19914:	mov	r0, r6
   19918:	ldr	r1, [r2, #28]
   1991c:	b	19908 <g_io_channel_unref@plt+0x56e8>
   19920:	mov	r0, r6
   19924:	ldr	r1, [r2, #32]
   19928:	b	19908 <g_io_channel_unref@plt+0x56e8>
   1992c:	mov	r0, r6
   19930:	ldr	r1, [r2, #36]	; 0x24
   19934:	b	19908 <g_io_channel_unref@plt+0x56e8>
   19938:	mov	r0, r6
   1993c:	ldr	r1, [r2, #40]	; 0x28
   19940:	b	19908 <g_io_channel_unref@plt+0x56e8>
   19944:	ldrb	r1, [r0, #56]	; 0x38
   19948:	mov	r0, r6
   1994c:	ubfx	r1, r1, #2, #1
   19950:	b	198e0 <g_io_channel_unref@plt+0x56c0>
   19954:	ldrb	r1, [r0, #56]	; 0x38
   19958:	mov	r0, r6
   1995c:	and	r1, r1, #1
   19960:	b	198e0 <g_io_channel_unref@plt+0x56c0>
   19964:	mov	r0, r6
   19968:	ldr	r1, [r2, #44]	; 0x2c
   1996c:	b	19908 <g_io_channel_unref@plt+0x56e8>
   19970:	mov	r0, r6
   19974:	ldr	r1, [r2, #48]	; 0x30
   19978:	b	19908 <g_io_channel_unref@plt+0x56e8>
   1997c:	ldm	r7, {r3, r7}
   19980:	ldr	r0, [r3]
   19984:	bl	139b0 <g_type_name@plt>
   19988:	ldr	r3, [r5]
   1998c:	mov	r6, r0
   19990:	ldr	r0, [r3]
   19994:	bl	139b0 <g_type_name@plt>
   19998:	str	r7, [sp, #12]
   1999c:	str	r6, [sp, #16]
   199a0:	mov	r2, #190	; 0xbe
   199a4:	str	r4, [sp, #8]
   199a8:	mov	r1, #16
   199ac:	movw	r3, #42744	; 0xa6f8
   199b0:	movt	r3, #1
   199b4:	stm	sp, {r2, r3}
   199b8:	movw	r2, #42672	; 0xa6b0
   199bc:	movw	r3, #45084	; 0xb01c
   199c0:	movt	r2, #1
   199c4:	movt	r3, #1
   199c8:	str	r0, [sp, #20]
   199cc:	mov	r0, #0
   199d0:	bl	139a4 <g_log@plt>
   199d4:	add	sp, sp, #28
   199d8:	pop	{r4, r5, r6, r7, pc}
   199dc:	push	{r4, r5, r6, r7, r8, lr}
   199e0:	sub	sp, sp, #24
   199e4:	mov	r5, r1
   199e8:	mov	r6, r0
   199ec:	mov	r7, r2
   199f0:	mov	r8, r3
   199f4:	bl	19718 <g_io_channel_unref@plt+0x54f8>
   199f8:	mov	r1, r0
   199fc:	mov	r0, r6
   19a00:	bl	13938 <g_type_check_instance_cast@plt>
   19a04:	sub	ip, r5, #1
   19a08:	mov	r4, r0
   19a0c:	cmp	ip, #11
   19a10:	ldrls	pc, [pc, ip, lsl #2]
   19a14:	b	19b2c <g_io_channel_unref@plt+0x590c>
   19a18:	andeq	r9, r1, r4, ror #20
   19a1c:	andeq	r9, r1, ip, ror sl
   19a20:	andeq	r9, r1, ip, lsl #21
   19a24:	muleq	r1, ip, sl
   19a28:	andeq	r9, r1, ip, lsr #21
   19a2c:			; <UNDEFINED> instruction: 0x00019abc
   19a30:	andeq	r9, r1, ip, asr #21
   19a34:	ldrdeq	r9, [r1], -ip
   19a38:	strdeq	r9, [r1], -r4
   19a3c:	andeq	r9, r1, ip, lsl #22
   19a40:	andeq	r9, r1, ip, lsl fp
   19a44:	andeq	r9, r1, r8, asr #20
   19a48:	ldr	r0, [r0, #52]	; 0x34
   19a4c:	bl	13d58 <g_free@plt>
   19a50:	mov	r0, r7
   19a54:	bl	1392c <g_value_dup_string@plt>
   19a58:	str	r0, [r4, #52]	; 0x34
   19a5c:	add	sp, sp, #24
   19a60:	pop	{r4, r5, r6, r7, r8, pc}
   19a64:	mov	r0, r7
   19a68:	bl	13bfc <g_value_get_boolean@plt>
   19a6c:	ldrb	r3, [r4, #56]	; 0x38
   19a70:	bfi	r3, r0, #1, #1
   19a74:	strb	r3, [r4, #56]	; 0x38
   19a78:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19a7c:	mov	r0, r7
   19a80:	bl	13860 <g_value_get_int@plt>
   19a84:	str	r0, [r4, #20]
   19a88:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19a8c:	mov	r0, r7
   19a90:	bl	137c4 <g_value_get_enum@plt>
   19a94:	str	r0, [r4, #24]
   19a98:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19a9c:	mov	r0, r7
   19aa0:	bl	137c4 <g_value_get_enum@plt>
   19aa4:	str	r0, [r4, #28]
   19aa8:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19aac:	mov	r0, r7
   19ab0:	bl	137c4 <g_value_get_enum@plt>
   19ab4:	str	r0, [r4, #32]
   19ab8:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19abc:	mov	r0, r7
   19ac0:	bl	137c4 <g_value_get_enum@plt>
   19ac4:	str	r0, [r4, #36]	; 0x24
   19ac8:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19acc:	mov	r0, r7
   19ad0:	bl	137c4 <g_value_get_enum@plt>
   19ad4:	str	r0, [r4, #40]	; 0x28
   19ad8:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19adc:	mov	r0, r7
   19ae0:	bl	13bfc <g_value_get_boolean@plt>
   19ae4:	ldrb	r3, [r4, #56]	; 0x38
   19ae8:	bfi	r3, r0, #2, #1
   19aec:	strb	r3, [r4, #56]	; 0x38
   19af0:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19af4:	mov	r0, r7
   19af8:	bl	13bfc <g_value_get_boolean@plt>
   19afc:	ldrb	r3, [r4, #56]	; 0x38
   19b00:	bfi	r3, r0, #0, #1
   19b04:	strb	r3, [r4, #56]	; 0x38
   19b08:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19b0c:	mov	r0, r7
   19b10:	bl	137c4 <g_value_get_enum@plt>
   19b14:	str	r0, [r4, #44]	; 0x2c
   19b18:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19b1c:	mov	r0, r7
   19b20:	bl	137c4 <g_value_get_enum@plt>
   19b24:	str	r0, [r4, #48]	; 0x30
   19b28:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19b2c:	ldm	r8, {r3, r7}
   19b30:	ldr	r0, [r3]
   19b34:	bl	139b0 <g_type_name@plt>
   19b38:	ldr	r3, [r6]
   19b3c:	mov	r4, r0
   19b40:	ldr	r0, [r3]
   19b44:	bl	139b0 <g_type_name@plt>
   19b48:	mov	r2, #139	; 0x8b
   19b4c:	str	r7, [sp, #12]
   19b50:	movw	r3, #42744	; 0xa6f8
   19b54:	str	r4, [sp, #16]
   19b58:	movt	r3, #1
   19b5c:	str	r5, [sp, #8]
   19b60:	mov	r1, #16
   19b64:	stm	sp, {r2, r3}
   19b68:	movw	r2, #42672	; 0xa6b0
   19b6c:	movw	r3, #45084	; 0xb01c
   19b70:	movt	r2, #1
   19b74:	movt	r3, #1
   19b78:	str	r0, [sp, #20]
   19b7c:	mov	r0, #0
   19b80:	bl	139a4 <g_log@plt>
   19b84:	b	19a5c <g_io_channel_unref@plt+0x583c>
   19b88:	push	{r3, r4, r5, lr}
   19b8c:	movw	r4, #51184	; 0xc7f0
   19b90:	movt	r4, #2
   19b94:	ldr	r5, [r4, #12]
   19b98:	cmp	r5, #0
   19b9c:	beq	19ba8 <g_io_channel_unref@plt+0x5988>
   19ba0:	mov	r0, r5
   19ba4:	pop	{r3, r4, r5, pc}
   19ba8:	bl	19718 <g_io_channel_unref@plt+0x54f8>
   19bac:	mov	r1, r5
   19bb0:	bl	13728 <g_object_new@plt>
   19bb4:	mov	r1, #80	; 0x50
   19bb8:	str	r0, [r4, #12]
   19bbc:	bl	13938 <g_type_check_instance_cast@plt>
   19bc0:	add	r1, r4, #12
   19bc4:	bl	13734 <g_object_add_weak_pointer@plt>
   19bc8:	ldr	r0, [r4, #12]
   19bcc:	pop	{r3, r4, r5, pc}
   19bd0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   19bd4:	mov	r7, r0
   19bd8:	ldr	r6, [pc, #76]	; 19c2c <g_io_channel_unref@plt+0x5a0c>
   19bdc:	mov	r8, r1
   19be0:	ldr	r5, [pc, #72]	; 19c30 <g_io_channel_unref@plt+0x5a10>
   19be4:	mov	r9, r2
   19be8:	add	r6, pc, r6
   19bec:	bl	136fc <_init@@Base>
   19bf0:	add	r5, pc, r5
   19bf4:	rsb	r6, r5, r6
   19bf8:	asrs	r6, r6, #2
   19bfc:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   19c00:	sub	r5, r5, #4
   19c04:	mov	r4, #0
   19c08:	add	r4, r4, #1
   19c0c:	ldr	r3, [r5, #4]!
   19c10:	mov	r0, r7
   19c14:	mov	r1, r8
   19c18:	mov	r2, r9
   19c1c:	blx	r3
   19c20:	cmp	r4, r6
   19c24:	bne	19c08 <g_io_channel_unref@plt+0x59e8>
   19c28:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   19c2c:	muleq	r1, r0, r2
   19c30:	andeq	r2, r1, r4, lsl #5
   19c34:	bx	lr

Disassembly of section .fini:

00019c38 <_fini@@Base>:
   19c38:	push	{r3, lr}
   19c3c:	pop	{r3, pc}
