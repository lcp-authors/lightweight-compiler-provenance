
centos-preinstalled/xlsatoms:     file format elf32-littlearm


Disassembly of section .init:

00010978 <_init@@Base>:
   10978:	push	{r3, lr}
   1097c:	bl	10f98 <__snprintf_chk@plt+0x4e0>
   10980:	pop	{r3, pc}

Disassembly of section .plt:

00010984 <xcb_get_atom_name@plt-0x14>:
   10984:	push	{lr}		; (str lr, [sp, #-4]!)
   10988:	ldr	lr, [pc, #4]	; 10994 <_init@@Base+0x1c>
   1098c:	add	lr, pc, lr
   10990:	ldr	pc, [lr, #8]!
   10994:	andeq	r1, r1, ip, ror #12

00010998 <xcb_get_atom_name@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1644]!	; 0x66c

000109a4 <strcmp@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1636]!	; 0x664

000109b0 <strtol@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1628]!	; 0x65c

000109bc <free@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1620]!	; 0x654

000109c8 <xcb_connect@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1612]!	; 0x64c

000109d4 <__stack_chk_fail@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1604]!	; 0x644

000109e0 <xcb_get_atom_name_reply@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1596]!	; 0x63c

000109ec <_IO_putc@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1588]!	; 0x634

000109f8 <getenv@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1580]!	; 0x62c

00010a04 <puts@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1572]!	; 0x624

00010a10 <malloc@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1564]!	; 0x61c

00010a1c <__libc_start_main@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1556]!	; 0x614

00010a28 <xcb_get_atom_name_name@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1548]!	; 0x60c

00010a34 <__gmon_start__@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1540]!	; 0x604

00010a40 <exit@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a4c <strlen@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a58 <strchr@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a64 <__printf_chk@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a70 <__fprintf_chk@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a7c <xcb_intern_atom_unchecked@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a88 <xcb_intern_atom_reply@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a94 <xcb_disconnect@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1476]!	; 0x5c4

00010aa0 <xcb_connection_has_error@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1468]!	; 0x5bc

00010aac <abort@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1460]!	; 0x5b4

00010ab8 <__snprintf_chk@plt>:
   10ab8:	stmia	r6!, {}
   10aba:	b.n	10fdc <__snprintf_chk@plt+0x524>
   10abc:	ldmia	r2!, {r0, r4}
   10abe:	b.n	10fda <__snprintf_chk@plt+0x522>
   10ac0:	blx	ff9bd63c <__bss_end__@@Base+0xff99b5ac>

Disassembly of section .text:

00010ac4 <.text>:
   10ac4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ac8:	movw	r4, #8328	; 0x2088
   10acc:	ldr	r3, [r1]
   10ad0:	movt	r4, #2
   10ad4:	movw	r7, #5456	; 0x1550
   10ad8:	movt	r7, #1
   10adc:	sub	sp, sp, #44	; 0x2c
   10ae0:	sub	r2, r0, #2
   10ae4:	str	r3, [r4]
   10ae8:	mov	r3, r4
   10aec:	bic	r2, r2, #1
   10af0:	mov	r4, r7
   10af4:	mov	r8, r1
   10af8:	mov	r6, r0
   10afc:	mov	r7, r3
   10b00:	mov	r5, #0
   10b04:	add	r2, r2, #2
   10b08:	movw	fp, #8316	; 0x207c
   10b0c:	movw	ip, #8320	; 0x2080
   10b10:	movt	fp, #2
   10b14:	movt	ip, #2
   10b18:	str	r2, [sp, #16]
   10b1c:	str	r5, [sp, #12]
   10b20:	str	r5, [sp, #20]
   10b24:	str	r5, [sp, #32]
   10b28:	str	fp, [sp, #24]
   10b2c:	str	ip, [sp, #28]
   10b30:	cmp	r6, #1
   10b34:	ble	10e10 <__snprintf_chk@plt+0x358>
   10b38:	ldr	r3, [r8, #4]
   10b3c:	ldrb	r2, [r3]
   10b40:	cmp	r2, #45	; 0x2d
   10b44:	bne	10d7c <__snprintf_chk@plt+0x2c4>
   10b48:	mov	sl, r8
   10b4c:	mov	r9, #2
   10b50:	ldrb	r2, [r3, #1]
   10b54:	sub	r2, r2, #100	; 0x64
   10b58:	cmp	r2, #18
   10b5c:	ldrls	pc, [pc, r2, lsl #2]
   10b60:	b	10d7c <__snprintf_chk@plt+0x2c4>
   10b64:	andeq	r0, r1, r4, asr #26
   10b68:	andeq	r0, r1, ip, ror sp
   10b6c:	andeq	r0, r1, r0, lsr sp
   10b70:	andeq	r0, r1, ip, ror sp
   10b74:	andeq	r0, r1, ip, ror sp
   10b78:	andeq	r0, r1, ip, ror sp
   10b7c:	andeq	r0, r1, ip, ror sp
   10b80:	andeq	r0, r1, ip, ror sp
   10b84:	andeq	r0, r1, ip, ror sp
   10b88:	andeq	r0, r1, ip, ror sp
   10b8c:	muleq	r1, r8, ip
   10b90:	andeq	r0, r1, ip, ror sp
   10b94:	andeq	r0, r1, ip, ror sp
   10b98:	andeq	r0, r1, ip, ror sp
   10b9c:	andeq	r0, r1, r0, lsl #24
   10ba0:	andeq	r0, r1, ip, ror sp
   10ba4:	andeq	r0, r1, ip, ror sp
   10ba8:	andeq	r0, r1, ip, ror sp
   10bac:			; <UNDEFINED> instruction: 0x00010bb0
   10bb0:	mov	r0, r3
   10bb4:	movw	r1, #5584	; 0x15d0
   10bb8:	movt	r1, #1
   10bbc:	str	r3, [sp, #8]
   10bc0:	bl	109a4 <strcmp@plt>
   10bc4:	mov	r4, r7
   10bc8:	ldr	r3, [sp, #8]
   10bcc:	subs	r5, r0, #0
   10bd0:	beq	10db4 <__snprintf_chk@plt+0x2fc>
   10bd4:	movw	r1, #8316	; 0x207c
   10bd8:	movt	r1, #2
   10bdc:	str	r3, [sp]
   10be0:	movw	r2, #5612	; 0x15ec
   10be4:	ldr	r0, [r1]
   10be8:	movt	r2, #1
   10bec:	ldr	r3, [r4]
   10bf0:	mov	r1, #1
   10bf4:	bl	10a70 <__fprintf_chk@plt>
   10bf8:	mov	r0, #0
   10bfc:	bl	11090 <__snprintf_chk@plt+0x5d8>
   10c00:	cmp	r6, r9
   10c04:	ble	10da8 <__snprintf_chk@plt+0x2f0>
   10c08:	cmp	r5, #0
   10c0c:	beq	10d58 <__snprintf_chk@plt+0x2a0>
   10c10:	ldr	fp, [sl, #8]
   10c14:	cmp	fp, #0
   10c18:	beq	10e70 <__snprintf_chk@plt+0x3b8>
   10c1c:	mov	r0, fp
   10c20:	mov	r1, #45	; 0x2d
   10c24:	bl	10a58 <strchr@plt>
   10c28:	subs	ip, r0, #0
   10c2c:	beq	10e3c <__snprintf_chk@plt+0x384>
   10c30:	cmp	fp, ip
   10c34:	moveq	fp, #1
   10c38:	beq	10c64 <__snprintf_chk@plt+0x1ac>
   10c3c:	mov	r1, #0
   10c40:	mov	r0, fp
   10c44:	strb	r1, [ip]
   10c48:	mov	r2, #10
   10c4c:	str	ip, [sp, #8]
   10c50:	bl	109b0 <strtol@plt>
   10c54:	ldr	ip, [sp, #8]
   10c58:	mov	r3, #45	; 0x2d
   10c5c:	strb	r3, [ip]
   10c60:	mov	fp, r0
   10c64:	ldrb	r3, [ip, #1]
   10c68:	cmp	r3, #0
   10c6c:	moveq	r2, #1
   10c70:	bne	10df4 <__snprintf_chk@plt+0x33c>
   10c74:	ldr	ip, [sp, #36]	; 0x24
   10c78:	mov	r3, fp
   10c7c:	ldr	r0, [sp, #12]
   10c80:	mov	r1, r4
   10c84:	str	ip, [sp]
   10c88:	mov	ip, #1
   10c8c:	str	ip, [sp, #20]
   10c90:	bl	11244 <__snprintf_chk@plt+0x78c>
   10c94:	b	10d58 <__snprintf_chk@plt+0x2a0>
   10c98:	cmp	r6, r9
   10c9c:	ble	10d9c <__snprintf_chk@plt+0x2e4>
   10ca0:	cmp	r5, #0
   10ca4:	beq	10d58 <__snprintf_chk@plt+0x2a0>
   10ca8:	ldr	fp, [sl, #8]
   10cac:	mov	r0, fp
   10cb0:	bl	10a4c <strlen@plt>
   10cb4:	mov	r3, fp
   10cb8:	mov	r1, #1
   10cbc:	uxth	r2, r0
   10cc0:	ldr	r0, [sp, #12]
   10cc4:	bl	10a7c <xcb_intern_atom_unchecked@plt>
   10cc8:	mov	r2, #0
   10ccc:	mov	r1, r0
   10cd0:	ldr	r0, [sp, #12]
   10cd4:	bl	10a88 <xcb_intern_atom_reply@plt>
   10cd8:	subs	ip, r0, #0
   10cdc:	beq	10e7c <__snprintf_chk@plt+0x3c4>
   10ce0:	ldr	r2, [ip, #8]
   10ce4:	cmp	r2, #0
   10ce8:	bne	10dc8 <__snprintf_chk@plt+0x310>
   10cec:	ldr	r3, [r7, #4]
   10cf0:	movw	r2, #5688	; 0x1638
   10cf4:	ldr	r1, [sp, #24]
   10cf8:	movt	r2, #1
   10cfc:	str	fp, [sp]
   10d00:	ldr	r0, [r1]
   10d04:	mov	r1, #1
   10d08:	str	r3, [sp, #4]
   10d0c:	ldr	r3, [r7]
   10d10:	str	ip, [sp, #8]
   10d14:	bl	10a70 <__fprintf_chk@plt>
   10d18:	ldr	ip, [sp, #8]
   10d1c:	mov	r0, ip
   10d20:	mov	ip, #1
   10d24:	str	ip, [sp, #20]
   10d28:	bl	109bc <free@plt>
   10d2c:	b	10d58 <__snprintf_chk@plt+0x2a0>
   10d30:	cmp	r6, r9
   10d34:	ble	10d90 <__snprintf_chk@plt+0x2d8>
   10d38:	cmp	r5, #0
   10d3c:	ldrne	r4, [sl, #8]
   10d40:	b	10d58 <__snprintf_chk@plt+0x2a0>
   10d44:	cmp	r6, r9
   10d48:	ble	10d84 <__snprintf_chk@plt+0x2cc>
   10d4c:	cmp	r5, #0
   10d50:	ldreq	ip, [sl, #8]
   10d54:	streq	ip, [sp, #32]
   10d58:	ldr	ip, [sp, #16]
   10d5c:	cmp	r9, ip
   10d60:	beq	10e10 <__snprintf_chk@plt+0x358>
   10d64:	ldr	r3, [sl, #12]
   10d68:	add	r9, r9, #2
   10d6c:	add	sl, sl, #8
   10d70:	ldrb	r2, [r3]
   10d74:	cmp	r2, #45	; 0x2d
   10d78:	beq	10b50 <__snprintf_chk@plt+0x98>
   10d7c:	mov	r4, r7
   10d80:	b	10bd4 <__snprintf_chk@plt+0x11c>
   10d84:	movw	r0, #5464	; 0x1558
   10d88:	movt	r0, #1
   10d8c:	bl	11090 <__snprintf_chk@plt+0x5d8>
   10d90:	movw	r0, #5496	; 0x1578
   10d94:	movt	r0, #1
   10d98:	bl	11090 <__snprintf_chk@plt+0x5d8>
   10d9c:	movw	r0, #5556	; 0x15b4
   10da0:	movt	r0, #1
   10da4:	bl	11090 <__snprintf_chk@plt+0x5d8>
   10da8:	movw	r0, #5528	; 0x1598
   10dac:	movt	r0, #1
   10db0:	bl	11090 <__snprintf_chk@plt+0x5d8>
   10db4:	movw	r0, #5596	; 0x15dc
   10db8:	movt	r0, #1
   10dbc:	bl	10a04 <puts@plt>
   10dc0:	mov	r0, r5
   10dc4:	bl	10a40 <exit@plt>
   10dc8:	mov	r3, fp
   10dcc:	mov	r1, r4
   10dd0:	mov	r0, #1
   10dd4:	str	ip, [sp, #8]
   10dd8:	bl	10a64 <__printf_chk@plt>
   10ddc:	ldr	r2, [sp, #28]
   10de0:	mov	r0, #10
   10de4:	ldr	r1, [r2]
   10de8:	bl	109ec <_IO_putc@plt>
   10dec:	ldr	ip, [sp, #8]
   10df0:	b	10d1c <__snprintf_chk@plt+0x264>
   10df4:	mov	r2, #10
   10df8:	add	r0, ip, #1
   10dfc:	mov	r1, #0
   10e00:	bl	109b0 <strtol@plt>
   10e04:	mov	r2, #3
   10e08:	str	r0, [sp, #36]	; 0x24
   10e0c:	b	10c74 <__snprintf_chk@plt+0x1bc>
   10e10:	cmp	r5, #0
   10e14:	beq	10ed0 <__snprintf_chk@plt+0x418>
   10e18:	ldr	ip, [sp, #20]
   10e1c:	cmp	ip, #0
   10e20:	beq	10eac <__snprintf_chk@plt+0x3f4>
   10e24:	cmp	r5, #1
   10e28:	bne	10ec8 <__snprintf_chk@plt+0x410>
   10e2c:	ldr	r0, [sp, #12]
   10e30:	bl	10a94 <xcb_disconnect@plt>
   10e34:	mov	r0, #0
   10e38:	bl	10a40 <exit@plt>
   10e3c:	mov	r0, fp
   10e40:	mov	r1, #58	; 0x3a
   10e44:	bl	10a58 <strchr@plt>
   10e48:	subs	ip, r0, #0
   10e4c:	bne	10c30 <__snprintf_chk@plt+0x178>
   10e50:	mov	r0, fp
   10e54:	mov	r2, #10
   10e58:	mov	r1, ip
   10e5c:	bl	109b0 <strtol@plt>
   10e60:	mov	r2, #3
   10e64:	str	r0, [sp, #36]	; 0x24
   10e68:	mov	fp, r0
   10e6c:	b	10c74 <__snprintf_chk@plt+0x1bc>
   10e70:	mov	fp, #1
   10e74:	mov	r2, fp
   10e78:	b	10c74 <__snprintf_chk@plt+0x1bc>
   10e7c:	ldr	r3, [r7, #4]
   10e80:	mov	r1, #1
   10e84:	ldr	ip, [sp, #24]
   10e88:	movw	r2, #5688	; 0x1638
   10e8c:	str	fp, [sp]
   10e90:	movt	r2, #1
   10e94:	str	r1, [sp, #20]
   10e98:	ldr	r0, [ip]
   10e9c:	str	r3, [sp, #4]
   10ea0:	ldr	r3, [r7]
   10ea4:	bl	10a70 <__fprintf_chk@plt>
   10ea8:	b	10d58 <__snprintf_chk@plt+0x2a0>
   10eac:	str	ip, [sp]
   10eb0:	mov	r1, r4
   10eb4:	ldr	r0, [sp, #12]
   10eb8:	mov	r2, ip
   10ebc:	mov	r3, ip
   10ec0:	bl	11244 <__snprintf_chk@plt+0x78c>
   10ec4:	b	10e24 <__snprintf_chk@plt+0x36c>
   10ec8:	add	r5, r5, #1
   10ecc:	b	10b30 <__snprintf_chk@plt+0x78>
   10ed0:	ldr	ip, [sp, #32]
   10ed4:	cmp	ip, #0
   10ed8:	str	ip, [r7, #4]
   10edc:	bne	10f08 <__snprintf_chk@plt+0x450>
   10ee0:	movw	r0, #5644	; 0x160c
   10ee4:	movt	r0, #1
   10ee8:	bl	109f8 <getenv@plt>
   10eec:	movw	r1, #8328	; 0x2088
   10ef0:	movt	r1, #2
   10ef4:	cmp	r0, #0
   10ef8:	str	r0, [r1, #4]
   10efc:	movweq	r3, #5064	; 0x13c8
   10f00:	movteq	r3, #1
   10f04:	streq	r3, [r1, #4]
   10f08:	ldr	r0, [sp, #32]
   10f0c:	mov	r1, #0
   10f10:	bl	109c8 <xcb_connect@plt>
   10f14:	subs	ip, r0, #0
   10f18:	str	ip, [sp, #12]
   10f1c:	beq	10f2c <__snprintf_chk@plt+0x474>
   10f20:	bl	10aa0 <xcb_connection_has_error@plt>
   10f24:	cmp	r0, #0
   10f28:	beq	10ec8 <__snprintf_chk@plt+0x410>
   10f2c:	ldr	ip, [r7, #4]
   10f30:	movw	r0, #8316	; 0x207c
   10f34:	movt	r0, #2
   10f38:	ldr	r3, [r7]
   10f3c:	movw	r2, #5652	; 0x1614
   10f40:	mov	r1, #1
   10f44:	ldr	r0, [r0]
   10f48:	movt	r2, #1
   10f4c:	str	ip, [sp]
   10f50:	bl	10a70 <__fprintf_chk@plt>
   10f54:	mov	r0, #1
   10f58:	bl	10a40 <exit@plt>
   10f5c:	mov	fp, #0
   10f60:	mov	lr, #0
   10f64:	pop	{r1}		; (ldr r1, [sp], #4)
   10f68:	mov	r2, sp
   10f6c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f70:	push	{r0}		; (str r0, [sp, #-4]!)
   10f74:	ldr	ip, [pc, #16]	; 10f8c <__snprintf_chk@plt+0x4d4>
   10f78:	push	{ip}		; (str ip, [sp, #-4]!)
   10f7c:	ldr	r0, [pc, #12]	; 10f90 <__snprintf_chk@plt+0x4d8>
   10f80:	ldr	r3, [pc, #12]	; 10f94 <__snprintf_chk@plt+0x4dc>
   10f84:	bl	10a1c <__libc_start_main@plt>
   10f88:	bl	10aac <abort@plt>
   10f8c:	andeq	r1, r1, ip, lsr #7
   10f90:	andeq	r0, r1, r4, asr #21
   10f94:	andeq	r1, r1, r8, asr #6
   10f98:	ldr	r3, [pc, #20]	; 10fb4 <__snprintf_chk@plt+0x4fc>
   10f9c:	ldr	r2, [pc, #20]	; 10fb8 <__snprintf_chk@plt+0x500>
   10fa0:	add	r3, pc, r3
   10fa4:	ldr	r2, [r3, r2]
   10fa8:	cmp	r2, #0
   10fac:	bxeq	lr
   10fb0:	b	10a34 <__gmon_start__@plt>
   10fb4:	andeq	r1, r1, r8, asr r0
   10fb8:	andeq	r0, r0, r0, ror r0
   10fbc:	push	{r3, lr}
   10fc0:	movw	r0, #8312	; 0x2078
   10fc4:	ldr	r3, [pc, #36]	; 10ff0 <__snprintf_chk@plt+0x538>
   10fc8:	movt	r0, #2
   10fcc:	rsb	r3, r0, r3
   10fd0:	cmp	r3, #6
   10fd4:	popls	{r3, pc}
   10fd8:	movw	r3, #0
   10fdc:	movt	r3, #0
   10fe0:	cmp	r3, #0
   10fe4:	popeq	{r3, pc}
   10fe8:	blx	r3
   10fec:	pop	{r3, pc}
   10ff0:	andeq	r2, r2, fp, ror r0
   10ff4:	push	{r3, lr}
   10ff8:	movw	r0, #8312	; 0x2078
   10ffc:	movw	r3, #8312	; 0x2078
   11000:	movt	r0, #2
   11004:	movt	r3, #2
   11008:	rsb	r3, r0, r3
   1100c:	asr	r3, r3, #2
   11010:	add	r3, r3, r3, lsr #31
   11014:	asrs	r1, r3, #1
   11018:	popeq	{r3, pc}
   1101c:	movw	r2, #0
   11020:	movt	r2, #0
   11024:	cmp	r2, #0
   11028:	popeq	{r3, pc}
   1102c:	blx	r2
   11030:	pop	{r3, pc}
   11034:	push	{r4, lr}
   11038:	movw	r4, #8324	; 0x2084
   1103c:	movt	r4, #2
   11040:	ldrb	r3, [r4]
   11044:	cmp	r3, #0
   11048:	popne	{r4, pc}
   1104c:	bl	10fbc <__snprintf_chk@plt+0x504>
   11050:	mov	r3, #1
   11054:	strb	r3, [r4]
   11058:	pop	{r4, pc}
   1105c:	movw	r0, #7932	; 0x1efc
   11060:	movt	r0, #2
   11064:	push	{r3, lr}
   11068:	ldr	r3, [r0]
   1106c:	cmp	r3, #0
   11070:	beq	11088 <__snprintf_chk@plt+0x5d0>
   11074:	movw	r3, #0
   11078:	movt	r3, #0
   1107c:	cmp	r3, #0
   11080:	beq	11088 <__snprintf_chk@plt+0x5d0>
   11084:	blx	r3
   11088:	pop	{r3, lr}
   1108c:	b	10ff4 <__snprintf_chk@plt+0x53c>
   11090:	cmp	r0, #0
   11094:	push	{r4, r5, lr}
   11098:	movw	r5, #8316	; 0x207c
   1109c:	movw	r4, #8328	; 0x2088
   110a0:	sub	sp, sp, #12
   110a4:	movt	r5, #2
   110a8:	movt	r4, #2
   110ac:	beq	110cc <__snprintf_chk@plt+0x614>
   110b0:	str	r0, [sp]
   110b4:	movw	r2, #5056	; 0x13c0
   110b8:	ldr	r0, [r5]
   110bc:	movt	r2, #1
   110c0:	ldr	r3, [r4]
   110c4:	mov	r1, #1
   110c8:	bl	10a70 <__fprintf_chk@plt>
   110cc:	ldr	r0, [r5]
   110d0:	movw	r1, #5100	; 0x13ec
   110d4:	ldr	r3, [r4]
   110d8:	movt	r1, #1
   110dc:	movw	r2, #5068	; 0x13cc
   110e0:	str	r1, [sp]
   110e4:	movt	r2, #1
   110e8:	mov	r1, #1
   110ec:	bl	10a70 <__fprintf_chk@plt>
   110f0:	mov	r0, #1
   110f4:	bl	10a40 <exit@plt>
   110f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110fc:	sub	sp, sp, #1056	; 0x420
   11100:	sub	sp, sp, #12
   11104:	movw	ip, #8312	; 0x2078
   11108:	movt	ip, #2
   1110c:	mov	r7, r0
   11110:	ldr	r8, [sp, #1104]	; 0x450
   11114:	mov	r5, r2
   11118:	ldr	r0, [ip]
   1111c:	mov	r4, r3
   11120:	cmp	r8, #0
   11124:	str	ip, [sp, #28]
   11128:	str	r1, [sp, #24]
   1112c:	str	r0, [sp, #1060]	; 0x424
   11130:	ble	11234 <__snprintf_chk@plt+0x77c>
   11134:	add	r8, r3, r8
   11138:	mov	r6, r3
   1113c:	mov	r9, r2
   11140:	mov	r1, r6
   11144:	mov	r0, r7
   11148:	bl	10998 <xcb_get_atom_name@plt>
   1114c:	add	r6, r6, #1
   11150:	cmp	r6, r8
   11154:	str	r0, [r9], #4
   11158:	bne	11140 <__snprintf_chk@plt+0x688>
   1115c:	movw	fp, #5392	; 0x1510
   11160:	add	r9, sp, #36	; 0x24
   11164:	movt	fp, #1
   11168:	movw	ip, #8320	; 0x2080
   1116c:	movt	ip, #2
   11170:	str	ip, [sp, #16]
   11174:	mov	ip, #0
   11178:	str	ip, [sp, #20]
   1117c:	mov	r0, r7
   11180:	ldr	r1, [r5]
   11184:	add	r2, sp, #32
   11188:	bl	109e0 <xcb_get_atom_name_reply@plt>
   1118c:	subs	r6, r0, #0
   11190:	beq	111e8 <__snprintf_chk@plt+0x730>
   11194:	ldrh	sl, [r6, #8]
   11198:	bl	10a28 <xcb_get_atom_name_name@plt>
   1119c:	mov	r1, #1024	; 0x400
   111a0:	mov	r2, #1
   111a4:	mov	r3, r1
   111a8:	str	fp, [sp]
   111ac:	str	sl, [sp, #4]
   111b0:	str	r0, [sp, #8]
   111b4:	mov	r0, r9
   111b8:	bl	10ab8 <__snprintf_chk@plt>
   111bc:	ldr	r1, [sp, #24]
   111c0:	mov	r2, r4
   111c4:	mov	r3, r9
   111c8:	mov	r0, #1
   111cc:	bl	10a64 <__printf_chk@plt>
   111d0:	ldr	ip, [sp, #16]
   111d4:	mov	r0, #10
   111d8:	ldr	r1, [ip]
   111dc:	bl	109ec <_IO_putc@plt>
   111e0:	mov	r0, r6
   111e4:	bl	109bc <free@plt>
   111e8:	ldr	r0, [sp, #32]
   111ec:	cmp	r0, #0
   111f0:	beq	11200 <__snprintf_chk@plt+0x748>
   111f4:	mov	ip, #1
   111f8:	str	ip, [sp, #20]
   111fc:	bl	109bc <free@plt>
   11200:	add	r4, r4, #1
   11204:	add	r5, r5, #4
   11208:	cmp	r4, r8
   1120c:	bne	1117c <__snprintf_chk@plt+0x6c4>
   11210:	ldr	ip, [sp, #28]
   11214:	ldr	r2, [sp, #1060]	; 0x424
   11218:	ldr	r0, [sp, #20]
   1121c:	ldr	r3, [ip]
   11220:	cmp	r2, r3
   11224:	bne	11240 <__snprintf_chk@plt+0x788>
   11228:	add	sp, sp, #1056	; 0x420
   1122c:	add	sp, sp, #12
   11230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11234:	mov	ip, #0
   11238:	str	ip, [sp, #20]
   1123c:	b	11210 <__snprintf_chk@plt+0x758>
   11240:	bl	109d4 <__stack_chk_fail@plt>
   11244:	push	{r4, r5, r6, r7, r8, r9, lr}
   11248:	cmp	r2, #2
   1124c:	sub	sp, sp, #12
   11250:	mov	r4, r3
   11254:	mov	r5, r0
   11258:	mov	r6, r1
   1125c:	ldr	r3, [sp, #40]	; 0x28
   11260:	beq	112bc <__snprintf_chk@plt+0x804>
   11264:	cmp	r2, #3
   11268:	beq	112c0 <__snprintf_chk@plt+0x808>
   1126c:	cmp	r2, #1
   11270:	mov	r0, #400	; 0x190
   11274:	movne	r4, #1
   11278:	bl	10a10 <malloc@plt>
   1127c:	subs	r7, r0, #0
   11280:	movne	r8, #100	; 0x64
   11284:	beq	11328 <__snprintf_chk@plt+0x870>
   11288:	mov	r3, r4
   1128c:	str	r8, [sp]
   11290:	mov	r0, r5
   11294:	mov	r1, r6
   11298:	mov	r2, r7
   1129c:	add	r4, r4, #100	; 0x64
   112a0:	bl	110f8 <__snprintf_chk@plt+0x640>
   112a4:	cmp	r0, #0
   112a8:	beq	11288 <__snprintf_chk@plt+0x7d0>
   112ac:	mov	r0, r7
   112b0:	add	sp, sp, #12
   112b4:	pop	{r4, r5, r6, r7, r8, r9, lr}
   112b8:	b	109bc <free@plt>
   112bc:	mov	r4, #1
   112c0:	rsb	r9, r4, r3
   112c4:	add	r7, r9, #1
   112c8:	lsl	r0, r7, #2
   112cc:	bl	10a10 <malloc@plt>
   112d0:	subs	r8, r0, #0
   112d4:	beq	11300 <__snprintf_chk@plt+0x848>
   112d8:	str	r7, [sp]
   112dc:	mov	r0, r5
   112e0:	mov	r1, r6
   112e4:	mov	r3, r4
   112e8:	mov	r2, r8
   112ec:	bl	110f8 <__snprintf_chk@plt+0x640>
   112f0:	mov	r0, r8
   112f4:	add	sp, sp, #12
   112f8:	pop	{r4, r5, r6, r7, r8, r9, lr}
   112fc:	b	109bc <free@plt>
   11300:	movw	r1, #8316	; 0x207c
   11304:	movt	r1, #2
   11308:	movw	r2, #5400	; 0x1518
   1130c:	movt	r2, #1
   11310:	ldr	r0, [r1]
   11314:	mov	r3, r9
   11318:	mov	r1, #1
   1131c:	add	sp, sp, #12
   11320:	pop	{r4, r5, r6, r7, r8, r9, lr}
   11324:	b	10a70 <__fprintf_chk@plt>
   11328:	movw	r3, #8316	; 0x207c
   1132c:	movt	r3, #2
   11330:	movw	r2, #5400	; 0x1518
   11334:	mov	r1, #1
   11338:	ldr	r0, [r3]
   1133c:	movt	r2, #1
   11340:	mov	r3, #100	; 0x64
   11344:	b	1131c <__snprintf_chk@plt+0x864>
   11348:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1134c:	mov	r7, r0
   11350:	ldr	r6, [pc, #76]	; 113a4 <__snprintf_chk@plt+0x8ec>
   11354:	mov	r8, r1
   11358:	ldr	r5, [pc, #72]	; 113a8 <__snprintf_chk@plt+0x8f0>
   1135c:	mov	r9, r2
   11360:	add	r6, pc, r6
   11364:	bl	10978 <_init@@Base>
   11368:	add	r5, pc, r5
   1136c:	rsb	r6, r5, r6
   11370:	asrs	r6, r6, #2
   11374:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11378:	sub	r5, r5, #4
   1137c:	mov	r4, #0
   11380:	add	r4, r4, #1
   11384:	ldr	r3, [r5, #4]!
   11388:	mov	r0, r7
   1138c:	mov	r1, r8
   11390:	mov	r2, r9
   11394:	blx	r3
   11398:	cmp	r4, r6
   1139c:	bne	11380 <__snprintf_chk@plt+0x8c8>
   113a0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   113a4:	muleq	r1, r0, fp
   113a8:	andeq	r0, r1, r4, lsl #23
   113ac:	bx	lr

Disassembly of section .fini:

000113b0 <_fini@@Base>:
   113b0:	push	{r3, lr}
   113b4:	pop	{r3, pc}
