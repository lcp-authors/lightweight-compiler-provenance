
centos-preinstalled/stat:     file format elf32-littlearm


Disassembly of section .init:

000116a0 <_init@@Base>:
   116a0:	push	{r3, lr}
   116a4:	bl	12090 <__assert_fail@plt+0x598>
   116a8:	pop	{r3, pc}

Disassembly of section .plt:

000116ac <fdopen@plt-0x14>:
   116ac:	push	{lr}		; (str lr, [sp, #-4]!)
   116b0:	ldr	lr, [pc, #4]	; 116bc <_init@@Base+0x1c>
   116b4:	add	lr, pc, lr
   116b8:	ldr	pc, [lr, #8]!
   116bc:	andeq	lr, r1, r4, asr #18

000116c0 <fdopen@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #122880	; 0x1e000
   116c8:	ldr	pc, [ip, #2372]!	; 0x944

000116cc <calloc@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #122880	; 0x1e000
   116d4:	ldr	pc, [ip, #2364]!	; 0x93c

000116d8 <fputs_unlocked@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #122880	; 0x1e000
   116e0:	ldr	pc, [ip, #2356]!	; 0x934

000116e4 <strstr@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #122880	; 0x1e000
   116ec:	ldr	pc, [ip, #2348]!	; 0x92c

000116f0 <raise@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #122880	; 0x1e000
   116f8:	ldr	pc, [ip, #2340]!	; 0x924

000116fc <__getdelim@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #122880	; 0x1e000
   11704:	ldr	pc, [ip, #2332]!	; 0x91c

00011708 <is_selinux_enabled@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #122880	; 0x1e000
   11710:	ldr	pc, [ip, #2324]!	; 0x914

00011714 <strcmp@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #122880	; 0x1e000
   1171c:	ldr	pc, [ip, #2316]!	; 0x90c

00011720 <strtol@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #122880	; 0x1e000
   11728:	ldr	pc, [ip, #2308]!	; 0x904

0001172c <getpwuid@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #122880	; 0x1e000
   11734:	ldr	pc, [ip, #2300]!	; 0x8fc

00011738 <mktime@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #122880	; 0x1e000
   11740:	ldr	pc, [ip, #2292]!	; 0x8f4

00011744 <fflush@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #122880	; 0x1e000
   1174c:	ldr	pc, [ip, #2284]!	; 0x8ec

00011750 <free@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #122880	; 0x1e000
   11758:	ldr	pc, [ip, #2276]!	; 0x8e4

0001175c <_exit@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #122880	; 0x1e000
   11764:	ldr	pc, [ip, #2268]!	; 0x8dc

00011768 <memcpy@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #122880	; 0x1e000
   11770:	ldr	pc, [ip, #2260]!	; 0x8d4

00011774 <mbsinit@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #122880	; 0x1e000
   1177c:	ldr	pc, [ip, #2252]!	; 0x8cc

00011780 <memcmp@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #122880	; 0x1e000
   11788:	ldr	pc, [ip, #2244]!	; 0x8c4

0001178c <dcgettext@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #122880	; 0x1e000
   11794:	ldr	pc, [ip, #2236]!	; 0x8bc

00011798 <__stack_chk_fail@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #122880	; 0x1e000
   117a0:	ldr	pc, [ip, #2228]!	; 0x8b4

000117a4 <realloc@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #122880	; 0x1e000
   117ac:	ldr	pc, [ip, #2220]!	; 0x8ac

000117b0 <fgetfilecon@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #122880	; 0x1e000
   117b8:	ldr	pc, [ip, #2212]!	; 0x8a4

000117bc <textdomain@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #122880	; 0x1e000
   117c4:	ldr	pc, [ip, #2204]!	; 0x89c

000117c8 <chdir@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #122880	; 0x1e000
   117d0:	ldr	pc, [ip, #2196]!	; 0x894

000117d4 <iswprint@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #122880	; 0x1e000
   117dc:	ldr	pc, [ip, #2188]!	; 0x88c

000117e0 <__fxstat64@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #122880	; 0x1e000
   117e8:	ldr	pc, [ip, #2180]!	; 0x884

000117ec <readlink@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #122880	; 0x1e000
   117f4:	ldr	pc, [ip, #2172]!	; 0x87c

000117f8 <fwrite@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #122880	; 0x1e000
   11800:	ldr	pc, [ip, #2164]!	; 0x874

00011804 <lseek64@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #122880	; 0x1e000
   1180c:	ldr	pc, [ip, #2156]!	; 0x86c

00011810 <__ctype_get_mb_cur_max@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #122880	; 0x1e000
   11818:	ldr	pc, [ip, #2148]!	; 0x864

0001181c <strcpy@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #122880	; 0x1e000
   11824:	ldr	pc, [ip, #2140]!	; 0x85c

00011828 <__fpending@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #122880	; 0x1e000
   11830:	ldr	pc, [ip, #2132]!	; 0x854

00011834 <mbrtowc@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #122880	; 0x1e000
   1183c:	ldr	pc, [ip, #2124]!	; 0x84c

00011840 <error@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #122880	; 0x1e000
   11848:	ldr	pc, [ip, #2116]!	; 0x844

0001184c <getmntent@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #122880	; 0x1e000
   11854:	ldr	pc, [ip, #2108]!	; 0x83c

00011858 <open64@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #122880	; 0x1e000
   11860:	ldr	pc, [ip, #2100]!	; 0x834

00011864 <getenv@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #122880	; 0x1e000
   1186c:	ldr	pc, [ip, #2092]!	; 0x82c

00011870 <lgetfilecon@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #122880	; 0x1e000
   11878:	ldr	pc, [ip, #2084]!	; 0x824

0001187c <malloc@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #122880	; 0x1e000
   11884:	ldr	pc, [ip, #2076]!	; 0x81c

00011888 <__libc_start_main@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #122880	; 0x1e000
   11890:	ldr	pc, [ip, #2068]!	; 0x814

00011894 <strftime@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #122880	; 0x1e000
   1189c:	ldr	pc, [ip, #2060]!	; 0x80c

000118a0 <__freading@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #122880	; 0x1e000
   118a8:	ldr	pc, [ip, #2052]!	; 0x804

000118ac <localtime@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #122880	; 0x1e000
   118b4:	ldr	pc, [ip, #2044]!	; 0x7fc

000118b8 <__ctype_tolower_loc@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #122880	; 0x1e000
   118c0:	ldr	pc, [ip, #2036]!	; 0x7f4

000118c4 <__ctype_toupper_loc@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #122880	; 0x1e000
   118cc:	ldr	pc, [ip, #2028]!	; 0x7ec

000118d0 <__gmon_start__@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #122880	; 0x1e000
   118d8:	ldr	pc, [ip, #2020]!	; 0x7e4

000118dc <getopt_long@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #122880	; 0x1e000
   118e4:	ldr	pc, [ip, #2012]!	; 0x7dc

000118e8 <__ctype_b_loc@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #122880	; 0x1e000
   118f0:	ldr	pc, [ip, #2004]!	; 0x7d4

000118f4 <getcwd@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #122880	; 0x1e000
   118fc:	ldr	pc, [ip, #1996]!	; 0x7cc

00011900 <exit@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #122880	; 0x1e000
   11908:	ldr	pc, [ip, #1988]!	; 0x7c4

0001190c <getfilecon@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #122880	; 0x1e000
   11914:	ldr	pc, [ip, #1980]!	; 0x7bc

00011918 <strlen@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #122880	; 0x1e000
   11920:	ldr	pc, [ip, #1972]!	; 0x7b4

00011924 <strchr@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #122880	; 0x1e000
   1192c:	ldr	pc, [ip, #1964]!	; 0x7ac

00011930 <openat64@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #122880	; 0x1e000
   11938:	ldr	pc, [ip, #1956]!	; 0x7a4

0001193c <memrchr@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #122880	; 0x1e000
   11944:	ldr	pc, [ip, #1948]!	; 0x79c

00011948 <ungetc@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #122880	; 0x1e000
   11950:	ldr	pc, [ip, #1940]!	; 0x794

00011954 <fcntl@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #122880	; 0x1e000
   1195c:	ldr	pc, [ip, #1932]!	; 0x78c

00011960 <__errno_location@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #122880	; 0x1e000
   11968:	ldr	pc, [ip, #1924]!	; 0x784

0001196c <__sprintf_chk@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #122880	; 0x1e000
   11974:	ldr	pc, [ip, #1916]!	; 0x77c

00011978 <__cxa_atexit@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #122880	; 0x1e000
   11980:	ldr	pc, [ip, #1908]!	; 0x774

00011984 <memset@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #122880	; 0x1e000
   1198c:	ldr	pc, [ip, #1900]!	; 0x76c

00011990 <fscanf@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #122880	; 0x1e000
   11998:	ldr	pc, [ip, #1892]!	; 0x764

0001199c <__printf_chk@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #122880	; 0x1e000
   119a4:	ldr	pc, [ip, #1884]!	; 0x75c

000119a8 <fileno@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #122880	; 0x1e000
   119b0:	ldr	pc, [ip, #1876]!	; 0x754

000119b4 <__fprintf_chk@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #122880	; 0x1e000
   119bc:	ldr	pc, [ip, #1868]!	; 0x74c

000119c0 <memchr@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #122880	; 0x1e000
   119c8:	ldr	pc, [ip, #1860]!	; 0x744

000119cc <fclose@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #122880	; 0x1e000
   119d4:	ldr	pc, [ip, #1852]!	; 0x73c

000119d8 <fseeko64@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #122880	; 0x1e000
   119e0:	ldr	pc, [ip, #1844]!	; 0x734

000119e4 <endmntent@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #122880	; 0x1e000
   119ec:	ldr	pc, [ip, #1836]!	; 0x72c

000119f0 <__uflow@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #122880	; 0x1e000
   119f8:	ldr	pc, [ip, #1828]!	; 0x724

000119fc <__overflow@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #122880	; 0x1e000
   11a04:	ldr	pc, [ip, #1820]!	; 0x71c

00011a08 <setlocale@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #122880	; 0x1e000
   11a10:	ldr	pc, [ip, #1812]!	; 0x714

00011a14 <strrchr@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #122880	; 0x1e000
   11a1c:	ldr	pc, [ip, #1804]!	; 0x70c

00011a20 <statfs64@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #122880	; 0x1e000
   11a28:	ldr	pc, [ip, #1796]!	; 0x704

00011a2c <nl_langinfo@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #122880	; 0x1e000
   11a34:	ldr	pc, [ip, #1788]!	; 0x6fc

00011a38 <sscanf@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #122880	; 0x1e000
   11a40:	ldr	pc, [ip, #1780]!	; 0x6f4

00011a44 <localeconv@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #122880	; 0x1e000
   11a4c:	ldr	pc, [ip, #1772]!	; 0x6ec

00011a50 <fchdir@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #122880	; 0x1e000
   11a58:	ldr	pc, [ip, #1764]!	; 0x6e4

00011a5c <canonicalize_file_name@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #122880	; 0x1e000
   11a64:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a68 <fopen64@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #122880	; 0x1e000
   11a70:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a74 <freecon@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #122880	; 0x1e000
   11a7c:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a80 <setmntent@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #122880	; 0x1e000
   11a88:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a8c <bindtextdomain@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #122880	; 0x1e000
   11a94:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a98 <__xstat64@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #122880	; 0x1e000
   11aa0:	ldr	pc, [ip, #1716]!	; 0x6b4

00011aa4 <strncmp@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #122880	; 0x1e000
   11aac:	ldr	pc, [ip, #1708]!	; 0x6ac

00011ab0 <abort@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #122880	; 0x1e000
   11ab8:	ldr	pc, [ip, #1700]!	; 0x6a4

00011abc <close@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #122880	; 0x1e000
   11ac4:	ldr	pc, [ip, #1692]!	; 0x69c

00011ac8 <__lxstat64@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #122880	; 0x1e000
   11ad0:	ldr	pc, [ip, #1684]!	; 0x694

00011ad4 <getgrgid@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #122880	; 0x1e000
   11adc:	ldr	pc, [ip, #1676]!	; 0x68c

00011ae0 <__snprintf_chk@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #122880	; 0x1e000
   11ae8:	ldr	pc, [ip, #1668]!	; 0x684

00011aec <strspn@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #122880	; 0x1e000
   11af4:	ldr	pc, [ip, #1660]!	; 0x67c

00011af8 <__assert_fail@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #122880	; 0x1e000
   11b00:	ldr	pc, [ip, #1652]!	; 0x674

Disassembly of section .text:

00011b04 <close_stdout@@Base-0x3580>:
   11b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b08:	sub	sp, sp, #252	; 0xfc
   11b0c:	ldr	r4, [pc, #1216]	; 11fd4 <__assert_fail@plt+0x4dc>
   11b10:	mov	r9, r0
   11b14:	ldr	r3, [pc, #1212]	; 11fd8 <__assert_fail@plt+0x4e0>
   11b18:	mov	r5, r1
   11b1c:	add	r4, pc, r4
   11b20:	ldr	r0, [r1]
   11b24:	ldr	r6, [pc, #1200]	; 11fdc <__assert_fail@plt+0x4e4>
   11b28:	ldr	r3, [r4, r3]
   11b2c:	add	r6, pc, r6
   11b30:	ldr	r3, [r3]
   11b34:	str	r3, [sp, #244]	; 0xf4
   11b38:	bl	15630 <close_stdout@@Base+0x5ac>
   11b3c:	ldr	r1, [pc, #1180]	; 11fe0 <__assert_fail@plt+0x4e8>
   11b40:	mov	r0, #6
   11b44:	add	r1, pc, r1
   11b48:	bl	11a08 <setlocale@plt>
   11b4c:	ldr	r1, [pc, #1168]	; 11fe4 <__assert_fail@plt+0x4ec>
   11b50:	mov	r0, r6
   11b54:	add	r1, pc, r1
   11b58:	bl	11a8c <bindtextdomain@plt>
   11b5c:	mov	r0, r6
   11b60:	bl	117bc <textdomain@plt>
   11b64:	bl	11a44 <localeconv@plt>
   11b68:	ldr	r2, [r0]
   11b6c:	ldrb	r3, [r2]
   11b70:	cmp	r3, #0
   11b74:	ldreq	r2, [pc, #1132]	; 11fe8 <__assert_fail@plt+0x4f0>
   11b78:	addeq	r2, pc, r2
   11b7c:	ldr	r3, [pc, #1128]	; 11fec <__assert_fail@plt+0x4f4>
   11b80:	mov	r0, r2
   11b84:	ldr	ip, [pc, #1124]	; 11ff0 <__assert_fail@plt+0x4f8>
   11b88:	mov	sl, #0
   11b8c:	add	r3, pc, r3
   11b90:	ldr	r8, [pc, #1116]	; 11ff4 <__assert_fail@plt+0x4fc>
   11b94:	add	ip, pc, ip
   11b98:	str	ip, [sp, #16]
   11b9c:	mov	r7, r3
   11ba0:	str	r2, [r3, #80]	; 0x50
   11ba4:	bl	11918 <strlen@plt>
   11ba8:	ldr	ip, [pc, #1096]	; 11ff8 <__assert_fail@plt+0x500>
   11bac:	ldr	r2, [pc, #1096]	; 11ffc <__assert_fail@plt+0x504>
   11bb0:	mov	r6, sl
   11bb4:	add	ip, pc, ip
   11bb8:	str	ip, [sp, #20]
   11bbc:	ldr	ip, [pc, #1084]	; 12000 <__assert_fail@plt+0x508>
   11bc0:	mov	fp, sl
   11bc4:	add	r8, pc, r8
   11bc8:	add	ip, pc, ip
   11bcc:	str	ip, [sp, #24]
   11bd0:	ldr	ip, [pc, #1068]	; 12004 <__assert_fail@plt+0x50c>
   11bd4:	add	ip, pc, ip
   11bd8:	str	ip, [sp, #28]
   11bdc:	ldr	ip, [pc, #1060]	; 12008 <__assert_fail@plt+0x510>
   11be0:	add	ip, pc, ip
   11be4:	str	ip, [sp, #32]
   11be8:	str	r0, [r7, #76]	; 0x4c
   11bec:	ldr	r0, [r4, r2]
   11bf0:	bl	1d3a0 <close_stdout@@Base+0x831c>
   11bf4:	ldr	r2, [pc, #1040]	; 1200c <__assert_fail@plt+0x514>
   11bf8:	mov	r7, #0
   11bfc:	ldr	r3, [pc, #1036]	; 12010 <__assert_fail@plt+0x518>
   11c00:	mov	r0, r9
   11c04:	str	r7, [sp]
   11c08:	mov	r1, r5
   11c0c:	add	r2, pc, r2
   11c10:	add	r3, pc, r3
   11c14:	bl	118dc <getopt_long@plt>
   11c18:	cmn	r0, #1
   11c1c:	beq	11d18 <__assert_fail@plt+0x220>
   11c20:	cmp	r0, #99	; 0x63
   11c24:	beq	11cf4 <__assert_fail@plt+0x1fc>
   11c28:	bgt	11c84 <__assert_fail@plt+0x18c>
   11c2c:	cmn	r0, #2
   11c30:	beq	11cdc <__assert_fail@plt+0x1e4>
   11c34:	cmp	r0, #76	; 0x4c
   11c38:	beq	11cc8 <__assert_fail@plt+0x1d0>
   11c3c:	cmn	r0, #3
   11c40:	bne	11c9c <__assert_fail@plt+0x1a4>
   11c44:	ldr	r1, [pc, #968]	; 12014 <__assert_fail@plt+0x51c>
   11c48:	ldr	r3, [pc, #968]	; 12018 <__assert_fail@plt+0x520>
   11c4c:	ldr	r2, [pc, #968]	; 1201c <__assert_fail@plt+0x524>
   11c50:	ldr	r0, [r4, r1]
   11c54:	ldr	r3, [r4, r3]
   11c58:	add	r2, pc, r2
   11c5c:	ldr	r1, [pc, #956]	; 12020 <__assert_fail@plt+0x528>
   11c60:	ldr	r0, [r0]
   11c64:	ldr	r3, [r3]
   11c68:	add	r1, pc, r1
   11c6c:	stm	sp, {r2, r7}
   11c70:	ldr	r2, [pc, #940]	; 12024 <__assert_fail@plt+0x52c>
   11c74:	add	r2, pc, r2
   11c78:	bl	18c30 <close_stdout@@Base+0x3bac>
   11c7c:	mov	r0, r7
   11c80:	bl	11900 <exit@plt>
   11c84:	cmp	r0, #116	; 0x74
   11c88:	beq	11ce4 <__assert_fail@plt+0x1ec>
   11c8c:	cmp	r0, #256	; 0x100
   11c90:	beq	11ca4 <__assert_fail@plt+0x1ac>
   11c94:	cmp	r0, #102	; 0x66
   11c98:	beq	11cec <__assert_fail@plt+0x1f4>
   11c9c:	mov	r0, #1
   11ca0:	bl	14950 <__assert_fail@plt+0x2e58>
   11ca4:	ldr	r3, [pc, #892]	; 12028 <__assert_fail@plt+0x530>
   11ca8:	mov	r2, #1
   11cac:	ldr	ip, [sp, #32]
   11cb0:	ldr	lr, [sp, #28]
   11cb4:	ldr	r3, [r4, r3]
   11cb8:	strb	r2, [r8, #21]
   11cbc:	str	ip, [lr]
   11cc0:	ldr	sl, [r3]
   11cc4:	b	11bf4 <__assert_fail@plt+0xfc>
   11cc8:	ldr	r3, [pc, #860]	; 1202c <__assert_fail@plt+0x534>
   11ccc:	mov	r2, #1
   11cd0:	add	r3, pc, r3
   11cd4:	strb	r2, [r3, #96]	; 0x60
   11cd8:	b	11bf4 <__assert_fail@plt+0xfc>
   11cdc:	mov	r0, r7
   11ce0:	bl	14950 <__assert_fail@plt+0x2e58>
   11ce4:	mov	r6, #1
   11ce8:	b	11bf4 <__assert_fail@plt+0xfc>
   11cec:	mov	fp, #1
   11cf0:	b	11bf4 <__assert_fail@plt+0xfc>
   11cf4:	ldr	ip, [sp, #16]
   11cf8:	ldr	r3, [pc, #808]	; 12028 <__assert_fail@plt+0x530>
   11cfc:	ldr	lr, [sp, #20]
   11d00:	ldr	r3, [r4, r3]
   11d04:	strb	r7, [ip, #21]
   11d08:	ldr	ip, [sp, #24]
   11d0c:	ldr	sl, [r3]
   11d10:	str	ip, [lr]
   11d14:	b	11bf4 <__assert_fail@plt+0xfc>
   11d18:	ldr	r3, [pc, #784]	; 12030 <__assert_fail@plt+0x538>
   11d1c:	ldr	r4, [r4, r3]
   11d20:	ldr	r3, [r4]
   11d24:	cmp	r9, r3
   11d28:	beq	11fac <__assert_fail@plt+0x4b4>
   11d2c:	cmp	sl, #0
   11d30:	strne	sl, [sp, #20]
   11d34:	beq	11f4c <__assert_fail@plt+0x454>
   11d38:	ldr	ip, [pc, #756]	; 12034 <__assert_fail@plt+0x53c>
   11d3c:	mov	r6, #0
   11d40:	ldr	r4, [r4]
   11d44:	mov	r7, #1
   11d48:	add	ip, pc, ip
   11d4c:	str	ip, [sp, #24]
   11d50:	ldr	ip, [pc, #736]	; 12038 <__assert_fail@plt+0x540>
   11d54:	add	r5, r5, r4, lsl #2
   11d58:	str	sl, [sp, #16]
   11d5c:	add	ip, pc, ip
   11d60:	str	ip, [sp, #28]
   11d64:	ldr	ip, [pc, #720]	; 1203c <__assert_fail@plt+0x544>
   11d68:	add	ip, pc, ip
   11d6c:	str	ip, [sp, #44]	; 0x2c
   11d70:	ldr	ip, [pc, #712]	; 12040 <__assert_fail@plt+0x548>
   11d74:	add	ip, pc, ip
   11d78:	str	ip, [sp, #36]	; 0x24
   11d7c:	ldr	ip, [pc, #704]	; 12044 <__assert_fail@plt+0x54c>
   11d80:	add	ip, pc, ip
   11d84:	str	ip, [sp, #40]	; 0x28
   11d88:	ldr	ip, [pc, #696]	; 12048 <__assert_fail@plt+0x550>
   11d8c:	add	ip, pc, ip
   11d90:	str	ip, [sp, #32]
   11d94:	b	11df4 <__assert_fail@plt+0x2fc>
   11d98:	ldrb	r2, [sl]
   11d9c:	cmp	r2, #45	; 0x2d
   11da0:	bne	11eb4 <__assert_fail@plt+0x3bc>
   11da4:	ldrb	r8, [sl, #1]
   11da8:	cmp	r8, #0
   11dac:	bne	11eb4 <__assert_fail@plt+0x3bc>
   11db0:	ldr	r1, [sp, #32]
   11db4:	mov	r2, #5
   11db8:	mov	r0, r8
   11dbc:	bl	1178c <dcgettext@plt>
   11dc0:	mov	r2, r0
   11dc4:	mov	r0, sl
   11dc8:	str	r2, [sp, #12]
   11dcc:	bl	16e80 <close_stdout@@Base+0x1dfc>
   11dd0:	mov	r1, r8
   11dd4:	ldr	r2, [sp, #12]
   11dd8:	mov	r3, r0
   11ddc:	mov	r0, r8
   11de0:	bl	11840 <error@plt>
   11de4:	mov	ip, r8
   11de8:	and	r7, ip, r7
   11dec:	add	r4, r4, #1
   11df0:	add	r6, r6, #4
   11df4:	cmp	r4, r9
   11df8:	bge	11f44 <__assert_fail@plt+0x44c>
   11dfc:	cmp	fp, #0
   11e00:	ldr	sl, [r5, r6]
   11e04:	bne	11d98 <__assert_fail@plt+0x2a0>
   11e08:	ldrb	r3, [sl]
   11e0c:	cmp	r3, #45	; 0x2d
   11e10:	bne	11e74 <__assert_fail@plt+0x37c>
   11e14:	ldrb	r3, [sl, #1]
   11e18:	cmp	r3, #0
   11e1c:	bne	11e74 <__assert_fail@plt+0x37c>
   11e20:	add	r8, sp, #136	; 0x88
   11e24:	mov	r0, #3
   11e28:	mov	r1, fp
   11e2c:	mov	r2, r8
   11e30:	bl	117e0 <__fxstat64@plt>
   11e34:	cmp	r0, #0
   11e38:	bne	11f78 <__assert_fail@plt+0x480>
   11e3c:	ldr	r0, [sp, #152]	; 0x98
   11e40:	mov	r1, sl
   11e44:	ldr	lr, [sp, #16]
   11e48:	mov	r3, r8
   11e4c:	and	r0, r0, #45056	; 0xb000
   11e50:	ldr	ip, [sp, #20]
   11e54:	cmp	r0, #8192	; 0x2000
   11e58:	ldr	r2, [sp, #24]
   11e5c:	movne	ip, lr
   11e60:	mov	r0, ip
   11e64:	bl	134a4 <__assert_fail@plt+0x19ac>
   11e68:	eor	r0, r0, #1
   11e6c:	uxtb	ip, r0
   11e70:	b	11de8 <__assert_fail@plt+0x2f0>
   11e74:	ldr	ip, [sp, #28]
   11e78:	add	r8, sp, #136	; 0x88
   11e7c:	mov	r0, #3
   11e80:	mov	r1, sl
   11e84:	mov	r2, r8
   11e88:	ldrb	r3, [ip, #96]	; 0x60
   11e8c:	cmp	r3, #0
   11e90:	beq	11eec <__assert_fail@plt+0x3f4>
   11e94:	bl	11a98 <__xstat64@plt>
   11e98:	adds	r0, r0, #0
   11e9c:	movne	r0, #1
   11ea0:	cmp	r0, #0
   11ea4:	beq	11e3c <__assert_fail@plt+0x344>
   11ea8:	bl	11960 <__errno_location@plt>
   11eac:	ldr	r1, [sp, #44]	; 0x2c
   11eb0:	b	11f04 <__assert_fail@plt+0x40c>
   11eb4:	add	r8, sp, #48	; 0x30
   11eb8:	mov	r0, sl
   11ebc:	mov	r1, r8
   11ec0:	bl	11a20 <statfs64@plt>
   11ec4:	cmp	r0, #0
   11ec8:	bne	11efc <__assert_fail@plt+0x404>
   11ecc:	mov	r1, sl
   11ed0:	mov	r3, r8
   11ed4:	ldr	r0, [sp, #16]
   11ed8:	ldr	r2, [sp, #36]	; 0x24
   11edc:	bl	134a4 <__assert_fail@plt+0x19ac>
   11ee0:	eor	r0, r0, #1
   11ee4:	uxtb	ip, r0
   11ee8:	b	11de8 <__assert_fail@plt+0x2f0>
   11eec:	bl	11ac8 <__lxstat64@plt>
   11ef0:	adds	r0, r0, #0
   11ef4:	movne	r0, #1
   11ef8:	b	11ea0 <__assert_fail@plt+0x3a8>
   11efc:	bl	11960 <__errno_location@plt>
   11f00:	ldr	r1, [sp, #40]	; 0x28
   11f04:	ldr	ip, [r0]
   11f08:	mov	r2, #5
   11f0c:	mov	r0, #0
   11f10:	str	ip, [sp, #12]
   11f14:	bl	1178c <dcgettext@plt>
   11f18:	mov	r8, r0
   11f1c:	mov	r0, sl
   11f20:	bl	16e80 <close_stdout@@Base+0x1dfc>
   11f24:	ldr	ip, [sp, #12]
   11f28:	mov	r2, r8
   11f2c:	mov	r1, ip
   11f30:	mov	r3, r0
   11f34:	mov	r0, #0
   11f38:	bl	11840 <error@plt>
   11f3c:	mov	ip, #0
   11f40:	b	11de8 <__assert_fail@plt+0x2f0>
   11f44:	eor	r0, r7, #1
   11f48:	bl	11900 <exit@plt>
   11f4c:	mov	r2, sl
   11f50:	mov	r1, r6
   11f54:	mov	r0, fp
   11f58:	bl	13d34 <__assert_fail@plt+0x223c>
   11f5c:	mov	r1, r6
   11f60:	mov	r2, #1
   11f64:	mov	sl, r0
   11f68:	mov	r0, fp
   11f6c:	bl	13d34 <__assert_fail@plt+0x223c>
   11f70:	str	r0, [sp, #20]
   11f74:	b	11d38 <__assert_fail@plt+0x240>
   11f78:	bl	11960 <__errno_location@plt>
   11f7c:	ldr	r1, [pc, #200]	; 1204c <__assert_fail@plt+0x554>
   11f80:	mov	r2, #5
   11f84:	add	r1, pc, r1
   11f88:	ldr	r8, [r0]
   11f8c:	mov	r0, fp
   11f90:	bl	1178c <dcgettext@plt>
   11f94:	mov	r1, r8
   11f98:	mov	r2, r0
   11f9c:	mov	r0, fp
   11fa0:	bl	11840 <error@plt>
   11fa4:	mov	ip, fp
   11fa8:	b	11de8 <__assert_fail@plt+0x2f0>
   11fac:	ldr	r1, [pc, #156]	; 12050 <__assert_fail@plt+0x558>
   11fb0:	mov	r0, r7
   11fb4:	mov	r2, #5
   11fb8:	add	r1, pc, r1
   11fbc:	bl	1178c <dcgettext@plt>
   11fc0:	mov	r1, r7
   11fc4:	mov	r2, r0
   11fc8:	mov	r0, r7
   11fcc:	bl	11840 <error@plt>
   11fd0:	b	11c9c <__assert_fail@plt+0x1a4>
   11fd4:	ldrdeq	lr, [r1], -ip
   11fd8:	andeq	r0, r0, ip, ror r1
   11fdc:	andeq	ip, r0, ip, asr fp
   11fe0:	andeq	ip, r0, r4, lsl #24
   11fe4:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   11fe8:	ldrdeq	ip, [r0], -r4
   11fec:	andeq	lr, r1, r4, ror r6
   11ff0:	andeq	lr, r1, ip, ror #12
   11ff4:	andeq	lr, r1, ip, lsr r6
   11ff8:	strdeq	lr, [r1], -ip
   11ffc:	andeq	r0, r0, ip, lsl #3
   12000:	andeq	ip, r0, ip, ror #15
   12004:	ldrdeq	lr, [r1], -ip
   12008:	andeq	ip, r0, r8, ror #22
   1200c:	andeq	ip, r0, r8, ror #22
   12010:	andeq	lr, r1, r4, asr #4
   12014:	muleq	r0, r8, r1
   12018:	andeq	r0, r0, r4, lsl #3
   1201c:	andeq	ip, r0, ip, lsl #22
   12020:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   12024:	andeq	ip, r0, r0, lsl sl
   12028:			; <UNDEFINED> instruction: 0x000001b0
   1202c:	andeq	lr, r1, r0, lsr r5
   12030:	andeq	r0, r0, r0, lsl #3
   12034:	andeq	r2, r0, ip, lsr #9
   12038:	andeq	lr, r1, r4, lsr #9
   1203c:			; <UNDEFINED> instruction: 0x0000cab0
   12040:	andeq	r0, r0, r8, asr #11
   12044:	andeq	ip, r0, r0, asr sl
   12048:	andeq	ip, r0, r0, lsl #20
   1204c:	andeq	ip, r0, r8, ror r8
   12050:	andeq	ip, r0, r4, asr #15
   12054:	mov	fp, #0
   12058:	mov	lr, #0
   1205c:	pop	{r1}		; (ldr r1, [sp], #4)
   12060:	mov	r2, sp
   12064:	push	{r2}		; (str r2, [sp, #-4]!)
   12068:	push	{r0}		; (str r0, [sp, #-4]!)
   1206c:	ldr	ip, [pc, #16]	; 12084 <__assert_fail@plt+0x58c>
   12070:	push	{ip}		; (str ip, [sp, #-4]!)
   12074:	ldr	r0, [pc, #12]	; 12088 <__assert_fail@plt+0x590>
   12078:	ldr	r3, [pc, #12]	; 1208c <__assert_fail@plt+0x594>
   1207c:	bl	11888 <__libc_start_main@plt>
   12080:	bl	11ab0 <abort@plt>
   12084:	muleq	r1, ip, r3
   12088:	andeq	r1, r1, r4, lsl #22
   1208c:	andeq	sp, r1, r8, lsr r3
   12090:	ldr	r3, [pc, #20]	; 120ac <__assert_fail@plt+0x5b4>
   12094:	ldr	r2, [pc, #20]	; 120b0 <__assert_fail@plt+0x5b8>
   12098:	add	r3, pc, r3
   1209c:	ldr	r2, [r3, r2]
   120a0:	cmp	r2, #0
   120a4:	bxeq	lr
   120a8:	b	118d0 <__gmon_start__@plt>
   120ac:	andeq	sp, r1, r0, ror #30
   120b0:	muleq	r0, r0, r1
   120b4:	push	{r3, lr}
   120b8:	movw	r0, #516	; 0x204
   120bc:	ldr	r3, [pc, #36]	; 120e8 <__assert_fail@plt+0x5f0>
   120c0:	movt	r0, #3
   120c4:	rsb	r3, r0, r3
   120c8:	cmp	r3, #6
   120cc:	popls	{r3, pc}
   120d0:	movw	r3, #0
   120d4:	movt	r3, #0
   120d8:	cmp	r3, #0
   120dc:	popeq	{r3, pc}
   120e0:	blx	r3
   120e4:	pop	{r3, pc}
   120e8:	andeq	r0, r3, r7, lsl #4
   120ec:	push	{r3, lr}
   120f0:	movw	r0, #516	; 0x204
   120f4:	movw	r3, #516	; 0x204
   120f8:	movt	r0, #3
   120fc:	movt	r3, #3
   12100:	rsb	r3, r0, r3
   12104:	asr	r3, r3, #2
   12108:	add	r3, r3, r3, lsr #31
   1210c:	asrs	r1, r3, #1
   12110:	popeq	{r3, pc}
   12114:	movw	r2, #0
   12118:	movt	r2, #0
   1211c:	cmp	r2, #0
   12120:	popeq	{r3, pc}
   12124:	blx	r2
   12128:	pop	{r3, pc}
   1212c:	push	{r4, lr}
   12130:	movw	r4, #516	; 0x204
   12134:	movt	r4, #3
   12138:	ldrb	r3, [r4]
   1213c:	cmp	r3, #0
   12140:	popne	{r4, pc}
   12144:	bl	120b4 <__assert_fail@plt+0x5bc>
   12148:	mov	r3, #1
   1214c:	strb	r3, [r4]
   12150:	pop	{r4, pc}
   12154:	movw	r0, #65112	; 0xfe58
   12158:	movt	r0, #2
   1215c:	push	{r3, lr}
   12160:	ldr	r3, [r0]
   12164:	cmp	r3, #0
   12168:	beq	12180 <__assert_fail@plt+0x688>
   1216c:	movw	r3, #0
   12170:	movt	r3, #0
   12174:	cmp	r3, #0
   12178:	beq	12180 <__assert_fail@plt+0x688>
   1217c:	blx	r3
   12180:	pop	{r3, lr}
   12184:	b	120ec <__assert_fail@plt+0x5f4>
   12188:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1218c:	add	r8, r0, r1
   12190:	add	r4, r0, #1
   12194:	mov	sl, r2
   12198:	cmp	r4, r8
   1219c:	mov	r9, r3
   121a0:	bcs	12228 <__assert_fail@plt+0x730>
   121a4:	ldr	fp, [pc, #140]	; 12238 <__assert_fail@plt+0x740>
   121a8:	mov	r7, r4
   121ac:	add	fp, pc, fp
   121b0:	b	121cc <__assert_fail@plt+0x6d4>
   121b4:	bl	11924 <strchr@plt>
   121b8:	cmp	r0, #0
   121bc:	strbne	r5, [r4]
   121c0:	addne	r4, r4, #1
   121c4:	cmp	r7, r8
   121c8:	beq	12228 <__assert_fail@plt+0x730>
   121cc:	ldrb	r5, [r7]
   121d0:	mov	r0, fp
   121d4:	mov	r6, r7
   121d8:	add	r7, r7, #1
   121dc:	mov	r1, r5
   121e0:	bl	11924 <strchr@plt>
   121e4:	mov	r1, r5
   121e8:	cmp	r0, #0
   121ec:	mov	r0, sl
   121f0:	bne	121b4 <__assert_fail@plt+0x6bc>
   121f4:	cmp	r8, r6
   121f8:	mov	r1, r4
   121fc:	bls	12228 <__assert_fail@plt+0x730>
   12200:	rsb	r3, r6, r8
   12204:	mov	r2, r6
   12208:	add	r3, r4, r3
   1220c:	b	12214 <__assert_fail@plt+0x71c>
   12210:	ldrb	r5, [r2, #1]!
   12214:	strb	r5, [r4], #1
   12218:	cmp	r4, r3
   1221c:	bne	12210 <__assert_fail@plt+0x718>
   12220:	rsb	r4, r6, r8
   12224:	add	r4, r1, r4
   12228:	mov	r0, r4
   1222c:	mov	r1, r9
   12230:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12234:	b	1181c <strcpy@plt>
   12238:	andeq	fp, r0, r8, lsr #4
   1223c:	push	{r4, r5, r6, lr}
   12240:	mov	r4, r2
   12244:	mov	r5, r3
   12248:	ldr	r2, [pc, #40]	; 12278 <__assert_fail@plt+0x780>
   1224c:	ldr	r3, [pc, #40]	; 1227c <__assert_fail@plt+0x784>
   12250:	mov	r6, r0
   12254:	add	r2, pc, r2
   12258:	add	r3, pc, r3
   1225c:	bl	12188 <__assert_fail@plt+0x690>
   12260:	mov	r1, r6
   12264:	mov	r2, r4
   12268:	mov	r3, r5
   1226c:	mov	r0, #1
   12270:	pop	{r4, r5, r6, lr}
   12274:	b	1199c <__printf_chk@plt>
   12278:	muleq	r0, r4, r1
   1227c:	muleq	r0, r4, r1
   12280:	push	{r3, r4, r5, lr}
   12284:	mov	r4, r2
   12288:	ldr	r3, [pc, #36]	; 122b4 <__assert_fail@plt+0x7bc>
   1228c:	mov	r5, r0
   12290:	ldr	r2, [pc, #32]	; 122b8 <__assert_fail@plt+0x7c0>
   12294:	add	r3, pc, r3
   12298:	add	r2, pc, r2
   1229c:	bl	12188 <__assert_fail@plt+0x690>
   122a0:	mov	r1, r5
   122a4:	mov	r2, r4
   122a8:	mov	r0, #1
   122ac:	pop	{r3, r4, r5, lr}
   122b0:	b	1199c <__printf_chk@plt>
   122b4:	andeq	fp, r0, r0, ror #17
   122b8:	andeq	fp, r0, r8, asr r1
   122bc:	push	{r4, r5, r6, lr}
   122c0:	mov	r4, r2
   122c4:	mov	r5, r3
   122c8:	ldr	r2, [pc, #40]	; 122f8 <__assert_fail@plt+0x800>
   122cc:	ldr	r3, [pc, #40]	; 122fc <__assert_fail@plt+0x804>
   122d0:	mov	r6, r0
   122d4:	add	r2, pc, r2
   122d8:	add	r3, pc, r3
   122dc:	bl	12188 <__assert_fail@plt+0x690>
   122e0:	mov	r1, r6
   122e4:	mov	r2, r4
   122e8:	mov	r3, r5
   122ec:	mov	r0, #1
   122f0:	pop	{r4, r5, r6, lr}
   122f4:	b	1199c <__printf_chk@plt>
   122f8:	andeq	fp, r0, r0, lsr #2
   122fc:	andeq	fp, r0, r0, lsr #2
   12300:	push	{r4, r5, r6, lr}
   12304:	mov	r4, r2
   12308:	mov	r5, r3
   1230c:	ldr	r2, [pc, #40]	; 1233c <__assert_fail@plt+0x844>
   12310:	ldr	r3, [pc, #40]	; 12340 <__assert_fail@plt+0x848>
   12314:	mov	r6, r0
   12318:	add	r2, pc, r2
   1231c:	add	r3, pc, r3
   12320:	bl	12188 <__assert_fail@plt+0x690>
   12324:	mov	r1, r6
   12328:	mov	r2, r4
   1232c:	mov	r3, r5
   12330:	mov	r0, #1
   12334:	pop	{r4, r5, r6, lr}
   12338:	b	1199c <__printf_chk@plt>
   1233c:	andeq	fp, r0, r4, ror #1
   12340:	andeq	fp, r0, r8, ror #1
   12344:	push	{r4, r5, r6, lr}
   12348:	sub	r2, r2, #83	; 0x53
   1234c:	ldr	r4, [pc, #3928]	; 132ac <__assert_fail@plt+0x17b4>
   12350:	sub	sp, sp, #8
   12354:	mov	r6, r0
   12358:	mov	r5, r1
   1235c:	add	r4, pc, r4
   12360:	cmp	r2, #33	; 0x21
   12364:	addls	pc, pc, r2, lsl #2
   12368:	b	12594 <__assert_fail@plt+0xa9c>
   1236c:	b	12410 <__assert_fail@plt+0x918>
   12370:	b	12434 <__assert_fail@plt+0x93c>
   12374:	b	12594 <__assert_fail@plt+0xa9c>
   12378:	b	12594 <__assert_fail@plt+0xa9c>
   1237c:	b	12594 <__assert_fail@plt+0xa9c>
   12380:	b	12594 <__assert_fail@plt+0xa9c>
   12384:	b	12594 <__assert_fail@plt+0xa9c>
   12388:	b	12594 <__assert_fail@plt+0xa9c>
   1238c:	b	12594 <__assert_fail@plt+0xa9c>
   12390:	b	12594 <__assert_fail@plt+0xa9c>
   12394:	b	12594 <__assert_fail@plt+0xa9c>
   12398:	b	12594 <__assert_fail@plt+0xa9c>
   1239c:	b	12594 <__assert_fail@plt+0xa9c>
   123a0:	b	12594 <__assert_fail@plt+0xa9c>
   123a4:	b	124e4 <__assert_fail@plt+0x9ec>
   123a8:	b	124f4 <__assert_fail@plt+0x9fc>
   123ac:	b	12504 <__assert_fail@plt+0xa0c>
   123b0:	b	12514 <__assert_fail@plt+0xa1c>
   123b4:	b	12594 <__assert_fail@plt+0xa9c>
   123b8:	b	12524 <__assert_fail@plt+0xa2c>
   123bc:	b	12594 <__assert_fail@plt+0xa9c>
   123c0:	b	12594 <__assert_fail@plt+0xa9c>
   123c4:	b	12534 <__assert_fail@plt+0xa3c>
   123c8:	b	12594 <__assert_fail@plt+0xa9c>
   123cc:	b	12594 <__assert_fail@plt+0xa9c>
   123d0:	b	12558 <__assert_fail@plt+0xa60>
   123d4:	b	12594 <__assert_fail@plt+0xa9c>
   123d8:	b	12570 <__assert_fail@plt+0xa78>
   123dc:	b	12594 <__assert_fail@plt+0xa9c>
   123e0:	b	12594 <__assert_fail@plt+0xa9c>
   123e4:	b	12594 <__assert_fail@plt+0xa9c>
   123e8:	b	12594 <__assert_fail@plt+0xa9c>
   123ec:	b	1257c <__assert_fail@plt+0xa84>
   123f0:	b	123f4 <__assert_fail@plt+0x8fc>
   123f4:	ldr	r3, [sp, #24]
   123f8:	ldr	r2, [r3]
   123fc:	asr	r3, r2, #31
   12400:	bl	1223c <__assert_fail@plt+0x744>
   12404:	mov	r0, #0
   12408:	add	sp, sp, #8
   1240c:	pop	{r4, r5, r6, pc}
   12410:	ldr	r3, [sp, #24]
   12414:	ldr	r2, [r3, #60]	; 0x3c
   12418:	asr	r3, r2, #31
   1241c:	orrs	ip, r2, r3
   12420:	ldreq	lr, [sp, #24]
   12424:	ldreq	r2, [lr, #4]
   12428:	asreq	r3, r2, #31
   1242c:	bl	122bc <__assert_fail@plt+0x7c4>
   12430:	b	12404 <__assert_fail@plt+0x90c>
   12434:	ldr	ip, [sp, #24]
   12438:	movw	r2, #63413	; 0xf7b5
   1243c:	movt	r2, #303	; 0x12f
   12440:	ldr	r3, [ip]
   12444:	cmp	r3, r2
   12448:	beq	130c0 <__assert_fail@plt+0x15c8>
   1244c:	ble	125cc <__assert_fail@plt+0xad4>
   12450:	movw	r2, #17227	; 0x434b
   12454:	movt	r2, #21327	; 0x534f
   12458:	cmp	r3, r2
   1245c:	beq	13090 <__assert_fail@plt+0x1598>
   12460:	bgt	12644 <__assert_fail@plt+0xb4c>
   12464:	movw	r2, #15685	; 0x3d45
   12468:	movt	r2, #10445	; 0x28cd
   1246c:	cmp	r3, r2
   12470:	beq	130fc <__assert_fail@plt+0x1604>
   12474:	bgt	12700 <__assert_fail@plt+0xc08>
   12478:	mov	r2, #3024	; 0xbd0
   1247c:	movt	r2, #3024	; 0xbd0
   12480:	cmp	r3, r2
   12484:	beq	131c8 <__assert_fail@plt+0x16d0>
   12488:	mov	r2, #3024	; 0xbd0
   1248c:	movt	r2, #3024	; 0xbd0
   12490:	cmp	r3, r2
   12494:	ble	12980 <__assert_fail@plt+0xe88>
   12498:	movw	r2, #514	; 0x202
   1249c:	movt	r2, #6528	; 0x1980
   124a0:	cmp	r3, r2
   124a4:	beq	131d4 <__assert_fail@plt+0x16dc>
   124a8:	bgt	12a2c <__assert_fail@plt+0xf34>
   124ac:	movw	r2, #4966	; 0x1366
   124b0:	movt	r2, #4966	; 0x1366
   124b4:	cmp	r3, r2
   124b8:	beq	13018 <__assert_fail@plt+0x1520>
   124bc:	movw	r2, #13126	; 0x3346
   124c0:	movt	r2, #5377	; 0x1501
   124c4:	cmp	r3, r2
   124c8:	bne	12ed4 <__assert_fail@plt+0x13dc>
   124cc:	ldr	r2, [pc, #3548]	; 132b0 <__assert_fail@plt+0x17b8>
   124d0:	add	r2, pc, r2
   124d4:	mov	r0, r6
   124d8:	mov	r1, r5
   124dc:	bl	12280 <__assert_fail@plt+0x788>
   124e0:	b	12404 <__assert_fail@plt+0x90c>
   124e4:	ldr	lr, [sp, #24]
   124e8:	ldrd	r2, [lr, #24]
   124ec:	bl	12300 <__assert_fail@plt+0x808>
   124f0:	b	12404 <__assert_fail@plt+0x90c>
   124f4:	ldr	lr, [sp, #24]
   124f8:	ldrd	r2, [lr, #8]
   124fc:	bl	12300 <__assert_fail@plt+0x808>
   12500:	b	12404 <__assert_fail@plt+0x90c>
   12504:	ldr	ip, [sp, #24]
   12508:	ldrd	r2, [ip, #32]
   1250c:	bl	122bc <__assert_fail@plt+0x7c4>
   12510:	b	12404 <__assert_fail@plt+0x90c>
   12514:	ldr	lr, [sp, #24]
   12518:	ldrd	r2, [lr, #40]	; 0x28
   1251c:	bl	12300 <__assert_fail@plt+0x808>
   12520:	b	12404 <__assert_fail@plt+0x90c>
   12524:	ldr	ip, [sp, #24]
   12528:	ldrd	r2, [ip, #16]
   1252c:	bl	12300 <__assert_fail@plt+0x808>
   12530:	b	12404 <__assert_fail@plt+0x90c>
   12534:	ldr	r1, [sp, #24]
   12538:	mov	r2, #0
   1253c:	ldr	lr, [sp, #24]
   12540:	ldr	ip, [r1, #52]	; 0x34
   12544:	mov	r1, r5
   12548:	ldr	r3, [lr, #48]	; 0x30
   1254c:	orr	r2, r2, ip
   12550:	bl	1223c <__assert_fail@plt+0x744>
   12554:	b	12404 <__assert_fail@plt+0x90c>
   12558:	ldr	r1, [sp, #24]
   1255c:	ldr	r2, [r1, #56]	; 0x38
   12560:	mov	r1, r5
   12564:	asr	r3, r2, #31
   12568:	bl	122bc <__assert_fail@plt+0x7c4>
   1256c:	b	12404 <__assert_fail@plt+0x90c>
   12570:	mov	r2, r3
   12574:	bl	12280 <__assert_fail@plt+0x788>
   12578:	b	12404 <__assert_fail@plt+0x90c>
   1257c:	ldr	r1, [sp, #24]
   12580:	ldr	r2, [r1, #4]
   12584:	mov	r1, r5
   12588:	asr	r3, r2, #31
   1258c:	bl	122bc <__assert_fail@plt+0x7c4>
   12590:	b	12404 <__assert_fail@plt+0x90c>
   12594:	ldr	r3, [pc, #3352]	; 132b4 <__assert_fail@plt+0x17bc>
   12598:	ldr	r3, [r4, r3]
   1259c:	ldr	r0, [r3]
   125a0:	ldr	r3, [r0, #20]
   125a4:	ldr	r2, [r0, #24]
   125a8:	cmp	r3, r2
   125ac:	addcc	r1, r3, #1
   125b0:	strcc	r1, [r0, #20]
   125b4:	movcc	r2, #63	; 0x3f
   125b8:	strbcc	r2, [r3]
   125bc:	bcc	12404 <__assert_fail@plt+0x90c>
   125c0:	mov	r1, #63	; 0x3f
   125c4:	bl	119fc <__overflow@plt>
   125c8:	b	12404 <__assert_fail@plt+0x90c>
   125cc:	movw	r2, #16390	; 0x4006
   125d0:	cmp	r3, r2
   125d4:	beq	1309c <__assert_fail@plt+0x15a4>
   125d8:	bgt	126ac <__assert_fail@plt+0xbb4>
   125dc:	movw	r2, #19778	; 0x4d42
   125e0:	movt	r2, #65107	; 0xfe53
   125e4:	cmp	r3, r2
   125e8:	beq	13210 <__assert_fail@plt+0x1718>
   125ec:	bgt	127ec <__assert_fail@plt+0xcf4>
   125f0:	movw	r2, #44220	; 0xacbc
   125f4:	movt	r2, #47819	; 0xbacb
   125f8:	cmp	r3, r2
   125fc:	beq	131bc <__assert_fail@plt+0x16c4>
   12600:	ble	12940 <__assert_fail@plt+0xe48>
   12604:	movw	r2, #33252	; 0x81e4
   12608:	movt	r2, #56926	; 0xde5e
   1260c:	cmp	r3, r2
   12610:	beq	131e0 <__assert_fail@plt+0x16e8>
   12614:	bgt	12a58 <__assert_fail@plt+0xf60>
   12618:	movw	r2, #33128	; 0x8168
   1261c:	movt	r2, #51582	; 0xc97e
   12620:	cmp	r3, r2
   12624:	beq	13114 <__assert_fail@plt+0x161c>
   12628:	movw	r2, #18961	; 0x4a11
   1262c:	movt	r2, #51966	; 0xcafe
   12630:	cmp	r3, r2
   12634:	bne	12dc4 <__assert_fail@plt+0x12cc>
   12638:	ldr	r2, [pc, #3192]	; 132b8 <__assert_fail@plt+0x17c0>
   1263c:	add	r2, pc, r2
   12640:	b	124d4 <__assert_fail@plt+0x9dc>
   12644:	movw	r2, #24952	; 0x6178
   12648:	movt	r2, #25700	; 0x6464
   1264c:	cmp	r3, r2
   12650:	beq	13108 <__assert_fail@plt+0x1610>
   12654:	movw	r2, #26227	; 0x6673
   12658:	bgt	12754 <__assert_fail@plt+0xc5c>
   1265c:	movt	r2, #24931	; 0x6163
   12660:	cmp	r3, r2
   12664:	beq	132a0 <__assert_fail@plt+0x17a8>
   12668:	ble	128f4 <__assert_fail@plt+0xdfc>
   1266c:	movw	r2, #25968	; 0x6570
   12670:	movt	r2, #25189	; 0x6265
   12674:	cmp	r3, r2
   12678:	beq	13150 <__assert_fail@plt+0x1658>
   1267c:	bgt	12afc <__assert_fail@plt+0x1004>
   12680:	movw	r2, #26227	; 0x6673
   12684:	movt	r2, #24949	; 0x6175
   12688:	cmp	r3, r2
   1268c:	beq	13120 <__assert_fail@plt+0x1628>
   12690:	movw	r2, #25974	; 0x6576
   12694:	movt	r2, #25188	; 0x6264
   12698:	cmp	r3, r2
   1269c:	bne	12de0 <__assert_fail@plt+0x12e8>
   126a0:	ldr	r2, [pc, #3092]	; 132bc <__assert_fail@plt+0x17c4>
   126a4:	add	r2, pc, r2
   126a8:	b	124d4 <__assert_fail@plt+0x9dc>
   126ac:	movw	r2, #40866	; 0x9fa2
   126b0:	cmp	r3, r2
   126b4:	beq	13204 <__assert_fail@plt+0x170c>
   126b8:	bgt	127a4 <__assert_fail@plt+0xcac>
   126bc:	movw	r2, #22092	; 0x564c
   126c0:	cmp	r3, r2
   126c4:	beq	131b0 <__assert_fail@plt+0x16b8>
   126c8:	ble	129f8 <__assert_fail@plt+0xf00>
   126cc:	movw	r2, #29366	; 0x72b6
   126d0:	cmp	r3, r2
   126d4:	beq	13180 <__assert_fail@plt+0x1688>
   126d8:	bgt	12bac <__assert_fail@plt+0x10b4>
   126dc:	movw	r2, #26985	; 0x6969
   126e0:	cmp	r3, r2
   126e4:	beq	130d8 <__assert_fail@plt+0x15e0>
   126e8:	movw	r2, #29301	; 0x7275
   126ec:	cmp	r3, r2
   126f0:	bne	12e18 <__assert_fail@plt+0x1320>
   126f4:	ldr	r2, [pc, #3012]	; 132c0 <__assert_fail@plt+0x17c8>
   126f8:	add	r2, pc, r2
   126fc:	b	124d4 <__assert_fail@plt+0x9dc>
   12700:	movw	r2, #18003	; 0x4653
   12704:	movt	r2, #17752	; 0x4558
   12708:	cmp	r3, r2
   1270c:	beq	13234 <__assert_fail@plt+0x173c>
   12710:	bgt	12834 <__assert_fail@plt+0xd3c>
   12714:	movw	r2, #21297	; 0x5331
   12718:	movt	r2, #16966	; 0x4246
   1271c:	cmp	r3, r2
   12720:	beq	1315c <__assert_fail@plt+0x1664>
   12724:	bgt	12b28 <__assert_fail@plt+0x1030>
   12728:	movw	r2, #12225	; 0x2fc1
   1272c:	movt	r2, #12225	; 0x2fc1
   12730:	cmp	r3, r2
   12734:	beq	13288 <__assert_fail@plt+0x1790>
   12738:	movw	r2, #17994	; 0x464a
   1273c:	movt	r2, #12627	; 0x3153
   12740:	cmp	r3, r2
   12744:	bne	12d40 <__assert_fail@plt+0x1248>
   12748:	ldr	r2, [pc, #2932]	; 132c4 <__assert_fail@plt+0x17cc>
   1274c:	add	r2, pc, r2
   12750:	b	124d4 <__assert_fail@plt+0x9dc>
   12754:	movt	r2, #29539	; 0x7363
   12758:	cmp	r3, r2
   1275c:	beq	13294 <__assert_fail@plt+0x179c>
   12760:	bgt	128b4 <__assert_fail@plt+0xdbc>
   12764:	movw	r2, #4386	; 0x1122
   12768:	movt	r2, #26649	; 0x6819
   1276c:	cmp	r3, r2
   12770:	beq	13138 <__assert_fail@plt+0x1640>
   12774:	bgt	12aa4 <__assert_fail@plt+0xfac>
   12778:	movw	r2, #21830	; 0x5546
   1277c:	movt	r2, #25971	; 0x6573
   12780:	cmp	r3, r2
   12784:	beq	1324c <__assert_fail@plt+0x1754>
   12788:	movw	r2, #26985	; 0x6969
   1278c:	movt	r2, #26457	; 0x6759
   12790:	cmp	r3, r2
   12794:	bne	12c7c <__assert_fail@plt+0x1184>
   12798:	ldr	r2, [pc, #2856]	; 132c8 <__assert_fail@plt+0x17d0>
   1279c:	add	r2, pc, r2
   127a0:	b	124d4 <__assert_fail@plt+0x9dc>
   127a4:	movw	r2, #19027	; 0x4a53
   127a8:	movt	r2, #65	; 0x41
   127ac:	cmp	r3, r2
   127b0:	beq	13240 <__assert_fail@plt+0x1748>
   127b4:	bgt	12874 <__assert_fail@plt+0xd7c>
   127b8:	movw	r2, #61267	; 0xef53
   127bc:	cmp	r3, r2
   127c0:	beq	13168 <__assert_fail@plt+0x1670>
   127c4:	bgt	12b54 <__assert_fail@plt+0x105c>
   127c8:	movw	r2, #44543	; 0xadff
   127cc:	cmp	r3, r2
   127d0:	beq	13084 <__assert_fail@plt+0x158c>
   127d4:	movw	r2, #61265	; 0xef51
   127d8:	cmp	r3, r2
   127dc:	bne	12e84 <__assert_fail@plt+0x138c>
   127e0:	ldr	r2, [pc, #2788]	; 132cc <__assert_fail@plt+0x17d4>
   127e4:	add	r2, pc, r2
   127e8:	b	124d4 <__assert_fail@plt+0x9dc>
   127ec:	movw	r2, #4991	; 0x137f
   127f0:	cmp	r3, r2
   127f4:	beq	131a4 <__assert_fail@plt+0x16ac>
   127f8:	cmp	r3, #4992	; 0x1380
   127fc:	blt	129c0 <__assert_fail@plt+0xec8>
   12800:	movw	r2, #9336	; 0x2478
   12804:	cmp	r3, r2
   12808:	beq	1312c <__assert_fail@plt+0x1634>
   1280c:	bgt	12a84 <__assert_fail@plt+0xf8c>
   12810:	movw	r2, #7377	; 0x1cd1
   12814:	cmp	r3, r2
   12818:	beq	1303c <__assert_fail@plt+0x1544>
   1281c:	movw	r2, #9320	; 0x2468
   12820:	cmp	r3, r2
   12824:	bne	12f24 <__assert_fail@plt+0x142c>
   12828:	ldr	r2, [pc, #2720]	; 132d0 <__assert_fail@plt+0x17d8>
   1282c:	add	r2, pc, r2
   12830:	b	124d4 <__assert_fail@plt+0x9dc>
   12834:	movw	r2, #12621	; 0x314d
   12838:	movt	r2, #21318	; 0x5346
   1283c:	cmp	r3, r2
   12840:	beq	13144 <__assert_fail@plt+0x164c>
   12844:	bgt	12ad0 <__assert_fail@plt+0xfd8>
   12848:	movw	r2, #20549	; 0x5045
   1284c:	movt	r2, #20553	; 0x5049
   12850:	cmp	r3, r2
   12854:	beq	130a8 <__assert_fail@plt+0x15b0>
   12858:	movw	r2, #18803	; 0x4973
   1285c:	movt	r2, #21093	; 0x5265
   12860:	cmp	r3, r2
   12864:	bne	12e9c <__assert_fail@plt+0x13a4>
   12868:	ldr	r2, [pc, #2660]	; 132d4 <__assert_fail@plt+0x17dc>
   1286c:	add	r2, pc, r2
   12870:	b	124d4 <__assert_fail@plt+0x9dc>
   12874:	movw	r2, #6551	; 0x1997
   12878:	movt	r2, #258	; 0x102
   1287c:	cmp	r3, r2
   12880:	beq	13174 <__assert_fail@plt+0x167c>
   12884:	bgt	12b80 <__assert_fail@plt+0x1088>
   12888:	mov	r2, #25600	; 0x6400
   1288c:	movt	r2, #195	; 0xc3
   12890:	cmp	r3, r2
   12894:	beq	1306c <__assert_fail@plt+0x1574>
   12898:	movw	r2, #6548	; 0x1994
   1289c:	movt	r2, #258	; 0x102
   128a0:	cmp	r3, r2
   128a4:	bne	12f90 <__assert_fail@plt+0x1498>
   128a8:	ldr	r2, [pc, #2600]	; 132d8 <__assert_fail@plt+0x17e0>
   128ac:	add	r2, pc, r2
   128b0:	b	124d4 <__assert_fail@plt+0x9dc>
   128b4:	movw	r2, #25455	; 0x636f
   128b8:	movt	r2, #29793	; 0x7461
   128bc:	cmp	r3, r2
   128c0:	beq	1318c <__assert_fail@plt+0x1694>
   128c4:	bgt	12bc8 <__assert_fail@plt+0x10d0>
   128c8:	movw	r2, #29305	; 0x7279
   128cc:	movt	r2, #29554	; 0x7372
   128d0:	cmp	r3, r2
   128d4:	beq	131ec <__assert_fail@plt+0x16f4>
   128d8:	movw	r2, #29253	; 0x7245
   128dc:	movt	r2, #29557	; 0x7375
   128e0:	cmp	r3, r2
   128e4:	bne	12d90 <__assert_fail@plt+0x1298>
   128e8:	ldr	r2, [pc, #2540]	; 132dc <__assert_fail@plt+0x17e4>
   128ec:	add	r2, pc, r2
   128f0:	b	124d4 <__assert_fail@plt+0x9dc>
   128f4:	movw	r2, #22569	; 0x5829
   128f8:	movt	r2, #22569	; 0x5829
   128fc:	cmp	r3, r2
   12900:	beq	13078 <__assert_fail@plt+0x1580>
   12904:	movw	r2, #22569	; 0x5829
   12908:	movt	r2, #22569	; 0x5829
   1290c:	cmp	r3, r2
   12910:	ble	12c28 <__assert_fail@plt+0x1130>
   12914:	movw	r2, #27120	; 0x69f0
   12918:	movt	r2, #23100	; 0x5a3c
   1291c:	cmp	r3, r2
   12920:	beq	130f0 <__assert_fail@plt+0x15f8>
   12924:	movw	r2, #11765	; 0x2df5
   12928:	movt	r2, #24010	; 0x5dca
   1292c:	cmp	r3, r2
   12930:	bne	12e4c <__assert_fail@plt+0x1354>
   12934:	ldr	r2, [pc, #2468]	; 132e0 <__assert_fail@plt+0x17e8>
   12938:	add	r2, pc, r2
   1293c:	b	124d4 <__assert_fail@plt+0x9dc>
   12940:	movw	r2, #22774	; 0x58f6
   12944:	movt	r2, #38276	; 0x9584
   12948:	cmp	r3, r2
   1294c:	beq	13030 <__assert_fail@plt+0x1538>
   12950:	ble	12c0c <__assert_fail@plt+0x1114>
   12954:	movw	r2, #43754	; 0xaaea
   12958:	movt	r2, #43735	; 0xaad7
   1295c:	cmp	r3, r2
   12960:	beq	13024 <__assert_fail@plt+0x152c>
   12964:	movw	r2, #6516	; 0x1974
   12968:	movt	r2, #43962	; 0xabba
   1296c:	cmp	r3, r2
   12970:	bne	12ef0 <__assert_fail@plt+0x13f8>
   12974:	ldr	r2, [pc, #2408]	; 132e4 <__assert_fail@plt+0x17ec>
   12978:	add	r2, pc, r2
   1297c:	b	124d4 <__assert_fail@plt+0x9dc>
   12980:	movw	r2, #4520	; 0x11a8
   12984:	movt	r2, #305	; 0x131
   12988:	cmp	r3, r2
   1298c:	beq	13060 <__assert_fail@plt+0x1568>
   12990:	ble	12c44 <__assert_fail@plt+0x114c>
   12994:	movw	r2, #6452	; 0x1934
   12998:	movt	r2, #2308	; 0x904
   1299c:	cmp	r3, r2
   129a0:	beq	13054 <__assert_fail@plt+0x155c>
   129a4:	movw	r2, #7658	; 0x1dea
   129a8:	movt	r2, #2989	; 0xbad
   129ac:	cmp	r3, r2
   129b0:	bne	12f58 <__assert_fail@plt+0x1460>
   129b4:	ldr	r2, [pc, #2348]	; 132e8 <__assert_fail@plt+0x17f0>
   129b8:	add	r2, pc, r2
   129bc:	b	124d4 <__assert_fail@plt+0x9dc>
   129c0:	movw	r2, #391	; 0x187
   129c4:	cmp	r3, r2
   129c8:	beq	12ff4 <__assert_fail@plt+0x14fc>
   129cc:	cmp	r3, #392	; 0x188
   129d0:	blt	12c60 <__assert_fail@plt+0x1168>
   129d4:	movw	r2, #4979	; 0x1373
   129d8:	cmp	r3, r2
   129dc:	beq	1300c <__assert_fail@plt+0x1514>
   129e0:	add	r2, r2, #10
   129e4:	cmp	r3, r2
   129e8:	bne	12fc4 <__assert_fail@plt+0x14cc>
   129ec:	ldr	r2, [pc, #2296]	; 132ec <__assert_fail@plt+0x17f4>
   129f0:	add	r2, pc, r2
   129f4:	b	124d4 <__assert_fail@plt+0x9dc>
   129f8:	movw	r2, #18520	; 0x4858
   129fc:	cmp	r3, r2
   12a00:	beq	13198 <__assert_fail@plt+0x16a0>
   12a04:	ble	12bf4 <__assert_fail@plt+0x10fc>
   12a08:	movw	r2, #19802	; 0x4d5a
   12a0c:	cmp	r3, r2
   12a10:	beq	13258 <__assert_fail@plt+0x1760>
   12a14:	movw	r2, #20859	; 0x517b
   12a18:	cmp	r3, r2
   12a1c:	bne	12cf0 <__assert_fail@plt+0x11f8>
   12a20:	ldr	r2, [pc, #2248]	; 132f0 <__assert_fail@plt+0x17f8>
   12a24:	add	r2, pc, r2
   12a28:	b	124d4 <__assert_fail@plt+0x9dc>
   12a2c:	movw	r2, #64206	; 0xface
   12a30:	movt	r2, #7085	; 0x1bad
   12a34:	cmp	r3, r2
   12a38:	beq	13264 <__assert_fail@plt+0x176c>
   12a3c:	movw	r2, #6405	; 0x1905
   12a40:	movt	r2, #9221	; 0x2405
   12a44:	cmp	r3, r2
   12a48:	bne	12c98 <__assert_fail@plt+0x11a0>
   12a4c:	ldr	r2, [pc, #2208]	; 132f4 <__assert_fail@plt+0x17fc>
   12a50:	add	r2, pc, r2
   12a54:	b	124d4 <__assert_fail@plt+0x9dc>
   12a58:	movw	r2, #65420	; 0xff8c
   12a5c:	movt	r2, #63868	; 0xf97c
   12a60:	cmp	r3, r2
   12a64:	beq	13270 <__assert_fail@plt+0x1778>
   12a68:	movw	r2, #59465	; 0xe849
   12a6c:	movt	r2, #63893	; 0xf995
   12a70:	cmp	r3, r2
   12a74:	bne	12d24 <__assert_fail@plt+0x122c>
   12a78:	ldr	r2, [pc, #2168]	; 132f8 <__assert_fail@plt+0x1800>
   12a7c:	add	r2, pc, r2
   12a80:	b	124d4 <__assert_fail@plt+0x9dc>
   12a84:	cmp	r3, #16384	; 0x4000
   12a88:	beq	1321c <__assert_fail@plt+0x1724>
   12a8c:	movw	r2, #16388	; 0x4004
   12a90:	cmp	r3, r2
   12a94:	bne	12d5c <__assert_fail@plt+0x1264>
   12a98:	ldr	r2, [pc, #2140]	; 132fc <__assert_fail@plt+0x1804>
   12a9c:	add	r2, pc, r2
   12aa0:	b	124d4 <__assert_fail@plt+0x9dc>
   12aa4:	movw	r2, #29540	; 0x7364
   12aa8:	movt	r2, #28262	; 0x6e66
   12aac:	cmp	r3, r2
   12ab0:	beq	130b4 <__assert_fail@plt+0x15bc>
   12ab4:	movw	r2, #26227	; 0x6673
   12ab8:	movt	r2, #28275	; 0x6e73
   12abc:	cmp	r3, r2
   12ac0:	bne	12eb8 <__assert_fail@plt+0x13c0>
   12ac4:	ldr	r2, [pc, #2100]	; 13300 <__assert_fail@plt+0x1808>
   12ac8:	add	r2, pc, r2
   12acc:	b	124d4 <__assert_fail@plt+0x9dc>
   12ad0:	movw	r2, #18502	; 0x4846
   12ad4:	movt	r2, #21318	; 0x5346
   12ad8:	cmp	r3, r2
   12adc:	beq	130cc <__assert_fail@plt+0x15d4>
   12ae0:	movw	r2, #21582	; 0x544e
   12ae4:	movt	r2, #21318	; 0x5346
   12ae8:	cmp	r3, r2
   12aec:	bne	12dfc <__assert_fail@plt+0x1304>
   12af0:	ldr	r2, [pc, #2060]	; 13304 <__assert_fail@plt+0x180c>
   12af4:	add	r2, pc, r2
   12af8:	b	124d4 <__assert_fail@plt+0x9dc>
   12afc:	movw	r2, #29296	; 0x7270
   12b00:	movt	r2, #25447	; 0x6367
   12b04:	cmp	r3, r2
   12b08:	beq	13048 <__assert_fail@plt+0x1550>
   12b0c:	movw	r2, #26400	; 0x6720
   12b10:	movt	r2, #25698	; 0x6462
   12b14:	cmp	r3, r2
   12b18:	bne	12f3c <__assert_fail@plt+0x1444>
   12b1c:	ldr	r2, [pc, #2020]	; 13308 <__assert_fail@plt+0x1810>
   12b20:	add	r2, pc, r2
   12b24:	b	124d4 <__assert_fail@plt+0x9dc>
   12b28:	movw	r2, #23891	; 0x5d53
   12b2c:	movt	r2, #17217	; 0x4341
   12b30:	cmp	r3, r2
   12b34:	beq	13228 <__assert_fail@plt+0x1730>
   12b38:	movw	r2, #52520	; 0xcd28
   12b3c:	movt	r2, #17725	; 0x453d
   12b40:	cmp	r3, r2
   12b44:	bne	12d74 <__assert_fail@plt+0x127c>
   12b48:	ldr	r2, [pc, #1980]	; 1330c <__assert_fail@plt+0x1814>
   12b4c:	add	r2, pc, r2
   12b50:	b	124d4 <__assert_fail@plt+0x9dc>
   12b54:	movw	r2, #6484	; 0x1954
   12b58:	movt	r2, #1
   12b5c:	cmp	r3, r2
   12b60:	beq	13000 <__assert_fail@plt+0x1508>
   12b64:	movw	r2, #57579	; 0xe0eb
   12b68:	movt	r2, #39	; 0x27
   12b6c:	cmp	r3, r2
   12b70:	bne	12fac <__assert_fail@plt+0x14b4>
   12b74:	ldr	r2, [pc, #1940]	; 13310 <__assert_fail@plt+0x1818>
   12b78:	add	r2, pc, r2
   12b7c:	b	124d4 <__assert_fail@plt+0x9dc>
   12b80:	movw	r2, #53613	; 0xd16d
   12b84:	movt	r2, #303	; 0x12f
   12b88:	cmp	r3, r2
   12b8c:	beq	130e4 <__assert_fail@plt+0x15ec>
   12b90:	movw	r2, #63412	; 0xf7b4
   12b94:	movt	r2, #303	; 0x12f
   12b98:	cmp	r3, r2
   12b9c:	bne	12e30 <__assert_fail@plt+0x1338>
   12ba0:	ldr	r2, [pc, #1900]	; 13314 <__assert_fail@plt+0x181c>
   12ba4:	add	r2, pc, r2
   12ba8:	b	124d4 <__assert_fail@plt+0x9dc>
   12bac:	movw	r2, #40864	; 0x9fa0
   12bb0:	cmp	r3, r2
   12bb4:	beq	131f8 <__assert_fail@plt+0x1700>
   12bb8:	ble	12dac <__assert_fail@plt+0x12b4>
   12bbc:	ldr	r2, [pc, #1876]	; 13318 <__assert_fail@plt+0x1820>
   12bc0:	add	r2, pc, r2
   12bc4:	b	124d4 <__assert_fail@plt+0x9dc>
   12bc8:	movw	r2, #30256	; 0x7630
   12bcc:	movt	r2, #31052	; 0x794c
   12bd0:	cmp	r3, r2
   12bd4:	beq	1327c <__assert_fail@plt+0x1784>
   12bd8:	movw	r2, #26227	; 0x6673
   12bdc:	movt	r2, #31868	; 0x7c7c
   12be0:	cmp	r3, r2
   12be4:	bne	12d08 <__assert_fail@plt+0x1210>
   12be8:	ldr	r2, [pc, #1836]	; 1331c <__assert_fail@plt+0x1824>
   12bec:	add	r2, pc, r2
   12bf0:	b	124d4 <__assert_fail@plt+0x9dc>
   12bf4:	movw	r2, #16964	; 0x4244
   12bf8:	cmp	r3, r2
   12bfc:	bne	12f0c <__assert_fail@plt+0x1414>
   12c00:	ldr	r2, [pc, #1816]	; 13320 <__assert_fail@plt+0x1828>
   12c04:	add	r2, pc, r2
   12c08:	b	124d4 <__assert_fail@plt+0x9dc>
   12c0c:	movw	r2, #22774	; 0x58f6
   12c10:	movt	r2, #34180	; 0x8584
   12c14:	cmp	r3, r2
   12c18:	bne	12e68 <__assert_fail@plt+0x1370>
   12c1c:	ldr	r2, [pc, #1792]	; 13324 <__assert_fail@plt+0x182c>
   12c20:	add	r2, pc, r2
   12c24:	b	124d4 <__assert_fail@plt+0x9dc>
   12c28:	mov	r2, #256	; 0x100
   12c2c:	movt	r2, #21529	; 0x5419
   12c30:	cmp	r3, r2
   12c34:	bne	12f74 <__assert_fail@plt+0x147c>
   12c38:	ldr	r2, [pc, #1768]	; 13328 <__assert_fail@plt+0x1830>
   12c3c:	add	r2, pc, r2
   12c40:	b	124d4 <__assert_fail@plt+0x9dc>
   12c44:	movw	r2, #63414	; 0xf7b6
   12c48:	movt	r2, #303	; 0x12f
   12c4c:	cmp	r3, r2
   12c50:	bne	12fd8 <__assert_fail@plt+0x14e0>
   12c54:	ldr	r2, [pc, #1744]	; 1332c <__assert_fail@plt+0x1834>
   12c58:	add	r2, pc, r2
   12c5c:	b	124d4 <__assert_fail@plt+0x9dc>
   12c60:	movw	r2, #19778	; 0x4d42
   12c64:	movt	r2, #65363	; 0xff53
   12c68:	cmp	r3, r2
   12c6c:	bne	12cb4 <__assert_fail@plt+0x11bc>
   12c70:	ldr	r2, [pc, #1720]	; 13330 <__assert_fail@plt+0x1838>
   12c74:	add	r2, pc, r2
   12c78:	b	124d4 <__assert_fail@plt+0x9dc>
   12c7c:	movw	r2, #21827	; 0x5543
   12c80:	movt	r2, #25971	; 0x6573
   12c84:	cmp	r3, r2
   12c88:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12c8c:	ldr	r2, [pc, #1696]	; 13334 <__assert_fail@plt+0x183c>
   12c90:	add	r2, pc, r2
   12c94:	b	124d4 <__assert_fail@plt+0x9dc>
   12c98:	movw	r2, #806	; 0x326
   12c9c:	movt	r2, #6531	; 0x1983
   12ca0:	cmp	r3, r2
   12ca4:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12ca8:	ldr	r2, [pc, #1672]	; 13338 <__assert_fail@plt+0x1840>
   12cac:	add	r2, pc, r2
   12cb0:	b	124d4 <__assert_fail@plt+0x9dc>
   12cb4:	ldr	r2, [pc, #1664]	; 1333c <__assert_fail@plt+0x1844>
   12cb8:	cmp	r3, #47	; 0x2f
   12cbc:	add	r2, pc, r2
   12cc0:	beq	124d4 <__assert_fail@plt+0x9dc>
   12cc4:	ldr	r4, [pc, #1652]	; 13340 <__assert_fail@plt+0x1848>
   12cc8:	mov	r2, #21
   12ccc:	str	r3, [sp]
   12cd0:	mov	r1, #1
   12cd4:	add	r4, pc, r4
   12cd8:	ldr	r3, [pc, #1636]	; 13344 <__assert_fail@plt+0x184c>
   12cdc:	mov	r0, r4
   12ce0:	add	r3, pc, r3
   12ce4:	bl	1196c <__sprintf_chk@plt>
   12ce8:	mov	r2, r4
   12cec:	b	124d4 <__assert_fail@plt+0x9dc>
   12cf0:	movw	r2, #19780	; 0x4d44
   12cf4:	cmp	r3, r2
   12cf8:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12cfc:	ldr	r2, [pc, #1604]	; 13348 <__assert_fail@plt+0x1850>
   12d00:	add	r2, pc, r2
   12d04:	b	124d4 <__assert_fail@plt+0x9dc>
   12d08:	movw	r2, #24931	; 0x6163
   12d0c:	movt	r2, #29810	; 0x7472
   12d10:	cmp	r3, r2
   12d14:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12d18:	ldr	r2, [pc, #1580]	; 1334c <__assert_fail@plt+0x1854>
   12d1c:	add	r2, pc, r2
   12d20:	b	124d4 <__assert_fail@plt+0x9dc>
   12d24:	movw	r2, #8208	; 0x2010
   12d28:	movt	r2, #62197	; 0xf2f5
   12d2c:	cmp	r3, r2
   12d30:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12d34:	ldr	r2, [pc, #1556]	; 13350 <__assert_fail@plt+0x1858>
   12d38:	add	r2, pc, r2
   12d3c:	b	124d4 <__assert_fail@plt+0x9dc>
   12d40:	movw	r2, #7658	; 0x1dea
   12d44:	movt	r2, #11181	; 0x2bad
   12d48:	cmp	r3, r2
   12d4c:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12d50:	ldr	r2, [pc, #1532]	; 13354 <__assert_fail@plt+0x185c>
   12d54:	add	r2, pc, r2
   12d58:	b	124d4 <__assert_fail@plt+0x9dc>
   12d5c:	sub	r2, r2, #3024	; 0xbd0
   12d60:	cmp	r3, r2
   12d64:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12d68:	ldr	r2, [pc, #1512]	; 13358 <__assert_fail@plt+0x1860>
   12d6c:	add	r2, pc, r2
   12d70:	b	124d4 <__assert_fail@plt+0x9dc>
   12d74:	movw	r2, #20045	; 0x4e4d
   12d78:	movt	r2, #16969	; 0x4249
   12d7c:	cmp	r3, r2
   12d80:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12d84:	ldr	r2, [pc, #1488]	; 1335c <__assert_fail@plt+0x1864>
   12d88:	add	r2, pc, r2
   12d8c:	b	124d4 <__assert_fail@plt+0x9dc>
   12d90:	movw	r2, #29544	; 0x7368
   12d94:	movt	r2, #29553	; 0x7371
   12d98:	cmp	r3, r2
   12d9c:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12da0:	ldr	r2, [pc, #1464]	; 13360 <__assert_fail@plt+0x1868>
   12da4:	add	r2, pc, r2
   12da8:	b	124d4 <__assert_fail@plt+0x9dc>
   12dac:	sub	r2, r2, #2368	; 0x940
   12db0:	cmp	r3, r2
   12db4:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12db8:	ldr	r2, [pc, #1444]	; 13364 <__assert_fail@plt+0x186c>
   12dbc:	add	r2, pc, r2
   12dc0:	b	124d4 <__assert_fail@plt+0x9dc>
   12dc4:	movw	r2, #57005	; 0xdead
   12dc8:	movt	r2, #48879	; 0xbeef
   12dcc:	cmp	r3, r2
   12dd0:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12dd4:	ldr	r2, [pc, #1420]	; 13368 <__assert_fail@plt+0x1870>
   12dd8:	add	r2, pc, r2
   12ddc:	b	124d4 <__assert_fail@plt+0x9dc>
   12de0:	movw	r2, #26476	; 0x676c
   12de4:	movt	r2, #24933	; 0x6165
   12de8:	cmp	r3, r2
   12dec:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12df0:	ldr	r2, [pc, #1396]	; 1336c <__assert_fail@plt+0x1874>
   12df4:	add	r2, pc, r2
   12df8:	b	124d4 <__assert_fail@plt+0x9dc>
   12dfc:	movw	r2, #16719	; 0x414f
   12e00:	movt	r2, #21318	; 0x5346
   12e04:	cmp	r3, r2
   12e08:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12e0c:	ldr	r2, [pc, #1372]	; 13370 <__assert_fail@plt+0x1878>
   12e10:	add	r2, pc, r2
   12e14:	b	124d4 <__assert_fail@plt+0x9dc>
   12e18:	sub	r2, r2, #5248	; 0x1480
   12e1c:	cmp	r3, r2
   12e20:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12e24:	ldr	r2, [pc, #1352]	; 13374 <__assert_fail@plt+0x187c>
   12e28:	add	r2, pc, r2
   12e2c:	b	124d4 <__assert_fail@plt+0x9dc>
   12e30:	movw	r2, #6512	; 0x1970
   12e34:	movt	r2, #278	; 0x116
   12e38:	cmp	r3, r2
   12e3c:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12e40:	ldr	r2, [pc, #1328]	; 13378 <__assert_fail@plt+0x1880>
   12e44:	add	r2, pc, r2
   12e48:	b	124d4 <__assert_fail@plt+0x9dc>
   12e4c:	movw	r2, #21314	; 0x5342
   12e50:	movt	r2, #22598	; 0x5846
   12e54:	cmp	r3, r2
   12e58:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12e5c:	ldr	r2, [pc, #1304]	; 1337c <__assert_fail@plt+0x1884>
   12e60:	add	r2, pc, r2
   12e64:	b	124d4 <__assert_fail@plt+0x9dc>
   12e68:	movw	r2, #26686	; 0x683e
   12e6c:	movt	r2, #37155	; 0x9123
   12e70:	cmp	r3, r2
   12e74:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12e78:	ldr	r2, [pc, #1280]	; 13380 <__assert_fail@plt+0x1888>
   12e7c:	add	r2, pc, r2
   12e80:	b	124d4 <__assert_fail@plt+0x9dc>
   12e84:	movw	r2, #44533	; 0xadf5
   12e88:	cmp	r3, r2
   12e8c:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12e90:	ldr	r2, [pc, #1260]	; 13384 <__assert_fail@plt+0x188c>
   12e94:	add	r2, pc, r2
   12e98:	b	124d4 <__assert_fail@plt+0x9dc>
   12e9c:	movw	r2, #18003	; 0x4653
   12ea0:	movt	r2, #18256	; 0x4750
   12ea4:	cmp	r3, r2
   12ea8:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12eac:	ldr	r2, [pc, #1236]	; 13388 <__assert_fail@plt+0x1890>
   12eb0:	add	r2, pc, r2
   12eb4:	b	124d4 <__assert_fail@plt+0x9dc>
   12eb8:	movw	r2, #18003	; 0x4653
   12ebc:	movt	r2, #27457	; 0x6b41
   12ec0:	cmp	r3, r2
   12ec4:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12ec8:	ldr	r2, [pc, #1212]	; 1338c <__assert_fail@plt+0x1894>
   12ecc:	add	r2, pc, r2
   12ed0:	b	124d4 <__assert_fail@plt+0x9dc>
   12ed4:	movw	r2, #30804	; 0x7854
   12ed8:	movt	r2, #4400	; 0x1130
   12edc:	cmp	r3, r2
   12ee0:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12ee4:	ldr	r2, [pc, #1188]	; 13390 <__assert_fail@plt+0x1898>
   12ee8:	add	r2, pc, r2
   12eec:	b	124d4 <__assert_fail@plt+0x9dc>
   12ef0:	movw	r2, #64757	; 0xfcf5
   12ef4:	movt	r2, #42241	; 0xa501
   12ef8:	cmp	r3, r2
   12efc:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12f00:	ldr	r2, [pc, #1164]	; 13394 <__assert_fail@plt+0x189c>
   12f04:	add	r2, pc, r2
   12f08:	b	124d4 <__assert_fail@plt+0x9dc>
   12f0c:	movw	r2, #18475	; 0x482b
   12f10:	cmp	r3, r2
   12f14:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12f18:	ldr	r2, [pc, #1144]	; 13398 <__assert_fail@plt+0x18a0>
   12f1c:	add	r2, pc, r2
   12f20:	b	124d4 <__assert_fail@plt+0x9dc>
   12f24:	movw	r2, #5007	; 0x138f
   12f28:	cmp	r3, r2
   12f2c:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12f30:	ldr	r2, [pc, #1124]	; 1339c <__assert_fail@plt+0x18a4>
   12f34:	add	r2, pc, r2
   12f38:	b	124d4 <__assert_fail@plt+0x9dc>
   12f3c:	movw	r2, #25970	; 0x6572
   12f40:	movt	r2, #25189	; 0x6265
   12f44:	cmp	r3, r2
   12f48:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12f4c:	ldr	r2, [pc, #1100]	; 133a0 <__assert_fail@plt+0x18a8>
   12f50:	add	r2, pc, r2
   12f54:	b	124d4 <__assert_fail@plt+0x9dc>
   12f58:	movw	r2, #22561	; 0x5821
   12f5c:	movt	r2, #1893	; 0x765
   12f60:	cmp	r3, r2
   12f64:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12f68:	ldr	r2, [pc, #1076]	; 133a4 <__assert_fail@plt+0x18ac>
   12f6c:	add	r2, pc, r2
   12f70:	b	124d4 <__assert_fail@plt+0x9dc>
   12f74:	movw	r2, #18003	; 0x4653
   12f78:	movt	r2, #22106	; 0x565a
   12f7c:	cmp	r3, r2
   12f80:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12f84:	ldr	r2, [pc, #1052]	; 133a8 <__assert_fail@plt+0x18b0>
   12f88:	add	r2, pc, r2
   12f8c:	b	124d4 <__assert_fail@plt+0x9dc>
   12f90:	movw	r2, #65518	; 0xffee
   12f94:	movt	r2, #192	; 0xc0
   12f98:	cmp	r3, r2
   12f9c:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12fa0:	ldr	r2, [pc, #1028]	; 133ac <__assert_fail@plt+0x18b4>
   12fa4:	add	r2, pc, r2
   12fa8:	b	124d4 <__assert_fail@plt+0x9dc>
   12fac:	movw	r2, #61791	; 0xf15f
   12fb0:	cmp	r3, r2
   12fb4:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12fb8:	ldr	r2, [pc, #1008]	; 133b0 <__assert_fail@plt+0x18b8>
   12fbc:	add	r2, pc, r2
   12fc0:	b	124d4 <__assert_fail@plt+0x9dc>
   12fc4:	cmp	r3, #1984	; 0x7c0
   12fc8:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12fcc:	ldr	r2, [pc, #992]	; 133b4 <__assert_fail@plt+0x18bc>
   12fd0:	add	r2, pc, r2
   12fd4:	b	124d4 <__assert_fail@plt+0x9dc>
   12fd8:	movw	r2, #63415	; 0xf7b7
   12fdc:	movt	r2, #303	; 0x12f
   12fe0:	cmp	r3, r2
   12fe4:	bne	12cc4 <__assert_fail@plt+0x11cc>
   12fe8:	ldr	r2, [pc, #968]	; 133b8 <__assert_fail@plt+0x18c0>
   12fec:	add	r2, pc, r2
   12ff0:	b	124d4 <__assert_fail@plt+0x9dc>
   12ff4:	ldr	r2, [pc, #960]	; 133bc <__assert_fail@plt+0x18c4>
   12ff8:	add	r2, pc, r2
   12ffc:	b	124d4 <__assert_fail@plt+0x9dc>
   13000:	ldr	r2, [pc, #952]	; 133c0 <__assert_fail@plt+0x18c8>
   13004:	add	r2, pc, r2
   13008:	b	124d4 <__assert_fail@plt+0x9dc>
   1300c:	ldr	r2, [pc, #944]	; 133c4 <__assert_fail@plt+0x18cc>
   13010:	add	r2, pc, r2
   13014:	b	124d4 <__assert_fail@plt+0x9dc>
   13018:	ldr	r2, [pc, #936]	; 133c8 <__assert_fail@plt+0x18d0>
   1301c:	add	r2, pc, r2
   13020:	b	124d4 <__assert_fail@plt+0x9dc>
   13024:	ldr	r2, [pc, #928]	; 133cc <__assert_fail@plt+0x18d4>
   13028:	add	r2, pc, r2
   1302c:	b	124d4 <__assert_fail@plt+0x9dc>
   13030:	ldr	r2, [pc, #920]	; 133d0 <__assert_fail@plt+0x18d8>
   13034:	add	r2, pc, r2
   13038:	b	124d4 <__assert_fail@plt+0x9dc>
   1303c:	ldr	r2, [pc, #912]	; 133d4 <__assert_fail@plt+0x18dc>
   13040:	add	r2, pc, r2
   13044:	b	124d4 <__assert_fail@plt+0x9dc>
   13048:	ldr	r2, [pc, #904]	; 133d8 <__assert_fail@plt+0x18e0>
   1304c:	add	r2, pc, r2
   13050:	b	124d4 <__assert_fail@plt+0x9dc>
   13054:	ldr	r2, [pc, #896]	; 133dc <__assert_fail@plt+0x18e4>
   13058:	add	r2, pc, r2
   1305c:	b	124d4 <__assert_fail@plt+0x9dc>
   13060:	ldr	r2, [pc, #888]	; 133e0 <__assert_fail@plt+0x18e8>
   13064:	add	r2, pc, r2
   13068:	b	124d4 <__assert_fail@plt+0x9dc>
   1306c:	ldr	r2, [pc, #880]	; 133e4 <__assert_fail@plt+0x18ec>
   13070:	add	r2, pc, r2
   13074:	b	124d4 <__assert_fail@plt+0x9dc>
   13078:	ldr	r2, [pc, #872]	; 133e8 <__assert_fail@plt+0x18f0>
   1307c:	add	r2, pc, r2
   13080:	b	124d4 <__assert_fail@plt+0x9dc>
   13084:	ldr	r2, [pc, #864]	; 133ec <__assert_fail@plt+0x18f4>
   13088:	add	r2, pc, r2
   1308c:	b	124d4 <__assert_fail@plt+0x9dc>
   13090:	ldr	r2, [pc, #856]	; 133f0 <__assert_fail@plt+0x18f8>
   13094:	add	r2, pc, r2
   13098:	b	124d4 <__assert_fail@plt+0x9dc>
   1309c:	ldr	r2, [pc, #848]	; 133f4 <__assert_fail@plt+0x18fc>
   130a0:	add	r2, pc, r2
   130a4:	b	124d4 <__assert_fail@plt+0x9dc>
   130a8:	ldr	r2, [pc, #840]	; 133f8 <__assert_fail@plt+0x1900>
   130ac:	add	r2, pc, r2
   130b0:	b	124d4 <__assert_fail@plt+0x9dc>
   130b4:	ldr	r2, [pc, #832]	; 133fc <__assert_fail@plt+0x1904>
   130b8:	add	r2, pc, r2
   130bc:	b	124d4 <__assert_fail@plt+0x9dc>
   130c0:	ldr	r2, [pc, #824]	; 13400 <__assert_fail@plt+0x1908>
   130c4:	add	r2, pc, r2
   130c8:	b	124d4 <__assert_fail@plt+0x9dc>
   130cc:	ldr	r2, [pc, #816]	; 13404 <__assert_fail@plt+0x190c>
   130d0:	add	r2, pc, r2
   130d4:	b	124d4 <__assert_fail@plt+0x9dc>
   130d8:	ldr	r2, [pc, #808]	; 13408 <__assert_fail@plt+0x1910>
   130dc:	add	r2, pc, r2
   130e0:	b	124d4 <__assert_fail@plt+0x9dc>
   130e4:	ldr	r2, [pc, #800]	; 1340c <__assert_fail@plt+0x1914>
   130e8:	add	r2, pc, r2
   130ec:	b	124d4 <__assert_fail@plt+0x9dc>
   130f0:	ldr	r2, [pc, #792]	; 13410 <__assert_fail@plt+0x1918>
   130f4:	add	r2, pc, r2
   130f8:	b	124d4 <__assert_fail@plt+0x9dc>
   130fc:	ldr	r2, [pc, #784]	; 13414 <__assert_fail@plt+0x191c>
   13100:	add	r2, pc, r2
   13104:	b	124d4 <__assert_fail@plt+0x9dc>
   13108:	ldr	r2, [pc, #776]	; 13418 <__assert_fail@plt+0x1920>
   1310c:	add	r2, pc, r2
   13110:	b	124d4 <__assert_fail@plt+0x9dc>
   13114:	ldr	r2, [pc, #768]	; 1341c <__assert_fail@plt+0x1924>
   13118:	add	r2, pc, r2
   1311c:	b	124d4 <__assert_fail@plt+0x9dc>
   13120:	ldr	r2, [pc, #760]	; 13420 <__assert_fail@plt+0x1928>
   13124:	add	r2, pc, r2
   13128:	b	124d4 <__assert_fail@plt+0x9dc>
   1312c:	ldr	r2, [pc, #752]	; 13424 <__assert_fail@plt+0x192c>
   13130:	add	r2, pc, r2
   13134:	b	124d4 <__assert_fail@plt+0x9dc>
   13138:	ldr	r2, [pc, #744]	; 13428 <__assert_fail@plt+0x1930>
   1313c:	add	r2, pc, r2
   13140:	b	124d4 <__assert_fail@plt+0x9dc>
   13144:	ldr	r2, [pc, #736]	; 1342c <__assert_fail@plt+0x1934>
   13148:	add	r2, pc, r2
   1314c:	b	124d4 <__assert_fail@plt+0x9dc>
   13150:	ldr	r2, [pc, #728]	; 13430 <__assert_fail@plt+0x1938>
   13154:	add	r2, pc, r2
   13158:	b	124d4 <__assert_fail@plt+0x9dc>
   1315c:	ldr	r2, [pc, #720]	; 13434 <__assert_fail@plt+0x193c>
   13160:	add	r2, pc, r2
   13164:	b	124d4 <__assert_fail@plt+0x9dc>
   13168:	ldr	r2, [pc, #712]	; 13438 <__assert_fail@plt+0x1940>
   1316c:	add	r2, pc, r2
   13170:	b	124d4 <__assert_fail@plt+0x9dc>
   13174:	ldr	r2, [pc, #704]	; 1343c <__assert_fail@plt+0x1944>
   13178:	add	r2, pc, r2
   1317c:	b	124d4 <__assert_fail@plt+0x9dc>
   13180:	ldr	r2, [pc, #696]	; 13440 <__assert_fail@plt+0x1948>
   13184:	add	r2, pc, r2
   13188:	b	124d4 <__assert_fail@plt+0x9dc>
   1318c:	ldr	r2, [pc, #688]	; 13444 <__assert_fail@plt+0x194c>
   13190:	add	r2, pc, r2
   13194:	b	124d4 <__assert_fail@plt+0x9dc>
   13198:	ldr	r2, [pc, #680]	; 13448 <__assert_fail@plt+0x1950>
   1319c:	add	r2, pc, r2
   131a0:	b	124d4 <__assert_fail@plt+0x9dc>
   131a4:	ldr	r2, [pc, #672]	; 1344c <__assert_fail@plt+0x1954>
   131a8:	add	r2, pc, r2
   131ac:	b	124d4 <__assert_fail@plt+0x9dc>
   131b0:	ldr	r2, [pc, #664]	; 13450 <__assert_fail@plt+0x1958>
   131b4:	add	r2, pc, r2
   131b8:	b	124d4 <__assert_fail@plt+0x9dc>
   131bc:	ldr	r2, [pc, #656]	; 13454 <__assert_fail@plt+0x195c>
   131c0:	add	r2, pc, r2
   131c4:	b	124d4 <__assert_fail@plt+0x9dc>
   131c8:	ldr	r2, [pc, #648]	; 13458 <__assert_fail@plt+0x1960>
   131cc:	add	r2, pc, r2
   131d0:	b	124d4 <__assert_fail@plt+0x9dc>
   131d4:	ldr	r2, [pc, #640]	; 1345c <__assert_fail@plt+0x1964>
   131d8:	add	r2, pc, r2
   131dc:	b	124d4 <__assert_fail@plt+0x9dc>
   131e0:	ldr	r2, [pc, #632]	; 13460 <__assert_fail@plt+0x1968>
   131e4:	add	r2, pc, r2
   131e8:	b	124d4 <__assert_fail@plt+0x9dc>
   131ec:	ldr	r2, [pc, #624]	; 13464 <__assert_fail@plt+0x196c>
   131f0:	add	r2, pc, r2
   131f4:	b	124d4 <__assert_fail@plt+0x9dc>
   131f8:	ldr	r2, [pc, #616]	; 13468 <__assert_fail@plt+0x1970>
   131fc:	add	r2, pc, r2
   13200:	b	124d4 <__assert_fail@plt+0x9dc>
   13204:	ldr	r2, [pc, #608]	; 1346c <__assert_fail@plt+0x1974>
   13208:	add	r2, pc, r2
   1320c:	b	124d4 <__assert_fail@plt+0x9dc>
   13210:	ldr	r2, [pc, #600]	; 13470 <__assert_fail@plt+0x1978>
   13214:	add	r2, pc, r2
   13218:	b	124d4 <__assert_fail@plt+0x9dc>
   1321c:	ldr	r2, [pc, #592]	; 13474 <__assert_fail@plt+0x197c>
   13220:	add	r2, pc, r2
   13224:	b	124d4 <__assert_fail@plt+0x9dc>
   13228:	ldr	r2, [pc, #584]	; 13478 <__assert_fail@plt+0x1980>
   1322c:	add	r2, pc, r2
   13230:	b	124d4 <__assert_fail@plt+0x9dc>
   13234:	ldr	r2, [pc, #576]	; 1347c <__assert_fail@plt+0x1984>
   13238:	add	r2, pc, r2
   1323c:	b	124d4 <__assert_fail@plt+0x9dc>
   13240:	ldr	r2, [pc, #568]	; 13480 <__assert_fail@plt+0x1988>
   13244:	add	r2, pc, r2
   13248:	b	124d4 <__assert_fail@plt+0x9dc>
   1324c:	ldr	r2, [pc, #560]	; 13484 <__assert_fail@plt+0x198c>
   13250:	add	r2, pc, r2
   13254:	b	124d4 <__assert_fail@plt+0x9dc>
   13258:	ldr	r2, [pc, #552]	; 13488 <__assert_fail@plt+0x1990>
   1325c:	add	r2, pc, r2
   13260:	b	124d4 <__assert_fail@plt+0x9dc>
   13264:	ldr	r2, [pc, #544]	; 1348c <__assert_fail@plt+0x1994>
   13268:	add	r2, pc, r2
   1326c:	b	124d4 <__assert_fail@plt+0x9dc>
   13270:	ldr	r2, [pc, #536]	; 13490 <__assert_fail@plt+0x1998>
   13274:	add	r2, pc, r2
   13278:	b	124d4 <__assert_fail@plt+0x9dc>
   1327c:	ldr	r2, [pc, #528]	; 13494 <__assert_fail@plt+0x199c>
   13280:	add	r2, pc, r2
   13284:	b	124d4 <__assert_fail@plt+0x9dc>
   13288:	ldr	r2, [pc, #520]	; 13498 <__assert_fail@plt+0x19a0>
   1328c:	add	r2, pc, r2
   13290:	b	124d4 <__assert_fail@plt+0x9dc>
   13294:	ldr	r2, [pc, #512]	; 1349c <__assert_fail@plt+0x19a4>
   13298:	add	r2, pc, r2
   1329c:	b	124d4 <__assert_fail@plt+0x9dc>
   132a0:	ldr	r2, [pc, #504]	; 134a0 <__assert_fail@plt+0x19a8>
   132a4:	add	r2, pc, r2
   132a8:	b	124d4 <__assert_fail@plt+0x9dc>
   132ac:	muleq	r1, ip, ip
   132b0:	andeq	fp, r0, r4, asr #5
   132b4:	muleq	r0, r8, r1
   132b8:	andeq	sl, r0, r4, lsr lr
   132bc:	andeq	sl, r0, r0, asr #27
   132c0:	andeq	fp, r0, r8
   132c4:	andeq	sl, r0, r4, lsr #29
   132c8:	andeq	sl, r0, ip, ror #30
   132cc:	andeq	sl, r0, r0, ror #26
   132d0:	andeq	sl, r0, r4, lsl #28
   132d4:	andeq	sl, r0, r8, lsl #29
   132d8:	ldrdeq	sl, [r0], -r0
   132dc:	ldrdeq	sl, [r0], -r4
   132e0:	ldrdeq	sl, [r0], -ip
   132e4:	andeq	sl, r0, r8, asr lr
   132e8:			; <UNDEFINED> instruction: 0x0000abb8
   132ec:	andeq	sl, r0, r4, asr #22
   132f0:	andeq	sl, r0, r8, lsl sp
   132f4:	andeq	sl, r0, ip, lsr sp
   132f8:	andeq	sl, r0, ip, lsr #22
   132fc:	andeq	sl, r0, ip, lsr fp
   13300:			; <UNDEFINED> instruction: 0x0000abbc
   13304:	muleq	r0, r8, fp
   13308:	ldrdeq	sl, [r0], -r4
   1330c:	muleq	r0, r4, r9
   13310:	andeq	sl, r0, r8, lsr #18
   13314:	andeq	sl, r0, r4, lsr ip
   13318:	ldrdeq	sl, [r0], -r4
   1331c:	ldrdeq	sl, [r0], -r0
   13320:	andeq	sl, r0, r8, lsl #19
   13324:	andeq	sl, r0, r8, asr #21
   13328:	andeq	sl, r0, ip, asr fp
   1332c:	andeq	sl, r0, r4, lsl fp
   13330:	andeq	sl, r0, r4, asr #16
   13334:	ldrdeq	sl, [r0], -r8
   13338:	andeq	sl, r0, ip, lsr #17
   1333c:	andeq	sl, r0, ip, lsl sl
   13340:	andeq	sp, r1, ip, lsr #10
   13344:	andeq	sl, r0, r4, lsl fp
   13348:	andeq	sl, r0, r0, ror #18
   1334c:	andeq	sl, r0, r8, ror #20
   13350:	andeq	sl, r0, r4, lsl r8
   13354:	andeq	sl, r0, r8, ror r8
   13358:	andeq	sl, r0, r0, lsl r9
   1335c:	strdeq	sl, [r0], -r0
   13360:			; <UNDEFINED> instruction: 0x0000a9b4
   13364:	andeq	sl, r0, ip, lsl r8
   13368:	andeq	sl, r0, r0, ror r9
   1336c:	ldrdeq	sl, [r0], -r8
   13370:	andeq	sl, r0, r8, lsl r6
   13374:	andeq	sl, r0, r4, lsl #14
   13378:	andeq	sl, r0, r4, lsr r7
   1337c:	andeq	sl, r0, r4, lsl r7
   13380:	andeq	sl, r0, r8, lsl #12
   13384:	andeq	sl, r0, r4, lsl #11
   13388:	ldrdeq	sl, [r0], -r4
   1338c:	andeq	sl, r0, r8, lsr #14
   13390:	ldrdeq	sl, [r0], -r4
   13394:			; <UNDEFINED> instruction: 0x0000a8b4
   13398:	andeq	sl, r0, r4, ror r6
   1339c:	andeq	sl, r0, r8, ror #13
   133a0:	andeq	sl, r0, r4, lsl r8
   133a4:	andeq	sl, r0, r4, lsl #15
   133a8:	andeq	sl, r0, r8, lsr r8
   133ac:	strdeq	sl, [r0], -ip
   133b0:	andeq	sl, r0, r0, asr r5
   133b4:	andeq	sl, r0, r0, lsl r6
   133b8:	ldrdeq	sl, [r0], -ip
   133bc:	andeq	sl, r0, ip, asr #8
   133c0:	muleq	r0, r4, r7
   133c4:	andeq	sl, r0, ip, ror #9
   133c8:	andeq	sl, r0, r0, lsr r4
   133cc:	andeq	sl, r0, ip, lsl #13
   133d0:	andeq	sl, r0, ip, ror r5
   133d4:	andeq	sl, r0, r4, asr #9
   133d8:	andeq	sl, r0, r0, ror #8
   133dc:	ldrdeq	sl, [r0], -r4
   133e0:	andeq	sl, r0, r0, ror #10
   133e4:	andeq	sl, r0, r8, lsr #8
   133e8:	andeq	sl, r0, ip, ror #14
   133ec:	muleq	r0, r8, r3
   133f0:			; <UNDEFINED> instruction: 0x0000a6bc
   133f4:			; <UNDEFINED> instruction: 0x0000a4b4
   133f8:	andeq	sl, r0, r0, ror #12
   133fc:			; <UNDEFINED> instruction: 0x0000a5bc
   13400:			; <UNDEFINED> instruction: 0x0000a6b0
   13404:	strdeq	sl, [r0], -r8
   13408:	muleq	r0, r4, r5
   1340c:	strdeq	sl, [r0], -r8
   13410:	andeq	sl, r0, r4, lsl r3
   13414:	ldrdeq	sl, [r0], -r8
   13418:	andeq	sl, r0, r0, ror #7
   1341c:	andeq	sl, r0, r4, ror #9
   13420:	andeq	sl, r0, r8, lsl r3
   13424:	andeq	sl, r0, ip, lsl #10
   13428:	andeq	sl, r0, r4, lsr #11
   1342c:	andeq	sl, r0, r4, asr #9
   13430:	andeq	sl, r0, r8, ror r3
   13434:	strdeq	sl, [r0], -ip
   13438:	andeq	sl, r0, ip, asr #7
   1343c:	andeq	sl, r0, r0, lsr r6
   13440:	andeq	sl, r0, r4, ror #8
   13444:	andeq	sl, r0, r0, lsl r5
   13448:	strdeq	sl, [r0], -ip
   1344c:	andeq	sl, r0, ip, ror #8
   13450:			; <UNDEFINED> instruction: 0x0000a4b4
   13454:	strdeq	sl, [r0], -r0
   13458:	andeq	sl, r0, r8, lsr r4
   1345c:	andeq	sl, r0, r0, lsl #9
   13460:	andeq	sl, r0, r4, lsr r3
   13464:	muleq	r0, ip, r2
   13468:	andeq	sl, r0, r8, asr #9
   1346c:	muleq	r0, r4, r5
   13470:	andeq	sl, r0, ip, lsr #10
   13474:			; <UNDEFINED> instruction: 0x0000a3b8
   13478:	andeq	sl, r0, r8, lsl #10
   1347c:	andeq	sl, r0, ip, ror #5
   13480:	andeq	sl, r0, r4, asr #10
   13484:	andeq	sl, r0, r0, lsl r3
   13488:	strdeq	sl, [r0], -r4
   1348c:	andeq	sl, r0, r4, lsl #4
   13490:			; <UNDEFINED> instruction: 0x0000a4b8
   13494:	andeq	sl, r0, r8, lsr #8
   13498:	andeq	sl, r0, r8, asr r5
   1349c:	andeq	sl, r0, r8, lsl #9
   134a0:	andeq	sl, r0, ip, ror #2
   134a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134a8:	sub	sp, sp, #52	; 0x34
   134ac:	mov	r4, r0
   134b0:	ldr	r5, [pc, #1616]	; 13b08 <__assert_fail@plt+0x2010>
   134b4:	str	r2, [sp, #28]
   134b8:	str	r3, [sp, #32]
   134bc:	add	r5, pc, r5
   134c0:	str	r1, [sp, #24]
   134c4:	bl	11918 <strlen@plt>
   134c8:	add	r0, r0, #4
   134cc:	bl	18d40 <close_stdout@@Base+0x3cbc>
   134d0:	ldrb	r3, [r4]
   134d4:	ldr	r2, [pc, #1584]	; 13b0c <__assert_fail@plt+0x2014>
   134d8:	cmp	r3, #0
   134dc:	mov	r8, r0
   134e0:	beq	13a40 <__assert_fail@plt+0x1f48>
   134e4:	mov	ip, #0
   134e8:	str	ip, [sp, #20]
   134ec:	ldr	ip, [pc, #1564]	; 13b10 <__assert_fail@plt+0x2018>
   134f0:	ldr	sl, [pc, #1564]	; 13b14 <__assert_fail@plt+0x201c>
   134f4:	add	ip, pc, ip
   134f8:	str	ip, [sp, #36]	; 0x24
   134fc:	ldr	ip, [pc, #1556]	; 13b18 <__assert_fail@plt+0x2020>
   13500:	add	sl, pc, sl
   13504:	ldr	r7, [r5, r2]
   13508:	add	r9, sl, #8
   1350c:	add	ip, pc, ip
   13510:	str	ip, [sp, #16]
   13514:	ldr	ip, [pc, #1536]	; 13b1c <__assert_fail@plt+0x2024>
   13518:	add	ip, pc, ip
   1351c:	str	ip, [sp, #44]	; 0x2c
   13520:	ldr	ip, [pc, #1528]	; 13b20 <__assert_fail@plt+0x2028>
   13524:	add	ip, pc, ip
   13528:	str	ip, [sp, #40]	; 0x28
   1352c:	b	13574 <__assert_fail@plt+0x1a7c>
   13530:	ldr	ip, [sp, #16]
   13534:	ldrb	r2, [ip, #21]
   13538:	cmp	r2, #0
   1353c:	bne	13674 <__assert_fail@plt+0x1b7c>
   13540:	ldr	r0, [r7]
   13544:	ldr	r2, [r0, #20]
   13548:	ldr	r1, [r0, #24]
   1354c:	cmp	r2, r1
   13550:	bcs	13ac0 <__assert_fail@plt+0x1fc8>
   13554:	mov	r5, r4
   13558:	add	r4, r4, #1
   1355c:	add	r1, r2, #1
   13560:	str	r1, [r0, #20]
   13564:	strb	r3, [r2]
   13568:	ldrb	r3, [r5, #1]
   1356c:	cmp	r3, #0
   13570:	beq	135b8 <__assert_fail@plt+0x1ac0>
   13574:	cmp	r3, #37	; 0x25
   13578:	beq	135e0 <__assert_fail@plt+0x1ae8>
   1357c:	cmp	r3, #92	; 0x5c
   13580:	beq	13530 <__assert_fail@plt+0x1a38>
   13584:	ldr	r0, [r7]
   13588:	ldr	r2, [r0, #20]
   1358c:	ldr	r1, [r0, #24]
   13590:	cmp	r2, r1
   13594:	bcs	13ac0 <__assert_fail@plt+0x1fc8>
   13598:	mov	r5, r4
   1359c:	add	r1, r2, #1
   135a0:	str	r1, [r0, #20]
   135a4:	add	r4, r4, #1
   135a8:	strb	r3, [r2]
   135ac:	ldrb	r3, [r5, #1]
   135b0:	cmp	r3, #0
   135b4:	bne	13574 <__assert_fail@plt+0x1a7c>
   135b8:	mov	r0, r8
   135bc:	bl	11750 <free@plt>
   135c0:	ldr	r3, [pc, #1372]	; 13b24 <__assert_fail@plt+0x202c>
   135c4:	ldr	r1, [r7]
   135c8:	add	r3, pc, r3
   135cc:	ldr	r0, [r3]
   135d0:	bl	116d8 <fputs_unlocked@plt>
   135d4:	ldr	r0, [sp, #20]
   135d8:	add	sp, sp, #52	; 0x34
   135dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135e0:	add	fp, r4, #1
   135e4:	mov	r1, sl
   135e8:	mov	r0, fp
   135ec:	bl	11aec <strspn@plt>
   135f0:	mov	r1, r9
   135f4:	add	r0, r0, #1
   135f8:	add	r6, r4, r0
   135fc:	mov	r0, r6
   13600:	bl	11aec <strspn@plt>
   13604:	ldrb	r5, [r6, r0]
   13608:	add	r6, r6, r0
   1360c:	cmp	r5, #46	; 0x2e
   13610:	beq	1377c <__assert_fail@plt+0x1c84>
   13614:	rsb	fp, fp, r6
   13618:	mov	r1, r4
   1361c:	add	r4, fp, #1
   13620:	mov	r0, r8
   13624:	mov	r2, r4
   13628:	bl	11768 <memcpy@plt>
   1362c:	cmp	r5, #0
   13630:	beq	13728 <__assert_fail@plt+0x1c30>
   13634:	cmp	r5, #37	; 0x25
   13638:	bne	136ec <__assert_fail@plt+0x1bf4>
   1363c:	cmp	fp, #0
   13640:	mov	r5, r6
   13644:	bne	13734 <__assert_fail@plt+0x1c3c>
   13648:	ldr	r0, [r7]
   1364c:	ldr	r3, [r0, #20]
   13650:	ldr	r2, [r0, #24]
   13654:	cmp	r3, r2
   13658:	bcs	13ad4 <__assert_fail@plt+0x1fdc>
   1365c:	add	r2, r3, #1
   13660:	add	r4, r5, #1
   13664:	str	r2, [r0, #20]
   13668:	mov	r2, #37	; 0x25
   1366c:	strb	r2, [r3]
   13670:	b	13568 <__assert_fail@plt+0x1a70>
   13674:	ldrb	r6, [r4, #1]
   13678:	sub	r1, r6, #48	; 0x30
   1367c:	uxtb	r2, r1
   13680:	cmp	r2, #7
   13684:	bhi	13794 <__assert_fail@plt+0x1c9c>
   13688:	ldrb	r3, [r4, #2]
   1368c:	add	r6, r4, #2
   13690:	sub	r3, r3, #48	; 0x30
   13694:	uxtb	r2, r3
   13698:	cmp	r2, #7
   1369c:	bhi	136c0 <__assert_fail@plt+0x1bc8>
   136a0:	ldrb	r2, [r4, #3]
   136a4:	add	r1, r3, r1, lsl #3
   136a8:	add	r6, r4, #3
   136ac:	sub	r3, r2, #48	; 0x30
   136b0:	uxtb	r2, r3
   136b4:	cmp	r2, #7
   136b8:	addls	r1, r3, r1, lsl #3
   136bc:	addls	r6, r4, #4
   136c0:	ldr	r0, [r7]
   136c4:	ldr	r3, [r0, #20]
   136c8:	ldr	r2, [r0, #24]
   136cc:	cmp	r3, r2
   136d0:	addcc	r2, r3, #1
   136d4:	strcc	r2, [r0, #20]
   136d8:	strbcc	r1, [r3]
   136dc:	bcs	13ae4 <__assert_fail@plt+0x1fec>
   136e0:	sub	r5, r6, #1
   136e4:	mov	r4, r6
   136e8:	b	13568 <__assert_fail@plt+0x1a70>
   136ec:	ldr	ip, [sp, #32]
   136f0:	mov	r1, r4
   136f4:	mov	r2, r5
   136f8:	mov	r0, r8
   136fc:	ldr	r3, [sp, #24]
   13700:	add	r4, r6, #1
   13704:	str	ip, [sp]
   13708:	mov	r5, r6
   1370c:	ldr	ip, [sp, #28]
   13710:	blx	ip
   13714:	ldr	ip, [sp, #20]
   13718:	orr	r0, r0, ip
   1371c:	uxtb	r0, r0
   13720:	str	r0, [sp, #20]
   13724:	b	13568 <__assert_fail@plt+0x1a70>
   13728:	cmp	fp, #0
   1372c:	sub	r5, r6, #1
   13730:	beq	13648 <__assert_fail@plt+0x1b50>
   13734:	ldrb	r2, [r6]
   13738:	add	r3, r8, fp
   1373c:	mov	r6, #0
   13740:	ldr	r1, [sp, #36]	; 0x24
   13744:	mov	r0, r6
   13748:	strb	r2, [r8, r4]
   1374c:	mov	r2, #5
   13750:	strb	r6, [r3, #2]
   13754:	bl	1178c <dcgettext@plt>
   13758:	mov	r4, r0
   1375c:	mov	r0, r8
   13760:	bl	16d2c <close_stdout@@Base+0x1ca8>
   13764:	mov	r1, r6
   13768:	mov	r2, r4
   1376c:	mov	r3, r0
   13770:	mov	r0, #1
   13774:	bl	11840 <error@plt>
   13778:	b	13648 <__assert_fail@plt+0x1b50>
   1377c:	add	r0, r6, #1
   13780:	mov	r1, r9
   13784:	bl	11aec <strspn@plt>
   13788:	add	r0, r0, #1
   1378c:	ldrb	r5, [r6, r0]!
   13790:	b	13614 <__assert_fail@plt+0x1b1c>
   13794:	cmp	r6, #120	; 0x78
   13798:	add	r5, r4, #1
   1379c:	beq	1399c <__assert_fail@plt+0x1ea4>
   137a0:	cmp	r6, #0
   137a4:	bne	13800 <__assert_fail@plt+0x1d08>
   137a8:	ldr	r1, [sp, #40]	; 0x28
   137ac:	mov	r2, #5
   137b0:	mov	r0, r6
   137b4:	str	r3, [sp, #12]
   137b8:	bl	1178c <dcgettext@plt>
   137bc:	mov	r1, r6
   137c0:	mov	r2, r0
   137c4:	mov	r0, r6
   137c8:	bl	11840 <error@plt>
   137cc:	ldr	r0, [r7]
   137d0:	ldr	r3, [sp, #12]
   137d4:	ldr	r2, [r0, #20]
   137d8:	ldr	r1, [r0, #24]
   137dc:	cmp	r2, r1
   137e0:	bcs	13af0 <__assert_fail@plt+0x1ff8>
   137e4:	mov	r1, r5
   137e8:	add	ip, r2, #1
   137ec:	mov	r5, r4
   137f0:	str	ip, [r0, #20]
   137f4:	mov	r4, r1
   137f8:	strb	r3, [r2]
   137fc:	b	13568 <__assert_fail@plt+0x1a70>
   13800:	sub	r3, r6, #34	; 0x22
   13804:	cmp	r3, #84	; 0x54
   13808:	addls	pc, pc, r3, lsl #2
   1380c:	b	13a4c <__assert_fail@plt+0x1f54>
   13810:	b	13968 <__assert_fail@plt+0x1e70>
   13814:	b	13a4c <__assert_fail@plt+0x1f54>
   13818:	b	13a4c <__assert_fail@plt+0x1f54>
   1381c:	b	13a4c <__assert_fail@plt+0x1f54>
   13820:	b	13a4c <__assert_fail@plt+0x1f54>
   13824:	b	13a4c <__assert_fail@plt+0x1f54>
   13828:	b	13a4c <__assert_fail@plt+0x1f54>
   1382c:	b	13a4c <__assert_fail@plt+0x1f54>
   13830:	b	13a4c <__assert_fail@plt+0x1f54>
   13834:	b	13a4c <__assert_fail@plt+0x1f54>
   13838:	b	13a4c <__assert_fail@plt+0x1f54>
   1383c:	b	13a4c <__assert_fail@plt+0x1f54>
   13840:	b	13a4c <__assert_fail@plt+0x1f54>
   13844:	b	13a4c <__assert_fail@plt+0x1f54>
   13848:	b	13a4c <__assert_fail@plt+0x1f54>
   1384c:	b	13a4c <__assert_fail@plt+0x1f54>
   13850:	b	13a4c <__assert_fail@plt+0x1f54>
   13854:	b	13a4c <__assert_fail@plt+0x1f54>
   13858:	b	13a4c <__assert_fail@plt+0x1f54>
   1385c:	b	13a4c <__assert_fail@plt+0x1f54>
   13860:	b	13a4c <__assert_fail@plt+0x1f54>
   13864:	b	13a4c <__assert_fail@plt+0x1f54>
   13868:	b	13a4c <__assert_fail@plt+0x1f54>
   1386c:	b	13a4c <__assert_fail@plt+0x1f54>
   13870:	b	13a4c <__assert_fail@plt+0x1f54>
   13874:	b	13a4c <__assert_fail@plt+0x1f54>
   13878:	b	13a4c <__assert_fail@plt+0x1f54>
   1387c:	b	13a4c <__assert_fail@plt+0x1f54>
   13880:	b	13a4c <__assert_fail@plt+0x1f54>
   13884:	b	13a4c <__assert_fail@plt+0x1f54>
   13888:	b	13a4c <__assert_fail@plt+0x1f54>
   1388c:	b	13a4c <__assert_fail@plt+0x1f54>
   13890:	b	13a4c <__assert_fail@plt+0x1f54>
   13894:	b	13a4c <__assert_fail@plt+0x1f54>
   13898:	b	13a4c <__assert_fail@plt+0x1f54>
   1389c:	b	13a4c <__assert_fail@plt+0x1f54>
   138a0:	b	13a4c <__assert_fail@plt+0x1f54>
   138a4:	b	13a4c <__assert_fail@plt+0x1f54>
   138a8:	b	13a4c <__assert_fail@plt+0x1f54>
   138ac:	b	13a4c <__assert_fail@plt+0x1f54>
   138b0:	b	13a4c <__assert_fail@plt+0x1f54>
   138b4:	b	13a4c <__assert_fail@plt+0x1f54>
   138b8:	b	13a4c <__assert_fail@plt+0x1f54>
   138bc:	b	13a4c <__assert_fail@plt+0x1f54>
   138c0:	b	13a4c <__assert_fail@plt+0x1f54>
   138c4:	b	13a4c <__assert_fail@plt+0x1f54>
   138c8:	b	13a4c <__assert_fail@plt+0x1f54>
   138cc:	b	13a4c <__assert_fail@plt+0x1f54>
   138d0:	b	13a4c <__assert_fail@plt+0x1f54>
   138d4:	b	13a4c <__assert_fail@plt+0x1f54>
   138d8:	b	13a4c <__assert_fail@plt+0x1f54>
   138dc:	b	13a4c <__assert_fail@plt+0x1f54>
   138e0:	b	13a4c <__assert_fail@plt+0x1f54>
   138e4:	b	13a4c <__assert_fail@plt+0x1f54>
   138e8:	b	13a4c <__assert_fail@plt+0x1f54>
   138ec:	b	13a4c <__assert_fail@plt+0x1f54>
   138f0:	b	13a4c <__assert_fail@plt+0x1f54>
   138f4:	b	13a4c <__assert_fail@plt+0x1f54>
   138f8:	b	13968 <__assert_fail@plt+0x1e70>
   138fc:	b	13a4c <__assert_fail@plt+0x1f54>
   13900:	b	13a4c <__assert_fail@plt+0x1f54>
   13904:	b	13a4c <__assert_fail@plt+0x1f54>
   13908:	b	13a4c <__assert_fail@plt+0x1f54>
   1390c:	b	13964 <__assert_fail@plt+0x1e6c>
   13910:	b	13ab8 <__assert_fail@plt+0x1fc0>
   13914:	b	13a4c <__assert_fail@plt+0x1f54>
   13918:	b	13a4c <__assert_fail@plt+0x1f54>
   1391c:	b	13a98 <__assert_fail@plt+0x1fa0>
   13920:	b	13aa0 <__assert_fail@plt+0x1fa8>
   13924:	b	13a4c <__assert_fail@plt+0x1f54>
   13928:	b	13a4c <__assert_fail@plt+0x1f54>
   1392c:	b	13a4c <__assert_fail@plt+0x1f54>
   13930:	b	13a4c <__assert_fail@plt+0x1f54>
   13934:	b	13a4c <__assert_fail@plt+0x1f54>
   13938:	b	13a4c <__assert_fail@plt+0x1f54>
   1393c:	b	13a4c <__assert_fail@plt+0x1f54>
   13940:	b	13aa8 <__assert_fail@plt+0x1fb0>
   13944:	b	13a4c <__assert_fail@plt+0x1f54>
   13948:	b	13a4c <__assert_fail@plt+0x1f54>
   1394c:	b	13a4c <__assert_fail@plt+0x1f54>
   13950:	b	13ab0 <__assert_fail@plt+0x1fb8>
   13954:	b	13a4c <__assert_fail@plt+0x1f54>
   13958:	b	13a88 <__assert_fail@plt+0x1f90>
   1395c:	b	13a4c <__assert_fail@plt+0x1f54>
   13960:	b	13a90 <__assert_fail@plt+0x1f98>
   13964:	mov	r6, #7
   13968:	ldr	r0, [r7]
   1396c:	ldr	r3, [r0, #20]
   13970:	ldr	r2, [r0, #24]
   13974:	cmp	r3, r2
   13978:	addcc	r2, r3, #1
   1397c:	addcc	r4, r4, #2
   13980:	strcc	r2, [r0, #20]
   13984:	strbcc	r6, [r3]
   13988:	bcc	13568 <__assert_fail@plt+0x1a70>
   1398c:	mov	r1, r6
   13990:	add	r4, r4, #2
   13994:	bl	119fc <__overflow@plt>
   13998:	b	13568 <__assert_fail@plt+0x1a70>
   1399c:	bl	118e8 <__ctype_b_loc@plt>
   139a0:	ldrb	r3, [r4, #2]
   139a4:	lsl	r1, r3, #1
   139a8:	ldr	r2, [r0]
   139ac:	ldrh	r1, [r2, r1]
   139b0:	tst	r1, #4096	; 0x1000
   139b4:	beq	13a4c <__assert_fail@plt+0x1f54>
   139b8:	sub	r1, r3, #97	; 0x61
   139bc:	cmp	r1, #5
   139c0:	subls	r3, r3, #87	; 0x57
   139c4:	bls	139d8 <__assert_fail@plt+0x1ee0>
   139c8:	sub	r1, r3, #65	; 0x41
   139cc:	cmp	r1, #5
   139d0:	subls	r3, r3, #55	; 0x37
   139d4:	subhi	r3, r3, #48	; 0x30
   139d8:	ldrb	r1, [r4, #3]
   139dc:	lsl	r0, r1, #1
   139e0:	ldrh	r2, [r2, r0]
   139e4:	tst	r2, #4096	; 0x1000
   139e8:	addeq	r5, r4, #2
   139ec:	beq	13a0c <__assert_fail@plt+0x1f14>
   139f0:	sub	r2, r1, #97	; 0x61
   139f4:	add	r5, r4, #3
   139f8:	cmp	r2, #5
   139fc:	lsl	r3, r3, #4
   13a00:	subls	r1, r1, #87	; 0x57
   13a04:	bhi	13a74 <__assert_fail@plt+0x1f7c>
   13a08:	add	r3, r3, r1
   13a0c:	ldr	r0, [r7]
   13a10:	ldr	r2, [r0, #20]
   13a14:	ldr	r1, [r0, #24]
   13a18:	cmp	r2, r1
   13a1c:	addcc	r1, r2, #1
   13a20:	addcc	r4, r5, #1
   13a24:	strcc	r1, [r0, #20]
   13a28:	strbcc	r3, [r2]
   13a2c:	bcc	13568 <__assert_fail@plt+0x1a70>
   13a30:	uxtb	r1, r3
   13a34:	add	r4, r5, #1
   13a38:	bl	119fc <__overflow@plt>
   13a3c:	b	13568 <__assert_fail@plt+0x1a70>
   13a40:	str	r3, [sp, #20]
   13a44:	ldr	r7, [r5, r2]
   13a48:	b	135b8 <__assert_fail@plt+0x1ac0>
   13a4c:	ldr	r1, [sp, #44]	; 0x2c
   13a50:	mov	r2, #5
   13a54:	mov	r0, #0
   13a58:	bl	1178c <dcgettext@plt>
   13a5c:	mov	r3, r6
   13a60:	mov	r2, r0
   13a64:	mov	r0, #0
   13a68:	mov	r1, r0
   13a6c:	bl	11840 <error@plt>
   13a70:	b	13968 <__assert_fail@plt+0x1e70>
   13a74:	sub	r2, r1, #65	; 0x41
   13a78:	cmp	r2, #5
   13a7c:	subls	r1, r1, #55	; 0x37
   13a80:	subhi	r1, r1, #48	; 0x30
   13a84:	b	13a08 <__assert_fail@plt+0x1f10>
   13a88:	mov	r6, #9
   13a8c:	b	13968 <__assert_fail@plt+0x1e70>
   13a90:	mov	r6, #11
   13a94:	b	13968 <__assert_fail@plt+0x1e70>
   13a98:	mov	r6, #27
   13a9c:	b	13968 <__assert_fail@plt+0x1e70>
   13aa0:	mov	r6, #12
   13aa4:	b	13968 <__assert_fail@plt+0x1e70>
   13aa8:	mov	r6, #10
   13aac:	b	13968 <__assert_fail@plt+0x1e70>
   13ab0:	mov	r6, #13
   13ab4:	b	13968 <__assert_fail@plt+0x1e70>
   13ab8:	mov	r6, #8
   13abc:	b	13968 <__assert_fail@plt+0x1e70>
   13ac0:	mov	r1, r3
   13ac4:	mov	r5, r4
   13ac8:	bl	119fc <__overflow@plt>
   13acc:	add	r4, r4, #1
   13ad0:	b	13568 <__assert_fail@plt+0x1a70>
   13ad4:	mov	r1, #37	; 0x25
   13ad8:	add	r4, r5, #1
   13adc:	bl	119fc <__overflow@plt>
   13ae0:	b	13568 <__assert_fail@plt+0x1a70>
   13ae4:	uxtb	r1, r1
   13ae8:	bl	119fc <__overflow@plt>
   13aec:	b	136e0 <__assert_fail@plt+0x1be8>
   13af0:	mov	r1, r3
   13af4:	bl	119fc <__overflow@plt>
   13af8:	mov	r3, r5
   13afc:	mov	r5, r4
   13b00:	mov	r4, r3
   13b04:	b	13568 <__assert_fail@plt+0x1a70>
   13b08:	andeq	ip, r1, ip, lsr fp
   13b0c:	muleq	r0, r8, r1
   13b10:	andeq	sl, r0, r0, lsl r3
   13b14:	ldrdeq	r9, [r0], -r4
   13b18:	strdeq	ip, [r1], -r4
   13b1c:	andeq	sl, r0, r8, lsr #6
   13b20:	strdeq	sl, [r0], -r8
   13b24:	andeq	ip, r1, r8, ror #23
   13b28:	push	{r4, lr}
   13b2c:	sub	sp, sp, #16
   13b30:	add	r3, sp, #8
   13b34:	stm	r3, {r0, r1}
   13b38:	mov	r0, r3
   13b3c:	bl	118ac <localtime@plt>
   13b40:	subs	r3, r0, #0
   13b44:	beq	13b84 <__assert_fail@plt+0x208c>
   13b48:	ldr	r4, [pc, #84]	; 13ba4 <__assert_fail@plt+0x20ac>
   13b4c:	mov	r2, #0
   13b50:	ldr	ip, [sp, #12]
   13b54:	mov	r1, #44	; 0x2c
   13b58:	add	r4, pc, r4
   13b5c:	str	r2, [sp]
   13b60:	add	r4, r4, #24
   13b64:	ldr	r2, [pc, #60]	; 13ba8 <__assert_fail@plt+0x20b0>
   13b68:	str	ip, [sp, #4]
   13b6c:	add	r2, pc, r2
   13b70:	mov	r0, r4
   13b74:	bl	18764 <close_stdout@@Base+0x36e0>
   13b78:	mov	r0, r4
   13b7c:	add	sp, sp, #16
   13b80:	pop	{r4, pc}
   13b84:	ldr	r0, [sp, #8]
   13b88:	ldr	r2, [pc, #28]	; 13bac <__assert_fail@plt+0x20b4>
   13b8c:	add	r2, pc, r2
   13b90:	asr	r1, r0, #31
   13b94:	add	r2, r2, #24
   13b98:	bl	15568 <close_stdout@@Base+0x4e4>
   13b9c:	add	sp, sp, #16
   13ba0:	pop	{r4, pc}
   13ba4:	andeq	ip, r1, r8, lsr #13
   13ba8:	strdeq	r9, [r0], -r8
   13bac:	andeq	ip, r1, r4, ror r6
   13bb0:	ldr	r3, [pc, #356]	; 13d1c <__assert_fail@plt+0x2224>
   13bb4:	ldr	r2, [pc, #356]	; 13d20 <__assert_fail@plt+0x2228>
   13bb8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13bbc:	add	r3, pc, r3
   13bc0:	ldr	r4, [pc, #348]	; 13d24 <__assert_fail@plt+0x222c>
   13bc4:	mov	r6, r0
   13bc8:	ldr	sl, [r3, r2]
   13bcc:	sub	sp, sp, #216	; 0xd8
   13bd0:	add	r4, pc, r4
   13bd4:	ldrb	r0, [r4, #68]	; 0x44
   13bd8:	ldr	r3, [sl]
   13bdc:	cmp	r0, #0
   13be0:	str	r3, [sp, #212]	; 0xd4
   13be4:	beq	13cb4 <__assert_fail@plt+0x21bc>
   13be8:	ldr	r7, [r4, #72]	; 0x48
   13bec:	cmp	r7, #0
   13bf0:	addne	r9, sp, #104	; 0x68
   13bf4:	bne	13c08 <__assert_fail@plt+0x2110>
   13bf8:	b	13c98 <__assert_fail@plt+0x21a0>
   13bfc:	ldr	r7, [r7, #28]
   13c00:	cmp	r7, #0
   13c04:	beq	13c98 <__assert_fail@plt+0x21a0>
   13c08:	ldrb	r3, [r7, #24]
   13c0c:	tst	r3, #1
   13c10:	beq	13bfc <__assert_fail@plt+0x2104>
   13c14:	ldr	r3, [r7]
   13c18:	ldrb	r3, [r3]
   13c1c:	cmp	r3, #47	; 0x2f
   13c20:	bne	13bfc <__assert_fail@plt+0x2104>
   13c24:	ldr	r0, [r7, #4]
   13c28:	mov	r1, r6
   13c2c:	bl	11714 <strcmp@plt>
   13c30:	cmp	r0, #0
   13c34:	bne	13bfc <__assert_fail@plt+0x2104>
   13c38:	mov	r0, #3
   13c3c:	mov	r1, r6
   13c40:	mov	r2, sp
   13c44:	bl	11a98 <__xstat64@plt>
   13c48:	cmp	r0, #0
   13c4c:	bne	13bfc <__assert_fail@plt+0x2104>
   13c50:	mov	r0, #3
   13c54:	ldr	r1, [r7]
   13c58:	mov	r2, r9
   13c5c:	bl	11a98 <__xstat64@plt>
   13c60:	cmp	r0, #0
   13c64:	bne	13bfc <__assert_fail@plt+0x2104>
   13c68:	ldrd	r4, [sp, #96]	; 0x60
   13c6c:	ldrd	r2, [sp, #200]	; 0xc8
   13c70:	cmp	r5, r3
   13c74:	cmpeq	r4, r2
   13c78:	bne	13bfc <__assert_fail@plt+0x2104>
   13c7c:	ldrd	r4, [sp]
   13c80:	ldrd	r2, [sp, #104]	; 0x68
   13c84:	cmp	r5, r3
   13c88:	cmpeq	r4, r2
   13c8c:	bne	13bfc <__assert_fail@plt+0x2104>
   13c90:	ldr	r0, [r7]
   13c94:	b	13c9c <__assert_fail@plt+0x21a4>
   13c98:	mov	r0, #0
   13c9c:	ldr	r2, [sp, #212]	; 0xd4
   13ca0:	ldr	r3, [sl]
   13ca4:	cmp	r2, r3
   13ca8:	bne	13d18 <__assert_fail@plt+0x2220>
   13cac:	add	sp, sp, #216	; 0xd8
   13cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13cb4:	bl	195c0 <close_stdout@@Base+0x453c>
   13cb8:	cmp	r0, #0
   13cbc:	mov	r7, r0
   13cc0:	str	r0, [r4, #72]	; 0x48
   13cc4:	beq	13cdc <__assert_fail@plt+0x21e4>
   13cc8:	ldr	r3, [pc, #88]	; 13d28 <__assert_fail@plt+0x2230>
   13ccc:	mov	r2, #1
   13cd0:	add	r3, pc, r3
   13cd4:	strb	r2, [r3, #68]	; 0x44
   13cd8:	b	13bec <__assert_fail@plt+0x20f4>
   13cdc:	bl	11960 <__errno_location@plt>
   13ce0:	ldr	r1, [pc, #68]	; 13d2c <__assert_fail@plt+0x2234>
   13ce4:	mov	r2, #5
   13ce8:	add	r1, pc, r1
   13cec:	ldr	r5, [r0]
   13cf0:	mov	r0, r7
   13cf4:	bl	1178c <dcgettext@plt>
   13cf8:	ldr	r2, [pc, #48]	; 13d30 <__assert_fail@plt+0x2238>
   13cfc:	mov	r1, r5
   13d00:	add	r2, pc, r2
   13d04:	mov	r3, r0
   13d08:	mov	r0, r7
   13d0c:	bl	11840 <error@plt>
   13d10:	ldr	r7, [r4, #72]	; 0x48
   13d14:	b	13cc8 <__assert_fail@plt+0x21d0>
   13d18:	bl	11798 <__stack_chk_fail@plt>
   13d1c:	andeq	ip, r1, ip, lsr r4
   13d20:	andeq	r0, r0, ip, ror r1
   13d24:	andeq	ip, r1, r0, lsr r6
   13d28:	andeq	ip, r1, r0, lsr r5
   13d2c:	muleq	r0, r4, fp
   13d30:	andeq	sl, r0, ip, lsl ip
   13d34:	cmp	r0, #0
   13d38:	push	{r4, r5, r6, lr}
   13d3c:	mov	r4, r1
   13d40:	mov	r5, r2
   13d44:	beq	13d60 <__assert_fail@plt+0x2268>
   13d48:	cmp	r1, #0
   13d4c:	beq	13e8c <__assert_fail@plt+0x2394>
   13d50:	ldr	r0, [pc, #400]	; 13ee8 <__assert_fail@plt+0x23f0>
   13d54:	pop	{r4, r5, r6, lr}
   13d58:	add	r0, pc, r0
   13d5c:	b	18f38 <close_stdout@@Base+0x3eb4>
   13d60:	cmp	r1, #0
   13d64:	beq	13d84 <__assert_fail@plt+0x228c>
   13d68:	bl	11708 <is_selinux_enabled@plt>
   13d6c:	cmp	r0, #0
   13d70:	ble	13ed8 <__assert_fail@plt+0x23e0>
   13d74:	ldr	r0, [pc, #368]	; 13eec <__assert_fail@plt+0x23f4>
   13d78:	pop	{r4, r5, r6, lr}
   13d7c:	add	r0, pc, r0
   13d80:	b	18f38 <close_stdout@@Base+0x3eb4>
   13d84:	ldr	r1, [pc, #356]	; 13ef0 <__assert_fail@plt+0x23f8>
   13d88:	mov	r2, #5
   13d8c:	add	r1, pc, r1
   13d90:	bl	1178c <dcgettext@plt>
   13d94:	bl	18f38 <close_stdout@@Base+0x3eb4>
   13d98:	cmp	r5, #0
   13d9c:	mov	r6, r0
   13da0:	bne	13ea8 <__assert_fail@plt+0x23b0>
   13da4:	ldr	r1, [pc, #328]	; 13ef4 <__assert_fail@plt+0x23fc>
   13da8:	mov	r0, r5
   13dac:	mov	r2, #5
   13db0:	add	r1, pc, r1
   13db4:	bl	1178c <dcgettext@plt>
   13db8:	mov	r1, r6
   13dbc:	mov	r2, r0
   13dc0:	ldr	r0, [pc, #304]	; 13ef8 <__assert_fail@plt+0x2400>
   13dc4:	add	r0, pc, r0
   13dc8:	bl	18fe0 <close_stdout@@Base+0x3f5c>
   13dcc:	mov	r5, r0
   13dd0:	mov	r0, r6
   13dd4:	ldr	r6, [pc, #288]	; 13efc <__assert_fail@plt+0x2404>
   13dd8:	bl	11750 <free@plt>
   13ddc:	ldr	r1, [pc, #284]	; 13f00 <__assert_fail@plt+0x2408>
   13de0:	mov	r2, #5
   13de4:	mov	r0, #0
   13de8:	add	r1, pc, r1
   13dec:	add	r6, pc, r6
   13df0:	bl	1178c <dcgettext@plt>
   13df4:	mov	r1, r5
   13df8:	mov	r2, r0
   13dfc:	mov	r0, r6
   13e00:	bl	18fe0 <close_stdout@@Base+0x3f5c>
   13e04:	mov	r4, r0
   13e08:	mov	r0, r5
   13e0c:	bl	11750 <free@plt>
   13e10:	bl	11708 <is_selinux_enabled@plt>
   13e14:	cmp	r0, #0
   13e18:	ble	13e50 <__assert_fail@plt+0x2358>
   13e1c:	ldr	r1, [pc, #224]	; 13f04 <__assert_fail@plt+0x240c>
   13e20:	mov	r2, #5
   13e24:	mov	r0, #0
   13e28:	add	r1, pc, r1
   13e2c:	bl	1178c <dcgettext@plt>
   13e30:	mov	r1, r4
   13e34:	mov	r2, r0
   13e38:	mov	r0, r6
   13e3c:	bl	18fe0 <close_stdout@@Base+0x3f5c>
   13e40:	mov	r3, r0
   13e44:	mov	r0, r4
   13e48:	mov	r4, r3
   13e4c:	bl	11750 <free@plt>
   13e50:	ldr	r1, [pc, #176]	; 13f08 <__assert_fail@plt+0x2410>
   13e54:	mov	r2, #5
   13e58:	mov	r0, #0
   13e5c:	add	r1, pc, r1
   13e60:	bl	1178c <dcgettext@plt>
   13e64:	mov	r1, r4
   13e68:	mov	r2, r0
   13e6c:	ldr	r0, [pc, #152]	; 13f0c <__assert_fail@plt+0x2414>
   13e70:	add	r0, pc, r0
   13e74:	bl	18fe0 <close_stdout@@Base+0x3f5c>
   13e78:	mov	r5, r0
   13e7c:	mov	r0, r4
   13e80:	bl	11750 <free@plt>
   13e84:	mov	r0, r5
   13e88:	pop	{r4, r5, r6, pc}
   13e8c:	mov	r0, r1
   13e90:	ldr	r1, [pc, #120]	; 13f10 <__assert_fail@plt+0x2418>
   13e94:	mov	r2, #5
   13e98:	add	r1, pc, r1
   13e9c:	bl	1178c <dcgettext@plt>
   13ea0:	pop	{r4, r5, r6, lr}
   13ea4:	b	18f38 <close_stdout@@Base+0x3eb4>
   13ea8:	ldr	r1, [pc, #100]	; 13f14 <__assert_fail@plt+0x241c>
   13eac:	mov	r2, #5
   13eb0:	mov	r0, r4
   13eb4:	add	r1, pc, r1
   13eb8:	bl	1178c <dcgettext@plt>
   13ebc:	mov	r1, r6
   13ec0:	mov	r2, r0
   13ec4:	ldr	r0, [pc, #76]	; 13f18 <__assert_fail@plt+0x2420>
   13ec8:	add	r0, pc, r0
   13ecc:	bl	18fe0 <close_stdout@@Base+0x3f5c>
   13ed0:	mov	r5, r0
   13ed4:	b	13dd0 <__assert_fail@plt+0x22d8>
   13ed8:	ldr	r0, [pc, #60]	; 13f1c <__assert_fail@plt+0x2424>
   13edc:	pop	{r4, r5, r6, lr}
   13ee0:	add	r0, pc, r0
   13ee4:	b	18f38 <close_stdout@@Base+0x3eb4>
   13ee8:	andeq	r9, r0, r0, asr fp
   13eec:	strdeq	r9, [r0], -ip
   13ef0:	andeq	r9, r0, r4, asr ip
   13ef4:			; <UNDEFINED> instruction: 0x00009cb4
   13ef8:	muleq	r0, r8, ip
   13efc:	andeq	r9, r0, r0, ror ip
   13f00:	andeq	r9, r0, r8, lsr #25
   13f04:	andeq	r9, r0, r4, lsr #25
   13f08:	andeq	r9, r0, r0, lsl #25
   13f0c:	andeq	r9, r0, ip, ror #23
   13f10:	andeq	r9, r0, r4, lsr sl
   13f14:	andeq	r9, r0, r8, ror #22
   13f18:	muleq	r0, r4, fp
   13f1c:	andeq	r9, r0, ip, asr #21
   13f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f24:	sub	sp, sp, #28
   13f28:	mov	r9, r1
   13f2c:	add	r1, sp, #24
   13f30:	mov	r5, r0
   13f34:	stmdb	r1, {r2, r3}
   13f38:	mov	r1, #46	; 0x2e
   13f3c:	mov	r2, r9
   13f40:	bl	119c0 <memchr@plt>
   13f44:	ldr	r6, [sp, #16]
   13f48:	ldr	r8, [sp, #20]
   13f4c:	subs	r4, r0, #0
   13f50:	beq	14138 <__assert_fail@plt+0x2640>
   13f54:	mov	r1, #0
   13f58:	strb	r1, [r5, r9]
   13f5c:	ldrb	r3, [r4, #1]
   13f60:	rsb	r9, r5, r4
   13f64:	sub	r3, r3, #48	; 0x30
   13f68:	cmp	r3, #9
   13f6c:	movhi	sl, #9
   13f70:	bls	14124 <__assert_fail@plt+0x262c>
   13f74:	ldrb	r3, [r4, #-1]
   13f78:	sub	r3, r3, #48	; 0x30
   13f7c:	cmp	r3, #9
   13f80:	movhi	r7, #0
   13f84:	bls	14060 <__assert_fail@plt+0x2568>
   13f88:	cmp	sl, #8
   13f8c:	movgt	r4, #1
   13f90:	bgt	13fb0 <__assert_fail@plt+0x24b8>
   13f94:	mov	r3, sl
   13f98:	mov	r4, #1
   13f9c:	add	r3, r3, #1
   13fa0:	add	r4, r4, r4, lsl #2
   13fa4:	cmp	r3, #8
   13fa8:	lsl	r4, r4, #1
   13fac:	ble	13f9c <__assert_fail@plt+0x24a4>
   13fb0:	mov	r0, r8
   13fb4:	mov	r1, r4
   13fb8:	bl	1c76c <close_stdout@@Base+0x76e8>
   13fbc:	cmp	r6, #0
   13fc0:	mov	fp, r0
   13fc4:	blt	14144 <__assert_fail@plt+0x264c>
   13fc8:	mov	r0, r5
   13fcc:	mov	r1, r9
   13fd0:	mov	r2, r6
   13fd4:	asr	r3, r6, #31
   13fd8:	bl	12300 <__assert_fail@plt+0x808>
   13fdc:	cmp	sl, #0
   13fe0:	beq	14034 <__assert_fail@plt+0x253c>
   13fe4:	bic	r0, r0, r0, asr #31
   13fe8:	cmp	sl, #9
   13fec:	movlt	r3, sl
   13ff0:	movge	r3, #9
   13ff4:	cmp	r0, r7
   13ff8:	rsb	sl, r3, sl
   13ffc:	blt	1403c <__assert_fail@plt+0x2544>
   14000:	mov	r0, #0
   14004:	ldr	r2, [pc, #468]	; 141e0 <__assert_fail@plt+0x26e8>
   14008:	mov	r1, #0
   1400c:	str	r0, [sp, #4]
   14010:	mov	r0, #1
   14014:	add	r2, pc, r2
   14018:	str	fp, [sp]
   1401c:	ldr	r2, [r2, #80]	; 0x50
   14020:	str	r1, [sp, #12]
   14024:	ldr	r1, [pc, #440]	; 141e4 <__assert_fail@plt+0x26ec>
   14028:	str	sl, [sp, #8]
   1402c:	add	r1, pc, r1
   14030:	bl	1199c <__printf_chk@plt>
   14034:	add	sp, sp, #28
   14038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1403c:	ldr	r2, [pc, #420]	; 141e8 <__assert_fail@plt+0x26f0>
   14040:	rsb	r0, r0, r7
   14044:	add	r2, pc, r2
   14048:	ldr	r2, [r2, #76]	; 0x4c
   1404c:	cmp	r0, r2
   14050:	bls	14000 <__assert_fail@plt+0x2508>
   14054:	rsb	r0, r2, r0
   14058:	rsb	r0, r3, r0
   1405c:	b	14004 <__assert_fail@plt+0x250c>
   14060:	mov	r3, #0
   14064:	strb	r3, [r4]
   14068:	sub	r4, r4, #1
   1406c:	ldrb	r3, [r4, #-1]
   14070:	sub	r3, r3, #48	; 0x30
   14074:	cmp	r3, #9
   14078:	bls	14068 <__assert_fail@plt+0x2570>
   1407c:	mov	r0, r4
   14080:	mov	r1, #0
   14084:	mov	r2, #10
   14088:	bl	11720 <strtol@plt>
   1408c:	cmp	r0, #1
   14090:	mov	r7, r0
   14094:	ble	13f88 <__assert_fail@plt+0x2490>
   14098:	ldr	r3, [pc, #332]	; 141ec <__assert_fail@plt+0x26f4>
   1409c:	ldrb	r1, [r4]
   140a0:	add	r3, pc, r3
   140a4:	cmp	r1, #48	; 0x30
   140a8:	movne	r1, r4
   140ac:	addeq	r1, r4, #1
   140b0:	ldr	r3, [r3, #76]	; 0x4c
   140b4:	rsb	r9, r5, r1
   140b8:	cmp	r0, r3
   140bc:	bls	13f88 <__assert_fail@plt+0x2490>
   140c0:	rsb	r3, r3, r0
   140c4:	cmp	r3, #1
   140c8:	ble	13f88 <__assert_fail@plt+0x2490>
   140cc:	rsb	lr, sl, r3
   140d0:	cmp	lr, #1
   140d4:	ble	13f88 <__assert_fail@plt+0x2490>
   140d8:	cmp	r5, r1
   140dc:	bcs	141bc <__assert_fail@plt+0x26c4>
   140e0:	sub	r1, r1, #1
   140e4:	sub	r3, r5, #1
   140e8:	mov	r0, r5
   140ec:	mov	ip, #0
   140f0:	ldrb	r2, [r3, #1]!
   140f4:	cmp	r2, #45	; 0x2d
   140f8:	strbne	r2, [r0]
   140fc:	addne	r0, r0, #1
   14100:	moveq	ip, #1
   14104:	cmp	r3, r1
   14108:	bne	140f0 <__assert_fail@plt+0x25f8>
   1410c:	cmp	ip, #0
   14110:	rsb	r4, r5, r0
   14114:	movne	r0, #0
   14118:	beq	141c4 <__assert_fail@plt+0x26cc>
   1411c:	add	r9, r4, r0
   14120:	b	13f88 <__assert_fail@plt+0x2490>
   14124:	add	r0, r4, #1
   14128:	mov	r2, #10
   1412c:	bl	11720 <strtol@plt>
   14130:	subs	sl, r0, #0
   14134:	bne	13f74 <__assert_fail@plt+0x247c>
   14138:	mov	r7, #0
   1413c:	mov	sl, r7
   14140:	b	13f94 <__assert_fail@plt+0x249c>
   14144:	cmp	r8, #0
   14148:	beq	13fc8 <__assert_fail@plt+0x24d0>
   1414c:	mov	r1, r4
   14150:	mov	r0, #51712	; 0xca00
   14154:	movt	r0, #15258	; 0x3b9a
   14158:	bl	1c76c <close_stdout@@Base+0x76e8>
   1415c:	mov	r1, r4
   14160:	rsb	fp, fp, r0
   14164:	mov	r0, r8
   14168:	bl	1c98c <close_stdout@@Base+0x7908>
   1416c:	cmp	r1, #0
   14170:	subne	fp, fp, #1
   14174:	cmp	fp, #0
   14178:	addne	r6, r6, #1
   1417c:	cmp	r6, #0
   14180:	bne	13fc8 <__assert_fail@plt+0x24d0>
   14184:	ldr	r2, [pc, #100]	; 141f0 <__assert_fail@plt+0x26f8>
   14188:	mov	r1, r9
   1418c:	ldr	r3, [pc, #96]	; 141f4 <__assert_fail@plt+0x26fc>
   14190:	mov	r0, r5
   14194:	add	r2, pc, r2
   14198:	add	r3, pc, r3
   1419c:	bl	12188 <__assert_fail@plt+0x690>
   141a0:	mov	r1, r5
   141a4:	mov	r2, #0
   141a8:	mov	r3, #0
   141ac:	mov	r0, #1
   141b0:	movt	r3, #49104	; 0xbfd0
   141b4:	bl	1199c <__printf_chk@plt>
   141b8:	b	13fdc <__assert_fail@plt+0x24e4>
   141bc:	mov	r0, r5
   141c0:	mov	r4, #0
   141c4:	ldr	r3, [pc, #44]	; 141f8 <__assert_fail@plt+0x2700>
   141c8:	mov	r1, #1
   141cc:	str	lr, [sp]
   141d0:	mvn	r2, #0
   141d4:	add	r3, pc, r3
   141d8:	bl	1196c <__sprintf_chk@plt>
   141dc:	b	1411c <__assert_fail@plt+0x2624>
   141e0:	andeq	ip, r1, ip, ror #3
   141e4:	andeq	r9, r0, r8, ror #21
   141e8:			; <UNDEFINED> instruction: 0x0001c1bc
   141ec:	andeq	ip, r1, r0, ror #2
   141f0:	andeq	r9, r0, r8, ror #4
   141f4:	andeq	r9, r0, r8, ror r9
   141f8:	andeq	r9, r0, r8, lsr r9
   141fc:	ldr	ip, [pc, #1792]	; 14904 <__assert_fail@plt+0x2e0c>
   14200:	sub	r2, r2, #65	; 0x41
   14204:	push	{r4, r5, r6, r7, r8, r9, lr}
   14208:	add	ip, pc, ip
   1420c:	ldr	r4, [pc, #1780]	; 14908 <__assert_fail@plt+0x2e10>
   14210:	sub	sp, sp, #76	; 0x4c
   14214:	mov	r5, r0
   14218:	mov	r7, r1
   1421c:	ldr	r8, [sp, #104]	; 0x68
   14220:	ldr	r4, [ip, r4]
   14224:	ldr	r6, [r4]
   14228:	str	r6, [sp, #68]	; 0x44
   1422c:	cmp	r2, #57	; 0x39
   14230:	addls	pc, pc, r2, lsl #2
   14234:	b	14768 <__assert_fail@plt+0x2c70>
   14238:	b	14684 <__assert_fail@plt+0x2b8c>
   1423c:	b	14670 <__assert_fail@plt+0x2b78>
   14240:	b	145f8 <__assert_fail@plt+0x2b00>
   14244:	b	145e8 <__assert_fail@plt+0x2af0>
   14248:	b	14768 <__assert_fail@plt+0x2c70>
   1424c:	b	146dc <__assert_fail@plt+0x2be4>
   14250:	b	146c0 <__assert_fail@plt+0x2bc8>
   14254:	b	14768 <__assert_fail@plt+0x2c70>
   14258:	b	14768 <__assert_fail@plt+0x2c70>
   1425c:	b	14768 <__assert_fail@plt+0x2c70>
   14260:	b	14768 <__assert_fail@plt+0x2c70>
   14264:	b	14768 <__assert_fail@plt+0x2c70>
   14268:	b	14768 <__assert_fail@plt+0x2c70>
   1426c:	b	146e8 <__assert_fail@plt+0x2bf0>
   14270:	b	14768 <__assert_fail@plt+0x2c70>
   14274:	b	14768 <__assert_fail@plt+0x2c70>
   14278:	b	14768 <__assert_fail@plt+0x2c70>
   1427c:	b	14768 <__assert_fail@plt+0x2c70>
   14280:	b	14768 <__assert_fail@plt+0x2c70>
   14284:	b	145bc <__assert_fail@plt+0x2ac4>
   14288:	b	145a4 <__assert_fail@plt+0x2aac>
   1428c:	b	14768 <__assert_fail@plt+0x2c70>
   14290:	b	14584 <__assert_fail@plt+0x2a8c>
   14294:	b	14574 <__assert_fail@plt+0x2a7c>
   14298:	b	14564 <__assert_fail@plt+0x2a6c>
   1429c:	b	1453c <__assert_fail@plt+0x2a44>
   142a0:	b	14768 <__assert_fail@plt+0x2c70>
   142a4:	b	14768 <__assert_fail@plt+0x2c70>
   142a8:	b	14768 <__assert_fail@plt+0x2c70>
   142ac:	b	14768 <__assert_fail@plt+0x2c70>
   142b0:	b	14768 <__assert_fail@plt+0x2c70>
   142b4:	b	14768 <__assert_fail@plt+0x2c70>
   142b8:	b	14504 <__assert_fail@plt+0x2a0c>
   142bc:	b	144f4 <__assert_fail@plt+0x29fc>
   142c0:	b	14768 <__assert_fail@plt+0x2c70>
   142c4:	b	144e4 <__assert_fail@plt+0x29ec>
   142c8:	b	14768 <__assert_fail@plt+0x2c70>
   142cc:	b	144bc <__assert_fail@plt+0x29c4>
   142d0:	b	144a8 <__assert_fail@plt+0x29b0>
   142d4:	b	144d0 <__assert_fail@plt+0x29d8>
   142d8:	b	14498 <__assert_fail@plt+0x29a0>
   142dc:	b	14768 <__assert_fail@plt+0x2c70>
   142e0:	b	14768 <__assert_fail@plt+0x2c70>
   142e4:	b	14768 <__assert_fail@plt+0x2c70>
   142e8:	b	14414 <__assert_fail@plt+0x291c>
   142ec:	b	14404 <__assert_fail@plt+0x290c>
   142f0:	b	143e0 <__assert_fail@plt+0x28e8>
   142f4:	b	14768 <__assert_fail@plt+0x2c70>
   142f8:	b	14768 <__assert_fail@plt+0x2c70>
   142fc:	b	14768 <__assert_fail@plt+0x2c70>
   14300:	b	143d0 <__assert_fail@plt+0x28d8>
   14304:	b	143a8 <__assert_fail@plt+0x28b0>
   14308:	b	14394 <__assert_fail@plt+0x289c>
   1430c:	b	14768 <__assert_fail@plt+0x2c70>
   14310:	b	14380 <__assert_fail@plt+0x2888>
   14314:	b	14370 <__assert_fail@plt+0x2878>
   14318:	b	14360 <__assert_fail@plt+0x2868>
   1431c:	b	14320 <__assert_fail@plt+0x2828>
   14320:	add	r8, r8, #88	; 0x58
   14324:	add	r3, sp, #52	; 0x34
   14328:	ldm	r8, {r0, r1}
   1432c:	stm	r3, {r0, r1}
   14330:	bl	13b28 <__assert_fail@plt+0x2030>
   14334:	mov	r2, r0
   14338:	mov	r0, r5
   1433c:	mov	r1, r7
   14340:	bl	12280 <__assert_fail@plt+0x788>
   14344:	mov	r0, #0
   14348:	ldr	r2, [sp, #68]	; 0x44
   1434c:	ldr	r3, [r4]
   14350:	cmp	r2, r3
   14354:	bne	148a8 <__assert_fail@plt+0x2db0>
   14358:	add	sp, sp, #76	; 0x4c
   1435c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14360:	add	r8, r8, #80	; 0x50
   14364:	add	r3, sp, #36	; 0x24
   14368:	ldm	r8, {r0, r1}
   1436c:	b	1432c <__assert_fail@plt+0x2834>
   14370:	add	r8, r8, #72	; 0x48
   14374:	add	r3, sp, #20
   14378:	ldm	r8, {r0, r1}
   1437c:	b	1432c <__assert_fail@plt+0x2834>
   14380:	ldr	r2, [pc, #1412]	; 1490c <__assert_fail@plt+0x2e14>
   14384:	add	r2, pc, r2
   14388:	bl	12280 <__assert_fail@plt+0x788>
   1438c:	mov	r0, #0
   14390:	b	14348 <__assert_fail@plt+0x2850>
   14394:	ldr	r2, [r8, #24]
   14398:	mov	r3, #0
   1439c:	bl	122bc <__assert_fail@plt+0x7c4>
   143a0:	mov	r0, #0
   143a4:	b	14348 <__assert_fail@plt+0x2850>
   143a8:	ldr	ip, [r8, #36]	; 0x24
   143ac:	mov	r3, #0
   143b0:	ldr	r2, [r8, #32]
   143b4:	bic	ip, ip, #4080	; 0xff0
   143b8:	bic	ip, ip, #15
   143bc:	ubfx	r2, r2, #8, #12
   143c0:	orr	r2, ip, r2
   143c4:	bl	1223c <__assert_fail@plt+0x744>
   143c8:	mov	r0, #0
   143cc:	b	14348 <__assert_fail@plt+0x2850>
   143d0:	ldrd	r2, [r8, #48]	; 0x30
   143d4:	bl	12300 <__assert_fail@plt+0x808>
   143d8:	mov	r0, #0
   143dc:	b	14348 <__assert_fail@plt+0x2850>
   143e0:	ldr	r2, [r8, #56]	; 0x38
   143e4:	sub	r3, r2, #1
   143e8:	cmn	r3, #-536870911	; 0xe0000001
   143ec:	asrls	r3, r2, #31
   143f0:	movhi	r2, #512	; 0x200
   143f4:	movhi	r3, #0
   143f8:	bl	122bc <__assert_fail@plt+0x7c4>
   143fc:	mov	r0, #0
   14400:	b	14348 <__assert_fail@plt+0x2850>
   14404:	mov	r2, r3
   14408:	bl	12280 <__assert_fail@plt+0x788>
   1440c:	mov	r0, #0
   14410:	b	14348 <__assert_fail@plt+0x2850>
   14414:	ldr	r2, [pc, #1268]	; 14910 <__assert_fail@plt+0x2e18>
   14418:	add	r2, pc, r2
   1441c:	ldrb	r2, [r2, #96]	; 0x60
   14420:	cmp	r2, #0
   14424:	bne	14438 <__assert_fail@plt+0x2940>
   14428:	ldr	r2, [r8, #16]
   1442c:	and	r2, r2, #61440	; 0xf000
   14430:	cmp	r2, #40960	; 0xa000
   14434:	beq	147ac <__assert_fail@plt+0x2cb4>
   14438:	mov	r0, r3
   1443c:	str	r3, [sp, #4]
   14440:	bl	11a5c <canonicalize_file_name@plt>
   14444:	ldr	r3, [sp, #4]
   14448:	subs	r6, r0, #0
   1444c:	beq	14848 <__assert_fail@plt+0x2d50>
   14450:	str	r3, [sp, #4]
   14454:	bl	13bb0 <__assert_fail@plt+0x20b8>
   14458:	mov	r9, r0
   1445c:	mov	r0, r6
   14460:	bl	11750 <free@plt>
   14464:	cmp	r9, #0
   14468:	ldr	r3, [sp, #4]
   1446c:	movne	r6, #0
   14470:	movne	r2, r9
   14474:	movne	r8, r6
   14478:	beq	147ac <__assert_fail@plt+0x2cb4>
   1447c:	mov	r0, r5
   14480:	mov	r1, r7
   14484:	bl	12280 <__assert_fail@plt+0x788>
   14488:	mov	r0, r8
   1448c:	bl	11750 <free@plt>
   14490:	mov	r0, r6
   14494:	b	14348 <__assert_fail@plt+0x2850>
   14498:	ldrd	r2, [r8, #96]	; 0x60
   1449c:	bl	122bc <__assert_fail@plt+0x7c4>
   144a0:	mov	r0, #0
   144a4:	b	14348 <__assert_fail@plt+0x2850>
   144a8:	ldr	r2, [r8, #28]
   144ac:	mov	r3, #0
   144b0:	bl	122bc <__assert_fail@plt+0x7c4>
   144b4:	mov	r0, #0
   144b8:	b	14348 <__assert_fail@plt+0x2850>
   144bc:	ldr	r2, [r8, #16]
   144c0:	mov	r3, #0
   144c4:	bl	1223c <__assert_fail@plt+0x744>
   144c8:	mov	r0, #0
   144cc:	b	14348 <__assert_fail@plt+0x2850>
   144d0:	ldr	r2, [r8, #20]
   144d4:	mov	r3, #0
   144d8:	bl	122bc <__assert_fail@plt+0x7c4>
   144dc:	mov	r0, #0
   144e0:	b	14348 <__assert_fail@plt+0x2850>
   144e4:	ldrd	r2, [r8]
   144e8:	bl	122bc <__assert_fail@plt+0x7c4>
   144ec:	mov	r0, #0
   144f0:	b	14348 <__assert_fail@plt+0x2850>
   144f4:	ldrd	r2, [r8, #64]	; 0x40
   144f8:	bl	122bc <__assert_fail@plt+0x7c4>
   144fc:	mov	r0, #0
   14500:	b	14348 <__assert_fail@plt+0x2850>
   14504:	ldr	r6, [r8, #16]
   14508:	ldr	r2, [pc, #1028]	; 14914 <__assert_fail@plt+0x2e1c>
   1450c:	ldr	r3, [pc, #1028]	; 14918 <__assert_fail@plt+0x2e20>
   14510:	ubfx	r6, r6, #0, #12
   14514:	add	r2, pc, r2
   14518:	add	r3, pc, r3
   1451c:	bl	12188 <__assert_fail@plt+0x690>
   14520:	mov	r1, r5
   14524:	mov	r2, r6
   14528:	mov	r0, #1
   1452c:	mov	r3, #0
   14530:	bl	1199c <__printf_chk@plt>
   14534:	mov	r0, #0
   14538:	b	14348 <__assert_fail@plt+0x2850>
   1453c:	add	r8, r8, #88	; 0x58
   14540:	add	r3, sp, #60	; 0x3c
   14544:	ldm	r8, {r0, r1}
   14548:	stm	r3, {r0, r1}
   1454c:	mov	r0, r5
   14550:	mov	r1, r7
   14554:	ldm	r3, {r2, r3}
   14558:	bl	13f20 <__assert_fail@plt+0x2428>
   1455c:	mov	r0, #0
   14560:	b	14348 <__assert_fail@plt+0x2850>
   14564:	add	r8, r8, #80	; 0x50
   14568:	add	r3, sp, #44	; 0x2c
   1456c:	ldm	r8, {r0, r1}
   14570:	b	14548 <__assert_fail@plt+0x2a50>
   14574:	add	r8, r8, #72	; 0x48
   14578:	add	r3, sp, #28
   1457c:	ldm	r8, {r0, r1}
   14580:	b	14548 <__assert_fail@plt+0x2a50>
   14584:	add	r3, sp, #12
   14588:	mov	r5, #0
   1458c:	str	r5, [sp, #12]
   14590:	str	r5, [sp, #16]
   14594:	ldm	r3, {r2, r3}
   14598:	bl	13f20 <__assert_fail@plt+0x2428>
   1459c:	mov	r0, r5
   145a0:	b	14348 <__assert_fail@plt+0x2850>
   145a4:	ldr	r0, [r8, #24]
   145a8:	bl	1172c <getpwuid@plt>
   145ac:	cmp	r0, #0
   145b0:	beq	1489c <__assert_fail@plt+0x2da4>
   145b4:	ldr	r2, [r0]
   145b8:	b	14338 <__assert_fail@plt+0x2840>
   145bc:	ldr	r2, [r8, #32]
   145c0:	mov	r3, #0
   145c4:	ldr	lr, [r8, #36]	; 0x24
   145c8:	lsr	ip, r2, #12
   145cc:	uxtb	r2, r2
   145d0:	orr	ip, ip, lr, lsl #20
   145d4:	bic	ip, ip, #255	; 0xff
   145d8:	orr	r2, ip, r2
   145dc:	bl	1223c <__assert_fail@plt+0x744>
   145e0:	mov	r0, #0
   145e4:	b	14348 <__assert_fail@plt+0x2850>
   145e8:	ldrd	r2, [r8]
   145ec:	bl	1223c <__assert_fail@plt+0x744>
   145f0:	mov	r0, #0
   145f4:	b	14348 <__assert_fail@plt+0x2850>
   145f8:	ldr	r2, [pc, #796]	; 1491c <__assert_fail@plt+0x2e24>
   145fc:	mov	r0, r3
   14600:	add	r1, sp, #60	; 0x3c
   14604:	add	r2, pc, r2
   14608:	ldrb	r2, [r2, #96]	; 0x60
   1460c:	str	r3, [sp, #4]
   14610:	cmp	r2, #0
   14614:	beq	1479c <__assert_fail@plt+0x2ca4>
   14618:	bl	19490 <close_stdout@@Base+0x440c>
   1461c:	ldr	r3, [sp, #4]
   14620:	lsr	r0, r0, #31
   14624:	cmp	r0, #0
   14628:	bne	147dc <__assert_fail@plt+0x2ce4>
   1462c:	ldr	r3, [pc, #748]	; 14920 <__assert_fail@plt+0x2e28>
   14630:	mov	r6, r0
   14634:	ldr	r2, [sp, #60]	; 0x3c
   14638:	add	r3, pc, r3
   1463c:	cmp	r2, #0
   14640:	ldrh	r3, [r3]
   14644:	strh	r3, [r5, r7]
   14648:	beq	1483c <__assert_fail@plt+0x2d44>
   1464c:	mov	r1, r5
   14650:	mov	r0, #1
   14654:	bl	1199c <__printf_chk@plt>
   14658:	ldr	r0, [sp, #60]	; 0x3c
   1465c:	cmp	r0, #0
   14660:	beq	14668 <__assert_fail@plt+0x2b70>
   14664:	bl	11a74 <freecon@plt>
   14668:	mov	r0, r6
   1466c:	b	14348 <__assert_fail@plt+0x2850>
   14670:	mov	r2, #512	; 0x200
   14674:	mov	r3, #0
   14678:	bl	122bc <__assert_fail@plt+0x7c4>
   1467c:	mov	r0, #0
   14680:	b	14348 <__assert_fail@plt+0x2850>
   14684:	ldr	r3, [pc, #664]	; 14924 <__assert_fail@plt+0x2e2c>
   14688:	mov	r0, r8
   1468c:	mov	r6, #0
   14690:	add	r3, pc, r3
   14694:	add	r9, r3, #84	; 0x54
   14698:	mov	r8, r3
   1469c:	mov	r1, r9
   146a0:	bl	15560 <close_stdout@@Base+0x4dc>
   146a4:	mov	r0, r5
   146a8:	mov	r2, r9
   146ac:	mov	r1, r7
   146b0:	strb	r6, [r8, #94]	; 0x5e
   146b4:	bl	12280 <__assert_fail@plt+0x788>
   146b8:	mov	r0, r6
   146bc:	b	14348 <__assert_fail@plt+0x2850>
   146c0:	ldr	r0, [r8, #28]
   146c4:	bl	11ad4 <getgrgid@plt>
   146c8:	cmp	r0, #0
   146cc:	bne	145b4 <__assert_fail@plt+0x2abc>
   146d0:	ldr	r2, [pc, #592]	; 14928 <__assert_fail@plt+0x2e30>
   146d4:	add	r2, pc, r2
   146d8:	b	14338 <__assert_fail@plt+0x2840>
   146dc:	mov	r0, r8
   146e0:	bl	15310 <close_stdout@@Base+0x28c>
   146e4:	b	14334 <__assert_fail@plt+0x283c>
   146e8:	mov	r0, r3
   146ec:	str	r3, [sp, #4]
   146f0:	bl	16e80 <close_stdout@@Base+0x1dfc>
   146f4:	mov	r1, r7
   146f8:	mov	r2, r0
   146fc:	mov	r0, r5
   14700:	bl	12280 <__assert_fail@plt+0x788>
   14704:	ldr	r2, [r8, #16]
   14708:	ldr	r3, [sp, #4]
   1470c:	and	r2, r2, #61440	; 0xf000
   14710:	cmp	r2, #40960	; 0xa000
   14714:	movne	r0, #0
   14718:	bne	14348 <__assert_fail@plt+0x2850>
   1471c:	ldr	r1, [r8, #48]	; 0x30
   14720:	mov	r0, r3
   14724:	bl	14f98 <__assert_fail@plt+0x34a0>
   14728:	subs	r6, r0, #0
   1472c:	beq	148ac <__assert_fail@plt+0x2db4>
   14730:	ldr	r1, [pc, #500]	; 1492c <__assert_fail@plt+0x2e34>
   14734:	mov	r0, #1
   14738:	add	r1, pc, r1
   1473c:	bl	1199c <__printf_chk@plt>
   14740:	mov	r0, r6
   14744:	bl	16e80 <close_stdout@@Base+0x1dfc>
   14748:	mov	r1, r7
   1474c:	mov	r2, r0
   14750:	mov	r0, r5
   14754:	bl	12280 <__assert_fail@plt+0x788>
   14758:	mov	r0, r6
   1475c:	bl	11750 <free@plt>
   14760:	mov	r0, #0
   14764:	b	14348 <__assert_fail@plt+0x2850>
   14768:	ldr	r3, [pc, #448]	; 14930 <__assert_fail@plt+0x2e38>
   1476c:	ldr	r3, [ip, r3]
   14770:	ldr	r0, [r3]
   14774:	ldr	r3, [r0, #20]
   14778:	ldr	r2, [r0, #24]
   1477c:	cmp	r3, r2
   14780:	bcs	148f4 <__assert_fail@plt+0x2dfc>
   14784:	add	r1, r3, #1
   14788:	mov	r2, #63	; 0x3f
   1478c:	str	r1, [r0, #20]
   14790:	mov	r0, #0
   14794:	strb	r2, [r3]
   14798:	b	14348 <__assert_fail@plt+0x2850>
   1479c:	bl	194a8 <close_stdout@@Base+0x4424>
   147a0:	ldr	r3, [sp, #4]
   147a4:	lsr	r0, r0, #31
   147a8:	b	14624 <__assert_fail@plt+0x2b2c>
   147ac:	mov	r1, r8
   147b0:	mov	r0, r3
   147b4:	bl	14c7c <__assert_fail@plt+0x3184>
   147b8:	subs	r8, r0, #0
   147bc:	beq	14888 <__assert_fail@plt+0x2d90>
   147c0:	bl	13bb0 <__assert_fail@plt+0x20b8>
   147c4:	cmp	r0, #0
   147c8:	moveq	r6, r0
   147cc:	moveq	r2, r8
   147d0:	movne	r2, r0
   147d4:	movne	r6, #0
   147d8:	b	1447c <__assert_fail@plt+0x2984>
   147dc:	str	r3, [sp, #4]
   147e0:	bl	11960 <__errno_location@plt>
   147e4:	ldr	r1, [pc, #328]	; 14934 <__assert_fail@plt+0x2e3c>
   147e8:	mov	r2, #5
   147ec:	mov	r6, #1
   147f0:	add	r1, pc, r1
   147f4:	ldr	r8, [r0]
   147f8:	mov	r0, #0
   147fc:	bl	1178c <dcgettext@plt>
   14800:	ldr	r3, [sp, #4]
   14804:	mov	r9, r0
   14808:	mov	r0, r3
   1480c:	bl	16e80 <close_stdout@@Base+0x1dfc>
   14810:	mov	r2, r9
   14814:	mov	r1, r8
   14818:	mov	r3, r0
   1481c:	mov	r0, #0
   14820:	bl	11840 <error@plt>
   14824:	ldr	r3, [pc, #268]	; 14938 <__assert_fail@plt+0x2e40>
   14828:	mov	r2, #0
   1482c:	str	r2, [sp, #60]	; 0x3c
   14830:	add	r3, pc, r3
   14834:	ldrh	r3, [r3]
   14838:	strh	r3, [r5, r7]
   1483c:	ldr	r2, [pc, #248]	; 1493c <__assert_fail@plt+0x2e44>
   14840:	add	r2, pc, r2
   14844:	b	1464c <__assert_fail@plt+0x2b54>
   14848:	bl	11960 <__errno_location@plt>
   1484c:	ldr	r1, [pc, #236]	; 14940 <__assert_fail@plt+0x2e48>
   14850:	mov	r2, #5
   14854:	add	r1, pc, r1
   14858:	ldr	r8, [r0]
   1485c:	mov	r0, r6
   14860:	bl	1178c <dcgettext@plt>
   14864:	ldr	r3, [sp, #4]
   14868:	mov	r9, r0
   1486c:	mov	r0, r3
   14870:	bl	16e80 <close_stdout@@Base+0x1dfc>
   14874:	mov	r1, r8
   14878:	mov	r2, r9
   1487c:	mov	r3, r0
   14880:	mov	r0, r6
   14884:	bl	11840 <error@plt>
   14888:	ldr	r2, [pc, #180]	; 14944 <__assert_fail@plt+0x2e4c>
   1488c:	mov	r6, #1
   14890:	mov	r8, #0
   14894:	add	r2, pc, r2
   14898:	b	1447c <__assert_fail@plt+0x2984>
   1489c:	ldr	r2, [pc, #164]	; 14948 <__assert_fail@plt+0x2e50>
   148a0:	add	r2, pc, r2
   148a4:	b	14338 <__assert_fail@plt+0x2840>
   148a8:	bl	11798 <__stack_chk_fail@plt>
   148ac:	bl	11960 <__errno_location@plt>
   148b0:	ldr	r1, [pc, #148]	; 1494c <__assert_fail@plt+0x2e54>
   148b4:	mov	r2, #5
   148b8:	add	r1, pc, r1
   148bc:	ldr	r5, [r0]
   148c0:	mov	r0, r6
   148c4:	bl	1178c <dcgettext@plt>
   148c8:	ldr	r3, [sp, #4]
   148cc:	mov	r7, r0
   148d0:	mov	r0, r3
   148d4:	bl	16e80 <close_stdout@@Base+0x1dfc>
   148d8:	mov	r1, r5
   148dc:	mov	r2, r7
   148e0:	mov	r3, r0
   148e4:	mov	r0, r6
   148e8:	bl	11840 <error@plt>
   148ec:	mov	r0, #1
   148f0:	b	14348 <__assert_fail@plt+0x2850>
   148f4:	mov	r1, #63	; 0x3f
   148f8:	bl	119fc <__overflow@plt>
   148fc:	mov	r0, #0
   14900:	b	14348 <__assert_fail@plt+0x2850>
   14904:	strdeq	fp, [r1], -r0
   14908:	andeq	r0, r0, ip, ror r1
   1490c:	andeq	r9, r0, ip, rrx
   14910:	andeq	fp, r1, r8, ror #27
   14914:	ldrdeq	r8, [r0], -r4
   14918:	andeq	r9, r0, r0, asr #12
   1491c:	strdeq	fp, [r1], -ip
   14920:	andeq	r9, r0, ip, lsr r5
   14924:	andeq	fp, r1, r0, ror fp
   14928:	andeq	r9, r0, r0, asr r4
   1492c:	andeq	r9, r0, r8, lsl r4
   14930:	muleq	r0, r8, r1
   14934:	andeq	r9, r0, r8, lsl #7
   14938:	andeq	r9, r0, r4, asr #6
   1493c:	andeq	r9, r0, ip, ror #5
   14940:	andeq	r9, r0, r8, lsl #6
   14944:	muleq	r0, r8, r2
   14948:	andeq	r9, r0, r4, lsl #5
   1494c:	andeq	r9, r0, r8, ror r2
   14950:	push	{r4, r5, r6, lr}
   14954:	subs	r4, r0, #0
   14958:	ldr	r5, [pc, #692]	; 14c14 <__assert_fail@plt+0x311c>
   1495c:	add	r5, pc, r5
   14960:	beq	149a8 <__assert_fail@plt+0x2eb0>
   14964:	ldr	r3, [pc, #684]	; 14c18 <__assert_fail@plt+0x3120>
   14968:	mov	r2, #5
   1496c:	ldr	r1, [pc, #680]	; 14c1c <__assert_fail@plt+0x3124>
   14970:	mov	r0, #0
   14974:	ldr	r3, [r5, r3]
   14978:	add	r1, pc, r1
   1497c:	ldr	r6, [r3]
   14980:	bl	1178c <dcgettext@plt>
   14984:	ldr	r3, [pc, #660]	; 14c20 <__assert_fail@plt+0x3128>
   14988:	mov	r1, #1
   1498c:	ldr	r3, [r5, r3]
   14990:	ldr	r3, [r3]
   14994:	mov	r2, r0
   14998:	mov	r0, r6
   1499c:	bl	119b4 <__fprintf_chk@plt>
   149a0:	mov	r0, r4
   149a4:	bl	11900 <exit@plt>
   149a8:	ldr	r1, [pc, #628]	; 14c24 <__assert_fail@plt+0x312c>
   149ac:	mov	r2, #5
   149b0:	add	r1, pc, r1
   149b4:	bl	1178c <dcgettext@plt>
   149b8:	ldr	r3, [pc, #608]	; 14c20 <__assert_fail@plt+0x3128>
   149bc:	ldr	r6, [r5, r3]
   149c0:	ldr	r2, [r6]
   149c4:	mov	r1, r0
   149c8:	mov	r0, #1
   149cc:	bl	1199c <__printf_chk@plt>
   149d0:	ldr	r1, [pc, #592]	; 14c28 <__assert_fail@plt+0x3130>
   149d4:	mov	r2, #5
   149d8:	mov	r0, r4
   149dc:	add	r1, pc, r1
   149e0:	bl	1178c <dcgettext@plt>
   149e4:	ldr	r3, [pc, #576]	; 14c2c <__assert_fail@plt+0x3134>
   149e8:	ldr	r5, [r5, r3]
   149ec:	ldr	r1, [r5]
   149f0:	bl	116d8 <fputs_unlocked@plt>
   149f4:	ldr	r1, [pc, #564]	; 14c30 <__assert_fail@plt+0x3138>
   149f8:	mov	r2, #5
   149fc:	mov	r0, r4
   14a00:	add	r1, pc, r1
   14a04:	bl	1178c <dcgettext@plt>
   14a08:	ldr	r1, [r5]
   14a0c:	bl	116d8 <fputs_unlocked@plt>
   14a10:	ldr	r1, [pc, #540]	; 14c34 <__assert_fail@plt+0x313c>
   14a14:	mov	r2, #5
   14a18:	mov	r0, r4
   14a1c:	add	r1, pc, r1
   14a20:	bl	1178c <dcgettext@plt>
   14a24:	ldr	r1, [r5]
   14a28:	bl	116d8 <fputs_unlocked@plt>
   14a2c:	ldr	r1, [pc, #516]	; 14c38 <__assert_fail@plt+0x3140>
   14a30:	mov	r2, #5
   14a34:	mov	r0, r4
   14a38:	add	r1, pc, r1
   14a3c:	bl	1178c <dcgettext@plt>
   14a40:	ldr	r1, [r5]
   14a44:	bl	116d8 <fputs_unlocked@plt>
   14a48:	ldr	r1, [pc, #492]	; 14c3c <__assert_fail@plt+0x3144>
   14a4c:	mov	r2, #5
   14a50:	mov	r0, r4
   14a54:	add	r1, pc, r1
   14a58:	bl	1178c <dcgettext@plt>
   14a5c:	ldr	r1, [r5]
   14a60:	bl	116d8 <fputs_unlocked@plt>
   14a64:	ldr	r1, [pc, #468]	; 14c40 <__assert_fail@plt+0x3148>
   14a68:	mov	r2, #5
   14a6c:	mov	r0, r4
   14a70:	add	r1, pc, r1
   14a74:	bl	1178c <dcgettext@plt>
   14a78:	ldr	r1, [r5]
   14a7c:	bl	116d8 <fputs_unlocked@plt>
   14a80:	ldr	r1, [pc, #444]	; 14c44 <__assert_fail@plt+0x314c>
   14a84:	mov	r2, #5
   14a88:	mov	r0, r4
   14a8c:	add	r1, pc, r1
   14a90:	bl	1178c <dcgettext@plt>
   14a94:	ldr	r1, [r5]
   14a98:	bl	116d8 <fputs_unlocked@plt>
   14a9c:	ldr	r1, [pc, #420]	; 14c48 <__assert_fail@plt+0x3150>
   14aa0:	mov	r2, #5
   14aa4:	mov	r0, r4
   14aa8:	add	r1, pc, r1
   14aac:	bl	1178c <dcgettext@plt>
   14ab0:	ldr	r1, [r5]
   14ab4:	bl	116d8 <fputs_unlocked@plt>
   14ab8:	ldr	r1, [pc, #396]	; 14c4c <__assert_fail@plt+0x3154>
   14abc:	mov	r2, #5
   14ac0:	mov	r0, r4
   14ac4:	add	r1, pc, r1
   14ac8:	bl	1178c <dcgettext@plt>
   14acc:	ldr	r1, [r5]
   14ad0:	bl	116d8 <fputs_unlocked@plt>
   14ad4:	ldr	r1, [pc, #372]	; 14c50 <__assert_fail@plt+0x3158>
   14ad8:	mov	r2, #5
   14adc:	mov	r0, r4
   14ae0:	add	r1, pc, r1
   14ae4:	bl	1178c <dcgettext@plt>
   14ae8:	ldr	r1, [r5]
   14aec:	bl	116d8 <fputs_unlocked@plt>
   14af0:	ldr	r1, [pc, #348]	; 14c54 <__assert_fail@plt+0x315c>
   14af4:	mov	r2, #5
   14af8:	mov	r0, r4
   14afc:	add	r1, pc, r1
   14b00:	bl	1178c <dcgettext@plt>
   14b04:	ldr	r1, [r5]
   14b08:	bl	116d8 <fputs_unlocked@plt>
   14b0c:	ldr	r1, [pc, #324]	; 14c58 <__assert_fail@plt+0x3160>
   14b10:	mov	r2, #5
   14b14:	mov	r0, r4
   14b18:	add	r1, pc, r1
   14b1c:	bl	1178c <dcgettext@plt>
   14b20:	ldr	r1, [r5]
   14b24:	bl	116d8 <fputs_unlocked@plt>
   14b28:	ldr	r1, [pc, #300]	; 14c5c <__assert_fail@plt+0x3164>
   14b2c:	mov	r2, #5
   14b30:	mov	r0, r4
   14b34:	add	r1, pc, r1
   14b38:	bl	1178c <dcgettext@plt>
   14b3c:	ldr	r2, [pc, #284]	; 14c60 <__assert_fail@plt+0x3168>
   14b40:	add	r2, pc, r2
   14b44:	mov	r1, r0
   14b48:	mov	r0, #1
   14b4c:	bl	1199c <__printf_chk@plt>
   14b50:	ldr	r1, [pc, #268]	; 14c64 <__assert_fail@plt+0x316c>
   14b54:	mov	r2, #5
   14b58:	mov	r0, r4
   14b5c:	add	r1, pc, r1
   14b60:	bl	1178c <dcgettext@plt>
   14b64:	ldr	r2, [pc, #252]	; 14c68 <__assert_fail@plt+0x3170>
   14b68:	ldr	r3, [pc, #252]	; 14c6c <__assert_fail@plt+0x3174>
   14b6c:	add	r2, pc, r2
   14b70:	add	r3, pc, r3
   14b74:	mov	r1, r0
   14b78:	mov	r0, #1
   14b7c:	bl	1199c <__printf_chk@plt>
   14b80:	mov	r0, #5
   14b84:	mov	r1, r4
   14b88:	bl	11a08 <setlocale@plt>
   14b8c:	cmp	r0, #0
   14b90:	beq	14bac <__assert_fail@plt+0x30b4>
   14b94:	ldr	r1, [pc, #212]	; 14c70 <__assert_fail@plt+0x3178>
   14b98:	mov	r2, #3
   14b9c:	add	r1, pc, r1
   14ba0:	bl	11aa4 <strncmp@plt>
   14ba4:	cmp	r0, #0
   14ba8:	bne	14be0 <__assert_fail@plt+0x30e8>
   14bac:	ldr	r1, [pc, #192]	; 14c74 <__assert_fail@plt+0x317c>
   14bb0:	mov	r2, #5
   14bb4:	mov	r0, #0
   14bb8:	add	r1, pc, r1
   14bbc:	bl	1178c <dcgettext@plt>
   14bc0:	mov	r5, r0
   14bc4:	ldr	r0, [r6]
   14bc8:	bl	1526c <close_stdout@@Base+0x1e8>
   14bcc:	mov	r1, r5
   14bd0:	mov	r2, r0
   14bd4:	mov	r0, #1
   14bd8:	bl	1199c <__printf_chk@plt>
   14bdc:	b	149a0 <__assert_fail@plt+0x2ea8>
   14be0:	ldr	r1, [pc, #144]	; 14c78 <__assert_fail@plt+0x3180>
   14be4:	mov	r2, #5
   14be8:	mov	r0, r4
   14bec:	add	r1, pc, r1
   14bf0:	bl	1178c <dcgettext@plt>
   14bf4:	mov	r5, r0
   14bf8:	ldr	r0, [r6]
   14bfc:	bl	1526c <close_stdout@@Base+0x1e8>
   14c00:	mov	r1, r5
   14c04:	mov	r2, r0
   14c08:	mov	r0, #1
   14c0c:	bl	1199c <__printf_chk@plt>
   14c10:	b	14bac <__assert_fail@plt+0x30b4>
   14c14:	muleq	r1, ip, r6
   14c18:	andeq	r0, r0, r8, lsl #3
   14c1c:	andeq	r9, r0, r8, lsr #4
   14c20:	andeq	r0, r0, r4, lsr #3
   14c24:	andeq	r9, r0, r8, lsl r2
   14c28:	andeq	r9, r0, ip, lsl #4
   14c2c:	muleq	r0, r8, r1
   14c30:	andeq	r9, r0, r0, lsl r2
   14c34:	andeq	r9, r0, r0, asr #4
   14c38:	muleq	r0, r4, r2
   14c3c:	andeq	r9, r0, ip, lsl r4
   14c40:	andeq	r9, r0, r0, lsr r4
   14c44:	andeq	r9, r0, ip, asr #8
   14c48:	andeq	r9, r0, r4, asr #10
   14c4c:	andeq	r9, r0, r4, asr #11
   14c50:	andeq	r9, r0, r0, lsl r7
   14c54:			; <UNDEFINED> instruction: 0x000098bc
   14c58:	muleq	r0, r0, r9
   14c5c:	andeq	r9, r0, r0, ror sl
   14c60:	andeq	r9, r0, r4, lsr #22
   14c64:	andeq	r9, r0, r0, lsl fp
   14c68:	andeq	r9, r0, r8, lsl fp
   14c6c:	andeq	r9, r0, r4, lsr #22
   14c70:	andeq	r9, r0, r0, lsr #22
   14c74:	andeq	r9, r0, r0, asr fp
   14c78:	ldrdeq	r9, [r0], -r4
   14c7c:	ldr	r3, [pc, #744]	; 14f6c <__assert_fail@plt+0x3474>
   14c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c84:	add	fp, sp, #32
   14c88:	ldr	r2, [pc, #736]	; 14f70 <__assert_fail@plt+0x3478>
   14c8c:	sub	sp, sp, #228	; 0xe4
   14c90:	add	r3, pc, r3
   14c94:	sub	r9, fp, #260	; 0x104
   14c98:	mov	r6, r0
   14c9c:	ldr	sl, [r3, r2]
   14ca0:	mov	r4, r1
   14ca4:	mov	r0, r9
   14ca8:	ldr	r3, [sl]
   14cac:	str	r3, [fp, #-40]	; 0xffffffd8
   14cb0:	bl	16e8c <close_stdout@@Base+0x1e08>
   14cb4:	subs	r5, r0, #0
   14cb8:	bne	14f24 <__assert_fail@plt+0x342c>
   14cbc:	ldr	r3, [r4, #16]
   14cc0:	and	r3, r3, #61440	; 0xf000
   14cc4:	cmp	r3, #16384	; 0x4000
   14cc8:	beq	14e3c <__assert_fail@plt+0x3344>
   14ccc:	mov	r0, r6
   14cd0:	bl	1519c <close_stdout@@Base+0x118>
   14cd4:	mov	r4, r0
   14cd8:	bl	11918 <strlen@plt>
   14cdc:	mov	r1, r4
   14ce0:	add	r3, r0, #15
   14ce4:	add	r2, r0, #1
   14ce8:	bic	r3, r3, #7
   14cec:	sub	sp, sp, r3
   14cf0:	mov	r0, sp
   14cf4:	bl	11768 <memcpy@plt>
   14cf8:	mov	r6, r0
   14cfc:	mov	r0, r4
   14d00:	bl	11750 <free@plt>
   14d04:	mov	r0, r6
   14d08:	bl	117c8 <chdir@plt>
   14d0c:	cmp	r0, #0
   14d10:	blt	14f58 <__assert_fail@plt+0x3460>
   14d14:	sub	r8, fp, #252	; 0xfc
   14d18:	ldr	r1, [pc, #596]	; 14f74 <__assert_fail@plt+0x347c>
   14d1c:	mov	r0, #3
   14d20:	add	r1, pc, r1
   14d24:	mov	r2, r8
   14d28:	bl	11a98 <__xstat64@plt>
   14d2c:	cmp	r0, #0
   14d30:	blt	14ee0 <__assert_fail@plt+0x33e8>
   14d34:	ldr	r6, [pc, #572]	; 14f78 <__assert_fail@plt+0x3480>
   14d38:	sub	r7, fp, #148	; 0x94
   14d3c:	add	r6, pc, r6
   14d40:	b	14d8c <__assert_fail@plt+0x3294>
   14d44:	ldrd	r4, [fp, #-148]	; 0xffffff6c
   14d48:	ldrd	r2, [fp, #-252]	; 0xffffff04
   14d4c:	cmp	r5, r3
   14d50:	cmpeq	r4, r2
   14d54:	bne	14e28 <__assert_fail@plt+0x3330>
   14d58:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   14d5c:	ldrd	r2, [fp, #-156]	; 0xffffff64
   14d60:	cmp	r1, r3
   14d64:	cmpeq	r0, r2
   14d68:	beq	14e28 <__assert_fail@plt+0x3330>
   14d6c:	mov	r0, r6
   14d70:	bl	117c8 <chdir@plt>
   14d74:	cmp	r0, #0
   14d78:	blt	14ed0 <__assert_fail@plt+0x33d8>
   14d7c:	mov	r0, r8
   14d80:	mov	r1, r7
   14d84:	mov	r2, #104	; 0x68
   14d88:	bl	11768 <memcpy@plt>
   14d8c:	mov	r0, #3
   14d90:	mov	r1, r6
   14d94:	mov	r2, r7
   14d98:	bl	11a98 <__xstat64@plt>
   14d9c:	cmp	r0, #0
   14da0:	bge	14d44 <__assert_fail@plt+0x324c>
   14da4:	bl	11960 <__errno_location@plt>
   14da8:	ldr	r1, [pc, #460]	; 14f7c <__assert_fail@plt+0x3484>
   14dac:	add	r1, pc, r1
   14db0:	ldr	r4, [r0]
   14db4:	mov	r2, #5
   14db8:	mov	r0, #0
   14dbc:	bl	1178c <dcgettext@plt>
   14dc0:	mov	r5, r0
   14dc4:	mov	r0, r6
   14dc8:	bl	16e80 <close_stdout@@Base+0x1dfc>
   14dcc:	mov	r1, r4
   14dd0:	mov	r2, r5
   14dd4:	mov	r5, #0
   14dd8:	mov	r3, r0
   14ddc:	mov	r0, #0
   14de0:	bl	11840 <error@plt>
   14de4:	bl	11960 <__errno_location@plt>
   14de8:	mov	r4, r0
   14dec:	mov	r0, r9
   14df0:	ldr	r6, [r4]
   14df4:	bl	16eec <close_stdout@@Base+0x1e68>
   14df8:	cmp	r0, #0
   14dfc:	bne	14ea4 <__assert_fail@plt+0x33ac>
   14e00:	mov	r0, r9
   14e04:	bl	16f08 <close_stdout@@Base+0x1e84>
   14e08:	mov	r0, r5
   14e0c:	str	r6, [r4]
   14e10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14e14:	ldr	r3, [sl]
   14e18:	cmp	r2, r3
   14e1c:	bne	14f68 <__assert_fail@plt+0x3470>
   14e20:	sub	sp, fp, #32
   14e24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e28:	bl	18fac <close_stdout@@Base+0x3f28>
   14e2c:	mov	r5, r0
   14e30:	bl	11960 <__errno_location@plt>
   14e34:	mov	r4, r0
   14e38:	b	14dec <__assert_fail@plt+0x32f4>
   14e3c:	sub	r8, fp, #252	; 0xfc
   14e40:	mov	r1, r4
   14e44:	mov	r2, #104	; 0x68
   14e48:	mov	r0, r8
   14e4c:	bl	11768 <memcpy@plt>
   14e50:	mov	r0, r6
   14e54:	bl	117c8 <chdir@plt>
   14e58:	cmp	r0, #0
   14e5c:	bge	14d34 <__assert_fail@plt+0x323c>
   14e60:	bl	11960 <__errno_location@plt>
   14e64:	ldr	r1, [pc, #276]	; 14f80 <__assert_fail@plt+0x3488>
   14e68:	add	r1, pc, r1
   14e6c:	mov	r2, #5
   14e70:	ldr	r4, [r0]
   14e74:	mov	r0, r5
   14e78:	bl	1178c <dcgettext@plt>
   14e7c:	mov	r7, r0
   14e80:	mov	r0, r6
   14e84:	bl	16e80 <close_stdout@@Base+0x1dfc>
   14e88:	mov	r1, r4
   14e8c:	mov	r2, r7
   14e90:	mov	r3, r0
   14e94:	mov	r0, r5
   14e98:	bl	11840 <error@plt>
   14e9c:	mov	r0, r5
   14ea0:	b	14e10 <__assert_fail@plt+0x3318>
   14ea4:	ldr	r1, [pc, #216]	; 14f84 <__assert_fail@plt+0x348c>
   14ea8:	mov	r2, #5
   14eac:	mov	r0, #0
   14eb0:	ldr	r7, [r4]
   14eb4:	add	r1, pc, r1
   14eb8:	bl	1178c <dcgettext@plt>
   14ebc:	mov	r1, r7
   14ec0:	mov	r2, r0
   14ec4:	mov	r0, #1
   14ec8:	bl	11840 <error@plt>
   14ecc:	b	14e00 <__assert_fail@plt+0x3308>
   14ed0:	bl	11960 <__errno_location@plt>
   14ed4:	ldr	r1, [pc, #172]	; 14f88 <__assert_fail@plt+0x3490>
   14ed8:	add	r1, pc, r1
   14edc:	b	14db0 <__assert_fail@plt+0x32b8>
   14ee0:	bl	11960 <__errno_location@plt>
   14ee4:	ldr	r1, [pc, #160]	; 14f8c <__assert_fail@plt+0x3494>
   14ee8:	mov	r2, #5
   14eec:	add	r1, pc, r1
   14ef0:	mov	r4, r0
   14ef4:	mov	r0, r5
   14ef8:	ldr	r7, [r4]
   14efc:	bl	1178c <dcgettext@plt>
   14f00:	mov	r8, r0
   14f04:	mov	r0, r6
   14f08:	bl	16e80 <close_stdout@@Base+0x1dfc>
   14f0c:	mov	r1, r7
   14f10:	mov	r2, r8
   14f14:	mov	r3, r0
   14f18:	mov	r0, r5
   14f1c:	bl	11840 <error@plt>
   14f20:	b	14dec <__assert_fail@plt+0x32f4>
   14f24:	bl	11960 <__errno_location@plt>
   14f28:	ldr	r1, [pc, #96]	; 14f90 <__assert_fail@plt+0x3498>
   14f2c:	mov	r2, #5
   14f30:	add	r1, pc, r1
   14f34:	ldr	r4, [r0]
   14f38:	mov	r0, #0
   14f3c:	bl	1178c <dcgettext@plt>
   14f40:	mov	r1, r4
   14f44:	mov	r2, r0
   14f48:	mov	r0, #0
   14f4c:	bl	11840 <error@plt>
   14f50:	mov	r0, #0
   14f54:	b	14e10 <__assert_fail@plt+0x3318>
   14f58:	bl	11960 <__errno_location@plt>
   14f5c:	ldr	r1, [pc, #48]	; 14f94 <__assert_fail@plt+0x349c>
   14f60:	add	r1, pc, r1
   14f64:	b	14e6c <__assert_fail@plt+0x3374>
   14f68:	bl	11798 <__stack_chk_fail@plt>
   14f6c:	andeq	fp, r1, r8, ror #6
   14f70:	andeq	r0, r0, ip, ror r1
   14f74:	andeq	r9, r0, ip, lsr #20
   14f78:	muleq	r0, r4, fp
   14f7c:	andeq	r9, r0, ip, ror #20
   14f80:	andeq	r9, r0, r0, lsr #20
   14f84:	andeq	r9, r0, r0, lsr #20
   14f88:			; <UNDEFINED> instruction: 0x000099b0
   14f8c:			; <UNDEFINED> instruction: 0x000099bc
   14f90:	andeq	r9, r0, r8, lsr r9
   14f94:	andeq	r9, r0, r8, lsr #18
   14f98:	cmp	r1, #1024	; 0x400
   14f9c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14fa0:	addls	r4, r1, #1
   14fa4:	mov	r7, r0
   14fa8:	movwhi	r4, #1025	; 0x401
   14fac:	mov	r0, r4
   14fb0:	bl	1187c <malloc@plt>
   14fb4:	mov	r2, r4
   14fb8:	subs	r5, r0, #0
   14fbc:	mov	r0, r7
   14fc0:	mov	r1, r5
   14fc4:	beq	1503c <__assert_fail@plt+0x3544>
   14fc8:	bl	117ec <readlink@plt>
   14fcc:	subs	r6, r0, #0
   14fd0:	blt	15014 <__assert_fail@plt+0x351c>
   14fd4:	cmp	r4, r6
   14fd8:	mov	r0, r5
   14fdc:	bhi	15048 <__assert_fail@plt+0x3550>
   14fe0:	bl	11750 <free@plt>
   14fe4:	cmn	r4, #-1073741823	; 0xc0000001
   14fe8:	lslls	r4, r4, #1
   14fec:	bls	14fac <__assert_fail@plt+0x34b4>
   14ff0:	cmn	r4, #-2147483646	; 0x80000002
   14ff4:	mvn	r4, #-2147483648	; 0x80000000
   14ff8:	bls	14fac <__assert_fail@plt+0x34b4>
   14ffc:	bl	11960 <__errno_location@plt>
   15000:	mov	r3, #0
   15004:	mov	r2, #12
   15008:	str	r2, [r0]
   1500c:	mov	r0, r3
   15010:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15014:	bl	11960 <__errno_location@plt>
   15018:	ldr	r9, [r0]
   1501c:	mov	r8, r0
   15020:	cmp	r9, #34	; 0x22
   15024:	beq	14fd4 <__assert_fail@plt+0x34dc>
   15028:	mov	r0, r5
   1502c:	bl	11750 <free@plt>
   15030:	str	r9, [r8]
   15034:	mov	r3, #0
   15038:	b	15040 <__assert_fail@plt+0x3548>
   1503c:	mov	r3, r5
   15040:	mov	r0, r3
   15044:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15048:	mov	r3, r5
   1504c:	mov	r2, #0
   15050:	mov	r0, r3
   15054:	strb	r2, [r5, r6]
   15058:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1505c:	ldr	r3, [pc, #8]	; 1506c <__assert_fail@plt+0x3574>
   15060:	add	r3, pc, r3
   15064:	str	r0, [r3]
   15068:	bx	lr
   1506c:	andeq	fp, r1, r4, lsl #4
   15070:	ldr	r3, [pc, #8]	; 15080 <__assert_fail@plt+0x3588>
   15074:	add	r3, pc, r3
   15078:	strb	r0, [r3, #4]
   1507c:	bx	lr
   15080:	strdeq	fp, [r1], -r0

00015084 <close_stdout@@Base>:
   15084:	push	{r4, r5, r6, r7, lr}
   15088:	sub	sp, sp, #12
   1508c:	ldr	r4, [pc, #228]	; 15178 <close_stdout@@Base+0xf4>
   15090:	ldr	r3, [pc, #228]	; 1517c <close_stdout@@Base+0xf8>
   15094:	add	r4, pc, r4
   15098:	ldr	r3, [r4, r3]
   1509c:	ldr	r0, [r3]
   150a0:	bl	19e88 <close_stdout@@Base+0x4e04>
   150a4:	cmp	r0, #0
   150a8:	beq	150d0 <close_stdout@@Base+0x4c>
   150ac:	ldr	r3, [pc, #204]	; 15180 <close_stdout@@Base+0xfc>
   150b0:	add	r3, pc, r3
   150b4:	ldrb	r3, [r3, #4]
   150b8:	cmp	r3, #0
   150bc:	beq	150f0 <close_stdout@@Base+0x6c>
   150c0:	bl	11960 <__errno_location@plt>
   150c4:	ldr	r3, [r0]
   150c8:	cmp	r3, #32
   150cc:	bne	150f0 <close_stdout@@Base+0x6c>
   150d0:	ldr	r3, [pc, #172]	; 15184 <close_stdout@@Base+0x100>
   150d4:	ldr	r3, [r4, r3]
   150d8:	ldr	r0, [r3]
   150dc:	bl	19e88 <close_stdout@@Base+0x4e04>
   150e0:	cmp	r0, #0
   150e4:	bne	15144 <close_stdout@@Base+0xc0>
   150e8:	add	sp, sp, #12
   150ec:	pop	{r4, r5, r6, r7, pc}
   150f0:	ldr	r1, [pc, #144]	; 15188 <close_stdout@@Base+0x104>
   150f4:	mov	r0, #0
   150f8:	mov	r2, #5
   150fc:	add	r1, pc, r1
   15100:	bl	1178c <dcgettext@plt>
   15104:	ldr	r3, [pc, #128]	; 1518c <close_stdout@@Base+0x108>
   15108:	ldr	r5, [pc, r3]
   1510c:	cmp	r5, #0
   15110:	mov	r6, r0
   15114:	beq	15154 <close_stdout@@Base+0xd0>
   15118:	bl	11960 <__errno_location@plt>
   1511c:	ldr	r7, [r0]
   15120:	mov	r0, r5
   15124:	bl	16d2c <close_stdout@@Base+0x1ca8>
   15128:	ldr	r2, [pc, #96]	; 15190 <close_stdout@@Base+0x10c>
   1512c:	str	r6, [sp]
   15130:	mov	r1, r7
   15134:	add	r2, pc, r2
   15138:	mov	r3, r0
   1513c:	mov	r0, #0
   15140:	bl	11840 <error@plt>
   15144:	ldr	r3, [pc, #72]	; 15194 <close_stdout@@Base+0x110>
   15148:	ldr	r3, [r4, r3]
   1514c:	ldr	r0, [r3]
   15150:	bl	1175c <_exit@plt>
   15154:	bl	11960 <__errno_location@plt>
   15158:	ldr	r2, [pc, #56]	; 15198 <close_stdout@@Base+0x114>
   1515c:	add	r2, pc, r2
   15160:	mov	r3, r0
   15164:	mov	r0, r5
   15168:	ldr	r1, [r3]
   1516c:	mov	r3, r6
   15170:	bl	11840 <error@plt>
   15174:	b	15144 <close_stdout@@Base+0xc0>
   15178:	andeq	sl, r1, r4, ror #30
   1517c:	muleq	r0, r8, r1
   15180:			; <UNDEFINED> instruction: 0x0001b1b4
   15184:	andeq	r0, r0, r8, lsl #3
   15188:	andeq	r9, r0, r0, lsl r8
   1518c:	andeq	fp, r1, ip, asr r1
   15190:	andeq	r9, r0, r4, ror #15
   15194:	muleq	r0, ip, r1
   15198:	andeq	r9, r0, r0, asr #15
   1519c:	push	{r3, lr}
   151a0:	bl	15214 <close_stdout@@Base+0x190>
   151a4:	cmp	r0, #0
   151a8:	popne	{r3, pc}
   151ac:	bl	18f54 <close_stdout@@Base+0x3ed0>
   151b0:	push	{r3, r4, r5, lr}
   151b4:	mov	r4, r0
   151b8:	ldrb	r5, [r0]
   151bc:	subs	r3, r5, #47	; 0x2f
   151c0:	rsbs	r5, r3, #0
   151c4:	adcs	r5, r5, r3
   151c8:	bl	1526c <close_stdout@@Base+0x1e8>
   151cc:	rsb	r3, r4, r0
   151d0:	cmp	r3, r5
   151d4:	bls	1520c <close_stdout@@Base+0x188>
   151d8:	sub	r0, r3, #1
   151dc:	ldrb	r2, [r4, r0]
   151e0:	cmp	r2, #47	; 0x2f
   151e4:	beq	151fc <close_stdout@@Base+0x178>
   151e8:	b	1520c <close_stdout@@Base+0x188>
   151ec:	ldrb	r2, [r4, r3]
   151f0:	cmp	r2, #47	; 0x2f
   151f4:	popne	{r3, r4, r5, pc}
   151f8:	mov	r0, r3
   151fc:	cmp	r5, r0
   15200:	sub	r3, r0, #1
   15204:	bcc	151ec <close_stdout@@Base+0x168>
   15208:	pop	{r3, r4, r5, pc}
   1520c:	mov	r0, r3
   15210:	pop	{r3, r4, r5, pc}
   15214:	push	{r4, r5, r6, r7, r8, lr}
   15218:	mov	r8, r0
   1521c:	bl	151b0 <close_stdout@@Base+0x12c>
   15220:	rsbs	r6, r0, #1
   15224:	add	r7, r0, #1
   15228:	mov	r4, r0
   1522c:	movcc	r6, #0
   15230:	add	r0, r6, r7
   15234:	bl	1187c <malloc@plt>
   15238:	subs	r5, r0, #0
   1523c:	beq	15264 <close_stdout@@Base+0x1e0>
   15240:	mov	r2, r4
   15244:	mov	r1, r8
   15248:	bl	11768 <memcpy@plt>
   1524c:	cmp	r6, #0
   15250:	movne	r3, #46	; 0x2e
   15254:	strbne	r3, [r5, r4]
   15258:	movne	r4, r7
   1525c:	mov	r3, #0
   15260:	strb	r3, [r5, r4]
   15264:	mov	r0, r5
   15268:	pop	{r4, r5, r6, r7, r8, pc}
   1526c:	ldrb	r3, [r0]
   15270:	cmp	r3, #47	; 0x2f
   15274:	bne	15290 <close_stdout@@Base+0x20c>
   15278:	add	r2, r0, #1
   1527c:	mov	r0, r2
   15280:	add	r2, r2, #1
   15284:	ldrb	r3, [r0]
   15288:	cmp	r3, #47	; 0x2f
   1528c:	beq	1527c <close_stdout@@Base+0x1f8>
   15290:	cmp	r3, #0
   15294:	bxeq	lr
   15298:	mov	r2, r0
   1529c:	mov	r1, #0
   152a0:	cmp	r3, #47	; 0x2f
   152a4:	moveq	r1, #1
   152a8:	beq	152b8 <close_stdout@@Base+0x234>
   152ac:	cmp	r1, #0
   152b0:	movne	r0, r2
   152b4:	movne	r1, #0
   152b8:	ldrb	r3, [r2, #1]!
   152bc:	cmp	r3, #0
   152c0:	bne	152a0 <close_stdout@@Base+0x21c>
   152c4:	bx	lr
   152c8:	push	{r4, lr}
   152cc:	mov	r4, r0
   152d0:	bl	11918 <strlen@plt>
   152d4:	cmp	r0, #1
   152d8:	popls	{r4, pc}
   152dc:	sub	r3, r0, #1
   152e0:	ldrb	r2, [r4, r3]
   152e4:	cmp	r2, #47	; 0x2f
   152e8:	popne	{r4, pc}
   152ec:	mov	r0, r3
   152f0:	cmp	r0, #1
   152f4:	sub	r3, r3, #1
   152f8:	beq	1530c <close_stdout@@Base+0x288>
   152fc:	ldrb	r2, [r4, r3]
   15300:	cmp	r2, #47	; 0x2f
   15304:	popne	{r4, pc}
   15308:	b	152ec <close_stdout@@Base+0x268>
   1530c:	pop	{r4, pc}
   15310:	ldr	r3, [r0, #16]
   15314:	and	r3, r3, #61440	; 0xf000
   15318:	cmp	r3, #32768	; 0x8000
   1531c:	beq	15364 <close_stdout@@Base+0x2e0>
   15320:	cmp	r3, #16384	; 0x4000
   15324:	mov	r0, #0
   15328:	beq	153a4 <close_stdout@@Base+0x320>
   1532c:	cmp	r3, #24576	; 0x6000
   15330:	beq	153b4 <close_stdout@@Base+0x330>
   15334:	cmp	r3, #8192	; 0x2000
   15338:	beq	153c4 <close_stdout@@Base+0x340>
   1533c:	cmp	r3, #4096	; 0x1000
   15340:	beq	153d4 <close_stdout@@Base+0x350>
   15344:	cmp	r3, #40960	; 0xa000
   15348:	beq	153e4 <close_stdout@@Base+0x360>
   1534c:	cmp	r3, #49152	; 0xc000
   15350:	beq	15394 <close_stdout@@Base+0x310>
   15354:	ldr	r1, [pc, #152]	; 153f4 <close_stdout@@Base+0x370>
   15358:	mov	r2, #5
   1535c:	add	r1, pc, r1
   15360:	b	1178c <dcgettext@plt>
   15364:	ldrd	r2, [r0, #48]	; 0x30
   15368:	mov	r0, #0
   1536c:	orrs	r1, r2, r3
   15370:	bne	15384 <close_stdout@@Base+0x300>
   15374:	ldr	r1, [pc, #124]	; 153f8 <close_stdout@@Base+0x374>
   15378:	mov	r2, #5
   1537c:	add	r1, pc, r1
   15380:	b	1178c <dcgettext@plt>
   15384:	ldr	r1, [pc, #112]	; 153fc <close_stdout@@Base+0x378>
   15388:	mov	r2, #5
   1538c:	add	r1, pc, r1
   15390:	b	1178c <dcgettext@plt>
   15394:	ldr	r1, [pc, #100]	; 15400 <close_stdout@@Base+0x37c>
   15398:	mov	r2, #5
   1539c:	add	r1, pc, r1
   153a0:	b	1178c <dcgettext@plt>
   153a4:	ldr	r1, [pc, #88]	; 15404 <close_stdout@@Base+0x380>
   153a8:	mov	r2, #5
   153ac:	add	r1, pc, r1
   153b0:	b	1178c <dcgettext@plt>
   153b4:	ldr	r1, [pc, #76]	; 15408 <close_stdout@@Base+0x384>
   153b8:	mov	r2, #5
   153bc:	add	r1, pc, r1
   153c0:	b	1178c <dcgettext@plt>
   153c4:	ldr	r1, [pc, #64]	; 1540c <close_stdout@@Base+0x388>
   153c8:	mov	r2, #5
   153cc:	add	r1, pc, r1
   153d0:	b	1178c <dcgettext@plt>
   153d4:	ldr	r1, [pc, #52]	; 15410 <close_stdout@@Base+0x38c>
   153d8:	mov	r2, #5
   153dc:	add	r1, pc, r1
   153e0:	b	1178c <dcgettext@plt>
   153e4:	ldr	r1, [pc, #40]	; 15414 <close_stdout@@Base+0x390>
   153e8:	mov	r2, #5
   153ec:	add	r1, pc, r1
   153f0:	b	1178c <dcgettext@plt>
   153f4:	andeq	r9, r0, r4, lsr r6
   153f8:	andeq	r9, r0, r4, lsr #11
   153fc:	andeq	r9, r0, r8, lsr #11
   15400:	andeq	r9, r0, ip, ror #11
   15404:	andeq	r9, r0, ip, asr #10
   15408:	andeq	r9, r0, r8, lsl #11
   1540c:	andeq	r9, r0, ip, lsl #11
   15410:	muleq	r0, r4, r5
   15414:	andeq	r9, r0, ip, lsl #11
   15418:	and	r3, r0, #61440	; 0xf000
   1541c:	cmp	r3, #32768	; 0x8000
   15420:	moveq	r3, #45	; 0x2d
   15424:	beq	15470 <close_stdout@@Base+0x3ec>
   15428:	cmp	r3, #16384	; 0x4000
   1542c:	moveq	r3, #100	; 0x64
   15430:	beq	15470 <close_stdout@@Base+0x3ec>
   15434:	cmp	r3, #24576	; 0x6000
   15438:	moveq	r3, #98	; 0x62
   1543c:	beq	15470 <close_stdout@@Base+0x3ec>
   15440:	cmp	r3, #8192	; 0x2000
   15444:	moveq	r3, #99	; 0x63
   15448:	beq	15470 <close_stdout@@Base+0x3ec>
   1544c:	cmp	r3, #40960	; 0xa000
   15450:	moveq	r3, #108	; 0x6c
   15454:	beq	15470 <close_stdout@@Base+0x3ec>
   15458:	cmp	r3, #4096	; 0x1000
   1545c:	moveq	r3, #112	; 0x70
   15460:	beq	15470 <close_stdout@@Base+0x3ec>
   15464:	cmp	r3, #49152	; 0xc000
   15468:	movne	r3, #63	; 0x3f
   1546c:	moveq	r3, #115	; 0x73
   15470:	tst	r0, #256	; 0x100
   15474:	strb	r3, [r1]
   15478:	moveq	r3, #45	; 0x2d
   1547c:	movne	r3, #114	; 0x72
   15480:	tst	r0, #128	; 0x80
   15484:	strb	r3, [r1, #1]
   15488:	moveq	r3, #45	; 0x2d
   1548c:	movne	r3, #119	; 0x77
   15490:	tst	r0, #2048	; 0x800
   15494:	strb	r3, [r1, #2]
   15498:	beq	15530 <close_stdout@@Base+0x4ac>
   1549c:	tst	r0, #64	; 0x40
   154a0:	moveq	r3, #83	; 0x53
   154a4:	movne	r3, #115	; 0x73
   154a8:	tst	r0, #32
   154ac:	strb	r3, [r1, #3]
   154b0:	moveq	r3, #45	; 0x2d
   154b4:	movne	r3, #114	; 0x72
   154b8:	tst	r0, #16
   154bc:	strb	r3, [r1, #4]
   154c0:	moveq	r3, #45	; 0x2d
   154c4:	movne	r3, #119	; 0x77
   154c8:	tst	r0, #1024	; 0x400
   154cc:	strb	r3, [r1, #5]
   154d0:	beq	15550 <close_stdout@@Base+0x4cc>
   154d4:	tst	r0, #8
   154d8:	moveq	r3, #83	; 0x53
   154dc:	movne	r3, #115	; 0x73
   154e0:	tst	r0, #4
   154e4:	strb	r3, [r1, #6]
   154e8:	moveq	r3, #45	; 0x2d
   154ec:	movne	r3, #114	; 0x72
   154f0:	tst	r0, #2
   154f4:	strb	r3, [r1, #7]
   154f8:	moveq	r3, #45	; 0x2d
   154fc:	movne	r3, #119	; 0x77
   15500:	tst	r0, #512	; 0x200
   15504:	strb	r3, [r1, #8]
   15508:	beq	15540 <close_stdout@@Base+0x4bc>
   1550c:	tst	r0, #1
   15510:	moveq	r3, #84	; 0x54
   15514:	movne	r3, #116	; 0x74
   15518:	strb	r3, [r1, #9]
   1551c:	mov	r2, #32
   15520:	mov	r3, #0
   15524:	strb	r2, [r1, #10]
   15528:	strb	r3, [r1, #11]
   1552c:	bx	lr
   15530:	tst	r0, #64	; 0x40
   15534:	moveq	r3, #45	; 0x2d
   15538:	movne	r3, #120	; 0x78
   1553c:	b	154a8 <close_stdout@@Base+0x424>
   15540:	tst	r0, #1
   15544:	moveq	r3, #45	; 0x2d
   15548:	movne	r3, #120	; 0x78
   1554c:	b	15518 <close_stdout@@Base+0x494>
   15550:	tst	r0, #8
   15554:	moveq	r3, #45	; 0x2d
   15558:	movne	r3, #120	; 0x78
   1555c:	b	154e0 <close_stdout@@Base+0x45c>
   15560:	ldr	r0, [r0, #16]
   15564:	b	15418 <close_stdout@@Base+0x394>
   15568:	push	{r4, r5, r6, r7, r8, lr}
   1556c:	mov	r4, r0
   15570:	mov	r5, r1
   15574:	cmp	r4, #0
   15578:	sbcs	r3, r5, #0
   1557c:	add	r6, r2, #19
   15580:	mov	r3, #0
   15584:	strb	r3, [r2, #20]
   15588:	blt	155d8 <close_stdout@@Base+0x554>
   1558c:	mov	r0, r4
   15590:	mov	r1, r5
   15594:	mov	r2, #10
   15598:	mov	r3, #0
   1559c:	bl	1c9ac <close_stdout@@Base+0x7928>
   155a0:	mov	r7, r6
   155a4:	mov	r0, r4
   155a8:	mov	r1, r5
   155ac:	mov	r3, #0
   155b0:	add	ip, r2, #48	; 0x30
   155b4:	mov	r2, #10
   155b8:	strb	ip, [r6], #-1
   155bc:	bl	1c9ac <close_stdout@@Base+0x7928>
   155c0:	mov	r4, r0
   155c4:	mov	r5, r1
   155c8:	orrs	r3, r4, r5
   155cc:	bne	1558c <close_stdout@@Base+0x508>
   155d0:	mov	r0, r7
   155d4:	pop	{r4, r5, r6, r7, r8, pc}
   155d8:	mov	r0, r4
   155dc:	mov	r1, r5
   155e0:	mov	r2, #10
   155e4:	mov	r3, #0
   155e8:	bl	1c9ac <close_stdout@@Base+0x7928>
   155ec:	mov	r8, r6
   155f0:	mov	r0, r4
   155f4:	mov	r1, r5
   155f8:	mov	r3, #0
   155fc:	rsb	ip, r2, #48	; 0x30
   15600:	mov	r2, #10
   15604:	strb	ip, [r6], #-1
   15608:	bl	1c9ac <close_stdout@@Base+0x7928>
   1560c:	mov	r4, r0
   15610:	mov	r5, r1
   15614:	orrs	r3, r4, r5
   15618:	bne	155d8 <close_stdout@@Base+0x554>
   1561c:	mov	r7, r6
   15620:	mov	r3, #45	; 0x2d
   15624:	mov	r0, r7
   15628:	strb	r3, [r8, #-1]
   1562c:	pop	{r4, r5, r6, r7, r8, pc}
   15630:	push	{r3, r4, r5, r6, r7, lr}
   15634:	subs	r4, r0, #0
   15638:	ldr	r5, [pc, #172]	; 156ec <close_stdout@@Base+0x668>
   1563c:	add	r5, pc, r5
   15640:	beq	156c8 <close_stdout@@Base+0x644>
   15644:	mov	r1, #47	; 0x2f
   15648:	bl	11a14 <strrchr@plt>
   1564c:	subs	r6, r0, #0
   15650:	beq	156ac <close_stdout@@Base+0x628>
   15654:	add	r7, r6, #1
   15658:	rsb	r3, r4, r7
   1565c:	cmp	r3, #6
   15660:	ble	156ac <close_stdout@@Base+0x628>
   15664:	ldr	r1, [pc, #132]	; 156f0 <close_stdout@@Base+0x66c>
   15668:	sub	r0, r6, #6
   1566c:	mov	r2, #7
   15670:	add	r1, pc, r1
   15674:	bl	11aa4 <strncmp@plt>
   15678:	cmp	r0, #0
   1567c:	bne	156ac <close_stdout@@Base+0x628>
   15680:	ldr	r1, [pc, #108]	; 156f4 <close_stdout@@Base+0x670>
   15684:	mov	r0, r7
   15688:	mov	r2, #3
   1568c:	add	r1, pc, r1
   15690:	bl	11aa4 <strncmp@plt>
   15694:	cmp	r0, #0
   15698:	movne	r4, r7
   1569c:	ldreq	r3, [pc, #84]	; 156f8 <close_stdout@@Base+0x674>
   156a0:	addeq	r4, r6, #4
   156a4:	ldreq	r3, [r5, r3]
   156a8:	streq	r4, [r3]
   156ac:	ldr	r2, [pc, #72]	; 156fc <close_stdout@@Base+0x678>
   156b0:	ldr	r3, [pc, #72]	; 15700 <close_stdout@@Base+0x67c>
   156b4:	ldr	r2, [r5, r2]
   156b8:	str	r4, [r2]
   156bc:	ldr	r3, [r5, r3]
   156c0:	str	r4, [r3]
   156c4:	pop	{r3, r4, r5, r6, r7, pc}
   156c8:	ldr	r3, [pc, #52]	; 15704 <close_stdout@@Base+0x680>
   156cc:	mov	r1, #1
   156d0:	ldr	r0, [pc, #48]	; 15708 <close_stdout@@Base+0x684>
   156d4:	mov	r2, #55	; 0x37
   156d8:	ldr	r3, [r5, r3]
   156dc:	add	r0, pc, r0
   156e0:	ldr	r3, [r3]
   156e4:	bl	117f8 <fwrite@plt>
   156e8:	bl	11ab0 <abort@plt>
   156ec:			; <UNDEFINED> instruction: 0x0001a9bc
   156f0:	andeq	r9, r0, r4, ror #6
   156f4:	andeq	r9, r0, r0, asr r3
   156f8:	andeq	r0, r0, ip, lsr #3
   156fc:	andeq	r0, r0, r4, lsr #3
   15700:	andeq	r0, r0, r0, lsr #3
   15704:	andeq	r0, r0, r8, lsl #3
   15708:	andeq	r9, r0, r0, asr #5
   1570c:	push	{r3, lr}
   15710:	mov	r3, r0
   15714:	mov	r2, #0
   15718:	cmp	r1, #8
   1571c:	str	r2, [r3], #4
   15720:	add	r3, r3, #4
   15724:	str	r2, [r0, #4]
   15728:	str	r2, [r3], #4
   1572c:	str	r2, [r3], #4
   15730:	str	r2, [r3], #4
   15734:	str	r2, [r3], #4
   15738:	str	r2, [r3], #4
   1573c:	str	r2, [r3], #4
   15740:	str	r2, [r3], #4
   15744:	str	r2, [r3], #4
   15748:	str	r2, [r3], #4
   1574c:	str	r2, [r3]
   15750:	beq	1575c <close_stdout@@Base+0x6d8>
   15754:	str	r1, [r0]
   15758:	pop	{r3, pc}
   1575c:	bl	11ab0 <abort@plt>
   15760:	push	{r4, r5, r6, lr}
   15764:	mov	r4, r0
   15768:	mov	r6, r1
   1576c:	mov	r0, #0
   15770:	mov	r1, r4
   15774:	mov	r2, #5
   15778:	bl	1178c <dcgettext@plt>
   1577c:	cmp	r0, r4
   15780:	mov	r5, r0
   15784:	beq	1578c <close_stdout@@Base+0x708>
   15788:	pop	{r4, r5, r6, pc}
   1578c:	bl	19f74 <close_stdout@@Base+0x4ef0>
   15790:	ldrb	r3, [r0]
   15794:	bic	r3, r3, #32
   15798:	cmp	r3, #85	; 0x55
   1579c:	bne	15810 <close_stdout@@Base+0x78c>
   157a0:	ldrb	r3, [r0, #1]
   157a4:	bic	r3, r3, #32
   157a8:	cmp	r3, #84	; 0x54
   157ac:	bne	157fc <close_stdout@@Base+0x778>
   157b0:	ldrb	r3, [r0, #2]
   157b4:	bic	r3, r3, #32
   157b8:	cmp	r3, #70	; 0x46
   157bc:	bne	157fc <close_stdout@@Base+0x778>
   157c0:	ldrb	r3, [r0, #3]
   157c4:	cmp	r3, #45	; 0x2d
   157c8:	bne	157fc <close_stdout@@Base+0x778>
   157cc:	ldrb	r3, [r0, #4]
   157d0:	cmp	r3, #56	; 0x38
   157d4:	bne	157fc <close_stdout@@Base+0x778>
   157d8:	ldrb	r3, [r0, #5]
   157dc:	cmp	r3, #0
   157e0:	bne	157fc <close_stdout@@Base+0x778>
   157e4:	ldrb	r3, [r5]
   157e8:	cmp	r3, #96	; 0x60
   157ec:	beq	15888 <close_stdout@@Base+0x804>
   157f0:	ldr	r0, [pc, #180]	; 158ac <close_stdout@@Base+0x828>
   157f4:	add	r0, pc, r0
   157f8:	pop	{r4, r5, r6, pc}
   157fc:	cmp	r6, #7
   15800:	beq	15894 <close_stdout@@Base+0x810>
   15804:	ldr	r0, [pc, #164]	; 158b0 <close_stdout@@Base+0x82c>
   15808:	add	r0, pc, r0
   1580c:	pop	{r4, r5, r6, pc}
   15810:	cmp	r3, #71	; 0x47
   15814:	bne	157fc <close_stdout@@Base+0x778>
   15818:	ldrb	r3, [r0, #1]
   1581c:	bic	r3, r3, #32
   15820:	cmp	r3, #66	; 0x42
   15824:	bne	157fc <close_stdout@@Base+0x778>
   15828:	ldrb	r3, [r0, #2]
   1582c:	cmp	r3, #49	; 0x31
   15830:	bne	157fc <close_stdout@@Base+0x778>
   15834:	ldrb	r3, [r0, #3]
   15838:	cmp	r3, #56	; 0x38
   1583c:	bne	157fc <close_stdout@@Base+0x778>
   15840:	ldrb	r3, [r0, #4]
   15844:	cmp	r3, #48	; 0x30
   15848:	bne	157fc <close_stdout@@Base+0x778>
   1584c:	ldrb	r3, [r0, #5]
   15850:	cmp	r3, #51	; 0x33
   15854:	bne	157fc <close_stdout@@Base+0x778>
   15858:	ldrb	r3, [r0, #6]
   1585c:	cmp	r3, #48	; 0x30
   15860:	bne	157fc <close_stdout@@Base+0x778>
   15864:	ldrb	r3, [r0, #7]
   15868:	cmp	r3, #0
   1586c:	bne	157fc <close_stdout@@Base+0x778>
   15870:	ldrb	r3, [r5]
   15874:	cmp	r3, #96	; 0x60
   15878:	beq	158a0 <close_stdout@@Base+0x81c>
   1587c:	ldr	r0, [pc, #48]	; 158b4 <close_stdout@@Base+0x830>
   15880:	add	r0, pc, r0
   15884:	pop	{r4, r5, r6, pc}
   15888:	ldr	r0, [pc, #40]	; 158b8 <close_stdout@@Base+0x834>
   1588c:	add	r0, pc, r0
   15890:	pop	{r4, r5, r6, pc}
   15894:	ldr	r0, [pc, #32]	; 158bc <close_stdout@@Base+0x838>
   15898:	add	r0, pc, r0
   1589c:	pop	{r4, r5, r6, pc}
   158a0:	ldr	r0, [pc, #24]	; 158c0 <close_stdout@@Base+0x83c>
   158a4:	add	r0, pc, r0
   158a8:	pop	{r4, r5, r6, pc}
   158ac:	andeq	r9, r0, ip, lsl #4
   158b0:	andeq	r9, r0, r0, lsl #4
   158b4:	andeq	r9, r0, r4, lsl #3
   158b8:	andeq	r9, r0, r8, lsl #3
   158bc:	andeq	r9, r0, r4, ror r1
   158c0:	andeq	r9, r0, ip, ror #2
   158c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158c8:	sub	sp, sp, #124	; 0x7c
   158cc:	ldr	ip, [pc, #3304]	; 165bc <close_stdout@@Base+0x1538>
   158d0:	mov	sl, r1
   158d4:	str	r0, [sp, #40]	; 0x28
   158d8:	mov	r8, r3
   158dc:	ldr	r0, [pc, #3292]	; 165c0 <close_stdout@@Base+0x153c>
   158e0:	add	ip, pc, ip
   158e4:	str	r2, [sp, #32]
   158e8:	ldr	r1, [sp, #164]	; 0xa4
   158ec:	mov	r3, ip
   158f0:	ldr	r0, [ip, r0]
   158f4:	ldr	r2, [sp, #172]	; 0xac
   158f8:	ubfx	r1, r1, #1, #1
   158fc:	str	r1, [sp, #36]	; 0x24
   15900:	str	r0, [sp, #56]	; 0x38
   15904:	ldr	r0, [sp, #168]	; 0xa8
   15908:	ldr	r1, [sp, #176]	; 0xb0
   1590c:	str	r2, [sp, #72]	; 0x48
   15910:	str	r0, [sp, #48]	; 0x30
   15914:	ldr	r0, [sp, #56]	; 0x38
   15918:	str	r1, [sp, #68]	; 0x44
   1591c:	ldr	r3, [r0]
   15920:	str	r3, [sp, #116]	; 0x74
   15924:	bl	11810 <__ctype_get_mb_cur_max@plt>
   15928:	ldr	r2, [sp, #160]	; 0xa0
   1592c:	str	r0, [sp, #64]	; 0x40
   15930:	cmp	r2, #8
   15934:	addls	pc, pc, r2, lsl #2
   15938:	b	16498 <close_stdout@@Base+0x1414>
   1593c:	b	15960 <close_stdout@@Base+0x8dc>
   15940:	b	161b0 <close_stdout@@Base+0x112c>
   15944:	b	161e0 <close_stdout@@Base+0x115c>
   15948:	b	16090 <close_stdout@@Base+0x100c>
   1594c:	b	160d0 <close_stdout@@Base+0x104c>
   15950:	b	160fc <close_stdout@@Base+0x1078>
   15954:	b	1611c <close_stdout@@Base+0x1098>
   15958:	b	1611c <close_stdout@@Base+0x1098>
   1595c:	b	1611c <close_stdout@@Base+0x1098>
   15960:	mov	r2, #0
   15964:	str	r2, [sp, #36]	; 0x24
   15968:	mov	r9, r2
   1596c:	str	r2, [sp, #24]
   15970:	str	r2, [sp, #28]
   15974:	str	r2, [sp, #52]	; 0x34
   15978:	ldr	r0, [sp, #36]	; 0x24
   1597c:	mov	fp, #0
   15980:	ldr	r1, [sp, #24]
   15984:	eor	r2, r0, #1
   15988:	eor	r3, r1, #1
   1598c:	and	r3, r2, r3
   15990:	and	r2, r1, r0
   15994:	str	r3, [sp, #44]	; 0x2c
   15998:	str	r2, [sp, #76]	; 0x4c
   1599c:	cmn	r8, #1
   159a0:	beq	15d20 <close_stdout@@Base+0xc9c>
   159a4:	subs	r3, fp, r8
   159a8:	movne	r3, #1
   159ac:	cmp	r3, #0
   159b0:	beq	15d38 <close_stdout@@Base+0xcb4>
   159b4:	ldr	r3, [sp, #28]
   159b8:	ldr	r0, [sp, #24]
   159bc:	adds	r7, r3, #0
   159c0:	movne	r7, #1
   159c4:	ands	r6, r7, r0
   159c8:	bne	16224 <close_stdout@@Base+0x11a0>
   159cc:	ldr	r1, [sp, #32]
   159d0:	add	r5, r1, fp
   159d4:	ldrb	r4, [r5]
   159d8:	cmp	r4, #126	; 0x7e
   159dc:	addls	pc, pc, r4, lsl #2
   159e0:	b	15fa4 <close_stdout@@Base+0xf20>
   159e4:	b	15eb0 <close_stdout@@Base+0xe2c>
   159e8:	b	15fa4 <close_stdout@@Base+0xf20>
   159ec:	b	15fa4 <close_stdout@@Base+0xf20>
   159f0:	b	15fa4 <close_stdout@@Base+0xf20>
   159f4:	b	15fa4 <close_stdout@@Base+0xf20>
   159f8:	b	15fa4 <close_stdout@@Base+0xf20>
   159fc:	b	15fa4 <close_stdout@@Base+0xf20>
   15a00:	b	15e98 <close_stdout@@Base+0xe14>
   15a04:	b	15e80 <close_stdout@@Base+0xdfc>
   15a08:	b	15ea8 <close_stdout@@Base+0xe24>
   15a0c:	b	15ea0 <close_stdout@@Base+0xe1c>
   15a10:	b	15e90 <close_stdout@@Base+0xe0c>
   15a14:	b	15e88 <close_stdout@@Base+0xe04>
   15a18:	b	15e4c <close_stdout@@Base+0xdc8>
   15a1c:	b	15fa4 <close_stdout@@Base+0xf20>
   15a20:	b	15fa4 <close_stdout@@Base+0xf20>
   15a24:	b	15fa4 <close_stdout@@Base+0xf20>
   15a28:	b	15fa4 <close_stdout@@Base+0xf20>
   15a2c:	b	15fa4 <close_stdout@@Base+0xf20>
   15a30:	b	15fa4 <close_stdout@@Base+0xf20>
   15a34:	b	15fa4 <close_stdout@@Base+0xf20>
   15a38:	b	15fa4 <close_stdout@@Base+0xf20>
   15a3c:	b	15fa4 <close_stdout@@Base+0xf20>
   15a40:	b	15fa4 <close_stdout@@Base+0xf20>
   15a44:	b	15fa4 <close_stdout@@Base+0xf20>
   15a48:	b	15fa4 <close_stdout@@Base+0xf20>
   15a4c:	b	15fa4 <close_stdout@@Base+0xf20>
   15a50:	b	15fa4 <close_stdout@@Base+0xf20>
   15a54:	b	15fa4 <close_stdout@@Base+0xf20>
   15a58:	b	15fa4 <close_stdout@@Base+0xf20>
   15a5c:	b	15fa4 <close_stdout@@Base+0xf20>
   15a60:	b	15fa4 <close_stdout@@Base+0xf20>
   15a64:	b	15dd8 <close_stdout@@Base+0xd54>
   15a68:	b	15dd8 <close_stdout@@Base+0xd54>
   15a6c:	b	15dd8 <close_stdout@@Base+0xd54>
   15a70:	b	15dd0 <close_stdout@@Base+0xd4c>
   15a74:	b	15dd8 <close_stdout@@Base+0xd54>
   15a78:	b	15cac <close_stdout@@Base+0xc28>
   15a7c:	b	15dd8 <close_stdout@@Base+0xd54>
   15a80:	b	15f4c <close_stdout@@Base+0xec8>
   15a84:	b	15dd8 <close_stdout@@Base+0xd54>
   15a88:	b	15dd8 <close_stdout@@Base+0xd54>
   15a8c:	b	15dd8 <close_stdout@@Base+0xd54>
   15a90:	b	15cac <close_stdout@@Base+0xc28>
   15a94:	b	15cac <close_stdout@@Base+0xc28>
   15a98:	b	15cac <close_stdout@@Base+0xc28>
   15a9c:	b	15cac <close_stdout@@Base+0xc28>
   15aa0:	b	15cac <close_stdout@@Base+0xc28>
   15aa4:	b	15cac <close_stdout@@Base+0xc28>
   15aa8:	b	15cac <close_stdout@@Base+0xc28>
   15aac:	b	15cac <close_stdout@@Base+0xc28>
   15ab0:	b	15cac <close_stdout@@Base+0xc28>
   15ab4:	b	15cac <close_stdout@@Base+0xc28>
   15ab8:	b	15cac <close_stdout@@Base+0xc28>
   15abc:	b	15cac <close_stdout@@Base+0xc28>
   15ac0:	b	15cac <close_stdout@@Base+0xc28>
   15ac4:	b	15cac <close_stdout@@Base+0xc28>
   15ac8:	b	15cac <close_stdout@@Base+0xc28>
   15acc:	b	15cac <close_stdout@@Base+0xc28>
   15ad0:	b	15dd8 <close_stdout@@Base+0xd54>
   15ad4:	b	15dd8 <close_stdout@@Base+0xd54>
   15ad8:	b	15dd8 <close_stdout@@Base+0xd54>
   15adc:	b	15dd8 <close_stdout@@Base+0xd54>
   15ae0:	b	15be0 <close_stdout@@Base+0xb5c>
   15ae4:	b	15fa4 <close_stdout@@Base+0xf20>
   15ae8:	b	15cac <close_stdout@@Base+0xc28>
   15aec:	b	15cac <close_stdout@@Base+0xc28>
   15af0:	b	15cac <close_stdout@@Base+0xc28>
   15af4:	b	15cac <close_stdout@@Base+0xc28>
   15af8:	b	15cac <close_stdout@@Base+0xc28>
   15afc:	b	15cac <close_stdout@@Base+0xc28>
   15b00:	b	15cac <close_stdout@@Base+0xc28>
   15b04:	b	15cac <close_stdout@@Base+0xc28>
   15b08:	b	15cac <close_stdout@@Base+0xc28>
   15b0c:	b	15cac <close_stdout@@Base+0xc28>
   15b10:	b	15cac <close_stdout@@Base+0xc28>
   15b14:	b	15cac <close_stdout@@Base+0xc28>
   15b18:	b	15cac <close_stdout@@Base+0xc28>
   15b1c:	b	15cac <close_stdout@@Base+0xc28>
   15b20:	b	15cac <close_stdout@@Base+0xc28>
   15b24:	b	15cac <close_stdout@@Base+0xc28>
   15b28:	b	15cac <close_stdout@@Base+0xc28>
   15b2c:	b	15cac <close_stdout@@Base+0xc28>
   15b30:	b	15cac <close_stdout@@Base+0xc28>
   15b34:	b	15cac <close_stdout@@Base+0xc28>
   15b38:	b	15cac <close_stdout@@Base+0xc28>
   15b3c:	b	15cac <close_stdout@@Base+0xc28>
   15b40:	b	15cac <close_stdout@@Base+0xc28>
   15b44:	b	15cac <close_stdout@@Base+0xc28>
   15b48:	b	15cac <close_stdout@@Base+0xc28>
   15b4c:	b	15cac <close_stdout@@Base+0xc28>
   15b50:	b	15dd8 <close_stdout@@Base+0xd54>
   15b54:	b	15f30 <close_stdout@@Base+0xeac>
   15b58:	b	15cac <close_stdout@@Base+0xc28>
   15b5c:	b	15dd8 <close_stdout@@Base+0xd54>
   15b60:	b	15cac <close_stdout@@Base+0xc28>
   15b64:	b	15dd8 <close_stdout@@Base+0xd54>
   15b68:	b	15cac <close_stdout@@Base+0xc28>
   15b6c:	b	15cac <close_stdout@@Base+0xc28>
   15b70:	b	15cac <close_stdout@@Base+0xc28>
   15b74:	b	15cac <close_stdout@@Base+0xc28>
   15b78:	b	15cac <close_stdout@@Base+0xc28>
   15b7c:	b	15cac <close_stdout@@Base+0xc28>
   15b80:	b	15cac <close_stdout@@Base+0xc28>
   15b84:	b	15cac <close_stdout@@Base+0xc28>
   15b88:	b	15cac <close_stdout@@Base+0xc28>
   15b8c:	b	15cac <close_stdout@@Base+0xc28>
   15b90:	b	15cac <close_stdout@@Base+0xc28>
   15b94:	b	15cac <close_stdout@@Base+0xc28>
   15b98:	b	15cac <close_stdout@@Base+0xc28>
   15b9c:	b	15cac <close_stdout@@Base+0xc28>
   15ba0:	b	15cac <close_stdout@@Base+0xc28>
   15ba4:	b	15cac <close_stdout@@Base+0xc28>
   15ba8:	b	15cac <close_stdout@@Base+0xc28>
   15bac:	b	15cac <close_stdout@@Base+0xc28>
   15bb0:	b	15cac <close_stdout@@Base+0xc28>
   15bb4:	b	15cac <close_stdout@@Base+0xc28>
   15bb8:	b	15cac <close_stdout@@Base+0xc28>
   15bbc:	b	15cac <close_stdout@@Base+0xc28>
   15bc0:	b	15cac <close_stdout@@Base+0xc28>
   15bc4:	b	15cac <close_stdout@@Base+0xc28>
   15bc8:	b	15cac <close_stdout@@Base+0xc28>
   15bcc:	b	15cac <close_stdout@@Base+0xc28>
   15bd0:	b	15db8 <close_stdout@@Base+0xd34>
   15bd4:	b	15dd8 <close_stdout@@Base+0xd54>
   15bd8:	b	15db8 <close_stdout@@Base+0xd34>
   15bdc:	b	15dd0 <close_stdout@@Base+0xd4c>
   15be0:	ldr	r3, [sp, #160]	; 0xa0
   15be4:	cmp	r3, #2
   15be8:	beq	16474 <close_stdout@@Base+0x13f0>
   15bec:	cmp	r3, #3
   15bf0:	bne	15cac <close_stdout@@Base+0xc28>
   15bf4:	ldr	r1, [sp, #164]	; 0xa4
   15bf8:	tst	r1, #4
   15bfc:	beq	15cac <close_stdout@@Base+0xc28>
   15c00:	add	r3, fp, #2
   15c04:	cmp	r8, r3
   15c08:	bls	15cac <close_stdout@@Base+0xc28>
   15c0c:	ldrb	r2, [r5, #1]
   15c10:	mov	r1, #1
   15c14:	cmp	r2, #63	; 0x3f
   15c18:	bne	15cac <close_stdout@@Base+0xc28>
   15c1c:	ldr	r0, [sp, #32]
   15c20:	ldrb	ip, [r0, r3]
   15c24:	sub	r0, ip, #33	; 0x21
   15c28:	uxtb	r0, r0
   15c2c:	cmp	r0, #29
   15c30:	bhi	15cac <close_stdout@@Base+0xc28>
   15c34:	lsl	r1, r1, r0
   15c38:	movw	r0, #20929	; 0x51c1
   15c3c:	movt	r0, #14336	; 0x3800
   15c40:	and	r0, r1, r0
   15c44:	cmp	r0, #0
   15c48:	beq	15cac <close_stdout@@Base+0xc28>
   15c4c:	ldr	r1, [sp, #36]	; 0x24
   15c50:	cmp	r1, #0
   15c54:	bne	15df4 <close_stdout@@Base+0xd70>
   15c58:	cmp	r9, sl
   15c5c:	mov	r4, ip
   15c60:	mov	fp, r3
   15c64:	ldrcc	r0, [sp, #40]	; 0x28
   15c68:	strbcc	r2, [r0, r9]
   15c6c:	add	r2, r9, #1
   15c70:	cmp	sl, r2
   15c74:	ldrhi	r0, [sp, #40]	; 0x28
   15c78:	movhi	r1, #34	; 0x22
   15c7c:	strbhi	r1, [r0, r2]
   15c80:	add	r2, r9, #2
   15c84:	cmp	sl, r2
   15c88:	ldrhi	r0, [sp, #40]	; 0x28
   15c8c:	movhi	r1, #34	; 0x22
   15c90:	strbhi	r1, [r0, r2]
   15c94:	add	r2, r9, #3
   15c98:	cmp	sl, r2
   15c9c:	add	r9, r9, #4
   15ca0:	ldrhi	r0, [sp, #40]	; 0x28
   15ca4:	movhi	r1, #63	; 0x3f
   15ca8:	strbhi	r1, [r0, r2]
   15cac:	ldr	r0, [sp, #44]	; 0x2c
   15cb0:	cmp	r0, #0
   15cb4:	bne	15cdc <close_stdout@@Base+0xc58>
   15cb8:	ldr	r1, [sp, #48]	; 0x30
   15cbc:	cmp	r1, #0
   15cc0:	beq	15cdc <close_stdout@@Base+0xc58>
   15cc4:	ubfx	r2, r4, #5, #8
   15cc8:	and	r3, r4, #31
   15ccc:	ldr	r2, [r1, r2, lsl #2]
   15cd0:	lsr	r3, r2, r3
   15cd4:	tst	r3, #1
   15cd8:	bne	15ce4 <close_stdout@@Base+0xc60>
   15cdc:	cmp	r6, #0
   15ce0:	beq	15d04 <close_stdout@@Base+0xc80>
   15ce4:	ldr	r2, [sp, #36]	; 0x24
   15ce8:	cmp	r2, #0
   15cec:	bne	15df4 <close_stdout@@Base+0xd70>
   15cf0:	cmp	r9, sl
   15cf4:	ldrcc	r0, [sp, #40]	; 0x28
   15cf8:	movcc	r3, #92	; 0x5c
   15cfc:	strbcc	r3, [r0, r9]
   15d00:	add	r9, r9, #1
   15d04:	add	fp, fp, #1
   15d08:	cmp	r9, sl
   15d0c:	ldrcc	r1, [sp, #40]	; 0x28
   15d10:	strbcc	r4, [r1, r9]
   15d14:	cmn	r8, #1
   15d18:	add	r9, r9, #1
   15d1c:	bne	159a4 <close_stdout@@Base+0x920>
   15d20:	ldr	r2, [sp, #32]
   15d24:	ldrb	r3, [r2, fp]
   15d28:	adds	r3, r3, #0
   15d2c:	movne	r3, #1
   15d30:	cmp	r3, #0
   15d34:	bne	159b4 <close_stdout@@Base+0x930>
   15d38:	ldr	r3, [sp, #160]	; 0xa0
   15d3c:	cmp	r9, #0
   15d40:	cmpeq	r3, #2
   15d44:	bne	15d54 <close_stdout@@Base+0xcd0>
   15d48:	ldr	r0, [sp, #36]	; 0x24
   15d4c:	cmp	r0, #0
   15d50:	bne	15df4 <close_stdout@@Base+0xd70>
   15d54:	ldr	r1, [sp, #36]	; 0x24
   15d58:	ldr	r2, [sp, #52]	; 0x34
   15d5c:	eor	r3, r1, #1
   15d60:	cmp	r2, #0
   15d64:	moveq	r3, #0
   15d68:	andne	r3, r3, #1
   15d6c:	cmp	r3, #0
   15d70:	beq	15d9c <close_stdout@@Base+0xd18>
   15d74:	ldrb	r3, [r2]
   15d78:	cmp	r3, #0
   15d7c:	beq	15d9c <close_stdout@@Base+0xd18>
   15d80:	ldr	r1, [sp, #40]	; 0x28
   15d84:	cmp	sl, r9
   15d88:	strbhi	r3, [r1, r9]
   15d8c:	ldrb	r3, [r2, #1]!
   15d90:	add	r9, r9, #1
   15d94:	cmp	r3, #0
   15d98:	bne	15d84 <close_stdout@@Base+0xd00>
   15d9c:	cmp	r9, sl
   15da0:	movcs	r0, r9
   15da4:	ldrcc	r1, [sp, #40]	; 0x28
   15da8:	movcc	r3, #0
   15dac:	movcc	r0, r9
   15db0:	strbcc	r3, [r1, r9]
   15db4:	b	15e30 <close_stdout@@Base+0xdac>
   15db8:	cmn	r8, #1
   15dbc:	beq	16484 <close_stdout@@Base+0x1400>
   15dc0:	subs	r3, r8, #1
   15dc4:	movne	r3, #1
   15dc8:	cmp	r3, #0
   15dcc:	bne	15cac <close_stdout@@Base+0xc28>
   15dd0:	cmp	fp, #0
   15dd4:	bne	15cac <close_stdout@@Base+0xc28>
   15dd8:	ldr	r3, [sp, #36]	; 0x24
   15ddc:	ldr	r0, [sp, #160]	; 0xa0
   15de0:	cmp	r0, #2
   15de4:	movne	r3, #0
   15de8:	andeq	r3, r3, #1
   15dec:	cmp	r3, #0
   15df0:	beq	15cac <close_stdout@@Base+0xc28>
   15df4:	ldr	r2, [sp, #164]	; 0xa4
   15df8:	mov	ip, #0
   15dfc:	ldr	r0, [sp, #160]	; 0xa0
   15e00:	bic	r3, r2, #2
   15e04:	ldr	r1, [sp, #72]	; 0x48
   15e08:	ldr	r2, [sp, #68]	; 0x44
   15e0c:	stm	sp, {r0, r3}
   15e10:	mov	r3, r8
   15e14:	str	r1, [sp, #12]
   15e18:	mov	r1, sl
   15e1c:	str	r2, [sp, #16]
   15e20:	ldr	r0, [sp, #40]	; 0x28
   15e24:	ldr	r2, [sp, #32]
   15e28:	str	ip, [sp, #8]
   15e2c:	bl	158c4 <close_stdout@@Base+0x840>
   15e30:	ldr	r1, [sp, #56]	; 0x38
   15e34:	ldr	r2, [sp, #116]	; 0x74
   15e38:	ldr	r3, [r1]
   15e3c:	cmp	r2, r3
   15e40:	bne	16574 <close_stdout@@Base+0x14f0>
   15e44:	add	sp, sp, #124	; 0x7c
   15e48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e4c:	mov	r3, #114	; 0x72
   15e50:	ldr	r2, [sp, #36]	; 0x24
   15e54:	ldr	r0, [sp, #160]	; 0xa0
   15e58:	cmp	r0, #2
   15e5c:	movne	r2, #0
   15e60:	andeq	r2, r2, #1
   15e64:	cmp	r2, #0
   15e68:	bne	15df4 <close_stdout@@Base+0xd70>
   15e6c:	ldr	r1, [sp, #24]
   15e70:	cmp	r1, #0
   15e74:	beq	15cac <close_stdout@@Base+0xc28>
   15e78:	mov	r4, r3
   15e7c:	b	15ce4 <close_stdout@@Base+0xc60>
   15e80:	mov	r3, #98	; 0x62
   15e84:	b	15e6c <close_stdout@@Base+0xde8>
   15e88:	mov	r3, #102	; 0x66
   15e8c:	b	15e6c <close_stdout@@Base+0xde8>
   15e90:	mov	r3, #118	; 0x76
   15e94:	b	15e6c <close_stdout@@Base+0xde8>
   15e98:	mov	r3, #97	; 0x61
   15e9c:	b	15e6c <close_stdout@@Base+0xde8>
   15ea0:	mov	r3, #110	; 0x6e
   15ea4:	b	15e50 <close_stdout@@Base+0xdcc>
   15ea8:	mov	r3, #116	; 0x74
   15eac:	b	15e50 <close_stdout@@Base+0xdcc>
   15eb0:	ldr	r2, [sp, #24]
   15eb4:	cmp	r2, #0
   15eb8:	beq	16460 <close_stdout@@Base+0x13dc>
   15ebc:	ldr	r3, [sp, #36]	; 0x24
   15ec0:	cmp	r3, #0
   15ec4:	bne	15df4 <close_stdout@@Base+0xd70>
   15ec8:	cmp	r9, sl
   15ecc:	add	r2, r9, #1
   15ed0:	ldrcc	r0, [sp, #40]	; 0x28
   15ed4:	movcc	r3, #92	; 0x5c
   15ed8:	strbcc	r3, [r0, r9]
   15edc:	add	r3, fp, #1
   15ee0:	cmp	r8, r3
   15ee4:	bls	15f24 <close_stdout@@Base+0xea0>
   15ee8:	ldr	r1, [sp, #32]
   15eec:	ldrb	r3, [r1, r3]
   15ef0:	sub	r3, r3, #48	; 0x30
   15ef4:	cmp	r3, #9
   15ef8:	bhi	15f24 <close_stdout@@Base+0xea0>
   15efc:	cmp	sl, r2
   15f00:	ldrhi	r0, [sp, #40]	; 0x28
   15f04:	movhi	r3, #48	; 0x30
   15f08:	strbhi	r3, [r0, r2]
   15f0c:	add	r3, r9, #2
   15f10:	cmp	sl, r3
   15f14:	ldrhi	r1, [sp, #40]	; 0x28
   15f18:	movhi	r2, #48	; 0x30
   15f1c:	strbhi	r2, [r1, r3]
   15f20:	add	r2, r9, #3
   15f24:	mov	r9, r2
   15f28:	mov	r4, #48	; 0x30
   15f2c:	b	15cb8 <close_stdout@@Base+0xc34>
   15f30:	ldr	r1, [sp, #76]	; 0x4c
   15f34:	cmp	r1, #0
   15f38:	beq	15f44 <close_stdout@@Base+0xec0>
   15f3c:	cmp	r7, #0
   15f40:	bne	15d04 <close_stdout@@Base+0xc80>
   15f44:	mov	r3, r4
   15f48:	b	15e50 <close_stdout@@Base+0xdcc>
   15f4c:	ldr	r1, [sp, #160]	; 0xa0
   15f50:	cmp	r1, #2
   15f54:	bne	15cac <close_stdout@@Base+0xc28>
   15f58:	ldr	r2, [sp, #36]	; 0x24
   15f5c:	cmp	r2, #0
   15f60:	bne	15df4 <close_stdout@@Base+0xd70>
   15f64:	cmp	r9, sl
   15f68:	ldrcc	r0, [sp, #40]	; 0x28
   15f6c:	movcc	r3, #39	; 0x27
   15f70:	strbcc	r3, [r0, r9]
   15f74:	add	r3, r9, #1
   15f78:	cmp	sl, r3
   15f7c:	ldrhi	r1, [sp, #40]	; 0x28
   15f80:	movhi	r2, #92	; 0x5c
   15f84:	strbhi	r2, [r1, r3]
   15f88:	add	r3, r9, #2
   15f8c:	cmp	sl, r3
   15f90:	add	r9, r9, #3
   15f94:	ldrhi	r0, [sp, #40]	; 0x28
   15f98:	movhi	r2, #39	; 0x27
   15f9c:	strbhi	r2, [r0, r3]
   15fa0:	b	15cac <close_stdout@@Base+0xc28>
   15fa4:	ldr	r1, [sp, #64]	; 0x40
   15fa8:	cmp	r1, #1
   15fac:	bne	162a4 <close_stdout@@Base+0x1220>
   15fb0:	bl	118e8 <__ctype_b_loc@plt>
   15fb4:	ldr	r2, [sp, #64]	; 0x40
   15fb8:	sxth	r3, r4
   15fbc:	str	r2, [sp, #60]	; 0x3c
   15fc0:	lsl	r3, r3, #1
   15fc4:	ldr	r2, [r0]
   15fc8:	ldrh	r2, [r2, r3]
   15fcc:	eor	r2, r2, #16384	; 0x4000
   15fd0:	ubfx	r2, r2, #14, #1
   15fd4:	ldr	r1, [sp, #24]
   15fd8:	ands	r2, r2, r1
   15fdc:	beq	15cac <close_stdout@@Base+0xc28>
   15fe0:	ldr	r3, [sp, #60]	; 0x3c
   15fe4:	mov	r0, #92	; 0x5c
   15fe8:	ldr	r7, [sp, #36]	; 0x24
   15fec:	add	r1, r3, fp
   15ff0:	str	r8, [sp, #60]	; 0x3c
   15ff4:	ldr	r3, [sp, #40]	; 0x28
   15ff8:	b	1605c <close_stdout@@Base+0xfd8>
   15ffc:	cmp	r7, #0
   16000:	bne	1649c <close_stdout@@Base+0x1418>
   16004:	add	ip, r9, #1
   16008:	cmp	r9, sl
   1600c:	strbcc	r0, [r3, r9]
   16010:	cmp	sl, ip
   16014:	lsrhi	r8, r4, #6
   16018:	addhi	r8, r8, #48	; 0x30
   1601c:	strbhi	r8, [r3, ip]
   16020:	add	ip, r9, #2
   16024:	add	r9, r9, #3
   16028:	cmp	sl, ip
   1602c:	ubfxhi	r8, r4, #3, #3
   16030:	and	r4, r4, #7
   16034:	add	r4, r4, #48	; 0x30
   16038:	addhi	r8, r8, #48	; 0x30
   1603c:	strbhi	r8, [r3, ip]
   16040:	add	fp, fp, #1
   16044:	cmp	r1, fp
   16048:	bls	16088 <close_stdout@@Base+0x1004>
   1604c:	cmp	r9, sl
   16050:	strbcc	r4, [r3, r9]
   16054:	ldrb	r4, [r5, #1]!
   16058:	add	r9, r9, #1
   1605c:	cmp	r2, #0
   16060:	bne	15ffc <close_stdout@@Base+0xf78>
   16064:	cmp	r6, #0
   16068:	beq	16040 <close_stdout@@Base+0xfbc>
   1606c:	add	fp, fp, #1
   16070:	cmp	r9, sl
   16074:	strbcc	r0, [r3, r9]
   16078:	cmp	r1, fp
   1607c:	add	r9, r9, #1
   16080:	mov	r6, #0
   16084:	bhi	1604c <close_stdout@@Base+0xfc8>
   16088:	ldr	r8, [sp, #60]	; 0x3c
   1608c:	b	15d08 <close_stdout@@Base+0xc84>
   16090:	ldr	r3, [sp, #36]	; 0x24
   16094:	cmp	r3, #0
   16098:	bne	1659c <close_stdout@@Base+0x1518>
   1609c:	cmp	sl, #0
   160a0:	beq	164b4 <close_stdout@@Base+0x1430>
   160a4:	ldr	r1, [sp, #40]	; 0x28
   160a8:	mov	r0, #1
   160ac:	ldr	r2, [pc, #1296]	; 165c4 <close_stdout@@Base+0x1540>
   160b0:	mov	r3, #34	; 0x22
   160b4:	str	r0, [sp, #24]
   160b8:	mov	r9, r0
   160bc:	add	r2, pc, r2
   160c0:	str	r0, [sp, #28]
   160c4:	strb	r3, [r1]
   160c8:	str	r2, [sp, #52]	; 0x34
   160cc:	b	15978 <close_stdout@@Base+0x8f4>
   160d0:	ldr	r3, [pc, #1264]	; 165c8 <close_stdout@@Base+0x1544>
   160d4:	mov	r2, #1
   160d8:	mov	r0, #3
   160dc:	str	r2, [sp, #36]	; 0x24
   160e0:	add	r3, pc, r3
   160e4:	str	r2, [sp, #24]
   160e8:	str	r3, [sp, #52]	; 0x34
   160ec:	mov	r9, #0
   160f0:	str	r2, [sp, #28]
   160f4:	str	r0, [sp, #160]	; 0xa0
   160f8:	b	15978 <close_stdout@@Base+0x8f4>
   160fc:	mov	r0, #0
   16100:	mov	r1, #1
   16104:	str	r0, [sp, #36]	; 0x24
   16108:	mov	r9, r0
   1610c:	str	r1, [sp, #24]
   16110:	str	r0, [sp, #28]
   16114:	str	r0, [sp, #52]	; 0x34
   16118:	b	15978 <close_stdout@@Base+0x8f4>
   1611c:	ldr	r3, [sp, #160]	; 0xa0
   16120:	cmp	r3, #8
   16124:	beq	16150 <close_stdout@@Base+0x10cc>
   16128:	ldr	r0, [pc, #1180]	; 165cc <close_stdout@@Base+0x1548>
   1612c:	mov	r1, r3
   16130:	add	r0, pc, r0
   16134:	bl	15760 <close_stdout@@Base+0x6dc>
   16138:	ldr	r1, [sp, #160]	; 0xa0
   1613c:	str	r0, [sp, #72]	; 0x48
   16140:	ldr	r0, [pc, #1160]	; 165d0 <close_stdout@@Base+0x154c>
   16144:	add	r0, pc, r0
   16148:	bl	15760 <close_stdout@@Base+0x6dc>
   1614c:	str	r0, [sp, #68]	; 0x44
   16150:	ldr	r0, [sp, #36]	; 0x24
   16154:	cmp	r0, #0
   16158:	movne	r9, #0
   1615c:	bne	16194 <close_stdout@@Base+0x1110>
   16160:	ldr	r1, [sp, #72]	; 0x48
   16164:	ldrb	r3, [r1]
   16168:	cmp	r3, #0
   1616c:	beq	1656c <close_stdout@@Base+0x14e8>
   16170:	mov	r2, r1
   16174:	ldr	r1, [sp, #40]	; 0x28
   16178:	mov	r9, r0
   1617c:	cmp	r9, sl
   16180:	strbcc	r3, [r1, r9]
   16184:	ldrb	r3, [r2, #1]!
   16188:	add	r9, r9, #1
   1618c:	cmp	r3, #0
   16190:	bne	1617c <close_stdout@@Base+0x10f8>
   16194:	ldr	r0, [sp, #68]	; 0x44
   16198:	str	r0, [sp, #52]	; 0x34
   1619c:	bl	11918 <strlen@plt>
   161a0:	mov	r2, #1
   161a4:	str	r2, [sp, #24]
   161a8:	str	r0, [sp, #28]
   161ac:	b	15978 <close_stdout@@Base+0x8f4>
   161b0:	ldr	r3, [pc, #1052]	; 165d4 <close_stdout@@Base+0x1550>
   161b4:	mov	r2, #0
   161b8:	mov	r1, #1
   161bc:	mov	r0, #2
   161c0:	add	r3, pc, r3
   161c4:	str	r1, [sp, #36]	; 0x24
   161c8:	str	r2, [sp, #24]
   161cc:	mov	r9, r2
   161d0:	str	r1, [sp, #28]
   161d4:	str	r3, [sp, #52]	; 0x34
   161d8:	str	r0, [sp, #160]	; 0xa0
   161dc:	b	15978 <close_stdout@@Base+0x8f4>
   161e0:	ldr	r3, [sp, #36]	; 0x24
   161e4:	cmp	r3, #0
   161e8:	bne	16578 <close_stdout@@Base+0x14f4>
   161ec:	cmp	sl, #0
   161f0:	beq	164d4 <close_stdout@@Base+0x1450>
   161f4:	ldr	r1, [sp, #40]	; 0x28
   161f8:	mov	r3, #39	; 0x27
   161fc:	ldr	r2, [sp, #36]	; 0x24
   16200:	mov	r0, #1
   16204:	mov	r9, r0
   16208:	str	r0, [sp, #28]
   1620c:	strb	r3, [r1]
   16210:	ldr	r3, [pc, #960]	; 165d8 <close_stdout@@Base+0x1554>
   16214:	str	r2, [sp, #24]
   16218:	add	r3, pc, r3
   1621c:	str	r3, [sp, #52]	; 0x34
   16220:	b	15978 <close_stdout@@Base+0x8f4>
   16224:	ldr	r2, [sp, #28]
   16228:	cmp	r2, #1
   1622c:	add	r4, fp, r2
   16230:	movls	r3, #0
   16234:	movhi	r3, #1
   16238:	cmn	r8, #1
   1623c:	movne	r3, #0
   16240:	cmp	r3, #0
   16244:	beq	16254 <close_stdout@@Base+0x11d0>
   16248:	ldr	r0, [sp, #32]
   1624c:	bl	11918 <strlen@plt>
   16250:	mov	r8, r0
   16254:	cmp	r8, r4
   16258:	ldrcc	r3, [sp, #32]
   1625c:	movcc	r6, #0
   16260:	addcc	r5, r3, fp
   16264:	bcc	159d4 <close_stdout@@Base+0x950>
   16268:	ldr	r0, [sp, #32]
   1626c:	ldr	r1, [sp, #52]	; 0x34
   16270:	add	r5, r0, fp
   16274:	ldr	r2, [sp, #28]
   16278:	mov	r0, r5
   1627c:	bl	11780 <memcmp@plt>
   16280:	cmp	r0, #0
   16284:	bne	1629c <close_stdout@@Base+0x1218>
   16288:	ldr	r1, [sp, #36]	; 0x24
   1628c:	cmp	r1, #0
   16290:	bne	15df4 <close_stdout@@Base+0xd70>
   16294:	mov	r6, #1
   16298:	b	159d4 <close_stdout@@Base+0x950>
   1629c:	mov	r6, #0
   162a0:	b	159d4 <close_stdout@@Base+0x950>
   162a4:	add	r7, sp, #108	; 0x6c
   162a8:	cmn	r8, #1
   162ac:	mov	r3, #0
   162b0:	str	r3, [sp, #108]	; 0x6c
   162b4:	str	r3, [r7, #4]
   162b8:	beq	164a4 <close_stdout@@Base+0x1420>
   162bc:	mov	r1, #0
   162c0:	ldr	r0, [sp, #32]
   162c4:	mov	ip, #1
   162c8:	str	r9, [sp, #88]	; 0x58
   162cc:	str	r6, [sp, #96]	; 0x60
   162d0:	mov	r9, r1
   162d4:	str	r5, [sp, #100]	; 0x64
   162d8:	mov	r6, ip
   162dc:	mov	r5, r7
   162e0:	add	r3, sp, #104	; 0x68
   162e4:	sub	r0, r0, #1
   162e8:	str	r3, [sp, #80]	; 0x50
   162ec:	str	r0, [sp, #84]	; 0x54
   162f0:	str	r1, [sp, #60]	; 0x3c
   162f4:	str	r4, [sp, #92]	; 0x5c
   162f8:	ldr	r2, [sp, #32]
   162fc:	add	r7, r9, fp
   16300:	add	r0, sp, #104	; 0x68
   16304:	mov	r3, r5
   16308:	add	r4, r2, r7
   1630c:	rsb	r2, r7, r8
   16310:	mov	r1, r4
   16314:	bl	11834 <mbrtowc@plt>
   16318:	subs	r2, r0, #0
   1631c:	beq	16428 <close_stdout@@Base+0x13a4>
   16320:	cmn	r2, #1
   16324:	beq	16550 <close_stdout@@Base+0x14cc>
   16328:	cmn	r2, #2
   1632c:	beq	164f4 <close_stdout@@Base+0x1470>
   16330:	ldr	r3, [sp, #36]	; 0x24
   16334:	ldr	r0, [sp, #160]	; 0xa0
   16338:	cmp	r0, #2
   1633c:	movne	r3, #0
   16340:	andeq	r3, r3, #1
   16344:	cmp	r3, #0
   16348:	beq	16404 <close_stdout@@Base+0x1380>
   1634c:	cmp	r2, #1
   16350:	beq	16404 <close_stdout@@Base+0x1380>
   16354:	ldr	r1, [sp, #84]	; 0x54
   16358:	add	r3, r1, r2
   1635c:	add	r7, r3, r7
   16360:	ldrb	r3, [r4, #1]!
   16364:	sub	r3, r3, #91	; 0x5b
   16368:	cmp	r3, #33	; 0x21
   1636c:	addls	pc, pc, r3, lsl #2
   16370:	b	163fc <close_stdout@@Base+0x1378>
   16374:	b	15df4 <close_stdout@@Base+0xd70>
   16378:	b	15df4 <close_stdout@@Base+0xd70>
   1637c:	b	163fc <close_stdout@@Base+0x1378>
   16380:	b	15df4 <close_stdout@@Base+0xd70>
   16384:	b	163fc <close_stdout@@Base+0x1378>
   16388:	b	15df4 <close_stdout@@Base+0xd70>
   1638c:	b	163fc <close_stdout@@Base+0x1378>
   16390:	b	163fc <close_stdout@@Base+0x1378>
   16394:	b	163fc <close_stdout@@Base+0x1378>
   16398:	b	163fc <close_stdout@@Base+0x1378>
   1639c:	b	163fc <close_stdout@@Base+0x1378>
   163a0:	b	163fc <close_stdout@@Base+0x1378>
   163a4:	b	163fc <close_stdout@@Base+0x1378>
   163a8:	b	163fc <close_stdout@@Base+0x1378>
   163ac:	b	163fc <close_stdout@@Base+0x1378>
   163b0:	b	163fc <close_stdout@@Base+0x1378>
   163b4:	b	163fc <close_stdout@@Base+0x1378>
   163b8:	b	163fc <close_stdout@@Base+0x1378>
   163bc:	b	163fc <close_stdout@@Base+0x1378>
   163c0:	b	163fc <close_stdout@@Base+0x1378>
   163c4:	b	163fc <close_stdout@@Base+0x1378>
   163c8:	b	163fc <close_stdout@@Base+0x1378>
   163cc:	b	163fc <close_stdout@@Base+0x1378>
   163d0:	b	163fc <close_stdout@@Base+0x1378>
   163d4:	b	163fc <close_stdout@@Base+0x1378>
   163d8:	b	163fc <close_stdout@@Base+0x1378>
   163dc:	b	163fc <close_stdout@@Base+0x1378>
   163e0:	b	163fc <close_stdout@@Base+0x1378>
   163e4:	b	163fc <close_stdout@@Base+0x1378>
   163e8:	b	163fc <close_stdout@@Base+0x1378>
   163ec:	b	163fc <close_stdout@@Base+0x1378>
   163f0:	b	163fc <close_stdout@@Base+0x1378>
   163f4:	b	163fc <close_stdout@@Base+0x1378>
   163f8:	b	15df4 <close_stdout@@Base+0xd70>
   163fc:	cmp	r4, r7
   16400:	bne	16360 <close_stdout@@Base+0x12dc>
   16404:	ldr	r0, [sp, #104]	; 0x68
   16408:	add	r9, r9, r2
   1640c:	bl	117d4 <iswprint@plt>
   16410:	cmp	r0, #0
   16414:	mov	r0, r5
   16418:	moveq	r6, #0
   1641c:	bl	11774 <mbsinit@plt>
   16420:	cmp	r0, #0
   16424:	beq	162f8 <close_stdout@@Base+0x1274>
   16428:	mov	ip, r6
   1642c:	eor	r2, ip, #1
   16430:	str	r9, [sp, #60]	; 0x3c
   16434:	ldr	r4, [sp, #92]	; 0x5c
   16438:	uxtb	r2, r2
   1643c:	ldr	r9, [sp, #88]	; 0x58
   16440:	ldr	r6, [sp, #96]	; 0x60
   16444:	ldr	r5, [sp, #100]	; 0x64
   16448:	ldr	r3, [sp, #60]	; 0x3c
   1644c:	cmp	r3, #1
   16450:	bls	15fd4 <close_stdout@@Base+0xf50>
   16454:	ldr	r0, [sp, #24]
   16458:	and	r2, r2, r0
   1645c:	b	15fe0 <close_stdout@@Base+0xf5c>
   16460:	ldr	r2, [sp, #164]	; 0xa4
   16464:	tst	r2, #1
   16468:	addne	fp, fp, #1
   1646c:	bne	1599c <close_stdout@@Base+0x918>
   16470:	b	15cac <close_stdout@@Base+0xc28>
   16474:	ldr	r0, [sp, #36]	; 0x24
   16478:	cmp	r0, #0
   1647c:	beq	15cac <close_stdout@@Base+0xc28>
   16480:	b	15df4 <close_stdout@@Base+0xd70>
   16484:	ldr	r2, [sp, #32]
   16488:	ldrb	r3, [r2, #1]
   1648c:	adds	r3, r3, #0
   16490:	movne	r3, #1
   16494:	b	15dc8 <close_stdout@@Base+0xd44>
   16498:	bl	11ab0 <abort@plt>
   1649c:	ldr	r8, [sp, #60]	; 0x3c
   164a0:	b	15df4 <close_stdout@@Base+0xd70>
   164a4:	ldr	r0, [sp, #32]
   164a8:	bl	11918 <strlen@plt>
   164ac:	mov	r8, r0
   164b0:	b	162bc <close_stdout@@Base+0x1238>
   164b4:	ldr	r2, [pc, #288]	; 165dc <close_stdout@@Base+0x1558>
   164b8:	mov	r1, #1
   164bc:	mov	r9, r1
   164c0:	str	r1, [sp, #24]
   164c4:	add	r2, pc, r2
   164c8:	str	r1, [sp, #28]
   164cc:	str	r2, [sp, #52]	; 0x34
   164d0:	b	15978 <close_stdout@@Base+0x8f4>
   164d4:	ldr	r2, [pc, #260]	; 165e0 <close_stdout@@Base+0x155c>
   164d8:	mov	r3, #1
   164dc:	mov	r9, r3
   164e0:	str	r3, [sp, #28]
   164e4:	add	r2, pc, r2
   164e8:	str	sl, [sp, #24]
   164ec:	str	r2, [sp, #52]	; 0x34
   164f0:	b	15978 <close_stdout@@Base+0x8f4>
   164f4:	cmp	r8, r7
   164f8:	str	r9, [sp, #60]	; 0x3c
   164fc:	mov	ip, r4
   16500:	ldr	r6, [sp, #96]	; 0x60
   16504:	ldr	r9, [sp, #88]	; 0x58
   16508:	ldr	r4, [sp, #92]	; 0x5c
   1650c:	ldr	r5, [sp, #100]	; 0x64
   16510:	bls	16548 <close_stdout@@Base+0x14c4>
   16514:	ldrb	r3, [ip]
   16518:	cmp	r3, #0
   1651c:	beq	16548 <close_stdout@@Base+0x14c4>
   16520:	ldr	r3, [sp, #60]	; 0x3c
   16524:	b	16534 <close_stdout@@Base+0x14b0>
   16528:	ldrb	r2, [r5, r3]
   1652c:	cmp	r2, #0
   16530:	beq	16544 <close_stdout@@Base+0x14c0>
   16534:	add	r3, r3, #1
   16538:	add	r2, fp, r3
   1653c:	cmp	r8, r2
   16540:	bhi	16528 <close_stdout@@Base+0x14a4>
   16544:	str	r3, [sp, #60]	; 0x3c
   16548:	mov	r2, #1
   1654c:	b	16448 <close_stdout@@Base+0x13c4>
   16550:	str	r9, [sp, #60]	; 0x3c
   16554:	mov	r2, #1
   16558:	ldr	r4, [sp, #92]	; 0x5c
   1655c:	ldr	r6, [sp, #96]	; 0x60
   16560:	ldr	r9, [sp, #88]	; 0x58
   16564:	ldr	r5, [sp, #100]	; 0x64
   16568:	b	16448 <close_stdout@@Base+0x13c4>
   1656c:	ldr	r9, [sp, #36]	; 0x24
   16570:	b	16194 <close_stdout@@Base+0x1110>
   16574:	bl	11798 <__stack_chk_fail@plt>
   16578:	ldr	r1, [pc, #100]	; 165e4 <close_stdout@@Base+0x1560>
   1657c:	mov	r3, #0
   16580:	mov	r0, #1
   16584:	str	r3, [sp, #24]
   16588:	add	r1, pc, r1
   1658c:	str	r0, [sp, #28]
   16590:	mov	r9, r3
   16594:	str	r1, [sp, #52]	; 0x34
   16598:	b	15978 <close_stdout@@Base+0x8f4>
   1659c:	ldr	r0, [pc, #68]	; 165e8 <close_stdout@@Base+0x1564>
   165a0:	mov	r3, #1
   165a4:	mov	r9, #0
   165a8:	str	r3, [sp, #24]
   165ac:	add	r0, pc, r0
   165b0:	str	r3, [sp, #28]
   165b4:	str	r0, [sp, #52]	; 0x34
   165b8:	b	15978 <close_stdout@@Base+0x8f4>
   165bc:	andeq	sl, r1, r8, lsl r7
   165c0:	andeq	r0, r0, ip, ror r1
   165c4:	andeq	r8, r0, r0, asr r9
   165c8:	andeq	r8, r0, ip, lsr #18
   165cc:	andeq	r8, r0, r8, ror #17
   165d0:	andeq	r8, r0, r4, asr #17
   165d4:	andeq	r8, r0, r8, asr #16
   165d8:	strdeq	r8, [r0], -r0
   165dc:	andeq	r8, r0, r8, asr #10
   165e0:	andeq	r8, r0, r4, lsr #10
   165e4:	andeq	r8, r0, r0, lsl #9
   165e8:	andeq	r8, r0, r0, ror #8
   165ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   165f0:	sub	sp, sp, #44	; 0x2c
   165f4:	mov	r6, r0
   165f8:	mov	r9, r1
   165fc:	mov	sl, r2
   16600:	mov	r4, r3
   16604:	bl	11960 <__errno_location@plt>
   16608:	ldr	fp, [pc, #412]	; 167ac <close_stdout@@Base+0x1728>
   1660c:	cmp	r6, #0
   16610:	add	fp, pc, fp
   16614:	ldr	r5, [fp]
   16618:	ldr	r1, [r0]
   1661c:	mov	r8, r0
   16620:	str	r1, [sp, #36]	; 0x24
   16624:	blt	167a4 <close_stdout@@Base+0x1720>
   16628:	ldr	r3, [pc, #384]	; 167b0 <close_stdout@@Base+0x172c>
   1662c:	add	r3, pc, r3
   16630:	ldr	r3, [r3]
   16634:	cmp	r6, r3
   16638:	bcc	1668c <close_stdout@@Base+0x1608>
   1663c:	add	r7, r6, #1
   16640:	cmn	r7, #-536870911	; 0xe0000001
   16644:	bhi	167a8 <close_stdout@@Base+0x1724>
   16648:	add	r3, fp, #4
   1664c:	cmp	r5, r3
   16650:	beq	1677c <close_stdout@@Base+0x16f8>
   16654:	mov	r0, r5
   16658:	lsl	r1, r7, #3
   1665c:	bl	18d98 <close_stdout@@Base+0x3d14>
   16660:	mov	r5, r0
   16664:	str	r0, [fp]
   16668:	ldr	fp, [pc, #324]	; 167b4 <close_stdout@@Base+0x1730>
   1666c:	mov	r1, #0
   16670:	add	fp, pc, fp
   16674:	ldr	r0, [fp]
   16678:	rsb	r2, r0, r7
   1667c:	add	r0, r5, r0, lsl #3
   16680:	lsl	r2, r2, #3
   16684:	bl	11984 <memset@plt>
   16688:	str	r7, [fp]
   1668c:	add	r2, r4, #8
   16690:	str	r2, [sp, #32]
   16694:	ldr	r1, [r4]
   16698:	add	fp, r5, r6, lsl #3
   1669c:	ldr	lr, [sp, #32]
   166a0:	mov	r2, r9
   166a4:	ldr	r3, [r4, #4]
   166a8:	ldr	ip, [r5, r6, lsl #3]
   166ac:	ldr	r7, [fp, #4]
   166b0:	orr	r3, r3, #1
   166b4:	str	r1, [sp]
   166b8:	str	r3, [sp, #4]
   166bc:	mov	r1, ip
   166c0:	str	lr, [sp, #8]
   166c4:	mov	r0, r7
   166c8:	ldr	lr, [r4, #40]	; 0x28
   166cc:	str	r3, [sp, #28]
   166d0:	mov	r3, sl
   166d4:	str	lr, [sp, #12]
   166d8:	ldr	lr, [r4, #44]	; 0x2c
   166dc:	str	ip, [sp, #24]
   166e0:	str	lr, [sp, #16]
   166e4:	bl	158c4 <close_stdout@@Base+0x840>
   166e8:	ldr	ip, [sp, #24]
   166ec:	cmp	ip, r0
   166f0:	bhi	16768 <close_stdout@@Base+0x16e4>
   166f4:	ldr	r3, [pc, #188]	; 167b8 <close_stdout@@Base+0x1734>
   166f8:	add	r1, r0, #1
   166fc:	str	r1, [r5, r6, lsl #3]
   16700:	add	r3, pc, r3
   16704:	cmp	r7, r3
   16708:	beq	1671c <close_stdout@@Base+0x1698>
   1670c:	mov	r0, r7
   16710:	str	r1, [sp, #24]
   16714:	bl	11750 <free@plt>
   16718:	ldr	r1, [sp, #24]
   1671c:	mov	r0, r1
   16720:	str	r1, [sp, #24]
   16724:	bl	18d40 <close_stdout@@Base+0x3cbc>
   16728:	ldr	r3, [sp, #28]
   1672c:	ldr	lr, [sp, #32]
   16730:	mov	r2, r9
   16734:	str	r0, [fp, #4]
   16738:	mov	r7, r0
   1673c:	ldr	ip, [r4]
   16740:	str	r3, [sp, #4]
   16744:	mov	r3, sl
   16748:	str	lr, [sp, #8]
   1674c:	str	ip, [sp]
   16750:	ldr	ip, [r4, #40]	; 0x28
   16754:	ldr	r1, [sp, #24]
   16758:	str	ip, [sp, #12]
   1675c:	ldr	ip, [r4, #44]	; 0x2c
   16760:	str	ip, [sp, #16]
   16764:	bl	158c4 <close_stdout@@Base+0x840>
   16768:	ldr	r1, [sp, #36]	; 0x24
   1676c:	mov	r0, r7
   16770:	str	r1, [r8]
   16774:	add	sp, sp, #44	; 0x2c
   16778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1677c:	lsl	r1, r7, #3
   16780:	mov	r0, #0
   16784:	str	r3, [sp, #24]
   16788:	bl	18d98 <close_stdout@@Base+0x3d14>
   1678c:	ldr	r3, [sp, #24]
   16790:	mov	r5, r0
   16794:	ldm	r3, {r0, r1}
   16798:	str	r5, [fp]
   1679c:	stm	r5, {r0, r1}
   167a0:	b	16668 <close_stdout@@Base+0x15e4>
   167a4:	bl	11ab0 <abort@plt>
   167a8:	bl	18f54 <close_stdout@@Base+0x3ed0>
   167ac:	andeq	r9, r1, r0, ror #23
   167b0:	muleq	r1, r0, fp
   167b4:	andeq	r9, r1, ip, asr #22
   167b8:	andeq	r9, r1, r0, ror fp
   167bc:	push	{r4, r5, r6, lr}
   167c0:	mov	r5, r0
   167c4:	bl	11960 <__errno_location@plt>
   167c8:	cmp	r5, #0
   167cc:	mov	r1, #48	; 0x30
   167d0:	mov	r4, r0
   167d4:	ldr	r0, [pc, #24]	; 167f4 <close_stdout@@Base+0x1770>
   167d8:	ldr	r6, [r4]
   167dc:	add	r0, pc, r0
   167e0:	add	r0, r0, #256	; 0x100
   167e4:	movne	r0, r5
   167e8:	bl	18f14 <close_stdout@@Base+0x3e90>
   167ec:	str	r6, [r4]
   167f0:	pop	{r4, r5, r6, pc}
   167f4:	muleq	r1, r4, sl
   167f8:	cmp	r0, #0
   167fc:	beq	16808 <close_stdout@@Base+0x1784>
   16800:	ldr	r0, [r0]
   16804:	bx	lr
   16808:	ldr	r0, [pc, #12]	; 1681c <close_stdout@@Base+0x1798>
   1680c:	add	r0, pc, r0
   16810:	add	r0, r0, #256	; 0x100
   16814:	ldr	r0, [r0]
   16818:	bx	lr
   1681c:	andeq	r9, r1, r4, ror #20
   16820:	cmp	r0, #0
   16824:	beq	16830 <close_stdout@@Base+0x17ac>
   16828:	str	r1, [r0]
   1682c:	bx	lr
   16830:	ldr	r0, [pc, #12]	; 16844 <close_stdout@@Base+0x17c0>
   16834:	add	r0, pc, r0
   16838:	add	r0, r0, #256	; 0x100
   1683c:	str	r1, [r0]
   16840:	bx	lr
   16844:	andeq	r9, r1, ip, lsr sl
   16848:	cmp	r0, #0
   1684c:	movne	r3, r0
   16850:	beq	16880 <close_stdout@@Base+0x17fc>
   16854:	lsr	ip, r1, #5
   16858:	and	r1, r1, #31
   1685c:	add	r3, r3, ip, lsl #2
   16860:	ldr	ip, [r3, #8]
   16864:	lsr	r0, ip, r1
   16868:	eor	r2, r0, r2
   1686c:	and	r0, r0, #1
   16870:	and	r2, r2, #1
   16874:	eor	ip, ip, r2, lsl r1
   16878:	str	ip, [r3, #8]
   1687c:	bx	lr
   16880:	ldr	r3, [pc, #8]	; 16890 <close_stdout@@Base+0x180c>
   16884:	add	r3, pc, r3
   16888:	add	r3, r3, #256	; 0x100
   1688c:	b	16854 <close_stdout@@Base+0x17d0>
   16890:	andeq	r9, r1, ip, ror #19
   16894:	subs	r3, r0, #0
   16898:	beq	168a8 <close_stdout@@Base+0x1824>
   1689c:	ldr	r0, [r3, #4]
   168a0:	str	r1, [r3, #4]
   168a4:	bx	lr
   168a8:	ldr	r3, [pc, #8]	; 168b8 <close_stdout@@Base+0x1834>
   168ac:	add	r3, pc, r3
   168b0:	add	r3, r3, #256	; 0x100
   168b4:	b	1689c <close_stdout@@Base+0x1818>
   168b8:	andeq	r9, r1, r4, asr #19
   168bc:	cmp	r0, #0
   168c0:	push	{r3, lr}
   168c4:	beq	168e8 <close_stdout@@Base+0x1864>
   168c8:	cmp	r2, #0
   168cc:	cmpne	r1, #0
   168d0:	mov	r3, #8
   168d4:	strne	r1, [r0, #40]	; 0x28
   168d8:	str	r3, [r0]
   168dc:	strne	r2, [r0, #44]	; 0x2c
   168e0:	popne	{r3, pc}
   168e4:	bl	11ab0 <abort@plt>
   168e8:	ldr	r0, [pc, #8]	; 168f8 <close_stdout@@Base+0x1874>
   168ec:	add	r0, pc, r0
   168f0:	add	r0, r0, #256	; 0x100
   168f4:	b	168c8 <close_stdout@@Base+0x1844>
   168f8:	andeq	r9, r1, r4, lsl #19
   168fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16900:	sub	sp, sp, #24
   16904:	mov	r7, r0
   16908:	mov	sl, r1
   1690c:	ldr	r4, [sp, #56]	; 0x38
   16910:	mov	r9, r2
   16914:	mov	r8, r3
   16918:	cmp	r4, #0
   1691c:	beq	16970 <close_stdout@@Base+0x18ec>
   16920:	bl	11960 <__errno_location@plt>
   16924:	ldr	r3, [r4]
   16928:	add	lr, r4, #8
   1692c:	mov	r1, sl
   16930:	mov	r2, r9
   16934:	ldr	r6, [r0]
   16938:	mov	r5, r0
   1693c:	str	r3, [sp]
   16940:	mov	r0, r7
   16944:	ldr	ip, [r4, #4]
   16948:	mov	r3, r8
   1694c:	stmib	sp, {ip, lr}
   16950:	ldr	ip, [r4, #40]	; 0x28
   16954:	str	ip, [sp, #12]
   16958:	ldr	ip, [r4, #44]	; 0x2c
   1695c:	str	ip, [sp, #16]
   16960:	bl	158c4 <close_stdout@@Base+0x840>
   16964:	str	r6, [r5]
   16968:	add	sp, sp, #24
   1696c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16970:	ldr	r4, [pc, #8]	; 16980 <close_stdout@@Base+0x18fc>
   16974:	add	r4, pc, r4
   16978:	add	r4, r4, #256	; 0x100
   1697c:	b	16920 <close_stdout@@Base+0x189c>
   16980:	strdeq	r9, [r1], -ip
   16984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16988:	subs	r4, r3, #0
   1698c:	sub	sp, sp, #36	; 0x24
   16990:	mov	r7, r0
   16994:	mov	r6, r1
   16998:	mov	r5, r2
   1699c:	beq	16a58 <close_stdout@@Base+0x19d4>
   169a0:	bl	11960 <__errno_location@plt>
   169a4:	ldr	r3, [r4]
   169a8:	ldr	sl, [r4, #4]
   169ac:	add	r9, r4, #8
   169b0:	mov	r8, r0
   169b4:	mov	r0, #0
   169b8:	ldr	r2, [r8]
   169bc:	cmp	r5, r0
   169c0:	orreq	sl, sl, #1
   169c4:	str	r9, [sp, #8]
   169c8:	mov	r1, r0
   169cc:	stm	sp, {r3, sl}
   169d0:	mov	r3, r6
   169d4:	ldr	ip, [r4, #40]	; 0x28
   169d8:	str	r2, [sp, #28]
   169dc:	mov	r2, r7
   169e0:	str	ip, [sp, #12]
   169e4:	ldr	ip, [r4, #44]	; 0x2c
   169e8:	str	ip, [sp, #16]
   169ec:	bl	158c4 <close_stdout@@Base+0x840>
   169f0:	add	r1, r0, #1
   169f4:	mov	fp, r0
   169f8:	str	r1, [sp, #24]
   169fc:	mov	r0, r1
   16a00:	bl	18d40 <close_stdout@@Base+0x3cbc>
   16a04:	ldr	lr, [r4]
   16a08:	str	sl, [sp, #4]
   16a0c:	mov	r3, r6
   16a10:	str	r9, [sp, #8]
   16a14:	mov	r2, r7
   16a18:	str	lr, [sp]
   16a1c:	ldr	lr, [r4, #40]	; 0x28
   16a20:	ldr	r1, [sp, #24]
   16a24:	str	lr, [sp, #12]
   16a28:	ldr	lr, [r4, #44]	; 0x2c
   16a2c:	str	lr, [sp, #16]
   16a30:	str	r0, [sp, #24]
   16a34:	bl	158c4 <close_stdout@@Base+0x840>
   16a38:	ldr	r3, [sp, #28]
   16a3c:	cmp	r5, #0
   16a40:	str	r3, [r8]
   16a44:	ldr	ip, [sp, #24]
   16a48:	strne	fp, [r5]
   16a4c:	mov	r0, ip
   16a50:	add	sp, sp, #36	; 0x24
   16a54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16a58:	ldr	r4, [pc, #8]	; 16a68 <close_stdout@@Base+0x19e4>
   16a5c:	add	r4, pc, r4
   16a60:	add	r4, r4, #256	; 0x100
   16a64:	b	169a0 <close_stdout@@Base+0x191c>
   16a68:	andeq	r9, r1, r4, lsl r8
   16a6c:	mov	r3, r2
   16a70:	mov	r2, #0
   16a74:	b	16984 <close_stdout@@Base+0x1900>
   16a78:	ldr	r2, [pc, #152]	; 16b18 <close_stdout@@Base+0x1a94>
   16a7c:	push	{r3, r4, r5, r6, r7, lr}
   16a80:	add	r2, pc, r2
   16a84:	ldr	r3, [pc, #144]	; 16b1c <close_stdout@@Base+0x1a98>
   16a88:	ldr	r6, [r2]
   16a8c:	add	r3, pc, r3
   16a90:	cmp	r6, #1
   16a94:	ldr	r7, [r3]
   16a98:	movhi	r4, #1
   16a9c:	movhi	r5, r7
   16aa0:	bls	16abc <close_stdout@@Base+0x1a38>
   16aa4:	ldr	r0, [r5, #12]
   16aa8:	add	r4, r4, #1
   16aac:	bl	11750 <free@plt>
   16ab0:	cmp	r4, r6
   16ab4:	add	r5, r5, #8
   16ab8:	bne	16aa4 <close_stdout@@Base+0x1a20>
   16abc:	ldr	r4, [pc, #92]	; 16b20 <close_stdout@@Base+0x1a9c>
   16ac0:	ldr	r0, [r7, #4]
   16ac4:	add	r4, pc, r4
   16ac8:	cmp	r0, r4
   16acc:	beq	16ae4 <close_stdout@@Base+0x1a60>
   16ad0:	bl	11750 <free@plt>
   16ad4:	ldr	r3, [pc, #72]	; 16b24 <close_stdout@@Base+0x1aa0>
   16ad8:	mov	r2, #256	; 0x100
   16adc:	add	r3, pc, r3
   16ae0:	stmib	r3, {r2, r4}
   16ae4:	ldr	r4, [pc, #60]	; 16b28 <close_stdout@@Base+0x1aa4>
   16ae8:	add	r4, pc, r4
   16aec:	add	r5, r4, #4
   16af0:	cmp	r7, r5
   16af4:	beq	16b04 <close_stdout@@Base+0x1a80>
   16af8:	mov	r0, r7
   16afc:	bl	11750 <free@plt>
   16b00:	str	r5, [r4]
   16b04:	ldr	r3, [pc, #32]	; 16b2c <close_stdout@@Base+0x1aa8>
   16b08:	mov	r2, #1
   16b0c:	add	r3, pc, r3
   16b10:	str	r2, [r3]
   16b14:	pop	{r3, r4, r5, r6, r7, pc}
   16b18:	andeq	r9, r1, ip, lsr r7
   16b1c:	andeq	r9, r1, r4, ror #14
   16b20:	andeq	r9, r1, ip, lsr #15
   16b24:	andeq	r9, r1, r4, lsl r7
   16b28:	andeq	r9, r1, r8, lsl #14
   16b2c:			; <UNDEFINED> instruction: 0x000196b0
   16b30:	ldr	r3, [pc, #12]	; 16b44 <close_stdout@@Base+0x1ac0>
   16b34:	mvn	r2, #0
   16b38:	add	r3, pc, r3
   16b3c:	add	r3, r3, #256	; 0x100
   16b40:	b	165ec <close_stdout@@Base+0x1568>
   16b44:	andeq	r9, r1, r8, lsr r7
   16b48:	ldr	r3, [pc, #8]	; 16b58 <close_stdout@@Base+0x1ad4>
   16b4c:	add	r3, pc, r3
   16b50:	add	r3, r3, #256	; 0x100
   16b54:	b	165ec <close_stdout@@Base+0x1568>
   16b58:	andeq	r9, r1, r4, lsr #14
   16b5c:	mov	r1, r0
   16b60:	mov	r0, #0
   16b64:	b	16b30 <close_stdout@@Base+0x1aac>
   16b68:	mov	r2, r1
   16b6c:	mov	r1, r0
   16b70:	mov	r0, #0
   16b74:	b	16b48 <close_stdout@@Base+0x1ac4>
   16b78:	ldr	r3, [pc, #92]	; 16bdc <close_stdout@@Base+0x1b58>
   16b7c:	ldr	ip, [pc, #92]	; 16be0 <close_stdout@@Base+0x1b5c>
   16b80:	add	r3, pc, r3
   16b84:	push	{r4, r5, r6, r7, lr}
   16b88:	sub	sp, sp, #60	; 0x3c
   16b8c:	ldr	r4, [r3, ip]
   16b90:	add	r5, sp, #4
   16b94:	mov	r7, r2
   16b98:	mov	r6, r0
   16b9c:	mov	r0, r5
   16ba0:	ldr	r3, [r4]
   16ba4:	str	r3, [sp, #52]	; 0x34
   16ba8:	bl	1570c <close_stdout@@Base+0x688>
   16bac:	mov	r3, r5
   16bb0:	mvn	r2, #0
   16bb4:	mov	r0, r6
   16bb8:	mov	r1, r7
   16bbc:	bl	165ec <close_stdout@@Base+0x1568>
   16bc0:	ldr	r2, [sp, #52]	; 0x34
   16bc4:	ldr	r3, [r4]
   16bc8:	cmp	r2, r3
   16bcc:	bne	16bd8 <close_stdout@@Base+0x1b54>
   16bd0:	add	sp, sp, #60	; 0x3c
   16bd4:	pop	{r4, r5, r6, r7, pc}
   16bd8:	bl	11798 <__stack_chk_fail@plt>
   16bdc:	andeq	r9, r1, r8, ror r4
   16be0:	andeq	r0, r0, ip, ror r1
   16be4:	ldr	ip, [pc, #96]	; 16c4c <close_stdout@@Base+0x1bc8>
   16be8:	push	{r4, r5, r6, r7, r8, lr}
   16bec:	add	ip, pc, ip
   16bf0:	ldr	lr, [pc, #88]	; 16c50 <close_stdout@@Base+0x1bcc>
   16bf4:	sub	sp, sp, #56	; 0x38
   16bf8:	mov	r8, r3
   16bfc:	add	r5, sp, #4
   16c00:	mov	r7, r2
   16c04:	mov	r6, r0
   16c08:	ldr	r4, [ip, lr]
   16c0c:	mov	r0, r5
   16c10:	ldr	r3, [r4]
   16c14:	str	r3, [sp, #52]	; 0x34
   16c18:	bl	1570c <close_stdout@@Base+0x688>
   16c1c:	mov	r2, r8
   16c20:	mov	r3, r5
   16c24:	mov	r0, r6
   16c28:	mov	r1, r7
   16c2c:	bl	165ec <close_stdout@@Base+0x1568>
   16c30:	ldr	r2, [sp, #52]	; 0x34
   16c34:	ldr	r3, [r4]
   16c38:	cmp	r2, r3
   16c3c:	bne	16c48 <close_stdout@@Base+0x1bc4>
   16c40:	add	sp, sp, #56	; 0x38
   16c44:	pop	{r4, r5, r6, r7, r8, pc}
   16c48:	bl	11798 <__stack_chk_fail@plt>
   16c4c:	andeq	r9, r1, ip, lsl #8
   16c50:	andeq	r0, r0, ip, ror r1
   16c54:	mov	r2, r1
   16c58:	mov	r1, r0
   16c5c:	mov	r0, #0
   16c60:	b	16b78 <close_stdout@@Base+0x1af4>
   16c64:	mov	ip, r1
   16c68:	mov	r3, r2
   16c6c:	mov	r1, r0
   16c70:	mov	r2, ip
   16c74:	mov	r0, #0
   16c78:	b	16be4 <close_stdout@@Base+0x1b60>
   16c7c:	push	{r4, r5, r6, r7, r8, lr}
   16c80:	mov	r5, r2
   16c84:	ldr	lr, [pc, #136]	; 16d14 <close_stdout@@Base+0x1c90>
   16c88:	mov	r7, r0
   16c8c:	mov	r6, r1
   16c90:	ldr	r4, [pc, #128]	; 16d18 <close_stdout@@Base+0x1c94>
   16c94:	add	lr, pc, lr
   16c98:	sub	sp, sp, #56	; 0x38
   16c9c:	add	lr, lr, #256	; 0x100
   16ca0:	ldr	r8, [pc, #116]	; 16d1c <close_stdout@@Base+0x1c98>
   16ca4:	add	r4, pc, r4
   16ca8:	add	ip, sp, #4
   16cac:	ldm	lr!, {r0, r1, r2, r3}
   16cb0:	ldr	r4, [r4, r8]
   16cb4:	stmia	ip!, {r0, r1, r2, r3}
   16cb8:	ldm	lr!, {r0, r1, r2, r3}
   16cbc:	ldr	r8, [r4]
   16cc0:	stmia	ip!, {r0, r1, r2, r3}
   16cc4:	ldm	lr, {r0, r1, r2, r3}
   16cc8:	str	r8, [sp, #52]	; 0x34
   16ccc:	stm	ip, {r0, r1, r2, r3}
   16cd0:	mov	r1, r5
   16cd4:	add	r5, sp, #4
   16cd8:	mov	r2, #1
   16cdc:	mov	r0, r5
   16ce0:	bl	16848 <close_stdout@@Base+0x17c4>
   16ce4:	mov	r2, r6
   16ce8:	mov	r3, r5
   16cec:	mov	r1, r7
   16cf0:	mov	r0, #0
   16cf4:	bl	165ec <close_stdout@@Base+0x1568>
   16cf8:	ldr	r2, [sp, #52]	; 0x34
   16cfc:	ldr	r3, [r4]
   16d00:	cmp	r2, r3
   16d04:	bne	16d10 <close_stdout@@Base+0x1c8c>
   16d08:	add	sp, sp, #56	; 0x38
   16d0c:	pop	{r4, r5, r6, r7, r8, pc}
   16d10:	bl	11798 <__stack_chk_fail@plt>
   16d14:	ldrdeq	r9, [r1], -ip
   16d18:	andeq	r9, r1, r4, asr r3
   16d1c:	andeq	r0, r0, ip, ror r1
   16d20:	mov	r2, r1
   16d24:	mvn	r1, #0
   16d28:	b	16c7c <close_stdout@@Base+0x1bf8>
   16d2c:	mov	r1, #58	; 0x3a
   16d30:	b	16d20 <close_stdout@@Base+0x1c9c>
   16d34:	mov	r2, #58	; 0x3a
   16d38:	b	16c7c <close_stdout@@Base+0x1bf8>
   16d3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16d40:	mov	r5, r2
   16d44:	ldr	lr, [pc, #144]	; 16ddc <close_stdout@@Base+0x1d58>
   16d48:	mov	r8, r0
   16d4c:	mov	r9, r1
   16d50:	mov	r7, r3
   16d54:	add	lr, pc, lr
   16d58:	ldr	r4, [pc, #128]	; 16de0 <close_stdout@@Base+0x1d5c>
   16d5c:	add	lr, lr, #256	; 0x100
   16d60:	sub	sp, sp, #56	; 0x38
   16d64:	ldr	sl, [pc, #120]	; 16de4 <close_stdout@@Base+0x1d60>
   16d68:	add	r4, pc, r4
   16d6c:	ldm	lr!, {r0, r1, r2, r3}
   16d70:	add	ip, sp, #4
   16d74:	ldr	r4, [r4, sl]
   16d78:	ldr	r6, [sp, #88]	; 0x58
   16d7c:	stmia	ip!, {r0, r1, r2, r3}
   16d80:	ldm	lr!, {r0, r1, r2, r3}
   16d84:	ldr	sl, [r4]
   16d88:	stmia	ip!, {r0, r1, r2, r3}
   16d8c:	ldm	lr, {r0, r1, r2, r3}
   16d90:	str	sl, [sp, #52]	; 0x34
   16d94:	stm	ip, {r0, r1, r2, r3}
   16d98:	mov	r2, r5
   16d9c:	add	r5, sp, #4
   16da0:	mov	r1, r9
   16da4:	mov	r0, r5
   16da8:	bl	168bc <close_stdout@@Base+0x1838>
   16dac:	mov	r2, r6
   16db0:	mov	r3, r5
   16db4:	mov	r0, r8
   16db8:	mov	r1, r7
   16dbc:	bl	165ec <close_stdout@@Base+0x1568>
   16dc0:	ldr	r2, [sp, #52]	; 0x34
   16dc4:	ldr	r3, [r4]
   16dc8:	cmp	r2, r3
   16dcc:	bne	16dd8 <close_stdout@@Base+0x1d54>
   16dd0:	add	sp, sp, #56	; 0x38
   16dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16dd8:	bl	11798 <__stack_chk_fail@plt>
   16ddc:	andeq	r9, r1, ip, lsl r5
   16de0:	muleq	r1, r0, r2
   16de4:	andeq	r0, r0, ip, ror r1
   16de8:	push	{lr}		; (str lr, [sp, #-4]!)
   16dec:	sub	sp, sp, #12
   16df0:	mvn	ip, #0
   16df4:	str	ip, [sp]
   16df8:	bl	16d3c <close_stdout@@Base+0x1cb8>
   16dfc:	add	sp, sp, #12
   16e00:	pop	{pc}		; (ldr pc, [sp], #4)
   16e04:	mov	ip, r1
   16e08:	mov	r3, r2
   16e0c:	mov	r1, r0
   16e10:	mov	r2, ip
   16e14:	mov	r0, #0
   16e18:	b	16de8 <close_stdout@@Base+0x1d64>
   16e1c:	push	{lr}		; (str lr, [sp, #-4]!)
   16e20:	sub	sp, sp, #12
   16e24:	mov	lr, r1
   16e28:	mov	ip, r2
   16e2c:	mov	r1, r0
   16e30:	str	r3, [sp]
   16e34:	mov	r2, lr
   16e38:	mov	r3, ip
   16e3c:	mov	r0, #0
   16e40:	bl	16d3c <close_stdout@@Base+0x1cb8>
   16e44:	add	sp, sp, #12
   16e48:	pop	{pc}		; (ldr pc, [sp], #4)
   16e4c:	ldr	r3, [pc, #12]	; 16e60 <close_stdout@@Base+0x1ddc>
   16e50:	ldr	ip, [pc, #12]	; 16e64 <close_stdout@@Base+0x1de0>
   16e54:	add	r3, pc, r3
   16e58:	ldr	r3, [r3, ip]
   16e5c:	b	165ec <close_stdout@@Base+0x1568>
   16e60:	andeq	r9, r1, r4, lsr #3
   16e64:	andeq	r0, r0, r8, ror r1
   16e68:	mov	r2, r1
   16e6c:	mov	r1, r0
   16e70:	mov	r0, #0
   16e74:	b	16e4c <close_stdout@@Base+0x1dc8>
   16e78:	mvn	r2, #0
   16e7c:	b	16e4c <close_stdout@@Base+0x1dc8>
   16e80:	mov	r1, r0
   16e84:	mov	r0, #0
   16e88:	b	16e78 <close_stdout@@Base+0x1df4>
   16e8c:	push	{r3, r4, r5, lr}
   16e90:	mov	r4, #0
   16e94:	mov	r5, r0
   16e98:	str	r4, [r0, #4]
   16e9c:	ldr	r0, [pc, #68]	; 16ee8 <close_stdout@@Base+0x1e64>
   16ea0:	mov	r1, r4
   16ea4:	add	r0, pc, r0
   16ea8:	bl	19f08 <close_stdout@@Base+0x4e84>
   16eac:	cmp	r0, r4
   16eb0:	str	r0, [r5]
   16eb4:	blt	16ec8 <close_stdout@@Base+0x1e44>
   16eb8:	mov	r1, #1
   16ebc:	bl	19e18 <close_stdout@@Base+0x4d94>
   16ec0:	mov	r0, r4
   16ec4:	pop	{r3, r4, r5, pc}
   16ec8:	mov	r0, r4
   16ecc:	mov	r1, r4
   16ed0:	bl	118f4 <getcwd@plt>
   16ed4:	str	r0, [r5, #4]
   16ed8:	cmp	r0, r4
   16edc:	movne	r0, #0
   16ee0:	mvneq	r0, #0
   16ee4:	pop	{r3, r4, r5, pc}
   16ee8:	andeq	r7, r0, r8, lsr #17
   16eec:	ldr	r3, [r0]
   16ef0:	cmp	r3, #0
   16ef4:	blt	16f00 <close_stdout@@Base+0x1e7c>
   16ef8:	mov	r0, r3
   16efc:	b	11a50 <fchdir@plt>
   16f00:	ldr	r0, [r0, #4]
   16f04:	b	190c4 <close_stdout@@Base+0x4040>
   16f08:	push	{r4, lr}
   16f0c:	mov	r4, r0
   16f10:	ldr	r0, [r0]
   16f14:	cmp	r0, #0
   16f18:	blt	16f20 <close_stdout@@Base+0x1e9c>
   16f1c:	bl	11abc <close@plt>
   16f20:	ldr	r0, [r4, #4]
   16f24:	pop	{r4, lr}
   16f28:	b	11750 <free@plt>
   16f2c:	cmp	r2, #0
   16f30:	push	{r3, r4, r6, r7, r8, lr}
   16f34:	mov	r6, r2
   16f38:	mov	r7, r0
   16f3c:	mov	r8, r1
   16f40:	sub	r4, r2, #1
   16f44:	beq	16f70 <close_stdout@@Base+0x1eec>
   16f48:	bl	118b8 <__ctype_tolower_loc@plt>
   16f4c:	add	r1, r8, r6
   16f50:	add	r2, r7, r6
   16f54:	ldrb	ip, [r1, #-1]!
   16f58:	sub	r4, r4, #1
   16f5c:	ldr	r3, [r0]
   16f60:	cmn	r4, #1
   16f64:	ldr	r3, [r3, ip, lsl #2]
   16f68:	strb	r3, [r2, #-1]!
   16f6c:	bne	16f54 <close_stdout@@Base+0x1ed0>
   16f70:	mov	r0, r7
   16f74:	pop	{r3, r4, r6, r7, r8, pc}
   16f78:	cmp	r2, #0
   16f7c:	push	{r3, r4, r6, r7, r8, lr}
   16f80:	mov	r6, r2
   16f84:	mov	r7, r0
   16f88:	mov	r8, r1
   16f8c:	sub	r4, r2, #1
   16f90:	beq	16fbc <close_stdout@@Base+0x1f38>
   16f94:	bl	118c4 <__ctype_toupper_loc@plt>
   16f98:	add	r1, r8, r6
   16f9c:	add	r2, r7, r6
   16fa0:	ldrb	ip, [r1, #-1]!
   16fa4:	sub	r4, r4, #1
   16fa8:	ldr	r3, [r0]
   16fac:	cmn	r4, #1
   16fb0:	ldr	r3, [r3, ip, lsl #2]
   16fb4:	strb	r3, [r2, #-1]!
   16fb8:	bne	16fa0 <close_stdout@@Base+0x1f1c>
   16fbc:	mov	r0, r7
   16fc0:	pop	{r3, r4, r6, r7, r8, pc}
   16fc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fc8:	sub	sp, sp, #1168	; 0x490
   16fcc:	sub	sp, sp, #12
   16fd0:	ldr	ip, [pc, #4080]	; 17fc8 <close_stdout@@Base+0x2f44>
   16fd4:	mov	r4, r3
   16fd8:	mov	r8, r1
   16fdc:	ldr	r6, [sp, #1216]	; 0x4c0
   16fe0:	add	ip, pc, ip
   16fe4:	str	r0, [sp, #48]	; 0x30
   16fe8:	ldr	r0, [pc, #4060]	; 17fcc <close_stdout@@Base+0x2f48>
   16fec:	mov	r3, ip
   16ff0:	str	r6, [sp, #40]	; 0x28
   16ff4:	str	r2, [sp, #28]
   16ff8:	ldr	r0, [ip, r0]
   16ffc:	ldr	ip, [r6, #8]
   17000:	ldr	r6, [r6, #40]	; 0x28
   17004:	ldr	r3, [r0]
   17008:	cmp	ip, #12
   1700c:	str	ip, [sp, #36]	; 0x24
   17010:	subgt	ip, ip, #12
   17014:	str	r0, [sp, #44]	; 0x2c
   17018:	str	r6, [sp, #84]	; 0x54
   1701c:	str	r3, [sp, #1172]	; 0x494
   17020:	strgt	ip, [sp, #36]	; 0x24
   17024:	bgt	17038 <close_stdout@@Base+0x1fb4>
   17028:	ldr	ip, [sp, #36]	; 0x24
   1702c:	cmp	ip, #0
   17030:	moveq	ip, #12
   17034:	str	ip, [sp, #36]	; 0x24
   17038:	ldrb	r2, [r4]
   1703c:	cmp	r2, #0
   17040:	beq	18550 <close_stdout@@Base+0x34cc>
   17044:	movw	ip, #46021	; 0xb3c5
   17048:	movw	r6, #34953	; 0x8889
   1704c:	movt	ip, #37282	; 0x91a2
   17050:	movt	r6, #34952	; 0x8888
   17054:	str	ip, [sp, #72]	; 0x48
   17058:	movw	r7, #52429	; 0xcccd
   1705c:	str	r6, [sp, #64]	; 0x40
   17060:	movw	ip, #34079	; 0x851f
   17064:	movw	r6, #9363	; 0x2493
   17068:	movt	ip, #20971	; 0x51eb
   1706c:	movt	r6, #37449	; 0x9249
   17070:	str	ip, [sp, #60]	; 0x3c
   17074:	movt	r7, #52428	; 0xcccc
   17078:	movw	ip, #26215	; 0x6667
   1707c:	str	r6, [sp, #56]	; 0x38
   17080:	movt	ip, #26214	; 0x6666
   17084:	mov	fp, #0
   17088:	str	ip, [sp, #68]	; 0x44
   1708c:	str	r7, [sp, #80]	; 0x50
   17090:	b	170c0 <close_stdout@@Base+0x203c>
   17094:	ldr	ip, [sp, #28]
   17098:	rsb	r3, fp, ip
   1709c:	cmp	r3, #1
   170a0:	bls	173a8 <close_stdout@@Base+0x2324>
   170a4:	add	fp, fp, #1
   170a8:	cmp	r8, #0
   170ac:	strbne	r2, [r8], #1
   170b0:	ldrb	r2, [r4, #1]
   170b4:	add	r4, r4, #1
   170b8:	cmp	r2, #0
   170bc:	beq	174f8 <close_stdout@@Base+0x2474>
   170c0:	cmp	r2, #37	; 0x25
   170c4:	bne	17094 <close_stdout@@Base+0x2010>
   170c8:	ldr	r6, [sp, #48]	; 0x30
   170cc:	mov	r1, #0
   170d0:	mov	r3, r4
   170d4:	mov	sl, r1
   170d8:	str	r6, [sp, #32]
   170dc:	ldrb	r2, [r3, #1]
   170e0:	add	r3, r3, #1
   170e4:	cmp	r2, #48	; 0x30
   170e8:	mov	r4, r3
   170ec:	beq	17180 <close_stdout@@Base+0x20fc>
   170f0:	bhi	17168 <close_stdout@@Base+0x20e4>
   170f4:	cmp	r2, #35	; 0x23
   170f8:	moveq	r1, #1
   170fc:	beq	170dc <close_stdout@@Base+0x2058>
   17100:	cmp	r2, #45	; 0x2d
   17104:	beq	17180 <close_stdout@@Base+0x20fc>
   17108:	sub	r0, r2, #48	; 0x30
   1710c:	cmp	r0, #9
   17110:	mvnhi	r5, #0
   17114:	bhi	17188 <close_stdout@@Base+0x2104>
   17118:	movw	ip, #52428	; 0xcccc
   1711c:	add	r3, r3, #1
   17120:	movt	ip, #3276	; 0xccc
   17124:	mov	r5, #0
   17128:	b	17158 <close_stdout@@Base+0x20d4>
   1712c:	ldrb	r2, [r3, #-1]
   17130:	beq	17398 <close_stdout@@Base+0x2314>
   17134:	add	r5, r5, r5, lsl #2
   17138:	sub	r2, r2, #48	; 0x30
   1713c:	add	r5, r2, r5, lsl #1
   17140:	mov	r4, r3
   17144:	add	r3, r3, #1
   17148:	ldrb	r2, [r4]
   1714c:	sub	r0, r2, #48	; 0x30
   17150:	cmp	r0, #9
   17154:	bhi	17188 <close_stdout@@Base+0x2104>
   17158:	cmp	r5, ip
   1715c:	ble	1712c <close_stdout@@Base+0x20a8>
   17160:	mvn	r5, #-2147483648	; 0x80000000
   17164:	b	17140 <close_stdout@@Base+0x20bc>
   17168:	cmp	r2, #94	; 0x5e
   1716c:	moveq	r6, #1
   17170:	streq	r6, [sp, #32]
   17174:	beq	170dc <close_stdout@@Base+0x2058>
   17178:	cmp	r2, #95	; 0x5f
   1717c:	bne	17108 <close_stdout@@Base+0x2084>
   17180:	mov	sl, r2
   17184:	b	170dc <close_stdout@@Base+0x2058>
   17188:	cmp	r2, #69	; 0x45
   1718c:	beq	173cc <close_stdout@@Base+0x2348>
   17190:	cmp	r2, #79	; 0x4f
   17194:	movne	r3, #0
   17198:	beq	173cc <close_stdout@@Base+0x2348>
   1719c:	mov	r9, r2
   171a0:	cmp	r2, #122	; 0x7a
   171a4:	addls	pc, pc, r2, lsl #2
   171a8:	b	175c4 <close_stdout@@Base+0x2540>
   171ac:	b	175bc <close_stdout@@Base+0x2538>
   171b0:	b	175c4 <close_stdout@@Base+0x2540>
   171b4:	b	175c4 <close_stdout@@Base+0x2540>
   171b8:	b	175c4 <close_stdout@@Base+0x2540>
   171bc:	b	175c4 <close_stdout@@Base+0x2540>
   171c0:	b	175c4 <close_stdout@@Base+0x2540>
   171c4:	b	175c4 <close_stdout@@Base+0x2540>
   171c8:	b	175c4 <close_stdout@@Base+0x2540>
   171cc:	b	175c4 <close_stdout@@Base+0x2540>
   171d0:	b	175c4 <close_stdout@@Base+0x2540>
   171d4:	b	175c4 <close_stdout@@Base+0x2540>
   171d8:	b	175c4 <close_stdout@@Base+0x2540>
   171dc:	b	175c4 <close_stdout@@Base+0x2540>
   171e0:	b	175c4 <close_stdout@@Base+0x2540>
   171e4:	b	175c4 <close_stdout@@Base+0x2540>
   171e8:	b	175c4 <close_stdout@@Base+0x2540>
   171ec:	b	175c4 <close_stdout@@Base+0x2540>
   171f0:	b	175c4 <close_stdout@@Base+0x2540>
   171f4:	b	175c4 <close_stdout@@Base+0x2540>
   171f8:	b	175c4 <close_stdout@@Base+0x2540>
   171fc:	b	175c4 <close_stdout@@Base+0x2540>
   17200:	b	175c4 <close_stdout@@Base+0x2540>
   17204:	b	175c4 <close_stdout@@Base+0x2540>
   17208:	b	175c4 <close_stdout@@Base+0x2540>
   1720c:	b	175c4 <close_stdout@@Base+0x2540>
   17210:	b	175c4 <close_stdout@@Base+0x2540>
   17214:	b	175c4 <close_stdout@@Base+0x2540>
   17218:	b	175c4 <close_stdout@@Base+0x2540>
   1721c:	b	175c4 <close_stdout@@Base+0x2540>
   17220:	b	175c4 <close_stdout@@Base+0x2540>
   17224:	b	175c4 <close_stdout@@Base+0x2540>
   17228:	b	175c4 <close_stdout@@Base+0x2540>
   1722c:	b	175c4 <close_stdout@@Base+0x2540>
   17230:	b	175c4 <close_stdout@@Base+0x2540>
   17234:	b	175c4 <close_stdout@@Base+0x2540>
   17238:	b	175c4 <close_stdout@@Base+0x2540>
   1723c:	b	175c4 <close_stdout@@Base+0x2540>
   17240:	b	17f5c <close_stdout@@Base+0x2ed8>
   17244:	b	175c4 <close_stdout@@Base+0x2540>
   17248:	b	175c4 <close_stdout@@Base+0x2540>
   1724c:	b	175c4 <close_stdout@@Base+0x2540>
   17250:	b	175c4 <close_stdout@@Base+0x2540>
   17254:	b	175c4 <close_stdout@@Base+0x2540>
   17258:	b	175c4 <close_stdout@@Base+0x2540>
   1725c:	b	175c4 <close_stdout@@Base+0x2540>
   17260:	b	175c4 <close_stdout@@Base+0x2540>
   17264:	b	175c4 <close_stdout@@Base+0x2540>
   17268:	b	175c4 <close_stdout@@Base+0x2540>
   1726c:	b	175c4 <close_stdout@@Base+0x2540>
   17270:	b	175c4 <close_stdout@@Base+0x2540>
   17274:	b	175c4 <close_stdout@@Base+0x2540>
   17278:	b	175c4 <close_stdout@@Base+0x2540>
   1727c:	b	175c4 <close_stdout@@Base+0x2540>
   17280:	b	175c4 <close_stdout@@Base+0x2540>
   17284:	b	175c4 <close_stdout@@Base+0x2540>
   17288:	b	175c4 <close_stdout@@Base+0x2540>
   1728c:	b	175c4 <close_stdout@@Base+0x2540>
   17290:	b	175c4 <close_stdout@@Base+0x2540>
   17294:	b	18288 <close_stdout@@Base+0x3204>
   17298:	b	175c4 <close_stdout@@Base+0x2540>
   1729c:	b	175c4 <close_stdout@@Base+0x2540>
   172a0:	b	175c4 <close_stdout@@Base+0x2540>
   172a4:	b	175c4 <close_stdout@@Base+0x2540>
   172a8:	b	175c4 <close_stdout@@Base+0x2540>
   172ac:	b	175c4 <close_stdout@@Base+0x2540>
   172b0:	b	17514 <close_stdout@@Base+0x2490>
   172b4:	b	17514 <close_stdout@@Base+0x2490>
   172b8:	b	17bd0 <close_stdout@@Base+0x2b4c>
   172bc:	b	17f48 <close_stdout@@Base+0x2ec4>
   172c0:	b	175c4 <close_stdout@@Base+0x2540>
   172c4:	b	17f04 <close_stdout@@Base+0x2e80>
   172c8:	b	17d70 <close_stdout@@Base+0x2cec>
   172cc:	b	182ac <close_stdout@@Base+0x3228>
   172d0:	b	17670 <close_stdout@@Base+0x25ec>
   172d4:	b	175c4 <close_stdout@@Base+0x2540>
   172d8:	b	175c4 <close_stdout@@Base+0x2540>
   172dc:	b	175c4 <close_stdout@@Base+0x2540>
   172e0:	b	1809c <close_stdout@@Base+0x3018>
   172e4:	b	18058 <close_stdout@@Base+0x2fd4>
   172e8:	b	175c4 <close_stdout@@Base+0x2540>
   172ec:	b	1825c <close_stdout@@Base+0x31d8>
   172f0:	b	175c4 <close_stdout@@Base+0x2540>
   172f4:	b	18250 <close_stdout@@Base+0x31cc>
   172f8:	b	1826c <close_stdout@@Base+0x31e8>
   172fc:	b	17c98 <close_stdout@@Base+0x2c14>
   17300:	b	182dc <close_stdout@@Base+0x3258>
   17304:	b	17d70 <close_stdout@@Base+0x2cec>
   17308:	b	17b74 <close_stdout@@Base+0x2af0>
   1730c:	b	173dc <close_stdout@@Base+0x2358>
   17310:	b	17900 <close_stdout@@Base+0x287c>
   17314:	b	17848 <close_stdout@@Base+0x27c4>
   17318:	b	175c4 <close_stdout@@Base+0x2540>
   1731c:	b	175c4 <close_stdout@@Base+0x2540>
   17320:	b	175c4 <close_stdout@@Base+0x2540>
   17324:	b	175c4 <close_stdout@@Base+0x2540>
   17328:	b	175c4 <close_stdout@@Base+0x2540>
   1732c:	b	175c4 <close_stdout@@Base+0x2540>
   17330:	b	1782c <close_stdout@@Base+0x27a8>
   17334:	b	177ec <close_stdout@@Base+0x2768>
   17338:	b	173dc <close_stdout@@Base+0x2358>
   1733c:	b	17738 <close_stdout@@Base+0x26b4>
   17340:	b	17710 <close_stdout@@Base+0x268c>
   17344:	b	175c4 <close_stdout@@Base+0x2540>
   17348:	b	17d70 <close_stdout@@Base+0x2cec>
   1734c:	b	177ec <close_stdout@@Base+0x2768>
   17350:	b	175c4 <close_stdout@@Base+0x2540>
   17354:	b	176d8 <close_stdout@@Base+0x2654>
   17358:	b	182c8 <close_stdout@@Base+0x3244>
   1735c:	b	17f38 <close_stdout@@Base+0x2eb4>
   17360:	b	17f18 <close_stdout@@Base+0x2e94>
   17364:	b	181ec <close_stdout@@Base+0x3168>
   17368:	b	175c4 <close_stdout@@Base+0x2540>
   1736c:	b	18038 <close_stdout@@Base+0x2fb4>
   17370:	b	175c4 <close_stdout@@Base+0x2540>
   17374:	b	173e4 <close_stdout@@Base+0x2360>
   17378:	b	180b8 <close_stdout@@Base+0x3034>
   1737c:	b	17608 <close_stdout@@Base+0x2584>
   17380:	b	18000 <close_stdout@@Base+0x2f7c>
   17384:	b	175c4 <close_stdout@@Base+0x2540>
   17388:	b	17fe4 <close_stdout@@Base+0x2f60>
   1738c:	b	173dc <close_stdout@@Base+0x2358>
   17390:	b	17c38 <close_stdout@@Base+0x2bb4>
   17394:	b	17754 <close_stdout@@Base+0x26d0>
   17398:	cmp	r2, #55	; 0x37
   1739c:	ble	17134 <close_stdout@@Base+0x20b0>
   173a0:	mvn	r5, #-2147483648	; 0x80000000
   173a4:	b	17140 <close_stdout@@Base+0x20bc>
   173a8:	mov	r0, #0
   173ac:	ldr	ip, [sp, #44]	; 0x2c
   173b0:	ldr	r2, [sp, #1172]	; 0x494
   173b4:	ldr	r3, [ip]
   173b8:	cmp	r2, r3
   173bc:	bne	18754 <close_stdout@@Base+0x36d0>
   173c0:	add	sp, sp, #1168	; 0x490
   173c4:	add	sp, sp, #12
   173c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173cc:	mov	r3, r2
   173d0:	add	r4, r4, #1
   173d4:	ldrb	r2, [r4]
   173d8:	b	1719c <close_stdout@@Base+0x2118>
   173dc:	cmp	r3, #79	; 0x4f
   173e0:	beq	1751c <close_stdout@@Base+0x2498>
   173e4:	mov	ip, r2
   173e8:	mov	r6, #0
   173ec:	cmp	r3, #0
   173f0:	mov	r2, #32
   173f4:	addeq	r7, sp, #152	; 0x98
   173f8:	strb	r2, [sp, #140]	; 0x8c
   173fc:	streq	r3, [sp, #76]	; 0x4c
   17400:	mov	r2, #37	; 0x25
   17404:	subeq	r3, r7, #10
   17408:	strb	r2, [sp, #141]	; 0x8d
   1740c:	bne	18758 <close_stdout@@Base+0x36d4>
   17410:	strb	ip, [r3]
   17414:	sub	r0, r7, #4
   17418:	mov	ip, #0
   1741c:	mov	r1, #1024	; 0x400
   17420:	strb	ip, [r3, #1]
   17424:	sub	r2, r7, #12
   17428:	ldr	r3, [sp, #40]	; 0x28
   1742c:	bl	11894 <strftime@plt>
   17430:	cmp	r0, #0
   17434:	beq	170b0 <close_stdout@@Base+0x202c>
   17438:	sub	r9, r0, #1
   1743c:	ldr	r0, [sp, #28]
   17440:	bic	r3, r5, r5, asr #31
   17444:	cmp	r3, r9
   17448:	movcs	ip, r3
   1744c:	movcc	ip, r9
   17450:	rsb	r2, fp, r0
   17454:	cmp	ip, r2
   17458:	bcs	173a8 <close_stdout@@Base+0x2324>
   1745c:	cmp	r8, #0
   17460:	beq	174e4 <close_stdout@@Base+0x2460>
   17464:	cmp	r9, r3
   17468:	ldr	r1, [sp, #76]	; 0x4c
   1746c:	movcs	r3, #0
   17470:	movcc	r3, #1
   17474:	cmp	r1, #0
   17478:	movne	r3, #0
   1747c:	cmp	r3, #0
   17480:	beq	174b4 <close_stdout@@Base+0x2430>
   17484:	cmp	sl, #48	; 0x30
   17488:	rsb	r5, r9, r5
   1748c:	str	ip, [sp, #20]
   17490:	moveq	r0, r8
   17494:	movne	r0, r8
   17498:	moveq	r1, sl
   1749c:	moveq	r2, r5
   174a0:	movne	r2, r5
   174a4:	movne	r1, #32
   174a8:	bl	11984 <memset@plt>
   174ac:	ldr	ip, [sp, #20]
   174b0:	add	r8, r8, r5
   174b4:	cmp	r6, #0
   174b8:	bne	175ec <close_stdout@@Base+0x2568>
   174bc:	ldr	r6, [sp, #32]
   174c0:	sub	r1, r7, #3
   174c4:	mov	r0, r8
   174c8:	mov	r2, r9
   174cc:	cmp	r6, #0
   174d0:	str	ip, [sp, #20]
   174d4:	beq	175e0 <close_stdout@@Base+0x255c>
   174d8:	bl	16f78 <close_stdout@@Base+0x1ef4>
   174dc:	ldr	ip, [sp, #20]
   174e0:	add	r8, r8, r9
   174e4:	ldrb	r2, [r4, #1]
   174e8:	add	fp, fp, ip
   174ec:	add	r4, r4, #1
   174f0:	cmp	r2, #0
   174f4:	bne	170c0 <close_stdout@@Base+0x203c>
   174f8:	ldr	r6, [sp, #28]
   174fc:	mov	r0, fp
   17500:	cmp	r8, #0
   17504:	cmpne	r6, #0
   17508:	movne	r3, #0
   1750c:	strbne	r3, [r8]
   17510:	b	173ac <close_stdout@@Base+0x2328>
   17514:	cmp	r3, #0
   17518:	beq	18318 <close_stdout@@Base+0x3294>
   1751c:	sub	r3, r4, #1
   17520:	mov	r7, #1
   17524:	ldrb	r2, [r3]
   17528:	mov	r6, r3
   1752c:	add	r7, r7, #1
   17530:	sub	r3, r3, #1
   17534:	cmp	r2, #37	; 0x25
   17538:	bne	17524 <close_stdout@@Base+0x24a0>
   1753c:	ldr	ip, [sp, #28]
   17540:	bic	r3, r5, r5, asr #31
   17544:	cmp	r7, r3
   17548:	movcs	r9, r7
   1754c:	movcc	r9, r3
   17550:	rsb	r2, fp, ip
   17554:	cmp	r9, r2
   17558:	bcs	173a8 <close_stdout@@Base+0x2324>
   1755c:	cmp	r8, #0
   17560:	beq	175b4 <close_stdout@@Base+0x2530>
   17564:	cmp	r3, r7
   17568:	bls	17594 <close_stdout@@Base+0x2510>
   1756c:	cmp	sl, #48	; 0x30
   17570:	rsb	r5, r7, r5
   17574:	moveq	r0, r8
   17578:	movne	r0, r8
   1757c:	moveq	r1, sl
   17580:	moveq	r2, r5
   17584:	movne	r2, r5
   17588:	movne	r1, #32
   1758c:	add	r8, r8, r5
   17590:	bl	11984 <memset@plt>
   17594:	ldr	ip, [sp, #32]
   17598:	mov	r1, r6
   1759c:	mov	r0, r8
   175a0:	mov	r2, r7
   175a4:	cmp	ip, #0
   175a8:	beq	175d8 <close_stdout@@Base+0x2554>
   175ac:	bl	16f78 <close_stdout@@Base+0x1ef4>
   175b0:	add	r8, r8, r7
   175b4:	add	fp, fp, r9
   175b8:	b	170b0 <close_stdout@@Base+0x202c>
   175bc:	ldrb	r2, [r4, #-1]
   175c0:	sub	r4, r4, #1
   175c4:	cmp	r2, #37	; 0x25
   175c8:	bne	1751c <close_stdout@@Base+0x2498>
   175cc:	mov	r6, r4
   175d0:	mov	r7, #1
   175d4:	b	1753c <close_stdout@@Base+0x24b8>
   175d8:	bl	11768 <memcpy@plt>
   175dc:	b	175b0 <close_stdout@@Base+0x252c>
   175e0:	bl	11768 <memcpy@plt>
   175e4:	ldr	ip, [sp, #20]
   175e8:	b	174e0 <close_stdout@@Base+0x245c>
   175ec:	sub	r1, r7, #3
   175f0:	mov	r0, r8
   175f4:	mov	r2, r9
   175f8:	str	ip, [sp, #20]
   175fc:	bl	16f2c <close_stdout@@Base+0x1ea8>
   17600:	ldr	ip, [sp, #20]
   17604:	b	174e0 <close_stdout@@Base+0x245c>
   17608:	ldr	r6, [sp, #28]
   1760c:	bic	r3, r5, r5, asr #31
   17610:	rsb	r2, fp, r6
   17614:	cmp	r3, #1
   17618:	movcs	r6, r3
   1761c:	movcc	r6, #1
   17620:	cmp	r6, r2
   17624:	bcs	173a8 <close_stdout@@Base+0x2324>
   17628:	cmp	r8, #0
   1762c:	beq	17668 <close_stdout@@Base+0x25e4>
   17630:	cmp	r3, #1
   17634:	bls	17660 <close_stdout@@Base+0x25dc>
   17638:	cmp	sl, #48	; 0x30
   1763c:	sub	r5, r5, #1
   17640:	moveq	r0, r8
   17644:	movne	r0, r8
   17648:	moveq	r1, sl
   1764c:	moveq	r2, r5
   17650:	movne	r2, r5
   17654:	movne	r1, #32
   17658:	add	r8, r8, r5
   1765c:	bl	11984 <memset@plt>
   17660:	mov	r3, #9
   17664:	strb	r3, [r8], #1
   17668:	add	fp, fp, r6
   1766c:	b	170b0 <close_stdout@@Base+0x202c>
   17670:	cmp	r3, #69	; 0x45
   17674:	beq	1751c <close_stdout@@Base+0x2498>
   17678:	ldr	r0, [sp, #36]	; 0x24
   1767c:	mov	r6, #2
   17680:	str	r6, [sp, #76]	; 0x4c
   17684:	mov	r2, #0
   17688:	lsr	r1, r0, #31
   1768c:	str	r2, [sp, #88]	; 0x58
   17690:	str	r1, [sp, #52]	; 0x34
   17694:	ldr	r6, [sp, #52]	; 0x34
   17698:	eor	r1, r6, #1
   1769c:	cmp	r3, #79	; 0x4f
   176a0:	movne	r1, #0
   176a4:	andeq	r1, r1, #1
   176a8:	cmp	r1, #0
   176ac:	beq	17948 <close_stdout@@Base+0x28c4>
   176b0:	mov	r6, #0
   176b4:	mov	r2, #32
   176b8:	strb	r2, [sp, #140]	; 0x8c
   176bc:	mov	r2, #37	; 0x25
   176c0:	strb	r2, [sp, #141]	; 0x8d
   176c4:	add	r7, sp, #152	; 0x98
   176c8:	strb	r3, [sp, #142]	; 0x8e
   176cc:	uxtb	ip, r9
   176d0:	sub	r3, r7, #9
   176d4:	b	17410 <close_stdout@@Base+0x238c>
   176d8:	cmp	r3, #69	; 0x45
   176dc:	beq	1751c <close_stdout@@Base+0x2498>
   176e0:	ldr	r6, [sp, #40]	; 0x28
   176e4:	mov	ip, #3
   176e8:	mov	r2, #0
   176ec:	str	r2, [sp, #88]	; 0x58
   176f0:	ldr	r0, [r6, #28]
   176f4:	cmn	r0, #1
   176f8:	str	ip, [sp, #76]	; 0x4c
   176fc:	add	r0, r0, #1
   17700:	movge	r1, #0
   17704:	movlt	r1, #1
   17708:	str	r1, [sp, #52]	; 0x34
   1770c:	b	17694 <close_stdout@@Base+0x2610>
   17710:	cmp	r3, #69	; 0x45
   17714:	beq	1751c <close_stdout@@Base+0x2498>
   17718:	ldr	r6, [sp, #40]	; 0x28
   1771c:	ldr	r0, [r6, #12]
   17720:	cmp	sl, #45	; 0x2d
   17724:	cmpne	sl, #48	; 0x30
   17728:	mov	ip, #2
   1772c:	str	ip, [sp, #76]	; 0x4c
   17730:	movne	sl, #95	; 0x5f
   17734:	b	17684 <close_stdout@@Base+0x2600>
   17738:	cmp	r3, #69	; 0x45
   1773c:	beq	1751c <close_stdout@@Base+0x2498>
   17740:	ldr	r6, [sp, #40]	; 0x28
   17744:	mov	ip, #2
   17748:	str	ip, [sp, #76]	; 0x4c
   1774c:	ldr	r0, [r6, #12]
   17750:	b	17684 <close_stdout@@Base+0x2600>
   17754:	mov	r7, #0
   17758:	ldr	r6, [sp, #40]	; 0x28
   1775c:	ldr	r2, [r6, #32]
   17760:	cmp	r2, #0
   17764:	blt	170b0 <close_stdout@@Base+0x202c>
   17768:	ldr	ip, [r6, #36]	; 0x24
   1776c:	ldr	r6, [sp, #64]	; 0x40
   17770:	ldr	r0, [sp, #72]	; 0x48
   17774:	asr	r2, ip, #31
   17778:	smull	r6, r1, r6, ip
   1777c:	smull	r0, r6, r0, ip
   17780:	add	r1, r1, ip
   17784:	add	r6, r6, ip
   17788:	str	r6, [sp, #76]	; 0x4c
   1778c:	ldr	r6, [sp, #64]	; 0x40
   17790:	rsb	r1, r2, r1, asr #5
   17794:	smull	r0, r6, r6, r1
   17798:	ldr	r0, [sp, #76]	; 0x4c
   1779c:	rsb	r2, r2, r0, asr #11
   177a0:	str	r2, [sp, #76]	; 0x4c
   177a4:	str	r6, [sp, #52]	; 0x34
   177a8:	asr	r6, r1, #31
   177ac:	ldr	r0, [sp, #52]	; 0x34
   177b0:	str	r6, [sp, #88]	; 0x58
   177b4:	rsb	r6, r1, r1, lsl #4
   177b8:	add	r2, r0, r1
   177bc:	ldr	r0, [sp, #88]	; 0x58
   177c0:	sub	r6, ip, r6, lsl #2
   177c4:	rsb	r2, r0, r2, asr #5
   177c8:	rsb	r2, r2, r2, lsl #4
   177cc:	sub	r2, r1, r2, lsl #2
   177d0:	cmp	r7, #3
   177d4:	addls	pc, pc, r7, lsl #2
   177d8:	b	18640 <close_stdout@@Base+0x35bc>
   177dc:	b	18390 <close_stdout@@Base+0x330c>
   177e0:	b	18364 <close_stdout@@Base+0x32e0>
   177e4:	b	1832c <close_stdout@@Base+0x32a8>
   177e8:	b	183bc <close_stdout@@Base+0x3338>
   177ec:	cmp	r1, #0
   177f0:	ldr	r6, [sp, #32]
   177f4:	movne	r6, #1
   177f8:	cmp	r3, #0
   177fc:	str	r6, [sp, #32]
   17800:	bne	1751c <close_stdout@@Base+0x2498>
   17804:	add	r7, sp, #152	; 0x98
   17808:	mov	r6, #0
   1780c:	mov	ip, r2
   17810:	str	r6, [sp, #76]	; 0x4c
   17814:	mov	r2, #32
   17818:	sub	r3, r7, #10
   1781c:	strb	r2, [sp, #140]	; 0x8c
   17820:	mov	r2, #37	; 0x25
   17824:	strb	r2, [sp, #141]	; 0x8d
   17828:	b	17410 <close_stdout@@Base+0x238c>
   1782c:	cmp	r3, #0
   17830:	bne	1751c <close_stdout@@Base+0x2498>
   17834:	ldr	r6, [sp, #32]
   17838:	cmp	r1, #0
   1783c:	movne	r6, #1
   17840:	str	r6, [sp, #32]
   17844:	b	17804 <close_stdout@@Base+0x2780>
   17848:	ldr	ip, [sp, #32]
   1784c:	cmp	r1, #0
   17850:	ldr	r6, [sp, #84]	; 0x54
   17854:	moveq	r9, #0
   17858:	movne	r9, #1
   1785c:	movne	ip, #0
   17860:	cmp	r6, #0
   17864:	str	ip, [sp, #32]
   17868:	beq	18714 <close_stdout@@Base+0x3690>
   1786c:	mov	r0, r6
   17870:	bl	11918 <strlen@plt>
   17874:	mov	r6, r0
   17878:	ldr	ip, [sp, #28]
   1787c:	bic	r3, r5, r5, asr #31
   17880:	cmp	r6, r3
   17884:	movcs	r7, r6
   17888:	movcc	r7, r3
   1788c:	rsb	r2, fp, ip
   17890:	cmp	r7, r2
   17894:	bcs	173a8 <close_stdout@@Base+0x2324>
   17898:	cmp	r8, #0
   1789c:	beq	178f8 <close_stdout@@Base+0x2874>
   178a0:	cmp	r3, r6
   178a4:	bls	178d0 <close_stdout@@Base+0x284c>
   178a8:	cmp	sl, #48	; 0x30
   178ac:	rsb	r5, r6, r5
   178b0:	moveq	r0, r8
   178b4:	movne	r0, r8
   178b8:	moveq	r1, sl
   178bc:	moveq	r2, r5
   178c0:	movne	r2, r5
   178c4:	movne	r1, #32
   178c8:	add	r8, r8, r5
   178cc:	bl	11984 <memset@plt>
   178d0:	cmp	r9, #0
   178d4:	bne	18598 <close_stdout@@Base+0x3514>
   178d8:	ldr	ip, [sp, #32]
   178dc:	mov	r0, r8
   178e0:	ldr	r1, [sp, #84]	; 0x54
   178e4:	mov	r2, r6
   178e8:	cmp	ip, #0
   178ec:	beq	18558 <close_stdout@@Base+0x34d4>
   178f0:	bl	16f78 <close_stdout@@Base+0x1ef4>
   178f4:	add	r8, r8, r6
   178f8:	add	fp, fp, r7
   178fc:	b	170b0 <close_stdout@@Base+0x202c>
   17900:	cmp	r3, #69	; 0x45
   17904:	beq	1856c <close_stdout@@Base+0x34e8>
   17908:	cmp	r3, #79	; 0x4f
   1790c:	beq	1751c <close_stdout@@Base+0x2498>
   17910:	ldr	r6, [sp, #40]	; 0x28
   17914:	movw	r3, #63636	; 0xf894
   17918:	movt	r3, #65535	; 0xffff
   1791c:	mov	ip, #4
   17920:	str	ip, [sp, #76]	; 0x4c
   17924:	ldr	r2, [r6, #20]
   17928:	add	r0, r2, #1888	; 0x760
   1792c:	cmp	r2, r3
   17930:	add	r0, r0, #12
   17934:	movge	r3, #0
   17938:	movlt	r3, #1
   1793c:	str	r3, [sp, #52]	; 0x34
   17940:	mov	r2, #0
   17944:	str	r2, [sp, #88]	; 0x58
   17948:	ldr	ip, [sp, #52]	; 0x34
   1794c:	add	r7, sp, #152	; 0x98
   17950:	str	fp, [sp, #92]	; 0x5c
   17954:	add	r3, r7, #10
   17958:	cmp	ip, #0
   1795c:	ldr	fp, [sp, #80]	; 0x50
   17960:	rsbne	r0, r0, #0
   17964:	b	1796c <close_stdout@@Base+0x28e8>
   17968:	mov	r3, r6
   1796c:	tst	r2, #1
   17970:	movne	r1, #58	; 0x3a
   17974:	strbne	r1, [r3, #-1]
   17978:	umull	r6, r1, fp, r0
   1797c:	subne	r3, r3, #1
   17980:	asrs	r2, r2, #1
   17984:	sub	r6, r3, #1
   17988:	moveq	r9, #0
   1798c:	movne	r9, #1
   17990:	lsr	r1, r1, #3
   17994:	cmp	r1, #0
   17998:	orrne	r9, r9, #1
   1799c:	add	ip, r1, r1, lsl #2
   179a0:	cmp	r9, #0
   179a4:	sub	ip, r0, ip, lsl #1
   179a8:	mov	r0, r1
   179ac:	add	ip, ip, #48	; 0x30
   179b0:	strb	ip, [r3, #-1]
   179b4:	bne	17968 <close_stdout@@Base+0x28e4>
   179b8:	ldr	r3, [sp, #76]	; 0x4c
   179bc:	ldr	ip, [sp, #52]	; 0x34
   179c0:	cmp	r3, r5
   179c4:	movlt	r3, r5
   179c8:	ldr	fp, [sp, #92]	; 0x5c
   179cc:	cmp	ip, #0
   179d0:	bne	183ec <close_stdout@@Base+0x3368>
   179d4:	ldr	r0, [sp, #88]	; 0x58
   179d8:	cmp	r0, #0
   179dc:	bne	1848c <close_stdout@@Base+0x3408>
   179e0:	cmp	sl, #45	; 0x2d
   179e4:	add	r7, r7, #10
   179e8:	str	r7, [sp, #52]	; 0x34
   179ec:	beq	18548 <close_stdout@@Base+0x34c4>
   179f0:	rsb	r7, r7, r6
   179f4:	add	r7, r3, r7
   179f8:	cmp	r7, #0
   179fc:	movgt	ip, #0
   17a00:	strgt	ip, [sp, #76]	; 0x4c
   17a04:	ble	18548 <close_stdout@@Base+0x34c4>
   17a08:	cmp	sl, #95	; 0x5f
   17a0c:	beq	18494 <close_stdout@@Base+0x3410>
   17a10:	ldr	r1, [sp, #28]
   17a14:	rsb	r2, fp, r1
   17a18:	cmp	r3, r2
   17a1c:	bcs	173a8 <close_stdout@@Base+0x2324>
   17a20:	ldr	r0, [sp, #76]	; 0x4c
   17a24:	cmp	r0, #0
   17a28:	beq	17aa0 <close_stdout@@Base+0x2a1c>
   17a2c:	bic	r1, r5, r5, asr #31
   17a30:	cmp	r1, #1
   17a34:	movcs	r9, r1
   17a38:	movcc	r9, #1
   17a3c:	cmp	r2, r9
   17a40:	bls	173a8 <close_stdout@@Base+0x2324>
   17a44:	cmp	r8, #0
   17a48:	beq	17a9c <close_stdout@@Base+0x2a18>
   17a4c:	cmp	r1, #1
   17a50:	movls	r1, #0
   17a54:	movhi	r1, #1
   17a58:	cmp	r3, #0
   17a5c:	movne	r1, #0
   17a60:	cmp	r1, #0
   17a64:	beq	17a98 <close_stdout@@Base+0x2a14>
   17a68:	sub	r5, r5, #1
   17a6c:	cmp	sl, #48	; 0x30
   17a70:	mov	r0, r8
   17a74:	mov	r2, r5
   17a78:	beq	18648 <close_stdout@@Base+0x35c4>
   17a7c:	mov	r1, #32
   17a80:	str	r3, [sp, #24]
   17a84:	str	ip, [sp, #20]
   17a88:	bl	11984 <memset@plt>
   17a8c:	ldr	ip, [sp, #20]
   17a90:	add	r8, r8, r5
   17a94:	ldr	r3, [sp, #24]
   17a98:	strb	ip, [r8], #1
   17a9c:	add	fp, fp, r9
   17aa0:	cmp	r8, #0
   17aa4:	beq	17ac4 <close_stdout@@Base+0x2a40>
   17aa8:	mov	r0, r8
   17aac:	mov	r1, #48	; 0x30
   17ab0:	mov	r2, r7
   17ab4:	str	r3, [sp, #24]
   17ab8:	bl	11984 <memset@plt>
   17abc:	ldr	r3, [sp, #24]
   17ac0:	add	r8, r8, r7
   17ac4:	mov	r9, #0
   17ac8:	add	fp, fp, r7
   17acc:	mov	r5, r9
   17ad0:	ldr	ip, [sp, #52]	; 0x34
   17ad4:	rsb	r7, r6, ip
   17ad8:	ldr	ip, [sp, #28]
   17adc:	rsb	r2, fp, ip
   17ae0:	cmp	r7, r9
   17ae4:	movcs	ip, r7
   17ae8:	movcc	ip, r9
   17aec:	cmp	ip, r2
   17af0:	bcs	173a8 <close_stdout@@Base+0x2324>
   17af4:	cmp	r8, #0
   17af8:	beq	174e4 <close_stdout@@Base+0x2460>
   17afc:	cmp	r7, r9
   17b00:	movcs	r9, #0
   17b04:	movcc	r9, #1
   17b08:	cmp	r3, #0
   17b0c:	movne	r9, #0
   17b10:	cmp	r9, #0
   17b14:	beq	17b48 <close_stdout@@Base+0x2ac4>
   17b18:	cmp	sl, #48	; 0x30
   17b1c:	rsb	r5, r7, r5
   17b20:	str	ip, [sp, #20]
   17b24:	moveq	r0, r8
   17b28:	movne	r0, r8
   17b2c:	moveq	r1, sl
   17b30:	moveq	r2, r5
   17b34:	movne	r2, r5
   17b38:	movne	r1, #32
   17b3c:	bl	11984 <memset@plt>
   17b40:	ldr	ip, [sp, #20]
   17b44:	add	r8, r8, r5
   17b48:	ldr	lr, [sp, #32]
   17b4c:	mov	r1, r6
   17b50:	mov	r0, r8
   17b54:	mov	r2, r7
   17b58:	cmp	lr, #0
   17b5c:	str	ip, [sp, #20]
   17b60:	beq	18478 <close_stdout@@Base+0x33f4>
   17b64:	bl	16f78 <close_stdout@@Base+0x1ef4>
   17b68:	ldr	ip, [sp, #20]
   17b6c:	add	r8, r8, r7
   17b70:	b	174e4 <close_stdout@@Base+0x2460>
   17b74:	cmp	r3, #69	; 0x45
   17b78:	beq	1751c <close_stdout@@Base+0x2498>
   17b7c:	ldr	r6, [sp, #40]	; 0x28
   17b80:	mov	ip, #2
   17b84:	str	ip, [sp, #76]	; 0x4c
   17b88:	ldr	r2, [r6, #24]
   17b8c:	ldr	ip, [r6, #28]
   17b90:	ldr	r6, [sp, #56]	; 0x38
   17b94:	add	r2, r2, #6
   17b98:	asr	r1, r2, #31
   17b9c:	smull	r6, r0, r6, r2
   17ba0:	add	r0, r0, r2
   17ba4:	rsb	r1, r1, r0, asr #2
   17ba8:	rsb	r1, r1, r1, lsl #3
   17bac:	rsb	r2, r1, r2
   17bb0:	rsb	r2, r2, ip
   17bb4:	ldr	ip, [sp, #56]	; 0x38
   17bb8:	add	r2, r2, #7
   17bbc:	smull	ip, r0, ip, r2
   17bc0:	asr	r1, r2, #31
   17bc4:	add	r0, r0, r2
   17bc8:	rsb	r0, r1, r0, asr #2
   17bcc:	b	17684 <close_stdout@@Base+0x2600>
   17bd0:	cmp	r3, #79	; 0x4f
   17bd4:	beq	1751c <close_stdout@@Base+0x2498>
   17bd8:	cmp	r3, #69	; 0x45
   17bdc:	beq	18614 <close_stdout@@Base+0x3590>
   17be0:	ldr	ip, [sp, #40]	; 0x28
   17be4:	mov	r0, #100	; 0x64
   17be8:	ldr	r6, [sp, #60]	; 0x3c
   17bec:	ldr	r3, [ip, #20]
   17bf0:	smull	r6, r1, r6, r3
   17bf4:	asr	r2, r3, #31
   17bf8:	rsb	r2, r2, r1, asr #5
   17bfc:	add	r1, r2, #19
   17c00:	mls	r2, r0, r2, r3
   17c04:	cmp	r2, #0
   17c08:	movge	r0, #0
   17c0c:	blt	18704 <close_stdout@@Base+0x3680>
   17c10:	movw	r2, #63636	; 0xf894
   17c14:	movt	r2, #65535	; 0xffff
   17c18:	cmp	r3, r2
   17c1c:	mov	ip, #2
   17c20:	rsb	r0, r0, r1
   17c24:	str	ip, [sp, #76]	; 0x4c
   17c28:	movge	r2, #0
   17c2c:	movlt	r2, #1
   17c30:	str	r2, [sp, #52]	; 0x34
   17c34:	b	17940 <close_stdout@@Base+0x28bc>
   17c38:	cmp	r3, #69	; 0x45
   17c3c:	beq	18560 <close_stdout@@Base+0x34dc>
   17c40:	ldr	r6, [sp, #40]	; 0x28
   17c44:	mov	r1, #100	; 0x64
   17c48:	ldr	r2, [r6, #20]
   17c4c:	ldr	r6, [sp, #60]	; 0x3c
   17c50:	asr	r0, r2, #31
   17c54:	smull	r6, ip, r6, r2
   17c58:	rsb	r0, r0, ip, asr #5
   17c5c:	mls	r0, r1, r0, r2
   17c60:	cmp	r0, #0
   17c64:	movge	ip, #2
   17c68:	strge	ip, [sp, #76]	; 0x4c
   17c6c:	bge	17684 <close_stdout@@Base+0x2600>
   17c70:	movw	r1, #63636	; 0xf894
   17c74:	movt	r1, #65535	; 0xffff
   17c78:	cmp	r2, r1
   17c7c:	rsblt	r0, r0, #0
   17c80:	addge	r0, r0, #100	; 0x64
   17c84:	movlt	ip, #2
   17c88:	movge	r6, #2
   17c8c:	strlt	ip, [sp, #76]	; 0x4c
   17c90:	strge	r6, [sp, #76]	; 0x4c
   17c94:	b	17684 <close_stdout@@Base+0x2600>
   17c98:	ldr	r9, [pc, #816]	; 17fd0 <close_stdout@@Base+0x2f4c>
   17c9c:	add	r9, pc, r9
   17ca0:	ldr	r6, [sp, #40]	; 0x28
   17ca4:	mov	r3, r9
   17ca8:	ldr	ip, [sp, #1220]	; 0x4c4
   17cac:	mov	r1, #0
   17cb0:	ldr	lr, [sp, #1224]	; 0x4c8
   17cb4:	mvn	r2, #0
   17cb8:	str	r6, [sp]
   17cbc:	ldr	r6, [sp, #28]
   17cc0:	str	ip, [sp, #4]
   17cc4:	ldr	r0, [sp, #32]
   17cc8:	rsb	ip, fp, r6
   17ccc:	str	lr, [sp, #8]
   17cd0:	str	ip, [sp, #20]
   17cd4:	bl	16fc4 <close_stdout@@Base+0x1f40>
   17cd8:	bic	r3, r5, r5, asr #31
   17cdc:	ldr	ip, [sp, #20]
   17ce0:	cmp	r0, r3
   17ce4:	movcs	r7, r0
   17ce8:	movcc	r7, r3
   17cec:	mov	r6, r0
   17cf0:	cmp	r7, ip
   17cf4:	bcs	173a8 <close_stdout@@Base+0x2324>
   17cf8:	cmp	r8, #0
   17cfc:	beq	178f8 <close_stdout@@Base+0x2874>
   17d00:	cmp	r0, r3
   17d04:	bcs	17d3c <close_stdout@@Base+0x2cb8>
   17d08:	cmp	sl, #48	; 0x30
   17d0c:	rsb	r5, r0, r5
   17d10:	strne	ip, [sp, #20]
   17d14:	moveq	r0, r8
   17d18:	movne	r0, r8
   17d1c:	moveq	r1, sl
   17d20:	moveq	r2, r5
   17d24:	movne	r2, r5
   17d28:	movne	r1, #32
   17d2c:	addeq	r8, r8, r5
   17d30:	addne	r8, r8, r5
   17d34:	bl	11984 <memset@plt>
   17d38:	ldr	ip, [sp, #20]
   17d3c:	ldr	r1, [sp, #1220]	; 0x4c4
   17d40:	mov	r2, ip
   17d44:	ldr	r3, [sp, #1224]	; 0x4c8
   17d48:	ldr	lr, [sp, #40]	; 0x28
   17d4c:	str	r1, [sp, #4]
   17d50:	mov	r1, r8
   17d54:	str	r3, [sp, #8]
   17d58:	mov	r3, r9
   17d5c:	str	lr, [sp]
   17d60:	add	r8, r8, r6
   17d64:	ldr	r0, [sp, #32]
   17d68:	bl	16fc4 <close_stdout@@Base+0x1f40>
   17d6c:	b	178f8 <close_stdout@@Base+0x2874>
   17d70:	cmp	r3, #69	; 0x45
   17d74:	beq	1751c <close_stdout@@Base+0x2498>
   17d78:	ldr	ip, [sp, #40]	; 0x28
   17d7c:	ldr	r1, [ip, #20]
   17d80:	ldr	r0, [ip, #24]
   17d84:	ldr	r7, [ip, #28]
   17d88:	str	r1, [sp, #52]	; 0x34
   17d8c:	ldr	r6, [sp, #52]	; 0x34
   17d90:	rsb	r1, r0, r7
   17d94:	add	r1, r1, #380	; 0x17c
   17d98:	str	r0, [sp, #76]	; 0x4c
   17d9c:	cmp	r6, #0
   17da0:	ldr	r6, [sp, #56]	; 0x38
   17da4:	add	r1, r1, #2
   17da8:	smull	r6, ip, r6, r1
   17dac:	mvnge	r6, #99	; 0x63
   17db0:	movlt	r6, #300	; 0x12c
   17db4:	asr	r0, r1, #31
   17db8:	add	ip, ip, r1
   17dbc:	str	ip, [sp, #92]	; 0x5c
   17dc0:	ldr	ip, [sp, #52]	; 0x34
   17dc4:	add	r6, ip, r6
   17dc8:	ldr	ip, [sp, #92]	; 0x5c
   17dcc:	rsb	r0, r0, ip, asr #2
   17dd0:	rsb	r0, r0, r0, lsl #3
   17dd4:	rsb	r1, r0, r1
   17dd8:	rsb	r1, r1, r7
   17ddc:	adds	r1, r1, #3
   17de0:	str	r1, [sp, #88]	; 0x58
   17de4:	bmi	18668 <close_stdout@@Base+0x35e4>
   17de8:	tst	r6, #3
   17dec:	mvnne	r1, #364	; 0x16c
   17df0:	bne	17e40 <close_stdout@@Base+0x2dbc>
   17df4:	ldr	r1, [sp, #60]	; 0x3c
   17df8:	smull	ip, r1, r1, r6
   17dfc:	asr	ip, r6, #31
   17e00:	rsb	r0, ip, r1, asr #5
   17e04:	str	r1, [sp, #16]
   17e08:	mov	r1, #100	; 0x64
   17e0c:	mls	r1, r1, r0, r6
   17e10:	cmp	r1, #0
   17e14:	movwne	r1, #65170	; 0xfe92
   17e18:	movtne	r1, #65535	; 0xffff
   17e1c:	bne	17e40 <close_stdout@@Base+0x2dbc>
   17e20:	ldr	r1, [sp, #16]
   17e24:	rsb	r0, ip, r1, asr #7
   17e28:	mov	ip, #400	; 0x190
   17e2c:	movw	r1, #65170	; 0xfe92
   17e30:	movt	r1, #65535	; 0xffff
   17e34:	mls	r0, ip, r0, r6
   17e38:	cmp	r0, #0
   17e3c:	mvnne	r1, #364	; 0x16c
   17e40:	ldr	ip, [sp, #76]	; 0x4c
   17e44:	add	r6, r1, r7
   17e48:	ldr	r0, [sp, #56]	; 0x38
   17e4c:	rsb	r1, ip, r6
   17e50:	add	r1, r1, #380	; 0x17c
   17e54:	add	r1, r1, #2
   17e58:	smull	r0, ip, r0, r1
   17e5c:	asr	r0, r1, #31
   17e60:	add	ip, ip, r1
   17e64:	rsb	r0, r0, ip, asr #2
   17e68:	rsb	r0, r0, r0, lsl #3
   17e6c:	rsb	r1, r0, r1
   17e70:	rsb	r1, r1, r6
   17e74:	adds	r1, r1, #3
   17e78:	ldrmi	r1, [sp, #88]	; 0x58
   17e7c:	movmi	r7, #0
   17e80:	movpl	r7, #1
   17e84:	cmp	r2, #71	; 0x47
   17e88:	beq	185d0 <close_stdout@@Base+0x354c>
   17e8c:	cmp	r2, #103	; 0x67
   17e90:	bne	185ac <close_stdout@@Base+0x3528>
   17e94:	ldr	r2, [sp, #52]	; 0x34
   17e98:	ldr	r6, [sp, #60]	; 0x3c
   17e9c:	ldr	ip, [sp, #52]	; 0x34
   17ea0:	ldr	r0, [sp, #52]	; 0x34
   17ea4:	smull	r2, r1, r6, r2
   17ea8:	asr	r2, ip, #31
   17eac:	mov	ip, #100	; 0x64
   17eb0:	rsb	r2, r2, r1, asr #5
   17eb4:	mls	r2, ip, r2, r0
   17eb8:	add	r2, r2, r7
   17ebc:	smull	r6, r0, r6, r2
   17ec0:	asr	r1, r2, #31
   17ec4:	rsb	r0, r1, r0, asr #5
   17ec8:	mls	r0, ip, r0, r2
   17ecc:	cmp	r0, #0
   17ed0:	bge	1767c <close_stdout@@Base+0x25f8>
   17ed4:	movw	r2, #63636	; 0xf894
   17ed8:	ldr	r1, [sp, #52]	; 0x34
   17edc:	movt	r2, #65535	; 0xffff
   17ee0:	rsb	r2, r7, r2
   17ee4:	cmp	r1, r2
   17ee8:	rsblt	r0, r0, #0
   17eec:	addge	r0, r0, #100	; 0x64
   17ef0:	movlt	r6, #2
   17ef4:	movge	ip, #2
   17ef8:	strlt	r6, [sp, #76]	; 0x4c
   17efc:	strge	ip, [sp, #76]	; 0x4c
   17f00:	b	17684 <close_stdout@@Base+0x2600>
   17f04:	ldr	r9, [pc, #200]	; 17fd4 <close_stdout@@Base+0x2f50>
   17f08:	cmp	r3, #0
   17f0c:	add	r9, pc, r9
   17f10:	beq	17ca0 <close_stdout@@Base+0x2c1c>
   17f14:	b	1751c <close_stdout@@Base+0x2498>
   17f18:	cmp	r3, #69	; 0x45
   17f1c:	beq	1751c <close_stdout@@Base+0x2498>
   17f20:	ldr	r6, [sp, #40]	; 0x28
   17f24:	mov	r2, #0
   17f28:	mov	ip, #2
   17f2c:	str	r2, [sp, #88]	; 0x58
   17f30:	ldr	r0, [r6, #16]
   17f34:	b	176f4 <close_stdout@@Base+0x2670>
   17f38:	cmp	r3, #69	; 0x45
   17f3c:	beq	1751c <close_stdout@@Base+0x2498>
   17f40:	ldr	r0, [sp, #36]	; 0x24
   17f44:	b	17720 <close_stdout@@Base+0x269c>
   17f48:	ldr	r9, [pc, #136]	; 17fd8 <close_stdout@@Base+0x2f54>
   17f4c:	cmp	r3, #0
   17f50:	add	r9, pc, r9
   17f54:	beq	17ca0 <close_stdout@@Base+0x2c1c>
   17f58:	b	1751c <close_stdout@@Base+0x2498>
   17f5c:	cmp	r3, #0
   17f60:	bne	175cc <close_stdout@@Base+0x2548>
   17f64:	ldr	ip, [sp, #28]
   17f68:	bic	r3, r5, r5, asr #31
   17f6c:	cmp	r3, #1
   17f70:	movcs	r6, r3
   17f74:	movcc	r6, #1
   17f78:	rsb	r1, fp, ip
   17f7c:	cmp	r6, r1
   17f80:	bcs	173a8 <close_stdout@@Base+0x2324>
   17f84:	cmp	r8, #0
   17f88:	beq	17668 <close_stdout@@Base+0x25e4>
   17f8c:	cmp	r3, #1
   17f90:	bls	17fc0 <close_stdout@@Base+0x2f3c>
   17f94:	cmp	sl, #48	; 0x30
   17f98:	sub	r5, r5, #1
   17f9c:	moveq	r0, r8
   17fa0:	moveq	r2, r5
   17fa4:	movne	r0, r8
   17fa8:	movne	r2, r5
   17fac:	moveq	r1, sl
   17fb0:	movne	r1, #32
   17fb4:	bl	11984 <memset@plt>
   17fb8:	ldrb	r2, [r4]
   17fbc:	add	r8, r8, r5
   17fc0:	strb	r2, [r8], #1
   17fc4:	b	17668 <close_stdout@@Base+0x25e4>
   17fc8:	andeq	r9, r1, r8, lsl r0
   17fcc:	andeq	r0, r0, ip, ror r1
   17fd0:	andeq	r6, r0, r0, ror #27
   17fd4:	andeq	r6, r0, ip, asr fp
   17fd8:	andeq	r6, r0, ip, lsl #22
   17fdc:	andeq	r6, r0, r0, lsr #16
   17fe0:	andeq	r6, r0, ip, lsr #32
   17fe4:	cmp	r3, #69	; 0x45
   17fe8:	beq	1751c <close_stdout@@Base+0x2498>
   17fec:	ldr	r6, [sp, #40]	; 0x28
   17ff0:	mov	ip, #1
   17ff4:	str	ip, [sp, #76]	; 0x4c
   17ff8:	ldr	r0, [r6, #24]
   17ffc:	b	17684 <close_stdout@@Base+0x2600>
   18000:	ldr	ip, [sp, #40]	; 0x28
   18004:	mov	r6, #1
   18008:	str	r6, [sp, #76]	; 0x4c
   1800c:	ldr	r2, [ip, #24]
   18010:	ldr	ip, [sp, #56]	; 0x38
   18014:	add	r2, r2, #6
   18018:	smull	ip, r0, ip, r2
   1801c:	asr	r1, r2, #31
   18020:	add	r0, r0, r2
   18024:	rsb	r1, r1, r0, asr #2
   18028:	rsb	r1, r1, r1, lsl #3
   1802c:	rsb	r2, r1, r2
   18030:	add	r0, r2, r6
   18034:	b	17684 <close_stdout@@Base+0x2600>
   18038:	mov	ip, r2
   1803c:	mov	r6, #0
   18040:	ldr	lr, [sp, #32]
   18044:	cmp	r1, #0
   18048:	movne	r6, #1
   1804c:	movne	lr, #0
   18050:	str	lr, [sp, #32]
   18054:	b	173ec <close_stdout@@Base+0x2368>
   18058:	cmp	r3, #69	; 0x45
   1805c:	beq	1751c <close_stdout@@Base+0x2498>
   18060:	cmn	r5, #1
   18064:	beq	18630 <close_stdout@@Base+0x35ac>
   18068:	cmp	r5, #8
   1806c:	bgt	18748 <close_stdout@@Base+0x36c4>
   18070:	ldr	r0, [sp, #1224]	; 0x4c8
   18074:	mov	r2, r5
   18078:	ldr	ip, [sp, #68]	; 0x44
   1807c:	smull	r6, r1, ip, r0
   18080:	add	r2, r2, #1
   18084:	cmp	r2, #9
   18088:	asr	r0, r0, #31
   1808c:	rsb	r0, r0, r1, asr #2
   18090:	bne	1807c <close_stdout@@Base+0x2ff8>
   18094:	str	r5, [sp, #76]	; 0x4c
   18098:	b	17684 <close_stdout@@Base+0x2600>
   1809c:	cmp	r3, #69	; 0x45
   180a0:	beq	1751c <close_stdout@@Base+0x2498>
   180a4:	ldr	r6, [sp, #40]	; 0x28
   180a8:	mov	ip, #2
   180ac:	str	ip, [sp, #76]	; 0x4c
   180b0:	ldr	r0, [r6, #4]
   180b4:	b	17684 <close_stdout@@Base+0x2600>
   180b8:	ldr	lr, [sp, #40]	; 0x28
   180bc:	add	ip, sp, #96	; 0x60
   180c0:	add	r7, sp, #152	; 0x98
   180c4:	ldm	lr!, {r0, r1, r2, r3}
   180c8:	stmia	ip!, {r0, r1, r2, r3}
   180cc:	ldm	lr!, {r0, r1, r2, r3}
   180d0:	stmia	ip!, {r0, r1, r2, r3}
   180d4:	ldm	lr, {r0, r1, r2}
   180d8:	stm	ip, {r0, r1, r2}
   180dc:	add	r0, sp, #96	; 0x60
   180e0:	bl	11738 <mktime@plt>
   180e4:	ldr	r9, [sp, #68]	; 0x44
   180e8:	add	r2, r7, #9
   180ec:	lsr	ip, r0, #31
   180f0:	smull	r3, r1, r9, r0
   180f4:	asr	r3, r0, #31
   180f8:	cmp	ip, #0
   180fc:	mov	r6, r2
   18100:	rsb	r3, r3, r1, asr #2
   18104:	add	r1, r3, r3, lsl #2
   18108:	sub	r1, r0, r1, lsl #1
   1810c:	mov	r0, r3
   18110:	rsbne	r1, r1, #48	; 0x30
   18114:	addeq	r1, r1, #48	; 0x30
   18118:	cmp	r3, #0
   1811c:	uxtb	r1, r1
   18120:	strb	r1, [r2], #-1
   18124:	bne	180f0 <close_stdout@@Base+0x306c>
   18128:	cmp	r5, #1
   1812c:	movge	r3, r5
   18130:	movlt	r3, #1
   18134:	cmp	ip, #0
   18138:	beq	179e0 <close_stdout@@Base+0x295c>
   1813c:	cmp	sl, #45	; 0x2d
   18140:	movne	ip, #45	; 0x2d
   18144:	beq	18484 <close_stdout@@Base+0x3400>
   18148:	add	r7, r7, #10
   1814c:	str	r7, [sp, #52]	; 0x34
   18150:	rsb	r7, r7, r6
   18154:	add	r7, r3, r7
   18158:	sub	r7, r7, #1
   1815c:	cmp	r7, #0
   18160:	movgt	r2, #1
   18164:	strgt	r2, [sp, #76]	; 0x4c
   18168:	bgt	17a08 <close_stdout@@Base+0x2984>
   1816c:	ldr	r1, [sp, #28]
   18170:	bic	r9, r5, r5, asr #31
   18174:	cmp	r9, #1
   18178:	movcs	r7, r9
   1817c:	movcc	r7, #1
   18180:	rsb	r2, fp, r1
   18184:	cmp	r7, r2
   18188:	bcs	173a8 <close_stdout@@Base+0x2324>
   1818c:	cmp	r8, #0
   18190:	beq	181e4 <close_stdout@@Base+0x3160>
   18194:	cmp	r9, #1
   18198:	movls	r2, #0
   1819c:	movhi	r2, #1
   181a0:	cmp	r3, #0
   181a4:	movne	r2, #0
   181a8:	cmp	r2, #0
   181ac:	beq	181e0 <close_stdout@@Base+0x315c>
   181b0:	cmp	sl, #48	; 0x30
   181b4:	sub	lr, r5, #1
   181b8:	mov	r0, r8
   181bc:	addne	r8, r8, lr
   181c0:	mov	r2, lr
   181c4:	movne	r1, #32
   181c8:	beq	18728 <close_stdout@@Base+0x36a4>
   181cc:	str	r3, [sp, #24]
   181d0:	str	ip, [sp, #20]
   181d4:	bl	11984 <memset@plt>
   181d8:	ldr	ip, [sp, #20]
   181dc:	ldr	r3, [sp, #24]
   181e0:	strb	ip, [r8], #1
   181e4:	add	fp, fp, r7
   181e8:	b	17ad0 <close_stdout@@Base+0x2a4c>
   181ec:	ldr	ip, [sp, #28]
   181f0:	bic	r3, r5, r5, asr #31
   181f4:	cmp	r3, #1
   181f8:	movcs	r6, r3
   181fc:	movcc	r6, #1
   18200:	rsb	r2, fp, ip
   18204:	cmp	r6, r2
   18208:	bcs	173a8 <close_stdout@@Base+0x2324>
   1820c:	cmp	r8, #0
   18210:	beq	17668 <close_stdout@@Base+0x25e4>
   18214:	cmp	r3, #1
   18218:	bls	18244 <close_stdout@@Base+0x31c0>
   1821c:	cmp	sl, #48	; 0x30
   18220:	sub	r5, r5, #1
   18224:	moveq	r0, r8
   18228:	movne	r0, r8
   1822c:	moveq	r1, sl
   18230:	moveq	r2, r5
   18234:	movne	r2, r5
   18238:	movne	r1, #32
   1823c:	add	r8, r8, r5
   18240:	bl	11984 <memset@plt>
   18244:	mov	r3, #10
   18248:	strb	r3, [r8], #1
   1824c:	b	17668 <close_stdout@@Base+0x25e4>
   18250:	ldr	r9, [pc, #-636]	; 17fdc <close_stdout@@Base+0x2f58>
   18254:	add	r9, pc, r9
   18258:	b	17ca0 <close_stdout@@Base+0x2c1c>
   1825c:	mov	ip, #112	; 0x70
   18260:	mov	r6, #1
   18264:	mov	r9, ip
   18268:	b	18040 <close_stdout@@Base+0x2fbc>
   1826c:	cmp	r3, #69	; 0x45
   18270:	beq	1751c <close_stdout@@Base+0x2498>
   18274:	ldr	r6, [sp, #40]	; 0x28
   18278:	mov	ip, #2
   1827c:	str	ip, [sp, #76]	; 0x4c
   18280:	ldr	r0, [r6]
   18284:	b	17684 <close_stdout@@Base+0x2600>
   18288:	ldrb	r2, [r4, #1]
   1828c:	cmp	r2, #58	; 0x3a
   18290:	beq	18578 <close_stdout@@Base+0x34f4>
   18294:	add	r1, r4, #1
   18298:	mov	r7, #1
   1829c:	cmp	r2, #122	; 0x7a
   182a0:	moveq	r4, r1
   182a4:	bne	1751c <close_stdout@@Base+0x2498>
   182a8:	b	17758 <close_stdout@@Base+0x26d4>
   182ac:	cmp	r3, #69	; 0x45
   182b0:	beq	1751c <close_stdout@@Base+0x2498>
   182b4:	ldr	r6, [sp, #40]	; 0x28
   182b8:	mov	ip, #2
   182bc:	str	ip, [sp, #76]	; 0x4c
   182c0:	ldr	r0, [r6, #8]
   182c4:	b	17684 <close_stdout@@Base+0x2600>
   182c8:	cmp	r3, #69	; 0x45
   182cc:	beq	1751c <close_stdout@@Base+0x2498>
   182d0:	ldr	ip, [sp, #40]	; 0x28
   182d4:	ldr	r0, [ip, #8]
   182d8:	b	17720 <close_stdout@@Base+0x269c>
   182dc:	cmp	r3, #69	; 0x45
   182e0:	beq	1751c <close_stdout@@Base+0x2498>
   182e4:	ldr	r6, [sp, #40]	; 0x28
   182e8:	mov	ip, #2
   182ec:	str	ip, [sp, #76]	; 0x4c
   182f0:	ldr	r1, [r6, #28]
   182f4:	ldr	r2, [r6, #24]
   182f8:	ldr	r6, [sp, #56]	; 0x38
   182fc:	rsb	r2, r2, r1
   18300:	add	r2, r2, #7
   18304:	smull	r6, r0, r6, r2
   18308:	asr	r1, r2, #31
   1830c:	add	r0, r0, r2
   18310:	rsb	r0, r1, r0, asr ip
   18314:	b	17684 <close_stdout@@Base+0x2600>
   18318:	ldr	ip, [sp, #32]
   1831c:	cmp	r1, #0
   18320:	movne	ip, #1
   18324:	str	ip, [sp, #32]
   18328:	b	17804 <close_stdout@@Base+0x2780>
   1832c:	lsr	ip, ip, #31
   18330:	str	ip, [sp, #52]	; 0x34
   18334:	ldr	ip, [sp, #76]	; 0x4c
   18338:	mov	r0, #100	; 0x64
   1833c:	movw	r1, #10000	; 0x2710
   18340:	mul	r2, r0, r2
   18344:	mla	r0, r1, ip, r2
   18348:	mov	r1, #1
   1834c:	mov	ip, #9
   18350:	mov	r2, #20
   18354:	str	r1, [sp, #88]	; 0x58
   18358:	str	ip, [sp, #76]	; 0x4c
   1835c:	add	r0, r0, r6
   18360:	b	17694 <close_stdout@@Base+0x2610>
   18364:	ldr	r1, [sp, #76]	; 0x4c
   18368:	mov	r0, #100	; 0x64
   1836c:	lsr	ip, ip, #31
   18370:	mov	r6, #1
   18374:	str	ip, [sp, #52]	; 0x34
   18378:	mov	ip, #6
   1837c:	mla	r0, r0, r1, r2
   18380:	str	r6, [sp, #88]	; 0x58
   18384:	mov	r2, #4
   18388:	str	ip, [sp, #76]	; 0x4c
   1838c:	b	17694 <close_stdout@@Base+0x2610>
   18390:	ldr	r1, [sp, #76]	; 0x4c
   18394:	mov	r0, #100	; 0x64
   18398:	lsr	ip, ip, #31
   1839c:	mov	r6, #1
   183a0:	str	ip, [sp, #52]	; 0x34
   183a4:	mov	ip, #5
   183a8:	mla	r0, r0, r1, r2
   183ac:	str	r6, [sp, #88]	; 0x58
   183b0:	mov	r2, #0
   183b4:	str	ip, [sp, #76]	; 0x4c
   183b8:	b	17694 <close_stdout@@Base+0x2610>
   183bc:	cmp	r6, #0
   183c0:	bne	1832c <close_stdout@@Base+0x32a8>
   183c4:	cmp	r2, #0
   183c8:	bne	18364 <close_stdout@@Base+0x32e0>
   183cc:	lsr	ip, ip, #31
   183d0:	ldr	r0, [sp, #76]	; 0x4c
   183d4:	mov	r1, #1
   183d8:	mov	r6, #3
   183dc:	str	ip, [sp, #52]	; 0x34
   183e0:	str	r1, [sp, #88]	; 0x58
   183e4:	str	r6, [sp, #76]	; 0x4c
   183e8:	b	17694 <close_stdout@@Base+0x2610>
   183ec:	mov	ip, #45	; 0x2d
   183f0:	cmp	sl, #45	; 0x2d
   183f4:	bne	18148 <close_stdout@@Base+0x30c4>
   183f8:	ldr	r1, [sp, #28]
   183fc:	bic	r9, r5, r5, asr #31
   18400:	cmp	r9, #1
   18404:	movcs	sl, r9
   18408:	movcc	sl, #1
   1840c:	rsb	r2, fp, r1
   18410:	cmp	sl, r2
   18414:	bcs	173a8 <close_stdout@@Base+0x2324>
   18418:	cmp	r8, #0
   1841c:	beq	18464 <close_stdout@@Base+0x33e0>
   18420:	cmp	r9, #1
   18424:	movls	r2, #0
   18428:	movhi	r2, #1
   1842c:	cmp	r3, #0
   18430:	movne	r2, #0
   18434:	cmp	r2, #0
   18438:	beq	18460 <close_stdout@@Base+0x33dc>
   1843c:	sub	r2, r5, #1
   18440:	mov	r0, r8
   18444:	mov	r1, #32
   18448:	str	r3, [sp, #24]
   1844c:	str	ip, [sp, #20]
   18450:	add	r8, r8, r2
   18454:	bl	11984 <memset@plt>
   18458:	ldr	ip, [sp, #20]
   1845c:	ldr	r3, [sp, #24]
   18460:	strb	ip, [r8], #1
   18464:	add	fp, fp, sl
   18468:	add	r7, r7, #10
   1846c:	mov	sl, #45	; 0x2d
   18470:	str	r7, [sp, #52]	; 0x34
   18474:	b	17ad0 <close_stdout@@Base+0x2a4c>
   18478:	bl	11768 <memcpy@plt>
   1847c:	ldr	ip, [sp, #20]
   18480:	b	17b6c <close_stdout@@Base+0x2ae8>
   18484:	mov	ip, sl
   18488:	b	183f8 <close_stdout@@Base+0x3374>
   1848c:	mov	ip, #43	; 0x2b
   18490:	b	183f0 <close_stdout@@Base+0x336c>
   18494:	ldr	r0, [sp, #28]
   18498:	rsb	r2, fp, r0
   1849c:	cmp	r7, r2
   184a0:	bcs	173a8 <close_stdout@@Base+0x2324>
   184a4:	cmp	r8, #0
   184a8:	beq	184d0 <close_stdout@@Base+0x344c>
   184ac:	mov	r0, r8
   184b0:	mov	r1, #32
   184b4:	mov	r2, r7
   184b8:	str	r3, [sp, #24]
   184bc:	str	ip, [sp, #20]
   184c0:	bl	11984 <memset@plt>
   184c4:	ldr	ip, [sp, #20]
   184c8:	add	r8, r8, r7
   184cc:	ldr	r3, [sp, #24]
   184d0:	cmp	r5, r7
   184d4:	ldr	r1, [sp, #76]	; 0x4c
   184d8:	rsbgt	r5, r7, r5
   184dc:	add	fp, fp, r7
   184e0:	movle	r5, #0
   184e4:	bicgt	r9, r5, r5, asr #31
   184e8:	movle	r9, r5
   184ec:	cmp	r1, #0
   184f0:	beq	17ad0 <close_stdout@@Base+0x2a4c>
   184f4:	ldr	r0, [sp, #28]
   184f8:	cmp	r9, #1
   184fc:	movcs	r7, r9
   18500:	movcc	r7, #1
   18504:	rsb	r2, fp, r0
   18508:	cmp	r7, r2
   1850c:	bcs	173a8 <close_stdout@@Base+0x2324>
   18510:	cmp	r8, #0
   18514:	beq	181e4 <close_stdout@@Base+0x3160>
   18518:	cmp	r9, #1
   1851c:	movls	r2, #0
   18520:	movhi	r2, #1
   18524:	cmp	r3, #0
   18528:	movne	r2, #0
   1852c:	cmp	r2, #0
   18530:	beq	181e0 <close_stdout@@Base+0x315c>
   18534:	sub	r2, r5, #1
   18538:	mov	r0, r8
   1853c:	mov	r1, #32
   18540:	add	r8, r8, r2
   18544:	b	181cc <close_stdout@@Base+0x3148>
   18548:	bic	r9, r5, r5, asr #31
   1854c:	b	17ad0 <close_stdout@@Base+0x2a4c>
   18550:	mov	fp, r2
   18554:	b	174f8 <close_stdout@@Base+0x2474>
   18558:	bl	11768 <memcpy@plt>
   1855c:	b	178f4 <close_stdout@@Base+0x2870>
   18560:	mov	ip, #0
   18564:	str	ip, [sp, #76]	; 0x4c
   18568:	b	176b0 <close_stdout@@Base+0x262c>
   1856c:	mov	r6, #0
   18570:	str	r6, [sp, #76]	; 0x4c
   18574:	b	176b0 <close_stdout@@Base+0x262c>
   18578:	add	r0, r4, #2
   1857c:	mov	r7, #1
   18580:	mov	r1, r0
   18584:	ldrb	r2, [r0], #1
   18588:	add	r7, r7, #1
   1858c:	cmp	r2, #58	; 0x3a
   18590:	bne	1829c <close_stdout@@Base+0x3218>
   18594:	b	18580 <close_stdout@@Base+0x34fc>
   18598:	mov	r0, r8
   1859c:	ldr	r1, [sp, #84]	; 0x54
   185a0:	mov	r2, r6
   185a4:	bl	16f2c <close_stdout@@Base+0x1ea8>
   185a8:	b	178f4 <close_stdout@@Base+0x2870>
   185ac:	ldr	r6, [sp, #56]	; 0x38
   185b0:	asr	r2, r1, #31
   185b4:	mov	ip, #2
   185b8:	str	ip, [sp, #76]	; 0x4c
   185bc:	smull	r6, r0, r6, r1
   185c0:	add	r1, r0, r1
   185c4:	rsb	r2, r2, r1, asr ip
   185c8:	add	r0, r2, #1
   185cc:	b	17684 <close_stdout@@Base+0x2600>
   185d0:	ldr	r2, [sp, #52]	; 0x34
   185d4:	movw	r1, #63636	; 0xf894
   185d8:	ldr	r6, [sp, #52]	; 0x34
   185dc:	movt	r1, #65535	; 0xffff
   185e0:	rsb	r1, r7, r1
   185e4:	add	r0, r2, #1888	; 0x760
   185e8:	cmp	r6, r1
   185ec:	add	r0, r0, #12
   185f0:	mov	r2, #0
   185f4:	mov	ip, #4
   185f8:	movge	r1, #0
   185fc:	movlt	r1, #1
   18600:	add	r0, r0, r7
   18604:	str	r1, [sp, #52]	; 0x34
   18608:	str	r2, [sp, #88]	; 0x58
   1860c:	str	ip, [sp, #76]	; 0x4c
   18610:	b	17694 <close_stdout@@Base+0x2610>
   18614:	mov	r2, #32
   18618:	mov	r6, #0
   1861c:	strb	r2, [sp, #140]	; 0x8c
   18620:	mov	r2, #37	; 0x25
   18624:	str	r6, [sp, #76]	; 0x4c
   18628:	strb	r2, [sp, #141]	; 0x8d
   1862c:	b	176c4 <close_stdout@@Base+0x2640>
   18630:	mov	r5, #9
   18634:	ldr	r0, [sp, #1224]	; 0x4c8
   18638:	str	r5, [sp, #76]	; 0x4c
   1863c:	b	17684 <close_stdout@@Base+0x2600>
   18640:	ldrb	r2, [r4]
   18644:	b	175c4 <close_stdout@@Base+0x2540>
   18648:	mov	r1, sl
   1864c:	str	r3, [sp, #24]
   18650:	str	ip, [sp, #20]
   18654:	add	r8, r8, r5
   18658:	bl	11984 <memset@plt>
   1865c:	ldr	r3, [sp, #24]
   18660:	ldr	ip, [sp, #20]
   18664:	b	17a98 <close_stdout@@Base+0x2a14>
   18668:	sub	r6, r6, #1
   1866c:	tst	r6, #3
   18670:	movwne	r1, #365	; 0x16d
   18674:	bne	186c4 <close_stdout@@Base+0x3640>
   18678:	ldr	r1, [sp, #60]	; 0x3c
   1867c:	smull	ip, r1, r1, r6
   18680:	asr	ip, r6, #31
   18684:	rsb	r0, ip, r1, asr #5
   18688:	str	r1, [sp, #92]	; 0x5c
   1868c:	mov	r1, #100	; 0x64
   18690:	mls	r1, r1, r0, r6
   18694:	cmp	r1, #0
   18698:	movwne	r1, #366	; 0x16e
   1869c:	bne	186c4 <close_stdout@@Base+0x3640>
   186a0:	ldr	r0, [sp, #92]	; 0x5c
   186a4:	mov	r1, #400	; 0x190
   186a8:	rsb	ip, ip, r0, asr #7
   186ac:	movw	r0, #366	; 0x16e
   186b0:	mls	r1, r1, ip, r6
   186b4:	movw	ip, #365	; 0x16d
   186b8:	cmp	r1, #0
   186bc:	moveq	r1, r0
   186c0:	movne	r1, ip
   186c4:	ldr	ip, [sp, #76]	; 0x4c
   186c8:	add	r6, r7, r1
   186cc:	ldr	r0, [sp, #56]	; 0x38
   186d0:	mvn	r7, #0
   186d4:	rsb	r1, ip, r6
   186d8:	add	r1, r1, #380	; 0x17c
   186dc:	add	r1, r1, #2
   186e0:	smull	r0, ip, r0, r1
   186e4:	asr	r0, r1, #31
   186e8:	add	ip, ip, r1
   186ec:	rsb	r0, r0, ip, asr #2
   186f0:	rsb	r0, r0, r0, lsl #3
   186f4:	rsb	r1, r0, r1
   186f8:	rsb	r1, r1, r6
   186fc:	add	r1, r1, #3
   18700:	b	17e84 <close_stdout@@Base+0x2e00>
   18704:	cmp	r1, #0
   18708:	movle	r0, #0
   1870c:	movgt	r0, #1
   18710:	b	17c10 <close_stdout@@Base+0x2b8c>
   18714:	ldr	ip, [pc, #-1852]	; 17fe0 <close_stdout@@Base+0x2f5c>
   18718:	ldr	r6, [sp, #84]	; 0x54
   1871c:	add	ip, pc, ip
   18720:	str	ip, [sp, #84]	; 0x54
   18724:	b	17878 <close_stdout@@Base+0x27f4>
   18728:	mov	r1, sl
   1872c:	str	r3, [sp, #24]
   18730:	str	ip, [sp, #20]
   18734:	add	r8, r8, lr
   18738:	bl	11984 <memset@plt>
   1873c:	ldr	r3, [sp, #24]
   18740:	ldr	ip, [sp, #20]
   18744:	b	181e0 <close_stdout@@Base+0x315c>
   18748:	ldr	r0, [sp, #1224]	; 0x4c8
   1874c:	str	r5, [sp, #76]	; 0x4c
   18750:	b	17684 <close_stdout@@Base+0x2600>
   18754:	bl	11798 <__stack_chk_fail@plt>
   18758:	mov	ip, #0
   1875c:	str	ip, [sp, #76]	; 0x4c
   18760:	b	176c4 <close_stdout@@Base+0x2640>
   18764:	push	{r4, r5, lr}
   18768:	sub	sp, sp, #20
   1876c:	mov	r5, r1
   18770:	mov	r4, r2
   18774:	ldr	ip, [sp, #32]
   18778:	mov	r1, r0
   1877c:	ldr	lr, [sp, #36]	; 0x24
   18780:	mov	r2, r5
   18784:	mov	r0, #0
   18788:	stm	sp, {r3, ip}
   1878c:	mov	r3, r4
   18790:	str	lr, [sp, #8]
   18794:	bl	16fc4 <close_stdout@@Base+0x1f40>
   18798:	add	sp, sp, #20
   1879c:	pop	{r4, r5, pc}
   187a0:	push	{r4, r5, r6, r7, lr}
   187a4:	cmp	r1, #0
   187a8:	sub	sp, sp, #36	; 0x24
   187ac:	ldr	r7, [pc, #896]	; 18b34 <close_stdout@@Base+0x3ab0>
   187b0:	mov	ip, r3
   187b4:	mov	r5, r0
   187b8:	add	r7, pc, r7
   187bc:	ldr	r4, [sp, #56]	; 0x38
   187c0:	ldr	r6, [sp, #60]	; 0x3c
   187c4:	beq	18b08 <close_stdout@@Base+0x3a84>
   187c8:	str	r2, [sp]
   187cc:	mov	r3, r1
   187d0:	ldr	r2, [pc, #864]	; 18b38 <close_stdout@@Base+0x3ab4>
   187d4:	mov	r1, #1
   187d8:	str	ip, [sp, #4]
   187dc:	add	r2, pc, r2
   187e0:	bl	119b4 <__fprintf_chk@plt>
   187e4:	ldr	r1, [pc, #848]	; 18b3c <close_stdout@@Base+0x3ab8>
   187e8:	mov	r2, #5
   187ec:	mov	r0, #0
   187f0:	add	r1, pc, r1
   187f4:	bl	1178c <dcgettext@plt>
   187f8:	ldr	r2, [pc, #832]	; 18b40 <close_stdout@@Base+0x3abc>
   187fc:	movw	ip, #2013	; 0x7dd
   18800:	mov	r1, #1
   18804:	ldr	r2, [r7, r2]
   18808:	str	ip, [sp]
   1880c:	mov	r3, r0
   18810:	mov	r0, r5
   18814:	bl	119b4 <__fprintf_chk@plt>
   18818:	ldr	r1, [pc, #804]	; 18b44 <close_stdout@@Base+0x3ac0>
   1881c:	mov	r0, #0
   18820:	mov	r2, #5
   18824:	add	r1, pc, r1
   18828:	bl	1178c <dcgettext@plt>
   1882c:	mov	r1, r5
   18830:	bl	116d8 <fputs_unlocked@plt>
   18834:	cmp	r6, #9
   18838:	addls	pc, pc, r6, lsl #2
   1883c:	b	18b24 <close_stdout@@Base+0x3aa0>
   18840:	b	188d4 <close_stdout@@Base+0x3850>
   18844:	b	188d8 <close_stdout@@Base+0x3854>
   18848:	b	18908 <close_stdout@@Base+0x3884>
   1884c:	b	1893c <close_stdout@@Base+0x38b8>
   18850:	b	18978 <close_stdout@@Base+0x38f4>
   18854:	b	189b8 <close_stdout@@Base+0x3934>
   18858:	b	18a00 <close_stdout@@Base+0x397c>
   1885c:	b	18a50 <close_stdout@@Base+0x39cc>
   18860:	b	18aa8 <close_stdout@@Base+0x3a24>
   18864:	b	18868 <close_stdout@@Base+0x37e4>
   18868:	ldr	r1, [pc, #728]	; 18b48 <close_stdout@@Base+0x3ac4>
   1886c:	mov	r0, #0
   18870:	add	r1, pc, r1
   18874:	mov	r2, #5
   18878:	bl	1178c <dcgettext@plt>
   1887c:	ldm	r4, {r3, ip}
   18880:	mov	r1, #1
   18884:	str	ip, [sp]
   18888:	ldr	ip, [r4, #8]
   1888c:	str	ip, [sp, #4]
   18890:	ldr	ip, [r4, #12]
   18894:	str	ip, [sp, #8]
   18898:	ldr	ip, [r4, #16]
   1889c:	str	ip, [sp, #12]
   188a0:	ldr	ip, [r4, #20]
   188a4:	str	ip, [sp, #16]
   188a8:	ldr	ip, [r4, #24]
   188ac:	str	ip, [sp, #20]
   188b0:	ldr	ip, [r4, #28]
   188b4:	str	ip, [sp, #24]
   188b8:	ldr	ip, [r4, #32]
   188bc:	str	ip, [sp, #28]
   188c0:	mov	r2, r0
   188c4:	mov	r0, r5
   188c8:	bl	119b4 <__fprintf_chk@plt>
   188cc:	add	sp, sp, #36	; 0x24
   188d0:	pop	{r4, r5, r6, r7, pc}
   188d4:	bl	11ab0 <abort@plt>
   188d8:	ldr	r1, [pc, #620]	; 18b4c <close_stdout@@Base+0x3ac8>
   188dc:	mov	r2, #5
   188e0:	mov	r0, #0
   188e4:	add	r1, pc, r1
   188e8:	bl	1178c <dcgettext@plt>
   188ec:	ldr	r3, [r4]
   188f0:	mov	r1, #1
   188f4:	mov	r2, r0
   188f8:	mov	r0, r5
   188fc:	add	sp, sp, #36	; 0x24
   18900:	pop	{r4, r5, r6, r7, lr}
   18904:	b	119b4 <__fprintf_chk@plt>
   18908:	ldr	r1, [pc, #576]	; 18b50 <close_stdout@@Base+0x3acc>
   1890c:	mov	r2, #5
   18910:	mov	r0, #0
   18914:	add	r1, pc, r1
   18918:	bl	1178c <dcgettext@plt>
   1891c:	ldm	r4, {r3, ip}
   18920:	mov	r1, #1
   18924:	str	ip, [sp, #56]	; 0x38
   18928:	mov	r2, r0
   1892c:	mov	r0, r5
   18930:	add	sp, sp, #36	; 0x24
   18934:	pop	{r4, r5, r6, r7, lr}
   18938:	b	119b4 <__fprintf_chk@plt>
   1893c:	ldr	r1, [pc, #528]	; 18b54 <close_stdout@@Base+0x3ad0>
   18940:	mov	r2, #5
   18944:	mov	r0, #0
   18948:	add	r1, pc, r1
   1894c:	bl	1178c <dcgettext@plt>
   18950:	ldm	r4, {r3, ip}
   18954:	mov	r1, #1
   18958:	str	ip, [sp, #56]	; 0x38
   1895c:	ldr	ip, [r4, #8]
   18960:	str	ip, [sp, #60]	; 0x3c
   18964:	mov	r2, r0
   18968:	mov	r0, r5
   1896c:	add	sp, sp, #36	; 0x24
   18970:	pop	{r4, r5, r6, r7, lr}
   18974:	b	119b4 <__fprintf_chk@plt>
   18978:	ldr	r1, [pc, #472]	; 18b58 <close_stdout@@Base+0x3ad4>
   1897c:	mov	r2, #5
   18980:	mov	r0, #0
   18984:	add	r1, pc, r1
   18988:	bl	1178c <dcgettext@plt>
   1898c:	ldm	r4, {r3, ip}
   18990:	mov	r1, #1
   18994:	str	ip, [sp]
   18998:	ldr	ip, [r4, #8]
   1899c:	str	ip, [sp, #4]
   189a0:	ldr	ip, [r4, #12]
   189a4:	str	ip, [sp, #8]
   189a8:	mov	r2, r0
   189ac:	mov	r0, r5
   189b0:	bl	119b4 <__fprintf_chk@plt>
   189b4:	b	188cc <close_stdout@@Base+0x3848>
   189b8:	ldr	r1, [pc, #412]	; 18b5c <close_stdout@@Base+0x3ad8>
   189bc:	mov	r2, #5
   189c0:	mov	r0, #0
   189c4:	add	r1, pc, r1
   189c8:	bl	1178c <dcgettext@plt>
   189cc:	ldm	r4, {r3, ip}
   189d0:	mov	r1, #1
   189d4:	str	ip, [sp]
   189d8:	ldr	ip, [r4, #8]
   189dc:	str	ip, [sp, #4]
   189e0:	ldr	ip, [r4, #12]
   189e4:	str	ip, [sp, #8]
   189e8:	ldr	ip, [r4, #16]
   189ec:	str	ip, [sp, #12]
   189f0:	mov	r2, r0
   189f4:	mov	r0, r5
   189f8:	bl	119b4 <__fprintf_chk@plt>
   189fc:	b	188cc <close_stdout@@Base+0x3848>
   18a00:	ldr	r1, [pc, #344]	; 18b60 <close_stdout@@Base+0x3adc>
   18a04:	mov	r2, #5
   18a08:	mov	r0, #0
   18a0c:	add	r1, pc, r1
   18a10:	bl	1178c <dcgettext@plt>
   18a14:	ldm	r4, {r3, ip}
   18a18:	mov	r1, #1
   18a1c:	str	ip, [sp]
   18a20:	ldr	ip, [r4, #8]
   18a24:	str	ip, [sp, #4]
   18a28:	ldr	ip, [r4, #12]
   18a2c:	str	ip, [sp, #8]
   18a30:	ldr	ip, [r4, #16]
   18a34:	str	ip, [sp, #12]
   18a38:	ldr	ip, [r4, #20]
   18a3c:	str	ip, [sp, #16]
   18a40:	mov	r2, r0
   18a44:	mov	r0, r5
   18a48:	bl	119b4 <__fprintf_chk@plt>
   18a4c:	b	188cc <close_stdout@@Base+0x3848>
   18a50:	ldr	r1, [pc, #268]	; 18b64 <close_stdout@@Base+0x3ae0>
   18a54:	mov	r2, #5
   18a58:	mov	r0, #0
   18a5c:	add	r1, pc, r1
   18a60:	bl	1178c <dcgettext@plt>
   18a64:	ldm	r4, {r3, ip}
   18a68:	mov	r1, #1
   18a6c:	str	ip, [sp]
   18a70:	ldr	ip, [r4, #8]
   18a74:	str	ip, [sp, #4]
   18a78:	ldr	ip, [r4, #12]
   18a7c:	str	ip, [sp, #8]
   18a80:	ldr	ip, [r4, #16]
   18a84:	str	ip, [sp, #12]
   18a88:	ldr	ip, [r4, #20]
   18a8c:	str	ip, [sp, #16]
   18a90:	ldr	ip, [r4, #24]
   18a94:	str	ip, [sp, #20]
   18a98:	mov	r2, r0
   18a9c:	mov	r0, r5
   18aa0:	bl	119b4 <__fprintf_chk@plt>
   18aa4:	b	188cc <close_stdout@@Base+0x3848>
   18aa8:	ldr	r1, [pc, #184]	; 18b68 <close_stdout@@Base+0x3ae4>
   18aac:	mov	r2, #5
   18ab0:	mov	r0, #0
   18ab4:	add	r1, pc, r1
   18ab8:	bl	1178c <dcgettext@plt>
   18abc:	ldm	r4, {r3, ip}
   18ac0:	mov	r1, #1
   18ac4:	str	ip, [sp]
   18ac8:	ldr	ip, [r4, #8]
   18acc:	str	ip, [sp, #4]
   18ad0:	ldr	ip, [r4, #12]
   18ad4:	str	ip, [sp, #8]
   18ad8:	ldr	ip, [r4, #16]
   18adc:	str	ip, [sp, #12]
   18ae0:	ldr	ip, [r4, #20]
   18ae4:	str	ip, [sp, #16]
   18ae8:	ldr	ip, [r4, #24]
   18aec:	str	ip, [sp, #20]
   18af0:	ldr	ip, [r4, #28]
   18af4:	str	ip, [sp, #24]
   18af8:	mov	r2, r0
   18afc:	mov	r0, r5
   18b00:	bl	119b4 <__fprintf_chk@plt>
   18b04:	b	188cc <close_stdout@@Base+0x3848>
   18b08:	str	r3, [sp]
   18b0c:	mov	r3, r2
   18b10:	ldr	r2, [pc, #84]	; 18b6c <close_stdout@@Base+0x3ae8>
   18b14:	mov	r1, #1
   18b18:	add	r2, pc, r2
   18b1c:	bl	119b4 <__fprintf_chk@plt>
   18b20:	b	187e4 <close_stdout@@Base+0x3760>
   18b24:	ldr	r1, [pc, #68]	; 18b70 <close_stdout@@Base+0x3aec>
   18b28:	mov	r0, #0
   18b2c:	add	r1, pc, r1
   18b30:	b	18874 <close_stdout@@Base+0x37f0>
   18b34:	andeq	r7, r1, r0, asr #16
   18b38:	andeq	r6, r0, ip, lsr #5
   18b3c:	andeq	r6, r0, ip, lsr #5
   18b40:	andeq	r0, r0, r8, lsr #3
   18b44:	andeq	r6, r0, ip, ror r2
   18b48:	andeq	r6, r0, r8, lsl #8
   18b4c:	andeq	r6, r0, r8, lsl #5
   18b50:	andeq	r6, r0, r8, ror #4
   18b54:	andeq	r6, r0, ip, asr #4
   18b58:	andeq	r6, r0, ip, lsr #4
   18b5c:	andeq	r6, r0, ip, lsl #4
   18b60:	andeq	r6, r0, r8, ror #3
   18b64:	andeq	r6, r0, r0, asr #3
   18b68:	muleq	r0, r4, r1
   18b6c:	andeq	r5, r0, ip, ror pc
   18b70:	andeq	r6, r0, r0, lsl #3
   18b74:	push	{r4, r5, lr}
   18b78:	sub	sp, sp, #12
   18b7c:	ldr	r5, [sp, #24]
   18b80:	ldr	ip, [r5]
   18b84:	cmp	ip, #0
   18b88:	beq	18ba4 <close_stdout@@Base+0x3b20>
   18b8c:	mov	lr, r5
   18b90:	mov	ip, #0
   18b94:	ldr	r4, [lr, #4]!
   18b98:	add	ip, ip, #1
   18b9c:	cmp	r4, #0
   18ba0:	bne	18b94 <close_stdout@@Base+0x3b10>
   18ba4:	stm	sp, {r5, ip}
   18ba8:	bl	187a0 <close_stdout@@Base+0x371c>
   18bac:	add	sp, sp, #12
   18bb0:	pop	{r4, r5, pc}
   18bb4:	push	{r4, r5, r6, r7, lr}
   18bb8:	sub	sp, sp, #60	; 0x3c
   18bbc:	ldr	r4, [pc, #100]	; 18c28 <close_stdout@@Base+0x3ba4>
   18bc0:	mov	ip, #0
   18bc4:	ldr	r5, [pc, #96]	; 18c2c <close_stdout@@Base+0x3ba8>
   18bc8:	mov	lr, ip
   18bcc:	add	r4, pc, r4
   18bd0:	ldr	r6, [sp, #80]	; 0x50
   18bd4:	ldr	r7, [r4, r5]
   18bd8:	add	r5, sp, #12
   18bdc:	ldr	r4, [r7]
   18be0:	str	r4, [sp, #52]	; 0x34
   18be4:	ldr	r4, [r6, ip]
   18be8:	cmp	r4, #0
   18bec:	str	r4, [r5, ip]
   18bf0:	beq	18c04 <close_stdout@@Base+0x3b80>
   18bf4:	add	lr, lr, #1
   18bf8:	add	ip, ip, #4
   18bfc:	cmp	lr, #10
   18c00:	bne	18be4 <close_stdout@@Base+0x3b60>
   18c04:	stm	sp, {r5, lr}
   18c08:	bl	187a0 <close_stdout@@Base+0x371c>
   18c0c:	ldr	r2, [sp, #52]	; 0x34
   18c10:	ldr	r3, [r7]
   18c14:	cmp	r2, r3
   18c18:	bne	18c24 <close_stdout@@Base+0x3ba0>
   18c1c:	add	sp, sp, #60	; 0x3c
   18c20:	pop	{r4, r5, r6, r7, pc}
   18c24:	bl	11798 <__stack_chk_fail@plt>
   18c28:	andeq	r7, r1, ip, lsr #8
   18c2c:	andeq	r0, r0, ip, ror r1
   18c30:	push	{r3}		; (str r3, [sp, #-4]!)
   18c34:	push	{r4, lr}
   18c38:	sub	sp, sp, #20
   18c3c:	ldr	lr, [pc, #72]	; 18c8c <close_stdout@@Base+0x3c08>
   18c40:	add	ip, sp, #32
   18c44:	ldr	r4, [pc, #68]	; 18c90 <close_stdout@@Base+0x3c0c>
   18c48:	add	lr, pc, lr
   18c4c:	ldr	r3, [sp, #28]
   18c50:	ldr	r4, [lr, r4]
   18c54:	str	ip, [sp]
   18c58:	str	ip, [sp, #8]
   18c5c:	ldr	ip, [r4]
   18c60:	str	ip, [sp, #12]
   18c64:	bl	18bb4 <close_stdout@@Base+0x3b30>
   18c68:	ldr	r2, [sp, #12]
   18c6c:	ldr	r3, [r4]
   18c70:	cmp	r2, r3
   18c74:	bne	18c88 <close_stdout@@Base+0x3c04>
   18c78:	add	sp, sp, #20
   18c7c:	pop	{r4, lr}
   18c80:	add	sp, sp, #4
   18c84:	bx	lr
   18c88:	bl	11798 <__stack_chk_fail@plt>
   18c8c:			; <UNDEFINED> instruction: 0x000173b0
   18c90:	andeq	r0, r0, ip, ror r1
   18c94:	ldr	r1, [pc, #132]	; 18d20 <close_stdout@@Base+0x3c9c>
   18c98:	mov	r2, #5
   18c9c:	push	{r4, lr}
   18ca0:	add	r1, pc, r1
   18ca4:	mov	r0, #0
   18ca8:	ldr	r4, [pc, #116]	; 18d24 <close_stdout@@Base+0x3ca0>
   18cac:	bl	1178c <dcgettext@plt>
   18cb0:	ldr	r2, [pc, #112]	; 18d28 <close_stdout@@Base+0x3ca4>
   18cb4:	add	r4, pc, r4
   18cb8:	add	r2, pc, r2
   18cbc:	mov	r1, r0
   18cc0:	mov	r0, #1
   18cc4:	bl	1199c <__printf_chk@plt>
   18cc8:	ldr	r1, [pc, #92]	; 18d2c <close_stdout@@Base+0x3ca8>
   18ccc:	mov	r2, #5
   18cd0:	mov	r0, #0
   18cd4:	add	r1, pc, r1
   18cd8:	bl	1178c <dcgettext@plt>
   18cdc:	ldr	r2, [pc, #76]	; 18d30 <close_stdout@@Base+0x3cac>
   18ce0:	ldr	r3, [pc, #76]	; 18d34 <close_stdout@@Base+0x3cb0>
   18ce4:	add	r2, pc, r2
   18ce8:	add	r3, pc, r3
   18cec:	mov	r1, r0
   18cf0:	mov	r0, #1
   18cf4:	bl	1199c <__printf_chk@plt>
   18cf8:	ldr	r1, [pc, #56]	; 18d38 <close_stdout@@Base+0x3cb4>
   18cfc:	mov	r0, #0
   18d00:	mov	r2, #5
   18d04:	add	r1, pc, r1
   18d08:	bl	1178c <dcgettext@plt>
   18d0c:	ldr	r3, [pc, #40]	; 18d3c <close_stdout@@Base+0x3cb8>
   18d10:	ldr	r3, [r4, r3]
   18d14:	pop	{r4, lr}
   18d18:	ldr	r1, [r3]
   18d1c:	b	116d8 <fputs_unlocked@plt>
   18d20:	andeq	r6, r0, r8, asr #32
   18d24:	andeq	r7, r1, r4, asr #6
   18d28:	andeq	r6, r0, r8, asr #32
   18d2c:	andeq	r6, r0, r4, asr #32
   18d30:	andeq	r5, r0, r0, lsr #19
   18d34:	andeq	r5, r0, ip, lsr #19
   18d38:	andeq	r6, r0, r8, lsr #32
   18d3c:	muleq	r0, r8, r1
   18d40:	push	{r4, lr}
   18d44:	mov	r4, r0
   18d48:	bl	1187c <malloc@plt>
   18d4c:	rsbs	r3, r0, #1
   18d50:	movcc	r3, #0
   18d54:	cmp	r4, #0
   18d58:	moveq	r3, #0
   18d5c:	cmp	r3, #0
   18d60:	popeq	{r4, pc}
   18d64:	bl	18f54 <close_stdout@@Base+0x3ed0>
   18d68:	push	{r3, r4, r5, lr}
   18d6c:	mov	r4, r0
   18d70:	mvn	r0, #0
   18d74:	mov	r5, r1
   18d78:	bl	1c560 <close_stdout@@Base+0x74dc>
   18d7c:	cmp	r0, r4
   18d80:	bcc	18d90 <close_stdout@@Base+0x3d0c>
   18d84:	mul	r0, r4, r5
   18d88:	pop	{r3, r4, r5, lr}
   18d8c:	b	18d40 <close_stdout@@Base+0x3cbc>
   18d90:	bl	18f54 <close_stdout@@Base+0x3ed0>
   18d94:	b	18d40 <close_stdout@@Base+0x3cbc>
   18d98:	rsbs	r3, r1, #1
   18d9c:	push	{r4, lr}
   18da0:	movcc	r3, #0
   18da4:	cmp	r0, #0
   18da8:	mov	r4, r1
   18dac:	moveq	r3, #0
   18db0:	cmp	r3, #0
   18db4:	bne	18dd8 <close_stdout@@Base+0x3d54>
   18db8:	bl	117a4 <realloc@plt>
   18dbc:	rsbs	r3, r0, #1
   18dc0:	movcc	r3, #0
   18dc4:	cmp	r4, #0
   18dc8:	moveq	r3, #0
   18dcc:	cmp	r3, #0
   18dd0:	popeq	{r4, pc}
   18dd4:	bl	18f54 <close_stdout@@Base+0x3ed0>
   18dd8:	bl	11750 <free@plt>
   18ddc:	mov	r0, #0
   18de0:	pop	{r4, pc}
   18de4:	push	{r4, r5, r6, lr}
   18de8:	mov	r5, r1
   18dec:	mov	r6, r0
   18df0:	mov	r1, r2
   18df4:	mvn	r0, #0
   18df8:	mov	r4, r2
   18dfc:	bl	1c560 <close_stdout@@Base+0x74dc>
   18e00:	cmp	r0, r5
   18e04:	bcc	18e18 <close_stdout@@Base+0x3d94>
   18e08:	mov	r0, r6
   18e0c:	mul	r1, r5, r4
   18e10:	pop	{r4, r5, r6, lr}
   18e14:	b	18d98 <close_stdout@@Base+0x3d14>
   18e18:	bl	18f54 <close_stdout@@Base+0x3ed0>
   18e1c:	push	{r3, r4, r5, r6, r7, lr}
   18e20:	subs	r7, r0, #0
   18e24:	mov	r5, r1
   18e28:	mov	r6, r2
   18e2c:	ldr	r4, [r1]
   18e30:	beq	18e68 <close_stdout@@Base+0x3de4>
   18e34:	movw	r0, #43690	; 0xaaaa
   18e38:	mov	r1, r2
   18e3c:	bfi	r0, r0, #16, #16
   18e40:	bl	1c560 <close_stdout@@Base+0x74dc>
   18e44:	cmp	r4, r0
   18e48:	addcc	r3, r4, #1
   18e4c:	addcc	r4, r4, r3, lsr #1
   18e50:	bcs	18e8c <close_stdout@@Base+0x3e08>
   18e54:	str	r4, [r5]
   18e58:	mov	r0, r7
   18e5c:	mul	r1, r6, r4
   18e60:	pop	{r3, r4, r5, r6, r7, lr}
   18e64:	b	18d98 <close_stdout@@Base+0x3d14>
   18e68:	cmp	r4, #0
   18e6c:	bne	18e54 <close_stdout@@Base+0x3dd0>
   18e70:	mov	r0, #64	; 0x40
   18e74:	mov	r1, r2
   18e78:	bl	1c560 <close_stdout@@Base+0x74dc>
   18e7c:	cmp	r0, #0
   18e80:	movne	r4, r0
   18e84:	addeq	r4, r0, #1
   18e88:	b	18e54 <close_stdout@@Base+0x3dd0>
   18e8c:	bl	18f54 <close_stdout@@Base+0x3ed0>
   18e90:	cmp	r0, #0
   18e94:	push	{r3, lr}
   18e98:	ldr	r3, [r1]
   18e9c:	beq	18ec8 <close_stdout@@Base+0x3e44>
   18ea0:	movw	r2, #43689	; 0xaaa9
   18ea4:	movt	r2, #43690	; 0xaaaa
   18ea8:	cmp	r3, r2
   18eac:	addls	r2, r3, #1
   18eb0:	addls	r3, r3, r2, lsr #1
   18eb4:	bhi	18ee0 <close_stdout@@Base+0x3e5c>
   18eb8:	str	r3, [r1]
   18ebc:	mov	r1, r3
   18ec0:	pop	{r3, lr}
   18ec4:	b	18d98 <close_stdout@@Base+0x3d14>
   18ec8:	cmp	r3, #0
   18ecc:	moveq	r3, #64	; 0x40
   18ed0:	str	r3, [r1]
   18ed4:	mov	r1, r3
   18ed8:	pop	{r3, lr}
   18edc:	b	18d98 <close_stdout@@Base+0x3d14>
   18ee0:	bl	18f54 <close_stdout@@Base+0x3ed0>
   18ee4:	push	{r4, lr}
   18ee8:	mov	r4, r0
   18eec:	bl	18d40 <close_stdout@@Base+0x3cbc>
   18ef0:	mov	r2, r4
   18ef4:	mov	r1, #0
   18ef8:	pop	{r4, lr}
   18efc:	b	11984 <memset@plt>
   18f00:	push	{r3, lr}
   18f04:	bl	116cc <calloc@plt>
   18f08:	cmp	r0, #0
   18f0c:	popne	{r3, pc}
   18f10:	bl	18f54 <close_stdout@@Base+0x3ed0>
   18f14:	push	{r3, r4, r5, lr}
   18f18:	mov	r4, r1
   18f1c:	mov	r5, r0
   18f20:	mov	r0, r1
   18f24:	bl	18d40 <close_stdout@@Base+0x3cbc>
   18f28:	mov	r1, r5
   18f2c:	mov	r2, r4
   18f30:	pop	{r3, r4, r5, lr}
   18f34:	b	11768 <memcpy@plt>
   18f38:	push	{r4, lr}
   18f3c:	mov	r4, r0
   18f40:	bl	11918 <strlen@plt>
   18f44:	add	r1, r0, #1
   18f48:	mov	r0, r4
   18f4c:	pop	{r4, lr}
   18f50:	b	18f14 <close_stdout@@Base+0x3e90>
   18f54:	ldr	r3, [pc, #64]	; 18f9c <close_stdout@@Base+0x3f18>
   18f58:	mov	r2, #5
   18f5c:	ldr	ip, [pc, #60]	; 18fa0 <close_stdout@@Base+0x3f1c>
   18f60:	mov	r0, #0
   18f64:	add	r3, pc, r3
   18f68:	ldr	r1, [pc, #52]	; 18fa4 <close_stdout@@Base+0x3f20>
   18f6c:	push	{r4, lr}
   18f70:	add	r1, pc, r1
   18f74:	ldr	r3, [r3, ip]
   18f78:	ldr	r4, [r3]
   18f7c:	bl	1178c <dcgettext@plt>
   18f80:	ldr	r2, [pc, #32]	; 18fa8 <close_stdout@@Base+0x3f24>
   18f84:	mov	r1, #0
   18f88:	add	r2, pc, r2
   18f8c:	mov	r3, r0
   18f90:	mov	r0, r4
   18f94:	bl	11840 <error@plt>
   18f98:	bl	11ab0 <abort@plt>
   18f9c:	muleq	r1, r4, r0
   18fa0:	muleq	r0, ip, r1
   18fa4:	andeq	r5, r0, ip, lsr #28
   18fa8:	muleq	r0, r4, r9
   18fac:	mov	r0, #0
   18fb0:	push	{r4, lr}
   18fb4:	mov	r1, r0
   18fb8:	bl	118f4 <getcwd@plt>
   18fbc:	subs	r4, r0, #0
   18fc0:	beq	18fcc <close_stdout@@Base+0x3f48>
   18fc4:	mov	r0, r4
   18fc8:	pop	{r4, pc}
   18fcc:	bl	11960 <__errno_location@plt>
   18fd0:	ldr	r3, [r0]
   18fd4:	cmp	r3, #12
   18fd8:	bne	18fc4 <close_stdout@@Base+0x3f40>
   18fdc:	bl	18f54 <close_stdout@@Base+0x3ed0>
   18fe0:	push	{r0, r1, r2, r3}
   18fe4:	ldr	r2, [pc, #80]	; 1903c <close_stdout@@Base+0x3fb8>
   18fe8:	ldr	ip, [pc, #80]	; 19040 <close_stdout@@Base+0x3fbc>
   18fec:	add	r2, pc, r2
   18ff0:	push	{r4, lr}
   18ff4:	sub	sp, sp, #8
   18ff8:	ldr	r4, [r2, ip]
   18ffc:	add	r3, sp, #20
   19000:	str	r3, [sp]
   19004:	mov	r1, r3
   19008:	ldr	r0, [sp, #16]
   1900c:	ldr	r3, [r4]
   19010:	str	r3, [sp, #4]
   19014:	bl	1a4e0 <close_stdout@@Base+0x545c>
   19018:	ldr	r2, [sp, #4]
   1901c:	ldr	r3, [r4]
   19020:	cmp	r2, r3
   19024:	bne	19038 <close_stdout@@Base+0x3fb4>
   19028:	add	sp, sp, #8
   1902c:	pop	{r4, lr}
   19030:	add	sp, sp, #16
   19034:	bx	lr
   19038:	bl	11798 <__stack_chk_fail@plt>
   1903c:	andeq	r7, r1, ip
   19040:	andeq	r0, r0, ip, ror r1
   19044:	push	{r3, lr}
   19048:	ldr	r0, [r0]
   1904c:	cmp	r0, #0
   19050:	poplt	{r3, pc}
   19054:	bl	11abc <close@plt>
   19058:	cmp	r0, #0
   1905c:	popeq	{r3, pc}
   19060:	ldr	r0, [pc, #24]	; 19080 <close_stdout@@Base+0x3ffc>
   19064:	mov	r2, #63	; 0x3f
   19068:	ldr	r1, [pc, #20]	; 19084 <close_stdout@@Base+0x4000>
   1906c:	ldr	r3, [pc, #20]	; 19088 <close_stdout@@Base+0x4004>
   19070:	add	r0, pc, r0
   19074:	add	r1, pc, r1
   19078:	add	r3, pc, r3
   1907c:	bl	11af8 <__assert_fail@plt>
   19080:	andeq	r5, r0, r8, asr sp
   19084:	andeq	r5, r0, r4, ror #26
   19088:	andeq	r5, r0, r8, lsr sp
   1908c:	push	{r3, r4, r5, lr}
   19090:	mov	r2, #18688	; 0x4900
   19094:	mov	r4, r0
   19098:	ldr	r0, [r0]
   1909c:	bl	11930 <openat64@plt>
   190a0:	subs	r5, r0, #0
   190a4:	blt	190bc <close_stdout@@Base+0x4038>
   190a8:	mov	r0, r4
   190ac:	bl	19044 <close_stdout@@Base+0x3fc0>
   190b0:	str	r5, [r4]
   190b4:	mov	r0, #0
   190b8:	pop	{r3, r4, r5, pc}
   190bc:	mvn	r0, #0
   190c0:	pop	{r3, r4, r5, pc}
   190c4:	ldr	r3, [pc, #784]	; 193dc <close_stdout@@Base+0x4358>
   190c8:	ldr	r2, [pc, #784]	; 193e0 <close_stdout@@Base+0x435c>
   190cc:	add	r3, pc, r3
   190d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   190d4:	sub	sp, sp, #20
   190d8:	ldr	r7, [r3, r2]
   190dc:	mov	r5, r0
   190e0:	ldr	r3, [r7]
   190e4:	str	r3, [sp, #12]
   190e8:	bl	117c8 <chdir@plt>
   190ec:	subs	r4, r0, #0
   190f0:	beq	19108 <close_stdout@@Base+0x4084>
   190f4:	bl	11960 <__errno_location@plt>
   190f8:	ldr	r3, [r0]
   190fc:	mov	sl, r0
   19100:	cmp	r3, #36	; 0x24
   19104:	beq	19124 <close_stdout@@Base+0x40a0>
   19108:	ldr	r2, [sp, #12]
   1910c:	mov	r0, r4
   19110:	ldr	r3, [r7]
   19114:	cmp	r2, r3
   19118:	bne	19348 <close_stdout@@Base+0x42c4>
   1911c:	add	sp, sp, #20
   19120:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19124:	mov	r0, r5
   19128:	bl	11918 <strlen@plt>
   1912c:	mvn	r3, #99	; 0x63
   19130:	str	r3, [sp, #8]
   19134:	cmp	r0, #0
   19138:	add	r6, r5, r0
   1913c:	beq	19394 <close_stdout@@Base+0x4310>
   19140:	cmp	r0, #4096	; 0x1000
   19144:	bcc	193b8 <close_stdout@@Base+0x4334>
   19148:	ldrb	r3, [r5]
   1914c:	cmp	r3, #47	; 0x2f
   19150:	movne	r4, r5
   19154:	bne	19244 <close_stdout@@Base+0x41c0>
   19158:	add	r3, r5, #1
   1915c:	mov	r2, #0
   19160:	ldrb	ip, [r3]
   19164:	mov	r4, r3
   19168:	add	r2, r2, #1
   1916c:	add	r3, r3, #1
   19170:	cmp	ip, #47	; 0x2f
   19174:	beq	19160 <close_stdout@@Base+0x40dc>
   19178:	cmp	r2, #2
   1917c:	beq	191d4 <close_stdout@@Base+0x4150>
   19180:	add	r3, sp, #8
   19184:	ldr	r1, [pc, #600]	; 193e4 <close_stdout@@Base+0x4360>
   19188:	str	r3, [sp, #4]
   1918c:	mov	r0, r3
   19190:	add	r1, pc, r1
   19194:	bl	1908c <close_stdout@@Base+0x4008>
   19198:	ldr	r3, [sp, #4]
   1919c:	cmp	r0, #0
   191a0:	bne	192fc <close_stdout@@Base+0x4278>
   191a4:	ldrb	r3, [r4]
   191a8:	cmp	r3, #47	; 0x2f
   191ac:	bne	19244 <close_stdout@@Base+0x41c0>
   191b0:	ldr	r3, [pc, #560]	; 193e8 <close_stdout@@Base+0x4364>
   191b4:	mov	r2, #161	; 0xa1
   191b8:	ldr	r0, [pc, #556]	; 193ec <close_stdout@@Base+0x4368>
   191bc:	ldr	r1, [pc, #556]	; 193f0 <close_stdout@@Base+0x436c>
   191c0:	add	r3, pc, r3
   191c4:	add	r0, pc, r0
   191c8:	add	r3, r3, #12
   191cc:	add	r1, pc, r1
   191d0:	bl	11af8 <__assert_fail@plt>
   191d4:	add	r0, r5, #3
   191d8:	mov	r1, #47	; 0x2f
   191dc:	rsb	r2, r0, r6
   191e0:	bl	119c0 <memchr@plt>
   191e4:	subs	r8, r0, #0
   191e8:	beq	19314 <close_stdout@@Base+0x4290>
   191ec:	add	r3, sp, #8
   191f0:	mov	r2, #0
   191f4:	mov	r1, r5
   191f8:	strb	r2, [r8]
   191fc:	mov	r0, r3
   19200:	str	r3, [sp, #4]
   19204:	bl	1908c <close_stdout@@Base+0x4008>
   19208:	mov	r2, #47	; 0x2f
   1920c:	strb	r2, [r8]
   19210:	ldr	r3, [sp, #4]
   19214:	cmp	r0, #0
   19218:	bne	192fc <close_stdout@@Base+0x4278>
   1921c:	ldrb	r3, [r8, #1]
   19220:	add	r4, r8, #1
   19224:	cmp	r3, r2
   19228:	bne	19244 <close_stdout@@Base+0x41c0>
   1922c:	add	r3, r8, #2
   19230:	mov	r4, r3
   19234:	add	r3, r3, #1
   19238:	ldrb	r2, [r4]
   1923c:	cmp	r2, #47	; 0x2f
   19240:	beq	19230 <close_stdout@@Base+0x41ac>
   19244:	cmp	r6, r4
   19248:	bcc	19370 <close_stdout@@Base+0x42ec>
   1924c:	add	r5, sp, #8
   19250:	mov	r9, #47	; 0x2f
   19254:	mov	r8, #0
   19258:	rsb	r3, r4, r6
   1925c:	cmp	r3, #4096	; 0x1000
   19260:	blt	192d4 <close_stdout@@Base+0x4250>
   19264:	mov	r0, r4
   19268:	mov	r1, #47	; 0x2f
   1926c:	mov	r2, #4096	; 0x1000
   19270:	bl	1193c <memrchr@plt>
   19274:	subs	fp, r0, #0
   19278:	beq	19314 <close_stdout@@Base+0x4290>
   1927c:	rsb	r3, r4, fp
   19280:	strb	r8, [fp]
   19284:	cmp	r3, #4096	; 0x1000
   19288:	bge	1934c <close_stdout@@Base+0x42c8>
   1928c:	mov	r1, r4
   19290:	mov	r0, r5
   19294:	bl	1908c <close_stdout@@Base+0x4008>
   19298:	mov	r3, r5
   1929c:	strb	r9, [fp]
   192a0:	cmp	r0, #0
   192a4:	bne	192fc <close_stdout@@Base+0x4278>
   192a8:	ldrb	r3, [fp, #1]
   192ac:	add	r4, fp, #1
   192b0:	cmp	r3, #47	; 0x2f
   192b4:	bne	19258 <close_stdout@@Base+0x41d4>
   192b8:	add	r3, fp, #2
   192bc:	mov	r4, r3
   192c0:	add	r3, r3, #1
   192c4:	ldrb	r2, [r4]
   192c8:	cmp	r2, #47	; 0x2f
   192cc:	beq	192bc <close_stdout@@Base+0x4238>
   192d0:	b	19258 <close_stdout@@Base+0x41d4>
   192d4:	cmp	r6, r4
   192d8:	add	r3, sp, #8
   192dc:	bls	19324 <close_stdout@@Base+0x42a0>
   192e0:	mov	r0, r3
   192e4:	mov	r1, r4
   192e8:	str	r3, [sp, #4]
   192ec:	bl	1908c <close_stdout@@Base+0x4008>
   192f0:	ldr	r3, [sp, #4]
   192f4:	cmp	r0, #0
   192f8:	beq	19324 <close_stdout@@Base+0x42a0>
   192fc:	ldr	r5, [sl]
   19300:	mov	r0, r3
   19304:	bl	19044 <close_stdout@@Base+0x3fc0>
   19308:	mvn	r4, #0
   1930c:	str	r5, [sl]
   19310:	b	19108 <close_stdout@@Base+0x4084>
   19314:	mov	r3, #36	; 0x24
   19318:	mvn	r4, #0
   1931c:	str	r3, [sl]
   19320:	b	19108 <close_stdout@@Base+0x4084>
   19324:	ldr	r0, [sp, #8]
   19328:	str	r3, [sp, #4]
   1932c:	bl	11a50 <fchdir@plt>
   19330:	ldr	r3, [sp, #4]
   19334:	subs	r4, r0, #0
   19338:	bne	192fc <close_stdout@@Base+0x4278>
   1933c:	mov	r0, r3
   19340:	bl	19044 <close_stdout@@Base+0x3fc0>
   19344:	b	19108 <close_stdout@@Base+0x4084>
   19348:	bl	11798 <__stack_chk_fail@plt>
   1934c:	ldr	r3, [pc, #160]	; 193f4 <close_stdout@@Base+0x4370>
   19350:	mov	r2, #178	; 0xb2
   19354:	ldr	r0, [pc, #156]	; 193f8 <close_stdout@@Base+0x4374>
   19358:	ldr	r1, [pc, #156]	; 193fc <close_stdout@@Base+0x4378>
   1935c:	add	r3, pc, r3
   19360:	add	r0, pc, r0
   19364:	add	r3, r3, #12
   19368:	add	r1, pc, r1
   1936c:	bl	11af8 <__assert_fail@plt>
   19370:	ldr	r3, [pc, #136]	; 19400 <close_stdout@@Base+0x437c>
   19374:	mov	r2, #162	; 0xa2
   19378:	ldr	r0, [pc, #132]	; 19404 <close_stdout@@Base+0x4380>
   1937c:	ldr	r1, [pc, #132]	; 19408 <close_stdout@@Base+0x4384>
   19380:	add	r3, pc, r3
   19384:	add	r0, pc, r0
   19388:	add	r3, r3, #12
   1938c:	add	r1, pc, r1
   19390:	bl	11af8 <__assert_fail@plt>
   19394:	ldr	r3, [pc, #112]	; 1940c <close_stdout@@Base+0x4388>
   19398:	mov	r2, #125	; 0x7d
   1939c:	ldr	r0, [pc, #108]	; 19410 <close_stdout@@Base+0x438c>
   193a0:	ldr	r1, [pc, #108]	; 19414 <close_stdout@@Base+0x4390>
   193a4:	add	r3, pc, r3
   193a8:	add	r0, pc, r0
   193ac:	add	r3, r3, #12
   193b0:	add	r1, pc, r1
   193b4:	bl	11af8 <__assert_fail@plt>
   193b8:	ldr	r3, [pc, #88]	; 19418 <close_stdout@@Base+0x4394>
   193bc:	mov	r2, #126	; 0x7e
   193c0:	ldr	r0, [pc, #84]	; 1941c <close_stdout@@Base+0x4398>
   193c4:	ldr	r1, [pc, #84]	; 19420 <close_stdout@@Base+0x439c>
   193c8:	add	r3, pc, r3
   193cc:	add	r0, pc, r0
   193d0:	add	r3, r3, #12
   193d4:	add	r1, pc, r1
   193d8:	bl	11af8 <__assert_fail@plt>
   193dc:	andeq	r6, r1, ip, lsr #30
   193e0:	andeq	r0, r0, ip, ror r1
   193e4:	andeq	r5, r0, r0, ror ip
   193e8:	strdeq	r5, [r0], -r0
   193ec:	andeq	r5, r0, r0, asr #24
   193f0:	andeq	r5, r0, ip, lsl #24
   193f4:	andeq	r5, r0, r4, asr sl
   193f8:	andeq	r5, r0, r0, asr #21
   193fc:	andeq	r5, r0, r0, ror sl
   19400:	andeq	r5, r0, r0, lsr sl
   19404:	andeq	r5, r0, ip, lsl #21
   19408:	andeq	r5, r0, ip, asr #20
   1940c:	andeq	r5, r0, ip, lsl #20
   19410:	andeq	r5, r0, r4, asr #20
   19414:	andeq	r5, r0, r8, lsr #20
   19418:	andeq	r5, r0, r8, ror #19
   1941c:	andeq	r5, r0, r8, lsr #20
   19420:	andeq	r5, r0, r4, lsl #20
   19424:	push	{r3, r4, r5, lr}
   19428:	subs	r4, r0, #0
   1942c:	beq	19478 <close_stdout@@Base+0x43f4>
   19430:	cmp	r4, #10
   19434:	beq	19440 <close_stdout@@Base+0x43bc>
   19438:	mov	r0, r4
   1943c:	pop	{r3, r4, r5, pc}
   19440:	ldr	r5, [r1]
   19444:	ldr	r1, [pc, #64]	; 1948c <close_stdout@@Base+0x4408>
   19448:	mov	r0, r5
   1944c:	add	r1, pc, r1
   19450:	bl	11714 <strcmp@plt>
   19454:	cmp	r0, #0
   19458:	bne	19438 <close_stdout@@Base+0x43b4>
   1945c:	mov	r0, r5
   19460:	mvn	r4, #0
   19464:	bl	11a74 <freecon@plt>
   19468:	bl	11960 <__errno_location@plt>
   1946c:	mov	r3, #61	; 0x3d
   19470:	str	r3, [r0]
   19474:	b	19438 <close_stdout@@Base+0x43b4>
   19478:	bl	11960 <__errno_location@plt>
   1947c:	mvn	r4, #0
   19480:	mov	r3, #95	; 0x5f
   19484:	str	r3, [r0]
   19488:	b	19438 <close_stdout@@Base+0x43b4>
   1948c:	andeq	r5, r0, r8, ror #19
   19490:	push	{r4, lr}
   19494:	mov	r4, r1
   19498:	bl	1190c <getfilecon@plt>
   1949c:	mov	r1, r4
   194a0:	pop	{r4, lr}
   194a4:	b	19424 <close_stdout@@Base+0x43a0>
   194a8:	push	{r4, lr}
   194ac:	mov	r4, r1
   194b0:	bl	11870 <lgetfilecon@plt>
   194b4:	mov	r1, r4
   194b8:	pop	{r4, lr}
   194bc:	b	19424 <close_stdout@@Base+0x43a0>
   194c0:	push	{r4, lr}
   194c4:	mov	r4, r1
   194c8:	bl	117b0 <fgetfilecon@plt>
   194cc:	mov	r1, r4
   194d0:	pop	{r4, lr}
   194d4:	b	19424 <close_stdout@@Base+0x43a0>
   194d8:	push	{r4, r5, r6, r7, r8, lr}
   194dc:	mov	r4, r0
   194e0:	bl	11918 <strlen@plt>
   194e4:	adds	r0, r0, #1
   194e8:	popeq	{r4, r5, r6, r7, r8, pc}
   194ec:	mov	r2, #0
   194f0:	mov	r3, r2
   194f4:	b	1950c <close_stdout@@Base+0x4488>
   194f8:	mov	r3, ip
   194fc:	strb	r1, [r4, r2]
   19500:	cmp	r0, r3
   19504:	add	r2, r2, #1
   19508:	bls	1957c <close_stdout@@Base+0x44f8>
   1950c:	ldrb	r1, [r4, r3]
   19510:	add	ip, r3, #1
   19514:	cmp	r1, #92	; 0x5c
   19518:	bne	194f8 <close_stdout@@Base+0x4474>
   1951c:	add	r5, r3, #4
   19520:	cmp	r0, r5
   19524:	bls	194f8 <close_stdout@@Base+0x4474>
   19528:	ldrb	r6, [r4, ip]
   1952c:	add	r3, r4, r3
   19530:	sub	r6, r6, #48	; 0x30
   19534:	uxtb	r7, r6
   19538:	cmp	r7, #3
   1953c:	bhi	194f8 <close_stdout@@Base+0x4474>
   19540:	ldrb	r7, [r3, #2]
   19544:	sub	r7, r7, #48	; 0x30
   19548:	uxtb	r8, r7
   1954c:	cmp	r8, #7
   19550:	bhi	194f8 <close_stdout@@Base+0x4474>
   19554:	ldrb	r8, [r3, #3]
   19558:	mov	r3, r5
   1955c:	add	r6, r7, r6, lsl #3
   19560:	sub	r5, r8, #48	; 0x30
   19564:	uxtb	r5, r5
   19568:	cmp	r5, #7
   1956c:	add	r5, r5, r6, lsl #3
   19570:	strbls	r5, [r4, r2]
   19574:	bls	19500 <close_stdout@@Base+0x447c>
   19578:	b	194f8 <close_stdout@@Base+0x4474>
   1957c:	pop	{r4, r5, r6, r7, r8, pc}
   19580:	push	{r4, lr}
   19584:	mov	r4, r0
   19588:	ldr	r0, [r0]
   1958c:	bl	11750 <free@plt>
   19590:	ldr	r0, [r4, #4]
   19594:	bl	11750 <free@plt>
   19598:	ldr	r0, [r4, #8]
   1959c:	bl	11750 <free@plt>
   195a0:	ldrb	r3, [r4, #24]
   195a4:	tst	r3, #4
   195a8:	beq	195b4 <close_stdout@@Base+0x4530>
   195ac:	ldr	r0, [r4, #12]
   195b0:	bl	11750 <free@plt>
   195b4:	mov	r0, r4
   195b8:	pop	{r4, lr}
   195bc:	b	11750 <free@plt>
   195c0:	ldr	r3, [pc, #1968]	; 19d78 <close_stdout@@Base+0x4cf4>
   195c4:	ldr	r2, [pc, #1968]	; 19d7c <close_stdout@@Base+0x4cf8>
   195c8:	add	r3, pc, r3
   195cc:	ldr	r0, [pc, #1964]	; 19d80 <close_stdout@@Base+0x4cfc>
   195d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   195d4:	sub	sp, sp, #148	; 0x94
   195d8:	ldr	r2, [r3, r2]
   195dc:	add	r0, pc, r0
   195e0:	ldr	r5, [pc, #1948]	; 19d84 <close_stdout@@Base+0x4d00>
   195e4:	ldr	r3, [r2]
   195e8:	add	r5, pc, r5
   195ec:	str	r2, [sp, #64]	; 0x40
   195f0:	mov	r1, r5
   195f4:	str	r3, [sp, #140]	; 0x8c
   195f8:	bl	11a68 <fopen64@plt>
   195fc:	subs	r4, r0, #0
   19600:	beq	19a78 <close_stdout@@Base+0x49f4>
   19604:	add	sl, sp, #88	; 0x58
   19608:	str	sl, [sp, #52]	; 0x34
   1960c:	ldr	sl, [pc, #1908]	; 19d88 <close_stdout@@Base+0x4d04>
   19610:	add	r6, sp, #92	; 0x5c
   19614:	ldr	r7, [pc, #1904]	; 19d8c <close_stdout@@Base+0x4d08>
   19618:	add	r5, sp, #96	; 0x60
   1961c:	add	sl, pc, sl
   19620:	str	sl, [sp, #48]	; 0x30
   19624:	ldr	sl, [pc, #1892]	; 19d90 <close_stdout@@Base+0x4d0c>
   19628:	add	r7, pc, r7
   1962c:	ldr	fp, [pc, #1888]	; 19d94 <close_stdout@@Base+0x4d10>
   19630:	mov	r3, #0
   19634:	add	sl, pc, sl
   19638:	str	sl, [sp, #68]	; 0x44
   1963c:	ldr	sl, [pc, #1876]	; 19d98 <close_stdout@@Base+0x4d14>
   19640:	add	fp, pc, fp
   19644:	str	r3, [sp, #92]	; 0x5c
   19648:	add	sl, pc, sl
   1964c:	str	sl, [sp, #72]	; 0x48
   19650:	ldr	sl, [pc, #1860]	; 19d9c <close_stdout@@Base+0x4d18>
   19654:	str	r3, [sp, #96]	; 0x60
   19658:	add	sl, pc, sl
   1965c:	str	fp, [sp, #36]	; 0x24
   19660:	str	sl, [sp, #76]	; 0x4c
   19664:	mov	r0, r6
   19668:	mov	r1, r5
   1966c:	mov	r2, #10
   19670:	mov	r3, r4
   19674:	bl	116fc <__getdelim@plt>
   19678:	cmn	r0, #1
   1967c:	ldr	r0, [sp, #92]	; 0x5c
   19680:	beq	19888 <close_stdout@@Base+0x4804>
   19684:	add	r3, sp, #132	; 0x84
   19688:	add	r8, sp, #87	; 0x57
   1968c:	str	r3, [sp]
   19690:	mov	r1, r7
   19694:	add	r3, sp, #136	; 0x88
   19698:	str	r8, [sp, #16]
   1969c:	str	r3, [sp, #4]
   196a0:	add	r2, sp, #100	; 0x64
   196a4:	add	r3, sp, #108	; 0x6c
   196a8:	str	r3, [sp, #8]
   196ac:	add	r3, sp, #112	; 0x70
   196b0:	str	r3, [sp, #12]
   196b4:	add	r3, sp, #104	; 0x68
   196b8:	bl	11a38 <sscanf@plt>
   196bc:	bic	r0, r0, #4
   196c0:	cmp	r0, #3
   196c4:	bne	19664 <close_stdout@@Base+0x45e0>
   196c8:	ldr	r3, [sp, #112]	; 0x70
   196cc:	ldr	r0, [sp, #92]	; 0x5c
   196d0:	ldr	r1, [sp, #36]	; 0x24
   196d4:	add	r0, r0, r3
   196d8:	bl	116e4 <strstr@plt>
   196dc:	subs	sl, r0, #0
   196e0:	beq	19664 <close_stdout@@Base+0x45e0>
   196e4:	add	r3, sp, #124	; 0x7c
   196e8:	str	r8, [sp, #8]
   196ec:	str	r3, [sp]
   196f0:	add	r2, sp, #116	; 0x74
   196f4:	add	r3, sp, #128	; 0x80
   196f8:	ldr	r1, [sp, #48]	; 0x30
   196fc:	str	r3, [sp, #4]
   19700:	add	r3, sp, #120	; 0x78
   19704:	bl	11a38 <sscanf@plt>
   19708:	bic	r9, r0, #4
   1970c:	cmp	r9, #1
   19710:	bne	19664 <close_stdout@@Base+0x45e0>
   19714:	ldr	r1, [sp, #92]	; 0x5c
   19718:	mov	r3, #0
   1971c:	ldr	r2, [sp, #136]	; 0x88
   19720:	str	r3, [sp, #60]	; 0x3c
   19724:	strb	r3, [r1, r2]
   19728:	ldr	r1, [sp, #92]	; 0x5c
   1972c:	ldr	r2, [sp, #112]	; 0x70
   19730:	strb	r3, [r1, r2]
   19734:	ldr	r2, [sp, #120]	; 0x78
   19738:	strb	r3, [sl, r2]
   1973c:	ldr	r2, [sp, #128]	; 0x80
   19740:	strb	r3, [sl, r2]
   19744:	ldr	r0, [sp, #124]	; 0x7c
   19748:	str	r3, [sp, #28]
   1974c:	add	r0, sl, r0
   19750:	bl	194d8 <close_stdout@@Base+0x4454>
   19754:	ldr	r2, [sp, #108]	; 0x6c
   19758:	ldr	r0, [sp, #92]	; 0x5c
   1975c:	add	r0, r0, r2
   19760:	bl	194d8 <close_stdout@@Base+0x4454>
   19764:	ldr	r2, [sp, #132]	; 0x84
   19768:	ldr	r0, [sp, #92]	; 0x5c
   1976c:	add	r0, r0, r2
   19770:	bl	194d8 <close_stdout@@Base+0x4454>
   19774:	mov	r0, #32
   19778:	bl	18d40 <close_stdout@@Base+0x3cbc>
   1977c:	mov	r8, r0
   19780:	ldr	r0, [sp, #124]	; 0x7c
   19784:	add	r0, sl, r0
   19788:	bl	18f38 <close_stdout@@Base+0x3eb4>
   1978c:	ldr	r1, [sp, #92]	; 0x5c
   19790:	ldr	r2, [sp, #108]	; 0x6c
   19794:	str	r0, [r8]
   19798:	add	r0, r1, r2
   1979c:	bl	18f38 <close_stdout@@Base+0x3eb4>
   197a0:	ldr	r1, [sp, #92]	; 0x5c
   197a4:	ldr	r2, [sp, #132]	; 0x84
   197a8:	str	r0, [r8, #4]
   197ac:	add	r0, r1, r2
   197b0:	bl	18f38 <close_stdout@@Base+0x3eb4>
   197b4:	ldr	r2, [sp, #116]	; 0x74
   197b8:	str	r0, [r8, #8]
   197bc:	add	r0, sl, r2
   197c0:	bl	18f38 <close_stdout@@Base+0x3eb4>
   197c4:	ldr	ip, [sp, #104]	; 0x68
   197c8:	ldr	r1, [sp, #100]	; 0x64
   197cc:	bic	r2, ip, #255	; 0xff
   197d0:	bic	fp, r1, #4080	; 0xff0
   197d4:	ubfx	r1, r1, #0, #12
   197d8:	bic	lr, fp, #15
   197dc:	lsr	sl, r2, #20
   197e0:	str	lr, [sp, #44]	; 0x2c
   197e4:	lsl	r2, r2, #12
   197e8:	str	sl, [sp, #60]	; 0x3c
   197ec:	uxtb	ip, ip
   197f0:	str	r2, [sp, #56]	; 0x38
   197f4:	orr	r1, ip, r1, lsl #8
   197f8:	ldrd	sl, [sp, #56]	; 0x38
   197fc:	ldrb	ip, [r8, #24]
   19800:	orr	ip, ip, #4
   19804:	str	r0, [r8, #12]
   19808:	ldr	r3, [sp, #28]
   1980c:	strb	ip, [r8, #24]
   19810:	str	r0, [sp, #32]
   19814:	str	r3, [sp, #40]	; 0x28
   19818:	ldrd	r2, [sp, #40]	; 0x28
   1981c:	orr	r2, r2, sl
   19820:	orr	r3, r3, fp
   19824:	orr	r2, r2, r1
   19828:	ldr	r1, [sp, #68]	; 0x44
   1982c:	strd	r2, [r8, #16]
   19830:	bl	11714 <strcmp@plt>
   19834:	cmp	r0, #0
   19838:	bne	198d4 <close_stdout@@Base+0x4850>
   1983c:	mov	r0, r9
   19840:	ldr	r9, [r8]
   19844:	mov	r1, #58	; 0x3a
   19848:	ldrb	r3, [r8, #24]
   1984c:	bfi	r3, r0, #0, #1
   19850:	mov	r0, r9
   19854:	strb	r3, [r8, #24]
   19858:	bl	11924 <strchr@plt>
   1985c:	cmp	r0, #0
   19860:	beq	199f8 <close_stdout@@Base+0x4974>
   19864:	mov	r0, #1
   19868:	ldr	sl, [sp, #52]	; 0x34
   1986c:	ldrb	r3, [r8, #24]
   19870:	bfi	r3, r0, #1, #1
   19874:	strb	r3, [r8, #24]
   19878:	str	r8, [sl]
   1987c:	add	r8, r8, #28
   19880:	str	r8, [sp, #52]	; 0x34
   19884:	b	19664 <close_stdout@@Base+0x45e0>
   19888:	bl	11750 <free@plt>
   1988c:	ldr	r3, [r4]
   19890:	tst	r3, #32
   19894:	bne	19a1c <close_stdout@@Base+0x4998>
   19898:	mov	r0, r4
   1989c:	bl	1a5b8 <close_stdout@@Base+0x5534>
   198a0:	cmn	r0, #1
   198a4:	beq	19cd8 <close_stdout@@Base+0x4c54>
   198a8:	ldr	sl, [sp, #52]	; 0x34
   198ac:	mov	r3, #0
   198b0:	str	r3, [sl]
   198b4:	ldr	r0, [sp, #88]	; 0x58
   198b8:	ldr	fp, [sp, #64]	; 0x40
   198bc:	ldr	r2, [sp, #140]	; 0x8c
   198c0:	ldr	r3, [fp]
   198c4:	cmp	r2, r3
   198c8:	bne	19d6c <close_stdout@@Base+0x4ce8>
   198cc:	add	sp, sp, #148	; 0x94
   198d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198d4:	ldr	r1, [pc, #1220]	; 19da0 <close_stdout@@Base+0x4d1c>
   198d8:	ldr	r0, [sp, #32]
   198dc:	add	r1, pc, r1
   198e0:	bl	11714 <strcmp@plt>
   198e4:	cmp	r0, #0
   198e8:	beq	1983c <close_stdout@@Base+0x47b8>
   198ec:	ldr	r1, [pc, #1200]	; 19da4 <close_stdout@@Base+0x4d20>
   198f0:	ldr	r0, [sp, #32]
   198f4:	add	r1, pc, r1
   198f8:	bl	11714 <strcmp@plt>
   198fc:	cmp	r0, #0
   19900:	beq	1983c <close_stdout@@Base+0x47b8>
   19904:	ldr	r1, [pc, #1180]	; 19da8 <close_stdout@@Base+0x4d24>
   19908:	ldr	r0, [sp, #32]
   1990c:	add	r1, pc, r1
   19910:	bl	11714 <strcmp@plt>
   19914:	cmp	r0, #0
   19918:	beq	1983c <close_stdout@@Base+0x47b8>
   1991c:	ldr	r1, [pc, #1160]	; 19dac <close_stdout@@Base+0x4d28>
   19920:	ldr	r0, [sp, #32]
   19924:	add	r1, pc, r1
   19928:	bl	11714 <strcmp@plt>
   1992c:	cmp	r0, #0
   19930:	beq	1983c <close_stdout@@Base+0x47b8>
   19934:	ldr	r1, [pc, #1140]	; 19db0 <close_stdout@@Base+0x4d2c>
   19938:	ldr	r0, [sp, #32]
   1993c:	add	r1, pc, r1
   19940:	bl	11714 <strcmp@plt>
   19944:	cmp	r0, #0
   19948:	beq	19d24 <close_stdout@@Base+0x4ca0>
   1994c:	ldr	r1, [pc, #1120]	; 19db4 <close_stdout@@Base+0x4d30>
   19950:	ldr	r0, [sp, #32]
   19954:	add	r1, pc, r1
   19958:	bl	11714 <strcmp@plt>
   1995c:	cmp	r0, #0
   19960:	beq	19d24 <close_stdout@@Base+0x4ca0>
   19964:	ldr	r1, [pc, #1100]	; 19db8 <close_stdout@@Base+0x4d34>
   19968:	ldr	r0, [sp, #32]
   1996c:	add	r1, pc, r1
   19970:	bl	11714 <strcmp@plt>
   19974:	cmp	r0, #0
   19978:	beq	19d24 <close_stdout@@Base+0x4ca0>
   1997c:	ldr	r1, [pc, #1080]	; 19dbc <close_stdout@@Base+0x4d38>
   19980:	ldr	r0, [sp, #32]
   19984:	add	r1, pc, r1
   19988:	bl	11714 <strcmp@plt>
   1998c:	cmp	r0, #0
   19990:	beq	19d24 <close_stdout@@Base+0x4ca0>
   19994:	ldr	r1, [pc, #1060]	; 19dc0 <close_stdout@@Base+0x4d3c>
   19998:	ldr	r0, [sp, #32]
   1999c:	add	r1, pc, r1
   199a0:	bl	11714 <strcmp@plt>
   199a4:	cmp	r0, #0
   199a8:	beq	19d24 <close_stdout@@Base+0x4ca0>
   199ac:	ldr	r1, [pc, #1040]	; 19dc4 <close_stdout@@Base+0x4d40>
   199b0:	ldr	r0, [sp, #32]
   199b4:	add	r1, pc, r1
   199b8:	bl	11714 <strcmp@plt>
   199bc:	cmp	r0, #0
   199c0:	beq	19d24 <close_stdout@@Base+0x4ca0>
   199c4:	ldr	r1, [pc, #1020]	; 19dc8 <close_stdout@@Base+0x4d44>
   199c8:	ldr	r0, [sp, #32]
   199cc:	add	r1, pc, r1
   199d0:	bl	11714 <strcmp@plt>
   199d4:	cmp	r0, #0
   199d8:	beq	19d24 <close_stdout@@Base+0x4ca0>
   199dc:	ldr	r1, [pc, #1000]	; 19dcc <close_stdout@@Base+0x4d48>
   199e0:	ldr	r0, [sp, #32]
   199e4:	add	r1, pc, r1
   199e8:	bl	11714 <strcmp@plt>
   199ec:	rsbs	r0, r0, #1
   199f0:	movcc	r0, #0
   199f4:	b	19840 <close_stdout@@Base+0x47bc>
   199f8:	ldrb	r3, [r9]
   199fc:	cmp	r3, #47	; 0x2f
   19a00:	beq	19ce8 <close_stdout@@Base+0x4c64>
   19a04:	mov	r1, r9
   19a08:	ldr	r0, [sp, #72]	; 0x48
   19a0c:	bl	11714 <strcmp@plt>
   19a10:	rsbs	r0, r0, #1
   19a14:	movcc	r0, #0
   19a18:	b	19868 <close_stdout@@Base+0x47e4>
   19a1c:	bl	11960 <__errno_location@plt>
   19a20:	ldr	r6, [r0]
   19a24:	mov	r5, r0
   19a28:	mov	r0, r4
   19a2c:	bl	1a5b8 <close_stdout@@Base+0x5534>
   19a30:	mov	r7, r6
   19a34:	str	r6, [r5]
   19a38:	ldr	sl, [sp, #52]	; 0x34
   19a3c:	mov	r3, #0
   19a40:	str	r3, [sl]
   19a44:	ldr	r0, [sp, #88]	; 0x58
   19a48:	cmp	r0, r3
   19a4c:	bne	19a58 <close_stdout@@Base+0x49d4>
   19a50:	b	19a6c <close_stdout@@Base+0x49e8>
   19a54:	mov	r0, r4
   19a58:	ldr	r4, [r0, #28]
   19a5c:	bl	19580 <close_stdout@@Base+0x44fc>
   19a60:	cmp	r4, #0
   19a64:	str	r4, [sp, #88]	; 0x58
   19a68:	bne	19a54 <close_stdout@@Base+0x49d0>
   19a6c:	str	r7, [r5]
   19a70:	mov	r0, #0
   19a74:	b	198b8 <close_stdout@@Base+0x4834>
   19a78:	ldr	r0, [pc, #848]	; 19dd0 <close_stdout@@Base+0x4d4c>
   19a7c:	mov	r1, r5
   19a80:	add	r0, pc, r0
   19a84:	bl	11a80 <setmntent@plt>
   19a88:	subs	r5, r0, #0
   19a8c:	beq	19d70 <close_stdout@@Base+0x4cec>
   19a90:	ldr	r6, [pc, #828]	; 19dd4 <close_stdout@@Base+0x4d50>
   19a94:	add	sl, sp, #88	; 0x58
   19a98:	ldr	r7, [pc, #824]	; 19dd8 <close_stdout@@Base+0x4d54>
   19a9c:	ldr	r8, [pc, #824]	; 19ddc <close_stdout@@Base+0x4d58>
   19aa0:	add	r6, pc, r6
   19aa4:	ldr	r9, [pc, #820]	; 19de0 <close_stdout@@Base+0x4d5c>
   19aa8:	add	r7, pc, r7
   19aac:	ldr	fp, [pc, #816]	; 19de4 <close_stdout@@Base+0x4d60>
   19ab0:	add	r8, pc, r8
   19ab4:	ldr	r2, [pc, #812]	; 19de8 <close_stdout@@Base+0x4d64>
   19ab8:	mov	r4, sl
   19abc:	add	r9, pc, r9
   19ac0:	add	fp, pc, fp
   19ac4:	add	r2, pc, r2
   19ac8:	str	sl, [sp, #52]	; 0x34
   19acc:	str	fp, [sp, #36]	; 0x24
   19ad0:	str	r2, [sp, #40]	; 0x28
   19ad4:	str	r9, [sp, #32]
   19ad8:	mov	r0, r5
   19adc:	bl	1184c <getmntent@plt>
   19ae0:	subs	fp, r0, #0
   19ae4:	beq	19cc4 <close_stdout@@Base+0x4c40>
   19ae8:	mov	r0, #32
   19aec:	bl	18d40 <close_stdout@@Base+0x3cbc>
   19af0:	mov	sl, r0
   19af4:	ldr	r0, [fp]
   19af8:	bl	18f38 <close_stdout@@Base+0x3eb4>
   19afc:	str	r0, [sl]
   19b00:	ldr	r0, [fp, #4]
   19b04:	bl	18f38 <close_stdout@@Base+0x3eb4>
   19b08:	mov	r3, #0
   19b0c:	stmib	sl, {r0, r3}
   19b10:	ldr	r0, [fp, #8]
   19b14:	bl	18f38 <close_stdout@@Base+0x3eb4>
   19b18:	ldrb	r3, [sl, #24]
   19b1c:	mov	r1, r6
   19b20:	orr	r3, r3, #4
   19b24:	strb	r3, [sl, #24]
   19b28:	str	r0, [sl, #12]
   19b2c:	mov	fp, r0
   19b30:	bl	11714 <strcmp@plt>
   19b34:	cmp	r0, #0
   19b38:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19b3c:	mov	r0, fp
   19b40:	mov	r1, r7
   19b44:	bl	11714 <strcmp@plt>
   19b48:	cmp	r0, #0
   19b4c:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19b50:	mov	r0, fp
   19b54:	mov	r1, r8
   19b58:	bl	11714 <strcmp@plt>
   19b5c:	cmp	r0, #0
   19b60:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19b64:	mov	r0, fp
   19b68:	ldr	r1, [sp, #32]
   19b6c:	bl	11714 <strcmp@plt>
   19b70:	cmp	r0, #0
   19b74:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19b78:	mov	r0, fp
   19b7c:	ldr	r1, [sp, #36]	; 0x24
   19b80:	bl	11714 <strcmp@plt>
   19b84:	cmp	r0, #0
   19b88:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19b8c:	mov	r0, fp
   19b90:	ldr	r1, [sp, #40]	; 0x28
   19b94:	bl	11714 <strcmp@plt>
   19b98:	cmp	r0, #0
   19b9c:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19ba0:	ldr	r1, [pc, #580]	; 19dec <close_stdout@@Base+0x4d68>
   19ba4:	mov	r0, fp
   19ba8:	add	r1, pc, r1
   19bac:	bl	11714 <strcmp@plt>
   19bb0:	cmp	r0, #0
   19bb4:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19bb8:	ldr	r1, [pc, #560]	; 19df0 <close_stdout@@Base+0x4d6c>
   19bbc:	mov	r0, fp
   19bc0:	add	r1, pc, r1
   19bc4:	bl	11714 <strcmp@plt>
   19bc8:	cmp	r0, #0
   19bcc:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19bd0:	ldr	r1, [pc, #540]	; 19df4 <close_stdout@@Base+0x4d70>
   19bd4:	mov	r0, fp
   19bd8:	add	r1, pc, r1
   19bdc:	bl	11714 <strcmp@plt>
   19be0:	cmp	r0, #0
   19be4:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19be8:	ldr	r1, [pc, #520]	; 19df8 <close_stdout@@Base+0x4d74>
   19bec:	mov	r0, fp
   19bf0:	add	r1, pc, r1
   19bf4:	bl	11714 <strcmp@plt>
   19bf8:	cmp	r0, #0
   19bfc:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19c00:	ldr	r1, [pc, #500]	; 19dfc <close_stdout@@Base+0x4d78>
   19c04:	mov	r0, fp
   19c08:	add	r1, pc, r1
   19c0c:	bl	11714 <strcmp@plt>
   19c10:	cmp	r0, #0
   19c14:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19c18:	ldr	r1, [pc, #480]	; 19e00 <close_stdout@@Base+0x4d7c>
   19c1c:	mov	r0, fp
   19c20:	add	r1, pc, r1
   19c24:	bl	11714 <strcmp@plt>
   19c28:	cmp	r0, #0
   19c2c:	beq	19c4c <close_stdout@@Base+0x4bc8>
   19c30:	ldr	r1, [pc, #460]	; 19e04 <close_stdout@@Base+0x4d80>
   19c34:	mov	r0, fp
   19c38:	add	r1, pc, r1
   19c3c:	bl	11714 <strcmp@plt>
   19c40:	rsbs	r0, r0, #1
   19c44:	movcc	r0, #0
   19c48:	b	19c50 <close_stdout@@Base+0x4bcc>
   19c4c:	mov	r0, #1
   19c50:	ldr	r9, [sl]
   19c54:	mov	r1, #58	; 0x3a
   19c58:	ldrb	r3, [sl, #24]
   19c5c:	bfi	r3, r0, #0, #1
   19c60:	mov	r0, r9
   19c64:	strb	r3, [sl, #24]
   19c68:	bl	11924 <strchr@plt>
   19c6c:	cmp	r0, #0
   19c70:	beq	19c9c <close_stdout@@Base+0x4c18>
   19c74:	mov	r0, #1
   19c78:	ldrb	r1, [sl, #24]
   19c7c:	mvn	r2, #0
   19c80:	mvn	r3, #0
   19c84:	strd	r2, [sl, #16]
   19c88:	bfi	r1, r0, #1, #1
   19c8c:	strb	r1, [sl, #24]
   19c90:	str	sl, [r4]
   19c94:	add	r4, sl, #28
   19c98:	b	19ad8 <close_stdout@@Base+0x4a54>
   19c9c:	ldrb	r3, [r9]
   19ca0:	cmp	r3, #47	; 0x2f
   19ca4:	beq	19d2c <close_stdout@@Base+0x4ca8>
   19ca8:	ldr	r0, [pc, #344]	; 19e08 <close_stdout@@Base+0x4d84>
   19cac:	mov	r1, r9
   19cb0:	add	r0, pc, r0
   19cb4:	bl	11714 <strcmp@plt>
   19cb8:	rsbs	r0, r0, #1
   19cbc:	movcc	r0, #0
   19cc0:	b	19c78 <close_stdout@@Base+0x4bf4>
   19cc4:	mov	r0, r5
   19cc8:	str	r4, [sp, #52]	; 0x34
   19ccc:	bl	119e4 <endmntent@plt>
   19cd0:	cmp	r0, #0
   19cd4:	bne	198a8 <close_stdout@@Base+0x4824>
   19cd8:	bl	11960 <__errno_location@plt>
   19cdc:	mov	r5, r0
   19ce0:	ldr	r7, [r0]
   19ce4:	b	19a38 <close_stdout@@Base+0x49b4>
   19ce8:	ldrb	r3, [r9, #1]
   19cec:	cmp	r3, #47	; 0x2f
   19cf0:	bne	19a04 <close_stdout@@Base+0x4980>
   19cf4:	ldr	r0, [sp, #32]
   19cf8:	ldr	r1, [sp, #76]	; 0x4c
   19cfc:	bl	11714 <strcmp@plt>
   19d00:	cmp	r0, #0
   19d04:	beq	19864 <close_stdout@@Base+0x47e0>
   19d08:	ldr	r1, [pc, #252]	; 19e0c <close_stdout@@Base+0x4d88>
   19d0c:	ldr	r0, [sp, #32]
   19d10:	add	r1, pc, r1
   19d14:	bl	11714 <strcmp@plt>
   19d18:	cmp	r0, #0
   19d1c:	beq	19864 <close_stdout@@Base+0x47e0>
   19d20:	b	19a04 <close_stdout@@Base+0x4980>
   19d24:	mov	r0, #1
   19d28:	b	19840 <close_stdout@@Base+0x47bc>
   19d2c:	ldrb	r3, [r9, #1]
   19d30:	cmp	r3, #47	; 0x2f
   19d34:	bne	19ca8 <close_stdout@@Base+0x4c24>
   19d38:	ldr	r1, [pc, #208]	; 19e10 <close_stdout@@Base+0x4d8c>
   19d3c:	mov	r0, fp
   19d40:	add	r1, pc, r1
   19d44:	bl	11714 <strcmp@plt>
   19d48:	cmp	r0, #0
   19d4c:	beq	19c74 <close_stdout@@Base+0x4bf0>
   19d50:	ldr	r1, [pc, #188]	; 19e14 <close_stdout@@Base+0x4d90>
   19d54:	mov	r0, fp
   19d58:	add	r1, pc, r1
   19d5c:	bl	11714 <strcmp@plt>
   19d60:	cmp	r0, #0
   19d64:	beq	19c74 <close_stdout@@Base+0x4bf0>
   19d68:	b	19ca8 <close_stdout@@Base+0x4c24>
   19d6c:	bl	11798 <__stack_chk_fail@plt>
   19d70:	mov	r0, r5
   19d74:	b	198b8 <close_stdout@@Base+0x4834>
   19d78:	andeq	r6, r1, r0, lsr sl
   19d7c:	andeq	r0, r0, ip, ror r1
   19d80:	andeq	r5, r0, r4, ror #16
   19d84:	andeq	r5, r0, r0, ror r8
   19d88:	andeq	r5, r0, r4, ror #16
   19d8c:	andeq	r5, r0, r4, lsr r8
   19d90:	andeq	r3, r0, r0, lsl lr
   19d94:	andeq	r5, r0, ip, lsr r8
   19d98:	andeq	r5, r0, r8, ror r8
   19d9c:	andeq	r5, r0, r0, ror #16
   19da0:	andeq	r3, r0, r8, ror #27
   19da4:	andeq	r5, r0, r4, lsr #11
   19da8:	andeq	r3, r0, r8, ror #23
   19dac:	andeq	r3, r0, r0, ror #23
   19db0:	andeq	r3, r0, ip, lsr #24
   19db4:	andeq	r3, r0, r4, lsl #26
   19db8:	muleq	r0, ip, sp
   19dbc:	andeq	r3, r0, r0, ror #27
   19dc0:	andeq	r3, r0, r0, ror #22
   19dc4:	andeq	r5, r0, ip, ror #9
   19dc8:	ldrdeq	r5, [r0], -ip
   19dcc:	andeq	r5, r0, ip, asr #9
   19dd0:	andeq	r5, r0, r8, asr #8
   19dd4:	andeq	r3, r0, r4, lsr #19
   19dd8:	andeq	r3, r0, ip, lsl ip
   19ddc:	andeq	r5, r0, r8, ror #7
   19de0:	andeq	r3, r0, r8, lsr sl
   19de4:	andeq	r3, r0, r4, asr #20
   19de8:	andeq	r3, r0, r4, lsr #21
   19dec:			; <UNDEFINED> instruction: 0x00003ab0
   19df0:	andeq	r3, r0, r8, asr #22
   19df4:	andeq	r3, r0, ip, lsl #23
   19df8:	andeq	r3, r0, ip, lsl #18
   19dfc:	muleq	r0, r8, r2
   19e00:	andeq	r5, r0, r8, lsl #5
   19e04:	andeq	r5, r0, r8, ror r2
   19e08:	andeq	r5, r0, r0, lsl r2
   19e0c:	andeq	r3, r0, r8, lsr #15
   19e10:	andeq	r5, r0, r8, ror r1
   19e14:	andeq	r3, r0, r0, ror #14
   19e18:	push	{r3, r4, r5, lr}
   19e1c:	mov	r2, #0
   19e20:	mov	r4, r1
   19e24:	mov	r1, #1
   19e28:	mov	r5, r0
   19e2c:	bl	1a658 <close_stdout@@Base+0x55d4>
   19e30:	cmp	r0, #0
   19e34:	blt	19e74 <close_stdout@@Base+0x4df0>
   19e38:	cmp	r4, #0
   19e3c:	orrne	r2, r0, #1
   19e40:	biceq	r2, r0, #1
   19e44:	cmp	r2, r0
   19e48:	beq	19e6c <close_stdout@@Base+0x4de8>
   19e4c:	mov	r0, r5
   19e50:	mov	r1, #2
   19e54:	bl	1a658 <close_stdout@@Base+0x55d4>
   19e58:	cmn	r0, #1
   19e5c:	movne	r0, #0
   19e60:	moveq	r0, #1
   19e64:	rsb	r0, r0, #0
   19e68:	pop	{r3, r4, r5, pc}
   19e6c:	mov	r0, #0
   19e70:	pop	{r3, r4, r5, pc}
   19e74:	mvn	r0, #0
   19e78:	pop	{r3, r4, r5, pc}
   19e7c:	movw	r1, #1030	; 0x406
   19e80:	mov	r2, #0
   19e84:	b	1a658 <close_stdout@@Base+0x55d4>
   19e88:	push	{r4, r5, r6, lr}
   19e8c:	mov	r4, r0
   19e90:	bl	11828 <__fpending@plt>
   19e94:	mov	r6, r0
   19e98:	mov	r0, r4
   19e9c:	ldr	r4, [r4]
   19ea0:	bl	1a5b8 <close_stdout@@Base+0x5534>
   19ea4:	and	r4, r4, #32
   19ea8:	adds	r5, r0, #0
   19eac:	movne	r5, #1
   19eb0:	cmp	r4, #0
   19eb4:	bne	19ed4 <close_stdout@@Base+0x4e50>
   19eb8:	cmp	r5, #0
   19ebc:	beq	19ecc <close_stdout@@Base+0x4e48>
   19ec0:	cmp	r6, #0
   19ec4:	beq	19ef0 <close_stdout@@Base+0x4e6c>
   19ec8:	mvn	r4, #0
   19ecc:	mov	r0, r4
   19ed0:	pop	{r4, r5, r6, pc}
   19ed4:	cmp	r5, #0
   19ed8:	bne	19ec8 <close_stdout@@Base+0x4e44>
   19edc:	bl	11960 <__errno_location@plt>
   19ee0:	mvn	r4, #0
   19ee4:	str	r5, [r0]
   19ee8:	mov	r0, r4
   19eec:	pop	{r4, r5, r6, pc}
   19ef0:	bl	11960 <__errno_location@plt>
   19ef4:	ldr	r4, [r0]
   19ef8:	subs	r4, r4, #9
   19efc:	mvnne	r4, #0
   19f00:	mov	r0, r4
   19f04:	pop	{r4, r5, r6, pc}
   19f08:	push	{r1, r2, r3}
   19f0c:	ldr	r3, [pc, #88]	; 19f6c <close_stdout@@Base+0x4ee8>
   19f10:	ldr	r2, [pc, #88]	; 19f70 <close_stdout@@Base+0x4eec>
   19f14:	add	r3, pc, r3
   19f18:	push	{r4, lr}
   19f1c:	sub	sp, sp, #12
   19f20:	ldr	r4, [r3, r2]
   19f24:	ldr	r1, [sp, #20]
   19f28:	ldr	r3, [r4]
   19f2c:	ands	r2, r1, #64	; 0x40
   19f30:	ldrne	r2, [sp, #24]
   19f34:	str	r3, [sp, #4]
   19f38:	addne	r3, sp, #24
   19f3c:	strne	r3, [sp]
   19f40:	bl	11858 <open64@plt>
   19f44:	bl	1a394 <close_stdout@@Base+0x5310>
   19f48:	ldr	r2, [sp, #4]
   19f4c:	ldr	r3, [r4]
   19f50:	cmp	r2, r3
   19f54:	bne	19f68 <close_stdout@@Base+0x4ee4>
   19f58:	add	sp, sp, #12
   19f5c:	pop	{r4, lr}
   19f60:	add	sp, sp, #12
   19f64:	bx	lr
   19f68:	bl	11798 <__stack_chk_fail@plt>
   19f6c:	andeq	r6, r1, r4, ror #1
   19f70:	andeq	r0, r0, ip, ror r1
   19f74:	ldr	r3, [pc, #984]	; 1a354 <close_stdout@@Base+0x52d0>
   19f78:	mov	r0, #14
   19f7c:	ldr	r2, [pc, #980]	; 1a358 <close_stdout@@Base+0x52d4>
   19f80:	add	r3, pc, r3
   19f84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f88:	sub	sp, sp, #132	; 0x84
   19f8c:	ldr	r6, [r3, r2]
   19f90:	ldr	r3, [r6]
   19f94:	str	r3, [sp, #124]	; 0x7c
   19f98:	bl	11a2c <nl_langinfo@plt>
   19f9c:	subs	r5, r0, #0
   19fa0:	beq	1a054 <close_stdout@@Base+0x4fd0>
   19fa4:	ldr	r3, [pc, #944]	; 1a35c <close_stdout@@Base+0x52d8>
   19fa8:	ldr	r4, [pc, r3]
   19fac:	cmp	r4, #0
   19fb0:	beq	1a060 <close_stdout@@Base+0x4fdc>
   19fb4:	ldrb	r7, [r4]
   19fb8:	cmp	r7, #0
   19fbc:	bne	19ff0 <close_stdout@@Base+0x4f6c>
   19fc0:	b	1a028 <close_stdout@@Base+0x4fa4>
   19fc4:	mov	r0, r4
   19fc8:	bl	11918 <strlen@plt>
   19fcc:	add	r0, r0, #1
   19fd0:	add	r7, r4, r0
   19fd4:	mov	r0, r7
   19fd8:	bl	11918 <strlen@plt>
   19fdc:	add	r0, r0, #1
   19fe0:	add	r4, r7, r0
   19fe4:	ldrb	r7, [r7, r0]
   19fe8:	cmp	r7, #0
   19fec:	beq	1a028 <close_stdout@@Base+0x4fa4>
   19ff0:	mov	r0, r5
   19ff4:	mov	r1, r4
   19ff8:	bl	11714 <strcmp@plt>
   19ffc:	cmp	r0, #0
   1a000:	beq	1a018 <close_stdout@@Base+0x4f94>
   1a004:	cmp	r7, #42	; 0x2a
   1a008:	bne	19fc4 <close_stdout@@Base+0x4f40>
   1a00c:	ldrb	r3, [r4, #1]
   1a010:	cmp	r3, #0
   1a014:	bne	19fc4 <close_stdout@@Base+0x4f40>
   1a018:	mov	r0, r4
   1a01c:	bl	11918 <strlen@plt>
   1a020:	add	r0, r0, #1
   1a024:	add	r5, r4, r0
   1a028:	ldrb	r3, [r5]
   1a02c:	cmp	r3, #0
   1a030:	ldreq	r5, [pc, #808]	; 1a360 <close_stdout@@Base+0x52dc>
   1a034:	addeq	r5, pc, r5
   1a038:	ldr	r2, [sp, #124]	; 0x7c
   1a03c:	mov	r0, r5
   1a040:	ldr	r3, [r6]
   1a044:	cmp	r2, r3
   1a048:	bne	1a328 <close_stdout@@Base+0x52a4>
   1a04c:	add	sp, sp, #132	; 0x84
   1a050:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a054:	ldr	r5, [pc, #776]	; 1a364 <close_stdout@@Base+0x52e0>
   1a058:	add	r5, pc, r5
   1a05c:	b	19fa4 <close_stdout@@Base+0x4f20>
   1a060:	ldr	r0, [pc, #768]	; 1a368 <close_stdout@@Base+0x52e4>
   1a064:	add	r0, pc, r0
   1a068:	bl	11864 <getenv@plt>
   1a06c:	subs	r8, r0, #0
   1a070:	beq	1a300 <close_stdout@@Base+0x527c>
   1a074:	ldrb	r3, [r8]
   1a078:	cmp	r3, #0
   1a07c:	beq	1a294 <close_stdout@@Base+0x5210>
   1a080:	bl	11918 <strlen@plt>
   1a084:	subs	sl, r0, #0
   1a088:	subne	r3, sl, #1
   1a08c:	bne	1a2a4 <close_stdout@@Base+0x5220>
   1a090:	mov	r9, #0
   1a094:	mov	fp, r9
   1a098:	add	r9, sl, r9
   1a09c:	add	r0, r9, #14
   1a0a0:	bl	1187c <malloc@plt>
   1a0a4:	subs	r7, r0, #0
   1a0a8:	beq	1a2f4 <close_stdout@@Base+0x5270>
   1a0ac:	mov	r1, r8
   1a0b0:	mov	r2, sl
   1a0b4:	bl	11768 <memcpy@plt>
   1a0b8:	cmp	fp, #0
   1a0bc:	add	ip, r7, r9
   1a0c0:	movne	r3, #47	; 0x2f
   1a0c4:	strbne	r3, [r7, sl]
   1a0c8:	ldr	r3, [pc, #668]	; 1a36c <close_stdout@@Base+0x52e8>
   1a0cc:	add	r3, pc, r3
   1a0d0:	ldm	r3!, {r0, r1, r2}
   1a0d4:	ldrh	r3, [r3]
   1a0d8:	str	r0, [r7, r9]
   1a0dc:	mov	r0, r7
   1a0e0:	str	r1, [ip, #4]
   1a0e4:	mov	r1, #32768	; 0x8000
   1a0e8:	strh	r3, [ip, #12]
   1a0ec:	str	r2, [ip, #8]
   1a0f0:	bl	11858 <open64@plt>
   1a0f4:	subs	r8, r0, #0
   1a0f8:	blt	1a2bc <close_stdout@@Base+0x5238>
   1a0fc:	ldr	r1, [pc, #620]	; 1a370 <close_stdout@@Base+0x52ec>
   1a100:	add	r1, pc, r1
   1a104:	bl	116c0 <fdopen@plt>
   1a108:	subs	fp, r0, #0
   1a10c:	beq	1a314 <close_stdout@@Base+0x5290>
   1a110:	ldr	r0, [pc, #604]	; 1a374 <close_stdout@@Base+0x52f0>
   1a114:	add	sl, sp, #20
   1a118:	add	r9, sp, #72	; 0x48
   1a11c:	mov	r8, #0
   1a120:	add	r0, pc, r0
   1a124:	str	r0, [sp, #12]
   1a128:	ldr	r3, [fp, #4]
   1a12c:	ldr	r2, [fp, #8]
   1a130:	cmp	r3, r2
   1a134:	bcs	1a220 <close_stdout@@Base+0x519c>
   1a138:	add	r2, r3, #1
   1a13c:	str	r2, [fp, #4]
   1a140:	ldrb	r0, [r3]
   1a144:	cmp	r0, #32
   1a148:	beq	1a128 <close_stdout@@Base+0x50a4>
   1a14c:	sub	r3, r0, #9
   1a150:	cmp	r3, #1
   1a154:	bls	1a128 <close_stdout@@Base+0x50a4>
   1a158:	cmp	r0, #35	; 0x23
   1a15c:	beq	1a234 <close_stdout@@Base+0x51b0>
   1a160:	mov	r1, fp
   1a164:	bl	11948 <ungetc@plt>
   1a168:	mov	r0, fp
   1a16c:	ldr	r1, [sp, #12]
   1a170:	mov	r2, sl
   1a174:	mov	r3, r9
   1a178:	bl	11990 <fscanf@plt>
   1a17c:	cmp	r0, #1
   1a180:	ble	1a264 <close_stdout@@Base+0x51e0>
   1a184:	mov	r0, sl
   1a188:	bl	11918 <strlen@plt>
   1a18c:	str	r0, [sp, #8]
   1a190:	mov	r0, r9
   1a194:	bl	11918 <strlen@plt>
   1a198:	cmp	r8, #0
   1a19c:	mov	r2, r0
   1a1a0:	bne	1a2c8 <close_stdout@@Base+0x5244>
   1a1a4:	ldr	r3, [sp, #8]
   1a1a8:	str	r2, [sp]
   1a1ac:	add	r8, r0, r3
   1a1b0:	add	r0, r8, #3
   1a1b4:	add	r8, r8, #2
   1a1b8:	bl	1187c <malloc@plt>
   1a1bc:	ldr	r2, [sp]
   1a1c0:	mov	r3, r0
   1a1c4:	cmp	r3, #0
   1a1c8:	beq	1a32c <close_stdout@@Base+0x52a8>
   1a1cc:	ldr	r0, [sp, #8]
   1a1d0:	movw	r1, #65534	; 0xfffe
   1a1d4:	movt	r1, #65535	; 0xffff
   1a1d8:	rsb	r2, r2, r8
   1a1dc:	rsb	r1, r0, r1
   1a1e0:	stm	sp, {r2, r3}
   1a1e4:	add	r0, r1, r2
   1a1e8:	mov	r1, sl
   1a1ec:	add	r0, r3, r0
   1a1f0:	mov	r4, r3
   1a1f4:	bl	1181c <strcpy@plt>
   1a1f8:	ldr	r2, [sp]
   1a1fc:	ldr	r3, [sp, #4]
   1a200:	mov	r1, r9
   1a204:	sub	r0, r2, #1
   1a208:	add	r0, r3, r0
   1a20c:	bl	1181c <strcpy@plt>
   1a210:	ldr	r3, [fp, #4]
   1a214:	ldr	r2, [fp, #8]
   1a218:	cmp	r3, r2
   1a21c:	bcc	1a138 <close_stdout@@Base+0x50b4>
   1a220:	mov	r0, fp
   1a224:	bl	119f0 <__uflow@plt>
   1a228:	cmn	r0, #1
   1a22c:	beq	1a264 <close_stdout@@Base+0x51e0>
   1a230:	b	1a144 <close_stdout@@Base+0x50c0>
   1a234:	ldr	r3, [fp, #4]
   1a238:	ldr	r2, [fp, #8]
   1a23c:	cmp	r3, r2
   1a240:	bcs	1a348 <close_stdout@@Base+0x52c4>
   1a244:	add	r2, r3, #1
   1a248:	str	r2, [fp, #4]
   1a24c:	ldrb	r0, [r3]
   1a250:	cmp	r0, #10
   1a254:	cmnne	r0, #1
   1a258:	bne	1a234 <close_stdout@@Base+0x51b0>
   1a25c:	cmn	r0, #1
   1a260:	bne	1a128 <close_stdout@@Base+0x50a4>
   1a264:	mov	r0, fp
   1a268:	bl	1a5b8 <close_stdout@@Base+0x5534>
   1a26c:	cmp	r8, #0
   1a270:	beq	1a2bc <close_stdout@@Base+0x5238>
   1a274:	mov	r3, #0
   1a278:	strb	r3, [r4, r8]
   1a27c:	mov	r0, r7
   1a280:	bl	11750 <free@plt>
   1a284:	ldr	r3, [pc, #236]	; 1a378 <close_stdout@@Base+0x52f4>
   1a288:	add	r3, pc, r3
   1a28c:	str	r4, [r3]
   1a290:	b	19fb4 <close_stdout@@Base+0x4f30>
   1a294:	ldr	r8, [pc, #224]	; 1a37c <close_stdout@@Base+0x52f8>
   1a298:	mov	r3, #7
   1a29c:	mov	sl, #8
   1a2a0:	add	r8, pc, r8
   1a2a4:	ldrb	r3, [r8, r3]
   1a2a8:	cmp	r3, #47	; 0x2f
   1a2ac:	movne	r9, #1
   1a2b0:	movne	fp, r9
   1a2b4:	bne	1a098 <close_stdout@@Base+0x5014>
   1a2b8:	b	1a090 <close_stdout@@Base+0x500c>
   1a2bc:	ldr	r4, [pc, #188]	; 1a380 <close_stdout@@Base+0x52fc>
   1a2c0:	add	r4, pc, r4
   1a2c4:	b	1a27c <close_stdout@@Base+0x51f8>
   1a2c8:	ldr	r0, [sp, #8]
   1a2cc:	str	r2, [sp]
   1a2d0:	add	r3, r0, r2
   1a2d4:	mov	r0, r4
   1a2d8:	add	r8, r3, r8
   1a2dc:	add	r1, r8, #3
   1a2e0:	add	r8, r8, #2
   1a2e4:	bl	117a4 <realloc@plt>
   1a2e8:	ldr	r2, [sp]
   1a2ec:	mov	r3, r0
   1a2f0:	b	1a1c4 <close_stdout@@Base+0x5140>
   1a2f4:	ldr	r4, [pc, #136]	; 1a384 <close_stdout@@Base+0x5300>
   1a2f8:	add	r4, pc, r4
   1a2fc:	b	1a284 <close_stdout@@Base+0x5200>
   1a300:	ldr	r8, [pc, #128]	; 1a388 <close_stdout@@Base+0x5304>
   1a304:	mov	r3, #7
   1a308:	mov	sl, #8
   1a30c:	add	r8, pc, r8
   1a310:	b	1a2a4 <close_stdout@@Base+0x5220>
   1a314:	ldr	r4, [pc, #112]	; 1a38c <close_stdout@@Base+0x5308>
   1a318:	mov	r0, r8
   1a31c:	add	r4, pc, r4
   1a320:	bl	11abc <close@plt>
   1a324:	b	1a27c <close_stdout@@Base+0x51f8>
   1a328:	bl	11798 <__stack_chk_fail@plt>
   1a32c:	mov	r0, r4
   1a330:	ldr	r4, [pc, #88]	; 1a390 <close_stdout@@Base+0x530c>
   1a334:	bl	11750 <free@plt>
   1a338:	mov	r0, fp
   1a33c:	add	r4, pc, r4
   1a340:	bl	1a5b8 <close_stdout@@Base+0x5534>
   1a344:	b	1a27c <close_stdout@@Base+0x51f8>
   1a348:	mov	r0, fp
   1a34c:	bl	119f0 <__uflow@plt>
   1a350:	b	1a250 <close_stdout@@Base+0x51cc>
   1a354:	andeq	r6, r1, r8, ror r0
   1a358:	andeq	r0, r0, ip, ror r1
   1a35c:	strdeq	r6, [r1], -r8
   1a360:	andeq	r4, r0, ip, lsr #29
   1a364:	strdeq	r4, [r0], -r0
   1a368:	andeq	r4, r0, r4, lsl #29
   1a36c:	andeq	r4, r0, ip, lsr #28
   1a370:	andeq	r4, r0, r8, asr sp
   1a374:	andeq	r4, r0, r8, ror #27
   1a378:	andeq	r6, r1, r8, lsl r1
   1a37c:	andeq	r4, r0, r4, lsr ip
   1a380:	andeq	r4, r0, r8, lsl #9
   1a384:	andeq	r4, r0, r0, asr r4
   1a388:	andeq	r4, r0, r8, asr #23
   1a38c:	andeq	r4, r0, ip, lsr #8
   1a390:	andeq	r4, r0, ip, lsl #8
   1a394:	cmp	r0, #2
   1a398:	push	{r3, r4, r5, r6, r7, lr}
   1a39c:	mov	r4, r0
   1a3a0:	bhi	1a3c8 <close_stdout@@Base+0x5344>
   1a3a4:	bl	1a96c <close_stdout@@Base+0x58e8>
   1a3a8:	mov	r7, r0
   1a3ac:	bl	11960 <__errno_location@plt>
   1a3b0:	ldr	r6, [r0]
   1a3b4:	mov	r5, r0
   1a3b8:	mov	r0, r4
   1a3bc:	mov	r4, r7
   1a3c0:	bl	11abc <close@plt>
   1a3c4:	str	r6, [r5]
   1a3c8:	mov	r0, r4
   1a3cc:	pop	{r3, r4, r5, r6, r7, pc}
   1a3d0:	ldr	r3, [pc, #256]	; 1a4d8 <close_stdout@@Base+0x5454>
   1a3d4:	ldr	r2, [pc, #256]	; 1a4dc <close_stdout@@Base+0x5458>
   1a3d8:	add	r3, pc, r3
   1a3dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a3e0:	subs	r6, r0, #0
   1a3e4:	ldr	r9, [r3, r2]
   1a3e8:	sub	sp, sp, #8
   1a3ec:	mov	sl, r1
   1a3f0:	str	r1, [sp]
   1a3f4:	ldr	r3, [r9]
   1a3f8:	str	r3, [sp, #4]
   1a3fc:	beq	1a4c0 <close_stdout@@Base+0x543c>
   1a400:	ldr	r0, [r1]
   1a404:	add	r3, r1, #4
   1a408:	str	r3, [sp]
   1a40c:	bl	11918 <strlen@plt>
   1a410:	mov	r4, r6
   1a414:	mov	r5, r0
   1a418:	b	1a43c <close_stdout@@Base+0x53b8>
   1a41c:	ldr	r3, [sp]
   1a420:	add	r2, r3, #4
   1a424:	str	r2, [sp]
   1a428:	ldr	r0, [r3]
   1a42c:	bl	11918 <strlen@plt>
   1a430:	adds	r0, r0, r5
   1a434:	movcc	r5, r0
   1a438:	mvncs	r5, #0
   1a43c:	subs	r4, r4, #1
   1a440:	bne	1a41c <close_stdout@@Base+0x5398>
   1a444:	cmp	r5, #0
   1a448:	blt	1a4b0 <close_stdout@@Base+0x542c>
   1a44c:	add	r0, r5, #1
   1a450:	sub	sl, sl, #4
   1a454:	bl	18d40 <close_stdout@@Base+0x3cbc>
   1a458:	mov	r4, r0
   1a45c:	mov	r5, r0
   1a460:	ldr	r8, [sl, #4]!
   1a464:	mov	r0, r8
   1a468:	bl	11918 <strlen@plt>
   1a46c:	mov	r1, r8
   1a470:	mov	r7, r0
   1a474:	mov	r0, r5
   1a478:	mov	r2, r7
   1a47c:	add	r5, r5, r7
   1a480:	bl	11768 <memcpy@plt>
   1a484:	subs	r6, r6, #1
   1a488:	bne	1a460 <close_stdout@@Base+0x53dc>
   1a48c:	mov	r3, #0
   1a490:	strb	r3, [r5]
   1a494:	ldr	r2, [sp, #4]
   1a498:	mov	r0, r4
   1a49c:	ldr	r3, [r9]
   1a4a0:	cmp	r2, r3
   1a4a4:	bne	1a4d4 <close_stdout@@Base+0x5450>
   1a4a8:	add	sp, sp, #8
   1a4ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a4b0:	bl	11960 <__errno_location@plt>
   1a4b4:	mov	r3, #75	; 0x4b
   1a4b8:	str	r3, [r0]
   1a4bc:	b	1a494 <close_stdout@@Base+0x5410>
   1a4c0:	mov	r0, #1
   1a4c4:	bl	18d40 <close_stdout@@Base+0x3cbc>
   1a4c8:	mov	r4, r0
   1a4cc:	mov	r5, r0
   1a4d0:	b	1a48c <close_stdout@@Base+0x5408>
   1a4d4:	bl	11798 <__stack_chk_fail@plt>
   1a4d8:	andeq	r5, r1, r0, lsr #24
   1a4dc:	andeq	r0, r0, ip, ror r1
   1a4e0:	ldr	r3, [pc, #200]	; 1a5b0 <close_stdout@@Base+0x552c>
   1a4e4:	mov	r2, r1
   1a4e8:	ldr	ip, [pc, #196]	; 1a5b4 <close_stdout@@Base+0x5530>
   1a4ec:	add	r3, pc, r3
   1a4f0:	push	{r4, lr}
   1a4f4:	sub	sp, sp, #8
   1a4f8:	ldr	r4, [r3, ip]
   1a4fc:	ldrb	lr, [r0]
   1a500:	ldr	r3, [r4]
   1a504:	cmp	lr, #0
   1a508:	str	r3, [sp, #4]
   1a50c:	beq	1a558 <close_stdout@@Base+0x54d4>
   1a510:	cmp	lr, #37	; 0x25
   1a514:	bne	1a57c <close_stdout@@Base+0x54f8>
   1a518:	ldrb	r3, [r0, #1]
   1a51c:	cmp	r3, #115	; 0x73
   1a520:	bne	1a57c <close_stdout@@Base+0x54f8>
   1a524:	mov	r3, r0
   1a528:	mov	lr, #0
   1a52c:	b	1a548 <close_stdout@@Base+0x54c4>
   1a530:	cmp	ip, #37	; 0x25
   1a534:	bne	1a57c <close_stdout@@Base+0x54f8>
   1a538:	add	r3, r3, #2
   1a53c:	ldrb	ip, [r3, #1]
   1a540:	cmp	ip, #115	; 0x73
   1a544:	bne	1a57c <close_stdout@@Base+0x54f8>
   1a548:	ldrb	ip, [r3, #2]
   1a54c:	add	lr, lr, #1
   1a550:	cmp	ip, #0
   1a554:	bne	1a530 <close_stdout@@Base+0x54ac>
   1a558:	mov	r0, lr
   1a55c:	mov	r1, r2
   1a560:	bl	1a3d0 <close_stdout@@Base+0x534c>
   1a564:	ldr	r2, [sp, #4]
   1a568:	ldr	r3, [r4]
   1a56c:	cmp	r2, r3
   1a570:	bne	1a5ac <close_stdout@@Base+0x5528>
   1a574:	add	sp, sp, #8
   1a578:	pop	{r4, pc}
   1a57c:	mov	r1, r0
   1a580:	mov	r0, sp
   1a584:	bl	1a8d4 <close_stdout@@Base+0x5850>
   1a588:	cmp	r0, #0
   1a58c:	ldrge	r0, [sp]
   1a590:	bge	1a564 <close_stdout@@Base+0x54e0>
   1a594:	bl	11960 <__errno_location@plt>
   1a598:	ldr	r3, [r0]
   1a59c:	cmp	r3, #12
   1a5a0:	movne	r0, #0
   1a5a4:	bne	1a564 <close_stdout@@Base+0x54e0>
   1a5a8:	bl	18f54 <close_stdout@@Base+0x3ed0>
   1a5ac:	bl	11798 <__stack_chk_fail@plt>
   1a5b0:	andeq	r5, r1, ip, lsl #22
   1a5b4:	andeq	r0, r0, ip, ror r1
   1a5b8:	push	{r4, r5, r6, lr}
   1a5bc:	sub	sp, sp, #8
   1a5c0:	mov	r4, r0
   1a5c4:	bl	119a8 <fileno@plt>
   1a5c8:	cmp	r0, #0
   1a5cc:	mov	r0, r4
   1a5d0:	blt	1a64c <close_stdout@@Base+0x55c8>
   1a5d4:	bl	118a0 <__freading@plt>
   1a5d8:	cmp	r0, #0
   1a5dc:	bne	1a618 <close_stdout@@Base+0x5594>
   1a5e0:	mov	r0, r4
   1a5e4:	bl	1a7cc <close_stdout@@Base+0x5748>
   1a5e8:	cmp	r0, #0
   1a5ec:	beq	1a648 <close_stdout@@Base+0x55c4>
   1a5f0:	bl	11960 <__errno_location@plt>
   1a5f4:	ldr	r6, [r0]
   1a5f8:	mov	r5, r0
   1a5fc:	mov	r0, r4
   1a600:	bl	119cc <fclose@plt>
   1a604:	cmp	r6, #0
   1a608:	mvnne	r0, #0
   1a60c:	strne	r6, [r5]
   1a610:	add	sp, sp, #8
   1a614:	pop	{r4, r5, r6, pc}
   1a618:	mov	r0, r4
   1a61c:	bl	119a8 <fileno@plt>
   1a620:	mov	r1, #1
   1a624:	mov	r2, #0
   1a628:	mov	r3, #0
   1a62c:	str	r1, [sp]
   1a630:	bl	11804 <lseek64@plt>
   1a634:	mvn	r2, #0
   1a638:	mvn	r3, #0
   1a63c:	cmp	r1, r3
   1a640:	cmpeq	r0, r2
   1a644:	bne	1a5e0 <close_stdout@@Base+0x555c>
   1a648:	mov	r0, r4
   1a64c:	add	sp, sp, #8
   1a650:	pop	{r4, r5, r6, lr}
   1a654:	b	119cc <fclose@plt>
   1a658:	push	{r1, r2, r3}
   1a65c:	movw	ip, #1030	; 0x406
   1a660:	ldr	r3, [pc, #336]	; 1a7b8 <close_stdout@@Base+0x5734>
   1a664:	push	{r4, r5, r6, r7, r8, lr}
   1a668:	add	r3, pc, r3
   1a66c:	ldr	lr, [pc, #328]	; 1a7bc <close_stdout@@Base+0x5738>
   1a670:	sub	sp, sp, #12
   1a674:	add	r2, sp, #40	; 0x28
   1a678:	mov	r6, r0
   1a67c:	ldr	r1, [sp, #36]	; 0x24
   1a680:	ldr	r4, [r3, lr]
   1a684:	cmp	r1, ip
   1a688:	str	r2, [sp]
   1a68c:	ldr	r3, [r4]
   1a690:	str	r3, [sp, #4]
   1a694:	bne	1a718 <close_stdout@@Base+0x5694>
   1a698:	ldr	r8, [pc, #288]	; 1a7c0 <close_stdout@@Base+0x573c>
   1a69c:	add	r3, sp, #44	; 0x2c
   1a6a0:	str	r3, [sp]
   1a6a4:	add	r8, pc, r8
   1a6a8:	ldr	r7, [sp, #40]	; 0x28
   1a6ac:	ldr	r3, [r8]
   1a6b0:	mov	r2, r7
   1a6b4:	cmp	r3, #0
   1a6b8:	blt	1a7a4 <close_stdout@@Base+0x5720>
   1a6bc:	bl	11954 <fcntl@plt>
   1a6c0:	subs	r5, r0, #0
   1a6c4:	blt	1a728 <close_stdout@@Base+0x56a4>
   1a6c8:	ldr	r3, [pc, #244]	; 1a7c4 <close_stdout@@Base+0x5740>
   1a6cc:	mov	r2, #1
   1a6d0:	add	r3, pc, r3
   1a6d4:	str	r2, [r3]
   1a6d8:	cmp	r5, #0
   1a6dc:	blt	1a6f4 <close_stdout@@Base+0x5670>
   1a6e0:	ldr	r3, [pc, #224]	; 1a7c8 <close_stdout@@Base+0x5744>
   1a6e4:	add	r3, pc, r3
   1a6e8:	ldr	r3, [r3]
   1a6ec:	cmn	r3, #1
   1a6f0:	beq	1a758 <close_stdout@@Base+0x56d4>
   1a6f4:	ldr	r2, [sp, #4]
   1a6f8:	mov	r0, r5
   1a6fc:	ldr	r3, [r4]
   1a700:	cmp	r2, r3
   1a704:	bne	1a7b4 <close_stdout@@Base+0x5730>
   1a708:	add	sp, sp, #12
   1a70c:	pop	{r4, r5, r6, r7, r8, lr}
   1a710:	add	sp, sp, #12
   1a714:	bx	lr
   1a718:	ldr	r2, [sp, #40]	; 0x28
   1a71c:	bl	11954 <fcntl@plt>
   1a720:	mov	r5, r0
   1a724:	b	1a6f4 <close_stdout@@Base+0x5670>
   1a728:	bl	11960 <__errno_location@plt>
   1a72c:	ldr	r3, [r0]
   1a730:	cmp	r3, #22
   1a734:	bne	1a6c8 <close_stdout@@Base+0x5644>
   1a738:	mov	r0, r6
   1a73c:	mov	r2, r7
   1a740:	mov	r1, #0
   1a744:	bl	1a658 <close_stdout@@Base+0x55d4>
   1a748:	subs	r5, r0, #0
   1a74c:	blt	1a6f4 <close_stdout@@Base+0x5670>
   1a750:	mvn	r3, #0
   1a754:	str	r3, [r8]
   1a758:	mov	r0, r5
   1a75c:	mov	r1, #1
   1a760:	bl	11954 <fcntl@plt>
   1a764:	subs	r2, r0, #0
   1a768:	blt	1a784 <close_stdout@@Base+0x5700>
   1a76c:	orr	r2, r2, #1
   1a770:	mov	r0, r5
   1a774:	mov	r1, #2
   1a778:	bl	11954 <fcntl@plt>
   1a77c:	cmn	r0, #1
   1a780:	bne	1a6f4 <close_stdout@@Base+0x5670>
   1a784:	bl	11960 <__errno_location@plt>
   1a788:	ldr	r7, [r0]
   1a78c:	mov	r6, r0
   1a790:	mov	r0, r5
   1a794:	mvn	r5, #0
   1a798:	bl	11abc <close@plt>
   1a79c:	str	r7, [r6]
   1a7a0:	b	1a6f4 <close_stdout@@Base+0x5670>
   1a7a4:	mov	r1, #0
   1a7a8:	bl	1a658 <close_stdout@@Base+0x55d4>
   1a7ac:	mov	r5, r0
   1a7b0:	b	1a6d8 <close_stdout@@Base+0x5654>
   1a7b4:	bl	11798 <__stack_chk_fail@plt>
   1a7b8:	muleq	r1, r0, r9
   1a7bc:	andeq	r0, r0, ip, ror r1
   1a7c0:	andeq	r5, r1, r0, lsl #26
   1a7c4:	ldrdeq	r5, [r1], -r4
   1a7c8:	andeq	r5, r1, r0, asr #25
   1a7cc:	push	{r4, lr}
   1a7d0:	subs	r4, r0, #0
   1a7d4:	sub	sp, sp, #8
   1a7d8:	beq	1a7e8 <close_stdout@@Base+0x5764>
   1a7dc:	bl	118a0 <__freading@plt>
   1a7e0:	cmp	r0, #0
   1a7e4:	bne	1a7f8 <close_stdout@@Base+0x5774>
   1a7e8:	mov	r0, r4
   1a7ec:	add	sp, sp, #8
   1a7f0:	pop	{r4, lr}
   1a7f4:	b	11744 <fflush@plt>
   1a7f8:	ldr	r3, [r4]
   1a7fc:	tst	r3, #256	; 0x100
   1a800:	beq	1a7e8 <close_stdout@@Base+0x5764>
   1a804:	mov	r3, #1
   1a808:	mov	r0, r4
   1a80c:	str	r3, [sp]
   1a810:	mov	r2, #0
   1a814:	mov	r3, #0
   1a818:	bl	1a82c <close_stdout@@Base+0x57a8>
   1a81c:	mov	r0, r4
   1a820:	add	sp, sp, #8
   1a824:	pop	{r4, lr}
   1a828:	b	11744 <fflush@plt>
   1a82c:	push	{r4, r5, r6, r7, lr}
   1a830:	sub	sp, sp, #20
   1a834:	ldmib	r0, {r1, ip}
   1a838:	mov	r6, r0
   1a83c:	ldr	r4, [sp, #40]	; 0x28
   1a840:	cmp	ip, r1
   1a844:	beq	1a85c <close_stdout@@Base+0x57d8>
   1a848:	str	r4, [sp, #40]	; 0x28
   1a84c:	mov	r0, r6
   1a850:	add	sp, sp, #20
   1a854:	pop	{r4, r5, r6, r7, lr}
   1a858:	b	119d8 <fseeko64@plt>
   1a85c:	ldr	ip, [r0, #20]
   1a860:	ldr	r1, [r0, #16]
   1a864:	cmp	ip, r1
   1a868:	bne	1a848 <close_stdout@@Base+0x57c4>
   1a86c:	ldr	r7, [r0, #36]	; 0x24
   1a870:	cmp	r7, #0
   1a874:	bne	1a848 <close_stdout@@Base+0x57c4>
   1a878:	str	r2, [sp, #12]
   1a87c:	mvn	r5, #0
   1a880:	str	r3, [sp, #8]
   1a884:	bl	119a8 <fileno@plt>
   1a888:	str	r4, [sp]
   1a88c:	mvn	r4, #0
   1a890:	ldr	r2, [sp, #12]
   1a894:	ldr	r3, [sp, #8]
   1a898:	bl	11804 <lseek64@plt>
   1a89c:	mov	r2, r0
   1a8a0:	mov	r3, r1
   1a8a4:	cmp	r3, r5
   1a8a8:	cmpeq	r2, r4
   1a8ac:	beq	1a8cc <close_stdout@@Base+0x5848>
   1a8b0:	ldr	r1, [r6]
   1a8b4:	mov	r0, r7
   1a8b8:	strd	r2, [r6, #80]	; 0x50
   1a8bc:	bic	r3, r1, #16
   1a8c0:	str	r3, [r6]
   1a8c4:	add	sp, sp, #20
   1a8c8:	pop	{r4, r5, r6, r7, pc}
   1a8cc:	mvn	r0, #0
   1a8d0:	b	1a8c4 <close_stdout@@Base+0x5840>
   1a8d4:	ldr	ip, [pc, #136]	; 1a964 <close_stdout@@Base+0x58e0>
   1a8d8:	mov	r3, r2
   1a8dc:	push	{r4, r5, lr}
   1a8e0:	add	ip, pc, ip
   1a8e4:	ldr	lr, [pc, #124]	; 1a968 <close_stdout@@Base+0x58e4>
   1a8e8:	sub	sp, sp, #12
   1a8ec:	mov	r2, r1
   1a8f0:	mov	r5, r0
   1a8f4:	mov	r1, sp
   1a8f8:	mov	r0, #0
   1a8fc:	ldr	r4, [ip, lr]
   1a900:	ldr	ip, [r4]
   1a904:	str	ip, [sp, #4]
   1a908:	bl	1a978 <close_stdout@@Base+0x58f4>
   1a90c:	subs	r2, r0, #0
   1a910:	beq	1a940 <close_stdout@@Base+0x58bc>
   1a914:	ldr	r3, [sp]
   1a918:	cmp	r3, #0
   1a91c:	strge	r2, [r5]
   1a920:	blt	1a948 <close_stdout@@Base+0x58c4>
   1a924:	ldr	r2, [sp, #4]
   1a928:	mov	r0, r3
   1a92c:	ldr	r3, [r4]
   1a930:	cmp	r2, r3
   1a934:	bne	1a960 <close_stdout@@Base+0x58dc>
   1a938:	add	sp, sp, #12
   1a93c:	pop	{r4, r5, pc}
   1a940:	mvn	r3, #0
   1a944:	b	1a924 <close_stdout@@Base+0x58a0>
   1a948:	bl	11750 <free@plt>
   1a94c:	bl	11960 <__errno_location@plt>
   1a950:	mov	r2, #75	; 0x4b
   1a954:	mvn	r3, #0
   1a958:	str	r2, [r0]
   1a95c:	b	1a924 <close_stdout@@Base+0x58a0>
   1a960:	bl	11798 <__stack_chk_fail@plt>
   1a964:	andeq	r5, r1, r8, lsl r7
   1a968:	andeq	r0, r0, ip, ror r1
   1a96c:	mov	r1, #0
   1a970:	mov	r2, #3
   1a974:	b	1a658 <close_stdout@@Base+0x55d4>
   1a978:	ldr	ip, [pc, #3636]	; 1b7b4 <close_stdout@@Base+0x6730>
   1a97c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a980:	add	fp, sp, #32
   1a984:	ldr	lr, [pc, #3628]	; 1b7b8 <close_stdout@@Base+0x6734>
   1a988:	sub	sp, sp, #564	; 0x234
   1a98c:	add	ip, pc, ip
   1a990:	str	r0, [fp, #-504]	; 0xfffffe08
   1a994:	sub	r4, fp, #484	; 0x1e4
   1a998:	str	r1, [fp, #-536]	; 0xfffffde8
   1a99c:	mov	r0, r2
   1a9a0:	ldr	lr, [ip, lr]
   1a9a4:	mov	r5, r2
   1a9a8:	sub	r1, fp, #364	; 0x16c
   1a9ac:	mov	r2, r4
   1a9b0:	mov	r6, r3
   1a9b4:	ldr	ip, [lr]
   1a9b8:	str	lr, [fp, #-528]	; 0xfffffdf0
   1a9bc:	str	ip, [fp, #-40]	; 0xffffffd8
   1a9c0:	bl	1b90c <close_stdout@@Base+0x6888>
   1a9c4:	cmp	r0, #0
   1a9c8:	blt	1b4b8 <close_stdout@@Base+0x6434>
   1a9cc:	mov	r0, r6
   1a9d0:	mov	r1, r4
   1a9d4:	bl	1b7bc <close_stdout@@Base+0x6738>
   1a9d8:	cmp	r0, #0
   1a9dc:	blt	1b578 <close_stdout@@Base+0x64f4>
   1a9e0:	ldr	r3, [fp, #-356]	; 0xfffffe9c
   1a9e4:	ldr	r2, [fp, #-352]	; 0xfffffea0
   1a9e8:	add	r3, r3, #7
   1a9ec:	cmp	r3, #6
   1a9f0:	mvnls	r3, #0
   1a9f4:	adds	r3, r3, r2
   1a9f8:	bcs	1ad14 <close_stdout@@Base+0x5c90>
   1a9fc:	adds	r0, r3, #6
   1aa00:	bcs	1ad14 <close_stdout@@Base+0x5c90>
   1aa04:	cmp	r0, #4000	; 0xfa0
   1aa08:	bcs	1b45c <close_stdout@@Base+0x63d8>
   1aa0c:	add	r3, r3, #20
   1aa10:	mov	r1, #0
   1aa14:	bic	r3, r3, #7
   1aa18:	str	r1, [fp, #-548]	; 0xfffffddc
   1aa1c:	sub	sp, sp, r3
   1aa20:	add	r2, sp, #32
   1aa24:	str	r2, [fp, #-512]	; 0xfffffe00
   1aa28:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1aa2c:	sub	r2, fp, #496	; 0x1f0
   1aa30:	str	r2, [fp, #-532]	; 0xfffffdec
   1aa34:	mov	ip, #0
   1aa38:	cmp	r3, #0
   1aa3c:	ldr	r3, [fp, #-360]	; 0xfffffe98
   1aa40:	ldr	r2, [fp, #-504]	; 0xfffffe08
   1aa44:	mov	r6, ip
   1aa48:	ldrne	r1, [fp, #-536]	; 0xfffffde8
   1aa4c:	add	r7, r3, #44	; 0x2c
   1aa50:	ldreq	r4, [fp, #-504]	; 0xfffffe08
   1aa54:	str	ip, [fp, #-520]	; 0xfffffdf8
   1aa58:	ldrne	r4, [r1]
   1aa5c:	ldr	sl, [r7, #-44]	; 0xffffffd4
   1aa60:	sub	r3, r7, #44	; 0x2c
   1aa64:	str	r3, [fp, #-540]	; 0xfffffde4
   1aa68:	cmp	sl, r5
   1aa6c:	beq	1b328 <close_stdout@@Base+0x62a4>
   1aa70:	rsb	r3, r5, sl
   1aa74:	adds	r9, r3, r6
   1aa78:	mvncs	r9, #0
   1aa7c:	cmp	r4, r9
   1aa80:	bcs	1b2b8 <close_stdout@@Base+0x6234>
   1aa84:	cmp	r4, #0
   1aa88:	beq	1b184 <close_stdout@@Base+0x6100>
   1aa8c:	blt	1b5b4 <close_stdout@@Base+0x6530>
   1aa90:	lsl	r4, r4, #1
   1aa94:	cmp	r4, r9
   1aa98:	movcc	r4, r9
   1aa9c:	cmn	r4, #1
   1aaa0:	beq	1b5b4 <close_stdout@@Base+0x6530>
   1aaa4:	ldr	r1, [fp, #-504]	; 0xfffffe08
   1aaa8:	subs	lr, r2, r1
   1aaac:	rsbs	r8, lr, #0
   1aab0:	adcs	r8, r8, lr
   1aab4:	cmp	r2, r1
   1aab8:	cmpne	r2, #0
   1aabc:	bne	1b18c <close_stdout@@Base+0x6108>
   1aac0:	mov	r0, r4
   1aac4:	str	r2, [fp, #-560]	; 0xfffffdd0
   1aac8:	str	r3, [fp, #-556]	; 0xfffffdd4
   1aacc:	bl	1187c <malloc@plt>
   1aad0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   1aad4:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   1aad8:	mov	sl, r0
   1aadc:	cmp	sl, #0
   1aae0:	beq	1b5b4 <close_stdout@@Base+0x6530>
   1aae4:	cmp	r6, #0
   1aae8:	moveq	r8, #0
   1aaec:	andne	r8, r8, #1
   1aaf0:	cmp	r8, #0
   1aaf4:	bne	1b30c <close_stdout@@Base+0x6288>
   1aaf8:	add	r0, sl, r6
   1aafc:	mov	r1, r5
   1ab00:	mov	r2, r3
   1ab04:	bl	11768 <memcpy@plt>
   1ab08:	ldr	r3, [fp, #-364]	; 0xfffffe94
   1ab0c:	ldr	r2, [fp, #-520]	; 0xfffffdf8
   1ab10:	cmp	r3, r2
   1ab14:	beq	1b5c8 <close_stdout@@Base+0x6544>
   1ab18:	ldrb	r3, [r7, #-8]
   1ab1c:	cmp	r3, #37	; 0x25
   1ab20:	beq	1b1b0 <close_stdout@@Base+0x612c>
   1ab24:	ldr	r2, [r7, #-4]
   1ab28:	cmn	r2, #1
   1ab2c:	beq	1b498 <close_stdout@@Base+0x6414>
   1ab30:	cmp	r3, #110	; 0x6e
   1ab34:	beq	1b2dc <close_stdout@@Base+0x6258>
   1ab38:	ldr	r1, [fp, #-480]	; 0xfffffe20
   1ab3c:	ldr	r3, [r7, #-36]	; 0xffffffdc
   1ab40:	ldr	r8, [r1, r2, lsl #4]
   1ab44:	tst	r3, #1
   1ab48:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1ab4c:	mov	r2, #37	; 0x25
   1ab50:	addeq	r5, r1, #1
   1ab54:	strb	r2, [r1]
   1ab58:	ldrne	r2, [fp, #-512]	; 0xfffffe00
   1ab5c:	ldrne	r1, [fp, #-512]	; 0xfffffe00
   1ab60:	addne	r5, r2, #2
   1ab64:	movne	r2, #39	; 0x27
   1ab68:	strbne	r2, [r1, #1]
   1ab6c:	tst	r3, #2
   1ab70:	movne	r2, #45	; 0x2d
   1ab74:	strbne	r2, [r5]
   1ab78:	addne	r5, r5, #1
   1ab7c:	tst	r3, #4
   1ab80:	movne	r2, #43	; 0x2b
   1ab84:	strbne	r2, [r5]
   1ab88:	addne	r5, r5, #1
   1ab8c:	tst	r3, #8
   1ab90:	movne	r2, #32
   1ab94:	strbne	r2, [r5]
   1ab98:	addne	r5, r5, #1
   1ab9c:	tst	r3, #16
   1aba0:	movne	r2, #35	; 0x23
   1aba4:	strbne	r2, [r5]
   1aba8:	addne	r5, r5, #1
   1abac:	tst	r3, #64	; 0x40
   1abb0:	movne	r2, #73	; 0x49
   1abb4:	strbne	r2, [r5]
   1abb8:	addne	r5, r5, #1
   1abbc:	tst	r3, #32
   1abc0:	movne	r3, #48	; 0x30
   1abc4:	strbne	r3, [r5]
   1abc8:	ldr	r1, [r7, #-32]	; 0xffffffe0
   1abcc:	addne	r5, r5, #1
   1abd0:	ldr	r2, [r7, #-28]	; 0xffffffe4
   1abd4:	cmp	r1, r2
   1abd8:	beq	1abec <close_stdout@@Base+0x5b68>
   1abdc:	rsb	r2, r1, r2
   1abe0:	mov	r0, r5
   1abe4:	add	r5, r5, r2
   1abe8:	bl	11768 <memcpy@plt>
   1abec:	ldr	r1, [r7, #-20]	; 0xffffffec
   1abf0:	ldr	r2, [r7, #-16]
   1abf4:	cmp	r1, r2
   1abf8:	beq	1ac0c <close_stdout@@Base+0x5b88>
   1abfc:	rsb	r2, r1, r2
   1ac00:	mov	r0, r5
   1ac04:	add	r5, r5, r2
   1ac08:	bl	11768 <memcpy@plt>
   1ac0c:	sub	r3, r8, #7
   1ac10:	cmp	r3, #9
   1ac14:	bhi	1ac3c <close_stdout@@Base+0x5bb8>
   1ac18:	mov	r2, #1
   1ac1c:	lsl	r3, r2, r3
   1ac20:	movw	r2, #643	; 0x283
   1ac24:	and	r2, r3, r2
   1ac28:	cmp	r2, #0
   1ac2c:	beq	1b334 <close_stdout@@Base+0x62b0>
   1ac30:	mov	r3, #108	; 0x6c
   1ac34:	add	r5, r5, #1
   1ac38:	strb	r3, [r5, #-1]
   1ac3c:	ldrb	r3, [r7, #-8]
   1ac40:	mov	r1, #0
   1ac44:	strb	r1, [r5, #1]
   1ac48:	strb	r3, [r5]
   1ac4c:	ldr	r3, [r7, #-24]	; 0xffffffe8
   1ac50:	cmn	r3, #1
   1ac54:	beq	1b454 <close_stdout@@Base+0x63d0>
   1ac58:	ldr	r2, [fp, #-480]	; 0xfffffe20
   1ac5c:	add	r1, r2, r3, lsl #4
   1ac60:	ldr	r3, [r2, r3, lsl #4]
   1ac64:	cmp	r3, #5
   1ac68:	bne	1b498 <close_stdout@@Base+0x6414>
   1ac6c:	ldr	r3, [r1, #8]
   1ac70:	mov	r6, #1
   1ac74:	str	r3, [fp, #-492]	; 0xfffffe14
   1ac78:	ldr	r3, [r7, #-12]
   1ac7c:	cmn	r3, #1
   1ac80:	beq	1acac <close_stdout@@Base+0x5c28>
   1ac84:	ldr	r2, [fp, #-480]	; 0xfffffe20
   1ac88:	add	r1, r2, r3, lsl #4
   1ac8c:	ldr	r3, [r2, r3, lsl #4]
   1ac90:	cmp	r3, #5
   1ac94:	bne	1b498 <close_stdout@@Base+0x6414>
   1ac98:	ldr	r2, [r1, #8]
   1ac9c:	sub	r1, fp, #36	; 0x24
   1aca0:	add	r3, r1, r6, lsl #2
   1aca4:	add	r6, r6, #1
   1aca8:	str	r2, [r3, #-456]	; 0xfffffe38
   1acac:	adds	r2, r9, #2
   1acb0:	str	r2, [fp, #-524]	; 0xfffffdf4
   1acb4:	mov	r3, r2
   1acb8:	mvncs	r3, #0
   1acbc:	cmp	r4, r3
   1acc0:	bcs	1adfc <close_stdout@@Base+0x5d78>
   1acc4:	cmp	r4, #0
   1acc8:	beq	1ad74 <close_stdout@@Base+0x5cf0>
   1accc:	blt	1b7a0 <close_stdout@@Base+0x671c>
   1acd0:	cmp	r9, r2
   1acd4:	lsl	r4, r4, #1
   1acd8:	bls	1ad84 <close_stdout@@Base+0x5d00>
   1acdc:	str	sl, [fp, #-560]	; 0xfffffdd0
   1ace0:	bl	11960 <__errno_location@plt>
   1ace4:	str	r0, [fp, #-516]	; 0xfffffdfc
   1ace8:	mov	r2, sl
   1acec:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1acf0:	cmp	r2, #0
   1acf4:	cmpne	r2, r3
   1acf8:	bne	1b740 <close_stdout@@Base+0x66bc>
   1acfc:	ldr	r1, [fp, #-548]	; 0xfffffddc
   1ad00:	cmp	r1, #0
   1ad04:	beq	1ad14 <close_stdout@@Base+0x5c90>
   1ad08:	mov	r0, r1
   1ad0c:	bl	11750 <free@plt>
   1ad10:	b	1ad1c <close_stdout@@Base+0x5c98>
   1ad14:	bl	11960 <__errno_location@plt>
   1ad18:	str	r0, [fp, #-516]	; 0xfffffdfc
   1ad1c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1ad20:	sub	r3, fp, #348	; 0x15c
   1ad24:	cmp	r0, r3
   1ad28:	beq	1ad30 <close_stdout@@Base+0x5cac>
   1ad2c:	bl	11750 <free@plt>
   1ad30:	ldr	r0, [fp, #-480]	; 0xfffffe20
   1ad34:	sub	r3, fp, #476	; 0x1dc
   1ad38:	cmp	r0, r3
   1ad3c:	beq	1ad44 <close_stdout@@Base+0x5cc0>
   1ad40:	bl	11750 <free@plt>
   1ad44:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   1ad48:	mov	r3, #0
   1ad4c:	mov	r2, #12
   1ad50:	str	r2, [r1]
   1ad54:	ldr	r1, [fp, #-528]	; 0xfffffdf0
   1ad58:	mov	r0, r3
   1ad5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ad60:	ldr	r3, [r1]
   1ad64:	cmp	r2, r3
   1ad68:	bne	1b79c <close_stdout@@Base+0x6718>
   1ad6c:	sub	sp, fp, #32
   1ad70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad74:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   1ad78:	cmp	r9, r3
   1ad7c:	bhi	1acdc <close_stdout@@Base+0x5c58>
   1ad80:	mov	r4, #12
   1ad84:	ldr	r3, [fp, #-524]	; 0xfffffdf4
   1ad88:	cmp	r3, r4
   1ad8c:	movcs	r4, r3
   1ad90:	cmn	r4, #1
   1ad94:	beq	1acdc <close_stdout@@Base+0x5c58>
   1ad98:	ldr	r1, [fp, #-504]	; 0xfffffe08
   1ad9c:	subs	r0, sl, r1
   1ada0:	rsbs	r2, r0, #0
   1ada4:	adcs	r2, r2, r0
   1ada8:	cmp	sl, r1
   1adac:	cmpne	sl, #0
   1adb0:	bne	1b47c <close_stdout@@Base+0x63f8>
   1adb4:	mov	r0, r4
   1adb8:	str	r2, [fp, #-560]	; 0xfffffdd0
   1adbc:	bl	1187c <malloc@plt>
   1adc0:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   1adc4:	mov	r3, r0
   1adc8:	cmp	r3, #0
   1adcc:	beq	1acdc <close_stdout@@Base+0x5c58>
   1add0:	cmp	r9, #0
   1add4:	moveq	r2, #0
   1add8:	andne	r2, r2, #1
   1addc:	cmp	r2, #0
   1ade0:	moveq	sl, r3
   1ade4:	beq	1adfc <close_stdout@@Base+0x5d78>
   1ade8:	mov	r1, sl
   1adec:	mov	r0, r3
   1adf0:	mov	r2, r9
   1adf4:	mov	sl, r3
   1adf8:	bl	11768 <memcpy@plt>
   1adfc:	mov	r2, #0
   1ae00:	strb	r2, [sl, r9]
   1ae04:	sub	r8, r8, #1
   1ae08:	str	r8, [fp, #-508]	; 0xfffffe04
   1ae0c:	bl	11960 <__errno_location@plt>
   1ae10:	rsb	ip, r9, r4
   1ae14:	str	r5, [fp, #-544]	; 0xfffffde0
   1ae18:	mov	r5, ip
   1ae1c:	ldr	r3, [r0]
   1ae20:	str	r0, [fp, #-516]	; 0xfffffdfc
   1ae24:	str	r3, [fp, #-552]	; 0xfffffdd8
   1ae28:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   1ae2c:	mvn	r1, #0
   1ae30:	cmp	r5, #0
   1ae34:	str	r1, [fp, #-496]	; 0xfffffe10
   1ae38:	ldr	r1, [fp, #-508]	; 0xfffffe04
   1ae3c:	mov	r3, #0
   1ae40:	movge	r8, r5
   1ae44:	mvnlt	r8, #-2147483648	; 0x80000000
   1ae48:	str	r3, [r2]
   1ae4c:	cmp	r1, #16
   1ae50:	addls	pc, pc, r1, lsl #2
   1ae54:	b	1b498 <close_stdout@@Base+0x6414>
   1ae58:	b	1b38c <close_stdout@@Base+0x6308>
   1ae5c:	b	1b26c <close_stdout@@Base+0x61e8>
   1ae60:	b	1b370 <close_stdout@@Base+0x62ec>
   1ae64:	b	1b354 <close_stdout@@Base+0x62d0>
   1ae68:	b	1ae9c <close_stdout@@Base+0x5e18>
   1ae6c:	b	1ae9c <close_stdout@@Base+0x5e18>
   1ae70:	b	1ae9c <close_stdout@@Base+0x5e18>
   1ae74:	b	1ae9c <close_stdout@@Base+0x5e18>
   1ae78:	b	1aff4 <close_stdout@@Base+0x5f70>
   1ae7c:	b	1aff4 <close_stdout@@Base+0x5f70>
   1ae80:	b	1b050 <close_stdout@@Base+0x5fcc>
   1ae84:	b	1b050 <close_stdout@@Base+0x5fcc>
   1ae88:	b	1ae9c <close_stdout@@Base+0x5e18>
   1ae8c:	b	1ae9c <close_stdout@@Base+0x5e18>
   1ae90:	b	1ae9c <close_stdout@@Base+0x5e18>
   1ae94:	b	1ae9c <close_stdout@@Base+0x5e18>
   1ae98:	b	1ae9c <close_stdout@@Base+0x5e18>
   1ae9c:	ldr	r2, [r7, #-4]
   1aea0:	cmp	r6, #1
   1aea4:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1aea8:	add	r3, r3, r2, lsl #4
   1aeac:	ldr	r3, [r3, #8]
   1aeb0:	beq	1b284 <close_stdout@@Base+0x6200>
   1aeb4:	cmp	r6, #2
   1aeb8:	bne	1b0ac <close_stdout@@Base+0x6028>
   1aebc:	ldr	r2, [fp, #-512]	; 0xfffffe00
   1aec0:	add	r0, sl, r9
   1aec4:	ldr	lr, [fp, #-492]	; 0xfffffe14
   1aec8:	mov	r1, r8
   1aecc:	ldr	ip, [fp, #-488]	; 0xfffffe18
   1aed0:	str	r2, [sp]
   1aed4:	mov	r2, #1
   1aed8:	str	r3, [sp, #12]
   1aedc:	sub	r3, fp, #496	; 0x1f0
   1aee0:	str	lr, [sp, #4]
   1aee4:	str	r3, [sp, #16]
   1aee8:	mvn	r3, #0
   1aeec:	str	ip, [sp, #8]
   1aef0:	bl	11ae0 <__snprintf_chk@plt>
   1aef4:	ldr	r3, [fp, #-496]	; 0xfffffe10
   1aef8:	cmp	r3, #0
   1aefc:	blt	1b0e0 <close_stdout@@Base+0x605c>
   1af00:	cmp	r8, r3
   1af04:	bls	1af18 <close_stdout@@Base+0x5e94>
   1af08:	add	r2, sl, r3
   1af0c:	ldrb	r2, [r2, r9]
   1af10:	cmp	r2, #0
   1af14:	bne	1b498 <close_stdout@@Base+0x6414>
   1af18:	cmp	r0, r3
   1af1c:	movle	r0, r3
   1af20:	ble	1af28 <close_stdout@@Base+0x5ea4>
   1af24:	str	r0, [fp, #-496]	; 0xfffffe10
   1af28:	add	r3, r0, #1
   1af2c:	cmp	r8, r3
   1af30:	bhi	1b6c8 <close_stdout@@Base+0x6644>
   1af34:	cmn	r8, #-2147483647	; 0x80000001
   1af38:	beq	1b6e0 <close_stdout@@Base+0x665c>
   1af3c:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   1af40:	add	r0, r0, r2
   1af44:	cmp	r9, r0
   1af48:	mvnhi	r0, #0
   1af4c:	cmp	r4, #0
   1af50:	mvnlt	r0, #0
   1af54:	blt	1af64 <close_stdout@@Base+0x5ee0>
   1af58:	lsl	r3, r4, #1
   1af5c:	cmp	r0, r3
   1af60:	movcc	r0, r3
   1af64:	cmp	r4, r0
   1af68:	bcs	1ae28 <close_stdout@@Base+0x5da4>
   1af6c:	cmp	r4, #0
   1af70:	beq	1b2c0 <close_stdout@@Base+0x623c>
   1af74:	blt	1ace8 <close_stdout@@Base+0x5c64>
   1af78:	lsl	r4, r4, #1
   1af7c:	cmp	r4, r0
   1af80:	movcc	r4, r0
   1af84:	cmn	r4, #1
   1af88:	beq	1ace8 <close_stdout@@Base+0x5c64>
   1af8c:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1af90:	subs	r2, sl, r3
   1af94:	rsbs	r5, r2, #0
   1af98:	adcs	r5, r5, r2
   1af9c:	cmp	sl, r3
   1afa0:	cmpne	sl, #0
   1afa4:	bne	1b2c8 <close_stdout@@Base+0x6244>
   1afa8:	mov	r0, r4
   1afac:	bl	1187c <malloc@plt>
   1afb0:	mov	r3, r0
   1afb4:	cmp	r3, #0
   1afb8:	beq	1ace8 <close_stdout@@Base+0x5c64>
   1afbc:	cmp	r9, #0
   1afc0:	moveq	r5, #0
   1afc4:	andne	r5, r5, #1
   1afc8:	cmp	r5, #0
   1afcc:	rsbeq	r5, r9, r4
   1afd0:	moveq	sl, r3
   1afd4:	beq	1ae28 <close_stdout@@Base+0x5da4>
   1afd8:	mov	r1, sl
   1afdc:	mov	r0, r3
   1afe0:	mov	r2, r9
   1afe4:	mov	sl, r3
   1afe8:	rsb	r5, r9, r4
   1afec:	bl	11768 <memcpy@plt>
   1aff0:	b	1ae28 <close_stdout@@Base+0x5da4>
   1aff4:	ldr	r2, [r7, #-4]
   1aff8:	cmp	r6, #1
   1affc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1b000:	add	r3, r3, r2, lsl #4
   1b004:	ldrd	r2, [r3, #8]
   1b008:	beq	1b420 <close_stdout@@Base+0x639c>
   1b00c:	cmp	r6, #2
   1b010:	bne	1b4fc <close_stdout@@Base+0x6478>
   1b014:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1b018:	add	r0, sl, r9
   1b01c:	ldr	lr, [fp, #-492]	; 0xfffffe14
   1b020:	ldr	ip, [fp, #-488]	; 0xfffffe18
   1b024:	strd	r2, [sp, #16]
   1b028:	sub	r2, fp, #496	; 0x1f0
   1b02c:	str	r1, [sp]
   1b030:	mvn	r3, #0
   1b034:	str	r2, [sp, #24]
   1b038:	mov	r1, r8
   1b03c:	mov	r2, #1
   1b040:	str	lr, [sp, #4]
   1b044:	str	ip, [sp, #8]
   1b048:	bl	11ae0 <__snprintf_chk@plt>
   1b04c:	b	1aef4 <close_stdout@@Base+0x5e70>
   1b050:	ldr	r2, [r7, #-4]
   1b054:	cmp	r6, #1
   1b058:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1b05c:	add	r3, r3, r2, lsl #4
   1b060:	ldrd	r0, [r3, #8]
   1b064:	beq	1b3ec <close_stdout@@Base+0x6368>
   1b068:	cmp	r6, #2
   1b06c:	bne	1b4d0 <close_stdout@@Base+0x644c>
   1b070:	ldr	r3, [fp, #-492]	; 0xfffffe14
   1b074:	ldr	r2, [fp, #-512]	; 0xfffffe00
   1b078:	ldr	lr, [fp, #-488]	; 0xfffffe18
   1b07c:	strd	r0, [sp, #16]
   1b080:	add	r0, sl, r9
   1b084:	str	r2, [sp]
   1b088:	mov	r1, r8
   1b08c:	sub	r2, fp, #496	; 0x1f0
   1b090:	str	r3, [sp, #4]
   1b094:	str	r2, [sp, #24]
   1b098:	mvn	r3, #0
   1b09c:	mov	r2, #1
   1b0a0:	str	lr, [sp, #8]
   1b0a4:	bl	11ae0 <__snprintf_chk@plt>
   1b0a8:	b	1aef4 <close_stdout@@Base+0x5e70>
   1b0ac:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1b0b0:	sub	r2, fp, #496	; 0x1f0
   1b0b4:	str	r3, [sp, #4]
   1b0b8:	add	r0, sl, r9
   1b0bc:	str	r2, [sp, #8]
   1b0c0:	mvn	r3, #0
   1b0c4:	str	r1, [sp]
   1b0c8:	mov	r2, #1
   1b0cc:	mov	r1, r8
   1b0d0:	bl	11ae0 <__snprintf_chk@plt>
   1b0d4:	ldr	r3, [fp, #-496]	; 0xfffffe10
   1b0d8:	cmp	r3, #0
   1b0dc:	bge	1af00 <close_stdout@@Base+0x5e7c>
   1b0e0:	ldr	r1, [fp, #-544]	; 0xfffffde0
   1b0e4:	ldrb	r3, [r1, #1]
   1b0e8:	cmp	r3, #0
   1b0ec:	movne	r2, #0
   1b0f0:	strbne	r2, [r1, #1]
   1b0f4:	bne	1ae28 <close_stdout@@Base+0x5da4>
   1b0f8:	cmp	r0, #0
   1b0fc:	bge	1af24 <close_stdout@@Base+0x5ea0>
   1b100:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1b104:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   1b108:	cmp	sl, #0
   1b10c:	cmpne	r3, sl
   1b110:	ldr	r4, [r1]
   1b114:	bne	1b56c <close_stdout@@Base+0x64e8>
   1b118:	ldr	r2, [fp, #-548]	; 0xfffffddc
   1b11c:	cmp	r2, #0
   1b120:	beq	1b12c <close_stdout@@Base+0x60a8>
   1b124:	mov	r0, r2
   1b128:	bl	11750 <free@plt>
   1b12c:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1b130:	sub	r3, fp, #348	; 0x15c
   1b134:	cmp	r0, r3
   1b138:	beq	1b140 <close_stdout@@Base+0x60bc>
   1b13c:	bl	11750 <free@plt>
   1b140:	ldr	r0, [fp, #-480]	; 0xfffffe20
   1b144:	sub	r3, fp, #476	; 0x1dc
   1b148:	cmp	r0, r3
   1b14c:	beq	1b154 <close_stdout@@Base+0x60d0>
   1b150:	bl	11750 <free@plt>
   1b154:	cmp	r4, #0
   1b158:	bne	1b174 <close_stdout@@Base+0x60f0>
   1b15c:	ldr	r3, [fp, #-540]	; 0xfffffde4
   1b160:	ldrb	r4, [r3, #36]	; 0x24
   1b164:	and	r4, r4, #239	; 0xef
   1b168:	cmp	r4, #99	; 0x63
   1b16c:	movne	r4, #22
   1b170:	moveq	r4, #84	; 0x54
   1b174:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   1b178:	mov	r3, #0
   1b17c:	str	r4, [r1]
   1b180:	b	1ad54 <close_stdout@@Base+0x5cd0>
   1b184:	mov	r4, #12
   1b188:	b	1aa94 <close_stdout@@Base+0x5a10>
   1b18c:	mov	r0, r2
   1b190:	mov	r1, r4
   1b194:	str	r2, [fp, #-560]	; 0xfffffdd0
   1b198:	str	r3, [fp, #-556]	; 0xfffffdd4
   1b19c:	bl	117a4 <realloc@plt>
   1b1a0:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   1b1a4:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   1b1a8:	mov	sl, r0
   1b1ac:	b	1aadc <close_stdout@@Base+0x5a58>
   1b1b0:	ldr	r3, [r7, #-4]
   1b1b4:	cmn	r3, #1
   1b1b8:	bne	1b498 <close_stdout@@Base+0x6414>
   1b1bc:	adds	r6, r9, #1
   1b1c0:	mvncs	r6, #0
   1b1c4:	cmp	r4, r6
   1b1c8:	bcs	1b248 <close_stdout@@Base+0x61c4>
   1b1cc:	cmp	r4, #0
   1b1d0:	beq	1b49c <close_stdout@@Base+0x6418>
   1b1d4:	blt	1acdc <close_stdout@@Base+0x5c58>
   1b1d8:	lsl	r4, r4, #1
   1b1dc:	cmp	r4, r6
   1b1e0:	movcc	r4, r6
   1b1e4:	cmn	r4, #1
   1b1e8:	beq	1acdc <close_stdout@@Base+0x5c58>
   1b1ec:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1b1f0:	subs	ip, sl, r3
   1b1f4:	rsbs	r5, ip, #0
   1b1f8:	adcs	r5, r5, ip
   1b1fc:	cmp	sl, r3
   1b200:	cmpne	sl, #0
   1b204:	bne	1b4a4 <close_stdout@@Base+0x6420>
   1b208:	mov	r0, r4
   1b20c:	bl	1187c <malloc@plt>
   1b210:	mov	r3, r0
   1b214:	cmp	r3, #0
   1b218:	beq	1acdc <close_stdout@@Base+0x5c58>
   1b21c:	cmp	r9, #0
   1b220:	moveq	r5, #0
   1b224:	andne	r5, r5, #1
   1b228:	cmp	r5, #0
   1b22c:	moveq	sl, r3
   1b230:	beq	1b248 <close_stdout@@Base+0x61c4>
   1b234:	mov	r1, sl
   1b238:	mov	r0, r3
   1b23c:	mov	r2, r9
   1b240:	mov	sl, r3
   1b244:	bl	11768 <memcpy@plt>
   1b248:	mov	r2, sl
   1b24c:	mov	r1, #37	; 0x25
   1b250:	strb	r1, [sl, r9]
   1b254:	ldr	r1, [fp, #-520]	; 0xfffffdf8
   1b258:	add	r7, r7, #44	; 0x2c
   1b25c:	ldr	r5, [r7, #-84]	; 0xffffffac
   1b260:	add	r1, r1, #1
   1b264:	str	r1, [fp, #-520]	; 0xfffffdf8
   1b268:	b	1aa5c <close_stdout@@Base+0x59d8>
   1b26c:	ldr	r2, [r7, #-4]
   1b270:	cmp	r6, #1
   1b274:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1b278:	add	r3, r3, r2, lsl #4
   1b27c:	ldrb	r3, [r3, #8]
   1b280:	bne	1aeb4 <close_stdout@@Base+0x5e30>
   1b284:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1b288:	add	r0, sl, r9
   1b28c:	ldr	lr, [fp, #-492]	; 0xfffffe14
   1b290:	mov	r2, r6
   1b294:	str	r3, [sp, #8]
   1b298:	sub	r3, fp, #496	; 0x1f0
   1b29c:	str	r1, [sp]
   1b2a0:	mov	r1, r8
   1b2a4:	str	r3, [sp, #12]
   1b2a8:	mvn	r3, #0
   1b2ac:	str	lr, [sp, #4]
   1b2b0:	bl	11ae0 <__snprintf_chk@plt>
   1b2b4:	b	1aef4 <close_stdout@@Base+0x5e70>
   1b2b8:	mov	sl, r2
   1b2bc:	b	1aaf8 <close_stdout@@Base+0x5a74>
   1b2c0:	mov	r4, #12
   1b2c4:	b	1af7c <close_stdout@@Base+0x5ef8>
   1b2c8:	mov	r0, sl
   1b2cc:	mov	r1, r4
   1b2d0:	bl	117a4 <realloc@plt>
   1b2d4:	mov	r3, r0
   1b2d8:	b	1afb4 <close_stdout@@Base+0x5f30>
   1b2dc:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1b2e0:	add	r1, r3, r2, lsl #4
   1b2e4:	ldr	r3, [r3, r2, lsl #4]
   1b2e8:	sub	r3, r3, #18
   1b2ec:	cmp	r3, #4
   1b2f0:	addls	pc, pc, r3, lsl #2
   1b2f4:	b	1b498 <close_stdout@@Base+0x6414>
   1b2f8:	b	1b528 <close_stdout@@Base+0x64a4>
   1b2fc:	b	1b53c <close_stdout@@Base+0x64b8>
   1b300:	b	1b3d8 <close_stdout@@Base+0x6354>
   1b304:	b	1b3d8 <close_stdout@@Base+0x6354>
   1b308:	b	1b550 <close_stdout@@Base+0x64cc>
   1b30c:	mov	r1, r2
   1b310:	mov	r0, sl
   1b314:	mov	r2, r6
   1b318:	str	r3, [fp, #-556]	; 0xfffffdd4
   1b31c:	bl	11768 <memcpy@plt>
   1b320:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   1b324:	b	1aaf8 <close_stdout@@Base+0x5a74>
   1b328:	mov	r9, r6
   1b32c:	mov	sl, r2
   1b330:	b	1ab08 <close_stdout@@Base+0x5a84>
   1b334:	tst	r3, #32
   1b338:	bne	1b4c0 <close_stdout@@Base+0x643c>
   1b33c:	tst	r3, #12
   1b340:	beq	1ac3c <close_stdout@@Base+0x5bb8>
   1b344:	mov	r3, #108	; 0x6c
   1b348:	add	r5, r5, #1
   1b34c:	strb	r3, [r5, #-1]
   1b350:	b	1ac30 <close_stdout@@Base+0x5bac>
   1b354:	ldr	r2, [r7, #-4]
   1b358:	cmp	r6, #1
   1b35c:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1b360:	add	r3, r3, r2, lsl #4
   1b364:	ldrh	r3, [r3, #8]
   1b368:	bne	1aeb4 <close_stdout@@Base+0x5e30>
   1b36c:	b	1b284 <close_stdout@@Base+0x6200>
   1b370:	ldr	r2, [r7, #-4]
   1b374:	cmp	r6, #1
   1b378:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1b37c:	add	r3, r3, r2, lsl #4
   1b380:	ldrsh	r3, [r3, #8]
   1b384:	bne	1aeb4 <close_stdout@@Base+0x5e30>
   1b388:	b	1b284 <close_stdout@@Base+0x6200>
   1b38c:	ldr	r2, [r7, #-4]
   1b390:	cmp	r6, #1
   1b394:	ldr	r3, [fp, #-480]	; 0xfffffe20
   1b398:	add	r3, r3, r2, lsl #4
   1b39c:	ldrsb	r3, [r3, #8]
   1b3a0:	beq	1b284 <close_stdout@@Base+0x6200>
   1b3a4:	cmp	r6, #2
   1b3a8:	beq	1aebc <close_stdout@@Base+0x5e38>
   1b3ac:	ldr	r2, [fp, #-512]	; 0xfffffe00
   1b3b0:	add	r0, sl, r9
   1b3b4:	str	r3, [sp, #4]
   1b3b8:	mov	r1, r8
   1b3bc:	sub	r3, fp, #496	; 0x1f0
   1b3c0:	str	r3, [sp, #8]
   1b3c4:	str	r2, [sp]
   1b3c8:	mvn	r3, #0
   1b3cc:	mov	r2, #1
   1b3d0:	bl	11ae0 <__snprintf_chk@plt>
   1b3d4:	b	1aef4 <close_stdout@@Base+0x5e70>
   1b3d8:	ldr	r3, [r1, #8]
   1b3dc:	mov	r2, sl
   1b3e0:	mov	r6, r9
   1b3e4:	str	r9, [r3]
   1b3e8:	b	1b254 <close_stdout@@Base+0x61d0>
   1b3ec:	ldr	r3, [fp, #-492]	; 0xfffffe14
   1b3f0:	ldr	r2, [fp, #-512]	; 0xfffffe00
   1b3f4:	strd	r0, [sp, #8]
   1b3f8:	sub	r1, fp, #496	; 0x1f0
   1b3fc:	str	r3, [sp, #4]
   1b400:	add	r0, sl, r9
   1b404:	str	r2, [sp]
   1b408:	mvn	r3, #0
   1b40c:	str	r1, [sp, #16]
   1b410:	mov	r2, r6
   1b414:	mov	r1, r8
   1b418:	bl	11ae0 <__snprintf_chk@plt>
   1b41c:	b	1aef4 <close_stdout@@Base+0x5e70>
   1b420:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1b424:	add	r0, sl, r9
   1b428:	ldr	lr, [fp, #-492]	; 0xfffffe14
   1b42c:	strd	r2, [sp, #8]
   1b430:	sub	r3, fp, #496	; 0x1f0
   1b434:	str	r1, [sp]
   1b438:	mov	r2, r6
   1b43c:	str	r3, [sp, #16]
   1b440:	mov	r1, r8
   1b444:	mvn	r3, #0
   1b448:	str	lr, [sp, #4]
   1b44c:	bl	11ae0 <__snprintf_chk@plt>
   1b450:	b	1aef4 <close_stdout@@Base+0x5e70>
   1b454:	mov	r6, #0
   1b458:	b	1ac78 <close_stdout@@Base+0x5bf4>
   1b45c:	cmn	r0, #1
   1b460:	beq	1ad14 <close_stdout@@Base+0x5c90>
   1b464:	bl	1187c <malloc@plt>
   1b468:	cmp	r0, #0
   1b46c:	str	r0, [fp, #-512]	; 0xfffffe00
   1b470:	beq	1ad14 <close_stdout@@Base+0x5c90>
   1b474:	str	r0, [fp, #-548]	; 0xfffffddc
   1b478:	b	1aa28 <close_stdout@@Base+0x59a4>
   1b47c:	mov	r0, sl
   1b480:	mov	r1, r4
   1b484:	str	r2, [fp, #-560]	; 0xfffffdd0
   1b488:	bl	117a4 <realloc@plt>
   1b48c:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   1b490:	mov	r3, r0
   1b494:	b	1adc8 <close_stdout@@Base+0x5d44>
   1b498:	bl	11ab0 <abort@plt>
   1b49c:	mov	r4, #12
   1b4a0:	b	1b1dc <close_stdout@@Base+0x6158>
   1b4a4:	mov	r0, sl
   1b4a8:	mov	r1, r4
   1b4ac:	bl	117a4 <realloc@plt>
   1b4b0:	mov	r3, r0
   1b4b4:	b	1b214 <close_stdout@@Base+0x6190>
   1b4b8:	mov	r3, #0
   1b4bc:	b	1ad54 <close_stdout@@Base+0x5cd0>
   1b4c0:	mov	r3, #76	; 0x4c
   1b4c4:	add	r5, r5, #1
   1b4c8:	strb	r3, [r5, #-1]
   1b4cc:	b	1ac3c <close_stdout@@Base+0x5bb8>
   1b4d0:	ldr	r3, [fp, #-512]	; 0xfffffe00
   1b4d4:	mov	r2, #1
   1b4d8:	strd	r0, [sp, #8]
   1b4dc:	sub	r1, fp, #496	; 0x1f0
   1b4e0:	add	r0, sl, r9
   1b4e4:	str	r1, [sp, #16]
   1b4e8:	str	r3, [sp]
   1b4ec:	mov	r1, r8
   1b4f0:	mvn	r3, #0
   1b4f4:	bl	11ae0 <__snprintf_chk@plt>
   1b4f8:	b	1aef4 <close_stdout@@Base+0x5e70>
   1b4fc:	ldr	r1, [fp, #-512]	; 0xfffffe00
   1b500:	add	r0, sl, r9
   1b504:	strd	r2, [sp, #8]
   1b508:	sub	r2, fp, #496	; 0x1f0
   1b50c:	mvn	r3, #0
   1b510:	str	r2, [sp, #16]
   1b514:	str	r1, [sp]
   1b518:	mov	r2, #1
   1b51c:	mov	r1, r8
   1b520:	bl	11ae0 <__snprintf_chk@plt>
   1b524:	b	1aef4 <close_stdout@@Base+0x5e70>
   1b528:	ldr	r3, [r1, #8]
   1b52c:	mov	r2, sl
   1b530:	mov	r6, r9
   1b534:	strb	r9, [r3]
   1b538:	b	1b254 <close_stdout@@Base+0x61d0>
   1b53c:	ldr	r3, [r1, #8]
   1b540:	mov	r2, sl
   1b544:	mov	r6, r9
   1b548:	strh	r9, [r3]
   1b54c:	b	1b254 <close_stdout@@Base+0x61d0>
   1b550:	ldr	r3, [r1, #8]
   1b554:	mov	r2, sl
   1b558:	mov	r1, #0
   1b55c:	mov	r6, r9
   1b560:	str	r9, [r3]
   1b564:	str	r1, [r3, #4]
   1b568:	b	1b254 <close_stdout@@Base+0x61d0>
   1b56c:	mov	r0, sl
   1b570:	bl	11750 <free@plt>
   1b574:	b	1b118 <close_stdout@@Base+0x6094>
   1b578:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1b57c:	sub	r3, fp, #348	; 0x15c
   1b580:	cmp	r0, r3
   1b584:	beq	1b58c <close_stdout@@Base+0x6508>
   1b588:	bl	11750 <free@plt>
   1b58c:	ldr	r0, [fp, #-480]	; 0xfffffe20
   1b590:	sub	r3, fp, #476	; 0x1dc
   1b594:	cmp	r0, r3
   1b598:	beq	1b5a0 <close_stdout@@Base+0x651c>
   1b59c:	bl	11750 <free@plt>
   1b5a0:	bl	11960 <__errno_location@plt>
   1b5a4:	mov	r2, #22
   1b5a8:	mov	r3, #0
   1b5ac:	str	r2, [r0]
   1b5b0:	b	1ad54 <close_stdout@@Base+0x5cd0>
   1b5b4:	str	r2, [fp, #-560]	; 0xfffffdd0
   1b5b8:	bl	11960 <__errno_location@plt>
   1b5bc:	ldr	r2, [fp, #-560]	; 0xfffffdd0
   1b5c0:	str	r0, [fp, #-516]	; 0xfffffdfc
   1b5c4:	b	1acec <close_stdout@@Base+0x5c68>
   1b5c8:	adds	r5, r9, #1
   1b5cc:	movcc	r3, r5
   1b5d0:	mvncs	r3, #0
   1b5d4:	cmp	r3, r4
   1b5d8:	bls	1b660 <close_stdout@@Base+0x65dc>
   1b5dc:	cmp	r4, #0
   1b5e0:	moveq	r4, #12
   1b5e4:	beq	1b5f0 <close_stdout@@Base+0x656c>
   1b5e8:	lslge	r4, r4, #1
   1b5ec:	mvnlt	r4, #0
   1b5f0:	cmp	r5, r9
   1b5f4:	movcs	r3, r5
   1b5f8:	mvncc	r3, #0
   1b5fc:	cmp	r4, r3
   1b600:	bcs	1b610 <close_stdout@@Base+0x658c>
   1b604:	cmp	r5, r9
   1b608:	bcc	1acdc <close_stdout@@Base+0x5c58>
   1b60c:	mov	r4, r5
   1b610:	cmn	r4, #1
   1b614:	beq	1acdc <close_stdout@@Base+0x5c58>
   1b618:	ldr	r2, [fp, #-504]	; 0xfffffe08
   1b61c:	subs	r3, sl, r2
   1b620:	rsbs	r6, r3, #0
   1b624:	adcs	r6, r6, r3
   1b628:	cmp	sl, r2
   1b62c:	cmpne	sl, #0
   1b630:	bne	1b770 <close_stdout@@Base+0x66ec>
   1b634:	mov	r0, r4
   1b638:	bl	1187c <malloc@plt>
   1b63c:	mov	r3, r0
   1b640:	cmp	r3, #0
   1b644:	beq	1acdc <close_stdout@@Base+0x5c58>
   1b648:	cmp	r9, #0
   1b64c:	moveq	r6, #0
   1b650:	andne	r6, r6, #1
   1b654:	cmp	r6, #0
   1b658:	moveq	sl, r3
   1b65c:	bne	1b784 <close_stdout@@Base+0x6700>
   1b660:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1b664:	cmp	sl, r3
   1b668:	mov	r3, #0
   1b66c:	strb	r3, [sl, r9]
   1b670:	beq	1b67c <close_stdout@@Base+0x65f8>
   1b674:	cmp	r4, r5
   1b678:	bhi	1b758 <close_stdout@@Base+0x66d4>
   1b67c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   1b680:	cmp	r1, #0
   1b684:	beq	1b690 <close_stdout@@Base+0x660c>
   1b688:	mov	r0, r1
   1b68c:	bl	11750 <free@plt>
   1b690:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1b694:	sub	r3, fp, #348	; 0x15c
   1b698:	cmp	r0, r3
   1b69c:	beq	1b6a4 <close_stdout@@Base+0x6620>
   1b6a0:	bl	11750 <free@plt>
   1b6a4:	ldr	r0, [fp, #-480]	; 0xfffffe20
   1b6a8:	sub	r3, fp, #476	; 0x1dc
   1b6ac:	cmp	r0, r3
   1b6b0:	beq	1b6b8 <close_stdout@@Base+0x6634>
   1b6b4:	bl	11750 <free@plt>
   1b6b8:	ldr	r2, [fp, #-536]	; 0xfffffde8
   1b6bc:	mov	r3, sl
   1b6c0:	str	r9, [r2]
   1b6c4:	b	1ad54 <close_stdout@@Base+0x5cd0>
   1b6c8:	ldr	r2, [fp, #-516]	; 0xfffffdfc
   1b6cc:	add	r6, r0, r9
   1b6d0:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   1b6d4:	str	r1, [r2]
   1b6d8:	mov	r2, sl
   1b6dc:	b	1b254 <close_stdout@@Base+0x61d0>
   1b6e0:	ldr	r3, [fp, #-504]	; 0xfffffe08
   1b6e4:	cmp	sl, #0
   1b6e8:	cmpne	sl, r3
   1b6ec:	bne	1b74c <close_stdout@@Base+0x66c8>
   1b6f0:	ldr	r3, [fp, #-548]	; 0xfffffddc
   1b6f4:	cmp	r3, #0
   1b6f8:	beq	1b704 <close_stdout@@Base+0x6680>
   1b6fc:	mov	r0, r3
   1b700:	bl	11750 <free@plt>
   1b704:	ldr	r0, [fp, #-360]	; 0xfffffe98
   1b708:	sub	r3, fp, #348	; 0x15c
   1b70c:	cmp	r0, r3
   1b710:	beq	1b718 <close_stdout@@Base+0x6694>
   1b714:	bl	11750 <free@plt>
   1b718:	ldr	r0, [fp, #-480]	; 0xfffffe20
   1b71c:	sub	r3, fp, #476	; 0x1dc
   1b720:	cmp	r0, r3
   1b724:	beq	1b72c <close_stdout@@Base+0x66a8>
   1b728:	bl	11750 <free@plt>
   1b72c:	ldr	r1, [fp, #-516]	; 0xfffffdfc
   1b730:	mov	r2, #75	; 0x4b
   1b734:	mov	r3, #0
   1b738:	str	r2, [r1]
   1b73c:	b	1ad54 <close_stdout@@Base+0x5cd0>
   1b740:	mov	r0, r2
   1b744:	bl	11750 <free@plt>
   1b748:	b	1acfc <close_stdout@@Base+0x5c78>
   1b74c:	mov	r0, sl
   1b750:	bl	11750 <free@plt>
   1b754:	b	1b6f0 <close_stdout@@Base+0x666c>
   1b758:	mov	r0, sl
   1b75c:	mov	r1, r5
   1b760:	bl	117a4 <realloc@plt>
   1b764:	cmp	r0, #0
   1b768:	movne	sl, r0
   1b76c:	b	1b67c <close_stdout@@Base+0x65f8>
   1b770:	mov	r0, sl
   1b774:	mov	r1, r4
   1b778:	bl	117a4 <realloc@plt>
   1b77c:	mov	r3, r0
   1b780:	b	1b640 <close_stdout@@Base+0x65bc>
   1b784:	mov	r1, sl
   1b788:	mov	r0, r3
   1b78c:	mov	r2, r9
   1b790:	mov	sl, r3
   1b794:	bl	11768 <memcpy@plt>
   1b798:	b	1b660 <close_stdout@@Base+0x65dc>
   1b79c:	bl	11798 <__stack_chk_fail@plt>
   1b7a0:	ldr	r2, [fp, #-524]	; 0xfffffdf4
   1b7a4:	cmp	r9, r2
   1b7a8:	bhi	1acdc <close_stdout@@Base+0x5c58>
   1b7ac:	mvn	r4, #0
   1b7b0:	b	1ad84 <close_stdout@@Base+0x5d00>
   1b7b4:	andeq	r5, r1, ip, ror #12
   1b7b8:	andeq	r0, r0, ip, ror r1
   1b7bc:	push	{r4, r5, r6}
   1b7c0:	ldm	r1, {r3, ip}
   1b7c4:	cmp	r3, #0
   1b7c8:	beq	1b870 <close_stdout@@Base+0x67ec>
   1b7cc:	ldr	r6, [pc, #304]	; 1b904 <close_stdout@@Base+0x6880>
   1b7d0:	add	ip, ip, #16
   1b7d4:	ldr	r5, [pc, #300]	; 1b908 <close_stdout@@Base+0x6884>
   1b7d8:	mov	r4, #0
   1b7dc:	add	r6, pc, r6
   1b7e0:	add	r5, pc, r5
   1b7e4:	ldr	r3, [ip, #-16]
   1b7e8:	sub	r3, r3, #1
   1b7ec:	cmp	r3, #21
   1b7f0:	addls	pc, pc, r3, lsl #2
   1b7f4:	b	1b8fc <close_stdout@@Base+0x6878>
   1b7f8:	b	1b8bc <close_stdout@@Base+0x6838>
   1b7fc:	b	1b8bc <close_stdout@@Base+0x6838>
   1b800:	b	1b8ac <close_stdout@@Base+0x6828>
   1b804:	b	1b8ac <close_stdout@@Base+0x6828>
   1b808:	b	1b850 <close_stdout@@Base+0x67cc>
   1b80c:	b	1b850 <close_stdout@@Base+0x67cc>
   1b810:	b	1b850 <close_stdout@@Base+0x67cc>
   1b814:	b	1b850 <close_stdout@@Base+0x67cc>
   1b818:	b	1b87c <close_stdout@@Base+0x67f8>
   1b81c:	b	1b87c <close_stdout@@Base+0x67f8>
   1b820:	b	1b894 <close_stdout@@Base+0x6810>
   1b824:	b	1b894 <close_stdout@@Base+0x6810>
   1b828:	b	1b850 <close_stdout@@Base+0x67cc>
   1b82c:	b	1b850 <close_stdout@@Base+0x67cc>
   1b830:	b	1b8cc <close_stdout@@Base+0x6848>
   1b834:	b	1b8e4 <close_stdout@@Base+0x6860>
   1b838:	b	1b850 <close_stdout@@Base+0x67cc>
   1b83c:	b	1b850 <close_stdout@@Base+0x67cc>
   1b840:	b	1b850 <close_stdout@@Base+0x67cc>
   1b844:	b	1b850 <close_stdout@@Base+0x67cc>
   1b848:	b	1b850 <close_stdout@@Base+0x67cc>
   1b84c:	b	1b850 <close_stdout@@Base+0x67cc>
   1b850:	ldr	r3, [r0]
   1b854:	add	r0, r0, #4
   1b858:	str	r3, [ip, #-8]
   1b85c:	ldr	r3, [r1]
   1b860:	add	r4, r4, #1
   1b864:	add	ip, ip, #16
   1b868:	cmp	r3, r4
   1b86c:	bhi	1b7e4 <close_stdout@@Base+0x6760>
   1b870:	mov	r0, #0
   1b874:	pop	{r4, r5, r6}
   1b878:	bx	lr
   1b87c:	add	r3, r0, #7
   1b880:	bic	r3, r3, #7
   1b884:	add	r0, r3, #8
   1b888:	ldrd	r2, [r3]
   1b88c:	strd	r2, [ip, #-8]
   1b890:	b	1b85c <close_stdout@@Base+0x67d8>
   1b894:	add	r0, r0, #7
   1b898:	bic	r0, r0, #7
   1b89c:	add	r0, r0, #8
   1b8a0:	ldrd	r2, [r0, #-8]
   1b8a4:	strd	r2, [ip, #-8]
   1b8a8:	b	1b85c <close_stdout@@Base+0x67d8>
   1b8ac:	ldr	r3, [r0]
   1b8b0:	add	r0, r0, #4
   1b8b4:	strh	r3, [ip, #-8]
   1b8b8:	b	1b85c <close_stdout@@Base+0x67d8>
   1b8bc:	ldr	r3, [r0]
   1b8c0:	add	r0, r0, #4
   1b8c4:	strb	r3, [ip, #-8]
   1b8c8:	b	1b85c <close_stdout@@Base+0x67d8>
   1b8cc:	ldr	r3, [r0]
   1b8d0:	add	r0, r0, #4
   1b8d4:	cmp	r3, #0
   1b8d8:	str	r3, [ip, #-8]
   1b8dc:	streq	r5, [ip, #-8]
   1b8e0:	b	1b85c <close_stdout@@Base+0x67d8>
   1b8e4:	ldr	r3, [r0]
   1b8e8:	add	r0, r0, #4
   1b8ec:	cmp	r3, #0
   1b8f0:	str	r3, [ip, #-8]
   1b8f4:	streq	r6, [ip, #-8]
   1b8f8:	b	1b85c <close_stdout@@Base+0x67d8>
   1b8fc:	mvn	r0, #0
   1b900:	b	1b874 <close_stdout@@Base+0x67f0>
   1b904:	andeq	r3, r0, r8, lsr r7
   1b908:	andeq	r3, r0, r0, asr r7
   1b90c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b910:	mov	r7, r1
   1b914:	sub	sp, sp, #44	; 0x2c
   1b918:	mov	r5, r2
   1b91c:	movw	sl, #39321	; 0x9999
   1b920:	mov	r2, r7
   1b924:	movt	sl, #6553	; 0x1999
   1b928:	mov	r3, #0
   1b92c:	str	r3, [r2], #16
   1b930:	mov	r1, #7
   1b934:	str	r2, [r7, #4]
   1b938:	mov	r9, r0
   1b93c:	str	r2, [sp, #16]
   1b940:	mov	r2, r5
   1b944:	str	r3, [r2], #8
   1b948:	mov	r6, r3
   1b94c:	str	r2, [r5, #4]
   1b950:	movw	r0, #29789	; 0x745d
   1b954:	str	r3, [sp, #8]
   1b958:	movt	r0, #1489	; 0x5d1
   1b95c:	str	r1, [sp, #20]
   1b960:	mov	ip, sl
   1b964:	str	r3, [sp, #24]
   1b968:	str	r3, [sp, #36]	; 0x24
   1b96c:	mov	r3, #7
   1b970:	str	r2, [sp, #12]
   1b974:	str	r3, [sp, #28]
   1b978:	ldr	r1, [r7]
   1b97c:	ldr	r3, [r7, #4]
   1b980:	str	r0, [sp, #32]
   1b984:	b	1b990 <close_stdout@@Base+0x690c>
   1b988:	cmp	r0, #37	; 0x25
   1b98c:	beq	1b9d0 <close_stdout@@Base+0x694c>
   1b990:	mov	r8, r9
   1b994:	ldrb	r0, [r9], #1
   1b998:	cmp	r0, #0
   1b99c:	mov	r2, r9
   1b9a0:	bne	1b988 <close_stdout@@Base+0x6904>
   1b9a4:	mov	r4, #44	; 0x2c
   1b9a8:	mov	r2, r0
   1b9ac:	mul	r1, r4, r1
   1b9b0:	str	r8, [r3, r1]
   1b9b4:	ldr	r3, [sp, #24]
   1b9b8:	str	r3, [r7, #8]
   1b9bc:	ldr	r3, [sp, #8]
   1b9c0:	str	r3, [r7, #12]
   1b9c4:	mov	r0, r2
   1b9c8:	add	sp, sp, #44	; 0x2c
   1b9cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b9d0:	mov	r0, #44	; 0x2c
   1b9d4:	mul	r1, r0, r1
   1b9d8:	add	r4, r3, r1
   1b9dc:	str	r8, [r3, r1]
   1b9e0:	mvn	r1, #0
   1b9e4:	str	r6, [r4, #8]
   1b9e8:	str	r1, [r4, #20]
   1b9ec:	str	r1, [r4, #32]
   1b9f0:	str	r1, [r4, #40]	; 0x28
   1b9f4:	str	r6, [r4, #12]
   1b9f8:	str	r6, [r4, #16]
   1b9fc:	str	r6, [r4, #24]
   1ba00:	str	r6, [r4, #28]
   1ba04:	ldrb	r3, [r8, #1]
   1ba08:	sub	sl, r3, #48	; 0x30
   1ba0c:	uxtb	r1, sl
   1ba10:	cmp	r1, #9
   1ba14:	bls	1bda8 <close_stdout@@Base+0x6d24>
   1ba18:	mvn	r8, #0
   1ba1c:	b	1ba60 <close_stdout@@Base+0x69dc>
   1ba20:	cmp	r3, #45	; 0x2d
   1ba24:	beq	1ba7c <close_stdout@@Base+0x69f8>
   1ba28:	cmp	r3, #43	; 0x2b
   1ba2c:	beq	1ba8c <close_stdout@@Base+0x6a08>
   1ba30:	cmp	r3, #32
   1ba34:	beq	1ba9c <close_stdout@@Base+0x6a18>
   1ba38:	cmp	r3, #35	; 0x23
   1ba3c:	beq	1baac <close_stdout@@Base+0x6a28>
   1ba40:	cmp	r3, #48	; 0x30
   1ba44:	beq	1babc <close_stdout@@Base+0x6a38>
   1ba48:	cmp	r3, #73	; 0x49
   1ba4c:	bne	1bacc <close_stdout@@Base+0x6a48>
   1ba50:	ldr	r3, [r4, #8]
   1ba54:	orr	r3, r3, #64	; 0x40
   1ba58:	str	r3, [r4, #8]
   1ba5c:	ldrb	r3, [r2, #1]!
   1ba60:	cmp	r3, #39	; 0x27
   1ba64:	mov	r9, r2
   1ba68:	bne	1ba20 <close_stdout@@Base+0x699c>
   1ba6c:	ldr	r3, [r4, #8]
   1ba70:	orr	r3, r3, #1
   1ba74:	str	r3, [r4, #8]
   1ba78:	b	1ba5c <close_stdout@@Base+0x69d8>
   1ba7c:	ldr	r3, [r4, #8]
   1ba80:	orr	r3, r3, #2
   1ba84:	str	r3, [r4, #8]
   1ba88:	b	1ba5c <close_stdout@@Base+0x69d8>
   1ba8c:	ldr	r3, [r4, #8]
   1ba90:	orr	r3, r3, #4
   1ba94:	str	r3, [r4, #8]
   1ba98:	b	1ba5c <close_stdout@@Base+0x69d8>
   1ba9c:	ldr	r3, [r4, #8]
   1baa0:	orr	r3, r3, #8
   1baa4:	str	r3, [r4, #8]
   1baa8:	b	1ba5c <close_stdout@@Base+0x69d8>
   1baac:	ldr	r3, [r4, #8]
   1bab0:	orr	r3, r3, #16
   1bab4:	str	r3, [r4, #8]
   1bab8:	b	1ba5c <close_stdout@@Base+0x69d8>
   1babc:	ldr	r3, [r4, #8]
   1bac0:	orr	r3, r3, #32
   1bac4:	str	r3, [r4, #8]
   1bac8:	b	1ba5c <close_stdout@@Base+0x69d8>
   1bacc:	cmp	r3, #42	; 0x2a
   1bad0:	beq	1bf44 <close_stdout@@Base+0x6ec0>
   1bad4:	sub	r1, r3, #48	; 0x30
   1bad8:	uxtb	r1, r1
   1badc:	cmp	r1, #9
   1bae0:	bls	1be20 <close_stdout@@Base+0x6d9c>
   1bae4:	cmp	r3, #46	; 0x2e
   1bae8:	beq	1be74 <close_stdout@@Base+0x6df0>
   1baec:	mov	sl, #0
   1baf0:	mov	r0, #1
   1baf4:	b	1bb00 <close_stdout@@Base+0x6a7c>
   1baf8:	ldrb	r3, [r2, #1]
   1bafc:	add	r9, r9, #1
   1bb00:	cmp	r3, #104	; 0x68
   1bb04:	mov	r2, r9
   1bb08:	andeq	r3, sl, #1
   1bb0c:	orreq	sl, sl, r0, lsl r3
   1bb10:	beq	1baf8 <close_stdout@@Base+0x6a74>
   1bb14:	cmp	r3, #76	; 0x4c
   1bb18:	orreq	sl, sl, #4
   1bb1c:	beq	1baf8 <close_stdout@@Base+0x6a74>
   1bb20:	cmp	r3, #108	; 0x6c
   1bb24:	addeq	sl, sl, #8
   1bb28:	beq	1baf8 <close_stdout@@Base+0x6a74>
   1bb2c:	cmp	r3, #106	; 0x6a
   1bb30:	addeq	sl, sl, #16
   1bb34:	beq	1baf8 <close_stdout@@Base+0x6a74>
   1bb38:	and	r1, r3, #223	; 0xdf
   1bb3c:	cmp	r1, #90	; 0x5a
   1bb40:	beq	1baf8 <close_stdout@@Base+0x6a74>
   1bb44:	cmp	r3, #116	; 0x74
   1bb48:	beq	1baf8 <close_stdout@@Base+0x6a74>
   1bb4c:	sub	r2, r3, #37	; 0x25
   1bb50:	add	r9, r9, #1
   1bb54:	mov	fp, r3
   1bb58:	cmp	r2, #83	; 0x53
   1bb5c:	addls	pc, pc, r2, lsl #2
   1bb60:	b	1c284 <close_stdout@@Base+0x7200>
   1bb64:	b	1bd14 <close_stdout@@Base+0x6c90>
   1bb68:	b	1c284 <close_stdout@@Base+0x7200>
   1bb6c:	b	1c284 <close_stdout@@Base+0x7200>
   1bb70:	b	1c284 <close_stdout@@Base+0x7200>
   1bb74:	b	1c284 <close_stdout@@Base+0x7200>
   1bb78:	b	1c284 <close_stdout@@Base+0x7200>
   1bb7c:	b	1c284 <close_stdout@@Base+0x7200>
   1bb80:	b	1c284 <close_stdout@@Base+0x7200>
   1bb84:	b	1c284 <close_stdout@@Base+0x7200>
   1bb88:	b	1c284 <close_stdout@@Base+0x7200>
   1bb8c:	b	1c284 <close_stdout@@Base+0x7200>
   1bb90:	b	1c284 <close_stdout@@Base+0x7200>
   1bb94:	b	1c284 <close_stdout@@Base+0x7200>
   1bb98:	b	1c284 <close_stdout@@Base+0x7200>
   1bb9c:	b	1c284 <close_stdout@@Base+0x7200>
   1bba0:	b	1c284 <close_stdout@@Base+0x7200>
   1bba4:	b	1c284 <close_stdout@@Base+0x7200>
   1bba8:	b	1c284 <close_stdout@@Base+0x7200>
   1bbac:	b	1c284 <close_stdout@@Base+0x7200>
   1bbb0:	b	1c284 <close_stdout@@Base+0x7200>
   1bbb4:	b	1c284 <close_stdout@@Base+0x7200>
   1bbb8:	b	1c284 <close_stdout@@Base+0x7200>
   1bbbc:	b	1c284 <close_stdout@@Base+0x7200>
   1bbc0:	b	1c284 <close_stdout@@Base+0x7200>
   1bbc4:	b	1c284 <close_stdout@@Base+0x7200>
   1bbc8:	b	1c284 <close_stdout@@Base+0x7200>
   1bbcc:	b	1c284 <close_stdout@@Base+0x7200>
   1bbd0:	b	1c284 <close_stdout@@Base+0x7200>
   1bbd4:	b	1c060 <close_stdout@@Base+0x6fdc>
   1bbd8:	b	1c284 <close_stdout@@Base+0x7200>
   1bbdc:	b	1c084 <close_stdout@@Base+0x7000>
   1bbe0:	b	1c284 <close_stdout@@Base+0x7200>
   1bbe4:	b	1c060 <close_stdout@@Base+0x6fdc>
   1bbe8:	b	1c060 <close_stdout@@Base+0x6fdc>
   1bbec:	b	1c060 <close_stdout@@Base+0x6fdc>
   1bbf0:	b	1c284 <close_stdout@@Base+0x7200>
   1bbf4:	b	1c284 <close_stdout@@Base+0x7200>
   1bbf8:	b	1c284 <close_stdout@@Base+0x7200>
   1bbfc:	b	1c284 <close_stdout@@Base+0x7200>
   1bc00:	b	1c284 <close_stdout@@Base+0x7200>
   1bc04:	b	1c284 <close_stdout@@Base+0x7200>
   1bc08:	b	1c284 <close_stdout@@Base+0x7200>
   1bc0c:	b	1c284 <close_stdout@@Base+0x7200>
   1bc10:	b	1c284 <close_stdout@@Base+0x7200>
   1bc14:	b	1c284 <close_stdout@@Base+0x7200>
   1bc18:	b	1c284 <close_stdout@@Base+0x7200>
   1bc1c:	b	1c090 <close_stdout@@Base+0x700c>
   1bc20:	b	1c284 <close_stdout@@Base+0x7200>
   1bc24:	b	1c284 <close_stdout@@Base+0x7200>
   1bc28:	b	1c284 <close_stdout@@Base+0x7200>
   1bc2c:	b	1c284 <close_stdout@@Base+0x7200>
   1bc30:	b	1c09c <close_stdout@@Base+0x7018>
   1bc34:	b	1c284 <close_stdout@@Base+0x7200>
   1bc38:	b	1c284 <close_stdout@@Base+0x7200>
   1bc3c:	b	1c284 <close_stdout@@Base+0x7200>
   1bc40:	b	1c284 <close_stdout@@Base+0x7200>
   1bc44:	b	1c284 <close_stdout@@Base+0x7200>
   1bc48:	b	1c284 <close_stdout@@Base+0x7200>
   1bc4c:	b	1c284 <close_stdout@@Base+0x7200>
   1bc50:	b	1c284 <close_stdout@@Base+0x7200>
   1bc54:	b	1c060 <close_stdout@@Base+0x6fdc>
   1bc58:	b	1c284 <close_stdout@@Base+0x7200>
   1bc5c:	b	1c124 <close_stdout@@Base+0x70a0>
   1bc60:	b	1c0e0 <close_stdout@@Base+0x705c>
   1bc64:	b	1c060 <close_stdout@@Base+0x6fdc>
   1bc68:	b	1c060 <close_stdout@@Base+0x6fdc>
   1bc6c:	b	1c060 <close_stdout@@Base+0x6fdc>
   1bc70:	b	1c284 <close_stdout@@Base+0x7200>
   1bc74:	b	1c0e0 <close_stdout@@Base+0x705c>
   1bc78:	b	1c284 <close_stdout@@Base+0x7200>
   1bc7c:	b	1c284 <close_stdout@@Base+0x7200>
   1bc80:	b	1c284 <close_stdout@@Base+0x7200>
   1bc84:	b	1c284 <close_stdout@@Base+0x7200>
   1bc88:	b	1c134 <close_stdout@@Base+0x70b0>
   1bc8c:	b	1c09c <close_stdout@@Base+0x7018>
   1bc90:	b	1bcb4 <close_stdout@@Base+0x6c30>
   1bc94:	b	1c284 <close_stdout@@Base+0x7200>
   1bc98:	b	1c284 <close_stdout@@Base+0x7200>
   1bc9c:	b	1c050 <close_stdout@@Base+0x6fcc>
   1bca0:	b	1c284 <close_stdout@@Base+0x7200>
   1bca4:	b	1c09c <close_stdout@@Base+0x7018>
   1bca8:	b	1c284 <close_stdout@@Base+0x7200>
   1bcac:	b	1c284 <close_stdout@@Base+0x7200>
   1bcb0:	b	1c09c <close_stdout@@Base+0x7018>
   1bcb4:	mov	sl, #17
   1bcb8:	cmn	r8, #1
   1bcbc:	strne	r8, [r4, #40]	; 0x28
   1bcc0:	beq	1c3e0 <close_stdout@@Base+0x735c>
   1bcc4:	ldr	r3, [sp, #20]
   1bcc8:	cmp	r3, r8
   1bccc:	bls	1c30c <close_stdout@@Base+0x7288>
   1bcd0:	ldr	r0, [r5, #4]
   1bcd4:	ldr	r3, [r5]
   1bcd8:	cmp	r3, r8
   1bcdc:	bhi	1bcfc <close_stdout@@Base+0x6c78>
   1bce0:	add	r2, r3, #1
   1bce4:	str	r2, [r5]
   1bce8:	str	r6, [r0, r3, lsl #4]
   1bcec:	ldr	r3, [r5]
   1bcf0:	ldr	r0, [r5, #4]
   1bcf4:	cmp	r3, r8
   1bcf8:	bls	1bce0 <close_stdout@@Base+0x6c5c>
   1bcfc:	ldr	r3, [r0, r8, lsl #4]
   1bd00:	cmp	r3, #0
   1bd04:	streq	sl, [r0, r8, lsl #4]
   1bd08:	beq	1bd14 <close_stdout@@Base+0x6c90>
   1bd0c:	cmp	sl, r3
   1bd10:	bne	1c288 <close_stdout@@Base+0x7204>
   1bd14:	strb	fp, [r4, #36]	; 0x24
   1bd18:	str	r9, [r4, #4]
   1bd1c:	ldr	r1, [r7]
   1bd20:	ldr	r3, [sp, #28]
   1bd24:	add	r1, r1, #1
   1bd28:	str	r1, [r7]
   1bd2c:	cmp	r3, r1
   1bd30:	bhi	1be18 <close_stdout@@Base+0x6d94>
   1bd34:	ldr	r3, [sp, #28]
   1bd38:	cmp	r3, #0
   1bd3c:	blt	1bf04 <close_stdout@@Base+0x6e80>
   1bd40:	ldr	r3, [sp, #28]
   1bd44:	ldr	r0, [sp, #32]
   1bd48:	lsl	r3, r3, #1
   1bd4c:	str	r3, [sp, #28]
   1bd50:	cmp	r3, r0
   1bd54:	bhi	1bf04 <close_stdout@@Base+0x6e80>
   1bd58:	mov	r2, #44	; 0x2c
   1bd5c:	ldr	r0, [r7, #4]
   1bd60:	mul	r1, r2, r3
   1bd64:	ldr	r3, [sp, #16]
   1bd68:	cmp	r3, r0
   1bd6c:	beq	1c400 <close_stdout@@Base+0x737c>
   1bd70:	str	ip, [sp, #4]
   1bd74:	bl	117a4 <realloc@plt>
   1bd78:	ldr	ip, [sp, #4]
   1bd7c:	mov	r4, r0
   1bd80:	cmp	r4, #0
   1bd84:	beq	1bf04 <close_stdout@@Base+0x6e80>
   1bd88:	ldr	r3, [r7, #4]
   1bd8c:	ldr	r0, [sp, #16]
   1bd90:	cmp	r0, r3
   1bd94:	beq	1c4bc <close_stdout@@Base+0x7438>
   1bd98:	ldr	r1, [r7]
   1bd9c:	mov	r3, r4
   1bda0:	str	r4, [r7, #4]
   1bda4:	b	1b990 <close_stdout@@Base+0x690c>
   1bda8:	mov	r0, r9
   1bdac:	ldrb	r1, [r0, #1]!
   1bdb0:	sub	r8, r1, #48	; 0x30
   1bdb4:	cmp	r8, #9
   1bdb8:	bls	1bdac <close_stdout@@Base+0x6d28>
   1bdbc:	cmp	r1, #36	; 0x24
   1bdc0:	bne	1ba18 <close_stdout@@Base+0x6994>
   1bdc4:	mov	r8, #0
   1bdc8:	b	1bdd0 <close_stdout@@Base+0x6d4c>
   1bdcc:	mov	r9, r2
   1bdd0:	add	r3, r8, r8, lsl #2
   1bdd4:	cmp	r8, ip
   1bdd8:	mvn	r8, #0
   1bddc:	add	r2, r9, #1
   1bde0:	lslls	r8, r3, #1
   1bde4:	adds	r8, r8, sl
   1bde8:	ldrb	sl, [r9, #1]
   1bdec:	sub	sl, sl, #48	; 0x30
   1bdf0:	mvncs	r8, #0
   1bdf4:	uxtb	r3, sl
   1bdf8:	cmp	r3, #9
   1bdfc:	bls	1bdcc <close_stdout@@Base+0x6d48>
   1be00:	sub	r8, r8, #1
   1be04:	cmn	r8, #3
   1be08:	bhi	1c284 <close_stdout@@Base+0x7200>
   1be0c:	add	r2, r2, #1
   1be10:	ldrb	r3, [r9, #2]
   1be14:	b	1ba60 <close_stdout@@Base+0x69dc>
   1be18:	ldr	r3, [r7, #4]
   1be1c:	b	1b990 <close_stdout@@Base+0x690c>
   1be20:	str	r2, [r4, #12]
   1be24:	ldrb	r3, [r2]
   1be28:	sub	r3, r3, #48	; 0x30
   1be2c:	cmp	r3, #9
   1be30:	bhi	1c4b4 <close_stdout@@Base+0x7430>
   1be34:	add	r3, r2, #1
   1be38:	mov	r9, r3
   1be3c:	add	r3, r3, #1
   1be40:	ldrb	r1, [r9]
   1be44:	sub	r1, r1, #48	; 0x30
   1be48:	cmp	r1, #9
   1be4c:	bls	1be38 <close_stdout@@Base+0x6db4>
   1be50:	rsb	r2, r2, r9
   1be54:	ldr	r3, [sp, #24]
   1be58:	str	r9, [r4, #16]
   1be5c:	cmp	r3, r2
   1be60:	movcc	r3, r2
   1be64:	str	r3, [sp, #24]
   1be68:	ldrb	r3, [r9]
   1be6c:	cmp	r3, #46	; 0x2e
   1be70:	bne	1baec <close_stdout@@Base+0x6a68>
   1be74:	ldrb	r3, [r9, #1]
   1be78:	str	r9, [r4, #24]
   1be7c:	cmp	r3, #42	; 0x2a
   1be80:	beq	1c16c <close_stdout@@Base+0x70e8>
   1be84:	ldrb	r3, [r9, #1]
   1be88:	add	r2, r9, #1
   1be8c:	sub	r3, r3, #48	; 0x30
   1be90:	cmp	r3, #9
   1be94:	bhi	1beb4 <close_stdout@@Base+0x6e30>
   1be98:	add	r3, r9, #2
   1be9c:	mov	r2, r3
   1bea0:	add	r3, r3, #1
   1bea4:	ldrb	r1, [r2]
   1bea8:	sub	r1, r1, #48	; 0x30
   1beac:	cmp	r1, #9
   1beb0:	bls	1be9c <close_stdout@@Base+0x6e18>
   1beb4:	ldr	r0, [sp, #8]
   1beb8:	rsb	r9, r9, r2
   1bebc:	str	r2, [r4, #28]
   1bec0:	cmp	r0, r9
   1bec4:	movcc	r0, r9
   1bec8:	ldrb	r3, [r2]
   1becc:	str	r0, [sp, #8]
   1bed0:	mov	r9, r2
   1bed4:	b	1baec <close_stdout@@Base+0x6a68>
   1bed8:	ldr	r3, [sp, #20]
   1bedc:	cmp	r3, #0
   1bee0:	lslge	r3, r3, #1
   1bee4:	mvnlt	r3, #0
   1bee8:	str	r3, [sp, #20]
   1beec:	ldr	r3, [sp, #20]
   1bef0:	cmp	r3, sl
   1bef4:	bhi	1c390 <close_stdout@@Base+0x730c>
   1bef8:	adds	r3, sl, #1
   1befc:	str	r3, [sp, #20]
   1bf00:	bcc	1c390 <close_stdout@@Base+0x730c>
   1bf04:	ldr	r2, [r5, #4]
   1bf08:	ldr	r3, [sp, #12]
   1bf0c:	cmp	r3, r2
   1bf10:	beq	1bf1c <close_stdout@@Base+0x6e98>
   1bf14:	mov	r0, r2
   1bf18:	bl	11750 <free@plt>
   1bf1c:	ldr	r0, [r7, #4]
   1bf20:	ldr	r3, [sp, #16]
   1bf24:	cmp	r3, r0
   1bf28:	beq	1bf30 <close_stdout@@Base+0x6eac>
   1bf2c:	bl	11750 <free@plt>
   1bf30:	bl	11960 <__errno_location@plt>
   1bf34:	mov	r3, #12
   1bf38:	mvn	r2, #0
   1bf3c:	str	r3, [r0]
   1bf40:	b	1b9c4 <close_stdout@@Base+0x6940>
   1bf44:	ldr	r3, [sp, #24]
   1bf48:	add	r9, r2, #1
   1bf4c:	str	r2, [r4, #12]
   1bf50:	str	r9, [r4, #16]
   1bf54:	cmp	r3, #0
   1bf58:	ldrb	sl, [r2, #1]
   1bf5c:	moveq	r3, #1
   1bf60:	str	r3, [sp, #24]
   1bf64:	sub	sl, sl, #48	; 0x30
   1bf68:	uxtb	r3, sl
   1bf6c:	cmp	r3, #9
   1bf70:	bls	1bfe4 <close_stdout@@Base+0x6f60>
   1bf74:	ldr	r3, [sp, #36]	; 0x24
   1bf78:	cmn	r3, #1
   1bf7c:	str	r3, [r4, #20]
   1bf80:	add	r3, r3, #1
   1bf84:	beq	1c284 <close_stdout@@Base+0x7200>
   1bf88:	ldr	sl, [sp, #36]	; 0x24
   1bf8c:	str	r3, [sp, #36]	; 0x24
   1bf90:	ldr	r3, [sp, #20]
   1bf94:	cmp	r3, sl
   1bf98:	bls	1bed8 <close_stdout@@Base+0x6e54>
   1bf9c:	ldr	r0, [r5, #4]
   1bfa0:	ldr	r3, [r5]
   1bfa4:	cmp	r3, sl
   1bfa8:	bhi	1bfc8 <close_stdout@@Base+0x6f44>
   1bfac:	add	r2, r3, #1
   1bfb0:	str	r2, [r5]
   1bfb4:	str	r6, [r0, r3, lsl #4]
   1bfb8:	ldr	r3, [r5]
   1bfbc:	ldr	r0, [r5, #4]
   1bfc0:	cmp	r3, sl
   1bfc4:	bls	1bfac <close_stdout@@Base+0x6f28>
   1bfc8:	ldr	r3, [r0, sl, lsl #4]
   1bfcc:	cmp	r3, #0
   1bfd0:	bne	1c384 <close_stdout@@Base+0x7300>
   1bfd4:	mov	r1, #5
   1bfd8:	str	r1, [r0, sl, lsl #4]
   1bfdc:	ldrb	r3, [r9]
   1bfe0:	b	1bae4 <close_stdout@@Base+0x6a60>
   1bfe4:	mov	r1, r9
   1bfe8:	ldrb	r3, [r1, #1]!
   1bfec:	sub	r0, r3, #48	; 0x30
   1bff0:	cmp	r0, #9
   1bff4:	bls	1bfe8 <close_stdout@@Base+0x6f64>
   1bff8:	cmp	r3, #36	; 0x24
   1bffc:	bne	1bf74 <close_stdout@@Base+0x6ef0>
   1c000:	add	r2, r2, #2
   1c004:	mov	r3, #0
   1c008:	add	r1, r3, r3, lsl #2
   1c00c:	cmp	r3, ip
   1c010:	mvn	r3, #0
   1c014:	lslls	r3, r1, #1
   1c018:	adds	r3, r3, sl
   1c01c:	ldrb	sl, [r2], #1
   1c020:	sub	sl, sl, #48	; 0x30
   1c024:	mvncs	r3, #0
   1c028:	uxtb	r1, sl
   1c02c:	cmp	r1, #9
   1c030:	bls	1c008 <close_stdout@@Base+0x6f84>
   1c034:	sub	r3, r3, #1
   1c038:	cmn	r3, #3
   1c03c:	bhi	1c284 <close_stdout@@Base+0x7200>
   1c040:	str	r3, [r4, #20]
   1c044:	mov	r9, r2
   1c048:	mov	sl, r3
   1c04c:	b	1bf90 <close_stdout@@Base+0x6f0c>
   1c050:	cmp	sl, #7
   1c054:	movle	sl, #15
   1c058:	movgt	sl, #16
   1c05c:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c060:	cmp	sl, #15
   1c064:	movgt	fp, r3
   1c068:	movgt	sl, #12
   1c06c:	bgt	1bcb8 <close_stdout@@Base+0x6c34>
   1c070:	tst	sl, #4
   1c074:	mov	fp, r3
   1c078:	moveq	sl, #11
   1c07c:	movne	sl, #12
   1c080:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c084:	mov	sl, #14
   1c088:	mov	fp, #99	; 0x63
   1c08c:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c090:	mov	sl, #16
   1c094:	mov	fp, #115	; 0x73
   1c098:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c09c:	cmp	sl, #15
   1c0a0:	bgt	1c2c0 <close_stdout@@Base+0x723c>
   1c0a4:	tst	sl, #4
   1c0a8:	bne	1c2c0 <close_stdout@@Base+0x723c>
   1c0ac:	cmp	sl, #7
   1c0b0:	movgt	fp, r3
   1c0b4:	movgt	sl, #8
   1c0b8:	bgt	1bcb8 <close_stdout@@Base+0x6c34>
   1c0bc:	tst	sl, #2
   1c0c0:	movne	fp, r3
   1c0c4:	movne	sl, #2
   1c0c8:	bne	1bcb8 <close_stdout@@Base+0x6c34>
   1c0cc:	tst	sl, #1
   1c0d0:	mov	fp, r3
   1c0d4:	moveq	sl, #6
   1c0d8:	movne	sl, #4
   1c0dc:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c0e0:	cmp	sl, #15
   1c0e4:	bgt	1c2cc <close_stdout@@Base+0x7248>
   1c0e8:	tst	sl, #4
   1c0ec:	bne	1c2cc <close_stdout@@Base+0x7248>
   1c0f0:	cmp	sl, #7
   1c0f4:	movgt	fp, r3
   1c0f8:	movgt	sl, #7
   1c0fc:	bgt	1bcb8 <close_stdout@@Base+0x6c34>
   1c100:	tst	sl, #2
   1c104:	movne	fp, r3
   1c108:	movne	sl, #1
   1c10c:	bne	1bcb8 <close_stdout@@Base+0x6c34>
   1c110:	tst	sl, #1
   1c114:	mov	fp, r3
   1c118:	moveq	sl, #5
   1c11c:	movne	sl, #3
   1c120:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c124:	cmp	sl, #7
   1c128:	movle	sl, #13
   1c12c:	movgt	sl, #14
   1c130:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c134:	cmp	sl, #15
   1c138:	bgt	1c2d8 <close_stdout@@Base+0x7254>
   1c13c:	tst	sl, #4
   1c140:	bne	1c2d8 <close_stdout@@Base+0x7254>
   1c144:	cmp	sl, #7
   1c148:	movgt	sl, #21
   1c14c:	bgt	1bcb8 <close_stdout@@Base+0x6c34>
   1c150:	tst	sl, #2
   1c154:	movne	sl, #18
   1c158:	bne	1bcb8 <close_stdout@@Base+0x6c34>
   1c15c:	tst	sl, #1
   1c160:	moveq	sl, #20
   1c164:	movne	sl, #19
   1c168:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c16c:	ldr	r3, [sp, #8]
   1c170:	add	sl, r9, #2
   1c174:	str	sl, [r4, #28]
   1c178:	ldrb	r0, [r9, #2]
   1c17c:	cmp	r3, #1
   1c180:	sub	r0, r0, #48	; 0x30
   1c184:	movls	r3, #2
   1c188:	str	r3, [sp, #8]
   1c18c:	uxtb	r3, r0
   1c190:	cmp	r3, #9
   1c194:	bhi	1c2e0 <close_stdout@@Base+0x725c>
   1c198:	mov	r2, sl
   1c19c:	ldrb	r3, [r2, #1]!
   1c1a0:	sub	r1, r3, #48	; 0x30
   1c1a4:	cmp	r1, #9
   1c1a8:	bls	1c19c <close_stdout@@Base+0x7118>
   1c1ac:	cmp	r3, #36	; 0x24
   1c1b0:	bne	1c2e0 <close_stdout@@Base+0x725c>
   1c1b4:	add	r9, r9, #3
   1c1b8:	mov	r3, #0
   1c1bc:	add	r2, r3, r3, lsl #2
   1c1c0:	cmp	r3, ip
   1c1c4:	mvn	r3, #0
   1c1c8:	lslls	r3, r2, #1
   1c1cc:	adds	r3, r3, r0
   1c1d0:	ldrb	r0, [r9], #1
   1c1d4:	sub	r0, r0, #48	; 0x30
   1c1d8:	mvncs	r3, #0
   1c1dc:	uxtb	r2, r0
   1c1e0:	cmp	r2, #9
   1c1e4:	bls	1c1bc <close_stdout@@Base+0x7138>
   1c1e8:	sub	r3, r3, #1
   1c1ec:	cmn	r3, #3
   1c1f0:	bhi	1c284 <close_stdout@@Base+0x7200>
   1c1f4:	mov	sl, r9
   1c1f8:	mov	r9, r3
   1c1fc:	str	r3, [r4, #32]
   1c200:	ldr	r3, [sp, #20]
   1c204:	cmp	r3, r9
   1c208:	bhi	1c418 <close_stdout@@Base+0x7394>
   1c20c:	ldr	r3, [sp, #20]
   1c210:	cmp	r3, #0
   1c214:	blt	1bf04 <close_stdout@@Base+0x6e80>
   1c218:	lsl	r3, r3, #1
   1c21c:	str	r3, [sp, #20]
   1c220:	cmp	r3, r9
   1c224:	bhi	1c234 <close_stdout@@Base+0x71b0>
   1c228:	adds	r3, r9, #1
   1c22c:	str	r3, [sp, #20]
   1c230:	bcs	1bf04 <close_stdout@@Base+0x6e80>
   1c234:	ldr	r3, [sp, #20]
   1c238:	cmn	r3, #-268435455	; 0xf0000001
   1c23c:	bhi	1bf04 <close_stdout@@Base+0x6e80>
   1c240:	ldr	r0, [r5, #4]
   1c244:	lsl	r1, r3, #4
   1c248:	ldr	r3, [sp, #12]
   1c24c:	cmp	r3, r0
   1c250:	beq	1c51c <close_stdout@@Base+0x7498>
   1c254:	str	ip, [sp, #4]
   1c258:	bl	117a4 <realloc@plt>
   1c25c:	ldr	r2, [r5, #4]
   1c260:	ldr	ip, [sp, #4]
   1c264:	subs	r3, r0, #0
   1c268:	beq	1bf08 <close_stdout@@Base+0x6e84>
   1c26c:	ldr	r0, [sp, #12]
   1c270:	cmp	r0, r2
   1c274:	beq	1c534 <close_stdout@@Base+0x74b0>
   1c278:	mov	r0, r3
   1c27c:	str	r3, [r5, #4]
   1c280:	b	1c41c <close_stdout@@Base+0x7398>
   1c284:	ldr	r0, [r5, #4]
   1c288:	ldr	r3, [sp, #12]
   1c28c:	cmp	r3, r0
   1c290:	beq	1c298 <close_stdout@@Base+0x7214>
   1c294:	bl	11750 <free@plt>
   1c298:	ldr	r0, [r7, #4]
   1c29c:	ldr	r3, [sp, #16]
   1c2a0:	cmp	r3, r0
   1c2a4:	beq	1c2ac <close_stdout@@Base+0x7228>
   1c2a8:	bl	11750 <free@plt>
   1c2ac:	bl	11960 <__errno_location@plt>
   1c2b0:	mov	r3, #22
   1c2b4:	mvn	r2, #0
   1c2b8:	str	r3, [r0]
   1c2bc:	b	1b9c4 <close_stdout@@Base+0x6940>
   1c2c0:	mov	fp, r3
   1c2c4:	mov	sl, #10
   1c2c8:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c2cc:	mov	fp, r3
   1c2d0:	mov	sl, #9
   1c2d4:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c2d8:	mov	sl, #22
   1c2dc:	b	1bcb8 <close_stdout@@Base+0x6c34>
   1c2e0:	ldr	r9, [r4, #32]
   1c2e4:	cmn	r9, #1
   1c2e8:	bne	1c200 <close_stdout@@Base+0x717c>
   1c2ec:	ldr	r3, [sp, #36]	; 0x24
   1c2f0:	cmn	r3, #1
   1c2f4:	str	r3, [r4, #32]
   1c2f8:	add	r3, r3, #1
   1c2fc:	beq	1c284 <close_stdout@@Base+0x7200>
   1c300:	ldr	r9, [sp, #36]	; 0x24
   1c304:	str	r3, [sp, #36]	; 0x24
   1c308:	b	1c200 <close_stdout@@Base+0x717c>
   1c30c:	ldr	r3, [sp, #20]
   1c310:	cmp	r3, #0
   1c314:	blt	1bf04 <close_stdout@@Base+0x6e80>
   1c318:	lsl	r3, r3, #1
   1c31c:	str	r3, [sp, #20]
   1c320:	cmp	r3, r8
   1c324:	bhi	1c334 <close_stdout@@Base+0x72b0>
   1c328:	adds	r3, r8, #1
   1c32c:	str	r3, [sp, #20]
   1c330:	bcs	1bf04 <close_stdout@@Base+0x6e80>
   1c334:	ldr	r3, [sp, #20]
   1c338:	cmn	r3, #-268435455	; 0xf0000001
   1c33c:	bhi	1bf04 <close_stdout@@Base+0x6e80>
   1c340:	ldr	r0, [r5, #4]
   1c344:	lsl	r1, r3, #4
   1c348:	ldr	r3, [sp, #12]
   1c34c:	cmp	r3, r0
   1c350:	beq	1c478 <close_stdout@@Base+0x73f4>
   1c354:	str	ip, [sp, #4]
   1c358:	bl	117a4 <realloc@plt>
   1c35c:	ldr	r2, [r5, #4]
   1c360:	ldr	ip, [sp, #4]
   1c364:	subs	r3, r0, #0
   1c368:	beq	1bf08 <close_stdout@@Base+0x6e84>
   1c36c:	ldr	r0, [sp, #12]
   1c370:	cmp	r0, r2
   1c374:	beq	1c490 <close_stdout@@Base+0x740c>
   1c378:	mov	r0, r3
   1c37c:	str	r3, [r5, #4]
   1c380:	b	1bcd4 <close_stdout@@Base+0x6c50>
   1c384:	cmp	r3, #5
   1c388:	beq	1be68 <close_stdout@@Base+0x6de4>
   1c38c:	b	1c288 <close_stdout@@Base+0x7204>
   1c390:	ldr	r3, [sp, #20]
   1c394:	cmn	r3, #-268435455	; 0xf0000001
   1c398:	bhi	1bf04 <close_stdout@@Base+0x6e80>
   1c39c:	ldr	r0, [r5, #4]
   1c3a0:	lsl	r1, r3, #4
   1c3a4:	ldr	r3, [sp, #12]
   1c3a8:	cmp	r3, r0
   1c3ac:	beq	1c4e0 <close_stdout@@Base+0x745c>
   1c3b0:	str	ip, [sp, #4]
   1c3b4:	bl	117a4 <realloc@plt>
   1c3b8:	ldr	r2, [r5, #4]
   1c3bc:	ldr	ip, [sp, #4]
   1c3c0:	subs	r3, r0, #0
   1c3c4:	beq	1bf08 <close_stdout@@Base+0x6e84>
   1c3c8:	ldr	r0, [sp, #12]
   1c3cc:	cmp	r0, r2
   1c3d0:	beq	1c4f8 <close_stdout@@Base+0x7474>
   1c3d4:	mov	r0, r3
   1c3d8:	str	r3, [r5, #4]
   1c3dc:	b	1bfa0 <close_stdout@@Base+0x6f1c>
   1c3e0:	ldr	r3, [sp, #36]	; 0x24
   1c3e4:	cmn	r3, #1
   1c3e8:	str	r3, [r4, #40]	; 0x28
   1c3ec:	add	r3, r3, #1
   1c3f0:	beq	1c284 <close_stdout@@Base+0x7200>
   1c3f4:	ldr	r8, [sp, #36]	; 0x24
   1c3f8:	str	r3, [sp, #36]	; 0x24
   1c3fc:	b	1bcc4 <close_stdout@@Base+0x6c40>
   1c400:	mov	r0, r1
   1c404:	str	ip, [sp, #4]
   1c408:	bl	1187c <malloc@plt>
   1c40c:	ldr	ip, [sp, #4]
   1c410:	mov	r4, r0
   1c414:	b	1bd80 <close_stdout@@Base+0x6cfc>
   1c418:	ldr	r0, [r5, #4]
   1c41c:	ldr	r3, [r5]
   1c420:	cmp	r3, r9
   1c424:	bhi	1c444 <close_stdout@@Base+0x73c0>
   1c428:	add	r2, r3, #1
   1c42c:	str	r2, [r5]
   1c430:	str	r6, [r0, r3, lsl #4]
   1c434:	ldr	r3, [r5]
   1c438:	ldr	r0, [r5, #4]
   1c43c:	cmp	r3, r9
   1c440:	bls	1c428 <close_stdout@@Base+0x73a4>
   1c444:	ldr	r3, [r0, r9, lsl #4]
   1c448:	cmp	r3, #0
   1c44c:	bne	1c464 <close_stdout@@Base+0x73e0>
   1c450:	mov	r1, #5
   1c454:	str	r1, [r0, r9, lsl #4]
   1c458:	mov	r9, sl
   1c45c:	ldrb	r3, [sl]
   1c460:	b	1baec <close_stdout@@Base+0x6a68>
   1c464:	cmp	r3, #5
   1c468:	bne	1c288 <close_stdout@@Base+0x7204>
   1c46c:	ldrb	r3, [sl]
   1c470:	mov	r9, sl
   1c474:	b	1baec <close_stdout@@Base+0x6a68>
   1c478:	mov	r0, r1
   1c47c:	str	ip, [sp, #4]
   1c480:	bl	1187c <malloc@plt>
   1c484:	ldr	ip, [sp, #4]
   1c488:	subs	r3, r0, #0
   1c48c:	beq	1c558 <close_stdout@@Base+0x74d4>
   1c490:	ldr	r2, [r5]
   1c494:	mov	r0, r3
   1c498:	ldr	r1, [sp, #12]
   1c49c:	str	ip, [sp, #4]
   1c4a0:	lsl	r2, r2, #4
   1c4a4:	bl	11768 <memcpy@plt>
   1c4a8:	ldr	ip, [sp, #4]
   1c4ac:	mov	r3, r0
   1c4b0:	b	1c378 <close_stdout@@Base+0x72f4>
   1c4b4:	mov	r2, #0
   1c4b8:	b	1be54 <close_stdout@@Base+0x6dd0>
   1c4bc:	ldr	r2, [r7]
   1c4c0:	mov	r3, #44	; 0x2c
   1c4c4:	mov	r0, r4
   1c4c8:	ldr	r1, [sp, #16]
   1c4cc:	str	ip, [sp, #4]
   1c4d0:	mul	r2, r3, r2
   1c4d4:	bl	11768 <memcpy@plt>
   1c4d8:	ldr	ip, [sp, #4]
   1c4dc:	b	1bd98 <close_stdout@@Base+0x6d14>
   1c4e0:	mov	r0, r1
   1c4e4:	str	ip, [sp, #4]
   1c4e8:	bl	1187c <malloc@plt>
   1c4ec:	ldr	ip, [sp, #4]
   1c4f0:	subs	r3, r0, #0
   1c4f4:	beq	1c558 <close_stdout@@Base+0x74d4>
   1c4f8:	ldr	r2, [r5]
   1c4fc:	mov	r0, r3
   1c500:	ldr	r1, [sp, #12]
   1c504:	str	ip, [sp, #4]
   1c508:	lsl	r2, r2, #4
   1c50c:	bl	11768 <memcpy@plt>
   1c510:	ldr	ip, [sp, #4]
   1c514:	mov	r3, r0
   1c518:	b	1c3d4 <close_stdout@@Base+0x7350>
   1c51c:	mov	r0, r1
   1c520:	str	ip, [sp, #4]
   1c524:	bl	1187c <malloc@plt>
   1c528:	ldr	ip, [sp, #4]
   1c52c:	subs	r3, r0, #0
   1c530:	beq	1c558 <close_stdout@@Base+0x74d4>
   1c534:	ldr	r2, [r5]
   1c538:	mov	r0, r3
   1c53c:	ldr	r1, [sp, #12]
   1c540:	str	ip, [sp, #4]
   1c544:	lsl	r2, r2, #4
   1c548:	bl	11768 <memcpy@plt>
   1c54c:	ldr	ip, [sp, #4]
   1c550:	mov	r3, r0
   1c554:	b	1c278 <close_stdout@@Base+0x71f4>
   1c558:	ldr	r2, [sp, #12]
   1c55c:	b	1bf08 <close_stdout@@Base+0x6e84>
   1c560:	subs	r2, r1, #1
   1c564:	bxeq	lr
   1c568:	bcc	1c740 <close_stdout@@Base+0x76bc>
   1c56c:	cmp	r0, r1
   1c570:	bls	1c724 <close_stdout@@Base+0x76a0>
   1c574:	tst	r1, r2
   1c578:	beq	1c730 <close_stdout@@Base+0x76ac>
   1c57c:	clz	r3, r0
   1c580:	clz	r2, r1
   1c584:	sub	r3, r2, r3
   1c588:	rsbs	r3, r3, #31
   1c58c:	addne	r3, r3, r3, lsl #1
   1c590:	mov	r2, #0
   1c594:	addne	pc, pc, r3, lsl #2
   1c598:	nop	{0}
   1c59c:	cmp	r0, r1, lsl #31
   1c5a0:	adc	r2, r2, r2
   1c5a4:	subcs	r0, r0, r1, lsl #31
   1c5a8:	cmp	r0, r1, lsl #30
   1c5ac:	adc	r2, r2, r2
   1c5b0:	subcs	r0, r0, r1, lsl #30
   1c5b4:	cmp	r0, r1, lsl #29
   1c5b8:	adc	r2, r2, r2
   1c5bc:	subcs	r0, r0, r1, lsl #29
   1c5c0:	cmp	r0, r1, lsl #28
   1c5c4:	adc	r2, r2, r2
   1c5c8:	subcs	r0, r0, r1, lsl #28
   1c5cc:	cmp	r0, r1, lsl #27
   1c5d0:	adc	r2, r2, r2
   1c5d4:	subcs	r0, r0, r1, lsl #27
   1c5d8:	cmp	r0, r1, lsl #26
   1c5dc:	adc	r2, r2, r2
   1c5e0:	subcs	r0, r0, r1, lsl #26
   1c5e4:	cmp	r0, r1, lsl #25
   1c5e8:	adc	r2, r2, r2
   1c5ec:	subcs	r0, r0, r1, lsl #25
   1c5f0:	cmp	r0, r1, lsl #24
   1c5f4:	adc	r2, r2, r2
   1c5f8:	subcs	r0, r0, r1, lsl #24
   1c5fc:	cmp	r0, r1, lsl #23
   1c600:	adc	r2, r2, r2
   1c604:	subcs	r0, r0, r1, lsl #23
   1c608:	cmp	r0, r1, lsl #22
   1c60c:	adc	r2, r2, r2
   1c610:	subcs	r0, r0, r1, lsl #22
   1c614:	cmp	r0, r1, lsl #21
   1c618:	adc	r2, r2, r2
   1c61c:	subcs	r0, r0, r1, lsl #21
   1c620:	cmp	r0, r1, lsl #20
   1c624:	adc	r2, r2, r2
   1c628:	subcs	r0, r0, r1, lsl #20
   1c62c:	cmp	r0, r1, lsl #19
   1c630:	adc	r2, r2, r2
   1c634:	subcs	r0, r0, r1, lsl #19
   1c638:	cmp	r0, r1, lsl #18
   1c63c:	adc	r2, r2, r2
   1c640:	subcs	r0, r0, r1, lsl #18
   1c644:	cmp	r0, r1, lsl #17
   1c648:	adc	r2, r2, r2
   1c64c:	subcs	r0, r0, r1, lsl #17
   1c650:	cmp	r0, r1, lsl #16
   1c654:	adc	r2, r2, r2
   1c658:	subcs	r0, r0, r1, lsl #16
   1c65c:	cmp	r0, r1, lsl #15
   1c660:	adc	r2, r2, r2
   1c664:	subcs	r0, r0, r1, lsl #15
   1c668:	cmp	r0, r1, lsl #14
   1c66c:	adc	r2, r2, r2
   1c670:	subcs	r0, r0, r1, lsl #14
   1c674:	cmp	r0, r1, lsl #13
   1c678:	adc	r2, r2, r2
   1c67c:	subcs	r0, r0, r1, lsl #13
   1c680:	cmp	r0, r1, lsl #12
   1c684:	adc	r2, r2, r2
   1c688:	subcs	r0, r0, r1, lsl #12
   1c68c:	cmp	r0, r1, lsl #11
   1c690:	adc	r2, r2, r2
   1c694:	subcs	r0, r0, r1, lsl #11
   1c698:	cmp	r0, r1, lsl #10
   1c69c:	adc	r2, r2, r2
   1c6a0:	subcs	r0, r0, r1, lsl #10
   1c6a4:	cmp	r0, r1, lsl #9
   1c6a8:	adc	r2, r2, r2
   1c6ac:	subcs	r0, r0, r1, lsl #9
   1c6b0:	cmp	r0, r1, lsl #8
   1c6b4:	adc	r2, r2, r2
   1c6b8:	subcs	r0, r0, r1, lsl #8
   1c6bc:	cmp	r0, r1, lsl #7
   1c6c0:	adc	r2, r2, r2
   1c6c4:	subcs	r0, r0, r1, lsl #7
   1c6c8:	cmp	r0, r1, lsl #6
   1c6cc:	adc	r2, r2, r2
   1c6d0:	subcs	r0, r0, r1, lsl #6
   1c6d4:	cmp	r0, r1, lsl #5
   1c6d8:	adc	r2, r2, r2
   1c6dc:	subcs	r0, r0, r1, lsl #5
   1c6e0:	cmp	r0, r1, lsl #4
   1c6e4:	adc	r2, r2, r2
   1c6e8:	subcs	r0, r0, r1, lsl #4
   1c6ec:	cmp	r0, r1, lsl #3
   1c6f0:	adc	r2, r2, r2
   1c6f4:	subcs	r0, r0, r1, lsl #3
   1c6f8:	cmp	r0, r1, lsl #2
   1c6fc:	adc	r2, r2, r2
   1c700:	subcs	r0, r0, r1, lsl #2
   1c704:	cmp	r0, r1, lsl #1
   1c708:	adc	r2, r2, r2
   1c70c:	subcs	r0, r0, r1, lsl #1
   1c710:	cmp	r0, r1
   1c714:	adc	r2, r2, r2
   1c718:	subcs	r0, r0, r1
   1c71c:	mov	r0, r2
   1c720:	bx	lr
   1c724:	moveq	r0, #1
   1c728:	movne	r0, #0
   1c72c:	bx	lr
   1c730:	clz	r2, r1
   1c734:	rsb	r2, r2, #31
   1c738:	lsr	r0, r0, r2
   1c73c:	bx	lr
   1c740:	cmp	r0, #0
   1c744:	mvnne	r0, #0
   1c748:	b	1c9f4 <close_stdout@@Base+0x7970>
   1c74c:	cmp	r1, #0
   1c750:	beq	1c740 <close_stdout@@Base+0x76bc>
   1c754:	push	{r0, r1, lr}
   1c758:	bl	1c560 <close_stdout@@Base+0x74dc>
   1c75c:	pop	{r1, r2, lr}
   1c760:	mul	r3, r2, r0
   1c764:	sub	r1, r1, r3
   1c768:	bx	lr
   1c76c:	cmp	r1, #0
   1c770:	beq	1c97c <close_stdout@@Base+0x78f8>
   1c774:	eor	ip, r0, r1
   1c778:	rsbmi	r1, r1, #0
   1c77c:	subs	r2, r1, #1
   1c780:	beq	1c948 <close_stdout@@Base+0x78c4>
   1c784:	movs	r3, r0
   1c788:	rsbmi	r3, r0, #0
   1c78c:	cmp	r3, r1
   1c790:	bls	1c954 <close_stdout@@Base+0x78d0>
   1c794:	tst	r1, r2
   1c798:	beq	1c964 <close_stdout@@Base+0x78e0>
   1c79c:	clz	r2, r3
   1c7a0:	clz	r0, r1
   1c7a4:	sub	r2, r0, r2
   1c7a8:	rsbs	r2, r2, #31
   1c7ac:	addne	r2, r2, r2, lsl #1
   1c7b0:	mov	r0, #0
   1c7b4:	addne	pc, pc, r2, lsl #2
   1c7b8:	nop	{0}
   1c7bc:	cmp	r3, r1, lsl #31
   1c7c0:	adc	r0, r0, r0
   1c7c4:	subcs	r3, r3, r1, lsl #31
   1c7c8:	cmp	r3, r1, lsl #30
   1c7cc:	adc	r0, r0, r0
   1c7d0:	subcs	r3, r3, r1, lsl #30
   1c7d4:	cmp	r3, r1, lsl #29
   1c7d8:	adc	r0, r0, r0
   1c7dc:	subcs	r3, r3, r1, lsl #29
   1c7e0:	cmp	r3, r1, lsl #28
   1c7e4:	adc	r0, r0, r0
   1c7e8:	subcs	r3, r3, r1, lsl #28
   1c7ec:	cmp	r3, r1, lsl #27
   1c7f0:	adc	r0, r0, r0
   1c7f4:	subcs	r3, r3, r1, lsl #27
   1c7f8:	cmp	r3, r1, lsl #26
   1c7fc:	adc	r0, r0, r0
   1c800:	subcs	r3, r3, r1, lsl #26
   1c804:	cmp	r3, r1, lsl #25
   1c808:	adc	r0, r0, r0
   1c80c:	subcs	r3, r3, r1, lsl #25
   1c810:	cmp	r3, r1, lsl #24
   1c814:	adc	r0, r0, r0
   1c818:	subcs	r3, r3, r1, lsl #24
   1c81c:	cmp	r3, r1, lsl #23
   1c820:	adc	r0, r0, r0
   1c824:	subcs	r3, r3, r1, lsl #23
   1c828:	cmp	r3, r1, lsl #22
   1c82c:	adc	r0, r0, r0
   1c830:	subcs	r3, r3, r1, lsl #22
   1c834:	cmp	r3, r1, lsl #21
   1c838:	adc	r0, r0, r0
   1c83c:	subcs	r3, r3, r1, lsl #21
   1c840:	cmp	r3, r1, lsl #20
   1c844:	adc	r0, r0, r0
   1c848:	subcs	r3, r3, r1, lsl #20
   1c84c:	cmp	r3, r1, lsl #19
   1c850:	adc	r0, r0, r0
   1c854:	subcs	r3, r3, r1, lsl #19
   1c858:	cmp	r3, r1, lsl #18
   1c85c:	adc	r0, r0, r0
   1c860:	subcs	r3, r3, r1, lsl #18
   1c864:	cmp	r3, r1, lsl #17
   1c868:	adc	r0, r0, r0
   1c86c:	subcs	r3, r3, r1, lsl #17
   1c870:	cmp	r3, r1, lsl #16
   1c874:	adc	r0, r0, r0
   1c878:	subcs	r3, r3, r1, lsl #16
   1c87c:	cmp	r3, r1, lsl #15
   1c880:	adc	r0, r0, r0
   1c884:	subcs	r3, r3, r1, lsl #15
   1c888:	cmp	r3, r1, lsl #14
   1c88c:	adc	r0, r0, r0
   1c890:	subcs	r3, r3, r1, lsl #14
   1c894:	cmp	r3, r1, lsl #13
   1c898:	adc	r0, r0, r0
   1c89c:	subcs	r3, r3, r1, lsl #13
   1c8a0:	cmp	r3, r1, lsl #12
   1c8a4:	adc	r0, r0, r0
   1c8a8:	subcs	r3, r3, r1, lsl #12
   1c8ac:	cmp	r3, r1, lsl #11
   1c8b0:	adc	r0, r0, r0
   1c8b4:	subcs	r3, r3, r1, lsl #11
   1c8b8:	cmp	r3, r1, lsl #10
   1c8bc:	adc	r0, r0, r0
   1c8c0:	subcs	r3, r3, r1, lsl #10
   1c8c4:	cmp	r3, r1, lsl #9
   1c8c8:	adc	r0, r0, r0
   1c8cc:	subcs	r3, r3, r1, lsl #9
   1c8d0:	cmp	r3, r1, lsl #8
   1c8d4:	adc	r0, r0, r0
   1c8d8:	subcs	r3, r3, r1, lsl #8
   1c8dc:	cmp	r3, r1, lsl #7
   1c8e0:	adc	r0, r0, r0
   1c8e4:	subcs	r3, r3, r1, lsl #7
   1c8e8:	cmp	r3, r1, lsl #6
   1c8ec:	adc	r0, r0, r0
   1c8f0:	subcs	r3, r3, r1, lsl #6
   1c8f4:	cmp	r3, r1, lsl #5
   1c8f8:	adc	r0, r0, r0
   1c8fc:	subcs	r3, r3, r1, lsl #5
   1c900:	cmp	r3, r1, lsl #4
   1c904:	adc	r0, r0, r0
   1c908:	subcs	r3, r3, r1, lsl #4
   1c90c:	cmp	r3, r1, lsl #3
   1c910:	adc	r0, r0, r0
   1c914:	subcs	r3, r3, r1, lsl #3
   1c918:	cmp	r3, r1, lsl #2
   1c91c:	adc	r0, r0, r0
   1c920:	subcs	r3, r3, r1, lsl #2
   1c924:	cmp	r3, r1, lsl #1
   1c928:	adc	r0, r0, r0
   1c92c:	subcs	r3, r3, r1, lsl #1
   1c930:	cmp	r3, r1
   1c934:	adc	r0, r0, r0
   1c938:	subcs	r3, r3, r1
   1c93c:	cmp	ip, #0
   1c940:	rsbmi	r0, r0, #0
   1c944:	bx	lr
   1c948:	teq	ip, r0
   1c94c:	rsbmi	r0, r0, #0
   1c950:	bx	lr
   1c954:	movcc	r0, #0
   1c958:	asreq	r0, ip, #31
   1c95c:	orreq	r0, r0, #1
   1c960:	bx	lr
   1c964:	clz	r2, r1
   1c968:	rsb	r2, r2, #31
   1c96c:	cmp	ip, #0
   1c970:	lsr	r0, r3, r2
   1c974:	rsbmi	r0, r0, #0
   1c978:	bx	lr
   1c97c:	cmp	r0, #0
   1c980:	mvngt	r0, #-2147483648	; 0x80000000
   1c984:	movlt	r0, #-2147483648	; 0x80000000
   1c988:	b	1c9f4 <close_stdout@@Base+0x7970>
   1c98c:	cmp	r1, #0
   1c990:	beq	1c97c <close_stdout@@Base+0x78f8>
   1c994:	push	{r0, r1, lr}
   1c998:	bl	1c774 <close_stdout@@Base+0x76f0>
   1c99c:	pop	{r1, r2, lr}
   1c9a0:	mul	r3, r2, r0
   1c9a4:	sub	r1, r1, r3
   1c9a8:	bx	lr
   1c9ac:	cmp	r3, #0
   1c9b0:	cmpeq	r2, #0
   1c9b4:	bne	1c9d8 <close_stdout@@Base+0x7954>
   1c9b8:	cmp	r1, #0
   1c9bc:	movlt	r1, #-2147483648	; 0x80000000
   1c9c0:	movlt	r0, #0
   1c9c4:	blt	1c9d4 <close_stdout@@Base+0x7950>
   1c9c8:	cmpeq	r0, #0
   1c9cc:	mvnne	r1, #-2147483648	; 0x80000000
   1c9d0:	mvnne	r0, #0
   1c9d4:	b	1c9f4 <close_stdout@@Base+0x7970>
   1c9d8:	sub	sp, sp, #8
   1c9dc:	push	{sp, lr}
   1c9e0:	bl	1ca04 <close_stdout@@Base+0x7980>
   1c9e4:	ldr	lr, [sp, #4]
   1c9e8:	add	sp, sp, #8
   1c9ec:	pop	{r2, r3}
   1c9f0:	bx	lr
   1c9f4:	push	{r1, lr}
   1c9f8:	mov	r0, #8
   1c9fc:	bl	116f0 <raise@plt>
   1ca00:	pop	{r1, pc}
   1ca04:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ca08:	mov	r8, r2
   1ca0c:	mov	r6, r0
   1ca10:	mov	r7, r1
   1ca14:	mov	sl, r3
   1ca18:	ldr	r9, [sp, #32]
   1ca1c:	bl	1ca7c <close_stdout@@Base+0x79f8>
   1ca20:	umull	r4, r5, r8, r0
   1ca24:	mul	r8, r8, r1
   1ca28:	mla	r2, r0, sl, r8
   1ca2c:	add	r5, r2, r5
   1ca30:	subs	r4, r6, r4
   1ca34:	sbc	r5, r7, r5
   1ca38:	strd	r4, [r9]
   1ca3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ca40:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1ca44:	mov	r8, r2
   1ca48:	mov	r6, r0
   1ca4c:	mov	r7, r1
   1ca50:	mov	r5, r3
   1ca54:	ldr	r9, [sp, #32]
   1ca58:	bl	1cf08 <close_stdout@@Base+0x7e84>
   1ca5c:	mul	r3, r0, r5
   1ca60:	umull	r4, r5, r0, r8
   1ca64:	mla	r8, r8, r1, r3
   1ca68:	add	r5, r8, r5
   1ca6c:	subs	r4, r6, r4
   1ca70:	sbc	r5, r7, r5
   1ca74:	strd	r4, [r9]
   1ca78:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1ca7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ca80:	rsbs	r4, r0, #0
   1ca84:	rsc	r5, r1, #0
   1ca88:	cmp	r1, #0
   1ca8c:	mvn	r6, #0
   1ca90:	sub	sp, sp, #12
   1ca94:	movge	r4, r0
   1ca98:	movge	r5, r1
   1ca9c:	movge	r6, #0
   1caa0:	cmp	r3, #0
   1caa4:	blt	1ccdc <close_stdout@@Base+0x7c58>
   1caa8:	cmp	r3, #0
   1caac:	mov	sl, r4
   1cab0:	mov	ip, r5
   1cab4:	mov	r0, r2
   1cab8:	mov	r1, r3
   1cabc:	mov	r8, r2
   1cac0:	mov	r7, r4
   1cac4:	mov	r9, r5
   1cac8:	bne	1cbc0 <close_stdout@@Base+0x7b3c>
   1cacc:	cmp	r2, r5
   1cad0:	bls	1cbfc <close_stdout@@Base+0x7b78>
   1cad4:	clz	r3, r2
   1cad8:	cmp	r3, #0
   1cadc:	rsbne	r2, r3, #32
   1cae0:	lslne	r8, r0, r3
   1cae4:	lsrne	r2, r4, r2
   1cae8:	lslne	r7, r4, r3
   1caec:	orrne	r9, r2, r5, lsl r3
   1caf0:	lsr	r4, r8, #16
   1caf4:	uxth	sl, r8
   1caf8:	mov	r1, r4
   1cafc:	mov	r0, r9
   1cb00:	bl	1c560 <close_stdout@@Base+0x74dc>
   1cb04:	mov	r1, r4
   1cb08:	mov	fp, r0
   1cb0c:	mov	r0, r9
   1cb10:	bl	1c74c <close_stdout@@Base+0x76c8>
   1cb14:	mul	r0, sl, fp
   1cb18:	lsr	r2, r7, #16
   1cb1c:	orr	r1, r2, r1, lsl #16
   1cb20:	cmp	r0, r1
   1cb24:	bls	1cb48 <close_stdout@@Base+0x7ac4>
   1cb28:	adds	r1, r1, r8
   1cb2c:	sub	r3, fp, #1
   1cb30:	bcs	1cb44 <close_stdout@@Base+0x7ac0>
   1cb34:	cmp	r0, r1
   1cb38:	subhi	fp, fp, #2
   1cb3c:	addhi	r1, r1, r8
   1cb40:	bhi	1cb48 <close_stdout@@Base+0x7ac4>
   1cb44:	mov	fp, r3
   1cb48:	rsb	r9, r0, r1
   1cb4c:	mov	r1, r4
   1cb50:	uxth	r7, r7
   1cb54:	mov	r0, r9
   1cb58:	bl	1c560 <close_stdout@@Base+0x74dc>
   1cb5c:	mov	r1, r4
   1cb60:	mov	r5, r0
   1cb64:	mov	r0, r9
   1cb68:	bl	1c74c <close_stdout@@Base+0x76c8>
   1cb6c:	mul	sl, sl, r5
   1cb70:	orr	r1, r7, r1, lsl #16
   1cb74:	cmp	sl, r1
   1cb78:	bls	1cb98 <close_stdout@@Base+0x7b14>
   1cb7c:	adds	r8, r1, r8
   1cb80:	sub	r3, r5, #1
   1cb84:	bcs	1cb94 <close_stdout@@Base+0x7b10>
   1cb88:	cmp	sl, r8
   1cb8c:	subhi	r5, r5, #2
   1cb90:	bhi	1cb98 <close_stdout@@Base+0x7b14>
   1cb94:	mov	r5, r3
   1cb98:	orr	r3, r5, fp, lsl #16
   1cb9c:	mov	r4, #0
   1cba0:	cmp	r6, #0
   1cba4:	mov	r0, r3
   1cba8:	mov	r1, r4
   1cbac:	beq	1cbb8 <close_stdout@@Base+0x7b34>
   1cbb0:	rsbs	r0, r0, #0
   1cbb4:	rsc	r1, r1, #0
   1cbb8:	add	sp, sp, #12
   1cbbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cbc0:	cmp	r3, r5
   1cbc4:	movhi	r4, #0
   1cbc8:	movhi	r3, r4
   1cbcc:	bhi	1cba0 <close_stdout@@Base+0x7b1c>
   1cbd0:	clz	r5, r1
   1cbd4:	cmp	r5, #0
   1cbd8:	bne	1cdc8 <close_stdout@@Base+0x7d44>
   1cbdc:	cmp	r1, ip
   1cbe0:	cmpcs	r2, sl
   1cbe4:	movhi	r4, #0
   1cbe8:	movls	r4, #1
   1cbec:	movls	r3, #1
   1cbf0:	movls	r4, r5
   1cbf4:	movhi	r3, r4
   1cbf8:	b	1cba0 <close_stdout@@Base+0x7b1c>
   1cbfc:	cmp	r2, #0
   1cc00:	bne	1cc14 <close_stdout@@Base+0x7b90>
   1cc04:	mov	r1, r2
   1cc08:	mov	r0, #1
   1cc0c:	bl	1c560 <close_stdout@@Base+0x74dc>
   1cc10:	mov	r8, r0
   1cc14:	clz	r3, r8
   1cc18:	cmp	r3, #0
   1cc1c:	bne	1ccec <close_stdout@@Base+0x7c68>
   1cc20:	rsb	r9, r8, r9
   1cc24:	lsr	r5, r8, #16
   1cc28:	uxth	sl, r8
   1cc2c:	mov	r4, #1
   1cc30:	mov	r1, r5
   1cc34:	mov	r0, r9
   1cc38:	bl	1c560 <close_stdout@@Base+0x74dc>
   1cc3c:	mov	r1, r5
   1cc40:	mov	fp, r0
   1cc44:	mov	r0, r9
   1cc48:	bl	1c74c <close_stdout@@Base+0x76c8>
   1cc4c:	mul	r0, sl, fp
   1cc50:	lsr	r2, r7, #16
   1cc54:	orr	r1, r2, r1, lsl #16
   1cc58:	cmp	r0, r1
   1cc5c:	bls	1cc7c <close_stdout@@Base+0x7bf8>
   1cc60:	adds	r1, r1, r8
   1cc64:	sub	r3, fp, #1
   1cc68:	bcs	1cee8 <close_stdout@@Base+0x7e64>
   1cc6c:	cmp	r0, r1
   1cc70:	subhi	fp, fp, #2
   1cc74:	addhi	r1, r1, r8
   1cc78:	bls	1cee8 <close_stdout@@Base+0x7e64>
   1cc7c:	rsb	r2, r0, r1
   1cc80:	mov	r1, r5
   1cc84:	str	r2, [sp]
   1cc88:	uxth	r7, r7
   1cc8c:	mov	r0, r2
   1cc90:	bl	1c560 <close_stdout@@Base+0x74dc>
   1cc94:	ldr	r2, [sp]
   1cc98:	mov	r1, r5
   1cc9c:	mov	r9, r0
   1cca0:	mov	r0, r2
   1cca4:	bl	1c74c <close_stdout@@Base+0x76c8>
   1cca8:	mul	sl, sl, r9
   1ccac:	orr	r1, r7, r1, lsl #16
   1ccb0:	cmp	sl, r1
   1ccb4:	bls	1ccd4 <close_stdout@@Base+0x7c50>
   1ccb8:	adds	r8, r1, r8
   1ccbc:	sub	r3, r9, #1
   1ccc0:	bcs	1ccd0 <close_stdout@@Base+0x7c4c>
   1ccc4:	cmp	sl, r8
   1ccc8:	subhi	r9, r9, #2
   1cccc:	bhi	1ccd4 <close_stdout@@Base+0x7c50>
   1ccd0:	mov	r9, r3
   1ccd4:	orr	r3, r9, fp, lsl #16
   1ccd8:	b	1cba0 <close_stdout@@Base+0x7b1c>
   1ccdc:	mvn	r6, r6
   1cce0:	rsbs	r2, r2, #0
   1cce4:	rsc	r3, r3, #0
   1cce8:	b	1caa8 <close_stdout@@Base+0x7a24>
   1ccec:	lsl	r8, r8, r3
   1ccf0:	rsb	fp, r3, #32
   1ccf4:	lsr	r4, r9, fp
   1ccf8:	lsr	fp, r7, fp
   1ccfc:	lsr	r5, r8, #16
   1cd00:	orr	fp, fp, r9, lsl r3
   1cd04:	mov	r0, r4
   1cd08:	lsl	r7, r7, r3
   1cd0c:	mov	r1, r5
   1cd10:	uxth	sl, r8
   1cd14:	bl	1c560 <close_stdout@@Base+0x74dc>
   1cd18:	mov	r1, r5
   1cd1c:	mov	r3, r0
   1cd20:	mov	r0, r4
   1cd24:	str	r3, [sp]
   1cd28:	bl	1c74c <close_stdout@@Base+0x76c8>
   1cd2c:	ldr	r3, [sp]
   1cd30:	lsr	r2, fp, #16
   1cd34:	mul	r0, sl, r3
   1cd38:	orr	r1, r2, r1, lsl #16
   1cd3c:	cmp	r0, r1
   1cd40:	bls	1cd60 <close_stdout@@Base+0x7cdc>
   1cd44:	adds	r1, r1, r8
   1cd48:	sub	r2, r3, #1
   1cd4c:	bcs	1cf00 <close_stdout@@Base+0x7e7c>
   1cd50:	cmp	r0, r1
   1cd54:	subhi	r3, r3, #2
   1cd58:	addhi	r1, r1, r8
   1cd5c:	bls	1cf00 <close_stdout@@Base+0x7e7c>
   1cd60:	rsb	r9, r0, r1
   1cd64:	mov	r1, r5
   1cd68:	str	r3, [sp]
   1cd6c:	uxth	fp, fp
   1cd70:	mov	r0, r9
   1cd74:	bl	1c560 <close_stdout@@Base+0x74dc>
   1cd78:	mov	r1, r5
   1cd7c:	mov	r4, r0
   1cd80:	mov	r0, r9
   1cd84:	bl	1c74c <close_stdout@@Base+0x76c8>
   1cd88:	mul	r9, sl, r4
   1cd8c:	ldr	r3, [sp]
   1cd90:	orr	r1, fp, r1, lsl #16
   1cd94:	cmp	r9, r1
   1cd98:	bls	1cdbc <close_stdout@@Base+0x7d38>
   1cd9c:	adds	r1, r1, r8
   1cda0:	sub	r2, r4, #1
   1cda4:	bcs	1cdb8 <close_stdout@@Base+0x7d34>
   1cda8:	cmp	r9, r1
   1cdac:	subhi	r4, r4, #2
   1cdb0:	addhi	r1, r1, r8
   1cdb4:	bhi	1cdbc <close_stdout@@Base+0x7d38>
   1cdb8:	mov	r4, r2
   1cdbc:	rsb	r9, r9, r1
   1cdc0:	orr	r4, r4, r3, lsl #16
   1cdc4:	b	1cc30 <close_stdout@@Base+0x7bac>
   1cdc8:	rsb	sl, r5, #32
   1cdcc:	lsl	r3, r2, r5
   1cdd0:	lsr	r0, r2, sl
   1cdd4:	lsr	r2, ip, sl
   1cdd8:	orr	r4, r0, r1, lsl r5
   1cddc:	lsr	sl, r7, sl
   1cde0:	mov	r0, r2
   1cde4:	orr	sl, sl, ip, lsl r5
   1cde8:	lsr	r9, r4, #16
   1cdec:	str	r3, [sp, #4]
   1cdf0:	str	r2, [sp]
   1cdf4:	uxth	fp, r4
   1cdf8:	mov	r1, r9
   1cdfc:	bl	1c560 <close_stdout@@Base+0x74dc>
   1ce00:	ldr	r2, [sp]
   1ce04:	mov	r1, r9
   1ce08:	mov	r8, r0
   1ce0c:	mov	r0, r2
   1ce10:	bl	1c74c <close_stdout@@Base+0x76c8>
   1ce14:	mul	r0, fp, r8
   1ce18:	lsr	r2, sl, #16
   1ce1c:	orr	r1, r2, r1, lsl #16
   1ce20:	cmp	r0, r1
   1ce24:	bls	1ce44 <close_stdout@@Base+0x7dc0>
   1ce28:	adds	r1, r1, r4
   1ce2c:	sub	r2, r8, #1
   1ce30:	bcs	1cef8 <close_stdout@@Base+0x7e74>
   1ce34:	cmp	r0, r1
   1ce38:	subhi	r8, r8, #2
   1ce3c:	addhi	r1, r1, r4
   1ce40:	bls	1cef8 <close_stdout@@Base+0x7e74>
   1ce44:	rsb	ip, r0, r1
   1ce48:	mov	r1, r9
   1ce4c:	str	ip, [sp]
   1ce50:	mov	r0, ip
   1ce54:	bl	1c560 <close_stdout@@Base+0x74dc>
   1ce58:	ldr	ip, [sp]
   1ce5c:	mov	r1, r9
   1ce60:	mov	r2, r0
   1ce64:	mov	r0, ip
   1ce68:	str	r2, [sp]
   1ce6c:	bl	1c74c <close_stdout@@Base+0x76c8>
   1ce70:	ldr	r2, [sp]
   1ce74:	uxth	ip, sl
   1ce78:	mul	fp, fp, r2
   1ce7c:	orr	ip, ip, r1, lsl #16
   1ce80:	cmp	fp, ip
   1ce84:	bls	1cea4 <close_stdout@@Base+0x7e20>
   1ce88:	adds	ip, ip, r4
   1ce8c:	sub	r1, r2, #1
   1ce90:	bcs	1cef0 <close_stdout@@Base+0x7e6c>
   1ce94:	cmp	fp, ip
   1ce98:	subhi	r2, r2, #2
   1ce9c:	addhi	ip, ip, r4
   1cea0:	bls	1cef0 <close_stdout@@Base+0x7e6c>
   1cea4:	ldr	r0, [sp, #4]
   1cea8:	orr	r1, r2, r8, lsl #16
   1ceac:	rsb	fp, fp, ip
   1ceb0:	umull	r2, r3, r1, r0
   1ceb4:	cmp	fp, r3
   1ceb8:	bcc	1cedc <close_stdout@@Base+0x7e58>
   1cebc:	movne	r4, #0
   1cec0:	moveq	r4, #1
   1cec4:	cmp	r2, r7, lsl r5
   1cec8:	movls	r4, #0
   1cecc:	andhi	r4, r4, #1
   1ced0:	cmp	r4, #0
   1ced4:	moveq	r3, r1
   1ced8:	beq	1cba0 <close_stdout@@Base+0x7b1c>
   1cedc:	sub	r3, r1, #1
   1cee0:	mov	r4, #0
   1cee4:	b	1cba0 <close_stdout@@Base+0x7b1c>
   1cee8:	mov	fp, r3
   1ceec:	b	1cc7c <close_stdout@@Base+0x7bf8>
   1cef0:	mov	r2, r1
   1cef4:	b	1cea4 <close_stdout@@Base+0x7e20>
   1cef8:	mov	r8, r2
   1cefc:	b	1ce44 <close_stdout@@Base+0x7dc0>
   1cf00:	mov	r3, r2
   1cf04:	b	1cd60 <close_stdout@@Base+0x7cdc>
   1cf08:	cmp	r3, #0
   1cf0c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cf10:	mov	r6, r0
   1cf14:	sub	sp, sp, #12
   1cf18:	mov	r5, r1
   1cf1c:	mov	r7, r0
   1cf20:	mov	r4, r2
   1cf24:	mov	r8, r1
   1cf28:	bne	1d008 <close_stdout@@Base+0x7f84>
   1cf2c:	cmp	r2, r1
   1cf30:	bls	1d044 <close_stdout@@Base+0x7fc0>
   1cf34:	clz	r3, r2
   1cf38:	cmp	r3, #0
   1cf3c:	rsbne	r8, r3, #32
   1cf40:	lslne	r4, r2, r3
   1cf44:	lsrne	r8, r0, r8
   1cf48:	lslne	r7, r0, r3
   1cf4c:	orrne	r8, r8, r1, lsl r3
   1cf50:	lsr	r5, r4, #16
   1cf54:	uxth	sl, r4
   1cf58:	mov	r1, r5
   1cf5c:	mov	r0, r8
   1cf60:	bl	1c560 <close_stdout@@Base+0x74dc>
   1cf64:	mov	r1, r5
   1cf68:	mov	r9, r0
   1cf6c:	mov	r0, r8
   1cf70:	bl	1c74c <close_stdout@@Base+0x76c8>
   1cf74:	mul	r0, sl, r9
   1cf78:	lsr	r3, r7, #16
   1cf7c:	orr	r1, r3, r1, lsl #16
   1cf80:	cmp	r0, r1
   1cf84:	bls	1cfa8 <close_stdout@@Base+0x7f24>
   1cf88:	adds	r1, r1, r4
   1cf8c:	sub	r2, r9, #1
   1cf90:	bcs	1cfa4 <close_stdout@@Base+0x7f20>
   1cf94:	cmp	r0, r1
   1cf98:	subhi	r9, r9, #2
   1cf9c:	addhi	r1, r1, r4
   1cfa0:	bhi	1cfa8 <close_stdout@@Base+0x7f24>
   1cfa4:	mov	r9, r2
   1cfa8:	rsb	r8, r0, r1
   1cfac:	mov	r1, r5
   1cfb0:	uxth	r7, r7
   1cfb4:	mov	r0, r8
   1cfb8:	bl	1c560 <close_stdout@@Base+0x74dc>
   1cfbc:	mov	r1, r5
   1cfc0:	mov	r6, r0
   1cfc4:	mov	r0, r8
   1cfc8:	bl	1c74c <close_stdout@@Base+0x76c8>
   1cfcc:	mul	sl, sl, r6
   1cfd0:	orr	r1, r7, r1, lsl #16
   1cfd4:	cmp	sl, r1
   1cfd8:	bls	1cff4 <close_stdout@@Base+0x7f70>
   1cfdc:	adds	r4, r1, r4
   1cfe0:	sub	r3, r6, #1
   1cfe4:	bcs	1d2f0 <close_stdout@@Base+0x826c>
   1cfe8:	cmp	sl, r4
   1cfec:	subhi	r6, r6, #2
   1cff0:	bls	1d2f0 <close_stdout@@Base+0x826c>
   1cff4:	orr	r0, r6, r9, lsl #16
   1cff8:	mov	r6, #0
   1cffc:	mov	r1, r6
   1d000:	add	sp, sp, #12
   1d004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d008:	cmp	r3, r1
   1d00c:	movhi	r6, #0
   1d010:	movhi	r0, r6
   1d014:	bhi	1cffc <close_stdout@@Base+0x7f78>
   1d018:	clz	r7, r3
   1d01c:	cmp	r7, #0
   1d020:	bne	1d120 <close_stdout@@Base+0x809c>
   1d024:	cmp	r3, r1
   1d028:	cmpcs	r2, r6
   1d02c:	movhi	r6, #0
   1d030:	movls	r6, #1
   1d034:	movls	r0, #1
   1d038:	movls	r6, r7
   1d03c:	movhi	r0, r6
   1d040:	b	1cffc <close_stdout@@Base+0x7f78>
   1d044:	cmp	r2, #0
   1d048:	bne	1d05c <close_stdout@@Base+0x7fd8>
   1d04c:	mov	r1, r2
   1d050:	mov	r0, #1
   1d054:	bl	1c560 <close_stdout@@Base+0x74dc>
   1d058:	mov	r4, r0
   1d05c:	clz	r3, r4
   1d060:	cmp	r3, #0
   1d064:	bne	1d21c <close_stdout@@Base+0x8198>
   1d068:	rsb	r5, r4, r5
   1d06c:	lsr	r8, r4, #16
   1d070:	uxth	sl, r4
   1d074:	mov	r6, #1
   1d078:	mov	r1, r8
   1d07c:	mov	r0, r5
   1d080:	bl	1c560 <close_stdout@@Base+0x74dc>
   1d084:	mov	r1, r8
   1d088:	mov	r9, r0
   1d08c:	mov	r0, r5
   1d090:	bl	1c74c <close_stdout@@Base+0x76c8>
   1d094:	mul	r0, sl, r9
   1d098:	lsr	r3, r7, #16
   1d09c:	orr	r1, r3, r1, lsl #16
   1d0a0:	cmp	r0, r1
   1d0a4:	bls	1d0c4 <close_stdout@@Base+0x8040>
   1d0a8:	adds	r1, r1, r4
   1d0ac:	sub	r2, r9, #1
   1d0b0:	bcs	1d2f8 <close_stdout@@Base+0x8274>
   1d0b4:	cmp	r0, r1
   1d0b8:	subhi	r9, r9, #2
   1d0bc:	addhi	r1, r1, r4
   1d0c0:	bls	1d2f8 <close_stdout@@Base+0x8274>
   1d0c4:	rsb	fp, r0, r1
   1d0c8:	mov	r1, r8
   1d0cc:	uxth	r7, r7
   1d0d0:	mov	r0, fp
   1d0d4:	bl	1c560 <close_stdout@@Base+0x74dc>
   1d0d8:	mov	r1, r8
   1d0dc:	mov	r5, r0
   1d0e0:	mov	r0, fp
   1d0e4:	bl	1c74c <close_stdout@@Base+0x76c8>
   1d0e8:	mul	sl, sl, r5
   1d0ec:	orr	r1, r7, r1, lsl #16
   1d0f0:	cmp	sl, r1
   1d0f4:	bls	1d110 <close_stdout@@Base+0x808c>
   1d0f8:	adds	r4, r1, r4
   1d0fc:	sub	r3, r5, #1
   1d100:	bcs	1d300 <close_stdout@@Base+0x827c>
   1d104:	cmp	sl, r4
   1d108:	subhi	r5, r5, #2
   1d10c:	bls	1d300 <close_stdout@@Base+0x827c>
   1d110:	orr	r0, r5, r9, lsl #16
   1d114:	mov	r1, r6
   1d118:	add	sp, sp, #12
   1d11c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d120:	rsb	r1, r7, #32
   1d124:	lsl	r0, r2, r7
   1d128:	lsr	r2, r2, r1
   1d12c:	lsr	fp, r5, r1
   1d130:	orr	r8, r2, r3, lsl r7
   1d134:	lsr	r1, r6, r1
   1d138:	str	r0, [sp, #4]
   1d13c:	orr	r5, r1, r5, lsl r7
   1d140:	lsr	r9, r8, #16
   1d144:	mov	r0, fp
   1d148:	uxth	sl, r8
   1d14c:	mov	r1, r9
   1d150:	bl	1c560 <close_stdout@@Base+0x74dc>
   1d154:	mov	r1, r9
   1d158:	mov	r4, r0
   1d15c:	mov	r0, fp
   1d160:	bl	1c74c <close_stdout@@Base+0x76c8>
   1d164:	mul	r0, sl, r4
   1d168:	lsr	ip, r5, #16
   1d16c:	orr	r1, ip, r1, lsl #16
   1d170:	cmp	r0, r1
   1d174:	bls	1d188 <close_stdout@@Base+0x8104>
   1d178:	adds	r1, r1, r8
   1d17c:	sub	r2, r4, #1
   1d180:	bcc	1d31c <close_stdout@@Base+0x8298>
   1d184:	mov	r4, r2
   1d188:	rsb	ip, r0, r1
   1d18c:	mov	r1, r9
   1d190:	str	ip, [sp]
   1d194:	uxth	r5, r5
   1d198:	mov	r0, ip
   1d19c:	bl	1c560 <close_stdout@@Base+0x74dc>
   1d1a0:	ldr	ip, [sp]
   1d1a4:	mov	r1, r9
   1d1a8:	mov	fp, r0
   1d1ac:	mov	r0, ip
   1d1b0:	bl	1c74c <close_stdout@@Base+0x76c8>
   1d1b4:	mul	sl, sl, fp
   1d1b8:	orr	r1, r5, r1, lsl #16
   1d1bc:	cmp	sl, r1
   1d1c0:	bls	1d1d4 <close_stdout@@Base+0x8150>
   1d1c4:	adds	r1, r1, r8
   1d1c8:	sub	r2, fp, #1
   1d1cc:	bcc	1d308 <close_stdout@@Base+0x8284>
   1d1d0:	mov	fp, r2
   1d1d4:	ldr	r3, [sp, #4]
   1d1d8:	orr	r0, fp, r4, lsl #16
   1d1dc:	rsb	sl, sl, r1
   1d1e0:	umull	r4, r5, r0, r3
   1d1e4:	cmp	sl, r5
   1d1e8:	bcc	1d208 <close_stdout@@Base+0x8184>
   1d1ec:	movne	r3, #0
   1d1f0:	moveq	r3, #1
   1d1f4:	cmp	r4, r6, lsl r7
   1d1f8:	movls	r6, #0
   1d1fc:	andhi	r6, r3, #1
   1d200:	cmp	r6, #0
   1d204:	beq	1cffc <close_stdout@@Base+0x7f78>
   1d208:	mov	r6, #0
   1d20c:	sub	r0, r0, #1
   1d210:	mov	r1, r6
   1d214:	add	sp, sp, #12
   1d218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d21c:	lsl	r4, r4, r3
   1d220:	rsb	r9, r3, #32
   1d224:	lsr	r2, r5, r9
   1d228:	lsr	r9, r6, r9
   1d22c:	lsr	r8, r4, #16
   1d230:	orr	r9, r9, r5, lsl r3
   1d234:	mov	r0, r2
   1d238:	lsl	r7, r6, r3
   1d23c:	mov	r1, r8
   1d240:	str	r2, [sp]
   1d244:	bl	1c560 <close_stdout@@Base+0x74dc>
   1d248:	ldr	r2, [sp]
   1d24c:	mov	r1, r8
   1d250:	uxth	sl, r4
   1d254:	mov	fp, r0
   1d258:	mov	r0, r2
   1d25c:	bl	1c74c <close_stdout@@Base+0x76c8>
   1d260:	mul	r0, sl, fp
   1d264:	lsr	r3, r9, #16
   1d268:	orr	r1, r3, r1, lsl #16
   1d26c:	cmp	r0, r1
   1d270:	bls	1d290 <close_stdout@@Base+0x820c>
   1d274:	adds	r1, r1, r4
   1d278:	sub	r3, fp, #1
   1d27c:	bcs	1d330 <close_stdout@@Base+0x82ac>
   1d280:	cmp	r0, r1
   1d284:	subhi	fp, fp, #2
   1d288:	addhi	r1, r1, r4
   1d28c:	bls	1d330 <close_stdout@@Base+0x82ac>
   1d290:	rsb	r5, r0, r1
   1d294:	mov	r1, r8
   1d298:	uxth	r9, r9
   1d29c:	mov	r0, r5
   1d2a0:	bl	1c560 <close_stdout@@Base+0x74dc>
   1d2a4:	mov	r1, r8
   1d2a8:	mov	r6, r0
   1d2ac:	mov	r0, r5
   1d2b0:	bl	1c74c <close_stdout@@Base+0x76c8>
   1d2b4:	mul	r5, sl, r6
   1d2b8:	orr	r1, r9, r1, lsl #16
   1d2bc:	cmp	r5, r1
   1d2c0:	bls	1d2e4 <close_stdout@@Base+0x8260>
   1d2c4:	adds	r1, r1, r4
   1d2c8:	sub	r3, r6, #1
   1d2cc:	bcs	1d2e0 <close_stdout@@Base+0x825c>
   1d2d0:	cmp	r5, r1
   1d2d4:	subhi	r6, r6, #2
   1d2d8:	addhi	r1, r1, r4
   1d2dc:	bhi	1d2e4 <close_stdout@@Base+0x8260>
   1d2e0:	mov	r6, r3
   1d2e4:	rsb	r5, r5, r1
   1d2e8:	orr	r6, r6, fp, lsl #16
   1d2ec:	b	1d078 <close_stdout@@Base+0x7ff4>
   1d2f0:	mov	r6, r3
   1d2f4:	b	1cff4 <close_stdout@@Base+0x7f70>
   1d2f8:	mov	r9, r2
   1d2fc:	b	1d0c4 <close_stdout@@Base+0x8040>
   1d300:	mov	r5, r3
   1d304:	b	1d110 <close_stdout@@Base+0x808c>
   1d308:	cmp	sl, r1
   1d30c:	subhi	fp, fp, #2
   1d310:	addhi	r1, r1, r8
   1d314:	bhi	1d1d4 <close_stdout@@Base+0x8150>
   1d318:	b	1d1d0 <close_stdout@@Base+0x814c>
   1d31c:	cmp	r0, r1
   1d320:	subhi	r4, r4, #2
   1d324:	addhi	r1, r1, r8
   1d328:	bhi	1d188 <close_stdout@@Base+0x8104>
   1d32c:	b	1d184 <close_stdout@@Base+0x8100>
   1d330:	mov	fp, r3
   1d334:	b	1d290 <close_stdout@@Base+0x820c>
   1d338:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1d33c:	mov	r7, r0
   1d340:	ldr	r6, [pc, #76]	; 1d394 <close_stdout@@Base+0x8310>
   1d344:	mov	r8, r1
   1d348:	ldr	r5, [pc, #72]	; 1d398 <close_stdout@@Base+0x8314>
   1d34c:	mov	r9, r2
   1d350:	add	r6, pc, r6
   1d354:	bl	116a0 <_init@@Base>
   1d358:	add	r5, pc, r5
   1d35c:	rsb	r6, r5, r6
   1d360:	asrs	r6, r6, #2
   1d364:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d368:	sub	r5, r5, #4
   1d36c:	mov	r4, #0
   1d370:	add	r4, r4, #1
   1d374:	ldr	r3, [r5, #4]!
   1d378:	mov	r0, r7
   1d37c:	mov	r1, r8
   1d380:	mov	r2, r9
   1d384:	blx	r3
   1d388:	cmp	r4, r6
   1d38c:	bne	1d370 <close_stdout@@Base+0x82ec>
   1d390:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1d394:	strdeq	r2, [r1], -ip
   1d398:	strdeq	r2, [r1], -r0
   1d39c:	bx	lr
   1d3a0:	ldr	r3, [pc, #28]	; 1d3c4 <close_stdout@@Base+0x8340>
   1d3a4:	mov	r1, #0
   1d3a8:	ldr	r2, [pc, #24]	; 1d3c8 <close_stdout@@Base+0x8344>
   1d3ac:	add	r3, pc, r3
   1d3b0:	ldr	r3, [r3, r2]
   1d3b4:	cmp	r3, #0
   1d3b8:	ldrne	r2, [r3]
   1d3bc:	moveq	r2, r3
   1d3c0:	b	11978 <__cxa_atexit@plt>
   1d3c4:	andeq	r2, r1, ip, asr #24
   1d3c8:	muleq	r0, r4, r1

Disassembly of section .fini:

0001d3cc <_fini@@Base>:
   1d3cc:	push	{r3, lr}
   1d3d0:	pop	{r3, pc}
