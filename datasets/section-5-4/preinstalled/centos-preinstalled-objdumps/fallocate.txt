
centos-preinstalled/fallocate:     file format elf32-littlearm


Disassembly of section .init:

00010e38 <.init>:
   10e38:	push	{r3, lr}
   10e3c:	bl	11ecc <strspn@plt+0xdd4>
   10e40:	pop	{r3, pc}

Disassembly of section .plt:

00010e44 <calloc@plt-0x14>:
   10e44:	push	{lr}		; (str lr, [sp, #-4]!)
   10e48:	ldr	lr, [pc, #4]	; 10e54 <calloc@plt-0x4>
   10e4c:	add	lr, pc, lr
   10e50:	ldr	pc, [lr, #8]!
   10e54:	andeq	r5, r1, ip, lsr #3

00010e58 <calloc@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #428]!	; 0x1ac

00010e64 <raise@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #420]!	; 0x1a4

00010e70 <strcmp@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #412]!	; 0x19c

00010e7c <strtol@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #404]!	; 0x194

00010e88 <strcspn@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #396]!	; 0x18c

00010e94 <posix_fadvise64@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #388]!	; 0x184

00010ea0 <free@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #380]!	; 0x17c

00010eac <ferror@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #372]!	; 0x174

00010eb8 <_exit@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #364]!	; 0x16c

00010ec4 <memcpy@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #356]!	; 0x164

00010ed0 <__strtoull_internal@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #348]!	; 0x15c

00010edc <dcgettext@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #340]!	; 0x154

00010ee8 <__stack_chk_fail@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #332]!	; 0x14c

00010ef4 <textdomain@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #324]!	; 0x144

00010f00 <__strndup@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #316]!	; 0x13c

00010f0c <err@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #308]!	; 0x134

00010f18 <__fxstat64@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #300]!	; 0x12c

00010f24 <lseek64@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #292]!	; 0x124

00010f30 <pread64@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #284]!	; 0x11c

00010f3c <__fpending@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #276]!	; 0x114

00010f48 <open64@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #268]!	; 0x10c

00010f54 <malloc@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #260]!	; 0x104

00010f60 <__libc_start_main@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #252]!	; 0xfc

00010f6c <__gmon_start__@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #244]!	; 0xf4

00010f78 <getopt_long@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #236]!	; 0xec

00010f84 <__ctype_b_loc@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #228]!	; 0xe4

00010f90 <exit@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #220]!	; 0xdc

00010f9c <strtoul@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #212]!	; 0xd4

00010fa8 <strlen@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #204]!	; 0xcc

00010fb4 <strchr@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #196]!	; 0xc4

00010fc0 <warnx@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #188]!	; 0xbc

00010fcc <getpagesize@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #180]!	; 0xb4

00010fd8 <__errno_location@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #172]!	; 0xac

00010fe4 <__cxa_atexit@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #164]!	; 0xa4

00010ff0 <__vasprintf_chk@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #156]!	; 0x9c

00010ffc <__strdup@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #148]!	; 0x94

00011008 <memset@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #140]!	; 0x8c

00011014 <fgetc@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #132]!	; 0x84

00011020 <__printf_chk@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #86016	; 0x15000
   11028:	ldr	pc, [ip, #124]!	; 0x7c

0001102c <strtod@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #86016	; 0x15000
   11034:	ldr	pc, [ip, #116]!	; 0x74

00011038 <__fprintf_chk@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #86016	; 0x15000
   11040:	ldr	pc, [ip, #108]!	; 0x6c

00011044 <fclose@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #86016	; 0x15000
   1104c:	ldr	pc, [ip, #100]!	; 0x64

00011050 <posix_fallocate64@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #86016	; 0x15000
   11058:	ldr	pc, [ip, #92]!	; 0x5c

0001105c <setlocale@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #86016	; 0x15000
   11064:	ldr	pc, [ip, #84]!	; 0x54

00011068 <fallocate64@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #86016	; 0x15000
   11070:	ldr	pc, [ip, #76]!	; 0x4c

00011074 <errx@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #86016	; 0x15000
   1107c:	ldr	pc, [ip, #68]!	; 0x44

00011080 <warn@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #86016	; 0x15000
   11088:	ldr	pc, [ip, #60]!	; 0x3c

0001108c <fputc@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #86016	; 0x15000
   11094:	ldr	pc, [ip, #52]!	; 0x34

00011098 <localeconv@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #86016	; 0x15000
   110a0:	ldr	pc, [ip, #44]!	; 0x2c

000110a4 <__strtoll_internal@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #86016	; 0x15000
   110ac:	ldr	pc, [ip, #36]!	; 0x24

000110b0 <bindtextdomain@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #86016	; 0x15000
   110b8:	ldr	pc, [ip, #28]!

000110bc <fputs@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #86016	; 0x15000
   110c4:	ldr	pc, [ip, #20]!

000110c8 <strncmp@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #86016	; 0x15000
   110d0:	ldr	pc, [ip, #12]!

000110d4 <abort@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #86016	; 0x15000
   110dc:	ldr	pc, [ip, #4]!

000110e0 <close@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #20, 20	; 0x14000
   110e8:	ldr	pc, [ip, #4092]!	; 0xffc

000110ec <__snprintf_chk@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #20, 20	; 0x14000
   110f4:	ldr	pc, [ip, #4084]!	; 0xff4

000110f8 <strspn@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #20, 20	; 0x14000
   11100:	ldr	pc, [ip, #4076]!	; 0xfec

Disassembly of section .text:

00011108 <.text>:
   11108:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1110c:	sub	sp, sp, #236	; 0xec
   11110:	movw	r4, #24840	; 0x6108
   11114:	movt	r4, #2
   11118:	str	r4, [sp, #76]	; 0x4c
   1111c:	mov	r5, r1
   11120:	ldr	r6, [sp, #76]	; 0x4c
   11124:	mov	r4, r0
   11128:	movw	r1, #18764	; 0x494c
   1112c:	mov	r0, #6
   11130:	movt	r1, #1
   11134:	mov	r3, #0
   11138:	ldr	r2, [r6]
   1113c:	movw	sl, #24872	; 0x6128
   11140:	str	r3, [sp, #104]	; 0x68
   11144:	movw	fp, #24864	; 0x6120
   11148:	str	r3, [sp, #24]
   1114c:	movt	sl, #2
   11150:	str	r2, [sp, #228]	; 0xe4
   11154:	movt	fp, #2
   11158:	str	r3, [sp, #108]	; 0x6c
   1115c:	mov	r6, #0
   11160:	str	r3, [sp, #40]	; 0x28
   11164:	mov	r7, #0
   11168:	str	r3, [sp, #112]	; 0x70
   1116c:	str	r3, [sp, #32]
   11170:	str	r3, [sp, #116]	; 0x74
   11174:	bl	1105c <setlocale@plt>
   11178:	movw	r0, #18684	; 0x48fc
   1117c:	movw	r1, #18696	; 0x4908
   11180:	movt	r0, #1
   11184:	movt	r1, #1
   11188:	bl	110b0 <bindtextdomain@plt>
   1118c:	movw	r0, #18684	; 0x48fc
   11190:	movt	r0, #1
   11194:	bl	10ef4 <textdomain@plt>
   11198:	movw	r0, #8260	; 0x2044
   1119c:	movt	r0, #1
   111a0:	bl	14698 <strspn@plt+0x35a0>
   111a4:	mvn	r0, #1
   111a8:	mvn	r1, #0
   111ac:	strd	r0, [sp, #64]	; 0x40
   111b0:	mov	r8, #0
   111b4:	movw	r2, #19676	; 0x4cdc
   111b8:	str	r8, [sp]
   111bc:	movt	r2, #1
   111c0:	mov	r0, r4
   111c4:	mov	r1, r5
   111c8:	ldr	r3, [pc, #3256]	; 11e88 <strspn@plt+0xd90>
   111cc:	bl	10f78 <getopt_long@plt>
   111d0:	cmn	r0, #1
   111d4:	beq	116bc <strspn@plt+0x5c4>
   111d8:	cmp	r0, #98	; 0x62
   111dc:	ble	11258 <strspn@plt+0x160>
   111e0:	ldr	r1, [pc, #3236]	; 11e8c <strspn@plt+0xd94>
   111e4:	add	r9, sp, #104	; 0x68
   111e8:	mov	ip, r8
   111ec:	mov	r3, #99	; 0x63
   111f0:	sub	lr, r1, #64	; 0x40
   111f4:	cmp	r0, r3
   111f8:	blt	11234 <strspn@plt+0x13c>
   111fc:	movne	r2, lr
   11200:	beq	1121c <strspn@plt+0x124>
   11204:	ldr	r3, [r2, #4]!
   11208:	cmp	r3, #0
   1120c:	beq	11234 <strspn@plt+0x13c>
   11210:	cmp	r0, r3
   11214:	blt	11234 <strspn@plt+0x13c>
   11218:	bne	11204 <strspn@plt+0x10c>
   1121c:	ldr	r3, [r9, ip, lsl #2]
   11220:	cmp	r3, #0
   11224:	streq	r0, [r9, ip, lsl #2]
   11228:	beq	11234 <strspn@plt+0x13c>
   1122c:	cmp	r0, r3
   11230:	bne	117e4 <strspn@plt+0x6ec>
   11234:	ldr	r3, [r1]
   11238:	add	r8, r8, #1
   1123c:	mov	lr, r1
   11240:	cmp	r3, #0
   11244:	mov	ip, r8
   11248:	beq	11258 <strspn@plt+0x160>
   1124c:	cmp	r0, r3
   11250:	add	r1, r1, #64	; 0x40
   11254:	bge	111f4 <strspn@plt+0xfc>
   11258:	sub	r0, r0, #86	; 0x56
   1125c:	cmp	r0, #36	; 0x24
   11260:	ldrls	pc, [pc, r0, lsl #2]
   11264:	b	11678 <strspn@plt+0x580>
   11268:	andeq	r1, r1, r4, lsr #12
   1126c:	andeq	r1, r1, r8, ror r6
   11270:	andeq	r1, r1, r8, ror r6
   11274:	andeq	r1, r1, r8, ror r6
   11278:	andeq	r1, r1, r8, ror r6
   1127c:	andeq	r1, r1, r8, ror r6
   11280:	andeq	r1, r1, r8, ror r6
   11284:	andeq	r1, r1, r8, ror r6
   11288:	andeq	r1, r1, r8, ror r6
   1128c:	andeq	r1, r1, r8, ror r6
   11290:	andeq	r1, r1, r8, ror r6
   11294:	andeq	r1, r1, r8, ror r6
   11298:	andeq	r1, r1, r8, ror r6
   1129c:	andeq	r1, r1, r4, lsl r6
   112a0:	andeq	r1, r1, r8, lsl #12
   112a4:	andeq	r1, r1, r8, ror r6
   112a8:	andeq	r1, r1, r8, ror r6
   112ac:	andeq	r1, r1, r8, ror r6
   112b0:	andeq	r1, r1, r0, lsr #7
   112b4:	muleq	r1, r0, r3
   112b8:	andeq	r1, r1, r8, ror r6
   112bc:	andeq	r1, r1, r8, ror r6
   112c0:	andeq	r1, r1, r8, ror #6
   112c4:	andeq	r1, r1, r8, ror r6
   112c8:	andeq	r1, r1, r8, asr r3
   112cc:	andeq	r1, r1, r8, lsr r3
   112d0:	andeq	r1, r1, r8, lsr #6
   112d4:	andeq	r1, r1, r8, ror r6
   112d8:	andeq	r1, r1, r8, ror r6
   112dc:	andeq	r1, r1, r8, ror r6
   112e0:	andeq	r1, r1, r8, ror r6
   112e4:	andeq	r1, r1, r8, ror r6
   112e8:	andeq	r1, r1, r8, lsl r3
   112ec:	andeq	r1, r1, r8, ror r6
   112f0:	andeq	r1, r1, ip, lsl #6
   112f4:	andeq	r1, r1, r8, ror r6
   112f8:	strdeq	r1, [r1], -ip
   112fc:	ldr	r1, [sp, #32]
   11300:	orr	r1, r1, #16
   11304:	str	r1, [sp, #32]
   11308:	b	111b0 <strspn@plt+0xb8>
   1130c:	mov	r3, #1
   11310:	str	r3, [sp, #24]
   11314:	b	111b0 <strspn@plt+0xb8>
   11318:	ldr	r3, [sl]
   1131c:	add	r3, r3, #1
   11320:	str	r3, [sl]
   11324:	b	111b0 <strspn@plt+0xb8>
   11328:	ldr	r0, [sp, #32]
   1132c:	orr	r0, r0, #3
   11330:	str	r0, [sp, #32]
   11334:	b	111b0 <strspn@plt+0xb8>
   11338:	ldr	r0, [fp]
   1133c:	add	r1, sp, #120	; 0x78
   11340:	bl	12614 <strspn@plt+0x151c>
   11344:	cmp	r0, #0
   11348:	ldrdeq	r6, [sp, #120]	; 0x78
   1134c:	mvnne	r6, #0
   11350:	mvnne	r7, #0
   11354:	b	111b0 <strspn@plt+0xb8>
   11358:	ldr	r3, [sp, #32]
   1135c:	orr	r3, r3, #1
   11360:	str	r3, [sp, #32]
   11364:	b	111b0 <strspn@plt+0xb8>
   11368:	add	r1, sp, #120	; 0x78
   1136c:	ldr	r0, [fp]
   11370:	bl	12614 <strspn@plt+0x151c>
   11374:	cmp	r0, #0
   11378:	ldrdeq	r0, [sp, #120]	; 0x78
   1137c:	mvnne	r2, #0
   11380:	mvnne	r3, #0
   11384:	strdne	r2, [sp, #64]	; 0x40
   11388:	strdeq	r0, [sp, #64]	; 0x40
   1138c:	b	111b0 <strspn@plt+0xb8>
   11390:	ldr	r2, [sp, #32]
   11394:	orr	r2, r2, #32
   11398:	str	r2, [sp, #32]
   1139c:	b	111b0 <strspn@plt+0xb8>
   113a0:	movw	r3, #24856	; 0x6118
   113a4:	movt	r3, #2
   113a8:	mov	r2, #5
   113ac:	movw	r1, #18756	; 0x4944
   113b0:	ldr	r4, [r3]
   113b4:	movt	r1, #1
   113b8:	mov	r0, #0
   113bc:	bl	10edc <dcgettext@plt>
   113c0:	mov	r1, r4
   113c4:	bl	110bc <fputs@plt>
   113c8:	mov	r2, #5
   113cc:	movw	r1, #18768	; 0x4950
   113d0:	mov	r0, #0
   113d4:	movt	r1, #1
   113d8:	bl	10edc <dcgettext@plt>
   113dc:	movw	r3, #24832	; 0x6100
   113e0:	movt	r3, #2
   113e4:	mov	r1, #1
   113e8:	ldr	r3, [r3]
   113ec:	mov	r2, r0
   113f0:	mov	r0, r4
   113f4:	bl	11038 <__fprintf_chk@plt>
   113f8:	mov	r2, #5
   113fc:	movw	r1, #19436	; 0x4bec
   11400:	mov	r0, #0
   11404:	movt	r1, #1
   11408:	bl	10edc <dcgettext@plt>
   1140c:	mov	r1, r4
   11410:	bl	110bc <fputs@plt>
   11414:	mov	r2, #5
   11418:	movw	r1, #18796	; 0x496c
   1141c:	mov	r0, #0
   11420:	movt	r1, #1
   11424:	bl	10edc <dcgettext@plt>
   11428:	mov	r1, r4
   1142c:	bl	110bc <fputs@plt>
   11430:	mov	r2, #5
   11434:	movw	r1, #18852	; 0x49a4
   11438:	mov	r0, #0
   1143c:	movt	r1, #1
   11440:	bl	10edc <dcgettext@plt>
   11444:	mov	r1, r4
   11448:	bl	110bc <fputs@plt>
   1144c:	mov	r2, #5
   11450:	movw	r1, #18864	; 0x49b0
   11454:	mov	r0, #0
   11458:	movt	r1, #1
   1145c:	bl	10edc <dcgettext@plt>
   11460:	mov	r1, r4
   11464:	bl	110bc <fputs@plt>
   11468:	mov	r2, #5
   1146c:	movw	r1, #18916	; 0x49e4
   11470:	mov	r0, #0
   11474:	movt	r1, #1
   11478:	bl	10edc <dcgettext@plt>
   1147c:	mov	r1, r4
   11480:	bl	110bc <fputs@plt>
   11484:	mov	r2, #5
   11488:	movw	r1, #18976	; 0x4a20
   1148c:	mov	r0, #0
   11490:	movt	r1, #1
   11494:	bl	10edc <dcgettext@plt>
   11498:	mov	r1, r4
   1149c:	bl	110bc <fputs@plt>
   114a0:	mov	r2, #5
   114a4:	movw	r1, #19048	; 0x4a68
   114a8:	mov	r0, #0
   114ac:	movt	r1, #1
   114b0:	bl	10edc <dcgettext@plt>
   114b4:	mov	r1, r4
   114b8:	bl	110bc <fputs@plt>
   114bc:	mov	r2, #5
   114c0:	movw	r1, #19112	; 0x4aa8
   114c4:	mov	r0, #0
   114c8:	movt	r1, #1
   114cc:	bl	10edc <dcgettext@plt>
   114d0:	mov	r1, r4
   114d4:	bl	110bc <fputs@plt>
   114d8:	mov	r2, #5
   114dc:	movw	r1, #19176	; 0x4ae8
   114e0:	mov	r0, #0
   114e4:	movt	r1, #1
   114e8:	bl	10edc <dcgettext@plt>
   114ec:	mov	r1, r4
   114f0:	bl	110bc <fputs@plt>
   114f4:	mov	r2, #5
   114f8:	movw	r1, #19240	; 0x4b28
   114fc:	mov	r0, #0
   11500:	movt	r1, #1
   11504:	bl	10edc <dcgettext@plt>
   11508:	mov	r1, r4
   1150c:	bl	110bc <fputs@plt>
   11510:	mov	r2, #5
   11514:	movw	r1, #19304	; 0x4b68
   11518:	mov	r0, #0
   1151c:	movt	r1, #1
   11520:	bl	10edc <dcgettext@plt>
   11524:	mov	r1, r4
   11528:	bl	110bc <fputs@plt>
   1152c:	mov	r2, #5
   11530:	movw	r1, #19368	; 0x4ba8
   11534:	mov	r0, #0
   11538:	movt	r1, #1
   1153c:	bl	10edc <dcgettext@plt>
   11540:	mov	r1, r4
   11544:	bl	110bc <fputs@plt>
   11548:	mov	r2, #5
   1154c:	movw	r1, #19440	; 0x4bf0
   11550:	mov	r0, #0
   11554:	movt	r1, #1
   11558:	bl	10edc <dcgettext@plt>
   1155c:	mov	r1, r4
   11560:	bl	110bc <fputs@plt>
   11564:	mov	r2, #5
   11568:	movw	r1, #19436	; 0x4bec
   1156c:	mov	r0, #0
   11570:	movt	r1, #1
   11574:	bl	10edc <dcgettext@plt>
   11578:	mov	r1, r4
   1157c:	bl	110bc <fputs@plt>
   11580:	mov	r2, #5
   11584:	movw	r1, #19476	; 0x4c14
   11588:	mov	r0, #0
   1158c:	movt	r1, #1
   11590:	bl	10edc <dcgettext@plt>
   11594:	mov	r2, #5
   11598:	movw	r1, #19496	; 0x4c28
   1159c:	movt	r1, #1
   115a0:	mov	r4, r0
   115a4:	mov	r0, #0
   115a8:	bl	10edc <dcgettext@plt>
   115ac:	mov	r3, r4
   115b0:	movw	r2, #19544	; 0x4c58
   115b4:	movw	r1, #19512	; 0x4c38
   115b8:	movt	r2, #1
   115bc:	movt	r1, #1
   115c0:	str	r2, [sp]
   115c4:	movw	r2, #19532	; 0x4c4c
   115c8:	movt	r2, #1
   115cc:	str	r0, [sp, #4]
   115d0:	mov	r0, #1
   115d4:	bl	11020 <__printf_chk@plt>
   115d8:	mov	r2, #5
   115dc:	movw	r1, #19560	; 0x4c68
   115e0:	mov	r0, #0
   115e4:	movt	r1, #1
   115e8:	bl	10edc <dcgettext@plt>
   115ec:	movw	r2, #19588	; 0x4c84
   115f0:	movt	r2, #1
   115f4:	mov	r1, r0
   115f8:	mov	r0, #1
   115fc:	bl	11020 <__printf_chk@plt>
   11600:	mov	r0, #0
   11604:	bl	10f90 <exit@plt>
   11608:	mov	r2, #1
   1160c:	str	r2, [sp, #40]	; 0x28
   11610:	b	111b0 <strspn@plt+0xb8>
   11614:	ldr	r1, [sp, #32]
   11618:	orr	r1, r1, #8
   1161c:	str	r1, [sp, #32]
   11620:	b	111b0 <strspn@plt+0xb8>
   11624:	mov	r2, #5
   11628:	movw	r1, #19604	; 0x4c94
   1162c:	mov	r0, #0
   11630:	movt	r1, #1
   11634:	bl	10edc <dcgettext@plt>
   11638:	movw	r2, #24832	; 0x6100
   1163c:	movt	r2, #2
   11640:	movw	r3, #19616	; 0x4ca0
   11644:	movt	r3, #1
   11648:	ldr	r2, [r2]
   1164c:	mov	r1, r0
   11650:	mov	r0, #1
   11654:	bl	11020 <__printf_chk@plt>
   11658:	ldr	r5, [sp, #76]	; 0x4c
   1165c:	mov	r0, #0
   11660:	ldr	r2, [sp, #228]	; 0xe4
   11664:	ldr	r3, [r5]
   11668:	cmp	r2, r3
   1166c:	bne	11e84 <strspn@plt+0xd8c>
   11670:	add	sp, sp, #236	; 0xec
   11674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11678:	movw	r3, #24852	; 0x6114
   1167c:	movt	r3, #2
   11680:	mov	r2, #5
   11684:	movw	r1, #19636	; 0x4cb4
   11688:	mov	r0, #0
   1168c:	movt	r1, #1
   11690:	ldr	r4, [r3]
   11694:	bl	10edc <dcgettext@plt>
   11698:	movw	r3, #24832	; 0x6100
   1169c:	movt	r3, #2
   116a0:	mov	r1, #1
   116a4:	ldr	r3, [r3]
   116a8:	mov	r2, r0
   116ac:	mov	r0, r4
   116b0:	bl	11038 <__fprintf_chk@plt>
   116b4:	mov	r0, #1
   116b8:	bl	10f90 <exit@plt>
   116bc:	movw	r3, #24848	; 0x6110
   116c0:	movt	r3, #2
   116c4:	ldr	r2, [r3]
   116c8:	cmp	r2, r4
   116cc:	beq	11e44 <strspn@plt+0xd4c>
   116d0:	ldr	r0, [r5, r2, lsl #2]
   116d4:	add	r2, r2, #1
   116d8:	cmp	r4, r2
   116dc:	movw	r4, #24872	; 0x6128
   116e0:	movt	r4, #2
   116e4:	str	r2, [r3]
   116e8:	str	r4, [sp, #96]	; 0x60
   116ec:	str	r0, [r4, #4]
   116f0:	bne	11e24 <strspn@plt+0xd2c>
   116f4:	ldr	r5, [sp, #40]	; 0x28
   116f8:	mvn	r2, #1
   116fc:	mvn	r3, #0
   11700:	cmp	r5, #0
   11704:	ldrd	r4, [sp, #64]	; 0x40
   11708:	beq	11744 <strspn@plt+0x64c>
   1170c:	cmp	r5, r3
   11710:	cmpeq	r4, r2
   11714:	beq	117d4 <strspn@plt+0x6dc>
   11718:	cmp	r4, #0
   1171c:	sbcs	r5, r5, #0
   11720:	bge	11760 <strspn@plt+0x668>
   11724:	movw	r1, #19748	; 0x4d24
   11728:	movt	r1, #1
   1172c:	mov	r0, #0
   11730:	mov	r2, #5
   11734:	bl	10edc <dcgettext@plt>
   11738:	mov	r1, r0
   1173c:	mov	r0, #1
   11740:	bl	11074 <errx@plt>
   11744:	cmp	r5, r3
   11748:	cmpeq	r4, r2
   1174c:	beq	11e64 <strspn@plt+0xd6c>
   11750:	ldrd	r4, [sp, #64]	; 0x40
   11754:	cmp	r4, #1
   11758:	sbcs	r5, r5, #0
   1175c:	blt	11724 <strspn@plt+0x62c>
   11760:	cmp	r6, #0
   11764:	sbcs	r5, r7, #0
   11768:	blt	11e14 <strspn@plt+0xd1c>
   1176c:	mov	r1, #66	; 0x42
   11770:	movw	r2, #438	; 0x1b6
   11774:	bl	10f48 <open64@plt>
   11778:	subs	fp, r0, #0
   1177c:	blt	11dec <strspn@plt+0xcf4>
   11780:	ldr	r4, [sp, #40]	; 0x28
   11784:	cmp	r4, #0
   11788:	bne	118e0 <strspn@plt+0x7e8>
   1178c:	ldr	r4, [sp, #24]
   11790:	cmp	r4, #0
   11794:	ldrd	r4, [sp, #64]	; 0x40
   11798:	strd	r4, [sp]
   1179c:	beq	117c0 <strspn@plt+0x6c8>
   117a0:	mov	r2, r6
   117a4:	mov	r3, r7
   117a8:	bl	11050 <posix_fallocate64@plt>
   117ac:	cmp	r0, #0
   117b0:	blt	11dcc <strspn@plt+0xcd4>
   117b4:	mov	r0, fp
   117b8:	bl	110e0 <close@plt>
   117bc:	b	11658 <strspn@plt+0x560>
   117c0:	ldr	r1, [sp, #32]
   117c4:	mov	r2, r6
   117c8:	mov	r3, r7
   117cc:	bl	11fc4 <strspn@plt+0xecc>
   117d0:	b	117b4 <strspn@plt+0x6bc>
   117d4:	mov	r4, #0
   117d8:	mov	r5, #0
   117dc:	strd	r4, [sp, #64]	; 0x40
   117e0:	b	11760 <strspn@plt+0x668>
   117e4:	movw	r4, #24852	; 0x6114
   117e8:	movt	r4, #2
   117ec:	mov	r0, #0
   117f0:	mov	r2, #5
   117f4:	movw	r1, #18716	; 0x491c
   117f8:	movt	r1, #1
   117fc:	ldr	r6, [r4]
   11800:	mov	r8, lr
   11804:	mov	r5, r0
   11808:	bl	10edc <dcgettext@plt>
   1180c:	movw	r3, #24832	; 0x6100
   11810:	movt	r3, #2
   11814:	mov	r1, #1
   11818:	ldr	r3, [r3]
   1181c:	mov	r2, r0
   11820:	mov	r0, r6
   11824:	bl	11038 <__fprintf_chk@plt>
   11828:	ldr	r1, [r8, r5]
   1182c:	cmp	r1, #0
   11830:	beq	11884 <strspn@plt+0x78c>
   11834:	cmp	r1, #104	; 0x68
   11838:	beq	118c0 <strspn@plt+0x7c8>
   1183c:	ldr	r2, [pc, #1604]	; 11e88 <strspn@plt+0xd90>
   11840:	b	11854 <strspn@plt+0x75c>
   11844:	add	r2, r2, #16
   11848:	ldr	r0, [r2, #12]
   1184c:	cmp	r0, r1
   11850:	beq	118c8 <strspn@plt+0x7d0>
   11854:	ldr	r3, [r2, #16]
   11858:	cmp	r3, #0
   1185c:	bne	11844 <strspn@plt+0x74c>
   11860:	mov	r3, r1
   11864:	movw	r2, #19992	; 0x4e18
   11868:	ldr	r0, [r4]
   1186c:	movt	r2, #1
   11870:	mov	r1, #1
   11874:	bl	11038 <__fprintf_chk@plt>
   11878:	add	r5, r5, #4
   1187c:	cmp	r5, #60	; 0x3c
   11880:	bne	11828 <strspn@plt+0x730>
   11884:	mov	r2, #5
   11888:	movw	r1, #18732	; 0x492c
   1188c:	mov	r0, #0
   11890:	movt	r1, #1
   11894:	ldr	r5, [r4]
   11898:	bl	10edc <dcgettext@plt>
   1189c:	mov	r1, #1
   118a0:	mov	r2, r0
   118a4:	mov	r0, r5
   118a8:	bl	11038 <__fprintf_chk@plt>
   118ac:	ldr	r1, [r4]
   118b0:	mov	r0, #10
   118b4:	bl	1108c <fputc@plt>
   118b8:	mov	r0, #1
   118bc:	bl	10f90 <exit@plt>
   118c0:	movw	r3, #18676	; 0x48f4
   118c4:	movt	r3, #1
   118c8:	movw	r2, #20000	; 0x4e20
   118cc:	ldr	r0, [r4]
   118d0:	movt	r2, #1
   118d4:	mov	r1, #1
   118d8:	bl	11038 <__fprintf_chk@plt>
   118dc:	b	11878 <strspn@plt+0x780>
   118e0:	ldrd	r4, [sp, #64]	; 0x40
   118e4:	orrs	r5, r4, r5
   118e8:	beq	118fc <strspn@plt+0x804>
   118ec:	ldrd	r4, [sp, #64]	; 0x40
   118f0:	adds	r4, r4, r6
   118f4:	adc	r5, r5, r7
   118f8:	strd	r4, [sp, #64]	; 0x40
   118fc:	bl	10fcc <getpagesize@plt>
   11900:	mov	r1, fp
   11904:	add	r2, sp, #120	; 0x78
   11908:	lsl	r0, r0, #8
   1190c:	str	r0, [sp, #72]	; 0x48
   11910:	mov	r0, #3
   11914:	bl	10f18 <__fxstat64@plt>
   11918:	subs	r4, r0, #0
   1191c:	bne	11d7c <strspn@plt+0xc84>
   11920:	ldr	r5, [sp, #176]	; 0xb0
   11924:	mov	r2, r6
   11928:	str	r4, [sp]
   1192c:	mov	r0, fp
   11930:	mov	r3, r7
   11934:	str	r5, [sp, #52]	; 0x34
   11938:	bl	10f24 <lseek64@plt>
   1193c:	cmp	r0, #0
   11940:	sbcs	r2, r1, #0
   11944:	blt	11db8 <strspn@plt+0xcc0>
   11948:	ldr	r5, [sp, #52]	; 0x34
   1194c:	add	r4, r5, #4
   11950:	mov	r0, r4
   11954:	bl	10f54 <malloc@plt>
   11958:	rsbs	r3, r0, #1
   1195c:	mov	r9, r0
   11960:	movcc	r3, #0
   11964:	cmp	r4, #0
   11968:	moveq	r3, #0
   1196c:	cmp	r3, #0
   11970:	bne	11da4 <strspn@plt+0xcac>
   11974:	mov	r4, #0
   11978:	mov	r5, #0
   1197c:	strd	r4, [sp, #88]	; 0x58
   11980:	mov	sl, r6
   11984:	strd	r4, [sp, #24]
   11988:	ldr	r4, [sp, #88]	; 0x58
   1198c:	ldr	r5, [sp, #64]	; 0x40
   11990:	ldr	r0, [sp, #68]	; 0x44
   11994:	str	r4, [sp, #80]	; 0x50
   11998:	orr	r5, r5, r0
   1199c:	ldr	r4, [sp, #72]	; 0x48
   119a0:	str	r5, [sp, #100]	; 0x64
   119a4:	ldr	r5, [sp, #92]	; 0x5c
   119a8:	str	fp, [sp, #48]	; 0x30
   119ac:	mov	fp, r7
   119b0:	strd	r6, [sp, #32]
   119b4:	str	r5, [sp, #84]	; 0x54
   119b8:	mov	r5, #0
   119bc:	strd	r4, [sp, #56]	; 0x38
   119c0:	ldrd	r6, [sp, #64]	; 0x40
   119c4:	ldr	r4, [sp, #100]	; 0x64
   119c8:	cmp	sl, r6
   119cc:	sbcs	r7, fp, r7
   119d0:	movge	r3, #0
   119d4:	movlt	r3, #1
   119d8:	cmp	r4, #0
   119dc:	orreq	r3, r3, #1
   119e0:	cmp	r3, #0
   119e4:	beq	11cfc <strspn@plt+0xc04>
   119e8:	mov	r2, sl
   119ec:	mov	r3, fp
   119f0:	mov	r1, #3
   119f4:	ldr	r0, [sp, #48]	; 0x30
   119f8:	str	r1, [sp]
   119fc:	mvn	r6, #0
   11a00:	bl	10f24 <lseek64@plt>
   11a04:	mvn	r7, #0
   11a08:	mov	sl, r0
   11a0c:	mov	fp, r1
   11a10:	cmp	fp, r7
   11a14:	cmpeq	sl, r6
   11a18:	beq	11cec <strspn@plt+0xbf4>
   11a1c:	ldr	r5, [sp, #100]	; 0x64
   11a20:	ldrd	r6, [sp, #64]	; 0x40
   11a24:	adds	r4, r5, #0
   11a28:	movne	r4, #1
   11a2c:	cmp	sl, r6
   11a30:	sbcs	r7, fp, r7
   11a34:	movlt	r3, #0
   11a38:	andge	r3, r4, #1
   11a3c:	cmp	r3, #0
   11a40:	bne	11cfc <strspn@plt+0xc04>
   11a44:	mov	r3, #4
   11a48:	mov	r2, sl
   11a4c:	str	r3, [sp]
   11a50:	mov	r3, fp
   11a54:	ldr	r0, [sp, #48]	; 0x30
   11a58:	bl	10f24 <lseek64@plt>
   11a5c:	ldrd	r6, [sp, #64]	; 0x40
   11a60:	mov	r3, #2
   11a64:	mov	r2, sl
   11a68:	str	r3, [sp, #8]
   11a6c:	mov	r3, fp
   11a70:	cmp	r6, r0
   11a74:	sbcs	r7, r7, r1
   11a78:	strd	r0, [sp, #40]	; 0x28
   11a7c:	ldr	r0, [sp, #48]	; 0x30
   11a80:	movge	r4, #0
   11a84:	andlt	r4, r4, #1
   11a88:	cmp	r4, #0
   11a8c:	ldrdne	r4, [sp, #64]	; 0x40
   11a90:	strdne	r4, [sp, #40]	; 0x28
   11a94:	ldrd	r6, [sp, #40]	; 0x28
   11a98:	strd	r6, [sp]
   11a9c:	bl	10e94 <posix_fadvise64@plt>
   11aa0:	cmp	sl, r6
   11aa4:	sbcs	r7, fp, r7
   11aa8:	bge	11bd8 <strspn@plt+0xae0>
   11aac:	ldr	r0, [sp, #40]	; 0x28
   11ab0:	ldr	r1, [sp, #44]	; 0x2c
   11ab4:	orr	r8, r0, r1
   11ab8:	strd	sl, [sp]
   11abc:	mov	r1, r9
   11ac0:	ldr	r0, [sp, #48]	; 0x30
   11ac4:	ldr	r2, [sp, #52]	; 0x34
   11ac8:	bl	10f30 <pread64@plt>
   11acc:	subs	r4, r0, #0
   11ad0:	blt	11cb4 <strspn@plt+0xbbc>
   11ad4:	cmp	r8, #0
   11ad8:	cmpne	r4, #0
   11adc:	ble	11b0c <strspn@plt+0xa14>
   11ae0:	ldrd	r2, [sp, #40]	; 0x28
   11ae4:	asr	r7, r4, #31
   11ae8:	mov	r6, r4
   11aec:	strd	r6, [sp, #16]
   11af0:	subs	r2, r2, r6
   11af4:	sbc	r3, r3, r7
   11af8:	cmp	r2, sl
   11afc:	sbcs	r7, r3, fp
   11b00:	bge	11b20 <strspn@plt+0xa28>
   11b04:	ldr	r0, [sp, #40]	; 0x28
   11b08:	rsb	r4, sl, r0
   11b0c:	cmp	r4, #0
   11b10:	ble	11bd8 <strspn@plt+0xae0>
   11b14:	mov	r6, r4
   11b18:	asr	r7, r4, #31
   11b1c:	strd	r6, [sp, #16]
   11b20:	add	r3, r9, r4
   11b24:	mov	r1, #1
   11b28:	mov	r2, #4
   11b2c:	mov	r0, r3
   11b30:	bl	11008 <memset@plt>
   11b34:	mov	r2, r9
   11b38:	mov	r1, r2
   11b3c:	ldrd	r6, [sp, #16]
   11b40:	mov	r3, r0
   11b44:	ldr	r0, [r1], #4
   11b48:	cmp	r0, #0
   11b4c:	bne	11b64 <strspn@plt+0xa6c>
   11b50:	mov	r2, r1
   11b54:	mov	r1, r2
   11b58:	ldr	r0, [r1], #4
   11b5c:	cmp	r0, #0
   11b60:	beq	11b50 <strspn@plt+0xa58>
   11b64:	ldrsb	r1, [r2], #1
   11b68:	cmp	r1, #0
   11b6c:	beq	11b64 <strspn@plt+0xa6c>
   11b70:	cmp	r3, r2
   11b74:	strd	r6, [sp, #16]
   11b78:	bcs	11c14 <strspn@plt+0xb1c>
   11b7c:	ldrd	r4, [sp, #24]
   11b80:	ldrd	r6, [sp, #24]
   11b84:	orrs	r5, r4, r5
   11b88:	ldrd	r4, [sp, #16]
   11b8c:	streq	sl, [sp, #80]	; 0x50
   11b90:	streq	fp, [sp, #84]	; 0x54
   11b94:	adds	r6, r6, r4
   11b98:	adc	r7, r7, r5
   11b9c:	strd	r6, [sp, #24]
   11ba0:	ldrd	r2, [sp, #32]
   11ba4:	ldrd	r4, [sp, #56]	; 0x38
   11ba8:	subs	r2, sl, r2
   11bac:	sbc	r3, fp, r3
   11bb0:	cmp	r4, r2
   11bb4:	sbcs	r5, r5, r3
   11bb8:	blt	11c6c <strspn@plt+0xb74>
   11bbc:	ldrd	r4, [sp, #16]
   11bc0:	ldrd	r6, [sp, #40]	; 0x28
   11bc4:	adds	sl, sl, r4
   11bc8:	adc	fp, fp, r5
   11bcc:	cmp	sl, r6
   11bd0:	sbcs	r7, fp, r7
   11bd4:	blt	11ab8 <strspn@plt+0x9c0>
   11bd8:	ldrd	r4, [sp, #24]
   11bdc:	orrs	r5, r4, r5
   11be0:	beq	119c0 <strspn@plt+0x8c8>
   11be4:	ldrd	r6, [sp, #24]
   11be8:	mov	r1, #3
   11bec:	ldrd	r4, [sp, #88]	; 0x58
   11bf0:	ldr	r0, [sp, #48]	; 0x30
   11bf4:	adds	r4, r4, r6
   11bf8:	strd	r6, [sp]
   11bfc:	ldr	r2, [sp, #80]	; 0x50
   11c00:	adc	r5, r5, r7
   11c04:	ldr	r3, [sp, #84]	; 0x54
   11c08:	strd	r4, [sp, #88]	; 0x58
   11c0c:	bl	11fc4 <strspn@plt+0xecc>
   11c10:	b	119c0 <strspn@plt+0x8c8>
   11c14:	ldrd	r6, [sp, #24]
   11c18:	orrs	r7, r6, r7
   11c1c:	beq	11ba0 <strspn@plt+0xaa8>
   11c20:	ldrd	r4, [sp, #24]
   11c24:	mov	r1, #3
   11c28:	ldrd	r6, [sp, #88]	; 0x58
   11c2c:	ldr	r2, [sp, #80]	; 0x50
   11c30:	adds	r6, r6, r4
   11c34:	strd	r4, [sp]
   11c38:	ldr	r3, [sp, #84]	; 0x54
   11c3c:	adc	r7, r7, r5
   11c40:	ldr	r0, [sp, #48]	; 0x30
   11c44:	mov	r5, #0
   11c48:	strd	r6, [sp, #88]	; 0x58
   11c4c:	mov	r4, #0
   11c50:	bl	11fc4 <strspn@plt+0xecc>
   11c54:	strd	r4, [sp, #24]
   11c58:	ldr	r5, [sp, #24]
   11c5c:	ldr	r6, [sp, #28]
   11c60:	str	r5, [sp, #80]	; 0x50
   11c64:	str	r6, [sp, #84]	; 0x54
   11c68:	b	11ba0 <strspn@plt+0xaa8>
   11c6c:	ldr	r6, [sp, #32]
   11c70:	mov	r7, #4
   11c74:	ldr	r1, [sp, #72]	; 0x48
   11c78:	rsb	r0, r6, sl
   11c7c:	bl	13aa4 <strspn@plt+0x29ac>
   11c80:	ldr	r5, [sp, #72]	; 0x48
   11c84:	str	r7, [sp, #8]
   11c88:	ldrd	r2, [sp, #32]
   11c8c:	mul	r4, r5, r0
   11c90:	mov	r5, #0
   11c94:	ldr	r0, [sp, #48]	; 0x30
   11c98:	strd	r4, [sp]
   11c9c:	bl	10e94 <posix_fadvise64@plt>
   11ca0:	ldrd	r6, [sp, #32]
   11ca4:	adds	r6, r6, r4
   11ca8:	adc	r7, r7, r5
   11cac:	strd	r6, [sp, #32]
   11cb0:	b	11bbc <strspn@plt+0xac4>
   11cb4:	bl	10fd8 <__errno_location@plt>
   11cb8:	ldr	r3, [r0]
   11cbc:	cmp	r3, #0
   11cc0:	beq	11ad4 <strspn@plt+0x9dc>
   11cc4:	movw	r1, #19928	; 0x4dd8
   11cc8:	movt	r1, #1
   11ccc:	mov	r0, #0
   11cd0:	mov	r2, #5
   11cd4:	bl	10edc <dcgettext@plt>
   11cd8:	ldr	r4, [sp, #96]	; 0x60
   11cdc:	ldr	r2, [r4, #4]
   11ce0:	mov	r1, r0
   11ce4:	mov	r0, #1
   11ce8:	bl	10f0c <err@plt>
   11cec:	bl	10fd8 <__errno_location@plt>
   11cf0:	ldr	r3, [r0]
   11cf4:	cmp	r3, #6
   11cf8:	bne	11a1c <strspn@plt+0x924>
   11cfc:	mov	r0, r9
   11d00:	ldr	fp, [sp, #48]	; 0x30
   11d04:	bl	10ea0 <free@plt>
   11d08:	ldr	r7, [sp, #96]	; 0x60
   11d0c:	movw	r4, #24872	; 0x6128
   11d10:	movt	r4, #2
   11d14:	ldr	r3, [r7]
   11d18:	cmp	r3, #0
   11d1c:	beq	117b4 <strspn@plt+0x6bc>
   11d20:	ldrd	r2, [sp, #88]	; 0x58
   11d24:	mov	r0, #3
   11d28:	bl	12ea0 <strspn@plt+0x1da8>
   11d2c:	movw	r3, #24856	; 0x6118
   11d30:	movt	r3, #2
   11d34:	mov	r2, #5
   11d38:	movw	r1, #19944	; 0x4de8
   11d3c:	movt	r1, #1
   11d40:	ldr	r6, [r3]
   11d44:	mov	r5, r0
   11d48:	mov	r0, #0
   11d4c:	bl	10edc <dcgettext@plt>
   11d50:	str	r5, [sp]
   11d54:	mov	r1, #1
   11d58:	mov	r2, r0
   11d5c:	mov	r0, r6
   11d60:	ldrd	r6, [sp, #88]	; 0x58
   11d64:	strd	r6, [sp, #8]
   11d68:	ldr	r3, [r4, #4]
   11d6c:	bl	11038 <__fprintf_chk@plt>
   11d70:	mov	r0, r5
   11d74:	bl	10ea0 <free@plt>
   11d78:	b	117b4 <strspn@plt+0x6bc>
   11d7c:	mov	r2, #5
   11d80:	movw	r1, #19860	; 0x4d94
   11d84:	mov	r0, #0
   11d88:	movt	r1, #1
   11d8c:	bl	10edc <dcgettext@plt>
   11d90:	ldr	r5, [sp, #96]	; 0x60
   11d94:	ldr	r2, [r5, #4]
   11d98:	mov	r1, r0
   11d9c:	mov	r0, #1
   11da0:	bl	10f0c <err@plt>
   11da4:	movw	r1, #19900	; 0x4dbc
   11da8:	mov	r2, r4
   11dac:	mov	r0, #1
   11db0:	movt	r1, #1
   11db4:	bl	10f0c <err@plt>
   11db8:	movw	r1, #19880	; 0x4da8
   11dbc:	mov	r0, r4
   11dc0:	mov	r2, #5
   11dc4:	movt	r1, #1
   11dc8:	b	11cd4 <strspn@plt+0xbdc>
   11dcc:	ldr	r0, [sp, #40]	; 0x28
   11dd0:	movw	r1, #18644	; 0x48d4
   11dd4:	mov	r2, #5
   11dd8:	movt	r1, #1
   11ddc:	bl	10edc <dcgettext@plt>
   11de0:	mov	r1, r0
   11de4:	mov	r0, #1
   11de8:	bl	10f0c <err@plt>
   11dec:	mov	r2, #5
   11df0:	movw	r1, #19844	; 0x4d84
   11df4:	mov	r0, #0
   11df8:	movt	r1, #1
   11dfc:	bl	10edc <dcgettext@plt>
   11e00:	ldr	r6, [sp, #96]	; 0x60
   11e04:	ldr	r2, [r6, #4]
   11e08:	mov	r1, r0
   11e0c:	mov	r0, #1
   11e10:	bl	10f0c <err@plt>
   11e14:	movw	r1, #19812	; 0x4d64
   11e18:	mov	r0, #0
   11e1c:	movt	r1, #1
   11e20:	b	11730 <strspn@plt+0x638>
   11e24:	mov	r0, r8
   11e28:	movw	r1, #19716	; 0x4d04
   11e2c:	mov	r2, #5
   11e30:	movt	r1, #1
   11e34:	bl	10edc <dcgettext@plt>
   11e38:	mov	r1, r0
   11e3c:	mov	r0, #1
   11e40:	bl	11074 <errx@plt>
   11e44:	mov	r0, r8
   11e48:	movw	r1, #19692	; 0x4cec
   11e4c:	mov	r2, #5
   11e50:	movt	r1, #1
   11e54:	bl	10edc <dcgettext@plt>
   11e58:	mov	r1, r0
   11e5c:	mov	r0, #1
   11e60:	bl	11074 <errx@plt>
   11e64:	ldr	r0, [sp, #40]	; 0x28
   11e68:	movw	r1, #19780	; 0x4d44
   11e6c:	mov	r2, #5
   11e70:	movt	r1, #1
   11e74:	bl	10edc <dcgettext@plt>
   11e78:	mov	r1, r0
   11e7c:	mov	r0, #1
   11e80:	bl	11074 <errx@plt>
   11e84:	bl	10ee8 <__stack_chk_fail@plt>
   11e88:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   11e8c:	andeq	r4, r1, r4, lsl r7
   11e90:	mov	fp, #0
   11e94:	mov	lr, #0
   11e98:	pop	{r1}		; (ldr r1, [sp], #4)
   11e9c:	mov	r2, sp
   11ea0:	push	{r2}		; (str r2, [sp, #-4]!)
   11ea4:	push	{r0}		; (str r0, [sp, #-4]!)
   11ea8:	ldr	ip, [pc, #16]	; 11ec0 <strspn@plt+0xdc8>
   11eac:	push	{ip}		; (str ip, [sp, #-4]!)
   11eb0:	ldr	r0, [pc, #12]	; 11ec4 <strspn@plt+0xdcc>
   11eb4:	ldr	r3, [pc, #12]	; 11ec8 <strspn@plt+0xdd0>
   11eb8:	bl	10f60 <__libc_start_main@plt>
   11ebc:	bl	110d4 <abort@plt>
   11ec0:	muleq	r1, r4, r6
   11ec4:	andeq	r1, r1, r8, lsl #2
   11ec8:	andeq	r4, r1, r0, lsr r6
   11ecc:	ldr	r3, [pc, #20]	; 11ee8 <strspn@plt+0xdf0>
   11ed0:	ldr	r2, [pc, #20]	; 11eec <strspn@plt+0xdf4>
   11ed4:	add	r3, pc, r3
   11ed8:	ldr	r2, [r3, r2]
   11edc:	cmp	r2, #0
   11ee0:	bxeq	lr
   11ee4:	b	10f6c <__gmon_start__@plt>
   11ee8:	andeq	r4, r1, r4, lsr #2
   11eec:	strdeq	r0, [r0], -r4
   11ef0:	push	{r3, lr}
   11ef4:	movw	r0, #24832	; 0x6100
   11ef8:	ldr	r3, [pc, #36]	; 11f24 <strspn@plt+0xe2c>
   11efc:	movt	r0, #2
   11f00:	rsb	r3, r0, r3
   11f04:	cmp	r3, #6
   11f08:	popls	{r3, pc}
   11f0c:	movw	r3, #0
   11f10:	movt	r3, #0
   11f14:	cmp	r3, #0
   11f18:	popeq	{r3, pc}
   11f1c:	blx	r3
   11f20:	pop	{r3, pc}
   11f24:	andeq	r6, r2, r3, lsl #2
   11f28:	push	{r3, lr}
   11f2c:	movw	r0, #24832	; 0x6100
   11f30:	movw	r3, #24832	; 0x6100
   11f34:	movt	r0, #2
   11f38:	movt	r3, #2
   11f3c:	rsb	r3, r0, r3
   11f40:	asr	r3, r3, #2
   11f44:	add	r3, r3, r3, lsr #31
   11f48:	asrs	r1, r3, #1
   11f4c:	popeq	{r3, pc}
   11f50:	movw	r2, #0
   11f54:	movt	r2, #0
   11f58:	cmp	r2, #0
   11f5c:	popeq	{r3, pc}
   11f60:	blx	r2
   11f64:	pop	{r3, pc}
   11f68:	push	{r4, lr}
   11f6c:	movw	r4, #24868	; 0x6124
   11f70:	movt	r4, #2
   11f74:	ldrb	r3, [r4]
   11f78:	cmp	r3, #0
   11f7c:	popne	{r4, pc}
   11f80:	bl	11ef0 <strspn@plt+0xdf8>
   11f84:	mov	r3, #1
   11f88:	strb	r3, [r4]
   11f8c:	pop	{r4, pc}
   11f90:	movw	r0, #24324	; 0x5f04
   11f94:	movt	r0, #2
   11f98:	push	{r3, lr}
   11f9c:	ldr	r3, [r0]
   11fa0:	cmp	r3, #0
   11fa4:	beq	11fbc <strspn@plt+0xec4>
   11fa8:	movw	r3, #0
   11fac:	movt	r3, #0
   11fb0:	cmp	r3, #0
   11fb4:	beq	11fbc <strspn@plt+0xec4>
   11fb8:	blx	r3
   11fbc:	pop	{r3, lr}
   11fc0:	b	11f28 <strspn@plt+0xe30>
   11fc4:	push	{r4, r5, r6, lr}
   11fc8:	sub	sp, sp, #8
   11fcc:	mov	r6, r1
   11fd0:	ldrd	r4, [sp, #24]
   11fd4:	strd	r4, [sp]
   11fd8:	bl	11068 <fallocate64@plt>
   11fdc:	cmp	r0, #0
   11fe0:	blt	11fec <strspn@plt+0xef4>
   11fe4:	add	sp, sp, #8
   11fe8:	pop	{r4, r5, r6, pc}
   11fec:	tst	r6, #1
   11ff0:	beq	12004 <strspn@plt+0xf0c>
   11ff4:	bl	10fd8 <__errno_location@plt>
   11ff8:	ldr	r3, [r0]
   11ffc:	cmp	r3, #95	; 0x5f
   12000:	beq	12024 <strspn@plt+0xf2c>
   12004:	movw	r1, #18644	; 0x48d4
   12008:	mov	r0, #0
   1200c:	movt	r1, #1
   12010:	mov	r2, #5
   12014:	bl	10edc <dcgettext@plt>
   12018:	mov	r1, r0
   1201c:	mov	r0, #1
   12020:	bl	10f0c <err@plt>
   12024:	movw	r1, #18596	; 0x48a4
   12028:	mov	r0, #0
   1202c:	movt	r1, #1
   12030:	mov	r2, #5
   12034:	bl	10edc <dcgettext@plt>
   12038:	mov	r1, r0
   1203c:	mov	r0, #1
   12040:	bl	11074 <errx@plt>
   12044:	movw	r3, #24856	; 0x6118
   12048:	movt	r3, #2
   1204c:	push	{r4, r5, r6, lr}
   12050:	ldr	r4, [r3]
   12054:	mov	r0, r4
   12058:	bl	10f3c <__fpending@plt>
   1205c:	mov	r6, r0
   12060:	mov	r0, r4
   12064:	bl	10eac <ferror@plt>
   12068:	mov	r5, r0
   1206c:	mov	r0, r4
   12070:	bl	11044 <fclose@plt>
   12074:	adds	r4, r0, #0
   12078:	movne	r4, #1
   1207c:	cmp	r5, #0
   12080:	bne	120f8 <strspn@plt+0x1000>
   12084:	cmp	r4, #0
   12088:	beq	120a4 <strspn@plt+0xfac>
   1208c:	cmp	r6, #0
   12090:	beq	12148 <strspn@plt+0x1050>
   12094:	bl	10fd8 <__errno_location@plt>
   12098:	ldr	r3, [r0]
   1209c:	cmp	r3, #32
   120a0:	bne	1215c <strspn@plt+0x1064>
   120a4:	movw	r3, #24852	; 0x6114
   120a8:	movt	r3, #2
   120ac:	ldr	r4, [r3]
   120b0:	mov	r0, r4
   120b4:	bl	10f3c <__fpending@plt>
   120b8:	mov	r6, r0
   120bc:	mov	r0, r4
   120c0:	bl	10eac <ferror@plt>
   120c4:	mov	r5, r0
   120c8:	mov	r0, r4
   120cc:	bl	11044 <fclose@plt>
   120d0:	adds	r4, r0, #0
   120d4:	movne	r4, #1
   120d8:	cmp	r5, #0
   120dc:	beq	12124 <strspn@plt+0x102c>
   120e0:	cmp	r4, #0
   120e4:	bne	120f0 <strspn@plt+0xff8>
   120e8:	bl	10fd8 <__errno_location@plt>
   120ec:	str	r4, [r0]
   120f0:	mov	r0, #1
   120f4:	bl	10eb8 <_exit@plt>
   120f8:	cmp	r4, #0
   120fc:	bne	12094 <strspn@plt+0xf9c>
   12100:	bl	10fd8 <__errno_location@plt>
   12104:	str	r4, [r0]
   12108:	mov	r2, #5
   1210c:	movw	r1, #18664	; 0x48e8
   12110:	mov	r0, #0
   12114:	movt	r1, #1
   12118:	bl	10edc <dcgettext@plt>
   1211c:	bl	10fc0 <warnx@plt>
   12120:	b	120f0 <strspn@plt+0xff8>
   12124:	cmp	r4, #0
   12128:	popeq	{r4, r5, r6, pc}
   1212c:	cmp	r6, #0
   12130:	bne	120f0 <strspn@plt+0xff8>
   12134:	bl	10fd8 <__errno_location@plt>
   12138:	ldr	r3, [r0]
   1213c:	cmp	r3, #9
   12140:	bne	120f0 <strspn@plt+0xff8>
   12144:	pop	{r4, r5, r6, pc}
   12148:	bl	10fd8 <__errno_location@plt>
   1214c:	ldr	r3, [r0]
   12150:	cmp	r3, #9
   12154:	bne	1209c <strspn@plt+0xfa4>
   12158:	b	120a4 <strspn@plt+0xfac>
   1215c:	cmp	r3, #0
   12160:	beq	12108 <strspn@plt+0x1010>
   12164:	mov	r2, #5
   12168:	movw	r1, #18664	; 0x48e8
   1216c:	mov	r0, #0
   12170:	movt	r1, #1
   12174:	bl	10edc <dcgettext@plt>
   12178:	bl	11080 <warn@plt>
   1217c:	b	120f0 <strspn@plt+0xff8>
   12180:	cmp	r0, #0
   12184:	mov	r3, #0
   12188:	str	r3, [r1]
   1218c:	bxeq	lr
   12190:	ldrb	r2, [r0]
   12194:	cmp	r2, #47	; 0x2f
   12198:	bne	121e0 <strspn@plt+0x10e8>
   1219c:	ldrsb	r3, [r0, #1]
   121a0:	cmp	r3, #47	; 0x2f
   121a4:	bne	121e8 <strspn@plt+0x10f0>
   121a8:	mov	r3, r0
   121ac:	b	121cc <strspn@plt+0x10d4>
   121b0:	ldrb	r2, [r3, #1]
   121b4:	mov	r3, r0
   121b8:	cmp	r2, #47	; 0x2f
   121bc:	bne	121e0 <strspn@plt+0x10e8>
   121c0:	ldrsb	r2, [r0, #1]
   121c4:	cmp	r2, #47	; 0x2f
   121c8:	bne	121e8 <strspn@plt+0x10f0>
   121cc:	cmn	r3, #1
   121d0:	add	r0, r0, #1
   121d4:	bne	121b0 <strspn@plt+0x10b8>
   121d8:	mov	r0, #0
   121dc:	bx	lr
   121e0:	cmp	r2, #0
   121e4:	beq	121d8 <strspn@plt+0x10e0>
   121e8:	mov	r3, #1
   121ec:	str	r3, [r1]
   121f0:	ldrsb	r3, [r0, #1]
   121f4:	cmp	r3, #47	; 0x2f
   121f8:	cmpne	r3, #0
   121fc:	bxeq	lr
   12200:	mov	r3, #2
   12204:	str	r3, [r1]
   12208:	ldrb	r2, [r0, r3]
   1220c:	add	r3, r3, #1
   12210:	cmp	r2, #47	; 0x2f
   12214:	cmpne	r2, #0
   12218:	bne	12204 <strspn@plt+0x110c>
   1221c:	bx	lr
   12220:	push	{r3, r4, r5, r6, r7, lr}
   12224:	mov	r7, r1
   12228:	ldrb	r3, [r0]
   1222c:	cmp	r3, #0
   12230:	beq	122a8 <strspn@plt+0x11b0>
   12234:	mov	r4, #0
   12238:	mov	r5, r0
   1223c:	mov	r6, r4
   12240:	b	12270 <strspn@plt+0x1178>
   12244:	cmp	r3, #92	; 0x5c
   12248:	mov	r0, r7
   1224c:	mov	r1, r3
   12250:	beq	12298 <strspn@plt+0x11a0>
   12254:	bl	10fb4 <strchr@plt>
   12258:	cmp	r0, #0
   1225c:	bne	122a0 <strspn@plt+0x11a8>
   12260:	ldrb	r3, [r5, #1]!
   12264:	add	r4, r4, #1
   12268:	cmp	r3, #0
   1226c:	beq	12290 <strspn@plt+0x1198>
   12270:	cmp	r6, #0
   12274:	sxtb	r3, r3
   12278:	beq	12244 <strspn@plt+0x114c>
   1227c:	ldrb	r3, [r5, #1]!
   12280:	mov	r6, #0
   12284:	add	r4, r4, #1
   12288:	cmp	r3, #0
   1228c:	bne	12270 <strspn@plt+0x1178>
   12290:	rsb	r0, r6, r4
   12294:	pop	{r3, r4, r5, r6, r7, pc}
   12298:	mov	r6, #1
   1229c:	b	12260 <strspn@plt+0x1168>
   122a0:	mov	r0, r4
   122a4:	pop	{r3, r4, r5, r6, r7, pc}
   122a8:	mov	r0, r3
   122ac:	pop	{r3, r4, r5, r6, r7, pc}
   122b0:	ldr	r3, [pc, #224]	; 12398 <strspn@plt+0x12a0>
   122b4:	push	{r4, r5, r6, r7, r8, r9, lr}
   122b8:	mov	r6, r0
   122bc:	ldr	r0, [pc, #216]	; 1239c <strspn@plt+0x12a4>
   122c0:	add	r3, pc, r3
   122c4:	sub	sp, sp, #12
   122c8:	mov	r4, #0
   122cc:	mov	r9, r1
   122d0:	mov	r5, r2
   122d4:	ldr	r8, [r3, r0]
   122d8:	str	r4, [sp]
   122dc:	ldr	r3, [r8]
   122e0:	str	r3, [sp, #4]
   122e4:	bl	10fd8 <__errno_location@plt>
   122e8:	cmp	r6, r4
   122ec:	mov	r7, r0
   122f0:	str	r4, [r0]
   122f4:	beq	12304 <strspn@plt+0x120c>
   122f8:	ldrsb	r3, [r6]
   122fc:	cmp	r3, r4
   12300:	bne	1231c <strspn@plt+0x1224>
   12304:	ldr	r1, [pc, #148]	; 123a0 <strspn@plt+0x12a8>
   12308:	mov	r2, r9
   1230c:	mov	r3, r6
   12310:	mov	r0, #1
   12314:	add	r1, pc, r1
   12318:	bl	11074 <errx@plt>
   1231c:	mov	r3, r4
   12320:	mov	r2, r5
   12324:	mov	r0, r6
   12328:	mov	r1, sp
   1232c:	bl	10ed0 <__strtoull_internal@plt>
   12330:	ldr	r3, [r7]
   12334:	cmp	r3, r4
   12338:	bne	12374 <strspn@plt+0x127c>
   1233c:	ldr	r3, [sp]
   12340:	cmp	r6, r3
   12344:	beq	12304 <strspn@plt+0x120c>
   12348:	cmp	r3, r4
   1234c:	beq	1235c <strspn@plt+0x1264>
   12350:	ldrsb	r3, [r3]
   12354:	cmp	r3, r4
   12358:	bne	12304 <strspn@plt+0x120c>
   1235c:	ldr	r2, [sp, #4]
   12360:	ldr	r3, [r8]
   12364:	cmp	r2, r3
   12368:	bne	12394 <strspn@plt+0x129c>
   1236c:	add	sp, sp, #12
   12370:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12374:	cmp	r3, #34	; 0x22
   12378:	bne	12304 <strspn@plt+0x120c>
   1237c:	ldr	r1, [pc, #32]	; 123a4 <strspn@plt+0x12ac>
   12380:	mov	r2, r9
   12384:	mov	r3, r6
   12388:	mov	r0, #1
   1238c:	add	r1, pc, r1
   12390:	bl	10f0c <err@plt>
   12394:	bl	10ee8 <__stack_chk_fail@plt>
   12398:	andeq	r3, r1, r8, lsr sp
   1239c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   123a0:	andeq	r2, r0, ip, ror fp
   123a4:	andeq	r2, r0, r4, lsl #22
   123a8:	ldr	r3, [pc, #596]	; 12604 <strspn@plt+0x150c>
   123ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123b0:	add	r3, pc, r3
   123b4:	subs	r6, r0, #0
   123b8:	ldr	r0, [pc, #584]	; 12608 <strspn@plt+0x1510>
   123bc:	mov	r8, r1
   123c0:	mov	r1, r3
   123c4:	sub	sp, sp, #20
   123c8:	mov	r9, r2
   123cc:	ldr	sl, [r1, r0]
   123d0:	mov	r2, #0
   123d4:	mov	r3, #0
   123d8:	ldr	r1, [sl]
   123dc:	strd	r2, [r8]
   123e0:	str	r1, [sp, #12]
   123e4:	beq	124cc <strspn@plt+0x13d4>
   123e8:	ldrb	r5, [r6]
   123ec:	cmp	r5, #0
   123f0:	beq	124cc <strspn@plt+0x13d4>
   123f4:	str	r6, [sp, #8]
   123f8:	bl	10f84 <__ctype_b_loc@plt>
   123fc:	mov	r3, r6
   12400:	ldr	r1, [r0]
   12404:	b	12418 <strspn@plt+0x1320>
   12408:	add	r2, r3, #1
   1240c:	str	r2, [sp, #8]
   12410:	ldrb	r5, [r3, #1]
   12414:	mov	r3, r2
   12418:	lsl	r2, r5, #1
   1241c:	ldrh	r4, [r1, r2]
   12420:	and	r4, r4, #8192	; 0x2000
   12424:	uxth	r4, r4
   12428:	cmp	r4, #0
   1242c:	bne	12408 <strspn@plt+0x1310>
   12430:	cmp	r5, #45	; 0x2d
   12434:	beq	124cc <strspn@plt+0x13d4>
   12438:	add	r5, sp, #16
   1243c:	str	r4, [r5, #-8]!
   12440:	bl	10fd8 <__errno_location@plt>
   12444:	mov	r2, r4
   12448:	mov	r1, r5
   1244c:	mov	r3, r4
   12450:	mov	r7, r0
   12454:	mov	r0, r6
   12458:	str	r4, [r7]
   1245c:	bl	10ed0 <__strtoull_internal@plt>
   12460:	mov	r5, r1
   12464:	ldr	r1, [sp, #8]
   12468:	mov	r4, r0
   1246c:	cmp	r1, r6
   12470:	beq	124cc <strspn@plt+0x13d4>
   12474:	ldr	r3, [r7]
   12478:	cmp	r3, #0
   1247c:	bne	124b0 <strspn@plt+0x13b8>
   12480:	cmp	r1, #0
   12484:	beq	125b4 <strspn@plt+0x14bc>
   12488:	ldrb	r0, [r1]
   1248c:	cmp	r0, #0
   12490:	bne	124d4 <strspn@plt+0x13dc>
   12494:	strd	r4, [r8]
   12498:	ldr	r2, [sp, #12]
   1249c:	ldr	r3, [sl]
   124a0:	cmp	r2, r3
   124a4:	bne	12600 <strspn@plt+0x1508>
   124a8:	add	sp, sp, #20
   124ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124b0:	subs	r2, r4, #1
   124b4:	mvn	r6, #2
   124b8:	sbc	r3, r5, #0
   124bc:	mvn	r7, #0
   124c0:	cmp	r3, r7
   124c4:	cmpeq	r2, r6
   124c8:	bls	12480 <strspn@plt+0x1388>
   124cc:	mvn	r0, #0
   124d0:	b	12498 <strspn@plt+0x13a0>
   124d4:	ldrb	r2, [r1, #1]
   124d8:	sxtb	r3, r2
   124dc:	cmp	r3, #105	; 0x69
   124e0:	beq	125bc <strspn@plt+0x14c4>
   124e4:	cmp	r3, #66	; 0x42
   124e8:	beq	12598 <strspn@plt+0x14a0>
   124ec:	cmp	r2, #0
   124f0:	bne	124cc <strspn@plt+0x13d4>
   124f4:	mov	r6, #1024	; 0x400
   124f8:	ldr	r7, [pc, #268]	; 1260c <strspn@plt+0x1514>
   124fc:	sxtb	r3, r0
   12500:	str	r3, [sp, #4]
   12504:	add	r7, pc, r7
   12508:	mov	r1, r3
   1250c:	mov	r0, r7
   12510:	bl	10fb4 <strchr@plt>
   12514:	ldr	r3, [sp, #4]
   12518:	cmp	r0, #0
   1251c:	rsbne	fp, r7, r0
   12520:	addne	fp, fp, #1
   12524:	beq	125d8 <strspn@plt+0x14e0>
   12528:	cmp	fp, #0
   1252c:	beq	12588 <strspn@plt+0x1490>
   12530:	asr	r7, r6, #31
   12534:	mvn	r0, #0
   12538:	mvn	r1, #0
   1253c:	mov	r2, r6
   12540:	mov	r3, r7
   12544:	bl	13cb0 <strspn@plt+0x2bb8>
   12548:	cmp	r1, r5
   1254c:	cmpeq	r0, r4
   12550:	bcc	125ac <strspn@plt+0x14b4>
   12554:	sub	ip, fp, #1
   12558:	mov	r3, #0
   1255c:	b	12570 <strspn@plt+0x1478>
   12560:	cmp	r1, r5
   12564:	cmpeq	r0, r4
   12568:	add	r3, r3, #1
   1256c:	bcc	125ac <strspn@plt+0x14b4>
   12570:	mul	r2, r4, r7
   12574:	cmp	r3, ip
   12578:	mla	r2, r6, r5, r2
   1257c:	umull	r4, r5, r4, r6
   12580:	add	r5, r2, r5
   12584:	bne	12560 <strspn@plt+0x1468>
   12588:	mov	r0, #0
   1258c:	cmp	r9, #0
   12590:	strne	fp, [r9]
   12594:	b	12494 <strspn@plt+0x139c>
   12598:	ldrsb	r3, [r1, #2]
   1259c:	cmp	r3, #0
   125a0:	bne	124cc <strspn@plt+0x13d4>
   125a4:	mov	r6, #1000	; 0x3e8
   125a8:	b	124f8 <strspn@plt+0x1400>
   125ac:	mvn	r0, #1
   125b0:	b	1258c <strspn@plt+0x1494>
   125b4:	mov	r0, r1
   125b8:	b	12494 <strspn@plt+0x139c>
   125bc:	ldrsb	r3, [r1, #2]
   125c0:	cmp	r3, #66	; 0x42
   125c4:	bne	124cc <strspn@plt+0x13d4>
   125c8:	ldrsb	r3, [r1, #3]
   125cc:	cmp	r3, #0
   125d0:	beq	124f4 <strspn@plt+0x13fc>
   125d4:	b	124cc <strspn@plt+0x13d4>
   125d8:	ldr	r7, [pc, #48]	; 12610 <strspn@plt+0x1518>
   125dc:	mov	r1, r3
   125e0:	add	r7, pc, r7
   125e4:	mov	r0, r7
   125e8:	bl	10fb4 <strchr@plt>
   125ec:	cmp	r0, #0
   125f0:	beq	124cc <strspn@plt+0x13d4>
   125f4:	rsb	r7, r7, r0
   125f8:	add	fp, r7, #1
   125fc:	b	12528 <strspn@plt+0x1430>
   12600:	bl	10ee8 <__stack_chk_fail@plt>
   12604:	andeq	r3, r1, r8, asr #24
   12608:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1260c:	muleq	r0, r8, r9
   12610:	andeq	r2, r0, r8, asr #17
   12614:	mov	r2, #0
   12618:	b	123a8 <strspn@plt+0x12b0>
   1261c:	push	{r4, r5, r6, lr}
   12620:	subs	r6, r0, #0
   12624:	beq	126a8 <strspn@plt+0x15b0>
   12628:	ldrb	r4, [r6]
   1262c:	cmp	r4, #0
   12630:	beq	126b0 <strspn@plt+0x15b8>
   12634:	bl	10f84 <__ctype_b_loc@plt>
   12638:	mov	r3, r6
   1263c:	ldr	r5, [r0]
   12640:	b	1265c <strspn@plt+0x1564>
   12644:	cmn	r3, #1
   12648:	beq	12698 <strspn@plt+0x15a0>
   1264c:	ldrb	r4, [r3, #1]
   12650:	mov	r3, r1
   12654:	cmp	r4, #0
   12658:	beq	126a0 <strspn@plt+0x15a8>
   1265c:	lsl	r4, r4, #1
   12660:	mov	ip, r3
   12664:	add	r1, r3, #1
   12668:	ldrh	r2, [r5, r4]
   1266c:	tst	r2, #2048	; 0x800
   12670:	bne	12644 <strspn@plt+0x154c>
   12674:	cmp	ip, #0
   12678:	cmpne	ip, r6
   1267c:	movls	r0, #0
   12680:	movhi	r0, #1
   12684:	popls	{r4, r5, r6, pc}
   12688:	ldrsb	r0, [ip]
   1268c:	rsbs	r0, r0, #1
   12690:	movcc	r0, #0
   12694:	pop	{r4, r5, r6, pc}
   12698:	mov	r0, #0
   1269c:	pop	{r4, r5, r6, pc}
   126a0:	mov	ip, r1
   126a4:	b	12674 <strspn@plt+0x157c>
   126a8:	mov	r0, r6
   126ac:	pop	{r4, r5, r6, pc}
   126b0:	mov	r0, r4
   126b4:	pop	{r4, r5, r6, pc}
   126b8:	cmp	r1, #0
   126bc:	push	{r4, r5}
   126c0:	sub	r4, r1, #1
   126c4:	beq	12730 <strspn@plt+0x1638>
   126c8:	ldrb	r1, [r0]
   126cc:	cmp	r1, #0
   126d0:	beq	12730 <strspn@plt+0x1638>
   126d4:	sxtb	r1, r1
   126d8:	sxtb	r2, r2
   126dc:	cmp	r1, r2
   126e0:	beq	1271c <strspn@plt+0x1624>
   126e4:	add	r1, r0, #1
   126e8:	mov	r3, #0
   126ec:	b	12708 <strspn@plt+0x1610>
   126f0:	ldrb	r0, [r1], #1
   126f4:	cmp	r0, #0
   126f8:	sxtb	ip, r0
   126fc:	beq	1271c <strspn@plt+0x1624>
   12700:	cmp	ip, r2
   12704:	beq	12724 <strspn@plt+0x162c>
   12708:	cmp	r3, r4
   1270c:	mov	r5, r1
   12710:	add	r3, r3, #1
   12714:	bne	126f0 <strspn@plt+0x15f8>
   12718:	mov	r0, #0
   1271c:	pop	{r4, r5}
   12720:	bx	lr
   12724:	mov	r0, r5
   12728:	pop	{r4, r5}
   1272c:	bx	lr
   12730:	mov	r0, r1
   12734:	b	1271c <strspn@plt+0x1624>
   12738:	ldr	r3, [pc, #228]	; 12824 <strspn@plt+0x172c>
   1273c:	ldr	r2, [pc, #228]	; 12828 <strspn@plt+0x1730>
   12740:	add	r3, pc, r3
   12744:	push	{r4, r6, r7, r8, r9, lr}
   12748:	subs	r6, r0, #0
   1274c:	ldr	r7, [r3, r2]
   12750:	mov	r0, r3
   12754:	sub	sp, sp, #8
   12758:	mov	r4, #0
   1275c:	mov	r8, r1
   12760:	ldr	r3, [r7]
   12764:	str	r4, [sp]
   12768:	str	r3, [sp, #4]
   1276c:	beq	1277c <strspn@plt+0x1684>
   12770:	ldrsb	r3, [r6]
   12774:	cmp	r3, r4
   12778:	bne	127a4 <strspn@plt+0x16ac>
   1277c:	bl	10fd8 <__errno_location@plt>
   12780:	ldr	r3, [r0]
   12784:	cmp	r3, #0
   12788:	bne	127d0 <strspn@plt+0x16d8>
   1278c:	ldr	r1, [pc, #152]	; 1282c <strspn@plt+0x1734>
   12790:	mov	r2, r8
   12794:	mov	r3, r6
   12798:	mov	r0, #1
   1279c:	add	r1, pc, r1
   127a0:	bl	11074 <errx@plt>
   127a4:	bl	10fd8 <__errno_location@plt>
   127a8:	mov	r3, r4
   127ac:	mov	r1, sp
   127b0:	mov	r2, #10
   127b4:	mov	r9, r0
   127b8:	str	r4, [r0]
   127bc:	mov	r0, r6
   127c0:	bl	110a4 <__strtoll_internal@plt>
   127c4:	ldr	r3, [r9]
   127c8:	cmp	r3, r4
   127cc:	beq	127e8 <strspn@plt+0x16f0>
   127d0:	ldr	r1, [pc, #88]	; 12830 <strspn@plt+0x1738>
   127d4:	mov	r2, r8
   127d8:	mov	r3, r6
   127dc:	mov	r0, #1
   127e0:	add	r1, pc, r1
   127e4:	bl	10f0c <err@plt>
   127e8:	ldr	r3, [sp]
   127ec:	cmp	r6, r3
   127f0:	beq	1278c <strspn@plt+0x1694>
   127f4:	cmp	r3, #0
   127f8:	beq	12808 <strspn@plt+0x1710>
   127fc:	ldrsb	r3, [r3]
   12800:	cmp	r3, #0
   12804:	bne	1278c <strspn@plt+0x1694>
   12808:	ldr	r2, [sp, #4]
   1280c:	ldr	r3, [r7]
   12810:	cmp	r2, r3
   12814:	bne	12820 <strspn@plt+0x1728>
   12818:	add	sp, sp, #8
   1281c:	pop	{r4, r6, r7, r8, r9, pc}
   12820:	bl	10ee8 <__stack_chk_fail@plt>
   12824:			; <UNDEFINED> instruction: 0x000138b8
   12828:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1282c:	strdeq	r2, [r0], -r4
   12830:			; <UNDEFINED> instruction: 0x000026b0
   12834:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12838:	mov	r8, r0
   1283c:	mov	r9, r1
   12840:	bl	12738 <strspn@plt+0x1640>
   12844:	mvn	r4, #0
   12848:	mov	r5, #0
   1284c:	adds	r6, r0, #-2147483648	; 0x80000000
   12850:	adc	r7, r1, #0
   12854:	cmp	r7, r5
   12858:	cmpeq	r6, r4
   1285c:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   12860:	ldr	r1, [pc, #16]	; 12878 <strspn@plt+0x1780>
   12864:	mov	r2, r9
   12868:	mov	r3, r8
   1286c:	mov	r0, #1
   12870:	add	r1, pc, r1
   12874:	bl	11074 <errx@plt>
   12878:	andeq	r2, r0, r0, lsr #12
   1287c:	push	{r3, r4, r5, lr}
   12880:	mov	r4, r0
   12884:	mov	r5, r1
   12888:	bl	12834 <strspn@plt+0x173c>
   1288c:	add	ip, r0, #32768	; 0x8000
   12890:	cmp	ip, #65536	; 0x10000
   12894:	bcs	128a0 <strspn@plt+0x17a8>
   12898:	sxth	r0, r0
   1289c:	pop	{r3, r4, r5, pc}
   128a0:	ldr	r1, [pc, #16]	; 128b8 <strspn@plt+0x17c0>
   128a4:	mov	r2, r5
   128a8:	mov	r3, r4
   128ac:	mov	r0, #1
   128b0:	add	r1, pc, r1
   128b4:	bl	11074 <errx@plt>
   128b8:	andeq	r2, r0, r0, ror #11
   128bc:	mov	r2, #10
   128c0:	b	122b0 <strspn@plt+0x11b8>
   128c4:	push	{r3, r4, r5, r6, r7, lr}
   128c8:	mov	r6, r0
   128cc:	mov	r7, r1
   128d0:	bl	128bc <strspn@plt+0x17c4>
   128d4:	mvn	r4, #0
   128d8:	mov	r5, #0
   128dc:	cmp	r1, r5
   128e0:	cmpeq	r0, r4
   128e4:	popls	{r3, r4, r5, r6, r7, pc}
   128e8:	ldr	r1, [pc, #16]	; 12900 <strspn@plt+0x1808>
   128ec:	mov	r2, r7
   128f0:	mov	r3, r6
   128f4:	mov	r0, #1
   128f8:	add	r1, pc, r1
   128fc:	bl	11074 <errx@plt>
   12900:	muleq	r0, r8, r5
   12904:	push	{r3, r4, r5, lr}
   12908:	mov	r4, r0
   1290c:	mov	r5, r1
   12910:	bl	128c4 <strspn@plt+0x17cc>
   12914:	cmp	r0, #65536	; 0x10000
   12918:	bcs	12924 <strspn@plt+0x182c>
   1291c:	uxth	r0, r0
   12920:	pop	{r3, r4, r5, pc}
   12924:	ldr	r1, [pc, #16]	; 1293c <strspn@plt+0x1844>
   12928:	mov	r2, r5
   1292c:	mov	r3, r4
   12930:	mov	r0, #1
   12934:	add	r1, pc, r1
   12938:	bl	11074 <errx@plt>
   1293c:	andeq	r2, r0, ip, asr r5
   12940:	mov	r2, #16
   12944:	b	122b0 <strspn@plt+0x11b8>
   12948:	ldr	r3, [pc, #216]	; 12a28 <strspn@plt+0x1930>
   1294c:	push	{r4, r5, r6, r7, r8, lr}
   12950:	subs	r4, r0, #0
   12954:	ldr	r0, [pc, #208]	; 12a2c <strspn@plt+0x1934>
   12958:	add	r3, pc, r3
   1295c:	sub	sp, sp, #8
   12960:	mov	r5, #0
   12964:	mov	r7, r1
   12968:	ldr	r6, [r3, r0]
   1296c:	str	r5, [sp]
   12970:	ldr	r3, [r6]
   12974:	str	r3, [sp, #4]
   12978:	beq	12988 <strspn@plt+0x1890>
   1297c:	ldrsb	r3, [r4]
   12980:	cmp	r3, r5
   12984:	bne	129b0 <strspn@plt+0x18b8>
   12988:	bl	10fd8 <__errno_location@plt>
   1298c:	ldr	r3, [r0]
   12990:	cmp	r3, #0
   12994:	bne	129d4 <strspn@plt+0x18dc>
   12998:	ldr	r1, [pc, #144]	; 12a30 <strspn@plt+0x1938>
   1299c:	mov	r2, r7
   129a0:	mov	r3, r4
   129a4:	mov	r0, #1
   129a8:	add	r1, pc, r1
   129ac:	bl	11074 <errx@plt>
   129b0:	bl	10fd8 <__errno_location@plt>
   129b4:	mov	r1, sp
   129b8:	mov	r8, r0
   129bc:	str	r5, [r0]
   129c0:	mov	r0, r4
   129c4:	bl	1102c <strtod@plt>
   129c8:	ldr	r3, [r8]
   129cc:	cmp	r3, r5
   129d0:	beq	129ec <strspn@plt+0x18f4>
   129d4:	ldr	r1, [pc, #88]	; 12a34 <strspn@plt+0x193c>
   129d8:	mov	r2, r7
   129dc:	mov	r3, r4
   129e0:	mov	r0, #1
   129e4:	add	r1, pc, r1
   129e8:	bl	10f0c <err@plt>
   129ec:	ldr	r3, [sp]
   129f0:	cmp	r4, r3
   129f4:	beq	12998 <strspn@plt+0x18a0>
   129f8:	cmp	r3, #0
   129fc:	beq	12a0c <strspn@plt+0x1914>
   12a00:	ldrsb	r3, [r3]
   12a04:	cmp	r3, #0
   12a08:	bne	12998 <strspn@plt+0x18a0>
   12a0c:	ldr	r2, [sp, #4]
   12a10:	ldr	r3, [r6]
   12a14:	cmp	r2, r3
   12a18:	bne	12a24 <strspn@plt+0x192c>
   12a1c:	add	sp, sp, #8
   12a20:	pop	{r4, r5, r6, r7, r8, pc}
   12a24:	bl	10ee8 <__stack_chk_fail@plt>
   12a28:	andeq	r3, r1, r0, lsr #13
   12a2c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12a30:	andeq	r2, r0, r8, ror #9
   12a34:	andeq	r2, r0, ip, lsr #9
   12a38:	ldr	r3, [pc, #220]	; 12b1c <strspn@plt+0x1a24>
   12a3c:	push	{r4, r5, r6, r7, r8, lr}
   12a40:	subs	r4, r0, #0
   12a44:	ldr	r0, [pc, #212]	; 12b20 <strspn@plt+0x1a28>
   12a48:	add	r3, pc, r3
   12a4c:	sub	sp, sp, #8
   12a50:	mov	r5, #0
   12a54:	mov	r7, r1
   12a58:	ldr	r6, [r3, r0]
   12a5c:	str	r5, [sp]
   12a60:	ldr	r3, [r6]
   12a64:	str	r3, [sp, #4]
   12a68:	beq	12a78 <strspn@plt+0x1980>
   12a6c:	ldrsb	r3, [r4]
   12a70:	cmp	r3, r5
   12a74:	bne	12aa0 <strspn@plt+0x19a8>
   12a78:	bl	10fd8 <__errno_location@plt>
   12a7c:	ldr	r3, [r0]
   12a80:	cmp	r3, #0
   12a84:	bne	12ac8 <strspn@plt+0x19d0>
   12a88:	ldr	r1, [pc, #148]	; 12b24 <strspn@plt+0x1a2c>
   12a8c:	mov	r2, r7
   12a90:	mov	r3, r4
   12a94:	mov	r0, #1
   12a98:	add	r1, pc, r1
   12a9c:	bl	11074 <errx@plt>
   12aa0:	bl	10fd8 <__errno_location@plt>
   12aa4:	mov	r1, sp
   12aa8:	mov	r2, #10
   12aac:	mov	r8, r0
   12ab0:	str	r5, [r0]
   12ab4:	mov	r0, r4
   12ab8:	bl	10e7c <strtol@plt>
   12abc:	ldr	r3, [r8]
   12ac0:	cmp	r3, r5
   12ac4:	beq	12ae0 <strspn@plt+0x19e8>
   12ac8:	ldr	r1, [pc, #88]	; 12b28 <strspn@plt+0x1a30>
   12acc:	mov	r2, r7
   12ad0:	mov	r3, r4
   12ad4:	mov	r0, #1
   12ad8:	add	r1, pc, r1
   12adc:	bl	10f0c <err@plt>
   12ae0:	ldr	r3, [sp]
   12ae4:	cmp	r4, r3
   12ae8:	beq	12a88 <strspn@plt+0x1990>
   12aec:	cmp	r3, #0
   12af0:	beq	12b00 <strspn@plt+0x1a08>
   12af4:	ldrsb	r3, [r3]
   12af8:	cmp	r3, #0
   12afc:	bne	12a88 <strspn@plt+0x1990>
   12b00:	ldr	r2, [sp, #4]
   12b04:	ldr	r3, [r6]
   12b08:	cmp	r2, r3
   12b0c:	bne	12b18 <strspn@plt+0x1a20>
   12b10:	add	sp, sp, #8
   12b14:	pop	{r4, r5, r6, r7, r8, pc}
   12b18:	bl	10ee8 <__stack_chk_fail@plt>
   12b1c:			; <UNDEFINED> instruction: 0x000135b0
   12b20:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12b24:	strdeq	r2, [r0], -r8
   12b28:			; <UNDEFINED> instruction: 0x000023b8
   12b2c:	ldr	r3, [pc, #220]	; 12c10 <strspn@plt+0x1b18>
   12b30:	push	{r4, r5, r6, r7, r8, lr}
   12b34:	subs	r4, r0, #0
   12b38:	ldr	r0, [pc, #212]	; 12c14 <strspn@plt+0x1b1c>
   12b3c:	add	r3, pc, r3
   12b40:	sub	sp, sp, #8
   12b44:	mov	r5, #0
   12b48:	mov	r7, r1
   12b4c:	ldr	r6, [r3, r0]
   12b50:	str	r5, [sp]
   12b54:	ldr	r3, [r6]
   12b58:	str	r3, [sp, #4]
   12b5c:	beq	12b6c <strspn@plt+0x1a74>
   12b60:	ldrsb	r3, [r4]
   12b64:	cmp	r3, r5
   12b68:	bne	12b94 <strspn@plt+0x1a9c>
   12b6c:	bl	10fd8 <__errno_location@plt>
   12b70:	ldr	r3, [r0]
   12b74:	cmp	r3, #0
   12b78:	bne	12bbc <strspn@plt+0x1ac4>
   12b7c:	ldr	r1, [pc, #148]	; 12c18 <strspn@plt+0x1b20>
   12b80:	mov	r2, r7
   12b84:	mov	r3, r4
   12b88:	mov	r0, #1
   12b8c:	add	r1, pc, r1
   12b90:	bl	11074 <errx@plt>
   12b94:	bl	10fd8 <__errno_location@plt>
   12b98:	mov	r1, sp
   12b9c:	mov	r2, #10
   12ba0:	mov	r8, r0
   12ba4:	str	r5, [r0]
   12ba8:	mov	r0, r4
   12bac:	bl	10f9c <strtoul@plt>
   12bb0:	ldr	r3, [r8]
   12bb4:	cmp	r3, r5
   12bb8:	beq	12bd4 <strspn@plt+0x1adc>
   12bbc:	ldr	r1, [pc, #88]	; 12c1c <strspn@plt+0x1b24>
   12bc0:	mov	r2, r7
   12bc4:	mov	r3, r4
   12bc8:	mov	r0, #1
   12bcc:	add	r1, pc, r1
   12bd0:	bl	10f0c <err@plt>
   12bd4:	ldr	r3, [sp]
   12bd8:	cmp	r4, r3
   12bdc:	beq	12b7c <strspn@plt+0x1a84>
   12be0:	cmp	r3, #0
   12be4:	beq	12bf4 <strspn@plt+0x1afc>
   12be8:	ldrsb	r3, [r3]
   12bec:	cmp	r3, #0
   12bf0:	bne	12b7c <strspn@plt+0x1a84>
   12bf4:	ldr	r2, [sp, #4]
   12bf8:	ldr	r3, [r6]
   12bfc:	cmp	r2, r3
   12c00:	bne	12c0c <strspn@plt+0x1b14>
   12c04:	add	sp, sp, #8
   12c08:	pop	{r4, r5, r6, r7, r8, pc}
   12c0c:	bl	10ee8 <__stack_chk_fail@plt>
   12c10:			; <UNDEFINED> instruction: 0x000134bc
   12c14:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12c18:	andeq	r2, r0, r4, lsl #6
   12c1c:	andeq	r2, r0, r4, asr #5
   12c20:	ldr	ip, [pc, #132]	; 12cac <strspn@plt+0x1bb4>
   12c24:	push	{r4, r5, r6, lr}
   12c28:	add	ip, pc, ip
   12c2c:	ldr	lr, [pc, #124]	; 12cb0 <strspn@plt+0x1bb8>
   12c30:	sub	sp, sp, #16
   12c34:	mov	r6, r1
   12c38:	mov	r5, r0
   12c3c:	mov	r1, sp
   12c40:	ldr	r4, [ip, lr]
   12c44:	ldr	ip, [r4]
   12c48:	str	ip, [sp, #12]
   12c4c:	bl	12614 <strspn@plt+0x151c>
   12c50:	cmp	r0, #0
   12c54:	bne	12c74 <strspn@plt+0x1b7c>
   12c58:	ldr	r2, [sp, #12]
   12c5c:	ldr	r3, [r4]
   12c60:	ldrd	r0, [sp]
   12c64:	cmp	r2, r3
   12c68:	bne	12ca8 <strspn@plt+0x1bb0>
   12c6c:	add	sp, sp, #16
   12c70:	pop	{r4, r5, r6, pc}
   12c74:	bl	10fd8 <__errno_location@plt>
   12c78:	mov	r2, r6
   12c7c:	ldr	r3, [r0]
   12c80:	mov	r0, #1
   12c84:	cmp	r3, #0
   12c88:	mov	r3, r5
   12c8c:	beq	12c9c <strspn@plt+0x1ba4>
   12c90:	ldr	r1, [pc, #28]	; 12cb4 <strspn@plt+0x1bbc>
   12c94:	add	r1, pc, r1
   12c98:	bl	10f0c <err@plt>
   12c9c:	ldr	r1, [pc, #20]	; 12cb8 <strspn@plt+0x1bc0>
   12ca0:	add	r1, pc, r1
   12ca4:	bl	11074 <errx@plt>
   12ca8:	bl	10ee8 <__stack_chk_fail@plt>
   12cac:	ldrdeq	r3, [r1], -r0
   12cb0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12cb4:	strdeq	r2, [r0], -ip
   12cb8:	strdeq	r2, [r0], -r0
   12cbc:	push	{r4, lr}
   12cc0:	mov	r4, r1
   12cc4:	mov	r1, r2
   12cc8:	bl	12948 <strspn@plt+0x1850>
   12ccc:	vldr	d7, [pc, #28]	; 12cf0 <strspn@plt+0x1bf8>
   12cd0:	vcvt.s32.f64	s11, d0
   12cd4:	vcvt.f64.s32	d6, s11
   12cd8:	vstr	s11, [r4]
   12cdc:	vsub.f64	d0, d0, d6
   12ce0:	vmul.f64	d0, d0, d7
   12ce4:	vcvt.s32.f64	s0, d0
   12ce8:	vstr	s0, [r4, #4]
   12cec:	pop	{r4, pc}
   12cf0:	andeq	r0, r0, r0
   12cf4:	smlawbmi	lr, r0, r4, r8
   12cf8:	and	r3, r0, #61440	; 0xf000
   12cfc:	cmp	r3, #16384	; 0x4000
   12d00:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   12d04:	moveq	r3, #100	; 0x64
   12d08:	beq	12d80 <strspn@plt+0x1c88>
   12d0c:	cmp	r3, #40960	; 0xa000
   12d10:	moveq	r3, #108	; 0x6c
   12d14:	beq	12d80 <strspn@plt+0x1c88>
   12d18:	cmp	r3, #8192	; 0x2000
   12d1c:	moveq	r3, #99	; 0x63
   12d20:	beq	12d80 <strspn@plt+0x1c88>
   12d24:	cmp	r3, #24576	; 0x6000
   12d28:	moveq	r3, #98	; 0x62
   12d2c:	beq	12d80 <strspn@plt+0x1c88>
   12d30:	cmp	r3, #49152	; 0xc000
   12d34:	moveq	r3, #115	; 0x73
   12d38:	beq	12d80 <strspn@plt+0x1c88>
   12d3c:	cmp	r3, #4096	; 0x1000
   12d40:	moveq	r3, #112	; 0x70
   12d44:	beq	12d80 <strspn@plt+0x1c88>
   12d48:	cmp	r3, #32768	; 0x8000
   12d4c:	beq	12d7c <strspn@plt+0x1c84>
   12d50:	mov	r4, #9
   12d54:	mov	r3, #8
   12d58:	mov	r6, #7
   12d5c:	mov	r7, #6
   12d60:	mov	r2, #5
   12d64:	mov	r8, #4
   12d68:	mov	r9, #3
   12d6c:	mov	ip, #2
   12d70:	mov	sl, #1
   12d74:	mov	fp, #0
   12d78:	b	12dac <strspn@plt+0x1cb4>
   12d7c:	mov	r3, #45	; 0x2d
   12d80:	strb	r3, [r1]
   12d84:	mov	r4, #10
   12d88:	mov	r3, #9
   12d8c:	mov	r6, #8
   12d90:	mov	r7, #7
   12d94:	mov	r2, #6
   12d98:	mov	r8, #5
   12d9c:	mov	r9, #4
   12da0:	mov	ip, #3
   12da4:	mov	sl, #2
   12da8:	mov	fp, #1
   12dac:	tst	r0, #256	; 0x100
   12db0:	add	ip, r1, ip
   12db4:	moveq	r5, #45	; 0x2d
   12db8:	movne	r5, #114	; 0x72
   12dbc:	tst	r0, #128	; 0x80
   12dc0:	strb	r5, [r1, fp]
   12dc4:	moveq	r5, #45	; 0x2d
   12dc8:	movne	r5, #119	; 0x77
   12dcc:	tst	r0, #2048	; 0x800
   12dd0:	strb	r5, [r1, sl]
   12dd4:	beq	12e70 <strspn@plt+0x1d78>
   12dd8:	tst	r0, #64	; 0x40
   12ddc:	moveq	r5, #83	; 0x53
   12de0:	movne	r5, #115	; 0x73
   12de4:	tst	r0, #32
   12de8:	strb	r5, [ip]
   12dec:	add	r2, r1, r2
   12df0:	moveq	ip, #45	; 0x2d
   12df4:	movne	ip, #114	; 0x72
   12df8:	tst	r0, #16
   12dfc:	strb	ip, [r1, r9]
   12e00:	moveq	ip, #45	; 0x2d
   12e04:	movne	ip, #119	; 0x77
   12e08:	tst	r0, #1024	; 0x400
   12e0c:	strb	ip, [r1, r8]
   12e10:	beq	12e90 <strspn@plt+0x1d98>
   12e14:	tst	r0, #8
   12e18:	moveq	ip, #83	; 0x53
   12e1c:	movne	ip, #115	; 0x73
   12e20:	tst	r0, #4
   12e24:	strb	ip, [r2]
   12e28:	add	r3, r1, r3
   12e2c:	moveq	r2, #45	; 0x2d
   12e30:	movne	r2, #114	; 0x72
   12e34:	tst	r0, #2
   12e38:	strb	r2, [r1, r7]
   12e3c:	moveq	r2, #45	; 0x2d
   12e40:	movne	r2, #119	; 0x77
   12e44:	tst	r0, #512	; 0x200
   12e48:	strb	r2, [r1, r6]
   12e4c:	beq	12e80 <strspn@plt+0x1d88>
   12e50:	tst	r0, #1
   12e54:	moveq	r2, #84	; 0x54
   12e58:	movne	r2, #116	; 0x74
   12e5c:	strb	r2, [r3]
   12e60:	mov	r3, #0
   12e64:	strb	r3, [r1, r4]
   12e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   12e6c:	bx	lr
   12e70:	tst	r0, #64	; 0x40
   12e74:	moveq	r5, #45	; 0x2d
   12e78:	movne	r5, #120	; 0x78
   12e7c:	b	12de4 <strspn@plt+0x1cec>
   12e80:	tst	r0, #1
   12e84:	moveq	r2, #45	; 0x2d
   12e88:	movne	r2, #120	; 0x78
   12e8c:	b	12e5c <strspn@plt+0x1d64>
   12e90:	tst	r0, #8
   12e94:	moveq	ip, #45	; 0x2d
   12e98:	movne	ip, #120	; 0x78
   12e9c:	b	12e20 <strspn@plt+0x1d28>
   12ea0:	ldr	r1, [pc, #580]	; 130ec <strspn@plt+0x1ff4>
   12ea4:	tst	r0, #2
   12ea8:	ldr	ip, [pc, #576]	; 130f0 <strspn@plt+0x1ff8>
   12eac:	add	r1, pc, r1
   12eb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12eb4:	sub	sp, sp, #100	; 0x64
   12eb8:	ldr	r6, [r1, ip]
   12ebc:	addeq	r7, sp, #52	; 0x34
   12ec0:	addne	lr, sp, #53	; 0x35
   12ec4:	addne	r7, sp, #52	; 0x34
   12ec8:	moveq	lr, r7
   12ecc:	mov	ip, #10
   12ed0:	ldr	r1, [r6]
   12ed4:	str	r1, [sp, #92]	; 0x5c
   12ed8:	movne	r1, #32
   12edc:	strbne	r1, [sp, #52]	; 0x34
   12ee0:	mov	r1, #1
   12ee4:	sub	r9, ip, #32
   12ee8:	rsb	r8, ip, #32
   12eec:	lsl	r5, r1, r9
   12ef0:	lsl	r4, r1, ip
   12ef4:	orr	r5, r5, r1, lsr r8
   12ef8:	cmp	r3, r5
   12efc:	cmpeq	r2, r4
   12f00:	bcc	1306c <strspn@plt+0x1f74>
   12f04:	add	ip, ip, #10
   12f08:	cmp	ip, #70	; 0x46
   12f0c:	bne	12ee4 <strspn@plt+0x1dec>
   12f10:	mov	r1, #60	; 0x3c
   12f14:	movw	r5, #26215	; 0x6667
   12f18:	movt	r5, #26214	; 0x6666
   12f1c:	ldr	r8, [pc, #464]	; 130f4 <strspn@plt+0x1ffc>
   12f20:	mov	fp, #1
   12f24:	smull	sl, r9, r5, r1
   12f28:	add	r8, pc, r8
   12f2c:	str	r8, [sp, #36]	; 0x24
   12f30:	sub	r8, r1, #32
   12f34:	asr	r4, r1, #31
   12f38:	lsl	r5, fp, r8
   12f3c:	str	r4, [sp, #44]	; 0x2c
   12f40:	lsl	r4, fp, r1
   12f44:	subs	r4, r4, #1
   12f48:	str	r9, [sp, #40]	; 0x28
   12f4c:	rsb	r9, r1, #32
   12f50:	ldr	sl, [sp, #40]	; 0x28
   12f54:	orr	r5, r5, fp, lsr r9
   12f58:	ldr	fp, [sp, #44]	; 0x2c
   12f5c:	sbc	r5, r5, #0
   12f60:	tst	r0, #1
   12f64:	lsr	r1, r2, r1
   12f68:	rsb	fp, fp, sl, asr #2
   12f6c:	ldr	sl, [sp, #36]	; 0x24
   12f70:	orr	r1, r1, r3, lsl r9
   12f74:	and	r5, r5, r3
   12f78:	orr	r8, r1, r3, lsr r8
   12f7c:	and	r4, r4, r2
   12f80:	ldrb	r0, [sl, fp]
   12f84:	add	r3, lr, #1
   12f88:	strb	r0, [lr]
   12f8c:	bne	13050 <strspn@plt+0x1f58>
   12f90:	orrs	fp, r4, r5
   12f94:	mov	r2, #0
   12f98:	strb	r2, [r3]
   12f9c:	beq	13084 <strspn@plt+0x1f8c>
   12fa0:	sub	lr, ip, #20
   12fa4:	sub	ip, ip, #52	; 0x34
   12fa8:	rsb	r3, lr, #32
   12fac:	lsr	r0, r4, lr
   12fb0:	orr	r0, r0, r5, lsl r3
   12fb4:	lsr	r1, r5, lr
   12fb8:	orr	r0, r0, r5, lsr ip
   12fbc:	mov	r2, #100	; 0x64
   12fc0:	adds	r0, r0, #50	; 0x32
   12fc4:	mov	r3, #0
   12fc8:	adc	r1, r1, #0
   12fcc:	bl	13cb0 <strspn@plt+0x2bb8>
   12fd0:	mov	r4, r0
   12fd4:	mov	r5, r1
   12fd8:	cmp	r5, #0
   12fdc:	cmpeq	r4, #10
   12fe0:	addeq	r8, r8, #1
   12fe4:	beq	13084 <strspn@plt+0x1f8c>
   12fe8:	orrs	r2, r4, r5
   12fec:	beq	13084 <strspn@plt+0x1f8c>
   12ff0:	bl	11098 <localeconv@plt>
   12ff4:	cmp	r0, #0
   12ff8:	beq	130d0 <strspn@plt+0x1fd8>
   12ffc:	ldr	r3, [r0]
   13000:	cmp	r3, #0
   13004:	beq	130e0 <strspn@plt+0x1fe8>
   13008:	ldrsb	r2, [r3]
   1300c:	cmp	r2, #0
   13010:	ldreq	r3, [pc, #224]	; 130f8 <strspn@plt+0x2000>
   13014:	addeq	r3, pc, r3
   13018:	add	r9, sp, #60	; 0x3c
   1301c:	ldr	ip, [pc, #216]	; 130fc <strspn@plt+0x2004>
   13020:	mov	r1, #32
   13024:	str	r3, [sp, #8]
   13028:	add	ip, pc, ip
   1302c:	str	r8, [sp, #4]
   13030:	mov	r0, r9
   13034:	strd	r4, [sp, #16]
   13038:	mov	r3, r1
   1303c:	str	r7, [sp, #24]
   13040:	mov	r2, #1
   13044:	str	ip, [sp]
   13048:	bl	110ec <__snprintf_chk@plt>
   1304c:	b	130b0 <strspn@plt+0x1fb8>
   13050:	cmp	r0, #66	; 0x42
   13054:	addne	r3, lr, #3
   13058:	movne	r1, #105	; 0x69
   1305c:	movne	r2, #66	; 0x42
   13060:	strbne	r1, [lr, #1]
   13064:	strbne	r2, [lr, #2]
   13068:	b	12f90 <strspn@plt+0x1e98>
   1306c:	subs	r1, ip, #10
   13070:	strbeq	r1, [lr, #1]
   13074:	moveq	r3, #66	; 0x42
   13078:	moveq	r8, r2
   1307c:	strbeq	r3, [lr]
   13080:	bne	12f14 <strspn@plt+0x1e1c>
   13084:	ldr	r3, [pc, #116]	; 13100 <strspn@plt+0x2008>
   13088:	add	r9, sp, #60	; 0x3c
   1308c:	mov	r1, #32
   13090:	str	r8, [sp, #4]
   13094:	add	r3, pc, r3
   13098:	str	r7, [sp, #8]
   1309c:	str	r3, [sp]
   130a0:	mov	r0, r9
   130a4:	mov	r3, r1
   130a8:	mov	r2, #1
   130ac:	bl	110ec <__snprintf_chk@plt>
   130b0:	mov	r0, r9
   130b4:	bl	10ffc <__strdup@plt>
   130b8:	ldr	r2, [sp, #92]	; 0x5c
   130bc:	ldr	r3, [r6]
   130c0:	cmp	r2, r3
   130c4:	bne	130dc <strspn@plt+0x1fe4>
   130c8:	add	sp, sp, #100	; 0x64
   130cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130d0:	ldr	r3, [pc, #44]	; 13104 <strspn@plt+0x200c>
   130d4:	add	r3, pc, r3
   130d8:	b	13018 <strspn@plt+0x1f20>
   130dc:	bl	10ee8 <__stack_chk_fail@plt>
   130e0:	ldr	r3, [pc, #32]	; 13108 <strspn@plt+0x2010>
   130e4:	add	r3, pc, r3
   130e8:	b	13018 <strspn@plt+0x1f20>
   130ec:	andeq	r3, r1, ip, asr #2
   130f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   130f4:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   130f8:	andeq	r1, r0, r0, lsr #29
   130fc:	muleq	r0, r8, lr
   13100:	andeq	r1, r0, r8, lsr lr
   13104:	andeq	r1, r0, r0, ror #27
   13108:	ldrdeq	r1, [r0], -r0
   1310c:	cmp	r0, #0
   13110:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13114:	mov	r8, r1
   13118:	mov	sl, r2
   1311c:	mov	r9, r3
   13120:	beq	131dc <strspn@plt+0x20e4>
   13124:	ldrb	r5, [r0]
   13128:	cmp	r5, #0
   1312c:	beq	131dc <strspn@plt+0x20e4>
   13130:	cmp	r2, #0
   13134:	cmpne	r1, #0
   13138:	movne	ip, #0
   1313c:	moveq	ip, #1
   13140:	beq	131dc <strspn@plt+0x20e4>
   13144:	cmp	r3, #0
   13148:	movne	r4, r0
   1314c:	movne	r6, ip
   13150:	bne	13164 <strspn@plt+0x206c>
   13154:	b	131dc <strspn@plt+0x20e4>
   13158:	ldrb	r5, [r4, #1]!
   1315c:	cmp	r5, #0
   13160:	beq	131d4 <strspn@plt+0x20dc>
   13164:	cmp	sl, r6
   13168:	bls	131e4 <strspn@plt+0x20ec>
   1316c:	cmp	ip, #0
   13170:	ldrsb	r7, [r4, #1]
   13174:	moveq	ip, r4
   13178:	cmp	r5, #44	; 0x2c
   1317c:	mov	r0, ip
   13180:	moveq	r5, r4
   13184:	movne	r5, #0
   13188:	cmp	r7, #0
   1318c:	addeq	r5, r4, #1
   13190:	cmp	r5, #0
   13194:	rsb	r1, ip, r5
   13198:	beq	131cc <strspn@plt+0x20d4>
   1319c:	cmp	ip, r5
   131a0:	bcs	131dc <strspn@plt+0x20e4>
   131a4:	blx	r9
   131a8:	mov	ip, #0
   131ac:	add	r3, r6, #1
   131b0:	cmn	r0, #1
   131b4:	beq	131dc <strspn@plt+0x20e4>
   131b8:	str	r0, [r8, r6, lsl #2]
   131bc:	mov	r6, r3
   131c0:	ldrsb	r2, [r5]
   131c4:	cmp	r2, ip
   131c8:	beq	131ec <strspn@plt+0x20f4>
   131cc:	cmn	r4, #1
   131d0:	bne	13158 <strspn@plt+0x2060>
   131d4:	mov	r0, r6
   131d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131dc:	mvn	r0, #0
   131e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131e4:	mvn	r0, #1
   131e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131ec:	mov	r6, r3
   131f0:	b	131d4 <strspn@plt+0x20dc>
   131f4:	cmp	r0, #0
   131f8:	push	{r4, lr}
   131fc:	mov	r4, r3
   13200:	beq	13278 <strspn@plt+0x2180>
   13204:	ldrb	ip, [r0]
   13208:	cmp	ip, #0
   1320c:	beq	13278 <strspn@plt+0x2180>
   13210:	cmp	r3, #0
   13214:	beq	13278 <strspn@plt+0x2180>
   13218:	ldr	r3, [r3]
   1321c:	cmp	r3, #0
   13220:	blt	13278 <strspn@plt+0x2180>
   13224:	cmp	r3, r2
   13228:	bhi	13278 <strspn@plt+0x2180>
   1322c:	cmp	ip, #43	; 0x2b
   13230:	lsleq	ip, r3, #2
   13234:	addeq	r0, r0, #1
   13238:	movne	ip, #0
   1323c:	strne	ip, [r4]
   13240:	movne	r3, ip
   13244:	add	r1, r1, ip
   13248:	rsb	r2, r3, r2
   1324c:	ldr	r3, [sp, #8]
   13250:	bl	1310c <strspn@plt+0x2014>
   13254:	subs	r3, r0, #0
   13258:	ble	13270 <strspn@plt+0x2178>
   1325c:	ldr	r2, [r4]
   13260:	mov	r0, r3
   13264:	add	r3, r2, r3
   13268:	str	r3, [r4]
   1326c:	pop	{r4, pc}
   13270:	mov	r0, r3
   13274:	pop	{r4, pc}
   13278:	mvn	r0, #0
   1327c:	pop	{r4, pc}
   13280:	cmp	r2, #0
   13284:	cmpne	r0, #0
   13288:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   1328c:	mov	r4, r0
   13290:	mov	r7, r2
   13294:	movne	r3, #0
   13298:	moveq	r3, #1
   1329c:	mov	r9, r1
   132a0:	beq	1333c <strspn@plt+0x2244>
   132a4:	cmp	r1, #0
   132a8:	beq	1333c <strspn@plt+0x2244>
   132ac:	mov	r6, r0
   132b0:	mov	r8, #1
   132b4:	ldrb	r5, [r6], #1
   132b8:	cmp	r5, #0
   132bc:	beq	1332c <strspn@plt+0x2234>
   132c0:	cmp	r5, #44	; 0x2c
   132c4:	ldrsb	r0, [r4, #1]
   132c8:	moveq	r5, r4
   132cc:	movne	r5, #0
   132d0:	cmp	r3, #0
   132d4:	moveq	r3, r4
   132d8:	cmp	r0, #0
   132dc:	mov	r0, r3
   132e0:	moveq	r5, r6
   132e4:	cmp	r5, #0
   132e8:	rsb	r1, r3, r5
   132ec:	beq	13324 <strspn@plt+0x222c>
   132f0:	cmp	r3, r5
   132f4:	bcs	13334 <strspn@plt+0x223c>
   132f8:	blx	r7
   132fc:	mov	r3, #0
   13300:	cmp	r0, #0
   13304:	and	r2, r0, #7
   13308:	poplt	{r3, r4, r5, r6, r7, r8, r9, pc}
   1330c:	ldrb	r1, [r9, r0, asr #3]
   13310:	orr	r2, r1, r8, lsl r2
   13314:	strb	r2, [r9, r0, asr #3]
   13318:	ldrsb	r2, [r5]
   1331c:	cmp	r2, r3
   13320:	beq	1332c <strspn@plt+0x2234>
   13324:	adds	r4, r4, #1
   13328:	bne	132b4 <strspn@plt+0x21bc>
   1332c:	mov	r0, #0
   13330:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13334:	mvn	r0, #0
   13338:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1333c:	mvn	r0, #21
   13340:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13344:	cmp	r2, #0
   13348:	cmpne	r0, #0
   1334c:	push	{r4, r5, r6, r7, r8, lr}
   13350:	movne	r3, #0
   13354:	moveq	r3, #1
   13358:	mov	r4, r0
   1335c:	mov	r8, r2
   13360:	mov	r7, r1
   13364:	beq	133f8 <strspn@plt+0x2300>
   13368:	cmp	r1, #0
   1336c:	beq	133f8 <strspn@plt+0x2300>
   13370:	mov	r6, r0
   13374:	ldrb	r5, [r6], #1
   13378:	cmp	r5, #0
   1337c:	beq	133e8 <strspn@plt+0x22f0>
   13380:	cmp	r5, #44	; 0x2c
   13384:	ldrsb	r0, [r4, #1]
   13388:	moveq	r5, r4
   1338c:	movne	r5, #0
   13390:	cmp	r3, #0
   13394:	moveq	r3, r4
   13398:	cmp	r0, #0
   1339c:	mov	r0, r3
   133a0:	moveq	r5, r6
   133a4:	cmp	r5, #0
   133a8:	rsb	r1, r3, r5
   133ac:	beq	133e0 <strspn@plt+0x22e8>
   133b0:	cmp	r3, r5
   133b4:	bcs	133f0 <strspn@plt+0x22f8>
   133b8:	blx	r8
   133bc:	mov	r3, #0
   133c0:	cmp	r0, #0
   133c4:	poplt	{r4, r5, r6, r7, r8, pc}
   133c8:	ldr	r2, [r7]
   133cc:	orr	r0, r2, r0
   133d0:	str	r0, [r7]
   133d4:	ldrsb	r2, [r5]
   133d8:	cmp	r2, r3
   133dc:	beq	133e8 <strspn@plt+0x22f0>
   133e0:	adds	r4, r4, #1
   133e4:	bne	13374 <strspn@plt+0x227c>
   133e8:	mov	r0, #0
   133ec:	pop	{r4, r5, r6, r7, r8, pc}
   133f0:	mvn	r0, #0
   133f4:	pop	{r4, r5, r6, r7, r8, pc}
   133f8:	mvn	r0, #21
   133fc:	pop	{r4, r5, r6, r7, r8, pc}
   13400:	ldr	ip, [pc, #380]	; 13584 <strspn@plt+0x248c>
   13404:	push	{r4, r5, r6, r7, r8, r9, lr}
   13408:	subs	r4, r0, #0
   1340c:	ldr	r0, [pc, #372]	; 13588 <strspn@plt+0x2490>
   13410:	add	ip, pc, ip
   13414:	mov	r6, r2
   13418:	sub	sp, sp, #12
   1341c:	mov	r2, ip
   13420:	mov	r8, #0
   13424:	ldr	r7, [ip, r0]
   13428:	mov	r9, r1
   1342c:	str	r8, [sp]
   13430:	ldr	r2, [r7]
   13434:	str	r2, [sp, #4]
   13438:	beq	134a8 <strspn@plt+0x23b0>
   1343c:	str	r3, [r1]
   13440:	str	r3, [r6]
   13444:	bl	10fd8 <__errno_location@plt>
   13448:	str	r8, [r0]
   1344c:	mov	r5, r0
   13450:	ldrsb	r3, [r4]
   13454:	cmp	r3, #58	; 0x3a
   13458:	beq	134c4 <strspn@plt+0x23cc>
   1345c:	mov	r0, r4
   13460:	mov	r2, #10
   13464:	mov	r1, sp
   13468:	bl	10e7c <strtol@plt>
   1346c:	str	r0, [r9]
   13470:	str	r0, [r6]
   13474:	ldr	r0, [r5]
   13478:	cmp	r0, #0
   1347c:	bne	13578 <strspn@plt+0x2480>
   13480:	ldr	r3, [sp]
   13484:	cmp	r3, #0
   13488:	beq	13578 <strspn@plt+0x2480>
   1348c:	cmp	r4, r3
   13490:	beq	13578 <strspn@plt+0x2480>
   13494:	ldrsb	r2, [r3]
   13498:	cmp	r2, #58	; 0x3a
   1349c:	beq	13510 <strspn@plt+0x2418>
   134a0:	cmp	r2, #45	; 0x2d
   134a4:	beq	13520 <strspn@plt+0x2428>
   134a8:	mov	r0, #0
   134ac:	ldr	r2, [sp, #4]
   134b0:	ldr	r3, [r7]
   134b4:	cmp	r2, r3
   134b8:	bne	13580 <strspn@plt+0x2488>
   134bc:	add	sp, sp, #12
   134c0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   134c4:	add	r4, r4, #1
   134c8:	mov	r1, sp
   134cc:	mov	r2, #10
   134d0:	mov	r0, r4
   134d4:	bl	10e7c <strtol@plt>
   134d8:	str	r0, [r6]
   134dc:	ldr	r3, [r5]
   134e0:	cmp	r3, #0
   134e4:	bne	13578 <strspn@plt+0x2480>
   134e8:	ldr	r3, [sp]
   134ec:	cmp	r3, #0
   134f0:	beq	13578 <strspn@plt+0x2480>
   134f4:	ldrsb	r2, [r3]
   134f8:	cmp	r2, #0
   134fc:	bne	13578 <strspn@plt+0x2480>
   13500:	cmp	r4, r3
   13504:	movne	r0, #0
   13508:	mvneq	r0, #0
   1350c:	b	134ac <strspn@plt+0x23b4>
   13510:	ldrsb	r2, [r3, #1]
   13514:	cmp	r2, #0
   13518:	streq	r0, [r6]
   1351c:	beq	134ac <strspn@plt+0x23b4>
   13520:	add	r4, r3, #1
   13524:	mov	ip, #0
   13528:	mov	r1, sp
   1352c:	mov	r2, #10
   13530:	mov	r0, r4
   13534:	str	ip, [r5]
   13538:	str	ip, [sp]
   1353c:	bl	10e7c <strtol@plt>
   13540:	str	r0, [r6]
   13544:	ldr	r3, [r5]
   13548:	cmp	r3, #0
   1354c:	bne	13578 <strspn@plt+0x2480>
   13550:	ldr	r2, [sp]
   13554:	cmp	r2, #0
   13558:	beq	13578 <strspn@plt+0x2480>
   1355c:	ldrsb	r3, [r2]
   13560:	cmp	r3, #0
   13564:	bne	13578 <strspn@plt+0x2480>
   13568:	cmp	r4, r2
   1356c:	movne	r0, #0
   13570:	mvneq	r0, #0
   13574:	b	134ac <strspn@plt+0x23b4>
   13578:	mvn	r0, #0
   1357c:	b	134ac <strspn@plt+0x23b4>
   13580:	bl	10ee8 <__stack_chk_fail@plt>
   13584:	andeq	r2, r1, r8, ror #23
   13588:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1358c:	rsbs	r2, r0, #1
   13590:	push	{r4, r5, r6, lr}
   13594:	movcc	r2, #0
   13598:	rsbs	r3, r1, #1
   1359c:	mov	r5, r0
   135a0:	mov	r4, r1
   135a4:	movcc	r3, #0
   135a8:	ands	ip, r2, r3
   135ac:	bne	13618 <strspn@plt+0x2520>
   135b0:	orrs	r3, r2, r3
   135b4:	bne	13620 <strspn@plt+0x2528>
   135b8:	bl	10e70 <strcmp@plt>
   135bc:	cmp	r0, #0
   135c0:	beq	13618 <strspn@plt+0x2520>
   135c4:	mov	r0, r5
   135c8:	bl	10fa8 <strlen@plt>
   135cc:	mov	r6, r0
   135d0:	mov	r0, r4
   135d4:	bl	10fa8 <strlen@plt>
   135d8:	cmp	r6, #0
   135dc:	beq	135f0 <strspn@plt+0x24f8>
   135e0:	sub	r3, r6, #1
   135e4:	ldrsb	r2, [r5, r3]
   135e8:	cmp	r2, #47	; 0x2f
   135ec:	moveq	r6, r3
   135f0:	cmp	r0, #0
   135f4:	beq	13608 <strspn@plt+0x2510>
   135f8:	sub	r3, r0, #1
   135fc:	ldrsb	r2, [r4, r3]
   13600:	cmp	r2, #47	; 0x2f
   13604:	moveq	r0, r3
   13608:	cmp	r6, r0
   1360c:	beq	13628 <strspn@plt+0x2530>
   13610:	mov	r0, #0
   13614:	pop	{r4, r5, r6, pc}
   13618:	mov	r0, #1
   1361c:	pop	{r4, r5, r6, pc}
   13620:	mov	r0, ip
   13624:	pop	{r4, r5, r6, pc}
   13628:	mov	r0, r5
   1362c:	mov	r1, r4
   13630:	mov	r2, r6
   13634:	bl	110c8 <strncmp@plt>
   13638:	rsbs	r0, r0, #1
   1363c:	movcc	r0, #0
   13640:	pop	{r4, r5, r6, pc}
   13644:	ldr	r3, [pc, #248]	; 13744 <strspn@plt+0x264c>
   13648:	cmp	r0, #0
   1364c:	cmpne	r1, #0
   13650:	ldr	r2, [pc, #240]	; 13748 <strspn@plt+0x2650>
   13654:	add	r3, pc, r3
   13658:	push	{r4, r5, r6, r7, r8, r9, lr}
   1365c:	sub	sp, sp, #20
   13660:	ldr	r9, [r3, r2]
   13664:	mov	r6, r1
   13668:	addne	r8, sp, #4
   1366c:	addne	r7, sp, #8
   13670:	ldr	r3, [r9]
   13674:	str	r3, [sp, #12]
   13678:	bne	136c0 <strspn@plt+0x25c8>
   1367c:	b	13738 <strspn@plt+0x2640>
   13680:	cmp	r4, r3
   13684:	bne	13738 <strspn@plt+0x2640>
   13688:	mov	r0, r5
   1368c:	mov	r1, r6
   13690:	mov	r2, r4
   13694:	bl	110c8 <strncmp@plt>
   13698:	cmp	r0, #0
   1369c:	bne	13738 <strspn@plt+0x2640>
   136a0:	adds	r6, r6, r4
   136a4:	moveq	r3, #0
   136a8:	movne	r3, #1
   136ac:	adds	r0, r5, r4
   136b0:	moveq	r3, #0
   136b4:	andne	r3, r3, #1
   136b8:	cmp	r3, #0
   136bc:	beq	13738 <strspn@plt+0x2640>
   136c0:	mov	r1, r8
   136c4:	bl	12180 <strspn@plt+0x1088>
   136c8:	mov	r1, r7
   136cc:	mov	r5, r0
   136d0:	mov	r0, r6
   136d4:	bl	12180 <strspn@plt+0x1088>
   136d8:	ldr	r4, [sp, #4]
   136dc:	ldr	r3, [sp, #8]
   136e0:	mov	r6, r0
   136e4:	adds	r0, r3, r4
   136e8:	beq	1371c <strspn@plt+0x2624>
   136ec:	cmp	r0, #1
   136f0:	bne	13680 <strspn@plt+0x2588>
   136f4:	cmp	r5, #0
   136f8:	beq	13708 <strspn@plt+0x2610>
   136fc:	ldrsb	r2, [r5]
   13700:	cmp	r2, #47	; 0x2f
   13704:	beq	13720 <strspn@plt+0x2628>
   13708:	cmp	r6, #0
   1370c:	beq	13680 <strspn@plt+0x2588>
   13710:	ldrsb	r2, [r6]
   13714:	cmp	r2, #47	; 0x2f
   13718:	bne	13680 <strspn@plt+0x2588>
   1371c:	mov	r0, #1
   13720:	ldr	r2, [sp, #12]
   13724:	ldr	r3, [r9]
   13728:	cmp	r2, r3
   1372c:	bne	13740 <strspn@plt+0x2648>
   13730:	add	sp, sp, #20
   13734:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13738:	mov	r0, #0
   1373c:	b	13720 <strspn@plt+0x2628>
   13740:	bl	10ee8 <__stack_chk_fail@plt>
   13744:	andeq	r2, r1, r4, lsr #19
   13748:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1374c:	rsbs	r3, r0, #1
   13750:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13754:	movcc	r3, #0
   13758:	rsbs	r4, r1, #1
   1375c:	mov	r7, r1
   13760:	mov	r6, r2
   13764:	mov	sl, r0
   13768:	movcc	r4, #0
   1376c:	tst	r3, r4
   13770:	bne	137d4 <strspn@plt+0x26dc>
   13774:	cmp	r3, #0
   13778:	bne	137ec <strspn@plt+0x26f4>
   1377c:	cmp	r4, #0
   13780:	bne	137fc <strspn@plt+0x2704>
   13784:	bl	10fa8 <strlen@plt>
   13788:	mvn	r3, r0
   1378c:	cmp	r6, r3
   13790:	mov	r5, r0
   13794:	bhi	137e4 <strspn@plt+0x26ec>
   13798:	add	r9, r0, r6
   1379c:	add	r0, r9, #1
   137a0:	bl	10f54 <malloc@plt>
   137a4:	subs	r8, r0, #0
   137a8:	beq	13804 <strspn@plt+0x270c>
   137ac:	mov	r1, sl
   137b0:	mov	r2, r5
   137b4:	bl	10ec4 <memcpy@plt>
   137b8:	add	r0, r8, r5
   137bc:	mov	r1, r7
   137c0:	mov	r2, r6
   137c4:	bl	10ec4 <memcpy@plt>
   137c8:	strb	r4, [r8, r9]
   137cc:	mov	r0, r8
   137d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137d4:	mov	r0, #1
   137d8:	mov	r1, r0
   137dc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   137e0:	b	10e58 <calloc@plt>
   137e4:	mov	r0, r4
   137e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   137ec:	mov	r0, r1
   137f0:	mov	r1, r2
   137f4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   137f8:	b	10f00 <__strndup@plt>
   137fc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   13800:	b	10ffc <__strdup@plt>
   13804:	mov	r0, r8
   13808:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1380c:	push	{r3, r4, r5, lr}
   13810:	subs	r4, r1, #0
   13814:	mov	r5, r0
   13818:	beq	13838 <strspn@plt+0x2740>
   1381c:	mov	r0, r4
   13820:	bl	10fa8 <strlen@plt>
   13824:	mov	r1, r4
   13828:	mov	r2, r0
   1382c:	mov	r0, r5
   13830:	pop	{r3, r4, r5, lr}
   13834:	b	1374c <strspn@plt+0x2654>
   13838:	mov	r2, r4
   1383c:	mov	r0, r5
   13840:	mov	r1, r4
   13844:	pop	{r3, r4, r5, lr}
   13848:	b	1374c <strspn@plt+0x2654>
   1384c:	push	{r1, r2, r3}
   13850:	mov	r1, #1
   13854:	push	{r4, r5, lr}
   13858:	sub	sp, sp, #16
   1385c:	ldr	lr, [pc, #124]	; 138e0 <strspn@plt+0x27e8>
   13860:	add	ip, sp, #32
   13864:	ldr	r4, [pc, #120]	; 138e4 <strspn@plt+0x27ec>
   13868:	mov	r5, r0
   1386c:	add	lr, pc, lr
   13870:	mov	r3, ip
   13874:	ldr	r2, [sp, #28]
   13878:	add	r0, sp, #8
   1387c:	ldr	r4, [lr, r4]
   13880:	str	ip, [sp, #4]
   13884:	ldr	ip, [r4]
   13888:	str	ip, [sp, #12]
   1388c:	bl	10ff0 <__vasprintf_chk@plt>
   13890:	subs	r2, r0, #0
   13894:	blt	138d4 <strspn@plt+0x27dc>
   13898:	mov	r0, r5
   1389c:	ldr	r1, [sp, #8]
   138a0:	bl	1374c <strspn@plt+0x2654>
   138a4:	mov	r5, r0
   138a8:	ldr	r0, [sp, #8]
   138ac:	bl	10ea0 <free@plt>
   138b0:	mov	r0, r5
   138b4:	ldr	r2, [sp, #12]
   138b8:	ldr	r3, [r4]
   138bc:	cmp	r2, r3
   138c0:	bne	138dc <strspn@plt+0x27e4>
   138c4:	add	sp, sp, #16
   138c8:	pop	{r4, r5, lr}
   138cc:	add	sp, sp, #12
   138d0:	bx	lr
   138d4:	mov	r0, #0
   138d8:	b	138b4 <strspn@plt+0x27bc>
   138dc:	bl	10ee8 <__stack_chk_fail@plt>
   138e0:	andeq	r2, r1, ip, lsl #15
   138e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   138e8:	ldr	ip, [pc, #372]	; 13a64 <strspn@plt+0x296c>
   138ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   138f0:	mov	r6, r0
   138f4:	ldr	r0, [pc, #364]	; 13a68 <strspn@plt+0x2970>
   138f8:	add	ip, pc, ip
   138fc:	ldr	r4, [r6]
   13900:	mov	r9, r3
   13904:	sub	sp, sp, #12
   13908:	mov	r7, r1
   1390c:	ldr	r5, [ip, r0]
   13910:	mov	r8, r2
   13914:	ldrsb	ip, [r4]
   13918:	ldr	r3, [r5]
   1391c:	cmp	ip, #0
   13920:	moveq	r0, ip
   13924:	str	r3, [sp, #4]
   13928:	beq	139d8 <strspn@plt+0x28e0>
   1392c:	mov	r0, r4
   13930:	mov	r1, r2
   13934:	bl	110f8 <strspn@plt>
   13938:	ldrb	sl, [r4, r0]
   1393c:	add	r4, r4, r0
   13940:	cmp	sl, #0
   13944:	beq	13a54 <strspn@plt+0x295c>
   13948:	cmp	r9, #0
   1394c:	beq	139f0 <strspn@plt+0x28f8>
   13950:	sxtb	r9, sl
   13954:	ldr	r0, [pc, #272]	; 13a6c <strspn@plt+0x2974>
   13958:	mov	r1, r9
   1395c:	add	r0, pc, r0
   13960:	bl	10fb4 <strchr@plt>
   13964:	cmp	r0, #0
   13968:	beq	13a14 <strspn@plt+0x291c>
   1396c:	add	fp, r4, #1
   13970:	mov	r1, sp
   13974:	mov	r3, #0
   13978:	strb	sl, [sp]
   1397c:	mov	r0, fp
   13980:	strb	r3, [sp, #1]
   13984:	bl	12220 <strspn@plt+0x1128>
   13988:	add	r3, r4, r0
   1398c:	str	r0, [r7]
   13990:	ldrb	r3, [r3, #1]
   13994:	cmp	r3, #0
   13998:	beq	13a54 <strspn@plt+0x295c>
   1399c:	sxtb	r3, r3
   139a0:	cmp	r9, r3
   139a4:	bne	13a54 <strspn@plt+0x295c>
   139a8:	add	r0, r0, #2
   139ac:	add	r7, r4, r0
   139b0:	ldrb	r1, [r4, r0]
   139b4:	cmp	r1, #0
   139b8:	beq	139d0 <strspn@plt+0x28d8>
   139bc:	mov	r0, r8
   139c0:	sxtb	r1, r1
   139c4:	bl	10fb4 <strchr@plt>
   139c8:	cmp	r0, #0
   139cc:	beq	13a54 <strspn@plt+0x295c>
   139d0:	mov	r0, fp
   139d4:	str	r7, [r6]
   139d8:	ldr	r2, [sp, #4]
   139dc:	ldr	r3, [r5]
   139e0:	cmp	r2, r3
   139e4:	bne	13a60 <strspn@plt+0x2968>
   139e8:	add	sp, sp, #12
   139ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139f0:	mov	r0, r4
   139f4:	mov	r1, r8
   139f8:	bl	10e88 <strcspn@plt>
   139fc:	mov	r3, r0
   13a00:	mov	r0, r4
   13a04:	add	r4, r4, r3
   13a08:	str	r3, [r7]
   13a0c:	str	r4, [r6]
   13a10:	b	139d8 <strspn@plt+0x28e0>
   13a14:	mov	r1, r8
   13a18:	mov	r0, r4
   13a1c:	bl	12220 <strspn@plt+0x1128>
   13a20:	str	r0, [r7]
   13a24:	add	r7, r4, r0
   13a28:	ldrb	r1, [r4, r0]
   13a2c:	cmp	r1, #0
   13a30:	beq	13a48 <strspn@plt+0x2950>
   13a34:	mov	r0, r8
   13a38:	sxtb	r1, r1
   13a3c:	bl	10fb4 <strchr@plt>
   13a40:	cmp	r0, #0
   13a44:	beq	13a0c <strspn@plt+0x2914>
   13a48:	str	r7, [r6]
   13a4c:	mov	r0, r4
   13a50:	b	139d8 <strspn@plt+0x28e0>
   13a54:	str	r4, [r6]
   13a58:	mov	r0, #0
   13a5c:	b	139d8 <strspn@plt+0x28e0>
   13a60:	bl	10ee8 <__stack_chk_fail@plt>
   13a64:	andeq	r2, r1, r0, lsl #14
   13a68:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a6c:	andeq	r1, r0, r8, ror r5
   13a70:	push	{r4, lr}
   13a74:	mov	r4, r0
   13a78:	b	13a84 <strspn@plt+0x298c>
   13a7c:	cmp	r0, #10
   13a80:	beq	13a9c <strspn@plt+0x29a4>
   13a84:	mov	r0, r4
   13a88:	bl	11014 <fgetc@plt>
   13a8c:	cmn	r0, #1
   13a90:	bne	13a7c <strspn@plt+0x2984>
   13a94:	mov	r0, #1
   13a98:	pop	{r4, pc}
   13a9c:	mov	r0, #0
   13aa0:	pop	{r4, pc}
   13aa4:	subs	r2, r1, #1
   13aa8:	bxeq	lr
   13aac:	bcc	13c84 <strspn@plt+0x2b8c>
   13ab0:	cmp	r0, r1
   13ab4:	bls	13c68 <strspn@plt+0x2b70>
   13ab8:	tst	r1, r2
   13abc:	beq	13c74 <strspn@plt+0x2b7c>
   13ac0:	clz	r3, r0
   13ac4:	clz	r2, r1
   13ac8:	sub	r3, r2, r3
   13acc:	rsbs	r3, r3, #31
   13ad0:	addne	r3, r3, r3, lsl #1
   13ad4:	mov	r2, #0
   13ad8:	addne	pc, pc, r3, lsl #2
   13adc:	nop	{0}
   13ae0:	cmp	r0, r1, lsl #31
   13ae4:	adc	r2, r2, r2
   13ae8:	subcs	r0, r0, r1, lsl #31
   13aec:	cmp	r0, r1, lsl #30
   13af0:	adc	r2, r2, r2
   13af4:	subcs	r0, r0, r1, lsl #30
   13af8:	cmp	r0, r1, lsl #29
   13afc:	adc	r2, r2, r2
   13b00:	subcs	r0, r0, r1, lsl #29
   13b04:	cmp	r0, r1, lsl #28
   13b08:	adc	r2, r2, r2
   13b0c:	subcs	r0, r0, r1, lsl #28
   13b10:	cmp	r0, r1, lsl #27
   13b14:	adc	r2, r2, r2
   13b18:	subcs	r0, r0, r1, lsl #27
   13b1c:	cmp	r0, r1, lsl #26
   13b20:	adc	r2, r2, r2
   13b24:	subcs	r0, r0, r1, lsl #26
   13b28:	cmp	r0, r1, lsl #25
   13b2c:	adc	r2, r2, r2
   13b30:	subcs	r0, r0, r1, lsl #25
   13b34:	cmp	r0, r1, lsl #24
   13b38:	adc	r2, r2, r2
   13b3c:	subcs	r0, r0, r1, lsl #24
   13b40:	cmp	r0, r1, lsl #23
   13b44:	adc	r2, r2, r2
   13b48:	subcs	r0, r0, r1, lsl #23
   13b4c:	cmp	r0, r1, lsl #22
   13b50:	adc	r2, r2, r2
   13b54:	subcs	r0, r0, r1, lsl #22
   13b58:	cmp	r0, r1, lsl #21
   13b5c:	adc	r2, r2, r2
   13b60:	subcs	r0, r0, r1, lsl #21
   13b64:	cmp	r0, r1, lsl #20
   13b68:	adc	r2, r2, r2
   13b6c:	subcs	r0, r0, r1, lsl #20
   13b70:	cmp	r0, r1, lsl #19
   13b74:	adc	r2, r2, r2
   13b78:	subcs	r0, r0, r1, lsl #19
   13b7c:	cmp	r0, r1, lsl #18
   13b80:	adc	r2, r2, r2
   13b84:	subcs	r0, r0, r1, lsl #18
   13b88:	cmp	r0, r1, lsl #17
   13b8c:	adc	r2, r2, r2
   13b90:	subcs	r0, r0, r1, lsl #17
   13b94:	cmp	r0, r1, lsl #16
   13b98:	adc	r2, r2, r2
   13b9c:	subcs	r0, r0, r1, lsl #16
   13ba0:	cmp	r0, r1, lsl #15
   13ba4:	adc	r2, r2, r2
   13ba8:	subcs	r0, r0, r1, lsl #15
   13bac:	cmp	r0, r1, lsl #14
   13bb0:	adc	r2, r2, r2
   13bb4:	subcs	r0, r0, r1, lsl #14
   13bb8:	cmp	r0, r1, lsl #13
   13bbc:	adc	r2, r2, r2
   13bc0:	subcs	r0, r0, r1, lsl #13
   13bc4:	cmp	r0, r1, lsl #12
   13bc8:	adc	r2, r2, r2
   13bcc:	subcs	r0, r0, r1, lsl #12
   13bd0:	cmp	r0, r1, lsl #11
   13bd4:	adc	r2, r2, r2
   13bd8:	subcs	r0, r0, r1, lsl #11
   13bdc:	cmp	r0, r1, lsl #10
   13be0:	adc	r2, r2, r2
   13be4:	subcs	r0, r0, r1, lsl #10
   13be8:	cmp	r0, r1, lsl #9
   13bec:	adc	r2, r2, r2
   13bf0:	subcs	r0, r0, r1, lsl #9
   13bf4:	cmp	r0, r1, lsl #8
   13bf8:	adc	r2, r2, r2
   13bfc:	subcs	r0, r0, r1, lsl #8
   13c00:	cmp	r0, r1, lsl #7
   13c04:	adc	r2, r2, r2
   13c08:	subcs	r0, r0, r1, lsl #7
   13c0c:	cmp	r0, r1, lsl #6
   13c10:	adc	r2, r2, r2
   13c14:	subcs	r0, r0, r1, lsl #6
   13c18:	cmp	r0, r1, lsl #5
   13c1c:	adc	r2, r2, r2
   13c20:	subcs	r0, r0, r1, lsl #5
   13c24:	cmp	r0, r1, lsl #4
   13c28:	adc	r2, r2, r2
   13c2c:	subcs	r0, r0, r1, lsl #4
   13c30:	cmp	r0, r1, lsl #3
   13c34:	adc	r2, r2, r2
   13c38:	subcs	r0, r0, r1, lsl #3
   13c3c:	cmp	r0, r1, lsl #2
   13c40:	adc	r2, r2, r2
   13c44:	subcs	r0, r0, r1, lsl #2
   13c48:	cmp	r0, r1, lsl #1
   13c4c:	adc	r2, r2, r2
   13c50:	subcs	r0, r0, r1, lsl #1
   13c54:	cmp	r0, r1
   13c58:	adc	r2, r2, r2
   13c5c:	subcs	r0, r0, r1
   13c60:	mov	r0, r2
   13c64:	bx	lr
   13c68:	moveq	r0, #1
   13c6c:	movne	r0, #0
   13c70:	bx	lr
   13c74:	clz	r2, r1
   13c78:	rsb	r2, r2, #31
   13c7c:	lsr	r0, r0, r2
   13c80:	bx	lr
   13c84:	cmp	r0, #0
   13c88:	mvnne	r0, #0
   13c8c:	b	13cec <strspn@plt+0x2bf4>
   13c90:	cmp	r1, #0
   13c94:	beq	13c84 <strspn@plt+0x2b8c>
   13c98:	push	{r0, r1, lr}
   13c9c:	bl	13aa4 <strspn@plt+0x29ac>
   13ca0:	pop	{r1, r2, lr}
   13ca4:	mul	r3, r2, r0
   13ca8:	sub	r1, r1, r3
   13cac:	bx	lr
   13cb0:	cmp	r3, #0
   13cb4:	cmpeq	r2, #0
   13cb8:	bne	13cd0 <strspn@plt+0x2bd8>
   13cbc:	cmp	r1, #0
   13cc0:	cmpeq	r0, #0
   13cc4:	mvnne	r1, #0
   13cc8:	mvnne	r0, #0
   13ccc:	b	13cec <strspn@plt+0x2bf4>
   13cd0:	sub	sp, sp, #8
   13cd4:	push	{sp, lr}
   13cd8:	bl	13d38 <strspn@plt+0x2c40>
   13cdc:	ldr	lr, [sp, #4]
   13ce0:	add	sp, sp, #8
   13ce4:	pop	{r2, r3}
   13ce8:	bx	lr
   13cec:	push	{r1, lr}
   13cf0:	mov	r0, #8
   13cf4:	bl	10e64 <raise@plt>
   13cf8:	pop	{r1, pc}
   13cfc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13d00:	mov	r8, r2
   13d04:	mov	r6, r0
   13d08:	mov	r7, r1
   13d0c:	mov	sl, r3
   13d10:	ldr	r9, [sp, #32]
   13d14:	bl	13d74 <strspn@plt+0x2c7c>
   13d18:	umull	r4, r5, r8, r0
   13d1c:	mul	r8, r8, r1
   13d20:	mla	r2, r0, sl, r8
   13d24:	add	r5, r2, r5
   13d28:	subs	r4, r6, r4
   13d2c:	sbc	r5, r7, r5
   13d30:	strd	r4, [r9]
   13d34:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13d38:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   13d3c:	mov	r8, r2
   13d40:	mov	r6, r0
   13d44:	mov	r7, r1
   13d48:	mov	r5, r3
   13d4c:	ldr	r9, [sp, #32]
   13d50:	bl	14200 <strspn@plt+0x3108>
   13d54:	mul	r3, r0, r5
   13d58:	umull	r4, r5, r0, r8
   13d5c:	mla	r8, r8, r1, r3
   13d60:	add	r5, r8, r5
   13d64:	subs	r4, r6, r4
   13d68:	sbc	r5, r7, r5
   13d6c:	strd	r4, [r9]
   13d70:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13d74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d78:	rsbs	r4, r0, #0
   13d7c:	rsc	r5, r1, #0
   13d80:	cmp	r1, #0
   13d84:	mvn	r6, #0
   13d88:	sub	sp, sp, #12
   13d8c:	movge	r4, r0
   13d90:	movge	r5, r1
   13d94:	movge	r6, #0
   13d98:	cmp	r3, #0
   13d9c:	blt	13fd4 <strspn@plt+0x2edc>
   13da0:	cmp	r3, #0
   13da4:	mov	sl, r4
   13da8:	mov	ip, r5
   13dac:	mov	r0, r2
   13db0:	mov	r1, r3
   13db4:	mov	r8, r2
   13db8:	mov	r7, r4
   13dbc:	mov	r9, r5
   13dc0:	bne	13eb8 <strspn@plt+0x2dc0>
   13dc4:	cmp	r2, r5
   13dc8:	bls	13ef4 <strspn@plt+0x2dfc>
   13dcc:	clz	r3, r2
   13dd0:	cmp	r3, #0
   13dd4:	rsbne	r2, r3, #32
   13dd8:	lslne	r8, r0, r3
   13ddc:	lsrne	r2, r4, r2
   13de0:	lslne	r7, r4, r3
   13de4:	orrne	r9, r2, r5, lsl r3
   13de8:	lsr	r4, r8, #16
   13dec:	uxth	sl, r8
   13df0:	mov	r1, r4
   13df4:	mov	r0, r9
   13df8:	bl	13aa4 <strspn@plt+0x29ac>
   13dfc:	mov	r1, r4
   13e00:	mov	fp, r0
   13e04:	mov	r0, r9
   13e08:	bl	13c90 <strspn@plt+0x2b98>
   13e0c:	mul	r0, sl, fp
   13e10:	lsr	r2, r7, #16
   13e14:	orr	r1, r2, r1, lsl #16
   13e18:	cmp	r0, r1
   13e1c:	bls	13e40 <strspn@plt+0x2d48>
   13e20:	adds	r1, r1, r8
   13e24:	sub	r3, fp, #1
   13e28:	bcs	13e3c <strspn@plt+0x2d44>
   13e2c:	cmp	r0, r1
   13e30:	subhi	fp, fp, #2
   13e34:	addhi	r1, r1, r8
   13e38:	bhi	13e40 <strspn@plt+0x2d48>
   13e3c:	mov	fp, r3
   13e40:	rsb	r9, r0, r1
   13e44:	mov	r1, r4
   13e48:	uxth	r7, r7
   13e4c:	mov	r0, r9
   13e50:	bl	13aa4 <strspn@plt+0x29ac>
   13e54:	mov	r1, r4
   13e58:	mov	r5, r0
   13e5c:	mov	r0, r9
   13e60:	bl	13c90 <strspn@plt+0x2b98>
   13e64:	mul	sl, sl, r5
   13e68:	orr	r1, r7, r1, lsl #16
   13e6c:	cmp	sl, r1
   13e70:	bls	13e90 <strspn@plt+0x2d98>
   13e74:	adds	r8, r1, r8
   13e78:	sub	r3, r5, #1
   13e7c:	bcs	13e8c <strspn@plt+0x2d94>
   13e80:	cmp	sl, r8
   13e84:	subhi	r5, r5, #2
   13e88:	bhi	13e90 <strspn@plt+0x2d98>
   13e8c:	mov	r5, r3
   13e90:	orr	r3, r5, fp, lsl #16
   13e94:	mov	r4, #0
   13e98:	cmp	r6, #0
   13e9c:	mov	r0, r3
   13ea0:	mov	r1, r4
   13ea4:	beq	13eb0 <strspn@plt+0x2db8>
   13ea8:	rsbs	r0, r0, #0
   13eac:	rsc	r1, r1, #0
   13eb0:	add	sp, sp, #12
   13eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13eb8:	cmp	r3, r5
   13ebc:	movhi	r4, #0
   13ec0:	movhi	r3, r4
   13ec4:	bhi	13e98 <strspn@plt+0x2da0>
   13ec8:	clz	r5, r1
   13ecc:	cmp	r5, #0
   13ed0:	bne	140c0 <strspn@plt+0x2fc8>
   13ed4:	cmp	r1, ip
   13ed8:	cmpcs	r2, sl
   13edc:	movhi	r4, #0
   13ee0:	movls	r4, #1
   13ee4:	movls	r3, #1
   13ee8:	movls	r4, r5
   13eec:	movhi	r3, r4
   13ef0:	b	13e98 <strspn@plt+0x2da0>
   13ef4:	cmp	r2, #0
   13ef8:	bne	13f0c <strspn@plt+0x2e14>
   13efc:	mov	r1, r2
   13f00:	mov	r0, #1
   13f04:	bl	13aa4 <strspn@plt+0x29ac>
   13f08:	mov	r8, r0
   13f0c:	clz	r3, r8
   13f10:	cmp	r3, #0
   13f14:	bne	13fe4 <strspn@plt+0x2eec>
   13f18:	rsb	r9, r8, r9
   13f1c:	lsr	r5, r8, #16
   13f20:	uxth	sl, r8
   13f24:	mov	r4, #1
   13f28:	mov	r1, r5
   13f2c:	mov	r0, r9
   13f30:	bl	13aa4 <strspn@plt+0x29ac>
   13f34:	mov	r1, r5
   13f38:	mov	fp, r0
   13f3c:	mov	r0, r9
   13f40:	bl	13c90 <strspn@plt+0x2b98>
   13f44:	mul	r0, sl, fp
   13f48:	lsr	r2, r7, #16
   13f4c:	orr	r1, r2, r1, lsl #16
   13f50:	cmp	r0, r1
   13f54:	bls	13f74 <strspn@plt+0x2e7c>
   13f58:	adds	r1, r1, r8
   13f5c:	sub	r3, fp, #1
   13f60:	bcs	141e0 <strspn@plt+0x30e8>
   13f64:	cmp	r0, r1
   13f68:	subhi	fp, fp, #2
   13f6c:	addhi	r1, r1, r8
   13f70:	bls	141e0 <strspn@plt+0x30e8>
   13f74:	rsb	r2, r0, r1
   13f78:	mov	r1, r5
   13f7c:	str	r2, [sp]
   13f80:	uxth	r7, r7
   13f84:	mov	r0, r2
   13f88:	bl	13aa4 <strspn@plt+0x29ac>
   13f8c:	ldr	r2, [sp]
   13f90:	mov	r1, r5
   13f94:	mov	r9, r0
   13f98:	mov	r0, r2
   13f9c:	bl	13c90 <strspn@plt+0x2b98>
   13fa0:	mul	sl, sl, r9
   13fa4:	orr	r1, r7, r1, lsl #16
   13fa8:	cmp	sl, r1
   13fac:	bls	13fcc <strspn@plt+0x2ed4>
   13fb0:	adds	r8, r1, r8
   13fb4:	sub	r3, r9, #1
   13fb8:	bcs	13fc8 <strspn@plt+0x2ed0>
   13fbc:	cmp	sl, r8
   13fc0:	subhi	r9, r9, #2
   13fc4:	bhi	13fcc <strspn@plt+0x2ed4>
   13fc8:	mov	r9, r3
   13fcc:	orr	r3, r9, fp, lsl #16
   13fd0:	b	13e98 <strspn@plt+0x2da0>
   13fd4:	mvn	r6, r6
   13fd8:	rsbs	r2, r2, #0
   13fdc:	rsc	r3, r3, #0
   13fe0:	b	13da0 <strspn@plt+0x2ca8>
   13fe4:	lsl	r8, r8, r3
   13fe8:	rsb	fp, r3, #32
   13fec:	lsr	r4, r9, fp
   13ff0:	lsr	fp, r7, fp
   13ff4:	lsr	r5, r8, #16
   13ff8:	orr	fp, fp, r9, lsl r3
   13ffc:	mov	r0, r4
   14000:	lsl	r7, r7, r3
   14004:	mov	r1, r5
   14008:	uxth	sl, r8
   1400c:	bl	13aa4 <strspn@plt+0x29ac>
   14010:	mov	r1, r5
   14014:	mov	r3, r0
   14018:	mov	r0, r4
   1401c:	str	r3, [sp]
   14020:	bl	13c90 <strspn@plt+0x2b98>
   14024:	ldr	r3, [sp]
   14028:	lsr	r2, fp, #16
   1402c:	mul	r0, sl, r3
   14030:	orr	r1, r2, r1, lsl #16
   14034:	cmp	r0, r1
   14038:	bls	14058 <strspn@plt+0x2f60>
   1403c:	adds	r1, r1, r8
   14040:	sub	r2, r3, #1
   14044:	bcs	141f8 <strspn@plt+0x3100>
   14048:	cmp	r0, r1
   1404c:	subhi	r3, r3, #2
   14050:	addhi	r1, r1, r8
   14054:	bls	141f8 <strspn@plt+0x3100>
   14058:	rsb	r9, r0, r1
   1405c:	mov	r1, r5
   14060:	str	r3, [sp]
   14064:	uxth	fp, fp
   14068:	mov	r0, r9
   1406c:	bl	13aa4 <strspn@plt+0x29ac>
   14070:	mov	r1, r5
   14074:	mov	r4, r0
   14078:	mov	r0, r9
   1407c:	bl	13c90 <strspn@plt+0x2b98>
   14080:	mul	r9, sl, r4
   14084:	ldr	r3, [sp]
   14088:	orr	r1, fp, r1, lsl #16
   1408c:	cmp	r9, r1
   14090:	bls	140b4 <strspn@plt+0x2fbc>
   14094:	adds	r1, r1, r8
   14098:	sub	r2, r4, #1
   1409c:	bcs	140b0 <strspn@plt+0x2fb8>
   140a0:	cmp	r9, r1
   140a4:	subhi	r4, r4, #2
   140a8:	addhi	r1, r1, r8
   140ac:	bhi	140b4 <strspn@plt+0x2fbc>
   140b0:	mov	r4, r2
   140b4:	rsb	r9, r9, r1
   140b8:	orr	r4, r4, r3, lsl #16
   140bc:	b	13f28 <strspn@plt+0x2e30>
   140c0:	rsb	sl, r5, #32
   140c4:	lsl	r3, r2, r5
   140c8:	lsr	r0, r2, sl
   140cc:	lsr	r2, ip, sl
   140d0:	orr	r4, r0, r1, lsl r5
   140d4:	lsr	sl, r7, sl
   140d8:	mov	r0, r2
   140dc:	orr	sl, sl, ip, lsl r5
   140e0:	lsr	r9, r4, #16
   140e4:	str	r3, [sp, #4]
   140e8:	str	r2, [sp]
   140ec:	uxth	fp, r4
   140f0:	mov	r1, r9
   140f4:	bl	13aa4 <strspn@plt+0x29ac>
   140f8:	ldr	r2, [sp]
   140fc:	mov	r1, r9
   14100:	mov	r8, r0
   14104:	mov	r0, r2
   14108:	bl	13c90 <strspn@plt+0x2b98>
   1410c:	mul	r0, fp, r8
   14110:	lsr	r2, sl, #16
   14114:	orr	r1, r2, r1, lsl #16
   14118:	cmp	r0, r1
   1411c:	bls	1413c <strspn@plt+0x3044>
   14120:	adds	r1, r1, r4
   14124:	sub	r2, r8, #1
   14128:	bcs	141f0 <strspn@plt+0x30f8>
   1412c:	cmp	r0, r1
   14130:	subhi	r8, r8, #2
   14134:	addhi	r1, r1, r4
   14138:	bls	141f0 <strspn@plt+0x30f8>
   1413c:	rsb	ip, r0, r1
   14140:	mov	r1, r9
   14144:	str	ip, [sp]
   14148:	mov	r0, ip
   1414c:	bl	13aa4 <strspn@plt+0x29ac>
   14150:	ldr	ip, [sp]
   14154:	mov	r1, r9
   14158:	mov	r2, r0
   1415c:	mov	r0, ip
   14160:	str	r2, [sp]
   14164:	bl	13c90 <strspn@plt+0x2b98>
   14168:	ldr	r2, [sp]
   1416c:	uxth	ip, sl
   14170:	mul	fp, fp, r2
   14174:	orr	ip, ip, r1, lsl #16
   14178:	cmp	fp, ip
   1417c:	bls	1419c <strspn@plt+0x30a4>
   14180:	adds	ip, ip, r4
   14184:	sub	r1, r2, #1
   14188:	bcs	141e8 <strspn@plt+0x30f0>
   1418c:	cmp	fp, ip
   14190:	subhi	r2, r2, #2
   14194:	addhi	ip, ip, r4
   14198:	bls	141e8 <strspn@plt+0x30f0>
   1419c:	ldr	r0, [sp, #4]
   141a0:	orr	r1, r2, r8, lsl #16
   141a4:	rsb	fp, fp, ip
   141a8:	umull	r2, r3, r1, r0
   141ac:	cmp	fp, r3
   141b0:	bcc	141d4 <strspn@plt+0x30dc>
   141b4:	movne	r4, #0
   141b8:	moveq	r4, #1
   141bc:	cmp	r2, r7, lsl r5
   141c0:	movls	r4, #0
   141c4:	andhi	r4, r4, #1
   141c8:	cmp	r4, #0
   141cc:	moveq	r3, r1
   141d0:	beq	13e98 <strspn@plt+0x2da0>
   141d4:	sub	r3, r1, #1
   141d8:	mov	r4, #0
   141dc:	b	13e98 <strspn@plt+0x2da0>
   141e0:	mov	fp, r3
   141e4:	b	13f74 <strspn@plt+0x2e7c>
   141e8:	mov	r2, r1
   141ec:	b	1419c <strspn@plt+0x30a4>
   141f0:	mov	r8, r2
   141f4:	b	1413c <strspn@plt+0x3044>
   141f8:	mov	r3, r2
   141fc:	b	14058 <strspn@plt+0x2f60>
   14200:	cmp	r3, #0
   14204:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14208:	mov	r6, r0
   1420c:	sub	sp, sp, #12
   14210:	mov	r5, r1
   14214:	mov	r7, r0
   14218:	mov	r4, r2
   1421c:	mov	r8, r1
   14220:	bne	14300 <strspn@plt+0x3208>
   14224:	cmp	r2, r1
   14228:	bls	1433c <strspn@plt+0x3244>
   1422c:	clz	r3, r2
   14230:	cmp	r3, #0
   14234:	rsbne	r8, r3, #32
   14238:	lslne	r4, r2, r3
   1423c:	lsrne	r8, r0, r8
   14240:	lslne	r7, r0, r3
   14244:	orrne	r8, r8, r1, lsl r3
   14248:	lsr	r5, r4, #16
   1424c:	uxth	sl, r4
   14250:	mov	r1, r5
   14254:	mov	r0, r8
   14258:	bl	13aa4 <strspn@plt+0x29ac>
   1425c:	mov	r1, r5
   14260:	mov	r9, r0
   14264:	mov	r0, r8
   14268:	bl	13c90 <strspn@plt+0x2b98>
   1426c:	mul	r0, sl, r9
   14270:	lsr	r3, r7, #16
   14274:	orr	r1, r3, r1, lsl #16
   14278:	cmp	r0, r1
   1427c:	bls	142a0 <strspn@plt+0x31a8>
   14280:	adds	r1, r1, r4
   14284:	sub	r2, r9, #1
   14288:	bcs	1429c <strspn@plt+0x31a4>
   1428c:	cmp	r0, r1
   14290:	subhi	r9, r9, #2
   14294:	addhi	r1, r1, r4
   14298:	bhi	142a0 <strspn@plt+0x31a8>
   1429c:	mov	r9, r2
   142a0:	rsb	r8, r0, r1
   142a4:	mov	r1, r5
   142a8:	uxth	r7, r7
   142ac:	mov	r0, r8
   142b0:	bl	13aa4 <strspn@plt+0x29ac>
   142b4:	mov	r1, r5
   142b8:	mov	r6, r0
   142bc:	mov	r0, r8
   142c0:	bl	13c90 <strspn@plt+0x2b98>
   142c4:	mul	sl, sl, r6
   142c8:	orr	r1, r7, r1, lsl #16
   142cc:	cmp	sl, r1
   142d0:	bls	142ec <strspn@plt+0x31f4>
   142d4:	adds	r4, r1, r4
   142d8:	sub	r3, r6, #1
   142dc:	bcs	145e8 <strspn@plt+0x34f0>
   142e0:	cmp	sl, r4
   142e4:	subhi	r6, r6, #2
   142e8:	bls	145e8 <strspn@plt+0x34f0>
   142ec:	orr	r0, r6, r9, lsl #16
   142f0:	mov	r6, #0
   142f4:	mov	r1, r6
   142f8:	add	sp, sp, #12
   142fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14300:	cmp	r3, r1
   14304:	movhi	r6, #0
   14308:	movhi	r0, r6
   1430c:	bhi	142f4 <strspn@plt+0x31fc>
   14310:	clz	r7, r3
   14314:	cmp	r7, #0
   14318:	bne	14418 <strspn@plt+0x3320>
   1431c:	cmp	r3, r1
   14320:	cmpcs	r2, r6
   14324:	movhi	r6, #0
   14328:	movls	r6, #1
   1432c:	movls	r0, #1
   14330:	movls	r6, r7
   14334:	movhi	r0, r6
   14338:	b	142f4 <strspn@plt+0x31fc>
   1433c:	cmp	r2, #0
   14340:	bne	14354 <strspn@plt+0x325c>
   14344:	mov	r1, r2
   14348:	mov	r0, #1
   1434c:	bl	13aa4 <strspn@plt+0x29ac>
   14350:	mov	r4, r0
   14354:	clz	r3, r4
   14358:	cmp	r3, #0
   1435c:	bne	14514 <strspn@plt+0x341c>
   14360:	rsb	r5, r4, r5
   14364:	lsr	r8, r4, #16
   14368:	uxth	sl, r4
   1436c:	mov	r6, #1
   14370:	mov	r1, r8
   14374:	mov	r0, r5
   14378:	bl	13aa4 <strspn@plt+0x29ac>
   1437c:	mov	r1, r8
   14380:	mov	r9, r0
   14384:	mov	r0, r5
   14388:	bl	13c90 <strspn@plt+0x2b98>
   1438c:	mul	r0, sl, r9
   14390:	lsr	r3, r7, #16
   14394:	orr	r1, r3, r1, lsl #16
   14398:	cmp	r0, r1
   1439c:	bls	143bc <strspn@plt+0x32c4>
   143a0:	adds	r1, r1, r4
   143a4:	sub	r2, r9, #1
   143a8:	bcs	145f0 <strspn@plt+0x34f8>
   143ac:	cmp	r0, r1
   143b0:	subhi	r9, r9, #2
   143b4:	addhi	r1, r1, r4
   143b8:	bls	145f0 <strspn@plt+0x34f8>
   143bc:	rsb	fp, r0, r1
   143c0:	mov	r1, r8
   143c4:	uxth	r7, r7
   143c8:	mov	r0, fp
   143cc:	bl	13aa4 <strspn@plt+0x29ac>
   143d0:	mov	r1, r8
   143d4:	mov	r5, r0
   143d8:	mov	r0, fp
   143dc:	bl	13c90 <strspn@plt+0x2b98>
   143e0:	mul	sl, sl, r5
   143e4:	orr	r1, r7, r1, lsl #16
   143e8:	cmp	sl, r1
   143ec:	bls	14408 <strspn@plt+0x3310>
   143f0:	adds	r4, r1, r4
   143f4:	sub	r3, r5, #1
   143f8:	bcs	145f8 <strspn@plt+0x3500>
   143fc:	cmp	sl, r4
   14400:	subhi	r5, r5, #2
   14404:	bls	145f8 <strspn@plt+0x3500>
   14408:	orr	r0, r5, r9, lsl #16
   1440c:	mov	r1, r6
   14410:	add	sp, sp, #12
   14414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14418:	rsb	r1, r7, #32
   1441c:	lsl	r0, r2, r7
   14420:	lsr	r2, r2, r1
   14424:	lsr	fp, r5, r1
   14428:	orr	r8, r2, r3, lsl r7
   1442c:	lsr	r1, r6, r1
   14430:	str	r0, [sp, #4]
   14434:	orr	r5, r1, r5, lsl r7
   14438:	lsr	r9, r8, #16
   1443c:	mov	r0, fp
   14440:	uxth	sl, r8
   14444:	mov	r1, r9
   14448:	bl	13aa4 <strspn@plt+0x29ac>
   1444c:	mov	r1, r9
   14450:	mov	r4, r0
   14454:	mov	r0, fp
   14458:	bl	13c90 <strspn@plt+0x2b98>
   1445c:	mul	r0, sl, r4
   14460:	lsr	ip, r5, #16
   14464:	orr	r1, ip, r1, lsl #16
   14468:	cmp	r0, r1
   1446c:	bls	14480 <strspn@plt+0x3388>
   14470:	adds	r1, r1, r8
   14474:	sub	r2, r4, #1
   14478:	bcc	14614 <strspn@plt+0x351c>
   1447c:	mov	r4, r2
   14480:	rsb	ip, r0, r1
   14484:	mov	r1, r9
   14488:	str	ip, [sp]
   1448c:	uxth	r5, r5
   14490:	mov	r0, ip
   14494:	bl	13aa4 <strspn@plt+0x29ac>
   14498:	ldr	ip, [sp]
   1449c:	mov	r1, r9
   144a0:	mov	fp, r0
   144a4:	mov	r0, ip
   144a8:	bl	13c90 <strspn@plt+0x2b98>
   144ac:	mul	sl, sl, fp
   144b0:	orr	r1, r5, r1, lsl #16
   144b4:	cmp	sl, r1
   144b8:	bls	144cc <strspn@plt+0x33d4>
   144bc:	adds	r1, r1, r8
   144c0:	sub	r2, fp, #1
   144c4:	bcc	14600 <strspn@plt+0x3508>
   144c8:	mov	fp, r2
   144cc:	ldr	r3, [sp, #4]
   144d0:	orr	r0, fp, r4, lsl #16
   144d4:	rsb	sl, sl, r1
   144d8:	umull	r4, r5, r0, r3
   144dc:	cmp	sl, r5
   144e0:	bcc	14500 <strspn@plt+0x3408>
   144e4:	movne	r3, #0
   144e8:	moveq	r3, #1
   144ec:	cmp	r4, r6, lsl r7
   144f0:	movls	r6, #0
   144f4:	andhi	r6, r3, #1
   144f8:	cmp	r6, #0
   144fc:	beq	142f4 <strspn@plt+0x31fc>
   14500:	mov	r6, #0
   14504:	sub	r0, r0, #1
   14508:	mov	r1, r6
   1450c:	add	sp, sp, #12
   14510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14514:	lsl	r4, r4, r3
   14518:	rsb	r9, r3, #32
   1451c:	lsr	r2, r5, r9
   14520:	lsr	r9, r6, r9
   14524:	lsr	r8, r4, #16
   14528:	orr	r9, r9, r5, lsl r3
   1452c:	mov	r0, r2
   14530:	lsl	r7, r6, r3
   14534:	mov	r1, r8
   14538:	str	r2, [sp]
   1453c:	bl	13aa4 <strspn@plt+0x29ac>
   14540:	ldr	r2, [sp]
   14544:	mov	r1, r8
   14548:	uxth	sl, r4
   1454c:	mov	fp, r0
   14550:	mov	r0, r2
   14554:	bl	13c90 <strspn@plt+0x2b98>
   14558:	mul	r0, sl, fp
   1455c:	lsr	r3, r9, #16
   14560:	orr	r1, r3, r1, lsl #16
   14564:	cmp	r0, r1
   14568:	bls	14588 <strspn@plt+0x3490>
   1456c:	adds	r1, r1, r4
   14570:	sub	r3, fp, #1
   14574:	bcs	14628 <strspn@plt+0x3530>
   14578:	cmp	r0, r1
   1457c:	subhi	fp, fp, #2
   14580:	addhi	r1, r1, r4
   14584:	bls	14628 <strspn@plt+0x3530>
   14588:	rsb	r5, r0, r1
   1458c:	mov	r1, r8
   14590:	uxth	r9, r9
   14594:	mov	r0, r5
   14598:	bl	13aa4 <strspn@plt+0x29ac>
   1459c:	mov	r1, r8
   145a0:	mov	r6, r0
   145a4:	mov	r0, r5
   145a8:	bl	13c90 <strspn@plt+0x2b98>
   145ac:	mul	r5, sl, r6
   145b0:	orr	r1, r9, r1, lsl #16
   145b4:	cmp	r5, r1
   145b8:	bls	145dc <strspn@plt+0x34e4>
   145bc:	adds	r1, r1, r4
   145c0:	sub	r3, r6, #1
   145c4:	bcs	145d8 <strspn@plt+0x34e0>
   145c8:	cmp	r5, r1
   145cc:	subhi	r6, r6, #2
   145d0:	addhi	r1, r1, r4
   145d4:	bhi	145dc <strspn@plt+0x34e4>
   145d8:	mov	r6, r3
   145dc:	rsb	r5, r5, r1
   145e0:	orr	r6, r6, fp, lsl #16
   145e4:	b	14370 <strspn@plt+0x3278>
   145e8:	mov	r6, r3
   145ec:	b	142ec <strspn@plt+0x31f4>
   145f0:	mov	r9, r2
   145f4:	b	143bc <strspn@plt+0x32c4>
   145f8:	mov	r5, r3
   145fc:	b	14408 <strspn@plt+0x3310>
   14600:	cmp	sl, r1
   14604:	subhi	fp, fp, #2
   14608:	addhi	r1, r1, r8
   1460c:	bhi	144cc <strspn@plt+0x33d4>
   14610:	b	144c8 <strspn@plt+0x33d0>
   14614:	cmp	r0, r1
   14618:	subhi	r4, r4, #2
   1461c:	addhi	r1, r1, r8
   14620:	bhi	14480 <strspn@plt+0x3388>
   14624:	b	1447c <strspn@plt+0x3384>
   14628:	mov	fp, r3
   1462c:	b	14588 <strspn@plt+0x3490>
   14630:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   14634:	mov	r7, r0
   14638:	ldr	r6, [pc, #76]	; 1468c <strspn@plt+0x3594>
   1463c:	mov	r8, r1
   14640:	ldr	r5, [pc, #72]	; 14690 <strspn@plt+0x3598>
   14644:	mov	r9, r2
   14648:	add	r6, pc, r6
   1464c:	bl	10e38 <calloc@plt-0x20>
   14650:	add	r5, pc, r5
   14654:	rsb	r6, r5, r6
   14658:	asrs	r6, r6, #2
   1465c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   14660:	sub	r5, r5, #4
   14664:	mov	r4, #0
   14668:	add	r4, r4, #1
   1466c:	ldr	r3, [r5, #4]!
   14670:	mov	r0, r7
   14674:	mov	r1, r8
   14678:	mov	r2, r9
   1467c:	blx	r3
   14680:	cmp	r4, r6
   14684:	bne	14668 <strspn@plt+0x3570>
   14688:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1468c:			; <UNDEFINED> instruction: 0x000118b0
   14690:	andeq	r1, r1, r4, lsr #17
   14694:	bx	lr
   14698:	ldr	r3, [pc, #28]	; 146bc <strspn@plt+0x35c4>
   1469c:	mov	r1, #0
   146a0:	ldr	r2, [pc, #24]	; 146c0 <strspn@plt+0x35c8>
   146a4:	add	r3, pc, r3
   146a8:	ldr	r3, [r3, r2]
   146ac:	cmp	r3, #0
   146b0:	ldrne	r2, [r3]
   146b4:	moveq	r2, r3
   146b8:	b	10fe4 <__cxa_atexit@plt>
   146bc:	andeq	r1, r1, r4, asr r9
   146c0:	strdeq	r0, [r0], -r8

Disassembly of section .fini:

000146c4 <.fini>:
   146c4:	push	{r3, lr}
   146c8:	pop	{r3, pc}
