
centos-preinstalled/test:     file format elf32-littlearm


Disassembly of section .init:

00010ecc <.init>:
   10ecc:	push	{r3, lr}
   10ed0:	bl	112e4 <__lxstat64@plt+0x140>
   10ed4:	pop	{r3, pc}

Disassembly of section .plt:

00010ed8 <fdopen@plt-0x14>:
   10ed8:	push	{lr}		; (str lr, [sp, #-4]!)
   10edc:	ldr	lr, [pc, #4]	; 10ee8 <fdopen@plt-0x4>
   10ee0:	add	lr, pc, lr
   10ee4:	ldr	pc, [lr, #8]!
   10ee8:	andeq	r7, r1, r8, lsl r1

00010eec <fdopen@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #94208	; 0x17000
   10ef4:	ldr	pc, [ip, #280]!	; 0x118

00010ef8 <calloc@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #94208	; 0x17000
   10f00:	ldr	pc, [ip, #272]!	; 0x110

00010f04 <fputs_unlocked@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #94208	; 0x17000
   10f0c:	ldr	pc, [ip, #264]!	; 0x108

00010f10 <raise@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #94208	; 0x17000
   10f18:	ldr	pc, [ip, #256]!	; 0x100

00010f1c <strcmp@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #94208	; 0x17000
   10f24:	ldr	pc, [ip, #248]!	; 0xf8

00010f28 <strtol@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #94208	; 0x17000
   10f30:	ldr	pc, [ip, #240]!	; 0xf0

00010f34 <fflush@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #94208	; 0x17000
   10f3c:	ldr	pc, [ip, #232]!	; 0xe8

00010f40 <free@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #94208	; 0x17000
   10f48:	ldr	pc, [ip, #224]!	; 0xe0

00010f4c <_exit@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #94208	; 0x17000
   10f54:	ldr	pc, [ip, #216]!	; 0xd8

00010f58 <memcpy@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #94208	; 0x17000
   10f60:	ldr	pc, [ip, #208]!	; 0xd0

00010f64 <mbsinit@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #94208	; 0x17000
   10f6c:	ldr	pc, [ip, #200]!	; 0xc8

00010f70 <memcmp@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #94208	; 0x17000
   10f78:	ldr	pc, [ip, #192]!	; 0xc0

00010f7c <dcgettext@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #94208	; 0x17000
   10f84:	ldr	pc, [ip, #184]!	; 0xb8

00010f88 <__stack_chk_fail@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #94208	; 0x17000
   10f90:	ldr	pc, [ip, #176]!	; 0xb0

00010f94 <realloc@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #94208	; 0x17000
   10f9c:	ldr	pc, [ip, #168]!	; 0xa8

00010fa0 <textdomain@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #94208	; 0x17000
   10fa8:	ldr	pc, [ip, #160]!	; 0xa0

00010fac <geteuid@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #94208	; 0x17000
   10fb4:	ldr	pc, [ip, #152]!	; 0x98

00010fb8 <fflush_unlocked@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #94208	; 0x17000
   10fc0:	ldr	pc, [ip, #144]!	; 0x90

00010fc4 <iswprint@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #94208	; 0x17000
   10fcc:	ldr	pc, [ip, #136]!	; 0x88

00010fd0 <getegid@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #94208	; 0x17000
   10fd8:	ldr	pc, [ip, #128]!	; 0x80

00010fdc <fwrite@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #94208	; 0x17000
   10fe4:	ldr	pc, [ip, #120]!	; 0x78

00010fe8 <lseek64@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #94208	; 0x17000
   10ff0:	ldr	pc, [ip, #112]!	; 0x70

00010ff4 <__ctype_get_mb_cur_max@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #94208	; 0x17000
   10ffc:	ldr	pc, [ip, #104]!	; 0x68

00011000 <strcpy@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #94208	; 0x17000
   11008:	ldr	pc, [ip, #96]!	; 0x60

0001100c <__fpending@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #94208	; 0x17000
   11014:	ldr	pc, [ip, #88]!	; 0x58

00011018 <mbrtowc@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #94208	; 0x17000
   11020:	ldr	pc, [ip, #80]!	; 0x50

00011024 <error@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #94208	; 0x17000
   1102c:	ldr	pc, [ip, #72]!	; 0x48

00011030 <open64@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #94208	; 0x17000
   11038:	ldr	pc, [ip, #64]!	; 0x40

0001103c <getenv@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #94208	; 0x17000
   11044:	ldr	pc, [ip, #56]!	; 0x38

00011048 <malloc@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #94208	; 0x17000
   11050:	ldr	pc, [ip, #48]!	; 0x30

00011054 <__libc_start_main@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #94208	; 0x17000
   1105c:	ldr	pc, [ip, #40]!	; 0x28

00011060 <__freading@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #94208	; 0x17000
   11068:	ldr	pc, [ip, #32]!

0001106c <__gmon_start__@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #94208	; 0x17000
   11074:	ldr	pc, [ip, #24]!

00011078 <__ctype_b_loc@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #94208	; 0x17000
   11080:	ldr	pc, [ip, #16]!

00011084 <exit@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #94208	; 0x17000
   1108c:	ldr	pc, [ip, #8]!

00011090 <strlen@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #94208	; 0x17000
   11098:	ldr	pc, [ip, #0]!

0001109c <ungetc@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #90112	; 0x16000
   110a4:	ldr	pc, [ip, #4088]!	; 0xff8

000110a8 <__errno_location@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #90112	; 0x16000
   110b0:	ldr	pc, [ip, #4080]!	; 0xff0

000110b4 <__cxa_atexit@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #90112	; 0x16000
   110bc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110c0 <memset@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #90112	; 0x16000
   110c8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110cc <fscanf@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #90112	; 0x16000
   110d4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110d8 <__printf_chk@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #90112	; 0x16000
   110e0:	ldr	pc, [ip, #4048]!	; 0xfd0

000110e4 <fileno@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #90112	; 0x16000
   110ec:	ldr	pc, [ip, #4040]!	; 0xfc8

000110f0 <__fprintf_chk@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #90112	; 0x16000
   110f8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110fc <fclose@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #90112	; 0x16000
   11104:	ldr	pc, [ip, #4024]!	; 0xfb8

00011108 <fseeko64@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #90112	; 0x16000
   11110:	ldr	pc, [ip, #4016]!	; 0xfb0

00011114 <__uflow@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #90112	; 0x16000
   1111c:	ldr	pc, [ip, #4008]!	; 0xfa8

00011120 <__overflow@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #90112	; 0x16000
   11128:	ldr	pc, [ip, #4000]!	; 0xfa0

0001112c <setlocale@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #90112	; 0x16000
   11134:	ldr	pc, [ip, #3992]!	; 0xf98

00011138 <strrchr@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #90112	; 0x16000
   11140:	ldr	pc, [ip, #3984]!	; 0xf90

00011144 <nl_langinfo@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #90112	; 0x16000
   1114c:	ldr	pc, [ip, #3976]!	; 0xf88

00011150 <euidaccess@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #90112	; 0x16000
   11158:	ldr	pc, [ip, #3968]!	; 0xf80

0001115c <bindtextdomain@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #90112	; 0x16000
   11164:	ldr	pc, [ip, #3960]!	; 0xf78

00011168 <__xstat64@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #90112	; 0x16000
   11170:	ldr	pc, [ip, #3952]!	; 0xf70

00011174 <isatty@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #90112	; 0x16000
   1117c:	ldr	pc, [ip, #3944]!	; 0xf68

00011180 <strncmp@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #90112	; 0x16000
   11188:	ldr	pc, [ip, #3936]!	; 0xf60

0001118c <abort@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #90112	; 0x16000
   11194:	ldr	pc, [ip, #3928]!	; 0xf58

00011198 <close@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #90112	; 0x16000
   111a0:	ldr	pc, [ip, #3920]!	; 0xf50

000111a4 <__lxstat64@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #90112	; 0x16000
   111ac:	ldr	pc, [ip, #3912]!	; 0xf48

Disassembly of section .text:

000111b0 <close_stdout@@Base-0x1e34>:
   111b0:	push	{r4, r5, r6, lr}
   111b4:	mov	r5, r0
   111b8:	ldr	r0, [r1]
   111bc:	mov	r6, r1
   111c0:	bl	13204 <close_stdout@@Base+0x220>
   111c4:	ldr	r1, [pc, #188]	; 11288 <__lxstat64@plt+0xe4>
   111c8:	ldr	r4, [pc, #188]	; 1128c <__lxstat64@plt+0xe8>
   111cc:	mov	r0, #6
   111d0:	add	r1, pc, r1
   111d4:	bl	1112c <setlocale@plt>
   111d8:	add	r4, pc, r4
   111dc:	ldr	r1, [pc, #172]	; 11290 <__lxstat64@plt+0xec>
   111e0:	mov	r0, r4
   111e4:	add	r1, pc, r1
   111e8:	bl	1115c <bindtextdomain@plt>
   111ec:	mov	r0, r4
   111f0:	bl	10fa0 <textdomain@plt>
   111f4:	ldr	r3, [pc, #152]	; 11294 <__lxstat64@plt+0xf0>
   111f8:	ldr	r1, [pc, #152]	; 11298 <__lxstat64@plt+0xf4>
   111fc:	mov	r0, #2
   11200:	add	r3, pc, r3
   11204:	ldr	r2, [pc, #144]	; 1129c <__lxstat64@plt+0xf8>
   11208:	ldr	r4, [pc, #144]	; 112a0 <__lxstat64@plt+0xfc>
   1120c:	ldr	r1, [r3, r1]
   11210:	add	r4, pc, r4
   11214:	str	r0, [r1]
   11218:	ldr	r0, [r3, r2]
   1121c:	bl	161ec <close_stdout@@Base+0x3208>
   11220:	cmp	r5, #1
   11224:	mov	r0, #1
   11228:	str	r6, [r4]
   1122c:	str	r5, [r4, #4]
   11230:	str	r0, [r4, #8]
   11234:	ble	11284 <__lxstat64@plt+0xe0>
   11238:	sub	r0, r5, #1
   1123c:	bl	12754 <__lxstat64@plt+0x15b0>
   11240:	ldmib	r4, {r3, r5}
   11244:	cmp	r5, r3
   11248:	beq	1127c <__lxstat64@plt+0xd8>
   1124c:	ldr	r1, [pc, #80]	; 112a4 <__lxstat64@plt+0x100>
   11250:	mov	r2, #5
   11254:	mov	r0, #0
   11258:	add	r1, pc, r1
   1125c:	bl	10f7c <dcgettext@plt>
   11260:	ldr	r3, [r4]
   11264:	mov	r6, r0
   11268:	ldr	r0, [r3, r5, lsl #2]
   1126c:	bl	14a54 <close_stdout@@Base+0x1a70>
   11270:	mov	r1, r0
   11274:	mov	r0, r6
   11278:	bl	115a4 <__lxstat64@plt+0x400>
   1127c:	rsbs	r0, r0, #1
   11280:	movcc	r0, #0
   11284:	bl	11084 <exit@plt>
   11288:	strdeq	r5, [r0], -ip
   1128c:	andeq	r5, r0, r4, ror #26
   11290:	andeq	r5, r0, ip, lsl lr
   11294:	strdeq	r6, [r1], -r8
   11298:	andeq	r0, r0, r4, lsl r1
   1129c:	andeq	r0, r0, r4, lsl #2
   112a0:	andeq	r6, r1, r8, asr pc
   112a4:			; <UNDEFINED> instruction: 0x00005dbc
   112a8:	mov	fp, #0
   112ac:	mov	lr, #0
   112b0:	pop	{r1}		; (ldr r1, [sp], #4)
   112b4:	mov	r2, sp
   112b8:	push	{r2}		; (str r2, [sp, #-4]!)
   112bc:	push	{r0}		; (str r0, [sp, #-4]!)
   112c0:	ldr	ip, [pc, #16]	; 112d8 <__lxstat64@plt+0x134>
   112c4:	push	{ip}		; (str ip, [sp, #-4]!)
   112c8:	ldr	r0, [pc, #12]	; 112dc <__lxstat64@plt+0x138>
   112cc:	ldr	r3, [pc, #12]	; 112e0 <__lxstat64@plt+0x13c>
   112d0:	bl	11054 <__libc_start_main@plt>
   112d4:	bl	1118c <abort@plt>
   112d8:	andeq	r6, r1, r8, ror #3
   112dc:			; <UNDEFINED> instruction: 0x000111b0
   112e0:	andeq	r6, r1, r4, lsl #3
   112e4:	ldr	r3, [pc, #20]	; 11300 <__lxstat64@plt+0x15c>
   112e8:	ldr	r2, [pc, #20]	; 11304 <__lxstat64@plt+0x160>
   112ec:	add	r3, pc, r3
   112f0:	ldr	r2, [r3, r2]
   112f4:	cmp	r2, #0
   112f8:	bxeq	lr
   112fc:	b	1106c <__gmon_start__@plt>
   11300:	andeq	r6, r1, ip, lsl #26
   11304:	andeq	r0, r0, r8, lsl #2
   11308:	push	{r3, lr}
   1130c:	movw	r0, #33132	; 0x816c
   11310:	ldr	r3, [pc, #36]	; 1133c <__lxstat64@plt+0x198>
   11314:	movt	r0, #2
   11318:	rsb	r3, r0, r3
   1131c:	cmp	r3, #6
   11320:	popls	{r3, pc}
   11324:	movw	r3, #0
   11328:	movt	r3, #0
   1132c:	cmp	r3, #0
   11330:	popeq	{r3, pc}
   11334:	blx	r3
   11338:	pop	{r3, pc}
   1133c:	andeq	r8, r2, pc, ror #2
   11340:	push	{r3, lr}
   11344:	movw	r0, #33132	; 0x816c
   11348:	movw	r3, #33132	; 0x816c
   1134c:	movt	r0, #2
   11350:	movt	r3, #2
   11354:	rsb	r3, r0, r3
   11358:	asr	r3, r3, #2
   1135c:	add	r3, r3, r3, lsr #31
   11360:	asrs	r1, r3, #1
   11364:	popeq	{r3, pc}
   11368:	movw	r2, #0
   1136c:	movt	r2, #0
   11370:	cmp	r2, #0
   11374:	popeq	{r3, pc}
   11378:	blx	r2
   1137c:	pop	{r3, pc}
   11380:	push	{r4, lr}
   11384:	movw	r4, #33132	; 0x816c
   11388:	movt	r4, #2
   1138c:	ldrb	r3, [r4]
   11390:	cmp	r3, #0
   11394:	popne	{r4, pc}
   11398:	bl	11308 <__lxstat64@plt+0x164>
   1139c:	mov	r3, #1
   113a0:	strb	r3, [r4]
   113a4:	pop	{r4, pc}
   113a8:	movw	r0, #32480	; 0x7ee0
   113ac:	movt	r0, #2
   113b0:	push	{r3, lr}
   113b4:	ldr	r3, [r0]
   113b8:	cmp	r3, #0
   113bc:	beq	113d4 <__lxstat64@plt+0x230>
   113c0:	movw	r3, #0
   113c4:	movt	r3, #0
   113c8:	cmp	r3, #0
   113cc:	beq	113d4 <__lxstat64@plt+0x230>
   113d0:	blx	r3
   113d4:	pop	{r3, lr}
   113d8:	b	11340 <__lxstat64@plt+0x19c>
   113dc:	ldrb	r3, [r0]
   113e0:	subs	r2, r3, #61	; 0x3d
   113e4:	bne	113fc <__lxstat64@plt+0x258>
   113e8:	ldrb	r1, [r0, #1]
   113ec:	cmp	r1, #0
   113f0:	bne	113fc <__lxstat64@plt+0x258>
   113f4:	mov	r0, #1
   113f8:	bx	lr
   113fc:	cmp	r3, #33	; 0x21
   11400:	bne	1141c <__lxstat64@plt+0x278>
   11404:	ldrb	r1, [r0, #1]
   11408:	cmp	r1, #61	; 0x3d
   1140c:	bne	1141c <__lxstat64@plt+0x278>
   11410:	ldrb	r1, [r0, #2]
   11414:	cmp	r1, #0
   11418:	beq	113f4 <__lxstat64@plt+0x250>
   1141c:	cmp	r2, #0
   11420:	bne	1143c <__lxstat64@plt+0x298>
   11424:	ldrb	r2, [r0, #1]
   11428:	cmp	r2, #61	; 0x3d
   1142c:	bne	1143c <__lxstat64@plt+0x298>
   11430:	ldrb	r1, [r0, #2]
   11434:	cmp	r1, #0
   11438:	beq	113f4 <__lxstat64@plt+0x250>
   1143c:	subs	r3, r3, #45	; 0x2d
   11440:	bne	11478 <__lxstat64@plt+0x2d4>
   11444:	ldrb	r3, [r0, #1]
   11448:	cmp	r3, #110	; 0x6e
   1144c:	beq	11484 <__lxstat64@plt+0x2e0>
   11450:	cmp	r3, #111	; 0x6f
   11454:	bne	114b8 <__lxstat64@plt+0x314>
   11458:	ldrb	r1, [r0, #2]
   1145c:	cmp	r1, #116	; 0x74
   11460:	beq	11490 <__lxstat64@plt+0x2ec>
   11464:	subs	r3, r3, #103	; 0x67
   11468:	bne	11478 <__lxstat64@plt+0x2d4>
   1146c:	ldrb	r1, [r0, #2]
   11470:	subs	r3, r1, #101	; 0x65
   11474:	ldrbeq	r3, [r0, #3]
   11478:	rsbs	r0, r3, #1
   1147c:	movcc	r0, #0
   11480:	bx	lr
   11484:	ldrb	r1, [r0, #2]
   11488:	cmp	r1, #116	; 0x74
   1148c:	bne	114ac <__lxstat64@plt+0x308>
   11490:	ldrb	r2, [r0, #3]
   11494:	cmp	r2, #0
   11498:	bne	11464 <__lxstat64@plt+0x2c0>
   1149c:	b	113f4 <__lxstat64@plt+0x250>
   114a0:	cmp	r3, #110	; 0x6e
   114a4:	bne	114d8 <__lxstat64@plt+0x334>
   114a8:	ldrb	r1, [r0, #2]
   114ac:	cmp	r1, #101	; 0x65
   114b0:	bne	11464 <__lxstat64@plt+0x2c0>
   114b4:	b	11490 <__lxstat64@plt+0x2ec>
   114b8:	cmp	r3, #101	; 0x65
   114bc:	bne	114a0 <__lxstat64@plt+0x2fc>
   114c0:	ldrb	r1, [r0, #2]
   114c4:	cmp	r1, #102	; 0x66
   114c8:	beq	11490 <__lxstat64@plt+0x2ec>
   114cc:	cmp	r1, #113	; 0x71
   114d0:	beq	11490 <__lxstat64@plt+0x2ec>
   114d4:	b	11464 <__lxstat64@plt+0x2c0>
   114d8:	cmp	r3, #108	; 0x6c
   114dc:	bne	11508 <__lxstat64@plt+0x364>
   114e0:	ldrb	r3, [r0, #2]
   114e4:	cmp	r3, #116	; 0x74
   114e8:	beq	114f4 <__lxstat64@plt+0x350>
   114ec:	cmp	r3, #101	; 0x65
   114f0:	bne	11500 <__lxstat64@plt+0x35c>
   114f4:	ldrb	r3, [r0, #3]
   114f8:	cmp	r3, #0
   114fc:	beq	113f4 <__lxstat64@plt+0x250>
   11500:	mov	r3, #5
   11504:	b	11478 <__lxstat64@plt+0x2d4>
   11508:	cmp	r3, #103	; 0x67
   1150c:	bne	11464 <__lxstat64@plt+0x2c0>
   11510:	ldrb	r1, [r0, #2]
   11514:	cmp	r1, #116	; 0x74
   11518:	bne	11470 <__lxstat64@plt+0x2cc>
   1151c:	ldrb	r3, [r0, #3]
   11520:	cmp	r3, #0
   11524:	bne	11470 <__lxstat64@plt+0x2cc>
   11528:	b	113f4 <__lxstat64@plt+0x250>
   1152c:	ldr	r3, [pc, #104]	; 1159c <__lxstat64@plt+0x3f8>
   11530:	mov	r2, r0
   11534:	ldr	ip, [pc, #100]	; 115a0 <__lxstat64@plt+0x3fc>
   11538:	mov	r0, #3
   1153c:	add	r3, pc, r3
   11540:	push	{r4, r5, lr}
   11544:	sub	sp, sp, #116	; 0x74
   11548:	ldr	r4, [r3, ip]
   1154c:	mov	r5, r1
   11550:	mov	r1, r2
   11554:	mov	r2, sp
   11558:	ldr	r3, [r4]
   1155c:	str	r3, [sp, #108]	; 0x6c
   11560:	bl	11168 <__xstat64@plt>
   11564:	rsbs	r0, r0, #1
   11568:	movcc	r0, #0
   1156c:	cmp	r0, #0
   11570:	ldrne	r2, [sp, #84]	; 0x54
   11574:	ldrne	r3, [sp, #80]	; 0x50
   11578:	strne	r2, [r5, #4]
   1157c:	strne	r3, [r5]
   11580:	ldr	r2, [sp, #108]	; 0x6c
   11584:	ldr	r3, [r4]
   11588:	cmp	r2, r3
   1158c:	bne	11598 <__lxstat64@plt+0x3f4>
   11590:	add	sp, sp, #116	; 0x74
   11594:	pop	{r4, r5, pc}
   11598:	bl	10f88 <__stack_chk_fail@plt>
   1159c:			; <UNDEFINED> instruction: 0x00016abc
   115a0:	strdeq	r0, [r0], -ip
   115a4:	ldr	ip, [pc, #140]	; 11638 <__lxstat64@plt+0x494>
   115a8:	ldr	r3, [pc, #140]	; 1163c <__lxstat64@plt+0x498>
   115ac:	push	{r4, r5, r6, lr}
   115b0:	mov	r6, r0
   115b4:	ldr	r0, [pc, #132]	; 11640 <__lxstat64@plt+0x49c>
   115b8:	add	ip, pc, ip
   115bc:	add	r3, pc, r3
   115c0:	ldr	r2, [pc, #124]	; 11644 <__lxstat64@plt+0x4a0>
   115c4:	mov	r5, r1
   115c8:	mov	r1, #1
   115cc:	ldr	r4, [ip, r0]
   115d0:	add	r2, pc, r2
   115d4:	ldr	r3, [r3]
   115d8:	ldr	r0, [r4]
   115dc:	ldr	r3, [r3]
   115e0:	bl	110f0 <__fprintf_chk@plt>
   115e4:	mov	r1, #1
   115e8:	mov	r2, r6
   115ec:	mov	r3, r5
   115f0:	ldr	r0, [r4]
   115f4:	bl	110f0 <__fprintf_chk@plt>
   115f8:	ldr	r0, [r4]
   115fc:	ldr	r3, [r0, #20]
   11600:	ldr	r2, [r0, #24]
   11604:	cmp	r3, r2
   11608:	addcc	r1, r3, #1
   1160c:	movcc	r2, #10
   11610:	strcc	r1, [r0, #20]
   11614:	strbcc	r2, [r3]
   11618:	bcs	1162c <__lxstat64@plt+0x488>
   1161c:	ldr	r0, [r4]
   11620:	bl	10fb8 <fflush_unlocked@plt>
   11624:	mov	r0, #2
   11628:	bl	11084 <exit@plt>
   1162c:	mov	r1, #10
   11630:	bl	11120 <__overflow@plt>
   11634:	b	1161c <__lxstat64@plt+0x478>
   11638:	andeq	r6, r1, r0, asr #20
   1163c:	andeq	r6, r1, ip, lsr #23
   11640:	andeq	r0, r0, r0, lsl #2
   11644:	andeq	r4, r0, r0, asr ip
   11648:	push	{r3, r4, r5, lr}
   1164c:	mov	r4, r0
   11650:	bl	11078 <__ctype_b_loc@plt>
   11654:	mov	r3, r4
   11658:	ldr	ip, [r0]
   1165c:	mov	r0, r3
   11660:	add	r3, r3, #1
   11664:	ldrb	r2, [r0]
   11668:	lsl	r1, r2, #1
   1166c:	ldrh	r1, [ip, r1]
   11670:	tst	r1, #1
   11674:	bne	1165c <__lxstat64@plt+0x4b8>
   11678:	cmp	r2, #43	; 0x2b
   1167c:	moveq	r0, r3
   11680:	beq	11690 <__lxstat64@plt+0x4ec>
   11684:	cmp	r2, #45	; 0x2d
   11688:	movne	r3, r0
   1168c:	addeq	r3, r0, #1
   11690:	ldrb	r2, [r3]
   11694:	add	r5, r3, #1
   11698:	sub	r2, r2, #48	; 0x30
   1169c:	cmp	r2, #9
   116a0:	bhi	116fc <__lxstat64@plt+0x558>
   116a4:	ldrb	r2, [r3, #1]
   116a8:	sub	r1, r2, #48	; 0x30
   116ac:	cmp	r1, #9
   116b0:	bhi	116cc <__lxstat64@plt+0x528>
   116b4:	add	r3, r3, #2
   116b8:	mov	r5, r3
   116bc:	ldrb	r2, [r3], #1
   116c0:	sub	r1, r2, #48	; 0x30
   116c4:	cmp	r1, #9
   116c8:	bls	116b8 <__lxstat64@plt+0x514>
   116cc:	lsl	r3, r2, #1
   116d0:	ldrh	r3, [ip, r3]
   116d4:	tst	r3, #1
   116d8:	beq	116f4 <__lxstat64@plt+0x550>
   116dc:	mov	r3, r5
   116e0:	ldrb	r2, [r3, #1]!
   116e4:	lsl	r1, r2, #1
   116e8:	ldrh	r1, [ip, r1]
   116ec:	tst	r1, #1
   116f0:	bne	116e0 <__lxstat64@plt+0x53c>
   116f4:	cmp	r2, #0
   116f8:	popeq	{r3, r4, r5, pc}
   116fc:	ldr	r1, [pc, #36]	; 11728 <__lxstat64@plt+0x584>
   11700:	mov	r2, #5
   11704:	mov	r0, #0
   11708:	add	r1, pc, r1
   1170c:	bl	10f7c <dcgettext@plt>
   11710:	mov	r5, r0
   11714:	mov	r0, r4
   11718:	bl	14a54 <close_stdout@@Base+0x1a70>
   1171c:	mov	r1, r0
   11720:	mov	r0, r5
   11724:	bl	115a4 <__lxstat64@plt+0x400>
   11728:	andeq	r4, r0, r0, lsr #22
   1172c:	ldr	r1, [pc, #60]	; 11770 <__lxstat64@plt+0x5cc>
   11730:	mov	r2, #5
   11734:	push	{r4, lr}
   11738:	add	r1, pc, r1
   1173c:	mov	r0, #0
   11740:	bl	10f7c <dcgettext@plt>
   11744:	ldr	r3, [pc, #40]	; 11774 <__lxstat64@plt+0x5d0>
   11748:	add	r3, pc, r3
   1174c:	ldr	r2, [r3, #4]
   11750:	ldr	r3, [r3]
   11754:	sub	r2, r2, #-1073741823	; 0xc0000001
   11758:	mov	r4, r0
   1175c:	ldr	r0, [r3, r2, lsl #2]
   11760:	bl	14a54 <close_stdout@@Base+0x1a70>
   11764:	mov	r1, r0
   11768:	mov	r0, r4
   1176c:	bl	115a4 <__lxstat64@plt+0x400>
   11770:	andeq	r4, r0, r4, lsl #22
   11774:	andeq	r6, r1, r0, lsr #20
   11778:	push	{r3, lr}
   1177c:	cmp	r0, #0
   11780:	ldr	r3, [pc, #32]	; 117a8 <__lxstat64@plt+0x604>
   11784:	add	r3, pc, r3
   11788:	ldr	r2, [r3, #8]
   1178c:	add	r2, r2, #1
   11790:	str	r2, [r3, #8]
   11794:	popeq	{r3, pc}
   11798:	ldr	r3, [r3, #4]
   1179c:	cmp	r2, r3
   117a0:	poplt	{r3, pc}
   117a4:	bl	1172c <__lxstat64@plt+0x588>
   117a8:	andeq	r6, r1, r4, ror #19
   117ac:	ldr	r2, [pc, #1776]	; 11ea4 <__lxstat64@plt+0xd00>
   117b0:	ldr	r3, [pc, #1776]	; 11ea8 <__lxstat64@plt+0xd04>
   117b4:	add	r2, pc, r2
   117b8:	ldr	r0, [pc, #1772]	; 11eac <__lxstat64@plt+0xd08>
   117bc:	push	{r4, r5, r6, r7, lr}
   117c0:	add	r3, pc, r3
   117c4:	ldr	r1, [r2, #8]
   117c8:	sub	sp, sp, #116	; 0x74
   117cc:	ldr	r2, [r2]
   117d0:	ldr	r4, [r3, r0]
   117d4:	ldr	r3, [r2, r1, lsl #2]
   117d8:	ldr	r2, [r4]
   117dc:	ldrb	r3, [r3, #1]
   117e0:	str	r2, [sp, #108]	; 0x6c
   117e4:	sub	r3, r3, #71	; 0x47
   117e8:	cmp	r3, #51	; 0x33
   117ec:	addls	pc, pc, r3, lsl #2
   117f0:	b	118c4 <__lxstat64@plt+0x720>
   117f4:	b	11ca4 <__lxstat64@plt+0xb00>
   117f8:	b	118c4 <__lxstat64@plt+0x720>
   117fc:	b	118c4 <__lxstat64@plt+0x720>
   11800:	b	118c4 <__lxstat64@plt+0x720>
   11804:	b	118c4 <__lxstat64@plt+0x720>
   11808:	b	11c54 <__lxstat64@plt+0xab0>
   1180c:	b	118c4 <__lxstat64@plt+0x720>
   11810:	b	118c4 <__lxstat64@plt+0x720>
   11814:	b	11bf0 <__lxstat64@plt+0xa4c>
   11818:	b	118c4 <__lxstat64@plt+0x720>
   1181c:	b	118c4 <__lxstat64@plt+0x720>
   11820:	b	118c4 <__lxstat64@plt+0x720>
   11824:	b	11ba0 <__lxstat64@plt+0x9fc>
   11828:	b	118c4 <__lxstat64@plt+0x720>
   1182c:	b	118c4 <__lxstat64@plt+0x720>
   11830:	b	118c4 <__lxstat64@plt+0x720>
   11834:	b	118c4 <__lxstat64@plt+0x720>
   11838:	b	118c4 <__lxstat64@plt+0x720>
   1183c:	b	118c4 <__lxstat64@plt+0x720>
   11840:	b	118c4 <__lxstat64@plt+0x720>
   11844:	b	118c4 <__lxstat64@plt+0x720>
   11848:	b	118c4 <__lxstat64@plt+0x720>
   1184c:	b	118c4 <__lxstat64@plt+0x720>
   11850:	b	118c4 <__lxstat64@plt+0x720>
   11854:	b	118c4 <__lxstat64@plt+0x720>
   11858:	b	118c4 <__lxstat64@plt+0x720>
   1185c:	b	11b64 <__lxstat64@plt+0x9c0>
   11860:	b	11b14 <__lxstat64@plt+0x970>
   11864:	b	11ac4 <__lxstat64@plt+0x920>
   11868:	b	11a74 <__lxstat64@plt+0x8d0>
   1186c:	b	11b64 <__lxstat64@plt+0x9c0>
   11870:	b	11de8 <__lxstat64@plt+0xc44>
   11874:	b	11da4 <__lxstat64@plt+0xc00>
   11878:	b	11c54 <__lxstat64@plt+0xab0>
   1187c:	b	118c4 <__lxstat64@plt+0x720>
   11880:	b	118c4 <__lxstat64@plt+0x720>
   11884:	b	11e38 <__lxstat64@plt+0xc94>
   11888:	b	118c4 <__lxstat64@plt+0x720>
   1188c:	b	118c4 <__lxstat64@plt+0x720>
   11890:	b	11d08 <__lxstat64@plt+0xb64>
   11894:	b	118c4 <__lxstat64@plt+0x720>
   11898:	b	11d54 <__lxstat64@plt+0xbb0>
   1189c:	b	118c4 <__lxstat64@plt+0x720>
   118a0:	b	11d3c <__lxstat64@plt+0xb98>
   118a4:	b	11a24 <__lxstat64@plt+0x880>
   118a8:	b	119b4 <__lxstat64@plt+0x810>
   118ac:	b	11970 <__lxstat64@plt+0x7cc>
   118b0:	b	118c4 <__lxstat64@plt+0x720>
   118b4:	b	1194c <__lxstat64@plt+0x7a8>
   118b8:	b	11914 <__lxstat64@plt+0x770>
   118bc:	b	118c4 <__lxstat64@plt+0x720>
   118c0:	b	118e0 <__lxstat64@plt+0x73c>
   118c4:	mov	r0, #0
   118c8:	ldr	r2, [sp, #108]	; 0x6c
   118cc:	ldr	r3, [r4]
   118d0:	cmp	r2, r3
   118d4:	bne	11ea0 <__lxstat64@plt+0xcfc>
   118d8:	add	sp, sp, #116	; 0x74
   118dc:	pop	{r4, r5, r6, r7, pc}
   118e0:	mov	r0, #1
   118e4:	bl	11778 <__lxstat64@plt+0x5d4>
   118e8:	ldr	r3, [pc, #1472]	; 11eb0 <__lxstat64@plt+0xd0c>
   118ec:	add	r3, pc, r3
   118f0:	ldr	r2, [r3, #8]
   118f4:	ldr	r1, [r3]
   118f8:	add	r0, r2, #1
   118fc:	str	r0, [r3, #8]
   11900:	ldr	r3, [r1, r2, lsl #2]
   11904:	ldrb	r0, [r3]
   11908:	rsbs	r0, r0, #1
   1190c:	movcc	r0, #0
   11910:	b	118c8 <__lxstat64@plt+0x724>
   11914:	mov	r0, #1
   11918:	bl	11778 <__lxstat64@plt+0x5d4>
   1191c:	ldr	r3, [pc, #1424]	; 11eb4 <__lxstat64@plt+0xd10>
   11920:	mov	r1, #1
   11924:	add	r3, pc, r3
   11928:	ldr	r2, [r3, #8]
   1192c:	ldr	r0, [r3]
   11930:	add	ip, r2, r1
   11934:	str	ip, [r3, #8]
   11938:	ldr	r0, [r0, r2, lsl #2]
   1193c:	bl	11150 <euidaccess@plt>
   11940:	rsbs	r0, r0, #1
   11944:	movcc	r0, #0
   11948:	b	118c8 <__lxstat64@plt+0x724>
   1194c:	mov	r0, #1
   11950:	bl	11778 <__lxstat64@plt+0x5d4>
   11954:	ldr	r3, [pc, #1372]	; 11eb8 <__lxstat64@plt+0xd14>
   11958:	mov	r1, #2
   1195c:	add	r3, pc, r3
   11960:	ldr	r2, [r3, #8]
   11964:	ldr	r0, [r3]
   11968:	add	ip, r2, #1
   1196c:	b	11934 <__lxstat64@plt+0x790>
   11970:	mov	r0, #1
   11974:	bl	11778 <__lxstat64@plt+0x5d4>
   11978:	ldr	r3, [pc, #1340]	; 11ebc <__lxstat64@plt+0xd18>
   1197c:	mov	r0, #3
   11980:	mov	r2, sp
   11984:	add	r3, pc, r3
   11988:	ldr	r1, [r3, #8]
   1198c:	ldr	ip, [r3]
   11990:	add	lr, r1, #1
   11994:	str	lr, [r3, #8]
   11998:	ldr	r1, [ip, r1, lsl #2]
   1199c:	bl	11168 <__xstat64@plt>
   119a0:	cmp	r0, #0
   119a4:	bne	118c4 <__lxstat64@plt+0x720>
   119a8:	ldr	r0, [sp, #16]
   119ac:	ubfx	r0, r0, #11, #1
   119b0:	b	118c8 <__lxstat64@plt+0x724>
   119b4:	mov	r0, #1
   119b8:	mov	r5, #0
   119bc:	bl	11778 <__lxstat64@plt+0x5d4>
   119c0:	ldr	r3, [pc, #1272]	; 11ec0 <__lxstat64@plt+0xd1c>
   119c4:	add	r3, pc, r3
   119c8:	ldr	r2, [r3, #8]
   119cc:	ldr	r1, [r3]
   119d0:	add	r0, r2, #1
   119d4:	str	r0, [r3, #8]
   119d8:	ldr	r0, [r1, r2, lsl #2]
   119dc:	bl	11648 <__lxstat64@plt+0x4a4>
   119e0:	mov	r7, r0
   119e4:	bl	110a8 <__errno_location@plt>
   119e8:	mov	r1, r5
   119ec:	mov	r2, #10
   119f0:	mov	r6, r0
   119f4:	str	r5, [r0]
   119f8:	mov	r0, r7
   119fc:	bl	10f28 <strtol@plt>
   11a00:	ldr	r3, [r6]
   11a04:	cmp	r3, #34	; 0x22
   11a08:	beq	11e88 <__lxstat64@plt+0xce4>
   11a0c:	cmp	r0, r5
   11a10:	blt	11e88 <__lxstat64@plt+0xce4>
   11a14:	bl	11174 <isatty@plt>
   11a18:	subs	r0, r0, r5
   11a1c:	movne	r0, #1
   11a20:	b	118c8 <__lxstat64@plt+0x724>
   11a24:	mov	r0, #1
   11a28:	bl	11778 <__lxstat64@plt+0x5d4>
   11a2c:	ldr	r3, [pc, #1168]	; 11ec4 <__lxstat64@plt+0xd20>
   11a30:	mov	r0, #3
   11a34:	mov	r2, sp
   11a38:	add	r3, pc, r3
   11a3c:	ldr	r1, [r3, #8]
   11a40:	ldr	ip, [r3]
   11a44:	add	lr, r1, #1
   11a48:	str	lr, [r3, #8]
   11a4c:	ldr	r1, [ip, r1, lsl #2]
   11a50:	bl	11168 <__xstat64@plt>
   11a54:	cmp	r0, #0
   11a58:	bne	118c4 <__lxstat64@plt+0x720>
   11a5c:	ldrd	r2, [sp, #48]	; 0x30
   11a60:	cmp	r2, #1
   11a64:	sbcs	r1, r3, #0
   11a68:	movlt	r0, #0
   11a6c:	movge	r0, #1
   11a70:	b	118c8 <__lxstat64@plt+0x724>
   11a74:	mov	r0, #1
   11a78:	bl	11778 <__lxstat64@plt+0x5d4>
   11a7c:	ldr	r3, [pc, #1092]	; 11ec8 <__lxstat64@plt+0xd24>
   11a80:	mov	r0, #3
   11a84:	mov	r2, sp
   11a88:	add	r3, pc, r3
   11a8c:	ldr	r1, [r3, #8]
   11a90:	ldr	ip, [r3]
   11a94:	add	lr, r1, #1
   11a98:	str	lr, [r3, #8]
   11a9c:	ldr	r1, [ip, r1, lsl #2]
   11aa0:	bl	11168 <__xstat64@plt>
   11aa4:	cmp	r0, #0
   11aa8:	bne	118c4 <__lxstat64@plt+0x720>
   11aac:	ldr	r0, [sp, #16]
   11ab0:	and	r0, r0, #61440	; 0xf000
   11ab4:	subs	r6, r0, #16384	; 0x4000
   11ab8:	rsbs	r0, r6, #0
   11abc:	adcs	r0, r0, r6
   11ac0:	b	118c8 <__lxstat64@plt+0x724>
   11ac4:	mov	r0, #1
   11ac8:	bl	11778 <__lxstat64@plt+0x5d4>
   11acc:	ldr	r3, [pc, #1016]	; 11ecc <__lxstat64@plt+0xd28>
   11ad0:	mov	r0, #3
   11ad4:	mov	r2, sp
   11ad8:	add	r3, pc, r3
   11adc:	ldr	r1, [r3, #8]
   11ae0:	ldr	ip, [r3]
   11ae4:	add	lr, r1, #1
   11ae8:	str	lr, [r3, #8]
   11aec:	ldr	r1, [ip, r1, lsl #2]
   11af0:	bl	11168 <__xstat64@plt>
   11af4:	cmp	r0, #0
   11af8:	bne	118c4 <__lxstat64@plt+0x720>
   11afc:	ldr	r0, [sp, #16]
   11b00:	and	r0, r0, #61440	; 0xf000
   11b04:	subs	ip, r0, #8192	; 0x2000
   11b08:	rsbs	r0, ip, #0
   11b0c:	adcs	r0, r0, ip
   11b10:	b	118c8 <__lxstat64@plt+0x724>
   11b14:	mov	r0, #1
   11b18:	bl	11778 <__lxstat64@plt+0x5d4>
   11b1c:	ldr	r3, [pc, #940]	; 11ed0 <__lxstat64@plt+0xd2c>
   11b20:	mov	r0, #3
   11b24:	mov	r2, sp
   11b28:	add	r3, pc, r3
   11b2c:	ldr	r1, [r3, #8]
   11b30:	ldr	ip, [r3]
   11b34:	add	lr, r1, #1
   11b38:	str	lr, [r3, #8]
   11b3c:	ldr	r1, [ip, r1, lsl #2]
   11b40:	bl	11168 <__xstat64@plt>
   11b44:	cmp	r0, #0
   11b48:	bne	118c4 <__lxstat64@plt+0x720>
   11b4c:	ldr	r0, [sp, #16]
   11b50:	and	r0, r0, #61440	; 0xf000
   11b54:	subs	r1, r0, #24576	; 0x6000
   11b58:	rsbs	r0, r1, #0
   11b5c:	adcs	r0, r0, r1
   11b60:	b	118c8 <__lxstat64@plt+0x724>
   11b64:	mov	r0, #1
   11b68:	bl	11778 <__lxstat64@plt+0x5d4>
   11b6c:	ldr	r3, [pc, #864]	; 11ed4 <__lxstat64@plt+0xd30>
   11b70:	mov	r0, #3
   11b74:	mov	r2, sp
   11b78:	add	r3, pc, r3
   11b7c:	ldr	r1, [r3, #8]
   11b80:	ldr	ip, [r3]
   11b84:	add	lr, r1, #1
   11b88:	str	lr, [r3, #8]
   11b8c:	ldr	r1, [ip, r1, lsl #2]
   11b90:	bl	11168 <__xstat64@plt>
   11b94:	rsbs	r0, r0, #1
   11b98:	movcc	r0, #0
   11b9c:	b	118c8 <__lxstat64@plt+0x724>
   11ba0:	mov	r0, #1
   11ba4:	bl	11778 <__lxstat64@plt+0x5d4>
   11ba8:	ldr	r3, [pc, #808]	; 11ed8 <__lxstat64@plt+0xd34>
   11bac:	mov	r0, #3
   11bb0:	mov	r2, sp
   11bb4:	add	r3, pc, r3
   11bb8:	ldr	r1, [r3, #8]
   11bbc:	ldr	ip, [r3]
   11bc0:	add	lr, r1, #1
   11bc4:	str	lr, [r3, #8]
   11bc8:	ldr	r1, [ip, r1, lsl #2]
   11bcc:	bl	11168 <__xstat64@plt>
   11bd0:	cmp	r0, #0
   11bd4:	bne	118c4 <__lxstat64@plt+0x720>
   11bd8:	ldr	r0, [sp, #16]
   11bdc:	and	r0, r0, #61440	; 0xf000
   11be0:	subs	r5, r0, #49152	; 0xc000
   11be4:	rsbs	r0, r5, #0
   11be8:	adcs	r0, r0, r5
   11bec:	b	118c8 <__lxstat64@plt+0x724>
   11bf0:	mov	r0, #1
   11bf4:	bl	11778 <__lxstat64@plt+0x5d4>
   11bf8:	ldr	r3, [pc, #732]	; 11edc <__lxstat64@plt+0xd38>
   11bfc:	mov	r0, #3
   11c00:	mov	r2, sp
   11c04:	add	r3, pc, r3
   11c08:	ldr	r1, [r3, #8]
   11c0c:	ldr	ip, [r3]
   11c10:	add	lr, r1, #1
   11c14:	str	lr, [r3, #8]
   11c18:	ldr	r1, [ip, r1, lsl #2]
   11c1c:	bl	11168 <__xstat64@plt>
   11c20:	subs	r5, r0, #0
   11c24:	bne	118c4 <__lxstat64@plt+0x720>
   11c28:	bl	110a8 <__errno_location@plt>
   11c2c:	str	r5, [r0]
   11c30:	mov	r6, r0
   11c34:	bl	10fac <geteuid@plt>
   11c38:	cmn	r0, #1
   11c3c:	beq	11e90 <__lxstat64@plt+0xcec>
   11c40:	ldr	r3, [sp, #24]
   11c44:	subs	r2, r0, r3
   11c48:	rsbs	r0, r2, #0
   11c4c:	adcs	r0, r0, r2
   11c50:	b	118c8 <__lxstat64@plt+0x724>
   11c54:	mov	r0, #1
   11c58:	bl	11778 <__lxstat64@plt+0x5d4>
   11c5c:	ldr	r3, [pc, #636]	; 11ee0 <__lxstat64@plt+0xd3c>
   11c60:	mov	r0, #3
   11c64:	mov	r2, sp
   11c68:	add	r3, pc, r3
   11c6c:	ldr	r1, [r3, #8]
   11c70:	ldr	ip, [r3]
   11c74:	add	lr, r1, #1
   11c78:	str	lr, [r3, #8]
   11c7c:	ldr	r1, [ip, r1, lsl #2]
   11c80:	bl	111a4 <__lxstat64@plt>
   11c84:	cmp	r0, #0
   11c88:	bne	118c4 <__lxstat64@plt+0x720>
   11c8c:	ldr	r0, [sp, #16]
   11c90:	and	r0, r0, #61440	; 0xf000
   11c94:	subs	r3, r0, #40960	; 0xa000
   11c98:	rsbs	r0, r3, #0
   11c9c:	adcs	r0, r0, r3
   11ca0:	b	118c8 <__lxstat64@plt+0x724>
   11ca4:	mov	r0, #1
   11ca8:	bl	11778 <__lxstat64@plt+0x5d4>
   11cac:	ldr	r3, [pc, #560]	; 11ee4 <__lxstat64@plt+0xd40>
   11cb0:	mov	r0, #3
   11cb4:	mov	r2, sp
   11cb8:	add	r3, pc, r3
   11cbc:	ldr	r1, [r3, #8]
   11cc0:	ldr	ip, [r3]
   11cc4:	add	lr, r1, #1
   11cc8:	str	lr, [r3, #8]
   11ccc:	ldr	r1, [ip, r1, lsl #2]
   11cd0:	bl	11168 <__xstat64@plt>
   11cd4:	subs	r5, r0, #0
   11cd8:	bne	118c4 <__lxstat64@plt+0x720>
   11cdc:	bl	110a8 <__errno_location@plt>
   11ce0:	str	r5, [r0]
   11ce4:	mov	r6, r0
   11ce8:	bl	10fd0 <getegid@plt>
   11cec:	cmn	r0, #1
   11cf0:	beq	11e7c <__lxstat64@plt+0xcd8>
   11cf4:	ldr	r3, [sp, #28]
   11cf8:	subs	r3, r0, r3
   11cfc:	rsbs	r0, r3, #0
   11d00:	adcs	r0, r0, r3
   11d04:	b	118c8 <__lxstat64@plt+0x724>
   11d08:	mov	r0, #1
   11d0c:	bl	11778 <__lxstat64@plt+0x5d4>
   11d10:	ldr	r3, [pc, #464]	; 11ee8 <__lxstat64@plt+0xd44>
   11d14:	add	r3, pc, r3
   11d18:	ldr	r2, [r3, #8]
   11d1c:	ldr	r1, [r3]
   11d20:	add	r0, r2, #1
   11d24:	str	r0, [r3, #8]
   11d28:	ldr	r3, [r1, r2, lsl #2]
   11d2c:	ldrb	r0, [r3]
   11d30:	adds	r0, r0, #0
   11d34:	movne	r0, #1
   11d38:	b	118c8 <__lxstat64@plt+0x724>
   11d3c:	mov	r0, #1
   11d40:	bl	11778 <__lxstat64@plt+0x5d4>
   11d44:	ldr	r3, [pc, #416]	; 11eec <__lxstat64@plt+0xd48>
   11d48:	mov	r1, #4
   11d4c:	add	r3, pc, r3
   11d50:	b	11960 <__lxstat64@plt+0x7bc>
   11d54:	mov	r0, #1
   11d58:	bl	11778 <__lxstat64@plt+0x5d4>
   11d5c:	ldr	r3, [pc, #396]	; 11ef0 <__lxstat64@plt+0xd4c>
   11d60:	mov	r0, #3
   11d64:	mov	r2, sp
   11d68:	add	r3, pc, r3
   11d6c:	ldr	r1, [r3, #8]
   11d70:	ldr	ip, [r3]
   11d74:	add	lr, r1, #1
   11d78:	str	lr, [r3, #8]
   11d7c:	ldr	r1, [ip, r1, lsl #2]
   11d80:	bl	11168 <__xstat64@plt>
   11d84:	cmp	r0, #0
   11d88:	bne	118c4 <__lxstat64@plt+0x720>
   11d8c:	ldr	r0, [sp, #16]
   11d90:	and	r0, r0, #61440	; 0xf000
   11d94:	subs	r2, r0, #4096	; 0x1000
   11d98:	rsbs	r0, r2, #0
   11d9c:	adcs	r0, r0, r2
   11da0:	b	118c8 <__lxstat64@plt+0x724>
   11da4:	mov	r0, #1
   11da8:	bl	11778 <__lxstat64@plt+0x5d4>
   11dac:	ldr	r3, [pc, #320]	; 11ef4 <__lxstat64@plt+0xd50>
   11db0:	mov	r0, #3
   11db4:	mov	r2, sp
   11db8:	add	r3, pc, r3
   11dbc:	ldr	r1, [r3, #8]
   11dc0:	ldr	ip, [r3]
   11dc4:	add	lr, r1, #1
   11dc8:	str	lr, [r3, #8]
   11dcc:	ldr	r1, [ip, r1, lsl #2]
   11dd0:	bl	11168 <__xstat64@plt>
   11dd4:	cmp	r0, #0
   11dd8:	bne	118c4 <__lxstat64@plt+0x720>
   11ddc:	ldr	r0, [sp, #16]
   11de0:	ubfx	r0, r0, #10, #1
   11de4:	b	118c8 <__lxstat64@plt+0x724>
   11de8:	mov	r0, #1
   11dec:	bl	11778 <__lxstat64@plt+0x5d4>
   11df0:	ldr	r3, [pc, #256]	; 11ef8 <__lxstat64@plt+0xd54>
   11df4:	mov	r0, #3
   11df8:	mov	r2, sp
   11dfc:	add	r3, pc, r3
   11e00:	ldr	r1, [r3, #8]
   11e04:	ldr	ip, [r3]
   11e08:	add	lr, r1, #1
   11e0c:	str	lr, [r3, #8]
   11e10:	ldr	r1, [ip, r1, lsl #2]
   11e14:	bl	11168 <__xstat64@plt>
   11e18:	cmp	r0, #0
   11e1c:	bne	118c4 <__lxstat64@plt+0x720>
   11e20:	ldr	r0, [sp, #16]
   11e24:	and	r0, r0, #61440	; 0xf000
   11e28:	subs	r7, r0, #32768	; 0x8000
   11e2c:	rsbs	r0, r7, #0
   11e30:	adcs	r0, r0, r7
   11e34:	b	118c8 <__lxstat64@plt+0x724>
   11e38:	mov	r0, #1
   11e3c:	bl	11778 <__lxstat64@plt+0x5d4>
   11e40:	ldr	r3, [pc, #180]	; 11efc <__lxstat64@plt+0xd58>
   11e44:	mov	r0, #3
   11e48:	mov	r2, sp
   11e4c:	add	r3, pc, r3
   11e50:	ldr	r1, [r3, #8]
   11e54:	ldr	ip, [r3]
   11e58:	add	lr, r1, #1
   11e5c:	str	lr, [r3, #8]
   11e60:	ldr	r1, [ip, r1, lsl #2]
   11e64:	bl	11168 <__xstat64@plt>
   11e68:	cmp	r0, #0
   11e6c:	bne	118c4 <__lxstat64@plt+0x720>
   11e70:	ldr	r0, [sp, #16]
   11e74:	ubfx	r0, r0, #9, #1
   11e78:	b	118c8 <__lxstat64@plt+0x724>
   11e7c:	ldr	r2, [r6]
   11e80:	cmp	r2, #0
   11e84:	beq	11cf4 <__lxstat64@plt+0xb50>
   11e88:	mov	r0, r5
   11e8c:	b	118c8 <__lxstat64@plt+0x724>
   11e90:	ldr	r2, [r6]
   11e94:	cmp	r2, #0
   11e98:	bne	11e88 <__lxstat64@plt+0xce4>
   11e9c:	b	11c40 <__lxstat64@plt+0xa9c>
   11ea0:	bl	10f88 <__stack_chk_fail@plt>
   11ea4:			; <UNDEFINED> instruction: 0x000169b4
   11ea8:	andeq	r6, r1, r8, lsr r8
   11eac:	strdeq	r0, [r0], -ip
   11eb0:	andeq	r6, r1, ip, ror r8
   11eb4:	andeq	r6, r1, r4, asr #16
   11eb8:	andeq	r6, r1, ip, lsl #16
   11ebc:	andeq	r6, r1, r4, ror #15
   11ec0:	andeq	r6, r1, r4, lsr #15
   11ec4:	andeq	r6, r1, r0, lsr r7
   11ec8:	andeq	r6, r1, r0, ror #13
   11ecc:	muleq	r1, r0, r6
   11ed0:	andeq	r6, r1, r0, asr #12
   11ed4:	strdeq	r6, [r1], -r0
   11ed8:			; <UNDEFINED> instruction: 0x000165b4
   11edc:	andeq	r6, r1, r4, ror #10
   11ee0:	andeq	r6, r1, r0, lsl #10
   11ee4:			; <UNDEFINED> instruction: 0x000164b0
   11ee8:	andeq	r6, r1, r4, asr r4
   11eec:	andeq	r6, r1, ip, lsl r4
   11ef0:	andeq	r6, r1, r0, lsl #8
   11ef4:			; <UNDEFINED> instruction: 0x000163b0
   11ef8:	andeq	r6, r1, ip, ror #6
   11efc:	andeq	r6, r1, ip, lsl r3
   11f00:	ldr	r3, [pc, #1288]	; 12410 <__lxstat64@plt+0x126c>
   11f04:	ldr	r2, [pc, #1288]	; 12414 <__lxstat64@plt+0x1270>
   11f08:	add	r3, pc, r3
   11f0c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f10:	subs	r7, r0, #0
   11f14:	ldr	r6, [r3, r2]
   11f18:	sub	sp, sp, #268	; 0x10c
   11f1c:	ldr	r3, [r6]
   11f20:	str	r3, [sp, #260]	; 0x104
   11f24:	bne	12010 <__lxstat64@plt+0xe6c>
   11f28:	ldr	r5, [pc, #1256]	; 12418 <__lxstat64@plt+0x1274>
   11f2c:	add	r5, pc, r5
   11f30:	ldmib	r5, {r3, r4}
   11f34:	sub	r3, r3, #2
   11f38:	add	r4, r4, #1
   11f3c:	cmp	r4, r3
   11f40:	ldr	r3, [r5]
   11f44:	bge	11f5c <__lxstat64@plt+0xdb8>
   11f48:	add	r2, r4, #1
   11f4c:	ldr	r2, [r3, r2, lsl #2]
   11f50:	ldrb	r1, [r2]
   11f54:	cmp	r1, #45	; 0x2d
   11f58:	beq	11fe8 <__lxstat64@plt+0xe44>
   11f5c:	mov	r8, #0
   11f60:	ldr	r2, [r3, r4, lsl #2]
   11f64:	lsl	r4, r4, #2
   11f68:	add	r5, r3, r4
   11f6c:	ldrb	r1, [r2]
   11f70:	cmp	r1, #45	; 0x2d
   11f74:	beq	1201c <__lxstat64@plt+0xe78>
   11f78:	cmp	r1, #61	; 0x3d
   11f7c:	beq	1212c <__lxstat64@plt+0xf88>
   11f80:	cmp	r1, #33	; 0x21
   11f84:	bne	12140 <__lxstat64@plt+0xf9c>
   11f88:	ldrb	r1, [r2, #1]
   11f8c:	cmp	r1, #61	; 0x3d
   11f90:	bne	12140 <__lxstat64@plt+0xf9c>
   11f94:	ldrb	r2, [r2, #2]
   11f98:	cmp	r2, #0
   11f9c:	bne	12140 <__lxstat64@plt+0xf9c>
   11fa0:	ldr	r5, [pc, #1140]	; 1241c <__lxstat64@plt+0x1278>
   11fa4:	add	r5, pc, r5
   11fa8:	ldr	r4, [r5, #8]
   11fac:	add	r2, r3, r4, lsl #2
   11fb0:	ldr	r0, [r3, r4, lsl #2]
   11fb4:	add	r4, r4, #3
   11fb8:	ldr	r1, [r2, #8]
   11fbc:	bl	10f1c <strcmp@plt>
   11fc0:	str	r4, [r5, #8]
   11fc4:	adds	r7, r0, #0
   11fc8:	movne	r7, #1
   11fcc:	ldr	r2, [sp, #260]	; 0x104
   11fd0:	mov	r0, r7
   11fd4:	ldr	r3, [r6]
   11fd8:	cmp	r2, r3
   11fdc:	bne	123b8 <__lxstat64@plt+0x1214>
   11fe0:	add	sp, sp, #268	; 0x10c
   11fe4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11fe8:	ldrb	r1, [r2, #1]
   11fec:	cmp	r1, #108	; 0x6c
   11ff0:	bne	11f5c <__lxstat64@plt+0xdb8>
   11ff4:	ldrb	r0, [r2, #2]
   11ff8:	cmp	r0, #0
   11ffc:	bne	11f5c <__lxstat64@plt+0xdb8>
   12000:	bl	11778 <__lxstat64@plt+0x5d4>
   12004:	mov	r8, #1
   12008:	ldr	r3, [r5]
   1200c:	b	11f60 <__lxstat64@plt+0xdbc>
   12010:	mov	r0, #0
   12014:	bl	11778 <__lxstat64@plt+0x5d4>
   12018:	b	11f28 <__lxstat64@plt+0xd84>
   1201c:	ldrb	r3, [r2, #1]
   12020:	cmp	r3, #108	; 0x6c
   12024:	cmpne	r3, #103	; 0x67
   12028:	bne	120ec <__lxstat64@plt+0xf48>
   1202c:	ldrb	r0, [r2, #2]
   12030:	cmp	r0, #101	; 0x65
   12034:	cmpne	r0, #116	; 0x74
   12038:	bne	120ec <__lxstat64@plt+0xf48>
   1203c:	ldrb	r9, [r2, #3]
   12040:	cmp	r9, #0
   12044:	bne	12348 <__lxstat64@plt+0x11a4>
   12048:	cmp	r7, #0
   1204c:	ldr	r0, [r5, #-4]
   12050:	bne	12354 <__lxstat64@plt+0x11b0>
   12054:	bl	11648 <__lxstat64@plt+0x4a4>
   12058:	mov	r5, r0
   1205c:	cmp	r8, #0
   12060:	beq	12374 <__lxstat64@plt+0x11d0>
   12064:	ldr	r3, [pc, #948]	; 12420 <__lxstat64@plt+0x127c>
   12068:	add	r3, pc, r3
   1206c:	ldr	r3, [r3]
   12070:	add	r3, r3, r4
   12074:	ldr	r0, [r3, #8]
   12078:	bl	11090 <strlen@plt>
   1207c:	mov	r1, #0
   12080:	add	r2, sp, #236	; 0xec
   12084:	bl	131a0 <close_stdout@@Base+0x1bc>
   12088:	mov	r1, r0
   1208c:	mov	r0, r5
   12090:	bl	14a60 <close_stdout@@Base+0x1a7c>
   12094:	ldr	r3, [pc, #904]	; 12424 <__lxstat64@plt+0x1280>
   12098:	add	r3, pc, r3
   1209c:	ldr	r2, [r3]
   120a0:	ldr	r1, [r3, #8]
   120a4:	ldr	r2, [r2, r4]
   120a8:	add	r1, r1, #3
   120ac:	str	r1, [r3, #8]
   120b0:	ldrb	r7, [r2, #2]
   120b4:	ldrb	r3, [r2, #1]
   120b8:	subs	r1, r7, #101	; 0x65
   120bc:	rsbs	r2, r1, #0
   120c0:	adcs	r2, r2, r1
   120c4:	cmp	r3, #108	; 0x6c
   120c8:	beq	12394 <__lxstat64@plt+0x11f0>
   120cc:	cmp	r3, #103	; 0x67
   120d0:	beq	123a4 <__lxstat64@plt+0x1200>
   120d4:	adds	r7, r0, #0
   120d8:	movne	r7, #1
   120dc:	subs	r3, r7, r2
   120e0:	rsbs	r7, r3, #0
   120e4:	adcs	r7, r7, r3
   120e8:	b	11fcc <__lxstat64@plt+0xe28>
   120ec:	cmp	r3, #101	; 0x65
   120f0:	beq	12180 <__lxstat64@plt+0xfdc>
   120f4:	cmp	r3, #110	; 0x6e
   120f8:	beq	122b0 <__lxstat64@plt+0x110c>
   120fc:	cmp	r3, #111	; 0x6f
   12100:	beq	1222c <__lxstat64@plt+0x1088>
   12104:	cmp	r3, #101	; 0x65
   12108:	ldrbeq	r1, [r2, #2]
   1210c:	beq	12190 <__lxstat64@plt+0xfec>
   12110:	ldr	r1, [pc, #784]	; 12428 <__lxstat64@plt+0x1284>
   12114:	mov	r0, #0
   12118:	mov	r2, #5
   1211c:	add	r1, pc, r1
   12120:	bl	10f7c <dcgettext@plt>
   12124:	ldr	r1, [r5]
   12128:	bl	115a4 <__lxstat64@plt+0x400>
   1212c:	ldrb	r1, [r2, #1]
   12130:	cmp	r1, #0
   12134:	beq	12150 <__lxstat64@plt+0xfac>
   12138:	cmp	r1, #61	; 0x3d
   1213c:	beq	12144 <__lxstat64@plt+0xfa0>
   12140:	bl	1118c <abort@plt>
   12144:	ldrb	r2, [r2, #2]
   12148:	cmp	r2, #0
   1214c:	bne	12140 <__lxstat64@plt+0xf9c>
   12150:	ldr	r5, [pc, #724]	; 1242c <__lxstat64@plt+0x1288>
   12154:	add	r5, pc, r5
   12158:	ldr	r4, [r5, #8]
   1215c:	add	r2, r3, r4, lsl #2
   12160:	ldr	r0, [r3, r4, lsl #2]
   12164:	add	r4, r4, #3
   12168:	ldr	r1, [r2, #8]
   1216c:	bl	10f1c <strcmp@plt>
   12170:	str	r4, [r5, #8]
   12174:	rsbs	r7, r0, #1
   12178:	movcc	r7, #0
   1217c:	b	11fcc <__lxstat64@plt+0xe28>
   12180:	ldrb	r0, [r2, #2]
   12184:	cmp	r0, #113	; 0x71
   12188:	mov	r1, r0
   1218c:	beq	1203c <__lxstat64@plt+0xe98>
   12190:	cmp	r1, #102	; 0x66
   12194:	bne	12110 <__lxstat64@plt+0xf6c>
   12198:	ldrb	r4, [r2, #3]
   1219c:	cmp	r4, #0
   121a0:	bne	12110 <__lxstat64@plt+0xf6c>
   121a4:	ldr	r3, [pc, #644]	; 12430 <__lxstat64@plt+0x128c>
   121a8:	orrs	r7, r8, r7
   121ac:	add	r3, pc, r3
   121b0:	ldr	r2, [r3, #8]
   121b4:	add	r2, r2, #3
   121b8:	str	r2, [r3, #8]
   121bc:	bne	123d8 <__lxstat64@plt+0x1234>
   121c0:	mov	r0, #3
   121c4:	ldr	r1, [r5, #-4]
   121c8:	mov	r2, sp
   121cc:	bl	11168 <__xstat64@plt>
   121d0:	cmp	r0, #0
   121d4:	bne	11fcc <__lxstat64@plt+0xe28>
   121d8:	ldr	r1, [r5, #4]
   121dc:	mov	r0, #3
   121e0:	add	r2, sp, #104	; 0x68
   121e4:	bl	11168 <__xstat64@plt>
   121e8:	cmp	r0, #0
   121ec:	bne	11fcc <__lxstat64@plt+0xe28>
   121f0:	movw	r1, #65272	; 0xfef8
   121f4:	add	r0, sp, #264	; 0x108
   121f8:	movt	r1, #65535	; 0xffff
   121fc:	ldrd	r2, [sp, #104]	; 0x68
   12200:	ldrd	r4, [r0, r1]
   12204:	cmp	r5, r3
   12208:	cmpeq	r4, r2
   1220c:	bne	11fcc <__lxstat64@plt+0xe28>
   12210:	ldrd	r0, [sp, #96]	; 0x60
   12214:	ldrd	r2, [sp, #200]	; 0xc8
   12218:	cmp	r1, r3
   1221c:	cmpeq	r0, r2
   12220:	movne	r7, #0
   12224:	moveq	r7, #1
   12228:	b	11fcc <__lxstat64@plt+0xe28>
   1222c:	ldrb	r3, [r2, #2]
   12230:	cmp	r3, #116	; 0x74
   12234:	bne	12110 <__lxstat64@plt+0xf6c>
   12238:	ldrb	r4, [r2, #3]
   1223c:	cmp	r4, #0
   12240:	bne	12110 <__lxstat64@plt+0xf6c>
   12244:	ldr	r3, [pc, #488]	; 12434 <__lxstat64@plt+0x1290>
   12248:	orrs	r7, r8, r7
   1224c:	add	r3, pc, r3
   12250:	ldr	r2, [r3, #8]
   12254:	add	r2, r2, #3
   12258:	str	r2, [r3, #8]
   1225c:	bne	123f4 <__lxstat64@plt+0x1250>
   12260:	mov	r1, sp
   12264:	ldr	r0, [r5, #-4]
   12268:	bl	1152c <__lxstat64@plt+0x388>
   1226c:	add	r1, sp, #104	; 0x68
   12270:	mov	r4, r0
   12274:	ldr	r0, [r5, #4]
   12278:	bl	1152c <__lxstat64@plt+0x388>
   1227c:	cmp	r0, #0
   12280:	beq	11fcc <__lxstat64@plt+0xe28>
   12284:	cmp	r4, #0
   12288:	beq	1236c <__lxstat64@plt+0x11c8>
   1228c:	ldr	r3, [sp]
   12290:	ldr	r2, [sp, #104]	; 0x68
   12294:	ldr	r1, [sp, #4]
   12298:	cmp	r2, r3
   1229c:	ldr	r3, [sp, #108]	; 0x6c
   122a0:	bgt	1236c <__lxstat64@plt+0x11c8>
   122a4:	rsbge	r3, r3, r1
   122a8:	lsrge	r7, r3, #31
   122ac:	b	11fcc <__lxstat64@plt+0xe28>
   122b0:	ldrb	r0, [r2, #2]
   122b4:	cmp	r0, #101	; 0x65
   122b8:	beq	1203c <__lxstat64@plt+0xe98>
   122bc:	cmp	r0, #116	; 0x74
   122c0:	bne	12110 <__lxstat64@plt+0xf6c>
   122c4:	ldrb	r4, [r2, #3]
   122c8:	cmp	r4, #0
   122cc:	bne	12110 <__lxstat64@plt+0xf6c>
   122d0:	ldr	r3, [pc, #352]	; 12438 <__lxstat64@plt+0x1294>
   122d4:	orrs	r7, r8, r7
   122d8:	add	r3, pc, r3
   122dc:	ldr	r2, [r3, #8]
   122e0:	add	r2, r2, #3
   122e4:	str	r2, [r3, #8]
   122e8:	bne	123bc <__lxstat64@plt+0x1218>
   122ec:	mov	r1, sp
   122f0:	ldr	r0, [r5, #-4]
   122f4:	bl	1152c <__lxstat64@plt+0x388>
   122f8:	add	r1, sp, #104	; 0x68
   122fc:	mov	r4, r0
   12300:	ldr	r0, [r5, #4]
   12304:	bl	1152c <__lxstat64@plt+0x388>
   12308:	cmp	r4, #0
   1230c:	beq	11fcc <__lxstat64@plt+0xe28>
   12310:	cmp	r0, #0
   12314:	beq	1236c <__lxstat64@plt+0x11c8>
   12318:	ldr	r3, [sp]
   1231c:	ldr	r2, [sp, #104]	; 0x68
   12320:	ldr	r1, [sp, #4]
   12324:	cmp	r2, r3
   12328:	ldr	r3, [sp, #108]	; 0x6c
   1232c:	bgt	11fcc <__lxstat64@plt+0xe28>
   12330:	blt	1236c <__lxstat64@plt+0x11c8>
   12334:	rsb	r3, r3, r1
   12338:	cmp	r3, #0
   1233c:	movle	r7, #0
   12340:	movgt	r7, #1
   12344:	b	11fcc <__lxstat64@plt+0xe28>
   12348:	cmp	r3, #110	; 0x6e
   1234c:	bne	120fc <__lxstat64@plt+0xf58>
   12350:	b	122bc <__lxstat64@plt+0x1118>
   12354:	bl	11090 <strlen@plt>
   12358:	mov	r1, r9
   1235c:	add	r2, sp, #212	; 0xd4
   12360:	bl	131a0 <close_stdout@@Base+0x1bc>
   12364:	mov	r5, r0
   12368:	b	1205c <__lxstat64@plt+0xeb8>
   1236c:	mov	r7, #1
   12370:	b	11fcc <__lxstat64@plt+0xe28>
   12374:	ldr	r3, [pc, #192]	; 1243c <__lxstat64@plt+0x1298>
   12378:	add	r3, pc, r3
   1237c:	ldr	r3, [r3]
   12380:	add	r3, r3, r4
   12384:	ldr	r0, [r3, #4]
   12388:	bl	11648 <__lxstat64@plt+0x4a4>
   1238c:	mov	r1, r0
   12390:	b	1208c <__lxstat64@plt+0xee8>
   12394:	cmp	r0, r2
   12398:	movge	r7, #0
   1239c:	movlt	r7, #1
   123a0:	b	11fcc <__lxstat64@plt+0xe28>
   123a4:	rsb	r2, r2, #0
   123a8:	cmp	r0, r2
   123ac:	movle	r7, #0
   123b0:	movgt	r7, #1
   123b4:	b	11fcc <__lxstat64@plt+0xe28>
   123b8:	bl	10f88 <__stack_chk_fail@plt>
   123bc:	ldr	r1, [pc, #124]	; 12440 <__lxstat64@plt+0x129c>
   123c0:	mov	r0, r4
   123c4:	mov	r2, #5
   123c8:	add	r1, pc, r1
   123cc:	bl	10f7c <dcgettext@plt>
   123d0:	mov	r1, r4
   123d4:	bl	115a4 <__lxstat64@plt+0x400>
   123d8:	ldr	r1, [pc, #100]	; 12444 <__lxstat64@plt+0x12a0>
   123dc:	mov	r0, r4
   123e0:	mov	r2, #5
   123e4:	add	r1, pc, r1
   123e8:	bl	10f7c <dcgettext@plt>
   123ec:	mov	r1, r4
   123f0:	bl	115a4 <__lxstat64@plt+0x400>
   123f4:	ldr	r1, [pc, #76]	; 12448 <__lxstat64@plt+0x12a4>
   123f8:	mov	r0, r4
   123fc:	mov	r2, #5
   12400:	add	r1, pc, r1
   12404:	bl	10f7c <dcgettext@plt>
   12408:	mov	r1, r4
   1240c:	bl	115a4 <__lxstat64@plt+0x400>
   12410:	strdeq	r6, [r1], -r0
   12414:	strdeq	r0, [r0], -ip
   12418:	andeq	r6, r1, ip, lsr r2
   1241c:	andeq	r6, r1, r4, asr #3
   12420:	andeq	r6, r1, r0, lsl #2
   12424:	ldrdeq	r6, [r1], -r0
   12428:	andeq	r4, r0, r4, lsl #3
   1242c:	andeq	r6, r1, r4, lsl r0
   12430:			; <UNDEFINED> instruction: 0x00015fbc
   12434:	andeq	r5, r1, ip, lsl pc
   12438:	muleq	r1, r0, lr
   1243c:	strdeq	r5, [r1], -r0
   12440:	muleq	r0, r0, lr
   12444:	andeq	r3, r0, ip, lsl #29
   12448:	andeq	r3, r0, r8, lsl #29
   1244c:	ldrb	r3, [r0, #1]
   12450:	sub	r3, r3, #71	; 0x47
   12454:	cmp	r3, #51	; 0x33
   12458:	addls	pc, pc, r3, lsl #2
   1245c:	b	12530 <__lxstat64@plt+0x138c>
   12460:	b	12538 <__lxstat64@plt+0x1394>
   12464:	b	12530 <__lxstat64@plt+0x138c>
   12468:	b	12530 <__lxstat64@plt+0x138c>
   1246c:	b	12530 <__lxstat64@plt+0x138c>
   12470:	b	12530 <__lxstat64@plt+0x138c>
   12474:	b	12538 <__lxstat64@plt+0x1394>
   12478:	b	12530 <__lxstat64@plt+0x138c>
   1247c:	b	12538 <__lxstat64@plt+0x1394>
   12480:	b	12538 <__lxstat64@plt+0x1394>
   12484:	b	12530 <__lxstat64@plt+0x138c>
   12488:	b	12530 <__lxstat64@plt+0x138c>
   1248c:	b	12530 <__lxstat64@plt+0x138c>
   12490:	b	12538 <__lxstat64@plt+0x1394>
   12494:	b	12530 <__lxstat64@plt+0x138c>
   12498:	b	12530 <__lxstat64@plt+0x138c>
   1249c:	b	12530 <__lxstat64@plt+0x138c>
   124a0:	b	12530 <__lxstat64@plt+0x138c>
   124a4:	b	12530 <__lxstat64@plt+0x138c>
   124a8:	b	12530 <__lxstat64@plt+0x138c>
   124ac:	b	12530 <__lxstat64@plt+0x138c>
   124b0:	b	12530 <__lxstat64@plt+0x138c>
   124b4:	b	12530 <__lxstat64@plt+0x138c>
   124b8:	b	12530 <__lxstat64@plt+0x138c>
   124bc:	b	12530 <__lxstat64@plt+0x138c>
   124c0:	b	12530 <__lxstat64@plt+0x138c>
   124c4:	b	12530 <__lxstat64@plt+0x138c>
   124c8:	b	12538 <__lxstat64@plt+0x1394>
   124cc:	b	12538 <__lxstat64@plt+0x1394>
   124d0:	b	12538 <__lxstat64@plt+0x1394>
   124d4:	b	12538 <__lxstat64@plt+0x1394>
   124d8:	b	12538 <__lxstat64@plt+0x1394>
   124dc:	b	12538 <__lxstat64@plt+0x1394>
   124e0:	b	12538 <__lxstat64@plt+0x1394>
   124e4:	b	12538 <__lxstat64@plt+0x1394>
   124e8:	b	12530 <__lxstat64@plt+0x138c>
   124ec:	b	12530 <__lxstat64@plt+0x138c>
   124f0:	b	12538 <__lxstat64@plt+0x1394>
   124f4:	b	12530 <__lxstat64@plt+0x138c>
   124f8:	b	12530 <__lxstat64@plt+0x138c>
   124fc:	b	12538 <__lxstat64@plt+0x1394>
   12500:	b	12538 <__lxstat64@plt+0x1394>
   12504:	b	12538 <__lxstat64@plt+0x1394>
   12508:	b	12530 <__lxstat64@plt+0x138c>
   1250c:	b	12538 <__lxstat64@plt+0x1394>
   12510:	b	12538 <__lxstat64@plt+0x1394>
   12514:	b	12538 <__lxstat64@plt+0x1394>
   12518:	b	12538 <__lxstat64@plt+0x1394>
   1251c:	b	12530 <__lxstat64@plt+0x138c>
   12520:	b	12538 <__lxstat64@plt+0x1394>
   12524:	b	12538 <__lxstat64@plt+0x1394>
   12528:	b	12530 <__lxstat64@plt+0x138c>
   1252c:	b	12538 <__lxstat64@plt+0x1394>
   12530:	mov	r0, #0
   12534:	bx	lr
   12538:	mov	r0, #1
   1253c:	bx	lr
   12540:	push	{r4, r5, r6, lr}
   12544:	ldr	r4, [pc, #156]	; 125e8 <__lxstat64@plt+0x1444>
   12548:	add	r4, pc, r4
   1254c:	ldr	r6, [r4, #8]
   12550:	ldr	r5, [r4]
   12554:	ldr	r0, [r5, r6, lsl #2]
   12558:	ldrb	r3, [r0]
   1255c:	cmp	r3, #33	; 0x21
   12560:	bne	12574 <__lxstat64@plt+0x13d0>
   12564:	ldrb	r0, [r0, #1]
   12568:	cmp	r0, #0
   1256c:	beq	125a8 <__lxstat64@plt+0x1404>
   12570:	bl	1172c <__lxstat64@plt+0x588>
   12574:	cmp	r3, #45	; 0x2d
   12578:	bne	12570 <__lxstat64@plt+0x13cc>
   1257c:	ldrb	r3, [r0, #1]
   12580:	cmp	r3, #0
   12584:	beq	12570 <__lxstat64@plt+0x13cc>
   12588:	ldrb	r3, [r0, #2]
   1258c:	cmp	r3, #0
   12590:	bne	12570 <__lxstat64@plt+0x13cc>
   12594:	bl	1244c <__lxstat64@plt+0x12a8>
   12598:	cmp	r0, #0
   1259c:	beq	125d0 <__lxstat64@plt+0x142c>
   125a0:	pop	{r4, r5, r6, lr}
   125a4:	b	117ac <__lxstat64@plt+0x608>
   125a8:	bl	11778 <__lxstat64@plt+0x5d4>
   125ac:	ldr	r3, [r4, #8]
   125b0:	ldr	r2, [r4]
   125b4:	add	r1, r3, #1
   125b8:	str	r1, [r4, #8]
   125bc:	ldr	r3, [r2, r3, lsl #2]
   125c0:	ldrb	r0, [r3]
   125c4:	rsbs	r0, r0, #1
   125c8:	movcc	r0, #0
   125cc:	pop	{r4, r5, r6, pc}
   125d0:	ldr	r1, [pc, #20]	; 125ec <__lxstat64@plt+0x1448>
   125d4:	mov	r2, #5
   125d8:	add	r1, pc, r1
   125dc:	bl	10f7c <dcgettext@plt>
   125e0:	ldr	r1, [r5, r6, lsl #2]
   125e4:	bl	115a4 <__lxstat64@plt+0x400>
   125e8:	andeq	r5, r1, r0, lsr #24
   125ec:	andeq	r3, r0, r0, ror #25
   125f0:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   125f4:	ldr	r4, [pc, #332]	; 12748 <__lxstat64@plt+0x15a4>
   125f8:	add	r4, pc, r4
   125fc:	ldr	r8, [r4, #8]
   12600:	ldr	r5, [r4]
   12604:	add	r7, r8, #1
   12608:	ldr	r6, [r5, r7, lsl #2]
   1260c:	lsl	r9, r7, #2
   12610:	mov	r0, r6
   12614:	bl	113dc <__lxstat64@plt+0x238>
   12618:	cmp	r0, #0
   1261c:	bne	1270c <__lxstat64@plt+0x1568>
   12620:	sub	r1, r9, #4
   12624:	ldr	r3, [r5, r1]
   12628:	ldrb	r2, [r3]
   1262c:	cmp	r2, #33	; 0x21
   12630:	bne	12668 <__lxstat64@plt+0x14c4>
   12634:	ldrb	r3, [r3, #1]
   12638:	cmp	r3, #0
   1263c:	beq	12728 <__lxstat64@plt+0x1584>
   12640:	ldrb	r3, [r6]
   12644:	cmp	r3, #45	; 0x2d
   12648:	beq	126d0 <__lxstat64@plt+0x152c>
   1264c:	ldr	r1, [pc, #248]	; 1274c <__lxstat64@plt+0x15a8>
   12650:	mov	r0, #0
   12654:	mov	r2, #5
   12658:	add	r1, pc, r1
   1265c:	bl	10f7c <dcgettext@plt>
   12660:	ldr	r1, [r5, r7, lsl #2]
   12664:	bl	115a4 <__lxstat64@plt+0x400>
   12668:	cmp	r2, #40	; 0x28
   1266c:	bne	12640 <__lxstat64@plt+0x149c>
   12670:	ldrb	r3, [r3, #1]
   12674:	cmp	r3, #0
   12678:	bne	12640 <__lxstat64@plt+0x149c>
   1267c:	add	r1, r5, r1
   12680:	ldr	r3, [r1, #8]
   12684:	ldrb	r2, [r3]
   12688:	cmp	r2, #41	; 0x29
   1268c:	bne	12640 <__lxstat64@plt+0x149c>
   12690:	ldrb	r9, [r3, #1]
   12694:	cmp	r9, #0
   12698:	bne	12640 <__lxstat64@plt+0x149c>
   1269c:	bl	11778 <__lxstat64@plt+0x5d4>
   126a0:	ldr	r3, [r4, #8]
   126a4:	ldr	r2, [r4]
   126a8:	mov	r0, r9
   126ac:	add	r1, r3, #1
   126b0:	str	r1, [r4, #8]
   126b4:	ldr	r3, [r2, r3, lsl #2]
   126b8:	ldrb	r4, [r3]
   126bc:	adds	r4, r4, #0
   126c0:	movne	r4, #1
   126c4:	bl	11778 <__lxstat64@plt+0x5d4>
   126c8:	mov	r0, r4
   126cc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   126d0:	ldrb	r3, [r6, #1]
   126d4:	cmp	r3, #97	; 0x61
   126d8:	beq	12718 <__lxstat64@plt+0x1574>
   126dc:	cmp	r3, #111	; 0x6f
   126e0:	bne	1264c <__lxstat64@plt+0x14a8>
   126e4:	ldrb	r3, [r6, #2]
   126e8:	cmp	r3, #0
   126ec:	bne	1264c <__lxstat64@plt+0x14a8>
   126f0:	ldr	r3, [pc, #88]	; 12750 <__lxstat64@plt+0x15ac>
   126f4:	add	r3, pc, r3
   126f8:	ldr	r3, [r3, #4]
   126fc:	cmp	r8, r3
   12700:	bge	12744 <__lxstat64@plt+0x15a0>
   12704:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   12708:	b	12898 <__lxstat64@plt+0x16f4>
   1270c:	mov	r0, #0
   12710:	pop	{r3, r4, r5, r6, r7, r8, r9, lr}
   12714:	b	11f00 <__lxstat64@plt+0xd5c>
   12718:	ldrb	r3, [r6, #2]
   1271c:	cmp	r3, #0
   12720:	bne	1264c <__lxstat64@plt+0x14a8>
   12724:	b	126f0 <__lxstat64@plt+0x154c>
   12728:	mov	r0, #1
   1272c:	bl	11778 <__lxstat64@plt+0x5d4>
   12730:	bl	12540 <__lxstat64@plt+0x139c>
   12734:	eor	r0, r0, #1
   12738:	uxtb	r4, r0
   1273c:	mov	r0, r4
   12740:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12744:	bl	1172c <__lxstat64@plt+0x588>
   12748:	andeq	r5, r1, r0, ror fp
   1274c:	andeq	r3, r0, ip, ror ip
   12750:	andeq	r5, r1, r4, ror sl
   12754:	push	{r3, r4, r5, lr}
   12758:	sub	r3, r0, #1
   1275c:	cmp	r3, #3
   12760:	addls	pc, pc, r3, lsl #2
   12764:	b	1282c <__lxstat64@plt+0x1688>
   12768:	b	127fc <__lxstat64@plt+0x1658>
   1276c:	b	127f4 <__lxstat64@plt+0x1650>
   12770:	b	127ec <__lxstat64@plt+0x1648>
   12774:	b	12778 <__lxstat64@plt+0x15d4>
   12778:	ldr	r3, [pc, #264]	; 12888 <__lxstat64@plt+0x16e4>
   1277c:	add	r3, pc, r3
   12780:	ldr	r0, [r3]
   12784:	ldr	r3, [r3, #8]
   12788:	ldr	r2, [r0, r3, lsl #2]
   1278c:	lsl	ip, r3, #2
   12790:	ldrb	r1, [r2]
   12794:	cmp	r1, #33	; 0x21
   12798:	beq	1285c <__lxstat64@plt+0x16b8>
   1279c:	cmp	r1, #40	; 0x28
   127a0:	bne	12840 <__lxstat64@plt+0x169c>
   127a4:	ldrb	r2, [r2, #1]
   127a8:	cmp	r2, #0
   127ac:	bne	12840 <__lxstat64@plt+0x169c>
   127b0:	add	r0, r0, ip
   127b4:	ldr	r2, [r0, #12]
   127b8:	ldrb	r1, [r2]
   127bc:	cmp	r1, #41	; 0x29
   127c0:	bne	12840 <__lxstat64@plt+0x169c>
   127c4:	ldrb	r5, [r2, #1]
   127c8:	cmp	r5, #0
   127cc:	bne	12840 <__lxstat64@plt+0x169c>
   127d0:	mov	r0, r5
   127d4:	bl	11778 <__lxstat64@plt+0x5d4>
   127d8:	bl	12540 <__lxstat64@plt+0x139c>
   127dc:	mov	r4, r0
   127e0:	mov	r0, r5
   127e4:	bl	11778 <__lxstat64@plt+0x5d4>
   127e8:	b	12824 <__lxstat64@plt+0x1680>
   127ec:	pop	{r3, r4, r5, lr}
   127f0:	b	125f0 <__lxstat64@plt+0x144c>
   127f4:	pop	{r3, r4, r5, lr}
   127f8:	b	12540 <__lxstat64@plt+0x139c>
   127fc:	ldr	r3, [pc, #136]	; 1288c <__lxstat64@plt+0x16e8>
   12800:	add	r3, pc, r3
   12804:	ldr	r2, [r3, #8]
   12808:	ldr	r1, [r3]
   1280c:	add	r0, r2, #1
   12810:	str	r0, [r3, #8]
   12814:	ldr	r3, [r1, r2, lsl #2]
   12818:	ldrb	r4, [r3]
   1281c:	adds	r4, r4, #0
   12820:	movne	r4, #1
   12824:	mov	r0, r4
   12828:	pop	{r3, r4, r5, pc}
   1282c:	cmp	r0, #0
   12830:	ble	12880 <__lxstat64@plt+0x16dc>
   12834:	ldr	r3, [pc, #84]	; 12890 <__lxstat64@plt+0x16ec>
   12838:	add	r3, pc, r3
   1283c:	ldr	r3, [r3, #8]
   12840:	ldr	r2, [pc, #76]	; 12894 <__lxstat64@plt+0x16f0>
   12844:	add	r2, pc, r2
   12848:	ldr	r2, [r2, #4]
   1284c:	cmp	r3, r2
   12850:	bge	12884 <__lxstat64@plt+0x16e0>
   12854:	pop	{r3, r4, r5, lr}
   12858:	b	12898 <__lxstat64@plt+0x16f4>
   1285c:	ldrb	r2, [r2, #1]
   12860:	cmp	r2, #0
   12864:	bne	12840 <__lxstat64@plt+0x169c>
   12868:	mov	r0, #1
   1286c:	bl	11778 <__lxstat64@plt+0x5d4>
   12870:	bl	125f0 <__lxstat64@plt+0x144c>
   12874:	eor	r0, r0, #1
   12878:	uxtb	r4, r0
   1287c:	b	12824 <__lxstat64@plt+0x1680>
   12880:	bl	1118c <abort@plt>
   12884:	bl	1172c <__lxstat64@plt+0x588>
   12888:	andeq	r5, r1, ip, ror #19
   1288c:	andeq	r5, r1, r8, ror #18
   12890:	andeq	r5, r1, r0, lsr r9
   12894:	andeq	r5, r1, r4, lsr #18
   12898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1289c:	sub	sp, sp, #28
   128a0:	ldr	r7, [pc, #884]	; 12c1c <__lxstat64@plt+0x1a78>
   128a4:	mov	r1, #0
   128a8:	ldr	sl, [pc, #880]	; 12c20 <__lxstat64@plt+0x1a7c>
   128ac:	ldr	r8, [pc, #880]	; 12c24 <__lxstat64@plt+0x1a80>
   128b0:	add	r7, pc, r7
   128b4:	ldr	r2, [pc, #876]	; 12c28 <__lxstat64@plt+0x1a84>
   128b8:	add	sl, pc, sl
   128bc:	ldr	r3, [pc, #872]	; 12c2c <__lxstat64@plt+0x1a88>
   128c0:	add	r8, pc, r8
   128c4:	add	r2, pc, r2
   128c8:	str	r1, [sp, #12]
   128cc:	add	r3, pc, r3
   128d0:	str	r2, [sp, #16]
   128d4:	str	r3, [sp, #20]
   128d8:	mov	r9, #1
   128dc:	ldmib	r7, {r2, r4}
   128e0:	cmp	r4, r2
   128e4:	bge	1294c <__lxstat64@plt+0x17a8>
   128e8:	ldr	r3, [r7]
   128ec:	add	fp, r3, r4, lsl #2
   128f0:	ldr	r5, [r3, r4, lsl #2]
   128f4:	ldrb	r1, [r5]
   128f8:	cmp	r1, #33	; 0x21
   128fc:	bne	12950 <__lxstat64@plt+0x17ac>
   12900:	ldrb	r6, [r5, #1]
   12904:	cmp	r6, #0
   12908:	beq	12934 <__lxstat64@plt+0x1790>
   1290c:	b	12aa8 <__lxstat64@plt+0x1904>
   12910:	ldr	r3, [sl]
   12914:	add	fp, r3, r4, lsl #2
   12918:	ldr	r5, [r3, r4, lsl #2]
   1291c:	ldrb	r1, [r5]
   12920:	cmp	r1, #33	; 0x21
   12924:	bne	12954 <__lxstat64@plt+0x17b0>
   12928:	ldrb	r1, [r5, #1]
   1292c:	cmp	r1, #0
   12930:	bne	12aac <__lxstat64@plt+0x1908>
   12934:	mov	r0, #1
   12938:	eor	r6, r6, r0
   1293c:	bl	11778 <__lxstat64@plt+0x5d4>
   12940:	ldmib	sl, {r2, r4}
   12944:	cmp	r4, r2
   12948:	blt	12910 <__lxstat64@plt+0x176c>
   1294c:	bl	1172c <__lxstat64@plt+0x588>
   12950:	mov	r6, #0
   12954:	cmp	r1, #40	; 0x28
   12958:	bne	12998 <__lxstat64@plt+0x17f4>
   1295c:	ldrb	r0, [r5, #1]
   12960:	cmp	r0, #0
   12964:	beq	12ad8 <__lxstat64@plt+0x1934>
   12968:	rsb	r2, r4, r2
   1296c:	cmp	r2, #3
   12970:	bgt	129e0 <__lxstat64@plt+0x183c>
   12974:	cmp	r2, #3
   12978:	beq	129e0 <__lxstat64@plt+0x183c>
   1297c:	cmp	r1, #45	; 0x2d
   12980:	beq	12a04 <__lxstat64@plt+0x1860>
   12984:	mov	r0, #0
   12988:	subs	r4, r1, r0
   1298c:	movne	r4, #1
   12990:	bl	11778 <__lxstat64@plt+0x5d4>
   12994:	b	12a34 <__lxstat64@plt+0x1890>
   12998:	rsb	r2, r4, r2
   1299c:	cmp	r2, #3
   129a0:	ble	12974 <__lxstat64@plt+0x17d0>
   129a4:	cmp	r1, #45	; 0x2d
   129a8:	bne	129e0 <__lxstat64@plt+0x183c>
   129ac:	ldrb	r2, [r5, #1]
   129b0:	cmp	r2, #108	; 0x6c
   129b4:	bne	129e0 <__lxstat64@plt+0x183c>
   129b8:	ldrb	r2, [r5, #2]
   129bc:	cmp	r2, #0
   129c0:	bne	129e0 <__lxstat64@plt+0x183c>
   129c4:	add	r2, r4, #2
   129c8:	ldr	r0, [r3, r2, lsl #2]
   129cc:	stmib	sp, {r1, r3}
   129d0:	bl	113dc <__lxstat64@plt+0x238>
   129d4:	ldmib	sp, {r1, r3}
   129d8:	cmp	r0, #0
   129dc:	bne	12b98 <__lxstat64@plt+0x19f4>
   129e0:	add	r4, r4, #1
   129e4:	ldr	r0, [r3, r4, lsl #2]
   129e8:	str	r1, [sp, #4]
   129ec:	bl	113dc <__lxstat64@plt+0x238>
   129f0:	ldr	r1, [sp, #4]
   129f4:	cmp	r0, #0
   129f8:	bne	12ac8 <__lxstat64@plt+0x1924>
   129fc:	cmp	r1, #45	; 0x2d
   12a00:	bne	12984 <__lxstat64@plt+0x17e0>
   12a04:	ldrb	r3, [r5, #1]
   12a08:	cmp	r3, #0
   12a0c:	beq	12984 <__lxstat64@plt+0x17e0>
   12a10:	ldrb	r3, [r5, #2]
   12a14:	cmp	r3, #0
   12a18:	bne	12984 <__lxstat64@plt+0x17e0>
   12a1c:	mov	r0, r5
   12a20:	bl	1244c <__lxstat64@plt+0x12a8>
   12a24:	cmp	r0, #0
   12a28:	beq	12c04 <__lxstat64@plt+0x1a60>
   12a2c:	bl	117ac <__lxstat64@plt+0x608>
   12a30:	mov	r4, r0
   12a34:	ldr	r3, [r8, #8]
   12a38:	eor	r6, r6, r4
   12a3c:	ldr	r2, [r8, #4]
   12a40:	and	r9, r9, r6
   12a44:	cmp	r3, r2
   12a48:	bge	12ba8 <__lxstat64@plt+0x1a04>
   12a4c:	ldr	r2, [r8]
   12a50:	ldr	r2, [r2, r3, lsl #2]
   12a54:	ldrb	r3, [r2]
   12a58:	cmp	r3, #45	; 0x2d
   12a5c:	bne	12a90 <__lxstat64@plt+0x18ec>
   12a60:	ldrb	r1, [r2, #1]
   12a64:	cmp	r1, #97	; 0x61
   12a68:	beq	12ab4 <__lxstat64@plt+0x1910>
   12a6c:	ldr	r3, [sp, #12]
   12a70:	cmp	r1, #111	; 0x6f
   12a74:	orr	r9, r3, r9
   12a78:	uxtb	r9, r9
   12a7c:	str	r9, [sp, #12]
   12a80:	beq	12bb8 <__lxstat64@plt+0x1a14>
   12a84:	ldr	r0, [sp, #12]
   12a88:	add	sp, sp, #28
   12a8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a90:	ldr	r3, [sp, #12]
   12a94:	orr	r3, r3, r9
   12a98:	str	r3, [sp, #12]
   12a9c:	ldr	r0, [sp, #12]
   12aa0:	add	sp, sp, #28
   12aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12aa8:	mov	r6, #0
   12aac:	mov	r1, #33	; 0x21
   12ab0:	b	12968 <__lxstat64@plt+0x17c4>
   12ab4:	ldrb	r0, [r2, #2]
   12ab8:	cmp	r0, #0
   12abc:	bne	12bd4 <__lxstat64@plt+0x1a30>
   12ac0:	bl	11778 <__lxstat64@plt+0x5d4>
   12ac4:	b	128dc <__lxstat64@plt+0x1738>
   12ac8:	mov	r0, #0
   12acc:	bl	11f00 <__lxstat64@plt+0xd5c>
   12ad0:	mov	r4, r0
   12ad4:	b	12a34 <__lxstat64@plt+0x1890>
   12ad8:	mov	r0, #1
   12adc:	bl	11778 <__lxstat64@plt+0x5d4>
   12ae0:	ldr	r2, [sp, #16]
   12ae4:	ldr	r1, [r2, #8]
   12ae8:	ldr	lr, [r2, #4]
   12aec:	add	r3, r1, #1
   12af0:	cmp	lr, r3
   12af4:	ble	12bcc <__lxstat64@plt+0x1a28>
   12af8:	ldr	ip, [r2]
   12afc:	rsb	lr, r1, lr
   12b00:	mov	r0, #1
   12b04:	ldr	r3, [ip, r3, lsl #2]
   12b08:	ldrb	r2, [r3]
   12b0c:	cmp	r2, #41	; 0x29
   12b10:	bne	12b20 <__lxstat64@plt+0x197c>
   12b14:	ldrb	r3, [r3, #1]
   12b18:	cmp	r3, #0
   12b1c:	beq	12b38 <__lxstat64@plt+0x1994>
   12b20:	cmp	r0, #4
   12b24:	beq	12b90 <__lxstat64@plt+0x19ec>
   12b28:	add	r0, r0, #1
   12b2c:	cmp	r0, lr
   12b30:	add	r3, r1, r0
   12b34:	bne	12b04 <__lxstat64@plt+0x1960>
   12b38:	bl	12754 <__lxstat64@plt+0x15b0>
   12b3c:	ldr	r3, [sp, #20]
   12b40:	ldr	r2, [r3, #8]
   12b44:	ldr	r3, [r3]
   12b48:	add	r5, r3, r2, lsl #2
   12b4c:	ldr	r2, [r3, r2, lsl #2]
   12b50:	cmp	r2, #0
   12b54:	mov	r4, r0
   12b58:	beq	12be4 <__lxstat64@plt+0x1a40>
   12b5c:	ldrb	r3, [r2]
   12b60:	cmp	r3, #41	; 0x29
   12b64:	bne	12b74 <__lxstat64@plt+0x19d0>
   12b68:	ldrb	r0, [r2, #1]
   12b6c:	cmp	r0, #0
   12b70:	beq	12990 <__lxstat64@plt+0x17ec>
   12b74:	ldr	r1, [pc, #180]	; 12c30 <__lxstat64@plt+0x1a8c>
   12b78:	mov	r0, #0
   12b7c:	mov	r2, #5
   12b80:	add	r1, pc, r1
   12b84:	bl	10f7c <dcgettext@plt>
   12b88:	ldr	r1, [r5]
   12b8c:	bl	115a4 <__lxstat64@plt+0x400>
   12b90:	mov	r0, lr
   12b94:	b	12b38 <__lxstat64@plt+0x1994>
   12b98:	mov	r0, #1
   12b9c:	bl	11f00 <__lxstat64@plt+0xd5c>
   12ba0:	mov	r4, r0
   12ba4:	b	12a34 <__lxstat64@plt+0x1890>
   12ba8:	ldr	r2, [sp, #12]
   12bac:	orr	r2, r2, r9
   12bb0:	str	r2, [sp, #12]
   12bb4:	b	12a84 <__lxstat64@plt+0x18e0>
   12bb8:	ldrb	r0, [r2, #2]
   12bbc:	cmp	r0, #0
   12bc0:	bne	12a84 <__lxstat64@plt+0x18e0>
   12bc4:	bl	11778 <__lxstat64@plt+0x5d4>
   12bc8:	b	128d8 <__lxstat64@plt+0x1734>
   12bcc:	mov	r0, #1
   12bd0:	b	12b38 <__lxstat64@plt+0x1994>
   12bd4:	ldr	r1, [sp, #12]
   12bd8:	orr	r1, r1, r9
   12bdc:	str	r1, [sp, #12]
   12be0:	b	12a84 <__lxstat64@plt+0x18e0>
   12be4:	ldr	r1, [pc, #72]	; 12c34 <__lxstat64@plt+0x1a90>
   12be8:	mov	r4, r2
   12bec:	mov	r0, r2
   12bf0:	mov	r2, #5
   12bf4:	add	r1, pc, r1
   12bf8:	bl	10f7c <dcgettext@plt>
   12bfc:	mov	r1, r4
   12c00:	bl	115a4 <__lxstat64@plt+0x400>
   12c04:	ldr	r1, [pc, #44]	; 12c38 <__lxstat64@plt+0x1a94>
   12c08:	mov	r2, #5
   12c0c:	add	r1, pc, r1
   12c10:	bl	10f7c <dcgettext@plt>
   12c14:	ldr	r1, [fp]
   12c18:	bl	115a4 <__lxstat64@plt+0x400>
   12c1c:			; <UNDEFINED> instruction: 0x000158b8
   12c20:			; <UNDEFINED> instruction: 0x000158b0
   12c24:	andeq	r5, r1, r8, lsr #17
   12c28:	andeq	r5, r1, r4, lsr #17
   12c2c:	muleq	r1, ip, r8
   12c30:	andeq	r3, r0, r4, lsl #15
   12c34:	andeq	r3, r0, r0, lsl #14
   12c38:	andeq	r3, r0, ip, lsr #13
   12c3c:	push	{r3, r4, r5, r6, r7, lr}
   12c40:	subs	r4, r0, #0
   12c44:	ldr	r6, [pc, #768]	; 12f4c <__lxstat64@plt+0x1da8>
   12c48:	add	r6, pc, r6
   12c4c:	beq	12c94 <__lxstat64@plt+0x1af0>
   12c50:	ldr	r3, [pc, #760]	; 12f50 <__lxstat64@plt+0x1dac>
   12c54:	mov	r2, #5
   12c58:	ldr	r1, [pc, #756]	; 12f54 <__lxstat64@plt+0x1db0>
   12c5c:	mov	r0, #0
   12c60:	ldr	r3, [r6, r3]
   12c64:	add	r1, pc, r1
   12c68:	ldr	r5, [r3]
   12c6c:	bl	10f7c <dcgettext@plt>
   12c70:	ldr	r3, [pc, #736]	; 12f58 <__lxstat64@plt+0x1db4>
   12c74:	mov	r1, #1
   12c78:	ldr	r3, [r6, r3]
   12c7c:	ldr	r3, [r3]
   12c80:	mov	r2, r0
   12c84:	mov	r0, r5
   12c88:	bl	110f0 <__fprintf_chk@plt>
   12c8c:	mov	r0, r4
   12c90:	bl	11084 <exit@plt>
   12c94:	ldr	r1, [pc, #704]	; 12f5c <__lxstat64@plt+0x1db8>
   12c98:	mov	r2, #5
   12c9c:	add	r1, pc, r1
   12ca0:	bl	10f7c <dcgettext@plt>
   12ca4:	ldr	r3, [pc, #692]	; 12f60 <__lxstat64@plt+0x1dbc>
   12ca8:	ldr	r5, [r6, r3]
   12cac:	ldr	r1, [r5]
   12cb0:	bl	10f04 <fputs_unlocked@plt>
   12cb4:	ldr	r1, [pc, #680]	; 12f64 <__lxstat64@plt+0x1dc0>
   12cb8:	mov	r2, #5
   12cbc:	mov	r0, r4
   12cc0:	add	r1, pc, r1
   12cc4:	bl	10f7c <dcgettext@plt>
   12cc8:	ldr	r1, [r5]
   12ccc:	bl	10f04 <fputs_unlocked@plt>
   12cd0:	ldr	r1, [pc, #656]	; 12f68 <__lxstat64@plt+0x1dc4>
   12cd4:	mov	r2, #5
   12cd8:	mov	r0, r4
   12cdc:	add	r1, pc, r1
   12ce0:	bl	10f7c <dcgettext@plt>
   12ce4:	ldr	r1, [r5]
   12ce8:	bl	10f04 <fputs_unlocked@plt>
   12cec:	ldr	r1, [pc, #632]	; 12f6c <__lxstat64@plt+0x1dc8>
   12cf0:	mov	r2, #5
   12cf4:	mov	r0, r4
   12cf8:	add	r1, pc, r1
   12cfc:	bl	10f7c <dcgettext@plt>
   12d00:	ldr	r1, [r5]
   12d04:	bl	10f04 <fputs_unlocked@plt>
   12d08:	ldr	r1, [pc, #608]	; 12f70 <__lxstat64@plt+0x1dcc>
   12d0c:	mov	r2, #5
   12d10:	mov	r0, r4
   12d14:	add	r1, pc, r1
   12d18:	bl	10f7c <dcgettext@plt>
   12d1c:	ldr	r1, [r5]
   12d20:	bl	10f04 <fputs_unlocked@plt>
   12d24:	ldr	r1, [pc, #584]	; 12f74 <__lxstat64@plt+0x1dd0>
   12d28:	mov	r2, #5
   12d2c:	mov	r0, r4
   12d30:	add	r1, pc, r1
   12d34:	bl	10f7c <dcgettext@plt>
   12d38:	ldr	r1, [r5]
   12d3c:	bl	10f04 <fputs_unlocked@plt>
   12d40:	ldr	r1, [pc, #560]	; 12f78 <__lxstat64@plt+0x1dd4>
   12d44:	mov	r2, #5
   12d48:	mov	r0, r4
   12d4c:	add	r1, pc, r1
   12d50:	bl	10f7c <dcgettext@plt>
   12d54:	ldr	r1, [r5]
   12d58:	bl	10f04 <fputs_unlocked@plt>
   12d5c:	ldr	r1, [pc, #536]	; 12f7c <__lxstat64@plt+0x1dd8>
   12d60:	mov	r2, #5
   12d64:	mov	r0, r4
   12d68:	add	r1, pc, r1
   12d6c:	bl	10f7c <dcgettext@plt>
   12d70:	ldr	r1, [r5]
   12d74:	bl	10f04 <fputs_unlocked@plt>
   12d78:	ldr	r1, [pc, #512]	; 12f80 <__lxstat64@plt+0x1ddc>
   12d7c:	mov	r2, #5
   12d80:	mov	r0, r4
   12d84:	add	r1, pc, r1
   12d88:	bl	10f7c <dcgettext@plt>
   12d8c:	ldr	r1, [r5]
   12d90:	bl	10f04 <fputs_unlocked@plt>
   12d94:	ldr	r1, [pc, #488]	; 12f84 <__lxstat64@plt+0x1de0>
   12d98:	mov	r2, #5
   12d9c:	mov	r0, r4
   12da0:	add	r1, pc, r1
   12da4:	bl	10f7c <dcgettext@plt>
   12da8:	ldr	r1, [r5]
   12dac:	bl	10f04 <fputs_unlocked@plt>
   12db0:	ldr	r1, [pc, #464]	; 12f88 <__lxstat64@plt+0x1de4>
   12db4:	mov	r2, #5
   12db8:	mov	r0, r4
   12dbc:	add	r1, pc, r1
   12dc0:	bl	10f7c <dcgettext@plt>
   12dc4:	ldr	r1, [r5]
   12dc8:	bl	10f04 <fputs_unlocked@plt>
   12dcc:	ldr	r1, [pc, #440]	; 12f8c <__lxstat64@plt+0x1de8>
   12dd0:	mov	r2, #5
   12dd4:	mov	r0, r4
   12dd8:	add	r1, pc, r1
   12ddc:	bl	10f7c <dcgettext@plt>
   12de0:	ldr	r1, [r5]
   12de4:	bl	10f04 <fputs_unlocked@plt>
   12de8:	ldr	r1, [pc, #416]	; 12f90 <__lxstat64@plt+0x1dec>
   12dec:	mov	r2, #5
   12df0:	mov	r0, r4
   12df4:	add	r1, pc, r1
   12df8:	bl	10f7c <dcgettext@plt>
   12dfc:	ldr	r1, [r5]
   12e00:	bl	10f04 <fputs_unlocked@plt>
   12e04:	ldr	r1, [pc, #392]	; 12f94 <__lxstat64@plt+0x1df0>
   12e08:	mov	r2, #5
   12e0c:	mov	r0, r4
   12e10:	add	r1, pc, r1
   12e14:	bl	10f7c <dcgettext@plt>
   12e18:	ldr	r1, [r5]
   12e1c:	bl	10f04 <fputs_unlocked@plt>
   12e20:	ldr	r1, [pc, #368]	; 12f98 <__lxstat64@plt+0x1df4>
   12e24:	mov	r2, #5
   12e28:	mov	r0, r4
   12e2c:	add	r1, pc, r1
   12e30:	bl	10f7c <dcgettext@plt>
   12e34:	ldr	r1, [r5]
   12e38:	bl	10f04 <fputs_unlocked@plt>
   12e3c:	ldr	r1, [pc, #344]	; 12f9c <__lxstat64@plt+0x1df8>
   12e40:	mov	r2, #5
   12e44:	mov	r0, r4
   12e48:	add	r1, pc, r1
   12e4c:	bl	10f7c <dcgettext@plt>
   12e50:	ldr	r1, [pc, #328]	; 12fa0 <__lxstat64@plt+0x1dfc>
   12e54:	mov	r2, #5
   12e58:	add	r1, pc, r1
   12e5c:	mov	r5, r0
   12e60:	mov	r0, r4
   12e64:	bl	10f7c <dcgettext@plt>
   12e68:	mov	r1, r5
   12e6c:	mov	r2, r0
   12e70:	mov	r0, #1
   12e74:	bl	110d8 <__printf_chk@plt>
   12e78:	ldr	r1, [pc, #292]	; 12fa4 <__lxstat64@plt+0x1e00>
   12e7c:	mov	r2, #5
   12e80:	mov	r0, r4
   12e84:	add	r1, pc, r1
   12e88:	bl	10f7c <dcgettext@plt>
   12e8c:	ldr	r2, [pc, #276]	; 12fa8 <__lxstat64@plt+0x1e04>
   12e90:	ldr	r3, [pc, #276]	; 12fac <__lxstat64@plt+0x1e08>
   12e94:	add	r2, pc, r2
   12e98:	add	r3, pc, r3
   12e9c:	mov	r1, r0
   12ea0:	mov	r0, #1
   12ea4:	bl	110d8 <__printf_chk@plt>
   12ea8:	mov	r0, #5
   12eac:	mov	r1, r4
   12eb0:	bl	1112c <setlocale@plt>
   12eb4:	cmp	r0, #0
   12eb8:	beq	12ed4 <__lxstat64@plt+0x1d30>
   12ebc:	ldr	r1, [pc, #236]	; 12fb0 <__lxstat64@plt+0x1e0c>
   12ec0:	mov	r2, #3
   12ec4:	add	r1, pc, r1
   12ec8:	bl	11180 <strncmp@plt>
   12ecc:	cmp	r0, #0
   12ed0:	bne	12f10 <__lxstat64@plt+0x1d6c>
   12ed4:	ldr	r3, [pc, #124]	; 12f58 <__lxstat64@plt+0x1db4>
   12ed8:	ldr	r5, [r6, r3]
   12edc:	ldr	r1, [pc, #208]	; 12fb4 <__lxstat64@plt+0x1e10>
   12ee0:	mov	r2, #5
   12ee4:	mov	r0, #0
   12ee8:	add	r1, pc, r1
   12eec:	bl	10f7c <dcgettext@plt>
   12ef0:	mov	r6, r0
   12ef4:	ldr	r0, [r5]
   12ef8:	bl	130fc <close_stdout@@Base+0x118>
   12efc:	mov	r1, r6
   12f00:	mov	r2, r0
   12f04:	mov	r0, #1
   12f08:	bl	110d8 <__printf_chk@plt>
   12f0c:	b	12c8c <__lxstat64@plt+0x1ae8>
   12f10:	ldr	r1, [pc, #160]	; 12fb8 <__lxstat64@plt+0x1e14>
   12f14:	mov	r2, #5
   12f18:	mov	r0, r4
   12f1c:	add	r1, pc, r1
   12f20:	bl	10f7c <dcgettext@plt>
   12f24:	ldr	r3, [pc, #44]	; 12f58 <__lxstat64@plt+0x1db4>
   12f28:	ldr	r5, [r6, r3]
   12f2c:	mov	r7, r0
   12f30:	ldr	r0, [r5]
   12f34:	bl	130fc <close_stdout@@Base+0x118>
   12f38:	mov	r1, r7
   12f3c:	mov	r2, r0
   12f40:	mov	r0, #1
   12f44:	bl	110d8 <__printf_chk@plt>
   12f48:	b	12edc <__lxstat64@plt+0x1d38>
   12f4c:			; <UNDEFINED> instruction: 0x000153b0
   12f50:	andeq	r0, r0, r0, lsl #2
   12f54:			; <UNDEFINED> instruction: 0x000036b8
   12f58:	andeq	r0, r0, ip, lsl r1
   12f5c:	andeq	r3, r0, r8, lsr #13
   12f60:	andeq	r0, r0, r0, lsl r1
   12f64:	ldrdeq	r3, [r0], -ip
   12f68:	strdeq	r3, [r0], -r4
   12f6c:	andeq	r3, r0, r8, lsl #14
   12f70:	andeq	r3, r0, r4, lsr #14
   12f74:	andeq	r3, r0, r0, lsl #15
   12f78:	andeq	r3, r0, r0, ror #16
   12f7c:	andeq	r3, r0, r0, asr #18
   12f80:	muleq	r0, ip, sl
   12f84:	andeq	r3, r0, r0, asr #22
   12f88:	ldrdeq	r3, [r0], -r0
   12f8c:	andeq	r3, r0, r8, asr #25
   12f90:	ldrdeq	r3, [r0], -r0
   12f94:	ldrdeq	r3, [r0], -r4
   12f98:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   12f9c:	andeq	r4, r0, r8
   12fa0:	strheq	r4, [r0], -r8
   12fa4:	muleq	r0, ip, r0
   12fa8:	andeq	r4, r0, r4, lsr #1
   12fac:	strheq	r4, [r0], -r0
   12fb0:	andeq	r4, r0, ip, lsr #1
   12fb4:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   12fb8:	andeq	r4, r0, r8, asr r0
   12fbc:	ldr	r3, [pc, #8]	; 12fcc <__lxstat64@plt+0x1e28>
   12fc0:	add	r3, pc, r3
   12fc4:	str	r0, [r3]
   12fc8:	bx	lr
   12fcc:			; <UNDEFINED> instruction: 0x000151b4
   12fd0:	ldr	r3, [pc, #8]	; 12fe0 <__lxstat64@plt+0x1e3c>
   12fd4:	add	r3, pc, r3
   12fd8:	strb	r0, [r3, #4]
   12fdc:	bx	lr
   12fe0:	andeq	r5, r1, r0, lsr #3

00012fe4 <close_stdout@@Base>:
   12fe4:	push	{r4, r5, r6, r7, lr}
   12fe8:	sub	sp, sp, #12
   12fec:	ldr	r4, [pc, #228]	; 130d8 <close_stdout@@Base+0xf4>
   12ff0:	ldr	r3, [pc, #228]	; 130dc <close_stdout@@Base+0xf8>
   12ff4:	add	r4, pc, r4
   12ff8:	ldr	r3, [r4, r3]
   12ffc:	ldr	r0, [r3]
   13000:	bl	14fb0 <close_stdout@@Base+0x1fcc>
   13004:	cmp	r0, #0
   13008:	beq	13030 <close_stdout@@Base+0x4c>
   1300c:	ldr	r3, [pc, #204]	; 130e0 <close_stdout@@Base+0xfc>
   13010:	add	r3, pc, r3
   13014:	ldrb	r3, [r3, #4]
   13018:	cmp	r3, #0
   1301c:	beq	13050 <close_stdout@@Base+0x6c>
   13020:	bl	110a8 <__errno_location@plt>
   13024:	ldr	r3, [r0]
   13028:	cmp	r3, #32
   1302c:	bne	13050 <close_stdout@@Base+0x6c>
   13030:	ldr	r3, [pc, #172]	; 130e4 <close_stdout@@Base+0x100>
   13034:	ldr	r3, [r4, r3]
   13038:	ldr	r0, [r3]
   1303c:	bl	14fb0 <close_stdout@@Base+0x1fcc>
   13040:	cmp	r0, #0
   13044:	bne	130a4 <close_stdout@@Base+0xc0>
   13048:	add	sp, sp, #12
   1304c:	pop	{r4, r5, r6, r7, pc}
   13050:	ldr	r1, [pc, #144]	; 130e8 <close_stdout@@Base+0x104>
   13054:	mov	r0, #0
   13058:	mov	r2, #5
   1305c:	add	r1, pc, r1
   13060:	bl	10f7c <dcgettext@plt>
   13064:	ldr	r3, [pc, #128]	; 130ec <close_stdout@@Base+0x108>
   13068:	ldr	r5, [pc, r3]
   1306c:	cmp	r5, #0
   13070:	mov	r6, r0
   13074:	beq	130b4 <close_stdout@@Base+0xd0>
   13078:	bl	110a8 <__errno_location@plt>
   1307c:	ldr	r7, [r0]
   13080:	mov	r0, r5
   13084:	bl	14900 <close_stdout@@Base+0x191c>
   13088:	ldr	r2, [pc, #96]	; 130f0 <close_stdout@@Base+0x10c>
   1308c:	str	r6, [sp]
   13090:	mov	r1, r7
   13094:	add	r2, pc, r2
   13098:	mov	r3, r0
   1309c:	mov	r0, #0
   130a0:	bl	11024 <error@plt>
   130a4:	ldr	r3, [pc, #72]	; 130f4 <close_stdout@@Base+0x110>
   130a8:	ldr	r3, [r4, r3]
   130ac:	ldr	r0, [r3]
   130b0:	bl	10f4c <_exit@plt>
   130b4:	bl	110a8 <__errno_location@plt>
   130b8:	ldr	r2, [pc, #56]	; 130f8 <close_stdout@@Base+0x114>
   130bc:	add	r2, pc, r2
   130c0:	mov	r3, r0
   130c4:	mov	r0, r5
   130c8:	ldr	r1, [r3]
   130cc:	mov	r3, r6
   130d0:	bl	11024 <error@plt>
   130d4:	b	130a4 <close_stdout@@Base+0xc0>
   130d8:	andeq	r5, r1, r4
   130dc:	andeq	r0, r0, r0, lsl r1
   130e0:	andeq	r5, r1, r4, ror #2
   130e4:	andeq	r0, r0, r0, lsl #2
   130e8:	andeq	r3, r0, ip, asr #31
   130ec:	andeq	r5, r1, ip, lsl #2
   130f0:	andeq	r3, r0, r0, lsr #31
   130f4:	andeq	r0, r0, r4, lsl r1
   130f8:	andeq	r3, r0, ip, ror pc
   130fc:	ldrb	r3, [r0]
   13100:	cmp	r3, #47	; 0x2f
   13104:	bne	13120 <close_stdout@@Base+0x13c>
   13108:	add	r2, r0, #1
   1310c:	mov	r0, r2
   13110:	add	r2, r2, #1
   13114:	ldrb	r3, [r0]
   13118:	cmp	r3, #47	; 0x2f
   1311c:	beq	1310c <close_stdout@@Base+0x128>
   13120:	cmp	r3, #0
   13124:	bxeq	lr
   13128:	mov	r2, r0
   1312c:	mov	r1, #0
   13130:	cmp	r3, #47	; 0x2f
   13134:	moveq	r1, #1
   13138:	beq	13148 <close_stdout@@Base+0x164>
   1313c:	cmp	r1, #0
   13140:	movne	r0, r2
   13144:	movne	r1, #0
   13148:	ldrb	r3, [r2, #1]!
   1314c:	cmp	r3, #0
   13150:	bne	13130 <close_stdout@@Base+0x14c>
   13154:	bx	lr
   13158:	push	{r4, lr}
   1315c:	mov	r4, r0
   13160:	bl	11090 <strlen@plt>
   13164:	cmp	r0, #1
   13168:	popls	{r4, pc}
   1316c:	sub	r3, r0, #1
   13170:	ldrb	r2, [r4, r3]
   13174:	cmp	r2, #47	; 0x2f
   13178:	popne	{r4, pc}
   1317c:	mov	r0, r3
   13180:	cmp	r0, #1
   13184:	sub	r3, r3, #1
   13188:	beq	1319c <close_stdout@@Base+0x1b8>
   1318c:	ldrb	r2, [r4, r3]
   13190:	cmp	r2, #47	; 0x2f
   13194:	popne	{r4, pc}
   13198:	b	1317c <close_stdout@@Base+0x198>
   1319c:	pop	{r4, pc}
   131a0:	push	{r3, r4, r5, r6, r7, lr}
   131a4:	add	r6, r2, #19
   131a8:	mov	r4, r0
   131ac:	mov	r5, r1
   131b0:	mov	r3, #0
   131b4:	strb	r3, [r2, #20]
   131b8:	mov	r0, r4
   131bc:	mov	r1, r5
   131c0:	mov	r2, #10
   131c4:	mov	r3, #0
   131c8:	bl	15804 <close_stdout@@Base+0x2820>
   131cc:	mov	r7, r6
   131d0:	mov	r0, r4
   131d4:	mov	r1, r5
   131d8:	mov	r3, #0
   131dc:	add	ip, r2, #48	; 0x30
   131e0:	mov	r2, #10
   131e4:	strb	ip, [r6], #-1
   131e8:	bl	15804 <close_stdout@@Base+0x2820>
   131ec:	mov	r4, r0
   131f0:	mov	r5, r1
   131f4:	orrs	r3, r4, r5
   131f8:	bne	131b8 <close_stdout@@Base+0x1d4>
   131fc:	mov	r0, r7
   13200:	pop	{r3, r4, r5, r6, r7, pc}
   13204:	push	{r3, r4, r5, r6, r7, lr}
   13208:	subs	r4, r0, #0
   1320c:	ldr	r5, [pc, #172]	; 132c0 <close_stdout@@Base+0x2dc>
   13210:	add	r5, pc, r5
   13214:	beq	1329c <close_stdout@@Base+0x2b8>
   13218:	mov	r1, #47	; 0x2f
   1321c:	bl	11138 <strrchr@plt>
   13220:	subs	r6, r0, #0
   13224:	beq	13280 <close_stdout@@Base+0x29c>
   13228:	add	r7, r6, #1
   1322c:	rsb	r3, r4, r7
   13230:	cmp	r3, #6
   13234:	ble	13280 <close_stdout@@Base+0x29c>
   13238:	ldr	r1, [pc, #132]	; 132c4 <close_stdout@@Base+0x2e0>
   1323c:	sub	r0, r6, #6
   13240:	mov	r2, #7
   13244:	add	r1, pc, r1
   13248:	bl	11180 <strncmp@plt>
   1324c:	cmp	r0, #0
   13250:	bne	13280 <close_stdout@@Base+0x29c>
   13254:	ldr	r1, [pc, #108]	; 132c8 <close_stdout@@Base+0x2e4>
   13258:	mov	r0, r7
   1325c:	mov	r2, #3
   13260:	add	r1, pc, r1
   13264:	bl	11180 <strncmp@plt>
   13268:	cmp	r0, #0
   1326c:	movne	r4, r7
   13270:	ldreq	r3, [pc, #84]	; 132cc <close_stdout@@Base+0x2e8>
   13274:	addeq	r4, r6, #4
   13278:	ldreq	r3, [r5, r3]
   1327c:	streq	r4, [r3]
   13280:	ldr	r2, [pc, #72]	; 132d0 <close_stdout@@Base+0x2ec>
   13284:	ldr	r3, [pc, #72]	; 132d4 <close_stdout@@Base+0x2f0>
   13288:	ldr	r2, [r5, r2]
   1328c:	str	r4, [r2]
   13290:	ldr	r3, [r5, r3]
   13294:	str	r4, [r3]
   13298:	pop	{r3, r4, r5, r6, r7, pc}
   1329c:	ldr	r3, [pc, #52]	; 132d8 <close_stdout@@Base+0x2f4>
   132a0:	mov	r1, #1
   132a4:	ldr	r0, [pc, #48]	; 132dc <close_stdout@@Base+0x2f8>
   132a8:	mov	r2, #55	; 0x37
   132ac:	ldr	r3, [r5, r3]
   132b0:	add	r0, pc, r0
   132b4:	ldr	r3, [r3]
   132b8:	bl	10fdc <fwrite@plt>
   132bc:	bl	1118c <abort@plt>
   132c0:	andeq	r4, r1, r8, ror #27
   132c4:	andeq	r3, r0, r0, lsr lr
   132c8:	andeq	r3, r0, ip, lsl lr
   132cc:	andeq	r0, r0, r0, lsr #2
   132d0:	andeq	r0, r0, ip, lsl r1
   132d4:	andeq	r0, r0, r8, lsl r1
   132d8:	andeq	r0, r0, r0, lsl #2
   132dc:	andeq	r3, r0, ip, lsl #27
   132e0:	push	{r3, lr}
   132e4:	mov	r3, r0
   132e8:	mov	r2, #0
   132ec:	cmp	r1, #8
   132f0:	str	r2, [r3], #4
   132f4:	add	r3, r3, #4
   132f8:	str	r2, [r0, #4]
   132fc:	str	r2, [r3], #4
   13300:	str	r2, [r3], #4
   13304:	str	r2, [r3], #4
   13308:	str	r2, [r3], #4
   1330c:	str	r2, [r3], #4
   13310:	str	r2, [r3], #4
   13314:	str	r2, [r3], #4
   13318:	str	r2, [r3], #4
   1331c:	str	r2, [r3], #4
   13320:	str	r2, [r3]
   13324:	beq	13330 <close_stdout@@Base+0x34c>
   13328:	str	r1, [r0]
   1332c:	pop	{r3, pc}
   13330:	bl	1118c <abort@plt>
   13334:	push	{r4, r5, r6, lr}
   13338:	mov	r4, r0
   1333c:	mov	r6, r1
   13340:	mov	r0, #0
   13344:	mov	r1, r4
   13348:	mov	r2, #5
   1334c:	bl	10f7c <dcgettext@plt>
   13350:	cmp	r0, r4
   13354:	mov	r5, r0
   13358:	beq	13360 <close_stdout@@Base+0x37c>
   1335c:	pop	{r4, r5, r6, pc}
   13360:	bl	15030 <close_stdout@@Base+0x204c>
   13364:	ldrb	r3, [r0]
   13368:	bic	r3, r3, #32
   1336c:	cmp	r3, #85	; 0x55
   13370:	bne	133e4 <close_stdout@@Base+0x400>
   13374:	ldrb	r3, [r0, #1]
   13378:	bic	r3, r3, #32
   1337c:	cmp	r3, #84	; 0x54
   13380:	bne	133d0 <close_stdout@@Base+0x3ec>
   13384:	ldrb	r3, [r0, #2]
   13388:	bic	r3, r3, #32
   1338c:	cmp	r3, #70	; 0x46
   13390:	bne	133d0 <close_stdout@@Base+0x3ec>
   13394:	ldrb	r3, [r0, #3]
   13398:	cmp	r3, #45	; 0x2d
   1339c:	bne	133d0 <close_stdout@@Base+0x3ec>
   133a0:	ldrb	r3, [r0, #4]
   133a4:	cmp	r3, #56	; 0x38
   133a8:	bne	133d0 <close_stdout@@Base+0x3ec>
   133ac:	ldrb	r3, [r0, #5]
   133b0:	cmp	r3, #0
   133b4:	bne	133d0 <close_stdout@@Base+0x3ec>
   133b8:	ldrb	r3, [r5]
   133bc:	cmp	r3, #96	; 0x60
   133c0:	beq	1345c <close_stdout@@Base+0x478>
   133c4:	ldr	r0, [pc, #180]	; 13480 <close_stdout@@Base+0x49c>
   133c8:	add	r0, pc, r0
   133cc:	pop	{r4, r5, r6, pc}
   133d0:	cmp	r6, #7
   133d4:	beq	13468 <close_stdout@@Base+0x484>
   133d8:	ldr	r0, [pc, #164]	; 13484 <close_stdout@@Base+0x4a0>
   133dc:	add	r0, pc, r0
   133e0:	pop	{r4, r5, r6, pc}
   133e4:	cmp	r3, #71	; 0x47
   133e8:	bne	133d0 <close_stdout@@Base+0x3ec>
   133ec:	ldrb	r3, [r0, #1]
   133f0:	bic	r3, r3, #32
   133f4:	cmp	r3, #66	; 0x42
   133f8:	bne	133d0 <close_stdout@@Base+0x3ec>
   133fc:	ldrb	r3, [r0, #2]
   13400:	cmp	r3, #49	; 0x31
   13404:	bne	133d0 <close_stdout@@Base+0x3ec>
   13408:	ldrb	r3, [r0, #3]
   1340c:	cmp	r3, #56	; 0x38
   13410:	bne	133d0 <close_stdout@@Base+0x3ec>
   13414:	ldrb	r3, [r0, #4]
   13418:	cmp	r3, #48	; 0x30
   1341c:	bne	133d0 <close_stdout@@Base+0x3ec>
   13420:	ldrb	r3, [r0, #5]
   13424:	cmp	r3, #51	; 0x33
   13428:	bne	133d0 <close_stdout@@Base+0x3ec>
   1342c:	ldrb	r3, [r0, #6]
   13430:	cmp	r3, #48	; 0x30
   13434:	bne	133d0 <close_stdout@@Base+0x3ec>
   13438:	ldrb	r3, [r0, #7]
   1343c:	cmp	r3, #0
   13440:	bne	133d0 <close_stdout@@Base+0x3ec>
   13444:	ldrb	r3, [r5]
   13448:	cmp	r3, #96	; 0x60
   1344c:	beq	13474 <close_stdout@@Base+0x490>
   13450:	ldr	r0, [pc, #48]	; 13488 <close_stdout@@Base+0x4a4>
   13454:	add	r0, pc, r0
   13458:	pop	{r4, r5, r6, pc}
   1345c:	ldr	r0, [pc, #40]	; 1348c <close_stdout@@Base+0x4a8>
   13460:	add	r0, pc, r0
   13464:	pop	{r4, r5, r6, pc}
   13468:	ldr	r0, [pc, #32]	; 13490 <close_stdout@@Base+0x4ac>
   1346c:	add	r0, pc, r0
   13470:	pop	{r4, r5, r6, pc}
   13474:	ldr	r0, [pc, #24]	; 13494 <close_stdout@@Base+0x4b0>
   13478:	add	r0, pc, r0
   1347c:	pop	{r4, r5, r6, pc}
   13480:	ldrdeq	r3, [r0], -r8
   13484:	andeq	r3, r0, ip, asr #25
   13488:	andeq	r3, r0, r0, asr ip
   1348c:	andeq	r3, r0, r4, asr ip
   13490:	andeq	r3, r0, r0, asr #24
   13494:	andeq	r3, r0, r8, lsr ip
   13498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1349c:	sub	sp, sp, #124	; 0x7c
   134a0:	ldr	ip, [pc, #3304]	; 14190 <close_stdout@@Base+0x11ac>
   134a4:	mov	sl, r1
   134a8:	str	r0, [sp, #40]	; 0x28
   134ac:	mov	r8, r3
   134b0:	ldr	r0, [pc, #3292]	; 14194 <close_stdout@@Base+0x11b0>
   134b4:	add	ip, pc, ip
   134b8:	str	r2, [sp, #32]
   134bc:	ldr	r1, [sp, #164]	; 0xa4
   134c0:	mov	r3, ip
   134c4:	ldr	r0, [ip, r0]
   134c8:	ldr	r2, [sp, #172]	; 0xac
   134cc:	ubfx	r1, r1, #1, #1
   134d0:	str	r1, [sp, #36]	; 0x24
   134d4:	str	r0, [sp, #56]	; 0x38
   134d8:	ldr	r0, [sp, #168]	; 0xa8
   134dc:	ldr	r1, [sp, #176]	; 0xb0
   134e0:	str	r2, [sp, #72]	; 0x48
   134e4:	str	r0, [sp, #48]	; 0x30
   134e8:	ldr	r0, [sp, #56]	; 0x38
   134ec:	str	r1, [sp, #68]	; 0x44
   134f0:	ldr	r3, [r0]
   134f4:	str	r3, [sp, #116]	; 0x74
   134f8:	bl	10ff4 <__ctype_get_mb_cur_max@plt>
   134fc:	ldr	r2, [sp, #160]	; 0xa0
   13500:	str	r0, [sp, #64]	; 0x40
   13504:	cmp	r2, #8
   13508:	addls	pc, pc, r2, lsl #2
   1350c:	b	1406c <close_stdout@@Base+0x1088>
   13510:	b	13534 <close_stdout@@Base+0x550>
   13514:	b	13d84 <close_stdout@@Base+0xda0>
   13518:	b	13db4 <close_stdout@@Base+0xdd0>
   1351c:	b	13c64 <close_stdout@@Base+0xc80>
   13520:	b	13ca4 <close_stdout@@Base+0xcc0>
   13524:	b	13cd0 <close_stdout@@Base+0xcec>
   13528:	b	13cf0 <close_stdout@@Base+0xd0c>
   1352c:	b	13cf0 <close_stdout@@Base+0xd0c>
   13530:	b	13cf0 <close_stdout@@Base+0xd0c>
   13534:	mov	r2, #0
   13538:	str	r2, [sp, #36]	; 0x24
   1353c:	mov	r9, r2
   13540:	str	r2, [sp, #24]
   13544:	str	r2, [sp, #28]
   13548:	str	r2, [sp, #52]	; 0x34
   1354c:	ldr	r0, [sp, #36]	; 0x24
   13550:	mov	fp, #0
   13554:	ldr	r1, [sp, #24]
   13558:	eor	r2, r0, #1
   1355c:	eor	r3, r1, #1
   13560:	and	r3, r2, r3
   13564:	and	r2, r1, r0
   13568:	str	r3, [sp, #44]	; 0x2c
   1356c:	str	r2, [sp, #76]	; 0x4c
   13570:	cmn	r8, #1
   13574:	beq	138f4 <close_stdout@@Base+0x910>
   13578:	subs	r3, fp, r8
   1357c:	movne	r3, #1
   13580:	cmp	r3, #0
   13584:	beq	1390c <close_stdout@@Base+0x928>
   13588:	ldr	r3, [sp, #28]
   1358c:	ldr	r0, [sp, #24]
   13590:	adds	r7, r3, #0
   13594:	movne	r7, #1
   13598:	ands	r6, r7, r0
   1359c:	bne	13df8 <close_stdout@@Base+0xe14>
   135a0:	ldr	r1, [sp, #32]
   135a4:	add	r5, r1, fp
   135a8:	ldrb	r4, [r5]
   135ac:	cmp	r4, #126	; 0x7e
   135b0:	addls	pc, pc, r4, lsl #2
   135b4:	b	13b78 <close_stdout@@Base+0xb94>
   135b8:	b	13a84 <close_stdout@@Base+0xaa0>
   135bc:	b	13b78 <close_stdout@@Base+0xb94>
   135c0:	b	13b78 <close_stdout@@Base+0xb94>
   135c4:	b	13b78 <close_stdout@@Base+0xb94>
   135c8:	b	13b78 <close_stdout@@Base+0xb94>
   135cc:	b	13b78 <close_stdout@@Base+0xb94>
   135d0:	b	13b78 <close_stdout@@Base+0xb94>
   135d4:	b	13a6c <close_stdout@@Base+0xa88>
   135d8:	b	13a54 <close_stdout@@Base+0xa70>
   135dc:	b	13a7c <close_stdout@@Base+0xa98>
   135e0:	b	13a74 <close_stdout@@Base+0xa90>
   135e4:	b	13a64 <close_stdout@@Base+0xa80>
   135e8:	b	13a5c <close_stdout@@Base+0xa78>
   135ec:	b	13a20 <close_stdout@@Base+0xa3c>
   135f0:	b	13b78 <close_stdout@@Base+0xb94>
   135f4:	b	13b78 <close_stdout@@Base+0xb94>
   135f8:	b	13b78 <close_stdout@@Base+0xb94>
   135fc:	b	13b78 <close_stdout@@Base+0xb94>
   13600:	b	13b78 <close_stdout@@Base+0xb94>
   13604:	b	13b78 <close_stdout@@Base+0xb94>
   13608:	b	13b78 <close_stdout@@Base+0xb94>
   1360c:	b	13b78 <close_stdout@@Base+0xb94>
   13610:	b	13b78 <close_stdout@@Base+0xb94>
   13614:	b	13b78 <close_stdout@@Base+0xb94>
   13618:	b	13b78 <close_stdout@@Base+0xb94>
   1361c:	b	13b78 <close_stdout@@Base+0xb94>
   13620:	b	13b78 <close_stdout@@Base+0xb94>
   13624:	b	13b78 <close_stdout@@Base+0xb94>
   13628:	b	13b78 <close_stdout@@Base+0xb94>
   1362c:	b	13b78 <close_stdout@@Base+0xb94>
   13630:	b	13b78 <close_stdout@@Base+0xb94>
   13634:	b	13b78 <close_stdout@@Base+0xb94>
   13638:	b	139ac <close_stdout@@Base+0x9c8>
   1363c:	b	139ac <close_stdout@@Base+0x9c8>
   13640:	b	139ac <close_stdout@@Base+0x9c8>
   13644:	b	139a4 <close_stdout@@Base+0x9c0>
   13648:	b	139ac <close_stdout@@Base+0x9c8>
   1364c:	b	13880 <close_stdout@@Base+0x89c>
   13650:	b	139ac <close_stdout@@Base+0x9c8>
   13654:	b	13b20 <close_stdout@@Base+0xb3c>
   13658:	b	139ac <close_stdout@@Base+0x9c8>
   1365c:	b	139ac <close_stdout@@Base+0x9c8>
   13660:	b	139ac <close_stdout@@Base+0x9c8>
   13664:	b	13880 <close_stdout@@Base+0x89c>
   13668:	b	13880 <close_stdout@@Base+0x89c>
   1366c:	b	13880 <close_stdout@@Base+0x89c>
   13670:	b	13880 <close_stdout@@Base+0x89c>
   13674:	b	13880 <close_stdout@@Base+0x89c>
   13678:	b	13880 <close_stdout@@Base+0x89c>
   1367c:	b	13880 <close_stdout@@Base+0x89c>
   13680:	b	13880 <close_stdout@@Base+0x89c>
   13684:	b	13880 <close_stdout@@Base+0x89c>
   13688:	b	13880 <close_stdout@@Base+0x89c>
   1368c:	b	13880 <close_stdout@@Base+0x89c>
   13690:	b	13880 <close_stdout@@Base+0x89c>
   13694:	b	13880 <close_stdout@@Base+0x89c>
   13698:	b	13880 <close_stdout@@Base+0x89c>
   1369c:	b	13880 <close_stdout@@Base+0x89c>
   136a0:	b	13880 <close_stdout@@Base+0x89c>
   136a4:	b	139ac <close_stdout@@Base+0x9c8>
   136a8:	b	139ac <close_stdout@@Base+0x9c8>
   136ac:	b	139ac <close_stdout@@Base+0x9c8>
   136b0:	b	139ac <close_stdout@@Base+0x9c8>
   136b4:	b	137b4 <close_stdout@@Base+0x7d0>
   136b8:	b	13b78 <close_stdout@@Base+0xb94>
   136bc:	b	13880 <close_stdout@@Base+0x89c>
   136c0:	b	13880 <close_stdout@@Base+0x89c>
   136c4:	b	13880 <close_stdout@@Base+0x89c>
   136c8:	b	13880 <close_stdout@@Base+0x89c>
   136cc:	b	13880 <close_stdout@@Base+0x89c>
   136d0:	b	13880 <close_stdout@@Base+0x89c>
   136d4:	b	13880 <close_stdout@@Base+0x89c>
   136d8:	b	13880 <close_stdout@@Base+0x89c>
   136dc:	b	13880 <close_stdout@@Base+0x89c>
   136e0:	b	13880 <close_stdout@@Base+0x89c>
   136e4:	b	13880 <close_stdout@@Base+0x89c>
   136e8:	b	13880 <close_stdout@@Base+0x89c>
   136ec:	b	13880 <close_stdout@@Base+0x89c>
   136f0:	b	13880 <close_stdout@@Base+0x89c>
   136f4:	b	13880 <close_stdout@@Base+0x89c>
   136f8:	b	13880 <close_stdout@@Base+0x89c>
   136fc:	b	13880 <close_stdout@@Base+0x89c>
   13700:	b	13880 <close_stdout@@Base+0x89c>
   13704:	b	13880 <close_stdout@@Base+0x89c>
   13708:	b	13880 <close_stdout@@Base+0x89c>
   1370c:	b	13880 <close_stdout@@Base+0x89c>
   13710:	b	13880 <close_stdout@@Base+0x89c>
   13714:	b	13880 <close_stdout@@Base+0x89c>
   13718:	b	13880 <close_stdout@@Base+0x89c>
   1371c:	b	13880 <close_stdout@@Base+0x89c>
   13720:	b	13880 <close_stdout@@Base+0x89c>
   13724:	b	139ac <close_stdout@@Base+0x9c8>
   13728:	b	13b04 <close_stdout@@Base+0xb20>
   1372c:	b	13880 <close_stdout@@Base+0x89c>
   13730:	b	139ac <close_stdout@@Base+0x9c8>
   13734:	b	13880 <close_stdout@@Base+0x89c>
   13738:	b	139ac <close_stdout@@Base+0x9c8>
   1373c:	b	13880 <close_stdout@@Base+0x89c>
   13740:	b	13880 <close_stdout@@Base+0x89c>
   13744:	b	13880 <close_stdout@@Base+0x89c>
   13748:	b	13880 <close_stdout@@Base+0x89c>
   1374c:	b	13880 <close_stdout@@Base+0x89c>
   13750:	b	13880 <close_stdout@@Base+0x89c>
   13754:	b	13880 <close_stdout@@Base+0x89c>
   13758:	b	13880 <close_stdout@@Base+0x89c>
   1375c:	b	13880 <close_stdout@@Base+0x89c>
   13760:	b	13880 <close_stdout@@Base+0x89c>
   13764:	b	13880 <close_stdout@@Base+0x89c>
   13768:	b	13880 <close_stdout@@Base+0x89c>
   1376c:	b	13880 <close_stdout@@Base+0x89c>
   13770:	b	13880 <close_stdout@@Base+0x89c>
   13774:	b	13880 <close_stdout@@Base+0x89c>
   13778:	b	13880 <close_stdout@@Base+0x89c>
   1377c:	b	13880 <close_stdout@@Base+0x89c>
   13780:	b	13880 <close_stdout@@Base+0x89c>
   13784:	b	13880 <close_stdout@@Base+0x89c>
   13788:	b	13880 <close_stdout@@Base+0x89c>
   1378c:	b	13880 <close_stdout@@Base+0x89c>
   13790:	b	13880 <close_stdout@@Base+0x89c>
   13794:	b	13880 <close_stdout@@Base+0x89c>
   13798:	b	13880 <close_stdout@@Base+0x89c>
   1379c:	b	13880 <close_stdout@@Base+0x89c>
   137a0:	b	13880 <close_stdout@@Base+0x89c>
   137a4:	b	1398c <close_stdout@@Base+0x9a8>
   137a8:	b	139ac <close_stdout@@Base+0x9c8>
   137ac:	b	1398c <close_stdout@@Base+0x9a8>
   137b0:	b	139a4 <close_stdout@@Base+0x9c0>
   137b4:	ldr	r3, [sp, #160]	; 0xa0
   137b8:	cmp	r3, #2
   137bc:	beq	14048 <close_stdout@@Base+0x1064>
   137c0:	cmp	r3, #3
   137c4:	bne	13880 <close_stdout@@Base+0x89c>
   137c8:	ldr	r1, [sp, #164]	; 0xa4
   137cc:	tst	r1, #4
   137d0:	beq	13880 <close_stdout@@Base+0x89c>
   137d4:	add	r3, fp, #2
   137d8:	cmp	r8, r3
   137dc:	bls	13880 <close_stdout@@Base+0x89c>
   137e0:	ldrb	r2, [r5, #1]
   137e4:	mov	r1, #1
   137e8:	cmp	r2, #63	; 0x3f
   137ec:	bne	13880 <close_stdout@@Base+0x89c>
   137f0:	ldr	r0, [sp, #32]
   137f4:	ldrb	ip, [r0, r3]
   137f8:	sub	r0, ip, #33	; 0x21
   137fc:	uxtb	r0, r0
   13800:	cmp	r0, #29
   13804:	bhi	13880 <close_stdout@@Base+0x89c>
   13808:	lsl	r1, r1, r0
   1380c:	movw	r0, #20929	; 0x51c1
   13810:	movt	r0, #14336	; 0x3800
   13814:	and	r0, r1, r0
   13818:	cmp	r0, #0
   1381c:	beq	13880 <close_stdout@@Base+0x89c>
   13820:	ldr	r1, [sp, #36]	; 0x24
   13824:	cmp	r1, #0
   13828:	bne	139c8 <close_stdout@@Base+0x9e4>
   1382c:	cmp	r9, sl
   13830:	mov	r4, ip
   13834:	mov	fp, r3
   13838:	ldrcc	r0, [sp, #40]	; 0x28
   1383c:	strbcc	r2, [r0, r9]
   13840:	add	r2, r9, #1
   13844:	cmp	sl, r2
   13848:	ldrhi	r0, [sp, #40]	; 0x28
   1384c:	movhi	r1, #34	; 0x22
   13850:	strbhi	r1, [r0, r2]
   13854:	add	r2, r9, #2
   13858:	cmp	sl, r2
   1385c:	ldrhi	r0, [sp, #40]	; 0x28
   13860:	movhi	r1, #34	; 0x22
   13864:	strbhi	r1, [r0, r2]
   13868:	add	r2, r9, #3
   1386c:	cmp	sl, r2
   13870:	add	r9, r9, #4
   13874:	ldrhi	r0, [sp, #40]	; 0x28
   13878:	movhi	r1, #63	; 0x3f
   1387c:	strbhi	r1, [r0, r2]
   13880:	ldr	r0, [sp, #44]	; 0x2c
   13884:	cmp	r0, #0
   13888:	bne	138b0 <close_stdout@@Base+0x8cc>
   1388c:	ldr	r1, [sp, #48]	; 0x30
   13890:	cmp	r1, #0
   13894:	beq	138b0 <close_stdout@@Base+0x8cc>
   13898:	ubfx	r2, r4, #5, #8
   1389c:	and	r3, r4, #31
   138a0:	ldr	r2, [r1, r2, lsl #2]
   138a4:	lsr	r3, r2, r3
   138a8:	tst	r3, #1
   138ac:	bne	138b8 <close_stdout@@Base+0x8d4>
   138b0:	cmp	r6, #0
   138b4:	beq	138d8 <close_stdout@@Base+0x8f4>
   138b8:	ldr	r2, [sp, #36]	; 0x24
   138bc:	cmp	r2, #0
   138c0:	bne	139c8 <close_stdout@@Base+0x9e4>
   138c4:	cmp	r9, sl
   138c8:	ldrcc	r0, [sp, #40]	; 0x28
   138cc:	movcc	r3, #92	; 0x5c
   138d0:	strbcc	r3, [r0, r9]
   138d4:	add	r9, r9, #1
   138d8:	add	fp, fp, #1
   138dc:	cmp	r9, sl
   138e0:	ldrcc	r1, [sp, #40]	; 0x28
   138e4:	strbcc	r4, [r1, r9]
   138e8:	cmn	r8, #1
   138ec:	add	r9, r9, #1
   138f0:	bne	13578 <close_stdout@@Base+0x594>
   138f4:	ldr	r2, [sp, #32]
   138f8:	ldrb	r3, [r2, fp]
   138fc:	adds	r3, r3, #0
   13900:	movne	r3, #1
   13904:	cmp	r3, #0
   13908:	bne	13588 <close_stdout@@Base+0x5a4>
   1390c:	ldr	r3, [sp, #160]	; 0xa0
   13910:	cmp	r9, #0
   13914:	cmpeq	r3, #2
   13918:	bne	13928 <close_stdout@@Base+0x944>
   1391c:	ldr	r0, [sp, #36]	; 0x24
   13920:	cmp	r0, #0
   13924:	bne	139c8 <close_stdout@@Base+0x9e4>
   13928:	ldr	r1, [sp, #36]	; 0x24
   1392c:	ldr	r2, [sp, #52]	; 0x34
   13930:	eor	r3, r1, #1
   13934:	cmp	r2, #0
   13938:	moveq	r3, #0
   1393c:	andne	r3, r3, #1
   13940:	cmp	r3, #0
   13944:	beq	13970 <close_stdout@@Base+0x98c>
   13948:	ldrb	r3, [r2]
   1394c:	cmp	r3, #0
   13950:	beq	13970 <close_stdout@@Base+0x98c>
   13954:	ldr	r1, [sp, #40]	; 0x28
   13958:	cmp	sl, r9
   1395c:	strbhi	r3, [r1, r9]
   13960:	ldrb	r3, [r2, #1]!
   13964:	add	r9, r9, #1
   13968:	cmp	r3, #0
   1396c:	bne	13958 <close_stdout@@Base+0x974>
   13970:	cmp	r9, sl
   13974:	movcs	r0, r9
   13978:	ldrcc	r1, [sp, #40]	; 0x28
   1397c:	movcc	r3, #0
   13980:	movcc	r0, r9
   13984:	strbcc	r3, [r1, r9]
   13988:	b	13a04 <close_stdout@@Base+0xa20>
   1398c:	cmn	r8, #1
   13990:	beq	14058 <close_stdout@@Base+0x1074>
   13994:	subs	r3, r8, #1
   13998:	movne	r3, #1
   1399c:	cmp	r3, #0
   139a0:	bne	13880 <close_stdout@@Base+0x89c>
   139a4:	cmp	fp, #0
   139a8:	bne	13880 <close_stdout@@Base+0x89c>
   139ac:	ldr	r3, [sp, #36]	; 0x24
   139b0:	ldr	r0, [sp, #160]	; 0xa0
   139b4:	cmp	r0, #2
   139b8:	movne	r3, #0
   139bc:	andeq	r3, r3, #1
   139c0:	cmp	r3, #0
   139c4:	beq	13880 <close_stdout@@Base+0x89c>
   139c8:	ldr	r2, [sp, #164]	; 0xa4
   139cc:	mov	ip, #0
   139d0:	ldr	r0, [sp, #160]	; 0xa0
   139d4:	bic	r3, r2, #2
   139d8:	ldr	r1, [sp, #72]	; 0x48
   139dc:	ldr	r2, [sp, #68]	; 0x44
   139e0:	stm	sp, {r0, r3}
   139e4:	mov	r3, r8
   139e8:	str	r1, [sp, #12]
   139ec:	mov	r1, sl
   139f0:	str	r2, [sp, #16]
   139f4:	ldr	r0, [sp, #40]	; 0x28
   139f8:	ldr	r2, [sp, #32]
   139fc:	str	ip, [sp, #8]
   13a00:	bl	13498 <close_stdout@@Base+0x4b4>
   13a04:	ldr	r1, [sp, #56]	; 0x38
   13a08:	ldr	r2, [sp, #116]	; 0x74
   13a0c:	ldr	r3, [r1]
   13a10:	cmp	r2, r3
   13a14:	bne	14148 <close_stdout@@Base+0x1164>
   13a18:	add	sp, sp, #124	; 0x7c
   13a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a20:	mov	r3, #114	; 0x72
   13a24:	ldr	r2, [sp, #36]	; 0x24
   13a28:	ldr	r0, [sp, #160]	; 0xa0
   13a2c:	cmp	r0, #2
   13a30:	movne	r2, #0
   13a34:	andeq	r2, r2, #1
   13a38:	cmp	r2, #0
   13a3c:	bne	139c8 <close_stdout@@Base+0x9e4>
   13a40:	ldr	r1, [sp, #24]
   13a44:	cmp	r1, #0
   13a48:	beq	13880 <close_stdout@@Base+0x89c>
   13a4c:	mov	r4, r3
   13a50:	b	138b8 <close_stdout@@Base+0x8d4>
   13a54:	mov	r3, #98	; 0x62
   13a58:	b	13a40 <close_stdout@@Base+0xa5c>
   13a5c:	mov	r3, #102	; 0x66
   13a60:	b	13a40 <close_stdout@@Base+0xa5c>
   13a64:	mov	r3, #118	; 0x76
   13a68:	b	13a40 <close_stdout@@Base+0xa5c>
   13a6c:	mov	r3, #97	; 0x61
   13a70:	b	13a40 <close_stdout@@Base+0xa5c>
   13a74:	mov	r3, #110	; 0x6e
   13a78:	b	13a24 <close_stdout@@Base+0xa40>
   13a7c:	mov	r3, #116	; 0x74
   13a80:	b	13a24 <close_stdout@@Base+0xa40>
   13a84:	ldr	r2, [sp, #24]
   13a88:	cmp	r2, #0
   13a8c:	beq	14034 <close_stdout@@Base+0x1050>
   13a90:	ldr	r3, [sp, #36]	; 0x24
   13a94:	cmp	r3, #0
   13a98:	bne	139c8 <close_stdout@@Base+0x9e4>
   13a9c:	cmp	r9, sl
   13aa0:	add	r2, r9, #1
   13aa4:	ldrcc	r0, [sp, #40]	; 0x28
   13aa8:	movcc	r3, #92	; 0x5c
   13aac:	strbcc	r3, [r0, r9]
   13ab0:	add	r3, fp, #1
   13ab4:	cmp	r8, r3
   13ab8:	bls	13af8 <close_stdout@@Base+0xb14>
   13abc:	ldr	r1, [sp, #32]
   13ac0:	ldrb	r3, [r1, r3]
   13ac4:	sub	r3, r3, #48	; 0x30
   13ac8:	cmp	r3, #9
   13acc:	bhi	13af8 <close_stdout@@Base+0xb14>
   13ad0:	cmp	sl, r2
   13ad4:	ldrhi	r0, [sp, #40]	; 0x28
   13ad8:	movhi	r3, #48	; 0x30
   13adc:	strbhi	r3, [r0, r2]
   13ae0:	add	r3, r9, #2
   13ae4:	cmp	sl, r3
   13ae8:	ldrhi	r1, [sp, #40]	; 0x28
   13aec:	movhi	r2, #48	; 0x30
   13af0:	strbhi	r2, [r1, r3]
   13af4:	add	r2, r9, #3
   13af8:	mov	r9, r2
   13afc:	mov	r4, #48	; 0x30
   13b00:	b	1388c <close_stdout@@Base+0x8a8>
   13b04:	ldr	r1, [sp, #76]	; 0x4c
   13b08:	cmp	r1, #0
   13b0c:	beq	13b18 <close_stdout@@Base+0xb34>
   13b10:	cmp	r7, #0
   13b14:	bne	138d8 <close_stdout@@Base+0x8f4>
   13b18:	mov	r3, r4
   13b1c:	b	13a24 <close_stdout@@Base+0xa40>
   13b20:	ldr	r1, [sp, #160]	; 0xa0
   13b24:	cmp	r1, #2
   13b28:	bne	13880 <close_stdout@@Base+0x89c>
   13b2c:	ldr	r2, [sp, #36]	; 0x24
   13b30:	cmp	r2, #0
   13b34:	bne	139c8 <close_stdout@@Base+0x9e4>
   13b38:	cmp	r9, sl
   13b3c:	ldrcc	r0, [sp, #40]	; 0x28
   13b40:	movcc	r3, #39	; 0x27
   13b44:	strbcc	r3, [r0, r9]
   13b48:	add	r3, r9, #1
   13b4c:	cmp	sl, r3
   13b50:	ldrhi	r1, [sp, #40]	; 0x28
   13b54:	movhi	r2, #92	; 0x5c
   13b58:	strbhi	r2, [r1, r3]
   13b5c:	add	r3, r9, #2
   13b60:	cmp	sl, r3
   13b64:	add	r9, r9, #3
   13b68:	ldrhi	r0, [sp, #40]	; 0x28
   13b6c:	movhi	r2, #39	; 0x27
   13b70:	strbhi	r2, [r0, r3]
   13b74:	b	13880 <close_stdout@@Base+0x89c>
   13b78:	ldr	r1, [sp, #64]	; 0x40
   13b7c:	cmp	r1, #1
   13b80:	bne	13e78 <close_stdout@@Base+0xe94>
   13b84:	bl	11078 <__ctype_b_loc@plt>
   13b88:	ldr	r2, [sp, #64]	; 0x40
   13b8c:	sxth	r3, r4
   13b90:	str	r2, [sp, #60]	; 0x3c
   13b94:	lsl	r3, r3, #1
   13b98:	ldr	r2, [r0]
   13b9c:	ldrh	r2, [r2, r3]
   13ba0:	eor	r2, r2, #16384	; 0x4000
   13ba4:	ubfx	r2, r2, #14, #1
   13ba8:	ldr	r1, [sp, #24]
   13bac:	ands	r2, r2, r1
   13bb0:	beq	13880 <close_stdout@@Base+0x89c>
   13bb4:	ldr	r3, [sp, #60]	; 0x3c
   13bb8:	mov	r0, #92	; 0x5c
   13bbc:	ldr	r7, [sp, #36]	; 0x24
   13bc0:	add	r1, r3, fp
   13bc4:	str	r8, [sp, #60]	; 0x3c
   13bc8:	ldr	r3, [sp, #40]	; 0x28
   13bcc:	b	13c30 <close_stdout@@Base+0xc4c>
   13bd0:	cmp	r7, #0
   13bd4:	bne	14070 <close_stdout@@Base+0x108c>
   13bd8:	add	ip, r9, #1
   13bdc:	cmp	r9, sl
   13be0:	strbcc	r0, [r3, r9]
   13be4:	cmp	sl, ip
   13be8:	lsrhi	r8, r4, #6
   13bec:	addhi	r8, r8, #48	; 0x30
   13bf0:	strbhi	r8, [r3, ip]
   13bf4:	add	ip, r9, #2
   13bf8:	add	r9, r9, #3
   13bfc:	cmp	sl, ip
   13c00:	ubfxhi	r8, r4, #3, #3
   13c04:	and	r4, r4, #7
   13c08:	add	r4, r4, #48	; 0x30
   13c0c:	addhi	r8, r8, #48	; 0x30
   13c10:	strbhi	r8, [r3, ip]
   13c14:	add	fp, fp, #1
   13c18:	cmp	r1, fp
   13c1c:	bls	13c5c <close_stdout@@Base+0xc78>
   13c20:	cmp	r9, sl
   13c24:	strbcc	r4, [r3, r9]
   13c28:	ldrb	r4, [r5, #1]!
   13c2c:	add	r9, r9, #1
   13c30:	cmp	r2, #0
   13c34:	bne	13bd0 <close_stdout@@Base+0xbec>
   13c38:	cmp	r6, #0
   13c3c:	beq	13c14 <close_stdout@@Base+0xc30>
   13c40:	add	fp, fp, #1
   13c44:	cmp	r9, sl
   13c48:	strbcc	r0, [r3, r9]
   13c4c:	cmp	r1, fp
   13c50:	add	r9, r9, #1
   13c54:	mov	r6, #0
   13c58:	bhi	13c20 <close_stdout@@Base+0xc3c>
   13c5c:	ldr	r8, [sp, #60]	; 0x3c
   13c60:	b	138dc <close_stdout@@Base+0x8f8>
   13c64:	ldr	r3, [sp, #36]	; 0x24
   13c68:	cmp	r3, #0
   13c6c:	bne	14170 <close_stdout@@Base+0x118c>
   13c70:	cmp	sl, #0
   13c74:	beq	14088 <close_stdout@@Base+0x10a4>
   13c78:	ldr	r1, [sp, #40]	; 0x28
   13c7c:	mov	r0, #1
   13c80:	ldr	r2, [pc, #1296]	; 14198 <close_stdout@@Base+0x11b4>
   13c84:	mov	r3, #34	; 0x22
   13c88:	str	r0, [sp, #24]
   13c8c:	mov	r9, r0
   13c90:	add	r2, pc, r2
   13c94:	str	r0, [sp, #28]
   13c98:	strb	r3, [r1]
   13c9c:	str	r2, [sp, #52]	; 0x34
   13ca0:	b	1354c <close_stdout@@Base+0x568>
   13ca4:	ldr	r3, [pc, #1264]	; 1419c <close_stdout@@Base+0x11b8>
   13ca8:	mov	r2, #1
   13cac:	mov	r0, #3
   13cb0:	str	r2, [sp, #36]	; 0x24
   13cb4:	add	r3, pc, r3
   13cb8:	str	r2, [sp, #24]
   13cbc:	str	r3, [sp, #52]	; 0x34
   13cc0:	mov	r9, #0
   13cc4:	str	r2, [sp, #28]
   13cc8:	str	r0, [sp, #160]	; 0xa0
   13ccc:	b	1354c <close_stdout@@Base+0x568>
   13cd0:	mov	r0, #0
   13cd4:	mov	r1, #1
   13cd8:	str	r0, [sp, #36]	; 0x24
   13cdc:	mov	r9, r0
   13ce0:	str	r1, [sp, #24]
   13ce4:	str	r0, [sp, #28]
   13ce8:	str	r0, [sp, #52]	; 0x34
   13cec:	b	1354c <close_stdout@@Base+0x568>
   13cf0:	ldr	r3, [sp, #160]	; 0xa0
   13cf4:	cmp	r3, #8
   13cf8:	beq	13d24 <close_stdout@@Base+0xd40>
   13cfc:	ldr	r0, [pc, #1180]	; 141a0 <close_stdout@@Base+0x11bc>
   13d00:	mov	r1, r3
   13d04:	add	r0, pc, r0
   13d08:	bl	13334 <close_stdout@@Base+0x350>
   13d0c:	ldr	r1, [sp, #160]	; 0xa0
   13d10:	str	r0, [sp, #72]	; 0x48
   13d14:	ldr	r0, [pc, #1160]	; 141a4 <close_stdout@@Base+0x11c0>
   13d18:	add	r0, pc, r0
   13d1c:	bl	13334 <close_stdout@@Base+0x350>
   13d20:	str	r0, [sp, #68]	; 0x44
   13d24:	ldr	r0, [sp, #36]	; 0x24
   13d28:	cmp	r0, #0
   13d2c:	movne	r9, #0
   13d30:	bne	13d68 <close_stdout@@Base+0xd84>
   13d34:	ldr	r1, [sp, #72]	; 0x48
   13d38:	ldrb	r3, [r1]
   13d3c:	cmp	r3, #0
   13d40:	beq	14140 <close_stdout@@Base+0x115c>
   13d44:	mov	r2, r1
   13d48:	ldr	r1, [sp, #40]	; 0x28
   13d4c:	mov	r9, r0
   13d50:	cmp	r9, sl
   13d54:	strbcc	r3, [r1, r9]
   13d58:	ldrb	r3, [r2, #1]!
   13d5c:	add	r9, r9, #1
   13d60:	cmp	r3, #0
   13d64:	bne	13d50 <close_stdout@@Base+0xd6c>
   13d68:	ldr	r0, [sp, #68]	; 0x44
   13d6c:	str	r0, [sp, #52]	; 0x34
   13d70:	bl	11090 <strlen@plt>
   13d74:	mov	r2, #1
   13d78:	str	r2, [sp, #24]
   13d7c:	str	r0, [sp, #28]
   13d80:	b	1354c <close_stdout@@Base+0x568>
   13d84:	ldr	r3, [pc, #1052]	; 141a8 <close_stdout@@Base+0x11c4>
   13d88:	mov	r2, #0
   13d8c:	mov	r1, #1
   13d90:	mov	r0, #2
   13d94:	add	r3, pc, r3
   13d98:	str	r1, [sp, #36]	; 0x24
   13d9c:	str	r2, [sp, #24]
   13da0:	mov	r9, r2
   13da4:	str	r1, [sp, #28]
   13da8:	str	r3, [sp, #52]	; 0x34
   13dac:	str	r0, [sp, #160]	; 0xa0
   13db0:	b	1354c <close_stdout@@Base+0x568>
   13db4:	ldr	r3, [sp, #36]	; 0x24
   13db8:	cmp	r3, #0
   13dbc:	bne	1414c <close_stdout@@Base+0x1168>
   13dc0:	cmp	sl, #0
   13dc4:	beq	140a8 <close_stdout@@Base+0x10c4>
   13dc8:	ldr	r1, [sp, #40]	; 0x28
   13dcc:	mov	r3, #39	; 0x27
   13dd0:	ldr	r2, [sp, #36]	; 0x24
   13dd4:	mov	r0, #1
   13dd8:	mov	r9, r0
   13ddc:	str	r0, [sp, #28]
   13de0:	strb	r3, [r1]
   13de4:	ldr	r3, [pc, #960]	; 141ac <close_stdout@@Base+0x11c8>
   13de8:	str	r2, [sp, #24]
   13dec:	add	r3, pc, r3
   13df0:	str	r3, [sp, #52]	; 0x34
   13df4:	b	1354c <close_stdout@@Base+0x568>
   13df8:	ldr	r2, [sp, #28]
   13dfc:	cmp	r2, #1
   13e00:	add	r4, fp, r2
   13e04:	movls	r3, #0
   13e08:	movhi	r3, #1
   13e0c:	cmn	r8, #1
   13e10:	movne	r3, #0
   13e14:	cmp	r3, #0
   13e18:	beq	13e28 <close_stdout@@Base+0xe44>
   13e1c:	ldr	r0, [sp, #32]
   13e20:	bl	11090 <strlen@plt>
   13e24:	mov	r8, r0
   13e28:	cmp	r8, r4
   13e2c:	ldrcc	r3, [sp, #32]
   13e30:	movcc	r6, #0
   13e34:	addcc	r5, r3, fp
   13e38:	bcc	135a8 <close_stdout@@Base+0x5c4>
   13e3c:	ldr	r0, [sp, #32]
   13e40:	ldr	r1, [sp, #52]	; 0x34
   13e44:	add	r5, r0, fp
   13e48:	ldr	r2, [sp, #28]
   13e4c:	mov	r0, r5
   13e50:	bl	10f70 <memcmp@plt>
   13e54:	cmp	r0, #0
   13e58:	bne	13e70 <close_stdout@@Base+0xe8c>
   13e5c:	ldr	r1, [sp, #36]	; 0x24
   13e60:	cmp	r1, #0
   13e64:	bne	139c8 <close_stdout@@Base+0x9e4>
   13e68:	mov	r6, #1
   13e6c:	b	135a8 <close_stdout@@Base+0x5c4>
   13e70:	mov	r6, #0
   13e74:	b	135a8 <close_stdout@@Base+0x5c4>
   13e78:	add	r7, sp, #108	; 0x6c
   13e7c:	cmn	r8, #1
   13e80:	mov	r3, #0
   13e84:	str	r3, [sp, #108]	; 0x6c
   13e88:	str	r3, [r7, #4]
   13e8c:	beq	14078 <close_stdout@@Base+0x1094>
   13e90:	mov	r1, #0
   13e94:	ldr	r0, [sp, #32]
   13e98:	mov	ip, #1
   13e9c:	str	r9, [sp, #88]	; 0x58
   13ea0:	str	r6, [sp, #96]	; 0x60
   13ea4:	mov	r9, r1
   13ea8:	str	r5, [sp, #100]	; 0x64
   13eac:	mov	r6, ip
   13eb0:	mov	r5, r7
   13eb4:	add	r3, sp, #104	; 0x68
   13eb8:	sub	r0, r0, #1
   13ebc:	str	r3, [sp, #80]	; 0x50
   13ec0:	str	r0, [sp, #84]	; 0x54
   13ec4:	str	r1, [sp, #60]	; 0x3c
   13ec8:	str	r4, [sp, #92]	; 0x5c
   13ecc:	ldr	r2, [sp, #32]
   13ed0:	add	r7, r9, fp
   13ed4:	add	r0, sp, #104	; 0x68
   13ed8:	mov	r3, r5
   13edc:	add	r4, r2, r7
   13ee0:	rsb	r2, r7, r8
   13ee4:	mov	r1, r4
   13ee8:	bl	11018 <mbrtowc@plt>
   13eec:	subs	r2, r0, #0
   13ef0:	beq	13ffc <close_stdout@@Base+0x1018>
   13ef4:	cmn	r2, #1
   13ef8:	beq	14124 <close_stdout@@Base+0x1140>
   13efc:	cmn	r2, #2
   13f00:	beq	140c8 <close_stdout@@Base+0x10e4>
   13f04:	ldr	r3, [sp, #36]	; 0x24
   13f08:	ldr	r0, [sp, #160]	; 0xa0
   13f0c:	cmp	r0, #2
   13f10:	movne	r3, #0
   13f14:	andeq	r3, r3, #1
   13f18:	cmp	r3, #0
   13f1c:	beq	13fd8 <close_stdout@@Base+0xff4>
   13f20:	cmp	r2, #1
   13f24:	beq	13fd8 <close_stdout@@Base+0xff4>
   13f28:	ldr	r1, [sp, #84]	; 0x54
   13f2c:	add	r3, r1, r2
   13f30:	add	r7, r3, r7
   13f34:	ldrb	r3, [r4, #1]!
   13f38:	sub	r3, r3, #91	; 0x5b
   13f3c:	cmp	r3, #33	; 0x21
   13f40:	addls	pc, pc, r3, lsl #2
   13f44:	b	13fd0 <close_stdout@@Base+0xfec>
   13f48:	b	139c8 <close_stdout@@Base+0x9e4>
   13f4c:	b	139c8 <close_stdout@@Base+0x9e4>
   13f50:	b	13fd0 <close_stdout@@Base+0xfec>
   13f54:	b	139c8 <close_stdout@@Base+0x9e4>
   13f58:	b	13fd0 <close_stdout@@Base+0xfec>
   13f5c:	b	139c8 <close_stdout@@Base+0x9e4>
   13f60:	b	13fd0 <close_stdout@@Base+0xfec>
   13f64:	b	13fd0 <close_stdout@@Base+0xfec>
   13f68:	b	13fd0 <close_stdout@@Base+0xfec>
   13f6c:	b	13fd0 <close_stdout@@Base+0xfec>
   13f70:	b	13fd0 <close_stdout@@Base+0xfec>
   13f74:	b	13fd0 <close_stdout@@Base+0xfec>
   13f78:	b	13fd0 <close_stdout@@Base+0xfec>
   13f7c:	b	13fd0 <close_stdout@@Base+0xfec>
   13f80:	b	13fd0 <close_stdout@@Base+0xfec>
   13f84:	b	13fd0 <close_stdout@@Base+0xfec>
   13f88:	b	13fd0 <close_stdout@@Base+0xfec>
   13f8c:	b	13fd0 <close_stdout@@Base+0xfec>
   13f90:	b	13fd0 <close_stdout@@Base+0xfec>
   13f94:	b	13fd0 <close_stdout@@Base+0xfec>
   13f98:	b	13fd0 <close_stdout@@Base+0xfec>
   13f9c:	b	13fd0 <close_stdout@@Base+0xfec>
   13fa0:	b	13fd0 <close_stdout@@Base+0xfec>
   13fa4:	b	13fd0 <close_stdout@@Base+0xfec>
   13fa8:	b	13fd0 <close_stdout@@Base+0xfec>
   13fac:	b	13fd0 <close_stdout@@Base+0xfec>
   13fb0:	b	13fd0 <close_stdout@@Base+0xfec>
   13fb4:	b	13fd0 <close_stdout@@Base+0xfec>
   13fb8:	b	13fd0 <close_stdout@@Base+0xfec>
   13fbc:	b	13fd0 <close_stdout@@Base+0xfec>
   13fc0:	b	13fd0 <close_stdout@@Base+0xfec>
   13fc4:	b	13fd0 <close_stdout@@Base+0xfec>
   13fc8:	b	13fd0 <close_stdout@@Base+0xfec>
   13fcc:	b	139c8 <close_stdout@@Base+0x9e4>
   13fd0:	cmp	r4, r7
   13fd4:	bne	13f34 <close_stdout@@Base+0xf50>
   13fd8:	ldr	r0, [sp, #104]	; 0x68
   13fdc:	add	r9, r9, r2
   13fe0:	bl	10fc4 <iswprint@plt>
   13fe4:	cmp	r0, #0
   13fe8:	mov	r0, r5
   13fec:	moveq	r6, #0
   13ff0:	bl	10f64 <mbsinit@plt>
   13ff4:	cmp	r0, #0
   13ff8:	beq	13ecc <close_stdout@@Base+0xee8>
   13ffc:	mov	ip, r6
   14000:	eor	r2, ip, #1
   14004:	str	r9, [sp, #60]	; 0x3c
   14008:	ldr	r4, [sp, #92]	; 0x5c
   1400c:	uxtb	r2, r2
   14010:	ldr	r9, [sp, #88]	; 0x58
   14014:	ldr	r6, [sp, #96]	; 0x60
   14018:	ldr	r5, [sp, #100]	; 0x64
   1401c:	ldr	r3, [sp, #60]	; 0x3c
   14020:	cmp	r3, #1
   14024:	bls	13ba8 <close_stdout@@Base+0xbc4>
   14028:	ldr	r0, [sp, #24]
   1402c:	and	r2, r2, r0
   14030:	b	13bb4 <close_stdout@@Base+0xbd0>
   14034:	ldr	r2, [sp, #164]	; 0xa4
   14038:	tst	r2, #1
   1403c:	addne	fp, fp, #1
   14040:	bne	13570 <close_stdout@@Base+0x58c>
   14044:	b	13880 <close_stdout@@Base+0x89c>
   14048:	ldr	r0, [sp, #36]	; 0x24
   1404c:	cmp	r0, #0
   14050:	beq	13880 <close_stdout@@Base+0x89c>
   14054:	b	139c8 <close_stdout@@Base+0x9e4>
   14058:	ldr	r2, [sp, #32]
   1405c:	ldrb	r3, [r2, #1]
   14060:	adds	r3, r3, #0
   14064:	movne	r3, #1
   14068:	b	1399c <close_stdout@@Base+0x9b8>
   1406c:	bl	1118c <abort@plt>
   14070:	ldr	r8, [sp, #60]	; 0x3c
   14074:	b	139c8 <close_stdout@@Base+0x9e4>
   14078:	ldr	r0, [sp, #32]
   1407c:	bl	11090 <strlen@plt>
   14080:	mov	r8, r0
   14084:	b	13e90 <close_stdout@@Base+0xeac>
   14088:	ldr	r2, [pc, #288]	; 141b0 <close_stdout@@Base+0x11cc>
   1408c:	mov	r1, #1
   14090:	mov	r9, r1
   14094:	str	r1, [sp, #24]
   14098:	add	r2, pc, r2
   1409c:	str	r1, [sp, #28]
   140a0:	str	r2, [sp, #52]	; 0x34
   140a4:	b	1354c <close_stdout@@Base+0x568>
   140a8:	ldr	r2, [pc, #260]	; 141b4 <close_stdout@@Base+0x11d0>
   140ac:	mov	r3, #1
   140b0:	mov	r9, r3
   140b4:	str	r3, [sp, #28]
   140b8:	add	r2, pc, r2
   140bc:	str	sl, [sp, #24]
   140c0:	str	r2, [sp, #52]	; 0x34
   140c4:	b	1354c <close_stdout@@Base+0x568>
   140c8:	cmp	r8, r7
   140cc:	str	r9, [sp, #60]	; 0x3c
   140d0:	mov	ip, r4
   140d4:	ldr	r6, [sp, #96]	; 0x60
   140d8:	ldr	r9, [sp, #88]	; 0x58
   140dc:	ldr	r4, [sp, #92]	; 0x5c
   140e0:	ldr	r5, [sp, #100]	; 0x64
   140e4:	bls	1411c <close_stdout@@Base+0x1138>
   140e8:	ldrb	r3, [ip]
   140ec:	cmp	r3, #0
   140f0:	beq	1411c <close_stdout@@Base+0x1138>
   140f4:	ldr	r3, [sp, #60]	; 0x3c
   140f8:	b	14108 <close_stdout@@Base+0x1124>
   140fc:	ldrb	r2, [r5, r3]
   14100:	cmp	r2, #0
   14104:	beq	14118 <close_stdout@@Base+0x1134>
   14108:	add	r3, r3, #1
   1410c:	add	r2, fp, r3
   14110:	cmp	r8, r2
   14114:	bhi	140fc <close_stdout@@Base+0x1118>
   14118:	str	r3, [sp, #60]	; 0x3c
   1411c:	mov	r2, #1
   14120:	b	1401c <close_stdout@@Base+0x1038>
   14124:	str	r9, [sp, #60]	; 0x3c
   14128:	mov	r2, #1
   1412c:	ldr	r4, [sp, #92]	; 0x5c
   14130:	ldr	r6, [sp, #96]	; 0x60
   14134:	ldr	r9, [sp, #88]	; 0x58
   14138:	ldr	r5, [sp, #100]	; 0x64
   1413c:	b	1401c <close_stdout@@Base+0x1038>
   14140:	ldr	r9, [sp, #36]	; 0x24
   14144:	b	13d68 <close_stdout@@Base+0xd84>
   14148:	bl	10f88 <__stack_chk_fail@plt>
   1414c:	ldr	r1, [pc, #100]	; 141b8 <close_stdout@@Base+0x11d4>
   14150:	mov	r3, #0
   14154:	mov	r0, #1
   14158:	str	r3, [sp, #24]
   1415c:	add	r1, pc, r1
   14160:	str	r0, [sp, #28]
   14164:	mov	r9, r3
   14168:	str	r1, [sp, #52]	; 0x34
   1416c:	b	1354c <close_stdout@@Base+0x568>
   14170:	ldr	r0, [pc, #68]	; 141bc <close_stdout@@Base+0x11d8>
   14174:	mov	r3, #1
   14178:	mov	r9, #0
   1417c:	str	r3, [sp, #24]
   14180:	add	r0, pc, r0
   14184:	str	r3, [sp, #28]
   14188:	str	r0, [sp, #52]	; 0x34
   1418c:	b	1354c <close_stdout@@Base+0x568>
   14190:	andeq	r4, r1, r4, asr #22
   14194:	strdeq	r0, [r0], -ip
   14198:	andeq	r3, r0, ip, lsl r4
   1419c:	strdeq	r3, [r0], -r8
   141a0:			; <UNDEFINED> instruction: 0x000033b4
   141a4:	muleq	r0, r0, r3
   141a8:	andeq	r3, r0, r4, lsl r3
   141ac:			; <UNDEFINED> instruction: 0x000032bc
   141b0:	andeq	r3, r0, r4, lsl r0
   141b4:	strdeq	r2, [r0], -r0
   141b8:	andeq	r2, r0, ip, asr #30
   141bc:	andeq	r2, r0, ip, lsr #30
   141c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   141c4:	sub	sp, sp, #44	; 0x2c
   141c8:	mov	r6, r0
   141cc:	mov	r9, r1
   141d0:	mov	sl, r2
   141d4:	mov	r4, r3
   141d8:	bl	110a8 <__errno_location@plt>
   141dc:	ldr	fp, [pc, #412]	; 14380 <close_stdout@@Base+0x139c>
   141e0:	cmp	r6, #0
   141e4:	add	fp, pc, fp
   141e8:	ldr	r5, [fp]
   141ec:	ldr	r1, [r0]
   141f0:	mov	r8, r0
   141f4:	str	r1, [sp, #36]	; 0x24
   141f8:	blt	14378 <close_stdout@@Base+0x1394>
   141fc:	ldr	r3, [pc, #384]	; 14384 <close_stdout@@Base+0x13a0>
   14200:	add	r3, pc, r3
   14204:	ldr	r3, [r3]
   14208:	cmp	r6, r3
   1420c:	bcc	14260 <close_stdout@@Base+0x127c>
   14210:	add	r7, r6, #1
   14214:	cmn	r7, #-536870911	; 0xe0000001
   14218:	bhi	1437c <close_stdout@@Base+0x1398>
   1421c:	add	r3, fp, #4
   14220:	cmp	r5, r3
   14224:	beq	14350 <close_stdout@@Base+0x136c>
   14228:	mov	r0, r5
   1422c:	lsl	r1, r7, #3
   14230:	bl	14d9c <close_stdout@@Base+0x1db8>
   14234:	mov	r5, r0
   14238:	str	r0, [fp]
   1423c:	ldr	fp, [pc, #324]	; 14388 <close_stdout@@Base+0x13a4>
   14240:	mov	r1, #0
   14244:	add	fp, pc, fp
   14248:	ldr	r0, [fp]
   1424c:	rsb	r2, r0, r7
   14250:	add	r0, r5, r0, lsl #3
   14254:	lsl	r2, r2, #3
   14258:	bl	110c0 <memset@plt>
   1425c:	str	r7, [fp]
   14260:	add	r2, r4, #8
   14264:	str	r2, [sp, #32]
   14268:	ldr	r1, [r4]
   1426c:	add	fp, r5, r6, lsl #3
   14270:	ldr	lr, [sp, #32]
   14274:	mov	r2, r9
   14278:	ldr	r3, [r4, #4]
   1427c:	ldr	ip, [r5, r6, lsl #3]
   14280:	ldr	r7, [fp, #4]
   14284:	orr	r3, r3, #1
   14288:	str	r1, [sp]
   1428c:	str	r3, [sp, #4]
   14290:	mov	r1, ip
   14294:	str	lr, [sp, #8]
   14298:	mov	r0, r7
   1429c:	ldr	lr, [r4, #40]	; 0x28
   142a0:	str	r3, [sp, #28]
   142a4:	mov	r3, sl
   142a8:	str	lr, [sp, #12]
   142ac:	ldr	lr, [r4, #44]	; 0x2c
   142b0:	str	ip, [sp, #24]
   142b4:	str	lr, [sp, #16]
   142b8:	bl	13498 <close_stdout@@Base+0x4b4>
   142bc:	ldr	ip, [sp, #24]
   142c0:	cmp	ip, r0
   142c4:	bhi	1433c <close_stdout@@Base+0x1358>
   142c8:	ldr	r3, [pc, #188]	; 1438c <close_stdout@@Base+0x13a8>
   142cc:	add	r1, r0, #1
   142d0:	str	r1, [r5, r6, lsl #3]
   142d4:	add	r3, pc, r3
   142d8:	cmp	r7, r3
   142dc:	beq	142f0 <close_stdout@@Base+0x130c>
   142e0:	mov	r0, r7
   142e4:	str	r1, [sp, #24]
   142e8:	bl	10f40 <free@plt>
   142ec:	ldr	r1, [sp, #24]
   142f0:	mov	r0, r1
   142f4:	str	r1, [sp, #24]
   142f8:	bl	14d44 <close_stdout@@Base+0x1d60>
   142fc:	ldr	r3, [sp, #28]
   14300:	ldr	lr, [sp, #32]
   14304:	mov	r2, r9
   14308:	str	r0, [fp, #4]
   1430c:	mov	r7, r0
   14310:	ldr	ip, [r4]
   14314:	str	r3, [sp, #4]
   14318:	mov	r3, sl
   1431c:	str	lr, [sp, #8]
   14320:	str	ip, [sp]
   14324:	ldr	ip, [r4, #40]	; 0x28
   14328:	ldr	r1, [sp, #24]
   1432c:	str	ip, [sp, #12]
   14330:	ldr	ip, [r4, #44]	; 0x2c
   14334:	str	ip, [sp, #16]
   14338:	bl	13498 <close_stdout@@Base+0x4b4>
   1433c:	ldr	r1, [sp, #36]	; 0x24
   14340:	mov	r0, r7
   14344:	str	r1, [r8]
   14348:	add	sp, sp, #44	; 0x2c
   1434c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14350:	lsl	r1, r7, #3
   14354:	mov	r0, #0
   14358:	str	r3, [sp, #24]
   1435c:	bl	14d9c <close_stdout@@Base+0x1db8>
   14360:	ldr	r3, [sp, #24]
   14364:	mov	r5, r0
   14368:	ldm	r3, {r0, r1}
   1436c:	str	r5, [fp]
   14370:	stm	r5, {r0, r1}
   14374:	b	1423c <close_stdout@@Base+0x1258>
   14378:	bl	1118c <abort@plt>
   1437c:	bl	14f58 <close_stdout@@Base+0x1f74>
   14380:	andeq	r3, r1, r4, ror pc
   14384:	andeq	r3, r1, r4, lsr #30
   14388:	andeq	r3, r1, r0, ror #29
   1438c:	andeq	r3, r1, ip, lsr #29
   14390:	push	{r4, r5, r6, lr}
   14394:	mov	r5, r0
   14398:	bl	110a8 <__errno_location@plt>
   1439c:	cmp	r5, #0
   143a0:	mov	r1, #48	; 0x30
   143a4:	mov	r4, r0
   143a8:	ldr	r0, [pc, #24]	; 143c8 <close_stdout@@Base+0x13e4>
   143ac:	ldr	r6, [r4]
   143b0:	add	r0, pc, r0
   143b4:	add	r0, r0, #256	; 0x100
   143b8:	movne	r0, r5
   143bc:	bl	14f18 <close_stdout@@Base+0x1f34>
   143c0:	str	r6, [r4]
   143c4:	pop	{r4, r5, r6, pc}
   143c8:	ldrdeq	r3, [r1], -r0
   143cc:	cmp	r0, #0
   143d0:	beq	143dc <close_stdout@@Base+0x13f8>
   143d4:	ldr	r0, [r0]
   143d8:	bx	lr
   143dc:	ldr	r0, [pc, #12]	; 143f0 <close_stdout@@Base+0x140c>
   143e0:	add	r0, pc, r0
   143e4:	add	r0, r0, #256	; 0x100
   143e8:	ldr	r0, [r0]
   143ec:	bx	lr
   143f0:	andeq	r3, r1, r0, lsr #27
   143f4:	cmp	r0, #0
   143f8:	beq	14404 <close_stdout@@Base+0x1420>
   143fc:	str	r1, [r0]
   14400:	bx	lr
   14404:	ldr	r0, [pc, #12]	; 14418 <close_stdout@@Base+0x1434>
   14408:	add	r0, pc, r0
   1440c:	add	r0, r0, #256	; 0x100
   14410:	str	r1, [r0]
   14414:	bx	lr
   14418:	andeq	r3, r1, r8, ror sp
   1441c:	cmp	r0, #0
   14420:	movne	r3, r0
   14424:	beq	14454 <close_stdout@@Base+0x1470>
   14428:	lsr	ip, r1, #5
   1442c:	and	r1, r1, #31
   14430:	add	r3, r3, ip, lsl #2
   14434:	ldr	ip, [r3, #8]
   14438:	lsr	r0, ip, r1
   1443c:	eor	r2, r0, r2
   14440:	and	r0, r0, #1
   14444:	and	r2, r2, #1
   14448:	eor	ip, ip, r2, lsl r1
   1444c:	str	ip, [r3, #8]
   14450:	bx	lr
   14454:	ldr	r3, [pc, #8]	; 14464 <close_stdout@@Base+0x1480>
   14458:	add	r3, pc, r3
   1445c:	add	r3, r3, #256	; 0x100
   14460:	b	14428 <close_stdout@@Base+0x1444>
   14464:	andeq	r3, r1, r8, lsr #26
   14468:	subs	r3, r0, #0
   1446c:	beq	1447c <close_stdout@@Base+0x1498>
   14470:	ldr	r0, [r3, #4]
   14474:	str	r1, [r3, #4]
   14478:	bx	lr
   1447c:	ldr	r3, [pc, #8]	; 1448c <close_stdout@@Base+0x14a8>
   14480:	add	r3, pc, r3
   14484:	add	r3, r3, #256	; 0x100
   14488:	b	14470 <close_stdout@@Base+0x148c>
   1448c:	andeq	r3, r1, r0, lsl #26
   14490:	cmp	r0, #0
   14494:	push	{r3, lr}
   14498:	beq	144bc <close_stdout@@Base+0x14d8>
   1449c:	cmp	r2, #0
   144a0:	cmpne	r1, #0
   144a4:	mov	r3, #8
   144a8:	strne	r1, [r0, #40]	; 0x28
   144ac:	str	r3, [r0]
   144b0:	strne	r2, [r0, #44]	; 0x2c
   144b4:	popne	{r3, pc}
   144b8:	bl	1118c <abort@plt>
   144bc:	ldr	r0, [pc, #8]	; 144cc <close_stdout@@Base+0x14e8>
   144c0:	add	r0, pc, r0
   144c4:	add	r0, r0, #256	; 0x100
   144c8:	b	1449c <close_stdout@@Base+0x14b8>
   144cc:	andeq	r3, r1, r0, asr #25
   144d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144d4:	sub	sp, sp, #24
   144d8:	mov	r7, r0
   144dc:	mov	sl, r1
   144e0:	ldr	r4, [sp, #56]	; 0x38
   144e4:	mov	r9, r2
   144e8:	mov	r8, r3
   144ec:	cmp	r4, #0
   144f0:	beq	14544 <close_stdout@@Base+0x1560>
   144f4:	bl	110a8 <__errno_location@plt>
   144f8:	ldr	r3, [r4]
   144fc:	add	lr, r4, #8
   14500:	mov	r1, sl
   14504:	mov	r2, r9
   14508:	ldr	r6, [r0]
   1450c:	mov	r5, r0
   14510:	str	r3, [sp]
   14514:	mov	r0, r7
   14518:	ldr	ip, [r4, #4]
   1451c:	mov	r3, r8
   14520:	stmib	sp, {ip, lr}
   14524:	ldr	ip, [r4, #40]	; 0x28
   14528:	str	ip, [sp, #12]
   1452c:	ldr	ip, [r4, #44]	; 0x2c
   14530:	str	ip, [sp, #16]
   14534:	bl	13498 <close_stdout@@Base+0x4b4>
   14538:	str	r6, [r5]
   1453c:	add	sp, sp, #24
   14540:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14544:	ldr	r4, [pc, #8]	; 14554 <close_stdout@@Base+0x1570>
   14548:	add	r4, pc, r4
   1454c:	add	r4, r4, #256	; 0x100
   14550:	b	144f4 <close_stdout@@Base+0x1510>
   14554:	andeq	r3, r1, r8, lsr ip
   14558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1455c:	subs	r4, r3, #0
   14560:	sub	sp, sp, #36	; 0x24
   14564:	mov	r7, r0
   14568:	mov	r6, r1
   1456c:	mov	r5, r2
   14570:	beq	1462c <close_stdout@@Base+0x1648>
   14574:	bl	110a8 <__errno_location@plt>
   14578:	ldr	r3, [r4]
   1457c:	ldr	sl, [r4, #4]
   14580:	add	r9, r4, #8
   14584:	mov	r8, r0
   14588:	mov	r0, #0
   1458c:	ldr	r2, [r8]
   14590:	cmp	r5, r0
   14594:	orreq	sl, sl, #1
   14598:	str	r9, [sp, #8]
   1459c:	mov	r1, r0
   145a0:	stm	sp, {r3, sl}
   145a4:	mov	r3, r6
   145a8:	ldr	ip, [r4, #40]	; 0x28
   145ac:	str	r2, [sp, #28]
   145b0:	mov	r2, r7
   145b4:	str	ip, [sp, #12]
   145b8:	ldr	ip, [r4, #44]	; 0x2c
   145bc:	str	ip, [sp, #16]
   145c0:	bl	13498 <close_stdout@@Base+0x4b4>
   145c4:	add	r1, r0, #1
   145c8:	mov	fp, r0
   145cc:	str	r1, [sp, #24]
   145d0:	mov	r0, r1
   145d4:	bl	14d44 <close_stdout@@Base+0x1d60>
   145d8:	ldr	lr, [r4]
   145dc:	str	sl, [sp, #4]
   145e0:	mov	r3, r6
   145e4:	str	r9, [sp, #8]
   145e8:	mov	r2, r7
   145ec:	str	lr, [sp]
   145f0:	ldr	lr, [r4, #40]	; 0x28
   145f4:	ldr	r1, [sp, #24]
   145f8:	str	lr, [sp, #12]
   145fc:	ldr	lr, [r4, #44]	; 0x2c
   14600:	str	lr, [sp, #16]
   14604:	str	r0, [sp, #24]
   14608:	bl	13498 <close_stdout@@Base+0x4b4>
   1460c:	ldr	r3, [sp, #28]
   14610:	cmp	r5, #0
   14614:	str	r3, [r8]
   14618:	ldr	ip, [sp, #24]
   1461c:	strne	fp, [r5]
   14620:	mov	r0, ip
   14624:	add	sp, sp, #36	; 0x24
   14628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1462c:	ldr	r4, [pc, #8]	; 1463c <close_stdout@@Base+0x1658>
   14630:	add	r4, pc, r4
   14634:	add	r4, r4, #256	; 0x100
   14638:	b	14574 <close_stdout@@Base+0x1590>
   1463c:	andeq	r3, r1, r0, asr fp
   14640:	mov	r3, r2
   14644:	mov	r2, #0
   14648:	b	14558 <close_stdout@@Base+0x1574>
   1464c:	ldr	r2, [pc, #152]	; 146ec <close_stdout@@Base+0x1708>
   14650:	push	{r3, r4, r5, r6, r7, lr}
   14654:	add	r2, pc, r2
   14658:	ldr	r3, [pc, #144]	; 146f0 <close_stdout@@Base+0x170c>
   1465c:	ldr	r6, [r2]
   14660:	add	r3, pc, r3
   14664:	cmp	r6, #1
   14668:	ldr	r7, [r3]
   1466c:	movhi	r4, #1
   14670:	movhi	r5, r7
   14674:	bls	14690 <close_stdout@@Base+0x16ac>
   14678:	ldr	r0, [r5, #12]
   1467c:	add	r4, r4, #1
   14680:	bl	10f40 <free@plt>
   14684:	cmp	r4, r6
   14688:	add	r5, r5, #8
   1468c:	bne	14678 <close_stdout@@Base+0x1694>
   14690:	ldr	r4, [pc, #92]	; 146f4 <close_stdout@@Base+0x1710>
   14694:	ldr	r0, [r7, #4]
   14698:	add	r4, pc, r4
   1469c:	cmp	r0, r4
   146a0:	beq	146b8 <close_stdout@@Base+0x16d4>
   146a4:	bl	10f40 <free@plt>
   146a8:	ldr	r3, [pc, #72]	; 146f8 <close_stdout@@Base+0x1714>
   146ac:	mov	r2, #256	; 0x100
   146b0:	add	r3, pc, r3
   146b4:	stmib	r3, {r2, r4}
   146b8:	ldr	r4, [pc, #60]	; 146fc <close_stdout@@Base+0x1718>
   146bc:	add	r4, pc, r4
   146c0:	add	r5, r4, #4
   146c4:	cmp	r7, r5
   146c8:	beq	146d8 <close_stdout@@Base+0x16f4>
   146cc:	mov	r0, r7
   146d0:	bl	10f40 <free@plt>
   146d4:	str	r5, [r4]
   146d8:	ldr	r3, [pc, #32]	; 14700 <close_stdout@@Base+0x171c>
   146dc:	mov	r2, #1
   146e0:	add	r3, pc, r3
   146e4:	str	r2, [r3]
   146e8:	pop	{r3, r4, r5, r6, r7, pc}
   146ec:	ldrdeq	r3, [r1], -r0
   146f0:	strdeq	r3, [r1], -r8
   146f4:	andeq	r3, r1, r8, ror #21
   146f8:	andeq	r3, r1, r8, lsr #21
   146fc:	muleq	r1, ip, sl
   14700:	andeq	r3, r1, r4, asr #20
   14704:	ldr	r3, [pc, #12]	; 14718 <close_stdout@@Base+0x1734>
   14708:	mvn	r2, #0
   1470c:	add	r3, pc, r3
   14710:	add	r3, r3, #256	; 0x100
   14714:	b	141c0 <close_stdout@@Base+0x11dc>
   14718:	andeq	r3, r1, r4, ror sl
   1471c:	ldr	r3, [pc, #8]	; 1472c <close_stdout@@Base+0x1748>
   14720:	add	r3, pc, r3
   14724:	add	r3, r3, #256	; 0x100
   14728:	b	141c0 <close_stdout@@Base+0x11dc>
   1472c:	andeq	r3, r1, r0, ror #20
   14730:	mov	r1, r0
   14734:	mov	r0, #0
   14738:	b	14704 <close_stdout@@Base+0x1720>
   1473c:	mov	r2, r1
   14740:	mov	r1, r0
   14744:	mov	r0, #0
   14748:	b	1471c <close_stdout@@Base+0x1738>
   1474c:	ldr	r3, [pc, #92]	; 147b0 <close_stdout@@Base+0x17cc>
   14750:	ldr	ip, [pc, #92]	; 147b4 <close_stdout@@Base+0x17d0>
   14754:	add	r3, pc, r3
   14758:	push	{r4, r5, r6, r7, lr}
   1475c:	sub	sp, sp, #60	; 0x3c
   14760:	ldr	r4, [r3, ip]
   14764:	add	r5, sp, #4
   14768:	mov	r7, r2
   1476c:	mov	r6, r0
   14770:	mov	r0, r5
   14774:	ldr	r3, [r4]
   14778:	str	r3, [sp, #52]	; 0x34
   1477c:	bl	132e0 <close_stdout@@Base+0x2fc>
   14780:	mov	r3, r5
   14784:	mvn	r2, #0
   14788:	mov	r0, r6
   1478c:	mov	r1, r7
   14790:	bl	141c0 <close_stdout@@Base+0x11dc>
   14794:	ldr	r2, [sp, #52]	; 0x34
   14798:	ldr	r3, [r4]
   1479c:	cmp	r2, r3
   147a0:	bne	147ac <close_stdout@@Base+0x17c8>
   147a4:	add	sp, sp, #60	; 0x3c
   147a8:	pop	{r4, r5, r6, r7, pc}
   147ac:	bl	10f88 <__stack_chk_fail@plt>
   147b0:	andeq	r3, r1, r4, lsr #17
   147b4:	strdeq	r0, [r0], -ip
   147b8:	ldr	ip, [pc, #96]	; 14820 <close_stdout@@Base+0x183c>
   147bc:	push	{r4, r5, r6, r7, r8, lr}
   147c0:	add	ip, pc, ip
   147c4:	ldr	lr, [pc, #88]	; 14824 <close_stdout@@Base+0x1840>
   147c8:	sub	sp, sp, #56	; 0x38
   147cc:	mov	r8, r3
   147d0:	add	r5, sp, #4
   147d4:	mov	r7, r2
   147d8:	mov	r6, r0
   147dc:	ldr	r4, [ip, lr]
   147e0:	mov	r0, r5
   147e4:	ldr	r3, [r4]
   147e8:	str	r3, [sp, #52]	; 0x34
   147ec:	bl	132e0 <close_stdout@@Base+0x2fc>
   147f0:	mov	r2, r8
   147f4:	mov	r3, r5
   147f8:	mov	r0, r6
   147fc:	mov	r1, r7
   14800:	bl	141c0 <close_stdout@@Base+0x11dc>
   14804:	ldr	r2, [sp, #52]	; 0x34
   14808:	ldr	r3, [r4]
   1480c:	cmp	r2, r3
   14810:	bne	1481c <close_stdout@@Base+0x1838>
   14814:	add	sp, sp, #56	; 0x38
   14818:	pop	{r4, r5, r6, r7, r8, pc}
   1481c:	bl	10f88 <__stack_chk_fail@plt>
   14820:	andeq	r3, r1, r8, lsr r8
   14824:	strdeq	r0, [r0], -ip
   14828:	mov	r2, r1
   1482c:	mov	r1, r0
   14830:	mov	r0, #0
   14834:	b	1474c <close_stdout@@Base+0x1768>
   14838:	mov	ip, r1
   1483c:	mov	r3, r2
   14840:	mov	r1, r0
   14844:	mov	r2, ip
   14848:	mov	r0, #0
   1484c:	b	147b8 <close_stdout@@Base+0x17d4>
   14850:	push	{r4, r5, r6, r7, r8, lr}
   14854:	mov	r5, r2
   14858:	ldr	lr, [pc, #136]	; 148e8 <close_stdout@@Base+0x1904>
   1485c:	mov	r7, r0
   14860:	mov	r6, r1
   14864:	ldr	r4, [pc, #128]	; 148ec <close_stdout@@Base+0x1908>
   14868:	add	lr, pc, lr
   1486c:	sub	sp, sp, #56	; 0x38
   14870:	add	lr, lr, #256	; 0x100
   14874:	ldr	r8, [pc, #116]	; 148f0 <close_stdout@@Base+0x190c>
   14878:	add	r4, pc, r4
   1487c:	add	ip, sp, #4
   14880:	ldm	lr!, {r0, r1, r2, r3}
   14884:	ldr	r4, [r4, r8]
   14888:	stmia	ip!, {r0, r1, r2, r3}
   1488c:	ldm	lr!, {r0, r1, r2, r3}
   14890:	ldr	r8, [r4]
   14894:	stmia	ip!, {r0, r1, r2, r3}
   14898:	ldm	lr, {r0, r1, r2, r3}
   1489c:	str	r8, [sp, #52]	; 0x34
   148a0:	stm	ip, {r0, r1, r2, r3}
   148a4:	mov	r1, r5
   148a8:	add	r5, sp, #4
   148ac:	mov	r2, #1
   148b0:	mov	r0, r5
   148b4:	bl	1441c <close_stdout@@Base+0x1438>
   148b8:	mov	r2, r6
   148bc:	mov	r3, r5
   148c0:	mov	r1, r7
   148c4:	mov	r0, #0
   148c8:	bl	141c0 <close_stdout@@Base+0x11dc>
   148cc:	ldr	r2, [sp, #52]	; 0x34
   148d0:	ldr	r3, [r4]
   148d4:	cmp	r2, r3
   148d8:	bne	148e4 <close_stdout@@Base+0x1900>
   148dc:	add	sp, sp, #56	; 0x38
   148e0:	pop	{r4, r5, r6, r7, r8, pc}
   148e4:	bl	10f88 <__stack_chk_fail@plt>
   148e8:	andeq	r3, r1, r8, lsl r9
   148ec:	andeq	r3, r1, r0, lsl #15
   148f0:	strdeq	r0, [r0], -ip
   148f4:	mov	r2, r1
   148f8:	mvn	r1, #0
   148fc:	b	14850 <close_stdout@@Base+0x186c>
   14900:	mov	r1, #58	; 0x3a
   14904:	b	148f4 <close_stdout@@Base+0x1910>
   14908:	mov	r2, #58	; 0x3a
   1490c:	b	14850 <close_stdout@@Base+0x186c>
   14910:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14914:	mov	r5, r2
   14918:	ldr	lr, [pc, #144]	; 149b0 <close_stdout@@Base+0x19cc>
   1491c:	mov	r8, r0
   14920:	mov	r9, r1
   14924:	mov	r7, r3
   14928:	add	lr, pc, lr
   1492c:	ldr	r4, [pc, #128]	; 149b4 <close_stdout@@Base+0x19d0>
   14930:	add	lr, lr, #256	; 0x100
   14934:	sub	sp, sp, #56	; 0x38
   14938:	ldr	sl, [pc, #120]	; 149b8 <close_stdout@@Base+0x19d4>
   1493c:	add	r4, pc, r4
   14940:	ldm	lr!, {r0, r1, r2, r3}
   14944:	add	ip, sp, #4
   14948:	ldr	r4, [r4, sl]
   1494c:	ldr	r6, [sp, #88]	; 0x58
   14950:	stmia	ip!, {r0, r1, r2, r3}
   14954:	ldm	lr!, {r0, r1, r2, r3}
   14958:	ldr	sl, [r4]
   1495c:	stmia	ip!, {r0, r1, r2, r3}
   14960:	ldm	lr, {r0, r1, r2, r3}
   14964:	str	sl, [sp, #52]	; 0x34
   14968:	stm	ip, {r0, r1, r2, r3}
   1496c:	mov	r2, r5
   14970:	add	r5, sp, #4
   14974:	mov	r1, r9
   14978:	mov	r0, r5
   1497c:	bl	14490 <close_stdout@@Base+0x14ac>
   14980:	mov	r2, r6
   14984:	mov	r3, r5
   14988:	mov	r0, r8
   1498c:	mov	r1, r7
   14990:	bl	141c0 <close_stdout@@Base+0x11dc>
   14994:	ldr	r2, [sp, #52]	; 0x34
   14998:	ldr	r3, [r4]
   1499c:	cmp	r2, r3
   149a0:	bne	149ac <close_stdout@@Base+0x19c8>
   149a4:	add	sp, sp, #56	; 0x38
   149a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   149ac:	bl	10f88 <__stack_chk_fail@plt>
   149b0:	andeq	r3, r1, r8, asr r8
   149b4:			; <UNDEFINED> instruction: 0x000136bc
   149b8:	strdeq	r0, [r0], -ip
   149bc:	push	{lr}		; (str lr, [sp, #-4]!)
   149c0:	sub	sp, sp, #12
   149c4:	mvn	ip, #0
   149c8:	str	ip, [sp]
   149cc:	bl	14910 <close_stdout@@Base+0x192c>
   149d0:	add	sp, sp, #12
   149d4:	pop	{pc}		; (ldr pc, [sp], #4)
   149d8:	mov	ip, r1
   149dc:	mov	r3, r2
   149e0:	mov	r1, r0
   149e4:	mov	r2, ip
   149e8:	mov	r0, #0
   149ec:	b	149bc <close_stdout@@Base+0x19d8>
   149f0:	push	{lr}		; (str lr, [sp, #-4]!)
   149f4:	sub	sp, sp, #12
   149f8:	mov	lr, r1
   149fc:	mov	ip, r2
   14a00:	mov	r1, r0
   14a04:	str	r3, [sp]
   14a08:	mov	r2, lr
   14a0c:	mov	r3, ip
   14a10:	mov	r0, #0
   14a14:	bl	14910 <close_stdout@@Base+0x192c>
   14a18:	add	sp, sp, #12
   14a1c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a20:	ldr	r3, [pc, #12]	; 14a34 <close_stdout@@Base+0x1a50>
   14a24:	ldr	ip, [pc, #12]	; 14a38 <close_stdout@@Base+0x1a54>
   14a28:	add	r3, pc, r3
   14a2c:	ldr	r3, [r3, ip]
   14a30:	b	141c0 <close_stdout@@Base+0x11dc>
   14a34:	ldrdeq	r3, [r1], -r0
   14a38:	strdeq	r0, [r0], -r8
   14a3c:	mov	r2, r1
   14a40:	mov	r1, r0
   14a44:	mov	r0, #0
   14a48:	b	14a20 <close_stdout@@Base+0x1a3c>
   14a4c:	mvn	r2, #0
   14a50:	b	14a20 <close_stdout@@Base+0x1a3c>
   14a54:	mov	r1, r0
   14a58:	mov	r0, #0
   14a5c:	b	14a4c <close_stdout@@Base+0x1a68>
   14a60:	push	{r4, r5, r6}
   14a64:	ldrb	r3, [r0]
   14a68:	ldrb	r2, [r1]
   14a6c:	cmp	r3, #45	; 0x2d
   14a70:	beq	14b40 <close_stdout@@Base+0x1b5c>
   14a74:	cmp	r2, #45	; 0x2d
   14a78:	beq	14aec <close_stdout@@Base+0x1b08>
   14a7c:	cmp	r3, #48	; 0x30
   14a80:	beq	14bec <close_stdout@@Base+0x1c08>
   14a84:	cmp	r2, #48	; 0x30
   14a88:	bne	14aa0 <close_stdout@@Base+0x1abc>
   14a8c:	add	ip, r1, #1
   14a90:	mov	r1, ip
   14a94:	ldrb	r2, [ip], #1
   14a98:	cmp	r2, #48	; 0x30
   14a9c:	beq	14a90 <close_stdout@@Base+0x1aac>
   14aa0:	cmp	r2, r3
   14aa4:	bne	14c1c <close_stdout@@Base+0x1c38>
   14aa8:	sub	r2, r2, #48	; 0x30
   14aac:	cmp	r2, #9
   14ab0:	bhi	14c98 <close_stdout@@Base+0x1cb4>
   14ab4:	add	r4, r0, #1
   14ab8:	add	ip, r1, #1
   14abc:	ldrb	r3, [r4]
   14ac0:	mov	r0, r4
   14ac4:	ldrb	r2, [ip]
   14ac8:	mov	r1, ip
   14acc:	add	r4, r4, #1
   14ad0:	add	ip, ip, #1
   14ad4:	cmp	r3, r2
   14ad8:	sub	r5, r3, #48	; 0x30
   14adc:	bne	14cac <close_stdout@@Base+0x1cc8>
   14ae0:	cmp	r5, #9
   14ae4:	bls	14abc <close_stdout@@Base+0x1ad8>
   14ae8:	b	14c90 <close_stdout@@Base+0x1cac>
   14aec:	ldrb	r2, [r1, #1]!
   14af0:	cmp	r2, #48	; 0x30
   14af4:	beq	14aec <close_stdout@@Base+0x1b08>
   14af8:	sub	r2, r2, #48	; 0x30
   14afc:	cmp	r2, #9
   14b00:	bls	14b34 <close_stdout@@Base+0x1b50>
   14b04:	cmp	r3, #48	; 0x30
   14b08:	beq	14b24 <close_stdout@@Base+0x1b40>
   14b0c:	sub	r3, r3, #48	; 0x30
   14b10:	cmp	r3, #9
   14b14:	movhi	r0, #0
   14b18:	movls	r0, #1
   14b1c:	pop	{r4, r5, r6}
   14b20:	bx	lr
   14b24:	ldrb	r3, [r0, #1]!
   14b28:	b	14b04 <close_stdout@@Base+0x1b20>
   14b2c:	cmp	r5, #0
   14b30:	beq	14c90 <close_stdout@@Base+0x1cac>
   14b34:	mov	r0, #1
   14b38:	pop	{r4, r5, r6}
   14b3c:	bx	lr
   14b40:	mov	ip, r0
   14b44:	ldrb	r4, [ip, #1]
   14b48:	add	ip, ip, #1
   14b4c:	cmp	r4, #48	; 0x30
   14b50:	beq	14b44 <close_stdout@@Base+0x1b60>
   14b54:	cmp	r2, #45	; 0x2d
   14b58:	beq	14b88 <close_stdout@@Base+0x1ba4>
   14b5c:	sub	r4, r4, #48	; 0x30
   14b60:	cmp	r4, #9
   14b64:	bls	14c14 <close_stdout@@Base+0x1c30>
   14b68:	cmp	r2, #48	; 0x30
   14b6c:	beq	14be4 <close_stdout@@Base+0x1c00>
   14b70:	sub	r2, r2, #48	; 0x30
   14b74:	cmp	r2, #9
   14b78:	movhi	r0, #0
   14b7c:	mvnls	r0, #0
   14b80:	pop	{r4, r5, r6}
   14b84:	bx	lr
   14b88:	ldrb	r3, [r1, #1]
   14b8c:	add	r1, r1, #1
   14b90:	cmp	r3, #48	; 0x30
   14b94:	beq	14b88 <close_stdout@@Base+0x1ba4>
   14b98:	cmp	r4, r3
   14b9c:	bne	14d34 <close_stdout@@Base+0x1d50>
   14ba0:	sub	r4, r4, #48	; 0x30
   14ba4:	cmp	r4, #9
   14ba8:	bhi	14c90 <close_stdout@@Base+0x1cac>
   14bac:	add	r2, ip, #1
   14bb0:	add	r3, r1, #1
   14bb4:	ldrb	r4, [r2]
   14bb8:	mov	ip, r2
   14bbc:	ldrb	r5, [r3]
   14bc0:	mov	r1, r3
   14bc4:	add	r2, r2, #1
   14bc8:	add	r3, r3, #1
   14bcc:	cmp	r4, r5
   14bd0:	sub	r0, r4, #48	; 0x30
   14bd4:	bne	14cb4 <close_stdout@@Base+0x1cd0>
   14bd8:	cmp	r0, #9
   14bdc:	bls	14bb4 <close_stdout@@Base+0x1bd0>
   14be0:	b	14c90 <close_stdout@@Base+0x1cac>
   14be4:	ldrb	r2, [r1, #1]!
   14be8:	b	14b68 <close_stdout@@Base+0x1b84>
   14bec:	add	ip, r0, #1
   14bf0:	mov	r0, ip
   14bf4:	ldrb	r3, [ip], #1
   14bf8:	cmp	r3, #48	; 0x30
   14bfc:	beq	14bf0 <close_stdout@@Base+0x1c0c>
   14c00:	cmp	r2, #48	; 0x30
   14c04:	bne	14aa0 <close_stdout@@Base+0x1abc>
   14c08:	b	14a8c <close_stdout@@Base+0x1aa8>
   14c0c:	cmp	r3, #0
   14c10:	beq	14c90 <close_stdout@@Base+0x1cac>
   14c14:	mvn	r0, #0
   14c18:	b	14b1c <close_stdout@@Base+0x1b38>
   14c1c:	sub	ip, r3, #48	; 0x30
   14c20:	cmp	ip, #9
   14c24:	rsb	r3, r2, r3
   14c28:	subhi	r2, r2, #48	; 0x30
   14c2c:	bhi	14c9c <close_stdout@@Base+0x1cb8>
   14c30:	mov	ip, r0
   14c34:	ldrb	r4, [ip, #1]!
   14c38:	sub	r4, r4, #48	; 0x30
   14c3c:	rsb	r5, r0, ip
   14c40:	cmp	r4, #9
   14c44:	bls	14c34 <close_stdout@@Base+0x1c50>
   14c48:	sub	r2, r2, #48	; 0x30
   14c4c:	cmp	r2, #9
   14c50:	bhi	14b2c <close_stdout@@Base+0x1b48>
   14c54:	mov	r2, r1
   14c58:	ldrb	r0, [r2, #1]!
   14c5c:	sub	r0, r0, #48	; 0x30
   14c60:	rsb	ip, r1, r2
   14c64:	cmp	r0, #9
   14c68:	bls	14c58 <close_stdout@@Base+0x1c74>
   14c6c:	cmp	ip, r5
   14c70:	beq	14c84 <close_stdout@@Base+0x1ca0>
   14c74:	cmp	r5, ip
   14c78:	mvncc	r0, #0
   14c7c:	movcs	r0, #1
   14c80:	b	14b1c <close_stdout@@Base+0x1b38>
   14c84:	cmp	r5, #0
   14c88:	movne	r0, r3
   14c8c:	bne	14b1c <close_stdout@@Base+0x1b38>
   14c90:	mov	r0, #0
   14c94:	b	14b1c <close_stdout@@Base+0x1b38>
   14c98:	mov	r3, #0
   14c9c:	cmp	r2, #9
   14ca0:	movls	r5, #0
   14ca4:	bls	14c54 <close_stdout@@Base+0x1c70>
   14ca8:	b	14c90 <close_stdout@@Base+0x1cac>
   14cac:	mov	ip, r5
   14cb0:	b	14c20 <close_stdout@@Base+0x1c3c>
   14cb4:	rsb	r0, r4, r5
   14cb8:	sub	r4, r4, #48	; 0x30
   14cbc:	sub	r5, r5, #48	; 0x30
   14cc0:	cmp	r4, #9
   14cc4:	bhi	14d24 <close_stdout@@Base+0x1d40>
   14cc8:	mov	r4, ip
   14ccc:	ldrb	r6, [r4, #1]!
   14cd0:	sub	r6, r6, #48	; 0x30
   14cd4:	rsb	r3, ip, r4
   14cd8:	cmp	r6, #9
   14cdc:	bls	14ccc <close_stdout@@Base+0x1ce8>
   14ce0:	cmp	r5, #9
   14ce4:	bhi	14c0c <close_stdout@@Base+0x1c28>
   14ce8:	mov	ip, r1
   14cec:	ldrb	r4, [ip, #1]!
   14cf0:	sub	r4, r4, #48	; 0x30
   14cf4:	rsb	r2, r1, ip
   14cf8:	cmp	r4, #9
   14cfc:	bls	14cec <close_stdout@@Base+0x1d08>
   14d00:	cmp	r2, r3
   14d04:	beq	14d18 <close_stdout@@Base+0x1d34>
   14d08:	cmp	r3, r2
   14d0c:	movcc	r0, #1
   14d10:	mvncs	r0, #0
   14d14:	b	14b1c <close_stdout@@Base+0x1b38>
   14d18:	cmp	r3, #0
   14d1c:	bne	14b1c <close_stdout@@Base+0x1b38>
   14d20:	b	14c90 <close_stdout@@Base+0x1cac>
   14d24:	cmp	r5, #9
   14d28:	movls	r3, #0
   14d2c:	bls	14ce8 <close_stdout@@Base+0x1d04>
   14d30:	b	14c90 <close_stdout@@Base+0x1cac>
   14d34:	rsb	r0, r4, r3
   14d38:	sub	r5, r3, #48	; 0x30
   14d3c:	sub	r4, r4, #48	; 0x30
   14d40:	b	14cc0 <close_stdout@@Base+0x1cdc>
   14d44:	push	{r4, lr}
   14d48:	mov	r4, r0
   14d4c:	bl	11048 <malloc@plt>
   14d50:	rsbs	r3, r0, #1
   14d54:	movcc	r3, #0
   14d58:	cmp	r4, #0
   14d5c:	moveq	r3, #0
   14d60:	cmp	r3, #0
   14d64:	popeq	{r4, pc}
   14d68:	bl	14f58 <close_stdout@@Base+0x1f74>
   14d6c:	push	{r3, r4, r5, lr}
   14d70:	mov	r4, r0
   14d74:	mvn	r0, #0
   14d78:	mov	r5, r1
   14d7c:	bl	155f8 <close_stdout@@Base+0x2614>
   14d80:	cmp	r0, r4
   14d84:	bcc	14d94 <close_stdout@@Base+0x1db0>
   14d88:	mul	r0, r4, r5
   14d8c:	pop	{r3, r4, r5, lr}
   14d90:	b	14d44 <close_stdout@@Base+0x1d60>
   14d94:	bl	14f58 <close_stdout@@Base+0x1f74>
   14d98:	b	14d44 <close_stdout@@Base+0x1d60>
   14d9c:	rsbs	r3, r1, #1
   14da0:	push	{r4, lr}
   14da4:	movcc	r3, #0
   14da8:	cmp	r0, #0
   14dac:	mov	r4, r1
   14db0:	moveq	r3, #0
   14db4:	cmp	r3, #0
   14db8:	bne	14ddc <close_stdout@@Base+0x1df8>
   14dbc:	bl	10f94 <realloc@plt>
   14dc0:	rsbs	r3, r0, #1
   14dc4:	movcc	r3, #0
   14dc8:	cmp	r4, #0
   14dcc:	moveq	r3, #0
   14dd0:	cmp	r3, #0
   14dd4:	popeq	{r4, pc}
   14dd8:	bl	14f58 <close_stdout@@Base+0x1f74>
   14ddc:	bl	10f40 <free@plt>
   14de0:	mov	r0, #0
   14de4:	pop	{r4, pc}
   14de8:	push	{r4, r5, r6, lr}
   14dec:	mov	r5, r1
   14df0:	mov	r6, r0
   14df4:	mov	r1, r2
   14df8:	mvn	r0, #0
   14dfc:	mov	r4, r2
   14e00:	bl	155f8 <close_stdout@@Base+0x2614>
   14e04:	cmp	r0, r5
   14e08:	bcc	14e1c <close_stdout@@Base+0x1e38>
   14e0c:	mov	r0, r6
   14e10:	mul	r1, r5, r4
   14e14:	pop	{r4, r5, r6, lr}
   14e18:	b	14d9c <close_stdout@@Base+0x1db8>
   14e1c:	bl	14f58 <close_stdout@@Base+0x1f74>
   14e20:	push	{r3, r4, r5, r6, r7, lr}
   14e24:	subs	r7, r0, #0
   14e28:	mov	r5, r1
   14e2c:	mov	r6, r2
   14e30:	ldr	r4, [r1]
   14e34:	beq	14e6c <close_stdout@@Base+0x1e88>
   14e38:	movw	r0, #43690	; 0xaaaa
   14e3c:	mov	r1, r2
   14e40:	bfi	r0, r0, #16, #16
   14e44:	bl	155f8 <close_stdout@@Base+0x2614>
   14e48:	cmp	r4, r0
   14e4c:	addcc	r3, r4, #1
   14e50:	addcc	r4, r4, r3, lsr #1
   14e54:	bcs	14e90 <close_stdout@@Base+0x1eac>
   14e58:	str	r4, [r5]
   14e5c:	mov	r0, r7
   14e60:	mul	r1, r6, r4
   14e64:	pop	{r3, r4, r5, r6, r7, lr}
   14e68:	b	14d9c <close_stdout@@Base+0x1db8>
   14e6c:	cmp	r4, #0
   14e70:	bne	14e58 <close_stdout@@Base+0x1e74>
   14e74:	mov	r0, #64	; 0x40
   14e78:	mov	r1, r2
   14e7c:	bl	155f8 <close_stdout@@Base+0x2614>
   14e80:	cmp	r0, #0
   14e84:	movne	r4, r0
   14e88:	addeq	r4, r0, #1
   14e8c:	b	14e58 <close_stdout@@Base+0x1e74>
   14e90:	bl	14f58 <close_stdout@@Base+0x1f74>
   14e94:	cmp	r0, #0
   14e98:	push	{r3, lr}
   14e9c:	ldr	r3, [r1]
   14ea0:	beq	14ecc <close_stdout@@Base+0x1ee8>
   14ea4:	movw	r2, #43689	; 0xaaa9
   14ea8:	movt	r2, #43690	; 0xaaaa
   14eac:	cmp	r3, r2
   14eb0:	addls	r2, r3, #1
   14eb4:	addls	r3, r3, r2, lsr #1
   14eb8:	bhi	14ee4 <close_stdout@@Base+0x1f00>
   14ebc:	str	r3, [r1]
   14ec0:	mov	r1, r3
   14ec4:	pop	{r3, lr}
   14ec8:	b	14d9c <close_stdout@@Base+0x1db8>
   14ecc:	cmp	r3, #0
   14ed0:	moveq	r3, #64	; 0x40
   14ed4:	str	r3, [r1]
   14ed8:	mov	r1, r3
   14edc:	pop	{r3, lr}
   14ee0:	b	14d9c <close_stdout@@Base+0x1db8>
   14ee4:	bl	14f58 <close_stdout@@Base+0x1f74>
   14ee8:	push	{r4, lr}
   14eec:	mov	r4, r0
   14ef0:	bl	14d44 <close_stdout@@Base+0x1d60>
   14ef4:	mov	r2, r4
   14ef8:	mov	r1, #0
   14efc:	pop	{r4, lr}
   14f00:	b	110c0 <memset@plt>
   14f04:	push	{r3, lr}
   14f08:	bl	10ef8 <calloc@plt>
   14f0c:	cmp	r0, #0
   14f10:	popne	{r3, pc}
   14f14:	bl	14f58 <close_stdout@@Base+0x1f74>
   14f18:	push	{r3, r4, r5, lr}
   14f1c:	mov	r4, r1
   14f20:	mov	r5, r0
   14f24:	mov	r0, r1
   14f28:	bl	14d44 <close_stdout@@Base+0x1d60>
   14f2c:	mov	r1, r5
   14f30:	mov	r2, r4
   14f34:	pop	{r3, r4, r5, lr}
   14f38:	b	10f58 <memcpy@plt>
   14f3c:	push	{r4, lr}
   14f40:	mov	r4, r0
   14f44:	bl	11090 <strlen@plt>
   14f48:	add	r1, r0, #1
   14f4c:	mov	r0, r4
   14f50:	pop	{r4, lr}
   14f54:	b	14f18 <close_stdout@@Base+0x1f34>
   14f58:	ldr	r3, [pc, #64]	; 14fa0 <close_stdout@@Base+0x1fbc>
   14f5c:	mov	r2, #5
   14f60:	ldr	ip, [pc, #60]	; 14fa4 <close_stdout@@Base+0x1fc0>
   14f64:	mov	r0, #0
   14f68:	add	r3, pc, r3
   14f6c:	ldr	r1, [pc, #52]	; 14fa8 <close_stdout@@Base+0x1fc4>
   14f70:	push	{r4, lr}
   14f74:	add	r1, pc, r1
   14f78:	ldr	r3, [r3, ip]
   14f7c:	ldr	r4, [r3]
   14f80:	bl	10f7c <dcgettext@plt>
   14f84:	ldr	r2, [pc, #32]	; 14fac <close_stdout@@Base+0x1fc8>
   14f88:	mov	r1, #0
   14f8c:	add	r2, pc, r2
   14f90:	mov	r3, r0
   14f94:	mov	r0, r4
   14f98:	bl	11024 <error@plt>
   14f9c:	bl	1118c <abort@plt>
   14fa0:	muleq	r1, r0, r0
   14fa4:	andeq	r0, r0, r4, lsl r1
   14fa8:	andeq	r2, r0, ip, lsl #3
   14fac:	andeq	r2, r0, ip, lsr #1
   14fb0:	push	{r4, r5, r6, lr}
   14fb4:	mov	r4, r0
   14fb8:	bl	1100c <__fpending@plt>
   14fbc:	mov	r6, r0
   14fc0:	mov	r0, r4
   14fc4:	ldr	r4, [r4]
   14fc8:	bl	15450 <close_stdout@@Base+0x246c>
   14fcc:	and	r4, r4, #32
   14fd0:	adds	r5, r0, #0
   14fd4:	movne	r5, #1
   14fd8:	cmp	r4, #0
   14fdc:	bne	14ffc <close_stdout@@Base+0x2018>
   14fe0:	cmp	r5, #0
   14fe4:	beq	14ff4 <close_stdout@@Base+0x2010>
   14fe8:	cmp	r6, #0
   14fec:	beq	15018 <close_stdout@@Base+0x2034>
   14ff0:	mvn	r4, #0
   14ff4:	mov	r0, r4
   14ff8:	pop	{r4, r5, r6, pc}
   14ffc:	cmp	r5, #0
   15000:	bne	14ff0 <close_stdout@@Base+0x200c>
   15004:	bl	110a8 <__errno_location@plt>
   15008:	mvn	r4, #0
   1500c:	str	r5, [r0]
   15010:	mov	r0, r4
   15014:	pop	{r4, r5, r6, pc}
   15018:	bl	110a8 <__errno_location@plt>
   1501c:	ldr	r4, [r0]
   15020:	subs	r4, r4, #9
   15024:	mvnne	r4, #0
   15028:	mov	r0, r4
   1502c:	pop	{r4, r5, r6, pc}
   15030:	ldr	r3, [pc, #984]	; 15410 <close_stdout@@Base+0x242c>
   15034:	mov	r0, #14
   15038:	ldr	r2, [pc, #980]	; 15414 <close_stdout@@Base+0x2430>
   1503c:	add	r3, pc, r3
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	sub	sp, sp, #132	; 0x84
   15048:	ldr	r6, [r3, r2]
   1504c:	ldr	r3, [r6]
   15050:	str	r3, [sp, #124]	; 0x7c
   15054:	bl	11144 <nl_langinfo@plt>
   15058:	subs	r5, r0, #0
   1505c:	beq	15110 <close_stdout@@Base+0x212c>
   15060:	ldr	r3, [pc, #944]	; 15418 <close_stdout@@Base+0x2434>
   15064:	ldr	r4, [pc, r3]
   15068:	cmp	r4, #0
   1506c:	beq	1511c <close_stdout@@Base+0x2138>
   15070:	ldrb	r7, [r4]
   15074:	cmp	r7, #0
   15078:	bne	150ac <close_stdout@@Base+0x20c8>
   1507c:	b	150e4 <close_stdout@@Base+0x2100>
   15080:	mov	r0, r4
   15084:	bl	11090 <strlen@plt>
   15088:	add	r0, r0, #1
   1508c:	add	r7, r4, r0
   15090:	mov	r0, r7
   15094:	bl	11090 <strlen@plt>
   15098:	add	r0, r0, #1
   1509c:	add	r4, r7, r0
   150a0:	ldrb	r7, [r7, r0]
   150a4:	cmp	r7, #0
   150a8:	beq	150e4 <close_stdout@@Base+0x2100>
   150ac:	mov	r0, r5
   150b0:	mov	r1, r4
   150b4:	bl	10f1c <strcmp@plt>
   150b8:	cmp	r0, #0
   150bc:	beq	150d4 <close_stdout@@Base+0x20f0>
   150c0:	cmp	r7, #42	; 0x2a
   150c4:	bne	15080 <close_stdout@@Base+0x209c>
   150c8:	ldrb	r3, [r4, #1]
   150cc:	cmp	r3, #0
   150d0:	bne	15080 <close_stdout@@Base+0x209c>
   150d4:	mov	r0, r4
   150d8:	bl	11090 <strlen@plt>
   150dc:	add	r0, r0, #1
   150e0:	add	r5, r4, r0
   150e4:	ldrb	r3, [r5]
   150e8:	cmp	r3, #0
   150ec:	ldreq	r5, [pc, #808]	; 1541c <close_stdout@@Base+0x2438>
   150f0:	addeq	r5, pc, r5
   150f4:	ldr	r2, [sp, #124]	; 0x7c
   150f8:	mov	r0, r5
   150fc:	ldr	r3, [r6]
   15100:	cmp	r2, r3
   15104:	bne	153e4 <close_stdout@@Base+0x2400>
   15108:	add	sp, sp, #132	; 0x84
   1510c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15110:	ldr	r5, [pc, #776]	; 15420 <close_stdout@@Base+0x243c>
   15114:	add	r5, pc, r5
   15118:	b	15060 <close_stdout@@Base+0x207c>
   1511c:	ldr	r0, [pc, #768]	; 15424 <close_stdout@@Base+0x2440>
   15120:	add	r0, pc, r0
   15124:	bl	1103c <getenv@plt>
   15128:	subs	r8, r0, #0
   1512c:	beq	153bc <close_stdout@@Base+0x23d8>
   15130:	ldrb	r3, [r8]
   15134:	cmp	r3, #0
   15138:	beq	15350 <close_stdout@@Base+0x236c>
   1513c:	bl	11090 <strlen@plt>
   15140:	subs	sl, r0, #0
   15144:	subne	r3, sl, #1
   15148:	bne	15360 <close_stdout@@Base+0x237c>
   1514c:	mov	r9, #0
   15150:	mov	fp, r9
   15154:	add	r9, sl, r9
   15158:	add	r0, r9, #14
   1515c:	bl	11048 <malloc@plt>
   15160:	subs	r7, r0, #0
   15164:	beq	153b0 <close_stdout@@Base+0x23cc>
   15168:	mov	r1, r8
   1516c:	mov	r2, sl
   15170:	bl	10f58 <memcpy@plt>
   15174:	cmp	fp, #0
   15178:	add	ip, r7, r9
   1517c:	movne	r3, #47	; 0x2f
   15180:	strbne	r3, [r7, sl]
   15184:	ldr	r3, [pc, #668]	; 15428 <close_stdout@@Base+0x2444>
   15188:	add	r3, pc, r3
   1518c:	ldm	r3!, {r0, r1, r2}
   15190:	ldrh	r3, [r3]
   15194:	str	r0, [r7, r9]
   15198:	mov	r0, r7
   1519c:	str	r1, [ip, #4]
   151a0:	mov	r1, #32768	; 0x8000
   151a4:	strh	r3, [ip, #12]
   151a8:	str	r2, [ip, #8]
   151ac:	bl	11030 <open64@plt>
   151b0:	subs	r8, r0, #0
   151b4:	blt	15378 <close_stdout@@Base+0x2394>
   151b8:	ldr	r1, [pc, #620]	; 1542c <close_stdout@@Base+0x2448>
   151bc:	add	r1, pc, r1
   151c0:	bl	10eec <fdopen@plt>
   151c4:	subs	fp, r0, #0
   151c8:	beq	153d0 <close_stdout@@Base+0x23ec>
   151cc:	ldr	r0, [pc, #604]	; 15430 <close_stdout@@Base+0x244c>
   151d0:	add	sl, sp, #20
   151d4:	add	r9, sp, #72	; 0x48
   151d8:	mov	r8, #0
   151dc:	add	r0, pc, r0
   151e0:	str	r0, [sp, #12]
   151e4:	ldr	r3, [fp, #4]
   151e8:	ldr	r2, [fp, #8]
   151ec:	cmp	r3, r2
   151f0:	bcs	152dc <close_stdout@@Base+0x22f8>
   151f4:	add	r2, r3, #1
   151f8:	str	r2, [fp, #4]
   151fc:	ldrb	r0, [r3]
   15200:	cmp	r0, #32
   15204:	beq	151e4 <close_stdout@@Base+0x2200>
   15208:	sub	r3, r0, #9
   1520c:	cmp	r3, #1
   15210:	bls	151e4 <close_stdout@@Base+0x2200>
   15214:	cmp	r0, #35	; 0x23
   15218:	beq	152f0 <close_stdout@@Base+0x230c>
   1521c:	mov	r1, fp
   15220:	bl	1109c <ungetc@plt>
   15224:	mov	r0, fp
   15228:	ldr	r1, [sp, #12]
   1522c:	mov	r2, sl
   15230:	mov	r3, r9
   15234:	bl	110cc <fscanf@plt>
   15238:	cmp	r0, #1
   1523c:	ble	15320 <close_stdout@@Base+0x233c>
   15240:	mov	r0, sl
   15244:	bl	11090 <strlen@plt>
   15248:	str	r0, [sp, #8]
   1524c:	mov	r0, r9
   15250:	bl	11090 <strlen@plt>
   15254:	cmp	r8, #0
   15258:	mov	r2, r0
   1525c:	bne	15384 <close_stdout@@Base+0x23a0>
   15260:	ldr	r3, [sp, #8]
   15264:	str	r2, [sp]
   15268:	add	r8, r0, r3
   1526c:	add	r0, r8, #3
   15270:	add	r8, r8, #2
   15274:	bl	11048 <malloc@plt>
   15278:	ldr	r2, [sp]
   1527c:	mov	r3, r0
   15280:	cmp	r3, #0
   15284:	beq	153e8 <close_stdout@@Base+0x2404>
   15288:	ldr	r0, [sp, #8]
   1528c:	movw	r1, #65534	; 0xfffe
   15290:	movt	r1, #65535	; 0xffff
   15294:	rsb	r2, r2, r8
   15298:	rsb	r1, r0, r1
   1529c:	stm	sp, {r2, r3}
   152a0:	add	r0, r1, r2
   152a4:	mov	r1, sl
   152a8:	add	r0, r3, r0
   152ac:	mov	r4, r3
   152b0:	bl	11000 <strcpy@plt>
   152b4:	ldr	r2, [sp]
   152b8:	ldr	r3, [sp, #4]
   152bc:	mov	r1, r9
   152c0:	sub	r0, r2, #1
   152c4:	add	r0, r3, r0
   152c8:	bl	11000 <strcpy@plt>
   152cc:	ldr	r3, [fp, #4]
   152d0:	ldr	r2, [fp, #8]
   152d4:	cmp	r3, r2
   152d8:	bcc	151f4 <close_stdout@@Base+0x2210>
   152dc:	mov	r0, fp
   152e0:	bl	11114 <__uflow@plt>
   152e4:	cmn	r0, #1
   152e8:	beq	15320 <close_stdout@@Base+0x233c>
   152ec:	b	15200 <close_stdout@@Base+0x221c>
   152f0:	ldr	r3, [fp, #4]
   152f4:	ldr	r2, [fp, #8]
   152f8:	cmp	r3, r2
   152fc:	bcs	15404 <close_stdout@@Base+0x2420>
   15300:	add	r2, r3, #1
   15304:	str	r2, [fp, #4]
   15308:	ldrb	r0, [r3]
   1530c:	cmp	r0, #10
   15310:	cmnne	r0, #1
   15314:	bne	152f0 <close_stdout@@Base+0x230c>
   15318:	cmn	r0, #1
   1531c:	bne	151e4 <close_stdout@@Base+0x2200>
   15320:	mov	r0, fp
   15324:	bl	15450 <close_stdout@@Base+0x246c>
   15328:	cmp	r8, #0
   1532c:	beq	15378 <close_stdout@@Base+0x2394>
   15330:	mov	r3, #0
   15334:	strb	r3, [r4, r8]
   15338:	mov	r0, r7
   1533c:	bl	10f40 <free@plt>
   15340:	ldr	r3, [pc, #236]	; 15434 <close_stdout@@Base+0x2450>
   15344:	add	r3, pc, r3
   15348:	str	r4, [r3]
   1534c:	b	15070 <close_stdout@@Base+0x208c>
   15350:	ldr	r8, [pc, #224]	; 15438 <close_stdout@@Base+0x2454>
   15354:	mov	r3, #7
   15358:	mov	sl, #8
   1535c:	add	r8, pc, r8
   15360:	ldrb	r3, [r8, r3]
   15364:	cmp	r3, #47	; 0x2f
   15368:	movne	r9, #1
   1536c:	movne	fp, r9
   15370:	bne	15154 <close_stdout@@Base+0x2170>
   15374:	b	1514c <close_stdout@@Base+0x2168>
   15378:	ldr	r4, [pc, #188]	; 1543c <close_stdout@@Base+0x2458>
   1537c:	add	r4, pc, r4
   15380:	b	15338 <close_stdout@@Base+0x2354>
   15384:	ldr	r0, [sp, #8]
   15388:	str	r2, [sp]
   1538c:	add	r3, r0, r2
   15390:	mov	r0, r4
   15394:	add	r8, r3, r8
   15398:	add	r1, r8, #3
   1539c:	add	r8, r8, #2
   153a0:	bl	10f94 <realloc@plt>
   153a4:	ldr	r2, [sp]
   153a8:	mov	r3, r0
   153ac:	b	15280 <close_stdout@@Base+0x229c>
   153b0:	ldr	r4, [pc, #136]	; 15440 <close_stdout@@Base+0x245c>
   153b4:	add	r4, pc, r4
   153b8:	b	15340 <close_stdout@@Base+0x235c>
   153bc:	ldr	r8, [pc, #128]	; 15444 <close_stdout@@Base+0x2460>
   153c0:	mov	r3, #7
   153c4:	mov	sl, #8
   153c8:	add	r8, pc, r8
   153cc:	b	15360 <close_stdout@@Base+0x237c>
   153d0:	ldr	r4, [pc, #112]	; 15448 <close_stdout@@Base+0x2464>
   153d4:	mov	r0, r8
   153d8:	add	r4, pc, r4
   153dc:	bl	11198 <close@plt>
   153e0:	b	15338 <close_stdout@@Base+0x2354>
   153e4:	bl	10f88 <__stack_chk_fail@plt>
   153e8:	mov	r0, r4
   153ec:	ldr	r4, [pc, #88]	; 1544c <close_stdout@@Base+0x2468>
   153f0:	bl	10f40 <free@plt>
   153f4:	mov	r0, fp
   153f8:	add	r4, pc, r4
   153fc:	bl	15450 <close_stdout@@Base+0x246c>
   15400:	b	15338 <close_stdout@@Base+0x2354>
   15404:	mov	r0, fp
   15408:	bl	11114 <__uflow@plt>
   1540c:	b	1530c <close_stdout@@Base+0x2328>
   15410:			; <UNDEFINED> instruction: 0x00012fbc
   15414:	strdeq	r0, [r0], -ip
   15418:	andeq	r3, r1, ip, asr #4
   1541c:	andeq	r2, r0, r0, lsr r0
   15420:			; <UNDEFINED> instruction: 0x000012b8
   15424:	andeq	r2, r0, r8
   15428:			; <UNDEFINED> instruction: 0x00001fb0
   1542c:	andeq	r1, r0, ip, lsl #31
   15430:	andeq	r1, r0, r0, ror pc
   15434:	andeq	r2, r1, ip, ror #30
   15438:			; <UNDEFINED> instruction: 0x00001db8
   1543c:	andeq	r1, r0, r0, asr r0
   15440:	andeq	r1, r0, r8, lsl r0
   15444:	andeq	r1, r0, ip, asr #26
   15448:	strdeq	r0, [r0], -r4
   1544c:	ldrdeq	r0, [r0], -r4
   15450:	push	{r4, r5, r6, lr}
   15454:	sub	sp, sp, #8
   15458:	mov	r4, r0
   1545c:	bl	110e4 <fileno@plt>
   15460:	cmp	r0, #0
   15464:	mov	r0, r4
   15468:	blt	154e4 <close_stdout@@Base+0x2500>
   1546c:	bl	11060 <__freading@plt>
   15470:	cmp	r0, #0
   15474:	bne	154b0 <close_stdout@@Base+0x24cc>
   15478:	mov	r0, r4
   1547c:	bl	154f0 <close_stdout@@Base+0x250c>
   15480:	cmp	r0, #0
   15484:	beq	154e0 <close_stdout@@Base+0x24fc>
   15488:	bl	110a8 <__errno_location@plt>
   1548c:	ldr	r6, [r0]
   15490:	mov	r5, r0
   15494:	mov	r0, r4
   15498:	bl	110fc <fclose@plt>
   1549c:	cmp	r6, #0
   154a0:	mvnne	r0, #0
   154a4:	strne	r6, [r5]
   154a8:	add	sp, sp, #8
   154ac:	pop	{r4, r5, r6, pc}
   154b0:	mov	r0, r4
   154b4:	bl	110e4 <fileno@plt>
   154b8:	mov	r1, #1
   154bc:	mov	r2, #0
   154c0:	mov	r3, #0
   154c4:	str	r1, [sp]
   154c8:	bl	10fe8 <lseek64@plt>
   154cc:	mvn	r2, #0
   154d0:	mvn	r3, #0
   154d4:	cmp	r1, r3
   154d8:	cmpeq	r0, r2
   154dc:	bne	15478 <close_stdout@@Base+0x2494>
   154e0:	mov	r0, r4
   154e4:	add	sp, sp, #8
   154e8:	pop	{r4, r5, r6, lr}
   154ec:	b	110fc <fclose@plt>
   154f0:	push	{r4, lr}
   154f4:	subs	r4, r0, #0
   154f8:	sub	sp, sp, #8
   154fc:	beq	1550c <close_stdout@@Base+0x2528>
   15500:	bl	11060 <__freading@plt>
   15504:	cmp	r0, #0
   15508:	bne	1551c <close_stdout@@Base+0x2538>
   1550c:	mov	r0, r4
   15510:	add	sp, sp, #8
   15514:	pop	{r4, lr}
   15518:	b	10f34 <fflush@plt>
   1551c:	ldr	r3, [r4]
   15520:	tst	r3, #256	; 0x100
   15524:	beq	1550c <close_stdout@@Base+0x2528>
   15528:	mov	r3, #1
   1552c:	mov	r0, r4
   15530:	str	r3, [sp]
   15534:	mov	r2, #0
   15538:	mov	r3, #0
   1553c:	bl	15550 <close_stdout@@Base+0x256c>
   15540:	mov	r0, r4
   15544:	add	sp, sp, #8
   15548:	pop	{r4, lr}
   1554c:	b	10f34 <fflush@plt>
   15550:	push	{r4, r5, r6, r7, lr}
   15554:	sub	sp, sp, #20
   15558:	ldmib	r0, {r1, ip}
   1555c:	mov	r6, r0
   15560:	ldr	r4, [sp, #40]	; 0x28
   15564:	cmp	ip, r1
   15568:	beq	15580 <close_stdout@@Base+0x259c>
   1556c:	str	r4, [sp, #40]	; 0x28
   15570:	mov	r0, r6
   15574:	add	sp, sp, #20
   15578:	pop	{r4, r5, r6, r7, lr}
   1557c:	b	11108 <fseeko64@plt>
   15580:	ldr	ip, [r0, #20]
   15584:	ldr	r1, [r0, #16]
   15588:	cmp	ip, r1
   1558c:	bne	1556c <close_stdout@@Base+0x2588>
   15590:	ldr	r7, [r0, #36]	; 0x24
   15594:	cmp	r7, #0
   15598:	bne	1556c <close_stdout@@Base+0x2588>
   1559c:	str	r2, [sp, #12]
   155a0:	mvn	r5, #0
   155a4:	str	r3, [sp, #8]
   155a8:	bl	110e4 <fileno@plt>
   155ac:	str	r4, [sp]
   155b0:	mvn	r4, #0
   155b4:	ldr	r2, [sp, #12]
   155b8:	ldr	r3, [sp, #8]
   155bc:	bl	10fe8 <lseek64@plt>
   155c0:	mov	r2, r0
   155c4:	mov	r3, r1
   155c8:	cmp	r3, r5
   155cc:	cmpeq	r2, r4
   155d0:	beq	155f0 <close_stdout@@Base+0x260c>
   155d4:	ldr	r1, [r6]
   155d8:	mov	r0, r7
   155dc:	strd	r2, [r6, #80]	; 0x50
   155e0:	bic	r3, r1, #16
   155e4:	str	r3, [r6]
   155e8:	add	sp, sp, #20
   155ec:	pop	{r4, r5, r6, r7, pc}
   155f0:	mvn	r0, #0
   155f4:	b	155e8 <close_stdout@@Base+0x2604>
   155f8:	subs	r2, r1, #1
   155fc:	bxeq	lr
   15600:	bcc	157d8 <close_stdout@@Base+0x27f4>
   15604:	cmp	r0, r1
   15608:	bls	157bc <close_stdout@@Base+0x27d8>
   1560c:	tst	r1, r2
   15610:	beq	157c8 <close_stdout@@Base+0x27e4>
   15614:	clz	r3, r0
   15618:	clz	r2, r1
   1561c:	sub	r3, r2, r3
   15620:	rsbs	r3, r3, #31
   15624:	addne	r3, r3, r3, lsl #1
   15628:	mov	r2, #0
   1562c:	addne	pc, pc, r3, lsl #2
   15630:	nop	{0}
   15634:	cmp	r0, r1, lsl #31
   15638:	adc	r2, r2, r2
   1563c:	subcs	r0, r0, r1, lsl #31
   15640:	cmp	r0, r1, lsl #30
   15644:	adc	r2, r2, r2
   15648:	subcs	r0, r0, r1, lsl #30
   1564c:	cmp	r0, r1, lsl #29
   15650:	adc	r2, r2, r2
   15654:	subcs	r0, r0, r1, lsl #29
   15658:	cmp	r0, r1, lsl #28
   1565c:	adc	r2, r2, r2
   15660:	subcs	r0, r0, r1, lsl #28
   15664:	cmp	r0, r1, lsl #27
   15668:	adc	r2, r2, r2
   1566c:	subcs	r0, r0, r1, lsl #27
   15670:	cmp	r0, r1, lsl #26
   15674:	adc	r2, r2, r2
   15678:	subcs	r0, r0, r1, lsl #26
   1567c:	cmp	r0, r1, lsl #25
   15680:	adc	r2, r2, r2
   15684:	subcs	r0, r0, r1, lsl #25
   15688:	cmp	r0, r1, lsl #24
   1568c:	adc	r2, r2, r2
   15690:	subcs	r0, r0, r1, lsl #24
   15694:	cmp	r0, r1, lsl #23
   15698:	adc	r2, r2, r2
   1569c:	subcs	r0, r0, r1, lsl #23
   156a0:	cmp	r0, r1, lsl #22
   156a4:	adc	r2, r2, r2
   156a8:	subcs	r0, r0, r1, lsl #22
   156ac:	cmp	r0, r1, lsl #21
   156b0:	adc	r2, r2, r2
   156b4:	subcs	r0, r0, r1, lsl #21
   156b8:	cmp	r0, r1, lsl #20
   156bc:	adc	r2, r2, r2
   156c0:	subcs	r0, r0, r1, lsl #20
   156c4:	cmp	r0, r1, lsl #19
   156c8:	adc	r2, r2, r2
   156cc:	subcs	r0, r0, r1, lsl #19
   156d0:	cmp	r0, r1, lsl #18
   156d4:	adc	r2, r2, r2
   156d8:	subcs	r0, r0, r1, lsl #18
   156dc:	cmp	r0, r1, lsl #17
   156e0:	adc	r2, r2, r2
   156e4:	subcs	r0, r0, r1, lsl #17
   156e8:	cmp	r0, r1, lsl #16
   156ec:	adc	r2, r2, r2
   156f0:	subcs	r0, r0, r1, lsl #16
   156f4:	cmp	r0, r1, lsl #15
   156f8:	adc	r2, r2, r2
   156fc:	subcs	r0, r0, r1, lsl #15
   15700:	cmp	r0, r1, lsl #14
   15704:	adc	r2, r2, r2
   15708:	subcs	r0, r0, r1, lsl #14
   1570c:	cmp	r0, r1, lsl #13
   15710:	adc	r2, r2, r2
   15714:	subcs	r0, r0, r1, lsl #13
   15718:	cmp	r0, r1, lsl #12
   1571c:	adc	r2, r2, r2
   15720:	subcs	r0, r0, r1, lsl #12
   15724:	cmp	r0, r1, lsl #11
   15728:	adc	r2, r2, r2
   1572c:	subcs	r0, r0, r1, lsl #11
   15730:	cmp	r0, r1, lsl #10
   15734:	adc	r2, r2, r2
   15738:	subcs	r0, r0, r1, lsl #10
   1573c:	cmp	r0, r1, lsl #9
   15740:	adc	r2, r2, r2
   15744:	subcs	r0, r0, r1, lsl #9
   15748:	cmp	r0, r1, lsl #8
   1574c:	adc	r2, r2, r2
   15750:	subcs	r0, r0, r1, lsl #8
   15754:	cmp	r0, r1, lsl #7
   15758:	adc	r2, r2, r2
   1575c:	subcs	r0, r0, r1, lsl #7
   15760:	cmp	r0, r1, lsl #6
   15764:	adc	r2, r2, r2
   15768:	subcs	r0, r0, r1, lsl #6
   1576c:	cmp	r0, r1, lsl #5
   15770:	adc	r2, r2, r2
   15774:	subcs	r0, r0, r1, lsl #5
   15778:	cmp	r0, r1, lsl #4
   1577c:	adc	r2, r2, r2
   15780:	subcs	r0, r0, r1, lsl #4
   15784:	cmp	r0, r1, lsl #3
   15788:	adc	r2, r2, r2
   1578c:	subcs	r0, r0, r1, lsl #3
   15790:	cmp	r0, r1, lsl #2
   15794:	adc	r2, r2, r2
   15798:	subcs	r0, r0, r1, lsl #2
   1579c:	cmp	r0, r1, lsl #1
   157a0:	adc	r2, r2, r2
   157a4:	subcs	r0, r0, r1, lsl #1
   157a8:	cmp	r0, r1
   157ac:	adc	r2, r2, r2
   157b0:	subcs	r0, r0, r1
   157b4:	mov	r0, r2
   157b8:	bx	lr
   157bc:	moveq	r0, #1
   157c0:	movne	r0, #0
   157c4:	bx	lr
   157c8:	clz	r2, r1
   157cc:	rsb	r2, r2, #31
   157d0:	lsr	r0, r0, r2
   157d4:	bx	lr
   157d8:	cmp	r0, #0
   157dc:	mvnne	r0, #0
   157e0:	b	15840 <close_stdout@@Base+0x285c>
   157e4:	cmp	r1, #0
   157e8:	beq	157d8 <close_stdout@@Base+0x27f4>
   157ec:	push	{r0, r1, lr}
   157f0:	bl	155f8 <close_stdout@@Base+0x2614>
   157f4:	pop	{r1, r2, lr}
   157f8:	mul	r3, r2, r0
   157fc:	sub	r1, r1, r3
   15800:	bx	lr
   15804:	cmp	r3, #0
   15808:	cmpeq	r2, #0
   1580c:	bne	15824 <close_stdout@@Base+0x2840>
   15810:	cmp	r1, #0
   15814:	cmpeq	r0, #0
   15818:	mvnne	r1, #0
   1581c:	mvnne	r0, #0
   15820:	b	15840 <close_stdout@@Base+0x285c>
   15824:	sub	sp, sp, #8
   15828:	push	{sp, lr}
   1582c:	bl	1588c <close_stdout@@Base+0x28a8>
   15830:	ldr	lr, [sp, #4]
   15834:	add	sp, sp, #8
   15838:	pop	{r2, r3}
   1583c:	bx	lr
   15840:	push	{r1, lr}
   15844:	mov	r0, #8
   15848:	bl	10f10 <raise@plt>
   1584c:	pop	{r1, pc}
   15850:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15854:	mov	r8, r2
   15858:	mov	r6, r0
   1585c:	mov	r7, r1
   15860:	mov	sl, r3
   15864:	ldr	r9, [sp, #32]
   15868:	bl	158c8 <close_stdout@@Base+0x28e4>
   1586c:	umull	r4, r5, r8, r0
   15870:	mul	r8, r8, r1
   15874:	mla	r2, r0, sl, r8
   15878:	add	r5, r2, r5
   1587c:	subs	r4, r6, r4
   15880:	sbc	r5, r7, r5
   15884:	strd	r4, [r9]
   15888:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1588c:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15890:	mov	r8, r2
   15894:	mov	r6, r0
   15898:	mov	r7, r1
   1589c:	mov	r5, r3
   158a0:	ldr	r9, [sp, #32]
   158a4:	bl	15d54 <close_stdout@@Base+0x2d70>
   158a8:	mul	r3, r0, r5
   158ac:	umull	r4, r5, r0, r8
   158b0:	mla	r8, r8, r1, r3
   158b4:	add	r5, r8, r5
   158b8:	subs	r4, r6, r4
   158bc:	sbc	r5, r7, r5
   158c0:	strd	r4, [r9]
   158c4:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   158c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158cc:	rsbs	r4, r0, #0
   158d0:	rsc	r5, r1, #0
   158d4:	cmp	r1, #0
   158d8:	mvn	r6, #0
   158dc:	sub	sp, sp, #12
   158e0:	movge	r4, r0
   158e4:	movge	r5, r1
   158e8:	movge	r6, #0
   158ec:	cmp	r3, #0
   158f0:	blt	15b28 <close_stdout@@Base+0x2b44>
   158f4:	cmp	r3, #0
   158f8:	mov	sl, r4
   158fc:	mov	ip, r5
   15900:	mov	r0, r2
   15904:	mov	r1, r3
   15908:	mov	r8, r2
   1590c:	mov	r7, r4
   15910:	mov	r9, r5
   15914:	bne	15a0c <close_stdout@@Base+0x2a28>
   15918:	cmp	r2, r5
   1591c:	bls	15a48 <close_stdout@@Base+0x2a64>
   15920:	clz	r3, r2
   15924:	cmp	r3, #0
   15928:	rsbne	r2, r3, #32
   1592c:	lslne	r8, r0, r3
   15930:	lsrne	r2, r4, r2
   15934:	lslne	r7, r4, r3
   15938:	orrne	r9, r2, r5, lsl r3
   1593c:	lsr	r4, r8, #16
   15940:	uxth	sl, r8
   15944:	mov	r1, r4
   15948:	mov	r0, r9
   1594c:	bl	155f8 <close_stdout@@Base+0x2614>
   15950:	mov	r1, r4
   15954:	mov	fp, r0
   15958:	mov	r0, r9
   1595c:	bl	157e4 <close_stdout@@Base+0x2800>
   15960:	mul	r0, sl, fp
   15964:	lsr	r2, r7, #16
   15968:	orr	r1, r2, r1, lsl #16
   1596c:	cmp	r0, r1
   15970:	bls	15994 <close_stdout@@Base+0x29b0>
   15974:	adds	r1, r1, r8
   15978:	sub	r3, fp, #1
   1597c:	bcs	15990 <close_stdout@@Base+0x29ac>
   15980:	cmp	r0, r1
   15984:	subhi	fp, fp, #2
   15988:	addhi	r1, r1, r8
   1598c:	bhi	15994 <close_stdout@@Base+0x29b0>
   15990:	mov	fp, r3
   15994:	rsb	r9, r0, r1
   15998:	mov	r1, r4
   1599c:	uxth	r7, r7
   159a0:	mov	r0, r9
   159a4:	bl	155f8 <close_stdout@@Base+0x2614>
   159a8:	mov	r1, r4
   159ac:	mov	r5, r0
   159b0:	mov	r0, r9
   159b4:	bl	157e4 <close_stdout@@Base+0x2800>
   159b8:	mul	sl, sl, r5
   159bc:	orr	r1, r7, r1, lsl #16
   159c0:	cmp	sl, r1
   159c4:	bls	159e4 <close_stdout@@Base+0x2a00>
   159c8:	adds	r8, r1, r8
   159cc:	sub	r3, r5, #1
   159d0:	bcs	159e0 <close_stdout@@Base+0x29fc>
   159d4:	cmp	sl, r8
   159d8:	subhi	r5, r5, #2
   159dc:	bhi	159e4 <close_stdout@@Base+0x2a00>
   159e0:	mov	r5, r3
   159e4:	orr	r3, r5, fp, lsl #16
   159e8:	mov	r4, #0
   159ec:	cmp	r6, #0
   159f0:	mov	r0, r3
   159f4:	mov	r1, r4
   159f8:	beq	15a04 <close_stdout@@Base+0x2a20>
   159fc:	rsbs	r0, r0, #0
   15a00:	rsc	r1, r1, #0
   15a04:	add	sp, sp, #12
   15a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a0c:	cmp	r3, r5
   15a10:	movhi	r4, #0
   15a14:	movhi	r3, r4
   15a18:	bhi	159ec <close_stdout@@Base+0x2a08>
   15a1c:	clz	r5, r1
   15a20:	cmp	r5, #0
   15a24:	bne	15c14 <close_stdout@@Base+0x2c30>
   15a28:	cmp	r1, ip
   15a2c:	cmpcs	r2, sl
   15a30:	movhi	r4, #0
   15a34:	movls	r4, #1
   15a38:	movls	r3, #1
   15a3c:	movls	r4, r5
   15a40:	movhi	r3, r4
   15a44:	b	159ec <close_stdout@@Base+0x2a08>
   15a48:	cmp	r2, #0
   15a4c:	bne	15a60 <close_stdout@@Base+0x2a7c>
   15a50:	mov	r1, r2
   15a54:	mov	r0, #1
   15a58:	bl	155f8 <close_stdout@@Base+0x2614>
   15a5c:	mov	r8, r0
   15a60:	clz	r3, r8
   15a64:	cmp	r3, #0
   15a68:	bne	15b38 <close_stdout@@Base+0x2b54>
   15a6c:	rsb	r9, r8, r9
   15a70:	lsr	r5, r8, #16
   15a74:	uxth	sl, r8
   15a78:	mov	r4, #1
   15a7c:	mov	r1, r5
   15a80:	mov	r0, r9
   15a84:	bl	155f8 <close_stdout@@Base+0x2614>
   15a88:	mov	r1, r5
   15a8c:	mov	fp, r0
   15a90:	mov	r0, r9
   15a94:	bl	157e4 <close_stdout@@Base+0x2800>
   15a98:	mul	r0, sl, fp
   15a9c:	lsr	r2, r7, #16
   15aa0:	orr	r1, r2, r1, lsl #16
   15aa4:	cmp	r0, r1
   15aa8:	bls	15ac8 <close_stdout@@Base+0x2ae4>
   15aac:	adds	r1, r1, r8
   15ab0:	sub	r3, fp, #1
   15ab4:	bcs	15d34 <close_stdout@@Base+0x2d50>
   15ab8:	cmp	r0, r1
   15abc:	subhi	fp, fp, #2
   15ac0:	addhi	r1, r1, r8
   15ac4:	bls	15d34 <close_stdout@@Base+0x2d50>
   15ac8:	rsb	r2, r0, r1
   15acc:	mov	r1, r5
   15ad0:	str	r2, [sp]
   15ad4:	uxth	r7, r7
   15ad8:	mov	r0, r2
   15adc:	bl	155f8 <close_stdout@@Base+0x2614>
   15ae0:	ldr	r2, [sp]
   15ae4:	mov	r1, r5
   15ae8:	mov	r9, r0
   15aec:	mov	r0, r2
   15af0:	bl	157e4 <close_stdout@@Base+0x2800>
   15af4:	mul	sl, sl, r9
   15af8:	orr	r1, r7, r1, lsl #16
   15afc:	cmp	sl, r1
   15b00:	bls	15b20 <close_stdout@@Base+0x2b3c>
   15b04:	adds	r8, r1, r8
   15b08:	sub	r3, r9, #1
   15b0c:	bcs	15b1c <close_stdout@@Base+0x2b38>
   15b10:	cmp	sl, r8
   15b14:	subhi	r9, r9, #2
   15b18:	bhi	15b20 <close_stdout@@Base+0x2b3c>
   15b1c:	mov	r9, r3
   15b20:	orr	r3, r9, fp, lsl #16
   15b24:	b	159ec <close_stdout@@Base+0x2a08>
   15b28:	mvn	r6, r6
   15b2c:	rsbs	r2, r2, #0
   15b30:	rsc	r3, r3, #0
   15b34:	b	158f4 <close_stdout@@Base+0x2910>
   15b38:	lsl	r8, r8, r3
   15b3c:	rsb	fp, r3, #32
   15b40:	lsr	r4, r9, fp
   15b44:	lsr	fp, r7, fp
   15b48:	lsr	r5, r8, #16
   15b4c:	orr	fp, fp, r9, lsl r3
   15b50:	mov	r0, r4
   15b54:	lsl	r7, r7, r3
   15b58:	mov	r1, r5
   15b5c:	uxth	sl, r8
   15b60:	bl	155f8 <close_stdout@@Base+0x2614>
   15b64:	mov	r1, r5
   15b68:	mov	r3, r0
   15b6c:	mov	r0, r4
   15b70:	str	r3, [sp]
   15b74:	bl	157e4 <close_stdout@@Base+0x2800>
   15b78:	ldr	r3, [sp]
   15b7c:	lsr	r2, fp, #16
   15b80:	mul	r0, sl, r3
   15b84:	orr	r1, r2, r1, lsl #16
   15b88:	cmp	r0, r1
   15b8c:	bls	15bac <close_stdout@@Base+0x2bc8>
   15b90:	adds	r1, r1, r8
   15b94:	sub	r2, r3, #1
   15b98:	bcs	15d4c <close_stdout@@Base+0x2d68>
   15b9c:	cmp	r0, r1
   15ba0:	subhi	r3, r3, #2
   15ba4:	addhi	r1, r1, r8
   15ba8:	bls	15d4c <close_stdout@@Base+0x2d68>
   15bac:	rsb	r9, r0, r1
   15bb0:	mov	r1, r5
   15bb4:	str	r3, [sp]
   15bb8:	uxth	fp, fp
   15bbc:	mov	r0, r9
   15bc0:	bl	155f8 <close_stdout@@Base+0x2614>
   15bc4:	mov	r1, r5
   15bc8:	mov	r4, r0
   15bcc:	mov	r0, r9
   15bd0:	bl	157e4 <close_stdout@@Base+0x2800>
   15bd4:	mul	r9, sl, r4
   15bd8:	ldr	r3, [sp]
   15bdc:	orr	r1, fp, r1, lsl #16
   15be0:	cmp	r9, r1
   15be4:	bls	15c08 <close_stdout@@Base+0x2c24>
   15be8:	adds	r1, r1, r8
   15bec:	sub	r2, r4, #1
   15bf0:	bcs	15c04 <close_stdout@@Base+0x2c20>
   15bf4:	cmp	r9, r1
   15bf8:	subhi	r4, r4, #2
   15bfc:	addhi	r1, r1, r8
   15c00:	bhi	15c08 <close_stdout@@Base+0x2c24>
   15c04:	mov	r4, r2
   15c08:	rsb	r9, r9, r1
   15c0c:	orr	r4, r4, r3, lsl #16
   15c10:	b	15a7c <close_stdout@@Base+0x2a98>
   15c14:	rsb	sl, r5, #32
   15c18:	lsl	r3, r2, r5
   15c1c:	lsr	r0, r2, sl
   15c20:	lsr	r2, ip, sl
   15c24:	orr	r4, r0, r1, lsl r5
   15c28:	lsr	sl, r7, sl
   15c2c:	mov	r0, r2
   15c30:	orr	sl, sl, ip, lsl r5
   15c34:	lsr	r9, r4, #16
   15c38:	str	r3, [sp, #4]
   15c3c:	str	r2, [sp]
   15c40:	uxth	fp, r4
   15c44:	mov	r1, r9
   15c48:	bl	155f8 <close_stdout@@Base+0x2614>
   15c4c:	ldr	r2, [sp]
   15c50:	mov	r1, r9
   15c54:	mov	r8, r0
   15c58:	mov	r0, r2
   15c5c:	bl	157e4 <close_stdout@@Base+0x2800>
   15c60:	mul	r0, fp, r8
   15c64:	lsr	r2, sl, #16
   15c68:	orr	r1, r2, r1, lsl #16
   15c6c:	cmp	r0, r1
   15c70:	bls	15c90 <close_stdout@@Base+0x2cac>
   15c74:	adds	r1, r1, r4
   15c78:	sub	r2, r8, #1
   15c7c:	bcs	15d44 <close_stdout@@Base+0x2d60>
   15c80:	cmp	r0, r1
   15c84:	subhi	r8, r8, #2
   15c88:	addhi	r1, r1, r4
   15c8c:	bls	15d44 <close_stdout@@Base+0x2d60>
   15c90:	rsb	ip, r0, r1
   15c94:	mov	r1, r9
   15c98:	str	ip, [sp]
   15c9c:	mov	r0, ip
   15ca0:	bl	155f8 <close_stdout@@Base+0x2614>
   15ca4:	ldr	ip, [sp]
   15ca8:	mov	r1, r9
   15cac:	mov	r2, r0
   15cb0:	mov	r0, ip
   15cb4:	str	r2, [sp]
   15cb8:	bl	157e4 <close_stdout@@Base+0x2800>
   15cbc:	ldr	r2, [sp]
   15cc0:	uxth	ip, sl
   15cc4:	mul	fp, fp, r2
   15cc8:	orr	ip, ip, r1, lsl #16
   15ccc:	cmp	fp, ip
   15cd0:	bls	15cf0 <close_stdout@@Base+0x2d0c>
   15cd4:	adds	ip, ip, r4
   15cd8:	sub	r1, r2, #1
   15cdc:	bcs	15d3c <close_stdout@@Base+0x2d58>
   15ce0:	cmp	fp, ip
   15ce4:	subhi	r2, r2, #2
   15ce8:	addhi	ip, ip, r4
   15cec:	bls	15d3c <close_stdout@@Base+0x2d58>
   15cf0:	ldr	r0, [sp, #4]
   15cf4:	orr	r1, r2, r8, lsl #16
   15cf8:	rsb	fp, fp, ip
   15cfc:	umull	r2, r3, r1, r0
   15d00:	cmp	fp, r3
   15d04:	bcc	15d28 <close_stdout@@Base+0x2d44>
   15d08:	movne	r4, #0
   15d0c:	moveq	r4, #1
   15d10:	cmp	r2, r7, lsl r5
   15d14:	movls	r4, #0
   15d18:	andhi	r4, r4, #1
   15d1c:	cmp	r4, #0
   15d20:	moveq	r3, r1
   15d24:	beq	159ec <close_stdout@@Base+0x2a08>
   15d28:	sub	r3, r1, #1
   15d2c:	mov	r4, #0
   15d30:	b	159ec <close_stdout@@Base+0x2a08>
   15d34:	mov	fp, r3
   15d38:	b	15ac8 <close_stdout@@Base+0x2ae4>
   15d3c:	mov	r2, r1
   15d40:	b	15cf0 <close_stdout@@Base+0x2d0c>
   15d44:	mov	r8, r2
   15d48:	b	15c90 <close_stdout@@Base+0x2cac>
   15d4c:	mov	r3, r2
   15d50:	b	15bac <close_stdout@@Base+0x2bc8>
   15d54:	cmp	r3, #0
   15d58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d5c:	mov	r6, r0
   15d60:	sub	sp, sp, #12
   15d64:	mov	r5, r1
   15d68:	mov	r7, r0
   15d6c:	mov	r4, r2
   15d70:	mov	r8, r1
   15d74:	bne	15e54 <close_stdout@@Base+0x2e70>
   15d78:	cmp	r2, r1
   15d7c:	bls	15e90 <close_stdout@@Base+0x2eac>
   15d80:	clz	r3, r2
   15d84:	cmp	r3, #0
   15d88:	rsbne	r8, r3, #32
   15d8c:	lslne	r4, r2, r3
   15d90:	lsrne	r8, r0, r8
   15d94:	lslne	r7, r0, r3
   15d98:	orrne	r8, r8, r1, lsl r3
   15d9c:	lsr	r5, r4, #16
   15da0:	uxth	sl, r4
   15da4:	mov	r1, r5
   15da8:	mov	r0, r8
   15dac:	bl	155f8 <close_stdout@@Base+0x2614>
   15db0:	mov	r1, r5
   15db4:	mov	r9, r0
   15db8:	mov	r0, r8
   15dbc:	bl	157e4 <close_stdout@@Base+0x2800>
   15dc0:	mul	r0, sl, r9
   15dc4:	lsr	r3, r7, #16
   15dc8:	orr	r1, r3, r1, lsl #16
   15dcc:	cmp	r0, r1
   15dd0:	bls	15df4 <close_stdout@@Base+0x2e10>
   15dd4:	adds	r1, r1, r4
   15dd8:	sub	r2, r9, #1
   15ddc:	bcs	15df0 <close_stdout@@Base+0x2e0c>
   15de0:	cmp	r0, r1
   15de4:	subhi	r9, r9, #2
   15de8:	addhi	r1, r1, r4
   15dec:	bhi	15df4 <close_stdout@@Base+0x2e10>
   15df0:	mov	r9, r2
   15df4:	rsb	r8, r0, r1
   15df8:	mov	r1, r5
   15dfc:	uxth	r7, r7
   15e00:	mov	r0, r8
   15e04:	bl	155f8 <close_stdout@@Base+0x2614>
   15e08:	mov	r1, r5
   15e0c:	mov	r6, r0
   15e10:	mov	r0, r8
   15e14:	bl	157e4 <close_stdout@@Base+0x2800>
   15e18:	mul	sl, sl, r6
   15e1c:	orr	r1, r7, r1, lsl #16
   15e20:	cmp	sl, r1
   15e24:	bls	15e40 <close_stdout@@Base+0x2e5c>
   15e28:	adds	r4, r1, r4
   15e2c:	sub	r3, r6, #1
   15e30:	bcs	1613c <close_stdout@@Base+0x3158>
   15e34:	cmp	sl, r4
   15e38:	subhi	r6, r6, #2
   15e3c:	bls	1613c <close_stdout@@Base+0x3158>
   15e40:	orr	r0, r6, r9, lsl #16
   15e44:	mov	r6, #0
   15e48:	mov	r1, r6
   15e4c:	add	sp, sp, #12
   15e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e54:	cmp	r3, r1
   15e58:	movhi	r6, #0
   15e5c:	movhi	r0, r6
   15e60:	bhi	15e48 <close_stdout@@Base+0x2e64>
   15e64:	clz	r7, r3
   15e68:	cmp	r7, #0
   15e6c:	bne	15f6c <close_stdout@@Base+0x2f88>
   15e70:	cmp	r3, r1
   15e74:	cmpcs	r2, r6
   15e78:	movhi	r6, #0
   15e7c:	movls	r6, #1
   15e80:	movls	r0, #1
   15e84:	movls	r6, r7
   15e88:	movhi	r0, r6
   15e8c:	b	15e48 <close_stdout@@Base+0x2e64>
   15e90:	cmp	r2, #0
   15e94:	bne	15ea8 <close_stdout@@Base+0x2ec4>
   15e98:	mov	r1, r2
   15e9c:	mov	r0, #1
   15ea0:	bl	155f8 <close_stdout@@Base+0x2614>
   15ea4:	mov	r4, r0
   15ea8:	clz	r3, r4
   15eac:	cmp	r3, #0
   15eb0:	bne	16068 <close_stdout@@Base+0x3084>
   15eb4:	rsb	r5, r4, r5
   15eb8:	lsr	r8, r4, #16
   15ebc:	uxth	sl, r4
   15ec0:	mov	r6, #1
   15ec4:	mov	r1, r8
   15ec8:	mov	r0, r5
   15ecc:	bl	155f8 <close_stdout@@Base+0x2614>
   15ed0:	mov	r1, r8
   15ed4:	mov	r9, r0
   15ed8:	mov	r0, r5
   15edc:	bl	157e4 <close_stdout@@Base+0x2800>
   15ee0:	mul	r0, sl, r9
   15ee4:	lsr	r3, r7, #16
   15ee8:	orr	r1, r3, r1, lsl #16
   15eec:	cmp	r0, r1
   15ef0:	bls	15f10 <close_stdout@@Base+0x2f2c>
   15ef4:	adds	r1, r1, r4
   15ef8:	sub	r2, r9, #1
   15efc:	bcs	16144 <close_stdout@@Base+0x3160>
   15f00:	cmp	r0, r1
   15f04:	subhi	r9, r9, #2
   15f08:	addhi	r1, r1, r4
   15f0c:	bls	16144 <close_stdout@@Base+0x3160>
   15f10:	rsb	fp, r0, r1
   15f14:	mov	r1, r8
   15f18:	uxth	r7, r7
   15f1c:	mov	r0, fp
   15f20:	bl	155f8 <close_stdout@@Base+0x2614>
   15f24:	mov	r1, r8
   15f28:	mov	r5, r0
   15f2c:	mov	r0, fp
   15f30:	bl	157e4 <close_stdout@@Base+0x2800>
   15f34:	mul	sl, sl, r5
   15f38:	orr	r1, r7, r1, lsl #16
   15f3c:	cmp	sl, r1
   15f40:	bls	15f5c <close_stdout@@Base+0x2f78>
   15f44:	adds	r4, r1, r4
   15f48:	sub	r3, r5, #1
   15f4c:	bcs	1614c <close_stdout@@Base+0x3168>
   15f50:	cmp	sl, r4
   15f54:	subhi	r5, r5, #2
   15f58:	bls	1614c <close_stdout@@Base+0x3168>
   15f5c:	orr	r0, r5, r9, lsl #16
   15f60:	mov	r1, r6
   15f64:	add	sp, sp, #12
   15f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15f6c:	rsb	r1, r7, #32
   15f70:	lsl	r0, r2, r7
   15f74:	lsr	r2, r2, r1
   15f78:	lsr	fp, r5, r1
   15f7c:	orr	r8, r2, r3, lsl r7
   15f80:	lsr	r1, r6, r1
   15f84:	str	r0, [sp, #4]
   15f88:	orr	r5, r1, r5, lsl r7
   15f8c:	lsr	r9, r8, #16
   15f90:	mov	r0, fp
   15f94:	uxth	sl, r8
   15f98:	mov	r1, r9
   15f9c:	bl	155f8 <close_stdout@@Base+0x2614>
   15fa0:	mov	r1, r9
   15fa4:	mov	r4, r0
   15fa8:	mov	r0, fp
   15fac:	bl	157e4 <close_stdout@@Base+0x2800>
   15fb0:	mul	r0, sl, r4
   15fb4:	lsr	ip, r5, #16
   15fb8:	orr	r1, ip, r1, lsl #16
   15fbc:	cmp	r0, r1
   15fc0:	bls	15fd4 <close_stdout@@Base+0x2ff0>
   15fc4:	adds	r1, r1, r8
   15fc8:	sub	r2, r4, #1
   15fcc:	bcc	16168 <close_stdout@@Base+0x3184>
   15fd0:	mov	r4, r2
   15fd4:	rsb	ip, r0, r1
   15fd8:	mov	r1, r9
   15fdc:	str	ip, [sp]
   15fe0:	uxth	r5, r5
   15fe4:	mov	r0, ip
   15fe8:	bl	155f8 <close_stdout@@Base+0x2614>
   15fec:	ldr	ip, [sp]
   15ff0:	mov	r1, r9
   15ff4:	mov	fp, r0
   15ff8:	mov	r0, ip
   15ffc:	bl	157e4 <close_stdout@@Base+0x2800>
   16000:	mul	sl, sl, fp
   16004:	orr	r1, r5, r1, lsl #16
   16008:	cmp	sl, r1
   1600c:	bls	16020 <close_stdout@@Base+0x303c>
   16010:	adds	r1, r1, r8
   16014:	sub	r2, fp, #1
   16018:	bcc	16154 <close_stdout@@Base+0x3170>
   1601c:	mov	fp, r2
   16020:	ldr	r3, [sp, #4]
   16024:	orr	r0, fp, r4, lsl #16
   16028:	rsb	sl, sl, r1
   1602c:	umull	r4, r5, r0, r3
   16030:	cmp	sl, r5
   16034:	bcc	16054 <close_stdout@@Base+0x3070>
   16038:	movne	r3, #0
   1603c:	moveq	r3, #1
   16040:	cmp	r4, r6, lsl r7
   16044:	movls	r6, #0
   16048:	andhi	r6, r3, #1
   1604c:	cmp	r6, #0
   16050:	beq	15e48 <close_stdout@@Base+0x2e64>
   16054:	mov	r6, #0
   16058:	sub	r0, r0, #1
   1605c:	mov	r1, r6
   16060:	add	sp, sp, #12
   16064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16068:	lsl	r4, r4, r3
   1606c:	rsb	r9, r3, #32
   16070:	lsr	r2, r5, r9
   16074:	lsr	r9, r6, r9
   16078:	lsr	r8, r4, #16
   1607c:	orr	r9, r9, r5, lsl r3
   16080:	mov	r0, r2
   16084:	lsl	r7, r6, r3
   16088:	mov	r1, r8
   1608c:	str	r2, [sp]
   16090:	bl	155f8 <close_stdout@@Base+0x2614>
   16094:	ldr	r2, [sp]
   16098:	mov	r1, r8
   1609c:	uxth	sl, r4
   160a0:	mov	fp, r0
   160a4:	mov	r0, r2
   160a8:	bl	157e4 <close_stdout@@Base+0x2800>
   160ac:	mul	r0, sl, fp
   160b0:	lsr	r3, r9, #16
   160b4:	orr	r1, r3, r1, lsl #16
   160b8:	cmp	r0, r1
   160bc:	bls	160dc <close_stdout@@Base+0x30f8>
   160c0:	adds	r1, r1, r4
   160c4:	sub	r3, fp, #1
   160c8:	bcs	1617c <close_stdout@@Base+0x3198>
   160cc:	cmp	r0, r1
   160d0:	subhi	fp, fp, #2
   160d4:	addhi	r1, r1, r4
   160d8:	bls	1617c <close_stdout@@Base+0x3198>
   160dc:	rsb	r5, r0, r1
   160e0:	mov	r1, r8
   160e4:	uxth	r9, r9
   160e8:	mov	r0, r5
   160ec:	bl	155f8 <close_stdout@@Base+0x2614>
   160f0:	mov	r1, r8
   160f4:	mov	r6, r0
   160f8:	mov	r0, r5
   160fc:	bl	157e4 <close_stdout@@Base+0x2800>
   16100:	mul	r5, sl, r6
   16104:	orr	r1, r9, r1, lsl #16
   16108:	cmp	r5, r1
   1610c:	bls	16130 <close_stdout@@Base+0x314c>
   16110:	adds	r1, r1, r4
   16114:	sub	r3, r6, #1
   16118:	bcs	1612c <close_stdout@@Base+0x3148>
   1611c:	cmp	r5, r1
   16120:	subhi	r6, r6, #2
   16124:	addhi	r1, r1, r4
   16128:	bhi	16130 <close_stdout@@Base+0x314c>
   1612c:	mov	r6, r3
   16130:	rsb	r5, r5, r1
   16134:	orr	r6, r6, fp, lsl #16
   16138:	b	15ec4 <close_stdout@@Base+0x2ee0>
   1613c:	mov	r6, r3
   16140:	b	15e40 <close_stdout@@Base+0x2e5c>
   16144:	mov	r9, r2
   16148:	b	15f10 <close_stdout@@Base+0x2f2c>
   1614c:	mov	r5, r3
   16150:	b	15f5c <close_stdout@@Base+0x2f78>
   16154:	cmp	sl, r1
   16158:	subhi	fp, fp, #2
   1615c:	addhi	r1, r1, r8
   16160:	bhi	16020 <close_stdout@@Base+0x303c>
   16164:	b	1601c <close_stdout@@Base+0x3038>
   16168:	cmp	r0, r1
   1616c:	subhi	r4, r4, #2
   16170:	addhi	r1, r1, r8
   16174:	bhi	15fd4 <close_stdout@@Base+0x2ff0>
   16178:	b	15fd0 <close_stdout@@Base+0x2fec>
   1617c:	mov	fp, r3
   16180:	b	160dc <close_stdout@@Base+0x30f8>
   16184:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   16188:	mov	r7, r0
   1618c:	ldr	r6, [pc, #76]	; 161e0 <close_stdout@@Base+0x31fc>
   16190:	mov	r8, r1
   16194:	ldr	r5, [pc, #72]	; 161e4 <close_stdout@@Base+0x3200>
   16198:	mov	r9, r2
   1619c:	add	r6, pc, r6
   161a0:	bl	10ecc <fdopen@plt-0x20>
   161a4:	add	r5, pc, r5
   161a8:	rsb	r6, r5, r6
   161ac:	asrs	r6, r6, #2
   161b0:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   161b4:	sub	r5, r5, #4
   161b8:	mov	r4, #0
   161bc:	add	r4, r4, #1
   161c0:	ldr	r3, [r5, #4]!
   161c4:	mov	r0, r7
   161c8:	mov	r1, r8
   161cc:	mov	r2, r9
   161d0:	blx	r3
   161d4:	cmp	r4, r6
   161d8:	bne	161bc <close_stdout@@Base+0x31d8>
   161dc:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   161e0:	andeq	r1, r1, r8, lsr sp
   161e4:	andeq	r1, r1, ip, lsr #26
   161e8:	bx	lr
   161ec:	ldr	r3, [pc, #28]	; 16210 <close_stdout@@Base+0x322c>
   161f0:	mov	r1, #0
   161f4:	ldr	r2, [pc, #24]	; 16214 <close_stdout@@Base+0x3230>
   161f8:	add	r3, pc, r3
   161fc:	ldr	r3, [r3, r2]
   16200:	cmp	r3, #0
   16204:	ldrne	r2, [r3]
   16208:	moveq	r2, r3
   1620c:	b	110b4 <__cxa_atexit@plt>
   16210:	andeq	r1, r1, r0, lsl #28
   16214:	andeq	r0, r0, ip, lsl #2

Disassembly of section .fini:

00016218 <.fini>:
   16218:	push	{r3, lr}
   1621c:	pop	{r3, pc}
