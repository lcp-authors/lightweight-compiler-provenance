
centos-preinstalled/sg_reset:     file format elf32-littlearm


Disassembly of section .init:

00010650 <.init>:
   10650:	push	{r3, lr}
   10654:	bl	10e1c <close@plt+0x704>
   10658:	pop	{r3, pc}

Disassembly of section .plt:

0001065c <__stack_chk_fail@plt-0x14>:
   1065c:	push	{lr}		; (str lr, [sp, #-4]!)
   10660:	ldr	lr, [pc, #4]	; 1066c <__stack_chk_fail@plt-0x4>
   10664:	add	lr, pc, lr
   10668:	ldr	pc, [lr, #8]!
   1066c:	muleq	r1, r4, r9

00010670 <__stack_chk_fail@plt>:
   10670:	add	ip, pc, #0, 12
   10674:	add	ip, ip, #69632	; 0x11000
   10678:	ldr	pc, [ip, #2452]!	; 0x994

0001067c <perror@plt>:
   1067c:	add	ip, pc, #0, 12
   10680:	add	ip, ip, #69632	; 0x11000
   10684:	ldr	pc, [ip, #2444]!	; 0x98c

00010688 <fwrite@plt>:
   10688:	add	ip, pc, #0, 12
   1068c:	add	ip, ip, #69632	; 0x11000
   10690:	ldr	pc, [ip, #2436]!	; 0x984

00010694 <ioctl@plt>:
   10694:	add	ip, pc, #0, 12
   10698:	add	ip, ip, #69632	; 0x11000
   1069c:	ldr	pc, [ip, #2428]!	; 0x97c

000106a0 <open64@plt>:
   106a0:	add	ip, pc, #0, 12
   106a4:	add	ip, ip, #69632	; 0x11000
   106a8:	ldr	pc, [ip, #2420]!	; 0x974

000106ac <getenv@plt>:
   106ac:	add	ip, pc, #0, 12
   106b0:	add	ip, ip, #69632	; 0x11000
   106b4:	ldr	pc, [ip, #2412]!	; 0x96c

000106b8 <puts@plt>:
   106b8:	add	ip, pc, #0, 12
   106bc:	add	ip, ip, #69632	; 0x11000
   106c0:	ldr	pc, [ip, #2404]!	; 0x964

000106c4 <__libc_start_main@plt>:
   106c4:	add	ip, pc, #0, 12
   106c8:	add	ip, ip, #69632	; 0x11000
   106cc:	ldr	pc, [ip, #2396]!	; 0x95c

000106d0 <__gmon_start__@plt>:
   106d0:	add	ip, pc, #0, 12
   106d4:	add	ip, ip, #69632	; 0x11000
   106d8:	ldr	pc, [ip, #2388]!	; 0x954

000106dc <getopt_long@plt>:
   106dc:	add	ip, pc, #0, 12
   106e0:	add	ip, ip, #69632	; 0x11000
   106e4:	ldr	pc, [ip, #2380]!	; 0x94c

000106e8 <__errno_location@plt>:
   106e8:	add	ip, pc, #0, 12
   106ec:	add	ip, ip, #69632	; 0x11000
   106f0:	ldr	pc, [ip, #2372]!	; 0x944

000106f4 <__printf_chk@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2364]!	; 0x93c

00010700 <__fprintf_chk@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2356]!	; 0x934

0001070c <abort@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2348]!	; 0x92c

00010718 <close@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2340]!	; 0x924

Disassembly of section .text:

00010724 <.text>:
   10724:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10728:	movw	r4, #8432	; 0x20f0
   1072c:	movt	r4, #2
   10730:	sub	sp, sp, #44	; 0x2c
   10734:	mov	r5, r0
   10738:	movw	r0, #5404	; 0x151c
   1073c:	ldr	r3, [r4]
   10740:	movt	r0, #1
   10744:	mov	r6, r1
   10748:	str	r3, [sp, #36]	; 0x24
   1074c:	bl	106ac <getenv@plt>
   10750:	subs	sl, r0, #0
   10754:	beq	10960 <close@plt+0x248>
   10758:	mov	fp, #0
   1075c:	add	r7, sp, #32
   10760:	mov	r9, fp
   10764:	mov	r8, fp
   10768:	str	fp, [sp, #24]
   1076c:	str	fp, [sp, #28]
   10770:	str	fp, [sp, #20]
   10774:	str	fp, [sp, #16]
   10778:	str	r7, [sp]
   1077c:	movw	r2, #5444	; 0x1544
   10780:	movw	r3, #8272	; 0x2050
   10784:	movt	r2, #1
   10788:	movt	r3, #2
   1078c:	mov	r0, r5
   10790:	mov	r1, r6
   10794:	str	r8, [sp, #32]
   10798:	bl	106dc <getopt_long@plt>
   1079c:	cmn	r0, #1
   107a0:	beq	10974 <close@plt+0x25c>
   107a4:	sub	r3, r0, #72	; 0x48
   107a8:	cmp	r3, #50	; 0x32
   107ac:	ldrls	pc, [pc, r3, lsl #2]
   107b0:	b	1092c <close@plt+0x214>
   107b4:	andeq	r0, r1, r8, lsl #17
   107b8:	andeq	r0, r1, ip, lsr #18
   107bc:	andeq	r0, r1, ip, lsr #18
   107c0:	andeq	r0, r1, ip, lsr #18
   107c4:	andeq	r0, r1, ip, lsr #18
   107c8:	andeq	r0, r1, ip, lsr #18
   107cc:	andeq	r0, r1, ip, lsl r9
   107d0:	andeq	r0, r1, ip, lsr #18
   107d4:	andeq	r0, r1, ip, lsr #18
   107d8:	andeq	r0, r1, ip, lsr #18
   107dc:	andeq	r0, r1, ip, lsr #18
   107e0:	andeq	r0, r1, ip, lsr #18
   107e4:	andeq	r0, r1, ip, lsr #18
   107e8:	andeq	r0, r1, ip, lsr #18
   107ec:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   107f0:	andeq	r0, r1, ip, lsr #18
   107f4:	andeq	r0, r1, ip, lsr #18
   107f8:	andeq	r0, r1, ip, lsr #18
   107fc:	andeq	r0, r1, ip, lsr #18
   10800:	andeq	r0, r1, ip, lsr #18
   10804:	andeq	r0, r1, ip, lsr #18
   10808:	andeq	r0, r1, ip, lsr #18
   1080c:	andeq	r0, r1, ip, lsr #18
   10810:	andeq	r0, r1, ip, lsr #18
   10814:	andeq	r0, r1, ip, lsr #18
   10818:	andeq	r0, r1, ip, lsr #18
   1081c:	andeq	r0, r1, r0, ror #17
   10820:	andeq	r0, r1, ip, lsr #18
   10824:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10828:	andeq	r0, r1, ip, lsr #18
   1082c:	andeq	r0, r1, ip, lsr #18
   10830:	andeq	r0, r1, ip, lsr #18
   10834:	andeq	r0, r1, r0, lsl #17
   10838:	andeq	r0, r1, ip, lsr #18
   1083c:	andeq	r0, r1, ip, lsr #18
   10840:	andeq	r0, r1, ip, lsr #18
   10844:	andeq	r0, r1, ip, lsr #18
   10848:	andeq	r0, r1, ip, lsr #18
   1084c:	andeq	r0, r1, ip, lsr #18
   10850:	andeq	r0, r1, ip, lsr #18
   10854:	andeq	r0, r1, ip, lsr #18
   10858:	andeq	r0, r1, ip, lsr #18
   1085c:	andeq	r0, r1, ip, lsr #18
   10860:	andeq	r0, r1, ip, lsr #18
   10864:	andeq	r0, r1, r0, asr #17
   10868:	andeq	r0, r1, ip, lsr #18
   1086c:			; <UNDEFINED> instruction: 0x000108b8
   10870:	andeq	r0, r1, ip, lsr #18
   10874:	andeq	r0, r1, ip, lsr #18
   10878:	andeq	r0, r1, ip, lsr #18
   1087c:	muleq	r1, r0, r8
   10880:	cmp	sl, #0
   10884:	beq	10a0c <close@plt+0x2f4>
   10888:	add	r9, r9, #1
   1088c:	b	10778 <close@plt+0x60>
   10890:	adds	r0, sl, #0
   10894:	movne	r0, #1
   10898:	bl	10f14 <close@plt+0x7fc>
   1089c:	mov	r0, #0
   108a0:	ldr	r2, [sp, #36]	; 0x24
   108a4:	ldr	r3, [r4]
   108a8:	cmp	r2, r3
   108ac:	bne	10ca0 <close@plt+0x588>
   108b0:	add	sp, sp, #44	; 0x2c
   108b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   108b8:	add	fp, fp, #1
   108bc:	b	10778 <close@plt+0x60>
   108c0:	ldr	r3, [sp, #24]
   108c4:	add	r3, r3, #1
   108c8:	str	r3, [sp, #24]
   108cc:	b	10778 <close@plt+0x60>
   108d0:	ldr	r3, [sp, #16]
   108d4:	add	r3, r3, #1
   108d8:	str	r3, [sp, #16]
   108dc:	b	10778 <close@plt+0x60>
   108e0:	ldr	r1, [sp, #20]
   108e4:	add	r1, r1, #1
   108e8:	str	r1, [sp, #20]
   108ec:	b	10778 <close@plt+0x60>
   108f0:	movw	r1, #8444	; 0x20fc
   108f4:	movt	r1, #2
   108f8:	movw	r2, #5456	; 0x1550
   108fc:	movw	r3, #5480	; 0x1568
   10900:	ldr	r0, [r1]
   10904:	movt	r2, #1
   10908:	movt	r3, #1
   1090c:	mov	r1, #1
   10910:	bl	10700 <__fprintf_chk@plt>
   10914:	mov	r0, #0
   10918:	b	108a0 <close@plt+0x188>
   1091c:	ldr	r1, [sp, #28]
   10920:	add	r1, r1, #1
   10924:	str	r1, [sp, #28]
   10928:	b	10778 <close@plt+0x60>
   1092c:	movw	r1, #8444	; 0x20fc
   10930:	movt	r1, #2
   10934:	mov	r3, r0
   10938:	movw	r2, #5496	; 0x1578
   1093c:	ldr	r0, [r1]
   10940:	movt	r2, #1
   10944:	mov	r1, #1
   10948:	bl	10700 <__fprintf_chk@plt>
   1094c:	adds	r0, sl, #0
   10950:	movne	r0, #1
   10954:	bl	10f14 <close@plt+0x7fc>
   10958:	mov	r0, #1
   1095c:	b	108a0 <close@plt+0x188>
   10960:	movw	r0, #5424	; 0x1530
   10964:	movt	r0, #1
   10968:	bl	106ac <getenv@plt>
   1096c:	mov	sl, r0
   10970:	b	10758 <close@plt+0x40>
   10974:	movw	r8, #8440	; 0x20f8
   10978:	movt	r8, #2
   1097c:	ldr	r2, [r8]
   10980:	cmp	r5, r2
   10984:	ble	109e4 <close@plt+0x2cc>
   10988:	add	r3, r2, #1
   1098c:	ldr	r2, [r6, r2, lsl #2]
   10990:	cmp	r5, r3
   10994:	str	r3, [r8]
   10998:	ble	10a1c <close@plt+0x304>
   1099c:	movw	r7, #8444	; 0x20fc
   109a0:	movt	r7, #2
   109a4:	ldr	r3, [r6, r3, lsl #2]
   109a8:	movw	r2, #5584	; 0x15d0
   109ac:	ldr	r0, [r7]
   109b0:	movt	r2, #1
   109b4:	mov	r1, #1
   109b8:	bl	10700 <__fprintf_chk@plt>
   109bc:	ldr	r3, [r8]
   109c0:	add	r3, r3, #1
   109c4:	str	r3, [r8]
   109c8:	cmp	r5, r3
   109cc:	bgt	109a4 <close@plt+0x28c>
   109d0:	adds	r0, sl, #0
   109d4:	movne	r0, #1
   109d8:	bl	10f14 <close@plt+0x7fc>
   109dc:	mov	r0, #1
   109e0:	b	108a0 <close@plt+0x188>
   109e4:	movw	r3, #8444	; 0x20fc
   109e8:	movt	r3, #2
   109ec:	movw	r0, #5532	; 0x159c
   109f0:	mov	r1, #1
   109f4:	ldr	r3, [r3]
   109f8:	movt	r0, #1
   109fc:	mov	r2, #48	; 0x30
   10a00:	bl	10688 <fwrite@plt>
   10a04:	mov	r0, #1
   10a08:	b	108a0 <close@plt+0x188>
   10a0c:	mov	r0, sl
   10a10:	bl	10f14 <close@plt+0x7fc>
   10a14:	mov	r0, sl
   10a18:	b	108a0 <close@plt+0x188>
   10a1c:	cmp	r2, #0
   10a20:	beq	109e4 <close@plt+0x2cc>
   10a24:	ldr	r1, [sp, #16]
   10a28:	ldr	r3, [sp, #24]
   10a2c:	adds	ip, r1, #0
   10a30:	ldr	r1, [sp, #20]
   10a34:	movne	ip, #1
   10a38:	adds	r5, r3, #0
   10a3c:	movne	r5, #1
   10a40:	adds	r8, r1, #0
   10a44:	add	r3, ip, r5
   10a48:	movne	r8, #1
   10a4c:	adds	r9, r9, #0
   10a50:	add	r3, r3, r8
   10a54:	movne	r9, #1
   10a58:	rsbs	r1, fp, #1
   10a5c:	add	r3, r3, r9
   10a60:	movcc	r1, #0
   10a64:	cmp	sl, #0
   10a68:	moveq	r1, #0
   10a6c:	cmp	r1, #0
   10a70:	movne	fp, #1
   10a74:	cmp	r3, #1
   10a78:	ble	10aa4 <close@plt+0x38c>
   10a7c:	movw	r3, #8444	; 0x20fc
   10a80:	movt	r3, #2
   10a84:	movw	r0, #5616	; 0x15f0
   10a88:	mov	r1, #1
   10a8c:	ldr	r3, [r3]
   10a90:	movt	r0, #1
   10a94:	mov	r2, #50	; 0x32
   10a98:	bl	10688 <fwrite@plt>
   10a9c:	mov	r0, #1
   10aa0:	b	108a0 <close@plt+0x188>
   10aa4:	mov	r0, r2
   10aa8:	movw	r1, #2050	; 0x802
   10aac:	str	r2, [sp, #12]
   10ab0:	str	ip, [sp, #8]
   10ab4:	bl	106a0 <open64@plt>
   10ab8:	ldr	r2, [sp, #12]
   10abc:	ldr	ip, [sp, #8]
   10ac0:	subs	r6, r0, #0
   10ac4:	blt	10c5c <close@plt+0x544>
   10ac8:	cmp	ip, #0
   10acc:	mov	r3, #0
   10ad0:	str	r3, [sp, #32]
   10ad4:	beq	10b9c <close@plt+0x484>
   10ad8:	cmp	fp, r3
   10adc:	bne	10be0 <close@plt+0x4c8>
   10ae0:	mov	r3, #1
   10ae4:	str	r3, [sp, #32]
   10ae8:	ldr	r3, [sp, #28]
   10aec:	cmp	r3, #0
   10af0:	bne	10b68 <close@plt+0x450>
   10af4:	mov	r2, r7
   10af8:	mov	r0, r6
   10afc:	movw	r1, #8836	; 0x2284
   10b00:	bl	10694 <ioctl@plt>
   10b04:	cmp	r0, #0
   10b08:	blt	10c18 <close@plt+0x500>
   10b0c:	cmp	fp, #0
   10b10:	beq	10b40 <close@plt+0x428>
   10b14:	ldr	r0, [sp, #32]
   10b18:	cmp	r0, #0
   10b1c:	beq	10c90 <close@plt+0x578>
   10b20:	cmp	r0, #1
   10b24:	beq	10cb4 <close@plt+0x59c>
   10b28:	cmp	r0, #4
   10b2c:	beq	10ce0 <close@plt+0x5c8>
   10b30:	cmp	r0, #2
   10b34:	beq	10d10 <close@plt+0x5f8>
   10b38:	cmp	r0, #3
   10b3c:	beq	10dac <close@plt+0x694>
   10b40:	mov	r0, r6
   10b44:	bl	10718 <close@plt>
   10b48:	cmp	r0, #0
   10b4c:	movge	r0, #0
   10b50:	bge	108a0 <close@plt+0x188>
   10b54:	movw	r0, #6256	; 0x1870
   10b58:	movt	r0, #1
   10b5c:	bl	1067c <perror@plt>
   10b60:	mov	r0, #1
   10b64:	b	108a0 <close@plt+0x188>
   10b68:	ldr	r3, [sp, #32]
   10b6c:	mov	r2, r7
   10b70:	mov	r0, r6
   10b74:	movw	r1, #8836	; 0x2284
   10b78:	add	r3, r3, #256	; 0x100
   10b7c:	str	r3, [sp, #32]
   10b80:	bl	10694 <ioctl@plt>
   10b84:	cmp	r0, #0
   10b88:	blt	10c18 <close@plt+0x500>
   10b8c:	ldr	r3, [sp, #32]
   10b90:	sub	r3, r3, #256	; 0x100
   10b94:	str	r3, [sp, #32]
   10b98:	b	10b0c <close@plt+0x3f4>
   10b9c:	cmp	r5, #0
   10ba0:	beq	10bb8 <close@plt+0x4a0>
   10ba4:	cmp	fp, #0
   10ba8:	bne	10ca4 <close@plt+0x58c>
   10bac:	mov	r3, #4
   10bb0:	str	r3, [sp, #32]
   10bb4:	b	10ae8 <close@plt+0x3d0>
   10bb8:	cmp	r8, #0
   10bbc:	beq	10bf0 <close@plt+0x4d8>
   10bc0:	cmp	fp, #0
   10bc4:	beq	10bd4 <close@plt+0x4bc>
   10bc8:	movw	r0, #5760	; 0x1680
   10bcc:	movt	r0, #1
   10bd0:	bl	106b8 <puts@plt>
   10bd4:	mov	r3, #2
   10bd8:	str	r3, [sp, #32]
   10bdc:	b	10ae8 <close@plt+0x3d0>
   10be0:	movw	r0, #5696	; 0x1640
   10be4:	movt	r0, #1
   10be8:	bl	106b8 <puts@plt>
   10bec:	b	10ae0 <close@plt+0x3c8>
   10bf0:	cmp	r9, #0
   10bf4:	beq	10ae8 <close@plt+0x3d0>
   10bf8:	cmp	fp, #0
   10bfc:	beq	10c0c <close@plt+0x4f4>
   10c00:	movw	r0, #5792	; 0x16a0
   10c04:	movt	r0, #1
   10c08:	bl	106b8 <puts@plt>
   10c0c:	mov	r3, #3
   10c10:	str	r3, [sp, #32]
   10c14:	b	10ae8 <close@plt+0x3d0>
   10c18:	bl	106e8 <__errno_location@plt>
   10c1c:	ldr	r3, [r0]
   10c20:	cmp	r3, #16
   10c24:	beq	10d88 <close@plt+0x670>
   10c28:	cmp	r3, #5
   10c2c:	beq	10d64 <close@plt+0x64c>
   10c30:	cmp	r3, #13
   10c34:	beq	10dbc <close@plt+0x6a4>
   10c38:	cmp	r3, #22
   10c3c:	beq	10d40 <close@plt+0x628>
   10c40:	movw	r0, #6036	; 0x1794
   10c44:	movt	r0, #1
   10c48:	bl	1067c <perror@plt>
   10c4c:	mov	r0, r6
   10c50:	bl	10718 <close@plt>
   10c54:	mov	r0, #1
   10c58:	b	108a0 <close@plt+0x188>
   10c5c:	movw	r1, #8444	; 0x20fc
   10c60:	movt	r1, #2
   10c64:	mov	r3, r2
   10c68:	movw	r2, #5668	; 0x1624
   10c6c:	ldr	r0, [r1]
   10c70:	movt	r2, #1
   10c74:	mov	r1, #1
   10c78:	bl	10700 <__fprintf_chk@plt>
   10c7c:	movw	r0, #5580	; 0x15cc
   10c80:	movt	r0, #1
   10c84:	bl	1067c <perror@plt>
   10c88:	mov	r0, #1
   10c8c:	b	108a0 <close@plt+0x188>
   10c90:	movw	r0, #6068	; 0x17b4
   10c94:	movt	r0, #1
   10c98:	bl	106b8 <puts@plt>
   10c9c:	b	10b40 <close@plt+0x428>
   10ca0:	bl	10670 <__stack_chk_fail@plt>
   10ca4:	movw	r0, #5728	; 0x1660
   10ca8:	movt	r0, #1
   10cac:	bl	106b8 <puts@plt>
   10cb0:	b	10bac <close@plt+0x494>
   10cb4:	ldr	r1, [sp, #28]
   10cb8:	movw	r3, #5580	; 0x15cc
   10cbc:	movt	r3, #1
   10cc0:	movw	r2, #5344	; 0x14e0
   10cc4:	cmp	r1, #0
   10cc8:	movt	r2, #1
   10ccc:	movw	r1, #6116	; 0x17e4
   10cd0:	movt	r1, #1
   10cd4:	movne	r2, r3
   10cd8:	bl	106f4 <__printf_chk@plt>
   10cdc:	b	10b40 <close@plt+0x428>
   10ce0:	ldr	r1, [sp, #28]
   10ce4:	movw	r3, #5580	; 0x15cc
   10ce8:	movt	r3, #1
   10cec:	movw	r2, #5372	; 0x14fc
   10cf0:	cmp	r1, #0
   10cf4:	movt	r2, #1
   10cf8:	movw	r1, #6152	; 0x1808
   10cfc:	mov	r0, #1
   10d00:	movne	r2, r3
   10d04:	movt	r1, #1
   10d08:	bl	106f4 <__printf_chk@plt>
   10d0c:	b	10b40 <close@plt+0x428>
   10d10:	ldr	r1, [sp, #28]
   10d14:	movw	r3, #5580	; 0x15cc
   10d18:	movt	r3, #1
   10d1c:	movw	r2, #5392	; 0x1510
   10d20:	cmp	r1, #0
   10d24:	movt	r2, #1
   10d28:	movw	r1, #6188	; 0x182c
   10d2c:	mov	r0, #1
   10d30:	movne	r2, r3
   10d34:	movt	r1, #1
   10d38:	bl	106f4 <__printf_chk@plt>
   10d3c:	b	10b40 <close@plt+0x428>
   10d40:	movw	r3, #8444	; 0x20fc
   10d44:	movt	r3, #2
   10d48:	movw	r2, #5980	; 0x175c
   10d4c:	mov	r1, #1
   10d50:	ldr	r0, [r3]
   10d54:	movt	r2, #1
   10d58:	ldr	r3, [sp, #32]
   10d5c:	bl	10700 <__fprintf_chk@plt>
   10d60:	b	10c4c <close@plt+0x534>
   10d64:	movw	r3, #8444	; 0x20fc
   10d68:	movt	r3, #2
   10d6c:	movw	r2, #5864	; 0x16e8
   10d70:	mov	r1, #1
   10d74:	ldr	r0, [r3]
   10d78:	movt	r2, #1
   10d7c:	ldr	r3, [sp, #32]
   10d80:	bl	10700 <__fprintf_chk@plt>
   10d84:	b	10c4c <close@plt+0x534>
   10d88:	movw	r3, #8444	; 0x20fc
   10d8c:	movt	r3, #2
   10d90:	movw	r0, #5824	; 0x16c0
   10d94:	mov	r1, #1
   10d98:	ldr	r3, [r3]
   10d9c:	mov	r2, #37	; 0x25
   10da0:	movt	r0, #1
   10da4:	bl	10688 <fwrite@plt>
   10da8:	b	10c4c <close@plt+0x534>
   10dac:	movw	r0, #6224	; 0x1850
   10db0:	movt	r0, #1
   10db4:	bl	106b8 <puts@plt>
   10db8:	b	10b40 <close@plt+0x428>
   10dbc:	movw	r3, #8444	; 0x20fc
   10dc0:	movt	r3, #2
   10dc4:	movw	r0, #5920	; 0x1720
   10dc8:	mov	r1, #1
   10dcc:	ldr	r3, [r3]
   10dd0:	mov	r2, #57	; 0x39
   10dd4:	movt	r0, #1
   10dd8:	bl	10688 <fwrite@plt>
   10ddc:	b	10c4c <close@plt+0x534>
   10de0:	mov	fp, #0
   10de4:	mov	lr, #0
   10de8:	pop	{r1}		; (ldr r1, [sp], #4)
   10dec:	mov	r2, sp
   10df0:	push	{r2}		; (str r2, [sp, #-4]!)
   10df4:	push	{r0}		; (str r0, [sp, #-4]!)
   10df8:	ldr	ip, [pc, #16]	; 10e10 <close@plt+0x6f8>
   10dfc:	push	{ip}		; (str ip, [sp, #-4]!)
   10e00:	ldr	r0, [pc, #12]	; 10e14 <close@plt+0x6fc>
   10e04:	ldr	r3, [pc, #12]	; 10e18 <close@plt+0x700>
   10e08:	bl	106c4 <__libc_start_main@plt>
   10e0c:	bl	1070c <abort@plt>
   10e10:	andeq	r0, r1, r4, ror #31
   10e14:	andeq	r0, r1, r4, lsr #14
   10e18:	andeq	r0, r1, r0, lsl #31
   10e1c:	ldr	r3, [pc, #20]	; 10e38 <close@plt+0x720>
   10e20:	ldr	r2, [pc, #20]	; 10e3c <close@plt+0x724>
   10e24:	add	r3, pc, r3
   10e28:	ldr	r2, [r3, r2]
   10e2c:	cmp	r2, #0
   10e30:	bxeq	lr
   10e34:	b	106d0 <__gmon_start__@plt>
   10e38:	ldrdeq	r1, [r1], -r4
   10e3c:	andeq	r0, r0, r8, asr #32
   10e40:	push	{r3, lr}
   10e44:	movw	r0, #8432	; 0x20f0
   10e48:	ldr	r3, [pc, #36]	; 10e74 <close@plt+0x75c>
   10e4c:	movt	r0, #2
   10e50:	rsb	r3, r0, r3
   10e54:	cmp	r3, #6
   10e58:	popls	{r3, pc}
   10e5c:	movw	r3, #0
   10e60:	movt	r3, #0
   10e64:	cmp	r3, #0
   10e68:	popeq	{r3, pc}
   10e6c:	blx	r3
   10e70:	pop	{r3, pc}
   10e74:	strdeq	r2, [r2], -r3
   10e78:	push	{r3, lr}
   10e7c:	movw	r0, #8432	; 0x20f0
   10e80:	movw	r3, #8432	; 0x20f0
   10e84:	movt	r0, #2
   10e88:	movt	r3, #2
   10e8c:	rsb	r3, r0, r3
   10e90:	asr	r3, r3, #2
   10e94:	add	r3, r3, r3, lsr #31
   10e98:	asrs	r1, r3, #1
   10e9c:	popeq	{r3, pc}
   10ea0:	movw	r2, #0
   10ea4:	movt	r2, #0
   10ea8:	cmp	r2, #0
   10eac:	popeq	{r3, pc}
   10eb0:	blx	r2
   10eb4:	pop	{r3, pc}
   10eb8:	push	{r4, lr}
   10ebc:	movw	r4, #8448	; 0x2100
   10ec0:	movt	r4, #2
   10ec4:	ldrb	r3, [r4]
   10ec8:	cmp	r3, #0
   10ecc:	popne	{r4, pc}
   10ed0:	bl	10e40 <close@plt+0x728>
   10ed4:	mov	r3, #1
   10ed8:	strb	r3, [r4]
   10edc:	pop	{r4, pc}
   10ee0:	movw	r0, #7940	; 0x1f04
   10ee4:	movt	r0, #2
   10ee8:	push	{r3, lr}
   10eec:	ldr	r3, [r0]
   10ef0:	cmp	r3, #0
   10ef4:	beq	10f0c <close@plt+0x7f4>
   10ef8:	movw	r3, #0
   10efc:	movt	r3, #0
   10f00:	cmp	r3, #0
   10f04:	beq	10f0c <close@plt+0x7f4>
   10f08:	blx	r3
   10f0c:	pop	{r3, lr}
   10f10:	b	10e78 <close@plt+0x760>
   10f14:	push	{r4, r5, r6, lr}
   10f18:	movw	r4, #8444	; 0x20fc
   10f1c:	movt	r4, #2
   10f20:	mov	r1, #1
   10f24:	mov	r5, r0
   10f28:	movw	r2, #266	; 0x10a
   10f2c:	ldr	r3, [r4]
   10f30:	movw	r0, #4088	; 0xff8
   10f34:	movt	r0, #1
   10f38:	bl	10688 <fwrite@plt>
   10f3c:	cmp	r5, #0
   10f40:	ldr	r3, [r4]
   10f44:	mov	r2, #104	; 0x68
   10f48:	movwne	r0, #4356	; 0x1104
   10f4c:	movne	r1, #1
   10f50:	movweq	r0, #4464	; 0x1170
   10f54:	moveq	r1, #1
   10f58:	movtne	r0, #1
   10f5c:	movteq	r0, #1
   10f60:	bl	10688 <fwrite@plt>
   10f64:	ldr	r3, [r4]
   10f68:	movw	r0, #4572	; 0x11dc
   10f6c:	mov	r1, #1
   10f70:	movt	r0, #1
   10f74:	mov	r2, #768	; 0x300
   10f78:	pop	{r4, r5, r6, lr}
   10f7c:	b	10688 <fwrite@plt>
   10f80:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10f84:	mov	r7, r0
   10f88:	ldr	r6, [pc, #76]	; 10fdc <close@plt+0x8c4>
   10f8c:	mov	r8, r1
   10f90:	ldr	r5, [pc, #72]	; 10fe0 <close@plt+0x8c8>
   10f94:	mov	r9, r2
   10f98:	add	r6, pc, r6
   10f9c:	bl	10650 <__stack_chk_fail@plt-0x20>
   10fa0:	add	r5, pc, r5
   10fa4:	rsb	r6, r5, r6
   10fa8:	asrs	r6, r6, #2
   10fac:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10fb0:	sub	r5, r5, #4
   10fb4:	mov	r4, #0
   10fb8:	add	r4, r4, #1
   10fbc:	ldr	r3, [r5, #4]!
   10fc0:	mov	r0, r7
   10fc4:	mov	r1, r8
   10fc8:	mov	r2, r9
   10fcc:	blx	r3
   10fd0:	cmp	r4, r6
   10fd4:	bne	10fb8 <close@plt+0x8a0>
   10fd8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   10fdc:	andeq	r0, r1, r0, ror #30
   10fe0:	andeq	r0, r1, r4, asr pc
   10fe4:	bx	lr

Disassembly of section .fini:

00010fe8 <.fini>:
   10fe8:	push	{r3, lr}
   10fec:	pop	{r3, pc}
