
centos-preinstalled/gen_eth_addr:     file format elf32-littlearm


Disassembly of section .init:

00010414 <.init>:
   10414:	push	{r3, lr}
   10418:	bl	1054c <abort@plt+0xc4>
   1041c:	pop	{r3, pc}

Disassembly of section .plt:

00010420 <time@plt-0x14>:
   10420:	push	{lr}		; (str lr, [sp, #-4]!)
   10424:	ldr	lr, [pc, #4]	; 10430 <time@plt-0x4>
   10428:	add	lr, pc, lr
   1042c:	ldr	pc, [lr, #8]!
   10430:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>

00010434 <time@plt>:
   10434:	add	ip, pc, #0, 12
   10438:	add	ip, ip, #16, 20	; 0x10000
   1043c:	ldr	pc, [ip, #3024]!	; 0xbd0

00010440 <__libc_start_main@plt>:
   10440:	add	ip, pc, #0, 12
   10444:	add	ip, ip, #16, 20	; 0x10000
   10448:	ldr	pc, [ip, #3016]!	; 0xbc8

0001044c <__gmon_start__@plt>:
   1044c:	add	ip, pc, #0, 12
   10450:	add	ip, ip, #16, 20	; 0x10000
   10454:	ldr	pc, [ip, #3008]!	; 0xbc0

00010458 <getpid@plt>:
   10458:	add	ip, pc, #0, 12
   1045c:	add	ip, ip, #16, 20	; 0x10000
   10460:	ldr	pc, [ip, #3000]!	; 0xbb8

00010464 <srand@plt>:
   10464:	add	ip, pc, #0, 12
   10468:	add	ip, ip, #16, 20	; 0x10000
   1046c:	ldr	pc, [ip, #2992]!	; 0xbb0

00010470 <__printf_chk@plt>:
   10470:	add	ip, pc, #0, 12
   10474:	add	ip, ip, #16, 20	; 0x10000
   10478:	ldr	pc, [ip, #2984]!	; 0xba8

0001047c <rand@plt>:
   1047c:	add	ip, pc, #0, 12
   10480:	add	ip, ip, #16, 20	; 0x10000
   10484:	ldr	pc, [ip, #2976]!	; 0xba0

00010488 <abort@plt>:
   10488:	add	ip, pc, #0, 12
   1048c:	add	ip, ip, #16, 20	; 0x10000
   10490:	ldr	pc, [ip, #2968]!	; 0xb98

Disassembly of section .text:

00010494 <.text>:
   10494:	push	{r4, lr}
   10498:	mov	r0, #0
   1049c:	sub	sp, sp, #16
   104a0:	bl	10434 <time@plt>
   104a4:	mov	r4, r0
   104a8:	bl	10458 <getpid@plt>
   104ac:	add	r0, r4, r0, lsl #8
   104b0:	movw	r4, #64767	; 0xfcff
   104b4:	bl	10464 <srand@plt>
   104b8:	bl	1047c <rand@plt>
   104bc:	and	r4, r4, r0
   104c0:	bl	1047c <rand@plt>
   104c4:	orr	r4, r4, #512	; 0x200
   104c8:	uxtb	r3, r4
   104cc:	lsr	r2, r4, #8
   104d0:	mov	r1, r0
   104d4:	mov	r0, #1
   104d8:	ubfx	lr, r1, #16, #8
   104dc:	uxtb	ip, r1
   104e0:	str	lr, [sp, #4]
   104e4:	str	ip, [sp, #12]
   104e8:	ubfx	ip, r1, #8, #8
   104ec:	str	ip, [sp, #8]
   104f0:	lsr	ip, r1, #24
   104f4:	movw	r1, #1656	; 0x678
   104f8:	str	ip, [sp]
   104fc:	movt	r1, #1
   10500:	bl	10470 <__printf_chk@plt>
   10504:	mov	r0, #0
   10508:	add	sp, sp, #16
   1050c:	pop	{r4, pc}
   10510:	mov	fp, #0
   10514:	mov	lr, #0
   10518:	pop	{r1}		; (ldr r1, [sp], #4)
   1051c:	mov	r2, sp
   10520:	push	{r2}		; (str r2, [sp, #-4]!)
   10524:	push	{r0}		; (str r0, [sp, #-4]!)
   10528:	ldr	ip, [pc, #16]	; 10540 <abort@plt+0xb8>
   1052c:	push	{ip}		; (str ip, [sp, #-4]!)
   10530:	ldr	r0, [pc, #12]	; 10544 <abort@plt+0xbc>
   10534:	ldr	r3, [pc, #12]	; 10548 <abort@plt+0xc0>
   10538:	bl	10440 <__libc_start_main@plt>
   1053c:	bl	10488 <abort@plt>
   10540:	andeq	r0, r1, r4, ror #12
   10544:	muleq	r1, r4, r4
   10548:	andeq	r0, r1, r0, lsl #12
   1054c:	ldr	r3, [pc, #20]	; 10568 <abort@plt+0xe0>
   10550:	ldr	r2, [pc, #20]	; 1056c <abort@plt+0xe4>
   10554:	add	r3, pc, r3
   10558:	ldr	r2, [r3, r2]
   1055c:	cmp	r2, #0
   10560:	bxeq	lr
   10564:	b	1044c <__gmon_start__@plt>
   10568:	andeq	r0, r1, r4, lsr #21
   1056c:	andeq	r0, r0, ip, lsr #32
   10570:	movw	r0, #4148	; 0x1034
   10574:	movt	r0, #2
   10578:	movw	r3, #4148	; 0x1034
   1057c:	movt	r3, #2
   10580:	cmp	r3, r0
   10584:	bxeq	lr
   10588:	movw	r3, #0
   1058c:	movt	r3, #0
   10590:	cmp	r3, #0
   10594:	bxeq	lr
   10598:	bx	r3
   1059c:	movw	r0, #4148	; 0x1034
   105a0:	movt	r0, #2
   105a4:	movw	r1, #4148	; 0x1034
   105a8:	movt	r1, #2
   105ac:	sub	r1, r1, r0
   105b0:	asr	r1, r1, #2
   105b4:	add	r1, r1, r1, lsr #31
   105b8:	asrs	r1, r1, #1
   105bc:	bxeq	lr
   105c0:	movw	r3, #0
   105c4:	movt	r3, #0
   105c8:	cmp	r3, #0
   105cc:	bxeq	lr
   105d0:	bx	r3
   105d4:	push	{r4, lr}
   105d8:	movw	r4, #4148	; 0x1034
   105dc:	movt	r4, #2
   105e0:	ldrb	r3, [r4]
   105e4:	cmp	r3, #0
   105e8:	popne	{r4, pc}
   105ec:	bl	10570 <abort@plt+0xe8>
   105f0:	mov	r3, #1
   105f4:	strb	r3, [r4]
   105f8:	pop	{r4, pc}
   105fc:	b	1059c <abort@plt+0x114>
   10600:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   10604:	mov	r7, r0
   10608:	ldr	r6, [pc, #76]	; 1065c <abort@plt+0x1d4>
   1060c:	mov	r8, r1
   10610:	ldr	r5, [pc, #72]	; 10660 <abort@plt+0x1d8>
   10614:	mov	r9, r2
   10618:	add	r6, pc, r6
   1061c:	bl	10414 <time@plt-0x20>
   10620:	add	r5, pc, r5
   10624:	rsb	r6, r5, r6
   10628:	asrs	r6, r6, #2
   1062c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   10630:	sub	r5, r5, #4
   10634:	mov	r4, #0
   10638:	add	r4, r4, #1
   1063c:	ldr	r3, [r5, #4]!
   10640:	mov	r0, r7
   10644:	mov	r1, r8
   10648:	mov	r2, r9
   1064c:	blx	r3
   10650:	cmp	r4, r6
   10654:	bne	10638 <abort@plt+0x1b0>
   10658:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1065c:	andeq	r0, r1, ip, ror #17
   10660:	andeq	r0, r1, r0, ror #17
   10664:	bx	lr

Disassembly of section .fini:

00010668 <.fini>:
   10668:	push	{r3, lr}
   1066c:	pop	{r3, pc}
