
centos-preinstalled/nl-route-add:     file format elf32-littlearm


Disassembly of section .init:

00010ac0 <.init>:
   10ac0:	push	{r3, lr}
   10ac4:	bl	10f58 <exit@plt+0x31c>
   10ac8:	pop	{r3, pc}

Disassembly of section .plt:

00010acc <abort@plt-0x14>:
   10acc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ad0:	ldr	lr, [pc, #4]	; 10adc <abort@plt-0x4>
   10ad4:	add	lr, pc, lr
   10ad8:	ldr	pc, [lr, #8]!
   10adc:	andeq	r1, r1, r4, lsr #10

00010ae0 <abort@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1316]!	; 0x524

00010aec <nl_cli_fatal@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1308]!	; 0x51c

00010af8 <__libc_start_main@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1300]!	; 0x514

00010b04 <__gmon_start__@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1292]!	; 0x50c

00010b10 <nl_cli_route_parse_pref_src@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1284]!	; 0x504

00010b1c <__printf_chk@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b28 <nl_cli_print_version@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b34 <nl_cli_route_parse_family@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b40 <nl_cli_alloc_socket@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b4c <getopt_long@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b58 <nl_cli_route_parse_prio@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b64 <nl_cli_route_parse_scope@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b70 <nl_cli_route_parse_protocol@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b7c <nl_cli_route_parse_nexthop@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b88 <nl_cli_link_alloc_cache@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b94 <__stack_chk_fail@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1196]!	; 0x4ac

00010ba0 <nl_cli_route_parse_type@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1188]!	; 0x4a4

00010bac <nl_cli_route_parse_dst@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1180]!	; 0x49c

00010bb8 <nl_object_dump@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1172]!	; 0x494

00010bc4 <nl_cli_route_parse_metric@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1164]!	; 0x48c

00010bd0 <nl_cli_route_alloc@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1156]!	; 0x484

00010bdc <puts@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1148]!	; 0x47c

00010be8 <nl_cli_route_parse_table@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1140]!	; 0x474

00010bf4 <nl_geterror@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1132]!	; 0x46c

00010c00 <rtnl_route_add@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1124]!	; 0x464

00010c0c <nl_cli_route_parse_iif@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #69632	; 0x11000
   10c14:	ldr	pc, [ip, #1116]!	; 0x45c

00010c18 <nl_cli_connect@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #69632	; 0x11000
   10c20:	ldr	pc, [ip, #1108]!	; 0x454

00010c24 <nl_cli_route_parse_src@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #69632	; 0x11000
   10c2c:	ldr	pc, [ip, #1100]!	; 0x44c

00010c30 <nl_cli_route_alloc_cache@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #69632	; 0x11000
   10c38:	ldr	pc, [ip, #1092]!	; 0x444

00010c3c <exit@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #69632	; 0x11000
   10c44:	ldr	pc, [ip, #1084]!	; 0x43c

Disassembly of section .text:

00010c48 <.text>:
   10c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c4c:	movw	r2, #8592	; 0x2190
   10c50:	sub	sp, sp, #84	; 0x54
   10c54:	movt	r2, #2
   10c58:	movw	r3, #8596	; 0x2194
   10c5c:	movt	r3, #2
   10c60:	str	r2, [sp, #8]
   10c64:	mov	sl, #0
   10c68:	ldr	r2, [r2]
   10c6c:	mov	r6, r1
   10c70:	ldr	r3, [r3]
   10c74:	mov	r7, r0
   10c78:	str	sl, [sp, #24]
   10c7c:	movw	fp, #8608	; 0x21a0
   10c80:	str	r2, [sp, #76]	; 0x4c
   10c84:	movt	fp, #2
   10c88:	str	r3, [sp, #52]	; 0x34
   10c8c:	movw	r9, #8600	; 0x2198
   10c90:	str	sl, [sp, #28]
   10c94:	movt	r9, #2
   10c98:	str	sl, [sp, #32]
   10c9c:	add	r5, sp, #20
   10ca0:	str	sl, [sp, #36]	; 0x24
   10ca4:	mov	r4, sl
   10ca8:	str	sl, [sp, #40]	; 0x28
   10cac:	movw	r8, #258	; 0x102
   10cb0:	str	sl, [sp, #44]	; 0x2c
   10cb4:	str	sl, [sp, #48]	; 0x30
   10cb8:	str	sl, [sp, #56]	; 0x38
   10cbc:	str	sl, [sp, #60]	; 0x3c
   10cc0:	str	sl, [sp, #64]	; 0x40
   10cc4:	str	sl, [sp, #68]	; 0x44
   10cc8:	str	sl, [sp, #72]	; 0x48
   10ccc:	bl	10b40 <nl_cli_alloc_socket@plt>
   10cd0:	mov	r1, sl
   10cd4:	str	r0, [sp, #12]
   10cd8:	bl	10c18 <nl_cli_connect@plt>
   10cdc:	ldr	r0, [sp, #12]
   10ce0:	bl	10b88 <nl_cli_link_alloc_cache@plt>
   10ce4:	mov	r1, sl
   10ce8:	str	r0, [fp]
   10cec:	ldr	r0, [sp, #12]
   10cf0:	bl	10c30 <nl_cli_route_alloc_cache@plt>
   10cf4:	str	r0, [fp, #4]
   10cf8:	bl	10bd0 <nl_cli_route_alloc@plt>
   10cfc:	mov	sl, r0
   10d00:	str	r5, [sp]
   10d04:	movw	r2, #4296	; 0x10c8
   10d08:	movw	r3, #8332	; 0x208c
   10d0c:	movt	r2, #1
   10d10:	movt	r3, #2
   10d14:	mov	r0, r7
   10d18:	mov	r1, r6
   10d1c:	str	r4, [sp, #20]
   10d20:	bl	10b4c <getopt_long@plt>
   10d24:	cmn	r0, #1
   10d28:	beq	10e9c <exit@plt+0x260>
   10d2c:	cmp	r0, r8
   10d30:	beq	10e58 <exit@plt+0x21c>
   10d34:	bgt	10d6c <exit@plt+0x130>
   10d38:	cmp	r0, #113	; 0x71
   10d3c:	beq	10e68 <exit@plt+0x22c>
   10d40:	bgt	10d9c <exit@plt+0x160>
   10d44:	cmp	r0, #104	; 0x68
   10d48:	beq	10e88 <exit@plt+0x24c>
   10d4c:	cmp	r0, #110	; 0x6e
   10d50:	beq	10e74 <exit@plt+0x238>
   10d54:	cmp	r0, #100	; 0x64
   10d58:	bne	10d00 <exit@plt+0xc4>
   10d5c:	mov	r0, sl
   10d60:	ldr	r1, [r9]
   10d64:	bl	10bac <nl_cli_route_parse_dst@plt>
   10d68:	b	10d00 <exit@plt+0xc4>
   10d6c:	movw	r3, #262	; 0x106
   10d70:	cmp	r0, r3
   10d74:	beq	10df0 <exit@plt+0x1b4>
   10d78:	bgt	10dc8 <exit@plt+0x18c>
   10d7c:	cmp	r0, #260	; 0x104
   10d80:	beq	10e48 <exit@plt+0x20c>
   10d84:	bgt	10e38 <exit@plt+0x1fc>
   10d88:	mov	r0, sl
   10d8c:	ldr	r1, [r9]
   10d90:	ldr	r2, [fp]
   10d94:	bl	10c0c <nl_cli_route_parse_iif@plt>
   10d98:	b	10d00 <exit@plt+0xc4>
   10d9c:	cmp	r0, #118	; 0x76
   10da0:	beq	10e30 <exit@plt+0x1f4>
   10da4:	movw	r3, #257	; 0x101
   10da8:	cmp	r0, r3
   10dac:	beq	10e20 <exit@plt+0x1e4>
   10db0:	cmp	r0, #116	; 0x74
   10db4:	bne	10d00 <exit@plt+0xc4>
   10db8:	mov	r0, sl
   10dbc:	ldr	r1, [r9]
   10dc0:	bl	10be8 <nl_cli_route_parse_table@plt>
   10dc4:	b	10d00 <exit@plt+0xc4>
   10dc8:	cmp	r0, #264	; 0x108
   10dcc:	beq	10e10 <exit@plt+0x1d4>
   10dd0:	blt	10e00 <exit@plt+0x1c4>
   10dd4:	movw	r3, #265	; 0x109
   10dd8:	cmp	r0, r3
   10ddc:	bne	10d00 <exit@plt+0xc4>
   10de0:	mov	r0, sl
   10de4:	ldr	r1, [r9]
   10de8:	bl	10ba0 <nl_cli_route_parse_type@plt>
   10dec:	b	10d00 <exit@plt+0xc4>
   10df0:	mov	r0, sl
   10df4:	ldr	r1, [r9]
   10df8:	bl	10b58 <nl_cli_route_parse_prio@plt>
   10dfc:	b	10d00 <exit@plt+0xc4>
   10e00:	mov	r0, sl
   10e04:	ldr	r1, [r9]
   10e08:	bl	10b64 <nl_cli_route_parse_scope@plt>
   10e0c:	b	10d00 <exit@plt+0xc4>
   10e10:	mov	r0, sl
   10e14:	ldr	r1, [r9]
   10e18:	bl	10b70 <nl_cli_route_parse_protocol@plt>
   10e1c:	b	10d00 <exit@plt+0xc4>
   10e20:	mov	r0, sl
   10e24:	ldr	r1, [r9]
   10e28:	bl	10b34 <nl_cli_route_parse_family@plt>
   10e2c:	b	10d00 <exit@plt+0xc4>
   10e30:	bl	10b28 <nl_cli_print_version@plt>
   10e34:	b	10d00 <exit@plt+0xc4>
   10e38:	mov	r0, sl
   10e3c:	ldr	r1, [r9]
   10e40:	bl	10bc4 <nl_cli_route_parse_metric@plt>
   10e44:	b	10d00 <exit@plt+0xc4>
   10e48:	mov	r0, sl
   10e4c:	ldr	r1, [r9]
   10e50:	bl	10b10 <nl_cli_route_parse_pref_src@plt>
   10e54:	b	10d00 <exit@plt+0xc4>
   10e58:	mov	r0, sl
   10e5c:	ldr	r1, [r9]
   10e60:	bl	10c24 <nl_cli_route_parse_src@plt>
   10e64:	b	10d00 <exit@plt+0xc4>
   10e68:	mov	r3, #1
   10e6c:	str	r3, [fp, #8]
   10e70:	b	10d00 <exit@plt+0xc4>
   10e74:	mov	r0, sl
   10e78:	ldr	r1, [r9]
   10e7c:	ldr	r2, [fp]
   10e80:	bl	10b7c <nl_cli_route_parse_nexthop@plt>
   10e84:	b	10d00 <exit@plt+0xc4>
   10e88:	movw	r0, #4308	; 0x10d4
   10e8c:	movt	r0, #1
   10e90:	bl	10bdc <puts@plt>
   10e94:	mov	r0, #0
   10e98:	bl	10c3c <exit@plt>
   10e9c:	ldr	r0, [sp, #12]
   10ea0:	mov	r1, sl
   10ea4:	mov	r2, #512	; 0x200
   10ea8:	bl	10c00 <rtnl_route_add@plt>
   10eac:	subs	r4, r0, #0
   10eb0:	blt	10efc <exit@plt+0x2c0>
   10eb4:	ldr	r3, [fp, #8]
   10eb8:	cmp	r3, #0
   10ebc:	bne	10edc <exit@plt+0x2a0>
   10ec0:	movw	r1, #5356	; 0x14ec
   10ec4:	mov	r0, #1
   10ec8:	movt	r1, #1
   10ecc:	bl	10b1c <__printf_chk@plt>
   10ed0:	mov	r0, sl
   10ed4:	add	r1, sp, #24
   10ed8:	bl	10bb8 <nl_object_dump@plt>
   10edc:	ldr	r1, [sp, #8]
   10ee0:	mov	r0, #0
   10ee4:	ldr	r2, [sp, #76]	; 0x4c
   10ee8:	ldr	r3, [r1]
   10eec:	cmp	r2, r3
   10ef0:	bne	10f18 <exit@plt+0x2dc>
   10ef4:	add	sp, sp, #84	; 0x54
   10ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10efc:	bl	10bf4 <nl_geterror@plt>
   10f00:	movw	r1, #5332	; 0x14d4
   10f04:	movt	r1, #1
   10f08:	mov	r2, r0
   10f0c:	mov	r0, r4
   10f10:	bl	10aec <nl_cli_fatal@plt>
   10f14:	b	10eb4 <exit@plt+0x278>
   10f18:	bl	10b94 <__stack_chk_fail@plt>
   10f1c:	mov	fp, #0
   10f20:	mov	lr, #0
   10f24:	pop	{r1}		; (ldr r1, [sp], #4)
   10f28:	mov	r2, sp
   10f2c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f30:	push	{r0}		; (str r0, [sp, #-4]!)
   10f34:	ldr	ip, [pc, #16]	; 10f4c <exit@plt+0x310>
   10f38:	push	{ip}		; (str ip, [sp, #-4]!)
   10f3c:	ldr	r0, [pc, #12]	; 10f50 <exit@plt+0x314>
   10f40:	ldr	r3, [pc, #12]	; 10f54 <exit@plt+0x318>
   10f44:	bl	10af8 <__libc_start_main@plt>
   10f48:	bl	10ae0 <abort@plt>
   10f4c:	strheq	r1, [r1], -r4
   10f50:	andeq	r0, r1, r8, asr #24
   10f54:	andeq	r1, r1, r0, asr r0
   10f58:	ldr	r3, [pc, #20]	; 10f74 <exit@plt+0x338>
   10f5c:	ldr	r2, [pc, #20]	; 10f78 <exit@plt+0x33c>
   10f60:	add	r3, pc, r3
   10f64:	ldr	r2, [r3, r2]
   10f68:	cmp	r2, #0
   10f6c:	bxeq	lr
   10f70:	b	10b04 <__gmon_start__@plt>
   10f74:	muleq	r1, r8, r0
   10f78:	andeq	r0, r0, r4, lsl #1
   10f7c:	push	{r3, lr}
   10f80:	movw	r0, #8588	; 0x218c
   10f84:	ldr	r3, [pc, #36]	; 10fb0 <exit@plt+0x374>
   10f88:	movt	r0, #2
   10f8c:	rsb	r3, r0, r3
   10f90:	cmp	r3, #6
   10f94:	popls	{r3, pc}
   10f98:	movw	r3, #0
   10f9c:	movt	r3, #0
   10fa0:	cmp	r3, #0
   10fa4:	popeq	{r3, pc}
   10fa8:	blx	r3
   10fac:	pop	{r3, pc}
   10fb0:	andeq	r2, r2, pc, lsl #3
   10fb4:	push	{r3, lr}
   10fb8:	movw	r0, #8588	; 0x218c
   10fbc:	movw	r3, #8588	; 0x218c
   10fc0:	movt	r0, #2
   10fc4:	movt	r3, #2
   10fc8:	rsb	r3, r0, r3
   10fcc:	asr	r3, r3, #2
   10fd0:	add	r3, r3, r3, lsr #31
   10fd4:	asrs	r1, r3, #1
   10fd8:	popeq	{r3, pc}
   10fdc:	movw	r2, #0
   10fe0:	movt	r2, #0
   10fe4:	cmp	r2, #0
   10fe8:	popeq	{r3, pc}
   10fec:	blx	r2
   10ff0:	pop	{r3, pc}
   10ff4:	push	{r4, lr}
   10ff8:	movw	r4, #8604	; 0x219c
   10ffc:	movt	r4, #2
   11000:	ldrb	r3, [r4]
   11004:	cmp	r3, #0
   11008:	popne	{r4, pc}
   1100c:	bl	10f7c <exit@plt+0x340>
   11010:	mov	r3, #1
   11014:	strb	r3, [r4]
   11018:	pop	{r4, pc}
   1101c:	movw	r0, #7868	; 0x1ebc
   11020:	movt	r0, #2
   11024:	push	{r3, lr}
   11028:	ldr	r3, [r0]
   1102c:	cmp	r3, #0
   11030:	beq	11048 <exit@plt+0x40c>
   11034:	movw	r3, #0
   11038:	movt	r3, #0
   1103c:	cmp	r3, #0
   11040:	beq	11048 <exit@plt+0x40c>
   11044:	blx	r3
   11048:	pop	{r3, lr}
   1104c:	b	10fb4 <exit@plt+0x378>
   11050:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11054:	mov	r7, r0
   11058:	ldr	r6, [pc, #76]	; 110ac <exit@plt+0x470>
   1105c:	mov	r8, r1
   11060:	ldr	r5, [pc, #72]	; 110b0 <exit@plt+0x474>
   11064:	mov	r9, r2
   11068:	add	r6, pc, r6
   1106c:	bl	10ac0 <abort@plt-0x20>
   11070:	add	r5, pc, r5
   11074:	rsb	r6, r5, r6
   11078:	asrs	r6, r6, #2
   1107c:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   11080:	sub	r5, r5, #4
   11084:	mov	r4, #0
   11088:	add	r4, r4, #1
   1108c:	ldr	r3, [r5, #4]!
   11090:	mov	r0, r7
   11094:	mov	r1, r8
   11098:	mov	r2, r9
   1109c:	blx	r3
   110a0:	cmp	r4, r6
   110a4:	bne	11088 <exit@plt+0x44c>
   110a8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   110ac:	andeq	r0, r1, r8, asr #28
   110b0:	andeq	r0, r1, ip, lsr lr
   110b4:	bx	lr

Disassembly of section .fini:

000110b8 <.fini>:
   110b8:	push	{r3, lr}
   110bc:	pop	{r3, pc}
