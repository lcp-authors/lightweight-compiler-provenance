
centos-preinstalled/expand:     file format elf32-littlearm


Disassembly of section .init:

00011078 <.init>:
   11078:	push	{r3, lr}
   1107c:	bl	11a48 <strspn@plt+0x6d4>
   11080:	pop	{r3, pc}

Disassembly of section .plt:

00011084 <fdopen@plt-0x14>:
   11084:	push	{lr}		; (str lr, [sp, #-4]!)
   11088:	ldr	lr, [pc, #4]	; 11094 <fdopen@plt-0x4>
   1108c:	add	lr, pc, lr
   11090:	ldr	pc, [lr, #8]!
   11094:	andeq	r5, r1, ip, ror #30

00011098 <fdopen@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #86016	; 0x15000
   110a0:	ldr	pc, [ip, #3948]!	; 0xf6c

000110a4 <calloc@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #86016	; 0x15000
   110ac:	ldr	pc, [ip, #3940]!	; 0xf64

000110b0 <fputs_unlocked@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #86016	; 0x15000
   110b8:	ldr	pc, [ip, #3932]!	; 0xf5c

000110bc <raise@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #86016	; 0x15000
   110c4:	ldr	pc, [ip, #3924]!	; 0xf54

000110c8 <strcmp@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #86016	; 0x15000
   110d0:	ldr	pc, [ip, #3916]!	; 0xf4c

000110d4 <posix_fadvise64@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #86016	; 0x15000
   110dc:	ldr	pc, [ip, #3908]!	; 0xf44

000110e0 <fflush@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #86016	; 0x15000
   110e8:	ldr	pc, [ip, #3900]!	; 0xf3c

000110ec <wcwidth@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #86016	; 0x15000
   110f4:	ldr	pc, [ip, #3892]!	; 0xf34

000110f8 <__memmove_chk@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #86016	; 0x15000
   11100:	ldr	pc, [ip, #3884]!	; 0xf2c

00011104 <free@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #86016	; 0x15000
   1110c:	ldr	pc, [ip, #3876]!	; 0xf24

00011110 <_exit@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #86016	; 0x15000
   11118:	ldr	pc, [ip, #3868]!	; 0xf1c

0001111c <memcpy@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #86016	; 0x15000
   11124:	ldr	pc, [ip, #3860]!	; 0xf14

00011128 <iswblank@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #86016	; 0x15000
   11130:	ldr	pc, [ip, #3852]!	; 0xf0c

00011134 <mbsinit@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #86016	; 0x15000
   1113c:	ldr	pc, [ip, #3844]!	; 0xf04

00011140 <fwrite_unlocked@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #86016	; 0x15000
   11148:	ldr	pc, [ip, #3836]!	; 0xefc

0001114c <memcmp@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #86016	; 0x15000
   11154:	ldr	pc, [ip, #3828]!	; 0xef4

00011158 <dcgettext@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #86016	; 0x15000
   11160:	ldr	pc, [ip, #3820]!	; 0xeec

00011164 <__stack_chk_fail@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #86016	; 0x15000
   1116c:	ldr	pc, [ip, #3812]!	; 0xee4

00011170 <realloc@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #86016	; 0x15000
   11178:	ldr	pc, [ip, #3804]!	; 0xedc

0001117c <textdomain@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #86016	; 0x15000
   11184:	ldr	pc, [ip, #3796]!	; 0xed4

00011188 <__strndup@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #86016	; 0x15000
   11190:	ldr	pc, [ip, #3788]!	; 0xecc

00011194 <iswprint@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #86016	; 0x15000
   1119c:	ldr	pc, [ip, #3780]!	; 0xec4

000111a0 <fwrite@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #86016	; 0x15000
   111a8:	ldr	pc, [ip, #3772]!	; 0xebc

000111ac <lseek64@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #86016	; 0x15000
   111b4:	ldr	pc, [ip, #3764]!	; 0xeb4

000111b8 <__ctype_get_mb_cur_max@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #86016	; 0x15000
   111c0:	ldr	pc, [ip, #3756]!	; 0xeac

000111c4 <strcpy@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #86016	; 0x15000
   111cc:	ldr	pc, [ip, #3748]!	; 0xea4

000111d0 <__fpending@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #86016	; 0x15000
   111d8:	ldr	pc, [ip, #3740]!	; 0xe9c

000111dc <mbrtowc@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #86016	; 0x15000
   111e4:	ldr	pc, [ip, #3732]!	; 0xe94

000111e8 <error@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #86016	; 0x15000
   111f0:	ldr	pc, [ip, #3724]!	; 0xe8c

000111f4 <open64@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #86016	; 0x15000
   111fc:	ldr	pc, [ip, #3716]!	; 0xe84

00011200 <getenv@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #86016	; 0x15000
   11208:	ldr	pc, [ip, #3708]!	; 0xe7c

0001120c <malloc@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #86016	; 0x15000
   11214:	ldr	pc, [ip, #3700]!	; 0xe74

00011218 <__libc_start_main@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #86016	; 0x15000
   11220:	ldr	pc, [ip, #3692]!	; 0xe6c

00011224 <__freading@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #86016	; 0x15000
   1122c:	ldr	pc, [ip, #3684]!	; 0xe64

00011230 <__gmon_start__@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #86016	; 0x15000
   11238:	ldr	pc, [ip, #3676]!	; 0xe5c

0001123c <getopt_long@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #86016	; 0x15000
   11244:	ldr	pc, [ip, #3668]!	; 0xe54

00011248 <__ctype_b_loc@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #86016	; 0x15000
   11250:	ldr	pc, [ip, #3660]!	; 0xe4c

00011254 <exit@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #86016	; 0x15000
   1125c:	ldr	pc, [ip, #3652]!	; 0xe44

00011260 <strlen@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #86016	; 0x15000
   11268:	ldr	pc, [ip, #3644]!	; 0xe3c

0001126c <ungetc@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #86016	; 0x15000
   11274:	ldr	pc, [ip, #3636]!	; 0xe34

00011278 <__errno_location@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #86016	; 0x15000
   11280:	ldr	pc, [ip, #3628]!	; 0xe2c

00011284 <__cxa_atexit@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #86016	; 0x15000
   1128c:	ldr	pc, [ip, #3620]!	; 0xe24

00011290 <memset@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #86016	; 0x15000
   11298:	ldr	pc, [ip, #3612]!	; 0xe1c

0001129c <fscanf@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #86016	; 0x15000
   112a4:	ldr	pc, [ip, #3604]!	; 0xe14

000112a8 <__printf_chk@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #86016	; 0x15000
   112b0:	ldr	pc, [ip, #3596]!	; 0xe0c

000112b4 <fileno@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #86016	; 0x15000
   112bc:	ldr	pc, [ip, #3588]!	; 0xe04

000112c0 <__fprintf_chk@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #86016	; 0x15000
   112c8:	ldr	pc, [ip, #3580]!	; 0xdfc

000112cc <fclose@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #86016	; 0x15000
   112d4:	ldr	pc, [ip, #3572]!	; 0xdf4

000112d8 <fseeko64@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #86016	; 0x15000
   112e0:	ldr	pc, [ip, #3564]!	; 0xdec

000112e4 <__uflow@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #86016	; 0x15000
   112ec:	ldr	pc, [ip, #3556]!	; 0xde4

000112f0 <__overflow@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #86016	; 0x15000
   112f8:	ldr	pc, [ip, #3548]!	; 0xddc

000112fc <setlocale@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #86016	; 0x15000
   11304:	ldr	pc, [ip, #3540]!	; 0xdd4

00011308 <strrchr@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #86016	; 0x15000
   11310:	ldr	pc, [ip, #3532]!	; 0xdcc

00011314 <nl_langinfo@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #86016	; 0x15000
   1131c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011320 <clearerr_unlocked@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #86016	; 0x15000
   11328:	ldr	pc, [ip, #3516]!	; 0xdbc

0001132c <fopen64@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #86016	; 0x15000
   11334:	ldr	pc, [ip, #3508]!	; 0xdb4

00011338 <bindtextdomain@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #86016	; 0x15000
   11340:	ldr	pc, [ip, #3500]!	; 0xdac

00011344 <fread_unlocked@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #86016	; 0x15000
   1134c:	ldr	pc, [ip, #3492]!	; 0xda4

00011350 <strncmp@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #86016	; 0x15000
   11358:	ldr	pc, [ip, #3484]!	; 0xd9c

0001135c <abort@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #86016	; 0x15000
   11364:	ldr	pc, [ip, #3476]!	; 0xd94

00011368 <close@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #86016	; 0x15000
   11370:	ldr	pc, [ip, #3468]!	; 0xd8c

00011374 <strspn@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #86016	; 0x15000
   1137c:	ldr	pc, [ip, #3460]!	; 0xd84

Disassembly of section .text:

00011380 <close_stdout@@Base-0x132c>:
   11380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11384:	sub	sp, sp, #44	; 0x2c
   11388:	ldr	sl, [pc, #1528]	; 11988 <strspn@plt+0x614>
   1138c:	mov	r6, r0
   11390:	ldr	r3, [pc, #1524]	; 1198c <strspn@plt+0x618>
   11394:	add	r0, sp, #32
   11398:	add	sl, pc, sl
   1139c:	str	r0, [sp, #12]
   113a0:	ldr	r0, [r1]
   113a4:	mov	r4, r1
   113a8:	ldr	r3, [sl, r3]
   113ac:	ldr	r5, [pc, #1500]	; 11990 <strspn@plt+0x61c>
   113b0:	ldr	r8, [pc, #1500]	; 11994 <strspn@plt+0x620>
   113b4:	ldr	r3, [r3]
   113b8:	add	r5, pc, r5
   113bc:	ldr	r7, [pc, #1492]	; 11998 <strspn@plt+0x624>
   113c0:	add	r8, pc, r8
   113c4:	ldr	fp, [pc, #1488]	; 1199c <strspn@plt+0x628>
   113c8:	str	r3, [sp, #36]	; 0x24
   113cc:	bl	128a8 <close_stdout@@Base+0x1fc>
   113d0:	ldr	r1, [pc, #1480]	; 119a0 <strspn@plt+0x62c>
   113d4:	mov	r0, #6
   113d8:	add	r7, pc, r7
   113dc:	add	fp, pc, fp
   113e0:	add	r1, pc, r1
   113e4:	bl	112fc <setlocale@plt>
   113e8:	ldr	r1, [pc, #1460]	; 119a4 <strspn@plt+0x630>
   113ec:	mov	r0, r5
   113f0:	add	r1, pc, r1
   113f4:	bl	11338 <bindtextdomain@plt>
   113f8:	mov	r0, r5
   113fc:	bl	1117c <textdomain@plt>
   11400:	ldr	r3, [pc, #1440]	; 119a8 <strspn@plt+0x634>
   11404:	ldr	r0, [sl, r3]
   11408:	bl	15b60 <close_stdout@@Base+0x34b4>
   1140c:	ldr	r3, [pc, #1432]	; 119ac <strspn@plt+0x638>
   11410:	mov	r2, #0
   11414:	mov	r1, #1
   11418:	add	r3, pc, r3
   1141c:	mov	r5, r2
   11420:	strb	r1, [r3, #25]
   11424:	strb	r2, [r3, #24]
   11428:	str	r2, [r3, #16]
   1142c:	str	r2, [r3, #8]
   11430:	str	r2, [r3]
   11434:	mov	r3, r7
   11438:	str	r5, [sp]
   1143c:	mov	r0, r6
   11440:	mov	r1, r4
   11444:	mov	r2, r8
   11448:	mov	r9, #0
   1144c:	bl	1123c <getopt_long@plt>
   11450:	cmn	r0, #1
   11454:	mov	r3, r0
   11458:	beq	11520 <strspn@plt+0x1ac>
   1145c:	cmp	r3, #57	; 0x39
   11460:	bgt	11484 <strspn@plt+0x110>
   11464:	cmp	r3, #48	; 0x30
   11468:	bge	114f8 <strspn@plt+0x184>
   1146c:	cmn	r3, #3
   11470:	beq	114b8 <strspn@plt+0x144>
   11474:	cmn	r3, #2
   11478:	bne	114b0 <strspn@plt+0x13c>
   1147c:	mov	r0, r9
   11480:	bl	12448 <strspn@plt+0x10d4>
   11484:	cmp	r3, #105	; 0x69
   11488:	beq	114a8 <strspn@plt+0x134>
   1148c:	cmp	r3, #116	; 0x74
   11490:	bne	114b0 <strspn@plt+0x13c>
   11494:	ldr	r3, [pc, #1300]	; 119b0 <strspn@plt+0x63c>
   11498:	ldr	r3, [sl, r3]
   1149c:	ldr	r0, [r3]
   114a0:	bl	11be8 <strspn@plt+0x874>
   114a4:	b	11434 <strspn@plt+0xc0>
   114a8:	strb	r5, [fp, #25]
   114ac:	b	11434 <strspn@plt+0xc0>
   114b0:	mov	r0, #1
   114b4:	bl	12448 <strspn@plt+0x10d4>
   114b8:	ldr	r1, [pc, #1268]	; 119b4 <strspn@plt+0x640>
   114bc:	ldr	r3, [pc, #1268]	; 119b8 <strspn@plt+0x644>
   114c0:	ldr	r2, [pc, #1268]	; 119bc <strspn@plt+0x648>
   114c4:	ldr	r0, [sl, r1]
   114c8:	ldr	r3, [sl, r3]
   114cc:	add	r2, pc, r2
   114d0:	ldr	r1, [pc, #1256]	; 119c0 <strspn@plt+0x64c>
   114d4:	ldr	r0, [r0]
   114d8:	ldr	r3, [r3]
   114dc:	add	r1, pc, r1
   114e0:	stm	sp, {r2, r9}
   114e4:	ldr	r2, [pc, #1240]	; 119c4 <strspn@plt+0x650>
   114e8:	add	r2, pc, r2
   114ec:	bl	14594 <close_stdout@@Base+0x1ee8>
   114f0:	mov	r0, r9
   114f4:	bl	11254 <exit@plt>
   114f8:	ldr	r2, [pc, #1200]	; 119b0 <strspn@plt+0x63c>
   114fc:	ldr	r2, [sl, r2]
   11500:	ldr	r2, [r2]
   11504:	cmp	r2, #0
   11508:	strbeq	r3, [sp, #32]
   1150c:	subne	r0, r2, #1
   11510:	addeq	r0, sp, #32
   11514:	strbeq	r2, [sp, #33]	; 0x21
   11518:	bl	11be8 <strspn@plt+0x874>
   1151c:	b	11434 <strspn@plt+0xc0>
   11520:	ldr	r3, [pc, #1184]	; 119c8 <strspn@plt+0x654>
   11524:	mov	fp, r9
   11528:	ldr	r2, [pc, #1180]	; 119cc <strspn@plt+0x658>
   1152c:	mov	r8, #0
   11530:	add	r3, pc, r3
   11534:	ldr	r0, [pc, #1172]	; 119d0 <strspn@plt+0x65c>
   11538:	add	r2, pc, r2
   1153c:	mov	r9, #0
   11540:	ldr	r5, [r3, #8]
   11544:	add	r0, pc, r0
   11548:	str	r2, [sp, #12]
   1154c:	str	r0, [sp, #16]
   11550:	sub	r5, r5, #8
   11554:	ldr	r7, [r3]
   11558:	b	11570 <strspn@plt+0x1fc>
   1155c:	cmp	r1, r9
   11560:	cmpeq	r0, r8
   11564:	bls	115ac <strspn@plt+0x238>
   11568:	ldrd	r8, [r5, #8]!
   1156c:	add	fp, fp, #1
   11570:	cmp	fp, r7
   11574:	beq	115d0 <strspn@plt+0x25c>
   11578:	ldrd	r0, [r5, #8]
   1157c:	orrs	r2, r0, r1
   11580:	bne	1155c <strspn@plt+0x1e8>
   11584:	ldr	r1, [sp, #12]
   11588:	mov	r2, #5
   1158c:	mov	r0, #0
   11590:	bl	11158 <dcgettext@plt>
   11594:	mov	r1, #0
   11598:	mov	r2, r0
   1159c:	mov	r0, #1
   115a0:	bl	111e8 <error@plt>
   115a4:	ldrd	r0, [r5, #8]
   115a8:	b	1155c <strspn@plt+0x1e8>
   115ac:	ldr	r1, [sp, #16]
   115b0:	mov	r2, #5
   115b4:	mov	r0, #0
   115b8:	bl	11158 <dcgettext@plt>
   115bc:	mov	r1, #0
   115c0:	mov	r2, r0
   115c4:	mov	r0, #1
   115c8:	bl	111e8 <error@plt>
   115cc:	b	11568 <strspn@plt+0x1f4>
   115d0:	ldr	r1, [pc, #1020]	; 119d4 <strspn@plt+0x660>
   115d4:	add	r1, pc, r1
   115d8:	ldr	r3, [r1]
   115dc:	cmp	r3, #0
   115e0:	bne	1164c <strspn@plt+0x2d8>
   115e4:	mov	r2, #8
   115e8:	mov	r3, #0
   115ec:	strd	r2, [r1, #32]
   115f0:	ldr	r3, [pc, #992]	; 119d8 <strspn@plt+0x664>
   115f4:	ldr	r3, [sl, r3]
   115f8:	ldr	r3, [r3]
   115fc:	cmp	r6, r3
   11600:	addgt	r3, r4, r3, lsl #2
   11604:	ldrle	r3, [pc, #976]	; 119dc <strspn@plt+0x668>
   11608:	addle	r3, pc, r3
   1160c:	ldr	r2, [pc, #972]	; 119e0 <strspn@plt+0x66c>
   11610:	add	r2, pc, r2
   11614:	str	r3, [r2, #20]
   11618:	bl	111b8 <__ctype_get_mb_cur_max@plt>
   1161c:	cmp	r0, #1
   11620:	bls	1169c <strspn@plt+0x328>
   11624:	bl	11fa8 <strspn@plt+0xc34>
   11628:	ldr	r3, [pc, #948]	; 119e4 <strspn@plt+0x670>
   1162c:	add	r3, pc, r3
   11630:	ldrb	r3, [r3, #24]
   11634:	cmp	r3, #0
   11638:	bne	11668 <strspn@plt+0x2f4>
   1163c:	ldr	r3, [pc, #932]	; 119e8 <strspn@plt+0x674>
   11640:	add	r3, pc, r3
   11644:	ldr	r0, [r3, #16]
   11648:	bl	11254 <exit@plt>
   1164c:	cmp	r3, #1
   11650:	ldreq	r3, [r1, #8]
   11654:	movne	r2, #0
   11658:	movne	r3, #0
   1165c:	ldrdeq	r2, [r3]
   11660:	strd	r2, [r1, #32]
   11664:	b	115f0 <strspn@plt+0x27c>
   11668:	ldr	r3, [pc, #892]	; 119ec <strspn@plt+0x678>
   1166c:	ldr	r3, [sl, r3]
   11670:	ldr	r0, [r3]
   11674:	bl	14924 <close_stdout@@Base+0x2278>
   11678:	cmp	r0, #0
   1167c:	beq	1163c <strspn@plt+0x2c8>
   11680:	bl	11278 <__errno_location@plt>
   11684:	ldr	r2, [pc, #868]	; 119f0 <strspn@plt+0x67c>
   11688:	add	r2, pc, r2
   1168c:	ldr	r1, [r0]
   11690:	mov	r0, #1
   11694:	bl	111e8 <error@plt>
   11698:	b	1163c <strspn@plt+0x2c8>
   1169c:	mov	r0, #0
   116a0:	bl	11dd0 <strspn@plt+0xa5c>
   116a4:	subs	r8, r0, #0
   116a8:	beq	11628 <strspn@plt+0x2b4>
   116ac:	ldr	r3, [pc, #832]	; 119f4 <strspn@plt+0x680>
   116b0:	mov	r9, #0
   116b4:	ldr	r0, [pc, #828]	; 119f8 <strspn@plt+0x684>
   116b8:	mov	r4, #0
   116bc:	add	r3, pc, r3
   116c0:	ldr	r2, [pc, #820]	; 119fc <strspn@plt+0x688>
   116c4:	add	r0, pc, r0
   116c8:	str	r3, [sp, #24]
   116cc:	str	r0, [sp, #12]
   116d0:	mov	r5, #0
   116d4:	ldr	r3, [pc, #804]	; 11a00 <strspn@plt+0x68c>
   116d8:	mov	r7, #1
   116dc:	ldr	r0, [pc, #800]	; 11a04 <strspn@plt+0x690>
   116e0:	add	r2, pc, r2
   116e4:	add	r3, pc, r3
   116e8:	str	r2, [sp, #28]
   116ec:	add	r0, pc, r0
   116f0:	str	r3, [sp, #16]
   116f4:	str	r0, [sp, #20]
   116f8:	ldr	r3, [r8, #4]
   116fc:	ldr	r2, [r8, #8]
   11700:	cmp	r3, r2
   11704:	addcc	r2, r3, #1
   11708:	strcc	r2, [r8, #4]
   1170c:	ldrbcc	r6, [r3]
   11710:	bcs	11964 <strspn@plt+0x5f0>
   11714:	cmp	r7, #0
   11718:	beq	11764 <strspn@plt+0x3f0>
   1171c:	cmp	r6, #9
   11720:	beq	117ac <strspn@plt+0x438>
   11724:	cmp	r6, #8
   11728:	beq	1185c <strspn@plt+0x4e8>
   1172c:	adds	r4, r4, #1
   11730:	adc	r5, r5, #0
   11734:	orrs	r3, r4, r5
   11738:	beq	11880 <strspn@plt+0x50c>
   1173c:	ldr	r0, [sp, #12]
   11740:	ldrb	r3, [r0, #25]
   11744:	cmp	r3, #0
   11748:	movne	r7, #1
   1174c:	bne	11764 <strspn@plt+0x3f0>
   11750:	bl	11248 <__ctype_b_loc@plt>
   11754:	lsl	r3, r6, #1
   11758:	ldr	r2, [r0]
   1175c:	ldrh	r7, [r2, r3]
   11760:	and	r7, r7, #1
   11764:	cmp	r6, #0
   11768:	blt	11628 <strspn@plt+0x2b4>
   1176c:	ldr	r3, [pc, #576]	; 119b4 <strspn@plt+0x640>
   11770:	ldr	r3, [sl, r3]
   11774:	ldr	r0, [r3]
   11778:	ldr	r3, [r0, #20]
   1177c:	ldr	r2, [r0, #24]
   11780:	cmp	r3, r2
   11784:	addcc	r2, r3, #1
   11788:	strcc	r2, [r0, #20]
   1178c:	strbcc	r6, [r3]
   11790:	bcs	11928 <strspn@plt+0x5b4>
   11794:	cmp	r6, #10
   11798:	moveq	r4, #0
   1179c:	moveq	r5, #0
   117a0:	moveq	r9, #0
   117a4:	moveq	r7, #1
   117a8:	b	116f8 <strspn@plt+0x384>
   117ac:	ldr	r2, [sp, #16]
   117b0:	ldrd	r6, [r2, #32]
   117b4:	orrs	r3, r6, r7
   117b8:	beq	118a4 <strspn@plt+0x530>
   117bc:	mov	r2, r6
   117c0:	mov	r3, r7
   117c4:	adds	r6, r6, r4
   117c8:	mov	r0, r4
   117cc:	mov	r1, r5
   117d0:	adc	r7, r7, r5
   117d4:	bl	15178 <close_stdout@@Base+0x2acc>
   117d8:	subs	r6, r6, r2
   117dc:	sbc	r7, r7, r3
   117e0:	cmp	r5, r7
   117e4:	cmpeq	r4, r6
   117e8:	bls	11810 <strspn@plt+0x49c>
   117ec:	ldr	r1, [pc, #532]	; 11a08 <strspn@plt+0x694>
   117f0:	mov	r2, #5
   117f4:	mov	r0, #0
   117f8:	add	r1, pc, r1
   117fc:	bl	11158 <dcgettext@plt>
   11800:	mov	r1, #0
   11804:	mov	r2, r0
   11808:	mov	r0, #1
   1180c:	bl	111e8 <error@plt>
   11810:	mov	fp, #32
   11814:	b	11840 <strspn@plt+0x4cc>
   11818:	ldr	r3, [pc, #404]	; 119b4 <strspn@plt+0x640>
   1181c:	ldr	r3, [sl, r3]
   11820:	ldr	r0, [r3]
   11824:	ldr	r3, [r0, #20]
   11828:	ldr	r2, [r0, #24]
   1182c:	cmp	r3, r2
   11830:	addcc	r2, r3, #1
   11834:	strcc	r2, [r0, #20]
   11838:	strbcc	fp, [r3]
   1183c:	bcs	118e4 <strspn@plt+0x570>
   11840:	adds	r4, r4, #1
   11844:	adc	r5, r5, #0
   11848:	cmp	r7, r5
   1184c:	cmpeq	r6, r4
   11850:	bhi	11818 <strspn@plt+0x4a4>
   11854:	mov	r6, #32
   11858:	b	1173c <strspn@plt+0x3c8>
   1185c:	orrs	r2, r4, r5
   11860:	mov	r3, #0
   11864:	moveq	r2, #0
   11868:	movne	r2, #1
   1186c:	cmp	r9, r3
   11870:	subne	r9, r9, #1
   11874:	subs	r4, r4, r2
   11878:	sbc	r5, r5, r3
   1187c:	b	1173c <strspn@plt+0x3c8>
   11880:	ldr	r1, [sp, #28]
   11884:	mov	r2, #5
   11888:	mov	r0, #0
   1188c:	bl	11158 <dcgettext@plt>
   11890:	mov	r1, #0
   11894:	mov	r2, r0
   11898:	mov	r0, #1
   1189c:	bl	111e8 <error@plt>
   118a0:	b	1173c <strspn@plt+0x3c8>
   118a4:	ldr	r0, [sp, #16]
   118a8:	sub	r3, r9, #-536870911	; 0xe0000001
   118ac:	ldr	r1, [r0, #8]
   118b0:	ldr	r2, [r0]
   118b4:	add	r3, r1, r3, lsl #3
   118b8:	b	118d0 <strspn@plt+0x55c>
   118bc:	ldrd	r6, [r3, #8]!
   118c0:	add	r9, r9, #1
   118c4:	cmp	r5, r7
   118c8:	cmpeq	r4, r6
   118cc:	bcc	11810 <strspn@plt+0x49c>
   118d0:	cmp	r9, r2
   118d4:	bne	118bc <strspn@plt+0x548>
   118d8:	adds	r6, r4, #1
   118dc:	adc	r7, r5, #0
   118e0:	b	117e0 <strspn@plt+0x46c>
   118e4:	mov	r1, #32
   118e8:	bl	112f0 <__overflow@plt>
   118ec:	cmp	r0, #0
   118f0:	bge	11840 <strspn@plt+0x4cc>
   118f4:	bl	11278 <__errno_location@plt>
   118f8:	ldr	r1, [sp, #20]
   118fc:	mov	r2, #5
   11900:	ldr	r3, [r0]
   11904:	mov	r0, #0
   11908:	str	r3, [sp, #8]
   1190c:	bl	11158 <dcgettext@plt>
   11910:	ldr	r3, [sp, #8]
   11914:	mov	r1, r3
   11918:	mov	r2, r0
   1191c:	mov	r0, #1
   11920:	bl	111e8 <error@plt>
   11924:	b	11840 <strspn@plt+0x4cc>
   11928:	uxtb	r1, r6
   1192c:	bl	112f0 <__overflow@plt>
   11930:	cmp	r0, #0
   11934:	bge	11794 <strspn@plt+0x420>
   11938:	bl	11278 <__errno_location@plt>
   1193c:	ldr	r1, [sp, #24]
   11940:	mov	r2, #5
   11944:	ldr	fp, [r0]
   11948:	mov	r0, #0
   1194c:	bl	11158 <dcgettext@plt>
   11950:	mov	r1, fp
   11954:	mov	r2, r0
   11958:	mov	r0, #1
   1195c:	bl	111e8 <error@plt>
   11960:	b	11794 <strspn@plt+0x420>
   11964:	mov	r0, r8
   11968:	bl	112e4 <__uflow@plt>
   1196c:	subs	r6, r0, #0
   11970:	bge	11714 <strspn@plt+0x3a0>
   11974:	mov	r0, r8
   11978:	bl	11dd0 <strspn@plt+0xa5c>
   1197c:	subs	r8, r0, #0
   11980:	bne	116f8 <strspn@plt+0x384>
   11984:	b	11714 <strspn@plt+0x3a0>
   11988:	andeq	r5, r1, r0, ror #24
   1198c:	andeq	r0, r0, r8, lsl #2
   11990:			; <UNDEFINED> instruction: 0x00004ab4
   11994:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   11998:			; <UNDEFINED> instruction: 0x00015ab4
   1199c:			; <UNDEFINED> instruction: 0x00015dbc
   119a0:	andeq	r4, r0, ip, asr #22
   119a4:	andeq	r4, r0, r0, asr #22
   119a8:	andeq	r0, r0, r8, lsl r1
   119ac:	andeq	r5, r1, r0, lsl #27
   119b0:	andeq	r0, r0, r0, asr #2
   119b4:	andeq	r0, r0, r8, lsr #2
   119b8:	andeq	r0, r0, r0, lsl r1
   119bc:	andeq	r4, r0, r0, lsl #21
   119c0:	andeq	r4, r0, r8, ror #20
   119c4:	andeq	r4, r0, r0, lsl #19
   119c8:	andeq	r5, r1, r8, ror #24
   119cc:	andeq	r4, r0, r4, lsr #20
   119d0:	andeq	r4, r0, r0, lsr sl
   119d4:	andeq	r5, r1, r4, asr #23
   119d8:	andeq	r0, r0, ip, lsl #2
   119dc:	andeq	r5, r1, r8, lsr fp
   119e0:	andeq	r5, r1, r8, lsl #23
   119e4:	andeq	r5, r1, ip, ror #22
   119e8:	andeq	r5, r1, r8, asr fp
   119ec:	andeq	r0, r0, r4, lsr #2
   119f0:	andeq	r4, r0, ip, lsr #18
   119f4:	andeq	r4, r0, ip, ror #17
   119f8:	ldrdeq	r5, [r1], -r4
   119fc:			; <UNDEFINED> instruction: 0x000048b0
   11a00:			; <UNDEFINED> instruction: 0x00015ab4
   11a04:			; <UNDEFINED> instruction: 0x000048bc
   11a08:	muleq	r0, r8, r7
   11a0c:	mov	fp, #0
   11a10:	mov	lr, #0
   11a14:	pop	{r1}		; (ldr r1, [sp], #4)
   11a18:	mov	r2, sp
   11a1c:	push	{r2}		; (str r2, [sp, #-4]!)
   11a20:	push	{r0}		; (str r0, [sp, #-4]!)
   11a24:	ldr	ip, [pc, #16]	; 11a3c <strspn@plt+0x6c8>
   11a28:	push	{ip}		; (str ip, [sp, #-4]!)
   11a2c:	ldr	r0, [pc, #12]	; 11a40 <strspn@plt+0x6cc>
   11a30:	ldr	r3, [pc, #12]	; 11a44 <strspn@plt+0x6d0>
   11a34:	bl	11218 <__libc_start_main@plt>
   11a38:	bl	1135c <abort@plt>
   11a3c:	andeq	r5, r1, ip, asr fp
   11a40:	andeq	r1, r1, r0, lsl #7
   11a44:	strdeq	r5, [r1], -r8
   11a48:	ldr	r3, [pc, #20]	; 11a64 <strspn@plt+0x6f0>
   11a4c:	ldr	r2, [pc, #20]	; 11a68 <strspn@plt+0x6f4>
   11a50:	add	r3, pc, r3
   11a54:	ldr	r2, [r3, r2]
   11a58:	cmp	r2, #0
   11a5c:	bxeq	lr
   11a60:	b	11230 <__gmon_start__@plt>
   11a64:	andeq	r5, r1, r8, lsr #11
   11a68:	andeq	r0, r0, ip, lsl r1
   11a6c:	push	{r3, lr}
   11a70:	movw	r0, #29080	; 0x7198
   11a74:	ldr	r3, [pc, #36]	; 11aa0 <strspn@plt+0x72c>
   11a78:	movt	r0, #2
   11a7c:	rsb	r3, r0, r3
   11a80:	cmp	r3, #6
   11a84:	popls	{r3, pc}
   11a88:	movw	r3, #0
   11a8c:	movt	r3, #0
   11a90:	cmp	r3, #0
   11a94:	popeq	{r3, pc}
   11a98:	blx	r3
   11a9c:	pop	{r3, pc}
   11aa0:	muleq	r2, fp, r1
   11aa4:	push	{r3, lr}
   11aa8:	movw	r0, #29080	; 0x7198
   11aac:	movw	r3, #29080	; 0x7198
   11ab0:	movt	r0, #2
   11ab4:	movt	r3, #2
   11ab8:	rsb	r3, r0, r3
   11abc:	asr	r3, r3, #2
   11ac0:	add	r3, r3, r3, lsr #31
   11ac4:	asrs	r1, r3, #1
   11ac8:	popeq	{r3, pc}
   11acc:	movw	r2, #0
   11ad0:	movt	r2, #0
   11ad4:	cmp	r2, #0
   11ad8:	popeq	{r3, pc}
   11adc:	blx	r2
   11ae0:	pop	{r3, pc}
   11ae4:	push	{r4, lr}
   11ae8:	movw	r4, #29080	; 0x7198
   11aec:	movt	r4, #2
   11af0:	ldrb	r3, [r4]
   11af4:	cmp	r3, #0
   11af8:	popne	{r4, pc}
   11afc:	bl	11a6c <strspn@plt+0x6f8>
   11b00:	mov	r3, #1
   11b04:	strb	r3, [r4]
   11b08:	pop	{r4, pc}
   11b0c:	movw	r0, #28304	; 0x6e90
   11b10:	movt	r0, #2
   11b14:	push	{r3, lr}
   11b18:	ldr	r3, [r0]
   11b1c:	cmp	r3, #0
   11b20:	beq	11b38 <strspn@plt+0x7c4>
   11b24:	movw	r3, #0
   11b28:	movt	r3, #0
   11b2c:	cmp	r3, #0
   11b30:	beq	11b38 <strspn@plt+0x7c4>
   11b34:	blx	r3
   11b38:	pop	{r3, lr}
   11b3c:	b	11aa4 <strspn@plt+0x730>
   11b40:	ldr	r2, [pc, #148]	; 11bdc <strspn@plt+0x868>
   11b44:	push	{r4, r5, r6, lr}
   11b48:	add	r2, pc, r2
   11b4c:	mov	r5, r1
   11b50:	mov	r4, r0
   11b54:	ldr	r3, [r2]
   11b58:	ldr	r1, [r2, #4]
   11b5c:	ldr	r0, [r2, #8]
   11b60:	cmp	r3, r1
   11b64:	beq	11b84 <strspn@plt+0x810>
   11b68:	ldr	r2, [pc, #112]	; 11be0 <strspn@plt+0x86c>
   11b6c:	lsl	r1, r3, #3
   11b70:	add	r3, r3, #1
   11b74:	add	r2, pc, r2
   11b78:	strd	r4, [r0, r1]
   11b7c:	str	r3, [r2]
   11b80:	pop	{r4, r5, r6, pc}
   11b84:	cmp	r0, #0
   11b88:	beq	11bc4 <strspn@plt+0x850>
   11b8c:	movw	r2, #21844	; 0x5554
   11b90:	movt	r2, #5461	; 0x1555
   11b94:	cmp	r3, r2
   11b98:	addls	r2, r3, #1
   11b9c:	addls	r3, r3, r2, lsr #1
   11ba0:	bhi	11bd8 <strspn@plt+0x864>
   11ba4:	lsl	r1, r3, #3
   11ba8:	ldr	r6, [pc, #52]	; 11be4 <strspn@plt+0x870>
   11bac:	add	r6, pc, r6
   11bb0:	str	r3, [r6, #4]
   11bb4:	bl	146fc <close_stdout@@Base+0x2050>
   11bb8:	ldr	r3, [r6]
   11bbc:	str	r0, [r6, #8]
   11bc0:	b	11b68 <strspn@plt+0x7f4>
   11bc4:	cmp	r3, #0
   11bc8:	moveq	r1, #64	; 0x40
   11bcc:	moveq	r3, #8
   11bd0:	beq	11ba8 <strspn@plt+0x834>
   11bd4:	b	11ba4 <strspn@plt+0x830>
   11bd8:	bl	148b8 <close_stdout@@Base+0x220c>
   11bdc:	andeq	r5, r1, r0, asr r6
   11be0:	andeq	r5, r1, r4, lsr #12
   11be4:	andeq	r5, r1, ip, ror #11
   11be8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bec:	mov	fp, r0
   11bf0:	ldrb	r9, [r0]
   11bf4:	sub	sp, sp, #20
   11bf8:	cmp	r9, #0
   11bfc:	beq	11d20 <strspn@plt+0x9ac>
   11c00:	ldr	r2, [pc, #444]	; 11dc4 <strspn@plt+0xa50>
   11c04:	mov	r8, #1
   11c08:	ldr	r3, [pc, #440]	; 11dc8 <strspn@plt+0xa54>
   11c0c:	mov	r6, #0
   11c10:	add	r2, pc, r2
   11c14:	str	r2, [sp, #8]
   11c18:	add	r3, pc, r3
   11c1c:	str	r3, [sp, #12]
   11c20:	b	11cc8 <strspn@plt+0x954>
   11c24:	sub	r1, r9, #48	; 0x30
   11c28:	cmp	r1, #9
   11c2c:	bhi	11d50 <strspn@plt+0x9dc>
   11c30:	cmp	r6, #0
   11c34:	beq	11d28 <strspn@plt+0x9b4>
   11c38:	movw	r2, #39321	; 0x9999
   11c3c:	movw	r3, #39321	; 0x9999
   11c40:	movt	r2, #39321	; 0x9999
   11c44:	movt	r3, #6553	; 0x1999
   11c48:	cmp	r5, r3
   11c4c:	cmpeq	r4, r2
   11c50:	bls	11d98 <strspn@plt+0xa24>
   11c54:	ldr	r1, [sp, #8]
   11c58:	mov	r0, r7
   11c5c:	bl	11374 <strspn@plt>
   11c60:	mov	r9, r0
   11c64:	mov	r0, r7
   11c68:	mov	r1, r9
   11c6c:	bl	14910 <close_stdout@@Base+0x2264>
   11c70:	ldr	r1, [sp, #12]
   11c74:	mov	r2, #5
   11c78:	mov	fp, r0
   11c7c:	mov	r0, #0
   11c80:	mov	r8, r0
   11c84:	bl	11158 <dcgettext@plt>
   11c88:	mov	sl, r0
   11c8c:	mov	r0, fp
   11c90:	bl	140f8 <close_stdout@@Base+0x1a4c>
   11c94:	mov	r2, sl
   11c98:	mov	r1, r8
   11c9c:	mov	r3, r0
   11ca0:	mov	r0, r8
   11ca4:	bl	111e8 <error@plt>
   11ca8:	mov	r0, fp
   11cac:	bl	11104 <free@plt>
   11cb0:	sub	fp, r9, #1
   11cb4:	add	fp, r7, fp
   11cb8:	ldrb	r9, [fp, #1]
   11cbc:	add	fp, fp, #1
   11cc0:	cmp	r9, #0
   11cc4:	beq	11d10 <strspn@plt+0x99c>
   11cc8:	cmp	r9, #44	; 0x2c
   11ccc:	beq	11ce8 <strspn@plt+0x974>
   11cd0:	bl	11248 <__ctype_b_loc@plt>
   11cd4:	lsl	r2, r9, #1
   11cd8:	ldr	r1, [r0]
   11cdc:	ldrh	r2, [r1, r2]
   11ce0:	ands	r2, r2, #1
   11ce4:	beq	11c24 <strspn@plt+0x8b0>
   11ce8:	cmp	r6, #0
   11cec:	beq	11cb8 <strspn@plt+0x944>
   11cf0:	mov	r0, r4
   11cf4:	mov	r1, r5
   11cf8:	bl	11b40 <strspn@plt+0x7cc>
   11cfc:	ldrb	r9, [fp, #1]
   11d00:	mov	r6, #0
   11d04:	add	fp, fp, #1
   11d08:	cmp	r9, #0
   11d0c:	bne	11cc8 <strspn@plt+0x954>
   11d10:	cmp	r8, #0
   11d14:	beq	11d90 <strspn@plt+0xa1c>
   11d18:	cmp	r6, #0
   11d1c:	bne	11d3c <strspn@plt+0x9c8>
   11d20:	add	sp, sp, #20
   11d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d28:	asr	r5, r1, #31
   11d2c:	mov	r4, r1
   11d30:	mov	r7, fp
   11d34:	mov	r6, #1
   11d38:	b	11cb8 <strspn@plt+0x944>
   11d3c:	mov	r0, r4
   11d40:	mov	r1, r5
   11d44:	add	sp, sp, #20
   11d48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d4c:	b	11b40 <strspn@plt+0x7cc>
   11d50:	ldr	r1, [pc, #116]	; 11dcc <strspn@plt+0xa58>
   11d54:	mov	ip, r2
   11d58:	mov	r0, r2
   11d5c:	mov	r2, #5
   11d60:	add	r1, pc, r1
   11d64:	str	ip, [sp, #4]
   11d68:	bl	11158 <dcgettext@plt>
   11d6c:	mov	r4, r0
   11d70:	mov	r0, fp
   11d74:	bl	140f8 <close_stdout@@Base+0x1a4c>
   11d78:	ldr	ip, [sp, #4]
   11d7c:	mov	r2, r4
   11d80:	mov	r1, ip
   11d84:	mov	r3, r0
   11d88:	mov	r0, ip
   11d8c:	bl	111e8 <error@plt>
   11d90:	mov	r0, #1
   11d94:	bl	11254 <exit@plt>
   11d98:	mov	r0, #10
   11d9c:	umull	r2, r3, r4, r0
   11da0:	adds	r2, r2, r1
   11da4:	mla	r3, r0, r5, r3
   11da8:	adc	r3, r3, r1, asr #31
   11dac:	cmp	r3, r5
   11db0:	cmpeq	r2, r4
   11db4:	bcc	11c54 <strspn@plt+0x8e0>
   11db8:	mov	r4, r2
   11dbc:	mov	r5, r3
   11dc0:	b	11d34 <strspn@plt+0x9c0>
   11dc4:	ldrdeq	r3, [r0], -r4
   11dc8:	ldrdeq	r3, [r0], -r8
   11dcc:	andeq	r3, r0, r8, asr lr
   11dd0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11dd4:	subs	r4, r0, #0
   11dd8:	ldr	sl, [pc, #404]	; 11f74 <strspn@plt+0xc00>
   11ddc:	add	sl, pc, sl
   11de0:	beq	11e1c <strspn@plt+0xaa8>
   11de4:	ldr	r3, [r4]
   11de8:	tst	r3, #32
   11dec:	bne	11f44 <strspn@plt+0xbd0>
   11df0:	ldr	r3, [pc, #384]	; 11f78 <strspn@plt+0xc04>
   11df4:	mov	r0, r4
   11df8:	add	r3, pc, r3
   11dfc:	ldr	r3, [r3, #12]
   11e00:	ldrb	r2, [r3]
   11e04:	cmp	r2, #45	; 0x2d
   11e08:	bne	11f08 <strspn@plt+0xb94>
   11e0c:	ldrb	r3, [r3, #1]
   11e10:	cmp	r3, #0
   11e14:	bne	11f08 <strspn@plt+0xb94>
   11e18:	bl	11320 <clearerr_unlocked@plt>
   11e1c:	ldr	r2, [pc, #344]	; 11f7c <strspn@plt+0xc08>
   11e20:	add	r2, pc, r2
   11e24:	ldr	r3, [r2, #20]
   11e28:	add	r1, r3, #4
   11e2c:	str	r1, [r2, #20]
   11e30:	ldr	r4, [r3]
   11e34:	cmp	r4, #0
   11e38:	beq	11f00 <strspn@plt+0xb8c>
   11e3c:	ldr	r8, [pc, #316]	; 11f80 <strspn@plt+0xc0c>
   11e40:	mov	r7, #1
   11e44:	ldr	fp, [pc, #312]	; 11f84 <strspn@plt+0xc10>
   11e48:	ldr	r9, [pc, #312]	; 11f88 <strspn@plt+0xc14>
   11e4c:	add	r8, pc, r8
   11e50:	ldr	r6, [pc, #308]	; 11f8c <strspn@plt+0xc18>
   11e54:	add	fp, pc, fp
   11e58:	add	r9, pc, r9
   11e5c:	add	r6, pc, r6
   11e60:	b	11ea8 <strspn@plt+0xb34>
   11e64:	bl	1132c <fopen64@plt>
   11e68:	mov	r5, r0
   11e6c:	cmp	r5, #0
   11e70:	bne	11ee0 <strspn@plt+0xb6c>
   11e74:	bl	11278 <__errno_location@plt>
   11e78:	mov	r3, r4
   11e7c:	mov	r2, r9
   11e80:	ldr	r1, [r0]
   11e84:	mov	r0, r5
   11e88:	bl	111e8 <error@plt>
   11e8c:	ldr	r3, [r6, #20]
   11e90:	str	r7, [r6, #16]
   11e94:	add	r2, r3, #4
   11e98:	str	r2, [r6, #20]
   11e9c:	ldr	r4, [r3]
   11ea0:	cmp	r4, #0
   11ea4:	beq	11f00 <strspn@plt+0xb8c>
   11ea8:	ldrb	r3, [r4]
   11eac:	mov	r1, r8
   11eb0:	ldr	r2, [pc, #216]	; 11f90 <strspn@plt+0xc1c>
   11eb4:	mov	r0, r4
   11eb8:	cmp	r3, #45	; 0x2d
   11ebc:	bne	11e64 <strspn@plt+0xaf0>
   11ec0:	ldrb	r3, [r4, #1]
   11ec4:	cmp	r3, #0
   11ec8:	bne	11e64 <strspn@plt+0xaf0>
   11ecc:	strb	r7, [fp, #24]
   11ed0:	ldr	r3, [sl, r2]
   11ed4:	ldr	r5, [r3]
   11ed8:	cmp	r5, #0
   11edc:	beq	11e74 <strspn@plt+0xb00>
   11ee0:	ldr	r3, [pc, #172]	; 11f94 <strspn@plt+0xc20>
   11ee4:	mov	r0, r5
   11ee8:	mov	r1, #2
   11eec:	add	r3, pc, r3
   11ef0:	str	r4, [r3, #12]
   11ef4:	bl	1286c <close_stdout@@Base+0x1c0>
   11ef8:	mov	r0, r5
   11efc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f00:	mov	r0, #0
   11f04:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f08:	bl	14924 <close_stdout@@Base+0x2278>
   11f0c:	cmp	r0, #0
   11f10:	beq	11e1c <strspn@plt+0xaa8>
   11f14:	bl	11278 <__errno_location@plt>
   11f18:	ldr	r4, [pc, #120]	; 11f98 <strspn@plt+0xc24>
   11f1c:	ldr	r2, [pc, #120]	; 11f9c <strspn@plt+0xc28>
   11f20:	add	r4, pc, r4
   11f24:	add	r2, pc, r2
   11f28:	ldr	r3, [r4, #12]
   11f2c:	ldr	r1, [r0]
   11f30:	mov	r0, #0
   11f34:	bl	111e8 <error@plt>
   11f38:	mov	r3, #1
   11f3c:	str	r3, [r4, #16]
   11f40:	b	11e1c <strspn@plt+0xaa8>
   11f44:	bl	11278 <__errno_location@plt>
   11f48:	ldr	r5, [pc, #80]	; 11fa0 <strspn@plt+0xc2c>
   11f4c:	ldr	r2, [pc, #80]	; 11fa4 <strspn@plt+0xc30>
   11f50:	add	r5, pc, r5
   11f54:	add	r2, pc, r2
   11f58:	ldr	r3, [r5, #12]
   11f5c:	ldr	r1, [r0]
   11f60:	mov	r0, #0
   11f64:	bl	111e8 <error@plt>
   11f68:	mov	r3, #1
   11f6c:	str	r3, [r5, #16]
   11f70:	b	11df0 <strspn@plt+0xa7c>
   11f74:	andeq	r5, r1, ip, lsl r2
   11f78:	andeq	r5, r1, r0, lsr #7
   11f7c:	andeq	r5, r1, r8, ror r3
   11f80:	andeq	r3, r0, r0, asr #27
   11f84:	andeq	r5, r1, r4, asr #6
   11f88:	andeq	r3, r0, r8, lsl #27
   11f8c:	andeq	r5, r1, ip, lsr r3
   11f90:	andeq	r0, r0, r4, lsr #2
   11f94:	andeq	r5, r1, ip, lsr #5
   11f98:	andeq	r5, r1, r8, ror r2
   11f9c:			; <UNDEFINED> instruction: 0x00003cbc
   11fa0:	andeq	r5, r1, r8, asr #4
   11fa4:	andeq	r3, r0, ip, lsl #25
   11fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fac:	sub	sp, sp, #8256	; 0x2040
   11fb0:	ldr	fp, [pc, #1140]	; 1242c <strspn@plt+0x10b8>
   11fb4:	sub	sp, sp, #44	; 0x2c
   11fb8:	ldr	r3, [pc, #1136]	; 12430 <strspn@plt+0x10bc>
   11fbc:	add	r1, sp, #8192	; 0x2000
   11fc0:	add	fp, pc, fp
   11fc4:	mov	r0, #0
   11fc8:	ldr	r3, [fp, r3]
   11fcc:	str	r3, [sp, #12]
   11fd0:	ldr	r3, [r3]
   11fd4:	str	r3, [r1, #100]	; 0x64
   11fd8:	bl	11dd0 <strspn@plt+0xa5c>
   11fdc:	subs	r8, r0, #0
   11fe0:	beq	1212c <strspn@plt+0xdb8>
   11fe4:	add	ip, sp, #84	; 0x54
   11fe8:	str	ip, [sp, #16]
   11fec:	ldr	ip, [pc, #1088]	; 12434 <strspn@plt+0x10c0>
   11ff0:	add	sl, sp, #104	; 0x68
   11ff4:	mov	r3, #0
   11ff8:	add	r7, sp, #60	; 0x3c
   11ffc:	add	ip, pc, ip
   12000:	str	ip, [sp, #24]
   12004:	ldr	ip, [pc, #1068]	; 12438 <strspn@plt+0x10c4>
   12008:	add	r9, sp, #84	; 0x54
   1200c:	movw	r4, #57296	; 0xdfd0
   12010:	mov	r6, r3
   12014:	add	ip, pc, ip
   12018:	str	ip, [sp, #48]	; 0x30
   1201c:	ldr	ip, [pc, #1048]	; 1243c <strspn@plt+0x10c8>
   12020:	movt	r4, #65535	; 0xffff
   12024:	str	r4, [sp, #20]
   12028:	mov	r4, sl
   1202c:	add	ip, pc, ip
   12030:	str	ip, [sp, #36]	; 0x24
   12034:	ldr	ip, [pc, #1028]	; 12440 <strspn@plt+0x10cc>
   12038:	mov	sl, r3
   1203c:	str	r3, [sp, #60]	; 0x3c
   12040:	add	ip, pc, ip
   12044:	str	ip, [sp, #28]
   12048:	add	ip, sp, #68	; 0x44
   1204c:	str	ip, [sp, #8]
   12050:	mov	ip, #1
   12054:	str	r3, [sp, #32]
   12058:	mov	r5, ip
   1205c:	str	r3, [sp, #80]	; 0x50
   12060:	str	r3, [sp, #76]	; 0x4c
   12064:	str	r3, [r7, #4]
   12068:	cmp	r6, #15
   1206c:	bls	12108 <strspn@plt+0xd94>
   12070:	ldm	r7, {r0, r1}
   12074:	mov	r2, r6
   12078:	ldr	ip, [sp, #8]
   1207c:	mov	r3, r7
   12080:	stm	ip, {r0, r1}
   12084:	sub	r0, r4, #48	; 0x30
   12088:	mov	r1, r9
   1208c:	bl	111dc <mbrtowc@plt>
   12090:	subs	ip, r0, #0
   12094:	beq	121b4 <strspn@plt+0xe40>
   12098:	cmn	ip, #2
   1209c:	bcs	12150 <strspn@plt+0xddc>
   120a0:	add	r2, sp, #8256	; 0x2040
   120a4:	ldr	lr, [sp, #20]
   120a8:	add	r2, r2, #40	; 0x28
   120ac:	ldr	r1, [r2, lr]
   120b0:	cmp	r1, #10
   120b4:	beq	12258 <strspn@plt+0xee4>
   120b8:	cmp	r1, #9
   120bc:	beq	12290 <strspn@plt+0xf1c>
   120c0:	cmp	r5, #0
   120c4:	beq	120d8 <strspn@plt+0xd64>
   120c8:	cmp	r1, #8
   120cc:	bne	1236c <strspn@plt+0xff8>
   120d0:	cmp	sl, #0
   120d4:	subgt	sl, sl, #1
   120d8:	ldr	r3, [pc, #868]	; 12444 <strspn@plt+0x10d0>
   120dc:	mov	r2, ip
   120e0:	mov	r0, r9
   120e4:	mov	r1, #1
   120e8:	ldr	r3, [fp, r3]
   120ec:	ldr	r3, [r3]
   120f0:	str	ip, [sp]
   120f4:	bl	11140 <fwrite_unlocked@plt>
   120f8:	ldr	ip, [sp]
   120fc:	b	121a8 <strspn@plt+0xe34>
   12100:	str	r6, [r7]
   12104:	str	r6, [r7, #4]
   12108:	ldr	r3, [r8]
   1210c:	tst	r3, #48	; 0x30
   12110:	beq	12200 <strspn@plt+0xe8c>
   12114:	cmp	r6, #0
   12118:	bne	12070 <strspn@plt+0xcfc>
   1211c:	mov	r0, r8
   12120:	bl	11dd0 <strspn@plt+0xa5c>
   12124:	subs	r8, r0, #0
   12128:	bne	12100 <strspn@plt+0xd8c>
   1212c:	ldr	ip, [sp, #12]
   12130:	add	r1, sp, #8192	; 0x2000
   12134:	ldr	r2, [r1, #100]	; 0x64
   12138:	ldr	r3, [ip]
   1213c:	cmp	r2, r3
   12140:	bne	12400 <strspn@plt+0x108c>
   12144:	add	sp, sp, #8256	; 0x2040
   12148:	add	sp, sp, #44	; 0x2c
   1214c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12150:	ldr	ip, [sp, #8]
   12154:	cmp	r5, #0
   12158:	ldm	ip, {r0, r1}
   1215c:	stm	r7, {r0, r1}
   12160:	beq	12178 <strspn@plt+0xe04>
   12164:	ldr	ip, [sp, #28]
   12168:	add	sl, sl, #1
   1216c:	ldrb	r3, [ip, #25]
   12170:	cmp	r3, #0
   12174:	beq	12238 <strspn@plt+0xec4>
   12178:	ldrb	r1, [r9]
   1217c:	ldr	r3, [pc, #704]	; 12444 <strspn@plt+0x10d0>
   12180:	ldr	r3, [fp, r3]
   12184:	ldr	r0, [r3]
   12188:	ldr	r3, [r0, #20]
   1218c:	ldr	r2, [r0, #24]
   12190:	cmp	r3, r2
   12194:	addcc	r2, r3, #1
   12198:	strcc	r2, [r0, #20]
   1219c:	movcc	ip, #1
   121a0:	strbcc	r1, [r3]
   121a4:	bcs	12408 <strspn@plt+0x1094>
   121a8:	rsb	r6, ip, r6
   121ac:	add	r9, r9, ip
   121b0:	b	12068 <strspn@plt+0xcf4>
   121b4:	cmp	r5, #0
   121b8:	beq	121cc <strspn@plt+0xe58>
   121bc:	ldr	ip, [sp, #24]
   121c0:	ldrb	r3, [ip, #25]
   121c4:	cmp	r3, #0
   121c8:	moveq	r5, #0
   121cc:	ldr	r3, [pc, #624]	; 12444 <strspn@plt+0x10d0>
   121d0:	ldr	r3, [fp, r3]
   121d4:	ldr	r0, [r3]
   121d8:	ldr	r3, [r0, #20]
   121dc:	ldr	r2, [r0, #24]
   121e0:	cmp	r3, r2
   121e4:	bcs	12404 <strspn@plt+0x1090>
   121e8:	add	r2, r3, #1
   121ec:	mov	ip, #1
   121f0:	str	r2, [r0, #20]
   121f4:	mov	r2, #0
   121f8:	strb	r2, [r3]
   121fc:	b	121a8 <strspn@plt+0xe34>
   12200:	mov	r1, r9
   12204:	mov	r2, r6
   12208:	movw	r3, #8208	; 0x2010
   1220c:	add	r0, sp, #84	; 0x54
   12210:	bl	110f8 <__memmove_chk@plt>
   12214:	add	lr, sp, #84	; 0x54
   12218:	add	r0, lr, r6
   1221c:	mov	r1, #1
   12220:	mov	r2, #8192	; 0x2000
   12224:	mov	r3, r8
   12228:	mov	r9, lr
   1222c:	bl	11344 <fread_unlocked@plt>
   12230:	add	r6, r6, r0
   12234:	b	12114 <strspn@plt+0xda0>
   12238:	bl	11248 <__ctype_b_loc@plt>
   1223c:	ldrb	r1, [r9]
   12240:	lsl	r3, r1, #1
   12244:	ldr	r2, [r0]
   12248:	ldrh	r3, [r2, r3]
   1224c:	tst	r3, #1
   12250:	moveq	r5, #0
   12254:	b	1217c <strspn@plt+0xe08>
   12258:	ldr	r3, [pc, #484]	; 12444 <strspn@plt+0x10d0>
   1225c:	mov	sl, #0
   12260:	ldr	r3, [fp, r3]
   12264:	ldr	r0, [r3]
   12268:	ldr	r3, [r0, #20]
   1226c:	ldr	r2, [r0, #24]
   12270:	cmp	r3, r2
   12274:	bcs	12414 <strspn@plt+0x10a0>
   12278:	add	r2, r3, #1
   1227c:	str	sl, [sp, #32]
   12280:	str	r2, [r0, #20]
   12284:	mov	r5, #1
   12288:	strb	r1, [r3]
   1228c:	b	121a8 <strspn@plt+0xe34>
   12290:	cmp	r5, #0
   12294:	beq	120d8 <strspn@plt+0xd64>
   12298:	ldr	r3, [sp, #36]	; 0x24
   1229c:	ldrd	r2, [r3, #32]
   122a0:	orrs	lr, r2, r3
   122a4:	strd	r2, [sp, #40]	; 0x28
   122a8:	bne	123b8 <strspn@plt+0x1044>
   122ac:	ldr	r1, [sp, #36]	; 0x24
   122b0:	ldr	lr, [sp, #36]	; 0x24
   122b4:	str	r5, [sp, #40]	; 0x28
   122b8:	ldr	r3, [r1]
   122bc:	asr	r1, sl, #31
   122c0:	ldr	r2, [lr, #8]
   122c4:	str	r4, [sp, #52]	; 0x34
   122c8:	sub	r3, r3, #1
   122cc:	ldr	lr, [sp, #32]
   122d0:	mov	r4, sl
   122d4:	mov	r5, r1
   122d8:	b	122f4 <strspn@plt+0xf80>
   122dc:	lsl	r1, lr, #3
   122e0:	ldrd	r0, [r1, r2]
   122e4:	cmp	r5, r1
   122e8:	cmpeq	r4, r0
   122ec:	bcc	123e8 <strspn@plt+0x1074>
   122f0:	add	lr, lr, #1
   122f4:	cmp	lr, r3
   122f8:	bcc	122dc <strspn@plt+0xf68>
   122fc:	ldr	r5, [sp, #40]	; 0x28
   12300:	ldr	r4, [sp, #52]	; 0x34
   12304:	ldr	r3, [r2, lr, lsl #3]
   12308:	str	lr, [sp, #32]
   1230c:	cmp	sl, r3
   12310:	addge	r3, sl, #1
   12314:	b	1231c <strspn@plt+0xfa8>
   12318:	add	sl, sl, #1
   1231c:	cmp	sl, r3
   12320:	bge	121a8 <strspn@plt+0xe34>
   12324:	ldr	r2, [pc, #280]	; 12444 <strspn@plt+0x10d0>
   12328:	ldr	r2, [fp, r2]
   1232c:	ldr	r0, [r2]
   12330:	ldr	r2, [r0, #20]
   12334:	ldr	r1, [r0, #24]
   12338:	cmp	r2, r1
   1233c:	addcc	r1, r2, #1
   12340:	strcc	r1, [r0, #20]
   12344:	movcc	lr, #32
   12348:	strbcc	lr, [r2]
   1234c:	bcc	12318 <strspn@plt+0xfa4>
   12350:	mov	r1, #32
   12354:	str	r3, [sp, #4]
   12358:	str	ip, [sp]
   1235c:	bl	112f0 <__overflow@plt>
   12360:	ldr	r3, [sp, #4]
   12364:	ldr	ip, [sp]
   12368:	b	12318 <strspn@plt+0xfa4>
   1236c:	mov	r0, r1
   12370:	str	ip, [sp]
   12374:	bl	110ec <wcwidth@plt>
   12378:	ldr	r1, [sp, #48]	; 0x30
   1237c:	ldr	ip, [sp]
   12380:	ldrb	r3, [r1, #25]
   12384:	cmp	r0, #0
   12388:	addge	sl, sl, r0
   1238c:	cmp	r3, #0
   12390:	bne	120d8 <strspn@plt+0xd64>
   12394:	ldr	r2, [sp, #20]
   12398:	add	r3, sp, #8256	; 0x2040
   1239c:	add	r3, r3, #40	; 0x28
   123a0:	ldr	r0, [r3, r2]
   123a4:	bl	11128 <iswblank@plt>
   123a8:	ldr	ip, [sp]
   123ac:	cmp	r0, #0
   123b0:	moveq	r5, #0
   123b4:	b	120d8 <strspn@plt+0xd64>
   123b8:	ldr	lr, [sp, #40]	; 0x28
   123bc:	mov	r0, sl
   123c0:	ldrd	r2, [sp, #40]	; 0x28
   123c4:	asr	r1, sl, #31
   123c8:	add	lr, sl, lr
   123cc:	str	ip, [sp]
   123d0:	str	lr, [sp, #40]	; 0x28
   123d4:	bl	15178 <close_stdout@@Base+0x2acc>
   123d8:	ldr	r1, [sp, #40]	; 0x28
   123dc:	ldr	ip, [sp]
   123e0:	rsb	r3, r2, r1
   123e4:	b	1231c <strspn@plt+0xfa8>
   123e8:	add	lr, lr, #1
   123ec:	ldr	r5, [sp, #40]	; 0x28
   123f0:	ldr	r4, [sp, #52]	; 0x34
   123f4:	mov	r3, r0
   123f8:	str	lr, [sp, #32]
   123fc:	b	1230c <strspn@plt+0xf98>
   12400:	bl	11164 <__stack_chk_fail@plt>
   12404:	mov	r1, #0
   12408:	bl	112f0 <__overflow@plt>
   1240c:	mov	ip, #1
   12410:	b	121a8 <strspn@plt+0xe34>
   12414:	str	ip, [sp]
   12418:	mov	r5, #1
   1241c:	bl	112f0 <__overflow@plt>
   12420:	str	sl, [sp, #32]
   12424:	ldr	ip, [sp]
   12428:	b	121a8 <strspn@plt+0xe34>
   1242c:	andeq	r5, r1, r8, lsr r0
   12430:	andeq	r0, r0, r8, lsl #2
   12434:	muleq	r1, ip, r1
   12438:	andeq	r5, r1, r4, lsl #3
   1243c:	andeq	r5, r1, ip, ror #2
   12440:	andeq	r5, r1, r8, asr r1
   12444:	andeq	r0, r0, r8, lsr #2
   12448:	push	{r4, r5, r6, lr}
   1244c:	subs	r4, r0, #0
   12450:	ldr	r5, [pc, #484]	; 1263c <strspn@plt+0x12c8>
   12454:	add	r5, pc, r5
   12458:	beq	124a0 <strspn@plt+0x112c>
   1245c:	ldr	r3, [pc, #476]	; 12640 <strspn@plt+0x12cc>
   12460:	mov	r2, #5
   12464:	ldr	r1, [pc, #472]	; 12644 <strspn@plt+0x12d0>
   12468:	mov	r0, #0
   1246c:	ldr	r3, [r5, r3]
   12470:	add	r1, pc, r1
   12474:	ldr	r6, [r3]
   12478:	bl	11158 <dcgettext@plt>
   1247c:	ldr	r3, [pc, #452]	; 12648 <strspn@plt+0x12d4>
   12480:	mov	r1, #1
   12484:	ldr	r3, [r5, r3]
   12488:	ldr	r3, [r3]
   1248c:	mov	r2, r0
   12490:	mov	r0, r6
   12494:	bl	112c0 <__fprintf_chk@plt>
   12498:	mov	r0, r4
   1249c:	bl	11254 <exit@plt>
   124a0:	ldr	r1, [pc, #420]	; 1264c <strspn@plt+0x12d8>
   124a4:	mov	r2, #5
   124a8:	add	r1, pc, r1
   124ac:	bl	11158 <dcgettext@plt>
   124b0:	ldr	r3, [pc, #400]	; 12648 <strspn@plt+0x12d4>
   124b4:	ldr	r6, [r5, r3]
   124b8:	ldr	r2, [r6]
   124bc:	mov	r1, r0
   124c0:	mov	r0, #1
   124c4:	bl	112a8 <__printf_chk@plt>
   124c8:	ldr	r1, [pc, #384]	; 12650 <strspn@plt+0x12dc>
   124cc:	mov	r2, #5
   124d0:	mov	r0, r4
   124d4:	add	r1, pc, r1
   124d8:	bl	11158 <dcgettext@plt>
   124dc:	ldr	r3, [pc, #368]	; 12654 <strspn@plt+0x12e0>
   124e0:	ldr	r5, [r5, r3]
   124e4:	ldr	r1, [r5]
   124e8:	bl	110b0 <fputs_unlocked@plt>
   124ec:	ldr	r1, [pc, #356]	; 12658 <strspn@plt+0x12e4>
   124f0:	mov	r2, #5
   124f4:	mov	r0, r4
   124f8:	add	r1, pc, r1
   124fc:	bl	11158 <dcgettext@plt>
   12500:	ldr	r1, [r5]
   12504:	bl	110b0 <fputs_unlocked@plt>
   12508:	ldr	r1, [pc, #332]	; 1265c <strspn@plt+0x12e8>
   1250c:	mov	r2, #5
   12510:	mov	r0, r4
   12514:	add	r1, pc, r1
   12518:	bl	11158 <dcgettext@plt>
   1251c:	ldr	r1, [r5]
   12520:	bl	110b0 <fputs_unlocked@plt>
   12524:	ldr	r1, [pc, #308]	; 12660 <strspn@plt+0x12ec>
   12528:	mov	r2, #5
   1252c:	mov	r0, r4
   12530:	add	r1, pc, r1
   12534:	bl	11158 <dcgettext@plt>
   12538:	ldr	r1, [r5]
   1253c:	bl	110b0 <fputs_unlocked@plt>
   12540:	ldr	r1, [pc, #284]	; 12664 <strspn@plt+0x12f0>
   12544:	mov	r2, #5
   12548:	mov	r0, r4
   1254c:	add	r1, pc, r1
   12550:	bl	11158 <dcgettext@plt>
   12554:	ldr	r1, [r5]
   12558:	bl	110b0 <fputs_unlocked@plt>
   1255c:	ldr	r1, [pc, #260]	; 12668 <strspn@plt+0x12f4>
   12560:	mov	r2, #5
   12564:	mov	r0, r4
   12568:	add	r1, pc, r1
   1256c:	bl	11158 <dcgettext@plt>
   12570:	ldr	r1, [r5]
   12574:	bl	110b0 <fputs_unlocked@plt>
   12578:	ldr	r1, [pc, #236]	; 1266c <strspn@plt+0x12f8>
   1257c:	mov	r2, #5
   12580:	mov	r0, r4
   12584:	add	r1, pc, r1
   12588:	bl	11158 <dcgettext@plt>
   1258c:	ldr	r2, [pc, #220]	; 12670 <strspn@plt+0x12fc>
   12590:	ldr	r3, [pc, #220]	; 12674 <strspn@plt+0x1300>
   12594:	add	r2, pc, r2
   12598:	add	r3, pc, r3
   1259c:	mov	r1, r0
   125a0:	mov	r0, #1
   125a4:	bl	112a8 <__printf_chk@plt>
   125a8:	mov	r0, #5
   125ac:	mov	r1, r4
   125b0:	bl	112fc <setlocale@plt>
   125b4:	cmp	r0, #0
   125b8:	beq	125d4 <strspn@plt+0x1260>
   125bc:	ldr	r1, [pc, #180]	; 12678 <strspn@plt+0x1304>
   125c0:	mov	r2, #3
   125c4:	add	r1, pc, r1
   125c8:	bl	11350 <strncmp@plt>
   125cc:	cmp	r0, #0
   125d0:	bne	12608 <strspn@plt+0x1294>
   125d4:	ldr	r1, [pc, #160]	; 1267c <strspn@plt+0x1308>
   125d8:	mov	r2, #5
   125dc:	mov	r0, #0
   125e0:	add	r1, pc, r1
   125e4:	bl	11158 <dcgettext@plt>
   125e8:	mov	r5, r0
   125ec:	ldr	r0, [r6]
   125f0:	bl	127c4 <close_stdout@@Base+0x118>
   125f4:	mov	r1, r5
   125f8:	mov	r2, r0
   125fc:	mov	r0, #1
   12600:	bl	112a8 <__printf_chk@plt>
   12604:	b	12498 <strspn@plt+0x1124>
   12608:	ldr	r1, [pc, #112]	; 12680 <strspn@plt+0x130c>
   1260c:	mov	r2, #5
   12610:	mov	r0, r4
   12614:	add	r1, pc, r1
   12618:	bl	11158 <dcgettext@plt>
   1261c:	mov	r5, r0
   12620:	ldr	r0, [r6]
   12624:	bl	127c4 <close_stdout@@Base+0x118>
   12628:	mov	r1, r5
   1262c:	mov	r2, r0
   12630:	mov	r0, #1
   12634:	bl	112a8 <__printf_chk@plt>
   12638:	b	125d4 <strspn@plt+0x1260>
   1263c:	andeq	r4, r1, r4, lsr #23
   12640:	andeq	r0, r0, r4, lsl r1
   12644:	andeq	r3, r0, r0, lsr #15
   12648:	andeq	r0, r0, r4, lsr r1
   1264c:	muleq	r0, r0, r7
   12650:	andeq	r3, r0, r8, lsl #15
   12654:	andeq	r0, r0, r8, lsr #2
   12658:	ldrdeq	r3, [r0], -ip
   1265c:	andeq	r3, r0, ip, lsl #16
   12660:	andeq	r3, r0, ip, ror #16
   12664:	muleq	r0, ip, r8
   12668:			; <UNDEFINED> instruction: 0x000038b0
   1266c:	andeq	r3, r0, ip, asr #17
   12670:	ldrdeq	r3, [r0], -r4
   12674:	andeq	r3, r0, r0, ror #17
   12678:	ldrdeq	r3, [r0], -ip
   1267c:	andeq	r3, r0, ip, lsl #18
   12680:	muleq	r0, r0, r8
   12684:	ldr	r3, [pc, #8]	; 12694 <strspn@plt+0x1320>
   12688:	add	r3, pc, r3
   1268c:	str	r0, [r3]
   12690:	bx	lr
   12694:	andeq	r4, r1, r8, lsr fp
   12698:	ldr	r3, [pc, #8]	; 126a8 <strspn@plt+0x1334>
   1269c:	add	r3, pc, r3
   126a0:	strb	r0, [r3, #4]
   126a4:	bx	lr
   126a8:	andeq	r4, r1, r4, lsr #22

000126ac <close_stdout@@Base>:
   126ac:	push	{r4, r5, r6, r7, lr}
   126b0:	sub	sp, sp, #12
   126b4:	ldr	r4, [pc, #228]	; 127a0 <close_stdout@@Base+0xf4>
   126b8:	ldr	r3, [pc, #228]	; 127a4 <close_stdout@@Base+0xf8>
   126bc:	add	r4, pc, r4
   126c0:	ldr	r3, [r4, r3]
   126c4:	ldr	r0, [r3]
   126c8:	bl	14acc <close_stdout@@Base+0x2420>
   126cc:	cmp	r0, #0
   126d0:	beq	126f8 <close_stdout@@Base+0x4c>
   126d4:	ldr	r3, [pc, #204]	; 127a8 <close_stdout@@Base+0xfc>
   126d8:	add	r3, pc, r3
   126dc:	ldrb	r3, [r3, #4]
   126e0:	cmp	r3, #0
   126e4:	beq	12718 <close_stdout@@Base+0x6c>
   126e8:	bl	11278 <__errno_location@plt>
   126ec:	ldr	r3, [r0]
   126f0:	cmp	r3, #32
   126f4:	bne	12718 <close_stdout@@Base+0x6c>
   126f8:	ldr	r3, [pc, #172]	; 127ac <close_stdout@@Base+0x100>
   126fc:	ldr	r3, [r4, r3]
   12700:	ldr	r0, [r3]
   12704:	bl	14acc <close_stdout@@Base+0x2420>
   12708:	cmp	r0, #0
   1270c:	bne	1276c <close_stdout@@Base+0xc0>
   12710:	add	sp, sp, #12
   12714:	pop	{r4, r5, r6, r7, pc}
   12718:	ldr	r1, [pc, #144]	; 127b0 <close_stdout@@Base+0x104>
   1271c:	mov	r0, #0
   12720:	mov	r2, #5
   12724:	add	r1, pc, r1
   12728:	bl	11158 <dcgettext@plt>
   1272c:	ldr	r3, [pc, #128]	; 127b4 <close_stdout@@Base+0x108>
   12730:	ldr	r5, [pc, r3]
   12734:	cmp	r5, #0
   12738:	mov	r6, r0
   1273c:	beq	1277c <close_stdout@@Base+0xd0>
   12740:	bl	11278 <__errno_location@plt>
   12744:	ldr	r7, [r0]
   12748:	mov	r0, r5
   1274c:	bl	13fa4 <close_stdout@@Base+0x18f8>
   12750:	ldr	r2, [pc, #96]	; 127b8 <close_stdout@@Base+0x10c>
   12754:	str	r6, [sp]
   12758:	mov	r1, r7
   1275c:	add	r2, pc, r2
   12760:	mov	r3, r0
   12764:	mov	r0, #0
   12768:	bl	111e8 <error@plt>
   1276c:	ldr	r3, [pc, #72]	; 127bc <close_stdout@@Base+0x110>
   12770:	ldr	r3, [r4, r3]
   12774:	ldr	r0, [r3]
   12778:	bl	11110 <_exit@plt>
   1277c:	bl	11278 <__errno_location@plt>
   12780:	ldr	r2, [pc, #56]	; 127c0 <close_stdout@@Base+0x114>
   12784:	add	r2, pc, r2
   12788:	mov	r3, r0
   1278c:	mov	r0, r5
   12790:	ldr	r1, [r3]
   12794:	mov	r3, r6
   12798:	bl	111e8 <error@plt>
   1279c:	b	1276c <close_stdout@@Base+0xc0>
   127a0:	andeq	r4, r1, ip, lsr r9
   127a4:	andeq	r0, r0, r8, lsr #2
   127a8:	andeq	r4, r1, r8, ror #21
   127ac:	andeq	r0, r0, r4, lsl r1
   127b0:	andeq	r3, r0, r4, lsl #17
   127b4:	muleq	r1, r0, sl
   127b8:	andeq	r3, r0, r4, lsl #17
   127bc:	andeq	r0, r0, ip, lsr #2
   127c0:	andeq	r3, r0, ip, asr r4
   127c4:	ldrb	r3, [r0]
   127c8:	cmp	r3, #47	; 0x2f
   127cc:	bne	127e8 <close_stdout@@Base+0x13c>
   127d0:	add	r2, r0, #1
   127d4:	mov	r0, r2
   127d8:	add	r2, r2, #1
   127dc:	ldrb	r3, [r0]
   127e0:	cmp	r3, #47	; 0x2f
   127e4:	beq	127d4 <close_stdout@@Base+0x128>
   127e8:	cmp	r3, #0
   127ec:	bxeq	lr
   127f0:	mov	r2, r0
   127f4:	mov	r1, #0
   127f8:	cmp	r3, #47	; 0x2f
   127fc:	moveq	r1, #1
   12800:	beq	12810 <close_stdout@@Base+0x164>
   12804:	cmp	r1, #0
   12808:	movne	r0, r2
   1280c:	movne	r1, #0
   12810:	ldrb	r3, [r2, #1]!
   12814:	cmp	r3, #0
   12818:	bne	127f8 <close_stdout@@Base+0x14c>
   1281c:	bx	lr
   12820:	push	{r4, lr}
   12824:	mov	r4, r0
   12828:	bl	11260 <strlen@plt>
   1282c:	cmp	r0, #1
   12830:	popls	{r4, pc}
   12834:	sub	r3, r0, #1
   12838:	ldrb	r2, [r4, r3]
   1283c:	cmp	r2, #47	; 0x2f
   12840:	popne	{r4, pc}
   12844:	mov	r0, r3
   12848:	cmp	r0, #1
   1284c:	sub	r3, r3, #1
   12850:	beq	12864 <close_stdout@@Base+0x1b8>
   12854:	ldrb	r2, [r4, r3]
   12858:	cmp	r2, #47	; 0x2f
   1285c:	popne	{r4, pc}
   12860:	b	12844 <close_stdout@@Base+0x198>
   12864:	pop	{r4, pc}
   12868:	b	110d4 <posix_fadvise64@plt>
   1286c:	cmp	r0, #0
   12870:	push	{r4, r5, r6, lr}
   12874:	mov	r6, r1
   12878:	sub	sp, sp, #16
   1287c:	beq	128a0 <close_stdout@@Base+0x1f4>
   12880:	mov	r4, #0
   12884:	mov	r5, #0
   12888:	bl	112b4 <fileno@plt>
   1288c:	str	r6, [sp, #8]
   12890:	mov	r2, r4
   12894:	mov	r3, r5
   12898:	strd	r4, [sp]
   1289c:	bl	12868 <close_stdout@@Base+0x1bc>
   128a0:	add	sp, sp, #16
   128a4:	pop	{r4, r5, r6, pc}
   128a8:	push	{r3, r4, r5, r6, r7, lr}
   128ac:	subs	r4, r0, #0
   128b0:	ldr	r5, [pc, #172]	; 12964 <close_stdout@@Base+0x2b8>
   128b4:	add	r5, pc, r5
   128b8:	beq	12940 <close_stdout@@Base+0x294>
   128bc:	mov	r1, #47	; 0x2f
   128c0:	bl	11308 <strrchr@plt>
   128c4:	subs	r6, r0, #0
   128c8:	beq	12924 <close_stdout@@Base+0x278>
   128cc:	add	r7, r6, #1
   128d0:	rsb	r3, r4, r7
   128d4:	cmp	r3, #6
   128d8:	ble	12924 <close_stdout@@Base+0x278>
   128dc:	ldr	r1, [pc, #132]	; 12968 <close_stdout@@Base+0x2bc>
   128e0:	sub	r0, r6, #6
   128e4:	mov	r2, #7
   128e8:	add	r1, pc, r1
   128ec:	bl	11350 <strncmp@plt>
   128f0:	cmp	r0, #0
   128f4:	bne	12924 <close_stdout@@Base+0x278>
   128f8:	ldr	r1, [pc, #108]	; 1296c <close_stdout@@Base+0x2c0>
   128fc:	mov	r0, r7
   12900:	mov	r2, #3
   12904:	add	r1, pc, r1
   12908:	bl	11350 <strncmp@plt>
   1290c:	cmp	r0, #0
   12910:	movne	r4, r7
   12914:	ldreq	r3, [pc, #84]	; 12970 <close_stdout@@Base+0x2c4>
   12918:	addeq	r4, r6, #4
   1291c:	ldreq	r3, [r5, r3]
   12920:	streq	r4, [r3]
   12924:	ldr	r2, [pc, #72]	; 12974 <close_stdout@@Base+0x2c8>
   12928:	ldr	r3, [pc, #72]	; 12978 <close_stdout@@Base+0x2cc>
   1292c:	ldr	r2, [r5, r2]
   12930:	str	r4, [r2]
   12934:	ldr	r3, [r5, r3]
   12938:	str	r4, [r3]
   1293c:	pop	{r3, r4, r5, r6, r7, pc}
   12940:	ldr	r3, [pc, #52]	; 1297c <close_stdout@@Base+0x2d0>
   12944:	mov	r1, #1
   12948:	ldr	r0, [pc, #48]	; 12980 <close_stdout@@Base+0x2d4>
   1294c:	mov	r2, #55	; 0x37
   12950:	ldr	r3, [r5, r3]
   12954:	add	r0, pc, r0
   12958:	ldr	r3, [r3]
   1295c:	bl	111a0 <fwrite@plt>
   12960:	bl	1135c <abort@plt>
   12964:	andeq	r4, r1, r4, asr #14
   12968:	andeq	r3, r0, r8, lsr r7
   1296c:	andeq	r3, r0, r4, lsr #14
   12970:	andeq	r0, r0, ip, lsr r1
   12974:	andeq	r0, r0, r4, lsr r1
   12978:	andeq	r0, r0, r0, lsr r1
   1297c:	andeq	r0, r0, r4, lsl r1
   12980:	muleq	r0, r4, r6
   12984:	push	{r3, lr}
   12988:	mov	r3, r0
   1298c:	mov	r2, #0
   12990:	cmp	r1, #8
   12994:	str	r2, [r3], #4
   12998:	add	r3, r3, #4
   1299c:	str	r2, [r0, #4]
   129a0:	str	r2, [r3], #4
   129a4:	str	r2, [r3], #4
   129a8:	str	r2, [r3], #4
   129ac:	str	r2, [r3], #4
   129b0:	str	r2, [r3], #4
   129b4:	str	r2, [r3], #4
   129b8:	str	r2, [r3], #4
   129bc:	str	r2, [r3], #4
   129c0:	str	r2, [r3], #4
   129c4:	str	r2, [r3]
   129c8:	beq	129d4 <close_stdout@@Base+0x328>
   129cc:	str	r1, [r0]
   129d0:	pop	{r3, pc}
   129d4:	bl	1135c <abort@plt>
   129d8:	push	{r4, r5, r6, lr}
   129dc:	mov	r4, r0
   129e0:	mov	r6, r1
   129e4:	mov	r0, #0
   129e8:	mov	r1, r4
   129ec:	mov	r2, #5
   129f0:	bl	11158 <dcgettext@plt>
   129f4:	cmp	r0, r4
   129f8:	mov	r5, r0
   129fc:	beq	12a04 <close_stdout@@Base+0x358>
   12a00:	pop	{r4, r5, r6, pc}
   12a04:	bl	14b4c <close_stdout@@Base+0x24a0>
   12a08:	ldrb	r3, [r0]
   12a0c:	bic	r3, r3, #32
   12a10:	cmp	r3, #85	; 0x55
   12a14:	bne	12a88 <close_stdout@@Base+0x3dc>
   12a18:	ldrb	r3, [r0, #1]
   12a1c:	bic	r3, r3, #32
   12a20:	cmp	r3, #84	; 0x54
   12a24:	bne	12a74 <close_stdout@@Base+0x3c8>
   12a28:	ldrb	r3, [r0, #2]
   12a2c:	bic	r3, r3, #32
   12a30:	cmp	r3, #70	; 0x46
   12a34:	bne	12a74 <close_stdout@@Base+0x3c8>
   12a38:	ldrb	r3, [r0, #3]
   12a3c:	cmp	r3, #45	; 0x2d
   12a40:	bne	12a74 <close_stdout@@Base+0x3c8>
   12a44:	ldrb	r3, [r0, #4]
   12a48:	cmp	r3, #56	; 0x38
   12a4c:	bne	12a74 <close_stdout@@Base+0x3c8>
   12a50:	ldrb	r3, [r0, #5]
   12a54:	cmp	r3, #0
   12a58:	bne	12a74 <close_stdout@@Base+0x3c8>
   12a5c:	ldrb	r3, [r5]
   12a60:	cmp	r3, #96	; 0x60
   12a64:	beq	12b00 <close_stdout@@Base+0x454>
   12a68:	ldr	r0, [pc, #180]	; 12b24 <close_stdout@@Base+0x478>
   12a6c:	add	r0, pc, r0
   12a70:	pop	{r4, r5, r6, pc}
   12a74:	cmp	r6, #7
   12a78:	beq	12b0c <close_stdout@@Base+0x460>
   12a7c:	ldr	r0, [pc, #164]	; 12b28 <close_stdout@@Base+0x47c>
   12a80:	add	r0, pc, r0
   12a84:	pop	{r4, r5, r6, pc}
   12a88:	cmp	r3, #71	; 0x47
   12a8c:	bne	12a74 <close_stdout@@Base+0x3c8>
   12a90:	ldrb	r3, [r0, #1]
   12a94:	bic	r3, r3, #32
   12a98:	cmp	r3, #66	; 0x42
   12a9c:	bne	12a74 <close_stdout@@Base+0x3c8>
   12aa0:	ldrb	r3, [r0, #2]
   12aa4:	cmp	r3, #49	; 0x31
   12aa8:	bne	12a74 <close_stdout@@Base+0x3c8>
   12aac:	ldrb	r3, [r0, #3]
   12ab0:	cmp	r3, #56	; 0x38
   12ab4:	bne	12a74 <close_stdout@@Base+0x3c8>
   12ab8:	ldrb	r3, [r0, #4]
   12abc:	cmp	r3, #48	; 0x30
   12ac0:	bne	12a74 <close_stdout@@Base+0x3c8>
   12ac4:	ldrb	r3, [r0, #5]
   12ac8:	cmp	r3, #51	; 0x33
   12acc:	bne	12a74 <close_stdout@@Base+0x3c8>
   12ad0:	ldrb	r3, [r0, #6]
   12ad4:	cmp	r3, #48	; 0x30
   12ad8:	bne	12a74 <close_stdout@@Base+0x3c8>
   12adc:	ldrb	r3, [r0, #7]
   12ae0:	cmp	r3, #0
   12ae4:	bne	12a74 <close_stdout@@Base+0x3c8>
   12ae8:	ldrb	r3, [r5]
   12aec:	cmp	r3, #96	; 0x60
   12af0:	beq	12b18 <close_stdout@@Base+0x46c>
   12af4:	ldr	r0, [pc, #48]	; 12b2c <close_stdout@@Base+0x480>
   12af8:	add	r0, pc, r0
   12afc:	pop	{r4, r5, r6, pc}
   12b00:	ldr	r0, [pc, #40]	; 12b30 <close_stdout@@Base+0x484>
   12b04:	add	r0, pc, r0
   12b08:	pop	{r4, r5, r6, pc}
   12b0c:	ldr	r0, [pc, #32]	; 12b34 <close_stdout@@Base+0x488>
   12b10:	add	r0, pc, r0
   12b14:	pop	{r4, r5, r6, pc}
   12b18:	ldr	r0, [pc, #24]	; 12b38 <close_stdout@@Base+0x48c>
   12b1c:	add	r0, pc, r0
   12b20:	pop	{r4, r5, r6, pc}
   12b24:	andeq	r3, r0, r0, ror #11
   12b28:	ldrdeq	r3, [r0], -r4
   12b2c:	andeq	r3, r0, r8, asr r5
   12b30:	andeq	r3, r0, ip, asr r5
   12b34:	andeq	r3, r0, r8, asr #10
   12b38:	andeq	r3, r0, r0, asr #10
   12b3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b40:	sub	sp, sp, #124	; 0x7c
   12b44:	ldr	ip, [pc, #3304]	; 13834 <close_stdout@@Base+0x1188>
   12b48:	mov	sl, r1
   12b4c:	str	r0, [sp, #40]	; 0x28
   12b50:	mov	r8, r3
   12b54:	ldr	r0, [pc, #3292]	; 13838 <close_stdout@@Base+0x118c>
   12b58:	add	ip, pc, ip
   12b5c:	str	r2, [sp, #32]
   12b60:	ldr	r1, [sp, #164]	; 0xa4
   12b64:	mov	r3, ip
   12b68:	ldr	r0, [ip, r0]
   12b6c:	ldr	r2, [sp, #172]	; 0xac
   12b70:	ubfx	r1, r1, #1, #1
   12b74:	str	r1, [sp, #36]	; 0x24
   12b78:	str	r0, [sp, #56]	; 0x38
   12b7c:	ldr	r0, [sp, #168]	; 0xa8
   12b80:	ldr	r1, [sp, #176]	; 0xb0
   12b84:	str	r2, [sp, #72]	; 0x48
   12b88:	str	r0, [sp, #48]	; 0x30
   12b8c:	ldr	r0, [sp, #56]	; 0x38
   12b90:	str	r1, [sp, #68]	; 0x44
   12b94:	ldr	r3, [r0]
   12b98:	str	r3, [sp, #116]	; 0x74
   12b9c:	bl	111b8 <__ctype_get_mb_cur_max@plt>
   12ba0:	ldr	r2, [sp, #160]	; 0xa0
   12ba4:	str	r0, [sp, #64]	; 0x40
   12ba8:	cmp	r2, #8
   12bac:	addls	pc, pc, r2, lsl #2
   12bb0:	b	13710 <close_stdout@@Base+0x1064>
   12bb4:	b	12bd8 <close_stdout@@Base+0x52c>
   12bb8:	b	13428 <close_stdout@@Base+0xd7c>
   12bbc:	b	13458 <close_stdout@@Base+0xdac>
   12bc0:	b	13308 <close_stdout@@Base+0xc5c>
   12bc4:	b	13348 <close_stdout@@Base+0xc9c>
   12bc8:	b	13374 <close_stdout@@Base+0xcc8>
   12bcc:	b	13394 <close_stdout@@Base+0xce8>
   12bd0:	b	13394 <close_stdout@@Base+0xce8>
   12bd4:	b	13394 <close_stdout@@Base+0xce8>
   12bd8:	mov	r2, #0
   12bdc:	str	r2, [sp, #36]	; 0x24
   12be0:	mov	r9, r2
   12be4:	str	r2, [sp, #24]
   12be8:	str	r2, [sp, #28]
   12bec:	str	r2, [sp, #52]	; 0x34
   12bf0:	ldr	r0, [sp, #36]	; 0x24
   12bf4:	mov	fp, #0
   12bf8:	ldr	r1, [sp, #24]
   12bfc:	eor	r2, r0, #1
   12c00:	eor	r3, r1, #1
   12c04:	and	r3, r2, r3
   12c08:	and	r2, r1, r0
   12c0c:	str	r3, [sp, #44]	; 0x2c
   12c10:	str	r2, [sp, #76]	; 0x4c
   12c14:	cmn	r8, #1
   12c18:	beq	12f98 <close_stdout@@Base+0x8ec>
   12c1c:	subs	r3, fp, r8
   12c20:	movne	r3, #1
   12c24:	cmp	r3, #0
   12c28:	beq	12fb0 <close_stdout@@Base+0x904>
   12c2c:	ldr	r3, [sp, #28]
   12c30:	ldr	r0, [sp, #24]
   12c34:	adds	r7, r3, #0
   12c38:	movne	r7, #1
   12c3c:	ands	r6, r7, r0
   12c40:	bne	1349c <close_stdout@@Base+0xdf0>
   12c44:	ldr	r1, [sp, #32]
   12c48:	add	r5, r1, fp
   12c4c:	ldrb	r4, [r5]
   12c50:	cmp	r4, #126	; 0x7e
   12c54:	addls	pc, pc, r4, lsl #2
   12c58:	b	1321c <close_stdout@@Base+0xb70>
   12c5c:	b	13128 <close_stdout@@Base+0xa7c>
   12c60:	b	1321c <close_stdout@@Base+0xb70>
   12c64:	b	1321c <close_stdout@@Base+0xb70>
   12c68:	b	1321c <close_stdout@@Base+0xb70>
   12c6c:	b	1321c <close_stdout@@Base+0xb70>
   12c70:	b	1321c <close_stdout@@Base+0xb70>
   12c74:	b	1321c <close_stdout@@Base+0xb70>
   12c78:	b	13110 <close_stdout@@Base+0xa64>
   12c7c:	b	130f8 <close_stdout@@Base+0xa4c>
   12c80:	b	13120 <close_stdout@@Base+0xa74>
   12c84:	b	13118 <close_stdout@@Base+0xa6c>
   12c88:	b	13108 <close_stdout@@Base+0xa5c>
   12c8c:	b	13100 <close_stdout@@Base+0xa54>
   12c90:	b	130c4 <close_stdout@@Base+0xa18>
   12c94:	b	1321c <close_stdout@@Base+0xb70>
   12c98:	b	1321c <close_stdout@@Base+0xb70>
   12c9c:	b	1321c <close_stdout@@Base+0xb70>
   12ca0:	b	1321c <close_stdout@@Base+0xb70>
   12ca4:	b	1321c <close_stdout@@Base+0xb70>
   12ca8:	b	1321c <close_stdout@@Base+0xb70>
   12cac:	b	1321c <close_stdout@@Base+0xb70>
   12cb0:	b	1321c <close_stdout@@Base+0xb70>
   12cb4:	b	1321c <close_stdout@@Base+0xb70>
   12cb8:	b	1321c <close_stdout@@Base+0xb70>
   12cbc:	b	1321c <close_stdout@@Base+0xb70>
   12cc0:	b	1321c <close_stdout@@Base+0xb70>
   12cc4:	b	1321c <close_stdout@@Base+0xb70>
   12cc8:	b	1321c <close_stdout@@Base+0xb70>
   12ccc:	b	1321c <close_stdout@@Base+0xb70>
   12cd0:	b	1321c <close_stdout@@Base+0xb70>
   12cd4:	b	1321c <close_stdout@@Base+0xb70>
   12cd8:	b	1321c <close_stdout@@Base+0xb70>
   12cdc:	b	13050 <close_stdout@@Base+0x9a4>
   12ce0:	b	13050 <close_stdout@@Base+0x9a4>
   12ce4:	b	13050 <close_stdout@@Base+0x9a4>
   12ce8:	b	13048 <close_stdout@@Base+0x99c>
   12cec:	b	13050 <close_stdout@@Base+0x9a4>
   12cf0:	b	12f24 <close_stdout@@Base+0x878>
   12cf4:	b	13050 <close_stdout@@Base+0x9a4>
   12cf8:	b	131c4 <close_stdout@@Base+0xb18>
   12cfc:	b	13050 <close_stdout@@Base+0x9a4>
   12d00:	b	13050 <close_stdout@@Base+0x9a4>
   12d04:	b	13050 <close_stdout@@Base+0x9a4>
   12d08:	b	12f24 <close_stdout@@Base+0x878>
   12d0c:	b	12f24 <close_stdout@@Base+0x878>
   12d10:	b	12f24 <close_stdout@@Base+0x878>
   12d14:	b	12f24 <close_stdout@@Base+0x878>
   12d18:	b	12f24 <close_stdout@@Base+0x878>
   12d1c:	b	12f24 <close_stdout@@Base+0x878>
   12d20:	b	12f24 <close_stdout@@Base+0x878>
   12d24:	b	12f24 <close_stdout@@Base+0x878>
   12d28:	b	12f24 <close_stdout@@Base+0x878>
   12d2c:	b	12f24 <close_stdout@@Base+0x878>
   12d30:	b	12f24 <close_stdout@@Base+0x878>
   12d34:	b	12f24 <close_stdout@@Base+0x878>
   12d38:	b	12f24 <close_stdout@@Base+0x878>
   12d3c:	b	12f24 <close_stdout@@Base+0x878>
   12d40:	b	12f24 <close_stdout@@Base+0x878>
   12d44:	b	12f24 <close_stdout@@Base+0x878>
   12d48:	b	13050 <close_stdout@@Base+0x9a4>
   12d4c:	b	13050 <close_stdout@@Base+0x9a4>
   12d50:	b	13050 <close_stdout@@Base+0x9a4>
   12d54:	b	13050 <close_stdout@@Base+0x9a4>
   12d58:	b	12e58 <close_stdout@@Base+0x7ac>
   12d5c:	b	1321c <close_stdout@@Base+0xb70>
   12d60:	b	12f24 <close_stdout@@Base+0x878>
   12d64:	b	12f24 <close_stdout@@Base+0x878>
   12d68:	b	12f24 <close_stdout@@Base+0x878>
   12d6c:	b	12f24 <close_stdout@@Base+0x878>
   12d70:	b	12f24 <close_stdout@@Base+0x878>
   12d74:	b	12f24 <close_stdout@@Base+0x878>
   12d78:	b	12f24 <close_stdout@@Base+0x878>
   12d7c:	b	12f24 <close_stdout@@Base+0x878>
   12d80:	b	12f24 <close_stdout@@Base+0x878>
   12d84:	b	12f24 <close_stdout@@Base+0x878>
   12d88:	b	12f24 <close_stdout@@Base+0x878>
   12d8c:	b	12f24 <close_stdout@@Base+0x878>
   12d90:	b	12f24 <close_stdout@@Base+0x878>
   12d94:	b	12f24 <close_stdout@@Base+0x878>
   12d98:	b	12f24 <close_stdout@@Base+0x878>
   12d9c:	b	12f24 <close_stdout@@Base+0x878>
   12da0:	b	12f24 <close_stdout@@Base+0x878>
   12da4:	b	12f24 <close_stdout@@Base+0x878>
   12da8:	b	12f24 <close_stdout@@Base+0x878>
   12dac:	b	12f24 <close_stdout@@Base+0x878>
   12db0:	b	12f24 <close_stdout@@Base+0x878>
   12db4:	b	12f24 <close_stdout@@Base+0x878>
   12db8:	b	12f24 <close_stdout@@Base+0x878>
   12dbc:	b	12f24 <close_stdout@@Base+0x878>
   12dc0:	b	12f24 <close_stdout@@Base+0x878>
   12dc4:	b	12f24 <close_stdout@@Base+0x878>
   12dc8:	b	13050 <close_stdout@@Base+0x9a4>
   12dcc:	b	131a8 <close_stdout@@Base+0xafc>
   12dd0:	b	12f24 <close_stdout@@Base+0x878>
   12dd4:	b	13050 <close_stdout@@Base+0x9a4>
   12dd8:	b	12f24 <close_stdout@@Base+0x878>
   12ddc:	b	13050 <close_stdout@@Base+0x9a4>
   12de0:	b	12f24 <close_stdout@@Base+0x878>
   12de4:	b	12f24 <close_stdout@@Base+0x878>
   12de8:	b	12f24 <close_stdout@@Base+0x878>
   12dec:	b	12f24 <close_stdout@@Base+0x878>
   12df0:	b	12f24 <close_stdout@@Base+0x878>
   12df4:	b	12f24 <close_stdout@@Base+0x878>
   12df8:	b	12f24 <close_stdout@@Base+0x878>
   12dfc:	b	12f24 <close_stdout@@Base+0x878>
   12e00:	b	12f24 <close_stdout@@Base+0x878>
   12e04:	b	12f24 <close_stdout@@Base+0x878>
   12e08:	b	12f24 <close_stdout@@Base+0x878>
   12e0c:	b	12f24 <close_stdout@@Base+0x878>
   12e10:	b	12f24 <close_stdout@@Base+0x878>
   12e14:	b	12f24 <close_stdout@@Base+0x878>
   12e18:	b	12f24 <close_stdout@@Base+0x878>
   12e1c:	b	12f24 <close_stdout@@Base+0x878>
   12e20:	b	12f24 <close_stdout@@Base+0x878>
   12e24:	b	12f24 <close_stdout@@Base+0x878>
   12e28:	b	12f24 <close_stdout@@Base+0x878>
   12e2c:	b	12f24 <close_stdout@@Base+0x878>
   12e30:	b	12f24 <close_stdout@@Base+0x878>
   12e34:	b	12f24 <close_stdout@@Base+0x878>
   12e38:	b	12f24 <close_stdout@@Base+0x878>
   12e3c:	b	12f24 <close_stdout@@Base+0x878>
   12e40:	b	12f24 <close_stdout@@Base+0x878>
   12e44:	b	12f24 <close_stdout@@Base+0x878>
   12e48:	b	13030 <close_stdout@@Base+0x984>
   12e4c:	b	13050 <close_stdout@@Base+0x9a4>
   12e50:	b	13030 <close_stdout@@Base+0x984>
   12e54:	b	13048 <close_stdout@@Base+0x99c>
   12e58:	ldr	r3, [sp, #160]	; 0xa0
   12e5c:	cmp	r3, #2
   12e60:	beq	136ec <close_stdout@@Base+0x1040>
   12e64:	cmp	r3, #3
   12e68:	bne	12f24 <close_stdout@@Base+0x878>
   12e6c:	ldr	r1, [sp, #164]	; 0xa4
   12e70:	tst	r1, #4
   12e74:	beq	12f24 <close_stdout@@Base+0x878>
   12e78:	add	r3, fp, #2
   12e7c:	cmp	r8, r3
   12e80:	bls	12f24 <close_stdout@@Base+0x878>
   12e84:	ldrb	r2, [r5, #1]
   12e88:	mov	r1, #1
   12e8c:	cmp	r2, #63	; 0x3f
   12e90:	bne	12f24 <close_stdout@@Base+0x878>
   12e94:	ldr	r0, [sp, #32]
   12e98:	ldrb	ip, [r0, r3]
   12e9c:	sub	r0, ip, #33	; 0x21
   12ea0:	uxtb	r0, r0
   12ea4:	cmp	r0, #29
   12ea8:	bhi	12f24 <close_stdout@@Base+0x878>
   12eac:	lsl	r1, r1, r0
   12eb0:	movw	r0, #20929	; 0x51c1
   12eb4:	movt	r0, #14336	; 0x3800
   12eb8:	and	r0, r1, r0
   12ebc:	cmp	r0, #0
   12ec0:	beq	12f24 <close_stdout@@Base+0x878>
   12ec4:	ldr	r1, [sp, #36]	; 0x24
   12ec8:	cmp	r1, #0
   12ecc:	bne	1306c <close_stdout@@Base+0x9c0>
   12ed0:	cmp	r9, sl
   12ed4:	mov	r4, ip
   12ed8:	mov	fp, r3
   12edc:	ldrcc	r0, [sp, #40]	; 0x28
   12ee0:	strbcc	r2, [r0, r9]
   12ee4:	add	r2, r9, #1
   12ee8:	cmp	sl, r2
   12eec:	ldrhi	r0, [sp, #40]	; 0x28
   12ef0:	movhi	r1, #34	; 0x22
   12ef4:	strbhi	r1, [r0, r2]
   12ef8:	add	r2, r9, #2
   12efc:	cmp	sl, r2
   12f00:	ldrhi	r0, [sp, #40]	; 0x28
   12f04:	movhi	r1, #34	; 0x22
   12f08:	strbhi	r1, [r0, r2]
   12f0c:	add	r2, r9, #3
   12f10:	cmp	sl, r2
   12f14:	add	r9, r9, #4
   12f18:	ldrhi	r0, [sp, #40]	; 0x28
   12f1c:	movhi	r1, #63	; 0x3f
   12f20:	strbhi	r1, [r0, r2]
   12f24:	ldr	r0, [sp, #44]	; 0x2c
   12f28:	cmp	r0, #0
   12f2c:	bne	12f54 <close_stdout@@Base+0x8a8>
   12f30:	ldr	r1, [sp, #48]	; 0x30
   12f34:	cmp	r1, #0
   12f38:	beq	12f54 <close_stdout@@Base+0x8a8>
   12f3c:	ubfx	r2, r4, #5, #8
   12f40:	and	r3, r4, #31
   12f44:	ldr	r2, [r1, r2, lsl #2]
   12f48:	lsr	r3, r2, r3
   12f4c:	tst	r3, #1
   12f50:	bne	12f5c <close_stdout@@Base+0x8b0>
   12f54:	cmp	r6, #0
   12f58:	beq	12f7c <close_stdout@@Base+0x8d0>
   12f5c:	ldr	r2, [sp, #36]	; 0x24
   12f60:	cmp	r2, #0
   12f64:	bne	1306c <close_stdout@@Base+0x9c0>
   12f68:	cmp	r9, sl
   12f6c:	ldrcc	r0, [sp, #40]	; 0x28
   12f70:	movcc	r3, #92	; 0x5c
   12f74:	strbcc	r3, [r0, r9]
   12f78:	add	r9, r9, #1
   12f7c:	add	fp, fp, #1
   12f80:	cmp	r9, sl
   12f84:	ldrcc	r1, [sp, #40]	; 0x28
   12f88:	strbcc	r4, [r1, r9]
   12f8c:	cmn	r8, #1
   12f90:	add	r9, r9, #1
   12f94:	bne	12c1c <close_stdout@@Base+0x570>
   12f98:	ldr	r2, [sp, #32]
   12f9c:	ldrb	r3, [r2, fp]
   12fa0:	adds	r3, r3, #0
   12fa4:	movne	r3, #1
   12fa8:	cmp	r3, #0
   12fac:	bne	12c2c <close_stdout@@Base+0x580>
   12fb0:	ldr	r3, [sp, #160]	; 0xa0
   12fb4:	cmp	r9, #0
   12fb8:	cmpeq	r3, #2
   12fbc:	bne	12fcc <close_stdout@@Base+0x920>
   12fc0:	ldr	r0, [sp, #36]	; 0x24
   12fc4:	cmp	r0, #0
   12fc8:	bne	1306c <close_stdout@@Base+0x9c0>
   12fcc:	ldr	r1, [sp, #36]	; 0x24
   12fd0:	ldr	r2, [sp, #52]	; 0x34
   12fd4:	eor	r3, r1, #1
   12fd8:	cmp	r2, #0
   12fdc:	moveq	r3, #0
   12fe0:	andne	r3, r3, #1
   12fe4:	cmp	r3, #0
   12fe8:	beq	13014 <close_stdout@@Base+0x968>
   12fec:	ldrb	r3, [r2]
   12ff0:	cmp	r3, #0
   12ff4:	beq	13014 <close_stdout@@Base+0x968>
   12ff8:	ldr	r1, [sp, #40]	; 0x28
   12ffc:	cmp	sl, r9
   13000:	strbhi	r3, [r1, r9]
   13004:	ldrb	r3, [r2, #1]!
   13008:	add	r9, r9, #1
   1300c:	cmp	r3, #0
   13010:	bne	12ffc <close_stdout@@Base+0x950>
   13014:	cmp	r9, sl
   13018:	movcs	r0, r9
   1301c:	ldrcc	r1, [sp, #40]	; 0x28
   13020:	movcc	r3, #0
   13024:	movcc	r0, r9
   13028:	strbcc	r3, [r1, r9]
   1302c:	b	130a8 <close_stdout@@Base+0x9fc>
   13030:	cmn	r8, #1
   13034:	beq	136fc <close_stdout@@Base+0x1050>
   13038:	subs	r3, r8, #1
   1303c:	movne	r3, #1
   13040:	cmp	r3, #0
   13044:	bne	12f24 <close_stdout@@Base+0x878>
   13048:	cmp	fp, #0
   1304c:	bne	12f24 <close_stdout@@Base+0x878>
   13050:	ldr	r3, [sp, #36]	; 0x24
   13054:	ldr	r0, [sp, #160]	; 0xa0
   13058:	cmp	r0, #2
   1305c:	movne	r3, #0
   13060:	andeq	r3, r3, #1
   13064:	cmp	r3, #0
   13068:	beq	12f24 <close_stdout@@Base+0x878>
   1306c:	ldr	r2, [sp, #164]	; 0xa4
   13070:	mov	ip, #0
   13074:	ldr	r0, [sp, #160]	; 0xa0
   13078:	bic	r3, r2, #2
   1307c:	ldr	r1, [sp, #72]	; 0x48
   13080:	ldr	r2, [sp, #68]	; 0x44
   13084:	stm	sp, {r0, r3}
   13088:	mov	r3, r8
   1308c:	str	r1, [sp, #12]
   13090:	mov	r1, sl
   13094:	str	r2, [sp, #16]
   13098:	ldr	r0, [sp, #40]	; 0x28
   1309c:	ldr	r2, [sp, #32]
   130a0:	str	ip, [sp, #8]
   130a4:	bl	12b3c <close_stdout@@Base+0x490>
   130a8:	ldr	r1, [sp, #56]	; 0x38
   130ac:	ldr	r2, [sp, #116]	; 0x74
   130b0:	ldr	r3, [r1]
   130b4:	cmp	r2, r3
   130b8:	bne	137ec <close_stdout@@Base+0x1140>
   130bc:	add	sp, sp, #124	; 0x7c
   130c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130c4:	mov	r3, #114	; 0x72
   130c8:	ldr	r2, [sp, #36]	; 0x24
   130cc:	ldr	r0, [sp, #160]	; 0xa0
   130d0:	cmp	r0, #2
   130d4:	movne	r2, #0
   130d8:	andeq	r2, r2, #1
   130dc:	cmp	r2, #0
   130e0:	bne	1306c <close_stdout@@Base+0x9c0>
   130e4:	ldr	r1, [sp, #24]
   130e8:	cmp	r1, #0
   130ec:	beq	12f24 <close_stdout@@Base+0x878>
   130f0:	mov	r4, r3
   130f4:	b	12f5c <close_stdout@@Base+0x8b0>
   130f8:	mov	r3, #98	; 0x62
   130fc:	b	130e4 <close_stdout@@Base+0xa38>
   13100:	mov	r3, #102	; 0x66
   13104:	b	130e4 <close_stdout@@Base+0xa38>
   13108:	mov	r3, #118	; 0x76
   1310c:	b	130e4 <close_stdout@@Base+0xa38>
   13110:	mov	r3, #97	; 0x61
   13114:	b	130e4 <close_stdout@@Base+0xa38>
   13118:	mov	r3, #110	; 0x6e
   1311c:	b	130c8 <close_stdout@@Base+0xa1c>
   13120:	mov	r3, #116	; 0x74
   13124:	b	130c8 <close_stdout@@Base+0xa1c>
   13128:	ldr	r2, [sp, #24]
   1312c:	cmp	r2, #0
   13130:	beq	136d8 <close_stdout@@Base+0x102c>
   13134:	ldr	r3, [sp, #36]	; 0x24
   13138:	cmp	r3, #0
   1313c:	bne	1306c <close_stdout@@Base+0x9c0>
   13140:	cmp	r9, sl
   13144:	add	r2, r9, #1
   13148:	ldrcc	r0, [sp, #40]	; 0x28
   1314c:	movcc	r3, #92	; 0x5c
   13150:	strbcc	r3, [r0, r9]
   13154:	add	r3, fp, #1
   13158:	cmp	r8, r3
   1315c:	bls	1319c <close_stdout@@Base+0xaf0>
   13160:	ldr	r1, [sp, #32]
   13164:	ldrb	r3, [r1, r3]
   13168:	sub	r3, r3, #48	; 0x30
   1316c:	cmp	r3, #9
   13170:	bhi	1319c <close_stdout@@Base+0xaf0>
   13174:	cmp	sl, r2
   13178:	ldrhi	r0, [sp, #40]	; 0x28
   1317c:	movhi	r3, #48	; 0x30
   13180:	strbhi	r3, [r0, r2]
   13184:	add	r3, r9, #2
   13188:	cmp	sl, r3
   1318c:	ldrhi	r1, [sp, #40]	; 0x28
   13190:	movhi	r2, #48	; 0x30
   13194:	strbhi	r2, [r1, r3]
   13198:	add	r2, r9, #3
   1319c:	mov	r9, r2
   131a0:	mov	r4, #48	; 0x30
   131a4:	b	12f30 <close_stdout@@Base+0x884>
   131a8:	ldr	r1, [sp, #76]	; 0x4c
   131ac:	cmp	r1, #0
   131b0:	beq	131bc <close_stdout@@Base+0xb10>
   131b4:	cmp	r7, #0
   131b8:	bne	12f7c <close_stdout@@Base+0x8d0>
   131bc:	mov	r3, r4
   131c0:	b	130c8 <close_stdout@@Base+0xa1c>
   131c4:	ldr	r1, [sp, #160]	; 0xa0
   131c8:	cmp	r1, #2
   131cc:	bne	12f24 <close_stdout@@Base+0x878>
   131d0:	ldr	r2, [sp, #36]	; 0x24
   131d4:	cmp	r2, #0
   131d8:	bne	1306c <close_stdout@@Base+0x9c0>
   131dc:	cmp	r9, sl
   131e0:	ldrcc	r0, [sp, #40]	; 0x28
   131e4:	movcc	r3, #39	; 0x27
   131e8:	strbcc	r3, [r0, r9]
   131ec:	add	r3, r9, #1
   131f0:	cmp	sl, r3
   131f4:	ldrhi	r1, [sp, #40]	; 0x28
   131f8:	movhi	r2, #92	; 0x5c
   131fc:	strbhi	r2, [r1, r3]
   13200:	add	r3, r9, #2
   13204:	cmp	sl, r3
   13208:	add	r9, r9, #3
   1320c:	ldrhi	r0, [sp, #40]	; 0x28
   13210:	movhi	r2, #39	; 0x27
   13214:	strbhi	r2, [r0, r3]
   13218:	b	12f24 <close_stdout@@Base+0x878>
   1321c:	ldr	r1, [sp, #64]	; 0x40
   13220:	cmp	r1, #1
   13224:	bne	1351c <close_stdout@@Base+0xe70>
   13228:	bl	11248 <__ctype_b_loc@plt>
   1322c:	ldr	r2, [sp, #64]	; 0x40
   13230:	sxth	r3, r4
   13234:	str	r2, [sp, #60]	; 0x3c
   13238:	lsl	r3, r3, #1
   1323c:	ldr	r2, [r0]
   13240:	ldrh	r2, [r2, r3]
   13244:	eor	r2, r2, #16384	; 0x4000
   13248:	ubfx	r2, r2, #14, #1
   1324c:	ldr	r1, [sp, #24]
   13250:	ands	r2, r2, r1
   13254:	beq	12f24 <close_stdout@@Base+0x878>
   13258:	ldr	r3, [sp, #60]	; 0x3c
   1325c:	mov	r0, #92	; 0x5c
   13260:	ldr	r7, [sp, #36]	; 0x24
   13264:	add	r1, r3, fp
   13268:	str	r8, [sp, #60]	; 0x3c
   1326c:	ldr	r3, [sp, #40]	; 0x28
   13270:	b	132d4 <close_stdout@@Base+0xc28>
   13274:	cmp	r7, #0
   13278:	bne	13714 <close_stdout@@Base+0x1068>
   1327c:	add	ip, r9, #1
   13280:	cmp	r9, sl
   13284:	strbcc	r0, [r3, r9]
   13288:	cmp	sl, ip
   1328c:	lsrhi	r8, r4, #6
   13290:	addhi	r8, r8, #48	; 0x30
   13294:	strbhi	r8, [r3, ip]
   13298:	add	ip, r9, #2
   1329c:	add	r9, r9, #3
   132a0:	cmp	sl, ip
   132a4:	ubfxhi	r8, r4, #3, #3
   132a8:	and	r4, r4, #7
   132ac:	add	r4, r4, #48	; 0x30
   132b0:	addhi	r8, r8, #48	; 0x30
   132b4:	strbhi	r8, [r3, ip]
   132b8:	add	fp, fp, #1
   132bc:	cmp	r1, fp
   132c0:	bls	13300 <close_stdout@@Base+0xc54>
   132c4:	cmp	r9, sl
   132c8:	strbcc	r4, [r3, r9]
   132cc:	ldrb	r4, [r5, #1]!
   132d0:	add	r9, r9, #1
   132d4:	cmp	r2, #0
   132d8:	bne	13274 <close_stdout@@Base+0xbc8>
   132dc:	cmp	r6, #0
   132e0:	beq	132b8 <close_stdout@@Base+0xc0c>
   132e4:	add	fp, fp, #1
   132e8:	cmp	r9, sl
   132ec:	strbcc	r0, [r3, r9]
   132f0:	cmp	r1, fp
   132f4:	add	r9, r9, #1
   132f8:	mov	r6, #0
   132fc:	bhi	132c4 <close_stdout@@Base+0xc18>
   13300:	ldr	r8, [sp, #60]	; 0x3c
   13304:	b	12f80 <close_stdout@@Base+0x8d4>
   13308:	ldr	r3, [sp, #36]	; 0x24
   1330c:	cmp	r3, #0
   13310:	bne	13814 <close_stdout@@Base+0x1168>
   13314:	cmp	sl, #0
   13318:	beq	1372c <close_stdout@@Base+0x1080>
   1331c:	ldr	r1, [sp, #40]	; 0x28
   13320:	mov	r0, #1
   13324:	ldr	r2, [pc, #1296]	; 1383c <close_stdout@@Base+0x1190>
   13328:	mov	r3, #34	; 0x22
   1332c:	str	r0, [sp, #24]
   13330:	mov	r9, r0
   13334:	add	r2, pc, r2
   13338:	str	r0, [sp, #28]
   1333c:	strb	r3, [r1]
   13340:	str	r2, [sp, #52]	; 0x34
   13344:	b	12bf0 <close_stdout@@Base+0x544>
   13348:	ldr	r3, [pc, #1264]	; 13840 <close_stdout@@Base+0x1194>
   1334c:	mov	r2, #1
   13350:	mov	r0, #3
   13354:	str	r2, [sp, #36]	; 0x24
   13358:	add	r3, pc, r3
   1335c:	str	r2, [sp, #24]
   13360:	str	r3, [sp, #52]	; 0x34
   13364:	mov	r9, #0
   13368:	str	r2, [sp, #28]
   1336c:	str	r0, [sp, #160]	; 0xa0
   13370:	b	12bf0 <close_stdout@@Base+0x544>
   13374:	mov	r0, #0
   13378:	mov	r1, #1
   1337c:	str	r0, [sp, #36]	; 0x24
   13380:	mov	r9, r0
   13384:	str	r1, [sp, #24]
   13388:	str	r0, [sp, #28]
   1338c:	str	r0, [sp, #52]	; 0x34
   13390:	b	12bf0 <close_stdout@@Base+0x544>
   13394:	ldr	r3, [sp, #160]	; 0xa0
   13398:	cmp	r3, #8
   1339c:	beq	133c8 <close_stdout@@Base+0xd1c>
   133a0:	ldr	r0, [pc, #1180]	; 13844 <close_stdout@@Base+0x1198>
   133a4:	mov	r1, r3
   133a8:	add	r0, pc, r0
   133ac:	bl	129d8 <close_stdout@@Base+0x32c>
   133b0:	ldr	r1, [sp, #160]	; 0xa0
   133b4:	str	r0, [sp, #72]	; 0x48
   133b8:	ldr	r0, [pc, #1160]	; 13848 <close_stdout@@Base+0x119c>
   133bc:	add	r0, pc, r0
   133c0:	bl	129d8 <close_stdout@@Base+0x32c>
   133c4:	str	r0, [sp, #68]	; 0x44
   133c8:	ldr	r0, [sp, #36]	; 0x24
   133cc:	cmp	r0, #0
   133d0:	movne	r9, #0
   133d4:	bne	1340c <close_stdout@@Base+0xd60>
   133d8:	ldr	r1, [sp, #72]	; 0x48
   133dc:	ldrb	r3, [r1]
   133e0:	cmp	r3, #0
   133e4:	beq	137e4 <close_stdout@@Base+0x1138>
   133e8:	mov	r2, r1
   133ec:	ldr	r1, [sp, #40]	; 0x28
   133f0:	mov	r9, r0
   133f4:	cmp	r9, sl
   133f8:	strbcc	r3, [r1, r9]
   133fc:	ldrb	r3, [r2, #1]!
   13400:	add	r9, r9, #1
   13404:	cmp	r3, #0
   13408:	bne	133f4 <close_stdout@@Base+0xd48>
   1340c:	ldr	r0, [sp, #68]	; 0x44
   13410:	str	r0, [sp, #52]	; 0x34
   13414:	bl	11260 <strlen@plt>
   13418:	mov	r2, #1
   1341c:	str	r2, [sp, #24]
   13420:	str	r0, [sp, #28]
   13424:	b	12bf0 <close_stdout@@Base+0x544>
   13428:	ldr	r3, [pc, #1052]	; 1384c <close_stdout@@Base+0x11a0>
   1342c:	mov	r2, #0
   13430:	mov	r1, #1
   13434:	mov	r0, #2
   13438:	add	r3, pc, r3
   1343c:	str	r1, [sp, #36]	; 0x24
   13440:	str	r2, [sp, #24]
   13444:	mov	r9, r2
   13448:	str	r1, [sp, #28]
   1344c:	str	r3, [sp, #52]	; 0x34
   13450:	str	r0, [sp, #160]	; 0xa0
   13454:	b	12bf0 <close_stdout@@Base+0x544>
   13458:	ldr	r3, [sp, #36]	; 0x24
   1345c:	cmp	r3, #0
   13460:	bne	137f0 <close_stdout@@Base+0x1144>
   13464:	cmp	sl, #0
   13468:	beq	1374c <close_stdout@@Base+0x10a0>
   1346c:	ldr	r1, [sp, #40]	; 0x28
   13470:	mov	r3, #39	; 0x27
   13474:	ldr	r2, [sp, #36]	; 0x24
   13478:	mov	r0, #1
   1347c:	mov	r9, r0
   13480:	str	r0, [sp, #28]
   13484:	strb	r3, [r1]
   13488:	ldr	r3, [pc, #960]	; 13850 <close_stdout@@Base+0x11a4>
   1348c:	str	r2, [sp, #24]
   13490:	add	r3, pc, r3
   13494:	str	r3, [sp, #52]	; 0x34
   13498:	b	12bf0 <close_stdout@@Base+0x544>
   1349c:	ldr	r2, [sp, #28]
   134a0:	cmp	r2, #1
   134a4:	add	r4, fp, r2
   134a8:	movls	r3, #0
   134ac:	movhi	r3, #1
   134b0:	cmn	r8, #1
   134b4:	movne	r3, #0
   134b8:	cmp	r3, #0
   134bc:	beq	134cc <close_stdout@@Base+0xe20>
   134c0:	ldr	r0, [sp, #32]
   134c4:	bl	11260 <strlen@plt>
   134c8:	mov	r8, r0
   134cc:	cmp	r8, r4
   134d0:	ldrcc	r3, [sp, #32]
   134d4:	movcc	r6, #0
   134d8:	addcc	r5, r3, fp
   134dc:	bcc	12c4c <close_stdout@@Base+0x5a0>
   134e0:	ldr	r0, [sp, #32]
   134e4:	ldr	r1, [sp, #52]	; 0x34
   134e8:	add	r5, r0, fp
   134ec:	ldr	r2, [sp, #28]
   134f0:	mov	r0, r5
   134f4:	bl	1114c <memcmp@plt>
   134f8:	cmp	r0, #0
   134fc:	bne	13514 <close_stdout@@Base+0xe68>
   13500:	ldr	r1, [sp, #36]	; 0x24
   13504:	cmp	r1, #0
   13508:	bne	1306c <close_stdout@@Base+0x9c0>
   1350c:	mov	r6, #1
   13510:	b	12c4c <close_stdout@@Base+0x5a0>
   13514:	mov	r6, #0
   13518:	b	12c4c <close_stdout@@Base+0x5a0>
   1351c:	add	r7, sp, #108	; 0x6c
   13520:	cmn	r8, #1
   13524:	mov	r3, #0
   13528:	str	r3, [sp, #108]	; 0x6c
   1352c:	str	r3, [r7, #4]
   13530:	beq	1371c <close_stdout@@Base+0x1070>
   13534:	mov	r1, #0
   13538:	ldr	r0, [sp, #32]
   1353c:	mov	ip, #1
   13540:	str	r9, [sp, #88]	; 0x58
   13544:	str	r6, [sp, #96]	; 0x60
   13548:	mov	r9, r1
   1354c:	str	r5, [sp, #100]	; 0x64
   13550:	mov	r6, ip
   13554:	mov	r5, r7
   13558:	add	r3, sp, #104	; 0x68
   1355c:	sub	r0, r0, #1
   13560:	str	r3, [sp, #80]	; 0x50
   13564:	str	r0, [sp, #84]	; 0x54
   13568:	str	r1, [sp, #60]	; 0x3c
   1356c:	str	r4, [sp, #92]	; 0x5c
   13570:	ldr	r2, [sp, #32]
   13574:	add	r7, r9, fp
   13578:	add	r0, sp, #104	; 0x68
   1357c:	mov	r3, r5
   13580:	add	r4, r2, r7
   13584:	rsb	r2, r7, r8
   13588:	mov	r1, r4
   1358c:	bl	111dc <mbrtowc@plt>
   13590:	subs	r2, r0, #0
   13594:	beq	136a0 <close_stdout@@Base+0xff4>
   13598:	cmn	r2, #1
   1359c:	beq	137c8 <close_stdout@@Base+0x111c>
   135a0:	cmn	r2, #2
   135a4:	beq	1376c <close_stdout@@Base+0x10c0>
   135a8:	ldr	r3, [sp, #36]	; 0x24
   135ac:	ldr	r0, [sp, #160]	; 0xa0
   135b0:	cmp	r0, #2
   135b4:	movne	r3, #0
   135b8:	andeq	r3, r3, #1
   135bc:	cmp	r3, #0
   135c0:	beq	1367c <close_stdout@@Base+0xfd0>
   135c4:	cmp	r2, #1
   135c8:	beq	1367c <close_stdout@@Base+0xfd0>
   135cc:	ldr	r1, [sp, #84]	; 0x54
   135d0:	add	r3, r1, r2
   135d4:	add	r7, r3, r7
   135d8:	ldrb	r3, [r4, #1]!
   135dc:	sub	r3, r3, #91	; 0x5b
   135e0:	cmp	r3, #33	; 0x21
   135e4:	addls	pc, pc, r3, lsl #2
   135e8:	b	13674 <close_stdout@@Base+0xfc8>
   135ec:	b	1306c <close_stdout@@Base+0x9c0>
   135f0:	b	1306c <close_stdout@@Base+0x9c0>
   135f4:	b	13674 <close_stdout@@Base+0xfc8>
   135f8:	b	1306c <close_stdout@@Base+0x9c0>
   135fc:	b	13674 <close_stdout@@Base+0xfc8>
   13600:	b	1306c <close_stdout@@Base+0x9c0>
   13604:	b	13674 <close_stdout@@Base+0xfc8>
   13608:	b	13674 <close_stdout@@Base+0xfc8>
   1360c:	b	13674 <close_stdout@@Base+0xfc8>
   13610:	b	13674 <close_stdout@@Base+0xfc8>
   13614:	b	13674 <close_stdout@@Base+0xfc8>
   13618:	b	13674 <close_stdout@@Base+0xfc8>
   1361c:	b	13674 <close_stdout@@Base+0xfc8>
   13620:	b	13674 <close_stdout@@Base+0xfc8>
   13624:	b	13674 <close_stdout@@Base+0xfc8>
   13628:	b	13674 <close_stdout@@Base+0xfc8>
   1362c:	b	13674 <close_stdout@@Base+0xfc8>
   13630:	b	13674 <close_stdout@@Base+0xfc8>
   13634:	b	13674 <close_stdout@@Base+0xfc8>
   13638:	b	13674 <close_stdout@@Base+0xfc8>
   1363c:	b	13674 <close_stdout@@Base+0xfc8>
   13640:	b	13674 <close_stdout@@Base+0xfc8>
   13644:	b	13674 <close_stdout@@Base+0xfc8>
   13648:	b	13674 <close_stdout@@Base+0xfc8>
   1364c:	b	13674 <close_stdout@@Base+0xfc8>
   13650:	b	13674 <close_stdout@@Base+0xfc8>
   13654:	b	13674 <close_stdout@@Base+0xfc8>
   13658:	b	13674 <close_stdout@@Base+0xfc8>
   1365c:	b	13674 <close_stdout@@Base+0xfc8>
   13660:	b	13674 <close_stdout@@Base+0xfc8>
   13664:	b	13674 <close_stdout@@Base+0xfc8>
   13668:	b	13674 <close_stdout@@Base+0xfc8>
   1366c:	b	13674 <close_stdout@@Base+0xfc8>
   13670:	b	1306c <close_stdout@@Base+0x9c0>
   13674:	cmp	r4, r7
   13678:	bne	135d8 <close_stdout@@Base+0xf2c>
   1367c:	ldr	r0, [sp, #104]	; 0x68
   13680:	add	r9, r9, r2
   13684:	bl	11194 <iswprint@plt>
   13688:	cmp	r0, #0
   1368c:	mov	r0, r5
   13690:	moveq	r6, #0
   13694:	bl	11134 <mbsinit@plt>
   13698:	cmp	r0, #0
   1369c:	beq	13570 <close_stdout@@Base+0xec4>
   136a0:	mov	ip, r6
   136a4:	eor	r2, ip, #1
   136a8:	str	r9, [sp, #60]	; 0x3c
   136ac:	ldr	r4, [sp, #92]	; 0x5c
   136b0:	uxtb	r2, r2
   136b4:	ldr	r9, [sp, #88]	; 0x58
   136b8:	ldr	r6, [sp, #96]	; 0x60
   136bc:	ldr	r5, [sp, #100]	; 0x64
   136c0:	ldr	r3, [sp, #60]	; 0x3c
   136c4:	cmp	r3, #1
   136c8:	bls	1324c <close_stdout@@Base+0xba0>
   136cc:	ldr	r0, [sp, #24]
   136d0:	and	r2, r2, r0
   136d4:	b	13258 <close_stdout@@Base+0xbac>
   136d8:	ldr	r2, [sp, #164]	; 0xa4
   136dc:	tst	r2, #1
   136e0:	addne	fp, fp, #1
   136e4:	bne	12c14 <close_stdout@@Base+0x568>
   136e8:	b	12f24 <close_stdout@@Base+0x878>
   136ec:	ldr	r0, [sp, #36]	; 0x24
   136f0:	cmp	r0, #0
   136f4:	beq	12f24 <close_stdout@@Base+0x878>
   136f8:	b	1306c <close_stdout@@Base+0x9c0>
   136fc:	ldr	r2, [sp, #32]
   13700:	ldrb	r3, [r2, #1]
   13704:	adds	r3, r3, #0
   13708:	movne	r3, #1
   1370c:	b	13040 <close_stdout@@Base+0x994>
   13710:	bl	1135c <abort@plt>
   13714:	ldr	r8, [sp, #60]	; 0x3c
   13718:	b	1306c <close_stdout@@Base+0x9c0>
   1371c:	ldr	r0, [sp, #32]
   13720:	bl	11260 <strlen@plt>
   13724:	mov	r8, r0
   13728:	b	13534 <close_stdout@@Base+0xe88>
   1372c:	ldr	r2, [pc, #288]	; 13854 <close_stdout@@Base+0x11a8>
   13730:	mov	r1, #1
   13734:	mov	r9, r1
   13738:	str	r1, [sp, #24]
   1373c:	add	r2, pc, r2
   13740:	str	r1, [sp, #28]
   13744:	str	r2, [sp, #52]	; 0x34
   13748:	b	12bf0 <close_stdout@@Base+0x544>
   1374c:	ldr	r2, [pc, #260]	; 13858 <close_stdout@@Base+0x11ac>
   13750:	mov	r3, #1
   13754:	mov	r9, r3
   13758:	str	r3, [sp, #28]
   1375c:	add	r2, pc, r2
   13760:	str	sl, [sp, #24]
   13764:	str	r2, [sp, #52]	; 0x34
   13768:	b	12bf0 <close_stdout@@Base+0x544>
   1376c:	cmp	r8, r7
   13770:	str	r9, [sp, #60]	; 0x3c
   13774:	mov	ip, r4
   13778:	ldr	r6, [sp, #96]	; 0x60
   1377c:	ldr	r9, [sp, #88]	; 0x58
   13780:	ldr	r4, [sp, #92]	; 0x5c
   13784:	ldr	r5, [sp, #100]	; 0x64
   13788:	bls	137c0 <close_stdout@@Base+0x1114>
   1378c:	ldrb	r3, [ip]
   13790:	cmp	r3, #0
   13794:	beq	137c0 <close_stdout@@Base+0x1114>
   13798:	ldr	r3, [sp, #60]	; 0x3c
   1379c:	b	137ac <close_stdout@@Base+0x1100>
   137a0:	ldrb	r2, [r5, r3]
   137a4:	cmp	r2, #0
   137a8:	beq	137bc <close_stdout@@Base+0x1110>
   137ac:	add	r3, r3, #1
   137b0:	add	r2, fp, r3
   137b4:	cmp	r8, r2
   137b8:	bhi	137a0 <close_stdout@@Base+0x10f4>
   137bc:	str	r3, [sp, #60]	; 0x3c
   137c0:	mov	r2, #1
   137c4:	b	136c0 <close_stdout@@Base+0x1014>
   137c8:	str	r9, [sp, #60]	; 0x3c
   137cc:	mov	r2, #1
   137d0:	ldr	r4, [sp, #92]	; 0x5c
   137d4:	ldr	r6, [sp, #96]	; 0x60
   137d8:	ldr	r9, [sp, #88]	; 0x58
   137dc:	ldr	r5, [sp, #100]	; 0x64
   137e0:	b	136c0 <close_stdout@@Base+0x1014>
   137e4:	ldr	r9, [sp, #36]	; 0x24
   137e8:	b	1340c <close_stdout@@Base+0xd60>
   137ec:	bl	11164 <__stack_chk_fail@plt>
   137f0:	ldr	r1, [pc, #100]	; 1385c <close_stdout@@Base+0x11b0>
   137f4:	mov	r3, #0
   137f8:	mov	r0, #1
   137fc:	str	r3, [sp, #24]
   13800:	add	r1, pc, r1
   13804:	str	r0, [sp, #28]
   13808:	mov	r9, r3
   1380c:	str	r1, [sp, #52]	; 0x34
   13810:	b	12bf0 <close_stdout@@Base+0x544>
   13814:	ldr	r0, [pc, #68]	; 13860 <close_stdout@@Base+0x11b4>
   13818:	mov	r3, #1
   1381c:	mov	r9, #0
   13820:	str	r3, [sp, #24]
   13824:	add	r0, pc, r0
   13828:	str	r3, [sp, #28]
   1382c:	str	r0, [sp, #52]	; 0x34
   13830:	b	12bf0 <close_stdout@@Base+0x544>
   13834:	andeq	r4, r1, r0, lsr #9
   13838:	andeq	r0, r0, r8, lsl #2
   1383c:	andeq	r2, r0, r4, lsr #26
   13840:	andeq	r2, r0, r0, lsl #26
   13844:			; <UNDEFINED> instruction: 0x00002cbc
   13848:	muleq	r0, r8, ip
   1384c:	andeq	r2, r0, ip, lsl ip
   13850:	andeq	r2, r0, r4, asr #23
   13854:	andeq	r2, r0, ip, lsl r9
   13858:	strdeq	r2, [r0], -r8
   1385c:	andeq	r2, r0, r4, asr r8
   13860:	andeq	r2, r0, r4, lsr r8
   13864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13868:	sub	sp, sp, #44	; 0x2c
   1386c:	mov	r6, r0
   13870:	mov	r9, r1
   13874:	mov	sl, r2
   13878:	mov	r4, r3
   1387c:	bl	11278 <__errno_location@plt>
   13880:	ldr	fp, [pc, #412]	; 13a24 <close_stdout@@Base+0x1378>
   13884:	cmp	r6, #0
   13888:	add	fp, pc, fp
   1388c:	ldr	r5, [fp]
   13890:	ldr	r1, [r0]
   13894:	mov	r8, r0
   13898:	str	r1, [sp, #36]	; 0x24
   1389c:	blt	13a1c <close_stdout@@Base+0x1370>
   138a0:	ldr	r3, [pc, #384]	; 13a28 <close_stdout@@Base+0x137c>
   138a4:	add	r3, pc, r3
   138a8:	ldr	r3, [r3]
   138ac:	cmp	r6, r3
   138b0:	bcc	13904 <close_stdout@@Base+0x1258>
   138b4:	add	r7, r6, #1
   138b8:	cmn	r7, #-536870911	; 0xe0000001
   138bc:	bhi	13a20 <close_stdout@@Base+0x1374>
   138c0:	add	r3, fp, #4
   138c4:	cmp	r5, r3
   138c8:	beq	139f4 <close_stdout@@Base+0x1348>
   138cc:	mov	r0, r5
   138d0:	lsl	r1, r7, #3
   138d4:	bl	146fc <close_stdout@@Base+0x2050>
   138d8:	mov	r5, r0
   138dc:	str	r0, [fp]
   138e0:	ldr	fp, [pc, #324]	; 13a2c <close_stdout@@Base+0x1380>
   138e4:	mov	r1, #0
   138e8:	add	fp, pc, fp
   138ec:	ldr	r0, [fp]
   138f0:	rsb	r2, r0, r7
   138f4:	add	r0, r5, r0, lsl #3
   138f8:	lsl	r2, r2, #3
   138fc:	bl	11290 <memset@plt>
   13900:	str	r7, [fp]
   13904:	add	r2, r4, #8
   13908:	str	r2, [sp, #32]
   1390c:	ldr	r1, [r4]
   13910:	add	fp, r5, r6, lsl #3
   13914:	ldr	lr, [sp, #32]
   13918:	mov	r2, r9
   1391c:	ldr	r3, [r4, #4]
   13920:	ldr	ip, [r5, r6, lsl #3]
   13924:	ldr	r7, [fp, #4]
   13928:	orr	r3, r3, #1
   1392c:	str	r1, [sp]
   13930:	str	r3, [sp, #4]
   13934:	mov	r1, ip
   13938:	str	lr, [sp, #8]
   1393c:	mov	r0, r7
   13940:	ldr	lr, [r4, #40]	; 0x28
   13944:	str	r3, [sp, #28]
   13948:	mov	r3, sl
   1394c:	str	lr, [sp, #12]
   13950:	ldr	lr, [r4, #44]	; 0x2c
   13954:	str	ip, [sp, #24]
   13958:	str	lr, [sp, #16]
   1395c:	bl	12b3c <close_stdout@@Base+0x490>
   13960:	ldr	ip, [sp, #24]
   13964:	cmp	ip, r0
   13968:	bhi	139e0 <close_stdout@@Base+0x1334>
   1396c:	ldr	r3, [pc, #188]	; 13a30 <close_stdout@@Base+0x1384>
   13970:	add	r1, r0, #1
   13974:	str	r1, [r5, r6, lsl #3]
   13978:	add	r3, pc, r3
   1397c:	cmp	r7, r3
   13980:	beq	13994 <close_stdout@@Base+0x12e8>
   13984:	mov	r0, r7
   13988:	str	r1, [sp, #24]
   1398c:	bl	11104 <free@plt>
   13990:	ldr	r1, [sp, #24]
   13994:	mov	r0, r1
   13998:	str	r1, [sp, #24]
   1399c:	bl	146a4 <close_stdout@@Base+0x1ff8>
   139a0:	ldr	r3, [sp, #28]
   139a4:	ldr	lr, [sp, #32]
   139a8:	mov	r2, r9
   139ac:	str	r0, [fp, #4]
   139b0:	mov	r7, r0
   139b4:	ldr	ip, [r4]
   139b8:	str	r3, [sp, #4]
   139bc:	mov	r3, sl
   139c0:	str	lr, [sp, #8]
   139c4:	str	ip, [sp]
   139c8:	ldr	ip, [r4, #40]	; 0x28
   139cc:	ldr	r1, [sp, #24]
   139d0:	str	ip, [sp, #12]
   139d4:	ldr	ip, [r4, #44]	; 0x2c
   139d8:	str	ip, [sp, #16]
   139dc:	bl	12b3c <close_stdout@@Base+0x490>
   139e0:	ldr	r1, [sp, #36]	; 0x24
   139e4:	mov	r0, r7
   139e8:	str	r1, [r8]
   139ec:	add	sp, sp, #44	; 0x2c
   139f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139f4:	lsl	r1, r7, #3
   139f8:	mov	r0, #0
   139fc:	str	r3, [sp, #24]
   13a00:	bl	146fc <close_stdout@@Base+0x2050>
   13a04:	ldr	r3, [sp, #24]
   13a08:	mov	r5, r0
   13a0c:	ldm	r3, {r0, r1}
   13a10:	str	r5, [fp]
   13a14:	stm	r5, {r0, r1}
   13a18:	b	138e0 <close_stdout@@Base+0x1234>
   13a1c:	bl	1135c <abort@plt>
   13a20:	bl	148b8 <close_stdout@@Base+0x220c>
   13a24:	strdeq	r3, [r1], -ip
   13a28:	andeq	r3, r1, ip, lsr #17
   13a2c:	andeq	r3, r1, r8, ror #16
   13a30:	andeq	r3, r1, r4, asr r8
   13a34:	push	{r4, r5, r6, lr}
   13a38:	mov	r5, r0
   13a3c:	bl	11278 <__errno_location@plt>
   13a40:	cmp	r5, #0
   13a44:	mov	r1, #48	; 0x30
   13a48:	mov	r4, r0
   13a4c:	ldr	r0, [pc, #24]	; 13a6c <close_stdout@@Base+0x13c0>
   13a50:	ldr	r6, [r4]
   13a54:	add	r0, pc, r0
   13a58:	add	r0, r0, #256	; 0x100
   13a5c:	movne	r0, r5
   13a60:	bl	14878 <close_stdout@@Base+0x21cc>
   13a64:	str	r6, [r4]
   13a68:	pop	{r4, r5, r6, pc}
   13a6c:	andeq	r3, r1, r8, ror r7
   13a70:	cmp	r0, #0
   13a74:	beq	13a80 <close_stdout@@Base+0x13d4>
   13a78:	ldr	r0, [r0]
   13a7c:	bx	lr
   13a80:	ldr	r0, [pc, #12]	; 13a94 <close_stdout@@Base+0x13e8>
   13a84:	add	r0, pc, r0
   13a88:	add	r0, r0, #256	; 0x100
   13a8c:	ldr	r0, [r0]
   13a90:	bx	lr
   13a94:	andeq	r3, r1, r8, asr #14
   13a98:	cmp	r0, #0
   13a9c:	beq	13aa8 <close_stdout@@Base+0x13fc>
   13aa0:	str	r1, [r0]
   13aa4:	bx	lr
   13aa8:	ldr	r0, [pc, #12]	; 13abc <close_stdout@@Base+0x1410>
   13aac:	add	r0, pc, r0
   13ab0:	add	r0, r0, #256	; 0x100
   13ab4:	str	r1, [r0]
   13ab8:	bx	lr
   13abc:	andeq	r3, r1, r0, lsr #14
   13ac0:	cmp	r0, #0
   13ac4:	movne	r3, r0
   13ac8:	beq	13af8 <close_stdout@@Base+0x144c>
   13acc:	lsr	ip, r1, #5
   13ad0:	and	r1, r1, #31
   13ad4:	add	r3, r3, ip, lsl #2
   13ad8:	ldr	ip, [r3, #8]
   13adc:	lsr	r0, ip, r1
   13ae0:	eor	r2, r0, r2
   13ae4:	and	r0, r0, #1
   13ae8:	and	r2, r2, #1
   13aec:	eor	ip, ip, r2, lsl r1
   13af0:	str	ip, [r3, #8]
   13af4:	bx	lr
   13af8:	ldr	r3, [pc, #8]	; 13b08 <close_stdout@@Base+0x145c>
   13afc:	add	r3, pc, r3
   13b00:	add	r3, r3, #256	; 0x100
   13b04:	b	13acc <close_stdout@@Base+0x1420>
   13b08:	ldrdeq	r3, [r1], -r0
   13b0c:	subs	r3, r0, #0
   13b10:	beq	13b20 <close_stdout@@Base+0x1474>
   13b14:	ldr	r0, [r3, #4]
   13b18:	str	r1, [r3, #4]
   13b1c:	bx	lr
   13b20:	ldr	r3, [pc, #8]	; 13b30 <close_stdout@@Base+0x1484>
   13b24:	add	r3, pc, r3
   13b28:	add	r3, r3, #256	; 0x100
   13b2c:	b	13b14 <close_stdout@@Base+0x1468>
   13b30:	andeq	r3, r1, r8, lsr #13
   13b34:	cmp	r0, #0
   13b38:	push	{r3, lr}
   13b3c:	beq	13b60 <close_stdout@@Base+0x14b4>
   13b40:	cmp	r2, #0
   13b44:	cmpne	r1, #0
   13b48:	mov	r3, #8
   13b4c:	strne	r1, [r0, #40]	; 0x28
   13b50:	str	r3, [r0]
   13b54:	strne	r2, [r0, #44]	; 0x2c
   13b58:	popne	{r3, pc}
   13b5c:	bl	1135c <abort@plt>
   13b60:	ldr	r0, [pc, #8]	; 13b70 <close_stdout@@Base+0x14c4>
   13b64:	add	r0, pc, r0
   13b68:	add	r0, r0, #256	; 0x100
   13b6c:	b	13b40 <close_stdout@@Base+0x1494>
   13b70:	andeq	r3, r1, r8, ror #12
   13b74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13b78:	sub	sp, sp, #24
   13b7c:	mov	r7, r0
   13b80:	mov	sl, r1
   13b84:	ldr	r4, [sp, #56]	; 0x38
   13b88:	mov	r9, r2
   13b8c:	mov	r8, r3
   13b90:	cmp	r4, #0
   13b94:	beq	13be8 <close_stdout@@Base+0x153c>
   13b98:	bl	11278 <__errno_location@plt>
   13b9c:	ldr	r3, [r4]
   13ba0:	add	lr, r4, #8
   13ba4:	mov	r1, sl
   13ba8:	mov	r2, r9
   13bac:	ldr	r6, [r0]
   13bb0:	mov	r5, r0
   13bb4:	str	r3, [sp]
   13bb8:	mov	r0, r7
   13bbc:	ldr	ip, [r4, #4]
   13bc0:	mov	r3, r8
   13bc4:	stmib	sp, {ip, lr}
   13bc8:	ldr	ip, [r4, #40]	; 0x28
   13bcc:	str	ip, [sp, #12]
   13bd0:	ldr	ip, [r4, #44]	; 0x2c
   13bd4:	str	ip, [sp, #16]
   13bd8:	bl	12b3c <close_stdout@@Base+0x490>
   13bdc:	str	r6, [r5]
   13be0:	add	sp, sp, #24
   13be4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13be8:	ldr	r4, [pc, #8]	; 13bf8 <close_stdout@@Base+0x154c>
   13bec:	add	r4, pc, r4
   13bf0:	add	r4, r4, #256	; 0x100
   13bf4:	b	13b98 <close_stdout@@Base+0x14ec>
   13bf8:	andeq	r3, r1, r0, ror #11
   13bfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13c00:	subs	r4, r3, #0
   13c04:	sub	sp, sp, #36	; 0x24
   13c08:	mov	r7, r0
   13c0c:	mov	r6, r1
   13c10:	mov	r5, r2
   13c14:	beq	13cd0 <close_stdout@@Base+0x1624>
   13c18:	bl	11278 <__errno_location@plt>
   13c1c:	ldr	r3, [r4]
   13c20:	ldr	sl, [r4, #4]
   13c24:	add	r9, r4, #8
   13c28:	mov	r8, r0
   13c2c:	mov	r0, #0
   13c30:	ldr	r2, [r8]
   13c34:	cmp	r5, r0
   13c38:	orreq	sl, sl, #1
   13c3c:	str	r9, [sp, #8]
   13c40:	mov	r1, r0
   13c44:	stm	sp, {r3, sl}
   13c48:	mov	r3, r6
   13c4c:	ldr	ip, [r4, #40]	; 0x28
   13c50:	str	r2, [sp, #28]
   13c54:	mov	r2, r7
   13c58:	str	ip, [sp, #12]
   13c5c:	ldr	ip, [r4, #44]	; 0x2c
   13c60:	str	ip, [sp, #16]
   13c64:	bl	12b3c <close_stdout@@Base+0x490>
   13c68:	add	r1, r0, #1
   13c6c:	mov	fp, r0
   13c70:	str	r1, [sp, #24]
   13c74:	mov	r0, r1
   13c78:	bl	146a4 <close_stdout@@Base+0x1ff8>
   13c7c:	ldr	lr, [r4]
   13c80:	str	sl, [sp, #4]
   13c84:	mov	r3, r6
   13c88:	str	r9, [sp, #8]
   13c8c:	mov	r2, r7
   13c90:	str	lr, [sp]
   13c94:	ldr	lr, [r4, #40]	; 0x28
   13c98:	ldr	r1, [sp, #24]
   13c9c:	str	lr, [sp, #12]
   13ca0:	ldr	lr, [r4, #44]	; 0x2c
   13ca4:	str	lr, [sp, #16]
   13ca8:	str	r0, [sp, #24]
   13cac:	bl	12b3c <close_stdout@@Base+0x490>
   13cb0:	ldr	r3, [sp, #28]
   13cb4:	cmp	r5, #0
   13cb8:	str	r3, [r8]
   13cbc:	ldr	ip, [sp, #24]
   13cc0:	strne	fp, [r5]
   13cc4:	mov	r0, ip
   13cc8:	add	sp, sp, #36	; 0x24
   13ccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cd0:	ldr	r4, [pc, #8]	; 13ce0 <close_stdout@@Base+0x1634>
   13cd4:	add	r4, pc, r4
   13cd8:	add	r4, r4, #256	; 0x100
   13cdc:	b	13c18 <close_stdout@@Base+0x156c>
   13ce0:	strdeq	r3, [r1], -r8
   13ce4:	mov	r3, r2
   13ce8:	mov	r2, #0
   13cec:	b	13bfc <close_stdout@@Base+0x1550>
   13cf0:	ldr	r2, [pc, #152]	; 13d90 <close_stdout@@Base+0x16e4>
   13cf4:	push	{r3, r4, r5, r6, r7, lr}
   13cf8:	add	r2, pc, r2
   13cfc:	ldr	r3, [pc, #144]	; 13d94 <close_stdout@@Base+0x16e8>
   13d00:	ldr	r6, [r2]
   13d04:	add	r3, pc, r3
   13d08:	cmp	r6, #1
   13d0c:	ldr	r7, [r3]
   13d10:	movhi	r4, #1
   13d14:	movhi	r5, r7
   13d18:	bls	13d34 <close_stdout@@Base+0x1688>
   13d1c:	ldr	r0, [r5, #12]
   13d20:	add	r4, r4, #1
   13d24:	bl	11104 <free@plt>
   13d28:	cmp	r4, r6
   13d2c:	add	r5, r5, #8
   13d30:	bne	13d1c <close_stdout@@Base+0x1670>
   13d34:	ldr	r4, [pc, #92]	; 13d98 <close_stdout@@Base+0x16ec>
   13d38:	ldr	r0, [r7, #4]
   13d3c:	add	r4, pc, r4
   13d40:	cmp	r0, r4
   13d44:	beq	13d5c <close_stdout@@Base+0x16b0>
   13d48:	bl	11104 <free@plt>
   13d4c:	ldr	r3, [pc, #72]	; 13d9c <close_stdout@@Base+0x16f0>
   13d50:	mov	r2, #256	; 0x100
   13d54:	add	r3, pc, r3
   13d58:	stmib	r3, {r2, r4}
   13d5c:	ldr	r4, [pc, #60]	; 13da0 <close_stdout@@Base+0x16f4>
   13d60:	add	r4, pc, r4
   13d64:	add	r5, r4, #4
   13d68:	cmp	r7, r5
   13d6c:	beq	13d7c <close_stdout@@Base+0x16d0>
   13d70:	mov	r0, r7
   13d74:	bl	11104 <free@plt>
   13d78:	str	r5, [r4]
   13d7c:	ldr	r3, [pc, #32]	; 13da4 <close_stdout@@Base+0x16f8>
   13d80:	mov	r2, #1
   13d84:	add	r3, pc, r3
   13d88:	str	r2, [r3]
   13d8c:	pop	{r3, r4, r5, r6, r7, pc}
   13d90:	andeq	r3, r1, r8, asr r4
   13d94:	andeq	r3, r1, r0, lsl #9
   13d98:	muleq	r1, r0, r4
   13d9c:	andeq	r3, r1, r0, lsr r4
   13da0:	andeq	r3, r1, r4, lsr #8
   13da4:	andeq	r3, r1, ip, asr #7
   13da8:	ldr	r3, [pc, #12]	; 13dbc <close_stdout@@Base+0x1710>
   13dac:	mvn	r2, #0
   13db0:	add	r3, pc, r3
   13db4:	add	r3, r3, #256	; 0x100
   13db8:	b	13864 <close_stdout@@Base+0x11b8>
   13dbc:	andeq	r3, r1, ip, lsl r4
   13dc0:	ldr	r3, [pc, #8]	; 13dd0 <close_stdout@@Base+0x1724>
   13dc4:	add	r3, pc, r3
   13dc8:	add	r3, r3, #256	; 0x100
   13dcc:	b	13864 <close_stdout@@Base+0x11b8>
   13dd0:	andeq	r3, r1, r8, lsl #8
   13dd4:	mov	r1, r0
   13dd8:	mov	r0, #0
   13ddc:	b	13da8 <close_stdout@@Base+0x16fc>
   13de0:	mov	r2, r1
   13de4:	mov	r1, r0
   13de8:	mov	r0, #0
   13dec:	b	13dc0 <close_stdout@@Base+0x1714>
   13df0:	ldr	r3, [pc, #92]	; 13e54 <close_stdout@@Base+0x17a8>
   13df4:	ldr	ip, [pc, #92]	; 13e58 <close_stdout@@Base+0x17ac>
   13df8:	add	r3, pc, r3
   13dfc:	push	{r4, r5, r6, r7, lr}
   13e00:	sub	sp, sp, #60	; 0x3c
   13e04:	ldr	r4, [r3, ip]
   13e08:	add	r5, sp, #4
   13e0c:	mov	r7, r2
   13e10:	mov	r6, r0
   13e14:	mov	r0, r5
   13e18:	ldr	r3, [r4]
   13e1c:	str	r3, [sp, #52]	; 0x34
   13e20:	bl	12984 <close_stdout@@Base+0x2d8>
   13e24:	mov	r3, r5
   13e28:	mvn	r2, #0
   13e2c:	mov	r0, r6
   13e30:	mov	r1, r7
   13e34:	bl	13864 <close_stdout@@Base+0x11b8>
   13e38:	ldr	r2, [sp, #52]	; 0x34
   13e3c:	ldr	r3, [r4]
   13e40:	cmp	r2, r3
   13e44:	bne	13e50 <close_stdout@@Base+0x17a4>
   13e48:	add	sp, sp, #60	; 0x3c
   13e4c:	pop	{r4, r5, r6, r7, pc}
   13e50:	bl	11164 <__stack_chk_fail@plt>
   13e54:	andeq	r3, r1, r0, lsl #4
   13e58:	andeq	r0, r0, r8, lsl #2
   13e5c:	ldr	ip, [pc, #96]	; 13ec4 <close_stdout@@Base+0x1818>
   13e60:	push	{r4, r5, r6, r7, r8, lr}
   13e64:	add	ip, pc, ip
   13e68:	ldr	lr, [pc, #88]	; 13ec8 <close_stdout@@Base+0x181c>
   13e6c:	sub	sp, sp, #56	; 0x38
   13e70:	mov	r8, r3
   13e74:	add	r5, sp, #4
   13e78:	mov	r7, r2
   13e7c:	mov	r6, r0
   13e80:	ldr	r4, [ip, lr]
   13e84:	mov	r0, r5
   13e88:	ldr	r3, [r4]
   13e8c:	str	r3, [sp, #52]	; 0x34
   13e90:	bl	12984 <close_stdout@@Base+0x2d8>
   13e94:	mov	r2, r8
   13e98:	mov	r3, r5
   13e9c:	mov	r0, r6
   13ea0:	mov	r1, r7
   13ea4:	bl	13864 <close_stdout@@Base+0x11b8>
   13ea8:	ldr	r2, [sp, #52]	; 0x34
   13eac:	ldr	r3, [r4]
   13eb0:	cmp	r2, r3
   13eb4:	bne	13ec0 <close_stdout@@Base+0x1814>
   13eb8:	add	sp, sp, #56	; 0x38
   13ebc:	pop	{r4, r5, r6, r7, r8, pc}
   13ec0:	bl	11164 <__stack_chk_fail@plt>
   13ec4:	muleq	r1, r4, r1
   13ec8:	andeq	r0, r0, r8, lsl #2
   13ecc:	mov	r2, r1
   13ed0:	mov	r1, r0
   13ed4:	mov	r0, #0
   13ed8:	b	13df0 <close_stdout@@Base+0x1744>
   13edc:	mov	ip, r1
   13ee0:	mov	r3, r2
   13ee4:	mov	r1, r0
   13ee8:	mov	r2, ip
   13eec:	mov	r0, #0
   13ef0:	b	13e5c <close_stdout@@Base+0x17b0>
   13ef4:	push	{r4, r5, r6, r7, r8, lr}
   13ef8:	mov	r5, r2
   13efc:	ldr	lr, [pc, #136]	; 13f8c <close_stdout@@Base+0x18e0>
   13f00:	mov	r7, r0
   13f04:	mov	r6, r1
   13f08:	ldr	r4, [pc, #128]	; 13f90 <close_stdout@@Base+0x18e4>
   13f0c:	add	lr, pc, lr
   13f10:	sub	sp, sp, #56	; 0x38
   13f14:	add	lr, lr, #256	; 0x100
   13f18:	ldr	r8, [pc, #116]	; 13f94 <close_stdout@@Base+0x18e8>
   13f1c:	add	r4, pc, r4
   13f20:	add	ip, sp, #4
   13f24:	ldm	lr!, {r0, r1, r2, r3}
   13f28:	ldr	r4, [r4, r8]
   13f2c:	stmia	ip!, {r0, r1, r2, r3}
   13f30:	ldm	lr!, {r0, r1, r2, r3}
   13f34:	ldr	r8, [r4]
   13f38:	stmia	ip!, {r0, r1, r2, r3}
   13f3c:	ldm	lr, {r0, r1, r2, r3}
   13f40:	str	r8, [sp, #52]	; 0x34
   13f44:	stm	ip, {r0, r1, r2, r3}
   13f48:	mov	r1, r5
   13f4c:	add	r5, sp, #4
   13f50:	mov	r2, #1
   13f54:	mov	r0, r5
   13f58:	bl	13ac0 <close_stdout@@Base+0x1414>
   13f5c:	mov	r2, r6
   13f60:	mov	r3, r5
   13f64:	mov	r1, r7
   13f68:	mov	r0, #0
   13f6c:	bl	13864 <close_stdout@@Base+0x11b8>
   13f70:	ldr	r2, [sp, #52]	; 0x34
   13f74:	ldr	r3, [r4]
   13f78:	cmp	r2, r3
   13f7c:	bne	13f88 <close_stdout@@Base+0x18dc>
   13f80:	add	sp, sp, #56	; 0x38
   13f84:	pop	{r4, r5, r6, r7, r8, pc}
   13f88:	bl	11164 <__stack_chk_fail@plt>
   13f8c:	andeq	r3, r1, r0, asr #5
   13f90:	ldrdeq	r3, [r1], -ip
   13f94:	andeq	r0, r0, r8, lsl #2
   13f98:	mov	r2, r1
   13f9c:	mvn	r1, #0
   13fa0:	b	13ef4 <close_stdout@@Base+0x1848>
   13fa4:	mov	r1, #58	; 0x3a
   13fa8:	b	13f98 <close_stdout@@Base+0x18ec>
   13fac:	mov	r2, #58	; 0x3a
   13fb0:	b	13ef4 <close_stdout@@Base+0x1848>
   13fb4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13fb8:	mov	r5, r2
   13fbc:	ldr	lr, [pc, #144]	; 14054 <close_stdout@@Base+0x19a8>
   13fc0:	mov	r8, r0
   13fc4:	mov	r9, r1
   13fc8:	mov	r7, r3
   13fcc:	add	lr, pc, lr
   13fd0:	ldr	r4, [pc, #128]	; 14058 <close_stdout@@Base+0x19ac>
   13fd4:	add	lr, lr, #256	; 0x100
   13fd8:	sub	sp, sp, #56	; 0x38
   13fdc:	ldr	sl, [pc, #120]	; 1405c <close_stdout@@Base+0x19b0>
   13fe0:	add	r4, pc, r4
   13fe4:	ldm	lr!, {r0, r1, r2, r3}
   13fe8:	add	ip, sp, #4
   13fec:	ldr	r4, [r4, sl]
   13ff0:	ldr	r6, [sp, #88]	; 0x58
   13ff4:	stmia	ip!, {r0, r1, r2, r3}
   13ff8:	ldm	lr!, {r0, r1, r2, r3}
   13ffc:	ldr	sl, [r4]
   14000:	stmia	ip!, {r0, r1, r2, r3}
   14004:	ldm	lr, {r0, r1, r2, r3}
   14008:	str	sl, [sp, #52]	; 0x34
   1400c:	stm	ip, {r0, r1, r2, r3}
   14010:	mov	r2, r5
   14014:	add	r5, sp, #4
   14018:	mov	r1, r9
   1401c:	mov	r0, r5
   14020:	bl	13b34 <close_stdout@@Base+0x1488>
   14024:	mov	r2, r6
   14028:	mov	r3, r5
   1402c:	mov	r0, r8
   14030:	mov	r1, r7
   14034:	bl	13864 <close_stdout@@Base+0x11b8>
   14038:	ldr	r2, [sp, #52]	; 0x34
   1403c:	ldr	r3, [r4]
   14040:	cmp	r2, r3
   14044:	bne	14050 <close_stdout@@Base+0x19a4>
   14048:	add	sp, sp, #56	; 0x38
   1404c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14050:	bl	11164 <__stack_chk_fail@plt>
   14054:	andeq	r3, r1, r0, lsl #4
   14058:	andeq	r3, r1, r8, lsl r0
   1405c:	andeq	r0, r0, r8, lsl #2
   14060:	push	{lr}		; (str lr, [sp, #-4]!)
   14064:	sub	sp, sp, #12
   14068:	mvn	ip, #0
   1406c:	str	ip, [sp]
   14070:	bl	13fb4 <close_stdout@@Base+0x1908>
   14074:	add	sp, sp, #12
   14078:	pop	{pc}		; (ldr pc, [sp], #4)
   1407c:	mov	ip, r1
   14080:	mov	r3, r2
   14084:	mov	r1, r0
   14088:	mov	r2, ip
   1408c:	mov	r0, #0
   14090:	b	14060 <close_stdout@@Base+0x19b4>
   14094:	push	{lr}		; (str lr, [sp, #-4]!)
   14098:	sub	sp, sp, #12
   1409c:	mov	lr, r1
   140a0:	mov	ip, r2
   140a4:	mov	r1, r0
   140a8:	str	r3, [sp]
   140ac:	mov	r2, lr
   140b0:	mov	r3, ip
   140b4:	mov	r0, #0
   140b8:	bl	13fb4 <close_stdout@@Base+0x1908>
   140bc:	add	sp, sp, #12
   140c0:	pop	{pc}		; (ldr pc, [sp], #4)
   140c4:	ldr	r3, [pc, #12]	; 140d8 <close_stdout@@Base+0x1a2c>
   140c8:	ldr	ip, [pc, #12]	; 140dc <close_stdout@@Base+0x1a30>
   140cc:	add	r3, pc, r3
   140d0:	ldr	r3, [r3, ip]
   140d4:	b	13864 <close_stdout@@Base+0x11b8>
   140d8:	andeq	r2, r1, ip, lsr #30
   140dc:	andeq	r0, r0, r4, lsl #2
   140e0:	mov	r2, r1
   140e4:	mov	r1, r0
   140e8:	mov	r0, #0
   140ec:	b	140c4 <close_stdout@@Base+0x1a18>
   140f0:	mvn	r2, #0
   140f4:	b	140c4 <close_stdout@@Base+0x1a18>
   140f8:	mov	r1, r0
   140fc:	mov	r0, #0
   14100:	b	140f0 <close_stdout@@Base+0x1a44>
   14104:	push	{r4, r5, r6, r7, lr}
   14108:	cmp	r1, #0
   1410c:	sub	sp, sp, #36	; 0x24
   14110:	ldr	r7, [pc, #896]	; 14498 <close_stdout@@Base+0x1dec>
   14114:	mov	ip, r3
   14118:	mov	r5, r0
   1411c:	add	r7, pc, r7
   14120:	ldr	r4, [sp, #56]	; 0x38
   14124:	ldr	r6, [sp, #60]	; 0x3c
   14128:	beq	1446c <close_stdout@@Base+0x1dc0>
   1412c:	str	r2, [sp]
   14130:	mov	r3, r1
   14134:	ldr	r2, [pc, #864]	; 1449c <close_stdout@@Base+0x1df0>
   14138:	mov	r1, #1
   1413c:	str	ip, [sp, #4]
   14140:	add	r2, pc, r2
   14144:	bl	112c0 <__fprintf_chk@plt>
   14148:	ldr	r1, [pc, #848]	; 144a0 <close_stdout@@Base+0x1df4>
   1414c:	mov	r2, #5
   14150:	mov	r0, #0
   14154:	add	r1, pc, r1
   14158:	bl	11158 <dcgettext@plt>
   1415c:	ldr	r2, [pc, #832]	; 144a4 <close_stdout@@Base+0x1df8>
   14160:	movw	ip, #2013	; 0x7dd
   14164:	mov	r1, #1
   14168:	ldr	r2, [r7, r2]
   1416c:	str	ip, [sp]
   14170:	mov	r3, r0
   14174:	mov	r0, r5
   14178:	bl	112c0 <__fprintf_chk@plt>
   1417c:	ldr	r1, [pc, #804]	; 144a8 <close_stdout@@Base+0x1dfc>
   14180:	mov	r0, #0
   14184:	mov	r2, #5
   14188:	add	r1, pc, r1
   1418c:	bl	11158 <dcgettext@plt>
   14190:	mov	r1, r5
   14194:	bl	110b0 <fputs_unlocked@plt>
   14198:	cmp	r6, #9
   1419c:	addls	pc, pc, r6, lsl #2
   141a0:	b	14488 <close_stdout@@Base+0x1ddc>
   141a4:	b	14238 <close_stdout@@Base+0x1b8c>
   141a8:	b	1423c <close_stdout@@Base+0x1b90>
   141ac:	b	1426c <close_stdout@@Base+0x1bc0>
   141b0:	b	142a0 <close_stdout@@Base+0x1bf4>
   141b4:	b	142dc <close_stdout@@Base+0x1c30>
   141b8:	b	1431c <close_stdout@@Base+0x1c70>
   141bc:	b	14364 <close_stdout@@Base+0x1cb8>
   141c0:	b	143b4 <close_stdout@@Base+0x1d08>
   141c4:	b	1440c <close_stdout@@Base+0x1d60>
   141c8:	b	141cc <close_stdout@@Base+0x1b20>
   141cc:	ldr	r1, [pc, #728]	; 144ac <close_stdout@@Base+0x1e00>
   141d0:	mov	r0, #0
   141d4:	add	r1, pc, r1
   141d8:	mov	r2, #5
   141dc:	bl	11158 <dcgettext@plt>
   141e0:	ldm	r4, {r3, ip}
   141e4:	mov	r1, #1
   141e8:	str	ip, [sp]
   141ec:	ldr	ip, [r4, #8]
   141f0:	str	ip, [sp, #4]
   141f4:	ldr	ip, [r4, #12]
   141f8:	str	ip, [sp, #8]
   141fc:	ldr	ip, [r4, #16]
   14200:	str	ip, [sp, #12]
   14204:	ldr	ip, [r4, #20]
   14208:	str	ip, [sp, #16]
   1420c:	ldr	ip, [r4, #24]
   14210:	str	ip, [sp, #20]
   14214:	ldr	ip, [r4, #28]
   14218:	str	ip, [sp, #24]
   1421c:	ldr	ip, [r4, #32]
   14220:	str	ip, [sp, #28]
   14224:	mov	r2, r0
   14228:	mov	r0, r5
   1422c:	bl	112c0 <__fprintf_chk@plt>
   14230:	add	sp, sp, #36	; 0x24
   14234:	pop	{r4, r5, r6, r7, pc}
   14238:	bl	1135c <abort@plt>
   1423c:	ldr	r1, [pc, #620]	; 144b0 <close_stdout@@Base+0x1e04>
   14240:	mov	r2, #5
   14244:	mov	r0, #0
   14248:	add	r1, pc, r1
   1424c:	bl	11158 <dcgettext@plt>
   14250:	ldr	r3, [r4]
   14254:	mov	r1, #1
   14258:	mov	r2, r0
   1425c:	mov	r0, r5
   14260:	add	sp, sp, #36	; 0x24
   14264:	pop	{r4, r5, r6, r7, lr}
   14268:	b	112c0 <__fprintf_chk@plt>
   1426c:	ldr	r1, [pc, #576]	; 144b4 <close_stdout@@Base+0x1e08>
   14270:	mov	r2, #5
   14274:	mov	r0, #0
   14278:	add	r1, pc, r1
   1427c:	bl	11158 <dcgettext@plt>
   14280:	ldm	r4, {r3, ip}
   14284:	mov	r1, #1
   14288:	str	ip, [sp, #56]	; 0x38
   1428c:	mov	r2, r0
   14290:	mov	r0, r5
   14294:	add	sp, sp, #36	; 0x24
   14298:	pop	{r4, r5, r6, r7, lr}
   1429c:	b	112c0 <__fprintf_chk@plt>
   142a0:	ldr	r1, [pc, #528]	; 144b8 <close_stdout@@Base+0x1e0c>
   142a4:	mov	r2, #5
   142a8:	mov	r0, #0
   142ac:	add	r1, pc, r1
   142b0:	bl	11158 <dcgettext@plt>
   142b4:	ldm	r4, {r3, ip}
   142b8:	mov	r1, #1
   142bc:	str	ip, [sp, #56]	; 0x38
   142c0:	ldr	ip, [r4, #8]
   142c4:	str	ip, [sp, #60]	; 0x3c
   142c8:	mov	r2, r0
   142cc:	mov	r0, r5
   142d0:	add	sp, sp, #36	; 0x24
   142d4:	pop	{r4, r5, r6, r7, lr}
   142d8:	b	112c0 <__fprintf_chk@plt>
   142dc:	ldr	r1, [pc, #472]	; 144bc <close_stdout@@Base+0x1e10>
   142e0:	mov	r2, #5
   142e4:	mov	r0, #0
   142e8:	add	r1, pc, r1
   142ec:	bl	11158 <dcgettext@plt>
   142f0:	ldm	r4, {r3, ip}
   142f4:	mov	r1, #1
   142f8:	str	ip, [sp]
   142fc:	ldr	ip, [r4, #8]
   14300:	str	ip, [sp, #4]
   14304:	ldr	ip, [r4, #12]
   14308:	str	ip, [sp, #8]
   1430c:	mov	r2, r0
   14310:	mov	r0, r5
   14314:	bl	112c0 <__fprintf_chk@plt>
   14318:	b	14230 <close_stdout@@Base+0x1b84>
   1431c:	ldr	r1, [pc, #412]	; 144c0 <close_stdout@@Base+0x1e14>
   14320:	mov	r2, #5
   14324:	mov	r0, #0
   14328:	add	r1, pc, r1
   1432c:	bl	11158 <dcgettext@plt>
   14330:	ldm	r4, {r3, ip}
   14334:	mov	r1, #1
   14338:	str	ip, [sp]
   1433c:	ldr	ip, [r4, #8]
   14340:	str	ip, [sp, #4]
   14344:	ldr	ip, [r4, #12]
   14348:	str	ip, [sp, #8]
   1434c:	ldr	ip, [r4, #16]
   14350:	str	ip, [sp, #12]
   14354:	mov	r2, r0
   14358:	mov	r0, r5
   1435c:	bl	112c0 <__fprintf_chk@plt>
   14360:	b	14230 <close_stdout@@Base+0x1b84>
   14364:	ldr	r1, [pc, #344]	; 144c4 <close_stdout@@Base+0x1e18>
   14368:	mov	r2, #5
   1436c:	mov	r0, #0
   14370:	add	r1, pc, r1
   14374:	bl	11158 <dcgettext@plt>
   14378:	ldm	r4, {r3, ip}
   1437c:	mov	r1, #1
   14380:	str	ip, [sp]
   14384:	ldr	ip, [r4, #8]
   14388:	str	ip, [sp, #4]
   1438c:	ldr	ip, [r4, #12]
   14390:	str	ip, [sp, #8]
   14394:	ldr	ip, [r4, #16]
   14398:	str	ip, [sp, #12]
   1439c:	ldr	ip, [r4, #20]
   143a0:	str	ip, [sp, #16]
   143a4:	mov	r2, r0
   143a8:	mov	r0, r5
   143ac:	bl	112c0 <__fprintf_chk@plt>
   143b0:	b	14230 <close_stdout@@Base+0x1b84>
   143b4:	ldr	r1, [pc, #268]	; 144c8 <close_stdout@@Base+0x1e1c>
   143b8:	mov	r2, #5
   143bc:	mov	r0, #0
   143c0:	add	r1, pc, r1
   143c4:	bl	11158 <dcgettext@plt>
   143c8:	ldm	r4, {r3, ip}
   143cc:	mov	r1, #1
   143d0:	str	ip, [sp]
   143d4:	ldr	ip, [r4, #8]
   143d8:	str	ip, [sp, #4]
   143dc:	ldr	ip, [r4, #12]
   143e0:	str	ip, [sp, #8]
   143e4:	ldr	ip, [r4, #16]
   143e8:	str	ip, [sp, #12]
   143ec:	ldr	ip, [r4, #20]
   143f0:	str	ip, [sp, #16]
   143f4:	ldr	ip, [r4, #24]
   143f8:	str	ip, [sp, #20]
   143fc:	mov	r2, r0
   14400:	mov	r0, r5
   14404:	bl	112c0 <__fprintf_chk@plt>
   14408:	b	14230 <close_stdout@@Base+0x1b84>
   1440c:	ldr	r1, [pc, #184]	; 144cc <close_stdout@@Base+0x1e20>
   14410:	mov	r2, #5
   14414:	mov	r0, #0
   14418:	add	r1, pc, r1
   1441c:	bl	11158 <dcgettext@plt>
   14420:	ldm	r4, {r3, ip}
   14424:	mov	r1, #1
   14428:	str	ip, [sp]
   1442c:	ldr	ip, [r4, #8]
   14430:	str	ip, [sp, #4]
   14434:	ldr	ip, [r4, #12]
   14438:	str	ip, [sp, #8]
   1443c:	ldr	ip, [r4, #16]
   14440:	str	ip, [sp, #12]
   14444:	ldr	ip, [r4, #20]
   14448:	str	ip, [sp, #16]
   1444c:	ldr	ip, [r4, #24]
   14450:	str	ip, [sp, #20]
   14454:	ldr	ip, [r4, #28]
   14458:	str	ip, [sp, #24]
   1445c:	mov	r2, r0
   14460:	mov	r0, r5
   14464:	bl	112c0 <__fprintf_chk@plt>
   14468:	b	14230 <close_stdout@@Base+0x1b84>
   1446c:	str	r3, [sp]
   14470:	mov	r3, r2
   14474:	ldr	r2, [pc, #84]	; 144d0 <close_stdout@@Base+0x1e24>
   14478:	mov	r1, #1
   1447c:	add	r2, pc, r2
   14480:	bl	112c0 <__fprintf_chk@plt>
   14484:	b	14148 <close_stdout@@Base+0x1a9c>
   14488:	ldr	r1, [pc, #68]	; 144d4 <close_stdout@@Base+0x1e28>
   1448c:	mov	r0, #0
   14490:	add	r1, pc, r1
   14494:	b	141d8 <close_stdout@@Base+0x1b2c>
   14498:	ldrdeq	r2, [r1], -ip
   1449c:	andeq	r1, r0, ip, ror #30
   144a0:	andeq	r1, r0, ip, ror #30
   144a4:	andeq	r0, r0, r8, lsr r1
   144a8:	andeq	r1, r0, ip, lsr pc
   144ac:	andeq	r2, r0, r8, asr #1
   144b0:	andeq	r1, r0, r8, asr #30
   144b4:	andeq	r1, r0, r8, lsr #30
   144b8:	andeq	r1, r0, ip, lsl #30
   144bc:	andeq	r1, r0, ip, ror #29
   144c0:	andeq	r1, r0, ip, asr #29
   144c4:	andeq	r1, r0, r8, lsr #29
   144c8:	andeq	r1, r0, r0, lsl #29
   144cc:	andeq	r1, r0, r4, asr lr
   144d0:	andeq	r1, r0, ip, lsr ip
   144d4:	andeq	r1, r0, r0, asr #28
   144d8:	push	{r4, r5, lr}
   144dc:	sub	sp, sp, #12
   144e0:	ldr	r5, [sp, #24]
   144e4:	ldr	ip, [r5]
   144e8:	cmp	ip, #0
   144ec:	beq	14508 <close_stdout@@Base+0x1e5c>
   144f0:	mov	lr, r5
   144f4:	mov	ip, #0
   144f8:	ldr	r4, [lr, #4]!
   144fc:	add	ip, ip, #1
   14500:	cmp	r4, #0
   14504:	bne	144f8 <close_stdout@@Base+0x1e4c>
   14508:	stm	sp, {r5, ip}
   1450c:	bl	14104 <close_stdout@@Base+0x1a58>
   14510:	add	sp, sp, #12
   14514:	pop	{r4, r5, pc}
   14518:	push	{r4, r5, r6, r7, lr}
   1451c:	sub	sp, sp, #60	; 0x3c
   14520:	ldr	r4, [pc, #100]	; 1458c <close_stdout@@Base+0x1ee0>
   14524:	mov	ip, #0
   14528:	ldr	r5, [pc, #96]	; 14590 <close_stdout@@Base+0x1ee4>
   1452c:	mov	lr, ip
   14530:	add	r4, pc, r4
   14534:	ldr	r6, [sp, #80]	; 0x50
   14538:	ldr	r7, [r4, r5]
   1453c:	add	r5, sp, #12
   14540:	ldr	r4, [r7]
   14544:	str	r4, [sp, #52]	; 0x34
   14548:	ldr	r4, [r6, ip]
   1454c:	cmp	r4, #0
   14550:	str	r4, [r5, ip]
   14554:	beq	14568 <close_stdout@@Base+0x1ebc>
   14558:	add	lr, lr, #1
   1455c:	add	ip, ip, #4
   14560:	cmp	lr, #10
   14564:	bne	14548 <close_stdout@@Base+0x1e9c>
   14568:	stm	sp, {r5, lr}
   1456c:	bl	14104 <close_stdout@@Base+0x1a58>
   14570:	ldr	r2, [sp, #52]	; 0x34
   14574:	ldr	r3, [r7]
   14578:	cmp	r2, r3
   1457c:	bne	14588 <close_stdout@@Base+0x1edc>
   14580:	add	sp, sp, #60	; 0x3c
   14584:	pop	{r4, r5, r6, r7, pc}
   14588:	bl	11164 <__stack_chk_fail@plt>
   1458c:	andeq	r2, r1, r8, asr #21
   14590:	andeq	r0, r0, r8, lsl #2
   14594:	push	{r3}		; (str r3, [sp, #-4]!)
   14598:	push	{r4, lr}
   1459c:	sub	sp, sp, #20
   145a0:	ldr	lr, [pc, #72]	; 145f0 <close_stdout@@Base+0x1f44>
   145a4:	add	ip, sp, #32
   145a8:	ldr	r4, [pc, #68]	; 145f4 <close_stdout@@Base+0x1f48>
   145ac:	add	lr, pc, lr
   145b0:	ldr	r3, [sp, #28]
   145b4:	ldr	r4, [lr, r4]
   145b8:	str	ip, [sp]
   145bc:	str	ip, [sp, #8]
   145c0:	ldr	ip, [r4]
   145c4:	str	ip, [sp, #12]
   145c8:	bl	14518 <close_stdout@@Base+0x1e6c>
   145cc:	ldr	r2, [sp, #12]
   145d0:	ldr	r3, [r4]
   145d4:	cmp	r2, r3
   145d8:	bne	145ec <close_stdout@@Base+0x1f40>
   145dc:	add	sp, sp, #20
   145e0:	pop	{r4, lr}
   145e4:	add	sp, sp, #4
   145e8:	bx	lr
   145ec:	bl	11164 <__stack_chk_fail@plt>
   145f0:	andeq	r2, r1, ip, asr #20
   145f4:	andeq	r0, r0, r8, lsl #2
   145f8:	ldr	r1, [pc, #132]	; 14684 <close_stdout@@Base+0x1fd8>
   145fc:	mov	r2, #5
   14600:	push	{r4, lr}
   14604:	add	r1, pc, r1
   14608:	mov	r0, #0
   1460c:	ldr	r4, [pc, #116]	; 14688 <close_stdout@@Base+0x1fdc>
   14610:	bl	11158 <dcgettext@plt>
   14614:	ldr	r2, [pc, #112]	; 1468c <close_stdout@@Base+0x1fe0>
   14618:	add	r4, pc, r4
   1461c:	add	r2, pc, r2
   14620:	mov	r1, r0
   14624:	mov	r0, #1
   14628:	bl	112a8 <__printf_chk@plt>
   1462c:	ldr	r1, [pc, #92]	; 14690 <close_stdout@@Base+0x1fe4>
   14630:	mov	r2, #5
   14634:	mov	r0, #0
   14638:	add	r1, pc, r1
   1463c:	bl	11158 <dcgettext@plt>
   14640:	ldr	r2, [pc, #76]	; 14694 <close_stdout@@Base+0x1fe8>
   14644:	ldr	r3, [pc, #76]	; 14698 <close_stdout@@Base+0x1fec>
   14648:	add	r2, pc, r2
   1464c:	add	r3, pc, r3
   14650:	mov	r1, r0
   14654:	mov	r0, #1
   14658:	bl	112a8 <__printf_chk@plt>
   1465c:	ldr	r1, [pc, #56]	; 1469c <close_stdout@@Base+0x1ff0>
   14660:	mov	r0, #0
   14664:	mov	r2, #5
   14668:	add	r1, pc, r1
   1466c:	bl	11158 <dcgettext@plt>
   14670:	ldr	r3, [pc, #40]	; 146a0 <close_stdout@@Base+0x1ff4>
   14674:	ldr	r3, [r4, r3]
   14678:	pop	{r4, lr}
   1467c:	ldr	r1, [r3]
   14680:	b	110b0 <fputs_unlocked@plt>
   14684:	andeq	r1, r0, r8, lsl #26
   14688:	andeq	r2, r1, r0, ror #19
   1468c:	andeq	r1, r0, r8, lsl #26
   14690:	andeq	r1, r0, r4, lsl #26
   14694:	andeq	r1, r0, r0, lsr #16
   14698:	andeq	r1, r0, ip, lsr #16
   1469c:	andeq	r1, r0, r8, ror #25
   146a0:	andeq	r0, r0, r8, lsr #2
   146a4:	push	{r4, lr}
   146a8:	mov	r4, r0
   146ac:	bl	1120c <malloc@plt>
   146b0:	rsbs	r3, r0, #1
   146b4:	movcc	r3, #0
   146b8:	cmp	r4, #0
   146bc:	moveq	r3, #0
   146c0:	cmp	r3, #0
   146c4:	popeq	{r4, pc}
   146c8:	bl	148b8 <close_stdout@@Base+0x220c>
   146cc:	push	{r3, r4, r5, lr}
   146d0:	mov	r4, r0
   146d4:	mvn	r0, #0
   146d8:	mov	r5, r1
   146dc:	bl	14f6c <close_stdout@@Base+0x28c0>
   146e0:	cmp	r0, r4
   146e4:	bcc	146f4 <close_stdout@@Base+0x2048>
   146e8:	mul	r0, r4, r5
   146ec:	pop	{r3, r4, r5, lr}
   146f0:	b	146a4 <close_stdout@@Base+0x1ff8>
   146f4:	bl	148b8 <close_stdout@@Base+0x220c>
   146f8:	b	146a4 <close_stdout@@Base+0x1ff8>
   146fc:	rsbs	r3, r1, #1
   14700:	push	{r4, lr}
   14704:	movcc	r3, #0
   14708:	cmp	r0, #0
   1470c:	mov	r4, r1
   14710:	moveq	r3, #0
   14714:	cmp	r3, #0
   14718:	bne	1473c <close_stdout@@Base+0x2090>
   1471c:	bl	11170 <realloc@plt>
   14720:	rsbs	r3, r0, #1
   14724:	movcc	r3, #0
   14728:	cmp	r4, #0
   1472c:	moveq	r3, #0
   14730:	cmp	r3, #0
   14734:	popeq	{r4, pc}
   14738:	bl	148b8 <close_stdout@@Base+0x220c>
   1473c:	bl	11104 <free@plt>
   14740:	mov	r0, #0
   14744:	pop	{r4, pc}
   14748:	push	{r4, r5, r6, lr}
   1474c:	mov	r5, r1
   14750:	mov	r6, r0
   14754:	mov	r1, r2
   14758:	mvn	r0, #0
   1475c:	mov	r4, r2
   14760:	bl	14f6c <close_stdout@@Base+0x28c0>
   14764:	cmp	r0, r5
   14768:	bcc	1477c <close_stdout@@Base+0x20d0>
   1476c:	mov	r0, r6
   14770:	mul	r1, r5, r4
   14774:	pop	{r4, r5, r6, lr}
   14778:	b	146fc <close_stdout@@Base+0x2050>
   1477c:	bl	148b8 <close_stdout@@Base+0x220c>
   14780:	push	{r3, r4, r5, r6, r7, lr}
   14784:	subs	r7, r0, #0
   14788:	mov	r5, r1
   1478c:	mov	r6, r2
   14790:	ldr	r4, [r1]
   14794:	beq	147cc <close_stdout@@Base+0x2120>
   14798:	movw	r0, #43690	; 0xaaaa
   1479c:	mov	r1, r2
   147a0:	bfi	r0, r0, #16, #16
   147a4:	bl	14f6c <close_stdout@@Base+0x28c0>
   147a8:	cmp	r4, r0
   147ac:	addcc	r3, r4, #1
   147b0:	addcc	r4, r4, r3, lsr #1
   147b4:	bcs	147f0 <close_stdout@@Base+0x2144>
   147b8:	str	r4, [r5]
   147bc:	mov	r0, r7
   147c0:	mul	r1, r6, r4
   147c4:	pop	{r3, r4, r5, r6, r7, lr}
   147c8:	b	146fc <close_stdout@@Base+0x2050>
   147cc:	cmp	r4, #0
   147d0:	bne	147b8 <close_stdout@@Base+0x210c>
   147d4:	mov	r0, #64	; 0x40
   147d8:	mov	r1, r2
   147dc:	bl	14f6c <close_stdout@@Base+0x28c0>
   147e0:	cmp	r0, #0
   147e4:	movne	r4, r0
   147e8:	addeq	r4, r0, #1
   147ec:	b	147b8 <close_stdout@@Base+0x210c>
   147f0:	bl	148b8 <close_stdout@@Base+0x220c>
   147f4:	cmp	r0, #0
   147f8:	push	{r3, lr}
   147fc:	ldr	r3, [r1]
   14800:	beq	1482c <close_stdout@@Base+0x2180>
   14804:	movw	r2, #43689	; 0xaaa9
   14808:	movt	r2, #43690	; 0xaaaa
   1480c:	cmp	r3, r2
   14810:	addls	r2, r3, #1
   14814:	addls	r3, r3, r2, lsr #1
   14818:	bhi	14844 <close_stdout@@Base+0x2198>
   1481c:	str	r3, [r1]
   14820:	mov	r1, r3
   14824:	pop	{r3, lr}
   14828:	b	146fc <close_stdout@@Base+0x2050>
   1482c:	cmp	r3, #0
   14830:	moveq	r3, #64	; 0x40
   14834:	str	r3, [r1]
   14838:	mov	r1, r3
   1483c:	pop	{r3, lr}
   14840:	b	146fc <close_stdout@@Base+0x2050>
   14844:	bl	148b8 <close_stdout@@Base+0x220c>
   14848:	push	{r4, lr}
   1484c:	mov	r4, r0
   14850:	bl	146a4 <close_stdout@@Base+0x1ff8>
   14854:	mov	r2, r4
   14858:	mov	r1, #0
   1485c:	pop	{r4, lr}
   14860:	b	11290 <memset@plt>
   14864:	push	{r3, lr}
   14868:	bl	110a4 <calloc@plt>
   1486c:	cmp	r0, #0
   14870:	popne	{r3, pc}
   14874:	bl	148b8 <close_stdout@@Base+0x220c>
   14878:	push	{r3, r4, r5, lr}
   1487c:	mov	r4, r1
   14880:	mov	r5, r0
   14884:	mov	r0, r1
   14888:	bl	146a4 <close_stdout@@Base+0x1ff8>
   1488c:	mov	r1, r5
   14890:	mov	r2, r4
   14894:	pop	{r3, r4, r5, lr}
   14898:	b	1111c <memcpy@plt>
   1489c:	push	{r4, lr}
   148a0:	mov	r4, r0
   148a4:	bl	11260 <strlen@plt>
   148a8:	add	r1, r0, #1
   148ac:	mov	r0, r4
   148b0:	pop	{r4, lr}
   148b4:	b	14878 <close_stdout@@Base+0x21cc>
   148b8:	ldr	r3, [pc, #64]	; 14900 <close_stdout@@Base+0x2254>
   148bc:	mov	r2, #5
   148c0:	ldr	ip, [pc, #60]	; 14904 <close_stdout@@Base+0x2258>
   148c4:	mov	r0, #0
   148c8:	add	r3, pc, r3
   148cc:	ldr	r1, [pc, #52]	; 14908 <close_stdout@@Base+0x225c>
   148d0:	push	{r4, lr}
   148d4:	add	r1, pc, r1
   148d8:	ldr	r3, [r3, ip]
   148dc:	ldr	r4, [r3]
   148e0:	bl	11158 <dcgettext@plt>
   148e4:	ldr	r2, [pc, #32]	; 1490c <close_stdout@@Base+0x2260>
   148e8:	mov	r1, #0
   148ec:	add	r2, pc, r2
   148f0:	mov	r3, r0
   148f4:	mov	r0, r4
   148f8:	bl	111e8 <error@plt>
   148fc:	bl	1135c <abort@plt>
   14900:	andeq	r2, r1, r0, lsr r7
   14904:	andeq	r0, r0, ip, lsr #2
   14908:	andeq	r1, r0, ip, ror #21
   1490c:	strdeq	r1, [r0], -r4
   14910:	push	{r3, lr}
   14914:	bl	11188 <__strndup@plt>
   14918:	cmp	r0, #0
   1491c:	popne	{r3, pc}
   14920:	bl	148b8 <close_stdout@@Base+0x220c>
   14924:	push	{r4, r5, r6, lr}
   14928:	sub	sp, sp, #8
   1492c:	mov	r4, r0
   14930:	bl	112b4 <fileno@plt>
   14934:	cmp	r0, #0
   14938:	mov	r0, r4
   1493c:	blt	149b8 <close_stdout@@Base+0x230c>
   14940:	bl	11224 <__freading@plt>
   14944:	cmp	r0, #0
   14948:	bne	14984 <close_stdout@@Base+0x22d8>
   1494c:	mov	r0, r4
   14950:	bl	149c4 <close_stdout@@Base+0x2318>
   14954:	cmp	r0, #0
   14958:	beq	149b4 <close_stdout@@Base+0x2308>
   1495c:	bl	11278 <__errno_location@plt>
   14960:	ldr	r6, [r0]
   14964:	mov	r5, r0
   14968:	mov	r0, r4
   1496c:	bl	112cc <fclose@plt>
   14970:	cmp	r6, #0
   14974:	mvnne	r0, #0
   14978:	strne	r6, [r5]
   1497c:	add	sp, sp, #8
   14980:	pop	{r4, r5, r6, pc}
   14984:	mov	r0, r4
   14988:	bl	112b4 <fileno@plt>
   1498c:	mov	r1, #1
   14990:	mov	r2, #0
   14994:	mov	r3, #0
   14998:	str	r1, [sp]
   1499c:	bl	111ac <lseek64@plt>
   149a0:	mvn	r2, #0
   149a4:	mvn	r3, #0
   149a8:	cmp	r1, r3
   149ac:	cmpeq	r0, r2
   149b0:	bne	1494c <close_stdout@@Base+0x22a0>
   149b4:	mov	r0, r4
   149b8:	add	sp, sp, #8
   149bc:	pop	{r4, r5, r6, lr}
   149c0:	b	112cc <fclose@plt>
   149c4:	push	{r4, lr}
   149c8:	subs	r4, r0, #0
   149cc:	sub	sp, sp, #8
   149d0:	beq	149e0 <close_stdout@@Base+0x2334>
   149d4:	bl	11224 <__freading@plt>
   149d8:	cmp	r0, #0
   149dc:	bne	149f0 <close_stdout@@Base+0x2344>
   149e0:	mov	r0, r4
   149e4:	add	sp, sp, #8
   149e8:	pop	{r4, lr}
   149ec:	b	110e0 <fflush@plt>
   149f0:	ldr	r3, [r4]
   149f4:	tst	r3, #256	; 0x100
   149f8:	beq	149e0 <close_stdout@@Base+0x2334>
   149fc:	mov	r3, #1
   14a00:	mov	r0, r4
   14a04:	str	r3, [sp]
   14a08:	mov	r2, #0
   14a0c:	mov	r3, #0
   14a10:	bl	14a24 <close_stdout@@Base+0x2378>
   14a14:	mov	r0, r4
   14a18:	add	sp, sp, #8
   14a1c:	pop	{r4, lr}
   14a20:	b	110e0 <fflush@plt>
   14a24:	push	{r4, r5, r6, r7, lr}
   14a28:	sub	sp, sp, #20
   14a2c:	ldmib	r0, {r1, ip}
   14a30:	mov	r6, r0
   14a34:	ldr	r4, [sp, #40]	; 0x28
   14a38:	cmp	ip, r1
   14a3c:	beq	14a54 <close_stdout@@Base+0x23a8>
   14a40:	str	r4, [sp, #40]	; 0x28
   14a44:	mov	r0, r6
   14a48:	add	sp, sp, #20
   14a4c:	pop	{r4, r5, r6, r7, lr}
   14a50:	b	112d8 <fseeko64@plt>
   14a54:	ldr	ip, [r0, #20]
   14a58:	ldr	r1, [r0, #16]
   14a5c:	cmp	ip, r1
   14a60:	bne	14a40 <close_stdout@@Base+0x2394>
   14a64:	ldr	r7, [r0, #36]	; 0x24
   14a68:	cmp	r7, #0
   14a6c:	bne	14a40 <close_stdout@@Base+0x2394>
   14a70:	str	r2, [sp, #12]
   14a74:	mvn	r5, #0
   14a78:	str	r3, [sp, #8]
   14a7c:	bl	112b4 <fileno@plt>
   14a80:	str	r4, [sp]
   14a84:	mvn	r4, #0
   14a88:	ldr	r2, [sp, #12]
   14a8c:	ldr	r3, [sp, #8]
   14a90:	bl	111ac <lseek64@plt>
   14a94:	mov	r2, r0
   14a98:	mov	r3, r1
   14a9c:	cmp	r3, r5
   14aa0:	cmpeq	r2, r4
   14aa4:	beq	14ac4 <close_stdout@@Base+0x2418>
   14aa8:	ldr	r1, [r6]
   14aac:	mov	r0, r7
   14ab0:	strd	r2, [r6, #80]	; 0x50
   14ab4:	bic	r3, r1, #16
   14ab8:	str	r3, [r6]
   14abc:	add	sp, sp, #20
   14ac0:	pop	{r4, r5, r6, r7, pc}
   14ac4:	mvn	r0, #0
   14ac8:	b	14abc <close_stdout@@Base+0x2410>
   14acc:	push	{r4, r5, r6, lr}
   14ad0:	mov	r4, r0
   14ad4:	bl	111d0 <__fpending@plt>
   14ad8:	mov	r6, r0
   14adc:	mov	r0, r4
   14ae0:	ldr	r4, [r4]
   14ae4:	bl	14924 <close_stdout@@Base+0x2278>
   14ae8:	and	r4, r4, #32
   14aec:	adds	r5, r0, #0
   14af0:	movne	r5, #1
   14af4:	cmp	r4, #0
   14af8:	bne	14b18 <close_stdout@@Base+0x246c>
   14afc:	cmp	r5, #0
   14b00:	beq	14b10 <close_stdout@@Base+0x2464>
   14b04:	cmp	r6, #0
   14b08:	beq	14b34 <close_stdout@@Base+0x2488>
   14b0c:	mvn	r4, #0
   14b10:	mov	r0, r4
   14b14:	pop	{r4, r5, r6, pc}
   14b18:	cmp	r5, #0
   14b1c:	bne	14b0c <close_stdout@@Base+0x2460>
   14b20:	bl	11278 <__errno_location@plt>
   14b24:	mvn	r4, #0
   14b28:	str	r5, [r0]
   14b2c:	mov	r0, r4
   14b30:	pop	{r4, r5, r6, pc}
   14b34:	bl	11278 <__errno_location@plt>
   14b38:	ldr	r4, [r0]
   14b3c:	subs	r4, r4, #9
   14b40:	mvnne	r4, #0
   14b44:	mov	r0, r4
   14b48:	pop	{r4, r5, r6, pc}
   14b4c:	ldr	r3, [pc, #984]	; 14f2c <close_stdout@@Base+0x2880>
   14b50:	mov	r0, #14
   14b54:	ldr	r2, [pc, #980]	; 14f30 <close_stdout@@Base+0x2884>
   14b58:	add	r3, pc, r3
   14b5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b60:	sub	sp, sp, #132	; 0x84
   14b64:	ldr	r6, [r3, r2]
   14b68:	ldr	r3, [r6]
   14b6c:	str	r3, [sp, #124]	; 0x7c
   14b70:	bl	11314 <nl_langinfo@plt>
   14b74:	subs	r5, r0, #0
   14b78:	beq	14c2c <close_stdout@@Base+0x2580>
   14b7c:	ldr	r3, [pc, #944]	; 14f34 <close_stdout@@Base+0x2888>
   14b80:	ldr	r4, [pc, r3]
   14b84:	cmp	r4, #0
   14b88:	beq	14c38 <close_stdout@@Base+0x258c>
   14b8c:	ldrb	r7, [r4]
   14b90:	cmp	r7, #0
   14b94:	bne	14bc8 <close_stdout@@Base+0x251c>
   14b98:	b	14c00 <close_stdout@@Base+0x2554>
   14b9c:	mov	r0, r4
   14ba0:	bl	11260 <strlen@plt>
   14ba4:	add	r0, r0, #1
   14ba8:	add	r7, r4, r0
   14bac:	mov	r0, r7
   14bb0:	bl	11260 <strlen@plt>
   14bb4:	add	r0, r0, #1
   14bb8:	add	r4, r7, r0
   14bbc:	ldrb	r7, [r7, r0]
   14bc0:	cmp	r7, #0
   14bc4:	beq	14c00 <close_stdout@@Base+0x2554>
   14bc8:	mov	r0, r5
   14bcc:	mov	r1, r4
   14bd0:	bl	110c8 <strcmp@plt>
   14bd4:	cmp	r0, #0
   14bd8:	beq	14bf0 <close_stdout@@Base+0x2544>
   14bdc:	cmp	r7, #42	; 0x2a
   14be0:	bne	14b9c <close_stdout@@Base+0x24f0>
   14be4:	ldrb	r3, [r4, #1]
   14be8:	cmp	r3, #0
   14bec:	bne	14b9c <close_stdout@@Base+0x24f0>
   14bf0:	mov	r0, r4
   14bf4:	bl	11260 <strlen@plt>
   14bf8:	add	r0, r0, #1
   14bfc:	add	r5, r4, r0
   14c00:	ldrb	r3, [r5]
   14c04:	cmp	r3, #0
   14c08:	ldreq	r5, [pc, #808]	; 14f38 <close_stdout@@Base+0x288c>
   14c0c:	addeq	r5, pc, r5
   14c10:	ldr	r2, [sp, #124]	; 0x7c
   14c14:	mov	r0, r5
   14c18:	ldr	r3, [r6]
   14c1c:	cmp	r2, r3
   14c20:	bne	14f00 <close_stdout@@Base+0x2854>
   14c24:	add	sp, sp, #132	; 0x84
   14c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c2c:	ldr	r5, [pc, #776]	; 14f3c <close_stdout@@Base+0x2890>
   14c30:	add	r5, pc, r5
   14c34:	b	14b7c <close_stdout@@Base+0x24d0>
   14c38:	ldr	r0, [pc, #768]	; 14f40 <close_stdout@@Base+0x2894>
   14c3c:	add	r0, pc, r0
   14c40:	bl	11200 <getenv@plt>
   14c44:	subs	r8, r0, #0
   14c48:	beq	14ed8 <close_stdout@@Base+0x282c>
   14c4c:	ldrb	r3, [r8]
   14c50:	cmp	r3, #0
   14c54:	beq	14e6c <close_stdout@@Base+0x27c0>
   14c58:	bl	11260 <strlen@plt>
   14c5c:	subs	sl, r0, #0
   14c60:	subne	r3, sl, #1
   14c64:	bne	14e7c <close_stdout@@Base+0x27d0>
   14c68:	mov	r9, #0
   14c6c:	mov	fp, r9
   14c70:	add	r9, sl, r9
   14c74:	add	r0, r9, #14
   14c78:	bl	1120c <malloc@plt>
   14c7c:	subs	r7, r0, #0
   14c80:	beq	14ecc <close_stdout@@Base+0x2820>
   14c84:	mov	r1, r8
   14c88:	mov	r2, sl
   14c8c:	bl	1111c <memcpy@plt>
   14c90:	cmp	fp, #0
   14c94:	add	ip, r7, r9
   14c98:	movne	r3, #47	; 0x2f
   14c9c:	strbne	r3, [r7, sl]
   14ca0:	ldr	r3, [pc, #668]	; 14f44 <close_stdout@@Base+0x2898>
   14ca4:	add	r3, pc, r3
   14ca8:	ldm	r3!, {r0, r1, r2}
   14cac:	ldrh	r3, [r3]
   14cb0:	str	r0, [r7, r9]
   14cb4:	mov	r0, r7
   14cb8:	str	r1, [ip, #4]
   14cbc:	mov	r1, #32768	; 0x8000
   14cc0:	strh	r3, [ip, #12]
   14cc4:	str	r2, [ip, #8]
   14cc8:	bl	111f4 <open64@plt>
   14ccc:	subs	r8, r0, #0
   14cd0:	blt	14e94 <close_stdout@@Base+0x27e8>
   14cd4:	ldr	r1, [pc, #620]	; 14f48 <close_stdout@@Base+0x289c>
   14cd8:	add	r1, pc, r1
   14cdc:	bl	11098 <fdopen@plt>
   14ce0:	subs	fp, r0, #0
   14ce4:	beq	14eec <close_stdout@@Base+0x2840>
   14ce8:	ldr	r0, [pc, #604]	; 14f4c <close_stdout@@Base+0x28a0>
   14cec:	add	sl, sp, #20
   14cf0:	add	r9, sp, #72	; 0x48
   14cf4:	mov	r8, #0
   14cf8:	add	r0, pc, r0
   14cfc:	str	r0, [sp, #12]
   14d00:	ldr	r3, [fp, #4]
   14d04:	ldr	r2, [fp, #8]
   14d08:	cmp	r3, r2
   14d0c:	bcs	14df8 <close_stdout@@Base+0x274c>
   14d10:	add	r2, r3, #1
   14d14:	str	r2, [fp, #4]
   14d18:	ldrb	r0, [r3]
   14d1c:	cmp	r0, #32
   14d20:	beq	14d00 <close_stdout@@Base+0x2654>
   14d24:	sub	r3, r0, #9
   14d28:	cmp	r3, #1
   14d2c:	bls	14d00 <close_stdout@@Base+0x2654>
   14d30:	cmp	r0, #35	; 0x23
   14d34:	beq	14e0c <close_stdout@@Base+0x2760>
   14d38:	mov	r1, fp
   14d3c:	bl	1126c <ungetc@plt>
   14d40:	mov	r0, fp
   14d44:	ldr	r1, [sp, #12]
   14d48:	mov	r2, sl
   14d4c:	mov	r3, r9
   14d50:	bl	1129c <fscanf@plt>
   14d54:	cmp	r0, #1
   14d58:	ble	14e3c <close_stdout@@Base+0x2790>
   14d5c:	mov	r0, sl
   14d60:	bl	11260 <strlen@plt>
   14d64:	str	r0, [sp, #8]
   14d68:	mov	r0, r9
   14d6c:	bl	11260 <strlen@plt>
   14d70:	cmp	r8, #0
   14d74:	mov	r2, r0
   14d78:	bne	14ea0 <close_stdout@@Base+0x27f4>
   14d7c:	ldr	r3, [sp, #8]
   14d80:	str	r2, [sp]
   14d84:	add	r8, r0, r3
   14d88:	add	r0, r8, #3
   14d8c:	add	r8, r8, #2
   14d90:	bl	1120c <malloc@plt>
   14d94:	ldr	r2, [sp]
   14d98:	mov	r3, r0
   14d9c:	cmp	r3, #0
   14da0:	beq	14f04 <close_stdout@@Base+0x2858>
   14da4:	ldr	r0, [sp, #8]
   14da8:	movw	r1, #65534	; 0xfffe
   14dac:	movt	r1, #65535	; 0xffff
   14db0:	rsb	r2, r2, r8
   14db4:	rsb	r1, r0, r1
   14db8:	stm	sp, {r2, r3}
   14dbc:	add	r0, r1, r2
   14dc0:	mov	r1, sl
   14dc4:	add	r0, r3, r0
   14dc8:	mov	r4, r3
   14dcc:	bl	111c4 <strcpy@plt>
   14dd0:	ldr	r2, [sp]
   14dd4:	ldr	r3, [sp, #4]
   14dd8:	mov	r1, r9
   14ddc:	sub	r0, r2, #1
   14de0:	add	r0, r3, r0
   14de4:	bl	111c4 <strcpy@plt>
   14de8:	ldr	r3, [fp, #4]
   14dec:	ldr	r2, [fp, #8]
   14df0:	cmp	r3, r2
   14df4:	bcc	14d10 <close_stdout@@Base+0x2664>
   14df8:	mov	r0, fp
   14dfc:	bl	112e4 <__uflow@plt>
   14e00:	cmn	r0, #1
   14e04:	beq	14e3c <close_stdout@@Base+0x2790>
   14e08:	b	14d1c <close_stdout@@Base+0x2670>
   14e0c:	ldr	r3, [fp, #4]
   14e10:	ldr	r2, [fp, #8]
   14e14:	cmp	r3, r2
   14e18:	bcs	14f20 <close_stdout@@Base+0x2874>
   14e1c:	add	r2, r3, #1
   14e20:	str	r2, [fp, #4]
   14e24:	ldrb	r0, [r3]
   14e28:	cmp	r0, #10
   14e2c:	cmnne	r0, #1
   14e30:	bne	14e0c <close_stdout@@Base+0x2760>
   14e34:	cmn	r0, #1
   14e38:	bne	14d00 <close_stdout@@Base+0x2654>
   14e3c:	mov	r0, fp
   14e40:	bl	14924 <close_stdout@@Base+0x2278>
   14e44:	cmp	r8, #0
   14e48:	beq	14e94 <close_stdout@@Base+0x27e8>
   14e4c:	mov	r3, #0
   14e50:	strb	r3, [r4, r8]
   14e54:	mov	r0, r7
   14e58:	bl	11104 <free@plt>
   14e5c:	ldr	r3, [pc, #236]	; 14f50 <close_stdout@@Base+0x28a4>
   14e60:	add	r3, pc, r3
   14e64:	str	r4, [r3]
   14e68:	b	14b8c <close_stdout@@Base+0x24e0>
   14e6c:	ldr	r8, [pc, #224]	; 14f54 <close_stdout@@Base+0x28a8>
   14e70:	mov	r3, #7
   14e74:	mov	sl, #8
   14e78:	add	r8, pc, r8
   14e7c:	ldrb	r3, [r8, r3]
   14e80:	cmp	r3, #47	; 0x2f
   14e84:	movne	r9, #1
   14e88:	movne	fp, r9
   14e8c:	bne	14c70 <close_stdout@@Base+0x25c4>
   14e90:	b	14c68 <close_stdout@@Base+0x25bc>
   14e94:	ldr	r4, [pc, #188]	; 14f58 <close_stdout@@Base+0x28ac>
   14e98:	add	r4, pc, r4
   14e9c:	b	14e54 <close_stdout@@Base+0x27a8>
   14ea0:	ldr	r0, [sp, #8]
   14ea4:	str	r2, [sp]
   14ea8:	add	r3, r0, r2
   14eac:	mov	r0, r4
   14eb0:	add	r8, r3, r8
   14eb4:	add	r1, r8, #3
   14eb8:	add	r8, r8, #2
   14ebc:	bl	11170 <realloc@plt>
   14ec0:	ldr	r2, [sp]
   14ec4:	mov	r3, r0
   14ec8:	b	14d9c <close_stdout@@Base+0x26f0>
   14ecc:	ldr	r4, [pc, #136]	; 14f5c <close_stdout@@Base+0x28b0>
   14ed0:	add	r4, pc, r4
   14ed4:	b	14e5c <close_stdout@@Base+0x27b0>
   14ed8:	ldr	r8, [pc, #128]	; 14f60 <close_stdout@@Base+0x28b4>
   14edc:	mov	r3, #7
   14ee0:	mov	sl, #8
   14ee4:	add	r8, pc, r8
   14ee8:	b	14e7c <close_stdout@@Base+0x27d0>
   14eec:	ldr	r4, [pc, #112]	; 14f64 <close_stdout@@Base+0x28b8>
   14ef0:	mov	r0, r8
   14ef4:	add	r4, pc, r4
   14ef8:	bl	11368 <close@plt>
   14efc:	b	14e54 <close_stdout@@Base+0x27a8>
   14f00:	bl	11164 <__stack_chk_fail@plt>
   14f04:	mov	r0, r4
   14f08:	ldr	r4, [pc, #88]	; 14f68 <close_stdout@@Base+0x28bc>
   14f0c:	bl	11104 <free@plt>
   14f10:	mov	r0, fp
   14f14:	add	r4, pc, r4
   14f18:	bl	14924 <close_stdout@@Base+0x2278>
   14f1c:	b	14e54 <close_stdout@@Base+0x27a8>
   14f20:	mov	r0, fp
   14f24:	bl	112e4 <__uflow@plt>
   14f28:	b	14e28 <close_stdout@@Base+0x277c>
   14f2c:	andeq	r2, r1, r0, lsr #9
   14f30:	andeq	r0, r0, r8, lsl #2
   14f34:	andeq	r2, r1, ip, ror r7
   14f38:	ldrdeq	r1, [r0], -r4
   14f3c:	strdeq	r1, [r0], -ip
   14f40:	andeq	r1, r0, ip, lsr #15
   14f44:	andeq	r1, r0, r4, asr r7
   14f48:	andeq	r0, r0, r4, lsr pc
   14f4c:	andeq	r1, r0, r0, lsl r7
   14f50:	muleq	r1, ip, r4
   14f54:	andeq	r1, r0, ip, asr r5
   14f58:	muleq	r0, r4, r0
   14f5c:	andeq	r1, r0, ip, asr r0
   14f60:	strdeq	r1, [r0], -r0
   14f64:	andeq	r1, r0, r8, lsr r0
   14f68:	andeq	r1, r0, r8, lsl r0
   14f6c:	subs	r2, r1, #1
   14f70:	bxeq	lr
   14f74:	bcc	1514c <close_stdout@@Base+0x2aa0>
   14f78:	cmp	r0, r1
   14f7c:	bls	15130 <close_stdout@@Base+0x2a84>
   14f80:	tst	r1, r2
   14f84:	beq	1513c <close_stdout@@Base+0x2a90>
   14f88:	clz	r3, r0
   14f8c:	clz	r2, r1
   14f90:	sub	r3, r2, r3
   14f94:	rsbs	r3, r3, #31
   14f98:	addne	r3, r3, r3, lsl #1
   14f9c:	mov	r2, #0
   14fa0:	addne	pc, pc, r3, lsl #2
   14fa4:	nop	{0}
   14fa8:	cmp	r0, r1, lsl #31
   14fac:	adc	r2, r2, r2
   14fb0:	subcs	r0, r0, r1, lsl #31
   14fb4:	cmp	r0, r1, lsl #30
   14fb8:	adc	r2, r2, r2
   14fbc:	subcs	r0, r0, r1, lsl #30
   14fc0:	cmp	r0, r1, lsl #29
   14fc4:	adc	r2, r2, r2
   14fc8:	subcs	r0, r0, r1, lsl #29
   14fcc:	cmp	r0, r1, lsl #28
   14fd0:	adc	r2, r2, r2
   14fd4:	subcs	r0, r0, r1, lsl #28
   14fd8:	cmp	r0, r1, lsl #27
   14fdc:	adc	r2, r2, r2
   14fe0:	subcs	r0, r0, r1, lsl #27
   14fe4:	cmp	r0, r1, lsl #26
   14fe8:	adc	r2, r2, r2
   14fec:	subcs	r0, r0, r1, lsl #26
   14ff0:	cmp	r0, r1, lsl #25
   14ff4:	adc	r2, r2, r2
   14ff8:	subcs	r0, r0, r1, lsl #25
   14ffc:	cmp	r0, r1, lsl #24
   15000:	adc	r2, r2, r2
   15004:	subcs	r0, r0, r1, lsl #24
   15008:	cmp	r0, r1, lsl #23
   1500c:	adc	r2, r2, r2
   15010:	subcs	r0, r0, r1, lsl #23
   15014:	cmp	r0, r1, lsl #22
   15018:	adc	r2, r2, r2
   1501c:	subcs	r0, r0, r1, lsl #22
   15020:	cmp	r0, r1, lsl #21
   15024:	adc	r2, r2, r2
   15028:	subcs	r0, r0, r1, lsl #21
   1502c:	cmp	r0, r1, lsl #20
   15030:	adc	r2, r2, r2
   15034:	subcs	r0, r0, r1, lsl #20
   15038:	cmp	r0, r1, lsl #19
   1503c:	adc	r2, r2, r2
   15040:	subcs	r0, r0, r1, lsl #19
   15044:	cmp	r0, r1, lsl #18
   15048:	adc	r2, r2, r2
   1504c:	subcs	r0, r0, r1, lsl #18
   15050:	cmp	r0, r1, lsl #17
   15054:	adc	r2, r2, r2
   15058:	subcs	r0, r0, r1, lsl #17
   1505c:	cmp	r0, r1, lsl #16
   15060:	adc	r2, r2, r2
   15064:	subcs	r0, r0, r1, lsl #16
   15068:	cmp	r0, r1, lsl #15
   1506c:	adc	r2, r2, r2
   15070:	subcs	r0, r0, r1, lsl #15
   15074:	cmp	r0, r1, lsl #14
   15078:	adc	r2, r2, r2
   1507c:	subcs	r0, r0, r1, lsl #14
   15080:	cmp	r0, r1, lsl #13
   15084:	adc	r2, r2, r2
   15088:	subcs	r0, r0, r1, lsl #13
   1508c:	cmp	r0, r1, lsl #12
   15090:	adc	r2, r2, r2
   15094:	subcs	r0, r0, r1, lsl #12
   15098:	cmp	r0, r1, lsl #11
   1509c:	adc	r2, r2, r2
   150a0:	subcs	r0, r0, r1, lsl #11
   150a4:	cmp	r0, r1, lsl #10
   150a8:	adc	r2, r2, r2
   150ac:	subcs	r0, r0, r1, lsl #10
   150b0:	cmp	r0, r1, lsl #9
   150b4:	adc	r2, r2, r2
   150b8:	subcs	r0, r0, r1, lsl #9
   150bc:	cmp	r0, r1, lsl #8
   150c0:	adc	r2, r2, r2
   150c4:	subcs	r0, r0, r1, lsl #8
   150c8:	cmp	r0, r1, lsl #7
   150cc:	adc	r2, r2, r2
   150d0:	subcs	r0, r0, r1, lsl #7
   150d4:	cmp	r0, r1, lsl #6
   150d8:	adc	r2, r2, r2
   150dc:	subcs	r0, r0, r1, lsl #6
   150e0:	cmp	r0, r1, lsl #5
   150e4:	adc	r2, r2, r2
   150e8:	subcs	r0, r0, r1, lsl #5
   150ec:	cmp	r0, r1, lsl #4
   150f0:	adc	r2, r2, r2
   150f4:	subcs	r0, r0, r1, lsl #4
   150f8:	cmp	r0, r1, lsl #3
   150fc:	adc	r2, r2, r2
   15100:	subcs	r0, r0, r1, lsl #3
   15104:	cmp	r0, r1, lsl #2
   15108:	adc	r2, r2, r2
   1510c:	subcs	r0, r0, r1, lsl #2
   15110:	cmp	r0, r1, lsl #1
   15114:	adc	r2, r2, r2
   15118:	subcs	r0, r0, r1, lsl #1
   1511c:	cmp	r0, r1
   15120:	adc	r2, r2, r2
   15124:	subcs	r0, r0, r1
   15128:	mov	r0, r2
   1512c:	bx	lr
   15130:	moveq	r0, #1
   15134:	movne	r0, #0
   15138:	bx	lr
   1513c:	clz	r2, r1
   15140:	rsb	r2, r2, #31
   15144:	lsr	r0, r0, r2
   15148:	bx	lr
   1514c:	cmp	r0, #0
   15150:	mvnne	r0, #0
   15154:	b	151b4 <close_stdout@@Base+0x2b08>
   15158:	cmp	r1, #0
   1515c:	beq	1514c <close_stdout@@Base+0x2aa0>
   15160:	push	{r0, r1, lr}
   15164:	bl	14f6c <close_stdout@@Base+0x28c0>
   15168:	pop	{r1, r2, lr}
   1516c:	mul	r3, r2, r0
   15170:	sub	r1, r1, r3
   15174:	bx	lr
   15178:	cmp	r3, #0
   1517c:	cmpeq	r2, #0
   15180:	bne	15198 <close_stdout@@Base+0x2aec>
   15184:	cmp	r1, #0
   15188:	cmpeq	r0, #0
   1518c:	mvnne	r1, #0
   15190:	mvnne	r0, #0
   15194:	b	151b4 <close_stdout@@Base+0x2b08>
   15198:	sub	sp, sp, #8
   1519c:	push	{sp, lr}
   151a0:	bl	15200 <close_stdout@@Base+0x2b54>
   151a4:	ldr	lr, [sp, #4]
   151a8:	add	sp, sp, #8
   151ac:	pop	{r2, r3}
   151b0:	bx	lr
   151b4:	push	{r1, lr}
   151b8:	mov	r0, #8
   151bc:	bl	110bc <raise@plt>
   151c0:	pop	{r1, pc}
   151c4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   151c8:	mov	r8, r2
   151cc:	mov	r6, r0
   151d0:	mov	r7, r1
   151d4:	mov	sl, r3
   151d8:	ldr	r9, [sp, #32]
   151dc:	bl	1523c <close_stdout@@Base+0x2b90>
   151e0:	umull	r4, r5, r8, r0
   151e4:	mul	r8, r8, r1
   151e8:	mla	r2, r0, sl, r8
   151ec:	add	r5, r2, r5
   151f0:	subs	r4, r6, r4
   151f4:	sbc	r5, r7, r5
   151f8:	strd	r4, [r9]
   151fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15200:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15204:	mov	r8, r2
   15208:	mov	r6, r0
   1520c:	mov	r7, r1
   15210:	mov	r5, r3
   15214:	ldr	r9, [sp, #32]
   15218:	bl	156c8 <close_stdout@@Base+0x301c>
   1521c:	mul	r3, r0, r5
   15220:	umull	r4, r5, r0, r8
   15224:	mla	r8, r8, r1, r3
   15228:	add	r5, r8, r5
   1522c:	subs	r4, r6, r4
   15230:	sbc	r5, r7, r5
   15234:	strd	r4, [r9]
   15238:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   1523c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15240:	rsbs	r4, r0, #0
   15244:	rsc	r5, r1, #0
   15248:	cmp	r1, #0
   1524c:	mvn	r6, #0
   15250:	sub	sp, sp, #12
   15254:	movge	r4, r0
   15258:	movge	r5, r1
   1525c:	movge	r6, #0
   15260:	cmp	r3, #0
   15264:	blt	1549c <close_stdout@@Base+0x2df0>
   15268:	cmp	r3, #0
   1526c:	mov	sl, r4
   15270:	mov	ip, r5
   15274:	mov	r0, r2
   15278:	mov	r1, r3
   1527c:	mov	r8, r2
   15280:	mov	r7, r4
   15284:	mov	r9, r5
   15288:	bne	15380 <close_stdout@@Base+0x2cd4>
   1528c:	cmp	r2, r5
   15290:	bls	153bc <close_stdout@@Base+0x2d10>
   15294:	clz	r3, r2
   15298:	cmp	r3, #0
   1529c:	rsbne	r2, r3, #32
   152a0:	lslne	r8, r0, r3
   152a4:	lsrne	r2, r4, r2
   152a8:	lslne	r7, r4, r3
   152ac:	orrne	r9, r2, r5, lsl r3
   152b0:	lsr	r4, r8, #16
   152b4:	uxth	sl, r8
   152b8:	mov	r1, r4
   152bc:	mov	r0, r9
   152c0:	bl	14f6c <close_stdout@@Base+0x28c0>
   152c4:	mov	r1, r4
   152c8:	mov	fp, r0
   152cc:	mov	r0, r9
   152d0:	bl	15158 <close_stdout@@Base+0x2aac>
   152d4:	mul	r0, sl, fp
   152d8:	lsr	r2, r7, #16
   152dc:	orr	r1, r2, r1, lsl #16
   152e0:	cmp	r0, r1
   152e4:	bls	15308 <close_stdout@@Base+0x2c5c>
   152e8:	adds	r1, r1, r8
   152ec:	sub	r3, fp, #1
   152f0:	bcs	15304 <close_stdout@@Base+0x2c58>
   152f4:	cmp	r0, r1
   152f8:	subhi	fp, fp, #2
   152fc:	addhi	r1, r1, r8
   15300:	bhi	15308 <close_stdout@@Base+0x2c5c>
   15304:	mov	fp, r3
   15308:	rsb	r9, r0, r1
   1530c:	mov	r1, r4
   15310:	uxth	r7, r7
   15314:	mov	r0, r9
   15318:	bl	14f6c <close_stdout@@Base+0x28c0>
   1531c:	mov	r1, r4
   15320:	mov	r5, r0
   15324:	mov	r0, r9
   15328:	bl	15158 <close_stdout@@Base+0x2aac>
   1532c:	mul	sl, sl, r5
   15330:	orr	r1, r7, r1, lsl #16
   15334:	cmp	sl, r1
   15338:	bls	15358 <close_stdout@@Base+0x2cac>
   1533c:	adds	r8, r1, r8
   15340:	sub	r3, r5, #1
   15344:	bcs	15354 <close_stdout@@Base+0x2ca8>
   15348:	cmp	sl, r8
   1534c:	subhi	r5, r5, #2
   15350:	bhi	15358 <close_stdout@@Base+0x2cac>
   15354:	mov	r5, r3
   15358:	orr	r3, r5, fp, lsl #16
   1535c:	mov	r4, #0
   15360:	cmp	r6, #0
   15364:	mov	r0, r3
   15368:	mov	r1, r4
   1536c:	beq	15378 <close_stdout@@Base+0x2ccc>
   15370:	rsbs	r0, r0, #0
   15374:	rsc	r1, r1, #0
   15378:	add	sp, sp, #12
   1537c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15380:	cmp	r3, r5
   15384:	movhi	r4, #0
   15388:	movhi	r3, r4
   1538c:	bhi	15360 <close_stdout@@Base+0x2cb4>
   15390:	clz	r5, r1
   15394:	cmp	r5, #0
   15398:	bne	15588 <close_stdout@@Base+0x2edc>
   1539c:	cmp	r1, ip
   153a0:	cmpcs	r2, sl
   153a4:	movhi	r4, #0
   153a8:	movls	r4, #1
   153ac:	movls	r3, #1
   153b0:	movls	r4, r5
   153b4:	movhi	r3, r4
   153b8:	b	15360 <close_stdout@@Base+0x2cb4>
   153bc:	cmp	r2, #0
   153c0:	bne	153d4 <close_stdout@@Base+0x2d28>
   153c4:	mov	r1, r2
   153c8:	mov	r0, #1
   153cc:	bl	14f6c <close_stdout@@Base+0x28c0>
   153d0:	mov	r8, r0
   153d4:	clz	r3, r8
   153d8:	cmp	r3, #0
   153dc:	bne	154ac <close_stdout@@Base+0x2e00>
   153e0:	rsb	r9, r8, r9
   153e4:	lsr	r5, r8, #16
   153e8:	uxth	sl, r8
   153ec:	mov	r4, #1
   153f0:	mov	r1, r5
   153f4:	mov	r0, r9
   153f8:	bl	14f6c <close_stdout@@Base+0x28c0>
   153fc:	mov	r1, r5
   15400:	mov	fp, r0
   15404:	mov	r0, r9
   15408:	bl	15158 <close_stdout@@Base+0x2aac>
   1540c:	mul	r0, sl, fp
   15410:	lsr	r2, r7, #16
   15414:	orr	r1, r2, r1, lsl #16
   15418:	cmp	r0, r1
   1541c:	bls	1543c <close_stdout@@Base+0x2d90>
   15420:	adds	r1, r1, r8
   15424:	sub	r3, fp, #1
   15428:	bcs	156a8 <close_stdout@@Base+0x2ffc>
   1542c:	cmp	r0, r1
   15430:	subhi	fp, fp, #2
   15434:	addhi	r1, r1, r8
   15438:	bls	156a8 <close_stdout@@Base+0x2ffc>
   1543c:	rsb	r2, r0, r1
   15440:	mov	r1, r5
   15444:	str	r2, [sp]
   15448:	uxth	r7, r7
   1544c:	mov	r0, r2
   15450:	bl	14f6c <close_stdout@@Base+0x28c0>
   15454:	ldr	r2, [sp]
   15458:	mov	r1, r5
   1545c:	mov	r9, r0
   15460:	mov	r0, r2
   15464:	bl	15158 <close_stdout@@Base+0x2aac>
   15468:	mul	sl, sl, r9
   1546c:	orr	r1, r7, r1, lsl #16
   15470:	cmp	sl, r1
   15474:	bls	15494 <close_stdout@@Base+0x2de8>
   15478:	adds	r8, r1, r8
   1547c:	sub	r3, r9, #1
   15480:	bcs	15490 <close_stdout@@Base+0x2de4>
   15484:	cmp	sl, r8
   15488:	subhi	r9, r9, #2
   1548c:	bhi	15494 <close_stdout@@Base+0x2de8>
   15490:	mov	r9, r3
   15494:	orr	r3, r9, fp, lsl #16
   15498:	b	15360 <close_stdout@@Base+0x2cb4>
   1549c:	mvn	r6, r6
   154a0:	rsbs	r2, r2, #0
   154a4:	rsc	r3, r3, #0
   154a8:	b	15268 <close_stdout@@Base+0x2bbc>
   154ac:	lsl	r8, r8, r3
   154b0:	rsb	fp, r3, #32
   154b4:	lsr	r4, r9, fp
   154b8:	lsr	fp, r7, fp
   154bc:	lsr	r5, r8, #16
   154c0:	orr	fp, fp, r9, lsl r3
   154c4:	mov	r0, r4
   154c8:	lsl	r7, r7, r3
   154cc:	mov	r1, r5
   154d0:	uxth	sl, r8
   154d4:	bl	14f6c <close_stdout@@Base+0x28c0>
   154d8:	mov	r1, r5
   154dc:	mov	r3, r0
   154e0:	mov	r0, r4
   154e4:	str	r3, [sp]
   154e8:	bl	15158 <close_stdout@@Base+0x2aac>
   154ec:	ldr	r3, [sp]
   154f0:	lsr	r2, fp, #16
   154f4:	mul	r0, sl, r3
   154f8:	orr	r1, r2, r1, lsl #16
   154fc:	cmp	r0, r1
   15500:	bls	15520 <close_stdout@@Base+0x2e74>
   15504:	adds	r1, r1, r8
   15508:	sub	r2, r3, #1
   1550c:	bcs	156c0 <close_stdout@@Base+0x3014>
   15510:	cmp	r0, r1
   15514:	subhi	r3, r3, #2
   15518:	addhi	r1, r1, r8
   1551c:	bls	156c0 <close_stdout@@Base+0x3014>
   15520:	rsb	r9, r0, r1
   15524:	mov	r1, r5
   15528:	str	r3, [sp]
   1552c:	uxth	fp, fp
   15530:	mov	r0, r9
   15534:	bl	14f6c <close_stdout@@Base+0x28c0>
   15538:	mov	r1, r5
   1553c:	mov	r4, r0
   15540:	mov	r0, r9
   15544:	bl	15158 <close_stdout@@Base+0x2aac>
   15548:	mul	r9, sl, r4
   1554c:	ldr	r3, [sp]
   15550:	orr	r1, fp, r1, lsl #16
   15554:	cmp	r9, r1
   15558:	bls	1557c <close_stdout@@Base+0x2ed0>
   1555c:	adds	r1, r1, r8
   15560:	sub	r2, r4, #1
   15564:	bcs	15578 <close_stdout@@Base+0x2ecc>
   15568:	cmp	r9, r1
   1556c:	subhi	r4, r4, #2
   15570:	addhi	r1, r1, r8
   15574:	bhi	1557c <close_stdout@@Base+0x2ed0>
   15578:	mov	r4, r2
   1557c:	rsb	r9, r9, r1
   15580:	orr	r4, r4, r3, lsl #16
   15584:	b	153f0 <close_stdout@@Base+0x2d44>
   15588:	rsb	sl, r5, #32
   1558c:	lsl	r3, r2, r5
   15590:	lsr	r0, r2, sl
   15594:	lsr	r2, ip, sl
   15598:	orr	r4, r0, r1, lsl r5
   1559c:	lsr	sl, r7, sl
   155a0:	mov	r0, r2
   155a4:	orr	sl, sl, ip, lsl r5
   155a8:	lsr	r9, r4, #16
   155ac:	str	r3, [sp, #4]
   155b0:	str	r2, [sp]
   155b4:	uxth	fp, r4
   155b8:	mov	r1, r9
   155bc:	bl	14f6c <close_stdout@@Base+0x28c0>
   155c0:	ldr	r2, [sp]
   155c4:	mov	r1, r9
   155c8:	mov	r8, r0
   155cc:	mov	r0, r2
   155d0:	bl	15158 <close_stdout@@Base+0x2aac>
   155d4:	mul	r0, fp, r8
   155d8:	lsr	r2, sl, #16
   155dc:	orr	r1, r2, r1, lsl #16
   155e0:	cmp	r0, r1
   155e4:	bls	15604 <close_stdout@@Base+0x2f58>
   155e8:	adds	r1, r1, r4
   155ec:	sub	r2, r8, #1
   155f0:	bcs	156b8 <close_stdout@@Base+0x300c>
   155f4:	cmp	r0, r1
   155f8:	subhi	r8, r8, #2
   155fc:	addhi	r1, r1, r4
   15600:	bls	156b8 <close_stdout@@Base+0x300c>
   15604:	rsb	ip, r0, r1
   15608:	mov	r1, r9
   1560c:	str	ip, [sp]
   15610:	mov	r0, ip
   15614:	bl	14f6c <close_stdout@@Base+0x28c0>
   15618:	ldr	ip, [sp]
   1561c:	mov	r1, r9
   15620:	mov	r2, r0
   15624:	mov	r0, ip
   15628:	str	r2, [sp]
   1562c:	bl	15158 <close_stdout@@Base+0x2aac>
   15630:	ldr	r2, [sp]
   15634:	uxth	ip, sl
   15638:	mul	fp, fp, r2
   1563c:	orr	ip, ip, r1, lsl #16
   15640:	cmp	fp, ip
   15644:	bls	15664 <close_stdout@@Base+0x2fb8>
   15648:	adds	ip, ip, r4
   1564c:	sub	r1, r2, #1
   15650:	bcs	156b0 <close_stdout@@Base+0x3004>
   15654:	cmp	fp, ip
   15658:	subhi	r2, r2, #2
   1565c:	addhi	ip, ip, r4
   15660:	bls	156b0 <close_stdout@@Base+0x3004>
   15664:	ldr	r0, [sp, #4]
   15668:	orr	r1, r2, r8, lsl #16
   1566c:	rsb	fp, fp, ip
   15670:	umull	r2, r3, r1, r0
   15674:	cmp	fp, r3
   15678:	bcc	1569c <close_stdout@@Base+0x2ff0>
   1567c:	movne	r4, #0
   15680:	moveq	r4, #1
   15684:	cmp	r2, r7, lsl r5
   15688:	movls	r4, #0
   1568c:	andhi	r4, r4, #1
   15690:	cmp	r4, #0
   15694:	moveq	r3, r1
   15698:	beq	15360 <close_stdout@@Base+0x2cb4>
   1569c:	sub	r3, r1, #1
   156a0:	mov	r4, #0
   156a4:	b	15360 <close_stdout@@Base+0x2cb4>
   156a8:	mov	fp, r3
   156ac:	b	1543c <close_stdout@@Base+0x2d90>
   156b0:	mov	r2, r1
   156b4:	b	15664 <close_stdout@@Base+0x2fb8>
   156b8:	mov	r8, r2
   156bc:	b	15604 <close_stdout@@Base+0x2f58>
   156c0:	mov	r3, r2
   156c4:	b	15520 <close_stdout@@Base+0x2e74>
   156c8:	cmp	r3, #0
   156cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156d0:	mov	r6, r0
   156d4:	sub	sp, sp, #12
   156d8:	mov	r5, r1
   156dc:	mov	r7, r0
   156e0:	mov	r4, r2
   156e4:	mov	r8, r1
   156e8:	bne	157c8 <close_stdout@@Base+0x311c>
   156ec:	cmp	r2, r1
   156f0:	bls	15804 <close_stdout@@Base+0x3158>
   156f4:	clz	r3, r2
   156f8:	cmp	r3, #0
   156fc:	rsbne	r8, r3, #32
   15700:	lslne	r4, r2, r3
   15704:	lsrne	r8, r0, r8
   15708:	lslne	r7, r0, r3
   1570c:	orrne	r8, r8, r1, lsl r3
   15710:	lsr	r5, r4, #16
   15714:	uxth	sl, r4
   15718:	mov	r1, r5
   1571c:	mov	r0, r8
   15720:	bl	14f6c <close_stdout@@Base+0x28c0>
   15724:	mov	r1, r5
   15728:	mov	r9, r0
   1572c:	mov	r0, r8
   15730:	bl	15158 <close_stdout@@Base+0x2aac>
   15734:	mul	r0, sl, r9
   15738:	lsr	r3, r7, #16
   1573c:	orr	r1, r3, r1, lsl #16
   15740:	cmp	r0, r1
   15744:	bls	15768 <close_stdout@@Base+0x30bc>
   15748:	adds	r1, r1, r4
   1574c:	sub	r2, r9, #1
   15750:	bcs	15764 <close_stdout@@Base+0x30b8>
   15754:	cmp	r0, r1
   15758:	subhi	r9, r9, #2
   1575c:	addhi	r1, r1, r4
   15760:	bhi	15768 <close_stdout@@Base+0x30bc>
   15764:	mov	r9, r2
   15768:	rsb	r8, r0, r1
   1576c:	mov	r1, r5
   15770:	uxth	r7, r7
   15774:	mov	r0, r8
   15778:	bl	14f6c <close_stdout@@Base+0x28c0>
   1577c:	mov	r1, r5
   15780:	mov	r6, r0
   15784:	mov	r0, r8
   15788:	bl	15158 <close_stdout@@Base+0x2aac>
   1578c:	mul	sl, sl, r6
   15790:	orr	r1, r7, r1, lsl #16
   15794:	cmp	sl, r1
   15798:	bls	157b4 <close_stdout@@Base+0x3108>
   1579c:	adds	r4, r1, r4
   157a0:	sub	r3, r6, #1
   157a4:	bcs	15ab0 <close_stdout@@Base+0x3404>
   157a8:	cmp	sl, r4
   157ac:	subhi	r6, r6, #2
   157b0:	bls	15ab0 <close_stdout@@Base+0x3404>
   157b4:	orr	r0, r6, r9, lsl #16
   157b8:	mov	r6, #0
   157bc:	mov	r1, r6
   157c0:	add	sp, sp, #12
   157c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157c8:	cmp	r3, r1
   157cc:	movhi	r6, #0
   157d0:	movhi	r0, r6
   157d4:	bhi	157bc <close_stdout@@Base+0x3110>
   157d8:	clz	r7, r3
   157dc:	cmp	r7, #0
   157e0:	bne	158e0 <close_stdout@@Base+0x3234>
   157e4:	cmp	r3, r1
   157e8:	cmpcs	r2, r6
   157ec:	movhi	r6, #0
   157f0:	movls	r6, #1
   157f4:	movls	r0, #1
   157f8:	movls	r6, r7
   157fc:	movhi	r0, r6
   15800:	b	157bc <close_stdout@@Base+0x3110>
   15804:	cmp	r2, #0
   15808:	bne	1581c <close_stdout@@Base+0x3170>
   1580c:	mov	r1, r2
   15810:	mov	r0, #1
   15814:	bl	14f6c <close_stdout@@Base+0x28c0>
   15818:	mov	r4, r0
   1581c:	clz	r3, r4
   15820:	cmp	r3, #0
   15824:	bne	159dc <close_stdout@@Base+0x3330>
   15828:	rsb	r5, r4, r5
   1582c:	lsr	r8, r4, #16
   15830:	uxth	sl, r4
   15834:	mov	r6, #1
   15838:	mov	r1, r8
   1583c:	mov	r0, r5
   15840:	bl	14f6c <close_stdout@@Base+0x28c0>
   15844:	mov	r1, r8
   15848:	mov	r9, r0
   1584c:	mov	r0, r5
   15850:	bl	15158 <close_stdout@@Base+0x2aac>
   15854:	mul	r0, sl, r9
   15858:	lsr	r3, r7, #16
   1585c:	orr	r1, r3, r1, lsl #16
   15860:	cmp	r0, r1
   15864:	bls	15884 <close_stdout@@Base+0x31d8>
   15868:	adds	r1, r1, r4
   1586c:	sub	r2, r9, #1
   15870:	bcs	15ab8 <close_stdout@@Base+0x340c>
   15874:	cmp	r0, r1
   15878:	subhi	r9, r9, #2
   1587c:	addhi	r1, r1, r4
   15880:	bls	15ab8 <close_stdout@@Base+0x340c>
   15884:	rsb	fp, r0, r1
   15888:	mov	r1, r8
   1588c:	uxth	r7, r7
   15890:	mov	r0, fp
   15894:	bl	14f6c <close_stdout@@Base+0x28c0>
   15898:	mov	r1, r8
   1589c:	mov	r5, r0
   158a0:	mov	r0, fp
   158a4:	bl	15158 <close_stdout@@Base+0x2aac>
   158a8:	mul	sl, sl, r5
   158ac:	orr	r1, r7, r1, lsl #16
   158b0:	cmp	sl, r1
   158b4:	bls	158d0 <close_stdout@@Base+0x3224>
   158b8:	adds	r4, r1, r4
   158bc:	sub	r3, r5, #1
   158c0:	bcs	15ac0 <close_stdout@@Base+0x3414>
   158c4:	cmp	sl, r4
   158c8:	subhi	r5, r5, #2
   158cc:	bls	15ac0 <close_stdout@@Base+0x3414>
   158d0:	orr	r0, r5, r9, lsl #16
   158d4:	mov	r1, r6
   158d8:	add	sp, sp, #12
   158dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   158e0:	rsb	r1, r7, #32
   158e4:	lsl	r0, r2, r7
   158e8:	lsr	r2, r2, r1
   158ec:	lsr	fp, r5, r1
   158f0:	orr	r8, r2, r3, lsl r7
   158f4:	lsr	r1, r6, r1
   158f8:	str	r0, [sp, #4]
   158fc:	orr	r5, r1, r5, lsl r7
   15900:	lsr	r9, r8, #16
   15904:	mov	r0, fp
   15908:	uxth	sl, r8
   1590c:	mov	r1, r9
   15910:	bl	14f6c <close_stdout@@Base+0x28c0>
   15914:	mov	r1, r9
   15918:	mov	r4, r0
   1591c:	mov	r0, fp
   15920:	bl	15158 <close_stdout@@Base+0x2aac>
   15924:	mul	r0, sl, r4
   15928:	lsr	ip, r5, #16
   1592c:	orr	r1, ip, r1, lsl #16
   15930:	cmp	r0, r1
   15934:	bls	15948 <close_stdout@@Base+0x329c>
   15938:	adds	r1, r1, r8
   1593c:	sub	r2, r4, #1
   15940:	bcc	15adc <close_stdout@@Base+0x3430>
   15944:	mov	r4, r2
   15948:	rsb	ip, r0, r1
   1594c:	mov	r1, r9
   15950:	str	ip, [sp]
   15954:	uxth	r5, r5
   15958:	mov	r0, ip
   1595c:	bl	14f6c <close_stdout@@Base+0x28c0>
   15960:	ldr	ip, [sp]
   15964:	mov	r1, r9
   15968:	mov	fp, r0
   1596c:	mov	r0, ip
   15970:	bl	15158 <close_stdout@@Base+0x2aac>
   15974:	mul	sl, sl, fp
   15978:	orr	r1, r5, r1, lsl #16
   1597c:	cmp	sl, r1
   15980:	bls	15994 <close_stdout@@Base+0x32e8>
   15984:	adds	r1, r1, r8
   15988:	sub	r2, fp, #1
   1598c:	bcc	15ac8 <close_stdout@@Base+0x341c>
   15990:	mov	fp, r2
   15994:	ldr	r3, [sp, #4]
   15998:	orr	r0, fp, r4, lsl #16
   1599c:	rsb	sl, sl, r1
   159a0:	umull	r4, r5, r0, r3
   159a4:	cmp	sl, r5
   159a8:	bcc	159c8 <close_stdout@@Base+0x331c>
   159ac:	movne	r3, #0
   159b0:	moveq	r3, #1
   159b4:	cmp	r4, r6, lsl r7
   159b8:	movls	r6, #0
   159bc:	andhi	r6, r3, #1
   159c0:	cmp	r6, #0
   159c4:	beq	157bc <close_stdout@@Base+0x3110>
   159c8:	mov	r6, #0
   159cc:	sub	r0, r0, #1
   159d0:	mov	r1, r6
   159d4:	add	sp, sp, #12
   159d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   159dc:	lsl	r4, r4, r3
   159e0:	rsb	r9, r3, #32
   159e4:	lsr	r2, r5, r9
   159e8:	lsr	r9, r6, r9
   159ec:	lsr	r8, r4, #16
   159f0:	orr	r9, r9, r5, lsl r3
   159f4:	mov	r0, r2
   159f8:	lsl	r7, r6, r3
   159fc:	mov	r1, r8
   15a00:	str	r2, [sp]
   15a04:	bl	14f6c <close_stdout@@Base+0x28c0>
   15a08:	ldr	r2, [sp]
   15a0c:	mov	r1, r8
   15a10:	uxth	sl, r4
   15a14:	mov	fp, r0
   15a18:	mov	r0, r2
   15a1c:	bl	15158 <close_stdout@@Base+0x2aac>
   15a20:	mul	r0, sl, fp
   15a24:	lsr	r3, r9, #16
   15a28:	orr	r1, r3, r1, lsl #16
   15a2c:	cmp	r0, r1
   15a30:	bls	15a50 <close_stdout@@Base+0x33a4>
   15a34:	adds	r1, r1, r4
   15a38:	sub	r3, fp, #1
   15a3c:	bcs	15af0 <close_stdout@@Base+0x3444>
   15a40:	cmp	r0, r1
   15a44:	subhi	fp, fp, #2
   15a48:	addhi	r1, r1, r4
   15a4c:	bls	15af0 <close_stdout@@Base+0x3444>
   15a50:	rsb	r5, r0, r1
   15a54:	mov	r1, r8
   15a58:	uxth	r9, r9
   15a5c:	mov	r0, r5
   15a60:	bl	14f6c <close_stdout@@Base+0x28c0>
   15a64:	mov	r1, r8
   15a68:	mov	r6, r0
   15a6c:	mov	r0, r5
   15a70:	bl	15158 <close_stdout@@Base+0x2aac>
   15a74:	mul	r5, sl, r6
   15a78:	orr	r1, r9, r1, lsl #16
   15a7c:	cmp	r5, r1
   15a80:	bls	15aa4 <close_stdout@@Base+0x33f8>
   15a84:	adds	r1, r1, r4
   15a88:	sub	r3, r6, #1
   15a8c:	bcs	15aa0 <close_stdout@@Base+0x33f4>
   15a90:	cmp	r5, r1
   15a94:	subhi	r6, r6, #2
   15a98:	addhi	r1, r1, r4
   15a9c:	bhi	15aa4 <close_stdout@@Base+0x33f8>
   15aa0:	mov	r6, r3
   15aa4:	rsb	r5, r5, r1
   15aa8:	orr	r6, r6, fp, lsl #16
   15aac:	b	15838 <close_stdout@@Base+0x318c>
   15ab0:	mov	r6, r3
   15ab4:	b	157b4 <close_stdout@@Base+0x3108>
   15ab8:	mov	r9, r2
   15abc:	b	15884 <close_stdout@@Base+0x31d8>
   15ac0:	mov	r5, r3
   15ac4:	b	158d0 <close_stdout@@Base+0x3224>
   15ac8:	cmp	sl, r1
   15acc:	subhi	fp, fp, #2
   15ad0:	addhi	r1, r1, r8
   15ad4:	bhi	15994 <close_stdout@@Base+0x32e8>
   15ad8:	b	15990 <close_stdout@@Base+0x32e4>
   15adc:	cmp	r0, r1
   15ae0:	subhi	r4, r4, #2
   15ae4:	addhi	r1, r1, r8
   15ae8:	bhi	15948 <close_stdout@@Base+0x329c>
   15aec:	b	15944 <close_stdout@@Base+0x3298>
   15af0:	mov	fp, r3
   15af4:	b	15a50 <close_stdout@@Base+0x33a4>
   15af8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   15afc:	mov	r7, r0
   15b00:	ldr	r6, [pc, #76]	; 15b54 <close_stdout@@Base+0x34a8>
   15b04:	mov	r8, r1
   15b08:	ldr	r5, [pc, #72]	; 15b58 <close_stdout@@Base+0x34ac>
   15b0c:	mov	r9, r2
   15b10:	add	r6, pc, r6
   15b14:	bl	11078 <fdopen@plt-0x20>
   15b18:	add	r5, pc, r5
   15b1c:	rsb	r6, r5, r6
   15b20:	asrs	r6, r6, #2
   15b24:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   15b28:	sub	r5, r5, #4
   15b2c:	mov	r4, #0
   15b30:	add	r4, r4, #1
   15b34:	ldr	r3, [r5, #4]!
   15b38:	mov	r0, r7
   15b3c:	mov	r1, r8
   15b40:	mov	r2, r9
   15b44:	blx	r3
   15b48:	cmp	r4, r6
   15b4c:	bne	15b30 <close_stdout@@Base+0x3484>
   15b50:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   15b54:	andeq	r1, r1, r4, ror r3
   15b58:	andeq	r1, r1, r8, ror #6
   15b5c:	bx	lr
   15b60:	ldr	r3, [pc, #28]	; 15b84 <close_stdout@@Base+0x34d8>
   15b64:	mov	r1, #0
   15b68:	ldr	r2, [pc, #24]	; 15b88 <close_stdout@@Base+0x34dc>
   15b6c:	add	r3, pc, r3
   15b70:	ldr	r3, [r3, r2]
   15b74:	cmp	r3, #0
   15b78:	ldrne	r2, [r3]
   15b7c:	moveq	r2, r3
   15b80:	b	11284 <__cxa_atexit@plt>
   15b84:	andeq	r1, r1, ip, lsl #9
   15b88:	andeq	r0, r0, r0, lsr #2

Disassembly of section .fini:

00015b8c <.fini>:
   15b8c:	push	{r3, lr}
   15b90:	pop	{r3, pc}
