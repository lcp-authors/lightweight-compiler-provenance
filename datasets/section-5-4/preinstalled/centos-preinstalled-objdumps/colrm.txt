
centos-preinstalled/colrm:     file format elf32-littlearm


Disassembly of section .init:

00010cb4 <.init>:
   10cb4:	push	{r3, lr}
   10cb8:	bl	11264 <strspn@plt+0x350>
   10cbc:	pop	{r3, pc}

Disassembly of section .plt:

00010cc0 <calloc@plt-0x14>:
   10cc0:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc4:	ldr	lr, [pc, #4]	; 10cd0 <calloc@plt-0x4>
   10cc8:	add	lr, pc, lr
   10ccc:	ldr	pc, [lr, #8]!
   10cd0:	andeq	r3, r1, r0, lsr r3

00010cd4 <calloc@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #77824	; 0x13000
   10cdc:	ldr	pc, [ip, #816]!	; 0x330

00010ce0 <raise@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #77824	; 0x13000
   10ce8:	ldr	pc, [ip, #808]!	; 0x328

00010cec <strcmp@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #77824	; 0x13000
   10cf4:	ldr	pc, [ip, #800]!	; 0x320

00010cf8 <strtol@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #77824	; 0x13000
   10d00:	ldr	pc, [ip, #792]!	; 0x318

00010d04 <strcspn@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #77824	; 0x13000
   10d0c:	ldr	pc, [ip, #784]!	; 0x310

00010d10 <fflush@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #77824	; 0x13000
   10d18:	ldr	pc, [ip, #776]!	; 0x308

00010d1c <wcwidth@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #77824	; 0x13000
   10d24:	ldr	pc, [ip, #768]!	; 0x300

00010d28 <free@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #77824	; 0x13000
   10d30:	ldr	pc, [ip, #760]!	; 0x2f8

00010d34 <ferror@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #77824	; 0x13000
   10d3c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d40 <_exit@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #77824	; 0x13000
   10d48:	ldr	pc, [ip, #744]!	; 0x2e8

00010d4c <memcpy@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #77824	; 0x13000
   10d54:	ldr	pc, [ip, #736]!	; 0x2e0

00010d58 <__strtoull_internal@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #77824	; 0x13000
   10d60:	ldr	pc, [ip, #728]!	; 0x2d8

00010d64 <dcgettext@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #77824	; 0x13000
   10d6c:	ldr	pc, [ip, #720]!	; 0x2d0

00010d70 <__stack_chk_fail@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #77824	; 0x13000
   10d78:	ldr	pc, [ip, #712]!	; 0x2c8

00010d7c <putwc@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #77824	; 0x13000
   10d84:	ldr	pc, [ip, #704]!	; 0x2c0

00010d88 <textdomain@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #77824	; 0x13000
   10d90:	ldr	pc, [ip, #696]!	; 0x2b8

00010d94 <__strndup@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #77824	; 0x13000
   10d9c:	ldr	pc, [ip, #688]!	; 0x2b0

00010da0 <err@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #77824	; 0x13000
   10da8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dac <__fpending@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #77824	; 0x13000
   10db4:	ldr	pc, [ip, #672]!	; 0x2a0

00010db8 <malloc@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #77824	; 0x13000
   10dc0:	ldr	pc, [ip, #664]!	; 0x298

00010dc4 <__libc_start_main@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #77824	; 0x13000
   10dcc:	ldr	pc, [ip, #656]!	; 0x290

00010dd0 <__gmon_start__@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #77824	; 0x13000
   10dd8:	ldr	pc, [ip, #648]!	; 0x288

00010ddc <getopt_long@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #77824	; 0x13000
   10de4:	ldr	pc, [ip, #640]!	; 0x280

00010de8 <__ctype_b_loc@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #77824	; 0x13000
   10df0:	ldr	pc, [ip, #632]!	; 0x278

00010df4 <exit@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #77824	; 0x13000
   10dfc:	ldr	pc, [ip, #624]!	; 0x270

00010e00 <strtoul@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #77824	; 0x13000
   10e08:	ldr	pc, [ip, #616]!	; 0x268

00010e0c <strlen@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #77824	; 0x13000
   10e14:	ldr	pc, [ip, #608]!	; 0x260

00010e18 <strchr@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #77824	; 0x13000
   10e20:	ldr	pc, [ip, #600]!	; 0x258

00010e24 <warnx@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #77824	; 0x13000
   10e2c:	ldr	pc, [ip, #592]!	; 0x250

00010e30 <__errno_location@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #77824	; 0x13000
   10e38:	ldr	pc, [ip, #584]!	; 0x248

00010e3c <__cxa_atexit@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #77824	; 0x13000
   10e44:	ldr	pc, [ip, #576]!	; 0x240

00010e48 <__vasprintf_chk@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #77824	; 0x13000
   10e50:	ldr	pc, [ip, #568]!	; 0x238

00010e54 <__strdup@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #77824	; 0x13000
   10e5c:	ldr	pc, [ip, #560]!	; 0x230

00010e60 <getwc@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #77824	; 0x13000
   10e68:	ldr	pc, [ip, #552]!	; 0x228

00010e6c <fgetc@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #77824	; 0x13000
   10e74:	ldr	pc, [ip, #544]!	; 0x220

00010e78 <__printf_chk@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #77824	; 0x13000
   10e80:	ldr	pc, [ip, #536]!	; 0x218

00010e84 <strtod@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #77824	; 0x13000
   10e8c:	ldr	pc, [ip, #528]!	; 0x210

00010e90 <__fprintf_chk@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #77824	; 0x13000
   10e98:	ldr	pc, [ip, #520]!	; 0x208

00010e9c <fclose@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #77824	; 0x13000
   10ea4:	ldr	pc, [ip, #512]!	; 0x200

00010ea8 <setlocale@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #77824	; 0x13000
   10eb0:	ldr	pc, [ip, #504]!	; 0x1f8

00010eb4 <errx@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #77824	; 0x13000
   10ebc:	ldr	pc, [ip, #496]!	; 0x1f0

00010ec0 <warn@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #77824	; 0x13000
   10ec8:	ldr	pc, [ip, #488]!	; 0x1e8

00010ecc <localeconv@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #77824	; 0x13000
   10ed4:	ldr	pc, [ip, #480]!	; 0x1e0

00010ed8 <__strtoll_internal@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #77824	; 0x13000
   10ee0:	ldr	pc, [ip, #472]!	; 0x1d8

00010ee4 <bindtextdomain@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #77824	; 0x13000
   10eec:	ldr	pc, [ip, #464]!	; 0x1d0

00010ef0 <strncmp@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #77824	; 0x13000
   10ef8:	ldr	pc, [ip, #456]!	; 0x1c8

00010efc <abort@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #77824	; 0x13000
   10f04:	ldr	pc, [ip, #448]!	; 0x1c0

00010f08 <__snprintf_chk@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #77824	; 0x13000
   10f10:	ldr	pc, [ip, #440]!	; 0x1b8

00010f14 <strspn@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #77824	; 0x13000
   10f1c:	ldr	pc, [ip, #432]!	; 0x1b0

Disassembly of section .text:

00010f20 <.text>:
   10f20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f24:	mov	r5, r1
   10f28:	sub	sp, sp, #8
   10f2c:	mov	r4, r0
   10f30:	movw	r1, #15180	; 0x3b4c
   10f34:	mov	r0, #6
   10f38:	movt	r1, #1
   10f3c:	mov	r7, #0
   10f40:	bl	10ea8 <setlocale@plt>
   10f44:	movw	r0, #15260	; 0x3b9c
   10f48:	movw	r1, #15272	; 0x3ba8
   10f4c:	movt	r0, #1
   10f50:	movt	r1, #1
   10f54:	bl	10ee4 <bindtextdomain@plt>
   10f58:	movw	r0, #15260	; 0x3b9c
   10f5c:	movt	r0, #1
   10f60:	bl	10d88 <textdomain@plt>
   10f64:	movw	r0, #5116	; 0x13fc
   10f68:	movt	r0, #1
   10f6c:	bl	13a50 <strspn@plt+0x2b3c>
   10f70:	mov	r0, r4
   10f74:	mov	r1, r5
   10f78:	str	r7, [sp]
   10f7c:	movw	r2, #15292	; 0x3bbc
   10f80:	movw	r3, #14988	; 0x3a8c
   10f84:	movt	r2, #1
   10f88:	movt	r3, #1
   10f8c:	bl	10ddc <getopt_long@plt>
   10f90:	cmn	r0, #1
   10f94:	beq	10ff8 <strspn@plt+0xe4>
   10f98:	cmp	r0, #86	; 0x56
   10f9c:	beq	10fb8 <strspn@plt+0xa4>
   10fa0:	cmp	r0, #104	; 0x68
   10fa4:	bne	11218 <strspn@plt+0x304>
   10fa8:	movw	r3, #16624	; 0x40f0
   10fac:	movt	r3, #2
   10fb0:	ldr	r0, [r3]
   10fb4:	bl	1135c <strspn@plt+0x448>
   10fb8:	mov	r0, r7
   10fbc:	mov	r2, #5
   10fc0:	movw	r1, #15304	; 0x3bc8
   10fc4:	movt	r1, #1
   10fc8:	bl	10d64 <dcgettext@plt>
   10fcc:	movw	r2, #16608	; 0x40e0
   10fd0:	movt	r2, #2
   10fd4:	movw	r3, #15316	; 0x3bd4
   10fd8:	movt	r3, #1
   10fdc:	ldr	r2, [r2]
   10fe0:	mov	r1, r0
   10fe4:	mov	r0, #1
   10fe8:	bl	10e78 <__printf_chk@plt>
   10fec:	mov	r0, #0
   10ff0:	add	sp, sp, #8
   10ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ff8:	cmp	r4, #1
   10ffc:	movle	r9, r7
   11000:	movle	r7, r9
   11004:	ble	11060 <strspn@plt+0x14c>
   11008:	mov	r2, #5
   1100c:	movw	r1, #15336	; 0x3be8
   11010:	mov	r0, r7
   11014:	movt	r1, #1
   11018:	ldr	r6, [r5, #4]
   1101c:	bl	10d64 <dcgettext@plt>
   11020:	mov	r1, r0
   11024:	mov	r0, r6
   11028:	bl	11ee4 <strspn@plt+0xfd0>
   1102c:	cmp	r4, #2
   11030:	mov	r9, r0
   11034:	beq	11060 <strspn@plt+0x14c>
   11038:	mov	r0, r7
   1103c:	mov	r2, #5
   11040:	movw	r1, #15352	; 0x3bf8
   11044:	movt	r1, #1
   11048:	ldr	r4, [r5, #8]
   1104c:	bl	10d64 <dcgettext@plt>
   11050:	mov	r1, r0
   11054:	mov	r0, r4
   11058:	bl	11ee4 <strspn@plt+0xfd0>
   1105c:	mov	r7, r0
   11060:	movw	r6, #16624	; 0x40f0
   11064:	movw	r8, #16616	; 0x40e8
   11068:	movt	r6, #2
   1106c:	movt	r8, #2
   11070:	mov	r5, #0
   11074:	ldr	r0, [r8]
   11078:	bl	10e60 <getwc@plt>
   1107c:	cmn	r0, #1
   11080:	mov	sl, r0
   11084:	beq	1117c <strspn@plt+0x268>
   11088:	cmp	r0, #9
   1108c:	addeq	r4, r5, #8
   11090:	biceq	r4, r4, #7
   11094:	beq	110ac <strspn@plt+0x198>
   11098:	cmp	r0, #8
   1109c:	bne	11150 <strspn@plt+0x23c>
   110a0:	cmp	r5, #0
   110a4:	subne	r4, r5, #1
   110a8:	moveq	r4, r5
   110ac:	rsbs	r3, r9, #1
   110b0:	movcc	r3, #0
   110b4:	cmp	r9, r4
   110b8:	orrhi	r3, r3, #1
   110bc:	cmp	r3, #0
   110c0:	bne	1119c <strspn@plt+0x288>
   110c4:	add	r5, r5, #1
   110c8:	cmp	r5, r9
   110cc:	bcs	110e8 <strspn@plt+0x1d4>
   110d0:	add	r5, r5, #1
   110d4:	mov	r0, #32
   110d8:	ldr	r1, [r6]
   110dc:	bl	10d7c <putwc@plt>
   110e0:	cmp	r5, r9
   110e4:	bcc	110d0 <strspn@plt+0x1bc>
   110e8:	rsbs	r5, r7, #1
   110ec:	movcc	r5, #0
   110f0:	cmp	r7, r4
   110f4:	movls	r3, r5
   110f8:	orrhi	r3, r5, #1
   110fc:	cmp	r3, #0
   11100:	beq	111b0 <strspn@plt+0x29c>
   11104:	ldr	r0, [r8]
   11108:	bl	10e60 <getwc@plt>
   1110c:	cmn	r0, #1
   11110:	beq	1117c <strspn@plt+0x268>
   11114:	cmp	r0, #10
   11118:	beq	11190 <strspn@plt+0x27c>
   1111c:	cmp	r0, #9
   11120:	addeq	r4, r4, #8
   11124:	biceq	r4, r4, #7
   11128:	beq	110f0 <strspn@plt+0x1dc>
   1112c:	cmp	r0, #8
   11130:	bne	11140 <strspn@plt+0x22c>
   11134:	cmp	r4, #0
   11138:	subne	r4, r4, #1
   1113c:	b	110f0 <strspn@plt+0x1dc>
   11140:	bl	10d1c <wcwidth@plt>
   11144:	cmp	r0, #0
   11148:	addge	r4, r4, r0
   1114c:	b	110f0 <strspn@plt+0x1dc>
   11150:	bl	10d1c <wcwidth@plt>
   11154:	cmp	r0, #0
   11158:	addge	r4, r5, r0
   1115c:	addlt	r4, r5, #0
   11160:	cmp	sl, #10
   11164:	bne	110ac <strspn@plt+0x198>
   11168:	mov	r0, sl
   1116c:	ldr	r1, [r6]
   11170:	bl	10d7c <putwc@plt>
   11174:	mov	r5, #0
   11178:	b	11074 <strspn@plt+0x160>
   1117c:	ldr	r0, [r6]
   11180:	bl	10d10 <fflush@plt>
   11184:	mov	r0, #0
   11188:	add	sp, sp, #8
   1118c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11190:	ldr	r1, [r6]
   11194:	bl	10d7c <putwc@plt>
   11198:	b	11070 <strspn@plt+0x15c>
   1119c:	mov	r0, sl
   111a0:	ldr	r1, [r6]
   111a4:	mov	r5, r4
   111a8:	bl	10d7c <putwc@plt>
   111ac:	b	11074 <strspn@plt+0x160>
   111b0:	mov	r5, r3
   111b4:	ldr	r0, [r8]
   111b8:	bl	10e60 <getwc@plt>
   111bc:	cmn	r0, #1
   111c0:	mov	sl, r0
   111c4:	beq	1117c <strspn@plt+0x268>
   111c8:	cmp	r0, #10
   111cc:	beq	11190 <strspn@plt+0x27c>
   111d0:	eor	r2, r5, #1
   111d4:	cmp	r7, r4
   111d8:	movcs	r2, #0
   111dc:	andcc	r2, r2, #1
   111e0:	cmp	r2, #0
   111e4:	beq	11208 <strspn@plt+0x2f4>
   111e8:	mov	r5, r7
   111ec:	add	r5, r5, #1
   111f0:	mov	r0, #32
   111f4:	ldr	r1, [r6]
   111f8:	bl	10d7c <putwc@plt>
   111fc:	cmp	r5, r4
   11200:	bcc	111ec <strspn@plt+0x2d8>
   11204:	mov	r5, #1
   11208:	mov	r0, sl
   1120c:	ldr	r1, [r6]
   11210:	bl	10d7c <putwc@plt>
   11214:	b	111b4 <strspn@plt+0x2a0>
   11218:	movw	r3, #16612	; 0x40e4
   1121c:	movt	r3, #2
   11220:	ldr	r0, [r3]
   11224:	bl	1135c <strspn@plt+0x448>
   11228:	mov	fp, #0
   1122c:	mov	lr, #0
   11230:	pop	{r1}		; (ldr r1, [sp], #4)
   11234:	mov	r2, sp
   11238:	push	{r2}		; (str r2, [sp, #-4]!)
   1123c:	push	{r0}		; (str r0, [sp, #-4]!)
   11240:	ldr	ip, [pc, #16]	; 11258 <strspn@plt+0x344>
   11244:	push	{ip}		; (str ip, [sp, #-4]!)
   11248:	ldr	r0, [pc, #12]	; 1125c <strspn@plt+0x348>
   1124c:	ldr	r3, [pc, #12]	; 11260 <strspn@plt+0x34c>
   11250:	bl	10dc4 <__libc_start_main@plt>
   11254:	bl	10efc <abort@plt>
   11258:	andeq	r3, r1, ip, asr #20
   1125c:	andeq	r0, r1, r0, lsr #30
   11260:	andeq	r3, r1, r8, ror #19
   11264:	ldr	r3, [pc, #20]	; 11280 <strspn@plt+0x36c>
   11268:	ldr	r2, [pc, #20]	; 11284 <strspn@plt+0x370>
   1126c:	add	r3, pc, r3
   11270:	ldr	r2, [r3, r2]
   11274:	cmp	r2, #0
   11278:	bxeq	lr
   1127c:	b	10dd0 <__gmon_start__@plt>
   11280:	andeq	r2, r1, ip, lsl #27
   11284:	ldrdeq	r0, [r0], -r4
   11288:	push	{r3, lr}
   1128c:	movw	r0, #16608	; 0x40e0
   11290:	ldr	r3, [pc, #36]	; 112bc <strspn@plt+0x3a8>
   11294:	movt	r0, #2
   11298:	rsb	r3, r0, r3
   1129c:	cmp	r3, #6
   112a0:	popls	{r3, pc}
   112a4:	movw	r3, #0
   112a8:	movt	r3, #0
   112ac:	cmp	r3, #0
   112b0:	popeq	{r3, pc}
   112b4:	blx	r3
   112b8:	pop	{r3, pc}
   112bc:	andeq	r4, r2, r3, ror #1
   112c0:	push	{r3, lr}
   112c4:	movw	r0, #16608	; 0x40e0
   112c8:	movw	r3, #16608	; 0x40e0
   112cc:	movt	r0, #2
   112d0:	movt	r3, #2
   112d4:	rsb	r3, r0, r3
   112d8:	asr	r3, r3, #2
   112dc:	add	r3, r3, r3, lsr #31
   112e0:	asrs	r1, r3, #1
   112e4:	popeq	{r3, pc}
   112e8:	movw	r2, #0
   112ec:	movt	r2, #0
   112f0:	cmp	r2, #0
   112f4:	popeq	{r3, pc}
   112f8:	blx	r2
   112fc:	pop	{r3, pc}
   11300:	push	{r4, lr}
   11304:	movw	r4, #16628	; 0x40f4
   11308:	movt	r4, #2
   1130c:	ldrb	r3, [r4]
   11310:	cmp	r3, #0
   11314:	popne	{r4, pc}
   11318:	bl	11288 <strspn@plt+0x374>
   1131c:	mov	r3, #1
   11320:	strb	r3, [r4]
   11324:	pop	{r4, pc}
   11328:	movw	r0, #16132	; 0x3f04
   1132c:	movt	r0, #2
   11330:	push	{r3, lr}
   11334:	ldr	r3, [r0]
   11338:	cmp	r3, #0
   1133c:	beq	11354 <strspn@plt+0x440>
   11340:	movw	r3, #0
   11344:	movt	r3, #0
   11348:	cmp	r3, #0
   1134c:	beq	11354 <strspn@plt+0x440>
   11350:	blx	r3
   11354:	pop	{r3, lr}
   11358:	b	112c0 <strspn@plt+0x3ac>
   1135c:	push	{r3, r4, r5, lr}
   11360:	mov	r2, #5
   11364:	mov	r4, r0
   11368:	movw	r1, #15036	; 0x3abc
   1136c:	mov	r0, #0
   11370:	movt	r1, #1
   11374:	bl	10d64 <dcgettext@plt>
   11378:	movw	r5, #16608	; 0x40e0
   1137c:	movt	r5, #2
   11380:	mov	r1, #1
   11384:	ldr	r3, [r5]
   11388:	mov	r2, r0
   1138c:	mov	r0, r4
   11390:	bl	10e90 <__fprintf_chk@plt>
   11394:	mov	r2, #5
   11398:	movw	r1, #15072	; 0x3ae0
   1139c:	mov	r0, #0
   113a0:	movt	r1, #1
   113a4:	bl	10d64 <dcgettext@plt>
   113a8:	mov	r1, #1
   113ac:	mov	r2, r0
   113b0:	mov	r0, r4
   113b4:	bl	10e90 <__fprintf_chk@plt>
   113b8:	mov	r2, #5
   113bc:	movw	r1, #15184	; 0x3b50
   113c0:	mov	r0, #0
   113c4:	movt	r1, #1
   113c8:	bl	10d64 <dcgettext@plt>
   113cc:	ldr	r3, [r5]
   113d0:	mov	r1, #1
   113d4:	mov	r2, r0
   113d8:	mov	r0, r4
   113dc:	bl	10e90 <__fprintf_chk@plt>
   113e0:	movw	r3, #16612	; 0x40e4
   113e4:	movt	r3, #2
   113e8:	ldr	r0, [r3]
   113ec:	subs	r3, r4, r0
   113f0:	rsbs	r0, r3, #0
   113f4:	adcs	r0, r0, r3
   113f8:	bl	10df4 <exit@plt>
   113fc:	movw	r3, #16624	; 0x40f0
   11400:	movt	r3, #2
   11404:	push	{r4, r5, r6, lr}
   11408:	ldr	r4, [r3]
   1140c:	mov	r0, r4
   11410:	bl	10dac <__fpending@plt>
   11414:	mov	r6, r0
   11418:	mov	r0, r4
   1141c:	bl	10d34 <ferror@plt>
   11420:	mov	r5, r0
   11424:	mov	r0, r4
   11428:	bl	10e9c <fclose@plt>
   1142c:	adds	r4, r0, #0
   11430:	movne	r4, #1
   11434:	cmp	r5, #0
   11438:	bne	114b0 <strspn@plt+0x59c>
   1143c:	cmp	r4, #0
   11440:	beq	1145c <strspn@plt+0x548>
   11444:	cmp	r6, #0
   11448:	beq	11500 <strspn@plt+0x5ec>
   1144c:	bl	10e30 <__errno_location@plt>
   11450:	ldr	r3, [r0]
   11454:	cmp	r3, #32
   11458:	bne	11514 <strspn@plt+0x600>
   1145c:	movw	r3, #16612	; 0x40e4
   11460:	movt	r3, #2
   11464:	ldr	r4, [r3]
   11468:	mov	r0, r4
   1146c:	bl	10dac <__fpending@plt>
   11470:	mov	r6, r0
   11474:	mov	r0, r4
   11478:	bl	10d34 <ferror@plt>
   1147c:	mov	r5, r0
   11480:	mov	r0, r4
   11484:	bl	10e9c <fclose@plt>
   11488:	adds	r4, r0, #0
   1148c:	movne	r4, #1
   11490:	cmp	r5, #0
   11494:	beq	114dc <strspn@plt+0x5c8>
   11498:	cmp	r4, #0
   1149c:	bne	114a8 <strspn@plt+0x594>
   114a0:	bl	10e30 <__errno_location@plt>
   114a4:	str	r4, [r0]
   114a8:	mov	r0, #1
   114ac:	bl	10d40 <_exit@plt>
   114b0:	cmp	r4, #0
   114b4:	bne	1144c <strspn@plt+0x538>
   114b8:	bl	10e30 <__errno_location@plt>
   114bc:	str	r4, [r0]
   114c0:	mov	r2, #5
   114c4:	movw	r1, #15248	; 0x3b90
   114c8:	mov	r0, #0
   114cc:	movt	r1, #1
   114d0:	bl	10d64 <dcgettext@plt>
   114d4:	bl	10e24 <warnx@plt>
   114d8:	b	114a8 <strspn@plt+0x594>
   114dc:	cmp	r4, #0
   114e0:	popeq	{r4, r5, r6, pc}
   114e4:	cmp	r6, #0
   114e8:	bne	114a8 <strspn@plt+0x594>
   114ec:	bl	10e30 <__errno_location@plt>
   114f0:	ldr	r3, [r0]
   114f4:	cmp	r3, #9
   114f8:	bne	114a8 <strspn@plt+0x594>
   114fc:	pop	{r4, r5, r6, pc}
   11500:	bl	10e30 <__errno_location@plt>
   11504:	ldr	r3, [r0]
   11508:	cmp	r3, #9
   1150c:	bne	11454 <strspn@plt+0x540>
   11510:	b	1145c <strspn@plt+0x548>
   11514:	cmp	r3, #0
   11518:	beq	114c0 <strspn@plt+0x5ac>
   1151c:	mov	r2, #5
   11520:	movw	r1, #15248	; 0x3b90
   11524:	mov	r0, #0
   11528:	movt	r1, #1
   1152c:	bl	10d64 <dcgettext@plt>
   11530:	bl	10ec0 <warn@plt>
   11534:	b	114a8 <strspn@plt+0x594>
   11538:	cmp	r0, #0
   1153c:	mov	r3, #0
   11540:	str	r3, [r1]
   11544:	bxeq	lr
   11548:	ldrb	r2, [r0]
   1154c:	cmp	r2, #47	; 0x2f
   11550:	bne	11598 <strspn@plt+0x684>
   11554:	ldrsb	r3, [r0, #1]
   11558:	cmp	r3, #47	; 0x2f
   1155c:	bne	115a0 <strspn@plt+0x68c>
   11560:	mov	r3, r0
   11564:	b	11584 <strspn@plt+0x670>
   11568:	ldrb	r2, [r3, #1]
   1156c:	mov	r3, r0
   11570:	cmp	r2, #47	; 0x2f
   11574:	bne	11598 <strspn@plt+0x684>
   11578:	ldrsb	r2, [r0, #1]
   1157c:	cmp	r2, #47	; 0x2f
   11580:	bne	115a0 <strspn@plt+0x68c>
   11584:	cmn	r3, #1
   11588:	add	r0, r0, #1
   1158c:	bne	11568 <strspn@plt+0x654>
   11590:	mov	r0, #0
   11594:	bx	lr
   11598:	cmp	r2, #0
   1159c:	beq	11590 <strspn@plt+0x67c>
   115a0:	mov	r3, #1
   115a4:	str	r3, [r1]
   115a8:	ldrsb	r3, [r0, #1]
   115ac:	cmp	r3, #47	; 0x2f
   115b0:	cmpne	r3, #0
   115b4:	bxeq	lr
   115b8:	mov	r3, #2
   115bc:	str	r3, [r1]
   115c0:	ldrb	r2, [r0, r3]
   115c4:	add	r3, r3, #1
   115c8:	cmp	r2, #47	; 0x2f
   115cc:	cmpne	r2, #0
   115d0:	bne	115bc <strspn@plt+0x6a8>
   115d4:	bx	lr
   115d8:	push	{r3, r4, r5, r6, r7, lr}
   115dc:	mov	r7, r1
   115e0:	ldrb	r3, [r0]
   115e4:	cmp	r3, #0
   115e8:	beq	11660 <strspn@plt+0x74c>
   115ec:	mov	r4, #0
   115f0:	mov	r5, r0
   115f4:	mov	r6, r4
   115f8:	b	11628 <strspn@plt+0x714>
   115fc:	cmp	r3, #92	; 0x5c
   11600:	mov	r0, r7
   11604:	mov	r1, r3
   11608:	beq	11650 <strspn@plt+0x73c>
   1160c:	bl	10e18 <strchr@plt>
   11610:	cmp	r0, #0
   11614:	bne	11658 <strspn@plt+0x744>
   11618:	ldrb	r3, [r5, #1]!
   1161c:	add	r4, r4, #1
   11620:	cmp	r3, #0
   11624:	beq	11648 <strspn@plt+0x734>
   11628:	cmp	r6, #0
   1162c:	sxtb	r3, r3
   11630:	beq	115fc <strspn@plt+0x6e8>
   11634:	ldrb	r3, [r5, #1]!
   11638:	mov	r6, #0
   1163c:	add	r4, r4, #1
   11640:	cmp	r3, #0
   11644:	bne	11628 <strspn@plt+0x714>
   11648:	rsb	r0, r6, r4
   1164c:	pop	{r3, r4, r5, r6, r7, pc}
   11650:	mov	r6, #1
   11654:	b	11618 <strspn@plt+0x704>
   11658:	mov	r0, r4
   1165c:	pop	{r3, r4, r5, r6, r7, pc}
   11660:	mov	r0, r3
   11664:	pop	{r3, r4, r5, r6, r7, pc}
   11668:	ldr	r3, [pc, #224]	; 11750 <strspn@plt+0x83c>
   1166c:	push	{r4, r5, r6, r7, r8, r9, lr}
   11670:	mov	r6, r0
   11674:	ldr	r0, [pc, #216]	; 11754 <strspn@plt+0x840>
   11678:	add	r3, pc, r3
   1167c:	sub	sp, sp, #12
   11680:	mov	r4, #0
   11684:	mov	r9, r1
   11688:	mov	r5, r2
   1168c:	ldr	r8, [r3, r0]
   11690:	str	r4, [sp]
   11694:	ldr	r3, [r8]
   11698:	str	r3, [sp, #4]
   1169c:	bl	10e30 <__errno_location@plt>
   116a0:	cmp	r6, r4
   116a4:	mov	r7, r0
   116a8:	str	r4, [r0]
   116ac:	beq	116bc <strspn@plt+0x7a8>
   116b0:	ldrsb	r3, [r6]
   116b4:	cmp	r3, r4
   116b8:	bne	116d4 <strspn@plt+0x7c0>
   116bc:	ldr	r1, [pc, #148]	; 11758 <strspn@plt+0x844>
   116c0:	mov	r2, r9
   116c4:	mov	r3, r6
   116c8:	mov	r0, #1
   116cc:	add	r1, pc, r1
   116d0:	bl	10eb4 <errx@plt>
   116d4:	mov	r3, r4
   116d8:	mov	r2, r5
   116dc:	mov	r0, r6
   116e0:	mov	r1, sp
   116e4:	bl	10d58 <__strtoull_internal@plt>
   116e8:	ldr	r3, [r7]
   116ec:	cmp	r3, r4
   116f0:	bne	1172c <strspn@plt+0x818>
   116f4:	ldr	r3, [sp]
   116f8:	cmp	r6, r3
   116fc:	beq	116bc <strspn@plt+0x7a8>
   11700:	cmp	r3, r4
   11704:	beq	11714 <strspn@plt+0x800>
   11708:	ldrsb	r3, [r3]
   1170c:	cmp	r3, r4
   11710:	bne	116bc <strspn@plt+0x7a8>
   11714:	ldr	r2, [sp, #4]
   11718:	ldr	r3, [r8]
   1171c:	cmp	r2, r3
   11720:	bne	1174c <strspn@plt+0x838>
   11724:	add	sp, sp, #12
   11728:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1172c:	cmp	r3, #34	; 0x22
   11730:	bne	116bc <strspn@plt+0x7a8>
   11734:	ldr	r1, [pc, #32]	; 1175c <strspn@plt+0x848>
   11738:	mov	r2, r9
   1173c:	mov	r3, r6
   11740:	mov	r0, #1
   11744:	add	r1, pc, r1
   11748:	bl	10da0 <err@plt>
   1174c:	bl	10d70 <__stack_chk_fail@plt>
   11750:	andeq	r2, r1, r0, lsl #19
   11754:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11758:	andeq	r2, r0, r4, asr #10
   1175c:	andeq	r2, r0, ip, asr #9
   11760:	ldr	r3, [pc, #596]	; 119bc <strspn@plt+0xaa8>
   11764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11768:	add	r3, pc, r3
   1176c:	subs	r6, r0, #0
   11770:	ldr	r0, [pc, #584]	; 119c0 <strspn@plt+0xaac>
   11774:	mov	r8, r1
   11778:	mov	r1, r3
   1177c:	sub	sp, sp, #20
   11780:	mov	r9, r2
   11784:	ldr	sl, [r1, r0]
   11788:	mov	r2, #0
   1178c:	mov	r3, #0
   11790:	ldr	r1, [sl]
   11794:	strd	r2, [r8]
   11798:	str	r1, [sp, #12]
   1179c:	beq	11884 <strspn@plt+0x970>
   117a0:	ldrb	r5, [r6]
   117a4:	cmp	r5, #0
   117a8:	beq	11884 <strspn@plt+0x970>
   117ac:	str	r6, [sp, #8]
   117b0:	bl	10de8 <__ctype_b_loc@plt>
   117b4:	mov	r3, r6
   117b8:	ldr	r1, [r0]
   117bc:	b	117d0 <strspn@plt+0x8bc>
   117c0:	add	r2, r3, #1
   117c4:	str	r2, [sp, #8]
   117c8:	ldrb	r5, [r3, #1]
   117cc:	mov	r3, r2
   117d0:	lsl	r2, r5, #1
   117d4:	ldrh	r4, [r1, r2]
   117d8:	and	r4, r4, #8192	; 0x2000
   117dc:	uxth	r4, r4
   117e0:	cmp	r4, #0
   117e4:	bne	117c0 <strspn@plt+0x8ac>
   117e8:	cmp	r5, #45	; 0x2d
   117ec:	beq	11884 <strspn@plt+0x970>
   117f0:	add	r5, sp, #16
   117f4:	str	r4, [r5, #-8]!
   117f8:	bl	10e30 <__errno_location@plt>
   117fc:	mov	r2, r4
   11800:	mov	r1, r5
   11804:	mov	r3, r4
   11808:	mov	r7, r0
   1180c:	mov	r0, r6
   11810:	str	r4, [r7]
   11814:	bl	10d58 <__strtoull_internal@plt>
   11818:	mov	r5, r1
   1181c:	ldr	r1, [sp, #8]
   11820:	mov	r4, r0
   11824:	cmp	r1, r6
   11828:	beq	11884 <strspn@plt+0x970>
   1182c:	ldr	r3, [r7]
   11830:	cmp	r3, #0
   11834:	bne	11868 <strspn@plt+0x954>
   11838:	cmp	r1, #0
   1183c:	beq	1196c <strspn@plt+0xa58>
   11840:	ldrb	r0, [r1]
   11844:	cmp	r0, #0
   11848:	bne	1188c <strspn@plt+0x978>
   1184c:	strd	r4, [r8]
   11850:	ldr	r2, [sp, #12]
   11854:	ldr	r3, [sl]
   11858:	cmp	r2, r3
   1185c:	bne	119b8 <strspn@plt+0xaa4>
   11860:	add	sp, sp, #20
   11864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11868:	subs	r2, r4, #1
   1186c:	mvn	r6, #2
   11870:	sbc	r3, r5, #0
   11874:	mvn	r7, #0
   11878:	cmp	r3, r7
   1187c:	cmpeq	r2, r6
   11880:	bls	11838 <strspn@plt+0x924>
   11884:	mvn	r0, #0
   11888:	b	11850 <strspn@plt+0x93c>
   1188c:	ldrb	r2, [r1, #1]
   11890:	sxtb	r3, r2
   11894:	cmp	r3, #105	; 0x69
   11898:	beq	11974 <strspn@plt+0xa60>
   1189c:	cmp	r3, #66	; 0x42
   118a0:	beq	11950 <strspn@plt+0xa3c>
   118a4:	cmp	r2, #0
   118a8:	bne	11884 <strspn@plt+0x970>
   118ac:	mov	r6, #1024	; 0x400
   118b0:	ldr	r7, [pc, #268]	; 119c4 <strspn@plt+0xab0>
   118b4:	sxtb	r3, r0
   118b8:	str	r3, [sp, #4]
   118bc:	add	r7, pc, r7
   118c0:	mov	r1, r3
   118c4:	mov	r0, r7
   118c8:	bl	10e18 <strchr@plt>
   118cc:	ldr	r3, [sp, #4]
   118d0:	cmp	r0, #0
   118d4:	rsbne	fp, r7, r0
   118d8:	addne	fp, fp, #1
   118dc:	beq	11990 <strspn@plt+0xa7c>
   118e0:	cmp	fp, #0
   118e4:	beq	11940 <strspn@plt+0xa2c>
   118e8:	asr	r7, r6, #31
   118ec:	mvn	r0, #0
   118f0:	mvn	r1, #0
   118f4:	mov	r2, r6
   118f8:	mov	r3, r7
   118fc:	bl	12e5c <strspn@plt+0x1f48>
   11900:	cmp	r1, r5
   11904:	cmpeq	r0, r4
   11908:	bcc	11964 <strspn@plt+0xa50>
   1190c:	sub	ip, fp, #1
   11910:	mov	r3, #0
   11914:	b	11928 <strspn@plt+0xa14>
   11918:	cmp	r1, r5
   1191c:	cmpeq	r0, r4
   11920:	add	r3, r3, #1
   11924:	bcc	11964 <strspn@plt+0xa50>
   11928:	mul	r2, r4, r7
   1192c:	cmp	r3, ip
   11930:	mla	r2, r6, r5, r2
   11934:	umull	r4, r5, r4, r6
   11938:	add	r5, r2, r5
   1193c:	bne	11918 <strspn@plt+0xa04>
   11940:	mov	r0, #0
   11944:	cmp	r9, #0
   11948:	strne	fp, [r9]
   1194c:	b	1184c <strspn@plt+0x938>
   11950:	ldrsb	r3, [r1, #2]
   11954:	cmp	r3, #0
   11958:	bne	11884 <strspn@plt+0x970>
   1195c:	mov	r6, #1000	; 0x3e8
   11960:	b	118b0 <strspn@plt+0x99c>
   11964:	mvn	r0, #1
   11968:	b	11944 <strspn@plt+0xa30>
   1196c:	mov	r0, r1
   11970:	b	1184c <strspn@plt+0x938>
   11974:	ldrsb	r3, [r1, #2]
   11978:	cmp	r3, #66	; 0x42
   1197c:	bne	11884 <strspn@plt+0x970>
   11980:	ldrsb	r3, [r1, #3]
   11984:	cmp	r3, #0
   11988:	beq	118ac <strspn@plt+0x998>
   1198c:	b	11884 <strspn@plt+0x970>
   11990:	ldr	r7, [pc, #48]	; 119c8 <strspn@plt+0xab4>
   11994:	mov	r1, r3
   11998:	add	r7, pc, r7
   1199c:	mov	r0, r7
   119a0:	bl	10e18 <strchr@plt>
   119a4:	cmp	r0, #0
   119a8:	beq	11884 <strspn@plt+0x970>
   119ac:	rsb	r7, r7, r0
   119b0:	add	fp, r7, #1
   119b4:	b	118e0 <strspn@plt+0x9cc>
   119b8:	bl	10d70 <__stack_chk_fail@plt>
   119bc:	muleq	r1, r0, r8
   119c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   119c4:	andeq	r2, r0, r0, ror #6
   119c8:	muleq	r0, r0, r2
   119cc:	mov	r2, #0
   119d0:	b	11760 <strspn@plt+0x84c>
   119d4:	push	{r4, r5, r6, lr}
   119d8:	subs	r6, r0, #0
   119dc:	beq	11a60 <strspn@plt+0xb4c>
   119e0:	ldrb	r4, [r6]
   119e4:	cmp	r4, #0
   119e8:	beq	11a68 <strspn@plt+0xb54>
   119ec:	bl	10de8 <__ctype_b_loc@plt>
   119f0:	mov	r3, r6
   119f4:	ldr	r5, [r0]
   119f8:	b	11a14 <strspn@plt+0xb00>
   119fc:	cmn	r3, #1
   11a00:	beq	11a50 <strspn@plt+0xb3c>
   11a04:	ldrb	r4, [r3, #1]
   11a08:	mov	r3, r1
   11a0c:	cmp	r4, #0
   11a10:	beq	11a58 <strspn@plt+0xb44>
   11a14:	lsl	r4, r4, #1
   11a18:	mov	ip, r3
   11a1c:	add	r1, r3, #1
   11a20:	ldrh	r2, [r5, r4]
   11a24:	tst	r2, #2048	; 0x800
   11a28:	bne	119fc <strspn@plt+0xae8>
   11a2c:	cmp	ip, #0
   11a30:	cmpne	ip, r6
   11a34:	movls	r0, #0
   11a38:	movhi	r0, #1
   11a3c:	popls	{r4, r5, r6, pc}
   11a40:	ldrsb	r0, [ip]
   11a44:	rsbs	r0, r0, #1
   11a48:	movcc	r0, #0
   11a4c:	pop	{r4, r5, r6, pc}
   11a50:	mov	r0, #0
   11a54:	pop	{r4, r5, r6, pc}
   11a58:	mov	ip, r1
   11a5c:	b	11a2c <strspn@plt+0xb18>
   11a60:	mov	r0, r6
   11a64:	pop	{r4, r5, r6, pc}
   11a68:	mov	r0, r4
   11a6c:	pop	{r4, r5, r6, pc}
   11a70:	cmp	r1, #0
   11a74:	push	{r4, r5}
   11a78:	sub	r4, r1, #1
   11a7c:	beq	11ae8 <strspn@plt+0xbd4>
   11a80:	ldrb	r1, [r0]
   11a84:	cmp	r1, #0
   11a88:	beq	11ae8 <strspn@plt+0xbd4>
   11a8c:	sxtb	r1, r1
   11a90:	sxtb	r2, r2
   11a94:	cmp	r1, r2
   11a98:	beq	11ad4 <strspn@plt+0xbc0>
   11a9c:	add	r1, r0, #1
   11aa0:	mov	r3, #0
   11aa4:	b	11ac0 <strspn@plt+0xbac>
   11aa8:	ldrb	r0, [r1], #1
   11aac:	cmp	r0, #0
   11ab0:	sxtb	ip, r0
   11ab4:	beq	11ad4 <strspn@plt+0xbc0>
   11ab8:	cmp	ip, r2
   11abc:	beq	11adc <strspn@plt+0xbc8>
   11ac0:	cmp	r3, r4
   11ac4:	mov	r5, r1
   11ac8:	add	r3, r3, #1
   11acc:	bne	11aa8 <strspn@plt+0xb94>
   11ad0:	mov	r0, #0
   11ad4:	pop	{r4, r5}
   11ad8:	bx	lr
   11adc:	mov	r0, r5
   11ae0:	pop	{r4, r5}
   11ae4:	bx	lr
   11ae8:	mov	r0, r1
   11aec:	b	11ad4 <strspn@plt+0xbc0>
   11af0:	ldr	r3, [pc, #228]	; 11bdc <strspn@plt+0xcc8>
   11af4:	ldr	r2, [pc, #228]	; 11be0 <strspn@plt+0xccc>
   11af8:	add	r3, pc, r3
   11afc:	push	{r4, r6, r7, r8, r9, lr}
   11b00:	subs	r6, r0, #0
   11b04:	ldr	r7, [r3, r2]
   11b08:	mov	r0, r3
   11b0c:	sub	sp, sp, #8
   11b10:	mov	r4, #0
   11b14:	mov	r8, r1
   11b18:	ldr	r3, [r7]
   11b1c:	str	r4, [sp]
   11b20:	str	r3, [sp, #4]
   11b24:	beq	11b34 <strspn@plt+0xc20>
   11b28:	ldrsb	r3, [r6]
   11b2c:	cmp	r3, r4
   11b30:	bne	11b5c <strspn@plt+0xc48>
   11b34:	bl	10e30 <__errno_location@plt>
   11b38:	ldr	r3, [r0]
   11b3c:	cmp	r3, #0
   11b40:	bne	11b88 <strspn@plt+0xc74>
   11b44:	ldr	r1, [pc, #152]	; 11be4 <strspn@plt+0xcd0>
   11b48:	mov	r2, r8
   11b4c:	mov	r3, r6
   11b50:	mov	r0, #1
   11b54:	add	r1, pc, r1
   11b58:	bl	10eb4 <errx@plt>
   11b5c:	bl	10e30 <__errno_location@plt>
   11b60:	mov	r3, r4
   11b64:	mov	r1, sp
   11b68:	mov	r2, #10
   11b6c:	mov	r9, r0
   11b70:	str	r4, [r0]
   11b74:	mov	r0, r6
   11b78:	bl	10ed8 <__strtoll_internal@plt>
   11b7c:	ldr	r3, [r9]
   11b80:	cmp	r3, r4
   11b84:	beq	11ba0 <strspn@plt+0xc8c>
   11b88:	ldr	r1, [pc, #88]	; 11be8 <strspn@plt+0xcd4>
   11b8c:	mov	r2, r8
   11b90:	mov	r3, r6
   11b94:	mov	r0, #1
   11b98:	add	r1, pc, r1
   11b9c:	bl	10da0 <err@plt>
   11ba0:	ldr	r3, [sp]
   11ba4:	cmp	r6, r3
   11ba8:	beq	11b44 <strspn@plt+0xc30>
   11bac:	cmp	r3, #0
   11bb0:	beq	11bc0 <strspn@plt+0xcac>
   11bb4:	ldrsb	r3, [r3]
   11bb8:	cmp	r3, #0
   11bbc:	bne	11b44 <strspn@plt+0xc30>
   11bc0:	ldr	r2, [sp, #4]
   11bc4:	ldr	r3, [r7]
   11bc8:	cmp	r2, r3
   11bcc:	bne	11bd8 <strspn@plt+0xcc4>
   11bd0:	add	sp, sp, #8
   11bd4:	pop	{r4, r6, r7, r8, r9, pc}
   11bd8:	bl	10d70 <__stack_chk_fail@plt>
   11bdc:	andeq	r2, r1, r0, lsl #10
   11be0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11be4:	strheq	r2, [r0], -ip
   11be8:	andeq	r2, r0, r8, ror r0
   11bec:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   11bf0:	mov	r8, r0
   11bf4:	mov	r9, r1
   11bf8:	bl	11af0 <strspn@plt+0xbdc>
   11bfc:	mvn	r4, #0
   11c00:	mov	r5, #0
   11c04:	adds	r6, r0, #-2147483648	; 0x80000000
   11c08:	adc	r7, r1, #0
   11c0c:	cmp	r7, r5
   11c10:	cmpeq	r6, r4
   11c14:	popls	{r3, r4, r5, r6, r7, r8, r9, pc}
   11c18:	ldr	r1, [pc, #16]	; 11c30 <strspn@plt+0xd1c>
   11c1c:	mov	r2, r9
   11c20:	mov	r3, r8
   11c24:	mov	r0, #1
   11c28:	add	r1, pc, r1
   11c2c:	bl	10eb4 <errx@plt>
   11c30:	andeq	r1, r0, r8, ror #31
   11c34:	push	{r3, r4, r5, lr}
   11c38:	mov	r4, r0
   11c3c:	mov	r5, r1
   11c40:	bl	11bec <strspn@plt+0xcd8>
   11c44:	add	ip, r0, #32768	; 0x8000
   11c48:	cmp	ip, #65536	; 0x10000
   11c4c:	bcs	11c58 <strspn@plt+0xd44>
   11c50:	sxth	r0, r0
   11c54:	pop	{r3, r4, r5, pc}
   11c58:	ldr	r1, [pc, #16]	; 11c70 <strspn@plt+0xd5c>
   11c5c:	mov	r2, r5
   11c60:	mov	r3, r4
   11c64:	mov	r0, #1
   11c68:	add	r1, pc, r1
   11c6c:	bl	10eb4 <errx@plt>
   11c70:	andeq	r1, r0, r8, lsr #31
   11c74:	mov	r2, #10
   11c78:	b	11668 <strspn@plt+0x754>
   11c7c:	push	{r3, r4, r5, r6, r7, lr}
   11c80:	mov	r6, r0
   11c84:	mov	r7, r1
   11c88:	bl	11c74 <strspn@plt+0xd60>
   11c8c:	mvn	r4, #0
   11c90:	mov	r5, #0
   11c94:	cmp	r1, r5
   11c98:	cmpeq	r0, r4
   11c9c:	popls	{r3, r4, r5, r6, r7, pc}
   11ca0:	ldr	r1, [pc, #16]	; 11cb8 <strspn@plt+0xda4>
   11ca4:	mov	r2, r7
   11ca8:	mov	r3, r6
   11cac:	mov	r0, #1
   11cb0:	add	r1, pc, r1
   11cb4:	bl	10eb4 <errx@plt>
   11cb8:	andeq	r1, r0, r0, ror #30
   11cbc:	push	{r3, r4, r5, lr}
   11cc0:	mov	r4, r0
   11cc4:	mov	r5, r1
   11cc8:	bl	11c7c <strspn@plt+0xd68>
   11ccc:	cmp	r0, #65536	; 0x10000
   11cd0:	bcs	11cdc <strspn@plt+0xdc8>
   11cd4:	uxth	r0, r0
   11cd8:	pop	{r3, r4, r5, pc}
   11cdc:	ldr	r1, [pc, #16]	; 11cf4 <strspn@plt+0xde0>
   11ce0:	mov	r2, r5
   11ce4:	mov	r3, r4
   11ce8:	mov	r0, #1
   11cec:	add	r1, pc, r1
   11cf0:	bl	10eb4 <errx@plt>
   11cf4:	andeq	r1, r0, r4, lsr #30
   11cf8:	mov	r2, #16
   11cfc:	b	11668 <strspn@plt+0x754>
   11d00:	ldr	r3, [pc, #216]	; 11de0 <strspn@plt+0xecc>
   11d04:	push	{r4, r5, r6, r7, r8, lr}
   11d08:	subs	r4, r0, #0
   11d0c:	ldr	r0, [pc, #208]	; 11de4 <strspn@plt+0xed0>
   11d10:	add	r3, pc, r3
   11d14:	sub	sp, sp, #8
   11d18:	mov	r5, #0
   11d1c:	mov	r7, r1
   11d20:	ldr	r6, [r3, r0]
   11d24:	str	r5, [sp]
   11d28:	ldr	r3, [r6]
   11d2c:	str	r3, [sp, #4]
   11d30:	beq	11d40 <strspn@plt+0xe2c>
   11d34:	ldrsb	r3, [r4]
   11d38:	cmp	r3, r5
   11d3c:	bne	11d68 <strspn@plt+0xe54>
   11d40:	bl	10e30 <__errno_location@plt>
   11d44:	ldr	r3, [r0]
   11d48:	cmp	r3, #0
   11d4c:	bne	11d8c <strspn@plt+0xe78>
   11d50:	ldr	r1, [pc, #144]	; 11de8 <strspn@plt+0xed4>
   11d54:	mov	r2, r7
   11d58:	mov	r3, r4
   11d5c:	mov	r0, #1
   11d60:	add	r1, pc, r1
   11d64:	bl	10eb4 <errx@plt>
   11d68:	bl	10e30 <__errno_location@plt>
   11d6c:	mov	r1, sp
   11d70:	mov	r8, r0
   11d74:	str	r5, [r0]
   11d78:	mov	r0, r4
   11d7c:	bl	10e84 <strtod@plt>
   11d80:	ldr	r3, [r8]
   11d84:	cmp	r3, r5
   11d88:	beq	11da4 <strspn@plt+0xe90>
   11d8c:	ldr	r1, [pc, #88]	; 11dec <strspn@plt+0xed8>
   11d90:	mov	r2, r7
   11d94:	mov	r3, r4
   11d98:	mov	r0, #1
   11d9c:	add	r1, pc, r1
   11da0:	bl	10da0 <err@plt>
   11da4:	ldr	r3, [sp]
   11da8:	cmp	r4, r3
   11dac:	beq	11d50 <strspn@plt+0xe3c>
   11db0:	cmp	r3, #0
   11db4:	beq	11dc4 <strspn@plt+0xeb0>
   11db8:	ldrsb	r3, [r3]
   11dbc:	cmp	r3, #0
   11dc0:	bne	11d50 <strspn@plt+0xe3c>
   11dc4:	ldr	r2, [sp, #4]
   11dc8:	ldr	r3, [r6]
   11dcc:	cmp	r2, r3
   11dd0:	bne	11ddc <strspn@plt+0xec8>
   11dd4:	add	sp, sp, #8
   11dd8:	pop	{r4, r5, r6, r7, r8, pc}
   11ddc:	bl	10d70 <__stack_chk_fail@plt>
   11de0:	andeq	r2, r1, r8, ror #5
   11de4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11de8:			; <UNDEFINED> instruction: 0x00001eb0
   11dec:	andeq	r1, r0, r4, ror lr
   11df0:	ldr	r3, [pc, #220]	; 11ed4 <strspn@plt+0xfc0>
   11df4:	push	{r4, r5, r6, r7, r8, lr}
   11df8:	subs	r4, r0, #0
   11dfc:	ldr	r0, [pc, #212]	; 11ed8 <strspn@plt+0xfc4>
   11e00:	add	r3, pc, r3
   11e04:	sub	sp, sp, #8
   11e08:	mov	r5, #0
   11e0c:	mov	r7, r1
   11e10:	ldr	r6, [r3, r0]
   11e14:	str	r5, [sp]
   11e18:	ldr	r3, [r6]
   11e1c:	str	r3, [sp, #4]
   11e20:	beq	11e30 <strspn@plt+0xf1c>
   11e24:	ldrsb	r3, [r4]
   11e28:	cmp	r3, r5
   11e2c:	bne	11e58 <strspn@plt+0xf44>
   11e30:	bl	10e30 <__errno_location@plt>
   11e34:	ldr	r3, [r0]
   11e38:	cmp	r3, #0
   11e3c:	bne	11e80 <strspn@plt+0xf6c>
   11e40:	ldr	r1, [pc, #148]	; 11edc <strspn@plt+0xfc8>
   11e44:	mov	r2, r7
   11e48:	mov	r3, r4
   11e4c:	mov	r0, #1
   11e50:	add	r1, pc, r1
   11e54:	bl	10eb4 <errx@plt>
   11e58:	bl	10e30 <__errno_location@plt>
   11e5c:	mov	r1, sp
   11e60:	mov	r2, #10
   11e64:	mov	r8, r0
   11e68:	str	r5, [r0]
   11e6c:	mov	r0, r4
   11e70:	bl	10cf8 <strtol@plt>
   11e74:	ldr	r3, [r8]
   11e78:	cmp	r3, r5
   11e7c:	beq	11e98 <strspn@plt+0xf84>
   11e80:	ldr	r1, [pc, #88]	; 11ee0 <strspn@plt+0xfcc>
   11e84:	mov	r2, r7
   11e88:	mov	r3, r4
   11e8c:	mov	r0, #1
   11e90:	add	r1, pc, r1
   11e94:	bl	10da0 <err@plt>
   11e98:	ldr	r3, [sp]
   11e9c:	cmp	r4, r3
   11ea0:	beq	11e40 <strspn@plt+0xf2c>
   11ea4:	cmp	r3, #0
   11ea8:	beq	11eb8 <strspn@plt+0xfa4>
   11eac:	ldrsb	r3, [r3]
   11eb0:	cmp	r3, #0
   11eb4:	bne	11e40 <strspn@plt+0xf2c>
   11eb8:	ldr	r2, [sp, #4]
   11ebc:	ldr	r3, [r6]
   11ec0:	cmp	r2, r3
   11ec4:	bne	11ed0 <strspn@plt+0xfbc>
   11ec8:	add	sp, sp, #8
   11ecc:	pop	{r4, r5, r6, r7, r8, pc}
   11ed0:	bl	10d70 <__stack_chk_fail@plt>
   11ed4:	strdeq	r2, [r1], -r8
   11ed8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11edc:	andeq	r1, r0, r0, asr #27
   11ee0:	andeq	r1, r0, r0, lsl #27
   11ee4:	ldr	r3, [pc, #220]	; 11fc8 <strspn@plt+0x10b4>
   11ee8:	push	{r4, r5, r6, r7, r8, lr}
   11eec:	subs	r4, r0, #0
   11ef0:	ldr	r0, [pc, #212]	; 11fcc <strspn@plt+0x10b8>
   11ef4:	add	r3, pc, r3
   11ef8:	sub	sp, sp, #8
   11efc:	mov	r5, #0
   11f00:	mov	r7, r1
   11f04:	ldr	r6, [r3, r0]
   11f08:	str	r5, [sp]
   11f0c:	ldr	r3, [r6]
   11f10:	str	r3, [sp, #4]
   11f14:	beq	11f24 <strspn@plt+0x1010>
   11f18:	ldrsb	r3, [r4]
   11f1c:	cmp	r3, r5
   11f20:	bne	11f4c <strspn@plt+0x1038>
   11f24:	bl	10e30 <__errno_location@plt>
   11f28:	ldr	r3, [r0]
   11f2c:	cmp	r3, #0
   11f30:	bne	11f74 <strspn@plt+0x1060>
   11f34:	ldr	r1, [pc, #148]	; 11fd0 <strspn@plt+0x10bc>
   11f38:	mov	r2, r7
   11f3c:	mov	r3, r4
   11f40:	mov	r0, #1
   11f44:	add	r1, pc, r1
   11f48:	bl	10eb4 <errx@plt>
   11f4c:	bl	10e30 <__errno_location@plt>
   11f50:	mov	r1, sp
   11f54:	mov	r2, #10
   11f58:	mov	r8, r0
   11f5c:	str	r5, [r0]
   11f60:	mov	r0, r4
   11f64:	bl	10e00 <strtoul@plt>
   11f68:	ldr	r3, [r8]
   11f6c:	cmp	r3, r5
   11f70:	beq	11f8c <strspn@plt+0x1078>
   11f74:	ldr	r1, [pc, #88]	; 11fd4 <strspn@plt+0x10c0>
   11f78:	mov	r2, r7
   11f7c:	mov	r3, r4
   11f80:	mov	r0, #1
   11f84:	add	r1, pc, r1
   11f88:	bl	10da0 <err@plt>
   11f8c:	ldr	r3, [sp]
   11f90:	cmp	r4, r3
   11f94:	beq	11f34 <strspn@plt+0x1020>
   11f98:	cmp	r3, #0
   11f9c:	beq	11fac <strspn@plt+0x1098>
   11fa0:	ldrsb	r3, [r3]
   11fa4:	cmp	r3, #0
   11fa8:	bne	11f34 <strspn@plt+0x1020>
   11fac:	ldr	r2, [sp, #4]
   11fb0:	ldr	r3, [r6]
   11fb4:	cmp	r2, r3
   11fb8:	bne	11fc4 <strspn@plt+0x10b0>
   11fbc:	add	sp, sp, #8
   11fc0:	pop	{r4, r5, r6, r7, r8, pc}
   11fc4:	bl	10d70 <__stack_chk_fail@plt>
   11fc8:	andeq	r2, r1, r4, lsl #2
   11fcc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11fd0:	andeq	r1, r0, ip, asr #25
   11fd4:	andeq	r1, r0, ip, lsl #25
   11fd8:	ldr	ip, [pc, #132]	; 12064 <strspn@plt+0x1150>
   11fdc:	push	{r4, r5, r6, lr}
   11fe0:	add	ip, pc, ip
   11fe4:	ldr	lr, [pc, #124]	; 12068 <strspn@plt+0x1154>
   11fe8:	sub	sp, sp, #16
   11fec:	mov	r6, r1
   11ff0:	mov	r5, r0
   11ff4:	mov	r1, sp
   11ff8:	ldr	r4, [ip, lr]
   11ffc:	ldr	ip, [r4]
   12000:	str	ip, [sp, #12]
   12004:	bl	119cc <strspn@plt+0xab8>
   12008:	cmp	r0, #0
   1200c:	bne	1202c <strspn@plt+0x1118>
   12010:	ldr	r2, [sp, #12]
   12014:	ldr	r3, [r4]
   12018:	ldrd	r0, [sp]
   1201c:	cmp	r2, r3
   12020:	bne	12060 <strspn@plt+0x114c>
   12024:	add	sp, sp, #16
   12028:	pop	{r4, r5, r6, pc}
   1202c:	bl	10e30 <__errno_location@plt>
   12030:	mov	r2, r6
   12034:	ldr	r3, [r0]
   12038:	mov	r0, #1
   1203c:	cmp	r3, #0
   12040:	mov	r3, r5
   12044:	beq	12054 <strspn@plt+0x1140>
   12048:	ldr	r1, [pc, #28]	; 1206c <strspn@plt+0x1158>
   1204c:	add	r1, pc, r1
   12050:	bl	10da0 <err@plt>
   12054:	ldr	r1, [pc, #20]	; 12070 <strspn@plt+0x115c>
   12058:	add	r1, pc, r1
   1205c:	bl	10eb4 <errx@plt>
   12060:	bl	10d70 <__stack_chk_fail@plt>
   12064:	andeq	r2, r1, r8, lsl r0
   12068:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1206c:	andeq	r1, r0, r4, asr #23
   12070:			; <UNDEFINED> instruction: 0x00001bb8
   12074:	push	{r4, lr}
   12078:	mov	r4, r1
   1207c:	mov	r1, r2
   12080:	bl	11d00 <strspn@plt+0xdec>
   12084:	vldr	d7, [pc, #28]	; 120a8 <strspn@plt+0x1194>
   12088:	vcvt.s32.f64	s11, d0
   1208c:	vcvt.f64.s32	d6, s11
   12090:	vstr	s11, [r4]
   12094:	vsub.f64	d0, d0, d6
   12098:	vmul.f64	d0, d0, d7
   1209c:	vcvt.s32.f64	s0, d0
   120a0:	vstr	s0, [r4, #4]
   120a4:	pop	{r4, pc}
   120a8:	andeq	r0, r0, r0
   120ac:	smlawbmi	lr, r0, r4, r8
   120b0:	and	r3, r0, #61440	; 0xf000
   120b4:	cmp	r3, #16384	; 0x4000
   120b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp}
   120bc:	moveq	r3, #100	; 0x64
   120c0:	beq	12138 <strspn@plt+0x1224>
   120c4:	cmp	r3, #40960	; 0xa000
   120c8:	moveq	r3, #108	; 0x6c
   120cc:	beq	12138 <strspn@plt+0x1224>
   120d0:	cmp	r3, #8192	; 0x2000
   120d4:	moveq	r3, #99	; 0x63
   120d8:	beq	12138 <strspn@plt+0x1224>
   120dc:	cmp	r3, #24576	; 0x6000
   120e0:	moveq	r3, #98	; 0x62
   120e4:	beq	12138 <strspn@plt+0x1224>
   120e8:	cmp	r3, #49152	; 0xc000
   120ec:	moveq	r3, #115	; 0x73
   120f0:	beq	12138 <strspn@plt+0x1224>
   120f4:	cmp	r3, #4096	; 0x1000
   120f8:	moveq	r3, #112	; 0x70
   120fc:	beq	12138 <strspn@plt+0x1224>
   12100:	cmp	r3, #32768	; 0x8000
   12104:	beq	12134 <strspn@plt+0x1220>
   12108:	mov	r4, #9
   1210c:	mov	r3, #8
   12110:	mov	r6, #7
   12114:	mov	r7, #6
   12118:	mov	r2, #5
   1211c:	mov	r8, #4
   12120:	mov	r9, #3
   12124:	mov	ip, #2
   12128:	mov	sl, #1
   1212c:	mov	fp, #0
   12130:	b	12164 <strspn@plt+0x1250>
   12134:	mov	r3, #45	; 0x2d
   12138:	strb	r3, [r1]
   1213c:	mov	r4, #10
   12140:	mov	r3, #9
   12144:	mov	r6, #8
   12148:	mov	r7, #7
   1214c:	mov	r2, #6
   12150:	mov	r8, #5
   12154:	mov	r9, #4
   12158:	mov	ip, #3
   1215c:	mov	sl, #2
   12160:	mov	fp, #1
   12164:	tst	r0, #256	; 0x100
   12168:	add	ip, r1, ip
   1216c:	moveq	r5, #45	; 0x2d
   12170:	movne	r5, #114	; 0x72
   12174:	tst	r0, #128	; 0x80
   12178:	strb	r5, [r1, fp]
   1217c:	moveq	r5, #45	; 0x2d
   12180:	movne	r5, #119	; 0x77
   12184:	tst	r0, #2048	; 0x800
   12188:	strb	r5, [r1, sl]
   1218c:	beq	12228 <strspn@plt+0x1314>
   12190:	tst	r0, #64	; 0x40
   12194:	moveq	r5, #83	; 0x53
   12198:	movne	r5, #115	; 0x73
   1219c:	tst	r0, #32
   121a0:	strb	r5, [ip]
   121a4:	add	r2, r1, r2
   121a8:	moveq	ip, #45	; 0x2d
   121ac:	movne	ip, #114	; 0x72
   121b0:	tst	r0, #16
   121b4:	strb	ip, [r1, r9]
   121b8:	moveq	ip, #45	; 0x2d
   121bc:	movne	ip, #119	; 0x77
   121c0:	tst	r0, #1024	; 0x400
   121c4:	strb	ip, [r1, r8]
   121c8:	beq	12248 <strspn@plt+0x1334>
   121cc:	tst	r0, #8
   121d0:	moveq	ip, #83	; 0x53
   121d4:	movne	ip, #115	; 0x73
   121d8:	tst	r0, #4
   121dc:	strb	ip, [r2]
   121e0:	add	r3, r1, r3
   121e4:	moveq	r2, #45	; 0x2d
   121e8:	movne	r2, #114	; 0x72
   121ec:	tst	r0, #2
   121f0:	strb	r2, [r1, r7]
   121f4:	moveq	r2, #45	; 0x2d
   121f8:	movne	r2, #119	; 0x77
   121fc:	tst	r0, #512	; 0x200
   12200:	strb	r2, [r1, r6]
   12204:	beq	12238 <strspn@plt+0x1324>
   12208:	tst	r0, #1
   1220c:	moveq	r2, #84	; 0x54
   12210:	movne	r2, #116	; 0x74
   12214:	strb	r2, [r3]
   12218:	mov	r3, #0
   1221c:	strb	r3, [r1, r4]
   12220:	pop	{r4, r5, r6, r7, r8, r9, sl, fp}
   12224:	bx	lr
   12228:	tst	r0, #64	; 0x40
   1222c:	moveq	r5, #45	; 0x2d
   12230:	movne	r5, #120	; 0x78
   12234:	b	1219c <strspn@plt+0x1288>
   12238:	tst	r0, #1
   1223c:	moveq	r2, #45	; 0x2d
   12240:	movne	r2, #120	; 0x78
   12244:	b	12214 <strspn@plt+0x1300>
   12248:	tst	r0, #8
   1224c:	moveq	ip, #45	; 0x2d
   12250:	movne	ip, #120	; 0x78
   12254:	b	121d8 <strspn@plt+0x12c4>
   12258:	ldr	r1, [pc, #580]	; 124a4 <strspn@plt+0x1590>
   1225c:	tst	r0, #2
   12260:	ldr	ip, [pc, #576]	; 124a8 <strspn@plt+0x1594>
   12264:	add	r1, pc, r1
   12268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1226c:	sub	sp, sp, #100	; 0x64
   12270:	ldr	r6, [r1, ip]
   12274:	addeq	r7, sp, #52	; 0x34
   12278:	addne	lr, sp, #53	; 0x35
   1227c:	addne	r7, sp, #52	; 0x34
   12280:	moveq	lr, r7
   12284:	mov	ip, #10
   12288:	ldr	r1, [r6]
   1228c:	str	r1, [sp, #92]	; 0x5c
   12290:	movne	r1, #32
   12294:	strbne	r1, [sp, #52]	; 0x34
   12298:	mov	r1, #1
   1229c:	sub	r9, ip, #32
   122a0:	rsb	r8, ip, #32
   122a4:	lsl	r5, r1, r9
   122a8:	lsl	r4, r1, ip
   122ac:	orr	r5, r5, r1, lsr r8
   122b0:	cmp	r3, r5
   122b4:	cmpeq	r2, r4
   122b8:	bcc	12424 <strspn@plt+0x1510>
   122bc:	add	ip, ip, #10
   122c0:	cmp	ip, #70	; 0x46
   122c4:	bne	1229c <strspn@plt+0x1388>
   122c8:	mov	r1, #60	; 0x3c
   122cc:	movw	r5, #26215	; 0x6667
   122d0:	movt	r5, #26214	; 0x6666
   122d4:	ldr	r8, [pc, #464]	; 124ac <strspn@plt+0x1598>
   122d8:	mov	fp, #1
   122dc:	smull	sl, r9, r5, r1
   122e0:	add	r8, pc, r8
   122e4:	str	r8, [sp, #36]	; 0x24
   122e8:	sub	r8, r1, #32
   122ec:	asr	r4, r1, #31
   122f0:	lsl	r5, fp, r8
   122f4:	str	r4, [sp, #44]	; 0x2c
   122f8:	lsl	r4, fp, r1
   122fc:	subs	r4, r4, #1
   12300:	str	r9, [sp, #40]	; 0x28
   12304:	rsb	r9, r1, #32
   12308:	ldr	sl, [sp, #40]	; 0x28
   1230c:	orr	r5, r5, fp, lsr r9
   12310:	ldr	fp, [sp, #44]	; 0x2c
   12314:	sbc	r5, r5, #0
   12318:	tst	r0, #1
   1231c:	lsr	r1, r2, r1
   12320:	rsb	fp, fp, sl, asr #2
   12324:	ldr	sl, [sp, #36]	; 0x24
   12328:	orr	r1, r1, r3, lsl r9
   1232c:	and	r5, r5, r3
   12330:	orr	r8, r1, r3, lsr r8
   12334:	and	r4, r4, r2
   12338:	ldrb	r0, [sl, fp]
   1233c:	add	r3, lr, #1
   12340:	strb	r0, [lr]
   12344:	bne	12408 <strspn@plt+0x14f4>
   12348:	orrs	fp, r4, r5
   1234c:	mov	r2, #0
   12350:	strb	r2, [r3]
   12354:	beq	1243c <strspn@plt+0x1528>
   12358:	sub	lr, ip, #20
   1235c:	sub	ip, ip, #52	; 0x34
   12360:	rsb	r3, lr, #32
   12364:	lsr	r0, r4, lr
   12368:	orr	r0, r0, r5, lsl r3
   1236c:	lsr	r1, r5, lr
   12370:	orr	r0, r0, r5, lsr ip
   12374:	mov	r2, #100	; 0x64
   12378:	adds	r0, r0, #50	; 0x32
   1237c:	mov	r3, #0
   12380:	adc	r1, r1, #0
   12384:	bl	12e5c <strspn@plt+0x1f48>
   12388:	mov	r4, r0
   1238c:	mov	r5, r1
   12390:	cmp	r5, #0
   12394:	cmpeq	r4, #10
   12398:	addeq	r8, r8, #1
   1239c:	beq	1243c <strspn@plt+0x1528>
   123a0:	orrs	r2, r4, r5
   123a4:	beq	1243c <strspn@plt+0x1528>
   123a8:	bl	10ecc <localeconv@plt>
   123ac:	cmp	r0, #0
   123b0:	beq	12488 <strspn@plt+0x1574>
   123b4:	ldr	r3, [r0]
   123b8:	cmp	r3, #0
   123bc:	beq	12498 <strspn@plt+0x1584>
   123c0:	ldrsb	r2, [r3]
   123c4:	cmp	r2, #0
   123c8:	ldreq	r3, [pc, #224]	; 124b0 <strspn@plt+0x159c>
   123cc:	addeq	r3, pc, r3
   123d0:	add	r9, sp, #60	; 0x3c
   123d4:	ldr	ip, [pc, #216]	; 124b4 <strspn@plt+0x15a0>
   123d8:	mov	r1, #32
   123dc:	str	r3, [sp, #8]
   123e0:	add	ip, pc, ip
   123e4:	str	r8, [sp, #4]
   123e8:	mov	r0, r9
   123ec:	strd	r4, [sp, #16]
   123f0:	mov	r3, r1
   123f4:	str	r7, [sp, #24]
   123f8:	mov	r2, #1
   123fc:	str	ip, [sp]
   12400:	bl	10f08 <__snprintf_chk@plt>
   12404:	b	12468 <strspn@plt+0x1554>
   12408:	cmp	r0, #66	; 0x42
   1240c:	addne	r3, lr, #3
   12410:	movne	r1, #105	; 0x69
   12414:	movne	r2, #66	; 0x42
   12418:	strbne	r1, [lr, #1]
   1241c:	strbne	r2, [lr, #2]
   12420:	b	12348 <strspn@plt+0x1434>
   12424:	subs	r1, ip, #10
   12428:	strbeq	r1, [lr, #1]
   1242c:	moveq	r3, #66	; 0x42
   12430:	moveq	r8, r2
   12434:	strbeq	r3, [lr]
   12438:	bne	122cc <strspn@plt+0x13b8>
   1243c:	ldr	r3, [pc, #116]	; 124b8 <strspn@plt+0x15a4>
   12440:	add	r9, sp, #60	; 0x3c
   12444:	mov	r1, #32
   12448:	str	r8, [sp, #4]
   1244c:	add	r3, pc, r3
   12450:	str	r7, [sp, #8]
   12454:	str	r3, [sp]
   12458:	mov	r0, r9
   1245c:	mov	r3, r1
   12460:	mov	r2, #1
   12464:	bl	10f08 <__snprintf_chk@plt>
   12468:	mov	r0, r9
   1246c:	bl	10e54 <__strdup@plt>
   12470:	ldr	r2, [sp, #92]	; 0x5c
   12474:	ldr	r3, [r6]
   12478:	cmp	r2, r3
   1247c:	bne	12494 <strspn@plt+0x1580>
   12480:	add	sp, sp, #100	; 0x64
   12484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12488:	ldr	r3, [pc, #44]	; 124bc <strspn@plt+0x15a8>
   1248c:	add	r3, pc, r3
   12490:	b	123d0 <strspn@plt+0x14bc>
   12494:	bl	10d70 <__stack_chk_fail@plt>
   12498:	ldr	r3, [pc, #32]	; 124c0 <strspn@plt+0x15ac>
   1249c:	add	r3, pc, r3
   124a0:	b	123d0 <strspn@plt+0x14bc>
   124a4:	muleq	r1, r4, sp
   124a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   124ac:	andeq	r1, r0, r8, asr r9
   124b0:	andeq	r1, r0, r8, ror #16
   124b4:	andeq	r1, r0, r0, ror #16
   124b8:	andeq	r1, r0, r0, lsl #16
   124bc:	andeq	r1, r0, r8, lsr #15
   124c0:	muleq	r0, r8, r7
   124c4:	cmp	r0, #0
   124c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124cc:	mov	r8, r1
   124d0:	mov	sl, r2
   124d4:	mov	r9, r3
   124d8:	beq	12594 <strspn@plt+0x1680>
   124dc:	ldrb	r5, [r0]
   124e0:	cmp	r5, #0
   124e4:	beq	12594 <strspn@plt+0x1680>
   124e8:	cmp	r2, #0
   124ec:	cmpne	r1, #0
   124f0:	movne	ip, #0
   124f4:	moveq	ip, #1
   124f8:	beq	12594 <strspn@plt+0x1680>
   124fc:	cmp	r3, #0
   12500:	movne	r4, r0
   12504:	movne	r6, ip
   12508:	bne	1251c <strspn@plt+0x1608>
   1250c:	b	12594 <strspn@plt+0x1680>
   12510:	ldrb	r5, [r4, #1]!
   12514:	cmp	r5, #0
   12518:	beq	1258c <strspn@plt+0x1678>
   1251c:	cmp	sl, r6
   12520:	bls	1259c <strspn@plt+0x1688>
   12524:	cmp	ip, #0
   12528:	ldrsb	r7, [r4, #1]
   1252c:	moveq	ip, r4
   12530:	cmp	r5, #44	; 0x2c
   12534:	mov	r0, ip
   12538:	moveq	r5, r4
   1253c:	movne	r5, #0
   12540:	cmp	r7, #0
   12544:	addeq	r5, r4, #1
   12548:	cmp	r5, #0
   1254c:	rsb	r1, ip, r5
   12550:	beq	12584 <strspn@plt+0x1670>
   12554:	cmp	ip, r5
   12558:	bcs	12594 <strspn@plt+0x1680>
   1255c:	blx	r9
   12560:	mov	ip, #0
   12564:	add	r3, r6, #1
   12568:	cmn	r0, #1
   1256c:	beq	12594 <strspn@plt+0x1680>
   12570:	str	r0, [r8, r6, lsl #2]
   12574:	mov	r6, r3
   12578:	ldrsb	r2, [r5]
   1257c:	cmp	r2, ip
   12580:	beq	125a4 <strspn@plt+0x1690>
   12584:	cmn	r4, #1
   12588:	bne	12510 <strspn@plt+0x15fc>
   1258c:	mov	r0, r6
   12590:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12594:	mvn	r0, #0
   12598:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1259c:	mvn	r0, #1
   125a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   125a4:	mov	r6, r3
   125a8:	b	1258c <strspn@plt+0x1678>
   125ac:	cmp	r0, #0
   125b0:	push	{r4, lr}
   125b4:	mov	r4, r3
   125b8:	beq	12630 <strspn@plt+0x171c>
   125bc:	ldrb	ip, [r0]
   125c0:	cmp	ip, #0
   125c4:	beq	12630 <strspn@plt+0x171c>
   125c8:	cmp	r3, #0
   125cc:	beq	12630 <strspn@plt+0x171c>
   125d0:	ldr	r3, [r3]
   125d4:	cmp	r3, #0
   125d8:	blt	12630 <strspn@plt+0x171c>
   125dc:	cmp	r3, r2
   125e0:	bhi	12630 <strspn@plt+0x171c>
   125e4:	cmp	ip, #43	; 0x2b
   125e8:	lsleq	ip, r3, #2
   125ec:	addeq	r0, r0, #1
   125f0:	movne	ip, #0
   125f4:	strne	ip, [r4]
   125f8:	movne	r3, ip
   125fc:	add	r1, r1, ip
   12600:	rsb	r2, r3, r2
   12604:	ldr	r3, [sp, #8]
   12608:	bl	124c4 <strspn@plt+0x15b0>
   1260c:	subs	r3, r0, #0
   12610:	ble	12628 <strspn@plt+0x1714>
   12614:	ldr	r2, [r4]
   12618:	mov	r0, r3
   1261c:	add	r3, r2, r3
   12620:	str	r3, [r4]
   12624:	pop	{r4, pc}
   12628:	mov	r0, r3
   1262c:	pop	{r4, pc}
   12630:	mvn	r0, #0
   12634:	pop	{r4, pc}
   12638:	cmp	r2, #0
   1263c:	cmpne	r0, #0
   12640:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12644:	mov	r4, r0
   12648:	mov	r7, r2
   1264c:	movne	r3, #0
   12650:	moveq	r3, #1
   12654:	mov	r9, r1
   12658:	beq	126f4 <strspn@plt+0x17e0>
   1265c:	cmp	r1, #0
   12660:	beq	126f4 <strspn@plt+0x17e0>
   12664:	mov	r6, r0
   12668:	mov	r8, #1
   1266c:	ldrb	r5, [r6], #1
   12670:	cmp	r5, #0
   12674:	beq	126e4 <strspn@plt+0x17d0>
   12678:	cmp	r5, #44	; 0x2c
   1267c:	ldrsb	r0, [r4, #1]
   12680:	moveq	r5, r4
   12684:	movne	r5, #0
   12688:	cmp	r3, #0
   1268c:	moveq	r3, r4
   12690:	cmp	r0, #0
   12694:	mov	r0, r3
   12698:	moveq	r5, r6
   1269c:	cmp	r5, #0
   126a0:	rsb	r1, r3, r5
   126a4:	beq	126dc <strspn@plt+0x17c8>
   126a8:	cmp	r3, r5
   126ac:	bcs	126ec <strspn@plt+0x17d8>
   126b0:	blx	r7
   126b4:	mov	r3, #0
   126b8:	cmp	r0, #0
   126bc:	and	r2, r0, #7
   126c0:	poplt	{r3, r4, r5, r6, r7, r8, r9, pc}
   126c4:	ldrb	r1, [r9, r0, asr #3]
   126c8:	orr	r2, r1, r8, lsl r2
   126cc:	strb	r2, [r9, r0, asr #3]
   126d0:	ldrsb	r2, [r5]
   126d4:	cmp	r2, r3
   126d8:	beq	126e4 <strspn@plt+0x17d0>
   126dc:	adds	r4, r4, #1
   126e0:	bne	1266c <strspn@plt+0x1758>
   126e4:	mov	r0, #0
   126e8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   126ec:	mvn	r0, #0
   126f0:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   126f4:	mvn	r0, #21
   126f8:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   126fc:	cmp	r2, #0
   12700:	cmpne	r0, #0
   12704:	push	{r4, r5, r6, r7, r8, lr}
   12708:	movne	r3, #0
   1270c:	moveq	r3, #1
   12710:	mov	r4, r0
   12714:	mov	r8, r2
   12718:	mov	r7, r1
   1271c:	beq	127b0 <strspn@plt+0x189c>
   12720:	cmp	r1, #0
   12724:	beq	127b0 <strspn@plt+0x189c>
   12728:	mov	r6, r0
   1272c:	ldrb	r5, [r6], #1
   12730:	cmp	r5, #0
   12734:	beq	127a0 <strspn@plt+0x188c>
   12738:	cmp	r5, #44	; 0x2c
   1273c:	ldrsb	r0, [r4, #1]
   12740:	moveq	r5, r4
   12744:	movne	r5, #0
   12748:	cmp	r3, #0
   1274c:	moveq	r3, r4
   12750:	cmp	r0, #0
   12754:	mov	r0, r3
   12758:	moveq	r5, r6
   1275c:	cmp	r5, #0
   12760:	rsb	r1, r3, r5
   12764:	beq	12798 <strspn@plt+0x1884>
   12768:	cmp	r3, r5
   1276c:	bcs	127a8 <strspn@plt+0x1894>
   12770:	blx	r8
   12774:	mov	r3, #0
   12778:	cmp	r0, #0
   1277c:	poplt	{r4, r5, r6, r7, r8, pc}
   12780:	ldr	r2, [r7]
   12784:	orr	r0, r2, r0
   12788:	str	r0, [r7]
   1278c:	ldrsb	r2, [r5]
   12790:	cmp	r2, r3
   12794:	beq	127a0 <strspn@plt+0x188c>
   12798:	adds	r4, r4, #1
   1279c:	bne	1272c <strspn@plt+0x1818>
   127a0:	mov	r0, #0
   127a4:	pop	{r4, r5, r6, r7, r8, pc}
   127a8:	mvn	r0, #0
   127ac:	pop	{r4, r5, r6, r7, r8, pc}
   127b0:	mvn	r0, #21
   127b4:	pop	{r4, r5, r6, r7, r8, pc}
   127b8:	ldr	ip, [pc, #380]	; 1293c <strspn@plt+0x1a28>
   127bc:	push	{r4, r5, r6, r7, r8, r9, lr}
   127c0:	subs	r4, r0, #0
   127c4:	ldr	r0, [pc, #372]	; 12940 <strspn@plt+0x1a2c>
   127c8:	add	ip, pc, ip
   127cc:	mov	r6, r2
   127d0:	sub	sp, sp, #12
   127d4:	mov	r2, ip
   127d8:	mov	r8, #0
   127dc:	ldr	r7, [ip, r0]
   127e0:	mov	r9, r1
   127e4:	str	r8, [sp]
   127e8:	ldr	r2, [r7]
   127ec:	str	r2, [sp, #4]
   127f0:	beq	12860 <strspn@plt+0x194c>
   127f4:	str	r3, [r1]
   127f8:	str	r3, [r6]
   127fc:	bl	10e30 <__errno_location@plt>
   12800:	str	r8, [r0]
   12804:	mov	r5, r0
   12808:	ldrsb	r3, [r4]
   1280c:	cmp	r3, #58	; 0x3a
   12810:	beq	1287c <strspn@plt+0x1968>
   12814:	mov	r0, r4
   12818:	mov	r2, #10
   1281c:	mov	r1, sp
   12820:	bl	10cf8 <strtol@plt>
   12824:	str	r0, [r9]
   12828:	str	r0, [r6]
   1282c:	ldr	r0, [r5]
   12830:	cmp	r0, #0
   12834:	bne	12930 <strspn@plt+0x1a1c>
   12838:	ldr	r3, [sp]
   1283c:	cmp	r3, #0
   12840:	beq	12930 <strspn@plt+0x1a1c>
   12844:	cmp	r4, r3
   12848:	beq	12930 <strspn@plt+0x1a1c>
   1284c:	ldrsb	r2, [r3]
   12850:	cmp	r2, #58	; 0x3a
   12854:	beq	128c8 <strspn@plt+0x19b4>
   12858:	cmp	r2, #45	; 0x2d
   1285c:	beq	128d8 <strspn@plt+0x19c4>
   12860:	mov	r0, #0
   12864:	ldr	r2, [sp, #4]
   12868:	ldr	r3, [r7]
   1286c:	cmp	r2, r3
   12870:	bne	12938 <strspn@plt+0x1a24>
   12874:	add	sp, sp, #12
   12878:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1287c:	add	r4, r4, #1
   12880:	mov	r1, sp
   12884:	mov	r2, #10
   12888:	mov	r0, r4
   1288c:	bl	10cf8 <strtol@plt>
   12890:	str	r0, [r6]
   12894:	ldr	r3, [r5]
   12898:	cmp	r3, #0
   1289c:	bne	12930 <strspn@plt+0x1a1c>
   128a0:	ldr	r3, [sp]
   128a4:	cmp	r3, #0
   128a8:	beq	12930 <strspn@plt+0x1a1c>
   128ac:	ldrsb	r2, [r3]
   128b0:	cmp	r2, #0
   128b4:	bne	12930 <strspn@plt+0x1a1c>
   128b8:	cmp	r4, r3
   128bc:	movne	r0, #0
   128c0:	mvneq	r0, #0
   128c4:	b	12864 <strspn@plt+0x1950>
   128c8:	ldrsb	r2, [r3, #1]
   128cc:	cmp	r2, #0
   128d0:	streq	r0, [r6]
   128d4:	beq	12864 <strspn@plt+0x1950>
   128d8:	add	r4, r3, #1
   128dc:	mov	ip, #0
   128e0:	mov	r1, sp
   128e4:	mov	r2, #10
   128e8:	mov	r0, r4
   128ec:	str	ip, [r5]
   128f0:	str	ip, [sp]
   128f4:	bl	10cf8 <strtol@plt>
   128f8:	str	r0, [r6]
   128fc:	ldr	r3, [r5]
   12900:	cmp	r3, #0
   12904:	bne	12930 <strspn@plt+0x1a1c>
   12908:	ldr	r2, [sp]
   1290c:	cmp	r2, #0
   12910:	beq	12930 <strspn@plt+0x1a1c>
   12914:	ldrsb	r3, [r2]
   12918:	cmp	r3, #0
   1291c:	bne	12930 <strspn@plt+0x1a1c>
   12920:	cmp	r4, r2
   12924:	movne	r0, #0
   12928:	mvneq	r0, #0
   1292c:	b	12864 <strspn@plt+0x1950>
   12930:	mvn	r0, #0
   12934:	b	12864 <strspn@plt+0x1950>
   12938:	bl	10d70 <__stack_chk_fail@plt>
   1293c:	andeq	r1, r1, r0, lsr r8
   12940:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12944:	rsbs	r2, r0, #1
   12948:	push	{r4, r5, r6, lr}
   1294c:	movcc	r2, #0
   12950:	rsbs	r3, r1, #1
   12954:	mov	r5, r0
   12958:	mov	r4, r1
   1295c:	movcc	r3, #0
   12960:	ands	ip, r2, r3
   12964:	bne	129d0 <strspn@plt+0x1abc>
   12968:	orrs	r3, r2, r3
   1296c:	bne	129d8 <strspn@plt+0x1ac4>
   12970:	bl	10cec <strcmp@plt>
   12974:	cmp	r0, #0
   12978:	beq	129d0 <strspn@plt+0x1abc>
   1297c:	mov	r0, r5
   12980:	bl	10e0c <strlen@plt>
   12984:	mov	r6, r0
   12988:	mov	r0, r4
   1298c:	bl	10e0c <strlen@plt>
   12990:	cmp	r6, #0
   12994:	beq	129a8 <strspn@plt+0x1a94>
   12998:	sub	r3, r6, #1
   1299c:	ldrsb	r2, [r5, r3]
   129a0:	cmp	r2, #47	; 0x2f
   129a4:	moveq	r6, r3
   129a8:	cmp	r0, #0
   129ac:	beq	129c0 <strspn@plt+0x1aac>
   129b0:	sub	r3, r0, #1
   129b4:	ldrsb	r2, [r4, r3]
   129b8:	cmp	r2, #47	; 0x2f
   129bc:	moveq	r0, r3
   129c0:	cmp	r6, r0
   129c4:	beq	129e0 <strspn@plt+0x1acc>
   129c8:	mov	r0, #0
   129cc:	pop	{r4, r5, r6, pc}
   129d0:	mov	r0, #1
   129d4:	pop	{r4, r5, r6, pc}
   129d8:	mov	r0, ip
   129dc:	pop	{r4, r5, r6, pc}
   129e0:	mov	r0, r5
   129e4:	mov	r1, r4
   129e8:	mov	r2, r6
   129ec:	bl	10ef0 <strncmp@plt>
   129f0:	rsbs	r0, r0, #1
   129f4:	movcc	r0, #0
   129f8:	pop	{r4, r5, r6, pc}
   129fc:	ldr	r3, [pc, #248]	; 12afc <strspn@plt+0x1be8>
   12a00:	cmp	r0, #0
   12a04:	cmpne	r1, #0
   12a08:	ldr	r2, [pc, #240]	; 12b00 <strspn@plt+0x1bec>
   12a0c:	add	r3, pc, r3
   12a10:	push	{r4, r5, r6, r7, r8, r9, lr}
   12a14:	sub	sp, sp, #20
   12a18:	ldr	r9, [r3, r2]
   12a1c:	mov	r6, r1
   12a20:	addne	r8, sp, #4
   12a24:	addne	r7, sp, #8
   12a28:	ldr	r3, [r9]
   12a2c:	str	r3, [sp, #12]
   12a30:	bne	12a78 <strspn@plt+0x1b64>
   12a34:	b	12af0 <strspn@plt+0x1bdc>
   12a38:	cmp	r4, r3
   12a3c:	bne	12af0 <strspn@plt+0x1bdc>
   12a40:	mov	r0, r5
   12a44:	mov	r1, r6
   12a48:	mov	r2, r4
   12a4c:	bl	10ef0 <strncmp@plt>
   12a50:	cmp	r0, #0
   12a54:	bne	12af0 <strspn@plt+0x1bdc>
   12a58:	adds	r6, r6, r4
   12a5c:	moveq	r3, #0
   12a60:	movne	r3, #1
   12a64:	adds	r0, r5, r4
   12a68:	moveq	r3, #0
   12a6c:	andne	r3, r3, #1
   12a70:	cmp	r3, #0
   12a74:	beq	12af0 <strspn@plt+0x1bdc>
   12a78:	mov	r1, r8
   12a7c:	bl	11538 <strspn@plt+0x624>
   12a80:	mov	r1, r7
   12a84:	mov	r5, r0
   12a88:	mov	r0, r6
   12a8c:	bl	11538 <strspn@plt+0x624>
   12a90:	ldr	r4, [sp, #4]
   12a94:	ldr	r3, [sp, #8]
   12a98:	mov	r6, r0
   12a9c:	adds	r0, r3, r4
   12aa0:	beq	12ad4 <strspn@plt+0x1bc0>
   12aa4:	cmp	r0, #1
   12aa8:	bne	12a38 <strspn@plt+0x1b24>
   12aac:	cmp	r5, #0
   12ab0:	beq	12ac0 <strspn@plt+0x1bac>
   12ab4:	ldrsb	r2, [r5]
   12ab8:	cmp	r2, #47	; 0x2f
   12abc:	beq	12ad8 <strspn@plt+0x1bc4>
   12ac0:	cmp	r6, #0
   12ac4:	beq	12a38 <strspn@plt+0x1b24>
   12ac8:	ldrsb	r2, [r6]
   12acc:	cmp	r2, #47	; 0x2f
   12ad0:	bne	12a38 <strspn@plt+0x1b24>
   12ad4:	mov	r0, #1
   12ad8:	ldr	r2, [sp, #12]
   12adc:	ldr	r3, [r9]
   12ae0:	cmp	r2, r3
   12ae4:	bne	12af8 <strspn@plt+0x1be4>
   12ae8:	add	sp, sp, #20
   12aec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12af0:	mov	r0, #0
   12af4:	b	12ad8 <strspn@plt+0x1bc4>
   12af8:	bl	10d70 <__stack_chk_fail@plt>
   12afc:	andeq	r1, r1, ip, ror #11
   12b00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12b04:	rsbs	r3, r0, #1
   12b08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b0c:	movcc	r3, #0
   12b10:	rsbs	r4, r1, #1
   12b14:	mov	r7, r1
   12b18:	mov	r6, r2
   12b1c:	mov	sl, r0
   12b20:	movcc	r4, #0
   12b24:	tst	r3, r4
   12b28:	bne	12b8c <strspn@plt+0x1c78>
   12b2c:	cmp	r3, #0
   12b30:	bne	12ba4 <strspn@plt+0x1c90>
   12b34:	cmp	r4, #0
   12b38:	bne	12bb4 <strspn@plt+0x1ca0>
   12b3c:	bl	10e0c <strlen@plt>
   12b40:	mvn	r3, r0
   12b44:	cmp	r6, r3
   12b48:	mov	r5, r0
   12b4c:	bhi	12b9c <strspn@plt+0x1c88>
   12b50:	add	r9, r0, r6
   12b54:	add	r0, r9, #1
   12b58:	bl	10db8 <malloc@plt>
   12b5c:	subs	r8, r0, #0
   12b60:	beq	12bbc <strspn@plt+0x1ca8>
   12b64:	mov	r1, sl
   12b68:	mov	r2, r5
   12b6c:	bl	10d4c <memcpy@plt>
   12b70:	add	r0, r8, r5
   12b74:	mov	r1, r7
   12b78:	mov	r2, r6
   12b7c:	bl	10d4c <memcpy@plt>
   12b80:	strb	r4, [r8, r9]
   12b84:	mov	r0, r8
   12b88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b8c:	mov	r0, #1
   12b90:	mov	r1, r0
   12b94:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b98:	b	10cd4 <calloc@plt>
   12b9c:	mov	r0, r4
   12ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ba4:	mov	r0, r1
   12ba8:	mov	r1, r2
   12bac:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bb0:	b	10d94 <__strndup@plt>
   12bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bb8:	b	10e54 <__strdup@plt>
   12bbc:	mov	r0, r8
   12bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bc4:	push	{r3, r4, r5, lr}
   12bc8:	subs	r4, r1, #0
   12bcc:	mov	r5, r0
   12bd0:	beq	12bf0 <strspn@plt+0x1cdc>
   12bd4:	mov	r0, r4
   12bd8:	bl	10e0c <strlen@plt>
   12bdc:	mov	r1, r4
   12be0:	mov	r2, r0
   12be4:	mov	r0, r5
   12be8:	pop	{r3, r4, r5, lr}
   12bec:	b	12b04 <strspn@plt+0x1bf0>
   12bf0:	mov	r2, r4
   12bf4:	mov	r0, r5
   12bf8:	mov	r1, r4
   12bfc:	pop	{r3, r4, r5, lr}
   12c00:	b	12b04 <strspn@plt+0x1bf0>
   12c04:	push	{r1, r2, r3}
   12c08:	mov	r1, #1
   12c0c:	push	{r4, r5, lr}
   12c10:	sub	sp, sp, #16
   12c14:	ldr	lr, [pc, #124]	; 12c98 <strspn@plt+0x1d84>
   12c18:	add	ip, sp, #32
   12c1c:	ldr	r4, [pc, #120]	; 12c9c <strspn@plt+0x1d88>
   12c20:	mov	r5, r0
   12c24:	add	lr, pc, lr
   12c28:	mov	r3, ip
   12c2c:	ldr	r2, [sp, #28]
   12c30:	add	r0, sp, #8
   12c34:	ldr	r4, [lr, r4]
   12c38:	str	ip, [sp, #4]
   12c3c:	ldr	ip, [r4]
   12c40:	str	ip, [sp, #12]
   12c44:	bl	10e48 <__vasprintf_chk@plt>
   12c48:	subs	r2, r0, #0
   12c4c:	blt	12c8c <strspn@plt+0x1d78>
   12c50:	mov	r0, r5
   12c54:	ldr	r1, [sp, #8]
   12c58:	bl	12b04 <strspn@plt+0x1bf0>
   12c5c:	mov	r5, r0
   12c60:	ldr	r0, [sp, #8]
   12c64:	bl	10d28 <free@plt>
   12c68:	mov	r0, r5
   12c6c:	ldr	r2, [sp, #12]
   12c70:	ldr	r3, [r4]
   12c74:	cmp	r2, r3
   12c78:	bne	12c94 <strspn@plt+0x1d80>
   12c7c:	add	sp, sp, #16
   12c80:	pop	{r4, r5, lr}
   12c84:	add	sp, sp, #12
   12c88:	bx	lr
   12c8c:	mov	r0, #0
   12c90:	b	12c6c <strspn@plt+0x1d58>
   12c94:	bl	10d70 <__stack_chk_fail@plt>
   12c98:	ldrdeq	r1, [r1], -r4
   12c9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12ca0:	ldr	ip, [pc, #372]	; 12e1c <strspn@plt+0x1f08>
   12ca4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ca8:	mov	r6, r0
   12cac:	ldr	r0, [pc, #364]	; 12e20 <strspn@plt+0x1f0c>
   12cb0:	add	ip, pc, ip
   12cb4:	ldr	r4, [r6]
   12cb8:	mov	r9, r3
   12cbc:	sub	sp, sp, #12
   12cc0:	mov	r7, r1
   12cc4:	ldr	r5, [ip, r0]
   12cc8:	mov	r8, r2
   12ccc:	ldrsb	ip, [r4]
   12cd0:	ldr	r3, [r5]
   12cd4:	cmp	ip, #0
   12cd8:	moveq	r0, ip
   12cdc:	str	r3, [sp, #4]
   12ce0:	beq	12d90 <strspn@plt+0x1e7c>
   12ce4:	mov	r0, r4
   12ce8:	mov	r1, r2
   12cec:	bl	10f14 <strspn@plt>
   12cf0:	ldrb	sl, [r4, r0]
   12cf4:	add	r4, r4, r0
   12cf8:	cmp	sl, #0
   12cfc:	beq	12e0c <strspn@plt+0x1ef8>
   12d00:	cmp	r9, #0
   12d04:	beq	12da8 <strspn@plt+0x1e94>
   12d08:	sxtb	r9, sl
   12d0c:	ldr	r0, [pc, #272]	; 12e24 <strspn@plt+0x1f10>
   12d10:	mov	r1, r9
   12d14:	add	r0, pc, r0
   12d18:	bl	10e18 <strchr@plt>
   12d1c:	cmp	r0, #0
   12d20:	beq	12dcc <strspn@plt+0x1eb8>
   12d24:	add	fp, r4, #1
   12d28:	mov	r1, sp
   12d2c:	mov	r3, #0
   12d30:	strb	sl, [sp]
   12d34:	mov	r0, fp
   12d38:	strb	r3, [sp, #1]
   12d3c:	bl	115d8 <strspn@plt+0x6c4>
   12d40:	add	r3, r4, r0
   12d44:	str	r0, [r7]
   12d48:	ldrb	r3, [r3, #1]
   12d4c:	cmp	r3, #0
   12d50:	beq	12e0c <strspn@plt+0x1ef8>
   12d54:	sxtb	r3, r3
   12d58:	cmp	r9, r3
   12d5c:	bne	12e0c <strspn@plt+0x1ef8>
   12d60:	add	r0, r0, #2
   12d64:	add	r7, r4, r0
   12d68:	ldrb	r1, [r4, r0]
   12d6c:	cmp	r1, #0
   12d70:	beq	12d88 <strspn@plt+0x1e74>
   12d74:	mov	r0, r8
   12d78:	sxtb	r1, r1
   12d7c:	bl	10e18 <strchr@plt>
   12d80:	cmp	r0, #0
   12d84:	beq	12e0c <strspn@plt+0x1ef8>
   12d88:	mov	r0, fp
   12d8c:	str	r7, [r6]
   12d90:	ldr	r2, [sp, #4]
   12d94:	ldr	r3, [r5]
   12d98:	cmp	r2, r3
   12d9c:	bne	12e18 <strspn@plt+0x1f04>
   12da0:	add	sp, sp, #12
   12da4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12da8:	mov	r0, r4
   12dac:	mov	r1, r8
   12db0:	bl	10d04 <strcspn@plt>
   12db4:	mov	r3, r0
   12db8:	mov	r0, r4
   12dbc:	add	r4, r4, r3
   12dc0:	str	r3, [r7]
   12dc4:	str	r4, [r6]
   12dc8:	b	12d90 <strspn@plt+0x1e7c>
   12dcc:	mov	r1, r8
   12dd0:	mov	r0, r4
   12dd4:	bl	115d8 <strspn@plt+0x6c4>
   12dd8:	str	r0, [r7]
   12ddc:	add	r7, r4, r0
   12de0:	ldrb	r1, [r4, r0]
   12de4:	cmp	r1, #0
   12de8:	beq	12e00 <strspn@plt+0x1eec>
   12dec:	mov	r0, r8
   12df0:	sxtb	r1, r1
   12df4:	bl	10e18 <strchr@plt>
   12df8:	cmp	r0, #0
   12dfc:	beq	12dc4 <strspn@plt+0x1eb0>
   12e00:	str	r7, [r6]
   12e04:	mov	r0, r4
   12e08:	b	12d90 <strspn@plt+0x1e7c>
   12e0c:	str	r4, [r6]
   12e10:	mov	r0, #0
   12e14:	b	12d90 <strspn@plt+0x1e7c>
   12e18:	bl	10d70 <__stack_chk_fail@plt>
   12e1c:	andeq	r1, r1, r8, asr #6
   12e20:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12e24:	andeq	r0, r0, r0, asr #30
   12e28:	push	{r4, lr}
   12e2c:	mov	r4, r0
   12e30:	b	12e3c <strspn@plt+0x1f28>
   12e34:	cmp	r0, #10
   12e38:	beq	12e54 <strspn@plt+0x1f40>
   12e3c:	mov	r0, r4
   12e40:	bl	10e6c <fgetc@plt>
   12e44:	cmn	r0, #1
   12e48:	bne	12e34 <strspn@plt+0x1f20>
   12e4c:	mov	r0, #1
   12e50:	pop	{r4, pc}
   12e54:	mov	r0, #0
   12e58:	pop	{r4, pc}
   12e5c:	cmp	r3, #0
   12e60:	cmpeq	r2, #0
   12e64:	bne	12e7c <strspn@plt+0x1f68>
   12e68:	cmp	r1, #0
   12e6c:	cmpeq	r0, #0
   12e70:	mvnne	r1, #0
   12e74:	mvnne	r0, #0
   12e78:	b	12e98 <strspn@plt+0x1f84>
   12e7c:	sub	sp, sp, #8
   12e80:	push	{sp, lr}
   12e84:	bl	12ee4 <strspn@plt+0x1fd0>
   12e88:	ldr	lr, [sp, #4]
   12e8c:	add	sp, sp, #8
   12e90:	pop	{r2, r3}
   12e94:	bx	lr
   12e98:	push	{r1, lr}
   12e9c:	mov	r0, #8
   12ea0:	bl	10ce0 <raise@plt>
   12ea4:	pop	{r1, pc}
   12ea8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12eac:	mov	r8, r2
   12eb0:	mov	r6, r0
   12eb4:	mov	r7, r1
   12eb8:	mov	sl, r3
   12ebc:	ldr	r9, [sp, #32]
   12ec0:	bl	12f20 <strspn@plt+0x200c>
   12ec4:	umull	r4, r5, r8, r0
   12ec8:	mul	r8, r8, r1
   12ecc:	mla	r2, r0, sl, r8
   12ed0:	add	r5, r2, r5
   12ed4:	subs	r4, r6, r4
   12ed8:	sbc	r5, r7, r5
   12edc:	strd	r4, [r9]
   12ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ee4:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   12ee8:	mov	r8, r2
   12eec:	mov	r6, r0
   12ef0:	mov	r7, r1
   12ef4:	mov	r5, r3
   12ef8:	ldr	r9, [sp, #32]
   12efc:	bl	133ac <strspn@plt+0x2498>
   12f00:	mul	r3, r0, r5
   12f04:	umull	r4, r5, r0, r8
   12f08:	mla	r8, r8, r1, r3
   12f0c:	add	r5, r8, r5
   12f10:	subs	r4, r6, r4
   12f14:	sbc	r5, r7, r5
   12f18:	strd	r4, [r9]
   12f1c:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   12f20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f24:	rsbs	r4, r0, #0
   12f28:	rsc	r5, r1, #0
   12f2c:	cmp	r1, #0
   12f30:	mvn	r6, #0
   12f34:	sub	sp, sp, #12
   12f38:	movge	r4, r0
   12f3c:	movge	r5, r1
   12f40:	movge	r6, #0
   12f44:	cmp	r3, #0
   12f48:	blt	13180 <strspn@plt+0x226c>
   12f4c:	cmp	r3, #0
   12f50:	mov	sl, r4
   12f54:	mov	ip, r5
   12f58:	mov	r0, r2
   12f5c:	mov	r1, r3
   12f60:	mov	r8, r2
   12f64:	mov	r7, r4
   12f68:	mov	r9, r5
   12f6c:	bne	13064 <strspn@plt+0x2150>
   12f70:	cmp	r2, r5
   12f74:	bls	130a0 <strspn@plt+0x218c>
   12f78:	clz	r3, r2
   12f7c:	cmp	r3, #0
   12f80:	rsbne	r2, r3, #32
   12f84:	lslne	r8, r0, r3
   12f88:	lsrne	r2, r4, r2
   12f8c:	lslne	r7, r4, r3
   12f90:	orrne	r9, r2, r5, lsl r3
   12f94:	lsr	r4, r8, #16
   12f98:	uxth	sl, r8
   12f9c:	mov	r1, r4
   12fa0:	mov	r0, r9
   12fa4:	bl	137dc <strspn@plt+0x28c8>
   12fa8:	mov	r1, r4
   12fac:	mov	fp, r0
   12fb0:	mov	r0, r9
   12fb4:	bl	139c8 <strspn@plt+0x2ab4>
   12fb8:	mul	r0, sl, fp
   12fbc:	lsr	r2, r7, #16
   12fc0:	orr	r1, r2, r1, lsl #16
   12fc4:	cmp	r0, r1
   12fc8:	bls	12fec <strspn@plt+0x20d8>
   12fcc:	adds	r1, r1, r8
   12fd0:	sub	r3, fp, #1
   12fd4:	bcs	12fe8 <strspn@plt+0x20d4>
   12fd8:	cmp	r0, r1
   12fdc:	subhi	fp, fp, #2
   12fe0:	addhi	r1, r1, r8
   12fe4:	bhi	12fec <strspn@plt+0x20d8>
   12fe8:	mov	fp, r3
   12fec:	rsb	r9, r0, r1
   12ff0:	mov	r1, r4
   12ff4:	uxth	r7, r7
   12ff8:	mov	r0, r9
   12ffc:	bl	137dc <strspn@plt+0x28c8>
   13000:	mov	r1, r4
   13004:	mov	r5, r0
   13008:	mov	r0, r9
   1300c:	bl	139c8 <strspn@plt+0x2ab4>
   13010:	mul	sl, sl, r5
   13014:	orr	r1, r7, r1, lsl #16
   13018:	cmp	sl, r1
   1301c:	bls	1303c <strspn@plt+0x2128>
   13020:	adds	r8, r1, r8
   13024:	sub	r3, r5, #1
   13028:	bcs	13038 <strspn@plt+0x2124>
   1302c:	cmp	sl, r8
   13030:	subhi	r5, r5, #2
   13034:	bhi	1303c <strspn@plt+0x2128>
   13038:	mov	r5, r3
   1303c:	orr	r3, r5, fp, lsl #16
   13040:	mov	r4, #0
   13044:	cmp	r6, #0
   13048:	mov	r0, r3
   1304c:	mov	r1, r4
   13050:	beq	1305c <strspn@plt+0x2148>
   13054:	rsbs	r0, r0, #0
   13058:	rsc	r1, r1, #0
   1305c:	add	sp, sp, #12
   13060:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13064:	cmp	r3, r5
   13068:	movhi	r4, #0
   1306c:	movhi	r3, r4
   13070:	bhi	13044 <strspn@plt+0x2130>
   13074:	clz	r5, r1
   13078:	cmp	r5, #0
   1307c:	bne	1326c <strspn@plt+0x2358>
   13080:	cmp	r1, ip
   13084:	cmpcs	r2, sl
   13088:	movhi	r4, #0
   1308c:	movls	r4, #1
   13090:	movls	r3, #1
   13094:	movls	r4, r5
   13098:	movhi	r3, r4
   1309c:	b	13044 <strspn@plt+0x2130>
   130a0:	cmp	r2, #0
   130a4:	bne	130b8 <strspn@plt+0x21a4>
   130a8:	mov	r1, r2
   130ac:	mov	r0, #1
   130b0:	bl	137dc <strspn@plt+0x28c8>
   130b4:	mov	r8, r0
   130b8:	clz	r3, r8
   130bc:	cmp	r3, #0
   130c0:	bne	13190 <strspn@plt+0x227c>
   130c4:	rsb	r9, r8, r9
   130c8:	lsr	r5, r8, #16
   130cc:	uxth	sl, r8
   130d0:	mov	r4, #1
   130d4:	mov	r1, r5
   130d8:	mov	r0, r9
   130dc:	bl	137dc <strspn@plt+0x28c8>
   130e0:	mov	r1, r5
   130e4:	mov	fp, r0
   130e8:	mov	r0, r9
   130ec:	bl	139c8 <strspn@plt+0x2ab4>
   130f0:	mul	r0, sl, fp
   130f4:	lsr	r2, r7, #16
   130f8:	orr	r1, r2, r1, lsl #16
   130fc:	cmp	r0, r1
   13100:	bls	13120 <strspn@plt+0x220c>
   13104:	adds	r1, r1, r8
   13108:	sub	r3, fp, #1
   1310c:	bcs	1338c <strspn@plt+0x2478>
   13110:	cmp	r0, r1
   13114:	subhi	fp, fp, #2
   13118:	addhi	r1, r1, r8
   1311c:	bls	1338c <strspn@plt+0x2478>
   13120:	rsb	r2, r0, r1
   13124:	mov	r1, r5
   13128:	str	r2, [sp]
   1312c:	uxth	r7, r7
   13130:	mov	r0, r2
   13134:	bl	137dc <strspn@plt+0x28c8>
   13138:	ldr	r2, [sp]
   1313c:	mov	r1, r5
   13140:	mov	r9, r0
   13144:	mov	r0, r2
   13148:	bl	139c8 <strspn@plt+0x2ab4>
   1314c:	mul	sl, sl, r9
   13150:	orr	r1, r7, r1, lsl #16
   13154:	cmp	sl, r1
   13158:	bls	13178 <strspn@plt+0x2264>
   1315c:	adds	r8, r1, r8
   13160:	sub	r3, r9, #1
   13164:	bcs	13174 <strspn@plt+0x2260>
   13168:	cmp	sl, r8
   1316c:	subhi	r9, r9, #2
   13170:	bhi	13178 <strspn@plt+0x2264>
   13174:	mov	r9, r3
   13178:	orr	r3, r9, fp, lsl #16
   1317c:	b	13044 <strspn@plt+0x2130>
   13180:	mvn	r6, r6
   13184:	rsbs	r2, r2, #0
   13188:	rsc	r3, r3, #0
   1318c:	b	12f4c <strspn@plt+0x2038>
   13190:	lsl	r8, r8, r3
   13194:	rsb	fp, r3, #32
   13198:	lsr	r4, r9, fp
   1319c:	lsr	fp, r7, fp
   131a0:	lsr	r5, r8, #16
   131a4:	orr	fp, fp, r9, lsl r3
   131a8:	mov	r0, r4
   131ac:	lsl	r7, r7, r3
   131b0:	mov	r1, r5
   131b4:	uxth	sl, r8
   131b8:	bl	137dc <strspn@plt+0x28c8>
   131bc:	mov	r1, r5
   131c0:	mov	r3, r0
   131c4:	mov	r0, r4
   131c8:	str	r3, [sp]
   131cc:	bl	139c8 <strspn@plt+0x2ab4>
   131d0:	ldr	r3, [sp]
   131d4:	lsr	r2, fp, #16
   131d8:	mul	r0, sl, r3
   131dc:	orr	r1, r2, r1, lsl #16
   131e0:	cmp	r0, r1
   131e4:	bls	13204 <strspn@plt+0x22f0>
   131e8:	adds	r1, r1, r8
   131ec:	sub	r2, r3, #1
   131f0:	bcs	133a4 <strspn@plt+0x2490>
   131f4:	cmp	r0, r1
   131f8:	subhi	r3, r3, #2
   131fc:	addhi	r1, r1, r8
   13200:	bls	133a4 <strspn@plt+0x2490>
   13204:	rsb	r9, r0, r1
   13208:	mov	r1, r5
   1320c:	str	r3, [sp]
   13210:	uxth	fp, fp
   13214:	mov	r0, r9
   13218:	bl	137dc <strspn@plt+0x28c8>
   1321c:	mov	r1, r5
   13220:	mov	r4, r0
   13224:	mov	r0, r9
   13228:	bl	139c8 <strspn@plt+0x2ab4>
   1322c:	mul	r9, sl, r4
   13230:	ldr	r3, [sp]
   13234:	orr	r1, fp, r1, lsl #16
   13238:	cmp	r9, r1
   1323c:	bls	13260 <strspn@plt+0x234c>
   13240:	adds	r1, r1, r8
   13244:	sub	r2, r4, #1
   13248:	bcs	1325c <strspn@plt+0x2348>
   1324c:	cmp	r9, r1
   13250:	subhi	r4, r4, #2
   13254:	addhi	r1, r1, r8
   13258:	bhi	13260 <strspn@plt+0x234c>
   1325c:	mov	r4, r2
   13260:	rsb	r9, r9, r1
   13264:	orr	r4, r4, r3, lsl #16
   13268:	b	130d4 <strspn@plt+0x21c0>
   1326c:	rsb	sl, r5, #32
   13270:	lsl	r3, r2, r5
   13274:	lsr	r0, r2, sl
   13278:	lsr	r2, ip, sl
   1327c:	orr	r4, r0, r1, lsl r5
   13280:	lsr	sl, r7, sl
   13284:	mov	r0, r2
   13288:	orr	sl, sl, ip, lsl r5
   1328c:	lsr	r9, r4, #16
   13290:	str	r3, [sp, #4]
   13294:	str	r2, [sp]
   13298:	uxth	fp, r4
   1329c:	mov	r1, r9
   132a0:	bl	137dc <strspn@plt+0x28c8>
   132a4:	ldr	r2, [sp]
   132a8:	mov	r1, r9
   132ac:	mov	r8, r0
   132b0:	mov	r0, r2
   132b4:	bl	139c8 <strspn@plt+0x2ab4>
   132b8:	mul	r0, fp, r8
   132bc:	lsr	r2, sl, #16
   132c0:	orr	r1, r2, r1, lsl #16
   132c4:	cmp	r0, r1
   132c8:	bls	132e8 <strspn@plt+0x23d4>
   132cc:	adds	r1, r1, r4
   132d0:	sub	r2, r8, #1
   132d4:	bcs	1339c <strspn@plt+0x2488>
   132d8:	cmp	r0, r1
   132dc:	subhi	r8, r8, #2
   132e0:	addhi	r1, r1, r4
   132e4:	bls	1339c <strspn@plt+0x2488>
   132e8:	rsb	ip, r0, r1
   132ec:	mov	r1, r9
   132f0:	str	ip, [sp]
   132f4:	mov	r0, ip
   132f8:	bl	137dc <strspn@plt+0x28c8>
   132fc:	ldr	ip, [sp]
   13300:	mov	r1, r9
   13304:	mov	r2, r0
   13308:	mov	r0, ip
   1330c:	str	r2, [sp]
   13310:	bl	139c8 <strspn@plt+0x2ab4>
   13314:	ldr	r2, [sp]
   13318:	uxth	ip, sl
   1331c:	mul	fp, fp, r2
   13320:	orr	ip, ip, r1, lsl #16
   13324:	cmp	fp, ip
   13328:	bls	13348 <strspn@plt+0x2434>
   1332c:	adds	ip, ip, r4
   13330:	sub	r1, r2, #1
   13334:	bcs	13394 <strspn@plt+0x2480>
   13338:	cmp	fp, ip
   1333c:	subhi	r2, r2, #2
   13340:	addhi	ip, ip, r4
   13344:	bls	13394 <strspn@plt+0x2480>
   13348:	ldr	r0, [sp, #4]
   1334c:	orr	r1, r2, r8, lsl #16
   13350:	rsb	fp, fp, ip
   13354:	umull	r2, r3, r1, r0
   13358:	cmp	fp, r3
   1335c:	bcc	13380 <strspn@plt+0x246c>
   13360:	movne	r4, #0
   13364:	moveq	r4, #1
   13368:	cmp	r2, r7, lsl r5
   1336c:	movls	r4, #0
   13370:	andhi	r4, r4, #1
   13374:	cmp	r4, #0
   13378:	moveq	r3, r1
   1337c:	beq	13044 <strspn@plt+0x2130>
   13380:	sub	r3, r1, #1
   13384:	mov	r4, #0
   13388:	b	13044 <strspn@plt+0x2130>
   1338c:	mov	fp, r3
   13390:	b	13120 <strspn@plt+0x220c>
   13394:	mov	r2, r1
   13398:	b	13348 <strspn@plt+0x2434>
   1339c:	mov	r8, r2
   133a0:	b	132e8 <strspn@plt+0x23d4>
   133a4:	mov	r3, r2
   133a8:	b	13204 <strspn@plt+0x22f0>
   133ac:	cmp	r3, #0
   133b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133b4:	mov	r6, r0
   133b8:	sub	sp, sp, #12
   133bc:	mov	r5, r1
   133c0:	mov	r7, r0
   133c4:	mov	r4, r2
   133c8:	mov	r8, r1
   133cc:	bne	134ac <strspn@plt+0x2598>
   133d0:	cmp	r2, r1
   133d4:	bls	134e8 <strspn@plt+0x25d4>
   133d8:	clz	r3, r2
   133dc:	cmp	r3, #0
   133e0:	rsbne	r8, r3, #32
   133e4:	lslne	r4, r2, r3
   133e8:	lsrne	r8, r0, r8
   133ec:	lslne	r7, r0, r3
   133f0:	orrne	r8, r8, r1, lsl r3
   133f4:	lsr	r5, r4, #16
   133f8:	uxth	sl, r4
   133fc:	mov	r1, r5
   13400:	mov	r0, r8
   13404:	bl	137dc <strspn@plt+0x28c8>
   13408:	mov	r1, r5
   1340c:	mov	r9, r0
   13410:	mov	r0, r8
   13414:	bl	139c8 <strspn@plt+0x2ab4>
   13418:	mul	r0, sl, r9
   1341c:	lsr	r3, r7, #16
   13420:	orr	r1, r3, r1, lsl #16
   13424:	cmp	r0, r1
   13428:	bls	1344c <strspn@plt+0x2538>
   1342c:	adds	r1, r1, r4
   13430:	sub	r2, r9, #1
   13434:	bcs	13448 <strspn@plt+0x2534>
   13438:	cmp	r0, r1
   1343c:	subhi	r9, r9, #2
   13440:	addhi	r1, r1, r4
   13444:	bhi	1344c <strspn@plt+0x2538>
   13448:	mov	r9, r2
   1344c:	rsb	r8, r0, r1
   13450:	mov	r1, r5
   13454:	uxth	r7, r7
   13458:	mov	r0, r8
   1345c:	bl	137dc <strspn@plt+0x28c8>
   13460:	mov	r1, r5
   13464:	mov	r6, r0
   13468:	mov	r0, r8
   1346c:	bl	139c8 <strspn@plt+0x2ab4>
   13470:	mul	sl, sl, r6
   13474:	orr	r1, r7, r1, lsl #16
   13478:	cmp	sl, r1
   1347c:	bls	13498 <strspn@plt+0x2584>
   13480:	adds	r4, r1, r4
   13484:	sub	r3, r6, #1
   13488:	bcs	13794 <strspn@plt+0x2880>
   1348c:	cmp	sl, r4
   13490:	subhi	r6, r6, #2
   13494:	bls	13794 <strspn@plt+0x2880>
   13498:	orr	r0, r6, r9, lsl #16
   1349c:	mov	r6, #0
   134a0:	mov	r1, r6
   134a4:	add	sp, sp, #12
   134a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134ac:	cmp	r3, r1
   134b0:	movhi	r6, #0
   134b4:	movhi	r0, r6
   134b8:	bhi	134a0 <strspn@plt+0x258c>
   134bc:	clz	r7, r3
   134c0:	cmp	r7, #0
   134c4:	bne	135c4 <strspn@plt+0x26b0>
   134c8:	cmp	r3, r1
   134cc:	cmpcs	r2, r6
   134d0:	movhi	r6, #0
   134d4:	movls	r6, #1
   134d8:	movls	r0, #1
   134dc:	movls	r6, r7
   134e0:	movhi	r0, r6
   134e4:	b	134a0 <strspn@plt+0x258c>
   134e8:	cmp	r2, #0
   134ec:	bne	13500 <strspn@plt+0x25ec>
   134f0:	mov	r1, r2
   134f4:	mov	r0, #1
   134f8:	bl	137dc <strspn@plt+0x28c8>
   134fc:	mov	r4, r0
   13500:	clz	r3, r4
   13504:	cmp	r3, #0
   13508:	bne	136c0 <strspn@plt+0x27ac>
   1350c:	rsb	r5, r4, r5
   13510:	lsr	r8, r4, #16
   13514:	uxth	sl, r4
   13518:	mov	r6, #1
   1351c:	mov	r1, r8
   13520:	mov	r0, r5
   13524:	bl	137dc <strspn@plt+0x28c8>
   13528:	mov	r1, r8
   1352c:	mov	r9, r0
   13530:	mov	r0, r5
   13534:	bl	139c8 <strspn@plt+0x2ab4>
   13538:	mul	r0, sl, r9
   1353c:	lsr	r3, r7, #16
   13540:	orr	r1, r3, r1, lsl #16
   13544:	cmp	r0, r1
   13548:	bls	13568 <strspn@plt+0x2654>
   1354c:	adds	r1, r1, r4
   13550:	sub	r2, r9, #1
   13554:	bcs	1379c <strspn@plt+0x2888>
   13558:	cmp	r0, r1
   1355c:	subhi	r9, r9, #2
   13560:	addhi	r1, r1, r4
   13564:	bls	1379c <strspn@plt+0x2888>
   13568:	rsb	fp, r0, r1
   1356c:	mov	r1, r8
   13570:	uxth	r7, r7
   13574:	mov	r0, fp
   13578:	bl	137dc <strspn@plt+0x28c8>
   1357c:	mov	r1, r8
   13580:	mov	r5, r0
   13584:	mov	r0, fp
   13588:	bl	139c8 <strspn@plt+0x2ab4>
   1358c:	mul	sl, sl, r5
   13590:	orr	r1, r7, r1, lsl #16
   13594:	cmp	sl, r1
   13598:	bls	135b4 <strspn@plt+0x26a0>
   1359c:	adds	r4, r1, r4
   135a0:	sub	r3, r5, #1
   135a4:	bcs	137a4 <strspn@plt+0x2890>
   135a8:	cmp	sl, r4
   135ac:	subhi	r5, r5, #2
   135b0:	bls	137a4 <strspn@plt+0x2890>
   135b4:	orr	r0, r5, r9, lsl #16
   135b8:	mov	r1, r6
   135bc:	add	sp, sp, #12
   135c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135c4:	rsb	r1, r7, #32
   135c8:	lsl	r0, r2, r7
   135cc:	lsr	r2, r2, r1
   135d0:	lsr	fp, r5, r1
   135d4:	orr	r8, r2, r3, lsl r7
   135d8:	lsr	r1, r6, r1
   135dc:	str	r0, [sp, #4]
   135e0:	orr	r5, r1, r5, lsl r7
   135e4:	lsr	r9, r8, #16
   135e8:	mov	r0, fp
   135ec:	uxth	sl, r8
   135f0:	mov	r1, r9
   135f4:	bl	137dc <strspn@plt+0x28c8>
   135f8:	mov	r1, r9
   135fc:	mov	r4, r0
   13600:	mov	r0, fp
   13604:	bl	139c8 <strspn@plt+0x2ab4>
   13608:	mul	r0, sl, r4
   1360c:	lsr	ip, r5, #16
   13610:	orr	r1, ip, r1, lsl #16
   13614:	cmp	r0, r1
   13618:	bls	1362c <strspn@plt+0x2718>
   1361c:	adds	r1, r1, r8
   13620:	sub	r2, r4, #1
   13624:	bcc	137c0 <strspn@plt+0x28ac>
   13628:	mov	r4, r2
   1362c:	rsb	ip, r0, r1
   13630:	mov	r1, r9
   13634:	str	ip, [sp]
   13638:	uxth	r5, r5
   1363c:	mov	r0, ip
   13640:	bl	137dc <strspn@plt+0x28c8>
   13644:	ldr	ip, [sp]
   13648:	mov	r1, r9
   1364c:	mov	fp, r0
   13650:	mov	r0, ip
   13654:	bl	139c8 <strspn@plt+0x2ab4>
   13658:	mul	sl, sl, fp
   1365c:	orr	r1, r5, r1, lsl #16
   13660:	cmp	sl, r1
   13664:	bls	13678 <strspn@plt+0x2764>
   13668:	adds	r1, r1, r8
   1366c:	sub	r2, fp, #1
   13670:	bcc	137ac <strspn@plt+0x2898>
   13674:	mov	fp, r2
   13678:	ldr	r3, [sp, #4]
   1367c:	orr	r0, fp, r4, lsl #16
   13680:	rsb	sl, sl, r1
   13684:	umull	r4, r5, r0, r3
   13688:	cmp	sl, r5
   1368c:	bcc	136ac <strspn@plt+0x2798>
   13690:	movne	r3, #0
   13694:	moveq	r3, #1
   13698:	cmp	r4, r6, lsl r7
   1369c:	movls	r6, #0
   136a0:	andhi	r6, r3, #1
   136a4:	cmp	r6, #0
   136a8:	beq	134a0 <strspn@plt+0x258c>
   136ac:	mov	r6, #0
   136b0:	sub	r0, r0, #1
   136b4:	mov	r1, r6
   136b8:	add	sp, sp, #12
   136bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136c0:	lsl	r4, r4, r3
   136c4:	rsb	r9, r3, #32
   136c8:	lsr	r2, r5, r9
   136cc:	lsr	r9, r6, r9
   136d0:	lsr	r8, r4, #16
   136d4:	orr	r9, r9, r5, lsl r3
   136d8:	mov	r0, r2
   136dc:	lsl	r7, r6, r3
   136e0:	mov	r1, r8
   136e4:	str	r2, [sp]
   136e8:	bl	137dc <strspn@plt+0x28c8>
   136ec:	ldr	r2, [sp]
   136f0:	mov	r1, r8
   136f4:	uxth	sl, r4
   136f8:	mov	fp, r0
   136fc:	mov	r0, r2
   13700:	bl	139c8 <strspn@plt+0x2ab4>
   13704:	mul	r0, sl, fp
   13708:	lsr	r3, r9, #16
   1370c:	orr	r1, r3, r1, lsl #16
   13710:	cmp	r0, r1
   13714:	bls	13734 <strspn@plt+0x2820>
   13718:	adds	r1, r1, r4
   1371c:	sub	r3, fp, #1
   13720:	bcs	137d4 <strspn@plt+0x28c0>
   13724:	cmp	r0, r1
   13728:	subhi	fp, fp, #2
   1372c:	addhi	r1, r1, r4
   13730:	bls	137d4 <strspn@plt+0x28c0>
   13734:	rsb	r5, r0, r1
   13738:	mov	r1, r8
   1373c:	uxth	r9, r9
   13740:	mov	r0, r5
   13744:	bl	137dc <strspn@plt+0x28c8>
   13748:	mov	r1, r8
   1374c:	mov	r6, r0
   13750:	mov	r0, r5
   13754:	bl	139c8 <strspn@plt+0x2ab4>
   13758:	mul	r5, sl, r6
   1375c:	orr	r1, r9, r1, lsl #16
   13760:	cmp	r5, r1
   13764:	bls	13788 <strspn@plt+0x2874>
   13768:	adds	r1, r1, r4
   1376c:	sub	r3, r6, #1
   13770:	bcs	13784 <strspn@plt+0x2870>
   13774:	cmp	r5, r1
   13778:	subhi	r6, r6, #2
   1377c:	addhi	r1, r1, r4
   13780:	bhi	13788 <strspn@plt+0x2874>
   13784:	mov	r6, r3
   13788:	rsb	r5, r5, r1
   1378c:	orr	r6, r6, fp, lsl #16
   13790:	b	1351c <strspn@plt+0x2608>
   13794:	mov	r6, r3
   13798:	b	13498 <strspn@plt+0x2584>
   1379c:	mov	r9, r2
   137a0:	b	13568 <strspn@plt+0x2654>
   137a4:	mov	r5, r3
   137a8:	b	135b4 <strspn@plt+0x26a0>
   137ac:	cmp	sl, r1
   137b0:	subhi	fp, fp, #2
   137b4:	addhi	r1, r1, r8
   137b8:	bhi	13678 <strspn@plt+0x2764>
   137bc:	b	13674 <strspn@plt+0x2760>
   137c0:	cmp	r0, r1
   137c4:	subhi	r4, r4, #2
   137c8:	addhi	r1, r1, r8
   137cc:	bhi	1362c <strspn@plt+0x2718>
   137d0:	b	13628 <strspn@plt+0x2714>
   137d4:	mov	fp, r3
   137d8:	b	13734 <strspn@plt+0x2820>
   137dc:	subs	r2, r1, #1
   137e0:	bxeq	lr
   137e4:	bcc	139bc <strspn@plt+0x2aa8>
   137e8:	cmp	r0, r1
   137ec:	bls	139a0 <strspn@plt+0x2a8c>
   137f0:	tst	r1, r2
   137f4:	beq	139ac <strspn@plt+0x2a98>
   137f8:	clz	r3, r0
   137fc:	clz	r2, r1
   13800:	sub	r3, r2, r3
   13804:	rsbs	r3, r3, #31
   13808:	addne	r3, r3, r3, lsl #1
   1380c:	mov	r2, #0
   13810:	addne	pc, pc, r3, lsl #2
   13814:	nop	{0}
   13818:	cmp	r0, r1, lsl #31
   1381c:	adc	r2, r2, r2
   13820:	subcs	r0, r0, r1, lsl #31
   13824:	cmp	r0, r1, lsl #30
   13828:	adc	r2, r2, r2
   1382c:	subcs	r0, r0, r1, lsl #30
   13830:	cmp	r0, r1, lsl #29
   13834:	adc	r2, r2, r2
   13838:	subcs	r0, r0, r1, lsl #29
   1383c:	cmp	r0, r1, lsl #28
   13840:	adc	r2, r2, r2
   13844:	subcs	r0, r0, r1, lsl #28
   13848:	cmp	r0, r1, lsl #27
   1384c:	adc	r2, r2, r2
   13850:	subcs	r0, r0, r1, lsl #27
   13854:	cmp	r0, r1, lsl #26
   13858:	adc	r2, r2, r2
   1385c:	subcs	r0, r0, r1, lsl #26
   13860:	cmp	r0, r1, lsl #25
   13864:	adc	r2, r2, r2
   13868:	subcs	r0, r0, r1, lsl #25
   1386c:	cmp	r0, r1, lsl #24
   13870:	adc	r2, r2, r2
   13874:	subcs	r0, r0, r1, lsl #24
   13878:	cmp	r0, r1, lsl #23
   1387c:	adc	r2, r2, r2
   13880:	subcs	r0, r0, r1, lsl #23
   13884:	cmp	r0, r1, lsl #22
   13888:	adc	r2, r2, r2
   1388c:	subcs	r0, r0, r1, lsl #22
   13890:	cmp	r0, r1, lsl #21
   13894:	adc	r2, r2, r2
   13898:	subcs	r0, r0, r1, lsl #21
   1389c:	cmp	r0, r1, lsl #20
   138a0:	adc	r2, r2, r2
   138a4:	subcs	r0, r0, r1, lsl #20
   138a8:	cmp	r0, r1, lsl #19
   138ac:	adc	r2, r2, r2
   138b0:	subcs	r0, r0, r1, lsl #19
   138b4:	cmp	r0, r1, lsl #18
   138b8:	adc	r2, r2, r2
   138bc:	subcs	r0, r0, r1, lsl #18
   138c0:	cmp	r0, r1, lsl #17
   138c4:	adc	r2, r2, r2
   138c8:	subcs	r0, r0, r1, lsl #17
   138cc:	cmp	r0, r1, lsl #16
   138d0:	adc	r2, r2, r2
   138d4:	subcs	r0, r0, r1, lsl #16
   138d8:	cmp	r0, r1, lsl #15
   138dc:	adc	r2, r2, r2
   138e0:	subcs	r0, r0, r1, lsl #15
   138e4:	cmp	r0, r1, lsl #14
   138e8:	adc	r2, r2, r2
   138ec:	subcs	r0, r0, r1, lsl #14
   138f0:	cmp	r0, r1, lsl #13
   138f4:	adc	r2, r2, r2
   138f8:	subcs	r0, r0, r1, lsl #13
   138fc:	cmp	r0, r1, lsl #12
   13900:	adc	r2, r2, r2
   13904:	subcs	r0, r0, r1, lsl #12
   13908:	cmp	r0, r1, lsl #11
   1390c:	adc	r2, r2, r2
   13910:	subcs	r0, r0, r1, lsl #11
   13914:	cmp	r0, r1, lsl #10
   13918:	adc	r2, r2, r2
   1391c:	subcs	r0, r0, r1, lsl #10
   13920:	cmp	r0, r1, lsl #9
   13924:	adc	r2, r2, r2
   13928:	subcs	r0, r0, r1, lsl #9
   1392c:	cmp	r0, r1, lsl #8
   13930:	adc	r2, r2, r2
   13934:	subcs	r0, r0, r1, lsl #8
   13938:	cmp	r0, r1, lsl #7
   1393c:	adc	r2, r2, r2
   13940:	subcs	r0, r0, r1, lsl #7
   13944:	cmp	r0, r1, lsl #6
   13948:	adc	r2, r2, r2
   1394c:	subcs	r0, r0, r1, lsl #6
   13950:	cmp	r0, r1, lsl #5
   13954:	adc	r2, r2, r2
   13958:	subcs	r0, r0, r1, lsl #5
   1395c:	cmp	r0, r1, lsl #4
   13960:	adc	r2, r2, r2
   13964:	subcs	r0, r0, r1, lsl #4
   13968:	cmp	r0, r1, lsl #3
   1396c:	adc	r2, r2, r2
   13970:	subcs	r0, r0, r1, lsl #3
   13974:	cmp	r0, r1, lsl #2
   13978:	adc	r2, r2, r2
   1397c:	subcs	r0, r0, r1, lsl #2
   13980:	cmp	r0, r1, lsl #1
   13984:	adc	r2, r2, r2
   13988:	subcs	r0, r0, r1, lsl #1
   1398c:	cmp	r0, r1
   13990:	adc	r2, r2, r2
   13994:	subcs	r0, r0, r1
   13998:	mov	r0, r2
   1399c:	bx	lr
   139a0:	moveq	r0, #1
   139a4:	movne	r0, #0
   139a8:	bx	lr
   139ac:	clz	r2, r1
   139b0:	rsb	r2, r2, #31
   139b4:	lsr	r0, r0, r2
   139b8:	bx	lr
   139bc:	cmp	r0, #0
   139c0:	mvnne	r0, #0
   139c4:	b	12e98 <strspn@plt+0x1f84>
   139c8:	cmp	r1, #0
   139cc:	beq	139bc <strspn@plt+0x2aa8>
   139d0:	push	{r0, r1, lr}
   139d4:	bl	137dc <strspn@plt+0x28c8>
   139d8:	pop	{r1, r2, lr}
   139dc:	mul	r3, r2, r0
   139e0:	sub	r1, r1, r3
   139e4:	bx	lr
   139e8:	push	{r3, r4, r5, r6, r7, r8, r9, lr}
   139ec:	mov	r7, r0
   139f0:	ldr	r6, [pc, #76]	; 13a44 <strspn@plt+0x2b30>
   139f4:	mov	r8, r1
   139f8:	ldr	r5, [pc, #72]	; 13a48 <strspn@plt+0x2b34>
   139fc:	mov	r9, r2
   13a00:	add	r6, pc, r6
   13a04:	bl	10cb4 <calloc@plt-0x20>
   13a08:	add	r5, pc, r5
   13a0c:	rsb	r6, r5, r6
   13a10:	asrs	r6, r6, #2
   13a14:	popeq	{r3, r4, r5, r6, r7, r8, r9, pc}
   13a18:	sub	r5, r5, #4
   13a1c:	mov	r4, #0
   13a20:	add	r4, r4, #1
   13a24:	ldr	r3, [r5, #4]!
   13a28:	mov	r0, r7
   13a2c:	mov	r1, r8
   13a30:	mov	r2, r9
   13a34:	blx	r3
   13a38:	cmp	r4, r6
   13a3c:	bne	13a20 <strspn@plt+0x2b0c>
   13a40:	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
   13a44:	strdeq	r0, [r1], -r8
   13a48:	andeq	r0, r1, ip, ror #9
   13a4c:	bx	lr
   13a50:	ldr	r3, [pc, #28]	; 13a74 <strspn@plt+0x2b60>
   13a54:	mov	r1, #0
   13a58:	ldr	r2, [pc, #24]	; 13a78 <strspn@plt+0x2b64>
   13a5c:	add	r3, pc, r3
   13a60:	ldr	r3, [r3, r2]
   13a64:	cmp	r3, #0
   13a68:	ldrne	r2, [r3]
   13a6c:	moveq	r2, r3
   13a70:	b	10e3c <__cxa_atexit@plt>
   13a74:	muleq	r1, ip, r5
   13a78:	ldrdeq	r0, [r0], -r8

Disassembly of section .fini:

00013a7c <.fini>:
   13a7c:	push	{r3, lr}
   13a80:	pop	{r3, pc}
